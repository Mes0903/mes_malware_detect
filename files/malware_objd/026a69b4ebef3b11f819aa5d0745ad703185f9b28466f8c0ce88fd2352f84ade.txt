
026a69b4ebef3b11f819aa5d0745ad703185f9b28466f8c0ce88fd2352f84ade.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14c
  401009:	push   ebx
  40100a:	add    DWORD PTR ds:0x413d18,edx
  401010:	push   esi
  401011:	adc    eax,DWORD PTR ds:0x41400c
  401017:	push   edi
  401018:	adc    DWORD PTR ds:0x413c74,ecx
  40101e:	xor    esi,esi
  401020:	sbb    eax,DWORD PTR ds:0x413bfe
  401026:	mov    DWORD PTR [ebp-0x10],esi
  401029:	adc    edi,eax
  40102b:	mov    eax,DWORD PTR [ebp-0x20]
  40102e:	and    DWORD PTR ds:0x413c06,0x0
  401038:	jmp    0x40104a
  40103d:	mov    edi,DWORD PTR ds:0x413c06
  401043:	inc    edi
  401044:	mov    DWORD PTR ds:0x413c06,edi
  40104a:	cmp    DWORD PTR ds:0x413c06,0x12
  401051:	jae    0x40107f
  401057:	cmp    DWORD PTR ds:0x413c06,0x18
  40105e:	jne    0x401074
  401064:	push   0x413c74
  401069:	push   0x1062
  40106e:	call   DWORD PTR ds:0x41675c
  401074:	jmp    0x40103d
  401079:	xor    DWORD PTR ds:0x413bf6,ebx
  40107f:	push   0x5
  401081:	mov    DWORD PTR [ebp-0x20],eax
  401084:	pop    edi
  401085:	push   0x4164c8
  40108a:	call   DWORD PTR ds:0x416794
  401090:	push   esi
  401091:	and    DWORD PTR ds:0x413c70,0x414018
  40109b:	push   0x69
  40109d:	push   0xe
  40109f:	push   0x6
  4010a1:	push   0x4
  4010a3:	xor    DWORD PTR ds:0x41401c,0x413c16
  4010ad:	push   0x87698897
  4010b2:	sbb    DWORD PTR ds:0x41401c,0x413c16
  4010bc:	call   DWORD PTR ds:0x416750
  4010c2:	push   esi
  4010c3:	add    DWORD PTR ds:0x413d2c,0x792b
  4010cd:	push   0x3
  4010cf:	push   0x2
  4010d1:	push   0x4
  4010d3:	sbb    DWORD PTR ds:0x414008,0x413c0e
  4010dd:	push   0x2
  4010df:	push   0x56778769
  4010e4:	push   0x76867576
  4010e9:	inc    DWORD PTR ds:0x413c74
  4010ef:	call   DWORD PTR ds:0x41674c
  4010f5:	add    DWORD PTR ds:0x413c6c,0x413d20
  4010ff:	dec    edi
  401100:	mov    DWORD PTR ds:0x413bf6,0x25f1
  40110a:	jne    0x401085
  401110:	push   0x4164f0
  401115:	sbb    DWORD PTR ds:0x414000,0x413c0e
  40111f:	push   esi
  401120:	push   esi
  401121:	and    DWORD PTR ds:0x413c78,0x5ead
  40112b:	call   DWORD PTR ds:0x416788
  401131:	test   eax,eax
  401133:	je     0x40114f
  401139:	mov    eax,ds:0x75687681
  40113e:	adc    ebx,DWORD PTR ds:0x413c0a
  401144:	imul   eax,eax,0x5463da1d
  40114a:	mov    ds:0x75687681,eax
  40114f:	mov    eax,DWORD PTR [ebp-0x20]
  401152:	mov    DWORD PTR ds:0x41401c,0x2026
  40115c:	mov    ebx,0xf89c85b0
  401161:	mov    DWORD PTR ds:0x413c78,0x6385
  40116b:	cmp    eax,ebx
  40116d:	jne    0x4011cf
  401173:	add    DWORD PTR ds:0x414004,0x37c8
  40117d:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  401187:	push   DWORD PTR [ebp+0x10]
  40118a:	sub    DWORD PTR ds:0x413bfe,0x414004
  401194:	push   DWORD PTR [ebp+0xc]
  401197:	and    DWORD PTR ds:0x413c1a,0x413ce4
  4011a1:	push   DWORD PTR [ebp+0x8]
  4011a4:	xor    DWORD PTR ds:0x413d34,0x413d2c
  4011ae:	call   0x402685
  4011b3:	mov    ecx,DWORD PTR ds:0x4163b4
  4011b9:	mov    esi,DWORD PTR ds:0x413c1e
  4011bf:	or     DWORD PTR ds:0x413c06,esi
  4011c5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4011cb:	xor    esi,esi
  4011cd:	mov    DWORD PTR [ecx],eax
  4011cf:	mov    DWORD PTR [ebp-0x8],ebx
  4011d2:	sub    ecx,DWORD PTR ds:0x413d20
  4011d8:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4011df:	lea    eax,[ebp-0x60]
  4011e2:	xor    esi,DWORD PTR ds:0x413d18
  4011e8:	mov    DWORD PTR [ebp-0x48],eax
  4011eb:	lea    eax,[ebp-0x54]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	add    DWORD PTR ds:0x413c16,0x903
  4011fb:	mov    eax,ds:0x4163b4
  401200:	mov    eax,DWORD PTR [eax+0x1c8]
  401206:	adc    DWORD PTR ds:0x413cf4,edi
  40120c:	mov    eax,DWORD PTR [eax]
  40120e:	mov    esi,DWORD PTR ds:0x413ce4
  401214:	add    esi,DWORD PTR ds:0x413c16
  40121a:	mov    DWORD PTR ds:0x413ce4,esi
  401220:	mov    ecx,DWORD PTR [ebp-0x1c]
  401223:	xor    edi,edi
  401225:	mov    esi,0x7510894
  40122a:	xor    eax,esi
  40122c:	mov    edi,0x3272dc
  401231:	adc    DWORD PTR ds:0x413c78,0x59b2
  40123b:	add    eax,edi
  40123d:	mov    DWORD PTR ds:0x413d24,0x7b51
  401247:	mov    DWORD PTR [ecx],eax
  401249:	mov    eax,ds:0x4165e0
  40124e:	mov    DWORD PTR ds:0x413c80,0x7e03
  401258:	cmp    eax,0x312bc9f6
  40125d:	mov    DWORD PTR ds:0x413d24,0x296e
  401267:	jne    0x401312
  40126d:	mov    eax,DWORD PTR [ebp-0x8]
  401270:	mov    ecx,DWORD PTR ds:0x4163b4
  401276:	mov    ecx,DWORD PTR [ecx+0x198]
  40127c:	xor    eax,esi
  40127e:	add    eax,edi
  401280:	mov    edx,DWORD PTR ds:0x413c6c
  401286:	xor    DWORD PTR ds:0x414010,edx
  40128c:	mov    DWORD PTR [ecx],eax
  40128e:	movzx  ecx,BYTE PTR ds:0x413c6c
  401295:	and    ecx,DWORD PTR ds:0x413d2c
  40129b:	mov    DWORD PTR ds:0x413c6c,ecx
  4012a1:	mov    eax,DWORD PTR [ebp-0x8]
  4012a4:	mov    DWORD PTR ds:0x413cd8,0x1b
  4012ae:	cmp    DWORD PTR ds:0x413cd8,0x0
  4012b5:	je     0x401303
  4012bb:	cmp    DWORD PTR ds:0x413cd8,0x1c
  4012c2:	jne    0x4012dd
  4012c8:	push   0x104b
  4012cd:	push   0x413d18
  4012d2:	push   0x2575
  4012d7:	call   DWORD PTR ds:0x416760
  4012dd:	xor    edx,edx
  4012df:	xor    edx,DWORD PTR ds:0x413cd8
  4012e5:	dec    edx
  4012e6:	mov    DWORD PTR ds:0x413cd8,edx
  4012ec:	jmp    0x4012ae
  4012f1:	mov    edx,DWORD PTR ds:0x413ce8
  4012f7:	or     edx,DWORD PTR ds:0x413c7c
  4012fd:	mov    DWORD PTR ds:0x413ce8,edx
  401303:	xor    eax,esi
  401305:	add    eax,edi
  401307:	or     ecx,DWORD PTR ds:0x413d24
  40130d:	mov    ds:0x4165e0,eax
  401312:	mov    eax,ds:0x4163b4
  401317:	mov    eax,DWORD PTR [eax+0x18c]
  40131d:	and    DWORD PTR ds:0x413c1a,0x0
  401327:	jmp    0x401339
  40132c:	mov    ecx,DWORD PTR ds:0x413c1a
  401332:	inc    ecx
  401333:	mov    DWORD PTR ds:0x413c1a,ecx
  401339:	cmp    DWORD PTR ds:0x413c1a,0x15
  401340:	jae    0x40136e
  401346:	cmp    DWORD PTR ds:0x413c1a,0x20
  40134d:	jne    0x401369
  401353:	push   0x6f97
  401358:	push   DWORD PTR [ebp-0x18]
  40135b:	push   0x2919
  401360:	push   DWORD PTR [ebp-0x14]
  401363:	call   DWORD PTR ds:0x416764
  401369:	jmp    0x40132c
  40136e:	mov    eax,DWORD PTR [eax]
  401370:	xor    edx,edx
  401372:	or     edx,DWORD PTR ds:0x413c0e
  401378:	adc    DWORD PTR ds:0x413cdc,edx
  40137e:	mov    DWORD PTR [ebp-0xa4],eax
  401384:	xor    eax,eax
  401386:	xor    eax,DWORD PTR ds:0x413cd0
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	sbb    DWORD PTR ds:0x413d34,eax
  401394:	mov    eax,0xf89c85bc
  401399:	xor    edx,ecx
  40139b:	mov    DWORD PTR [ebp-0x10],eax
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	mov    DWORD PTR [ebp-0x10],eax
  4013a4:	sub    ecx,ecx
  4013a6:	mov    DWORD PTR [ebp-0x1c],ebx
  4013a9:	or     DWORD PTR ds:0x413c80,0x7e3b
  4013b3:	mov    DWORD PTR [ebp-0x10],eax
  4013b6:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4013bd:	add    DWORD PTR ds:0x413d34,edi
  4013c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4013c6:	xor    ecx,esi
  4013c8:	add    ecx,edi
  4013ca:	mov    DWORD PTR [ebp-0x18],ecx
  4013cd:	add    DWORD PTR ds:0x414018,edi
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	and    DWORD PTR ds:0x413c7c,0xe1
  4013e0:	mov    edx,DWORD PTR [ebp-0xc]
  4013e3:	adc    DWORD PTR ds:0x413d28,0x413d20
  4013ed:	xor    edx,esi
  4013ef:	xor    ecx,esi
  4013f1:	sbb    DWORD PTR ds:0x414014,0x47d8
  4013fb:	add    ecx,edx
  4013fd:	movzx  edx,BYTE PTR ds:0x41400c
  401404:	and    DWORD PTR ds:0x413bf6,edx
  40140a:	mov    edx,DWORD PTR [ebp-0xc]
  40140d:	xor    edx,esi
  40140f:	lea    ecx,[ecx+edx*1+0x975894]
  401416:	cmp    DWORD PTR [ebp-0x18],ecx
  401419:	ja     0x4015f5
  40141f:	or     eax,DWORD PTR ds:0x413bfa
  401425:	mov    eax,DWORD PTR [ebp-0xc]
  401428:	mov    ecx,DWORD PTR ds:0x413c80
  40142e:	xor    DWORD PTR ds:0x413ce8,ecx
  401434:	mov    ecx,DWORD PTR [ebp-0x18]
  401437:	sbb    DWORD PTR ds:0x413d20,0x413d34
  401441:	xor    eax,esi
  401443:	and    DWORD PTR ds:0x413cdc,0x413d24
  40144d:	lea    eax,[eax+ecx*1+0x3272dc]
  401454:	sub    DWORD PTR ds:0x414008,0x413cd8
  40145e:	push   eax
  40145f:	sbb    DWORD PTR ds:0x413c0a,edi
  401465:	mov    eax,DWORD PTR [ebp-0x1c]
  401468:	xor    DWORD PTR ds:0x413c80,0x7b1e
  401472:	xor    eax,esi
  401474:	lea    eax,[ebp+eax*1+0x3272e4]
  40147b:	or     DWORD PTR ds:0x413c16,0x7d42
  401485:	push   eax
  401486:	mov    DWORD PTR ds:0x414018,0x19
  401490:	cmp    DWORD PTR ds:0x414018,0x0
  401497:	je     0x4014cb
  40149d:	cmp    DWORD PTR ds:0x414018,0x28
  4014a4:	jne    0x4014bb
  4014aa:	push   DWORD PTR [ebp-0x14]
  4014ad:	push   DWORD PTR [ebp-0x18]
  4014b0:	push   0x400000
  4014b5:	call   DWORD PTR ds:0x416768
  4014bb:	mov    eax,ds:0x414018
  4014c0:	dec    eax
  4014c1:	mov    ds:0x414018,eax
  4014c6:	jmp    0x401490
  4014cb:	mov    eax,ds:0x4163b4
  4014d0:	and    DWORD PTR ds:0x413c6c,0x2ac9
  4014da:	push   DWORD PTR [eax+0x1bc]
  4014e0:	call   0x40a25b
  4014e5:	mov    eax,DWORD PTR [ebp-0xc]
  4014e8:	sbb    edx,edx
  4014ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4014ed:	and    DWORD PTR ds:0x413d24,0x0
  4014f7:	mov    edx,DWORD PTR ds:0x413d24
  4014fd:	inc    edx
  4014fe:	mov    DWORD PTR ds:0x413d24,edx
  401504:	cmp    DWORD PTR ds:0x413d24,0x1c
  40150b:	jne    0x401525
  401511:	push   DWORD PTR [ebp-0x14]
  401514:	push   0x413d30
  401519:	push   DWORD PTR [ebp-0x1c]
  40151c:	push   DWORD PTR [ebp-0x24]
  40151f:	call   DWORD PTR ds:0x416770
  401525:	cmp    DWORD PTR ds:0x413d24,0x1b
  40152c:	jb     0x4014f7
  401532:	xor    eax,esi
  401534:	lea    eax,[ecx+eax*1+0x3272dc]
  40153b:	mov    ecx,DWORD PTR [ebp-0xc]
  40153e:	mov    edx,DWORD PTR [ebp-0xc]
  401541:	dec    DWORD PTR ds:0x413bf6
  401547:	xor    edx,esi
  401549:	xor    ecx,esi
  40154b:	sbb    DWORD PTR ds:0x413c1e,0x34e4
  401555:	add    ecx,edx
  401557:	and    DWORD PTR ds:0x413c02,0x0
  401561:	jmp    0x401573
  401566:	mov    edx,DWORD PTR ds:0x413c02
  40156c:	inc    edx
  40156d:	mov    DWORD PTR ds:0x413c02,edx
  401573:	cmp    DWORD PTR ds:0x413c02,0x1b
  40157a:	jae    0x4015bf
  401580:	cmp    DWORD PTR ds:0x413c02,0x1e
  401587:	jne    0x4015a7
  40158d:	push   0x413d28
  401592:	push   0x3ad3
  401597:	push   0x416152
  40159c:	push   0x416152
  4015a1:	call   DWORD PTR ds:0x416774
  4015a7:	jmp    0x401566
  4015ac:	movzx  edx,BYTE PTR ds:0x413ce8
  4015b3:	sub    edx,DWORD PTR ds:0x413c1a
  4015b9:	mov    DWORD PTR ds:0x413ce8,edx
  4015bf:	mov    edx,DWORD PTR [ebp-0xc]
  4015c2:	xor    DWORD PTR ds:0x413c80,0x413c74
  4015cc:	xor    edx,esi
  4015ce:	lea    ecx,[ecx+edx*1+0x975894]
  4015d5:	mov    DWORD PTR [ebp-0x18],eax
  4015d8:	cmp    eax,ecx
  4015da:	mov    DWORD PTR ds:0x413c7c,0x908
  4015e4:	jbe    0x40141f
  4015ea:	add    DWORD PTR ds:0x413cf4,ecx
  4015f0:	mov    eax,0xf89c85bc
  4015f5:	add    DWORD PTR ds:0x414014,ecx
  4015fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4015fe:	mov    DWORD PTR ds:0x416238,ecx
  401604:	mov    ecx,DWORD PTR [ebp+0x10]
  401607:	and    DWORD PTR ds:0x413c1a,0x0
  401611:	mov    edx,DWORD PTR ds:0x413c1a
  401617:	inc    edx
  401618:	mov    DWORD PTR ds:0x413c1a,edx
  40161e:	cmp    DWORD PTR ds:0x413c1a,0x25
  401625:	jne    0x40163e
  40162b:	push   DWORD PTR [ebp-0x1c]
  40162e:	push   0x414004
  401633:	push   0x416170
  401638:	call   DWORD PTR ds:0x416778
  40163e:	cmp    DWORD PTR ds:0x413c1a,0x19
  401645:	jb     0x401611
  40164b:	mov    DWORD PTR ds:0x41648c,ecx
  401651:	adc    DWORD PTR ds:0x413c1e,ebx
  401657:	mov    ecx,DWORD PTR ds:0x416238
  40165d:	mov    edx,DWORD PTR ds:0x414014
  401663:	xor    DWORD PTR ds:0x413c0e,edx
  401669:	mov    edx,DWORD PTR [ebp-0x48]
  40166c:	sub    ecx,edi
  40166e:	and    DWORD PTR ds:0x413cf0,0x24ff
  401678:	xor    ecx,esi
  40167a:	mov    DWORD PTR [edx],ecx
  40167c:	not    ecx
  40167e:	mov    ecx,DWORD PTR [ebp-0x20]
  401681:	mov    DWORD PTR ds:0x413c16,0x6aa9
  40168b:	cmp    ecx,ebx
  40168d:	mov    DWORD PTR ds:0x413c70,0x4e28
  401697:	jne    0x401b90
  40169d:	add    DWORD PTR ds:0x413d18,0x41400c
  4016a7:	lea    eax,[ebp-0x5c]
  4016aa:	and    DWORD PTR ds:0x413c16,0x3f2d
  4016b4:	mov    DWORD PTR [ebp-0xb0],eax
  4016ba:	lea    eax,[ebp+0x4]
  4016bd:	add    DWORD PTR ds:0x413cec,0x413d24
  4016c7:	mov    DWORD PTR [ebp-0x5c],eax
  4016ca:	mov    eax,DWORD PTR [ebp-0x5c]
  4016cd:	xor    DWORD PTR ds:0x413ce4,0x37e4
  4016d7:	test   eax,eax
  4016d9:	mov    DWORD PTR ds:0x413c7c,0x3884
  4016e3:	je     0x402663
  4016e9:	adc    DWORD PTR ds:0x413c12,ebx
  4016ef:	mov    eax,DWORD PTR [ebp-0x24]
  4016f2:	mov    eax,DWORD PTR [ebp-0xc]
  4016f5:	mov    eax,DWORD PTR [ebp-0x8]
  4016f8:	sub    ecx,0x1090
  4016fe:	mov    DWORD PTR [ebp+0xc],eax
  401701:	mov    eax,eax
  401703:	mov    eax,ds:0x4163b4
  401708:	and    DWORD PTR ds:0x413bfa,0x0
  401712:	jmp    0x401724
  401717:	mov    ecx,DWORD PTR ds:0x413bfa
  40171d:	inc    ecx
  40171e:	mov    DWORD PTR ds:0x413bfa,ecx
  401724:	cmp    DWORD PTR ds:0x413bfa,0x11
  40172b:	jae    0x401754
  401731:	cmp    DWORD PTR ds:0x413bfa,0x20
  401738:	jne    0x401749
  40173e:	push   0x4160de
  401743:	call   DWORD PTR ds:0x41677c
  401749:	jmp    0x401717
  40174e:	and    DWORD PTR ds:0x413c74,ecx
  401754:	mov    eax,DWORD PTR [eax+0x1c8]
  40175a:	and    DWORD PTR ds:0x414010,0x0
  401764:	mov    ecx,DWORD PTR ds:0x414010
  40176a:	inc    ecx
  40176b:	mov    DWORD PTR ds:0x414010,ecx
  401771:	cmp    DWORD PTR ds:0x414010,0xf
  401778:	jne    0x401791
  40177e:	push   0x413c0a
  401783:	push   DWORD PTR [ebp-0x20]
  401786:	push   0x4160b3
  40178b:	call   DWORD PTR ds:0x416780
  401791:	cmp    DWORD PTR ds:0x414010,0xe
  401798:	jne    0x4017ab
  40179e:	mov    ecx,DWORD PTR ds:0x414010
  4017a4:	inc    ecx
  4017a5:	mov    DWORD PTR ds:0x414010,ecx
  4017ab:	cmp    DWORD PTR ds:0x414010,0x1c
  4017b2:	jb     0x401764
  4017b8:	mov    DWORD PTR ds:0x413bf6,0x13
  4017c2:	cmp    DWORD PTR ds:0x413bf6,0x0
  4017c9:	je     0x401820
  4017cf:	cmp    DWORD PTR ds:0x413bf6,0x6
  4017d6:	jne    0x4017ec
  4017dc:	push   0x414018
  4017e1:	push   0x1023
  4017e6:	call   DWORD PTR ds:0x416784
  4017ec:	cmp    DWORD PTR ds:0x413bf6,0x7
  4017f3:	jne    0x401808
  4017f9:	xor    ecx,ecx
  4017fb:	add    ecx,DWORD PTR ds:0x413bf6
  401801:	dec    ecx
  401802:	mov    DWORD PTR ds:0x413bf6,ecx
  401808:	mov    ecx,DWORD PTR ds:0x413bf6
  40180e:	dec    ecx
  40180f:	mov    DWORD PTR ds:0x413bf6,ecx
  401815:	jmp    0x4017c2
  40181a:	adc    DWORD PTR ds:0x413ce8,ebx
  401820:	mov    eax,DWORD PTR [eax]
  401822:	and    DWORD PTR ds:0x414010,0x0
  40182c:	jmp    0x401840
  401831:	xor    ecx,ecx
  401833:	add    ecx,DWORD PTR ds:0x414010
  401839:	inc    ecx
  40183a:	mov    DWORD PTR ds:0x414010,ecx
  401840:	cmp    DWORD PTR ds:0x414010,0x19
  401847:	jae    0x401873
  40184d:	cmp    DWORD PTR ds:0x414010,0x27
  401854:	jne    0x401868
  40185a:	push   DWORD PTR [ebp-0x18]
  40185d:	push   0x4160de
  401862:	call   DWORD PTR ds:0x41678c
  401868:	jmp    0x401831
  40186d:	sub    DWORD PTR ds:0x413c0a,edi
  401873:	cdq    
  401874:	mov    ebx,eax
  401876:	mov    eax,0xfabdbeef
  40187b:	mov    ecx,DWORD PTR ds:0x413c1e
  401881:	or     DWORD PTR ds:0x413d1c,ecx
  401887:	add    ebx,eax
  401889:	mov    ecx,0x6f0c
  40188e:	adc    edx,0xffffffff
  401891:	and    DWORD PTR [ebp-0x10],0x0
  401895:	sub    DWORD PTR ds:0x413c6c,0x6250
  40189f:	xor    edx,0x0
  4018a2:	xor    DWORD PTR ds:0x413c84,ecx
  4018a8:	mov    DWORD PTR [ebp-0x80],edx
  4018ab:	mov    edx,DWORD PTR [ebp+0xc]
  4018ae:	mov    DWORD PTR ds:0x413c74,0x12
  4018b8:	cmp    DWORD PTR ds:0x413c74,0x0
  4018bf:	je     0x401906
  4018c5:	cmp    DWORD PTR ds:0x413c74,0x1e
  4018cc:	jne    0x4018f2
  4018d2:	push   DWORD PTR [ebp-0x24]
  4018d5:	push   0x413cd8
  4018da:	push   0x560c
  4018df:	push   0x416049
  4018e4:	push   DWORD PTR [ebp-0x18]
  4018e7:	push   0x1b95
  4018ec:	call   DWORD PTR ds:0x416790
  4018f2:	mov    ecx,DWORD PTR ds:0x413c74
  4018f8:	dec    ecx
  4018f9:	mov    DWORD PTR ds:0x413c74,ecx
  4018ff:	jmp    0x4018b8
  401904:	not    ecx
  401906:	mov    DWORD PTR [ebp-0x14],edx
  401909:	and    DWORD PTR ds:0x413c06,0x0
  401913:	jmp    0x401925
  401918:	mov    edx,DWORD PTR ds:0x413c06
  40191e:	inc    edx
  40191f:	mov    DWORD PTR ds:0x413c06,edx
  401925:	cmp    DWORD PTR ds:0x413c06,0x14
  40192c:	jae    0x401967
  401932:	cmp    DWORD PTR ds:0x413c06,0x5
  401939:	jne    0x401948
  40193f:	push   DWORD PTR [ebp-0xc]
  401942:	call   DWORD PTR ds:0x416798
  401948:	cmp    DWORD PTR ds:0x413c06,0x4
  40194f:	jne    0x401962
  401955:	mov    edx,DWORD PTR ds:0x413c06
  40195b:	inc    edx
  40195c:	mov    DWORD PTR ds:0x413c06,edx
  401962:	jmp    0x401918
  401967:	mov    ecx,0x8a29a125
  40196c:	xor    ebx,ecx
  40196e:	neg    DWORD PTR ds:0x413d18
  401974:	add    DWORD PTR [ebp-0x14],eax
  401977:	mov    DWORD PTR ds:0x414010,ebx
  40197d:	mov    edx,DWORD PTR [ebp-0x14]
  401980:	mov    DWORD PTR ds:0x41401c,0x7ba5
  40198a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40198e:	xor    edx,ecx
  401990:	add    DWORD PTR ds:0x414010,0x307
  40199a:	mov    DWORD PTR [ebp-0x78],edx
  40199d:	mov    edx,DWORD PTR [ebp-0x10]
  4019a0:	xor    edx,0x0
  4019a3:	mov    DWORD PTR ds:0x414018,0x4b60
  4019ad:	mov    DWORD PTR [ebp-0x74],edx
  4019b0:	cmp    DWORD PTR [ebp-0x78],ebx
  4019b3:	mov    DWORD PTR ds:0x413c02,0x936
  4019bd:	jne    0x4019df
  4019c3:	mov    DWORD PTR ds:0x413c0a,edx
  4019c9:	mov    edx,DWORD PTR [ebp-0x80]
  4019cc:	cmp    DWORD PTR [ebp-0x74],edx
  4019cf:	mov    DWORD PTR ds:0x413c7c,0x301a
  4019d9:	je     0x401aa0
  4019df:	and    DWORD PTR ds:0x413d34,0x0
  4019e9:	jmp    0x4019fb
  4019ee:	mov    edx,DWORD PTR ds:0x413d34
  4019f4:	inc    edx
  4019f5:	mov    DWORD PTR ds:0x413d34,edx
  4019fb:	cmp    DWORD PTR ds:0x413d34,0x16
  401a02:	jae    0x401a25
  401a08:	cmp    DWORD PTR ds:0x413d34,0x26
  401a0f:	jne    0x401a20
  401a15:	push   0x414014
  401a1a:	call   DWORD PTR ds:0x41679c
  401a20:	jmp    0x4019ee
  401a25:	mov    edx,DWORD PTR ds:0x4163b4
  401a2b:	neg    DWORD PTR ds:0x414008
  401a31:	mov    edx,DWORD PTR [edx+0x1c0]
  401a37:	mov    DWORD PTR ds:0x413bf6,0x5ff4
  401a41:	mov    edx,DWORD PTR [edx]
  401a43:	and    DWORD PTR ds:0x413ce0,0x41400c
  401a4d:	xor    ebx,ebx
  401a4f:	add    edx,eax
  401a51:	mov    DWORD PTR ds:0x413c78,0x3f53
  401a5b:	adc    ebx,0xffffffff
  401a5e:	and    DWORD PTR ds:0x413c02,0x1b79
  401a68:	xor    edx,ecx
  401a6a:	add    DWORD PTR ds:0x413ce0,0x413c6c
  401a74:	xor    ebx,0x0
  401a77:	mov    DWORD PTR ds:0x413bfa,0x4fab
  401a81:	cmp    edx,0x70941fd5
  401a87:	mov    DWORD PTR ds:0x413d2c,0x7f9c
  401a91:	jne    0x402663
  401a97:	cmp    ebx,0xffffffff
  401a9a:	jne    0x402663
  401aa0:	mov    edx,DWORD PTR ds:0x416430
  401aa6:	add    DWORD PTR ds:0x413cdc,0x3946
  401ab0:	mov    ebx,DWORD PTR ds:0x416438
  401ab6:	and    DWORD PTR ds:0x413c80,0x3ee6
  401ac0:	xor    edx,ebx
  401ac2:	mov    DWORD PTR ds:0x414000,0x16
  401acc:	cmp    DWORD PTR ds:0x414000,0x0
  401ad3:	je     0x401b12
  401ad9:	cmp    DWORD PTR ds:0x414000,0x26
  401ae0:	jne    0x401af6
  401ae6:	push   0x413c84
  401aeb:	push   0x56a1
  401af0:	call   DWORD PTR ds:0x41675c
  401af6:	mov    ebx,DWORD PTR ds:0x414000
  401afc:	dec    ebx
  401afd:	mov    DWORD PTR ds:0x414000,ebx
  401b03:	jmp    0x401acc
  401b08:	add    DWORD PTR ds:0x413c84,0x1062
  401b12:	mov    DWORD PTR ds:0x416430,edx
  401b18:	mov    ebx,DWORD PTR ds:0x416430
  401b1e:	and    DWORD PTR ds:0x413d20,0x0
  401b28:	jmp    0x401b3a
  401b2d:	mov    edx,DWORD PTR ds:0x413d20
  401b33:	inc    edx
  401b34:	mov    DWORD PTR ds:0x413d20,edx
  401b3a:	cmp    DWORD PTR ds:0x413d20,0x1a
  401b41:	jae    0x401b72
  401b47:	cmp    DWORD PTR ds:0x413d20,0x25
  401b4e:	jne    0x401b67
  401b54:	push   DWORD PTR [ebp-0x24]
  401b57:	push   0x413d1c
  401b5c:	push   0x7dc0
  401b61:	call   DWORD PTR ds:0x416760
  401b67:	jmp    0x401b2d
  401b6c:	adc    DWORD PTR ds:0x413bfe,edi
  401b72:	mov    edx,DWORD PTR [ebp-0x5c]
  401b75:	xor    DWORD PTR ds:0x413c7c,0x413c1e
  401b7f:	add    DWORD PTR [edx],ebx
  401b81:	mov    DWORD PTR ds:0x414010,0x3837
  401b8b:	jmp    0x402624
  401b90:	mov    DWORD PTR ds:0x41401c,0x671d
  401b9a:	mov    ecx,DWORD PTR [ebp-0x60]
  401b9d:	mov    DWORD PTR ds:0x413c02,0x3bc3
  401ba7:	cmp    ecx,0xf89c85b1
  401bad:	je     0x401d26
  401bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  401bb6:	mov    edx,DWORD PTR [ebp-0x54]
  401bb9:	or     DWORD PTR ds:0x413c1a,0x413cdc
  401bc3:	xor    ecx,esi
  401bc5:	add    ecx,edi
  401bc7:	cmp    ecx,edx
  401bc9:	je     0x401d26
  401bcf:	mov    DWORD PTR ds:0x413d28,0x18
  401bd9:	cmp    DWORD PTR ds:0x413d28,0x0
  401be0:	je     0x401c32
  401be6:	cmp    DWORD PTR ds:0x413d28,0xa
  401bed:	jne    0x401c07
  401bf3:	push   0x7420
  401bf8:	push   DWORD PTR [ebp-0xc]
  401bfb:	push   DWORD PTR [ebp-0x20]
  401bfe:	push   DWORD PTR [ebp-0x14]
  401c01:	call   DWORD PTR ds:0x416764
  401c07:	cmp    DWORD PTR ds:0x413d28,0xb
  401c0e:	jne    0x401c1f
  401c14:	mov    eax,ds:0x413d28
  401c19:	dec    eax
  401c1a:	mov    ds:0x413d28,eax
  401c1f:	xor    eax,eax
  401c21:	add    eax,DWORD PTR ds:0x413d28
  401c27:	dec    eax
  401c28:	mov    ds:0x413d28,eax
  401c2d:	jmp    0x401bd9
  401c32:	mov    eax,ds:0x4163b4
  401c37:	mov    DWORD PTR ds:0x413c88,0x7ef
  401c41:	mov    eax,DWORD PTR [eax+0x194]
  401c47:	mov    ecx,DWORD PTR [eax]
  401c49:	mov    eax,DWORD PTR [ecx+0x3c]
  401c4c:	adc    DWORD PTR ds:0x413c74,0x414014
  401c56:	push   DWORD PTR ds:0x41648c
  401c5c:	add    DWORD PTR ds:0x413c1e,0x413d24
  401c66:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c6a:	push   DWORD PTR ds:0x416238
  401c70:	add    DWORD PTR ds:0x414000,0x414014
  401c7a:	add    eax,ecx
  401c7c:	mov    DWORD PTR ds:0x413d1c,0x15
  401c86:	cmp    DWORD PTR ds:0x413d1c,0x0
  401c8d:	je     0x401ce5
  401c93:	cmp    DWORD PTR ds:0x413d1c,0x3
  401c9a:	jne    0x401cb1
  401ca0:	push   0x8408
  401ca5:	push   DWORD PTR [ebp-0x24]
  401ca8:	push   DWORD PTR [ebp-0x1c]
  401cab:	call   DWORD PTR ds:0x416768
  401cb1:	cmp    DWORD PTR ds:0x413d1c,0x4
  401cb8:	jne    0x401ccb
  401cbe:	mov    ecx,DWORD PTR ds:0x413d1c
  401cc4:	dec    ecx
  401cc5:	mov    DWORD PTR ds:0x413d1c,ecx
  401ccb:	xor    ecx,ecx
  401ccd:	or     ecx,DWORD PTR ds:0x413d1c
  401cd3:	dec    ecx
  401cd4:	mov    DWORD PTR ds:0x413d1c,ecx
  401cda:	jmp    0x401c86
  401cdf:	add    DWORD PTR ds:0x413bfa,ecx
  401ce5:	mov    ecx,DWORD PTR ds:0x4163b4
  401ceb:	mov    ecx,DWORD PTR [ecx+0x194]
  401cf1:	or     DWORD PTR ds:0x414000,0x5329
  401cfb:	push   DWORD PTR [ecx]
  401cfd:	call   eax
  401cff:	mov    ecx,DWORD PTR ds:0x4163b4
  401d05:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d0b:	mov    DWORD PTR ds:0x413c78,0x5666
  401d15:	mov    DWORD PTR [ecx],eax
  401d17:	mov    DWORD PTR ds:0x413d24,0x5c21
  401d21:	jmp    0x402663
  401d26:	adc    edx,DWORD PTR ds:0x413cf0
  401d2c:	mov    ecx,DWORD PTR [ebp-0x8]
  401d2f:	sub    edx,DWORD PTR ds:0x413c70
  401d35:	mov    edx,DWORD PTR [ebp-0xa4]
  401d3b:	and    DWORD PTR ds:0x413ce4,0x413c06
  401d45:	xor    ecx,esi
  401d47:	sub    DWORD PTR ds:0x413d20,0x413d28
  401d51:	add    ecx,edi
  401d53:	cmp    ecx,edx
  401d55:	jne    0x40234f
  401d5b:	add    edx,ecx
  401d5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401d60:	movzx  edx,WORD PTR ds:0x413ce8
  401d67:	sbb    DWORD PTR ds:0x413d20,edx
  401d6d:	mov    edx,DWORD PTR ds:0x4163b4
  401d73:	adc    DWORD PTR ds:0x413c12,0x5f59
  401d7d:	mov    edx,DWORD PTR [edx+0x198]
  401d83:	xor    ecx,esi
  401d85:	sbb    DWORD PTR ds:0x413ce8,0x413c16
  401d8f:	add    ecx,edi
  401d91:	cmp    ecx,DWORD PTR [edx]
  401d93:	mov    DWORD PTR ds:0x413ce8,0x77fb
  401d9d:	jne    0x401e78
  401da3:	and    DWORD PTR ds:0x414000,0x0
  401dad:	jmp    0x401dbf
  401db2:	mov    ecx,DWORD PTR ds:0x414000
  401db8:	inc    ecx
  401db9:	mov    DWORD PTR ds:0x414000,ecx
  401dbf:	cmp    DWORD PTR ds:0x414000,0x1b
  401dc6:	jae    0x401e12
  401dcc:	cmp    DWORD PTR ds:0x414000,0xb
  401dd3:	jne    0x401ded
  401dd9:	push   DWORD PTR [ebp-0x1c]
  401ddc:	push   0x413c78
  401de1:	push   DWORD PTR [ebp-0x14]
  401de4:	push   DWORD PTR [ebp-0x14]
  401de7:	call   DWORD PTR ds:0x416770
  401ded:	cmp    DWORD PTR ds:0x414000,0xa
  401df4:	jne    0x401e07
  401dfa:	mov    ecx,DWORD PTR ds:0x414000
  401e00:	inc    ecx
  401e01:	mov    DWORD PTR ds:0x414000,ecx
  401e07:	jmp    0x401db2
  401e0c:	xor    ecx,DWORD PTR ds:0x413c7c
  401e12:	mov    ecx,DWORD PTR [ebp-0x8]
  401e15:	and    DWORD PTR ds:0x413d34,0x54e0
  401e1f:	push   ebx
  401e20:	xor    ecx,esi
  401e22:	mov    DWORD PTR ds:0x413cec,0x48d
  401e2c:	add    ecx,edi
  401e2e:	xor    DWORD PTR ds:0x413ce4,0x413bf6
  401e38:	push   ecx
  401e39:	xor    DWORD PTR ds:0x413c74,0x7d0d
  401e43:	push   eax
  401e44:	and    DWORD PTR ds:0x413ce8,0xad4
  401e4e:	push   DWORD PTR [ebp-0xc]
  401e51:	adc    DWORD PTR ds:0x413cf4,0x414018
  401e5b:	push   DWORD PTR [ebp-0x8]
  401e5e:	sbb    DWORD PTR ds:0x413bf6,0x21c1
  401e68:	call   0x405399
  401e6d:	add    eax,DWORD PTR ds:0x41401c
  401e73:	mov    eax,0xf89c85bc
  401e78:	mov    ecx,DWORD PTR [ebp-0xc]
  401e7b:	sub    edx,DWORD PTR ds:0x413bfe
  401e81:	mov    DWORD PTR [ebp-0x18],ecx
  401e84:	or     ecx,DWORD PTR ds:0x413d2c
  401e8a:	mov    ecx,DWORD PTR [ebp-0x8]
  401e8d:	sub    DWORD PTR ds:0x413d1c,edi
  401e93:	mov    DWORD PTR [ebp-0x20],ecx
  401e96:	adc    ecx,0x6924
  401e9c:	mov    ecx,DWORD PTR [ebp-0x20]
  401e9f:	xor    ecx,esi
  401ea1:	mov    edx,DWORD PTR ds:0x413c74
  401ea7:	sub    DWORD PTR ds:0x413c02,edx
  401ead:	add    ecx,edi
  401eaf:	adc    edx,DWORD PTR ds:0x41401c
  401eb5:	mov    DWORD PTR [ebp+0x10],ecx
  401eb8:	mov    DWORD PTR ds:0x413c6c,0x13
  401ec2:	cmp    DWORD PTR ds:0x413c6c,0x0
  401ec9:	je     0x401f6c
  401ecf:	cmp    DWORD PTR ds:0x413c6c,0x7
  401ed6:	jne    0x401ef6
  401edc:	push   0x413d34
  401ee1:	push   0x7095
  401ee6:	push   0x4161ce
  401eeb:	push   0x4161ce
  401ef0:	call   DWORD PTR ds:0x416774
  401ef6:	cmp    DWORD PTR ds:0x413c6c,0x8
  401efd:	jne    0x401f10
  401f03:	mov    ecx,DWORD PTR ds:0x413c6c
  401f09:	dec    ecx
  401f0a:	mov    DWORD PTR ds:0x413c6c,ecx
  401f10:	mov    ecx,DWORD PTR ds:0x413c6c
  401f16:	dec    ecx
  401f17:	mov    DWORD PTR ds:0x413c6c,ecx
  401f1d:	jmp    0x401ec2
  401f22:	and    DWORD PTR ds:0x413c1a,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x413c1a
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x413c1a,ecx
  401f39:	cmp    DWORD PTR ds:0x413c1a,0x1f
  401f40:	jne    0x401f59
  401f46:	push   DWORD PTR [ebp-0x10]
  401f49:	push   0x413cdc
  401f4e:	push   0x4161a0
  401f53:	call   DWORD PTR ds:0x416778
  401f59:	cmp    DWORD PTR ds:0x413c1a,0x1a
  401f60:	jb     0x401f2c
  401f66:	inc    DWORD PTR ds:0x413c1e
  401f6c:	mov    ecx,DWORD PTR ds:0x416234
  401f72:	mov    ecx,DWORD PTR [ecx]
  401f74:	mov    DWORD PTR [ebp+0x10],ecx
  401f77:	mov    ecx,DWORD PTR ds:0x41643c
  401f7d:	mov    ecx,DWORD PTR [ecx]
  401f7f:	mov    DWORD PTR [ebp-0x1c],ecx
  401f82:	mov    edx,DWORD PTR ds:0x414014
  401f88:	sbb    DWORD PTR ds:0x413d34,edx
  401f8e:	mov    DWORD PTR [ebp+0xc],0xf89c87b0
  401f95:	mov    ecx,DWORD PTR [ebp+0xc]
  401f98:	xor    ecx,esi
  401f9a:	dec    DWORD PTR ds:0x413d24
  401fa0:	add    ecx,edi
  401fa2:	mov    edx,DWORD PTR ds:0x414010
  401fa8:	sbb    DWORD PTR ds:0x413bf6,edx
  401fae:	mov    DWORD PTR [ebp+0xc],ecx
  401fb1:	mov    ecx,DWORD PTR ds:0x4163b4
  401fb7:	or     edx,DWORD PTR ds:0x413c84
  401fbd:	mov    DWORD PTR [ebp+0xc],ecx
  401fc0:	mov    ecx,DWORD PTR [ebp+0x10]
  401fc3:	and    edx,DWORD PTR ds:0x413d20
  401fc9:	mov    DWORD PTR [ebp+0xc],ecx
  401fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  401fcf:	push   0x4
  401fd1:	sbb    edx,0xf5
  401fd7:	pop    edx
  401fd8:	or     DWORD PTR ds:0x413bfe,0x38f7
  401fe2:	sub    edx,ecx
  401fe4:	add    edx,DWORD PTR [ebp-0x1c]
  401fe7:	xor    DWORD PTR ds:0x413c88,0x413cec
  401ff1:	mov    DWORD PTR [ebp-0x48],0xf89c85f0
  401ff8:	mov    DWORD PTR [ebp+0x10],edx
  401ffb:	mov    DWORD PTR [ebp-0x108],eax
  402001:	mov    eax,DWORD PTR [ebp+0xc]
  402004:	mov    DWORD PTR [ebp-0x104],eax
  40200a:	mov    eax,DWORD PTR [ebp+0x10]
  40200d:	mov    DWORD PTR [ebp-0x100],eax
  402013:	mov    eax,DWORD PTR [ebp-0x48]
  402016:	xor    eax,esi
  402018:	add    eax,edi
  40201a:	mov    DWORD PTR [ebp-0xfc],eax
  402020:	lea    eax,[ebp-0xb8]
  402026:	mov    DWORD PTR [ebp-0xf8],eax
  40202c:	mov    eax,DWORD PTR [ebp-0x108]
  402032:	xor    eax,esi
  402034:	add    eax,edi
  402036:	mov    DWORD PTR [ebp-0x108],eax
  40203c:	lea    eax,[ebp-0x108]
  402042:	push   eax
  402043:	mov    eax,DWORD PTR [ebp-0x18]
  402046:	xor    eax,esi
  402048:	add    eax,edi
  40204a:	push   eax
  40204b:	mov    eax,ds:0x4163d4
  402050:	push   0x41632a
  402055:	push   DWORD PTR [eax]
  402057:	call   0x402798
  40205c:	mov    eax,DWORD PTR [ebp+0xc]
  40205f:	mov    ecx,DWORD PTR [ebp+0x10]
  402062:	mov    DWORD PTR [ebp-0xa8],ecx
  402068:	mov    ecx,DWORD PTR [ebp-0x20]
  40206b:	xor    ecx,esi
  40206d:	mov    DWORD PTR [ebp-0x1c],eax
  402070:	add    ecx,edi
  402072:	jmp    0x4022ea
  402077:	lea    edx,[ecx+eax*1]
  40207a:	mov    DWORD PTR [ebp+0x10],edx
  40207d:	mov    edx,DWORD PTR [ebp-0xa8]
  402083:	sub    edx,ecx
  402085:	mov    DWORD PTR [ebp+0xc],edx
  402088:	mov    edx,DWORD PTR [ebp+0xc]
  40208b:	mov    DWORD PTR [ebp-0x6c],edx
  40208e:	mov    edx,DWORD PTR [ebp+0x10]
  402091:	mov    DWORD PTR [ebp-0x68],ebx
  402094:	mov    DWORD PTR [ebp-0x80],edx
  402097:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  40209e:	mov    edx,DWORD PTR [ebp-0x68]
  4020a1:	xor    edx,esi
  4020a3:	add    edx,edi
  4020a5:	mov    DWORD PTR [ebp+0x10],edx
  4020a8:	mov    edx,DWORD PTR [ebp-0x68]
  4020ab:	xor    edx,esi
  4020ad:	add    edx,edi
  4020af:	mov    DWORD PTR [ebp+0xc],edx
  4020b2:	mov    DWORD PTR [ebp-0x88],0xf89c85d0
  4020bc:	mov    DWORD PTR [ebp-0x8c],0xf89c85bf
  4020c6:	mov    edx,DWORD PTR [ebp-0x68]
  4020c9:	mov    ebx,DWORD PTR [ebp-0x6c]
  4020cc:	xor    edx,esi
  4020ce:	add    edx,edi
  4020d0:	cmp    ebx,edx
  4020d2:	je     0x4022d9
  4020d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4020db:	xor    eax,esi
  4020dd:	mov    edx,0xffcd8d24
  4020e2:	sub    edx,eax
  4020e4:	add    edx,DWORD PTR [ebp-0x6c]
  4020e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4020ea:	mov    ebx,DWORD PTR [ebp+0x10]
  4020ed:	xor    eax,esi
  4020ef:	add    eax,edi
  4020f1:	imul   eax,ebx
  4020f4:	cmp    eax,edx
  4020f6:	ja     0x4022d6
  4020fc:	mov    edx,DWORD PTR [ebp+0x10]
  4020ff:	mov    eax,DWORD PTR [ebp-0x6c]
  402102:	mov    ebx,DWORD PTR [ebp-0x88]
  402108:	sub    eax,edx
  40210a:	xor    ebx,esi
  40210c:	xor    edx,edx
  40210e:	add    ebx,edi
  402110:	div    ebx
  402112:	mov    DWORD PTR [ebp+0xc],eax
  402115:	mov    eax,DWORD PTR [ebp-0x8c]
  40211b:	mov    edx,DWORD PTR [ebp+0xc]
  40211e:	xor    eax,esi
  402120:	add    eax,edi
  402122:	cmp    edx,eax
  402124:	jbe    0x402137
  40212a:	mov    eax,DWORD PTR [ebp-0x8c]
  402130:	xor    eax,esi
  402132:	add    eax,edi
  402134:	mov    DWORD PTR [ebp+0xc],eax
  402137:	mov    eax,DWORD PTR [ebp-0x88]
  40213d:	mov    edx,DWORD PTR [ebp+0xc]
  402140:	xor    eax,esi
  402142:	add    eax,edi
  402144:	imul   eax,edx
  402147:	mov    DWORD PTR [ebp+0xc],eax
  40214a:	mov    eax,DWORD PTR [ebp-0x68]
  40214d:	mov    edx,DWORD PTR [ebp+0xc]
  402150:	xor    eax,esi
  402152:	add    eax,edi
  402154:	cmp    edx,eax
  402156:	je     0x4022bf
  40215c:	mov    eax,DWORD PTR [ebp+0xc]
  40215f:	mov    DWORD PTR [ebp-0x28],eax
  402162:	mov    eax,DWORD PTR [ebp+0x10]
  402165:	add    eax,DWORD PTR [ebp-0x80]
  402168:	mov    DWORD PTR [ebp-0x48],0xf89c85b0
  40216f:	mov    DWORD PTR [ebp-0x44],eax
  402172:	mov    eax,0xf89c85b1
  402177:	mov    DWORD PTR [ebp-0x7c],eax
  40217a:	mov    DWORD PTR [ebp-0x74],0xf89c85b2
  402181:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402188:	mov    DWORD PTR [ebp-0x3c],eax
  40218b:	mov    eax,DWORD PTR [ebp-0x48]
  40218e:	xor    eax,esi
  402190:	add    eax,edi
  402192:	jmp    0x40227b
  402197:	mov    DWORD PTR [ebp-0x98],0xf89c85b9
  4021a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4021a4:	mov    edx,DWORD PTR [ebp+0xc]
  4021a7:	xor    eax,esi
  4021a9:	add    eax,edi
  4021ab:	imul   eax,edx
  4021ae:	mov    edx,DWORD PTR [ebp-0x44]
  4021b1:	mov    al,BYTE PTR [eax+edx*1]
  4021b4:	mov    BYTE PTR [ebp-0x1],al
  4021b7:	mov    eax,DWORD PTR [ebp-0x3c]
  4021ba:	mov    edx,DWORD PTR [ebp+0xc]
  4021bd:	xor    eax,esi
  4021bf:	add    eax,edi
  4021c1:	imul   eax,edx
  4021c4:	mov    edx,DWORD PTR [ebp-0x74]
  4021c7:	xor    edx,esi
  4021c9:	add    eax,edx
  4021cb:	mov    edx,DWORD PTR [ebp-0x44]
  4021ce:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  4021d6:	mov    edx,DWORD PTR [ebp-0x98]
  4021dc:	xor    edx,esi
  4021de:	lea    eax,[edx+eax*1+0x3272dc]
  4021e5:	movzx  edx,BYTE PTR [ebp-0x1]
  4021e9:	xor    edx,eax
  4021eb:	mov    BYTE PTR [ebp-0x1],dl
  4021ee:	mov    al,BYTE PTR [ebp-0x1]
  4021f1:	mov    edx,DWORD PTR [ebp-0x3c]
  4021f4:	mov    ebx,DWORD PTR [ebp+0xc]
  4021f7:	xor    edx,esi
  4021f9:	add    edx,edi
  4021fb:	imul   edx,ebx
  4021fe:	mov    ebx,DWORD PTR [ebp-0x44]
  402201:	mov    BYTE PTR [edx+ebx*1],al
  402204:	mov    eax,DWORD PTR [ebp-0x3c]
  402207:	mov    edx,DWORD PTR [ebp+0xc]
  40220a:	xor    eax,esi
  40220c:	add    eax,edi
  40220e:	imul   eax,edx
  402211:	mov    edx,DWORD PTR [ebp-0x44]
  402214:	mov    al,BYTE PTR [eax+edx*1]
  402217:	mov    BYTE PTR [ebp-0x1],al
  40221a:	mov    eax,DWORD PTR [ebp-0x3c]
  40221d:	mov    edx,DWORD PTR [ebp+0xc]
  402220:	xor    eax,esi
  402222:	add    eax,edi
  402224:	imul   eax,edx
  402227:	mov    edx,DWORD PTR [ebp-0x7c]
  40222a:	xor    edx,esi
  40222c:	add    eax,edx
  40222e:	mov    edx,DWORD PTR [ebp-0x44]
  402231:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  402239:	mov    edx,DWORD PTR [ebp-0xc4]
  40223f:	xor    edx,esi
  402241:	lea    eax,[edx+eax*1+0x3272dc]
  402248:	movzx  edx,BYTE PTR [ebp-0x1]
  40224c:	xor    edx,eax
  40224e:	mov    BYTE PTR [ebp-0x1],dl
  402251:	mov    al,BYTE PTR [ebp-0x1]
  402254:	mov    edx,DWORD PTR [ebp-0x3c]
  402257:	mov    ebx,DWORD PTR [ebp+0xc]
  40225a:	xor    edx,esi
  40225c:	add    edx,edi
  40225e:	imul   edx,ebx
  402261:	mov    ebx,DWORD PTR [ebp-0x44]
  402264:	mov    BYTE PTR [edx+ebx*1],al
  402267:	mov    eax,DWORD PTR [ebp-0x10]
  40226a:	mov    edx,DWORD PTR [ebp-0x7c]
  40226d:	xor    eax,esi
  40226f:	xor    edx,esi
  402271:	add    eax,edi
  402273:	add    edx,edi
  402275:	imul   eax,edx
  402278:	add    eax,DWORD PTR [ebp+0xc]
  40227b:	mov    DWORD PTR [ebp+0xc],eax
  40227e:	mov    eax,DWORD PTR [ebp+0xc]
  402281:	mov    edx,DWORD PTR [ebp-0x28]
  402284:	cmp    edx,eax
  402286:	jb     0x402197
  40228c:	mov    eax,DWORD PTR [ebp-0x7c]
  40228f:	mov    edx,DWORD PTR [ebp-0x28]
  402292:	xor    eax,esi
  402294:	add    eax,edi
  402296:	imul   eax,edx
  402299:	mov    edx,DWORD PTR [ebp-0x48]
  40229c:	xor    edx,esi
  40229e:	add    edx,edi
  4022a0:	or     eax,edx
  4022a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4022a5:	xor    edx,esi
  4022a7:	add    eax,edx
  4022a9:	mov    edx,DWORD PTR [ebp-0x2c]
  4022ac:	xor    edx,esi
  4022ae:	add    eax,edx
  4022b0:	mov    edx,DWORD PTR [ebp+0x10]
  4022b3:	lea    eax,[eax+edx*1+0x64e5b8]
  4022ba:	jmp    0x4022ce
  4022bf:	mov    eax,DWORD PTR [ebp-0x2c]
  4022c2:	mov    edx,DWORD PTR [ebp+0x10]
  4022c5:	xor    eax,esi
  4022c7:	lea    eax,[eax+edx*1+0x3272dc]
  4022ce:	mov    DWORD PTR [ebp+0x10],eax
  4022d1:	jmp    0x4020d8
  4022d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4022d9:	mov    edx,DWORD PTR [ebp-0x18]
  4022dc:	xor    edx,esi
  4022de:	mov    ebx,0xf89c85b0
  4022e3:	lea    ecx,[ecx+edx*1+0x3272dc]
  4022ea:	lea    edx,[ecx-0x3272dc]
  4022f0:	xor    edx,esi
  4022f2:	cmp    edx,0xf89c95b0
  4022f8:	jne    0x402077
  4022fe:	mov    ecx,DWORD PTR [ebp-0x20]
  402301:	xor    ecx,esi
  402303:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40230a:	mov    BYTE PTR [ebp+0xf],cl
  40230d:	mov    ecx,DWORD PTR [ebp-0x18]
  402310:	mov    edx,DWORD PTR [ebp-0x20]
  402313:	xor    ecx,esi
  402315:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40231c:	xor    edx,esi
  40231e:	mov    BYTE PTR [edx+eax*1+0x3272dc],cl
  402325:	mov    ecx,DWORD PTR [ebp-0x18]
  402328:	mov    dl,BYTE PTR [ebp+0xf]
  40232b:	xor    ecx,esi
  40232d:	mov    BYTE PTR [ecx+eax*1+0x3272dc],dl
  402334:	mov    eax,DWORD PTR [ebp-0x18]
  402337:	mov    eax,DWORD PTR [ebp-0x8]
  40233a:	xor    eax,esi
  40233c:	add    eax,edi
  40233e:	mov    ds:0x416438,eax
  402343:	mov    eax,DWORD PTR [ebp-0x8]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	mov    ds:0x416430,eax
  40234f:	lea    eax,[ebp-0x40]
  402352:	mov    DWORD PTR [ebp-0xc0],eax
  402358:	lea    eax,[ebp+0x4]
  40235b:	mov    DWORD PTR [ebp-0x40],eax
  40235e:	mov    eax,DWORD PTR [ebp-0x40]
  402361:	test   eax,eax
  402363:	je     0x402663
  402369:	mov    eax,ds:0x4163b4
  40236e:	mov    DWORD PTR [ebp+0xc],0xf152c39
  402375:	mov    DWORD PTR [ebp+0xc],0x712ed0e
  40237c:	mov    DWORD PTR [ebp+0xc],0x373fc28
  402383:	mov    DWORD PTR [ebp+0xc],0x72670a18
  40238a:	mov    DWORD PTR [ebp+0x10],eax
  40238d:	mov    eax,ds:0x4164c0
  402392:	mov    DWORD PTR [ebp-0xac],eax
  402398:	and    DWORD PTR [ebp-0x90],0x0
  40239f:	mov    DWORD PTR [ebp+0xc],ebx
  4023a2:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4023a9:	mov    eax,DWORD PTR [ebp-0x58]
  4023ac:	mov    ecx,DWORD PTR [ebp-0x58]
  4023af:	xor    eax,ecx
  4023b1:	mov    DWORD PTR [ebp-0x58],eax
  4023b4:	or     DWORD PTR [ebp-0x58],0xf89cb5b0
  4023bb:	mov    eax,DWORD PTR [ebp-0x70]
  4023be:	mov    ecx,DWORD PTR [ebp-0x70]
  4023c1:	xor    eax,ecx
  4023c3:	mov    DWORD PTR [ebp-0x70],eax
  4023c6:	add    DWORD PTR [ebp-0x70],0xf89f05b0
  4023cd:	mov    eax,DWORD PTR [ebp-0x50]
  4023d0:	mov    ecx,DWORD PTR [ebp-0x50]
  4023d3:	xor    eax,ecx
  4023d5:	mov    DWORD PTR [ebp-0x50],eax
  4023d8:	add    DWORD PTR [ebp-0x50],0xf89c85f0
  4023df:	mov    eax,DWORD PTR [ebp-0x64]
  4023e2:	mov    ecx,DWORD PTR [ebp-0x64]
  4023e5:	xor    eax,ecx
  4023e7:	mov    DWORD PTR [ebp-0x64],eax
  4023ea:	add    DWORD PTR [ebp-0x64],0xf89c85d0
  4023f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4023f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4023f7:	xor    eax,ecx
  4023f9:	mov    DWORD PTR [ebp-0x4c],eax
  4023fc:	mov    eax,DWORD PTR [ebp+0xc]
  4023ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  402402:	xor    eax,esi
  402404:	add    eax,edi
  402406:	xor    eax,ecx
  402408:	mov    DWORD PTR [ebp-0x4c],eax
  40240b:	mov    eax,DWORD PTR [ebp-0x30]
  40240e:	mov    ecx,DWORD PTR [ebp-0x30]
  402411:	sub    eax,ecx
  402413:	mov    DWORD PTR [ebp-0x30],eax
  402416:	add    DWORD PTR [ebp-0x30],0xf89c85bd
  40241d:	mov    al,BYTE PTR [ebp-0x2]
  402420:	movzx  ecx,BYTE PTR [ebp-0x2]
  402424:	movzx  eax,al
  402427:	sub    eax,ecx
  402429:	mov    BYTE PTR [ebp-0x2],al
  40242c:	movzx  eax,BYTE PTR [ebp-0x2]
  402430:	xor    eax,0xffffff85
  402433:	mov    BYTE PTR [ebp-0x2],al
  402436:	mov    eax,DWORD PTR [ebp+0xc]
  402439:	xor    eax,esi
  40243b:	add    eax,edi
  40243d:	mov    DWORD PTR [ebp-0x4c],eax
  402440:	lea    eax,[ebp-0x9c]
  402446:	mov    DWORD PTR [ebp-0xa0],eax
  40244c:	lea    eax,[ebp-0xa0]
  402452:	mov    DWORD PTR [ebp-0x94],eax
  402458:	lea    eax,[ebp-0x94]
  40245e:	mov    DWORD PTR [ebp-0x38],eax
  402461:	lea    eax,[ebp-0x38]
  402464:	mov    DWORD PTR [ebp-0xb4],eax
  40246a:	mov    eax,DWORD PTR [ebp-0x50]
  40246d:	xor    eax,esi
  40246f:	add    eax,edi
  402471:	push   eax
  402472:	mov    eax,DWORD PTR [ebp-0x58]
  402475:	xor    eax,esi
  402477:	add    eax,edi
  402479:	push   eax
  40247a:	mov    eax,DWORD PTR [ebp-0x30]
  40247d:	xor    eax,esi
  40247f:	add    eax,edi
  402481:	push   eax
  402482:	lea    eax,[ebp-0x14c]
  402488:	push   eax
  402489:	push   DWORD PTR [ebp+0xc]
  40248c:	push   DWORD PTR [ebp-0x28]
  40248f:	call   0x407c50
  402494:	test   eax,eax
  402496:	je     0x4024ca
  40249c:	lea    eax,[ebp-0x14c]
  4024a2:	push   eax
  4024a3:	mov    eax,DWORD PTR [ebp-0x28]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	push   eax
  4024ab:	mov    eax,DWORD PTR [ebp+0x10]
  4024ae:	add    eax,0xaa
  4024b3:	push   eax
  4024b4:	mov    eax,DWORD PTR [ebp+0x10]
  4024b7:	mov    eax,DWORD PTR [eax+0x198]
  4024bd:	push   DWORD PTR [eax]
  4024bf:	call   0x402798
  4024c4:	mov    DWORD PTR [ebp-0x9c],eax
  4024ca:	lea    eax,[ebp+0x4]
  4024cd:	mov    DWORD PTR [ebp-0x90],eax
  4024d3:	mov    eax,DWORD PTR [ebp-0x38]
  4024d6:	mov    eax,DWORD PTR [eax]
  4024d8:	mov    eax,DWORD PTR [eax]
  4024da:	mov    eax,DWORD PTR [eax]
  4024dc:	test   eax,eax
  4024de:	je     0x402565
  4024e4:	lea    eax,[ebp-0x34]
  4024e7:	mov    DWORD PTR [ebp-0xbc],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0xac]
  4024f3:	mov    DWORD PTR [ebp-0x34],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x38]
  4024f9:	mov    eax,DWORD PTR [eax]
  4024fb:	mov    eax,DWORD PTR [eax]
  4024fd:	mov    eax,DWORD PTR [eax]
  4024ff:	sub    DWORD PTR [ebp-0x34],eax
  402502:	mov    ecx,DWORD PTR [ebp-0x30]
  402505:	xor    ecx,esi
  402507:	mov    eax,0xffcd8d24
  40250c:	sub    eax,ecx
  40250e:	add    DWORD PTR [ebp-0x34],eax
  402511:	mov    eax,DWORD PTR [ebp-0x34]
  402514:	mov    ecx,DWORD PTR [ebp-0x38]
  402517:	mov    ecx,DWORD PTR [ecx]
  402519:	mov    ecx,DWORD PTR [ecx]
  40251b:	mov    ecx,DWORD PTR [ecx]
  40251d:	mov    DWORD PTR [ecx+0x1],eax
  402520:	mov    al,BYTE PTR [ebp-0x2]
  402523:	mov    ecx,DWORD PTR [ebp-0x38]
  402526:	mov    ecx,DWORD PTR [ecx]
  402528:	mov    ecx,DWORD PTR [ecx]
  40252a:	mov    ecx,DWORD PTR [ecx]
  40252c:	push   DWORD PTR [ebp+0x10]
  40252f:	xor    al,0x70
  402531:	sub    al,0xc
  402533:	mov    BYTE PTR [ecx],al
  402535:	mov    eax,ds:0x416230
  40253a:	push   DWORD PTR [eax]
  40253c:	push   DWORD PTR ds:0x41648c
  402542:	push   DWORD PTR ds:0x416238
  402548:	push   DWORD PTR ds:0x41646c
  40254e:	push   DWORD PTR ds:0x416510
  402554:	push   DWORD PTR [ebp-0x28]
  402557:	push   DWORD PTR [ebp+0xc]
  40255a:	mov    eax,DWORD PTR [ebp-0x38]
  40255d:	mov    eax,DWORD PTR [eax]
  40255f:	mov    eax,DWORD PTR [eax]
  402561:	mov    eax,DWORD PTR [eax]
  402563:	call   eax
  402565:	mov    eax,DWORD PTR [ebp-0x24]
  402568:	mov    eax,DWORD PTR [ebp-0xc]
  40256b:	mov    eax,DWORD PTR [ebp-0x8]
  40256e:	mov    DWORD PTR [ebp+0xc],eax
  402571:	mov    eax,eax
  402573:	mov    eax,ds:0x4163b4
  402578:	mov    eax,DWORD PTR [eax+0x1c8]
  40257e:	mov    eax,DWORD PTR [eax]
  402580:	cdq    
  402581:	mov    ebx,eax
  402583:	mov    eax,0xfabdbeef
  402588:	add    ebx,eax
  40258a:	adc    edx,0xffffffff
  40258d:	and    DWORD PTR [ebp-0x10],0x0
  402591:	xor    edx,0x0
  402594:	mov    DWORD PTR [ebp-0x80],edx
  402597:	mov    edx,DWORD PTR [ebp+0xc]
  40259a:	mov    DWORD PTR [ebp-0x14],edx
  40259d:	mov    ecx,0x8a29a125
  4025a2:	xor    ebx,ecx
  4025a4:	add    DWORD PTR [ebp-0x14],eax
  4025a7:	mov    edx,DWORD PTR [ebp-0x14]
  4025aa:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ae:	xor    edx,ecx
  4025b0:	mov    DWORD PTR [ebp-0x78],edx
  4025b3:	mov    edx,DWORD PTR [ebp-0x10]
  4025b6:	xor    edx,0x0
  4025b9:	mov    DWORD PTR [ebp-0x74],edx
  4025bc:	cmp    DWORD PTR [ebp-0x78],ebx
  4025bf:	jne    0x4025d1
  4025c5:	mov    edx,DWORD PTR [ebp-0x80]
  4025c8:	cmp    DWORD PTR [ebp-0x74],edx
  4025cb:	je     0x402600
  4025d1:	mov    edx,DWORD PTR ds:0x4163b4
  4025d7:	mov    edx,DWORD PTR [edx+0x1c0]
  4025dd:	mov    edx,DWORD PTR [edx]
  4025df:	xor    ebx,ebx
  4025e1:	add    edx,eax
  4025e3:	adc    ebx,0xffffffff
  4025e6:	xor    edx,ecx
  4025e8:	xor    ebx,0x0
  4025eb:	cmp    edx,0x70941fd5
  4025f1:	jne    0x402663
  4025f7:	cmp    ebx,0xffffffff
  4025fa:	jne    0x402663
  402600:	mov    edx,DWORD PTR ds:0x416430
  402606:	mov    ebx,DWORD PTR ds:0x416438
  40260c:	xor    edx,ebx
  40260e:	mov    DWORD PTR ds:0x416430,edx
  402614:	mov    edx,DWORD PTR [ebp-0x40]
  402617:	mov    ebx,DWORD PTR ds:0x416430
  40261d:	add    ebx,DWORD PTR [edx]
  40261f:	mov    edx,DWORD PTR [ebp-0x40]
  402622:	mov    DWORD PTR [edx],ebx
  402624:	mov    edx,DWORD PTR [ebp+0xc]
  402627:	xor    esi,edx
  402629:	mov    edx,DWORD PTR ds:0x416430
  40262f:	add    esi,edi
  402631:	xor    ebx,ebx
  402633:	add    esi,eax
  402635:	adc    ebx,0xffffffff
  402638:	xor    edi,edi
  40263a:	xor    esi,ecx
  40263c:	xor    ebx,0x0
  40263f:	add    edx,eax
  402641:	adc    edi,0xffffffff
  402644:	xor    edx,ecx
  402646:	xor    edi,0x0
  402649:	cmp    edx,esi
  40264b:	jne    0x402663
  402651:	cmp    edi,ebx
  402653:	jne    0x402663
  402659:	mov    eax,ds:0x416430
  40265e:	mov    ds:0x416438,eax
  402663:	mov    eax,ds:0x4163b4
  402668:	push   0x4
  40266a:	add    eax,0x1cc
  40266f:	push   eax
  402670:	lea    eax,[ebp-0x24]
  402673:	push   eax
  402674:	call   0x40a25b
  402679:	mov    eax,DWORD PTR [ebp-0x24]
  40267c:	mov    eax,DWORD PTR [eax]
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebx
  402681:	leave  
  402682:	ret    0xc
  402685:	push   ebp
  402686:	mov    ebp,esp
  402688:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  402692:	mov    DWORD PTR ds:0x41400c,0x56b8
  40269c:	pop    ebp
  40269d:	jmp    0x401000
  4026a2:	xor    eax,eax
  4026a4:	inc    eax
  4026a5:	ret    
  4026a6:	push   ebp
  4026a7:	mov    ebp,esp
  4026a9:	push   ecx
  4026aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4026b1:	mov    DWORD PTR ds:0x414008,0x3fb4
  4026bb:	mov    eax,DWORD PTR [ebp+0x8]
  4026be:	add    DWORD PTR ds:0x413bf6,0x2653
  4026c8:	mov    al,BYTE PTR [eax]
  4026ca:	add    al,0xc
  4026cc:	xor    al,0x70
  4026ce:	cmp    al,0x29
  4026d0:	mov    DWORD PTR ds:0x413cf0,0x3ac2
  4026da:	jne    0x402787
  4026e0:	add    edx,DWORD PTR ds:0x41401c
  4026e6:	mov    eax,DWORD PTR [ebp+0x8]
  4026e9:	and    DWORD PTR ds:0x413c84,0x0
  4026f3:	jmp    0x402707
  4026f8:	xor    edx,edx
  4026fa:	xor    edx,DWORD PTR ds:0x413c84
  402700:	inc    edx
  402701:	mov    DWORD PTR ds:0x413c84,edx
  402707:	cmp    DWORD PTR ds:0x413c84,0x12
  40270e:	jae    0x40274b
  402714:	cmp    DWORD PTR ds:0x413c84,0x7
  40271b:	jne    0x40272c
  402721:	push   0x4160b3
  402726:	call   DWORD PTR ds:0x41677c
  40272c:	cmp    DWORD PTR ds:0x413c84,0x6
  402733:	jne    0x402746
  402739:	mov    edx,DWORD PTR ds:0x413c84
  40273f:	inc    edx
  402740:	mov    DWORD PTR ds:0x413c84,edx
  402746:	jmp    0x4026f8
  40274b:	mov    ecx,DWORD PTR [ebp+0x8]
  40274e:	add    ecx,DWORD PTR [eax+0x3c]
  402751:	mov    edx,0x7510894
  402756:	mov    DWORD PTR [ebp+0x8],ecx
  402759:	mov    eax,DWORD PTR [ebp-0x4]
  40275c:	xor    eax,edx
  40275e:	push   esi
  40275f:	mov    esi,DWORD PTR [ebp+0x8]
  402762:	mov    ecx,0x3272dc
  402767:	add    eax,ecx
  402769:	cmp    DWORD PTR [esi+0x54],eax
  40276c:	pop    esi
  40276d:	je     0x40277b
  402773:	mov    eax,DWORD PTR [ebp+0x8]
  402776:	jmp    0x402794
  40277b:	mov    eax,DWORD PTR [ebp-0x4]
  40277e:	xor    eax,edx
  402780:	add    eax,ecx
  402782:	jmp    0x402794
  402787:	mov    eax,DWORD PTR [ebp-0x4]
  40278a:	xor    eax,0x7510894
  40278f:	add    eax,0x3272dc
  402794:	leave  
  402795:	ret    0x4
  402798:	push   ebp
  402799:	mov    ebp,esp
  40279b:	sub    esp,0x78
  40279e:	xor    DWORD PTR ds:0x413c1e,0x50b0
  4027a8:	push   ebx
  4027a9:	adc    DWORD PTR ds:0x413d30,0x7f7d
  4027b3:	push   esi
  4027b4:	add    DWORD PTR ds:0x413d30,0x413cf0
  4027be:	push   edi
  4027bf:	push   0x1f
  4027c1:	and    DWORD PTR ds:0x413bf6,0x413c80
  4027cb:	lea    eax,[ebp-0x78]
  4027ce:	push   eax
  4027cf:	push   0x0
  4027d1:	adc    DWORD PTR ds:0x413d34,0x413c80
  4027db:	call   DWORD PTR ds:0x41676c
  4027e1:	push   0x97898797
  4027e6:	call   DWORD PTR ds:0x416754
  4027ec:	sub    ecx,ecx
  4027ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4027f5:	xor    DWORD PTR ds:0x414008,0x58a1
  4027ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  402806:	mov    ecx,DWORD PTR [ebp-0x4]
  402809:	mov    ebx,0x7510894
  40280e:	xor    ecx,ebx
  402810:	mov    eax,0x3272dc
  402815:	xor    DWORD PTR ds:0x413c6c,0x3fbb
  40281f:	add    ecx,eax
  402821:	mov    DWORD PTR [ebp-0x1c],ecx
  402824:	sbb    DWORD PTR ds:0x413d34,edi
  40282a:	mov    ecx,DWORD PTR [ebp+0x14]
  40282d:	test   ecx,ecx
  40282f:	je     0x402847
  402835:	mov    ecx,DWORD PTR [ebp+0x14]
  402838:	mov    ecx,DWORD PTR [ecx]
  40283a:	or     DWORD PTR ds:0x413c0a,0x414000
  402844:	mov    DWORD PTR [ebp-0x1c],ecx
  402847:	mov    DWORD PTR ds:0x413d34,0x1f
  402851:	cmp    DWORD PTR ds:0x413d34,0x0
  402858:	je     0x40288f
  40285e:	cmp    DWORD PTR ds:0x413d34,0x22
  402865:	jne    0x40287d
  40286b:	push   0x414010
  402870:	push   0x0
  402872:	push   0x416017
  402877:	call   DWORD PTR ds:0x416780
  40287d:	mov    ecx,DWORD PTR ds:0x413d34
  402883:	dec    ecx
  402884:	mov    DWORD PTR ds:0x413d34,ecx
  40288a:	jmp    0x402851
  40288f:	mov    ecx,0x7665
  402894:	sbb    edi,edi
  402896:	imul   edx,eax
  402899:	and    DWORD PTR ds:0x413c80,0x0
  4028a3:	mov    esi,DWORD PTR ds:0x413c80
  4028a9:	inc    esi
  4028aa:	mov    DWORD PTR ds:0x413c80,esi
  4028b0:	cmp    DWORD PTR ds:0x413c80,0xc
  4028b7:	jne    0x4028cb
  4028bd:	push   0x413ce4
  4028c2:	push   DWORD PTR [ebp-0x20]
  4028c5:	call   DWORD PTR ds:0x416784
  4028cb:	cmp    DWORD PTR ds:0x413c80,0xb
  4028d2:	jne    0x4028e5
  4028d8:	mov    esi,DWORD PTR ds:0x413c80
  4028de:	inc    esi
  4028df:	mov    DWORD PTR ds:0x413c80,esi
  4028e5:	cmp    DWORD PTR ds:0x413c80,0x1c
  4028ec:	jb     0x4028a3
  4028f2:	mov    esi,0x76532
  4028f7:	mov    DWORD PTR ds:0x413d30,0x639a
  402901:	add    edx,ecx
  402903:	movzx  edi,BYTE PTR ds:0x413ce4
  40290a:	and    DWORD PTR ds:0x413bfe,edi
  402910:	xchg   esi,ecx
  402912:	sbb    DWORD PTR ds:0x413c80,edi
  402918:	mov    edi,0x54354
  40291d:	mov    DWORD PTR ds:0x413d34,0x5e6f
  402927:	sub    edx,edi
  402929:	mov    ecx,DWORD PTR [ebp-0x4]
  40292c:	xor    ecx,ebx
  40292e:	mov    DWORD PTR ds:0x413c70,0x13
  402938:	cmp    DWORD PTR ds:0x413c70,0x0
  40293f:	je     0x40299c
  402945:	cmp    DWORD PTR ds:0x413c70,0x5
  40294c:	jne    0x402962
  402952:	push   0x7f69
  402957:	push   0x41606e
  40295c:	call   DWORD PTR ds:0x41678c
  402962:	cmp    DWORD PTR ds:0x413c70,0x6
  402969:	jne    0x40297c
  40296f:	mov    esi,DWORD PTR ds:0x413c70
  402975:	dec    esi
  402976:	mov    DWORD PTR ds:0x413c70,esi
  40297c:	mov    esi,DWORD PTR ds:0x413c70
  402982:	dec    esi
  402983:	mov    DWORD PTR ds:0x413c70,esi
  402989:	jmp    0x402938
  40298e:	mov    esi,DWORD PTR ds:0x413cb0
  402994:	mov    esi,DWORD PTR [esi]
  402996:	adc    DWORD PTR ds:0x414008,esi
  40299c:	add    ecx,eax
  40299e:	mov    DWORD PTR [ebp-0x8],ecx
  4029a1:	sub    ecx,ecx
  4029a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a6:	sub    DWORD PTR ds:0x413c80,ebx
  4029ac:	xor    ecx,ebx
  4029ae:	add    ecx,eax
  4029b0:	mov    DWORD PTR [ebp-0x24],ecx
  4029b3:	sub    ecx,0x1ce
  4029b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4029bc:	mov    esi,DWORD PTR ds:0x413c1a
  4029c2:	xor    DWORD PTR ds:0x413d1c,esi
  4029c8:	xor    ecx,ebx
  4029ca:	add    ecx,eax
  4029cc:	add    DWORD PTR ds:0x413d34,edi
  4029d2:	mov    DWORD PTR [ebp-0x30],ecx
  4029d5:	movzx  esi,BYTE PTR ds:0x414010
  4029dc:	sbb    esi,DWORD PTR ds:0x413bfe
  4029e2:	mov    DWORD PTR ds:0x414010,esi
  4029e8:	mov    esi,DWORD PTR [ebp-0x4]
  4029eb:	adc    ecx,DWORD PTR ds:0x413c16
  4029f1:	xor    esi,ebx
  4029f3:	xor    DWORD PTR ds:0x41401c,ecx
  4029f9:	add    esi,eax
  4029fb:	and    DWORD PTR ds:0x413c84,0x0
  402a05:	jmp    0x402a17
  402a0a:	mov    ecx,DWORD PTR ds:0x413c84
  402a10:	inc    ecx
  402a11:	mov    DWORD PTR ds:0x413c84,ecx
  402a17:	cmp    DWORD PTR ds:0x413c84,0x19
  402a1e:	jae    0x402af3
  402a24:	cmp    DWORD PTR ds:0x413c84,0xd
  402a2b:	jne    0x402a51
  402a31:	push   0x7c39
  402a36:	push   0x413c1e
  402a3b:	push   0x8717
  402a40:	push   0x416025
  402a45:	push   DWORD PTR [ebp-0x28]
  402a48:	push   DWORD PTR [ebp-0x10]
  402a4b:	call   DWORD PTR ds:0x416790
  402a51:	cmp    DWORD PTR ds:0x413c84,0xc
  402a58:	jne    0x402a6b
  402a5e:	mov    ecx,DWORD PTR ds:0x413c84
  402a64:	inc    ecx
  402a65:	mov    DWORD PTR ds:0x413c84,ecx
  402a6b:	jmp    0x402a0a
  402a70:	mov    DWORD PTR ds:0x413d30,0x12
  402a7a:	cmp    DWORD PTR ds:0x413d30,0x0
  402a81:	je     0x402af3
  402a87:	cmp    DWORD PTR ds:0x413d30,0x21
  402a8e:	jne    0x402a9f
  402a94:	push   0x1529
  402a99:	call   DWORD PTR ds:0x416798
  402a9f:	mov    ecx,DWORD PTR ds:0x413d30
  402aa5:	dec    ecx
  402aa6:	mov    DWORD PTR ds:0x413d30,ecx
  402aac:	jmp    0x402a7a
  402ab1:	and    DWORD PTR ds:0x413d34,0x0
  402abb:	mov    ecx,DWORD PTR ds:0x413d34
  402ac1:	inc    ecx
  402ac2:	mov    DWORD PTR ds:0x413d34,ecx
  402ac8:	cmp    DWORD PTR ds:0x413d34,0x29
  402acf:	jne    0x402ae0
  402ad5:	push   0x413c12
  402ada:	call   DWORD PTR ds:0x41679c
  402ae0:	cmp    DWORD PTR ds:0x413d34,0x19
  402ae7:	jb     0x402abb
  402aed:	or     ecx,DWORD PTR ds:0x413c0a
  402af3:	mov    ecx,DWORD PTR [ebp-0x24]
  402af6:	or     DWORD PTR ds:0x413c88,0x413c12
  402b00:	sub    ecx,eax
  402b02:	add    DWORD PTR ds:0x413c1e,0x57cd
  402b0c:	lea    edx,[esi-0x3272dc]
  402b12:	xor    ecx,ebx
  402b14:	and    DWORD PTR ds:0x413ce8,0xb77
  402b1e:	xor    edx,ebx
  402b20:	mov    DWORD PTR ds:0x413bfe,0x29ac
  402b2a:	cmp    edx,ecx
  402b2c:	mov    DWORD PTR ds:0x413ce4,0x2b4b
  402b36:	je     0x402e02
  402b3c:	sub    ecx,DWORD PTR ds:0x413d34
  402b42:	mov    ecx,DWORD PTR [ebp-0x4]
  402b45:	xor    DWORD PTR ds:0x413bfe,0x413c84
  402b4f:	xor    ecx,ebx
  402b51:	adc    DWORD PTR ds:0x413bf6,0x7b2
  402b5b:	add    ecx,eax
  402b5d:	cmp    esi,ecx
  402b5f:	jne    0x402ddf
  402b65:	or     DWORD PTR ds:0x413cf0,0x413c1e
  402b6f:	push   DWORD PTR [ebp+0x8]
  402b72:	call   0x4026a6
  402b77:	mov    DWORD PTR ds:0x414004,0x1c
  402b81:	cmp    DWORD PTR ds:0x414004,0x0
  402b88:	je     0x402bc3
  402b8e:	cmp    DWORD PTR ds:0x414004,0x2b
  402b95:	jne    0x402ba9
  402b9b:	push   0x413c6c
  402ba0:	push   DWORD PTR [ebp-0x24]
  402ba3:	call   DWORD PTR ds:0x41675c
  402ba9:	xor    ecx,ecx
  402bab:	or     ecx,DWORD PTR ds:0x414004
  402bb1:	dec    ecx
  402bb2:	mov    DWORD PTR ds:0x414004,ecx
  402bb8:	jmp    0x402b81
  402bbd:	sbb    DWORD PTR ds:0x413d34,ecx
  402bc3:	mov    DWORD PTR [ebp-0x18],eax
  402bc6:	and    DWORD PTR ds:0x413d28,0x0
  402bd0:	jmp    0x402be2
  402bd5:	mov    ecx,DWORD PTR ds:0x413d28
  402bdb:	inc    ecx
  402bdc:	mov    DWORD PTR ds:0x413d28,ecx
  402be2:	cmp    DWORD PTR ds:0x413d28,0x16
  402be9:	jae    0x402c2e
  402bef:	cmp    DWORD PTR ds:0x413d28,0x5
  402bf6:	jne    0x402c0f
  402bfc:	push   DWORD PTR [ebp-0x10]
  402bff:	push   0x41400c
  402c04:	push   0x2409
  402c09:	call   DWORD PTR ds:0x416760
  402c0f:	cmp    DWORD PTR ds:0x413d28,0x4
  402c16:	jne    0x402c29
  402c1c:	mov    ecx,DWORD PTR ds:0x413d28
  402c22:	inc    ecx
  402c23:	mov    DWORD PTR ds:0x413d28,ecx
  402c29:	jmp    0x402bd5
  402c2e:	mov    eax,DWORD PTR [ebp-0x4]
  402c31:	sub    DWORD PTR ds:0x413ce4,0x168d
  402c3b:	mov    ecx,DWORD PTR [ebp-0x18]
  402c3e:	inc    edi
  402c3f:	xor    eax,ebx
  402c41:	and    DWORD PTR ds:0x413c88,0x0
  402c4b:	jmp    0x402c5d
  402c50:	mov    edi,DWORD PTR ds:0x413c88
  402c56:	inc    edi
  402c57:	mov    DWORD PTR ds:0x413c88,edi
  402c5d:	cmp    DWORD PTR ds:0x413c88,0x1c
  402c64:	jae    0x402ca8
  402c6a:	cmp    DWORD PTR ds:0x413c88,0x5
  402c71:	jne    0x402c89
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	push   DWORD PTR [ebp-0x10]
  402c7d:	push   DWORD PTR [ebp-0x28]
  402c80:	push   DWORD PTR [ebp-0xc]
  402c83:	call   DWORD PTR ds:0x416764
  402c89:	cmp    DWORD PTR ds:0x413c88,0x4
  402c90:	jne    0x402ca3
  402c96:	mov    edi,DWORD PTR ds:0x413c88
  402c9c:	inc    edi
  402c9d:	mov    DWORD PTR ds:0x413c88,edi
  402ca3:	jmp    0x402c50
  402ca8:	mov    edi,0x3272dc
  402cad:	sbb    DWORD PTR ds:0x414008,0x338e
  402cb7:	add    eax,edi
  402cb9:	cmp    ecx,eax
  402cbb:	mov    DWORD PTR ds:0x413bfe,0x2c9f
  402cc5:	je     0x402e72
  402ccb:	adc    DWORD PTR ds:0x413c74,0x2cc9
  402cd5:	push   DWORD PTR [ebp-0x18]
  402cd8:	add    DWORD PTR ds:0x413c74,0x6616
  402ce2:	push   DWORD PTR [ebp+0x8]
  402ce5:	neg    DWORD PTR ds:0x413d2c
  402ceb:	call   0x407cf9
  402cf0:	mov    DWORD PTR [ebp-0x18],eax
  402cf3:	xor    DWORD PTR ds:0x413c12,ebx
  402cf9:	mov    eax,DWORD PTR [ebp-0x4]
  402cfc:	add    DWORD PTR ds:0x414008,edx
  402d02:	mov    ecx,DWORD PTR [ebp-0x18]
  402d05:	sub    DWORD PTR ds:0x413cdc,0x28ac
  402d0f:	xor    eax,ebx
  402d11:	sub    DWORD PTR ds:0x41400c,0x413ce4
  402d1b:	add    eax,edi
  402d1d:	cmp    ecx,eax
  402d1f:	je     0x402e72
  402d25:	or     DWORD PTR ds:0x414014,edi
  402d2b:	mov    eax,DWORD PTR [ebp-0x18]
  402d2e:	mov    ecx,DWORD PTR ds:0x414008
  402d34:	adc    ecx,DWORD PTR ds:0x413c7c
  402d3a:	mov    DWORD PTR ds:0x414008,ecx
  402d40:	mov    eax,DWORD PTR [eax+0x18]
  402d43:	mov    ecx,DWORD PTR ds:0x413ca4
  402d49:	mov    ecx,DWORD PTR [ecx]
  402d4b:	and    DWORD PTR ds:0x413d28,ecx
  402d51:	mov    DWORD PTR [ebp-0x24],eax
  402d54:	and    DWORD PTR ds:0x413c70,0x0
  402d5e:	mov    ecx,DWORD PTR ds:0x413c70
  402d64:	inc    ecx
  402d65:	mov    DWORD PTR ds:0x413c70,ecx
  402d6b:	cmp    DWORD PTR ds:0x413c70,0xf
  402d72:	jne    0x402d8d
  402d78:	push   0x2d13
  402d7d:	push   0x29b5
  402d82:	push   0x400000
  402d87:	call   DWORD PTR ds:0x416768
  402d8d:	cmp    DWORD PTR ds:0x413c70,0xe
  402d94:	jne    0x402da7
  402d9a:	mov    ecx,DWORD PTR ds:0x413c70
  402da0:	inc    ecx
  402da1:	mov    DWORD PTR ds:0x413c70,ecx
  402da7:	cmp    DWORD PTR ds:0x413c70,0x18
  402dae:	jb     0x402d5e
  402db4:	mov    eax,DWORD PTR [ebp-0x18]
  402db7:	mov    ecx,DWORD PTR [ebp+0x8]
  402dba:	add    ecx,DWORD PTR [eax+0x20]
  402dbd:	mov    DWORD PTR [ebp-0x2c],ecx
  402dc0:	mov    eax,DWORD PTR [ebp-0x18]
  402dc3:	mov    ecx,DWORD PTR [ebp+0x8]
  402dc6:	add    ecx,DWORD PTR [eax+0x24]
  402dc9:	mov    DWORD PTR [ebp-0x34],ecx
  402dcc:	mov    eax,DWORD PTR [ebp-0x18]
  402dcf:	mov    ecx,DWORD PTR [ebp+0x8]
  402dd2:	add    ecx,DWORD PTR [eax+0x1c]
  402dd5:	mov    eax,edi
  402dd7:	mov    DWORD PTR [ebp-0x18],ecx
  402dda:	jmp    0x402e3a
  402ddf:	mov    ecx,DWORD PTR [ebp-0x2c]
  402de2:	mov    edx,DWORD PTR [ebp+0x8]
  402de5:	add    edx,DWORD PTR [ecx+esi*4]
  402de8:	mov    DWORD PTR [ebp-0x28],edx
  402deb:	mov    ecx,DWORD PTR [ebp-0x4]
  402dee:	mov    edx,DWORD PTR [ebp-0x28]
  402df1:	xor    ecx,ebx
  402df3:	add    ecx,eax
  402df5:	cmp    edx,ecx
  402df7:	je     0x402e3a
  402dfd:	jmp    0x402e26
  402e02:	mov    ecx,DWORD PTR [ebp-0x4]
  402e05:	mov    edx,DWORD PTR [ebp-0x8]
  402e08:	xor    ecx,ebx
  402e0a:	add    ecx,eax
  402e0c:	cmp    edx,ecx
  402e0e:	je     0x402e7e
  402e14:	mov    ecx,DWORD PTR [ebp-0x4]
  402e17:	mov    edx,DWORD PTR [ebp-0x30]
  402e1a:	xor    ecx,ebx
  402e1c:	add    ecx,eax
  402e1e:	cmp    edx,ecx
  402e20:	je     0x40522e
  402e26:	lea    eax,[ebp-0x8]
  402e29:	push   eax
  402e2a:	push   DWORD PTR [ebp-0x28]
  402e2d:	push   DWORD PTR [ebp+0xc]
  402e30:	call   0x40a47a
  402e35:	mov    eax,0x3272dc
  402e3a:	mov    ecx,DWORD PTR [ebp-0x4]
  402e3d:	mov    edx,DWORD PTR [ebp-0x8]
  402e40:	xor    ecx,ebx
  402e42:	add    ecx,eax
  402e44:	cmp    edx,ecx
  402e46:	je     0x402e61
  402e4c:	mov    ecx,DWORD PTR [ebp-0x34]
  402e4f:	movzx  ecx,WORD PTR [ecx+esi*2]
  402e53:	mov    edx,DWORD PTR [ebp-0x18]
  402e56:	mov    ecx,DWORD PTR [edx+ecx*4]
  402e59:	mov    DWORD PTR [ebp-0x38],ecx
  402e5c:	jmp    0x402e02
  402e61:	mov    ecx,DWORD PTR [ebp-0x14]
  402e64:	xor    ecx,ebx
  402e66:	lea    esi,[esi+ecx*1+0x3272dc]
  402e6d:	jmp    0x4029fb
  402e72:	mov    eax,DWORD PTR [ebp-0x4]
  402e75:	xor    eax,ebx
  402e77:	add    eax,edi
  402e79:	jmp    0x405392
  402e7e:	mov    eax,DWORD PTR [ebp-0x4]
  402e81:	jmp    0x405222
  402e86:	or     al,0xe7
  402e88:	xchg   BYTE PTR [ebx-0x240e7489],cl
  402e8e:	xchg   bl,cl
  402e90:	pushf  
  402e91:	cmp    DWORD PTR [edi+0x5b],esi
  402e94:	or     BYTE PTR [edi+0x7c],dl
  402e97:	jl     0x402f15
  402e99:	jl     0x402e7b
  402e9b:	pop    edi
  402e9c:	jl     0x402f1a
  402e9e:	adc    eax,0x1921172e
  402ea3:	and    eax,0x38652f1b
  402ea8:	imul   ebp,DWORD PTR [eax-0x53],0x6d6c6c62
  402eaf:	xor    al,0xc5
  402eb1:	fsubrp st(1),st
  402eb3:	push   edx
  402eb4:	dec    edx
  402eb5:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff92
  402eb9:	bound  ebp,QWORD PTR [ebp+0x59]
  402ebc:	iret   
  402ebd:	pop    ebp
  402ebe:	dec    esp
  402ebf:	and    cl,BYTE PTR [esi+0x577887fc]
  402ec5:	dec    ebp
  402ec6:	jg     0x402eff
  402ec8:	jb     0x402e72
  402eca:	jg     0x402e6e
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	cmp    ebp,DWORD PTR [esi]
  402ecf:	jmp    FWORD PTR [eax-0x22]
  402ed2:	cld    
  402ed3:	push   ebx
  402ed4:	jg     0x402ed6
  402ed6:	in     eax,dx
  402ed7:	cmp    ebp,ecx
  402ed9:	mov    esp,0xc01387ed
  402ede:	mov    ebp,DWORD PTR [ecx]
  402ee0:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c68c]
  402ee7:	fld    QWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	lock cld 
  402eec:	sub    BYTE PTR [edx],bl
  402eee:	dec    edx
  402eef:	push   cs
  402ef0:	sub    BYTE PTR [ebx+0x6a],ch
  402ef3:	mov    ecx,0x54113af
  402ef8:	test   al,0xff
  402efa:	jmp    0x34b65a48
  402eff:	retf   0xf95b
  402f02:	sbb    al,0xfc
  402f04:	jp     0x402ea7
  402f06:	arpl   bp,bx
  402f08:	call   0x8416:0x7a18b5f
  402f0f:	xor    ebx,esi
  402f11:	cmp    BYTE PTR [esi],0x74
  402f14:	jae    0x402f21
  402f16:	fsubr  QWORD PTR ds:0x33368d54
  402f1c:	push   esi
  402f1d:	jecxz  0x402eee
  402f1f:	mov    WORD PTR [ecx],gs
  402f21:	mov    DWORD PTR [edx+0x518aceb7],esi
  402f27:	out    0x45,al
  402f29:	push   esp
  402f2a:	dec    esi
  402f2b:	push   cs
  402f2c:	and    bl,dh
  402f2e:	cmp    BYTE PTR [ebx],al
  402f30:	lods   eax,DWORD PTR ds:[esi]
  402f31:	dec    ebx
  402f32:	int3   
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	xor    al,dl
  402f36:	push   es
  402f37:	pop    eax
  402f38:	std    
  402f39:	push   esp
  402f3a:	pop    eax
  402f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3c:	stc    
  402f3d:	push   0xffffffbf
  402f3f:	cli    
  402f40:	inc    esp
  402f41:	add    esi,ebp
  402f43:	loopne 0x402f2c
  402f45:	cmp    edi,DWORD PTR ds:0xb9877547
  402f4b:	rol    DWORD PTR [ebp+0x62],cl
  402f4e:	or     eax,0x1de9c6c7
  402f53:	xchg   esp,eax
  402f54:	sub    eax,edi
  402f56:	loope  0x402ef0
  402f58:	(bad)  
  402f59:	push   eax
  402f5a:	xor    BYTE PTR [esp+ebx*8+0xa45f119],0x3a
  402f62:	xor    eax,0x35eb2643
  402f67:	jo     0x402f11
  402f69:	frstor [edi+0x36]
  402f6c:	pop    edi
  402f6d:	sahf   
  402f6e:	jb     0x402f90
  402f70:	lods   al,BYTE PTR ds:[esi]
  402f71:	and    ah,BYTE PTR [ebp+0xf9c51cd]
  402f77:	mov    dh,0xd7
  402f79:	and    DWORD PTR [ebp+edi*1-0x6f],edx
  402f7d:	clc    
  402f7e:	aam    0x47
  402f80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f81:	fisub  DWORD PTR [esi]
  402f83:	mov    ch,0x91
  402f85:	push   ds
  402f86:	in     eax,dx
  402f87:	xchg   ebp,eax
  402f88:	and    ah,ah
  402f8a:	test   ah,ch
  402f8c:	jl     0x402fd3
  402f8e:	inc    edx
  402f8f:	xchg   BYTE PTR [edx],cl
  402f91:	jmp    0xa4109161
  402f96:	sub    ecx,DWORD PTR [ecx+0x3b]
  402f99:	cmp    dl,BYTE PTR [eax-0x11c46fce]
  402f9f:	int3   
  402fa0:	mov    WORD PTR [ecx+0x76],gs
  402fa3:	or     cl,cl
  402fa5:	adc    al,0xc8
  402fa7:	aas    
  402fa8:	call   0xda62:0x74734cc0
  402faf:	xchg   ebx,eax
  402fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fb1:	jnp    0x402f4d
  402fb3:	pop    eax
  402fb4:	ins    BYTE PTR es:[edi],dx
  402fb5:	cmp    al,0x48
  402fb7:	mov    BYTE PTR [ecx+esi*2],0x9
  402fbb:	dec    ebx
  402fbc:	mov    dl,0x3d
  402fbe:	push   eax
  402fbf:	dec    ebp
  402fc0:	mov    esp,0x76750f05
  402fc5:	cli    
  402fc6:	fst    DWORD PTR [ecx-0x4c]
  402fc9:	dec    eax
  402fca:	popf   
  402fcb:	dec    ebx
  402fcc:	xor    DWORD PTR [edi+0x56277532],edi
  402fd2:	shl    DWORD PTR [ebx],0x5c
  402fd5:	in     al,dx
  402fd6:	test   eax,0x3160bd8d
  402fdb:	inc    ebx
  402fdc:	lods   eax,DWORD PTR ds:[esi]
  402fdd:	jg     0x403051
  402fdf:	pop    ds
  402fe0:	push   ebp
  402fe1:	push   DWORD PTR [edi-0xa]
  402fe4:	(bad)  
  402fe5:	mov    ecx,DWORD PTR [edi]
  402fe7:	lock dec esp
  402fe9:	adc    edi,ecx
  402feb:	cmp    edi,esi
  402fed:	adc    dl,BYTE PTR [esi+0x68]
  402ff0:	inc    ebp
  402ff1:	mov    WORD PTR [eax],ss
  402ff3:	outs   dx,DWORD PTR ds:[esi]
  402ff4:	(bad)  
  402ff5:	pop    esp
  402ff6:	int3   
  402ff7:	retf   
  402ff8:	or     cl,ch
  402ffa:	(bad)  
  402ffb:	xor    al,0x8a
  402ffd:	cli    
  402ffe:	ror    BYTE PTR [edi-0x9],0x3a
  403002:	cdq    
  403003:	xchg   edx,eax
  403004:	pop    ebx
  403005:	in     eax,dx
  403006:	mov    ds:0xc8df2b71,al
  40300b:	push   0xdeed37ed
  403010:	or     BYTE PTR [esi+0xd],bh
  403013:	outs   dx,BYTE PTR ds:[esi]
  403014:	add    al,0x23
  403016:	mov    edx,0x6eb4feb9
  40301b:	mov    ebx,0xb3427ab
  403020:	data16 ficom WORD PTR [ecx+0x20]
  403024:	jae    0x40308e
  403026:	mov    ds:0x5622f029,al
  40302b:	push   edi
  40302c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40302d:	mov    al,bh
  40302f:	imul   edx,esp,0x7da8e339
  403035:	test   eax,0x595fe459
  40303a:	sub    eax,0x3e733861
  40303f:	xor    ah,bl
  403041:	jmp    0x39d9:0xc1eee06e
  403048:	les    ebx,FWORD PTR es:[ebx]
  40304b:	std    
  40304c:	cmp    ebx,0xffffffee
  40304f:	push   es
  403050:	sbb    al,0xba
  403052:	dec    ecx
  403053:	(bad)  
  403054:	and    BYTE PTR [esi-0x7ee858cb],ch
  40305a:	push   esi
  40305b:	sar    BYTE PTR [edx],0x8
  40305e:	add    ebp,DWORD PTR [esi+0x40]
  403061:	sahf   
  403062:	repz push si
  403065:	mov    ds:0x22853e4c,al
  40306a:	dec    edi
  40306b:	mov    edi,0xf246254a
  403070:	xchg   ebx,eax
  403071:	aaa    
  403072:	stos   BYTE PTR es:[edi],al
  403073:	aas    
  403074:	hlt    
  403075:	shl    DWORD PTR [edx+0x73814498],1
  40307b:	cmp    al,0x82
  40307d:	in     eax,0xf7
  40307f:	repnz pop es
  403081:	out    0x2e,al
  403083:	daa    
  403084:	jns    0x403029
  403086:	adc    eax,0x75a32641
  40308b:	pop    es
  40308c:	mov    al,0xb8
  40308e:	adc    BYTE PTR [edx+eiz*4],bh
  403091:	popa   
  403092:	sub    DWORD PTR [esi],eax
  403094:	push   es
  403095:	xchg   ebx,eax
  403096:	pop    ss
  403097:	fs cmp ebx,edi
  40309a:	call   0x2eba:0x7aef5faf
  4030a1:	jmp    0xc4b27340
  4030a6:	push   ds
  4030a7:	or     eax,0x7f3f3d41
  4030ac:	dec    eax
  4030ad:	in     eax,0xd0
  4030af:	push   ecx
  4030b0:	sub    cl,BYTE PTR [edx-0x68]
  4030b3:	and    dh,BYTE PTR [edi+0x54166582]
  4030b9:	mov    al,ds:0xf415add8
  4030be:	sti    
  4030bf:	mov    esp,0xf051a4d6
  4030c4:	pop    esp
  4030c5:	push   edi
  4030c6:	jb     0x403066
  4030c8:	xchg   edi,eax
  4030c9:	sub    al,0x7f
  4030cb:	je     0x5417d859
  4030d1:	(bad)  
  4030d2:	dec    esp
  4030d3:	xchg   esi,eax
  4030d4:	xchg   edx,eax
  4030d5:	test   BYTE PTR [esi-0x73],dl
  4030d8:	push   ds
  4030d9:	les    bx,DWORD PTR [edx-0x41]
  4030dd:	dec    edx
  4030de:	cwde   
  4030df:	pop    ebp
  4030e0:	add    BYTE PTR [esi+0x19],al
  4030e3:	sub    DWORD PTR [ebx-0x49],esi
  4030e6:	shr    DWORD PTR [eax+0x15],1
  4030e9:	xchg   esp,eax
  4030ea:	push   0xffffffb9
  4030ec:	inc    esi
  4030ed:	enter  0x4afa,0x54
  4030f1:	lahf   
  4030f2:	repnz mov cl,al
  4030f5:	or     DWORD PTR [eax-0x39846ba6],edx
  4030fb:	loop   0x403116
  4030fd:	push   eax
  4030fe:	clc    
  4030ff:	mov    ecx,0x2e33ba4d
  403104:	sub    eax,0x595a4ad8
  403109:	movd   DWORD PTR [eax],mm1
  40310c:	bound  ebx,QWORD PTR [esi+eiz*8+0x4334360f]
  403113:	push   ecx
  403114:	or     DWORD PTR [ebx+eax*2+0x2e],esp
  403118:	jg     0x40312d
  40311a:	dec    edx
  40311b:	cmc    
  40311c:	arpl   sp,dx
  40311e:	inc    ebx
  40311f:	fwait
  403120:	mov    ds:0x1f7c5ba3,eax
  403125:	sbb    al,0x1f
  403127:	push   ds
  403128:	dec    eax
  403129:	pop    esp
  40312a:	adc    al,0x9e
  40312c:	loopne 0x40317e
  40312e:	scas   al,BYTE PTR es:[edi]
  40312f:	rcr    BYTE PTR [edi-0x76],cl
  403132:	pop    edx
  403133:	(bad)  
  403134:	std    
  403135:	inc    eax
  403136:	(bad)  
  403137:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403138:	mov    ch,0x8f
  40313a:	and    edx,edi
  40313c:	sub    DWORD PTR [edx],eax
  40313e:	push   cs
  40313f:	xchg   edi,eax
  403140:	aas    
  403141:	xor    al,0xdc
  403143:	or     eax,0xb3cf12b9
  403148:	ror    DWORD PTR [ecx],1
  40314a:	mov    edi,0xda31624f
  40314f:	(bad)  
  403150:	pop    ebp
  403151:	das    
  403152:	xchg   edi,esi
  403154:	jnp    0x40312f
  403156:	and    BYTE PTR [edi],ah
  403158:	cld    
  403159:	lods   eax,DWORD PTR ds:[esi]
  40315a:	cmp    DWORD PTR [eax-0x4991834b],ebx
  403160:	ds retf 0x3e63
  403164:	dec    esp
  403165:	lds    ecx,FWORD PTR [edx]
  403167:	je     0x403173
  403169:	out    dx,al
  40316a:	jp     0x403196
  40316c:	jmp    0x40314c
  40316e:	and    DWORD PTR [ecx+0x1d1f8e1b],0xdc74ac7b
  403178:	retf   
  403179:	icebp  
  40317a:	pushw  cs
  40317c:	in     al,dx
  40317d:	mov    ecx,0x63395a98
  403182:	hlt    
  403183:	push   ebx
  403184:	and    DWORD PTR [esi],ecx
  403186:	(bad)  [ebx+edi*4+0x1048b055]
  40318d:	fist   DWORD PTR ds:0x8302dc0f
  403193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403194:	ss mov dl,0x51
  403197:	jmp    0x2ad4:0xf4aff433
  40319e:	mov    edx,0x46ae6bb6
  4031a3:	out    0x74,eax
  4031a5:	dec    esi
  4031a6:	pop    edi
  4031a7:	jl     0x403141
  4031a9:	adc    DWORD PTR [edx+0x76],ecx
  4031ac:	arpl   di,bp
  4031ae:	push   esp
  4031af:	jge    0x40320e
  4031b1:	lods   eax,DWORD PTR ds:[esi]
  4031b2:	adc    eax,0x2e98d0bc
  4031b7:	or     bl,BYTE PTR [ebp-0x6c1ba772]
  4031bd:	push   ss
  4031be:	pop    eax
  4031bf:	pop    ebp
  4031c0:	retf   
  4031c1:	xchg   BYTE PTR [eax-0x365db6a1],dh
  4031c7:	stos   DWORD PTR es:[edi],eax
  4031c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031c9:	in     al,dx
  4031ca:	addr16 pop ebx
  4031cc:	xor    bl,BYTE PTR [eax+0x1a]
  4031cf:	mov    edi,0x7bdbac8a
  4031d4:	mov    DWORD PTR [edi+0x5749fb81],edx
  4031da:	jmp    0x403229
  4031dc:	lods   eax,DWORD PTR ds:[esi]
  4031dd:	aad    0x6f
  4031df:	xchg   ebp,eax
  4031e0:	fimul  DWORD PTR [ebx+0x47]
  4031e3:	jnp    0x4031d9
  4031e5:	or     eax,0xce2cdce8
  4031ea:	mov    bl,0x6b
  4031ec:	ss cdq 
  4031ee:	mov    dh,0x25
  4031f0:	fwait
  4031f1:	lods   eax,DWORD PTR ds:[esi]
  4031f2:	pop    es
  4031f3:	dec    esp
  4031f4:	loope  0x40325f
  4031f6:	xchg   esi,eax
  4031f7:	in     eax,0x4a
  4031f9:	pop    esp
  4031fa:	adc    eax,edi
  4031fc:	fcmovnbe st,st(1)
  4031fe:	call   DWORD PTR [edx]
  403200:	scas   al,BYTE PTR es:[edi]
  403201:	xchg   edi,eax
  403202:	les    esp,FWORD PTR [edi]
  403204:	mov    WORD PTR [ebx-0x482d7710],ds
  40320a:	mov    al,ds:0x10fd1657
  40320f:	pushf  
  403210:	loop   0x40327c
  403212:	inc    edx
  403213:	jne    0x403266
  403215:	bswap  ebp
  403217:	sub    BYTE PTR [eax-0x57c7e54b],dh
  40321d:	and    DWORD PTR [edx-0x6a962a2d],ecx
  403223:	or     al,0x3a
  403225:	in     eax,dx
  403226:	xchg   ebx,eax
  403227:	sbb    DWORD PTR [eax],ebx
  403229:	adc    esi,DWORD PTR [ecx+0x4]
  40322c:	js     0x40320b
  40322e:	or     DWORD PTR [ebx+0x170e9caa],esi
  403234:	cwde   
  403235:	(bad)  
  403236:	fwait
  403237:	(bad)  
  403238:	xor    ch,BYTE PTR [edi+esi*4-0x476aef9]
  40323f:	lahf   
  403240:	shl    BYTE PTR [edx],cl
  403242:	or     DWORD PTR [esi],edi
  403244:	add    DWORD PTR [esi-0x69a0d074],eax
  40324a:	dec    edi
  40324b:	out    dx,al
  40324c:	push   ebx
  40324d:	adc    eax,0x35a58e44
  403252:	shl    BYTE PTR [ebx],1
  403254:	and    BYTE PTR [bp+si],ah
  403257:	push   ecx
  403258:	or     al,0xae
  40325a:	cmp    eax,0x49a646ff
  40325f:	xchg   ebx,eax
  403260:	and    al,0x72
  403262:	or     al,0xad
  403264:	pop    ebp
  403265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403266:	jne    0x40320b
  403268:	jae    0x4032c7
  40326a:	dec    ebp
  40326b:	jno    0x4032d9
  40326d:	add    ebx,DWORD PTR [eax]
  40326f:	repnz or dl,dl
  403272:	adc    cl,BYTE PTR ds:0x628e6fd5
  403278:	xchg   edi,eax
  403279:	or     eax,0x75e57a6a
  40327e:	adc    eax,0x6dcf53a
  403283:	ret    
  403284:	pop    esi
  403285:	mov    WORD PTR [eax-0x2a],es
  403288:	xchg   edx,eax
  403289:	cmp    dl,BYTE PTR [eax]
  40328b:	dec    ebx
  40328c:	pop    es
  40328d:	aam    0x44
  40328f:	jae    0x4032cd
  403291:	mov    ebx,0x932f4045
  403296:	add    bl,BYTE PTR [esi-0x601fb73a]
  40329c:	sub    DWORD PTR [eax-0x4c42384a],edx
  4032a2:	cmc    
  4032a3:	pop    esi
  4032a4:	mov    ds:0xd814ad89,al
  4032a9:	jae    0x4032ce
  4032ab:	(bad)  
  4032ac:	cli    
  4032ad:	xchg   ecx,eax
  4032ae:	adc    BYTE PTR ds:0x283b710e,ch
  4032b4:	push   edx
  4032b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032b6:	pop    ss
  4032b7:	aaa    
  4032b8:	or     eax,0x917e74d9
  4032bd:	mov    ch,0x68
  4032bf:	clc    
  4032c0:	call   0xa5df:0x580e3fc4
  4032c7:	adc    ch,BYTE PTR [ebp+0x47]
  4032ca:	stc    
  4032cb:	or     bh,BYTE PTR [eax]
  4032cd:	push   0x39
  4032cf:	xchg   DWORD PTR [esi+0x147e25ae],esp
  4032d5:	cmp    eax,0xf3d88b52
  4032da:	jg     0x403340
  4032dc:	sub    eax,0x3ff99146
  4032e1:	lahf   
  4032e2:	lahf   
  4032e3:	or     esp,eax
  4032e5:	jmp    0x432202ca
  4032ea:	fld    st(3)
  4032ec:	xlat   BYTE PTR ds:[ebx]
  4032ed:	fcomp  DWORD PTR [ebx]
  4032ef:	mov    al,ds:0xee88f33b
  4032f4:	or     eax,0x550bd5be
  4032f9:	repnz adc bh,BYTE PTR [ecx+edi*1]
  4032fd:	pop    ebx
  4032fe:	and    edx,ecx
  403300:	out    0xc8,eax
  403302:	ins    BYTE PTR es:[edi],dx
  403303:	cmp    al,0xd4
  403305:	xchg   ecx,eax
  403306:	mov    ebp,0x6486448d
  40330b:	inc    eax
  40330c:	xor    dl,bl
  40330e:	sbb    al,0xa9
  403310:	adc    DWORD PTR [edx],edi
  403312:	shr    BYTE PTR [eax-0x5da86c30],1
  403318:	xchg   ebx,eax
  403319:	mov    eax,0x4df84ffa
  40331e:	and    al,0x5f
  403320:	push   es
  403321:	xor    al,0x8b
  403323:	sbb    eax,0x70953ae3
  403328:	cmp    BYTE PTR [esi],ah
  40332a:	jno    0x4032b4
  40332c:	retf   0xe882
  40332f:	cdq    
  403330:	xchg   ebp,eax
  403331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403332:	and    eax,0xa1ff127e
  403337:	mov    ds:0x4732ac3d,eax
  40333c:	std    
  40333d:	pop    esi
  40333e:	std    
  40333f:	loop   0x40338d
  403341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403342:	cwde   
  403343:	imul   edi,DWORD PTR gs:[ecx+0x205860cb],0x6e
  40334b:	retf   
  40334c:	mov    bh,0x57
  40334e:	sbb    edx,DWORD PTR [ecx+0x28f42d12]
  403354:	(bad)  
  403355:	je     0x40336f
  403357:	push   eax
  403359:	fisub  DWORD PTR [ebx]
  40335b:	xchg   edx,eax
  40335c:	bnd ret 
  40335e:	mov    ds:0x7d25636f,al
  403363:	or     bl,BYTE PTR [esp+edx*4]
  403366:	mov    al,ds:0x4e07f9df
  40336b:	lds    eax,FWORD PTR [eax+ebx*1+0x3229c2f9]
  403372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403373:	dec    edi
  403374:	xor    BYTE PTR [ecx+0x2a],ch
  403377:	cwde   
  403378:	bound  edx,QWORD PTR ds:0x21dce6fe
  40337e:	push   cs
  40337f:	mov    eax,0xe152feca
  403384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403385:	pusha  
  403386:	xchg   edx,eax
  403387:	xchg   edx,eax
  403388:	fbld   TBYTE PTR [ebx+0x5317b35f]
  40338e:	ja     0x1d75adf
  403394:	fcmovb st,st(0)
  403396:	jb     0x403386
  403398:	mov    ebx,0x414bea0
  40339d:	inc    eax
  40339e:	outs   dx,DWORD PTR ds:[esi]
  40339f:	sub    edi,DWORD PTR [esi+0x2deea7f1]
  4033a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033a6:	adc    BYTE PTR fs:[eax-0x34],bh
  4033aa:	pop    ds
  4033ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033ac:	cmc    
  4033ad:	dec    ebx
  4033ae:	add    DWORD PTR [edi],ebp
  4033b0:	ins    BYTE PTR es:[edi],dx
  4033b1:	das    
  4033b2:	cld    
  4033b3:	jecxz  0x403400
  4033b5:	data16 fisub WORD PTR [edi+0x70]
  4033b9:	push   ebp
  4033ba:	xchg   esi,eax
  4033bb:	mov    ds:0xb321a38f,al
  4033c0:	popf   
  4033c1:	and    al,0x49
  4033c3:	fidivr WORD PTR [edi+eax*8]
  4033c6:	dec    ecx
  4033c7:	div    BYTE PTR [esi-0x16]
  4033ca:	mov    ebp,0xc4e2194b
  4033cf:	fimul  WORD PTR [ecx+0x24]
  4033d2:	jbe    0x4033fc
  4033d4:	popf   
  4033d5:	jmp    0x4033fd
  4033d7:	xchg   ebx,eax
  4033d8:	pop    es
  4033d9:	jno    0x403411
  4033db:	cs jns 0x4033d2
  4033de:	pushf  
  4033df:	xchg   edi,eax
  4033e0:	cwde   
  4033e1:	mov    ?,WORD PTR [ebx]
  4033e3:	pop    edx
  4033e4:	inc    ebp
  4033e5:	cmp    esp,DWORD PTR [edi]
  4033e7:	pop    edx
  4033e8:	mov    bl,0xc2
  4033ea:	pop    esp
  4033eb:	xor    al,0x7
  4033ed:	ret    
  4033ee:	mov    bh,BYTE PTR ds:0x93b7e820
  4033f4:	(bad)  
  4033f5:	or     edx,DWORD PTR [eax]
  4033f7:	les    ecx,FWORD PTR [ebx]
  4033f9:	jmp    0x31fa:0xdc44f6dd
  403400:	lods   eax,DWORD PTR ds:[esi]
  403401:	outs   dx,BYTE PTR ds:[esi]
  403402:	outs   dx,DWORD PTR ds:[esi]
  403403:	mov    bl,BYTE PTR es:0x21711966
  40340a:	sub    al,0x1f
  40340c:	and    bl,cl
  40340e:	jmp    0x852:0x6b76f07c
  403415:	inc    edi
  403416:	in     eax,dx
  403417:	not    DWORD PTR [edx]
  403419:	mov    cl,0xd4
  40341b:	aas    
  40341c:	lea    esi,[ecx+ebx*4+0x7]
  403420:	jecxz  0x403419
  403422:	fsubr  QWORD PTR [eax+0x4d]
  403425:	and    BYTE PTR [eax-0x5675bbb8],cl
  40342b:	pop    ebp
  40342c:	mov    WORD PTR [edx-0x57],ss
  40342f:	je     0x403434
  403431:	stos   DWORD PTR es:[edi],eax
  403432:	xor    ebx,ebp
  403434:	inc    ecx
  403435:	mov    ?,WORD PTR [ecx+0x1e08adb0]
  40343b:	mov    BYTE PTR [esi-0x20],bh
  40343e:	cmp    eax,0x731bc8b8
  403443:	fist   WORD PTR [ecx+0x6701e3f9]
  403449:	(bad)  
  40344a:	ds sub esi,ecx
  40344d:	mov    esi,ebx
  40344f:	repnz push ds
  403451:	push   ds
  403452:	push   edx
  403453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403454:	out    dx,eax
  403455:	xchg   ebp,eax
  403456:	stc    
  403457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403458:	jne    0x40342d
  40345a:	add    BYTE PTR [edi],cl
  40345c:	sahf   
  40345d:	sar    BYTE PTR [eax],1
  40345f:	(bad)
  403462:	cwde   
  403463:	mov    ds:0x3e42ba98,eax
  403468:	sbb    esi,DWORD PTR [esi+esi*1-0x50]
  40346c:	push   edx
  40346d:	mov    cl,0x2f
  40346f:	xor    ch,ah
  403471:	xchg   BYTE PTR [ebx],cl
  403473:	cld    
  403474:	call   0x6aa91fd0
  403479:	mov    eax,0xd40547ad
  40347e:	or     BYTE PTR [ecx],bh
  403480:	xchg   edi,eax
  403481:	clc    
  403482:	xlat   BYTE PTR ds:[ebx]
  403483:	mov    esp,0x82b818b9
  403488:	stos   BYTE PTR es:[edi],al
  403489:	sub    BYTE PTR [esi+0x43d023e1],0xd2
  403490:	ret    0xdccf
  403493:	mov    eax,0x7c3ec27b
  403498:	sbb    esp,DWORD PTR [ebp+0x7a]
  40349b:	jbe    0x4034fc
  40349d:	int3   
  40349e:	jae    0x4034fd
  4034a0:	mov    bl,BYTE PTR [ebx]
  4034a2:	in     eax,0x57
  4034a4:	mov    esp,0xc94b85e4
  4034a9:	sub    DWORD PTR [ecx-0x1],edi
  4034ac:	pop    esp
  4034ad:	jne    0x403501
  4034af:	jb     0x40352a
  4034b1:	pop    eax
  4034b2:	dec    esi
  4034b3:	pop    esp
  4034b4:	in     al,0x21
  4034b6:	lea    edi,ds:0xa11e8f74
  4034bc:	clc    
  4034bd:	ret    0x59e8
  4034c0:	and    ah,BYTE PTR [ebx]
  4034c2:	aaa    
  4034c3:	adc    DWORD PTR [esi+0xb47389],esp
  4034c9:	call   0x5f9c:0x5e606d76
  4034d0:	imul   eax,DWORD PTR [eax+0x5104f67],0x81736e8
  4034da:	aam    0x4b
  4034dc:	pop    ebx
  4034dd:	cmp    bh,bl
  4034df:	xor    bl,BYTE PTR [esi-0x42ac1f87]
  4034e5:	out    dx,eax
  4034e6:	jno    0x403519
  4034e8:	xor    eax,0x9e25139f
  4034ed:	sbb    BYTE PTR [eax],ah
  4034ef:	(bad)  
  4034f0:	mov    al,0xab
  4034f2:	cmp    bh,BYTE PTR [edx-0x7c68480a]
  4034f8:	mov    ds:0xb6fcf557,al
  4034fd:	in     eax,0x48
  4034ff:	aas    
  403500:	pop    ds
  403501:	push   es
  403502:	sahf   
  403503:	sbb    al,bh
  403505:	or     eax,0x793fd0ae
  40350a:	or     al,0xc2
  40350c:	test   DWORD PTR [ebx+0x43],0xe3f3e581
  403513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403514:	inc    esp
  403515:	push   0x24
  403517:	neg    BYTE PTR [edi]
  403519:	jo     0x40354a
  40351b:	pop    esi
  40351c:	inc    edx
  40351d:	ss dec esp
  40351f:	addr16 sub eax,0x2b7a6e2e
  403525:	jp     0x4034e4
  403527:	mov    ds:0x44b6fbc8,al
  40352c:	jp     0x403587
  40352e:	adc    ecx,ecx
  403530:	dec    eax
  403531:	xchg   ebx,eax
  403532:	retf   
  403533:	inc    ecx
  403534:	mov    edi,0x73d2fe42
  403539:	test   eax,0xc45c0d96
  40353e:	jg     0x4035bc
  403540:	add    bh,cl
  403542:	out    0x80,al
  403544:	mov    esi,0x65374eef
  403549:	add    bl,BYTE PTR [ecx]
  40354b:	neg    dl
  40354d:	retf   
  40354e:	repz and ebx,DWORD PTR [eax]
  403551:	scas   eax,DWORD PTR es:[edi]
  403552:	test   eax,0x82dfacaf
  403557:	fld    QWORD PTR [ecx]
  403559:	repz cmp bl,bl
  40355c:	lea    edx,[esi]
  40355e:	test   al,0xc0
  403560:	inc    ebp
  403561:	and    DWORD PTR [ecx+0x5b],0x6555de0b
  403568:	in     al,0x1e
  40356a:	in     al,dx
  40356b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40356c:	stos   BYTE PTR es:[edi],al
  40356d:	mov    esp,0x1d72611
  403572:	std    
  403573:	push   eax
  403574:	inc    edi
  403575:	mov    ds,WORD PTR [ebx]
  403577:	fsubr  DWORD PTR [edi-0x536612a]
  40357d:	xor    eax,0xe9309526
  403582:	rcr    DWORD PTR [ecx+0x5a],cl
  403585:	xchg   ecx,eax
  403586:	sbb    bl,cl
  403588:	jmp    FWORD PTR [edi]
  40358a:	jne    0x40350c
  40358c:	pop    ss
  40358d:	pop    esi
  40358e:	lahf   
  40358f:	imul   ebx,DWORD PTR [edi],0xb3f8402c
  403595:	jl     0x4035db
  403597:	or     DWORD PTR [eax+eax*2-0x191fee55],ebp
  40359e:	add    BYTE PTR [eax-0x3a],al
  4035a1:	ins    DWORD PTR es:[edi],dx
  4035a2:	ret    
  4035a3:	outs   dx,BYTE PTR ds:[esi]
  4035a4:	inc    ebx
  4035a5:	sti    
  4035a6:	mov    cl,0x7f
  4035a8:	fs inc eax
  4035aa:	loope  0x4035a0
  4035ac:	sub    DWORD PTR [ecx],0xaffcc912
  4035b2:	mov    dl,0x9a
  4035b4:	hlt    
  4035b5:	repnz fisttp DWORD PTR ds:0x5b16d581
  4035bc:	in     al,dx
  4035bd:	sub    DWORD PTR [edx+0x75ae0e64],0x13
  4035c4:	sub    al,0x3a
  4035c6:	sbb    eax,ebp
  4035c8:	out    dx,al
  4035c9:	neg    DWORD PTR [eax+0xe]
  4035cc:	bndstx [ebx],(bad)
  4035cf:	inc    edx
  4035d0:	mov    ds:0x3f14d386,al
  4035d5:	sub    DWORD PTR [edx-0x88fcd72],edi
  4035db:	out    0x9f,al
  4035dd:	push   es
  4035de:	mov    ebp,0x73fd3d8
  4035e3:	fld    DWORD PTR [esi+0x23]
  4035e6:	(bad)  
  4035e7:	mov    DWORD PTR [edi],ebp
  4035e9:	ficom  WORD PTR [esi+0x74efe61e]
  4035ef:	mov    ds:0x24279a96,al
  4035f4:	cwde   
  4035f5:	push   eax
  4035f6:	sti    
  4035f7:	push   ecx
  4035f8:	jns    0x4035a4
  4035fa:	jnp    0x40361c
  4035fc:	xor    al,0xac
  4035fe:	sub    BYTE PTR [edi],cl
  403600:	int    0x2a
  403602:	push   ebp
  403603:	mov    edx,0xc692c783
  403608:	sar    BYTE PTR [eax],1
  40360a:	or     al,0xc9
  40360c:	stos   DWORD PTR es:[edi],eax
  40360d:	xchg   esi,eax
  40360e:	rcl    DWORD PTR [ecx+esi*8],0xec
  403612:	loop   0x403669
  403614:	popa   
  403615:	and    BYTE PTR [ebp-0x38c15103],0xdb
  40361c:	pop    edx
  40361d:	lods   al,BYTE PTR ds:[esi]
  40361e:	inc    esi
  40361f:	rcr    BYTE PTR [edx+eax*1],0xa5
  403623:	mov    cl,0x63
  403625:	inc    cl
  403627:	lds    ebx,FWORD PTR [edx+0x79]
  40362a:	push   esp
  40362b:	test   al,0xf5
  40362d:	in     al,dx
  40362e:	xchg   edx,eax
  40362f:	dec    ebx
  403630:	mov    BYTE PTR [edx-0x22297c7d],ah
  403636:	xor    al,0x4
  403638:	retf   0x98b7
  40363b:	mov    eax,ds:0x47dfb627
  403640:	cdq    
  403641:	xchg   edx,eax
  403642:	out    0xb,eax
  403644:	add    dl,bh
  403646:	test   eax,0xd88401f7
  40364b:	(bad)  
  40364c:	retf   0xee56
  40364f:	rol    eax,1
  403651:	clc    
  403652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403653:	setnp  BYTE PTR [ecx]
  403656:	fld    TBYTE PTR [edi-0x12dab63d]
  40365c:	push   edi
  40365d:	inc    eax
  40365e:	sub    BYTE PTR [esi],ch
  403660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403661:	mov    ebp,DWORD PTR [ebx-0x5c]
  403664:	mov    eax,ds:0x6b27bbe4
  403669:	dec    ecx
  40366a:	inc    ebp
  40366b:	idiv   dl
  40366d:	jnp    0x40365d
  40366f:	sub    esi,DWORD PTR [edi-0x58d82fc0]
  403675:	repnz retf 
  403677:	jg     0x403640
  403679:	out    dx,al
  40367a:	or     eax,0xe5eea86c
  40367f:	jp     0x403699
  403681:	jl     0x403691
  403683:	and    DWORD PTR [edi-0x38],esi
  403686:	mov    ebx,0x303cbfdc
  40368b:	sbb    DWORD PTR [ebp-0x6d0c5462],eax
  403691:	fcmovnbe st,st(2)
  403693:	mov    al,0xb8
  403695:	xchg   esi,eax
  403696:	xchg   esi,eax
  403697:	and    edi,DWORD PTR [esp+ecx*4-0x80]
  40369b:	stos   BYTE PTR es:[edi],al
  40369c:	in     al,0x35
  40369e:	and    eax,0x86267dda
  4036a3:	mov    ds:0xa48a22f2,eax
  4036a8:	xchg   ebx,eax
  4036a9:	jmp    0x4036f8
  4036ab:	data16 out dx,al
  4036ad:	fcom   st(6)
  4036af:	out    0x4f,eax
  4036b1:	scas   eax,DWORD PTR es:[edi]
  4036b2:	xor    BYTE PTR [ebp+0x1c0fdb04],0xee
  4036b9:	call   0x17b2ee1f
  4036be:	push   0xc771cb58
  4036c3:	inc    edi
  4036c4:	xchg   ebx,eax
  4036c5:	addr16 push 0xffffffb0
  4036c8:	sti    
  4036c9:	(bad)  
  4036ca:	and    DWORD PTR gs:[ebx],edx
  4036cd:	(bad)  
  4036ce:	(bad)  
  4036d0:	inc    edx
  4036d1:	sbb    DWORD PTR [edi-0x5b8981c2],0xc0f8f9ba
  4036db:	cmp    BYTE PTR [esi+0x4c],bh
  4036de:	add    al,0x36
  4036e0:	adc    ch,BYTE PTR [eax-0x7258bc6e]
  4036e6:	xchg   DWORD PTR [edx+ecx*1],esp
  4036e9:	std    
  4036ea:	in     eax,dx
  4036eb:	mov    cl,BYTE PTR [esp+edi*4+0x78bc9b13]
  4036f2:	adc    al,0xf8
  4036f4:	sti    
  4036f5:	lea    esi,[edi]
  4036f7:	ret    0x9d1c
  4036fa:	out    dx,eax
  4036fb:	repz mov bh,0x90
  4036fe:	mov    WORD PTR [ebx+0x833fe8b],fs
  403704:	imul   ebx,DWORD PTR [ebx-0x77d8efdc],0x196b0583
  40370e:	push   es
  40370f:	pop    es
  403710:	mov    ecx,0x80fa3340
  403715:	dec    esi
  403716:	in     al,dx
  403717:	dec    ecx
  403718:	push   esp
  403719:	icebp  
  40371a:	iret   
  40371b:	mov    ecx,0x4c47a2ea
  403720:	and    eax,0xbe27cb65
  403725:	mov    ch,0x47
  403727:	cmp    DWORD PTR [esi],0x70bd34ed
  40372d:	mov    ebp,0x77357892
  403732:	fimul  DWORD PTR [ebp-0x5643ecdd]
  403738:	jno    0x403755
  40373a:	jg     0x403745
  40373c:	aad    0x99
  40373e:	(bad)  
  40373f:	jbe    0x4037ac
  403741:	in     eax,dx
  403742:	test   al,0xba
  403744:	xor    esp,DWORD PTR [eax]
  403746:	adc    al,0x9d
  403748:	xor    esi,DWORD PTR [eax+0x60]
  40374b:	cli    
  40374c:	cli    
  40374d:	xor    BYTE PTR [edx+0x58d7c095],dl
  403753:	cmp    eax,0x1c058c18
  403758:	xor    DWORD PTR [ebp+0x72],ebp
  40375b:	leave  
  40375c:	mov    DWORD PTR [ebp-0x171922b7],0x7615a3dc
  403766:	(bad)  
  403767:	outs   dx,DWORD PTR ds:[esi]
  403768:	in     ax,dx
  40376a:	fs cwde 
  40376c:	cdq    
  40376d:	imul   ecx,DWORD PTR [eax],0xffffff98
  403770:	in     eax,0x11
  403772:	mov    bh,0x2f
  403774:	sti    
  403775:	push   eax
  403776:	or     eax,0x2c4305db
  40377b:	adc    al,0xcb
  40377d:	xchg   edx,eax
  40377e:	pop    eax
  40377f:	fdiv   DWORD PTR [eax+0x167fff47]
  403785:	pop    edi
  403786:	sbb    DWORD PTR [ebx-0x7a25107d],eax
  40378c:	pop    ds
  40378d:	cmp    eax,0x521ec03d
  403792:	push   ebp
  403793:	scas   eax,DWORD PTR es:[edi]
  403794:	jne    0x4037c6
  403796:	push   ss
  403797:	dec    edi
  403798:	inc    DWORD PTR [eax]
  40379a:	xor    esi,esi
  40379c:	out    0xa5,al
  40379e:	adc    al,0x4f
  4037a0:	inc    edx
  4037a1:	ss out 0x6f,al
  4037a4:	lock ins BYTE PTR es:[edi],dx
  4037a6:	das    
  4037a7:	or     al,0x2
  4037a9:	inc    ebp
  4037aa:	dec    eax
  4037ac:	lods   eax,DWORD PTR ds:[esi]
  4037ad:	fwait
  4037ae:	adc    al,0x79
  4037b0:	fadd   QWORD PTR ss:[eax+0x12]
  4037b4:	sbb    eax,0xd98c3ad9
  4037b9:	cmp    esp,DWORD PTR [ebx+0x22]
  4037bc:	jne    0x403748
  4037be:	not    DWORD PTR [esi-0x3ed100b8]
  4037c4:	enter  0xe3df,0x9c
  4037c8:	mov    ebp,0x96fb6ee4
  4037cd:	or     BYTE PTR [ebx],dh
  4037cf:	cmp    DWORD PTR [eax+0x2c],ebx
  4037d2:	push   0x3a23b944
  4037d7:	add    DWORD PTR [esi-0xa],esi
  4037da:	adc    al,BYTE PTR [edi+0x2cf08cbf]
  4037e0:	mov    DWORD PTR [edi+0x6e],0x66e54979
  4037e7:	mov    dl,0x9f
  4037e9:	dec    ecx
  4037ea:	sti    
  4037eb:	or     BYTE PTR ds:0x1d256fc0,ch
  4037f1:	std    
  4037f2:	add    DWORD PTR ds:0x24a81391,0x9bbfcc33
  4037fc:	loop   0x403857
  4037fe:	hlt    
  4037ff:	xchg   ebx,eax
  403800:	inc    esp
  403801:	sbb    al,0xe9
  403803:	lods   al,BYTE PTR ds:[esi]
  403804:	push   ebp
  403805:	sti    
  403806:	xor    BYTE PTR [ebp+0x4fc4883c],dl
  40380c:	shr    BYTE PTR [ecx-0x3a83d8e1],0x23
  403813:	stc    
  403814:	mov    al,0xde
  403816:	xor    DWORD PTR [ecx],edx
  403818:	mov    al,ds:0xf9aee596
  40381d:	mov    ebp,0xdfc1aba6
  403822:	mov    eax,ds:0xda759ad
  403827:	in     al,dx
  403828:	or     DWORD PTR [eax+ebp*8],edi
  40382b:	jne    0x4038a5
  40382d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40382e:	js     0x40387e
  403830:	(bad)  
  403831:	mov    bh,0x95
  403833:	aam    0xf3
  403835:	add    al,0xb8
  403837:	out    dx,eax
  403838:	ins    DWORD PTR es:[edi],dx
  403839:	mov    ds:0x1df7090f,al
  40383e:	push   cs
  40383f:	aaa    
  403840:	lahf   
  403841:	je     0x403897
  403843:	repnz popa 
  403845:	adc    ebx,DWORD PTR [esi+0x2d]
  403848:	rcl    DWORD PTR [ecx],1
  40384a:	ss pop dx
  40384d:	retf   0x2343
  403850:	xchg   esp,eax
  403851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403852:	pop    edi
  403853:	sbb    BYTE PTR [eax+0x463089ab],cl
  403859:	add    ah,dl
  40385b:	jae    0x4038d6
  40385d:	adc    BYTE PTR [edi+0x64b48fa0],dh
  403863:	jle    0x4038c8
  403865:	and    esp,eax
  403867:	cmp    dh,BYTE PTR [eax]
  403869:	inc    edi
  40386a:	or     ah,BYTE PTR [esi]
  40386c:	push   ebx
  40386d:	fld    TBYTE PTR ds:0x3c95725f
  403873:	mov    ch,0x1b
  403875:	sbb    eax,0xb44e5e34
  40387a:	fs cmc 
  40387c:	mov    dh,0x66
  40387e:	pop    ebp
  40387f:	into   
  403880:	pushf  
  403881:	xor    ch,BYTE PTR [edi+ebp*1-0x80]
  403885:	cld    
  403886:	xchg   ebp,eax
  403887:	mov    ds:0xb380fbbd,eax
  40388c:	sub    BYTE PTR [edi-0x35],0x28
  403890:	addr16 or ah,cl
  403893:	inc    esi
  403894:	add    dh,ch
  403896:	(bad)  
  403897:	jmp    0xd11b:0xc8a056ea
  40389e:	fild   QWORD PTR [ebx]
  4038a0:	out    dx,al
  4038a1:	xchg   BYTE PTR [ebx+ebx*8-0x54fca724],dl
  4038a8:	or     BYTE PTR ds:0xa9b17c67,0xa0
  4038af:	arpl   WORD PTR [esi+edx*2+0x377c2ee],bx
  4038b6:	in     al,dx
  4038b7:	out    dx,eax
  4038b8:	lods   al,BYTE PTR ds:[esi]
  4038b9:	popa   
  4038ba:	(bad)  
  4038bb:	stc    
  4038bc:	dec    esp
  4038bd:	jmp    0x403938
  4038bf:	xor    eax,0xd8674237
  4038c4:	lock nop
  4038c6:	rcl    BYTE PTR ss:[ebx-0x884cd0a],1
  4038cd:	pop    ss
  4038ce:	out    dx,al
  4038cf:	pusha  
  4038d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038d1:	mov    ecx,0xf0009001
  4038d6:	test   al,0xe5
  4038d8:	xchg   BYTE PTR [edx+0x71],cl
  4038db:	and    ebx,ebp
  4038dd:	sub    eax,0xbfb45520
  4038e2:	sbb    eax,0xc147b7cf
  4038e7:	out    dx,al
  4038e8:	addr16 jb 0x4038c4
  4038eb:	scas   eax,DWORD PTR es:[edi]
  4038ec:	adc    eax,0xe39150b3
  4038f1:	into   
  4038f2:	das    
  4038f3:	bnd jmp 0x339596
  4038f9:	push   cs
  4038fa:	outs   dx,BYTE PTR ds:[esi]
  4038fb:	and    edi,DWORD PTR [eax+ebx*4]
  4038fe:	outs   dx,BYTE PTR ds:[esi]
  4038ff:	out    dx,eax
  403900:	int    0xed
  403902:	sub    bl,BYTE PTR [ebx+0x71]
  403905:	ret    
  403906:	mov    eax,ds:0xc57a7293
  40390b:	add    BYTE PTR [edx],bl
  40390d:	loope  0x4038b6
  40390f:	mov    al,0xef
  403911:	pop    es
  403912:	sbb    BYTE PTR [ecx+0x324ed5dc],ch
  403918:	leave  
  403919:	bound  ebx,QWORD PTR [ebx+0x35]
  40391c:	fst    QWORD PTR [edi+0x43]
  40391f:	push   edx
  403920:	ss test eax,0x105f2547
  403926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403927:	ja     0x4038ee
  403929:	xor    ch,BYTE PTR [esi-0x6b]
  40392c:	jl     0x4038d3
  40392e:	jno    0x4038c6
  403930:	fs (bad) 
  403932:	and    dl,BYTE PTR [eax-0x33469f87]
  403938:	loopne 0x403960
  40393a:	lock xor DWORD PTR [ebx-0x51e685a3],ebp
  403941:	scas   eax,DWORD PTR es:[edi]
  403942:	adc    al,0x38
  403944:	or     DWORD PTR [eax],ecx
  403946:	push   ebp
  403947:	push   esi
  403948:	sbb    ebp,ebp
  40394a:	retf   0xff06
  40394d:	xor    dl,bl
  40394f:	add    al,0xba
  403951:	mov    dl,0xf7
  403953:	out    0x8a,al
  403955:	pop    ecx
  403956:	xlat   BYTE PTR ds:[ebx]
  403957:	iret   
  403958:	jmp    0x4038da
  40395a:	mov    ds:0x3587b361,eax
  40395f:	and    DWORD PTR cs:[edx-0x487f3a3c],ebx
  403966:	mov    dh,0xb5
  403968:	sub    DWORD PTR [edx-0x5eb730f1],0x989df735
  403972:	xchg   ecx,eax
  403973:	gs in  al,dx
  403975:	xchg   DWORD PTR [ebp+0x39e0b73],esi
  40397b:	scas   eax,DWORD PTR es:[edi]
  40397c:	pop    ebx
  40397d:	xchg   BYTE PTR [eax-0x65],ah
  403980:	sbb    al,0xed
  403982:	sub    bh,BYTE PTR [ebx+0x7fdb4a93]
  403988:	in     eax,dx
  403989:	xchg   ecx,eax
  40398a:	and    eax,DWORD PTR [ecx-0x79e8dc92]
  403990:	nop
  403991:	mov    ah,0x8
  403993:	mov    ds:0x9d2a4a81,al
  403998:	jle    0x4039a7
  40399a:	ins    BYTE PTR es:[edi],dx
  40399b:	cld    
  40399c:	ret    0x6367
  40399f:	or     BYTE PTR [ecx+0x10a28121],al
  4039a5:	push   0xb5ecb0f
  4039aa:	push   ebx
  4039ab:	int    0x89
  4039ad:	adc    ebp,DWORD PTR [ebp+0x73]
  4039b0:	add    ebx,DWORD PTR [esi+edx*8+0x4acf943d]
  4039b7:	inc    eax
  4039b8:	fmul   QWORD PTR [ebx]
  4039ba:	and    ecx,DWORD PTR [edx]
  4039bc:	xor    BYTE PTR [ebp+eax*4-0x64],al
  4039c0:	inc    ecx
  4039c1:	sbb    BYTE PTR [edi+0x1b],dh
  4039c4:	idiv   DWORD PTR [eax-0x41c888b2]
  4039ca:	mov    ecx,0x42169cf7
  4039cf:	lods   eax,DWORD PTR ds:[esi]
  4039d0:	popf   
  4039d1:	mov    ebx,0xd32e62c7
  4039d6:	mov    edi,0x26090e51
  4039db:	push   es
  4039dc:	leave  
  4039dd:	aas    
  4039de:	xchg   esp,eax
  4039df:	loop   0x4039fb
  4039e1:	out    dx,eax
  4039e2:	adc    ah,bh
  4039e4:	cmp    ebx,DWORD PTR [eax+0xeba72f1]
  4039ea:	retf   0x8a6e
  4039ed:	test   al,0x6b
  4039ef:	outs   dx,BYTE PTR ds:[esi]
  4039f0:	imul   dh
  4039f2:	test   eax,0x8c34cd10
  4039f7:	pushf  
  4039f8:	enter  0x8f53,0x77
  4039fc:	adc    BYTE PTR [edi],dh
  4039fe:	jecxz  0x403a10
  403a00:	aam    0x5f
  403a02:	(bad)  
  403a03:	in     eax,dx
  403a04:	mov    BYTE PTR [ecx-0x11],al
  403a07:	out    dx,al
  403a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a09:	mov    eax,0xa65094a5
  403a0e:	popf   
  403a0f:	cwde   
  403a10:	jmp    0x403a67
  403a12:	pop    ds
  403a13:	pop    ebx
  403a14:	cmp    BYTE PTR [ebp+0x78138ee2],ch
  403a1a:	sar    DWORD PTR [edi],1
  403a1c:	jle    0x403a43
  403a1e:	into   
  403a1f:	(bad)  
  403a20:	jbe    0x403a05
  403a22:	loopne 0x403a24
  403a24:	add    al,0x9c
  403a26:	push   ebp
  403a27:	bndldx (bad),[esp+ebx*1]
  403a2b:	dec    esi
  403a2c:	arpl   WORD PTR [ecx-0x4d597ca4],bx
  403a32:	xchg   ebx,eax
  403a33:	sub    al,0x45
  403a35:	xor    esi,DWORD PTR [edx]
  403a37:	mov    bl,0xc0
  403a39:	dec    edx
  403a3a:	pop    esp
  403a3b:	retf   
  403a3c:	or     ebx,DWORD PTR [ecx]
  403a3e:	push   ds
  403a3f:	and    dl,BYTE PTR [ebp+0x6d]
  403a42:	xor    al,0x5
  403a44:	jmp    0xd3a7b1a6
  403a49:	push   ebp
  403a4a:	mov    DWORD PTR [ebx+0x785d21a0],eax
  403a50:	pop    ds
  403a51:	ins    DWORD PTR es:[edi],dx
  403a52:	inc    edi
  403a53:	xchg   ecx,eax
  403a54:	jo     0x403a2d
  403a56:	fwait
  403a57:	pop    es
  403a58:	in     eax,dx
  403a59:	mov    cl,0x93
  403a5b:	lds    edi,FWORD PTR [esi-0x54b5db6]
  403a61:	and    eax,0x50ee3ce6
  403a66:	adc    eax,0x5c4655f9
  403a6b:	and    ch,al
  403a6d:	mov    DWORD PTR [ebx+0x13],ecx
  403a70:	jl     0x4039f2
  403a72:	jae    0x403af2
  403a74:	mov    al,ds:0x28f83015
  403a79:	or     al,0x4a
  403a7c:	sbb    edi,DWORD PTR [edi+0x50]
  403a7f:	arpl   WORD PTR [ecx+0x6c],di
  403a82:	mov    dl,0xac
  403a84:	xchg   esi,eax
  403a85:	jne    0x403ab6
  403a87:	outs   dx,DWORD PTR ds:[esi]
  403a88:	cmp    al,0x33
  403a8a:	icebp  
  403a8b:	mov    bl,0xe6
  403a8d:	test   al,0x4e
  403a8f:	pop    edx
  403a90:	test   DWORD PTR [ebx],ebp
  403a92:	enter  0x6ffd,0xf8
  403a96:	(bad)  
  403a97:	xchg   ebp,eax
  403a98:	ficomp WORD PTR [eax]
  403a9a:	ins    BYTE PTR es:[edi],dx
  403a9b:	clc    
  403a9c:	mov    edi,ds
  403a9e:	sub    cl,bh
  403aa0:	sub    edi,DWORD PTR [ebp-0x78]
  403aa3:	sub    al,BYTE PTR [ecx+edx*1+0x37]
  403aa7:	xchg   esi,eax
  403aa8:	mov    BYTE PTR [eax-0xf24465e],al
  403aae:	adc    ebp,eax
  403ab0:	cmp    eax,0x55c6bde2
  403ab5:	mov    edi,0xe2835a25
  403aba:	mov    cl,0x8f
  403abc:	or     ebp,DWORD PTR [ebx+0x14]
  403abf:	xchg   ebp,eax
  403ac0:	outs   dx,DWORD PTR ds:[esi]
  403ac1:	xor    BYTE PTR [edx+0x51],0x24
  403ac5:	xor    eax,0x7432d7bf
  403aca:	push   ds
  403acb:	adc    al,0x5e
  403acd:	sahf   
  403ace:	push   ecx
  403acf:	int3   
  403ad0:	fisub  WORD PTR [ecx-0x691fbe1]
  403ad6:	repnz lods eax,DWORD PTR ds:[esi]
  403ad8:	fwait
  403ad9:	les    ebp,FWORD PTR [esp+ebx*1]
  403adc:	push   esi
  403add:	call   0xa574:0x96731342
  403ae4:	cs sbb cl,bh
  403ae7:	cmp    ch,al
  403ae9:	pop    ss
  403aea:	sahf   
  403aeb:	mov    ebx,0xaa04c7a1
  403af0:	cwde   
  403af1:	sub    BYTE PTR [eax],cl
  403af3:	dec    edx
  403af4:	and    al,BYTE PTR [ecx]
  403af6:	mov    ecx,0x6db2d9d2
  403afb:	into   
  403afc:	mov    dl,BYTE PTR [esi]
  403afe:	jno    0x403aa4
  403b00:	sbb    eax,0xbd6479e0
  403b05:	cwde   
  403b06:	and    bl,BYTE PTR [esi]
  403b08:	and    esi,DWORD PTR [esi-0x68]
  403b0b:	jge    0x403a96
  403b0d:	mov    cl,dl
  403b0f:	fidivr WORD PTR [ecx-0x6f]
  403b12:	xchg   edx,eax
  403b13:	mov    bl,0x3b
  403b15:	push   DWORD PTR ds:0xc9ae3744
  403b1b:	loop   0x403ab3
  403b1d:	jnp    0x403b68
  403b1f:	mov    dl,0xa0
  403b21:	push   DWORD PTR [eax+0x73]
  403b24:	stos   BYTE PTR es:[edi],al
  403b25:	and    eax,0x711fdeea
  403b2a:	shr    BYTE PTR [ebp-0x9],0xf6
  403b2e:	xor    ecx,ebx
  403b30:	sbb    eax,0xfc73ce77
  403b35:	cmp    edx,esi
  403b37:	lods   al,BYTE PTR ds:[esi]
  403b38:	push   edi
  403b39:	call   0xd6dd:0x513ed49a
  403b40:	adc    edx,ecx
  403b42:	inc    eax
  403b43:	jge    0x403b90
  403b45:	test   DWORD PTR [ecx-0xc0eb1ba],0xe66e4d15
  403b4f:	sub    al,BYTE PTR [eax-0x1f]
  403b52:	sub    dl,BYTE PTR [edx-0x67]
  403b55:	mov    ah,0xfd
  403b57:	jge    0x403bb1
  403b59:	imul   ecx,DWORD PTR [esi],0x3
  403b5c:	pop    ss
  403b5d:	push   ebx
  403b5e:	xor    DWORD PTR [ecx-0x6b345f32],0xffffffb3
  403b65:	std    
  403b66:	ds push 0x22
  403b69:	dec    edi
  403b6a:	push   ebx
  403b6b:	lahf   
  403b6c:	sti    
  403b6d:	jae    0x403b6c
  403b6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b70:	rcl    BYTE PTR [edx+0x52],0x8f
  403b74:	mov    ds:0x1ccd2d96,al
  403b79:	(bad)  
  403b7a:	sub    DWORD PTR [ebx],ebp
  403b7c:	lods   eax,DWORD PTR ds:[esi]
  403b7d:	stos   DWORD PTR es:[edi],eax
  403b7e:	mov    ch,0x1a
  403b80:	add    al,0x1e
  403b82:	pop    edi
  403b83:	iret   
  403b84:	pop    eax
  403b85:	fstp   QWORD PTR [ebx+0x7aced1bf]
  403b8b:	mov    ch,0xcf
  403b8d:	std    
  403b8e:	cmp    al,al
  403b90:	inc    edx
  403b91:	jle    0x403bcf
  403b93:	push   cs
  403b94:	adc    eax,0x4a471f3b
  403b99:	rcl    BYTE PTR [ebx-0x218bb0bf],0x9a
  403ba0:	aad    0xa8
  403ba2:	stos   BYTE PTR es:[edi],al
  403ba3:	lds    esi,FWORD PTR [ecx+0x3]
  403ba6:	adc    ch,dl
  403ba8:	pop    ds
  403ba9:	or     DWORD PTR [eax],esi
  403bab:	pusha  
  403bac:	xchg   ecx,eax
  403bad:	jne    0x403bd1
  403baf:	adc    al,0x6d
  403bb1:	push   edi
  403bb2:	push   ebp
  403bb3:	loopne 0x403c11
  403bb5:	inc    edi
  403bb6:	hlt    
  403bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bb8:	loopne 0x403bab
  403bba:	mov    ebp,fs
  403bbc:	cmc    
  403bbd:	test   BYTE PTR [eax*4-0x1e6413e2],cl
  403bc4:	mov    ebx,0x6bc39eb3
  403bc9:	sub    ah,bh
  403bcb:	outs   dx,BYTE PTR ds:[esi]
  403bcc:	hlt    
  403bcd:	dec    ebx
  403bce:	enter  0xa2ee,0x55
  403bd2:	call   FWORD PTR [ebp-0xe976fb5]
  403bd8:	sahf   
  403bd9:	test   edi,ebx
  403bdb:	mul    DWORD PTR [ebp-0x73]
  403bde:	cmp    edi,DWORD PTR [ebx+0x1a]
  403be1:	fiadd  DWORD PTR [edi+0x69b5d9fc]
  403be7:	add    DWORD PTR [ebx],0x77
  403bea:	jmp    0xb810:0x6b09ac1a
  403bf1:	fs pop ebp
  403bf3:	jo     0x403c2e
  403bf5:	adc    dl,ah
  403bf7:	(bad)  
  403bf8:	xor    ebx,ebx
  403bfa:	push   ebp
  403bfb:	push   ebp
  403bfc:	leave  
  403bfd:	nop
  403bfe:	iret   
  403bff:	mov    dl,0x86
  403c01:	mov    ds:0x94339308,eax
  403c06:	addr16 std 
  403c08:	add    esp,edx
  403c0a:	aaa    
  403c0b:	or     edi,ebx
  403c0d:	pop    ebp
  403c0e:	stos   BYTE PTR es:[edi],al
  403c0f:	es push cs
  403c11:	xor    DWORD PTR ds:0xa1d0a6a4,ebp
  403c17:	sub    dh,cl
  403c19:	int3   
  403c1a:	call   FWORD PTR [ecx]
  403c1c:	mov    bh,0x25
  403c1e:	sbb    eax,0xedee20b4
  403c23:	mov    al,BYTE PTR [eax-0x61]
  403c26:	xor    eax,ecx
  403c28:	inc    ebx
  403c29:	mov    edi,0x459acca1
  403c2e:	sbb    bh,ah
  403c30:	add    al,0xa7
  403c32:	push   esp
  403c33:	ror    DWORD PTR [eax+0x7a],1
  403c36:	inc    ebp
  403c37:	push   ebp
  403c38:	pop    esp
  403c39:	popf   
  403c3a:	dec    eax
  403c3b:	jae    0x403ca0
  403c3d:	adc    cl,BYTE PTR [edi+0x2f0be756]
  403c43:	xor    BYTE PTR [edi],al
  403c45:	dec    cx
  403c47:	mov    bh,al
  403c49:	jmp    0xdf29b29f
  403c4e:	lahf   
  403c4f:	mov    edx,0x563f294c
  403c54:	inc    BYTE PTR [ecx]
  403c56:	mov    al,0x90
  403c58:	ror    DWORD PTR es:[edx-0x11],cl
  403c5c:	mov    edx,0xa0514da3
  403c61:	stos   BYTE PTR es:[edi],al
  403c62:	out    dx,al
  403c63:	lock popa 
  403c65:	iret   
  403c66:	pop    ss
  403c67:	hlt    
  403c68:	mov    edx,0xde425f69
  403c6d:	gs push cs
  403c6f:	jnp    0x403c74
  403c71:	fisub  DWORD PTR [esp+eax*1+0x5288cbfb]
  403c78:	sub    DWORD PTR [edi-0x26b56edd],esi
  403c7e:	push   eax
  403c7f:	mov    dl,0xcc
  403c81:	or     DWORD PTR [edi+0x50],eax
  403c84:	popf   
  403c85:	adc    edi,DWORD PTR [edi-0x19aadce8]
  403c8b:	ins    BYTE PTR es:[edi],dx
  403c8c:	dec    esp
  403c8d:	push   es
  403c8e:	enter  0xffcb,0x2c
  403c92:	cmc    
  403c93:	push   0x6a
  403c95:	or     BYTE PTR [esi-0xe],al
  403c98:	or     ah,dl
  403c9a:	jecxz  0x403ca9
  403c9c:	fdivp  st(7),st
  403c9e:	or     DWORD PTR [ecx],ebp
  403ca0:	jg     0x403cf1
  403ca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ca3:	icebp  
  403ca4:	mov    eax,eax
  403ca6:	add    BYTE PTR ds:0x73b0b750,al
  403cac:	or     al,0x4c
  403cae:	fld    DWORD PTR [esi-0x1327d4f0]
  403cb4:	and    ch,BYTE PTR [edx-0x2c6d25c7]
  403cba:	adc    eax,edi
  403cbc:	(bad)  [ebp-0x61745e32]
  403cc2:	div    DWORD PTR [edx]
  403cc4:	(bad)  
  403cc5:	ins    BYTE PTR es:[edi],dx
  403cc6:	repnz jecxz 0x403d37
  403cc9:	sbb    eax,0xe90f11ee
  403cce:	push   ecx
  403ccf:	jmp    0xfe2ac557
  403cd4:	dec    edi
  403cd5:	push   esp
  403cd6:	shr    BYTE PTR [edx],0x5e
  403cd9:	add    edx,DWORD PTR [ecx+ecx*4-0x5379a679]
  403ce0:	lds    ecx,FWORD PTR [edx+0x54]
  403ce3:	fmul   QWORD PTR [edi-0x19]
  403ce6:	dec    esp
  403ce7:	test   eax,0xa0eb128
  403cec:	dec    esi
  403ced:	add    al,0xc9
  403cef:	push   ecx
  403cf0:	add    dl,BYTE PTR gs:[eax]
  403cf3:	test   al,0x2b
  403cf5:	sbb    dl,BYTE PTR [ebx]
  403cf7:	enter  0x10f5,0x8a
  403cfb:	cdq    
  403cfc:	inc    esp
  403cfd:	ret    
  403cfe:	xchg   BYTE PTR [ecx+0x6eedc65],ah
  403d04:	(bad)  
  403d05:	out    dx,al
  403d06:	adc    esp,DWORD PTR ds:0x51f8967e
  403d0c:	pop    esi
  403d0d:	ss popf 
  403d0f:	sub    cl,BYTE PTR ds:0xebc2943d
  403d15:	mov    edx,DWORD PTR [eax+0x3b340755]
  403d1b:	mov    dh,0xec
  403d1d:	fcomp  DWORD PTR [ecx-0x7697e019]
  403d23:	popa   
  403d24:	inc    ebx
  403d26:	push   eax
  403d27:	xor    ecx,DWORD PTR [ebx]
  403d29:	sub    BYTE PTR [ebp+eax*4+0x28],0x1e
  403d2e:	pop    esp
  403d2f:	dec    esi
  403d30:	scas   eax,DWORD PTR es:[edi]
  403d31:	out    dx,eax
  403d32:	pop    es
  403d33:	into   
  403d34:	(bad)  
  403d36:	jl     0x403d0b
  403d38:	jecxz  0x403db1
  403d3a:	fbstp  TBYTE PTR [ebx]
  403d3c:	cmp    cl,BYTE PTR [ebp+0x4c]
  403d3f:	dec    esp
  403d40:	jb     0x403d8a
  403d42:	popa   
  403d43:	dec    esp
  403d44:	jbe    0x403daf
  403d46:	push   es
  403d47:	(bad)  
  403d48:	fld    DWORD PTR [eax]
  403d4a:	lea    eax,[edi+esi*4+0x24]
  403d4e:	xchg   DWORD PTR [esi-0x6a],esi
  403d51:	jns    0x403d66
  403d53:	push   es
  403d54:	ja     0x403d51
  403d56:	jl     0x403d78
  403d58:	dec    ebx
  403d59:	movzx  esi,BYTE PTR [esi+0x22]
  403d5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d5e:	js     0x403db6
  403d60:	daa    
  403d61:	pushf  
  403d62:	and    al,0xe1
  403d64:	pop    ebp
  403d65:	dec    ebp
  403d66:	lahf   
  403d67:	scas   eax,DWORD PTR es:[edi]
  403d68:	push   ebx
  403d69:	nop
  403d6a:	call   0xe7e1:0x3b3a85ab
  403d71:	das    
  403d72:	lods   eax,DWORD PTR ds:[esi]
  403d73:	hlt    
  403d74:	test   BYTE PTR [ebx+0x1f],ch
  403d77:	mov    ebp,0xcd9bd07
  403d7c:	shr    DWORD PTR [ebp+0x95f1e9f],0x42
  403d83:	jmp    0x403d6f
  403d85:	enter  0x1bbc,0xe7
  403d89:	mov    al,0xfa
  403d8b:	(bad)  
  403d8c:	mov    cl,0x9
  403d8e:	jle    0x403d60
  403d90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d91:	je     0x403db2
  403d93:	imul   edx,DWORD PTR [edx+0x3258aff5],0x83953f6
  403d9d:	dec    ecx
  403d9e:	adc    esi,DWORD PTR [edi-0x7d2cd4f5]
  403da4:	test   BYTE PTR [ecx-0x2e38e05e],0x80
  403dab:	sbb    eax,0xe88a6c6
  403db0:	fistp  WORD PTR [ecx+eiz*2+0x29c97d78]
  403db7:	cmp    dl,BYTE PTR [eax]
  403db9:	xchg   edx,eax
  403dba:	call   0xf313:0x7f8fcad7
  403dc1:	dec    esp
  403dc2:	or     DWORD PTR [ecx-0x18389e57],ebp
  403dc8:	pop    ss
  403dc9:	rcl    DWORD PTR [ecx],0xab
  403dcc:	cmp    eax,0x96105034
  403dd1:	dec    eax
  403dd2:	mov    BYTE PTR [esi+0x4d],ch
  403dd5:	stc    
  403dd6:	adc    DWORD PTR [ebp-0x63],0xffffffc6
  403dda:	mov    dh,0x76
  403ddc:	daa    
  403ddd:	push   eax
  403dde:	or     dl,BYTE PTR [edx+0x7bd28f7c]
  403de4:	push   cs
  403de5:	sbb    DWORD PTR [eax+0x4],0xffffff96
  403de9:	ret    0x86b5
  403dec:	and    ah,dl
  403dee:	jmp    0x5b9:0xc3d5b207
  403df5:	mov    WORD PTR ds:0x6bc358ff,ss
  403dfb:	jbe    0x403dce
  403dfd:	pushw  ds
  403dff:	jno    0x403e65
  403e01:	bound  esi,QWORD PTR [ecx+0x7c0c1c59]
  403e07:	mov    esp,0x208cf793
  403e0c:	adc    ebx,DWORD PTR [ebx+0x77]
  403e0f:	in     eax,dx
  403e10:	mov    dl,0xf
  403e12:	xchg   DWORD PTR [edx],edi
  403e14:	iret   
  403e15:	scas   al,BYTE PTR es:[edi]
  403e16:	add    ch,BYTE PTR [ebp+0x5e0ba8c1]
  403e1c:	inc    esp
  403e1d:	frstor [esi+edi*1]
  403e20:	push   ds
  403e21:	ret    
  403e22:	pusha  
  403e23:	(bad)  
  403e24:	add    ebp,DWORD PTR [edx+0x71]
  403e27:	stc    
  403e28:	and    ebx,esi
  403e2a:	jecxz  0x403e3c
  403e2c:	mov    esi,0xc5489199
  403e31:	scas   al,BYTE PTR es:[edi]
  403e32:	test   al,0x26
  403e34:	call   0xb19753d6
  403e39:	test   DWORD PTR [ebp+0xfea5612],edi
  403e3f:	mov    bl,0xec
  403e41:	fmul   st(1),st
  403e43:	sbb    esp,DWORD PTR [eax-0x97ea98b]
  403e49:	mov    al,0x6
  403e4b:	mov    edi,DWORD PTR ds:0x40d7dd36
  403e51:	stc    
  403e52:	cmp    DWORD PTR [edi+0x58],ebx
  403e55:	popf   
  403e56:	test   al,0x34
  403e58:	shr    edi,1
  403e5a:	fs pop esi
  403e5c:	cmp    BYTE PTR ds:[edi+0x6c],dh
  403e60:	dec    eax
  403e61:	dec    esp
  403e62:	jecxz  0x403e73
  403e64:	inc    edi
  403e65:	jo     0x403e41
  403e67:	mov    al,ds:0x79660cd9
  403e6c:	xor    BYTE PTR [ecx+ebp*8-0xa9d141a],dl
  403e73:	sub    eax,0x9f3e9a4d
  403e78:	add    BYTE PTR [edx-0x15e05c88],dh
  403e7e:	shl    DWORD PTR [eax-0x7c7c814e],cl
  403e84:	test   esp,eax
  403e86:	jmp    0x403e9a
  403e88:	sub    eax,0xd0890f3a
  403e8d:	into   
  403e8e:	sbb    al,BYTE PTR [edx+0x77]
  403e91:	dec    edi
  403e92:	jae    0x403f08
  403e94:	dec    ebp
  403e95:	xchg   cl,ch
  403e97:	(bad)  
  403e99:	ret    
  403e9a:	mov    esi,0xe7fcc851
  403e9f:	loopne 0x403eb4
  403ea1:	in     eax,0xb6
  403ea3:	xlat   BYTE PTR ds:[ebx]
  403ea4:	pop    edx
  403ea5:	dec    esp
  403ea6:	mov    cl,0xfe
  403ea8:	popa   
  403ea9:	xor    eax,DWORD PTR cs:0xecd23703
  403eb0:	and    BYTE PTR [ebp+0x74],bl
  403eb3:	add    BYTE PTR [ebx+eiz*8+0x2e83470c],cl
  403eba:	out    dx,eax
  403ebb:	and    si,WORD PTR [ecx]
  403ebe:	and    eax,0x8f207e33
  403ec3:	add    esi,DWORD PTR [edx-0x46]
  403ec6:	cmp    DWORD PTR [ebp-0x57],ebx
  403ec9:	outs   dx,DWORD PTR ds:[esi]
  403eca:	fisubr WORD PTR [ebx+0x3]
  403ecd:	clc    
  403ece:	ss (bad) 
  403ed0:	inc    DWORD PTR [ecx]
  403ed2:	or     dl,BYTE PTR [ecx-0x7f2d8351]
  403ed8:	int3   
  403ed9:	and    eax,0x5ae69c59
  403ede:	cs (bad) 
  403ee0:	ficom  DWORD PTR [eax+edi*1]
  403ee3:	enter  0xa1f4,0xc3
  403ee7:	aad    0x37
  403ee9:	cmp    DWORD PTR [ebx],esi
  403eeb:	in     eax,0x2d
  403eed:	mov    dl,0x7a
  403eef:	xor    al,0xd4
  403ef1:	das    
  403ef2:	mov    ebp,0x3ea67cb6
  403ef7:	cmp    esp,DWORD PTR [ebp-0x7c8f4df2]
  403efd:	sub    DWORD PTR [esi+eiz*2-0x67006fee],ebx
  403f04:	sbb    BYTE PTR [edx+0x3c],ah
  403f07:	mov    dh,0x54
  403f09:	sbb    BYTE PTR [ebx+edi*2],0xfd
  403f0d:	push   esi
  403f0e:	add    BYTE PTR [ebx],0x3f
  403f11:	inc    ebx
  403f12:	dec    ecx
  403f13:	sub    BYTE PTR [ebx+ebp*8-0x38],dh
  403f17:	cmp    ah,bl
  403f19:	mov    dh,0x3a
  403f1b:	aam    0xa7
  403f1d:	jecxz  0x403ecf
  403f1f:	pop    esi
  403f20:	es sti 
  403f22:	iret   
  403f23:	fs in  al,0x9d
  403f26:	in     eax,0xea
  403f28:	adc    eax,0x26ffb78b
  403f2d:	mov    bl,0xbd
  403f2f:	cdq    
  403f30:	xchg   ecx,eax
  403f31:	mov    al,ds:0xa79a2a4f
  403f36:	js     0x403f24
  403f38:	mov    DWORD PTR [eax-0x28a8f7da],0x83168d3d
  403f42:	lock sahf 
  403f44:	fwait
  403f45:	adc    eax,0x70b82b05
  403f4a:	inc    ecx
  403f4b:	pusha  
  403f4c:	stc    
  403f4d:	aad    0x11
  403f4f:	mov    dl,BYTE PTR [ebp+0x5a78db67]
  403f55:	cmp    BYTE PTR [ecx+esi*4],dl
  403f58:	ror    esi,cl
  403f5a:	sahf   
  403f5b:	call   0xfcfb833d
  403f60:	push   cs
  403f61:	mov    dh,0x3b
  403f63:	mov    ?,WORD PTR [edi+ebx*1-0x4ed47e67]
  403f6a:	imul   bl
  403f6c:	sub    ecx,esp
  403f6e:	fucomip st,st(0)
  403f70:	into   
  403f71:	clc    
  403f72:	sahf   
  403f73:	das    
  403f74:	rol    al,0x6b
  403f77:	std    
  403f78:	mov    cl,0xbe
  403f7a:	add    al,0xd7
  403f7c:	sbb    DWORD PTR [esi-0x46],0xbead387b
  403f83:	dec    eax
  403f84:	jns    0x403f97
  403f86:	dec    ebx
  403f87:	push   0xffffff86
  403f89:	mov    ds:0x603b4253,eax
  403f8e:	jp     0x403f4d
  403f90:	sub    BYTE PTR [edx-0x1c],0xd1
  403f94:	dec    edi
  403f95:	or     DWORD PTR [esp+ebp*1-0x59],esp
  403f99:	icebp  
  403f9a:	retf   0x8460
  403f9d:	inc    esi
  403f9e:	inc    ebx
  403f9f:	bound  esi,QWORD PTR [ecx-0x2ad946a]
  403fa5:	dec    ebp
  403fa6:	or     BYTE PTR cs:[ebx+0x510cf6be],dh
  403fad:	icebp  
  403fae:	push   edx
  403faf:	js     0x403f82
  403fb1:	(bad)  
  403fb2:	jbe    0x40400f
  403fb4:	sbb    DWORD PTR [ebp+0x4f],ecx
  403fb7:	jle    0x403f3c
  403fb9:	xchg   ebp,eax
  403fba:	mov    ch,0xea
  403fbc:	sub    DWORD PTR [ebx-0x77],esi
  403fbf:	in     al,0x99
  403fc1:	ds jl  0x403f4b
  403fc4:	xor    BYTE PTR [ebx-0x33],dl
  403fc7:	adc    eax,0x9e64989f
  403fcc:	cli    
  403fcd:	adc    al,0xf9
  403fcf:	cli    
  403fd0:	imul   esp,DWORD PTR [eax-0x2a19030b],0x21
  403fd7:	dec    ecx
  403fd8:	or     eax,0xd6bb9739
  403fdd:	and    dh,BYTE PTR [edi]
  403fdf:	mov    ebp,0xa37ee2dc
  403fe4:	popf   
  403fe5:	mov    ds:0x1a6b99e5,eax
  403fea:	push   ecx
  403feb:	mov    eax,0x1fc6a00f
  403ff0:	sub    eax,0xec134b9a
  403ff5:	add    bl,dl
  403ff7:	ja     0x403fb8
  403ff9:	push   ebp
  403ffa:	hlt    
  403ffb:	push   ss
  403ffc:	test   DWORD PTR [ebx-0x7d],0xf24f46c
  404003:	stos   BYTE PTR es:[edi],al
  404004:	jge    0x403fcc
  404006:	mov    esi,0x462025d4
  40400b:	add    al,BYTE PTR [ecx+ecx*4+0x643e5bde]
  404012:	call   0x570f:0x7e216867
  404019:	cmp    DWORD PTR ds:0x737f82c,ebp
  40401f:	sub    edi,DWORD PTR [ecx]
  404021:	(bad)  
  404022:	adc    BYTE PTR [ebp-0x54],bh
  404025:	aaa    
  404026:	ins    BYTE PTR es:[edi],dx
  404027:	xor    BYTE PTR [ecx+0x28],bl
  40402a:	mov    bl,0x7f
  40402c:	fcomp  QWORD PTR [esi]
  40402e:	inc    ecx
  40402f:	or     ebp,DWORD PTR ds:0xa2b16992
  404035:	out    0x7a,al
  404037:	dec    edx
  404038:	imul   edx,DWORD PTR [eax-0x65244f71],0xf1617c2d
  404042:	or     cl,dl
  404044:	add    eax,0xf3a2aab0
  404049:	mov    edx,0xbff4e449
  40404e:	jge    0x4040bd
  404050:	ds mov ah,0xdb
  404053:	mov    dh,0xc1
  404055:	inc    ebx
  404056:	imul   BYTE PTR [edx+edi*1+0x6021fe8c]
  40405d:	xchg   DWORD PTR [eax],eax
  40405f:	(bad)  
  404060:	xor    al,BYTE PTR [edi]
  404062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404063:	push   ss
  404064:	out    0xf8,al
  404066:	test   al,0xc0
  404068:	ja     0x404094
  40406a:	or     eax,0xb3ab233a
  40406f:	sbb    ah,BYTE PTR [edx-0x50cfa2ec]
  404075:	xchg   ecx,eax
  404076:	fs test al,0xed
  404079:	mov    dl,0xd5
  40407b:	jns    0x404089
  40407d:	out    dx,al
  40407e:	sub    DWORD PTR [eax+0x7],edi
  404081:	dec    ebx
  404082:	jmp    0x6a63dc25
  404087:	mov    ecx,0xe2754c20
  40408c:	aas    
  40408d:	(bad)  
  40408e:	mov    DWORD PTR [ebp-0x29],0x7105f7b8
  404095:	fbstp  TBYTE PTR [ecx+0x7b]
  404098:	fcomp  QWORD PTR ds:0x449dff94
  40409e:	or     eax,0x9f627ec7
  4040a3:	push   ds
  4040a4:	push   0x20
  4040a6:	loop   0x40403e
  4040a8:	push   0xffffff9f
  4040aa:	das    
  4040ab:	idiv   esi
  4040ad:	mov    ebx,ebp
  4040af:	xchg   BYTE PTR [ebp+0x41],ch
  4040b2:	int3   
  4040b3:	leave  
  4040b4:	or     dl,BYTE PTR [edx+0x40e4ee66]
  4040ba:	push   eax
  4040bb:	outs   dx,DWORD PTR ds:[esi]
  4040bc:	in     eax,dx
  4040bd:	or     al,0xbb
  4040bf:	out    dx,eax
  4040c0:	bound  esi,QWORD PTR [ebx]
  4040c2:	cld    
  4040c3:	adc    BYTE PTR [esp+ebx*1],dh
  4040c6:	ss or  al,0xff
  4040c9:	adc    eax,0x4ab410f1
  4040ce:	addr16 push ds
  4040d0:	adc    eax,edx
  4040d2:	enter  0x364c,0x3a
  4040d6:	xor    eax,0x5f12e3b9
  4040db:	pop    esp
  4040dc:	pop    edi
  4040dd:	int3   
  4040de:	clc    
  4040df:	hlt    
  4040e0:	addr16 inc edi
  4040e2:	or     BYTE PTR [ebp-0x5c],dh
  4040e5:	or     DWORD PTR [edi],esi
  4040e7:	mov    ebp,0x66b92886
  4040ec:	mov    esi,0x101be057
  4040f1:	xor    DWORD PTR [edi-0x2a],ebx
  4040f4:	scas   eax,DWORD PTR es:[edi]
  4040f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040f6:	int    0xb
  4040f8:	cmp    ah,BYTE PTR [ecx]
  4040fa:	retf   
  4040fb:	fsubr  QWORD PTR [esi+0x59c7d798]
  404101:	shl    DWORD PTR [eax+0xb],0xaf
  404105:	ret    
  404106:	dec    BYTE PTR [esi-0x12]
  404109:	retf   0xa682
  40410c:	test   BYTE PTR [ecx-0x25],0xde
  404110:	inc    ebx
  404111:	adc    al,0x4d
  404113:	and    ah,ah
  404115:	jae    0x40417c
  404117:	pop    eax
  404118:	mov    ds:0x102170cb,eax
  40411d:	je     0x404111
  40411f:	imul   esi,esp,0x8
  404122:	stos   BYTE PTR es:[edi],al
  404123:	sub    bh,BYTE PTR [eax-0x32]
  404126:	jge    0x404171
  404128:	dec    ecx
  404129:	in     eax,0x35
  40412b:	add    cl,ah
  40412d:	xchg   DWORD PTR [ebp+0x1f],edx
  404130:	sub    BYTE PTR [edi],cl
  404132:	icebp  
  404133:	mov    ebx,0x571de746
  404138:	fidiv  WORD PTR [ebx]
  40413a:	popf   
  40413b:	iret   
  40413c:	icebp  
  40413d:	aas    
  40413e:	xchg   edx,eax
  40413f:	les    edi,FWORD PTR [ecx+0x5c5f5924]
  404145:	fstp   TBYTE PTR [edi-0x2c]
  404148:	loop   0x404125
  40414a:	test   al,0x15
  40414c:	ins    BYTE PTR es:[edi],dx
  40414d:	pop    ds
  40414e:	retf   0x664f
  404151:	sar    edi,0x17
  404154:	xor    DWORD PTR [ecx],edi
  404156:	cmp    DWORD PTR [edx+0x19ed76a9],ebp
  40415c:	scas   al,BYTE PTR es:[edi]
  40415d:	int    0x2a
  40415f:	iret   
  404160:	out    dx,al
  404161:	shr    BYTE PTR [esi+0x26],cl
  404164:	inc    ebp
  404165:	out    0xd2,al
  404167:	cmp    BYTE PTR [edx+eax*2-0x483fa8c7],ch
  40416e:	sbb    eax,esp
  404170:	out    0xb,eax
  404172:	rol    DWORD PTR [edx-0x24],cl
  404175:	xchg   DWORD PTR [eax+edx*4-0xf6ea6e8],eax
  40417c:	xchg   ebp,eax
  40417d:	mov    dl,0x2c
  40417f:	out    dx,al
  404180:	and    ch,ch
  404182:	dec    ebp
  404183:	pop    ds
  404184:	stc    
  404185:	sbb    ecx,DWORD PTR [edx+0x55]
  404188:	jae    0x40415a
  40418a:	dec    ecx
  40418b:	or     al,0x47
  40418d:	xor    dl,0x7e
  404190:	fucomp st(7)
  404192:	dec    esp
  404193:	jmp    0x9fca789b
  404198:	les    eax,FWORD PTR [ebp-0x28cb2d2e]
  40419e:	inc    edi
  40419f:	sub    eax,0x1c8c255e
  4041a4:	mov    ?,esp
  4041a6:	inc    esi
  4041a7:	push   edi
  4041a8:	mov    ?,esp
  4041aa:	cld    
  4041ab:	and    al,0x29
  4041ad:	out    0xb0,eax
  4041af:	repnz pop esi
  4041b1:	mov    ah,0x7d
  4041b3:	js     0x4041b6
  4041b5:	adc    ah,BYTE PTR [eax+0x4e]
  4041b8:	add    eax,DWORD PTR [ecx]
  4041ba:	cli    
  4041bb:	add    al,0x9a
  4041bd:	not    BYTE PTR [ecx+0x21a09ee6]
  4041c3:	jmp    0x16e3a620
  4041c8:	xchg   edi,eax
  4041c9:	mov    al,BYTE PTR [ecx]
  4041cb:	sub    al,BYTE PTR ds:0x60c8d07d
  4041d1:	pop    ss
  4041d2:	shl    BYTE PTR [eax-0x7ac34cc4],cl
  4041d8:	jmp    0x659d1bc8
  4041dd:	test   al,0x80
  4041df:	jns    0x404238
  4041e1:	sub    eax,DWORD PTR [edx+0x2e]
  4041e4:	cli    
  4041e5:	push   ebx
  4041e6:	into   
  4041e7:	jbe    0x404227
  4041e9:	scas   eax,DWORD PTR es:[edi]
  4041ea:	add    eax,0x8852ce59
  4041ef:	lock dec ebx
  4041f1:	jo     0x4041c5
  4041f3:	repnz sub bh,dh
  4041f6:	ds in  eax,dx
  4041f8:	call   0x9f83:0xa51c26ee
  4041ff:	(bad)  
  404200:	sbb    al,0x27
  404202:	(bad)  
  404203:	int3   
  404204:	and    bh,cl
  404206:	std    
  404207:	inc    esp
  404208:	dec    edx
  404209:	ins    DWORD PTR es:[edi],dx
  40420a:	outs   dx,BYTE PTR ds:[esi]
  40420b:	test   eax,0x128e9f3e
  404210:	fmul   DWORD PTR [esp]
  404213:	pop    edi
  404214:	push   0x24dd74a2
  404219:	sar    BYTE PTR [ebx],1
  40421b:	jmp    0xe5ed:0x32ff3d27
  404222:	dec    ebp
  404223:	push   edi
  404224:	mov    ds:0xa8d4973f,al
  404229:	mov    dl,0x71
  40422b:	adc    al,0x17
  40422d:	test   eax,0x193932d2
  404232:	adc    bl,bl
  404234:	inc    ecx
  404235:	push   cs
  404236:	(bad)  
  404237:	cli    
  404238:	call   0x4077e7ac
  40423d:	mov    WORD PTR [ebx+0x70bcb680],ss
  404243:	rol    esi,0xe1
  404246:	icebp  
  404247:	sbb    esi,DWORD PTR [ebx-0x53]
  40424a:	xor    edx,DWORD PTR [esi-0x79]
  40424d:	mov    bh,BYTE PTR [ebx]
  40424f:	aaa    
  404250:	into   
  404251:	ret    0xd82
  404254:	push   cs
  404255:	push   ebx
  404256:	push   0xffffffbf
  404258:	sbb    DWORD PTR ds:0x526e5f2c,ebp
  40425e:	or     BYTE PTR [eax-0x11],0x9b
  404262:	jae    0x4042ba
  404264:	xor    BYTE PTR [ebx+ebp*8+0x1ee10be],bl
  40426b:	mov    bl,0x39
  40426d:	in     al,0xc4
  40426f:	jge    0x4041f2
  404271:	xchg   ecx,eax
  404272:	jge    0x4042e4
  404274:	mov    cl,BYTE PTR ds:0xe372cddd
  40427a:	fsubp  st(0),st
  40427c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40427d:	into   
  40427e:	and    DWORD PTR [ecx+0x1573bdee],edx
  404284:	pop    edx
  404285:	dec    eax
  404286:	add    al,0x8
  404288:	and    al,0x24
  40428a:	dec    edi
  40428b:	aas    
  40428c:	cmc    
  40428d:	and    al,0x7d
  40428f:	int    0xd2
  404291:	xor    ecx,esp
  404293:	pop    es
  404294:	ins    BYTE PTR es:[edi],dx
  404295:	pop    esp
  404296:	inc    ebp
  404297:	neg    BYTE PTR [ecx+0x14]
  40429a:	xchg   esi,eax
  40429b:	dec    DWORD PTR [ebp-0x6422f33b]
  4042a1:	ret    
  4042a2:	cmp    al,0xb9
  4042a4:	inc    eax
  4042a5:	pusha  
  4042a6:	or     ebp,edi
  4042a8:	push   edx
  4042a9:	test   eax,0xea66ad27
  4042ae:	aad    0x40
  4042b0:	aas    
  4042b1:	dec    edx
  4042b2:	jecxz  0x4042ea
  4042b4:	test   DWORD PTR [edx],edx
  4042b6:	xor    BYTE PTR [eax-0x2dfa82c6],ah
  4042bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042bd:	sbb    eax,0xa17a0c97
  4042c2:	jne    0x40428d
  4042c4:	into   
  4042c5:	sub    BYTE PTR [edx],bh
  4042c7:	aaa    
  4042c8:	jmp    FWORD PTR [edi+0x6b]
  4042cb:	fmul   DWORD PTR [ebx+0x49]
  4042ce:	ss das 
  4042d0:	cmp    edx,0xb81f4b80
  4042d6:	pop    ebp
  4042d7:	push   cs
  4042d8:	pop    ds
  4042d9:	clc    
  4042da:	fldenv [ebx-0x73fc2b69]
  4042e0:	lds    ebp,FWORD PTR [esi-0x6e]
  4042e3:	lods   al,BYTE PTR ds:[esi]
  4042e4:	sbb    BYTE PTR [ebx],ch
  4042e6:	xchg   esi,eax
  4042e7:	mov    dh,0x31
  4042e9:	(bad)  
  4042ea:	sbb    eax,0x992ac164
  4042ef:	jne    0x4042ff
  4042f1:	push   ebp
  4042f2:	stos   BYTE PTR es:[edi],al
  4042f3:	mov    eax,ds:0x51f13da8
  4042f8:	jno    0x4042a3
  4042fa:	stos   DWORD PTR es:[edi],eax
  4042fb:	cmc    
  4042fc:	cmp    edx,DWORD PTR [esi+0x43]
  4042ff:	(bad)  
  404300:	pop    ds
  404301:	pop    ebx
  404302:	or     ebp,DWORD PTR [eax-0x79]
  404305:	xchg   WORD PTR [edx+edi*8],bp
  404309:	adc    ch,BYTE PTR [esi]
  40430b:	and    DWORD PTR [ecx+ebp*8-0x6d],0xec2b8ea3
  404313:	xchg   edi,eax
  404314:	add    ecx,DWORD PTR [eax]
  404316:	test   al,0x7b
  404318:	sub    al,0xf8
  40431a:	xor    DWORD PTR [esi+0x12],ecx
  40431d:	xor    ah,BYTE PTR [ebp+0x5e]
  404320:	mov    ?,WORD PTR [edx+0x2617ab17]
  404326:	inc    ecx
  404327:	dec    di
  404329:	mov    ch,0xa6
  40432b:	xchg   edi,eax
  40432c:	jo     0x404302
  40432e:	aaa    
  40432f:	jmp    0x1534:0x87b6cbb3
  404336:	push   edi
  404337:	mov    al,ds:0x2aae3082
  40433c:	fs dec esi
  40433e:	(bad)  
  40433f:	sbb    DWORD PTR [edi-0x5477ac0f],esi
  404345:	dec    eax
  404346:	xor    DWORD PTR [edx],edx
  404348:	in     al,dx
  404349:	call   0xf7b41a60
  40434e:	pop    ecx
  40434f:	and    dl,ah
  404351:	int    0x3f
  404353:	push   es
  404354:	cmp    DWORD PTR [eax],0x99b5f4ab
  40435a:	inc    eax
  40435b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40435c:	xchg   ebx,eax
  40435d:	pop    ds
  40435e:	aas    
  40435f:	adc    BYTE PTR [edi+0x5b],al
  404362:	mov    ch,0xc
  404364:	xchg   ebx,eax
  404365:	out    dx,eax
  404366:	xlat   BYTE PTR ds:[ebx]
  404367:	out    dx,al
  404368:	je     0x4043ad
  40436a:	dec    edx
  40436b:	(bad)  
  40436c:	sbb    cl,dh
  40436e:	mov    dh,0xe1
  404370:	sbb    esi,DWORD PTR [edx-0x1715fc76]
  404376:	mov    dh,0x3a
  404378:	jle    0x40431a
  40437a:	adc    ecx,DWORD PTR [eax+0xe]
  40437d:	or     BYTE PTR [edi+ebp*1],al
  404380:	pop    ss
  404381:	test   BYTE PTR [ebx+edi*8],bl
  404384:	add    BYTE PTR [ebp+0x378fb1bb],al
  40438a:	test   al,0xff
  40438c:	stc    
  40438d:	mov    al,ds:0xefad285
  404392:	es test al,0xf3
  404395:	mov    ebx,0xb7a09c17
  40439a:	icebp  
  40439b:	jmp    0xd62c46f5
  4043a0:	ins    BYTE PTR es:[edi],dx
  4043a1:	sahf   
  4043a2:	push   0x31fcf7d3
  4043a7:	lods   al,BYTE PTR ds:[esi]
  4043a8:	sti    
  4043a9:	cmp    esp,DWORD PTR [ebp+0x7e]
  4043ac:	cwde   
  4043ad:	dec    eax
  4043ae:	test   eax,0x112ce1f0
  4043b3:	jae    0x404345
  4043b5:	jae    0x40436b
  4043b7:	sahf   
  4043b8:	xor    eax,0xa5fd30a5
  4043bd:	mov    BYTE PTR [ecx],0xaf
  4043c0:	out    dx,al
  4043c1:	sbb    al,0x9b
  4043c3:	push   eax
  4043c4:	sbb    bh,ch
  4043c6:	fs mov ch,0xee
  4043c9:	push   ebx
  4043ca:	cwde   
  4043cb:	xlat   BYTE PTR ds:[ebx]
  4043cc:	stc    
  4043cd:	mov    eax,ds:0xc66ed680
  4043d2:	idiv   BYTE PTR [edi]
  4043d4:	aad    0xe1
  4043d6:	in     eax,dx
  4043d7:	mov    eax,0x41e398fa
  4043dc:	adc    dh,BYTE PTR [edi+0x57]
  4043df:	add    edx,DWORD PTR [edx]
  4043e1:	in     al,0x68
  4043e3:	push   ebp
  4043e4:	shl    BYTE PTR [edx+0x7cef4dcb],cl
  4043ea:	pop    ebx
  4043eb:	or     edi,DWORD PTR [esi+0x798019df]
  4043f1:	and    cl,dl
  4043f3:	push   cs
  4043f4:	addr16 xchg ebp,eax
  4043f6:	loop   0x404383
  4043f8:	push   edi
  4043f9:	fmul   st(0),st
  4043fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043fc:	jle    0x404437
  4043fe:	pop    ds
  4043ff:	jl     0x404408
  404401:	mov    ch,0x55
  404403:	inc    ecx
  404404:	loopne 0x40446e
  404406:	imul   ebp,DWORD PTR [eax+0x42],0x45
  40440a:	scas   al,BYTE PTR es:[edi]
  40440b:	stc    
  40440c:	call   0x3d5f29f1
  404411:	pop    esi
  404412:	leave  
  404413:	mov    fs,WORD PTR [ebp-0x183a5b31]
  404419:	hlt    
  40441a:	xchg   ebp,eax
  40441b:	sahf   
  40441c:	xchg   esp,eax
  40441d:	inc    esi
  40441e:	ret    0xb71c
  404421:	add    BYTE PTR [edx+0x29],dh
  404424:	push   ebx
  404425:	mov    ah,0x62
  404427:	(bad)
  40442a:	adc    eax,0xb80c1c55
  40442f:	(bad)  
  404431:	stos   DWORD PTR es:[edi],eax
  404432:	pop    ebx
  404433:	xchg   edi,eax
  404434:	out    dx,al
  404435:	lock sbb eax,DWORD PTR [ebp+0x3bde1cbd]
  40443c:	ins    BYTE PTR es:[edi],dx
  40443d:	add    DWORD PTR [ecx+0x6baeb71c],edx
  404443:	jecxz  0x4044a8
  404445:	hlt    
  404446:	nop
  404447:	dec    esi
  404448:	add    ecx,ebx
  40444a:	jle    0x230680c3
  404450:	dec    esp
  404451:	adc    edx,edi
  404453:	out    0x53,al
  404455:	retf   
  404456:	push   0x78f16e0f
  40445b:	sub    BYTE PTR [bp+si+0x46],dl
  40445f:	adc    BYTE PTR [esi],bh
  404461:	pusha  
  404462:	repnz mov edi,0xd55e59b2
  404468:	test   ebp,edx
  40446a:	lods   al,BYTE PTR ds:[esi]
  40446b:	inc    edi
  40446c:	ins    BYTE PTR es:[edi],dx
  40446d:	(bad)  
  40446e:	shr    DWORD PTR ds:0xc4c97bd7,0x6b
  404475:	adc    eax,0x5a3784dd
  40447a:	push   es
  40447b:	and    eax,0x85fd228e
  404480:	push   edx
  404481:	inc    ecx
  404482:	xchg   ebx,eax
  404483:	mov    ds:0x73771d18,al
  404488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404489:	fist   DWORD PTR [edx+0x7c]
  40448c:	fwait
  40448d:	sbb    esi,edi
  40448f:	mov    ds:0x3df4c5dd,al
  404494:	stc    
  404495:	loop   0x40445b
  404497:	push   ds
  404498:	or     edi,DWORD PTR [eax]
  40449a:	pop    ecx
  40449b:	nop
  40449c:	jecxz  0x4044e3
  40449e:	(bad)  
  40449f:	sub    BYTE PTR [ebp+0x7632e3d6],al
  4044a5:	arpl   si,bp
  4044a7:	mov    ds:0xbe06d0e6,eax
  4044ac:	pop    esi
  4044ad:	push   es
  4044ae:	jle    0x404452
  4044b0:	mul    BYTE PTR [esi-0x71]
  4044b3:	push   esi
  4044b4:	arpl   bp,di
  4044b6:	ins    DWORD PTR es:[edi],dx
  4044b7:	sub    dl,ah
  4044b9:	mov    dh,0xbf
  4044bb:	(bad)  
  4044bc:	jnp    0x404528
  4044be:	jl     0x404460
  4044c0:	inc    esp
  4044c1:	fs inc ebx
  4044c3:	stos   DWORD PTR es:[edi],eax
  4044c4:	pop    ds
  4044c5:	test   DWORD PTR [eax*2-0x378dec5e],0x57c2b09e
  4044d0:	jg     0x404471
  4044d2:	cmp    DWORD PTR [edx],ecx
  4044d4:	xchg   ecx,eax
  4044d5:	sbb    al,0x93
  4044d7:	jbe    0x404528
  4044d9:	sahf   
  4044da:	inc    esi
  4044db:	dec    ebx
  4044dc:	lea    esp,[edi+0x38]
  4044df:	fld    QWORD PTR [edx+0x66]
  4044e2:	xor    esp,DWORD PTR [ebx+0x26]
  4044e5:	push   cs
  4044e6:	sbb    al,0xaa
  4044e8:	xchg   edx,eax
  4044e9:	fcmovnbe st,st(2)
  4044eb:	jae    0x404522
  4044ed:	xchg   ebp,eax
  4044ee:	jnp    0x404561
  4044f0:	add    DWORD PTR [ecx+0x402b5292],esi
  4044f6:	out    0x4f,al
  4044f8:	sahf   
  4044f9:	(bad)  
  4044fa:	repz add bh,BYTE PTR [ebx-0x56fb62af]
  404501:	adc    BYTE PTR [ebx],cl
  404503:	xchg   ecx,eax
  404504:	aas    
  404505:	jle    0x4044c1
  404507:	mul    BYTE PTR [esi+0x8dfed0b]
  40450d:	mov    ah,0x31
  40450f:	inc    esp
  404510:	jmp    0x4044c6
  404512:	fld    QWORD PTR [edi+0xd7d1f4d]
  404518:	push   edi
  404519:	jb     0x4044c0
  40451b:	or     eax,ebx
  40451d:	push   esp
  40451e:	adc    DWORD PTR cs:[ebp-0x1348cadd],ecx
  404525:	jecxz  0x40453d
  404527:	adc    al,0xfb
  404529:	sbb    al,0xb
  40452b:	and    bh,BYTE PTR [eax+0x22]
  40452e:	push   eax
  40452f:	imul   edi,DWORD PTR [edx+edx*1],0xffffffa0
  404533:	or     ebx,ebx
  404535:	imul   esp,DWORD PTR [esi],0x26
  404538:	fwait
  404539:	mov    bl,cl
  40453b:	cmp    eax,DWORD PTR [eax+edx*4+0x56]
  40453f:	shl    DWORD PTR [ecx+edi*2],cl
  404542:	xchg   ecx,eax
  404543:	xor    al,0x17
  404545:	clc    
  404546:	dec    edi
  404547:	dec    DWORD PTR [edx+0x18]
  40454a:	xchg   ebx,eax
  40454b:	xor    DWORD PTR [eax-0x30],eax
  40454e:	jb     0x40458d
  404550:	pusha  
  404551:	push   ss
  404552:	int3   
  404553:	sar    BYTE PTR [ebx+0x152a804c],cl
  404559:	mov    al,ds:0x45d946cf
  40455e:	mov    eax,ds:0xa30f6b38
  404563:	push   edi
  404564:	mov    eax,0xaed88647
  404569:	ficomp WORD PTR [eax]
  40456b:	push   esp
  40456c:	adc    eax,0x90f15ec9
  404571:	pushf  
  404572:	mov    WORD PTR [esi-0x31],cs
  404575:	cdq    
  404576:	pushf  
  404577:	and    BYTE PTR [eax-0x5aabc333],dh
  40457d:	mov    eax,ds:0x8bdb94ca
  404582:	imul   ebp,DWORD PTR fs:[edx],0x17
  404586:	rcr    BYTE PTR [ebp-0x3dd2a84b],1
  40458c:	mov    edi,0xf511283a
  404591:	push   es
  404592:	mov    edi,0xc38b8d56
  404597:	(bad)  
  404598:	push   cs
  404599:	mov    eax,0xeffb8cee
  40459e:	xchg   edx,eax
  40459f:	pop    es
  4045a0:	sub    DWORD PTR [ecx-0x3c],ecx
  4045a3:	sbb    eax,0x6b48a47b
  4045a8:	mov    esp,0x9a885c82
  4045ad:	dec    esp
  4045ae:	push   edx
  4045af:	mov    edi,0x3667b25b
  4045b4:	test   BYTE PTR ds:0x57e8412f,ch
  4045ba:	outs   dx,BYTE PTR ds:[esi]
  4045bb:	push   ss
  4045bc:	data16 mov dh,0x2c
  4045bf:	jecxz  0x4045e4
  4045c1:	retf   
  4045c2:	mov    esi,DWORD PTR [edx]
  4045c4:	lods   eax,DWORD PTR ds:[esi]
  4045c5:	dec    esi
  4045c6:	imul   eax,DWORD PTR [edi],0xffffffcf
  4045c9:	test   eax,0x7da6a884
  4045ce:	arpl   WORD PTR [eax+edx*4+0x40],cx
  4045d2:	lods   al,BYTE PTR ds:[esi]
  4045d3:	xor    BYTE PTR [ebp-0x3],0x13
  4045d7:	adc    bl,BYTE PTR [eax+0x5658784a]
  4045dd:	or     eax,0x21b5404c
  4045e2:	fsub   DWORD PTR [esi+0x5c7bdae]
  4045e8:	mov    esp,0x5db7feb3
  4045ed:	jns    0x4045cc
  4045ef:	lock fisub WORD PTR [ebx]
  4045f2:	push   es
  4045f3:	jb     0x404600
  4045f5:	aam    0x43
  4045f7:	shl    ecx,cl
  4045f9:	dec    edx
  4045fa:	sbb    eax,0x4109e30a
  4045ff:	mov    eax,0xbe554518
  404604:	retf   0x69cb
  404607:	call   0x7874c6e9
  40460c:	push   ecx
  40460d:	sbb    BYTE PTR [ebp+0x42],0x2d
  404611:	inc    edi
  404612:	outs   dx,DWORD PTR ds:[esi]
  404613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404614:	pop    edi
  404615:	mov    ecx,0xaf321984
  40461a:	xchg   BYTE PTR [ebp+0x2eaa9bbd],bl
  404620:	mov    edx,0x5688e2b0
  404625:	es cwde 
  404627:	nop
  404628:	jl     0x404611
  40462a:	imul   esi,DWORD PTR [ebp+0x4],0x3611d411
  404631:	xchg   ebx,eax
  404632:	test   eax,0x9976a4f0
  404637:	aad    0xa7
  404639:	mov    al,0xba
  40463b:	add    ah,ah
  40463d:	std    
  40463e:	daa    
  40463f:	arpl   cx,sp
  404641:	lods   al,BYTE PTR ds:[esi]
  404642:	inc    edx
  404643:	jns    0x4046be
  404645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404646:	xor    eax,DWORD PTR [edi+0x5599694f]
  40464c:	std    
  40464d:	mov    esi,0xc93127af
  404652:	jmp    0x4046ca
  404654:	rcr    BYTE PTR [edx],1
  404656:	fwait
  404657:	xchg   DWORD PTR [esi+0x446f18cc],edx
  40465d:	shl    eax,1
  40465f:	mov    esp,0xd4bd227a
  404664:	test   eax,0xd45ef10
  404669:	push   ecx
  40466a:	out    0x61,al
  40466c:	sti    
  40466d:	mov    bl,BYTE PTR [ecx-0x298e2f41]
  404673:	rol    DWORD PTR [esi],1
  404675:	mov    al,0xeb
  404677:	and    bl,BYTE PTR [ebx]
  404679:	bound  ebx,QWORD PTR [esi+ebp*8]
  40467c:	adc    DWORD PTR [ecx-0x78],esp
  40467f:	mov    eax,ds:0x5d5f5c51
  404684:	pop    edi
  404685:	cmp    al,BYTE PTR [esi+0x41]
  404688:	push   esi
  404689:	arpl   WORD PTR [esi+ecx*2+0x14],sp
  40468d:	out    dx,eax
  40468e:	mov    al,0x2a
  404690:	mov    eax,edx
  404692:	das    
  404693:	cs jecxz 0x4046fc
  404696:	or     al,0xa2
  404698:	in     al,0x6b
  40469a:	call   0x20b9:0x7028a6de
  4046a1:	and    cl,BYTE PTR [esi-0xa]
  4046a4:	sub    bh,bl
  4046a6:	xchg   edi,eax
  4046a7:	adc    BYTE PTR [edx-0x4a],0xbd
  4046ab:	jecxz  0x404699
  4046ad:	fiadd  DWORD PTR [ecx]
  4046af:	out    0x94,eax
  4046b1:	adc    eax,0x3be8ddf7
  4046b6:	adc    BYTE PTR [ebx],ch
  4046b8:	and    ecx,ebp
  4046ba:	ret    
  4046bb:	pop    eax
  4046bc:	push   ebp
  4046bd:	mov    edi,0x5689f89f
  4046c2:	add    BYTE PTR [ebx+0x27be9a32],al
  4046c8:	mov    dh,0x35
  4046ca:	(bad)  
  4046cb:	or     edi,DWORD PTR [ebx+0x43]
  4046ce:	pushw  cs
  4046d0:	push   edx
  4046d1:	(bad)  
  4046d2:	sub    ebp,DWORD PTR [esi+edi*1]
  4046d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046d6:	xchg   eax,ebp
  4046d8:	jmp    0x7e940f82
  4046dd:	es jo  0x40473f
  4046e0:	lods   al,BYTE PTR ds:[esi]
  4046e1:	loop   0x4046e3
  4046e3:	inc    edi
  4046e4:	sbb    BYTE PTR [edx-0x67],dh
  4046e7:	xchg   ebx,eax
  4046e8:	xchg   esi,eax
  4046e9:	dec    edx
  4046ea:	jp     0x404731
  4046ec:	mov    ah,BYTE PTR [esi+0x6c926baf]
  4046f2:	cli    
  4046f3:	mov    edx,0xf2dca1a4
  4046f8:	jg     0x40473b
  4046fa:	aaa    
  4046fb:	out    dx,al
  4046fc:	mov    edx,0x73fcf629
  404701:	or     BYTE PTR [esi+0x54543a77],cl
  404707:	jp     0x4046ba
  404709:	aas    
  40470a:	fiadd  DWORD PTR ds:0x407d891d
  404710:	sub    bl,ah
  404712:	xor    al,0x89
  404714:	sar    BYTE PTR [esi],1
  404716:	mov    eax,0x50ca1f2d
  40471b:	outs   dx,BYTE PTR ds:[esi]
  40471c:	rol    dl,1
  40471e:	in     eax,0xf5
  404720:	bnd ret 0x262b
  404724:	lea    eax,[eax+esi*4+0x7fd91e4c]
  40472b:	jbe    0x404782
  40472d:	hlt    
  40472e:	xchg   ecx,eax
  40472f:	call   0xded51cad
  404734:	and    eax,0x168b9b76
  404739:	sbb    ah,ah
  40473b:	mov    ecx,0x76ecaa16
  404740:	lock xor al,0xc3
  404743:	(bad)  
  404745:	adc    bh,BYTE PTR [eax]
  404747:	mov    edx,0x23a43c
  40474c:	cdq    
  40474d:	jo     0x40475d
  40474f:	push   esp
  404750:	imul   esi,DWORD PTR [eax+0x30f10256],0xd0cb412e
  40475a:	add    DWORD PTR [edi-0x2106c5e],edi
  404760:	push   ds
  404761:	mov    eax,ecx
  404763:	iret   
  404764:	xchg   DWORD PTR [edx-0xe],esp
  404767:	push   ebx
  404768:	nop
  404769:	lods   eax,DWORD PTR ds:[esi]
  40476a:	inc    edx
  40476b:	jnp    0x40478c
  40476d:	push   ecx
  40476e:	sub    al,0x8c
  404770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404771:	ffree  st(0)
  404773:	xchg   DWORD PTR [edx-0x76eac17c],ecx
  404779:	xor    al,0xb6
  40477b:	lods   eax,DWORD PTR ds:[esi]
  40477c:	xchg   ecx,eax
  40477d:	fiadd  WORD PTR [edx+0x6e6b4dfa]
  404783:	fwait
  404784:	mov    ds:0xdc7e9743,eax
  404789:	sbb    cl,al
  40478b:	and    ebx,DWORD PTR [eax+edi*4]
  40478e:	and    esp,edi
  404790:	arpl   WORD PTR [ecx-0x10a86bce],bp
  404796:	adc    eax,0xbce97461
  40479b:	fnsave [edx+0x69a6d1fd]
  4047a1:	sbb    DWORD PTR [ecx-0x288dcb96],ecx
  4047a7:	pop    ss
  4047a8:	xchg   edi,eax
  4047a9:	mov    al,0xdd
  4047ab:	jne    0x404793
  4047ad:	lods   al,BYTE PTR ds:[esi]
  4047ae:	sbb    DWORD PTR [ecx-0x5d],edx
  4047b1:	ficom  DWORD PTR [eax]
  4047b3:	test   eax,0x98428939
  4047b8:	fdivr  DWORD PTR ds:0xa4780122
  4047be:	inc    ecx
  4047bf:	(bad)  
  4047c0:	loopne 0x40480c
  4047c2:	inc    ebx
  4047c3:	rol    DWORD PTR [esi+esi*1+0x12],cl
  4047c7:	sub    ebp,esi
  4047c9:	ds ins BYTE PTR es:[edi],dx
  4047cb:	lods   eax,DWORD PTR ds:[esi]
  4047cc:	stos   BYTE PTR es:[edi],al
  4047cd:	jno    0x404788
  4047cf:	popa   
  4047d0:	ds xor al,0x5e
  4047d3:	mov    ebx,0xe36fd1f8
  4047d8:	fbld   TBYTE PTR ds:0xdc490c04
  4047de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047df:	ror    BYTE PTR [ebx],cl
  4047e1:	mov    esp,0x25949f58
  4047e6:	sti    
  4047e7:	(bad)  
  4047e8:	jge    0x4047d1
  4047ea:	jmp    0x27c0:0x75a281c4
  4047f1:	inc    ebp
  4047f2:	sbb    ecx,DWORD PTR [ecx-0x58]
  4047f5:	mov    esi,0x2900729a
  4047fa:	push   eax
  4047fb:	cmp    dl,0x0
  4047fe:	sbb    DWORD PTR [ebx],0x2fa58557
  404804:	xchg   ebx,eax
  404805:	(bad)  
  404806:	jmp    0xabf4d2e8
  40480b:	call   0x396c:0xad2003d9
  404812:	or     BYTE PTR [edx],0xbe
  404815:	xchg   edx,eax
  404816:	pop    ecx
  404817:	enter  0x77eb,0x9a
  40481b:	fisttp QWORD PTR [esi+0x2b]
  40481e:	sub    DWORD PTR [edi+eiz*1-0x586e7159],ebx
  404825:	push   ss
  404826:	push   esi
  404827:	dec    ecx
  404828:	stos   BYTE PTR es:[edi],al
  404829:	inc    edi
  40482a:	xchg   esp,eax
  40482b:	jno    0x40485c
  40482d:	in     eax,dx
  40482e:	shl    DWORD PTR [eax+0x1f02ad8a],0x97
  404835:	dec    ebx
  404836:	dec    ebp
  404837:	loopne 0x4048aa
  404839:	std    
  40483a:	(bad)  [esi-0x3b]
  40483d:	jo     0x404823
  40483f:	call   0xe2d1:0x159c5939
  404846:	cwde   
  404847:	mov    edi,ds
  404849:	push   eax
  40484a:	fs gs jl 0x404862
  40484e:	adc    BYTE PTR [edx+eax*4+0x27],0x5
  404853:	and    eax,0x758ec04c
  404858:	std    
  404859:	rol    BYTE PTR [esi],0xe5
  40485c:	cmp    al,BYTE PTR [edx+0x3284f249]
  404862:	fwait
  404863:	test   BYTE PTR [edx-0x6e],0xe3
  404867:	or     al,0xec
  404869:	adc    bh,BYTE PTR [edi]
  40486b:	les    esp,FWORD PTR [edx]
  40486d:	test   ah,bl
  40486f:	dec    ebx
  404870:	mov    bl,BYTE PTR [esi]
  404872:	ins    BYTE PTR es:[edi],dx
  404873:	ret    
  404874:	push   edi
  404875:	inc    ebx
  404876:	xchg   ebx,eax
  404877:	xor    BYTE PTR [edx-0x73d26046],bh
  40487d:	jecxz  0x4048af
  40487f:	xor    DWORD PTR [ebx-0x41],ebx
  404882:	int    0x6a
  404884:	add    eax,0xe5ded3a3
  404889:	scas   eax,DWORD PTR es:[edi]
  40488a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40488b:	(bad)  
  40488d:	pop    ebp
  40488e:	enter  0xee66,0xa2
  404892:	mov    dl,0x88
  404894:	sar    ebx,cl
  404896:	stc    
  404897:	retf   0xce5d
  40489a:	cdq    
  40489b:	out    0xc8,al
  40489d:	cmp    dh,BYTE PTR [eax]
  40489f:	call   0x55591a4a
  4048a4:	repnz pop ebp
  4048a6:	mov    ebp,0x66586f9d
  4048ab:	leave  
  4048ac:	pop    esp
  4048ad:	(bad)  
  4048ae:	in     al,dx
  4048af:	call   0x7172b732
  4048b4:	mov    ?,eax
  4048b6:	sub    dh,dh
  4048b8:	sysenter 
  4048ba:	sub    dl,BYTE PTR [esp+eax*8]
  4048bd:	ds stos DWORD PTR es:[edi],eax
  4048bf:	pusha  
  4048c0:	imul   ebp,DWORD PTR [edx],0x5b
  4048c3:	mov    ebx,0x3575949c
  4048c8:	or     ebx,DWORD PTR [esi-0x53]
  4048cb:	pop    ecx
  4048cc:	jp     0x40485a
  4048ce:	push   ebp
  4048cf:	push   DWORD PTR [ebx-0x5]
  4048d2:	and    al,BYTE PTR [edx]
  4048d4:	pusha  
  4048d5:	popa   
  4048d6:	ss adc al,0x4e
  4048d9:	sbb    bh,cl
  4048db:	(bad)  
  4048dc:	test   eax,0x49365857
  4048e1:	sahf   
  4048e2:	mov    eax,ds:0xa0ac47ee
  4048e7:	dec    ebp
  4048e8:	pop    esi
  4048e9:	cmp    eax,0x40be8c2d
  4048ee:	loope  0x40489c
  4048f0:	cmp    al,0xc1
  4048f2:	sahf   
  4048f3:	clc    
  4048f4:	fimul  WORD PTR [ebx]
  4048f6:	pop    ebp
  4048f7:	or     al,0x2c
  4048f9:	pop    esp
  4048fa:	inc    edx
  4048fb:	cli    
  4048fc:	je     0x40489e
  4048fe:	fsub   DWORD PTR [ebx-0x78170a6d]
  404904:	fnsave [ecx+0x48]
  404907:	xchg   ecx,eax
  404908:	lds    ebx,FWORD PTR [ebp-0x2e]
  40490b:	call   0x2dbc:0x77808960
  404912:	out    dx,eax
  404913:	mov    eax,ds:0x2b1bd4a6
  404918:	sahf   
  404919:	push   ebx
  40491a:	and    DWORD PTR [eax+0x67df695e],edx
  404920:	push   0x28
  404922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404924:	adc    BYTE PTR [edx],dl
  404926:	pop    esp
  404927:	jmp    0x3a697453
  40492c:	into   
  40492d:	cld    
  40492e:	cld    
  40492f:	ins    DWORD PTR es:[edi],dx
  404930:	cmp    DWORD PTR [ecx-0x18a34c7c],edx
  404936:	je     0x40490b
  404938:	and    bl,ah
  40493a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40493b:	jno    0x404924
  40493d:	push   ecx
  40493e:	push   ebx
  40493f:	jbe    0x4048c8
  404941:	retf   
  404942:	adc    dh,BYTE PTR [ebp-0x3d929e86]
  404948:	test   eax,0x656e37ea
  40494d:	xchg   ebp,eax
  40494e:	aad    0xc6
  404950:	sbb    DWORD PTR [ecx-0xcef66dd],esp
  404956:	mov    ds:0xe28487af,al
  40495b:	ins    DWORD PTR es:[edi],dx
  40495c:	jmp    0x4048f2
  40495e:	xlat   BYTE PTR ds:[ebx]
  40495f:	js     0x4048f4
  404961:	test   BYTE PTR [esi+0x3c],cl
  404964:	das    
  404965:	mov    DWORD PTR [ebp+0x419477fc],ebp
  40496b:	and    DWORD PTR [esi],ebp
  40496d:	xor    ah,bh
  40496f:	push   cs
  404970:	test   al,0x56
  404972:	add    esp,esi
  404974:	fidivr DWORD PTR [ebx]
  404976:	aas    
  404977:	or     BYTE PTR [edx+0x35f08e1c],0x6a
  40497e:	ja     0x404998
  404980:	mov    dl,0x29
  404982:	outs   dx,DWORD PTR ds:[esi]
  404983:	dec    ebp
  404984:	add    eax,0xef2bf9a8
  404989:	sub    al,0x8a
  40498b:	jns    0x404942
  40498d:	pop    ebp
  40498e:	sub    al,0xe0
  404990:	stos   DWORD PTR es:[edi],eax
  404991:	push   esi
  404992:	(bad)  
  404993:	test   DWORD PTR [eax],0x8a69d3d3
  404999:	imul   eax,DWORD PTR [edi-0x7c],0xdff708ca
  4049a0:	call   0x1a6e:0x57de3b4b
  4049a7:	cmp    DWORD PTR [edi+0x4b],ebp
  4049aa:	xor    eax,DWORD PTR [eax+eiz*8]
  4049ad:	and    DWORD PTR [edi+eiz*4],edi
  4049b0:	pusha  
  4049b1:	cmp    ecx,DWORD PTR [eax-0x1276bc4d]
  4049b7:	adc    dh,BYTE PTR [eax-0x30a0616a]
  4049bd:	loopne 0x404957
  4049bf:	or     eax,ebp
  4049c1:	push   0x85265376
  4049c6:	add    DWORD PTR [edx],edi
  4049c8:	adc    al,0xb7
  4049ca:	lds    edx,FWORD PTR ds:0x8901362b
  4049d0:	cmp    eax,0x65cce483
  4049d5:	dec    edi
  4049d6:	test   esp,esi
  4049d8:	stos   BYTE PTR es:[edi],al
  4049d9:	mov    dh,0x69
  4049db:	out    dx,eax
  4049dc:	ja     0x404a3a
  4049de:	and    cl,ah
  4049e0:	inc    ecx
  4049e1:	push   es
  4049e2:	data16 sahf 
  4049e4:	leave  
  4049e5:	outs   dx,DWORD PTR ds:[esi]
  4049e6:	aaa    
  4049e7:	ficom  WORD PTR [ebx+0x16993dbf]
  4049ed:	scas   al,BYTE PTR es:[edi]
  4049ee:	in     eax,dx
  4049ef:	int3   
  4049f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049f1:	push   0xda484859
  4049f6:	fs daa 
  4049f8:	and    eax,DWORD PTR ds:0xa91a0d89
  4049fe:	jl     0x404999
  404a00:	adc    eax,0x9bdf698d
  404a05:	test   al,0x85
  404a07:	push   edx
  404a08:	xor    eax,0x85dcada7
  404a0d:	cmp    bh,dl
  404a0f:	ror    BYTE PTR [edi+0x2896a368],0xe8
  404a16:	jp     0x404a6f
  404a18:	mov    eax,0xa887b3
  404a1d:	pushf  
  404a1e:	cmc    
  404a1f:	out    0xe2,eax
  404a21:	sti    
  404a22:	fs push esp
  404a24:	mov    al,dh
  404a26:	push   esi
  404a27:	leave  
  404a28:	cmc    
  404a29:	sub    BYTE PTR [eax+0x5a51e8d5],bh
  404a2f:	push   edx
  404a30:	mov    ebp,0x9f47640
  404a35:	cld    
  404a36:	push   ebx
  404a37:	mov    ecx,0x4afca292
  404a3c:	push   edx
  404a3d:	pop    es
  404a3e:	mov    eax,ds:0x7f20eac8
  404a43:	mov    ecx,0x54401080
  404a48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a49:	push   edi
  404a4a:	mov    dl,BYTE PTR [ebx]
  404a4c:	and    bl,BYTE PTR [ebx-0x9]
  404a4f:	cmp    dh,BYTE PTR [ecx-0x70]
  404a52:	in     al,dx
  404a53:	push   0x76
  404a55:	je     0x404a18
  404a57:	mov    edx,0xbec6ea4e
  404a5c:	fiadd  WORD PTR [ecx+0x15]
  404a5f:	inc    ebp
  404a60:	lods   al,BYTE PTR ds:[esi]
  404a61:	sub    BYTE PTR [ecx+0x45133db6],bh
  404a67:	and    eax,0xaeab6e8
  404a6c:	cmp    cl,BYTE PTR [ebp-0x71]
  404a6f:	out    dx,eax
  404a70:	(bad)  
  404a72:	xchg   esi,eax
  404a73:	inc    ebp
  404a74:	inc    ecx
  404a75:	push   edi
  404a76:	pop    ebx
  404a77:	fld    st(1)
  404a79:	sub    al,BYTE PTR [esi+0x34]
  404a7c:	(bad)  
  404a7d:	repnz push cs
  404a7f:	push   edi
  404a80:	cli    
  404a81:	ja     0x404a80
  404a83:	inc    ebx
  404a84:	loope  0x404acc
  404a86:	jmp    0x305c45d8
  404a8b:	sbb    eax,0xa04dea74
  404a90:	mov    eax,0xbb3b7fb7
  404a95:	mov    al,ds:0xe5292f6a
  404a9a:	cmp    al,0xe8
  404a9c:	std    
  404a9d:	cmp    BYTE PTR [ebx*8+0x512d7799],bl
  404aa4:	retf   
  404aa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404aa6:	sub    bh,BYTE PTR [ecx-0x3c]
  404aa9:	push   ds
  404aaa:	sbb    eax,0x3927e804
  404aaf:	les    ebx,FWORD PTR [edi-0x3]
  404ab2:	int    0x1
  404ab4:	out    0x28,al
  404ab6:	and    DWORD PTR [eax*1-0x111f9c3d],ecx
  404abd:	push   ebp
  404abe:	rcr    DWORD PTR [esi-0x78f01f12],1
  404ac4:	rcr    BYTE PTR [eax-0x7621f71],0xde
  404acb:	mov    WORD PTR [edi+0x1f0ec04a],?
  404ad1:	xchg   ecx,eax
  404ad2:	lea    ebx,[esi+ebx*4+0x5a81b909]
  404ad9:	jp     0x404acc
  404adb:	jnp    0x404afa
  404add:	out    0x36,eax
  404adf:	cli    
  404ae0:	or     eax,0x88d7fe3c
  404ae5:	aam    0x9e
  404ae7:	adc    DWORD PTR [ebp+ebx*4-0x1c50ce1d],esi
  404aee:	int3   
  404aef:	int3   
  404af0:	in     eax,0xae
  404af2:	out    dx,eax
  404af3:	xor    eax,0xbe119784
  404af8:	ror    BYTE PTR [ebp-0x283d8640],1
  404afe:	cli    
  404aff:	pop    edx
  404b00:	mov    ebx,0x2e8dd1cc
  404b05:	cdq    
  404b06:	test   al,0x74
  404b08:	adc    DWORD PTR [ecx+0x25],esi
  404b0b:	mov    ebp,0x93d4f8e5
  404b10:	in     al,0x65
  404b12:	jge    0x404b20
  404b14:	push   cs
  404b15:	jo     0x404b3b
  404b17:	sub    DWORD PTR cs:[ebx+0x73],esp
  404b1b:	jns    0x404b97
  404b1d:	scas   eax,DWORD PTR es:[edi]
  404b1e:	daa    
  404b1f:	sbb    ebx,DWORD PTR [edi-0x20]
  404b22:	pop    ss
  404b23:	fst    DWORD PTR gs:[edx]
  404b26:	push   es
  404b27:	jge    0x404ad8
  404b29:	loope  0x404b1c
  404b2b:	jmp    0x404ba4
  404b2d:	cmpps  xmm7,XMMWORD PTR [ebx],0xf0
  404b31:	dec    esp
  404b32:	mov    esi,0x2b899898
  404b37:	mov    ah,ch
  404b39:	dec    eax
  404b3a:	cdq    
  404b3b:	adc    edi,DWORD PTR [esi+0x636b3992]
  404b41:	outs   dx,DWORD PTR ds:[esi]
  404b42:	mov    ds:0x29d41a35,eax
  404b47:	mov    al,ds:0x270ee110
  404b4c:	out    dx,eax
  404b4d:	adc    ch,BYTE PTR ds:0x9840bfa7
  404b53:	popf   
  404b54:	sub    edi,DWORD PTR [ebp+0x36]
  404b57:	inc    edi
  404b58:	mov    al,0xfc
  404b5a:	inc    edi
  404b5b:	or     al,0xd7
  404b5d:	jne    0x404b9a
  404b5f:	jge    0x404bd3
  404b61:	push   esi
  404b62:	sbb    BYTE PTR [ecx+0x3c],ch
  404b65:	inc    eax
  404b66:	dec    edi
  404b67:	pop    edi
  404b68:	xchg   ebx,eax
  404b69:	stos   BYTE PTR es:[edi],al
  404b6a:	aas    
  404b6b:	outs   dx,DWORD PTR ds:[esi]
  404b6c:	or     dl,BYTE PTR [ebx-0x3a6e4736]
  404b72:	adc    BYTE PTR [ebp-0x3bbdb488],0x68
  404b79:	repnz cmc 
  404b7b:	test   BYTE PTR [ecx],bl
  404b7d:	pop    ebx
  404b7e:	daa    
  404b7f:	cmc    
  404b80:	pop    esi
  404b81:	pop    esi
  404b82:	mov    es,WORD PTR [esi-0xc]
  404b85:	xor    BYTE PTR [ebp+0x38],bl
  404b88:	fistp  DWORD PTR [ebx-0x30]
  404b8b:	shl    DWORD PTR [esp+esi*4],1
  404b8e:	jbe    0x404be3
  404b90:	icebp  
  404b91:	jno    0x404b6c
  404b93:	lea    esp,[edx+edi*2]
  404b96:	and    al,0x28
  404b98:	or     eax,0xfdbb112a
  404b9d:	jg     0x404bbd
  404b9f:	pop    es
  404ba0:	dec    esi
  404ba1:	mov    cl,0x9a
  404ba3:	sbb    eax,DWORD PTR cs:[eax-0x7bde2134]
  404baa:	and    edi,edi
  404bac:	xchg   ebx,eax
  404bad:	adc    eax,DWORD PTR [edx+0x10]
  404bb0:	xor    dl,ah
  404bb2:	in     al,0xa2
  404bb4:	je     0x404b72
  404bb6:	xlat   BYTE PTR ds:[ebx]
  404bb7:	inc    edi
  404bb8:	adc    ch,BYTE PTR [ecx-0x71d7f419]
  404bbe:	cmc    
  404bbf:	mov    DWORD PTR [edx],ecx
  404bc1:	aaa    
  404bc2:	push   cs
  404bc3:	pop    ecx
  404bc4:	mov    ecx,0xe0d3f651
  404bc9:	int    0x31
  404bcb:	mov    bh,0xed
  404bcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bce:	(bad)  
  404bcf:	jl     0x404bdf
  404bd1:	sbb    BYTE PTR [ecx],dh
  404bd3:	push   es
  404bd4:	dec    esp
  404bd5:	cdq    
  404bd6:	test   DWORD PTR [ebx-0x6f],0x221141a1
  404bdd:	and    al,0x24
  404bdf:	loop   0x404bd0
  404be1:	(bad)  [ebp+0x2d4828f7]
  404be7:	and    BYTE PTR [edi],ah
  404be9:	xchg   esp,eax
  404bea:	pusha  
  404beb:	xor    DWORD PTR [eax+edx*8+0x27],ebp
  404bef:	adc    BYTE PTR [esi-0x4961fe7a],bh
  404bf5:	jp     0x404c74
  404bf7:	jns    0x404c68
  404bf9:	dec    ebp
  404bfa:	push   ebp
  404bfb:	inc    esp
  404bfc:	push   ebp
  404bfd:	outs   dx,DWORD PTR ds:[esi]
  404bfe:	mov    esp,0x706ba74f
  404c03:	xor    DWORD PTR [edx],edi
  404c05:	test   BYTE PTR [esi-0x369decbe],dl
  404c0b:	es jo  0x404be0
  404c0e:	loop   0x404c17
  404c10:	(bad)  
  404c11:	je     0x404c6a
  404c13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c14:	sar    edi,0xb2
  404c17:	xor    al,0x19
  404c19:	inc    esi
  404c1a:	jl     0x404c39
  404c1c:	nop
  404c1d:	stc    
  404c1e:	sbb    al,0x27
  404c20:	sbb    BYTE PTR [esi-0x62a7a9d0],0x8f
  404c27:	shr    BYTE PTR ds:0x352b1325,1
  404c2d:	jmp    0x404c2a
  404c2f:	and    al,0x17
  404c31:	jns    0x404c7f
  404c33:	shl    BYTE PTR [eax+esi*4],cl
  404c36:	iret   
  404c37:	cs ins DWORD PTR es:[edi],dx
  404c39:	and    al,0xa4
  404c3b:	call   0x213c:0x27a8243a
  404c42:	shr    BYTE PTR [eax],cl
  404c44:	mov    al,0xff
  404c46:	rcl    DWORD PTR [ebp-0x7087ff10],cl
  404c4c:	add    esi,DWORD PTR [edi]
  404c4e:	xor    eax,0xfca074b6
  404c53:	mov    al,bh
  404c55:	jb     0x404c2f
  404c57:	sub    DWORD PTR [edi-0x18],ecx
  404c5a:	nop
  404c5b:	jmp    0x2c97ee2c
  404c60:	or     edi,DWORD PTR [eax-0x74f2b886]
  404c66:	pop    edx
  404c67:	pop    ebx
  404c68:	int3   
  404c69:	(bad)  
  404c6a:	(bad)  
  404c6b:	call   0xe32b41d0
  404c70:	dec    edx
  404c71:	out    0x3,eax
  404c73:	in     eax,dx
  404c74:	dec    edi
  404c75:	or     BYTE PTR [eax+ebp*8+0x1d],dl
  404c79:	dec    ebp
  404c7a:	and    DWORD PTR [ebx+0x4],ecx
  404c7d:	jmp    0x404c6b
  404c7f:	push   cs
  404c80:	mov    ebx,0x8cbb1b2f
  404c85:	retf   
  404c86:	lea    esp,[esi+0x22]
  404c89:	imul   ecx,DWORD PTR [eax+0x3a],0xffffffd9
  404c8d:	mov    ds:0xab8d55c5,eax
  404c92:	fnclex 
  404c94:	and    al,0x13
  404c96:	or     ah,BYTE PTR [edx]
  404c98:	out    dx,eax
  404c99:	rol    DWORD PTR gs:[edi],cl
  404c9c:	jle    0x404c2e
  404c9e:	inc    edi
  404c9f:	aas    
  404ca0:	jo     0x404c67
  404ca2:	push   cs
  404ca3:	jne    0x404c97
  404ca5:	aaa    
  404ca6:	imul   DWORD PTR [ebx+eiz*8]
  404ca9:	mov    esi,0x9a58f05f
  404cae:	jb     0x404c91
  404cb0:	and    edx,DWORD PTR [edi+0x5402a25b]
  404cb6:	mov    WORD PTR [esi],gs
  404cb8:	xchg   esi,eax
  404cb9:	test   al,0xd8
  404cbb:	lock jl 0x404cb7
  404cbe:	das    
  404cbf:	daa    
  404cc0:	add    DWORD PTR [ebx-0x5d4ea2d6],ecx
  404cc6:	and    BYTE PTR [esi+0x2],0x1d
  404cca:	and    BYTE PTR [ebx+edx*8-0x67],0xdc
  404ccf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cd0:	shrd   esp,eax,cl
  404cd3:	ret    
  404cd4:	and    BYTE PTR [edx-0x9eba7a],al
  404cda:	pop    ebp
  404cdb:	cmp    bh,dl
  404cdd:	xor    ah,BYTE PTR [edx+ebx*1+0x2a]
  404ce1:	xchg   edx,eax
  404ce2:	repz add cl,BYTE PTR [ebx]
  404ce5:	push   ebx
  404ce6:	cwde   
  404ce7:	lods   eax,DWORD PTR ds:[esi]
  404ce8:	inc    BYTE PTR [eax-0x30]
  404ceb:	adc    al,0xf0
  404ced:	rcl    BYTE PTR [ebx+ebx*4-0x6d04fe91],0x68
  404cf5:	pop    es
  404cf6:	dec    ebx
  404cf7:	jle    0x404cfa
  404cf9:	jmp    0x404cc1
  404cfb:	and    eax,0x1b1348c0
  404d00:	out    dx,eax
  404d01:	test   eax,0x524f77ff
  404d06:	adc    DWORD PTR [eax+0x30],ebp
  404d09:	icebp  
  404d0a:	sbb    al,dl
  404d0c:	add    esp,ebx
  404d0e:	imul   eax,DWORD PTR [esi-0x59bb34e4],0xe132180e
  404d18:	mov    ebp,0xb19da67f
  404d1d:	ins    DWORD PTR es:[edi],dx
  404d1e:	inc    esp
  404d1f:	fist   DWORD PTR [esi+ebx*4+0x63]
  404d23:	jbe    0x404d3f
  404d25:	(bad)  
  404d26:	icebp  
  404d27:	cdq    
  404d28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d29:	mov    cs,WORD PTR [ebx-0x7e]
  404d2c:	lahf   
  404d2d:	fwait
  404d2e:	stc    
  404d2f:	aam    0xff
  404d31:	xchg   ebp,eax
  404d32:	push   eax
  404d33:	pop    edi
  404d34:	mov    edi,cs
  404d36:	cmc    
  404d37:	fstp   QWORD PTR [ebx+0x75]
  404d3a:	sub    eax,0xe996d7c8
  404d3f:	sbb    DWORD PTR [edi],ebx
  404d41:	call   0xa719:0x2ae86380
  404d48:	add    esi,DWORD PTR [ebp+0x4c4a1ee8]
  404d4e:	push   esi
  404d4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d50:	popf   
  404d51:	sub    DWORD PTR [ecx],ebp
  404d53:	ja     0x404d42
  404d55:	das    
  404d56:	and    BYTE PTR [ebp-0x29],0xc5
  404d5a:	mov    dl,0xb1
  404d5c:	pop    eax
  404d5d:	addr16 cmp al,0xa0
  404d60:	dec    ebp
  404d61:	cmp    eax,0x76a8a558
  404d66:	sub    DWORD PTR [ecx+0x759eb1fc],edi
  404d6c:	(bad)  
  404d6d:	push   ss
  404d6e:	or     cl,BYTE PTR [edx-0x32]
  404d71:	dec    ebp
  404d72:	mov    bl,0x6f
  404d74:	das    
  404d75:	cmp    al,0x8c
  404d77:	daa    
  404d78:	shr    BYTE PTR [edx],cl
  404d7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d7b:	push   ds
  404d7c:	mov    esi,0x909ecf28
  404d81:	lahf   
  404d82:	jmp    DWORD PTR [esi-0x54894d28]
  404d88:	jo     0x404dc6
  404d8a:	mov    eax,ds:0x7207b8f5
  404d8f:	adc    eax,DWORD PTR [eax+0x1cf8715f]
  404d95:	jg     0x404d47
  404d97:	in     al,dx
  404d98:	(bad)  
  404d9a:	jmp    0x404dce
  404d9c:	cmp    al,0x9c
  404d9e:	add    eax,ebp
  404da0:	lds    edi,FWORD PTR [edi+eax*8]
  404da3:	popa   
  404da4:	pop    esp
  404da5:	pusha  
  404da6:	xlat   BYTE PTR ds:[ebx]
  404da8:	repz mov ebp,0xe3dc108a
  404dae:	aad    0x23
  404db0:	and    al,0xd9
  404db2:	cmc    
  404db3:	inc    esi
  404db4:	mov    ebx,0x93cbdd0f
  404db9:	ret    
  404dba:	loop   0x404e15
  404dbc:	(bad)  
  404dbd:	adc    eax,0x221a23ef
  404dc2:	ror    BYTE PTR [eax-0x15796367],cl
  404dc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dc9:	jle    0x404e1c
  404dcb:	das    
  404dcc:	inc    esi
  404dcd:	mov    edi,0xa865152f
  404dd2:	xchg   edx,eax
  404dd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dd4:	pop    eax
  404dd5:	pop    es
  404dd6:	das    
  404dd7:	jle    0x404d6d
  404dd9:	iret   
  404dda:	inc    edx
  404ddb:	add    eax,DWORD PTR [ebx]
  404ddd:	int3   
  404dde:	stos   DWORD PTR es:[edi],eax
  404ddf:	or     ebp,DWORD PTR [eax+esi*1-0x70]
  404de3:	mov    eax,0xd013b715
  404de8:	xchg   edi,eax
  404de9:	add    eax,0x28dddaf4
  404dee:	stc    
  404def:	add    al,0x8
  404df1:	bnd ret 0xc501
  404df5:	retf   
  404df6:	daa    
  404df7:	mov    dl,0x17
  404df9:	pushf  
  404dfa:	stos   DWORD PTR es:[edi],eax
  404dfb:	jge    0x404da8
  404dfd:	fisubr DWORD PTR [edx+0x143cfaeb]
  404e03:	cmp    al,0x32
  404e05:	push   ss
  404e06:	adc    DWORD PTR [eax+0x4b04c2ea],esi
  404e0c:	add    DWORD PTR [edx],ebp
  404e0e:	push   0xffffffc0
  404e10:	pop    edx
  404e11:	pop    esp
  404e12:	mov    al,0xa1
  404e14:	jge    0x404dfe
  404e16:	xchg   esi,eax
  404e17:	adc    eax,0x8435423d
  404e1c:	xchg   esi,eax
  404e1d:	retf   
  404e1e:	mov    ah,BYTE PTR [ebp-0x247895f2]
  404e24:	push   ss
  404e25:	(bad)  
  404e26:	xchg   ebx,eax
  404e27:	dec    ecx
  404e28:	or     al,0xdc
  404e2a:	popf   
  404e2b:	es jmp 0xb73a:0x2d10743
  404e33:	fidivr DWORD PTR [ebx]
  404e35:	pop    eax
  404e36:	push   0x46
  404e38:	or     DWORD PTR [edi+0x22],esp
  404e3b:	loope  0x404e1e
  404e3d:	dec    esp
  404e3e:	(bad)  
  404e3f:	xlat   BYTE PTR ds:[ebx]
  404e40:	ds jl  0x404eb9
  404e43:	mov    ecx,0x763bbfcb
  404e48:	jp     0x404ec6
  404e4a:	and    ah,BYTE PTR [edx+0x45fa1ffa]
  404e50:	neg    ecx
  404e52:	lahf   
  404e53:	or     DWORD PTR [ecx+0x45c7e6e],ebp
  404e59:	(bad)  
  404e5a:	repz mov ebx,0x35908bbf
  404e60:	icebp  
  404e61:	into   
  404e62:	pop    esi
  404e63:	jge    0x404e3e
  404e65:	jle    0x404df4
  404e67:	repnz fiadd DWORD PTR [eax-0xc8200bf]
  404e6e:	out    dx,al
  404e6f:	inc    eax
  404e70:	int    0x81
  404e72:	test   BYTE PTR [eax+edi*1],bl
  404e75:	lods   eax,DWORD PTR ds:[esi]
  404e76:	sub    DWORD PTR [edi+0x67],ebx
  404e79:	clc    
  404e7a:	test   eax,0x5a14b1b
  404e7f:	adc    ebp,esi
  404e81:	push   edx
  404e82:	imul   edx,DWORD PTR [edx],0xaf6c6220
  404e88:	sub    al,BYTE PTR [ebx+0xf]
  404e8b:	mov    cl,0xa0
  404e8d:	mov    edi,0xe878410c
  404e92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e93:	mov    al,0xe0
  404e95:	pop    DWORD PTR [esi-0x122f516e]
  404e9b:	and    edi,DWORD PTR [esi+0x55]
  404e9e:	and    al,0x31
  404ea0:	mov    edx,DWORD PTR [eax-0x3669bf69]
  404ea6:	sub    BYTE PTR [ebx-0x62caabe6],bh
  404eac:	adc    BYTE PTR [ecx+edi*2],dh
  404eaf:	or     edi,esi
  404eb1:	mov    dh,0xeb
  404eb3:	daa    
  404eb4:	arpl   WORD PTR [ecx+0x19bd4fc0],bx
  404eba:	jns    0x404efb
  404ebc:	mov    ebx,DWORD PTR [eax-0x3d]
  404ebf:	mov    eax,0x2fcad77b
  404ec4:	cmp    BYTE PTR [ebx-0x7d],dl
  404ec7:	shl    BYTE PTR [eax-0x448cad99],0xd
  404ece:	mov    al,0x22
  404ed0:	daa    
  404ed1:	pop    es
  404ed2:	mov    esi,0xbd0e6ac2
  404ed7:	mov    ebx,0x6eb5adf7
  404edc:	mov    ds:0x7d70e953,al
  404ee1:	jg     0x404eaa
  404ee3:	push   ds
  404ee4:	dec    eax
  404ee5:	icebp  
  404ee6:	int    0xb0
  404ee8:	add    DWORD PTR [edi-0x75],edi
  404eeb:	pop    ss
  404eec:	fld    TBYTE PTR [edx-0x4a]
  404eef:	and    al,0x15
  404ef1:	add    ah,BYTE PTR [edi-0x7a]
  404ef4:	jp     0x404ec6
  404ef6:	rcr    BYTE PTR [edi],0x77
  404ef9:	ds and ebx,0x68ba54b5
  404f00:	jns    0x404ec9
  404f02:	xor    eax,0x2dee21c5
  404f07:	inc    edi
  404f08:	fidiv  DWORD PTR [edx+ebx*1]
  404f0b:	mov    esi,0x29bc39a0
  404f10:	daa    
  404f11:	(bad)  
  404f12:	jae    0x404ea5
  404f14:	popf   
  404f15:	adc    DWORD PTR [esp+ebx*1-0x33],ecx
  404f19:	push   esp
  404f1a:	test   BYTE PTR [edi+ebp*4-0x50],ah
  404f1e:	jge    0x404f4a
  404f20:	data16 fidiv DWORD PTR [eax]
  404f23:	scas   al,BYTE PTR es:[edi]
  404f24:	add    BYTE PTR [edx],bl
  404f26:	fild   QWORD PTR [ebp-0x2]
  404f29:	pop    edx
  404f2a:	inc    ebx
  404f2b:	scas   eax,DWORD PTR es:[edi]
  404f2c:	xchg   ecx,eax
  404f2d:	adc    al,0x77
  404f2f:	lods   eax,DWORD PTR ds:[esi]
  404f30:	repnz hlt 
  404f32:	and    al,0xa8
  404f34:	push   cs
  404f35:	xlat   BYTE PTR ds:[ebx]
  404f36:	gs add ebx,ecx
  404f39:	repnz in eax,0xb2
  404f3c:	dec    sp
  404f3e:	int3   
  404f3f:	call   0x39a81f14
  404f44:	xor    ebp,DWORD PTR [esp+edx*2+0x33b557e3]
  404f4b:	mov    ah,0xe
  404f4d:	pop    edx
  404f4e:	call   0x37e92869
  404f53:	and    eax,0x8a6036c4
  404f58:	inc    eax
  404f59:	aas    
  404f5a:	mov    bl,0x57
  404f5c:	data16 test al,0x0
  404f5f:	xchg   DWORD PTR [edi+esi*4-0x1635994c],esp
  404f66:	pusha  
  404f67:	mov    edi,0x1a50f14f
  404f6c:	add    dl,BYTE PTR [ebx+0x3b]
  404f6f:	push   ecx
  404f70:	cmp    eax,0xd5d0298f
  404f75:	ret    0xbe0
  404f78:	daa    
  404f79:	dec    ebx
  404f7a:	sbb    bl,bl
  404f7c:	in     eax,dx
  404f7d:	iret   
  404f7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f7f:	xor    BYTE PTR [edx+0x57225253],bh
  404f85:	in     al,dx
  404f86:	push   esi
  404f87:	pop    ss
  404f88:	jle    0x404fd2
  404f8a:	dec    ebx
  404f8b:	fs dec edx
  404f8d:	inc    edx
  404f8e:	lods   al,BYTE PTR ds:[esi]
  404f8f:	push   esp
  404f90:	rcr    BYTE PTR [edx],cl
  404f92:	fist   WORD PTR [edx]
  404f94:	push   ecx
  404f95:	sbb    esi,ecx
  404f97:	xor    eax,0xea34d7d
  404f9c:	aad    0x2a
  404f9e:	cmove  edi,DWORD PTR [edi-0x7567f658]
  404fa5:	ins    DWORD PTR es:[edi],dx
  404fa6:	push   eax
  404fa7:	jnp    0x404fed
  404fa9:	push   eax
  404faa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fab:	(bad)  
  404fad:	popf   
  404fae:	push   eax
  404faf:	pop    ss
  404fb0:	sbb    eax,0x4c383a86
  404fb5:	push   0x39c98003
  404fba:	bound  eax,QWORD PTR [edi-0x6e]
  404fbd:	fdivr  QWORD PTR [ecx+0x7b]
  404fc0:	push   ecx
  404fc1:	dec    ebp
  404fc2:	pop    edi
  404fc3:	addr16 pop di
  404fc6:	and    DWORD PTR [ebp-0x5f],0x5f
  404fca:	push   ss
  404fcb:	jb     0x404f75
  404fcd:	test   BYTE PTR [esi+edx*8+0x7b8058c4],ch
  404fd4:	and    edi,DWORD PTR [edx]
  404fd6:	(bad)  
  404fd8:	das    
  404fd9:	fsub   st,st(6)
  404fdb:	fwait
  404fdc:	sbb    DWORD PTR [ebp-0x20a187b2],ebp
  404fe2:	xchg   esp,eax
  404fe3:	(bad)  
  404fe4:	pop    eax
  404fe5:	adc    dh,bl
  404fe7:	scas   al,BYTE PTR es:[edi]
  404fe8:	inc    eax
  404fe9:	ins    DWORD PTR es:[edi],dx
  404fea:	fstp   QWORD PTR [ebp+0x6c3c11e2]
  404ff0:	clc    
  404ff1:	pop    esi
  404ff2:	loope  0x404fe0
  404ff4:	fdiv   DWORD PTR ds:0xb7875930
  404ffa:	rcr    ch,cl
  404ffc:	fwait
  404ffd:	sar    BYTE PTR [edi+0xa],0x11
  405001:	aad    0x20
  405003:	xor    eax,0x45c01cd2
  405008:	push   eax
  405009:	rol    al,0xba
  40500c:	outs   dx,BYTE PTR ds:[esi]
  40500d:	shr    bh,0xde
  405010:	mov    al,0x8a
  405012:	ins    DWORD PTR es:[edi],dx
  405013:	cmp    BYTE PTR [edi+0x37],al
  405016:	push   ss
  405017:	adc    eax,DWORD PTR [eax]
  405019:	inc    eax
  40501a:	ffreep st(3)
  40501c:	inc    eax
  40501d:	inc    esi
  40501e:	pop    ebx
  40501f:	and    ah,ch
  405021:	and    BYTE PTR [ecx-0x4190eed],0x85
  405028:	jle    0x40509b
  40502a:	xchg   DWORD PTR [edi+0x155a9295],esp
  405030:	dec    esp
  405031:	fucom  st(1)
  405033:	lahf   
  405034:	pop    esp
  405035:	cld    
  405036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405037:	retf   0x457e
  40503a:	adc    al,0xba
  40503c:	mov    BYTE PTR [ebx-0x5d349da9],bl
  405042:	xchg   esi,eax
  405043:	sub    al,0xc7
  405045:	xchg   BYTE PTR [eax+0x4de43fc4],bl
  40504b:	jl     0x4050c5
  40504d:	dec    ecx
  40504e:	add    BYTE PTR [eax],ch
  405050:	in     al,0xf2
  405052:	inc    ebx
  405053:	jbe    0x404ff3
  405055:	mov    eax,0x65a3c6ad
  40505a:	xor    eax,0xb18344f3
  40505f:	fdivr  DWORD PTR [ebx-0x6751dc2b]
  405065:	push   0xffffff96
  405067:	dec    esp
  405068:	dec    eax
  405069:	shl    BYTE PTR [edi-0x5a],0x44
  40506d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40506f:	mov    dl,0xc
  405071:	mov    bh,0x60
  405073:	sar    BYTE PTR [ebp-0xb],0x8a
  405077:	mov    cl,0xab
  405079:	mov    al,ds:0x49a6b4cc
  40507e:	mov    ebx,0xfa179dda
  405083:	or     eax,0x21a8a006
  405088:	dec    edi
  405089:	loopne 0x40507d
  40508b:	xor    DWORD PTR [ecx],ebp
  40508d:	jo     0x405098
  40508f:	bound  edx,QWORD PTR [edx+0x4d295201]
  405095:	add    BYTE PTR [ebp+edi*8+0x5d],ah
  405099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40509a:	pop    ebx
  40509b:	aaa    
  40509c:	push   0xffffff96
  40509e:	and    eax,0x706ef229
  4050a3:	call   0x65cffaf4
  4050a8:	jbe    0x405073
  4050aa:	into   
  4050ab:	inc    edi
  4050ac:	repz jmp 0x89c3:0x754a580f
  4050b4:	cs push es
  4050b6:	pop    ebp
  4050b7:	push   0x35
  4050b9:	cwde   
  4050ba:	sub    eax,DWORD PTR [ebp+0x8833085]
  4050c0:	xchg   esi,eax
  4050c1:	push   eax
  4050c2:	in     al,0xb9
  4050c4:	mov    bl,0xce
  4050c6:	cmp    eax,0x8223adc3
  4050cb:	jb     0x40511d
  4050cd:	test   DWORD PTR [ecx+eax*8-0x56],eax
  4050d1:	stc    
  4050d2:	sbb    edx,edx
  4050d4:	lds    ecx,FWORD PTR [ebp+0x21]
  4050d7:	add    bh,ch
  4050d9:	sti    
  4050da:	push   edx
  4050db:	mov    bh,0x75
  4050dd:	mov    bh,0x1c
  4050df:	adc    eax,0xc85299ef
  4050e4:	enter  0x6e8d,0x62
  4050e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050e9:	sub    ebx,DWORD PTR [edx]
  4050eb:	sub    bl,BYTE PTR [ebx]
  4050ed:	into   
  4050ee:	mov    eax,ds:0x252cb5df
  4050f3:	sub    bh,al
  4050f5:	xor    bl,BYTE PTR [esi-0x6b]
  4050f8:	test   al,0x60
  4050fa:	loop   0x405084
  4050fc:	aad    0xf3
  4050fe:	ins    DWORD PTR es:[edi],dx
  4050ff:	lods   al,BYTE PTR ds:[esi]
  405100:	dec    eax
  405101:	adc    DWORD PTR [esi],ecx
  405103:	jns    0x4050de
  405105:	fyl2x  
  405107:	and    BYTE PTR [edx+0x7faf01ba],0xab
  40510e:	int    0x7
  405110:	adc    cl,BYTE PTR es:[ebp+0x3c]
  405114:	sub    eax,0xd49e236c
  405119:	rcr    DWORD PTR [esi+0x2a],cl
  40511c:	sub    ebx,DWORD PTR [edx+0x26]
  40511f:	outs   dx,DWORD PTR ds:[esi]
  405120:	mov    al,ds:0x1564f7db
  405125:	pop    ds
  405126:	ror    BYTE PTR [edi-0x2c],1
  405129:	xor    ah,BYTE PTR [eax]
  40512b:	lods   al,BYTE PTR ds:[esi]
  40512d:	fldcw  WORD PTR [edx-0x4bae820e]
  405133:	pusha  
  405134:	stc    
  405135:	cmp    BYTE PTR [ecx+0x36],0x2d
  405139:	mov    bh,0xb2
  40513b:	sub    esi,DWORD PTR [ecx+eiz*8]
  40513e:	and    esp,DWORD PTR [edi+esi*2]
  405141:	xchg   edi,eax
  405142:	in     al,0xb8
  405144:	clc    
  405145:	jmp    0x241ee8f6
  40514a:	ret    
  40514b:	or     eax,0x81fc832e
  405150:	(bad)  
  405151:	fild   WORD PTR [esi+0x52]
  405154:	ret    0xcde4
  405157:	test   eax,0x982afb5e
  40515c:	lahf   
  40515d:	xchg   esi,eax
  40515e:	jnp    0x4051ba
  405160:	jbe    0x405182
  405162:	inc    edi
  405163:	cmp    esp,eax
  405165:	in     eax,0x15
  405167:	and    ebp,DWORD PTR [edi+0x50bf25da]
  40516d:	sub    edi,edi
  40516f:	or     al,bh
  405171:	mov    ss,WORD PTR [esi-0x6e03e7bb]
  405177:	xor    eax,0x656e5468
  40517c:	push   ecx
  40517d:	div    BYTE PTR [edx]
  40517f:	or     al,0x2a
  405181:	sti    
  405182:	(bad)  
  405183:	mov    bl,0x58
  405185:	mov    dh,0xd1
  405187:	add    esi,0xffffff90
  40518a:	pop    esi
  40518b:	retf   0x711b
  40518e:	out    0x9e,al
  405190:	inc    edi
  405191:	ret    0x4522
  405194:	repnz into 
  405196:	xchg   edx,eax
  405197:	adc    dl,BYTE PTR [ecx-0x2ef0645a]
  40519d:	xor    bl,ch
  40519f:	je     0x4051fb
  4051a1:	push   ss
  4051a2:	and    DWORD PTR [ebp+esi*4-0x485c45a6],0xdc57f154
  4051ad:	popf   
  4051ae:	adc    al,0xb8
  4051b0:	ret    0xc143
  4051b3:	stos   DWORD PTR es:[edi],eax
  4051b4:	mul    DWORD PTR [ebx]
  4051b6:	mov    al,0xc5
  4051b8:	pop    edi
  4051b9:	ja     0x40516f
  4051bb:	outs   dx,BYTE PTR ds:[esi]
  4051bc:	and    BYTE PTR [esi*8+0x35c8efb],bl
  4051c3:	sbb    al,0xb8
  4051c5:	mov    ah,dl
  4051c7:	int    0x87
  4051c9:	enter  0xcfde,0x74
  4051cd:	fiadd  WORD PTR ds:0x22294c26
  4051d3:	ss push esi
  4051d5:	or     bh,BYTE PTR [ebp+0x27]
  4051d8:	stos   DWORD PTR es:[edi],eax
  4051d9:	jne    0x405166
  4051db:	std    
  4051dc:	xor    eax,0x63565bb9
  4051e1:	inc    esp
  4051e2:	jmp    0x40520d
  4051e4:	arpl   bx,bp
  4051e6:	sub    BYTE PTR [ebp+edx*2+0x11],dl
  4051ea:	adc    eax,0xe5f9a80c
  4051ef:	push   esp
  4051f0:	inc    ebp
  4051f1:	jbe    0x4051dd
  4051f3:	aaa    
  4051f4:	jbe    0x405243
  4051f6:	cmp    ch,BYTE PTR [esi-0x76]
  4051f9:	cmp    bl,BYTE PTR [ecx]
  4051fb:	mov    esi,0xb471361a
  405200:	jmp    0x4051cc
  405202:	mov    cl,BYTE PTR [edx-0x6e49c194]
  405208:	add    al,0x72
  40520a:	es fucompp 
  40520d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40520e:	repz xor eax,0x3a38d7c8
  405214:	sub    ebp,DWORD PTR [ebx-0x2b]
  405217:	and    eax,DWORD PTR [bp+si-0x11]
  40521b:	push   0x5cb526ef
  405220:	stos   DWORD PTR es:[edi],eax
  405221:	sbb    DWORD PTR [ebx],esi
  405223:	ret    
  405224:	add    eax,0x3272dc
  405229:	jmp    0x405392
  40522e:	mov    ecx,DWORD PTR [ebp-0x38]
  405231:	add    ecx,DWORD PTR [ebp+0x8]
  405234:	mov    DWORD PTR [ebp-0x10],ecx
  405237:	mov    ecx,DWORD PTR [ebp-0x1c]
  40523a:	test   ecx,ecx
  40523c:	je     0x40531d
  405242:	mov    DWORD PTR [ebp-0x20],0x0
  405249:	push   0x3
  40524b:	xor    edx,edx
  40524d:	pop    edx
  40524e:	add    edx,0x8
  405251:	push   edx
  405252:	pop    ecx
  405253:	push   0x6
  405255:	dec    ecx
  405256:	pop    ebx
  405257:	dec    ebx
  405258:	xchg   ebx,ecx
  40525a:	sub    ebx,ecx
  40525c:	xchg   ebx,ecx
  40525e:	dec    ecx
  40525f:	mov    eax,DWORD PTR [ebp-0x1c]
  405262:	imul   eax,ecx
  405265:	sub    esp,eax
  405267:	mov    DWORD PTR [ebp-0x20],esp
  40526a:	mov    eax,DWORD PTR [ebp-0x4]
  40526d:	mov    ecx,0x7510894
  405272:	xor    eax,ecx
  405274:	mov    edx,0x3272dc
  405279:	add    eax,edx
  40527b:	mov    DWORD PTR [ebp+0x8],eax
  40527e:	mov    eax,DWORD PTR [ebp-0x14]
  405281:	xor    eax,ecx
  405283:	add    eax,edx
  405285:	mov    edx,DWORD PTR [ebp+0x14]
  405288:	imul   eax,DWORD PTR [edx]
  40528b:	mov    edx,DWORD PTR [ebp-0x4]
  40528e:	xor    edx,ecx
  405290:	mov    ecx,DWORD PTR [ebp+0x8]
  405293:	lea    ecx,[edx+ecx*1+0x3272dc]
  40529a:	cmp    ecx,eax
  40529c:	je     0x405313
  4052a2:	mov    edi,DWORD PTR [ebp-0x14]
  4052a5:	mov    eax,DWORD PTR [ebp+0x8]
  4052a8:	mov    edx,DWORD PTR [ebp+0x14]
  4052ab:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052af:	mov    ecx,0x7510894
  4052b4:	xor    edx,edx
  4052b6:	xor    edi,ecx
  4052b8:	mov    esi,0x3272dc
  4052bd:	add    edi,esi
  4052bf:	div    edi
  4052c1:	mov    edx,DWORD PTR [ebp-0x4]
  4052c4:	xor    edx,ecx
  4052c6:	lea    eax,[edx+eax*1+0x3272dc]
  4052cd:	mov    edx,DWORD PTR [ebp+0x8]
  4052d0:	mov    edi,DWORD PTR [ebp-0x20]
  4052d3:	mov    DWORD PTR [edi+edx*4],eax
  4052d6:	mov    eax,DWORD PTR [ebp-0x14]
  4052d9:	mov    edx,DWORD PTR [ebp+0x8]
  4052dc:	xor    eax,ecx
  4052de:	lea    eax,[eax+edx*1+0x3272dc]
  4052e5:	mov    DWORD PTR [ebp+0x8],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x14]
  4052eb:	mov    edx,DWORD PTR [ebp+0x14]
  4052ee:	xor    eax,ecx
  4052f0:	add    eax,esi
  4052f2:	imul   eax,DWORD PTR [edx]
  4052f5:	mov    edx,DWORD PTR [ebp-0x4]
  4052f8:	xor    edx,ecx
  4052fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4052fd:	lea    ecx,[edx+ecx*1+0x3272dc]
  405304:	cmp    ecx,eax
  405306:	jne    0x4052a2
  40530c:	mov    eax,esi
  40530e:	jmp    0x405318
  405313:	mov    eax,0x3272dc
  405318:	mov    ebx,0x7510894
  40531d:	mov    ecx,DWORD PTR [ebp-0x4]
  405320:	xor    ecx,ebx
  405322:	add    ecx,eax
  405324:	mov    DWORD PTR [ebp-0xc],ecx
  405327:	mov    ebx,0x65655
  40532c:	add    ebx,0x3234
  405332:	xchg   ebx,esi
  405334:	xor    ebx,ebx
  405336:	push   esi
  405337:	mov    esi,ebx
  405339:	pop    ebx
  40533a:	mov    edx,esi
  40533c:	add    ebx,0x1002
  405342:	lea    eax,[ebp-0x10]
  405345:	add    edx,eax
  405347:	add    edx,0x5
  40534a:	push   edx
  40534b:	inc    esi
  40534c:	pop    ecx
  40534d:	dec    ecx
  40534e:	xchg   ecx,eax
  40534f:	dec    eax
  405350:	xchg   ecx,eax
  405351:	dec    ecx
  405352:	xchg   ecx,edx
  405354:	dec    edx
  405355:	push   edx
  405356:	mov    edx,ebx
  405358:	pop    ebx
  405359:	dec    ebx
  40535a:	call   DWORD PTR [ebx]
  40535c:	cmp    DWORD PTR [ebp+0x10],esi
  40535f:	je     0x40537e
  405365:	xchg   edx,eax
  405366:	push   0xb
  405368:	pop    ecx
  405369:	push   0x4
  40536b:	pop    ebx
  40536c:	inc    ebx
  40536d:	xchg   ebx,ecx
  40536f:	sub    ebx,ecx
  405371:	xchg   ebx,ecx
  405373:	dec    ecx
  405374:	dec    ecx
  405375:	mov    eax,DWORD PTR [ebp-0x1c]
  405378:	imul   eax,ecx
  40537b:	add    esp,eax
  40537d:	xchg   edx,eax
  40537e:	push   eax
  40537f:	xor    ebx,ebx
  405381:	mov    edx,esp
  405383:	dec    edx
  405384:	inc    ebx
  405385:	add    ebx,DWORD PTR [edx+ebx*1]
  405388:	dec    ebx
  405389:	xor    edx,edx
  40538b:	add    DWORD PTR [ebp-0xc],ebx
  40538e:	pop    ebx
  40538f:	mov    eax,DWORD PTR [ebp-0xc]
  405392:	pop    edi
  405393:	pop    esi
  405394:	pop    ebx
  405395:	leave  
  405396:	ret    0x10
  405399:	push   ebp
  40539a:	mov    ebp,esp
  40539c:	sub    esp,0x18
  40539f:	and    DWORD PTR ds:0x413c1e,0x0
  4053a9:	mov    ecx,DWORD PTR ds:0x413c1e
  4053af:	inc    ecx
  4053b0:	mov    DWORD PTR ds:0x413c1e,ecx
  4053b6:	cmp    DWORD PTR ds:0x413c1e,0x8
  4053bd:	jne    0x4053d7
  4053c3:	push   DWORD PTR [ebp-0x20]
  4053c6:	push   0x413cf0
  4053cb:	push   DWORD PTR [ebp-0x24]
  4053ce:	push   DWORD PTR [ebp-0x14]
  4053d1:	call   DWORD PTR ds:0x416770
  4053d7:	cmp    DWORD PTR ds:0x413c1e,0x7
  4053de:	jne    0x4053f3
  4053e4:	xor    ecx,ecx
  4053e6:	or     ecx,DWORD PTR ds:0x413c1e
  4053ec:	inc    ecx
  4053ed:	mov    DWORD PTR ds:0x413c1e,ecx
  4053f3:	cmp    DWORD PTR ds:0x413c1e,0x1f
  4053fa:	jb     0x4053a9
  405400:	and    DWORD PTR ds:0x413c12,ecx
  405406:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  40540d:	xor    edx,edx
  40540f:	or     edx,DWORD PTR ds:0x413cc0
  405415:	mov    edx,DWORD PTR [edx]
  405417:	and    DWORD PTR ds:0x413ce8,edx
  40541d:	lea    eax,[ebp+0x14]
  405420:	mov    DWORD PTR [ebp-0x4],eax
  405423:	push   esi
  405424:	adc    edx,ecx
  405426:	mov    esi,0xf89c85b0
  40542b:	mov    DWORD PTR [ebp-0xc],esi
  40542e:	and    DWORD PTR ds:0x413c74,0x0
  405438:	jmp    0x40544a
  40543d:	mov    edx,DWORD PTR ds:0x413c74
  405443:	inc    edx
  405444:	mov    DWORD PTR ds:0x413c74,edx
  40544a:	cmp    DWORD PTR ds:0x413c74,0x1a
  405451:	jae    0x405550
  405457:	cmp    DWORD PTR ds:0x413c74,0x10
  40545e:	jne    0x40547c
  405464:	push   0x41401c
  405469:	push   DWORD PTR [ebp-0x14]
  40546c:	push   0x416140
  405471:	push   0x4161b2
  405476:	call   DWORD PTR ds:0x416774
  40547c:	cmp    DWORD PTR ds:0x413c74,0xf
  405483:	jne    0x405498
  405489:	xor    edx,edx
  40548b:	add    edx,DWORD PTR ds:0x413c74
  405491:	inc    edx
  405492:	mov    DWORD PTR ds:0x413c74,edx
  405498:	jmp    0x40543d
  40549d:	and    DWORD PTR ds:0x413c0e,0x0
  4054a7:	jmp    0x4054b9
  4054ac:	mov    ecx,DWORD PTR ds:0x413c0e
  4054b2:	inc    ecx
  4054b3:	mov    DWORD PTR ds:0x413c0e,ecx
  4054b9:	cmp    DWORD PTR ds:0x413c0e,0x16
  4054c0:	jae    0x405550
  4054c6:	cmp    DWORD PTR ds:0x413c0e,0x7
  4054cd:	jne    0x4054e8
  4054d3:	push   0x1925
  4054d8:	push   0x413c1a
  4054dd:	push   0x416140
  4054e2:	call   DWORD PTR ds:0x416778
  4054e8:	cmp    DWORD PTR ds:0x413c0e,0x6
  4054ef:	jne    0x405504
  4054f5:	xor    ecx,ecx
  4054f7:	or     ecx,DWORD PTR ds:0x413c0e
  4054fd:	inc    ecx
  4054fe:	mov    DWORD PTR ds:0x413c0e,ecx
  405504:	jmp    0x4054ac
  405509:	mov    DWORD PTR ds:0x413d1c,0x15
  405513:	cmp    DWORD PTR ds:0x413d1c,0x0
  40551a:	je     0x405550
  405520:	cmp    DWORD PTR ds:0x413d1c,0x21
  405527:	jne    0x405538
  40552d:	push   0x416025
  405532:	call   DWORD PTR ds:0x41677c
  405538:	mov    ecx,DWORD PTR ds:0x413d1c
  40553e:	dec    ecx
  40553f:	mov    DWORD PTR ds:0x413d1c,ecx
  405545:	jmp    0x405513
  40554a:	adc    edx,0x7769
  405550:	lea    eax,[ebp-0xc]
  405553:	mov    DWORD PTR [ebp-0x14],eax
  405556:	or     eax,DWORD PTR ds:0x413c0a
  40555c:	mov    eax,DWORD PTR [ebp-0xc]
  40555f:	and    edx,edx
  405561:	mov    edx,DWORD PTR [ebp-0x14]
  405564:	mov    ecx,0x7510894
  405569:	xor    eax,ecx
  40556b:	add    eax,0x3272dc
  405570:	mov    DWORD PTR [edx],eax
  405572:	and    DWORD PTR ds:0x413d34,0x0
  40557c:	jmp    0x40558c
  405581:	mov    eax,ds:0x413d34
  405586:	inc    eax
  405587:	mov    ds:0x413d34,eax
  40558c:	cmp    DWORD PTR ds:0x413d34,0x17
  405593:	jae    0x4055dc
  405599:	cmp    DWORD PTR ds:0x413d34,0x8
  4055a0:	jne    0x4055b9
  4055a6:	push   0x413cec
  4055ab:	push   DWORD PTR [ebp-0x24]
  4055ae:	push   0x416049
  4055b3:	call   DWORD PTR ds:0x416780
  4055b9:	cmp    DWORD PTR ds:0x413d34,0x7
  4055c0:	jne    0x4055d1
  4055c6:	mov    eax,ds:0x413d34
  4055cb:	inc    eax
  4055cc:	mov    ds:0x413d34,eax
  4055d1:	jmp    0x405581
  4055d6:	and    edx,DWORD PTR ds:0x413bfe
  4055dc:	mov    eax,ds:0x41622c
  4055e1:	mov    edx,DWORD PTR [ebp-0x4]
  4055e4:	add    DWORD PTR ds:0x413bf6,0x4ad3
  4055ee:	mov    eax,DWORD PTR [eax]
  4055f0:	add    eax,DWORD PTR [edx]
  4055f2:	sbb    DWORD PTR ds:0x413c80,0x777b
  4055fc:	push   edi
  4055fd:	xor    DWORD PTR ds:0x413c06,ebx
  405603:	mov    DWORD PTR [ebp-0x8],eax
  405606:	mov    edi,DWORD PTR [ebp+0x8]
  405609:	movzx  eax,BYTE PTR ds:0x413d28
  405610:	sub    DWORD PTR ds:0x413c06,eax
  405616:	mov    eax,ds:0x4163b4
  40561b:	mov    eax,DWORD PTR [eax+0x198]
  405621:	adc    edx,DWORD PTR ds:0x414010
  405627:	xor    edi,ecx
  405629:	mov    edx,0x3272dc
  40562e:	add    DWORD PTR ds:0x413c1a,0x413cd8
  405638:	add    edi,edx
  40563a:	mov    DWORD PTR ds:0x413d28,0x4988
  405644:	cmp    DWORD PTR [eax],edi
  405646:	je     0x40565d
  40564c:	mov    eax,DWORD PTR [eax]
  40564e:	mov    DWORD PTR ds:0x413ce4,0xf81
  405658:	jmp    0x407c4a
  40565d:	mov    eax,DWORD PTR [ebp+0x18]
  405660:	mov    DWORD PTR ds:0x413c06,0x7bbf
  40566a:	cmp    eax,esi
  40566c:	mov    DWORD PTR ds:0x413d30,0x2bf7
  405676:	jne    0x405686
  40567c:	push   0xf89c85b1
  405681:	jmp    0x407c39
  405686:	mov    esi,DWORD PTR [ebp+0x18]
  405689:	movzx  eax,WORD PTR ds:0x413cf0
  405690:	mov    eax,0xf89c85b2
  405695:	cmp    esi,eax
  405697:	jne    0x407c29
  40569d:	mov    eax,DWORD PTR [ebp+0x10]
  4056a0:	inc    DWORD PTR ds:0x413c80
  4056a6:	xor    eax,ecx
  4056a8:	add    eax,edx
  4056aa:	mov    DWORD PTR [ebp-0x18],eax
  4056ad:	adc    DWORD PTR ds:0x413d1c,0x3347
  4056b7:	mov    eax,DWORD PTR [ebp+0xc]
  4056ba:	mov    esi,DWORD PTR [ebp-0x8]
  4056bd:	xor    eax,ecx
  4056bf:	sbb    DWORD PTR ds:0x413ce4,0x413c70
  4056c9:	add    eax,edx
  4056cb:	imul   eax,DWORD PTR [esi]
  4056ce:	and    DWORD PTR ds:0x413c0a,ebx
  4056d4:	mov    esi,DWORD PTR [ebp+0x8]
  4056d7:	and    DWORD PTR ds:0x413d24,0x413c02
  4056e1:	xor    esi,ecx
  4056e3:	add    esi,edx
  4056e5:	cmp    esi,eax
  4056e7:	movzx  eax,BYTE PTR ds:0x413cf0
  4056ee:	mov    eax,DWORD PTR [ebp-0x4]
  4056f1:	push   ebx
  4056f2:	mov    DWORD PTR ds:0x414000,0x6197
  4056fc:	je     0x40577e
  405702:	and    DWORD PTR ds:0x413c1e,0x0
  40570c:	jmp    0x40571e
  405711:	mov    esi,DWORD PTR ds:0x413c1e
  405717:	inc    esi
  405718:	mov    DWORD PTR ds:0x413c1e,esi
  40571e:	cmp    DWORD PTR ds:0x413c1e,0x14
  405725:	jae    0x405765
  40572b:	cmp    DWORD PTR ds:0x413c1e,0xa
  405732:	jne    0x405746
  405738:	push   0x413d1c
  40573d:	push   DWORD PTR [ebp-0x24]
  405740:	call   DWORD PTR ds:0x416784
  405746:	cmp    DWORD PTR ds:0x413c1e,0x9
  40574d:	jne    0x405760
  405753:	mov    esi,DWORD PTR ds:0x413c1e
  405759:	inc    esi
  40575a:	mov    DWORD PTR ds:0x413c1e,esi
  405760:	jmp    0x405711
  405765:	mov    esi,DWORD PTR [ebp-0x18]
  405768:	add    DWORD PTR [eax],esi
  40576a:	mov    eax,DWORD PTR [ebp-0x4]
  40576d:	mov    esi,DWORD PTR [ebp+0xc]
  405770:	xor    esi,ecx
  405772:	add    esi,edx
  405774:	imul   esi,DWORD PTR [eax]
  405777:	mov    DWORD PTR [eax],esi
  405779:	jmp    0x405783
  40577e:	mov    esi,DWORD PTR [ebp+0x14]
  405781:	xor    DWORD PTR [eax],esi
  405783:	mov    eax,DWORD PTR [ebp-0x4]
  405786:	mov    edi,DWORD PTR [ebp+0x10]
  405789:	xor    edi,ecx
  40578b:	mov    esi,0xffcd8d24
  405790:	mov    ebx,esi
  405792:	sub    ebx,edi
  405794:	add    DWORD PTR [eax],ebx
  405796:	mov    eax,DWORD PTR [ebp-0x4]
  405799:	mov    edi,DWORD PTR [ebp-0x8]
  40579c:	add    edi,DWORD PTR [eax]
  40579e:	mov    DWORD PTR [ebp-0x8],edi
  4057a1:	mov    eax,DWORD PTR [ebp+0xc]
  4057a4:	mov    edi,DWORD PTR [ebp+0xc]
  4057a7:	xor    edi,ecx
  4057a9:	xor    eax,ecx
  4057ab:	lea    eax,[eax+edi*1+0x64e5b8]
  4057b2:	mov    edi,DWORD PTR [ebp+0xc]
  4057b5:	xor    edi,ecx
  4057b7:	add    edi,edx
  4057b9:	imul   eax,edi
  4057bc:	mov    edi,DWORD PTR [ebp+0xc]
  4057bf:	xor    edi,ecx
  4057c1:	sub    edi,eax
  4057c3:	mov    eax,DWORD PTR [ebp-0x4]
  4057c6:	add    edi,edx
  4057c8:	cmp    DWORD PTR [eax],edi
  4057ca:	mov    eax,DWORD PTR [ebp-0x4]
  4057cd:	mov    edi,DWORD PTR [ebp+0x10]
  4057d0:	jg     0x4057e3
  4057d6:	xor    edi,ecx
  4057d8:	mov    ebx,esi
  4057da:	sub    ebx,edi
  4057dc:	add    DWORD PTR [eax],ebx
  4057de:	jmp    0x4057e9
  4057e3:	xor    edi,ecx
  4057e5:	add    edi,edx
  4057e7:	add    DWORD PTR [eax],edi
  4057e9:	mov    eax,DWORD PTR [ebp-0x8]
  4057ec:	mov    edi,DWORD PTR [ebp-0x10]
  4057ef:	mov    eax,DWORD PTR [eax]
  4057f1:	jmp    0x407b3d
  4057f6:	imul   ebp,DWORD PTR [edx+0x66],0xaba967a5
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	(bad)  
  4057ff:	sbb    eax,0xf54894ee
  405804:	pop    ebp
  405805:	ja     0x4057e7
  405807:	pop    edi
  405808:	jl     0x405886
  40580a:	dec    ebx
  40580b:	pop    edi
  40580c:	jl     0x40588a
  40580e:	fistp  WORD PTR [edx-0x29]
  405811:	loop   0x40586b
  405813:	int    0x5f
  405815:	mov    ebp,0x9846a2d6
  40581a:	pop    ecx
  40581b:	mov    ds:0x291eabc4,al
  405820:	mov    ebp,0x791311d7
  405825:	xor    eax,0xa9cf14dd
  40582a:	xchg   ebx,eax
  40582b:	mov    dh,0x22
  40582d:	in     al,dx
  40582e:	mov    al,ds:0x6c8a3ad7
  405833:	arpl   di,bx
  405835:	or     BYTE PTR [edi+eiz*2-0x2fb60f3f],dh
  40583c:	sbb    ah,dh
  40583e:	push   eax
  40583f:	cmp    al,0x66
  405841:	pop    ecx
  405842:	jecxz  0x405862
  405844:	or     ecx,DWORD PTR [edi-0x3b]
  405847:	mov    bl,0xd4
  405849:	retf   0x1fb5
  40584c:	es out dx,al
  40584e:	retf   0x97bf
  405851:	aas    
  405852:	mov    eax,ds:0xa0735d96
  405857:	iret   
  405858:	sub    dl,BYTE PTR gs:[ebx+0x23e68aad]
  40585f:	bound  ebp,QWORD PTR [edi-0x60abd08c]
  405865:	jl     0x8a6bba85
  40586b:	scas   eax,DWORD PTR es:[edi]
  40586c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40586d:	pushf  
  40586e:	pop    ds
  40586f:	mov    ds:0xaa6cfadc,al
  405874:	mov    DWORD PTR [eax-0x15f5e186],ebx
  40587a:	xor    dl,BYTE PTR [edx+0x18]
  40587d:	shl    DWORD PTR [edi-0x22],cl
  405880:	mov    DWORD PTR [ebx+0x6126108d],eax
  405886:	jno    0x4058d2
  405888:	stc    
  405889:	int3   
  40588a:	loope  0x4058db
  40588c:	sbb    eax,esp
  40588e:	or     al,0x97
  405890:	pop    edx
  405891:	iret   
  405892:	mov    DWORD PTR [edi+0x2c],eax
  405895:	out    0x9e,al
  405897:	dec    edi
  405898:	aad    0x3f
  40589a:	xchg   edx,eax
  40589b:	(bad)  
  40589d:	mov    edx,0x40ccdb4b
  4058a2:	xchg   esp,eax
  4058a3:	stos   BYTE PTR es:[edi],al
  4058a4:	push   ds
  4058a5:	out    0x7f,eax
  4058a7:	clc    
  4058a8:	sbb    eax,0x180e702
  4058ad:	jnp    0x405914
  4058af:	outs   dx,DWORD PTR ds:[esi]
  4058b0:	jl     0x405917
  4058b2:	mov    ah,0x6c
  4058b4:	fdiv   DWORD PTR [edx]
  4058b6:	push   esi
  4058b7:	pop    ecx
  4058b8:	xor    BYTE PTR [edi-0x70153113],al
  4058be:	scas   al,BYTE PTR es:[edi]
  4058bf:	sbb    eax,0xfdd46727
  4058c4:	xor    eax,DWORD PTR [ecx+0x9aaca66]
  4058ca:	xor    edx,ebp
  4058cc:	push   esi
  4058cd:	call   0x5abfc05e
  4058d2:	outs   dx,DWORD PTR ds:[esi]
  4058d3:	or     bl,bh
  4058d5:	ins    BYTE PTR es:[edi],dx
  4058d6:	fnstcw WORD PTR [edi-0x5f6dcacc]
  4058dc:	adc    al,0xe6
  4058de:	and    al,dl
  4058e0:	mov    dl,0xb8
  4058e2:	sub    al,al
  4058e4:	packsswb mm4,QWORD PTR [edi+0x991f786]
  4058eb:	inc    eax
  4058ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058ed:	int3   
  4058ee:	pop    ss
  4058ef:	push   esp
  4058f0:	fist   DWORD PTR [edi+0x43]
  4058f3:	pop    ecx
  4058f4:	push   eax
  4058f5:	scas   eax,DWORD PTR es:[edi]
  4058f6:	cmp    ch,BYTE PTR [eax]
  4058f8:	nop
  4058f9:	mov    ecx,0xda86e5ed
  4058fe:	ins    DWORD PTR es:[edi],dx
  4058ff:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  405901:	dec    edx
  405902:	cmp    DWORD PTR [ebp+0x53dce277],esi
  405908:	or     eax,DWORD PTR [esi]
  40590a:	add    al,0x78
  40590c:	(bad)  
  40590d:	out    0x7,eax
  40590f:	jae    0x4058c5
  405911:	add    BYTE PTR [esi+esi*1-0x5a],bl
  405915:	dec    ebp
  405916:	sbb    eax,0x221b3d88
  40591b:	ins    DWORD PTR es:[edi],dx
  40591c:	scas   al,BYTE PTR es:[edi]
  40591d:	add    BYTE PTR [ebx+0x26],dh
  405920:	adc    cl,bl
  405922:	pop    edi
  405923:	(bad)  
  405924:	ror    DWORD PTR ds:0x3f3c05eb,cl
  40592a:	(bad)  
  40592b:	sub    al,0xc4
  40592d:	fidivr DWORD PTR [eax+0x7e0bc957]
  405933:	test   al,0xdc
  405935:	icebp  
  405936:	fsub   QWORD PTR [eax-0x384a565a]
  40593c:	pop    ss
  40593d:	dec    esi
  40593e:	scas   al,BYTE PTR es:[edi]
  40593f:	mov    BYTE PTR [ecx+0x72fe1798],dh
  405945:	(bad)  
  405946:	pop    esp
  405947:	ss adc eax,0xc8cb7fb1
  40594d:	sbb    al,BYTE PTR ds:0x49f131a
  405953:	ins    DWORD PTR es:[edi],dx
  405954:	ret    0x8607
  405957:	mov    dl,0x68
  405959:	cmp    ch,BYTE PTR [esi]
  40595b:	stos   BYTE PTR es:[edi],al
  40595c:	sysret 
  40595e:	enter  0x8f00,0x0
  405962:	leave  
  405963:	add    al,0xe7
  405965:	into   
  405966:	out    0xe7,eax
  405968:	fs push eax
  40596a:	push   edx
  40596b:	dec    ebx
  40596c:	add    BYTE PTR [ecx-0x5c1278ad],cl
  405972:	pop    edi
  405973:	lods   al,BYTE PTR ds:[esi]
  405974:	mov    eax,ds:0xf9b531ff
  405979:	cli    
  40597a:	inc    ebp
  40597b:	das    
  40597c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40597d:	pushf  
  40597e:	sbb    eax,0xb50ea269
  405983:	dec    ecx
  405984:	in     al,dx
  405985:	arpl   WORD PTR [eax-0x66],bp
  405988:	outs   dx,DWORD PTR ds:[esi]
  405989:	fsubr  st(7),st
  40598b:	dec    esi
  40598c:	mov    ds:0xd669fbef,eax
  405991:	jg     0x405932
  405993:	pop    ss
  405994:	ja     0x405938
  405996:	sti    
  405997:	inc    ebp
  405998:	xchg   esi,eax
  405999:	cli    
  40599a:	shr    DWORD PTR [eax+0x4b],cl
  40599d:	lods   al,BYTE PTR ds:[esi]
  40599e:	pop    ebx
  40599f:	xor    dh,BYTE PTR [edi-0x61]
  4059a2:	in     eax,0x1f
  4059a4:	inc    esi
  4059a5:	lods   al,BYTE PTR ds:[esi]
  4059a6:	out    dx,eax
  4059a7:	ret    0x35e9
  4059aa:	retf   0x6de4
  4059ad:	xchg   edi,eax
  4059ae:	fild   QWORD PTR [ebp+0x3c]
  4059b1:	inc    ecx
  4059b2:	imul   eax,DWORD PTR [edx],0x26
  4059b5:	mov    WORD PTR [edx+0x3],?
  4059b8:	add    ch,cl
  4059ba:	dec    ecx
  4059bb:	sbb    al,BYTE PTR [ebx-0x3c]
  4059be:	inc    edx
  4059bf:	xrelease mov DWORD PTR [esp+esi*2+0xb],eax
  4059c4:	dec    esp
  4059c5:	adc    ah,ch
  4059c7:	adc    ebx,DWORD PTR [ebx]
  4059c9:	ret    
  4059ca:	pop    esi
  4059cb:	push   esp
  4059cc:	sub    dl,BYTE PTR [eax-0x62b356ba]
  4059d2:	pop    ebx
  4059d3:	xchg   esi,ebx
  4059d5:	mov    dl,0x5
  4059d7:	mov    ds:0x4ed1ca82,eax
  4059dc:	pusha  
  4059dd:	cmp    BYTE PTR [eax+0x6f],al
  4059e0:	imul   ebp,DWORD PTR [ebx],0x30f00336
  4059e6:	inc    ebp
  4059e7:	out    dx,eax
  4059e8:	adc    al,0x69
  4059ea:	test   BYTE PTR [esi],ch
  4059ec:	imul   ebx,DWORD PTR [ebp+0x34],0x66b20513
  4059f3:	sar    dl,cl
  4059f5:	in     eax,dx
  4059f6:	je     0x405988
  4059f8:	sahf   
  4059f9:	pop    esi
  4059fa:	(bad)  
  4059fb:	fs adc eax,0xf44eb69a
  405a01:	mov    ds:0x548fdb85,eax
  405a06:	test   BYTE PTR [ebp+0x54918258],dh
  405a0c:	je     0x4059a8
  405a0e:	xchg   esp,eax
  405a0f:	mov    ecx,0xb791dada
  405a14:	call   0x5c585903
  405a19:	and    dh,BYTE PTR [esi-0x6f]
  405a1c:	mov    eax,0x78f90192
  405a21:	mov    esp,DWORD PTR [edi]
  405a23:	jo     0x4059db
  405a25:	xchg   ebx,eax
  405a26:	loope  0x405a24
  405a28:	cmp    DWORD PTR [esi-0x506970c9],0xd3d75f36
  405a32:	lock repz data16 mov cl,0x5b
  405a37:	mov    cl,0x4d
  405a39:	fst    st(6)
  405a3b:	add    DWORD PTR [esi+edi*4-0x326c6176],edi
  405a42:	mov    dl,0xf9
  405a44:	xchg   BYTE PTR [ebp+0x26808dda],bl
  405a4a:	stos   BYTE PTR es:[edi],al
  405a4b:	mov    al,ds:0x23df0b29
  405a50:	setbe  BYTE PTR [ecx+0x75e994e4]
  405a57:	sub    ah,BYTE PTR [esi]
  405a59:	fnsave [ecx]
  405a5b:	and    eax,0x4ff5e1a3
  405a60:	mov    al,0xb0
  405a62:	dec    eax
  405a63:	push   es
  405a64:	push   cs
  405a65:	pop    eax
  405a66:	out    0xf5,eax
  405a68:	sbb    ebx,ecx
  405a6a:	fimul  WORD PTR [esi+ecx*8-0x21c81c18]
  405a71:	jbe    0x405aa8
  405a73:	xchg   DWORD PTR [ecx],esi
  405a75:	sub    DWORD PTR [edx],0x9a96a4bc
  405a7b:	add    eax,0x82e14750
  405a80:	mov    ebp,0x33b3e57e
  405a85:	push   edi
  405a86:	stc    
  405a87:	push   edx
  405a88:	mov    al,ds:0xa28c7533
  405a8d:	xor    esi,0x1f9e91a8
  405a93:	inc    ebp
  405a94:	call   0xe0fb2f74
  405a99:	ret    
  405a9a:	rcl    BYTE PTR [ebp-0x57],1
  405a9d:	push   ds
  405a9e:	hlt    
  405a9f:	inc    esp
  405aa0:	repz das 
  405aa2:	clc    
  405aa3:	sbb    cl,al
  405aa5:	ins    DWORD PTR es:[edi],dx
  405aa6:	call   DWORD PTR [edi-0x10]
  405aa9:	ret    0xa6c0
  405aac:	shl    BYTE PTR [eax+0x5d],0xe4
  405ab0:	mov    al,0x3a
  405ab2:	add    eax,0x3c19c4ec
  405ab7:	cmp    DWORD PTR [eax],0xffffffef
  405aba:	fnstcw WORD PTR ds:0x676e41c9
  405ac0:	cwde   
  405ac1:	xor    ebx,edx
  405ac3:	inc    eax
  405ac4:	(bad)  
  405ac5:	imul   dh
  405ac7:	sbb    DWORD PTR [edi-0x4b5a4889],ecx
  405acd:	push   ebp
  405ace:	jns    0x405ac0
  405ad0:	or     DWORD PTR [edx+0x36cfeb8a],esi
  405ad6:	inc    eax
  405ad7:	mov    DWORD PTR [edx+0x1a],edx
  405ada:	push   esi
  405adb:	cmp    cl,BYTE PTR [ebp-0xd]
  405ade:	pop    ebp
  405adf:	add    eax,0x1093759c
  405ae4:	add    al,0xda
  405ae6:	and    al,0xfc
  405ae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ae9:	xor    DWORD PTR [eax-0x13dde7f5],esi
  405aef:	xchg   edx,eax
  405af0:	adc    esp,DWORD PTR [ebx-0x58fc2bcf]
  405af6:	in     eax,0x80
  405af8:	call   0x47deaf81
  405afd:	cmp    DWORD PTR [edx+ebx*4-0x93493c6],eax
  405b04:	test   al,0x9a
  405b06:	lds    ecx,FWORD PTR [edx]
  405b08:	ins    BYTE PTR es:[edi],dx
  405b09:	push   eax
  405b0a:	add    eax,0x40875653
  405b0f:	push   esi
  405b10:	add    al,0x64
  405b12:	adc    esp,DWORD PTR es:[bp+0x5a]
  405b17:	and    bl,BYTE PTR [edi+0x42b7e9a]
  405b1d:	mov    ebp,0x7c3d99
  405b22:	push   esi
  405b23:	call   0x9cbad5d0
  405b28:	jns    0xaf83ea28
  405b2e:	(bad)  
  405b2f:	imul   eax,DWORD PTR [ebx+ebp*8+0x5cb8175c],0xffffff99
  405b37:	scas   eax,DWORD PTR es:[edi]
  405b38:	and    eax,0xffffffb7
  405b3b:	or     BYTE PTR [ebp+0x66d44409],ch
  405b41:	sub    BYTE PTR [eax-0x42aa04e3],al
  405b47:	lds    edi,FWORD PTR [eax+eax*4-0x58]
  405b4b:	mov    ds:0xa1e2b8d5,eax
  405b50:	pop    ss
  405b51:	pop    es
  405b52:	das    
  405b53:	jle    0x405aef
  405b55:	adc    al,0xb5
  405b57:	cmp    esi,ebp
  405b59:	xor    al,0x1
  405b5b:	ins    BYTE PTR es:[edi],dx
  405b5c:	mov    cl,0xcf
  405b5e:	sbb    DWORD PTR [edi-0x54],esi
  405b61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b62:	cmc    
  405b63:	jns    0x405b20
  405b65:	retf   0x8ace
  405b68:	pop    eax
  405b69:	adc    cl,al
  405b6b:	ret    
  405b6c:	adc    ebx,esi
  405b6e:	or     BYTE PTR [eax+0x47],bh
  405b71:	sub    DWORD PTR [bx+0x2],0x79
  405b76:	outs   dx,BYTE PTR ds:[esi]
  405b77:	inc    esp
  405b78:	xor    eax,0x2296105b
  405b7d:	jp     0x405b8b
  405b7f:	ins    BYTE PTR es:[edi],dx
  405b80:	fs (bad) 
  405b82:	mov    ds:0x94f89e10,al
  405b87:	(bad)  
  405b88:	aaa    
  405b89:	jecxz  0x405bf3
  405b8b:	iret   
  405b8c:	cli    
  405b8d:	cdq    
  405b8e:	dec    ecx
  405b8f:	cmp    eax,0x15489a8c
  405b94:	loope  0x405b36
  405b96:	lock inc esi
  405b98:	shr    ah,1
  405b9a:	nop
  405b9b:	dec    esp
  405b9c:	pop    ss
  405b9d:	(bad)  
  405b9e:	repnz xchg esi,eax
  405ba0:	shl    eax,0xe2
  405ba3:	cmp    eax,0xfc5ab312
  405ba8:	pop    edi
  405ba9:	and    ebx,DWORD PTR [ebx+edx*2-0x68]
  405bad:	xchg   esi,eax
  405bae:	mov    DWORD PTR [ecx],ebx
  405bb0:	jne    0x405ba2
  405bb2:	cli    
  405bb3:	sbb    BYTE PTR [eax+0x1b296c32],bl
  405bb9:	xchg   ebx,eax
  405bba:	rcl    BYTE PTR [ecx+0x7089701],1
  405bc0:	mov    ds:0xcedde1e7,al
  405bc5:	call   0xe6d5026c
  405bca:	jo     0x405bb8
  405bcc:	adc    edi,DWORD PTR [esi]
  405bce:	in     al,dx
  405bcf:	xor    ecx,DWORD PTR [ebp-0x371ae39a]
  405bd5:	cdq    
  405bd6:	in     eax,dx
  405bd7:	(bad)  
  405bd8:	push   ebx
  405bd9:	jnp    0x405c13
  405bdb:	out    dx,al
  405bdc:	push   es
  405bdd:	xor    DWORD PTR [esi],edi
  405bdf:	mov    al,ds:0x400552a4
  405be4:	adc    DWORD PTR [edx+0x34c81131],edi
  405bea:	je     0x405b9a
  405bec:	(bad)  
  405bed:	mov    WORD PTR [ecx],gs
  405bef:	inc    esp
  405bf0:	pandn  mm4,QWORD PTR [ecx]
  405bf3:	pushf  
  405bf4:	arpl   WORD PTR [ecx],cx
  405bf6:	add    DWORD PTR [ecx],esp
  405bf8:	sbb    eax,0xd74f2dea
  405bfd:	mov    eax,0xf16ae8c8
  405c02:	or     al,0x3f
  405c04:	mov    edx,0xcc3a9808
  405c09:	push   esp
  405c0a:	jno    0x405ba4
  405c0c:	xchg   edx,eax
  405c0d:	out    dx,eax
  405c0e:	xchg   BYTE PTR [ebx-0x4b],dl
  405c11:	xchg   ebx,eax
  405c12:	retf   0xa386
  405c15:	and    BYTE PTR [esi+0x3cb008af],bl
  405c1b:	iret   
  405c1c:	test   eax,0xf43a4aad
  405c21:	mov    edx,0x67220bd8
  405c26:	retf   0xb203
  405c29:	pop    ebx
  405c2a:	push   es
  405c2b:	mov    al,ds:0x4ba4d112
  405c30:	add    al,0x72
  405c32:	add    ebx,ecx
  405c34:	cmp    esi,DWORD PTR [ebx]
  405c36:	fld    TBYTE PTR ds:[ecx+0x31]
  405c3a:	push   edx
  405c3b:	jb     0x405c6a
  405c3d:	call   0xf77bb975
  405c42:	mov    ebp,0x73f41ec9
  405c47:	push   ds
  405c48:	test   esi,edi
  405c4a:	push   edx
  405c4b:	ja     0x405c6b
  405c4d:	push   eax
  405c4e:	pop    ss
  405c4f:	cmp    eax,0xf7baab2d
  405c54:	out    0xb0,al
  405c56:	push   esp
  405c57:	mov    ss:0x59541132,al
  405c5d:	and    eax,0xfeb1fafc
  405c62:	jno    0x405c07
  405c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c65:	sub    al,bh
  405c67:	mov    fs,WORD PTR [ebp+0x37e761e5]
  405c6d:	rcr    BYTE PTR [ecx-0x57693caf],1
  405c73:	in     eax,dx
  405c74:	scas   al,BYTE PTR es:[edi]
  405c75:	rcl    DWORD PTR [esi-0x74],1
  405c78:	hlt    
  405c79:	ins    DWORD PTR es:[edi],dx
  405c7a:	stos   BYTE PTR es:[edi],al
  405c7b:	pop    esp
  405c7c:	and    ebp,edi
  405c7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c7f:	ret    
  405c80:	ret    0xb787
  405c83:	xchg   ecx,eax
  405c84:	mov    ebp,0x4d0bb5fb
  405c89:	mov    eax,0x98dc8c1b
  405c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c8f:	ja     0x405cbf
  405c91:	mov    WORD PTR fs:0xa3be7bb6,cs
  405c98:	inc    esi
  405c99:	pop    esi
  405c9a:	xor    cl,dh
  405c9c:	retf   0x617e
  405c9f:	mov    ebp,0x5ddf5b38
  405ca4:	pop    esp
  405ca5:	mov    DWORD PTR [esi+0x37db9e0d],0xbda10113
  405caf:	push   ds
  405cb0:	sub    eax,0xdff45df9
  405cb5:	mov    al,0x1d
  405cb7:	call   0x5890:0x7623802b
  405cbe:	inc    ebx
  405cbf:	call   DWORD PTR [ecx-0x54]
  405cc2:	lods   al,BYTE PTR ds:[esi]
  405cc3:	dec    edi
  405cc5:	jns    0x405cb0
  405cc7:	sbb    eax,0x65b34c44
  405ccc:	mov    cs,WORD PTR [esi]
  405cce:	sti    
  405ccf:	dec    esp
  405cd0:	inc    edi
  405cd1:	sub    DWORD PTR [ecx-0x54fea8be],0x902f7d8c
  405cdb:	and    eax,0xa9d64066
  405ce0:	sar    BYTE PTR [esi+0x7d78ce3],1
  405ce6:	dec    edi
  405ce7:	jne    0x405d06
  405ce9:	inc    ebp
  405cea:	cmp    eax,esp
  405cec:	vunpcklps ymm0,ymm5,YMMWORD PTR [edx+esi*2]
  405cf1:	fidivr DWORD PTR [eax]
  405cf3:	aad    0xc4
  405cf5:	mov    bh,0xd1
  405cf7:	stos   BYTE PTR es:[edi],al
  405cf8:	push   es
  405cf9:	imul   eax,DWORD PTR [edi],0xffffffb2
  405cfc:	retf   
  405cfd:	mov    al,ds:0xa2bd885
  405d02:	jmp    0xe817:0xd29eef2f
  405d09:	loope  0x405cac
  405d0b:	sbb    BYTE PTR [ebx+ebx*8],bh
  405d0e:	mov    gs,edi
  405d10:	mov    edx,0xdbdd8270
  405d15:	data16 ss ror cl,1
  405d19:	data16 mov BYTE PTR [esi+0x6c],al
  405d1d:	das    
  405d1e:	adc    ecx,eax
  405d20:	enter  0x5db3,0xb5
  405d24:	dec    edi
  405d25:	adc    DWORD PTR [ecx],edx
  405d27:	xchg   esi,eax
  405d28:	aas    
  405d29:	mov    edx,0x489a603a
  405d2e:	mov    ds:0x6cc54798,eax
  405d33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d34:	or     BYTE PTR [eax],bh
  405d36:	inc    edx
  405d37:	data16 loopne 0x405d59
  405d3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d3b:	call   0x7029c3f8
  405d40:	jo     0x405cfe
  405d42:	dec    esi
  405d43:	mov    esi,DWORD PTR [ebx-0x5e]
  405d46:	add    cl,BYTE PTR [edi+0xa]
  405d49:	je     0x405dc0
  405d4b:	add    eax,0x6f9d9dff
  405d50:	xchg   ebp,eax
  405d51:	icebp  
  405d52:	dec    eax
  405d53:	int    0x50
  405d55:	mov    eax,ds:0xc888d717
  405d5a:	pop    esi
  405d5b:	jne    0x405d33
  405d5d:	or     edx,esp
  405d5f:	cwde   
  405d60:	fld    QWORD PTR [edx+eiz*2+0x1a]
  405d64:	test   ebx,eax
  405d66:	add    BYTE PTR [edx-0x54817681],0x92
  405d6d:	jb     0x405cf9
  405d6f:	lods   al,BYTE PTR ds:[esi]
  405d70:	cmp    ecx,edi
  405d72:	sahf   
  405d73:	mov    al,cl
  405d75:	fisttp QWORD PTR [ebp+0x49]
  405d78:	(bad)  
  405d79:	push   sp
  405d7b:	lods   al,BYTE PTR ds:[esi]
  405d7c:	add    DWORD PTR [edx],edi
  405d7e:	push   edx
  405d7f:	daa    
  405d80:	pushf  
  405d81:	mov    ah,0xf1
  405d83:	and    cl,BYTE PTR [esi]
  405d85:	xor    BYTE PTR [edi-0x7a],ah
  405d88:	inc    ecx
  405d89:	sbb    eax,0xd304af57
  405d8e:	push   eax
  405d8f:	xor    eax,0xe18e8d12
  405d94:	ficomp WORD PTR [ebp-0x4077baaf]
  405d9a:	imul   DWORD PTR [edx]
  405d9c:	loopne 0x405dc9
  405d9e:	(bad)  
  405d9f:	jae    0x405dfe
  405da1:	sahf   
  405da2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405da3:	or     bh,BYTE PTR [esp+ebx*4]
  405da6:	mov    ebx,es
  405da8:	fisttp DWORD PTR ds:0xe5cfbc3b
  405dae:	dec    esi
  405daf:	mov    ecx,0x43f8154f
  405db4:	cmc    
  405db5:	and    cl,dh
  405db7:	out    dx,eax
  405db8:	mov    fs,eax
  405dba:	imul   eax,DWORD PTR [edi-0x7b],0x7a
  405dbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dbf:	fld    DWORD PTR ds:0x2027a864
  405dc5:	rcr    DWORD PTR ds:[ebx-0x7b67a49],cl
  405dcc:	outs   dx,BYTE PTR ds:[esi]
  405dcd:	add    dh,BYTE PTR [eax]
  405dcf:	and    DWORD PTR [edi],edx
  405dd1:	mov    ebp,0x4c0488b2
  405dd6:	rcl    BYTE PTR [eax-0x3c],0xe4
  405dda:	and    DWORD PTR [eax+0x61],0xffffffed
  405dde:	retf   
  405ddf:	jne    0x405db7
  405de1:	(bad)  
  405de2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405de3:	data16 ja 0x405d68
  405de6:	fs ins DWORD PTR es:[edi],dx
  405de8:	xchg   ecx,eax
  405de9:	pusha  
  405dea:	inc    esp
  405deb:	xchg   esi,eax
  405dec:	xor    edx,DWORD PTR [edx+eiz*4]
  405def:	bound  eax,QWORD PTR [edx+eax*2+0xf]
  405df3:	cmp    edi,0x49
  405df6:	mov    ch,BYTE PTR [esi+0x0]
  405df9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dfa:	jmp    0x405dd9
  405dfc:	cmp    al,BYTE PTR [edx-0x28]
  405dff:	pop    eax
  405e00:	or     DWORD PTR [eax+0x60],edi
  405e03:	sbb    BYTE PTR [edx-0x6c],dh
  405e06:	sub    bh,BYTE PTR [bx]
  405e09:	cdq    
  405e0a:	or     dh,dh
  405e0c:	icebp  
  405e0d:	lods   al,BYTE PTR ds:[esi]
  405e0e:	into   
  405e0f:	adc    ecx,DWORD PTR [edi-0x70]
  405e12:	loop   0x405e5b
  405e14:	(bad)  
  405e15:	outs   dx,DWORD PTR ds:[esi]
  405e16:	cmp    al,0x26
  405e18:	sbb    al,0x27
  405e1a:	mov    al,ds:0xccaf885c
  405e1f:	ss (bad) 
  405e21:	xchg   BYTE PTR [ebx-0x4a],dl
  405e24:	add    BYTE PTR [eax-0x6e],ah
  405e27:	dec    esp
  405e28:	mov    al,0x62
  405e2a:	test   DWORD PTR [ecx],esp
  405e2c:	pop    edi
  405e2d:	jmp    0xb019:0x62122aac
  405e34:	hlt    
  405e35:	sbb    bh,dl
  405e37:	inc    ebp
  405e38:	sbb    BYTE PTR [eax-0x53],cl
  405e3b:	and    DWORD PTR [ebp+0x446c8058],ebp
  405e41:	mov    bh,0xab
  405e43:	pop    es
  405e44:	mov    al,0xc
  405e46:	add    cl,ah
  405e48:	jge    0x405deb
  405e4a:	(bad)
  405e4f:	push   cs
  405e50:	(bad)  
  405e51:	not    ch
  405e53:	sbb    cl,BYTE PTR [edx]
  405e55:	xor    al,0xb2
  405e57:	xor    ecx,DWORD PTR [ecx]
  405e59:	cli    
  405e5a:	pop    es
  405e5b:	xor    ebp,DWORD PTR [eax]
  405e5d:	nop
  405e5e:	mov    edi,0x67695852
  405e63:	jg     0x405ec0
  405e65:	inc    esp
  405e66:	sub    BYTE PTR [esi],dh
  405e68:	shl    DWORD PTR [ebp+0x20],cl
  405e6b:	ret    
  405e6c:	cs or  eax,0x6f68d05a
  405e72:	ins    BYTE PTR es:[edi],dx
  405e73:	mov    ah,0x32
  405e75:	jae    0x405ea8
  405e77:	mov    ecx,DWORD PTR [edx+0x7a]
  405e7a:	or     BYTE PTR [ecx-0x4a],ch
  405e7d:	in     eax,dx
  405e7e:	cdq    
  405e7f:	cmp    edx,DWORD PTR [ecx-0x1606cf6]
  405e85:	adc    esi,ebx
  405e87:	sbb    BYTE PTR [ebp-0x1a4e33d5],dh
  405e8d:	out    dx,al
  405e8e:	inc    eax
  405e8f:	pop    esi
  405e90:	clc    
  405e91:	or     BYTE PTR [esi],bl
  405e93:	stc    
  405e94:	adc    al,0x38
  405e96:	out    dx,eax
  405e97:	out    0xca,al
  405e99:	(bad)  
  405e9a:	(bad)  
  405e9b:	mov    dh,ah
  405e9d:	mov    edx,0xf4ca23d3
  405ea2:	inc    esp
  405ea3:	std    
  405ea4:	enter  0xb82d,0x55
  405ea8:	js     0x405e9c
  405eaa:	(bad)  
  405eab:	sti    
  405eac:	pushf  
  405ead:	lahf   
  405eae:	pop    eax
  405eaf:	sar    ebx,1
  405eb1:	repnz inc edx
  405eb3:	rol    DWORD PTR [edx],1
  405eb5:	xlat   BYTE PTR ds:[ebx]
  405eb6:	inc    esi
  405eb7:	ins    DWORD PTR es:[edi],dx
  405eb8:	(bad)  
  405eb9:	adc    al,0xd7
  405ebb:	ficom  WORD PTR [ebx]
  405ebd:	sbb    al,0xfe
  405ebf:	push   es
  405ec0:	xlat   BYTE PTR ds:[ebx]
  405ec1:	push   ebx
  405ec2:	out    0xcb,eax
  405ec4:	sub    BYTE PTR [ebx+0x58],0x1f
  405ec8:	es int 0xd6
  405ecb:	inc    esp
  405ecc:	push   ecx
  405ecd:	xor    BYTE PTR [ecx],cl
  405ecf:	xchg   ebp,eax
  405ed0:	test   al,ch
  405ed2:	xor    DWORD PTR ds:0xad5f313e,ebx
  405ed8:	and    ah,BYTE PTR [esi]
  405eda:	icebp  
  405edb:	leave  
  405edc:	adc    dl,BYTE PTR [eax-0x5f28ea92]
  405ee2:	in     al,dx
  405ee3:	dec    esp
  405ee4:	bnd ret 0xb31f
  405ee8:	int    0x96
  405eea:	adc    DWORD PTR [ecx+0x59],edx
  405eed:	fst    DWORD PTR [edx-0x57]
  405ef0:	jae    0x405f54
  405ef2:	(bad)  [esi]
  405ef4:	push   0xe86a78b7
  405ef9:	xchg   ebx,eax
  405efa:	jnp    0x405e8b
  405efc:	xchg   edi,eax
  405efd:	dec    esi
  405efe:	cmp    eax,0xef39d565
  405f03:	and    BYTE PTR [edi+0x67212a79],0x7c
  405f0a:	mov    ch,0x76
  405f0c:	pop    ebx
  405f0d:	ds inc bx
  405f10:	sbb    eax,0xf742e61b
  405f15:	jge    0x405f88
  405f17:	and    ah,dl
  405f19:	ret    
  405f1a:	or     DWORD PTR [esi+edi*2],esp
  405f1d:	rcl    BYTE PTR [edx+0x7],cl
  405f20:	cdq    
  405f21:	or     eax,0x5aab95ca
  405f26:	sub    ah,BYTE PTR [eax]
  405f28:	sub    cl,BYTE PTR [edx-0x42]
  405f2b:	scas   al,BYTE PTR es:[edi]
  405f2c:	mov    bh,0x83
  405f2e:	scas   al,BYTE PTR es:[edi]
  405f2f:	xchg   ch,ch
  405f31:	pop    ecx
  405f32:	stos   BYTE PTR es:[edi],al
  405f33:	cdq    
  405f34:	mov    bh,BYTE PTR [ebx+0x58]
  405f37:	outs   dx,DWORD PTR ds:[esi]
  405f38:	jmp    0x405f5d
  405f3a:	adc    al,0xdb
  405f3c:	cmc    
  405f3d:	test   DWORD PTR [edi-0x5f],ebp
  405f40:	or     eax,0x80dbfcd0
  405f45:	cwde   
  405f46:	adc    ebp,DWORD PTR [edi-0x99e9b2a]
  405f4c:	int    0x8b
  405f4e:	ins    BYTE PTR es:[edi],dx
  405f4f:	jbe    0x405f64
  405f51:	adc    DWORD PTR [ebp-0x79987919],ebp
  405f57:	pop    ebp
  405f58:	push   0x5573b455
  405f5d:	mov    al,0xa7
  405f5f:	push   edx
  405f60:	lds    esp,FWORD PTR [esp+esi*4]
  405f63:	scas   al,BYTE PTR es:[edi]
  405f64:	loop   0x405f5f
  405f66:	call   0x976d:0x436f2ab6
  405f6d:	jb     0x405f01
  405f6f:	inc    ebx
  405f70:	inc    BYTE PTR [ebp+0x4a]
  405f73:	mov    DWORD PTR [edi+esi*2-0x5984e1c],esp
  405f7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f7b:	bound  esi,QWORD PTR [edx+eax*8]
  405f7e:	push   edi
  405f7f:	in     eax,dx
  405f80:	and    eax,0x19eee39f
  405f85:	or     DWORD PTR [ebx+0x33],ecx
  405f88:	jb     0x405fcc
  405f8a:	xchg   ebp,eax
  405f8b:	xor    BYTE PTR [esi],bh
  405f8d:	add    ah,bl
  405f8f:	gs adc eax,0x7301fe39
  405f95:	stos   DWORD PTR es:[edi],eax
  405f96:	push   ss
  405f97:	adc    ecx,DWORD PTR [ecx-0x1f0963f3]
  405f9d:	stc    
  405f9e:	mov    ebp,0xfd342fd7
  405fa3:	adc    esi,eax
  405fa5:	jle    0x405fb9
  405fa7:	mov    ds:0x1d6d3530,al
  405fac:	lahf   
  405fad:	ins    BYTE PTR es:[edi],dx
  405fae:	scas   al,BYTE PTR es:[edi]
  405faf:	call   0xcfc446b6
  405fb4:	arpl   WORD PTR [ebp-0x1f],cx
  405fb7:	xchg   edi,eax
  405fb8:	in     al,0xc5
  405fba:	jae    0x405ffa
  405fbc:	dec    ebp
  405fbd:	mov    ah,0xdd
  405fbf:	dec    edx
  405fc0:	push   ecx
  405fc1:	lods   eax,DWORD PTR ds:[esi]
  405fc2:	pop    ebp
  405fc3:	jae    0x405fb6
  405fc5:	shl    BYTE PTR [esi+edx*8-0x4e],cl
  405fc9:	push   esi
  405fca:	mov    bh,0xb6
  405fcc:	cmc    
  405fcd:	xor    al,0xc1
  405fcf:	or     BYTE PTR [edi+0x61865e5f],bl
  405fd5:	xchg   ebx,eax
  405fd6:	ror    DWORD PTR [eax-0x4],cl
  405fd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fda:	cmp    eax,0x8ba644f3
  405fdf:	ret    
  405fe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fe1:	jmp    0x9126:0xadf43153
  405fe8:	dec    esi
  405fe9:	pushf  
  405fea:	sbb    eax,0x45973e0d
  405fef:	pop    ss
  405ff0:	hlt    
  405ff1:	daa    
  405ff2:	nop
  405ff3:	xchg   esi,eax
  405ff4:	test   BYTE PTR [ebp+0x6],0x1d
  405ff8:	cmp    eax,0xd3e80556
  405ffd:	imul   esp,DWORD PTR [ecx],0xffffff99
  406000:	adc    al,0xad
  406002:	ret    0x13f7
  406005:	xchg   esp,eax
  406006:	and    al,0x8e
  406008:	ins    DWORD PTR es:[edi],dx
  406009:	cmp    ecx,edi
  40600b:	adc    eax,0x44c8c7e3
  406010:	sbb    al,0x78
  406012:	aam    0x41
  406014:	xchg   ecx,eax
  406015:	lock data16 cs loope 0x40603a
  40601a:	(bad)  
  40601b:	rcl    BYTE PTR [ebx],1
  40601d:	ror    bl,cl
  40601f:	sbb    edx,DWORD PTR [edx+0x7f5905b3]
  406025:	sbb    ecx,DWORD PTR [edx]
  406027:	mov    al,ds:0xc8634344
  40602c:	test   al,0x45
  40602e:	lock cmp bh,BYTE PTR [esi]
  406031:	jae    0x4060a9
  406033:	mov    BYTE PTR [eax],0xa1
  406036:	int3   
  406037:	inc    esi
  406038:	outs   dx,DWORD PTR ds:[esi]
  406039:	in     al,dx
  40603a:	mov    al,0xa6
  40603c:	pop    ss
  40603d:	push   ebp
  40603e:	adc    DWORD PTR [ecx],edx
  406040:	popf   
  406041:	stos   BYTE PTR es:[edi],al
  406042:	lea    ebx,[edx+0x3c9bb10e]
  406048:	xchg   edi,eax
  406049:	sbb    eax,0xc9b4b120
  40604e:	push   esp
  40604f:	test   DWORD PTR [esp+esi*8-0x61767ee1],ebx
  406056:	push   0x22
  406058:	not    BYTE PTR cs:[ebx+0x5c]
  40605c:	das    
  40605d:	fsubr  DWORD PTR [ebp-0x121d01b]
  406063:	add    eax,0x25e219bf
  406068:	retf   0x8af1
  40606b:	fild   DWORD PTR [esi]
  40606d:	inc    ebx
  40606e:	xchg   esp,ebp
  406070:	fstp   TBYTE PTR [ebp+0x8555e1c]
  406076:	stc    
  406077:	addr16 xchg ecx,eax
  406079:	push   0x62
  40607b:	(bad)  
  40607d:	out    0x3c,eax
  40607f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406080:	mov    eax,0x6b886ca0
  406085:	or     ecx,DWORD PTR [ebp-0x56a6e8f6]
  40608b:	jp     0x4060cd
  40608d:	add    al,0x7a
  40608f:	push   ebp
  406090:	iret   
  406091:	pop    es
  406092:	imul   eax,DWORD PTR [edi+edx*1-0x5b127117],0x66
  40609a:	inc    ebp
  40609b:	scas   eax,DWORD PTR es:[edi]
  40609c:	jne    0x4060fd
  40609e:	leave  
  40609f:	mov    al,0xf0
  4060a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060a2:	cmc    
  4060a3:	stos   DWORD PTR es:[edi],eax
  4060a4:	xor    dh,BYTE PTR [edi+0x7740f6b3]
  4060aa:	jnp    0x4060cc
  4060ac:	or     ah,BYTE PTR [ebp+0x16]
  4060af:	mov    eax,0x97ccc887
  4060b4:	fsub   DWORD PTR [eax]
  4060b6:	xchg   edx,eax
  4060b7:	test   eax,0x9823689e
  4060bc:	clc    
  4060bd:	sbb    eax,0xc3c7d513
  4060c2:	push   edi
  4060c3:	sub    DWORD PTR [edx],eax
  4060c5:	add    eax,0xbaf9ce44
  4060ca:	adc    DWORD PTR [esi],esi
  4060cc:	pop    esi
  4060cd:	leave  
  4060ce:	shl    BYTE PTR [ebx+0x5d1ef48f],cl
  4060d4:	shl    BYTE PTR [edx-0x21],1
  4060d7:	outs   dx,BYTE PTR ds:[esi]
  4060d8:	add    DWORD PTR [esi-0x59],ecx
  4060db:	fsub   st,st(1)
  4060dd:	arpl   WORD PTR [edx-0x23],bp
  4060e0:	fiadd  DWORD PTR [ebp-0x2b]
  4060e3:	jns    0x4060c6
  4060e5:	(bad)  
  4060e6:	retf   
  4060e7:	jbe    0x4060a1
  4060e9:	add    al,0x18
  4060eb:	int3   
  4060ec:	push   edi
  4060ed:	adc    eax,0xcdcf3236
  4060f2:	in     eax,0x9e
  4060f4:	xchg   edx,eax
  4060f5:	test   al,0x62
  4060f7:	or     ebp,DWORD PTR [edx]
  4060f9:	jecxz  0x4060ac
  4060fb:	les    edx,FWORD PTR [esi+0x7b]
  4060fe:	clc    
  4060ff:	pop    ds
  406100:	aas    
  406101:	sub    DWORD PTR [esi+0x4f],0x101fd4c7
  406108:	pushf  
  406109:	inc    edx
  40610a:	dec    ebp
  40610b:	sub    dl,BYTE PTR [edx+0x3a03a9ba]
  406111:	mov    bh,0x5f
  406113:	xor    esi,DWORD PTR [eax+0x3b]
  406116:	dec    ecx
  406117:	xlat   BYTE PTR ds:[ebx]
  406118:	int    0xae
  40611a:	jno    0x406159
  40611c:	inc    eax
  40611d:	fidiv  WORD PTR [edi-0x36]
  406120:	adc    al,0x47
  406122:	jno    0x40610f
  406124:	xor    DWORD PTR [ebp-0x38],edx
  406127:	loopne 0x40618e
  406129:	ins    DWORD PTR es:[edi],dx
  40612a:	push   edx
  40612b:	fadd   DWORD PTR [ecx+0x248ea0cc]
  406131:	mov    bl,0x96
  406133:	idiv   BYTE PTR [edx+ebx*8-0x63]
  406137:	pop    ebp
  406138:	mov    al,gs:0xb2568094
  40613e:	imul   esp,DWORD PTR [ebx+0x316598e7],0xffffff93
  406145:	outs   dx,DWORD PTR ds:[esi]
  406146:	dec    edx
  406147:	inc    ebp
  406148:	pop    esp
  406149:	jns    0x40612d
  40614b:	ss inc esp
  40614d:	stos   DWORD PTR es:[edi],eax
  40614e:	sti    
  40614f:	mov    al,ds:0x766fce2
  406154:	retf   
  406155:	dec    eax
  406156:	imul   eax,DWORD PTR [ebp+0x4fa918a5],0xffffffe8
  40615d:	aam    0x51
  40615f:	pop    edx
  406160:	pop    ebp
  406161:	cmp    al,0x19
  406163:	je     0x40619a
  406165:	or     BYTE PTR [ebx],cl
  406167:	mov    dh,0x3e
  406169:	idiv   BYTE PTR [edi]
  40616b:	inc    edi
  40616c:	repnz loop 0x4061bd
  40616f:	or     al,0x9
  406171:	ja     0x406127
  406173:	fist   DWORD PTR [ebx+0x2ad9c7a9]
  406179:	dec    eax
  40617a:	push   edx
  40617b:	repnz retf 
  40617d:	(bad)  
  40617f:	sub    edx,DWORD PTR [esi+0x6640fd71]
  406185:	mul    BYTE PTR [ebx+0xe]
  406188:	add    BYTE PTR [edi+0x53],bh
  40618b:	jmp    0x251b4ac3
  406190:	adc    DWORD PTR [eax-0x25663315],esp
  406196:	sbb    BYTE PTR ds:0xedee62fa,cl
  40619c:	mov    fs,WORD PTR [ebx+0x6f]
  40619f:	jmp    0x1b6c:0x77346a0c
  4061a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061a7:	dec    ecx
  4061a8:	retf   0x2689
  4061ab:	fdiv   DWORD PTR [esi+0x17]
  4061ae:	mov    ah,0x62
  4061b0:	mov    eax,ds:0x947ccdf8
  4061b5:	outs   dx,BYTE PTR ds:[esi]
  4061b6:	stos   DWORD PTR es:[edi],eax
  4061b7:	xchg   esp,eax
  4061b8:	pop    edi
  4061b9:	fs out dx,eax
  4061bb:	repnz aaa 
  4061bd:	clc    
  4061be:	daa    
  4061bf:	jmp    0xbdad:0x21709b61
  4061c6:	lods   al,BYTE PTR ds:[esi]
  4061c7:	out    0x34,al
  4061c9:	enter  0x3190,0x53
  4061cd:	sub    eax,0xee549c4e
  4061d2:	sub    BYTE PTR [ebp-0x78],0xa3
  4061d6:	lods   al,BYTE PTR ds:[esi]
  4061d7:	pushf  
  4061d8:	lock mov WORD PTR [esi],ss
  4061db:	or     BYTE PTR [esi-0x77],dh
  4061de:	pop    eax
  4061df:	adc    DWORD PTR [edx-0x1419ec36],ebp
  4061e5:	psadbw mm5,mm6
  4061e8:	mov    cl,0x2f
  4061ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061eb:	iret   
  4061ec:	shr    BYTE PTR [edi-0x11ee5f7d],1
  4061f2:	xchg   esi,eax
  4061f3:	push   cs
  4061f4:	je     0x406184
  4061f6:	lods   eax,DWORD PTR ds:[esi]
  4061f7:	mov    eax,ds:0x4f51a5a3
  4061fc:	pop    ebp
  4061fd:	in     eax,0x22
  4061ff:	(bad)  
  406200:	fdivr  DWORD PTR [edi+ebp*8+0x47]
  406204:	fsub   DWORD PTR [ebp-0x3e]
  406207:	pop    ebx
  406208:	xor    al,0xdc
  40620a:	mov    eax,DWORD PTR [ebp+0x59]
  40620d:	(bad)  
  40620e:	jnp    0x4061dd
  406210:	int3   
  406211:	or     BYTE PTR [ecx-0x192dcfef],al
  406217:	aas    
  406218:	sar    BYTE PTR [ebp+0x1b],1
  40621b:	xchg   edi,eax
  40621c:	xlat   BYTE PTR ds:[ebx]
  40621d:	and    esi,ecx
  40621f:	or     ebp,DWORD PTR [ebp+edx*4-0x7f6b55cb]
  406226:	cmp    al,0xdc
  406228:	shl    BYTE PTR [eax+edx*1-0x70],cl
  40622c:	js     0x406263
  40622e:	lods   al,BYTE PTR ds:[esi]
  40622f:	sbb    BYTE PTR [ecx+0x6735fae6],ah
  406235:	stos   DWORD PTR es:[edi],eax
  406236:	push   ds
  406237:	mov    ch,0xf5
  406239:	(bad)  
  40623a:	inc    edx
  40623b:	aad    0xe5
  40623d:	pop    DWORD PTR [esi]
  40623f:	inc    esi
  406240:	fucomp st(4)
  406242:	mul    ah
  406244:	add    eax,0x123d8e54
  406249:	jne    0x406263
  40624b:	aas    
  40624c:	std    
  40624d:	push   ecx
  40624e:	sbb    al,0x32
  406250:	ret    
  406251:	(bad)  
  406252:	or     esp,DWORD PTR [edi]
  406254:	and    BYTE PTR [ebx-0x10],ah
  406257:	add    BYTE PTR [ecx-0x5b],ah
  40625a:	fs pop esi
  40625c:	dec    esi
  40625d:	xchg   edx,eax
  40625e:	mov    dh,0xd5
  406260:	adc    dh,BYTE PTR [eax]
  406262:	sbb    eax,0x5ea76fc7
  406267:	xor    dh,BYTE PTR ds:0xb1163114
  40626d:	push   0xe85a38de
  406272:	hlt    
  406273:	repnz mov edx,0x71c8b0e2
  406279:	inc    ebp
  40627a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40627b:	cld    
  40627c:	pop    ss
  40627d:	pop    eax
  40627e:	addr16 lahf 
  406280:	nop
  406281:	imul   esi,DWORD PTR [ebx],0x8f3d660e
  406287:	ret    0xbcb4
  40628a:	push   ecx
  40628b:	pop    ss
  40628c:	mov    ebx,0xf3494791
  406291:	mov    edi,ecx
  406293:	pop    DWORD PTR [eax]
  406295:	les    ebp,FWORD PTR [eax]
  406297:	xlat   BYTE PTR ds:[ebx]
  406298:	ror    DWORD PTR [ebx+eax*8],1
  40629b:	push   esp
  40629c:	es pop edx
  40629e:	pop    ds
  40629f:	das    
  4062a0:	adc    edx,DWORD PTR [ebp+0x21]
  4062a3:	jge    0x406297
  4062a5:	pop    esp
  4062a6:	jnp    0x4062c4
  4062a8:	and    eax,0xb6075e81
  4062ad:	push   ebp
  4062ae:	cdq    
  4062af:	and    eax,0x21df7969
  4062b4:	ror    ah,0xe3
  4062b7:	(bad)  
  4062b8:	mov    eax,ds:0x3fe3bf8c
  4062bd:	inc    ebp
  4062be:	mov    DWORD PTR [esi+0x59],edi
  4062c1:	sub    eax,0xab978eb
  4062c6:	dec    esp
  4062c7:	cmp    al,0xe4
  4062c9:	mov    eax,ds:0xaad22fe8
  4062ce:	dec    ebp
  4062cf:	ret    0x50da
  4062d2:	daa    
  4062d3:	popf   
  4062d4:	ja     0x406298
  4062d6:	add    DWORD PTR [edx+0x7dbb435b],ebx
  4062dc:	pusha  
  4062dd:	out    0xd6,al
  4062df:	xor    eax,ebx
  4062e1:	sbb    ah,cl
  4062e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062e4:	dec    eax
  4062e5:	adc    al,0xc7
  4062e7:	loop   0x406278
  4062e9:	or     ecx,DWORD PTR [edi+0x46]
  4062ec:	and    eax,0x4e4aa48b
  4062f1:	mov    al,0x29
  4062f3:	shr    BYTE PTR [ecx],cl
  4062f5:	push   ebx
  4062f6:	adc    al,0x12
  4062f8:	pop    ebx
  4062f9:	ror    BYTE PTR [edx],cl
  4062fb:	mul    BYTE PTR [edi]
  4062fd:	mov    DWORD PTR [esi],ecx
  4062ff:	jns    0x406315
  406301:	jmp    0xe8fa:0xa4a7b054
  406308:	add    DWORD PTR [ecx+eax*2-0x6c7831c0],edi
  40630f:	inc    edi
  406310:	jmp    0x406366
  406312:	leave  
  406313:	fs ja  0x406339
  406316:	cmp    BYTE PTR [edx+0x4],dl
  406319:	adc    bh,ah
  40631b:	xchg   edx,eax
  40631c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40631d:	call   0x706f:0x5e905148
  406324:	ret    0xbf11
  406327:	push   ds
  406328:	sbb    eax,0x5f883c52
  40632d:	mov    eax,ds:0xdeb189bb
  406332:	sub    esp,edx
  406334:	and    eax,0xf3020ec4
  406339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40633a:	leave  
  40633b:	mov    ch,0xc9
  40633d:	mov    edi,0xa3fb20e6
  406342:	jbe    0x4063b6
  406344:	sar    esi,cl
  406346:	add    eax,0x65a39ef
  40634b:	cld    
  40634c:	dec    ebp
  40634d:	in     al,0xcd
  40634f:	fisub  DWORD PTR [eax]
  406351:	stos   BYTE PTR es:[edi],al
  406352:	neg    cl
  406354:	cmp    BYTE PTR [ecx],ah
  406356:	xor    ebx,DWORD PTR [eax+ebx*2]
  406359:	scas   eax,DWORD PTR es:[edi]
  40635a:	dec    esi
  40635b:	adc    al,0x18
  40635d:	int3   
  40635e:	iret   
  40635f:	es loopne 0x4063b1
  406362:	mov    BYTE PTR [ebp-0x6cc6c48c],dh
  406368:	pop    es
  406369:	fcom   DWORD PTR [ecx+eax*8+0x2dc8e703]
  406370:	xor    al,0x4e
  406372:	mov    gs,ebx
  406374:	fcmovnu st,st(0)
  406376:	in     al,0xc7
  406378:	cmp    DWORD PTR ss:[esi-0x1c918ab6],esp
  40637f:	or     bh,BYTE PTR [ebx+ebp*8-0x3f77ac31]
  406386:	es mov eax,0xc3d90684
  40638c:	out    0x64,al
  40638e:	push   es
  40638f:	sbb    BYTE PTR [edi+0x31],dl
  406392:	ins    BYTE PTR es:[edi],dx
  406393:	or     al,0xbc
  406395:	retf   
  406396:	repnz (bad) 
  406398:	retf   
  406399:	or     eax,0x15a7b39a
  40639e:	or     al,BYTE PTR ds:0x1dd12e2d
  4063a4:	xchg   edx,eax
  4063a5:	push   ebx
  4063a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063a7:	es clc 
  4063a9:	mov    WORD PTR ds:0x641c084f,fs
  4063af:	std    
  4063b0:	adc    eax,0x9e063b07
  4063b5:	jno    0x406405
  4063b7:	shr    BYTE PTR [esi+0xf79ae55],0x69
  4063be:	aas    
  4063bf:	push   0xffffff85
  4063c1:	sbb    eax,0x99f9092b
  4063c6:	mov    DWORD PTR [edi-0x6c],edx
  4063c9:	jo     0x4063ff
  4063cb:	stos   BYTE PTR es:[edi],al
  4063cc:	xor    BYTE PTR [eax-0x3f97c2b6],cl
  4063d2:	pop    edi
  4063d3:	xor    ch,BYTE PTR [ebp+0x43]
  4063d6:	mov    ah,0xd9
  4063d8:	cmp    DWORD PTR [eax-0x1bff74ba],0x5a05c96b
  4063e2:	ss inc eax
  4063e4:	test   eax,0xf94c0e66
  4063e9:	fs jns 0x4063a9
  4063ec:	xchg   esi,eax
  4063ed:	push   esp
  4063ee:	add    eax,DWORD PTR [edx+0x5c]
  4063f1:	cwde   
  4063f2:	jge    0x4063a3
  4063f4:	mov    edi,0xdad96f1c
  4063f9:	int3   
  4063fa:	jo     0x40644b
  4063fc:	je     0x406406
  4063fe:	mov    WORD PTR [edx+esi*2+0x3896a6ac],ss
  406405:	in     al,dx
  406406:	cmp    DWORD PTR [edx+eiz*8+0x48],ebp
  40640a:	adc    al,0x9b
  40640c:	stos   DWORD PTR es:[edi],eax
  40640d:	sahf   
  40640e:	and    ch,BYTE PTR [edx-0x3c]
  406411:	xchg   esi,eax
  406412:	bound  eax,QWORD PTR [edx-0x23019de6]
  406418:	repnz mov eax,ds:0xc3fbd0eb
  40641e:	xor    al,0xaf
  406420:	cmp    cl,BYTE PTR [edx]
  406422:	jle    0x406458
  406424:	sub    ebp,DWORD PTR [ebp-0x60]
  406427:	mov    al,ds:0xd1cdf92d
  40642c:	and    BYTE PTR [ebx],ch
  40642e:	xor    BYTE PTR [esi+0x56dade6e],ah
  406434:	aaa    
  406435:	clc    
  406436:	(bad)  
  406437:	loopne 0x40647d
  406439:	mov    dh,0xf7
  40643b:	xchg   ebp,eax
  40643c:	adc    al,0x10
  40643e:	push   ecx
  40643f:	sar    bl,1
  406441:	es push ds
  406443:	pushaw 
  406445:	push   ebx
  406446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406447:	out    0xfb,eax
  406449:	mov    eax,DWORD PTR [edx-0x1f]
  40644c:	sti    
  40644d:	jmp    0x406428
  40644f:	aad    0x92
  406451:	xlat   BYTE PTR ds:[ebx]
  406452:	ins    BYTE PTR es:[edi],dx
  406453:	inc    edi
  406454:	aad    0x6c
  406456:	ds pop esp
  406458:	(bad)  
  406459:	(bad)
  40645c:	test   al,0x8
  40645e:	pop    es
  40645f:	jmp    0x18b9a93c
  406464:	jnp    0x40649d
  406466:	js     0x40642e
  406468:	xlat   BYTE PTR ds:[ebx]
  406469:	jo     0x4064cb
  40646b:	jns    0x4064b0
  40646d:	test   al,0x3c
  40646f:	xor    al,0x1a
  406471:	aam    0xcc
  406473:	mov    ds,ecx
  406475:	shr    BYTE PTR [edi+0x753a042d],1
  40647b:	cmp    cl,al
  40647d:	arpl   bx,bx
  40647f:	pop    esp
  406480:	stos   DWORD PTR es:[edi],eax
  406481:	mov    bl,BYTE PTR [edi+ebp*4-0x7308a97b]
  406488:	mov    DWORD PTR [ebp+0x7f],esi
  40648b:	outs   dx,DWORD PTR ds:[esi]
  40648c:	jmp    0xd746:0xdf55ab36
  406493:	cmp    DWORD PTR [ecx+0x296e339f],esi
  406499:	add    DWORD PTR [ecx],eax
  40649b:	push   esp
  40649c:	test   eax,0x7a5db1d5
  4064a1:	adc    esi,esi
  4064a3:	out    0xa4,eax
  4064a5:	mov    esi,0x5f3d1ece
  4064aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064ab:	mov    esi,0xbc4c892e
  4064b0:	loopne 0x4064d6
  4064b2:	mov    ebp,0xab7f5694
  4064b7:	xchg   esi,eax
  4064b8:	mov    edx,0xb5214df3
  4064bd:	outs   dx,DWORD PTR ds:[esi]
  4064be:	mov    ebx,0x9d4b28bf
  4064c3:	repz loopne 0x4064e5
  4064c6:	mov    ds:0x4beba1df,al
  4064cb:	pop    ecx
  4064cc:	or     al,0xaf
  4064ce:	mov    ebx,0x2ca6040f
  4064d3:	ss pop edx
  4064d5:	daa    
  4064d6:	fild   QWORD PTR ds:0x2ab07d9c
  4064dc:	daa    
  4064dd:	jmp    0x406508
  4064df:	lods   al,BYTE PTR ds:[esi]
  4064e0:	inc    ecx
  4064e1:	ds jge 0x406473
  4064e4:	(bad)  
  4064e5:	gs mov ebp,0xea87ecf0
  4064eb:	ret    0x5f58
  4064ee:	cmp    esp,ecx
  4064f0:	add    esi,DWORD PTR [ebx]
  4064f2:	into   
  4064f3:	pop    ds
  4064f4:	aaa    
  4064f5:	and    bh,BYTE PTR [eax+0x1d]
  4064f8:	inc    edx
  4064f9:	inc    edi
  4064fa:	push   esp
  4064fb:	push   esp
  4064fc:	pop    eax
  4064fd:	loope  0x40650c
  4064ff:	jbe    0x4064c9
  406501:	hlt    
  406502:	jo     0x406515
  406504:	jne    0x406541
  406506:	leave  
  406507:	and    eax,0x64db2d80
  40650c:	xchg   edi,eax
  40650d:	mov    ah,0x1e
  40650f:	(bad)  
  406510:	retf   0xe3af
  406513:	retf   0xe3b0
  406516:	mov    WORD PTR [esi-0x2a9b684c],?
  40651c:	jno    0x40652d
  40651e:	or     ch,BYTE PTR [esi-0x1ee60043]
  406524:	dec    edi
  406525:	add    esp,DWORD PTR [ebp-0x31]
  406528:	push   esi
  406529:	outs   dx,DWORD PTR ds:[esi]
  40652a:	out    0x6c,al
  40652c:	sbb    eax,0x123a5757
  406531:	aam    0xc1
  406533:	ins    DWORD PTR es:[edi],dx
  406534:	mov    edi,edx
  406536:	pop    esp
  406537:	mov    ebx,0x27f1cd46
  40653c:	ja     0x40656a
  40653e:	inc    eax
  40653f:	(bad)  
  406540:	xor    bh,ah
  406542:	and    eax,0x402aeb52
  406547:	mov    ebx,0xd7387455
  40654c:	mov    esp,0xb4ef8f1c
  406551:	std    
  406552:	bound  eax,QWORD PTR [ebp+0x5bdae5b8]
  406558:	repnz push ebx
  40655a:	mov    eax,0xa61cd546
  40655f:	inc    eax
  406560:	add    cl,BYTE PTR [eax+0x5a]
  406563:	call   0xd060:0xc7bd4ed1
  40656a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40656b:	xlat   BYTE PTR ds:[ebx]
  40656c:	pop    ds
  40656d:	ss mov ebp,0x470324b3
  406573:	pop    esi
  406574:	sahf   
  406575:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406576:	int3   
  406577:	div    BYTE PTR [ecx+0x77]
  40657a:	test   eax,0x4ed92d63
  40657f:	push   ds
  406580:	dec    ebp
  406581:	add    cl,BYTE PTR [ecx-0x2b]
  406584:	adc    al,0xde
  406586:	mov    ebx,0xffe64f0e
  40658b:	sub    al,0xe9
  40658d:	xchg   dx,ax
  40658f:	leave  
  406590:	add    al,0xf9
  406592:	sar    BYTE PTR ds:0xe61fbf6a,cl
  406598:	or     cl,BYTE PTR [eax]
  40659a:	popa   
  40659b:	and    eax,0xaf2910b7
  4065a0:	ja     0x4065aa
  4065a2:	push   esp
  4065a3:	lods   eax,DWORD PTR ds:[esi]
  4065a4:	ss ss fwait
  4065a7:	cmp    ah,BYTE PTR [esi+ebp*2-0xba2e318]
  4065ae:	sbb    eax,0xad6ce513
  4065b3:	mov    ebp,DWORD PTR [bx+si]
  4065b6:	push   esp
  4065b7:	and    al,0x12
  4065b9:	jp     0x4065a5
  4065bb:	fcomi  st,st(1)
  4065bd:	mov    cl,bh
  4065bf:	mov    ebx,DWORD PTR fs:[ebx+0x6271393]
  4065c6:	add    DWORD PTR [esi-0x33],edx
  4065c9:	sub    BYTE PTR [edi+0x3f],ah
  4065cc:	pop    edi
  4065cd:	push   ebp
  4065ce:	xor    bl,0x26
  4065d1:	lea    ebx,[ecx+0x1fb11d1f]
  4065d7:	adc    dh,bh
  4065d9:	add    esp,DWORD PTR [edx+ecx*1-0x7da08b1c]
  4065e0:	loope  0x406607
  4065e2:	xlat   BYTE PTR ds:[ebx]
  4065e3:	jnp    0x406568
  4065e5:	not    cl
  4065e7:	sub    bl,BYTE PTR [ebp-0x3d186c5d]
  4065ed:	pop    es
  4065ee:	scas   al,BYTE PTR es:[edi]
  4065ef:	call   0x31e6943d
  4065f4:	scas   al,BYTE PTR es:[edi]
  4065f5:	(bad)  
  4065f6:	fild   WORD PTR [eax+0x535077a2]
  4065fc:	cli    
  4065fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065fe:	jp     0x40667b
  406600:	test   al,0x32
  406602:	ins    DWORD PTR es:[edi],dx
  406603:	repnz mov edi,0xd91f34a7
  406609:	push   ebx
  40660a:	pop    edx
  40660b:	loope  0x4065c4
  40660d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40660e:	xchg   esi,eax
  40660f:	mov    bh,0x1b
  406611:	aad    0xb4
  406613:	cmp    al,0x52
  406615:	inc    esp
  406616:	sbb    BYTE PTR [edi],bl
  406618:	mov    BYTE PTR [esi+0x4d],0x88
  40661c:	cdq    
  40661d:	and    al,0x12
  40661f:	pop    esi
  406620:	push   ss
  406621:	icebp  
  406622:	mul    eax
  406624:	pushf  
  406625:	push   cs
  406626:	inc    eax
  406627:	bound  eax,QWORD PTR [esi+edx*8+0x704e22a9]
  40662e:	in     eax,0x29
  406630:	jns    0x40663d
  406632:	jno    0x406693
  406634:	push   edi
  406635:	pop    eax
  406636:	inc    ebp
  406637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406638:	xchg   esi,eax
  406639:	sar    BYTE PTR [eax+0x28],cl
  40663c:	je     0x4065e2
  40663e:	mov    ch,0x74
  406640:	daa    
  406641:	cwde   
  406642:	outs   dx,BYTE PTR ds:[esi]
  406643:	inc    ebp
  406644:	jle    0x406649
  406646:	mov    DWORD PTR [eax+ebx*8+0x30],0xc27ac90a
  40664e:	and    edi,DWORD PTR [esi]
  406650:	sub    al,0xac
  406652:	test   eax,0xc4e08c8f
  406657:	xchg   ebx,eax
  406658:	mov    al,0xb6
  40665a:	cmp    al,0xc0
  40665c:	out    dx,eax
  40665d:	call   0x5dc6d1fd
  406662:	clc    
  406663:	dec    edx
  406664:	xchg   edi,eax
  406665:	dec    ebx
  406666:	sbb    edi,eax
  406668:	fstenv [ebx]
  40666b:	push   esi
  40666c:	ins    BYTE PTR es:[edi],dx
  40666d:	jnp    0x406674
  40666f:	push   edi
  406670:	icebp  
  406671:	aas    
  406672:	(bad)  
  406673:	ins    DWORD PTR es:[edi],dx
  406674:	pop    edi
  406675:	fwait
  406676:	dec    esi
  406677:	cmp    DWORD PTR [eax],edi
  406679:	int    0x6f
  40667b:	js     0x406654
  40667d:	jecxz  0x4066a6
  40667f:	stos   DWORD PTR es:[edi],eax
  406680:	mov    DWORD PTR [eax+0x3a],eax
  406683:	outs   dx,BYTE PTR ds:[esi]
  406684:	test   eax,0xe662cc89
  406689:	sub    al,0x12
  40668b:	mov    ebx,0xfbf4e183
  406690:	push   ss
  406691:	push   ecx
  406692:	sbb    eax,esp
  406694:	pop    ds
  406695:	pop    edx
  406696:	mov    eax,fs:0xaa1cb392
  40669c:	dec    esi
  40669d:	pop    eax
  40669e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40669f:	mov    ah,0x2d
  4066a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066a2:	mov    al,0xb
  4066a4:	lea    edx,[ebx+0x29c17ae1]
  4066aa:	sbb    BYTE PTR [ecx],dl
  4066ac:	and    BYTE PTR [esi+ecx*1],al
  4066af:	(bad)  
  4066b1:	inc    eax
  4066b2:	adc    DWORD PTR [di-0x138a],eax
  4066b7:	icebp  
  4066b8:	aam    0x79
  4066ba:	loop   0x40664b
  4066bc:	mov    bh,0x27
  4066be:	push   ds
  4066bf:	pop    edx
  4066c0:	mov    ch,0xbd
  4066c2:	sbb    eax,DWORD PTR [eax-0x8]
  4066c5:	mov    dl,BYTE PTR [ebx+ebp*4]
  4066c8:	call   0x83e13bad
  4066cd:	pop    ebx
  4066ce:	mov    esp,0xae202e60
  4066d3:	xor    al,0x7d
  4066d5:	test   DWORD PTR [ebx],esi
  4066d7:	test   al,0x2c
  4066d9:	(bad)  
  4066da:	int3   
  4066db:	push   0x6497e0db
  4066e0:	scas   eax,DWORD PTR es:[edi]
  4066e1:	iret   
  4066e2:	into   
  4066e3:	ret    0xe9bf
  4066e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066e7:	dec    edx
  4066e8:	adc    BYTE PTR [esi-0x310f30dd],al
  4066ee:	aad    0x22
  4066f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066f1:	repnz add ecx,DWORD PTR es:[esi+0x30]
  4066f6:	(bad)  
  4066f7:	out    0x51,al
  4066f9:	retf   
  4066fa:	js     0x40673d
  4066fc:	push   eax
  4066fd:	sbb    DWORD PTR [ebx+0x14b4ca77],edi
  406703:	(bad)  
  406704:	cmp    ah,BYTE PTR [ebx+0x3a]
  406707:	ret    0x59ea
  40670a:	xchg   esp,eax
  40670b:	adc    eax,esi
  40670d:	sub    edi,DWORD PTR [edi+ecx*2+0xa]
  406711:	aam    0x48
  406713:	jg     0x4066af
  406715:	sbb    al,0x5c
  406717:	sub    BYTE PTR [ebx+0x4f],bl
  40671a:	ins    DWORD PTR es:[edi],dx
  40671b:	and    al,BYTE PTR [eax+0x51fd60c6]
  406721:	mov    dh,0x44
  406723:	fnsave [esi-0x4718c4d9]
  406729:	shr    DWORD PTR [esp+eax*1+0x7b166179],1
  406730:	pop    edi
  406731:	imul   esp,DWORD PTR [ebx+0x25],0x54
  406735:	(bad)  
  406736:	cmp    eax,0x44eacfba
  40673b:	pop    edx
  40673c:	xor    BYTE PTR [eax-0x32],cl
  40673f:	mov    esp,0x15ba3e16
  406744:	pop    ebp
  406745:	aad    0xf8
  406747:	adc    BYTE PTR [edi+0x312fb917],dl
  40674d:	and    BYTE PTR [ebp-0x7aa7b264],dh
  406753:	out    0x3c,al
  406755:	mov    ecx,0x4bf0e0ad
  40675a:	fisttp WORD PTR [eax+edx*1]
  40675d:	scas   al,BYTE PTR es:[edi]
  40675e:	add    BYTE PTR [eax-0x7bf1385a],bl
  406764:	cli    
  406765:	out    dx,eax
  406766:	jecxz  0x4067e6
  406768:	lods   al,BYTE PTR ds:[esi]
  406769:	idiv   DWORD PTR [ecx+0xfebd67e]
  40676f:	jg     0x4067da
  406771:	in     eax,0x5e
  406773:	out    dx,eax
  406774:	pop    ecx
  406775:	push   DWORD PTR [edx+0x3d]
  406778:	mov    ds,WORD PTR [edx-0x1e]
  40677b:	mov    eax,0x799aae0a
  406780:	add    eax,0xf68c7188
  406785:	mov    esi,0x2bbf2a3f
  40678a:	add    eax,0x81a97f0
  40678f:	into   
  406790:	xor    BYTE PTR [ecx+0x66],al
  406793:	leave  
  406794:	pop    eax
  406795:	xchg   edi,eax
  406796:	add    DWORD PTR [esi+0x11],0xffffffe0
  40679a:	lea    esp,[edx-0x1d]
  40679d:	push   ds
  40679e:	call   0x6c28217d
  4067a3:	clc    
  4067a4:	sbb    eax,0xd87d3145
  4067a9:	pushf  
  4067aa:	sbb    edx,DWORD PTR [eax+0x6b2bf528]
  4067b0:	mov    ds,WORD PTR [si-0x3b1c]
  4067b5:	scas   eax,DWORD PTR es:[edi]
  4067b6:	sub    eax,0xfab169a8
  4067bb:	rol    dl,cl
  4067bd:	lds    edi,FWORD PTR [edi-0x7cdae060]
  4067c3:	fnstenv [ecx]
  4067c5:	mov    ebp,0x8575241f
  4067ca:	push   esp
  4067cb:	push   edi
  4067cc:	mov    bh,0x4c
  4067ce:	daa    
  4067cf:	mov    esi,0x5a1c906a
  4067d4:	push   es
  4067d5:	xchg   ecx,eax
  4067d6:	out    dx,al
  4067d7:	(bad)  
  4067d8:	repz inc edi
  4067da:	nop
  4067db:	aad    0x93
  4067dd:	mov    ebp,0xdbdb5ec2
  4067e2:	je     0x40677f
  4067e4:	cmp    BYTE PTR [ebx],dh
  4067e6:	hlt    
  4067e7:	mov    ss,WORD PTR [edi-0x5c]
  4067ea:	mov    bl,0x81
  4067ec:	cdq    
  4067ed:	xchg   BYTE PTR [edi+0xc],al
  4067f0:	push   ds
  4067f1:	cmp    eax,0x6020d247
  4067f6:	xor    BYTE PTR [ecx+eiz*2-0x35f2648d],bl
  4067fd:	mov    al,ds:0xf886758b
  406802:	adc    edi,DWORD PTR [edi+edx*1-0x2c]
  406806:	inc    eax
  406807:	xchg   ebx,eax
  406808:	inc    ebp
  406809:	push   ebp
  40680a:	pop    ebp
  40680b:	and    esi,DWORD PTR [ecx-0x3a]
  40680e:	inc    DWORD PTR [esi+0x4866059f]
  406814:	gs mov ebx,0x4b64f74a
  40681a:	sbb    ecx,DWORD PTR [edx-0x346b656f]
  406820:	mov    ch,0xad
  406822:	and    esi,DWORD PTR [esi-0x6ff81ae8]
  406828:	adc    al,dh
  40682a:	jmp    0x3ff9:0x2ba6fce5
  406831:	add    ah,BYTE PTR [edi]
  406833:	js     0x40680e
  406835:	push   edi
  406836:	mov    esp,0x589a6378
  40683b:	(bad)  
  40683c:	jo     0x406800
  40683e:	bound  esi,QWORD PTR [ebx-0x4]
  406841:	pop    ebp
  406842:	mov    dh,0xb7
  406844:	enter  0xe760,0xb9
  406848:	push   es
  406849:	out    0x2b,al
  40684b:	push   edi
  40684c:	pop    esi
  40684d:	sbb    edi,esp
  40684f:	out    0xc,al
  406851:	in     eax,dx
  406852:	int3   
  406853:	add    BYTE PTR [ebx+0x2d90c391],cl
  406859:	add    BYTE PTR [ecx+0x24],al
  40685c:	(bad)  
  40685d:	cld    
  40685e:	stc    
  40685f:	xchg   ebp,eax
  406860:	sbb    DWORD PTR [eax-0x2982e9e0],eax
  406866:	xor    DWORD PTR [esi],0x6a236387
  40686c:	sub    DWORD PTR [edi],esp
  40686e:	repz hlt 
  406870:	jmp    0xb1c79b10
  406875:	in     al,dx
  406876:	jl     0x406854
  406878:	and    al,0xcd
  40687a:	pop    esp
  40687b:	jmp    0x213382a6
  406880:	push   ecx
  406881:	and    eax,ecx
  406883:	ficom  WORD PTR [esi]
  406885:	or     al,bl
  406887:	mov    dh,0xb1
  406889:	cmp    DWORD PTR [ebx+0x72dd4319],0xea57b8b1
  406893:	or     al,ah
  406895:	sar    BYTE PTR [ebx-0x59340b79],1
  40689b:	in     eax,dx
  40689c:	sbb    eax,0x73bc5847
  4068a1:	add    DWORD PTR [ebp-0x65],0xf9db8033
  4068a8:	in     al,0xe3
  4068aa:	pushf  
  4068ab:	jge    0x406854
  4068ad:	sbb    al,0xfc
  4068af:	jbe    0x4068b5
  4068b1:	and    BYTE PTR [edx+eax*4],ch
  4068b4:	(bad)  
  4068b5:	repz pop es
  4068b7:	push   0xd4cb0a8f
  4068bc:	cmp    BYTE PTR [edx],ch
  4068be:	cmp    esp,0x4945916b
  4068c4:	aaa    
  4068c5:	dec    edi
  4068c6:	outs   dx,BYTE PTR ds:[esi]
  4068c7:	add    cl,BYTE PTR [edx-0x3cb65a08]
  4068cd:	mov    ds:0x8a7acea4,eax
  4068d2:	hlt    
  4068d3:	es pop edx
  4068d5:	sbb    BYTE PTR [esi],al
  4068d7:	xor    al,0xdc
  4068d9:	ss jbe 0x406926
  4068dc:	push   ebx
  4068dd:	jg     0x406959
  4068df:	leave  
  4068e0:	and    ebx,ebp
  4068e2:	mov    ds:0x10720a10,al
  4068e7:	add    eax,0x14d69e44
  4068ec:	outs   dx,BYTE PTR ds:[esi]
  4068ed:	mov    ebx,0x86e6ddc7
  4068f2:	test   DWORD PTR [ebx+0x32f4ec56],edx
  4068f8:	jmp    0x40696f
  4068fa:	loop   0x4068b9
  4068fc:	inc    esp
  4068fd:	shl    dh,cl
  4068ff:	sub    BYTE PTR [edx],0xfd
  406902:	inc    ebx
  406903:	fs test dl,0x2c
  406907:	push   cs
  406908:	sbb    al,0xc6
  40690a:	mov    WORD PTR [ebx],?
  40690c:	add    eax,0x577358e8
  406911:	cmp    dl,BYTE PTR [ecx]
  406913:	clc    
  406914:	xor    BYTE PTR [ecx+0x75],bh
  406917:	push   es
  406918:	adc    eax,0xf0eb29c9
  40691d:	(bad)  
  40691e:	push   esp
  40691f:	mov    esi,0x535ddd26
  406924:	mov    esp,0x79e8b08c
  406929:	cmp    esi,esp
  40692b:	aas    
  40692c:	mov    al,0x11
  40692e:	aas    
  40692f:	mov    ecx,0x8b4e786f
  406934:	hlt    
  406935:	sbb    DWORD PTR [ecx],ebx
  406937:	fsub   st,st(1)
  406939:	and    eax,0x97a1274f
  40693e:	adc    edx,DWORD PTR [ebx]
  406940:	add    BYTE PTR [edx],al
  406942:	inc    esp
  406943:	stos   BYTE PTR es:[edi],al
  406944:	or     al,BYTE PTR [eax]
  406946:	xor    al,0x6d
  406948:	jne    0x406934
  40694a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40694b:	repz pop esi
  40694d:	sbb    al,BYTE PTR [edx-0x7d]
  406950:	push   edx
  406951:	fld    TBYTE PTR [edi+edi*1]
  406954:	push   edi
  406955:	popf   
  406956:	push   esp
  406957:	or     DWORD PTR ds:0xcf259efe,0xf
  40695e:	jmp    0x9b103a8c
  406963:	dec    ebx
  406964:	pop    esp
  406965:	push   ss
  406966:	sar    DWORD PTR [ebp-0xc07314b],cl
  40696c:	sub    bh,ch
  40696e:	inc    esp
  40696f:	sub    DWORD PTR [ecx],edx
  406971:	imul   BYTE PTR [ebp+edx*4-0x7c]
  406975:	mov    bh,0x4d
  406977:	push   ecx
  406978:	icebp  
  406979:	sbb    ebx,DWORD PTR [eax-0x7]
  40697c:	fnstcw WORD PTR [edi-0x1e]
  40697f:	jbe    0x4069c2
  406981:	xchg   esp,eax
  406982:	loopne 0x406924
  406984:	scas   eax,DWORD PTR es:[edi]
  406985:	pop    es
  406986:	jg     0x4069ec
  406988:	xor    eax,0xbb9340b4
  40698d:	in     al,0xb6
  40698f:	xor    BYTE PTR [edi-0x58],al
  406992:	or     edx,esi
  406994:	inc    edx
  406995:	mov    dh,0xe6
  406997:	popa   
  406998:	fimul  DWORD PTR [edi+0x1bb06b57]
  40699e:	cwde   
  40699f:	mov    ch,0x91
  4069a1:	popa   
  4069a2:	imul   edi,DWORD PTR [edx-0x41],0xc5718bc6
  4069a9:	hlt    
  4069aa:	les    ebp,FWORD PTR gs:0x110e10c0
  4069b1:	test   BYTE PTR fs:[edx+0x37],0xf8
  4069b6:	fadd   QWORD PTR [edx-0x2c56c071]
  4069bc:	add    al,0xe8
  4069be:	rcl    DWORD PTR [ecx],cl
  4069c0:	jmp    0x5566:0xc1a247f
  4069c7:	mov    ds:0xfe85920e,eax
  4069cc:	das    
  4069cd:	outs   dx,BYTE PTR ds:[esi]
  4069ce:	jns    0x406990
  4069d0:	scas   al,BYTE PTR es:[edi]
  4069d1:	add    ch,ch
  4069d3:	iret   
  4069d4:	jb     0x406a22
  4069d6:	out    dx,al
  4069d7:	xlat   BYTE PTR ds:[ebx]
  4069d8:	sub    eax,DWORD PTR [edi-0x602e755d]
  4069de:	ins    DWORD PTR es:[edi],dx
  4069df:	sahf   
  4069e0:	pop    eax
  4069e1:	shl    cl,cl
  4069e3:	ror    BYTE PTR [ebx-0x42],1
  4069e6:	lods   eax,DWORD PTR ds:[esi]
  4069e7:	sbb    al,0x56
  4069e9:	les    ebx,FWORD PTR [edx]
  4069eb:	(bad)  
  4069ec:	xlat   BYTE PTR ds:[ebx]
  4069ed:	ficomp WORD PTR [edi+0x3a]
  4069f0:	sub    al,0x65
  4069f2:	xor    DWORD PTR [esi-0x34],0x71754c8a
  4069f9:	pop    edi
  4069fa:	int3   
  4069fb:	and    cl,dh
  4069fd:	and    ecx,DWORD PTR [edi]
  4069ff:	jmp    0xfd1a:0x78721979
  406a06:	sbb    ecx,ebx
  406a08:	dec    edi
  406a09:	ror    DWORD PTR [edx],0xb3
  406a0c:	sbb    esp,DWORD PTR [esi]
  406a0e:	fild   WORD PTR [ebp+0x64c861c9]
  406a14:	and    eax,ecx
  406a16:	repz mov ds:0x92c03427,eax
  406a1c:	or     BYTE PTR [ebp-0x70],dh
  406a1f:	aad    0x34
  406a21:	stc    
  406a22:	jp     0x406a28
  406a24:	xor    bh,0x6c
  406a27:	inc    eax
  406a28:	mov    ah,0xe4
  406a2a:	jno    0x406a5f
  406a2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a2d:	imul   eax,DWORD PTR [edx],0x8aeb457a
  406a33:	push   ss
  406a34:	lock cmp BYTE PTR [esi-0x53],ah
  406a38:	inc    esi
  406a39:	stos   DWORD PTR es:[edi],eax
  406a3a:	ss (bad) 
  406a3c:	aas    
  406a3d:	mov    cl,0x5e
  406a3f:	sub    DWORD PTR [edi+0x40],ecx
  406a42:	pop    edx
  406a43:	js     0x406a66
  406a45:	jae    0x406a13
  406a47:	sub    al,dl
  406a49:	jno    0x406a59
  406a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a4c:	loop   0x406a95
  406a4e:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  406a50:	push   0xf
  406a52:	mov    WORD PTR [edi-0x372850b3],?
  406a58:	cld    
  406a59:	jno    0x406a01
  406a5b:	sub    al,BYTE PTR [esi-0x52bc0aa0]
  406a61:	cmp    eax,0xdbdec74a
  406a66:	and    DWORD PTR [ebp+eax*4+0x17],esp
  406a6a:	je     0x406ae0
  406a6c:	add    bh,dh
  406a6e:	out    dx,eax
  406a6f:	mov    edi,0x50e16817
  406a74:	scas   eax,DWORD PTR es:[edi]
  406a75:	dec    edi
  406a76:	aaa    
  406a77:	aaa    
  406a78:	mov    ah,0xf8
  406a7a:	ror    BYTE PTR [ecx+0x2094b76f],1
  406a80:	dec    eax
  406a82:	adc    BYTE PTR [ecx],ah
  406a84:	ja     0x406a9c
  406a86:	cmp    BYTE PTR [ebx-0x25],al
  406a89:	aaa    
  406a8a:	and    BYTE PTR [ebp+0x42],dh
  406a8d:	retf   
  406a8e:	jmp    0xfff3d3e4
  406a93:	scas   eax,DWORD PTR es:[edi]
  406a94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a95:	xchg   DWORD PTR [eax+0x62],esp
  406a98:	sahf   
  406a99:	aam    0xb2
  406a9b:	jne    0x406a77
  406a9d:	cmp    al,0xc1
  406a9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406aa0:	int3   
  406aa1:	push   ss
  406aa2:	mov    ebp,0xdc26618c
  406aa7:	aam    0x53
  406aa9:	and    al,BYTE PTR [ebx+0x2b584e4c]
  406aaf:	rol    ebp,1
  406ab1:	mov    BYTE PTR [ebx],cl
  406ab3:	dec    esi
  406ab4:	pop    ebp
  406ab5:	das    
  406ab6:	mov    ds:0x54ad2c57,eax
  406abb:	das    
  406abc:	loopne 0x406a75
  406abe:	ret    
  406abf:	or     al,0xf5
  406ac1:	mov    ecx,0xdc006430
  406ac6:	jns    0x406a67
  406ac8:	sbb    BYTE PTR [ecx-0x3ed74881],ah
  406ace:	ficom  DWORD PTR [ecx-0x16]
  406ad1:	inc    esi
  406ad2:	outs   dx,BYTE PTR ds:[esi]
  406ad3:	test   ecx,esp
  406ad5:	sar    DWORD PTR [ebp+0x7cf3f820],cl
  406adb:	jl     0x406a9b
  406add:	and    al,0x7d
  406adf:	call   0x69c3:0xf3a9dfae
  406ae6:	sub    DWORD PTR [esp+ebp*8-0x41],eax
  406aea:	shl    BYTE PTR [ebx],0x13
  406aed:	add    al,0xe1
  406aef:	jmp    0x406aba
  406af1:	mov    bh,0x8c
  406af3:	rol    DWORD PTR [esi],cl
  406af5:	sahf   
  406af6:	(bad)  
  406af7:	(bad)  
  406af9:	aad    0x69
  406afb:	in     eax,0x22
  406afd:	jno    0x406b31
  406aff:	fisubr WORD PTR [ecx]
  406b01:	lods   eax,DWORD PTR ds:[esi]
  406b02:	shr    BYTE PTR [ecx],cl
  406b04:	mov    ebx,0x2ac5a449
  406b09:	adc    edi,0x20ead252
  406b0f:	xchg   edx,eax
  406b10:	shl    BYTE PTR [ecx+0x63],cl
  406b13:	rcr    DWORD PTR [edx],1
  406b15:	ins    DWORD PTR es:[edi],dx
  406b16:	shr    BYTE PTR [esi-0x15c584b5],0xc1
  406b1d:	dec    ebp
  406b1e:	mov    DWORD PTR [esi-0x27b466e2],0x138adb4f
  406b28:	test   DWORD PTR [ebp+ebp*2-0x415817ea],ecx
  406b2f:	test   ecx,esi
  406b31:	lds    esp,FWORD PTR [ecx+0x2f]
  406b34:	les    eax,FWORD PTR [esi+0x10ea8d0e]
  406b3a:	shr    al,1
  406b3c:	xor    ebp,eax
  406b3e:	in     al,dx
  406b3f:	mov    ebp,0x2a1d671b
  406b44:	add    esi,esi
  406b46:	(bad)  
  406b47:	leave  
  406b48:	xchg   ebp,eax
  406b49:	jle    0x406add
  406b4b:	test   al,0x29
  406b4d:	mov    esi,0x2f0df888
  406b52:	aaa    
  406b53:	(bad)  
  406b55:	cli    
  406b56:	mov    bl,0xdd
  406b58:	int3   
  406b59:	fstp   TBYTE PTR [esi]
  406b5b:	inc    ecx
  406b5c:	mov    bx,0x2e1f
  406b60:	(bad)  
  406b61:	call   0x4b54:0x58036eb8
  406b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b69:	outs   dx,BYTE PTR ds:[esi]
  406b6a:	push   cs
  406b6b:	adc    eax,0x9b82265d
  406b70:	gs jmp 0x406b1b
  406b73:	jno    0x406b1a
  406b75:	mov    bh,0x84
  406b77:	leave  
  406b78:	out    dx,al
  406b79:	out    dx,eax
  406b7a:	push   eax
  406b7b:	or     al,0xb0
  406b7d:	rol    BYTE PTR [esi],1
  406b7f:	mov    BYTE PTR [esi],0x17
  406b82:	jp     0x406b7d
  406b84:	jge    0x406b76
  406b86:	loopne 0x406b10
  406b88:	das    
  406b89:	mov    dh,0xd5
  406b8b:	ret    
  406b8c:	cld    
  406b8d:	pop    edi
  406b8e:	sahf   
  406b8f:	mul    DWORD PTR [ebx+0x49d522a9]
  406b95:	adc    esp,edx
  406b97:	mul    BYTE PTR [ebx-0x7d]
  406b9a:	cmp    BYTE PTR [edi+0x6e],cl
  406b9d:	cmp    bh,ah
  406b9f:	adc    dl,BYTE PTR [ecx-0x53]
  406ba2:	in     eax,0xb2
  406ba4:	repz loope 0x406b35
  406ba7:	mov    bl,0x9f
  406ba9:	sub    BYTE PTR [esp+ecx*8+0x1d431ddf],cl
  406bb0:	int3   
  406bb1:	sub    bl,BYTE PTR [ebx-0x6d8ce591]
  406bb7:	pusha  
  406bb8:	pop    edx
  406bb9:	je     0x406b9e
  406bbb:	test   BYTE PTR [edi-0x22],0xd9
  406bbf:	jnp    0x406c35
  406bc1:	jae    0x406b43
  406bc3:	or     al,0x62
  406bc5:	lahf   
  406bc6:	push   es
  406bc7:	inc    edi
  406bc8:	and    bl,BYTE PTR [edi-0x5f]
  406bcb:	jp     0x406c3c
  406bcd:	adc    BYTE PTR [ebp+0x32796ca6],dl
  406bd3:	or     DWORD PTR [eax+ebp*4],0xe6c8d731
  406bda:	xchg   DWORD PTR [esi+0x542e1c63],ecx
  406be0:	jp     0x406bb3
  406be2:	pop    ebp
  406be3:	and    al,0xac
  406be5:	lods   al,BYTE PTR ds:[esi]
  406be6:	in     al,0x69
  406be8:	aad    0xef
  406bea:	push   esi
  406beb:	mov    bh,0xcc
  406bed:	push   edi
  406bee:	stos   BYTE PTR es:[edi],al
  406bef:	div    BYTE PTR cs:[edx+0x3becf8aa]
  406bf6:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  406bf8:	jb     0x406c44
  406bfa:	or     BYTE PTR [esi],0x17
  406bfd:	iret   
  406bfe:	add    al,0xa7
  406c00:	mov    esi,0x402a0f7
  406c05:	add    ebx,edx
  406c07:	xchg   edx,eax
  406c08:	mov    ebp,0x73c8ea8b
  406c0d:	lds    ebp,FWORD PTR [ecx+eiz*1-0x2f82f0b7]
  406c14:	out    0x37,al
  406c16:	lods   eax,DWORD PTR ds:[esi]
  406c17:	(bad)  
  406c18:	in     eax,dx
  406c19:	cwde   
  406c1a:	out    0xb0,eax
  406c1c:	call   0xedb7cea6
  406c21:	dec    BYTE PTR [ebx-0x33]
  406c24:	pop    ecx
  406c25:	xchg   edi,eax
  406c26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c27:	and    ecx,ecx
  406c29:	lods   eax,DWORD PTR ds:[esi]
  406c2a:	mov    edx,0xd26b0a47
  406c2f:	adc    bh,BYTE PTR fs:[ecx]
  406c32:	mov    dl,0xde
  406c34:	scas   eax,DWORD PTR es:[edi]
  406c35:	mov    cl,0x19
  406c37:	or     edx,edx
  406c39:	daa    
  406c3a:	jnp    0x406bf3
  406c3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c3d:	jne    0x406c21
  406c3f:	xchg   ebx,eax
  406c40:	cmp    bl,dh
  406c42:	mov    ecx,0x4cc3beab
  406c47:	cmp    al,cl
  406c49:	ins    BYTE PTR es:[edi],dx
  406c4a:	and    al,0x39
  406c4c:	xor    ebp,edx
  406c4e:	fsubr  QWORD PTR ds:0x90e8345a
  406c54:	sar    BYTE PTR [edx+ebp*4],1
  406c57:	adc    al,0xe4
  406c59:	xchg   ebp,eax
  406c5a:	not    BYTE PTR [ecx-0x1e]
  406c5d:	imul   DWORD PTR [ebx]
  406c5f:	cli    
  406c60:	icebp  
  406c61:	inc    ecx
  406c62:	pop    eax
  406c63:	jle    0x406bfd
  406c65:	addr16 (bad) 
  406c67:	in     eax,dx
  406c68:	mov    ds:0x64fcb8d1,eax
  406c6d:	xor    edi,DWORD PTR [edi-0x6fefe143]
  406c73:	sbb    cl,BYTE PTR [esi-0x20]
  406c76:	xchg   ebx,eax
  406c77:	mov    edi,0x5567b4fe
  406c7c:	sahf   
  406c7d:	mov    esi,0xfed87340
  406c82:	(bad)  
  406c83:	mov    ah,0x24
  406c85:	pushf  
  406c86:	mov    dh,0x62
  406c88:	mov    bh,0x2f
  406c8a:	nop
  406c8b:	sbb    esp,DWORD PTR ds:0xd119b7f5
  406c91:	sub    BYTE PTR [ecx+0x34],dh
  406c94:	jl     0x406cb0
  406c96:	cmp    eax,0xbdef485d
  406c9b:	inc    edx
  406c9c:	mov    esp,ecx
  406c9e:	ss adc eax,0xfd0c658a
  406ca4:	pusha  
  406ca5:	popf   
  406ca6:	(bad)  
  406ca7:	inc    eax
  406ca8:	and    al,BYTE PTR [eax+0x11a34b05]
  406cae:	push   ebx
  406caf:	fninit 
  406cb1:	fwait
  406cb2:	pop    ebp
  406cb3:	or     eax,0x989c3b0b
  406cb8:	fs dec edi
  406cba:	pop    ecx
  406cbb:	mov    dl,0x4f
  406cbd:	or     DWORD PTR [ebp+0x3245b00e],0x25
  406cc4:	pop    DWORD PTR [edi-0x61]
  406cc7:	mov    ds:0xbbaffe9a,al
  406ccc:	nop
  406ccd:	repz rcl DWORD PTR ds:0x238abfe,0xb7
  406cd5:	js     0x406ce7
  406cd7:	jp     0x406c69
  406cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cda:	je     0x406cbc
  406cdc:	adc    al,0x85
  406cde:	arpl   WORD PTR [eax],di
  406ce0:	out    0x6d,eax
  406ce2:	shl    BYTE PTR [ecx+0x7e],cl
  406ce5:	in     eax,0x64
  406ce7:	push   eax
  406ce8:	push   ss
  406ce9:	stos   DWORD PTR es:[edi],eax
  406cea:	dec    esp
  406ceb:	mov    edi,0xc2c2402e
  406cf0:	xchg   ecx,eax
  406cf1:	(bad)  
  406cf2:	sti    
  406cf3:	lahf   
  406cf4:	jbe    0x406cf2
  406cf6:	jae    0x406c91
  406cf8:	stos   BYTE PTR es:[edi],al
  406cf9:	push   cs
  406cfa:	popa   
  406cfb:	xchg   esi,eax
  406cfc:	inc    ecx
  406cfd:	ds scas eax,DWORD PTR es:[edi]
  406cff:	mov    ds:0x59427492,al
  406d04:	mov    ?,WORD PTR [ebp-0x1f]
  406d07:	push   ebx
  406d08:	jo     0x406cce
  406d0a:	lahf   
  406d0b:	sbb    ebp,ecx
  406d0d:	cwde   
  406d0e:	addr16 rcr esp,cl
  406d11:	jns    0x406ce7
  406d13:	and    ecx,DWORD PTR [ecx-0x5d]
  406d16:	in     al,dx
  406d17:	and    eax,0x9af315be
  406d1c:	je     0x406d5a
  406d1e:	adc    eax,0xdf534579
  406d23:	mov    esi,0x929d8f8d
  406d28:	pop    ebx
  406d29:	xchg   ebp,eax
  406d2a:	or     DWORD PTR [eiz*1+0x7f14a781],0xd623d066
  406d35:	test   BYTE PTR [edx],ch
  406d37:	mov    bh,0x6f
  406d39:	add    ecx,0xffffffb8
  406d3c:	popa   
  406d3d:	sbb    BYTE PTR [edx-0xc],bh
  406d40:	ret    0xc701
  406d43:	or     ecx,DWORD PTR [ecx+0x42a9025d]
  406d49:	das    
  406d4a:	fmul   DWORD PTR [eax-0x1bd11f47]
  406d50:	shl    BYTE PTR ds:0x617ced38,0xd9
  406d57:	sbb    DWORD PTR [esi+0x5f],0xf07ba45c
  406d5e:	inc    esp
  406d5f:	js     0x406d59
  406d61:	mov    ebp,0x9a4f044f
  406d66:	daa    
  406d67:	jmp    0xee19:0x9960e7b3
  406d6e:	jp     0x406cfc
  406d70:	mov    dh,al
  406d72:	and    BYTE PTR [edx+0x21bb2043],0x41
  406d79:	out    0x7c,eax
  406d7b:	mov    esp,0x8fb60c9f
  406d80:	push   ebp
  406d81:	leave  
  406d82:	lahf   
  406d83:	pop    esi
  406d84:	(bad)  
  406d85:	pop    esi
  406d86:	js     0x406e04
  406d88:	test   edi,esi
  406d8a:	push   ss
  406d8b:	aad    0x63
  406d8d:	jp     0x406db5
  406d8f:	call   FWORD PTR [edx+0x44]
  406d92:	addr16 mov ds:0xc2b3,al
  406d96:	xchg   esp,eax
  406d97:	mov    bl,0xde
  406d99:	ror    BYTE PTR fs:[edi+eax*4-0x13f2fe3e],cl
  406da1:	popa   
  406da2:	mov    esi,0xabed6759
  406da7:	ror    edx,1
  406da9:	mov    esi,0x904a556d
  406dae:	xor    eax,ebx
  406db0:	xchg   esi,eax
  406db1:	push   ecx
  406db2:	mov    BYTE PTR [ecx+0x16],bh
  406db5:	in     eax,0x88
  406db7:	mov    esi,0x8ecd69e1
  406dbc:	ins    DWORD PTR es:[edi],dx
  406dbd:	sbb    BYTE PTR [edx+0x53e99f6],al
  406dc3:	cmp    DWORD PTR [esi-0x49],edx
  406dc6:	mov    al,0x7a
  406dc8:	sti    
  406dc9:	push   ds
  406dca:	lahf   
  406dcb:	pop    ebp
  406dcc:	and    al,0xa0
  406dce:	loop   0x406e1c
  406dd0:	icebp  
  406dd1:	in     eax,dx
  406dd2:	cwde   
  406dd3:	or     ah,cl
  406dd5:	xor    eax,0xe9c4c638
  406dda:	(bad)  
  406ddc:	sbb    esi,esp
  406dde:	xor    eax,0xc9136d04
  406de3:	aaa    
  406de4:	mov    DWORD PTR [edx-0xf],esi
  406de7:	hlt    
  406de8:	xchg   ebx,eax
  406de9:	adc    BYTE PTR ds:0xb982c55b,al
  406def:	or     esp,DWORD PTR [ecx-0x53a4907c]
  406df5:	push   esi
  406df6:	dec    esp
  406df7:	sub    al,0x7f
  406df9:	or     edx,DWORD PTR [ebp-0x1ea72f21]
  406dff:	mov    eax,0xad9299f4
  406e04:	pop    ds
  406e05:	frstor [ebx]
  406e07:	or     edi,DWORD PTR [edi+0x1a]
  406e0a:	jmp    0x406e0a
  406e0c:	(bad)  
  406e0d:	cmp    cl,al
  406e0f:	pop    ss
  406e10:	call   0x8784:0x4835ff7c
  406e17:	js     0x406e72
  406e19:	xchg   esp,eax
  406e1a:	cmp    DWORD PTR [ebx-0x665e9c1a],ecx
  406e20:	jle    0x406e22
  406e22:	jmp    0xd3ea4151
  406e27:	addr16 sub eax,0xa797e7e5
  406e2d:	lock daa 
  406e2f:	stos   DWORD PTR es:[edi],eax
  406e30:	xchg   ecx,eax
  406e31:	pop    esi
  406e32:	in     eax,dx
  406e33:	jno    0x406e7f
  406e35:	or     al,0x48
  406e37:	jmp    0x406e54
  406e39:	loopne 0x406ea7
  406e3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e3c:	mov    al,0xc8
  406e3e:	pop    ss
  406e3f:	clc    
  406e40:	repz aas 
  406e42:	out    dx,al
  406e43:	adc    BYTE PTR [ebx+0xce6705d],ch
  406e49:	cmp    al,0x7e
  406e4b:	xchg   edx,eax
  406e4c:	mov    edx,0x3e153d24
  406e51:	pop    es
  406e52:	push   ebx
  406e53:	cld    
  406e54:	fcomp  DWORD PTR [ebp+eax*8+0x7]
  406e58:	adc    al,0xf3
  406e5a:	push   eax
  406e5b:	inc    ebp
  406e5c:	mov    esi,0xdf266772
  406e61:	sbb    dl,BYTE PTR [ebx]
  406e63:	mov    al,0x47
  406e65:	les    ebx,FWORD PTR [edx-0x5a9896d8]
  406e6b:	add    eax,0x8bdb25dd
  406e70:	loop   0x406e94
  406e72:	add    DWORD PTR [ebx+0x39cb1f77],edi
  406e78:	cmp    cl,BYTE PTR [edx+0x76]
  406e7b:	js     0x406e30
  406e7d:	sub    al,0xaa
  406e7f:	mov    BYTE PTR [ecx],cl
  406e81:	mov    dl,BYTE PTR [esi+0x52]
  406e84:	repz cmc 
  406e86:	sub    eax,0x31d2530e
  406e8b:	fwait
  406e8c:	dec    esp
  406e8d:	xchg   ebx,eax
  406e8e:	js     0x406e66
  406e90:	adc    eax,0xb7617ab2
  406e95:	adc    al,0x55
  406e97:	into   
  406e98:	cs dec edx
  406e9a:	test   BYTE PTR [edx+0x5b5d41a4],al
  406ea0:	rcl    DWORD PTR [edx],0xb9
  406ea3:	out    dx,eax
  406ea4:	(bad)  
  406ea5:	inc    esi
  406ea6:	mov    eax,0x6661e193
  406eab:	aam    0x58
  406ead:	loope  0x406f18
  406eaf:	xchg   ebx,eax
  406eb0:	or     eax,0x56784b41
  406eb5:	xchg   esi,eax
  406eb6:	in     al,0x18
  406eb8:	pop    edx
  406eb9:	and    bh,0x8
  406ebc:	mov    cl,0xce
  406ebe:	push   ecx
  406ebf:	mov    bl,0xa4
  406ec1:	inc    esi
  406ec2:	push   ss
  406ec3:	hlt    
  406ec4:	test   eax,0xf44673d5
  406ec9:	mov    esi,0xc124b597
  406ece:	cmp    ebx,DWORD PTR [ebp-0x7c]
  406ed1:	jns    0x406ed1
  406ed3:	out    dx,al
  406ed4:	push   0x50c0a972
  406ed9:	in     eax,0xfe
  406edb:	push   0xffffffc7
  406edd:	(bad)  
  406edf:	mov    eax,ds:0xbea44e50
  406ee4:	jmp    0xd0b7a963
  406ee9:	jne    0x406ea1
  406eeb:	ds inc ebp
  406eed:	daa    
  406eee:	out    0x5b,al
  406ef0:	add    al,0xb
  406ef2:	sti    
  406ef3:	mov    ch,0x59
  406ef5:	out    dx,eax
  406ef6:	retf   0xb627
  406ef9:	loop   0x406ee3
  406efb:	imul   ecx,DWORD PTR [esi-0x65],0xfffffff6
  406eff:	mov    WORD PTR [ebp+0x68],cs
  406f02:	dec    ebp
  406f03:	mov    al,BYTE PTR [esi-0x3aaeef8e]
  406f09:	pop    ebx
  406f0a:	imul   ecx,DWORD PTR [edx],0x64
  406f0d:	daa    
  406f0e:	add    edi,DWORD PTR [edi-0xbd0b967]
  406f14:	sbb    BYTE PTR [ebp-0x15e85953],ah
  406f1a:	popf   
  406f1b:	jns    0x406ee6
  406f1d:	lock fidivr DWORD PTR [ebp-0x24]
  406f21:	sub    bl,BYTE PTR [ebx-0x5d]
  406f24:	popa   
  406f25:	dec    ebp
  406f26:	and    eax,0x41a7d48
  406f2b:	sub    BYTE PTR [edi],ah
  406f2d:	pop    edx
  406f2e:	pop    ebx
  406f2f:	repnz mov cl,0xd4
  406f32:	cmp    bl,al
  406f34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f35:	stc    
  406f36:	movq   mm0,QWORD PTR [edi]
  406f39:	mov    ebx,0x8abde6a7
  406f3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f3f:	int    0x59
  406f41:	shr    BYTE PTR [bx+di+0xd42],cl
  406f46:	popf   
  406f47:	mov    esp,0x636b27e3
  406f4c:	lods   eax,DWORD PTR ds:[esi]
  406f4d:	xor    DWORD PTR [eax+0x14217271],ebp
  406f53:	ds sub al,0xa2
  406f56:	shl    BYTE PTR [ebx+0x2c],cl
  406f59:	mov    ebx,0xd48d85b7
  406f5e:	test   eax,0xb3bd55df
  406f63:	sub    eax,0x9594b08c
  406f68:	push   edx
  406f69:	mov    cl,0x25
  406f6b:	xchg   edi,eax
  406f6c:	bound  edi,QWORD PTR [esi]
  406f6e:	hlt    
  406f6f:	cmp    DWORD PTR [esi-0x5e5e2f7e],esi
  406f75:	jp     0x406efd
  406f77:	add    esi,edx
  406f79:	push   esi
  406f7a:	sub    esi,edx
  406f7c:	scas   eax,DWORD PTR es:[edi]
  406f7d:	stos   DWORD PTR es:[edi],eax
  406f7e:	fwait
  406f7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f80:	out    dx,ax
  406f82:	clc    
  406f83:	fidiv  DWORD PTR [edi-0x75]
  406f86:	mov    ecx,0x19a76e1b
  406f8b:	mov    cl,0xbc
  406f8d:	iret   
  406f8e:	dec    ebx
  406f8f:	and    DWORD PTR [esi],ecx
  406f91:	cmp    edi,ecx
  406f93:	cmc    
  406f94:	loope  0x406fcf
  406f96:	jnp    0x406f8d
  406f98:	mov    al,ds:0x5aa3e207
  406f9d:	mov    ds:0x30a6c3b0,eax
  406fa2:	mov    ds:0x6b8294da,eax
  406fa7:	jl     0x406f4f
  406fa9:	addr16 cli 
  406fab:	sub    al,0x4f
  406fad:	or     ecx,edx
  406faf:	sub    al,0x96
  406fb1:	in     eax,0x3d
  406fb3:	gs inc ebp
  406fb5:	inc    esi
  406fb6:	jnp    0xce30d19a
  406fbc:	jo     0x407004
  406fbe:	sbb    BYTE PTR [eax-0x649740fc],ch
  406fc4:	mov    esp,0xaef1a1f7
  406fc9:	mov    ah,0x8c
  406fcb:	xor    al,0xf3
  406fcd:	sub    BYTE PTR [edi-0x602030db],cl
  406fd3:	sub    BYTE PTR [eax],bh
  406fd5:	mov    ds:0x5a7150d5,eax
  406fda:	sti    
  406fdb:	clc    
  406fdc:	fadd   DWORD PTR [ebx]
  406fde:	push   es
  406fdf:	push   es
  406fe0:	mov    al,ds:0xb9d59701
  406fe5:	stos   DWORD PTR es:[edi],eax
  406fe6:	inc    eax
  406fe7:	clc    
  406fe8:	aad    0x27
  406fea:	cli    
  406feb:	aad    0xf8
  406fed:	and    edi,DWORD PTR ds:0x604fc2ce
  406ff3:	sbb    bl,al
  406ff5:	(bad)  
  406ff6:	sbb    DWORD PTR [esi-0xeae42b5],edi
  406ffc:	outs   dx,BYTE PTR ds:[esi]
  406ffd:	(bad)  
  406fff:	inc    edi
  407000:	add    DWORD PTR [esi+0x1aebb2ee],0x7b
  407007:	sub    edi,DWORD PTR [edi*4+0x1ab2a7ef]
  40700e:	mov    cl,0x36
  407010:	dec    esp
  407011:	mov    dl,0x0
  407013:	mov    gs,ebx
  407015:	mov    WORD PTR [ebx-0x6452245b],ss
  40701b:	push   es
  40701c:	stc    
  40701d:	jae    0x407035
  40701f:	jae    0x406fca
  407021:	mov    cl,0xf9
  407023:	dec    edi
  407024:	mov    ebp,0x53235ce6
  407029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40702a:	sahf   
  40702b:	sbb    bh,bl
  40702d:	aam    0x7c
  40702f:	push   ds
  407030:	rcl    DWORD PTR [edi],cl
  407032:	ficom  DWORD PTR [ebp-0x47]
  407035:	clc    
  407036:	ins    BYTE PTR es:[edi],dx
  407037:	or     eax,0xd0b5f4cc
  40703c:	mov    BYTE PTR [eax+0x788c6fe1],dl
  407042:	lock mov al,cs:0xcab4a830
  407049:	xchg   ecx,eax
  40704a:	lahf   
  40704b:	leave  
  40704c:	push   ebp
  40704d:	cmp    DWORD PTR ds:0xfdf55430,ebp
  407053:	sbb    esp,DWORD PTR [esi]
  407055:	(bad)  
  407056:	rol    DWORD PTR [ecx-0x5e62c7f3],cl
  40705c:	outs   dx,DWORD PTR ds:[esi]
  40705d:	test   DWORD PTR [esi+0x42],ebx
  407060:	dec    esi
  407061:	push   eax
  407062:	loope  0x407005
  407064:	push   0xd0831db7
  407069:	mov    ch,0x35
  40706b:	pop    esi
  40706c:	xchg   esi,eax
  40706d:	jp     0x4070ca
  40706f:	shl    BYTE PTR [ebx-0x50e3194c],cl
  407075:	enter  0x6158,0xab
  407079:	xor    al,BYTE PTR [eax-0x11]
  40707c:	adc    BYTE PTR [eax-0x43],dl
  40707f:	cld    
  407080:	stos   BYTE PTR es:[edi],al
  407081:	sub    DWORD PTR [eax+0x17e34a57],esp
  407087:	xchg   BYTE PTR [ebx+0x2],ah
  40708a:	lods   al,BYTE PTR ds:[esi]
  40708b:	add    BYTE PTR [edx],dh
  40708d:	cmp    eax,DWORD PTR [eax+0x3f095126]
  407093:	test   eax,0x6d525adf
  407098:	retf   
  407099:	shr    al,cl
  40709b:	pop    edx
  40709c:	ds icebp 
  40709e:	xchg   edx,eax
  40709f:	xchg   BYTE PTR [eax],ch
  4070a1:	sub    eax,0xd6b9e2c5
  4070a6:	sahf   
  4070a7:	pop    esi
  4070a8:	retf   
  4070a9:	sub    al,0xe0
  4070ab:	rcl    BYTE PTR [eax+0xf8d2aa6],0xd7
  4070b2:	pop    esi
  4070b3:	mov    ds:0xa4404f20,eax
  4070b8:	mov    bh,0x99
  4070ba:	mov    edi,db4
  4070bd:	xor    al,0x99
  4070bf:	enter  0x9018,0xde
  4070c3:	or     BYTE PTR [ecx],0xb2
  4070c6:	lds    esi,FWORD PTR [ebx+0x3ea5e977]
  4070cc:	mov    BYTE PTR [esi-0x6f31cb14],cl
  4070d2:	sub    dh,bh
  4070d4:	aas    
  4070d5:	xor    DWORD PTR [eax-0x30],0x44
  4070d9:	in     eax,dx
  4070da:	cli    
  4070db:	cmp    al,0xbd
  4070dd:	test   eax,0x2b8873ee
  4070e2:	sar    DWORD PTR [ebp+0x54339d78],cl
  4070e8:	sub    bl,bh
  4070ea:	bound  ecx,QWORD PTR ds:0x49365978
  4070f0:	mov    ?,WORD PTR [eax+ebp*8+0x18]
  4070f4:	add    BYTE PTR [edx],al
  4070f6:	popa   
  4070f7:	sbb    DWORD PTR [ebp-0x7b6485bb],ebx
  4070fd:	mov    eax,0xb570a0e8
  407102:	jmp    0xd799c0ee
  407107:	inc    ecx
  407108:	mov    eax,ds:0xd6afc17c
  40710d:	jns    0x4070c7
  40710f:	ins    DWORD PTR es:[edi],dx
  407110:	inc    esi
  407111:	sub    edi,DWORD PTR [ecx+0x39]
  407114:	or     DWORD PTR [ecx],0x58ffa831
  40711a:	cmp    DWORD PTR ds:0x6bd4ef77,ecx
  407120:	lods   al,BYTE PTR ds:[esi]
  407121:	pop    edi
  407122:	mov    cl,BYTE PTR [edi+0x26de7059]
  407128:	pop    edx
  407129:	xor    edx,DWORD PTR [esi-0x21111102]
  40712f:	shl    BYTE PTR [ebp-0x20],cl
  407132:	or     edx,ecx
  407134:	dec    eax
  407135:	pop    ebp
  407136:	aam    0x9d
  407138:	mov    bl,0x4
  40713a:	sub    bh,BYTE PTR [ebx+0x78eeb0e]
  407140:	push   ecx
  407141:	stc    
  407142:	push   cs
  407143:	into   
  407144:	ds popf 
  407146:	stos   BYTE PTR es:[edi],al
  407147:	xchg   edi,eax
  407148:	or     al,0x64
  40714a:	mov    BYTE PTR [esi],al
  40714c:	push   cs
  40714d:	imul   ecx,DWORD PTR es:[ebx-0x5232f581],0xffffffa5
  407155:	add    dl,BYTE PTR [ecx-0x5916f88e]
  40715b:	rcr    ecx,0x8
  40715e:	mov    ebp,0xfe3e01f6
  407163:	dec    ebp
  407164:	pusha  
  407165:	mov    ah,0x52
  407167:	out    dx,eax
  407168:	daa    
  407169:	push   0x4b73794c
  40716e:	(bad)  
  40716f:	aad    0xe1
  407171:	je     0x4070f3
  407173:	adc    BYTE PTR [edi],al
  407175:	add    BYTE PTR [edx-0x4c],ch
  407178:	test   DWORD PTR [edi-0x33],esp
  40717b:	shr    BYTE PTR [ebx+eiz*4+0xc],0xb1
  407180:	jp     0x4071e5
  407182:	mov    ds:0xab6c5bda,al
  407187:	jo     0x407124
  407189:	mov    dh,BYTE PTR [edi-0x4a]
  40718c:	and    eax,0xffcc070e
  407191:	pop    eax
  407192:	mov    ds:0x991aae6f,eax
  407197:	or     ch,BYTE PTR [edx-0x2b]
  40719a:	loope  0x40715c
  40719c:	inc    esp
  40719d:	pop    edi
  40719e:	xchg   esp,eax
  40719f:	jns    0x407171
  4071a1:	sbb    BYTE PTR [eax-0x63],al
  4071a4:	or     eax,0xfef14c88
  4071a9:	pop    ebp
  4071aa:	aad    0xb2
  4071ac:	xchg   ebx,eax
  4071ad:	(bad)  
  4071ae:	out    dx,eax
  4071af:	mov    ch,BYTE PTR [edx-0x60]
  4071b2:	jmp    0xcc9cbd06
  4071b7:	out    0xfd,eax
  4071b9:	mov    ch,0xf4
  4071bb:	pop    ebp
  4071bc:	fidivr WORD PTR [eax+edx*2]
  4071bf:	and    ah,BYTE PTR [ecx]
  4071c1:	ds or  dh,cl
  4071c4:	jg     0x4071da
  4071c6:	dec    edi
  4071c7:	outs   dx,BYTE PTR ds:[esi]
  4071c8:	int3   
  4071c9:	sbb    bl,bh
  4071cb:	aaa    
  4071cc:	dec    eax
  4071cd:	cmc    
  4071ce:	jbe    0x407156
  4071d0:	out    0x92,eax
  4071d2:	xchg   edi,eax
  4071d3:	loop   0x40723c
  4071d5:	call   0x8321:0x7399229f
  4071dc:	fbstp  TBYTE PTR [edx-0xad38fde]
  4071e2:	pop    eax
  4071e3:	jb     0x407176
  4071e5:	or     eax,0x93724158
  4071ea:	push   edx
  4071eb:	inc    esi
  4071ec:	iret   
  4071ed:	out    0xa,al
  4071ef:	adc    eax,0x6c262180
  4071f4:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071f6:	sbb    esp,esp
  4071f8:	ins    DWORD PTR es:[edi],dx
  4071f9:	test   DWORD PTR [esi+0x23597f9b],edi
  4071ff:	cld    
  407200:	imul   edx,DWORD PTR [ebx],0x5
  407203:	mov    dl,0x58
  407205:	out    dx,eax
  407206:	inc    ebp
  407207:	mov    dl,0x21
  407209:	outs   dx,DWORD PTR ds:[esi]
  40720a:	mov    eax,ds:0xde9a6c61
  40720f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407210:	mov    esp,0xb147d07f
  407215:	ins    DWORD PTR es:[edi],dx
  407216:	lea    ebp,[esi+0x76102a91]
  40721c:	and    ah,BYTE PTR [ebx-0x2b03b78d]
  407222:	aas    
  407223:	ds jg  0x40728b
  407226:	xor    al,al
  407228:	adc    al,0x2
  40722a:	int    0xfc
  40722c:	cld    
  40722d:	adc    DWORD PTR [edx+0x1f],ebp
  407230:	sbb    DWORD PTR [esi+0x327ff1cc],esp
  407236:	pusha  
  407237:	(bad)
  40723a:	fbld   TBYTE PTR [esi-0x5a8bed9a]
  407240:	add    sp,WORD PTR [edi-0x6f]
  407244:	jge    0x4072b9
  407246:	push   ebp
  407247:	adc    BYTE PTR [ecx-0x5784fa34],0x30
  40724e:	mov    edi,0xc920ef3e
  407253:	xor    al,0xdf
  407255:	jbe    0x407293
  407257:	and    eax,0x93f87e65
  40725c:	lock jmp 0x116e:0xd37ea8ac
  407264:	sbb    esi,DWORD PTR [esi-0x15848b24]
  40726a:	jmp    0xc9f8f75e
  40726f:	dec    eax
  407270:	call   0xe760:0x1cad2791
  407277:	push   ss
  407278:	cwde   
  407279:	nop
  40727a:	sbb    DWORD PTR [edi-0x39],ecx
  40727d:	dec    esi
  40727e:	fadd   QWORD PTR [esi]
  407280:	aad    0xe
  407282:	popa   
  407283:	and    BYTE PTR [eax-0x51],ah
  407286:	and    al,0x96
  407288:	sub    BYTE PTR [ecx+0x5373d194],bh
  40728e:	push   0x5747835
  407293:	ffree  st(5)
  407295:	adc    al,0xe8
  407297:	scas   eax,DWORD PTR es:[edi]
  407298:	leave  
  407299:	out    0xee,al
  40729b:	ror    BYTE PTR [eax+0xa0b9b0d],cl
  4072a1:	add    ebx,DWORD PTR [ecx-0xcc0297d]
  4072a7:	push   edx
  4072a8:	aam    0x58
  4072aa:	dec    DWORD PTR ds:0x77f359f5
  4072b0:	add    bh,ah
  4072b2:	out    0xbd,eax
  4072b4:	jb     0x4072a1
  4072b6:	add    ebp,DWORD PTR [edi]
  4072b8:	cmp    al,0xcb
  4072ba:	inc    edi
  4072bc:	add    BYTE PTR [edi-0x66],0xf5
  4072c0:	inc    ecx
  4072c1:	mov    cl,0xe
  4072c3:	add    eax,0xf80f3d77
  4072c8:	xchg   esp,eax
  4072c9:	sub    bl,dl
  4072cb:	xor    DWORD PTR [edi+eiz*4-0x58],ebp
  4072cf:	dec    ebx
  4072d0:	push   es
  4072d1:	push   eax
  4072d2:	imul   esp,DWORD PTR [si+0x166],0x1cffd504
  4072db:	hlt    
  4072dc:	jne    0x40729e
  4072de:	dec    esi
  4072df:	js     0x40733b
  4072e1:	xchg   esi,eax
  4072e2:	mov    dl,0xd5
  4072e4:	mov    ch,0x67
  4072e6:	fdiv   QWORD PTR [edi-0x31e214b3]
  4072ec:	dec    ebp
  4072ed:	xor    BYTE PTR [eax],al
  4072ef:	sbb    DWORD PTR [ebx],ecx
  4072f1:	or     al,0xe9
  4072f3:	add    ebp,DWORD PTR [edx]
  4072f5:	push   ecx
  4072f6:	pop    ebx
  4072f7:	mov    al,0x14
  4072f9:	push   ss
  4072fa:	stos   DWORD PTR es:[edi],eax
  4072fb:	add    eax,0x1e346c82
  407300:	(bad)  
  407301:	popa   
  407302:	hlt    
  407303:	hlt    
  407304:	mov    ah,0xb7
  407306:	lock aaa 
  407308:	pop    es
  407309:	ret    0x22a5
  40730c:	xchg   esp,eax
  40730d:	pop    edi
  40730e:	lods   al,BYTE PTR ds:[esi]
  40730f:	test   ah,ch
  407311:	mov    bl,0xa8
  407313:	mov    ch,0x4a
  407315:	xor    al,dl
  407317:	inc    ebp
  407318:	fadd   DWORD PTR [ebx-0x7b]
  40731b:	in     al,0xc
  40731d:	jo     0x4072da
  40731f:	xlat   BYTE PTR ds:[ebx]
  407320:	inc    ebp
  407321:	push   ecx
  407322:	pop    esp
  407323:	add    esp,DWORD PTR [edx]
  407325:	rcr    DWORD PTR [ebx],0xf1
  407328:	push   es
  407329:	imul   edx,DWORD PTR [eax],0x6c38f7e9
  40732f:	push   esi
  407330:	adc    ebp,DWORD PTR [ebx+ebp*2-0x28]
  407334:	sbb    DWORD PTR [eax],edx
  407336:	hlt    
  407337:	add    eax,0xbe9d75a7
  40733c:	jecxz  0x407375
  40733e:	loopne 0x4073be
  407340:	push   esp
  407341:	in     al,0xdc
  407343:	add    dl,dh
  407345:	mov    esi,0x3fd4f398
  40734a:	in     al,0x3f
  40734c:	out    0xe3,al
  40734e:	and    edx,DWORD PTR [edx-0x66f3c4b1]
  407354:	pop    ds
  407355:	dec    esi
  407356:	pop    ebp
  407357:	ins    BYTE PTR es:[edi],dx
  407358:	jmp    0x94918c7c
  40735d:	sahf   
  40735e:	inc    edx
  40735f:	(bad)  
  407360:	imul   BYTE PTR [ecx+0x5a7bb094]
  407366:	adc    DWORD PTR ds:0x40113b2d,eax
  40736c:	add    DWORD PTR [esi-0x80],edi
  40736f:	mov    bl,0x74
  407371:	add    BYTE PTR [ebp+0x29],ah
  407374:	jbe    0x407343
  407376:	push   edi
  407377:	scas   eax,DWORD PTR es:[edi]
  407378:	push   0xffffffab
  40737a:	retf   0xadb2
  40737d:	rol    bl,cl
  40737f:	loop   0x4073c4
  407381:	setae  BYTE PTR [eax-0xe]
  407385:	xor    esp,esp
  407387:	add    ecx,edx
  407389:	and    BYTE PTR [ebp-0x50],cl
  40738c:	pop    ecx
  40738d:	push   edx
  40738e:	out    0xe2,al
  407390:	(bad)  
  407391:	and    al,0x9e
  407393:	pop    ss
  407394:	sub    eax,0x7f0fa279
  407399:	inc    ebp
  40739a:	retf   
  40739b:	push   ebp
  40739c:	into   
  40739d:	mov    ah,BYTE PTR ss:[ebp+0x4af59296]
  4073a4:	cld    
  4073a5:	test   bh,dh
  4073a7:	add    DWORD PTR [esi],edi
  4073a9:	js     0x40734c
  4073ab:	mov    bh,bl
  4073ad:	sub    BYTE PTR [ecx],al
  4073af:	ss xchg edx,eax
  4073b1:	ficomp WORD PTR [ebp-0x355e0fbe]
  4073b7:	inc    edi
  4073b8:	popf   
  4073b9:	cdq    
  4073ba:	bound  edx,QWORD PTR [ecx]
  4073bc:	repz inc esp
  4073be:	mov    edi,0xfb47c06d
  4073c3:	arpl   WORD PTR [esi+0x5f],cx
  4073c6:	aam    0xd7
  4073c8:	jno    0x4073ab
  4073ca:	ret    0xa9b5
  4073cd:	das    
  4073ce:	pusha  
  4073cf:	pop    eax
  4073d0:	and    edi,DWORD PTR [esi+eax*4+0x5cd4d08c]
  4073d7:	xchg   ebx,eax
  4073d8:	std    
  4073d9:	mov    eax,0x26e50970
  4073de:	push   eax
  4073df:	sbb    bh,ah
  4073e1:	jb     0x4073ff
  4073e3:	cli    
  4073e4:	retf   
  4073e5:	test   BYTE PTR [edx+ebx*8-0xb],ah
  4073e9:	(bad)
  4073ed:	(bad)  
  4073ee:	mov    ds:0x6dc28ea8,eax
  4073f3:	push   eax
  4073f4:	stos   BYTE PTR es:[edi],al
  4073f5:	shl    DWORD PTR ds:0x1c33927a,1
  4073fb:	pop    DWORD PTR [eax]
  4073fd:	adc    DWORD PTR [edi+0xe66f4e2],edx
  407403:	cmp    DWORD PTR [ebp+0x34],edi
  407406:	frndint 
  407408:	ins    DWORD PTR es:[edi],dx
  407409:	dec    edi
  40740a:	push   0x2f
  40740c:	xchg   ebp,eax
  40740d:	rcr    BYTE PTR [edx-0x28],cl
  407410:	mov    edx,0xc28c77a3
  407415:	xor    al,0x77
  407417:	cwde   
  407418:	jmp    0x40740b
  40741a:	jmp    FWORD PTR [ebp-0x48]
  40741d:	sbb    DWORD PTR [ecx],eax
  40741f:	ins    BYTE PTR es:[edi],dx
  407420:	js     0x40743a
  407422:	and    eax,0xf31d12e5
  407427:	pop    esi
  407428:	div    BYTE PTR [ecx+edi*2]
  40742b:	cs push 0x545df422
  407431:	lock xor dh,BYTE PTR [ebp-0x62506c05]
  407438:	jmp    0x407467
  40743a:	inc    edi
  40743b:	lds    eax,FWORD PTR [ebp-0x51]
  40743e:	and    eax,0xd887bc0c
  407443:	ins    BYTE PTR es:[edi],dx
  407444:	retf   
  407445:	and    DWORD PTR [ebp+0x30],edi
  407448:	inc    ebx
  407449:	retf   0xfdb7
  40744c:	test   DWORD PTR [ebp-0x26],ebp
  40744f:	jne    0x407495
  407451:	sub    al,0x5b
  407453:	mov    edi,0xf49eaf41
  407458:	jmp    DWORD PTR [ebx+0x4c72be8f]
  40745e:	loop   0x4074c7
  407460:	cmp    al,0xe0
  407462:	or     al,0x9f
  407464:	pop    edx
  407465:	jge    0x4073fb
  407467:	(bad)  
  407468:	mov    edx,0x1226afec
  40746d:	cmp    al,0x81
  40746f:	leave  
  407470:	add    al,BYTE PTR [ecx-0x3264fdac]
  407476:	in     al,0x1a
  407478:	sbb    eax,0xc39c19fa
  40747d:	cdq    
  40747e:	mov    al,0x2d
  407480:	outs   dx,DWORD PTR ds:[esi]
  407481:	jmp    0x4074b7
  407483:	pop    esi
  407484:	js     0x4074a0
  407486:	or     ch,BYTE PTR [ebp-0x6bbfd0e9]
  40748c:	mov    esp,0x676e70c5
  407491:	add    ebp,DWORD PTR [esi-0x37d416ea]
  407497:	xor    al,0x7
  407499:	add    DWORD PTR [ecx+0x6c0e03e5],eax
  40749f:	mov    bh,0xb9
  4074a1:	cmc    
  4074a2:	push   0x19cc2145
  4074a7:	sub    esi,DWORD PTR [edx]
  4074a9:	cwde   
  4074aa:	adc    DWORD PTR [eax+0x6],ebx
  4074ad:	hlt    
  4074ae:	sahf   
  4074af:	add    ah,BYTE PTR ds:0xb62f0ddc
  4074b5:	data16 adc BYTE PTR [edi+0x6f864d82],ah
  4074bc:	ret    0x2118
  4074bf:	pop    eax
  4074c0:	inc    esp
  4074c1:	add    al,0x33
  4074c3:	xchg   edi,eax
  4074c4:	jnp    0x407508
  4074c6:	add    bh,BYTE PTR [edi]
  4074c8:	pop    es
  4074c9:	dec    edx
  4074ca:	lods   eax,DWORD PTR ds:[esi]
  4074cb:	adc    ecx,edi
  4074cd:	(bad)  
  4074ce:	cli    
  4074cf:	mov    ds:0xcba809bb,eax
  4074d4:	lds    ebx,FWORD PTR [eiz*1+0x2744fb06]
  4074db:	dec    ebx
  4074dc:	mov    es,eax
  4074de:	pop    ds
  4074df:	bound  ebp,QWORD PTR [edx+0x77]
  4074e2:	add    bh,BYTE PTR [ebx-0x2c9f8289]
  4074e8:	(bad)  
  4074e9:	outs   dx,DWORD PTR ds:[esi]
  4074ea:	cwde   
  4074eb:	add    eax,0xeb7bdb16
  4074f0:	lds    ecx,FWORD PTR [ebp+0x7517b0fb]
  4074f6:	xchg   ebx,eax
  4074f7:	test   al,0xea
  4074f9:	(bad)  
  4074fa:	xchg   edx,eax
  4074fb:	dec    esp
  4074fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074fd:	test   ebx,edx
  4074ff:	stos   BYTE PTR es:[edi],al
  407500:	adc    DWORD PTR [eax],0x12
  407503:	or     al,0xba
  407505:	dec    esp
  407506:	jmp    0x1e12:0xfdb2dc5b
  40750d:	shr    BYTE PTR [ebp+0x395ad3ed],0xa6
  407514:	neg    esp
  407516:	aad    0xe5
  407518:	cld    
  407519:	into   
  40751a:	mov    bh,0x75
  40751c:	cmove  ebx,DWORD PTR [ecx+eiz*8]
  407520:	mov    al,0x34
  407522:	imul   ebx,DWORD PTR [ecx+0x16],0x33
  407526:	jns    0x40752d
  407528:	imul   esp,DWORD PTR [esi+eiz*1-0x5e],0xfffffff7
  40752d:	test   al,0x59
  40752f:	pop    ecx
  407530:	loopne 0x407503
  407532:	mov    bl,BYTE PTR ds:0x13930f28
  407538:	int3   
  407539:	push   es
  40753a:	jns    0x40753d
  40753c:	leave  
  40753d:	xchg   edx,eax
  40753e:	add    eax,0xe56badec
  407543:	out    0x8c,al
  407545:	and    eax,eax
  407547:	outs   dx,BYTE PTR ds:[esi]
  407548:	xchg   DWORD PTR [ebx-0x18e480e3],esi
  40754e:	in     al,dx
  40754f:	dec    eax
  407550:	test   DWORD PTR [ebx],eax
  407552:	daa    
  407553:	adc    eax,0xa39a6a6e
  407558:	popa   
  407559:	popf   
  40755a:	sbb    esp,edi
  40755c:	daa    
  40755d:	out    dx,al
  40755e:	push   ecx
  40755f:	out    dx,eax
  407560:	popf   
  407561:	arpl   WORD PTR [ebx+0x1da0b1b4],si
  407567:	mov    ebp,?
  407569:	mov    ebp,0x1528fd5f
  40756e:	in     al,0xda
  407570:	pop    eax
  407571:	push   edx
  407572:	fadd   DWORD PTR [ecx-0x3d]
  407575:	sar    ebx,cl
  407577:	mulps  xmm4,XMMWORD PTR [ebx]
  40757a:	dec    esp
  40757b:	adc    DWORD PTR [edx-0x118516bb],edi
  407581:	cs and dh,bh
  407584:	adc    BYTE PTR [edx+edi*4+0x3e181839],dl
  40758b:	ss jo  0x40751a
  40758e:	(bad)  
  40758f:	jmp    0x407538
  407591:	add    DWORD PTR [edx-0x58b330ec],0xbaa6c403
  40759b:	fbld   TBYTE PTR [ebx-0x73]
  40759e:	sti    
  40759f:	clc    
  4075a0:	mov    edi,DWORD PTR [ebp-0x21]
  4075a3:	sub    esp,ebp
  4075a5:	dec    ecx
  4075a6:	jb     0x4075e9
  4075a8:	mov    BYTE PTR ds:0xc7901db6,0x67
  4075af:	stos   BYTE PTR es:[edi],al
  4075b0:	cmp    cl,0xa
  4075b3:	or     eax,0x5694a1a8
  4075b8:	lock add ebx,esi
  4075bb:	jb     0x407633
  4075bd:	retf   0xf129
  4075c0:	psubusw mm0,QWORD PTR [eax]
  4075c3:	sar    BYTE PTR [eax-0x8],1
  4075c6:	bound  edi,QWORD PTR [esi]
  4075c8:	sbb    eax,0xaa352525
  4075cd:	mov    BYTE PTR [eax],dl
  4075cf:	jno    0x407581
  4075d1:	mov    ebx,0x238babf0
  4075d6:	adc    ah,0x33
  4075d9:	adc    dl,BYTE PTR [ebx-0x75097918]
  4075df:	(bad)  
  4075e0:	mov    ebx,0x7d31e7f
  4075e5:	mov    bl,0xe1
  4075e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075e8:	sar    BYTE PTR [ecx-0x4141c393],cl
  4075ee:	lds    ebp,FWORD PTR [edx+0x59708035]
  4075f4:	popa   
  4075f5:	push   es
  4075f6:	mov    al,0xbe
  4075f8:	mov    al,ds:0x7377be3d
  4075fd:	loop   0x4075d4
  4075ff:	in     eax,0x26
  407601:	das    
  407602:	cmp    eax,0x2e721111
  407607:	and    dl,BYTE PTR [eax]
  407609:	or     ebp,DWORD PTR ds:0x3407b5a7
  40760f:	or     eax,0xfb201f3b
  407614:	add    DWORD PTR [eax],esp
  407616:	and    ch,0x88
  407619:	ja     0x40764f
  40761b:	repnz retf 
  40761d:	add    eax,0xd78ddba
  407622:	jbe    0x4075ca
  407624:	inc    esp
  407625:	dec    edx
  407626:	inc    eax
  407627:	jmp    0x40764e
  407629:	mov    bl,0xf1
  40762b:	adc    al,0x3d
  40762d:	ins    BYTE PTR es:[edi],dx
  40762e:	jb     0x40769a
  407630:	sti    
  407631:	call   0x47fa:0x2131317b
  407638:	aas    
  407639:	inc    eax
  40763a:	loope  0x4075c7
  40763c:	loopne 0x4076b1
  40763e:	jmp    0x4075d2
  407640:	std    
  407641:	retf   
  407642:	jmp    0xf39b:0x9841ad7e
  407649:	mov    BYTE PTR [edi],0x98
  40764c:	in     eax,dx
  40764d:	pop    ebx
  40764e:	and    DWORD PTR [eax-0x5adb5344],0xe6c5106b
  407658:	push   ds
  407659:	iret   
  40765a:	int    0x84
  40765c:	gs pop edi
  40765e:	dec    esi
  40765f:	xchg   esi,eax
  407660:	or     bh,dl
  407662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407663:	dec    ebx
  407664:	dec    ebx
  407665:	push   0x3abfaa56
  40766a:	dec    edi
  40766b:	xchg   BYTE PTR [edx+0x20],cl
  40766e:	fcomi  st,st(6)
  407670:	sbb    eax,0x1197eebd
  407675:	shl    DWORD PTR [ebx+edx*2],cl
  407678:	inc    edi
  40767a:	sbb    eax,0xdff0aba3
  40767f:	(bad)  
  407680:	dec    esp
  407681:	fsub   QWORD PTR [edi+eax*8-0x2a211fb1]
  407688:	push   esp
  407689:	pop    ecx
  40768a:	or     eax,0x500feee
  40768f:	sbb    al,BYTE PTR [esi]
  407691:	and    cl,dh
  407693:	fnstcw WORD PTR [ecx+0x33154596]
  407699:	fnclex 
  40769b:	mov    eax,ebp
  40769d:	xchg   edi,eax
  40769e:	lds    edx,FWORD PTR [edx-0x4d]
  4076a1:	fcomp  QWORD PTR [esi]
  4076a3:	data16 cli 
  4076a5:	lahf   
  4076a6:	mov    ebx,DWORD PTR [esi-0x2baf2ccf]
  4076ac:	pusha  
  4076ad:	ins    DWORD PTR es:[edi],dx
  4076ae:	mov    dl,0xfa
  4076b0:	retf   
  4076b1:	aam    0xa6
  4076b3:	cdq    
  4076b4:	fucomip st,st(5)
  4076b6:	mov    eax,ds:0x2f78c68f
  4076bb:	push   edi
  4076bc:	sub    eax,0xf65f3895
  4076c1:	pop    eax
  4076c2:	leave  
  4076c3:	test   BYTE PTR [ecx+ebx*2],cl
  4076c6:	data16 out 0x77,al
  4076c9:	push   ds
  4076ca:	pusha  
  4076cb:	xor    al,0xf4
  4076cd:	lds    ebp,FWORD PTR [ecx-0xc]
  4076d0:	stc    
  4076d1:	adc    al,BYTE PTR [eax+0x65]
  4076d4:	and    eax,0xf5769b2a
  4076d9:	jmp    0x2418d019
  4076de:	adc    esp,ecx
  4076e0:	int    0x9
  4076e2:	sub    BYTE PTR [eax],bh
  4076e4:	stos   DWORD PTR es:[edi],eax
  4076e5:	rcl    DWORD PTR [eax+0x53],0xc5
  4076e9:	pop    ecx
  4076ea:	aam    0x33
  4076ec:	cli    
  4076ed:	cmp    ebx,ebx
  4076ef:	fild   DWORD PTR [ebp-0x12]
  4076f2:	or     ecx,ecx
  4076f4:	mov    ch,0x6f
  4076f6:	loope  0x40769c
  4076f8:	xchg   ebp,eax
  4076f9:	data16 daa 
  4076fb:	push   0xffffffd7
  4076fd:	jmp    0x257d:0xdc1afc8
  407704:	jecxz  0x407694
  407706:	cmp    dh,cl
  407708:	fild   QWORD PTR [eax+0x2592bb10]
  40770e:	sub    DWORD PTR [ebp+0x182eedd3],0x6b
  407715:	daa    
  407716:	leave  
  407717:	int3   
  407718:	or     DWORD PTR [ecx+0x41],0x86503d71
  40771f:	in     al,0x67
  407721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407722:	mov    ah,BYTE PTR [esi-0x62]
  407725:	mov    BYTE PTR [ebx-0x5e],bl
  407728:	nop
  407729:	mov    ds:0xa34ed115,al
  40772e:	mov    dh,ch
  407730:	jnp    0x40773e
  407732:	xchg   edx,eax
  407733:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407734:	pop    ds
  407735:	ins    BYTE PTR es:[edi],dx
  407736:	sbb    al,ch
  407738:	psubusb mm3,QWORD PTR [ebp+esi*2-0x49]
  40773d:	xor    eax,0x9a993b9
  407742:	mov    cl,0x60
  407744:	stos   BYTE PTR es:[edi],al
  407745:	push   eax
  407746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407747:	pusha  
  407748:	sbb    edx,eax
  40774a:	mov    BYTE PTR [ecx-0x49ec4a82],ah
  407750:	or     esi,DWORD PTR ds:0x3c24c086
  407756:	push   ss
  407757:	popf   
  407758:	cmp    eax,0xf2828e5c
  40775d:	pop    eax
  40775e:	dec    ebp
  40775f:	xor    al,0x79
  407761:	sub    edi,esp
  407763:	rcr    DWORD PTR [esi+0x31be73b0],cl
  407769:	jecxz  0x407721
  40776b:	dec    edi
  40776c:	pop    ebx
  40776d:	sub    dl,BYTE PTR [edx+0x82297e]
  407773:	hlt    
  407774:	jmp    0x4077d6
  407776:	sbb    al,0x48
  407778:	(bad)  
  407779:	mov    eax,ds:0x2161860c
  40777e:	dec    edx
  40777f:	repz push ds
  407781:	mov    ebx,0x51bedbcf
  407786:	sbb    DWORD PTR [ebx+0x1bda0b81],0x3d7b6fc2
  407790:	jne    0x4077ec
  407792:	jae    0x407796
  407794:	dec    ebx
  407795:	repnz into 
  407797:	mov    esi,0x8592541a
  40779c:	outs   dx,DWORD PTR ds:[esi]
  40779d:	aaa    
  40779e:	adc    BYTE PTR [eax+0x7a],0x95
  4077a2:	mov    bh,0xf0
  4077a4:	arpl   WORD PTR [edi-0x4f],sp
  4077a7:	lea    eax,[eax+edi*1]
  4077aa:	icebp  
  4077ab:	lds    ebx,FWORD PTR [edx-0x7f]
  4077ae:	inc    ebx
  4077af:	sbb    eax,0xfd8b5e88
  4077b4:	ror    eax,0xaa
  4077b7:	mov    al,ds:0xdf21a063
  4077bc:	iret   
  4077bd:	pop    es
  4077be:	dec    ebp
  4077bf:	jl     0x407808
  4077c1:	sbb    BYTE PTR [edx+edx*8],0xa
  4077c5:	adc    DWORD PTR [edi+0x56],edi
  4077c8:	fcmovne st,st(6)
  4077ca:	sbb    al,BYTE PTR [edx+0x71]
  4077cd:	mov    edx,edi
  4077cf:	stos   BYTE PTR es:[edi],al
  4077d0:	mov    ecx,0x78177f5a
  4077d5:	rcr    BYTE PTR [ecx+0x4a1f7dcc],1
  4077db:	xadd   BYTE PTR [edx+0x519e3db9],ch
  4077e2:	icebp  
  4077e3:	xchg   edi,eax
  4077e4:	lods   al,BYTE PTR ds:[esi]
  4077e5:	jne    0x407854
  4077e7:	cwde   
  4077e8:	push   eax
  4077e9:	(bad)  
  4077ea:	call   0xad4c8486
  4077ef:	imul   esi,DWORD PTR [ebx],0x1f
  4077f2:	jo     0x40778f
  4077f4:	xor    al,0xf9
  4077f6:	xor    al,0x45
  4077f8:	push   0x9e2eda15
  4077fd:	sahf   
  4077fe:	dec    ecx
  4077ff:	or     eax,0x1b42b0bb
  407804:	sbb    DWORD PTR [ecx],0xffffffff
  407807:	mov    ebp,0x28a64273
  40780c:	js     0x407876
  40780e:	push   es
  40780f:	jmp    0x407855
  407811:	daa    
  407812:	or     esi,DWORD PTR [ebx+edx*1-0x14]
  407816:	push   0xffffffcf
  407818:	ja     0x40779e
  40781a:	arpl   WORD PTR [ebx-0x5abfb1a5],ax
  407820:	pop    edi
  407821:	and    eax,DWORD PTR [eax-0x22]
  407824:	sbb    BYTE PTR [esi],al
  407826:	sub    esp,DWORD PTR [edx+0x26]
  407829:	nop
  40782a:	sub    eax,0x418bd66b
  40782f:	(bad)  
  407830:	xor    DWORD PTR ds:0xd84956c8,ebx
  407836:	enter  0x66d7,0x13
  40783a:	pop    ecx
  40783b:	add    ax,0x1a0
  407840:	ins    BYTE PTR es:[edi],dx
  407841:	punpckhdq mm6,mm2
  407844:	nop
  407845:	loop   0x407800
  407847:	fs out dx,al
  407849:	or     cl,bl
  40784b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40784c:	ret    0xa7a
  40784f:	push   ebp
  407850:	inc    esi
  407851:	mov    WORD PTR [edx-0x39],cs
  407854:	sub    DWORD PTR [esi],eax
  407856:	mov    edi,0xfcda74ee
  40785b:	push   ecx
  40785c:	ss ins BYTE PTR es:[edi],dx
  40785e:	cmp    BYTE PTR [ecx+0x4f2094ad],cl
  407864:	push   ebx
  407865:	adc    DWORD PTR [esi+0x24b04918],eax
  40786b:	pushf  
  40786c:	cli    
  40786d:	neg    BYTE PTR [edx-0x13]
  407870:	add    dh,dl
  407872:	loopne 0x407891
  407874:	(bad)  
  407875:	mov    ebx,0xdf2fa6e4
  40787a:	sub    bl,0x1d
  40787d:	jne    0x407892
  40787f:	pop    ecx
  407880:	fnstenv [edx+0x2bd7629a]
  407886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407887:	mov    ah,BYTE PTR [ebp-0x7]
  40788a:	jno    0x407850
  40788c:	mov    cs:0x857e31e5,al
  407892:	pop    ss
  407893:	adc    esp,esp
  407895:	fwait
  407896:	leave  
  407897:	xchg   esi,eax
  407898:	push   edi
  407899:	pop    ecx
  40789a:	pop    ebp
  40789b:	push   0xee42aa3c
  4078a0:	jl     0x407828
  4078a2:	sbb    cl,bh
  4078a4:	mov    al,0xe5
  4078a6:	xchg   esp,eax
  4078a7:	adc    DWORD PTR [edx+0x1d2faf79],esp
  4078ad:	(bad)  
  4078ae:	into   
  4078af:	dec    edi
  4078b0:	push   ds
  4078b1:	ret    0x3218
  4078b4:	cs test al,0x4b
  4078b7:	push   ss
  4078b8:	repz data16 loopne 0x407905
  4078bc:	add    dl,BYTE PTR [ecx-0x34]
  4078bf:	mov    cl,0xa2
  4078c1:	test   al,0xf4
  4078c3:	xchg   ecx,eax
  4078c4:	leave  
  4078c5:	mov    esi,0x31d8d57a
  4078ca:	push   edx
  4078cb:	pop    edx
  4078cc:	push   edi
  4078cd:	mov    esi,0x77fe91f0
  4078d2:	stos   DWORD PTR es:[edi],eax
  4078d3:	jle    0x40791d
  4078d5:	dec    ebx
  4078d6:	nop
  4078d7:	cli    
  4078d8:	fwait
  4078d9:	lods   al,BYTE PTR ds:[esi]
  4078da:	mov    bh,0x3a
  4078dc:	outs   dx,BYTE PTR ds:[esi]
  4078dd:	mov    esi,0xdb4eab0b
  4078e2:	add    DWORD PTR [ecx],esi
  4078e4:	outs   dx,DWORD PTR ds:[esi]
  4078e5:	les    eax,FWORD PTR es:[edx-0xd]
  4078e9:	scas   eax,DWORD PTR es:[edi]
  4078ea:	sar    DWORD PTR [edx-0x636a2a61],1
  4078f0:	mov    ebx,DWORD PTR [edx*1-0xd9b305e]
  4078f7:	cmp    eax,0xac1352b1
  4078fc:	rcr    DWORD PTR [esi+edx*4+0x65281058],1
  407903:	cdq    
  407904:	dec    ecx
  407905:	hlt    
  407906:	xchg   ebx,eax
  407907:	in     al,0x16
  407909:	cld    
  40790a:	or     edx,0x623c7283
  407910:	and    dl,ch
  407912:	rcl    BYTE PTR [eax-0x1bafedaf],0x89
  407919:	and    eax,0xa362508d
  40791e:	mov    eax,0xece7219a
  407923:	fxch   st(0)
  407925:	mov    eax,0x98472a84
  40792a:	(bad)  
  40792b:	or     al,0xba
  40792d:	in     al,dx
  40792e:	sbb    bl,BYTE PTR [esi-0x1feb069b]
  407934:	add    DWORD PTR [ebp+0x11],0xffffffd0
  407938:	xor    esi,DWORD PTR [ebp-0x53fcd659]
  40793e:	(bad)  
  40793f:	into   
  407940:	cld    
  407941:	(bad)  [esi-0x42]
  407944:	call   0xf29c2d84
  407949:	pop    ebp
  40794a:	mov    es,WORD PTR [esi+ebp*4]
  40794d:	mov    ds:0x89a51f69,al
  407952:	call   DWORD PTR [esi+eiz*8-0x11c3216f]
  407959:	lock std 
  40795b:	pop    ds
  40795c:	cwde   
  40795d:	addr16 pop esp
  40795f:	cs nop
  407961:	jmp    0xbca8f501
  407966:	data16 add BYTE PTR [eax+edi*4+0x4c0bb042],ah
  40796e:	je     0x4079d1
  407970:	and    eax,0xe636ff45
  407975:	mov    ecx,0xc1b75400
  40797a:	cmp    eax,0x12aeca39
  40797f:	and    eax,0xaa0b3de1
  407984:	(bad)  
  407986:	out    dx,al
  407987:	lds    ecx,FWORD PTR [edx+0x40]
  40798a:	test   DWORD PTR [ebp-0xa27f3ca],esi
  407990:	adc    ebp,DWORD PTR [esi-0x13da1450]
  407996:	fld    QWORD PTR [edx]
  407998:	daa    
  407999:	push   es
  40799a:	jne    0x40794f
  40799c:	push   ds
  40799d:	bound  ebx,QWORD PTR [eax+0x4]
  4079a0:	sbb    ebp,esi
  4079a2:	sahf   
  4079a3:	mov    esi,0xec69be
  4079a8:	lock xchg ebp,eax
  4079aa:	pop    eax
  4079ab:	fmul   st,st(2)
  4079ad:	and    edx,DWORD PTR [ebp+0x7a]
  4079b0:	(bad)  
  4079b1:	jmp    0x407939
  4079b3:	jae    0x407a1e
  4079b5:	jl     0x40795e
  4079b7:	fcmovnu st,st(3)
  4079b9:	mov    ecx,DWORD PTR [ebx+0x60]
  4079bc:	lds    edx,FWORD PTR [ebx+0x43]
  4079bf:	jle    0x40795d
  4079c1:	and    ecx,0x86c1541f
  4079c7:	hlt    
  4079c8:	bound  esp,QWORD PTR ds:0x1fadcafb
  4079ce:	sub    esi,DWORD PTR [ecx+0x5d0e412d]
  4079d4:	ja     0x4079fb
  4079d6:	(bad)  
  4079d7:	xlat   BYTE PTR ds:[ebx]
  4079d8:	mov    ds:0xb783e912,al
  4079dd:	mov    dl,dl
  4079df:	aad    0x30
  4079e1:	fisub  WORD PTR [ebp-0x65]
  4079e4:	cmp    al,0xba
  4079e6:	div    BYTE PTR [edx-0x19]
  4079e9:	hlt    
  4079ea:	mov    ds:0x1621ab24,eax
  4079ef:	inc    ebp
  4079f0:	das    
  4079f1:	push   edx
  4079f2:	(bad)  
  4079f3:	aad    0x7f
  4079f5:	int3   
  4079f6:	out    dx,eax
  4079f7:	xchg   ebp,eax
  4079f8:	xor    cl,BYTE PTR [edi]
  4079fa:	sub    al,0x89
  4079fc:	addr16 out 0xbb,eax
  4079ff:	ds pop gs
  407a02:	pusha  
  407a03:	test   al,0x47
  407a05:	pop    ds
  407a06:	iret   
  407a07:	jmp    0x37dd5dc9
  407a0c:	xchg   esi,eax
  407a0d:	dec    eax
  407a0e:	jp     0x407a00
  407a10:	xchg   ecx,eax
  407a11:	mov    bl,0x86
  407a13:	push   ebp
  407a14:	push   edx
  407a15:	sub    BYTE PTR [eax+0x7601593f],al
  407a1b:	ss pop ecx
  407a1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a1e:	push   esi
  407a1f:	push   esp
  407a20:	sbb    ah,bl
  407a22:	sahf   
  407a23:	dec    ebp
  407a24:	cwde   
  407a25:	pop    esp
  407a26:	xchg   esp,eax
  407a27:	mov    ebp,0x45ff7457
  407a2c:	lahf   
  407a2d:	in     eax,0xd2
  407a2f:	into   
  407a30:	inc    ecx
  407a31:	loopne 0x407a4e
  407a33:	jbe    0x407a3c
  407a35:	test   eax,0x7592408d
  407a3a:	jg     0x407a6e
  407a3c:	lds    ebp,FWORD PTR [edx]
  407a3e:	sbb    esp,0xf702bf40
  407a44:	(bad)  [ecx+0x52ce0af0]
  407a4a:	dec    eax
  407a4b:	mov    ch,0x96
  407a4d:	repz pop eax
  407a4f:	or     esi,DWORD PTR [eax]
  407a51:	sbb    eax,edx
  407a53:	in     eax,dx
  407a54:	or     eax,0x8b518fb
  407a59:	cmp    al,0x41
  407a5b:	cld    
  407a5c:	sbb    eax,0xac749305
  407a61:	or     dh,BYTE PTR [ebx+0x3a8cd87b]
  407a67:	data16 rcr ax,cl
  407a6b:	or     eax,0x57b87077
  407a70:	mov    WORD PTR [ecx-0x7],?
  407a73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a74:	mov    ebp,0x56c58cd2
  407a79:	imul   ebp,esp,0x86ba8746
  407a7f:	pop    ss
  407a80:	mov    edi,0xc9072b1f
  407a85:	pop    ebp
  407a86:	sub    al,0x20
  407a88:	clc    
  407a89:	out    dx,eax
  407a8a:	loop   0x407afa
  407a8c:	adc    ah,BYTE PTR [ebx-0x1a]
  407a8f:	dec    ebx
  407a90:	mov    eax,ds:0xd92e94c8
  407a95:	data16 sbb al,0xea
  407a98:	(bad)  
  407a9a:	(bad)  
  407a9b:	bound  esi,QWORD PTR [ebp+0x4f]
  407a9e:	pusha  
  407a9f:	jno    0x407a63
  407aa1:	jge    0x407aac
  407aa3:	jecxz  0x407acf
  407aa5:	dec    ebp
  407aa6:	adc    BYTE PTR [eax],ch
  407aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407aa9:	sbb    ah,BYTE PTR [esi]
  407aab:	sbb    BYTE PTR [esi+0x2fa5140b],bl
  407ab1:	push   es
  407ab2:	jle    0x407ac4
  407ab4:	std    
  407ab5:	ss sti 
  407ab7:	pop    ss
  407ab8:	imul   edx,DWORD PTR ds:0x64fda1ef,0x71
  407abf:	adc    al,0x65
  407ac1:	fucomi st,st(4)
  407ac3:	dec    eax
  407ac4:	imul   ebx,DWORD PTR ds:0x1421323d,0x333b626d
  407ace:	pushf  
  407acf:	cvtpi2ps xmm1,QWORD PTR [ebx-0x4995da61]
  407ad6:	pop    edi
  407ad7:	(bad)  
  407ad8:	ja     0x407a99
  407ada:	retf   0x475f
  407add:	out    0x33,eax
  407adf:	cdq    
  407ae0:	and    BYTE PTR [ebp+0x33],ah
  407ae3:	loope  0x407ac1
  407ae5:	into   
  407ae6:	mov    dl,cl
  407ae8:	fimul  WORD PTR [ecx+0x2d29e743]
  407aee:	mov    bl,0xb9
  407af0:	sub    BYTE PTR [eax+0x2a268737],0x3b
  407af7:	add    ah,bh
  407af9:	sub    cl,bh
  407afb:	les    ecx,FWORD PTR [edi]
  407afd:	pop    edi
  407afe:	pop    esp
  407aff:	imul   esp,DWORD PTR [edx],0x77
  407b02:	jle    0x407b13
  407b04:	dec    eax
  407b05:	test   DWORD PTR [ebx-0x73],eax
  407b08:	clc    
  407b09:	jns    0x407b0f
  407b0b:	cli    
  407b0c:	in     eax,0x97
  407b0e:	sub    BYTE PTR [ebx+0x1d],cl
  407b11:	sbb    al,BYTE PTR [esi]
  407b13:	inc    edi
  407b14:	iret   
  407b15:	je     0x407b72
  407b17:	js     0x407b21
  407b19:	mov    edi,0x3d9866f6
  407b1e:	sar    DWORD PTR [eax+0x69],cl
  407b21:	add    DWORD PTR [ebx+0x6c85d362],esp
  407b27:	popa   
  407b28:	cmp    BYTE PTR [ebx],cl
  407b2a:	sbb    DWORD PTR [edx],ebx
  407b2c:	or     eax,0x2348135a
  407b31:	mov    esp,0xbead3d35
  407b36:	(bad)  
  407b37:	(bad)  
  407b38:	sahf   
  407b39:	xchg   BYTE PTR [eax],ah
  407b3b:	bound  esp,QWORD PTR [esi-0x387e06cd]
  407b41:	(bad)  [edx+0x32]
  407b44:	add    bh,dh
  407b46:	xlat   BYTE PTR ds:[ebx]
  407b47:	and    eax,edi
  407b49:	movsx  di,BYTE PTR [eax+0x1]
  407b4e:	mov    ebx,0x3b4a
  407b53:	sub    di,bx
  407b56:	mov    ebx,0x8a87
  407b5b:	xor    di,bx
  407b5e:	mov    ebx,0x4f97
  407b63:	cmp    di,bx
  407b66:	jne    0x407b8e
  407b6c:	movsx  di,BYTE PTR [eax]
  407b70:	mov    ebx,0x3b4a
  407b75:	sub    di,bx
  407b78:	mov    ebx,0x8a87
  407b7d:	xor    di,bx
  407b80:	mov    ebx,0x4f84
  407b85:	cmp    di,bx
  407b88:	je     0x407b9e
  407b8e:	mov    edi,DWORD PTR [ebp-0x10]
  407b91:	xor    edi,ecx
  407b93:	mov    ebx,esi
  407b95:	sub    ebx,edi
  407b97:	add    eax,ebx
  407b99:	jmp    0x407b49
  407b9e:	mov    esi,DWORD PTR [ebp-0x14]
  407ba1:	mov    esi,DWORD PTR [esi]
  407ba3:	mov    edi,DWORD PTR [eax+0x3c]
  407ba6:	lea    esi,[edi+esi*8+0x78]
  407baa:	mov    esi,DWORD PTR [esi+eax*1]
  407bad:	mov    DWORD PTR [ebp-0x8],esi
  407bb0:	mov    esi,DWORD PTR [ebp+0x8]
  407bb3:	xor    esi,ecx
  407bb5:	add    esi,edx
  407bb7:	mov    DWORD PTR [ebp-0x14],esi
  407bba:	mov    esi,DWORD PTR [ebp+0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x8]
  407bc0:	xor    esi,ecx
  407bc2:	add    esi,edx
  407bc4:	pop    ebx
  407bc5:	cmp    edi,esi
  407bc7:	jne    0x407be5
  407bcd:	mov    eax,DWORD PTR [ebp+0xc]
  407bd0:	xor    eax,ecx
  407bd2:	mov    ecx,DWORD PTR [ebp-0x8]
  407bd5:	add    eax,edx
  407bd7:	imul   eax,ecx
  407bda:	mov    DWORD PTR [ebp-0x8],eax
  407bdd:	push   DWORD PTR [ebp+0x18]
  407be0:	jmp    0x407c39
  407be5:	mov    ecx,DWORD PTR [ebp-0x8]
  407be8:	add    ecx,eax
  407bea:	mov    DWORD PTR [ebp-0x14],ecx
  407bed:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf0:	mov    ecx,DWORD PTR [ecx+0xc]
  407bf3:	movsx  cx,BYTE PTR [ecx+eax*1]
  407bf8:	mov    edx,0x3b4a
  407bfd:	sub    cx,dx
  407c00:	mov    edx,0x8a87
  407c05:	xor    cx,dx
  407c08:	mov    edx,0x4f86
  407c0d:	cmp    cx,dx
  407c10:	jne    0x407bdd
  407c16:	mov    ecx,DWORD PTR ds:0x4163b4
  407c1c:	mov    ecx,DWORD PTR [ecx+0x198]
  407c22:	mov    DWORD PTR [ecx],eax
  407c24:	jmp    0x407c4a
  407c29:	mov    ecx,DWORD PTR [ebp+0x18]
  407c2c:	cmp    ecx,0xf89c85b1
  407c32:	jne    0x407c4a
  407c38:	push   eax
  407c39:	push   DWORD PTR [ebp+0x14]
  407c3c:	push   DWORD PTR [ebp+0x10]
  407c3f:	push   DWORD PTR [ebp+0xc]
  407c42:	push   DWORD PTR [ebp+0x8]
  407c45:	call   0x405399
  407c4a:	pop    edi
  407c4b:	pop    esi
  407c4c:	leave  
  407c4d:	ret    0x14
  407c50:	push   ebp
  407c51:	mov    ebp,esp
  407c53:	push   ecx
  407c54:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  407c5b:	and    DWORD PTR ds:0x413c02,0x414004
  407c65:	mov    eax,DWORD PTR [ebp-0x4]
  407c68:	mov    edx,DWORD PTR [ebp+0x10]
  407c6b:	mov    ecx,0x7510894
  407c70:	xor    eax,ecx
  407c72:	add    eax,0x3272dc
  407c77:	mov    DWORD PTR [edx],eax
  407c79:	movzx  edx,WORD PTR ds:0x413c7c
  407c80:	and    edx,DWORD PTR ds:0x413cf4
  407c86:	mov    DWORD PTR ds:0x413c7c,edx
  407c8c:	mov    eax,DWORD PTR [ebp+0xc]
  407c8f:	sbb    DWORD PTR ds:0x413c02,0x413c0a
  407c99:	xor    eax,ecx
  407c9b:	adc    edx,DWORD PTR ds:0x414010
  407ca1:	push   esi
  407ca2:	sub    edx,DWORD PTR ds:0x413c84
  407ca8:	mov    esi,DWORD PTR [ebp+0x10]
  407cab:	movzx  edx,WORD PTR ds:0x414010
  407cb2:	sbb    DWORD PTR ds:0x413cf4,edx
  407cb8:	mov    edx,0x3272dc
  407cbd:	neg    DWORD PTR ds:0x413d20
  407cc3:	add    eax,edx
  407cc5:	xor    DWORD PTR ds:0x413c06,0x413c1a
  407ccf:	mov    DWORD PTR [esi+0x4],eax
  407cd2:	mov    eax,DWORD PTR [ebp+0x14]
  407cd5:	mov    esi,DWORD PTR [ebp+0x10]
  407cd8:	mov    DWORD PTR [esi+0x8],eax
  407cdb:	mov    eax,DWORD PTR [ebp+0x18]
  407cde:	mov    esi,DWORD PTR [ebp+0x10]
  407ce1:	mov    DWORD PTR [esi+0xc],eax
  407ce4:	mov    eax,DWORD PTR [ebp+0x1c]
  407ce7:	mov    esi,DWORD PTR [ebp+0x10]
  407cea:	mov    DWORD PTR [esi+0x10],eax
  407ced:	mov    eax,DWORD PTR [ebp+0x8]
  407cf0:	xor    eax,ecx
  407cf2:	add    eax,edx
  407cf4:	pop    esi
  407cf5:	leave  
  407cf6:	ret    0x18
  407cf9:	push   ebp
  407cfa:	mov    ebp,esp
  407cfc:	push   ecx
  407cfd:	and    DWORD PTR ds:0x413d34,0x0
  407d07:	xor    eax,eax
  407d09:	add    eax,DWORD PTR ds:0x413d34
  407d0f:	inc    eax
  407d10:	mov    ds:0x413d34,eax
  407d15:	cmp    DWORD PTR ds:0x413d34,0x10
  407d1c:	jne    0x407d30
  407d22:	push   DWORD PTR [ebp-0x14]
  407d25:	push   0x4160bf
  407d2a:	call   DWORD PTR ds:0x41678c
  407d30:	cmp    DWORD PTR ds:0x413d34,0xf
  407d37:	jne    0x407d48
  407d3d:	mov    eax,ds:0x413d34
  407d42:	inc    eax
  407d43:	mov    ds:0x413d34,eax
  407d48:	cmp    DWORD PTR ds:0x413d34,0x1e
  407d4f:	jb     0x407d07
  407d55:	sbb    eax,DWORD PTR ds:0x413bf6
  407d5b:	push   ecx
  407d5c:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  407d63:	and    DWORD PTR ds:0x413c06,0x0
  407d6d:	jmp    0x407d7f
  407d72:	mov    edx,DWORD PTR ds:0x413c06
  407d78:	inc    edx
  407d79:	mov    DWORD PTR ds:0x413c06,edx
  407d7f:	cmp    DWORD PTR ds:0x413c06,0x1d
  407d86:	jae    0x407dc8
  407d8c:	cmp    DWORD PTR ds:0x413c06,0x27
  407d93:	jne    0x407dbd
  407d99:	push   0x1c64
  407d9e:	push   0x413c06
  407da3:	push   0x752e
  407da8:	push   0x4160cf
  407dad:	push   0x55a9
  407db2:	push   0x2dee
  407db7:	call   DWORD PTR ds:0x416790
  407dbd:	jmp    0x407d72
  407dc2:	and    eax,DWORD PTR ds:0x413ce0
  407dc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  407dcf:	mov    DWORD PTR ds:0x413d34,0x14
  407dd9:	cmp    DWORD PTR ds:0x413d34,0x0
  407de0:	je     0x407e29
  407de6:	cmp    DWORD PTR ds:0x413d34,0x9
  407ded:	jne    0x407dfe
  407df3:	push   0x2bdc
  407df8:	call   DWORD PTR ds:0x416798
  407dfe:	cmp    DWORD PTR ds:0x413d34,0xa
  407e05:	jne    0x407e19
  407e0b:	xor    eax,eax
  407e0d:	add    eax,DWORD PTR ds:0x413d34
  407e13:	dec    eax
  407e14:	mov    ds:0x413d34,eax
  407e19:	mov    eax,ds:0x413d34
  407e1e:	dec    eax
  407e1f:	mov    ds:0x413d34,eax
  407e24:	jmp    0x407dd9
  407e29:	mov    eax,DWORD PTR [ebp-0x4]
  407e2c:	push   esi
  407e2d:	mov    esi,DWORD PTR [ebp-0x8]
  407e30:	mov    edx,0x7510894
  407e35:	xor    eax,edx
  407e37:	xor    esi,edx
  407e39:	mov    ecx,0x3272dc
  407e3e:	add    esi,ecx
  407e40:	add    eax,ecx
  407e42:	imul   eax,esi
  407e45:	mov    esi,DWORD PTR [ebp+0xc]
  407e48:	jmp    0x40a1fd
  407e4d:	mov    ds:0x72fcde4e,al
  407e52:	in     al,dx
  407e53:	xor    dl,0xf9
  407e56:	mov    ebp,0x598870e0
  407e5b:	fwait
  407e5c:	add    al,0xcf
  407e5e:	and    bh,BYTE PTR [esp+edi*2-0x2c]
  407e62:	pop    edi
  407e63:	jl     0x407ee1
  407e65:	dec    edi
  407e66:	aaa    
  407e67:	enter  0x22fc,0xaf
  407e6b:	inc    edx
  407e6c:	xor    al,0xbf
  407e6e:	pusha  
  407e6f:	je     0x407eca
  407e71:	out    dx,al
  407e72:	daa    
  407e73:	add    esi,esi
  407e75:	jle    0x407eac
  407e77:	dec    ebp
  407e78:	add    BYTE PTR [ecx-0x53],ah
  407e7b:	xor    DWORD PTR [ecx+edx*8-0x1df81c0a],ecx
  407e82:	or     DWORD PTR [edx+0x19a3fef9],ecx
  407e88:	fsubr  DWORD PTR [esi+0x455a0fd4]
  407e8e:	add    BYTE PTR [ebp-0x40],ah
  407e91:	pusha  
  407e92:	pop    esp
  407e93:	sub    al,0x8e
  407e95:	call   0x88efd4af
  407e9a:	fld    DWORD PTR [edi+0x5d]
  407e9d:	out    0x85,eax
  407e9f:	and    ebp,esp
  407ea1:	add    eax,0xea92db13
  407ea6:	add    esi,esi
  407ea8:	sbb    edi,ecx
  407eaa:	test   eax,0x970a9de7
  407eaf:	lahf   
  407eb0:	int3   
  407eb1:	xchg   edi,eax
  407eb2:	std    
  407eb3:	jne    0x407e58
  407eb5:	mov    ch,0x46
  407eb7:	scas   eax,DWORD PTR es:[edi]
  407eb8:	cmc    
  407eb9:	and    eax,0xdf3409e9
  407ebe:	enter  0x7811,0x4a
  407ec2:	push   0xffffffd6
  407ec4:	sbb    DWORD PTR [ebx],eax
  407ec6:	int    0x12
  407ec8:	jno    0x407f3a
  407eca:	fsubr  DWORD PTR [ecx+ebx*1+0x76]
  407ece:	(bad)  
  407ed0:	xor    cl,ch
  407ed2:	test   al,0x7f
  407ed4:	test   DWORD PTR [ecx+0x2ff5a999],esp
  407eda:	fwait
  407edb:	xchg   edx,eax
  407edc:	push   esi
  407edd:	bound  eax,QWORD PTR [ebx-0x6ad89e0e]
  407ee3:	in     al,0x30
  407ee5:	fild   QWORD PTR [edi]
  407ee7:	cmp    esp,DWORD PTR [edx+edi*4-0x7ba61cb3]
  407eee:	mov    esp,0x5b93644c
  407ef3:	adc    al,0x18
  407ef5:	test   eax,0xcd70f868
  407efa:	add    eax,0x96dfb84e
  407eff:	xor    dh,BYTE PTR [ebp+0xe]
  407f02:	or     ah,BYTE PTR [ecx-0x42]
  407f05:	cmp    BYTE PTR [eax-0x61fa4d95],bl
  407f0b:	or     esp,DWORD PTR ds:0xb1c208f2
  407f11:	popa   
  407f12:	mov    eax,0xb72eea9a
  407f17:	sbb    edi,ebp
  407f19:	popa   
  407f1a:	sub    BYTE PTR ds:0xa03acb4d,dl
  407f20:	xor    al,0x91
  407f22:	mov    ecx,0xadf00d5e
  407f27:	dec    edi
  407f28:	xchg   ebx,eax
  407f29:	rcl    BYTE PTR [ebp+0x8],0x67
  407f2d:	sub    eax,0x919ae9dd
  407f32:	mov    eax,0xa65145ef
  407f37:	add    dl,BYTE PTR [edi-0x72bc4e54]
  407f3d:	jle    0x407f51
  407f3f:	lahf   
  407f40:	bound  edi,QWORD PTR [ebp-0x61f35bf8]
  407f46:	mov    esp,0x6e56533e
  407f4b:	pop    esi
  407f4c:	stos   DWORD PTR es:[edi],eax
  407f4d:	jmp    0x407f3e
  407f4f:	pop    ss
  407f50:	pop    ebp
  407f51:	retf   
  407f52:	gs jae 0x407f5e
  407f55:	cld    
  407f56:	test   DWORD PTR [ecx-0x37],0x425ebca2
  407f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f5e:	shl    al,0xb1
  407f61:	push   ss
  407f62:	mov    al,0xe9
  407f64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f65:	pop    ebp
  407f66:	xchg   edx,eax
  407f67:	pop    edx
  407f68:	jg     0x407f4c
  407f6a:	and    eax,0x8cfe4fea
  407f6f:	lea    esp,[edi-0x5adc33f5]
  407f75:	or     cl,BYTE PTR [eax+0x7baa5b8c]
  407f7b:	neg    DWORD PTR [esi+0x5f]
  407f7e:	cli    
  407f7f:	test   eax,0x2bcc406
  407f84:	xchg   BYTE PTR [eax-0x30],al
  407f87:	jbe    0x407fbe
  407f89:	xor    al,0xef
  407f8b:	inc    esi
  407f8c:	test   al,0x10
  407f8e:	pop    DWORD PTR [ecx-0x1d]
  407f91:	push   ss
  407f92:	add    al,dh
  407f94:	cld    
  407f95:	jb     0x407fae
  407f97:	test   eax,0xf177601c
  407f9c:	jmp    0x11f6:0x12d61138
  407fa3:	pop    eax
  407fa4:	div    DWORD PTR [edx-0x7c]
  407fa7:	jns    0x407f87
  407fa9:	add    edi,ecx
  407fab:	mov    ah,al
  407fad:	in     al,dx
  407fae:	or     al,0x7e
  407fb0:	adc    dl,ch
  407fb2:	cdq    
  407fb3:	push   cs
  407fb4:	mov    edi,DWORD PTR [edx-0x25]
  407fb7:	sub    al,0x6b
  407fb9:	jno    0x407fc5
  407fbb:	stos   BYTE PTR es:[edi],al
  407fbc:	test   eax,0xdce725f8
  407fc1:	icebp  
  407fc2:	ss aad 0x68
  407fc5:	adc    eax,0xdda137ba
  407fca:	xchg   edx,eax
  407fcb:	lock mov cl,0xd8
  407fce:	sub    DWORD PTR [ebx],esp
  407fd0:	js     0x407ffe
  407fd2:	mov    dl,0x45
  407fd4:	scas   al,BYTE PTR es:[edi]
  407fd5:	mov    DWORD PTR fs:[eax],0x2153414f
  407fdc:	pop    edi
  407fdd:	inc    edx
  407fde:	leave  
  407fdf:	aaa    
  407fe0:	add    al,BYTE PTR fs:[eax+eax*8-0x59cff3d0]
  407fe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fe9:	jp     0x40805f
  407feb:	add    ah,BYTE PTR [esi]
  407fed:	push   esi
  407fee:	add    ah,ch
  407ff0:	sub    eax,DWORD PTR [esi+0x15]
  407ff3:	dec    eax
  407ff4:	fwait
  407ff5:	rol    DWORD PTR [esp+ebp*8+0x42e83b19],0x7d
  407ffd:	cmp    cl,BYTE PTR [ebp-0x43c6ef0f]
  408003:	sub    esp,DWORD PTR [edx-0x7e]
  408006:	mov    al,ds:0x94bd1c6b
  40800b:	stos   DWORD PTR es:[edi],eax
  40800c:	push   cs
  40800d:	push   ss
  40800e:	fwait
  40800f:	mov    bh,BYTE PTR [edx-0x70617960]
  408015:	or     edx,DWORD PTR [esp+eiz*8]
  408018:	add    al,0x2c
  40801a:	mov    cl,BYTE PTR [ebx+0x7fc06889]
  408020:	std    
  408021:	popf   
  408022:	pop    eax
  408023:	leave  
  408024:	lea    ebp,[esp+edx*4-0x51fc78ad]
  40802b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40802c:	ret    
  40802d:	or     ah,dh
  40802f:	sbb    al,0xc6
  408031:	mov    eax,0x7f1266cd
  408036:	add    DWORD PTR [edi-0x72311dd9],esp
  40803c:	pop    ecx
  40803d:	or     ebp,ecx
  40803f:	jo     0x408072
  408041:	push   edx
  408042:	(bad)  
  408043:	not    BYTE PTR [edi]
  408045:	aas    
  408046:	jmp    eax
  408048:	pusha  
  408049:	jmp    0xa5fc:0xdc41d2b
  408050:	cs push edx
  408052:	sbb    al,0x2c
  408054:	sar    DWORD PTR [ebx-0x792678c2],cl
  40805a:	xchg   cl,cl
  40805c:	xchg   ebp,eax
  40805d:	add    al,0xc4
  40805f:	mov    bl,0xd1
  408061:	stc    
  408062:	dec    si
  408064:	push   es
  408065:	bt     esp,ecx
  408068:	xor    eax,0x9b14246
  40806d:	mov    esi,0x4d5c9581
  408072:	and    ebx,eax
  408074:	ja     0x40802a
  408076:	add    BYTE PTR [edx],0xcf
  408079:	or     ch,BYTE PTR [edi+0x6c]
  40807c:	jbe    0x40806d
  40807e:	mov    bl,0xf2
  408080:	dec    esp
  408081:	jle    0x40801a
  408083:	pop    edx
  408084:	and    BYTE PTR [edx],bl
  408086:	xor    BYTE PTR [eax],dh
  408088:	pop    ebx
  408089:	dec    ebp
  40808a:	add    ah,BYTE PTR [edi-0x48c329d4]
  408090:	sbb    bh,BYTE PTR [edx-0x2]
  408093:	push   ecx
  408094:	sub    al,0xc2
  408096:	mov    edx,0x9b7f9e45
  40809b:	or     esi,ecx
  40809d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40809e:	pop    ebx
  40809f:	(bad)  
  4080a0:	aad    0xc4
  4080a2:	add    eax,0x3350c3b2
  4080a7:	loope  0x4080eb
  4080a9:	pop    ds
  4080aa:	push   cs
  4080ab:	pop    edi
  4080ac:	xchg   esi,eax
  4080ad:	xchg   edx,eax
  4080ae:	jmp    0x408060
  4080b0:	sbb    ch,BYTE PTR [esp+edx*1]
  4080b3:	sbb    DWORD PTR [ebx],esp
  4080b5:	ds loope 0x408112
  4080b8:	daa    
  4080b9:	mov    ch,0x57
  4080bb:	ins    BYTE PTR es:[edi],dx
  4080bc:	popf   
  4080bd:	(bad)  
  4080be:	out    dx,al
  4080bf:	push   ds
  4080c0:	sub    eax,eax
  4080c2:	rcr    DWORD PTR [ebx-0x65760ef3],0x4a
  4080c9:	xchg   esi,eax
  4080ca:	adc    DWORD PTR [eax-0x2d2c503e],0xffffff8a
  4080d1:	sbb    esp,DWORD PTR [edx+0x12]
  4080d4:	push   cs
  4080d5:	cs gs inc esp
  4080d8:	push   esp
  4080d9:	dec    ebp
  4080da:	dec    esp
  4080db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080dc:	inc    bp
  4080de:	jns    0x4080fd
  4080e0:	cmp    eax,0xc6e6b5ef
  4080e5:	das    
  4080e6:	mov    edi,0x3d257580
  4080eb:	rcr    BYTE PTR [ebx],0xde
  4080ee:	mov    dh,0xfb
  4080f0:	or     al,0x12
  4080f2:	lock or eax,0xe8225e64
  4080f8:	pop    ecx
  4080f9:	sub    bh,ah
  4080fb:	psubd  mm0,QWORD PTR [ebx]
  4080fe:	pusha  
  4080ff:	rcr    edx,cl
  408101:	and    esp,DWORD PTR [eax-0x1c64fe4c]
  408107:	jle    0x408171
  408109:	inc    edi
  40810a:	scas   al,BYTE PTR es:[edi]
  40810b:	das    
  40810c:	inc    edi
  40810d:	inc    esp
  40810e:	cwde   
  40810f:	jmp    0xdb60:0x5534dad
  408116:	sbb    DWORD PTR ss:0x15098427,edi
  40811d:	ins    BYTE PTR es:[edi],dx
  40811e:	jne    0x4080c8
  408120:	jbe    0x4080dd
  408122:	push   0xa268cde2
  408127:	aad    0xae
  408129:	jecxz  0x4080ec
  40812b:	and    dl,BYTE PTR [edx-0x2b]
  40812e:	loopne 0x40811b
  408130:	push   esi
  408131:	and    al,0xfe
  408133:	jae    0x40811b
  408135:	shl    BYTE PTR [edx],cl
  408137:	mov    dh,0xec
  408139:	cmp    eax,0xc28d5772
  40813e:	cmp    DWORD PTR [ebp-0x37],ecx
  408141:	adc    al,BYTE PTR [esi+0x55]
  408144:	hlt    
  408145:	add    ah,BYTE PTR [esi-0x2d1ee782]
  40814b:	or     eax,DWORD PTR [esp+eax*4-0x40]
  40814f:	fistp  QWORD PTR [edi-0x2e4471e4]
  408155:	inc    esp
  408156:	or     cl,BYTE PTR [edi-0x368941d3]
  40815c:	addr16 js 0x4080f4
  40815f:	push   edx
  408160:	mov    edi,DWORD PTR [ebx+0x6cb86596]
  408166:	les    ebp,FWORD PTR [ebp+0x3d9872a3]
  40816c:	adc    dh,0xbc
  40816f:	sbb    DWORD PTR ds:0x7d249cc7,ebp
  408175:	push   ds
  408176:	es mov ch,0x9b
  408179:	xchg   esi,eax
  40817a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40817b:	fidiv  WORD PTR [eax+0x6b]
  40817e:	cmc    
  40817f:	inc    eax
  408180:	pop    ebx
  408181:	outs   dx,BYTE PTR ds:[esi]
  408182:	repz adc BYTE PTR [edi-0x5fff5131],cl
  408189:	shl    ebp,cl
  40818b:	rcl    BYTE PTR [ebp-0x2a],0xf0
  40818f:	cs daa 
  408191:	ja     0x408184
  408193:	xchg   DWORD PTR [eax+0x9],edi
  408196:	xchg   esp,eax
  408197:	mov    DWORD PTR [esi],ecx
  408199:	fist   DWORD PTR [esi]
  40819b:	lock dec ebp
  40819d:	pop    ebp
  40819e:	dec    ebx
  40819f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081a0:	push   ebx
  4081a1:	xchg   esi,eax
  4081a2:	mov    ebp,0xf33c2d41
  4081a7:	jb     0x4081dd
  4081a9:	jo     0x4081b4
  4081ab:	adc    esp,0x76b47e
  4081b1:	ror    bh,1
  4081b3:	out    dx,al
  4081b4:	adc    eax,0xdcbb08a2
  4081b9:	repnz cmp BYTE PTR [esi+0x74],0xef
  4081be:	in     al,dx
  4081bf:	aad    0x54
  4081c1:	cdq    
  4081c2:	outs   dx,BYTE PTR ds:[esi]
  4081c3:	std    
  4081c4:	(bad)  
  4081c5:	adc    dl,dl
  4081c7:	je     0x4081c1
  4081c9:	(bad)  
  4081ca:	jb     0x408174
  4081cc:	and    al,0xc2
  4081ce:	mov    bl,0x7e
  4081d0:	ret    
  4081d1:	(bad)  [esi+ebp*4+0x30432c3e]
  4081d8:	jecxz  0x40818e
  4081da:	cmp    eax,0xe3e81686
  4081df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081e0:	in     eax,dx
  4081e1:	xlat   BYTE PTR ds:[ebx]
  4081e2:	test   eax,0x5db60c95
  4081e7:	adc    dh,BYTE PTR [eax]
  4081e9:	stos   BYTE PTR es:[edi],al
  4081ea:	(bad)  
  4081ed:	dec    edi
  4081ee:	scas   eax,DWORD PTR es:[edi]
  4081ef:	sub    BYTE PTR [esi],0x1a
  4081f2:	sbb    edi,DWORD PTR [edi+0x3d]
  4081f5:	fidivr DWORD PTR [ecx-0x3306c72a]
  4081fb:	dec    esp
  4081fc:	outs   dx,WORD PTR ds:[esi]
  4081fe:	mov    ds:0xf7be631e,eax
  408203:	or     eax,0x547140d6
  408208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408209:	sbb    ah,BYTE PTR [ecx+edi*8+0x49]
  40820d:	inc    eax
  40820e:	(bad)  
  40820f:	sbb    ebp,ecx
  408211:	pop    ebp
  408212:	xchg   esp,eax
  408213:	in     eax,dx
  408214:	arpl   WORD PTR [ebx+0x1b89b572],dx
  40821a:	hlt    
  40821b:	mov    ecx,0x4aae22c6
  408220:	pop    ecx
  408221:	adc    DWORD PTR [edi+0x4b],edi
  408224:	adc    cl,BYTE PTR [ebp-0x5c]
  408227:	xlat   BYTE PTR ds:[ebx]
  408228:	sbb    ebp,esp
  40822a:	inc    ebx
  40822b:	xchg   ebp,eax
  40822c:	adc    DWORD PTR ds:0x69ec2d3c,0xffffff93
  408233:	jbe    0x4081c9
  408235:	sahf   
  408236:	inc    esi
  408237:	push   ss
  408238:	imul   ebx,DWORD PTR [ecx],0xbf133134
  40823e:	mov    ?,edi
  408240:	jg     0x408285
  408242:	cmp    BYTE PTR ds:0xd4c2c36a,ch
  408248:	and    edi,DWORD PTR ds:0x14c9939
  40824e:	jb     0x40829c
  408250:	in     eax,dx
  408251:	out    dx,eax
  408252:	idiv   BYTE PTR [edi+ebp*8-0x4ef354c7]
  408259:	jnp    0x40826e
  40825b:	call   0xb982ef7
  408260:	pop    esp
  408261:	xor    DWORD PTR [ebx+0x69acac83],edx
  408267:	in     al,dx
  408268:	ja     0x40821b
  40826a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40826b:	sbb    al,0xe3
  40826d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40826e:	mov    ah,BYTE PTR [esi-0xb9650b9]
  408274:	sub    DWORD PTR [eax-0x49aabcab],edi
  40827a:	inc    eax
  40827b:	mov    cl,ch
  40827d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40827e:	mul    BYTE PTR ds:0xbffba8a6
  408284:	retf   0xdc22
  408287:	aam    0xa3
  408289:	int3   
  40828a:	inc    eax
  40828b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40828c:	popw   ds
  40828e:	cs mov ch,0x87
  408291:	shr    DWORD PTR [ebx+0x7a],0xe8
  408295:	aaa    
  408296:	hlt    
  408297:	cmp    ebp,DWORD PTR [ebx-0x3b]
  40829a:	mov    ah,BYTE PTR ds:0x63aca235
  4082a0:	nop
  4082a1:	mov    ebx,0xa20ac7ad
  4082a6:	pop    ss
  4082a7:	pop    ebp
  4082a8:	retf   0x19d
  4082ab:	cmp    eax,0x2b0ac1b2
  4082b0:	cmp    dh,BYTE PTR [eax-0x1d]
  4082b3:	pop    esi
  4082b4:	mov    cl,0xf6
  4082b6:	imul   esi,DWORD PTR [ebx+edx*1],0xffffffd3
  4082ba:	dec    ebx
  4082bb:	cs loop 0x40824d
  4082be:	adc    al,0x74
  4082c0:	mul    DWORD PTR [esi-0x18142dfd]
  4082c6:	fbld   TBYTE PTR [edx-0x7799d8b3]
  4082cc:	test   BYTE PTR ds:0xbb436825,dl
  4082d2:	out    0xe2,eax
  4082d4:	mov    esi,0xcc6da6e0
  4082d9:	retf   
  4082da:	call   0xe30bef05
  4082df:	aas    
  4082e0:	outs   dx,BYTE PTR ds:[esi]
  4082e1:	int    0xe5
  4082e3:	aad    0x72
  4082e5:	jmp    0x93c781a3
  4082ea:	aad    0x8b
  4082ec:	adc    DWORD PTR [esi],edi
  4082ee:	mov    DWORD PTR [ecx*8+0xfe38728],ebx
  4082f5:	pop    esi
  4082f6:	fs cdq 
  4082f8:	jbe    0x4082b2
  4082fa:	sub    BYTE PTR [ecx+0x3624c735],cl
  408300:	fmulp  st(4),st
  408302:	adc    bh,dh
  408304:	add    cl,dh
  408306:	adc    esi,DWORD PTR [ebp+0x251d10c3]
  40830c:	inc    eax
  40830d:	or     cl,bh
  40830f:	mov    cl,0xf3
  408311:	rcr    DWORD PTR [ebx+edi*1+0x7f77dd1c],1
  408318:	and    BYTE PTR [ebx+0x59],0x59
  40831c:	test   BYTE PTR ds:0x5f470a1b,0xe2
  408323:	scas   al,BYTE PTR es:[edi]
  408324:	mov    cl,0xde
  408326:	cmp    al,cl
  408328:	push   esi
  408329:	stos   DWORD PTR es:[edi],eax
  40832a:	addr16 test al,0x4f
  40832d:	aaa    
  40832e:	cmp    DWORD PTR [ebx+ecx*2],ebx
  408331:	pop    ebx
  408332:	fist   WORD PTR [eax+0x4b]
  408335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408336:	jbe    0x408340
  408338:	idiv   BYTE PTR [ebx]
  40833a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40833b:	out    dx,al
  40833c:	arpl   bp,si
  40833e:	and    bh,BYTE PTR ds:0x72d3cd07
  408344:	jbe    0x4083be
  408346:	push   ebx
  408347:	shr    BYTE PTR [esi],cl
  408349:	mov    ah,0x6f
  40834b:	fisub  DWORD PTR [ebx+0x12]
  40834e:	call   0xebcd4aeb
  408353:	jl     0x40832e
  408355:	and    ch,bh
  408357:	jae    0x4082e0
  408359:	fstp   TBYTE PTR ds:0x846e457b
  40835f:	(bad)  
  408360:	outs   dx,BYTE PTR ds:[esi]
  408361:	lds    ebp,FWORD PTR [eax+0x7a]
  408364:	and    eax,0x4cdf085c
  408369:	add    esp,DWORD PTR [eax-0x3b015516]
  40836f:	pushf  
  408370:	mov    BYTE PTR [ebp-0x52ccf1b1],ch
  408376:	and    BYTE PTR [edx],bh
  408378:	scas   eax,DWORD PTR es:[edi]
  408379:	mov    cs,WORD PTR [eax]
  40837b:	add    al,0x39
  40837d:	sub    cl,BYTE PTR [ebx+0x7ed606a4]
  408383:	add    al,0x1
  408385:	outs   dx,DWORD PTR ds:[esi]
  408386:	mov    edx,0xd1c8b438
  40838b:	les    ebx,FWORD PTR [ecx+edx*8]
  40838e:	mov    DWORD PTR [ecx+0x2f167d08],eax
  408394:	inc    eax
  408395:	mov    esi,0xf6827e2c
  40839a:	adc    BYTE PTR [eax],al
  40839c:	adc    DWORD PTR [edi+0x7d102469],ecx
  4083a2:	xchg   ebp,eax
  4083a3:	push   esi
  4083a4:	es sar ch,0x37
  4083a8:	test   al,0x24
  4083aa:	repnz push cs
  4083ac:	and    DWORD PTR [bx+si+0x4ba0],0x29d74f8f
  4083b5:	ss dec esp
  4083b7:	aas    
  4083b8:	popf   
  4083b9:	dec    eax
  4083ba:	sub    bl,bl
  4083bc:	in     al,dx
  4083bd:	pop    ebx
  4083be:	leave  
  4083bf:	retf   
  4083c0:	sti    
  4083c1:	pushf  
  4083c2:	imul   esi,DWORD PTR [edi+0x75],0x3b
  4083c6:	adc    eax,0xa97d6c59
  4083cb:	sti    
  4083cc:	add    esi,DWORD PTR ds:0xc2d12f71
  4083d2:	stos   DWORD PTR es:[edi],eax
  4083d3:	add    DWORD PTR ds:0x404a9423,edi
  4083d9:	inc    eax
  4083da:	or     ah,BYTE PTR [edx-0x29]
  4083dd:	or     BYTE PTR [eax-0x1c],ah
  4083e0:	xchg   DWORD PTR [edx],ecx
  4083e2:	sub    DWORD PTR [esi+0x69],ebx
  4083e5:	aad    0x6e
  4083e7:	std    
  4083e8:	test   BYTE PTR es:[edi-0x3e357151],bh
  4083ef:	push   eax
  4083f0:	retf   0x96c8
  4083f3:	icebp  
  4083f4:	ror    BYTE PTR [esi-0xc],cl
  4083f7:	jb     0x408423
  4083f9:	jo     0x408430
  4083fb:	push   ebp
  4083fc:	call   0xd58b9444
  408401:	ins    BYTE PTR es:[edi],dx
  408402:	inc    ebx
  408403:	fcmovnb st,st(7)
  408405:	jns    0x4083e9
  408407:	jnp    0x408480
  408409:	iret   
  40840a:	cli    
  40840b:	cli    
  40840c:	imul   esi,DWORD PTR [ebp+0x12],0xffffffda
  408410:	adc    ah,BYTE PTR [edx+eax*1+0x24]
  408414:	inc    DWORD PTR [eax]
  408416:	mov    edx,0x6f1f1c55
  40841c:	iret   
  40841d:	adc    al,0x47
  40841f:	xor    eax,0x7fe55e5a
  408424:	ja     0x408449
  408426:	int    0xd5
  408428:	inc    ebp
  408429:	aam    0xf7
  40842b:	inc    eax
  40842c:	or     edi,edi
  40842e:	sbb    esi,DWORD PTR [ebx]
  408430:	jae    0x40846d
  408432:	xchg   ecx,eax
  408433:	adc    esp,DWORD PTR [edi+0x404a8894]
  408439:	jecxz  0x4083e8
  40843b:	xor    bl,BYTE PTR [ecx-0x61314523]
  408441:	es fwait
  408443:	mov    bh,0xc1
  408445:	mulps  xmm1,XMMWORD PTR [eax+0x6f]
  408449:	mov    WORD PTR [edx],?
  40844b:	out    dx,al
  40844c:	sbb    esp,ecx
  40844e:	add    al,0x30
  408450:	test   DWORD PTR [eax-0x3f9e68ed],edi
  408456:	and    ch,BYTE PTR [eax+ebp*2+0x199f3d70]
  40845d:	leave  
  40845e:	test   ah,ch
  408460:	shl    BYTE PTR [ebx-0xdf7ccbb],0x5c
  408467:	xchg   edx,eax
  408468:	fild   WORD PTR [ecx+eiz*2+0x1cf2415]
  40846f:	mov    dh,0xa
  408471:	fcomp  DWORD PTR [ecx]
  408473:	retf   
  408474:	loop   0x40841c
  408476:	(bad)
  40847a:	xor    dl,BYTE PTR [ebx+0x74]
  40847d:	mov    cl,0x7f
  40847f:	fs sahf 
  408481:	in     eax,0x51
  408483:	mov    al,0xe8
  408485:	dec    ebx
  408486:	sbb    al,0x54
  408488:	jo     0x4084a4
  40848a:	xchg   DWORD PTR [esi+edi*1+0x7ec0666c],edi
  408491:	inc    esp
  408492:	inc    ebp
  408493:	jnp    0x4084bd
  408495:	mov    dl,BYTE PTR [ebx+0x3f29bbdd]
  40849b:	enter  0xc805,0xa1
  40849f:	cmp    al,0x78
  4084a1:	lods   eax,DWORD PTR ds:[esi]
  4084a2:	sbb    dh,BYTE PTR [eax+0x63f5458e]
  4084a8:	mov    ebx,0x17645ee6
  4084ad:	sub    esi,ebp
  4084af:	loopne 0x408488
  4084b1:	cmp    BYTE PTR [ebp+0x27d88b8b],cl
  4084b7:	pop    ebx
  4084b8:	and    BYTE PTR [ebx+0x62],cl
  4084bb:	xchg   esi,eax
  4084bc:	sbb    ebx,DWORD PTR [ecx]
  4084be:	out    dx,eax
  4084bf:	retf   
  4084c0:	pop    ds
  4084c1:	inc    edx
  4084c2:	xchg   esp,eax
  4084c3:	lahf   
  4084c4:	or     DWORD PTR [esi-0x77c881f7],esi
  4084ca:	repnz lock rcr BYTE PTR [ecx-0x56],cl
  4084cf:	and    al,BYTE PTR [esi+edi*4]
  4084d2:	sub    al,0x2c
  4084d4:	hlt    
  4084d5:	jecxz  0x408457
  4084d7:	outs   dx,DWORD PTR ds:[esi]
  4084d8:	mov    eax,0xc862b8a5
  4084dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084de:	iret   
  4084df:	push   ecx
  4084e0:	mov    ch,dh
  4084e2:	mov    ebx,DWORD PTR [ebx-0x43]
  4084e5:	inc    BYTE PTR [ebp-0x2]
  4084e8:	push   ss
  4084e9:	or     cl,BYTE PTR [edi]
  4084eb:	mov    edx,0x57d91121
  4084f0:	pop    esi
  4084f1:	jnp    0x40853d
  4084f3:	ins    BYTE PTR es:[edi],dx
  4084f4:	mov    bh,ch
  4084f6:	loop   0x4084f5
  4084f8:	and    DWORD PTR [esi+0x2d],edi
  4084fb:	scas   eax,DWORD PTR es:[edi]
  4084fc:	loopne 0x4084ce
  4084fe:	in     al,0x99
  408500:	jae    0x4084ee
  408502:	sub    bl,BYTE PTR [edx+0x6c281a7]
  408508:	jmp    0xfcf47ae3
  40850d:	daa    
  40850e:	loope  0x40849c
  408510:	add    cl,al
  408512:	sbb    eax,0xc5e5b836
  408517:	lods   eax,DWORD PTR ds:[esi]
  408518:	sub    al,0x49
  40851a:	scas   eax,DWORD PTR es:[edi]
  40851b:	pop    eax
  40851c:	(bad)  
  40851d:	imul   ebp,DWORD PTR [edi+0x62],0x38
  408521:	call   0x5f65:0x9c58b76
  408528:	sar    DWORD PTR [eax-0x753a992a],0x59
  40852f:	leave  
  408530:	sti    
  408531:	sbb    DWORD PTR [ecx-0x171826ee],0x4f
  408538:	fdivr  DWORD PTR [ecx+0x26]
  40853b:	jl     0x408525
  40853d:	jle    0x4084d8
  40853f:	cli    
  408540:	(bad)  
  408541:	test   BYTE PTR [ebp+0x4b],ch
  408544:	push   ss
  408545:	mov    ch,0x29
  408547:	nop
  408548:	add    eax,0x9a672798
  40854d:	sbb    edx,DWORD PTR [edx]
  40854f:	adc    DWORD PTR [edx-0x657216a4],ebp
  408555:	cmp    DWORD PTR [eax],ecx
  408557:	xchg   ebx,eax
  408558:	outs   dx,DWORD PTR ds:[esi]
  408559:	jmp    0xe34a:0x62164792
  408560:	jmp    FWORD PTR [esi-0x7d419064]
  408566:	cmp    BYTE PTR [ebx-0x64720a81],0xe3
  40856d:	cld    
  40856e:	test   eax,0x1e1ec90c
  408573:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408574:	push   edi
  408575:	pop    ebp
  408576:	das    
  408577:	dec    ebp
  408578:	xor    al,BYTE PTR [ecx]
  40857a:	and    esp,eax
  40857c:	sbb    BYTE PTR [ecx-0x786d0c21],cl
  408582:	icebp  
  408583:	out    0xc3,al
  408585:	jmp    0x4085c4
  408587:	nop
  408588:	daa    
  408589:	pop    edi
  40858a:	cs call 0xff7b:0x40afe4e
  408592:	push   ecx
  408594:	mov    bl,0x3d
  408596:	xor    ebx,0x66
  408599:	ds dec ecx
  40859b:	mov    bl,0x47
  40859d:	(bad)  
  40859e:	pop    eax
  40859f:	lods   al,BYTE PTR ds:[esi]
  4085a0:	fidivr DWORD PTR [edi]
  4085a2:	xchg   esi,eax
  4085a3:	frstor [edi+0x14]
  4085a6:	mov    ah,dl
  4085a8:	pop    ebp
  4085a9:	or     DWORD PTR [edi+0x5ad26a3c],0xffffffe0
  4085b0:	aad    0xcb
  4085b2:	es sti 
  4085b4:	jle    0x408630
  4085b6:	or     BYTE PTR [eax],dh
  4085b8:	mov    ch,0x43
  4085ba:	jg     0x4085d9
  4085bc:	out    dx,al
  4085bd:	pop    esp
  4085be:	push   eax
  4085bf:	gs pop es
  4085c1:	stos   BYTE PTR es:[edi],al
  4085c2:	inc    esi
  4085c3:	jge    0x40857c
  4085c5:	(bad)  
  4085c6:	add    esp,DWORD PTR [ecx]
  4085c8:	adc    esi,DWORD PTR [ecx-0x70a4eda4]
  4085ce:	fidivr WORD PTR [eax+ebp*4]
  4085d1:	and    al,0x89
  4085d3:	(bad)  
  4085d4:	fs stos DWORD PTR es:[edi],eax
  4085d6:	xchg   BYTE PTR [edi+0x1],bh
  4085d9:	rol    al,1
  4085db:	add    dh,BYTE PTR [edx+esi*2]
  4085de:	ja     0x40862b
  4085e0:	call   0x900d:0x6431e350
  4085e7:	push   ecx
  4085e8:	les    edi,FWORD PTR [ecx]
  4085ea:	push   ss
  4085eb:	jne    0x408632
  4085ed:	lahf   
  4085ee:	rol    edi,0x5
  4085f1:	jg     0x4085d1
  4085f3:	push   esp
  4085f4:	cmp    eax,0xa7e825aa
  4085f9:	(bad)  
  4085fa:	popf   
  4085fb:	test   al,0x2
  4085fd:	in     al,0x1a
  4085ff:	add    BYTE PTR [edx+ebp*4-0x18],dl
  408603:	int3   
  408604:	adc    eax,0xb4a1411c
  408609:	loopne 0x4085ed
  40860b:	fwait
  40860c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40860d:	bound  esi,QWORD PTR [eax+0x66]
  408610:	push   ds
  408611:	lods   al,BYTE PTR ds:[esi]
  408612:	xor    dl,BYTE PTR [edi+0x62]
  408615:	and    eax,DWORD PTR [esi]
  408617:	xor    al,0x6c
  408619:	inc    esi
  40861a:	cmc    
  40861b:	loope  0x4085d2
  40861d:	aaa    
  40861e:	pop    edi
  40861f:	int3   
  408620:	hlt    
  408621:	xchg   edx,eax
  408622:	mov    al,ds:0xb3b956bc
  408627:	scas   eax,DWORD PTR es:[edi]
  408628:	adc    bh,BYTE PTR [ebx]
  40862a:	scas   al,BYTE PTR es:[edi]
  40862b:	int    0xfb
  40862d:	mov    ds:0xd39f96d5,eax
  408632:	pop    esi
  408633:	cmp    ax,0xe718
  408637:	retf   
  408638:	lgs    ebp,FWORD PTR [edi+0x70]
  40863c:	mov    ds:0x9dac8c9d,eax
  408641:	sti    
  408642:	fcmovb st,st(0)
  408644:	iret   
  408645:	aad    0x6b
  408647:	mov    BYTE PTR [eax-0x67],dl
  40864a:	push   edx
  40864b:	das    
  40864c:	push   0xfffffffd
  40864e:	mov    ebp,ecx
  408650:	call   DWORD PTR [eax+0x12c9f171]
  408656:	or     dl,BYTE PTR [eax+0x4f]
  408659:	repnz mov edi,0x22368ac
  40865f:	scas   eax,DWORD PTR es:[edi]
  408660:	dec    ecx
  408661:	mov    ebx,DWORD PTR [edi-0x7d]
  408664:	dec    eax
  408665:	es stc 
  408667:	jg     0x408613
  408669:	mov    ah,0xa9
  40866b:	push   cs
  40866c:	sahf   
  40866d:	iret   
  40866e:	sbb    BYTE PTR [edi],ch
  408670:	xor    esp,DWORD PTR [ecx+0x6218c6d1]
  408676:	pop    edx
  408677:	pop    ebp
  408678:	push   cs
  408679:	add    edi,DWORD PTR [edx+0x4b]
  40867c:	fs loop 0x40866d
  40867f:	inc    eax
  408680:	add    BYTE PTR [edx],0x15
  408683:	and    BYTE PTR [ebp+0x5900841d],0xbf
  40868a:	dec    edx
  40868b:	inc    edx
  40868c:	gs fwait
  40868e:	js     0x40861b
  408690:	mov    al,ah
  408692:	dec    eax
  408693:	pop    ds
  408694:	mov    DWORD PTR [edx],0x233d67c0
  40869a:	add    BYTE PTR [esi+0x3a1e4669],al
  4086a0:	clc    
  4086a1:	mov    esp,0x3961ef33
  4086a6:	xor    al,0x68
  4086a8:	dec    ebp
  4086a9:	fisub  WORD PTR [esi]
  4086ab:	dec    edi
  4086ac:	(bad)  
  4086ad:	sub    eax,0x62743b61
  4086b2:	sub    cl,ch
  4086b4:	adc    eax,0xcbb57fd5
  4086b9:	xchg   ebp,eax
  4086ba:	stos   DWORD PTR es:[edi],eax
  4086bb:	pop    ecx
  4086bc:	dec    ecx
  4086bd:	sub    BYTE PTR [ecx+0x78],bl
  4086c0:	out    dx,al
  4086c1:	fwait
  4086c2:	inc    edx
  4086c3:	add    al,0x83
  4086c5:	push   0xffffff98
  4086c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086c8:	jb     0x408662
  4086ca:	out    dx,eax
  4086cb:	and    bh,BYTE PTR [esi]
  4086cd:	jge    0x4086d0
  4086cf:	xchg   BYTE PTR [esp+ebx*8],ch
  4086d2:	push   edi
  4086d3:	pop    esp
  4086d4:	push   cs
  4086d5:	adc    ecx,DWORD PTR [esi+eiz*8]
  4086d8:	dec    ecx
  4086d9:	out    0x7b,eax
  4086db:	bound  esi,QWORD PTR [edi-0x1f]
  4086de:	les    ebx,FWORD PTR ds:0x765885aa
  4086e4:	mov    bl,0x29
  4086e6:	fcomp  DWORD PTR [edi-0x7b]
  4086e9:	jg     0x4086f3
  4086eb:	stos   DWORD PTR es:[edi],eax
  4086ec:	push   ds
  4086ed:	pop    es
  4086ee:	jmp    0x4086ca
  4086f0:	sbb    BYTE PTR [eax],bl
  4086f2:	mov    ah,0xc
  4086f4:	shl    ch,0x40
  4086f7:	loope  0x40870b
  4086f9:	adc    eax,0x1420e251
  4086fe:	mov    eax,0x75d6cd71
  408703:	outs   dx,DWORD PTR ds:[esi]
  408704:	push   DWORD PTR [eax]
  408706:	add    ah,ch
  408708:	loopne 0x408734
  40870a:	sub    esi,DWORD PTR [ecx]
  40870c:	push   edi
  40870d:	bswap  esi
  40870f:	xchg   esi,eax
  408710:	ja     0x4086ac
  408712:	xchg   DWORD PTR [esi-0x5c52efa9],ebp
  408718:	lahf   
  408719:	jns    0x4086cb
  40871b:	add    BYTE PTR [eax],bh
  40871d:	jno    0x4086b6
  40871f:	cmp    al,0x29
  408721:	mov    al,ds:0x2e055653
  408726:	(bad)  
  408727:	lock push esi
  408729:	hlt    
  40872a:	jge    0x40872c
  40872c:	jge    0x4086b5
  40872e:	imul   BYTE PTR [edi]
  408730:	inc    edx
  408731:	xlat   BYTE PTR ds:[ebx]
  408732:	clc    
  408733:	push   ss
  408734:	rcl    DWORD PTR [esi],cl
  408736:	or     BYTE PTR [eax+esi*1-0x53],al
  40873a:	pop    ss
  40873b:	mov    BYTE PTR [esi],ah
  40873d:	leave  
  40873e:	push   ebx
  40873f:	nop
  408740:	test   al,0xed
  408742:	cmp    BYTE PTR [eax],0xf3
  408745:	jle    0x40874a
  408747:	shl    esi,1
  408749:	or     eax,0x4badf1fa
  40874e:	jb     0x4087a0
  408750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408751:	pop    ecx
  408752:	ja     0x40877f
  408754:	push   0x21
  408756:	in     al,dx
  408757:	ss jo  0x408791
  40875a:	add    bl,BYTE PTR [esi+0x1c]
  40875d:	sbb    edx,ebx
  40875f:	push   ebp
  408760:	pop    eax
  408761:	mov    ds:0x58b479d0,al
  408766:	jae    0x4087cc
  408768:	inc    BYTE PTR [edx+esi*4]
  40876b:	inc    edi
  40876c:	lahf   
  40876d:	mov    bh,0x40
  40876f:	xor    ebx,0xffffffdc
  408772:	(bad)  
  408773:	cmp    esp,ebx
  408775:	cmp    al,0xed
  408777:	xor    eax,0x8750b8f6
  40877c:	jae    0x4087ed
  40877e:	test   DWORD PTR [edi+0x66325651],ebp
  408784:	inc    edx
  408785:	xor    DWORD PTR [eax+eax*8+0x26aba849],ecx
  40878c:	push   edx
  40878d:	test   eax,0x260e8c67
  408792:	or     dl,BYTE PTR [esi+0x25]
  408795:	call   0x22165570
  40879a:	fadd   QWORD PTR [edx]
  40879c:	shl    BYTE PTR [esi],cl
  40879e:	fcom   st(4)
  4087a0:	sbb    al,0x3e
  4087a2:	xchg   esi,eax
  4087a3:	dec    edi
  4087a4:	adc    DWORD PTR [esi-0x468d0c0b],ebp
  4087aa:	xchg   esp,eax
  4087ab:	(bad)  
  4087ad:	mov    bl,0xd
  4087af:	inc    ecx
  4087b0:	arpl   sp,dx
  4087b2:	or     ecx,0x1cb32d28
  4087b8:	mov    ch,0x86
  4087ba:	jo     0x408798
  4087bc:	mov    esi,0x958b65c0
  4087c1:	xor    al,0x7a
  4087c3:	mov    edx,0x9dfd2c1
  4087c8:	jp     0x408848
  4087ca:	push   ss
  4087cb:	jno    0x4087e0
  4087cd:	pop    ebp
  4087ce:	test   al,ah
  4087d0:	sub    cl,BYTE PTR [eax-0x36]
  4087d3:	fsub   DWORD PTR [ebx+eiz*8]
  4087d6:	adc    edi,DWORD PTR [edx]
  4087d8:	pop    esp
  4087d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087da:	into   
  4087db:	into   
  4087dc:	outs   dx,DWORD PTR ds:[esi]
  4087dd:	dec    eax
  4087de:	scas   eax,DWORD PTR es:[edi]
  4087df:	cli    
  4087e0:	leave  
  4087e1:	adc    BYTE PTR [edx],al
  4087e3:	std    
  4087e4:	psllq  mm1,QWORD PTR [ebp+0x10c47bd8]
  4087eb:	mov    edi,0x277f5d
  4087f0:	mov    eax,0x75a1ad34
  4087f5:	retf   
  4087f6:	(bad)  
  4087f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087f8:	ds or  al,0x89
  4087fb:	in     al,0x8f
  4087fd:	jmp    0x408797
  4087ff:	pusha  
  408800:	loop   0x40879f
  408802:	ret    
  408803:	rcr    DWORD PTR [edx+0x2d],cl
  408806:	test   bh,0xec
  408809:	test   DWORD PTR [edx+esi*2+0x35],ecx
  40880d:	sbb    ebx,0x55255ea8
  408813:	push   cs
  408814:	fadd   st,st(2)
  408816:	jne    0x408848
  408818:	jnp    0x40882b
  40881a:	jp     0x408886
  40881c:	jb     0x4087a4
  40881e:	cmc    
  40881f:	xchg   esi,eax
  408820:	add    ebx,DWORD PTR [ecx+0x57]
  408823:	xchg   edi,eax
  408824:	inc    ebp
  408825:	sub    eax,0xc0d7d98a
  40882a:	pop    esp
  40882b:	ret    
  40882c:	pop    edi
  40882d:	fist   WORD PTR [ebx]
  40882f:	mov    ebp,0x88a0419b
  408834:	aaa    
  408835:	sti    
  408836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408837:	enter  0x4880,0x8a
  40883b:	mov    al,0x67
  40883d:	scas   al,BYTE PTR es:[edi]
  40883e:	loope  0x4087e6
  408840:	nop
  408841:	aad    0xdf
  408843:	aaa    
  408844:	jnp    0x408838
  408846:	push   eax
  408847:	mov    eax,ds:0x531a1c83
  40884c:	ds push 0xa0da2490
  408852:	push   esp
  408853:	fucomi st,st(5)
  408855:	xchg   edx,eax
  408856:	and    dl,BYTE PTR [eax+ecx*1]
  408859:	jo     0x4088b7
  40885b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40885c:	adc    eax,0x8ef85cb6
  408861:	call   0xf06abd21
  408866:	inc    esp
  408867:	jl     0x408858
  408869:	adc    eax,0xc8fb8bd
  40886e:	or     eax,0x10f8452f
  408873:	xchg   ecx,ebp
  408875:	add    eax,DWORD PTR ds:0xe5a19eb2
  40887b:	mov    al,ds:0xa6f75550
  408880:	das    
  408881:	sbb    ecx,DWORD PTR [eax]
  408883:	push   esp
  408884:	stc    
  408885:	push   ebp
  408886:	nop
  408887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408888:	imul   edx,edx,0x0
  40888b:	out    0x2e,eax
  40888d:	and    DWORD PTR [ecx],ebx
  40888f:	in     eax,dx
  408890:	or     bh,ah
  408892:	mov    dh,BYTE PTR [edi+0x44504e4c]
  408898:	mov    gs,WORD PTR [eax+0x1a274a8e]
  40889e:	or     dl,dh
  4088a0:	mov    dl,0x64
  4088a2:	mov    esp,0x6a85175b
  4088a7:	in     al,0xf7
  4088a9:	inc    ebp
  4088aa:	fstp   DWORD PTR [edi-0x7d]
  4088ad:	scas   al,BYTE PTR es:[edi]
  4088ae:	pop    ebp
  4088af:	rcl    BYTE PTR [edi+eiz*8-0x4c],cl
  4088b3:	mov    eax,0x6d5b56dc
  4088b8:	jae    0x408876
  4088ba:	dec    edi
  4088bb:	xchg   esi,eax
  4088bc:	sub    edx,DWORD PTR [edi-0x7ad5e9be]
  4088c2:	cmp    BYTE PTR [esi-0x66],cl
  4088c5:	mov    bl,0x6b
  4088c7:	cmp    edi,eax
  4088c9:	fst    QWORD PTR [ebx+ecx*2]
  4088cc:	sub    ch,BYTE PTR [edx+0x29]
  4088cf:	out    dx,al
  4088d0:	rol    DWORD PTR [ecx-0x5b],cl
  4088d3:	inc    ebp
  4088d4:	stos   BYTE PTR es:[edi],al
  4088d5:	std    
  4088d6:	add    ch,BYTE PTR [eax+0x12]
  4088d9:	dec    ebx
  4088da:	mov    dh,ah
  4088dc:	mov    dh,0xd3
  4088de:	and    edi,DWORD PTR [edi+esi*4]
  4088e1:	sbb    eax,0x861a9f26
  4088e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088e7:	fdivr  DWORD PTR [edx]
  4088e9:	lods   al,BYTE PTR cs:[si]
  4088ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088ed:	ins    DWORD PTR es:[edi],dx
  4088ee:	outs   dx,DWORD PTR ds:[esi]
  4088ef:	sbb    ebx,DWORD PTR [edi+0x797e079e]
  4088f5:	addr16 jge 0x408937
  4088f8:	pop    ds
  4088f9:	dec    edx
  4088fa:	mov    al,0x59
  4088fc:	xchg   ecx,eax
  4088fd:	js     0x4088ff
  4088ff:	std    
  408900:	xor    ch,cl
  408902:	pop    DWORD PTR [edx]
  408904:	pop    ecx
  408905:	fnsave [esi]
  408907:	lea    esp,[ecx+0x65]
  40890a:	jmp    0xecd6a423
  40890f:	out    0xfe,al
  408911:	xor    ah,BYTE PTR [esi]
  408913:	push   edx
  408914:	add    esp,DWORD PTR [ebx]
  408916:	push   ebx
  408917:	pop    es
  408918:	es loopne 0x408933
  40891b:	adc    bl,BYTE PTR [eax-0x38]
  40891e:	xor    esi,ecx
  408920:	sar    DWORD PTR [ebx],0xc2
  408923:	repz mov ds:0xc4bab498,eax
  408929:	jns    0x4088ae
  40892b:	jmp    0x408908
  40892d:	mov    ecx,0xa0167947
  408932:	and    eax,0xbf50581d
  408937:	or     al,0xfc
  408939:	retfw  0x8c65
  40893d:	daa    
  40893e:	adc    BYTE PTR [edi+0x77],dh
  408941:	imul   ebp,DWORD PTR [ebx-0x2d],0x2b309fec
  408948:	dec    edi
  408949:	pop    es
  40894a:	adc    al,BYTE PTR [edx]
  40894c:	xchg   BYTE PTR [ebp+0x9fbe897],cl
  408952:	mov    ecx,DWORD PTR [ebx+0x70ed8c9b]
  408958:	inc    ebx
  408959:	push   edi
  40895a:	adc    BYTE PTR [edx+0x6c],0x9
  40895e:	(bad)  
  408960:	in     eax,0xaf
  408962:	mov    esp,0xda697dcd
  408967:	sbb    BYTE PTR [esi+0x1e],ah
  40896a:	mov    dh,0xda
  40896c:	jns    0x4089c4
  40896e:	xlat   BYTE PTR ds:[ebx]
  40896f:	xchg   edx,eax
  408970:	cld    
  408971:	call   0x79867ff0
  408976:	xor    eax,0x45ddb344
  40897b:	mov    al,0x7e
  40897d:	cmp    al,0xa1
  40897f:	in     eax,dx
  408980:	jmp    0xcdb003b
  408985:	jne    0x4089e9
  408987:	lock dec ebx
  408989:	add    DWORD PTR [ebx],eax
  40898b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40898c:	mov    dh,0x86
  40898e:	rcr    BYTE PTR [ebp-0x451ca33b],cl
  408994:	pop    ss
  408995:	adc    ebp,esp
  408997:	push   0xffffffc1
  408999:	hlt    
  40899a:	jne    0x40899d
  40899c:	or     ebx,ebx
  40899e:	push   ss
  40899f:	jmp    0x914c:0x62b82283
  4089a6:	lds    esi,FWORD PTR [eax+0x20]
  4089a9:	not    eax
  4089ab:	xor    esp,edi
  4089ad:	stos   BYTE PTR es:[edi],al
  4089ae:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089b0:	mov    dh,0x10
  4089b2:	sahf   
  4089b3:	cmp    al,0xd6
  4089b5:	adc    eax,0x20f3e7e
  4089ba:	adc    eax,0x9d74f2a8
  4089bf:	lock sub bh,BYTE PTR [edi-0x7dec65a4]
  4089c6:	sahf   
  4089c7:	xlat   BYTE PTR ds:[ebx]
  4089c8:	xchg   DWORD PTR [ebx],ebx
  4089ca:	not    BYTE PTR ds:0xcca43f2f
  4089d0:	inc    ebp
  4089d1:	push   cs
  4089d2:	scas   eax,DWORD PTR es:[edi]
  4089d3:	inc    eax
  4089d4:	fsub   QWORD PTR [edi+0x3c]
  4089d7:	lods   al,BYTE PTR ds:[esi]
  4089d8:	fld    TBYTE PTR [edx-0x1732029e]
  4089de:	test   eax,0xc8b4cb6d
  4089e3:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4089e5:	enter  0x4f6d,0xe8
  4089e9:	das    
  4089ea:	add    bh,BYTE PTR [ebx+0x1a391ac0]
  4089f0:	in     al,0xd9
  4089f2:	dec    ecx
  4089f3:	adc    ch,BYTE PTR ds:[ecx]
  4089f6:	lock adc al,0xa9
  4089f9:	or     DWORD PTR [esi-0x65f64daf],esi
  4089ff:	adc    DWORD PTR [eax+0x7a98adc7],esp
  408a05:	popf   
  408a06:	stc    
  408a07:	xchg   edi,eax
  408a08:	mov    ds:0x2833e4ef,al
  408a0d:	sub    DWORD PTR [ecx+eax*1],ecx
  408a10:	mov    ds:0x5560a137,eax
  408a15:	fdiv   DWORD PTR [eax+eax*1]
  408a18:	push   edi
  408a19:	xchg   BYTE PTR es:[ebx],ch
  408a1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a1d:	data16 jl 0x408a3c
  408a20:	stos   BYTE PTR es:[edi],al
  408a21:	sti    
  408a22:	(bad)  
  408a23:	mov    ecx,0xba666caa
  408a28:	mov    dh,0x53
  408a2a:	ds pop ds
  408a2c:	sbb    eax,0xdab3156c
  408a31:	repnz lahf 
  408a33:	sub    ecx,eax
  408a35:	pop    ss
  408a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a37:	repnz mov ah,0xed
  408a3a:	ss and al,0x87
  408a3d:	fstp   QWORD PTR [eax+edx*2+0x545860e4]
  408a44:	sar    BYTE PTR [ebx],0x8c
  408a47:	mov    esi,0x6e13edf6
  408a4c:	cs mov ch,0x14
  408a4f:	(bad)
  408a52:	dec    edx
  408a53:	pusha  
  408a54:	pop    ds
  408a55:	out    0x8e,eax
  408a57:	std    
  408a58:	or     BYTE PTR [eax],ch
  408a5a:	jmp    0x45f5:0x36a8af7c
  408a61:	push   ebp
  408a62:	fwait
  408a63:	sar    BYTE PTR [eax-0x52115ae9],cl
  408a69:	loope  0x408a2d
  408a6b:	push   esp
  408a6c:	mov    bl,0x95
  408a6e:	aam    0xfc
  408a70:	mov    ch,0xbd
  408a72:	add    ebx,DWORD PTR [ebx]
  408a74:	adc    BYTE PTR [edi+eax*2-0x6d],al
  408a78:	stos   DWORD PTR es:[edi],eax
  408a79:	les    edi,FWORD PTR [eax*2-0x43172e49]
  408a80:	ret    0xddf0
  408a83:	cli    
  408a84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a85:	push   es
  408a86:	shl    DWORD PTR [ebx],cl
  408a88:	into   
  408a89:	and    eax,0x866f812b
  408a8e:	pushf  
  408a8f:	ret    
  408a90:	dec    ebx
  408a91:	call   0x194ced27
  408a96:	sub    DWORD PTR [edx+eax*2+0x1a21a2],0x73
  408a9e:	jmp    0x408a8f
  408aa0:	inc    ebx
  408aa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408aa2:	out    0x27,eax
  408aa4:	fild   DWORD PTR [ebx+0x13c67e95]
  408aaa:	shl    bh,0xc4
  408aad:	cmp    al,0x9e
  408aaf:	test   DWORD PTR [esi-0x37a1c94c],edi
  408ab5:	dec    esi
  408ab6:	or     DWORD PTR [eax],0xc0010dcb
  408abc:	adc    al,0x1c
  408abe:	and    eax,0x209dcbf6
  408ac3:	cli    
  408ac4:	mov    BYTE PTR [eax-0x56],0x1c
  408ac8:	jge    0x408b27
  408aca:	inc    eax
  408acb:	pop    es
  408acc:	add    dl,BYTE PTR [edi]
  408ace:	xchg   edi,eax
  408acf:	mov    bl,0x2
  408ad1:	push   0x7488e3ae
  408ad6:	icebp  
  408ad7:	cwde   
  408ad8:	cmp    al,0x8
  408ada:	mov    BYTE PTR ds:0x5ba96036,0xee
  408ae1:	cmc    
  408ae2:	mov    dh,0xbc
  408ae4:	cmp    ebp,DWORD PTR [edx]
  408ae6:	dec    ecx
  408ae7:	test   eax,0x11a3b899
  408aec:	push   0x17
  408aee:	mov    ds:0x9025bd4d,eax
  408af3:	scas   al,BYTE PTR es:[edi]
  408af4:	and    BYTE PTR [ebp+0x7350d9c6],bh
  408afa:	or     DWORD PTR [esi+0x65],ecx
  408afd:	jb     0x408b4f
  408aff:	cmc    
  408b00:	dec    edx
  408b01:	inc    DWORD PTR [ecx+0x25ecf7b7]
  408b07:	stos   BYTE PTR es:[edi],al
  408b08:	in     al,0x7b
  408b0a:	mov    edx,0xda561434
  408b0f:	push   DWORD PTR [ebx+0x6cf8dda1]
  408b15:	inc    edi
  408b16:	fwait
  408b17:	xor    al,0xd9
  408b19:	(bad)  
  408b1b:	arpl   WORD PTR [edi],bx
  408b1d:	mov    edx,0x322a4083
  408b22:	lea    esp,[edi]
  408b24:	or     al,0x98
  408b26:	mov    edx,0xb7f615b5
  408b2b:	std    
  408b2c:	lock bound ebp,QWORD PTR [edi-0xf6702c]
  408b33:	or     BYTE PTR [esp+ecx*1],al
  408b36:	xor    eax,0xa9e0bc7e
  408b3b:	sbb    cl,bl
  408b3d:	xchg   ebx,eax
  408b3e:	or     DWORD PTR [ebp+0x69ec5572],eax
  408b44:	adc    al,0xd8
  408b46:	jl     0x408b92
  408b48:	jp     0x408b2a
  408b4a:	fstp   QWORD PTR [ecx]
  408b4c:	outs   dx,BYTE PTR ds:[si]
  408b4e:	(bad)  
  408b4f:	sbb    BYTE PTR [esi+ecx*4],cl
  408b52:	outs   dx,DWORD PTR ds:[esi]
  408b53:	push   edi
  408b54:	sbb    dh,BYTE PTR [ecx]
  408b56:	pushf  
  408b57:	fs push ecx
  408b59:	dec    sp
  408b5b:	and    DWORD PTR [ebx+0x7d87703f],ebx
  408b61:	jmp    0x408b17
  408b63:	push   esp
  408b64:	fist   WORD PTR [edi+0x6a]
  408b67:	cld    
  408b68:	or     dl,dh
  408b6a:	ret    
  408b6b:	sub    DWORD PTR [ebx],ebp
  408b6d:	shr    DWORD PTR [ebx-0x49],1
  408b70:	ins    BYTE PTR es:[edi],dx
  408b71:	and    DWORD PTR [edx],0x1
  408b74:	sar    DWORD PTR [edx],cl
  408b76:	pop    ss
  408b77:	adc    al,0xb4
  408b79:	cmp    DWORD PTR [eax],ecx
  408b7b:	retf   0x14c1
  408b7e:	pop    ebx
  408b7f:	test   DWORD PTR [edx+0x6e4f43c1],ebx
  408b85:	popf   
  408b86:	les    edx,FWORD PTR [eax-0x3f66e714]
  408b8c:	push   edx
  408b8d:	xor    DWORD PTR [ebp-0x10b0e078],esi
  408b93:	push   ecx
  408b94:	out    dx,al
  408b95:	xor    al,0x6d
  408b97:	inc    ebx
  408b98:	jmp    0x265db280
  408b9d:	popa   
  408b9e:	call   ebx
  408ba0:	iret   
  408ba1:	push   cs
  408ba2:	dec    edx
  408ba3:	xor    dl,BYTE PTR [eax+0x1dd780d8]
  408ba9:	xor    al,0x40
  408bab:	push   ds
  408bac:	xchg   DWORD PTR [eax+0x23876df3],ebx
  408bb2:	sub    DWORD PTR [ebx],ebx
  408bb4:	mov    ecx,0xa4f9e32b
  408bb9:	pop    es
  408bba:	out    dx,al
  408bbb:	not    BYTE PTR ds:0xc74b70bc
  408bc1:	cwde   
  408bc2:	ds lahf 
  408bc4:	std    
  408bc5:	div    BYTE PTR cs:[edx-0x43]
  408bc9:	push   cs
  408bca:	imul   edi,DWORD PTR [ebx],0x8d4838e7
  408bd0:	xchg   ebx,eax
  408bd1:	icebp  
  408bd2:	jmp    0xd7e8fcca
  408bd7:	push   edx
  408bd8:	push   0xffffffc2
  408bda:	sbb    BYTE PTR [eiz*2+0x229cf331],ch
  408be1:	data16 adc bl,BYTE PTR [esi-0x1e]
  408be5:	dec    esp
  408be6:	xchg   BYTE PTR [esi],al
  408be8:	and    BYTE PTR [esi+0x1a18789],0xec
  408bef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bf0:	mov    edi,0x51e8d482
  408bf5:	cmc    
  408bf6:	sahf   
  408bf7:	push   ecx
  408bf8:	adc    DWORD PTR [ebx],eax
  408bfa:	sar    al,1
  408bfc:	cli    
  408bfd:	scas   al,BYTE PTR es:[edi]
  408bfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bff:	xor    bl,BYTE PTR [ebp-0x70b20069]
  408c05:	retf   
  408c06:	xlat   BYTE PTR ds:[ebx]
  408c07:	jae    0x408c02
  408c09:	or     edi,esi
  408c0b:	mov    edi,ecx
  408c0d:	push   ebx
  408c0e:	jl     0x408be2
  408c10:	rcr    BYTE PTR [ecx+0x39092731],cl
  408c16:	inc    ebp
  408c17:	inc    edx
  408c18:	fdivr  QWORD PTR [edx+esi*1+0x2e7ad030]
  408c1f:	mov    bh,0x62
  408c21:	repnz mov dh,0xbf
  408c24:	imul   BYTE PTR [ebp+0x2c]
  408c27:	call   0xaf2647d9
  408c2c:	icebp  
  408c2d:	(bad)  
  408c2e:	sbb    BYTE PTR [ebp+0x40],al
  408c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c32:	push   eax
  408c33:	into   
  408c34:	cmp    BYTE PTR [ecx],ch
  408c36:	pop    ebp
  408c37:	mov    cl,0x9f
  408c39:	rcr    ebx,0x61
  408c3c:	fwait
  408c3d:	icebp  
  408c3e:	cmp    eax,0xe78a4ccb
  408c43:	push   ebx
  408c44:	ret    
  408c45:	cmp    ah,BYTE PTR [ebp+0x5e]
  408c48:	dec    ecx
  408c49:	xchg   cx,ax
  408c4b:	mov    bh,BYTE PTR [edi]
  408c4d:	call   esi
  408c4f:	sbb    DWORD PTR [ecx],ebp
  408c51:	cmp    ebx,DWORD PTR [ecx+0x511c1b62]
  408c57:	mov    ecx,0xfd20b9a7
  408c5c:	xor    esi,DWORD PTR [ebp-0x2c]
  408c5f:	mov    ebx,0x5ac143f1
  408c64:	inc    esi
  408c65:	lahf   
  408c66:	xchg   BYTE PTR [eax+0x59],ch
  408c69:	(bad)  
  408c6a:	addr16 call 0x5a897d59
  408c70:	in     eax,dx
  408c71:	cs jnp 0x408c9e
  408c74:	adc    BYTE PTR [esp+ebx*1-0x6d3f611e],ah
  408c7b:	lods   al,BYTE PTR ds:[esi]
  408c7c:	sbb    ebx,DWORD PTR [edi+eiz*4-0x50]
  408c80:	fxch   st(6)
  408c82:	sti    
  408c83:	ins    BYTE PTR es:[edi],dx
  408c84:	scas   al,BYTE PTR es:[edi]
  408c85:	mov    dh,0x9d
  408c87:	test   al,0xf9
  408c89:	enter  0x75f,0x8
  408c8d:	lods   al,BYTE PTR ds:[esi]
  408c8e:	fsubr  DWORD PTR [edi-0x1e5a9cf0]
  408c94:	shl    DWORD PTR [edi],1
  408c96:	mov    al,ds:0x8601c4b8
  408c9b:	or     ebp,edx
  408c9d:	inc    eax
  408c9e:	or     eax,0xf919a34c
  408ca3:	fsubr  DWORD PTR [ebx]
  408ca5:	cld    
  408ca6:	sub    eax,DWORD PTR [edi-0xc5a7018]
  408cac:	or     bh,BYTE PTR [esi-0x10f3738a]
  408cb2:	imul   ecx,ebp,0xffffffac
  408cb5:	mov    ds:0x88d707b1,eax
  408cba:	cmp    ch,BYTE PTR [ebp+0x19e6e0b9]
  408cc0:	mov    BYTE PTR [ebp-0x74c97976],cl
  408cc6:	fcomip st,st(0)
  408cc8:	fidiv  DWORD PTR [ebx-0x5afaf42d]
  408cce:	inc    ecx
  408ccf:	fwait
  408cd0:	call   FWORD PTR [edx]
  408cd2:	sbb    al,0xe
  408cd4:	or     eax,0x6c5d0cf
  408cd9:	add    esi,0xffffffc9
  408cdc:	dec    ecx
  408cdd:	in     al,dx
  408cde:	sbb    dh,BYTE PTR [esp+ebp*1+0x34fdb563]
  408ce5:	ror    DWORD PTR [esi],0x15
  408ce8:	mov    dl,0x27
  408cea:	imul   eax,DWORD PTR [edi+edi*8],0xdf5f9e27
  408cf1:	adc    al,0x7e
  408cf3:	or     al,BYTE PTR [esi-0x14]
  408cf6:	push   ebx
  408cf7:	pop    edx
  408cf8:	dec    esi
  408cf9:	aas    
  408cfa:	jnp    0x408d54
  408cfc:	push   es
  408cfd:	nop
  408cfe:	sbb    DWORD PTR [esi],eax
  408d00:	sub    ebx,edx
  408d02:	cmp    ah,BYTE PTR [ebp+0x1e]
  408d05:	cmp    DWORD PTR [ebx],edx
  408d07:	and    eax,0x91708e38
  408d0c:	inc    eax
  408d0d:	jmp    0x63860711
  408d12:	inc    esi
  408d13:	xchg   esi,eax
  408d14:	aas    
  408d15:	mov    DWORD PTR [esp+eiz*4+0x4b],edi
  408d19:	and    eax,0xcb90c4ce
  408d1e:	out    0xc8,al
  408d20:	sbb    eax,0xca84e8c7
  408d25:	xchg   esp,eax
  408d26:	push   es
  408d27:	(bad)  
  408d28:	push   0x73
  408d2a:	cmp    eax,0xd47f3a29
  408d2f:	out    0xda,eax
  408d31:	gs push cs
  408d33:	call   0x59a0d3ab
  408d38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d39:	ds je  0x408d24
  408d3c:	xor    BYTE PTR es:[edi+0x3],cl
  408d40:	and    ebx,DWORD PTR [eax-0x66]
  408d43:	sub    DWORD PTR [esi],ebx
  408d45:	js     0x408cfb
  408d47:	adc    eax,DWORD PTR [ecx-0xa]
  408d4a:	shr    BYTE PTR [eax+0x26b96550],0x78
  408d51:	(bad)  
  408d52:	xchg   ebx,eax
  408d53:	jnp    0x408d1b
  408d55:	jle    0x408d46
  408d57:	xchg   edx,eax
  408d58:	jg     0x408d6c
  408d5a:	retf   0x7674
  408d5d:	cmc    
  408d5e:	pop    ecx
  408d5f:	mov    al,0x48
  408d61:	dec    ebx
  408d62:	xlat   BYTE PTR ds:[ebx]
  408d63:	adc    BYTE PTR [eax-0x40],cl
  408d66:	outs   dx,BYTE PTR ds:[esi]
  408d67:	enter  0x8a49,0x13
  408d6b:	ins    DWORD PTR es:[edi],dx
  408d6c:	inc    edx
  408d6d:	loope  0x408dee
  408d6f:	and    DWORD PTR ds:[eax],edi
  408d72:	mov    ?,WORD PTR ds:0x7b27f608
  408d78:	mov    ch,0x2e
  408d7a:	daa    
  408d7b:	push   ebp
  408d7c:	(bad)  
  408d7d:	push   edi
  408d7e:	jo     0x408d60
  408d80:	jns    0x408d25
  408d82:	jb     0x408d70
  408d84:	in     ax,dx
  408d86:	xor    DWORD PTR [edx],0xf
  408d89:	dec    esp
  408d8a:	test   eax,0x41ebddb7
  408d8f:	cmp    ch,al
  408d91:	mov    edi,DWORD PTR ds:0x17cc0a5a
  408d97:	push   eax
  408d98:	(bad)  
  408d99:	lock jmp 0x1adfbe8f
  408d9f:	fimul  WORD PTR [ebp+0x229fd99]
  408da5:	shl    ah,0x7b
  408da8:	(bad)  
  408da9:	add    eax,0x49dfa3be
  408dae:	(bad)  
  408daf:	jbe    0x408d3d
  408db1:	xchg   dh,ah
  408db3:	mov    esp,0x13dc6312
  408db8:	mov    dh,bl
  408dba:	popf   
  408dbb:	jae    0x408dff
  408dbd:	(bad)  
  408dbf:	stc    
  408dc0:	out    0xde,eax
  408dc2:	sbb    ah,dl
  408dc4:	pop    ebp
  408dc5:	sti    
  408dc6:	ret    0xa9ce
  408dc9:	popf   
  408dca:	cmc    
  408dcb:	jns    0x408dcb
  408dcd:	jg     0x408db0
  408dcf:	imul   ebp,DWORD PTR [eax-0x10],0x9145d443
  408dd6:	cmc    
  408dd7:	rcl    BYTE PTR [eax-0x60],1
  408dda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ddb:	jo     0x408e02
  408ddd:	xor    ebx,DWORD PTR [ebx+0x122f7c9a]
  408de3:	(bad)  
  408de4:	leave  
  408de5:	pop    ss
  408de6:	mov    ebp,0x7e3fd23a
  408deb:	push   cs
  408dec:	mov    BYTE PTR [esi+0x303c6cc3],bl
  408df2:	adc    BYTE PTR [eax+0x5c],0x67
  408df6:	inc    DWORD PTR [ebx]
  408df8:	mov    ah,0x56
  408dfa:	xor    eax,0xc33da961
  408dff:	rcl    edi,1
  408e01:	imul   ecx,edx,0x76
  408e04:	(bad)  
  408e05:	nop
  408e06:	sub    eax,0x4dc0b531
  408e0b:	mov    esi,DWORD PTR [eax-0x2ae1b90e]
  408e11:	jmp    0x408e7b
  408e13:	rcl    BYTE PTR [eax],1
  408e15:	sub    eax,0x79f1d30d
  408e1a:	in     eax,dx
  408e1b:	add    al,0xa9
  408e1d:	cmc    
  408e1e:	xchg   esp,eax
  408e1f:	out    0x10,eax
  408e21:	pop    ds
  408e22:	loope  0x408e07
  408e24:	inc    esp
  408e25:	mov    edx,0xa4c2294
  408e2a:	jne    0x408dfb
  408e2c:	and    BYTE PTR [eax],ah
  408e2e:	loopne 0x408e51
  408e30:	pop    ds
  408e31:	or     ah,al
  408e33:	retf   0xa539
  408e36:	push   edx
  408e37:	pop    esp
  408e38:	sbb    al,0x7f
  408e3a:	stos   BYTE PTR es:[edi],al
  408e3b:	mov    ebx,0x2924e3f8
  408e40:	jl     0x408dd3
  408e42:	fld    DWORD PTR ds:0x73a9914b
  408e48:	xchg   ebp,eax
  408e49:	dec    eax
  408e4a:	xchg   ebx,ebx
  408e4c:	xchg   esp,eax
  408e4d:	sub    al,0xc4
  408e4f:	mov    eax,ds:0x14438b3a
  408e54:	mov    ah,BYTE PTR [edx-0x59]
  408e57:	push   edx
  408e58:	mov    eax,0x5ef80914
  408e5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e5e:	pop    edx
  408e5f:	and    DWORD PTR [edi-0x4da8372a],ebp
  408e65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e66:	es iret 
  408e68:	mov    DWORD PTR [eax+0x76],esp
  408e6b:	mov    edx,0xbdc89224
  408e70:	repz imul edx,ebp,0x28
  408e74:	cmp    bl,BYTE PTR [esi]
  408e76:	loop   0x408e80
  408e78:	fmul   QWORD PTR [edi]
  408e7a:	ins    BYTE PTR es:[edi],dx
  408e7b:	or     ecx,DWORD PTR [ebp+0xc]
  408e7e:	(bad)  
  408e7f:	clc    
  408e80:	in     eax,0x77
  408e82:	and    BYTE PTR [edx+0x69d5fd0a],ah
  408e88:	adc    BYTE PTR [ecx],ah
  408e8a:	and    DWORD PTR [ebp-0x6bfc62c5],edi
  408e90:	pop    edi
  408e91:	repz or DWORD PTR [edi+0x2b],0xf
  408e96:	push   edx
  408e97:	xor    esp,ebp
  408e99:	pop    ebx
  408e9a:	push   0xab81ad2a
  408e9f:	add    DWORD PTR [edi+0x20c9b8d4],edi
  408ea5:	(bad)  
  408ea6:	sub    edx,ebp
  408ea8:	js     0x408ee5
  408eaa:	pushf  
  408eab:	push   ds
  408eac:	xor    dh,BYTE PTR [ebx+0x6ca3e4cc]
  408eb2:	ja     0x408f01
  408eb4:	sub    bh,BYTE PTR [edx+0x70]
  408eb7:	loopne 0x408ea7
  408eb9:	in     al,0x78
  408ebb:	xchg   ecx,eax
  408ebc:	iret   
  408ebd:	add    cl,dl
  408ebf:	mov    dh,BYTE PTR [edx+0x22]
  408ec2:	mov    eax,ds:0x6d8006bb
  408ec7:	in     al,0x2e
  408ec9:	outs   dx,BYTE PTR ds:[esi]
  408eca:	into   
  408ecb:	test   BYTE PTR [ebx],ch
  408ecd:	push   esi
  408ece:	jns    0x408ea0
  408ed0:	inc    ecx
  408ed1:	mov    cl,cl
  408ed3:	addr16 add al,0x38
  408ed6:	repz add DWORD PTR [ecx-0x5745e7e4],eax
  408edd:	sbb    dl,bh
  408edf:	daa    
  408ee0:	int    0xfe
  408ee2:	sbb    eax,0xfed0106d
  408ee7:	cmp    esi,eax
  408ee9:	sbb    bh,BYTE PTR [eax+0x4f]
  408eec:	and    dh,BYTE PTR [ecx-0x5f]
  408eef:	mov    ds:0x204ea10b,eax
  408ef4:	in     eax,0xce
  408ef6:	rcl    bl,0x78
  408ef9:	push   eax
  408efa:	or     al,0x1
  408efc:	into   
  408efd:	shl    BYTE PTR [edi-0x6ca6988c],0x63
  408f04:	mov    al,0x9e
  408f06:	pop    edi
  408f07:	shl    DWORD PTR [eax-0x5d],0x25
  408f0b:	sbb    bh,ch
  408f0d:	lock imul edx,DWORD PTR [ebx],0x357f084a
  408f14:	sbb    al,0x6c
  408f16:	lds    ebp,FWORD PTR [ecx]
  408f18:	dec    ecx
  408f19:	sub    eax,edx
  408f1b:	out    dx,eax
  408f1c:	pop    esi
  408f1d:	gs out dx,eax
  408f1f:	jne    0x408f4c
  408f21:	iret   
  408f22:	pop    edx
  408f23:	das    
  408f24:	je     0x408ee1
  408f26:	fs jle 0x408ee5
  408f29:	mov    eax,0x5a2db27e
  408f2e:	stos   BYTE PTR es:[edi],al
  408f2f:	div    bl
  408f31:	aad    0xb5
  408f33:	sub    al,0x59
  408f35:	jnp    0x408f37
  408f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f38:	sbb    al,0xd
  408f3a:	ins    DWORD PTR es:[edi],dx
  408f3b:	jno    0x408f67
  408f3d:	ja     0x408f7f
  408f3f:	fidiv  DWORD PTR [edx-0x8]
  408f42:	jne    0x408eda
  408f44:	lea    edi,[ebp+ebx*1+0x3f736bdd]
  408f4b:	or     DWORD PTR [ecx-0x4c2665fb],edi
  408f51:	sti    
  408f52:	int3   
  408f53:	and    al,0x83
  408f55:	sub    BYTE PTR [ecx],al
  408f57:	xor    DWORD PTR [eax],ecx
  408f59:	int3   
  408f5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f5b:	sub    edi,DWORD PTR [eax]
  408f5d:	call   0xc392:0xdc176092
  408f64:	repz mov esp,0x70b94dba
  408f6a:	xor    al,0x5b
  408f6c:	xor    al,0x12
  408f6e:	add    eax,0x8b8c6e1e
  408f73:	mov    dl,0xda
  408f75:	ds in  eax,dx
  408f77:	mov    edx,DWORD PTR [ecx]
  408f79:	mov    bl,0xfd
  408f7b:	jp     0x408f26
  408f7d:	adc    BYTE PTR [ebp+0x768b6ac8],bl
  408f83:	pop    es
  408f84:	popf   
  408f85:	into   
  408f86:	sbb    eax,0x85567500
  408f8b:	into   
  408f8c:	ins    BYTE PTR es:[edi],dx
  408f8d:	mov    dl,0x4d
  408f8f:	loopne 0x408f8e
  408f91:	mov    BYTE PTR [eax-0x317aef0f],ah
  408f97:	stos   BYTE PTR es:[edi],al
  408f98:	push   es
  408f99:	arpl   WORD PTR [edi-0x6525738a],si
  408f9f:	arpl   sp,cx
  408fa1:	je     0x408fe5
  408fa3:	mov    esi,0xcebd8fc
  408fa8:	cmp    cl,BYTE PTR [ebx]
  408faa:	adc    eax,0x6d3ee0df
  408faf:	jb     0x408fd6
  408fb1:	sbb    eax,DWORD PTR [edx-0x532808f4]
  408fb7:	push   ecx
  408fb8:	mov    edi,DWORD PTR [edi+ecx*8-0x3988aed2]
  408fbf:	outs   dx,DWORD PTR ds:[esi]
  408fc0:	pusha  
  408fc1:	(bad)  
  408fc2:	out    0x7b,eax
  408fc4:	mul    BYTE PTR [ebp+0x2694bc78]
  408fca:	or     al,0xb5
  408fcc:	xchg   ecx,eax
  408fcd:	sbb    cl,al
  408fcf:	xchg   ecx,eax
  408fd0:	out    0xd7,al
  408fd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fd3:	mov    ds:0x12ebeeeb,al
  408fd8:	jp     0x408fbc
  408fda:	inc    esi
  408fdb:	nop
  408fdc:	jbe    0x40904f
  408fde:	ret    
  408fdf:	mov    eax,0xfa607877
  408fe4:	adc    ecx,DWORD PTR [edi]
  408fe6:	cmp    eax,0xf800460b
  408feb:	test   DWORD PTR [eax-0xc],edi
  408fee:	imul   esp,DWORD PTR [ebp+ebx*1-0x375f0a3d],0xc554c6dc
  408ff9:	lods   al,BYTE PTR ds:[esi]
  408ffa:	cld    
  408ffb:	adc    eax,0x2a647243
  409000:	inc    esi
  409001:	sbb    eax,0x26d42e3a
  409006:	shl    DWORD PTR [eax],0xc
  409009:	or     BYTE PTR [ebx+0x24],0xe3
  40900d:	aad    0x36
  40900f:	sbb    DWORD PTR [ebx+0x25],0xffffff8c
  409013:	popa   
  409014:	xchg   esp,eax
  409015:	jecxz  0x40903b
  409017:	sub    al,0x67
  409019:	cli    
  40901a:	gs in  al,0x8b
  40901d:	stos   DWORD PTR es:[edi],eax
  40901e:	mov    ecx,0x4ea1ae85
  409023:	push   cs
  409024:	push   esp
  409025:	shl    DWORD PTR [eax+esi*4+0x69945b1b],1
  40902c:	or     bl,al
  40902e:	cld    
  40902f:	ret    
  409030:	enter  0x2662,0x3f
  409034:	xchg   esp,eax
  409035:	ins    BYTE PTR es:[edi],dx
  409036:	scas   al,BYTE PTR es:[edi]
  409037:	push   0xda819829
  40903c:	jg     0x408fc0
  40903e:	sbb    al,0x25
  409040:	lds    ebx,FWORD PTR [ebp+eiz*1-0x22]
  409044:	sti    
  409045:	arpl   WORD PTR [ebp-0x73388593],di
  40904b:	jne    0x4090b8
  40904d:	es lock aas 
  409050:	add    ch,BYTE PTR [edx-0x76786cf9]
  409056:	sub    esp,DWORD PTR ds:[edi+ebp*1]
  40905a:	sbb    dl,BYTE PTR [esi+0x58]
  40905d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40905e:	mov    al,ds:0xa028a526
  409063:	fcom   QWORD PTR [edi-0x37]
  409066:	dec    esi
  409067:	test   al,0x37
  409069:	mov    edi,gs
  40906b:	loop   0x4090c8
  40906d:	jecxz  0x40903b
  40906f:	mov    eax,ds:0x195273d5
  409074:	inc    esp
  409075:	jns    0x409080
  409077:	shl    BYTE PTR [edi+0x28],0x29
  40907b:	mov    ebp,0x1a6ec81d
  409080:	jbe    0x4090d0
  409082:	rcr    BYTE PTR [si+0x6670],cl
  409087:	xor    al,0x10
  409089:	cwde   
  40908a:	jns    0x409092
  40908c:	mov    ds:0x94e2c71b,al
  409091:	and    ebp,ebp
  409093:	cmp    DWORD PTR [ebp-0x4a],ebp
  409096:	retf   0xce32
  409099:	or     eax,0x55fe986e
  40909e:	ficomp DWORD PTR [edx]
  4090a0:	mov    ch,0x6d
  4090a2:	stos   BYTE PTR es:[edi],al
  4090a3:	imul   eax,DWORD PTR [edi-0x8fe1a45],0xffffffd9
  4090aa:	or     BYTE PTR ds:0xa17d34a3,al
  4090b0:	cwde   
  4090b1:	jo     0x409108
  4090b3:	jnp    0x4090db
  4090b5:	ror    ch,1
  4090b7:	leave  
  4090b8:	and    al,0x66
  4090ba:	out    0x8c,al
  4090bc:	push   ebp
  4090bd:	hlt    
  4090be:	pop    eax
  4090bf:	jnp    0x409104
  4090c1:	xchg   BYTE PTR [ecx+0x45],cl
  4090c4:	jmp    0x647f:0x9b2de8d6
  4090cb:	js     0x409115
  4090cd:	aad    0x2d
  4090cf:	mov    dh,0x2b
  4090d1:	jnp    0x4090a2
  4090d3:	popf   
  4090d4:	aad    0xcb
  4090d6:	jl     0x4090b5
  4090d8:	pop    es
  4090d9:	inc    ecx
  4090da:	cmp    al,0xb
  4090dc:	add    al,0xf6
  4090de:	out    dx,eax
  4090df:	fisttp QWORD PTR [eax-0x9858132]
  4090e5:	push   ecx
  4090e6:	xchg   BYTE PTR [ecx+0x36c13d80],bl
  4090ec:	lds    esp,FWORD PTR [edx]
  4090ee:	ret    0x319
  4090f1:	and    cl,BYTE PTR [esp+ecx*2+0x7266323]
  4090f8:	push   ebp
  4090f9:	jmp    0xd8dd1469
  4090fe:	pop    esp
  4090ff:	push   es
  409100:	cli    
  409101:	mov    eax,0x36da87c1
  409106:	and    eax,0x120b91b5
  40910b:	(bad)
  40910e:	mov    eax,ds:0xda553315
  409113:	test   dl,cl
  409115:	push   ds
  409116:	jbe    0x4090dd
  409118:	inc    ebx
  409119:	dec    edi
  40911a:	popf   
  40911b:	add    dh,BYTE PTR [eax]
  40911d:	popf   
  40911e:	push   ds
  40911f:	sti    
  409120:	jns    0x409134
  409122:	in     eax,0xa7
  409124:	mov    ah,0x17
  409126:	push   ds
  409127:	fdiv   st(4),st
  409129:	mov    bh,0x6a
  40912b:	push   ds
  40912c:	iret   
  40912d:	cld    
  40912e:	retf   0xfd
  409131:	sub    ecx,ecx
  409133:	test   DWORD PTR [ebx+0x78],eax
  409136:	xchg   BYTE PTR [edi+0x43f18106],ah
  40913c:	int3   
  40913d:	sbb    bh,BYTE PTR [ecx+0x27]
  409140:	sbb    bl,BYTE PTR [esi+0x40c35911]
  409146:	sub    ecx,ecx
  409148:	sub    al,0x2f
  40914a:	shl    BYTE PTR ds:0x333d754c,1
  409150:	sub    cl,BYTE PTR [edx+0x24]
  409153:	fs xchg ecx,eax
  409155:	inc    esi
  409156:	add    cl,bl
  409158:	xor    eax,0xb52afce7
  40915d:	mov    eax,0x9700f423
  409162:	stos   DWORD PTR es:[edi],eax
  409163:	(bad)  
  409165:	clc    
  409166:	inc    ebp
  409167:	and    bl,BYTE PTR [edi]
  409169:	sbb    al,0x62
  40916b:	push   0xfd57bd2f
  409170:	sub    ecx,edx
  409172:	xchg   esi,eax
  409173:	cdq    
  409174:	and    DWORD PTR [esi-0x53],esi
  409177:	fwait
  409178:	(bad)
  40917c:	adc    eax,0x9681d42b
  409181:	inc    edx
  409182:	mov    fs,WORD PTR [edi]
  409184:	clc    
  409185:	adc    esp,DWORD PTR [ebx-0x4b95771]
  40918b:	jle    0x4091b0
  40918d:	fild   QWORD PTR [ecx-0x3c9ab811]
  409193:	lods   eax,DWORD PTR ds:[esi]
  409194:	dec    esp
  409195:	mov    ds:0x5ba9b3fb,al
  40919a:	(bad)  
  40919b:	aaa    
  40919c:	loope  0x409217
  40919e:	call   0x3deb:0x77c572e1
  4091a5:	in     eax,0x29
  4091a7:	ror    DWORD PTR [esi+0x3e759fe],1
  4091ad:	imul   ecx,edi,0xffffffdf
  4091b0:	(bad)  
  4091b1:	fisubr DWORD PTR [esi+0x13]
  4091b4:	aaa    
  4091b5:	stc    
  4091b6:	pop    edx
  4091b7:	xcrypt-ctr 
  4091ba:	dec    ecx
  4091bb:	das    
  4091bc:	inc    ebp
  4091bd:	mov    dh,0xd5
  4091bf:	arpl   WORD PTR fs:[edx+0x306fc53a],si
  4091c6:	lea    ecx,[edi+esi*2-0x19a911fc]
  4091cd:	mov    dl,dl
  4091cf:	test   ecx,0x256ab756
  4091d5:	dec    eax
  4091d6:	shr    BYTE PTR [ecx-0x6bc822c],1
  4091dc:	out    dx,eax
  4091dd:	std    
  4091de:	sbb    BYTE PTR [esi+0x6],cl
  4091e1:	outs   dx,BYTE PTR ds:[esi]
  4091e2:	leave  
  4091e3:	mov    es,WORD PTR [edi+0x3779864f]
  4091e9:	inc    edi
  4091ea:	push   ss
  4091eb:	neg    BYTE PTR [ecx-0x74bf0c37]
  4091f1:	sbb    al,0x8c
  4091f3:	mov    ds:0xae9c9ee3,eax
  4091f8:	or     edx,DWORD PTR [esp+edx*4-0x73]
  4091fc:	push   es
  4091fd:	imul   esi,DWORD PTR [esi+0x180e2c22],0xffffffd4
  409204:	pop    di
  409206:	lock sahf 
  409208:	lods   al,BYTE PTR ds:[esi]
  409209:	and    eax,DWORD PTR [esi-0x21e0f79a]
  40920f:	stc    
  409210:	sbb    esp,DWORD PTR [eax]
  409212:	cdq    
  409213:	mov    ecx,0x7599d14
  409218:	adc    eax,0x73af3d0f
  40921d:	stc    
  40921e:	add    ch,BYTE PTR [edx-0x3c]
  409221:	mov    bh,0x1a
  409223:	fwait
  409224:	and    bh,BYTE PTR [esi]
  409226:	xor    dl,bl
  409228:	imul   ecx,esp,0x30
  40922b:	mov    bh,0x72
  40922d:	das    
  40922e:	jns    0x409297
  409230:	loopne 0x40928c
  409232:	aaa    
  409233:	xor    ah,BYTE PTR [esi]
  409235:	stos   BYTE PTR es:[edi],al
  409236:	and    DWORD PTR [edx+0x10],eax
  409239:	aam    0xb0
  40923b:	dec    eax
  40923c:	test   BYTE PTR [ecx+0x3a0f18f6],0xc0
  409243:	xlat   BYTE PTR ds:[ebx]
  409244:	ins    BYTE PTR es:[edi],dx
  409245:	shl    DWORD PTR [esi+0x33],0x2c
  409249:	imul   eax,DWORD PTR [ebx],0xffffffe0
  40924c:	scas   al,BYTE PTR es:[edi]
  40924d:	xchg   edi,eax
  40924e:	jns    0x4091d0
  409250:	pop    edi
  409251:	jle    0x40927d
  409253:	pop    ds
  409254:	push   ebx
  409255:	imul   esi,DWORD PTR [esi-0x30c6b56d],0x7c435dac
  40925f:	push   es
  409260:	push   edx
  409261:	cli    
  409262:	nop
  409263:	push   esp
  409264:	or     DWORD PTR [ebx-0x63],esp
  409267:	mov    edi,ds
  409269:	jns    0x409250
  40926b:	sub    DWORD PTR [edi],ebp
  40926d:	cmp    BYTE PTR [edx],0xb1
  409270:	jmp    0x409215
  409272:	jge    0x4092b3
  409274:	dec    edi
  409275:	mov    esp,0x74626137
  40927a:	loope  0x40921a
  40927c:	loopne 0x4092e1
  40927e:	comiss xmm1,xmm0
  409281:	cmp    al,0xe0
  409283:	jle    0x409270
  409285:	pop    eax
  409286:	lahf   
  409287:	fadd   DWORD PTR [esi-0x18e32bce]
  40928d:	or     ch,BYTE PTR [ebx-0x7e]
  409290:	pop    esi
  409291:	push   eax
  409292:	lods   al,BYTE PTR ds:[esi]
  409293:	or     ah,bh
  409295:	push   esi
  409296:	mov    dh,BYTE PTR [ebx+0x9]
  409299:	fisttp QWORD PTR [ecx]
  40929b:	mov    edx,DWORD PTR [ecx+0x22f7152]
  4092a1:	xor    esp,DWORD PTR [edi-0x1ac18173]
  4092a7:	std    
  4092a8:	ret    0xd153
  4092ab:	cmp    BYTE PTR [ecx],dh
  4092ad:	icebp  
  4092ae:	je     0x409276
  4092b0:	(bad)  
  4092b1:	bound  esp,QWORD PTR [ecx-0x32e9fd95]
  4092b7:	ficom  WORD PTR [esi]
  4092b9:	ins    DWORD PTR es:[edi],dx
  4092ba:	sub    DWORD PTR gs:[esi],esi
  4092bd:	push   ds
  4092be:	add    DWORD PTR [eax+edi*8],edx
  4092c1:	mov    eax,ds:0x3d33b826
  4092c6:	jmp    0xfe834f21
  4092cb:	mov    ds:0x3d22c087,eax
  4092d0:	mov    ecx,0x8d40b419
  4092d5:	les    edi,FWORD PTR [ebx+0x41ed5691]
  4092db:	and    cl,BYTE PTR [esi+0x78]
  4092de:	mov    DWORD PTR [ebx+0x721a4f12],ecx
  4092e4:	dec    edx
  4092e5:	aam    0x8c
  4092e7:	call   esi
  4092e9:	inc    edi
  4092ea:	add    dl,BYTE PTR [ebx]
  4092ec:	pop    ecx
  4092ed:	adc    dl,ch
  4092ef:	cs pop eax
  4092f1:	retf   
  4092f2:	mov    ds:0x763566a,al
  4092f7:	sbb    cl,BYTE PTR [eax]
  4092f9:	jg     0x40929a
  4092fb:	ficom  WORD PTR ds:0x46e0c623
  409301:	addr16 clc 
  409303:	add    al,0x45
  409305:	jmp    FWORD PTR [edi-0xb0cae86]
  40930b:	sbb    bh,bh
  40930d:	ss jno 0x4092c2
  409310:	add    cl,ch
  409312:	cmp    DWORD PTR [eax],0x88782cc3
  409318:	mov    eax,0xc20d799f
  40931d:	jns    0x4092ff
  40931f:	dec    ebx
  409320:	test   esp,ecx
  409322:	add    dh,BYTE PTR [eax-0x1]
  409325:	enter  0xc693,0xf0
  409329:	add    DWORD PTR [ebp-0x5f],edi
  40932c:	jno    0x409317
  40932e:	dec    ebp
  40932f:	xor    BYTE PTR [ebx-0x2dd51d66],dl
  409335:	punpckhbw mm6,QWORD PTR [edx-0xb]
  409339:	loop   0x409350
  40933b:	out    0xd5,eax
  40933d:	cmp    BYTE PTR [ebx],cl
  40933f:	pop    ds
  409340:	cmc    
  409341:	adc    BYTE PTR [edx+0x5b164841],ch
  409347:	and    eax,0x7e235996
  40934c:	lgs    ebx,FWORD PTR [edx+ecx*1-0x63]
  409351:	out    0x15,eax
  409353:	imul   ebp,DWORD PTR [edx-0x10],0xffffffa4
  409357:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  409359:	pop    ebp
  40935a:	mov    dl,0x43
  40935c:	jl     0x409389
  40935e:	mov    al,ss:0xb4258889
  409364:	xchg   edx,eax
  409365:	mov    bh,0xcc
  409367:	out    dx,eax
  409368:	cmp    BYTE PTR [eax-0x5b26c982],0xc5
  40936f:	pop    esp
  409370:	push   0x77181df8
  409375:	xchg   BYTE PTR [eax-0x625f4205],ch
  40937b:	dec    ebx
  40937c:	les    edi,FWORD PTR [edx]
  40937e:	pop    edi
  40937f:	outs   dx,BYTE PTR ds:[esi]
  409380:	push   esi
  409381:	mov    edx,DWORD PTR [ebp-0x15ff442b]
  409387:	inc    ecx
  409388:	pop    es
  409389:	adc    BYTE PTR [ebx],dh
  40938b:	mov    ds:0x3f0f39d2,al
  409390:	pop    ds
  409391:	mov    edx,0xfe0361d1
  409396:	mov    ah,0xd9
  409398:	xor    DWORD PTR [edi-0x6d],edx
  40939b:	inc    edx
  40939c:	sbb    al,0x4b
  40939e:	sahf   
  40939f:	loop   0x409363
  4093a1:	test   ah,dl
  4093a3:	or     esi,DWORD PTR [edi+edi*4+0x37]
  4093a7:	(bad)  
  4093a8:	and    BYTE PTR [eax-0x72ab668a],ch
  4093ae:	pop    ss
  4093af:	inc    edi
  4093b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093b1:	imul   edx,DWORD PTR [edi+0x46375e86],0x7e
  4093b8:	int3   
  4093b9:	mov    DWORD PTR [ecx-0x67],eax
  4093bc:	js     0x409341
  4093be:	xor    al,0xfa
  4093c0:	cmp    edx,edi
  4093c2:	cmp    dl,0x85
  4093c5:	scas   al,BYTE PTR es:[edi]
  4093c6:	cmp    DWORD PTR [eax+0x6],esi
  4093c9:	neg    BYTE PTR [edi-0x7942b1c]
  4093cf:	test   al,0xdd
  4093d1:	xor    bl,BYTE PTR [ecx+ecx*4+0x47754863]
  4093d8:	mov    bh,0xd5
  4093da:	aaa    
  4093db:	push   edi
  4093dc:	jb     0x409371
  4093de:	js     0x409448
  4093e0:	sti    
  4093e1:	mov    DWORD PTR [edx-0x6b51254d],ebp
  4093e7:	pop    esp
  4093e8:	pop    eax
  4093e9:	xchg   edi,eax
  4093ea:	cld    
  4093eb:	stc    
  4093ec:	xchg   BYTE PTR [esi-0x4f],bl
  4093ef:	jecxz  0x4093e8
  4093f1:	repnz pop esi
  4093f3:	ins    DWORD PTR es:[edi],dx
  4093f4:	je     0x40942b
  4093f6:	fcomp  QWORD PTR [edi]
  4093f8:	fmul   DWORD PTR [edx+0x2c402a88]
  4093fe:	xor    BYTE PTR [ecx],dh
  409400:	add    eax,0x3e69dd2d
  409405:	push   edx
  409406:	ret    0xf11f
  409409:	ror    BYTE PTR [ecx],cl
  40940b:	into   
  40940c:	push   edi
  40940d:	jae    0x409400
  40940f:	mov    ebx,0x4fe3ca28
  409414:	das    
  409415:	stc    
  409416:	inc    esi
  409417:	iret   
  409418:	retf   0xb239
  40941b:	cdq    
  40941c:	inc    ecx
  40941d:	inc    esp
  40941e:	dec    edx
  40941f:	sbb    cl,bh
  409421:	das    
  409422:	mov    ch,0x50
  409424:	je     0x409421
  409426:	mov    dl,0x40
  409428:	es or  edi,ebx
  40942b:	rol    BYTE PTR fs:[ecx+eax*8],0x27
  409430:	adc    DWORD PTR [esp+eiz*8],edx
  409433:	inc    eax
  409434:	imul   ebp,DWORD PTR [edx-0x29],0x9e852166
  40943b:	inc    edx
  40943c:	sub    cl,BYTE PTR [eax-0x3439d33d]
  409442:	push   ebp
  409443:	sbb    ecx,DWORD PTR [ebp-0x32c9826d]
  409449:	xor    dl,dh
  40944b:	add    al,0x7d
  40944d:	inc    edx
  40944e:	mov    al,ds:0xa3a1afd
  409453:	or     ebp,ebx
  409455:	jg     0x4093de
  409457:	clc    
  409458:	push   edi
  409459:	cmp    BYTE PTR [ebx+0x3987dcbb],ch
  40945f:	mov    esp,0x51b00ccd
  409464:	retf   
  409465:	pop    esp
  409466:	push   esi
  409467:	mov    ds:0x7cf52c96,al
  40946c:	dec    ecx
  40946d:	lahf   
  40946e:	add    al,0x40
  409470:	fisttp QWORD PTR [edx+0x6a]
  409473:	aad    0xce
  409475:	in     eax,dx
  409476:	out    0x7,eax
  409478:	data16 repz shl BYTE PTR [esi-0x1fd95b21],0xd4
  409481:	xchg   ecx,eax
  409482:	test   DWORD PTR [edx],esi
  409484:	stos   DWORD PTR es:[edi],eax
  409485:	outs   dx,DWORD PTR ds:[esi]
  409486:	in     eax,0x4a
  409488:	cmp    bh,dh
  40948a:	pop    ebx
  40948b:	aas    
  40948c:	aam    0xb6
  40948e:	imul   ebp,DWORD PTR [eax-0x738ddf02],0x61
  409495:	cmp    DWORD PTR [eax],ebx
  409497:	xchg   ebx,eax
  409498:	sub    eax,0x2c75b730
  40949d:	fs dec edx
  40949f:	cmp    dh,al
  4094a1:	(bad)  
  4094a3:	mov    ecx,0xee8d93d3
  4094a8:	push   ss
  4094a9:	cmp    al,0xff
  4094ab:	xor    DWORD PTR [edi],0xe086b56b
  4094b1:	xchg   ecx,eax
  4094b2:	cmc    
  4094b3:	push   ebp
  4094b4:	push   ds
  4094b5:	mov    ebp,0x1cee325a
  4094ba:	adc    eax,0x89828b
  4094bf:	jp     0x40947e
  4094c1:	int3   
  4094c2:	pop    esp
  4094c3:	popf   
  4094c4:	repz call 0x3a0d47b6
  4094ca:	xchg   DWORD PTR [esi+0x60e760b8],edx
  4094d0:	mov    edi,0x7b8a8ccd
  4094d5:	add    al,0x5e
  4094d7:	add    BYTE PTR [edi+eax*1-0x6ea26c1c],0xe6
  4094df:	xor    DWORD PTR [edi+ebp*8+0x5b],esi
  4094e3:	mov    ds:0xa61031f0,eax
  4094e8:	xor    al,0x5e
  4094ea:	mov    al,0x5b
  4094ec:	jmp    0x40956a
  4094ee:	je     0x4094a1
  4094f0:	or     al,0xdb
  4094f2:	int    0xef
  4094f4:	icebp  
  4094f5:	int3   
  4094f6:	mov    eax,0x7e28706e
  4094fb:	into   
  4094fc:	hlt    
  4094fd:	je     0x4094ae
  4094ff:	sahf   
  409500:	fmul   QWORD PTR [esi-0x20e5d169]
  409506:	push   0x27
  409508:	and    BYTE PTR [esi-0x29],ch
  40950b:	mov    edx,0xc88c2a35
  409510:	or     al,bh
  409512:	daa    
  409513:	mov    cl,BYTE PTR [eax+ebp*1-0x47fb00e6]
  40951a:	jne    0x4094fc
  40951c:	jb     0x409532
  40951e:	imul   ebx,DWORD PTR [ebx+eax*4-0x60dcb64d],0xffffff8b
  409526:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409527:	data16 adc al,BYTE PTR [eax+0x20]
  40952b:	push   es
  40952c:	adc    eax,0xcf33b7cc
  409531:	(bad)  
  409532:	cmp    al,0xe2
  409534:	sahf   
  409535:	dec    esp
  409536:	mov    ebx,0xbf0f6a92
  40953b:	gs mov esp,0xc392dd91
  409541:	jbe    0x4095ac
  409543:	loope  0x4095be
  409545:	lds    ecx,FWORD PTR [ecx]
  409547:	pop    ecx
  409548:	loopne 0x409557
  40954a:	sub    edi,esi
  40954c:	inc    edi
  40954d:	xchg   bl,dl
  40954f:	cmp    esi,ecx
  409551:	mov    dl,0xaf
  409553:	mov    cl,0x6e
  409555:	dec    BYTE PTR [esi]
  409557:	adc    al,0xe4
  409559:	xor    al,0x8b
  40955b:	dec    ebx
  40955c:	lahf   
  40955d:	push   esi
  40955e:	jmp    0x83e48a2c
  409563:	sub    ecx,DWORD PTR [eax+ebx*2]
  409566:	xchg   ebx,eax
  409567:	sbb    al,0x88
  409569:	lds    edx,FWORD PTR [eax+0xa]
  40956c:	cdq    
  40956d:	scas   eax,DWORD PTR es:[edi]
  40956e:	sbb    BYTE PTR [esi+0x44],ch
  409571:	(bad)  
  409572:	add    esi,edx
  409574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409575:	sbb    eax,0x98f1cda6
  40957a:	leave  
  40957b:	sub    bh,cl
  40957d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40957e:	leave  
  40957f:	test   BYTE PTR [ecx+edx*2-0x37b94f9d],dl
  409586:	imul   ecx,ebx,0x4374c2c1
  40958c:	call   FWORD PTR [ebp-0x45]
  40958f:	inc    ebp
  409590:	pushf  
  409591:	sbb    ebp,DWORD PTR [eax-0x17]
  409594:	jbe    0x409570
  409596:	and    ah,dl
  409598:	lods   al,BYTE PTR ds:[esi]
  409599:	pop    es
  40959a:	mov    eax,ds:0x21a40ef0
  40959f:	dec    ecx
  4095a0:	cs pop esp
  4095a2:	in     eax,0x35
  4095a4:	cmp    eax,DWORD PTR [eax+0x4b142c3b]
  4095aa:	xchg   esi,eax
  4095ab:	cmovge edi,ecx
  4095ae:	loopne 0x4095b8
  4095b0:	shl    cl,cl
  4095b2:	int3   
  4095b3:	scas   al,BYTE PTR es:[edi]
  4095b4:	rcl    ebx,1
  4095b6:	adc    ebx,edi
  4095b8:	mov    esi,0xe820054
  4095bd:	in     al,dx
  4095be:	lods   eax,DWORD PTR ds:[esi]
  4095bf:	push   edi
  4095c0:	sub    dh,bl
  4095c2:	jo     0x4095b1
  4095c4:	mov    eax,DWORD PTR [esi-0xd58b285]
  4095ca:	repz int 0xf9
  4095cd:	jg     0x4095c7
  4095cf:	(bad)  
  4095d0:	mov    ecx,0xe5faccf
  4095d5:	jmp    0x40964d
  4095d7:	ds push ss
  4095d9:	lahf   
  4095da:	sbb    eax,0xd8e5c828
  4095df:	jmp    0x2c11:0xcd2b2880
  4095e6:	inc    ecx
  4095e7:	push   0xffffffa7
  4095e9:	int3   
  4095ea:	(bad)
  4095ed:	test   DWORD PTR [ecx-0x14],ecx
  4095f0:	xchg   DWORD PTR [eax-0x27],esi
  4095f3:	push   0xffffff9a
  4095f5:	in     eax,0xd5
  4095f7:	add    al,0x39
  4095f9:	inc    ebx
  4095fa:	fdivrp st(5),st
  4095fc:	loope  0x409617
  4095fe:	xchg   esp,eax
  4095ff:	iret   
  409600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409601:	jecxz  0x409620
  409603:	xchg   ecx,eax
  409604:	in     al,dx
  409605:	test   DWORD PTR [edx-0x7d],ebp
  409608:	pop    ds
  409609:	repnz cs sub eax,0x359722a8
  409610:	lods   al,BYTE PTR ds:[esi]
  409611:	jbe    0x409607
  409613:	repz inc edi
  409615:	inc    ecx
  409616:	xchg   ebx,eax
  409617:	jo     0x409618
  409619:	add    cl,ch
  40961b:	inc    eax
  40961c:	jmp    0x8c28f2df
  409621:	sar    BYTE PTR [edx+0x3a],1
  409624:	fxch   st(7)
  409626:	clc    
  409627:	mov    ecx,0xcf38169b
  40962c:	inc    ebp
  40962d:	inc    edi
  40962e:	add    eax,0xc62afb45
  409633:	adc    bh,BYTE PTR [edi]
  409635:	inc    ecx
  409636:	mov    BYTE PTR [ecx*4-0x33dc78d6],ah
  40963d:	dec    ebx
  40963e:	mov    ah,0x42
  409640:	fisttp QWORD PTR [edi]
  409642:	mov    ah,0xef
  409644:	(bad)  
  409645:	into   
  409646:	sub    al,ah
  409648:	add    al,0x7e
  40964a:	cli    
  40964b:	test   DWORD PTR [ecx],edx
  40964d:	sbb    al,0x7b
  40964f:	inc    ebx
  409650:	add    DWORD PTR [esi-0x1b98fe5d],edi
  409656:	scas   eax,DWORD PTR es:[edi]
  409657:	dec    edx
  409658:	sbb    eax,0x6d0eccb2
  40965d:	in     al,0xf6
  40965f:	xchg   esi,eax
  409660:	jbe    0x40962c
  409662:	out    dx,al
  409663:	mov    edi,0xbf257e0c
  409668:	jnp    0x4096c5
  40966a:	shl    BYTE PTR [esi+0x6a2016b1],0x61
  409671:	cmp    ah,BYTE PTR [ebp+ecx*2+0x13]
  409675:	push   0x358e0515
  40967a:	add    al,0x5f
  40967c:	shr    BYTE PTR [edi],1
  40967e:	inc    esp
  40967f:	pop    ebp
  409680:	add    ch,BYTE PTR [eax]
  409682:	mov    al,ds:0x878125f9
  409687:	call   0x296aa8a1
  40968c:	clc    
  40968d:	pop    ds
  40968e:	(bad)  
  40968f:	pop    ds
  409690:	icebp  
  409691:	ds pushf 
  409693:	or     DWORD PTR [ebp+0x267585d8],ecx
  409699:	and    bh,BYTE PTR [edi]
  40969b:	mov    eax,0x3bff8e6d
  4096a0:	pop    es
  4096a1:	repnz push esi
  4096a3:	jmp    0x8979:0xd7809bd4
  4096aa:	xchg   esi,eax
  4096ab:	push   esp
  4096ac:	clc    
  4096ad:	xor    esi,eax
  4096af:	pop    es
  4096b0:	jl     0x409658
  4096b2:	cdq    
  4096b3:	rcl    BYTE PTR [edx-0x2a],0xdf
  4096b7:	(bad)  
  4096b8:	loope  0x409718
  4096ba:	hlt    
  4096bb:	xor    ecx,esi
  4096bd:	and    DWORD PTR [esi-0x3a],edx
  4096c0:	xor    BYTE PTR [edi-0x3b6bc17c],dl
  4096c6:	call   0xd5c3:0xee559067
  4096cd:	push   0xffffff9d
  4096cf:	cmp    esi,DWORD PTR [ebx+0x40fc059a]
  4096d5:	sub    cl,BYTE PTR [eax+0x59a7bb9f]
  4096db:	and    al,0xa5
  4096dd:	jae    0x409704
  4096df:	je     0x4096d8
  4096e1:	dec    ebx
  4096e2:	jnp    0x4096b2
  4096e4:	test   DWORD PTR [ebp-0x556c1e7d],0x51d3ccac
  4096ee:	fwait
  4096ef:	mov    cl,0x64
  4096f1:	mov    ds:0xdf9cf6c6,eax
  4096f6:	pushf  
  4096f7:	xchg   ebx,eax
  4096f8:	or     BYTE PTR [edi],ch
  4096fa:	ins    BYTE PTR es:[edi],dx
  4096fb:	aaa    
  4096fc:	pop    edi
  4096fd:	sahf   
  4096fe:	fs gs loopne 0x4096e1
  409702:	dec    edi
  409703:	sub    ebp,DWORD PTR [ebx]
  409705:	mov    ebx,0xed3037ac
  40970a:	bound  edx,QWORD PTR [ebx-0x77ebc6c0]
  409710:	popf   
  409711:	inc    ebp
  409712:	mov    edi,0xefd28b
  409717:	aas    
  409718:	jne    0x4096b4
  40971a:	test   BYTE PTR ds:0xe2fd3da8,dh
  409720:	lea    edi,[esi]
  409722:	dec    ebp
  409723:	in     eax,0x89
  409725:	sub    eax,DWORD PTR [edi+0x659aecf4]
  40972b:	mov    ds:0x2d417888,eax
  409730:	push   eax
  409731:	xchg   ebp,eax
  409732:	pop    esi
  409733:	(bad)  
  409734:	dec    eax
  409735:	mov    al,ds:0xc735cf67
  40973a:	test   DWORD PTR [edx-0x30383b3e],esi
  409740:	pop    ebp
  409741:	pop    es
  409742:	cs jnp 0x40971b
  409745:	mov    edx,0x7d313c37
  40974a:	adc    DWORD PTR [ebp+0x6fc1d56],edx
  409750:	iret   
  409751:	rcr    DWORD PTR [edx],0x49
  409754:	imul   eax,ebp,0x5eef3a1b
  40975a:	inc    edi
  40975b:	sub    BYTE PTR [ebx],ah
  40975d:	push   esi
  40975e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40975f:	imul   ecx,DWORD PTR [ecx],0xacd2ef92
  409765:	int3   
  409766:	inc    edi
  409767:	or     eax,0xea088091
  40976c:	xchg   ecx,eax
  40976d:	fcomp  DWORD PTR [edi+0x71e4a227]
  409773:	adc    BYTE PTR [ebp+0x6a6fba59],al
  409779:	loop   0x4097d2
  40977b:	sub    eax,0x703d3621
  409780:	push   ss
  409781:	add    al,0x99
  409783:	aam    0x86
  409785:	lods   al,BYTE PTR ds:[esi]
  409787:	and    eax,DWORD PTR [esi-0x41]
  40978a:	rcr    ebp,cl
  40978c:	shl    bl,1
  40978e:	shl    DWORD PTR [ebx+0x75],cl
  409791:	fsub   QWORD PTR [ebp+0xe41e2c5]
  409797:	(bad)  
  409798:	out    dx,eax
  409799:	sbb    edx,DWORD PTR [ebp-0x1c]
  40979c:	clc    
  40979d:	jle    0x409775
  40979f:	dec    edx
  4097a0:	out    dx,eax
  4097a1:	add    BYTE PTR [esi-0xa4dcdf3],0x4d
  4097a8:	mov    dh,BYTE PTR [ebx+0x2d]
  4097ab:	data16 sub BYTE PTR [edi+ebp*2],cl
  4097af:	mov    BYTE PTR [ebp+0x41],dh
  4097b2:	stos   DWORD PTR es:[edi],eax
  4097b3:	rcr    dh,cl
  4097b5:	out    dx,al
  4097b6:	adc    ch,dh
  4097b8:	dec    edi
  4097b9:	out    0xe1,al
  4097bb:	inc    esp
  4097bc:	ja     0x409799
  4097be:	or     al,0x35
  4097c0:	jle    0x409833
  4097c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097c3:	mov    edi,0x9d222eb
  4097c8:	xchg   ebp,eax
  4097c9:	pop    ebp
  4097ca:	inc    ebp
  4097cb:	cli    
  4097cc:	ret    0x42c2
  4097cf:	mov    bh,0x7
  4097d1:	fnsave [eax+edi*2-0x63b283a2]
  4097d8:	loopne 0x4097aa
  4097da:	arpl   WORD PTR [ebp+0x66],dx
  4097dd:	jo     0x409836
  4097df:	(bad)  
  4097e0:	push   ecx
  4097e1:	add    ebx,edi
  4097e3:	or     bh,ah
  4097e5:	push   esi
  4097e6:	cmp    ecx,edi
  4097e8:	mov    edi,0x436a9cb1
  4097ed:	mov    al,ds:0xd970c4e4
  4097f2:	cmp    eax,0x7b427c4f
  4097f7:	mov    esi,0xe21130d3
  4097fc:	sub    edx,DWORD PTR [ebp-0x17]
  4097ff:	or     BYTE PTR [eax-0x6f],ah
  409802:	mov    al,0xb4
  409804:	scas   eax,DWORD PTR es:[edi]
  409805:	jl     0x409824
  409807:	into   
  409808:	cmp    bl,0x74
  40980b:	retf   
  40980c:	mov    al,0xb6
  40980e:	imul   eax,DWORD PTR es:[ecx],0x71
  409812:	std    
  409813:	cmp    al,0x8a
  409815:	pop    es
  409816:	test   cl,ah
  409818:	icebp  
  409819:	ins    BYTE PTR es:[edi],dx
  40981a:	sub    ebp,ebp
  40981c:	call   0xf10b:0x8ea5f8a0
  409823:	jns    0x4097b8
  409825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409826:	stos   DWORD PTR es:[edi],eax
  409827:	fwait
  409828:	sbb    eax,0xb699e9f7
  40982d:	jne    0x40984a
  40982f:	repz xchg ebx,eax
  409831:	out    0xa8,eax
  409833:	das    
  409834:	adc    BYTE PTR cs:[ebx],cl
  409837:	mov    cl,0x8c
  409839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40983a:	inc    ebx
  40983b:	adc    dh,BYTE PTR [esi+0x24]
  40983e:	cs int 0xe9
  409841:	cmp    cl,BYTE PTR [ebx+0x61]
  409844:	scas   eax,DWORD PTR es:[edi]
  409845:	sahf   
  409846:	aam    0x1d
  409848:	mov    ah,0x35
  40984a:	sbb    al,0xff
  40984c:	lea    esi,[ebx+0xc]
  40984f:	and    dh,BYTE PTR [ebx]
  409851:	and    al,ch
  409853:	scas   al,BYTE PTR es:[edi]
  409854:	mov    DWORD PTR [ebx],eax
  409856:	aad    0x13
  409858:	imul   ebx,DWORD PTR [ecx+edx*4-0x69d0fccf],0xba7e6797
  409863:	push   cs
  409864:	jmp    0xcf6bc6bf
  409869:	cld    
  40986a:	add    dh,BYTE PTR [ebp+0x488b9611]
  409870:	xchg   ebp,eax
  409871:	enter  0xef5b,0xc4
  409875:	and    eax,0x23a0645d
  40987a:	loopne 0x40985f
  40987c:	mov    edi,0xbe51951e
  409881:	pusha  
  409882:	push   esi
  409883:	push   edx
  409884:	dec    ebp
  409885:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409887:	inc    edi
  409888:	imul   ecx,DWORD PTR [eax+0x33],0x777b6f7c
  40988f:	cmc    
  409890:	loope  0x40983b
  409892:	iret   
  409893:	clc    
  409894:	inc    edi
  409895:	push   0xb4c968a7
  40989a:	push   DWORD PTR ds:0xc4dc2b3b
  4098a0:	inc    esi
  4098a1:	loop   0x409852
  4098a3:	enter  0xf2d5,0x10
  4098a7:	out    dx,eax
  4098a8:	(bad)  
  4098a9:	mov    al,ds:0x72055861
  4098ae:	inc    ebp
  4098af:	popa   
  4098b0:	mov    ds:0x8a7092c2,al
  4098b5:	fisub  DWORD PTR gs:[ebx+0x43a3053b]
  4098bc:	pop    eax
  4098bd:	jo     0x40989d
  4098bf:	mov    ch,0x9c
  4098c1:	shl    BYTE PTR [eax-0x306cc4f8],0xb2
  4098c8:	cmp    esi,DWORD PTR ds:0xedac643f
  4098ce:	(bad)  
  4098cf:	pop    esp
  4098d0:	xor    BYTE PTR [eax-0x6ec22c9c],0xce
  4098d7:	mov    ebx,0x4e35ada5
  4098dc:	sar    al,cl
  4098de:	(bad)  
  4098df:	fwait
  4098e0:	shr    DWORD PTR [edi-0x799503d1],1
  4098e6:	enter  0x3d90,0x68
  4098ea:	icebp  
  4098eb:	xlat   BYTE PTR ds:[ebx]
  4098ec:	mov    dh,0x50
  4098ee:	lods   al,BYTE PTR ds:[esi]
  4098ef:	in     eax,dx
  4098f0:	call   0x3b1c:0x76147c95
  4098f7:	(bad)  
  4098f8:	jae    0x4098e9
  4098fa:	stos   BYTE PTR es:[edi],al
  4098fb:	sub    al,bh
  4098fd:	mov    esp,0x8f3c1b4f
  409902:	dec    esp
  409903:	stos   BYTE PTR es:[edi],al
  409904:	jecxz  0x409957
  409906:	cdq    
  409907:	jge    0x409910
  409909:	aam    0xa7
  40990b:	pop    esi
  40990c:	sub    al,0xa4
  40990e:	loopne 0x409987
  409910:	lock cmovg esp,esp
  409914:	jmp    0x4098a3
  409916:	repnz cdq 
  409918:	sub    al,BYTE PTR [esi]
  40991a:	dec    ecx
  40991b:	jnp    0x4098d0
  40991d:	or     eax,0x1e5e74ab
  409922:	jmp    0x59e7:0xe539049b
  409929:	mov    esp,esi
  40992b:	jne    0x409900
  40992d:	sub    eax,0xfc5a0a0f
  409932:	and    DWORD PTR [edx-0x77ca6308],0x2ad49fca
  40993c:	or     ch,ah
  40993e:	ss (bad) 
  409940:	xor    BYTE PTR [ebp-0xd],0x6a
  409944:	mov    WORD PTR [edx+0x4305b08a],ss
  40994a:	dec    ecx
  40994b:	jnp    0x4099b6
  40994d:	es stos BYTE PTR es:[edi],al
  40994f:	cmp    DWORD PTR [eax],0x3f
  409952:	push   es
  409953:	sbb    ecx,ebp
  409955:	jb     0x409955
  409957:	mov    cl,0xe1
  409959:	cld    
  40995a:	mov    ch,0xa6
  40995c:	ss adc bl,bl
  40995f:	pop    edx
  409960:	les    eax,FWORD PTR ss:[edi]
  409963:	fwait
  409964:	inc    eax
  409965:	(bad)  
  409966:	cli    
  409967:	daa    
  409968:	fs sub eax,0x3545a40d
  40996e:	(bad)  
  40996f:	faddp  st(4),st
  409971:	inc    ebp
  409972:	lods   eax,DWORD PTR ds:[esi]
  409973:	fsub   st(3),st
  409975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409976:	xchg   esi,eax
  409977:	and    al,0x15
  409979:	mov    edi,DWORD PTR [esi]
  40997b:	xlat   BYTE PTR ds:[ebx]
  40997c:	fcmovnb st,st(7)
  40997e:	mov    BYTE PTR [esi-0x1d],bh
  409981:	add    DWORD PTR [ebx],ebx
  409983:	ins    DWORD PTR es:[edi],dx
  409984:	es mov edx,0xdb0ec2f3
  40998a:	sbb    DWORD PTR [ecx],edi
  40998c:	ss dec ecx
  40998e:	dec    edx
  40998f:	add    eax,0x1c3da7f7
  409994:	push   0x606d1507
  409999:	stos   DWORD PTR es:[edi],eax
  40999a:	push   cs
  40999b:	aam    0x4d
  40999d:	std    
  40999e:	mov    esp,0x92e06fa1
  4099a3:	xchg   ecx,eax
  4099a4:	cmc    
  4099a5:	scas   al,BYTE PTR es:[edi]
  4099a6:	xchg   ebp,eax
  4099a7:	xchg   ebp,eax
  4099a8:	mov    edi,0xa5c49f1c
  4099ad:	and    edx,DWORD PTR [edx+0x3c]
  4099b0:	imul   edx,DWORD PTR [ecx+ecx*8],0xc3a47d11
  4099b7:	out    0x8e,eax
  4099b9:	outs   dx,DWORD PTR ds:[esi]
  4099ba:	(bad)  
  4099bb:	or     eax,0x378ef0e4
  4099c0:	xchg   BYTE PTR [eax],ch
  4099c2:	(bad)  
  4099c3:	retf   0x81c4
  4099c6:	in     eax,dx
  4099c7:	jecxz  0x40994d
  4099c9:	sbb    al,0xc9
  4099cb:	scas   al,BYTE PTR es:[edi]
  4099cc:	out    dx,eax
  4099cd:	sbb    DWORD PTR [eax+0x7e],eax
  4099d0:	sti    
  4099d1:	jmp    0x2001:0xcc0a81dd
  4099d8:	outs   dx,BYTE PTR ds:[esi]
  4099d9:	repnz pop edi
  4099db:	pusha  
  4099dc:	imul   ebx,esi,0x64894e15
  4099e2:	add    edx,DWORD PTR [ecx+0x17afddcd]
  4099e8:	dec    ecx
  4099e9:	add    eax,0x38d27830
  4099ee:	or     esp,DWORD PTR [eax]
  4099f0:	or     DWORD PTR [ebx],ebp
  4099f2:	stos   BYTE PTR es:[edi],al
  4099f3:	mov    ebp,0xe12bf71a
  4099f8:	inc    ebp
  4099f9:	(bad)
  4099fe:	pop    ecx
  4099ff:	aaa    
  409a00:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a02:	es jae 0x409a83
  409a05:	mov    ah,0x89
  409a07:	cs jp  0x4099f3
  409a0a:	aas    
  409a0b:	nop
  409a0c:	sub    al,0x47
  409a0e:	int3   
  409a0f:	jp     0x4099b7
  409a11:	push   si
  409a13:	jbe    0x409a2a
  409a15:	push   eax
  409a16:	ret    0x8648
  409a19:	mov    ebp,0xade324e6
  409a1e:	sub    ebp,0x397fa0bd
  409a24:	cld    
  409a25:	inc    ebx
  409a26:	int    0x36
  409a28:	call   0x43b03a09
  409a2d:	cs fadd st(4),st
  409a30:	mov    ?,ebx
  409a32:	sub    DWORD PTR [eax-0x1],esp
  409a35:	ret    0xf24e
  409a38:	in     al,0x47
  409a3a:	jnp    0x4099c5
  409a3c:	ins    DWORD PTR es:[edi],dx
  409a3d:	ja     0x4099d2
  409a3f:	aad    0x97
  409a41:	div    BYTE PTR [esi]
  409a43:	cwde   
  409a44:	cmp    dl,bh
  409a46:	outs   dx,BYTE PTR ds:[esi]
  409a47:	(bad)
  409a4a:	adc    BYTE PTR [edx+0x41f3a2b1],bl
  409a50:	push   cs
  409a51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a52:	add    al,0x9
  409a54:	psubusw mm0,QWORD PTR [edi]
  409a57:	outs   dx,BYTE PTR ds:[esi]
  409a58:	js     0x409ac1
  409a5a:	xor    BYTE PTR [ebx-0x2e],0xdc
  409a5e:	fcom   QWORD PTR [eax-0x50]
  409a61:	push   es
  409a62:	mov    ah,0x37
  409a64:	pusha  
  409a65:	xchg   esi,eax
  409a66:	push   es
  409a67:	pop    ss
  409a68:	popf   
  409a69:	mov    BYTE PTR [eax-0x3e],ch
  409a6c:	in     al,0xdd
  409a6e:	aas    
  409a6f:	push   ebp
  409a70:	dec    edi
  409a71:	mov    ecx,0x7b95e5d1
  409a76:	ins    DWORD PTR es:[edi],dx
  409a77:	repnz hlt 
  409a79:	mov    esp,ss
  409a7b:	dec    ecx
  409a7c:	out    0x5a,al
  409a7e:	or     BYTE PTR [edi-0x6e],ch
  409a81:	std    
  409a82:	sbb    DWORD PTR [edx-0x5d97255a],eax
  409a88:	aam    0xe3
  409a8a:	inc    ebp
  409a8b:	loope  0x409a54
  409a8d:	push   0xe5cadfa7
  409a92:	jbe    0x409aea
  409a94:	push   ds
  409a95:	cs mov edi,0xc6073cb
  409a9b:	gs mov dl,0x3d
  409a9e:	enter  0xba80,0x25
  409aa2:	into   
  409aa3:	mov    al,0xa7
  409aa5:	push   eax
  409aa6:	mov    ch,0xe7
  409aa8:	imul   ebp,ebp,0xffffffca
  409aab:	push   cs
  409aac:	or     eax,0x163d20b1
  409ab1:	cmp    DWORD PTR [esi-0x40d68681],ecx
  409ab7:	jle    0x409a42
  409ab9:	xchg   ecx,eax
  409aba:	nop
  409abb:	cmp    al,0x3c
  409abd:	xchg   BYTE PTR [edx+0x12],dl
  409ac0:	inc    esp
  409ac1:	dec    ebp
  409ac2:	sub    bh,dl
  409ac4:	test   DWORD PTR ds:0x68de57df,0xa8a5fbd8
  409ace:	and    al,0x38
  409ad0:	mov    ebx,0x53c4830b
  409ad5:	in     al,0x1c
  409ad7:	xor    ebp,DWORD PTR [edx-0x67fecdd8]
  409add:	sbb    al,0x85
  409adf:	int3   
  409ae0:	out    0x2c,eax
  409ae2:	xor    BYTE PTR [esi],dl
  409ae4:	mov    ecx,0xea686270
  409ae9:	jns    0x409a6f
  409aeb:	adc    bh,ch
  409aed:	fisttp DWORD PTR [esi]
  409aef:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  409af1:	cli    
  409af2:	daa    
  409af3:	xor    dh,ch
  409af5:	mov    ebp,0x8a3e2644
  409afa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409afb:	inc    edx
  409afc:	aas    
  409afd:	xchg   DWORD PTR [edx],ebx
  409aff:	(bad)  
  409b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b01:	pop    eax
  409b02:	sbb    eax,0xd43a13ca
  409b07:	lahf   
  409b08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b09:	xchg   edx,eax
  409b0a:	rcl    BYTE PTR [ebx+eiz*2],cl
  409b0d:	pushf  
  409b0e:	lds    ecx,FWORD PTR [ebx+eax*4-0x67]
  409b12:	add    bl,BYTE PTR [esi+0x5b97ae0b]
  409b18:	gs xchg ebx,eax
  409b1a:	add    eax,0xe826fd9f
  409b1f:	cmc    
  409b20:	push   0xe0465826
  409b25:	out    dx,eax
  409b26:	lea    eax,[ebp+ecx*2+0x493c4b2a]
  409b2d:	sti    
  409b2e:	fs aad 0x76
  409b31:	or     edi,DWORD PTR [edx+0x3c]
  409b34:	leave  
  409b35:	ins    BYTE PTR es:[edi],dx
  409b36:	out    0x34,al
  409b38:	push   esi
  409b3a:	mov    esp,0xe24fca13
  409b3f:	mov    ds:0xb2d872e1,eax
  409b44:	jp     0x409b4d
  409b46:	sti    
  409b47:	dec    edi
  409b48:	test   al,0xde
  409b4a:	mov    ds:0x23e2663c,al
  409b4f:	add    al,0xee
  409b51:	in     al,dx
  409b52:	jge    0x409bbe
  409b54:	bswap  edx
  409b56:	sbb    dl,BYTE PTR [esi]
  409b58:	mov    ?,esi
  409b5a:	xlat   BYTE PTR ds:[ebx]
  409b5b:	push   esi
  409b5c:	(bad)  
  409b5f:	sbb    dl,BYTE PTR ds:0x8daf510
  409b65:	jmp    0xa452:0xbd959a07
  409b6c:	dec    esp
  409b6d:	cmp    bl,ch
  409b6f:	dec    edi
  409b70:	rol    BYTE PTR [esi],cl
  409b72:	push   ebx
  409b73:	stos   BYTE PTR es:[edi],al
  409b74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b75:	aam    0x7a
  409b77:	cmp    bl,BYTE PTR [esi-0x34]
  409b7a:	call   0x8e02:0xb1e0f5c7
  409b81:	adc    eax,0xb4c3f52c
  409b86:	push   es
  409b87:	mov    esp,0xf38d825c
  409b8c:	inc    ebx
  409b8d:	shr    dl,cl
  409b8f:	pusha  
  409b90:	and    dl,bh
  409b92:	or     eax,0x67aac235
  409b97:	fld    QWORD PTR [edi-0x6680f796]
  409b9d:	mov    dh,BYTE PTR [ecx]
  409b9f:	fisub  WORD PTR [edi-0x12]
  409ba2:	push   0x6fd2ac60
  409ba7:	shr    BYTE PTR [eax-0x78],0x39
  409bab:	aas    
  409bac:	frstor [esi+0x6d]
  409baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bb0:	dec    esp
  409bb1:	sbb    edi,ecx
  409bb3:	idiv   ecx
  409bb5:	cdq    
  409bb6:	xchg   ebx,eax
  409bb7:	test   BYTE PTR [eax],bl
  409bb9:	cs loopne 0x409b78
  409bbc:	cmp    bh,BYTE PTR [edi-0x39]
  409bbf:	retf   0xde3e
  409bc2:	in     eax,dx
  409bc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bc4:	(bad)  
  409bc6:	arpl   WORD PTR [ebx-0x3b],bp
  409bc9:	ret    0xa3e3
  409bcc:	push   es
  409bcd:	adc    eax,0xc27ffdda
  409bd2:	shl    BYTE PTR [ecx],0xd
  409bd5:	aaa    
  409bd6:	mov    bh,0xb6
  409bd8:	das    
  409bd9:	ror    BYTE PTR [ecx],1
  409bdb:	inc    ebx
  409bdc:	cwde   
  409bdd:	dec    ebx
  409bde:	(bad)  [eax-0x48]
  409be1:	jecxz  0x409b67
  409be3:	(bad)  
  409be4:	int3   
  409be5:	loop   0x409ba8
  409be7:	fisub  DWORD PTR [ecx+0x1981eb2f]
  409bed:	xchg   edi,eax
  409bee:	repnz enter 0x6b39,0xda
  409bf3:	mov    eax,ds:0x17cfa8b4
  409bf8:	xor    DWORD PTR [ebx+0x64f643f0],ebx
  409bfe:	mov    edx,0x3cf635c1
  409c03:	in     eax,0xe5
  409c05:	mov    ch,BYTE PTR [edx]
  409c07:	shl    dl,1
  409c09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c0a:	shl    BYTE PTR [edi+0x79],cl
  409c0d:	xlat   BYTE PTR ds:[ebx]
  409c0e:	push   es
  409c0f:	sub    DWORD PTR [edi],ebp
  409c11:	loope  0x409c2c
  409c13:	mov    cl,0x5f
  409c15:	cwde   
  409c16:	inc    eax
  409c17:	lahf   
  409c18:	pop    ds
  409c19:	or     ebp,DWORD PTR [esi]
  409c1b:	test   al,0xff
  409c1d:	sub    dl,BYTE PTR [esp+esi*4-0x3e64c389]
  409c24:	jg     0x409c66
  409c26:	push   cs
  409c27:	enter  0x6d02,0x21
  409c2b:	push   0xffffffe4
  409c2d:	cmp    al,0xd
  409c2f:	retf   0x3193
  409c32:	pop    es
  409c33:	in     al,0x23
  409c35:	es imul ecx,esp,0xffffff86
  409c39:	pop    ds
  409c3a:	fadd   QWORD PTR [edx+ebx*1]
  409c3d:	daa    
  409c3e:	xlat   BYTE PTR ds:[ebx]
  409c3f:	jnp    0x409ca3
  409c41:	nop
  409c42:	cmp    al,0x63
  409c44:	rcl    DWORD PTR [ebp+0x47],cl
  409c47:	adc    BYTE PTR [eax-0x6],ch
  409c4a:	fldenv [ebx+0x2d]
  409c4d:	ins    BYTE PTR es:[edi],dx
  409c4e:	adc    ecx,DWORD PTR [ebx]
  409c50:	or     DWORD PTR [edi+0x8],esi
  409c53:	aaa    
  409c54:	mov    ebx,DWORD PTR [ebx+edi*2+0x6d95286e]
  409c5b:	mov    ch,0x8b
  409c5d:	ins    BYTE PTR es:[edi],dx
  409c5e:	fwait
  409c5f:	imul   ebp,DWORD PTR [esi+0x79],0xffffffa6
  409c63:	dec    esp
  409c64:	arpl   WORD PTR [ebx],cx
  409c66:	dec    edi
  409c67:	outs   dx,DWORD PTR ds:[esi]
  409c68:	adc    dh,BYTE PTR [eax+0x17]
  409c6b:	mov    DWORD PTR [ecx-0x2e],ecx
  409c6e:	ficom  WORD PTR [ebx+0x6b641428]
  409c74:	jl     0x409c48
  409c76:	push   ss
  409c77:	aas    
  409c78:	xor    DWORD PTR [edx+0x2a],edi
  409c7b:	push   es
  409c7c:	mov    al,ds:0x888994b8
  409c81:	push   ebx
  409c82:	fmulp  st(5),st
  409c84:	cmp    eax,0x2e16724f
  409c89:	shl    ebx,0xdf
  409c8c:	cwde   
  409c8d:	ret    
  409c8e:	jmp    0x679335b4
  409c93:	inc    ebp
  409c94:	mov    ah,0xea
  409c96:	pop    ds
  409c97:	jno    0x409c54
  409c99:	cmp    BYTE PTR [esi+0x78770581],ch
  409c9f:	leave  
  409ca0:	call   0x16483453
  409ca5:	sub    BYTE PTR [ecx-0x5dbb2c49],bl
  409cab:	in     al,0xcd
  409cad:	leave  
  409cae:	and    eax,0x20986178
  409cb3:	push   ebp
  409cb4:	push   es
  409cb5:	mov    edx,0x37bab841
  409cba:	std    
  409cbb:	mov    dh,0xd0
  409cbd:	les    eax,FWORD PTR [edi-0x6e]
  409cc0:	jecxz  0x409c8b
  409cc2:	lods   al,BYTE PTR ds:[esi]
  409cc3:	call   0xee501a18
  409cc8:	and    DWORD PTR [ecx-0x5db0d79b],esi
  409cce:	xor    al,BYTE PTR [edx-0x16]
  409cd1:	in     eax,dx
  409cd2:	sub    eax,0x4cae1590
  409cd7:	dec    edi
  409cd8:	mov    bl,0x2c
  409cda:	cs mov al,0xc6
  409cdd:	fcomp  QWORD PTR [ecx-0x2d]
  409ce0:	cmp    eax,0x57a2dc5b
  409ce5:	mov    ds:0x9d8133f8,al
  409cea:	out    dx,al
  409ceb:	(bad)  
  409cec:	dec    ebx
  409ced:	mov    DWORD PTR [ebx+ebp*1],ebx
  409cf0:	mov    ecx,db1
  409cf3:	mov    ch,0xa6
  409cf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cf6:	xchg   ecx,eax
  409cf7:	pop    edx
  409cf8:	jge    0x409cda
  409cfa:	sar    DWORD PTR [edx],cl
  409cfc:	jne    0x409cfe
  409cfe:	clc    
  409cff:	push   ecx
  409d00:	ficomp DWORD PTR [ebp+0x76]
  409d03:	jl     0x409d3c
  409d05:	xchg   esi,eax
  409d06:	call   0x5a14:0x462dd05
  409d0d:	mov    es,WORD PTR [edx+0x1e010acd]
  409d13:	push   ebp
  409d14:	cmp    al,0xeb
  409d16:	sub    DWORD PTR es:[ebx],esi
  409d19:	cs clc 
  409d1b:	mov    ch,0xfa
  409d1d:	and    DWORD PTR [ebx+0x1802c966],0x7d1ff5f3
  409d27:	ds fwait
  409d29:	lea    esp,[esi]
  409d2b:	sbb    esi,DWORD PTR [edi+edi*2+0x7]
  409d2f:	mov    ds,WORD PTR [ecx]
  409d31:	jno    0x409cd3
  409d33:	mov    esp,0xc41671c1
  409d38:	daa    
  409d39:	aas    
  409d3a:	xor    BYTE PTR [esi],0x97
  409d3d:	aaa    
  409d3e:	out    0x8a,eax
  409d40:	fcmovu st,st(5)
  409d42:	sub    edx,esi
  409d44:	dec    ecx
  409d45:	jb     0x409d2a
  409d47:	mov    bl,0xac
  409d49:	fucomip st,st(3)
  409d4b:	sub    eax,0xb47daaaa
  409d50:	xchg   edx,eax
  409d51:	(bad)  
  409d52:	jbe    0x409dad
  409d54:	nop
  409d55:	pop    ss
  409d56:	add    DWORD PTR [esi-0x60096515],esi
  409d5c:	mov    esp,eax
  409d5e:	(bad)  
  409d5f:	ins    DWORD PTR es:[edi],dx
  409d60:	xor    DWORD PTR [edi*8+0x709de9aa],0xf09effc5
  409d6b:	jne    0x409dde
  409d6d:	jg     0x409ddf
  409d6f:	push   esi
  409d70:	adc    eax,0xa435737f
  409d75:	fadd   QWORD PTR [ebp-0x65d93325]
  409d7b:	fdiv   st,st(3)
  409d7d:	sbb    eax,0x97b81139
  409d82:	outs   dx,BYTE PTR ds:[esi]
  409d83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d84:	add    eax,0x964c977e
  409d89:	(bad)  
  409d8a:	xchg   esp,eax
  409d8b:	fs ret 0xc633
  409d8f:	ror    DWORD PTR [esi+0x36],cl
  409d92:	jnp    0x409e0b
  409d94:	lea    ebx,[ecx-0x73]
  409d97:	es dec ebx
  409d99:	add    al,0xb4
  409d9b:	push   0xed5c523b
  409da0:	or     BYTE PTR [edi-0x793f8b83],0x58
  409da7:	fwait
  409da8:	xlat   BYTE PTR ds:[ebx]
  409da9:	push   cs
  409daa:	sub    al,cl
  409dac:	scas   al,BYTE PTR es:[edi]
  409dad:	lods   eax,DWORD PTR ds:[esi]
  409dae:	fdiv   DWORD PTR [ebp-0x3838cb01]
  409db4:	or     BYTE PTR [ecx+0x38],ah
  409db7:	xchg   ecx,eax
  409db8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409db9:	outs   dx,BYTE PTR ds:[esi]
  409dba:	push   edi
  409dbb:	leave  
  409dbc:	push   0x1a7dd81f
  409dc1:	add    eax,0x9d53c9e1
  409dc6:	or     bl,BYTE PTR [di-0x2f8c]
  409dcb:	mov    al,ds:0x5f99b9ba
  409dd0:	ret    
  409dd1:	jg     0x409ddc
  409dd3:	iret   
  409dd4:	mul    BYTE PTR [ebx]
  409dd6:	in     eax,0x85
  409dd8:	pop    edi
  409dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dda:	pop    edx
  409ddb:	lods   al,BYTE PTR ds:[esi]
  409ddc:	sbb    DWORD PTR [esi+0xa6cfea],edi
  409de2:	xchg   DWORD PTR [ecx+ecx*4+0xb99b25e],edi
  409de9:	pop    ss
  409dea:	push   edx
  409dec:	sub    eax,0xe2b035f6
  409df1:	and    eax,0x74ad2e9b
  409df6:	arpl   WORD PTR [eax+edi*4],si
  409df9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dfa:	add    eax,0x5796f0cc
  409dff:	add    DWORD PTR [ebx+eiz*1],eax
  409e02:	adc    al,0xf8
  409e04:	xlat   BYTE PTR ds:[ebx]
  409e05:	fistp  DWORD PTR [ebx+0x7fd294de]
  409e0b:	pop    ebx
  409e0c:	sub    BYTE PTR [ecx+ecx*1],0x3c
  409e10:	mov    dl,0xbd
  409e12:	mov    bh,0xc5
  409e14:	xor    DWORD PTR [esi+0x540204ad],eax
  409e1a:	paddsw mm0,QWORD PTR [ebx]
  409e1d:	inc    eax
  409e1e:	dec    ecx
  409e1f:	lods   eax,DWORD PTR ds:[esi]
  409e20:	mov    eax,ds:0x21194c83
  409e25:	retf   0xb785
  409e28:	add    edx,DWORD PTR [ecx+ebp*4+0x5e9b1ed4]
  409e2f:	addr16 (bad) 
  409e31:	sub    DWORD PTR [ebp-0x54],ecx
  409e34:	dec    ecx
  409e35:	add    ah,BYTE PTR [eax]
  409e37:	push   eax
  409e38:	jecxz  0x409e69
  409e3a:	xor    BYTE PTR ds:0xce2a611,dh
  409e40:	iret   
  409e41:	scas   eax,DWORD PTR es:[edi]
  409e42:	loope  0x409ea7
  409e44:	inc    ebx
  409e45:	jmp    FWORD PTR [ebx]
  409e47:	and    eax,0x6e4f4e95
  409e4c:	pop    edi
  409e4d:	cmp    al,0xf6
  409e4f:	ja     0x409dda
  409e51:	xchg   edx,eax
  409e52:	in     eax,0xeb
  409e54:	mov    ebp,0xb0816746
  409e59:	int    0xd7
  409e5b:	cwde   
  409e5c:	or     DWORD PTR [esi+0x57],edi
  409e5f:	xchg   ecx,eax
  409e60:	jp     0x409eae
  409e62:	push   ds
  409e63:	repz jp 0x409e9f
  409e66:	imul   BYTE PTR [ecx-0x33]
  409e69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e6a:	shl    DWORD PTR [edx-0x26197266],0xfb
  409e71:	ja     0x409e8d
  409e73:	add    ecx,esp
  409e75:	dec    ebx
  409e76:	dec    ecx
  409e77:	pop    ss
  409e78:	xchg   esi,eax
  409e79:	sub    BYTE PTR [ecx-0x468d1c7f],dl
  409e7f:	fwait
  409e80:	mov    edi,DWORD PTR [edi+0x3c]
  409e83:	mov    dl,0xaa
  409e85:	xor    eax,0x2de0a13
  409e8a:	xor    ebp,DWORD PTR [ebp-0x22]
  409e8d:	mov    ch,0x8b
  409e8f:	mov    al,ds:0x78e098f6
  409e94:	fisttp QWORD PTR [ecx-0x48]
  409e97:	shr    DWORD PTR [eax+0x416c03e1],cl
  409e9d:	imul   eax,edi,0x8f35daf8
  409ea3:	ja     0x409e44
  409ea5:	fisttp QWORD PTR [ecx]
  409ea7:	dec    esp
  409ea8:	dec    ebp
  409ea9:	icebp  
  409eaa:	jns    0x409e40
  409eac:	je     0x409ecb
  409eae:	lock pop esi
  409eb0:	mov    ds:0x894c8ac,al
  409eb5:	sub    edi,ebx
  409eb7:	xor    al,0x4
  409eb9:	adc    eax,0x3aa6a6b9
  409ebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ebf:	pop    ebx
  409ec0:	ret    
  409ec1:	adc    DWORD PTR [eax],ecx
  409ec3:	mov    ds:0xce515cd4,eax
  409ec8:	cdq    
  409ec9:	data16 adc al,0x40
  409ecc:	jl     0x409e68
  409ece:	in     al,dx
  409ecf:	xor    DWORD PTR [ecx-0x76a2b1f5],esp
  409ed5:	pushf  
  409ed6:	push   eax
  409ed7:	adc    eax,0x44e0657d
  409edc:	jno    0x409f44
  409ede:	jmp    0x409ec2
  409ee0:	cli    
  409ee1:	push   edi
  409ee2:	and    ah,0xe5
  409ee5:	dec    ecx
  409ee6:	mov    esp,0xfb3d74b
  409eeb:	popa   
  409eec:	mov    ebx,0x2ccae72f
  409ef1:	call   0x45e6:0xcb0a737d
  409ef8:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409efa:	js     0x409f73
  409efc:	fwait
  409efd:	jg     0x409ec5
  409eff:	dec    ecx
  409f00:	retf   0xc79b
  409f03:	ins    DWORD PTR es:[edi],dx
  409f04:	mov    ebx,0x795ab689
  409f09:	pop    edx
  409f0a:	jmp    0x9d830b9e
  409f0f:	mov    edx,0x5dfa6a41
  409f14:	(bad)  
  409f15:	in     al,0x16
  409f17:	mov    eax,0x41e8d8b3
  409f1c:	push   0x4c
  409f1e:	aas    
  409f1f:	xchg   edx,eax
  409f20:	cdq    
  409f21:	sub    dh,BYTE PTR [esi-0x3bf93282]
  409f27:	push   eax
  409f28:	jne    0x409ef8
  409f2a:	add    bl,BYTE PTR [edi+ebx*8]
  409f2d:	out    dx,eax
  409f2e:	js     0x409ebd
  409f30:	jl     0x409f83
  409f32:	in     al,dx
  409f33:	xor    cl,dh
  409f35:	cmp    DWORD PTR ds:0xb5f461e3,eax
  409f3b:	xor    eax,0xbca3eadc
  409f40:	cmp    ah,cl
  409f42:	pop    ss
  409f43:	popa   
  409f44:	mov    ebp,0xfe3d9be1
  409f49:	retf   
  409f4a:	ja     0x409f4c
  409f4c:	sbb    cl,bl
  409f4e:	ss mov eax,0xedfec7b3
  409f54:	sub    dh,BYTE PTR [ebx-0x72d13f73]
  409f5a:	cmp    dl,ch
  409f5c:	push   edi
  409f5d:	and    al,0x39
  409f5f:	or     BYTE PTR [esi-0x12],bl
  409f62:	mov    ebp,DWORD PTR [edi]
  409f64:	pop    esp
  409f65:	arpl   sp,cx
  409f67:	dec    esi
  409f68:	or     DWORD PTR [edi-0x5110b730],esi
  409f6e:	mov    dl,0xb9
  409f70:	and    eax,0x6716070c
  409f75:	jp     0x409f74
  409f77:	sub    dh,bh
  409f79:	sbb    esi,DWORD PTR [eax-0x29]
  409f7c:	sahf   
  409f7d:	sub    al,0xa2
  409f7f:	aaa    
  409f80:	push   0xfffffffe
  409f82:	scas   eax,DWORD PTR es:[edi]
  409f83:	imul   esi,DWORD PTR [ebp+0x27c83503],0x3d6ec729
  409f8d:	push   edx
  409f8e:	je     0x40a00c
  409f90:	dec    edi
  409f91:	daa    
  409f92:	push   esi
  409f93:	jle    0x409f59
  409f95:	out    dx,eax
  409f96:	int    0xf9
  409f98:	cmp    esp,ebx
  409f9a:	out    0x71,eax
  409f9c:	lds    esp,FWORD PTR [ebx]
  409f9e:	in     eax,0xb2
  409fa0:	push   cs
  409fa1:	(bad)  
  409fa2:	lock hlt 
  409fa4:	adc    al,0xff
  409fa6:	mov    al,ds:0x3e4d8de8
  409fab:	int    0xc0
  409fad:	xchg   edi,eax
  409fae:	rol    BYTE PTR [ebx],1
  409fb0:	cli    
  409fb1:	push   edi
  409fb2:	jmp    0xec4d:0x2893e138
  409fb9:	cld    
  409fba:	shl    BYTE PTR [ecx+0x53],cl
  409fbd:	movlps QWORD PTR [ebx-0x4d912bf8],xmm7
  409fc4:	dec    ebp
  409fc5:	fs jmp 0xe551:0xeb409792
  409fcd:	in     al,dx
  409fce:	imul   esp,DWORD PTR [edx-0x5c],0xd98d1c7e
  409fd5:	loop   0x40a03e
  409fd7:	cmp    DWORD PTR [ebx+0x2c],esi
  409fda:	loope  0x40a032
  409fdc:	jmp    0x40a038
  409fde:	enter  0xa5f7,0xd
  409fe2:	cmc    
  409fe3:	or     ah,BYTE PTR [esp+ebp*2+0x70]
  409fe7:	call   DWORD PTR [ebx]
  409fe9:	(bad)  [ebp-0x28b8dea6]
  409fef:	ins    BYTE PTR es:[edi],dx
  409ff0:	jle    0x40a038
  409ff2:	and    dl,dl
  409ff4:	add    DWORD PTR [esp+eax*4+0x51bef275],edx
  409ffb:	pop    ecx
  409ffc:	mov    bl,0x97
  409ffe:	sti    
  409fff:	inc    ebx
  40a000:	fwait
  40a001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a002:	xchg   ecx,eax
  40a003:	into   
  40a004:	push   esp
  40a005:	out    dx,al
  40a006:	ret    0xa139
  40a009:	adc    DWORD PTR [eax-0x76],edx
  40a00c:	xor    BYTE PTR [edx-0x5be23918],bh
  40a012:	mov    ebx,DWORD PTR [ecx+esi*4+0x31]
  40a016:	fild   WORD PTR [esi+0x53]
  40a019:	imul   ecx,DWORD PTR [edi+0x2],0x3c541a31
  40a020:	sti    
  40a021:	jcxz   0x40a00f
  40a024:	sbb    DWORD PTR [esi+0x35c634fd],0xeb1adebd
  40a02e:	js     0x40a075
  40a030:	mov    DWORD PTR ds:0xdffa760d,esi
  40a036:	into   
  40a037:	xor    ch,BYTE PTR [ecx-0x2bccb2d7]
  40a03d:	in     eax,dx
  40a03e:	mov    al,0x2c
  40a040:	les    ebp,FWORD PTR ds:0x6df57ce6
  40a046:	dec    ebx
  40a047:	jne    0x40a078
  40a049:	dec    esi
  40a04a:	mov    dl,0xa1
  40a04c:	jge    0x40a0a6
  40a04e:	dec    esi
  40a04f:	fist   WORD PTR [ebx]
  40a051:	jg     0x40a01a
  40a053:	xor    al,0x44
  40a055:	sub    eax,0x66e04c9f
  40a05a:	mov    dl,0x39
  40a05c:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a05e:	push   ds
  40a05f:	ins    BYTE PTR es:[edi],dx
  40a060:	mov    ebp,0x456260f4
  40a065:	mov    al,0x12
  40a067:	arpl   WORD PTR [edi+edi*1-0x25],sp
  40a06b:	xchg   BYTE PTR [ebx+0x68],dl
  40a06e:	mov    eax,0x6a830b38
  40a073:	cmp    eax,0x4822643
  40a078:	cwde   
  40a079:	je     0x40a0c8
  40a07b:	ficomp DWORD PTR [edi]
  40a07d:	xor    DWORD PTR [ebx],ecx
  40a07f:	jbe    0x40a049
  40a081:	jno    0x40a016
  40a083:	or     eax,0x20b328d8
  40a088:	mov    bl,0xa7
  40a08a:	pop    ebp
  40a08b:	ds cwde 
  40a08d:	inc    esp
  40a08e:	arpl   bx,si
  40a090:	aaa    
  40a091:	imul   BYTE PTR [edi-0x4609aac8]
  40a097:	pop    edi
  40a098:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a099:	sbb    dh,bl
  40a09b:	and    al,0x9e
  40a09d:	in     eax,dx
  40a09e:	or     BYTE PTR [ebx],cl
  40a0a0:	mov    ah,dl
  40a0a2:	mov    ch,0xc7
  40a0a4:	mov    ds:0x1430e28f,eax
  40a0a9:	jns    0x40a117
  40a0ab:	jno    0x40a0e6
  40a0ad:	and    eax,0x89ca1c57
  40a0b2:	jecxz  0x40a074
  40a0b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0b5:	test   al,0x8e
  40a0b7:	lahf   
  40a0b8:	add    BYTE PTR [ebx],0x2b
  40a0bb:	or     BYTE PTR [edx+0x32],ch
  40a0be:	xor    ch,cl
  40a0c0:	dec    esi
  40a0c1:	lods   eax,DWORD PTR ds:[esi]
  40a0c2:	adc    eax,0xbc2ede04
  40a0c7:	dec    esi
  40a0c8:	xor    edi,eax
  40a0ca:	mov    eax,gs:0x411cd45c
  40a0d0:	jns    0x40a069
  40a0d2:	sbb    eax,0xc989dbf8
  40a0d7:	dec    esp
  40a0d8:	pop    esp
  40a0d9:	pop    ecx
  40a0da:	mov    gs,WORD PTR [eax+0x4e]
  40a0dd:	fcomip st,st(0)
  40a0df:	xchg   ecx,eax
  40a0e0:	scas   eax,DWORD PTR es:[edi]
  40a0e1:	icebp  
  40a0e2:	cld    
  40a0e3:	fs enter 0x93ac,0xe8
  40a0e8:	(bad)  
  40a0e9:	cmp    eax,0xf24d0d2c
  40a0ee:	and    dl,BYTE PTR [esi-0x7bc01cae]
  40a0f4:	sbb    BYTE PTR [ebx],cl
  40a0f6:	cs (bad) 
  40a0f8:	jp     0x40a172
  40a0fa:	or     al,0xb8
  40a0fc:	ss mov ebx,0x7bbb46f
  40a102:	inc    ecx
  40a103:	ficom  DWORD PTR [edi+0x6a8f7077]
  40a109:	es in  eax,0x72
  40a10c:	pop    ss
  40a10d:	or     al,0x2c
  40a10f:	inc    esi
  40a110:	mov    cs,WORD PTR [ebp+0x1775b2f3]
  40a116:	(bad)  
  40a118:	cld    
  40a119:	int    0x16
  40a11b:	popa   
  40a11c:	loopne 0x40a18a
  40a11e:	mov    esi,0x7586e9f0
  40a123:	test   dl,al
  40a125:	jnp    0x40a186
  40a127:	cmp    DWORD PTR [ebx+0x61],eax
  40a12a:	pop    es
  40a12b:	add    BYTE PTR [ebx+0x54],ah
  40a12e:	inc    esp
  40a12f:	jo     0x40a145
  40a131:	sbb    DWORD PTR [ebp+edx*2+0x793ff396],ebx
  40a138:	sbb    al,0xd0
  40a13a:	adc    esi,DWORD PTR [edi]
  40a13c:	dec    ebx
  40a13d:	jnp    0x40a0ea
  40a13f:	pop    es
  40a140:	push   ds
  40a141:	test   ecx,0xe43a1d7e
  40a147:	test   BYTE PTR [edx-0x67],al
  40a14a:	pop    es
  40a14b:	jmp    0x40a14a
  40a14d:	push   0x7df339be
  40a152:	ret    
  40a153:	or     dh,BYTE PTR [eax]
  40a155:	mov    dl,BYTE PTR cs:[edi]
  40a158:	add    ah,bh
  40a15a:	(bad)  
  40a15b:	stos   DWORD PTR es:[edi],eax
  40a15c:	cmp    eax,0x11cdc908
  40a161:	imul   ebx,DWORD PTR [ecx],0xffffff86
  40a164:	pop    ebp
  40a165:	(bad)  
  40a166:	adc    cl,BYTE PTR [edx]
  40a168:	in     eax,0x76
  40a16a:	ins    DWORD PTR es:[edi],dx
  40a16b:	mov    ebx,0x81d02eaf
  40a170:	pop    ds
  40a171:	(bad)  
  40a172:	in     eax,dx
  40a173:	mov    bh,0x6c
  40a175:	data16 mov cl,0xd6
  40a178:	test   dl,ch
  40a17a:	sub    ah,al
  40a17c:	test   al,0xa0
  40a17e:	push   cs
  40a17f:	mov    cl,0x38
  40a181:	ror    DWORD PTR [ecx-0x36],cl
  40a184:	sahf   
  40a185:	mov    ah,0xc8
  40a187:	mov    al,0x9
  40a189:	ss loopne 0x40a158
  40a18c:	outs   dx,DWORD PTR ds:[esi]
  40a18d:	cld    
  40a18e:	mov    ds:0xc827c985,eax
  40a193:	dec    esp
  40a194:	adc    bh,BYTE PTR [eax-0x10bd1ce3]
  40a19a:	mov    ds:0x31e1e86,al
  40a19f:	(bad)  
  40a1a0:	pusha  
  40a1a1:	inc    esp
  40a1a2:	sti    
  40a1a3:	ret    0x731b
  40a1a6:	in     eax,0x68
  40a1a8:	shl    DWORD PTR [ebx+0x584802db],0xde
  40a1af:	mov    eax,ds:0xb81bb4a7
  40a1b4:	mov    al,ds:0xa746add5
  40a1b9:	sbb    al,0x8f
  40a1bb:	iret   
  40a1bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1bd:	cwde   
  40a1be:	xchg   esp,eax
  40a1bf:	dec    edx
  40a1c0:	rol    bl,0x47
  40a1c3:	(bad)  
  40a1c4:	mov    esi,0x55292cc6
  40a1c9:	sub    al,0x9f
  40a1cb:	in     eax,0xf5
  40a1cd:	call   0x48aa:0xe269c633
  40a1d4:	je     0x40a204
  40a1d6:	pop    edx
  40a1d7:	outs   dx,BYTE PTR ds:[esi]
  40a1d8:	and    al,0xef
  40a1da:	mov    ds:0xa7ff509f,eax
  40a1df:	pop    ebp
  40a1e0:	pop    ecx
  40a1e1:	and    BYTE PTR [edi-0x7],dl
  40a1e4:	and    eax,0x699947eb
  40a1e9:	sti    
  40a1ea:	sbb    al,0x36
  40a1ec:	push   edi
  40a1ed:	mov    eax,0xc617838b
  40a1f2:	or     DWORD PTR [ebx],0x2a531e06
  40a1f8:	aad    0xad
  40a1fa:	add    eax,0xf03b461e
  40a1ff:	jne    0x40a21b
  40a205:	mov    eax,DWORD PTR [ebp-0x4]
  40a208:	mov    esi,DWORD PTR [ebp-0x8]
  40a20b:	xor    eax,edx
  40a20d:	xor    esi,edx
  40a20f:	add    eax,ecx
  40a211:	add    esi,ecx
  40a213:	imul   eax,esi
  40a216:	jmp    0x40a256
  40a21b:	mov    eax,DWORD PTR [ebp+0xc]
  40a21e:	mov    eax,DWORD PTR [eax+0x78]
  40a221:	mov    DWORD PTR [ebp+0xc],eax
  40a224:	mov    eax,DWORD PTR [ebp-0x4]
  40a227:	mov    esi,DWORD PTR [ebp-0x8]
  40a22a:	xor    eax,edx
  40a22c:	xor    esi,edx
  40a22e:	add    eax,ecx
  40a230:	add    esi,ecx
  40a232:	imul   eax,esi
  40a235:	mov    esi,DWORD PTR [ebp+0xc]
  40a238:	cmp    esi,eax
  40a23a:	mov    eax,DWORD PTR [ebp-0x4]
  40a23d:	je     0x40a208
  40a243:	xor    eax,edx
  40a245:	add    eax,ecx
  40a247:	mov    ecx,DWORD PTR [ebp+0xc]
  40a24a:	imul   eax,ecx
  40a24d:	add    eax,DWORD PTR [ebp+0x8]
  40a250:	mov    DWORD PTR [ebp+0xc],eax
  40a253:	mov    eax,DWORD PTR [ebp+0xc]
  40a256:	pop    esi
  40a257:	leave  
  40a258:	ret    0x8
  40a25b:	push   ebp
  40a25c:	mov    ebp,esp
  40a25e:	sub    esp,0x10
  40a261:	sbb    eax,DWORD PTR ds:0x413c88
  40a267:	mov    eax,0xf89c85b0
  40a26c:	xor    edx,edx
  40a26e:	xor    edx,DWORD PTR ds:0x414014
  40a274:	sub    DWORD PTR ds:0x413cf4,edx
  40a27a:	mov    DWORD PTR [ebp-0x4],eax
  40a27d:	add    ecx,ecx
  40a27f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40a286:	or     DWORD PTR ds:0x414014,edi
  40a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a28f:	push   esi
  40a290:	mov    edx,0x7510894
  40a295:	add    esi,0x25d7
  40a29b:	xor    ecx,edx
  40a29d:	mov    DWORD PTR ds:0x413d30,0x18
  40a2a7:	cmp    DWORD PTR ds:0x413d30,0x0
  40a2ae:	je     0x40a2e4
  40a2b4:	cmp    DWORD PTR ds:0x413d30,0x19
  40a2bb:	jne    0x40a2cc
  40a2c1:	push   0x413ce8
  40a2c6:	call   DWORD PTR ds:0x41679c
  40a2cc:	mov    esi,DWORD PTR ds:0x413d30
  40a2d2:	dec    esi
  40a2d3:	mov    DWORD PTR ds:0x413d30,esi
  40a2d9:	jmp    0x40a2a7
  40a2de:	add    esi,DWORD PTR ds:0x413d24
  40a2e4:	mov    esi,0x3272dc
  40a2e9:	neg    DWORD PTR ds:0x413d24
  40a2ef:	push   edi
  40a2f0:	mov    edi,DWORD PTR [ebp+0x10]
  40a2f3:	adc    DWORD PTR ds:0x414008,0x741e
  40a2fd:	add    ecx,esi
  40a2ff:	cmp    ecx,edi
  40a301:	mov    DWORD PTR ds:0x413c80,0x1b1e
  40a30b:	je     0x40a474
  40a311:	mov    ecx,DWORD PTR [ebp-0x4]
  40a314:	mov    edi,DWORD PTR [ebp+0x10]
  40a317:	xor    eax,eax
  40a319:	xor    ecx,edx
  40a31b:	adc    DWORD PTR ds:0x413d2c,0x414008
  40a325:	add    ecx,esi
  40a327:	add    edi,0xfabdbeef
  40a32d:	adc    eax,0xffffffff
  40a330:	neg    DWORD PTR ds:0x413c88
  40a336:	xor    eax,0x0
  40a339:	mov    DWORD PTR [ebp-0xc],eax
  40a33c:	push   ebx
  40a33d:	movzx  eax,BYTE PTR ds:0x413d30
  40a344:	adc    DWORD PTR ds:0x414018,eax
  40a34a:	xor    ebx,ebx
  40a34c:	xor    edi,0x8a29a125
  40a352:	mov    eax,ds:0x413c12
  40a357:	and    DWORD PTR ds:0x413cdc,eax
  40a35d:	mov    eax,ecx
  40a35f:	add    eax,0xfabdbeef
  40a364:	mov    DWORD PTR ds:0x413c6c,0x7b3
  40a36e:	adc    ebx,0xffffffff
  40a371:	add    DWORD PTR ds:0x413c88,0x414018
  40a37b:	xor    eax,0x8a29a125
  40a380:	mov    DWORD PTR ds:0x413d18,0x6932
  40a38a:	xor    ebx,0x0
  40a38d:	mov    DWORD PTR ds:0x413cd8,0x53fd
  40a397:	cmp    eax,edi
  40a399:	mov    DWORD PTR ds:0x413c88,0x1215
  40a3a3:	jne    0x40a3c6
  40a3a9:	mov    DWORD PTR ds:0x413c16,0x2565
  40a3b3:	cmp    ebx,DWORD PTR [ebp-0xc]
  40a3b6:	je     0x40a46e
  40a3bc:	jmp    0x40a3c6
  40a3c1:	mov    esi,0x3272dc
  40a3c6:	and    DWORD PTR ds:0x413d30,0x0
  40a3d0:	xor    eax,eax
  40a3d2:	xor    eax,DWORD PTR ds:0x413d30
  40a3d8:	inc    eax
  40a3d9:	mov    ds:0x413d30,eax
  40a3de:	cmp    DWORD PTR ds:0x413d30,0x26
  40a3e5:	jne    0x40a3f9
  40a3eb:	push   0x413d20
  40a3f0:	push   DWORD PTR [ebp-0x10]
  40a3f3:	call   DWORD PTR ds:0x41675c
  40a3f9:	cmp    DWORD PTR ds:0x413d30,0x1f
  40a400:	jb     0x40a3d0
  40a406:	mov    eax,DWORD PTR [ebp-0x4]
  40a409:	mov    edi,DWORD PTR [ebp-0x8]
  40a40c:	xor    edi,edx
  40a40e:	add    edi,esi
  40a410:	mov    esi,DWORD PTR [ebp+0x8]
  40a413:	imul   edi,ecx
  40a416:	mov    ebx,DWORD PTR [ebp+0xc]
  40a419:	xor    eax,edx
  40a41b:	add    eax,ecx
  40a41d:	mov    al,BYTE PTR [ebx+eax*1+0x3272dc]
  40a424:	mov    BYTE PTR [edi+esi*1],al
  40a427:	mov    eax,DWORD PTR [ebp-0x8]
  40a42a:	mov    esi,DWORD PTR [ebp+0x10]
  40a42d:	xor    eax,edx
  40a42f:	xor    ebx,ebx
  40a431:	add    esi,0xfabdbeef
  40a437:	adc    ebx,0xffffffff
  40a43a:	lea    ecx,[ecx+eax*1+0x3272dc]
  40a441:	xor    edi,edi
  40a443:	xor    esi,0x8a29a125
  40a449:	xor    ebx,0x0
  40a44c:	mov    eax,ecx
  40a44e:	add    eax,0xfabdbeef
  40a453:	adc    edi,0xffffffff
  40a456:	xor    eax,0x8a29a125
  40a45b:	xor    edi,0x0
  40a45e:	cmp    eax,esi
  40a460:	jne    0x40a3c1
  40a466:	cmp    edi,ebx
  40a468:	jne    0x40a3c1
  40a46e:	mov    eax,0xf89c85b1
  40a473:	pop    ebx
  40a474:	pop    edi
  40a475:	pop    esi
  40a476:	leave  
  40a477:	ret    0xc
  40a47a:	push   ebp
  40a47b:	mov    ebp,esp
  40a47d:	sub    esp,0xa4
  40a483:	sbb    DWORD PTR ds:0x413cf4,0x6aac
  40a48d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a490:	and    DWORD PTR ds:0x414008,0x0
  40a49a:	mov    eax,ds:0x414008
  40a49f:	inc    eax
  40a4a0:	mov    ds:0x414008,eax
  40a4a5:	cmp    DWORD PTR ds:0x414008,0x6
  40a4ac:	jne    0x40a4c5
  40a4b2:	push   DWORD PTR [ebp-0x18]
  40a4b5:	push   0x41401c
  40a4ba:	push   0x1f9d
  40a4bf:	call   DWORD PTR ds:0x416760
  40a4c5:	cmp    DWORD PTR ds:0x414008,0x5
  40a4cc:	jne    0x40a4dd
  40a4d2:	mov    eax,ds:0x414008
  40a4d7:	inc    eax
  40a4d8:	mov    ds:0x414008,eax
  40a4dd:	cmp    DWORD PTR ds:0x414008,0x1b
  40a4e4:	jb     0x40a49a
  40a4ea:	mov    DWORD PTR ds:0x41401c,0x17
  40a4f4:	cmp    DWORD PTR ds:0x41401c,0x0
  40a4fb:	je     0x40a54c
  40a501:	cmp    DWORD PTR ds:0x41401c,0x6
  40a508:	jne    0x40a524
  40a50e:	push   DWORD PTR [ebp-0x24]
  40a511:	push   0x3b56
  40a516:	push   DWORD PTR [ebp-0x1c]
  40a519:	push   0x73b3
  40a51e:	call   DWORD PTR ds:0x416764
  40a524:	cmp    DWORD PTR ds:0x41401c,0x7
  40a52b:	jne    0x40a53c
  40a531:	mov    eax,ds:0x41401c
  40a536:	dec    eax
  40a537:	mov    ds:0x41401c,eax
  40a53c:	mov    eax,ds:0x41401c
  40a541:	dec    eax
  40a542:	mov    ds:0x41401c,eax
  40a547:	jmp    0x40a4f4
  40a54c:	mov    eax,0x8a87
  40a551:	xor    ax,WORD PTR [ecx+0x20]
  40a555:	not    DWORD PTR ds:0x413cf4
  40a55b:	mov    ecx,0x3b4a
  40a560:	adc    DWORD PTR ds:0x413c0a,0x414008
  40a56a:	add    ax,cx
  40a56d:	movzx  eax,ax
  40a570:	mov    DWORD PTR [ebp-0x18],eax
  40a573:	mov    ecx,DWORD PTR ds:0x413c78
  40a579:	sbb    DWORD PTR ds:0x413d28,ecx
  40a57f:	mov    BYTE PTR [ebp-0x1],0x7d
  40a583:	add    ecx,DWORD PTR ds:0x414000
  40a589:	lea    eax,[ebp-0x1]
  40a58c:	xor    DWORD PTR ds:0x413c78,ecx
  40a592:	mov    DWORD PTR [ebp-0x10],eax
  40a595:	add    DWORD PTR ds:0x413d1c,0x4151
  40a59f:	mov    al,BYTE PTR [ebp-0x1]
  40a5a2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a5a5:	or     DWORD PTR ds:0x413d20,0x66e0
  40a5af:	xor    al,0x70
  40a5b1:	and    DWORD PTR ds:0x414000,0x34d9
  40a5bb:	sub    al,0xc
  40a5bd:	and    DWORD PTR ds:0x413d1c,0x413c70
  40a5c7:	mov    BYTE PTR [ecx],al
  40a5c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  40a5d0:	or     DWORD PTR ds:0x413ce0,ecx
  40a5d6:	push   ebx
  40a5d7:	jmp    0x40c95f
  40a5dc:	and    ch,BYTE PTR ds:0xb393b193
  40a5e2:	add    cl,BYTE PTR [edi-0x6bf6fe89]
  40a5e8:	stc    
  40a5e9:	sub    al,0x44
  40a5eb:	icebp  
  40a5ec:	daa    
  40a5ed:	push   es
  40a5ee:	jl     0x40a66c
  40a5f0:	pop    es
  40a5f1:	pop    edi
  40a5f2:	jl     0x40a670
  40a5f4:	push   ebp
  40a5f5:	xchg   ecx,eax
  40a5f6:	addr16 rcl esp,1
  40a5f9:	dec    esi
  40a5fa:	inc    ebp
  40a5fb:	xor    DWORD PTR [ecx-0x65],eax
  40a5fe:	add    al,BYTE PTR [ebp+0x17]
  40a601:	test   eax,0x6addb460
  40a606:	mov    ebp,0xafa60e59
  40a60b:	push   cs
  40a60c:	lea    ecx,[edx-0x6c]
  40a60f:	fld    DWORD PTR [esi+0x3e91135b]
  40a615:	and    al,0x54
  40a617:	jmp    0x31cd:0xe9d48ee8
  40a61e:	dec    eax
  40a61f:	mov    eax,0x90b6247e
  40a624:	jmp    0x40a675
  40a626:	sti    
  40a627:	adc    BYTE PTR [ecx-0x5ca10f2f],0xd7
  40a62e:	sbb    edi,DWORD PTR [ebp+0x16c59181]
  40a634:	xor    eax,0x9af4448c
  40a639:	xchg   ebx,eax
  40a63a:	push   esi
  40a63b:	fisttp WORD PTR [ebx]
  40a63d:	xor    edi,DWORD PTR [esi+0x2ebe1941]
  40a643:	dec    ebp
  40a644:	outs   dx,BYTE PTR ds:[esi]
  40a645:	stos   BYTE PTR es:[edi],al
  40a646:	cmp    dl,BYTE PTR [ebp-0x5f87dde1]
  40a64c:	pop    ss
  40a64d:	dec    eax
  40a64e:	(bad)  
  40a64f:	push   edi
  40a650:	push   eax
  40a651:	jp     0x40a65c
  40a653:	and    eax,0x58080da8
  40a658:	cmpxchg BYTE PTR [edx-0x7e],dl
  40a65c:	(bad)  
  40a65e:	adc    edx,ebx
  40a660:	fs (bad) 
  40a663:	push   ebp
  40a664:	and    BYTE PTR [eax],dh
  40a666:	adc    BYTE PTR [edi+edx*4+0x6e],0xd
  40a66b:	adc    eax,0x5fa4ecc1
  40a670:	fnstcw WORD PTR [eax]
  40a672:	inc    edi
  40a673:	sahf   
  40a674:	xor    al,BYTE PTR [ebx-0x5b20fa4c]
  40a67a:	cmovne ebx,DWORD PTR [ebx+ebx*8+0x12]
  40a67f:	inc    ebp
  40a680:	mov    ecx,0x454ec68f
  40a685:	adc    ebp,DWORD PTR [ecx-0x58]
  40a688:	scas   al,BYTE PTR es:[edi]
  40a689:	shl    DWORD PTR [ecx+0x76fb64ac],1
  40a68f:	(bad)  
  40a690:	sbb    al,0x84
  40a692:	lea    esp,[eax-0x2ffc6c8c]
  40a698:	jae    0x40a701
  40a69a:	div    BYTE PTR [esi]
  40a69c:	push   eax
  40a69d:	sub    al,0x39
  40a69f:	imul   esi,DWORD PTR [ebp-0xf],0xffffffe4
  40a6a3:	push   eax
  40a6a4:	arpl   WORD PTR [ecx+0x3ecbf07c],sp
  40a6aa:	cmp    ebp,esp
  40a6ac:	push   0x7d
  40a6ae:	std    
  40a6af:	xlat   BYTE PTR ds:[ebx]
  40a6b0:	jecxz  0x40a665
  40a6b2:	fwait
  40a6b3:	cmc    
  40a6b4:	cdq    
  40a6b5:	sub    al,0x32
  40a6b7:	mov    esi,0x9f25e018
  40a6bc:	test   al,0x1f
  40a6be:	dec    ecx
  40a6bf:	mov    ds,WORD PTR [eax+0x33]
  40a6c2:	loop   0x40a6a9
  40a6c4:	push   edi
  40a6c5:	das    
  40a6c6:	sbb    BYTE PTR [eax+esi*1-0x54],dl
  40a6ca:	push   ds
  40a6cb:	pop    es
  40a6cc:	pop    esi
  40a6cd:	sbb    al,0xda
  40a6cf:	dec    ebp
  40a6d0:	int3   
  40a6d1:	sub    bl,BYTE PTR [eax-0x6c]
  40a6d4:	pop    esi
  40a6d5:	fwait
  40a6d6:	pop    es
  40a6d7:	pusha  
  40a6d8:	stos   DWORD PTR es:[edi],eax
  40a6d9:	xchg   ebp,eax
  40a6da:	mov    edx,es
  40a6dc:	and    DWORD PTR [ecx-0x11],eax
  40a6df:	mov    ch,0x3
  40a6e1:	fmul   QWORD PTR [edi+0x1aa436ba]
  40a6e7:	(bad)  
  40a6e8:	jl     0x40a6fd
  40a6ea:	cld    
  40a6eb:	jae    0x40a738
  40a6ed:	ret    
  40a6ee:	and    bh,dh
  40a6f0:	xchg   esp,eax
  40a6f1:	jae    0x40a704
  40a6f3:	fsubr  QWORD PTR [edi+eax*8]
  40a6f6:	xchg   si,ax
  40a6f8:	in     al,0x40
  40a6fa:	inc    ecx
  40a6fb:	jo     0x40a718
  40a6fd:	imul   ebp,ecx,0xf9088116
  40a703:	mov    ch,0x94
  40a705:	pop    es
  40a706:	aam    0x24
  40a708:	mov    ds:0x31aee3,al
  40a70d:	call   0xc69d:0x6681fa00
  40a714:	in     eax,dx
  40a715:	fisttp WORD PTR ds:0x3ff49a35
  40a71b:	sbb    al,0xd8
  40a71d:	add    eax,0x6d6a846b
  40a722:	push   esi
  40a723:	cmp    eax,DWORD PTR ds:0x1b99f771
  40a729:	and    al,cl
  40a72b:	mov    BYTE PTR [ebx+edi*4],bl
  40a72e:	stos   DWORD PTR es:[edi],eax
  40a72f:	and    al,0xd7
  40a731:	push   0x39
  40a733:	xor    dl,BYTE PTR [edx+0x3b]
  40a736:	xchg   edi,eax
  40a737:	pop    edx
  40a738:	sbb    BYTE PTR [ebx],al
  40a73a:	cmp    DWORD PTR [eax+ebp*2-0x1c0c9e62],0xb667c083
  40a745:	sub    BYTE PTR [eax],0x5b
  40a748:	ds loop 0x40a6fa
  40a74b:	xor    dl,dl
  40a74d:	add    BYTE PTR [edx+esi*8-0x56],dl
  40a751:	cmp    dl,bl
  40a753:	popa   
  40a754:	pop    ebp
  40a755:	pop    edx
  40a756:	jp     0x40a717
  40a758:	pop    ss
  40a759:	and    bl,BYTE PTR ds:0xb3462c3c
  40a75f:	daa    
  40a760:	imul   esp,DWORD PTR [edx-0x78bbeaf8],0x11
  40a767:	dec    ebx
  40a768:	dec    ebp
  40a769:	mov    al,ds:0xf580431e
  40a76e:	sbb    bh,al
  40a770:	dec    esi
  40a771:	aas    
  40a772:	mov    bh,0x12
  40a774:	mov    cl,0xa4
  40a776:	mov    dh,0xb1
  40a778:	xchg   ebx,eax
  40a779:	cmp    DWORD PTR [edx+0x1935f624],esp
  40a77f:	idiv   DWORD PTR [ebx+0x1b]
  40a782:	leave  
  40a783:	cmp    eax,edi
  40a785:	js     0x40a766
  40a787:	xchg   esp,eax
  40a788:	jp     0x40a777
  40a78a:	or     dl,BYTE PTR [ebp+0x17]
  40a78d:	test   DWORD PTR [edx+ebp*1+0x1969a83f],eax
  40a794:	xor    DWORD PTR [eax+ebp*2],esp
  40a797:	jmp    0x17f77cbf
  40a79c:	ror    DWORD PTR [ebx+0x21b5e6eb],cl
  40a7a2:	sbb    edi,ebx
  40a7a4:	stos   DWORD PTR es:[edi],eax
  40a7a5:	xor    esi,DWORD PTR [ebx]
  40a7a7:	cld    
  40a7a8:	ds xchg ebp,eax
  40a7aa:	xor    BYTE PTR [edx-0x3d],0x7f
  40a7ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7af:	std    
  40a7b0:	jle    0x40a73f
  40a7b2:	mov    ds:0xf94f0670,al
  40a7b7:	(bad)  
  40a7b8:	jp     0x40a812
  40a7ba:	pop    ecx
  40a7bb:	or     edx,ebx
  40a7bd:	retf   
  40a7be:	adc    eax,0xc2e15bb4
  40a7c3:	ror    DWORD PTR [eax+0x118c20dd],0x8f
  40a7ca:	(bad)  
  40a7cb:	adc    eax,0xd05a8d71
  40a7d0:	jmp    FWORD PTR [esi+0x6a27a49b]
  40a7d6:	xor    eax,0xb82323c0
  40a7db:	sub    ch,BYTE PTR [edx]
  40a7dd:	sbb    ah,BYTE PTR [ebx-0x6f]
  40a7e0:	ret    0x787d
  40a7e3:	jmp    0x40a811
  40a7e5:	pop    es
  40a7e6:	mov    ah,cl
  40a7e8:	pop    ebp
  40a7e9:	push   ecx
  40a7ea:	rcr    DWORD PTR [ecx-0x342d8816],0x18
  40a7f1:	nop
  40a7f2:	loope  0x40a798
  40a7f4:	test   dh,bh
  40a7f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7f7:	lock jno 0x40a85d
  40a7fa:	sti    
  40a7fb:	adc    ah,BYTE PTR ds:0x8e00b1c1
  40a801:	lahf   
  40a802:	jbe    0x40a80b
  40a804:	and    ebx,DWORD PTR [ecx]
  40a806:	arpl   WORD PTR [ecx],bp
  40a808:	test   BYTE PTR [ecx+0x3059583f],al
  40a80e:	mov    ebp,0xeba0fa76
  40a813:	xor    eax,DWORD PTR [eax+edx*2+0x5d08c47f]
  40a81a:	shl    BYTE PTR [ebx],1
  40a81c:	stc    
  40a81d:	mov    ecx,0x15b5783
  40a822:	add    edx,DWORD PTR [ebx-0xd]
  40a825:	push   edx
  40a826:	inc    eax
  40a827:	lahf   
  40a828:	jg     0x40a815
  40a82a:	adc    ah,BYTE PTR [esi]
  40a82c:	push   ss
  40a82d:	test   al,0x6
  40a82f:	dec    esp
  40a830:	jmp    0xeda9:0x7c3dfdc8
  40a837:	les    eax,FWORD PTR [eax+0x3eda7e36]
  40a83d:	jle    0x40a7eb
  40a83f:	loope  0x40a845
  40a841:	add    DWORD PTR [esi-0x26],eax
  40a844:	xchg   ebp,eax
  40a845:	adc    esp,DWORD PTR [esi+0x19]
  40a848:	xor    DWORD PTR [ebx],ebp
  40a84a:	and    dh,BYTE PTR [edi-0x7a0a1bc3]
  40a850:	push   esp
  40a851:	in     eax,0xd9
  40a853:	push   edi
  40a854:	adc    eax,0x2d005e5c
  40a859:	sbb    DWORD PTR [ecx],0xffffffaa
  40a85c:	sub    DWORD PTR [eax+eiz*2+0x5b],ecx
  40a860:	jp     0x40a8de
  40a862:	push   esp
  40a863:	sub    eax,DWORD PTR [eax]
  40a865:	stc    
  40a866:	push   esp
  40a867:	outs   dx,BYTE PTR ds:[esi]
  40a868:	pop    esp
  40a869:	jmp    edx
  40a86b:	inc    ebp
  40a86c:	in     al,0xc9
  40a86e:	bound  ecx,QWORD PTR ds:0xea8b4879
  40a874:	jo     0x40a8d2
  40a876:	pop    ds
  40a877:	push   0xffffffba
  40a879:	dec    eax
  40a87a:	mov    ds:0x32e12b41,al
  40a87f:	mov    edx,0xc70f50df
  40a884:	or     eax,0xf0207a48
  40a889:	jbe    0x40a8fb
  40a88b:	mov    bh,0x2f
  40a88d:	sub    bl,BYTE PTR [ecx-0x4ed8affb]
  40a893:	call   0x2ec1:0x426317b2
  40a89a:	addr16 lahf 
  40a89c:	jmp    0xa3e4:0xbea089c1
  40a8a3:	gs test eax,0x56b8a233
  40a8a9:	add    DWORD PTR [ebx+0x26178f3c],0x410e8e0c
  40a8b3:	sub    al,0xe7
  40a8b5:	jb     0x40a869
  40a8b7:	jns    0x40a8a3
  40a8b9:	xchg   esi,eax
  40a8ba:	rcl    BYTE PTR [ebp+ebp*4-0x71],1
  40a8be:	cmp    BYTE PTR [esp+eiz*4],cl
  40a8c1:	pop    ss
  40a8c2:	adc    BYTE PTR [edx],dl
  40a8c4:	scas   al,BYTE PTR es:[edi]
  40a8c5:	dec    eax
  40a8c6:	lods   al,BYTE PTR ds:[esi]
  40a8c7:	rol    BYTE PTR es:[ebx-0x1f],0xfe
  40a8cc:	pop    es
  40a8cd:	sub    ebp,edi
  40a8cf:	loope  0x40a912
  40a8d1:	(bad)  
  40a8d3:	addr16 retf 
  40a8d5:	pop    edx
  40a8d6:	fs repnz fwait
  40a8d9:	mov    edx,DWORD PTR [ecx+0x1a46d7c7]
  40a8df:	pop    edi
  40a8e0:	push   cs
  40a8e1:	cli    
  40a8e2:	push   cs
  40a8e3:	xchg   edx,eax
  40a8e4:	cwde   
  40a8e5:	pop    edx
  40a8e6:	aam    0x42
  40a8e8:	fwait
  40a8e9:	cmp    eax,0x3f4437b9
  40a8ee:	cld    
  40a8ef:	push   0x24
  40a8f1:	cmp    DWORD PTR [ecx+esi*8+0x602457e9],0x5f
  40a8f9:	addr16 in eax,dx
  40a8fb:	sbb    dl,al
  40a8fd:	es aaa 
  40a8ff:	ja     0x40a929
  40a901:	push   ss
  40a902:	xchg   DWORD PTR [ebp+0x368f6138],ebp
  40a908:	or     DWORD PTR [ecx*4+0x15923d44],esp
  40a90f:	xchg   edx,eax
  40a910:	popa   
  40a911:	cmp    esi,DWORD PTR [eax-0x154f557]
  40a917:	pop    edi
  40a918:	sbb    dh,BYTE PTR [ecx]
  40a91a:	leave  
  40a91b:	push   0xffffff90
  40a91d:	aas    
  40a91e:	pop    ebx
  40a91f:	pushf  
  40a920:	pop    ecx
  40a921:	iret   
  40a922:	push   esi
  40a923:	jmp    0x4017694e
  40a928:	or     edx,ebx
  40a92a:	push   edx
  40a92b:	retf   0xde86
  40a92e:	and    eax,0x9cc6f553
  40a933:	out    0x77,al
  40a935:	or     BYTE PTR [bp+di-0x12c0],bh
  40a93a:	jb     0x40a9a6
  40a93c:	mov    cl,0xd6
  40a93e:	(bad)  
  40a940:	and    DWORD PTR [edx-0x1c3bfd9c],ecx
  40a946:	daa    
  40a947:	aad    0x98
  40a949:	xchg   esp,eax
  40a94a:	lea    esp,[edx]
  40a94c:	cs pop esp
  40a94e:	push   esp
  40a94f:	sbb    ebx,0xffffffed
  40a952:	test   esp,esi
  40a954:	imul   ebx,DWORD PTR cs:[eax-0x69],0xffffffaa
  40a959:	and    eax,0x33409129
  40a95e:	scas   al,BYTE PTR es:[edi]
  40a95f:	cli    
  40a960:	push   ebp
  40a961:	rcr    BYTE PTR [ebp-0x24],1
  40a964:	bound  esi,QWORD PTR fs:[ebp+0x79]
  40a968:	nop
  40a969:	pxor   mm1,QWORD PTR ss:[ebx]
  40a96d:	stos   DWORD PTR es:[edi],eax
  40a96e:	outs   dx,DWORD PTR ds:[esi]
  40a96f:	int3   
  40a970:	sti    
  40a971:	mov    edi,0x44e4a61d
  40a976:	push   esp
  40a977:	stos   DWORD PTR es:[edi],eax
  40a978:	test   eax,0xccdc4f64
  40a97d:	pop    es
  40a97e:	jae    0x40a90e
  40a980:	xchg   esp,eax
  40a981:	and    al,BYTE PTR [ebx-0x71]
  40a984:	xchg   ebp,eax
  40a985:	and    DWORD PTR [edx-0x76],ecx
  40a988:	out    0x5a,eax
  40a98a:	call   0xcd4d6785
  40a98f:	dec    ecx
  40a990:	dec    esp
  40a991:	test   bh,ah
  40a993:	dec    DWORD PTR [esi+edi*2]
  40a996:	into   
  40a997:	pop    ss
  40a998:	addr16 daa 
  40a99a:	jno    0x40a9aa
  40a99c:	push   ss
  40a99d:	jmp    0xcfc6:0x1e37d35e
  40a9a4:	jle    0x40a9c0
  40a9a6:	xchg   ebx,eax
  40a9a7:	add    eax,0x42b36fa9
  40a9ac:	jb     0x40a933
  40a9ae:	push   ecx
  40a9af:	ficomp DWORD PTR [edx-0x5b]
  40a9b2:	stc    
  40a9b3:	daa    
  40a9b4:	jg     0x40a963
  40a9b6:	outs   dx,DWORD PTR ds:[esi]
  40a9b7:	lods   al,BYTE PTR ds:[esi]
  40a9b8:	scas   al,BYTE PTR es:[edi]
  40a9b9:	ds (bad) 
  40a9bb:	sbb    eax,0xb88a4797
  40a9c0:	ret    
  40a9c1:	iret   
  40a9c2:	adc    ebx,DWORD PTR [edx+eiz*1+0x281fa574]
  40a9c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9ca:	xor    ah,BYTE PTR [ebx+0x1]
  40a9cd:	mov    al,0xe5
  40a9cf:	cmc    
  40a9d0:	dec    ebx
  40a9d1:	sbb    DWORD PTR [ecx+0xc6ebc38],ebp
  40a9d7:	mov    WORD PTR [ecx+ebx*1-0x71277fad],gs
  40a9de:	xchg   edi,eax
  40a9df:	push   es
  40a9e0:	dec    ebp
  40a9e1:	sahf   
  40a9e2:	sbb    al,0xad
  40a9e4:	loopne 0x40a988
  40a9e6:	xchg   ecx,eax
  40a9e7:	or     eax,0xcc6d1e7a
  40a9ec:	loopne 0x40aa59
  40a9ee:	sar    BYTE PTR [ebx+edi*1-0x4eb866c9],cl
  40a9f5:	test   eax,0x33305a34
  40a9fa:	test   eax,0x10c0c839
  40a9ff:	imul   ecx,edi,0x52ed35aa
  40aa05:	cwde   
  40aa06:	lock test DWORD PTR [edi-0x20],edx
  40aa0a:	push   ss
  40aa0b:	push   esi
  40aa0c:	pop    ds
  40aa0d:	sub    BYTE PTR ds:0x7d4bf2dc,bl
  40aa13:	push   ebp
  40aa14:	pusha  
  40aa15:	sahf   
  40aa16:	sbb    BYTE PTR [ebx-0x7d433511],cl
  40aa1c:	pop    esi
  40aa1d:	or     DWORD PTR [ebp-0x7a],ebp
  40aa20:	mov    eax,0xa119155b
  40aa25:	push   ds
  40aa26:	push   0x44c1832f
  40aa2b:	inc    esi
  40aa2c:	mov    dh,0xb8
  40aa2e:	and    BYTE PTR [ebp-0x58379691],dl
  40aa34:	call   0xa885:0x82475f5a
  40aa3b:	jmp    0x40aa03
  40aa3d:	ins    BYTE PTR es:[edi],dx
  40aa3e:	ret    0x9bf7
  40aa41:	ret    
  40aa42:	dec    esp
  40aa43:	or     cl,bl
  40aa45:	and    esp,DWORD PTR [esi+0x5]
  40aa48:	add    eax,0x92a0a016
  40aa4d:	std    
  40aa4e:	test   eax,0xbfc4902f
  40aa53:	sahf   
  40aa54:	cli    
  40aa55:	or     al,0x5e
  40aa57:	adc    bh,0xc3
  40aa5a:	jmp    0x3ed3:0xac10de74
  40aa61:	mov    ch,BYTE PTR [edx-0x39]
  40aa64:	jecxz  0x40aa78
  40aa66:	loope  0x40aa84
  40aa68:	and    al,0x6d
  40aa6a:	into   
  40aa6b:	mov    edx,0x381684c6
  40aa70:	shl    bh,1
  40aa72:	sub    eax,0x14ab33f3
  40aa77:	sbb    al,0x44
  40aa79:	xchg   esp,eax
  40aa7a:	or     BYTE PTR [edi],0xfe
  40aa7d:	call   0x6660ea38
  40aa82:	push   0x49
  40aa84:	jmp    0x8dd8:0x4b2b6195
  40aa8b:	push   0x4fb1d408
  40aa90:	(bad)  [ecx+0x1f]
  40aa93:	popf   
  40aa94:	enter  0x208c,0xdb
  40aa98:	push   edx
  40aa99:	mov    ch,0xfa
  40aa9b:	sub    esp,DWORD PTR [edi*2-0x18f6b5bf]
  40aaa2:	sub    al,0x38
  40aaa4:	in     eax,dx
  40aaa5:	fwait
  40aaa6:	cwde   
  40aaa7:	mov    ebx,?
  40aaa9:	sub    al,0x5d
  40aaab:	pop    edi
  40aaac:	inc    ecx
  40aaad:	and    BYTE PTR [ecx+0x29c50338],0x6b
  40aab4:	xchg   esp,eax
  40aab5:	push   cs
  40aab6:	dec    edi
  40aab7:	xor    eax,0xb189d04a
  40aabc:	push   edi
  40aabd:	pop    ds
  40aabe:	dec    esp
  40aabf:	sub    BYTE PTR ds:0xf7313e41,bl
  40aac5:	in     eax,0xce
  40aac7:	leave  
  40aac8:	inc    ebp
  40aac9:	in     al,dx
  40aaca:	jl     0x40aa9f
  40aacc:	mov    bl,0x1
  40aace:	sbb    BYTE PTR [esi-0x23],0xd9
  40aad2:	xchg   edx,eax
  40aad3:	neg    bh
  40aad5:	or     ecx,esi
  40aad7:	push   cs
  40aad8:	cmp    eax,0xbe31a906
  40aadd:	jecxz  0x40aaf8
  40aadf:	mov    ah,0xfd
  40aae1:	hlt    
  40aae2:	sbb    BYTE PTR [eax+edi*2-0x6574078],cl
  40aae9:	and    al,0xb3
  40aaeb:	fstp   QWORD PTR [edx+0x35]
  40aaee:	aad    0x2d
  40aaf0:	xchg   BYTE PTR [esi+0x41],bl
  40aaf3:	scas   al,BYTE PTR es:[di]
  40aaf5:	inc    ecx
  40aaf6:	(bad)  
  40aaf7:	add    BYTE PTR [eax],0x40
  40aafa:	jbe    0x40ab00
  40aafc:	pop    edx
  40aafd:	mov    ebp,0xf341a896
  40ab02:	cmp    ebx,DWORD PTR [eax-0x13]
  40ab05:	mov    ecx,0x4cbda310
  40ab0a:	repnz aam 0x74
  40ab0d:	in     eax,0xb1
  40ab0f:	mul    BYTE PTR [esi-0x1f]
  40ab12:	dec    edi
  40ab13:	inc    edi
  40ab14:	adc    DWORD PTR [ecx],esp
  40ab16:	mov    cl,0xc0
  40ab18:	loop   0x40ab87
  40ab1a:	inc    eax
  40ab1b:	mov    ebx,0x6ebddc76
  40ab20:	ja     0x40ab6a
  40ab22:	add    ebx,DWORD PTR [esi+0x2e17028a]
  40ab28:	icebp  
  40ab29:	fwait
  40ab2a:	pushf  
  40ab2b:	int3   
  40ab2c:	cmc    
  40ab2d:	lock push edi
  40ab2f:	xchg   ebx,eax
  40ab30:	mov    dh,0x16
  40ab32:	aas    
  40ab33:	enter  0xd82,0xec
  40ab37:	mov    ah,BYTE PTR [ebx+0x772baecf]
  40ab3d:	xchg   ecx,eax
  40ab3e:	into   
  40ab3f:	jae    0x40ab9d
  40ab41:	push   edx
  40ab42:	mov    eax,ds:0xa770c187
  40ab47:	cmp    BYTE PTR [eax+0x21],cl
  40ab4a:	jnp    0x40ab53
  40ab4c:	cmp    ah,BYTE PTR [eax+0x3a87eb29]
  40ab52:	loopne 0x40ab46
  40ab54:	dec    edi
  40ab55:	daa    
  40ab56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab57:	dec    BYTE PTR [edi-0x63]
  40ab5a:	sub    BYTE PTR [eax+0x6a94f080],bl
  40ab60:	ret    0xd1aa
  40ab63:	jmp    0x40ab7c
  40ab65:	pop    edx
  40ab66:	fistp  DWORD PTR [edi+0x5d606212]
  40ab6c:	gs sub al,0x27
  40ab6f:	shl    BYTE PTR [ecx+0x1652d703],cl
  40ab75:	ficom  DWORD PTR [eax+0x4a]
  40ab78:	out    0x1,eax
  40ab7a:	jle    0x40abc7
  40ab7c:	xchg   ebp,eax
  40ab7d:	xor    edx,esi
  40ab7f:	jmp    0x5c05:0xed93830a
  40ab86:	das    
  40ab87:	sti    
  40ab88:	sub    ebx,eax
  40ab8a:	mov    BYTE PTR [ebx],0xa7
  40ab8d:	sub    DWORD PTR [ebx-0x4a83e3ae],ebx
  40ab93:	cmp    al,BYTE PTR [ebp+0x1a]
  40ab96:	loop   0x40aba9
  40ab98:	call   0x79b0:0xa49271d0
  40ab9f:	xchg   ecx,eax
  40aba0:	jmp    0x40ab8f
  40aba2:	sbb    eax,0x2f030018
  40aba7:	mov    ebx,0x93d88e44
  40abac:	mov    ecx,0x46748029
  40abb1:	cdq    
  40abb2:	cmp    ch,cl
  40abb4:	mov    esi,DWORD PTR [eax-0x5f629a25]
  40abba:	and    BYTE PTR [esi-0x6f1faf28],bh
  40abc0:	aam    0x50
  40abc2:	or     cl,BYTE PTR [ebp+eiz*1+0x56]
  40abc6:	ins    BYTE PTR es:[edi],dx
  40abc7:	dec    ecx
  40abc8:	popa   
  40abc9:	into   
  40abca:	adc    eax,0x3c480b10
  40abcf:	push   edx
  40abd0:	call   0x6c8f2995
  40abd5:	add    al,dl
  40abd7:	jne    0x40abe0
  40abd9:	std    
  40abda:	mov    edx,0x587f94d8
  40abdf:	mov    ?,ebp
  40abe1:	fst    DWORD PTR [edi+0x6215a03f]
  40abe7:	jle    0x40ac02
  40abe9:	(bad)  
  40abea:	inc    BYTE PTR [ebx-0x42397d09]
  40abf0:	inc    edi
  40abf1:	sub    DWORD PTR [ebp-0x3e],0xffffff9f
  40abf5:	add    BYTE PTR [edx-0x1],ch
  40abf8:	inc    ebx
  40abf9:	adc    DWORD PTR [esi],edx
  40abfb:	and    al,0x74
  40abfd:	push   edx
  40abfe:	(bad)  
  40ac00:	sub    bl,dh
  40ac02:	ret    
  40ac03:	lods   eax,DWORD PTR ds:[esi]
  40ac04:	mov    esp,0x3398346a
  40ac09:	and    DWORD PTR [esp+ecx*2],edx
  40ac0c:	dec    ebp
  40ac0d:	mov    ds:0x3157ec2d,eax
  40ac12:	arpl   WORD PTR [ebp+edi*4-0x2],si
  40ac16:	gs or  eax,0xd44eb9f5
  40ac1c:	sbb    ebx,DWORD PTR [ecx+ebx*8-0x71]
  40ac20:	lods   eax,DWORD PTR ds:[esi]
  40ac21:	adc    al,0x63
  40ac23:	out    dx,eax
  40ac24:	mov    ss,WORD PTR [edx]
  40ac26:	outs   dx,DWORD PTR ds:[esi]
  40ac27:	cmc    
  40ac28:	loopne 0x40ac79
  40ac2a:	push   ebx
  40ac2b:	mov    dl,0xb
  40ac2d:	xlat   BYTE PTR ds:[ebx]
  40ac2e:	jg     0x40abd8
  40ac30:	(bad)  
  40ac31:	push   esi
  40ac32:	cwde   
  40ac33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac34:	xor    bl,BYTE PTR [edx+ebp*2-0x63342b8a]
  40ac3b:	out    0x51,al
  40ac3d:	xchg   esp,eax
  40ac3e:	lods   eax,DWORD PTR ds:[esi]
  40ac3f:	push   ds
  40ac40:	sub    eax,0x9f97e9ce
  40ac45:	mov    WORD PTR [edi],?
  40ac47:	and    BYTE PTR [edx+0x766e1223],bh
  40ac4d:	xchg   esi,eax
  40ac4e:	push   0x58
  40ac50:	sar    DWORD PTR [edx],0x7c
  40ac53:	or     eax,0xabd74973
  40ac58:	call   0x7514:0x35441b73
  40ac5f:	mov    ds:0x2706e8a3,eax
  40ac64:	inc    eax
  40ac65:	push   eax
  40ac66:	push   ecx
  40ac67:	add    eax,0x3333e6ad
  40ac6c:	sbb    esp,esp
  40ac6e:	les    eax,FWORD PTR [esi-0x44]
  40ac71:	lds    esi,FWORD PTR [esi+0x32]
  40ac74:	test   DWORD PTR [edx],edx
  40ac76:	or     cl,BYTE PTR [eax]
  40ac78:	in     eax,dx
  40ac79:	or     edi,DWORD PTR [eax+0x4c867d6f]
  40ac7f:	cmp    eax,0x82ed0395
  40ac84:	pop    edx
  40ac85:	xchg   BYTE PTR [eax+0x5eca8e2f],ah
  40ac8b:	mov    eax,0xb26019c2
  40ac90:	(bad)  
  40ac91:	ficom  WORD PTR [ebx-0x52777f5d]
  40ac97:	rcr    DWORD PTR [edi+0x6d],1
  40ac9a:	rcl    DWORD PTR [eax+0x2b],cl
  40ac9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac9e:	std    
  40ac9f:	iret   
  40aca0:	jns    0x40ac25
  40aca2:	jns    0x40ac88
  40aca4:	sbb    edi,DWORD PTR [ecx-0x65e38041]
  40acaa:	inc    edi
  40acab:	daa    
  40acac:	shl    BYTE PTR [edi],0x11
  40acaf:	cs leave 
  40acb1:	sti    
  40acb2:	jmp    0x5e22069b
  40acb7:	pop    es
  40acb8:	dec    ebp
  40acb9:	mov    ecx,0xa4d30ac0
  40acbe:	sub    bh,dh
  40acc0:	pop    ebx
  40acc1:	pop    ebx
  40acc2:	push   ebx
  40acc3:	dec    ebx
  40acc4:	jp     0x40acba
  40acc6:	push   esi
  40acc7:	inc    edi
  40acc8:	or     al,0xc7
  40acca:	adc    DWORD PTR [ecx],eax
  40accc:	adc    eax,0xc646be30
  40acd1:	inc    eax
  40acd2:	adc    ebp,DWORD PTR [ebx-0x272afb30]
  40acd8:	add    al,BYTE PTR [eax-0x29dcc7c2]
  40acde:	mov    al,0x54
  40ace0:	inc    ecx
  40ace1:	pop    edx
  40ace2:	and    eax,DWORD PTR [ebx+0x152b9557]
  40ace8:	mov    esi,0x64b0fa9d
  40aced:	or     eax,0x930ac1d9
  40acf2:	mov    ?,esi
  40acf4:	or     DWORD PTR [ebp-0x33],ebp
  40acf7:	lea    ebp,[ebp+0xb]
  40acfa:	mov    ch,0xaa
  40acfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acfd:	cmp    al,0x79
  40acff:	or     BYTE PTR [esi+ecx*4+0x66f1bfa1],bl
  40ad06:	mov    ah,BYTE PTR [ebx-0x2b4f5cf6]
  40ad0c:	sbb    bl,ah
  40ad0e:	in     al,dx
  40ad0f:	dec    si
  40ad11:	ja     0x40ad8e
  40ad13:	or     eax,0xe971d6ad
  40ad18:	outs   dx,DWORD PTR ds:[esi]
  40ad19:	push   ss
  40ad1a:	mov    BYTE PTR [edi],ah
  40ad1c:	aam    0xc1
  40ad1e:	idiv   BYTE PTR [esi-0x54]
  40ad21:	fwait
  40ad22:	call   DWORD PTR [ebx+0x35]
  40ad25:	mov    bh,0x46
  40ad27:	stos   BYTE PTR es:[edi],al
  40ad28:	ins    BYTE PTR es:[edi],dx
  40ad29:	xchg   ecx,eax
  40ad2a:	lea    edx,[eax-0x185696bb]
  40ad30:	mov    esp,DWORD PTR [ecx]
  40ad32:	idiv   BYTE PTR [ebx+ecx*8]
  40ad35:	mov    cl,0x12
  40ad37:	in     al,dx
  40ad38:	dec    edi
  40ad39:	daa    
  40ad3a:	imul   edx,DWORD PTR [esi],0x33cd933b
  40ad40:	inc    eax
  40ad42:	pushf  
  40ad43:	(bad)  
  40ad44:	je     0x40ad27
  40ad46:	repnz mov DWORD PTR [ebx],edx
  40ad49:	pop    edi
  40ad4a:	sub    eax,0xa7ecc655
  40ad4f:	in     eax,0x83
  40ad51:	ss nop
  40ad53:	fist   WORD PTR [eax-0x4c]
  40ad56:	in     eax,dx
  40ad57:	sbb    eax,0xf6555ee6
  40ad5c:	mov    DWORD PTR ds:0xa7f10df0,ebx
  40ad62:	jmp    0xaf156dd4
  40ad67:	sbb    BYTE PTR ds:0xfec38b5b,al
  40ad6d:	sbb    BYTE PTR [edi],bl
  40ad6f:	push   ebx
  40ad70:	mov    ah,0xb6
  40ad72:	push   ebp
  40ad73:	in     eax,dx
  40ad74:	into   
  40ad75:	popf   
  40ad76:	jns    0x40acfc
  40ad78:	jo     0x40ad16
  40ad7a:	ins    BYTE PTR es:[edi],dx
  40ad7b:	les    edx,FWORD PTR [eax-0x2f]
  40ad7e:	cmp    cl,BYTE PTR [eax+edi*8+0x7f]
  40ad82:	mov    ecx,0xe20d8de5
  40ad87:	popf   
  40ad88:	loope  0x40adfc
  40ad8a:	or     dh,BYTE PTR [ecx]
  40ad8c:	pop    ds
  40ad8d:	mov    ebp,0xa61697f8
  40ad92:	jne    0x40ad87
  40ad94:	retf   
  40ad95:	pop    ds
  40ad96:	aad    0xed
  40ad98:	loope  0x40ad70
  40ad9a:	das    
  40ad9b:	dec    ecx
  40ad9c:	mov    esp,0x27ed88f1
  40ada1:	dec    dx
  40ada3:	adc    ah,BYTE PTR [ebx+0x14f229a8]
  40ada9:	scas   al,BYTE PTR es:[edi]
  40adaa:	pop    esi
  40adab:	add    bh,BYTE PTR [edx+0x5ce48024]
  40adb1:	inc    edx
  40adb2:	ret    0x5ac8
  40adb5:	sbb    al,0xe0
  40adb7:	mov    ds:0x6d89ac9e,eax
  40adbc:	addr16 sbb al,0xa3
  40adbf:	out    dx,al
  40adc0:	push   eax
  40adc1:	mov    cl,0xd6
  40adc3:	mov    al,ds:0x35a65fad
  40adc8:	mov    ebx,0xef84e3d3
  40adcd:	or     BYTE PTR [ecx+0x3a],0xdc
  40add1:	pop    eax
  40add2:	hlt    
  40add3:	cli    
  40add4:	mov    al,ds:0xdc855ca3
  40add9:	in     al,0x7b
  40addb:	out    0x3e,al
  40addd:	int3   
  40adde:	fwait
  40addf:	xor    eax,0xf1c4f7cc
  40ade4:	adc    bl,BYTE PTR [edx+esi*1+0x22]
  40ade8:	sbb    cl,BYTE PTR [edx]
  40adea:	aaa    
  40adeb:	in     al,0x6a
  40aded:	xchg   BYTE PTR [ebx+0x4a],bl
  40adf0:	sahf   
  40adf1:	or     eax,0x1539f33
  40adf6:	dec    esp
  40adf7:	xchg   ecx,eax
  40adf8:	enter  0xdb76,0xb6
  40adfc:	mov    ebx,DWORD PTR [esi+0x58050c33]
  40ae02:	fisttp QWORD PTR [ebx-0x2aeb0fc7]
  40ae08:	xchg   ebp,eax
  40ae09:	push   cs
  40ae0a:	lds    esi,FWORD PTR [eax+0x402263d4]
  40ae10:	nop
  40ae11:	mov    edi,0x641bb285
  40ae16:	inc    ebp
  40ae17:	lock repz arpl WORD PTR [ecx-0x4b],sp
  40ae1c:	pop    eax
  40ae1d:	xor    al,0x85
  40ae1f:	call   0x525299bd
  40ae24:	cmc    
  40ae25:	dec    BYTE PTR [ebp+0x61]
  40ae28:	into   
  40ae29:	inc    ebp
  40ae2a:	mov    ebx,0x3dee5eb4
  40ae2f:	jne    0x40add9
  40ae31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae32:	mov    DWORD PTR [ebx-0x71517b71],ebx
  40ae38:	push   ds
  40ae39:	in     eax,0x76
  40ae3b:	fidiv  DWORD PTR [ecx+0x7092b3d1]
  40ae41:	xlat   BYTE PTR ds:[ebx]
  40ae42:	mov    esi,0xa6885e49
  40ae47:	jmp    0xc4e4:0xaff4fb6e
  40ae4e:	sbb    esp,edi
  40ae50:	cmc    
  40ae51:	ror    DWORD PTR [ebp+0x4a],0x98
  40ae55:	test   BYTE PTR [edx],ah
  40ae57:	fistp  WORD PTR [eax+0x21]
  40ae5a:	push   ss
  40ae5b:	jo     0x40ae2c
  40ae5d:	lds    edi,FWORD PTR [ebp+0x10]
  40ae60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae61:	or     ch,al
  40ae63:	test   DWORD PTR [edi],esi
  40ae65:	fwait
  40ae66:	or     bh,al
  40ae68:	out    0xa,eax
  40ae6a:	(bad)
  40ae6e:	add    DWORD PTR [ebp-0x5433015d],edi
  40ae74:	or     BYTE PTR [eax-0x558a5b0b],bh
  40ae7a:	iret   
  40ae7b:	pushf  
  40ae7c:	cli    
  40ae7d:	daa    
  40ae7e:	adc    esi,DWORD PTR [ecx]
  40ae80:	push   ss
  40ae81:	(bad)  
  40ae82:	retf   0x61f4
  40ae85:	sbb    al,0xe2
  40ae87:	iret   
  40ae88:	leave  
  40ae89:	into   
  40ae8a:	xchg   esp,eax
  40ae8b:	inc    DWORD PTR [esi+0x4e]
  40ae8e:	(bad)  
  40ae8f:	push   edi
  40ae90:	js     0x40ae30
  40ae92:	pop    es
  40ae93:	inc    edi
  40ae94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae95:	push   esp
  40ae96:	(bad)  
  40ae98:	ret    
  40ae99:	cmp    eax,0x15c811ea
  40ae9e:	scas   eax,DWORD PTR es:[edi]
  40ae9f:	add    DWORD PTR [edi+0x3411fdf5],0x51
  40aea6:	mov    ch,0xec
  40aea8:	outs   dx,DWORD PTR ds:[esi]
  40aea9:	arpl   WORD PTR [esi-0x24],si
  40aeac:	inc    edi
  40aead:	xchg   DWORD PTR [edx-0x3e125b62],ebx
  40aeb3:	jp     0x40ae54
  40aeb5:	out    0x54,al
  40aeb7:	pop    edi
  40aeb8:	mov    ds:0xc19ea914,al
  40aebd:	xchg   DWORD PTR [edi-0x7b],ebp
  40aec0:	aad    0x79
  40aec2:	cmp    al,0x5e
  40aec4:	inc    esi
  40aec5:	dec    edx
  40aec6:	int    0xca
  40aec8:	dec    ebx
  40aec9:	mov    cl,0x2c
  40aecb:	js     0x40ae58
  40aecd:	pop    es
  40aece:	xchg   eax,edi
  40aed0:	mov    ebp,0x1aec9b7e
  40aed5:	ror    al,0x75
  40aed8:	mov    DWORD PTR [ebx-0x5ce64a7e],eax
  40aede:	xchg   edi,eax
  40aedf:	or     al,0x1f
  40aee1:	cmp    al,0x91
  40aee3:	ror    DWORD PTR [eax],1
  40aee5:	push   ds
  40aee6:	jmp    0x40af2f
  40aee8:	inc    esp
  40aee9:	push   cs
  40aeea:	in     eax,0x47
  40aeec:	sub    DWORD PTR [eax-0x71],edx
  40aeef:	lods   eax,DWORD PTR ds:[esi]
  40aef0:	xor    DWORD PTR [ebx+0x1d],edx
  40aef3:	popf   
  40aef4:	dec    esp
  40aef5:	in     al,dx
  40aef6:	lock (bad) 
  40aef8:	leave  
  40aef9:	das    
  40aefa:	mov    gs,bp
  40aefd:	mov    bh,0x50
  40aeff:	xor    DWORD PTR [eax-0x79e749ee],ecx
  40af05:	mov    ecx,?
  40af07:	xor    DWORD PTR [eax+0x186bc45e],ebx
  40af0d:	and    cl,BYTE PTR [ebx+0x10]
  40af10:	mov    eax,0x192367bc
  40af15:	sti    
  40af16:	ret    0xf97a
  40af19:	jl     0x40aeb1
  40af1b:	dec    eax
  40af1c:	jae    0x40af97
  40af1e:	loop   0x40af30
  40af20:	and    cl,BYTE PTR [esi+eiz*4-0x32888bf6]
  40af27:	fdivr  st,st(1)
  40af29:	arpl   WORD PTR [eax-0x73],bp
  40af2c:	fbld   TBYTE PTR [ebx]
  40af2e:	scas   al,BYTE PTR es:[edi]
  40af2f:	mov    ch,0x1f
  40af31:	icebp  
  40af32:	pop    edi
  40af33:	mov    ?,WORD PTR [ebx]
  40af35:	adc    eax,0x5d846d45
  40af3a:	adc    BYTE PTR [ebx+eiz*4+0x28d4802c],bl
  40af41:	cwde   
  40af42:	sub    bl,BYTE PTR [ecx-0x70165e8e]
  40af48:	dec    esp
  40af49:	inc    edi
  40af4a:	dec    esp
  40af4b:	mov    ecx,0x33ad32f4
  40af50:	and    al,0x65
  40af52:	push   edi
  40af53:	jns    0x40af44
  40af55:	jp     0x40af2a
  40af57:	dec    ecx
  40af58:	rcl    bl,1
  40af5a:	mov    ebx,0x9d9e46fb
  40af5f:	mov    edi,0xdf77f6e8
  40af64:	fild   QWORD PTR [esi]
  40af66:	stc    
  40af67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af68:	xchg   edx,eax
  40af69:	vhsubps xmm2,xmm1,XMMWORD PTR [esi]
  40af6d:	sbb    DWORD PTR ds:0x688799f8,esp
  40af73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af74:	mov    cl,0xc8
  40af76:	mov    ecx,0x659b0543
  40af7b:	retf   
  40af7c:	data16 xchg BYTE PTR [edx+0x3c],dl
  40af80:	lock aad 0x18
  40af83:	cmp    DWORD PTR [ecx],esi
  40af85:	nop
  40af86:	aas    
  40af87:	retf   0x45cf
  40af8a:	cmp    BYTE PTR [ebp-0x1c86307f],0xa0
  40af91:	push   ds
  40af92:	adc    eax,0x3fc621ae
  40af97:	mov    al,ds:0x71a1346f
  40af9c:	and    BYTE PTR [ecx],cl
  40af9e:	out    0xa3,eax
  40afa0:	(bad)  
  40afa1:	fs dec edx
  40afa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afa4:	addps  xmm1,XMMWORD PTR [ebx+edi*8]
  40afa8:	mov    dh,0xc3
  40afaa:	dec    ebp
  40afab:	(bad)  
  40afac:	repz out dx,al
  40afae:	and    al,BYTE PTR cs:[edi]
  40afb1:	in     eax,0x2b
  40afb3:	lock and al,0x5
  40afb6:	(bad)  
  40afb7:	dec    ebp
  40afb8:	fst    DWORD PTR [ecx+eiz*1-0x7656b943]
  40afbf:	push   ecx
  40afc0:	mov    edi,0x32c47ecb
  40afc5:	mov    WORD PTR [edx],ss
  40afc7:	jl     0x40b01b
  40afc9:	ja     0x40af4e
  40afcb:	pop    eax
  40afcc:	inc    eax
  40afcd:	lahf   
  40afce:	repnz sahf 
  40afd0:	cmp    eax,0xca023e64
  40afd5:	jae    0x40b02b
  40afd7:	gs int3 
  40afd9:	aas    
  40afda:	enter  0x4f27,0x18
  40afde:	jae    0x40afd9
  40afe0:	loopne 0x40af70
  40afe2:	mov    ds:0x693ce859,eax
  40afe7:	outs   dx,DWORD PTR ds:[esi]
  40afe8:	cld    
  40afe9:	xchg   esi,eax
  40afea:	xor    eax,0x9af47c4c
  40afef:	pop    ebx
  40aff0:	dec    esi
  40aff1:	dec    ebp
  40aff2:	sahf   
  40aff3:	mul    dh
  40aff5:	iret   
  40aff6:	daa    
  40aff7:	and    eax,0xa520d2f3
  40affc:	ss inc di
  40afff:	repnz adc bh,BYTE PTR ds:0x344b29b
  40b006:	adc    eax,0x4ade16f3
  40b00b:	shr    DWORD PTR [esi-0x34],0xfe
  40b00f:	mov    ebx,0x70ba5d97
  40b014:	call   0xdd214151
  40b019:	in     eax,dx
  40b01a:	and    eax,0x4c780ff6
  40b01f:	and    al,BYTE PTR [esi-0x66]
  40b022:	or     DWORD PTR [ebx+0x54],edi
  40b025:	outs   dx,DWORD PTR ds:[esi]
  40b026:	and    eax,0xe5e7d1b6
  40b02b:	xchg   esp,eax
  40b02c:	xchg   ebp,eax
  40b02d:	ins    DWORD PTR es:[edi],dx
  40b02e:	bound  edx,QWORD PTR [edx]
  40b030:	ret    
  40b031:	push   es
  40b032:	fwait
  40b033:	or     al,0x5d
  40b035:	lods   eax,DWORD PTR ds:[esi]
  40b036:	inc    eax
  40b037:	sbb    DWORD PTR [edi+0x6ff71254],edi
  40b03d:	mov    edx,0x7cefd532
  40b042:	sbb    al,bh
  40b044:	mov    dh,0x4a
  40b046:	mov    ebx,0x17ea0ab2
  40b04b:	xlat   BYTE PTR ds:[ebx]
  40b04c:	xor    BYTE PTR [edi],bh
  40b04e:	mov    edi,0x7495688a
  40b053:	sub    al,0x3b
  40b055:	push   ss
  40b056:	call   0x5e4e:0x99980cf9
  40b05d:	cli    
  40b05e:	lds    edx,FWORD PTR [ebp-0x7f]
  40b061:	loop   0x40b02d
  40b063:	xchg   ecx,eax
  40b064:	and    DWORD PTR [ebp-0x3b],ebp
  40b067:	mov    ah,0x15
  40b069:	clc    
  40b06a:	nop
  40b06b:	frstor [eax+0x4fdc9ce4]
  40b071:	loopne 0x40b0da
  40b073:	std    
  40b074:	pop    es
  40b075:	arpl   WORD PTR [ecx-0x20],sp
  40b078:	fmul   QWORD PTR [edi]
  40b07a:	xor    edi,DWORD PTR [eax-0x76]
  40b07d:	imul   ecx,DWORD PTR [esi-0x393b224e],0xf1d2408b
  40b087:	repz push cs
  40b089:	mov    ecx,0xcd3ddd09
  40b08e:	mov    edi,0xb7f65cd2
  40b093:	addr16 mov ah,0x46
  40b096:	inc    ecx
  40b097:	shr    DWORD PTR [eax],cl
  40b099:	shr    DWORD PTR [ecx-0x53fc57d5],0x45
  40b0a0:	dec    ebx
  40b0a1:	shl    BYTE PTR [edi],1
  40b0a3:	cmp    DWORD PTR [edi+0x7cc89a80],eax
  40b0a9:	jbe    0x40b08c
  40b0ab:	xor    al,0xb9
  40b0ad:	out    0x6e,eax
  40b0af:	jne    0x40b0c5
  40b0b1:	sbb    edx,ecx
  40b0b3:	and    BYTE PTR [esi+ebp*2-0x1],dh
  40b0b7:	dec    esp
  40b0b8:	std    
  40b0b9:	(bad)  
  40b0ba:	xor    eax,0x6f19c2f6
  40b0bf:	mov    al,ds:0x45e4728e
  40b0c4:	inc    ebx
  40b0c5:	adc    DWORD PTR [ecx],edi
  40b0c7:	imul   edi,ecx,0x1e
  40b0ca:	push   esp
  40b0cb:	add    al,0xf1
  40b0cd:	jmp    FWORD PTR [ebx-0x7ae3d454]
  40b0d3:	pop    ss
  40b0d4:	add    BYTE PTR [edi],0x53
  40b0d7:	in     al,0x39
  40b0d9:	fs das 
  40b0db:	dec    ebx
  40b0dc:	xor    cl,BYTE PTR [ecx+0x7bfa84f3]
  40b0e2:	add    bl,BYTE PTR [edx+0x69]
  40b0e5:	mov    ah,0x2b
  40b0e7:	jge    0x40b127
  40b0e9:	mov    BYTE PTR [ebx+0x928529],bh
  40b0ef:	ins    DWORD PTR es:[edi],dx
  40b0f0:	push   edi
  40b0f1:	icebp  
  40b0f2:	cmp    BYTE PTR [ebx-0x4f],dh
  40b0f5:	cmp    dh,BYTE PTR [edx+0x5e]
  40b0f8:	cdq    
  40b0f9:	adc    DWORD PTR [ebp+0x50c26cde],0x2875ba87
  40b103:	cld    
  40b104:	jg     0x40b13e
  40b106:	frstor [edx-0x6496a475]
  40b10c:	lea    esi,[ebp-0x5d9c7dc5]
  40b112:	dec    esi
  40b113:	push   cs
  40b114:	into   
  40b115:	sbb    eax,0xaae7a25c
  40b11a:	lods   al,BYTE PTR ds:[esi]
  40b11b:	push   ds
  40b11c:	adc    al,0x9a
  40b11e:	mov    WORD PTR [eax+eax*2+0x564c7be6],cs
  40b125:	push   ss
  40b126:	jmp    0x4f4495ac
  40b12b:	sahf   
  40b12c:	cdq    
  40b12d:	xchg   edx,eax
  40b12e:	pop    ecx
  40b12f:	jb     0x40b166
  40b131:	dec    ebx
  40b132:	scas   al,BYTE PTR es:[edi]
  40b133:	in     al,dx
  40b134:	stc    
  40b135:	(bad)  
  40b136:	std    
  40b137:	lods   al,BYTE PTR ds:[esi]
  40b138:	jb     0x40b0c3
  40b13a:	jle    0x40b0dd
  40b13c:	xor    DWORD PTR ds:0x962c6696,esi
  40b142:	mov    bl,0x95
  40b144:	jnp    0x40b11a
  40b146:	mov    esi,0x5ca9a1b6
  40b14b:	sbb    BYTE PTR [esi],0x44
  40b14e:	jo     0x40b135
  40b150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b151:	(bad)  
  40b152:	out    dx,eax
  40b153:	out    dx,eax
  40b154:	xor    eax,0xea21ecdd
  40b159:	mov    al,0x77
  40b15b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b15c:	iret   
  40b15d:	js     0x40b11c
  40b15f:	icebp  
  40b160:	push   edi
  40b161:	stos   DWORD PTR es:[edi],eax
  40b162:	stos   DWORD PTR es:[edi],eax
  40b163:	mov    esi,0x75c106fd
  40b168:	cmp    esi,eax
  40b16a:	es mov ch,0x96
  40b16d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b16e:	dec    edi
  40b16f:	pop    es
  40b170:	mov    edx,0x475806e
  40b175:	or     eax,esp
  40b177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b178:	in     al,dx
  40b179:	mov    eax,DWORD PTR [ecx-0x5d269ee3]
  40b17f:	sti    
  40b180:	lahf   
  40b181:	call   0x4e013606
  40b186:	mov    DWORD PTR [esi-0x5a289b5e],ebx
  40b18c:	jae    0x40b1dd
  40b18e:	sbb    DWORD PTR [eax+0x4e],ecx
  40b191:	or     BYTE PTR [ebx+eax*8],bh
  40b194:	gs lock in eax,0x26
  40b198:	cdq    
  40b199:	push   ss
  40b19a:	shr    DWORD PTR [eax],0x69
  40b19d:	push   eax
  40b19e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b19f:	cmp    BYTE PTR [ebx+ecx*1],cl
  40b1a2:	in     eax,dx
  40b1a3:	xchg   ecx,eax
  40b1a4:	inc    esp
  40b1a5:	mov    al,ds:0x48deccd3
  40b1aa:	(bad)  
  40b1ab:	fbld   TBYTE PTR [ebp-0x49b3ed51]
  40b1b1:	push   ss
  40b1b2:	lods   al,BYTE PTR ds:[esi]
  40b1b3:	loop   0x40b1a4
  40b1b5:	add    eax,0xb76f0458
  40b1ba:	ins    DWORD PTR es:[edi],dx
  40b1bb:	mov    edx,0x25157a94
  40b1c0:	loope  0x40b20f
  40b1c2:	sbb    BYTE PTR [esi+0x43112bd8],0x23
  40b1c9:	jp     0x40b1b5
  40b1cb:	jle    0x40b20f
  40b1cd:	mov    ds:0xf0ca68cf,al
  40b1d2:	adc    eax,0x319cabc3
  40b1d7:	pusha  
  40b1d8:	sub    eax,0x7663d191
  40b1dd:	xchg   edi,eax
  40b1de:	jmp    0x40b223
  40b1e0:	inc    ecx
  40b1e1:	mov    al,0xe0
  40b1e3:	mov    edx,0xab884343
  40b1e8:	pop    ebx
  40b1e9:	int    0x8d
  40b1eb:	ja     0x40b26c
  40b1ed:	or     eax,0x1630617
  40b1f2:	xor    al,0x18
  40b1f4:	fmul   st(1),st
  40b1f6:	xchg   edx,eax
  40b1f7:	pop    ebp
  40b1f8:	cli    
  40b1f9:	push   0xacd142e0
  40b1fe:	call   0xa6b:0xa23161d4
  40b205:	out    dx,al
  40b206:	cwde   
  40b207:	sti    
  40b208:	dec    esi
  40b209:	dec    ebp
  40b20a:	jecxz  0x40b1b2
  40b20c:	cli    
  40b20d:	ja     0x40b20f
  40b20f:	lods   al,BYTE PTR ds:[esi]
  40b210:	or     BYTE PTR [eax-0x66],0xab
  40b214:	mov    al,ds:0xa7c3c298
  40b219:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b21a:	mov    eax,ds:0xf5b6bc90
  40b21f:	mov    esp,0x38599d79
  40b224:	mov    ch,0xd7
  40b226:	dec    edx
  40b227:	ret    0x9520
  40b22a:	clc    
  40b22b:	hlt    
  40b22c:	pop    eax
  40b22d:	sti    
  40b22e:	call   edx
  40b230:	push   0x3c
  40b232:	jo     0x40b2ac
  40b234:	and    edx,esi
  40b236:	int3   
  40b237:	and    al,0x47
  40b239:	(bad)  
  40b23a:	xor    edi,DWORD PTR [esi+0x16cd73f]
  40b240:	cmp    bl,BYTE PTR ds:0xd54de1fb
  40b246:	(bad)  
  40b247:	out    dx,al
  40b248:	mov    cl,0x7d
  40b24a:	adc    al,BYTE PTR [ebx]
  40b24c:	lea    eax,[ebx+0x52]
  40b24f:	ret    
  40b250:	cld    
  40b251:	jmp    0x40b213
  40b253:	(bad)  
  40b254:	in     eax,0x9
  40b256:	outs   dx,DWORD PTR ds:[esi]
  40b257:	sbb    al,0x2d
  40b259:	cmp    DWORD PTR [ecx],eax
  40b25b:	sub    ecx,DWORD PTR [ebx]
  40b25d:	out    dx,al
  40b25e:	popa   
  40b25f:	adc    edi,DWORD PTR ds:0x6bdd8154
  40b265:	ret    0x73ec
  40b268:	pusha  
  40b269:	mov    ebx,0x2f882902
  40b26e:	xor    al,0xfa
  40b270:	iret   
  40b271:	xchg   ecx,eax
  40b272:	cs cmp eax,0xb4b7eef3
  40b278:	ficom  DWORD PTR [esi+ebx*4+0x6c8051d2]
  40b27f:	cld    
  40b280:	cdq    
  40b281:	arpl   WORD PTR [edx+0x5],si
  40b284:	and    edi,edi
  40b286:	or     cl,BYTE PTR [edi]
  40b288:	hlt    
  40b289:	out    dx,eax
  40b28a:	lock mov ds:0x521d2ab7,eax
  40b290:	and    BYTE PTR [edi+0x73],dl
  40b293:	jl     0x40b21d
  40b295:	jecxz  0x40b2a6
  40b297:	pushf  
  40b298:	js     0x40b235
  40b29a:	popf   
  40b29b:	cmp    eax,0x27b1ff36
  40b2a0:	mov    BYTE PTR [edx-0x738fd45c],0xc
  40b2a7:	ins    DWORD PTR es:[edi],dx
  40b2a8:	add    DWORD PTR [edi+0xc],ebp
  40b2ab:	mov    bh,0x14
  40b2ad:	pop    edx
  40b2ae:	dec    ecx
  40b2af:	(bad)  
  40b2b0:	or     DWORD PTR [ebx-0x78],0x17e435f2
  40b2b7:	mov    ebp,0x835d5a6d
  40b2bc:	push   edx
  40b2bd:	retf   0x9078
  40b2c0:	push   edi
  40b2c1:	je     0x40b30f
  40b2c3:	test   eax,edx
  40b2c5:	in     eax,0x1e
  40b2c7:	aam    0xce
  40b2c9:	fbstp  TBYTE PTR [eax]
  40b2cb:	dec    eax
  40b2cc:	pushf  
  40b2cd:	sub    cl,BYTE PTR [esi+0x3]
  40b2d0:	xor    BYTE PTR [esi+ecx*1-0x65ad68c5],al
  40b2d7:	mov    al,0x5d
  40b2d9:	pop    ebx
  40b2da:	adc    dl,dh
  40b2dc:	sub    ecx,DWORD PTR [eax+0x42e90132]
  40b2e2:	push   cs
  40b2e3:	or     BYTE PTR ds:0x649f4fb1,0x47
  40b2ea:	xor    eax,DWORD PTR [edi+0x3eecc220]
  40b2f0:	and    DWORD PTR [edi],ecx
  40b2f2:	hlt    
  40b2f3:	es pushf 
  40b2f5:	popa   
  40b2f6:	inc    ecx
  40b2f7:	retf   0x33e2
  40b2fa:	jle    0x40b2a2
  40b2fc:	aaa    
  40b2fd:	mov    ebx,0x7d8ed1b2
  40b302:	mov    DWORD PTR [ebx-0x32],esi
  40b305:	jne    0x40b35b
  40b307:	ins    BYTE PTR es:[edi],dx
  40b308:	or     DWORD PTR [eax-0x3f],0x3c
  40b30c:	out    0x89,eax
  40b30e:	adc    al,0x4a
  40b310:	xor    esi,DWORD PTR [esi+0x1fdf0dca]
  40b316:	shl    BYTE PTR [edi+0x2bf368a1],1
  40b31c:	dec    ebp
  40b31d:	dec    ebx
  40b31e:	or     bh,BYTE PTR [ebp+0x8350043]
  40b324:	fwait
  40b325:	jp     0x40b332
  40b327:	jg     0x40b32e
  40b329:	out    0xde,eax
  40b32b:	ret    0xb112
  40b32e:	dec    ecx
  40b32f:	push   ebx
  40b330:	rcr    DWORD PTR [esi+0x1b],1
  40b333:	fnsave [eax]
  40b335:	adc    BYTE PTR [eax+0x5],al
  40b338:	(bad)  
  40b339:	lds    edx,FWORD PTR [esi+0x30881f66]
  40b33f:	jnp    0x40b2e4
  40b341:	jle    0x40b2ff
  40b343:	dec    edi
  40b344:	push   ebp
  40b345:	cs push 0xb95ba8ed
  40b34b:	retf   
  40b34c:	or     DWORD PTR [edx+0x47c96e66],ebx
  40b352:	push   ebx
  40b353:	stos   DWORD PTR es:[edi],eax
  40b354:	sbb    eax,0x47e9414c
  40b359:	jecxz  0x40b315
  40b35b:	lods   eax,DWORD PTR ds:[esi]
  40b35c:	cmp    eax,0x1096f897
  40b361:	and    eax,DWORD PTR [eax-0x27]
  40b364:	mov    edx,DWORD PTR [esi]
  40b366:	and    ch,bl
  40b368:	or     BYTE PTR [edx-0x47],cl
  40b36b:	xchg   ecx,eax
  40b36c:	mov    dh,0x38
  40b36e:	shl    DWORD PTR [edi-0x31],1
  40b371:	adc    ebx,DWORD PTR [edx]
  40b373:	lods   al,BYTE PTR ds:[esi]
  40b374:	in     eax,dx
  40b375:	clc    
  40b376:	into   
  40b377:	imul   ebx,DWORD PTR [ebp+0x577126ce],0x588c107a
  40b381:	outs   dx,DWORD PTR ds:[esi]
  40b382:	leave  
  40b383:	shl    BYTE PTR [esi],1
  40b385:	shl    DWORD PTR [ebp-0x2f40e020],0x54
  40b38c:	cmc    
  40b38d:	jmp    0xfdb999f8
  40b392:	shr    DWORD PTR [bx+0x6d],0xdf
  40b397:	fild   WORD PTR [ebx]
  40b399:	jb     0x40b3db
  40b39b:	mov    ah,0x6c
  40b39d:	dec    edi
  40b39e:	cmp    eax,eax
  40b3a0:	retf   0xe5f0
  40b3a3:	(bad)  
  40b3a4:	div    DWORD PTR [eax]
  40b3a6:	pop    ebp
  40b3a7:	ins    BYTE PTR es:[edi],dx
  40b3a8:	mov    BYTE PTR [edx+edi*4],bl
  40b3ab:	mov    esp,0xef2c8122
  40b3b0:	cmc    
  40b3b1:	jg     0x40b3fe
  40b3b3:	sti    
  40b3b4:	jns    0x40b37d
  40b3b6:	(bad)  
  40b3b8:	mov    BYTE PTR ds:[edx],ah
  40b3bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3bc:	jg     0x40b3fd
  40b3be:	adc    DWORD PTR [ebx-0xb58edf1],eax
  40b3c4:	test   ebx,esp
  40b3c6:	jns    0x40b38a
  40b3c8:	ins    BYTE PTR es:[edi],dx
  40b3c9:	or     ch,cl
  40b3cb:	rcl    DWORD PTR [eax-0x68],0xdb
  40b3cf:	jmp    DWORD PTR [eax-0x3b]
  40b3d2:	fsub   DWORD PTR [ebp-0x27]
  40b3d5:	fcom   DWORD PTR [edi+0x2a08e221]
  40b3db:	pop    edi
  40b3dc:	cdq    
  40b3dd:	dec    ebp
  40b3de:	xor    dl,BYTE PTR [esi-0x2e75c306]
  40b3e4:	ret    0xcc6c
  40b3e7:	ss jge 0x40b427
  40b3ea:	xchg   BYTE PTR [ecx],bl
  40b3ec:	mov    ebx,0x4b1f54e2
  40b3f1:	adc    eax,0xed3017b8
  40b3f6:	sub    BYTE PTR [edi+0x71],0xdd
  40b3fa:	sbb    BYTE PTR [ebx],al
  40b3fc:	(bad)  
  40b3fd:	xor    ecx,edx
  40b3ff:	mov    ds:0xbcf91110,eax
  40b404:	(bad)  
  40b405:	xor    DWORD PTR [esi],ecx
  40b407:	push   eax
  40b408:	cmp    DWORD PTR [ebp+0x193b4c9f],0x356d1cea
  40b412:	adc    al,0x23
  40b414:	call   FWORD PTR [ebp+0x38c53caa]
  40b41a:	mov    bh,0xb2
  40b41c:	mov    DWORD PTR ds:0x3c267837,edi
  40b422:	jo     0x40b41c
  40b424:	mov    ch,0xc5
  40b426:	sahf   
  40b427:	mov    ebx,0xabc46821
  40b42c:	dec    esi
  40b42d:	ret    
  40b42e:	adc    bl,bl
  40b430:	nop
  40b431:	inc    eax
  40b432:	into   
  40b433:	pop    edx
  40b434:	out    dx,eax
  40b435:	in     eax,0x4a
  40b437:	sbb    eax,0xe79a434
  40b43c:	xor    BYTE PTR [ecx+0x7a],ah
  40b43f:	int    0xd3
  40b441:	cmp    dh,BYTE PTR [ecx]
  40b443:	xor    DWORD PTR [esi+0x24],ebp
  40b446:	jnp    0x40b46e
  40b448:	jo     0x40b401
  40b44a:	mov    edi,gs
  40b44c:	jmp    FWORD PTR [ecx-0x7b21b80d]
  40b452:	mov    edi,0xd7accf31
  40b457:	fisttp DWORD PTR [esi-0x1aa39b5b]
  40b45d:	sub    eax,0x7c374172
  40b462:	inc    edx
  40b463:	dec    esi
  40b464:	out    0xd4,al
  40b466:	outs   dx,DWORD PTR ds:[esi]
  40b467:	(bad)  
  40b469:	xchg   esi,eax
  40b46a:	add    ecx,DWORD PTR [edi]
  40b46c:	or     BYTE PTR [ebx+0x29a3d660],dh
  40b472:	out    0xe5,eax
  40b474:	lods   al,BYTE PTR ds:[esi]
  40b475:	mov    ebx,0xe68164c7
  40b47a:	shl    BYTE PTR [esi+0x5a],0x9
  40b47e:	xchg   dl,bh
  40b480:	out    0x20,eax
  40b482:	scas   al,BYTE PTR es:[edi]
  40b483:	dec    eax
  40b484:	mov    bh,0x89
  40b486:	mov    edi,0x74c98e0d
  40b48b:	xor    eax,0xa59ac8f5
  40b490:	cli    
  40b491:	imul   ebx,DWORD PTR [edx+ebp*1-0x29],0xffffffa5
  40b496:	popf   
  40b497:	fldlg2 
  40b499:	mov    gs,WORD PTR [ebp+ebx*2+0x51]
  40b49d:	and    ah,BYTE PTR [esi+0x65]
  40b4a0:	lods   eax,DWORD PTR ds:[esi]
  40b4a1:	or     eax,0xbe247e9b
  40b4a6:	pop    esp
  40b4a7:	imul   ebx,DWORD PTR ds:0x11efd53f,0xffffff8a
  40b4ae:	sub    dh,BYTE PTR [ecx+0x7e806d29]
  40b4b4:	test   DWORD PTR [eax-0x26428b92],ebp
  40b4ba:	push   ss
  40b4bb:	jne    0x40b4ce
  40b4bd:	push   ebp
  40b4be:	jbe    0x40b456
  40b4c0:	test   al,0x8c
  40b4c2:	mov    al,ds:0x24874766
  40b4c7:	bound  ebp,QWORD PTR [edx+0x44]
  40b4ca:	push   edi
  40b4cb:	das    
  40b4cc:	dec    esp
  40b4cd:	mov    ah,bl
  40b4cf:	out    0xa8,al
  40b4d1:	jge    0x40b48c
  40b4d3:	imul   ebp,DWORD PTR ds:0x76e0cc8c,0xe86666a
  40b4dd:	pop    ebp
  40b4de:	imul   ebp,DWORD PTR [ebx-0x66703559],0x45e52730
  40b4e8:	test   BYTE PTR [ebx],0xb5
  40b4eb:	enter  0xb466,0xc4
  40b4ef:	aam    0x4e
  40b4f1:	sub    dh,ah
  40b4f3:	sub    bh,BYTE PTR [eax]
  40b4f5:	sub    al,0xb2
  40b4f7:	push   ebp
  40b4f8:	popa   
  40b4f9:	(bad)  
  40b4fa:	jg     0x40b548
  40b4fc:	mov    al,ds:0x31bd4b7b
  40b501:	xchg   esp,eax
  40b502:	dec    esi
  40b503:	sub    BYTE PTR [eax-0x4b64e673],bh
  40b509:	(bad)  
  40b50b:	retf   
  40b50c:	jmp    0xd4bd:0x671a649
  40b513:	jge    0x40b576
  40b515:	js     0x40b559
  40b517:	leave  
  40b518:	mov    edx,cs
  40b51a:	shr    ecx,1
  40b51c:	fild   DWORD PTR [edx+0x6e]
  40b51f:	jp     0x40b571
  40b521:	sti    
  40b522:	dec    WORD PTR [eax+0x4bba9a93]
  40b529:	mov    DWORD PTR [eax-0x64d3c579],0xfa390293
  40b533:	pop    eax
  40b534:	outs   dx,DWORD PTR ds:[esi]
  40b535:	leave  
  40b536:	dec    ebp
  40b537:	pop    edi
  40b538:	inc    edi
  40b539:	push   esi
  40b53a:	mov    al,0xee
  40b53c:	xor    ecx,ebp
  40b53e:	in     eax,dx
  40b53f:	popf   
  40b540:	add    eax,0x7772a0d7
  40b545:	dec    eax
  40b546:	fucomip st,st(5)
  40b548:	and    edi,DWORD PTR [esi+0x47]
  40b54b:	dec    esi
  40b54c:	xchg   ecx,eax
  40b54d:	push   esi
  40b54e:	mov    dh,0x6f
  40b550:	out    0xf3,eax
  40b552:	pop    edi
  40b553:	cmp    DWORD PTR [edx-0x49],esp
  40b556:	or     BYTE PTR [edi+ebx*4+0x156410c2],cl
  40b55d:	out    0x32,eax
  40b55f:	mov    WORD PTR [esp+ecx*1-0x5d],ss
  40b563:	sub    DWORD PTR [ebp-0x72],ebp
  40b566:	dec    edx
  40b567:	addr16 push edx
  40b569:	test   eax,0x8753c0ad
  40b56e:	inc    esi
  40b56f:	das    
  40b570:	xchg   esi,eax
  40b571:	cmp    DWORD PTR [eax-0x1d6e5d61],ecx
  40b577:	sahf   
  40b578:	lds    edx,FWORD PTR [ebx-0xf]
  40b57b:	dec    ecx
  40b57c:	jb     0x40b52b
  40b57e:	in     al,dx
  40b57f:	loop   0x40b5e7
  40b581:	fwait
  40b582:	mov    DWORD PTR [edx+0x74e40491],ebp
  40b588:	lods   al,BYTE PTR ds:[esi]
  40b589:	adc    cl,bl
  40b58b:	push   ebp
  40b58c:	out    0xf6,eax
  40b58e:	cmp    bh,BYTE PTR [esi+0x624a1e06]
  40b594:	test   ah,0xc8
  40b597:	aam    0xa
  40b599:	sahf   
  40b59a:	mov    ebp,DWORD PTR [esi-0x71]
  40b59d:	stos   DWORD PTR es:[edi],eax
  40b59e:	(bad)  
  40b59f:	ins    BYTE PTR es:[edi],dx
  40b5a0:	loope  0x40b5bc
  40b5a2:	shl    BYTE PTR [ebx-0x9f0f3d5],1
  40b5a8:	stos   BYTE PTR es:[edi],al
  40b5a9:	(bad)  [ebp-0x15cd13e0]
  40b5af:	repz cld 
  40b5b1:	std    
  40b5b2:	adc    ebp,esi
  40b5b4:	jge    0x40b58d
  40b5b6:	rcl    DWORD PTR [eax+0x5c],1
  40b5b9:	add    bh,BYTE PTR [ebx+ecx*4]
  40b5bc:	sub    bl,BYTE PTR [ebp+0x36]
  40b5bf:	jb     0x40b5dd
  40b5c1:	mov    al,0x71
  40b5c3:	sub    BYTE PTR [eax],bh
  40b5c5:	or     eax,0x73d27951
  40b5ca:	pop    ecx
  40b5cb:	jb     0x40b5fe
  40b5cd:	adc    esp,edx
  40b5cf:	ins    BYTE PTR es:[edi],dx
  40b5d0:	mov    esi,0x1f8b6fa8
  40b5d5:	repz retf 0x340f
  40b5d9:	mov    DWORD PTR [ebx+0x696d68d2],esi
  40b5df:	jle    0x40b60a
  40b5e1:	add    eax,0x8a352fc3
  40b5e6:	in     al,dx
  40b5e7:	push   0xffffffb9
  40b5e9:	cwde   
  40b5ea:	inc    ebx
  40b5eb:	and    cl,BYTE PTR [edi+ecx*4-0x1a]
  40b5ef:	jns    0x40b58f
  40b5f1:	dec    edx
  40b5f2:	add    BYTE PTR [eax+0x4c586c65],ch
  40b5f8:	push   eax
  40b5f9:	jb     0x40b5b4
  40b5fb:	mov    ds:0x3f5837c8,eax
  40b600:	fs xchg edx,eax
  40b602:	xchg   ebp,eax
  40b603:	xor    ebp,ebx
  40b605:	icebp  
  40b606:	push   edx
  40b607:	in     al,dx
  40b608:	inc    esi
  40b609:	pop    esi
  40b60a:	fmulp  st(0),st
  40b60c:	pop    edi
  40b60d:	loope  0x40b60a
  40b60f:	or     BYTE PTR [eax+0x66],cl
  40b612:	adc    DWORD PTR [ebx+0x4cc92af5],ecx
  40b618:	inc    eax
  40b619:	mov    ?,WORD PTR [ebx+esi*1-0x15]
  40b61d:	arpl   WORD PTR [eax],dx
  40b61f:	dec    eax
  40b620:	idiv   DWORD PTR gs:[ecx-0x2e9be8ba]
  40b627:	add    al,0x62
  40b629:	imul   eax,DWORD PTR [ebx-0x589acbc5],0xf3b5f8b1
  40b633:	stos   DWORD PTR es:[edi],eax
  40b634:	cmp    eax,0x25cf026f
  40b639:	mov    esi,0x8f662dd8
  40b63e:	pop    ebx
  40b63f:	into   
  40b640:	loop   0x40b6a6
  40b642:	sbb    BYTE PTR [eax],bh
  40b644:	xlat   BYTE PTR ds:[ebx]
  40b645:	dec    esi
  40b646:	stc    
  40b647:	pop    edi
  40b648:	push   0xffffff8f
  40b64a:	inc    edx
  40b64b:	sub    al,0x21
  40b64d:	dec    esp
  40b64e:	mov    DWORD PTR [ecx],esp
  40b650:	sbb    ebx,DWORD PTR [eax]
  40b652:	rcl    DWORD PTR [ecx],1
  40b654:	sbb    esi,esp
  40b656:	or     dl,BYTE PTR [esi]
  40b658:	jp     0x40b6c5
  40b65a:	mov    dh,BYTE PTR [esi]
  40b65c:	fist   WORD PTR ds:[eax]
  40b65f:	shl    BYTE PTR [edx+edx*1-0x510c84d4],cl
  40b666:	or     al,0x65
  40b668:	in     al,dx
  40b669:	test   eax,0x81a43ebb
  40b66e:	dec    eax
  40b66f:	imul   esp
  40b671:	add    BYTE PTR [edx-0x7092441],0xd0
  40b678:	hlt    
  40b679:	xchg   esp,eax
  40b67a:	push   edi
  40b67b:	adc    al,0x9a
  40b67d:	sub    dh,BYTE PTR [edi]
  40b67f:	xor    eax,0x790c8f72
  40b684:	add    al,BYTE PTR [eax]
  40b686:	jp     0x40b63a
  40b688:	not    DWORD PTR [ebp+0x49]
  40b68b:	push   edx
  40b68c:	ins    DWORD PTR es:[edi],dx
  40b68d:	imul   DWORD PTR [ebx+0x7cabc290]
  40b693:	outs   dx,BYTE PTR ds:[esi]
  40b694:	or     BYTE PTR [esp+ebx*2+0x7],dh
  40b698:	dec    ecx
  40b699:	sub    BYTE PTR [edx+0x26],ah
  40b69c:	fisub  DWORD PTR [edi+0xc]
  40b69f:	pop    ss
  40b6a0:	aas    
  40b6a1:	ins    BYTE PTR es:[edi],dx
  40b6a2:	sbb    al,0xa4
  40b6a4:	xchg   BYTE PTR ds:0xb9f1f990,bl
  40b6aa:	adc    bl,dl
  40b6ac:	sub    eax,0x60c13d01
  40b6b1:	jae    0x40b6d6
  40b6b3:	adc    dh,0x25
  40b6b6:	jb     0x40b696
  40b6b8:	add    ax,0x74b7
  40b6bc:	je     0x40b6ad
  40b6be:	and    BYTE PTR [edi],dl
  40b6c0:	rol    BYTE PTR [eax-0x17],0x52
  40b6c4:	jae    0x40b68e
  40b6c6:	push   ss
  40b6c7:	dec    edi
  40b6c8:	push   ecx
  40b6c9:	loop   0x40b6e0
  40b6cb:	pushf  
  40b6cc:	xchg   edx,eax
  40b6cd:	call   0xc69b:0xcea01b7b
  40b6d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6d5:	inc    esi
  40b6d6:	repnz mov dh,0x2e
  40b6d9:	push   eax
  40b6da:	jbe    0x40b747
  40b6dc:	repz shl BYTE PTR [ecx+0x5811975e],1
  40b6e3:	in     eax,dx
  40b6e4:	jbe    0x40b674
  40b6e6:	repnz inc eax
  40b6e8:	cmp    eax,0x2dc423c8
  40b6ed:	frstor [ecx+0x7c37c113]
  40b6f3:	test   DWORD PTR [edx+ebp*1],edx
  40b6f6:	sub    eax,edx
  40b6f8:	ret    0x45b6
  40b6fb:	dec    edi
  40b6fc:	xor    DWORD PTR [esp+ecx*2],0xdcb35d3b
  40b703:	das    
  40b704:	pushf  
  40b705:	jge    0x40b71f
  40b707:	pop    DWORD PTR [eax-0x44]
  40b70a:	jmp    0x30b1:0x9b578850
  40b711:	push   ebx
  40b712:	jge    0x40b6f5
  40b714:	pop    ecx
  40b715:	mov    eax,DWORD PTR [ecx]
  40b717:	inc    esp
  40b718:	or     bl,BYTE PTR [ebp+0x3a]
  40b71b:	lea    edi,[ecx+0x4ae40fe5]
  40b721:	mov    ah,0x7e
  40b723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b724:	sub    dh,BYTE PTR [edx-0x6e]
  40b727:	outs   dx,DWORD PTR ds:[esi]
  40b728:	rcr    DWORD PTR [eax+0x66],cl
  40b72b:	push   edx
  40b72c:	imul   ebp,DWORD PTR [ebx+0x44f52bac],0xd185d0bd
  40b736:	mov    ch,0x8e
  40b738:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40b73a:	dec    eax
  40b73b:	pop    ss
  40b73c:	pop    ds
  40b73d:	daa    
  40b73e:	loopne 0x40b71e
  40b740:	push   0xa5bb664f
  40b745:	dec    esi
  40b746:	pop    edx
  40b747:	add    BYTE PTR [esi-0x31],0x68
  40b74b:	sbb    al,0xa9
  40b74d:	mov    ss,WORD PTR [edi+0x3d394152]
  40b753:	(bad)
  40b758:	xchg   ebp,eax
  40b759:	jb     0x40b739
  40b75b:	je     0x40b6ec
  40b75d:	(bad)  
  40b75e:	(bad)  
  40b75f:	in     al,dx
  40b760:	aaa    
  40b761:	lods   al,BYTE PTR ds:[esi]
  40b762:	rcl    ah,cl
  40b764:	cmp    al,0x13
  40b766:	push   0x806f8b42
  40b76b:	scas   al,BYTE PTR es:[edi]
  40b76c:	scas   eax,DWORD PTR es:[edi]
  40b76d:	adc    esi,DWORD PTR [eax-0x77]
  40b770:	xchg   ebp,eax
  40b771:	xchg   esi,eax
  40b772:	push   ebx
  40b773:	pusha  
  40b774:	sbb    bl,BYTE PTR [edi-0x74a284ec]
  40b77a:	mov    esp,0x18a5cb42
  40b77f:	aas    
  40b780:	mov    edi,ebx
  40b782:	mov    ebp,0x7b426e79
  40b787:	adc    eax,0x80af3f9b
  40b78c:	dec    edx
  40b78d:	and    eax,0x6d0d2bac
  40b792:	lods   eax,DWORD PTR ds:[esi]
  40b793:	out    0x31,eax
  40b795:	rcl    DWORD PTR [esi+eiz*8-0x7fdafcb7],cl
  40b79c:	inc    edx
  40b79d:	fdiv   DWORD PTR [edx-0x74]
  40b7a0:	or     al,0x88
  40b7a2:	lock dec edi
  40b7a4:	cwde   
  40b7a5:	call   0xfffe:0xf9316960
  40b7ac:	cli    
  40b7ad:	pop    esp
  40b7ae:	mov    DWORD PTR [edx],esp
  40b7b0:	cwde   
  40b7b1:	ja     0x40b7e2
  40b7b3:	dec    edi
  40b7b4:	cwde   
  40b7b5:	jae    0x40b7c8
  40b7b7:	cs mov ecx,0x131bea72
  40b7bd:	(bad)  [ebp-0x18]
  40b7c0:	xchg   DWORD PTR [esi+0x23],ecx
  40b7c3:	cmp    eax,0xd092dcce
  40b7c8:	adc    BYTE PTR [eax+0x3b],ch
  40b7cb:	dec    edx
  40b7cc:	fwait
  40b7cd:	repz (bad) 
  40b7cf:	xchg   esp,eax
  40b7d0:	or     bl,cl
  40b7d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7d3:	clc    
  40b7d4:	pushf  
  40b7d5:	xchg   ecx,eax
  40b7d6:	inc    ebx
  40b7d7:	dec    ebp
  40b7d8:	pop    es
  40b7d9:	dec    ebx
  40b7da:	repz and ah,al
  40b7dd:	ret    
  40b7de:	pusha  
  40b7df:	mov    dl,0xf
  40b7e1:	or     ebx,DWORD PTR [esi]
  40b7e3:	retf   0x26e7
  40b7e6:	cmp    eax,0xe47e69af
  40b7eb:	xrelease lock mov BYTE PTR [ebp+ebp*1-0x16678927],dl
  40b7f4:	les    esp,FWORD PTR [ecx+0x75]
  40b7f7:	sti    
  40b7f8:	mov    ah,0x57
  40b7fa:	push   0x8ece7871
  40b7ff:	ins    DWORD PTR es:[edi],dx
  40b800:	sbb    eax,0xa65e9b02
  40b805:	retf   0x45ff
  40b808:	push   0x280ffbe6
  40b80d:	pop    esp
  40b80e:	inc    edx
  40b80f:	xchg   ecx,eax
  40b810:	retf   
  40b811:	call   0xba7d:0x5255872c
  40b818:	adc    eax,0x8a53433
  40b81d:	std    
  40b81e:	ret    0xd9a4
  40b821:	xchg   esi,eax
  40b822:	mov    ss,WORD PTR [ebp-0x79]
  40b825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b826:	mov    esi,edx
  40b828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b829:	nop
  40b82a:	mov    edi,0xc93c9b5f
  40b82f:	pop    edx
  40b830:	add    eax,0xa8a5b31d
  40b835:	(bad)  [ebx-0x591950bb]
  40b83b:	mov    dh,0xdf
  40b83d:	or     eax,0x82f244f2
  40b842:	or     DWORD PTR [edx-0x42986d20],0x33
  40b849:	test   ah,dh
  40b84b:	shr    BYTE PTR [edi+ebp*1+0x2446d37],0xc4
  40b853:	imul   eax,ebx,0xffffffe0
  40b856:	es cmp eax,0x2e21d0ca
  40b85c:	dec    esp
  40b85d:	das    
  40b85e:	aaa    
  40b85f:	adc    DWORD PTR [ebp-0x49abbff8],0x32
  40b866:	sbb    esp,DWORD PTR [ebx+0x66]
  40b869:	push   edi
  40b86a:	jp     0x40b8c0
  40b86c:	iret   
  40b86d:	xchg   ebx,eax
  40b86e:	pop    ds
  40b86f:	ret    0xfae6
  40b872:	dec    eax
  40b873:	je     0x40b865
  40b875:	push   ebx
  40b876:	scas   al,BYTE PTR es:[edi]
  40b877:	xor    esp,DWORD PTR [edi+0x52]
  40b87a:	sbb    BYTE PTR [eax+0xb],0xdb
  40b87e:	fistp  QWORD PTR [eax+0x3b26cea5]
  40b884:	das    
  40b885:	call   FWORD PTR [edi+0x42]
  40b888:	sbb    al,0x2c
  40b88a:	icebp  
  40b88b:	sti    
  40b88c:	sbb    eax,DWORD PTR [eax]
  40b88e:	(bad)  
  40b890:	cmp    DWORD PTR [ebx-0x2f],edx
  40b893:	inc    eax
  40b894:	ret    
  40b895:	pop    ds
  40b896:	xchg   ebx,eax
  40b897:	and    eax,0x4b3175d0
  40b89c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b89d:	jmp    0x40b882
  40b89f:	popf   
  40b8a0:	js     0x40b85e
  40b8a2:	test   DWORD PTR [edx-0xf1541be],esp
  40b8a8:	imul   edx,ebx,0xc5bad185
  40b8ae:	add    ah,0x83
  40b8b1:	push   edx
  40b8b2:	cmp    cl,cl
  40b8b4:	xchg   esp,eax
  40b8b5:	sbb    ch,ah
  40b8b7:	dec    eax
  40b8b8:	jb     0x40b869
  40b8ba:	lods   eax,DWORD PTR ds:[esi]
  40b8bb:	push   cs
  40b8bc:	jns    0x40b891
  40b8be:	fsubr  DWORD PTR [edi+0x53]
  40b8c1:	sti    
  40b8c2:	out    dx,al
  40b8c3:	dec    ecx
  40b8c4:	xor    BYTE PTR ds:0xa20a1e8d,bl
  40b8ca:	call   0x135b:0xd459ab39
  40b8d1:	(bad)  
  40b8d3:	cld    
  40b8d4:	test   BYTE PTR [edx-0xc157d7d],bh
  40b8da:	lahf   
  40b8db:	mov    WORD PTR ds:0xdccf87b4,cs
  40b8e1:	es mov bh,bh
  40b8e4:	out    dx,al
  40b8e5:	xor    DWORD PTR [ebx+eiz*4-0x9],edi
  40b8e9:	mov    cl,0x25
  40b8eb:	xor    cl,BYTE PTR [edx]
  40b8ed:	shl    BYTE PTR [edi],cl
  40b8ef:	mov    dh,0xf0
  40b8f1:	mov    bh,0x72
  40b8f3:	sbb    esi,edi
  40b8f5:	mov    bl,0xfb
  40b8f7:	inc    ebp
  40b8f8:	mov    esp,0x16c732ac
  40b8fd:	xchg   DWORD PTR [ebp+0x6f],ebx
  40b900:	std    
  40b901:	sub    esi,DWORD PTR [eax-0x15]
  40b904:	inc    esp
  40b905:	es daa 
  40b907:	push   0x3b
  40b909:	sub    bh,0x98
  40b90c:	cwde   
  40b90d:	xor    ebp,edi
  40b90f:	adc    eax,0x3a77de4c
  40b914:	xchg   ebp,eax
  40b915:	pop    edx
  40b916:	add    al,0xcd
  40b918:	mov    ch,0xc8
  40b91a:	ss inc ebx
  40b91c:	inc    edx
  40b91d:	ds ss je 0x40b929
  40b921:	test   eax,0xcdf85902
  40b926:	or     edi,DWORD PTR [edi+0x48]
  40b929:	(bad)
  40b92d:	jle    0x40b93b
  40b92f:	adc    BYTE PTR [ebp+0x76b51122],0x47
  40b936:	loope  0x40b97e
  40b938:	and    DWORD PTR [esi+0x17],0x35cbc5ad
  40b93f:	mov    ds:0x8ea540d0,eax
  40b944:	xor    bl,BYTE PTR [eax]
  40b946:	fcmovnb st,st(4)
  40b948:	sub    BYTE PTR ds:0xb97eccb,0xae
  40b94f:	stos   DWORD PTR es:[edi],eax
  40b950:	mov    dl,0xbe
  40b952:	mov    ch,0x40
  40b954:	inc    esi
  40b955:	xchg   esi,eax
  40b956:	test   ebx,ebx
  40b958:	inc    edi
  40b959:	xor    ah,BYTE PTR [ecx+ebx*8]
  40b95c:	pop    ebx
  40b95d:	test   DWORD PTR [esi],0x5e4b35e4
  40b963:	out    0xf,eax
  40b965:	test   BYTE PTR [edi-0x4ea15723],cl
  40b96b:	xchg   esi,eax
  40b96c:	adc    edi,0xe9a2be10
  40b972:	push   0x1f
  40b974:	jae    0x40b948
  40b976:	(bad)
  40b97a:	sahf   
  40b97b:	mov    dh,0x73
  40b97d:	jmp    FWORD PTR [eax+0x58]
  40b980:	mov    DWORD PTR [esp+eiz*4-0x13e1edd3],eax
  40b987:	mov    eax,ds:0x2b56a85b
  40b98c:	mov    al,ds:0x786a8ea8
  40b991:	mov    ah,0x5f
  40b993:	ins    DWORD PTR es:[edi],dx
  40b994:	xchg   esp,eax
  40b995:	ja     0x40b96e
  40b997:	fwait
  40b998:	cmp    al,0xf3
  40b99a:	mov    dl,0x66
  40b99c:	loope  0x40b991
  40b99e:	adc    al,0x3e
  40b9a0:	mov    edi,0x897a94a3
  40b9a5:	push   ecx
  40b9a6:	jno    0x40b9c4
  40b9a8:	jns    0x40b950
  40b9aa:	jmp    0xd2d19dd7
  40b9af:	inc    BYTE PTR ds:[esi-0x6fd817dc]
  40b9b6:	hlt    
  40b9b7:	jp     0x40ba14
  40b9b9:	and    al,BYTE PTR [eax-0x7c04bdf0]
  40b9bf:	shl    BYTE PTR [esi+0x3a],1
  40b9c2:	cwde   
  40b9c3:	sub    ch,BYTE PTR [esi]
  40b9c5:	jp     0x40b9a5
  40b9c7:	ret    0xbca
  40b9ca:	js     0x40b96f
  40b9cc:	sub    bh,BYTE PTR [esi+0x35]
  40b9cf:	mov    al,0x61
  40b9d1:	mov    ebx,0x6b06a8e4
  40b9d6:	je     0x40b9b9
  40b9d8:	fistp  QWORD PTR [ebp+0x69]
  40b9db:	std    
  40b9dc:	call   0x713d:0x547ec835
  40b9e3:	adc    BYTE PTR [ebx-0x4d],bl
  40b9e6:	rdtsc  
  40b9e8:	pop    edx
  40b9e9:	outs   dx,BYTE PTR ds:[esi]
  40b9ea:	pop    es
  40b9eb:	(bad)  
  40b9ec:	fcomp  st(5)
  40b9ee:	call   0x3387:0x8533cc40
  40b9f5:	out    dx,al
  40b9f6:	push   0xa35ae814
  40b9fb:	mov    eax,ds:0xfae27118
  40ba00:	(bad)  
  40ba01:	(bad)  
  40ba02:	mov    ebp,0x2e387c18
  40ba07:	in     eax,0x48
  40ba09:	enter  0x973a,0x38
  40ba0d:	jo     0x40b9f5
  40ba0f:	ja     0x40b9b6
  40ba11:	retf   
  40ba12:	shld   DWORD PTR [eax-0x59],ebp,cl
  40ba16:	imul   ebx,DWORD PTR [ebx+0x4b],0x4929ae7c
  40ba1d:	xor    ch,BYTE PTR [ebx-0x7c]
  40ba20:	cdq    
  40ba21:	test   eax,0xf27269a4
  40ba26:	loop   0x40ba21
  40ba28:	out    0xb2,al
  40ba2a:	ins    BYTE PTR es:[edi],dx
  40ba2b:	cli    
  40ba2c:	imul   eax,DWORD PTR [edx-0x38],0x53
  40ba30:	ins    BYTE PTR es:[edi],dx
  40ba31:	retf   0x42aa
  40ba34:	pop    ebx
  40ba35:	out    dx,al
  40ba36:	xor    ebx,DWORD PTR [eax+0x26]
  40ba39:	adc    ch,BYTE PTR [ebp+edx*1-0x30]
  40ba3d:	imul   BYTE PTR [ecx]
  40ba3f:	push   esi
  40ba40:	push   eax
  40ba41:	inc    eax
  40ba42:	out    dx,al
  40ba43:	cmp    ch,bh
  40ba45:	xchg   ebx,eax
  40ba46:	inc    edx
  40ba47:	mov    ebp,0x3f229ab2
  40ba4c:	out    dx,al
  40ba4d:	jp     0x40ba1d
  40ba4f:	cdq    
  40ba50:	fimul  WORD PTR [edx+0x5a381e07]
  40ba56:	dec    ecx
  40ba57:	mov    esi,ebx
  40ba59:	out    0xaf,al
  40ba5b:	jecxz  0x40ba8c
  40ba5d:	mov    bh,0x3e
  40ba5f:	xlat   BYTE PTR ds:[ebx]
  40ba60:	dec    esi
  40ba61:	push   ss
  40ba62:	imul   edx,DWORD PTR [eax+0x6a],0x88e307f2
  40ba69:	sub    al,0x7
  40ba6b:	jno    0x40bace
  40ba6d:	out    dx,al
  40ba6e:	cmp    eax,0x3054d31
  40ba73:	or     eax,0x54b8cf7f
  40ba78:	rcl    DWORD PTR [edi+eiz*8],0x3f
  40ba7c:	int3   
  40ba7d:	pop    ebp
  40ba7e:	jo     0x40bad1
  40ba80:	lods   eax,DWORD PTR ds:[esi]
  40ba81:	pop    ss
  40ba82:	sbb    BYTE PTR [eax-0x29],0x96
  40ba86:	not    DWORD PTR [ebx-0x2e8f7b97]
  40ba8c:	repz mov ah,0xe
  40ba8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba90:	push   ds
  40ba91:	es pop esi
  40ba93:	xchg   ebx,eax
  40ba94:	and    ch,BYTE PTR [edi+0x559422b8]
  40ba9a:	sub    edx,esi
  40ba9c:	imul   ebx,DWORD PTR [esi],0xb0e79b6b
  40baa2:	push   ss
  40baa3:	fisttp QWORD PTR [esi-0x5]
  40baa6:	lods   eax,DWORD PTR ds:[esi]
  40baa7:	scas   eax,DWORD PTR es:[edi]
  40baa8:	jl     0x40bb0f
  40baaa:	test   eax,0xfcd48712
  40baaf:	in     eax,0x98
  40bab1:	scas   eax,DWORD PTR es:[edi]
  40bab2:	xor    edi,DWORD PTR ds:0xfe55619
  40bab8:	mov    eax,0x523ded9a
  40babd:	addr16 inc esp
  40babf:	aad    0xa7
  40bac1:	cmp    eax,0xe46b567
  40bac6:	fdivrp st(1),st
  40bac8:	fwait
  40bac9:	mov    ecx,0xf8a354cd
  40bace:	or     bl,BYTE PTR [ebx]
  40bad0:	xor    ebp,DWORD PTR cs:[esi-0x5ebe4c29]
  40bad7:	cmp    ah,BYTE PTR [edx+0x461b9199]
  40badd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bade:	not    ebx
  40bae0:	cmc    
  40bae1:	(bad)  
  40bae2:	out    0x3e,al
  40bae4:	lea    eax,[eax-0x14e74526]
  40baea:	sbb    DWORD PTR [ecx],edi
  40baec:	loop   0x40baa9
  40baee:	mov    eax,0xf83ba22a
  40baf3:	adc    eax,0x9cd724ee
  40baf8:	test   eax,0xb1f47349
  40bafd:	inc    edi
  40bafe:	push   ebp
  40baff:	sub    eax,DWORD PTR [eax+0x60c63318]
  40bb05:	fld    QWORD PTR [eax-0x4a]
  40bb08:	mov    esi,gs
  40bb0a:	bnd ret 0x7c18
  40bb0e:	in     eax,dx
  40bb0f:	xor    BYTE PTR [ecx+0xdcfcdb0],bl
  40bb15:	adc    al,BYTE PTR [ebx+eiz*4]
  40bb18:	shl    al,0x76
  40bb1b:	mov    WORD PTR [edx+0x56],?
  40bb1e:	push   ebp
  40bb1f:	(bad)  
  40bb21:	bnd jge 0x40bad5
  40bb24:	mov    BYTE PTR [edx+edx*1],al
  40bb27:	scas   eax,DWORD PTR es:[edi]
  40bb28:	pop    ecx
  40bb29:	pop    edi
  40bb2a:	or     DWORD PTR [eax],eax
  40bb2c:	mov    al,ds:0x208d7ea4
  40bb31:	sbb    DWORD PTR [edx-0x324ddc10],ebp
  40bb37:	add    al,0x4e
  40bb39:	dec    ecx
  40bb3a:	outs   dx,DWORD PTR ds:[esi]
  40bb3b:	push   ds
  40bb3c:	and    al,0x12
  40bb3e:	(bad)  
  40bb40:	hlt    
  40bb41:	mov    ebx,0x4c44425a
  40bb46:	xor    eax,0x4b352faf
  40bb4b:	push   ss
  40bb4c:	sbb    ebx,esi
  40bb4e:	or     cl,BYTE PTR [eax+0x3c]
  40bb51:	je     0x40bb9d
  40bb53:	push   es
  40bb54:	pushf  
  40bb55:	xchg   ecx,eax
  40bb56:	aam    0xc6
  40bb58:	in     eax,dx
  40bb59:	cmp    edi,DWORD PTR [esi-0x59]
  40bb5c:	loope  0x40bba1
  40bb5e:	test   eax,0x4158e757
  40bb63:	adc    DWORD PTR [edx+edi*4-0x34],edx
  40bb67:	inc    ebp
  40bb68:	cld    
  40bb69:	cmp    DWORD PTR [edi-0x48],ebx
  40bb6c:	jle    0x40bbb5
  40bb6e:	stos   DWORD PTR es:[edi],eax
  40bb6f:	jbe    0x40baf2
  40bb71:	repz or eax,0x915cf890
  40bb77:	sub    ebx,DWORD PTR [esp+0x1b]
  40bb7b:	mov    ah,0x4e
  40bb7d:	aaa    
  40bb7e:	pop    eax
  40bb7f:	data16 jmp 0x40bb35
  40bb82:	sti    
  40bb83:	hlt    
  40bb84:	jae    0x40bb76
  40bb86:	test   ecx,0x113397d8
  40bb8c:	or     DWORD PTR [esi],esi
  40bb8e:	dec    ecx
  40bb8f:	cmp    dh,BYTE PTR [edi-0x22308c96]
  40bb95:	adc    al,0x84
  40bb97:	mov    dh,0x3
  40bb99:	loope  0x40bb9d
  40bb9b:	loop   0x40bb31
  40bb9d:	jmp    DWORD PTR [edi-0x7e]
  40bba0:	fisub  WORD PTR [esp+ebp*4+0x5e]
  40bba4:	(bad)  
  40bba5:	mov    al,ds:0x70b36bf6
  40bbaa:	sbb    al,0xc5
  40bbac:	dec    ebp
  40bbad:	jle    0x40bc09
  40bbaf:	mov    DWORD PTR [eax+0x2d],edx
  40bbb2:	mov    DWORD PTR [ecx-0x33],edi
  40bbb5:	push   0x5d
  40bbb7:	mov    ds:0xab7ebd5a,al
  40bbbc:	ins    DWORD PTR es:[edi],dx
  40bbbd:	ror    edi,cl
  40bbbf:	cdq    
  40bbc0:	push   ebp
  40bbc1:	mov    ds:0x250882cb,eax
  40bbc6:	xchg   edx,eax
  40bbc7:	jno    0x40bb53
  40bbc9:	mov    esp,0xdc603d33
  40bbce:	cwde   
  40bbcf:	jne    0x40bc11
  40bbd1:	push   ecx
  40bbd2:	jmp    0xec75:0x81b87bd0
  40bbd9:	mov    ebp,0xe0cee288
  40bbde:	mov    DWORD PTR [esi+0x57c08ce9],esi
  40bbe4:	test   BYTE PTR [ebx+ebx*2],0xa5
  40bbe8:	xlat   BYTE PTR ds:[ebx]
  40bbe9:	jae    0x40bc34
  40bbeb:	mov    ebp,0x31db31e8
  40bbf0:	sbb    edi,esi
  40bbf2:	push   ss
  40bbf3:	jl     0x40bc54
  40bbf5:	push   edi
  40bbf6:	(bad)  
  40bbf8:	ds pushf 
  40bbfa:	daa    
  40bbfb:	(bad)  
  40bbfc:	outs   dx,DWORD PTR ds:[esi]
  40bbfd:	jp     0x40bc07
  40bbff:	test   al,0xb3
  40bc01:	stos   BYTE PTR es:[edi],al
  40bc02:	adc    dl,BYTE PTR [esi+edx*8]
  40bc05:	imul   ebp,DWORD PTR [edx-0x3f],0xc
  40bc09:	scas   al,BYTE PTR es:[edi]
  40bc0a:	xchg   edx,eax
  40bc0b:	dec    BYTE PTR [eax+0x28]
  40bc0e:	jno    0x40bbcb
  40bc10:	jae    0x40bc1a
  40bc12:	or     al,0x69
  40bc14:	aad    0xd4
  40bc16:	and    ebp,DWORD PTR [eax]
  40bc18:	cmp    cl,BYTE PTR [eax]
  40bc1a:	cld    
  40bc1b:	push   eax
  40bc1c:	out    0xc6,eax
  40bc1e:	hlt    
  40bc1f:	fld    QWORD PTR [esi]
  40bc21:	addr16 inc ebx
  40bc23:	mov    BYTE PTR [esi+0x78],bl
  40bc26:	out    0x69,eax
  40bc28:	iret   
  40bc29:	ja     0x40bbf3
  40bc2b:	enter  0x540e,0x63
  40bc2f:	xor    BYTE PTR [edi+esi*2],0x87
  40bc33:	fidivr DWORD PTR [esi]
  40bc35:	rol    DWORD PTR [edx+0x54839cac],cl
  40bc3b:	ret    0xe582
  40bc3e:	nop
  40bc3f:	in     al,0xc6
  40bc41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc42:	mov    ah,0x89
  40bc44:	neg    BYTE PTR [ebx+0x68]
  40bc47:	pop    ss
  40bc48:	retf   
  40bc49:	inc    ecx
  40bc4a:	gs sbb al,0x56
  40bc4d:	pop    esi
  40bc4e:	ror    BYTE PTR [esi+0x692d0fd],0xa9
  40bc55:	mov    edx,0xa8f56d8c
  40bc5a:	aad    0xa6
  40bc5c:	icebp  
  40bc5d:	gs dec ebp
  40bc5f:	arpl   bx,ax
  40bc61:	cmp    BYTE PTR [ebp+0x30],cl
  40bc64:	lea    edi,[edx-0x51bd2b36]
  40bc6a:	sahf   
  40bc6b:	(bad)  [ecx-0x183d4a03]
  40bc71:	mov    eax,0x6984ecb1
  40bc76:	and    DWORD PTR [ecx],0xffffffa1
  40bc79:	outs   dx,BYTE PTR ds:[esi]
  40bc7a:	xchg   ecx,eax
  40bc7b:	jle    0x40bc0f
  40bc7d:	mov    ebx,0x7a7e0a4a
  40bc82:	das    
  40bc83:	cmp    al,0xf
  40bc85:	adc    bl,BYTE PTR [eax+0x25]
  40bc88:	jl     0x40bcf3
  40bc8a:	pop    ecx
  40bc8b:	ret    0x732b
  40bc8e:	or     DWORD PTR ds:0x1f510ec6,ebp
  40bc94:	cmp    ebx,edx
  40bc96:	or     dl,BYTE PTR [edx]
  40bc98:	push   ecx
  40bc99:	out    0x80,al
  40bc9b:	lods   eax,DWORD PTR ds:[esi]
  40bc9c:	cmp    dh,ch
  40bc9e:	mov    eax,DWORD PTR [ebx-0x7b]
  40bca1:	fwait
  40bca2:	popa   
  40bca3:	adc    eax,0xf5f8a095
  40bca8:	dec    esp
  40bca9:	xchg   cl,bl
  40bcab:	pushf  
  40bcac:	in     eax,0xfb
  40bcae:	ficomp DWORD PTR [esi-0x38]
  40bcb1:	lds    esp,FWORD PTR [edx+0x20]
  40bcb4:	pop    ebx
  40bcb5:	fwait
  40bcb6:	imul   edx,DWORD PTR [eax+ecx*4+0x20e94133],0x5f
  40bcbe:	and    BYTE PTR [eax+0x6f],ch
  40bcc1:	xor    edi,DWORD PTR [ebx+0x7]
  40bcc4:	clc    
  40bcc5:	mov    bl,0xc3
  40bcc7:	into   
  40bcc8:	adc    BYTE PTR [ebp-0x3ef297a0],bh
  40bcce:	ss or  al,0xd0
  40bcd1:	das    
  40bcd2:	push   es
  40bcd3:	push   ebx
  40bcd4:	jae    0x40bd00
  40bcd6:	call   0x7999738c
  40bcdb:	(bad)  
  40bcdc:	lds    eax,FWORD PTR [esi]
  40bcde:	inc    edi
  40bcdf:	jno    0x40bd19
  40bce1:	mov    ecx,0x87dc8130
  40bce6:	xchg   ebx,eax
  40bce7:	jmp    0x40bc7c
  40bce9:	in     al,dx
  40bcea:	xchg   edx,eax
  40bceb:	push   esi
  40bcec:	xor    BYTE PTR [edx],dl
  40bcee:	ss dec ecx
  40bcf0:	retf   
  40bcf1:	hlt    
  40bcf2:	push   edi
  40bcf3:	repz add DWORD PTR ds:0xcf92758f,ebp
  40bcfa:	fnstsw WORD PTR [edx-0x5689a665]
  40bd00:	or     al,dh
  40bd02:	ins    DWORD PTR es:[di],dx
  40bd04:	and    BYTE PTR [bp+si],ch
  40bd07:	daa    
  40bd08:	xchg   edx,eax
  40bd09:	adc    esi,esi
  40bd0b:	push   0xffffffd3
  40bd0d:	sub    al,0xe
  40bd0f:	push   edx
  40bd10:	pop    ds
  40bd11:	mov    WORD PTR [ebx+eiz*4],?
  40bd14:	jp     0x40bcb6
  40bd16:	call   0xb84a220e
  40bd1b:	ins    BYTE PTR es:[edi],dx
  40bd1c:	fmulp  st(6),st
  40bd1e:	and    ebp,DWORD PTR [edx+0x3b129a21]
  40bd24:	ins    BYTE PTR es:[edi],dx
  40bd25:	cmp    cl,BYTE PTR [ecx]
  40bd27:	mov    edx,0x1f9e4651
  40bd2c:	arpl   di,cx
  40bd2e:	ins    DWORD PTR es:[edi],dx
  40bd2f:	cmp    DWORD PTR [ebx+0x10],esp
  40bd32:	(bad)  
  40bd34:	cmp    dl,dl
  40bd36:	adc    ebx,edi
  40bd38:	stos   DWORD PTR es:[edi],eax
  40bd39:	cmovns edx,DWORD PTR [ecx]
  40bd3c:	xor    al,0x80
  40bd3e:	mov    bh,0xf2
  40bd40:	dec    esi
  40bd41:	or     al,0x74
  40bd43:	pop    ebx
  40bd44:	pop    esi
  40bd45:	and    BYTE PTR [ebx-0x43a4700f],al
  40bd4b:	in     eax,0xc9
  40bd4d:	sub    eax,0xda7bd69e
  40bd52:	push   edi
  40bd53:	fld    QWORD PTR [esi-0x52]
  40bd56:	and    dh,bl
  40bd58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd59:	jne    0x40bd4d
  40bd5b:	std    
  40bd5c:	arpl   bx,cx
  40bd5e:	xor    eax,0xf73679ef
  40bd63:	mov    esi,0x7df5039b
  40bd68:	mov    ecx,0xc1fa7cd5
  40bd6d:	mov    ds:0xa91e04c8,eax
  40bd72:	cmc    
  40bd73:	nop
  40bd74:	mov    al,ss:0x878f647f
  40bd7a:	or     ebx,DWORD PTR [edi+ecx*2]
  40bd7d:	cmp    al,0xe2
  40bd7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd80:	in     al,dx
  40bd81:	sbb    DWORD PTR [eax],esp
  40bd83:	lods   al,BYTE PTR ds:[esi]
  40bd84:	xchg   ecx,eax
  40bd85:	xchg   BYTE PTR [edi+esi*2-0x70],bl
  40bd89:	pop    esi
  40bd8a:	pop    eax
  40bd8b:	scas   eax,DWORD PTR es:[edi]
  40bd8c:	cmp    eax,0xe417e8c6
  40bd91:	push   ecx
  40bd92:	inc    edx
  40bd93:	mov    dh,BYTE PTR [ecx+ebx*8]
  40bd96:	push   ds
  40bd97:	and    BYTE PTR [ebx+0x39b8976a],bh
  40bd9d:	or     BYTE PTR [esi],al
  40bd9f:	xchg   BYTE PTR [ebx-0x4cd9aedc],cl
  40bda5:	ret    
  40bda6:	xchg   BYTE PTR [ebp+0x41],dl
  40bda9:	stc    
  40bdaa:	scas   al,BYTE PTR es:[edi]
  40bdab:	dec    edx
  40bdac:	(bad)  
  40bdae:	xor    dl,BYTE PTR [eax-0x19]
  40bdb1:	or     eax,0xcf8a5e13
  40bdb6:	adc    dl,BYTE PTR [ecx+edi*8-0x1e]
  40bdba:	fnstcw WORD PTR [esp+esi*4]
  40bdbd:	jns    0x40bd5e
  40bdbf:	cmp    BYTE PTR [eax],ch
  40bdc1:	push   eax
  40bdc2:	xchg   esp,eax
  40bdc3:	ins    DWORD PTR es:[edi],dx
  40bdc4:	out    dx,eax
  40bdc5:	push   edi
  40bdc6:	inc    ebx
  40bdc7:	pop    ebp
  40bdc8:	pop    ebp
  40bdc9:	popf   
  40bdca:	es cmc 
  40bdcc:	xchg   edx,eax
  40bdcd:	jle    0x40bd72
  40bdcf:	mov    ds:0x1e12b0f6,eax
  40bdd4:	inc    esi
  40bdd5:	clc    
  40bdd6:	jle    0x40be23
  40bdd8:	jo     0x40bdf8
  40bdda:	fidiv  WORD PTR [esi]
  40bddc:	int3   
  40bddd:	xchg   esp,eax
  40bdde:	pop    ecx
  40bddf:	and    eax,0xf30a1177
  40bde4:	push   es
  40bde5:	add    ch,dh
  40bde7:	in     al,dx
  40bde8:	push   0x616098ea
  40bded:	add    dh,al
  40bdef:	loope  0x40be12
  40bdf1:	adc    BYTE PTR [ebx],dl
  40bdf3:	out    0xba,eax
  40bdf5:	aad    0x20
  40bdf7:	nop
  40bdf8:	retf   0xe894
  40bdfb:	es pop ecx
  40bdfd:	sub    BYTE PTR [ebp+0x1d3d8548],0x99
  40be04:	lods   eax,DWORD PTR ds:[esi]
  40be05:	das    
  40be06:	or     esi,DWORD PTR ds:0x2cd23981
  40be0c:	nop
  40be0d:	xor    eax,0x4fd2d6cc
  40be12:	dec    eax
  40be13:	lds    eax,FWORD PTR [ecx+0x4efe1f43]
  40be19:	cmp    eax,0xcfc3d184
  40be1e:	(bad)  
  40be1f:	fistp  QWORD PTR [ebp+0x67134ad6]
  40be25:	(bad)  [ebx]
  40be27:	mov    bl,0xf2
  40be29:	ins    DWORD PTR es:[edi],dx
  40be2a:	(bad)  
  40be2b:	push   cs
  40be2c:	or     al,0xe4
  40be2e:	sahf   
  40be2f:	fisub  DWORD PTR [eax-0x6d]
  40be32:	add    BYTE PTR [esi+0x1b],bh
  40be35:	jge    0x40be7a
  40be37:	xchg   ebp,eax
  40be38:	daa    
  40be39:	ror    DWORD PTR [edi+edx*4],0x79
  40be3d:	fadd   DWORD PTR ds:0xd4f2deea
  40be43:	push   esi
  40be44:	icebp  
  40be45:	fwait
  40be46:	mov    edx,0x1a64240
  40be4b:	ds pop ebx
  40be4d:	sbb    al,BYTE PTR [ebp-0x347028e5]
  40be53:	cdq    
  40be54:	sbb    bl,BYTE PTR fs:[esi+0xbdb7d64]
  40be5b:	xchg   ebp,eax
  40be5c:	or     BYTE PTR [edi],ah
  40be5e:	add    al,0xf2
  40be60:	into   
  40be61:	push   edx
  40be62:	lods   eax,DWORD PTR ds:[esi]
  40be63:	das    
  40be64:	mov    eax,ds:0x325b8151
  40be69:	(bad)  
  40be6a:	mov    edi,0x32c0411c
  40be6f:	push   eax
  40be70:	sbb    ebx,DWORD PTR [eax+0xe]
  40be73:	adc    al,BYTE PTR [ecx]
  40be75:	lds    edi,FWORD PTR [ebp+0x35c66be5]
  40be7b:	loop   0x40be00
  40be7d:	or     ebx,ebp
  40be7f:	rcl    BYTE PTR [ebp+0x3b131e1],1
  40be85:	mov    ch,0x5
  40be87:	sbb    al,0xc6
  40be89:	dec    esi
  40be8a:	pop    edx
  40be8b:	aaa    
  40be8c:	loop   0x40bec0
  40be8e:	cmp    eax,0x848771eb
  40be93:	(bad)  
  40be95:	cmp    al,0xd7
  40be97:	popf   
  40be98:	adc    eax,0x2585414f
  40be9d:	jl     0x40be6e
  40be9f:	jmp    0xb8e3:0x7740d8ec
  40bea6:	inc    eax
  40bea7:	gs jl  0x40bea9
  40beaa:	mov    ah,0x6f
  40beac:	push   esp
  40bead:	cmp    dl,BYTE PTR [ecx+0x45]
  40beb0:	mov    esp,0x89458775
  40beb5:	pop    esi
  40beb6:	je     0x40bea5
  40beb8:	ret    
  40beb9:	lods   al,BYTE PTR ds:[esi]
  40beba:	mov    eax,0x63178562
  40bebf:	and    eax,0xc4e5de97
  40bec4:	adc    DWORD PTR [esi-0x77],edx
  40bec7:	stc    
  40bec8:	adc    bh,ah
  40beca:	daa    
  40becb:	jl     0x40bed1
  40becd:	pop    es
  40bece:	cli    
  40becf:	and    BYTE PTR [eax],cl
  40bed1:	aaa    
  40bed2:	fwait
  40bed3:	inc    ecx
  40bed4:	cs push ds
  40bed6:	les    ebp,FWORD PTR [ebp+0x5e585d32]
  40bedc:	add    al,0x55
  40bede:	clc    
  40bedf:	cmp    dh,bl
  40bee1:	imul   ebp,DWORD PTR [esi],0xfffffff6
  40bee4:	and    DWORD PTR [ebx+0x5e],0x6e
  40bee8:	push   esp
  40bee9:	xchg   ecx,eax
  40beea:	xchg   ebx,eax
  40beeb:	add    DWORD PTR [eax-0x1481149b],ebx
  40bef1:	iret   
  40bef2:	and    edi,edi
  40bef4:	push   eax
  40bef5:	or     BYTE PTR [ecx-0x39],bh
  40bef8:	adc    bh,BYTE PTR [ebp-0x1bc9c3dc]
  40befe:	add    bl,BYTE PTR [edx+0x4c]
  40bf01:	test   eax,0x889be603
  40bf06:	inc    esi
  40bf07:	sti    
  40bf08:	sub    ecx,ebp
  40bf0a:	pop    ebp
  40bf0b:	xor    eax,0x6fc5a249
  40bf10:	inc    edx
  40bf11:	rol    BYTE PTR [edx],1
  40bf13:	pop    ebx
  40bf14:	add    eax,0x1e905d51
  40bf19:	in     al,dx
  40bf1a:	imul   esp,DWORD PTR [esi-0x3235cc40],0x6f
  40bf21:	es cdq 
  40bf23:	hlt    
  40bf24:	in     eax,0x1d
  40bf26:	inc    ecx
  40bf27:	lock std 
  40bf29:	xor    BYTE PTR [ebx+edi*8+0x59],cl
  40bf2d:	jno    0x40bf61
  40bf2f:	fadd   DWORD PTR [esp+edi*2]
  40bf32:	pop    esi
  40bf33:	(bad)  
  40bf34:	mov    al,0xe8
  40bf36:	inc    ebp
  40bf37:	cmp    al,0xda
  40bf39:	jne    0x40bf43
  40bf3b:	mov    ch,0x42
  40bf3d:	inc    esp
  40bf3e:	dec    eax
  40bf3f:	or     al,0xdc
  40bf41:	jl     0x40bf06
  40bf43:	loopne 0x40bf63
  40bf45:	sub    dh,BYTE PTR [ecx+0x202e652d]
  40bf4b:	inc    edx
  40bf4c:	jnp    0x40bf05
  40bf4e:	cwde   
  40bf4f:	stos   BYTE PTR es:[edi],al
  40bf50:	mov    al,ds:0x9e5d736b
  40bf55:	sbb    eax,0xd6bd7400
  40bf5a:	mov    al,0xf8
  40bf5c:	outs   dx,BYTE PTR ds:[esi]
  40bf5d:	loopne 0x40bf87
  40bf5f:	xchg   edi,eax
  40bf60:	hlt    
  40bf61:	xchg   ecx,eax
  40bf62:	mov    al,bl
  40bf64:	loope  0x40bf4c
  40bf66:	and    bh,BYTE PTR [ebp+eiz*1-0x18181c62]
  40bf6d:	test   eax,0x184e1270
  40bf72:	lea    edi,[ecx-0x4b]
  40bf75:	pusha  
  40bf76:	pop    ss
  40bf77:	inc    eax
  40bf78:	push   DWORD PTR [ebp-0x61]
  40bf7b:	mov    ah,0x0
  40bf7d:	and    al,0xd1
  40bf7f:	loop   0x40bfe1
  40bf81:	shl    DWORD PTR [eax+eax*8+0x156f7fbf],0xcf
  40bf89:	push   ebp
  40bf8a:	aam    0x2
  40bf8c:	jae    0x40bf96
  40bf8e:	inc    eax
  40bf8f:	mov    ecx,esi
  40bf91:	bound  esi,QWORD PTR [ebx]
  40bf93:	aas    
  40bf94:	and    al,0x7
  40bf96:	push   ecx
  40bf97:	icebp  
  40bf98:	and    eax,0x97e5debc
  40bf9e:	icebp  
  40bf9f:	xor    DWORD PTR [eax],edx
  40bfa1:	xchg   edi,eax
  40bfa2:	frstor [eax+0x3b3992f0]
  40bfa8:	lea    esp,[ebx+ebx*4-0x47d1f824]
  40bfaf:	stos   DWORD PTR es:[edi],eax
  40bfb0:	fs pop esp
  40bfb2:	and    eax,0xa52e11a2
  40bfb7:	cs retf 0x6a71
  40bfbb:	aad    0x58
  40bfbd:	inc    ecx
  40bfbe:	jle    0x40bf51
  40bfc0:	rol    BYTE PTR [eax],cl
  40bfc2:	push   esi
  40bfc3:	outs   dx,BYTE PTR ds:[esi]
  40bfc4:	push   0x7f
  40bfc6:	stc    
  40bfc7:	jb     0x40bf63
  40bfc9:	loope  0x40c031
  40bfcb:	fild   QWORD PTR cs:[ecx]
  40bfce:	mov    ebx,0xbcdb10e
  40bfd3:	mov    ch,0x6c
  40bfd5:	mov    ebp,0xe7cb6701
  40bfda:	cmp    eax,edx
  40bfdc:	pop    esp
  40bfdd:	mov    eax,0x115eb66c
  40bfe2:	cmp    edx,DWORD PTR [eax+0x74127b36]
  40bfe8:	add    DWORD PTR ss:0x9540d3d0,ecx
  40bfef:	out    dx,al
  40bff0:	sub    DWORD PTR [edi],edi
  40bff2:	test   BYTE PTR [edi+esi*2],dl
  40bff5:	cmp    esp,ebp
  40bff7:	jmp    0x1446:0x24a29129
  40bffe:	mov    BYTE PTR [ecx],bh
  40c000:	std    
  40c001:	data16 loope 0x40bf96
  40c004:	or     eax,DWORD PTR ds:0xa1ab
  40c009:	lea    edx,[esi+0x3649124f]
  40c00f:	out    0x25,eax
  40c011:	and    al,0x97
  40c013:	xchg   edi,eax
  40c014:	pop    ebp
  40c015:	pop    edx
  40c016:	pop    edi
  40c017:	sub    DWORD PTR [ebp+eax*1+0x7d],0x83607ebc
  40c01f:	or     al,BYTE PTR [esi+0x6d]
  40c022:	xchg   ecx,eax
  40c023:	pop    esp
  40c024:	mov    bh,0x1e
  40c026:	add    edi,esp
  40c028:	and    al,0xe0
  40c02a:	scas   eax,DWORD PTR es:[edi]
  40c02b:	repz out dx,eax
  40c02d:	je     0x40c09e
  40c02f:	xchg   edx,eax
  40c030:	call   0x3ec7704e
  40c035:	enter  0x2f6b,0x99
  40c039:	push   DWORD PTR [edi-0x74c24cf9]
  40c03f:	lea    edi,[eax+0x1a]
  40c042:	jmp    0x40bfd9
  40c044:	jo     0x40c04f
  40c046:	fwait
  40c047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c048:	mov    esi,DWORD PTR [esi]
  40c04a:	(bad)  
  40c04b:	rcr    BYTE PTR [esi-0x5b],1
  40c04e:	lds    eax,FWORD PTR [ebp+0x67]
  40c051:	ret    
  40c052:	test   ebp,0x9900046a
  40c058:	mov    ebx,0xc074281c
  40c05d:	(bad)  
  40c05f:	sbb    eax,0x8435eee7
  40c064:	inc    ebx
  40c065:	aad    0x88
  40c067:	jl     0x40c088
  40c069:	fcom   DWORD PTR [esi+0x330f7973]
  40c06f:	bound  cx,DWORD PTR [edi+edx*4+0x69]
  40c074:	(bad)  
  40c076:	or     eax,0x6e632542
  40c07b:	cmp    al,0x6a
  40c07d:	test   DWORD PTR [esi-0x7a],edx
  40c080:	mul    BYTE PTR [esi-0x2f224216]
  40c086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c087:	(bad)  
  40c088:	into   
  40c089:	mov    al,ds:0x728ed7d0
  40c08e:	fwait
  40c08f:	ret    
  40c090:	ret    0x44ba
  40c093:	fucompp 
  40c095:	mov    bh,0x47
  40c097:	mov    ebx,0xb2785654
  40c09c:	(bad)  
  40c09d:	shl    BYTE PTR [ebx+ebp*8],1
  40c0a0:	ins    DWORD PTR es:[edi],dx
  40c0a1:	sub    BYTE PTR [edi+0x2d],dh
  40c0a4:	call   0x6473d318
  40c0a9:	xchg   edi,eax
  40c0aa:	das    
  40c0ab:	test   DWORD PTR es:[esi],esp
  40c0ae:	stc    
  40c0af:	mov    edx,0xf8d45a9d
  40c0b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0b5:	(bad)  
  40c0b6:	mov    dl,0x10
  40c0b8:	aam    0xd
  40c0ba:	dec    edx
  40c0bb:	xor    cl,bl
  40c0bd:	aad    0xa5
  40c0bf:	outs   dx,DWORD PTR ds:[esi]
  40c0c0:	ins    BYTE PTR es:[edi],dx
  40c0c1:	jl     0x40c114
  40c0c3:	test   al,0xe
  40c0c5:	sub    eax,0x7cd6a161
  40c0ca:	out    dx,al
  40c0cb:	daa    
  40c0cc:	mov    WORD PTR [ebp+0x2e],?
  40c0cf:	es pop ecx
  40c0d1:	rcl    DWORD PTR [edx+0x47f63604],cl
  40c0d7:	mov    eax,0xdeae8cd5
  40c0dc:	retf   0xd35e
  40c0df:	iret   
  40c0e0:	jecxz  0x40c0b6
  40c0e2:	and    al,0x49
  40c0e4:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40c0e6:	inc    edi
  40c0e7:	pop    ebp
  40c0e8:	jg     0x40c0e1
  40c0ea:	cmp    ecx,DWORD PTR [eax]
  40c0ec:	push   cs
  40c0ed:	xchg   ebx,eax
  40c0ee:	repz pop esi
  40c0f0:	iret   
  40c0f1:	adc    al,BYTE PTR [ecx+eax*2-0x3d]
  40c0f5:	pusha  
  40c0f6:	stos   DWORD PTR es:[edi],eax
  40c0f7:	sbb    BYTE PTR [edi],ah
  40c0f9:	adc    BYTE PTR [esi-0x398a29be],0x9a
  40c100:	outs   dx,DWORD PTR ds:[esi]
  40c101:	mov    dl,0x2a
  40c103:	fwait
  40c104:	sub    DWORD PTR [edx-0x44],ebx
  40c107:	loop   0x40c135
  40c109:	lea    edx,cs:[eax]
  40c10c:	xor    eax,0x9a733c8a
  40c111:	jg     0x40c138
  40c113:	xor    al,0x85
  40c115:	or     eax,DWORD PTR [edi+0x3073c186]
  40c11b:	dec    esi
  40c11c:	repnz and BYTE PTR [edi+0x11736976],ah
  40c123:	sbb    BYTE PTR [edi+0x2b],0xfd
  40c127:	pop    esi
  40c128:	nop
  40c129:	sub    DWORD PTR [ecx+0x56],0x4b130b68
  40c130:	mov    edi,0x7f1ce86b
  40c135:	retf   
  40c136:	sti    
  40c137:	pop    ss
  40c138:	pop    ecx
  40c139:	and    esp,DWORD PTR [edi+0x2d09cf95]
  40c13f:	and    DWORD PTR ds:0x95f8d1d8,edi
  40c145:	inc    ecx
  40c146:	test   eax,0xcc35e524
  40c14b:	xor    al,0xd7
  40c14d:	mov    al,0xb6
  40c14f:	and    eax,0x780edf3f
  40c154:	lock retf 
  40c156:	outs   dx,BYTE PTR ds:[esi]
  40c157:	out    dx,eax
  40c158:	mov    edx,0x96a5e215
  40c15d:	shl    DWORD PTR [ecx+eiz*4-0x20],1
  40c161:	aaa    
  40c162:	jmp    0xdcd62fa8
  40c167:	nop
  40c168:	(bad)  
  40c169:	mov    ds:0xf54bc933,al
  40c16e:	xchg   dl,dh
  40c170:	mov    ecx,0x29e53778
  40c175:	fisttp WORD PTR [edi-0x7c50164b]
  40c17b:	push   cs
  40c17c:	dec    eax
  40c17d:	pop    esi
  40c17e:	outs   dx,BYTE PTR ds:[esi]
  40c17f:	sbb    ch,BYTE PTR [ecx+edi*4+0x2714a55]
  40c186:	pop    edi
  40c187:	cmp    al,0xd8
  40c189:	sbb    BYTE PTR [ebx-0x7687f56d],ah
  40c18f:	aad    0xec
  40c191:	xchg   ecx,eax
  40c192:	cwde   
  40c193:	scas   al,BYTE PTR es:[edi]
  40c194:	cmp    al,0xdb
  40c196:	jnp    0x40c1b5
  40c198:	push   eax
  40c199:	inc    ecx
  40c19a:	ficom  DWORD PTR [edi+0x3cc1f7d5]
  40c1a0:	aad    0x4b
  40c1a2:	dec    esi
  40c1a3:	cmp    eax,0xe5bbf728
  40c1a8:	and    BYTE PTR [edi],0xb7
  40c1ab:	push   ds
  40c1ac:	and    DWORD PTR [edx],ebx
  40c1ae:	fild   WORD PTR [esi+0x5f604824]
  40c1b4:	and    ebx,ecx
  40c1b6:	add    al,0x71
  40c1b8:	pop    esp
  40c1b9:	xor    esi,DWORD PTR [ebp-0x2d482620]
  40c1bf:	pop    edi
  40c1c0:	sbb    eax,0x4930ac82
  40c1c5:	jl     0x40c161
  40c1c7:	addr16 pusha 
  40c1c9:	xlat   BYTE PTR ds:[ebx]
  40c1ca:	dec    edx
  40c1cb:	retf   0x189e
  40c1ce:	enter  0x96ef,0x39
  40c1d2:	and    DWORD PTR [eax-0x44ac1d9e],ebx
  40c1d8:	iret   
  40c1d9:	das    
  40c1da:	inc    edx
  40c1db:	inc    ecx
  40c1dc:	xor    eax,0x856a4cf3
  40c1e1:	inc    ecx
  40c1e2:	ja     0x40c1fd
  40c1e4:	xor    eax,0x606cf891
  40c1e9:	push   edi
  40c1ea:	add    eax,0x591e3508
  40c1ef:	jns    0x40c20e
  40c1f1:	imul   ebx,ebx,0xffffffd8
  40c1f4:	add    DWORD PTR [edx],edi
  40c1f6:	out    dx,al
  40c1f7:	or     edi,eax
  40c1f9:	mov    ebp,ss
  40c1fb:	jecxz  0x40c246
  40c1fd:	ror    BYTE PTR [ebp-0x33],1
  40c200:	test   BYTE PTR [ebp-0x8cd58ae],ah
  40c206:	xor    esp,DWORD PTR [ebx]
  40c208:	rcl    DWORD PTR [edx-0x4b3ed10a],0xe1
  40c20f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c210:	push   ebx
  40c211:	mov    ebx,0xaf1dd7b5
  40c216:	out    0x4a,al
  40c218:	fist   WORD PTR [ebx-0x7c]
  40c21b:	add    esi,edi
  40c21d:	cwde   
  40c21e:	inc    edx
  40c21f:	and    BYTE PTR [eax],cl
  40c221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c222:	call   0xa86d:0xf6cb9e63
  40c229:	sbb    ebp,eax
  40c22b:	cmp    al,0x5a
  40c22d:	add    DWORD PTR ds:0x81337ff7,esi
  40c233:	dec    esi
  40c234:	push   edi
  40c235:	inc    edi
  40c236:	aad    0x10
  40c238:	sbb    ecx,edx
  40c23a:	or     eax,DWORD PTR [ecx]
  40c23c:	ret    
  40c23d:	out    dx,eax
  40c23e:	jne    0x40c236
  40c240:	pop    ebx
  40c241:	loop   0x40c221
  40c243:	fist   WORD PTR [edi]
  40c245:	fcomp  st(4)
  40c247:	mov    eax,ds:0xaf5fa439
  40c24c:	cmp    ebx,DWORD PTR [ebp+ebp*8+0x4e]
  40c250:	jge    0x40c209
  40c252:	in     eax,0xb1
  40c254:	loop   0x40c2a8
  40c256:	mov    DWORD PTR [esi+0x52],0xbb9304aa
  40c25d:	push   cs
  40c25e:	or     bh,BYTE PTR [eax+0x3854f7cb]
  40c264:	stos   DWORD PTR es:[edi],eax
  40c265:	mov    esp,0xa964e8c1
  40c26a:	jp     0x40c2b6
  40c26c:	jne    0x40c29a
  40c26e:	das    
  40c26f:	adc    BYTE PTR ds:0x98661a16,al
  40c275:	xor    dh,BYTE PTR [edx+0x264b03e9]
  40c27b:	inc    ecx
  40c27c:	inc    edi
  40c27d:	loopne 0x40c272
  40c27f:	xor    BYTE PTR [ecx],0x20
  40c282:	fdivr  DWORD PTR [ebx+0x7]
  40c285:	jp     0x40c2bc
  40c287:	jle    0x40c2a3
  40c289:	imul   esp,esi,0x881053dd
  40c28f:	mov    cl,ch
  40c291:	sar    DWORD PTR [edx],1
  40c293:	jmp    0x40c239
  40c295:	jne    0x40c265
  40c297:	shl    BYTE PTR [eax],0xf4
  40c29a:	(bad)  
  40c29b:	clc    
  40c29c:	xchg   dh,al
  40c29e:	add    BYTE PTR [ebp+eiz*2-0x3a],dh
  40c2a2:	pop    DWORD PTR [ecx+0x4]
  40c2a5:	sub    edx,DWORD PTR [ebp-0x6a98865]
  40c2ab:	into   
  40c2ac:	out    0x25,al
  40c2ae:	ins    DWORD PTR es:[edi],dx
  40c2af:	pop    esp
  40c2b0:	fs cmp al,0x68
  40c2b3:	fild   WORD PTR [ecx+ecx*8+0x5347eb8f]
  40c2ba:	and    al,0xe9
  40c2bc:	xor    esi,DWORD PTR [edi+0x77f400e4]
  40c2c2:	lea    ebp,[edi+0x45013ef3]
  40c2c8:	xchg   BYTE PTR [ecx],ch
  40c2ca:	and    DWORD PTR [ebp-0x44552d2f],ecx
  40c2d0:	sar    bl,cl
  40c2d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2d3:	and    DWORD PTR [esi+0x42],edi
  40c2d6:	mov    WORD PTR [eax],?
  40c2d8:	js     0x40c290
  40c2da:	xor    BYTE PTR [ebp+0xde62514],al
  40c2e0:	add    DWORD PTR [edi],edx
  40c2e2:	push   esi
  40c2e3:	mov    al,0xd9
  40c2e6:	dec    edx
  40c2e7:	jmp    0x4bb0f089
  40c2ec:	xor    BYTE PTR [ebp-0x30],0xa1
  40c2f0:	and    ecx,DWORD PTR [ecx]
  40c2f2:	out    0x33,al
  40c2f4:	leave  
  40c2f5:	xchg   ebp,eax
  40c2f6:	aas    
  40c2f7:	leave  
  40c2f8:	mov    esi,0x504435e4
  40c2fd:	nop
  40c2fe:	imul   esi,esi,0xc3be6926
  40c304:	dec    ebp
  40c305:	inc    esp
  40c306:	cmp    BYTE PTR [esi],dl
  40c308:	sub    BYTE PTR ds:0x2ac5010d,dl
  40c30e:	ss adc al,0xe9
  40c311:	sub    al,0xfd
  40c313:	add    DWORD PTR [eax+0x2a],0x5f81932
  40c31a:	call   FWORD PTR ds:[esi-0x3f19d370]
  40c321:	jmp    0xe4cc69c4
  40c326:	mov    DWORD PTR [ebp+0x31],edx
  40c329:	sub    al,0x57
  40c32b:	xchg   esp,eax
  40c32c:	sub    ebp,DWORD PTR [esi]
  40c32e:	sub    bl,ch
  40c330:	adc    BYTE PTR [edi-0x6e],bh
  40c333:	std    
  40c334:	dec    edx
  40c335:	(bad)
  40c339:	sbb    DWORD PTR [edx],esp
  40c33b:	jle    0x40c3ab
  40c33d:	cmp    cl,BYTE PTR [edx]
  40c33f:	ficomp DWORD PTR [edx]
  40c341:	in     eax,dx
  40c342:	add    dl,bh
  40c344:	nop
  40c345:	es xchg ecx,eax
  40c347:	mov    al,0xb0
  40c349:	sub    DWORD PTR [edi+ecx*2-0x530bb998],esi
  40c350:	mov    ah,0x6
  40c352:	sahf   
  40c353:	call   0xbbcc17ca
  40c358:	jns    0x40c314
  40c35a:	pop    ds
  40c35b:	cli    
  40c35c:	add    BYTE PTR [ebp+eax*1-0x1e],ah
  40c360:	mov    edi,0x967577f5
  40c365:	mov    ds:0x5bf01061,eax
  40c36a:	jle    0x40c352
  40c36c:	mov    edx,0x83745c7f
  40c371:	int3   
  40c372:	inc    esp
  40c373:	xchg   esi,eax
  40c374:	xchg   BYTE PTR [ebx+edi*1],bh
  40c377:	into   
  40c378:	or     DWORD PTR [esi+0x1d1401b2],ecx
  40c37e:	inc    ebp
  40c37f:	inc    eax
  40c380:	les    edx,FWORD PTR [edi-0x794dfd5]
  40c386:	cmp    al,al
  40c388:	pop    ss
  40c389:	xchg   ebx,eax
  40c38a:	adc    ah,BYTE PTR [esi+0x6fb11e16]
  40c390:	cwde   
  40c391:	cmp    dh,0x84
  40c394:	retf   0x3f3f
  40c397:	push   ds
  40c398:	rcr    edi,cl
  40c39a:	fxam   
  40c39c:	ja     0x40c3bd
  40c39e:	retf   
  40c39f:	mov    eax,ds:0x21f0465c
  40c3a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3a5:	ret    
  40c3a6:	adc    al,0x6e
  40c3a8:	pop    eax
  40c3a9:	jb     0x40c346
  40c3ab:	es sub bh,bl
  40c3ae:	or     ch,dh
  40c3b0:	or     eax,0xa4487e5
  40c3b5:	mov    ecx,ss
  40c3b7:	jno    0x40c33e
  40c3b9:	pop    ecx
  40c3ba:	or     BYTE PTR [edi],dh
  40c3bc:	fwait
  40c3bd:	sbb    edi,DWORD PTR [ebx]
  40c3bf:	ins    BYTE PTR es:[edi],dx
  40c3c0:	xchg   DWORD PTR [eax+ebp*2+0x78cdb865],esp
  40c3c7:	mov    ebp,0xfcf47bd1
  40c3cc:	push   cs
  40c3cd:	or     eax,0xa581656b
  40c3d2:	mov    edi,0x650b6216
  40c3d7:	fcom   QWORD PTR [edi+0x3d]
  40c3da:	add    BYTE PTR [esi+0x14],ah
  40c3dd:	out    dx,eax
  40c3de:	adc    eax,0x5fc8d78f
  40c3e3:	jne    0x40c438
  40c3e5:	in     al,dx
  40c3e6:	scas   al,BYTE PTR es:[edi]
  40c3e7:	repnz adc DWORD PTR [ebx+0x5e],ecx
  40c3eb:	mov    ebp,0x83fce930
  40c3f0:	or     al,0x7d
  40c3f2:	cmp    edi,esp
  40c3f4:	adc    dl,ch
  40c3f6:	ret    0x7bb9
  40c3f9:	and    ch,0x35
  40c3fc:	xchg   esi,eax
  40c3fd:	jl     0x40c412
  40c3ff:	xchg   DWORD PTR [edi+0x10],ebp
  40c402:	daa    
  40c403:	inc    eax
  40c404:	or     ebx,eax
  40c406:	loop   0x40c3e3
  40c408:	push   eax
  40c409:	mov    ds:0x7b0f86,al
  40c40e:	push   es
  40c40f:	mov    esp,?
  40c411:	mov    ch,dh
  40c413:	mov    ebp,0xcfc67801
  40c418:	mov    dh,0xbb
  40c41a:	pop    ebp
  40c41b:	retf   0x34ce
  40c41e:	call   0xab1cfa8a
  40c423:	push   ebx
  40c424:	mov    ecx,edx
  40c426:	aas    
  40c427:	push   ss
  40c428:	shl    ebp,cl
  40c42a:	jb     0x40c40b
  40c42c:	sub    BYTE PTR [edx],0x6a
  40c42f:	pop    edx
  40c430:	inc    esp
  40c431:	add    eax,0x8bc64031
  40c436:	mov    dl,BYTE PTR [edx]
  40c438:	lahf   
  40c439:	cmp    DWORD PTR [ebx+eiz*4],esi
  40c43c:	in     al,0x6a
  40c43e:	cmp    edi,ebp
  40c440:	mov    bh,0xa8
  40c442:	xchg   esi,eax
  40c443:	cli    
  40c444:	push   0x91b38a06
  40c449:	sbb    BYTE PTR [ecx+0x55],cl
  40c44c:	cmp    al,0x78
  40c44e:	icebp  
  40c44f:	repnz or DWORD PTR [eax],edx
  40c452:	fidivr WORD PTR [ebp+0x48532268]
  40c458:	cvtps2pi mm7,QWORD PTR [ebp-0xe7dadc2]
  40c45f:	out    dx,al
  40c460:	adc    ch,BYTE PTR [ebx-0x34b5c7a3]
  40c466:	xlat   BYTE PTR ds:[ebx]
  40c467:	push   0x2
  40c469:	ja     0x40c3f6
  40c46b:	ins    BYTE PTR es:[edi],dx
  40c46c:	repnz add DWORD PTR [ecx],ebx
  40c46f:	ret    
  40c470:	(bad)  
  40c471:	out    0x87,al
  40c473:	rcl    BYTE PTR [edi],1
  40c475:	add    al,0xa9
  40c477:	mov    ch,0xc6
  40c479:	push   edx
  40c47a:	int3   
  40c47b:	mul    BYTE PTR [edx]
  40c47d:	shl    DWORD PTR [eax-0x5e],0xbf
  40c481:	vpperm ymm11,ymm1,ymm5,ymm6
  40c487:	retf   0xe40f
  40c48a:	xor    al,0x2e
  40c48c:	jl     0x40c416
  40c48e:	fnstcw WORD PTR [ebx]
  40c490:	push   ebx
  40c491:	or     eax,0xcae8c17f
  40c496:	std    
  40c497:	jp     0x40c436
  40c499:	hlt    
  40c49a:	xchg   edi,eax
  40c49b:	mov    ?,WORD PTR [ecx]
  40c49d:	and    eax,0x2844a8f2
  40c4a2:	into   
  40c4a3:	ss iret 
  40c4a5:	jb     0x40c494
  40c4a7:	inc    eax
  40c4a8:	jne    0x40c443
  40c4aa:	jns    0x40c48a
  40c4ac:	scas   eax,DWORD PTR es:[edi]
  40c4ad:	xchg   ecx,eax
  40c4ae:	pop    ebx
  40c4af:	sub    al,0xf
  40c4b1:	sahf   
  40c4b2:	pushf  
  40c4b3:	imul   BYTE PTR [ebx]
  40c4b5:	jmp    0x40c4e8
  40c4b7:	add    ebp,esp
  40c4b9:	sahf   
  40c4ba:	sub    eax,0xcf166d34
  40c4bf:	shl    esi,0x82
  40c4c2:	add    DWORD PTR [edx+0x69],0x22
  40c4c6:	push   ebp
  40c4c7:	push   edx
  40c4c8:	in     al,0xdf
  40c4ca:	ja     0x40c532
  40c4cc:	push   edi
  40c4cd:	pop    ss
  40c4ce:	push   0xffffffc5
  40c4d0:	push   ebp
  40c4d1:	xlat   BYTE PTR ds:[ebx]
  40c4d2:	lahf   
  40c4d3:	scas   eax,DWORD PTR es:[edi]
  40c4d4:	and    edi,esp
  40c4d6:	lock ret 
  40c4d8:	enter  0x804c,0xce
  40c4dc:	fs mov edx,0xf8261069
  40c4e2:	rcl    BYTE PTR [esi],1
  40c4e4:	push   0xfffffff3
  40c4e6:	imul   eax,ecx,0xffffffcf
  40c4e9:	xor    BYTE PTR [ebp+0xc],al
  40c4ec:	xchg   edx,eax
  40c4ed:	add    BYTE PTR [edx+0x6009859],0x4a
  40c4f4:	xchg   ebx,eax
  40c4f5:	mov    dl,0x53
  40c4f7:	data16 mov al,ds:0x672d76e4
  40c4fd:	in     eax,0xd8
  40c4ff:	(bad)  [ecx+0x4a]
  40c502:	js     0x40c484
  40c504:	iret   
  40c505:	sar    DWORD PTR [ecx+eiz*1-0xd],cl
  40c509:	loope  0x40c501
  40c50b:	pushf  
  40c50c:	mov    BYTE PTR [ebp-0x258519a5],ah
  40c512:	add    edx,edi
  40c514:	push   ss
  40c515:	xchg   edx,eax
  40c516:	xchg   ebp,eax
  40c517:	in     al,0x39
  40c519:	lods   al,BYTE PTR ds:[esi]
  40c51a:	repz jecxz 0x40c52b
  40c51d:	xchg   BYTE PTR [ecx-0x6c6de04a],al
  40c523:	cdq    
  40c524:	push   ebp
  40c525:	imul   ebp,DWORD PTR [ebp-0x2315976e],0x53
  40c52c:	lods   al,BYTE PTR ss:[esi]
  40c52e:	int    0xcc
  40c530:	jge    0x40c582
  40c532:	gs push esi
  40c535:	push   ss
  40c536:	repnz mov esp,0xdaf05a24
  40c53c:	cmc    
  40c53d:	out    dx,al
  40c53e:	(bad)  
  40c53f:	outs   dx,DWORD PTR fs:[esi]
  40c541:	cdq    
  40c542:	mov    ds,WORD PTR [edx-0x3e]
  40c545:	xchg   ecx,eax
  40c546:	jmp    0x232b40e0
  40c54b:	les    ebp,FWORD PTR [esi-0x75787a7d]
  40c551:	or     al,0xc0
  40c553:	or     DWORD PTR [eax+0x1f75f9fa],0x48860452
  40c55d:	imul   eax,DWORD PTR [esi-0x44ab81f4],0x12
  40c564:	retf   0x5266
  40c567:	push   ebx
  40c568:	push   DWORD PTR [ecx-0x1f]
  40c56b:	nop
  40c56c:	int    0x82
  40c56e:	cld    
  40c56f:	cli    
  40c570:	iret   
  40c571:	(bad)  
  40c572:	pop    esi
  40c573:	or     BYTE PTR [ebx+0x33],cl
  40c576:	test   DWORD PTR [edi+0x53d36066],esi
  40c57c:	push   cs
  40c57d:	imul   ecx,DWORD PTR [ebx-0x65787a37],0x31181363
  40c587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c588:	mov    ah,0x28
  40c58a:	cld    
  40c58b:	adc    eax,0xa5075
  40c590:	sbb    BYTE PTR [edx+edx*8+0x3b],bl
  40c594:	repz sub eax,0x453f78b8
  40c59a:	sti    
  40c59b:	sti    
  40c59c:	retf   
  40c59d:	inc    esp
  40c59e:	jns    0x40c600
  40c5a0:	push   eax
  40c5a1:	xchg   DWORD PTR [ecx],eax
  40c5a3:	cli    
  40c5a4:	jno    0x40c61c
  40c5a6:	dec    edx
  40c5a7:	jmp    0x40c61c
  40c5a9:	pop    ebx
  40c5aa:	or     eax,0x6c095cd6
  40c5af:	mov    ch,0x18
  40c5b1:	lods   al,BYTE PTR ds:[esi]
  40c5b2:	adc    bl,0x4c
  40c5b5:	pop    ecx
  40c5b6:	hlt    
  40c5b7:	dec    edi
  40c5b8:	ror    DWORD PTR [ecx-0x58efaacb],0x23
  40c5bf:	and    DWORD PTR [eax-0x771c9bf7],ecx
  40c5c5:	lahf   
  40c5c6:	mov    al,ds:0xea0a685b
  40c5cb:	sbb    DWORD PTR [eax],esp
  40c5cd:	js     0x40c628
  40c5cf:	xor    DWORD PTR [ebx+0x75],eax
  40c5d2:	ins    DWORD PTR es:[edi],dx
  40c5d3:	and    DWORD PTR [edx-0x5f],edi
  40c5d6:	sub    DWORD PTR [edi+0x42ae0779],ebx
  40c5dc:	cwde   
  40c5dd:	mov    esp,0x944dc85a
  40c5e2:	aas    
  40c5e3:	push   esi
  40c5e4:	mov    cl,0xff
  40c5e6:	out    dx,eax
  40c5e7:	loope  0x40c619
  40c5e9:	fwait
  40c5ea:	mov    al,0x42
  40c5ec:	je     0x40c657
  40c5ee:	ja     0x40c576
  40c5f0:	sub    al,BYTE PTR [ecx+0x3dd3015e]
  40c5f6:	fldz   
  40c5f8:	pop    ebp
  40c5f9:	push   ds
  40c5fa:	shr    DWORD PTR [ecx],cl
  40c5fc:	clc    
  40c5fd:	stos   DWORD PTR es:[edi],eax
  40c5fe:	push   ss
  40c5ff:	inc    ecx
  40c600:	mov    DWORD PTR [ecx+eax*2-0x6d2fc264],0x2a094dd7
  40c60b:	lods   eax,DWORD PTR ds:[esi]
  40c60c:	xchg   esp,eax
  40c60d:	pop    DWORD PTR [ebx-0x32e48f55]
  40c613:	push   es
  40c614:	mov    ch,0x61
  40c616:	jp     0x40c692
  40c618:	scas   al,BYTE PTR es:[edi]
  40c619:	pop    ebp
  40c61a:	das    
  40c61b:	jle    0x40c674
  40c61d:	jmp    0xd5e4ae3d
  40c622:	test   al,0xb4
  40c624:	pop    ebx
  40c625:	cli    
  40c626:	xchg   DWORD PTR [ebx+0x8fab45],ebx
  40c62c:	dec    edi
  40c62d:	std    
  40c62e:	movntps XMMWORD PTR [ebx+ebx*4+0x50],xmm4
  40c633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c634:	mov    ebp,0x7fdba01f
  40c639:	jae    0x40c6b0
  40c63b:	cdq    
  40c63c:	in     eax,dx
  40c63d:	ret    0x2aa
  40c640:	sbb    ch,bh
  40c642:	or     BYTE PTR [ecx-0x7b51f30d],bl
  40c648:	push   eax
  40c649:	int3   
  40c64a:	ja     0x40c646
  40c64c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c64d:	dec    esp
  40c64e:	jae    0x40c627
  40c650:	pushf  
  40c651:	pop    ds
  40c652:	adc    ch,BYTE PTR [esi+0x61]
  40c655:	data16 jnp 0x40c5eb
  40c658:	nop
  40c659:	cmp    esi,DWORD PTR [eax+esi*4-0x13ae6486]
  40c660:	mov    bh,cl
  40c662:	mov    eax,ds:0x13b38daf
  40c667:	popa   
  40c668:	pop    ds
  40c669:	jbe    0x40c6aa
  40c66b:	call   0x96fd:0x632101ef
  40c672:	mov    ecx,0x7d916673
  40c677:	leave  
  40c678:	sahf   
  40c679:	inc    eax
  40c67a:	jns    0x40c671
  40c67c:	pop    edx
  40c67d:	ror    esp,cl
  40c67f:	fbld   TBYTE PTR [esp+ebp*8+0x27]
  40c683:	or     al,0xdb
  40c685:	xor    dl,BYTE PTR [esi+0x2de7c7db]
  40c68b:	mov    eax,ds:0x97024f31
  40c690:	stc    
  40c691:	jg     0x40c701
  40c693:	(bad)  
  40c695:	sub    ebp,DWORD PTR [edx-0x5a]
  40c698:	into   
  40c699:	ja     0x40c680
  40c69b:	cld    
  40c69c:	xchg   ecx,eax
  40c69d:	push   0xfffffff5
  40c69f:	ffree  st(3)
  40c6a1:	imul   esp,DWORD PTR [eax+esi*8+0x79],0x933cbad9
  40c6a9:	pushf  
  40c6aa:	jnp    0x40c6c4
  40c6ac:	idiv   ebx
  40c6ae:	jl     0x40c6c9
  40c6b0:	inc    edi
  40c6b1:	(bad)  
  40c6b2:	add    BYTE PTR [ebx],ch
  40c6b4:	xor    eax,0xf517863c
  40c6b9:	adc    al,0x5a
  40c6bb:	call   0x45f1075e
  40c6c0:	cmc    
  40c6c1:	jne    0x40c666
  40c6c3:	nop
  40c6c4:	pop    edi
  40c6c5:	cmp    ecx,ebx
  40c6c7:	in     al,dx
  40c6c8:	(bad)  
  40c6c9:	das    
  40c6ca:	xchg   edi,eax
  40c6cb:	repnz aad 0x63
  40c6ce:	mov    ds:0xd3e94545,al
  40c6d3:	mov    ah,0xaa
  40c6d5:	cs fcmovb st,st(0)
  40c6d8:	aam    0xde
  40c6da:	xchg   BYTE PTR [edx+edi*2],ch
  40c6dd:	test   BYTE PTR [ebp+0x6b],dh
  40c6e0:	xor    DWORD PTR [ecx+0x11e8454],ebp
  40c6e6:	ss das 
  40c6e8:	pop    eax
  40c6e9:	jl     0x40c680
  40c6eb:	fist   WORD PTR [edx]
  40c6ed:	gs repnz stos BYTE PTR es:[edi],al
  40c6f0:	xchg   edx,eax
  40c6f1:	adc    dl,BYTE PTR es:[edi-0x5c]
  40c6f5:	lds    eax,FWORD PTR [esi-0x54]
  40c6f8:	xchg   BYTE PTR [eax],al
  40c6fa:	dec    ebx
  40c6fb:	retf   0xbd9
  40c6fe:	adc    eax,0x1368a21b
  40c703:	loop   0x40c691
  40c705:	fwait
  40c706:	cwde   
  40c707:	(bad)  
  40c708:	jns    0x40c6d3
  40c70a:	test   al,0xd2
  40c70c:	mov    ah,cl
  40c70e:	mov    ebx,DWORD PTR [ebx]
  40c710:	mov    ?,WORD PTR [edx+0x17]
  40c713:	pop    es
  40c714:	ins    DWORD PTR es:[edi],dx
  40c715:	lds    ecx,FWORD PTR [ebp-0x523c6f9a]
  40c71b:	push   0x553b2292
  40c720:	mov    ds,WORD PTR [ecx]
  40c722:	rol    DWORD PTR [eax],0xe2
  40c725:	sub    al,0x2a
  40c727:	lahf   
  40c728:	xchg   ecx,eax
  40c729:	retf   0xc080
  40c72c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c72d:	out    0x99,al
  40c72f:	cmp    al,0xbe
  40c731:	lods   eax,DWORD PTR ds:[esi]
  40c732:	pop    edx
  40c733:	push   es
  40c734:	arpl   WORD PTR [esi],ax
  40c736:	mov    ah,0xaa
  40c738:	xchg   ebp,eax
  40c739:	repz inc esi
  40c73b:	test   eax,0xeaebf7b7
  40c740:	addr16 sbb eax,0x662957cf
  40c746:	imul   esp,esp,0xffffffc7
  40c749:	ins    DWORD PTR es:[edi],dx
  40c74a:	sub    BYTE PTR [esi+0x66e78c47],ch
  40c750:	jle    0x40c72d
  40c752:	test   al,0x22
  40c754:	cmp    dh,BYTE PTR [esi]
  40c756:	enter  0xb819,0x35
  40c75a:	outs   dx,BYTE PTR ds:[esi]
  40c75b:	xor    al,0xeb
  40c75d:	aas    
  40c75e:	add    al,0x12
  40c760:	mov    al,0x6b
  40c762:	push   ss
  40c763:	std    
  40c764:	stos   BYTE PTR es:[edi],al
  40c765:	das    
  40c766:	and    DWORD PTR [edx+0x49750ad],esi
  40c76c:	(bad)  
  40c76d:	xor    bh,cl
  40c76f:	stos   BYTE PTR es:[edi],al
  40c770:	repnz jmp 0x469e:0xd88723be
  40c778:	add    esp,DWORD PTR [edi-0x1d]
  40c77b:	lahf   
  40c77c:	retf   
  40c77d:	nop
  40c77e:	in     al,dx
  40c77f:	inc    eax
  40c780:	pop    es
  40c781:	into   
  40c782:	repnz dec ecx
  40c784:	loop   0x40c7d2
  40c786:	pop    ss
  40c787:	dec    ebx
  40c788:	pop    edx
  40c789:	push   esp
  40c78a:	mov    edx,0x7b3fc867
  40c78f:	jae    0x40c808
  40c791:	jo     0x40c7f3
  40c793:	sub    ebx,DWORD PTR [edx+esi*2+0x66]
  40c797:	stos   DWORD PTR es:[edi],eax
  40c798:	gs push 0x556dae57
  40c79e:	cwde   
  40c79f:	(bad)  
  40c7a0:	cs cmp bh,bl
  40c7a3:	retf   
  40c7a4:	pusha  
  40c7a5:	mov    edx,0xa7497a35
  40c7aa:	ins    DWORD PTR es:[edi],dx
  40c7ab:	mov    es,WORD PTR [ecx+0x1604f290]
  40c7b1:	shl    BYTE PTR [ebx],0xb5
  40c7b4:	sti    
  40c7b5:	ret    0xc492
  40c7b8:	push   cs
  40c7b9:	mov    es,WORD PTR [esi+0x3c84341b]
  40c7bf:	cmc    
  40c7c0:	inc    edx
  40c7c1:	or     eax,0x99f07abb
  40c7c6:	iret   
  40c7c7:	loop   0x40c76b
  40c7c9:	mov    BYTE PTR [esi],ah
  40c7cb:	nop
  40c7cc:	xchg   ebx,eax
  40c7cd:	lds    ebp,FWORD PTR [ebx-0x22]
  40c7d0:	mov    dh,0x58
  40c7d2:	pop    ebx
  40c7d3:	iret   
  40c7d4:	test   eax,ecx
  40c7d6:	addr16 icebp 
  40c7d8:	pop    edx
  40c7d9:	mov    ds:0x1fa585c9,eax
  40c7de:	fisub  DWORD PTR [esi+0x36]
  40c7e1:	fbld   TBYTE PTR [edx+0x7b]
  40c7e4:	ds push edx
  40c7e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7e7:	and    DWORD PTR [edi],ebp
  40c7e9:	arpl   WORD PTR [edi+0x51],bp
  40c7ec:	adc    BYTE PTR [edi-0x2130f5d7],0xc0
  40c7f3:	xchg   ebx,eax
  40c7f4:	fs jbe 0x40c7ea
  40c7f7:	xchg   esi,eax
  40c7f8:	pop    esp
  40c7f9:	popa   
  40c7fa:	arpl   WORD PTR [eax],si
  40c7fc:	push   esp
  40c7fd:	inc    esp
  40c7fe:	xlat   BYTE PTR ds:[ebx]
  40c7ff:	sbb    DWORD PTR ds:0x9f8ed8c3,edx
  40c805:	xchg   ch,ch
  40c807:	adc    al,0xed
  40c809:	es sbb eax,esp
  40c80c:	arpl   WORD PTR [eax-0xd],bx
  40c80f:	fld    TBYTE PTR [edx]
  40c811:	aam    0x1f
  40c813:	dec    BYTE PTR gs:[eax]
  40c816:	call   0x5a5:0xab22ac7c
  40c81d:	iret   
  40c81e:	add    ah,BYTE PTR [esi]
  40c820:	and    BYTE PTR [ebx+0x45d513c5],bl
  40c826:	outs   dx,DWORD PTR ds:[esi]
  40c827:	icebp  
  40c828:	je     0x40c895
  40c82a:	sbb    BYTE PTR [eax+0x62],0x82
  40c82e:	mov    esi,0x4cf2751d
  40c833:	mov    eax,0x24a8ee5a
  40c838:	xlat   BYTE PTR ds:[ebx]
  40c839:	mov    ss,WORD PTR [ecx+0x75]
  40c83c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c83d:	hlt    
  40c83e:	pop    ebx
  40c83f:	addr16 push ebx
  40c841:	sti    
  40c842:	xchg   esi,eax
  40c843:	pushf  
  40c844:	fsubp  st(7),st
  40c846:	pop    ds
  40c847:	bound  esp,QWORD PTR [esi]
  40c849:	in     eax,0xe6
  40c84b:	je     0x40c86e
  40c84d:	mov    cl,0x28
  40c84f:	add    ah,BYTE PTR [ebx+0x20]
  40c852:	js     0x40c7d9
  40c854:	mov    ah,0xa
  40c856:	push   edi
  40c857:	sar    DWORD PTR [edx],0xac
  40c85a:	(bad)  
  40c85b:	push   edx
  40c85c:	inc    esi
  40c85d:	cmp    edi,DWORD PTR [esi]
  40c85f:	xor    BYTE PTR [esi+0xbf435f8],0xf1
  40c866:	not    DWORD PTR [ecx+ebx*1+0x7211a065]
  40c86d:	push   es
  40c86e:	mov    dl,0xc1
  40c870:	fst    QWORD PTR [ebx+0x2]
  40c873:	push   cs
  40c874:	addr16 add bh,al
  40c877:	arpl   WORD PTR [eax+0xc08a6bd],si
  40c87d:	ss mov ecx,cs
  40c880:	hlt    
  40c881:	push   es
  40c882:	xor    al,0x3d
  40c884:	imul   ecx,DWORD PTR [edi-0x71],0xa7027403
  40c88b:	adc    al,0x9c
  40c88d:	jno    0x40c8e3
  40c88f:	adc    bl,BYTE PTR [edi+eiz*8+0x5af3eae0]
  40c896:	mov    edx,0xae32718d
  40c89b:	mov    bh,0x9e
  40c89d:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40c89f:	arpl   WORD PTR [edx],cx
  40c8a1:	pop    ebx
  40c8a2:	int    0xe3
  40c8a4:	sbb    al,cl
  40c8a6:	sbb    ch,ch
  40c8a8:	jp     0x40c8da
  40c8aa:	ds stos BYTE PTR es:[edi],al
  40c8ac:	dec    eax
  40c8ad:	or     eax,0xe43ea1
  40c8b2:	mov    dl,BYTE PTR [ebp+0x37639c3f]
  40c8b8:	xor    cl,dh
  40c8ba:	push   cs
  40c8bb:	inc    ebx
  40c8bc:	xchg   ecx,eax
  40c8bd:	adc    ch,BYTE PTR [eax+0x11]
  40c8c0:	push   ebp
  40c8c1:	(bad)
  40c8c6:	adc    DWORD PTR [esi-0x7f037b76],ebx
  40c8cc:	fist   DWORD PTR [eax]
  40c8ce:	popf   
  40c8cf:	inc    edi
  40c8d0:	call   0xeb02449
  40c8d5:	xchg   BYTE PTR [ebx-0x48],bl
  40c8d8:	pop    eax
  40c8d9:	and    esi,DWORD PTR [esi+eax*2]
  40c8dc:	adc    al,BYTE PTR [ebp+edi*2+0x1c]
  40c8e0:	jl     0x40c8fd
  40c8e2:	push   ds
  40c8e3:	adc    eax,0xdc50a2a
  40c8e8:	out    dx,al
  40c8e9:	jecxz  0x40c8f7
  40c8eb:	push   ebp
  40c8ec:	aaa    
  40c8ed:	push   esp
  40c8ee:	loope  0x40c94e
  40c8f0:	outs   dx,BYTE PTR ds:[esi]
  40c8f1:	rol    bh,0xd7
  40c8f4:	sub    DWORD PTR [ecx],ecx
  40c8f6:	sbb    al,0x6f
  40c8f8:	inc    eax
  40c8f9:	sub    eax,0xe2c89136
  40c8fe:	dec    edx
  40c8ff:	sub    ebx,DWORD PTR [esi-0x578bd92]
  40c905:	and    ah,BYTE PTR [esi+ebx*8+0xa]
  40c909:	shr    BYTE PTR [ecx+esi*4+0xd],0xe3
  40c90e:	in     eax,0x7d
  40c910:	iret   
  40c911:	cmc    
  40c912:	retf   
  40c913:	jae    0x40c97f
  40c915:	xchg   cl,bl
  40c917:	cmp    eax,0x7d630554
  40c91c:	mov    dl,0xe1
  40c91e:	cmp    BYTE PTR [ecx+0x3144206],0x65
  40c925:	fistp  DWORD PTR [ebp-0x47e0efa9]
  40c92b:	jne    0x40c8c6
  40c92d:	addr16 jp 0x40c96d
  40c930:	cli    
  40c931:	fnstsw WORD PTR [eax]
  40c933:	xchg   ebx,eax
  40c934:	fdiv   DWORD PTR [eax+0x37]
  40c937:	add    al,0x7c
  40c939:	mov    dl,0x2e
  40c93b:	mov    dh,0xdc
  40c93d:	xchg   edx,eax
  40c93e:	(bad)  
  40c940:	dec    ebp
  40c941:	(bad)  
  40c942:	in     al,0xbc
  40c944:	pusha  
  40c945:	aam    0xe1
  40c947:	mov    edi,0x84473bd8
  40c94c:	push   esp
  40c94d:	dec    edx
  40c94e:	imul   ebp,DWORD PTR ds:0xeb259480,0xd8a3b844
  40c958:	jecxz  0x40c9ce
  40c95a:	arpl   WORD PTR [edx-0x3880a598],bx
  40c960:	inc    ebp
  40c961:	clc    
  40c962:	mov    cl,0x85
  40c964:	pushf  
  40c965:	clc    
  40c966:	xor    DWORD PTR ds:0x413d34,0x2984
  40c970:	mov    ecx,DWORD PTR [ebp-0x14]
  40c973:	and    DWORD PTR ds:0x413d24,0x0
  40c97d:	jmp    0x40c990
  40c982:	xor    eax,eax
  40c984:	or     eax,DWORD PTR ds:0x413d24
  40c98a:	inc    eax
  40c98b:	mov    ds:0x413d24,eax
  40c990:	cmp    DWORD PTR ds:0x413d24,0x18
  40c997:	jae    0x40ca0e
  40c99d:	cmp    DWORD PTR ds:0x413d24,0x20
  40c9a4:	jne    0x40c9bd
  40c9aa:	push   0x738d
  40c9af:	push   0x6edb
  40c9b4:	push   DWORD PTR [ebp-0x18]
  40c9b7:	call   DWORD PTR ds:0x416768
  40c9bd:	jmp    0x40c982
  40c9c2:	mov    DWORD PTR ds:0x413c1e,0x1e
  40c9cc:	cmp    DWORD PTR ds:0x413c1e,0x0
  40c9d3:	je     0x40ca0e
  40c9d9:	cmp    DWORD PTR ds:0x413c1e,0x2c
  40c9e0:	jne    0x40c9fe
  40c9e6:	push   0x25a0
  40c9eb:	push   0x413ce4
  40c9f0:	push   0x3cd5
  40c9f5:	push   DWORD PTR [ebp-0x18]
  40c9f8:	call   DWORD PTR ds:0x416770
  40c9fe:	mov    eax,ds:0x413c1e
  40ca03:	dec    eax
  40ca04:	mov    ds:0x413c1e,eax
  40ca09:	jmp    0x40c9cc
  40ca0e:	push   esi
  40ca0f:	sbb    DWORD PTR ds:0x413ce4,0x7973
  40ca19:	mov    eax,0x7510894
  40ca1e:	and    DWORD PTR ds:0x413c1e,0x0
  40ca28:	jmp    0x40ca3a
  40ca2d:	mov    esi,DWORD PTR ds:0x413c1e
  40ca33:	inc    esi
  40ca34:	mov    DWORD PTR ds:0x413c1e,esi
  40ca3a:	cmp    DWORD PTR ds:0x413c1e,0x15
  40ca41:	jae    0x40ca74
  40ca47:	cmp    DWORD PTR ds:0x413c1e,0x1f
  40ca4e:	jne    0x40ca6e
  40ca54:	push   0x413c12
  40ca59:	push   0x88a1
  40ca5e:	push   0x416000
  40ca63:	push   0x416152
  40ca68:	call   DWORD PTR ds:0x416774
  40ca6e:	jmp    0x40ca2d
  40ca73:	inc    esi
  40ca74:	xor    ecx,eax
  40ca76:	sub    esi,DWORD PTR ds:0x413c70
  40ca7c:	mov    esi,0x3272dc
  40ca81:	mov    DWORD PTR ds:0x413c80,0x12bb
  40ca8b:	push   edi
  40ca8c:	xor    DWORD PTR ds:0x413ce4,0x413c6c
  40ca96:	add    ecx,esi
  40ca98:	jmp    0x40cab4
  40ca9d:	mov    dl,BYTE PTR [ebp-0x1]
  40caa0:	not    DWORD PTR ds:0x41400c
  40caa6:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40caad:	not    DWORD PTR ds:0x413ce8
  40cab3:	inc    ecx
  40cab4:	cmp    ecx,0x40
  40cab7:	mov    DWORD PTR ds:0x413d24,0x3f58
  40cac1:	jb     0x40ca9d
  40cac7:	adc    edx,0x503d
  40cacd:	mov    edx,DWORD PTR [ebp-0x14]
  40cad0:	xor    edx,eax
  40cad2:	add    edx,esi
  40cad4:	jmp    0x40cc01
  40cad9:	and    DWORD PTR ds:0x413c0a,0x1a66
  40cae3:	mov    edi,DWORD PTR [ebp+0x8]
  40cae6:	and    ecx,0xcf4
  40caec:	mov    ecx,0x8a87
  40caf1:	adc    DWORD PTR ds:0x413c12,0x413d
  40cafb:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40cb00:	and    DWORD PTR ds:0x41401c,0x0
  40cb0a:	mov    edi,DWORD PTR ds:0x41401c
  40cb10:	inc    edi
  40cb11:	mov    DWORD PTR ds:0x41401c,edi
  40cb17:	cmp    DWORD PTR ds:0x41401c,0x5
  40cb1e:	jne    0x40cb39
  40cb24:	push   0x6acf
  40cb29:	push   0x413cf4
  40cb2e:	push   0x416152
  40cb33:	call   DWORD PTR ds:0x416778
  40cb39:	cmp    DWORD PTR ds:0x41401c,0x4
  40cb40:	jne    0x40cb53
  40cb46:	mov    edi,DWORD PTR ds:0x41401c
  40cb4c:	inc    edi
  40cb4d:	mov    DWORD PTR ds:0x41401c,edi
  40cb53:	cmp    DWORD PTR ds:0x41401c,0x1b
  40cb5a:	jb     0x40cb0a
  40cb60:	mov    DWORD PTR ds:0x414018,0x15
  40cb6a:	cmp    DWORD PTR ds:0x414018,0x0
  40cb71:	je     0x40cbab
  40cb77:	cmp    DWORD PTR ds:0x414018,0x1b
  40cb7e:	jne    0x40cb8f
  40cb84:	push   0x4160b3
  40cb89:	call   DWORD PTR ds:0x41677c
  40cb8f:	mov    edi,DWORD PTR ds:0x414018
  40cb95:	dec    edi
  40cb96:	mov    DWORD PTR ds:0x414018,edi
  40cb9c:	jmp    0x40cb6a
  40cba1:	xor    DWORD PTR ds:0x414008,0x3196
  40cbab:	mov    edi,0x3b4a
  40cbb0:	add    cx,di
  40cbb3:	sbb    DWORD PTR ds:0x414000,0x24d3
  40cbbd:	movzx  ecx,cx
  40cbc0:	xor    DWORD PTR ds:0x413bfe,0x413c06
  40cbca:	mov    DWORD PTR [ebp-0x10],ecx
  40cbcd:	neg    DWORD PTR ds:0x413c0e
  40cbd3:	mov    ecx,DWORD PTR [ebp+0x8]
  40cbd6:	or     DWORD PTR ds:0x413d20,0x3470
  40cbe0:	movzx  ecx,WORD PTR [ecx+edx*4]
  40cbe4:	xor    DWORD PTR ds:0x413d30,0x413bf6
  40cbee:	xor    ecx,0x8a87
  40cbf4:	add    ecx,edi
  40cbf6:	mov    edi,DWORD PTR [ebp-0x10]
  40cbf9:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40cc00:	inc    edx
  40cc01:	mov    ecx,DWORD PTR [ebp-0x18]
  40cc04:	cmp    edx,ecx
  40cc06:	mov    DWORD PTR ds:0x414010,0x5811
  40cc10:	jne    0x40cad9
  40cc16:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc19:	mov    DWORD PTR ds:0x413d1c,0x410a
  40cc23:	mov    edx,DWORD PTR [ebp+0x10]
  40cc26:	dec    DWORD PTR ds:0x413cec
  40cc2c:	xor    ecx,eax
  40cc2e:	add    ecx,esi
  40cc30:	and    DWORD PTR ds:0x413c0a,0x5ecf
  40cc3a:	mov    DWORD PTR [edx],ecx
  40cc3c:	dec    ecx
  40cc3d:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc40:	xor    ecx,eax
  40cc42:	and    DWORD PTR ds:0x413bf6,0x413c84
  40cc4c:	add    ecx,esi
  40cc4e:	mov    DWORD PTR ds:0x413c0a,0x45cc
  40cc58:	mov    DWORD PTR [ebp-0x20],ecx
  40cc5b:	not    ecx
  40cc5d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  40cc64:	mov    DWORD PTR [ebp-0xc],0xf89c85a0
  40cc6b:	mov    DWORD PTR [ebp-0x1c],0xf89c95b0
  40cc72:	mov    DWORD PTR ds:0x413c6c,edi
  40cc78:	mov    ecx,DWORD PTR [ebp-0xc]
  40cc7b:	mov    DWORD PTR ds:0x413c84,0x129c
  40cc85:	mov    DWORD PTR [ebp+0x8],ecx
  40cc88:	jmp    0x40ce75
  40cc8d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc90:	add    edx,DWORD PTR ds:0x413c80
  40cc96:	mov    edx,DWORD PTR [ebp-0x8]
  40cc99:	and    DWORD PTR ds:0x413c74,0x413d20
  40cca3:	xor    ecx,eax
  40cca5:	xor    edx,eax
  40cca7:	sub    ecx,edx
  40cca9:	sub    ecx,esi
  40ccab:	xor    ecx,eax
  40ccad:	and    DWORD PTR ds:0x413c1a,0x0
  40ccb7:	mov    edx,DWORD PTR ds:0x413c1a
  40ccbd:	inc    edx
  40ccbe:	mov    DWORD PTR ds:0x413c1a,edx
  40ccc4:	cmp    DWORD PTR ds:0x413c1a,0x9
  40cccb:	jne    0x40cce4
  40ccd1:	push   0x413bfe
  40ccd6:	push   DWORD PTR [ebp-0x20]
  40ccd9:	push   0x4160ed
  40ccde:	call   DWORD PTR ds:0x416780
  40cce4:	cmp    DWORD PTR ds:0x413c1a,0x8
  40cceb:	jne    0x40ccfe
  40ccf1:	mov    edx,DWORD PTR ds:0x413c1a
  40ccf7:	inc    edx
  40ccf8:	mov    DWORD PTR ds:0x413c1a,edx
  40ccfe:	cmp    DWORD PTR ds:0x413c1a,0x10
  40cd05:	jb     0x40ccb7
  40cd0b:	mov    DWORD PTR [ebp+0x8],ecx
  40cd0e:	adc    ecx,ecx
  40cd10:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd13:	mov    DWORD PTR ds:0x413c16,0x3405
  40cd1d:	mov    edx,DWORD PTR [ebp-0x64]
  40cd20:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd27:	mov    DWORD PTR [ebp-0x64],ecx
  40cd2a:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd2d:	mov    edx,DWORD PTR [ebp-0x60]
  40cd30:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd37:	movzx  edx,WORD PTR ds:0x413d20
  40cd3e:	sbb    edx,DWORD PTR ds:0x413d28
  40cd44:	mov    DWORD PTR ds:0x413d20,edx
  40cd4a:	mov    DWORD PTR [ebp-0x60],ecx
  40cd4d:	and    DWORD PTR ds:0x414000,0x413d1c
  40cd57:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd5a:	add    DWORD PTR ds:0x413c78,ebx
  40cd60:	mov    edx,DWORD PTR [ebp-0x5c]
  40cd63:	neg    DWORD PTR ds:0x413c02
  40cd69:	lea    ecx,[edx+ecx*1+0x5708f2]
  40cd70:	and    DWORD PTR ds:0x413d20,0x0
  40cd7a:	mov    edx,DWORD PTR ds:0x413d20
  40cd80:	inc    edx
  40cd81:	mov    DWORD PTR ds:0x413d20,edx
  40cd87:	cmp    DWORD PTR ds:0x413d20,0xa
  40cd8e:	jne    0x40cda2
  40cd94:	push   0x413d34
  40cd99:	push   DWORD PTR [ebp-0x24]
  40cd9c:	call   DWORD PTR ds:0x416784
  40cda2:	cmp    DWORD PTR ds:0x413d20,0x9
  40cda9:	jne    0x40cdbe
  40cdaf:	xor    edx,edx
  40cdb1:	add    edx,DWORD PTR ds:0x413d20
  40cdb7:	inc    edx
  40cdb8:	mov    DWORD PTR ds:0x413d20,edx
  40cdbe:	cmp    DWORD PTR ds:0x413d20,0x15
  40cdc5:	jb     0x40cd7a
  40cdcb:	or     DWORD PTR ds:0x413ce8,0x2ce1
  40cdd5:	mov    DWORD PTR [ebp-0x5c],ecx
  40cdd8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cddb:	add    DWORD PTR ds:0x413c1e,ecx
  40cde1:	mov    edx,DWORD PTR [ebp-0x58]
  40cde4:	lea    ecx,[edx+ecx*1+0x5708f3]
  40cdeb:	add    DWORD PTR ds:0x413bfe,ebx
  40cdf1:	mov    DWORD PTR [ebp-0x58],ecx
  40cdf4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cdf7:	or     DWORD PTR ds:0x413c80,0x1524
  40ce01:	mov    edx,DWORD PTR [ebp-0x54]
  40ce04:	lea    ecx,[edx+ecx*1+0x5708fc]
  40ce0b:	adc    edx,DWORD PTR ds:0x41400c
  40ce11:	mov    DWORD PTR [ebp-0x54],ecx
  40ce14:	and    DWORD PTR ds:0x413d20,0x0
  40ce1e:	mov    edx,DWORD PTR ds:0x413d20
  40ce24:	inc    edx
  40ce25:	mov    DWORD PTR ds:0x413d20,edx
  40ce2b:	cmp    DWORD PTR ds:0x413d20,0x12
  40ce32:	jne    0x40ce48
  40ce38:	push   0x8060
  40ce3d:	push   0x41608d
  40ce42:	call   DWORD PTR ds:0x41678c
  40ce48:	cmp    DWORD PTR ds:0x413d20,0x10
  40ce4f:	jb     0x40ce1e
  40ce55:	mov    ecx,DWORD PTR [ebp+0x8]
  40ce58:	sbb    edx,DWORD PTR ds:0x413c0e
  40ce5e:	mov    edx,DWORD PTR [ebp-0x50]
  40ce61:	sbb    DWORD PTR ds:0x413cf4,0x413c16
  40ce6b:	lea    ecx,[edx+ecx*1+0x5708fd]
  40ce72:	mov    DWORD PTR [ebp-0x50],ecx
  40ce75:	and    DWORD PTR ds:0x413c12,0x0
  40ce7f:	mov    ecx,DWORD PTR ds:0x413c12
  40ce85:	inc    ecx
  40ce86:	mov    DWORD PTR ds:0x413c12,ecx
  40ce8c:	cmp    DWORD PTR ds:0x413c12,0x1d
  40ce93:	jne    0x40ceb7
  40ce99:	push   DWORD PTR [ebp-0x20]
  40ce9c:	push   0x413c70
  40cea1:	push   0x4dec
  40cea6:	push   0x4160bf
  40ceab:	push   DWORD PTR [ebp-0x20]
  40ceae:	push   DWORD PTR [ebp-0x10]
  40ceb1:	call   DWORD PTR ds:0x416790
  40ceb7:	cmp    DWORD PTR ds:0x413c12,0x11
  40cebe:	jb     0x40ce7f
  40cec4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cec7:	xor    ecx,eax
  40cec9:	add    ecx,esi
  40cecb:	jne    0x40cc8d
  40ced1:	jmp    0x40f43d
  40ced6:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ced9:	mov    edx,DWORD PTR [ebp-0x8]
  40cedc:	xor    ecx,eax
  40cede:	xor    edx,eax
  40cee0:	sub    ecx,edx
  40cee2:	sub    ecx,esi
  40cee4:	xor    ecx,eax
  40cee6:	mov    DWORD PTR [ebp-0x1c],ecx
  40cee9:	mov    ecx,DWORD PTR [ebp-0xc]
  40ceec:	mov    DWORD PTR [ebp+0x8],ecx
  40ceef:	jmp    0x40cf21
  40cef4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cef7:	mov    edx,DWORD PTR [ebp-0x8]
  40cefa:	xor    ecx,eax
  40cefc:	xor    edx,eax
  40cefe:	sub    ecx,edx
  40cf00:	sub    ecx,esi
  40cf02:	xor    ecx,eax
  40cf04:	mov    DWORD PTR [ebp+0x8],ecx
  40cf07:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf0a:	mov    edx,DWORD PTR [ebp+0x8]
  40cf0d:	imul   edx,edx,0x5708f1
  40cf13:	xor    ecx,eax
  40cf15:	add    ecx,esi
  40cf17:	lea    ecx,[ebp+ecx*4-0x64]
  40cf1b:	mov    edi,DWORD PTR [ecx]
  40cf1d:	add    edx,edi
  40cf1f:	mov    DWORD PTR [ecx],edx
  40cf21:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf24:	xor    ecx,eax
  40cf26:	add    ecx,esi
  40cf28:	jne    0x40cef4
  40cf2e:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf31:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf38:	mov    dl,BYTE PTR [ebp-0x1]
  40cf3b:	cmp    cl,dl
  40cf3d:	je     0x40f39e
  40cf43:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf46:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf4d:	mov    edx,DWORD PTR [ebp+0xc]
  40cf50:	cmp    cl,BYTE PTR [edx]
  40cf52:	jne    0x40f44f
  40cf58:	mov    ecx,DWORD PTR [ebp-0x14]
  40cf5b:	mov    edx,DWORD PTR [ebp+0xc]
  40cf5e:	movsx  edx,BYTE PTR [edx]
  40cf61:	xor    ecx,eax
  40cf63:	add    ecx,esi
  40cf65:	cmp    edx,ecx
  40cf67:	mov    ecx,DWORD PTR [ebp-0xc]
  40cf6a:	mov    DWORD PTR [ebp+0x8],ecx
  40cf6d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf70:	je     0x411851
  40cf76:	jmp    0x40cfab
  40cf7b:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf7e:	mov    edx,DWORD PTR [ebp-0x8]
  40cf81:	xor    ecx,eax
  40cf83:	xor    edx,eax
  40cf85:	sub    ecx,edx
  40cf87:	sub    ecx,esi
  40cf89:	xor    ecx,eax
  40cf8b:	mov    DWORD PTR [ebp+0x8],ecx
  40cf8e:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf91:	mov    edx,DWORD PTR [ebp+0x8]
  40cf94:	xor    ecx,eax
  40cf96:	imul   edx,edx,0x5708f1
  40cf9c:	add    ecx,esi
  40cf9e:	lea    ecx,[ebp+ecx*4-0x64]
  40cfa2:	mov    edi,DWORD PTR [ecx]
  40cfa4:	add    edx,edi
  40cfa6:	mov    DWORD PTR [ecx],edx
  40cfa8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cfab:	xor    ecx,eax
  40cfad:	add    ecx,esi
  40cfaf:	jne    0x40cf7b
  40cfb5:	mov    ecx,DWORD PTR [ebp-0x14]
  40cfb8:	mov    edx,DWORD PTR [ebp+0x8]
  40cfbb:	xor    ecx,eax
  40cfbd:	xor    edx,eax
  40cfbf:	add    ecx,esi
  40cfc1:	add    edx,esi
  40cfc3:	cmp    ecx,edx
  40cfc5:	jae    0x40f3e3
  40cfcb:	lea    edx,[ecx-0x3272dc]
  40cfd1:	mov    DWORD PTR [ebp-0x18],edx
  40cfd4:	mov    edi,DWORD PTR [ebp-0x18]
  40cfd7:	mov    DWORD PTR [ebp-0x24],0x705fd0e
  40cfde:	lea    edx,[ebp-0x24]
  40cfe1:	mov    DWORD PTR [ebp-0x10],edx
  40cfe4:	mov    edx,DWORD PTR [ebp-0x10]
  40cfe7:	add    DWORD PTR [edx],0x705fa0e
  40cfed:	mov    ebx,DWORD PTR [ebp-0x10]
  40cff0:	xor    edi,eax
  40cff2:	add    edi,DWORD PTR [ebx]
  40cff4:	lea    edx,[ebp+ecx*4-0x64]
  40cff8:	jmp    0x40f380
  40cffd:	sar    BYTE PTR [ebx-0x74043cf0],1
  40d003:	jae    0x40cfc0
  40d005:	dec    ebp
  40d006:	bound  esi,QWORD PTR [eax+0x7398c95d]
  40d00c:	dec    ecx
  40d00d:	mov    dl,0xe9
  40d00f:	jl     0x40d08d
  40d011:	pop    es
  40d012:	pop    edi
  40d013:	jl     0x40d091
  40d015:	xor    BYTE PTR [eax+eiz*1-0x674c0f1],0x22
  40d01d:	pop    ds
  40d01e:	inc    eax
  40d01f:	dec    edx
  40d020:	jmp    0x618cb4a7
  40d025:	(bad)  
  40d026:	sbb    al,0xe3
  40d028:	inc    ebx
  40d029:	test   cl,0x26
  40d02c:	popf   
  40d02d:	fs pop eax
  40d02f:	dec    ecx
  40d030:	aam    0x93
  40d032:	cld    
  40d033:	rol    dl,cl
  40d035:	ret    0x2d2e
  40d038:	(bad)  
  40d039:	neg    DWORD PTR [ebp+0x5a]
  40d03c:	or     cl,dh
  40d03e:	(bad)  
  40d03f:	jmp    0xa024eb9c
  40d044:	cmp    eax,DWORD PTR ds:0x5d28cc6b
  40d04a:	cwde   
  40d04b:	scas   al,BYTE PTR es:[edi]
  40d04c:	or     edx,ebx
  40d04e:	jb     0x40d0bc
  40d050:	hlt    
  40d051:	pop    ss
  40d052:	retf   
  40d053:	and    bh,cl
  40d055:	adc    DWORD PTR [eax-0xc],ebx
  40d058:	mov    ds,WORD PTR [edx+0x6f102485]
  40d05e:	bound  edi,QWORD PTR [eax+edi*8+0x35]
  40d062:	ret    
  40d063:	add    BYTE PTR [edx-0x9],dh
  40d066:	icebp  
  40d067:	loopne 0x40d081
  40d069:	shl    DWORD PTR [edx-0x3e87b11a],1
  40d06f:	pop    eax
  40d070:	jl     0x40d094
  40d072:	mov    al,0x20
  40d074:	fst    DWORD PTR [esi+ecx*1-0x55]
  40d078:	mov    bl,al
  40d07a:	iret   
  40d07b:	mov    ds,eax
  40d07d:	mov    esi,0xdcc51b17
  40d082:	clc    
  40d083:	into   
  40d084:	nop
  40d085:	not    BYTE PTR [ebx+ecx*8]
  40d088:	sbb    BYTE PTR [ecx-0x13],dh
  40d08b:	dec    ebx
  40d08c:	shl    BYTE PTR ds:0xccc175e,cl
  40d092:	cmp    esi,eax
  40d094:	or     BYTE PTR [edx-0x68],al
  40d097:	jecxz  0x40d079
  40d099:	fdivr  st(1),st
  40d09b:	or     dh,BYTE PTR [esi-0x496e4bfc]
  40d0a1:	pop    edi
  40d0a2:	aam    0xb4
  40d0a4:	xchg   edx,eax
  40d0a5:	imul   eax,DWORD PTR [esi+0x2877f702],0x62a6be0
  40d0af:	xchg   esp,eax
  40d0b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0b1:	lds    esp,FWORD PTR [ebx+ecx*1+0x53]
  40d0b5:	mov    dh,0xea
  40d0b7:	jg     0x40d0d6
  40d0b9:	xor    bh,BYTE PTR [edi+0x239604b1]
  40d0bf:	pusha  
  40d0c0:	sahf   
  40d0c1:	and    eax,DWORD PTR [ecx+0x49]
  40d0c4:	scas   al,BYTE PTR es:[edi]
  40d0c5:	adc    eax,DWORD PTR [ebp+0x48690b6d]
  40d0cb:	loop   0x40d10d
  40d0cd:	cmp    DWORD PTR [eax],eax
  40d0cf:	mov    ds:0xe9fcf1b6,al
  40d0d4:	lahf   
  40d0d5:	int3   
  40d0d6:	pop    ebx
  40d0d7:	mov    esp,0x69bc89a0
  40d0dc:	mov    edx,0xebffbfa6
  40d0e1:	sbb    al,0x2e
  40d0e3:	test   BYTE PTR [ecx+0x67d1da85],al
  40d0e9:	mov    ?,WORD PTR es:[ecx+eiz*8-0xa24983e]
  40d0f1:	(bad)  
  40d0f2:	mov    edi,DWORD PTR [ecx+0x6c1b2d7c]
  40d0f8:	xchg   ecx,eax
  40d0f9:	sbb    esp,DWORD PTR [ecx-0x1725401f]
  40d0ff:	aas    
  40d100:	inc    edi
  40d101:	push   edx
  40d102:	xor    esp,ebx
  40d104:	inc    edx
  40d105:	div    edi
  40d107:	mov    al,ds:0x5afb2a82
  40d10c:	in     eax,0x62
  40d10e:	sbb    ebp,eax
  40d110:	cli    
  40d111:	jno    0x40d11c
  40d113:	sub    DWORD PTR [ebx],ebx
  40d115:	leave  
  40d116:	sbb    edi,DWORD PTR [edi+0x3958af8e]
  40d11c:	mov    ch,0xf
  40d11e:	push   ebx
  40d11f:	jmp    0x40d0ec
  40d121:	jae    0x40d14e
  40d123:	mov    ch,0xbd
  40d125:	xchg   al,bl
  40d127:	pop    ss
  40d128:	(bad)  
  40d129:	cwde   
  40d12a:	xchg   ebx,eax
  40d12b:	mov    dh,0xa0
  40d12d:	pop    ebx
  40d12e:	fsub   DWORD PTR [esi+0x9082f6c]
  40d134:	xchg   ecx,eax
  40d135:	jne    0x40d10c
  40d137:	mov    BYTE PTR [edx+0xa],dh
  40d13a:	or     eax,DWORD PTR [ebx+0x5e34e51a]
  40d140:	mov    esp,0x2135e7e6
  40d145:	jae    0x40d0de
  40d147:	ins    DWORD PTR es:[edi],dx
  40d148:	(bad)  
  40d149:	(bad)  
  40d14a:	pop    ebx
  40d14b:	mov    ebx,ebx
  40d14d:	adc    edx,DWORD PTR [edi-0x35]
  40d150:	dec    ecx
  40d151:	lock jo 0x40d15b
  40d154:	outs   dx,DWORD PTR ds:[esi]
  40d155:	aad    0x7c
  40d157:	jl     0x40d17f
  40d159:	add    al,0x16
  40d15b:	scas   eax,DWORD PTR es:[edi]
  40d15c:	lds    ebp,FWORD PTR [edx+0x7b]
  40d15f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d160:	aad    0x58
  40d162:	push   ecx
  40d163:	sub    bl,0x17
  40d166:	or     DWORD PTR fs:[edx],edx
  40d169:	(bad)  
  40d16a:	jge    0x40d19e
  40d16c:	daa    
  40d16d:	aaa    
  40d16e:	and    BYTE PTR [edi],0x12
  40d171:	sbb    DWORD PTR [eax+ebx*2-0x56],0x24
  40d176:	xor    BYTE PTR [ebx+ecx*2+0x32a5b21b],ah
  40d17d:	pop    es
  40d17e:	xor    eax,0xdd548167
  40d183:	ja     0x40d16d
  40d185:	xor    DWORD PTR [esi-0x4a],edx
  40d188:	call   0xd6f2:0x8ed76f43
  40d18f:	pop    ecx
  40d190:	loopne 0x40d1dd
  40d192:	or     BYTE PTR [edi-0x5429f4d9],ah
  40d198:	stos   DWORD PTR es:[edi],eax
  40d199:	inc    edx
  40d19a:	ja     0x40d158
  40d19c:	dec    ecx
  40d19d:	enter  0x215d,0xaf
  40d1a1:	call   0x51a8:0x5425d24e
  40d1a8:	shl    BYTE PTR [ebp+0x6863858d],0xbc
  40d1af:	(bad)  
  40d1b0:	dec    ecx
  40d1b1:	adc    DWORD PTR [edi+ebp*8],0xffffffb9
  40d1b5:	nop
  40d1b6:	push   0xfffffffe
  40d1b8:	inc    ebp
  40d1b9:	enter  0xaf7d,0x20
  40d1bd:	outs   dx,BYTE PTR ds:[esi]
  40d1be:	in     eax,0x64
  40d1c0:	into   
  40d1c1:	stos   DWORD PTR es:[edi],eax
  40d1c2:	ins    BYTE PTR es:[edi],dx
  40d1c3:	(bad)  
  40d1c4:	scas   al,BYTE PTR es:[edi]
  40d1c5:	pop    edx
  40d1c6:	mov    dh,0xa8
  40d1c8:	mov    esp,0x104bb1db
  40d1cd:	sub    dl,ch
  40d1cf:	shr    edi,0xc
  40d1d2:	mov    edi,0x101a6203
  40d1d7:	pop    esi
  40d1d8:	inc    esp
  40d1d9:	shl    DWORD PTR ds:0xf8d0b779,1
  40d1df:	jg     0x40d178
  40d1e1:	fidiv  DWORD PTR [ecx+edx*2]
  40d1e4:	out    0xc6,eax
  40d1e6:	data16 cmc 
  40d1e8:	(bad)  
  40d1e9:	dec    DWORD PTR ds:0x100d946a
  40d1ef:	psubusw mm5,QWORD PTR [eax+0x29e772d4]
  40d1f6:	call   0x35c46771
  40d1fb:	sbb    eax,0x87ce881e
  40d200:	pop    edi
  40d201:	in     eax,0xa2
  40d203:	push   ecx
  40d204:	add    eax,0x6e995272
  40d209:	and    eax,0xbde28d2a
  40d20e:	pop    ecx
  40d20f:	mov    esi,esp
  40d211:	in     eax,dx
  40d212:	push   edx
  40d213:	ins    DWORD PTR es:[edi],dx
  40d214:	mov    ah,0x21
  40d216:	bound  ebx,QWORD PTR [eax-0x53]
  40d219:	sub    cl,BYTE PTR [ecx]
  40d21b:	add    eax,0xd130886d
  40d220:	imul   ebp,DWORD PTR [ecx-0x69],0xd364841f
  40d227:	ret    
  40d228:	mov    ebx,ebp
  40d22a:	xor    dh,BYTE PTR [edi-0x3b]
  40d22d:	dec    ecx
  40d22e:	add    BYTE PTR [esp+ecx*8-0x5],ch
  40d232:	jo     0x40d24c
  40d234:	mov    al,ds:0x5d56d458
  40d239:	out    dx,eax
  40d23a:	jmp    0x40d22d
  40d23c:	and    BYTE PTR [edi-0x39],al
  40d23f:	xor    DWORD PTR [edi+0x61],ecx
  40d242:	fldenv [ebx+0x1]
  40d245:	js     0x40d2b4
  40d247:	push   eax
  40d248:	lods   al,BYTE PTR gs:[si]
  40d24b:	pop    es
  40d24c:	cwde   
  40d24d:	push   0x28
  40d24f:	aad    0x28
  40d251:	jne    0x40d21b
  40d253:	(bad)  
  40d254:	out    dx,al
  40d255:	aam    0x6
  40d257:	xchg   ebx,eax
  40d258:	jno    0x40d2d8
  40d25a:	sbb    ah,BYTE PTR [ebp-0x50]
  40d25d:	cdq    
  40d25e:	or     DWORD PTR [ebp-0x45],edi
  40d261:	adc    DWORD PTR [edi-0x4f],edi
  40d264:	loop   0x40d264
  40d266:	mov    ds:0xea15a9fc,eax
  40d26b:	pop    esp
  40d26c:	pop    edx
  40d26d:	int3   
  40d26e:	inc    esi
  40d26f:	into   
  40d270:	mov    bl,0xa
  40d272:	cmp    al,0x81
  40d274:	dec    ebp
  40d275:	mov    ds:0xbcc698a3,eax
  40d27a:	imul   ebx,DWORD PTR [eax+0x33e9ed4],0xf27eddb8
  40d284:	jnp    0x40d298
  40d286:	xor    dl,bh
  40d288:	jge    0x40d230
  40d28a:	mov    dh,al
  40d28c:	xchg   ecx,eax
  40d28d:	mov    ds,WORD PTR [eax+ecx*8-0x135f2e4f]
  40d294:	jmp    DWORD PTR [esp+ebx*2]
  40d297:	dec    ecx
  40d298:	test   eax,0x9849879c
  40d29d:	cdq    
  40d29e:	dec    edx
  40d29f:	fdiv   QWORD PTR [ebx+0x52658490]
  40d2a5:	fistp  WORD PTR [esi+0x4f877baa]
  40d2ab:	pop    ds
  40d2ac:	xchg   edx,eax
  40d2ad:	dec    ebx
  40d2ae:	add    dl,BYTE PTR [eax+eiz*8-0x792f080b]
  40d2b5:	add    ebx,DWORD PTR [ecx]
  40d2b7:	mov    ds:0xaef16a4d,al
  40d2bc:	push   eax
  40d2bd:	in     eax,dx
  40d2be:	or     ch,BYTE PTR [edi+ebp*2]
  40d2c1:	ror    ecx,0xa4
  40d2c4:	adc    esi,ebp
  40d2c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2c7:	pop    esp
  40d2c8:	aad    0xae
  40d2ca:	ficomp WORD PTR [edx]
  40d2cc:	mov    dh,0x40
  40d2ce:	inc    ebx
  40d2cf:	icebp  
  40d2d0:	pop    ebx
  40d2d1:	imul   esp,DWORD PTR [ebx],0xfffffffc
  40d2d4:	out    dx,al
  40d2d5:	fst    st(4)
  40d2d7:	jp     0x40d279
  40d2d9:	test   DWORD PTR [edx],eax
  40d2db:	ins    BYTE PTR es:[edi],dx
  40d2dc:	out    dx,al
  40d2dd:	add    dl,ah
  40d2df:	xchg   esp,eax
  40d2e0:	rol    BYTE PTR [edi],cl
  40d2e2:	mov    al,ds:0x141de7dd
  40d2e7:	call   0xf4e2516c
  40d2ec:	lods   al,BYTE PTR ds:[esi]
  40d2ed:	or     edi,esp
  40d2ef:	es and eax,0xc08936db
  40d2f5:	shr    DWORD PTR [ecx],1
  40d2f7:	neg    DWORD PTR [esi+0x30e417d3]
  40d2fd:	mov    ds,WORD PTR [ecx+0x11753a77]
  40d303:	sbb    DWORD PTR [ebp-0x75],esp
  40d306:	xor    DWORD PTR [edi-0x7b1c783a],eax
  40d30c:	adc    ch,BYTE PTR [eax]
  40d30e:	pop    esp
  40d30f:	xor    edi,DWORD PTR [ebx-0x42]
  40d312:	mov    ds:0xc8d1c0ba,eax
  40d317:	scas   eax,DWORD PTR es:[edi]
  40d318:	sub    al,0xd
  40d31a:	test   al,0x34
  40d31c:	addr16 in eax,0x1c
  40d31f:	jge    0x40d349
  40d321:	add    ch,BYTE PTR [esi+0x24]
  40d324:	icebp  
  40d325:	push   edx
  40d326:	test   DWORD PTR [edi],edi
  40d328:	push   edi
  40d329:	sahf   
  40d32a:	sbb    eax,0xa5a70894
  40d32f:	pop    ebx
  40d330:	xchg   ebx,eax
  40d331:	addr16 pop ecx
  40d333:	in     eax,0x95
  40d335:	ss lahf 
  40d337:	aaa    
  40d338:	mov    ds:0x349eba48,eax
  40d33d:	add    eax,0x880d0e4
  40d342:	sbb    al,BYTE PTR [ecx]
  40d344:	popf   
  40d345:	lahf   
  40d346:	fstp   st(5)
  40d348:	sub    eax,0xe9f71107
  40d34d:	dec    eax
  40d34e:	je     0x40d2e9
  40d350:	shl    al,1
  40d352:	push   ss
  40d353:	dec    ebp
  40d354:	push   ebx
  40d355:	jb     0x40d382
  40d357:	cmp    BYTE PTR [eax+0x7c5891af],bh
  40d35d:	jecxz  0x40d2e2
  40d35f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d360:	mov    edx,0x1ae65e48
  40d365:	jns    0x40d35a
  40d367:	and    DWORD PTR [edx],0xb
  40d36a:	fcom   QWORD PTR [eax+edx*4+0x34dc8e0a]
  40d371:	mov    BYTE PTR [edi],cl
  40d373:	and    dh,BYTE PTR [esi-0x65]
  40d376:	in     eax,dx
  40d377:	das    
  40d378:	data16 cmp BYTE PTR [ebx+edi*8-0x47],bl
  40d37d:	fldenv [edi]
  40d37f:	addr16 shr esi,cl
  40d382:	xor    al,0xa9
  40d384:	int3   
  40d385:	fisttp WORD PTR [ecx-0x6b]
  40d388:	popa   
  40d389:	xchg   ecx,eax
  40d38a:	aam    0x86
  40d38c:	das    
  40d38d:	pop    edx
  40d38e:	into   
  40d38f:	sub    eax,0x2565d908
  40d394:	arpl   WORD PTR [ebx],cx
  40d396:	in     eax,0x93
  40d398:	inc    edx
  40d399:	dec    esp
  40d39a:	push   esp
  40d39b:	rol    dh,1
  40d39d:	std    
  40d39e:	or     BYTE PTR [ebx-0x67],dl
  40d3a1:	(bad)  
  40d3a2:	pop    ecx
  40d3a3:	xlat   BYTE PTR ds:[ebx]
  40d3a4:	and    edi,DWORD PTR gs:[ecx-0x7812c45d]
  40d3ab:	rcl    DWORD PTR [eax+0x6b],1
  40d3ae:	jnp    0x40d3c4
  40d3b0:	ret    0xc036
  40d3b3:	lahf   
  40d3b4:	add    cl,BYTE PTR [edx+0x50c3922b]
  40d3ba:	in     eax,0x53
  40d3bc:	cmp    BYTE PTR [ebx+edx*1+0x172e7b9e],dl
  40d3c3:	sti    
  40d3c4:	scas   al,BYTE PTR es:[edi]
  40d3c5:	sub    ah,BYTE PTR [edx+0x3f46b37a]
  40d3cb:	mov    edi,0x27e2c7c9
  40d3d0:	hlt    
  40d3d1:	add    al,0x4c
  40d3d3:	mov    ebp,0x6b0a7eaf
  40d3d8:	gs stos BYTE PTR es:[edi],al
  40d3da:	inc    ecx
  40d3db:	and    esp,esi
  40d3dd:	cs pop ebx
  40d3df:	cld    
  40d3e0:	mov    ebx,0x9e6b1e4c
  40d3e5:	lds    esp,FWORD PTR [edx-0x66]
  40d3e8:	mov    ebp,?
  40d3ea:	gs cli 
  40d3ec:	(bad)  
  40d3ed:	xor    eax,0x8ffe7c09
  40d3f2:	sbb    ebp,DWORD PTR [esi-0xd2c1412]
  40d3f8:	in     al,0x7f
  40d3fa:	(bad)  
  40d3fb:	lods   eax,DWORD PTR es:[esi]
  40d3fd:	push   ds
  40d3fe:	pop    ecx
  40d3ff:	xchg   ecx,eax
  40d400:	xchg   esp,eax
  40d401:	jno    0x40d455
  40d403:	mov    dl,0x30
  40d405:	es adc eax,0xdbdd20df
  40d40b:	out    0x2f,eax
  40d40d:	mov    DWORD PTR ds:[esi+0xa],edx
  40d411:	in     eax,dx
  40d412:	(bad)  
  40d413:	and    al,0x6c
  40d415:	add    dl,dh
  40d417:	scas   eax,DWORD PTR es:[edi]
  40d418:	xor    ebp,DWORD PTR [ecx-0x7]
  40d41b:	cli    
  40d41c:	push   esi
  40d41d:	xchg   esi,eax
  40d41e:	loop   0x40d3d9
  40d420:	mov    WORD PTR [esp+ebp*1+0x77],?
  40d424:	scas   eax,DWORD PTR es:[edi]
  40d425:	test   eax,0x46996080
  40d42a:	mov    DWORD PTR [edi+0x60],esi
  40d42d:	stc    
  40d42e:	scas   al,BYTE PTR es:[edi]
  40d42f:	sbb    al,0x3
  40d431:	gs (bad) 
  40d433:	hlt    
  40d434:	sti    
  40d435:	mov    eax,0xa78478e8
  40d43a:	push   edx
  40d43b:	push   cs
  40d43c:	mov    dl,0x3d
  40d43e:	into   
  40d43f:	push   ebx
  40d440:	mov    DWORD PTR [edx+ebx*8-0x1629934e],eax
  40d447:	jno    0x40d421
  40d449:	add    al,0xfb
  40d44b:	mov    ds:0x8888e087,al
  40d450:	cwde   
  40d451:	int    0x7c
  40d453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d454:	or     BYTE PTR ds:0xb2cddce0,bh
  40d45a:	pop    edx
  40d45b:	sub    esi,DWORD PTR [esi+0x20b3fb18]
  40d461:	mov    dl,0x91
  40d463:	scas   eax,DWORD PTR es:[edi]
  40d464:	and    DWORD PTR [edi+0x74b75a3d],0x345b8706
  40d46e:	test   eax,0x70579a97
  40d473:	push   ecx
  40d474:	xor    DWORD PTR [esi+0x171b40d1],ebp
  40d47a:	push   edx
  40d47b:	sub    eax,0x197cce18
  40d480:	sub    eax,DWORD PTR [edi]
  40d482:	sbb    dh,al
  40d484:	out    dx,al
  40d485:	and    al,0xbb
  40d487:	mov    dl,0xc5
  40d489:	xchg   esi,esi
  40d48b:	sti    
  40d48c:	jo     0x40d4dc
  40d48e:	cmp    dl,BYTE PTR [edx-0xc]
  40d491:	sub    al,0x4
  40d493:	enter  0x1d73,0x70
  40d497:	xor    esi,esp
  40d499:	push   ebx
  40d49a:	push   esp
  40d49b:	cmp    eax,0x64b06137
  40d4a0:	sbb    al,0x58
  40d4a2:	sub    BYTE PTR [edx+0x222e0ac1],ch
  40d4a8:	pop    ebx
  40d4a9:	inc    edi
  40d4aa:	and    al,BYTE PTR [ecx-0x32]
  40d4ad:	fwait
  40d4ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4af:	push   ebp
  40d4b0:	ins    DWORD PTR es:[edi],dx
  40d4b1:	mov    ah,0xf4
  40d4b3:	cmp    al,0x55
  40d4b5:	xchg   esp,eax
  40d4b6:	add    eax,0x7d7ebaf7
  40d4bb:	sub    BYTE PTR [edi],cl
  40d4bd:	test   eax,0xdd6958cf
  40d4c2:	mov    ds:0xcc3c2a71,eax
  40d4c7:	adc    eax,0x539be91
  40d4cc:	mov    ch,0x77
  40d4ce:	or     al,0xee
  40d4d1:	mov    bl,0x3
  40d4d3:	pop    eax
  40d4d4:	add    eax,0xb7024a56
  40d4d9:	mov    bh,0xfe
  40d4db:	in     al,0x65
  40d4dd:	push   0x2
  40d4df:	rol    BYTE PTR [ecx],cl
  40d4e1:	ss (bad) 
  40d4e4:	pop    edi
  40d4e5:	retf   
  40d4e6:	ds out dx,eax
  40d4e8:	adc    BYTE PTR [edx],cl
  40d4ea:	cmc    
  40d4eb:	mov    esi,0xd6288784
  40d4f0:	adc    al,0xbb
  40d4f2:	pop    ss
  40d4f3:	or     eax,0x988f18e1
  40d4f8:	xchg   BYTE PTR [ebx+0x3f],cl
  40d4fb:	pop    ebp
  40d4fc:	xor    ch,ch
  40d4fe:	jo     0x40d4c3
  40d500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d501:	jmp    0x85b0:0x8d2f465a
  40d508:	xor    al,0x3a
  40d50a:	pop    ds
  40d50b:	ins    DWORD PTR es:[edi],dx
  40d50c:	cmp    esi,esi
  40d50e:	sub    ah,0x3
  40d511:	mov    ecx,DWORD PTR ds:0x7f0ecb12
  40d517:	mov    ebx,0x6eb19b91
  40d51c:	ds push es
  40d51e:	push   edx
  40d51f:	cmp    esi,ecx
  40d521:	scas   al,BYTE PTR es:[edi]
  40d522:	ja     0x40d4fb
  40d524:	sub    DWORD PTR ds:0xc3c0ac7f,ebx
  40d52a:	cmp    al,0x74
  40d52c:	pop    ecx
  40d52d:	sahf   
  40d52e:	out    0xcd,eax
  40d530:	xlat   BYTE PTR ds:[ebx]
  40d531:	dec    ebx
  40d532:	add    eax,0x3e0048b2
  40d537:	ret    
  40d538:	mov    bh,0xde
  40d53a:	pop    eax
  40d53b:	push   ecx
  40d53c:	daa    
  40d53d:	pop    ecx
  40d53e:	add    DWORD PTR [esp+ebp*4-0x74],ecx
  40d542:	xchg   esp,eax
  40d543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d544:	and    eax,0xf2f41ca7
  40d549:	jmp    0x40d594
  40d54b:	icebp  
  40d54c:	aad    0xee
  40d54e:	rcr    BYTE PTR [ebx+0x36],1
  40d551:	int    0x93
  40d553:	out    dx,eax
  40d554:	and    al,0xc3
  40d556:	les    ebp,FWORD PTR [eax+eax*1+0x1290852f]
  40d55d:	std    
  40d55e:	clc    
  40d55f:	sub    bh,ah
  40d561:	sbb    cl,BYTE PTR [ebp-0xa97c915]
  40d567:	sbb    al,0x52
  40d569:	stos   DWORD PTR es:[edi],eax
  40d56a:	mov    eax,ds:0x4488084c
  40d56f:	xor    ch,ah
  40d571:	xlat   BYTE PTR ds:[ebx]
  40d572:	mul    DWORD PTR [edi-0x20]
  40d575:	push   edi
  40d576:	add    esp,edi
  40d578:	arpl   si,di
  40d57a:	mov    dh,0xb2
  40d57c:	xlat   BYTE PTR fs:[ebx]
  40d57e:	ds in  al,dx
  40d580:	loope  0x40d535
  40d582:	aas    
  40d583:	test   DWORD PTR [ebp-0x27cc65cd],ebp
  40d589:	in     eax,dx
  40d58a:	inc    esi
  40d58b:	or     al,0xe2
  40d58d:	push   0xffffffde
  40d58f:	sbb    al,0x47
  40d591:	and    bh,bl
  40d593:	stos   DWORD PTR es:[edi],eax
  40d594:	xchg   esp,eax
  40d595:	in     al,0x91
  40d597:	xchg   edi,eax
  40d598:	aad    0x8c
  40d59a:	es popa 
  40d59c:	lods   al,BYTE PTR ds:[esi]
  40d59d:	jmp    0xf944b55b
  40d5a2:	xchg   ebx,eax
  40d5a3:	push   0xffffff90
  40d5a5:	enter  0xe440,0x3a
  40d5a9:	xchg   ebx,eax
  40d5aa:	jge    0x40d567
  40d5ac:	add    BYTE PTR [ecx+esi*1+0x178e4f7f],ch
  40d5b3:	xor    eax,0x6a7415cf
  40d5b8:	aaa    
  40d5b9:	pop    esp
  40d5ba:	js     0x40d5c2
  40d5bc:	iret   
  40d5bd:	xchg   BYTE PTR [edx-0x7c],al
  40d5c0:	test   eax,0xe3152bd6
  40d5c5:	mov    dh,BYTE PTR [ebx+0x7609ae27]
  40d5cb:	sbb    edi,DWORD PTR [esi+esi*8+0x50]
  40d5cf:	outs   dx,BYTE PTR ds:[esi]
  40d5d0:	pop    edi
  40d5d1:	jnp    0x40d5ac
  40d5d3:	push   0xcd3293bf
  40d5d8:	adc    DWORD PTR [edi+0x1efa2bd0],ebx
  40d5de:	adc    eax,0xb78db3dc
  40d5e3:	(bad)  
  40d5e5:	xor    eax,0xc027d094
  40d5ea:	mov    ds:0x6f5def2,eax
  40d5ef:	inc    esp
  40d5f0:	xchg   ecx,eax
  40d5f1:	repnz mov dl,0xb2
  40d5f4:	pop    edi
  40d5f5:	lock (bad) 
  40d5f7:	inc    ebp
  40d5f8:	mov    cl,0x92
  40d5fa:	push   ecx
  40d5fb:	daa    
  40d5fc:	mov    ch,0xcb
  40d5fe:	(bad)  
  40d5ff:	sti    
  40d600:	inc    edi
  40d601:	or     eax,0x7e126776
  40d606:	pop    edx
  40d607:	xor    eax,0xee29ee53
  40d60c:	sub    eax,0x699afcf3
  40d611:	jge    0x40d5d4
  40d613:	loope  0x40d666
  40d615:	idiv   BYTE PTR [edi+0x7a5e2d89]
  40d61b:	and    BYTE PTR [ecx],ch
  40d61d:	cmp    DWORD PTR [ecx+0x7b890833],esp
  40d623:	loope  0x40d5c5
  40d625:	xor    BYTE PTR [edi+ebx*2+0x30],0xc4
  40d62a:	or     ecx,ecx
  40d62c:	mov    BYTE PTR [eax+edx*2-0x49f21059],bl
  40d633:	mov    bh,0xb9
  40d635:	(bad)  
  40d636:	inc    DWORD PTR ds:0xb382e61c
  40d63c:	and    eax,0xc286a7d4
  40d641:	xchg   DWORD PTR [eax+0x6417f0],ebx
  40d647:	nop
  40d648:	jg     0x40d6ad
  40d64a:	jmp    FWORD PTR [edx-0x7b]
  40d64d:	aas    
  40d64e:	out    0x2a,al
  40d650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d651:	push   esi
  40d652:	(bad)  
  40d653:	push   esi
  40d654:	out    dx,eax
  40d655:	mov    esi,0x5ed4a39f
  40d65a:	jmp    0xdc5b8608
  40d65f:	xchg   ebx,eax
  40d660:	lds    edi,FWORD PTR [esi+0x37]
  40d663:	imul   eax,DWORD PTR [esp+ebx*2],0xffffffed
  40d667:	mov    es,WORD PTR [ecx-0x70]
  40d66a:	fdiv   st,st(1)
  40d66c:	icebp  
  40d66d:	stos   DWORD PTR es:[edi],eax
  40d66e:	das    
  40d66f:	aaa    
  40d670:	jl     0x40d6a4
  40d672:	mov    bh,0x7e
  40d675:	pop    ebx
  40d676:	mov    edi,0xe5db9168
  40d67b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d67c:	jbe    0x40d639
  40d67e:	or     esp,DWORD PTR [edx*1+0x58ef950e]
  40d685:	inc    esi
  40d686:	sbb    al,0x67
  40d688:	xor    ecx,ebp
  40d68a:	jmp    0x8c00:0x1131c74d
  40d691:	push   ebx
  40d692:	vmread edx,edi
  40d695:	push   eax
  40d696:	rcr    esp,cl
  40d698:	xchg   edx,eax
  40d699:	mov    esp,0xe3b4cd21
  40d69e:	dec    edx
  40d69f:	xchg   sp,ax
  40d6a1:	leave  
  40d6a2:	push   ss
  40d6a3:	mov    ds:0x5e662555,al
  40d6a8:	mov    ebp,DWORD PTR [ebp+0x69]
  40d6ab:	out    dx,al
  40d6ac:	inc    esp
  40d6ad:	inc    esi
  40d6ae:	fist   WORD PTR [ebp+0x58]
  40d6b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6b2:	loop   0x40d68f
  40d6b4:	pop    ecx
  40d6b5:	in     eax,0xdc
  40d6b7:	push   0x7f
  40d6b9:	(bad)  
  40d6ba:	push   cs
  40d6bb:	mov    ds:0x4b30ea2e,al
  40d6c0:	aas    
  40d6c1:	dec    edi
  40d6c2:	cmp    eax,0x3f0f5b7b
  40d6c7:	pop    edx
  40d6c8:	and    BYTE PTR [edx-0x3755600b],dl
  40d6ce:	test   al,0x15
  40d6d0:	xor    DWORD PTR [edi+0xf],edx
  40d6d3:	xchg   edi,eax
  40d6d4:	mov    ds:0x355eefc9,eax
  40d6d9:	aaa    
  40d6da:	(bad)
  40d6dd:	add    BYTE PTR [ebx],ah
  40d6df:	pop    ss
  40d6e0:	fisub  DWORD PTR [edi]
  40d6e2:	mov    eax,ds:0xa07aa634
  40d6e7:	repz or al,0xdb
  40d6ea:	lods   al,BYTE PTR ds:[esi]
  40d6eb:	add    edi,0xe5e0bd55
  40d6f1:	pop    esp
  40d6f2:	adc    BYTE PTR [edi-0x61],0xd4
  40d6f6:	xor    BYTE PTR [esi],bl
  40d6f8:	xor    dh,dh
  40d6fa:	rcl    bl,0x42
  40d6fd:	outs   dx,BYTE PTR ds:[esi]
  40d6fe:	rcl    DWORD PTR [ecx+0x8a54720],0x68
  40d705:	xor    cl,bl
  40d707:	mov    bl,0xee
  40d709:	das    
  40d70a:	sar    BYTE PTR [ebp+eiz*8+0x9],0xad
  40d70f:	push   ebp
  40d710:	jmp    0x748:0xc156f607
  40d717:	test   al,0x37
  40d719:	dec    ebx
  40d71a:	stos   DWORD PTR es:[edi],eax
  40d71b:	inc    ecx
  40d71c:	mov    edx,ebp
  40d71e:	mov    edx,0xf1291607
  40d723:	test   eax,0x442ceeb5
  40d728:	xchg   ecx,eax
  40d729:	rol    eax,0x32
  40d72c:	jo     0x40d758
  40d72e:	iret   
  40d72f:	jae    0x40d72d
  40d731:	and    BYTE PTR [eax],dh
  40d733:	xor    BYTE PTR [esi],dl
  40d735:	xor    BYTE PTR [edx+eiz*8+0x14],al
  40d739:	mov    dh,0x3e
  40d73b:	or     DWORD PTR [edi+eax*2+0x54],0xffffff83
  40d740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d741:	sahf   
  40d742:	clc    
  40d743:	pop    ebx
  40d744:	cli    
  40d745:	shl    ebx,0xa2
  40d748:	add    ah,BYTE PTR [ebp-0x2754d0a2]
  40d74e:	ror    BYTE PTR [ecx-0x46],0xb7
  40d752:	or     eax,0x492bb55a
  40d757:	imul   esp,DWORD PTR [ecx],0xf6d7f2a7
  40d75d:	or     dl,BYTE PTR [ebx]
  40d75f:	clc    
  40d760:	cmp    bl,BYTE PTR ds:0x532d9e20
  40d766:	icebp  
  40d767:	inc    eax
  40d768:	test   eax,0x4e473dd9
  40d76d:	mov    esp,0xfc4065d4
  40d772:	call   0xffed1224
  40d777:	fcmovb st,st(5)
  40d779:	lea    eax,[edi-0x103f9fa2]
  40d77f:	repnz cwde 
  40d781:	in     eax,dx
  40d782:	cs stc 
  40d784:	iret   
  40d785:	clc    
  40d786:	out    dx,eax
  40d787:	add    ch,bh
  40d789:	inc    edx
  40d78a:	pushf  
  40d78b:	sahf   
  40d78c:	inc    edx
  40d78d:	outs   dx,DWORD PTR ds:[esi]
  40d78e:	in     al,dx
  40d78f:	xchg   DWORD PTR [ecx-0x28],edx
  40d792:	pop    ebx
  40d793:	popa   
  40d794:	sub    eax,DWORD PTR [esi-0x4a428a2e]
  40d79a:	mov    cl,0x5e
  40d79c:	cmp    DWORD PTR fs:[ebx-0x53fa7dc],esi
  40d7a3:	lods   eax,DWORD PTR ds:[esi]
  40d7a4:	dec    edi
  40d7a5:	pop    ds
  40d7a6:	mov    eax,0xd6927736
  40d7ab:	inc    ecx
  40d7ac:	mov    cl,0x6
  40d7ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7af:	jmp    0x8c57cd58
  40d7b4:	out    dx,eax
  40d7b5:	cld    
  40d7b6:	imul   ebp,DWORD PTR [edx],0x8d296d78
  40d7bc:	dec    ebp
  40d7bd:	std    
  40d7be:	add    dh,bl
  40d7c0:	sbb    edx,DWORD PTR [ecx-0x62]
  40d7c3:	jl     0x40d7a9
  40d7c5:	ss mov ebx,0x6f661dd7
  40d7cb:	push   esi
  40d7cc:	push   cs
  40d7cd:	mov    bh,BYTE PTR [edx+0x66e6a17d]
  40d7d3:	adc    DWORD PTR [esi-0x5425eb3d],eax
  40d7d9:	push   0xc62223c0
  40d7de:	adc    eax,DWORD PTR [esi-0x3631effb]
  40d7e4:	rol    DWORD PTR [eax+0x2d],cl
  40d7e7:	shl    DWORD PTR [ecx+0x62],1
  40d7ea:	jle    0x40d851
  40d7ec:	into   
  40d7ed:	in     eax,dx
  40d7ee:	loopne 0x40d852
  40d7f0:	mov    DWORD PTR cs:[esp+edx*4+0x7791325],eax
  40d7f8:	xchg   ebp,eax
  40d7f9:	xor    dh,ch
  40d7fb:	lea    edx,[eax+ebx*2]
  40d7fe:	out    dx,eax
  40d7ff:	pop    es
  40d800:	fcomp  QWORD PTR es:[esp+esi*4+0x46]
  40d805:	inc    edx
  40d806:	mov    esp,0xb1d7d09a
  40d80b:	xchg   ebp,eax
  40d80c:	add    eax,0x6d999741
  40d811:	sub    eax,DWORD PTR [ecx-0x79521c8f]
  40d817:	lahf   
  40d818:	(bad)  
  40d819:	ja     0x40d79c
  40d81b:	ret    0xfb26
  40d81e:	mov    edx,0xea3c7a21
  40d823:	jl     0x40d893
  40d825:	push   0xfffffffb
  40d827:	pop    esi
  40d828:	jne    0x40d86a
  40d82a:	retf   0xa511
  40d82d:	xchg   edx,eax
  40d82e:	(bad)  
  40d82f:	pop    ss
  40d830:	jl     0x40d8a2
  40d832:	rol    BYTE PTR [edx+0x3f714577],0x39
  40d839:	popa   
  40d83a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d83b:	push   eax
  40d83c:	rcl    DWORD PTR [ecx-0x21b4b528],cl
  40d842:	(bad)  
  40d843:	loopne 0x40d810
  40d845:	xchg   edi,eax
  40d846:	add    BYTE PTR [edx-0x5dfd78f0],dl
  40d84c:	add    al,0x11
  40d84e:	inc    edx
  40d84f:	adc    edi,edi
  40d851:	fadd   DWORD PTR [edi]
  40d853:	add    eax,0x7a4fc261
  40d858:	and    edx,DWORD PTR [ecx+0x14]
  40d85b:	loop   0x40d845
  40d85d:	mov    edx,DWORD PTR [esi+0x6e]
  40d860:	ss adc bh,cl
  40d863:	loop   0x40d83a
  40d865:	retf   0xf88e
  40d868:	popa   
  40d869:	adc    DWORD PTR [ecx+edx*1-0x3ef94980],esi
  40d870:	jne    0x40d8c2
  40d872:	sub    ebx,esp
  40d874:	into   
  40d875:	inc    esi
  40d876:	dec    ebp
  40d877:	jmp    0xc0bc35d1
  40d87c:	fwait
  40d87d:	iret   
  40d87e:	retf   
  40d87f:	cmp    eax,DWORD PTR [ebp-0x3cd6b642]
  40d885:	int3   
  40d886:	jbe    0x40d8a5
  40d888:	repz and DWORD PTR [edi+0x1eabeb8e],0x9974f630
  40d893:	ins    DWORD PTR es:[edi],dx
  40d894:	dec    eax
  40d895:	push   0x44
  40d897:	(bad)  
  40d898:	mov    eax,0xb49abd80
  40d89d:	mov    edx,DWORD PTR [edi-0x1d]
  40d8a0:	call   0x2f09b4a8
  40d8a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8a6:	add    DWORD PTR [esi],edx
  40d8a8:	daa    
  40d8a9:	mov    ebx,0x45c03a52
  40d8ae:	xchg   ecx,eax
  40d8af:	(bad)  
  40d8b0:	and    al,0x2e
  40d8b2:	jae    0x40d851
  40d8b4:	or     esi,DWORD PTR [eax+0x39]
  40d8b7:	js     0x40d8ca
  40d8b9:	sbb    eax,0x73f2605c
  40d8be:	fiadd  DWORD PTR [esi]
  40d8c0:	mov    edi,0x89862a74
  40d8c5:	fild   QWORD PTR [ecx-0x58]
  40d8c8:	ficom  WORD PTR ds:0x1ab4cb3a
  40d8ce:	loope  0x40d8d2
  40d8d0:	js     0x40d8ef
  40d8d2:	retf   
  40d8d3:	ds push edi
  40d8d5:	mov    ecx,0xcb7c44c2
  40d8da:	sbb    eax,0x92460ba7
  40d8df:	mov    cl,0x25
  40d8e1:	or     eax,0x949f3a7f
  40d8e6:	xor    bl,bl
  40d8e8:	pop    ss
  40d8e9:	(bad)  
  40d8ea:	jg     0x40d882
  40d8ec:	sbb    eax,0x75da3bfa
  40d8f1:	ds cmc 
  40d8f3:	sbb    DWORD PTR [ecx],ebp
  40d8f5:	call   0xd6afa299
  40d8fa:	fs cmp esp,esp
  40d8fd:	xchg   edi,eax
  40d8fe:	push   es
  40d8ff:	dec    esi
  40d900:	or     eax,DWORD PTR [ebx+eax*4-0x53]
  40d904:	shl    BYTE PTR [eax+edx*4-0x60],1
  40d908:	jno    0x40d8b4
  40d90a:	or     ah,BYTE PTR [ecx+eiz*4+0x3fcefc4b]
  40d911:	inc    eax
  40d912:	jno    0x40d940
  40d914:	daa    
  40d915:	leave  
  40d916:	inc    ebx
  40d917:	aam    0x8b
  40d919:	or     bl,BYTE PTR [eax+esi*1+0x7e]
  40d91d:	push   ds
  40d91e:	inc    edx
  40d91f:	push   0x21ec875b
  40d924:	(bad)  
  40d926:	lahf   
  40d927:	test   eax,0xc4749888
  40d92c:	xor    eax,0x30596d0b
  40d931:	xchg   ecx,eax
  40d932:	jg     0x40d98c
  40d934:	sub    eax,edi
  40d936:	push   esp
  40d937:	mov    cl,0x14
  40d939:	xor    al,0xad
  40d93b:	jns    0x40d91a
  40d93d:	mov    ch,0xfa
  40d93f:	outs   dx,DWORD PTR ds:[esi]
  40d940:	dec    esi
  40d941:	cli    
  40d942:	xor    al,0x4e
  40d944:	es jp  0x40d8d3
  40d947:	inc    edx
  40d948:	int3   
  40d949:	xchg   ebx,eax
  40d94a:	pop    ss
  40d94b:	in     al,dx
  40d94c:	pushf  
  40d94d:	or     al,0x1e
  40d94f:	repz pop edi
  40d951:	dec    esi
  40d952:	pop    esi
  40d953:	jmp    0x17d6:0xa6eebff9
  40d95a:	inc    edi
  40d95b:	lods   al,BYTE PTR ds:[esi]
  40d95c:	ficomp WORD PTR [eax]
  40d95e:	push   ebx
  40d95f:	xor    al,0x8
  40d961:	pop    ss
  40d962:	or     DWORD PTR [esi-0x4e],eax
  40d965:	sub    edi,DWORD PTR [eax]
  40d967:	aad    0xa3
  40d969:	cwde   
  40d96a:	mov    ah,0x35
  40d96c:	pop    es
  40d96d:	xor    dh,BYTE PTR [eax+eiz*8-0x5c]
  40d971:	xchg   BYTE PTR [edi],al
  40d973:	clc    
  40d974:	xor    bh,cl
  40d976:	mov    ds:0x2c728996,al
  40d97b:	(bad)  
  40d97d:	push   esi
  40d97e:	adc    edx,edi
  40d980:	push   ebp
  40d981:	push   esi
  40d982:	push   ds
  40d983:	xor    eax,0x6a364236
  40d988:	dec    esp
  40d989:	ins    DWORD PTR es:[edi],dx
  40d98a:	mov    ds:0xcf19d225,al
  40d98f:	push   edi
  40d990:	mov    ds:0x1f51ee78,eax
  40d995:	shl    BYTE PTR [edx],1
  40d997:	dec    ebp
  40d998:	ins    BYTE PTR es:[edi],dx
  40d999:	(bad)  
  40d99a:	xchg   esp,eax
  40d99b:	push   edi
  40d99c:	mov    esp,0x7fcb84f0
  40d9a1:	push   ss
  40d9a2:	push   ss
  40d9a3:	inc    esp
  40d9a4:	mov    WORD PTR [edx+0x164df446],es
  40d9aa:	jg     0x40d984
  40d9ac:	aas    
  40d9ad:	out    dx,al
  40d9ae:	xor    eax,0x4f552fa1
  40d9b3:	dec    ebx
  40d9b4:	sbb    al,BYTE PTR [ebx+0x57]
  40d9b7:	mov    ah,0x28
  40d9b9:	cmp    dl,BYTE PTR [esi+0x5d099faf]
  40d9bf:	add    DWORD PTR [eax-0x51],0xd919ab70
  40d9c6:	test   bl,0x27
  40d9c9:	inc    esi
  40d9ca:	mov    cx,0xbe2b
  40d9ce:	push   ebx
  40d9cf:	push   edx
  40d9d0:	clc    
  40d9d1:	mov    eax,0xe31860e6
  40d9d6:	rol    eax,0xd7
  40d9d9:	xor    BYTE PTR [edx+0x3d],al
  40d9dc:	outs   dx,BYTE PTR ds:[esi]
  40d9dd:	aad    0xe4
  40d9df:	sbb    cl,bh
  40d9e1:	iret   
  40d9e2:	xchg   edi,eax
  40d9e3:	and    esi,edi
  40d9e5:	in     al,0x43
  40d9e7:	mov    ds:0x2c24c305,al
  40d9ec:	mov    esp,0xc9b93e6a
  40d9f1:	xchg   edi,eax
  40d9f2:	imul   ecx,ecx,0xffffffe3
  40d9f5:	pop    eax
  40d9f6:	rol    DWORD PTR [eax],cl
  40d9f8:	ror    BYTE PTR cs:[ebx-0x49ddfb42],0xd6
  40da00:	pusha  
  40da01:	hlt    
  40da02:	fnstenv [eax]
  40da04:	add    DWORD PTR [ebp-0x5b],esp
  40da07:	icebp  
  40da08:	mov    ebx,0x358706ff
  40da0d:	cmp    al,0x85
  40da0f:	cmc    
  40da10:	pop    esi
  40da11:	xchg   ecx,eax
  40da12:	jmp    0xd4b6b4fb
  40da17:	fist   WORD PTR [edi+ebp*4]
  40da1a:	and    al,0x86
  40da1c:	fstp   DWORD PTR [edi]
  40da1e:	dec    edi
  40da1f:	(bad)  [ebx]
  40da21:	mov    ds:0x66177df1,eax
  40da26:	daa    
  40da27:	jo     0x40da98
  40da29:	hlt    
  40da2a:	add    eax,0x6ea4ad16
  40da2f:	nop
  40da30:	jecxz  0x40d9df
  40da32:	jp     0x40da13
  40da34:	ror    cl,0x7a
  40da37:	add    ebp,edx
  40da39:	push   es
  40da3a:	push   ebx
  40da3b:	cwde   
  40da3c:	cmp    cl,ch
  40da3e:	and    BYTE PTR [ebx],dl
  40da40:	push   ds
  40da41:	ffreep st(3)
  40da43:	sub    dh,ah
  40da45:	add    eax,0xb5d5d994
  40da4a:	stos   DWORD PTR es:[edi],eax
  40da4b:	push   edi
  40da4c:	daa    
  40da4d:	push   0xc8b1c5af
  40da52:	stos   BYTE PTR es:[edi],al
  40da53:	cmc    
  40da54:	cwde   
  40da55:	js     0x40da30
  40da57:	pop    edi
  40da58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da59:	xchg   edx,eax
  40da5a:	(bad)
  40da5d:	xchg   ebp,eax
  40da5e:	mov    dl,0xfb
  40da60:	jns    0x40d9e8
  40da62:	ins    BYTE PTR es:[edi],dx
  40da63:	(bad)  
  40da65:	sti    
  40da66:	push   ds
  40da67:	sub    DWORD PTR [ecx-0x64],ebp
  40da6a:	jno    0x40dabc
  40da6c:	sub    dl,cl
  40da6e:	push   0x571199bf
  40da73:	imul   eax,edx,0xb8ef47b6
  40da79:	adc    bl,ah
  40da7b:	push   ds
  40da7c:	xor    BYTE PTR [esi+0x16],cl
  40da7f:	hlt    
  40da80:	gs daa 
  40da82:	inc    ecx
  40da83:	cmp    BYTE PTR [ecx],0xd8
  40da86:	out    0x34,al
  40da88:	add    eax,0x9383d880
  40da8d:	rol    DWORD PTR ds:0x21756f2b,0x21
  40da94:	cmc    
  40da95:	and    ah,cl
  40da97:	mov    esp,0x1bad6c04
  40da9c:	push   eax
  40da9d:	and    eax,0x1986af2d
  40daa2:	push   ecx
  40daa3:	sbb    BYTE PTR ds:0xce3aa5c6,ch
  40daa9:	outs   dx,DWORD PTR ds:[esi]
  40daaa:	lds    edi,FWORD PTR [ecx]
  40daac:	pop    ebp
  40daad:	ror    BYTE PTR [eax],1
  40daaf:	rcl    BYTE PTR [ecx-0xb727b71],cl
  40dab5:	icebp  
  40dab6:	cmp    BYTE PTR [esp+edx*1+0x31c5a3d1],dl
  40dabd:	fstp   DWORD PTR [esi]
  40dabf:	das    
  40dac0:	lea    ebx,[ebx-0x2]
  40dac3:	jle    0x40da89
  40dac5:	xor    eax,0x437cb25f
  40daca:	push   ss
  40dacb:	pop    ebp
  40dacc:	dec    esp
  40dacd:	shr    DWORD PTR [edi-0x13550b1d],0x72
  40dad4:	pop    ebx
  40dad5:	enter  0xdd42,0xf7
  40dad9:	scas   eax,DWORD PTR es:[edi]
  40dada:	addr16 imul esi,esp,0xffffffd6
  40dade:	clc    
  40dadf:	jo     0x40da67
  40dae1:	sbb    eax,0x680f6d0
  40dae6:	ins    DWORD PTR es:[edi],dx
  40dae7:	xor    eax,0x695902ea
  40daec:	and    al,BYTE PTR [edi+ecx*4-0x7b8e33c0]
  40daf3:	cmp    BYTE PTR [ebx-0x6fcb6928],cl
  40daf9:	lock sbb BYTE PTR [esi+0xe],0x0
  40dafe:	sbb    cl,ah
  40db00:	stos   DWORD PTR es:[edi],eax
  40db01:	inc    ecx
  40db02:	(bad)  
  40db03:	push   esi
  40db04:	in     al,dx
  40db05:	outs   dx,DWORD PTR ds:[esi]
  40db06:	retf   0xa09d
  40db09:	inc    ebx
  40db0a:	js     0x40db3f
  40db0c:	stos   BYTE PTR es:[edi],al
  40db0d:	xchg   edi,eax
  40db0e:	jae    0x40db35
  40db10:	test   DWORD PTR ds:[edi],esi
  40db13:	cmp    al,bh
  40db15:	nop
  40db16:	or     DWORD PTR [ecx+ebp*2-0x5a],ebx
  40db1a:	add    eax,0x7a87f432
  40db1f:	mov    ecx,0x2a236bf1
  40db24:	(bad)  
  40db25:	cli    
  40db26:	jg     0x40db9e
  40db28:	push   edi
  40db29:	jecxz  0x40db20
  40db2b:	push   esi
  40db2c:	in     al,dx
  40db2d:	pop    ebp
  40db2e:	jnp    0x40dbae
  40db30:	xchg   esp,eax
  40db31:	loope  0x40dba9
  40db33:	shl    DWORD PTR [edi+edi*4+0x2f],1
  40db37:	inc    ebp
  40db38:	jl     0x40db93
  40db3a:	test   ebx,eax
  40db3c:	in     al,0xa3
  40db3e:	push   esi
  40db3f:	add    DWORD PTR [eax],0xffffffdc
  40db42:	sub    ch,BYTE PTR [edi+0x25b4c1cd]
  40db48:	cmp    eax,0x8677858c
  40db4d:	lahf   
  40db4e:	add    DWORD PTR [edx+0x3b],edx
  40db51:	fst    DWORD PTR [ebx-0x917a948]
  40db57:	ret    
  40db58:	hlt    
  40db59:	mov    bh,0x3f
  40db5b:	div    ch
  40db5d:	out    0x5e,al
  40db5f:	mov    edx,0xd112a783
  40db64:	adc    BYTE PTR gs:[ecx-0x56],0xd
  40db69:	xlat   BYTE PTR ds:[ebx]
  40db6a:	or     ebx,DWORD PTR [esi+0x74ae466]
  40db70:	xchg   cx,ax
  40db72:	add    DWORD PTR [edx+edx*2+0x1ef9909f],esi
  40db79:	dec    ebx
  40db7a:	inc    esi
  40db7b:	mov    ebx,0xb5a1aecf
  40db80:	loope  0x40dbc7
  40db82:	push   edi
  40db83:	ins    DWORD PTR es:[edi],dx
  40db84:	mov    ds:0x9a88a5bd,al
  40db89:	sub    eax,0xacb308b0
  40db8e:	and    BYTE PTR [edi+0x43481710],bh
  40db94:	push   esi
  40db95:	mov    al,0x5
  40db97:	dec    edx
  40db98:	popf   
  40db99:	fwait
  40db9a:	mov    BYTE PTR [ebx+0x7d],ah
  40db9d:	pushf  
  40db9e:	test   DWORD PTR [ebx+0x59],ebp
  40dba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dba2:	xchg   edi,eax
  40dba3:	xor    DWORD PTR [eax-0x6ba8ceb8],ecx
  40dba9:	fld    DWORD PTR [esi+0xa]
  40dbac:	add    al,0xf4
  40dbae:	cmc    
  40dbaf:	fsubp  st(0),st
  40dbb1:	iret   
  40dbb2:	cmc    
  40dbb3:	sub    eax,0x91c3393e
  40dbb8:	gs jge 0x40db76
  40dbbb:	clc    
  40dbbc:	or     BYTE PTR [esi+0xa],al
  40dbbf:	pop    ebx
  40dbc0:	fcom   st(4)
  40dbc2:	or     eax,0x38bb85af
  40dbc7:	mov    edi,0xa9c56abe
  40dbcc:	sub    ebx,DWORD PTR [ecx]
  40dbce:	scas   eax,DWORD PTR es:[edi]
  40dbcf:	cmp    BYTE PTR [esi+0x7d064e73],bl
  40dbd5:	nop
  40dbd6:	push   es
  40dbd7:	enter  0xa307,0x11
  40dbdb:	mov    WORD PTR [ecx],gs
  40dbdd:	add    DWORD PTR [edi],ebx
  40dbdf:	dec    eax
  40dbe0:	xchg   BYTE PTR [esp+ebp*2+0x371f019],ah
  40dbe7:	lods   al,BYTE PTR ds:[esi]
  40dbe8:	cdq    
  40dbe9:	dec    eax
  40dbea:	jmp    0x199a892a
  40dbef:	stc    
  40dbf0:	mov    cs,WORD PTR [esi]
  40dbf2:	jg     0x40dbd3
  40dbf4:	pop    ss
  40dbf5:	jb     0x40dc08
  40dbf7:	addr16 push ds
  40dbf9:	cmp    eax,0x7bb714bc
  40dbfe:	pop    ecx
  40dbff:	jl     0x40dc03
  40dc01:	idiv   DWORD PTR [ebx]
  40dc03:	add    al,BYTE PTR [ebx]
  40dc05:	out    dx,eax
  40dc06:	rol    BYTE PTR [ebp+0x7aef0ed4],0x8e
  40dc0d:	and    eax,0x18e55312
  40dc12:	push   edi
  40dc13:	arpl   WORD PTR [ebx+0x6d],ax
  40dc16:	fstp   DWORD PTR [edi]
  40dc18:	aam    0x46
  40dc1a:	fisub  DWORD PTR [edx]
  40dc1c:	call   0xd088:0x1889bc8b
  40dc23:	dec    edi
  40dc24:	inc    esp
  40dc25:	xlat   BYTE PTR ds:[ebx]
  40dc26:	push   es
  40dc27:	sub    eax,0x8842fd26
  40dc2c:	(bad)  
  40dc2d:	in     eax,dx
  40dc2e:	sbb    DWORD PTR [bx+si],0xeb6a61a6
  40dc35:	scas   eax,DWORD PTR es:[edi]
  40dc36:	das    
  40dc37:	jmp    0x679:0x8f8912de
  40dc3e:	mul    ch
  40dc40:	add    al,0xb6
  40dc42:	shr    DWORD PTR [edx-0x71],cl
  40dc45:	repnz mov ch,0x5f
  40dc48:	ret    
  40dc49:	mov    ah,0x6c
  40dc4b:	jo     0x40dc91
  40dc4d:	ficomp WORD PTR [eax-0x29]
  40dc50:	ins    BYTE PTR es:[edi],dx
  40dc51:	xlat   BYTE PTR ds:[ebx]
  40dc52:	mov    DWORD PTR [ebx-0x54],eax
  40dc55:	pop    edx
  40dc56:	pop    ebx
  40dc57:	out    0x3d,al
  40dc59:	shr    ah,0xf1
  40dc5c:	(bad)  
  40dc5d:	cmp    BYTE PTR [ebx+0x85944a0],ch
  40dc63:	mov    esp,0x2dd4a081
  40dc68:	lock push edi
  40dc6a:	cmp    bl,BYTE PTR [ecx]
  40dc6c:	push   cs
  40dc6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc6e:	adc    ecx,ebp
  40dc70:	in     eax,0xe0
  40dc72:	cwde   
  40dc73:	inc    eax
  40dc74:	sti    
  40dc75:	push   cs
  40dc76:	mov    esp,0x4cdfe0d3
  40dc7b:	(bad)  
  40dc7c:	mov    al,ds:0xd7df8abf
  40dc81:	or     BYTE PTR [ebx+0x20de217e],dl
  40dc87:	mov    al,ds:0xe3eae551
  40dc8c:	sub    DWORD PTR [edx+eiz*2-0x5109124d],ebp
  40dc93:	loopne 0x40dcce
  40dc95:	mov    bl,0x36
  40dc97:	fwait
  40dc98:	popa   
  40dc99:	out    dx,al
  40dc9a:	out    0xe,al
  40dc9c:	lods   al,BYTE PTR ds:[esi]
  40dc9d:	rcl    WORD PTR [bx+di-0x6ea1],cl
  40dca3:	mov    edi,esi
  40dca5:	jbe    0x40dd1f
  40dca7:	dec    esp
  40dca8:	pop    eax
  40dca9:	and    ecx,DWORD PTR [ecx+0x73]
  40dcac:	lsl    esi,di
  40dcaf:	fwait
  40dcb0:	aas    
  40dcb1:	mov    ebp,0xefe92086
  40dcb6:	fbld   TBYTE PTR [ecx-0x3]
  40dcb9:	pushw  0xffd6
  40dcbc:	jecxz  0x40dcbf
  40dcbe:	mov    edx,0x54ce50dc
  40dcc3:	adc    eax,0x9e488601
  40dcc8:	mov    dl,0x6c
  40dcca:	inc    esi
  40dccb:	sbb    DWORD PTR [eax-0x12da2dd0],ecx
  40dcd1:	cmp    dh,cl
  40dcd3:	push   edx
  40dcd4:	stc    
  40dcd5:	pop    ds
  40dcd6:	retf   0x2f1c
  40dcd9:	xchg   esi,eax
  40dcda:	or     eax,0xaf32571c
  40dcdf:	je     0x40dc61
  40dce1:	mov    ecx,0x667ab18e
  40dce6:	mov    bl,0x49
  40dce8:	stos   BYTE PTR es:[edi],al
  40dce9:	enter  0xe31d,0xad
  40dced:	push   es
  40dcee:	cld    
  40dcef:	call   0x6d5936f6
  40dcf4:	or     esi,DWORD PTR [edi]
  40dcf6:	inc    ebx
  40dcf7:	jp     0x40dca9
  40dcf9:	icebp  
  40dcfa:	scas   eax,DWORD PTR es:[edi]
  40dcfb:	jb     0x40dd3f
  40dcfd:	int3   
  40dcfe:	dec    ebx
  40dcff:	adc    BYTE PTR [ebx],dl
  40dd01:	int    0xf4
  40dd03:	jecxz  0x40dd22
  40dd05:	(bad)  
  40dd06:	xor    BYTE PTR [edi+edi*4-0x29],bl
  40dd0a:	mov    eax,0xe62a2800
  40dd0f:	pushf  
  40dd10:	fcmovbe st,st(5)
  40dd12:	jae    0x40dd0a
  40dd14:	call   0x234a05f
  40dd19:	adc    bl,al
  40dd1b:	(bad)  
  40dd1c:	addr16 shl ebp,cl
  40dd1f:	push   edi
  40dd20:	push   cs
  40dd21:	cs nop
  40dd23:	add    ebp,DWORD PTR [ebp-0x1c]
  40dd26:	mov    al,0x62
  40dd28:	inc    edx
  40dd29:	mov    ds:0xef538159,eax
  40dd2e:	push   esi
  40dd2f:	sbb    eax,DWORD PTR [esi]
  40dd31:	jne    0x40dd26
  40dd33:	retf   0xabae
  40dd36:	test   eax,0x9bcf9ca7
  40dd3b:	xchg   esp,eax
  40dd3c:	leave  
  40dd3d:	in     eax,dx
  40dd3e:	das    
  40dd3f:	scas   al,BYTE PTR es:[edi]
  40dd40:	inc    ebx
  40dd41:	aas    
  40dd42:	outs   dx,DWORD PTR ds:[esi]
  40dd43:	cmp    ebx,esi
  40dd45:	dec    ebp
  40dd46:	ror    BYTE PTR [edx],cl
  40dd48:	mov    cs,WORD PTR [ebx+0x4e]
  40dd4b:	fist   DWORD PTR [eax+0x2c8a2dc5]
  40dd51:	jg     0x40dcd8
  40dd53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd54:	out    0x66,eax
  40dd56:	push   edx
  40dd57:	jecxz  0x40dd58
  40dd59:	fcomp  st(1)
  40dd5b:	(bad)  
  40dd5c:	ds repnz inc esi
  40dd5f:	cmp    dh,ch
  40dd61:	pop    ebp
  40dd62:	xor    bl,BYTE PTR [eax+0x15a8eac7]
  40dd68:	test   DWORD PTR ds:0xa60ce56f,eax
  40dd6e:	shl    BYTE PTR ss:[eax],1
  40dd71:	sub    ebp,DWORD PTR [ebx-0x1f]
  40dd74:	sub    cl,ch
  40dd76:	xchg   edx,eax
  40dd77:	or     BYTE PTR [ebp-0x1a],0xfc
  40dd7b:	popf   
  40dd7c:	js     0x40dd47
  40dd7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd7f:	jo     0x40ddff
  40dd81:	dec    edx
  40dd82:	push   ebp
  40dd83:	mov    WORD PTR [ebp+ebx*1-0x4a],?
  40dd87:	je     0x40dd38
  40dd89:	mov    es,WORD PTR [eax+0x10]
  40dd8c:	jmp    0xb5d1fecc
  40dd91:	xchg   edi,eax
  40dd92:	and    esp,esp
  40dd94:	sbb    DWORD PTR ds:[ebx-0x37],0x0
  40dd99:	(bad)  
  40dd9a:	jmp    0xa8e9:0x1a68f5b6
  40dda1:	mov    bl,0xac
  40dda3:	aam    0xc6
  40dda5:	inc    esi
  40dda6:	call   0x4be63229
  40ddab:	mov    esi,0x1ed85a8d
  40ddb0:	jo     0x40de10
  40ddb2:	push   edi
  40ddb3:	jmp    0x40ddcc
  40ddb5:	daa    
  40ddb6:	add    DWORD PTR [edx+edi*4-0x17c1b8fd],esi
  40ddbd:	xchg   edi,eax
  40ddbe:	je     0x40ddaa
  40ddc0:	add    ebx,DWORD PTR [eax]
  40ddc2:	retf   
  40ddc3:	sbb    ebp,DWORD PTR [ebp-0x3]
  40ddc6:	sbb    DWORD PTR [esi],ebx
  40ddc8:	pop    edi
  40ddc9:	sar    dl,0x68
  40ddcc:	dec    ebx
  40ddcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddce:	pop    ebp
  40ddcf:	cmp    eax,0x8521098c
  40ddd4:	loop   0x40ddcf
  40ddd6:	mov    edi,0xdb606750
  40dddb:	enter  0x1418,0xa2
  40dddf:	or     BYTE PTR [edx],ch
  40dde1:	retf   
  40dde2:	sbb    edi,DWORD PTR [ebp-0x43114fdd]
  40dde8:	mov    eax,ds:0x547a1931
  40dded:	mov    eax,0xe177e1a2
  40ddf2:	jmp    0xcf7f0b62
  40ddf7:	mov    WORD PTR [ecx-0xc],fs
  40ddfa:	aaa    
  40ddfb:	in     al,dx
  40ddfc:	repnz cld 
  40ddfe:	pop    ds
  40ddff:	das    
  40de00:	fisubr DWORD PTR cs:[ebx]
  40de03:	aaa    
  40de04:	std    
  40de05:	popf   
  40de06:	xlat   BYTE PTR ds:[ebx]
  40de07:	and    esp,ebx
  40de09:	inc    edx
  40de0a:	and    eax,0x7bbb1a98
  40de0f:	cwde   
  40de10:	cmp    edx,esi
  40de12:	aaa    
  40de13:	jo     0x40de6c
  40de15:	les    ebp,FWORD PTR [edx+0x2a]
  40de18:	(bad)  
  40de19:	out    0xa1,al
  40de1b:	or     al,0x51
  40de1d:	loop   0x40de12
  40de1f:	pushf  
  40de20:	mov    bh,0xf5
  40de22:	cmp    eax,0x3e38404c
  40de27:	jmp    0x40de32
  40de29:	out    0xf2,eax
  40de2b:	push   eax
  40de2c:	hlt    
  40de2d:	cmp    BYTE PTR ds:0xc4c8e88a,ch
  40de33:	pop    edi
  40de34:	outs   dx,DWORD PTR ds:[esi]
  40de35:	and    al,dh
  40de37:	shl    BYTE PTR [edx],1
  40de39:	jge    0x40ddf1
  40de3b:	shl    DWORD PTR [esi],cl
  40de3d:	add    BYTE PTR [edx+0x60],al
  40de40:	sbb    DWORD PTR [eax-0x293ac83a],esp
  40de46:	pop    edx
  40de47:	mov    ecx,ecx
  40de49:	or     eax,0x1471d7cd
  40de4e:	ins    BYTE PTR es:[edi],dx
  40de4f:	jl     0x40ddf1
  40de51:	jne    0x40de15
  40de53:	xchg   ecx,eax
  40de54:	dec    esi
  40de55:	rcr    BYTE PTR [edx],cl
  40de57:	push   cs
  40de58:	sar    BYTE PTR [edi+esi*2-0x6f],0xac
  40de5d:	sub    BYTE PTR [ecx],0x7d
  40de60:	jmp    0x8ae798c4
  40de65:	add    eax,0xa1c0f4de
  40de6a:	dec    edx
  40de6b:	stos   DWORD PTR es:[edi],eax
  40de6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de6d:	pop    esp
  40de6e:	div    edx
  40de70:	in     al,dx
  40de71:	ja     0x40de73
  40de73:	ret    
  40de74:	je     0x40de1f
  40de76:	ror    DWORD PTR [eax-0x60353c6f],0xa2
  40de7d:	das    
  40de7e:	retf   
  40de7f:	pop    edi
  40de80:	cwde   
  40de81:	xor    al,0x56
  40de83:	mov    bh,BYTE PTR [esi]
  40de85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de86:	xor    BYTE PTR ds:0xaa68937d,cl
  40de8c:	lock ret 0x4d49
  40de90:	adc    eax,0x7ca6b760
  40de95:	(bad)  
  40de96:	cld    
  40de97:	cmp    DWORD PTR [ecx+0x3f3bf9e8],ebx
  40de9d:	imul   esi,DWORD PTR [esp+ecx*2-0x1b771262],0xffffffcd
  40dea5:	xor    al,0xb7
  40dea7:	sar    BYTE PTR [esi-0x5a17314a],0x5f
  40deae:	daa    
  40deaf:	(bad)  
  40deb0:	cli    
  40deb1:	and    dl,bh
  40deb3:	call   0x6694:0x48fdeda1
  40deba:	mov    bl,0xfc
  40debc:	data16 mov ch,0xc7
  40debf:	or     eax,0xc6c408b4
  40dec4:	je     0x40dee1
  40dec6:	sub    ah,BYTE PTR ds:0x9fd89f78
  40decc:	loope  0x40df02
  40dece:	ja     0x40de5f
  40ded0:	bound  eax,QWORD PTR [eax]
  40ded2:	pop    esi
  40ded3:	int3   
  40ded4:	aad    0xc2
  40ded6:	push   0xfaa8ebb9
  40dedb:	sub    dh,ch
  40dedd:	push   edx
  40dede:	(bad)  
  40dedf:	enter  0x2722,0x48
  40dee3:	or     al,0x8e
  40dee5:	(bad)  ds:0x5106417
  40deeb:	ret    
  40deec:	ss cwde 
  40deee:	sti    
  40deef:	lods   eax,DWORD PTR ds:[esi]
  40def0:	jne    0x40deb1
  40def2:	mov    dh,BYTE PTR [eax+ebx*1+0x44]
  40def6:	loope  0x40df6e
  40def8:	push   edx
  40def9:	push   ebx
  40defa:	data16 and cl,bh
  40defd:	cmp    eax,0x48930c03
  40df02:	ret    0x1467
  40df05:	mov    edx,fs
  40df07:	inc    ebx
  40df08:	or     al,BYTE PTR ds:0x89dea957
  40df0e:	cmp    eax,DWORD PTR [edi]
  40df10:	je     0x40df8f
  40df12:	push   ebp
  40df13:	jns    0x40dea5
  40df15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df16:	xlat   BYTE PTR ds:[ebx]
  40df17:	nop
  40df18:	ss xor cl,dl
  40df1b:	pusha  
  40df1c:	cmp    eax,0x9c65a1eb
  40df21:	je     0x40defc
  40df23:	in     eax,0x6a
  40df25:	shl    al,0x6d
  40df28:	cld    
  40df29:	popf   
  40df2a:	std    
  40df2b:	idiv   DWORD PTR [ecx]
  40df2d:	es out 0x78,eax
  40df30:	xor    edx,edx
  40df32:	retf   0x3068
  40df35:	ins    BYTE PTR es:[edi],dx
  40df36:	mov    bl,BYTE PTR [esi]
  40df38:	fimul  WORD PTR [edx-0x3579a0bd]
  40df3e:	fs and ebx,ebp
  40df41:	sub    BYTE PTR [ebx],dh
  40df43:	pop    esi
  40df44:	or     dl,BYTE PTR [eax]
  40df46:	icebp  
  40df47:	repz cmp ebp,DWORD PTR [ecx+0x70382cc4]
  40df4e:	lods   al,BYTE PTR ds:[esi]
  40df4f:	ret    
  40df50:	shl    DWORD PTR [ebp+0x6f753ba9],1
  40df56:	cmp    ebp,DWORD PTR [edx]
  40df58:	out    0x2a,al
  40df5a:	or     edx,ecx
  40df5c:	jmp    0x40df82
  40df5e:	fadd   QWORD PTR [eax+0x7ad1f0a7]
  40df64:	js     0x40deea
  40df66:	or     BYTE PTR [edx+0x694dd702],dh
  40df6c:	lahf   
  40df6d:	call   DWORD PTR [ebx]
  40df6f:	das    
  40df70:	mov    al,ds:0x765aa615
  40df75:	sbb    ebp,DWORD PTR ds:0xe9c2ca05
  40df7b:	pusha  
  40df7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df7d:	adc    BYTE PTR [ecx*4-0x36a3c85d],cl
  40df84:	xchg   BYTE PTR [eax+edx*2],ah
  40df87:	xchg   cl,bh
  40df89:	ja     0x40dfc3
  40df8b:	pop    eax
  40df8c:	xor    eax,0x76ff30a1
  40df91:	sbb    al,0xe9
  40df93:	xor    DWORD PTR [edx],0x2
  40df96:	sahf   
  40df97:	into   
  40df98:	inc    esp
  40df99:	push   esi
  40df9a:	outs   dx,DWORD PTR ds:[esi]
  40df9b:	push   cs
  40df9c:	test   al,0xb1
  40df9e:	lock cli 
  40dfa0:	stos   DWORD PTR es:[edi],eax
  40dfa1:	push   ecx
  40dfa2:	pushf  
  40dfa3:	(bad)
  40dfa6:	mov    ebp,0x4c267d6c
  40dfab:	lds    esi,FWORD PTR [ebp-0x47]
  40dfae:	cmp    ecx,DWORD PTR [esi]
  40dfb0:	dec    eax
  40dfb1:	(bad)  [ebx-0x7b]
  40dfb4:	adc    esi,DWORD PTR [edx]
  40dfb6:	push   edi
  40dfb7:	sub    BYTE PTR [ebp+0x2117fca0],dl
  40dfbd:	clc    
  40dfbe:	pop    edx
  40dfbf:	jp     0x40e02b
  40dfc1:	mov    ds:0x1cbcfd3c,al
  40dfc6:	scas   eax,DWORD PTR es:[edi]
  40dfc7:	repnz pushf 
  40dfc9:	sbb    al,0xcd
  40dfcb:	sub    ecx,ebp
  40dfcd:	dec    esp
  40dfce:	sti    
  40dfcf:	cli    
  40dfd0:	inc    ecx
  40dfd1:	inc    ebx
  40dfd2:	adc    eax,0xe6f4e7c2
  40dfd7:	push   0x519cc689
  40dfdc:	ret    
  40dfdd:	xchg   DWORD PTR [ecx+0x1d],esp
  40dfe0:	lahf   
  40dfe1:	adc    ebx,edi
  40dfe3:	dec    ebp
  40dfe4:	and    dl,ah
  40dfe6:	mov    ch,0x68
  40dfe8:	outs   dx,DWORD PTR ds:[esi]
  40dfe9:	mov    esi,0xf6bb67cc
  40dfee:	sub    BYTE PTR [ecx+0xd],cl
  40dff1:	mov    edx,DWORD PTR [ebp+0x2400a071]
  40dff7:	(bad)  
  40dff8:	js     0x40df85
  40dffa:	xchg   edi,eax
  40dffb:	add    ah,BYTE PTR [esi+0x7b77fc62]
  40e001:	pop    ecx
  40e002:	fst    DWORD PTR [edx+0xe680c05]
  40e008:	add    eax,0xc08768c2
  40e00d:	xchg   ebx,eax
  40e00e:	sub    dh,BYTE PTR [eax+0x32]
  40e011:	aas    
  40e012:	imul   edx,DWORD PTR [ebp-0xd],0x47
  40e016:	xchg   esi,eax
  40e017:	ror    DWORD PTR [edi],1
  40e019:	inc    edi
  40e01a:	mov    ds:0x46ae9596,eax
  40e01f:	xor    DWORD PTR [ebx+0xf45b6b2],ebx
  40e025:	inc    DWORD PTR [ebx-0x74]
  40e028:	test   BYTE PTR [esi-0x28],bh
  40e02b:	xchg   edx,eax
  40e02c:	loop   0x40dfea
  40e02e:	pop    ebp
  40e02f:	retf   0x7cd1
  40e032:	push   cs
  40e033:	jmp    0x40e018
  40e035:	clc    
  40e036:	cmp    BYTE PTR [edi+ebp*2-0x12fdf11e],dh
  40e03d:	test   al,0xc8
  40e03f:	and    al,0x4c
  40e041:	xor    ecx,esi
  40e043:	iret   
  40e044:	sub    DWORD PTR [edi],ebp
  40e046:	out    dx,al
  40e047:	mov    dh,0x14
  40e049:	cmp    ch,BYTE PTR [ebp+0x4961381e]
  40e04f:	cdq    
  40e050:	lock loop 0x40e021
  40e053:	sub    ebp,esi
  40e055:	inc    eax
  40e056:	popa   
  40e057:	push   ecx
  40e058:	lock and eax,DWORD PTR [ecx+0x73]
  40e05c:	jo     0x40e025
  40e05e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e05f:	sub    eax,0xc5840b8c
  40e064:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e066:	aam    0x1e
  40e068:	adc    eax,0xdb9d4f28
  40e06d:	dec    edi
  40e06e:	xlat   BYTE PTR ds:[ebx]
  40e06f:	leave  
  40e070:	jns    0x40e087
  40e072:	xor    bh,BYTE PTR [eax]
  40e074:	mov    ch,0x83
  40e076:	call   0xb3ff:0xa89e7027
  40e07d:	das    
  40e07e:	into   
  40e07f:	dec    ebp
  40e080:	push   cs
  40e081:	cli    
  40e082:	xor    bl,bl
  40e084:	cmp    eax,ecx
  40e086:	(bad)  
  40e087:	addr16 gs dec esi
  40e08a:	daa    
  40e08b:	ja     0x40e0d7
  40e08d:	jle    0x40e0fe
  40e08f:	sbb    eax,0xf4f3451e
  40e094:	push   ebx
  40e095:	cmp    BYTE PTR [ebx+0x12],cl
  40e098:	ss call 0x15b598f3
  40e09e:	loopne 0x40e0ad
  40e0a0:	xchg   DWORD PTR [ecx],eax
  40e0a2:	lahf   
  40e0a3:	call   0xf37f:0x68fc3f5b
  40e0aa:	js     0x40e0ca
  40e0ac:	mov    ds:0x71a9ec12,eax
  40e0b1:	pop    edi
  40e0b2:	aam    0xcf
  40e0b4:	xor    BYTE PTR [edi-0x44f3032b],cl
  40e0ba:	test   BYTE PTR [ecx-0x49],ah
  40e0bd:	cmp    al,0x8b
  40e0bf:	je     0x40e106
  40e0c1:	inc    esp
  40e0c2:	pusha  
  40e0c3:	sbb    bl,dh
  40e0c5:	fdiv   QWORD PTR [ebp-0x36]
  40e0c8:	mov    ecx,0xccb221ad
  40e0cd:	cmc    
  40e0ce:	dec    ebp
  40e0cf:	test   al,0xe9
  40e0d1:	shl    BYTE PTR [ecx-0x675abeb8],cl
  40e0d7:	dec    edx
  40e0d8:	test   BYTE PTR [esi+0x7b],ch
  40e0db:	enter  0x94c6,0xc9
  40e0df:	pop    ebx
  40e0e0:	cwde   
  40e0e1:	shl    cl,cl
  40e0e3:	mov    ds:0xa1702623,al
  40e0e8:	sbb    al,0x32
  40e0ea:	mov    ds:0x227d6a77,al
  40e0ef:	lods   eax,DWORD PTR ds:[esi]
  40e0f0:	jnp    0x40e0ca
  40e0f2:	repz fs jge 0x40e142
  40e0f6:	push   cs
  40e0f7:	nop
  40e0f8:	outs   dx,DWORD PTR ds:[esi]
  40e0f9:	jno    0x40e0e5
  40e0fb:	jecxz  0x40e0b4
  40e0fd:	loope  0x40e0fc
  40e0ff:	out    dx,al
  40e100:	and    eax,0xc449877b
  40e105:	sahf   
  40e106:	repz or ch,BYTE PTR [edx-0xe10a432]
  40e10d:	aam    0x93
  40e10f:	push   es
  40e110:	clc    
  40e111:	sub    esp,edi
  40e113:	jmp    0x40e0df
  40e115:	test   bl,dl
  40e117:	push   esp
  40e118:	mov    ah,0xad
  40e11a:	push   0xffffffae
  40e11c:	mov    al,fs:0x9b465eb6
  40e122:	ret    
  40e123:	test   BYTE PTR [ebp+0x6b013980],dh
  40e129:	(bad)  
  40e12a:	sub    al,0xdf
  40e12c:	dec    ecx
  40e12d:	xchg   ecx,eax
  40e12e:	bound  ecx,QWORD PTR [eax-0x77]
  40e131:	pop    esp
  40e132:	push   0x9136618c
  40e137:	cmp    bl,BYTE PTR [ecx]
  40e139:	sub    bl,BYTE PTR [esi]
  40e13b:	fdiv   st(1),st
  40e13d:	jnp    0x40e15e
  40e13f:	pop    ds
  40e140:	push   ecx
  40e141:	jmp    FWORD PTR [esi-0x33]
  40e144:	cmc    
  40e145:	add    bl,BYTE PTR [edi+0x6]
  40e148:	dec    esi
  40e149:	out    0x7f,al
  40e14b:	mov    DWORD PTR [eax-0x41cc4d4e],edi
  40e151:	fs mov ch,0x66
  40e154:	mov    ah,BYTE PTR [eax+0x3f89f11f]
  40e15a:	mov    cs,WORD PTR [ecx]
  40e15c:	fst    QWORD PTR [edi]
  40e15e:	icebp  
  40e15f:	ja     0x40e177
  40e161:	jl     0x40e16b
  40e163:	push   ebx
  40e164:	hlt    
  40e165:	dec    edx
  40e166:	or     eax,0x3f72db32
  40e16b:	aad    0xe1
  40e16d:	pop    ds
  40e16e:	and    eax,esp
  40e170:	push   cs
  40e171:	outs   dx,DWORD PTR ds:[esi]
  40e172:	and    BYTE PTR [eax+0x67],dh
  40e175:	imul   eax,ecx,0xffffffcd
  40e178:	xor    eax,0xf0c3396d
  40e17d:	xor    DWORD PTR [ebx-0x55],0x2f9f239f
  40e184:	aam    0xe9
  40e186:	ds push es
  40e188:	adc    dl,BYTE PTR [ebp-0x2906944f]
  40e18e:	test   DWORD PTR [ebx],esi
  40e190:	stos   DWORD PTR es:[edi],eax
  40e191:	mov    edi,0xc654116f
  40e196:	xchg   ebx,eax
  40e197:	add    bl,dh
  40e199:	jbe    0x40e194
  40e19b:	out    0x26,al
  40e19d:	fistp  DWORD PTR [esi+0x4]
  40e1a0:	push   esi
  40e1a1:	dec    esp
  40e1a2:	f2xm1  
  40e1a4:	shl    dh,0x62
  40e1a7:	out    0x5d,eax
  40e1a9:	out    dx,eax
  40e1aa:	sub    eax,0x1ba5dab1
  40e1af:	push   eax
  40e1b0:	sub    dh,BYTE PTR [ecx]
  40e1b2:	dec    ecx
  40e1b3:	jno    0x40e1e0
  40e1b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1b6:	(bad)  [ecx+ecx*2+0x59655e9c]
  40e1bd:	in     eax,dx
  40e1be:	sbb    al,0xf8
  40e1c0:	xchg   esi,eax
  40e1c1:	retf   0x8964
  40e1c4:	imul   esp,DWORD PTR [ebx],0x12
  40e1c7:	mov    ebx,0x57a96370
  40e1cc:	(bad)  
  40e1cd:	cmp    al,0x71
  40e1cf:	and    BYTE PTR [esi-0x68e11939],al
  40e1d5:	add    BYTE PTR [eax],0x9c
  40e1d8:	xchg   edx,eax
  40e1d9:	cmp    ebp,DWORD PTR [edx]
  40e1db:	gs push es
  40e1dd:	repnz push edx
  40e1df:	lods   eax,DWORD PTR ds:[esi]
  40e1e0:	xor    BYTE PTR [esi+0x1a],0xc
  40e1e4:	ins    BYTE PTR es:[edi],dx
  40e1e5:	mov    fs,WORD PTR [ebx-0x16]
  40e1e8:	cmp    edi,esp
  40e1ea:	xlat   BYTE PTR ds:[ebx]
  40e1eb:	ins    BYTE PTR es:[edi],dx
  40e1ec:	(bad)  
  40e1ed:	ss mov dl,BYTE PTR es:[eax-0x38fe9d9e]
  40e1f5:	add    dh,dh
  40e1f7:	pop    ebx
  40e1f8:	sbb    BYTE PTR [esi+0x38],0x47
  40e1fc:	imul   ebp,DWORD PTR [ecx],0xffffffda
  40e1ff:	dec    edx
  40e200:	pop    ebx
  40e201:	shr    DWORD PTR [esi+0x7b],cl
  40e204:	btr    DWORD PTR [eax+0x7c],esi
  40e208:	ins    BYTE PTR es:[edi],dx
  40e209:	jge    0x40e21d
  40e20b:	and    eax,0x37bd239d
  40e210:	adc    ah,dl
  40e212:	pop    ss
  40e213:	add    BYTE PTR [ebx+0x1b5987c1],dl
  40e219:	jg     0x40e1a5
  40e21b:	loop   0x40e272
  40e21d:	xchg   DWORD PTR [edx],ecx
  40e21f:	ins    DWORD PTR es:[edi],dx
  40e220:	retf   0xfb15
  40e223:	push   ss
  40e224:	cdq    
  40e225:	in     eax,dx
  40e226:	add    al,0xe1
  40e228:	push   ecx
  40e229:	fcom   QWORD PTR [edx]
  40e22b:	je     0x40e23a
  40e22d:	mov    ch,0x7b
  40e22f:	mov    cl,0x2e
  40e231:	(bad)  
  40e232:	adc    al,0x8b
  40e234:	int3   
  40e235:	repz cwde 
  40e237:	stos   BYTE PTR es:[edi],al
  40e238:	in     eax,0x95
  40e23a:	pop    es
  40e23b:	lods   al,BYTE PTR ds:[esi]
  40e23c:	out    0xc4,eax
  40e23e:	stos   BYTE PTR es:[edi],al
  40e23f:	push   ecx
  40e240:	or     ah,BYTE PTR [edi+0x3e]
  40e243:	icebp  
  40e244:	push   esi
  40e245:	jg     0x40e1e6
  40e247:	es inc edi
  40e249:	xchg   DWORD PTR [edx+0x53316399],esi
  40e24f:	sbb    eax,0x11d37b4e
  40e254:	pop    ebp
  40e255:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e256:	fdivrp st(4),st
  40e258:	push   ds
  40e259:	mov    cl,0x65
  40e25b:	push   ds
  40e25c:	pop    ebp
  40e25d:	sub    dh,dh
  40e25f:	les    ecx,FWORD PTR [eax+0x33c4db2a]
  40e265:	jge    0x40e21c
  40e267:	pop    ebp
  40e268:	sub    al,0x30
  40e26a:	popf   
  40e26b:	test   DWORD PTR [edi-0x7175a839],0xd15ac3c5
  40e275:	cmp    ch,BYTE PTR [ebx]
  40e277:	mov    dl,0x6
  40e279:	add    esp,DWORD PTR [ebp+0x44]
  40e27c:	dec    ebx
  40e27d:	pop    ds
  40e27e:	cwde   
  40e27f:	in     eax,dx
  40e280:	mov    bl,0xd3
  40e282:	scas   al,BYTE PTR es:[edi]
  40e283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e284:	mov    esp,0xcccb0cd8
  40e289:	adc    eax,DWORD PTR [eax+0x5d4f9ae8]
  40e28f:	stos   DWORD PTR es:[edi],eax
  40e290:	ffreep st(7)
  40e292:	mov    cl,0x68
  40e294:	or     cl,BYTE PTR [bx+0x675b]
  40e299:	xor    BYTE PTR [ebx+esi*2],al
  40e29c:	xor    DWORD PTR [ebx-0x51],edx
  40e29f:	int    0x1c
  40e2a1:	data16 aas 
  40e2a3:	(bad)  
  40e2a4:	mul    ebx
  40e2a6:	push   edx
  40e2a7:	pop    ecx
  40e2a8:	push   eax
  40e2a9:	dec    edx
  40e2aa:	jge    0x40e2a2
  40e2ac:	push   ss
  40e2ad:	ds ins DWORD PTR es:[edi],dx
  40e2af:	ret    
  40e2b0:	xor    esi,eax
  40e2b2:	add    BYTE PTR [ebx+0x3d],cl
  40e2b5:	int    0xaa
  40e2b7:	add    ch,BYTE PTR [edx]
  40e2b9:	jnp    0x40e259
  40e2bb:	pusha  
  40e2bc:	add    cl,BYTE PTR [esi-0x715e1bea]
  40e2c2:	lahf   
  40e2c3:	loop   0x40e2b4
  40e2c5:	push   esp
  40e2c6:	push   ebx
  40e2c7:	mov    cl,0x26
  40e2c9:	xor    BYTE PTR [ebx+0x3d0d4147],cl
  40e2cf:	test   al,0x53
  40e2d1:	push   ss
  40e2d2:	push   edi
  40e2d3:	mov    ecx,0x18f942a
  40e2d8:	std    
  40e2d9:	pop    eax
  40e2da:	(bad)  
  40e2db:	and    esi,edx
  40e2dd:	cmp    al,0xb
  40e2df:	cmp    al,0xc8
  40e2e1:	xor    ebp,esp
  40e2e3:	jmp    0x4c64d99c
  40e2e8:	jge    0x40e30f
  40e2ea:	shl    BYTE PTR [ebp+0x6a],cl
  40e2ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2ee:	mov    eax,ds:0x35505cc0
  40e2f3:	lods   eax,DWORD PTR ds:[esi]
  40e2f4:	or     ch,BYTE PTR [eax+0x17]
  40e2f7:	pop    ecx
  40e2f8:	inc    esi
  40e2f9:	adc    cl,BYTE PTR [ecx-0x518082d8]
  40e2ff:	xlat   BYTE PTR ds:[ebx]
  40e300:	mov    eax,0xe9104758
  40e305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e306:	xchg   ecx,eax
  40e307:	xor    ebx,DWORD PTR [ebp+0x6f]
  40e30a:	iret   
  40e30b:	push   ss
  40e30c:	icebp  
  40e30d:	arpl   WORD PTR [ebp+ebp*4+0x2fe4f342],sp
  40e314:	push   ss
  40e315:	or     esi,DWORD PTR [ecx]
  40e317:	push   ss
  40e318:	adc    esi,edi
  40e31a:	dec    ebx
  40e31b:	pusha  
  40e31c:	and    al,0x53
  40e31e:	adc    bl,ah
  40e320:	cmc    
  40e321:	test   al,0x3e
  40e323:	sub    BYTE PTR [esi],ch
  40e325:	or     DWORD PTR [bx],ebp
  40e328:	push   ss
  40e329:	add    BYTE PTR [ecx],cl
  40e32b:	sbb    BYTE PTR [esi+0x12b9cd3c],al
  40e331:	xchg   edi,eax
  40e332:	push   cs
  40e333:	lods   eax,DWORD PTR ds:[esi]
  40e334:	ja     0x40e348
  40e336:	repz mov edi,0x3239fedd
  40e33c:	pop    edx
  40e33d:	out    dx,eax
  40e33e:	mov    esp,0x56bdd1cd
  40e343:	dec    eax
  40e344:	xchg   esi,eax
  40e345:	sub    al,0x14
  40e347:	std    
  40e348:	push   cs
  40e349:	jb     0x40e3ba
  40e34b:	sbb    al,0x1e
  40e34d:	std    
  40e34e:	out    dx,al
  40e34f:	cmp    BYTE PTR [esi+0x71],cl
  40e352:	sbb    eax,0xb42b610a
  40e357:	adc    BYTE PTR [ebx+0x21],ch
  40e35a:	into   
  40e35b:	int    0xdb
  40e35d:	xor    BYTE PTR [ebp+0x68],dh
  40e360:	mov    dl,0xba
  40e362:	(bad)  
  40e363:	loopne 0x40e362
  40e365:	les    edx,FWORD PTR [edi+ecx*1+0x755c5c95]
  40e36c:	loopne 0x40e3b0
  40e36e:	loop   0x40e318
  40e370:	in     al,dx
  40e371:	hlt    
  40e372:	mov    WORD PTR [edi-0x5f7a7d7a],?
  40e378:	xor    DWORD PTR [ebp+0x30],0x6f
  40e37c:	test   edx,ebx
  40e37e:	add    eax,0x84c05367
  40e383:	das    
  40e384:	push   ss
  40e385:	xor    esi,DWORD PTR [ebx]
  40e387:	push   ss
  40e388:	xor    cl,BYTE PTR ds:0x40d00ab8
  40e38e:	int3   
  40e38f:	sbb    esp,edx
  40e391:	mov    DWORD PTR [edx-0x20d6c27d],edi
  40e397:	std    
  40e398:	pop    esi
  40e399:	cs call 0x21e8c975
  40e39f:	add    dl,BYTE PTR [edx-0x889cec0]
  40e3a5:	sti    
  40e3a6:	inc    esp
  40e3a7:	xchg   edx,eax
  40e3a8:	lock pop ecx
  40e3aa:	cld    
  40e3ab:	das    
  40e3ac:	dec    ebp
  40e3ad:	aaa    
  40e3ae:	jae    0x40e40b
  40e3b0:	(bad)  
  40e3b1:	sub    dh,dh
  40e3b3:	jle    0x40e37f
  40e3b5:	sbb    eax,0x511ce732
  40e3ba:	jmp    0x9c78:0x738e0172
  40e3c1:	int    0x2d
  40e3c3:	test   ebx,esp
  40e3c5:	fnstsw WORD PTR gs:[esi]
  40e3c8:	adc    ecx,ebp
  40e3ca:	add    BYTE PTR [ecx],bl
  40e3cc:	pop    ebp
  40e3cd:	es pop edx
  40e3cf:	push   ds
  40e3d0:	push   ds
  40e3d1:	mov    bl,0xa4
  40e3d3:	push   cs
  40e3d4:	les    edi,FWORD PTR [edx+0x3c]
  40e3d7:	gs xchg edi,eax
  40e3d9:	out    dx,eax
  40e3da:	mov    esi,0x96528560
  40e3df:	pop    si
  40e3e1:	and    BYTE PTR gs:0x98144f49,ah
  40e3e8:	xchg   esp,eax
  40e3e9:	mov    ch,0x5d
  40e3eb:	stos   DWORD PTR es:[edi],eax
  40e3ec:	inc    edi
  40e3ed:	and    eax,edi
  40e3ef:	(bad)  
  40e3f0:	mov    ah,0x29
  40e3f2:	add    ecx,DWORD PTR [ebp-0x2d]
  40e3f5:	xchg   edx,eax
  40e3f6:	nop
  40e3f7:	lds    edi,FWORD PTR [edx]
  40e3f9:	test   al,0x1e
  40e3fb:	adc    eax,0xed78df61
  40e400:	lds    eax,FWORD PTR [edi+0x75]
  40e403:	jge    0x40e449
  40e405:	std    
  40e406:	jge    0x40e3df
  40e408:	mov    dh,0xd5
  40e40a:	stc    
  40e40b:	sub    BYTE PTR [eax+0x23],cl
  40e40e:	scas   al,BYTE PTR es:[edi]
  40e40f:	push   es
  40e410:	mov    ebx,0xce8cb5fa
  40e415:	mov    ch,0xcb
  40e417:	jmp    0x5dc2ac52
  40e41c:	nop
  40e41d:	fisttp DWORD PTR [edx+0x66e8a275]
  40e423:	sbb    DWORD PTR [ebp-0x72],edx
  40e426:	mov    dl,0x9
  40e428:	gs int 0x0
  40e42b:	outs   dx,DWORD PTR ds:[esi]
  40e42c:	loopne 0x40e4a6
  40e42e:	(bad)  
  40e42f:	aam    0x5a
  40e431:	lods   al,BYTE PTR ds:[esi]
  40e432:	xchg   ebx,eax
  40e433:	xor    bh,bh
  40e435:	cmp    al,0x7b
  40e437:	outs   dx,BYTE PTR ds:[esi]
  40e438:	adc    eax,esi
  40e43a:	retf   
  40e43b:	outs   dx,DWORD PTR ds:[esi]
  40e43c:	pop    ds
  40e43d:	lock cli 
  40e43f:	xchg   edx,eax
  40e440:	retf   0x379a
  40e443:	stos   BYTE PTR es:[edi],al
  40e444:	cmp    BYTE PTR [esi+0x2d],al
  40e447:	test   eax,0xef7c6b2b
  40e44c:	in     eax,dx
  40e44d:	stos   BYTE PTR es:[edi],al
  40e44e:	sbb    BYTE PTR [esi-0x25],bh
  40e451:	adc    DWORD PTR [eax-0x57],ebx
  40e454:	jb     0x74541daf
  40e45a:	fisttp WORD PTR [eax-0x74ee919e]
  40e460:	sbb    ebp,DWORD PTR [edi-0x60380a20]
  40e466:	jne    0x40e490
  40e468:	adc    DWORD PTR [esi-0x51],0x41
  40e46c:	ins    DWORD PTR es:[edi],dx
  40e46d:	pop    edi
  40e46e:	mov    al,cl
  40e470:	push   edx
  40e471:	ss sbb dl,cl
  40e474:	dec    ebp
  40e475:	xor    al,0xf1
  40e477:	cs mov eax,0x913b72c
  40e47d:	xor    edi,DWORD PTR [ecx-0x1f2f6a29]
  40e483:	inc    edi
  40e484:	xor    eax,0x32b27a99
  40e489:	out    dx,eax
  40e48a:	xchg   edi,eax
  40e48b:	enter  0x9ac2,0x64
  40e48f:	sbb    BYTE PTR [ebx-0x3a0ab6a9],dh
  40e495:	int3   
  40e496:	repz shl DWORD PTR [ebp+edi*8-0x64b954e2],cl
  40e49e:	std    
  40e49f:	and    BYTE PTR [ebp+0x62a9b56f],al
  40e4a5:	sti    
  40e4a6:	sbb    eax,edx
  40e4a8:	rol    BYTE PTR [ebp-0x1065174a],0x5b
  40e4af:	in     al,dx
  40e4b0:	or     DWORD PTR [edi+0x727f5fb4],ecx
  40e4b6:	outs   dx,BYTE PTR ds:[esi]
  40e4b7:	dec    edi
  40e4b8:	jg     0x40e504
  40e4ba:	stos   BYTE PTR es:[edi],al
  40e4bb:	ss mov ch,0xbb
  40e4be:	sahf   
  40e4bf:	cmc    
  40e4c0:	pop    ebx
  40e4c1:	mov    dl,BYTE PTR [eax]
  40e4c3:	mov    dh,0x4a
  40e4c5:	inc    edx
  40e4c6:	add    edi,edx
  40e4c8:	es inc ebp
  40e4ca:	inc    edi
  40e4cb:	arpl   WORD PTR [esi+ebp*8-0x80],sp
  40e4cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4d0:	jg     0x40e532
  40e4d2:	sbb    ebx,DWORD PTR [ecx-0x6f]
  40e4d5:	pop    eax
  40e4d6:	dec    ecx
  40e4d7:	aad    0x5e
  40e4d9:	xchg   ecx,eax
  40e4da:	sbb    bh,dh
  40e4dc:	jecxz  0x40e50d
  40e4de:	and    eax,0xa1c23328
  40e4e3:	push   ebx
  40e4e4:	xor    al,0x2a
  40e4e6:	nop
  40e4e7:	mul    DWORD PTR [ecx-0x56]
  40e4ea:	lods   eax,DWORD PTR ds:[esi]
  40e4eb:	sbb    eax,0x6ae047dc
  40e4f0:	xor    ebx,DWORD PTR [eax+0x45413590]
  40e4f6:	jg     0x40e485
  40e4f8:	xor    eax,0x2d5d349a
  40e4fd:	pop    ebx
  40e4fe:	outs   dx,BYTE PTR ds:[esi]
  40e4ff:	imul   eax,DWORD PTR [esi-0x18d70592],0xf1b6fd5
  40e509:	dec    ebp
  40e50a:	inc    ebp
  40e50b:	adc    dh,ch
  40e50d:	shl    BYTE PTR [ebx],1
  40e50f:	std    
  40e510:	adc    BYTE PTR [eax],bh
  40e512:	xor    esi,esi
  40e514:	mov    WORD PTR ds:0x112593e2,gs
  40e51a:	sbb    al,BYTE PTR [esi+0x56]
  40e51d:	push   ds
  40e51e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e51f:	arpl   sp,di
  40e521:	cli    
  40e522:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e523:	shr    BYTE PTR [edi-0x837ec33],cl
  40e529:	jle    0x40e51c
  40e52b:	push   ecx
  40e52c:	retf   
  40e52d:	mov    ch,0xd
  40e52f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e530:	xor    BYTE PTR [ebp+0x7a],cl
  40e533:	add    BYTE PTR [ecx+esi*1-0x80],bl
  40e537:	std    
  40e538:	cmp    ah,bl
  40e53a:	push   0x13
  40e53c:	retf   
  40e53d:	sahf   
  40e53e:	sti    
  40e53f:	lds    ebx,FWORD PTR [ecx-0x1f]
  40e542:	mov    ds:0x95e0988e,eax
  40e547:	jl     0x40e5b4
  40e549:	retf   
  40e54a:	cld    
  40e54b:	repnz inc edi
  40e54d:	xchg   esp,eax
  40e54e:	fiadd  DWORD PTR [edi]
  40e550:	test   al,0x82
  40e552:	outs   dx,BYTE PTR ds:[esi]
  40e553:	bound  eax,QWORD PTR [ebx-0x53]
  40e556:	and    al,al
  40e558:	sbb    al,0xd8
  40e55a:	mov    al,ds:0xb94130a6
  40e55f:	mov    esp,es
  40e561:	enter  0xba6d,0xda
  40e565:	add    eax,0xdd6b9785
  40e56a:	outs   dx,DWORD PTR ds:[esi]
  40e56b:	add    dh,BYTE PTR [eax]
  40e56d:	cmp    DWORD PTR [ebx],eax
  40e56f:	lds    esi,FWORD PTR [edi]
  40e571:	out    0xbb,al
  40e573:	cwde   
  40e574:	loopne 0x40e528
  40e576:	push   esp
  40e577:	push   edi
  40e578:	cmp    eax,0xc02bfa04
  40e57d:	ja     0x40e5db
  40e57f:	inc    edi
  40e580:	xchg   ecx,eax
  40e581:	(bad)  
  40e582:	test   BYTE PTR [edx-0x12],0x6
  40e586:	push   esi
  40e587:	mov    DWORD PTR [eax+0x1c],ecx
  40e58a:	dec    ebx
  40e58b:	fnsave [edx]
  40e58d:	js     0x40e5bb
  40e58f:	or     cl,cl
  40e591:	in     eax,dx
  40e592:	pop    ss
  40e593:	mov    esi,0x60e41648
  40e598:	add    ebx,DWORD PTR [esi+0x40]
  40e59b:	(bad)  
  40e59c:	mov    dh,0x10
  40e59e:	jmp    0x40e5ba
  40e5a0:	fwait
  40e5a1:	mov    al,ds:0x61b46a99
  40e5a6:	mov    eax,DWORD PTR [ecx+0x129b0e1b]
  40e5ac:	jge    0x40e5e4
  40e5ae:	(bad)  
  40e5af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5b0:	cwde   
  40e5b1:	nop
  40e5b2:	in     eax,0x51
  40e5b4:	and    DWORD PTR [esi+0x5f],esp
  40e5b7:	call   0x20d6:0x69f473b9
  40e5be:	fcomp  st(1)
  40e5c0:	sub    al,0x99
  40e5c2:	ins    DWORD PTR es:[edi],dx
  40e5c3:	xlat   BYTE PTR ds:[ebx]
  40e5c4:	dec    eax
  40e5c5:	ds enter 0x2212,0x54
  40e5ca:	ror    al,0x10
  40e5cd:	inc    ebx
  40e5ce:	xchg   esi,eax
  40e5cf:	push   ebp
  40e5d0:	or     eax,0x58
  40e5d3:	es test al,0x4c
  40e5d6:	inc    DWORD PTR [ecx+0x64]
  40e5d9:	push   ds
  40e5da:	or     dh,BYTE PTR [ecx-0x1e]
  40e5dd:	in     eax,dx
  40e5de:	xchg   ebp,eax
  40e5df:	pushf  
  40e5e0:	cli    
  40e5e1:	pop    ds
  40e5e2:	sbb    ch,BYTE PTR [ebp-0x7a5264c5]
  40e5e8:	pop    ebx
  40e5e9:	stc    
  40e5ea:	jnp    0x40e656
  40e5ec:	or     DWORD PTR [edx+0x6907c8a4],0x5a
  40e5f3:	je     0x40e5b6
  40e5f5:	shl    BYTE PTR [esp+ecx*2],cl
  40e5f8:	xchg   ebp,eax
  40e5f9:	in     eax,0x39
  40e5fb:	nop
  40e5fc:	addr16 js 0x40e64b
  40e5ff:	inc    ebx
  40e600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e601:	mov    ds:0x993a165f,eax
  40e606:	dec    ecx
  40e607:	cmp    ah,BYTE PTR [edi+ebp*2+0x620e03d0]
  40e60e:	mov    ds:0x144eac18,al
  40e613:	xchg   esp,eax
  40e614:	push   ss
  40e615:	push   ds
  40e616:	out    dx,eax
  40e617:	sahf   
  40e618:	lods   al,BYTE PTR ds:[esi]
  40e619:	aas    
  40e61a:	call   0xbff9:0x275a9487
  40e621:	sbb    eax,0xfe40e52
  40e626:	shr    BYTE PTR [ecx],cl
  40e628:	push   ebp
  40e629:	push   DWORD PTR [edx+0x57]
  40e62c:	xchg   edx,eax
  40e62d:	aam    0x60
  40e62f:	jecxz  0x40e635
  40e631:	xor    eax,0xc78a657f
  40e636:	les    edx,FWORD PTR [ecx+0x46a5b48f]
  40e63c:	mov    bh,0x9
  40e63e:	call   0x94ee:0xa9090387
  40e645:	adc    eax,0x2d62a421
  40e64a:	xchg   ebx,eax
  40e64b:	add    edx,DWORD PTR [eax-0x4a]
  40e64e:	adc    cl,BYTE PTR [edi-0x4d]
  40e651:	imul   esp,edx,0xffffffdf
  40e654:	test   DWORD PTR [edx+ebx*4],edx
  40e657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e658:	and    DWORD PTR [edi-0x6654ad51],eax
  40e65e:	lods   al,BYTE PTR ds:[esi]
  40e65f:	(bad)  
  40e660:	adc    BYTE PTR [esi],bh
  40e662:	dec    ebx
  40e663:	jg     0x40e63c
  40e665:	test   DWORD PTR [ecx],eax
  40e667:	and    ebp,DWORD PTR [ebp-0x54]
  40e66a:	mov    bl,0x5a
  40e66c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e66d:	shl    BYTE PTR [edi-0x35],1
  40e670:	and    bl,BYTE PTR [edi]
  40e672:	(bad)  
  40e673:	xor    ecx,ebp
  40e675:	cs xchg edx,eax
  40e677:	xor    eax,0x362dd088
  40e67c:	popa   
  40e67d:	jg     0x40e629
  40e67f:	mov    ah,0x83
  40e681:	mov    eax,ds:0x31618e49
  40e686:	in     eax,dx
  40e687:	bound  edi,QWORD PTR [edi+0x1d]
  40e68a:	out    0x63,al
  40e68c:	xchg   edx,eax
  40e68d:	fistp  QWORD PTR [ebx-0x2a2a2a08]
  40e693:	jp     0x40e69e
  40e695:	dec    ebx
  40e696:	jns    0x40e68c
  40e698:	iret   
  40e699:	add    esp,DWORD PTR [edi]
  40e69b:	cmp    eax,esp
  40e69d:	pop    es
  40e69e:	mov    ds:0x3a7a26cc,al
  40e6a3:	inc    ebp
  40e6a4:	sahf   
  40e6a5:	int    0x8e
  40e6a7:	pop    esp
  40e6a8:	push   cs
  40e6a9:	add    eax,0x238f3ef6
  40e6ae:	call   0xddb4d32
  40e6b3:	mov    esi,0x67b14f00
  40e6b8:	outs   dx,BYTE PTR ds:[esi]
  40e6b9:	mov    ds:0xc6b12e88,al
  40e6be:	or     bl,BYTE PTR [edx]
  40e6c0:	cmp    al,0xeb
  40e6c2:	xor    eax,0x572d9294
  40e6c7:	add    al,0x5a
  40e6c9:	mov    ds:0x934c7af7,eax
  40e6ce:	fwait
  40e6cf:	dec    ebp
  40e6d0:	retf   
  40e6d1:	xor    DWORD PTR [ebp-0x76],0xc79c0c3a
  40e6d8:	xor    eax,0x401bf15c
  40e6dd:	jne    0x40e680
  40e6df:	outs   dx,BYTE PTR ds:[esi]
  40e6e0:	jmp    FWORD PTR [eax+0x2b]
  40e6e3:	call   0x435d:0xbe13a7a
  40e6ea:	out    dx,eax
  40e6eb:	leave  
  40e6ec:	pop    edi
  40e6ed:	imul   eax,DWORD PTR [edi],0xfffffff7
  40e6f0:	mov    ah,cl
  40e6f2:	daa    
  40e6f3:	data16 sbb BYTE PTR [ecx],dh
  40e6f6:	or     al,0xab
  40e6f8:	ins    BYTE PTR es:[edi],dx
  40e6f9:	pop    ebp
  40e6fa:	xor    BYTE PTR [bp+si+0x2b],0xde
  40e6ff:	cmp    BYTE PTR [edx+0xcb9753a],bh
  40e705:	lock adc esi,DWORD PTR [esi+0x78]
  40e709:	and    bh,al
  40e70b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e70c:	loopne 0x40e69a
  40e70e:	xor    al,0xb3
  40e710:	mov    bl,0xba
  40e712:	push   edx
  40e713:	xor    esp,DWORD PTR [eax]
  40e715:	addr16 lock es jno 0x40e6b9
  40e71a:	add    bh,BYTE PTR ds:0xc0262bc4
  40e720:	or     edx,DWORD PTR [edx-0x7]
  40e723:	mov    esi,0x19c387a2
  40e728:	dec    esi
  40e729:	dec    esp
  40e72a:	mov    ah,0x70
  40e72c:	dec    ebx
  40e72d:	dec    edx
  40e72e:	and    ah,BYTE PTR [ecx+0x36]
  40e731:	and    eax,0x74620fbd
  40e736:	sub    dl,cl
  40e738:	mov    ch,0x46
  40e73a:	lods   eax,DWORD PTR ds:[esi]
  40e73b:	pop    esi
  40e73c:	jo     0x40e71f
  40e73e:	lock inc esp
  40e740:	scas   eax,DWORD PTR es:[edi]
  40e741:	sar    DWORD PTR [ecx],1
  40e743:	daa    
  40e744:	(bad)  
  40e745:	iret   
  40e746:	mov    dl,0x7a
  40e748:	push   es
  40e749:	and    eax,0xd1cbf4a
  40e74e:	adc    eax,edi
  40e750:	dec    eax
  40e751:	test   esp,ecx
  40e753:	jae    0x40e734
  40e755:	rol    ecx,cl
  40e757:	mov    esp,?
  40e759:	(bad)  
  40e75a:	or     eax,0x312b40c6
  40e75f:	mov    al,0x61
  40e761:	sahf   
  40e762:	mov    ah,0xac
  40e764:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e765:	cs ret 0xf556
  40e769:	mov    ds:0x74a2142a,al
  40e76e:	bound  esi,QWORD PTR [edx+0x69dbc638]
  40e774:	or     al,0x3a
  40e776:	not    BYTE PTR [ebx+ebx*1-0x6745d10c]
  40e77d:	sbb    eax,0x36d8de72
  40e782:	call   0xe21a:0xd8b49ee2
  40e789:	inc    edi
  40e78a:	cmp    BYTE PTR [ebx+ecx*1+0x427c199d],ah
  40e791:	test   al,0x76
  40e793:	mov    dl,0x4b
  40e795:	iret   
  40e796:	mov    ecx,0xd61065b2
  40e79b:	stos   BYTE PTR es:[edi],al
  40e79c:	add    eax,0x1a5f7cda
  40e7a1:	push   esi
  40e7a2:	ins    BYTE PTR es:[edi],dx
  40e7a3:	fnstenv [eax+0x3c071221]
  40e7a9:	clc    
  40e7aa:	and    eax,0x798e7e51
  40e7af:	mov    ah,0x34
  40e7b1:	mov    ch,0xbe
  40e7b3:	call   0x4fcf:0xfa56e4a1
  40e7ba:	push   es
  40e7bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7bc:	outs   dx,DWORD PTR ds:[esi]
  40e7bd:	fdivr  QWORD PTR [edx-0x7a34b011]
  40e7c3:	repz std 
  40e7c5:	ins    DWORD PTR es:[edi],dx
  40e7c6:	pop    ebp
  40e7c7:	sbb    eax,ecx
  40e7c9:	or     al,0xb4
  40e7cb:	ja     0x40e83f
  40e7cd:	test   eax,0x67a6966b
  40e7d2:	aas    
  40e7d3:	pop    ecx
  40e7d4:	repnz or al,BYTE PTR [eax-0x7a]
  40e7d8:	push   cs
  40e7d9:	or     BYTE PTR [ebx+ebp*4+0x483eeff5],ch
  40e7e0:	mov    cl,0xbc
  40e7e2:	cwde   
  40e7e3:	adc    al,0x1d
  40e7e5:	xor    dl,bh
  40e7e7:	pop    ecx
  40e7e8:	xor    eax,0x3832e1d6
  40e7ed:	in     al,dx
  40e7ee:	icebp  
  40e7ef:	es test eax,0xef2882ad
  40e7f5:	mov    ds:0x6b26dced,eax
  40e7fa:	mov    eax,ds:0x2273333b
  40e7ff:	out    dx,al
  40e800:	mov    edi,0x947f5e10
  40e805:	mov    al,ds:0x7a311d00
  40e80a:	lods   eax,DWORD PTR ds:[esi]
  40e80b:	sti    
  40e80c:	ins    BYTE PTR es:[edi],dx
  40e80d:	cmp    eax,0xa4dd9fb4
  40e812:	jp     0x40e86b
  40e814:	sbb    eax,0xe0209152
  40e819:	rcl    BYTE PTR cs:[edx-0x3f],0xd
  40e81e:	ficomp WORD PTR ds:0xfee697f6
  40e824:	sar    esp,cl
  40e826:	pusha  
  40e827:	push   eax
  40e828:	push   ebx
  40e829:	les    ecx,FWORD PTR [ecx]
  40e82b:	(bad)  
  40e82c:	lods   eax,DWORD PTR ds:[esi]
  40e82d:	repz arpl si,bp
  40e830:	jne    0x40e849
  40e832:	lods   eax,DWORD PTR ds:[esi]
  40e833:	pop    ss
  40e834:	ins    BYTE PTR es:[edi],dx
  40e835:	popf   
  40e836:	mov    esp,0xf40e423b
  40e83c:	out    dx,eax
  40e83d:	inc    edi
  40e83e:	fldcw  WORD PTR [ebx+0x5f]
  40e841:	xor    eax,0x28c694b3
  40e846:	pop    edi
  40e847:	(bad)  
  40e849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e84a:	fstp   QWORD PTR [ecx-0x49]
  40e84d:	call   0x4196da9f
  40e852:	and    al,0x26
  40e854:	mov    al,ds:0x8d53df7b
  40e859:	bound  ebx,QWORD PTR [ebx-0x58817a6a]
  40e85f:	cmp    DWORD PTR [edi+eax*2],esp
  40e862:	test   BYTE PTR [esi+0x3a],ch
  40e865:	mov    esi,0x5820e527
  40e86a:	jb     0x40e88b
  40e86c:	mov    al,ds:0x7a74d6f4
  40e871:	daa    
  40e872:	or     eax,0xea38fe18
  40e877:	xor    eax,0x7e317864
  40e87c:	mov    eax,0xac0e487e
  40e881:	adc    eax,0x7855d918
  40e886:	retf   0xd63
  40e889:	dec    edi
  40e88a:	mov    ebp,0x60845b95
  40e88f:	adc    dh,BYTE PTR [ebx-0xa]
  40e892:	shl    DWORD PTR [ecx-0x3a],cl
  40e895:	div    DWORD PTR [eax]
  40e897:	inc    ecx
  40e898:	and    eax,0xe488ac55
  40e89d:	cld    
  40e89e:	rol    DWORD PTR [ebp-0x74d6dea3],1
  40e8a4:	push   ecx
  40e8a5:	adc    eax,0xa08ad3ec
  40e8aa:	dec    esi
  40e8ab:	mov    DWORD PTR cs:[ebx+0x2580b8c9],esp
  40e8b2:	mov    eax,ds:0x81154d41
  40e8b7:	cmp    eax,0xb62f9ad5
  40e8bc:	mov    al,ds:0xdb39163d
  40e8c1:	dec    eax
  40e8c2:	je     0x40e8cd
  40e8c4:	aad    0x94
  40e8c6:	add    DWORD PTR [edi-0x80],ebp
  40e8c9:	push   esp
  40e8ca:	jle    0x40e853
  40e8cc:	dec    esp
  40e8cd:	adc    ah,BYTE PTR [eax-0x17]
  40e8d0:	jnp    0x40e8ca
  40e8d2:	dec    edi
  40e8d3:	sub    DWORD PTR [edx+esi*2],ebp
  40e8d6:	adc    al,0x7
  40e8d8:	neg    BYTE PTR [ecx]
  40e8da:	xchg   ebx,eax
  40e8db:	or     edx,ebx
  40e8dd:	cdq    
  40e8de:	push   ebx
  40e8df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8e0:	les    eax,FWORD PTR [ebx-0xc164b9e]
  40e8e6:	mov    eax,0x6ddd788f
  40e8eb:	cmp    eax,ebx
  40e8ed:	and    DWORD PTR [edx+0xd],ecx
  40e8f0:	mov    ebp,0xff5bb00d
  40e8f5:	ins    BYTE PTR es:[edi],dx
  40e8f6:	int3   
  40e8f7:	cld    
  40e8f8:	sti    
  40e8f9:	add    al,0xdd
  40e8fb:	enter  0x4e7b,0xbc
  40e8ff:	xor    DWORD PTR [ecx-0x4d],ebp
  40e902:	cmp    ch,BYTE PTR [eax+0x5]
  40e905:	mov    ebp,0xf665a236
  40e90a:	fwait
  40e90b:	mov    esi,fs
  40e90d:	je     0x40e8ac
  40e90f:	out    dx,eax
  40e910:	jb     0x40e950
  40e912:	out    0xfa,eax
  40e914:	mov    bh,0x81
  40e916:	dec    edi
  40e917:	add    al,BYTE PTR [bx+di-0x4974]
  40e91c:	imul   DWORD PTR [ebx+ebp*2]
  40e91f:	mov    edi,0x295c9e64
  40e924:	imul   edx,DWORD PTR [esi-0x2a5b8073],0xc
  40e92b:	add    ah,BYTE PTR [edi-0x64]
  40e92e:	pop    es
  40e92f:	les    esp,FWORD PTR [ebp-0x44]
  40e932:	mov    ah,0x44
  40e934:	test   dl,al
  40e936:	xor    ebx,ebp
  40e938:	mov    ds:0x2f26f134,al
  40e93d:	dec    edi
  40e93e:	mov    BYTE PTR [ebp-0x46],al
  40e941:	neg    DWORD PTR [edi-0x44]
  40e944:	pop    edi
  40e945:	mov    ecx,0xdce82a64
  40e94a:	xor    DWORD PTR [edx-0x35],esp
  40e94d:	cmp    DWORD PTR [ebx],ebx
  40e94f:	and    al,0xdb
  40e951:	sub    BYTE PTR ds:[esi],0x7d
  40e955:	add    BYTE PTR [ebx],dl
  40e957:	pop    eax
  40e958:	retf   0x7380
  40e95b:	inc    ecx
  40e95c:	xor    DWORD PTR [ecx],0x8
  40e95f:	sbb    al,0x30
  40e961:	adc    DWORD PTR [edx-0x75],ebx
  40e964:	cmp    al,0xb2
  40e966:	pop    ss
  40e967:	push   esp
  40e968:	stos   DWORD PTR es:[edi],eax
  40e969:	test   BYTE PTR [edi+ecx*8+0x64],dh
  40e96d:	adc    BYTE PTR [esi+0x33a573ce],al
  40e973:	push   ss
  40e974:	(bad)  
  40e975:	(bad)  
  40e976:	jb     0x40e8f8
  40e978:	es (bad) 
  40e97a:	lock xor ah,BYTE PTR [edx]
  40e97d:	loopne 0x40e935
  40e97f:	icebp  
  40e980:	sti    
  40e981:	aad    0xac
  40e983:	cld    
  40e984:	jle    0x40e9da
  40e986:	jns    0x40e960
  40e988:	sbb    BYTE PTR [ebp+0x7eb284fd],dh
  40e98e:	fisubr DWORD PTR [edx]
  40e990:	mov    BYTE PTR [edx+ecx*1-0x74],bl
  40e994:	cmp    BYTE PTR [ecx+0x59],al
  40e997:	pop    eax
  40e998:	call   FWORD PTR [esi+0x797435f1]
  40e99e:	stos   BYTE PTR es:[edi],al
  40e99f:	push   esi
  40e9a0:	outs   dx,DWORD PTR ds:[esi]
  40e9a1:	jae    0x40e95d
  40e9a3:	icebp  
  40e9a4:	(bad)  
  40e9a5:	mov    dl,0xb0
  40e9a7:	test   edi,eax
  40e9a9:	addr16 cmp esi,ecx
  40e9ac:	shr    BYTE PTR [esi-0x287d6a44],1
  40e9b2:	pop    esp
  40e9b3:	adc    ch,BYTE PTR ds:0x80a36777
  40e9b9:	push   cs
  40e9ba:	bound  eax,QWORD PTR [ebx+0x2819a3ac]
  40e9c0:	pop    esp
  40e9c1:	popa   
  40e9c2:	popa   
  40e9c3:	scas   al,BYTE PTR es:[edi]
  40e9c4:	into   
  40e9c5:	(bad)  
  40e9c6:	scas   al,BYTE PTR es:[edi]
  40e9c7:	rcl    DWORD PTR [ebp-0x68f915d0],0x50
  40e9ce:	imul   esp,DWORD PTR [edx+0x24],0xac489270
  40e9d5:	sub    ah,bl
  40e9d7:	mov    ds:0xc57981a6,al
  40e9dc:	fs ins BYTE PTR es:[edi],dx
  40e9de:	mov    eax,ds:0x26afe2d6
  40e9e3:	xor    ebx,esi
  40e9e5:	add    eax,edx
  40e9e7:	repz arpl WORD PTR [edx],cx
  40e9ea:	lock bound esi,QWORD PTR [edx]
  40e9ed:	sar    ebp,1
  40e9ef:	test   eax,0xcb1677be
  40e9f4:	push   0xffffff9e
  40e9f6:	pop    ds
  40e9f7:	test   eax,0x1f7281d9
  40e9fc:	dec    esi
  40e9fd:	es pop esp
  40e9ff:	fisttp DWORD PTR [esi-0x2c4b413a]
  40ea05:	aaa    
  40ea06:	cdq    
  40ea07:	dec    edi
  40ea08:	(bad)
  40ea0b:	jmp    0xf1a4:0x868d6304
  40ea12:	mov    eax,0x284259ba
  40ea17:	dec    eax
  40ea18:	aad    0xe7
  40ea1a:	hlt    
  40ea1b:	inc    edx
  40ea1c:	call   0xed3835e
  40ea21:	dec    edx
  40ea22:	add    eax,0x504f9b0f
  40ea27:	jp     0x40ea79
  40ea29:	cmp    bl,BYTE PTR [edi+edi*4-0x17]
  40ea2d:	in     al,dx
  40ea2e:	push   ebx
  40ea2f:	pop    ds
  40ea30:	mov    cl,0x77
  40ea32:	mov    DWORD PTR [esi],0x32051953
  40ea38:	or     al,0x5d
  40ea3a:	push   edx
  40ea3b:	mov    eax,ds:0xd2f6a4e
  40ea40:	(bad)  
  40ea41:	nop
  40ea42:	cli    
  40ea43:	xchg   esi,eax
  40ea44:	shr    ebx,cl
  40ea46:	cmp    eax,0xac68b076
  40ea4b:	jg     0x40ea5e
  40ea4d:	ins    DWORD PTR es:[edi],dx
  40ea4e:	dec    ebx
  40ea4f:	mov    ds:0x1ee1f2,al
  40ea55:	lds    ecx,FWORD PTR [esi]
  40ea57:	sub    eax,0x6147071e
  40ea5c:	sahf   
  40ea5d:	add    al,0xef
  40ea5f:	sub    DWORD PTR [esi-0x7e],edi
  40ea62:	dec    esp
  40ea63:	pop    ss
  40ea64:	jl     0x40ea53
  40ea66:	push   0xffffff83
  40ea68:	jo     0x40eae7
  40ea6a:	iret   
  40ea6b:	std    
  40ea6c:	int    0x53
  40ea6e:	add    dl,BYTE PTR [si+0x57]
  40ea72:	sbb    DWORD PTR [esi],ebp
  40ea74:	mov    esi,0x74483370
  40ea79:	xchg   ecx,eax
  40ea7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea7b:	or     BYTE PTR [esp+ebx*4+0x767ba58e],al
  40ea82:	mov    WORD PTR [edx],es
  40ea84:	cmp    ecx,DWORD PTR [esi]
  40ea86:	sub    DWORD PTR [edx+ecx*4-0x63f77320],ebp
  40ea8d:	cli    
  40ea8e:	dec    eax
  40ea8f:	ss inc esp
  40ea91:	dec    eax
  40ea92:	push   cs
  40ea93:	cmp    dl,BYTE PTR [edi+eax*2-0x36]
  40ea97:	jbe    0x40ea79
  40ea99:	jo     0x40ea3f
  40ea9b:	add    ecx,DWORD PTR [edx]
  40ea9d:	fwait
  40ea9e:	jbe    0x40ea4c
  40eaa0:	lea    esi,[ecx-0xf]
  40eaa3:	ja     0x40ea99
  40eaa5:	xor    bh,ah
  40eaa7:	je     0x40ea6f
  40eaa9:	push   eax
  40eaaa:	push   es
  40eaab:	pop    ebp
  40eaac:	sbb    ecx,edi
  40eaae:	xor    cl,BYTE PTR [esp+esi*8+0x66]
  40eab2:	mov    BYTE PTR [edx+0x41e1a77e],al
  40eab8:	and    esp,ebx
  40eaba:	call   0x2025:0x5371fb09
  40eac1:	mov    ds:0x8a79d4dc,al
  40eac6:	add    esi,0xbc882f79
  40eacc:	inc    ebx
  40eacd:	outs   dx,BYTE PTR ds:[esi]
  40eace:	xchg   edi,eax
  40eacf:	push   edx
  40ead0:	inc    edx
  40ead1:	xlat   BYTE PTR ds:[ebx]
  40ead2:	dec    eax
  40ead3:	jmp    DWORD PTR [ecx+0x6a]
  40ead6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ead7:	inc    edx
  40ead8:	xchg   ebx,eax
  40ead9:	jmp    0xe921e616
  40eade:	xchg   BYTE PTR [eax+eax*1],bh
  40eae1:	and    DWORD PTR [edx],0x5
  40eae4:	pop    eax
  40eae5:	repnz inc ebp
  40eae7:	pushf  
  40eae8:	xor    BYTE PTR [esi-0x4],dh
  40eaeb:	mov    edx,0x61140881
  40eaf0:	ss inc ecx
  40eaf2:	sub    ecx,esi
  40eaf4:	ds xchg esp,eax
  40eaf7:	pop    ds
  40eaf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaf9:	xchg   ebp,eax
  40eafa:	stos   DWORD PTR es:[edi],eax
  40eafb:	mov    fs,ebp
  40eafd:	mov    BYTE PTR [edx-0x51],bh
  40eb00:	icebp  
  40eb01:	pusha  
  40eb02:	xchg   BYTE PTR [ecx+0xe85eb7],ch
  40eb08:	inc    ebx
  40eb09:	(bad)  
  40eb0a:	retf   
  40eb0b:	outs   dx,DWORD PTR ds:[esi]
  40eb0c:	in     eax,0xd1
  40eb0e:	sub    ch,BYTE PTR [eax+0x3e4a33b3]
  40eb14:	pop    ecx
  40eb15:	ret    
  40eb16:	imul   edi,esi,0x37
  40eb19:	push   0xce31da55
  40eb1e:	lods   eax,DWORD PTR ds:[esi]
  40eb1f:	stos   BYTE PTR es:[edi],al
  40eb20:	rcr    DWORD PTR [ebx],1
  40eb22:	ss xchg edi,eax
  40eb24:	jno    0x40eb9b
  40eb26:	bound  esp,QWORD PTR [edx-0x52]
  40eb29:	xchg   edi,eax
  40eb2a:	jge    0x40eb10
  40eb2c:	imul   edi,edx,0x1525fb06
  40eb32:	test   al,dh
  40eb34:	push   edi
  40eb35:	imul   esp,edx,0x5dc037dd
  40eb3b:	mov    esi,0x64a91a1e
  40eb40:	mov    ds:0x6f7c88f8,eax
  40eb45:	js     0x40ebb7
  40eb47:	push   es
  40eb48:	outs   dx,BYTE PTR ds:[esi]
  40eb49:	iret   
  40eb4a:	int3   
  40eb4b:	push   esp
  40eb4c:	cmp    esi,DWORD PTR [eax+0x64961b84]
  40eb52:	jnp    0x40eb56
  40eb54:	(bad)  
  40eb55:	jno    0x40eb59
  40eb57:	mov    al,0x9f
  40eb59:	push   ss
  40eb5a:	jbe    0x40eb46
  40eb5c:	and    DWORD PTR ds:0x3cc2c269,0xc9f164e0
  40eb66:	in     eax,dx
  40eb67:	mov    dl,0xfe
  40eb69:	and    eax,0x3d33afbd
  40eb6e:	push   cs
  40eb6f:	mov    edi,0xf5db5ea5
  40eb74:	pop    ebx
  40eb75:	ss pop esp
  40eb77:	jecxz  0x40eb52
  40eb79:	mov    edx,DWORD PTR [esi-0xb]
  40eb7c:	sub    eax,0x16de982e
  40eb81:	mov    dl,ch
  40eb83:	jg     0x40eba4
  40eb85:	cmp    DWORD PTR [eax+eiz*2-0xd9969f],ecx
  40eb8c:	and    DWORD PTR [edx+eiz*1-0x5a],eax
  40eb90:	and    dl,BYTE PTR [ecx*8+0x79f78514]
  40eb97:	shr    DWORD PTR [esi+eiz*8-0x2c],0x6e
  40eb9c:	gs add eax,0x56a4a72d
  40eba2:	sub    ah,bh
  40eba4:	jecxz  0x40eba4
  40eba6:	mov    dh,0x4a
  40eba8:	jge    0x40eb2e
  40ebaa:	dec    edi
  40ebab:	lods   al,BYTE PTR ds:[esi]
  40ebac:	inc    ebx
  40ebad:	mov    bl,0x25
  40ebaf:	cmc    
  40ebb0:	imul   ebx,edi,0xffffffc2
  40ebb3:	ins    BYTE PTR es:[edi],dx
  40ebb4:	dec    esp
  40ebb5:	out    0xf9,eax
  40ebb7:	cdq    
  40ebb8:	(bad)  
  40ebb9:	sar    BYTE PTR [ebx+0x34],cl
  40ebbc:	jae    0x40ebbb
  40ebbe:	in     eax,dx
  40ebbf:	sbb    eax,0x4aadad5f
  40ebc4:	retf   0x6e89
  40ebc7:	xor    BYTE PTR [esi+edx*1],0x78
  40ebcb:	add    DWORD PTR [edi],esi
  40ebcd:	loopne 0x40eb55
  40ebcf:	or     al,0xee
  40ebd1:	in     eax,0x72
  40ebd3:	pushf  
  40ebd4:	inc    ebx
  40ebd5:	lea    ebp,[ecx+0x1d345ba6]
  40ebdb:	jno    0x40ec39
  40ebdd:	dec    ebp
  40ebde:	xchg   esi,eax
  40ebdf:	ds push cs
  40ebe1:	mov    bh,0x42
  40ebe3:	cs pop edi
  40ebe5:	aaa    
  40ebe6:	cmp    BYTE PTR [ecx],bl
  40ebe8:	data16 sub ch,BYTE PTR gs:[ebx+0x47356e6d]
  40ebf0:	pushf  
  40ebf1:	(bad)  
  40ebf2:	sub    esi,ecx
  40ebf4:	(bad)  
  40ebf5:	dec    esi
  40ebf6:	(bad)  
  40ebf7:	repz xor esp,ebx
  40ebfa:	dec    eax
  40ebfb:	test   ax,0x9367
  40ebff:	inc    edx
  40ec01:	fstp   st(5)
  40ec03:	pop    edi
  40ec04:	add    DWORD PTR [esp+eax*2-0x2b],ebp
  40ec08:	loopne 0x40ebbf
  40ec0a:	iret   
  40ec0b:	jb     0x40eba7
  40ec0d:	ret    0xa998
  40ec10:	dec    ebx
  40ec11:	enter  0xebb5,0x35
  40ec15:	adc    DWORD PTR [ebx],ebx
  40ec17:	fldcw  WORD PTR [ecx]
  40ec19:	enter  0xc810,0xb7
  40ec1d:	sbb    bl,BYTE PTR [edx]
  40ec1f:	xchg   edi,eax
  40ec20:	xor    al,0xa0
  40ec22:	jecxz  0x40ec55
  40ec24:	and    BYTE PTR [edx-0x15],cl
  40ec27:	sbb    eax,edi
  40ec29:	mov    WORD PTR [ebx+0x2b],es
  40ec2c:	mov    dl,0x32
  40ec2e:	sbb    ch,BYTE PTR [esi-0x461d536c]
  40ec34:	lahf   
  40ec35:	les    ecx,FWORD PTR [ebx-0x37]
  40ec38:	and    al,0x0
  40ec3a:	imul   edx,DWORD PTR ds:0xbdde2a89,0x42f44ea7
  40ec44:	inc    esp
  40ec45:	aam    0x70
  40ec47:	xlat   BYTE PTR ds:[ebx]
  40ec48:	sbb    al,0xee
  40ec4a:	sbb    edx,DWORD PTR [edi+0x6b]
  40ec4d:	shl    bh,cl
  40ec4f:	mov    bl,0x29
  40ec51:	repz push esi
  40ec53:	ss das 
  40ec55:	pop    ebx
  40ec56:	xor    BYTE PTR [edi+0x5acc6b25],al
  40ec5c:	push   ebp
  40ec5d:	ins    BYTE PTR es:[edi],dx
  40ec5e:	std    
  40ec5f:	int3   
  40ec60:	cmp    DWORD PTR [edx+0x75],edx
  40ec63:	call   0xf797:0xda58d71f
  40ec6a:	xor    DWORD PTR [edx-0x1],esp
  40ec6d:	adc    DWORD PTR [ebp+0x10],ebp
  40ec70:	fist   DWORD PTR [esi-0x76]
  40ec73:	test   DWORD PTR ds:0x2c89ffc3,eax
  40ec79:	test   BYTE PTR [edi-0x18],dl
  40ec7c:	jmp    0x50f252ac
  40ec81:	cli    
  40ec82:	outs   dx,BYTE PTR ds:[esi]
  40ec83:	jmp    0xe560:0x3fb282f5
  40ec8a:	xchg   ecx,eax
  40ec8b:	adc    DWORD PTR [edi+eiz*1],edi
  40ec8e:	pavgw  mm1,QWORD PTR [ebp+0x599349e0]
  40ec95:	inc    ecx
  40ec96:	xchg   DWORD PTR [ebx],esp
  40ec98:	inc    edx
  40ec99:	cmp    eax,0x162afd3e
  40ec9e:	cwde   
  40ec9f:	and    bh,dl
  40eca1:	mov    esp,fs
  40eca3:	arpl   cx,si
  40eca5:	rcr    DWORD PTR [esp+ecx*2-0x73],1
  40eca9:	stos   BYTE PTR es:[edi],al
  40ecaa:	lea    edi,[edi+0x530cc01c]
  40ecb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecb1:	mov    ds:0xe2436c04,al
  40ecb6:	test   eax,0x984a93db
  40ecbb:	ss xor eax,0xcdef08b0
  40ecc1:	mov    ah,0xe8
  40ecc3:	fisub  WORD PTR [ebx+eax*4]
  40ecc6:	sbb    al,0x79
  40ecc8:	ret    
  40ecc9:	sbb    BYTE PTR [esi-0x1d3d5b21],bh
  40eccf:	push   ebp
  40ecd0:	shr    dl,1
  40ecd2:	test   bl,ch
  40ecd4:	imul   ebx,eax,0x239fcb1a
  40ecda:	jg     0x40ed54
  40ecdc:	dec    edi
  40ecdd:	inc    eax
  40ecde:	push   cs
  40ecdf:	pop    ds
  40ece0:	cmp    DWORD PTR [edi+0x5850ef06],edx
  40ece6:	cwde   
  40ece7:	lock js 0x40ed15
  40ecea:	inc    edx
  40eceb:	jno    0x40ecfc
  40eced:	pop    ecx
  40ecee:	push   esp
  40ecef:	pop    ds
  40ecf0:	call   0x5f3e8e52
  40ecf5:	(bad)  
  40ecf7:	sub    al,0x34
  40ecf9:	cmp    eax,DWORD PTR [esi-0x6f]
  40ecfc:	aad    0xe
  40ecfe:	ins    DWORD PTR es:[edi],dx
  40ecff:	add    ecx,DWORD PTR ds:0x339ce2d
  40ed05:	push   cs
  40ed06:	inc    ecx
  40ed07:	and    eax,esp
  40ed09:	dec    eax
  40ed0a:	enter  0xa6b0,0x8c
  40ed0e:	pop    es
  40ed0f:	inc    edi
  40ed10:	int    0xf5
  40ed12:	test   eax,0xac71eb17
  40ed17:	inc    edx
  40ed18:	addr16 arpl bp,si
  40ed1b:	mov    eax,gs
  40ed1d:	lahf   
  40ed1e:	mov    ds:0x544c8d7a,eax
  40ed23:	outs   dx,BYTE PTR ds:[esi]
  40ed24:	call   0x64ff:0xc15fc381
  40ed2b:	pusha  
  40ed2c:	push   0xf
  40ed2e:	sub    eax,0xe1fefe76
  40ed33:	(bad)  
  40ed34:	cmp    edx,ebp
  40ed36:	dec    ecx
  40ed37:	push   0x6b
  40ed39:	and    edx,DWORD PTR ds:0xf175a736
  40ed3f:	jmp    0x7b0a:0x29f63ade
  40ed46:	aad    0x25
  40ed48:	mul    DWORD PTR [eax-0x2d]
  40ed4b:	retf   0xdcf
  40ed4e:	mov    bh,0x73
  40ed50:	(bad)  
  40ed51:	and    edi,DWORD PTR [eax+0x79]
  40ed54:	fdivr  DWORD PTR [edi]
  40ed56:	in     eax,0xa9
  40ed58:	mov    ebp,0x9d4ae37a
  40ed5d:	sub    ebx,DWORD PTR [ebp-0x6084962]
  40ed63:	pop    edx
  40ed64:	push   edx
  40ed65:	jp     0x40ed0c
  40ed67:	(bad)  
  40ed68:	pop    ds
  40ed69:	xchg   esi,eax
  40ed6a:	sbb    al,0xcf
  40ed6c:	xor    edx,ecx
  40ed6e:	stos   BYTE PTR es:[edi],al
  40ed6f:	lods   eax,DWORD PTR ds:[esi]
  40ed70:	jmp    0x40ed58
  40ed72:	jg     0x40ed28
  40ed74:	jmp    0xf549:0x9f15f847
  40ed7b:	sub    BYTE PTR [ecx-0x5e],cl
  40ed7e:	push   0x4a
  40ed80:	mov    ebx,0x416744f7
  40ed85:	dec    edx
  40ed86:	sbb    ch,ah
  40ed88:	ret    
  40ed89:	mov    edx,0x787ae61a
  40ed8e:	mov    edx,0x1bd3ab8a
  40ed93:	xchg   dh,dl
  40ed95:	inc    esp
  40ed96:	loope  0x40ed5e
  40ed98:	cmp    al,0x1b
  40ed9a:	xchg   edi,eax
  40ed9b:	sub    DWORD PTR es:[edx+0x5e],edx
  40ed9f:	mov    WORD PTR [edx],?
  40eda1:	pop    ss
  40eda2:	cmc    
  40eda3:	in     al,0xce
  40eda5:	mov    cs,esi
  40eda7:	fistp  QWORD PTR [esi]
  40eda9:	lods   eax,DWORD PTR ds:[esi]
  40edaa:	das    
  40edab:	xor    edx,DWORD PTR gs:[edx-0x367a9fb7]
  40edb2:	aaa    
  40edb3:	cdq    
  40edb4:	or     eax,0x9d372604
  40edb9:	jmp    0x912ea974
  40edbe:	loop   0x40edb4
  40edc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edc1:	ins    DWORD PTR es:[edi],dx
  40edc2:	pop    ecx
  40edc3:	jnp    0x40edd1
  40edc5:	pop    es
  40edc6:	sbb    BYTE PTR [ebx-0x1],bl
  40edc9:	pop    esp
  40edca:	hlt    
  40edcb:	mov    esi,0xc65b7cca
  40edd0:	sbb    DWORD PTR [esi],eax
  40edd2:	jge    0x40edc2
  40edd4:	cld    
  40edd5:	mov    bh,0xf
  40edd7:	popf   
  40edd8:	mov    ds:0xd6664014,al
  40eddd:	ds aam 0x31
  40ede0:	int    0x8a
  40ede2:	mov    eax,ds:0x32b45d0f
  40ede7:	arpl   ax,ax
  40ede9:	fidivr WORD PTR [ecx+0x17]
  40edec:	dec    edi
  40eded:	xchg   edi,eax
  40edee:	push   cs
  40edef:	cmp    edx,eax
  40edf1:	sbb    al,0xd4
  40edf4:	sub    al,0x95
  40edf6:	push   esi
  40edf7:	bound  edi,QWORD PTR [edx-0x1b]
  40edfa:	(bad)  
  40edfb:	mov    ecx,0xce497f4b
  40ee00:	or     ah,BYTE PTR [esi-0x55d1ee2b]
  40ee06:	push   cs
  40ee07:	fwait
  40ee08:	ins    BYTE PTR es:[edi],dx
  40ee09:	pusha  
  40ee0a:	sti    
  40ee0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee0c:	ins    BYTE PTR es:[edi],dx
  40ee0d:	pop    ss
  40ee0e:	mov    ebx,0x55b174a3
  40ee13:	inc    ecx
  40ee14:	stos   BYTE PTR es:[edi],al
  40ee15:	inc    edi
  40ee16:	leave  
  40ee17:	pushf  
  40ee18:	xchg   ecx,eax
  40ee19:	sub    edi,DWORD PTR [ecx+0x5d]
  40ee1c:	out    dx,eax
  40ee1d:	push   esi
  40ee1e:	dec    edx
  40ee1f:	and    al,0xa0
  40ee21:	mov    dh,0x7c
  40ee23:	or     eax,0xb974ddf4
  40ee28:	and    esp,ebp
  40ee2a:	mov    dl,0x17
  40ee2c:	sub    bl,BYTE PTR [ebx-0x50]
  40ee2f:	xchg   esp,eax
  40ee30:	add    DWORD PTR [edx+eiz*1],0x34
  40ee34:	ins    DWORD PTR es:[edi],dx
  40ee35:	sub    BYTE PTR [eax],ch
  40ee37:	imul   edx,DWORD PTR [ebp-0x55],0xe2b93d91
  40ee3e:	stos   DWORD PTR es:[edi],eax
  40ee3f:	jmp    0x1cf5c7de
  40ee44:	xor    ah,BYTE PTR [edx+0x13]
  40ee47:	jo     0x40ee9d
  40ee49:	arpl   WORD PTR [eax],si
  40ee4b:	ror    BYTE PTR [eax+0x13],0x5
  40ee4f:	push   edx
  40ee50:	push   ebx
  40ee51:	sub    edi,ecx
  40ee53:	dec    esi
  40ee54:	xor    edx,esi
  40ee56:	sbb    ecx,DWORD PTR [edi-0x5dd4ac2c]
  40ee5c:	cmp    ecx,0xffffffa3
  40ee5f:	jg     0x40ee23
  40ee61:	fucomi st,st(7)
  40ee63:	jmp    0x40ee0e
  40ee65:	loopne 0x40ee10
  40ee67:	std    
  40ee68:	stos   DWORD PTR es:[edi],eax
  40ee69:	imul   ebx,DWORD PTR [ebx+0x60],0x5d
  40ee6d:	mov    eax,0xc1c0d780
  40ee72:	mov    bl,0x15
  40ee74:	xor    al,cl
  40ee76:	pop    edi
  40ee77:	push   esp
  40ee78:	fnstenv [eax+0xa]
  40ee7b:	fmul   DWORD PTR [edi-0x21]
  40ee7e:	mov    ds:0xc5024da8,al
  40ee83:	jmp    DWORD PTR [ecx+0x7872f462]
  40ee89:	jg     0x40ee5a
  40ee8b:	inc    edi
  40ee8c:	and    ch,BYTE PTR [edi-0x202f2fc8]
  40ee92:	imul   ebx,DWORD PTR [ecx-0x1e],0x60e97feb
  40ee99:	rcr    DWORD PTR [ebx],1
  40ee9b:	not    DWORD PTR [ecx+0x1a]
  40ee9e:	shl    ebx,cl
  40eea0:	push   ecx
  40eea1:	jb     0x40eef7
  40eea3:	sar    ebp,cl
  40eea5:	call   0x16f4:0x16489857
  40eeac:	pop    ss
  40eead:	jle    0x40ef14
  40eeaf:	mov    ecx,0xd1059352
  40eeb4:	sub    eax,0xdeee2bc1
  40eeb9:	arpl   WORD PTR [esi],dx
  40eebb:	loopne 0x40eefe
  40eebd:	out    dx,al
  40eebe:	stos   DWORD PTR es:[edi],eax
  40eebf:	dec    esi
  40eec0:	leave  
  40eec1:	ret    
  40eec2:	jmp    0xa5826415
  40eec7:	mov    esi,DWORD PTR [eax-0xf]
  40eeca:	popf   
  40eecb:	pop    ebp
  40eecc:	xor    al,0xc5
  40eece:	cs jns 0x40eef2
  40eed1:	cs dec ecx
  40eed3:	pop    ds
  40eed4:	add    BYTE PTR [edx*1+0x55b1fc],dh
  40eedb:	rcl    BYTE PTR [ebx-0x1e4b94db],cl
  40eee1:	pop    eax
  40eee2:	sbb    BYTE PTR [ebp-0x34],ch
  40eee5:	mov    esp,0x58427ff0
  40eeea:	nop
  40eeeb:	cwde   
  40eeec:	pop    esi
  40eeed:	sbb    edi,DWORD PTR [ebx]
  40eeef:	jo     0x40ef33
  40eef1:	and    esi,DWORD PTR [esi+0x2b]
  40eef4:	ret    0x9ad1
  40eef7:	out    dx,al
  40eef8:	inc    ebx
  40eef9:	adc    BYTE PTR cs:[ebx],dh
  40eefc:	cli    
  40eefd:	test   eax,0x8a2c3d60
  40ef02:	ror    dl,cl
  40ef04:	dec    esi
  40ef05:	sar    ebx,cl
  40ef07:	xor    al,0xc5
  40ef09:	cwde   
  40ef0a:	(bad)
  40ef0e:	cmp    DWORD PTR [ecx],0x125b9ad2
  40ef14:	fwait
  40ef15:	xor    ch,BYTE PTR [edi+0x2]
  40ef18:	pop    DWORD PTR [edx*2+0x51c80014]
  40ef1f:	mov    al,ds:0x623ca03b
  40ef24:	jmp    0xb1b3:0x85b3a42
  40ef2b:	ins    DWORD PTR es:[edi],dx
  40ef2c:	ja     0x40ef19
  40ef2e:	out    0x7e,al
  40ef30:	(bad)  
  40ef31:	fdiv   DWORD PTR [edi-0x164702d5]
  40ef37:	scas   eax,DWORD PTR es:[edi]
  40ef38:	xor    ah,dh
  40ef3a:	dec    edx
  40ef3b:	pop    esp
  40ef3c:	int3   
  40ef3d:	jne    0x40ef23
  40ef3f:	test   DWORD PTR [esi],esp
  40ef41:	icebp  
  40ef42:	mov    WORD PTR [eax+0x27583101],gs
  40ef48:	push   0xffffff90
  40ef4a:	cmc    
  40ef4b:	xchg   BYTE PTR [ecx],cl
  40ef4d:	fcomp  QWORD PTR [esi+eiz*2-0x7daac81c]
  40ef54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef55:	pop    edx
  40ef56:	mov    ebx,0xa8702f78
  40ef5b:	enter  0x7505,0x5e
  40ef5f:	shl    WORD PTR [ebx],1
  40ef62:	je     0x40efa1
  40ef64:	cmp    ecx,edi
  40ef66:	clc    
  40ef67:	pop    esi
  40ef68:	or     DWORD PTR [esi+0xd03616b],edx
  40ef6e:	fs push cs
  40ef70:	jbe    0x40ef57
  40ef72:	icebp  
  40ef73:	sub    ebp,edi
  40ef75:	push   edi
  40ef76:	ret    
  40ef77:	(bad)  
  40ef78:	data16 loopne 0x40ef57
  40ef7b:	out    dx,al
  40ef7c:	or     BYTE PTR [ebp-0x4858c18],al
  40ef82:	in     eax,0x7d
  40ef84:	mul    BYTE PTR [edx-0xcf92966]
  40ef8a:	jmp    0x40efaa
  40ef8c:	pop    ds
  40ef8d:	je     0x40ef3d
  40ef8f:	inc    ebp
  40ef90:	jle    0x40ef7a
  40ef92:	les    edx,FWORD PTR [ebx+0x4788a17c]
  40ef98:	bound  esi,QWORD PTR [ebp+ecx*2-0x37d720bd]
  40ef9f:	in     eax,dx
  40efa0:	hlt    
  40efa1:	popf   
  40efa2:	inc    eax
  40efa3:	sub    ebp,DWORD PTR [ebx]
  40efa5:	sbb    dh,BYTE PTR [ebx+0x35513dee]
  40efab:	(bad)  
  40efac:	outs   dx,BYTE PTR ds:[esi]
  40efad:	push   ss
  40efae:	sub    eax,0xc6b5846d
  40efb3:	aam    0xf2
  40efb5:	clc    
  40efb6:	out    0x16,al
  40efb8:	call   0xa19619ef
  40efbd:	mov    ebp,0xd0c632ac
  40efc2:	inc    edx
  40efc3:	sahf   
  40efc4:	(bad)  
  40efc5:	out    dx,al
  40efc6:	std    
  40efc7:	xchg   ebp,eax
  40efc8:	pop    edx
  40efc9:	not    al
  40efcb:	mov    ch,0x9c
  40efcd:	adc    al,0x18
  40efcf:	push   ecx
  40efd0:	jne    0x40ef9c
  40efd2:	(bad)  [ebx]
  40efd4:	push   edi
  40efd5:	or     al,0x78
  40efd7:	sti    
  40efd8:	and    BYTE PTR [ebx],0xfd
  40efdb:	or     BYTE PTR [esp+ecx*8],ah
  40efde:	out    dx,eax
  40efdf:	mov    cl,0x20
  40efe1:	xor    BYTE PTR [ebp+0x40],bl
  40efe4:	dec    edx
  40efe5:	xor    eax,0x7e9f9a07
  40efea:	xor    DWORD PTR [eax],0xffffff83
  40efed:	jl     0x40efc8
  40efef:	inc    eax
  40eff0:	pop    esi
  40eff1:	pop    ebx
  40eff2:	mov    edi,0x190a1f57
  40eff7:	xchg   esp,eax
  40eff8:	fcomp  DWORD PTR [edi]
  40effa:	pusha  
  40effb:	jg     0x40f019
  40effd:	shl    DWORD PTR [edx+0x4c],1
  40f000:	nop
  40f001:	mov    bl,0x8f
  40f003:	not    DWORD PTR [esi+0x240e43e1]
  40f009:	push   ecx
  40f00a:	fidivr WORD PTR [esi+eiz*2-0x2]
  40f00e:	xchg   esi,eax
  40f00f:	(bad)  [eax+0x7d]
  40f012:	popf   
  40f013:	cmp    edx,DWORD PTR [ecx+0x5b]
  40f016:	inc    esp
  40f017:	jmp    0x40efb0
  40f019:	or     bl,BYTE PTR [eax-0x9d6beb9]
  40f01f:	daa    
  40f020:	mov    ch,0xa1
  40f022:	hlt    
  40f023:	pop    edi
  40f024:	in     al,dx
  40f025:	fisttp DWORD PTR [edx+0x4b8300be]
  40f02b:	dec    ecx
  40f02c:	dec    esp
  40f02d:	mov    BYTE PTR [eax+ebx*8],ah
  40f030:	(bad)  
  40f031:	adc    ecx,edx
  40f033:	fwait
  40f034:	pop    edi
  40f035:	jmp    0x40f059
  40f037:	cmp    al,0x7d
  40f039:	cmp    cl,0x88
  40f03c:	in     al,0xfd
  40f03e:	pop    ebp
  40f03f:	je     0x40efde
  40f041:	jg     0x40efce
  40f043:	iret   
  40f044:	mov    ds:0x61da8c94,al
  40f049:	ds pusha 
  40f04b:	stos   DWORD PTR es:[edi],eax
  40f04c:	test   bh,ah
  40f04e:	ret    
  40f04f:	mov    bh,0x4b
  40f051:	or     ebp,DWORD PTR [edx-0xb91c63]
  40f057:	cmp    eax,0xd247fd0c
  40f05c:	fsub   QWORD PTR [ebx+0x1ae71626]
  40f062:	add    al,0xbc
  40f064:	rcr    DWORD PTR [eax-0x20131257],0xdc
  40f06b:	jle    0x40f074
  40f06d:	outs   dx,BYTE PTR ds:[esi]
  40f06e:	ret    
  40f06f:	pushfw 
  40f071:	add    cl,BYTE PTR ds:0xdc580b91
  40f077:	test   edi,eax
  40f079:	imul   esi,DWORD PTR [esi-0x4a],0xffffffe1
  40f07d:	(bad)  
  40f07e:	pop    es
  40f07f:	jecxz  0x40f0fc
  40f081:	sbb    BYTE PTR [ebp-0x36],ch
  40f084:	ss mov BYTE PTR ss:[esi],cl
  40f088:	mov    dl,0xdf
  40f08a:	add    eax,0x58845adf
  40f08f:	xor    ebp,ebx
  40f091:	xor    eax,DWORD PTR [ebx-0x42]
  40f094:	inc    BYTE PTR [ecx]
  40f096:	neg    bl
  40f098:	mov    bh,0x12
  40f09a:	mov    ah,BYTE PTR [ebp+0x1d]
  40f09d:	sbb    esp,DWORD PTR [ebp-0x10a84c3e]
  40f0a3:	loope  0x40f029
  40f0a5:	push   0x4489527c
  40f0aa:	pop    eax
  40f0ab:	dec    edi
  40f0ac:	loope  0x40f0c3
  40f0ae:	retf   0x7fc4
  40f0b1:	cmp    al,0x1d
  40f0b3:	push   cs
  40f0b4:	popf   
  40f0b5:	push   ebx
  40f0b6:	jmp    0x27b48e65
  40f0bb:	xchg   ecx,eax
  40f0bc:	out    dx,eax
  40f0bd:	push   ebp
  40f0be:	pop    esi
  40f0bf:	and    al,0xb0
  40f0c1:	push   cs
  40f0c2:	sbb    DWORD PTR [ebx-0x50],eax
  40f0c5:	jo     0x40f115
  40f0c7:	ins    BYTE PTR es:[edi],dx
  40f0c8:	mov    bl,0xa2
  40f0ca:	adc    eax,0x37719d1e
  40f0cf:	dec    esi
  40f0d0:	mov    bl,0x18
  40f0d2:	add    esi,edx
  40f0d4:	popf   
  40f0d5:	les    esp,FWORD PTR [ebx+ebp*2-0x2f]
  40f0d9:	outs   dx,DWORD PTR ds:[esi]
  40f0da:	inc    dh
  40f0dc:	xor    BYTE PTR [ecx+0x7c9dddaa],dl
  40f0e2:	jne    0x40f0f4
  40f0e4:	bound  ebx,QWORD PTR [ecx+edx*1]
  40f0e7:	dec    edi
  40f0e8:	push   eax
  40f0e9:	pop    ecx
  40f0ea:	push   eax
  40f0eb:	xchg   esi,eax
  40f0ec:	add    BYTE PTR [ebx-0x12],ah
  40f0ef:	cwde   
  40f0f0:	sub    al,0x5c
  40f0f2:	xor    dl,dl
  40f0f4:	jne    0x40f08b
  40f0f6:	cmp    cl,BYTE PTR [edi+0x19]
  40f0f9:	pop    ss
  40f0fa:	pop    es
  40f0fb:	jno    0x40f0d7
  40f0fd:	pop    ss
  40f0fe:	sub    al,0x89
  40f101:	cmp    BYTE PTR [edx-0x63eb255],al
  40f107:	dec    BYTE PTR [esi+0x15]
  40f10a:	cmp    eax,0x551f925c
  40f10f:	mov    eax,0x117a9826
  40f114:	arpl   WORD PTR [ebp+0x459e36aa],di
  40f11a:	pop    ecx
  40f11b:	and    DWORD PTR [eax+0x361e920f],edi
  40f121:	das    
  40f122:	scas   al,BYTE PTR es:[edi]
  40f123:	adc    al,0xfa
  40f125:	mov    BYTE PTR [eax+ecx*8],bl
  40f128:	adc    dh,BYTE PTR [edi]
  40f12a:	adc    eax,0xd6f11da1
  40f12f:	and    cl,BYTE PTR [ecx-0x26337c5]
  40f135:	mov    esi,0x31ae110e
  40f13a:	pop    edx
  40f13b:	ret    0x1e93
  40f13e:	cdq    
  40f13f:	cmp    BYTE PTR [edx+0x60315020],ah
  40f145:	jecxz  0x40f182
  40f147:	fsub   QWORD PTR [ebp+0x5a]
  40f14a:	xchg   ebx,eax
  40f14b:	std    
  40f14c:	repz out dx,eax
  40f14e:	pop    ebx
  40f14f:	enter  0x9d67,0x55
  40f153:	adc    eax,0x111e95ee
  40f158:	jp     0x40f1c7
  40f15a:	xchg   ebx,ebp
  40f15c:	lods   al,BYTE PTR ss:[esi]
  40f15e:	pushf  
  40f15f:	jb     0x40f142
  40f161:	out    dx,al
  40f162:	cmp    DWORD PTR [ebx+0x55],ecx
  40f165:	ss cdq 
  40f167:	popf   
  40f168:	retf   0xed1a
  40f16b:	int3   
  40f16c:	loop   0x40f0f8
  40f16e:	ret    0x3d02
  40f171:	retf   
  40f172:	xlat   BYTE PTR ds:[ebx]
  40f173:	adc    ebx,esi
  40f175:	addr16 in al,0xee
  40f178:	ins    DWORD PTR es:[edi],dx
  40f179:	push   0xffffffbc
  40f17b:	mov    eax,0x7aa3861d
  40f180:	dec    eax
  40f181:	pop    ss
  40f182:	sub    ah,BYTE PTR [eax-0xb]
  40f185:	xchg   edx,eax
  40f186:	pop    es
  40f187:	arpl   WORD PTR [edx-0x60],cx
  40f18a:	mov    esi,0x58e6d1e0
  40f18f:	add    bh,al
  40f191:	xor    eax,0x727520c0
  40f196:	and    bl,BYTE PTR [eax+0xa2bcff5]
  40f19c:	sub    ah,BYTE PTR [esi]
  40f19e:	mov    ebp,0xa124459b
  40f1a3:	neg    DWORD PTR [ebx+0x27]
  40f1a6:	imul   eax,DWORD PTR [eax-0x63944c7a],0x3b4b3acf
  40f1b0:	ins    BYTE PTR es:[edi],dx
  40f1b1:	cwde   
  40f1b2:	in     al,dx
  40f1b3:	ret    0x6693
  40f1b6:	aas    
  40f1b7:	icebp  
  40f1b8:	fsubp  st(2),st
  40f1ba:	dec    esp
  40f1bb:	arpl   WORD PTR [ebx-0x1e],bp
  40f1be:	in     eax,0x41
  40f1c0:	push   0x77
  40f1c2:	(bad)  
  40f1c3:	jmp    0xa44a:0xb8d9a8dd
  40f1ca:	shl    DWORD PTR [ebp+0x348a7001],1
  40f1d0:	and    DWORD PTR [edi-0xe],ecx
  40f1d3:	in     eax,dx
  40f1d4:	mov    ch,0x20
  40f1d6:	xor    BYTE PTR [ebx],0x64
  40f1d9:	cli    
  40f1da:	or     dl,BYTE PTR [esi+0x78d8d2d3]
  40f1e0:	cwde   
  40f1e1:	rol    BYTE PTR [esi],cl
  40f1e3:	and    DWORD PTR [ebp+0x1c],esi
  40f1e6:	ss mov eax,0x24983f69
  40f1ec:	xor    ah,ch
  40f1ee:	ins    BYTE PTR es:[edi],dx
  40f1ef:	xor    bh,0x91
  40f1f2:	jo     0x40f1fe
  40f1f4:	mov    cl,BYTE PTR [eax+0x77a1b245]
  40f1fa:	outs   dx,DWORD PTR ds:[esi]
  40f1fb:	or     bh,bh
  40f1fd:	mov    cl,0x91
  40f1ff:	push   ecx
  40f200:	stc    
  40f201:	into   
  40f202:	pop    ebp
  40f203:	xor    BYTE PTR [esi],al
  40f205:	jle    0x40f282
  40f207:	push   ss
  40f208:	mov    BYTE PTR [edi+ebp*2-0x31],al
  40f20c:	xor    bh,BYTE PTR [eax]
  40f20e:	jmp    0x40f21d
  40f210:	shl    DWORD PTR [esi+0x5b],1
  40f213:	cmc    
  40f214:	fistp  WORD PTR [ebx]
  40f216:	fdivr  st,st(5)
  40f218:	sbb    al,0x67
  40f21a:	xor    al,0xc8
  40f21c:	and    ebx,edi
  40f21e:	int    0x49
  40f220:	or     al,0x19
  40f222:	fwait
  40f223:	mov    ecx,0xa7b24395
  40f228:	scas   eax,DWORD PTR es:[edi]
  40f229:	push   esp
  40f22a:	out    0xc,al
  40f22c:	mov    esi,0xe1b5b9f7
  40f231:	cwd    
  40f233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f234:	dec    esi
  40f235:	pop    es
  40f236:	pop    es
  40f237:	cmp    al,BYTE PTR [ebp-0x70e98bd8]
  40f23d:	fdivr  st(7),st
  40f23f:	or     dh,BYTE PTR [esi]
  40f241:	cdq    
  40f242:	stos   DWORD PTR es:[edi],eax
  40f243:	pop    ebp
  40f244:	sbb    ah,al
  40f246:	lea    ebp,[esi-0xc3f9cce]
  40f24c:	imul   DWORD PTR [ebx]
  40f24e:	in     eax,0xdf
  40f250:	addr16 xor eax,0x137e6512
  40f256:	pop    ebp
  40f257:	out    dx,eax
  40f258:	call   0xaae6:0xed392e97
  40f25f:	sub    ch,0x20
  40f262:	push   edi
  40f263:	cld    
  40f264:	xor    al,0x88
  40f266:	test   BYTE PTR [ebx+0x3c98a75a],bh
  40f26c:	mov    ebp,DWORD PTR [edx]
  40f26e:	xchg   DWORD PTR [ecx-0x24],eax
  40f271:	adc    DWORD PTR [eax-0x3c],ecx
  40f274:	loop   0x40f25b
  40f276:	addr16 push 0x2eab5867
  40f27c:	sbb    cl,BYTE PTR [esi]
  40f27e:	dec    ebp
  40f27f:	shl    ebp,1
  40f281:	mov    dl,BYTE PTR [eax-0xa]
  40f284:	mov    ecx,0x8b5128d4
  40f289:	fucomip st,st(2)
  40f28b:	add    cl,BYTE PTR [ebp+esi*2+0x7c]
  40f28f:	ffreep st(5)
  40f291:	inc    esi
  40f292:	push   cs
  40f293:	imul   edi,ecx,0xbc814d44
  40f299:	int3   
  40f29a:	cmp    BYTE PTR [eax-0x75],cl
  40f29d:	stos   BYTE PTR es:[edi],al
  40f29e:	mov    eax,DWORD PTR [edx+0x7]
  40f2a1:	lods   al,BYTE PTR ds:[esi]
  40f2a2:	adc    DWORD PTR [ebx+0x5665a9aa],ebp
  40f2a8:	shl    DWORD PTR [esi-0x2708c15b],1
  40f2ae:	pop    ds
  40f2af:	fisub  WORD PTR [ebp-0x2b]
  40f2b2:	stos   DWORD PTR es:[edi],eax
  40f2b3:	movd   DWORD PTR [edx],mm2
  40f2b6:	retf   0x41f3
  40f2b9:	xchg   edi,eax
  40f2ba:	(bad)  
  40f2bb:	das    
  40f2bc:	jae    0x40f2f3
  40f2be:	pop    ebp
  40f2bf:	dec    eax
  40f2c0:	ins    DWORD PTR es:[edi],dx
  40f2c1:	(bad)  
  40f2c2:	in     eax,0x9e
  40f2c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2c5:	das    
  40f2c6:	jnp    0x40f2a1
  40f2c8:	mov    cl,0x54
  40f2ca:	xlat   BYTE PTR ds:[ebx]
  40f2cb:	bound  esp,QWORD PTR [edi]
  40f2cd:	sbb    DWORD PTR ds:0x6a95363d,ebp
  40f2d3:	idiv   ah
  40f2d5:	adc    DWORD PTR [eax+0x56],ebx
  40f2d8:	dec    esp
  40f2d9:	or     bh,BYTE PTR [edi-0x118aefa3]
  40f2df:	sti    
  40f2e0:	adc    edx,DWORD PTR [edx+ebp*1-0x49f4db7a]
  40f2e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2e8:	data16 sub BYTE PTR [ebx-0x31],dh
  40f2ec:	push   edi
  40f2ed:	ret    0x6008
  40f2f0:	or     al,0xbe
  40f2f2:	xor    dh,BYTE PTR [ecx+eiz*1]
  40f2f5:	popf   
  40f2f6:	lods   al,BYTE PTR ds:[esi]
  40f2f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2f8:	jmp    0x40f36c
  40f2fa:	adc    BYTE PTR [esi+0x5b934a93],al
  40f300:	mov    fs,WORD PTR [edx-0x19]
  40f303:	ds call 0xf66a:0x35092e1b
  40f30b:	clc    
  40f30c:	push   ecx
  40f30d:	sub    esp,DWORD PTR [esi]
  40f30f:	pop    edi
  40f310:	xor    ch,BYTE PTR [ebx]
  40f312:	jbe    0x40f372
  40f314:	test   al,bh
  40f316:	rcr    BYTE PTR [ecx+0x4a],1
  40f319:	bound  ecx,QWORD PTR [ebx]
  40f31b:	div    ah
  40f31d:	lods   eax,DWORD PTR ds:[esi]
  40f31e:	sub    ecx,DWORD PTR [esi-0x410a6446]
  40f324:	sbb    dh,BYTE PTR [ebx]
  40f326:	sbb    eax,0x9f7ac691
  40f32b:	and    edi,DWORD PTR [edi]
  40f32d:	push   0x6
  40f32f:	mov    al,ds:0x9b128bb6
  40f334:	(bad)  
  40f335:	adc    al,0x2f
  40f337:	mov    ebx,0x8c1394e5
  40f33c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f33d:	call   0x6784:0x8298ab7f
  40f344:	jg     0x40f371
  40f346:	and    esi,ebx
  40f348:	mov    ch,0x30
  40f34a:	mov    ch,0x66
  40f34c:	sbb    DWORD PTR [edi-0x2084120c],0xffffff88
  40f353:	in     eax,0xb4
  40f355:	in     al,0x4a
  40f357:	sub    esp,ebp
  40f359:	imul   ecx,DWORD PTR [esi+ecx*4-0x57],0x5
  40f35e:	adc    esi,eax
  40f360:	(bad)  
  40f361:	pop    ebx
  40f362:	add    ebp,DWORD PTR [ebx+esi*2]
  40f365:	inc    ebx
  40f366:	in     eax,0x15
  40f368:	add    eax,0xcf31db40
  40f36d:	(bad)  
  40f36e:	sbb    cl,BYTE PTR [ebp+0x3ed3b168]
  40f374:	(bad)  
  40f375:	(bad)  
  40f376:	xor    al,0x8f
  40f378:	loopne 0x40f340
  40f37a:	xor    BYTE PTR [ecx+0x3c304620],ah
  40f380:	mov    ebx,DWORD PTR [edx]
  40f382:	xor    edi,ebx
  40f384:	mov    DWORD PTR [edx],edi
  40f386:	mov    edx,DWORD PTR [ebp+0x8]
  40f389:	xor    edx,eax
  40f38b:	inc    ecx
  40f38c:	inc    DWORD PTR [ebp-0x18]
  40f38f:	add    edx,esi
  40f391:	cmp    ecx,edx
  40f393:	jb     0x40cfd4
  40f399:	jmp    0x40f3e3
  40f39e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3a1:	mov    DWORD PTR [ebp+0x8],ecx
  40f3a4:	jmp    0x40f3d6
  40f3a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ac:	mov    edx,DWORD PTR [ebp-0x8]
  40f3af:	xor    ecx,eax
  40f3b1:	xor    edx,eax
  40f3b3:	sub    ecx,edx
  40f3b5:	sub    ecx,esi
  40f3b7:	xor    ecx,eax
  40f3b9:	mov    DWORD PTR [ebp+0x8],ecx
  40f3bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3bf:	mov    edx,DWORD PTR [ebp+0x8]
  40f3c2:	imul   edx,edx,0x5708f1
  40f3c8:	xor    ecx,eax
  40f3ca:	add    ecx,esi
  40f3cc:	lea    ecx,[ebp+ecx*4-0x64]
  40f3d0:	mov    edi,DWORD PTR [ecx]
  40f3d2:	add    edx,edi
  40f3d4:	mov    DWORD PTR [ecx],edx
  40f3d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3d9:	xor    ecx,eax
  40f3db:	add    ecx,esi
  40f3dd:	jne    0x40f3a9
  40f3e3:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3e6:	mov    DWORD PTR [ebp+0x8],ecx
  40f3e9:	jmp    0x40f41b
  40f3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3f1:	mov    edx,DWORD PTR [ebp-0x8]
  40f3f4:	xor    ecx,eax
  40f3f6:	xor    edx,eax
  40f3f8:	sub    ecx,edx
  40f3fa:	sub    ecx,esi
  40f3fc:	xor    ecx,eax
  40f3fe:	mov    DWORD PTR [ebp+0x8],ecx
  40f401:	mov    ecx,DWORD PTR [ebp+0x8]
  40f404:	mov    edx,DWORD PTR [ebp+0x8]
  40f407:	imul   edx,edx,0x5708f1
  40f40d:	xor    ecx,eax
  40f40f:	add    ecx,esi
  40f411:	lea    ecx,[ebp+ecx*4-0x64]
  40f415:	mov    edi,DWORD PTR [ecx]
  40f417:	add    edx,edi
  40f419:	mov    DWORD PTR [ecx],edx
  40f41b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f41e:	xor    ecx,eax
  40f420:	add    ecx,esi
  40f422:	jne    0x40f3ee
  40f428:	mov    ecx,DWORD PTR [ebp-0x8]
  40f42b:	mov    edx,DWORD PTR [ebp-0x20]
  40f42e:	xor    ecx,eax
  40f430:	lea    ecx,[ecx+edx*1+0x3272dc]
  40f437:	mov    DWORD PTR [ebp-0x20],ecx
  40f43a:	inc    DWORD PTR [ebp+0xc]
  40f43d:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f440:	xor    ecx,eax
  40f442:	add    ecx,esi
  40f444:	jne    0x40ced6
  40f44a:	jmp    0x413be3
  40f44f:	mov    ecx,DWORD PTR [ebp-0xc]
  40f452:	mov    DWORD PTR [ebp+0x8],ecx
  40f455:	jmp    0x41180f
  40f45a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f45d:	mov    edx,DWORD PTR [ebp-0x8]
  40f460:	xor    ecx,eax
  40f462:	xor    edx,eax
  40f464:	sub    ecx,edx
  40f466:	jmp    0x4117ee
  40f46b:	mov    al,ds:0x7334f23d
  40f470:	cmp    ebp,DWORD PTR [edx+0x3e2d7a79]
  40f476:	mov    ds:0x5eb6c84b,al
  40f47b:	pop    ebp
  40f47c:	int    0x7c
  40f47e:	jl     0x40f487
  40f480:	pop    edi
  40f481:	jl     0x40f4ff
  40f483:	popf   
  40f484:	or     ah,BYTE PTR [edi+0x524379b1]
  40f48a:	lds    eax,FWORD PTR fs:[esi+ebp*1+0x36960d7c]
  40f492:	sahf   
  40f493:	sub    BYTE PTR [ebx-0x7c],ah
  40f496:	mov    ebx,DWORD PTR [esi]
  40f498:	cmp    dh,BYTE PTR [edx+eax*8-0x730f1b26]
  40f49f:	shl    DWORD PTR [esi],1
  40f4a1:	xchg   ebx,esi
  40f4a3:	aad    0xa4
  40f4a5:	(bad)  
  40f4a6:	fsub   QWORD PTR [esi+0x4e51c90d]
  40f4ac:	xchg   esp,eax
  40f4ad:	mov    edx,0xfb4479d0
  40f4b2:	shl    BYTE PTR [ebx],0x84
  40f4b5:	mov    cl,0xf
  40f4b7:	std    
  40f4b8:	mov    fs,eax
  40f4ba:	and    al,0xdc
  40f4bc:	loop   0x40f495
  40f4be:	loop   0x40f459
  40f4c0:	jecxz  0x40f53c
  40f4c2:	and    ebx,DWORD PTR [edx]
  40f4c4:	add    DWORD PTR [ebx+eiz*2-0x40],esp
  40f4c8:	xor    al,0x55
  40f4ca:	add    edi,edx
  40f4cc:	lods   al,BYTE PTR ds:[esi]
  40f4cd:	scas   al,BYTE PTR es:[edi]
  40f4ce:	int    0x74
  40f4d0:	jge    0x40f46c
  40f4d2:	mov    ebp,DWORD PTR [esi]
  40f4d4:	fs xchg ebx,eax
  40f4d6:	hlt    
  40f4d7:	sub    DWORD PTR [ebx+edi*8-0x5f],eax
  40f4db:	jg     0x40f494
  40f4dd:	jns    0x40f479
  40f4df:	sahf   
  40f4e0:	and    ch,BYTE PTR [eax+edi*8-0x34156ff2]
  40f4e7:	pop    es
  40f4e8:	sub    eax,DWORD PTR [eax+edx*4+0x12]
  40f4ec:	xchg   esp,eax
  40f4ed:	mov    edi,0xd3b5e846
  40f4f2:	sbb    DWORD PTR [esi+0x5a],0xfdd44f87
  40f4f9:	inc    edx
  40f4fa:	push   ds
  40f4fb:	das    
  40f4fc:	mov    DWORD PTR [esi-0x3dd8d2bf],eax
  40f502:	cmp    al,0xec
  40f504:	out    0x72,eax
  40f506:	pop    edi
  40f507:	mov    bh,cl
  40f509:	xchg   ebp,edx
  40f50b:	pop    es
  40f50c:	mov    eax,0x455f1d63
  40f511:	push   cs
  40f512:	js     0x40f556
  40f514:	mov    ecx,0xc628605f
  40f519:	imul   ecx,ecx,0xffffffd3
  40f51c:	pushf  
  40f51d:	sbb    eax,0xb84974a8
  40f522:	neg    DWORD PTR [esi+0x49]
  40f525:	loopne 0x40f548
  40f527:	add    BYTE PTR [ebx-0x2b],dh
  40f52a:	cmp    eax,DWORD PTR [ecx]
  40f52c:	pop    edi
  40f52d:	scas   al,BYTE PTR es:[edi]
  40f52e:	adc    al,BYTE PTR [ebx-0x382a1b0d]
  40f534:	out    0xac,al
  40f536:	pop    ebx
  40f537:	out    dx,eax
  40f538:	lea    esp,[ebx]
  40f53a:	push   ebx
  40f53b:	push   ecx
  40f53c:	in     al,0xe0
  40f53e:	mov    DWORD PTR [ebx+0x7d5401f9],ebp
  40f544:	stos   BYTE PTR es:[edi],al
  40f545:	or     al,0x68
  40f547:	pop    esi
  40f548:	xor    BYTE PTR [eax+0xd],ch
  40f54b:	xlat   BYTE PTR ds:[ebx]
  40f54c:	in     eax,0xd8
  40f54e:	dec    esp
  40f54f:	rcl    BYTE PTR [eax+0x2109de58],cl
  40f555:	mov    bl,0x70
  40f557:	mov    edi,0xd7c7c885
  40f55c:	mov    es,ebx
  40f55e:	xchg   edi,eax
  40f55f:	push   esi
  40f560:	out    dx,al
  40f561:	inc    ebp
  40f562:	push   0xffffff9c
  40f564:	jecxz  0x40f5dc
  40f566:	inc    eax
  40f567:	out    dx,eax
  40f568:	scas   eax,DWORD PTR es:[edi]
  40f569:	leave  
  40f56a:	nop
  40f56b:	adc    DWORD PTR [edx+0x79],edi
  40f56e:	jg     0x40f550
  40f570:	mov    al,0xd1
  40f572:	cwde   
  40f573:	inc    esp
  40f574:	jno    0x40f58f
  40f576:	mov    gs,WORD PTR [edx]
  40f578:	out    0x31,al
  40f57a:	cmp    eax,ebx
  40f57c:	out    0x2f,al
  40f57e:	dec    edi
  40f57f:	cwde   
  40f580:	xor    dl,BYTE PTR [ecx+0x30d42738]
  40f586:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40f588:	adc    al,0x3c
  40f58a:	or     al,0xbe
  40f58c:	mov    edx,0x34476fcf
  40f591:	mov    ebp,0x54d715c7
  40f596:	call   0x3ba8:0x9eb9ce51
  40f59d:	adc    al,0x8b
  40f59f:	mov    esi,0x52bef263
  40f5a4:	popa   
  40f5a5:	jmp    0x4bdc:0x6170235d
  40f5ac:	aam    0x63
  40f5ae:	adc    BYTE PTR [edx],cl
  40f5b0:	add    BYTE PTR [eax+0x408cadf8],bl
  40f5b6:	jp     0x40f55f
  40f5b8:	mov    edi,0xa4c67452
  40f5bd:	in     al,0xcf
  40f5bf:	cmp    al,0x8f
  40f5c1:	lea    ecx,[esi]
  40f5c3:	push   esp
  40f5c4:	add    BYTE PTR [ebx],ch
  40f5c6:	xor    BYTE PTR [ebx-0xfb87f2d],0x58
  40f5cd:	dec    ebx
  40f5ce:	or     eax,DWORD PTR [edx-0x7b]
  40f5d1:	add    BYTE PTR [edi],bh
  40f5d3:	mov    DWORD PTR [ebp-0x1c],ebp
  40f5d6:	mov    ds:0xf839b3b9,eax
  40f5db:	stc    
  40f5dc:	(bad)  
  40f5dd:	xchg   ebx,eax
  40f5de:	imul   esp,DWORD PTR [esi+esi*8],0x6f
  40f5e2:	pushf  
  40f5e3:	jnp    0x40f64e
  40f5e5:	jb     0x40f641
  40f5e7:	cmp    DWORD PTR [ebx+0x75],esi
  40f5ea:	mov    BYTE PTR [ecx],ah
  40f5ec:	add    edx,DWORD PTR [edx+esi*2-0x3b]
  40f5f0:	int    0x49
  40f5f2:	inc    edi
  40f5f3:	addr16 in eax,0xf0
  40f5f6:	mov    WORD PTR [ebx+0x62],ds
  40f5f9:	es fcom st(1)
  40f5fc:	jge    0x40f653
  40f5fe:	scas   al,BYTE PTR es:[edi]
  40f5ff:	dec    ecx
  40f600:	pop    ebp
  40f601:	pop    es
  40f602:	xchg   ebx,eax
  40f603:	and    ebp,DWORD PTR [eax+0x6783919c]
  40f609:	mov    ds:0xeb251838,al
  40f60e:	and    BYTE PTR [ebx-0x3d55401a],ah
  40f614:	jb     0x40f5cf
  40f616:	sub    DWORD PTR [eax-0x4f69fe46],0xfffffff1
  40f61d:	(bad)  
  40f61e:	daa    
  40f61f:	mov    DWORD PTR [edx+0x1e],esp
  40f622:	loopne 0x40f5b4
  40f624:	push   ss
  40f625:	sub    DWORD PTR [edi-0x23c50fbb],0xffffffc6
  40f62c:	(bad)  
  40f62e:	pop    ss
  40f62f:	repnz shl BYTE PTR [ebx-0x26],1
  40f633:	jge    0x40f631
  40f635:	cmp    esp,DWORD PTR [ebx+ecx*4+0x14]
  40f639:	adc    ebp,edi
  40f63b:	dec    eax
  40f63c:	cmp    ebx,ebx
  40f63e:	add    esi,DWORD PTR [eax]
  40f640:	(bad)  
  40f642:	push   0xffffff9a
  40f644:	call   0x21f6:0x387d9ab3
  40f64b:	gs xchg edx,eax
  40f64d:	dec    esp
  40f64f:	sbb    BYTE PTR [esi+0x4492c900],dl
  40f655:	retf   
  40f656:	xlat   BYTE PTR ds:[ebx]
  40f657:	add    ch,BYTE PTR [edi+0xdb1c275]
  40f65d:	icebp  
  40f65e:	pusha  
  40f65f:	sahf   
  40f660:	scas   al,BYTE PTR es:[edi]
  40f661:	sub    al,0x35
  40f663:	fdiv   QWORD PTR [edx-0x24983a75]
  40f669:	in     al,0x1b
  40f66b:	cli    
  40f66c:	pop    esp
  40f66d:	in     eax,0xdb
  40f66f:	mov    ebx,DWORD PTR [ebp+0x43]
  40f672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f673:	(bad)  
  40f674:	loop   0x40f6b0
  40f676:	stc    
  40f677:	inc    edi
  40f678:	inc    edi
  40f679:	fs push cs
  40f67b:	jl     0x40f694
  40f67d:	iret   
  40f67e:	retf   0x8988
  40f681:	shl    DWORD PTR [esi+0x2],0xaf
  40f685:	cmp    ebp,DWORD PTR [esi]
  40f687:	sub    eax,0xca3d6c7e
  40f68c:	rcr    BYTE PTR [edi],1
  40f68e:	inc    ebx
  40f68f:	into   
  40f690:	cli    
  40f691:	gs imul ebp,edi,0xfffffff9
  40f695:	push   edi
  40f696:	mov    edx,0x243fe285
  40f69b:	sub    DWORD PTR [ebx-0x19],esp
  40f69e:	pop    edi
  40f69f:	(bad)  
  40f6a0:	pop    ecx
  40f6a1:	push   ecx
  40f6a2:	dec    ebp
  40f6a3:	lock adc bh,BYTE PTR [edi-0x75]
  40f6a7:	adc    DWORD PTR [ecx+0x7f],ebx
  40f6aa:	ret    
  40f6ab:	push   0x60dddeef
  40f6b0:	xchg   DWORD PTR [ebp-0x47f1f176],esp
  40f6b6:	jge    0x40f717
  40f6b8:	inc    eax
  40f6b9:	mov    dh,0xf4
  40f6bb:	into   
  40f6bc:	xchg   edi,eax
  40f6bd:	inc    esi
  40f6be:	xchg   edx,eax
  40f6bf:	add    dl,ch
  40f6c1:	rcl    DWORD PTR [edi+0x35d95093],0x28
  40f6c8:	jmp    0x40f65e
  40f6ca:	cmp    BYTE PTR [ebx+ecx*1],al
  40f6cd:	push   esp
  40f6ce:	jb     0x40f6a6
  40f6d0:	fwait
  40f6d1:	lods   al,BYTE PTR ds:[esi]
  40f6d2:	jge    0x40f70f
  40f6d4:	jl     0x40f666
  40f6d6:	mov    al,ds:0xacf9c5fe
  40f6db:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40f6dd:	aas    
  40f6de:	mov    ebx,DWORD PTR [edi+0x49]
  40f6e1:	lds    eax,FWORD PTR [ebx+edi*1+0xe]
  40f6e5:	fidivr WORD PTR [ecx+0x35]
  40f6e8:	mov    ah,BYTE PTR [ebp-0x24]
  40f6eb:	and    eax,0xe28763cb
  40f6f0:	sub    eax,0x41bbf507
  40f6f5:	or     edi,ebp
  40f6f7:	sbb    DWORD PTR [eax+0x2bf3e607],eax
  40f6fd:	jle    0x40f6c3
  40f6ff:	jno    0x40f6b9
  40f701:	sbb    BYTE PTR [edx+0x69],dl
  40f704:	test   DWORD PTR [ebx+0x60],0xe1b7f85d
  40f70b:	bound  esi,QWORD PTR [ecx-0x47]
  40f70e:	jmp    0x8476:0xf08c5f41
  40f715:	xor    esp,DWORD PTR [edx+0x6a]
  40f718:	mov    ah,0x51
  40f71a:	add    al,dl
  40f71c:	pop    esi
  40f71d:	outs   dx,DWORD PTR ds:[esi]
  40f71e:	in     al,0x47
  40f720:	and    eax,0x8ad2a620
  40f725:	adc    ch,ah
  40f727:	cs push ds
  40f729:	std    
  40f72a:	adc    ch,BYTE PTR [esi-0x7cdad286]
  40f730:	sub    al,0xcb
  40f732:	pop    ebp
  40f733:	shl    BYTE PTR [ecx+edx*4-0x64ba5c3b],1
  40f73a:	dec    esi
  40f73b:	dec    ebx
  40f73c:	push   ds
  40f73d:	scas   al,BYTE PTR es:[edi]
  40f73e:	cmp    DWORD PTR [esi+ebp*2-0x6b],0x24
  40f743:	jge    0x40f6f6
  40f745:	int    0xfe
  40f747:	ret    0x92e
  40f74a:	pop    esp
  40f74b:	repz or eax,esp
  40f74e:	jmp    0xb471:0xc2e169fa
  40f755:	les    esp,FWORD PTR [edi]
  40f757:	pop    ds
  40f758:	fisttp DWORD PTR [edx+ecx*2-0x61]
  40f75c:	ins    BYTE PTR es:[edi],dx
  40f75d:	rol    DWORD PTR [edi+0x2af686bd],cl
  40f763:	ror    BYTE PTR [ebx+edx*4],0x55
  40f767:	popf   
  40f768:	in     al,0xcf
  40f76a:	bnd jl 0x40f7ac
  40f76d:	xchg   edi,eax
  40f76e:	xor    DWORD PTR [edi+esi*8],ebp
  40f771:	outs   dx,BYTE PTR ds:[esi]
  40f772:	mov    cs,WORD PTR [edi]
  40f774:	cld    
  40f775:	(bad)  
  40f776:	mov    ah,0x9c
  40f778:	leave  
  40f779:	inc    edi
  40f77a:	retf   0xd09b
  40f77d:	pop    esp
  40f77e:	fsub   DWORD PTR [esi-0xd]
  40f781:	loop   0x40f745
  40f783:	mov    al,0x58
  40f785:	repnz mov ds:0x6c423fb0,al
  40f78b:	xchg   ch,bl
  40f78d:	and    dl,dl
  40f78f:	mov    BYTE PTR [esi],dl
  40f791:	adc    BYTE PTR [ecx],cl
  40f793:	mov    DWORD PTR [ebx+ecx*4+0x2d],0x865f3b49
  40f79b:	ret    0x8bd1
  40f79e:	ret    0x51b6
  40f7a1:	imul   esi,ebp,0x64
  40f7a4:	(bad)
  40f7a7:	outs   dx,BYTE PTR ds:[esi]
  40f7a8:	ja     0x40f7ea
  40f7aa:	mov    bh,0x72
  40f7ac:	pop    ss
  40f7ad:	adc    BYTE PTR [edx-0x1c],bh
  40f7b0:	neg    DWORD PTR [eax-0x5eb0f4eb]
  40f7b6:	(bad)
  40f7b9:	repnz test BYTE PTR [edx+esi*4-0x4],0x2f
  40f7bf:	shl    BYTE PTR [eax+0x1b6ec153],0x32
  40f7c6:	xchg   DWORD PTR [ebx+0x4d4870eb],edx
  40f7cc:	or     edx,edi
  40f7ce:	adc    DWORD PTR [esi-0x7a435e9f],ebx
  40f7d4:	cs dec edi
  40f7d6:	sbb    bl,al
  40f7d8:	adc    dl,cl
  40f7da:	adc    bl,ch
  40f7dc:	mov    esp,0xf3fbe2
  40f7e1:	sub    ebp,eax
  40f7e3:	push   ss
  40f7e4:	dec    ebp
  40f7e5:	leave  
  40f7e6:	sti    
  40f7e7:	push   eax
  40f7e8:	mov    cl,0x50
  40f7ea:	ficom  DWORD PTR [ebx+0x28e46448]
  40f7f0:	push   0xffffffa4
  40f7f2:	hlt    
  40f7f3:	arpl   WORD PTR [edx-0x5efa2130],bx
  40f7f9:	shl    DWORD PTR [edi-0x5abf31b9],0x6c
  40f800:	jnp    0x40f837
  40f802:	sub    eax,edx
  40f804:	(bad)  
  40f805:	jns    0x40f817
  40f807:	mul    DWORD PTR [ebx]
  40f809:	out    0x43,al
  40f80b:	add    eax,0x95615df4
  40f810:	cmp    dl,cl
  40f812:	(bad)  
  40f814:	adc    al,0x82
  40f816:	fs call 0x3df72a86
  40f81c:	call   0xfc7d:0x25511872
  40f823:	lahf   
  40f824:	sub    BYTE PTR [ebp+0x10],cl
  40f827:	loop   0x40f7c9
  40f829:	icebp  
  40f82a:	jb     0x40f7f0
  40f82c:	rol    DWORD PTR ds:0x9da8c33b,cl
  40f832:	cld    
  40f833:	jl     0x40f803
  40f835:	xchg   edi,esp
  40f837:	das    
  40f838:	popf   
  40f839:	imul   ebx,esp,0x76592267
  40f83f:	dec    ecx
  40f840:	pop    ebx
  40f841:	ret    
  40f842:	fnstcw WORD PTR ds:0x9810f4cb
  40f848:	in     eax,0x86
  40f84a:	inc    edx
  40f84b:	xor    esp,eax
  40f84d:	cmp    al,0xe4
  40f84f:	out    0x2,eax
  40f851:	push   ebx
  40f852:	inc    edi
  40f853:	inc    eax
  40f854:	push   eax
  40f855:	or     BYTE PTR [eax],bh
  40f857:	loopne 0x40f857
  40f859:	mov    bh,0x8
  40f85b:	push   esi
  40f85c:	pop    ds
  40f85d:	mov    bh,0xb8
  40f85f:	out    0xd,al
  40f861:	fisubr DWORD PTR [esi+eax*1+0x61]
  40f865:	aam    0xf8
  40f867:	push   edi
  40f868:	jns    0x40f8af
  40f86a:	dec    ecx
  40f86b:	cli    
  40f86c:	jmp    0xa708:0x2ac1b7ca
  40f873:	(bad)  
  40f874:	xor    BYTE PTR [edi-0x24],cl
  40f877:	bound  eax,QWORD PTR [esi+eiz*8+0x7ae2d16a]
  40f87e:	push   esp
  40f87f:	and    al,0x9
  40f881:	mov    al,ds:0x4865fe55
  40f886:	jb     0x40f844
  40f888:	aaa    
  40f889:	xchg   BYTE PTR [ebx+0x2221b5c6],ch
  40f88f:	xor    cl,BYTE PTR [edx-0x527a02a0]
  40f895:	(bad)  
  40f896:	fst    st(1)
  40f898:	les    ebp,FWORD PTR [esi]
  40f89a:	sub    BYTE PTR [esi-0x31c10a85],dl
  40f8a0:	sbb    ebp,esi
  40f8a2:	jl     0x40f913
  40f8a4:	in     al,0x4
  40f8a6:	fpatan 
  40f8a8:	add    eax,0x4a505101
  40f8ad:	cmp    dl,dh
  40f8af:	ror    DWORD PTR [edx],0x8f
  40f8b2:	shr    DWORD PTR ds:0x72517cfc,0x2b
  40f8b9:	adc    al,0x20
  40f8bb:	ds int 0xa3
  40f8be:	stos   DWORD PTR es:[edi],eax
  40f8bf:	or     BYTE PTR [ebp+0x5d],al
  40f8c2:	xchg   ecx,eax
  40f8c3:	lods   al,BYTE PTR ds:[esi]
  40f8c4:	push   es
  40f8c5:	push   cs
  40f8c6:	jno    0x40f849
  40f8c8:	sbb    al,0xec
  40f8ca:	pushf  
  40f8cb:	imul   eax,eax,0xffffffb2
  40f8ce:	aam    0x7d
  40f8d0:	pop    esp
  40f8d1:	psubsw mm5,QWORD PTR [eax]
  40f8d4:	jne    0x40f8a9
  40f8d6:	pusha  
  40f8d7:	push   edi
  40f8d8:	popa   
  40f8d9:	ins    DWORD PTR es:[edi],dx
  40f8da:	adc    al,bh
  40f8dc:	inc    ebp
  40f8dd:	(bad)  
  40f8de:	fadd   DWORD PTR ds:[esi+0x490206b7]
  40f8e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8e6:	xchg   BYTE PTR [ebp+0x3f],ch
  40f8e9:	xor    bl,BYTE PTR [edi-0x39e1d555]
  40f8ef:	jle    0x40f8e6
  40f8f1:	fist   WORD PTR [ebx]
  40f8f3:	leave  
  40f8f4:	jl     0x40f8c7
  40f8f6:	cdq    
  40f8f7:	fdivp  st(6),st
  40f8f9:	(bad)  [eax-0x6c1fd8e8]
  40f8ff:	dec    edx
  40f900:	xchg   esi,eax
  40f901:	push   esi
  40f902:	push   ebp
  40f903:	fsub   DWORD PTR ds:0x1aced3b5
  40f909:	or     ch,BYTE PTR [edi]
  40f90b:	shl    BYTE PTR [esi-0x32e8861],cl
  40f911:	mov    al,0x58
  40f913:	stos   BYTE PTR es:[edi],al
  40f914:	push   esp
  40f915:	push   esp
  40f916:	xor    al,BYTE PTR [edx]
  40f918:	push   ebp
  40f919:	cmp    al,0x57
  40f91b:	pop    ecx
  40f91c:	arpl   WORD PTR [ecx],si
  40f91e:	ret    0x9322
  40f921:	hlt    
  40f922:	in     ax,0x26
  40f925:	push   ds
  40f926:	sbb    ah,BYTE PTR [eax-0x3e]
  40f929:	rol    DWORD PTR ds:0x72c2ab4b,cl
  40f92f:	arpl   bp,di
  40f931:	fld    QWORD PTR [esi-0xe]
  40f934:	jmp    0x40f919
  40f936:	loope  0x40f8c2
  40f938:	shl    BYTE PTR [esi+0x4bf1ea64],1
  40f93e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f93f:	test   al,0xdd
  40f941:	pop    edi
  40f942:	sti    
  40f943:	pop    ebp
  40f944:	pop    ds
  40f945:	jnp    0x40f962
  40f947:	fdiv   QWORD PTR [ebx]
  40f949:	dec    ebx
  40f94a:	test   al,0xc3
  40f94c:	jnp    0x40f914
  40f94e:	inc    edi
  40f94f:	sub    eax,0x21c80d05
  40f954:	or     al,BYTE PTR [edx-0x232c3230]
  40f95a:	jo     0x40f95c
  40f95c:	xchg   BYTE PTR [esp+eax*2+0x63],bl
  40f960:	mov    edx,0x23c2231c
  40f965:	fs mov dh,0x2
  40f968:	pusha  
  40f969:	pusha  
  40f96a:	jl     0x40f961
  40f96c:	ins    DWORD PTR es:[edi],dx
  40f96d:	add    edi,0xd7f93c15
  40f973:	sbb    al,0x39
  40f975:	mov    ds:0xf96f7e3e,al
  40f97a:	add    al,0x94
  40f97c:	and    eax,0xb2b92fb3
  40f981:	loop   0x40f9ff
  40f983:	pop    eax
  40f984:	dec    ecx
  40f985:	pop    ss
  40f986:	outs   dx,BYTE PTR ds:[esi]
  40f987:	push   cs
  40f988:	mov    bl,BYTE PTR [esi+0x60a0a4ed]
  40f98e:	jne    0x40f956
  40f990:	stos   DWORD PTR es:[edi],eax
  40f991:	ror    ecx,cl
  40f993:	push   eax
  40f994:	push   ss
  40f995:	mov    BYTE PTR [ecx-0x4de8853a],al
  40f99b:	xor    DWORD PTR [esi+ebx*4+0x48ea6b7f],ebp
  40f9a2:	inc    esp
  40f9a3:	pop    ebp
  40f9a4:	fiadd  WORD PTR ds:0x49e78f5
  40f9aa:	and    ecx,DWORD PTR [edi+0x73eca882]
  40f9b0:	inc    edx
  40f9b1:	test   al,0x2a
  40f9b3:	xor    BYTE PTR [ebx],ch
  40f9b5:	mov    dh,0x0
  40f9b7:	sti    
  40f9b8:	dec    ecx
  40f9b9:	lods   eax,DWORD PTR ds:[esi]
  40f9ba:	pusha  
  40f9bb:	mov    ah,0x41
  40f9bd:	gs add al,0x54
  40f9c0:	jns    0x40f98d
  40f9c2:	cli    
  40f9c3:	retf   0xdfb3
  40f9c6:	push   ebp
  40f9c7:	das    
  40f9c8:	sbb    BYTE PTR [ecx],bh
  40f9ca:	pop    ss
  40f9cb:	sbb    ah,BYTE PTR [esi-0x36]
  40f9ce:	retf   
  40f9cf:	cmp    ebx,esi
  40f9d1:	loope  0x40fa3a
  40f9d3:	ret    0x2a63
  40f9d6:	addr16 test al,0xc9
  40f9d9:	xchg   DWORD PTR [edx+0x3bf32e10],edi
  40f9df:	ror    DWORD PTR [edi],cl
  40f9e1:	dec    ebx
  40f9e2:	jp     0x40f9ac
  40f9e4:	test   eax,0x5b77e502
  40f9e9:	in     eax,0x1e
  40f9eb:	in     eax,dx
  40f9ec:	fstp   DWORD PTR [eax]
  40f9ee:	mov    bl,0x6f
  40f9f0:	das    
  40f9f1:	repnz mov ah,0xf2
  40f9f4:	xchg   esp,eax
  40f9f5:	sub    eax,0xfb0b5d0e
  40f9fa:	bound  ecx,QWORD PTR [edx]
  40f9fc:	inc    eax
  40f9fd:	mov    ds:0x8223629f,eax
  40fa02:	cmp    al,0xda
  40fa04:	icebp  
  40fa05:	inc    esp
  40fa06:	mov    cs,ebp
  40fa08:	in     al,0x2a
  40fa0a:	sub    al,0xe1
  40fa0c:	xor    al,0xfc
  40fa0e:	dec    eax
  40fa0f:	dec    ecx
  40fa10:	cmp    BYTE PTR [eax-0x7b],0xce
  40fa14:	je     0x40fa2a
  40fa16:	test   BYTE PTR [ebx-0x62],0x24
  40fa1a:	sub    edi,DWORD PTR [eax-0x6b]
  40fa1d:	cmp    al,0xdc
  40fa1f:	pop    edi
  40fa20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa21:	inc    esi
  40fa22:	add    eax,0x2dc34fe
  40fa27:	in     eax,0xbc
  40fa29:	mov    bl,0x51
  40fa2b:	xchg   edi,ecx
  40fa2d:	pop    ds
  40fa2e:	mov    BYTE PTR [edi-0xf4e7513],ah
  40fa34:	ret    0x9645
  40fa37:	das    
  40fa38:	pop    eax
  40fa39:	les    esi,FWORD PTR [ecx+0x19]
  40fa3c:	or     eax,0xd4b84af3
  40fa41:	xchg   ebp,eax
  40fa42:	rcl    BYTE PTR [edi+0x70],0xb
  40fa46:	jo     0x40fa46
  40fa48:	loop   0x40fa4f
  40fa4a:	leave  
  40fa4b:	(bad)  
  40fa4c:	adc    BYTE PTR [ebp-0x4d],al
  40fa4f:	pop    esp
  40fa50:	daa    
  40fa51:	sar    BYTE PTR [edi],cl
  40fa53:	pop    ebx
  40fa54:	mov    BYTE PTR [esi],ah
  40fa56:	not    ch
  40fa58:	jmp    0x8eb9:0x60123c63
  40fa5f:	stos   BYTE PTR es:[edi],al
  40fa60:	jne    0x40fab8
  40fa62:	push   0x5b
  40fa64:	pop    ds
  40fa65:	dec    esi
  40fa66:	jmp    0x6f37:0x19408373
  40fa6d:	clc    
  40fa6e:	pop    esp
  40fa6f:	mov    esp,0xe8e41f08
  40fa74:	cwde   
  40fa75:	mov    es,esp
  40fa77:	cwde   
  40fa78:	aad    0x69
  40fa7a:	int    0x7c
  40fa7c:	scas   al,BYTE PTR es:[edi]
  40fa7d:	lods   eax,DWORD PTR ds:[esi]
  40fa7e:	shl    DWORD PTR [edi],cl
  40fa80:	sub    al,0x58
  40fa82:	int3   
  40fa83:	ficomp DWORD PTR [esi+0x3d]
  40fa86:	(bad)
  40fa8a:	cli    
  40fa8b:	(bad)  
  40fa8c:	fdivr  st,st(3)
  40fa8e:	in     eax,dx
  40fa8f:	pop    edi
  40fa90:	add    bl,bh
  40fa92:	jns    0x40fa60
  40fa94:	fld    DWORD PTR [eax]
  40fa96:	push   eax
  40fa97:	lods   al,BYTE PTR ds:[esi]
  40fa98:	lods   al,BYTE PTR ds:[esi]
  40fa99:	mov    al,0x16
  40fa9b:	retf   
  40fa9c:	cwde   
  40fa9d:	and    al,0xbe
  40fa9f:	in     al,dx
  40faa0:	jb     0x40fac5
  40faa2:	jmp    0x9729:0x7470b5b
  40faa9:	mov    cl,0x90
  40faab:	ds inc ebx
  40faad:	fwait
  40faae:	or     bh,BYTE PTR [ebp-0x199acab7]
  40fab4:	test   al,0x27
  40fab6:	add    ch,ch
  40fab8:	outs   dx,BYTE PTR ds:[esi]
  40fab9:	and    DWORD PTR [ebx+0x15],eax
  40fabc:	outs   dx,DWORD PTR ds:[esi]
  40fabd:	fdiv   QWORD PTR [eax]
  40fabf:	imul   eax,DWORD PTR [ebx-0x43],0x5af83534
  40fac6:	imul   esi,DWORD PTR [ebp-0x5dc4e427],0xc
  40facd:	retf   
  40face:	push   ebp
  40facf:	shr    dl,cl
  40fad1:	inc    ebx
  40fad2:	or     edx,edx
  40fad4:	shl    DWORD PTR [ecx-0x31],cl
  40fad7:	xchg   edi,eax
  40fad8:	mov    ds:0x63b99fb9,eax
  40fadd:	fst    QWORD PTR [ebp-0x7aaa08b]
  40fae3:	mov    bh,BYTE PTR [edx-0x6ddbc4bf]
  40fae9:	cmp    BYTE PTR [ecx+ebx*4+0x3],dh
  40faed:	inc    esi
  40faee:	or     DWORD PTR [edx-0x667e72d2],edx
  40faf4:	cld    
  40faf5:	add    DWORD PTR [edx],ecx
  40faf7:	and    esi,DWORD PTR [esp+eiz*8]
  40fafa:	cmp    ecx,DWORD PTR [eax+0x45]
  40fafd:	adc    DWORD PTR [eax+0x4db9c743],0xffffffd2
  40fb04:	leave  
  40fb05:	mov    ds:0x50cc70c3,eax
  40fb0a:	pop    es
  40fb0b:	xor    eax,0x1ea64f44
  40fb10:	retf   0x42ec
  40fb13:	ret    
  40fb14:	les    ecx,FWORD PTR [esi-0x5a96accd]
  40fb1a:	jo     0x40fb99
  40fb1c:	adc    DWORD PTR [eax+ebx*2-0x160f70c4],0x36
  40fb24:	mov    DWORD PTR [ebx+0x42075b22],ecx
  40fb2a:	retf   0x3f30
  40fb2d:	mov    ecx,0xb2fb471f
  40fb32:	inc    eax
  40fb33:	xchg   esp,eax
  40fb34:	inc    ecx
  40fb35:	imul   edi,DWORD PTR [edi*1-0x316d2603],0x8
  40fb3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb3e:	xchg   ecx,eax
  40fb3f:	xchg   esp,eax
  40fb40:	cmp    DWORD PTR es:[edi+ecx*2+0xd],esi
  40fb45:	scas   al,BYTE PTR es:[edi]
  40fb46:	test   al,0x19
  40fb48:	popf   
  40fb49:	adc    edi,DWORD PTR [esi+0x24a160ba]
  40fb4f:	pop    esp
  40fb50:	jns    0x40fb7c
  40fb52:	and    edx,0x5f580dc
  40fb58:	cdq    
  40fb59:	sbb    eax,0xcc8b027c
  40fb5e:	mov    ?,WORD PTR [esi+0x6c]
  40fb61:	aad    0xf3
  40fb63:	jbe    0x40fbb6
  40fb65:	dec    ebp
  40fb66:	sub    al,0xbc
  40fb68:	inc    esp
  40fb69:	imul   ebp,DWORD PTR [ebx-0x3cb7d80],0x3f
  40fb70:	shr    DWORD PTR [eax+0x1e],cl
  40fb73:	outs   dx,BYTE PTR ds:[esi]
  40fb74:	sub    esi,eax
  40fb76:	add    eax,0xc101c92f
  40fb7b:	sti    
  40fb7c:	mul    dh
  40fb7e:	xchg   esi,eax
  40fb7f:	scas   eax,DWORD PTR es:[edi]
  40fb80:	and    esp,edx
  40fb82:	add    al,0x5d
  40fb84:	adc    ebp,DWORD PTR [edx-0x21]
  40fb87:	adc    BYTE PTR [edi],bl
  40fb89:	push   esp
  40fb8a:	into   
  40fb8b:	push   0x1e
  40fb8d:	ds fyl2xp1 
  40fb90:	xchg   ebp,eax
  40fb91:	in     al,0xff
  40fb93:	rcr    DWORD PTR [edi-0x7cf691c5],1
  40fb99:	repnz and eax,0xd9b0e467
  40fb9f:	sbb    eax,0x6c214020
  40fba4:	mov    BYTE PTR [esi-0x1c72413d],dh
  40fbaa:	std    
  40fbab:	pop    ecx
  40fbac:	ds out dx,al
  40fbae:	clc    
  40fbaf:	mov    ah,0x52
  40fbb1:	inc    esi
  40fbb2:	and    BYTE PTR [esi+0xa2c23db],dh
  40fbb8:	shl    DWORD PTR [edi],0xeb
  40fbbb:	and    DWORD PTR [esi],esp
  40fbbd:	and    al,0x23
  40fbbf:	rcr    cl,1
  40fbc1:	push   ecx
  40fbc2:	add    edx,ebp
  40fbc4:	sbb    BYTE PTR [ebp+0x53],ch
  40fbc7:	inc    edi
  40fbc8:	sub    al,0x79
  40fbca:	arpl   WORD PTR [ecx],si
  40fbcc:	call   0x95b2:0x580ab922
  40fbd3:	mov    esi,0xd075a2ab
  40fbd8:	push   ds
  40fbd9:	in     eax,dx
  40fbda:	sbb    eax,DWORD PTR [eax+0x3584e56b]
  40fbe0:	dec    eax
  40fbe1:	adc    esi,DWORD PTR [esi-0x5c494e9a]
  40fbe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbe8:	mov    ebp,0xd7ef3ddb
  40fbed:	cwde   
  40fbee:	mov    bl,BYTE PTR [ebx]
  40fbf0:	xor    BYTE PTR [ebx],al
  40fbf2:	add    BYTE PTR cs:[bx+si-0x57],ch
  40fbf7:	aam    0x96
  40fbf9:	inc    ebp
  40fbfa:	push   esi
  40fbfb:	pop    ebx
  40fbfc:	xor    eax,0x9355cd1b
  40fc01:	adc    ecx,DWORD PTR [eax-0x6b]
  40fc04:	mov    ah,0x5e
  40fc06:	xor    BYTE PTR [ebx+0x65fac7d8],0xf0
  40fc0d:	mov    edi,edi
  40fc0f:	dec    edi
  40fc10:	or     DWORD PTR [esi],ebx
  40fc12:	jnp    0x40fc84
  40fc14:	js     0x40fba3
  40fc16:	in     eax,dx
  40fc17:	mov    ebx,0xe67ea505
  40fc1c:	push   eax
  40fc1d:	stos   DWORD PTR es:[edi],eax
  40fc1e:	gs fcomi st,st(1)
  40fc21:	arpl   WORD PTR [edx],cx
  40fc23:	push   ds
  40fc24:	dec    esi
  40fc25:	xchg   edi,eax
  40fc26:	in     eax,0x3f
  40fc28:	lahf   
  40fc29:	dec    ebp
  40fc2a:	sbb    ebx,DWORD PTR [eax-0x77]
  40fc2d:	jae    0x40fbf1
  40fc2f:	cmp    BYTE PTR [eax],dl
  40fc31:	rol    BYTE PTR [ebp-0x6],cl
  40fc34:	or     eax,0xdec5b802
  40fc39:	sub    ebx,DWORD PTR [ebx-0x22]
  40fc3c:	pusha  
  40fc3d:	pop    eax
  40fc3e:	dec    ebx
  40fc3f:	dec    edx
  40fc40:	cmp    BYTE PTR ds:0xdd1b28ad,0x37
  40fc47:	div    DWORD PTR [esi-0x2b]
  40fc4a:	call   0xeb41:0x5dc0cb9e
  40fc51:	xor    ah,ah
  40fc53:	shl    DWORD PTR [ebx+0x3d],cl
  40fc56:	(bad)
  40fc59:	adc    bl,BYTE PTR [esi]
  40fc5b:	mov    ch,0x36
  40fc5d:	ror    cl,cl
  40fc5f:	call   0xac86:0xc1e57ae6
  40fc66:	xchg   esp,eax
  40fc67:	int3   
  40fc68:	sbb    cl,BYTE PTR [ebx+0x48]
  40fc6b:	cwde   
  40fc6c:	push   0xa
  40fc6e:	ror    BYTE PTR [ebp-0x17],cl
  40fc71:	adc    eax,esp
  40fc73:	jge    0x40fcac
  40fc75:	(bad)  
  40fc76:	xchg   ecx,eax
  40fc77:	xor    ch,bh
  40fc79:	and    DWORD PTR [eax+0x3d],ebp
  40fc7c:	mov    ds:0xa4c9582f,eax
  40fc81:	push   0xffffffd8
  40fc83:	in     al,0x2c
  40fc85:	ja     0x40fc70
  40fc87:	mov    ebp,0xd6853476
  40fc8c:	dec    ecx
  40fc8d:	inc    edx
  40fc8e:	mov    ecx,0x55d23b64
  40fc93:	imul   ebx,DWORD PTR [edx],0xc7583491
  40fc99:	pop    ecx
  40fc9a:	inc    edi
  40fc9b:	and    DWORD PTR [ebx+0x5897c4a5],ecx
  40fca1:	ins    DWORD PTR es:[edi],dx
  40fca2:	jno    0x40fce1
  40fca4:	adc    ebx,DWORD PTR [ebx+0x15]
  40fca7:	stos   DWORD PTR es:[edi],eax
  40fca8:	js     0x40fc4e
  40fcaa:	xor    esp,DWORD PTR ds:0xb0e30520
  40fcb0:	pop    ebx
  40fcb1:	cmp    DWORD PTR [edi+0x3b],esp
  40fcb4:	pmaxsw mm1,QWORD PTR [edi]
  40fcb7:	jmp    0x7d2d:0xb349e8e1
  40fcbe:	out    dx,al
  40fcbf:	aaa    
  40fcc0:	mov    cl,0xe3
  40fcc2:	push   esi
  40fcc3:	cmp    eax,DWORD PTR [ebp-0x2356a453]
  40fcc9:	mov    bh,0x85
  40fccb:	stos   BYTE PTR es:[edi],al
  40fccc:	arpl   WORD PTR [esp+edi*4+0x8],bp
  40fcd0:	mov    edx,0xe55d279b
  40fcd5:	clc    
  40fcd6:	xchg   ebp,eax
  40fcd7:	jge    0x40fd03
  40fcd9:	sbb    DWORD PTR [eax-0x3224d65],0xfffffffe
  40fce0:	xchg   ebx,eax
  40fce1:	and    dl,BYTE PTR [edi+ebx*2]
  40fce4:	das    
  40fce5:	imul   edi,esi,0xd6809725
  40fceb:	mov    DWORD PTR ds:0x27afae85,esi
  40fcf1:	cmp    ebp,DWORD PTR [ecx]
  40fcf3:	in     al,dx
  40fcf4:	xchg   dl,dl
  40fcf6:	(bad)  [ecx+0x9]
  40fcf9:	sub    bl,ch
  40fcfb:	or     ah,BYTE PTR [esi]
  40fcfd:	sti    
  40fcfe:	es je  0x40fd45
  40fd01:	cmp    al,0x92
  40fd03:	das    
  40fd04:	ja     0x40fc8a
  40fd06:	psubusb mm4,QWORD PTR [edi-0x57312816]
  40fd0d:	(bad)  
  40fd0e:	(bad)  
  40fd0f:	call   esp
  40fd11:	shr    BYTE PTR [edx+ecx*8],0xea
  40fd15:	add    ah,BYTE PTR [edx]
  40fd17:	clc    
  40fd18:	aaa    
  40fd19:	dec    BYTE PTR [ebx-0x4159cb68]
  40fd1f:	fs xchg ebx,eax
  40fd21:	xlat   BYTE PTR ds:[ebx]
  40fd22:	pop    edx
  40fd23:	jge    0x40fcb9
  40fd25:	jne    0x40fd58
  40fd27:	pushf  
  40fd28:	(bad)  
  40fd29:	cli    
  40fd2a:	test   ah,cl
  40fd2c:	fild   DWORD PTR [ecx-0x3b]
  40fd2f:	or     al,0x31
  40fd31:	sub    ecx,DWORD PTR [esi]
  40fd33:	mov    esp,0x5502b40c
  40fd38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd39:	mov    bh,0x2
  40fd3b:	or     al,0x7d
  40fd3d:	or     DWORD PTR [edx-0x6d6f3497],edx
  40fd43:	or     bl,BYTE PTR [edi-0x72]
  40fd46:	push   cs
  40fd47:	add    ch,BYTE PTR [ebx]
  40fd49:	sub    BYTE PTR [ebp-0x79],al
  40fd4c:	and    al,0x42
  40fd4e:	ss push cs
  40fd50:	xor    al,0xb2
  40fd52:	sub    eax,0xf7dff324
  40fd57:	test   al,0xba
  40fd59:	dec    edx
  40fd5a:	fs loop 0x40fd86
  40fd5d:	aam    0xc9
  40fd5f:	pusha  
  40fd60:	daa    
  40fd61:	in     al,0x82
  40fd63:	test   BYTE PTR [eax+ebx*8+0xd],ah
  40fd67:	dec    esi
  40fd68:	sub    al,0x6b
  40fd6a:	jmp    0x4f0ee066
  40fd6f:	mov    ecx,DWORD PTR [edx+0x6c96d031]
  40fd75:	sbb    ecx,DWORD PTR [eax+ebx*4+0x4de0ccb8]
  40fd7c:	cmp    BYTE PTR [esi+0x72],cl
  40fd7f:	xor    dl,BYTE PTR [ebx+0x33]
  40fd82:	dec    edx
  40fd83:	fisubr DWORD PTR [esi+0x46]
  40fd86:	or     BYTE PTR [eax],ch
  40fd88:	xchg   ebx,eax
  40fd89:	jl     0x40fd6e
  40fd8b:	inc    edx
  40fd8c:	inc    esi
  40fd8d:	(bad)
  40fd91:	fs test eax,0x4a4aceae
  40fd97:	xchg   esp,eax
  40fd98:	frstor [edi+0x593046f3]
  40fd9e:	cmp    BYTE PTR [ecx+0x628a4ac9],bh
  40fda4:	inc    ebp
  40fda5:	(bad)  
  40fda6:	pop    ss
  40fda7:	(bad)  
  40fda8:	cmp    ch,BYTE PTR [edx-0x29]
  40fdab:	std    
  40fdac:	push   esp
  40fdad:	xlat   BYTE PTR ds:[ebx]
  40fdae:	bound  ecx,QWORD PTR [edi]
  40fdb0:	pop    ds
  40fdb1:	or     eax,0x3c5fb0e3
  40fdb6:	adc    DWORD PTR [edx+0x6c74434b],ebx
  40fdbc:	push   edi
  40fdbd:	(bad)  
  40fdbe:	into   
  40fdbf:	jl     0x40fda7
  40fdc1:	mov    dl,0x71
  40fdc3:	hlt    
  40fdc4:	fcmove st,st(4)
  40fdc6:	jb     0x40fd48
  40fdc8:	push   eax
  40fdc9:	add    ah,dh
  40fdcb:	(bad)  
  40fdcc:	sbb    al,0x49
  40fdce:	in     eax,dx
  40fdcf:	ins    DWORD PTR es:[edi],dx
  40fdd0:	gs lock js 0x40fe38
  40fdd4:	cmp    al,0x6
  40fdd6:	fmul   QWORD PTR [edx+0x27]
  40fdd9:	out    dx,eax
  40fdda:	and    ebx,DWORD PTR [ebp+0x6d491020]
  40fde0:	jle    0x40fe49
  40fde2:	dec    edi
  40fde3:	jp     0x40fdb8
  40fde5:	add    al,0x9
  40fde7:	jp     0x40fd80
  40fde9:	sbb    cl,ch
  40fdeb:	in     al,dx
  40fdec:	setle  ch
  40fdef:	pop    ecx
  40fdf0:	(bad)  
  40fdf1:	mov    eax,ds:0x3dda5229
  40fdf6:	mov    ds:0x3eb8cd7d,al
  40fdfb:	es pop ecx
  40fdfd:	stc    
  40fdfe:	test   DWORD PTR [ebp+0x23],ebx
  40fe01:	mov    DWORD PTR [bx+si-0x3f1b],esp
  40fe06:	sub    eax,DWORD PTR ds:0xd0a8a80a
  40fe0c:	je     0x40fdfd
  40fe0e:	sub    al,BYTE PTR [ecx-0x7404e105]
  40fe14:	mov    ?,WORD PTR [bx]
  40fe17:	push   esp
  40fe18:	mov    bl,0x74
  40fe1a:	nop
  40fe1b:	cmp    DWORD PTR [edi],ecx
  40fe1d:	(bad)  
  40fe1f:	or     BYTE PTR [esi],bl
  40fe21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe22:	push   ecx
  40fe23:	xor    al,0x1a
  40fe25:	out    0xba,eax
  40fe27:	dec    esp
  40fe28:	mov    al,0x1f
  40fe2a:	fidivr WORD PTR [ecx-0x457c7718]
  40fe30:	aad    0x83
  40fe32:	push   eax
  40fe33:	in     eax,dx
  40fe34:	es out dx,al
  40fe36:	mov    al,0xf2
  40fe38:	jmp    DWORD PTR [ecx+edx*8]
  40fe3b:	sub    eax,0xe86aeac3
  40fe40:	pop    edx
  40fe41:	imul   edx,edx,0xffffffc8
  40fe44:	cmp    al,0x42
  40fe46:	xor    ah,dh
  40fe48:	sbb    eax,0x3c1bfe0
  40fe4d:	shl    edx,cl
  40fe4f:	inc    eax
  40fe50:	ror    ch,1
  40fe52:	pop    eax
  40fe53:	je     0x40fe89
  40fe55:	sbb    ebp,DWORD PTR [ebx]
  40fe57:	sbb    eax,DWORD PTR [eax-0x1b4d1438]
  40fe5d:	cmc    
  40fe5e:	(bad)  
  40fe5f:	cmp    eax,0xfb1bcdd9
  40fe64:	pushf  
  40fe65:	dec    ebp
  40fe66:	frstor [edi]
  40fe68:	mov    dh,0xa6
  40fe6a:	pushf  
  40fe6b:	lds    esp,FWORD PTR [esi-0x4]
  40fe6e:	xor    al,0x12
  40fe70:	mov    ds:0x3a889bd5,al
  40fe75:	ror    DWORD PTR [ecx],1
  40fe77:	xchg   edi,eax
  40fe78:	loop   0x40fe59
  40fe7a:	dec    esi
  40fe7b:	jne    0x40fed5
  40fe7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe7e:	cmp    ch,dh
  40fe80:	adc    ebp,DWORD PTR [edi]
  40fe82:	cmp    eax,0x41276070
  40fe87:	pop    es
  40fe88:	sar    BYTE PTR [edx+0x711c0043],1
  40fe8e:	sub    BYTE PTR [eax+0x6696f328],ch
  40fe94:	ror    DWORD PTR [ebx-0x650b65fc],cl
  40fe9a:	sbb    BYTE PTR [ecx-0x52],ch
  40fe9d:	cli    
  40fe9e:	dec    eax
  40fe9f:	jae    0x40fe9d
  40fea1:	sub    al,0x39
  40fea3:	inc    edx
  40fea4:	popw   es
  40fea6:	(bad)  
  40fea7:	pop    edi
  40fea8:	pop    edi
  40fea9:	and    BYTE PTR [ecx+0x4b],ch
  40feac:	add    ebx,ebp
  40feae:	outs   dx,DWORD PTR ds:[esi]
  40feaf:	jb     0x40fe60
  40feb1:	cs jecxz 0x40fec1
  40feb4:	and    eax,0x6be1cec1
  40feb9:	int    0x5a
  40febb:	test   BYTE PTR ds:0xf053c62d,ch
  40fec1:	mov    dh,0x36
  40fec3:	xor    al,0x6f
  40fec5:	stc    
  40fec6:	ret    
  40fec7:	imul   edx,edi,0x49
  40feca:	adc    DWORD PTR [edx+0x3c],edx
  40fecd:	xor    dh,ch
  40fecf:	inc    edx
  40fed0:	retf   0x580b
  40fed3:	dec    ecx
  40fed4:	repnz adc ebp,DWORD PTR [ecx+0x1546687e]
  40fedb:	lods   eax,DWORD PTR ds:[esi]
  40fedc:	popf   
  40fedd:	fbstp  TBYTE PTR [eax+0x32]
  40fee0:	push   eax
  40fee1:	and    eax,0x28da9a6e
  40fee6:	scas   al,BYTE PTR es:[edi]
  40fee7:	fs inc eax
  40fee9:	les    ebx,FWORD PTR [esi+0x47]
  40feec:	sub    DWORD PTR [edx+0x5f],esp
  40feef:	jl     0x40fedc
  40fef1:	or     al,0x3b
  40fef3:	pop    esi
  40fef4:	cmp    eax,0x1cb1f8cf
  40fef9:	cwde   
  40fefa:	push   es
  40fefb:	fs dec edx
  40fefd:	pop    ebx
  40fefe:	xchg   ebp,eax
  40feff:	pop    ebp
  40ff00:	add    BYTE PTR [ebx+0x768d196c],ah
  40ff06:	fcomp  DWORD PTR [ecx+0x2b]
  40ff09:	pop    ss
  40ff0a:	push   es
  40ff0b:	popf   
  40ff0c:	cmp    ah,ch
  40ff0e:	xchg   ebp,eax
  40ff0f:	pop    ds
  40ff10:	out    0x1c,eax
  40ff12:	sbb    al,0xae
  40ff14:	test   al,0x80
  40ff16:	fsubr  QWORD PTR [eax+0x25]
  40ff19:	xlat   BYTE PTR ds:[ebx]
  40ff1a:	mov    WORD PTR [esi+ebx*1+0x10],ss
  40ff1e:	lods   al,BYTE PTR ds:[esi]
  40ff1f:	repnz pop esi
  40ff21:	mov    esi,0xdf6366b
  40ff26:	xchg   di,ax
  40ff28:	cmp    ch,BYTE PTR [edi-0x6aa749ec]
  40ff2e:	adc    dh,BYTE PTR [ebx]
  40ff30:	jae    0x40fec3
  40ff32:	mov    edi,0x5cf7a030
  40ff37:	mov    dh,0xb6
  40ff39:	or     dl,BYTE PTR [eax*8+0x2eef8b47]
  40ff40:	jmp    0xd0d9b177
  40ff45:	fld    DWORD PTR [edx+0x180b4de2]
  40ff4b:	pusha  
  40ff4c:	jmp    0x86d:0x14e02970
  40ff53:	sub    al,0x45
  40ff55:	or     eax,0xf51e1671
  40ff5a:	stc    
  40ff5b:	ficomp WORD PTR [edx+0x1516ddf3]
  40ff61:	aas    
  40ff62:	call   0x11a1e957
  40ff67:	(bad)  
  40ff68:	sbb    bh,BYTE PTR [esi+esi*1+0x6d]
  40ff6c:	xlat   BYTE PTR ds:[ebx]
  40ff6d:	mov    WORD PTR ds:0x134bf7d7,es
  40ff73:	add    al,0xf5
  40ff75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff76:	mov    al,ds:0x937d2db3
  40ff7b:	call   0xc547:0x1bc8f664
  40ff82:	jb     0x40ffd4
  40ff84:	imul   edx,DWORD PTR [eax],0xffffffb5
  40ff87:	cmp    eax,0xb4a5c6e1
  40ff8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff8d:	rcr    DWORD PTR [ebx],1
  40ff8f:	ror    BYTE PTR [esi+0x58baba59],0x2a
  40ff96:	mov    edx,0xe7f7bc17
  40ff9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff9c:	imul   DWORD PTR [eax+0x14]
  40ff9f:	sbb    BYTE PTR [edi+0x5d],cl
  40ffa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffa3:	aam    0xc1
  40ffa5:	or     al,0xbf
  40ffa7:	fidiv  DWORD PTR [edx+0x5d]
  40ffaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffab:	mov    al,0x0
  40ffad:	xor    DWORD PTR [ebp-0x9],0xcb9a2ec
  40ffb4:	sbb    DWORD PTR [eax],eax
  40ffb6:	jg     0x40ffea
  40ffb8:	mov    eax,ds:0x2f16b51b
  40ffbd:	in     al,0xf9
  40ffbf:	push   ss
  40ffc0:	and    eax,0x892e8615
  40ffc5:	pop    ebp
  40ffc6:	repnz into 
  40ffc8:	(bad)  
  40ffc9:	aam    0x53
  40ffcb:	mov    cl,0xb0
  40ffcd:	int    0xd9
  40ffcf:	pop    edx
  40ffd0:	xor    cl,dh
  40ffd2:	cli    
  40ffd3:	pop    esi
  40ffd4:	jno    0x410030
  40ffd6:	scas   eax,DWORD PTR es:[edi]
  40ffd7:	lock push esi
  40ffd9:	xchg   DWORD PTR [eax+0x251bf8f7],ecx
  40ffdf:	mov    ah,0x34
  40ffe1:	in     al,dx
  40ffe2:	xor    DWORD PTR ds:0xf73b6172,eax
  40ffe8:	sub    al,0xd6
  40ffea:	fstp   QWORD PTR [eax-0xbba1a53]
  40fff0:	inc    edi
  40fff1:	ins    DWORD PTR es:[edi],dx
  40fff2:	into   
  40fff3:	jb     0x41003a
  40fff5:	leave  
  40fff6:	inc    eax
  40fff7:	or     DWORD PTR [ecx],edx
  40fff9:	cli    
  40fffa:	push   eax
  40fffb:	dec    esi
  40fffc:	mov    esi,0x346aad0a
  410001:	aaa    
  410002:	ror    DWORD PTR ds:0xa77d55b8,cl
  410008:	stos   DWORD PTR es:[edi],eax
  410009:	cmp    edi,DWORD PTR [edx]
  41000b:	sub    DWORD PTR [ecx+eax*8-0x4e06668a],0x74
  410013:	jns    0x41008b
  410015:	add    cl,BYTE PTR [ebx-0xed7a5dc]
  41001b:	mov    ah,0x7c
  41001d:	hlt    
  41001e:	jns    0x410076
  410020:	sub    eax,0x6e259407
  410025:	pusha  
  410026:	fld    TBYTE PTR [edx]
  410028:	mov    ah,0x3e
  41002a:	leave  
  41002b:	jne    0x40ffbc
  41002d:	jae    0x410084
  41002f:	sub    DWORD PTR [ebx],0x2ad4ecc5
  410035:	adc    edx,DWORD PTR ds:0x8d63da6e
  41003b:	cmp    BYTE PTR [edx],al
  41003d:	sbb    al,0x56
  41003f:	clc    
  410040:	mov    eax,edi
  410042:	stc    
  410043:	clc    
  410044:	and    DWORD PTR [ebp+0x49269ae5],edx
  41004a:	jnp    0x41002f
  41004c:	int3   
  41004d:	out    0xdf,eax
  41004f:	aam    0x16
  410051:	shl    DWORD PTR [esi-0xe29b449],0xcf
  410058:	call   0x1e0b4f14
  41005d:	test   BYTE PTR [edi+esi*2],al
  410060:	neg    BYTE PTR [esi-0x46d5c1ee]
  410066:	js     0x4100bc
  410068:	cmp    DWORD PTR [ecx],ebx
  41006a:	cmp    bl,dh
  41006c:	dec    ebp
  41006d:	cmp    eax,0x8b227e8
  410072:	push   edx
  410073:	jnp    0x410005
  410075:	fsub   QWORD PTR [edi+ecx*2]
  410078:	xchg   edx,eax
  410079:	push   ss
  41007a:	aaa    
  41007b:	inc    DWORD PTR [esi-0x2]
  41007e:	push   eax
  41007f:	es inc ecx
  410081:	or     al,0x40
  410083:	sub    cl,dh
  410085:	mov    esp,0x1f576c7d
  41008a:	xchg   ecx,eax
  41008b:	fsub   DWORD PTR [ebp+0x2d19614b]
  410091:	pop    ebx
  410092:	sub    DWORD PTR [ebx+0x207aa570],ebp
  410098:	in     al,0x88
  41009a:	in     al,0xaf
  41009c:	popa   
  41009d:	mov    ch,0x75
  41009f:	fiadd  WORD PTR [ecx+0x3]
  4100a2:	fcomp  DWORD PTR ds:0x437afc84
  4100a8:	adc    al,0xbd
  4100aa:	ficomp DWORD PTR [ecx+0x472fd49f]
  4100b0:	xchg   edi,eax
  4100b1:	popa   
  4100b2:	cwde   
  4100b3:	inc    ebx
  4100b4:	into   
  4100b5:	xor    al,0xcb
  4100b7:	icebp  
  4100b8:	push   edx
  4100b9:	jl     0x4100d7
  4100bb:	sub    esp,DWORD PTR [esi]
  4100bd:	mov    al,ds:0xf59c6c64
  4100c2:	pop    esp
  4100c3:	add    al,0xd6
  4100c5:	pop    ds
  4100c6:	mov    bl,0xa5
  4100c8:	inc    ecx
  4100c9:	cmp    al,BYTE PTR [esi+0x22354d87]
  4100cf:	clc    
  4100d0:	aas    
  4100d1:	lods   eax,DWORD PTR ds:[esi]
  4100d2:	mov    BYTE PTR es:[edi-0x4a27142c],cl
  4100d9:	mov    ebx,0x3052f00a
  4100de:	mov    BYTE PTR [esi],ch
  4100e0:	xchg   ebp,eax
  4100e1:	fsub   DWORD PTR [ebx+0x3677799f]
  4100e7:	mov    ebp,0x86b2a37
  4100ec:	scas   al,BYTE PTR es:[edi]
  4100ed:	mov    cl,0x42
  4100ef:	rcr    BYTE PTR [edx],cl
  4100f1:	or     eax,0x8cfbe402
  4100f6:	xchg   ebx,eax
  4100f7:	push   ecx
  4100f8:	test   BYTE PTR [edx+0x2406793d],ch
  4100fe:	mov    ds:0xcb9027d3,eax
  410103:	inc    ebx
  410104:	inc    esp
  410105:	nop
  410106:	div    BYTE PTR [esi-0x60]
  410109:	pop    ebp
  41010a:	push   0x1328ae4d
  41010f:	push   ds
  410110:	js     0x41017d
  410112:	mov    ch,0xea
  410114:	in     eax,0x89
  410116:	js     0x4100cd
  410118:	mov    ecx,0x7de9e15e
  41011d:	inc    ebp
  41011e:	xchg   esp,eax
  41011f:	mov    esi,0x91ef896e
  410124:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410125:	dec    edi
  410126:	fdiv   DWORD PTR ds:0x1218548b
  41012c:	adc    al,0x10
  41012e:	mov    ebx,ecx
  410130:	push   0xffffffcd
  410132:	cli    
  410133:	pop    edx
  410134:	or     DWORD PTR [ebx],edx
  410136:	inc    esp
  410137:	xchg   DWORD PTR [ecx+eiz*8-0x16fc4c40],edx
  41013e:	(bad)  
  41013f:	xchg   edi,eax
  410140:	xchg   ecx,eax
  410141:	pop    ss
  410142:	and    eax,0xd458a941
  410147:	(bad)  
  410148:	(bad)  
  410149:	cld    
  41014a:	rol    cl,cl
  41014c:	rcr    BYTE PTR [edi-0x1a],1
  41014f:	mov    ebp,0xaae7ed87
  410154:	add    DWORD PTR [ebx-0x3c],ebx
  410157:	les    esi,FWORD PTR [esi-0x76bed414]
  41015d:	push   cs
  41015e:	push   es
  41015f:	pop    ds
  410160:	or     BYTE PTR [edi+0x55],0x38
  410164:	rol    BYTE PTR [esi+edx*2],1
  410167:	xchg   esp,eax
  410168:	dec    esp
  410169:	mov    bh,0xfe
  41016b:	leave  
  41016c:	xchg   esp,eax
  41016d:	ja     0x4101c9
  41016f:	mov    ss,WORD PTR [edi]
  410171:	into   
  410172:	aad    0x71
  410174:	xor    al,0x20
  410176:	jbe    0x41019d
  410178:	inc    eax
  410179:	push   edx
  41017a:	pop    edx
  41017b:	lods   al,BYTE PTR ds:[esi]
  41017c:	xchg   esp,eax
  41017d:	inc    ebp
  41017e:	sub    al,0x8b
  410180:	daa    
  410181:	fstp   TBYTE PTR [eax-0x46d502ac]
  410187:	cmovg  ebx,eax
  41018a:	(bad)  
  41018b:	fnstenv [edi+0x77]
  41018e:	(bad)  
  41018f:	push   esp
  410190:	stc    
  410191:	xchg   edi,eax
  410192:	mov    edx,0xf3c266a0
  410197:	mov    bh,0x52
  410199:	lods   al,BYTE PTR ds:[esi]
  41019a:	je     0x410156
  41019c:	mov    ds:0xf0a76126,al
  4101a1:	and    al,0xcc
  4101a3:	mov    ebx,0x95785483
  4101a8:	inc    edx
  4101a9:	adc    al,0x40
  4101ab:	or     cl,ah
  4101ad:	pop    es
  4101ae:	popa   
  4101af:	jae    0x4101f0
  4101b1:	cmp    BYTE PTR [ecx+0x76],al
  4101b4:	xchg   edi,eax
  4101b5:	push   eax
  4101b6:	bound  esp,QWORD PTR [ecx-0x35]
  4101b9:	mov    al,ds:0x90c1a59b
  4101be:	ds mov ebp,0xb43f7bb8
  4101c4:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4101c6:	or     ebp,DWORD PTR [ecx-0x71]
  4101c9:	inc    eax
  4101ca:	push   esi
  4101cb:	test   BYTE PTR [ecx+0x29],0xa3
  4101cf:	xchg   edx,eax
  4101d0:	addr16 jg 0x4101ab
  4101d3:	and    dl,BYTE PTR ds:0x1cbb3778
  4101d9:	jbe    0x4101ec
  4101db:	out    0x7a,eax
  4101dd:	xor    al,0x79
  4101df:	shl    DWORD PTR [ebx+0x9],1
  4101e2:	or     al,0xb2
  4101e4:	mov    ecx,0x8d169e07
  4101e9:	es out dx,al
  4101eb:	inc    esi
  4101ec:	add    DWORD PTR ds:0xf0d7f5f,esi
  4101f2:	clc    
  4101f3:	popa   
  4101f4:	int3   
  4101f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101f6:	inc    esp
  4101f7:	stos   BYTE PTR es:[edi],al
  4101f8:	add    DWORD PTR [edx-0x4aaf5c2a],ebx
  4101fe:	jae    0x410204
  410200:	aad    0x90
  410202:	lds    eax,FWORD PTR [esi]
  410204:	outs   dx,BYTE PTR ds:[esi]
  410205:	sti    
  410206:	aas    
  410207:	and    DWORD PTR [esi+0x65],eax
  41020a:	cmp    DWORD PTR [esi+0x24],esp
  41020d:	mov    bh,0xf
  41020f:	inc    eax
  410210:	and    cl,BYTE PTR [esi]
  410212:	xor    ebx,DWORD PTR [edx+0x6c14beb4]
  410218:	push   es
  410219:	adc    edx,DWORD PTR [ebx-0x7]
  41021c:	pop    es
  41021d:	push   0x65
  41021f:	(bad)  
  410221:	jecxz  0x410279
  410223:	sbb    al,0x6b
  410225:	mov    ah,0x93
  410227:	dec    edi
  410228:	nop    DWORD PTR [eax-0x55676681]
  41022f:	dec    esi
  410230:	ret    
  410231:	pop    eax
  410232:	pop    ss
  410233:	lahf   
  410234:	fcomp  QWORD PTR [edx]
  410236:	jne    0x410219
  410238:	mov    ch,0x8f
  41023a:	pop    edi
  41023b:	out    dx,eax
  41023c:	xchg   BYTE PTR [edi-0x74053d47],bh
  410242:	aas    
  410243:	sub    eax,0x101b0310
  410248:	(bad)  [ebp+0x593f7d1b]
  41024e:	add    eax,0x2a3cd8af
  410253:	sbb    eax,0x3f4b319e
  410258:	outs   dx,DWORD PTR ds:[esi]
  410259:	xchg   edi,eax
  41025a:	cdq    
  41025b:	jle    0x4102ab
  41025d:	adc    edi,eax
  41025f:	or     eax,0xac3e7e10
  410264:	inc    edx
  410265:	mov    edi,gs
  410267:	loope  0x410238
  410269:	leave  
  41026a:	jne    0x4102a3
  41026c:	add    al,0x92
  41026e:	push   es
  41026f:	dec    eax
  410270:	push   ecx
  410271:	ficomp DWORD PTR [esi+0x6a]
  410274:	inc    ecx
  410275:	mov    al,ds:0x4fcb4a61
  41027a:	cli    
  41027b:	push   ebx
  41027c:	or     BYTE PTR [edx],0x7e
  41027f:	nop
  410280:	addr16 jne 0x4102b7
  410283:	stc    
  410284:	packuswb mm7,QWORD PTR [ebx-0x19]
  410288:	out    0x8f,eax
  41028a:	add    al,0x84
  41028c:	push   ds
  41028d:	mov    eax,0xe803addf
  410292:	add    DWORD PTR [ecx-0x3e],eax
  410295:	jne    0x410312
  410297:	dec    ecx
  410298:	cmp    DWORD PTR [edx+0x37],edi
  41029b:	inc    edi
  41029c:	push   cs
  41029d:	imul   edi,DWORD PTR [ecx-0x404f2e2f],0xcdf625db
  4102a7:	xor    edx,esi
  4102a9:	(bad)  
  4102ab:	or     DWORD PTR [ecx],ebx
  4102ad:	in     al,0x9
  4102af:	fisub  DWORD PTR [esi+0x35]
  4102b2:	mov    edx,0xe2e7cf4a
  4102b7:	loop   0x410304
  4102b9:	out    0x9f,eax
  4102bb:	mov    al,ds:0x6a15fd4f
  4102c0:	cmp    DWORD PTR [eax+esi*8+0x7b],ebp
  4102c4:	adc    eax,0x53c7fa16
  4102c9:	ror    DWORD PTR [eax+edi*2],0x7d
  4102cd:	les    esp,FWORD PTR [esi-0x6e]
  4102d0:	mov    esi,0xbb105700
  4102d5:	xor    al,0xb5
  4102d7:	and    DWORD PTR [ebp-0x44],0xe6349838
  4102de:	mov    cl,BYTE PTR [eax+eiz*1]
  4102e1:	pop    ecx
  4102e2:	(bad)  
  4102e3:	jo     0x4102af
  4102e5:	scas   al,BYTE PTR es:[edi]
  4102e6:	loop   0x410279
  4102e8:	adc    eax,0x2e5ad444
  4102ed:	test   DWORD PTR [ecx+0x9],edi
  4102f0:	jl     0x410322
  4102f2:	test   al,0x98
  4102f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102f5:	fisubr WORD PTR [ecx]
  4102f7:	sub    BYTE PTR [eax-0x7d],0x30
  4102fb:	loope  0x4102b3
  4102fd:	xchg   edx,eax
  4102fe:	fucomi st,st(0)
  410300:	inc    ecx
  410301:	sub    bh,BYTE PTR [eax-0x4490d73c]
  410307:	ins    DWORD PTR es:[edi],dx
  410308:	loop   0x4102d9
  41030a:	pop    esp
  41030b:	out    0x74,eax
  41030d:	leave  
  41030e:	mov    ds:0xde949857,eax
  410313:	or     edx,DWORD PTR [edx-0x76aa4fce]
  410319:	jb     0x4102b6
  41031b:	xchg   ebx,eax
  41031c:	or     eax,0x28114f9
  410321:	test   al,0xa6
  410323:	rcl    BYTE PTR [ebx],1
  410325:	adc    BYTE PTR [edx+0x3521b4cc],bl
  41032b:	pop    ds
  41032c:	add    eax,0x551157eb
  410331:	rol    DWORD PTR [edx],0xfe
  410334:	dec    esp
  410335:	stc    
  410336:	jbe    0x410369
  410338:	imul   ebx,DWORD PTR [esp+edx*8+0x128a828c],0xd855679f
  410343:	jmp    0x1b53:0xa2bf4292
  41034a:	jmp    0xbb2e7fdf
  41034f:	lds    esi,FWORD PTR [edi]
  410351:	sahf   
  410352:	rol    BYTE PTR [ebp-0xdeb0529],cl
  410358:	cmp    dl,BYTE PTR [edx-0x1a]
  41035b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41035c:	mov    ebp,DWORD PTR [eax]
  41035e:	ret    0x26aa
  410361:	(bad)  
  410362:	sbb    eax,0xc346c9e1
  410367:	xchg   DWORD PTR [esi+0x2d],edi
  41036a:	xor    DWORD PTR [edi],eax
  41036c:	aam    0xd9
  41036e:	push   es
  41036f:	shr    BYTE PTR [ebx-0x3e],cl
  410372:	fidivr WORD PTR [edi-0x6b34311b]
  410378:	cmp    DWORD PTR [eax+0x41],esi
  41037b:	(bad)  
  41037c:	cld    
  41037d:	xor    ebp,DWORD PTR [eax-0x507b56b2]
  410383:	and    BYTE PTR ss:0x7f50b01c,dl
  41038a:	adc    ebp,ebx
  41038c:	nop
  41038d:	push   0xffffffa1
  41038f:	outs   dx,BYTE PTR ds:[esi]
  410390:	leave  
  410391:	mov    dl,BYTE PTR [edx-0x22564f7a]
  410397:	clc    
  410398:	jmp    0x30e66ecb
  41039d:	outs   dx,BYTE PTR ds:[esi]
  41039e:	iret   
  41039f:	cmp    eax,0x1a54f5b2
  4103a4:	mov    WORD PTR [edi+edi*2+0x59],fs
  4103a8:	xor    dl,bh
  4103aa:	xor    al,0x81
  4103ac:	js     0x410403
  4103ae:	adc    DWORD PTR [eax+0x2c],edi
  4103b1:	xchg   DWORD PTR [eax+0x5c6e9a58],ebp
  4103b7:	aad    0x2f
  4103b9:	jmp    0xa23686c9
  4103be:	sbb    ecx,DWORD PTR [ecx-0x624c0efa]
  4103c4:	add    BYTE PTR [esp+ebx*1+0x2669ad24],al
  4103cb:	fucom  st(7)
  4103cd:	lea    esi,[edi]
  4103cf:	daa    
  4103d0:	dec    esi
  4103d1:	mov    ds:0x8f0411d8,eax
  4103d6:	and    cl,cl
  4103d8:	pushf  
  4103d9:	jmp    0x1d66:0x508399a4
  4103e0:	pop    edx
  4103e1:	jecxz  0x410388
  4103e3:	pop    eax
  4103e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103e5:	outs   dx,BYTE PTR ds:[esi]
  4103e6:	gs mov ah,0xe5
  4103e9:	push   ebx
  4103ea:	fs loope 0x410467
  4103ed:	cwde   
  4103ee:	fistp  QWORD PTR [esi+ebp*1+0x24]
  4103f2:	mov    al,dl
  4103f4:	and    BYTE PTR [eax-0x35],0x96
  4103f8:	repz cs sub dl,0xd7
  4103fd:	repnz ds xchg ebx,ecx
  410401:	pushf  
  410402:	adc    eax,0x3dfb44cf
  410407:	leave  
  410408:	xchg   BYTE PTR [ebx+ebx*4-0x46],dh
  41040c:	mov    esp,0x7196b463
  410411:	jne    0x4103d9
  410413:	push   ss
  410414:	cwde   
  410415:	jmp    0x410490
  410417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410418:	add    BYTE PTR [edx+0x2d],ah
  41041b:	jb     0x4103ff
  41041d:	stos   BYTE PTR es:[edi],al
  41041e:	lods   eax,DWORD PTR ds:[esi]
  41041f:	mov    ebx,0xf0f89f1b
  410424:	jns    0x41048e
  410426:	popf   
  410427:	inc    sp
  410429:	xchg   edx,eax
  41042a:	sti    
  41042b:	and    al,0x3f
  41042d:	std    
  41042e:	cmp    ebp,ebx
  410430:	stos   BYTE PTR es:[edi],al
  410431:	imul   ecx,DWORD PTR [ecx],0x53
  410434:	test   al,0x67
  410436:	lahf   
  410437:	sub    ch,BYTE PTR [edi+ebp*4-0x11ee0b12]
  41043e:	jae    0xc6d3c676
  410444:	leave  
  410445:	add    eax,0x9d441234
  41044a:	mov    eax,DWORD PTR [ebp-0x22]
  41044d:	icebp  
  41044e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41044f:	xor    DWORD PTR [edx-0x4cd5a027],ecx
  410455:	or     dl,dh
  410457:	adc    eax,0xab1a2935
  41045c:	push   edx
  41045d:	mov    BYTE PTR [edi+0x1bd15b5e],ah
  410463:	ds retf 0xe1e9
  410467:	fcom   QWORD PTR ds:0xb97468e4
  41046d:	inc    eax
  41046e:	(bad)  
  41046f:	jmp    0xb74c:0xb1706842
  410476:	jnp    0x4104cd
  410478:	jo     0x410400
  41047a:	inc    BYTE PTR [eax+ebp*4]
  41047d:	xlat   BYTE PTR ds:[ebx]
  41047e:	fxch   st(4)
  410480:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410481:	pop    es
  410482:	imul   edx,DWORD PTR [ebx-0x27],0xfffffff7
  410486:	out    dx,al
  410487:	cmp    edx,DWORD PTR [ebp-0x24]
  41048a:	cmp    al,0x24
  41048c:	dec    ebp
  41048d:	or     al,0x4
  41048f:	scas   al,BYTE PTR es:[edi]
  410490:	ret    
  410491:	inc    esp
  410492:	aad    0x21
  410494:	push   edi
  410495:	or     ah,0x2c
  410498:	call   0xd597:0x46bb4994
  41049f:	pop    edx
  4104a0:	cmp    al,0x44
  4104a2:	popf   
  4104a3:	arpl   sp,di
  4104a5:	test   BYTE PTR [eax-0x17],bl
  4104a8:	push   ebp
  4104a9:	ss push ebp
  4104ab:	add    al,ch
  4104ad:	inc    ebx
  4104ae:	push   edx
  4104af:	push   ebp
  4104b0:	jne    0x4104e1
  4104b2:	jl     0x410496
  4104b4:	cmp    edi,DWORD PTR [esi]
  4104b6:	jl     0x4104bd
  4104b8:	sub    al,0x73
  4104ba:	in     al,0x10
  4104bc:	fcomip st,st(7)
  4104be:	jge    0x4104a8
  4104c0:	fimul  WORD PTR [edx+0x3d]
  4104c3:	sbb    al,0x44
  4104c5:	push   0xe1162bc1
  4104ca:	rcr    DWORD PTR [ecx+0x4a],cl
  4104cd:	adc    al,ah
  4104cf:	inc    ebp
  4104d0:	out    0xc7,eax
  4104d2:	jne    0x41051d
  4104d4:	enter  0x971b,0x55
  4104d8:	fmulp  st(7),st
  4104da:	pop    ebx
  4104db:	fstp   TBYTE PTR [edi-0x563cded3]
  4104e1:	push   ebp
  4104e2:	push   esi
  4104e3:	mov    bl,0x6b
  4104e5:	loope  0x410477
  4104e7:	stos   DWORD PTR es:[edi],eax
  4104e8:	shl    edi,0xd
  4104eb:	outs   dx,BYTE PTR ds:[esi]
  4104ec:	xchg   edx,eax
  4104ed:	jmp    0x410516
  4104ef:	call   0x7c5d:0x3019af73
  4104f6:	xchg   ebx,eax
  4104f7:	ja     0x41054e
  4104f9:	call   0x8e1c:0xe7dbf789
  410500:	xchg   DWORD PTR [ebx*2-0x5abace60],eax
  410507:	pop    ebx
  410508:	add    al,0xd4
  41050a:	pop    ecx
  41050b:	pop    ss
  41050c:	cli    
  41050d:	mov    ebp,0x51874db
  410512:	xchg   DWORD PTR [esi-0x3ec38844],eax
  410518:	pop    ds
  410519:	or     ah,bh
  41051b:	sbb    BYTE PTR [ecx-0x5a],cl
  41051e:	js     0x41058a
  410520:	jmp    DWORD PTR [ebx+0x4d]
  410523:	stos   DWORD PTR es:[edi],eax
  410524:	sub    bh,BYTE PTR [ebx+0x486ae7aa]
  41052a:	pop    es
  41052b:	xchg   esi,eax
  41052c:	pop    edi
  41052d:	gs hlt 
  41052f:	sbb    eax,0x15dd6ca1
  410534:	sub    eax,0xb9cac0b4
  410539:	sbb    eax,0x8c5bcdbb
  41053e:	push   es
  41053f:	adc    eax,0x474a9796
  410544:	jns    0x410510
  410546:	adc    DWORD PTR [esi-0x53440117],ebp
  41054c:	pop    ds
  41054d:	inc    esp
  41054e:	retf   
  41054f:	mov    ah,0xfb
  410551:	repnz xchg esi,eax
  410553:	loopne 0x4104f8
  410555:	ret    
  410556:	or     esi,DWORD PTR [edx+0x51]
  410559:	xor    ah,BYTE PTR [esi+0x16eedfb9]
  41055f:	sub    BYTE PTR [esi+0x5],0xce
  410563:	cli    
  410564:	sub    eax,0xcd333601
  410569:	lods   al,BYTE PTR ds:[esi]
  41056a:	adc    BYTE PTR [edx+0x66],dh
  41056d:	fcmovnu st,st(2)
  41056f:	mov    es,esi
  410571:	bound  ebp,QWORD PTR [ecx]
  410573:	mov    edx,0x825982d5
  410578:	push   edi
  410579:	aam    0x5a
  41057b:	scas   al,BYTE PTR es:[edi]
  41057c:	loope  0x410586
  41057e:	mov    cl,0xac
  410580:	in     al,0xdf
  410582:	call   0xe415:0xe8097be6
  410589:	fiadd  DWORD PTR [edi+0x3a]
  41058c:	sub    eax,0xaf561c9b
  410591:	jae    0x410572
  410593:	test   eax,0x41308358
  410598:	pop    esp
  410599:	mov    eax,0xf131f049
  41059e:	dec    edi
  41059f:	pop    edx
  4105a0:	jno    0x4105bd
  4105a2:	test   eax,0xa0434a06
  4105a8:	sbb    ecx,0x43
  4105ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105ac:	ret    0xaf1b
  4105af:	lds    ebx,FWORD PTR [edx+0x3629ae8d]
  4105b5:	xchg   edi,eax
  4105b6:	pop    ebp
  4105b7:	loopne 0x41062f
  4105b9:	jmp    0x410613
  4105bb:	inc    edi
  4105bc:	pop    esp
  4105bd:	repnz bound eax,QWORD PTR [ebx+eiz*1-0x1]
  4105c2:	test   DWORD PTR [edi],eax
  4105c4:	jnp    0x41054a
  4105c6:	retf   0xe6dc
  4105c9:	js     0x410621
  4105cb:	jge    0x4105ec
  4105cd:	jge    0x4105c6
  4105cf:	xchg   ebp,eax
  4105d0:	mov    eax,ds:0xbf94d10b
  4105d5:	adc    cl,BYTE PTR [ebx]
  4105d7:	inc    ebx
  4105d8:	in     al,dx
  4105d9:	or     esp,eax
  4105db:	rcl    BYTE PTR [ebx-0x759c6f4],1
  4105e1:	(bad)  
  4105e2:	fistp  WORD PTR [eax+edx*8-0x6]
  4105e6:	mov    bl,0x4d
  4105e8:	cld    
  4105e9:	sub    al,0x20
  4105eb:	(bad)  
  4105ec:	enter  0x62df,0x24
  4105f0:	push   ss
  4105f1:	sti    
  4105f2:	xor    dh,BYTE PTR [esi+0x70]
  4105f5:	dec    esp
  4105f6:	sub    eax,0x41ae0d2f
  4105fb:	cmc    
  4105fc:	scas   eax,DWORD PTR es:[edi]
  4105fd:	sbb    al,0x68
  4105ff:	pop    es
  410600:	test   al,0x5a
  410602:	xor    ebp,esp
  410604:	xchg   esi,eax
  410605:	(bad)  
  410606:	pop    ebx
  410607:	aad    0xdd
  410609:	mov    al,0xcb
  41060b:	xchg   edi,eax
  41060c:	xor    al,bl
  41060e:	and    ecx,DWORD PTR [edx-0x1f75f869]
  410614:	push   ss
  410615:	sar    DWORD PTR [edi],0x5e
  410618:	jnp    0x41066e
  41061a:	loopne 0x4105cd
  41061c:	add    al,0x5e
  41061e:	mov    esp,0x6cbfac0c
  410623:	adc    DWORD PTR [eax],esp
  410625:	sub    DWORD PTR [ecx],0xffffff84
  410628:	mov    dh,0x9f
  41062a:	mov    ebp,0x8afe047e
  41062f:	(bad)  
  410630:	iret   
  410631:	xchg   ebp,eax
  410632:	leave  
  410633:	cmp    eax,0x86ddc2a5
  410638:	mov    eax,ds:0xb64037ec
  41063d:	stc    
  41063e:	pop    es
  41063f:	xchg   edi,eax
  410640:	ins    BYTE PTR es:[edi],dx
  410641:	enter  0xde75,0xec
  410645:	push   edi
  410646:	popf   
  410647:	dec    esp
  410648:	stc    
  410649:	arpl   WORD PTR [edi],dx
  41064b:	and    BYTE PTR [ecx-0x32ee75d1],ah
  410651:	sti    
  410652:	pop    esi
  410653:	mov    WORD PTR [ecx-0x1b],gs
  410656:	pop    es
  410657:	cmp    bl,BYTE PTR [ecx]
  410659:	cmp    ch,ah
  41065b:	out    0xec,eax
  41065d:	stos   BYTE PTR es:[edi],al
  41065e:	pop    esp
  41065f:	in     eax,0xef
  410661:	jl     0x4105fa
  410663:	lods   eax,DWORD PTR ds:[esi]
  410664:	les    ecx,FWORD PTR [edi]
  410666:	pop    es
  410667:	daa    
  410668:	push   0x18
  41066a:	shl    BYTE PTR [eax],cl
  41066c:	mov    al,ds:0x4f9c57f
  410671:	sti    
  410672:	into   
  410673:	dec    eax
  410674:	push   eax
  410675:	dec    ebx
  410676:	dec    esp
  410677:	cwd    
  410679:	lods   al,BYTE PTR ds:[esi]
  41067a:	loope  0x4106ea
  41067c:	jbe    0x410691
  41067e:	das    
  41067f:	fld    QWORD PTR [esi+0xa2cfffb]
  410685:	pop    es
  410686:	jmp    0x4106fe
  410688:	mov    esi,0xe0472345
  41068d:	dec    esi
  41068e:	(bad)
  410692:	xchg   DWORD PTR [ebp-0x21],eax
  410695:	and    ecx,0xffffffeb
  410698:	jge    0x410694
  41069a:	mov    ds:0x8161bf73,eax
  41069f:	dec    ebp
  4106a0:	dec    edi
  4106a1:	mov    edx,0xdab39ecd
  4106a6:	xor    ecx,0xffffffa9
  4106a9:	repnz retf 0x5ea7
  4106ad:	push   esi
  4106ae:	outs   dx,BYTE PTR ds:[esi]
  4106af:	xchg   ebp,eax
  4106b0:	xchg   BYTE PTR [esi+ebx*1-0x30dea81e],dl
  4106b7:	add    eax,0xd755c41b
  4106bc:	imul   eax,DWORD PTR [esp+edx*4-0x41],0xffffff9d
  4106c1:	xor    ebx,esi
  4106c3:	scas   al,BYTE PTR es:[edi]
  4106c4:	cld    
  4106c5:	mov    ecx,ebx
  4106c7:	and    esp,DWORD PTR [edx-0x31]
  4106ca:	mov    WORD PTR [ebx+eax*2-0xe],?
  4106ce:	stc    
  4106cf:	xchg   BYTE PTR [edi+0x3c],ah
  4106d2:	jp     0x4106e9
  4106d4:	fadd   DWORD PTR [ecx+0xfa09289]
  4106da:	out    dx,al
  4106db:	cmc    
  4106dc:	sub    al,0x84
  4106de:	push   ss
  4106df:	cmp    eax,0xc334457
  4106e4:	mov    ds:0x13745ea,al
  4106e9:	daa    
  4106ea:	out    dx,eax
  4106eb:	data16 xor al,0xc6
  4106ee:	mov    ch,dl
  4106f0:	mov    ebx,edi
  4106f2:	neg    DWORD PTR [eax-0x44]
  4106f5:	sub    esp,ebp
  4106f7:	icebp  
  4106f8:	aad    0x6b
  4106fa:	xchg   ebp,eax
  4106fb:	ds leave 
  4106fd:	inc    ecx
  4106fe:	mov    ecx,0x9d4db7bb
  410703:	lods   eax,DWORD PTR ds:[esi]
  410704:	out    dx,al
  410705:	or     BYTE PTR [ebp-0x7f],dl
  410708:	jecxz  0x410716
  41070a:	and    DWORD PTR [esi-0xb],esi
  41070d:	ins    BYTE PTR es:[edi],dx
  41070e:	add    ch,BYTE PTR [ebx+ecx*4+0x11d850e]
  410715:	(bad)  
  410716:	popf   
  410717:	push   ds
  410718:	in     al,dx
  410719:	push   ss
  41071a:	jnp    0x4106f8
  41071c:	loope  0x410760
  41071e:	in     al,0xfc
  410720:	pop    esp
  410721:	mov    dl,0xfa
  410723:	in     eax,0x3f
  410725:	jle    0x410751
  410727:	fstp   TBYTE PTR [esi]
  410729:	mov    cl,0xfd
  41072b:	ds mov dl,0x8e
  41072e:	ins    DWORD PTR es:[edi],dx
  41072f:	or     al,0xfc
  410731:	pop    ds
  410732:	pop    ds
  410733:	mov    DWORD PTR [ebx+0x61],edi
  410736:	pop    ss
  410737:	fsubr  DWORD PTR [edx+0x4f528618]
  41073e:	dec    ecx
  41073f:	pop    ebx
  410740:	sar    BYTE PTR ss:[edx+ebx*2-0x4d60e841],1
  410748:	ins    DWORD PTR es:[edi],dx
  410749:	sub    BYTE PTR [eax+0x1d],al
  41074c:	cld    
  41074d:	fcmovnb st,st(3)
  41074f:	dec    ah
  410751:	sub    edx,ecx
  410753:	aas    
  410754:	mov    ecx,0x4f6848df
  410759:	mov    al,ds:0x58219cd1
  41075e:	sub    ch,cl
  410760:	xchg   edx,eax
  410761:	(bad)  ss:[bx+di-0x61]
  410766:	imul   esp,DWORD PTR [ebx+0x32372d8d],0x561a6c20
  410770:	jns    0x410725
  410772:	push   cs
  410773:	cld    
  410774:	jbe    0x410739
  410776:	sti    
  410777:	push   ss
  410778:	pop    ds
  410779:	dec    esi
  41077a:	jmp    0x70e5:0xd823b6ba
  410781:	hlt    
  410782:	jnp    0x410721
  410784:	scas   eax,DWORD PTR es:[edi]
  410785:	dec    edx
  410786:	mov    ds:0xa1e71754,eax
  41078b:	and    eax,0x78e9a8f4
  410790:	sub    DWORD PTR [ecx+0x99b2207],ecx
  410796:	jp     0x41074e
  410798:	das    
  410799:	mov    bl,BYTE PTR [eax+edi*4-0x6d743f04]
  4107a0:	dec    edx
  4107a1:	or     DWORD PTR [eax],0xffffffd2
  4107a4:	out    0xe6,eax
  4107a6:	loope  0x4107ae
  4107a8:	jno    0x410797
  4107aa:	dec    ecx
  4107ab:	pop    ds
  4107ac:	cmc    
  4107ad:	mov    dh,0x55
  4107af:	ficom  WORD PTR [ecx-0x31]
  4107b2:	out    dx,al
  4107b3:	xor    dh,BYTE PTR [ebx+0x9]
  4107b6:	sbb    DWORD PTR [edi+ebp*8],0x50b1f247
  4107bd:	push   esp
  4107be:	es out 0xb7,al
  4107c1:	mov    DWORD PTR [ebp+0x7dbe4bf3],ebx
  4107c7:	jnp    0x41079b
  4107c9:	adc    eax,0xcc2ee3db
  4107ce:	lock and eax,0xe3b0881
  4107d4:	or     eax,0x4ec5d1c
  4107d9:	(bad)  
  4107db:	adc    bl,0xaa
  4107de:	push   ss
  4107df:	outs   dx,DWORD PTR ds:[esi]
  4107e0:	xchg   esp,eax
  4107e1:	aaa    
  4107e2:	xchg   esp,eax
  4107e3:	cli    
  4107e4:	popf   
  4107e5:	mov    ebx,0x75afac38
  4107ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107eb:	out    dx,eax
  4107ec:	pusha  
  4107ed:	hlt    
  4107ee:	jg     0x41078a
  4107f0:	inc    ebx
  4107f1:	fistp  DWORD PTR ds:0x90bc
  4107f6:	rcl    BYTE PTR [ebx-0x658698ad],cl
  4107fc:	outs   dx,BYTE PTR ds:[esi]
  4107fd:	jmp    DWORD PTR [esi]
  4107ff:	mov    bl,0xb0
  410801:	pop    es
  410802:	fdiv   DWORD PTR [ebx+0x57]
  410805:	rcr    BYTE PTR [ebp-0x2ef6aa14],1
  41080b:	sub    al,0x96
  41080d:	mov    dl,0xd0
  41080f:	ja     0x410881
  410811:	cmc    
  410812:	inc    ebx
  410813:	jne    0x41085d
  410815:	sbb    ebp,ebp
  410817:	enter  0xdb15,0xe1
  41081b:	inc    esi
  41081c:	dec    eax
  41081d:	xor    BYTE PTR [eax],ah
  41081f:	not    DWORD PTR [ebx-0x39]
  410822:	ret    
  410823:	xor    eax,0xee578bb0
  410828:	pop    ecx
  410829:	or     eax,0xb6e7c0a4
  41082e:	jae    0x4107e0
  410830:	out    dx,eax
  410831:	aam    0xd1
  410833:	retf   
  410834:	xchg   BYTE PTR [ecx],dl
  410836:	pop    ebp
  410837:	jmp    0x140bb3e4
  41083c:	enter  0xae5f,0x2d
  410840:	mov    bh,bl
  410842:	inc    ebx
  410843:	das    
  410844:	repnz pop edi
  410846:	inc    ecx
  410847:	outs   dx,BYTE PTR ds:[esi]
  410848:	and    dl,0x13
  41084b:	popf   
  41084c:	pop    eax
  41084d:	pop    eax
  41084e:	sbb    eax,0x3b01d21c
  410853:	push   cs
  410854:	inc    ebp
  410855:	xchg   BYTE PTR [ecx],bh
  410857:	pushf  
  410858:	(bad)  
  410859:	out    0x17,eax
  41085b:	push   ebp
  41085c:	cs pushf 
  41085e:	in     al,dx
  41085f:	ret    
  410860:	sar    BYTE PTR [esp+esi*4],0xbd
  410864:	out    dx,al
  410865:	adc    esp,DWORD PTR [edi]
  410867:	sbb    esp,eax
  410869:	sbb    edx,esp
  41086b:	and    DWORD PTR [edx],ebp
  41086d:	xor    al,0xb1
  41086f:	adc    BYTE PTR [ebx],0xd2
  410872:	ds popa 
  410874:	mov    bl,0x29
  410876:	es inc eax
  410878:	stc    
  410879:	ja     0x4108ee
  41087b:	int    0xfe
  41087d:	mov    eax,0xaae8309d
  410882:	add    eax,0xc5a9f94
  410887:	sub    bl,BYTE PTR [edi-0x27]
  41088a:	pop    ss
  41088b:	mov    ds:0xfd075624,eax
  410890:	or     DWORD PTR [esp+ecx*1-0x26],esp
  410894:	push   edi
  410895:	mov    ds:0x195a9355,eax
  41089a:	dec    esp
  41089b:	in     eax,dx
  41089c:	lea    ecx,[edi]
  41089e:	mov    al,BYTE PTR [ecx]
  4108a0:	add    eax,0xf1d64b1d
  4108a5:	mov    edx,0x7b942f9b
  4108aa:	dec    ebx
  4108ab:	mov    bl,0x1
  4108ad:	mov    cl,BYTE PTR [ebx]
  4108af:	push   ecx
  4108b0:	xlat   BYTE PTR ds:[ebx]
  4108b1:	dec    esp
  4108b2:	aad    0x81
  4108b4:	add    eax,0xe1738923
  4108b9:	pop    edx
  4108ba:	icebp  
  4108bb:	jle    0x41085b
  4108bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108be:	inc    ebx
  4108bf:	lea    ecx,[edi+0x4a]
  4108c2:	pusha  
  4108c3:	pop    ebx
  4108c4:	xchg   esi,eax
  4108c5:	push   eax
  4108c6:	retf   
  4108c7:	dec    eax
  4108c8:	push   edx
  4108c9:	and    DWORD PTR ds:0x3f898c99,ebp
  4108cf:	sbb    al,0xf
  4108d1:	clc    
  4108d2:	fsub   DWORD PTR [esi]
  4108d4:	and    eax,0x95a45ab3
  4108d9:	xchg   edi,eax
  4108da:	xchg   esp,eax
  4108db:	sub    al,BYTE PTR [eax-0x7e1955cf]
  4108e1:	dec    edi
  4108e2:	cmc    
  4108e3:	mov    DWORD PTR [edi-0x18],esi
  4108e6:	(bad)  
  4108e7:	mov    ds:0x78d40232,eax
  4108ec:	punpckldq mm4,DWORD PTR [esi-0x3c]
  4108f0:	mov    eax,ds:0x8f7e755
  4108f5:	sbb    al,0x90
  4108f7:	push   ebx
  4108f8:	jp     0x410899
  4108fa:	mov    al,ds:0x344bd54a
  4108ff:	loop   0x410911
  410901:	mov    al,0x4a
  410903:	test   al,0xc5
  410905:	repz mov edx,0x736d6fef
  41090b:	sbb    bl,ch
  41090d:	adc    bh,BYTE PTR [ecx+ebp*4+0x7f]
  410911:	or     BYTE PTR [edx-0x36],ch
  410914:	jnp    0x410921
  410916:	mov    bl,0xe3
  410918:	inc    eax
  410919:	pushf  
  41091a:	out    dx,eax
  41091b:	xor    DWORD PTR [ebp+0xdd17176],eax
  410921:	push   eax
  410922:	jmp    0x410918
  410924:	jae    0x4108ac
  410926:	jns    0x410923
  410928:	retf   0x256
  41092b:	xchg   esi,eax
  41092c:	bound  ecx,QWORD PTR [edi+edi*1]
  41092f:	mov    ecx,0xbdd0ba52
  410934:	aam    0xac
  410936:	and    ah,cl
  410938:	mov    eax,0x3bb9819a
  41093d:	adc    ch,dh
  41093f:	cmp    BYTE PTR [eax],bh
  410941:	outs   dx,BYTE PTR ds:[esi]
  410942:	xor    ebx,DWORD PTR [edi]
  410944:	mov    eax,ds:0x51828a59
  410949:	(bad)  
  41094a:	imul   esi,DWORD PTR [ecx+edi*4],0x63bfe774
  410951:	jb     0x41096a
  410953:	xor    al,0xb3
  410955:	jp     0x410923
  410957:	ins    DWORD PTR es:[edi],dx
  410958:	inc    esp
  410959:	fidiv  DWORD PTR [ebx]
  41095b:	push   ebp
  41095c:	mov    esi,0x5aa128ec
  410961:	sub    bh,BYTE PTR [edx+0x7b7a35ff]
  410967:	stos   DWORD PTR es:[edi],eax
  410968:	pop    eax
  410969:	jecxz  0x41098c
  41096b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41096c:	in     eax,dx
  41096d:	icebp  
  41096e:	lock int 0x54
  410971:	mov    esi,0x47ec164b
  410976:	neg    BYTE PTR [eax-0x35]
  410979:	and    al,0x44
  41097b:	add    DWORD PTR [ebp-0x556e7c05],ebp
  410981:	mov    ah,BYTE PTR [ebp-0x1]
  410984:	sub    eax,esp
  410986:	loop   0x4109a0
  410988:	lods   al,BYTE PTR ds:[esi]
  410989:	ins    DWORD PTR es:[edi],dx
  41098a:	fnsave [edi]
  41098c:	in     eax,0x8d
  41098e:	aam    0xfd
  410990:	inc    ebx
  410991:	inc    ebx
  410992:	fwait
  410993:	dec    ecx
  410994:	rcr    DWORD PTR [edi+0x52072070],1
  41099a:	mov    esp,0xc2c6efe8
  41099f:	mov    ?,WORD PTR [edx+esi*1]
  4109a2:	rcl    edi,0x7b
  4109a5:	add    ch,BYTE PTR [edx-0x2f6e18ce]
  4109ab:	sahf   
  4109ac:	shl    BYTE PTR ds:0x4ee05c92,cl
  4109b2:	or     DWORD PTR [ecx-0x32],esi
  4109b5:	pop    ds
  4109b6:	in     eax,0x1d
  4109b8:	push   esp
  4109b9:	shr    BYTE PTR ss:[edx-0x5e],cl
  4109bd:	scas   eax,DWORD PTR es:[edi]
  4109be:	mov    WORD PTR [edi],ds
  4109c0:	sti    
  4109c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109c2:	push   es
  4109c3:	and    DWORD PTR [ebp-0x4c],ecx
  4109c6:	adc    dl,dl
  4109c8:	sbb    DWORD PTR [ecx],esp
  4109ca:	daa    
  4109cb:	pop    ecx
  4109cc:	jnp    0x4109f1
  4109ce:	ds inc ebx
  4109d0:	push   edx
  4109d1:	xor    al,0xdd
  4109d3:	fnstsw WORD PTR [esi-0x5bfe6d7]
  4109d9:	fmul   QWORD PTR [ebp+0x430b2c20]
  4109df:	mov    ah,0x6d
  4109e1:	mov    ebx,0x55aca20
  4109e6:	sub    DWORD PTR [ebp+0x179dbe7d],ebx
  4109ec:	inc    ebp
  4109ed:	int    0xcc
  4109ef:	test   al,0xa3
  4109f1:	aad    0xec
  4109f3:	out    dx,al
  4109f4:	into   
  4109f5:	call   0xfe83ca40
  4109fa:	out    0x17,eax
  4109fc:	(bad)  
  4109fd:	fnstcw WORD PTR [ebx-0x6a12e7c]
  410a03:	xor    eax,0x8e4100d
  410a08:	lods   al,BYTE PTR ds:[esi]
  410a09:	xor    al,0xc8
  410a0b:	xor    BYTE PTR [edx],dh
  410a0d:	sub    eax,0x436db62
  410a12:	fstp   TBYTE PTR [esp+edx*2+0x6d681c99]
  410a19:	mov    bl,BYTE PTR [edi]
  410a1b:	dec    edx
  410a1c:	adc    dl,BYTE PTR [edx]
  410a1e:	adc    DWORD PTR [edi],eax
  410a20:	mov    ah,0x69
  410a22:	test   BYTE PTR [esi-0x1b57321f],al
  410a28:	inc    ebx
  410a29:	mov    al,0xd4
  410a2b:	pop    es
  410a2c:	xor    eax,0x269349ab
  410a31:	retf   0xa14
  410a34:	adc    eax,DWORD PTR [ebx-0x467f5c9b]
  410a3a:	pop    eax
  410a3b:	and    BYTE PTR [eax+edi*2-0x54],dh
  410a3f:	cmp    al,ah
  410a41:	test   al,0x2e
  410a43:	or     eax,0x37151d0e
  410a48:	daa    
  410a49:	loop   0x4109dc
  410a4b:	stos   BYTE PTR es:[edi],al
  410a4c:	and    esi,DWORD PTR [ecx+0x19]
  410a4f:	sbb    bh,BYTE PTR [esi+0x6e]
  410a52:	inc    DWORD PTR [esi-0x28]
  410a55:	inc    esi
  410a56:	rcl    BYTE PTR [ecx+0x35],1
  410a59:	icebp  
  410a5a:	xor    eax,0x852903a
  410a5f:	in     eax,dx
  410a60:	push   ecx
  410a61:	dec    esi
  410a62:	cli    
  410a63:	fiadd  DWORD PTR [edx+0x60ed3b6f]
  410a69:	xchg   edi,eax
  410a6a:	stc    
  410a6b:	jbe    0x410a34
  410a6d:	out    0xab,al
  410a6f:	mov    ch,BYTE PTR [ebx]
  410a71:	ret    0xf489
  410a74:	in     eax,dx
  410a75:	xchg   ebx,eax
  410a76:	add    al,0xc6
  410a78:	rol    DWORD PTR [ecx+0x31],cl
  410a7b:	retf   
  410a7c:	retf   0xa0fc
  410a7f:	xlat   BYTE PTR ds:[ebx]
  410a80:	jo     0x410a72
  410a82:	xchg   edx,eax
  410a83:	xor    DWORD PTR [eax+edx*2-0x36],esp
  410a87:	sub    DWORD PTR [ebp+0x49898c1b],edi
  410a8d:	loop   0x410ae3
  410a8f:	xor    eax,0xfd9d9b7c
  410a94:	(bad)  
  410a95:	jo     0x410a28
  410a97:	rol    BYTE PTR [eax-0x6a],1
  410a9a:	mov    es,WORD PTR [esi-0x41228922]
  410aa0:	sahf   
  410aa1:	hlt    
  410aa2:	push   ebx
  410aa3:	stos   BYTE PTR es:[edi],al
  410aa4:	stc    
  410aa5:	mov    dh,BYTE PTR [esi-0x3feb2340]
  410aab:	xor    eax,0x7fde967
  410ab0:	xchg   esp,eax
  410ab1:	push   0x6b
  410ab3:	stos   BYTE PTR es:[edi],al
  410ab4:	push   ds
  410ab5:	scas   eax,DWORD PTR es:[edi]
  410ab6:	clc    
  410ab7:	ja     0x410a9c
  410ab9:	mov    ch,0x4f
  410abb:	jno    0x410ad4
  410abd:	adc    ch,BYTE PTR [eax+0x4c]
  410ac0:	jno    0x410a7b
  410ac2:	test   al,0xf4
  410ac4:	jle    0x410b22
  410ac6:	mov    ecx,DWORD PTR [edx+esi*4+0x33176f5d]
  410acd:	pop    ecx
  410ace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410acf:	lods   eax,DWORD PTR ds:[esi]
  410ad0:	clc    
  410ad1:	je     0x410ae4
  410ad3:	(bad)  
  410ad4:	push   ds
  410ad5:	leave  
  410ad6:	pop    ebp
  410ad7:	arpl   WORD PTR [edi-0x48f5dd79],ax
  410add:	inc    eax
  410ade:	or     edi,edx
  410ae0:	sbb    BYTE PTR [esi],dl
  410ae2:	aas    
  410ae3:	adc    al,0x10
  410ae5:	(bad)
  410ae9:	mov    ch,0x95
  410aeb:	les    ecx,FWORD PTR [edx-0x78f60aaf]
  410af1:	retf   0x55f6
  410af4:	mov    eax,0x4513e9a3
  410af9:	ja     0x410b06
  410afb:	jnp    0x410b18
  410afd:	les    ecx,FWORD PTR ds:0xc90bb96d
  410b03:	test   al,0xe1
  410b05:	int3   
  410b06:	dec    ebp
  410b07:	int3   
  410b08:	adc    BYTE PTR [edi],bh
  410b0a:	mov    ch,0x3b
  410b0c:	adc    edi,DWORD PTR [edx-0x490e951d]
  410b12:	inc    ebp
  410b13:	xor    al,0xb7
  410b15:	inc    ecx
  410b16:	dec    edi
  410b17:	mov    ebp,0xf0a73292
  410b1c:	jmp    0x410b3d
  410b1e:	test   eax,0x84d49aae
  410b23:	push   0xffffffb9
  410b25:	loop   0x410acc
  410b27:	cmp    eax,0x374739ef
  410b2c:	cld    
  410b2d:	dec    esi
  410b2e:	mov    cl,0x76
  410b30:	lfs    ebp,FWORD PTR [edi]
  410b33:	add    eax,DWORD PTR [esi-0x6d15975]
  410b39:	or     BYTE PTR [ecx+0x3d],ah
  410b3c:	sub    dh,ch
  410b3e:	and    al,0x55
  410b40:	and    eax,0xb983c1f7
  410b45:	push   ebp
  410b46:	xlat   BYTE PTR ds:[ebx]
  410b47:	test   al,0x6
  410b49:	mov    ds:0x948a789,al
  410b4e:	nop
  410b4f:	xor    cl,BYTE PTR [ebp-0x13f5887f]
  410b55:	adc    DWORD PTR [esi+0x10],ebx
  410b58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b59:	ficom  DWORD PTR [ebx-0x3d029fb6]
  410b5f:	icebp  
  410b60:	jmp    0x62d1c9a
  410b65:	adc    BYTE PTR [edi+0x2b],0xe4
  410b69:	pop    esi
  410b6a:	sub    BYTE PTR [esi],bl
  410b6c:	aas    
  410b6d:	xor    eax,0x4cf008d0
  410b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b73:	jb     0x410bdf
  410b75:	mov    dh,0x14
  410b77:	dec    eax
  410b78:	and    DWORD PTR [edx-0x49],0x37cd356e
  410b7f:	imul   eax,DWORD PTR [ebx],0x72fdddcd
  410b85:	and    esi,DWORD PTR [edx+0x27bee69a]
  410b8b:	jle    0x410bed
  410b8d:	jecxz  0x410b85
  410b8f:	sub    DWORD PTR [edi],esp
  410b91:	out    dx,al
  410b92:	pop    eax
  410b93:	and    edi,DWORD PTR [esi+0x27]
  410b96:	mov    dh,0x81
  410b98:	(bad)  [eax-0xa]
  410b9b:	out    dx,al
  410b9c:	push   edi
  410b9d:	lods   eax,DWORD PTR ds:[esi]
  410b9e:	popf   
  410b9f:	mov    ds:0xe24cb5ef,eax
  410ba4:	inc    ebp
  410ba5:	call   0x4e3b75fd
  410baa:	clc    
  410bab:	pop    edx
  410bac:	outs   dx,BYTE PTR ds:[esi]
  410bad:	sahf   
  410bae:	pop    ebx
  410baf:	xchg   DWORD PTR [esi+ebp*4+0xf],ebx
  410bb3:	stos   BYTE PTR es:[edi],al
  410bb4:	ss mov esi,0x5373300
  410bba:	clc    
  410bbb:	nop
  410bbc:	repnz popf 
  410bbe:	and    DWORD PTR ds:0xc2f2d890,ecx
  410bc4:	mov    ds:0x8d42d057,eax
  410bc9:	mov    edi,0xab63f2ad
  410bce:	xor    ebp,0x2f
  410bd1:	mov    eax,0xd68d7756
  410bd6:	ficomp WORD PTR [eax+0x499a35b1]
  410bdc:	inc    esp
  410bdd:	xchg   ebp,eax
  410bde:	jge    0x410c5e
  410be0:	out    dx,eax
  410be1:	mov    ah,0x45
  410be3:	cmp    ecx,DWORD PTR [ecx-0x43]
  410be6:	retf   0x5d2d
  410be9:	mov    bh,0xa
  410beb:	add    eax,0xce57a430
  410bf0:	and    esi,DWORD PTR [esi-0x7ecf9c4c]
  410bf6:	add    eax,0x3ed1437
  410bfb:	(bad)  
  410bfc:	or     eax,0x646cc69f
  410c01:	xlat   BYTE PTR ds:[ebx]
  410c02:	mov    dh,0x70
  410c04:	enter  0x538d,0x6
  410c08:	fs jo  0x410c12
  410c0b:	jne    0x410bd9
  410c0d:	cs (bad) 
  410c0f:	sub    edx,DWORD PTR es:[esi]
  410c12:	cmp    ecx,DWORD PTR [esi-0x7b]
  410c15:	out    dx,eax
  410c16:	fdivr  QWORD PTR [esi]
  410c18:	jb     0x410c44
  410c1a:	jo     0x410c7f
  410c1c:	mov    BYTE PTR [edi],cl
  410c1e:	push   ecx
  410c1f:	out    0xd4,al
  410c21:	mov    eax,ds:0x4895152b
  410c26:	mov    al,dh
  410c28:	dec    esp
  410c29:	cld    
  410c2a:	adc    BYTE PTR [ebp-0x25],0x3e
  410c2e:	shl    BYTE PTR [eax+0x2a],1
  410c31:	ja     0x410c59
  410c33:	jle    0x410bce
  410c35:	push   ss
  410c36:	mov    edi,ebp
  410c38:	sbb    DWORD PTR [edx],0xbbe569c
  410c3e:	dec    ebx
  410c3f:	jne    0x410c08
  410c41:	sti    
  410c42:	add    eax,0xf1732f6
  410c47:	adc    eax,0xa3a13fc2
  410c4c:	jmp    0xabd75428
  410c51:	and    eax,0xce1edb09
  410c56:	int3   
  410c57:	jle    0x410c99
  410c59:	mov    ch,dh
  410c5b:	cmp    al,0xda
  410c5d:	retf   
  410c5e:	sbb    BYTE PTR [ebp-0x101dbb48],al
  410c64:	and    ecx,DWORD PTR [ebx-0x12]
  410c67:	push   cs
  410c68:	scas   al,BYTE PTR es:[edi]
  410c69:	vpmulhw xmm7,xmm0,xmm7
  410c6d:	xor    BYTE PTR [ecx+ebp*4],0x6a
  410c71:	and    DWORD PTR [edi+0x8],ebp
  410c74:	mov    esi,0x6bd34366
  410c79:	mov    ecx,0x380d66e5
  410c7e:	dec    ebp
  410c7f:	xchg   ebx,eax
  410c80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c81:	push   ss
  410c82:	imul   ecx,DWORD PTR [edx],0x1714a284
  410c88:	adc    edi,DWORD PTR [ebx+0x2d]
  410c8b:	or     eax,0x3b9fbb84
  410c90:	scas   al,BYTE PTR es:[edi]
  410c91:	in     al,dx
  410c92:	mov    eax,ds:0xe5b5a30
  410c97:	inc    edi
  410c98:	mov    ds:0xa8f852d3,eax
  410c9d:	mov    cl,0xbf
  410c9f:	cli    
  410ca0:	pusha  
  410ca1:	aaa    
  410ca2:	je     0x410d16
  410ca4:	or     DWORD PTR [esi+0x1ff414de],esi
  410caa:	push   esi
  410cab:	shr    ch,1
  410cad:	(bad)  
  410cae:	mov    bl,0x3b
  410cb0:	jmp    0x1b562123
  410cb5:	cmp    ebx,esp
  410cb7:	and    ch,BYTE PTR [ebx+0x23ed4c4e]
  410cbd:	outs   dx,BYTE PTR ds:[esi]
  410cbe:	jecxz  0x410c7a
  410cc0:	loope  0x410c57
  410cc2:	jmp    0x410cf3
  410cc4:	mov    edi,0x4713759f
  410cc9:	enter  0x4212,0xba
  410ccd:	clc    
  410cce:	xchg   edx,edi
  410cd0:	mov    BYTE PTR [edx+0x65],bl
  410cd3:	and    eax,0xe9f63834
  410cd8:	inc    ebp
  410cd9:	cmp    ecx,DWORD PTR [esi+0x1e26fce6]
  410cdf:	pop    esp
  410ce0:	pop    ebx
  410ce1:	mov    WORD PTR ds:0xb85c149c,cs
  410ce7:	mov    edi,0x6f3096ba
  410cec:	xchg   BYTE PTR [eax-0x50],ah
  410cef:	outs   dx,BYTE PTR ds:[esi]
  410cf0:	push   ebp
  410cf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cf2:	imul   ebx,DWORD PTR ds:0x7c19ddf2,0xd5eb3b84
  410cfc:	xchg   esi,eax
  410cfd:	mov    dl,0x5
  410cff:	jo     0x410d1f
  410d01:	pop    esp
  410d02:	call   0xc540:0x1e8326c6
  410d09:	cdq    
  410d0a:	jae    0x410ccc
  410d0c:	mov    esp,0xa05afdea
  410d11:	out    0x73,al
  410d13:	or     al,0xc7
  410d15:	mov    ds:0xe119d83b,eax
  410d1a:	push   esi
  410d1b:	dec    edi
  410d1c:	pop    esp
  410d1d:	(bad)  
  410d1e:	(bad)  
  410d1f:	out    0x2e,eax
  410d21:	mov    ch,0xda
  410d23:	ds out dx,eax
  410d25:	mov    ebp,0xc293926b
  410d2a:	lock mov eax,ds:0x3e739b2b
  410d30:	fcom   st(4)
  410d32:	sbb    edi,0xda80dc3b
  410d38:	xor    edi,eax
  410d3a:	pop    es
  410d3b:	mov    ch,0xb8
  410d3d:	shr    DWORD PTR [ecx-0x2b],cl
  410d40:	imul   BYTE PTR [esi]
  410d42:	inc    ebp
  410d43:	jmp    0x34be:0xffd478d9
  410d4a:	pop    eax
  410d4b:	jl     0x410d12
  410d4d:	ins    BYTE PTR es:[edi],dx
  410d4e:	mov    ss,WORD PTR [esi-0x1e]
  410d51:	lods   eax,DWORD PTR ds:[esi]
  410d52:	sbb    DWORD PTR [ebx+0x6b85c5b5],edi
  410d58:	scas   eax,DWORD PTR es:[edi]
  410d59:	mov    al,ds:0xae30df64
  410d5e:	mov    ch,dl
  410d60:	rcl    ah,1
  410d62:	sbb    edx,DWORD PTR [esi]
  410d64:	mov    esp,0x2abe2131
  410d69:	or     bl,BYTE PTR [eax+0x4d]
  410d6c:	fcmovbe st,st(4)
  410d6e:	sbb    edi,DWORD PTR [esp+edi*2+0x5aeeed8b]
  410d75:	(bad)  
  410d76:	popf   
  410d77:	aaa    
  410d78:	mov    esi,?
  410d7a:	jecxz  0x410d96
  410d7c:	das    
  410d7d:	jbe    0x410d75
  410d7f:	or     BYTE PTR [edi+0x42ae9742],0x6a
  410d86:	and    dl,BYTE PTR ds:0x1488869
  410d8c:	push   cs
  410d8d:	scas   eax,DWORD PTR es:[edi]
  410d8e:	call   ebx
  410d90:	mov    eax,ds:0x1b7ec77e
  410d95:	iret   
  410d96:	popa   
  410d97:	imul   edx,DWORD PTR cs:[esp+ebx*4+0xe],0x916046f9
  410da0:	das    
  410da1:	xchg   edx,eax
  410da2:	outs   dx,BYTE PTR ds:[esi]
  410da3:	cmp    BYTE PTR [ecx],dl
  410da5:	inc    ebx
  410da6:	icebp  
  410da7:	vsqrtss xmm5,xmm3,DWORD PTR [eax+0x5b]
  410dac:	fimul  WORD PTR [ebp-0x5f]
  410daf:	jb     0x410d6e
  410db1:	jo     0x410d36
  410db3:	in     al,0xf1
  410db5:	xchg   DWORD PTR [ebx],edi
  410db7:	lahf   
  410db8:	cld    
  410db9:	cmp    al,0x10
  410dbb:	add    ebp,DWORD PTR [eax-0x65]
  410dbe:	in     eax,0x97
  410dc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dc1:	leave  
  410dc2:	int    0x2
  410dc4:	les    ebx,FWORD PTR [edi-0x4]
  410dc7:	shr    bh,cl
  410dc9:	lahf   
  410dca:	out    dx,al
  410dcb:	ss pop ss
  410dcd:	ret    
  410dce:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  410dd0:	retf   
  410dd1:	xchg   DWORD PTR [edx+esi*8-0x16bee680],eax
  410dd8:	(bad)  
  410dd9:	pop    edi
  410dda:	int3   
  410ddb:	sti    
  410ddc:	sub    BYTE PTR [esi+0x7129e85a],ch
  410de2:	enter  0xbadc,0xa
  410de6:	call   0x3fc1af09
  410deb:	fs inc ebp
  410ded:	int    0xdd
  410def:	xchg   ebp,eax
  410df0:	sbb    al,0x33
  410df2:	ret    0xe6b8
  410df5:	scas   al,BYTE PTR es:[edi]
  410df6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410df7:	stc    
  410df8:	(bad)  [esi-0x78]
  410dfb:	scas   eax,DWORD PTR es:[edi]
  410dfc:	fnsave [ebx]
  410dfe:	dec    esi
  410dff:	sar    BYTE PTR [esi+0x7],cl
  410e02:	leavew 
  410e04:	sub    ecx,edx
  410e06:	aad    0x41
  410e08:	adc    bl,dh
  410e0a:	ins    BYTE PTR es:[edi],dx
  410e0b:	sbb    ch,al
  410e0d:	sub    cl,BYTE PTR [ebx-0x795d007c]
  410e13:	add    cl,bl
  410e15:	inc    ebp
  410e16:	test   DWORD PTR ds:[eax+0xa],0x37520f48
  410e1e:	sub    DWORD PTR [ecx],0x36c7975f
  410e24:	fld    st(2)
  410e26:	and    ebx,DWORD PTR [eax+0x18]
  410e29:	sbb    BYTE PTR [ebp+eax*1-0x540ca5f1],0x76
  410e31:	or     cl,BYTE PTR [ecx+0x6]
  410e34:	ds aad 0x65
  410e37:	push   eax
  410e38:	cmc    
  410e39:	mov    WORD PTR [esi-0x2b292450],?
  410e3f:	mov    ds:0x7a136544,al
  410e44:	hlt    
  410e45:	push   eax
  410e46:	sbb    dl,bh
  410e48:	pusha  
  410e49:	push   ebx
  410e4a:	nop
  410e4b:	sbb    DWORD PTR [ebx+ebp*1],eax
  410e4e:	pop    ss
  410e4f:	stc    
  410e50:	jb     0x410de3
  410e52:	mov    ebx,0x4b7e93e4
  410e57:	adc    DWORD PTR [edx-0x6bd8806c],eax
  410e5d:	dec    eax
  410e5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e5f:	push   es
  410e60:	xor    eax,ebx
  410e62:	or     BYTE PTR [esi+0xf],ah
  410e65:	mov    bl,0x92
  410e67:	aaa    
  410e68:	or     dl,BYTE PTR [ebx-0x4b]
  410e6b:	cmp    DWORD PTR [edx+0x68],esi
  410e6e:	shl    dl,cl
  410e70:	xchg   ebp,eax
  410e71:	mul    ebp
  410e73:	shr    BYTE PTR [ecx-0x1c],cl
  410e76:	sar    BYTE PTR [ebx+0x3a3eb56f],1
  410e7c:	ja     0x410e7b
  410e7e:	jb     0x410e9e
  410e80:	pusha  
  410e81:	lods   eax,DWORD PTR ds:[esi]
  410e82:	jge    0x410e1e
  410e84:	jnp    0x410e51
  410e86:	popa   
  410e87:	mov    ah,0x31
  410e89:	and    al,0x18
  410e8b:	repz and cl,bh
  410e8e:	xor    al,cl
  410e90:	rcl    DWORD PTR [edx],1
  410e92:	mov    cl,0x5c
  410e94:	add    edi,DWORD PTR [eax]
  410e96:	jne    0x410ed5
  410e98:	lods   eax,DWORD PTR ds:[esi]
  410e99:	mov    bh,bh
  410e9b:	mov    al,0xe0
  410e9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e9e:	xor    al,0x56
  410ea0:	aam    0x51
  410ea2:	mov    ebp,0x78035ade
  410ea7:	jle    0x410e2e
  410ea9:	jge    0x410f1c
  410eab:	out    0x11,eax
  410ead:	and    DWORD PTR [ebx],esp
  410eaf:	ins    DWORD PTR es:[edi],dx
  410eb0:	inc    esp
  410eb1:	xchg   ebp,eax
  410eb2:	(bad)  
  410eb3:	fidiv  WORD PTR [ebx]
  410eb5:	sub    al,0xa3
  410eb7:	adc    eax,esp
  410eb9:	ins    DWORD PTR es:[edi],dx
  410eba:	xchg   ebp,eax
  410ebb:	jle    0x410e6e
  410ebd:	xor    BYTE PTR [ebx+0x15],0x6
  410ec1:	or     dl,BYTE PTR [esi]
  410ec3:	pushf  
  410ec4:	stc    
  410ec5:	and    eax,0x884d5415
  410eca:	adc    DWORD PTR [eax+0x57],edi
  410ecd:	in     al,0x5e
  410ecf:	mov    esi,0xcbf293da
  410ed4:	jge    0x410f1f
  410ed6:	inc    eax
  410ed7:	xchg   ebp,eax
  410ed8:	add    bl,BYTE PTR [ebx+0x7a]
  410edb:	lods   al,BYTE PTR ds:[esi]
  410edc:	das    
  410edd:	ret    0x6e85
  410ee0:	and    ebx,DWORD PTR ds:0x7f8c3045
  410ee6:	fisttp QWORD PTR [esi]
  410ee8:	inc    ebp
  410ee9:	data16 add al,0xf8
  410eec:	out    dx,eax
  410eed:	ja     0x410eee
  410eef:	enter  0x6ca7,0xca
  410ef3:	push   es
  410ef4:	mov    dl,al
  410ef6:	(bad)  
  410ef7:	push   0xffffffab
  410ef9:	pop    ebx
  410efa:	mov    BYTE PTR [ebx-0xc],bl
  410efd:	sbb    dl,BYTE PTR [esp+eax*8]
  410f00:	cli    
  410f01:	clc    
  410f02:	add    ebp,edx
  410f04:	inc    esi
  410f05:	ds sahf 
  410f07:	rol    BYTE PTR ds:0xd157a944,0x22
  410f0e:	inc    ecx
  410f0f:	and    eax,0x4ae252ee
  410f14:	dec    ebp
  410f15:	dec    ebp
  410f16:	or     BYTE PTR [ecx-0xf0f1d5a],bh
  410f1c:	inc    edx
  410f1d:	sti    
  410f1e:	cmc    
  410f1f:	mov    DWORD PTR [edi],ebp
  410f21:	add    WORD PTR [esi+0x19],sp
  410f25:	pop    ecx
  410f26:	bound  esp,QWORD PTR [edi]
  410f28:	loopne 0x410f71
  410f2a:	inc    eax
  410f2b:	jle    0x410f23
  410f2d:	call   0xc095:0x54d689
  410f34:	retf   
  410f35:	iret   
  410f36:	int    0x5b
  410f38:	fist   WORD PTR [edi-0x1a01c22e]
  410f3e:	or     edx,0xc03746f9
  410f44:	adc    eax,0xdbb80cc1
  410f49:	call   0xb4988905
  410f4e:	fdivr  DWORD PTR [esi-0x14c9e7de]
  410f54:	daa    
  410f55:	bound  esp,QWORD PTR [edi+0x586d0eb1]
  410f5b:	adc    al,0xb2
  410f5d:	jo     0x410fd9
  410f5f:	ja     0x410f9d
  410f61:	pusha  
  410f62:	loop   0x410f36
  410f64:	inc    esp
  410f65:	xlat   BYTE PTR ds:[ebx]
  410f66:	xchg   ecx,eax
  410f67:	int    0xc6
  410f69:	add    cl,BYTE PTR [ebp+0x39]
  410f6c:	inc    ecx
  410f6d:	inc    ebp
  410f6e:	out    dx,al
  410f6f:	popa   
  410f70:	mov    ch,0xdd
  410f72:	xor    ebx,DWORD PTR [edi-0x67]
  410f75:	jo     0x410f58
  410f77:	xchg   esp,eax
  410f78:	cli    
  410f79:	mov    ch,0x5
  410f7b:	out    dx,eax
  410f7c:	sbb    BYTE PTR [esi],bh
  410f7e:	jmp    0x231b:0x9b16556b
  410f85:	ror    ebx,0x7c
  410f88:	dec    ecx
  410f89:	push   ebp
  410f8a:	call   0x679f:0xd67e0043
  410f91:	dec    ebx
  410f92:	pop    ss
  410f93:	xchg   esp,eax
  410f94:	outs   dx,DWORD PTR ds:[esi]
  410f95:	jmp    DWORD PTR [esi+eax*1-0x40e1404b]
  410f9c:	jle    0x410f88
  410f9e:	sbb    eax,0x60ae709c
  410fa3:	cmp    BYTE PTR [ebp-0x2],al
  410fa6:	xlat   BYTE PTR ds:[ebx]
  410fa7:	dec    esp
  410fa8:	sbb    eax,DWORD PTR [esi]
  410faa:	push   ecx
  410fab:	ret    0xe73e
  410fae:	rol    DWORD PTR [eax+0x63bc5dfe],1
  410fb4:	popf   
  410fb5:	stc    
  410fb6:	xchg   edx,eax
  410fb7:	and    edx,eax
  410fb9:	mov    esi,0xdea0a139
  410fbe:	mov    esp,0x783587e8
  410fc3:	adc    eax,0x639c6d60
  410fc8:	call   0x5eea:0x763cfe1b
  410fcf:	dec    ebp
  410fd0:	neg    DWORD PTR [ebp-0x6033816]
  410fd6:	loop   0x410f90
  410fd8:	les    esp,FWORD PTR [ebx+0xa5a5b2a]
  410fde:	dec    esp
  410fdf:	mov    ?,WORD PTR [ecx-0x9b5c856]
  410fe5:	inc    edi
  410fe6:	cmc    
  410fe7:	sub    eax,0x843d9a6f
  410fec:	mov    bl,0x5b
  410fee:	rcl    BYTE PTR [ecx],1
  410ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ff1:	pop    ebx
  410ff2:	pop    edx
  410ff3:	imul   esi,DWORD PTR [ebp+0x46],0xd6970ce
  410ffa:	ficom  DWORD PTR [esi+esi*4+0x62b537a]
  411001:	ins    DWORD PTR es:[edi],dx
  411002:	ror    bh,0xb7
  411005:	cmp    eax,0x5ad1658b
  41100a:	scas   al,BYTE PTR es:[edi]
  41100b:	pop    ebp
  41100c:	loope  0x41102d
  41100e:	test   eax,0x5c4bd967
  411013:	fsubr  st(4),st
  411015:	mov    ch,BYTE PTR [ecx+0x4668bf68]
  41101b:	imul   DWORD PTR [ecx-0x51ec1419]
  411021:	dec    edi
  411022:	sar    BYTE PTR [esi-0x13df0e13],0x85
  411029:	dec    edi
  41102a:	ins    DWORD PTR es:[edi],dx
  41102b:	push   cs
  41102c:	pusha  
  41102d:	jmp    0x41102b
  41102f:	push   esp
  411030:	mov    dh,0x48
  411032:	outs   dx,DWORD PTR cs:[esi]
  411034:	add    ch,dh
  411036:	imul   edi,DWORD PTR [edi],0xffffffe2
  411039:	jmp    0x410fe2
  41103b:	into   
  41103c:	dec    BYTE PTR cs:[ebx]
  41103f:	(bad)  [edx+0x7d]
  411042:	add    cl,BYTE PTR [ebx+0x15]
  411045:	or     edx,DWORD PTR [edi-0x23]
  411048:	inc    ebp
  411049:	xchg   ebx,eax
  41104a:	aad    0xbb
  41104c:	jl     0x411092
  41104e:	inc    ebp
  41104f:	and    DWORD PTR [ebx+0x5808c7bf],eax
  411055:	or     al,0xee
  411057:	lods   eax,DWORD PTR ds:[esi]
  411058:	inc    ebx
  411059:	xchg   edx,eax
  41105a:	push   0xfbdb7695
  41105f:	dec    eax
  411060:	das    
  411061:	gs dec ecx
  411063:	bound  ecx,QWORD PTR [eax-0x2a0eb276]
  411069:	out    dx,eax
  41106a:	pop    ebx
  41106b:	jbe    0x410ff7
  41106d:	je     0x4110e5
  41106f:	rcl    edx,1
  411071:	shl    ecx,0x4a
  411074:	aaa    
  411075:	aaa    
  411076:	js     0x411014
  411078:	and    al,cl
  41107a:	popf   
  41107b:	clc    
  41107c:	(bad)  
  41107d:	sahf   
  41107e:	iret   
  41107f:	mov    eax,ds:0xb90b3ff9
  411084:	xchg   BYTE PTR [edi],dh
  411086:	push   ecx
  411087:	(bad)  
  411089:	int    0x55
  41108b:	jl     0x4110c0
  41108d:	rol    BYTE PTR [ecx-0x46],0xc7
  411091:	std    
  411092:	push   edi
  411093:	jo     0x4110c7
  411095:	mov    DWORD PTR [ebx],esi
  411097:	lahf   
  411098:	addr16 enter 0x5b7a,0xeb
  41109d:	sbb    BYTE PTR [edi+0x6f],dl
  4110a0:	jmp    DWORD PTR [ebx-0x2e]
  4110a3:	test   BYTE PTR [ebx+ecx*1+0x77d83891],dl
  4110aa:	xchg   ebp,eax
  4110ab:	mov    ebx,0x44273061
  4110b0:	mov    dl,0xbe
  4110b2:	adc    al,0x6e
  4110b4:	cmp    al,0x5b
  4110b6:	ret    
  4110b7:	stos   DWORD PTR es:[edi],eax
  4110b8:	push   ecx
  4110b9:	fnsave [ebp+0x1]
  4110bc:	push   ebp
  4110bd:	nop
  4110be:	sti    
  4110bf:	outs   dx,BYTE PTR ds:[esi]
  4110c0:	cdq    
  4110c1:	aaa    
  4110c2:	clc    
  4110c3:	shr    BYTE PTR ss:0x5fda5aa,cl
  4110ca:	pop    ecx
  4110cb:	mov    ecx,0xe639d787
  4110d0:	sbb    bl,BYTE PTR [edi+0x597f9cae]
  4110d6:	push   ss
  4110d7:	loope  0x41114d
  4110d9:	ins    BYTE PTR es:[edi],dx
  4110da:	icebp  
  4110db:	ret    
  4110dc:	cwde   
  4110dd:	sub    BYTE PTR [edi+edi*1],ch
  4110e0:	add    cl,dl
  4110e2:	jl     0x411146
  4110e4:	and    ch,BYTE PTR [ebx-0x71]
  4110e7:	or     DWORD PTR [ebp+0x1],esi
  4110ea:	mov    al,BYTE PTR [ecx-0x3796144d]
  4110f0:	jne    0x4110aa
  4110f2:	nop
  4110f3:	popf   
  4110f4:	jg     0x4110a3
  4110f6:	in     eax,dx
  4110f7:	shl    cl,1
  4110f9:	push   cs
  4110fa:	add    al,0xf1
  4110fc:	icebp  
  4110fd:	dec    esp
  4110fe:	jl     0x41114c
  411100:	pop    ds
  411101:	ret    
  411102:	dec    edx
  411103:	mov    esp,0x7bca8bd9
  411108:	mov    dh,0xf7
  41110a:	out    dx,al
  41110b:	dec    esi
  41110c:	test   eax,0x3da9d582
  411111:	cmp    BYTE PTR [ecx],dl
  411113:	(bad)  
  411114:	jg     0x411116
  411116:	loope  0x411142
  411118:	mov    ebx,0xd2143be9
  41111d:	cmc    
  41111e:	push   cs
  41111f:	or     DWORD PTR [edx+ebp*4-0x2a4e2a51],esp
  411126:	pop    edi
  411127:	xchg   edx,eax
  411128:	mov    ch,0x20
  41112a:	sbb    eax,0x9ec87375
  41112f:	jmp    0x41118b
  411131:	mov    ecx,0x6ccad466
  411136:	push   ebp
  411137:	cmp    BYTE PTR [edi-0x80],cl
  41113a:	add    cl,dh
  41113c:	push   0xffffffb5
  41113e:	and    al,0x2b
  411140:	add    bl,dh
  411142:	lods   eax,DWORD PTR ds:[esi]
  411143:	popa   
  411144:	jmp    0x18a7:0xd94b9731
  41114b:	repnz in eax,0xa
  41114e:	fidiv  DWORD PTR [eax-0x36dbe718]
  411154:	cs addr16 adc dh,dh
  411158:	sti    
  411159:	cmp    al,0x13
  41115b:	inc    esp
  41115c:	inc    edi
  41115d:	add    al,0x69
  41115f:	(bad)  
  411160:	fwait
  411161:	adc    cl,BYTE PTR [edx]
  411163:	xchg   edi,eax
  411164:	out    dx,eax
  411165:	ficom  WORD PTR [ebp+esi*4+0x28]
  411169:	inc    edx
  41116a:	nop
  41116b:	ja     0x4111bd
  41116d:	loopne 0x411109
  41116f:	out    dx,al
  411170:	pop    ss
  411171:	test   eax,0x4d9c989b
  411176:	in     eax,dx
  411177:	sub    BYTE PTR [eax-0x72],cl
  41117a:	or     al,0xba
  41117c:	or     eax,0xacb8ead9
  411181:	inc    ebx
  411182:	cmp    al,0xb
  411184:	popa   
  411185:	push   0xffffffc0
  411187:	mov    edx,ebx
  411189:	sahf   
  41118a:	test   al,0xb6
  41118c:	icebp  
  41118d:	fmul   DWORD PTR [ecx+0x54]
  411190:	mov    ebx,0x8ae21b7
  411195:	mov    BYTE PTR [edi+0xa],bl
  411198:	jbe    0x41118f
  41119a:	(bad)  
  41119c:	mov    edx,0x37348b14
  4111a1:	cdq    
  4111a2:	scas   eax,DWORD PTR es:[edi]
  4111a3:	mov    ds:0x7b43a327,al
  4111a8:	repz push ebx
  4111aa:	dec    ebp
  4111ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111ac:	pop    esp
  4111ad:	and    eax,0xedbf76b8
  4111b2:	jne    0x4111f9
  4111b4:	pusha  
  4111b5:	jb     0x411154
  4111b7:	test   DWORD PTR [esi],ebp
  4111b9:	adc    eax,0x95f7e06c
  4111be:	inc    ebp
  4111bf:	jae    0x411200
  4111c1:	or     eax,0xf92a4aa8
  4111c6:	xor    edx,esp
  4111c8:	(bad)  
  4111c9:	loopne 0x41117f
  4111cb:	cmp    eax,0x6bff6121
  4111d0:	jne    0x4111b5
  4111d2:	xor    al,0x54
  4111d4:	gs or  al,0xdd
  4111d7:	xchg   ebx,eax
  4111d8:	(bad)  
  4111d9:	xor    esp,DWORD PTR cs:[ebp-0x23c452bc]
  4111e0:	sbb    al,0xa2
  4111e2:	push   0x3a181596
  4111e7:	scas   al,BYTE PTR es:[edi]
  4111e8:	fstp   DWORD PTR [ebp+0x66]
  4111eb:	test   eax,0x1518a5f2
  4111f0:	push   ss
  4111f1:	gs out dx,eax
  4111f3:	fs xor eax,0x87097bb9
  4111f9:	mov    al,ds:0x8760d053
  4111fe:	scas   eax,DWORD PTR es:[edi]
  4111ff:	jmp    0x41120b
  411201:	int3   
  411202:	add    esi,0x21884673
  411208:	or     ebp,DWORD PTR [ecx+0x7afa1697]
  41120e:	fstp   DWORD PTR [esi-0x6096665c]
  411214:	jle    0x41121b
  411216:	push   ss
  411217:	xchg   ecx,eax
  411218:	mov    ecx,0xdf9ff657
  41121d:	test   BYTE PTR [ebx+0x77d8ca98],bl
  411223:	fisttp DWORD PTR [esi-0x6a]
  411226:	xchg   ecx,eax
  411227:	pop    ecx
  411228:	dec    ebx
  411229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41122a:	xchg   ebp,eax
  41122b:	xor    ch,dh
  41122d:	mov    BYTE PTR [ebx+edi*8],bh
  411230:	ds jae 0x41128b
  411233:	(bad)  
  411234:	leave  
  411235:	sbb    al,BYTE PTR [ecx]
  411237:	cld    
  411238:	pop    es
  411239:	mov    ebx,0x1f47820f
  41123e:	mov    ah,0x5b
  411240:	xor    ch,BYTE PTR [edx+0x64]
  411243:	xor    ah,BYTE PTR [ecx-0x1]
  411246:	or     ah,BYTE PTR [ebx+0x699b4295]
  41124c:	adc    al,0xd
  41124e:	cli    
  41124f:	cmp    eax,0xe5ebdc39
  411254:	out    0x23,eax
  411256:	idiv   BYTE PTR [edi+0x5c]
  411259:	mov    edi,0x278a648b
  41125e:	call   0x97e9dec
  411263:	add    DWORD PTR [esi],0x7d
  411266:	add    al,cl
  411268:	pop    ebp
  411269:	add    eax,0x79c571d3
  41126e:	inc    edx
  41126f:	cmp    bl,BYTE PTR [ebp+0x34b47320]
  411275:	jno    0x41122d
  411277:	xor    DWORD PTR [ebp-0x30],esi
  41127a:	cmp    dl,BYTE PTR [ebx]
  41127c:	outs   dx,DWORD PTR ds:[esi]
  41127d:	stos   BYTE PTR es:[edi],al
  41127e:	add    eax,0x64ecc747
  411283:	std    
  411284:	cmp    bh,BYTE PTR [edx+edi*4-0x2f81dac5]
  41128b:	aad    0x4e
  41128d:	out    0x2e,al
  41128f:	cmp    edx,esi
  411291:	or     bl,BYTE PTR [ecx-0x48]
  411294:	xor    eax,0x49c6dc30
  411299:	cdq    
  41129a:	dec    edx
  41129b:	push   edx
  41129c:	inc    esi
  41129d:	or     eax,0x64a24b8f
  4112a2:	push   edi
  4112a3:	cmp    BYTE PTR [eax+0x663a90c4],cl
  4112a9:	or     esp,esp
  4112ab:	mov    WORD PTR [ecx+0xc],0x5660
  4112b1:	je     0x411290
  4112b3:	js     0x4112af
  4112b5:	imul   ecx,DWORD PTR [edi-0x78],0x5
  4112b9:	jmp    0xb253:0xa7384b3b
  4112c0:	mov    dl,0xeb
  4112c2:	add    BYTE PTR ds:0xcdbfabb3,ah
  4112c8:	imul   ebx,DWORD PTR [ebx+0x3a],0x80add454
  4112cf:	fisub  WORD PTR [ecx-0x1c1d2e30]
  4112d5:	(bad)  
  4112d6:	js     0x4112ba
  4112d8:	push   0x8dbbbd68
  4112dd:	sbb    ch,dh
  4112df:	(bad)  [eax+ebx*4+0x2a]
  4112e3:	xchg   esp,eax
  4112e4:	mov    cl,0xe6
  4112e6:	sbb    BYTE PTR [edi-0x3b79a36a],bh
  4112ec:	mov    WORD PTR [ebp+edx*1-0x4530ac78],?
  4112f3:	loope  0x4112ff
  4112f5:	je     0x411355
  4112f7:	inc    sp
  4112f9:	inc    eax
  4112fa:	sar    esp,1
  4112fc:	or     ebp,DWORD PTR [edx-0x20]
  4112ff:	lods   al,BYTE PTR ds:[esi]
  411300:	lods   al,BYTE PTR ds:[esi]
  411301:	mov    ds:0x909c63da,al
  411306:	mov    ?,WORD PTR [edi+edx*8+0x11b83884]
  41130d:	xchg   esi,edx
  41130f:	fwait
  411310:	enter  0x8565,0xfe
  411314:	xchg   DWORD PTR [edx+0x14d0a775],edx
  41131a:	pushf  
  41131b:	sub    ebx,ebp
  41131d:	imul   edx,esp,0xffffffb0
  411320:	sub    DWORD PTR [edi-0x55],esp
  411323:	jecxz  0x4112cf
  411325:	mov    cl,0x34
  411327:	push   eax
  411328:	push   esp
  411329:	sbb    dh,BYTE PTR [edi-0x53]
  41132c:	jo     0x41138d
  41132e:	push   cs
  41132f:	and    cl,al
  411331:	add    al,0xc0
  411333:	shl    DWORD PTR [esi+0x3a],cl
  411336:	pop    es
  411337:	jecxz  0x4112ca
  411339:	pop    edx
  41133a:	imul   edi,esi,0xffffff8a
  41133d:	loopne 0x4113aa
  41133f:	mov    bl,0xae
  411341:	sub    BYTE PTR [ebx+0x68],0xc3
  411345:	cli    
  411346:	sub    DWORD PTR [edx-0x27b9d3b5],eax
  41134c:	inc    edi
  41134d:	inc    eax
  41134e:	jle    0x41138c
  411350:	xchg   ebx,eax
  411351:	xor    BYTE PTR [ecx+0x663929d5],ah
  411357:	push   eax
  411358:	fild   DWORD PTR [ebx+0x5c]
  41135b:	ror    DWORD PTR [edi+ecx*2-0x4c664c96],0x8f
  411363:	psubsb mm4,mm6
  411366:	jnp    0x41131d
  411368:	test   al,0xc8
  41136a:	sub    BYTE PTR [ebp+esi*4-0x41],bl
  41136e:	sbb    dl,ah
  411370:	sbb    BYTE PTR [edi-0x1d036e6e],0x8c
  411377:	sar    DWORD PTR [eax-0x3d],cl
  41137a:	fmul   DWORD PTR [esi-0x5c]
  41137d:	adc    eax,0x84a7faaa
  411382:	rcl    esi,1
  411384:	add    al,BYTE PTR [ecx+0x7e3765]
  41138a:	add    ecx,DWORD PTR [eax-0x8]
  41138d:	cmp    cl,dh
  41138f:	(bad)  
  411390:	adc    eax,0xc546efde
  411395:	rol    BYTE PTR [esi],cl
  411397:	add    DWORD PTR [edx],esp
  411399:	sar    BYTE PTR [edi-0x1f],cl
  41139c:	xor    eax,0x30a3d60b
  4113a1:	mov    bl,al
  4113a3:	mov    ah,al
  4113a5:	sub    DWORD PTR [eax],ecx
  4113a7:	sbb    bl,bl
  4113a9:	jmp    0x498f9da
  4113ae:	adc    ch,ch
  4113b0:	dec    esp
  4113b1:	inc    ecx
  4113b2:	(bad)  
  4113b3:	xchg   ecx,eax
  4113b4:	push   es
  4113b5:	mov    ebx,esi
  4113b7:	adc    DWORD PTR [eax],eax
  4113b9:	into   
  4113ba:	les    esi,FWORD PTR [edx+0x4c]
  4113bd:	retf   
  4113be:	add    al,0xf8
  4113c0:	imul   eax,edi,0x4b30fb02
  4113c6:	pop    ds
  4113c7:	adc    bh,bl
  4113c9:	fist   WORD PTR [eax]
  4113cb:	mov    dh,0xf2
  4113cd:	iret   
  4113ce:	iret   
  4113cf:	mov    ecx,0x23f3f894
  4113d4:	out    dx,al
  4113d5:	clc    
  4113d6:	and    DWORD PTR [eax+0x6d],0x31
  4113da:	mov    eax,0xef103927
  4113df:	pusha  
  4113e0:	add    eax,0x331b1ee2
  4113e5:	jns    0x41140f
  4113e7:	scas   al,BYTE PTR es:[edi]
  4113e8:	imul   esi,ecx,0xffffff92
  4113eb:	push   ecx
  4113ec:	dec    esi
  4113ed:	bnd jl 0x411432
  4113f0:	pop    esp
  4113f1:	leave  
  4113f2:	pop    ebx
  4113f3:	mov    ds:0xcb115c46,al
  4113f8:	pop    esp
  4113f9:	call   0x356dc2d6
  4113fe:	cmp    eax,0x62bdeb7b
  411403:	or     edi,DWORD PTR [eax]
  411405:	sub    ecx,DWORD PTR [ecx+0x7]
  411408:	add    dh,BYTE PTR [ecx-0x4828b48]
  41140e:	rcr    BYTE PTR [ecx-0x4db53049],0x42
  411415:	ds xchg edi,eax
  411417:	cmp    edx,ebp
  411419:	mov    edi,0xfe572788
  41141e:	xchg   BYTE PTR [edx+eiz*8+0x7c],bl
  411422:	ins    DWORD PTR es:[edi],dx
  411423:	outs   dx,BYTE PTR ds:[esi]
  411424:	jo     0x4113dc
  411426:	dec    ecx
  411427:	jnp    0x411409
  411429:	mov    eax,ds:0xfbda56ef
  41142e:	imul   ecx,DWORD PTR [ebp+0x2b],0xfffffff2
  411432:	bound  edi,QWORD PTR [edx]
  411434:	fs ret 0x8c0a
  411438:	arpl   dx,bx
  41143a:	or     bl,bh
  41143c:	cmp    al,BYTE PTR [esi-0x6d]
  41143f:	push   eax
  411440:	ins    DWORD PTR es:[edi],dx
  411441:	mov    ch,0xc6
  411443:	ss sub al,0x1e
  411446:	fxch   st(1)
  411448:	inc    ebp
  411449:	fs mov eax,esp
  41144c:	xchg   ebx,eax
  41144d:	mov    ch,0x49
  41144f:	mov    edx,0x2431475c
  411454:	cld    
  411455:	xor    dh,BYTE PTR [ecx-0xff438bd]
  41145b:	jns    0x41148a
  41145d:	mov    esi,0xbcacbe48
  411462:	or     eax,0xb7efccad
  411467:	xor    ecx,ebx
  411469:	(bad)  
  41146a:	jbe    0x4114e7
  41146c:	mov    dl,0x4c
  41146e:	lds    ecx,FWORD PTR [edx+esi*1+0x66572f42]
  411475:	jle    0x41142c
  411477:	mov    dl,cl
  411479:	push   ss
  41147a:	pop    esi
  41147b:	popa   
  41147c:	push   0x2c0671c0
  411481:	mov    BYTE PTR [ecx-0x5ce04172],al
  411487:	inc    esi
  411488:	out    dx,eax
  411489:	dec    ebp
  41148a:	jmp    0xc7cb32d9
  41148f:	int    0xe9
  411491:	mov    dl,0x89
  411493:	mov    esp,0x58f55bb9
  411498:	imul   ecx,DWORD PTR [edx-0x1ca67f30],0x40
  41149f:	stos   BYTE PTR es:[edi],al
  4114a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114a1:	sahf   
  4114a2:	jns    0x411458
  4114a4:	(bad)  [eax]
  4114a6:	addr16 sbb esp,esi
  4114a9:	xchg   ecx,eax
  4114aa:	xor    edi,eax
  4114ac:	std    
  4114ad:	in     al,dx
  4114ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114af:	(bad)  
  4114b0:	jbe    0x411441
  4114b2:	pushf  
  4114b3:	mov    ds:0x9abea0bd,eax
  4114b8:	or     cl,BYTE PTR [esi]
  4114ba:	push   esp
  4114bb:	sbb    eax,0x71aa230f
  4114c0:	add    eax,0x6c4eea59
  4114c5:	(bad)  
  4114c6:	int    0x4d
  4114c8:	or     DWORD PTR [edi+0x61197c41],edx
  4114ce:	cmp    al,0xfa
  4114d0:	scas   eax,DWORD PTR es:[edi]
  4114d1:	mov    ch,0xdb
  4114d3:	push   cs
  4114d4:	or     edx,ecx
  4114d6:	fld    DWORD PTR [ebx+0x15ea7e29]
  4114dc:	ins    DWORD PTR es:[edi],dx
  4114dd:	mov    ebx,0x44808164
  4114e2:	in     al,0x4c
  4114e4:	cdq    
  4114e5:	(bad)  
  4114e6:	cmc    
  4114e7:	stc    
  4114e8:	scas   eax,DWORD PTR es:[edi]
  4114e9:	imul   esp,DWORD PTR [ecx+0x4a],0xffffff95
  4114ed:	mov    fs,WORD PTR [ecx]
  4114ef:	dec    edx
  4114f0:	adc    al,0x2b
  4114f2:	fsub   DWORD PTR [ebp-0x6ea4091b]
  4114f8:	cs mov bl,0x1a
  4114fb:	xchg   edi,eax
  4114fc:	lods   eax,DWORD PTR ds:[esi]
  4114fd:	mov    edi,ecx
  4114ff:	stos   BYTE PTR es:[edi],al
  411500:	pop    eax
  411501:	fiadd  DWORD PTR [esi+0x7fdfc6b8]
  411507:	dec    ebp
  411508:	inc    ebx
  411509:	push   eax
  41150a:	lds    esp,FWORD PTR [eax+0x4782122e]
  411510:	scas   eax,DWORD PTR es:[edi]
  411511:	nop
  411512:	int3   
  411513:	inc    esi
  411514:	or     al,al
  411516:	jmp    eax
  411518:	jne    0x4114f3
  41151a:	dec    esi
  41151b:	ficom  WORD PTR [ebx-0x74]
  41151e:	jl     0x4114f9
  411520:	xor    DWORD PTR [edx+0x9],ebx
  411523:	cmp    cl,0x5b
  411526:	jge    0x411522
  411528:	lds    cx,DWORD PTR [edi+0x46ecdea0]
  41152f:	and    esp,DWORD PTR [edi]
  411531:	jne    0x411573
  411533:	pop    ebx
  411534:	or     al,0xe6
  411536:	in     al,dx
  411537:	or     dl,BYTE PTR [edx]
  411539:	adc    al,0x45
  41153b:	sar    DWORD PTR [edi+0x25],0xfe
  41153f:	das    
  411540:	sub    eax,0xa151d272
  411545:	iret   
  411546:	add    ebx,DWORD PTR [edi]
  411548:	pause  
  41154a:	loop   0x411511
  41154c:	push   esi
  41154d:	mov    ah,0x9b
  41154f:	push   ebx
  411550:	test   DWORD PTR [edx],ebx
  411552:	mov    eax,0xe05931ed
  411557:	pop    ds
  411558:	sub    edx,esp
  41155a:	or     dl,bl
  41155c:	mov    ebx,0x7b4ae6d7
  411561:	lea    esi,fs:[edi+0x275b3f95]
  411568:	fisub  WORD PTR [ecx-0x50ae8a1d]
  41156e:	pop    ds
  41156f:	daa    
  411570:	add    BYTE PTR [edx-0x514e0e7a],0x61
  411577:	hlt    
  411578:	push   ds
  411579:	push   cs
  41157a:	aaa    
  41157b:	sbb    bl,BYTE PTR [edi]
  41157d:	fst    QWORD PTR [ecx-0x4190a03d]
  411583:	pop    ss
  411584:	adc    bl,BYTE PTR [ecx]
  411586:	test   BYTE PTR [esi+0x7522834],bh
  41158c:	and    dl,0xd9
  41158f:	ins    BYTE PTR es:[edi],dx
  411590:	int    0xf5
  411592:	inc    esp
  411593:	push   cs
  411594:	cdq    
  411595:	(bad)  
  411596:	bound  esi,QWORD PTR [ebp+0x2ce7d03c]
  41159c:	out    dx,al
  41159d:	ss jmp 0xd2a1:0x30246228
  4115a5:	xchg   edi,eax
  4115a6:	test   BYTE PTR [ecx+0x45],0xa7
  4115aa:	test   al,0xe6
  4115ac:	jmp    0x74b938b6
  4115b1:	mov    dh,0xe8
  4115b3:	loope  0x411569
  4115b5:	xchg   ecx,eax
  4115b6:	inc    edx
  4115b7:	sbb    bh,BYTE PTR [ecx-0x44]
  4115ba:	cmc    
  4115bb:	xlat   BYTE PTR ds:[ebx]
  4115bc:	mov    esi,0x18603d60
  4115c1:	cdq    
  4115c2:	pop    ecx
  4115c3:	adc    eax,0x4a9829df
  4115c8:	lods   al,BYTE PTR ds:[esi]
  4115c9:	ins    DWORD PTR es:[edi],dx
  4115ca:	aaa    
  4115cb:	add    DWORD PTR [esi],edi
  4115cd:	push   0x68eb111f
  4115d2:	ins    BYTE PTR es:[edi],dx
  4115d3:	mov    ds:0xac950d22,eax
  4115d8:	ins    DWORD PTR es:[edi],dx
  4115d9:	pushf  
  4115da:	pushf  
  4115db:	xchg   al,dl
  4115dd:	add    dl,bl
  4115df:	xchg   DWORD PTR [eax-0x7d559691],edx
  4115e5:	add    al,0x54
  4115e7:	push   0xef169768
  4115ec:	and    esp,esp
  4115ee:	dec    eax
  4115ef:	push   esi
  4115f0:	pop    ss
  4115f1:	sub    DWORD PTR [ecx],ebp
  4115f3:	lock ja 0x411590
  4115f6:	(bad)  
  4115f7:	cmp    eax,0x180f75db
  4115fc:	js     0x4115e5
  4115fe:	dec    ebp
  4115ff:	imul   BYTE PTR [esi+0x316f5fc9]
  411605:	idiv   edi
  411607:	push   eax
  411608:	retf   
  411609:	inc    eax
  41160a:	add    DWORD PTR [ebp+0x11],ebx
  41160d:	and    ebx,esp
  41160f:	xchg   ecx,eax
  411610:	jb     0x4115bb
  411612:	and    dh,BYTE PTR [edi]
  411614:	sub    eax,0x9f0e92f3
  411619:	shl    esp,1
  41161b:	sbb    BYTE PTR [edx+0x3938f256],ch
  411621:	mov    dh,0x99
  411623:	mov    bh,0x13
  411625:	loope  0x4115aa
  411627:	fsub   DWORD PTR [ecx+0x7e4d49bf]
  41162d:	push   cs
  41162e:	push   0x481efbc8
  411633:	add    dh,bh
  411635:	leave  
  411636:	cmp    DWORD PTR [esi+0x21],esi
  411639:	cdq    
  41163a:	add    eax,0x7d458a47
  41163f:	iret   
  411640:	sbb    eax,0x42a485b6
  411645:	push   0x7f
  411647:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411648:	sbb    DWORD PTR [edi],0x43
  41164b:	cmp    esi,0xffffffc3
  41164e:	dec    edx
  41164f:	mov    eax,0xa3195593
  411654:	je     0x4115d8
  411656:	mov    eax,0xc1e8d2a0
  41165b:	fistp  WORD PTR [ebx]
  41165d:	jmp    0xe5266b7a
  411662:	ret    
  411663:	mov    gs,WORD PTR ds:0x9a3c9ec7
  411669:	push   ss
  41166a:	push   0x215c8612
  41166f:	push   cs
  411670:	add    BYTE PTR [edi],0xd2
  411673:	in     eax,0xa0
  411675:	shl    DWORD PTR ds:0x3d668993,cl
  41167b:	pop    ebx
  41167c:	mov    al,ds:0xce1e994d
  411681:	pop    ebx
  411682:	popf   
  411683:	adc    eax,0xec9ca5a5
  411688:	xchg   DWORD PTR [edx-0x3426831b],esp
  41168e:	cmp    al,0x8e
  411690:	daa    
  411691:	fild   QWORD PTR ds:0x5444daf3
  411697:	sbb    BYTE PTR [ebx-0x74],bl
  41169a:	rol    BYTE PTR [esi-0x39],0x5c
  41169e:	stc    
  41169f:	xchg   ecx,eax
  4116a0:	mov    ds:0x38f86a15,al
  4116a5:	jnp    0x411633
  4116a7:	jns    0x4116b1
  4116a9:	pusha  
  4116aa:	aaa    
  4116ab:	in     eax,0xa2
  4116ad:	ret    0xcf62
  4116b0:	adc    al,0x34
  4116b2:	or     DWORD PTR [ebp-0x2869514a],eax
  4116b8:	push   ebp
  4116b9:	leave  
  4116ba:	jmp    0x96fab77c
  4116bf:	mov    edx,0xf0f74f17
  4116c4:	jl     0x41169f
  4116c6:	xor    BYTE PTR [ecx-0x55],dl
  4116c9:	call   0xd81623b6
  4116ce:	and    al,0x62
  4116d0:	pop    edi
  4116d1:	sbb    dh,ch
  4116d3:	cmp    eax,0x7a26e62d
  4116d8:	inc    ecx
  4116d9:	dec    eax
  4116da:	and    ebx,DWORD PTR [eax+0x7cdc656e]
  4116e0:	or     BYTE PTR [eax],ch
  4116e2:	cmp    DWORD PTR [edx],edx
  4116e4:	shl    ecx,cl
  4116e6:	mov    cl,BYTE PTR [ebx+0x71]
  4116e9:	outs   dx,BYTE PTR ds:[esi]
  4116ea:	test   BYTE PTR ds:0x1fdf332b,bh
  4116f0:	jmp    0x406f:0xa3ea984d
  4116f7:	xor    edi,0xd8c18f27
  4116fd:	or     ch,BYTE PTR [esi+ebp*4]
  411700:	push   ss
  411701:	dec    ebx
  411702:	psubsw mm6,QWORD PTR [ecx+eiz*2+0x25]
  411707:	sbb    al,0x36
  411709:	jmp    0x2efc:0xae7f55c9
  411710:	adc    al,0x2f
  411712:	(bad)  
  411713:	jecxz  0x4116b5
  411715:	jp     0x4116b7
  411717:	shl    BYTE PTR ds:0x3080c94d,1
  41171d:	pop    edx
  41171e:	imul   ebp,DWORD PTR [ebp-0x4c9078e8],0xacce969e
  411728:	xchg   ecx,eax
  411729:	inc    edx
  41172a:	and    al,0xa8
  41172c:	push   ss
  41172d:	adc    eax,0x2f716186
  411732:	aas    
  411733:	daa    
  411734:	xchg   esi,eax
  411735:	sahf   
  411736:	sub    DWORD PTR [ebp-0x717da72d],0x7a397b81
  411740:	cmp    al,0x49
  411742:	rcr    eax,cl
  411744:	(bad)  
  411745:	xor    eax,0x5b66bb45
  41174a:	popa   
  41174b:	add    eax,0xc05d8ae1
  411750:	inc    edi
  411751:	outs   dx,BYTE PTR ds:[esi]
  411752:	inc    esp
  411753:	div    al
  411755:	icebp  
  411756:	ret    
  411757:	xchg   ebp,eax
  411758:	xor    eax,0xece500c8
  41175d:	sbb    ecx,edx
  41175f:	fs push ds
  411761:	lods   eax,DWORD PTR es:[esi]
  411763:	(bad)  
  411765:	aad    0xa4
  411767:	lahf   
  411768:	test   al,0xe3
  41176a:	aad    0x2f
  41176c:	iret   
  41176d:	jge    0x41170c
  41176f:	test   DWORD PTR [ebx-0x150a15ab],ebx
  411775:	push   es
  411776:	add    al,0xbe
  411778:	lea    eax,[bx-0x309f]
  41177d:	jmp    0x41174e
  41177f:	pop    esp
  411780:	(bad)  
  411781:	mov    ?,WORD PTR [esp+eiz*2+0x2b]
  411785:	jns    0x411778
  411787:	inc    ecx
  411788:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411789:	(bad)  
  41178a:	jmp    0x15e727a6
  41178f:	mov    ebx,eax
  411791:	ins    BYTE PTR es:[edi],dx
  411792:	sub    al,0x27
  411794:	mov    al,ds:0xafb5ca9c
  411799:	xchg   DWORD PTR [edx-0x4d21f746],ebx
  41179f:	das    
  4117a0:	retf   0x7cbe
  4117a3:	clc    
  4117a4:	inc    esi
  4117a5:	xor    dl,BYTE PTR [ebx-0x33]
  4117a8:	lds    esp,FWORD PTR fs:[edx-0xf12947d]
  4117af:	ins    DWORD PTR es:[edi],dx
  4117b0:	out    dx,eax
  4117b1:	push   ss
  4117b2:	(bad)
  4117b5:	inc    ecx
  4117b6:	leave  
  4117b7:	(bad)  [eax-0x532fb7c4]
  4117bd:	adc    dl,BYTE PTR [eax]
  4117bf:	aad    0x93
  4117c1:	pop    eax
  4117c2:	inc    ebp
  4117c3:	jmp    0x1de7:0x7b3b491e
  4117ca:	mov    ebp,0xe1cb5ea2
  4117cf:	jecxz  0x4117a8
  4117d1:	out    dx,eax
  4117d2:	or     DWORD PTR [edi+edx*8],0xffffffcc
  4117d6:	mov    ebx,0x9be9a983
  4117db:	mov    esp,eax
  4117dd:	je     0x4117fe
  4117df:	das    
  4117e0:	pop    ss
  4117e1:	ja     0x411774
  4117e3:	clc    
  4117e4:	and    al,dh
  4117e6:	inc    ebp
  4117e7:	fisub  DWORD PTR [esi-0xb2bd88f]
  4117ed:	pop    ecx
  4117ee:	sub    ecx,esi
  4117f0:	xor    ecx,eax
  4117f2:	mov    DWORD PTR [ebp+0x8],ecx
  4117f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4117f8:	mov    edx,DWORD PTR [ebp+0x8]
  4117fb:	imul   edx,edx,0x5708f1
  411801:	xor    ecx,eax
  411803:	add    ecx,esi
  411805:	lea    ecx,[ebp+ecx*4-0x64]
  411809:	mov    edi,DWORD PTR [ecx]
  41180b:	add    edx,edi
  41180d:	mov    DWORD PTR [ecx],edx
  41180f:	mov    ecx,DWORD PTR [ebp+0x8]
  411812:	xor    ecx,eax
  411814:	add    ecx,esi
  411816:	jne    0x40f45a
  41181c:	jmp    0x413bef
  411821:	mov    ecx,DWORD PTR [ebp+0x8]
  411824:	mov    edx,DWORD PTR [ebp-0x8]
  411827:	xor    ecx,eax
  411829:	xor    edx,eax
  41182b:	sub    ecx,edx
  41182d:	sub    ecx,esi
  41182f:	xor    ecx,eax
  411831:	mov    DWORD PTR [ebp+0x8],ecx
  411834:	mov    ecx,DWORD PTR [ebp+0x8]
  411837:	mov    edx,DWORD PTR [ebp+0x8]
  41183a:	xor    ecx,eax
  41183c:	imul   edx,edx,0x5708f1
  411842:	add    ecx,esi
  411844:	lea    ecx,[ebp+ecx*4-0x64]
  411848:	mov    edi,DWORD PTR [ecx]
  41184a:	add    edx,edi
  41184c:	mov    DWORD PTR [ecx],edx
  41184e:	mov    ecx,DWORD PTR [ebp+0x8]
  411851:	xor    ecx,eax
  411853:	add    ecx,esi
  411855:	jne    0x411821
  41185b:	jmp    0x413be3
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	jns    0x4117f2
  411863:	sbb    edi,DWORD PTR [ebx+0x1b]
  411866:	mov    eax,0xa6df667b
  41186b:	push   edi
  41186c:	xchg   DWORD PTR [esi+0x5f],edx
  41186f:	pop    ss
  411870:	call   0x7bd9505
  411875:	pop    edi
  411876:	jl     0x4118f4
  411878:	shr    BYTE PTR [ebp+0x4d],0x7a
  41187c:	jae    0x4118cb
  41187e:	jns    0x411893
  411880:	xchg   edi,eax
  411881:	mov    ah,0xed
  411883:	cmp    edx,DWORD PTR [edi-0x37098608]
  411889:	icebp  
  41188a:	mov    edi,0xc24d59e3
  41188f:	jl     0x4118bd
  411891:	mov    ds:0xab8f757,al
  411896:	xchg   BYTE PTR [ebp-0x13d12ad8],ah
  41189c:	jnp    0x411846
  41189e:	aaa    
  41189f:	fstp   QWORD PTR [ebp+esi*2+0x482d8dde]
  4118a6:	fwait
  4118a7:	aad    0xcd
  4118a9:	fs retf 0x503b
  4118ad:	jmp    0x635013f9
  4118b2:	and    BYTE PTR [ebp-0x38],bl
  4118b5:	inc    edx
  4118b6:	mov    edx,0x53a47533
  4118bb:	data16 sahf 
  4118bd:	scas   eax,DWORD PTR es:[edi]
  4118be:	arpl   si,ax
  4118c0:	out    dx,eax
  4118c1:	rcr    DWORD PTR [ebx+0x35],cl
  4118c4:	push   ecx
  4118c5:	out    0x94,eax
  4118c7:	cmc    
  4118c8:	(bad)  
  4118c9:	(bad)
  4118cc:	mov    ds:0xf83507a9,al
  4118d1:	fdivp  st(1),st
  4118d3:	aaa    
  4118d4:	outs   dx,BYTE PTR ds:[esi]
  4118d5:	jbe    0x411932
  4118d7:	pop    edx
  4118d8:	xor    esi,esp
  4118da:	imul   ebx,esi,0x7c
  4118dd:	cmp    al,bl
  4118df:	je     0x41195f
  4118e1:	arpl   WORD PTR [esi+eiz*1],bx
  4118e4:	push   ds
  4118e5:	(bad)  
  4118e6:	jbe    0x4118b4
  4118e8:	cmp    al,0xf7
  4118ea:	sbb    edx,DWORD PTR [ecx+eax*2+0x25]
  4118ee:	sbb    bl,ch
  4118f0:	int3   
  4118f1:	fcomp  DWORD PTR [eax]
  4118f3:	xor    BYTE PTR [edx],dh
  4118f5:	and    DWORD PTR [ebx-0x55],0xea46ec8b
  4118fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118fd:	jo     0x411951
  4118ff:	mov    ch,0x5f
  411901:	inc    ebx
  411902:	pop    eax
  411903:	dec    esp
  411904:	imul   edx,esp
  411907:	mov    dl,0x38
  411909:	hlt    
  41190a:	cdq    
  41190b:	cld    
  41190c:	lea    ebx,[edx-0x27035053]
  411912:	aaa    
  411913:	in     eax,0x1d
  411915:	ss je  0x411968
  411918:	lahf   
  411919:	and    al,0xf8
  41191b:	jg     0x41198b
  41191d:	xchg   ecx,eax
  41191e:	call   0xb5d9:0xad7699fc
  411925:	inc    ecx
  411926:	jecxz  0x4118eb
  411928:	scas   eax,DWORD PTR es:[edi]
  411929:	and    eax,0x26d4f86e
  41192e:	adc    ebx,DWORD PTR [ecx+0x2ac97d0b]
  411934:	mov    ds:0xf827847,al
  411939:	cmp    al,0x50
  41193b:	test   DWORD PTR [ecx],0x44eb4630
  411941:	shl    BYTE PTR ds:0x5788231f,0x89
  411948:	or     BYTE PTR [edi-0x6917834],dl
  41194e:	adc    ch,cl
  411950:	pop    ds
  411951:	xchg   esi,eax
  411952:	ds repz pop edx
  411955:	dec    edx
  411956:	test   DWORD PTR [edx+0x7aaed90],esi
  41195c:	sbb    dh,al
  41195e:	mov    eax,ds:0x197b18bc
  411963:	or     eax,0x6db1edf6
  411968:	xchg   ebx,eax
  411969:	cmp    al,0x63
  41196b:	lahf   
  41196c:	ds int 0xc1
  41196f:	xor    bh,BYTE PTR [ebp+0xe]
  411972:	mov    bh,0x2f
  411974:	sahf   
  411975:	arpl   WORD PTR [ebp+esi*4+0x4f],ax
  411979:	adc    al,0xd9
  41197b:	icebp  
  41197c:	push   ss
  41197d:	or     DWORD PTR [eax+0x16f7e361],edx
  411983:	mov    DWORD PTR [edi+0xa76a82],edi
  411989:	jbe    0x4119be
  41198b:	fwait
  41198c:	mov    esp,0xac4cd247
  411991:	ss (bad) 
  411993:	cmp    edx,DWORD PTR [esi]
  411995:	mov    bl,0xbb
  411997:	rcl    esp,cl
  411999:	pop    ds
  41199a:	bound  ecx,QWORD PTR [esi-0x14a3293a]
  4119a0:	aad    0x4d
  4119a2:	pop    eax
  4119a3:	imul   DWORD PTR [esi+0x6c]
  4119a6:	adc    DWORD PTR [esi-0x63],esi
  4119a9:	js     0x4119eb
  4119ab:	inc    edx
  4119ac:	jp     0x41194e
  4119ae:	inc    eax
  4119af:	outs   dx,DWORD PTR ds:[esi]
  4119b0:	sub    al,0xa7
  4119b2:	(bad)  
  4119b4:	test   DWORD PTR [edx-0x1e],esi
  4119b7:	push   esp
  4119b8:	lods   eax,DWORD PTR ds:[esi]
  4119b9:	ret    
  4119ba:	call   FWORD PTR [esi-0x4b]
  4119bd:	aad    0x70
  4119bf:	mov    fs,WORD PTR [edi-0x22]
  4119c2:	pop    esp
  4119c3:	out    0xb4,eax
  4119c5:	fcmovnb st,st(4)
  4119c7:	shl    DWORD PTR [ecx+0x628169bc],1
  4119cd:	lods   eax,DWORD PTR ds:[esi]
  4119ce:	and    esi,DWORD PTR [ebx+0x6e]
  4119d1:	jno    0x4119ad
  4119d3:	ja     0x41198a
  4119d5:	or     BYTE PTR [ebx+esi*2],dl
  4119d8:	mov    esp,gs
  4119da:	mov    BYTE PTR [ecx+0x44285988],ah
  4119e0:	lock aas 
  4119e2:	mov    al,0x55
  4119e4:	in     eax,0x61
  4119e6:	xlat   BYTE PTR ds:[ebx]
  4119e7:	push   ss
  4119e8:	xchg   BYTE PTR [ecx],cl
  4119ea:	(bad)  
  4119ec:	inc    esp
  4119ed:	aam    0x27
  4119ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119f0:	mov    edi,0xa37f072e
  4119f5:	int    0xa4
  4119f7:	adc    BYTE PTR [edx],bl
  4119f9:	or     ecx,esi
  4119fb:	test   eax,0xeaad9984
  411a00:	jge    0x4119e6
  411a02:	push   eax
  411a03:	jbe    0x4119df
  411a05:	aad    0x1b
  411a07:	int    0x5b
  411a09:	sub    DWORD PTR [edi],edx
  411a0b:	loop   0x411a85
  411a0d:	jecxz  0x4119b7
  411a0f:	daa    
  411a10:	sbb    ah,ah
  411a12:	(bad)  
  411a13:	je     0x411a6b
  411a15:	sti    
  411a16:	sbb    bh,BYTE PTR [ebx*8-0x6909d3fb]
  411a1d:	shl    DWORD PTR [eax-0x1d093a27],0xc4
  411a24:	mov    cl,0x16
  411a26:	scas   eax,DWORD PTR es:[edi]
  411a27:	addr16 inc ebx
  411a29:	dec    ebp
  411a2a:	and    al,0x31
  411a2c:	and    al,0xc5
  411a2e:	sti    
  411a2f:	xlat   BYTE PTR ds:[ebx]
  411a30:	xchg   ebx,eax
  411a31:	push   0xffffffd2
  411a33:	adc    ebp,DWORD PTR [ebx-0x53]
  411a36:	ds push cs
  411a38:	push   ebp
  411a39:	(bad)  
  411a3a:	repnz outs dx,BYTE PTR ds:[esi]
  411a3c:	push   ss
  411a3d:	test   ch,dl
  411a3f:	test   DWORD PTR [edi+edx*2+0xf],edx
  411a43:	xor    DWORD PTR [edx-0x2e7ca846],esp
  411a49:	cwde   
  411a4a:	cmp    edx,ebx
  411a4c:	or     ebp,DWORD PTR [ebp-0x1fb609a]
  411a52:	pop    ebx
  411a53:	iret   
  411a54:	icebp  
  411a55:	ds lahf 
  411a57:	add    DWORD PTR [ebx+eiz*2],esi
  411a5a:	fdivr  DWORD PTR [esi]
  411a5c:	sbb    esi,esp
  411a5e:	add    ebx,ecx
  411a60:	add    esp,DWORD PTR [edx]
  411a62:	gs push ebp
  411a64:	call   0x2359:0x3bb245c7
  411a6b:	inc    eax
  411a6c:	and    DWORD PTR [edi],0xd7e4af1e
  411a72:	add    dl,BYTE PTR [ebp-0x7e062fed]
  411a78:	and    eax,0x522913cb
  411a7d:	xor    al,0x3a
  411a7f:	xor    ch,bl
  411a81:	or     dh,al
  411a83:	fisttp WORD PTR [edi+0x54bdedea]
  411a89:	mov    cl,0x88
  411a8b:	pop    edx
  411a8c:	sub    BYTE PTR [ebx*2-0xf4e2da5],ch
  411a93:	push   ds
  411a94:	push   0xfffffff9
  411a96:	ja     0x411a84
  411a98:	ret    0xed53
  411a9b:	iret   
  411a9c:	sti    
  411a9d:	stc    
  411a9e:	mov    cl,0x13
  411aa0:	pusha  
  411aa1:	or     ebx,DWORD PTR [esi+0x704eb0fb]
  411aa7:	enter  0x653d,0xdb
  411aab:	outs   dx,BYTE PTR ds:[esi]
  411aac:	das    
  411aad:	in     eax,0x21
  411aaf:	ss xor eax,0x97e1320e
  411ab5:	in     eax,0xc1
  411ab7:	mov    edx,0xc82cad24
  411abc:	in     al,0xd9
  411abe:	jbe    0x411a7b
  411ac0:	test   BYTE PTR [eax+0x70356f8d],ah
  411ac6:	push   0x2
  411ac8:	push   0xffffff9c
  411aca:	in     eax,0x9a
  411acc:	(bad)
  411acf:	xlat   BYTE PTR ds:[ebx]
  411ad0:	outs   dx,DWORD PTR ds:[esi]
  411ad1:	enter  0x8dc1,0xa5
  411ad5:	mov    dh,0x4e
  411ad7:	ret    0x5107
  411ada:	add    al,0xf6
  411adc:	jl     0x411b4c
  411ade:	in     al,dx
  411adf:	or     eax,0xe3c33bc6
  411ae4:	sbb    BYTE PTR [edx+0x36713f7c],dh
  411aea:	mov    WORD PTR [eax],es
  411aec:	or     esp,DWORD PTR [edx-0x69adbfb]
  411af2:	shl    DWORD PTR [ebp-0x7c],cl
  411af5:	(bad)  
  411af6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411af7:	rcr    BYTE PTR [esp+esi*1-0x51],cl
  411afb:	addr16 ss pop ebp
  411afe:	dec    esi
  411aff:	xor    al,0x5c
  411b01:	xchg   esp,eax
  411b02:	pop    ecx
  411b03:	sbb    ebx,ecx
  411b05:	sub    ah,BYTE PTR [edi]
  411b07:	xchg   edx,eax
  411b08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b09:	mov    ebx,0xdfccc28e
  411b0e:	adc    al,0xac
  411b10:	dec    esi
  411b11:	and    BYTE PTR [ecx],al
  411b13:	lods   al,BYTE PTR ds:[esi]
  411b14:	inc    edx
  411b15:	lods   al,BYTE PTR ds:[esi]
  411b16:	jmp    0x411b08
  411b18:	add    DWORD PTR [edx+0x19],esp
  411b1b:	push   ebx
  411b1c:	jge    0x411b42
  411b1e:	cmp    esi,ebp
  411b20:	xchg   ah,ch
  411b22:	mov    dl,0x60
  411b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b25:	out    0x52,al
  411b27:	imul   eax,DWORD PTR [ebx],0xb670eee
  411b2d:	sub    ecx,edx
  411b2f:	xchg   ecx,eax
  411b30:	ds add ch,dl
  411b33:	sti    
  411b34:	popf   
  411b35:	dec    edx
  411b36:	bound  edi,QWORD PTR ds:0x6d1e93f0
  411b3c:	cmp    edi,ecx
  411b3e:	ds jmp 0x2a4fe1a9
  411b44:	and    DWORD PTR [edx+0xb],esp
  411b47:	xchg   ebp,eax
  411b48:	push   eax
  411b49:	mov    ecx,0x7a42a7ef
  411b4e:	gs and ebp,0x967471a2
  411b55:	int3   
  411b56:	mov    ebp,0x9e91e0d
  411b5b:	(bad)  
  411b5c:	sbb    al,0xc5
  411b5e:	iret   
  411b5f:	dec    ebp
  411b60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b61:	(bad)
  411b64:	xor    bl,BYTE PTR [eax+0x4256f1a8]
  411b6a:	popa   
  411b6b:	sar    DWORD PTR [eax],cl
  411b6d:	cmp    dl,ch
  411b6f:	xor    DWORD PTR [ebx+0xa9617c2],ebp
  411b75:	xor    cl,cl
  411b77:	scas   eax,DWORD PTR es:[edi]
  411b78:	ret    
  411b79:	mov    esi,0xd8e2db74
  411b7e:	call   0xfebe:0xe6ccc00
  411b85:	xchg   edx,eax
  411b86:	mov    ah,0x65
  411b88:	pop    ss
  411b89:	call   0xc842a0ac
  411b8e:	sar    edi,0x35
  411b91:	mov    cl,0x10
  411b93:	stos   BYTE PTR es:[edi],al
  411b94:	loop   0x411bc7
  411b96:	add    ebx,esp
  411b98:	es inc ecx
  411b9a:	mov    dh,0x2f
  411b9c:	add    eax,0xf4ef6653
  411ba1:	and    BYTE PTR [edx],cl
  411ba3:	xor    al,0xd1
  411ba5:	aam    0x45
  411ba7:	call   0x93d4cc6
  411bac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bad:	test   BYTE PTR [esi+0x44],ah
  411bb0:	arpl   WORD PTR [esi+0x630bec5e],bp
  411bb6:	pop    edi
  411bb7:	outs   dx,BYTE PTR ds:[esi]
  411bb8:	xchg   esi,eax
  411bb9:	sbb    ebp,DWORD PTR [ecx+0x5e]
  411bbc:	and    eax,0xc5e51ca8
  411bc1:	pop    eax
  411bc2:	inc    ebx
  411bc3:	sub    BYTE PTR [ebp-0x264c49b],dl
  411bc9:	inc    esi
  411bca:	aad    0xe1
  411bcc:	mov    ch,0x57
  411bce:	int    0x51
  411bd0:	imul   ecx,DWORD PTR [ebp+0x7],0x95d19c7b
  411bd7:	push   ss
  411bd8:	aas    
  411bd9:	div    al
  411bdb:	into   
  411bdc:	pop    esi
  411bdd:	rol    BYTE PTR [ebx],cl
  411bdf:	xchg   ebx,eax
  411be0:	test   al,0x6
  411be2:	pop    ds
  411be3:	daa    
  411be4:	pop    esi
  411be5:	jb     0x411bb3
  411be7:	ins    DWORD PTR es:[edi],dx
  411be8:	or     DWORD PTR [eax-0x74],0x5b723e56
  411bef:	std    
  411bf0:	inc    eax
  411bf1:	mov    bh,0x71
  411bf3:	into   
  411bf4:	call   0x3837:0xe6e653b6
  411bfb:	pop    ebx
  411bfc:	bound  ebp,QWORD PTR [edi+eiz*8]
  411bff:	mov    ebx,0xf47e9069
  411c04:	xor    edx,eax
  411c06:	(bad)  
  411c07:	loopne 0x411c15
  411c09:	imul   ecx,DWORD PTR [edx+0x50],0x8ca65872
  411c10:	inc    ebp
  411c11:	mov    ch,0x7a
  411c13:	adc    dl,BYTE PTR [ebp+0x71]
  411c16:	ja     0x411c2e
  411c18:	sahf   
  411c19:	lea    ecx,[eax-0x2a]
  411c1c:	(bad)  
  411c1d:	iret   
  411c1e:	mov    edx,0xa6bdfb8d
  411c23:	pop    eax
  411c24:	pusha  
  411c25:	popf   
  411c26:	mov    DWORD PTR [edi-0x603b0351],eax
  411c2c:	jns    0x411bdc
  411c2e:	sti    
  411c2f:	pop    eax
  411c30:	lods   eax,DWORD PTR ds:[esi]
  411c31:	pop    edi
  411c32:	sets   BYTE PTR [eax]
  411c35:	jns    0x411c09
  411c37:	retf   0xf1ec
  411c3a:	xlat   BYTE PTR ds:[ebx]
  411c3b:	imul   esp,DWORD PTR [eax+ecx*2-0x75],0x16
  411c40:	gs jne 0x411c9c
  411c43:	cs xchg edi,eax
  411c45:	popf   
  411c46:	cmp    BYTE PTR [eax],bl
  411c48:	jle    0x411c98
  411c4a:	ss pop ss
  411c4c:	pop    ebx
  411c4d:	ins    BYTE PTR es:[edi],dx
  411c4e:	add    ebp,DWORD PTR [edx]
  411c50:	(bad)  
  411c51:	mov    ds:0x8ca0d180,eax
  411c56:	pop    ebp
  411c57:	sbb    ebp,DWORD PTR [edi+eax*4]
  411c5a:	adc    DWORD PTR [ebx-0xc],edi
  411c5d:	js     0x411cb1
  411c5f:	aam    0x7f
  411c61:	dec    eax
  411c62:	dec    ebp
  411c63:	ja     0x411c54
  411c65:	xchg   ebx,eax
  411c66:	mov    DWORD PTR [eax+0x76537b4e],edx
  411c6c:	test   ebp,eax
  411c6e:	loope  0x411c9b
  411c70:	add    BYTE PTR [eax+0x5b],bh
  411c73:	push   esp
  411c74:	push   0xffffffef
  411c76:	mov    edi,0x4aeff435
  411c7b:	mov    ds:0x289e929b,al
  411c80:	pop    es
  411c81:	or     bh,BYTE PTR [esi+0x6e]
  411c84:	mov    al,ds:0x9de94056
  411c89:	int3   
  411c8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c8b:	mov    ch,0xe7
  411c8d:	xor    BYTE PTR ds:0xf7614193,bl
  411c93:	out    dx,eax
  411c94:	xor    eax,0x2f476adb
  411c99:	nop
  411c9a:	adc    al,0x96
  411c9c:	clc    
  411c9d:	sbb    DWORD PTR [ebx+0x70bbce0b],ebx
  411ca3:	pop    edx
  411ca4:	jnp    0x411cac
  411ca6:	pop    es
  411ca7:	out    dx,eax
  411ca8:	cmp    ebp,DWORD PTR [edi-0x3]
  411cab:	or     al,0x8
  411cad:	xchg   edi,eax
  411cae:	push   ss
  411caf:	idiv   esi
  411cb1:	mov    cl,0x54
  411cb3:	gs (bad) 
  411cb5:	mov    ch,0x18
  411cb7:	xchg   BYTE PTR [ecx],bl
  411cb9:	adc    ebp,eax
  411cbb:	push   0x695977a8
  411cc0:	xor    al,0x40
  411cc2:	mov    al,ds:0x60a0b23b
  411cc7:	jnp    0x411cfd
  411cc9:	cdq    
  411cca:	repz aaa 
  411ccc:	mov    BYTE PTR [esp+eax*2-0xb],bl
  411cd0:	(bad)  [ebx+0x24]
  411cd3:	scas   eax,DWORD PTR es:[edi]
  411cd4:	je     0x411ca5
  411cd6:	inc    eax
  411cd7:	xor    DWORD PTR [esp+eiz*4],eax
  411cda:	lock sbb al,0x4d
  411cdd:	loopne 0x411c90
  411cdf:	xchg   ebx,eax
  411ce0:	jl     0x411d09
  411ce2:	scas   al,BYTE PTR es:[edi]
  411ce3:	dec    ecx
  411ce4:	lds    edi,FWORD PTR [eax]
  411ce6:	fldcw  WORD PTR [eax-0x23f18bba]
  411cec:	mov    edi,0xdc0feba4
  411cf1:	shl    DWORD PTR [edi],1
  411cf3:	ins    DWORD PTR es:[edi],dx
  411cf4:	mov    eax,0x477f56e3
  411cf9:	sub    esp,ecx
  411cfb:	shl    DWORD PTR [eax-0x1f],1
  411cfe:	inc    ecx
  411cff:	xor    eax,0x414a6881
  411d04:	sbb    DWORD PTR [ebx+0x50],esp
  411d07:	(bad)  
  411d09:	sbb    DWORD PTR [ebx+0x6],0x7a
  411d0d:	fild   WORD PTR [eax]
  411d0f:	jns    0x411d01
  411d11:	jno    0x411d6c
  411d13:	adc    DWORD PTR [esi+0x39],ebp
  411d16:	pop    es
  411d17:	adc    eax,0x8b482569
  411d1c:	mov    dl,0x22
  411d1e:	push   ecx
  411d1f:	push   es
  411d20:	scas   al,BYTE PTR es:[edi]
  411d21:	mov    ebx,gs
  411d23:	into   
  411d24:	cdq    
  411d25:	and    eax,0xb9bc0b37
  411d2a:	dec    ebx
  411d2b:	shl    BYTE PTR [esp+ecx*1-0x78],1
  411d2f:	jp     0x411d0f
  411d31:	retf   
  411d32:	cmp    dl,BYTE PTR [edi+0x5800857]
  411d38:	mov    WORD PTR [ebx+0x6a],ss
  411d3b:	in     al,dx
  411d3c:	inc    esp
  411d3d:	xchg   ebx,eax
  411d3e:	popf   
  411d3f:	push   edi
  411d40:	rol    DWORD PTR [edi+0x4e],1
  411d43:	xor    al,0xb6
  411d45:	inc    esp
  411d46:	shl    BYTE PTR [eax+0x55],1
  411d49:	ja     0x411d04
  411d4b:	and    DWORD PTR [edi],0xffffffbc
  411d4e:	mov    ah,0xaf
  411d50:	push   ebp
  411d51:	push   esp
  411d52:	push   0xffffff80
  411d54:	mov    ds:0xecfbb378,al
  411d59:	ret    
  411d5a:	pop    ss
  411d5b:	sbb    dh,BYTE PTR [edx]
  411d5d:	test   DWORD PTR [edi],edx
  411d5f:	sub    al,BYTE PTR es:[eax-0x472f4ddd]
  411d66:	dec    edx
  411d67:	ja     0x411d53
  411d69:	out    0x44,al
  411d6b:	jmp    0x28269108
  411d70:	inc    edi
  411d71:	in     eax,dx
  411d72:	call   0xf454a1af
  411d77:	data16 fld TBYTE PTR [edi-0x747f4b70]
  411d7e:	pop    ss
  411d7f:	xchg   ecx,eax
  411d80:	inc    edi
  411d81:	int    0xc1
  411d83:	push   edi
  411d84:	jge    0x411d77
  411d86:	test   BYTE PTR [eax+ebp*4+0x337472fe],0xd3
  411d8e:	pusha  
  411d8f:	mov    eax,0x7d1f9d4f
  411d94:	mov    dh,BYTE PTR [edx]
  411d96:	test   eax,0xc30ee04b
  411d9b:	or     eax,0x1267199e
  411da0:	cs push cs
  411da2:	add    edi,ecx
  411da4:	in     al,0x94
  411da6:	cmp    ah,BYTE PTR [eax-0x29]
  411da9:	in     eax,dx
  411daa:	sahf   
  411dab:	jnp    0x411dfb
  411dad:	mov    ?,WORD PTR [esi]
  411daf:	test   eax,0x8f8fb3b3
  411db4:	mov    ebx,0xedac96f
  411db9:	add    eax,0x71843f2c
  411dbe:	xlat   BYTE PTR ds:[ebx]
  411dbf:	jns    0x411dc1
  411dc1:	into   
  411dc2:	dec    ecx
  411dc3:	scas   eax,DWORD PTR es:[edi]
  411dc4:	cmp    eax,0x32959021
  411dc9:	nop
  411dca:	dec    ebx
  411dcb:	sbb    DWORD PTR [eax+0x6c1f4434],eax
  411dd1:	jo     0x411e2a
  411dd3:	cwde   
  411dd4:	inc    edx
  411dd5:	mov    eax,ds:0xe0cdbe93
  411dda:	js     0x411e02
  411ddc:	loop   0x411dcd
  411dde:	bound  edi,QWORD PTR [edi-0x30]
  411de1:	cmp    DWORD PTR [edi],ecx
  411de3:	shr    BYTE PTR [esi+edx*8-0x4c53446f],cl
  411dea:	imul   ecx,edx,0x1c
  411ded:	push   ds
  411dee:	pop    es
  411def:	popf   
  411df0:	push   esi
  411df1:	pop    ebx
  411df2:	and    eax,0x327fe7ca
  411df7:	and    esi,DWORD PTR [eax]
  411df9:	clc    
  411dfa:	pusha  
  411dfb:	cmp    BYTE PTR [edx],0xb1
  411dfe:	adc    BYTE PTR ds:0x283737c0,dl
  411e04:	pusha  
  411e05:	and    eax,0x7e108931
  411e0a:	dec    esp
  411e0b:	xchg   ebx,eax
  411e0c:	push   0x66
  411e0e:	sub    eax,0x46110645
  411e13:	daa    
  411e14:	outs   dx,DWORD PTR ds:[esi]
  411e15:	jb     0x411e1b
  411e17:	(bad)  
  411e18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e19:	dec    esi
  411e1a:	(bad)  
  411e1c:	jae    0x411e03
  411e1e:	adc    al,0xc6
  411e20:	fild   DWORD PTR [eax+0x73]
  411e23:	add    al,0xbe
  411e25:	mov    ecx,0xbe8043b7
  411e2a:	fucom  st(4)
  411e2c:	push   esp
  411e2d:	xchg   edi,eax
  411e2e:	adc    dh,BYTE PTR [ecx-0x6d]
  411e31:	test   DWORD PTR [esi],edi
  411e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e35:	push   ds
  411e36:	pop    esp
  411e37:	in     al,dx
  411e38:	dec    esi
  411e39:	fs dec ebp
  411e3b:	mov    al,ds:0x713f5635
  411e40:	rol    BYTE PTR [edi],0x6e
  411e43:	adc    dl,ah
  411e45:	and    BYTE PTR ds:0xe77f774e,bh
  411e4b:	mov    ecx,0x46158d2
  411e50:	xchg   ebx,eax
  411e51:	xor    al,0x7
  411e53:	call   0x639ed7b0
  411e58:	out    0x39,al
  411e5a:	push   ds
  411e5b:	(bad)  
  411e5c:	std    
  411e5d:	pop    edx
  411e5e:	dec    eax
  411e5f:	add    al,0x94
  411e61:	iret   
  411e62:	lods   al,BYTE PTR ds:[esi]
  411e63:	mul    edi
  411e65:	mov    ah,0x90
  411e67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e68:	push   edx
  411e69:	aam    0x80
  411e6b:	(bad)  
  411e6c:	fild   QWORD PTR [esi]
  411e6e:	mov    ch,0xec
  411e70:	jae    0x411e00
  411e72:	cld    
  411e73:	fidivr DWORD PTR [ecx-0x4d81d5f6]
  411e79:	enter  0xcc40,0xc1
  411e7d:	adc    ah,dl
  411e7f:	rcl    BYTE PTR [edx-0x71da2835],1
  411e85:	icebp  
  411e86:	pop    edi
  411e87:	dec    edi
  411e88:	sub    edx,DWORD PTR [edi]
  411e8a:	cld    
  411e8b:	jmp    0xa07d97a7
  411e90:	jecxz  0x411e81
  411e92:	jecxz  0x411e59
  411e94:	and    bl,BYTE PTR [edx]
  411e96:	adc    ch,BYTE PTR [ebx+ecx*1-0x20]
  411e9a:	pop    edx
  411e9b:	inc    ecx
  411e9c:	in     al,0x64
  411e9e:	pop    esp
  411e9f:	mov    al,0x43
  411ea1:	iret   
  411ea2:	mov    ds:0x1392e5dd,al
  411ea7:	inc    BYTE PTR [ecx]
  411ea9:	xchg   ebx,eax
  411eaa:	in     eax,dx
  411eab:	loop   0x411e76
  411ead:	pop    ecx
  411eae:	mov    ch,0xd9
  411eb0:	arpl   WORD PTR [edx],bp
  411eb2:	push   0x4b6d22a5
  411eb7:	sub    DWORD PTR [ebp+0x2a],eax
  411eba:	jle    0x411f25
  411ebc:	jmp    FWORD PTR [edi+0x9a750f6]
  411ec2:	sbb    eax,DWORD PTR [ebx-0x1413ac6f]
  411ec8:	jmp    0x6321:0x3ac4af3f
  411ecf:	arpl   WORD PTR [ebp-0x68],dx
  411ed2:	ins    DWORD PTR es:[edi],dx
  411ed3:	sbb    eax,DWORD PTR [esi+ebp*8-0x12665b51]
  411eda:	jecxz  0x411f21
  411edc:	cdq    
  411edd:	push   edi
  411ede:	mov    ah,0xcc
  411ee0:	sbb    BYTE PTR [ebp+0x2c],cl
  411ee3:	fstp   TBYTE PTR [edi-0x2dba364e]
  411ee9:	jb     0x411f35
  411eeb:	jmp    0x411ef3
  411eed:	inc    esp
  411eee:	test   BYTE PTR [ebx-0x19],ch
  411ef1:	lahf   
  411ef2:	pop    edi
  411ef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ef4:	push   edx
  411ef5:	mov    eax,ds:0x6b107c01
  411efa:	xchg   DWORD PTR [edx],edi
  411efc:	inc    edx
  411efd:	or     al,0xf3
  411eff:	fdivrp st(5),st
  411f01:	adc    dl,dl
  411f03:	lods   eax,DWORD PTR ds:[esi]
  411f04:	mul    DWORD PTR [esi]
  411f06:	call   0x8380a798
  411f0b:	imul   ebp,DWORD PTR [edx-0x5e],0xffffffeb
  411f0f:	ret    
  411f10:	fdivp  st(6),st
  411f12:	cmp    eax,0x519f48ad
  411f17:	loope  0x411e9a
  411f19:	sub    eax,DWORD PTR [ebx-0x2370606e]
  411f1f:	mov    al,al
  411f21:	or     al,0xbf
  411f23:	out    dx,eax
  411f24:	retf   
  411f25:	xchg   BYTE PTR ss:[esi+0x60364824],ah
  411f2c:	rol    BYTE PTR [ebx+0x66],1
  411f2f:	xor    al,0xb3
  411f31:	or     ch,BYTE PTR [eax+0xe8cca2a]
  411f37:	int3   
  411f38:	je     0x411f13
  411f3a:	mov    eax,ds:0x8faa595f
  411f3f:	inc    ecx
  411f40:	xchg   dh,dl
  411f42:	sub    DWORD PTR ds:0xf874241b,ecx
  411f48:	push   ebp
  411f49:	pop    edx
  411f4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f4b:	imul   edi,DWORD PTR [ecx+0x10b99c4b],0xa
  411f52:	scas   eax,DWORD PTR es:[edi]
  411f53:	add    BYTE PTR [eax+0x6e3d8b55],0x86
  411f5a:	inc    ebx
  411f5b:	sub    al,cl
  411f5d:	cmp    eax,0x67584bec
  411f62:	leave  
  411f63:	pop    eax
  411f64:	mov    al,ds:0x78fd89d4
  411f69:	inc    DWORD PTR [edi]
  411f6b:	aas    
  411f6c:	test   al,0x18
  411f6e:	xor    DWORD PTR [ecx-0x1],edi
  411f71:	mov    dl,0x3f
  411f73:	ror    eax,0x8c
  411f76:	mov    dh,0xa8
  411f78:	daa    
  411f79:	idiv   DWORD PTR [ebx]
  411f7b:	pop    ebx
  411f7c:	mov    BYTE PTR [ebx+0x463d5ab9],bl
  411f82:	inc    ebp
  411f83:	jns    0x411f51
  411f85:	xor    al,BYTE PTR [esi+esi*1-0xa]
  411f89:	fadd   QWORD PTR [ebx+0x4f18f710]
  411f8f:	dec    esp
  411f90:	cmp    BYTE PTR [eax+0xb55024b],dh
  411f96:	sub    cl,ch
  411f98:	lods   eax,DWORD PTR ds:[esi]
  411f99:	jae    0x41200e
  411f9b:	pop    esp
  411f9c:	pop    es
  411f9d:	out    0x23,al
  411f9f:	in     al,0x5d
  411fa1:	(bad)  
  411fa2:	stos   DWORD PTR es:[edi],eax
  411fa3:	sbb    eax,0xee88510b
  411fa8:	jae    0x411f52
  411faa:	cmp    esp,esi
  411fac:	adc    ah,al
  411fae:	jns    0x411f78
  411fb0:	jmp    0x91c46fda
  411fb5:	in     eax,dx
  411fb6:	push   ecx
  411fb7:	or     BYTE PTR [edi+0x2535a731],0xea
  411fbe:	test   al,0x4e
  411fc0:	inc    ecx
  411fc1:	and    al,0x80
  411fc3:	fnsave [esi+0x37]
  411fc6:	imul   edx,DWORD PTR [ebx],0x4b
  411fc9:	jnp    0x412033
  411fcb:	int    0x8e
  411fcd:	rcl    DWORD PTR [ecx],0x4b
  411fd0:	mov    esp,0x535c7183
  411fd5:	jnp    0x41204c
  411fd7:	sbb    BYTE PTR [esi],ah
  411fd9:	push   0xffffff9b
  411fdb:	or     al,0x62
  411fdd:	sub    BYTE PTR [edx+0x7b],0xbd
  411fe1:	mov    al,0xb6
  411fe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fe4:	mov    edx,0x406018c9
  411fe9:	pushf  
  411fea:	test   DWORD PTR [ebp-0x68],0x17e3f475
  411ff1:	ret    0xa39e
  411ff4:	adc    ebx,ecx
  411ff6:	jmp    0x504d:0xd2e7e247
  411ffd:	push   edi
  411ffe:	push   DWORD PTR [edx]
  412000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412001:	pop    WORD PTR [ecx+0x491189a]
  412008:	scas   eax,DWORD PTR es:[edi]
  412009:	pop    es
  41200a:	fstp   DWORD PTR [eax]
  41200c:	dec    ebx
  41200d:	ror    esi,cl
  41200f:	mov    dh,0x96
  412011:	jg     0x41203b
  412013:	repz pop es
  412015:	retf   
  412016:	ds loop 0x412058
  412019:	push   ecx
  41201a:	mov    al,ds:0x27ec92cf
  41201f:	sub    ch,BYTE PTR [esi+0x20e9ef3]
  412025:	sar    DWORD PTR [ecx-0x5b95c94b],1
  41202b:	outs   dx,BYTE PTR ds:[esi]
  41202c:	adc    BYTE PTR [esi],ch
  41202e:	test   al,cl
  412030:	out    dx,al
  412031:	les    sp,DWORD PTR [esi+esi*1+0x574063cb]
  412039:	ins    DWORD PTR es:[edi],dx
  41203a:	aas    
  41203b:	sub    ecx,DWORD PTR [edx+0x5b6217b4]
  412041:	inc    edx
  412042:	mov    BYTE PTR [esi-0x421d464b],0x86
  412049:	jae    0x412084
  41204b:	ret    0x54bd
  41204e:	add    DWORD PTR [edx*2+0x2a598082],0x6d
  412056:	lea    edi,[ecx+ebp*8-0x1ce1bff]
  41205d:	xor    eax,0x7d9ed6d4
  412062:	jnp    0x41203a
  412064:	cli    
  412065:	xchg   BYTE PTR [esi],cl
  412067:	dec    edi
  412068:	and    BYTE PTR [ebp+0x77],ah
  41206b:	pop    edx
  41206c:	shl    DWORD PTR [eax],0x3e
  41206f:	cwde   
  412070:	jl     0x412076
  412072:	jmp    0xc0df:0xe875423e
  412079:	lahf   
  41207a:	xchg   DWORD PTR [edx-0x35],esp
  41207d:	int    0x57
  41207f:	outs   dx,BYTE PTR ds:[si]
  412081:	test   BYTE PTR [ecx+0x1fb432a6],dl
  412087:	xchg   bh,dl
  412089:	dec    ecx
  41208a:	sub    BYTE PTR [ecx-0x483fa9dc],0x57
  412091:	pop    ds
  412092:	fcom   DWORD PTR [esi-0x61]
  412095:	push   edx
  412096:	xchg   BYTE PTR [ecx+0x20],cl
  412099:	(bad)  
  41209a:	mov    DWORD PTR [edx+0x45],edi
  41209d:	lods   eax,DWORD PTR ds:[esi]
  41209e:	rol    DWORD PTR ds:0x6f3cb2db,cl
  4120a4:	dec    ebp
  4120a5:	leave  
  4120a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120a7:	xor    eax,0x7ded9ab8
  4120ac:	ficomp DWORD PTR [edi-0x6b]
  4120af:	gs loope 0x4120f6
  4120b2:	xor    al,bl
  4120b4:	xchg   ecx,eax
  4120b5:	sbb    eax,0xf6da0a83
  4120ba:	or     eax,0xecbad2da
  4120bf:	sub    BYTE PTR [eax+0x5b],dh
  4120c2:	lds    ebp,FWORD PTR [ebx+0x72]
  4120c5:	test   esi,ebx
  4120c7:	int    0xf8
  4120c9:	sbb    eax,0xcba06f33
  4120ce:	test   DWORD PTR [edi-0x14413f28],esp
  4120d4:	ja     0x4120ae
  4120d6:	(bad)  
  4120d7:	sbb    edx,ebx
  4120d9:	pop    eax
  4120da:	pop    ss
  4120db:	cmc    
  4120dc:	shr    dh,1
  4120de:	xchg   DWORD PTR [esi+0x2aadda87],ebp
  4120e4:	ins    BYTE PTR es:[edi],dx
  4120e5:	das    
  4120e6:	push   ss
  4120e7:	sti    
  4120e8:	xchg   ebx,eax
  4120e9:	push   ebx
  4120ea:	cld    
  4120eb:	mov    ds:0x5ad36fc4,al
  4120f0:	push   esi
  4120f1:	mov    es,WORD PTR [esp+ebx*4]
  4120f4:	cdq    
  4120f5:	mov    ecx,0xd8c12832
  4120fa:	and    DWORD PTR [ebp+0xd],ebp
  4120fd:	cmp    esp,edi
  4120ff:	mov    ebx,0xce5a5fc4
  412104:	or     eax,0xb802febb
  412109:	js     0x41212a
  41210b:	push   edi
  41210c:	and    ch,BYTE PTR [ebx-0x2a9e2281]
  412112:	daa    
  412113:	scas   eax,DWORD PTR es:[edi]
  412114:	mov    al,0x46
  412116:	ja     0x412154
  412118:	mov    ah,0xa9
  41211a:	push   ds
  41211b:	inc    ebx
  41211c:	scas   al,BYTE PTR es:[edi]
  41211d:	jmp    0xda032852
  412122:	xchg   eax,edx
  412124:	dec    ebp
  412125:	push   edi
  412126:	add    ah,ch
  412128:	cmp    cl,BYTE PTR [edi-0x1b]
  41212b:	test   DWORD PTR [edx+0x28600fa5],esp
  412131:	add    bh,BYTE PTR ds:0xe7f34c3f
  412137:	fcom   DWORD PTR [edi+0x81047f4]
  41213d:	mov    ds:0xd853e1c0,al
  412142:	mov    ah,BYTE PTR [ecx]
  412144:	mov    esp,0x63c37eb4
  412149:	jmp    0x71c4:0x3cc21c99
  412150:	xchg   esi,eax
  412151:	sub    cl,bl
  412153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412154:	cmp    dl,BYTE PTR [ecx+0x443ac0e6]
  41215a:	jecxz  0x41218d
  41215c:	mov    ch,0x2
  41215e:	ror    BYTE PTR [ecx-0x7b6cab03],1
  412164:	out    dx,al
  412165:	(bad)  
  412166:	push   edi
  412167:	xor    DWORD PTR [edi-0x28],esp
  41216a:	and    eax,0x7baa2854
  41216f:	ja     0x412152
  412171:	xchg   ebp,eax
  412172:	gs in  eax,0x9c
  412175:	inc    esp
  412176:	es mov bl,0xa5
  412179:	inc    eax
  41217a:	cli    
  41217b:	fsub   st(3),st
  41217d:	in     al,0x7a
  41217f:	inc    ebx
  412180:	sub    dh,ah
  412182:	es (bad) 
  412185:	mov    edx,0xf22ad686
  41218a:	(bad)  
  41218b:	iret   
  41218c:	mov    ds:0x830cb47d,eax
  412191:	and    al,BYTE PTR ds:0x4cbb4ca3
  412197:	xchg   esp,eax
  412198:	add    BYTE PTR [ecx],ah
  41219a:	push   ss
  41219b:	js     0x412149
  41219d:	lahf   
  41219e:	lds    edi,FWORD PTR [ebx+0xe7775b0]
  4121a4:	push   edx
  4121a5:	push   0xed91de63
  4121aa:	imul   ebx,eax,0xffffffff
  4121ad:	or     bh,dl
  4121af:	stc    
  4121b0:	mov    ebx,0xaa00be91
  4121b5:	shl    DWORD PTR [edi],cl
  4121b7:	or     eax,0xc17aaf29
  4121bc:	data16 (bad) 
  4121be:	stos   BYTE PTR es:[edi],al
  4121bf:	repz or eax,ebx
  4121c2:	fst    DWORD PTR [edx]
  4121c4:	imul   edx,DWORD PTR [ebx+0x54],0xe7f604fa
  4121cb:	push   esi
  4121cc:	lds    ebx,FWORD PTR [ecx-0x99ea8f4]
  4121d2:	mov    dh,0x1a
  4121d4:	iret   
  4121d5:	jle    0x412174
  4121d7:	mov    DWORD PTR [eax-0x77],edx
  4121da:	or     eax,0xfacf199a
  4121df:	bound  edi,QWORD PTR [ecx-0x48]
  4121e2:	sub    edx,DWORD PTR [eax-0xa2fff1b]
  4121e8:	or     dh,bh
  4121ea:	add    ecx,DWORD PTR [ebx]
  4121ec:	sub    eax,0x84463098
  4121f1:	addr16 cmp esp,ecx
  4121f4:	xor    eax,0xc588d1d4
  4121f9:	cli    
  4121fa:	adc    BYTE PTR [ecx+0x52],bh
  4121fd:	dec    ebp
  4121fe:	add    al,0x63
  412200:	inc    ecx
  412201:	test   al,0x24
  412203:	nop
  412204:	(bad)  
  412206:	push   0x21
  412208:	mov    cs:0xdf98c801,eax
  41220e:	je     0x4121f0
  412210:	xchg   cl,dl
  412212:	out    0x9c,al
  412214:	add    cl,dl
  412216:	dec    ebp
  412217:	(bad)  
  412218:	xor    BYTE PTR [ebx+0x2f],bl
  41221b:	lods   eax,DWORD PTR ds:[esi]
  41221c:	xchg   ecx,eax
  41221d:	add    eax,esp
  41221f:	or     cl,BYTE PTR [esi]
  412221:	sub    eax,0x60da51dd
  412226:	push   ds
  412227:	movntq (bad),mm7
  412228:	out    0xf9,eax
  41222a:	mov    bh,0xd1
  41222c:	lock iret 
  41222e:	aam    0xc
  412230:	adc    ecx,DWORD PTR [edi-0x29e0631]
  412236:	mov    edx,0x6bb4381c
  41223b:	or     bl,dl
  41223d:	pop    esi
  41223e:	inc    esp
  41223f:	daa    
  412240:	hlt    
  412241:	or     BYTE PTR [edi],0x4
  412244:	bound  ecx,QWORD PTR [edi]
  412246:	mov    al,ds:0xa9ff995c
  41224b:	pop    ebx
  41224c:	sbb    DWORD PTR [ebx],0x56d69c5c
  412252:	jne    0x41225a
  412254:	cmp    DWORD PTR [ebp-0x126a7ba9],edx
  41225a:	mov    ecx,0x4aa65d6a
  41225f:	imul   edi,DWORD PTR [eax],0x6
  412262:	xchg   sp,ax
  412264:	push   eax
  412265:	or     eax,0xc3a48da9
  41226a:	gs jbe 0x412212
  41226d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41226e:	sbb    al,0x6c
  412270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412271:	mov    ds:0x60c72dd,eax
  412276:	popa   
  412277:	imul   ecx,DWORD PTR [edi],0x79dcc43d
  41227d:	mov    fs,WORD PTR [edx+0x6]
  412280:	pop    edi
  412281:	daa    
  412282:	jmp    0x76aa:0x48f8c5c
  412289:	xor    al,0xcc
  41228b:	adc    al,0x67
  41228d:	xor    BYTE PTR [ecx-0x64],cl
  412290:	cmp    eax,DWORD PTR [ebp-0x7c]
  412293:	and    BYTE PTR [edi+0x44],bl
  412296:	inc    ebx
  412297:	inc    ebp
  412298:	and    dl,BYTE PTR [edi+0x69]
  41229b:	das    
  41229c:	call   0xef48:0xf3a3c6d0
  4122a3:	sbb    ebx,eax
  4122a5:	push   0x6c85796c
  4122aa:	(bad)  
  4122ac:	out    0x4f,eax
  4122ae:	out    dx,al
  4122af:	adc    DWORD PTR [ecx-0xb3dc6ac],eax
  4122b5:	cld    
  4122b6:	xchg   esp,eax
  4122b7:	jp     0x412249
  4122b9:	(bad)  
  4122ba:	out    0x89,eax
  4122bc:	adc    DWORD PTR [ebx],ebp
  4122be:	js     0x4122c1
  4122c0:	cmp    ch,ah
  4122c2:	mov    al,0xc1
  4122c4:	and    eax,0x4037a269
  4122c9:	test   eax,0xa9479cbf
  4122ce:	loope  0x412327
  4122d0:	fisub  WORD PTR [ecx-0x75259f4d]
  4122d6:	out    0x1e,al
  4122d8:	xlat   BYTE PTR ds:[ebx]
  4122d9:	xlat   BYTE PTR ds:[ebx]
  4122db:	mov    bh,0x9b
  4122dd:	add    bh,BYTE PTR [edx-0x71]
  4122e0:	lods   eax,DWORD PTR ds:[esi]
  4122e1:	jae    0x4122dc
  4122e3:	mov    esi,eax
  4122e5:	add    BYTE PTR [edx],bh
  4122e7:	xor    al,0xe6
  4122e9:	adc    esp,ebp
  4122eb:	add    al,0x3a
  4122ed:	test   BYTE PTR [edx+0x13],al
  4122f0:	call   FWORD PTR es:[edi+0x4f]
  4122f4:	xor    bh,BYTE PTR [esi+0x4d75d334]
  4122fa:	cmovle edx,DWORD PTR [edi]
  4122fd:	repnz div DWORD PTR [esi-0x7f5aef3c]
  412304:	jecxz  0x4122f8
  412306:	int3   
  412307:	(bad)  [edi]
  412309:	enter  0x4b8a,0x30
  41230d:	push   ds
  41230e:	scas   al,BYTE PTR es:[edi]
  41230f:	sar    BYTE PTR [edi+0x60ee42bf],cl
  412315:	lods   eax,DWORD PTR ds:[esi]
  412316:	pop    esp
  412317:	lds    edi,FWORD PTR [ebx+0x30f28fde]
  41231d:	call   0x41c0c59d
  412322:	mov    al,0x64
  412324:	fcom   DWORD PTR [ebx+0x9]
  412327:	adc    ah,BYTE PTR [ecx+0xd878004]
  41232d:	or     BYTE PTR [eax+0x28],bl
  412330:	push   cs
  412331:	mov    ebp,0x52ef6637
  412336:	(bad)  
  412337:	mov    ch,0x7b
  412339:	push   ds
  41233a:	inc    edi
  41233b:	adc    al,0xee
  41233d:	push   ss
  41233e:	stc    
  41233f:	push   edx
  412340:	nop
  412341:	adc    edx,DWORD PTR [eax-0x1d240207]
  412347:	pusha  
  412348:	push   ebp
  412349:	push   cs
  41234a:	push   esp
  41234b:	imul   edi,DWORD PTR [ebx+0x60befc8b],0x5e
  412352:	jge    0x4123c5
  412354:	cmp    al,0x14
  412356:	js     0x41232d
  412358:	sub    edx,DWORD PTR [esi-0x3f393c78]
  41235e:	test   BYTE PTR [edx+0x20eeaaee],bl
  412364:	cmp    eax,DWORD PTR [ecx-0x1e1368c]
  41236a:	aam    0x75
  41236c:	call   0xcd59f9e8
  412371:	jp     0x412346
  412373:	push   ecx
  412374:	mov    esp,DWORD PTR [edi]
  412376:	xchg   esp,eax
  412377:	or     eax,0xf89a7088
  41237c:	cs test bh,0xc7
  412380:	jmp    0xa904fd6
  412385:	es mov edx,0x5b3b7ded
  41238b:	jl     0x41233c
  41238d:	fsubr  DWORD PTR [esp+edx*4]
  412390:	xchg   esi,eax
  412391:	mov    dl,0x72
  412393:	mov    esi,0x788c4697
  412398:	ret    
  412399:	xor    BYTE PTR [edi+eax*1],dh
  41239c:	xchg   edi,eax
  41239d:	hlt    
  41239e:	xor    ebx,DWORD PTR [edi+0x70c31df9]
  4123a4:	(bad)  
  4123a5:	adc    al,0x5e
  4123a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123a8:	cli    
  4123a9:	repnz mov ch,0x93
  4123ac:	(bad)  
  4123ad:	aas    
  4123ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123af:	test   BYTE PTR [ecx+0x4],dh
  4123b2:	sar    al,0xc7
  4123b5:	jge    0x412416
  4123b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123b8:	xchg   ebp,eax
  4123b9:	and    BYTE PTR [edx],al
  4123bb:	call   0xbfe1:0xf0177061
  4123c2:	mov    ?,ebp
  4123c4:	imul   esp,esi,0x6a41ce98
  4123ca:	in     al,0xad
  4123cc:	shl    al,1
  4123ce:	in     al,dx
  4123cf:	mov    ds:0xd9974284,al
  4123d4:	pop    edi
  4123d5:	call   0x4523:0x696059d3
  4123dc:	ds lock mov edx,0xbf4a63bf
  4123e3:	lods   eax,DWORD PTR ds:[esi]
  4123e4:	dec    edx
  4123e5:	in     eax,0xc5
  4123e7:	jmp    0xb0a6:0xfa3b4209
  4123ee:	daa    
  4123ef:	xlat   BYTE PTR ds:[ebx]
  4123f0:	inc    edx
  4123f1:	(bad)  
  4123f2:	ins    DWORD PTR es:[edi],dx
  4123f3:	cmp    eax,0x19fed2d8
  4123f8:	and    ch,BYTE PTR [edi]
  4123fa:	pop    esp
  4123fb:	mov    al,0xf9
  4123fd:	jp     0x412403
  4123ff:	inc    edi
  412400:	jmp    0xdf8ffd5a
  412405:	pop    ds
  412406:	test   DWORD PTR [esi],edx
  412408:	xchg   ebx,eax
  412409:	fild   WORD PTR [eax]
  41240b:	sbb    al,0xb8
  41240d:	mov    WORD PTR [eax+0xa],ds
  412410:	xchg   ebp,eax
  412411:	sbb    eax,0xb2e67f21
  412416:	mov    edi,0xe0f8369d
  41241b:	mov    edx,0x50ecf6a
  412420:	ss popa 
  412422:	mov    esi,es
  412424:	(bad)  
  412426:	push   esi
  412427:	jns    0x4123c0
  412429:	jo     0x4123e8
  41242b:	push   edi
  41242c:	test   BYTE PTR [eax],dl
  41242e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41242f:	inc    edx
  412430:	fwait
  412431:	jb     0x41243c
  412433:	pop    edx
  412434:	mov    ch,0x0
  412436:	inc    esp
  412437:	jo     0x4123c1
  412439:	int    0xab
  41243b:	xlat   BYTE PTR ds:[ebx]
  41243c:	sbb    bl,BYTE PTR [esi]
  41243e:	mov    bl,bl
  412440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412441:	xchg   esi,eax
  412442:	jne    0x4124b1
  412444:	xchg   BYTE PTR [edi],ah
  412446:	sub    eax,0x594c3121
  41244b:	fcom   DWORD PTR [eax-0x6c8f89ab]
  412451:	idiv   DWORD PTR [edx+edi*4-0x188c76c0]
  412458:	cmc    
  412459:	icebp  
  41245a:	outs   dx,DWORD PTR ds:[esi]
  41245b:	cdq    
  41245c:	push   edi
  41245d:	xor    esi,DWORD PTR [ebp+0x23]
  412460:	inc    ecx
  412461:	dec    esp
  412462:	(bad)  
  412463:	mov    ah,0x99
  412465:	retf   
  412466:	sub    eax,0xec82b49f
  41246b:	retf   
  41246c:	mov    ebp,0x71d1651
  412471:	or     DWORD PTR [eax-0x1b],esp
  412474:	inc    esp
  412475:	pop    esi
  412476:	jne    0x4124b1
  412478:	test   DWORD PTR ss:[ecx-0x7823c673],edx
  41247f:	les    ecx,FWORD PTR [edx]
  412481:	neg    DWORD PTR [eax]
  412483:	leave  
  412484:	stc    
  412485:	daa    
  412486:	(bad)  
  412487:	add    BYTE PTR es:[eax-0x4f40d636],dh
  41248e:	(bad)  
  41248f:	retf   0x586f
  412492:	mov    bh,0x80
  412494:	or     DWORD PTR [esi],eax
  412496:	sar    DWORD PTR [ecx-0x1281b691],1
  41249c:	retf   0x2776
  41249f:	xor    edx,DWORD PTR [ebp+0x451f465d]
  4124a5:	xchg   edx,eax
  4124a6:	and    BYTE PTR [ecx+esi*1-0x3511539d],0xda
  4124ae:	jno    0x4124a7
  4124b0:	sar    BYTE PTR [ecx],cl
  4124b2:	dec    edx
  4124b3:	shr    DWORD PTR [ebp-0x78734f7a],1
  4124b9:	xor    bh,dl
  4124bb:	(bad)
  4124bf:	push   fs
  4124c1:	cli    
  4124c2:	cmp    dh,BYTE PTR [ecx]
  4124c4:	mov    dl,0x41
  4124c6:	sub    edi,ebx
  4124c8:	dec    DWORD PTR [ecx]
  4124ca:	jbe    0x4124e7
  4124cc:	adc    BYTE PTR [edx-0x6460c2c2],al
  4124d2:	rcl    ebp,0x79
  4124d5:	lds    esi,FWORD PTR [ebp+0x69]
  4124d8:	cli    
  4124d9:	fwait
  4124da:	mov    bl,0x43
  4124dc:	pop    ecx
  4124dd:	sub    DWORD PTR [eax+edi*2],ecx
  4124e0:	jnp    0x412464
  4124e2:	aas    
  4124e3:	inc    ebp
  4124e4:	sub    eax,0xe57632d8
  4124e9:	mov    ds:0x9c6f0295,eax
  4124ee:	and    dl,al
  4124f0:	inc    DWORD PTR [ebx]
  4124f2:	dec    ecx
  4124f3:	test   DWORD PTR [esi],edi
  4124f5:	ins    DWORD PTR es:[edi],dx
  4124f6:	mov    ebp,0x7ffaccca
  4124fb:	mov    cl,0xf6
  4124fd:	mov    edx,DWORD PTR [ecx+ecx*8+0xa]
  412501:	sub    bl,BYTE PTR [esi-0xa]
  412504:	mov    eax,gs:0xa8cdfcd
  41250a:	add    eax,0xd7b34043
  41250f:	xor    al,0x92
  412511:	inc    edx
  412512:	ins    BYTE PTR es:[edi],dx
  412513:	aas    
  412514:	stos   BYTE PTR es:[edi],al
  412515:	das    
  412516:	adc    bl,BYTE PTR [ebp-0x53]
  412519:	xor    esp,ecx
  41251b:	cs repnz loopne 0x4124bd
  41251f:	pop    ss
  412520:	pop    edx
  412521:	cmp    al,0x68
  412523:	test   al,0x5c
  412525:	adc    eax,0xb191e695
  41252a:	push   edi
  41252b:	dec    edx
  41252c:	aaa    
  41252d:	fistp  QWORD PTR [edx+eax*1+0x6]
  412531:	cs mov ebp,0xc8f1c0e0
  412537:	add    al,0x7a
  412539:	fidiv  DWORD PTR [ebx+0x6]
  41253c:	faddp  st(6),st
  41253e:	inc    esp
  41253f:	pop    edx
  412540:	mov    ds:0x2f4ca70b,al
  412545:	jecxz  0x412555
  412547:	ins    BYTE PTR es:[edi],dx
  412548:	nop
  412549:	(bad)  
  41254a:	sbb    al,0x39
  41254c:	ds inc esi
  41254e:	mov    bl,0xa4
  412550:	pop    ebp
  412551:	ret    0x7aaf
  412554:	test   BYTE PTR [edx-0x6a],0x8e
  412558:	mov    ss,WORD PTR [ebx+0x58]
  41255b:	leave  
  41255c:	cli    
  41255d:	lods   al,BYTE PTR ds:[esi]
  41255e:	scas   eax,DWORD PTR es:[edi]
  41255f:	sub    eax,0x56b57949
  412564:	jae    0x4125b9
  412566:	lds    ebp,FWORD PTR [edx-0x7e18ac4]
  41256c:	das    
  41256d:	xchg   ebx,eax
  41256e:	sub    BYTE PTR [eax],cl
  412570:	popa   
  412571:	nop
  412572:	jno    0x41252e
  412574:	xchg   DWORD PTR [esi+0x31],edx
  412577:	mov    al,0x1d
  412579:	outs   dx,BYTE PTR ds:[esi]
  41257a:	out    0xcb,al
  41257c:	push   esp
  41257d:	jb     0x412542
  41257f:	inc    ebx
  412580:	into   
  412581:	rcr    DWORD PTR [edi+eiz*4],1
  412584:	es cld 
  412586:	and    eax,0xa82d61f
  41258b:	xor    al,0xca
  41258d:	and    al,0x90
  41258f:	jg     0x4125d0
  412591:	ds pop esi
  412593:	or     DWORD PTR [esi+ebx*2],eax
  412596:	adc    ebx,esp
  412598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412599:	jge    0x4125b4
  41259b:	push   es
  41259c:	std    
  41259d:	test   eax,0x54b95d83
  4125a2:	push   es
  4125a3:	in     al,0x9
  4125a5:	loope  0x4125d1
  4125a7:	dec    edx
  4125a8:	dec    edi
  4125a9:	and    ebp,DWORD PTR [ecx+0x3]
  4125ac:	pop    ss
  4125ad:	in     eax,dx
  4125ae:	jno    0x412550
  4125b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125b1:	pop    ss
  4125b2:	push   edx
  4125b3:	and    bl,dh
  4125b5:	lock sub eax,0x399d9180
  4125bb:	sbb    bh,dl
  4125bd:	loope  0x412604
  4125bf:	mov    dl,0x14
  4125c1:	jno    0x4125df
  4125c3:	ror    BYTE PTR [ebp-0x64],1
  4125c6:	cmp    BYTE PTR [edi-0x5cdd04f9],cl
  4125cc:	int    0x9e
  4125ce:	call   0x46bac3f
  4125d3:	mov    al,0x99
  4125d5:	es add al,0x27
  4125d8:	cwde   
  4125d9:	mov    bl,0xc3
  4125db:	or     eax,0xd310127
  4125e0:	add    bl,bl
  4125e2:	mov    edi,0x85ce869e
  4125e7:	leave  
  4125e8:	call   0x4b51:0x24a31397
  4125ef:	jno    0x4125ca
  4125f1:	int    0x1c
  4125f3:	sub    BYTE PTR [edx],ah
  4125f5:	push   es
  4125f6:	inc    edi
  4125f7:	push   0x94aaecdb
  4125fc:	xor    BYTE PTR fs:[ebp-0x5a56ed86],al
  412603:	xchg   ecx,eax
  412604:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  412606:	cmovo  esp,DWORD PTR [esi+edi*4]
  41260a:	push   0xffffffa4
  41260c:	push   0x6a73b1b2
  412611:	dec    edx
  412612:	or     BYTE PTR [edx+esi*4],dl
  412615:	fst    QWORD PTR [edx-0x59aa79e3]
  41261b:	jb     0x412651
  41261d:	push   ecx
  41261e:	inc    esp
  41261f:	sbb    BYTE PTR [ebp+ecx*4-0x689375f3],dh
  412626:	jbe    0x4125b8
  412628:	jnp    0x4125ec
  41262a:	jge    0x412608
  41262c:	fst    QWORD PTR [esi+0x63]
  41262f:	push   ss
  412630:	xlat   BYTE PTR ds:[ebx]
  412631:	mov    edx,0x8cba4578
  412636:	mov    cl,0xbf
  412638:	imul   ecx,DWORD PTR [ebx-0x6a],0x9fb8dada
  41263f:	pop    esp
  412640:	ret    
  412641:	or     DWORD PTR [ebx],0x15
  412644:	loopne 0x41261f
  412646:	mov    ebp,0x6f94da58
  41264b:	pusha  
  41264c:	dec    ecx
  41264d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41264e:	cmp    al,0x9e
  412651:	sbb    ecx,DWORD PTR [eax+0x30]
  412654:	jmp    0xd10bd6cf
  412659:	and    eax,0x9b357a36
  41265e:	fidiv  DWORD PTR [ecx+ecx*8]
  412661:	xor    eax,0x803ffa73
  412666:	outs   dx,BYTE PTR ds:[esi]
  412667:	sub    al,0x82
  412669:	out    0xef,eax
  41266b:	push   esp
  41266c:	(bad)  
  41266d:	and    esp,esi
  41266f:	ret    
  412670:	ret    0xfdf2
  412673:	in     al,dx
  412674:	mov    ebp,0xee6f7f4f
  412679:	sbb    cl,dl
  41267b:	in     al,0xfa
  41267d:	xchg   esp,eax
  41267e:	pop    edx
  41267f:	or     BYTE PTR [edx+0x51],bh
  412682:	scas   al,BYTE PTR es:[edi]
  412683:	mov    ss,WORD PTR [edi]
  412685:	push   es
  412686:	or     ecx,DWORD PTR [ebp+0x73]
  412689:	adc    al,ch
  41268b:	loopne 0x412658
  41268d:	cld    
  41268e:	out    dx,al
  41268f:	cmp    DWORD PTR [ebx],ebp
  412691:	cmp    al,dl
  412693:	cwde   
  412694:	add    BYTE PTR [edi+0x384c46e9],0x47
  41269b:	adc    al,0x70
  41269d:	pop    ds
  41269e:	leave  
  41269f:	xchg   DWORD PTR [ecx+0x4fbe6ea7],ecx
  4126a5:	out    0xa5,al
  4126a7:	(bad)  
  4126a8:	jns    0x4126d2
  4126aa:	sub    BYTE PTR [ebp+0x39],dh
  4126ad:	cdq    
  4126ae:	sbb    BYTE PTR ss:[edi],ch
  4126b1:	ret    
  4126b2:	nop
  4126b3:	mov    WORD PTR [esi-0x392d30cc],fs
  4126b9:	jo     0x412644
  4126bb:	push   eax
  4126bc:	mov    dh,ah
  4126be:	sbb    al,0xc0
  4126c0:	pop    es
  4126c1:	dec    eax
  4126c2:	ja     0x4126ef
  4126c4:	or     eax,0x69334e24
  4126c9:	xchg   ebp,eax
  4126ca:	imul   edi,DWORD PTR [ecx],0x130ec8e2
  4126d0:	hlt    
  4126d1:	xchg   esi,eax
  4126d2:	enter  0x2e3d,0xc3
  4126d6:	test   eax,0x8e2679de
  4126db:	not    DWORD PTR [edx+0x152b865f]
  4126e1:	gs dec ebp
  4126e3:	adc    BYTE PTR [ebx+0x10],ah
  4126e6:	inc    esi
  4126e7:	cmp    eax,0xb0d758a5
  4126ec:	pushf  
  4126ed:	out    dx,eax
  4126ee:	sub    esi,DWORD PTR [edi-0x74]
  4126f1:	sbb    eax,0xeed6c860
  4126f6:	imul   edx,DWORD PTR [ecx],0xbe455550
  4126fc:	imul   ecx,DWORD PTR [ecx-0x27ba00c8],0x7cab6804
  412706:	mov    dh,0x5b
  412708:	int3   
  412709:	inc    eax
  41270a:	and    BYTE PTR [ecx+esi*2],ch
  41270d:	jns    0x412741
  41270f:	gs cmp ebx,ebp
  412712:	ins    DWORD PTR es:[edi],dx
  412713:	add    al,0x8e
  412715:	test   BYTE PTR [eax],bl
  412717:	neg    bl
  412719:	xchg   ebx,eax
  41271a:	add    eax,0xcadf048e
  41271f:	lds    esi,FWORD PTR [eax+0x5]
  412722:	pop    ds
  412723:	and    bl,bh
  412725:	mov    esp,?
  412727:	out    0xce,al
  412729:	fnstenv [esi+0x2af5fec0]
  41272f:	sub    eax,0x34d3c9b4
  412734:	hlt    
  412735:	sbb    DWORD PTR [ecx-0x5],ebp
  412738:	sbb    eax,0x88d9490
  41273d:	xor    BYTE PTR [esi-0x1d9b2feb],bh
  412743:	lods   al,BYTE PTR ds:[esi]
  412744:	pop    ds
  412745:	cmc    
  412746:	arpl   si,bp
  412748:	push   ebp
  412749:	sbb    eax,0x419471a2
  41274e:	(bad)  
  41274f:	clc    
  412750:	jmp    0x6efa4b24
  412755:	nop
  412756:	mov    edi,0x75288b0e
  41275b:	and    BYTE PTR [esi+ebp*2+0x38c8d515],al
  412762:	fistp  DWORD PTR [esi+ebp*1]
  412765:	or     BYTE PTR [eax+esi*8-0x746f4a9b],bl
  41276c:	(bad)  
  41276d:	sbb    dh,BYTE PTR [ebx+eax*8-0x29a551fb]
  412774:	bound  esp,QWORD PTR [esi]
  412776:	jae    0x4127a6
  412778:	fcmovnu st,st(4)
  41277a:	xor    eax,0xb0670abe
  41277f:	sahf   
  412780:	outs   dx,DWORD PTR ds:[esi]
  412781:	cs xor eax,0xa08284eb
  412787:	pop    ecx
  412788:	inc    edx
  412789:	gs sub dl,bl
  41278c:	inc    ecx
  41278d:	(bad)  
  41278e:	mov    gs,eax
  412790:	loopne 0x4127d7
  412792:	sub    cl,BYTE PTR [ebx]
  412794:	fs mov cl,0x13
  412797:	int    0x40
  412799:	lods   al,BYTE PTR ds:[esi]
  41279a:	dec    eax
  41279b:	aam    0xb3
  41279d:	imul   esp,DWORD PTR [ebx],0xffffffc2
  4127a0:	cmp    eax,0x218ee87
  4127a5:	fist   DWORD PTR [edx-0x33]
  4127a8:	stc    
  4127a9:	iret   
  4127aa:	or     BYTE PTR [esi],0x5a
  4127ad:	adc    BYTE PTR [ebx+ecx*1+0x43],al
  4127b1:	ret    0xc090
  4127b4:	adc    BYTE PTR [edi-0x80],cl
  4127b7:	inc    edx
  4127b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127b9:	sbb    BYTE PTR [ebx],dl
  4127bb:	inc    edx
  4127bc:	sub    BYTE PTR [ebx+0x313d0a89],dh
  4127c2:	pushf  
  4127c3:	in     eax,dx
  4127c4:	push   ecx
  4127c5:	mov    WORD PTR [eax+0x3160032b],fs
  4127cb:	ror    DWORD PTR [esi+eiz*2+0x78],0xa0
  4127d0:	or     DWORD PTR [ecx],ebp
  4127d2:	retf   
  4127d3:	aad    0x25
  4127d5:	inc    ecx
  4127d6:	sti    
  4127d7:	mov    ebp,0xd5ef0b8
  4127dc:	pop    ss
  4127dd:	pop    esp
  4127de:	aaa    
  4127df:	sub    bl,BYTE PTR [edx+0x51ddee1]
  4127e5:	xor    BYTE PTR [eax+0x17a333e3],cl
  4127eb:	mov    ebp,edi
  4127ed:	dec    edi
  4127ee:	mov    esi,0x114da352
  4127f3:	int    0x14
  4127f5:	call   0xe989:0x1c1e40ce
  4127fc:	sbb    edi,edx
  4127fe:	dec    edx
  4127ff:	mov    cs,WORD PTR [ecx+0x60]
  412802:	push   esi
  412803:	fmul   QWORD PTR [eax]
  412805:	cmp    BYTE PTR [eax+0x42db4c38],al
  41280b:	nop
  41280c:	loop   0x4127b3
  41280e:	fs call 0x63f41318
  412814:	(bad)  
  412815:	jle    0x412882
  412817:	xchg   esp,eax
  412818:	jecxz  0x41286d
  41281a:	mov    DWORD PTR [esi],ecx
  41281c:	xchg   ecx,eax
  41281d:	sub    DWORD PTR [edx-0x78],esi
  412820:	inc    edx
  412821:	sub    al,0x39
  412823:	scas   eax,DWORD PTR es:[edi]
  412824:	xchg   ah,dl
  412826:	sub    edx,DWORD PTR [esi+0x20ff3d35]
  41282c:	aas    
  41282d:	sbb    DWORD PTR [eax+0x3b],esi
  412830:	or     bh,al
  412832:	fistp  QWORD PTR [ecx+0x0]
  412835:	ja     0x412814
  412837:	xchg   edx,eax
  412838:	retf   0xa645
  41283b:	or     bh,BYTE PTR [edi-0x23]
  41283e:	nop
  41283f:	mov    eax,?
  412841:	dec    ebp
  412842:	(bad)  
  412843:	fistp  QWORD PTR [edx-0x7832a666]
  412849:	adc    al,0xc
  41284b:	dec    esi
  41284c:	jle    0x412861
  41284e:	aas    
  41284f:	push   cs
  412850:	lock jge 0x412875
  412853:	fucomi st,st(1)
  412855:	add    dh,bl
  412857:	adc    eax,0xbfe14be7
  41285c:	mov    bl,0x29
  41285e:	mov    al,0x81
  412860:	push   eax
  412861:	js     0x41282b
  412863:	jno    0xd43b35ff
  412869:	inc    edx
  41286a:	xor    eax,0x45dc27bc
  41286f:	cld    
  412870:	out    dx,al
  412871:	jnp    0x412863
  412873:	(bad)  
  412874:	xchg   esp,eax
  412875:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412877:	pop    ds
  412878:	arpl   dx,dx
  41287a:	cdq    
  41287b:	aas    
  41287c:	jo     0x4128ac
  41287e:	pop    esi
  41287f:	arpl   WORD PTR ds:0xf79a4f2d,bx
  412885:	xchg   esp,eax
  412886:	pop    es
  412887:	adc    eax,edx
  412889:	inc    ebp
  41288a:	pop    edx
  41288b:	les    ebp,FWORD PTR [esi-0x2a]
  41288e:	(bad)  
  41288f:	xlat   BYTE PTR ds:[ebx]
  412890:	je     0x412842
  412892:	and    DWORD PTR [eax+0x51],eax
  412895:	sbb    eax,ebx
  412897:	mov    eax,0x15a86df4
  41289c:	jmp    0x4128ed
  41289e:	(bad)  
  41289f:	or     ecx,edx
  4128a1:	in     al,0x5f
  4128a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128a4:	or     edx,ebx
  4128a6:	dec    esi
  4128a7:	push   esi
  4128a8:	and    BYTE PTR [ebx],dh
  4128aa:	(bad)  
  4128ab:	pop    ds
  4128ac:	jns    0x4128f7
  4128ae:	jmp    0x4885:0xc00d79e3
  4128b5:	sbb    bh,BYTE PTR [esi+0x63]
  4128b8:	scas   al,BYTE PTR es:[edi]
  4128b9:	mov    ah,0xab
  4128bb:	jmp    0x412842
  4128bd:	hlt    
  4128be:	xor    ebx,esp
  4128c0:	loop   0x412853
  4128c2:	shl    DWORD PTR [edx],cl
  4128c4:	ret    
  4128c5:	mov    eax,0x2c71aeb1
  4128ca:	stos   BYTE PTR es:[edi],al
  4128cb:	lods   al,BYTE PTR ds:[esi]
  4128cc:	fsubr  QWORD PTR [ecx]
  4128ce:	and    ch,BYTE PTR [ecx-0x32]
  4128d1:	xor    ch,dh
  4128d3:	in     al,dx
  4128d4:	cmp    al,0x13
  4128d6:	push   edi
  4128d7:	aas    
  4128d8:	mov    esp,0xe33a1f1e
  4128dd:	stc    
  4128de:	jp     0x41293b
  4128e0:	and    BYTE PTR ds:0xa47055f,ch
  4128e6:	xlat   BYTE PTR ds:[ebx]
  4128e7:	popa   
  4128e8:	xor    eax,0xa13ed6fa
  4128ed:	dec    eax
  4128ee:	mov    ch,0x27
  4128f0:	dec    eax
  4128f1:	jmp    0x50:0x230f0b84
  4128f8:	adc    DWORD PTR [esp+ecx*4-0x1e],esp
  4128fc:	hlt    
  4128fd:	ins    BYTE PTR es:[edi],dx
  4128fe:	retf   0x48a3
  412901:	out    0x38,al
  412903:	stos   DWORD PTR es:[edi],eax
  412904:	pop    es
  412905:	test   BYTE PTR [edi],ch
  412907:	mov    ebp,ecx
  412909:	test   eax,0x5c6b4588
  41290e:	pop    ss
  41290f:	adc    al,0xd9
  412911:	adc    DWORD PTR [ebx+0x7c],esi
  412914:	out    dx,eax
  412915:	lock int 0xb
  412918:	xor    DWORD PTR [edx],ecx
  41291a:	mov    BYTE PTR [eax-0x4f],bl
  41291d:	pop    edi
  41291e:	(bad)  
  41291f:	jmp    0x412904
  412921:	and    ebp,DWORD PTR [esi-0x41]
  412924:	nop
  412925:	sbb    ch,cl
  412927:	cmp    esp,DWORD PTR [esi]
  412929:	ret    0xdb55
  41292c:	ins    DWORD PTR es:[edi],dx
  41292d:	inc    ebx
  41292e:	das    
  41292f:	pop    esi
  412930:	dec    ecx
  412931:	call   ebx
  412933:	cld    
  412934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412935:	pop    ss
  412936:	scas   al,BYTE PTR es:[edi]
  412937:	xor    al,0xe5
  412939:	jmp    0x907fb26e
  41293e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41293f:	jmp    0x642c45b4
  412944:	shl    BYTE PTR [ebx+0x1c],cl
  412947:	fimul  WORD PTR [ebp-0x11]
  41294a:	adc    BYTE PTR [edx-0x2b4c1865],bl
  412950:	mov    ah,BYTE PTR [esi+0x7f]
  412953:	scas   eax,DWORD PTR es:[edi]
  412954:	cld    
  412955:	leave  
  412956:	mov    eax,ds:0xa815c62d
  41295b:	mov    bl,cl
  41295d:	outs   dx,BYTE PTR ds:[esi]
  41295e:	pop    ebx
  41295f:	in     eax,0x57
  412961:	xchg   esi,eax
  412962:	jmp    0x139c3c21
  412967:	dec    edx
  412968:	stos   DWORD PTR es:[edi],eax
  412969:	dec    esp
  41296a:	xlat   BYTE PTR ds:[ebx]
  41296b:	das    
  41296c:	retf   0xccf4
  41296f:	ds push ebx
  412971:	mov    DWORD PTR [ecx-0x1167992f],ecx
  412977:	or     DWORD PTR [ebp-0x19a314c5],edi
  41297d:	push   ebx
  41297e:	rcr    DWORD PTR [ecx+0x57],0xd0
  412982:	mov    ecx,0x928e0a67
  412987:	stos   DWORD PTR es:[edi],eax
  412988:	(bad)  
  412989:	xchg   edx,eax
  41298a:	aaa    
  41298b:	test   dh,bh
  41298d:	cwde   
  41298e:	cmc    
  41298f:	ret    0xd98f
  412992:	retf   
  412993:	mov    esi,0x79d27425
  412998:	inc    esi
  412999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41299a:	shl    ch,1
  41299c:	adc    bh,BYTE PTR [ebx]
  41299e:	add    al,0xc9
  4129a0:	into   
  4129a1:	fxch   st(6)
  4129a3:	popf   
  4129a4:	mov    BYTE PTR [esi],dl
  4129a6:	jmp    FWORD PTR [ebx]
  4129a8:	lods   eax,DWORD PTR ss:[esi]
  4129aa:	(bad)  
  4129ab:	mov    ecx,0x21d9ff3a
  4129b0:	jp     0x412a13
  4129b2:	xchg   ecx,eax
  4129b3:	or     bh,BYTE PTR [edi-0x795d56f1]
  4129b9:	cmp    bh,BYTE PTR [eax-0x5415615d]
  4129bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129c0:	xor    ah,BYTE PTR [ebx]
  4129c2:	cmp    dl,BYTE PTR [eax-0x9]
  4129c5:	mov    bl,0xe
  4129c7:	inc    eax
  4129c8:	jb     0x412a12
  4129ca:	inc    esp
  4129cb:	ficomp WORD PTR [esi-0x664a5cae]
  4129d1:	mov    edi,edi
  4129d3:	popf   
  4129d4:	pusha  
  4129d5:	mov    DWORD PTR [edi-0x62],ecx
  4129d8:	pop    ss
  4129d9:	dec    esp
  4129da:	xchg   edx,eax
  4129db:	adc    DWORD PTR [ebp-0x606890d6],eax
  4129e1:	scas   al,BYTE PTR es:[edi]
  4129e2:	call   0x94aa3721
  4129e7:	push   es
  4129e8:	and    eax,0xd6ebbf5a
  4129ed:	mov    eax,ds:0xeec97fb3
  4129f2:	dec    ebx
  4129f3:	fs test ebx,edx
  4129f6:	push   ecx
  4129f7:	pop    eax
  4129f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129f9:	jb     0x4129f4
  4129fb:	outs   dx,BYTE PTR ds:[esi]
  4129fc:	adc    dh,BYTE PTR [edx-0x27]
  4129ff:	inc    esi
  412a00:	sub    ch,BYTE PTR [eax]
  412a02:	jnp    0x412a60
  412a04:	in     al,0x95
  412a06:	mov    ds:0xb87c01da,eax
  412a0b:	leave  
  412a0c:	out    0x2d,al
  412a0e:	dec    edx
  412a0f:	(bad)  
  412a10:	pop    esi
  412a11:	mov    edx,0x207cb2d4
  412a16:	mov    eax,0x657117a3
  412a1b:	ss stos BYTE PTR es:[edi],al
  412a1d:	fld    QWORD PTR [edi+0x1ee8cf19]
  412a23:	pop    eax
  412a24:	or     al,BYTE PTR [ecx-0x55]
  412a27:	pusha  
  412a28:	in     al,0x2a
  412a2a:	mov    eax,0x5e0b2df2
  412a2f:	xchg   BYTE PTR [edi],bh
  412a31:	pop    ss
  412a32:	fwait
  412a33:	or     ebp,ecx
  412a35:	push   ecx
  412a36:	dec    edi
  412a37:	cld    
  412a38:	lea    ebp,[eax+0x6c]
  412a3b:	loope  0x4129da
  412a3d:	ret    0xb67e
  412a40:	enter  0xac1c,0x8a
  412a44:	jbe    0x4129e2
  412a46:	lods   eax,DWORD PTR ds:[esi]
  412a47:	ins    DWORD PTR es:[edi],dx
  412a48:	ins    DWORD PTR es:[edi],dx
  412a49:	fidiv  DWORD PTR [eax+0xa]
  412a4c:	or     DWORD PTR [ebx-0x6be5324],edx
  412a52:	sub    dh,ch
  412a54:	cld    
  412a55:	test   BYTE PTR ds:0xc742c926,cl
  412a5b:	cmp    bl,ch
  412a5d:	pop    edx
  412a5e:	or     al,BYTE PTR [edx]
  412a60:	pusha  
  412a61:	push   esp
  412a62:	mov    ds:0xeb2b60af,al
  412a67:	push   ss
  412a68:	retf   
  412a69:	mov    eax,ds:0x89b43c39
  412a6e:	sub    ch,0xc0
  412a71:	ja     0x412ae6
  412a73:	sub    BYTE PTR [eax+0x4f],0x9e
  412a77:	and    BYTE PTR [edx+0x49],dl
  412a7a:	cs cld 
  412a7c:	clc    
  412a7d:	xlat   BYTE PTR ds:[ebx]
  412a7e:	adc    eax,0xa6a7a6e0
  412a83:	xchg   esi,eax
  412a84:	xchg   ah,al
  412a86:	outs   dx,BYTE PTR ds:[esi]
  412a87:	dec    ecx
  412a88:	push   es
  412a89:	jp     0x412a5d
  412a8b:	ins    BYTE PTR es:[edi],dx
  412a8c:	jmp    0x8c2b:0xd61fde27
  412a93:	scas   al,BYTE PTR es:[edi]
  412a94:	inc    eax
  412a95:	xor    al,0xa9
  412a97:	icebp  
  412a98:	loope  0x412ae8
  412a9a:	or     al,0x2f
  412a9c:	fnstenv [esi-0x3a2e8ff7]
  412aa2:	fcom   DWORD PTR [ebx+0x2]
  412aa5:	pop    ds
  412aa6:	and    BYTE PTR [edx+0x4c],bl
  412aa9:	out    dx,eax
  412aaa:	add    DWORD PTR [esi+ecx*1],esp
  412aad:	test   al,0x6b
  412aaf:	loopne 0x412a51
  412ab1:	(bad)  
  412ab2:	fist   WORD PTR [eax-0x5f]
  412ab5:	sbb    esp,DWORD PTR [ecx-0x7747b9ab]
  412abb:	dec    esp
  412abc:	cli    
  412abd:	iret   
  412abe:	test   DWORD PTR [ecx+0x54],ebp
  412ac1:	fsubr  QWORD PTR [ebx+0x237b1cde]
  412ac7:	inc    edi
  412ac8:	jmp    0xf58f11f
  412acd:	xchg   edi,eax
  412ace:	popf   
  412acf:	jle    0x412ab7
  412ad1:	jnp    0x412b4a
  412ad3:	jnp    0x412a83
  412ad5:	push   ebx
  412ad6:	mov    BYTE PTR [esi-0x221e2609],ch
  412adc:	push   eax
  412add:	adc    DWORD PTR ss:[esi+0x547cab94],ecx
  412ae4:	xor    eax,0xc85fa2bc
  412ae9:	mov    cl,BYTE PTR [ebx-0x52]
  412aec:	imul   eax,DWORD PTR [edx+eiz*2+0x1bf49c61],0xffffffe4
  412af4:	pop    esp
  412af5:	js     0x412a8c
  412af7:	in     eax,dx
  412af8:	sub    ebp,ebp
  412afa:	inc    esi
  412afb:	into   
  412afc:	icebp  
  412afd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412afe:	dec    esi
  412aff:	outs   dx,BYTE PTR ds:[esi]
  412b00:	js     0x412aff
  412b02:	jb     0x412b13
  412b04:	push   eax
  412b05:	inc    edx
  412b06:	pop    ss
  412b07:	lods   eax,DWORD PTR ds:[esi]
  412b08:	jg     0x412b85
  412b0a:	in     al,dx
  412b0b:	add    al,0x72
  412b0d:	mov    al,ds:0xeac67665
  412b12:	int    0x25
  412b14:	retf   0x5d52
  412b17:	addr16 call 0xaff12549
  412b1d:	mov    ch,0x6c
  412b1f:	pand   mm7,mm2
  412b22:	and    DWORD PTR [ebx],eax
  412b24:	iret   
  412b25:	ds cmc 
  412b27:	or     eax,0x7785d6e5
  412b2c:	jno    0x412ae3
  412b2e:	das    
  412b2f:	in     eax,0xbd
  412b31:	or     eax,0x353437ca
  412b36:	mov    ch,0x3f
  412b38:	stc    
  412b39:	lock push esi
  412b3b:	or     DWORD PTR [edx+0x1933ac15],edi
  412b41:	jno    0x412af8
  412b43:	fcomp  QWORD PTR [ecx-0x30b01fa1]
  412b49:	inc    esi
  412b4a:	jmp    0x95c8:0x56931ff
  412b51:	cmp    ah,BYTE PTR [esi]
  412b53:	fidiv  WORD PTR ds:0x522f85a5
  412b59:	dec    esi
  412b5a:	jns    0x412b41
  412b5c:	mov    DWORD PTR [edi+0x7d86c6c],edi
  412b62:	adc    DWORD PTR [eax+0x71a0c84a],edi
  412b68:	stc    
  412b69:	mov    ebx,DWORD PTR [esi+0x72]
  412b6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b6d:	pop    ecx
  412b6e:	push   cs
  412b6f:	aad    0x1b
  412b71:	and    BYTE PTR [ecx],0x29
  412b74:	dec    ecx
  412b75:	sahf   
  412b76:	push   esp
  412b77:	sub    DWORD PTR [esi+0x5a],eax
  412b7a:	pop    esp
  412b7b:	outs   dx,DWORD PTR ds:[esi]
  412b7c:	mov    ebx,esp
  412b7e:	push   ds
  412b7f:	popf   
  412b80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b81:	pop    edx
  412b82:	icebp  
  412b83:	cmp    BYTE PTR [edx],0x5d
  412b86:	fs scas al,BYTE PTR es:[edi]
  412b88:	fidivr WORD PTR [ecx+eiz*2]
  412b8b:	fyl2xp1 
  412b8d:	add    DWORD PTR [ebx-0x32512a0e],esi
  412b93:	jbe    0x412b49
  412b95:	sbb    al,0xf9
  412b97:	jl     0x412c0e
  412b99:	jne    0x412b67
  412b9b:	mov    esp,0x77008946
  412ba0:	outs   dx,BYTE PTR ds:[esi]
  412ba1:	jmp    0x619c:0x547853c3
  412ba8:	pop    es
  412ba9:	das    
  412baa:	inc    ebp
  412bab:	pop    edx
  412bac:	jge    0x412baf
  412bae:	div    dl
  412bb0:	mov    al,0x96
  412bb2:	ja     0x412bce
  412bb4:	popa   
  412bb5:	dec    esi
  412bb6:	fcom   st(6)
  412bb8:	xor    ebx,esi
  412bba:	xchg   edi,eax
  412bbb:	xchg   DWORD PTR [edx-0x4c],eax
  412bbe:	in     eax,dx
  412bbf:	push   esi
  412bc0:	add    ebx,DWORD PTR [ebx]
  412bc2:	inc    edx
  412bc3:	out    dx,al
  412bc4:	mov    ds:0x7427b76c,eax
  412bc9:	jl     0x412b62
  412bcb:	dec    esi
  412bcc:	loop   0x412bc9
  412bce:	arpl   WORD PTR gs:[ebp-0x2dd9d560],cx
  412bd5:	sbb    BYTE PTR [ecx-0x52b08ca],al
  412bdb:	sbb    al,0xf5
  412bdd:	cmp    eax,DWORD PTR [esi]
  412bdf:	mov    eax,ds:0xd4a8b598
  412be4:	inc    ebx
  412be5:	jmp    0x3b09eb41
  412bea:	adc    BYTE PTR [esp-0x49042b14],dl
  412bf1:	dec    esi
  412bf2:	pusha  
  412bf3:	or     al,bl
  412bf5:	addr16 pop ds
  412bf7:	test   ebp,0x8cf8b9d6
  412bfd:	sbb    al,0x11
  412bff:	dec    ecx
  412c00:	fs jne 0x412c5f
  412c03:	pop    ebx
  412c04:	push   esp
  412c05:	lods   al,BYTE PTR ds:[esi]
  412c06:	inc    esp
  412c07:	mov    eax,0x6f346d53
  412c0c:	xor    DWORD PTR [esi+eiz*4],eax
  412c0f:	mov    eax,ds:0x9b347b6e
  412c14:	or     eax,0x9ca2bbc9
  412c19:	test   eax,0x105cc0f5
  412c1e:	mov    bl,0xb0
  412c20:	add    BYTE PTR [eax],0xf0
  412c23:	arpl   WORD PTR [ebx+ecx*1-0x66],sp
  412c27:	xchg   edi,eax
  412c28:	fbstp  TBYTE PTR [esi-0x33]
  412c2b:	lock adc BYTE PTR [ebp+0x30],0x61
  412c30:	stc    
  412c31:	xchg   DWORD PTR [ebx],ebx
  412c33:	fwait
  412c34:	scas   eax,DWORD PTR es:[edi]
  412c35:	jnp    0x412c26
  412c37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c38:	outs   dx,DWORD PTR ds:[esi]
  412c39:	fmul   DWORD PTR [edx]
  412c3b:	test   BYTE PTR [ebx+0x234c84da],bh
  412c41:	push   ecx
  412c42:	push   es
  412c43:	test   bl,bh
  412c45:	sub    BYTE PTR [ebx+ebp*4-0x166be1c9],dh
  412c4c:	xchg   esi,eax
  412c4d:	aas    
  412c4e:	push   esp
  412c4f:	jp     0x412ca7
  412c51:	jae    0x412c0b
  412c53:	jbe    0x412c48
  412c55:	pop    edi
  412c56:	xchg   BYTE PTR [ecx+esi*4],ch
  412c59:	inc    esp
  412c5a:	jbe    0x412c19
  412c5c:	cmp    al,0xec
  412c5e:	pop    edx
  412c5f:	aaa    
  412c60:	mov    al,0x67
  412c62:	cli    
  412c63:	fst    DWORD PTR [esi+0x5e458b8a]
  412c69:	(bad)  
  412c6b:	and    BYTE PTR [edx],bl
  412c6d:	cmp    DWORD PTR [ebx-0x406a0ae9],0x2a
  412c74:	pop    edi
  412c75:	ret    
  412c76:	cld    
  412c77:	idiv   DWORD PTR [eax-0x451d572a]
  412c7d:	push   eax
  412c7e:	(bad)  
  412c7f:	call   0x1b76:0x5a789873
  412c86:	dec    ebx
  412c87:	arpl   WORD PTR [edi],bp
  412c89:	sub    DWORD PTR [ebx+0x54],edx
  412c8c:	xor    al,0x2d
  412c8e:	inc    edi
  412c8f:	iret   
  412c90:	ins    DWORD PTR es:[edi],dx
  412c91:	inc    ebp
  412c92:	int3   
  412c93:	ds push edx
  412c95:	mov    edx,0x732d5215
  412c9a:	xor    BYTE PTR [edx-0xcb2ae16],ah
  412ca0:	loop   0x412c64
  412ca2:	in     al,0x2f
  412ca4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ca5:	push   ds
  412ca6:	pop    ebx
  412ca7:	cdq    
  412ca8:	and    bh,BYTE PTR [edx]
  412caa:	es aaa 
  412cac:	(bad)  
  412cad:	fild   WORD PTR ds:0xdf13fe4a
  412cb3:	mov    dl,0xff
  412cb5:	leave  
  412cb6:	test   ebp,ecx
  412cb8:	dec    ebp
  412cb9:	cmp    al,0xb6
  412cbb:	test   BYTE PTR [ebx],cl
  412cbd:	jmp    0xe8631217
  412cc2:	add    eax,0x4bb7515e
  412cc7:	fistp  WORD PTR [ecx+0x27]
  412cca:	add    al,0xa3
  412ccc:	pop    edx
  412ccd:	fisubr WORD PTR [esi-0x494e6176]
  412cd3:	pop    ecx
  412cd4:	sti    
  412cd5:	inc    edx
  412cd6:	adc    BYTE PTR [ebx+0x3122fad4],0x2b
  412cdd:	in     al,dx
  412cde:	push   edi
  412cdf:	(bad)  
  412ce0:	jb     0x412c97
  412ce2:	xor    edi,DWORD PTR [esi]
  412ce4:	push   0xfdb7456c
  412ce9:	je     0x412d0d
  412ceb:	fsub   DWORD PTR [edx]
  412ced:	dec    esp
  412cee:	ja     0x412d35
  412cf0:	xchg   esp,eax
  412cf1:	mov    bl,0x59
  412cf3:	cmp    eax,0xca7e0db0
  412cf8:	pop    edx
  412cf9:	inc    ecx
  412cfa:	leavew 
  412cfc:	inc    ebp
  412cfd:	pop    ebp
  412cfe:	mov    ah,0xf2
  412d00:	add    eax,0xa7e9aff7
  412d05:	push   eax
  412d06:	xor    bl,BYTE PTR ds:0xdb747466
  412d0c:	xchg   DWORD PTR [ebp-0x666cb44c],edi
  412d12:	loope  0x412d87
  412d14:	and    eax,0xf09b0940
  412d19:	lods   eax,DWORD PTR ds:[esi]
  412d1a:	icebp  
  412d1b:	daa    
  412d1c:	dec    ebp
  412d1d:	(bad)  
  412d1e:	pop    edx
  412d20:	push   esp
  412d21:	cmp    al,0x97
  412d23:	or     BYTE PTR [edx+0x3d],cl
  412d26:	and    al,0x9f
  412d28:	cmp    BYTE PTR [ebx-0x67],ch
  412d2b:	cli    
  412d2c:	inc    ebp
  412d2d:	sar    DWORD PTR [esi+0x290a5e25],1
  412d33:	mov    cl,0xb1
  412d35:	fst    QWORD PTR [edi-0x3c]
  412d38:	adc    bh,BYTE PTR cs:[eax-0x41]
  412d3c:	xchg   DWORD PTR [eax-0x1a],ebp
  412d3f:	xchg   DWORD PTR [esi],eax
  412d41:	imul   eax,DWORD PTR [esi],0xcd7bdec0
  412d47:	rcr    DWORD PTR [eax+eiz*8],1
  412d4a:	(bad)  
  412d4b:	loop   0x412d59
  412d4d:	sub    DWORD PTR [edx+0x378bdcd7],0xfed5c2d8
  412d57:	dec    edi
  412d58:	and    eax,0xc5822144
  412d5d:	add    cl,BYTE PTR [ebp-0x2b]
  412d60:	dec    edi
  412d61:	icebp  
  412d62:	outs   dx,BYTE PTR ds:[esi]
  412d63:	in     al,0xb6
  412d65:	push   esi
  412d66:	(bad)  
  412d67:	push   esp
  412d68:	push   0xffffff9a
  412d6a:	inc    esp
  412d6b:	adc    eax,0xffa9b9c3
  412d70:	mov    ebx,0xfb892ec8
  412d75:	mov    cl,0x67
  412d77:	or     edi,DWORD PTR [eax+edi*1-0x6f]
  412d7b:	enter  0xf9f9,0x61
  412d7f:	sahf   
  412d80:	lods   eax,DWORD PTR ds:[esi]
  412d81:	adc    BYTE PTR [si-0x7b],ch
  412d85:	out    dx,al
  412d86:	imul   edx,DWORD PTR ds:0xf287108,0x3e
  412d8d:	xor    dh,BYTE PTR [edi+0x3588bbbf]
  412d93:	adc    ecx,edx
  412d95:	fstp   DWORD PTR [ecx]
  412d97:	sti    
  412d98:	sub    eax,0xc98b8db7
  412d9d:	push   esi
  412d9e:	sub    eax,0x42ca923
  412da3:	sub    DWORD PTR [eax-0x30],0xdedcbb38
  412daa:	popa   
  412dab:	sti    
  412dac:	sbb    ebp,DWORD PTR [eax-0x144c0627]
  412db2:	loop   0x412e0e
  412db4:	mov    DWORD PTR [ecx+0x19],edi
  412db7:	sahf   
  412db8:	pop    ebp
  412db9:	shr    BYTE PTR [ecx-0xc7fba82],cl
  412dbf:	pop    ss
  412dc0:	aad    0x75
  412dc2:	add    DWORD PTR [ebx-0x2b],esi
  412dc5:	loopne 0x412df6
  412dc7:	xchg   edx,eax
  412dc8:	mov    eax,ds:0xeb456623
  412dcd:	jnp    0x412de3
  412dcf:	mov    ds:0xea0bc0df,al
  412dd4:	xor    al,0x70
  412dd6:	retf   
  412dd7:	shr    DWORD PTR [ebx],cl
  412dd9:	sbb    ah,BYTE PTR gs:[ecx]
  412ddc:	mov    eax,ds:0x14023f8d
  412de1:	out    0xd2,eax
  412de3:	cmp    DWORD PTR [esi-0x2f58c1c6],edi
  412de9:	fcomp  QWORD PTR [bx+di]
  412dec:	lds    eax,FWORD PTR [ebx+eax*8+0x48]
  412df0:	das    
  412df1:	fistp  DWORD PTR [eax-0x14]
  412df4:	push   ebx
  412df5:	sub    DWORD PTR [edi-0x77],ebp
  412df8:	pushw  ss
  412dfa:	cmp    DWORD PTR [eax],ecx
  412dfc:	pop    ebx
  412dfd:	in     al,dx
  412dfe:	jmp    0x412dd5
  412e00:	pop    edi
  412e01:	and    BYTE PTR [ebx],dh
  412e03:	fiadd  WORD PTR [esp+ecx*1+0x1d77f688]
  412e0a:	aaa    
  412e0b:	adc    DWORD PTR [ebx-0x7c271ee8],0x36aba280
  412e15:	or     bl,dl
  412e17:	fdivr  st(6),st
  412e19:	daa    
  412e1a:	outs   dx,DWORD PTR ds:[esi]
  412e1b:	repz std 
  412e1d:	arpl   ax,bx
  412e1f:	inc    edi
  412e20:	leave  
  412e21:	push   ebp
  412e22:	sbb    dl,BYTE PTR [ebp+0x60]
  412e25:	mov    ds:0x9c127346,eax
  412e2a:	into   
  412e2b:	fistp  DWORD PTR [ecx-0x1c]
  412e2e:	adc    eax,0xf453ecd2
  412e33:	adc    edi,DWORD PTR [edx+edx*8]
  412e36:	cmp    dl,BYTE PTR [ecx+edi*2]
  412e39:	pushw  es
  412e3b:	or     al,0x72
  412e3d:	xchg   ebp,eax
  412e3e:	out    dx,al
  412e3f:	mov    ah,0x71
  412e41:	data16 (bad) 
  412e43:	daa    
  412e44:	or     DWORD PTR [ecx+0x5d],edi
  412e47:	and    al,0x15
  412e49:	jo     0x412e4a
  412e4b:	retf   0xb7f1
  412e4e:	out    0xd9,eax
  412e50:	fbld   TBYTE PTR [ebp-0x6d92378a]
  412e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e57:	mov    edx,edi
  412e59:	pop    ds
  412e5a:	(bad)  
  412e5b:	sub    ebp,DWORD PTR [ecx+0x246d3b03]
  412e61:	cwde   
  412e62:	aam    0xc
  412e64:	sub    al,0xab
  412e66:	test   DWORD PTR [eax],esi
  412e68:	fist   DWORD PTR [ecx+0x76eabb72]
  412e6e:	pop    edi
  412e6f:	call   FWORD PTR [ebx+esi*8]
  412e72:	in     al,dx
  412e73:	add    DWORD PTR [esi+0xb],esp
  412e76:	test   eax,0x5b9f9b7d
  412e7b:	stos   BYTE PTR es:[edi],al
  412e7c:	xchg   DWORD PTR [eax+0x5a],ebp
  412e7f:	mov    eax,0x9abecf58
  412e84:	popf   
  412e85:	add    edx,DWORD PTR [eax]
  412e87:	or     bl,0x28
  412e8a:	pusha  
  412e8b:	jecxz  0x412ed4
  412e8d:	xchg   edi,eax
  412e8e:	in     eax,0x92
  412e90:	jns    0x412e3e
  412e92:	or     eax,0xecd7ec18
  412e97:	cmp    BYTE PTR [edx-0x3c],cl
  412e9a:	mov    bh,0xba
  412e9c:	xchg   ecx,eax
  412e9d:	mov    eax,0x5d439a8c
  412ea2:	xchg   ebx,eax
  412ea3:	(bad)  
  412ea5:	pop    edx
  412ea6:	(bad)  
  412ea7:	out    0xf8,al
  412ea9:	pop    eax
  412eaa:	or     DWORD PTR [ebx*2+0x7a4a701a],edx
  412eb1:	(bad)  
  412eb2:	loope  0x412efd
  412eb4:	jl     0x412ec3
  412eb6:	jl     0x412e57
  412eb8:	ja     0x412e7c
  412eba:	mov    ebx,0x6f18e95f
  412ebf:	leave  
  412ec0:	gs int 0xbb
  412ec3:	xor    DWORD PTR [eax+0x2d0db90b],0x30
  412eca:	push   esi
  412ecb:	jmp    0x4721:0x7d170511
  412ed2:	pop    ecx
  412ed3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ed4:	add    BYTE PTR [edi+0x5926c2f8],al
  412eda:	(bad)  
  412edb:	adc    BYTE PTR [esi+0x68],al
  412ede:	mov    ecx,0xab4d7a00
  412ee3:	int    0xd0
  412ee5:	test   DWORD PTR [ecx+0x75],ebx
  412ee8:	cs test al,0x77
  412eeb:	mov    ebx,0x4e865de1
  412ef0:	xor    ebx,ecx
  412ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ef3:	adc    BYTE PTR [ebx],bh
  412ef5:	mov    bl,0xdb
  412ef7:	popf   
  412ef8:	(bad)  
  412ef9:	sub    al,0x8a
  412efb:	mov    ecx,0x39a0b71f
  412f00:	pop    edi
  412f01:	pop    eax
  412f02:	imul   ebp,DWORD PTR [edx+0x42],0xffffffd3
  412f06:	mov    esp,0x1377afbc
  412f0b:	mov    dl,0x8f
  412f0d:	pop    edi
  412f0e:	leave  
  412f0f:	popa   
  412f10:	inc    ebp
  412f11:	add    al,0xc7
  412f13:	xchg   esp,eax
  412f14:	out    0x3e,al
  412f16:	xchg   edi,eax
  412f17:	xchg   ecx,eax
  412f18:	mov    ch,0xb9
  412f1a:	mov    dh,0x65
  412f1c:	sbb    ebx,DWORD PTR [eax-0x1f]
  412f1f:	shl    BYTE PTR [ebx+0x36],1
  412f22:	scas   eax,DWORD PTR es:[edi]
  412f23:	sub    dh,BYTE PTR [ecx+0x137e7d0f]
  412f29:	jl     0x412ecf
  412f2b:	xchg   ebp,eax
  412f2c:	xchg   dl,bl
  412f2e:	or     dl,bh
  412f30:	add    BYTE PTR [ebx+0x30],dh
  412f33:	ins    BYTE PTR es:[edi],dx
  412f34:	aam    0x5a
  412f36:	shr    DWORD PTR [ecx+0x6],1
  412f39:	xchg   ebx,eax
  412f3a:	sbb    esi,DWORD PTR [edi-0x5edbd267]
  412f40:	and    DWORD PTR [eax+0x5],ecx
  412f43:	mov    ebx,0xbdd8ce84
  412f48:	xor    DWORD PTR [ebp+0xdedcc33],ebp
  412f4e:	sahf   
  412f4f:	pop    ebp
  412f50:	fidivr WORD PTR [ebx-0x2]
  412f53:	adc    BYTE PTR [ebx+0x1e],ch
  412f56:	xchg   ebp,eax
  412f57:	ficom  DWORD PTR [esi+0x26]
  412f5a:	in     eax,dx
  412f5b:	jno    0x412f72
  412f5d:	shl    DWORD PTR [edx+0x77d28e22],cl
  412f63:	call   0xfd8f732c
  412f68:	or     esp,ebp
  412f6a:	cwde   
  412f6b:	imul   edi,DWORD PTR [eax],0x12
  412f6e:	and    eax,DWORD PTR [ebp+0x6c]
  412f71:	pusha  
  412f72:	int3   
  412f73:	inc    ebx
  412f74:	out    0xdd,eax
  412f76:	pop    ebp
  412f77:	mov    esi,0x4fbd7fea
  412f7c:	das    
  412f7d:	addr16 rol ebx,0xcf
  412f81:	mov    ds,WORD PTR [ecx+0x16001bff]
  412f87:	(bad)  
  412f88:	xchg   edi,eax
  412f89:	aas    
  412f8a:	jecxz  0x412f1d
  412f8c:	retf   0xd47
  412f8f:	sub    cl,0xb9
  412f92:	ins    BYTE PTR es:[edi],dx
  412f93:	dec    DWORD PTR [eax+edi*8-0x11]
  412f97:	out    0x85,al
  412f99:	add    esi,0x68
  412f9c:	es xchg esi,eax
  412f9e:	cmp    al,0xe9
  412fa0:	pushf  
  412fa1:	add    eax,0xacef511e
  412fa6:	mov    esi,edx
  412fa8:	fmul   DWORD PTR [edi]
  412faa:	sub    eax,0xb2288330
  412faf:	cmc    
  412fb0:	xor    BYTE PTR [ecx+0x301bf78e],0xbf
  412fb7:	outs   dx,BYTE PTR ds:[esi]
  412fb8:	inc    edx
  412fb9:	push   ebp
  412fba:	jne    0x412fd4
  412fbc:	mov    bh,cl
  412fbe:	sbb    BYTE PTR [edx+ecx*8-0x61],cl
  412fc2:	call   0x7589:0xc29830ed
  412fc9:	xor    esp,DWORD PTR [ecx]
  412fcb:	shl    bl,1
  412fcd:	xchg   ebx,eax
  412fce:	mov    bh,0x81
  412fd0:	pop    ebx
  412fd1:	mov    BYTE PTR [eax+0x0],0xd9
  412fd5:	mov    ebp,0x3c6dd716
  412fda:	adc    BYTE PTR [edi+0x47],bl
  412fdd:	inc    edx
  412fde:	test   DWORD PTR [edi+0x5c],ecx
  412fe1:	pop    esp
  412fe2:	test   al,0xa2
  412fe4:	adc    bl,BYTE PTR [esi]
  412fe6:	dec    eax
  412fe7:	ins    DWORD PTR es:[edi],dx
  412fe8:	pop    esp
  412fe9:	popf   
  412fea:	pushf  
  412feb:	je     0x412fbc
  412fed:	jns    0x413067
  412fef:	out    0x5e,al
  412ff1:	fdiv   QWORD PTR [ecx+esi*2+0x36]
  412ff5:	scas   eax,DWORD PTR es:[edi]
  412ff6:	out    dx,al
  412ff7:	scas   eax,DWORD PTR es:[edi]
  412ff8:	fstp   DWORD PTR [ebx]
  412ffa:	xor    al,0x7b
  412ffc:	test   BYTE PTR [edi-0x35f37615],0xc9
  413003:	inc    edi
  413004:	loope  0x413014
  413006:	stc    
  413007:	dec    edx
  413008:	cmp    edx,DWORD PTR [esp+eiz*8]
  41300b:	mov    dl,0x3d
  41300d:	jae    0x41304c
  41300f:	inc    eax
  413010:	jne    0x412fba
  413012:	xor    eax,0xdc03c93d
  413017:	test   BYTE PTR [edi],dh
  413019:	ret    
  41301a:	std    
  41301b:	(bad)  
  41301c:	inc    ebx
  41301d:	sbb    eax,0x34f17399
  413022:	call   0x4d1ef905
  413027:	outs   dx,DWORD PTR ds:[esi]
  413028:	jbe    0x413059
  41302a:	fdiv   QWORD PTR [edi]
  41302c:	jb     0x41301c
  41302e:	mov    cl,0xbf
  413030:	jbe    0x413017
  413032:	mov    dh,0x23
  413034:	lahf   
  413035:	mov    ch,0xa8
  413037:	in     eax,0x3d
  413039:	sbb    BYTE PTR [eax],cl
  41303b:	arpl   WORD PTR [esi-0x76d9b5f9],sp
  413041:	ret    
  413042:	inc    ecx
  413043:	jmp    0x413029
  413045:	and    ch,BYTE PTR [edi]
  413047:	aad    0x64
  413049:	sar    BYTE PTR [eax+0x22],0x59
  41304d:	les    eax,FWORD PTR [ecx+edi*2]
  413050:	outs   dx,BYTE PTR ds:[esi]
  413051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413052:	mov    dl,0x61
  413054:	pop    ebx
  413055:	cld    
  413056:	dec    ebx
  413057:	rol    BYTE PTR [esi+0x164f56cb],0x4e
  41305e:	pop    DWORD PTR [edx]
  413060:	pushf  
  413061:	mov    esp,0x6df11454
  413066:	mov    cl,0x74
  413068:	sub    edi,DWORD PTR [esi+0x32f8031b]
  41306e:	jae    0x413039
  413070:	hlt    
  413071:	jp     0x413035
  413073:	cs dec ebx
  413075:	mov    ds:0x4b9a9903,al
  41307a:	mov    bh,0x41
  41307c:	cli    
  41307d:	iret   
  41307e:	mov    DWORD PTR ds:0x3a563708,ebp
  413084:	xor    BYTE PTR [ebx],al
  413086:	in     eax,dx
  413087:	sub    edi,DWORD PTR [eax-0x78]
  41308a:	adc    dl,ah
  41308c:	inc    esi
  41308d:	pop    es
  41308e:	imul   edi,DWORD PTR [ebp+0x51],0x1f3216de
  413095:	cdq    
  413096:	mov    DWORD PTR [esi+ebp*2+0x20],edi
  41309a:	rcl    ch,1
  41309c:	fsubp  st(0),st
  41309e:	retf   
  41309f:	mov    bl,0xf4
  4130a1:	test   ch,0x28
  4130a4:	mov    BYTE PTR [eax+0x1f],al
  4130a7:	xor    esp,esp
  4130a9:	jle    0x4130a7
  4130ab:	xchg   ecx,eax
  4130ac:	lods   eax,DWORD PTR ds:[esi]
  4130ad:	jo     0x4130f3
  4130af:	mov    cl,0x78
  4130b1:	dec    ecx
  4130b2:	int3   
  4130b3:	mov    dh,BYTE PTR [eax-0x3]
  4130b6:	xchg   esp,eax
  4130b7:	dec    ebx
  4130b8:	cwde   
  4130b9:	retf   
  4130ba:	imul   esp,DWORD PTR [ebx+0x3570fcdb],0xffffffa9
  4130c1:	sahf   
  4130c2:	mov    edi,0x308217fa
  4130c7:	sub    al,bh
  4130c9:	jge    0x413067
  4130cb:	fimul  DWORD PTR [ebp+0x22]
  4130ce:	or     BYTE PTR [edi+0x47],bl
  4130d1:	or     ecx,DWORD PTR [ecx+0x64]
  4130d4:	jmp    0x8286:0xa1ec4a00
  4130db:	or     al,ah
  4130dd:	and    eax,0x2c38ce01
  4130e2:	(bad)  
  4130e3:	in     eax,dx
  4130e4:	je     0x4130f2
  4130e6:	shr    BYTE PTR [edi+0x6d],0x3b
  4130ea:	mov    DWORD PTR [edx],eax
  4130ec:	lock adc DWORD PTR [eax-0x3e],ebp
  4130f0:	leave  
  4130f1:	sub    esi,DWORD PTR [esi-0x76]
  4130f4:	mov    esi,0xc6381f69
  4130f9:	xchg   bh,cl
  4130fb:	fwait
  4130fc:	mov    bl,0xad
  4130fe:	push   edi
  4130ff:	addr16 push ebp
  413101:	push   esp
  413102:	adc    ebp,edi
  413104:	jo     0x4130f2
  413106:	lods   al,BYTE PTR ds:[esi]
  413107:	xor    esi,ecx
  413109:	and    esi,DWORD PTR [edi-0x74]
  41310c:	inc    edi
  41310d:	bound  ebx,QWORD PTR [esi]
  41310f:	or     eax,DWORD PTR [edx]
  413111:	adc    edx,DWORD PTR [edi+0x2524a1bb]
  413117:	sbb    BYTE PTR [edx],dh
  413119:	fld    QWORD PTR [ecx+edi*4-0x60]
  41311d:	es (bad) 
  41311f:	mov    al,0x86
  413121:	mov    ch,0xb3
  413123:	jl     0x41312a
  413125:	adc    bl,ah
  413127:	sbb    BYTE PTR [edi-0x1d3661fd],dl
  41312d:	pop    ebp
  41312e:	mov    dl,0x8d
  413130:	inc    edi
  413131:	pop    esi
  413132:	xchg   ebp,eax
  413133:	push   esp
  413134:	dec    edx
  413135:	bound  eax,QWORD PTR [ecx*2+0x5bc45f10]
  41313c:	aam    0xbb
  41313e:	xchg   edi,eax
  41313f:	push   esp
  413140:	fild   DWORD PTR [ecx-0x3e]
  413143:	retf   
  413144:	gs add al,0x20
  413147:	in     eax,0x52
  413149:	cmp    DWORD PTR [ebp+edx*2+0x37132507],ecx
  413150:	push   esi
  413151:	push   ds
  413152:	cwde   
  413153:	pop    edi
  413154:	and    edx,DWORD PTR [esi+edi*1]
  413157:	mov    ds:0x5772bd5c,eax
  41315c:	rol    BYTE PTR [eax-0x67],0xd5
  413160:	and    ch,al
  413162:	clc    
  413163:	or     al,0x2
  413165:	ds cwde 
  413167:	(bad)  
  413168:	push   edi
  413169:	icebp  
  41316a:	ja     0x4275da8d
  413170:	push   esp
  413171:	inc    eax
  413172:	mov    ecx,0x533a379c
  413177:	out    0xab,eax
  413179:	nop
  41317a:	sti    
  41317b:	ins    DWORD PTR es:[edi],dx
  41317c:	or     BYTE PTR [ebx+ebp*4-0x75598210],bh
  413183:	or     al,0x1b
  413185:	add    dh,BYTE PTR [ebx-0x438a45ec]
  41318b:	call   0x44f547f6
  413190:	imul   DWORD PTR [edx-0x1c8d94c9]
  413196:	push   edx
  413197:	out    0xa5,eax
  413199:	in     eax,0x80
  41319b:	enter  0xb9da,0x22
  41319f:	jp     0x41318a
  4131a1:	cmp    DWORD PTR [ebx],0xffffffe7
  4131a4:	cld    
  4131a5:	pusha  
  4131a6:	mov    al,ds:0x421ceac7
  4131ab:	mov    al,ds:0x3c6007b2
  4131b0:	jns    0x41316a
  4131b2:	dec    edi
  4131b3:	outs   dx,BYTE PTR ds:[esi]
  4131b4:	adc    BYTE PTR [ebp-0x46984fb8],dl
  4131ba:	pop    edx
  4131bb:	dec    eax
  4131bc:	sub    DWORD PTR [edi],0xffffffa7
  4131bf:	inc    edi
  4131c0:	dec    edx
  4131c1:	or     bl,BYTE PTR [ecx]
  4131c3:	cs (bad) 
  4131c5:	jecxz  0x41320f
  4131c7:	pop    ebp
  4131c8:	(bad)  
  4131c9:	mov    bh,0xfa
  4131cb:	sti    
  4131cc:	dec    esp
  4131cd:	mov    ds:0xd4ef1c13,eax
  4131d2:	pusha  
  4131d3:	dec    ebp
  4131d4:	movsx  ecx,BYTE PTR [ebp+0x2a]
  4131d8:	or     al,0x94
  4131da:	sar    DWORD PTR [esi],1
  4131dc:	loopne 0x4131a3
  4131de:	int    0x52
  4131e0:	xchg   ebx,eax
  4131e1:	popf   
  4131e2:	mov    edi,0x76b31ad0
  4131e7:	pop    eax
  4131e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131e9:	xchg   ecx,eax
  4131ea:	xlat   BYTE PTR ds:[ebx]
  4131eb:	push   ebp
  4131ec:	fld    DWORD PTR [ecx]
  4131ee:	pop    esp
  4131ef:	mov    al,ds:0x75fb58f5
  4131f4:	rcr    BYTE PTR [esi],1
  4131f6:	xchg   edi,eax
  4131f7:	dec    ecx
  4131f8:	(bad)  
  4131f9:	fwait
  4131fa:	std    
  4131fb:	dec    eax
  4131fc:	mov    al,ds:0x775719e4
  413201:	sbb    BYTE PTR [ebp-0x35],dh
  413204:	mov    dh,0x1e
  413206:	enter  0xce74,0x71
  41320a:	(bad)  
  41320b:	sbb    BYTE PTR [edi+0x4a],ah
  41320e:	inc    ebp
  41320f:	test   BYTE PTR [ebp-0x1c],0x2f
  413213:	jno    0x413244
  413215:	loopne 0x413239
  413217:	add    edi,DWORD PTR [edx+0x63]
  41321a:	ror    DWORD PTR [eax],1
  41321c:	les    ebp,FWORD PTR [eax-0x60]
  41321f:	cmp    eax,0x64a22e5
  413224:	add    edx,edi
  413226:	cmp    BYTE PTR [edi+0x3],0xfb
  41322a:	push   ebp
  41322b:	dec    ecx
  41322c:	loop   0x4131cb
  41322e:	(bad)  
  41322f:	pop    ebp
  413230:	stc    
  413231:	test   DWORD PTR [edi-0x4e],edi
  413234:	push   esp
  413235:	mov    ebp,0x564887f
  41323a:	js     0x413200
  41323c:	or     cl,ah
  41323e:	xchg   BYTE PTR [esi+eiz*2+0x30],cl
  413242:	mov    ds:0xda68203b,eax
  413247:	xchg   ebx,eax
  413248:	loope  0x413210
  41324a:	push   cs
  41324b:	xor    al,0x17
  41324d:	ins    BYTE PTR es:[edi],dx
  41324e:	mov    al,0x2f
  413250:	fwait
  413251:	pop    ebx
  413252:	mov    bl,0x5d
  413254:	imul   BYTE PTR [eax+esi*8-0x27292720]
  41325b:	ficomp DWORD PTR [ebx-0x71bcec81]
  413261:	mov    ebp,0x6841d32c
  413266:	cld    
  413267:	bound  edi,QWORD PTR [ebp-0x32]
  41326a:	mov    bh,0xdf
  41326c:	ins    DWORD PTR es:[edi],dx
  41326d:	pause  
  41326f:	xchg   BYTE PTR [edi-0x6bd38a66],cl
  413275:	xchg   esi,eax
  413276:	cmp    al,BYTE PTR [ebx-0x2765195d]
  41327c:	lods   eax,DWORD PTR ds:[esi]
  41327d:	mov    bh,0xa8
  41327f:	inc    ebp
  413280:	push   cs
  413281:	cmp    edi,DWORD PTR [esi+0x1ca1d01f]
  413287:	icebp  
  413288:	lock pop ss
  41328a:	sbb    ebp,DWORD PTR [ebx]
  41328c:	mov    ah,0xc9
  41328e:	mov    al,ds:0x541e4274
  413293:	jge    0x413291
  413295:	jns    0x413238
  413297:	xor    al,0xf0
  413299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41329a:	and    DWORD PTR [esi],edx
  41329c:	mov    WORD PTR [ebx],gs
  41329e:	xchg   esi,eax
  41329f:	out    0x66,eax
  4132a1:	test   BYTE PTR [ecx-0x14],ch
  4132a4:	ret    0xec9d
  4132a7:	aas    
  4132a8:	ftst   
  4132aa:	aad    0x99
  4132ac:	mov    WORD PTR [eax-0x76bc251f],gs
  4132b2:	enter  0xddfd,0x13
  4132b6:	sub    eax,0x583d5da0
  4132bb:	xchg   ecx,eax
  4132bc:	sbb    ebx,DWORD PTR [ecx]
  4132be:	outs   dx,BYTE PTR ds:[esi]
  4132bf:	call   eax
  4132c1:	nop
  4132c2:	adc    DWORD PTR [ebx+0x69],0x4f
  4132c6:	pop    es
  4132c7:	jmp    0x2482:0xf76c23ee
  4132ce:	mov    bl,0x45
  4132d0:	push   cs
  4132d1:	inc    eax
  4132d2:	add    BYTE PTR [edi],dh
  4132d4:	aas    
  4132d5:	inc    edi
  4132d6:	cdq    
  4132d7:	sbb    bl,bh
  4132d9:	sub    eax,0x4be7f7a8
  4132de:	add    al,0x8e
  4132e0:	out    dx,al
  4132e1:	outs   dx,DWORD PTR ds:[esi]
  4132e2:	outs   dx,DWORD PTR ds:[esi]
  4132e3:	out    dx,al
  4132e4:	mov    dl,0xaa
  4132e6:	sbb    DWORD PTR [esi+0x55],esi
  4132e9:	vmread DWORD PTR [esp+edi*1-0xa0cdd32],eax
  4132f1:	popf   
  4132f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132f3:	jne    0x413370
  4132f5:	xchg   edi,eax
  4132f6:	and    cl,BYTE PTR [eax-0x3d307355]
  4132fc:	fisub  DWORD PTR [esi]
  4132fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132ff:	retf   0xbcf4
  413302:	stc    
  413303:	fistp  WORD PTR [ebx-0x237ef027]
  413309:	retf   0x11d5
  41330c:	push   edx
  41330d:	inc    ebx
  41330e:	or     DWORD PTR [ecx+0x54],0xfffffffc
  413312:	call   0x6b6d1f6
  413317:	fnstsw WORD PTR [eax+0x7f0d35d6]
  41331d:	fist   DWORD PTR [edi]
  41331f:	stos   BYTE PTR es:[edi],al
  413320:	je     0x4132e1
  413322:	inc    ebp
  413323:	fmul   QWORD PTR [esi+0x3b2bda0a]
  413329:	xor    ecx,DWORD PTR [ebx-0x2b469c0b]
  41332f:	add    eax,0x3f3e22d3
  413334:	into   
  413335:	or     ah,BYTE PTR [edi+0x10deca5b]
  41333b:	inc    edx
  41333c:	dec    ebp
  41333d:	leave  
  41333e:	adc    eax,0xa7fd1b56
  413343:	aad    0xe1
  413345:	push   ebp
  413346:	aas    
  413347:	dec    esi
  413348:	mov    ds:0xea842e58,al
  41334d:	and    ecx,ebp
  41334f:	xchg   ecx,eax
  413350:	mov    esi,0xcc8dcd3d
  413355:	xor    al,0xc5
  413357:	out    dx,al
  413358:	lods   eax,DWORD PTR ds:[esi]
  413359:	cs ja  0x413330
  41335c:	mov    esi,?
  41335e:	shl    ebp,1
  413360:	xchg   esp,eax
  413361:	mov    al,ds:0xb70d798b
  413366:	jno    0x41339e
  413368:	scas   al,BYTE PTR es:[edi]
  413369:	cmp    eax,0xff784402
  41336e:	cmp    eax,0x7e8ca478
  413373:	dec    ebx
  413374:	xchg   esi,eax
  413375:	push   ecx
  413376:	aas    
  413377:	jmp    0xe3fe7a29
  41337c:	shl    DWORD PTR [esi-0xa],0xa5
  413380:	aam    0xa3
  413382:	mov    esp,0x2716c246
  413387:	mov    eax,ds:0x407d0c81
  41338c:	rcr    BYTE PTR [edi],cl
  41338e:	test   DWORD PTR [ecx+esi*8-0x43],ebx
  413392:	push   ds
  413393:	inc    esi
  413394:	pusha  
  413395:	mov    esi,0xcbb3ea92
  41339a:	mov    esp,0x579a6288
  41339f:	aam    0xfd
  4133a1:	pop    esi
  4133a2:	retf   
  4133a3:	sub    eax,0xac53a39f
  4133a8:	adc    eax,0xe8a60bd2
  4133ad:	sub    ebp,eax
  4133af:	imul   edx,DWORD PTR [ebx-0x1d0b66dc],0xaebb4bff
  4133b9:	push   edx
  4133ba:	popf   
  4133bb:	mov    bp,0x225c
  4133bf:	sbb    eax,0xc5ff3c72
  4133c4:	xchg   ecx,eax
  4133c5:	neg    BYTE PTR [ecx-0x2f]
  4133c8:	adc    dh,bl
  4133ca:	in     eax,0x56
  4133cc:	gs popa 
  4133ce:	imul   eax,DWORD PTR [edx+ebp*2-0x65],0xfac996c0
  4133d6:	and    al,0x5c
  4133d8:	dec    ebp
  4133d9:	xor    al,0x37
  4133db:	xchg   ebx,eax
  4133dc:	cmp    DWORD PTR [ebp+0x6f],eax
  4133df:	js     0x4133bc
  4133e1:	add    ch,ch
  4133e3:	mov    edx,0xc5d80417
  4133e8:	cmc    
  4133e9:	mov    ds:0x45479191,eax
  4133ee:	push   ebx
  4133ef:	xchg   esi,eax
  4133f0:	cmp    edi,DWORD PTR [edi-0x1057095c]
  4133f6:	mov    eax,edi
  4133f8:	fst    st(7)
  4133fa:	xchg   esi,eax
  4133fb:	out    dx,eax
  4133fc:	pop    es
  4133fd:	jmp    0xc0b69ed
  413402:	push   esp
  413403:	add    BYTE PTR [ecx-0x40],dl
  413406:	dec    eax
  413407:	iret   
  413408:	push   ds
  413409:	jge    0x413431
  41340b:	fwait
  41340c:	sub    bl,BYTE PTR [edi]
  41340e:	adc    al,0xaa
  413410:	mov    cl,0xfb
  413412:	shr    BYTE PTR [eax],0xd5
  413415:	xor    ebx,DWORD PTR ss:[edi-0x4]
  413419:	and    esp,DWORD PTR [edi]
  41341b:	inc    edi
  41341c:	add    al,0xe6
  41341e:	add    edi,DWORD PTR [edi]
  413420:	rcl    DWORD PTR [eax+eax*2],1
  413423:	je     0x4133bd
  413425:	adc    BYTE PTR [eax+edx*1+0x75c45049],0x90
  41342d:	jmp    0x413420
  41342f:	adc    edi,DWORD PTR [ebp-0x6c0ac7ce]
  413435:	adc    DWORD PTR [eax-0x5],ecx
  413438:	mov    BYTE PTR [edx],ah
  41343a:	inc    eax
  41343b:	test   eax,0x274e3965
  413440:	or     ecx,eax
  413442:	es push ebx
  413444:	inc    edi
  413445:	out    dx,al
  413446:	test   BYTE PTR [ebp+esi*2+0x4b16afd5],ch
  41344d:	shl    DWORD PTR [esp+edx*4-0x4b120c0],cl
  413454:	stos   DWORD PTR es:[edi],eax
  413455:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413457:	sti    
  413458:	inc    eax
  413459:	retf   0x1b91
  41345c:	push   ds
  41345d:	push   esi
  41345e:	push   0xeec526c9
  413463:	retf   
  413464:	xor    eax,0xec4cd568
  413469:	mov    edi,0x2cc87125
  41346e:	xlat   BYTE PTR ds:[ebx]
  41346f:	inc    edx
  413470:	sbb    DWORD PTR [ebx-0xb],eax
  413473:	jbe    0x413438
  413475:	mov    bh,0xba
  413477:	cli    
  413478:	std    
  413479:	xor    esp,edx
  41347b:	add    al,0xe0
  41347d:	pushw  es
  41347f:	lods   eax,DWORD PTR ds:[esi]
  413480:	mov    ah,0xfc
  413482:	test   eax,0xe478633d
  413487:	mov    esi,0x7635e71b
  41348c:	xchg   DWORD PTR [ebx-0x3d],esi
  41348f:	mov    esi,tr3
  413492:	inc    edx
  413493:	xchg   ecx,eax
  413494:	push   0x74
  413496:	jnp    0x4134ef
  413498:	and    al,0x8
  41349a:	sbb    dl,BYTE PTR [edi+ebp*8-0x2d2bb27c]
  4134a1:	pop    ds
  4134a2:	push   esi
  4134a3:	pop    edi
  4134a4:	add    al,0x57
  4134a6:	xor    DWORD PTR ss:[eax+0xca79c63],edi
  4134ad:	add    BYTE PTR [eax+0x5b0a6173],cl
  4134b3:	in     al,dx
  4134b4:	xchg   ecx,eax
  4134b5:	mov    ecx,DWORD PTR [edi-0x52]
  4134b8:	push   esi
  4134b9:	retw   
  4134bb:	call   0x8c4bcf06
  4134c0:	cmp    eax,0x9466d9eb
  4134c5:	push   esi
  4134c6:	mov    dl,0xc5
  4134c8:	mov    ebx,?
  4134ca:	into   
  4134cb:	fild   DWORD PTR [eax-0x550558f9]
  4134d1:	and    DWORD PTR [ebp+0x37],eax
  4134d4:	push   edx
  4134d5:	rcr    bh,0xdd
  4134d8:	sbb    eax,0x1f1507d6
  4134dd:	dec    edi
  4134de:	dec    esi
  4134df:	jno    0x41348f
  4134e1:	arpl   WORD PTR [ebx],ax
  4134e3:	repz cmp DWORD PTR [edx],esp
  4134e6:	adc    edx,DWORD PTR [edi-0x5b]
  4134e9:	or     al,0xd5
  4134eb:	stos   DWORD PTR es:[edi],eax
  4134ec:	pop    ecx
  4134ed:	scas   eax,DWORD PTR es:[edi]
  4134ee:	push   esp
  4134ef:	mov    ah,0x4d
  4134f1:	mov    edx,esi
  4134f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134f4:	or     DWORD PTR [eax-0x48],esp
  4134f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134f8:	cmp    DWORD PTR [ebx-0x28eb634d],ecx
  4134fe:	push   ecx
  4134ff:	and    DWORD PTR [ecx-0x38e68b68],esi
  413505:	daa    
  413506:	pop    es
  413507:	popf   
  413508:	jnp    0x413494
  41350a:	add    esi,DWORD PTR [esp+esi*1]
  41350d:	fld    DWORD PTR [ebp+ecx*8+0x2529a100]
  413514:	jne    0x413570
  413516:	and    eax,0x4b1a03d0
  41351b:	shl    DWORD PTR [edx-0xe7b4834],1
  413521:	push   es
  413522:	jecxz  0x413506
  413524:	sbb    dh,BYTE PTR [ebp+0x64]
  413527:	(bad)  
  413529:	fs add eax,0x719b7d67
  41352f:	ret    0x887
  413532:	inc    edi
  413533:	inc    esp
  413534:	dec    ebx
  413535:	xor    al,0x57
  413537:	aam    0xf5
  413539:	popa   
  41353a:	mov    edi,0x5ab47a77
  41353f:	(bad)  
  413541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413542:	pop    eax
  413543:	mov    ch,0xe0
  413545:	pop    es
  413546:	push   edx
  413547:	or     eax,0x40d86e6a
  41354c:	or     al,BYTE PTR [eax+0x79d5bb87]
  413552:	inc    ebp
  413553:	push   ebx
  413554:	push   ss
  413555:	ss nop
  413557:	inc    ebx
  413558:	(bad)  
  413559:	aaa    
  41355a:	out    0xa0,eax
  41355c:	jae    0x4135ab
  41355e:	pop    es
  41355f:	push   ecx
  413560:	or     DWORD PTR [ecx-0x6c],0xd3587226
  413567:	xor    bl,0x45
  41356a:	xchg   esi,eax
  41356b:	in     eax,0x2a
  41356d:	mov    esp,0x467fed5a
  413572:	xchg   esi,eax
  413573:	mov    ecx,DWORD PTR [edx]
  413575:	aam    0x4f
  413577:	pop    ds
  413578:	jne    0x413537
  41357a:	icebp  
  41357b:	neg    ah
  41357d:	sbb    al,0xf7
  41357f:	cmc    
  413580:	or     DWORD PTR [edi-0xd],esi
  413583:	ds jnp 0x413561
  413586:	dec    edx
  413587:	or     esi,ebx
  413589:	cli    
  41358a:	dec    ebp
  41358b:	(bad)  
  41358c:	ficom  WORD PTR [esi]
  41358f:	and    edi,DWORD PTR [ebp+0x46]
  413592:	jmp    0x531f:0x6b157d88
  413599:	loopne 0x41356e
  41359b:	jae    0x41360c
  41359d:	jecxz  0x41353d
  41359f:	arpl   WORD PTR [ebp-0x5056e510],di
  4135a5:	or     ecx,DWORD PTR [ecx-0x3b8526b6]
  4135ab:	xchg   ecx,eax
  4135ac:	xchg   esp,eax
  4135ad:	cli    
  4135ae:	jne    0x413559
  4135b0:	shr    ebp,cl
  4135b2:	and    bh,BYTE PTR [eax]
  4135b4:	push   ss
  4135b5:	sbb    esi,DWORD PTR [esi]
  4135b7:	ficom  WORD PTR [eax-0x188bed95]
  4135bd:	jns    0x413545
  4135bf:	test   BYTE PTR [edi+0x60e98996],bh
  4135c5:	xor    esp,DWORD PTR [esi+0x24]
  4135c8:	pop    esp
  4135c9:	and    al,BYTE PTR [ebx+0x67]
  4135cc:	or     eax,0x266bbafc
  4135d1:	xchg   ebp,eax
  4135d2:	data16 (bad) 
  4135d4:	iret   
  4135d5:	mov    eax,0x71cadbbd
  4135da:	rcr    DWORD PTR [eax+ebp*8-0x12],0xb
  4135df:	fcom   QWORD PTR [ebp+0x1d]
  4135e2:	cmp    DWORD PTR [ebx],edx
  4135e4:	frstor [ebp+0x8b8693d]
  4135ea:	mov    WORD PTR [edi+0xcaab5fb],gs
  4135f0:	pop    edx
  4135f1:	mul    ecx
  4135f3:	leave  
  4135f4:	shr    DWORD PTR [edi],1
  4135f6:	xor    BYTE PTR [ebx-0x56a19c31],ch
  4135fc:	sar    BYTE PTR [eax],cl
  4135fe:	add    BYTE PTR [esp+edi*8],0x9
  413602:	in     al,0x8f
  413604:	jmp    0x9afc0901
  413609:	xchg   ebx,eax
  41360a:	outs   dx,DWORD PTR cs:[esi]
  41360c:	add    dh,ch
  41360e:	adc    eax,0xe65abfff
  413613:	ret    0xa4a7
  413616:	xchg   DWORD PTR [esi+ebx*2-0x15],edx
  41361a:	xor    dl,al
  41361c:	(bad)
  413621:	push   edi
  413622:	in     al,dx
  413623:	jne    0x413604
  413625:	push   ss
  413626:	lods   eax,DWORD PTR ds:[esi]
  413627:	rol    DWORD PTR [ebx+edi*8],1
  41362a:	pop    es
  41362b:	cld    
  41362c:	arpl   WORD PTR [esi+ebx*1-0x1b393b01],di
  413633:	xchg   edi,eax
  413634:	fdiv   DWORD PTR [esi-0x78]
  413637:	fild   DWORD PTR [ebp-0x1e]
  41363a:	jmp    0xb233:0xdfb22e42
  413641:	dec    edx
  413642:	cli    
  413643:	inc    ecx
  413644:	lahf   
  413645:	and    al,0xd4
  413647:	push   0xf9b41b1a
  41364c:	jbe    0x4135e2
  41364e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413650:	pop    ecx
  413651:	retf   
  413652:	add    BYTE PTR [edi-0x4320434a],ch
  413658:	adc    ebp,edx
  41365a:	test   BYTE PTR [edx],dh
  41365c:	pop    ss
  41365d:	mov    bl,0x38
  41365f:	dec    esi
  413660:	xor    eax,0xa312712c
  413665:	sub    eax,0x1d5425c2
  41366a:	xor    bl,ch
  41366c:	mov    dl,0xef
  41366e:	jp     0x413694
  413670:	in     eax,dx
  413671:	cld    
  413672:	fld    QWORD PTR [ebx]
  413674:	push   ebp
  413675:	into   
  413676:	repz out 0xf2,al
  413679:	pop    ds
  41367a:	add    eax,0xde7d9c08
  41367f:	adc    ebp,edi
  413681:	push   ds
  413682:	inc    eax
  413683:	retf   0xe783
  413686:	loopne 0x4136e1
  413688:	fimul  WORD PTR [ebx+0x5bb24809]
  41368e:	sbb    al,0x22
  413690:	inc    ebx
  413691:	jecxz  0x4136b4
  413693:	xor    dh,bl
  413695:	push   esi
  413696:	lods   eax,DWORD PTR ds:[esi]
  413697:	sbb    cl,BYTE PTR [ebp+ebp*2-0x26e159c3]
  41369e:	or     al,0x85
  4136a0:	cmp    BYTE PTR [edi-0x51f8640e],0x6f
  4136a7:	(bad)  
  4136a8:	pop    ds
  4136a9:	mul    BYTE PTR [edi-0x1e]
  4136ac:	outs   dx,DWORD PTR cs:[esi]
  4136ae:	data16 sbb ah,BYTE PTR [edi]
  4136b1:	arpl   WORD PTR [ebp-0x3d],bx
  4136b4:	fstp   TBYTE PTR [esi-0x232ac883]
  4136ba:	test   al,0x2a
  4136bc:	in     al,0xbe
  4136be:	js     0x413687
  4136c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136c1:	add    al,0xd6
  4136c3:	jle    0x4136cb
  4136c5:	pop    edx
  4136c6:	mov    dl,0xe7
  4136c8:	lds    edx,FWORD PTR [ebx+0x5b]
  4136cb:	sbb    dl,BYTE PTR [edi]
  4136cd:	loope  0x4136b5
  4136cf:	loope  0x4136d0
  4136d1:	xor    edx,edi
  4136d3:	adc    DWORD PTR [edi],0xfa1cdea4
  4136d9:	imul   ecx,DWORD PTR [eax],0xffffffbf
  4136dc:	pop    es
  4136dd:	ds jge 0x413727
  4136e0:	push   ecx
  4136e1:	or     eax,0x882a1859
  4136e6:	sub    eax,0xffa0b019
  4136eb:	and    edx,DWORD PTR [edi-0x896fa66]
  4136f1:	mov    WORD PTR [ecx+0x50],fs
  4136f4:	scas   al,BYTE PTR es:[edi]
  4136f5:	(bad)  
  4136f6:	dec    edi
  4136f7:	fidivr WORD PTR [esi]
  4136f9:	mov    ebp,0xd0d3936c
  4136fe:	push   0xcc3ce062
  413703:	retf   
  413704:	xchg   BYTE PTR [edi],bl
  413706:	add    DWORD PTR [ecx],edi
  413708:	mov    eax,0x2f4b0d15
  41370d:	ins    BYTE PTR es:[edi],dx
  41370e:	inc    edx
  41370f:	xor    ch,BYTE PTR [ebx]
  413711:	jg     0x41371f
  413713:	jns    0x413702
  413715:	xor    al,0xdb
  413717:	clc    
  413718:	fisubr WORD PTR [esi-0x5313fa47]
  41371e:	inc    edx
  41371f:	jmp    0x8de8:0xcd73b94e
  413726:	outs   dx,BYTE PTR ds:[esi]
  413727:	int3   
  413728:	adc    ah,dl
  41372a:	mov    eax,0xf195d5b
  41372f:	mov    ss:0x560b2392,al
  413735:	mov    esi,ebp
  413737:	mov    esp,0x298440fa
  41373c:	mov    ebx,0x21a750bc
  413741:	out    dx,al
  413742:	aad    0x98
  413744:	in     eax,dx
  413745:	cdq    
  413746:	jg     0x41377e
  413748:	imul   DWORD PTR [ecx+0x1c]
  41374b:	pushf  
  41374c:	mov    ds:0x9933a1ee,eax
  413751:	cwde   
  413752:	dec    edx
  413753:	repz aas 
  413755:	mov    DWORD PTR [ebp-0x44],edx
  413758:	jle    0x413755
  41375a:	add    bh,BYTE PTR [ebp-0x30b3a401]
  413760:	loopne 0x413742
  413762:	mov    edx,0x80a637da
  413767:	daa    
  413768:	mov    ebp,0xde474e8b
  41376d:	daa    
  41376e:	sbb    edx,DWORD PTR [ecx+0x66]
  413771:	mov    ds:0xfa1baed4,al
  413776:	mov    ecx,0x7e76561c
  41377b:	and    ebx,DWORD PTR [edx]
  41377d:	mov    edx,0x4fa15a7c
  413782:	push   0x8a048390
  413787:	addr16 sub al,0x49
  41378a:	jmp    0x6b75:0x58a89363
  413791:	pop    edi
  413792:	sbb    al,0x84
  413794:	xchg   ecx,eax
  413795:	mov    ds:0x4f39eb36,eax
  41379a:	add    bl,BYTE PTR [esi]
  41379c:	cmp    al,BYTE PTR [ebp-0x1bb82825]
  4137a2:	xor    bh,dh
  4137a4:	sub    esi,DWORD PTR [eax-0x67]
  4137a7:	mov    al,0x9f
  4137a9:	push   esi
  4137aa:	iret   
  4137ab:	xchg   DWORD PTR [edi],ecx
  4137ad:	in     eax,dx
  4137ae:	mov    DWORD PTR [esi+0x73],eax
  4137b1:	ret    0x7330
  4137b4:	iret   
  4137b5:	xor    al,0x29
  4137b7:	in     al,dx
  4137b8:	pop    edi
  4137b9:	push   ebx
  4137ba:	rcr    BYTE PTR [ecx],1
  4137bc:	xor    al,0x2d
  4137be:	jmp    0x5509:0xf10b65f0
  4137c5:	xchg   edx,eax
  4137c6:	cs push 0xffffffbf
  4137c9:	and    cl,BYTE PTR [eax]
  4137cb:	jnp    0x4137e8
  4137cd:	aas    
  4137ce:	push   ebx
  4137cf:	pop    eax
  4137d0:	mov    dh,0x1c
  4137d2:	ins    BYTE PTR es:[edi],dx
  4137d3:	jg     0x4137f2
  4137d5:	mov    bl,BYTE PTR [edi-0x267bfb07]
  4137db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137dc:	cli    
  4137dd:	(bad)  
  4137df:	xor    bl,dl
  4137e1:	sar    DWORD PTR [edi-0x57],cl
  4137e4:	lods   al,BYTE PTR ds:[esi]
  4137e5:	pop    es
  4137e6:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4137e8:	jmp    0x41381c
  4137ea:	push   0x99856d40
  4137ef:	js     0x4137d6
  4137f1:	inc    edi
  4137f2:	in     eax,dx
  4137f3:	addr16 inc ebx
  4137f5:	push   ds
  4137f6:	cli    
  4137f7:	mov    cl,0xc0
  4137f9:	dec    esp
  4137fa:	dec    ecx
  4137fb:	fst    QWORD PTR ds:0x55e6ca69
  413801:	jmp    0x413863
  413803:	lock (bad) 
  413805:	out    dx,al
  413806:	jnp    0x413876
  413808:	rcl    BYTE PTR [eax+ebx*2-0x30fe8a21],0x26
  413810:	add    ah,BYTE PTR ss:[eax-0x4a14bf41]
  413817:	jne    0x41379f
  413819:	push   0xffffffc8
  41381b:	cld    
  41381c:	scas   al,BYTE PTR es:[edi]
  41381d:	ds addr16 pop ds
  413820:	rcl    BYTE PTR [edi+ebp*1-0x3a],cl
  413824:	sbb    DWORD PTR [edi-0x6a],0x21
  413828:	les    edx,FWORD PTR [esi]
  41382a:	retf   
  41382b:	adc    al,0xef
  41382d:	mov    esp,0xf753fb0e
  413832:	loopne 0x413801
  413834:	icebp  
  413835:	fcom   QWORD PTR [ecx-0x651cbd61]
  41383b:	outs   dx,DWORD PTR ds:[esi]
  41383c:	mov    ebx,0x96877f01
  413841:	xchg   edi,eax
  413842:	neg    DWORD PTR [esi+esi*1]
  413845:	jmp    0x66b60384
  41384a:	inc    ecx
  41384b:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41384d:	and    DWORD PTR [eiz*8-0x2941bfbb],ecx
  413854:	add    DWORD PTR [ebx],0x84036ffc
  41385a:	sub    eax,DWORD PTR [ebp+0x398766e9]
  413860:	int3   
  413861:	cld    
  413862:	(bad)  
  413863:	push   edi
  413864:	mov    ebx,0x438838d5
  413869:	and    BYTE PTR [ebx+eiz*4+0x24],dl
  41386d:	sub    al,0xea
  41386f:	fistp  WORD PTR [edi-0x2f4b62b3]
  413875:	xchg   ecx,eax
  413876:	mov    cl,0xf
  413878:	ret    0xd496
  41387b:	ins    DWORD PTR es:[edi],dx
  41387c:	lods   al,BYTE PTR ds:[esi]
  41387d:	and    BYTE PTR ds:0x8135fdab,dh
  413883:	leave  
  413884:	cmp    eax,0x27b226cf
  413889:	aaa    
  41388a:	push   ecx
  41388b:	cmp    DWORD PTR [ebp+0x6a],esi
  41388e:	sar    BYTE PTR [eax-0x305c6efe],0xf0
  413895:	sbb    BYTE PTR [edi-0x7a],al
  413898:	pop    esp
  413899:	test   BYTE PTR [esp+edi*2],0xfe
  41389d:	iret   
  41389e:	popf   
  41389f:	(bad)  
  4138a0:	jnp    0x413882
  4138a2:	dec    DWORD PTR [esp+edx*1]
  4138a5:	xchg   esi,eax
  4138a6:	dec    DWORD PTR [ebp+0x63]
  4138a9:	int    0x93
  4138ab:	sbb    ah,BYTE PTR [ebp-0x74]
  4138ae:	rcl    bl,cl
  4138b0:	inc    esp
  4138b1:	mov    dh,BYTE PTR [eax-0xa]
  4138b4:	rcl    BYTE PTR [eax+0x68],0xf7
  4138b8:	and    DWORD PTR [eax],ebp
  4138ba:	cmp    BYTE PTR [esi+0x4],al
  4138bd:	pop    ecx
  4138be:	xor    eax,0xbf53ece0
  4138c3:	xchg   ebp,eax
  4138c4:	jo     0x4138c7
  4138c6:	hlt    
  4138c7:	jp     0x4138f6
  4138c9:	stos   DWORD PTR es:[edi],eax
  4138ca:	out    dx,eax
  4138cb:	jb     0x413895
  4138cd:	outs   dx,BYTE PTR ds:[esi]
  4138ce:	std    
  4138cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138d0:	adc    ebp,ebx
  4138d2:	scas   eax,DWORD PTR es:[edi]
  4138d3:	lock les ebx,FWORD PTR [edi]
  4138d6:	xor    ch,BYTE PTR [edx+0x4c]
  4138d9:	jnp    0x413940
  4138db:	cmp    BYTE PTR [edx-0x7d],bh
  4138de:	sbb    ch,BYTE PTR [ebp-0x32]
  4138e1:	loope  0x4138b7
  4138e3:	jmp    0x6470f864
  4138e8:	xlat   BYTE PTR ds:[ebx]
  4138e9:	inc    ebp
  4138ea:	adc    eax,DWORD PTR [eax]
  4138ec:	shrd   DWORD PTR [esi],ebp,0xf4
  4138f0:	xor    ebp,edx
  4138f2:	iret   
  4138f3:	push   ebp
  4138f4:	cmc    
  4138f5:	inc    ecx
  4138f6:	repz adc BYTE PTR ds:[ecx+eiz*8+0x6c4aa6dd],0x69
  413900:	imul   ebp,DWORD PTR [esi+ebp*4-0x4],0xffffffd0
  413905:	test   al,0x40
  413907:	rol    edx,cl
  413909:	xor    DWORD PTR [eax-0x4ea6604],0xffffffce
  413910:	sub    eax,0xbb476ee2
  413915:	mov    dl,0x7c
  413917:	paddsb mm4,QWORD PTR [eax]
  41391a:	inc    ebp
  41391b:	mov    esp,0xd03b7721
  413920:	outs   dx,BYTE PTR ds:[esi]
  413921:	cmp    bl,BYTE PTR [eax]
  413923:	cmp    edi,DWORD PTR [edx]
  413925:	sub    BYTE PTR [ebx],0x8f
  413928:	(bad)  
  413929:	fisub  DWORD PTR [edx-0x53]
  41392c:	push   esp
  41392d:	dec    ecx
  41392e:	mov    ds:0xfca226e6,eax
  413933:	jno    0x413989
  413935:	jae    0x4138f3
  413937:	add    dl,BYTE PTR [eax-0x3d4cf32f]
  41393d:	sbb    DWORD PTR [edx+0x1beba13e],0xffffffed
  413944:	fwait
  413945:	and    al,0x83
  413947:	ror    BYTE PTR [edx+0x4cc985cb],cl
  41394d:	jbe    0x413933
  41394f:	inc    ebp
  413950:	inc    ebx
  413951:	ins    DWORD PTR es:[edi],dx
  413952:	mov    ch,0x47
  413954:	(bad)
  413957:	loop   0x4139ad
  413959:	pop    ss
  41395a:	scas   al,BYTE PTR es:[edi]
  41395b:	loopne 0x413982
  41395d:	mov    al,bh
  41395f:	leave  
  413960:	in     eax,dx
  413961:	outs   dx,DWORD PTR ds:[esi]
  413962:	ins    BYTE PTR es:[edi],dx
  413963:	dec    eax
  413964:	aad    0xa7
  413966:	sar    BYTE PTR [eax+0x16e86c37],0x8e
  41396d:	inc    ebp
  41396e:	add    esi,edx
  413970:	mov    esp,0x565c23e2
  413975:	lahf   
  413976:	mov    ah,0xc8
  413978:	add    ebx,ecx
  41397a:	sahf   
  41397b:	bound  esp,QWORD PTR [ebp-0x9b77e76]
  413981:	mov    al,BYTE PTR [ebx]
  413983:	inc    edx
  413984:	lock daa 
  413986:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413987:	cmp    esi,DWORD PTR [edx-0x19241896]
  41398d:	xor    eax,0xcc7757c
  413992:	ficomp DWORD PTR [eax-0x3e]
  413995:	jbe    0x413930
  413997:	jnp    0x413995
  413999:	push   esp
  41399a:	sbb    dl,BYTE PTR [esp+edi*4]
  41399d:	cli    
  41399e:	mov    edx,0x1eb362e8
  4139a3:	addr16 test eax,0x5dc94c63
  4139a9:	adc    BYTE PTR [eax+0x5d54f338],dh
  4139af:	outs   dx,DWORD PTR ds:[esi]
  4139b0:	fadd   DWORD PTR [edx+0x2fdb1e87]
  4139b6:	sub    bh,BYTE PTR [esi*8+0x1d843d23]
  4139bd:	call   0x30072272
  4139c2:	pop    esi
  4139c3:	xor    DWORD PTR [ecx+0x244b44dc],esi
  4139c9:	call   0x96be:0xe69b1c8c
  4139d0:	call   0x4338:0x253243ca
  4139d7:	xchg   edx,eax
  4139d8:	xor    bl,BYTE PTR [esi-0x3f1a8cab]
  4139de:	in     al,0xa5
  4139e0:	adc    edi,DWORD PTR [eax+0x1d]
  4139e3:	pop    esi
  4139e4:	and    DWORD PTR [ebp+0x60c8588e],0xcc3fafb7
  4139ee:	adc    DWORD PTR [ebx-0x52eb4cad],0xfa52d5d5
  4139f8:	fdiv   DWORD PTR [edi+0x52d7aa1b]
  4139fe:	adc    eax,0x2af5c3c7
  413a03:	in     eax,0xd1
  413a05:	in     al,0x35
  413a07:	addr16 test eax,0x21b6781a
  413a0d:	xor    BYTE PTR [ebx],bl
  413a0f:	fwait
  413a10:	stos   BYTE PTR es:[edi],al
  413a11:	stc    
  413a12:	inc    esp
  413a13:	or     DWORD PTR [ebx-0x75c0519],esp
  413a19:	jmp    0x231f:0xa150190e
  413a20:	(bad)  
  413a21:	rcl    eax,0xae
  413a24:	push   0x8c0bbceb
  413a29:	out    dx,al
  413a2a:	out    dx,eax
  413a2b:	xchg   ebx,eax
  413a2c:	push   0x27ea084
  413a31:	xor    ebp,DWORD PTR [esi+edx*1-0x223bd5b4]
  413a38:	jns    0x4139ba
  413a3a:	jecxz  0x413a99
  413a3c:	cwde   
  413a3d:	mov    cl,0xc4
  413a3f:	inc    edx
  413a40:	xchg   esp,eax
  413a41:	add    BYTE PTR [eax],0xad
  413a44:	aad    0xfe
  413a46:	pop    eax
  413a47:	push   cs
  413a48:	rcr    BYTE PTR [ecx+0x17],0x36
  413a4c:	mov    ah,0x63
  413a4e:	iret   
  413a4f:	idiv   edi
  413a51:	bound  edi,QWORD PTR [ecx+edx*8+0x37]
  413a55:	ss loop 0x413a3c
  413a58:	stos   DWORD PTR es:[edi],eax
  413a59:	mov    BYTE PTR [ecx+0x49552139],ch
  413a5f:	fnstcw WORD PTR [eax-0x62]
  413a62:	jg     0x413a09
  413a64:	adc    ch,BYTE PTR [edx+eax*4+0x4586ddd3]
  413a6b:	mov    al,0x27
  413a6d:	cmp    ah,cl
  413a6f:	mov    esi,0x4ceb5729
  413a74:	mov    eax,0x5c5b761c
  413a79:	paddb  mm4,QWORD PTR [ebp-0x1255342b]
  413a80:	dec    ebx
  413a81:	sbb    eax,0xd8393d8
  413a86:	jl     0x413abd
  413a88:	stc    
  413a89:	je     0x413a5f
  413a8b:	ss mov ebp,0xb9d9ce
  413a91:	mov    bh,0x35
  413a93:	pop    edi
  413a94:	cmp    eax,0xdb0a2989
  413a99:	jnp    0x413aa1
  413a9b:	pop    ebx
  413a9c:	test   BYTE PTR [ecx],al
  413a9e:	push   ss
  413a9f:	das    
  413aa0:	cmc    
  413aa1:	push   ss
  413aa2:	das    
  413aa3:	xchg   ecx,eax
  413aa4:	in     al,0xa6
  413aa6:	ds popa 
  413aa8:	out    0x8b,al
  413aaa:	lahf   
  413aab:	or     DWORD PTR [ebx],esi
  413aad:	lock pop ebx
  413aaf:	stc    
  413ab0:	jmp    0x413a81
  413ab2:	mov    eax,0x290e6c35
  413ab7:	pop    edi
  413ab8:	add    al,0xde
  413aba:	jb     0x413a68
  413abc:	jb     0x413ae2
  413abe:	into   
  413abf:	jnp    0x413a59
  413ac1:	std    
  413ac2:	gs (bad) 
  413ac4:	adc    edx,DWORD PTR [ecx+0x24]
  413ac7:	add    BYTE PTR [esi],ah
  413ac9:	mov    ebp,0x38522954
  413ace:	sti    
  413acf:	cld    
  413ad0:	scas   eax,DWORD PTR es:[edi]
  413ad1:	xchg   esi,eax
  413ad2:	mov    eax,ds:0x26bcf8d4
  413ad7:	mov    bl,0x9a
  413ad9:	cmova  eax,DWORD PTR [ebx+ebx*1+0x787a248e]
  413ae1:	mov    DWORD PTR [eax+0x23],ebx
  413ae4:	test   BYTE PTR [ebx+0x30],bh
  413ae7:	retf   
  413ae8:	lock lea ebp,ds:0x940b1b1c
  413aef:	cli    
  413af0:	stos   DWORD PTR es:[edi],eax
  413af1:	pushf  
  413af2:	mov    esp,0xf7f80901
  413af7:	xchg   edi,eax
  413af8:	out    dx,al
  413af9:	jnp    0x413ad4
  413afb:	fsub   st,st(7)
  413afd:	ret    
  413afe:	fcomip st,st(2)
  413b00:	ins    BYTE PTR es:[edi],dx
  413b01:	jge    0x413b19
  413b03:	add    dl,BYTE PTR [edi]
  413b05:	icebp  
  413b06:	lods   eax,DWORD PTR ds:[esi]
  413b07:	cwde   
  413b08:	lea    edx,[ebp+ebx*8+0x788c9aef]
  413b0f:	cmp    DWORD PTR [esi-0x18],0x941b396a
  413b16:	das    
  413b17:	pop    eax
  413b18:	mov    ah,0x14
  413b1a:	mov    dh,BYTE PTR [ecx-0x11]
  413b1d:	fs adc edx,edx
  413b20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b21:	cmp    DWORD PTR [ecx-0x62171801],edx
  413b27:	sub    al,BYTE PTR [ebx-0x337d7e29]
  413b2d:	stc    
  413b2e:	scas   eax,DWORD PTR es:[edi]
  413b2f:	jne    0x413bad
  413b31:	jb     0x413ac5
  413b33:	(bad)  
  413b34:	cmp    BYTE PTR [ecx],bl
  413b36:	ja     0x413b9c
  413b38:	mov    esp,0x4ebe6d01
  413b3d:	popa   
  413b3e:	fwait
  413b3f:	or     BYTE PTR [eax],ch
  413b41:	xchg   esp,eax
  413b42:	pop    esp
  413b43:	mov    ebp,0xf8fa5fa4
  413b48:	jnp    0x413b8e
  413b4a:	loop   0x413b6f
  413b4c:	rol    DWORD PTR [edi-0x1aa8b75d],cl
  413b52:	sub    esi,0x1d5379f7
  413b58:	adc    al,0x63
  413b5a:	imul   esi,DWORD PTR [ecx-0x6529a825],0x7db7e917
  413b64:	cmp    BYTE PTR [ebx],cl
  413b66:	add    DWORD PTR [esp+ebp*4+0x186652c],0x394482f8
  413b71:	lods   al,BYTE PTR ds:[esi]
  413b72:	scas   eax,DWORD PTR es:[edi]
  413b73:	sti    
  413b74:	call   0xca8d:0x708e2139
  413b7b:	rcr    BYTE PTR [edi-0xa9fbc],1
  413b81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b82:	test   eax,0x72249760
  413b87:	repz adc cl,BYTE PTR [edx-0x23361de0]
  413b8e:	fstp   QWORD PTR [edx+0x36a52813]
  413b94:	pop    edi
  413b95:	pop    es
  413b96:	popf   
  413b97:	in     al,dx
  413b98:	pop    eax
  413b99:	popf   
  413b9a:	std    
  413b9b:	pop    esi
  413b9c:	icebp  
  413b9d:	lds    esp,FWORD PTR [edi-0x59]
  413ba0:	fisttp QWORD PTR [ebx+0x31]
  413ba3:	jge    0x413bf0
  413ba5:	mov    bh,0x5e
  413ba7:	dec    eax
  413ba8:	stos   DWORD PTR es:[edi],eax
  413ba9:	mov    ds:0x10859ec8,al
  413bae:	cwde   
  413baf:	xor    DWORD PTR [ecx],0xffffffe6
  413bb2:	mov    ah,0x69
  413bb4:	adc    al,0x9e
  413bb6:	mov    bh,0xf9
  413bb8:	xchg   ebx,eax
  413bb9:	and    al,0xa9
  413bbb:	retf   
  413bbc:	pop    ss
  413bbd:	xor    al,0x4c
  413bbf:	out    dx,al
  413bc0:	xor    dh,BYTE PTR [ecx+0x31beccf1]
  413bc6:	ja     0x413c05
  413bc8:	pop    ds
  413bc9:	mov    al,ds:0x3ba16de5
  413bce:	mov    al,0x5a
  413bd0:	xor    al,bh
  413bd2:	ret    
  413bd3:	pop    ss
  413bd4:	stos   DWORD PTR es:[edi],eax
  413bd5:	jp     0x413ba3
  413bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bd9:	and    ch,BYTE PTR [ecx-0x35]
  413bdc:	pop    es
  413bdd:	ss loop 0x413bfb
  413be0:	daa    
  413be1:	xor    edx,DWORD PTR [ebx+ecx*4+0x4d]
  413be5:	clc    
  413be6:	xor    ecx,eax
  413be8:	mov    eax,DWORD PTR [ebp+0x10]
  413beb:	add    ecx,esi
  413bed:	mov    DWORD PTR [eax],ecx
  413bef:	pop    edi
  413bf0:	pop    esi
  413bf1:	pop    ebx
  413bf2:	leave  
  413bf3:	ret    0xc
  413bf6:	jne    0x413c0b
  413bf8:	adc    BYTE PTR [eax],al
  413bfa:	std    
  413bfb:	push   ds
  413bfc:	adc    BYTE PTR [eax],al
  413bfe:	aas    
  413bff:	adc    BYTE PTR fs:[eax],al
  413c02:	sbb    cl,BYTE PTR [esi]
  413c04:	adc    BYTE PTR [eax],al
  413c06:	sbb    BYTE PTR [eax+0x10],dl
  413c09:	add    BYTE PTR [eax],ah
  413c0b:	push   es
  413c0c:	adc    BYTE PTR [eax],al
  413c0e:	out    dx,al
  413c0f:	jg     0x413c21
  413c11:	add    BYTE PTR [ebx],al
  413c13:	dec    edi
  413c14:	adc    BYTE PTR [eax],al
  413c16:	mov    esp,0x5500103b
  413c1b:	jns    0x413c2d
  413c1d:	add    BYTE PTR [edx],ch
  413c1f:	inc    eax
  413c20:	adc    BYTE PTR [eax],al
  413c22:	sbb    BYTE PTR ds:0x3d1c0041,bh
  413c28:	inc    ecx
  413c29:	add    BYTE PTR [eax],ah
  413c2b:	cmp    eax,0x3d240041
  413c30:	inc    ecx
  413c31:	add    BYTE PTR [eax],ch
  413c33:	cmp    eax,0x3d2c0041
  413c38:	inc    ecx
  413c39:	add    BYTE PTR [eax],dh
  413c3b:	cmp    eax,0x3d340041
  413c40:	inc    ecx
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esi+0x4df185],bh
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [edx],al
  413c5d:	add    BYTE PTR [eax],al
  413c5f:	add    BYTE PTR [eax+0x0],dl
  413c62:	add    BYTE PTR [eax],al
  413c64:	inc    eax
  413c65:	cmp    eax,0x31400001
  413c6a:	add    DWORD PTR [eax],eax
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	inc    ebp
  413c6e:	adc    BYTE PTR [eax],al
  413c70:	inc    esp
  413c71:	cmp    edx,DWORD PTR [eax]
  413c73:	add    BYTE PTR [edi+0x4e],bl
  413c76:	adc    BYTE PTR [eax],al
  413c78:	push   0x4b
  413c7a:	adc    BYTE PTR [eax],al
  413c7c:	cmp    edx,DWORD PTR fs:[eax]
  413c7f:	add    BYTE PTR [eax+0x43001057],bl
  413c85:	sbb    dl,BYTE PTR [eax]
  413c87:	add    BYTE PTR [esi+0x39],bl
  413c8a:	adc    BYTE PTR [eax],al
  413c8c:	idiv   BYTE PTR [ebx]
  413c8e:	inc    ecx
  413c8f:	add    dl,bh
  413c91:	cmp    eax,DWORD PTR [ecx+0x0]
  413c94:	(bad)  
  413c95:	cmp    eax,DWORD PTR [ecx+0x0]
  413c98:	add    bh,BYTE PTR [ecx+eax*2]
  413c9b:	add    BYTE PTR [esi],al
  413c9d:	cmp    al,0x41
  413c9f:	add    BYTE PTR [edx],cl
  413ca1:	cmp    al,0x41
  413ca3:	add    BYTE PTR [esi],cl
  413ca5:	cmp    al,0x41
  413ca7:	add    BYTE PTR [edx],dl
  413ca9:	cmp    al,0x41
  413cab:	add    BYTE PTR [esi],dl
  413cad:	cmp    al,0x41
  413caf:	add    BYTE PTR [edx],bl
  413cb1:	cmp    al,0x41
  413cb3:	add    BYTE PTR [esi],bl
  413cb5:	cmp    al,0x41
  413cb7:	add    al,bl
  413cb9:	cmp    al,0x41
  413cbb:	add    ah,bl
  413cbd:	cmp    al,0x41
  413cbf:	add    al,ah
  413cc1:	cmp    al,0x41
  413cc3:	add    ah,ah
  413cc5:	cmp    al,0x41
  413cc7:	add    al,ch
  413cc9:	cmp    al,0x41
  413ccb:	add    ah,ch
  413ccd:	cmp    al,0x41
  413ccf:	add    al,dh
  413cd1:	cmp    al,0x41
  413cd3:	add    ah,dh
  413cd5:	cmp    al,0x41
  413cd7:	add    BYTE PTR [ebp+0x16],ah
  413cda:	adc    BYTE PTR [eax],al
  413cdc:	sub    BYTE PTR [ecx+0x10],0x0
  413ce0:	cli    
  413ce1:	adc    BYTE PTR [bx+si],al
  413ce4:	sbb    BYTE PTR [ecx],al
  413ce6:	adc    BYTE PTR [eax],al
  413ce8:	pop    edi
  413ce9:	inc    esp
  413cea:	adc    BYTE PTR [eax],al
  413cec:	sbb    BYTE PTR [edx],ch
  413cee:	adc    BYTE PTR [eax],al
  413cf0:	in     eax,dx
  413cf1:	pop    ss
  413cf2:	adc    BYTE PTR [eax],al
  413cf4:	pop    esp
  413cf5:	sub    BYTE PTR [eax],dl
  413cf7:	add    BYTE PTR [esp+edi*1+0x41],ch
  413cfb:	add    BYTE PTR [eax+0x3c],dh
  413cfe:	inc    ecx
  413cff:	add    BYTE PTR [esp+edi*1+0x41],dh
  413d03:	add    BYTE PTR [eax+0x3c],bh
  413d06:	inc    ecx
  413d07:	add    BYTE PTR [esp+edi*1+0x41],bh
  413d0b:	add    BYTE PTR [eax-0x7bffbec4],al
  413d11:	cmp    al,0x41
  413d13:	add    BYTE PTR [eax-0x17ffbec4],cl
  413d19:	aaa    
  413d1a:	adc    BYTE PTR [eax],al
  413d1c:	cmp    DWORD PTR [esi],0x51e90010
  413d22:	adc    BYTE PTR [eax],al
  413d24:	push   cs
  413d25:	dec    eax
  413d26:	adc    BYTE PTR [eax],al
  413d28:	mov    ah,0x22
  413d2a:	adc    BYTE PTR [eax],al
  413d2c:	lock xor BYTE PTR [eax],dl
  413d2f:	add    BYTE PTR [edi+0x6b],ah
  413d32:	adc    BYTE PTR [eax],al
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	or     eax,0x10
  413d3a:	add    BYTE PTR [eax],al
  413d3c:	add    BYTE PTR [eax],al
  413d3e:	add    BYTE PTR [eax],al
  413d40:	push   edx
  413d41:	push   ebx
  413d42:	inc    esp
  413d43:	push   ebx
  413d44:	int3   
  413d45:	mov    fs,WORD PTR [eax+0x18d77b9]
  413d4b:	inc    edx
  413d4c:	test   BYTE PTR [esi],cl
  413d4e:	jnp    0x413d79
  413d50:	xchg   ch,bh
  413d52:	stos   DWORD PTR es:[edi],eax
  413d53:	pop    ecx
  413d54:	add    DWORD PTR [eax],eax
  413d56:	add    BYTE PTR [eax],al
  413d58:	inc    ebp
  413d59:	cmp    bl,BYTE PTR [ecx+ecx*2+0x6e]
  413d5d:	jae    0x413dd3
  413d5f:	popa   
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	ins    BYTE PTR es:[edi],dx
  413d62:	and    BYTE PTR [eax+0x61],dl
  413d65:	je     0x413dcf
  413d67:	pop    esp
  413d68:	push   ebx
  413d69:	outs   dx,BYTE PTR gs:[esi]
  413d6b:	fs push ebx
  413d6d:	dec    ebp
  413d6e:	push   ebx
  413d6f:	pop    esp
  413d70:	dec    ebp
  413d71:	popa   
  413d72:	imul   ebp,DWORD PTR [esi+0x5c],0x46627553
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	ins    BYTE PTR es:[edi],dx
  413d7b:	fs gs jb 0x413ddb
  413d7f:	dec    ecx
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413d85:	gs jae 0x413de4
  413d88:	dec    ecx
  413d89:	outs   dx,BYTE PTR ds:[esi]
  413d8a:	outs   dx,WORD PTR ds:[esi]
  413d8c:	inc    ecx
  413d8d:	jo     0x413dff
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [eax],al
  413d93:	add    BYTE PTR [esi+0x4df185],bh
  413d99:	add    BYTE PTR [eax],al
  413d9b:	add    dl,al
  413d9d:	cmp    eax,0x10001
  413da2:	add    BYTE PTR [eax],al
  413da4:	add    DWORD PTR [eax],eax
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    DWORD PTR [eax],eax
  413daa:	add    BYTE PTR [eax],al
  413dac:	mov    eax,0xbc00013d
  413db1:	cmp    eax,0x3dc00001
  413db6:	add    DWORD PTR [eax],eax
  413db8:	mov    ds:0xce000026,al
  413dbd:	cmp    eax,0x1
  413dc2:	push   ebx
  413dc3:	jns    0x413e32
  413dc5:	bound  ebp,QWORD PTR [edi+0x6c]
  413dc8:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  413dcf:	inc    ebx
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	outs   dx,DWORD PTR ds:[esi]
  413dd2:	jae    0x413e39
  413dd4:	push   edi
  413dd5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  413ddc:	popa   
  413ddd:	je     0x413e48
  413ddf:	outs   dx,DWORD PTR ds:[esi]
  413de0:	outs   dx,BYTE PTR ds:[esi]
  413de1:	inc    ebx
  413de2:	ins    BYTE PTR es:[edi],dx
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	jae    0x413e4b
  413de6:	push   edi
  413de7:	.byte 0x69
